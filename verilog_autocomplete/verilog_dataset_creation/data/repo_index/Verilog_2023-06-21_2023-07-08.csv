,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/leonow32/verilog-fpga.git,2023-07-05 16:10:31+00:00,Many peripherals in Verilog ready to use,3,leonow32/verilog-fpga,662667491,Verilog,verilog-fpga,5123,22,2024-03-05 21:01:36+00:00,"['altera', 'cpld', 'fpga', 'lattice', 'machxo', 'machxo2', 'systemverilog', 'verilog', 'xilinx']",https://api.github.com/licenses/mit
1,https://github.com/aq12138/Git_Bilbili.git,2023-06-26 14:42:11+00:00,verilog,2,aq12138/Git_Bilbili,658814105,Verilog,Git_Bilbili,126,18,2024-04-10 07:12:20+00:00,[],None
2,https://github.com/linux1299/DandRiscvSoC.git,2023-06-25 11:53:56+00:00,,0,linux1299/DandRiscvSoC,658315926,Verilog,DandRiscvSoC,147195,9,2024-03-25 10:17:20+00:00,[],None
3,https://github.com/suraj1singh2460/Verilog-HDL-.git,2023-06-30 11:47:12+00:00,Basic Verilog Coding,1,suraj1singh2460/Verilog-HDL-,660606364,Verilog,Verilog-HDL-,28,9,2023-10-10 03:03:46+00:00,[],None
4,https://github.com/johnwinans/Verilog-Examples.git,2023-06-25 16:22:54+00:00,,1,johnwinans/Verilog-Examples,658400668,Verilog,Verilog-Examples,233,9,2024-04-04 12:01:44+00:00,[],https://api.github.com/licenses/gpl-3.0
5,https://github.com/greatscottgadgets/luna-soc.git,2023-06-23 15:09:17+00:00,Amaranth HDL libary for building USB-capable SoC designs.,1,greatscottgadgets/luna-soc,657669877,Verilog,luna-soc,242,8,2024-03-21 19:18:09+00:00,[],https://api.github.com/licenses/bsd-3-clause
6,https://github.com/ZhiyuanYan/RISCV-design.git,2023-07-06 12:56:13+00:00,"Some RISCV cores based on Verilog design, for SQED detection",0,ZhiyuanYan/RISCV-design,663050865,Verilog,RISCV-design,15237,8,2024-03-13 06:47:34+00:00,[],None
7,https://github.com/antongale/arcade-taitosj.git,2023-07-03 14:10:10+00:00,Taito System SJ Analogue Pocket Core,0,antongale/arcade-taitosj,661729675,Verilog,arcade-taitosj,766,8,2023-07-07 17:53:36+00:00,[],https://api.github.com/licenses/gpl-3.0
8,https://github.com/skerr92/DungV.git,2023-06-23 18:58:49+00:00,"experimental open source CPU with instruction decoder, ALU (add, sub, and, or, not, xor, rotL,rotR), multiplier, divider, etc..",1,skerr92/DungV,657749049,Verilog,DungV,373,6,2024-04-04 21:11:17+00:00,[],https://api.github.com/licenses/mit
9,https://github.com/Cocororoo/GenshinMIPS.git,2023-06-28 11:50:47+00:00,2023NSCSCC龙芯杯个人赛,0,Cocororoo/GenshinMIPS,659709378,Verilog,GenshinMIPS,112,6,2024-03-27 15:14:47+00:00,[],None
10,https://github.com/maksyuki/StarrySky-res.git,2023-06-28 02:34:44+00:00,,1,maksyuki/StarrySky-res,659518175,Verilog,StarrySky-res,7853,5,2024-01-09 13:08:50+00:00,[],https://api.github.com/licenses/gpl-3.0
11,https://github.com/Hashmi-Vardhan/AHB-to-APB-Bridge.git,2023-07-06 14:12:03+00:00,The AHB to APB bridge is an AHB slave and the only APB master which provides an interface between the highspeed AHB and the low-power APB. Read and write transfers on the AHB are converted into equivalent transfers on the APB.,2,Hashmi-Vardhan/AHB-to-APB-Bridge,663083400,Verilog,AHB-to-APB-Bridge,7,5,2024-03-24 15:06:31+00:00,[],None
12,https://github.com/ibraheemalayan/Verilog_RISC_Processor.git,2023-06-26 10:45:04+00:00,a simple multi-cycle RISC Verilog processor with architecture similar to MIPS,0,ibraheemalayan/Verilog_RISC_Processor,658713494,Verilog,Verilog_RISC_Processor,3609,5,2023-12-28 09:17:10+00:00,"['architecture', 'computer-architecture', 'mips', 'risc', 'university-project', 'verilog']",None
13,https://github.com/Lucky8882/Reed_solomon-ECC-Encoder-Design-with-Verilog.git,2023-06-29 05:37:16+00:00,,0,Lucky8882/Reed_solomon-ECC-Encoder-Design-with-Verilog,660038529,Verilog,Reed_solomon-ECC-Encoder-Design-with-Verilog,201,4,2024-03-09 10:37:28+00:00,[],None
14,https://github.com/Escapeey/CpuDesign-.git,2023-06-21 02:51:38+00:00,计算机组成原理 十条指令CPU设计,0,Escapeey/CpuDesign-,656469221,Verilog,CpuDesign-,367,4,2023-06-24 13:02:55+00:00,[],None
15,https://github.com/esl-epfl/x-heep-femu.git,2023-06-30 10:33:23+00:00,X-HEEP-based FPGA EMUlation Platform (FEMU).,4,esl-epfl/x-heep-femu,660582550,Verilog,x-heep-femu,3406,4,2024-01-25 12:46:32+00:00,[],None
16,https://github.com/akash-ambekar/VSD-5-DAYS-TCL-SCRIPTING-WORKSHOP.git,2023-07-04 16:27:45+00:00,TCL Workshop: From Introduction to Advanced Scripting Techniques in Design and Synthesis,0,akash-ambekar/VSD-5-DAYS-TCL-SCRIPTING-WORKSHOP,662227877,Verilog,VSD-5-DAYS-TCL-SCRIPTING-WORKSHOP,982,4,2024-01-06 20:11:07+00:00,[],None
17,https://github.com/fardinabbasi/RISC-V_Processor_Pipelined.git,2023-07-08 13:38:55+00:00,Digital Systems 2 Course [ECE 778] - CA4 - Spring 2023 - University of Tehran - Dr. Safari,1,fardinabbasi/RISC-V_Processor_Pipelined,663937590,Verilog,RISC-V_Processor_Pipelined,900,4,2024-03-22 21:50:19+00:00,"['computer-architecture', 'computer-arithmetic', 'digital-systems', 'modelsim', 'pipelined-processors', 'risc-v', 'verilog']",None
18,https://github.com/BogdanW3/nessy.git,2023-07-05 21:56:38+00:00,Projekat iz Arhitekture Racunara (AR-a),0,BogdanW3/nessy,662780470,Verilog,nessy,1736,4,2024-02-27 08:43:11+00:00,"['6502', '6502-processor', 'console', 'cyclone-iii', 'fpga', 'quartus']",None
19,https://github.com/SinisterXV/SOUP.git,2023-07-04 12:45:21+00:00,A DLX-like processor implementation,0,SinisterXV/SOUP,662139288,Verilog,SOUP,52879,3,2023-11-25 15:54:59+00:00,[],None
20,https://github.com/dh219/IDE_Adapter_Autoswap.git,2023-06-21 10:45:32+00:00,Auto-byteswitching IDE adapter,1,dh219/IDE_Adapter_Autoswap,656640695,Verilog,IDE_Adapter_Autoswap,65,3,2023-11-14 11:50:20+00:00,[],https://api.github.com/licenses/gpl-2.0
21,https://github.com/yagnavivek/VSD_TCL_Workshop.git,2023-07-05 04:40:08+00:00,,1,yagnavivek/VSD_TCL_Workshop,662408804,Verilog,VSD_TCL_Workshop,733,3,2023-10-31 10:24:01+00:00,[],None
22,https://github.com/suchuankai/IC-contest.git,2023-07-03 16:47:15+00:00,IC-contest 2012~2023 preliminary,0,suchuankai/IC-contest,661789902,Verilog,IC-contest,1683,3,2023-09-27 06:20:24+00:00,['ic-contest'],None
23,https://github.com/RIOSMPW/CyberRio-V1.0.git,2023-06-27 04:07:42+00:00,"A small RISC-V core written in synthesizable Verilog, with the majority of the Verilog code implementation done using GPT-4, that supports the RV32I unprivileged ISA and parts of the privileged ISA, namely M-mode.",0,RIOSMPW/CyberRio-V1.0,659058969,Verilog,CyberRio-V1.0,35360,3,2024-04-07 22:21:35+00:00,[],https://api.github.com/licenses/apache-2.0
24,https://github.com/yxsyxs/cameralink.git,2023-07-06 02:05:47+00:00,cameralink take over and send,1,yxsyxs/cameralink,662837422,,cameralink,51,3,2024-03-19 17:40:44+00:00,[],None
25,https://github.com/Haragopalakrishna/100-DAYS-OF-RTL.git,2023-07-07 15:08:41+00:00,100 DAYS OF RTL,0,Haragopalakrishna/100-DAYS-OF-RTL,663555165,Verilog,100-DAYS-OF-RTL,11832,3,2023-11-30 00:00:07+00:00,[],None
26,https://github.com/controlpaths/buck_rtl.git,2023-07-01 20:54:11+00:00,Buck RTL model ,0,controlpaths/buck_rtl,661115848,Verilog,buck_rtl,839,3,2023-08-30 20:00:16+00:00,[],None
27,https://github.com/jaganmuthu/ATP-machine-controller-system.git,2023-06-26 17:07:20+00:00,,0,jaganmuthu/ATP-machine-controller-system,658875374,Verilog,ATP-machine-controller-system,24,3,2023-07-20 06:25:33+00:00,[],https://api.github.com/licenses/gpl-3.0
28,https://github.com/SoulCalDan/Gamecube-to-Nintendo64-Adapter.git,2023-06-27 03:40:24+00:00,A FPGA based Gamecube controller adapter for Nintendo 64,0,SoulCalDan/Gamecube-to-Nintendo64-Adapter,659051383,Verilog,Gamecube-to-Nintendo64-Adapter,1983,2,2023-10-10 17:23:59+00:00,[],None
29,https://github.com/varunram2001/AHB2APB-Bridge-Design.git,2023-06-30 03:06:22+00:00,This repository contains the Verliog codes and test bench that I have designed as a part of my internship at Maven Silicon Bengaluru Pvt Ltd. The task was to design an AHB2APB bridge for the AMBA controller. The internship was instructor led. ,0,varunram2001/AHB2APB-Bridge-Design,660445697,Verilog,AHB2APB-Bridge-Design,1206,2,2024-03-22 21:21:11+00:00,"['bus-architecture', 'verilog', 'verilog-hdl', 'advanced-microcontoller-bus-architecture']",None
30,https://github.com/theuppercaseguy/FYP--Risc-V-32-bit-Matrix-Mac.git,2023-07-04 06:19:32+00:00,A risc v based architecture to develop a core/ processor which is capable of Matrix MAC Operations,0,theuppercaseguy/FYP--Risc-V-32-bit-Matrix-Mac,661995564,Verilog,FYP--Risc-V-32-bit-Matrix-Mac,596352,2,2024-03-10 19:19:05+00:00,[],https://api.github.com/licenses/gpl-3.0
31,https://github.com/Mahfuzar148/Verilog.git,2023-07-07 15:46:37+00:00,,0,Mahfuzar148/Verilog,663569519,Verilog,Verilog,886,2,2023-08-24 12:15:26+00:00,[],None
32,https://github.com/JVMergulho/Infra_hard_CPU_project.git,2023-07-01 00:06:05+00:00,,0,JVMergulho/Infra_hard_CPU_project,660821783,Verilog,Infra_hard_CPU_project,67,2,2024-03-02 01:38:15+00:00,[],None
33,https://github.com/binocroc/TCLWorkshop.git,2023-07-05 17:17:16+00:00,,1,binocroc/TCLWorkshop,662692082,Verilog,TCLWorkshop,416,2,2023-08-31 13:19:43+00:00,[],None
34,https://github.com/Juliodelarosap/sistemas-digitales-.git,2023-06-29 19:13:39+00:00,,0,Juliodelarosap/sistemas-digitales-,660332320,Verilog,sistemas-digitales-,125419,2,2023-11-05 15:52:25+00:00,[],None
35,https://github.com/sainavaneet/system-that-generates-detects-and-corrects-Hamming-Code.git,2023-06-23 08:23:17+00:00,,0,sainavaneet/system-that-generates-detects-and-corrects-Hamming-Code,657514564,Verilog,system-that-generates-detects-and-corrects-Hamming-Code,540,2,2024-02-01 05:56:05+00:00,[],None
36,https://github.com/XUAN131/AA22222222.git,2023-06-23 15:07:23+00:00,KGKFLLH,2,XUAN131/AA22222222,657669004,Verilog,AA22222222,19152,2,2024-03-10 18:49:35+00:00,[],
37,https://github.com/sainavaneet/32-bit-CPU-based-on-MIPS-architecture.git,2023-06-23 07:18:28+00:00,,0,sainavaneet/32-bit-CPU-based-on-MIPS-architecture,657491668,Verilog,32-bit-CPU-based-on-MIPS-architecture,437,2,2024-02-01 05:56:06+00:00,[],None
38,https://github.com/koushikkalyani/Iverilog.git,2023-06-30 10:20:53+00:00,My Verilog work in terminal ,0,koushikkalyani/Iverilog,660578381,Verilog,Iverilog,56,2,2023-07-09 06:49:39+00:00,[],None
39,https://github.com/PRAGATI-0102/Pulse-Generator-Day-073-.git,2023-06-21 18:06:24+00:00,,0,PRAGATI-0102/Pulse-Generator-Day-073-,656824718,Verilog,Pulse-Generator-Day-073-,51,2,2023-07-03 13:52:46+00:00,[],None
40,https://github.com/shihjimmy/Digital_System_Design.git,2023-06-25 02:29:29+00:00,111-2 NTUEE digital system design,0,shihjimmy/Digital_System_Design,658176464,Verilog,Digital_System_Design,12877,2,2023-10-30 18:06:52+00:00,[],None
41,https://github.com/CoreRasurae/Next186Simple.git,2023-07-03 21:40:43+00:00,,0,CoreRasurae/Next186Simple,661876999,Verilog,Next186Simple,705,2,2023-12-29 06:51:14+00:00,[],None
42,https://github.com/replica455/VLSI-Protocol.git,2023-07-04 07:25:46+00:00,communication and bus protocol,1,replica455/VLSI-Protocol,662019183,Verilog,VLSI-Protocol,100,2,2023-08-03 13:59:20+00:00,[],https://api.github.com/licenses/gpl-3.0
43,https://github.com/hayoniii/2023_verilog.git,2023-07-05 02:47:37+00:00,,0,hayoniii/2023_verilog,662382604,Verilog,2023_verilog,2036,2,2023-07-12 06:25:47+00:00,[],None
44,https://github.com/chengquan/riscv_openocd.git,2023-06-21 02:33:27+00:00,,2,chengquan/riscv_openocd,656463949,Verilog,riscv_openocd,16747,2,2023-10-28 16:46:03+00:00,[],None
45,https://github.com/ahmedemad9/DDR5_cont.git,2023-06-26 14:07:03+00:00,,0,ahmedemad9/DDR5_cont,658798214,Verilog,DDR5_cont,19,2,2024-03-11 09:06:49+00:00,[],None
46,https://github.com/sidhaarthi/Cordic-Algorithm-Rotation.git,2023-07-01 04:37:36+00:00,,0,sidhaarthi/Cordic-Algorithm-Rotation,660870655,Verilog,Cordic-Algorithm-Rotation,19,2,2023-07-27 16:03:24+00:00,[],None
47,https://github.com/momostafa18/CORDIC.git,2023-07-07 19:56:28+00:00,Coordinate Rotation Digital Computer used for rotations of some points or to be specific used for implementing of Trignometric Functions,0,momostafa18/CORDIC,663653991,Verilog,CORDIC,36,2,2023-07-11 17:42:58+00:00,[],None
48,https://github.com/NicolaLino/multicycle-processor.git,2023-06-24 17:21:51+00:00,Simple Multicycle Processor Similar to MIPS in Verilog,0,NicolaLino/multicycle-processor,658073461,Verilog,multicycle-processor,2121,1,2023-08-27 09:23:44+00:00,"['computer-architecture', 'mips', 'multicycle-processor']",None
49,https://github.com/buffer404/streaming-crossbar.git,2023-07-07 18:54:49+00:00,Потоковый кроссбар NxM на языке Verilog,1,buffer404/streaming-crossbar,663634646,Verilog,streaming-crossbar,1650,1,2023-08-29 16:10:48+00:00,[],None
50,https://github.com/PebPeb/BEAN-1.git,2023-06-27 01:55:08+00:00,Binary Execution and Analysis Node,0,PebPeb/BEAN-1,659021451,Verilog,BEAN-1,502,1,2023-07-14 15:28:36+00:00,[],None
51,https://github.com/FaisalJAbushanab/DES-FPGA.git,2023-06-22 13:36:17+00:00,DES implementation using Verilog (VHDL),0,FaisalJAbushanab/DES-FPGA,657176679,Verilog,DES-FPGA,1461,1,2024-02-06 15:51:40+00:00,[],https://api.github.com/licenses/mit
52,https://github.com/juzizi44/multi-cycle-CPU.git,2023-07-01 09:50:54+00:00,大二的噩梦之多周期CPU,1,juzizi44/multi-cycle-CPU,660945531,Verilog,multi-cycle-CPU,1306,1,2024-02-16 02:16:18+00:00,[],None
53,https://github.com/IvanCh3ung/CPEN311.git,2023-07-01 05:46:38+00:00,Labs for Cpen 311,0,IvanCh3ung/CPEN311,660885645,Verilog,CPEN311,7241,1,2024-02-23 20:49:47+00:00,[],None
54,https://github.com/arvind2109/Round-Robin-Arbiter-using-Verilog.git,2023-07-01 16:51:28+00:00,Fair allocation of resources using arbiter/scheduler,0,arvind2109/Round-Robin-Arbiter-using-Verilog,661057535,Verilog,Round-Robin-Arbiter-using-Verilog,350,1,2023-12-17 20:16:47+00:00,[],None
55,https://github.com/pouyanasgari96/Power_Optimization.git,2023-06-27 15:58:14+00:00,"A TCL script for PrimeTime that implements a post-synthesis leakage power minimization procedure, to optimise the power using a fast algorithm (low CPU time) to get the minimum cost (in terms of power and time)",0,pouyanasgari96/Power_Optimization,659336130,Verilog,Power_Optimization,75540,1,2024-03-27 07:27:50+00:00,[],None
56,https://github.com/ElTheScreeps/Lifo.git,2023-06-27 19:12:27+00:00,,0,ElTheScreeps/Lifo,659407792,Verilog,Lifo,10,1,2023-07-09 11:14:15+00:00,[],None
57,https://github.com/ElTheScreeps/Pipeline_Max.git,2023-06-29 12:52:41+00:00,,0,ElTheScreeps/Pipeline_Max,660190072,Verilog,Pipeline_Max,16,1,2023-06-29 15:18:32+00:00,[],None
58,https://github.com/pradumnk/LCD_FPGA_Integration.git,2023-07-05 07:21:31+00:00,This Repo contains a way to use a 2.4inch SPI based TFT LCD with any FPGA.,1,pradumnk/LCD_FPGA_Integration,662458104,Verilog,LCD_FPGA_Integration,16508,1,2023-08-03 11:14:48+00:00,[],None
59,https://github.com/kalai-rajan/Implementation-Verification-of-I2C-Master-Bus-controller-for-LM75A-sensor-On-FPGA.git,2023-06-24 17:12:29+00:00,,0,kalai-rajan/Implementation-Verification-of-I2C-Master-Bus-controller-for-LM75A-sensor-On-FPGA,658070982,Verilog,Implementation-Verification-of-I2C-Master-Bus-controller-for-LM75A-sensor-On-FPGA,104,1,2023-08-23 06:28:29+00:00,[],None
60,https://github.com/MYNAMEHOLO/ICCONTEST_2017_preliminary.git,2023-07-04 05:16:05+00:00,This year's target is using the distance transform therom implement interact with foreground and background.,0,MYNAMEHOLO/ICCONTEST_2017_preliminary,661976449,Verilog,ICCONTEST_2017_preliminary,589,1,2023-09-06 13:54:29+00:00,[],None
61,https://github.com/laksh-ms/TCL-script.git,2023-07-06 02:57:20+00:00,,0,laksh-ms/TCL-script,662850615,Verilog,TCL-script,551,1,2023-08-31 13:19:18+00:00,[],None
62,https://github.com/STARS-Design-Track-2023/all-projects.git,2023-07-05 21:22:24+00:00,,0,STARS-Design-Track-2023/all-projects,662771856,Verilog,all-projects,32514,1,2023-07-27 05:25:33+00:00,[],None
63,https://github.com/heriportre/EE314-DIGITAL-CIRCUITS-LABORATORY-Spring2023-Term-Project.git,2023-06-25 12:52:59+00:00,"EE314 Digital Circuits Laboratory Spring 2023 Term Project Final Report codes, submodules, details, diagrams and schematics of Tic Tac Toe game implementation on FPGA is presented in this project. Used FPGA development board in here was DE-1 SoC.",0,heriportre/EE314-DIGITAL-CIRCUITS-LABORATORY-Spring2023-Term-Project,658333186,Verilog,EE314-DIGITAL-CIRCUITS-LABORATORY-Spring2023-Term-Project,2836,1,2024-03-16 20:15:43+00:00,[],None
64,https://github.com/AsFigo/af_sva_apb.git,2023-07-03 12:58:43+00:00,AsFigo's opensource SVA IP for APB protocol + SVUnit tests on Verilator,3,AsFigo/af_sva_apb,661699536,Verilog,af_sva_apb,635,1,2024-03-04 20:43:20+00:00,[],https://api.github.com/licenses/mit
65,https://github.com/ElTheScreeps/Fifo.git,2023-06-21 22:09:50+00:00,,0,ElTheScreeps/Fifo,656901368,Verilog,Fifo,32,1,2023-06-29 15:18:36+00:00,[],None
66,https://github.com/Harshaprakash03/FPGA_Vivado.git,2023-07-06 11:34:19+00:00,"This project is to implement a car parking system in Verilog. The Verilog code for the car parking system is fully presented along with Model sim Simulation output and Vivado Synthesis output ( Netlist diagram, Technology mapping diagram).",0,Harshaprakash03/FPGA_Vivado,663020078,Verilog,FPGA_Vivado,307,1,2023-07-15 03:19:28+00:00,[],https://api.github.com/licenses/mpl-2.0
67,https://github.com/MohammadrezaNazirii/16Bit-ISA.git,2023-07-02 11:22:08+00:00,16-Bit Instruction Set Architecture (ISA) Implementation with Matrix Multiplication,0,MohammadrezaNazirii/16Bit-ISA,661285693,Verilog,16Bit-ISA,17,1,2023-10-04 19:04:31+00:00,[],None
68,https://github.com/SoumyaGupta0127/Debouncing_Circuits_and_Edge_Detection_using_FSMs.git,2023-07-03 11:14:46+00:00,This repository shows how to use buttons effectively by using Debouncing Circuits and Edge Detection Circuits using Finite State Machines.,0,SoumyaGupta0127/Debouncing_Circuits_and_Edge_Detection_using_FSMs,661660774,Verilog,Debouncing_Circuits_and_Edge_Detection_using_FSMs,15,1,2024-01-02 01:58:57+00:00,[],None
69,https://github.com/Divyajyotipatra10/Uart-Transmitter-Protocol-Project.git,2023-06-23 10:35:54+00:00,,1,Divyajyotipatra10/Uart-Transmitter-Protocol-Project,657562316,Verilog,Uart-Transmitter-Protocol-Project,160,1,2024-01-30 19:48:36+00:00,[],None
70,https://github.com/Timmy-Liang/RAE_DNN.git,2023-07-06 03:09:32+00:00,reconfigurable_accelerator_engine 2023/6/22,0,Timmy-Liang/RAE_DNN,662853595,Verilog,RAE_DNN,1784,1,2023-07-26 05:24:19+00:00,[],None
71,https://github.com/negarhonarvar/Computer-architecture-.git,2023-07-08 17:26:56+00:00,,0,negarhonarvar/Computer-architecture-,664014839,Verilog,Computer-architecture-,1917,1,2023-07-08 18:54:40+00:00,[],https://api.github.com/licenses/bsd-2-clause
72,https://github.com/LiN5BoY/FPGA_Learning.git,2023-06-25 07:07:25+00:00,基于FPGA开发板的学习,0,LiN5BoY/FPGA_Learning,658233569,Verilog,FPGA_Learning,13380,1,2023-06-25 09:28:03+00:00,[],None
73,https://github.com/Tylerd1208022/BloomFiltersExperiments.git,2023-06-22 14:25:39+00:00,Repo for bloom filter implementation testing,0,Tylerd1208022/BloomFiltersExperiments,657197817,Verilog,BloomFiltersExperiments,267,1,2023-07-31 15:18:41+00:00,[],None
74,https://github.com/PRAGATI-0102/Clk-Division-By-3-Day-075-.git,2023-06-23 17:35:48+00:00,The purpose of a clock divider is to generate a lower frequency clock signal from a higher frequency clock.,0,PRAGATI-0102/Clk-Division-By-3-Day-075-,657722841,Verilog,Clk-Division-By-3-Day-075-,42,1,2023-06-29 07:18:30+00:00,[],None
75,https://github.com/BitCrasher/BitCrasher_SaintgitsCollegeOfEngineering__RoverFSM.git,2023-06-29 05:32:11+00:00,Project repository for Intel Unnati Industrial Training-Summer 2023,2,BitCrasher/BitCrasher_SaintgitsCollegeOfEngineering__RoverFSM,660037268,Verilog,BitCrasher_SaintgitsCollegeOfEngineering__RoverFSM,1026,1,2023-11-01 16:28:56+00:00,[],None
76,https://github.com/AlyElruby/Sequential-8x8-multiplier.git,2023-07-05 02:39:54+00:00,Sequential-8x8-multiplier RTL code using verilog,0,AlyElruby/Sequential-8x8-multiplier,662380837,Verilog,Sequential-8x8-multiplier,3,1,2023-07-11 08:09:28+00:00,[],None
77,https://github.com/PickleCoop/SimpleCPU.git,2023-06-21 22:39:41+00:00,Simple CPU created in System Verilog.,0,PickleCoop/SimpleCPU,656908701,Verilog,SimpleCPU,2565,1,2023-08-19 01:06:44+00:00,[],https://api.github.com/licenses/mit
78,https://github.com/Essenceia/SoupBinTCP.git,2023-06-24 06:36:02+00:00,RTL implementation of SoupBinTCP version 3.0,0,Essenceia/SoupBinTCP,657898597,Verilog,SoupBinTCP,197,1,2023-12-12 18:27:22+00:00,[],None
79,https://github.com/PFCS33/single-cycle-cpu-RISCV.git,2023-07-04 10:39:29+00:00,"Verilog 实现的单周期CPU，支持 RISC-V指令集中的 add, addi, sub, lw, sw, beq,blt, jal, ori 指令",0,PFCS33/single-cycle-cpu-RISCV,662092789,Verilog,single-cycle-cpu-RISCV,2109,1,2023-12-13 06:41:59+00:00,[],https://api.github.com/licenses/mit
80,https://github.com/HsuSungTing/Scrolling-RPG-Kirby-s-Dream-Land-Remake.git,2023-06-28 12:45:15+00:00,"This is a computer game with a side-scrolling scroll-style interface, programmed in Verilog. Once burned into an FPGA board, it can be connected to a computer screen and keyboard to start an exciting and thrilling gaming experience.",0,HsuSungTing/Scrolling-RPG-Kirby-s-Dream-Land-Remake,659730834,Verilog,Scrolling-RPG-Kirby-s-Dream-Land-Remake,24,1,2024-02-13 12:42:02+00:00,[],None
81,https://github.com/KiuQuy/wb2apb_or1200.git,2023-07-07 03:17:24+00:00,Integrate IP WB2APB into OR1200,0,KiuQuy/wb2apb_or1200,663316012,Verilog,wb2apb_or1200,290,1,2023-08-17 13:56:35+00:00,[],None
82,https://github.com/Jerry-Terrasse/RISCU.git,2023-06-26 06:21:27+00:00,My implementation of a single cycle CPU based on RISC-V ISA,0,Jerry-Terrasse/RISCU,658603879,Verilog,RISCU,22073,1,2023-06-29 04:05:03+00:00,[],None
83,https://github.com/ericksuzart/FPGA-Genius.git,2023-06-30 16:02:02+00:00,,2,ericksuzart/FPGA-Genius,660698207,Verilog,FPGA-Genius,4660,1,2023-12-11 21:22:25+00:00,[],None
84,https://github.com/HsuSungTing/Crossy-Road-Remake.git,2023-06-30 02:43:42+00:00,This is an arcade game where you control a chicken crossing the road. It is developed using Verilog and programmed into an FPGA board to display the game graphics on the screen. Players must guide the chicken and avoid trucks moving at either 1Hz or 2Hz. Join the game and help the lost chicken cross the road and reach its destination!,0,HsuSungTing/Crossy-Road-Remake,660440300,Verilog,Crossy-Road-Remake,9,1,2024-02-13 12:42:05+00:00,[],None
85,https://github.com/TAlmeida003/Sistema-de-gestao-de-vagas-para-estacionamento.git,2023-06-22 20:39:50+00:00,"Projeto exigido pelo componente curricular TEC 498 MI - Projeto de Circuito Digitais, utilizando a metodologia Problem Based Learning (PBL).",0,TAlmeida003/Sistema-de-gestao-de-vagas-para-estacionamento,657331653,Verilog,Sistema-de-gestao-de-vagas-para-estacionamento,986,1,2024-03-03 02:18:57+00:00,[],None
86,https://github.com/sai-709/IntelUnnati.git,2023-06-22 13:28:49+00:00,,0,sai-709/IntelUnnati,657173684,Verilog,IntelUnnati,4,1,2023-07-10 15:38:28+00:00,[],None
87,https://github.com/Anvitatadepalli/Synchronous-Fifo.git,2023-06-29 06:51:03+00:00,Verilog implementation of a synchronous fifo memory.,0,Anvitatadepalli/Synchronous-Fifo,660060441,Verilog,Synchronous-Fifo,13,1,2023-06-29 11:56:52+00:00,[],None
88,https://github.com/THU-DSP-LAB/ventus-driver.git,2023-07-04 10:04:56+00:00,,1,THU-DSP-LAB/ventus-driver,662079801,Verilog,ventus-driver,4115,1,2023-08-09 05:11:28+00:00,[],None
89,https://github.com/SheidaAbedpour/Single-Cycle-Datapath.git,2023-06-25 23:11:35+00:00,simple mips architecture ,0,SheidaAbedpour/Single-Cycle-Datapath,658498787,Verilog,Single-Cycle-Datapath,430,1,2023-12-28 06:52:44+00:00,"['computer-architecture', 'data-path', 'verilog', 'mips-architecture', 'assembler', 'logisim', 'single-cycle']",None
90,https://github.com/TahaErenKeles/VerySimpleCPU.git,2023-07-08 08:47:26+00:00,,0,TahaErenKeles/VerySimpleCPU,663844818,Verilog,VerySimpleCPU,1,1,2024-02-21 18:33:14+00:00,[],None
91,https://github.com/anamariaaccilio/multicycle-project.git,2023-07-03 18:18:03+00:00,,0,anamariaaccilio/multicycle-project,661820535,Verilog,multicycle-project,22,1,2023-07-06 19:06:18+00:00,[],None
92,https://github.com/amohib177/MicroprocessorDesign.git,2023-06-27 17:21:09+00:00,IITSoC'23 Electrical Project,0,amohib177/MicroprocessorDesign,659368405,Verilog,MicroprocessorDesign,246,1,2023-07-10 15:15:22+00:00,[],None
93,https://github.com/ECEDong/verilog_for_beginners.git,2023-06-28 12:23:07+00:00,verilog model examples,0,ECEDong/verilog_for_beginners,659722222,Verilog,verilog_for_beginners,20,1,2023-07-01 12:36:08+00:00,[],None
94,https://github.com/Navya23Toluchuri/100daysofrtl.git,2023-06-29 07:02:31+00:00,,1,Navya23Toluchuri/100daysofrtl,660064465,Verilog,100daysofrtl,11274,1,2023-10-08 05:30:26+00:00,[],None
95,https://github.com/sabarivelan-s/RISC-V-RV32-RTL.git,2023-07-04 08:12:14+00:00,RISC-V RV32I RTL Design using Verilog HDL,0,sabarivelan-s/RISC-V-RV32-RTL,662036556,Verilog,RISC-V-RV32-RTL,4112,1,2023-07-04 09:26:05+00:00,[],None
96,https://github.com/Nanolbw/CPU.git,2023-06-24 05:37:02+00:00,计组大作业，完成十条指令的CPU，测试用例：高斯级数、两个数比大小,0,Nanolbw/CPU,657885594,Verilog,CPU,159,1,2023-06-24 05:49:07+00:00,[],None
97,https://github.com/lightside-instruments/ethernet4pizero.git,2023-06-25 08:41:28+00:00,,1,lightside-instruments/ethernet4pizero,658260050,Verilog,ethernet4pizero,381,1,2023-07-07 21:02:02+00:00,[],
98,https://github.com/newyoungman/data_convert.git,2023-06-29 09:17:16+00:00,verilog classwork,0,newyoungman/data_convert,660112769,Verilog,data_convert,206,1,2023-12-09 12:14:49+00:00,[],None
99,https://github.com/MrAMS/my-riscv-processor.git,2023-06-23 16:56:42+00:00,,0,MrAMS/my-riscv-processor,657709623,Verilog,my-riscv-processor,1058,1,2024-01-21 13:18:59+00:00,[],None
100,https://github.com/dlmiles/tt04-poc-usbdev.git,2023-06-29 15:06:16+00:00,TT04 PoC USB Device,0,dlmiles/tt04-poc-usbdev,660244738,Verilog,tt04-poc-usbdev,924,1,2023-10-17 03:59:52+00:00,[],https://api.github.com/licenses/apache-2.0
101,https://github.com/shihjimmy/Gauss_Seidal_Iteration_Machine.git,2023-06-25 03:18:39+00:00,Solving Simultaneous Equations and Inverse Matrices on Gauss-Seidel Iteration Machine Acceleration Chip,0,shihjimmy/Gauss_Seidal_Iteration_Machine,658185584,Verilog,Gauss_Seidal_Iteration_Machine,8598,1,2024-02-25 16:53:11+00:00,[],None
102,https://github.com/zahrasarami/Extract-text-from-image.git,2023-07-02 15:07:45+00:00,,0,zahrasarami/Extract-text-from-image,661348661,Verilog,Extract-text-from-image,518,1,2023-09-13 18:02:17+00:00,[],None
103,https://github.com/MYNAMEHOLO/ICCONTEST_2016_preliminary.git,2023-06-29 06:44:59+00:00,"Cell Based Contest, This Year is about a Local Binary Pattern (LBP) image processing circuit implementation.",0,MYNAMEHOLO/ICCONTEST_2016_preliminary,660058296,Verilog,ICCONTEST_2016_preliminary,490,1,2023-09-06 13:44:52+00:00,[],None
104,https://github.com/Anvitatadepalli/APB-Protocol.git,2023-06-29 07:49:30+00:00,,0,Anvitatadepalli/APB-Protocol,660081312,Verilog,APB-Protocol,5401,1,2023-06-29 11:56:49+00:00,[],None
105,https://github.com/Timmy-Liang/LeNet_Accelerator_Engine.git,2023-07-06 06:17:32+00:00,LeNet_Accelerator_Engine,0,Timmy-Liang/LeNet_Accelerator_Engine,662901878,Verilog,LeNet_Accelerator_Engine,34,1,2023-07-26 05:23:39+00:00,[],None
106,https://github.com/vikeevikas/tcl_program.git,2023-07-07 16:10:06+00:00,,0,vikeevikas/tcl_program,663577873,Verilog,tcl_program,694,1,2023-07-08 12:43:27+00:00,[],None
107,https://github.com/sardarshubhangi/FFT_PROCESSOR.git,2023-06-30 13:51:33+00:00,,0,sardarshubhangi/FFT_PROCESSOR,660650230,Verilog,FFT_PROCESSOR,18259,1,2023-07-07 11:00:01+00:00,[],None
108,https://github.com/varshach26/Dual-Core-ML-Accelerator-for-Attention-Mechanism.git,2023-06-23 06:35:26+00:00,"Front-end design flow and PnR of a dual core hardware accelerator, where each core contains a mac-array unit, a normalization unit and a controller.",0,varshach26/Dual-Core-ML-Accelerator-for-Attention-Mechanism,657477230,Verilog,Dual-Core-ML-Accelerator-for-Attention-Mechanism,23,1,2023-10-18 05:40:53+00:00,[],None
109,https://github.com/SoloWarrior01/16-bit-CPU-based-on-Von-Neumann-Architecture.git,2023-06-23 15:01:50+00:00,16-bit-CPU-based-on-Von-Neumann-Architecture,0,SoloWarrior01/16-bit-CPU-based-on-Von-Neumann-Architecture,657666695,Verilog,16-bit-CPU-based-on-Von-Neumann-Architecture,142,1,2023-08-08 03:29:19+00:00,[],None
110,https://github.com/Chenyaoyi1998/IMA-BLC.git,2023-07-03 07:30:12+00:00,Article Title: IMA-BLC: Iterative Median-Averaged Adaptive Black-Level Correction Method,1,Chenyaoyi1998/IMA-BLC,661577529,Verilog,IMA-BLC,64,1,2023-10-01 12:11:04+00:00,[],None
111,https://github.com/Koushik1432/project_on_VERILOG.git,2023-06-23 06:15:47+00:00,I developed this Code,0,Koushik1432/project_on_VERILOG,657471111,Verilog,project_on_VERILOG,216,1,2023-06-23 06:23:57+00:00,[],None
112,https://github.com/ksareen123/369-Lab1.git,2023-06-21 03:36:39+00:00,Verilog / C embedded & FPGA application.,0,ksareen123/369-Lab1,656482388,Verilog,369-Lab1,4987,1,2023-06-21 04:02:04+00:00,[],None
113,https://github.com/KyleParkJong/Network-on-Chip-Simulator.git,2023-07-06 05:48:59+00:00,Network on-Chip (NoC) simulator for simulating intra-chip data flow in Neural Network Accelerator,0,KyleParkJong/Network-on-Chip-Simulator,662893428,Verilog,Network-on-Chip-Simulator,11930,1,2023-11-10 00:23:42+00:00,"['noc', 'simulator', 'verilog', 'neural-network']",None
114,https://github.com/NourMamdouh/RSA_project.git,2023-06-22 18:31:35+00:00,"RSA project (in verilog), originally done to run on Xilinx SPARATAN-6 board (FPGA)",0,NourMamdouh/RSA_project,657291266,Verilog,RSA_project,11,1,2023-07-04 12:20:41+00:00,"['design', 'digital', 'fpga-programming']",None
115,https://github.com/CodeWithManojkumar/Verilog_Projects.git,2023-06-27 07:55:33+00:00,,0,CodeWithManojkumar/Verilog_Projects,659134743,Verilog,Verilog_Projects,3014,1,2023-11-08 07:53:50+00:00,[],None
116,https://github.com/achlysJiang21/Wireless-Laser-Communication-based-on-SiPM.git,2023-07-06 13:56:18+00:00,,0,achlysJiang21/Wireless-Laser-Communication-based-on-SiPM,663076450,Verilog,Wireless-Laser-Communication-based-on-SiPM,6,1,2023-12-17 10:04:48+00:00,[],None
117,https://github.com/TAlmeida003/Sistema-de-Seguranca-Digital.git,2023-06-22 22:16:56+00:00,"Projeto exigido pelo componente curricular TEC 498 MI - Projeto de Circuito Digitais, utilizando a metodologia Problem Based Learning (PBL).",0,TAlmeida003/Sistema-de-Seguranca-Digital,657356716,Verilog,Sistema-de-Seguranca-Digital,1192,1,2024-03-03 02:17:28+00:00,[],None
118,https://github.com/AliAtaollahi/Digital-Logic-Design-Course-Projects.git,2023-07-03 23:22:55+00:00,"Logic gate implementation, circuit optimization, fsm controller hardware implementation, cos() calculator circuit; Fall 2021",0,AliAtaollahi/Digital-Logic-Design-Course-Projects,661896950,Verilog,Digital-Logic-Design-Course-Projects,56931,1,2024-03-10 17:19:16+00:00,"['combinational-circuit', 'hdl', 'logic-gate', 'sequential-circuit', 'programmable-logic-devices', 'synchronous-and-asynchronous-circuit']",https://api.github.com/licenses/mit
119,https://github.com/AliAtaollahi/Computer-Aided-Design-Course-Projects.git,2023-07-03 23:26:29+00:00,Implementing hardware-based encoding functions on a 3D matrix; Fall 2022,0,AliAtaollahi/Computer-Aided-Design-Course-Projects,661897569,Verilog,Computer-Aided-Design-Course-Projects,9584,1,2024-03-10 17:19:21+00:00,"['infrastructure-design', 'parametric-design', 'data-interoperability-solutions', 'file-parsers', 'geometry-processing-algorithms']",https://api.github.com/licenses/mit
120,https://github.com/ankurxyz/VSD_TCL.git,2023-07-06 05:44:22+00:00,,0,ankurxyz/VSD_TCL,662892051,Verilog,VSD_TCL,9278,1,2023-08-31 13:19:39+00:00,[],None
121,https://github.com/Akakce/FPGAme.git,2023-07-05 19:40:35+00:00,A TicTacToe knock-off implementation developed with Verilog HDL on the Altera De1-Soc FPGA board,1,Akakce/FPGAme,662743242,Verilog,FPGAme,28,1,2023-07-05 20:50:42+00:00,[],None
122,https://github.com/upbhack/writeups.git,2023-06-24 20:54:46+00:00,,0,upbhack/writeups,658122606,Verilog,writeups,1282,1,2023-06-27 15:57:52+00:00,[],None
123,https://github.com/dointio/1553B_APB.git,2023-06-26 09:16:58+00:00,soc_ip_1553B,2,dointio/1553B_APB,658676947,Verilog,1553B_APB,3149,1,2023-07-22 01:10:03+00:00,[],None
124,https://github.com/wang29a/mipslite-cpu.git,2023-06-23 07:12:49+00:00,,1,wang29a/mipslite-cpu,657489709,Verilog,mipslite-cpu,98,1,2023-06-27 06:35:04+00:00,[],None
125,https://github.com/fardinabbasi/RISC-V_Processor_MultiCycle.git,2023-07-08 13:15:58+00:00,Digital Systems 2 Course [ECE 778] - CA3 - Spring 2023 - University of Tehran - Dr. Safari,0,fardinabbasi/RISC-V_Processor_MultiCycle,663930027,Verilog,RISC-V_Processor_MultiCycle,727,1,2024-03-22 21:50:36+00:00,"['computer-architecture', 'computer-arithmetic', 'modelsim', 'risc-v', 'verilog']",None
126,https://github.com/adem/openfpga-test-core.git,2023-06-25 17:00:15+00:00,,0,adem/openfpga-test-core,658411726,Verilog,openfpga-test-core,188,1,2023-11-13 06:59:59+00:00,[],None
127,https://github.com/112101011/Signals-and-systems-Traffic-lights..git,2023-06-23 10:11:25+00:00,,0,112101011/Signals-and-systems-Traffic-lights.,657553416,Verilog,Signals-and-systems-Traffic-lights.,1202,1,2023-07-09 11:21:01+00:00,[],None
128,https://github.com/alinaduca/AMD-SummerPractice.git,2023-06-26 19:13:59+00:00,Repo for working on AMD Summer Practice assignments,0,alinaduca/AMD-SummerPractice,658920705,Verilog,AMD-SummerPractice,4102,1,2023-11-15 08:01:38+00:00,"['systemverilog', 'verilog']",None
129,https://github.com/sirazenkov/CannyFPGA.git,2023-07-01 13:25:33+00:00,FPGA implementation of the Canny edge detection algorithm,0,sirazenkov/CannyFPGA,661000485,Verilog,CannyFPGA,2995,1,2023-11-21 13:54:51+00:00,[],https://api.github.com/licenses/gpl-3.0
130,https://github.com/kevinzxc1217/digital_ic_desgin.git,2023-07-07 13:00:23+00:00,,0,kevinzxc1217/digital_ic_desgin,663506154,Verilog,digital_ic_desgin,29070,1,2024-03-15 14:17:31+00:00,[],None
131,https://github.com/SamChang03/Logic-Design-Lab.git,2023-06-26 09:03:54+00:00,NTHU 11120EE223002 Logic Design Laboratory,0,SamChang03/Logic-Design-Lab,658671117,Verilog,Logic-Design-Lab,11719,1,2024-03-03 11:14:17+00:00,[],None
132,https://github.com/SHU-CS-Cource-Project-Share/SHU_Summer_Project_of_Computer_Hardware.git,2023-07-04 11:15:02+00:00,上海大学计算机学院暑期计算机硬件综合大型作业,1,SHU-CS-Cource-Project-Share/SHU_Summer_Project_of_Computer_Hardware,662105493,Verilog,SHU_Summer_Project_of_Computer_Hardware,27197,1,2024-04-02 16:48:08+00:00,[],https://api.github.com/licenses/apache-2.0
133,https://github.com/nrs14/HDLBITS_SOLUTION.git,2023-07-07 09:58:34+00:00,verilog,0,nrs14/HDLBITS_SOLUTION,663445043,Verilog,HDLBITS_SOLUTION,91,1,2023-07-08 04:13:27+00:00,[],None
134,https://github.com/kyrieLei/a-verilog-Lock-simulation.git,2023-07-08 17:38:05+00:00,,0,kyrieLei/a-verilog-Lock-simulation,664018271,Verilog,a-verilog-Lock-simulation,2,1,2023-07-08 17:44:16+00:00,[],None
135,https://github.com/nishgovinnd/VLSI-RiscV.git,2023-07-01 07:32:53+00:00,Internship project code,0,nishgovinnd/VLSI-RiscV,660910556,Verilog,VLSI-RiscV,2408,1,2023-07-02 18:20:54+00:00,[],https://api.github.com/licenses/mit
136,https://github.com/PebPeb/verilog-modules.git,2023-07-01 03:26:51+00:00,Archive of all the different general purpose verilog modules that I build,0,PebPeb/verilog-modules,660856400,Verilog,verilog-modules,17,1,2023-07-14 15:28:38+00:00,[],None
137,https://github.com/zmij/blink-mpu.git,2023-06-30 15:06:56+00:00,,1,zmij/blink-mpu,660679118,Verilog,blink-mpu,96,1,2023-07-01 16:36:47+00:00,[],None
138,https://github.com/Muyiiiii/TJ_54_single_CPU.git,2023-07-04 15:21:55+00:00,,0,Muyiiiii/TJ_54_single_CPU,662203984,Verilog,TJ_54_single_CPU,20159,1,2023-07-14 02:10:20+00:00,[],None
139,https://github.com/fleb72/FPGA-SPI-communication-ADC-12bits.git,2023-06-29 19:55:31+00:00,Serial SPI communication with 12bits ADC - Quartus Prime Signal Tap logic Analyzer,0,fleb72/FPGA-SPI-communication-ADC-12bits,660345313,Verilog,FPGA-SPI-communication-ADC-12bits,2503,1,2023-08-15 11:52:57+00:00,[],None
140,https://github.com/sanchit-9068/processor1.git,2023-07-07 16:36:51+00:00,,0,sanchit-9068/processor1,663587565,Verilog,processor1,2,1,2023-08-04 13:05:42+00:00,[],None
141,https://github.com/Naresh1682/VerilogProjects.git,2023-07-07 17:42:22+00:00,,0,Naresh1682/VerilogProjects,663610432,Verilog,VerilogProjects,27,1,2023-07-29 05:52:34+00:00,[],None
142,https://github.com/HarishGokul-15/Verilog_Codes.git,2023-06-26 19:20:47+00:00,This repository contains the implementation of digital circuits using verilog language with explanation,0,HarishGokul-15/Verilog_Codes,658922975,Verilog,Verilog_Codes,7553,1,2023-10-22 06:54:42+00:00,[],None
143,https://github.com/Panxiatong/CmosHdmiDispaly.git,2023-06-24 08:48:47+00:00,这是一个fpga学习项目，DDR3SDARM缓存摄像头采集数据并通过HDMI显示,0,Panxiatong/CmosHdmiDispaly,657931984,Verilog,CmosHdmiDispaly,76,1,2024-03-09 16:31:28+00:00,[],https://api.github.com/licenses/mit
144,https://github.com/AliAtaollahi/Computer-Architecture-Course-Projects.git,2023-07-03 23:23:33+00:00,"Sngle-cycle, Multi-cycle and Pipeline MIPS implementations; Spring 2022",0,AliAtaollahi/Computer-Architecture-Course-Projects,661897042,Verilog,Computer-Architecture-Course-Projects,4146,1,2024-03-10 17:19:19+00:00,"['cpu-design', 'hardware-designs', 'hdl', 'instruction-set-simulator', 'mips', 'mips-assembly']",https://api.github.com/licenses/mit
145,https://github.com/stephen-riley/anna-cpu.git,2023-06-22 15:24:35+00:00,Verilog implementation of the ANNA processor,0,stephen-riley/anna-cpu,657222158,Verilog,anna-cpu,7,0,2023-06-22 15:29:48+00:00,[],None
146,https://github.com/danielforever/RISC_Vesp.git,2023-06-21 19:23:19+00:00,,0,danielforever/RISC_Vesp,656852729,Verilog,RISC_Vesp,116,0,2023-06-21 19:25:45+00:00,[],None
147,https://github.com/diarmuid104/SLICE.git,2023-06-23 12:55:10+00:00,,0,diarmuid104/SLICE,657615092,Verilog,SLICE,113018,0,2023-06-23 12:56:07+00:00,[],https://api.github.com/licenses/apache-2.0
148,https://github.com/CindyHuang68/IC_Contest.git,2023-06-24 14:12:56+00:00,,0,CindyHuang68/IC_Contest,658019358,Verilog,IC_Contest,3353,0,2023-06-24 14:16:05+00:00,[],None
149,https://github.com/muhammadahmedelmahdy/RISC_V-processor.git,2023-06-23 06:42:06+00:00,A processor supporting the 40 RISC-V instructions using Verilog ,0,muhammadahmedelmahdy/RISC_V-processor,657479365,Verilog,RISC_V-processor,15,0,2023-06-23 06:43:45+00:00,[],None
150,https://github.com/yc-LoAndy/RISCV-Pipelined-CPU.git,2023-06-25 09:15:47+00:00,"A simple CPU supporting multiple basic instructions, with branch predictor. Implemented with Verilog.",0,yc-LoAndy/RISCV-Pipelined-CPU,658270478,Verilog,RISCV-Pipelined-CPU,112,0,2023-06-25 09:20:47+00:00,[],None
151,https://github.com/AngiusHamilton1/Barramento-I-O.git,2023-06-25 16:58:26+00:00,"Em Verilog, um barramento de dados, é uma estrutura que permite a transferência de dados paralelos entre diferentes componentes de hardware. Ele é usado para facilitar a comunicação entre os módulos de um sistema digital. Cada linha do barramento de dados corresponde a um bit de informação",0,AngiusHamilton1/Barramento-I-O,658411137,Verilog,Barramento-I-O,3,0,2023-06-25 17:00:34+00:00,[],None
152,https://github.com/BalalaechnikT/Verilog.git,2023-06-28 13:45:41+00:00,,0,BalalaechnikT/Verilog,659756563,Verilog,Verilog,1603,0,2023-06-30 08:00:06+00:00,[],None
153,https://github.com/AnupamVerma007/ping-pong.git,2023-06-28 08:21:25+00:00,,0,AnupamVerma007/ping-pong,659627526,Verilog,ping-pong,4,0,2023-06-28 08:22:03+00:00,[],None
154,https://github.com/lineleb/HDMI_DDR3_TEST.git,2023-06-28 08:34:33+00:00,,0,lineleb/HDMI_DDR3_TEST,659632996,Verilog,HDMI_DDR3_TEST,14200,0,2023-09-04 12:47:19+00:00,[],None
155,https://github.com/JosiahMendes/SystolicArray.git,2023-07-05 14:55:34+00:00,,0,JosiahMendes/SystolicArray,662636376,Verilog,SystolicArray,4816,0,2023-07-05 14:58:49+00:00,[],None
156,https://github.com/rgvkulkarni/VSD-TCL.git,2023-07-05 15:09:07+00:00,VSD-TCL WORKSHOP,0,rgvkulkarni/VSD-TCL,662641956,Verilog,VSD-TCL,718,0,2023-07-11 15:21:24+00:00,[],None
157,https://github.com/anushka562/Y86-64-Processor.git,2023-06-28 18:16:45+00:00,A Y86-64 Processor implemented using Verilog,0,anushka562/Y86-64-Processor,659862489,Verilog,Y86-64-Processor,10614,0,2023-06-28 18:19:18+00:00,[],None
158,https://github.com/Vasitito/Bulls_and_cows_tt.git,2023-07-03 18:23:48+00:00,,0,Vasitito/Bulls_and_cows_tt,661822403,Verilog,Bulls_and_cows_tt,550,0,2023-07-24 22:01:41+00:00,[],https://api.github.com/licenses/apache-2.0
159,https://github.com/rudra-101/Traffic-Light-Controller.git,2023-07-04 14:34:22+00:00,,0,rudra-101/Traffic-Light-Controller,662184402,Verilog,Traffic-Light-Controller,14956,0,2023-07-04 14:48:29+00:00,[],None
160,https://github.com/vvs-kumar/4-bit-processor.git,2023-06-25 23:50:53+00:00,This is a 4-bit processor with 16 Instruction sets inspired by intel 4004,0,vvs-kumar/4-bit-processor,658505630,Verilog,4-bit-processor,62,0,2023-08-19 04:22:44+00:00,[],https://api.github.com/licenses/apache-2.0
161,https://github.com/HASHIDH/Design-and-Implementation-of-slow-and-fast-division-algorithms-in-Computer-Architecture.git,2023-06-25 09:35:57+00:00,,0,HASHIDH/Design-and-Implementation-of-slow-and-fast-division-algorithms-in-Computer-Architecture,658276453,Verilog,Design-and-Implementation-of-slow-and-fast-division-algorithms-in-Computer-Architecture,2580,0,2023-06-25 10:04:08+00:00,[],None
162,https://github.com/momostafa18/Linear-Feedback-Shift-Register.git,2023-06-26 09:11:21+00:00,LFSR is a Linear Feedback Shift Register which is used to create random numbers but to a limit where it depends on the no of used bits then a sequence of numbers will begin  to be repeated,0,momostafa18/Linear-Feedback-Shift-Register,658674434,Verilog,Linear-Feedback-Shift-Register,347,0,2023-06-26 09:18:25+00:00,[],None
163,https://github.com/DSJAHNAVI/AHB2APB-BRDIGE.git,2023-07-07 05:46:51+00:00,"The AHB2APB Bridge is a hardware module that acts as an interface between the AHB and APB buses, enabling efficient data transfer and communication between different peripherals and modules in a computer system. It allows for seamless integration and control of APB devices within the AHB-based system architecture.",0,DSJAHNAVI/AHB2APB-BRDIGE,663355396,Verilog,AHB2APB-BRDIGE,637,0,2023-07-07 06:34:31+00:00,[],None
164,https://github.com/AsheshPangma/VSD-TCL.git,2023-07-05 15:51:09+00:00,,0,AsheshPangma/VSD-TCL,662660107,Verilog,VSD-TCL,6497,0,2023-07-09 09:34:35+00:00,[],https://api.github.com/licenses/apache-2.0
165,https://github.com/jithin-fpga/rtl_ips.git,2023-07-04 19:35:08+00:00,Simple rtl ips,0,jithin-fpga/rtl_ips,662288202,Verilog,rtl_ips,1,0,2023-07-04 21:07:10+00:00,[],None
166,https://github.com/Aditya14garg/blinkled.git,2023-07-03 17:23:40+00:00,Create a clock divider that blinks LEDs. The input clock of the system is 100 MHz. The LED should blink at 0.745 Hz.,0,Aditya14garg/blinkled,661802757,Verilog,blinkled,1,0,2023-07-03 17:25:46+00:00,[],None
167,https://github.com/zdebel/AwesomeHDLSimByzD.git,2023-07-03 19:36:07+00:00,,0,zdebel/AwesomeHDLSimByzD,661844884,Verilog,AwesomeHDLSimByzD,23,0,2023-10-01 08:18:07+00:00,[],https://api.github.com/licenses/mit
168,https://github.com/sarweshwaran/ATP-CONTROLLER.git,2023-06-27 13:59:21+00:00,Intel unnati summer internship project ,0,sarweshwaran/ATP-CONTROLLER,659283352,Verilog,ATP-CONTROLLER,4,0,2023-06-27 14:04:16+00:00,[],None
169,https://github.com/Manikanta-IITB/Single_Cycle_MIPS.git,2023-06-29 08:43:10+00:00,This project shows the implementation of 16 bit single cycle MIPS processor. ,0,Manikanta-IITB/Single_Cycle_MIPS,660100470,Verilog,Single_Cycle_MIPS,16,0,2023-06-29 09:33:20+00:00,[],None
170,https://github.com/princesuman2004/MicroprocessorDesign.git,2023-06-27 16:12:59+00:00,This is a basic design of a 16-bit microprocessor using Verilog,0,princesuman2004/MicroprocessorDesign,659341970,Verilog,MicroprocessorDesign,18,0,2023-06-27 16:42:18+00:00,[],None
171,https://github.com/oktayogutcu/verilog_basics.git,2023-06-26 22:24:36+00:00,This repository includes basic rtl sources written in Verilog-HDL,0,oktayogutcu/verilog_basics,658974135,Verilog,verilog_basics,960,0,2023-06-28 23:47:15+00:00,[],None
172,https://github.com/Kmg13teen/RISCV_verilog.git,2023-07-08 16:48:34+00:00,,0,Kmg13teen/RISCV_verilog,664002664,Verilog,RISCV_verilog,108,0,2023-07-08 16:48:56+00:00,[],None
173,https://github.com/bytarikesen81/PulsarCPU.git,2023-06-30 11:34:21+00:00,A 3-step pipelined CPU based on RISC-V architecture.,0,bytarikesen81/PulsarCPU,660602149,Verilog,PulsarCPU,170,0,2023-09-14 05:49:50+00:00,[],https://api.github.com/licenses/gpl-3.0
174,https://github.com/Nadist14/RS_Code_HW_ACC.git,2023-06-29 16:23:44+00:00,t,0,Nadist14/RS_Code_HW_ACC,660275717,Verilog,RS_Code_HW_ACC,2344,0,2023-06-29 16:28:53+00:00,[],None
175,https://github.com/whensungoesdown/simu_otprom_cell_logic.git,2023-06-28 09:22:28+00:00,"Right after reset, agent reads out otprom word and stored in register, then use it as signals. The otprom is simulated with a sram",0,whensungoesdown/simu_otprom_cell_logic,659652779,Verilog,simu_otprom_cell_logic,337,0,2023-06-28 10:40:05+00:00,[],None
176,https://github.com/abinjohnmathews/FLOATINGPOINT_ADDER.git,2023-06-28 16:07:57+00:00,to create floating point adder,2,abinjohnmathews/FLOATINGPOINT_ADDER,659815877,,FLOATINGPOINT_ADDER,2,0,2023-06-28 16:07:58+00:00,[],None
177,https://github.com/Momen-Assaf/Architecture.git,2023-06-29 07:24:32+00:00,,0,Momen-Assaf/Architecture,660072365,Verilog,Architecture,2698,0,2023-07-18 19:03:43+00:00,[],None
178,https://github.com/Mohamed-Nasser620/Single_Cycle_RISC_V_Microprocessor.git,2023-07-02 22:01:22+00:00,,0,Mohamed-Nasser620/Single_Cycle_RISC_V_Microprocessor,661449644,Verilog,Single_Cycle_RISC_V_Microprocessor,1807,0,2023-07-02 22:01:36+00:00,[],None
179,https://github.com/Chaitanya-Srinivas/VendingMachine.git,2023-07-04 04:56:32+00:00,This code depicts the principle behind the working of Vending Machine and written in the verilog language,0,Chaitanya-Srinivas/VendingMachine,661971054,Verilog,VendingMachine,2,0,2023-07-04 04:58:00+00:00,[],None
180,https://github.com/Janice-max/RV64I-cpu-for-class-project.git,2023-07-07 02:49:53+00:00,,0,Janice-max/RV64I-cpu-for-class-project,663309296,Verilog,RV64I-cpu-for-class-project,56,0,2023-07-07 02:54:28+00:00,[],None
181,https://github.com/Yuboeee/learning-neuron-on-FPGA.git,2023-07-07 11:12:47+00:00,,0,Yuboeee/learning-neuron-on-FPGA,663469767,Verilog,learning-neuron-on-FPGA,16,0,2023-07-07 11:12:55+00:00,[],None
182,https://github.com/trephygit/tcl_workshop.git,2023-07-07 10:51:52+00:00,,0,trephygit/tcl_workshop,663462904,Verilog,tcl_workshop,365,0,2023-07-13 18:49:22+00:00,[],None
183,https://github.com/Alpha499799/pipeline.git,2023-06-29 09:09:38+00:00,,0,Alpha499799/pipeline,660110228,Verilog,pipeline,196,0,2023-06-29 09:11:50+00:00,[],None
184,https://github.com/Ha-young-Cho/Digital-System.git,2023-06-29 09:48:18+00:00,디지털 시스템 설계 프로젝트 및 과제 모음,0,Ha-young-Cho/Digital-System,660124240,Verilog,Digital-System,203,0,2023-06-29 09:56:05+00:00,[],None
185,https://github.com/yiweigao-eva/CSC258-project.git,2023-06-23 18:26:53+00:00,,0,yiweigao-eva/CSC258-project,657739412,Verilog,CSC258-project,5,0,2023-06-23 18:27:07+00:00,[],None
186,https://github.com/qulad/Basic-RV32I-Behavioral-Processor.git,2023-06-25 18:23:45+00:00,Basic RV32I processor ,0,qulad/Basic-RV32I-Behavioral-Processor,658435154,Verilog,Basic-RV32I-Behavioral-Processor,94,0,2023-06-25 18:27:28+00:00,[],None
187,https://github.com/christian-amarildo/quartus.git,2023-06-28 05:03:35+00:00,,0,christian-amarildo/quartus,659556547,Verilog,quartus,84,0,2023-06-30 03:01:39+00:00,[],None
188,https://github.com/ando56/mcdonald_caravel.git,2023-06-27 19:49:02+00:00,my copy of the caravel user project,0,ando56/mcdonald_caravel,659419725,Verilog,mcdonald_caravel,35290,0,2023-06-27 19:49:53+00:00,[],https://api.github.com/licenses/apache-2.0
189,https://github.com/Donggle0315/2022_2_CSE3016.git,2023-06-26 09:09:25+00:00,,0,Donggle0315/2022_2_CSE3016,658673606,Verilog,2022_2_CSE3016,61450,0,2023-06-26 09:12:04+00:00,[],None
190,https://github.com/Rithik260/FIFO.git,2023-06-26 18:53:18+00:00,,0,Rithik260/FIFO,658914017,Verilog,FIFO,1,0,2023-06-26 18:53:54+00:00,[],None
191,https://github.com/scottsus/EE354.git,2023-06-26 05:17:29+00:00,,0,scottsus/EE354,658584502,Verilog,EE354,15483,0,2023-06-26 05:22:31+00:00,[],None
192,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-21.git,2023-06-26 16:46:55+00:00,4 BIT DIVIDER,0,rajitha0119/100-DAYS-OF-RTL-DAY-21,658866993,Verilog,100-DAYS-OF-RTL-DAY-21,107,0,2023-06-26 16:49:15+00:00,[],None
193,https://github.com/rsk767/rsk.git,2023-06-27 10:34:36+00:00,caravel,0,rsk767/rsk,659200584,Verilog,rsk,35290,0,2023-06-27 10:35:28+00:00,[],https://api.github.com/licenses/apache-2.0
194,https://github.com/ujjayanpal/System-Design-projects.git,2023-07-01 10:32:05+00:00,,0,ujjayanpal/System-Design-projects,660956059,Verilog,System-Design-projects,1006,0,2023-07-01 10:38:52+00:00,[],None
195,https://github.com/MichalBan/Verilog-Calculator.git,2023-07-01 11:17:57+00:00,"Simple calculator capable of multiplication, logical and arithmetic operations on 8 bit U2 coded integers. Implemented in verilog.",0,MichalBan/Verilog-Calculator,660967628,Verilog,Verilog-Calculator,119,0,2023-07-01 11:27:39+00:00,[],None
196,https://github.com/himanshu-0907/8_bit_vedic_multiplier.git,2023-06-25 09:34:51+00:00,verilog project,0,himanshu-0907/8_bit_vedic_multiplier,658276087,Verilog,8_bit_vedic_multiplier,8,0,2023-06-25 10:21:40+00:00,[],None
197,https://github.com/para-docx/Von-Neuman-Arch.git,2023-07-04 06:48:57+00:00,,0,para-docx/Von-Neuman-Arch,662005611,Verilog,Von-Neuman-Arch,11,0,2023-07-23 17:38:08+00:00,[],https://api.github.com/licenses/apache-2.0
198,https://github.com/ShaanVG/CS220A-MIPS-Processor-.git,2023-07-04 06:52:28+00:00,Verilog code for the MPS-32 processor we made as a part of our CS220A- Computer Organization Course,0,ShaanVG/CS220A-MIPS-Processor-,662006883,Verilog,CS220A-MIPS-Processor-,211,0,2023-08-04 08:58:24+00:00,[],None
199,https://github.com/ahmedosama07/8-bit-multiplier.git,2023-07-03 19:41:47+00:00,8 bit multiplier Verilog code,0,ahmedosama07/8-bit-multiplier,661846489,Verilog,8-bit-multiplier,591,0,2023-07-11 00:47:25+00:00,"['multipliers', 'verilog']",None
200,https://github.com/NouranAbdelaziz/timer_user_project.git,2023-07-06 11:02:04+00:00,,0,NouranAbdelaziz/timer_user_project,663008707,Verilog,timer_user_project,113017,0,2023-07-06 11:02:49+00:00,[],https://api.github.com/licenses/apache-2.0
201,https://github.com/Mahesh131005/linux-commands.git,2023-06-22 05:36:36+00:00,,0,Mahesh131005/linux-commands,657004731,Verilog,linux-commands,2,0,2023-06-22 12:07:50+00:00,[],None
202,https://github.com/Snehadeep-Gayen/Computer-Organisation-and-Architecture-Lab.git,2023-06-22 03:47:30+00:00,,0,Snehadeep-Gayen/Computer-Organisation-and-Architecture-Lab,656977573,Verilog,Computer-Organisation-and-Architecture-Lab,135,0,2023-06-22 03:52:15+00:00,[],None
203,https://github.com/maktheus/BlackFOIIIII.git,2023-06-22 22:40:38+00:00,,1,maktheus/BlackFOIIIII,657362321,Verilog,BlackFOIIIII,14,0,2023-06-22 22:46:00+00:00,[],None
204,https://github.com/momostafa18/FIFO.git,2023-06-23 12:28:32+00:00,"First in First out buffer used to save the data it has 2 pointers one to track the written data and the other to track the read data, it's a standard FIFO where it write and read data at the clock edge ",0,momostafa18/FIFO,657604344,Verilog,FIFO,657,0,2023-06-23 12:43:13+00:00,[],None
205,https://github.com/123XiaoShan123/axi_stream_insert_header.git,2023-06-23 13:11:24+00:00,,0,123XiaoShan123/axi_stream_insert_header,657621413,Verilog,axi_stream_insert_header,552,0,2023-06-23 13:17:13+00:00,[],None
206,https://github.com/Alfre-D-Wen/fpga_modules.git,2023-07-03 08:18:29+00:00,,0,Alfre-D-Wen/fpga_modules,661595187,Verilog,fpga_modules,24,0,2023-07-03 08:19:17+00:00,[],None
207,https://github.com/jieunboy0516/BalanceBugEYPyr2.git,2023-06-24 01:15:29+00:00,Imperial College London Year 2 End of Year Project,0,jieunboy0516/BalanceBugEYPyr2,657833855,Verilog,BalanceBugEYPyr2,132943,0,2023-06-24 01:29:25+00:00,[],None
208,https://github.com/TheR3dWizard/VerilogProjects.git,2023-06-24 11:55:44+00:00,Digital Design Project that simulates a voting system,0,TheR3dWizard/VerilogProjects,657981621,Verilog,VerilogProjects,32,0,2023-07-12 14:30:59+00:00,[],None
209,https://github.com/doincli/verilog_niuke.git,2023-06-24 15:15:48+00:00,牛客网刷题记录,0,doincli/verilog_niuke,658037979,Verilog,verilog_niuke,69343,0,2023-06-24 15:16:33+00:00,[],None
210,https://github.com/rohanzende/Processor.git,2023-06-23 08:54:04+00:00,,0,rohanzende/Processor,657525205,Verilog,Processor,407,0,2023-06-23 09:02:05+00:00,[],None
211,https://github.com/nishit0072e/RTL_Design.git,2023-06-29 14:42:58+00:00,,0,nishit0072e/RTL_Design,660234632,Verilog,RTL_Design,8997,0,2023-06-29 14:43:05+00:00,[],None
212,https://github.com/BigFruitLeiLei/Design-for-Computer-Composition-Principle.git,2023-06-26 08:42:38+00:00,The experiment of Computer Composition Principle in WHU,0,BigFruitLeiLei/Design-for-Computer-Composition-Principle,658661641,Verilog,Design-for-Computer-Composition-Principle,77,0,2023-06-26 10:17:53+00:00,[],None
213,https://github.com/Birminness/FPGA-Floating-point-division.git,2023-06-30 13:57:12+00:00,,0,Birminness/FPGA-Floating-point-division,660652377,Verilog,FPGA-Floating-point-division,5,0,2023-06-30 13:59:37+00:00,[],None
214,https://github.com/mr1337357/cpu32.git,2023-07-02 03:21:04+00:00,,0,mr1337357/cpu32,661177961,Verilog,cpu32,4012,0,2023-07-02 03:22:00+00:00,[],None
215,https://github.com/Yuhangil/FPGA_32bitMips_Implement.git,2023-07-01 13:50:01+00:00,,0,Yuhangil/FPGA_32bitMips_Implement,661006969,Verilog,FPGA_32bitMips_Implement,3659,0,2023-07-03 03:05:05+00:00,[],https://api.github.com/licenses/apache-2.0
216,https://github.com/SaicharanRitwik39/HDLBits-Solutions.git,2023-07-05 06:47:55+00:00,,0,SaicharanRitwik39/HDLBits-Solutions,662445717,Verilog,HDLBits-Solutions,121,0,2023-07-05 07:00:40+00:00,[],None
217,https://github.com/TargetToVLSI/Digithon42Challenge.git,2023-07-05 08:19:17+00:00,Digithon42Challenge is  a self 42 days challenge to strong the Digital Design Concepts.,0,TargetToVLSI/Digithon42Challenge,662479410,Verilog,Digithon42Challenge,49,0,2023-07-05 08:26:26+00:00,[],None
218,https://github.com/vdagar2211/1x8-dimultiplexer.git,2023-07-08 11:56:47+00:00,,0,vdagar2211/1x8-dimultiplexer,663903728,Verilog,1x8-dimultiplexer,1,0,2023-07-08 11:58:28+00:00,[],None
219,https://github.com/alokerdas/chipignite.git,2023-06-26 06:13:23+00:00,This repo is for new soc using chip ignite,0,alokerdas/chipignite,658601306,Verilog,chipignite,35321,0,2023-06-26 06:14:16+00:00,[],https://api.github.com/licenses/apache-2.0
220,https://github.com/PRAGATI-0102/Right-Shifter-Day-082-.git,2023-06-30 19:01:03+00:00,A 4-bit right shifter is a digital circuit that shifts the bits of a 4-bit input value to the right by one position.,0,PRAGATI-0102/Right-Shifter-Day-082-,660754729,Verilog,Right-Shifter-Day-082-,20,0,2023-06-30 19:02:49+00:00,[],None
221,https://github.com/V-19/Proyecto2_Verificacion.git,2023-06-30 20:15:51+00:00,,0,V-19/Proyecto2_Verificacion,660775043,Verilog,Proyecto2_Verificacion,8744,0,2023-06-30 20:33:47+00:00,[],None
222,https://github.com/abhimanyumagapu/Processor.git,2023-07-07 09:37:03+00:00,Verilog Implementation of a basic microprocessor.,0,abhimanyumagapu/Processor,663437244,Verilog,Processor,529,0,2023-07-07 10:38:13+00:00,[],None
223,https://github.com/Pranavn30/FPGA-Sequential-Calculator.git,2023-07-07 02:35:58+00:00,,0,Pranavn30/FPGA-Sequential-Calculator,663305743,Verilog,FPGA-Sequential-Calculator,15,0,2023-07-07 02:40:09+00:00,[],None
224,https://github.com/wrs225/SHA-256-AI.git,2023-07-08 18:17:37+00:00,,0,wrs225/SHA-256-AI,664029580,Verilog,SHA-256-AI,35429,0,2023-07-08 18:18:28+00:00,[],https://api.github.com/licenses/apache-2.0
225,https://github.com/Vakon84/zxkit1-vga-scandoubler-firmware.git,2023-07-07 16:07:10+00:00,,0,Vakon84/zxkit1-vga-scandoubler-firmware,663576775,Verilog,zxkit1-vga-scandoubler-firmware,8,0,2023-07-07 16:07:32+00:00,[],None
226,https://github.com/heeesoo/Summer_Bootscamp_2023.git,2023-07-05 15:33:48+00:00,,0,heeesoo/Summer_Bootscamp_2023,662652855,Verilog,Summer_Bootscamp_2023,5460,0,2024-04-07 12:59:20+00:00,[],None
227,https://github.com/anandsime/UART.git,2023-06-21 03:48:59+00:00,,0,anandsime/UART,656485938,Verilog,UART,2,0,2023-06-21 03:49:40+00:00,[],None
228,https://github.com/Biswajitks1/My_Verilog_Projects.git,2023-06-25 07:25:09+00:00,,0,Biswajitks1/My_Verilog_Projects,658238618,Verilog,My_Verilog_Projects,8,0,2023-06-25 07:27:27+00:00,[],None
229,https://github.com/dsa-shua/riscv-pipelined-processor.git,2023-06-27 14:29:12+00:00,[UNDER_DEV] ,0,dsa-shua/riscv-pipelined-processor,659297179,Verilog,riscv-pipelined-processor,33,0,2023-06-27 14:32:36+00:00,[],None
230,https://github.com/ElTheScreeps/Pipeline_Sort.git,2023-06-29 17:30:16+00:00,,0,ElTheScreeps/Pipeline_Sort,660300681,Verilog,Pipeline_Sort,5,0,2023-06-29 17:31:29+00:00,[],None
231,https://github.com/youssef-S-Elmahdy/Signed_Sequential_Multiplier.git,2023-07-05 20:50:09+00:00,,0,youssef-S-Elmahdy/Signed_Sequential_Multiplier,662763126,Verilog,Signed_Sequential_Multiplier,1796,0,2023-07-05 20:50:26+00:00,[],https://api.github.com/licenses/gpl-2.0
232,https://github.com/Roshanteja21/WASHING-MACHINE-CONTROL-SYSTEM-FPGA.git,2023-07-01 06:04:48+00:00,,0,Roshanteja21/WASHING-MACHINE-CONTROL-SYSTEM-FPGA,660889939,Verilog,WASHING-MACHINE-CONTROL-SYSTEM-FPGA,425,0,2023-07-01 06:08:52+00:00,[],None
233,https://github.com/Arthur-Ataide/tp02-parte2-5070-5099.git,2023-07-01 13:50:43+00:00,,0,Arthur-Ataide/tp02-parte2-5070-5099,661007176,Verilog,tp02-parte2-5070-5099,6356,0,2023-09-30 20:55:23+00:00,[],None
234,https://github.com/kooshkya/cosine.git,2023-06-26 11:53:19+00:00,,0,kooshkya/cosine,658740392,Verilog,cosine,1612,0,2023-06-26 11:54:28+00:00,[],None
235,https://github.com/linda8832825/2016_LBP.git,2023-06-25 12:16:16+00:00,一次讀九筆資料,0,linda8832825/2016_LBP,658322300,Verilog,2016_LBP,9745,0,2023-06-25 12:16:25+00:00,[],None
236,https://github.com/knowingwhatwant/DigtalModu.git,2023-06-25 16:22:16+00:00,,0,knowingwhatwant/DigtalModu,658400488,Verilog,DigtalModu,34117,0,2023-06-25 16:24:53+00:00,[],None
237,https://github.com/gowthami-codes/digital-design.git,2023-06-25 16:21:03+00:00,,0,gowthami-codes/digital-design,658400103,Verilog,digital-design,0,0,2023-06-25 16:36:27+00:00,[],None
238,https://github.com/STARS-Design-Track-2023/OpenLane-flow.git,2023-06-26 04:17:59+00:00,Openlane Wrapper,0,STARS-Design-Track-2023/OpenLane-flow,658568591,Verilog,OpenLane-flow,187603,0,2023-06-26 04:53:27+00:00,[],None
239,https://github.com/citypooh/Embedded_Hardware_Design.git,2023-06-26 08:00:02+00:00,2021-2 임베디드하드웨어설계,0,citypooh/Embedded_Hardware_Design,658643318,Verilog,Embedded_Hardware_Design,16306,0,2023-06-28 07:08:07+00:00,[],None
240,https://github.com/Ignisso/verilog-kernel-module.git,2023-06-28 14:20:51+00:00,,0,Ignisso/verilog-kernel-module,659771015,Verilog,verilog-kernel-module,6,0,2023-06-28 18:46:47+00:00,[],None
241,https://github.com/shikhargovil/AHB-to-APB-Bridge.git,2023-07-03 13:43:05+00:00,,0,shikhargovil/AHB-to-APB-Bridge,661717867,Verilog,AHB-to-APB-Bridge,285,0,2023-07-21 18:48:15+00:00,[],None
242,https://github.com/Vasitito/Odd_even_sorter.git,2023-07-03 10:42:17+00:00,,2,Vasitito/Odd_even_sorter,661649379,Verilog,Odd_even_sorter,164,0,2023-07-24 22:02:27+00:00,[],https://api.github.com/licenses/apache-2.0
243,https://github.com/Omarchaban/UART_Receiver_Transmitter.git,2023-07-03 15:00:47+00:00,,0,Omarchaban/UART_Receiver_Transmitter,661750655,Verilog,UART_Receiver_Transmitter,1382,0,2023-07-03 15:01:42+00:00,[],None
244,https://github.com/Manikanta-IITB/Design-and-Comparison-of-Parallel-Prefix-Adders.git,2023-07-03 21:24:50+00:00,This project shows the design and comparison of various 16-bit parallel prefix adders. ,0,Manikanta-IITB/Design-and-Comparison-of-Parallel-Prefix-Adders,661873415,Verilog,Design-and-Comparison-of-Parallel-Prefix-Adders,2902,0,2023-07-03 21:27:39+00:00,[],None
245,https://github.com/Hana-Khater/Single_Cycle_RISC_V_Microprocessor.git,2023-07-03 16:10:55+00:00,,1,Hana-Khater/Single_Cycle_RISC_V_Microprocessor,661777203,Verilog,Single_Cycle_RISC_V_Microprocessor,2363,0,2023-07-03 16:11:17+00:00,[],None
246,https://github.com/synam/AES256.git,2023-07-04 05:04:18+00:00,,0,synam/AES256,661973235,Verilog,AES256,12,0,2023-07-04 05:04:45+00:00,[],None
247,https://github.com/akash-ravi/Smart-Elevator-Control.git,2023-07-03 10:22:03+00:00,Course project for DDS CS201. A smart elevator control system with logism and verilog code for simulating the elevator system,1,akash-ravi/Smart-Elevator-Control,661642429,Verilog,Smart-Elevator-Control,830,0,2023-07-03 10:23:58+00:00,[],None
248,https://github.com/ThatLastCrash/SingleCircleCPU.git,2023-07-03 05:56:09+00:00,,0,ThatLastCrash/SingleCircleCPU,661546733,Verilog,SingleCircleCPU,59693,0,2023-07-03 06:03:16+00:00,[],None
249,https://github.com/raishubham1998/100daysRTL.git,2023-07-05 10:36:27+00:00,,0,raishubham1998/100daysRTL,662532706,Verilog,100daysRTL,4,0,2023-07-10 20:44:06+00:00,[],None
250,https://github.com/ArikShapiro/Verilog.git,2023-07-06 13:25:57+00:00,Verilog Coding Portfolio,0,ArikShapiro/Verilog,663063617,Verilog,Verilog,64,0,2023-07-06 13:32:51+00:00,[],None
251,https://github.com/nasrAnthony/CEG3156_RISC_PROCESSOR.git,2023-06-24 19:16:14+00:00,,0,nasrAnthony/CEG3156_RISC_PROCESSOR,658101898,Verilog,CEG3156_RISC_PROCESSOR,41,0,2023-06-27 05:01:36+00:00,[],None
252,https://github.com/CorneliaMassey/goalkeeper6.git,2023-06-30 03:10:26+00:00,,1,CorneliaMassey/goalkeeper6,660446631,Verilog,goalkeeper6,1239,0,2023-06-30 03:13:40+00:00,[],
253,https://github.com/pritish2439/Parking-System-project.git,2023-07-08 05:41:16+00:00,A simple project using Verilog where there are five parking slots available. According to the number of parking space available the 7 segment display shows FULL or OPEn and the incoming vehicle can know if there is any parking space available in the system.,0,pritish2439/Parking-System-project,663793394,Verilog,Parking-System-project,2,0,2023-07-08 05:43:49+00:00,[],None
254,https://github.com/pvanschendel/Odyssey_MiSTer.git,2023-07-05 19:52:35+00:00,FPGA implementation of Magnavox Odyssee,0,pvanschendel/Odyssey_MiSTer,662746720,Verilog,Odyssey_MiSTer,147,0,2024-01-24 20:52:34+00:00,[],https://api.github.com/licenses/gpl-2.0
255,https://github.com/li-dongting/CPU.git,2023-06-27 13:11:03+00:00,,0,li-dongting/CPU,659262640,Verilog,CPU,37073,0,2023-06-27 13:13:55+00:00,[],None
256,https://github.com/marnovandermaas/tiny-factorizer.git,2023-07-07 14:21:07+00:00,Based on: https://github.com/TinyTapeout/tt04-verilog-demo,0,marnovandermaas/tiny-factorizer,663536632,Verilog,tiny-factorizer,109,0,2023-07-10 15:29:09+00:00,"['rtl', 'silicon', 'tinytapeout', 'verilog']",https://api.github.com/licenses/apache-2.0
257,https://github.com/ianerik6/caravell_miinicial_proyecto.git,2023-06-27 19:35:06+00:00,es diferente al solo creado en mi cuenta,0,ianerik6/caravell_miinicial_proyecto,659415163,Verilog,caravell_miinicial_proyecto,35290,0,2023-06-27 19:35:57+00:00,[],https://api.github.com/licenses/apache-2.0
258,https://github.com/Post-Modern28/VerilogTrigonometry.git,2023-06-25 14:55:31+00:00,This project was designed for FPGA to show the trigonometric angle values. The program is capable of showing the sine and cosine of the given angle,0,Post-Modern28/VerilogTrigonometry,658372115,Verilog,VerilogTrigonometry,27,0,2023-06-25 15:01:32+00:00,[],None
259,https://github.com/SreeMallavikha/Project.git,2023-06-26 04:36:27+00:00,,0,SreeMallavikha/Project,658573504,Verilog,Project,1,0,2023-06-26 04:40:37+00:00,[],None
260,https://github.com/shihjimmy/Banded_Smith_Waterman_Genome_Alignment.git,2023-06-25 02:46:16+00:00,111-2 Special Project ,0,shihjimmy/Banded_Smith_Waterman_Genome_Alignment,658179420,Verilog,Banded_Smith_Waterman_Genome_Alignment,1244,0,2023-10-30 18:09:00+00:00,[],None
261,https://github.com/teddy5566/IC_contest_2014.git,2023-06-27 17:04:30+00:00,,0,teddy5566/IC_contest_2014,659361993,Verilog,IC_contest_2014,278,0,2023-06-27 17:06:13+00:00,[],None
262,https://github.com/nicedayd/hong.git,2023-07-02 02:30:32+00:00,https://github.com/mattvenn/power_switch.git,0,nicedayd/hong,661169351,Verilog,hong,70,0,2023-07-02 02:32:28+00:00,[],None
263,https://github.com/RonishNadar/Automated-Agricultural-Robot.git,2023-06-28 19:41:34+00:00,,0,RonishNadar/Automated-Agricultural-Robot,659891116,Verilog,Automated-Agricultural-Robot,22,0,2023-07-01 18:58:26+00:00,[],None
264,https://github.com/nithish203/MIPS32.git,2023-07-01 16:48:22+00:00,,0,nithish203/MIPS32,661056494,Verilog,MIPS32,7,0,2023-07-09 05:41:47+00:00,[],None
265,https://github.com/lilyyang1995/CFAR.git,2023-07-03 06:17:51+00:00,,1,lilyyang1995/CFAR,661553160,Verilog,CFAR,111,0,2023-07-03 06:20:24+00:00,[],None
266,https://github.com/windmilltown/robei_verilog.git,2023-07-03 05:36:28+00:00,,0,windmilltown/robei_verilog,661541444,Verilog,robei_verilog,43128,0,2023-07-18 16:41:27+00:00,[],None
267,https://github.com/binhkieudo/JTAG.git,2023-07-04 13:10:16+00:00,Programmer & Debugger,0,binhkieudo/JTAG,662149221,Verilog,JTAG,11252,0,2023-07-04 15:51:22+00:00,[],None
268,https://github.com/1111394/cccpu.git,2023-06-26 02:26:28+00:00,,0,1111394/cccpu,658538989,Verilog,cccpu,21,0,2023-06-26 02:39:45+00:00,[],https://api.github.com/licenses/gpl-3.0
269,https://github.com/yyyns/luu.git,2023-06-26 08:05:23+00:00,,0,yyyns/luu,658645631,Verilog,luu,565,0,2023-06-26 08:54:22+00:00,[],None
270,https://github.com/Shaurya0104/5-Stage-Pipelined-Processor-Simulator.git,2023-06-22 11:59:45+00:00,,0,Shaurya0104/5-Stage-Pipelined-Processor-Simulator,657138691,Verilog,5-Stage-Pipelined-Processor-Simulator,184,0,2023-06-22 12:00:03+00:00,[],None
271,https://github.com/GSaiManoj3/Carry-Select-Adder.git,2023-06-27 11:32:56+00:00,This is a Verilog which shows the implementation of 16 Bit Carry Select Adder in Verilog,0,GSaiManoj3/Carry-Select-Adder,659223137,Verilog,Carry-Select-Adder,14,0,2023-06-27 13:05:19+00:00,[],None
272,https://github.com/Astik01x/iit_soc_8bitprocessor.git,2023-06-27 14:27:19+00:00,a simple implementation of 8 bit microprocessor using verilog HDL.,0,Astik01x/iit_soc_8bitprocessor,659296388,Verilog,iit_soc_8bitprocessor,2,0,2023-06-27 14:32:41+00:00,[],None
273,https://github.com/ksdgundam1/convolutional_code_generator.git,2023-06-28 03:45:43+00:00,HDL defined convolutional code generator,0,ksdgundam1/convolutional_code_generator,659537124,Verilog,convolutional_code_generator,1,0,2023-06-28 03:46:39+00:00,[],None
274,https://github.com/Trased/SP23.git,2023-06-28 07:11:46+00:00,,0,Trased/SP23,659599567,Verilog,SP23,1929,0,2023-07-21 11:57:12+00:00,[],None
275,https://github.com/Pizmuh/HDMI_FPGA.git,2023-06-28 09:07:35+00:00,Creating simple video genernerator wich shows an image via hdmi protocol.,0,Pizmuh/HDMI_FPGA,659646674,Verilog,HDMI_FPGA,95,0,2023-06-28 09:10:47+00:00,[],
276,https://github.com/gowthami-codes/MUX.git,2023-06-28 13:35:28+00:00,,0,gowthami-codes/MUX,659752341,Verilog,MUX,0,0,2023-06-28 13:36:04+00:00,[],None
277,https://github.com/mostafaadawy/VIVADO-1.git,2023-07-03 12:39:40+00:00,,0,mostafaadawy/VIVADO-1,661692081,Verilog,VIVADO-1,544,0,2023-07-03 12:39:54+00:00,[],None
278,https://github.com/dalerodgers/fpga.git,2023-07-03 16:24:28+00:00,,0,dalerodgers/fpga,661781895,Verilog,fpga,12,0,2023-07-03 16:52:35+00:00,[],None
279,https://github.com/312510017Erison88/FPGA.git,2023-06-29 15:52:50+00:00,,0,312510017Erison88/FPGA,660263728,Verilog,FPGA,100,0,2023-06-29 18:06:20+00:00,[],None
280,https://github.com/Shanj2003/intelunnati_SS.git,2023-07-02 12:15:51+00:00,,0,Shanj2003/intelunnati_SS,661299329,Verilog,intelunnati_SS,5783,0,2023-07-19 11:42:09+00:00,[],None
281,https://github.com/JeonHoe/FPGA_study.git,2023-06-30 05:42:55+00:00,,0,JeonHoe/FPGA_study,660483558,Verilog,FPGA_study,42631,0,2023-06-30 06:01:30+00:00,[],None
282,https://github.com/Thewbi/rtlil.git,2023-07-04 18:54:19+00:00,RTLIL files,0,Thewbi/rtlil,662276341,Verilog,rtlil,21,0,2023-07-04 18:57:32+00:00,[],None
283,https://github.com/celal9/VERILOG.git,2023-07-04 17:38:59+00:00,COVID-19 Vaccination Queue Management System,0,celal9/VERILOG,662252110,Verilog,VERILOG,776,0,2023-07-04 17:40:59+00:00,[],None
284,https://github.com/samuel-valentin/TestP2.git,2023-06-23 03:00:45+00:00,Repositorio que contiene la implemetnacion de las instrucciones del RISCV en Verilog,0,samuel-valentin/TestP2,657420915,Verilog,TestP2,16,0,2023-06-23 03:21:39+00:00,[],None
285,https://github.com/prerna-sarkar/16-stage-8-bit-synchronous-FIFO-Memory.git,2023-06-23 00:17:55+00:00,,0,prerna-sarkar/16-stage-8-bit-synchronous-FIFO-Memory,657383089,Verilog,16-stage-8-bit-synchronous-FIFO-Memory,21,0,2023-06-23 21:56:22+00:00,[],None
286,https://github.com/SMRUna/Proyecto_Digital2UNAL_SDRAM.git,2023-06-22 21:33:52+00:00,"Este repositorio contiene el código de un algunos controladores de SDRAM en verilog tomados de diversas fuentes y ajustados con los parámetros de la memoria ESMT M12L64322A, asi como su integración en Litex",0,SMRUna/Proyecto_Digital2UNAL_SDRAM,657345798,Verilog,Proyecto_Digital2UNAL_SDRAM,98,0,2023-06-22 22:42:50+00:00,[],None
287,https://github.com/LeMinhThong/thDo.git,2023-06-23 18:24:14+00:00,,0,LeMinhThong/thDo,657738531,Verilog,thDo,7,0,2023-12-22 02:12:14+00:00,[],None
288,https://github.com/gowthami-codes/decoder.git,2023-07-01 14:16:35+00:00,,0,gowthami-codes/decoder,661014410,Verilog,decoder,1,0,2023-07-01 14:17:20+00:00,[],None
289,https://github.com/muhammedTarek001/Asynchronous-FIFO.git,2023-07-01 15:51:53+00:00,an intermediate FIFO used between a fast sender clock domain and a receiving slower clock domain.,0,muhammedTarek001/Asynchronous-FIFO,661041364,Verilog,Asynchronous-FIFO,4,0,2023-07-01 15:52:56+00:00,[],None
290,https://github.com/jukebox03/SNU_LogicDesign.git,2023-06-22 08:58:47+00:00,2023-1 SNU_LogicDesign,0,jukebox03/SNU_LogicDesign,657072719,Verilog,SNU_LogicDesign,15,0,2023-06-22 09:06:57+00:00,[],None
291,https://github.com/faisal-20/IEEE-754-Single-Precision-Multiplication.git,2023-06-23 02:08:31+00:00,,0,faisal-20/IEEE-754-Single-Precision-Multiplication,657408654,Verilog,IEEE-754-Single-Precision-Multiplication,834,0,2023-06-23 02:21:25+00:00,[],None
292,https://github.com/huangmz21/loong.git,2023-06-24 02:08:10+00:00,,2,huangmz21/loong,657844293,Verilog,loong,186,0,2023-06-24 02:09:42+00:00,[],None
293,https://github.com/Chetan-G-Gokhale/16-Bit-BinaryDivider.git,2023-06-23 06:21:18+00:00,16 Bit Binary Divider Using Restoring Division Algorithm,0,Chetan-G-Gokhale/16-Bit-BinaryDivider,657472864,Verilog,16-Bit-BinaryDivider,14,0,2023-06-23 06:52:20+00:00,[],https://api.github.com/licenses/gpl-2.0
294,https://github.com/cyyself/mku060fb-soc.git,2023-06-23 12:10:08+00:00,Chipyard SoC for mku060fb,0,cyyself/mku060fb-soc,657597158,Verilog,mku060fb-soc,6978,0,2023-06-23 13:42:35+00:00,[],None
295,https://github.com/abhi-ab19/signed-booth-multiplication.git,2023-06-23 17:16:20+00:00,the booth multiplication is done for both signed and unsigned values,0,abhi-ab19/signed-booth-multiplication,657716469,Verilog,signed-booth-multiplication,3,0,2023-06-23 17:19:03+00:00,[],None
296,https://github.com/tjaros/synth.git,2023-06-24 12:22:29+00:00,A FPGA project with goal of creating basic synthetizer for Altera board,0,tjaros/synth,657988650,Verilog,synth,22201,0,2023-07-22 16:06:25+00:00,[],None
297,https://github.com/warrebe/Binary-Counter.git,2023-06-27 19:18:11+00:00,Design for a counter that counts either 1s or 0s from a binary input depending on the sel signal input,0,warrebe/Binary-Counter,659409623,Verilog,Binary-Counter,80,0,2023-06-27 19:19:58+00:00,[],None
298,https://github.com/ClaraIsaac/UART-Receiver.git,2023-07-03 12:20:14+00:00,"The utilized modules included the Edge Bit Counter, UART RX FSM, Data Sampling, and Deserializer.",0,ClaraIsaac/UART-Receiver,661684501,Verilog,UART-Receiver,3,0,2023-07-03 12:21:20+00:00,[],None
299,https://github.com/sergiogarino/proy_digitales.git,2023-07-04 22:13:02+00:00,Proyecto Circuitos Digitales I 2023,1,sergiogarino/proy_digitales,662326323,Verilog,proy_digitales,45,0,2023-07-06 09:21:32+00:00,[],https://api.github.com/licenses/mit
300,https://github.com/manuelcobos23/Computadores1-ContadorArbitrario.git,2023-07-04 10:47:02+00:00,Trabajo de la asignatura Computadores I,0,manuelcobos23/Computadores1-ContadorArbitrario,662095546,Verilog,Computadores1-ContadorArbitrario,668,0,2023-07-04 10:48:10+00:00,[],None
301,https://github.com/projectDV/misc_sv_basics.git,2023-07-02 11:18:17+00:00,I have stored all the basic examples on SV as and when I've learnt something new.,0,projectDV/misc_sv_basics,661284595,Verilog,misc_sv_basics,17,0,2023-10-11 06:57:27+00:00,[],None
302,https://github.com/gowthami-codes/rca.git,2023-07-02 13:26:53+00:00,,0,gowthami-codes/rca,661318704,Verilog,rca,1,0,2023-07-02 13:27:45+00:00,[],None
303,https://github.com/shivammahato7/8-Bit-RISC-V-Processor.git,2023-06-25 06:18:45+00:00,,0,shivammahato7/8-Bit-RISC-V-Processor,658221434,Verilog,8-Bit-RISC-V-Processor,1,0,2023-06-25 06:20:39+00:00,[],None
304,https://github.com/rezim018/adpllcaravel.git,2023-06-26 07:31:44+00:00,,0,rezim018/adpllcaravel,658631388,Verilog,adpllcaravel,35290,0,2023-06-26 07:32:41+00:00,[],https://api.github.com/licenses/apache-2.0
305,https://github.com/kznr02/RTL-loopback-UART.git,2023-06-25 15:03:58+00:00,Loopback UART FPGA Implementation,0,kznr02/RTL-loopback-UART,658374858,Verilog,RTL-loopback-UART,4,0,2023-06-25 15:13:05+00:00,[],None
306,https://github.com/shihjimmy/RISCV_Processor.git,2023-06-25 03:41:12+00:00,5-stage pipelined RISCV processor ,0,shihjimmy/RISCV_Processor,658189808,Verilog,RISCV_Processor,9954,0,2023-10-30 18:08:48+00:00,[],None
307,https://github.com/Anirudh1731/RiscV-Processor-Verilog.git,2023-07-08 18:40:52+00:00,In this I implemented an entire RISCV processor from scratch. 17 sub blocks of the processor were coded in verilog.,0,Anirudh1731/RiscV-Processor-Verilog,664036136,Verilog,RiscV-Processor-Verilog,124,0,2023-07-08 18:42:31+00:00,[],None
308,https://github.com/srsapireddy/TCL-Automation.git,2023-07-08 06:57:01+00:00,,0,srsapireddy/TCL-Automation,663813525,Verilog,TCL-Automation,1409,0,2023-07-08 21:28:11+00:00,[],https://api.github.com/licenses/mit
309,https://github.com/K-Rakesh200206/SPI_Design_using_verilog.git,2023-07-08 02:33:27+00:00,,0,K-Rakesh200206/SPI_Design_using_verilog,663747182,Verilog,SPI_Design_using_verilog,1010,0,2023-07-08 02:50:41+00:00,[],None
310,https://github.com/orangeYao/uploadGPT.git,2023-07-06 12:59:33+00:00,,0,orangeYao/uploadGPT,663052282,Verilog,uploadGPT,622,0,2023-07-06 13:25:03+00:00,[],None
311,https://github.com/zoey-j1/simbricks.git,2023-07-06 15:19:03+00:00,,0,zoey-j1/simbricks,663112264,Verilog,simbricks,6415,0,2023-07-06 16:12:37+00:00,[],https://api.github.com/licenses/mit
312,https://github.com/NourMamdouh/UART_Rx_FSMD.git,2023-07-03 22:07:54+00:00,,0,NourMamdouh/UART_Rx_FSMD,661882730,Verilog,UART_Rx_FSMD,10,0,2023-07-03 22:09:17+00:00,[],None
313,https://github.com/wait-bad/cpld_epm240study.git,2023-07-05 11:41:35+00:00,用于记录和学习epm240t100c5n这款cpld学习中的知识点和代码,0,wait-bad/cpld_epm240study,662556119,Verilog,cpld_epm240study,2012,0,2023-07-05 12:04:54+00:00,[],None
314,https://github.com/jaydonalexis/Scan-n-Charge.git,2023-07-05 06:12:59+00:00,,0,jaydonalexis/Scan-n-Charge,662433822,Verilog,Scan-n-Charge,64928,0,2023-07-09 16:32:19+00:00,[],None
315,https://github.com/EmirEry1/VerySimpleCPU-Verilog.git,2023-07-05 10:48:52+00:00,This is a school project that I have done. I have designed a simple cpu using the guidelines provided to me in Verilog.,0,EmirEry1/VerySimpleCPU-Verilog,662537176,Verilog,VerySimpleCPU-Verilog,51,0,2023-07-05 10:49:56+00:00,[],None
316,https://github.com/PRAGATI-0102/LED-Blink-using-Verilog-Day-087-.git,2023-07-05 16:16:19+00:00,The module takes the 50MHz clock signal as input and generates a periodic output signal to drive the LED. The frequency of the blinking is determined by dividing the clock frequency appropriately.,0,PRAGATI-0102/LED-Blink-using-Verilog-Day-087-,662669692,Verilog,LED-Blink-using-Verilog-Day-087-,97,0,2023-07-05 16:21:08+00:00,[],None
317,https://github.com/dstn-m/Verilog_VGA.git,2023-07-03 11:53:37+00:00,Implementation of VGA controller in Verilog. Target board is the Basys3,0,dstn-m/Verilog_VGA,661674597,Verilog,Verilog_VGA,15,0,2023-07-09 20:54:44+00:00,[],None
318,https://github.com/Byesol/Computer-Science-and-Engineering-Laboratory-II-.git,2023-06-27 00:28:32+00:00,,0,Byesol/Computer-Science-and-Engineering-Laboratory-II-,659000327,Verilog,Computer-Science-and-Engineering-Laboratory-II-,12274,0,2024-03-08 00:16:32+00:00,[],None
319,https://github.com/JimmyTauH/PipelinedCPU_RISCV.git,2023-06-25 05:22:19+00:00,A pipelined CPU for RISC_V ISA. ,0,JimmyTauH/PipelinedCPU_RISCV,658208677,Verilog,PipelinedCPU_RISCV,13,0,2023-11-21 03:01:08+00:00,[],None
320,https://github.com/JuniorBrice/JR-COLLEGE-8BitFastCalculator.git,2023-07-06 18:48:02+00:00,,0,JuniorBrice/JR-COLLEGE-8BitFastCalculator,663188874,Verilog,JR-COLLEGE-8BitFastCalculator,973,0,2023-07-06 19:04:00+00:00,[],None
321,https://github.com/sharathkrish55/RISCV_Network_Accelerator.git,2023-07-08 13:45:40+00:00,XID - Accelerator Intrusion Detection System with Multi-Core Multi-Threaded RISC-V Processor,0,sharathkrish55/RISCV_Network_Accelerator,663939793,Verilog,RISCV_Network_Accelerator,2079,0,2023-07-08 13:52:59+00:00,[],None
322,https://github.com/Intelectron6/FIFO-Designs.git,2023-07-08 14:30:18+00:00,Verilog codes of Synchronous and Asynchronous FIFOs.,0,Intelectron6/FIFO-Designs,663955955,Verilog,FIFO-Designs,215,0,2023-07-08 14:31:11+00:00,[],None
323,https://github.com/paolovasquezg/single-cycle.git,2023-07-08 20:30:28+00:00,,0,paolovasquezg/single-cycle,664066199,Verilog,single-cycle,33,0,2023-07-08 20:32:09+00:00,[],None
324,https://github.com/NikitaAgeev/HDL_MCST_tasks.git,2023-07-05 07:59:55+00:00,Repository for MCST,0,NikitaAgeev/HDL_MCST_tasks,662472324,Verilog,HDL_MCST_tasks,59,0,2023-07-05 13:40:03+00:00,[],None
325,https://github.com/danielforever/Canney_Edge_Detection_Verilog.git,2023-07-07 01:57:54+00:00,,0,danielforever/Canney_Edge_Detection_Verilog,663295939,Verilog,Canney_Edge_Detection_Verilog,12149,0,2023-07-07 02:17:01+00:00,[],None
326,https://github.com/PRAGATI-0102/PIPO-Day-88-.git,2023-07-06 17:13:33+00:00,I implemented a module to create the PIPO circuit. The module takes in a parallel input signal and produces a parallel output signal.,0,PRAGATI-0102/PIPO-Day-88-,663154473,Verilog,PIPO-Day-88-,100,0,2023-07-06 17:29:24+00:00,[],None
327,https://github.com/Gitefu/Miso-Soup-Project.git,2023-07-07 08:07:55+00:00,,0,Gitefu/Miso-Soup-Project,663404858,Verilog,Miso-Soup-Project,35290,0,2023-07-07 08:08:46+00:00,[],https://api.github.com/licenses/apache-2.0
328,https://github.com/TengHui/AddMulDiv-Unit.git,2023-07-07 08:25:25+00:00,,0,TengHui/AddMulDiv-Unit,663411456,Verilog,AddMulDiv-Unit,24,0,2023-07-08 03:56:12+00:00,[],https://api.github.com/licenses/gpl-3.0
329,https://github.com/ahmed531998/Breakout-Game.git,2023-06-24 19:58:09+00:00,,0,ahmed531998/Breakout-Game,658110932,Verilog,Breakout-Game,4,0,2023-06-24 19:58:49+00:00,[],None
330,https://github.com/Pegasushi30/CSE224-VSCPU.git,2023-06-24 15:51:56+00:00,,0,Pegasushi30/CSE224-VSCPU,658048830,Verilog,CSE224-VSCPU,50,0,2023-06-24 15:52:51+00:00,[],None
331,https://github.com/koenenwmn/fail-operational-noc-demonstrator.git,2023-06-30 21:50:08+00:00,Demonstrator system for a fail-operational NoC for mixed-critical MPSoC,0,koenenwmn/fail-operational-noc-demonstrator,660796471,Verilog,fail-operational-noc-demonstrator,19238,0,2023-06-30 22:21:36+00:00,[],None
332,https://github.com/QuratulainG/Code.git,2023-07-01 15:11:06+00:00,My UVM Project,0,QuratulainG/Code,661030091,Verilog,Code,253,0,2023-07-04 16:52:43+00:00,[],None
333,https://github.com/ThatLastCrash/PipeLineCPU.git,2023-07-03 05:42:20+00:00,,0,ThatLastCrash/PipeLineCPU,661542939,Verilog,PipeLineCPU,2260,0,2023-07-03 05:52:48+00:00,[],None
334,https://github.com/pantulwars/KGP-RISC.git,2023-07-03 13:28:53+00:00,,0,pantulwars/KGP-RISC,661712076,Verilog,KGP-RISC,444,0,2023-07-03 13:30:15+00:00,[],None
335,https://github.com/Roshanteja21/RISC-V-R32I-VLSI-TOP-SUBBLOCKS-VLSI.git,2023-07-01 05:51:16+00:00,,0,Roshanteja21/RISC-V-R32I-VLSI-TOP-SUBBLOCKS-VLSI,660886826,Verilog,RISC-V-R32I-VLSI-TOP-SUBBLOCKS-VLSI,90,0,2023-07-01 05:53:41+00:00,[],None
336,https://github.com/Kshitiz44/Hack_CPU.git,2023-06-30 07:19:55+00:00,16-bit ALU simulator using Systems Verilog.,0,Kshitiz44/Hack_CPU,660514246,Verilog,Hack_CPU,181,0,2023-06-30 08:29:33+00:00,[],None
337,https://github.com/GaryMatthews/efab.git,2023-07-02 09:28:22+00:00,,0,GaryMatthews/efab,661257028,Verilog,efab,35290,0,2023-07-02 09:29:13+00:00,[],https://api.github.com/licenses/apache-2.0
338,https://github.com/Shiningzxl/test_image.git,2023-07-02 09:58:47+00:00,,0,Shiningzxl/test_image,661264512,Verilog,test_image,6,0,2023-07-02 10:20:32+00:00,[],None
339,https://github.com/Phantom1003/verilator-issue-4242.git,2023-07-02 17:34:16+00:00,,0,Phantom1003/verilator-issue-4242,661389848,Verilog,verilator-issue-4242,3,0,2023-07-02 17:35:43+00:00,[],None
340,https://github.com/Apoorvag21/CS220.git,2023-07-02 16:31:41+00:00,,0,Apoorvag21/CS220,661372617,Verilog,CS220,619,0,2023-07-02 17:20:30+00:00,[],None
341,https://github.com/sicajc/EECS_LAB_TRAINING.git,2023-07-04 10:50:47+00:00,The training summer vacation training of EECS lab,0,sicajc/EECS_LAB_TRAINING,662096855,Verilog,EECS_LAB_TRAINING,81869,0,2023-08-10 05:55:23+00:00,[],None
342,https://github.com/Zh0uzZ/cram_control.git,2023-07-04 08:27:29+00:00,dma+uart_debug_bridge,0,Zh0uzZ/cram_control,662042309,Verilog,cram_control,32,0,2023-07-04 14:15:00+00:00,[],None
343,https://github.com/kjakx/cpu15.git,2023-07-04 08:08:12+00:00,動かしてわかるCPUの作り方10講,0,kjakx/cpu15,662035075,Verilog,cpu15,93,0,2023-07-10 08:06:25+00:00,[],None
344,https://github.com/doeksul/AMD-SummerPractice.git,2023-06-27 12:00:20+00:00,,0,doeksul/AMD-SummerPractice,659233682,Verilog,AMD-SummerPractice,36,0,2023-07-12 12:12:42+00:00,[],None
345,https://github.com/Alexm-picard/Pong.git,2023-06-28 00:20:00+00:00,,0,Alexm-picard/Pong,659486059,Verilog,Pong,57,0,2023-06-28 00:20:35+00:00,[],None
346,https://github.com/BSkim26/VLSI.git,2023-06-27 07:58:30+00:00,,0,BSkim26/VLSI,659135887,Verilog,VLSI,13767,0,2023-06-27 08:03:22+00:00,[],None
347,https://github.com/ProyectoArcade/Lesson01_Piezas_Basicas.git,2023-06-25 10:55:57+00:00,Proyecto Arcade: una pequeña introducción a como implimentar componentes básicos usando Verilog,0,ProyectoArcade/Lesson01_Piezas_Basicas,658299440,Verilog,Lesson01_Piezas_Basicas,23,0,2023-06-25 11:55:16+00:00,[],https://api.github.com/licenses/gpl-3.0
348,https://github.com/Dyumnin-Interns/interfaces-Sar070999.git,2023-06-25 15:08:01+00:00,interfaces-Sar070999 created by GitHub Classroom,0,Dyumnin-Interns/interfaces-Sar070999,658376200,Verilog,interfaces-Sar070999,18,0,2023-06-28 07:27:09+00:00,[],None
349,https://github.com/cao-jw/xjtu_COMP461805_mipscpu.git,2023-06-25 07:23:38+00:00,,0,cao-jw/xjtu_COMP461805_mipscpu,658238234,Verilog,xjtu_COMP461805_mipscpu,235,0,2023-07-10 10:50:32+00:00,[],None
350,https://github.com/Jewonkaa/Szybka_odwrotnosc_pierwiastka_kwadratowego.git,2023-06-25 21:05:49+00:00,,0,Jewonkaa/Szybka_odwrotnosc_pierwiastka_kwadratowego,658474109,Verilog,Szybka_odwrotnosc_pierwiastka_kwadratowego,16014,0,2023-06-25 21:10:07+00:00,[],None
351,https://github.com/iemreyerli/unlocking-circuit.git,2023-06-28 06:34:05+00:00,,0,iemreyerli/unlocking-circuit,659585034,Verilog,unlocking-circuit,1,0,2023-06-28 06:43:12+00:00,[],None
352,https://github.com/Chanchal-Mandal/UART-CODE.git,2023-06-28 11:58:05+00:00,This repository contains the Verilog HDL code to Implement the UART device . ,0,Chanchal-Mandal/UART-CODE,659712112,Verilog,UART-CODE,31,0,2023-06-29 16:28:44+00:00,[],None
353,https://github.com/RonishNadar/FPGA-based-Modular-3D-Printer.git,2023-06-28 19:31:17+00:00,,0,RonishNadar/FPGA-based-Modular-3D-Printer,659887915,Verilog,FPGA-based-Modular-3D-Printer,17,0,2023-07-01 18:51:45+00:00,[],None
354,https://github.com/DhruvAgg03/CS2610-Lab.git,2023-06-22 14:23:40+00:00,,0,DhruvAgg03/CS2610-Lab,657196993,Verilog,CS2610-Lab,1692,0,2023-06-22 14:26:33+00:00,[],None
355,https://github.com/gowthami-codes/demux.git,2023-06-29 14:04:12+00:00,,0,gowthami-codes/demux,660218197,Verilog,demux,1,0,2023-06-29 14:05:00+00:00,[],None
356,https://github.com/HalchalKirti/parity_checker.git,2023-07-05 17:35:25+00:00,This project checks the parity of the bit stream entered and gives the output as high for odd parity.,0,HalchalKirti/parity_checker,662698893,Verilog,parity_checker,2,0,2023-07-05 18:10:58+00:00,[],None
357,https://github.com/akash172002/intelrepo_ATM_FSM_Controller.git,2023-07-07 10:25:39+00:00,,0,akash172002/intelrepo_ATM_FSM_Controller,663454460,Verilog,intelrepo_ATM_FSM_Controller,38,0,2023-07-19 11:36:04+00:00,[],None
358,https://github.com/warrebe/ALU-SV-Design.git,2023-06-26 18:37:48+00:00,Projects from ECE474 and other samples,0,warrebe/ALU-SV-Design,658908676,Verilog,ALU-SV-Design,88,0,2023-06-27 19:11:51+00:00,[],None
359,https://github.com/farukyld/sort-circuit.git,2023-06-21 11:25:44+00:00,an RTL circuit that sorts the integer values in a momory unit connected with AXI-Lite,0,farukyld/sort-circuit,656657092,Verilog,sort-circuit,2640,0,2023-07-18 09:32:18+00:00,"['axi-lite', 'insertion-sort', 'rtl-design', 'state-machine', 'verilog']",None
360,https://github.com/zhaohaisun/electronic-test-platform.git,2023-06-30 15:49:40+00:00,HNU电子测试平台,0,zhaohaisun/electronic-test-platform,660693982,Verilog,electronic-test-platform,88050,0,2023-06-30 16:15:58+00:00,[],None
361,https://github.com/mplimonta/MIPS-Processor.git,2023-06-27 23:55:06+00:00,Processador desenvolvido durante a disciplina de Laboratório de Arquitetura e Organização de Computadores,0,mplimonta/MIPS-Processor,659481125,Verilog,MIPS-Processor,245,0,2023-06-28 00:00:33+00:00,[],None
362,https://github.com/asimkhan8107/VerilogHDL-30DAYS.git,2023-07-04 04:55:05+00:00,30 days of  Verilog HDL to cover all basic Digital Electronic Circuit Modelling,0,asimkhan8107/VerilogHDL-30DAYS,661970613,Verilog,VerilogHDL-30DAYS,2860,0,2024-03-24 15:53:39+00:00,[],None
363,https://github.com/GSaiManoj3/8-bit-vedic-multiplier.git,2023-06-27 14:24:57+00:00,This Circuit is a 8 bit multiplier but it uses vedic methods which are regarded as fastest methods for calculations,0,GSaiManoj3/8-bit-vedic-multiplier,659295237,Verilog,8-bit-vedic-multiplier,3,0,2023-06-27 15:14:38+00:00,[],None
364,https://github.com/teddy5566/IC_contest_2022.git,2023-06-27 16:55:56+00:00,,0,teddy5566/IC_contest_2022,659358659,Verilog,IC_contest_2022,1638,0,2023-06-27 17:04:09+00:00,[],None
365,https://github.com/santiagoruizvt/PONG_Game_FPGA.git,2023-06-29 02:31:02+00:00,,0,santiagoruizvt/PONG_Game_FPGA,659992041,Verilog,PONG_Game_FPGA,8,0,2023-06-29 02:50:50+00:00,[],None
366,https://github.com/Harsh-Singh007/intelrepo_ATM-FSM.git,2023-07-06 13:55:18+00:00,Verilog HDL code and Finite State Machine (FSM) for a simple ATM,0,Harsh-Singh007/intelrepo_ATM-FSM,663076039,Verilog,intelrepo_ATM-FSM,120,0,2023-07-19 11:38:57+00:00,[],None
367,https://github.com/25Aditya25/AsynchronousFIFO.git,2023-07-07 05:24:09+00:00,Simple implementation of 8 bit Asynchronous FIFO with 8 entries for specific clock domains,0,25Aditya25/AsynchronousFIFO,663348924,Verilog,AsynchronousFIFO,9,0,2023-07-07 05:25:05+00:00,[],None
368,https://github.com/jianningzhuang/CG3207-Computer_Architecture.git,2023-07-04 12:18:16+00:00,,0,jianningzhuang/CG3207-Computer_Architecture,662128556,Verilog,CG3207-Computer_Architecture,56508,0,2023-07-04 12:20:09+00:00,[],None
369,https://github.com/Rubee149/Basic-Modules.git,2023-07-04 17:06:28+00:00,,0,Rubee149/Basic-Modules,662241340,Verilog,Basic-Modules,548,0,2023-07-05 10:53:07+00:00,[],None
370,https://github.com/DavidZyy/nju_digital_design_chisel.git,2023-07-06 08:30:18+00:00,,0,DavidZyy/nju_digital_design_chisel,662950092,Verilog,nju_digital_design_chisel,8,0,2023-07-06 08:47:15+00:00,[],None
371,https://github.com/LautaroVeliz/ArquitecturaDeComputadoras_TP2.git,2023-07-03 01:00:44+00:00,,0,LautaroVeliz/ArquitecturaDeComputadoras_TP2,661479409,Verilog,ArquitecturaDeComputadoras_TP2,21,0,2023-07-03 01:01:59+00:00,[],None
372,https://github.com/neoworld09/labs.git,2023-07-02 23:50:32+00:00,LABS DIGITAL ,0,neoworld09/labs,661467577,Verilog,labs,10616,0,2023-07-02 23:59:00+00:00,[],None
373,https://github.com/Suibeom/pmod-keypad.git,2023-07-05 15:52:19+00:00,,0,Suibeom/pmod-keypad,662660563,Verilog,pmod-keypad,2219,0,2023-07-05 15:55:09+00:00,[],None
374,https://github.com/Varad13/Day001-Clock-generator-using-Verilog.git,2023-06-27 05:15:09+00:00,,0,Varad13/Day001-Clock-generator-using-Verilog,659077299,Verilog,Day001-Clock-generator-using-Verilog,0,0,2023-06-27 05:16:34+00:00,[],None
375,https://github.com/mrsai21/Serial-Peripheral-Interface.git,2023-06-27 07:22:16+00:00,,0,mrsai21/Serial-Peripheral-Interface,659121523,Verilog,Serial-Peripheral-Interface,1715,0,2023-06-27 07:31:52+00:00,[],None
376,https://github.com/hacksh4w/verilog-delab.git,2023-06-26 00:33:54+00:00,,0,hacksh4w/verilog-delab,658513247,Verilog,verilog-delab,29,0,2023-06-26 01:59:13+00:00,[],None
377,https://github.com/anushaupadhya/Verilog-Memory-design-and-fsm-sequence-detector.git,2023-06-25 15:59:52+00:00,,0,anushaupadhya/Verilog-Memory-design-and-fsm-sequence-detector,658393474,Verilog,Verilog-Memory-design-and-fsm-sequence-detector,8,0,2023-06-25 16:11:14+00:00,[],None
378,https://github.com/Chetan-G-Gokhale/Signed-and-Unsigned-Carry-Save-Multiplier.git,2023-06-23 12:38:57+00:00,Implementation of 4 Bit Carry Save Multiplier of both Signed and Unsigned Integers,0,Chetan-G-Gokhale/Signed-and-Unsigned-Carry-Save-Multiplier,657608333,Verilog,Signed-and-Unsigned-Carry-Save-Multiplier,142,0,2023-06-23 13:35:36+00:00,[],https://api.github.com/licenses/cc0-1.0
379,https://github.com/somerhanna/Verilog-Elevator-Basys-3.git,2023-06-28 18:59:28+00:00,An elevator simulated on the Basys 3 FPGA with constraint file,0,somerhanna/Verilog-Elevator-Basys-3,659877236,Verilog,Verilog-Elevator-Basys-3,7,0,2023-06-28 19:08:56+00:00,[],None
380,https://github.com/PRAGATI-0102/Palindrome-Detector-Day-090-.git,2023-07-08 17:49:53+00:00,"A palindrome is a word, phrase, number, or sequence that reads the same backwards as forward. The module takes in an input sequence and determines whether it is a palindrome or not by comparing the characters from both ends of the sequence.",0,PRAGATI-0102/Palindrome-Detector-Day-090-,664021736,Verilog,Palindrome-Detector-Day-090-,63,0,2023-07-08 17:51:35+00:00,[],None
381,https://github.com/Ibroad/caravel_start.git,2023-07-08 01:52:32+00:00,,0,Ibroad/caravel_start,663738995,Verilog,caravel_start,35291,0,2023-07-08 01:53:23+00:00,[],https://api.github.com/licenses/apache-2.0
382,https://github.com/tanphandev/Graduation_Thesis.git,2023-07-08 14:39:40+00:00,,0,tanphandev/Graduation_Thesis,663959276,Verilog,Graduation_Thesis,76709,0,2023-07-08 14:45:02+00:00,[],None
383,https://github.com/Mohak-Singh-Rana/CSE_Bubble.git,2023-07-08 20:33:50+00:00,,0,Mohak-Singh-Rana/CSE_Bubble,664067088,Verilog,CSE_Bubble,175,0,2023-07-08 20:58:21+00:00,[],None
384,https://github.com/vincentkwok21/EE-371-Labs.git,2023-07-08 00:39:10+00:00,Labs for the UW class EE371,0,vincentkwok21/EE-371-Labs,663724305,Verilog,EE-371-Labs,7042,0,2023-07-08 21:54:39+00:00,[],None
385,https://github.com/AsianLord/quartus.git,2023-06-22 16:13:51+00:00,quartus,0,AsianLord/quartus,657241601,Verilog,quartus,97427,0,2023-06-22 16:33:37+00:00,[],None
386,https://github.com/sangamanathpuncham/ring_counter_caravel.git,2023-07-06 04:37:32+00:00,,0,sangamanathpuncham/ring_counter_caravel,662874453,Verilog,ring_counter_caravel,45094,0,2023-07-06 04:38:21+00:00,[],https://api.github.com/licenses/apache-2.0
387,https://github.com/BatyaPng/ClimbingElbrus.git,2023-07-06 07:46:34+00:00,Here are the solutions to the tasks assigned to me during an internship at the MCST Elbrus company,0,BatyaPng/ClimbingElbrus,662933843,Verilog,ClimbingElbrus,39,0,2023-07-06 16:23:09+00:00,[],None
388,https://github.com/AdhithyanSivakumar/NxN-NOC.git,2023-07-07 05:54:04+00:00,,0,AdhithyanSivakumar/NxN-NOC,663357703,Verilog,NxN-NOC,223,0,2023-07-07 05:58:23+00:00,[],None
389,https://github.com/HonestJack/RingOscillators.git,2023-07-02 22:06:51+00:00,,0,HonestJack/RingOscillators,661450604,Verilog,RingOscillators,6738,0,2023-07-02 22:32:53+00:00,[],None
390,https://github.com/ankitkanwar2003/SequenceGen-Verilog.git,2023-06-28 06:23:08+00:00,A Verilog project used to simulate the functioning of a custom sequence generator implemented using D Flip Flops,0,ankitkanwar2003/SequenceGen-Verilog,659581202,Verilog,SequenceGen-Verilog,327,0,2023-06-28 11:39:53+00:00,[],https://api.github.com/licenses/gpl-3.0
391,https://github.com/ZakiyaAbuMurra/Architecture-Project2.git,2023-06-25 20:54:26+00:00,,0,ZakiyaAbuMurra/Architecture-Project2,658471734,Verilog,Architecture-Project2,1358,0,2023-09-06 08:36:16+00:00,[],None
392,https://github.com/Megna1703/Image-Enhancement-using-Verilog.git,2023-06-28 20:42:27+00:00,,0,Megna1703/Image-Enhancement-using-Verilog,659909303,Verilog,Image-Enhancement-using-Verilog,14,0,2023-06-28 21:38:47+00:00,[],None
393,https://github.com/p2fassini/FPU_SD.git,2023-06-29 03:12:10+00:00,Unidade de hardware desenhada que realiza operações de soma e multiplicação de números em sistema de ponto flutuante ,0,p2fassini/FPU_SD,660002737,Verilog,FPU_SD,13,0,2023-06-29 04:06:39+00:00,[],None
394,https://github.com/Mohamed-Ayman27/RSA.git,2023-06-25 15:10:28+00:00,,0,Mohamed-Ayman27/RSA,658377003,Verilog,RSA,7,0,2023-06-25 15:35:47+00:00,[],None
395,https://github.com/moghazym31/verilog-risc-v-single-cycle-processor.git,2023-06-29 23:19:42+00:00,Verilog implementation of RISC-V single cycle processor.,0,moghazym31/verilog-risc-v-single-cycle-processor,660396040,Verilog,verilog-risc-v-single-cycle-processor,11,0,2023-06-29 23:22:21+00:00,[],None
396,https://github.com/Parsa-Nassery/DLD-LAB.git,2023-07-03 08:05:52+00:00,Digital Logic Design Laboratory,0,Parsa-Nassery/DLD-LAB,661590421,Verilog,DLD-LAB,6280,0,2023-07-03 08:59:56+00:00,[],None
397,https://github.com/anmutechsupport/hdl-bits-sols.git,2023-07-03 08:59:52+00:00,we do .v ,0,anmutechsupport/hdl-bits-sols,661610864,Verilog,hdl-bits-sols,1,0,2023-07-03 09:04:39+00:00,[],None
398,https://github.com/ClaraIsaac/UART-Transmitter.git,2023-07-03 12:17:16+00:00,Clock cycles for data transmission were generated using a counter module. The switching between transmitting start/stop bits and data bits was facilitated by a multiplexer module. The modules utilized in this system were the Counter and Multiplexer.,0,ClaraIsaac/UART-Transmitter,661683381,Verilog,UART-Transmitter,0,0,2023-07-03 12:19:42+00:00,[],None
399,https://github.com/ahmedmaher198/SPI-project.git,2023-07-01 05:05:16+00:00,stands for serial-peripheral interface and it is one of the most popular interfaces ,0,ahmedmaher198/SPI-project,660876473,Verilog,SPI-project,134,0,2023-07-01 05:06:00+00:00,[],None
400,https://github.com/123happycoder/project.git,2023-07-05 14:48:03+00:00,,0,123happycoder/project,662633073,Verilog,project,2,0,2023-07-05 14:48:24+00:00,[],None
401,https://github.com/aaryangupta/VSD-TCL-workshop.git,2023-07-06 12:28:44+00:00,,0,aaryangupta/VSD-TCL-workshop,663040255,Verilog,VSD-TCL-workshop,1272,0,2023-07-11 22:05:53+00:00,[],None
402,https://github.com/vinithreddyvarala/tclworkshop_vsdsynth.git,2023-07-06 18:31:39+00:00,,0,vinithreddyvarala/tclworkshop_vsdsynth,663182824,Verilog,tclworkshop_vsdsynth,1241,0,2023-07-15 16:43:39+00:00,[],None
403,https://github.com/25Aditya25/SynchronousFIFO.git,2023-07-07 05:21:43+00:00,Simple implementation of 8 bit synchronous FIFO with 8 entries.,0,25Aditya25/SynchronousFIFO,663348246,Verilog,SynchronousFIFO,1,0,2023-07-07 05:26:07+00:00,[],None
404,https://github.com/Gnanaprasanna-korada/name.git,2023-07-08 16:43:06+00:00,I executed my name prasanna in the verilog using assign statement  to a variable.,0,Gnanaprasanna-korada/name,664000872,Verilog,name,1,0,2023-07-08 16:48:00+00:00,[],None
405,https://github.com/Kolossql/FreshStart.git,2023-06-24 18:48:00+00:00,,0,Kolossql/FreshStart,658095240,Verilog,FreshStart,35291,0,2023-06-24 18:48:53+00:00,[],https://api.github.com/licenses/apache-2.0
406,https://github.com/TinyTapeout/caravel-firmware-rs.git,2023-06-24 13:09:06+00:00,Rust blinky example for the Caravel LiteX VexRiscv Core,0,TinyTapeout/caravel-firmware-rs,658001305,Verilog,caravel-firmware-rs,31,0,2023-06-24 13:42:58+00:00,[],https://api.github.com/licenses/apache-2.0
407,https://github.com/thereversed/Verilog_miniprojects.git,2023-06-25 07:11:37+00:00,,0,thereversed/Verilog_miniprojects,658234714,Verilog,Verilog_miniprojects,3,0,2023-06-25 07:28:32+00:00,[],None
408,https://github.com/CatKingWoof/iclab.git,2023-06-22 12:44:40+00:00,,0,CatKingWoof/iclab,657155657,Verilog,iclab,22373,0,2023-06-22 12:54:11+00:00,[],None
409,https://github.com/RajeshKuna39/router1x3.git,2023-06-22 17:46:40+00:00,,0,RajeshKuna39/router1x3,657275956,Verilog,router1x3,442,0,2023-06-22 17:53:14+00:00,[],None
410,https://github.com/ArnauvGilotra/verilog_labs.git,2023-07-02 11:56:51+00:00,Labs on verilog to understand the core concepts of digital system design. Precursor to Processor Architecture,0,ArnauvGilotra/verilog_labs,661294593,Verilog,verilog_labs,12,0,2023-07-02 11:59:44+00:00,[],None
411,https://github.com/MmMahdiiii/mips-pipeline-verilog.git,2023-07-01 12:35:44+00:00,,0,MmMahdiiii/mips-pipeline-verilog,660987187,Verilog,mips-pipeline-verilog,6,0,2023-07-01 12:36:25+00:00,[],None
412,https://github.com/venkys8/VSD-TCL_Workshop.git,2023-07-06 14:16:15+00:00,,0,venkys8/VSD-TCL_Workshop,663085142,Verilog,VSD-TCL_Workshop,937,0,2023-07-08 06:07:55+00:00,[],None
413,https://github.com/apurvaaddula/BATSYNTHESIS-Automation-tool.git,2023-07-06 08:36:44+00:00,This tool takes an RTL netlist and SDC file to auto-generate the synthesized netlist along with pre-layout timing report.,0,apurvaaddula/BATSYNTHESIS-Automation-tool,662952498,Verilog,BATSYNTHESIS-Automation-tool,1216,0,2023-07-08 10:32:05+00:00,[],None
414,https://github.com/brian1062/verilog_practica.git,2023-07-05 19:00:30+00:00,Practica de verilog para Tp_4,0,brian1062/verilog_practica,662730195,Verilog,verilog_practica,154,0,2023-07-05 19:06:19+00:00,[],None
415,https://github.com/jeffdi/8-bit-cpu.git,2023-07-03 23:24:17+00:00,my project,0,jeffdi/8-bit-cpu,661897161,Verilog,8-bit-cpu,35290,0,2023-07-03 23:25:06+00:00,[],https://api.github.com/licenses/apache-2.0
416,https://github.com/MakarenaLabs/Centipede-KR260.git,2023-07-04 11:29:35+00:00,Centipede arcade cabinet porting KR260,0,MakarenaLabs/Centipede-KR260,662110608,Verilog,Centipede-KR260,70,0,2023-07-04 11:32:47+00:00,[],None
417,https://github.com/MakarenaLabs/QBert-KR260.git,2023-07-05 10:46:35+00:00,QBert cabinet for KR260,0,MakarenaLabs/QBert-KR260,662536326,Verilog,QBert-KR260,44,0,2023-07-05 10:47:16+00:00,[],None
418,https://github.com/kaushikam23/Reversible-32bit-ALU.git,2023-07-04 09:58:56+00:00,,0,kaushikam23/Reversible-32bit-ALU,662077566,Verilog,Reversible-32bit-ALU,953,0,2023-12-25 20:52:09+00:00,[],https://api.github.com/licenses/apache-2.0
419,https://github.com/juanpablogt/Verilog.git,2023-07-04 00:23:39+00:00,,0,juanpablogt/Verilog,661908132,Verilog,Verilog,88,0,2023-07-04 17:44:00+00:00,[],https://api.github.com/licenses/mit
420,https://github.com/pthuang/myrtl.git,2023-06-28 02:45:49+00:00,general rtl module,0,pthuang/myrtl,659521189,Verilog,myrtl,42,0,2023-06-28 02:57:34+00:00,[],None
421,https://github.com/poulamiM25/Fir_Filter.git,2023-06-21 14:14:37+00:00,,0,poulamiM25/Fir_Filter,656729212,Verilog,Fir_Filter,1857,0,2024-02-19 14:38:27+00:00,[],None
422,https://github.com/GoshaAB29/verilog.git,2023-07-08 20:45:25+00:00,solving several educational problems...,0,GoshaAB29/verilog,664070013,Verilog,verilog,98,0,2023-07-08 20:48:19+00:00,[],None
423,https://github.com/yiqiaoqiao/Painting-Project-using-Joystick.git,2023-06-26 22:28:44+00:00,UCLA Spring 2023 CS M152A Final Project,0,yiqiaoqiao/Painting-Project-using-Joystick,658975061,,Painting-Project-using-Joystick,19,0,2023-06-26 22:28:45+00:00,[],None
424,https://github.com/Keyan5/intelunnati_adventurer.git,2023-07-02 03:15:20+00:00,Finite State Machine (FSM) designed to handle the movements of a Land Rover based on binary inputs. The FSM utilizes D flip-flops and combinatorial logic to transition between states and produce appropriate output signals for controlling the Land Rover's movement.,0,Keyan5/intelunnati_adventurer,661176876,Verilog,intelunnati_adventurer,909,0,2023-09-11 12:18:41+00:00,"['fsm', 'verilog', 'verilog-code', 'verilog-hdl', 'verilog-project', 'finite-state-machine', 'design-and-functional-simulation', 'functional-simulation-of-land-rover-figo-fsm']",None
425,https://github.com/billybobjoe123/caravelProject.git,2023-07-02 23:36:55+00:00,,0,billybobjoe123/caravelProject,661465434,Verilog,caravelProject,35291,0,2023-07-02 23:37:49+00:00,[],https://api.github.com/licenses/apache-2.0
426,https://github.com/LThyun/2032_summer_camp.git,2023-07-03 02:08:59+00:00,,0,LThyun/2032_summer_camp,661493159,Verilog,2032_summer_camp,3922,0,2023-08-21 06:29:19+00:00,[],None
427,https://github.com/gowthami-codes/fulladder.git,2023-06-27 13:28:18+00:00,,0,gowthami-codes/fulladder,659269613,Verilog,fulladder,0,0,2023-06-27 13:29:01+00:00,[],None
428,https://github.com/Birminness/Floating-point-adder-substractor.git,2023-06-29 05:48:30+00:00,,0,Birminness/Floating-point-adder-substractor,660041541,Verilog,Floating-point-adder-substractor,4,0,2023-06-29 05:50:26+00:00,[],None
429,https://github.com/Navya23Toluchuri/MY_verilog.git,2023-06-29 06:46:19+00:00,,0,Navya23Toluchuri/MY_verilog,660058779,Verilog,MY_verilog,114,0,2023-06-29 06:51:44+00:00,[],None
430,https://github.com/sobuhasy/cad4soclab1.git,2023-06-29 07:44:08+00:00,"First lab for the cad4SoC made by me and my colleague, Zhijie Liu",0,sobuhasy/cad4soclab1,660079403,Verilog,cad4soclab1,29,0,2023-06-29 07:50:30+00:00,[],None
431,https://github.com/Biswajitks1/Digital_Clock.git,2023-06-25 07:11:11+00:00,,0,Biswajitks1/Digital_Clock,658234594,Verilog,Digital_Clock,163,0,2023-06-25 07:21:49+00:00,[],None
432,https://github.com/MMeelad/VendingMachineFPGA.git,2023-06-25 03:01:14+00:00,Vending Machine Verilog HDL Code,0,MMeelad/VendingMachineFPGA,658182400,Verilog,VendingMachineFPGA,4680,0,2023-06-25 03:01:24+00:00,[],None
433,https://github.com/ZaighamKH/FPGA-SAP-Computer.git,2023-06-21 06:36:47+00:00,FPGA implementation of a SAP (Simple as possible) Computer,0,ZaighamKH/FPGA-SAP-Computer,656537132,Verilog,FPGA-SAP-Computer,8,0,2023-06-22 02:30:09+00:00,[],None
434,https://github.com/AhmedElbanna0001/generic-binary-multiplier.git,2023-06-26 20:57:04+00:00,,0,AhmedElbanna0001/generic-binary-multiplier,658951483,Verilog,generic-binary-multiplier,1,0,2023-06-26 20:57:50+00:00,[],None
435,https://github.com/saisumanthpamujula/I2C.git,2023-06-24 05:28:00+00:00,,0,saisumanthpamujula/I2C,657883848,Verilog,I2C,16,0,2023-06-24 05:28:50+00:00,[],https://api.github.com/licenses/gpl-3.0
436,https://github.com/chiragghodke/Elevator-Controller.git,2023-06-24 07:49:23+00:00,,0,chiragghodke/Elevator-Controller,657916956,Verilog,Elevator-Controller,4,0,2023-07-11 06:54:58+00:00,[],None
437,https://github.com/chiragghodke/MIPS-32.git,2023-06-24 07:46:40+00:00,,0,chiragghodke/MIPS-32,657916289,Verilog,MIPS-32,7,0,2023-07-11 06:51:53+00:00,[],None
438,https://github.com/kalai-rajan/-Real-Time-Digital-Clock-.git,2023-06-24 16:55:51+00:00,,0,kalai-rajan/-Real-Time-Digital-Clock-,658066431,Verilog,-Real-Time-Digital-Clock-,8,0,2023-07-07 09:40:52+00:00,[],None
439,https://github.com/SMath0510/CS2310-CS2610-Labs.git,2023-06-27 16:09:05+00:00,Contains the codes and reports that were done as a part of the CS2310 and CS2610: Computer Architecture,0,SMath0510/CS2310-CS2610-Labs,659340472,Verilog,CS2310-CS2610-Labs,418,0,2023-10-03 08:24:14+00:00,"['assembly-x86', 'computerarchitecture', 'verilog']",None
440,https://github.com/rohan-karunaratne/Lattice-Semi-Ice40-Examples.git,2023-06-27 01:27:53+00:00,Example code for starting out with Verilog using Lattice FPGAs,0,rohan-karunaratne/Lattice-Semi-Ice40-Examples,659014340,Verilog,Lattice-Semi-Ice40-Examples,2905,0,2023-08-24 17:59:41+00:00,[],None
441,https://github.com/211hunter166/CSE-BUBBLE_CS220_ASSG..git,2023-07-08 09:54:48+00:00,,0,211hunter166/CSE-BUBBLE_CS220_ASSG.,663865593,Verilog,CSE-BUBBLE_CS220_ASSG.,462,0,2023-07-08 09:56:13+00:00,[],None
442,https://github.com/ashwathv20/AHB2APB_BRIDGE.git,2023-07-06 08:37:09+00:00,,0,ashwathv20/AHB2APB_BRIDGE,662952665,Verilog,AHB2APB_BRIDGE,1908,0,2023-07-06 08:39:31+00:00,[],None
443,https://github.com/luk3rr/VERILOG_CRYPT.git,2023-07-06 21:20:22+00:00,Implementação em Verilog do método de criptografia One-time Pad,0,luk3rr/VERILOG_CRYPT,663234184,Verilog,VERILOG_CRYPT,310,0,2023-07-08 14:28:07+00:00,[],None
444,https://github.com/bharatts/TCL-Workshop---From-Introduction-to-Advanced-Scripting-Techniques-in-VLSI-Design-and-Synthesis.git,2023-07-07 16:45:19+00:00,,0,bharatts/TCL-Workshop---From-Introduction-to-Advanced-Scripting-Techniques-in-VLSI-Design-and-Synthesis,663590394,Verilog,TCL-Workshop---From-Introduction-to-Advanced-Scripting-Techniques-in-VLSI-Design-and-Synthesis,3260,0,2023-10-08 11:43:59+00:00,[],https://api.github.com/licenses/mit
445,https://github.com/esden/caravel_test.git,2023-06-30 05:13:14+00:00,,0,esden/caravel_test,660475713,Verilog,caravel_test,35290,0,2023-06-30 05:14:04+00:00,[],https://api.github.com/licenses/apache-2.0
446,https://github.com/chrisgravina22/RISC_V_PROCESSOR.git,2023-07-04 02:05:11+00:00,RISC-V processor developed in verilog,0,chrisgravina22/RISC_V_PROCESSOR,661929807,Verilog,RISC_V_PROCESSOR,411,0,2023-07-04 02:19:28+00:00,[],None
447,https://github.com/SumitraVelayudham/verilog_practice.git,2023-07-03 12:51:29+00:00,,0,SumitraVelayudham/verilog_practice,661696664,Verilog,verilog_practice,0,0,2023-07-03 12:59:42+00:00,[],None
448,https://github.com/deshmukhshrihari67/fifo.git,2023-07-03 12:06:31+00:00,sync_fifo code,0,deshmukhshrihari67/fifo,661679370,Verilog,fifo,1,0,2023-07-03 12:08:00+00:00,[],None
449,https://github.com/kongzejian/Verilog.git,2023-07-05 02:08:30+00:00,,0,kongzejian/Verilog,662373351,Verilog,Verilog,117,0,2023-07-05 02:54:05+00:00,[],None
450,https://github.com/shifengzhicheng/AZ-Processor.git,2023-06-29 10:44:28+00:00,个人实践项目之使用FPGA实现一个基于RISC-V架构的CPU,0,shifengzhicheng/AZ-Processor,660146353,Verilog,AZ-Processor,12909,0,2023-09-24 03:36:41+00:00,[],None
451,https://github.com/geetikag0411/Bubble-Machine.git,2023-07-01 16:55:36+00:00,Processor that covers the MIPS code to Machine code,0,geetikag0411/Bubble-Machine,661058719,Verilog,Bubble-Machine,161,0,2023-07-11 08:11:24+00:00,[],None
452,https://github.com/GSaiManoj3/General.git,2023-07-01 03:12:48+00:00,,0,GSaiManoj3/General,660853733,Verilog,General,2,0,2023-07-01 03:14:53+00:00,[],None
453,https://github.com/artrivas/archProyecto.git,2023-07-04 16:28:14+00:00,,0,artrivas/archProyecto,662228040,Verilog,archProyecto,2855,0,2023-07-04 16:36:08+00:00,[],None
454,https://github.com/S-E-N-S-O-H-A-M/Design-of-ALU-Architecture-.git,2023-06-23 10:16:58+00:00,,0,S-E-N-S-O-H-A-M/Design-of-ALU-Architecture-,657555509,Verilog,Design-of-ALU-Architecture-,7,0,2023-06-23 10:18:02+00:00,[],https://api.github.com/licenses/apache-2.0
455,https://github.com/Kolossql/copyOF_caravel_user_project.git,2023-06-21 21:52:01+00:00,,0,Kolossql/copyOF_caravel_user_project,656896725,Verilog,copyOF_caravel_user_project,35289,0,2023-06-21 21:52:52+00:00,[],https://api.github.com/licenses/apache-2.0
456,https://github.com/momostafa18/RISC-v-32.git,2023-06-23 13:28:33+00:00,A Risc-v 32 bit processor where multiple modules are implemented ,0,momostafa18/RISC-v-32,657628595,Verilog,RISC-v-32,496,0,2023-06-23 13:31:50+00:00,[],None
457,https://github.com/avdssrk/FIFO.git,2023-06-23 12:49:17+00:00,,0,avdssrk/FIFO,657612636,Verilog,FIFO,399,0,2023-06-23 12:52:46+00:00,[],None
458,https://github.com/lucete171/LCD.git,2023-06-23 15:24:14+00:00,,0,lucete171/LCD,657676133,Verilog,LCD,1604,0,2023-06-26 06:38:46+00:00,[],None
459,https://github.com/ChenRuiwei/cpu-design.git,2023-06-26 15:09:07+00:00,,0,ChenRuiwei/cpu-design,658825930,Verilog,cpu-design,15648,0,2023-12-23 07:32:05+00:00,[],None
460,https://github.com/negedger/ABH_Cube.git,2023-06-21 17:19:30+00:00,,0,negedger/ABH_Cube,656806804,Verilog,ABH_Cube,1097,0,2023-08-16 19:30:03+00:00,[],None
461,https://github.com/Adityasrinivas24/32bit-ALU.git,2023-07-07 01:02:20+00:00,32 bit ALU design using Verilog,0,Adityasrinivas24/32bit-ALU,663282501,Verilog,32bit-ALU,142,0,2023-07-14 19:27:11+00:00,[],None
462,https://github.com/Basti3700/Clasificare-imagini-pe-FPGA--NIOS-II-.git,2023-07-01 13:51:36+00:00,proiect pentru intelegerea si aprofundarea cunostintelor despre inteligenta artificiala si implementarea acestora pe FPGA,0,Basti3700/Clasificare-imagini-pe-FPGA--NIOS-II-,661007447,Verilog,Clasificare-imagini-pe-FPGA--NIOS-II-,130500,0,2023-07-01 14:18:05+00:00,[],None
463,https://github.com/hyunjunekim02/CSED311.git,2023-06-30 08:52:44+00:00,POSTECH CSED311 Computer Architecture Lab Assignments (2023 Spring),0,hyunjunekim02/CSED311,660546944,Verilog,CSED311,41,0,2023-10-06 10:49:22+00:00,[],None
464,https://github.com/khanasfar73/efab_labs.git,2023-07-06 17:25:23+00:00,,0,khanasfar73/efab_labs,663158522,Verilog,efab_labs,90,0,2023-07-06 17:42:48+00:00,[],None
465,https://github.com/Vedant-thereal/UART_using_Verilog.git,2023-07-04 13:28:50+00:00,In this project I have implemented the Universal Asynchronous Receiver Transmitter communication protocol on a hardware level.,0,Vedant-thereal/UART_using_Verilog,662156977,Verilog,UART_using_Verilog,10,0,2023-07-16 17:14:51+00:00,[],None
466,https://github.com/ah-moazzeni/16bit-CPU-verilog.git,2023-07-04 13:51:17+00:00,,0,ah-moazzeni/16bit-CPU-verilog,662166368,Verilog,16bit-CPU-verilog,44,0,2023-07-04 14:06:30+00:00,[],None
467,https://github.com/Kumaresan045/Simple-CPU.git,2023-07-03 11:35:29+00:00,"Implemented a simple CPU with a CU, ALU and 19-bit instruction size.",0,Kumaresan045/Simple-CPU,661668184,Verilog,Simple-CPU,551,0,2023-07-03 12:34:48+00:00,[],None
468,https://github.com/gowthami-codes/decadecounter.git,2023-07-03 16:12:08+00:00,,0,gowthami-codes/decadecounter,661777649,Verilog,decadecounter,0,0,2023-07-03 16:12:43+00:00,[],None
469,https://github.com/HalchalKirti/sequence_detector.git,2023-07-05 17:09:30+00:00,It detects a particular sequence of bits.,0,HalchalKirti/sequence_detector,662689126,Verilog,sequence_detector,3,0,2023-07-05 18:10:02+00:00,[],None
470,https://github.com/EmirEry1/Computer-Architecture-Lab-Work.git,2023-07-05 10:52:23+00:00,This repository contains several lab tasks that I have done. I have used Verilog in these tasks.,0,EmirEry1/Computer-Architecture-Lab-Work,662538377,Verilog,Computer-Architecture-Lab-Work,6326,0,2023-07-05 10:57:19+00:00,[],None
471,https://github.com/varun-tokas/CSE-Bubble.git,2023-07-01 17:34:42+00:00,32-bit processor with 25 instruction ISA that sorts an array of integers,0,varun-tokas/CSE-Bubble,661069547,Verilog,CSE-Bubble,15,0,2023-07-16 09:05:03+00:00,[],None
472,https://github.com/ChinnuReddySeelam/JTAG_Implementation.git,2023-07-01 14:34:38+00:00,,0,ChinnuReddySeelam/JTAG_Implementation,661019665,Verilog,JTAG_Implementation,3,0,2023-07-01 14:36:47+00:00,[],None
473,https://github.com/SimhadriVenkat1999/Design-and-comparison-of-Parallel-Prefix-Adders.git,2023-07-03 21:31:30+00:00,Will be edited later,0,SimhadriVenkat1999/Design-and-comparison-of-Parallel-Prefix-Adders,661874907,Verilog,Design-and-comparison-of-Parallel-Prefix-Adders,2901,0,2023-07-06 09:04:11+00:00,[],None
474,https://github.com/Nsreen-Nashaat/moore_1101_detector.git,2023-07-03 17:26:14+00:00,,0,Nsreen-Nashaat/moore_1101_detector,661803629,Verilog,moore_1101_detector,53,0,2023-07-03 17:30:12+00:00,[],https://api.github.com/licenses/mit
475,https://github.com/svitvitskiy/dram_controller.git,2023-06-28 03:02:42+00:00,,0,svitvitskiy/dram_controller,659525790,Verilog,dram_controller,101,0,2023-06-28 03:04:40+00:00,[],None
476,https://github.com/pranjalsingh4550/verilog-bubblesort-cs220.git,2023-06-29 19:05:58+00:00,Simple processor in Verilog HDL,0,pranjalsingh4550/verilog-bubblesort-cs220,660329930,Verilog,verilog-bubblesort-cs220,66,0,2023-06-29 19:26:05+00:00,[],None
477,https://github.com/somil00/A5-1_Cipher_Algorithm.git,2023-06-30 04:08:09+00:00,,0,somil00/A5-1_Cipher_Algorithm,660460538,Verilog,A5-1_Cipher_Algorithm,69,0,2023-07-04 05:45:14+00:00,[],None
478,https://github.com/vasiljevicteodor/AES128.git,2023-06-29 19:23:12+00:00,Verilog core for hardware implementation of text encryption using AES128 standard. ,0,vasiljevicteodor/AES128,660335409,Verilog,AES128,17,0,2023-06-29 19:24:13+00:00,[],None
479,https://github.com/monil667/Memory-Project.git,2023-06-27 08:48:34+00:00,,0,monil667/Memory-Project,659156340,Verilog,Memory-Project,366,0,2023-06-27 09:32:41+00:00,[],None
480,https://github.com/dointio/utilsM.git,2023-06-27 14:19:21+00:00,rtl utils,0,dointio/utilsM,659292700,Verilog,utilsM,19,0,2023-06-27 14:33:14+00:00,[],None
481,https://github.com/jeffliu123/FPGA.git,2023-06-26 13:57:05+00:00,,0,jeffliu123/FPGA,658793570,Verilog,FPGA,44096,0,2023-08-23 15:26:27+00:00,[],None
482,https://github.com/vaishnavi-parihar/AMBA-AHB2APB-Bridge-Design.git,2023-06-27 07:58:12+00:00,,0,vaishnavi-parihar/AMBA-AHB2APB-Bridge-Design,659135770,Verilog,AMBA-AHB2APB-Bridge-Design,5,0,2023-06-27 08:01:51+00:00,[],None
483,https://github.com/jpc12138/cv.git,2023-06-30 13:53:11+00:00,,0,jpc12138/cv,660650864,Verilog,cv,33,0,2023-09-17 05:52:57+00:00,[],None
484,https://github.com/ancy30/ALU.git,2023-06-30 21:23:54+00:00,,0,ancy30/ALU,660790763,Verilog,ALU,4,0,2023-06-30 21:26:26+00:00,[],None
485,https://github.com/Sridharkarthik12/APB-Protocol---AMBA.git,2023-07-01 09:39:06+00:00,"APB protocol of Advanced Microcontroller Bus Architecture (AMBA) protocol family is a non-pipelined ,simple ,synchronous protocol. Used to interface to any peripherals that are low- bandwidth and not require the high performance of a pipelined bus interface. Can be used to connect the external peripheral to the SOC",0,Sridharkarthik12/APB-Protocol---AMBA,660942501,Verilog,APB-Protocol---AMBA,6,0,2023-07-01 09:40:26+00:00,[],None
486,https://github.com/Prathamsahu52/CS220_IITK_2022-2023.git,2023-06-21 08:32:41+00:00,,0,Prathamsahu52/CS220_IITK_2022-2023,656584668,Verilog,CS220_IITK_2022-2023,212,0,2023-06-27 06:44:10+00:00,[],None
487,https://github.com/mAnirudh13/Basic-Verilog-projects.git,2023-06-21 07:07:36+00:00,,0,mAnirudh13/Basic-Verilog-projects,656549666,Verilog,Basic-Verilog-projects,152,0,2023-07-01 13:30:58+00:00,[],None
488,https://github.com/baocvcv/pipelined-riscv-cpu.git,2023-06-25 12:19:41+00:00,A toy pipelined RISC-V CPU.,0,baocvcv/pipelined-riscv-cpu,658323354,Verilog,pipelined-riscv-cpu,100,0,2023-06-25 12:20:13+00:00,[],None
489,https://github.com/shahkr85/Computer-Architecture-Processor.git,2023-06-26 04:06:34+00:00,16-bit microprocessor designed in Intel Quartus Prime,0,shahkr85/Computer-Architecture-Processor,658565704,Verilog,Computer-Architecture-Processor,29,0,2023-06-26 04:23:34+00:00,[],None
490,https://github.com/Rodrigo-Reis/pblfinal3.git,2023-06-21 00:58:26+00:00,,0,Rodrigo-Reis/pblfinal3,656438535,Verilog,pblfinal3,523,0,2023-06-21 01:02:21+00:00,[],None
491,https://github.com/WenbinTeng/Lichee-Cluster.git,2023-07-06 06:05:10+00:00,An edge computing heterogeneous node composed by Lichee Pi and Lichee Tang series.,0,WenbinTeng/Lichee-Cluster,662898137,Verilog,Lichee-Cluster,8212,0,2023-07-13 02:10:42+00:00,[],None
492,https://github.com/fjoralbak/16-bit-CPU.git,2023-07-06 13:12:18+00:00,,0,fjoralbak/16-bit-CPU,663057585,Verilog,16-bit-CPU,8,0,2023-07-06 13:17:02+00:00,[],None
493,https://github.com/msuadOf/AXI4_JLS.git,2023-07-08 15:40:18+00:00,,0,msuadOf/AXI4_JLS,663980117,Verilog,AXI4_JLS,5069,0,2023-07-08 15:40:45+00:00,[],None
494,https://github.com/SaicharanRitwik39/Fixed-Point-Arithmetic-Unit.git,2023-07-06 17:52:12+00:00,,0,SaicharanRitwik39/Fixed-Point-Arithmetic-Unit,663168427,Verilog,Fixed-Point-Arithmetic-Unit,40,0,2023-07-09 06:08:24+00:00,[],None
495,https://github.com/arn477/Pipelined-MIPS-Processor.git,2023-07-07 10:35:07+00:00,,0,arn477/Pipelined-MIPS-Processor,663457447,Verilog,Pipelined-MIPS-Processor,4439,0,2023-07-07 10:38:06+00:00,[],None
496,https://github.com/abdullahsn10/COMPARCH_SingleCycleRISCProcessor.git,2023-06-28 01:19:19+00:00,Single Cycle RISC Processor,0,abdullahsn10/COMPARCH_SingleCycleRISCProcessor,659498908,Verilog,COMPARCH_SingleCycleRISCProcessor,8326,0,2024-03-30 01:53:32+00:00,[],None
497,https://github.com/vpedrota/Mips-processor.git,2023-06-25 14:29:48+00:00,,0,vpedrota/Mips-processor,658363616,Verilog,Mips-processor,61,0,2023-06-25 14:32:25+00:00,[],None
498,https://github.com/roseeeea/Logic-Design-Verilog-practice.git,2023-07-03 14:03:34+00:00,,0,roseeeea/Logic-Design-Verilog-practice,661726776,Verilog,Logic-Design-Verilog-practice,1131,0,2023-07-03 14:09:41+00:00,[],None
499,https://github.com/kaku-panda/rs232c.git,2023-07-03 14:33:12+00:00,,0,kaku-panda/rs232c,661739411,Verilog,rs232c,1,0,2023-07-03 14:35:51+00:00,[],None
500,https://github.com/Ridhima2727/RISCV-32I.git,2023-07-03 15:10:59+00:00,Contains the submodules and the top level module necessary to form the RISCV-32I processor.,0,Ridhima2727/RISCV-32I,661754764,Verilog,RISCV-32I,11,0,2023-07-03 15:14:42+00:00,[],None
501,https://github.com/Aaryan-Yashvardhan/Verilog_sequence_detector.git,2023-06-24 15:19:57+00:00,"Developed a sequence detector circuit using a Finite State Machine in Verilog, employing sequential circuit implementation techniques. Simulated the circuit’s behavior using tools like GTKWave, ensuring accurate detection of a specific input sequence and generating the desired output based on the current state.",0,Aaryan-Yashvardhan/Verilog_sequence_detector,658039147,Verilog,Verilog_sequence_detector,86,0,2023-06-24 15:26:51+00:00,[],None
502,https://github.com/gbThreepwood/hdl-pong.git,2023-07-02 13:37:53+00:00,A realization of the classic Pong game using pure HDL (Verilog),0,gbThreepwood/hdl-pong,661321789,Verilog,hdl-pong,807,0,2023-07-02 14:05:39+00:00,[],https://api.github.com/licenses/gpl-3.0
503,https://github.com/vaishaliyadav06/32-BIT-RISC-PROCESSOR-IMPLEMENTED-IN-VERILOG.git,2023-07-01 14:07:54+00:00,This is a 32 bit RISC processor which has been implemented through verilog. The ISA that is being used to facilitate the implementation of the processor is MIPS (Microprocessor without Interlocked Pipeline Stages ). The inspiration behind using the MIPS methodology is due to the advantage it offers with regards to it's fixed instruction length. Thi,0,vaishaliyadav06/32-BIT-RISC-PROCESSOR-IMPLEMENTED-IN-VERILOG,661011968,Verilog,32-BIT-RISC-PROCESSOR-IMPLEMENTED-IN-VERILOG,14,0,2023-07-01 15:15:05+00:00,[],None
504,https://github.com/TopTortoise/Bachelor_Project.git,2023-07-02 16:51:53+00:00,,0,TopTortoise/Bachelor_Project,661378376,Verilog,Bachelor_Project,10924,0,2023-10-03 12:00:05+00:00,[],None
505,https://github.com/ClaraIsaac/Single-Cycle-32-bit-RISC-V-Processor.git,2023-07-03 12:21:51+00:00,"An instruction set comprising 12 instructions was developed for executing a code that computes Fibonacci Series Summation. A top module was created to integrate all modules into the processor. The processor modules included ALU, Register File, Program Counter, Instruction Memory, Data Memory, Control Unit, Sign Extend, and MUX.",0,ClaraIsaac/Single-Cycle-32-bit-RISC-V-Processor,661685124,Verilog,Single-Cycle-32-bit-RISC-V-Processor,4,0,2023-07-03 12:22:36+00:00,[],None
506,https://github.com/valentinfp/lab2.git,2023-07-02 23:53:37+00:00,,0,valentinfp/lab2,661468048,Verilog,lab2,45,0,2023-07-02 23:53:45+00:00,[],None
507,https://github.com/vinimibielli/Trabalho-IV-SD-2.git,2023-06-29 12:11:49+00:00,,0,vinimibielli/Trabalho-IV-SD-2,660175204,Verilog,Trabalho-IV-SD-2,20,0,2023-06-29 12:15:32+00:00,[],None
508,https://github.com/Albin-shaju/FLOATINGPOINT-ADDER.git,2023-06-28 12:50:12+00:00,32 Bit Floating Point Adder,0,Albin-shaju/FLOATINGPOINT-ADDER,659732960,Verilog,FLOATINGPOINT-ADDER,16,0,2023-08-02 17:52:45+00:00,[],None
509,https://github.com/9389lalit/Ichip_ps2_16bit_Cpu.git,2023-06-23 07:35:30+00:00,It's a 16 bit CPU based on Von Neuman architechture ,0,9389lalit/Ichip_ps2_16bit_Cpu,657497859,Verilog,Ichip_ps2_16bit_Cpu,378,0,2023-06-23 07:36:41+00:00,[],None
510,https://github.com/Poulami2515/Verilog.git,2023-06-24 05:15:59+00:00,,0,Poulami2515/Verilog,657881356,Verilog,Verilog,141,0,2023-06-24 05:18:02+00:00,[],None
511,https://github.com/ancy30/SequenceDetector.git,2023-06-30 21:30:18+00:00,,0,ancy30/SequenceDetector,660792236,Verilog,SequenceDetector,3,0,2023-06-30 21:32:35+00:00,[],None
512,https://github.com/christopherlam888/traffic-light.git,2023-06-30 21:58:38+00:00,FPGA-based pedestrian-accessible traffic light controller written in Verilog.,0,christopherlam888/traffic-light,660798275,Verilog,traffic-light,10193,0,2023-06-30 22:20:13+00:00,[],https://api.github.com/licenses/mit
513,https://github.com/banerjeeutsav/aes_sbox_explorer.git,2023-06-25 12:05:47+00:00,Design Space Exploration of AES S-Box using Open-Source ASIC Design Tools,0,banerjeeutsav/aes_sbox_explorer,658319298,Verilog,aes_sbox_explorer,259,0,2023-06-26 09:42:17+00:00,[],https://api.github.com/licenses/mit
514,https://github.com/lylsir98/AHB_GPIO_RAM.git,2023-06-29 14:36:56+00:00,AHB总线控制GPIO与RAM,0,lylsir98/AHB_GPIO_RAM,660232039,Verilog,AHB_GPIO_RAM,194,0,2023-06-29 14:43:48+00:00,[],None
515,https://github.com/rafidhassan1884/electronic_voting_machine.git,2023-07-01 08:34:06+00:00,this repository contains a verilog implementation of an EVM used to flash an Altera Education kit.,0,rafidhassan1884/electronic_voting_machine,660925683,Verilog,electronic_voting_machine,29,0,2023-07-03 01:02:15+00:00,[],None
516,https://github.com/Sai-teja-12/CS2310-lab.git,2023-06-22 13:40:03+00:00,,0,Sai-teja-12/CS2310-lab,657178289,Verilog,CS2310-lab,568,0,2023-06-22 13:44:32+00:00,[],None
517,https://github.com/claven06/8-Bit_Bit_Sliced_ALU.git,2023-06-22 13:35:40+00:00,,0,claven06/8-Bit_Bit_Sliced_ALU,657176439,Verilog,8-Bit_Bit_Sliced_ALU,298,0,2023-06-22 13:36:19+00:00,[],None
518,https://github.com/algofoogle/tt04-algofoogle-test.git,2023-06-22 11:02:27+00:00,Basically a fork of TinyTapeout/tt04-submission-template for my testing,0,algofoogle/tt04-algofoogle-test,657117377,Verilog,tt04-algofoogle-test,332,0,2023-06-22 11:13:04+00:00,[],https://api.github.com/licenses/apache-2.0
519,https://github.com/taka-toshi/iot_group.git,2023-06-22 11:18:18+00:00,,0,taka-toshi/iot_group,657123161,Verilog,iot_group,1456,0,2023-06-22 11:19:27+00:00,[],None
520,https://github.com/AhmedElbanna0001/basic-ALU.git,2023-06-26 20:36:37+00:00,,0,AhmedElbanna0001/basic-ALU,658945843,Verilog,basic-ALU,136,0,2023-06-26 20:46:28+00:00,[],None
521,https://github.com/pgoel02/IITISoC-23Microprocessor.git,2023-06-27 13:54:17+00:00,,2,pgoel02/IITISoC-23Microprocessor,659281096,Verilog,IITISoC-23Microprocessor,24,0,2023-06-27 13:57:48+00:00,[],None
522,https://github.com/ujjwalg21/CSE-BUBBLE.git,2023-07-05 11:24:32+00:00,,0,ujjwalg21/CSE-BUBBLE,662550019,Verilog,CSE-BUBBLE,263,0,2023-07-05 11:26:36+00:00,[],None
523,https://github.com/aishwaryaliz/verilog-processor.git,2023-07-07 09:56:32+00:00,Basic Processor built using Verilog following the Harvard Architecture Model,0,aishwaryaliz/verilog-processor,663444311,Verilog,verilog-processor,32,0,2023-07-07 10:07:28+00:00,[],None
524,https://github.com/yannickreiss/tt04-semaphore.git,2023-07-07 05:16:49+00:00,,0,yannickreiss/tt04-semaphore,663346928,Verilog,tt04-semaphore,22,0,2023-07-11 13:54:00+00:00,[],https://api.github.com/licenses/apache-2.0
525,https://github.com/ynco32/cse_3016.git,2023-07-07 14:43:08+00:00,,0,ynco32/cse_3016,663545337,Verilog,cse_3016,23,0,2023-07-07 14:50:35+00:00,[],None
526,https://github.com/hyeon0618/2023_Summer_Boot_Camp.git,2023-07-06 04:32:10+00:00,,0,hyeon0618/2023_Summer_Boot_Camp,662873233,Verilog,2023_Summer_Boot_Camp,711,0,2023-07-19 02:12:37+00:00,[],None
527,https://github.com/Code-Sample-Collection/VerilogHDL-Practical-insights.git,2023-07-05 13:59:39+00:00,"<轻松成为设计高手: VerilogHDL 实用精解> EDA 先锋工作室, 王诚, 吴继华 2012.6",0,Code-Sample-Collection/VerilogHDL-Practical-insights,662612073,Verilog,VerilogHDL-Practical-insights,275,0,2023-07-05 14:19:31+00:00,"['verilog', 'verilog-code', 'verilog-hdl']",None
528,https://github.com/rhuang43/SlugJumper.git,2023-07-07 23:01:22+00:00,,0,rhuang43/SlugJumper,663702199,Verilog,SlugJumper,34325,0,2023-07-07 23:11:10+00:00,[],None
529,https://github.com/Vaishnavi-Anand21/CS220-Processor.git,2023-07-08 16:58:21+00:00,,0,Vaishnavi-Anand21/CS220-Processor,664005553,Verilog,CS220-Processor,168,0,2023-07-08 17:10:11+00:00,[],None
530,https://github.com/ramdasjagtap/ALU.git,2023-07-02 00:30:38+00:00,,0,ramdasjagtap/ALU,661151964,Verilog,ALU,49,0,2024-02-05 17:24:04+00:00,[],None
531,https://github.com/SwapnanilSaha/50-days-of-RTL-.git,2023-07-07 08:47:32+00:00,Doing everyday Verilog and system Verilog problems up to 100 days,0,SwapnanilSaha/50-days-of-RTL-,663419056,Verilog,50-days-of-RTL-,27,0,2024-02-08 16:50:37+00:00,[],None
532,https://github.com/LeoHsuProgrammingLab/2023-Spring-Computer_Architecture.git,2023-06-22 08:44:46+00:00,"NTU CSIE required courses Computer Architecture held by professor Chia-Lin, Yang.",0,LeoHsuProgrammingLab/2023-Spring-Computer_Architecture,657067492,Verilog,2023-Spring-Computer_Architecture,7948,0,2024-01-03 06:28:19+00:00,[],None
533,https://github.com/jianningzhuang/EE2026-Digital_Design.git,2023-07-04 10:23:42+00:00,,0,jianningzhuang/EE2026-Digital_Design,662086962,Verilog,EE2026-Digital_Design,210003,0,2023-07-04 10:27:54+00:00,[],None
534,https://github.com/gavaskark/caravel-eFPGA.git,2023-07-07 13:11:25+00:00,,0,gavaskark/caravel-eFPGA,663510158,Verilog,caravel-eFPGA,35290,0,2023-07-07 13:12:17+00:00,[],https://api.github.com/licenses/apache-2.0
535,https://github.com/Nsreen-Nashaat/8x8_multiplier_codes.git,2023-07-07 15:30:16+00:00,,0,Nsreen-Nashaat/8x8_multiplier_codes,663563363,Verilog,8x8_multiplier_codes,78,0,2023-07-07 15:37:08+00:00,[],https://api.github.com/licenses/mit
536,https://github.com/02bwilson/FPGA_Hex_Count.git,2023-07-08 18:19:41+00:00,A program that counts through hex numbers on a 7 segment display on the STEP FPGA.,0,02bwilson/FPGA_Hex_Count,664030206,Verilog,FPGA_Hex_Count,1,0,2023-07-08 18:22:07+00:00,[],None
537,https://github.com/44omero/TUTEL-Verilog.git,2023-07-08 18:40:54+00:00,Things I done at TUTEL as an intern,0,44omero/TUTEL-Verilog,664036147,Verilog,TUTEL-Verilog,20,0,2023-07-08 18:51:29+00:00,[],None
538,https://github.com/Monisha0609/Land-over-FIGO-FSM.git,2023-06-26 12:06:54+00:00,,0,Monisha0609/Land-over-FIGO-FSM,658745940,Verilog,Land-over-FIGO-FSM,2,0,2023-06-26 14:33:09+00:00,[],None
539,https://github.com/teddy5566/IC_contest_2021.git,2023-06-27 16:53:40+00:00,,0,teddy5566/IC_contest_2021,659357805,Verilog,IC_contest_2021,11022,0,2023-06-27 16:54:52+00:00,[],None
540,https://github.com/CORIATAYLOR/NewRepo.git,2023-06-26 16:37:14+00:00,,0,CORIATAYLOR/NewRepo,658863348,Verilog,NewRepo,35290,0,2023-06-26 16:38:00+00:00,[],https://api.github.com/licenses/apache-2.0
541,https://github.com/NiharGowdaS/RISC-V-pipeline-processor.git,2023-06-30 19:23:01+00:00,,0,NiharGowdaS/RISC-V-pipeline-processor,660761068,Verilog,RISC-V-pipeline-processor,12,0,2023-07-11 18:34:27+00:00,[],None
542,https://github.com/yannickreiss/TT4_CPU.git,2023-06-30 16:23:24+00:00,,0,yannickreiss/TT4_CPU,660705149,Verilog,TT4_CPU,15,0,2023-06-30 16:23:40+00:00,[],https://api.github.com/licenses/apache-2.0
543,https://github.com/JainPromudShreyansh/RTL_Resource_Sharing.git,2023-07-02 17:12:45+00:00,,0,JainPromudShreyansh/RTL_Resource_Sharing,661383924,Verilog,RTL_Resource_Sharing,237,0,2023-07-02 17:14:57+00:00,[],None
544,https://github.com/0kssana/itmo-comp-arch-2022.git,2023-07-01 15:14:37+00:00,Лабораторные работы на ЯП Verilog в рамках курса Архитектура ЭВМ,0,0kssana/itmo-comp-arch-2022,661031039,Verilog,itmo-comp-arch-2022,15,0,2023-07-02 08:24:47+00:00,[],None
545,https://github.com/Anvitatadepalli/Vending-Machine.git,2023-06-29 11:57:12+00:00,,0,Anvitatadepalli/Vending-Machine,660170027,Verilog,Vending-Machine,77,0,2023-06-29 12:00:22+00:00,[],None
546,https://github.com/Sandeep-Nitharwal/CS220---CSE-BUBBLE-Mini-Processor.git,2023-06-30 02:15:48+00:00,"Welcome to the Repo for the CSE Bubble Processor, an implementation based on the MIPS architecture.",0,Sandeep-Nitharwal/CS220---CSE-BUBBLE-Mini-Processor,660433798,Verilog,CS220---CSE-BUBBLE-Mini-Processor,253,0,2023-07-08 18:42:42+00:00,[],None
547,https://github.com/b08505045/Single-Pipeline-CPU.git,2023-06-29 15:01:28+00:00,,0,b08505045/Single-Pipeline-CPU,660242806,Verilog,Single-Pipeline-CPU,2889,0,2023-06-29 15:35:09+00:00,[],None
548,https://github.com/KeanTeong/32_bit_Signed-Unsigned-Adder-Subtractor.git,2023-06-27 02:47:19+00:00,,0,KeanTeong/32_bit_Signed-Unsigned-Adder-Subtractor,659036082,Verilog,32_bit_Signed-Unsigned-Adder-Subtractor,27,0,2023-06-27 02:55:15+00:00,[],None
549,https://github.com/ana-maria-pricop/SP2023.git,2023-06-28 07:27:40+00:00,amd,0,ana-maria-pricop/SP2023,659606024,Verilog,SP2023,9542,0,2023-07-14 12:12:42+00:00,[],None
550,https://github.com/Sridharkarthik12/MIPS-32-bit-Processor.git,2023-06-28 11:38:21+00:00," 32-bit MIPS(Microprocessor without Interlocked Pipelined Stages) Processor with a 5-stage pipelined structure with minimum functional units. The MIPS processor has 32-bit architecture with 32 bit instructions, a 32 bit data. It is based on RISC architecture.",0,Sridharkarthik12/MIPS-32-bit-Processor,659704658,Verilog,MIPS-32-bit-Processor,6,0,2023-06-28 11:41:52+00:00,[],None
551,https://github.com/Raha-R8/vending_machine_project.git,2023-07-01 11:39:00+00:00,Vending machine verilog code ,0,Raha-R8/vending_machine_project,660973017,Verilog,vending_machine_project,195,0,2023-07-01 12:22:52+00:00,[],None
552,https://github.com/00853029/Booth_implement.git,2023-07-03 12:34:42+00:00,just for verilog practice,0,00853029/Booth_implement,661690118,Verilog,Booth_implement,322,0,2023-07-03 12:39:18+00:00,[],None
553,https://github.com/Osangeun/2023_Bootcamp.git,2023-07-03 06:25:58+00:00,,0,Osangeun/2023_Bootcamp,661555801,Verilog,2023_Bootcamp,187,0,2023-07-13 06:42:39+00:00,[],None
554,https://github.com/STARS-Design-Track-2023/GuitarVillains.git,2023-06-21 12:33:57+00:00,,0,STARS-Design-Track-2023/GuitarVillains,656685109,Verilog,GuitarVillains,2313,0,2023-06-26 21:03:46+00:00,[],None
555,https://github.com/EverardoCamarena/361_ArrayMultiplier.git,2023-06-25 04:52:57+00:00,"Verilog code for an Array multiplier using adder, subtractor and muxes.",0,EverardoCamarena/361_ArrayMultiplier,658202885,Verilog,361_ArrayMultiplier,4,0,2023-06-25 04:55:52+00:00,[],None
556,https://github.com/shihjimmy/Smith_Waterman_Genome_Alignment.git,2023-06-25 02:43:01+00:00,111-2 Special Project ,0,shihjimmy/Smith_Waterman_Genome_Alignment,658178821,Verilog,Smith_Waterman_Genome_Alignment,8540,0,2023-10-30 18:09:01+00:00,[],None
557,https://github.com/alph00/cache_backup.git,2023-06-21 03:17:22+00:00,,0,alph00/cache_backup,656476773,Verilog,cache_backup,20,0,2023-06-21 03:17:52+00:00,[],None
558,https://github.com/Avonxu123/Verilog_test1.git,2023-06-21 08:05:15+00:00,,0,Avonxu123/Verilog_test1,656573586,Verilog,Verilog_test1,8,0,2023-06-21 08:10:14+00:00,[],None
559,https://github.com/bman12three4/6502_qoi.git,2023-06-26 00:58:26+00:00,Mirror of https://git.byronlathi.com/bslathi19/6502_qoi/,0,bman12three4/6502_qoi,658518058,Verilog,6502_qoi,168,0,2023-06-26 01:07:58+00:00,[],None
560,https://github.com/Alifathysalama/RSA.git,2023-06-25 18:04:11+00:00,,0,Alifathysalama/RSA,658429666,Verilog,RSA,8,0,2023-06-25 18:11:07+00:00,[],None
561,https://github.com/Subha175/Verilog---Vending-Machine.git,2023-07-05 18:34:25+00:00,,0,Subha175/Verilog---Vending-Machine,662721166,Verilog,Verilog---Vending-Machine,5,0,2023-07-05 18:35:13+00:00,[],None
562,https://github.com/urish/caravel_wb_timings.git,2023-06-22 17:10:21+00:00,,0,urish/caravel_wb_timings,657262428,Verilog,caravel_wb_timings,13,0,2023-06-22 17:10:27+00:00,[],https://api.github.com/licenses/apache-2.0
563,https://github.com/AymanAkhter/CS2310-Simple_CPU.git,2023-06-22 15:43:28+00:00,,0,AymanAkhter/CS2310-Simple_CPU,657229845,Verilog,CS2310-Simple_CPU,246,0,2023-06-22 15:44:56+00:00,[],None
564,https://github.com/vascoluz/skyA130_ist.git,2023-06-21 16:29:19+00:00,,0,vascoluz/skyA130_ist,656787194,Verilog,skyA130_ist,35290,0,2023-06-21 16:30:13+00:00,[],https://api.github.com/licenses/apache-2.0
565,https://github.com/jasonkaufmann/ArcReactorChip.git,2023-06-29 19:52:01+00:00,A RISC-V based SoC for learning purposes,0,jasonkaufmann/ArcReactorChip,660344291,Verilog,ArcReactorChip,2041,0,2024-02-07 07:27:39+00:00,[],None
566,https://github.com/Shaurya0104/Set-Associative-Cache-Simulator.git,2023-06-22 11:16:44+00:00,,0,Shaurya0104/Set-Associative-Cache-Simulator,657122560,Verilog,Set-Associative-Cache-Simulator,1069,0,2023-06-22 11:17:02+00:00,[],None
567,https://github.com/chunhonggi/CHUN.git,2023-06-25 03:10:44+00:00,,0,chunhonggi/CHUN,658184182,Verilog,CHUN,12,0,2023-06-25 09:58:13+00:00,[],None
568,https://github.com/ElHamzi-Abderrahim/RISC-V_Verilog.git,2023-06-24 21:25:58+00:00,,0,ElHamzi-Abderrahim/RISC-V_Verilog,658128394,Verilog,RISC-V_Verilog,7,0,2023-06-25 15:11:26+00:00,[],None
569,https://github.com/tzvins/AES_256_hardware_acceleration.git,2023-06-24 10:42:00+00:00,,0,tzvins/AES_256_hardware_acceleration,657962892,Verilog,AES_256_hardware_acceleration,9378,0,2023-06-29 10:13:22+00:00,[],None
570,https://github.com/zwh200001/FPGA_module-.git,2023-06-26 03:14:24+00:00,FPGA module ,0,zwh200001/FPGA_module-,658551842,Verilog,FPGA_module-,9,0,2023-06-26 04:14:23+00:00,[],None
571,https://github.com/licy-gh/rvcpu.git,2023-06-21 09:24:31+00:00,a toy RV64I CPU,0,licy-gh/rvcpu,656606483,Verilog,rvcpu,2705,0,2023-06-21 09:33:13+00:00,[],None
572,https://github.com/LuisGuiOli/pblfinal3-20230621T001530Z-001.git,2023-06-21 00:17:43+00:00,,0,LuisGuiOli/pblfinal3-20230621T001530Z-001,656429402,Verilog,pblfinal3-20230621T001530Z-001,524,0,2023-06-21 00:33:13+00:00,[],None
573,https://github.com/Vedant-thereal/ALU_8_bit.git,2023-06-21 04:49:19+00:00,This project is based on the Verilog implementation of a simple 8-bit Arithmetic Logic Unit(ALU),0,Vedant-thereal/ALU_8_bit,656503237,Verilog,ALU_8_bit,28,0,2023-07-04 13:10:07+00:00,[],None
574,https://github.com/LLTTYYY/-fpga-.git,2023-06-21 03:26:35+00:00,,0,LLTTYYY/-fpga-,656479408,Verilog,-fpga-,7,0,2023-06-21 03:28:36+00:00,[],None
575,https://github.com/hamzeh4345/ALU-project.git,2023-07-05 11:44:46+00:00,,0,hamzeh4345/ALU-project,662557294,Verilog,ALU-project,470,0,2023-07-05 11:52:53+00:00,[],None
576,https://github.com/HalchalKirti/16bit_adder.git,2023-07-05 17:37:06+00:00,16 bit adder which gives the values of all the flags after calculation.,0,HalchalKirti/16bit_adder,662699518,Verilog,16bit_adder,3,0,2023-07-05 18:11:22+00:00,[],None
577,https://github.com/KcJ-0711/SGK_MallaReddyCollegeofEngineeringandTechnology_IntelLandRoverFIGOFSM.git,2023-07-06 14:34:00+00:00,"Intel Industrial Training Land Rover FIGO FSM project from team SGK, CSE-DS MRCET",0,KcJ-0711/SGK_MallaReddyCollegeofEngineeringandTechnology_IntelLandRoverFIGOFSM,663093016,Verilog,SGK_MallaReddyCollegeofEngineeringandTechnology_IntelLandRoverFIGOFSM,2236,0,2023-07-22 11:57:09+00:00,[],None
578,https://github.com/djordje34/Verilog-Stopwatch.git,2023-07-06 15:14:33+00:00,Verilog Stopwatch application,0,djordje34/Verilog-Stopwatch,663110333,Verilog,Verilog-Stopwatch,3,0,2023-07-06 15:15:33+00:00,[],None
579,https://github.com/PRAGATI-0102/Baud-Rate-Generator-Day-086-.git,2023-07-04 16:56:07+00:00,A Baud Rate Generator is a crucial component in asynchronous communication systems as it determines the transmission speed or baud rate.,0,PRAGATI-0102/Baud-Rate-Generator-Day-086-,662237798,Verilog,Baud-Rate-Generator-Day-086-,58,0,2023-07-04 16:56:41+00:00,[],None
580,https://github.com/maktheus/RelogioVerilog.git,2023-06-23 04:51:20+00:00,,0,maktheus/RelogioVerilog,657447486,Verilog,RelogioVerilog,4,0,2023-06-23 04:52:49+00:00,[],None
581,https://github.com/momostafa18/UART-Tx-Rx.git,2023-06-23 12:52:56+00:00,"UART project in VERILOG. This project implements a Tx , Rx (where both of them are considered as shift registers ) FIFO for both Tx and Rx and Baud rate Generator ",0,momostafa18/UART-Tx-Rx,657614146,Verilog,UART-Tx-Rx,817,0,2023-06-23 12:54:07+00:00,[],None
582,https://github.com/Debm45213/Circuit-Designs.git,2023-07-02 18:29:52+00:00,,0,Debm45213/Circuit-Designs,661404604,Verilog,Circuit-Designs,3,0,2023-07-02 18:31:04+00:00,[],None
583,https://github.com/NiharGowdaS/Single-cycle-RISC-V-processor.git,2023-06-22 19:24:11+00:00,,0,NiharGowdaS/Single-cycle-RISC-V-processor,657308484,Verilog,Single-cycle-RISC-V-processor,9,0,2023-06-30 19:15:22+00:00,[],None
584,https://github.com/Lebedb/ITMO_SHWare.git,2023-06-25 17:47:09+00:00,Конкурс аппаратных проектов ИТМО,0,Lebedb/ITMO_SHWare,658424663,Verilog,ITMO_SHWare,69631,0,2023-06-25 17:49:56+00:00,[],None
585,https://github.com/Alpha499799/single_cpu.git,2023-06-26 06:45:41+00:00,,0,Alpha499799/single_cpu,658612645,Verilog,single_cpu,69,0,2023-06-26 07:06:14+00:00,[],None
586,https://github.com/mihirbaviskar/SubstractionGame.git,2023-06-22 01:38:35+00:00,Built a Subtraction game on a FPGA board using Verilog,0,mihirbaviskar/SubstractionGame,656947229,Verilog,SubstractionGame,1640,0,2023-06-22 01:44:13+00:00,[],None
587,https://github.com/Raissa-Pordeus/LASD_SPRINT.git,2023-06-26 23:20:59+00:00,,0,Raissa-Pordeus/LASD_SPRINT,658986108,Verilog,LASD_SPRINT,2717,0,2023-06-26 23:31:01+00:00,[],None
588,https://github.com/Shankar-Balajee/CS2610.git,2023-06-22 04:50:15+00:00,,0,Shankar-Balajee/CS2610,656992978,Verilog,CS2610,249,0,2023-06-22 04:52:20+00:00,[],None
589,https://github.com/Moondok/cpu-54.git,2023-06-29 11:06:43+00:00,A multi-cycle CPU which supports 54 Mips instructions,0,Moondok/cpu-54,660153555,Verilog,cpu-54,236,0,2023-07-18 09:33:47+00:00,"['cpu', 'harvard-architecture-processor', 'mips', 'multi-cycle-cpu']",None
590,https://github.com/Kumaresan045/12-Bit-ALU.git,2023-07-03 11:39:38+00:00,,0,Kumaresan045/12-Bit-ALU,661669656,Verilog,12-Bit-ALU,228,0,2023-07-03 12:34:16+00:00,[],None
591,https://github.com/jeremiahk00/Verilog-SystemVerilog.git,2023-07-02 19:59:35+00:00,,0,jeremiahk00/Verilog-SystemVerilog,661425810,Verilog,Verilog-SystemVerilog,35,0,2023-07-02 20:23:18+00:00,[],https://api.github.com/licenses/mit
592,https://github.com/ysc-11/DynamicDisplay.git,2023-07-04 07:26:50+00:00,,0,ysc-11/DynamicDisplay,662019616,Verilog,DynamicDisplay,12528,0,2023-07-04 07:33:03+00:00,[],None
593,https://github.com/GuangxianZhu/license_plate_recognition_zhu.git,2023-06-30 07:41:26+00:00,license_plate_recognition_zhu,0,GuangxianZhu/license_plate_recognition_zhu,660521760,Verilog,license_plate_recognition_zhu,9908,0,2023-06-30 07:43:51+00:00,[],https://api.github.com/licenses/mit
594,https://github.com/avdssrk/HDLbits_solutions.git,2023-07-07 11:24:21+00:00,Solutions for the HDL bits problems of verilog,0,avdssrk/HDLbits_solutions,663473854,Verilog,HDLbits_solutions,127,0,2023-07-07 11:28:26+00:00,[],None
595,https://github.com/123happycoder/projecy-xl.git,2023-07-05 15:11:20+00:00,,0,123happycoder/projecy-xl,662642920,Verilog,projecy-xl,214,0,2023-07-05 15:12:10+00:00,[],None
596,https://github.com/Gnanaprasanna-korada/4_way_traffic_light_controller.git,2023-07-07 15:54:02+00:00,"A traffic light controller is a system that manages the operation of traffic lights at intersections or other road junctions. Its purpose is to regulate and optimize the flow of traffic, ensuring safety and efficient movement of vehicles and pedestrians.",0,Gnanaprasanna-korada/4_way_traffic_light_controller,663572250,Verilog,4_way_traffic_light_controller,82,0,2023-07-07 16:45:00+00:00,[],None
597,https://github.com/yurinvv/test_task_2.git,2023-07-07 19:52:35+00:00,,0,yurinvv/test_task_2,663652808,Verilog,test_task_2,73578,0,2023-07-18 08:35:43+00:00,[],None
598,https://github.com/Aakulmalhotra/full_adder.git,2023-07-07 09:13:08+00:00,This is a synthesis and analysis of basic full adder in digital electronics,0,Aakulmalhotra/full_adder,663428489,Verilog,full_adder,74,0,2023-07-18 20:29:13+00:00,[],None
599,https://github.com/shivammahato7/16_bit_cla.git,2023-06-24 14:30:21+00:00,,0,shivammahato7/16_bit_cla,658024456,Verilog,16_bit_cla,343,0,2023-06-24 14:32:51+00:00,[],None
600,https://github.com/TharunRoy/Traffic_light_controller.git,2023-06-24 06:23:24+00:00,A verilog code to control the traffic lights in a four way road.,0,TharunRoy/Traffic_light_controller,657895563,Verilog,Traffic_light_controller,210,0,2023-06-24 06:29:50+00:00,[],None
601,https://github.com/Reshmasaba/LANDROVER-_COD_-.git,2023-06-26 07:59:14+00:00,We have created a python code for landrover,0,Reshmasaba/LANDROVER-_COD_-,658643042,Verilog,LANDROVER-_COD_-,1,0,2023-06-26 08:26:22+00:00,[],None
602,https://github.com/Chihan-Zheng/IC_BIN2BCD.git,2023-06-26 00:12:38+00:00,,0,Chihan-Zheng/IC_BIN2BCD,658509402,Verilog,IC_BIN2BCD,7,0,2023-06-26 00:18:46+00:00,[],None
603,https://github.com/ahmetserdar/verilog-ethernet-zcu102.git,2023-06-22 07:10:06+00:00,zcu102 verilog ethernet project is created by alexforencich,0,ahmetserdar/verilog-ethernet-zcu102,657034685,Verilog,verilog-ethernet-zcu102,8,0,2023-06-22 07:11:22+00:00,[],None
604,https://github.com/marchenkoiv/cache.git,2023-06-21 19:29:52+00:00,,0,marchenkoiv/cache,656854876,Verilog,cache,595,0,2023-06-21 19:37:29+00:00,[],None
605,https://github.com/gbellocchi/xil_open_hw_23.git,2023-06-23 08:16:24+00:00,GenOv: Streamlining the Design and Optimization of Heterogeneous RISC-V-based FPGA Overlays,0,gbellocchi/xil_open_hw_23,657512161,Verilog,xil_open_hw_23,53797,0,2023-07-14 09:39:54+00:00,[],
606,https://github.com/vinimibielli/Trabalho-IV-SD.git,2023-06-22 10:58:16+00:00,Mais um lindo trabalho de sistemas digitais,0,vinimibielli/Trabalho-IV-SD,657115911,Verilog,Trabalho-IV-SD,180,0,2023-06-23 13:57:08+00:00,[],None
607,https://github.com/ccl19/MIPS_CPU.git,2023-06-21 16:28:53+00:00,,0,ccl19/MIPS_CPU,656787024,Verilog,MIPS_CPU,658,0,2023-06-21 16:31:30+00:00,[],None
608,https://github.com/harikrishnan4697/BCDTo7Segment.git,2023-06-21 09:28:48+00:00,bcd to 7 segment,0,harikrishnan4697/BCDTo7Segment,656608195,Verilog,BCDTo7Segment,128,0,2023-06-23 09:34:19+00:00,[],None
609,https://github.com/sivaram-07/FFT-IP.git,2023-07-08 11:37:00+00:00,,0,sivaram-07/FFT-IP,663897435,Verilog,FFT-IP,95,0,2023-07-13 03:29:33+00:00,[],None
610,https://github.com/vdagar2211/barrel-shifter-r.git,2023-07-08 11:58:59+00:00,,0,vdagar2211/barrel-shifter-r,663904453,Verilog,barrel-shifter-r,1,0,2023-07-08 12:00:44+00:00,[],None
611,https://github.com/cinll5312/TPU.git,2023-07-01 13:41:08+00:00,Design a Tensor Processing Unit(TPU) which has 4x4 Processing elements(PEs) ,0,cinll5312/TPU,661004552,Verilog,TPU,456,0,2023-07-01 13:41:51+00:00,[],None
612,https://github.com/maktheus/Worlong-brick-blocker.git,2023-07-02 18:15:40+00:00,ed2 final project de2-115,0,maktheus/Worlong-brick-blocker,661400978,Verilog,Worlong-brick-blocker,4700,0,2023-07-02 18:16:16+00:00,[],None
613,https://github.com/Abhijeet07Singh/ECG-Monitoring.git,2023-06-30 14:35:45+00:00,,0,Abhijeet07Singh/ECG-Monitoring,660667196,Verilog,ECG-Monitoring,11,0,2023-06-30 14:39:26+00:00,[],None
614,https://github.com/gowthami-codes/encoder.git,2023-06-30 15:05:50+00:00,,0,gowthami-codes/encoder,660678678,Verilog,encoder,1,0,2023-06-30 15:06:40+00:00,[],None
615,https://github.com/ThereisNoAvailableName/Verilog.git,2023-06-30 10:31:01+00:00,verilog project,0,ThereisNoAvailableName/Verilog,660581807,Verilog,Verilog,32,0,2023-06-30 10:32:55+00:00,[],None
616,https://github.com/rolance110/Smart-Traffic-Light.git,2023-06-29 07:45:31+00:00,邏輯設計期末專題延伸(Verilog),0,rolance110/Smart-Traffic-Light,660079953,Verilog,Smart-Traffic-Light,37,0,2023-10-01 13:57:05+00:00,[],None
617,https://github.com/ahjafar/DSDProject402.git,2023-07-03 14:14:06+00:00,,0,ahjafar/DSDProject402,661731355,Verilog,DSDProject402,165787,0,2023-07-03 14:25:23+00:00,[],None
618,https://github.com/SunirbanRanjit/8-bit-ALU_Verilog.git,2023-07-03 15:48:49+00:00,,0,SunirbanRanjit/8-bit-ALU_Verilog,661769524,Verilog,8-bit-ALU_Verilog,12,0,2023-07-03 15:49:41+00:00,[],https://api.github.com/licenses/apache-2.0
619,https://github.com/prateekbashista/2-way_Set_Associative_LRU_Cache_Controller.git,2023-07-03 00:41:56+00:00,RTL Design and Multi Heirarchy Memory Model Design of 2 Way Set Associative LRU L1 Cache,0,prateekbashista/2-way_Set_Associative_LRU_Cache_Controller,661476144,Verilog,2-way_Set_Associative_LRU_Cache_Controller,5,0,2023-07-03 00:44:10+00:00,[],None
620,https://github.com/eric7541/vacation.git,2023-07-03 02:09:10+00:00,,0,eric7541/vacation,661493193,Verilog,vacation,38,0,2023-07-03 06:11:58+00:00,[],None
621,https://github.com/GabrielVargasBS/AC1.git,2023-07-03 22:25:16+00:00,Arquitetura de Computadores I,0,GabrielVargasBS/AC1,661886278,Verilog,AC1,3703,0,2023-07-04 00:16:51+00:00,[],None
622,https://github.com/Mahima-150/timer.git,2023-07-04 08:58:04+00:00,,0,Mahima-150/timer,662053775,Verilog,timer,14,0,2023-07-04 08:59:47+00:00,[],https://api.github.com/licenses/gpl-2.0
623,https://github.com/AhmedMohamed106/Hamming-code-parity-checker.git,2023-06-25 02:46:34+00:00,,0,AhmedMohamed106/Hamming-code-parity-checker,658179490,Verilog,Hamming-code-parity-checker,193,0,2023-11-20 14:09:17+00:00,[],None
624,https://github.com/xyz123479/ECC-exercise.git,2023-06-26 14:44:15+00:00,,1,xyz123479/ECC-exercise,658815099,Verilog,ECC-exercise,14381,0,2023-07-26 02:15:15+00:00,[],https://api.github.com/licenses/cern-ohl-s-2.0
625,https://github.com/Nahele41/ProgettoCPU.git,2023-07-05 08:19:12+00:00,CPU progettata con il programma Digital a seguito del corso di Reti Logiche e Calcolatori.,0,Nahele41/ProgettoCPU,662479392,Verilog,ProgettoCPU,6,0,2023-07-05 08:21:24+00:00,[],None
626,https://github.com/jessyca-ferreira/microwave-verilog-implementation.git,2023-07-06 02:46:17+00:00,Implementação de um microondas utilizando verilog. A hierarquia apresentada no livro Digital Systems de Ronald J Tocci foi seguida.,0,jessyca-ferreira/microwave-verilog-implementation,662847697,Verilog,microwave-verilog-implementation,104,0,2023-07-06 02:47:36+00:00,[],None
627,https://github.com/boing-86/array_multiplication.git,2023-07-06 04:50:23+00:00,임베디드 시스템 Final Assignment,0,boing-86/array_multiplication,662877572,Verilog,array_multiplication,27,0,2023-10-27 08:41:50+00:00,[],None
628,https://github.com/WegdanAli13/ahb.git,2023-06-21 11:09:45+00:00,,1,WegdanAli13/ahb,656650694,Verilog,ahb,8,0,2023-06-21 11:14:05+00:00,[],None
629,https://github.com/saran18/CS2610.git,2023-06-23 10:56:17+00:00,Contains code of CS2610 Assignments,0,saran18/CS2610,657569436,Verilog,CS2610,1136,0,2023-06-23 11:11:22+00:00,[],None
630,https://github.com/yuxuan-chen-6/EErover_year2.git,2023-06-24 01:18:19+00:00,,0,yuxuan-chen-6/EErover_year2,657834406,Verilog,EErover_year2,40196,0,2023-09-12 15:49:50+00:00,[],None
631,https://github.com/Promin3/ComputerOrganizationAndDesign.git,2023-06-28 17:25:35+00:00,,0,Promin3/ComputerOrganizationAndDesign,659844437,Verilog,ComputerOrganizationAndDesign,45642,0,2023-06-28 17:27:10+00:00,[],None
632,https://github.com/capt-FROSTY/8-Bit-ALU.git,2023-06-28 10:12:00+00:00,"Design a 8 bit ALU(Arithmetic Logic Unit) which can perform various arithmetic operations such as Addition, Subtraction, Multiplication, Logic AND, Logic OR, Logic XOR, Left shift and Right shift.",0,capt-FROSTY/8-Bit-ALU,659673285,Verilog,8-Bit-ALU,1,0,2023-06-28 10:13:12+00:00,[],None
633,https://github.com/oriod-malo/Custom-MIPS32-CPU.git,2023-06-25 18:25:45+00:00,"A custom, reduced ISA MIPS32 CPU.",0,oriod-malo/Custom-MIPS32-CPU,658435728,Verilog,Custom-MIPS32-CPU,8,0,2023-06-25 18:27:53+00:00,[],None
634,https://github.com/monnikaaa/Stuck_at_fault.git,2023-07-03 07:11:35+00:00,Detection faults i.e. Stuck_at_fault_0  or Stuck_at_falut_1,0,monnikaaa/Stuck_at_fault,661570793,Verilog,Stuck_at_fault,7,0,2023-07-03 12:43:21+00:00,[],https://api.github.com/licenses/mit
635,https://github.com/anshulk1234/CSE-Processor.git,2023-07-03 10:35:45+00:00,,0,anshulk1234/CSE-Processor,661647152,Verilog,CSE-Processor,24,0,2023-07-06 14:03:44+00:00,[],None
636,https://github.com/celal9/VERILOG-V2.git,2023-07-04 18:28:24+00:00,Polynomial Memory and CENG Accumulator,0,celal9/VERILOG-V2,662268197,Verilog,VERILOG-V2,7,0,2023-07-04 18:31:30+00:00,[],None
637,https://github.com/LucasAbrandao/LAOC-1.git,2023-07-01 20:01:46+00:00,laboratorio de algoritimo e estrutura de dados 1,0,LucasAbrandao/LAOC-1,661104978,Verilog,LAOC-1,28,0,2023-07-01 20:23:26+00:00,[],None
638,https://github.com/ArnauvGilotra/Processor_Architecture.git,2023-07-01 23:41:00+00:00,Labs on ARM V7 Assembly and development of my own 16Bit Processor and it's own Assembly language,0,ArnauvGilotra/Processor_Architecture,661144732,Verilog,Processor_Architecture,10671,0,2023-07-02 00:07:54+00:00,[],None
639,https://github.com/techerpradip/Single-Cycle-Processor.git,2023-07-07 14:31:12+00:00,Final Project: created an extended version of Single Cycle Processor in Verilog.,0,techerpradip/Single-Cycle-Processor,663540521,Verilog,Single-Cycle-Processor,8,0,2023-09-26 02:33:41+00:00,[],None
640,https://github.com/anshikabhatia13/ClassroomSecuritySystem_DLD.git,2023-07-07 15:35:34+00:00,,0,anshikabhatia13/ClassroomSecuritySystem_DLD,663565568,Verilog,ClassroomSecuritySystem_DLD,1387,0,2023-07-07 15:41:33+00:00,[],None
641,https://github.com/gowdy88/Single-Cycle-Processor.git,2023-07-03 11:32:58+00:00,MIPS Single Cycle Processor on Verilog,0,gowdy88/Single-Cycle-Processor,661667239,Verilog,Single-Cycle-Processor,4,0,2023-07-03 11:40:43+00:00,[],None
642,https://github.com/PaulinaRicoG/ofpga_test.git,2023-07-03 18:10:45+00:00,,0,PaulinaRicoG/ofpga_test,661818320,Verilog,ofpga_test,49293,0,2023-07-03 18:11:39+00:00,[],https://api.github.com/licenses/apache-2.0
643,https://github.com/hazemzakariasaad/binary_to_bcd_converter.git,2023-07-03 22:15:51+00:00,This project implements a module called BCDConvert in SystemVerilog that performs the conversion of binary numbers to Binary Coded Decimal (BCD) format. BCD is a way of representing decimal numbers using a binary encoding scheme,0,hazemzakariasaad/binary_to_bcd_converter,661884388,Verilog,binary_to_bcd_converter,4,0,2023-07-04 00:30:47+00:00,[],None
644,https://github.com/RaulG99/1-d_conv.git,2023-07-02 20:23:29+00:00,,0,RaulG99/1-d_conv,661431129,Verilog,1-d_conv,2,0,2023-07-02 20:25:27+00:00,[],None
645,https://github.com/asirmak/CSE224-TermProject.git,2023-07-06 07:52:09+00:00,Very Simple CPU in verilog,0,asirmak/CSE224-TermProject,662935983,Verilog,CSE224-TermProject,376,0,2023-07-23 10:49:43+00:00,[],None
646,https://github.com/hossamad/32-Point-FFT-in-verilog.git,2023-07-01 13:25:38+00:00,,0,hossamad/32-Point-FFT-in-verilog,661000507,Verilog,32-Point-FFT-in-verilog,159,0,2023-07-01 13:29:54+00:00,[],None
647,https://github.com/moghazym31/verilog-risc-v-pipelined-processor.git,2023-06-30 02:53:40+00:00,Verilog RISC-V pipelined processor implementation.,0,moghazym31/verilog-risc-v-pipelined-processor,660442629,Verilog,verilog-risc-v-pipelined-processor,18,0,2023-07-05 12:05:55+00:00,[],None
648,https://github.com/lavishvamsiraja/RISC.git,2023-06-30 03:49:23+00:00,RISC-V RV32I RTL Design using Verilog HDL ,0,lavishvamsiraja/RISC,660456159,Verilog,RISC,3874,0,2023-06-30 04:03:43+00:00,[],None
649,https://github.com/AvantikaN/Controlling-Servo-Motor-using-Tang-Nano-4k.git,2023-07-08 07:33:57+00:00,,0,AvantikaN/Controlling-Servo-Motor-using-Tang-Nano-4k,663823356,Verilog,Controlling-Servo-Motor-using-Tang-Nano-4k,11,0,2023-09-26 20:33:37+00:00,"['fpga', 'opensource', 'pwm', 'servo-motor', 'tang-nano-4k', 'verilog-hdl']",None
650,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-20.git,2023-06-22 08:37:47+00:00,PARITY GENERATORS,0,rajitha0119/100-DAYS-OF-RTL-DAY-20,657065024,Verilog,100-DAYS-OF-RTL-DAY-20,442,0,2023-06-22 08:41:07+00:00,[],None
651,https://github.com/hungpio89/School_Project.git,2023-06-21 07:34:26+00:00,Some experiment i have done in University,0,hungpio89/School_Project,656560700,Verilog,School_Project,68314,0,2023-06-21 10:45:39+00:00,[],None
652,https://github.com/BatGun21/8-bit-RISC-Processor.git,2023-07-03 05:38:20+00:00,,0,BatGun21/8-bit-RISC-Processor,661541895,Verilog,8-bit-RISC-Processor,10,0,2023-07-03 05:43:22+00:00,[],None
653,https://github.com/Jiwhan-Kim/RISC-V-CPU.git,2023-06-22 12:48:12+00:00,Yonsei Univ. SYS3104 Computer Architecture,0,Jiwhan-Kim/RISC-V-CPU,657157151,Verilog,RISC-V-CPU,97,0,2023-06-22 12:49:23+00:00,[],https://api.github.com/licenses/gpl-3.0
654,https://github.com/GlebKasi/probation_Kasianov_Gleb.git,2023-07-06 14:36:46+00:00,,0,GlebKasi/probation_Kasianov_Gleb,663094200,Verilog,probation_Kasianov_Gleb,18,0,2023-07-07 12:55:24+00:00,[],None
