,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/ulixxe/usb_cdc.git,2021-06-08 19:26:17+00:00,Single/Multi-channel Full Speed USB interface for FPGA and ASIC designs,8,ulixxe/usb_cdc,375122072,Verilog,usb_cdc,7405,143,2024-04-10 21:07:16+00:00,"['usb-cdc', 'verilog', 'fpga', 'asic', 'usb', 'usb-device', 'tinyfpga-bx', 'serial', 'cdc-acm', 'fomu', 'bootloader']",https://api.github.com/licenses/mit
1,https://github.com/chipsalliance/synlig.git,2021-07-02 09:37:34+00:00,SystemVerilog support for Yosys,18,chipsalliance/synlig,382298947,Verilog,synlig,4004,131,2024-04-12 13:56:11+00:00,[],https://api.github.com/licenses/apache-2.0
2,https://github.com/lirui-shanghaitech/CNN-Accelerator-VLSI.git,2021-06-21 16:00:45+00:00,"Convolutional accelerator kernel, target ASIC & FPGA",18,lirui-shanghaitech/CNN-Accelerator-VLSI,378987424,Verilog,CNN-Accelerator-VLSI,1662,128,2024-04-10 03:49:41+00:00,"['cnn', 'accelerator', 'asic-design', 'fpga-accelerator', 'fpga', 'cnn-accelerator', 'cnn-digital']",https://api.github.com/licenses/apache-2.0
3,https://github.com/ultraembedded/openlogicbit.git,2021-06-20 22:13:33+00:00,Open-source Logic Analyzer gateware for various FPGA dev boards/replacement gateware for commercially available logic analyzers.,12,ultraembedded/openlogicbit,378749586,Verilog,openlogicbit,621,93,2024-03-23 23:42:24+00:00,"['fpga', 'logic-analyzer', 'xilinx-fpga', 'lattice-fpga', 'altera-fpga', 'ftdi232h', 'ftdi2232h', 'digital-signal-analyzer', 'verilog']",https://api.github.com/licenses/apache-2.0
4,https://github.com/stillwater-sc/RISC-V-TensorCore.git,2021-06-26 13:36:27+00:00,Transactional Verilog design and Verilator Testbench for a RISC-V TensorCore Vector co-processor for reproducible linear algebra,11,stillwater-sc/RISC-V-TensorCore,380509965,Verilog,RISC-V-TensorCore,146,41,2024-04-09 04:48:09+00:00,"['vector-processor', 'reproducible-computation', 'risc-v64']",https://api.github.com/licenses/mit
5,https://github.com/shariethernet/Physical-Design-with-OpenLANE-using-SKY130-PDK.git,2021-06-29 17:47:17+00:00,"This project is done in the course of ""Advanced Physical Design using OpenLANE/Sky130"" workshop by VLSI System Design Corporation. In this project, a PicoRV32a SoC is taken and then the RTL to GDSII Flow is implemented with Openlane using Skywater130nm PDK. Custom-designed standard cells with Sky130 PDK are also used in the flow.  Timing Optimisations are carried out. Slack violations are removed. DRC is verified",7,shariethernet/Physical-Design-with-OpenLANE-using-SKY130-PDK,381450472,Verilog,Physical-Design-with-OpenLANE-using-SKY130-PDK,47047,32,2024-04-04 22:11:32+00:00,"['vlsi-physical-design', 'risc-v', 'electronics-engineering']",None
6,https://github.com/shubhi704/APB-Protocol.git,2021-06-16 16:35:15+00:00,,10,shubhi704/APB-Protocol,377562419,Verilog,APB-Protocol,1571,30,2024-03-24 16:05:22+00:00,[],None
7,https://github.com/suisuisi/FPGAandPeripheralInterface.git,2021-06-13 05:48:41+00:00, Peripheral Interface of FPGA,23,suisuisi/FPGAandPeripheralInterface,376451989,Verilog,FPGAandPeripheralInterface,353338,28,2024-04-02 01:21:45+00:00,[],None
8,https://github.com/jgrip/c128-verilog.git,2021-07-11 18:04:40+00:00,Verilog code for C128 custom chips,1,jgrip/c128-verilog,385019616,Verilog,c128-verilog,61900,28,2024-02-26 04:21:22+00:00,[],https://api.github.com/licenses/cc-by-4.0
9,https://github.com/emeb/up5k_osc.git,2021-06-26 20:14:21+00:00,,3,emeb/up5k_osc,380588695,Verilog,up5k_osc,411,27,2023-03-07 17:35:41+00:00,[],https://api.github.com/licenses/mit
10,https://github.com/Zyy438/FPGAudio.git,2021-07-05 19:13:11+00:00,A set of audio processing functions implemented by FPGA,2,Zyy438/FPGAudio,383242015,Verilog,FPGAudio,220962,26,2024-04-12 08:14:37+00:00,[],None
11,https://github.com/Starrynightzyq/soNN.git,2021-06-08 07:39:56+00:00,A Reconﬁgurable Accelerator for Deep Convolutional Neural Networks Implemented by Chisel3.,6,Starrynightzyq/soNN,374924088,Verilog,soNN,13211,26,2024-03-19 06:33:47+00:00,"['cnn', 'chisel3', 'chisel', 'fpga', 'acclerometer', 'nn']",None
12,https://github.com/cepdnaclk/e16-co502-RV32IM-pipeline-implementation-group1.git,2021-06-30 16:54:58+00:00,The objective of this project was to design and implement a 5 stage pipeline CPU to support the RISC-V instruction architecture. This pipeline CPU supports the entire RV32IM ISA which contains 45 instructions. The designed pipeline CPU was implemented using behavioral modeling in verilogHDL and icarus Verilog was used compile and simulate. gtkWave was used to observe the behavior.,4,cepdnaclk/e16-co502-RV32IM-pipeline-implementation-group1,381774105,Verilog,e16-co502-RV32IM-pipeline-implementation-group1,8750,17,2024-03-22 04:39:05+00:00,"['rv32im', 'verilog', 'risc-v', 'computer-architecture', 'pipeline']",None
13,https://github.com/niklasekstrom/cia-verilog.git,2021-06-30 16:15:39+00:00,Implementation of 8250 Complex Interface Adapter (CIA) in Verilog,4,niklasekstrom/cia-verilog,381762914,Verilog,cia-verilog,11,17,2024-01-07 00:33:44+00:00,[],None
14,https://github.com/RatkoFri/MulApprox.git,2021-06-27 10:03:31+00:00,MulApprox - A comprehensive library of state-of-the-art approximate multipliers,2,RatkoFri/MulApprox,380706229,Verilog,MulApprox,96,16,2024-03-24 17:02:11+00:00,[],https://api.github.com/licenses/mit
15,https://github.com/dineshannayya/yifive_r0.git,2021-06-13 06:52:15+00:00,"A 32 bit RISCV Based SOC with QSpi , Uart and 8 bit SDRAM Controller tagetted to efebless shuttle program",3,dineshannayya/yifive_r0,376463833,Verilog,yifive_r0,2006275,15,2024-01-31 08:25:02+00:00,[],https://api.github.com/licenses/apache-2.0
16,https://github.com/VoidMercy/Lattice-ECP5-Bitstream-Decompiler.git,2021-06-23 21:55:22+00:00,Bitstream to Verilog decompiler for Lattice FPGA ECP5 chip.,4,VoidMercy/Lattice-ECP5-Bitstream-Decompiler,379737914,Verilog,Lattice-ECP5-Bitstream-Decompiler,140,15,2024-02-16 15:15:50+00:00,[],None
17,https://github.com/h1kari/hpcore.git,2021-06-09 05:50:57+00:00,Hogge Phase EMFI Detector,2,h1kari/hpcore,375241022,Verilog,hpcore,26,14,2023-11-30 03:42:05+00:00,[],None
18,https://github.com/montedalrymple/yrv.git,2021-06-14 20:32:16+00:00,Verilog implementation of RISC-V: RV32IAC plus much of B. 32-bit or 16-bit bus.,19,montedalrymple/yrv,376948773,Verilog,yrv,352,14,2024-03-24 16:10:09+00:00,[],https://api.github.com/licenses/apache-2.0
19,https://github.com/beebdev/HARU.git,2021-07-09 02:54:32+00:00,Hardware Accelerated Read Until,1,beebdev/HARU,384304205,Verilog,HARU,49191,14,2024-02-22 06:10:42+00:00,[],https://api.github.com/licenses/mit
20,https://github.com/ishfaqahmed29/SerDes.git,2021-06-08 18:02:26+00:00,Verilog RTL Design,3,ishfaqahmed29/SerDes,375101026,Verilog,SerDes,437,14,2023-08-31 09:47:52+00:00,[],None
21,https://github.com/gyurco/Next186.git,2021-07-05 17:35:48+00:00,,10,gyurco/Next186,383219360,Verilog,Next186,1802,13,2024-01-21 08:25:06+00:00,[],https://api.github.com/licenses/gpl-3.0
22,https://github.com/CJH8668/risc_cpu.git,2021-06-17 13:33:25+00:00,,4,CJH8668/risc_cpu,377841699,Verilog,risc_cpu,22547,12,2023-12-22 15:26:08+00:00,[],None
23,https://github.com/srg320/S32X_MiSTer.git,2021-06-16 07:12:22+00:00,,2,srg320/S32X_MiSTer,377404971,Verilog,S32X_MiSTer,498,11,2023-10-08 07:05:49+00:00,[],None
24,https://github.com/Timothy-Liuxf/PipelineCPU.git,2021-07-08 13:15:43+00:00,清华大学电子工程系数字逻辑与处理器基础实验大作业——流水线 CPU,1,Timothy-Liuxf/PipelineCPU,384129975,Verilog,PipelineCPU,6356,10,2024-01-20 08:37:02+00:00,[],https://api.github.com/licenses/mit
25,https://github.com/infphyny/FpgaRiscV.git,2021-06-16 13:11:23+00:00,RiscV cpu on FPGA  ,4,infphyny/FpgaRiscV,377500726,Verilog,FpgaRiscV,7359,10,2023-09-19 06:32:05+00:00,[],None
26,https://github.com/ShonTaware/LowPower.git,2021-06-25 07:04:37+00:00,Various low power labs using sky130 ,5,ShonTaware/LowPower,380154051,Verilog,LowPower,6084,10,2024-03-10 09:45:25+00:00,"['low-power', 'upf', 'vcs', 'sky130']",None
27,https://github.com/rkbrooks/vg64.git,2021-06-07 19:48:29+00:00,A second screen for the Commodore 64,0,rkbrooks/vg64,374783226,Verilog,vg64,795,10,2022-02-23 21:03:32+00:00,[],https://api.github.com/licenses/bsd-2-clause
28,https://github.com/blazer82/gb.fpga.git,2021-06-09 09:53:32+00:00,FPGA-based handheld console that plays games from Gameboy cartridges,1,blazer82/gb.fpga,375306006,Verilog,gb.fpga,25936,10,2024-04-08 03:19:20+00:00,[],
29,https://github.com/RTimothyEdwards/ravenna_standalone.git,2021-07-02 23:43:56+00:00,A lightweight version of the efabless Ravenna RISC-V processor chip design files for public access,3,RTimothyEdwards/ravenna_standalone,382487029,Verilog,ravenna_standalone,18491,9,2021-11-13 04:57:27+00:00,[],https://api.github.com/licenses/apache-2.0
30,https://github.com/kaitoukito/YSYX-NJU-Group.git,2021-07-08 11:55:32+00:00,YSYX RISC-V Project NJU Study Group,2,kaitoukito/YSYX-NJU-Group,384108382,Verilog,YSYX-NJU-Group,1519,9,2024-03-12 11:18:55+00:00,[],None
31,https://github.com/sudhamshu091/ldpc-encoder-decoder.git,2021-06-19 17:41:30+00:00,,5,sudhamshu091/ldpc-encoder-decoder,378471249,Verilog,ldpc-encoder-decoder,11448,9,2024-03-26 08:17:08+00:00,[],None
32,https://github.com/Chair-for-Security-Engineering/FIVER.git,2021-06-24 11:18:00+00:00,,1,Chair-for-Security-Engineering/FIVER,379899269,Verilog,FIVER,4108,9,2024-03-18 07:54:54+00:00,[],
33,https://github.com/dininduwm/RV32IM-pipeline-implementation.git,2021-06-24 07:40:59+00:00,,3,dininduwm/RV32IM-pipeline-implementation,379843839,Verilog,RV32IM-pipeline-implementation,6010,8,2022-11-22 16:33:20+00:00,[],None
34,https://github.com/lucasbrasilino/axis_exec_op.git,2021-07-05 15:43:24+00:00,Verilog module for executing logic operations over AXI4-Stream interface data.,0,lucasbrasilino/axis_exec_op,383190555,Verilog,axis_exec_op,13,8,2023-12-06 17:51:18+00:00,[],https://api.github.com/licenses/apache-2.0
35,https://github.com/hao0527/fpga-ov2640_fifo_spi.git,2021-07-03 05:53:32+00:00,FPGA配置OV2640，读取摄像头数据，SPI串行输出,0,hao0527/fpga-ov2640_fifo_spi,382537094,Verilog,fpga-ov2640_fifo_spi,10,7,2023-07-09 07:19:16+00:00,[],None
36,https://github.com/nhpoole/mixed_signal_mmwave_edge_accelerator.git,2021-07-05 02:11:16+00:00,,3,nhpoole/mixed_signal_mmwave_edge_accelerator,382989453,Verilog,mixed_signal_mmwave_edge_accelerator,218300,7,2023-04-02 03:32:44+00:00,[],
37,https://github.com/xolod79/MC1201.git,2021-06-06 19:12:28+00:00,,1,xolod79/MC1201,374443626,Verilog,MC1201,37305,7,2024-01-07 19:56:33+00:00,[],https://api.github.com/licenses/gpl-2.0
38,https://github.com/KastnerRG/AKER-Access-Control.git,2021-06-24 16:29:00+00:00,The public repo of the AKER framework for safe and secure SoC access control systems,4,KastnerRG/AKER-Access-Control,379988044,Verilog,AKER-Access-Control,5311,6,2024-03-01 21:50:30+00:00,[],None
39,https://github.com/martandrMC/cpu-design.git,2021-06-18 16:42:10+00:00,This repository contains files regarding my CPU designs,1,martandrMC/cpu-design,378211370,Verilog,cpu-design,8736,6,2023-12-30 22:58:14+00:00,"['cpu-design', 'assembly']",https://api.github.com/licenses/gpl-3.0
40,https://github.com/minhna1112/AdaptiveFilter-LMS-Verilog.git,2021-06-19 07:31:04+00:00,Class Project - Digital Signal Processing,0,minhna1112/AdaptiveFilter-LMS-Verilog,378352119,Verilog,AdaptiveFilter-LMS-Verilog,3,5,2024-03-08 02:58:54+00:00,"['verilog', 'gradient-descent', 'adaptive']",None
41,https://github.com/lnis-uofu/SOFA-Plus-eFPGA.git,2021-06-15 18:41:03+00:00,SOFA-Plusis second version of SOFA eFPGA series. This is Heterogeneous eFPGA with enhanced DSP features.,1,lnis-uofu/SOFA-Plus-eFPGA,377262170,Verilog,SOFA-Plus-eFPGA,71804,5,2024-01-16 16:03:53+00:00,[],https://api.github.com/licenses/apache-2.0
42,https://github.com/mabrains/caravel_user_project_Analog_LDO_DPLL.git,2021-06-20 22:32:51+00:00,Skywater 130nm LDO parts and DPLL,1,mabrains/caravel_user_project_Analog_LDO_DPLL,378751898,Verilog,caravel_user_project_Analog_LDO_DPLL,48626,5,2022-07-30 06:10:20+00:00,[],https://api.github.com/licenses/lgpl-2.1
43,https://github.com/Ethan-yh/Nexys4DDR-Controller.git,2021-06-24 10:42:59+00:00,,1,Ethan-yh/Nexys4DDR-Controller,379890441,Verilog,Nexys4DDR-Controller,20,5,2023-09-11 04:51:23+00:00,[],None
44,https://github.com/jhz701/class_d_audio_amplifier.git,2021-06-15 06:59:02+00:00,,1,jhz701/class_d_audio_amplifier,377066914,Verilog,class_d_audio_amplifier,464531,5,2023-11-28 13:00:20+00:00,[],https://api.github.com/licenses/apache-2.0
45,https://github.com/Zyy438/fpga_uart.git,2021-06-26 15:43:09+00:00,an uart module for fpga using RS232 protocol (no check digit). Used for ELEC5552 design project,1,Zyy438/fpga_uart,380537881,Verilog,fpga_uart,4501,5,2021-08-27 04:51:22+00:00,[],None
46,https://github.com/TernenceCao/MyCPU.git,2021-06-12 13:37:18+00:00,A simple 5-stage-pipeline CPU with forwarding.,0,TernenceCao/MyCPU,376298516,Verilog,MyCPU,22,5,2023-11-09 17:06:51+00:00,[],None
47,https://github.com/veeYceeY/AUK-V-Aethia.git,2021-06-21 10:01:56+00:00,AUK-V  RV32I CPU,1,veeYceeY/AUK-V-Aethia,378885856,Verilog,AUK-V-Aethia,103,5,2024-01-21 22:24:47+00:00,[],https://api.github.com/licenses/gpl-3.0
48,https://github.com/santoshkrishna4138/Sparse_Dense_Matrix_Multiplication.git,2021-07-03 12:43:01+00:00,This is the repository containing the implementation of sparse dense matrix multiplication for the matrix dimension of 560 x 560.,1,santoshkrishna4138/Sparse_Dense_Matrix_Multiplication,382613123,Verilog,Sparse_Dense_Matrix_Multiplication,945,5,2024-02-26 09:58:43+00:00,[],None
49,https://github.com/iCopy-X-Community/icopyx-community-fpga.git,2021-07-02 11:04:38+00:00,,1,iCopy-X-Community/icopyx-community-fpga,382319730,Verilog,icopyx-community-fpga,615,4,2023-01-03 02:33:47+00:00,[],https://api.github.com/licenses/gpl-3.0
50,https://github.com/secworks/grain128.git,2021-06-15 06:26:20+00:00,Hardware implementation of the Grain128AEAD stream cipher,1,secworks/grain128,377058859,Verilog,grain128,25,4,2022-07-09 14:57:42+00:00,[],https://api.github.com/licenses/bsd-2-clause
51,https://github.com/andy39866821/FFT-Convolution-Verilog-Implmentation.git,2021-07-05 08:01:23+00:00,,0,andy39866821/FFT-Convolution-Verilog-Implmentation,383061206,Verilog,FFT-Convolution-Verilog-Implmentation,368,4,2024-04-08 07:12:14+00:00,[],None
52,https://github.com/hankshyu/Digital-Design.git,2021-07-04 13:34:19+00:00,Hardware Description Language on FPGA,0,hankshyu/Digital-Design,382860064,Verilog,Digital-Design,202,4,2024-03-02 06:34:52+00:00,"['hardware', 'fpga', 'verilog']",https://api.github.com/licenses/mit
53,https://github.com/Luca-Dalmasso/DLX.git,2021-07-02 06:46:17+00:00,"RTL description, synthesis and physical design of a 4-stage pipelined 32bit RISC processor",1,Luca-Dalmasso/DLX,382256243,Verilog,DLX,17105,4,2023-10-22 16:36:53+00:00,"['vhdl', 'computer-architecture', 'digital-design', 'dlx', 'dlx-instruction-set', 'dlx-processor', 'embedded-systems', 'hardware-designs', 'risc-processor', 'rtl-design']",None
54,https://github.com/ShaofengWu123/RISC-V-pipeline-cpu.git,2021-06-20 06:33:05+00:00,"This is a course project of Computer Organization and Design. In this project, a 5-stage RISC-V Pipeline CPU with forwarding, hazard detection and handling, dynamic branch prediction and limited I/O is implemented..   ",0,ShaofengWu123/RISC-V-pipeline-cpu,378575810,Verilog,RISC-V-pipeline-cpu,20,4,2023-12-15 08:10:23+00:00,"['risc-v', 'cpu', 'ustc']",None
55,https://github.com/while-TuRe/multicycle-CPU54.git,2021-07-10 02:25:40+00:00,,0,while-TuRe/multicycle-CPU54,384592891,Verilog,multicycle-CPU54,2091,4,2024-04-07 04:19:51+00:00,[],None
56,https://github.com/IvyCharon/Verilog-Practice.git,2021-07-03 14:07:08+00:00,PPCA 2021 homework 0.5.,2,IvyCharon/Verilog-Practice,382630680,Verilog,Verilog-Practice,7,4,2021-07-09 01:09:38+00:00,[],None
57,https://github.com/xiyurain/UltraMIPS-CPU.git,2021-06-29 10:11:56+00:00,"A Dual-issue MIPS CPU core feature with 5-level-pipeline, cache, Branch Predictor, TLB, UNIX OS SoC.",1,xiyurain/UltraMIPS-CPU,381321540,Verilog,UltraMIPS-CPU,42021,4,2024-01-30 11:30:19+00:00,[],None
58,https://github.com/ombhilare999/Carry-Lookahead-Adder-Cocotb.git,2021-06-17 10:02:37+00:00, Verification test of Carry Lookahead Adder using cocotb,0,ombhilare999/Carry-Lookahead-Adder-Cocotb,377784777,Verilog,Carry-Lookahead-Adder-Cocotb,13,4,2023-09-29 06:54:22+00:00,[],None
59,https://github.com/lxlonlyn/MIPS_CPU.git,2021-06-23 11:52:20+00:00,31条指令MIPS多周期CPU，用来忽悠计组大作业。,0,lxlonlyn/MIPS_CPU,379585801,Verilog,MIPS_CPU,11,4,2023-12-27 07:40:35+00:00,[],None
60,https://github.com/lakshmi-sathi/Analog-Neural-Network.git,2021-06-19 05:17:04+00:00,,0,lakshmi-sathi/Analog-Neural-Network,378329725,Verilog,Analog-Neural-Network,37337,4,2022-12-14 23:44:08+00:00,[],https://api.github.com/licenses/apache-2.0
61,https://github.com/tastynoob/FPGA_verilog_easy_cpu.git,2021-06-09 07:44:20+00:00,very easy cpu,0,tastynoob/FPGA_verilog_easy_cpu,375269825,Verilog,FPGA_verilog_easy_cpu,27,4,2023-01-22 16:52:13+00:00,[],None
62,https://github.com/ZJU2018/ECDSA.git,2021-06-19 13:50:54+00:00,ECDSA signature and verification,0,ZJU2018/ECDSA,378423463,Verilog,ECDSA,15983,4,2023-08-08 03:51:02+00:00,[],None
63,https://github.com/danhans42/fpga_booty.git,2021-06-30 08:25:42+00:00,Fun experiment with booting a PSX from expansion & FPGA,0,danhans42/fpga_booty,381628629,Verilog,fpga_booty,781,4,2023-10-29 14:25:03+00:00,[],None
64,https://github.com/ujjawalece/AES-and-DES-Implementation-in-Verilog-Xilinx-.git,2021-07-08 19:48:42+00:00,,0,ujjawalece/AES-and-DES-Implementation-in-Verilog-Xilinx-,384232754,Verilog,AES-and-DES-Implementation-in-Verilog-Xilinx-,14780,3,2023-04-07 17:01:01+00:00,"['aes-128', 'encryption', 'decryption', 'cryptography', 'verilog', 'xilinx-ise']",None
65,https://github.com/luuvanduc1999/UART_WithParityCodeCheck__Verilog.git,2021-06-09 09:21:35+00:00,UART with ParityCode check Verilog,0,luuvanduc1999/UART_WithParityCodeCheck__Verilog,375297060,Verilog,UART_WithParityCodeCheck__Verilog,525,3,2024-03-07 22:31:10+00:00,[],None
66,https://github.com/ChienKaiMa/Image-Processing-Filter.git,2021-06-13 06:07:20+00:00,2021 ICD Project – Digital IC Design,0,ChienKaiMa/Image-Processing-Filter,376455450,Verilog,Image-Processing-Filter,623,3,2023-09-07 05:42:13+00:00,[],None
67,https://github.com/embedded-explorer/Verilog-Learning.git,2021-07-11 09:17:35+00:00,This repo documents the learning of verilog HDL from various resources,0,embedded-explorer/Verilog-Learning,384905286,Verilog,Verilog-Learning,469,3,2022-07-19 15:51:27+00:00,[],None
68,https://github.com/tharinduSamare/Multicore_processor_verilog_design.git,2021-06-20 12:14:26+00:00,This is  a multi-core processor specially designed for matrix multiplication using Verilog HDL.,2,tharinduSamare/Multicore_processor_verilog_design,378637250,Verilog,Multicore_processor_verilog_design,8194,3,2023-12-10 17:24:52+00:00,"['fpga', 'simulation', 'verilog', 'quartus-prime', 'modelsim']",None
69,https://github.com/YuanZhaoHui1999/trafficlight-based-on-Verilog.git,2021-07-03 17:57:25+00:00,采用Verilog编写程序，并在QUARTUS 13.1工具Modelsim平台仿真，在一个十字交叉路口，每个路口都有红、绿、黄、左转红、绿、黄共六盏灯。即北、东、南、西方向有二十四盏灯。红灯亮时表示禁止通行，绿灯亮是表示允许通行，黄灯亮则给行驶中的车辆有时间停在禁行线外。 显示采用LED光柱或数码管倒计时的方式。具有复位功能。具有紧急情况下的按钮功能，使只有东西or南北直行绿灯，左转和另一边全为红灯；同时设有夜间模式，东西、南北路口仅有黄灯闪烁。每个路口都采用2个七段共阳数码管倒计时（只有南北或东西直行方向有倒计时，左转为亮灯提示）。,0,YuanZhaoHui1999/trafficlight-based-on-Verilog,382679471,Verilog,trafficlight-based-on-Verilog,7328,3,2024-04-11 14:45:07+00:00,[],None
70,https://github.com/h1kari/wrapped_hoggephase_project.git,2021-06-09 05:46:27+00:00,,1,h1kari/wrapped_hoggephase_project,375239987,Verilog,wrapped_hoggephase_project,2461,3,2023-02-04 14:32:46+00:00,[],https://api.github.com/licenses/apache-2.0
71,https://github.com/Dreadrik/fpga-stopwatch.git,2021-06-29 14:10:33+00:00,A breadboard stopwatch implemented using an iCE40HX8K FPGA.,0,Dreadrik/fpga-stopwatch,381388002,Verilog,fpga-stopwatch,675,3,2023-11-26 06:17:14+00:00,[],https://api.github.com/licenses/mit
72,https://github.com/prasanthkumar333/apbtospi.git,2021-06-07 12:49:12+00:00,APB to SPI protocol Design and Verification,0,prasanthkumar333/apbtospi,374663800,Verilog,apbtospi,6,3,2024-03-21 01:34:17+00:00,[],None
73,https://github.com/Repeerc/SJTAG-to-JTAG-for-STMP3770.git,2021-07-02 14:24:13+00:00,A FPGA-based SJTAG to PJTAG debugger for STMP3770,0,Repeerc/SJTAG-to-JTAG-for-STMP3770,382370314,Verilog,SJTAG-to-JTAG-for-STMP3770,3327,3,2022-09-04 18:09:44+00:00,[],None
74,https://github.com/efabless/openfpga-2.git,2021-06-16 15:13:54+00:00,,2,efabless/openfpga-2,377538917,Verilog,openfpga-2,328252,3,2021-12-22 21:01:18+00:00,[],https://api.github.com/licenses/apache-2.0
75,https://github.com/scarletea/MipsCPU_multi_cycle.git,2021-06-21 02:25:07+00:00,QUT青岛理工大学|2019级计算机组成原理课程设计|无流水线多周期MIPS,1,scarletea/MipsCPU_multi_cycle,378784303,Verilog,MipsCPU_multi_cycle,3910,3,2023-07-10 02:15:33+00:00,[],https://api.github.com/licenses/apache-2.0
76,https://github.com/7asebat/DCNN-Accelerator-FC.git,2021-07-04 06:41:58+00:00,The fully-connected layer for an Image Processing ASIC.,1,7asebat/DCNN-Accelerator-FC,382782606,Verilog,DCNN-Accelerator-FC,46015,3,2023-04-25 11:41:32+00:00,[],None
77,https://github.com/microSharjeel/KNN.git,2021-06-24 15:26:20+00:00,Acceleration of KNN algorithm on FPGA. ,1,microSharjeel/KNN,379970372,Verilog,KNN,7118,3,2022-03-08 16:21:08+00:00,[],https://api.github.com/licenses/mit
78,https://github.com/jasonho610/FPGA_Biquad_Filter.git,2021-06-27 07:16:06+00:00,,0,jasonho610/FPGA_Biquad_Filter,380675928,Verilog,FPGA_Biquad_Filter,393,2,2023-12-18 14:30:40+00:00,[],None
79,https://github.com/wengshihao/RISC-V_CPU.git,2021-06-07 12:05:57+00:00,,0,wengshihao/RISC-V_CPU,374651491,Verilog,RISC-V_CPU,167,2,2024-03-01 04:47:48+00:00,[],None
80,https://github.com/redchenjs/hub75e_led_controller_max10.git,2021-06-23 13:58:52+00:00,(WIP....),0,redchenjs/hub75e_led_controller_max10,379621355,Verilog,hub75e_led_controller_max10,1407,2,2022-06-05 07:52:15+00:00,[],None
81,https://github.com/Ideasay/Course-AdvancedVLSI-EccDeisgn.git,2021-07-06 08:43:28+00:00,Error Correcting Code Engine with hamming and RS,2,Ideasay/Course-AdvancedVLSI-EccDeisgn,383400418,Verilog,Course-AdvancedVLSI-EccDeisgn,2332,2,2024-04-12 06:41:53+00:00,[],None
82,https://github.com/StrideZhou/riscv.git,2021-06-11 15:16:10+00:00,,1,StrideZhou/riscv,376064725,Verilog,riscv,293,2,2022-11-13 07:46:23+00:00,[],None
83,https://github.com/dchwebb/FPGA_Risc_V_WS2812.git,2021-06-15 20:32:40+00:00,Lattice FPGA running Risc V processor with custom addressible LED IP,0,dchwebb/FPGA_Risc_V_WS2812,377286895,Verilog,FPGA_Risc_V_WS2812,14268,2,2023-07-20 13:39:35+00:00,[],None
84,https://github.com/gautamshah6/Fruit-80-Cipher-Implementation-Verilog.git,2021-06-17 09:41:33+00:00,,0,gautamshah6/Fruit-80-Cipher-Implementation-Verilog,377779052,Verilog,Fruit-80-Cipher-Implementation-Verilog,2,2,2023-06-28 08:31:53+00:00,[],None
85,https://github.com/MiSTer-devel/Arcade-DottoriKun_MiSTer.git,2021-06-17 19:13:13+00:00,MiSTer arcade core for Sega's Dottori-Kun,3,MiSTer-devel/Arcade-DottoriKun_MiSTer,377937021,Verilog,Arcade-DottoriKun_MiSTer,2407,2,2023-09-12 05:59:42+00:00,[],None
86,https://github.com/cepdnaclk/e16-co502-RISCV-Pipeline-CPU-Implimentation-Group2.git,2021-07-01 12:26:38+00:00,This is the RISC-V ISA implementation by Group 2,3,cepdnaclk/e16-co502-RISCV-Pipeline-CPU-Implimentation-Group2,382025092,Verilog,e16-co502-RISCV-Pipeline-CPU-Implimentation-Group2,376,2,2022-06-27 04:00:25+00:00,[],https://api.github.com/licenses/mit
87,https://github.com/Bingogogo8/fpga_stopwatch.git,2021-06-27 01:18:45+00:00,这是基于FPGA设计的秒表，实现了正向倒向计数、切换秒表/毫秒计时秒表、记时等功能，并实现通过VGA在640*480的显示屏上显示,0,Bingogogo8/fpga_stopwatch,380626062,Verilog,fpga_stopwatch,1185,2,2023-12-28 13:40:20+00:00,[],None
88,https://github.com/Shrutisinha22/VOTING-MACHINE-USING-ZEDBOARD.git,2021-06-24 17:50:27+00:00,Designed a Simple Voting Machine using FPGAs with Verilog HDL and Vivado ON ZEDBOARD,0,Shrutisinha22/VOTING-MACHINE-USING-ZEDBOARD,380008399,Verilog,VOTING-MACHINE-USING-ZEDBOARD,168,2,2024-02-11 04:59:04+00:00,[],None
89,https://github.com/embelon/wb_hyperram.git,2021-06-08 14:32:12+00:00,,2,embelon/wb_hyperram,375040309,Verilog,wb_hyperram,5872,2,2023-03-22 12:44:45+00:00,[],https://api.github.com/licenses/apache-2.0
90,https://github.com/lrisora/FPGA-SHA256-UART.git,2021-06-22 12:02:34+00:00,,0,lrisora/FPGA-SHA256-UART,379254395,Verilog,FPGA-SHA256-UART,98,2,2022-12-30 08:57:12+00:00,[],None
91,https://github.com/while-TuRe/Single-cycle-CPU31.git,2021-07-10 09:32:35+00:00,,0,while-TuRe/Single-cycle-CPU31,384660872,Verilog,Single-cycle-CPU31,16,2,2023-12-29 03:30:19+00:00,[],None
92,https://github.com/Moeyulin/FPGAProject.git,2021-06-09 14:53:37+00:00,,0,Moeyulin/FPGAProject,375392548,Verilog,FPGAProject,66741,2,2021-11-08 11:35:44+00:00,[],None
93,https://github.com/davidlenfesty/arvp-ofdm-modem-basics.git,2021-06-19 20:19:23+00:00,Just a repo for going over Verilog concepts with team members and making some usable hardware as well.,2,davidlenfesty/arvp-ofdm-modem-basics,378498051,Verilog,arvp-ofdm-modem-basics,1,2,2023-06-11 08:37:31+00:00,[],None
94,https://github.com/gayangana/multi-core-processor.git,2021-06-18 09:39:53+00:00,,3,gayangana/multi-core-processor,378102714,Verilog,multi-core-processor,130,2,2022-09-30 18:54:41+00:00,[],None
95,https://github.com/SahanGura/single-core-fpga-matrix-multiplyer.git,2021-06-08 08:46:55+00:00,This is the first version of the processor design for a matrix multiplication,0,SahanGura/single-core-fpga-matrix-multiplyer,374943313,Verilog,single-core-fpga-matrix-multiplyer,9464,2,2021-07-23 03:48:44+00:00,[],None
96,https://github.com/no2fpga/no2muacm-bin.git,2021-06-26 14:23:38+00:00,Pre-built version of no2muacm,2,no2fpga/no2muacm-bin,380520560,Verilog,no2muacm-bin,259,2,2022-09-20 12:43:18+00:00,[],https://api.github.com/licenses/isc
97,https://github.com/Rajlee3107/HDLBits_Solution_Rajlee.git,2021-07-11 02:11:22+00:00,,0,Rajlee3107/HDLBits_Solution_Rajlee,384842340,Verilog,HDLBits_Solution_Rajlee,38,2,2021-08-14 16:23:53+00:00,[],None
98,https://github.com/sidhantp1906/binary-to-csd.git,2021-06-20 15:37:32+00:00,verilog code to covert binary number into canonical signed digit(csd),0,sidhantp1906/binary-to-csd,378680633,Verilog,binary-to-csd,282,2,2023-03-03 07:59:30+00:00,"['verilog', 'binary', 'csd']",https://api.github.com/licenses/apache-2.0
99,https://github.com/RTimothyEdwards/vsd_lvs_lab.git,2021-06-29 12:55:48+00:00,"Laboratory exercises for the VSD course on physical verification, part 5: LVS",5,RTimothyEdwards/vsd_lvs_lab,381364745,Verilog,vsd_lvs_lab,1689,2,2021-08-27 17:46:41+00:00,[],https://api.github.com/licenses/apache-2.0
100,https://github.com/dchwebb/propel_soc.git,2021-06-07 15:15:15+00:00,Test creating an SOC on a Lattice MachX03 FPGA using Propel,1,dchwebb/propel_soc,374710490,Verilog,propel_soc,17023,2,2023-07-20 15:18:13+00:00,[],None
101,https://github.com/Purdue-SoCET/AFTx06_Caravel.git,2021-06-12 22:01:00+00:00,,2,Purdue-SoCET/AFTx06_Caravel,376390684,Verilog,AFTx06_Caravel,385355,2,2023-05-26 21:06:45+00:00,[],https://api.github.com/licenses/apache-2.0
102,https://github.com/prateekmohan1/axi_ace.git,2021-06-25 01:56:13+00:00,This is the AXI ACE Protocol ,0,prateekmohan1/axi_ace,380097055,Verilog,axi_ace,1936,2,2023-01-17 18:47:48+00:00,[],None
103,https://github.com/shariethernet/Sequential-Binary-Multiplier---Design-and-Synthesis-with-Skywater-PDK.git,2021-06-17 20:43:04+00:00,This repository highlights the design procedure of a simple sequential binary multiplier manually using ASMD Charts and its RTL implementation in verilog and synthesis using Skywater130nm pdk. Refer Concept.pdf to look at the design steps,1,shariethernet/Sequential-Binary-Multiplier---Design-and-Synthesis-with-Skywater-PDK,377956200,Verilog,Sequential-Binary-Multiplier---Design-and-Synthesis-with-Skywater-PDK,6068,2,2021-08-27 06:10:43+00:00,[],None
104,https://github.com/ehao222/viterbe_decoder.git,2021-06-26 10:56:20+00:00,Viterbi decoder Using tracing back method,2,ehao222/viterbe_decoder,380479714,Verilog,viterbe_decoder,24,2,2024-02-28 09:48:02+00:00,[],None
105,https://github.com/vaibhav910/AHB-APB_BRIDGE.git,2021-06-11 04:25:53+00:00,,0,vaibhav910/AHB-APB_BRIDGE,375903674,Verilog,AHB-APB_BRIDGE,21733,2,2023-05-22 15:48:12+00:00,[],None
106,https://github.com/cepdnaclk/e16-co502-RISCV-pipeline-cpu-implementation-group04.git,2021-07-01 04:01:43+00:00,This is Advance Computer Architecture project of implementing Piplined Proccesor according to the RISC-V Instruction set,1,cepdnaclk/e16-co502-RISCV-pipeline-cpu-implementation-group04,381903944,Verilog,e16-co502-RISCV-pipeline-cpu-implementation-group04,2454,2,2023-09-10 03:06:28+00:00,[],None
107,https://github.com/bricktrooper/Turing.git,2021-06-24 00:10:43+00:00,"A functional ALU circuit implemented in Verilog.  Includes dedicated adder, subtractor, multiplier, divider, comparator, and shifter blocks.",0,bricktrooper/Turing,379758829,Verilog,Turing,14222,2,2024-02-23 00:14:47+00:00,[],None
108,https://github.com/mohammadalikakavand/DSD-final-project.git,2021-07-07 14:44:36+00:00,"Matrix Multiplier | Digital System Design Course Project, Spring 2021",0,mohammadalikakavand/DSD-final-project,383831510,Verilog,DSD-final-project,54,2,2023-11-12 14:34:53+00:00,[],None
109,https://github.com/dheeru-karanam/Convolution-Neural-Network.git,2021-06-10 11:28:14+00:00,Implementation of CNN on FPGA,0,dheeru-karanam/Convolution-Neural-Network,375673803,Verilog,Convolution-Neural-Network,9,2,2022-03-02 03:32:30+00:00,[],None
110,https://github.com/tlp19/MarsRover-returnSuccess3.git,2021-06-12 13:33:01+00:00,Year 2 Final Project - Mars Rover,1,tlp19/MarsRover-returnSuccess3,376297626,Verilog,MarsRover-returnSuccess3,44509,2,2023-01-27 23:02:40+00:00,[],None
111,https://github.com/hoglet67/SerialULA.git,2021-07-05 17:53:57+00:00,,0,hoglet67/SerialULA,383223797,Verilog,SerialULA,19,2,2022-05-26 02:36:24+00:00,[],None
112,https://github.com/nctu-ms07/Digital-Circuit-Design.git,2021-06-28 12:41:28+00:00,108下 數位電路設計 Digital Circuit Design 單智君,0,nctu-ms07/Digital-Circuit-Design,381027043,Verilog,Digital-Circuit-Design,3741,2,2023-06-22 00:05:19+00:00,"['nctu', 'nycu']",None
113,https://github.com/pranav-iitr/PID-controller.git,2021-07-03 07:15:19+00:00,,0,pranav-iitr/PID-controller,382551458,Verilog,PID-controller,27,2,2022-11-02 16:43:17+00:00,[],None
114,https://github.com/eliecudkowicz/Implementation-of-Hummingbird-Encryption-Algorithm.git,2021-06-27 12:25:08+00:00,"Implementation of Hummingbird Encryption Algorithm for Xilinx competition, June 2021",0,eliecudkowicz/Implementation-of-Hummingbird-Encryption-Algorithm,380733428,Verilog,Implementation-of-Hummingbird-Encryption-Algorithm,15135,2,2023-06-29 09:32:46+00:00,[],None
115,https://github.com/shariethernet/Controlpath-Datapath-ASMD-DesigntoSynthesiswithSkywater130.git,2021-06-16 15:55:03+00:00,This repository highlghts the manual design of datapath and control path with ASMD Chart and its comparison with the synthesis from behavior level RTL  and finally the synthesised design is mapped to the Skywater130nm standard cells and Netlist is generated ,1,shariethernet/Controlpath-Datapath-ASMD-DesigntoSynthesiswithSkywater130,377550987,Verilog,Controlpath-Datapath-ASMD-DesigntoSynthesiswithSkywater130,3951,2,2021-08-27 06:11:03+00:00,"['verilog', 'digital', 'computer-architecture']",https://api.github.com/licenses/mit
116,https://github.com/LynnL4/HDLBits.git,2021-06-11 07:31:09+00:00,HDLBits ,0,LynnL4/HDLBits,375941722,Verilog,HDLBits,14,2,2023-12-18 07:00:30+00:00,[],None
117,https://github.com/os-fpga/RTL_Benchmark.git,2021-06-30 07:06:57+00:00,This repository contains the benchmarks.,1,os-fpga/RTL_Benchmark,381608175,Verilog,RTL_Benchmark,539516,2,2024-04-05 07:40:59+00:00,['sw'],
118,https://github.com/heiallen/RISCV_CGRA.git,2021-06-15 17:23:42+00:00,,0,heiallen/RISCV_CGRA,377242190,Verilog,RISCV_CGRA,56,1,2023-02-04 04:08:44+00:00,[],None
119,https://github.com/aymhwd/RTLs-TBs.git,2021-07-07 00:53:00+00:00,Verilog/VHDL codes for different projects,0,aymhwd/RTLs-TBs,383634409,Verilog,RTLs-TBs,9,1,2022-05-03 21:42:32+00:00,[],None
120,https://github.com/NgoMinhNhan/LABs_of_AdvancedDigitalTechnique.git,2021-07-07 03:21:08+00:00,This is my project of Advanced Digital Techniques,0,NgoMinhNhan/LABs_of_AdvancedDigitalTechnique,383661031,Verilog,LABs_of_AdvancedDigitalTechnique,1162,1,2021-12-20 20:35:07+00:00,[],None
121,https://github.com/ManasMulpuri/MNIST-Fashion-Images-Detection---ES203-Digital-Systems-Project.git,2021-07-07 06:38:46+00:00,A Neural Network for classifying MNIST fashion images in Verilog using Single-Precision Floating Point representation,0,ManasMulpuri/MNIST-Fashion-Images-Detection---ES203-Digital-Systems-Project,383699253,Verilog,MNIST-Fashion-Images-Detection---ES203-Digital-Systems-Project,942,1,2023-01-20 04:12:03+00:00,[],None
122,https://github.com/forkaduck/stepper.git,2021-06-22 07:37:01+00:00,A RISC-V based uC written in Verilog and a hardware design that can be used with it.,0,forkaduck/stepper,379182689,Verilog,stepper,17273,1,2022-05-12 13:04:40+00:00,[],https://api.github.com/licenses/gpl-3.0
123,https://github.com/Vishvas286/sparse-dense.git,2021-07-06 04:46:11+00:00,,0,Vishvas286/sparse-dense,383342112,Verilog,sparse-dense,6,1,2022-01-20 14:42:35+00:00,[],None
124,https://github.com/base-band/hardware.git,2021-07-05 23:58:05+00:00,,1,base-band/hardware,383290695,Verilog,hardware,731,1,2022-06-01 04:29:54+00:00,[],https://api.github.com/licenses/bsd-3-clause
125,https://github.com/KhanhNguyen1308/I2C.git,2021-06-17 09:59:41+00:00,,0,KhanhNguyen1308/I2C,377783975,Verilog,I2C,16,1,2023-06-11 15:02:39+00:00,[],None
126,https://github.com/3anWater/basic-verilog.git,2021-07-06 08:22:27+00:00,verilog learning,0,3anWater/basic-verilog,383394488,Verilog,basic-verilog,13397,1,2022-01-09 08:38:39+00:00,[],None
127,https://github.com/zyad19975/Pass-Keeper.git,2021-07-09 12:43:51+00:00,An implementation of chrome password manger using verilog,0,zyad19975/Pass-Keeper,384434154,Verilog,Pass-Keeper,25507,1,2022-04-15 23:20:52+00:00,[],None
128,https://github.com/jayjunlee/AM04-MIPS-CPU.git,2021-06-23 02:49:33+00:00,A synthesizable 32-bit RISC microprocessor designed based on MIPS I ISA that uses a memory-mapped bus to access system memory and various peripherals that can be integrated on to an FPGA.,0,jayjunlee/AM04-MIPS-CPU,379460511,Verilog,AM04-MIPS-CPU,9350,1,2022-04-12 15:52:23+00:00,"['verilog', 'fpga', 'mips']",None
129,https://github.com/nh-turja/CSE-460-Lab-Session-Codes.git,2021-07-03 08:05:36+00:00,"These codes are used in the lab session of CSE 460: VLSI Design at the department of CSE, BRAC University. ",0,nh-turja/CSE-460-Lab-Session-Codes,382560676,Verilog,CSE-460-Lab-Session-Codes,15993,1,2021-08-11 02:09:55+00:00,[],None
130,https://github.com/SmirnuX/SHA256_verilog.git,2021-06-08 20:01:10+00:00,SHA256 realisation on Verilog.,0,SmirnuX/SHA256_verilog,375130206,Verilog,SHA256_verilog,5,1,2021-08-22 14:30:54+00:00,[],None
131,https://github.com/mattvenn/test-template.git,2021-06-08 08:55:20+00:00,,0,mattvenn/test-template,374945685,Verilog,test-template,8,1,2022-03-17 00:19:20+00:00,[],https://api.github.com/licenses/apache-2.0
132,https://github.com/AlexThaFlex/LSDI_Assembly.git,2021-06-22 18:31:16+00:00,MIPS Assembly,0,AlexThaFlex/LSDI_Assembly,379366170,Verilog,LSDI_Assembly,49,1,2021-06-22 18:44:12+00:00,[],None
133,https://github.com/megharaj123-sh/INSTRUCTION-DECODE.git,2021-06-26 06:24:20+00:00,,0,megharaj123-sh/INSTRUCTION-DECODE,380430502,Verilog,INSTRUCTION-DECODE,34,1,2021-06-26 06:36:17+00:00,[],None
134,https://github.com/davimoreno/quadrature_oscillator.git,2021-06-28 18:15:48+00:00,Low Cost FPGA Quadrature Oscillator,0,davimoreno/quadrature_oscillator,381123760,Verilog,quadrature_oscillator,230,1,2024-01-29 15:32:46+00:00,"['fpga', 'fpga-programming', 'oscillator', 'digital-signal-processing', 'verilog', 'hardware']",https://api.github.com/licenses/mit
135,https://github.com/Xie-Minghui/FPGA_cpu.git,2021-06-20 03:12:54+00:00,硬件综合设计-在Xilinx开发板上使用Virilog实现一个四级流水CPU添加了axi。,0,Xie-Minghui/FPGA_cpu,378547688,Verilog,FPGA_cpu,1329,1,2023-01-04 12:26:36+00:00,[],None
136,https://github.com/HeHTao-3381/tinyCPU.git,2021-06-20 09:09:13+00:00,2021.大三下 计算机体系结构上机作业,0,HeHTao-3381/tinyCPU,378602974,Verilog,tinyCPU,2621,1,2023-06-20 02:22:16+00:00,[],None
137,https://github.com/LakshmiAnanyaVemu/Car-Parking-System-Verilog.git,2021-07-05 06:50:00+00:00,,0,LakshmiAnanyaVemu/Car-Parking-System-Verilog,383042501,Verilog,Car-Parking-System-Verilog,1052,1,2021-08-08 18:48:33+00:00,[],None
138,https://github.com/xuezhen22/oscpu-framework.git,2021-07-06 02:53:01+00:00,A Verilator-based demo.,26,xuezhen22/oscpu-framework,383320987,,oscpu-framework,265,1,2023-05-16 14:18:01+00:00,[],None
139,https://github.com/ProxyPlayerHD/65CE816-Softcore.git,2021-06-14 15:43:30+00:00,,1,ProxyPlayerHD/65CE816-Softcore,376875729,Verilog,65CE816-Softcore,18765,1,2022-08-28 16:32:05+00:00,[],https://api.github.com/licenses/gpl-3.0
140,https://github.com/daneshvar-amrollahi/FNN-Verilog.git,2021-06-18 14:55:47+00:00,A Feed Forward Neural Network in Verilog. ,0,daneshvar-amrollahi/FNN-Verilog,378183883,Verilog,FNN-Verilog,2827,1,2022-01-19 23:45:12+00:00,[],None
141,https://github.com/sidhantp1906/csd-multiplier-using-booth-technique.git,2021-06-20 15:49:15+00:00,csd multiplier using booth technique in which i have converted binary multiplier into csd and multiplicand is binary.,0,sidhantp1906/csd-multiplier-using-booth-technique,378683151,Verilog,csd-multiplier-using-booth-technique,4,1,2023-05-04 03:15:49+00:00,"['verilog', 'booths-algorithm', 'booth-multiplier', 'csd']",https://api.github.com/licenses/mit
142,https://github.com/subashchandran420/RISC-V_MIPS-32.git,2021-06-10 15:46:39+00:00,Desiging a basic risc processor in verilog (HDL) using behavioral modeling.,0,subashchandran420/RISC-V_MIPS-32,375751129,Verilog,RISC-V_MIPS-32,2,1,2021-06-10 16:04:26+00:00,[],None
143,https://github.com/NeginKhalifat/MIPS.git,2021-06-16 08:53:06+00:00,A pipelined implementation of a MIPS processor with cache,0,NeginKhalifat/MIPS,377431833,Verilog,MIPS,347,1,2021-08-28 08:49:42+00:00,[],None
144,https://github.com/sgwc-mips/mycpu_verify.git,2021-07-04 03:22:14+00:00,,0,sgwc-mips/mycpu_verify,382753104,Verilog,mycpu_verify,18,1,2023-05-21 09:24:44+00:00,[],None
145,https://github.com/ddribin/go-board-fun.git,2021-07-10 04:23:36+00:00,Fun Projects for the Nandland Go Board.,0,ddribin/go-board-fun,384608953,Verilog,go-board-fun,94,1,2023-05-28 20:30:03+00:00,[],https://api.github.com/licenses/mit
146,https://github.com/shreejnanesh/analog_to_digital_converter.git,2021-06-27 18:36:14+00:00,"The process of converting an analog voltage into an equivalent digital signal is known as Analog to Digital Conversion. The output depends upon the coding scheme followed in the ADC circuit. For example, Analog values may convert to Gray code, excess 3 code, and so on. The resolution, Speed, and Power Consumption are the three parameters of ADC.",0,shreejnanesh/analog_to_digital_converter,380813024,Verilog,analog_to_digital_converter,14174,1,2022-10-07 07:11:52+00:00,[],https://api.github.com/licenses/afl-3.0
147,https://github.com/hmgvelas/UEx_picosoc.git,2021-06-28 07:18:38+00:00,"Modifications of the ""picosoc"" picorv32 based SoC for my classes of DSH",1,hmgvelas/UEx_picosoc,380941319,Verilog,UEx_picosoc,5279,1,2021-07-06 08:56:33+00:00,[],None
148,https://github.com/Luca-Dalmasso/LL_contest.git,2021-06-10 16:12:17+00:00,"Optimisation procedure written in tcl for (Area, Delay, Power) with the usage of Dual-Vth CMOS technology within Synopsys DC and PT",1,Luca-Dalmasso/LL_contest,375758492,Verilog,LL_contest,142,1,2024-03-07 03:02:04+00:00,"['asic-design', 'cmos', 'digital-electronics', 'low-power', 'synopsys', 'tcl', 'vhdl']",None
149,https://github.com/jialin-sun2019/Learn_Verilog.git,2021-07-05 10:46:58+00:00,"Hello,I like Verilog!",0,jialin-sun2019/Learn_Verilog,383106693,Verilog,Learn_Verilog,7,1,2021-07-10 00:36:00+00:00,[],None
150,https://github.com/pathange-s/AES.git,2021-07-05 17:00:57+00:00,,0,pathange-s/AES,383210614,Verilog,AES,43175,1,2022-04-23 11:47:58+00:00,[],None
151,https://github.com/DehitTrivedi/SIMD_ComputerArchietecture.git,2021-06-07 03:09:30+00:00,The aim of this project was to build a SIMD processor using Verilog in Quartus and analyse the simulation results. ,0,DehitTrivedi/SIMD_ComputerArchietecture,374519570,Verilog,SIMD_ComputerArchietecture,4179,1,2022-07-08 10:16:47+00:00,[],None
152,https://github.com/justin78910/HardwareAccelerator.git,2021-06-14 00:28:09+00:00,Matrix Transpose using Hardware accelerator,0,justin78910/HardwareAccelerator,376666835,Verilog,HardwareAccelerator,122,1,2022-01-20 14:48:01+00:00,[],None
153,https://github.com/BugMaker-Boyan/CS202-CPU-Project.git,2021-06-11 14:50:38+00:00,,0,BugMaker-Boyan/CS202-CPU-Project,376057211,Verilog,CS202-CPU-Project,14,1,2022-02-16 12:30:20+00:00,[],None
154,https://github.com/YunXiuRZ/8Bit_CPU_design.git,2021-06-15 05:26:19+00:00,Designing 8 Bit CPU by verilog,0,YunXiuRZ/8Bit_CPU_design,377045975,Verilog,8Bit_CPU_design,253,1,2021-07-22 01:44:40+00:00,[],None
155,https://github.com/MartianSheep/CryptoProject_LWC.git,2021-06-07 07:44:09+00:00,,1,MartianSheep/CryptoProject_LWC,374578420,Verilog,CryptoProject_LWC,6817,1,2023-06-22 20:14:46+00:00,[],None
156,https://github.com/pratikkaul2011/hack-using-verilog.git,2021-06-23 15:04:54+00:00,A hack( Harvard architecture CPU) 16 bit implementation in Verilog HDL.,0,pratikkaul2011/hack-using-verilog,379642172,Verilog,hack-using-verilog,5,1,2022-10-17 08:40:31+00:00,[],None
157,https://github.com/Ideasay/Course-VLSI-ConfigurableFIRFilter.git,2021-06-21 14:36:58+00:00,,0,Ideasay/Course-VLSI-ConfigurableFIRFilter,378961664,Verilog,Course-VLSI-ConfigurableFIRFilter,111,1,2022-05-20 13:26:55+00:00,[],None
158,https://github.com/b-garbacz/Neokeon128.git,2021-06-19 14:26:55+00:00,Implementation of the neokeon block cipher,0,b-garbacz/Neokeon128,378431319,Verilog,Neokeon128,16,1,2023-03-25 16:22:30+00:00,"['fpga', 'fpga-programming', 'ciphering', 'verilog-hdl', 'verilog', 'verilog-project', 'block-cipher']",None
159,https://github.com/jeff999955/DSDL_2021Spring.git,2021-07-02 09:59:37+00:00,,0,jeff999955/DSDL_2021Spring,382304225,Verilog,DSDL_2021Spring,266,1,2022-04-30 18:16:01+00:00,[],None
160,https://github.com/dheeru-karanam/Verilog-Snipets.git,2021-07-02 06:58:32+00:00,Verilog Code snipets ,0,dheeru-karanam/Verilog-Snipets,382258956,Verilog,Verilog-Snipets,150,1,2021-07-02 07:01:37+00:00,[],None
161,https://github.com/hubertmucha/Warblade.git,2021-07-06 15:11:38+00:00,,0,hubertmucha/Warblade,383510790,Verilog,Warblade,11159,1,2021-12-16 09:07:04+00:00,[],None
162,https://github.com/mikenie/FPGA-Key.git,2021-06-17 03:52:12+00:00,状态机实现简单按键消抖程序,0,mikenie/FPGA-Key,377697954,Verilog,FPGA-Key,34,1,2022-03-10 02:25:02+00:00,"['fpga', 'key']",None
163,https://github.com/Nicholas1812216/FPGA_FIR_lopass_filter.git,2021-06-07 01:05:24+00:00,"Matlab files, HDL implementation, and simulation",0,Nicholas1812216/FPGA_FIR_lopass_filter,374497599,Verilog,FPGA_FIR_lopass_filter,2356,1,2022-07-20 19:43:59+00:00,[],None
164,https://github.com/PallAxelSigurdsson/MPC-Platform.git,2021-06-23 17:25:42+00:00,Master thesis work at KTH - A predictable multi-core platform using Qsys,0,PallAxelSigurdsson/MPC-Platform,379680374,Verilog,MPC-Platform,13061,1,2021-09-06 01:52:19+00:00,[],None
165,https://github.com/Alighorab/single-cycle-MIPS-machine.git,2021-06-25 23:53:52+00:00,,0,Alighorab/single-cycle-MIPS-machine,380377221,Verilog,single-cycle-MIPS-machine,194,1,2021-12-14 12:36:52+00:00,[],None
166,https://github.com/leoleoasd/mips_cpu.git,2021-07-01 13:40:40+00:00,My MicroSystem Course Design.,0,leoleoasd/mips_cpu,382045927,Verilog,mips_cpu,156,1,2022-05-10 08:05:44+00:00,[],None
167,https://github.com/YC-Vertex/ComputerOrganization-Assignments.git,2021-06-21 18:38:08+00:00,加法器、乘法器、前导零计数器，清华大学2021春计算机原理与设计课程作业,3,YC-Vertex/ComputerOrganization-Assignments,379029688,Verilog,ComputerOrganization-Assignments,10,1,2024-02-19 08:08:42+00:00,[],None
168,https://github.com/karentp/TransactionLayerPCIe.git,2021-06-28 10:21:08+00:00,Proyecto #2 de Circuitos Digitales II- UCR,0,karentp/TransactionLayerPCIe,380990230,Verilog,TransactionLayerPCIe,4934,1,2022-11-14 12:49:44+00:00,[],None
169,https://github.com/bunnyverma29/verilog-image.git,2021-07-09 14:26:00+00:00,,0,bunnyverma29/verilog-image,384461286,Verilog,verilog-image,3149,1,2022-06-21 19:51:40+00:00,[],None
170,https://github.com/HKpro2090/Basic-Calculator-implementation-using-Verilog.git,2021-07-11 12:36:08+00:00,"The aim of the project is to create a basic calculator which takes two single-digit numbers (each is a single-digit decimal base number entered by user via switches)as input and can perform unsigned addition, subtraction, multiplication and division (only quotient) based on user selection and display the output decimal number (two digits) to the user (sign is displayed for subtraction only).",2,HKpro2090/Basic-Calculator-implementation-using-Verilog,384943950,Verilog,Basic-Calculator-implementation-using-Verilog,3362,1,2023-11-13 05:44:33+00:00,[],None
171,https://github.com/minhna1112/FFT-Radix4-16Point-Verilog.git,2021-06-16 18:44:35+00:00,Class project - Digital Design,0,minhna1112/FFT-Radix4-16Point-Verilog,377595631,Verilog,FFT-Radix4-16Point-Verilog,28,1,2022-01-04 08:07:34+00:00,"['fft', 'verilog', 'radix-4']",None
172,https://github.com/base-band/bladerf.git,2021-07-05 23:57:38+00:00,,0,base-band/bladerf,383290627,Verilog,bladerf,35,1,2022-06-01 04:30:15+00:00,[],None
173,https://github.com/DRubioG/VLIW.git,2021-06-10 20:23:37+00:00,VLIW book example,0,DRubioG/VLIW,375821730,Verilog,VLIW,17,1,2024-04-12 10:05:02+00:00,[],None
174,https://github.com/MasoudHeidary/FPGA-Verilog-Serial-Communication.git,2021-06-16 10:02:02+00:00,,0,MasoudHeidary/FPGA-Verilog-Serial-Communication,377450891,Verilog,FPGA-Verilog-Serial-Communication,7,1,2022-02-27 11:00:00+00:00,"['verilog', 'fpga', 'serial-communication']",https://api.github.com/licenses/mit
175,https://github.com/DilankaLaknath/Multi_Core_FPGA_Project.git,2021-06-27 17:33:03+00:00,Matrix Multiplication ,1,DilankaLaknath/Multi_Core_FPGA_Project,380801082,Verilog,Multi_Core_FPGA_Project,3825,1,2023-09-24 13:14:09+00:00,[],None
176,https://github.com/Jeff-Ray/Matrix-keyboard.git,2021-06-17 06:32:03+00:00,Verilog,1,Jeff-Ray/Matrix-keyboard,377728780,Verilog,Matrix-keyboard,739,1,2022-04-02 02:09:30+00:00,[],None
177,https://github.com/mr-gaurav/32-BIT_RISC_Processor.git,2021-06-20 17:55:47+00:00,"Designing a 32-bit RISC architecture-based processor with 5 Stage Pipeline stages. Implemented R-type, I-type, Load/Store, Branch, instruction on behavioural level and simulate Verilog code on Xilinx vivado for ALU operations.",0,mr-gaurav/32-BIT_RISC_Processor,378708247,Verilog,32-BIT_RISC_Processor,5,1,2021-06-20 18:11:25+00:00,[],None
178,https://github.com/arsalanyavari/UART-protocol.git,2021-07-10 12:38:38+00:00,UART protocol implementation using verilog (4th FPGA course project),0,arsalanyavari/UART-protocol,384694617,Verilog,UART-protocol,9,1,2023-01-23 02:34:30+00:00,[],None
179,https://github.com/mfkiwl/Verilog-Program-Counter-and-Shifter.git,2021-07-04 05:28:14+00:00,PC(Program counter) and SHIFTER(arithmatic and logical),0,mfkiwl/Verilog-Program-Counter-and-Shifter,382770769,,Verilog-Program-Counter-and-Shifter,712,1,2023-04-17 22:52:17+00:00,[],https://api.github.com/licenses/mit
180,https://github.com/makerinchina-iot/syn_rom.git,2021-06-08 13:18:08+00:00,A ROM module can be synthesis,0,makerinchina-iot/syn_rom,375015787,Verilog,syn_rom,19,1,2021-08-06 00:16:29+00:00,[],https://api.github.com/licenses/gpl-3.0
181,https://github.com/trung-pham-dinh/DigitalClock-FPGA.git,2021-06-10 10:16:12+00:00,Verilog on DE2I150 board,0,trung-pham-dinh/DigitalClock-FPGA,375655652,Verilog,DigitalClock-FPGA,9237,1,2021-12-07 14:42:08+00:00,[],None
182,https://github.com/Bragadeeshan/8-bit-CPU.git,2021-07-01 18:11:01+00:00,8-bit single-cycle CPU based on Harvard architecture which uses a 32-bit instruction word. This CPU is able to execute most algorithms.,0,Bragadeeshan/8-bit-CPU,382118975,Verilog,8-bit-CPU,12,1,2023-03-21 22:30:58+00:00,[],None
183,https://github.com/SoujanyaSR/Tomasulo-Out-of-order-Processor.git,2021-06-30 15:58:45+00:00,,0,SoujanyaSR/Tomasulo-Out-of-order-Processor,381757812,Verilog,Tomasulo-Out-of-order-Processor,11,1,2024-03-21 23:50:38+00:00,[],None
184,https://github.com/williamtien23/FPGA-DE10_LITE-I2C_Master.git,2021-06-09 00:18:59+00:00,,0,williamtien23/FPGA-DE10_LITE-I2C_Master,375178463,Verilog,FPGA-DE10_LITE-I2C_Master,4,1,2023-06-11 15:26:18+00:00,[],None
185,https://github.com/yhs0602/verilog.git,2021-06-10 11:37:33+00:00,,0,yhs0602/verilog,375676044,Verilog,verilog,10246,1,2022-01-02 01:30:22+00:00,[],None
186,https://github.com/sa-patel/EECS151_FPGA_Processor.git,2021-06-18 06:54:43+00:00,Turn a Xilinx FPGA into a 100 Mhz RISC-V compliant processor. Additional graphics acceleration and logic modules included,0,sa-patel/EECS151_FPGA_Processor,378061363,Verilog,EECS151_FPGA_Processor,306,1,2021-08-27 06:00:23+00:00,[],None
187,https://github.com/MarcosSevert/VerilogGalileoX.git,2021-06-06 22:23:34+00:00,All codes created during the development of the GalileoX-CElectronica002x course.,0,MarcosSevert/VerilogGalileoX,374475717,Verilog,VerilogGalileoX,15,1,2021-07-03 20:07:04+00:00,[],None
188,https://github.com/pravinism-007/DES_ENCRYPTION_IP.git,2021-06-24 14:31:13+00:00,RTL design of Hardwired DES encryption circuit,0,pravinism-007/DES_ENCRYPTION_IP,379953816,Verilog,DES_ENCRYPTION_IP,11,1,2021-06-24 15:33:23+00:00,[],None
189,https://github.com/JackeyLove1/TinyCPU.git,2021-07-08 05:46:42+00:00,Design of a Simple 8-bit RISC CPU in Verilog,0,JackeyLove1/TinyCPU,384014569,Verilog,TinyCPU,8,1,2021-07-13 12:35:43+00:00,[],https://api.github.com/licenses/mit
190,https://github.com/dchwebb/WS2812_IP.git,2021-06-11 13:15:37+00:00,Lattice IP Package for WS2812 controller module,0,dchwebb/WS2812_IP,376030749,Verilog,WS2812_IP,41,1,2023-07-20 15:18:12+00:00,[],None
191,https://github.com/iremnurcolak/UART.git,2021-06-15 10:02:56+00:00,UART protocol implementation in Verilog.,0,iremnurcolak/UART,377116932,Verilog,UART,779,1,2021-06-21 10:47:56+00:00,[],None
192,https://github.com/microSharjeel/KNN_Final.git,2021-07-09 08:11:49+00:00,,0,microSharjeel/KNN_Final,384368282,Verilog,KNN_Final,7139,1,2021-07-14 21:22:47+00:00,[],https://api.github.com/licenses/mit
193,https://github.com/deoregaurav92/3-Stage-Pipelined-Half-precision-Floating-Point-Adder.git,2021-06-27 05:32:31+00:00,,0,deoregaurav92/3-Stage-Pipelined-Half-precision-Floating-Point-Adder,380659124,Verilog,3-Stage-Pipelined-Half-precision-Floating-Point-Adder,455,1,2021-11-24 22:00:17+00:00,[],None
194,https://github.com/angithub34530/AN_VIPUsingFPGA.git,2021-06-28 12:34:30+00:00,,1,angithub34530/AN_VIPUsingFPGA,381025046,Verilog,AN_VIPUsingFPGA,11798,1,2021-06-28 20:09:53+00:00,[],https://api.github.com/licenses/mit
195,https://github.com/akangakang/Digital-Component-Design.git,2021-06-25 14:05:56+00:00,2020-2021-2 SE358 🎫数字系统设计实验 🔢FPGA 💕CLOCK ❤单周期CPU 🌹流水线CPU,0,akangakang/Digital-Component-Design,380256939,Verilog,Digital-Component-Design,71314,1,2022-04-24 14:24:06+00:00,[],None
196,https://github.com/Jamboii/vlsi-projects.git,2021-06-23 10:42:54+00:00,Projects and assignments pertaining to VLSI,0,Jamboii/vlsi-projects,379568460,Verilog,vlsi-projects,1053,1,2022-05-23 04:17:36+00:00,[],https://api.github.com/licenses/mit
197,https://github.com/megharaj123-sh/INSTRUCTION-FETCH.git,2021-06-26 06:16:43+00:00,in this file we wrote the verilog code for instruction fectch part,0,megharaj123-sh/INSTRUCTION-FETCH,380429280,Verilog,INSTRUCTION-FETCH,21,1,2021-06-26 06:22:10+00:00,[],None
198,https://github.com/megharaj123-sh/ALU.git,2021-06-26 06:05:10+00:00,,0,megharaj123-sh/ALU,380427324,Verilog,ALU,69,1,2021-06-26 06:22:13+00:00,[],None
199,https://github.com/ahmadrmirzaei/ARM32-CACHE.git,2021-06-24 22:21:12+00:00,,0,ahmadrmirzaei/ARM32-CACHE,380063495,Verilog,ARM32-CACHE,8864,1,2023-07-15 11:27:53+00:00,[],None
200,https://github.com/zyp-git01/course_risc-v.git,2021-06-22 09:55:04+00:00,,0,zyp-git01/course_risc-v,379220785,Verilog,course_risc-v,16448,1,2023-05-10 12:58:09+00:00,[],None
201,https://github.com/amir-pma/Arm-Processor.git,2021-07-09 16:23:59+00:00,,0,amir-pma/Arm-Processor,384492926,Verilog,Arm-Processor,17,1,2021-12-22 17:30:21+00:00,[],None
202,https://github.com/JoaoGMSF/Microwave.git,2021-06-08 15:46:55+00:00,Um sistema de microondas implementado em verilog para a cadeira de Sistemas Digitais,0,JoaoGMSF/Microwave,375063997,Verilog,Microwave,4220,1,2021-06-09 01:00:55+00:00,[],None
203,https://github.com/codamin/ARM-Processor-CALab.git,2021-06-13 12:59:33+00:00,,0,codamin/ARM-Processor-CALab,376544692,,ARM-Processor-CALab,588,1,2022-03-14 22:34:30+00:00,[],None
204,https://github.com/ZLFan/EDA-Course.git,2021-06-17 09:03:07+00:00,EDA课程上写的乱七八糟的一堆代码，有的能成功运行，有的不能。,0,ZLFan/EDA-Course,377768348,Verilog,EDA-Course,185563,1,2024-03-06 07:31:22+00:00,[],None
205,https://github.com/acada-sjtu/LSTM-IF-detection.git,2021-06-26 03:31:05+00:00,,0,acada-sjtu/LSTM-IF-detection,380405184,Verilog,LSTM-IF-detection,11828,1,2021-06-27 07:26:33+00:00,[],None
206,https://github.com/Prokuma/Ayumu.git,2021-06-08 10:40:06+00:00,AYUMU is a simple 8-bit CPU,0,Prokuma/Ayumu,374971961,Verilog,Ayumu,6,1,2022-03-11 08:31:32+00:00,[],None
207,https://github.com/BStar14/single-cycle-mips-processor-eee3530.git,2021-06-17 14:57:52+00:00,Implementation and Simulation of Single Cycle MIPS Processor Project 2021-1 Course EEE3530 Computer Architecture Yonsei University,1,BStar14/single-cycle-mips-processor-eee3530,377868606,Verilog,single-cycle-mips-processor-eee3530,7346,1,2022-02-21 14:54:51+00:00,[],None
208,https://github.com/mfkiwl/Verilog-Register-File-and-ALU.git,2021-07-04 05:27:27+00:00,RF(register file) and ALU ,0,mfkiwl/Verilog-Register-File-and-ALU,382770658,,Verilog-Register-File-and-ALU,705,1,2023-04-17 22:52:15+00:00,[],https://api.github.com/licenses/mit
209,https://github.com/abhigy/Tic-Tac-Toe-.git,2021-07-01 07:12:00+00:00,,0,abhigy/Tic-Tac-Toe-,381942718,Verilog,Tic-Tac-Toe-,10,1,2023-07-13 18:10:37+00:00,[],None
210,https://github.com/y38y38/floor_log2.git,2021-06-06 04:37:59+00:00,,0,y38y38/floor_log2,374268478,Verilog,floor_log2,1,1,2023-11-27 08:11:36+00:00,[],None
211,https://github.com/RoyArch/buptsee_verilog_random.git,2021-06-09 06:41:47+00:00,北邮电子院数电实验MAXII随机数生成 用ADC采集噪声得到真随机数,0,RoyArch/buptsee_verilog_random,375252986,Verilog,buptsee_verilog_random,5,1,2023-11-29 13:02:51+00:00,[],None
212,https://github.com/PrashanthHC16/Approximate-Multipliers.git,2021-06-25 20:47:30+00:00,Approximate multipliers of 8bit and 16bit ,0,PrashanthHC16/Approximate-Multipliers,380350637,Verilog,Approximate-Multipliers,313674,1,2024-02-21 15:11:45+00:00,"['verilog', 'vhdl', 'rtl', 'vlsi-circuits', 'approximate-circuits']",https://api.github.com/licenses/mit
213,https://github.com/Vishal1128/Implementation_of_32_bit_Multipliers_on_FPGA.git,2021-06-06 03:44:35+00:00,,0,Vishal1128/Implementation_of_32_bit_Multipliers_on_FPGA,374261240,Verilog,Implementation_of_32_bit_Multipliers_on_FPGA,463,1,2023-10-14 14:35:26+00:00,[],None
214,https://github.com/dec880126/Verilog-Practice.git,2021-06-18 08:03:09+00:00,HDLBits,0,dec880126/Verilog-Practice,378078112,Verilog,Verilog-Practice,20,1,2021-06-19 10:10:37+00:00,[],None
215,https://github.com/Liror/ECEG.git,2021-06-17 19:20:37+00:00,Small research unrolled verilog implementation of an Elliptic Curve ElGamal cryptosystem,0,Liror/ECEG,377938767,Verilog,ECEG,145,1,2022-05-04 11:50:24+00:00,[],None
216,https://github.com/siglabsoss/datapath.git,2021-06-13 22:26:38+00:00,,0,siglabsoss/datapath,376651663,Verilog,datapath,148,1,2022-06-01 04:38:35+00:00,[],https://api.github.com/licenses/bsd-3-clause
217,https://github.com/GVictorsd/riscie.git,2021-07-08 15:14:37+00:00,"A five stage piplined, RISCV processor written in Verilog HDL",0,GVictorsd/riscie,384165749,Verilog,riscie,16,1,2022-07-25 11:24:48+00:00,[],https://api.github.com/licenses/mit
218,https://github.com/mahimarrao/CAN_Bus_verilog-.git,2021-07-03 23:15:38+00:00,,0,mahimarrao/CAN_Bus_verilog-,382725057,Verilog,CAN_Bus_verilog-,2,1,2023-02-13 12:39:32+00:00,[],None
219,https://github.com/NgoMinhNhan/FloatingPoint_IEEE754.git,2021-07-07 02:25:50+00:00,Project about calculate the floating point number 32bit ,1,NgoMinhNhan/FloatingPoint_IEEE754,383650895,Verilog,FloatingPoint_IEEE754,6117,1,2021-12-20 20:35:06+00:00,[],None
220,https://github.com/Chair-for-Security-Engineering/Low-Latency_Keccak.git,2021-06-21 14:20:38+00:00,,0,Chair-for-Security-Engineering/Low-Latency_Keccak,378956414,Verilog,Low-Latency_Keccak,13,1,2023-04-17 02:34:36+00:00,[],None
221,https://github.com/Vieloooo/miniRv-1-CPU.git,2021-06-28 01:07:10+00:00,CPU in miniRV-1,1,Vieloooo/miniRv-1-CPU,380870318,Verilog,miniRv-1-CPU,88,1,2023-11-11 14:29:06+00:00,[],https://api.github.com/licenses/gpl-3.0
222,https://github.com/singhvishvendra700/Simple-Processor.git,2021-06-18 15:14:19+00:00,A Simple processor developed using Verilog.,0,singhvishvendra700/Simple-Processor,378189015,Verilog,Simple-Processor,760,1,2021-06-24 18:58:26+00:00,[],https://api.github.com/licenses/mit
223,https://github.com/pouyanhessabi/LD-final-project.git,2021-06-21 08:18:11+00:00,Final project of LD(Logic Design) course in Amirkabir University Of Technology.,0,pouyanhessabi/LD-final-project,378857258,Verilog,LD-final-project,245,1,2023-11-07 07:56:07+00:00,[],None
224,https://github.com/LoialOtter/RISCy-ICE.git,2021-06-16 05:09:07+00:00,Basic RISC-V based system set up for use in ICE40UP5K FPGAs,1,LoialOtter/RISCy-ICE,377377508,Verilog,RISCy-ICE,106,1,2021-08-14 20:35:13+00:00,[],https://api.github.com/licenses/apache-2.0
225,https://github.com/sahandzou/DESVerilog.git,2021-06-14 11:41:44+00:00,,0,sahandzou/DESVerilog,376802685,Verilog,DESVerilog,38,1,2022-05-14 09:25:05+00:00,[],None
226,https://github.com/shrubbroom/CHORD_wujian100_impl.git,2021-06-23 17:11:27+00:00,,0,shrubbroom/CHORD_wujian100_impl,379676675,Verilog,CHORD_wujian100_impl,207696,1,2023-04-13 16:37:03+00:00,[],https://api.github.com/licenses/mit
227,https://github.com/hchchiu/ICCAD2021_ProblemA.git,2021-06-29 07:33:48+00:00,,0,hchchiu/ICCAD2021_ProblemA,381278387,Verilog,ICCAD2021_ProblemA,27975,1,2023-04-21 17:59:04+00:00,[],None
228,https://github.com/ChetanPrakash057/Implementation-of-FIFO-Memory.git,2021-07-02 08:05:48+00:00,"Designed 16 stages and 8-bit data-width FIFO memory using Verilog HDL. First-in, first-out (FIFO) memory chips are used in buffering applications between devices that operate at different speeds or in applications where data must be stored temporarily for further processing.",0,ChetanPrakash057/Implementation-of-FIFO-Memory,382275687,Verilog,Implementation-of-FIFO-Memory,448,1,2021-07-02 08:06:57+00:00,[],https://api.github.com/licenses/gpl-3.0
229,https://github.com/david20571015/Programmable-Logic-System-Design.git,2021-06-30 18:42:12+00:00,2021 Spring @ NYCU,0,david20571015/Programmable-Logic-System-Design,381801314,Verilog,Programmable-Logic-System-Design,19,1,2023-01-25 17:52:57+00:00,['course'],None
230,https://github.com/yangzhch6/Multi-cycle-CPU.git,2021-07-04 09:02:17+00:00,A Multi-cycle CPU based on MIPS instruction set,0,yangzhch6/Multi-cycle-CPU,382807279,Verilog,Multi-cycle-CPU,36452,1,2021-07-09 15:17:59+00:00,[],None
231,https://github.com/anudeepnrao/anudeepnrao.github.io.git,2021-06-20 07:09:13+00:00,Base code for portfolio site,0,anudeepnrao/anudeepnrao.github.io,378581624,Verilog,anudeepnrao.github.io,12563,1,2024-02-07 02:33:13+00:00,[],https://api.github.com/licenses/agpl-3.0
232,https://github.com/Asmaa601/Generic-QAM.git,2021-06-16 17:02:12+00:00,Repository of Generic QAM module which is implemented in verilog.,0,Asmaa601/Generic-QAM,377569662,Verilog,Generic-QAM,3,1,2024-02-23 01:47:28+00:00,[],None
233,https://github.com/suuzen/mycpu.git,2021-06-06 09:44:06+00:00,,0,suuzen/mycpu,374322054,Verilog,mycpu,15,0,2022-05-10 07:18:25+00:00,[],None
234,https://github.com/leus8/micro-ucr-hash-rtl.git,2021-06-07 00:02:03+00:00,RTL design of micro-ucr-hash,0,leus8/micro-ucr-hash-rtl,374488636,Verilog,micro-ucr-hash-rtl,1791,0,2021-08-01 02:57:17+00:00,[],None
235,https://github.com/lylechan42/DDS.git,2021-06-06 14:19:47+00:00,综合课程设计,0,lylechan42/DDS,374379132,Verilog,DDS,3894,0,2023-06-06 13:19:10+00:00,[],None
236,https://github.com/iknam/FPGA.git,2021-06-09 12:48:06+00:00,,0,iknam/FPGA,375352895,Verilog,FPGA,0,0,2021-06-09 13:03:23+00:00,[],None
237,https://github.com/m-goldstein/computer_architecture.git,2021-06-08 03:44:32+00:00,,0,m-goldstein/computer_architecture,374872317,Verilog,computer_architecture,7582,0,2021-06-08 03:53:39+00:00,[],None
238,https://github.com/leonbeier/MAX1000_Flash.git,2021-06-10 08:49:28+00:00,,0,leonbeier/MAX1000_Flash,375631736,Verilog,MAX1000_Flash,1481,0,2021-06-10 18:29:23+00:00,[],None
239,https://github.com/Javier-GarciaMeza/MIPS-Pipelined.git,2021-06-11 20:49:32+00:00,,0,Javier-GarciaMeza/MIPS-Pipelined,376139424,Verilog,MIPS-Pipelined,3423,0,2021-06-11 20:57:55+00:00,[],None
240,https://github.com/prernams/Booth-s-Multiplication-Algorithm.git,2021-06-16 04:06:43+00:00,Booth's Multiplication Algorithm using Verilog,0,prernams/Booth-s-Multiplication-Algorithm,377366658,Verilog,Booth-s-Multiplication-Algorithm,3,0,2021-06-16 04:08:04+00:00,[],None
241,https://github.com/vah5121/RISC-CPU.git,2021-06-14 17:52:50+00:00,,0,vah5121/RISC-CPU,376910951,Verilog,RISC-CPU,12,0,2021-06-14 17:58:44+00:00,[],None
242,https://github.com/ychoudhury/Artix-7-Projects.git,2021-06-12 21:11:36+00:00,"Self-guided, self-learning projects on a Basys 3 board for fun",0,ychoudhury/Artix-7-Projects,376384586,Verilog,Artix-7-Projects,23,0,2021-06-13 02:37:24+00:00,[],None
243,https://github.com/jonathanyuen66/SystemVerilog-Super-Mario-Bros.-Clone-ECE-385.git,2021-06-15 21:14:24+00:00,,0,jonathanyuen66/SystemVerilog-Super-Mario-Bros.-Clone-ECE-385,377295109,Verilog,SystemVerilog-Super-Mario-Bros.-Clone-ECE-385,515,0,2021-06-15 21:18:46+00:00,[],None
244,https://github.com/AbdullahAshfaq/riscv_proc_5_stage.git,2021-07-08 23:12:05+00:00,RISC-V 5 stage pipelines processor written in Verilog,0,AbdullahAshfaq/riscv_proc_5_stage,384268940,Verilog,riscv_proc_5_stage,243,0,2021-07-08 23:15:28+00:00,[],None
245,https://github.com/SaiEshwarReddyYellu/Vivado_projects.git,2021-07-09 10:40:15+00:00,Projects developed in Vivado using Verilog and VHDL languages.,0,SaiEshwarReddyYellu/Vivado_projects,384405193,Verilog,Vivado_projects,13764,0,2022-01-09 11:44:18+00:00,[],None
246,https://github.com/SarmadWahab/Fpga_4_Peripherals.git,2021-06-27 18:54:21+00:00,,0,SarmadWahab/Fpga_4_Peripherals,380816184,Verilog,Fpga_4_Peripherals,73,0,2022-01-05 21:53:40+00:00,[],None
247,https://github.com/jhs951101/CAaL3.git,2021-06-28 12:32:14+00:00,,0,jhs951101/CAaL3,381024413,Verilog,CAaL3,1,0,2021-07-15 15:57:46+00:00,['verilog'],None
248,https://github.com/BryantSuen/pipeline-CPU.git,2021-07-07 08:24:55+00:00,Homework for Fundamental of Digital Logic and Processor,0,BryantSuen/pipeline-CPU,383726782,Verilog,pipeline-CPU,28,0,2022-09-19 12:10:11+00:00,[],https://api.github.com/licenses/mit
249,https://github.com/ronakkmeena200/FIR-HPF.git,2021-07-08 18:06:11+00:00,,0,ronakkmeena200/FIR-HPF,384210422,Verilog,FIR-HPF,10,0,2021-07-09 10:12:44+00:00,[],None
250,https://github.com/supuniprojects/CLEAN.git,2021-06-23 13:35:26+00:00,This project based on digital embedded syestems. ,0,supuniprojects/CLEAN,379614456,Verilog,CLEAN,2153,0,2021-07-30 13:53:29+00:00,[],None
251,https://github.com/Anubhav3084/Summer-project-2021.git,2021-06-23 04:01:42+00:00,,0,Anubhav3084/Summer-project-2021,379473701,Verilog,Summer-project-2021,825,0,2022-07-13 07:08:57+00:00,[],None
252,https://github.com/CansWang/precheck_debug.git,2021-06-19 11:20:23+00:00,,0,CansWang/precheck_debug,378394282,Verilog,precheck_debug,4066,0,2021-06-19 11:35:50+00:00,[],https://api.github.com/licenses/apache-2.0
253,https://github.com/PashaShun/MIPS.git,2021-06-25 11:53:27+00:00,,0,PashaShun/MIPS,380222472,Verilog,MIPS,8,0,2021-06-25 12:15:31+00:00,[],None
254,https://github.com/lstolcman/vga_controller.git,2021-06-17 21:15:36+00:00,,0,lstolcman/vga_controller,377962430,Verilog,vga_controller,2604,0,2021-06-17 21:16:53+00:00,"['fpga', 'modelsim', 'quartus', 'vga-controller', 'altera']",None
255,https://github.com/7naren/vlsi.git,2021-06-17 15:24:56+00:00,,0,7naren/vlsi,377876989,Verilog,vlsi,105,0,2021-06-17 15:30:40+00:00,[],None
256,https://github.com/subhashnew/CPU-implementation.git,2021-06-24 08:38:26+00:00,CO502 LAB practical,1,subhashnew/CPU-implementation,379858957,Verilog,CPU-implementation,7,0,2021-07-06 16:24:50+00:00,[],None
257,https://github.com/Darkgambler/PROYECTO2_DIGITALESII.git,2021-06-26 09:00:56+00:00,,0,Darkgambler/PROYECTO2_DIGITALESII,380458643,Verilog,PROYECTO2_DIGITALESII,997,0,2021-07-17 11:43:53+00:00,[],None
258,https://github.com/mfkiwl/FPGA-3.git,2021-06-28 20:07:49+00:00,,0,mfkiwl/FPGA-3,381149329,,FPGA-3,97,0,2021-11-21 12:12:13+00:00,[],None
259,https://github.com/ruiqurm/cpu_design_and_practice_lab.git,2021-07-05 12:19:47+00:00,CPU设计实战lab,0,ruiqurm/cpu_design_and_practice_lab,383131373,Verilog,cpu_design_and_practice_lab,19,0,2021-07-05 12:36:27+00:00,[],None
260,https://github.com/neilwang0913/ArtDeD.git,2021-07-02 20:58:33+00:00,verilog demo,1,neilwang0913/ArtDeD,382462869,Verilog,ArtDeD,22,0,2023-11-07 12:57:43+00:00,[],https://api.github.com/licenses/apache-2.0
261,https://github.com/winstondo/FloatingPointUnit.git,2021-06-30 00:23:46+00:00,"A floating point unit capable of adding, subtracting and multiplying two IEEE 754 32-bit values.",0,winstondo/FloatingPointUnit,381530217,Verilog,FloatingPointUnit,302,0,2021-06-30 00:27:54+00:00,[],None
262,https://github.com/prvn777/ECN-104_ALU_PROJECT.git,2021-07-03 12:04:19+00:00,,0,prvn777/ECN-104_ALU_PROJECT,382605400,Verilog,ECN-104_ALU_PROJECT,850,0,2021-07-05 15:28:07+00:00,[],None
263,https://github.com/leahlt/A-Law_Compression_Decompression.git,2021-07-05 23:38:40+00:00,A Verilog A-law Compression and Decompression project with testbench. ,0,leahlt/A-Law_Compression_Decompression,383287969,Verilog,A-Law_Compression_Decompression,7,0,2021-07-05 23:45:01+00:00,[],https://api.github.com/licenses/mit
264,https://github.com/zzfd97/axi_verilog_code.git,2021-06-09 11:11:15+00:00,此文件夹内的内容为vivado工具自动成的axi总线的verilog代码。,0,zzfd97/axi_verilog_code,375326528,,axi_verilog_code,19042,0,2024-02-09 03:58:45+00:00,[],None
265,https://github.com/zzfd97/M0SOC_LED.git,2021-06-09 11:12:19+00:00,利用ARM M0模块搭建的一个简单的LED灯控制系统,0,zzfd97/M0SOC_LED,375326814,,M0SOC_LED,167,0,2024-02-09 03:55:14+00:00,[],None
266,https://github.com/tecbarry/git_study.git,2021-06-06 03:42:14+00:00,,0,tecbarry/git_study,374260909,Verilog,git_study,6,0,2021-06-26 07:57:23+00:00,[],None
267,https://github.com/rogerpease/PYNQSubtractBranchNegative.git,2021-06-06 21:56:21+00:00,,0,rogerpease/PYNQSubtractBranchNegative,374471518,Verilog,PYNQSubtractBranchNegative,32,0,2021-06-08 02:03:02+00:00,[],None
268,https://github.com/NT-marlowe/computer-architecture-2021.git,2021-06-13 07:09:28+00:00,A simple assembler with Perl 5,0,NT-marlowe/computer-architecture-2021,376466851,Verilog,computer-architecture-2021,26,0,2021-06-27 04:23:14+00:00,[],None
269,https://github.com/arpit-cracket/very-simple-cpu.git,2021-06-14 18:44:54+00:00,,0,arpit-cracket/very-simple-cpu,376924004,Verilog,very-simple-cpu,7,0,2021-06-14 19:01:07+00:00,[],None
270,https://github.com/embelon/wrapped_wb_hyperram.git,2021-06-10 22:41:16+00:00,,0,embelon/wrapped_wb_hyperram,375846713,Verilog,wrapped_wb_hyperram,1964,0,2021-11-07 21:49:33+00:00,[],https://api.github.com/licenses/apache-2.0
271,https://github.com/dogsc729/RISCV-Pipeline-Project.git,2021-06-16 18:44:58+00:00,,0,dogsc729/RISCV-Pipeline-Project,377595739,,RISCV-Pipeline-Project,1457,0,2021-12-01 07:27:32+00:00,[],None
272,https://github.com/RndMnkIII/k051962_verilog.git,2021-06-16 16:49:31+00:00,,0,RndMnkIII/k051962_verilog,377566343,Verilog,k051962_verilog,44160,0,2021-07-01 07:42:50+00:00,[],https://api.github.com/licenses/gpl-3.0
273,https://github.com/chewei3/Digital-Integrated-Circuits.git,2021-06-09 15:18:55+00:00,2020 NCKU_Homework,0,chewei3/Digital-Integrated-Circuits,375400814,Verilog,Digital-Integrated-Circuits,12294,0,2021-06-09 15:21:45+00:00,[],None
274,https://github.com/krezefal/verilog-experience.git,2021-06-09 01:04:24+00:00,This repo contains examples of my fluent acquaintance with the Verilog hardware description language.,0,krezefal/verilog-experience,375186086,Verilog,verilog-experience,3,0,2021-06-09 01:09:17+00:00,[],None
275,https://github.com/rogerpease/PYNQAXIStreamCompressor.git,2021-06-09 01:47:32+00:00,,0,rogerpease/PYNQAXIStreamCompressor,375194104,Verilog,PYNQAXIStreamCompressor,1959,0,2022-01-09 14:05:28+00:00,[],https://api.github.com/licenses/gpl-3.0
276,https://github.com/Timothy-Liuxf/MIPS.git,2021-06-07 21:32:49+00:00,数字逻辑与处理器基础大作业,0,Timothy-Liuxf/MIPS,374805572,Verilog,MIPS,1105,0,2023-01-28 06:41:58+00:00,[],https://api.github.com/licenses/mit
277,https://github.com/shirleyqi26/CPEN-221-RISC-machine-lab-6.git,2021-06-07 04:56:39+00:00,,0,shirleyqi26/CPEN-221-RISC-machine-lab-6,374538991,Verilog,CPEN-221-RISC-machine-lab-6,10355,0,2021-06-07 05:01:39+00:00,[],None
278,https://github.com/chenm001/hhc.git,2021-06-22 02:00:31+00:00,Hardware Implement Framework For Video & Image & AI,0,chenm001/hhc,379113240,Verilog,hhc,1002,0,2021-07-16 13:04:09+00:00,[],https://api.github.com/licenses/gpl-2.0
279,https://github.com/kavindumadushanka972/simple-processor.git,2021-06-22 18:36:07+00:00,,0,kavindumadushanka972/simple-processor,379367297,Verilog,simple-processor,1193,0,2021-06-22 18:40:32+00:00,[],None
280,https://github.com/thomas-smith123/Verilog-UART.git,2021-06-26 03:41:31+00:00,UART realized by State Machine ,0,thomas-smith123/Verilog-UART,380406527,Verilog,Verilog-UART,9,0,2021-06-27 14:41:37+00:00,[],None
281,https://github.com/cheonhoo-jeon/LED_SCL_2021.git,2021-06-28 12:42:33+00:00,,0,cheonhoo-jeon/LED_SCL_2021,381027360,Verilog,LED_SCL_2021,25,0,2022-01-24 05:11:01+00:00,[],None
282,https://github.com/GitGeorge-fn/Learning-Verilog.git,2021-07-10 00:51:51+00:00,Learning Verilog and practicing Git,0,GitGeorge-fn/Learning-Verilog,384581301,Verilog,Learning-Verilog,3,0,2021-07-19 05:01:24+00:00,[],None
283,https://github.com/ngnma/Digital-Logic-Design-Final-Project.git,2021-07-10 10:29:59+00:00,Digital Logic Design Final Project - Spring 2020,0,ngnma/Digital-Logic-Design-Final-Project,384671366,Verilog,Digital-Logic-Design-Final-Project,100,0,2021-07-10 10:32:14+00:00,[],None
284,https://github.com/coleblackman/caravel-SHA256-zenhplp.git,2021-07-07 17:58:31+00:00,SHA256 on caravel,0,coleblackman/caravel-SHA256-zenhplp,383883638,Verilog,caravel-SHA256-zenhplp,29196,0,2022-05-17 20:00:48+00:00,"['verilog', 'c', 'fpga', 'asic']",https://api.github.com/licenses/apache-2.0
285,https://github.com/megharaj123-sh/MEMORY-.git,2021-06-26 06:27:24+00:00,In this document i have designed the code for the memory stage.,0,megharaj123-sh/MEMORY-,380431022,Verilog,MEMORY-,21,0,2021-06-26 06:28:26+00:00,[],None
286,https://github.com/nishatuap/VLSI-Lab-CSE458.git,2021-07-03 03:34:39+00:00,Codes pertaining to VLSI Lab for Course CSE458 - Design and Testing of VLSI Lab,0,nishatuap/VLSI-Lab-CSE458,382516543,Verilog,VLSI-Lab-CSE458,10,0,2021-07-03 03:35:43+00:00,[],None
287,https://github.com/RAJKUMAR0003/verilog-projects.git,2021-07-04 09:29:23+00:00,,0,RAJKUMAR0003/verilog-projects,382812163,Verilog,verilog-projects,18,0,2021-07-07 14:40:40+00:00,[],None
288,https://github.com/jneirar/ArchLab05.git,2021-07-05 19:16:28+00:00,,0,jneirar/ArchLab05,383242662,Verilog,ArchLab05,32,0,2021-07-09 23:15:02+00:00,[],None
289,https://github.com/danceinthedark/HD-CPU.git,2021-07-02 13:43:08+00:00,计算机组成原理课程设计-硬连线CPU设计,0,danceinthedark/HD-CPU,382358778,Verilog,HD-CPU,2238,0,2021-07-08 10:50:38+00:00,[],None
290,https://github.com/FengYiCDQZ/verilog_source.git,2021-07-03 10:57:17+00:00,,0,FengYiCDQZ/verilog_source,382592532,Verilog,verilog_source,3,0,2021-07-03 11:00:27+00:00,[],None
291,https://github.com/ghazal-pouresfandiyar/CPU-design.git,2021-07-01 11:27:36+00:00,CPU Design using Verilog - Computer Architecture Course,1,ghazal-pouresfandiyar/CPU-design,382009870,Verilog,CPU-design,1312,0,2023-07-01 09:37:55+00:00,[],None
292,https://github.com/Henry-Fielding/DE1_SoC_FPGA_demo.git,2021-07-02 08:38:20+00:00,Verilog programme to demonstrate FPGA design skills on the DE1-SoC development board and LT24 LCD module,0,Henry-Fielding/DE1_SoC_FPGA_demo,382283965,Verilog,DE1_SoC_FPGA_demo,167,0,2021-07-02 08:40:36+00:00,[],None
293,https://github.com/LeechCSE/FPGA-Game-Boxed.git,2021-07-07 03:47:40+00:00,,0,LeechCSE/FPGA-Game-Boxed,383665721,Verilog,FPGA-Game-Boxed,16459,0,2022-01-17 03:19:49+00:00,[],None
294,https://github.com/nretza/FPGA_chess.git,2021-07-05 20:25:05+00:00,FPGA-chess als Abschlussprojekt für das Elektronikpraktikum,0,nretza/FPGA_chess,383256724,Verilog,FPGA_chess,6720,0,2021-07-19 18:07:04+00:00,[],None
295,https://github.com/dbsdlqls/2021-1_EmbeddedSystem.git,2021-06-30 07:13:00+00:00,,0,dbsdlqls/2021-1_EmbeddedSystem,381609737,Verilog,2021-1_EmbeddedSystem,209,0,2021-06-30 07:33:46+00:00,[],None
296,https://github.com/henryzhang1996/master_slave_if.git,2021-06-30 09:38:28+00:00,master_slave_if  in spinalhdl,0,henryzhang1996/master_slave_if,381649566,Verilog,master_slave_if,49,0,2021-07-01 01:34:49+00:00,[],None
297,https://github.com/WShuai123/HDLBits-Study.git,2021-07-04 03:35:11+00:00,,0,WShuai123/HDLBits-Study,382754720,Verilog,HDLBits-Study,35,0,2021-07-26 01:53:32+00:00,[],None
298,https://github.com/clover-forever/COMPUTER-ORGANIZATION.git,2021-07-11 02:38:13+00:00,,0,clover-forever/COMPUTER-ORGANIZATION,384845510,Verilog,COMPUTER-ORGANIZATION,6324,0,2021-12-15 14:49:57+00:00,[],None
299,https://github.com/EricTtTtT/IC-Design-Image-Processing-Filter.git,2021-06-10 04:01:43+00:00,,0,EricTtTtT/IC-Design-Image-Processing-Filter,375564548,Verilog,IC-Design-Image-Processing-Filter,2800,0,2023-11-15 09:18:12+00:00,[],None
300,https://github.com/10gyal/Microprocessor.git,2021-06-23 01:37:03+00:00,Final project for Logic Design. Verilog,0,10gyal/Microprocessor,379446423,Verilog,Microprocessor,7,0,2023-11-21 08:24:40+00:00,[],None
301,https://github.com/HateHanzo/clk_switch.git,2021-06-07 11:17:46+00:00,,0,HateHanzo/clk_switch,374638159,Verilog,clk_switch,532,0,2021-06-21 12:19:45+00:00,[],None
302,https://github.com/deoregaurav92/Five-stage-32-bit-MIPS-architecture-.git,2021-06-27 05:51:37+00:00,,0,deoregaurav92/Five-stage-32-bit-MIPS-architecture-,380661965,Verilog,Five-stage-32-bit-MIPS-architecture-,9,0,2021-06-27 06:06:05+00:00,[],None
303,https://github.com/Abhijith190300/Samir_Palnitkar.git,2021-06-28 11:04:49+00:00,,0,Abhijith190300/Samir_Palnitkar,381001049,Verilog,Samir_Palnitkar,8,0,2021-06-29 04:38:17+00:00,[],None
304,https://github.com/Waxpple/A_32_points_single_path_delay_FFT.git,2021-06-29 05:28:40+00:00,,0,Waxpple/A_32_points_single_path_delay_FFT,381249440,Verilog,A_32_points_single_path_delay_FFT,1877,0,2021-06-29 05:39:56+00:00,[],None
305,https://github.com/haoranlove11/CPU-and-RNT-computer.git,2021-06-29 13:06:21+00:00,,0,haoranlove11/CPU-and-RNT-computer,381368029,Verilog,CPU-and-RNT-computer,5,0,2021-06-29 13:08:32+00:00,[],None
306,https://github.com/Parsa2820/dsd-projects.git,2021-07-09 10:20:49+00:00,DSD and DSD Lab Courses,0,Parsa2820/dsd-projects,384400727,Verilog,dsd-projects,28712,0,2023-01-28 02:15:12+00:00,[],None
307,https://github.com/skuro96/FPGA_Animation.git,2021-06-06 11:08:56+00:00,,0,skuro96/FPGA_Animation,374338865,Verilog,FPGA_Animation,6,0,2021-06-12 15:40:35+00:00,[],None
308,https://github.com/qiany21/Arduino-on-RISC-V.git,2021-06-08 14:52:50+00:00,,0,qiany21/Arduino-on-RISC-V,375047124,Verilog,Arduino-on-RISC-V,26812,0,2022-04-28 20:56:33+00:00,[],https://api.github.com/licenses/mit
309,https://github.com/xuyuan989/FPGA_CODE.git,2021-06-11 08:03:00+00:00,Some code about FPGA,0,xuyuan989/FPGA_CODE,375950082,Verilog,FPGA_CODE,16,0,2021-06-11 08:29:12+00:00,[],None
310,https://github.com/j-sidney/pynq_z2-ps.git,2021-06-14 17:19:41+00:00,Basic vivado project with pynq-z2 ps configuration ,0,j-sidney/pynq_z2-ps,376902663,Verilog,pynq_z2-ps,319,0,2021-06-14 17:34:49+00:00,[],https://api.github.com/licenses/gpl-3.0
311,https://github.com/Motsu0417/Verilog.git,2021-06-15 06:31:07+00:00,,0,Motsu0417/Verilog,377059991,Verilog,Verilog,0,0,2021-06-15 06:37:27+00:00,[],None
312,https://github.com/bryangreener/fpga.git,2021-06-14 00:00:23+00:00,,0,bryangreener/fpga,376663110,Verilog,fpga,141697,0,2021-06-15 14:43:53+00:00,[],None
313,https://github.com/Jason-Du/DIC_HW5.git,2021-06-10 08:23:00+00:00,,0,Jason-Du/DIC_HW5,375624389,Verilog,DIC_HW5,3608,0,2021-06-27 07:39:58+00:00,[],None
314,https://github.com/aw13422/Simple-calculator.git,2021-06-11 03:48:37+00:00,,0,aw13422/Simple-calculator,375897288,Verilog,Simple-calculator,1242,0,2021-06-11 03:50:25+00:00,[],None
315,https://github.com/siddhantsingh14/PACMAN.git,2021-06-16 20:39:17+00:00,,0,siddhantsingh14/PACMAN,377622007,Verilog,PACMAN,1717,0,2021-06-16 20:45:56+00:00,[],None
316,https://github.com/ZeroneBo/SnailArch.git,2021-06-18 15:18:49+00:00,"The project of Computer Architecture Course in NWU,xi'an,China.",0,ZeroneBo/SnailArch,378190224,Verilog,SnailArch,25,0,2021-06-18 15:56:20+00:00,[],None
317,https://github.com/EnriqueLaguna/MIPS_Single_cycle.git,2021-06-20 16:54:33+00:00,Realizar las modificacionespertinentes al procesadorMIPS base en Verilog tal que pueda ejecutar el siguiente programa,0,EnriqueLaguna/MIPS_Single_cycle,378696536,Verilog,MIPS_Single_cycle,39,0,2021-10-17 01:11:43+00:00,[],None
318,https://github.com/horsada/WAP_Rover.git,2021-06-21 19:54:01+00:00,,0,horsada/WAP_Rover,379047203,Verilog,WAP_Rover,48579,0,2021-06-21 20:04:54+00:00,[],https://api.github.com/licenses/mit
319,https://github.com/jhalakrsharma/Thesis_Part1.git,2021-06-24 05:40:14+00:00,This project discuss about the fault injection framework designed for digital circuits. ,1,jhalakrsharma/Thesis_Part1,379815680,Verilog,Thesis_Part1,351,0,2021-06-24 05:58:02+00:00,[],None
320,https://github.com/RndMnkIII/k052109_verilog.git,2021-06-25 14:57:06+00:00,Verilog simulation of k052109 Tile Layer Generator,0,RndMnkIII/k052109_verilog,380271480,Verilog,k052109_verilog,64464,0,2021-07-15 19:06:35+00:00,[],None
321,https://github.com/Osiris350/PCIE_2.git,2021-06-25 19:28:10+00:00,,1,Osiris350/PCIE_2,380336096,Verilog,PCIE_2,1139,0,2021-07-17 13:39:27+00:00,[],None
322,https://github.com/Ivan-Zhong/FPGA-Greedy-Snake.git,2021-06-25 13:52:14+00:00,,0,Ivan-Zhong/FPGA-Greedy-Snake,380253104,Verilog,FPGA-Greedy-Snake,15387,0,2021-06-25 14:22:13+00:00,[],None
323,https://github.com/CODERGU7/Cordic_Algorithm.git,2021-06-30 07:35:00+00:00,,0,CODERGU7/Cordic_Algorithm,381615270,Verilog,Cordic_Algorithm,8,0,2021-07-26 16:07:35+00:00,[],None
324,https://github.com/schdoel/LD_Assignments.git,2021-06-30 15:41:27+00:00,EECS1010 Mak 2021,0,schdoel/LD_Assignments,381752849,Verilog,LD_Assignments,2952,0,2021-06-30 15:57:05+00:00,[],None
325,https://github.com/cosineAlh/A-simple-convolution-kernel.git,2021-06-30 14:25:15+00:00,,0,cosineAlh/A-simple-convolution-kernel,381729145,Verilog,A-simple-convolution-kernel,2973,0,2021-06-30 14:43:44+00:00,[],None
326,https://github.com/TomAndrzejewski/engine-driver.git,2021-06-30 10:38:49+00:00,,0,TomAndrzejewski/engine-driver,381666019,Verilog,engine-driver,8,0,2021-06-30 10:39:57+00:00,[],None
327,https://github.com/gtli1452/pattern_gen.git,2021-06-30 09:09:27+00:00,Practice Verilog and GitHub.,0,gtli1452/pattern_gen,381640974,Verilog,pattern_gen,454,0,2021-07-13 08:25:58+00:00,[],None
328,https://github.com/CrazyWang0501/test2.git,2021-07-02 04:17:17+00:00,,0,CrazyWang0501/test2,382227932,Verilog,test2,2,0,2021-07-02 04:22:19+00:00,[],None
329,https://github.com/Chatchaponz/FlappyBox-Verilog.git,2021-07-03 13:28:34+00:00,,0,Chatchaponz/FlappyBox-Verilog,382622404,Verilog,FlappyBox-Verilog,1021,0,2021-12-02 09:00:47+00:00,[],None
330,https://github.com/smithChart5/luna.git,2021-07-05 20:38:33+00:00,,0,smithChart5/luna,383259263,Verilog,luna,9,0,2021-07-11 22:06:38+00:00,[],https://api.github.com/licenses/mit
331,https://github.com/Jason0322/CA_Project1_2021-Pipelined-CPU-in-verilog-.git,2021-07-06 05:03:23+00:00,,0,Jason0322/CA_Project1_2021-Pipelined-CPU-in-verilog-,383345214,Verilog,CA_Project1_2021-Pipelined-CPU-in-verilog-,2238,0,2021-07-06 05:23:00+00:00,[],None
332,https://github.com/lly0571/HDU_RV32I.git,2021-07-06 07:21:40+00:00,,0,lly0571/HDU_RV32I,383377204,Verilog,HDU_RV32I,9,0,2021-07-06 10:45:31+00:00,[],None
333,https://github.com/mr-gaurav/Divisiblity-Test.git,2021-07-07 12:49:09+00:00,"Data is input sequencially at active edge of clock, Input Data is continuously checked for divisibility.",0,mr-gaurav/Divisiblity-Test,383796750,Verilog,Divisiblity-Test,1,0,2021-07-07 12:49:16+00:00,[],None
334,https://github.com/williamtien23/FPGA-DE10_LITE-VGA_IMAGE.git,2021-07-07 20:59:39+00:00,"Video Card? Drives image over VGA, stores image in SDRAM",0,williamtien23/FPGA-DE10_LITE-VGA_IMAGE,383923190,Verilog,FPGA-DE10_LITE-VGA_IMAGE,14,0,2021-07-07 21:01:13+00:00,[],None
335,https://github.com/faezehsalehi-ac/Logic-circuit.git,2021-07-06 14:51:05+00:00,,0,faezehsalehi-ac/Logic-circuit,383504335,Verilog,Logic-circuit,170,0,2021-07-06 14:52:10+00:00,[],None
336,https://github.com/jiru1997/Sequence_detector_state_machine.git,2021-07-04 03:52:52+00:00,sequence_detector_state_machine,0,jiru1997/Sequence_detector_state_machine,382756975,Verilog,Sequence_detector_state_machine,3,0,2021-07-04 03:54:09+00:00,[],None
337,https://github.com/tanuj-maheshwari/FPGA.git,2021-07-08 10:23:57+00:00,Configurable FPGA Fabric simulated in Verilog,0,tanuj-maheshwari/FPGA,384085906,Verilog,FPGA,20,0,2022-03-21 16:34:53+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
338,https://github.com/YNSHARSHEESWARREDDY/16-16-Vedic-Multiplier.git,2021-07-09 12:19:11+00:00,,0,YNSHARSHEESWARREDDY/16-16-Vedic-Multiplier,384428017,Verilog,16-16-Vedic-Multiplier,1,0,2021-07-09 12:21:27+00:00,[],None
339,https://github.com/Sisker1111/2020-NCKU-IC-.git,2021-06-09 15:25:24+00:00,,0,Sisker1111/2020-NCKU-IC-,375402863,Verilog,2020-NCKU-IC-,23925,0,2021-10-21 13:53:46+00:00,[],None
340,https://github.com/Ultenhofen/ECE_474-VLSI-SYSTEM-DESIGN.git,2021-06-10 04:08:00+00:00,Classwork for VLSI System Design,0,Ultenhofen/ECE_474-VLSI-SYSTEM-DESIGN,375565707,Verilog,ECE_474-VLSI-SYSTEM-DESIGN,24334,0,2021-06-10 04:09:23+00:00,[],None
341,https://github.com/RuolinHuang/Hardware-Description-Language-Lab.git,2021-06-12 14:28:39+00:00,,0,RuolinHuang/Hardware-Description-Language-Lab,376309952,Verilog,Hardware-Description-Language-Lab,3494,0,2021-06-12 14:51:19+00:00,[],None
342,https://github.com/samblenny/eda_docs.git,2021-06-10 20:08:59+00:00,unofficial EDA tool docs,0,samblenny/eda_docs,375818592,Verilog,eda_docs,198,0,2023-01-28 02:58:41+00:00,[],None
343,https://github.com/sstto/LogicDesignFinalProject.git,2021-06-15 12:21:35+00:00,Logic design final project) Make our microprocessor,0,sstto/LogicDesignFinalProject,377153104,Verilog,LogicDesignFinalProject,3,0,2021-12-06 05:48:50+00:00,[],None
344,https://github.com/jwesterinen/hackdev.git,2021-06-18 17:16:33+00:00,,0,jwesterinen/hackdev,378219481,Verilog,hackdev,13700,0,2022-03-16 18:19:02+00:00,[],None
345,https://github.com/arman-hosain/CSE460_Lab.git,2021-06-19 15:00:21+00:00,,0,arman-hosain/CSE460_Lab,378438377,Verilog,CSE460_Lab,29101,0,2021-07-15 18:21:51+00:00,[],None
346,https://github.com/amir-pma/Mips-Processor.git,2021-07-09 16:17:22+00:00,,0,amir-pma/Mips-Processor,384491391,Verilog,Mips-Processor,7,0,2021-07-09 17:50:14+00:00,[],None
347,https://github.com/dghani/fpga_tutorials.git,2021-07-05 17:15:29+00:00,,0,dghani/fpga_tutorials,383214303,Verilog,fpga_tutorials,52420,0,2021-07-05 23:02:43+00:00,[],None
348,https://github.com/mehta-nitin/SNOW-2.0.git,2021-07-09 19:14:11+00:00,"Hardware Implementation of the stream cipher SNOW-2.0 algorithm , an improved version of SNOW-1.0 algorithm , with a word size of 32 bits and the LFSR length of 16 , but with a different feedback polynomial.",0,mehta-nitin/SNOW-2.0,384530188,Verilog,SNOW-2.0,3995,0,2021-07-09 19:39:05+00:00,[],None
349,https://github.com/TehWengWah/Number_Guessing_Game.git,2021-07-11 20:31:05+00:00,The purpose of this project is to design and develop a simple number guessing game. ,0,TehWengWah/Number_Guessing_Game,385046578,Verilog,Number_Guessing_Game,70,0,2021-07-13 12:22:27+00:00,['verilog'],None
350,https://github.com/erdemer-code/cs240_projectCPU.git,2021-06-25 10:38:14+00:00,,0,erdemer-code/cs240_projectCPU,380205568,Verilog,cs240_projectCPU,6,0,2021-06-25 10:39:53+00:00,[],None
351,https://github.com/Thevakumar-Luheerathan/FPGA_matrix_multiplication.git,2021-06-25 07:09:09+00:00,,0,Thevakumar-Luheerathan/FPGA_matrix_multiplication,380155281,Verilog,FPGA_matrix_multiplication,70,0,2022-06-24 05:41:00+00:00,[],None
352,https://github.com/tnb918/FPGA-Applications.git,2021-06-25 08:05:46+00:00,"FPGA application and practice, including four simple projects, namely FPU, AES, I2S and RISC-V",1,tnb918/FPGA-Applications,380168492,Verilog,FPGA-Applications,62696,0,2023-04-05 09:18:15+00:00,[],None
353,https://github.com/hansthisanke/CPU-Design---Verilog-Based.git,2021-06-29 07:02:12+00:00,"32-bit instruction set single-cycle processor which includes an  ALU, a register file, control logic and memory hierarchy using Verilog HDL",0,hansthisanke/CPU-Design---Verilog-Based,381270263,Verilog,CPU-Design---Verilog-Based,3819,0,2021-06-29 07:58:37+00:00,[],None
354,https://github.com/marwahmh/Pipelined-RISCV-Processor.git,2021-06-17 20:44:25+00:00,,0,marwahmh/Pipelined-RISCV-Processor,377956458,Verilog,Pipelined-RISCV-Processor,1235,0,2021-06-17 21:45:49+00:00,[],None
355,https://github.com/18520460/hierarchical-32bit-CLA-adder.git,2021-06-18 07:47:12+00:00,,0,18520460/hierarchical-32bit-CLA-adder,378074208,Verilog,hierarchical-32bit-CLA-adder,45,0,2021-06-18 08:03:00+00:00,[],None
356,https://github.com/oddogan/FPGA-POS-Machine.git,2021-06-18 07:37:45+00:00,,0,oddogan/FPGA-POS-Machine,378071947,Verilog,FPGA-POS-Machine,258899,0,2021-09-30 17:24:43+00:00,[],None
357,https://github.com/gbalaratnaswamy/MIPSProcessor.git,2021-06-16 11:32:25+00:00,Implementing MIPS microprocessor with verilog,0,gbalaratnaswamy/MIPSProcessor,377473377,Verilog,MIPSProcessor,12,0,2021-06-18 16:40:14+00:00,[],None
358,https://github.com/aaronrjmanj/Async-FIFO-RTL-Design.git,2021-06-25 13:20:33+00:00,,0,aaronrjmanj/Async-FIFO-RTL-Design,380244609,Verilog,Async-FIFO-RTL-Design,3,0,2021-06-25 13:23:47+00:00,[],None
359,https://github.com/otooooooooooooooooo/MIPS-processor.git,2021-06-21 20:25:43+00:00,MIPS processor designed as final project for Computer Architecture course,0,otooooooooooooooooo/MIPS-processor,379054306,Verilog,MIPS-processor,1150,0,2021-08-20 13:40:33+00:00,[],None
360,https://github.com/rsk4421/Car-Speed-Controller-using-Verilog.git,2021-06-13 16:35:15+00:00,To design a secure car speed controller using Verilog HDL in XILINX and simulate the output in ModelSim.,0,rsk4421/Car-Speed-Controller-using-Verilog,376591607,Verilog,Car-Speed-Controller-using-Verilog,2,0,2021-06-13 16:38:46+00:00,[],None
361,https://github.com/SoujanyaSR/ImageProcessing_HDL.git,2021-06-30 18:35:59+00:00,,0,SoujanyaSR/ImageProcessing_HDL,381799931,Verilog,ImageProcessing_HDL,3,0,2021-06-30 18:39:07+00:00,[],None
362,https://github.com/nagaokayuji/verilog-lib.git,2021-07-03 17:09:47+00:00,,0,nagaokayuji/verilog-lib,382670345,Verilog,verilog-lib,1,0,2021-07-03 17:11:10+00:00,[],None
363,https://github.com/PedroMO11/ArchLab04.git,2021-07-02 19:06:28+00:00,,1,PedroMO11/ArchLab04,382439439,Verilog,ArchLab04,697,0,2021-07-04 14:33:40+00:00,[],None
364,https://github.com/abhi-star01/Verilog-Works.git,2021-07-02 19:20:59+00:00,,0,abhi-star01/Verilog-Works,382442324,Verilog,Verilog-Works,413,0,2021-07-10 08:57:00+00:00,[],None
365,https://github.com/ytl0623/1082-Computer-Organization-Pipelined-CPU-Design.git,2021-07-01 13:32:07+00:00,,0,ytl0623/1082-Computer-Organization-Pipelined-CPU-Design,382043441,Verilog,1082-Computer-Organization-Pipelined-CPU-Design,481,0,2021-07-06 05:34:36+00:00,[],None
366,https://github.com/ytl0623/1091-Experiments-Of-Digital-Logic-Design-Finite-State-Machine.git,2021-07-01 17:16:20+00:00,,0,ytl0623/1091-Experiments-Of-Digital-Logic-Design-Finite-State-Machine,382106310,Verilog,1091-Experiments-Of-Digital-Logic-Design-Finite-State-Machine,66,0,2021-07-06 05:30:28+00:00,[],None
367,https://github.com/andrab0/CN1-Banda_Asamblare.git,2021-07-01 17:34:48+00:00,Rezolvare functie f = a*b + c - d*e folosind pipeline.,0,andrab0/CN1-Banda_Asamblare,382110629,Verilog,CN1-Banda_Asamblare,5,0,2021-07-01 17:38:45+00:00,[],None
368,https://github.com/solale427/dsd_project.git,2021-07-07 13:48:10+00:00,,0,solale427/dsd_project,383813990,Verilog,dsd_project,24890,0,2023-10-28 16:35:47+00:00,[],None
369,https://github.com/mr-gaurav/Clock-Frequency-Divider-Circuit.git,2021-07-07 12:45:23+00:00,"clock frequency divided by 3, 5, 6, 1.5",1,mr-gaurav/Clock-Frequency-Divider-Circuit,383795764,Verilog,Clock-Frequency-Divider-Circuit,3,0,2021-07-07 12:45:31+00:00,[],None
370,https://github.com/huantsai/simple-RISCV-CS4100-NTHU-.git,2021-07-06 06:54:46+00:00,,0,huantsai/simple-RISCV-CS4100-NTHU-,383370077,Verilog,simple-RISCV-CS4100-NTHU-,4796,0,2021-07-06 06:57:24+00:00,[],None
371,https://github.com/ahmadrmirzaei/ARM32-SRAM.git,2021-06-24 00:29:59+00:00,,0,ahmadrmirzaei/ARM32-SRAM,379761640,Verilog,ARM32-SRAM,4871,0,2023-07-15 11:28:13+00:00,[],None
372,https://github.com/jrblair52/297-2.git,2021-07-08 01:11:52+00:00,,2,jrblair52/297-2,383964351,Verilog,297-2,32,0,2021-07-14 03:10:30+00:00,[],None
373,https://github.com/AhmedSherif-12/rep2.git,2021-07-10 17:43:35+00:00,,0,AhmedSherif-12/rep2,384757015,Verilog,rep2,28,0,2023-04-20 23:50:16+00:00,[],None
374,https://github.com/AleksandarLilic/ama-riscv.git,2021-06-08 05:34:46+00:00,Verilog implementation of RISC-V RV32I ISA,0,AleksandarLilic/ama-riscv,374893128,Verilog,ama-riscv,855,0,2024-03-06 05:26:30+00:00,"['risc-v', 'rtl', 'rv32i']",https://api.github.com/licenses/gpl-3.0
375,https://github.com/ColkAssaignmentRepos/logics.git,2021-06-23 02:17:37+00:00,"A repository for the class ""Logic Circuits II"" in NITIC.",0,ColkAssaignmentRepos/logics,379454365,Verilog,logics,70,0,2021-11-24 01:29:18+00:00,[],None
376,https://github.com/lou296A/Arm-CPU.git,2021-06-11 17:17:13+00:00,final test,0,lou296A/Arm-CPU,376094929,Verilog,Arm-CPU,5476,0,2022-11-12 10:51:09+00:00,[],None
377,https://github.com/tishi43/dsp48e1.git,2021-06-18 01:50:46+00:00,modelsim project to simulate dsp48e1.v,0,tishi43/dsp48e1,378005828,Verilog,dsp48e1,274,0,2021-06-18 01:55:35+00:00,[],None
378,https://github.com/shubhi704/VendingMachine.git,2021-06-19 17:07:35+00:00,,1,shubhi704/VendingMachine,378464651,Verilog,VendingMachine,4,0,2021-06-19 17:18:45+00:00,[],None
379,https://github.com/raj9anand/sail.git,2021-06-20 07:22:04+00:00,,0,raj9anand/sail,378583882,Verilog,sail,447,0,2021-06-20 07:22:47+00:00,[],None
380,https://github.com/RoyArch/buptsee_verilog_matrix.git,2021-06-09 06:38:17+00:00,北邮电子院数电实验MAXII矩阵驱动,0,RoyArch/buptsee_verilog_matrix,375252195,Verilog,buptsee_verilog_matrix,3,0,2021-06-09 06:49:44+00:00,[],None
381,https://github.com/Ananth864/FPGA-Design-of-Floating-Point-Addition-Multiplication-Unit.git,2021-06-08 16:44:51+00:00,,0,Ananth864/FPGA-Design-of-Floating-Point-Addition-Multiplication-Unit,375080463,Verilog,FPGA-Design-of-Floating-Point-Addition-Multiplication-Unit,22,0,2021-10-23 16:12:56+00:00,[],None
382,https://github.com/jiru1997/Double-ported-memory-block.git,2021-06-21 01:13:44+00:00,Double ported memory block,0,jiru1997/Double-ported-memory-block,378771914,Verilog,Double-ported-memory-block,22,0,2021-06-21 01:15:41+00:00,[],None
383,https://github.com/RookieLT/IL2203-verilog-ver.git,2021-06-23 20:32:39+00:00,,0,RookieLT/IL2203-verilog-ver,379722668,Verilog,IL2203-verilog-ver,99,0,2021-09-17 17:51:45+00:00,[],None
384,https://github.com/kostascc/HW2-Project.git,2021-06-23 10:04:38+00:00,,0,kostascc/HW2-Project,379558487,Verilog,HW2-Project,4234,0,2023-01-28 07:52:37+00:00,[],None
385,https://github.com/FADEDATE/fpga.git,2021-06-14 10:34:56+00:00,,0,FADEDATE/fpga,376786272,Verilog,fpga,13,0,2022-03-30 02:49:59+00:00,[],None
386,https://github.com/hadlow/litefury-vivado-template.git,2021-06-12 14:56:56+00:00,A simple Vivado template project,0,hadlow/litefury-vivado-template,376316824,Verilog,litefury-vivado-template,75934,0,2021-06-12 15:04:05+00:00,[],None
387,https://github.com/THRMAT007/EEE4120F_Yoda.git,2021-06-13 13:12:20+00:00,,1,THRMAT007/EEE4120F_Yoda,376547338,Verilog,EEE4120F_Yoda,856,0,2021-06-22 16:49:55+00:00,[],None
388,https://github.com/y38y38/entropy_encode_dc_coefficients.git,2021-06-16 12:14:20+00:00,,0,y38y38/entropy_encode_dc_coefficients,377484807,Verilog,entropy_encode_dc_coefficients,11,0,2021-09-02 18:41:06+00:00,[],None
389,https://github.com/lub8881/test.git,2021-07-07 08:08:31+00:00,,0,lub8881/test,383722401,Verilog,test,2069,0,2022-08-31 05:20:59+00:00,[],None
390,https://github.com/NCKUMaxSnake/VLSI.git,2021-07-09 08:20:20+00:00,VLSI,0,NCKUMaxSnake/VLSI,384370380,Verilog,VLSI,18876,0,2021-07-09 08:25:47+00:00,[],None
391,https://github.com/Samarth901/carry-skip-adder.git,2021-07-09 13:30:22+00:00,Carry skip adder using Universal Gates,0,Samarth901/carry-skip-adder,384445938,Verilog,carry-skip-adder,2,0,2021-07-09 13:50:45+00:00,[],None
392,https://github.com/GoWest279/Sparc_t1.git,2021-06-14 03:24:33+00:00,,0,GoWest279/Sparc_t1,376692076,Verilog,Sparc_t1,136883,0,2021-06-14 03:29:04+00:00,[],None
393,https://github.com/rogerpease/PYNQFrameGenerator.git,2021-06-07 23:35:52+00:00,,0,rogerpease/PYNQFrameGenerator,374826635,Verilog,PYNQFrameGenerator,30,0,2021-06-08 22:40:12+00:00,[],None
394,https://github.com/arturoverdin/DustBunnyFPGA.git,2021-06-10 05:49:49+00:00,Final Project for EE354.,0,arturoverdin/DustBunnyFPGA,375584872,Verilog,DustBunnyFPGA,9,0,2021-06-10 05:50:02+00:00,[],https://api.github.com/licenses/mit
395,https://github.com/Deepesh368/Verilog_Programs.git,2021-07-06 07:50:29+00:00,,0,Deepesh368/Verilog_Programs,383385334,Verilog,Verilog_Programs,388,0,2021-07-06 07:56:45+00:00,[],None
396,https://github.com/mehta-nitin/SNOW-V.git,2021-07-09 19:35:08+00:00,"Hardware Implementation of the newest member of the SNOW Family , SNOW-V (Virtualization) , which consists of two 256-bit LFSRs that are continuously fed into a FSM, consisting of two chained AES-128 Round Functions, that produces the key stream. SNOW-V is found to be faster than AES in all comparable modes of operation(single thread implementation in software)",0,mehta-nitin/SNOW-V,384534227,Verilog,SNOW-V,2986,0,2021-07-09 19:37:05+00:00,[],None
397,https://github.com/elbin98/elbin98.git,2021-06-27 06:50:41+00:00,,0,elbin98/elbin98,380671474,Verilog,elbin98,3,0,2021-12-09 07:36:40+00:00,[],None
398,https://github.com/Lycheenut/SE358-Digital-Component-Design.git,2021-06-25 12:30:36+00:00,Labs of course SE358 - Digital Component Design,0,Lycheenut/SE358-Digital-Component-Design,380231634,Verilog,SE358-Digital-Component-Design,467,0,2021-06-25 12:38:37+00:00,[],None
399,https://github.com/BryantSuen/ultrasonic_distance.git,2021-06-27 04:48:44+00:00,电子电路课程设计作业,0,BryantSuen/ultrasonic_distance,380652794,Verilog,ultrasonic_distance,3287,0,2022-05-09 12:09:18+00:00,[],https://api.github.com/licenses/mit
400,https://github.com/etalian/mensa.git,2021-07-01 19:46:30+00:00,Micro tensor accelerator,1,etalian/mensa,382140187,Verilog,mensa,55783,0,2021-12-31 06:21:00+00:00,[],https://api.github.com/licenses/apache-2.0
401,https://github.com/TharushiSuwaris/single-cycle-processor.git,2021-07-03 05:24:42+00:00,,0,TharushiSuwaris/single-cycle-processor,382532781,Verilog,single-cycle-processor,2210,0,2021-09-18 13:48:46+00:00,[],None
402,https://github.com/Bhargav-962/4-bit_Register-Verilog.git,2021-07-03 06:02:59+00:00,A verilog program that mimics the circuitry of a 4-bit register implemented with four 4x1 multiplexers and four D-Flipflops,1,Bhargav-962/4-bit_Register-Verilog,382538722,Verilog,4-bit_Register-Verilog,5,0,2021-11-15 09:56:50+00:00,['verilog-simulator'],None
403,https://github.com/aktgb31/Risc-Processor.git,2021-06-28 10:35:22+00:00,Risc Processor Design using Verilog,0,aktgb31/Risc-Processor,380993810,Verilog,Risc-Processor,17,0,2021-06-28 10:38:57+00:00,[],None
404,https://github.com/gorkemozgul/CPUDesign.git,2021-06-26 22:00:05+00:00,Cpu Design In Verilog,0,gorkemozgul/CPUDesign,380602979,Verilog,CPUDesign,2,0,2022-02-18 18:43:29+00:00,[],None
405,https://github.com/sudamkalpage/CPU-Implementation.git,2021-06-18 18:54:12+00:00,"A simple 8-bit single-cycle processor which includes an ALU, a register file, control logic and a memory sub-system using Verilog HDL. ",0,sudamkalpage/CPU-Implementation,378240466,Verilog,CPU-Implementation,18,0,2024-01-14 14:26:18+00:00,[],None
406,https://github.com/zzfd97/M3SOC_GPIO_UART_sim.git,2021-06-09 11:12:13+00:00,arm m3外挂gpio模块和uart模块的测试仿真工程,0,zzfd97/M3SOC_GPIO_UART_sim,375326785,,M3SOC_GPIO_UART_sim,1051,0,2024-02-09 03:55:31+00:00,[],None
407,https://github.com/ShrinivasK337/MAC-Verilog.git,2021-06-15 18:15:00+00:00,,0,ShrinivasK337/MAC-Verilog,377255893,Verilog,MAC-Verilog,354,0,2021-10-03 07:52:24+00:00,[],None
408,https://github.com/plusagainH/2021_ICD_Final_Project.git,2021-06-25 15:19:01+00:00,,0,plusagainH/2021_ICD_Final_Project,380277581,Verilog,2021_ICD_Final_Project,51,0,2021-06-27 15:10:42+00:00,[],None
409,https://github.com/Po-Shun/Computer-organization.git,2021-07-02 07:19:41+00:00,,0,Po-Shun/Computer-organization,382264300,Verilog,Computer-organization,7512,0,2021-07-02 07:27:50+00:00,[],None
410,https://github.com/erivanpaiva/artix7-labs.git,2021-07-05 02:55:01+00:00,,0,erivanpaiva/artix7-labs,382997092,Verilog,artix7-labs,269,0,2021-07-05 02:58:19+00:00,[],None
411,https://github.com/tristayunsub/CS-STUDY.git,2021-07-05 07:09:37+00:00," 전공 공부, 네트워크, DB, OS등 면접 준비 대비용",0,tristayunsub/CS-STUDY,383047562,Verilog,CS-STUDY,196,0,2022-04-17 22:08:50+00:00,[],None
412,https://github.com/shengwenyuan/mipslite_byModelsimVerilog.git,2021-07-03 09:17:54+00:00,computer organization course design,0,shengwenyuan/mipslite_byModelsimVerilog,382573988,Verilog,mipslite_byModelsimVerilog,33,0,2021-07-08 08:40:09+00:00,[],None
413,https://github.com/pikamonvvs/PikaCPU-old.git,2021-07-04 10:07:54+00:00,A 32-bit 5-stage pipelined CPU based on PIKA Architecture,0,pikamonvvs/PikaCPU-old,382819247,Verilog,PikaCPU-old,183,0,2021-07-24 14:59:04+00:00,[],None
414,https://github.com/jhs951101/CAaL8.git,2021-06-28 12:32:42+00:00,,0,jhs951101/CAaL8,381024549,Verilog,CAaL8,6,0,2021-07-15 15:57:24+00:00,['verilog'],None
415,https://github.com/sh619/Songyu_Huang-Chisel.git,2021-06-30 02:58:41+00:00,A project on completing a small FPGA project using Chisel,0,sh619/Songyu_Huang-Chisel,381558149,Verilog,Songyu_Huang-Chisel,14444,0,2021-08-29 04:49:51+00:00,[],None
416,https://github.com/chenzhuoyu/vga-driver.git,2021-07-07 11:08:06+00:00,,0,chenzhuoyu/vga-driver,383769977,Verilog,vga-driver,9,0,2021-07-12 07:36:42+00:00,[],None
417,https://github.com/ChealyKim-Engr/ADC-Voltage-Divider-Code.git,2021-06-22 21:04:35+00:00,,0,ChealyKim-Engr/ADC-Voltage-Divider-Code,379400366,Verilog,ADC-Voltage-Divider-Code,9280,0,2021-08-31 04:37:17+00:00,[],None
418,https://github.com/pluto-ljc/IC-code-easy-.git,2021-06-22 12:35:19+00:00,My first repository on github,0,pluto-ljc/IC-code-easy-,379263628,Verilog,IC-code-easy-,2,0,2021-06-22 12:49:15+00:00,[],None
419,https://github.com/tharakarehan/Multi-Core-Processor.git,2021-06-22 13:16:49+00:00,,0,tharakarehan/Multi-Core-Processor,379276003,Verilog,Multi-Core-Processor,55,0,2021-12-21 11:31:45+00:00,[],None
420,https://github.com/NetFPGA/NRG-live.git,2021-07-04 19:12:00+00:00,NRG live repository,0,NetFPGA/NRG-live,382930062,Verilog,NRG-live,280,0,2021-12-14 17:57:12+00:00,[],None
421,https://github.com/amanuel1271/CompArchLab6.git,2021-07-04 18:21:44+00:00,,0,amanuel1271/CompArchLab6,382920789,Verilog,CompArchLab6,187,0,2022-01-03 19:23:28+00:00,[],None
422,https://github.com/sathirafdo/processor.git,2021-06-20 19:16:55+00:00, Matrix multiplier processor Verilog implementation.,1,sathirafdo/processor,378722798,Verilog,processor,22832,0,2022-01-07 21:05:13+00:00,[],None
423,https://github.com/y38y38/entropy_encode_ac_level_coefficients.git,2021-06-25 13:55:42+00:00,,0,y38y38/entropy_encode_ac_level_coefficients,380254000,Verilog,entropy_encode_ac_level_coefficients,11,0,2021-09-02 18:38:14+00:00,[],None
424,https://github.com/lakshita14/Car-Alarm-System.git,2021-06-23 14:54:24+00:00,Implementation of a Digital Car Alarm System with sequential circuit based on a set of specifications.,0,lakshita14/Car-Alarm-System,379638811,Verilog,Car-Alarm-System,2759,0,2021-07-19 12:26:20+00:00,[],None
425,https://github.com/Gseung/Microprocessor_Verilog.git,2021-06-26 10:04:00+00:00,Microprocessor Project,0,Gseung/Microprocessor_Verilog,380470184,Verilog,Microprocessor_Verilog,4,0,2021-06-26 10:30:31+00:00,[],None
426,https://github.com/luisrodriguez17/Proyecto_Microelectronica2.git,2021-06-24 18:44:41+00:00,,0,luisrodriguez17/Proyecto_Microelectronica2,380021149,Verilog,Proyecto_Microelectronica2,6215,0,2021-07-01 16:47:55+00:00,[],None
427,https://github.com/TimWu0111/Embedded-Systems.git,2021-06-25 21:04:44+00:00,,0,TimWu0111/Embedded-Systems,380353574,Verilog,Embedded-Systems,16,0,2021-08-26 17:10:58+00:00,[],None
428,https://github.com/Amulek1416/Basys3_VGA_Driver.git,2021-07-01 16:13:00+00:00,VGA display driver for Basys3 FPGA,0,Amulek1416/Basys3_VGA_Driver,382090279,Verilog,Basys3_VGA_Driver,348,0,2021-07-16 16:31:15+00:00,[],None
429,https://github.com/andrab0/CN1-mux-4-1.git,2021-07-01 16:13:00+00:00,Multiplexor 4:1 - verilog,0,andrab0/CN1-mux-4-1,382090283,Verilog,CN1-mux-4-1,2,0,2021-07-01 16:39:25+00:00,[],None
430,https://github.com/henryzhang1996/test0630.git,2021-06-30 05:17:16+00:00,test,0,henryzhang1996/test0630,381583513,Verilog,test0630,34,0,2021-06-30 06:04:08+00:00,[],None
431,https://github.com/jhs951101/CAaL1.git,2021-06-28 12:32:03+00:00,,0,jhs951101/CAaL1,381024375,Verilog,CAaL1,27,0,2021-07-15 15:57:57+00:00,['verilog'],None
432,https://github.com/ChenWendi2001/MIPS-CPU.git,2021-07-11 04:08:49+00:00,"A 5-stage pipelined MIPS processor 💻, which supports stall, forwarding, branch-not-taken and cache.",0,ChenWendi2001/MIPS-CPU,384856992,Verilog,MIPS-CPU,2376,0,2021-07-11 04:13:08+00:00,[],None
433,https://github.com/cs980407/Digital_Thermometer.git,2021-07-11 08:59:07+00:00,,0,cs980407/Digital_Thermometer,384901700,Verilog,Digital_Thermometer,6586,0,2021-07-11 10:37:41+00:00,[],None
434,https://github.com/tianao97/371final_lab6.git,2021-06-06 19:37:10+00:00,,0,tianao97/371final_lab6,374448201,Verilog,371final_lab6,12783,0,2021-06-16 03:37:29+00:00,[],None
435,https://github.com/NoSuchProcess/zet86.svn.git,2021-06-07 09:44:46+00:00,"read-only mirror of the ""Zet - the x86 (IA-32) open implementation"" SVN repository",0,NoSuchProcess/zet86.svn,374612980,Verilog,zet86.svn,447,0,2021-06-07 09:45:42+00:00,[],https://api.github.com/licenses/gpl-3.0
436,https://github.com/TQuach04/ELEN608_TAP_Controller.git,2021-06-08 10:46:52+00:00,,0,TQuach04/ELEN608_TAP_Controller,374973415,Verilog,ELEN608_TAP_Controller,403,0,2021-06-08 10:51:29+00:00,[],None
437,https://github.com/embelon/wb_hyperram_gate_level_simulation.git,2021-06-08 21:11:47+00:00,Consists gate level simulation result for hardened wrapped_wb_hyperram project.,0,embelon/wb_hyperram_gate_level_simulation,375146793,Verilog,wb_hyperram_gate_level_simulation,1967,0,2021-06-09 20:45:21+00:00,[],https://api.github.com/licenses/apache-2.0
438,https://github.com/cpxqgg/HDLbits-cpxqgg_Solution.git,2021-06-11 22:11:57+00:00,,0,cpxqgg/HDLbits-cpxqgg_Solution,376153105,Verilog,HDLbits-cpxqgg_Solution,10,0,2023-02-22 02:37:37+00:00,[],None
439,https://github.com/hvgh88/iverilog-even-sequence-generator.git,2021-06-15 03:38:29+00:00,,0,hvgh88/iverilog-even-sequence-generator,377026178,Verilog,iverilog-even-sequence-generator,99,0,2021-06-15 03:44:49+00:00,[],None
440,https://github.com/aw13422/Vending-machine-controller.git,2021-06-11 03:36:17+00:00,,0,aw13422/Vending-machine-controller,375894985,Verilog,Vending-machine-controller,1468,0,2021-06-11 03:38:25+00:00,[],None
441,https://github.com/kymmt80/MIPS_Multicycle.git,2021-06-13 17:07:01+00:00,An Implementation of MIPS processor with multicycle architecture.,0,kymmt80/MIPS_Multicycle,376597921,Verilog,MIPS_Multicycle,4,0,2022-06-18 16:04:41+00:00,[],None
442,https://github.com/harshit19980/NOC.git,2021-06-09 20:25:24+00:00,Implementation of neural net as NOC,0,harshit19980/NOC,375480712,Verilog,NOC,31,0,2021-06-09 20:36:03+00:00,[],None
443,https://github.com/Fan-01/CPU16.git,2021-06-19 01:29:15+00:00,基于Quartus的简单16位CPU（Verilog）,1,Fan-01/CPU16,378298959,,CPU16,5155,0,2021-06-19 01:29:16+00:00,[],None
444,https://github.com/marwahmh/Digital-Alarm-Clock-on-FPGA.git,2021-06-18 00:03:55+00:00,,0,marwahmh/Digital-Alarm-Clock-on-FPGA,377988831,Verilog,Digital-Alarm-Clock-on-FPGA,439,0,2021-06-18 00:05:45+00:00,[],None
445,https://github.com/KevinYoung23/Group19_MarsRover.git,2021-06-18 11:13:44+00:00,Group19 ELEC50003/50008 Mars Rover Project Repository,0,KevinYoung23/Group19_MarsRover,378125448,Verilog,Group19_MarsRover,45540,0,2022-07-14 07:52:24+00:00,[],None
446,https://github.com/arka84/Morse_translate.git,2021-06-18 03:54:50+00:00,,0,arka84/Morse_translate,378028002,Verilog,Morse_translate,24,0,2021-12-19 15:39:07+00:00,[],None
447,https://github.com/manncodes/native-core.git,2021-06-16 05:05:09+00:00,"A RISC-V core, first in Python, then in Verilog, then on FPGA.",0,manncodes/native-core,377376769,Verilog,native-core,14,0,2021-06-16 06:08:10+00:00,[],None
448,https://github.com/PAN-YI-HSUAN/2021_EDAC_analysis.git,2021-06-27 09:59:13+00:00,,0,PAN-YI-HSUAN/2021_EDAC_analysis,380705330,Verilog,2021_EDAC_analysis,33977,0,2023-12-14 02:57:00+00:00,[],None
449,https://github.com/zzfd97/h265enc_v1.0.git,2021-06-09 11:11:35+00:00,h265enc_v1.0  from fudan VIP Lab,0,zzfd97/h265enc_v1.0,375326622,,h265enc_v1.0,50935,0,2024-02-09 03:41:06+00:00,[],None
450,https://github.com/zzfd97/sdram_ov5640_an430_lcd.git,2021-06-09 11:12:05+00:00,OV5640摄像头采集图像并在TM043显示屏上显示,0,zzfd97/sdram_ov5640_an430_lcd,375326755,,sdram_ov5640_an430_lcd,717,0,2024-02-09 03:55:38+00:00,[],None
451,https://github.com/ismailcemunver-old/VerySimpleCPU.git,2021-06-15 13:49:43+00:00,,0,ismailcemunver-old/VerySimpleCPU,377179194,Verilog,VerySimpleCPU,76,0,2021-06-15 13:59:12+00:00,[],None
452,https://github.com/chmousset/wrapped_newmot.git,2021-06-10 12:39:30+00:00,,1,chmousset/wrapped_newmot,375692572,Verilog,wrapped_newmot,13714,0,2022-07-08 16:05:05+00:00,[],https://api.github.com/licenses/apache-2.0
453,https://github.com/dsanchezlo/Planti-Inador.git,2021-06-11 20:29:51+00:00,,1,dsanchezlo/Planti-Inador,376135929,Verilog,Planti-Inador,410,0,2023-02-16 23:15:55+00:00,[],None
454,https://github.com/h20200177/RISCV_ResearchPractice.git,2021-06-13 17:57:59+00:00,RISCV processor design using VERILOG ,1,h20200177/RISCV_ResearchPractice,376607975,Verilog,RISCV_ResearchPractice,12,0,2021-11-14 15:50:26+00:00,[],None
455,https://github.com/karentp/StateMachine.git,2021-06-16 03:59:38+00:00,Diseño de una máquina de estados y un multiplexor parametrizado.,0,karentp/StateMachine,377365203,Verilog,StateMachine,17,0,2021-06-23 10:39:20+00:00,[],None
456,https://github.com/Antonio-Colonna/Lab3ISA.git,2021-06-09 15:26:01+00:00,,0,Antonio-Colonna/Lab3ISA,375403035,Verilog,Lab3ISA,2469,0,2021-06-09 15:29:30+00:00,[],None
457,https://github.com/digantrastogi/Intelligent-Traffic-Controller.git,2021-06-23 08:15:56+00:00,,0,digantrastogi/Intelligent-Traffic-Controller,379529517,Verilog,Intelligent-Traffic-Controller,6602,0,2021-07-02 12:50:25+00:00,[],https://api.github.com/licenses/mit
458,https://github.com/kavishranawella/Sem_5-Matrix_Muliplier.git,2021-06-19 17:20:18+00:00,SIMD Multicore processor implementation of a custom ISA designed for a Matrix Multiplication problem.,0,kavishranawella/Sem_5-Matrix_Muliplier,378467177,Verilog,Sem_5-Matrix_Muliplier,168115,0,2022-01-11 20:21:02+00:00,[],None
459,https://github.com/RookieLT/Two-Neuron.git,2021-06-18 18:36:23+00:00,,0,RookieLT/Two-Neuron,378236856,Verilog,Two-Neuron,9,0,2021-08-16 14:45:24+00:00,[],None
460,https://github.com/TanmayD23/Car-alarm-system.git,2021-07-11 11:46:09+00:00,,0,TanmayD23/Car-alarm-system,384934405,Verilog,Car-alarm-system,3,0,2021-07-20 10:38:00+00:00,[],None
461,https://github.com/majeedullah/Stop_watch.git,2021-07-11 20:40:42+00:00,,0,majeedullah/Stop_watch,385048154,Verilog,Stop_watch,10,0,2021-07-11 20:44:51+00:00,[],None
462,https://github.com/OmPrakashSahoo416/VHDL-and-Verilog-code-files.git,2021-07-09 06:41:50+00:00,Digital Systems and design code files written in VHDL and Verilog language along with simulation links of various combinational circuits.,0,OmPrakashSahoo416/VHDL-and-Verilog-code-files,384346193,Verilog,VHDL-and-Verilog-code-files,2309,0,2021-07-09 06:57:22+00:00,[],None
463,https://github.com/IamDestruction/DualPortSynchronousRAM.git,2021-07-09 20:51:18+00:00,This is the verilog code for a 16*8 Synchronous RAM with Dual port. Where one port is for read operation while the other is for write operation,0,IamDestruction/DualPortSynchronousRAM,384548235,Verilog,DualPortSynchronousRAM,2,0,2021-07-09 21:34:42+00:00,[],None
464,https://github.com/jirayupeetakul-jay/fpgaMEMC_forCVS.git,2021-07-11 01:15:10+00:00,,0,jirayupeetakul-jay/fpgaMEMC_forCVS,384836050,Verilog,fpgaMEMC_forCVS,36,0,2021-07-11 01:16:10+00:00,[],None
465,https://github.com/antonyctyung/AlarmClock.git,2021-06-28 11:20:47+00:00,An alarm clock written in Verilog implemented on Digilent Nexys A7-100T development board,0,antonyctyung/AlarmClock,381005218,Verilog,AlarmClock,18,0,2021-06-28 12:38:04+00:00,[],https://api.github.com/licenses/gpl-3.0
466,https://github.com/ustc-pegga/homework.git,2021-07-01 05:49:57+00:00,,0,ustc-pegga/homework,381924116,Verilog,homework,78338,0,2021-07-01 05:54:32+00:00,[],None
467,https://github.com/Colin-Cai-jin/turing-machine.git,2021-07-03 12:44:03+00:00,Turing machine written C/Racket and examples,1,Colin-Cai-jin/turing-machine,382613356,Verilog,turing-machine,25,0,2023-03-07 15:01:30+00:00,[],https://api.github.com/licenses/bsd-3-clause
468,https://github.com/andrab0/CN1-mux-2-1.git,2021-07-01 16:22:28+00:00,Multiplexor 2:1 - verilog,0,andrab0/CN1-mux-2-1,382092736,Verilog,CN1-mux-2-1,2,0,2021-07-01 17:10:10+00:00,[],None
469,https://github.com/thiago-aguilar1/Mutiplier-and-Display-7-FPGA-Dataflow-Modeling.git,2021-07-02 01:29:04+00:00,Multiplicador e display de 7 segmentos usando modelagem por fluxo de dados (dataflow modeling) na ferramenta Quartus II da Altera.,0,thiago-aguilar1/Mutiplier-and-Display-7-FPGA-Dataflow-Modeling,382198287,Verilog,Mutiplier-and-Display-7-FPGA-Dataflow-Modeling,918,0,2021-07-02 21:12:42+00:00,[],None
470,https://github.com/jayasankha1010/Multicore_processor.git,2021-07-02 07:27:53+00:00,,0,jayasankha1010/Multicore_processor,382266334,Verilog,Multicore_processor,53,0,2021-07-20 13:34:45+00:00,[],None
471,https://github.com/Yosiky/tom_and_jerry.git,2021-07-06 12:27:48+00:00,Tom and Jerry,0,Yosiky/tom_and_jerry,383460858,Verilog,tom_and_jerry,7,0,2023-09-08 14:37:59+00:00,[],None
472,https://github.com/ajmac22/Sequential_Circuits_Verilog.git,2021-06-17 05:40:46+00:00,,0,ajmac22/Sequential_Circuits_Verilog,377717590,Verilog,Sequential_Circuits_Verilog,6,0,2021-06-17 05:45:20+00:00,"['verilog', 'fifo']",https://api.github.com/licenses/apache-2.0
473,https://github.com/ogozcelik/mano-basic-computer.git,2021-06-17 23:00:21+00:00,A behavioral model for Mano’s basic computer in Verilog.,1,ogozcelik/mano-basic-computer,377979518,Verilog,mano-basic-computer,308,0,2021-06-17 23:01:38+00:00,[],https://api.github.com/licenses/mit
474,https://github.com/Kyouma48596/Blum-Blum-Shub.git,2021-07-05 07:27:09+00:00,A BBS PRBG Implementation,0,Kyouma48596/Blum-Blum-Shub,383052124,Verilog,Blum-Blum-Shub,890,0,2021-10-22 15:19:04+00:00,[],None
475,https://github.com/ehtshamulhassan-lm/sample.git,2021-06-21 12:22:54+00:00,,0,ehtshamulhassan-lm/sample,378921481,Verilog,sample,5,0,2021-06-21 20:36:35+00:00,[],None
476,https://github.com/PascuMarius/Ambient-Control-Design.git,2021-07-03 09:35:00+00:00,,0,PascuMarius/Ambient-Control-Design,382577277,Verilog,Ambient-Control-Design,5,0,2021-07-03 09:51:52+00:00,[],None
477,https://github.com/KevinXu-01/WHU-Computer_Organization_and_Design_Course_Design.git,2021-07-02 15:45:22+00:00,"Course Design of Computer Organization and Design, School of Computer Science, Wuhan University",0,KevinXu-01/WHU-Computer_Organization_and_Design_Course_Design,382392472,Verilog,WHU-Computer_Organization_and_Design_Course_Design,1678,0,2021-07-02 15:47:56+00:00,[],None
478,https://github.com/jmerc9/IEEE-Floating-Point-Adder.git,2021-06-07 05:15:53+00:00,,0,jmerc9/IEEE-Floating-Point-Adder,374542651,Verilog,IEEE-Floating-Point-Adder,9,0,2021-06-07 18:29:08+00:00,[],None
479,https://github.com/HITsz-ZirconMIPS/syy.git,2021-06-08 12:11:13+00:00,,0,HITsz-ZirconMIPS/syy,374996169,Verilog,syy,56,0,2021-07-03 07:46:21+00:00,[],None
480,https://github.com/Akshay-Kaushik/Verilog.git,2021-06-07 17:11:02+00:00,,0,Akshay-Kaushik/Verilog,374743677,Verilog,Verilog,127,0,2022-01-02 12:56:44+00:00,[],None
481,https://github.com/NoncreativeUsername/4_7seg_counter.git,2021-06-08 14:49:16+00:00,counts up each second on 4 7-segment displays,0,NoncreativeUsername/4_7seg_counter,375046002,Verilog,4_7seg_counter,10,0,2021-06-08 22:28:05+00:00,[],None
482,https://github.com/reyhane-goli/ARM-Processor.git,2021-06-08 20:21:04+00:00,Pipeline implementation of  ARM processor using Verilog,0,reyhane-goli/ARM-Processor,375134784,Verilog,ARM-Processor,7,0,2021-06-08 20:50:07+00:00,[],None
483,https://github.com/LeThanhHai-1610/DE10-Standard_miniproject.git,2021-06-13 08:41:45+00:00,A project of communication between DE10 Standard FPGA board with LCD 16x2 and rheostat (ADC),0,LeThanhHai-1610/DE10-Standard_miniproject,376486798,Verilog,DE10-Standard_miniproject,30918,0,2021-08-10 02:55:21+00:00,[],None
484,https://github.com/Perriex/MIPS-pipeline.git,2021-06-13 08:31:39+00:00,,0,Perriex/MIPS-pipeline,376484102,Verilog,MIPS-pipeline,232,0,2022-02-13 06:34:01+00:00,[],None
485,https://github.com/Perriex/StackMIPS.git,2021-06-21 09:46:59+00:00,,0,Perriex/StackMIPS,378881876,Verilog,StackMIPS,96,0,2021-12-09 17:39:23+00:00,[],None
486,https://github.com/Jason-Du/DIC_FINAL.git,2021-06-22 01:34:56+00:00,,0,Jason-Du/DIC_FINAL,379108639,Verilog,DIC_FINAL,1592,0,2021-06-22 03:55:38+00:00,[],None
487,https://github.com/sadeqsheikhi/qwerty_to_7segment.git,2021-06-21 18:12:09+00:00,A Verilog Design To convert qwerty keypad signals to 7-segment screens,0,sadeqsheikhi/qwerty_to_7segment,379023250,Verilog,qwerty_to_7segment,311,0,2021-06-21 18:14:00+00:00,[],None
488,https://github.com/bzeeno/misc_fpga_projects.git,2021-06-22 00:11:58+00:00,Random FPGA projects I worked on while learning Verilog and SystemVerilog,0,bzeeno/misc_fpga_projects,379094677,Verilog,misc_fpga_projects,14,0,2021-06-22 00:13:12+00:00,[],None
489,https://github.com/jhalakrsharma/Thesis_Part2.git,2021-06-24 05:28:30+00:00,,0,jhalakrsharma/Thesis_Part2,379813477,Verilog,Thesis_Part2,128,0,2021-06-24 05:37:49+00:00,[],None
490,https://github.com/Wennim/LD-LAB-FINAL.git,2021-06-22 14:27:19+00:00,,0,Wennim/LD-LAB-FINAL,379298207,Verilog,LD-LAB-FINAL,19,0,2021-06-24 14:32:45+00:00,[],None
491,https://github.com/justahumanBox/HDL.git,2021-06-22 20:54:36+00:00,,0,justahumanBox/HDL,379398253,Verilog,HDL,25,0,2021-06-22 21:43:11+00:00,[],None
492,https://github.com/datgooner/FloatingPointALU.git,2021-06-20 02:50:14+00:00,,0,datgooner/FloatingPointALU,378544888,Verilog,FloatingPointALU,121,0,2021-06-20 02:51:42+00:00,[],None
493,https://github.com/jiru1997/Implementation-of-Single-clock-circular-FIFO-by-verilog.git,2021-06-21 01:07:08+00:00,implement of Single clock circular FIFO by verilog,0,jiru1997/Implementation-of-Single-clock-circular-FIFO-by-verilog,378770967,Verilog,Implementation-of-Single-clock-circular-FIFO-by-verilog,134,0,2021-06-21 01:33:38+00:00,[],None
494,https://github.com/steveri/fpu.git,2021-06-17 14:35:15+00:00,,1,steveri/fpu,377861288,Verilog,fpu,78,0,2021-09-16 19:54:08+00:00,[],https://api.github.com/licenses/mit
495,https://github.com/tornupnegatives/spi-controller.git,2021-06-19 20:45:38+00:00,Full SPI controller with variable speed clock,0,tornupnegatives/spi-controller,378501767,Verilog,spi-controller,56,0,2022-01-28 16:12:50+00:00,"['verilog', 'hdl', 'spi']",https://api.github.com/licenses/mit
496,https://github.com/SoujanyaSR/Dadda16x16.git,2021-06-30 18:39:42+00:00,,0,SoujanyaSR/Dadda16x16,381800765,Verilog,Dadda16x16,10,0,2021-06-30 18:49:47+00:00,[],None
497,https://github.com/SoujanyaSR/Vector-processor.git,2021-06-30 18:19:55+00:00,,0,SoujanyaSR/Vector-processor,381795996,Verilog,Vector-processor,14,0,2021-06-30 18:22:22+00:00,[],None
498,https://github.com/ytl0623/1082-Computer-Organization-ALU-Design.git,2021-07-01 13:24:19+00:00,,0,ytl0623/1082-Computer-Organization-ALU-Design,382041142,Verilog,1082-Computer-Organization-ALU-Design,1177,0,2021-07-06 05:39:18+00:00,[],None
499,https://github.com/haleykim227/csm152a.git,2021-06-11 19:28:30+00:00,"This is an accumulation of all my projects from CSM152A at UCLA, taught by TA Rajas Mhaskar  during Fall Quarter of 2020.",0,haleykim227/csm152a,376123914,Verilog,csm152a,10280,0,2021-06-11 19:34:02+00:00,[],None
500,https://github.com/ZohrehRe/Single-Cycle-MIPS.git,2021-06-11 22:29:40+00:00,,0,ZohrehRe/Single-Cycle-MIPS,376155570,Verilog,Single-Cycle-MIPS,13,0,2021-06-11 22:32:04+00:00,[],None
501,https://github.com/gdhami2/AES.git,2021-06-09 20:40:47+00:00,AES (Advanced Encryption Standard) encryption and decryption algorithm written in verilog,0,gdhami2/AES,375483937,Verilog,AES,8,0,2021-06-09 20:45:51+00:00,[],None
502,https://github.com/Anakin0607/24_Second_Basketball_Timer.git,2021-06-29 08:34:12+00:00,A timer for 24s basketball game by FPGA,0,Anakin0607/24_Second_Basketball_Timer,381294959,Verilog,24_Second_Basketball_Timer,6,0,2022-05-30 02:14:28+00:00,[],None
503,https://github.com/jhs951101/CAaL6.git,2021-06-28 12:32:30+00:00,,0,jhs951101/CAaL6,381024490,Verilog,CAaL6,3,0,2021-07-15 15:57:35+00:00,['verilog'],None
504,https://github.com/JBall1/16bit-Binary-Multiplier-with-Full-Adders.git,2021-06-29 15:27:57+00:00,Implementation Of 16- Bit Binary Multiplier By Using Full Adders in Verilog ,0,JBall1/16bit-Binary-Multiplier-with-Full-Adders,381412913,Verilog,16bit-Binary-Multiplier-with-Full-Adders,1073,0,2021-06-29 15:30:00+00:00,[],None
505,https://github.com/Praneeth122/5_stage-pipeline-MIPS_ARCHITECTURE.git,2021-06-30 01:34:49+00:00,Designed a 5- stage pipelined MIPS processor with floating-point arithmetic hardware incorporated separately.,0,Praneeth122/5_stage-pipeline-MIPS_ARCHITECTURE,381542297,Verilog,5_stage-pipeline-MIPS_ARCHITECTURE,1833,0,2021-06-30 01:56:59+00:00,[],None
506,https://github.com/hadlow/warp.git,2021-06-29 19:19:12+00:00,A Verilog implementation of the Warp computer,0,hadlow/warp,381473503,Verilog,warp,6,0,2021-07-08 20:05:23+00:00,[],None
507,https://github.com/the-brawler/ALU.git,2021-06-26 18:14:47+00:00,,1,the-brawler/ALU,380568781,Verilog,ALU,15,0,2021-07-03 14:41:30+00:00,[],None
508,https://github.com/marianah119/Proyecto-Verilog.git,2021-06-19 05:29:30+00:00,,0,marianah119/Proyecto-Verilog,378331506,Verilog,Proyecto-Verilog,4,0,2023-02-14 04:17:58+00:00,[],None
509,https://github.com/ytl0623/1092-Experiments-of-Digital-Logic-Design-Phase_II.git,2021-07-01 17:39:18+00:00,,0,ytl0623/1092-Experiments-of-Digital-Logic-Design-Phase_II,382111658,Verilog,1092-Experiments-of-Digital-Logic-Design-Phase_II,1240,0,2021-07-06 05:27:12+00:00,[],None
510,https://github.com/MolVlad/ChiselCircuits.git,2021-07-07 16:37:48+00:00,,0,MolVlad/ChiselCircuits,383863439,Verilog,ChiselCircuits,68067,0,2021-10-22 05:48:01+00:00,[],None
511,https://github.com/mehta-nitin/SNOW-3G.git,2021-07-09 19:27:36+00:00,"Hardware Implementation of the stream cipher SNOW-3G , a word-oriented stream cipher that generates a sequence of 32-bit words under the control of a 128-bit Key and a 128-bit Initialisation Variable (IV). It is the heart of the 3GPP confidentiality algorithm UEA2 and the 3GPP integrity algorithm UIA2, offering reliable security services in Universal Mobile Telecommunication System (UMTS).",0,mehta-nitin/SNOW-3G,384532789,Verilog,SNOW-3G,2042,0,2021-07-09 19:30:43+00:00,[],None
512,https://github.com/Marco-Antonio-Mares-Mejia/Digital_Design_Mano.git,2021-07-05 16:44:13+00:00,Ejercicios de Verilog del libro Diseño Digital por Morris Mano.,0,Marco-Antonio-Mares-Mejia/Digital_Design_Mano,383206488,Verilog,Digital_Design_Mano,13,0,2021-07-22 15:21:39+00:00,[],None
513,https://github.com/jirayupeetakul-jay/fpgaIntraPrediction_forCVS.git,2021-07-11 01:11:16+00:00,,0,jirayupeetakul-jay/fpgaIntraPrediction_forCVS,384835402,Verilog,fpgaIntraPrediction_forCVS,1223,0,2021-07-11 01:14:25+00:00,[],None
514,https://github.com/zy618/Knapsack_problem_verilog.git,2021-07-08 07:16:00+00:00,,0,zy618/Knapsack_problem_verilog,384035728,Verilog,Knapsack_problem_verilog,9,0,2021-07-10 05:26:54+00:00,[],None
515,https://github.com/Yosiky/space_ship.git,2021-07-06 12:23:43+00:00,Game about ship in space,0,Yosiky/space_ship,383459687,Verilog,space_ship,5,0,2023-09-08 14:37:39+00:00,[],None
516,https://github.com/jellybeanist/TOBB_ELE.git,2021-07-08 07:08:09+00:00,Projects that I did during my university life. For academic purposes.,0,jellybeanist/TOBB_ELE,384033672,Verilog,TOBB_ELE,49102,0,2021-07-08 10:35:55+00:00,[],None
517,https://github.com/andrewpeck/fpga_max_test.git,2021-07-08 13:28:18+00:00,,0,andrewpeck/fpga_max_test,384133637,Verilog,fpga_max_test,3,0,2021-07-08 13:38:01+00:00,[],None
518,https://github.com/mozerpol/NotesFromLearning.git,2021-06-25 09:02:36+00:00,"I'll post here notes, that I make while studying from various websites, newspapers or books",0,mozerpol/NotesFromLearning,380182639,Verilog,NotesFromLearning,4104,0,2021-12-26 21:45:47+00:00,[],None
519,https://github.com/pratyush48/Project_Centroid.git,2021-06-09 21:22:55+00:00,Implementing centroid algorithm on basys3,0,pratyush48/Project_Centroid,375492539,Verilog,Project_Centroid,320,0,2021-06-09 21:28:36+00:00,[],None
520,https://github.com/brsf11/RealTank2021.git,2021-06-10 03:55:17+00:00,A BATTLE CITY like game console implemented on Cortex-M0 based SoC,0,brsf11/RealTank2021,375563342,Verilog,RealTank2021,487,0,2021-06-17 03:04:34+00:00,[],None
521,https://github.com/MaxMorning/MIPS54MultiCycle.git,2021-06-18 08:05:14+00:00,A MIPS CPU without pipeline that support 54 basic instructions,0,MaxMorning/MIPS54MultiCycle,378078786,Verilog,MIPS54MultiCycle,96,0,2022-06-04 07:31:34+00:00,[],https://api.github.com/licenses/mit
522,https://github.com/Jason-Du/DIC_HW5V2.git,2021-06-23 17:25:48+00:00,,0,Jason-Du/DIC_HW5V2,379680408,Verilog,DIC_HW5V2,2996,0,2021-06-23 19:26:45+00:00,[],None
523,https://github.com/niketramani1/RTL-Design_VSDIAT_Sky130_Workshop.git,2021-06-23 19:57:31+00:00,,1,niketramani1/RTL-Design_VSDIAT_Sky130_Workshop,379715494,Verilog,RTL-Design_VSDIAT_Sky130_Workshop,36243,0,2021-06-27 01:24:50+00:00,[],None
524,https://github.com/yusuftalhaerdem/modelsim_verilog.git,2021-06-13 10:37:19+00:00,CSE_3038_Project_2,0,yusuftalhaerdem/modelsim_verilog,376512680,Verilog,modelsim_verilog,1058,0,2021-10-18 22:34:45+00:00,[],None
525,https://github.com/michalkalita72/Pipeline-Microprocessor.git,2021-06-24 00:55:42+00:00,A pipelined microprocessor(meaning assembly level instructions can be executed in parallel) using the RV32I instruction set and support for hazard detection and data forwarding as well as a basic cache system. Advanced features such as pipeline caches and multi-level caches are in progress.,0,michalkalita72/Pipeline-Microprocessor,379765450,Verilog,Pipeline-Microprocessor,29205,0,2021-06-24 01:23:26+00:00,[],None
526,https://github.com/CollinIcer/ChiselFFT_REVISED.git,2021-06-24 13:02:57+00:00,,0,CollinIcer/ChiselFFT_REVISED,379926815,Verilog,ChiselFFT_REVISED,480,0,2022-06-08 16:17:25+00:00,[],None
527,https://github.com/metal-soul/verilog-projects.git,2021-06-26 13:40:45+00:00,,0,metal-soul/verilog-projects,380510895,Verilog,verilog-projects,216,0,2021-06-26 13:40:54+00:00,[],None
528,https://github.com/ShenTengTu/v-i18n.git,2021-06-06 13:23:45+00:00,Internationalization services for V Programming Language,0,ShenTengTu/v-i18n,374366393,Verilog,v-i18n,36,0,2021-06-15 10:47:22+00:00,"['vlang', 'v-module', 'v']",https://api.github.com/licenses/mit
529,https://github.com/CansWang/precheck_debug_empty_wrapper_with_routing.git,2021-06-19 18:41:48+00:00,,0,CansWang/precheck_debug_empty_wrapper_with_routing,378482074,Verilog,precheck_debug_empty_wrapper_with_routing,21979,0,2021-06-19 19:03:41+00:00,[],https://api.github.com/licenses/apache-2.0
530,https://github.com/mnkaaa112/university.git,2021-06-20 14:11:50+00:00,,0,mnkaaa112/university,378661513,Verilog,university,21,0,2021-07-07 01:10:46+00:00,[],None
531,https://github.com/Amy-Liao/FPGAboard-Pong-Game.git,2021-06-20 15:30:33+00:00,This is an implementation of pong game on Basys 3 Artix-7 FPGA board,0,Amy-Liao/FPGAboard-Pong-Game,378679151,Verilog,FPGAboard-Pong-Game,124,0,2021-09-08 10:27:57+00:00,[],None
532,https://github.com/MarcosFagli/TCC-Filtro_Stateless.git,2021-06-24 18:31:43+00:00,Programação de um filtro stateless definido em Bluespec,0,MarcosFagli/TCC-Filtro_Stateless,380018252,Verilog,TCC-Filtro_Stateless,1801,0,2021-06-25 14:57:24+00:00,[],https://api.github.com/licenses/mit
533,https://github.com/timwang2001/24sec_timer_for_basketball.git,2021-06-29 14:16:32+00:00,a FPGA timer for basketball match,0,timwang2001/24sec_timer_for_basketball,381389970,Verilog,24sec_timer_for_basketball,5,0,2021-06-29 15:21:53+00:00,[],None
534,https://github.com/DamithDilhan/co224-cpu.git,2021-06-29 14:12:22+00:00,"8-bit single cycle CPU based on Harvard architecture with 32-bit instruction word. Support add, sub, and, or, j, beq, mov , loadi .",0,DamithDilhan/co224-cpu,381388599,Verilog,co224-cpu,151,0,2021-09-18 06:20:50+00:00,[],None
535,https://github.com/sidhantp1906/RV32I.git,2021-07-11 09:49:01+00:00,"I  worked personally on designing rv32i processor for some of the instructions like add,addi,sub,etc..",0,sidhantp1906/RV32I,384911296,Verilog,RV32I,2291,0,2022-09-15 09:43:47+00:00,"['verilog', 'riscv32', 'rv32i', 'core', 'cocotb', 'python3', 'systemverilog']",https://api.github.com/licenses/mit
536,https://github.com/Artsadthavud/Code.git,2021-07-11 16:31:02+00:00,,0,Artsadthavud/Code,384999096,Verilog,Code,1,0,2021-07-11 16:31:10+00:00,[],None
537,https://github.com/Processor-Design/matrix-multiplication.git,2021-06-28 16:43:26+00:00,,0,Processor-Design/matrix-multiplication,381099814,Verilog,matrix-multiplication,1393,0,2022-01-09 17:26:46+00:00,[],None
538,https://github.com/francescasilvano/LLContest.git,2021-07-02 13:50:52+00:00,,1,francescasilvano/LLContest,382360895,Verilog,LLContest,86265,0,2021-09-10 11:04:16+00:00,[],None
539,https://github.com/guanhao145/alpha_pipeline.git,2021-07-05 18:51:03+00:00,"simple pipeline, use a subset of the Alpha ISA",0,guanhao145/alpha_pipeline,383237113,Verilog,alpha_pipeline,38,0,2021-07-08 04:51:05+00:00,[],None
540,https://github.com/Peegggy/cpen311-lab2.git,2021-07-09 18:54:03+00:00,,0,Peegggy/cpen311-lab2,384526161,Verilog,cpen311-lab2,1523,0,2021-07-09 19:08:41+00:00,[],None
541,https://github.com/aurthurtang/verilog_pattern_match.git,2021-07-11 05:40:18+00:00,,0,aurthurtang/verilog_pattern_match,384869015,Verilog,verilog_pattern_match,1,0,2021-07-11 05:44:59+00:00,[],None
542,https://github.com/yangtao2019yt/my_oscpu.git,2021-07-10 13:28:50+00:00,project for core design learning,0,yangtao2019yt/my_oscpu,384704586,Verilog,my_oscpu,5,0,2021-07-10 14:05:14+00:00,[],None
543,https://github.com/GokselOnal/ProjectCPU.git,2021-06-13 18:18:22+00:00,Project of CS240-Computer Architecture course at Özyeğin University,0,GokselOnal/ProjectCPU,376611990,Verilog,ProjectCPU,11,0,2021-07-21 07:59:21+00:00,[],None
544,https://github.com/CW-B-W/DIC-Frequency_Analysis_System.git,2021-06-14 08:45:37+00:00,,0,CW-B-W/DIC-Frequency_Analysis_System,376758706,Verilog,DIC-Frequency_Analysis_System,3960,0,2021-07-02 19:06:22+00:00,[],None
545,https://github.com/sivadurga-web/Y-86-processor.git,2021-06-07 12:25:00+00:00,Y-86 processor that executes  Y-86 instruction set.,0,sivadurga-web/Y-86-processor,374656854,Verilog,Y-86-processor,869,0,2021-06-07 12:56:09+00:00,[],None
546,https://github.com/fuwuseba/Car_Dash.git,2021-06-16 19:30:26+00:00,,0,fuwuseba/Car_Dash,377606361,Verilog,Car_Dash,1137,0,2021-06-16 20:17:18+00:00,[],None
547,https://github.com/Ahmed-H300/spi-interface_verilog.git,2021-07-04 19:01:09+00:00,project for college for  advanced logic desgin course,0,Ahmed-H300/spi-interface_verilog,382927942,Verilog,spi-interface_verilog,100,0,2021-07-04 19:21:40+00:00,[],None
548,https://github.com/Jothi-krishnan/LightWeightDES-decryption.git,2021-07-03 05:58:07+00:00,,0,Jothi-krishnan/LightWeightDES-decryption,382537844,Verilog,LightWeightDES-decryption,47,0,2022-01-16 15:14:27+00:00,[],None
549,https://github.com/lukemyh123/ECE201A_Circuit_Partition.git,2021-07-02 17:05:03+00:00,,0,lukemyh123/ECE201A_Circuit_Partition,382412326,Verilog,ECE201A_Circuit_Partition,338,0,2021-07-02 17:06:25+00:00,[],None
550,https://github.com/samrajdhillon/ad9467_kc705.git,2021-06-30 14:54:47+00:00,,0,samrajdhillon/ad9467_kc705,381738287,Verilog,ad9467_kc705,328,0,2023-04-23 21:24:15+00:00,[],None
551,https://github.com/andrab0/CN1-Automat_bauturi.git,2021-07-01 17:19:19+00:00,Automat bauturi care elibereaza o sticla de suc la introducerea a 3 lei si elibereaza rest pentru bancnotele de 5 si 10 lei,0,andrab0/CN1-Automat_bauturi,382107012,Verilog,CN1-Automat_bauturi,71,0,2021-07-01 17:26:04+00:00,[],None
552,https://github.com/Bhavan-Naik/16bit_barrel_shifter.git,2021-07-01 05:59:26+00:00,Project to Design and Implement a 16-bit Barrel Shifter using Verilog.,2,Bhavan-Naik/16bit_barrel_shifter,381926035,Verilog,16bit_barrel_shifter,836,0,2023-01-22 14:02:56+00:00,"['verilog', 'ddco', 'gtkwave', 'vcd']",None
553,https://github.com/karentp/PipelineExercise.git,2021-07-07 22:25:22+00:00,Pipeline Exercise for simple adder.,0,karentp/PipelineExercise,383938136,Verilog,PipelineExercise,7,0,2021-07-08 03:48:54+00:00,[],None
554,https://github.com/TACO-compressionHardware/RLE_decompression.git,2021-07-09 11:44:52+00:00,"RLE is one of the earliest codings for compression purposes, this project aims for hardware to decompress faster and more efficient (compare to software methods)",0,TACO-compressionHardware/RLE_decompression,384419898,Verilog,RLE_decompression,200,0,2021-09-10 19:05:24+00:00,[],https://api.github.com/licenses/gpl-3.0
555,https://github.com/HosseinZaredar-AUT/Logic-Circuits.git,2021-07-09 06:38:31+00:00,"Logic Circuits Lab Project, Fall 2018",0,HosseinZaredar-AUT/Logic-Circuits,384345412,Verilog,Logic-Circuits,5,0,2021-07-10 13:50:29+00:00,[],None
556,https://github.com/rota505/TD4.git,2021-06-13 07:12:58+00:00,,0,rota505/TD4,376467409,Verilog,TD4,1294,0,2021-07-10 07:30:29+00:00,[],None
557,https://github.com/abdelaziz-mahdy/LC3_test_again.git,2021-07-07 20:19:24+00:00,,0,abdelaziz-mahdy/LC3_test_again,383915514,Verilog,LC3_test_again,155,0,2022-11-20 23:13:10+00:00,[],None
558,https://github.com/tharakaWijesundara/FPGA-Processor-design.git,2021-06-08 05:59:03+00:00,,0,tharakaWijesundara/FPGA-Processor-design,374898246,Verilog,FPGA-Processor-design,5193,0,2022-01-09 19:46:01+00:00,[],None
559,https://github.com/alu0101139456/DDP-ProcessorDesign.git,2021-06-08 17:02:46+00:00,,0,alu0101139456/DDP-ProcessorDesign,375085174,Verilog,DDP-ProcessorDesign,6590,0,2022-03-23 09:50:02+00:00,[],None
560,https://github.com/zylinux/computerV8.git,2021-06-18 17:18:40+00:00,This is a really cool project.  Let's build a computer !!!,0,zylinux/computerV8,378219988,Verilog,computerV8,45996,0,2021-06-19 05:07:46+00:00,[],None
561,https://github.com/jhs951101/CAaL2.git,2021-06-28 12:32:08+00:00,,0,jhs951101/CAaL2,381024394,Verilog,CAaL2,1,0,2021-07-15 15:57:51+00:00,['verilog'],None
562,https://github.com/priti07/Uart.git,2021-06-30 07:38:47+00:00,Implementation of UART using Verilog HDL,0,priti07/Uart,381616155,Verilog,Uart,3,0,2021-07-24 12:50:21+00:00,[],None
563,https://github.com/vaksick/fpga-img.git,2021-06-30 09:53:59+00:00,Implementing image on FPGA,0,vaksick/fpga-img,381653897,Verilog,fpga-img,96,0,2021-06-30 10:08:27+00:00,[],None
564,https://github.com/Akashay-Singla/RISC-V.git,2021-06-16 17:37:08+00:00,,0,Akashay-Singla/RISC-V,377578852,Verilog,RISC-V,5823,0,2021-08-12 19:30:08+00:00,[],None
565,https://github.com/prafulla8/riscv.git,2021-06-16 11:44:29+00:00,,0,prafulla8/riscv,377476559,Verilog,riscv,2988,0,2021-07-06 07:22:57+00:00,[],None
566,https://github.com/stream3715/nyusitsu_fpga.git,2021-06-16 12:38:49+00:00,,0,stream3715/nyusitsu_fpga,377491542,Verilog,nyusitsu_fpga,330499,0,2021-10-26 16:02:57+00:00,[],None
567,https://github.com/bhaveshbareja/Processor.git,2021-06-16 05:45:15+00:00,All the HDL code for a Processor,0,bhaveshbareja/Processor,377384264,Verilog,Processor,3,0,2021-06-16 05:47:29+00:00,[],None
568,https://github.com/ISHKAFEL09/fpga_prj.git,2021-06-16 14:18:17+00:00,My fpga project based on AX7035 board,0,ISHKAFEL09/fpga_prj,377521263,Verilog,fpga_prj,314,0,2021-07-05 15:48:33+00:00,[],https://api.github.com/licenses/unlicense
569,https://github.com/alexzhang/hdl-modules.git,2021-06-26 23:38:55+00:00,,0,alexzhang/hdl-modules,380615189,Verilog,hdl-modules,2,0,2021-10-30 21:54:18+00:00,[],None
570,https://github.com/hiep2910/Trapezoidal-Filter---Verilog-HDL.git,2021-06-27 05:48:34+00:00,,0,hiep2910/Trapezoidal-Filter---Verilog-HDL,380661536,Verilog,Trapezoidal-Filter---Verilog-HDL,3,0,2021-07-03 02:46:02+00:00,[],None
571,https://github.com/maho0705/arch21.git,2021-06-29 23:41:52+00:00,,0,maho0705/arch21,381523635,Verilog,arch21,6,0,2021-06-29 23:49:25+00:00,[],None
572,https://github.com/linuxjbl/Altera_Nios.git,2021-06-30 18:57:16+00:00,,0,linuxjbl/Altera_Nios,381804789,Verilog,Altera_Nios,73409,0,2021-07-04 20:44:22+00:00,[],None
573,https://github.com/JeterHwang/109-2-Digital-System-Design-Final-Project.git,2021-06-28 09:09:59+00:00,,0,JeterHwang/109-2-Digital-System-Design-Final-Project,380971845,Verilog,109-2-Digital-System-Design-Final-Project,11490,0,2021-06-28 13:58:26+00:00,[],None
574,https://github.com/pasxn/rtl-design-and-verification.git,2021-06-11 19:47:03+00:00,Studying RTL design and verification,0,pasxn/rtl-design-and-verification,376127953,Verilog,rtl-design-and-verification,4513,0,2022-10-27 16:22:36+00:00,[],None
575,https://github.com/ToruNiina/brainfxck-circuit.git,2021-06-14 16:07:01+00:00,run brainfxck on FPGA,0,ToruNiina/brainfxck-circuit,376882588,Verilog,brainfxck-circuit,12,0,2021-06-14 17:02:36+00:00,"['verilog', 'brainfuck']",https://api.github.com/licenses/mit
576,https://github.com/adelmaek/Verilog-Testbenches.git,2021-06-15 21:59:46+00:00,,0,adelmaek/Verilog-Testbenches,377303198,Verilog,Verilog-Testbenches,99,0,2021-06-19 20:58:44+00:00,[],None
577,https://github.com/siddhantv10/karatsuba.git,2021-06-25 14:27:24+00:00,,0,siddhantv10/karatsuba,380263054,Verilog,karatsuba,10068,0,2021-09-21 16:50:24+00:00,[],None
578,https://github.com/sowmya-gunji/2.Distributed-Arithmetic-for-large-sizes-.git,2021-06-06 13:21:14+00:00,,0,sowmya-gunji/2.Distributed-Arithmetic-for-large-sizes-,374365840,Verilog,2.Distributed-Arithmetic-for-large-sizes-,1,0,2021-06-06 13:27:18+00:00,[],None
579,https://github.com/amirshmul/Round_Rubin_Arbiter.git,2021-06-21 10:31:07+00:00,,0,amirshmul/Round_Rubin_Arbiter,378893373,,Round_Rubin_Arbiter,90,0,2021-08-20 15:16:26+00:00,[],None
580,https://github.com/gorv02/des-project-ECN104.git,2021-06-21 13:09:59+00:00,ECN104 Course Project : Implementation of Light-Weight DES (Data Encryption Standard) algorithm on FPGA board using Verilog hardware coding (only decryption part).,2,gorv02/des-project-ECN104,378934628,Verilog,des-project-ECN104,56,0,2022-12-01 09:22:11+00:00,"['fpga', 'hardware']",None
581,https://github.com/Cris-GY/ADC0809-FPGA.git,2021-07-08 15:59:19+00:00,,0,Cris-GY/ADC0809-FPGA,384178214,Verilog,ADC0809-FPGA,2,0,2021-07-09 09:09:03+00:00,[],None
582,https://github.com/Sheelu-98/RISC-Processor.git,2021-07-11 10:54:07+00:00,,0,Sheelu-98/RISC-Processor,384924657,Verilog,RISC-Processor,13,0,2021-07-11 10:57:04+00:00,[],None
583,https://github.com/hn957/ALU-FPGA.git,2021-07-09 08:01:00+00:00,Verilog project for an ALU ,0,hn957/ALU-FPGA,384365437,Verilog,ALU-FPGA,4,0,2021-07-09 08:02:25+00:00,[],None
584,https://github.com/WeLoveCAD/Tic-Tac-Toe.git,2021-07-11 12:32:52+00:00,Design of Tic Tac Toe game implemented on CPLD,0,WeLoveCAD/Tic-Tac-Toe,384943333,Verilog,Tic-Tac-Toe,1073,0,2021-07-22 15:11:26+00:00,[],None
585,https://github.com/andrab0/CN1-Carry_Look_Ahead_Adder.git,2021-07-01 17:31:05+00:00,CLA Adder - verilog,0,andrab0/CN1-Carry_Look_Ahead_Adder,382109788,Verilog,CN1-Carry_Look_Ahead_Adder,2,0,2021-07-01 17:32:09+00:00,[],None
586,https://github.com/1brahimsaid/eggtimer.git,2021-07-08 21:25:44+00:00,"Verilog (HDL) code combining counters, finite state machines, encoders, registers and logic to build a custom FPGA based Egg Timer. Additional features like stopwatch and alarm.",0,1brahimsaid/eggtimer,384251868,Verilog,eggtimer,13,0,2022-11-19 22:03:23+00:00,[],None
587,https://github.com/lakshita14/Shortest-Path-Algorithm.git,2021-07-05 08:13:36+00:00,Implementation of shortest path algorithm in Verilog.,0,lakshita14/Shortest-Path-Algorithm,383064650,Verilog,Shortest-Path-Algorithm,1750,0,2021-07-19 12:23:15+00:00,[],None
588,https://github.com/Sakshith-1913/Voting-Machine-using-zynq.git,2021-07-05 13:22:57+00:00,Designed a Simple Voting Machine using FPGAs with Verilog HDL and Vivado,0,Sakshith-1913/Voting-Machine-using-zynq,383148983,Verilog,Voting-Machine-using-zynq,163,0,2021-07-05 13:33:10+00:00,[],None
589,https://github.com/johnMamish/verilog-common.git,2021-07-06 02:42:25+00:00,Verilog odds-and-ends that I find myself reusing in different hardware designs,0,johnMamish/verilog-common,383319002,Verilog,verilog-common,7,0,2021-07-06 05:46:33+00:00,[],None
590,https://github.com/hao310rui140326/nvdla_hw.git,2021-07-07 01:50:21+00:00,,0,hao310rui140326/nvdla_hw,383644247,Verilog,nvdla_hw,17907,0,2021-07-30 01:54:13+00:00,[],
591,https://github.com/mohammadmusawer/dedicated-microprocessor.git,2021-07-03 14:32:20+00:00,,0,mohammadmusawer/dedicated-microprocessor,382636358,Verilog,dedicated-microprocessor,21,0,2022-03-04 02:03:47+00:00,[],None
592,https://github.com/We-Union/NUAA-CPU.git,2021-06-07 13:10:40+00:00,南航的机组实验,0,We-Union/NUAA-CPU,374670455,Verilog,NUAA-CPU,1364,0,2021-06-07 17:38:01+00:00,[],None
593,https://github.com/jhs951101/CAaL4.git,2021-06-28 12:32:20+00:00,,0,jhs951101/CAaL4,381024451,Verilog,CAaL4,3,0,2021-07-15 15:57:41+00:00,['verilog'],None
594,https://github.com/angithub34530/AN_Scripts.git,2021-06-28 14:19:27+00:00,,0,angithub34530/AN_Scripts,381057236,Verilog,AN_Scripts,43,0,2021-06-28 14:21:24+00:00,[],None
595,https://github.com/y38y38/bitmask.git,2021-06-06 10:14:32+00:00,,0,y38y38/bitmask,374328034,Verilog,bitmask,1,0,2021-06-06 10:22:27+00:00,[],None
596,https://github.com/mario1D240/test5.git,2021-06-06 07:16:21+00:00,,0,mario1D240/test5,374293825,Verilog,test5,79651,0,2021-06-06 07:18:36+00:00,[],https://api.github.com/licenses/gpl-2.0
597,https://github.com/wbbbbbb123/Asynchronous-fifo-ping-pong-operation-design.git,2021-06-08 02:24:44+00:00,Config files for my GitHub profile.,0,wbbbbbb123/Asynchronous-fifo-ping-pong-operation-design,374856295,Verilog,Asynchronous-fifo-ping-pong-operation-design,23,0,2022-08-08 13:44:09+00:00,"['config', 'github-config']",None
598,https://github.com/jiru1997/Design-of-multi-channel-data-formater.git,2021-06-21 01:28:08+00:00,Design of multi channel data formater,0,jiru1997/Design-of-multi-channel-data-formater,378774285,Verilog,Design-of-multi-channel-data-formater,11,0,2021-06-21 01:32:45+00:00,[],None
599,https://github.com/zulaalal/DonanimTanimlama.git,2021-06-26 12:58:57+00:00,,0,zulaalal/DonanimTanimlama,380502271,Verilog,DonanimTanimlama,10,0,2022-01-16 21:28:45+00:00,[],None
600,https://github.com/buddhiheshan/single-cycle-cpu.git,2021-06-25 03:22:20+00:00,,0,buddhiheshan/single-cycle-cpu,380112375,Verilog,single-cycle-cpu,369,0,2021-07-08 04:58:42+00:00,[],None
601,https://github.com/ChealyKim-Engr/XADC-Pot-IP-Code.git,2021-06-23 03:18:19+00:00,,0,ChealyKim-Engr/XADC-Pot-IP-Code,379465899,Verilog,XADC-Pot-IP-Code,11,0,2021-06-23 03:20:39+00:00,[],None
602,https://github.com/vaksick/langtons_ant.git,2021-06-29 14:32:22+00:00,Implementing Langton's Ant on FPGA,0,vaksick/langtons_ant,381395254,Verilog,langtons_ant,21,0,2021-06-29 15:44:28+00:00,[],None
603,https://github.com/igoxy/PBL3.git,2021-06-21 23:41:03+00:00,"Equipe 4: Cícero, Igor e Joanderson",0,igoxy/PBL3,379089930,Verilog,PBL3,95556,0,2021-06-22 01:37:38+00:00,[],None
604,https://github.com/AnjaliRana20/Computer-Hardware-and-Organization-CS220.git,2021-06-21 16:17:31+00:00,,0,AnjaliRana20/Computer-Hardware-and-Organization-CS220,378992347,Verilog,Computer-Hardware-and-Organization-CS220,478,0,2021-06-21 16:57:02+00:00,[],None
605,https://github.com/santaboi/sequence_detector-FSM-.git,2021-06-21 14:47:45+00:00,,0,santaboi/sequence_detector-FSM-,378965118,Verilog,sequence_detector-FSM-,914,0,2021-06-22 00:10:27+00:00,[],None
606,https://github.com/aurthurtang/debounce_digital_circuit.git,2021-06-30 23:21:55+00:00,This is a simple debounce circuit that use to filter out all the unnecessary switching from push of a button/switcher,0,aurthurtang/debounce_digital_circuit,381856024,Verilog,debounce_digital_circuit,2,0,2021-06-30 23:22:34+00:00,[],None
607,https://github.com/iitkgpshubham/HDL_Modelling_verilog.git,2021-06-29 04:19:42+00:00,HDL modelling Verilog,1,iitkgpshubham/HDL_Modelling_verilog,381236897,Verilog,HDL_Modelling_verilog,141,0,2021-07-02 10:08:50+00:00,[],None
608,https://github.com/egegonul/traffic-light-control.git,2021-07-06 11:57:06+00:00,,0,egegonul/traffic-light-control,383452143,Verilog,traffic-light-control,1,0,2021-07-06 11:57:37+00:00,[],None
609,https://github.com/LoeWHJ/uart.git,2021-07-06 10:27:02+00:00,,0,LoeWHJ/uart,383428842,Verilog,uart,2,0,2021-07-06 10:34:35+00:00,[],None
610,https://github.com/hn957/Vending-Machine-FPGA.git,2021-07-09 07:57:02+00:00,Verilog project to create a vending machine control on a FPGA board,0,hn957/Vending-Machine-FPGA,384364447,Verilog,Vending-Machine-FPGA,6,0,2021-07-09 07:59:22+00:00,[],None
611,https://github.com/tishi43/div.git,2021-07-01 02:08:56+00:00,,1,tishi43/div,381882801,Verilog,div,108,0,2021-07-14 02:21:04+00:00,[],None
612,https://github.com/ErickHDdS/Processador-LAOC-II.git,2021-07-01 18:36:35+00:00,Prática II implementada na disciplina de Laboratório de Arquitetura e Organização de Computadores II do curso de Engenharia de Computação - CEFET/MG,2,ErickHDdS/Processador-LAOC-II,382124695,Verilog,Processador-LAOC-II,16679,0,2021-08-23 13:07:36+00:00,[],None
613,https://github.com/Leejunhee17/EE303.git,2021-07-06 07:23:19+00:00,,0,Leejunhee17/EE303,383377686,Verilog,EE303,1372,0,2021-07-06 07:24:12+00:00,[],None
614,https://github.com/aking-1708/Udp_stack.git,2021-06-18 12:36:38+00:00,,0,aking-1708/Udp_stack,378145466,Verilog,Udp_stack,1366,0,2021-06-18 12:51:37+00:00,[],None
615,https://github.com/pranjal-mittal0/NoC_Router.git,2021-06-20 12:11:52+00:00,.,0,pranjal-mittal0/NoC_Router,378636779,Verilog,NoC_Router,8,0,2022-03-11 06:06:17+00:00,[],https://api.github.com/licenses/mit
616,https://github.com/microSharjeel/Timer.git,2021-06-15 19:43:47+00:00,Timer integrated with iob-soc system,0,microSharjeel/Timer,377276262,Verilog,Timer,17246,0,2021-06-15 19:46:06+00:00,[],https://api.github.com/licenses/mit
617,https://github.com/unal-edigital1-lab/wp01-entregafinal-grupo-06.git,2021-06-09 17:10:47+00:00,wp01-testvga-grupo-6 created by GitHub Classroom,1,unal-edigital1-lab/wp01-entregafinal-grupo-06,375432660,Verilog,wp01-entregafinal-grupo-06,105273,0,2021-10-20 17:15:47+00:00,[],None
618,https://github.com/MarianaVargas12/Proyectotaller.git,2021-06-16 18:45:58+00:00,,0,MarianaVargas12/Proyectotaller,377595999,Verilog,Proyectotaller,346,0,2021-06-16 19:04:46+00:00,[],None
619,https://github.com/ogozcelik/ALU-verilog.git,2021-06-17 22:53:39+00:00,"Arithmetic Logic Unit implementation in Verilog HDL. This ALU can do operations like Arithmetic, Boolian, Comparison, Shifting.",0,ogozcelik/ALU-verilog,377978580,Verilog,ALU-verilog,6,0,2021-06-17 22:54:35+00:00,[],https://api.github.com/licenses/mit
620,https://github.com/JosePablo-CamachoCerdas/Proyecto2-Microelectronica.git,2021-06-19 18:15:38+00:00,Repositorio que representa la arquitectura de una función hash para el curso de Microelectrónica.,1,JosePablo-CamachoCerdas/Proyecto2-Microelectronica,378477362,Verilog,Proyecto2-Microelectronica,15035,0,2021-07-14 17:18:28+00:00,[],None
621,https://github.com/vn218/image_processing.git,2021-06-19 21:02:05+00:00,,0,vn218/image_processing,378503945,Verilog,image_processing,30,0,2021-08-01 06:52:38+00:00,[],None
622,https://github.com/hoenza/CALab-Final-Exam.git,2021-06-13 13:19:20+00:00,This repo is for Final Exam of CALab in Spring 2021,0,hoenza/CALab-Final-Exam,376548851,Verilog,CALab-Final-Exam,31,0,2021-08-13 17:57:14+00:00,[],None
623,https://github.com/Anubhav3084/KRSSG-FPGA-work.git,2021-06-13 11:15:06+00:00,This repository contains all the KRSSG Verilog files that I have worked upon.,1,Anubhav3084/KRSSG-FPGA-work,376521158,Verilog,KRSSG-FPGA-work,21,0,2022-07-13 07:08:36+00:00,[],None
624,https://github.com/IamDestruction/I2C_Master_Verilog.git,2021-06-24 22:24:45+00:00,Designing and implementation of I2C master in verilog.,0,IamDestruction/I2C_Master_Verilog,380064057,Verilog,I2C_Master_Verilog,17,0,2021-07-08 17:31:39+00:00,[],https://api.github.com/licenses/gpl-3.0
625,https://github.com/deepanshu761999/traffic-cntlr.git,2021-06-25 02:55:16+00:00,,1,deepanshu761999/traffic-cntlr,380107521,Verilog,traffic-cntlr,35,0,2022-03-12 10:18:34+00:00,[],https://api.github.com/licenses/mit
626,https://github.com/jstraughan21/university-projects.git,2021-06-08 02:53:51+00:00,This repository contains source files from projects completed in undergrad courses. ,0,jstraughan21/university-projects,374862271,Verilog,university-projects,30,0,2021-06-08 03:17:59+00:00,[],None
627,https://github.com/ANWESH009/TIBURON_FPGA.git,2021-06-06 03:24:29+00:00,,0,ANWESH009/TIBURON_FPGA,374258440,Verilog,TIBURON_FPGA,25,0,2021-07-23 05:10:24+00:00,[],None
628,https://github.com/justahumanBox/ISE.git,2021-06-23 05:23:39+00:00,,0,justahumanBox/ISE,379488481,Verilog,ISE,1907,0,2021-06-23 05:25:08+00:00,[],None
629,https://github.com/lidongzegit/elevator_2floor.git,2021-06-24 10:48:24+00:00,简易电梯控制系统的设计,1,lidongzegit/elevator_2floor,379891681,Verilog,elevator_2floor,622,0,2021-06-27 02:47:26+00:00,[],None
630,https://github.com/keshan99/Design-of-a-single-cycle-MIPS-processor.git,2021-06-20 04:34:39+00:00,,0,keshan99/Design-of-a-single-cycle-MIPS-processor,378558819,Verilog,Design-of-a-single-cycle-MIPS-processor,111,0,2021-06-22 16:01:19+00:00,[],None
631,https://github.com/KWC1/RTLs.git,2021-06-19 04:46:55+00:00,,0,KWC1/RTLs,378325310,Verilog,RTLs,49,0,2021-06-19 04:49:42+00:00,[],https://api.github.com/licenses/gpl-3.0
632,https://github.com/jhs951101/CAaL5.git,2021-06-28 13:16:59+00:00,,0,jhs951101/CAaL5,381038026,Verilog,CAaL5,2,0,2021-07-15 15:57:18+00:00,['verilog'],None
633,https://github.com/santi-jose/LogicDesign.git,2021-06-28 00:37:01+00:00,"Boolean algebra, logic minimization, finite-state machine design, sequential circuits, common logic elements, programmable logic devices, and an introduction to system level design. The electrical behavior of circuits including three state outputs, propagation delay, logic levels, and fanout. ",0,santi-jose/LogicDesign,380865975,Verilog,LogicDesign,32,0,2021-07-01 00:40:04+00:00,[],None
634,https://github.com/jhs951101/CAaL7.git,2021-06-28 12:32:36+00:00,,0,jhs951101/CAaL7,381024515,Verilog,CAaL7,5,0,2021-07-15 15:57:30+00:00,['verilog'],None
635,https://github.com/Fisher-Wang/Digital-Logical-Design.git,2021-06-21 06:38:19+00:00,,0,Fisher-Wang/Digital-Logical-Design,378831355,Verilog,Digital-Logical-Design,3166,0,2021-06-27 15:32:20+00:00,[],None
636,https://github.com/dominic-meads/Emoji_Animation.git,2021-06-20 19:36:07+00:00,Animate emojis over VGA with UART and ZYNQ (Hackster project),0,dominic-meads/Emoji_Animation,378725829,Verilog,Emoji_Animation,102,0,2021-06-21 03:50:14+00:00,[],None
637,https://github.com/frankyfrank666/Fpga-graphical-game-EE2026-Project.git,2021-07-06 14:25:01+00:00,Intergrated audio-visual game system,0,frankyfrank666/Fpga-graphical-game-EE2026-Project,383496030,Verilog,Fpga-graphical-game-EE2026-Project,243,0,2022-02-08 19:32:06+00:00,[],None
638,https://github.com/infini8-13/verilog-onestop.git,2021-07-07 06:17:00+00:00,Collection of verilog labs starting from the basics to a good level of sequential logic implementation,0,infini8-13/verilog-onestop,383693877,Verilog,verilog-onestop,399,0,2022-06-09 02:28:30+00:00,[],https://api.github.com/licenses/mit
639,https://github.com/Sivaluxan1997/Multicoreprocessor_MatrixMultiplication.git,2021-07-10 04:35:38+00:00,A custom multi core processor which can do matrix multiplication of any two matrices,0,Sivaluxan1997/Multicoreprocessor_MatrixMultiplication,384610604,Verilog,Multicoreprocessor_MatrixMultiplication,10,0,2023-02-09 16:47:08+00:00,[],None
640,https://github.com/linux1299/cpu_core.git,2021-07-09 03:53:16+00:00,RISCV,0,linux1299/cpu_core,384314848,Verilog,cpu_core,25,0,2023-06-25 14:03:45+00:00,[],None
641,https://github.com/RodrigoSantosB/Projeto-SD-2020.2.git,2021-07-10 02:05:48+00:00,Projeto microwave in verilog ,0,RodrigoSantosB/Projeto-SD-2020.2,384590272,Verilog,Projeto-SD-2020.2,83,0,2021-07-17 00:56:58+00:00,[],None
642,https://github.com/Vuong-Van-Phuc/RISC-V-pipeline.git,2021-07-01 13:54:51+00:00,Thiết kế bộ xử lý RISC-V pipeline bằng ngôn ngữ Verilog,0,Vuong-Van-Phuc/RISC-V-pipeline,382050027,Verilog,RISC-V-pipeline,321,0,2021-07-01 14:17:44+00:00,[],None
643,https://github.com/chernheng/MIPS_CPU.git,2021-07-01 14:56:12+00:00,Working MIPS_CPU built using Verilog.,0,chernheng/MIPS_CPU,382068492,Verilog,MIPS_CPU,1521,0,2021-10-18 11:08:32+00:00,[],None
644,https://github.com/andrab0/CN1-half_adder.git,2021-07-01 16:18:16+00:00,Semisumator - verilog,0,andrab0/CN1-half_adder,382091666,Verilog,CN1-half_adder,2,0,2021-07-01 16:41:19+00:00,[],None
645,https://github.com/ralfgad/alimentos_verilog.git,2021-06-30 06:58:49+00:00,,0,ralfgad/alimentos_verilog,381606072,Verilog,alimentos_verilog,10,0,2021-06-30 08:54:11+00:00,[],None
646,https://github.com/Jason0322/CA_Project2_2021-Pipelined-CPU-with-cache-in-verilog-.git,2021-07-06 05:23:49+00:00,,0,Jason0322/CA_Project2_2021-Pipelined-CPU-with-cache-in-verilog-,383349158,Verilog,CA_Project2_2021-Pipelined-CPU-with-cache-in-verilog-,1193,0,2021-07-06 06:01:21+00:00,[],None
647,https://github.com/JaCMxO/MIPS-Pipeline-Sources.git,2021-07-02 23:50:06+00:00,Source code files for the implementation of the MIPS processor with pipeline,0,JaCMxO/MIPS-Pipeline-Sources,382487749,Verilog,MIPS-Pipeline-Sources,58,0,2021-08-17 15:40:15+00:00,[],None
648,https://github.com/samlam723/QPSK.git,2021-07-03 08:45:31+00:00,A QPSK modulator is implemented in BeMicro Max 10 FPGA development broad. The QPSK signal have 100khz central frequency and 200kbps data rate is achieved.,0,samlam723/QPSK,382567935,Verilog,QPSK,7755,0,2021-07-07 09:42:07+00:00,[],None
649,https://github.com/egegonul/temperature-control-system.git,2021-07-06 11:47:24+00:00,,0,egegonul/temperature-control-system,383449600,Verilog,temperature-control-system,1,0,2021-07-06 12:01:26+00:00,[],None
650,https://github.com/MBY381/VelrilogFirstTry.git,2021-06-27 04:22:07+00:00,数电实验作业，仅拷贝.v文件，procise bit与映射文件存于本地,0,MBY381/VelrilogFirstTry,380649385,Verilog,VelrilogFirstTry,3,0,2021-06-27 04:25:29+00:00,[],None
651,https://github.com/tarun2001sharma/Motion-Estimation-using-Phase-Correlation-.git,2021-07-07 22:51:30+00:00,Motion Estimation using Phase Correlation on FPGA,0,tarun2001sharma/Motion-Estimation-using-Phase-Correlation-,383942419,Verilog,Motion-Estimation-using-Phase-Correlation-,1519,0,2022-02-05 08:19:40+00:00,[],None
652,https://github.com/aw13422/Parking-lot-occupancy-counter.git,2021-06-11 03:40:38+00:00,,0,aw13422/Parking-lot-occupancy-counter,375895797,Verilog,Parking-lot-occupancy-counter,694,0,2021-06-11 03:42:21+00:00,[],None
653,https://github.com/aw13422/Stopwatch.git,2021-06-11 03:45:15+00:00,,0,aw13422/Stopwatch,375896677,Verilog,Stopwatch,667,0,2021-06-11 03:46:37+00:00,[],None
654,https://github.com/bobcheng15/mjpeg-encoder.git,2021-06-17 03:33:04+00:00,Final project of the VLSI system design course offered during the 2021 spring semester @ NTHU,0,bobcheng15/mjpeg-encoder,377694478,Verilog,mjpeg-encoder,12886,0,2021-06-28 03:40:16+00:00,[],None
655,https://github.com/VarshithaMaddineni/Verilog-Nbit-Adders.git,2021-06-07 09:23:57+00:00,Implementing different N bit Adders in Verilog Behavioral and Structural Model.,0,VarshithaMaddineni/Verilog-Nbit-Adders,374607195,Verilog,Verilog-Nbit-Adders,14,0,2021-06-07 10:48:57+00:00,[],None
656,https://github.com/RichardPar/Verilog_MAX7219.git,2021-06-18 18:00:26+00:00,,0,RichardPar/Verilog_MAX7219,378229016,Verilog,Verilog_MAX7219,739,0,2021-06-18 18:30:18+00:00,[],None
657,https://github.com/Abhilashok/RISC_V.git,2021-06-17 23:30:48+00:00,,0,Abhilashok/RISC_V,377984102,Verilog,RISC_V,12,0,2021-06-17 23:31:39+00:00,[],None
658,https://github.com/ChengCivi/spi.git,2021-06-20 03:41:02+00:00,,0,ChengCivi/spi,378551419,Verilog,spi,839,0,2021-06-20 10:18:31+00:00,[],None
659,https://github.com/kymmt80/MIPS_Pipeline.git,2021-06-26 10:07:54+00:00,An Implementation of MIPS processor with pipeline architecture.,0,kymmt80/MIPS_Pipeline,380470940,Verilog,MIPS_Pipeline,7,0,2022-06-18 16:04:01+00:00,[],None
660,https://github.com/ahmadrmirzaei/ARM32-FORWARD.git,2021-06-23 15:37:37+00:00,,0,ahmadrmirzaei/ARM32-FORWARD,379651929,Verilog,ARM32-FORWARD,502,0,2023-07-15 11:28:30+00:00,[],None
661,https://github.com/benjaminhsu2114/FPGA.git,2021-06-24 13:29:59+00:00,,0,benjaminhsu2114/FPGA,379934607,Verilog,FPGA,2,0,2021-06-24 13:31:31+00:00,[],None
662,https://github.com/tzhang1996/hello.git,2021-06-23 02:58:49+00:00,New guide,0,tzhang1996/hello,379462163,Verilog,hello,0,0,2021-07-01 09:48:03+00:00,[],None
663,https://github.com/KUAN-HSUN-LI/CA_project.git,2021-06-26 12:26:13+00:00,,0,KUAN-HSUN-LI/CA_project,380496206,Verilog,CA_project,392,0,2021-12-02 03:55:35+00:00,[],None
664,https://github.com/syhien/Nanjing-University-Digital-Circuits-Experiment.git,2021-06-21 11:40:44+00:00,南京大学 数字电路实验 部分,0,syhien/Nanjing-University-Digital-Circuits-Experiment,378910499,Verilog,Nanjing-University-Digital-Circuits-Experiment,18820,0,2021-06-22 02:29:44+00:00,[],None
665,https://github.com/ChealyKim-Engr/XADC-VGA-IP-Code.git,2021-06-23 03:21:04+00:00,,0,ChealyKim-Engr/XADC-VGA-IP-Code,379466369,Verilog,XADC-VGA-IP-Code,4925,0,2021-08-31 04:34:38+00:00,[],None
666,https://github.com/aikenji/learnverilog.git,2021-06-25 07:03:14+00:00,,0,aikenji/learnverilog,380153713,Verilog,learnverilog,8,0,2021-06-27 09:22:06+00:00,[],None
667,https://github.com/joshwong382/de1-soc-text-editor.git,2021-06-23 20:02:10+00:00,,0,joshwong382/de1-soc-text-editor,379716503,Verilog,de1-soc-text-editor,1346,0,2021-06-23 20:12:49+00:00,[],None
668,https://github.com/varun-kr/MIPS-32.git,2021-06-19 06:20:17+00:00,,0,varun-kr/MIPS-32,378339679,Verilog,MIPS-32,4,0,2021-06-20 18:44:24+00:00,[],None
669,https://github.com/andrab0/CN1-cronometru.git,2021-07-01 17:11:07+00:00,Cronometru folosind modul bin2bcd pentru fiecare cifra - verilog,0,andrab0/CN1-cronometru,382105056,Verilog,CN1-cronometru,3,0,2021-07-01 17:13:44+00:00,[],None
670,https://github.com/trinhhailong2665/RISCV.git,2021-07-01 09:25:21+00:00,,0,trinhhailong2665/RISCV,381978489,Verilog,RISCV,69,0,2021-07-01 09:34:37+00:00,[],None
671,https://github.com/RogerTzeng/FPGA_Remote_Conrtol_Car.git,2021-07-03 02:59:16+00:00,Final Project of Digital Design Lab,0,RogerTzeng/FPGA_Remote_Conrtol_Car,382511501,Verilog,FPGA_Remote_Conrtol_Car,4698,0,2021-07-03 05:42:27+00:00,[],None
672,https://github.com/BogdanXdev/cmos_to_mipi.git,2021-07-01 08:38:36+00:00,,0,BogdanXdev/cmos_to_mipi,381965598,Verilog,cmos_to_mipi,11827,0,2021-07-01 08:42:11+00:00,[],None
673,https://github.com/pixas/EI332_lab.git,2021-07-05 12:57:02+00:00,,0,pixas/EI332_lab,383141525,Verilog,EI332_lab,31091,0,2021-10-16 02:38:04+00:00,[],None
674,https://github.com/Miracle3310/wujian100.git,2021-07-03 10:51:11+00:00,Wujian100,1,Miracle3310/wujian100,382591466,Verilog,wujian100,3116,0,2023-01-28 06:33:12+00:00,[],https://api.github.com/licenses/mit
675,https://github.com/apfdamascena/hardware-v.git,2021-07-04 18:31:29+00:00,"This repository was created during the digital systems classes. All content uses verilog, a hardware description language, and presents the practice of some content seen in class",0,apfdamascena/hardware-v,382922597,Verilog,hardware-v,19,0,2021-07-25 20:15:23+00:00,[],None
676,https://github.com/gyleong97/DigitalCalculator.git,2021-07-06 07:51:42+00:00,,0,gyleong97/DigitalCalculator,383385697,Verilog,DigitalCalculator,7068,0,2021-07-09 06:50:26+00:00,[],None
677,https://github.com/conformist89/DigitalDesigneSolutions.git,2021-07-07 11:43:52+00:00,DigitalDesign School solutions ,0,conformist89/DigitalDesigneSolutions,383778922,Verilog,DigitalDesigneSolutions,41,0,2021-07-21 18:27:40+00:00,[],https://api.github.com/licenses/mit
678,https://github.com/sequeirayeslin/pwmModulator.git,2021-07-10 12:23:13+00:00,Verilog code for a PWM modulator,0,sequeirayeslin/pwmModulator,384691785,Verilog,pwmModulator,0,0,2021-07-10 12:28:05+00:00,[],None
679,https://github.com/kuhiu/smartnav-platform.git,2021-06-09 01:06:46+00:00,,0,kuhiu/smartnav-platform,375186535,Verilog,smartnav-platform,762643,0,2023-03-05 10:04:03+00:00,[],https://api.github.com/licenses/mit
680,https://github.com/zzfd97/risc-v-CPU.git,2021-06-09 11:11:38+00:00,简易 risc-v 处理器设计,0,zzfd97/risc-v-CPU,375326635,,risc-v-CPU,4718,0,2024-02-09 03:41:26+00:00,[],None
681,https://github.com/Alexsung929/ICD_Image-Processing-Filter.git,2021-06-28 05:30:20+00:00,NTUEE Integrated Circuit Design 2021 Spring,0,Alexsung929/ICD_Image-Processing-Filter,380915909,Verilog,ICD_Image-Processing-Filter,803,0,2024-02-02 20:08:19+00:00,[],None
682,https://github.com/liuxiao-guan/CPU.git,2021-06-06 10:45:50+00:00,,0,liuxiao-guan/CPU,374334290,Verilog,CPU,268,0,2021-06-07 02:06:47+00:00,[],None
683,https://github.com/picknick-/dsdplayer_MiSTer.git,2021-06-06 14:40:50+00:00,,0,picknick-/dsdplayer_MiSTer,374384074,Verilog,dsdplayer_MiSTer,91,0,2021-06-06 14:43:50+00:00,[],https://api.github.com/licenses/gpl-2.0
684,https://github.com/ohsehunDLC/FPGA----shouhuoji.git,2021-06-20 12:02:46+00:00,DNUI EXAM,0,ohsehunDLC/FPGA----shouhuoji,378634918,Verilog,FPGA----shouhuoji,3,0,2021-06-20 12:05:00+00:00,[],None
685,https://github.com/CW-B-W/DIC-FinalExam.git,2021-06-24 15:07:13+00:00,,0,CW-B-W/DIC-FinalExam,379964900,Verilog,DIC-FinalExam,985,0,2021-07-02 08:41:18+00:00,[],None
686,https://github.com/Jeremy1973/asic_common_ip.git,2021-06-20 10:03:01+00:00,,0,Jeremy1973/asic_common_ip,378612652,Verilog,asic_common_ip,1,0,2021-06-20 10:24:48+00:00,[],None
687,https://github.com/cmdc0de/mysoc.git,2021-06-26 04:30:35+00:00,"Creating my own soc, staring with an FPGA then hardware",0,cmdc0de/mysoc,380413204,Verilog,mysoc,3662,0,2022-06-13 07:32:32+00:00,[],https://api.github.com/licenses/mit
688,https://github.com/Ivan-Zhong/CPU31.git,2021-06-25 14:42:13+00:00,,0,Ivan-Zhong/CPU31,380267409,Verilog,CPU31,1875,0,2022-12-23 01:39:20+00:00,[],None
689,https://github.com/AlsoloProg/Proyecto-Microprocesadores-y-microcontroladores-2021.git,2021-06-15 23:43:00+00:00,En este repositorio se encuentra la documentación y los códigos de módulos necesarios para una microarquitectura capaz de correr instrucciones del ISA RISCV-32,0,AlsoloProg/Proyecto-Microprocesadores-y-microcontroladores-2021,377319698,Verilog,Proyecto-Microprocesadores-y-microcontroladores-2021,36,0,2021-06-16 03:31:13+00:00,[],None
690,https://github.com/uygarkaya/ProjectCPU.git,2021-06-06 17:19:20+00:00,Design of Simple CPU,0,uygarkaya/ProjectCPU,374420708,Verilog,ProjectCPU,16,0,2021-06-28 16:16:49+00:00,[],None
691,https://github.com/michaelcoquet/fpga_micro.git,2021-06-08 05:20:27+00:00,8bit microprocessor for FPGA using Verilog,0,michaelcoquet/fpga_micro,374890074,Verilog,fpga_micro,2541,0,2021-06-08 05:32:47+00:00,[],None
692,https://github.com/labposeidon/Verilog_HDL_Module.git,2021-06-11 03:01:48+00:00,2021年6月——华中科技大学——人工智能与自动化学院——数字电路Verilog语言仿真,0,labposeidon/Verilog_HDL_Module,375888642,Verilog,Verilog_HDL_Module,40,0,2021-06-11 05:10:38+00:00,[],None
693,https://github.com/crazytycoon/Hardware-Design.git,2021-06-18 17:47:37+00:00,,0,crazytycoon/Hardware-Design,378226220,Verilog,Hardware-Design,83,0,2021-06-18 17:56:53+00:00,[],None
694,https://github.com/DedunuKarunarathne/FPGA-Testbench.git,2021-06-22 03:25:38+00:00,,0,DedunuKarunarathne/FPGA-Testbench,379129711,Verilog,FPGA-Testbench,3,0,2022-01-09 09:01:32+00:00,[],None
695,https://github.com/avinashavi20/d-flipflop.git,2021-06-10 13:37:44+00:00,the repository contains the verilog code of D flipfflop.,0,avinashavi20/d-flipflop,375710236,Verilog,d-flipflop,1,0,2021-06-10 13:39:07+00:00,[],None
696,https://github.com/CODERGU7/UART_Protocol.git,2021-06-28 11:52:23+00:00,,0,CODERGU7/UART_Protocol,381013400,Verilog,UART_Protocol,15,0,2021-10-21 05:32:41+00:00,[],None
697,https://github.com/antonyctyung/ADT7420Driver.git,2021-06-28 12:16:55+00:00,An ADT7420 digital thermometer driver and its companion I2C driver in Verilog,0,antonyctyung/ADT7420Driver,381020213,Verilog,ADT7420Driver,18,0,2021-06-28 12:35:02+00:00,[],https://api.github.com/licenses/gpl-3.0
698,https://github.com/fdarling/orangecrab-bad-reset-timer.git,2021-06-26 22:21:23+00:00,,0,fdarling/orangecrab-bad-reset-timer,380606158,Verilog,orangecrab-bad-reset-timer,12,0,2021-06-27 03:11:39+00:00,[],None
699,https://github.com/adam-wills/DE10-Lite_synthesizer.git,2021-06-22 23:46:48+00:00,FM Synthesizer in SystemVerilog and C using fixed-point arithmetic,0,adam-wills/DE10-Lite_synthesizer,379427983,Verilog,DE10-Lite_synthesizer,111140,0,2021-08-07 21:48:02+00:00,[],None
700,https://github.com/Pradyumna1312/Verilog_Labs.git,2021-06-30 13:40:41+00:00,,0,Pradyumna1312/Verilog_Labs,381715321,Verilog,Verilog_Labs,78,0,2022-02-20 14:23:16+00:00,[],https://api.github.com/licenses/mit
701,https://github.com/sven0601/pcie_dma.git,2021-06-13 07:36:30+00:00,,0,sven0601/pcie_dma,376471326,,pcie_dma,2772,0,2021-06-21 16:46:18+00:00,[],None
702,https://github.com/ThemindaSrimal/verilog-based-CPU.git,2021-06-15 07:22:17+00:00,,0,ThemindaSrimal/verilog-based-CPU,377073084,Verilog,verilog-based-CPU,1768,0,2021-07-14 17:22:57+00:00,[],None
703,https://github.com/amit-nnn/RNS_modulo_adder_only_verilog.git,2021-06-07 13:13:18+00:00,,0,amit-nnn/RNS_modulo_adder_only_verilog,374671197,Verilog,RNS_modulo_adder_only_verilog,2718,0,2021-06-12 06:12:00+00:00,[],None
704,https://github.com/HarryHuCodes/VGA_VerilogGame.git,2021-06-17 17:01:50+00:00,A Slot Machine simulator game made using HDL Verilog for VGA display. Uses Altera Cyclone V - SoC 5CSEMA with ARM Cortex A9 processor,0,HarryHuCodes/VGA_VerilogGame,377904307,Verilog,VGA_VerilogGame,26976,0,2021-06-17 18:11:08+00:00,[],None
705,https://github.com/NightfoxHS/MIPS-CPU.git,2021-07-03 11:19:00+00:00,The Verilog HDL implementation of MIPS CPU,0,NightfoxHS/MIPS-CPU,382596675,Verilog,MIPS-CPU,246,0,2021-07-28 09:16:12+00:00,[],None
706,https://github.com/jiru1997/SRAM-Controller-interface-module.git,2021-07-03 05:47:46+00:00,SRAM-Controller interface module,0,jiru1997/SRAM-Controller-interface-module,382536164,Verilog,SRAM-Controller-interface-module,4,0,2021-07-03 15:28:40+00:00,[],None
707,https://github.com/linuxjbl/Altera_VGA.git,2021-07-06 00:19:00+00:00,,0,linuxjbl/Altera_VGA,383293788,Verilog,Altera_VGA,3119,0,2021-07-06 00:22:45+00:00,[],None
708,https://github.com/GTU-Contributions/CSE331_ComputerOrganization.git,2021-07-09 04:17:24+00:00,,0,GTU-Contributions/CSE331_ComputerOrganization,384318876,Verilog,CSE331_ComputerOrganization,7229,0,2021-07-09 07:39:12+00:00,[],None
709,https://github.com/HALIP192/tank.git,2021-07-09 10:34:50+00:00,,0,HALIP192/tank,384403963,Verilog,tank,8,0,2021-07-09 10:35:04+00:00,[],None
710,https://github.com/alan861130/AES.git,2021-07-09 10:30:18+00:00,AES implementation in HDL,0,alan861130/AES,384402945,Verilog,AES,8,0,2021-07-09 10:32:01+00:00,[],None
711,https://github.com/Baby-Qi/HDLBits-Verilog-Practice.git,2021-07-10 03:56:49+00:00,HDLBits — Verilog Practice,0,Baby-Qi/HDLBits-Verilog-Practice,384605320,Verilog,HDLBits-Verilog-Practice,3,0,2021-07-11 01:19:01+00:00,[],None
712,https://github.com/sequeirayeslin/systemEmulator.git,2021-07-10 11:52:59+00:00,"Verilog code for a discrete time LTI system emulator. Figured out a way to emulate LTI systems in real time using convolution. Edit: Turns out this method of system emulation already exists! Saw math that looks exactly like what i came up with in my Mobile Communication textbook :(. Also, FFT is probably better almost always.",0,sequeirayeslin/systemEmulator,384686017,Verilog,systemEmulator,2,0,2022-12-18 07:56:14+00:00,[],None
713,https://github.com/sudarshan411/RISC-V-Pipeline.git,2021-07-10 12:03:17+00:00,,0,sudarshan411/RISC-V-Pipeline,384688045,Verilog,RISC-V-Pipeline,68,0,2021-07-10 12:05:19+00:00,[],None
714,https://github.com/egecitak/Project_1.git,2021-07-10 19:06:05+00:00,,0,egecitak/Project_1,384771475,Verilog,Project_1,1,0,2021-07-11 11:20:58+00:00,[],None
715,https://github.com/newyork167/deca-testing.git,2021-06-08 21:14:32+00:00,,0,newyork167/deca-testing,375147368,Verilog,deca-testing,3,0,2021-06-08 21:16:43+00:00,[],None
716,https://github.com/fpga-project-77/fpga-quartus.git,2021-06-08 12:28:38+00:00,,0,fpga-project-77/fpga-quartus,375001252,Verilog,fpga-quartus,29879,0,2022-01-09 13:54:57+00:00,[],None
717,https://github.com/deeppaul589/Laconic-Processing-Element.git,2021-06-18 06:29:28+00:00,,0,deeppaul589/Laconic-Processing-Element,378055803,Verilog,Laconic-Processing-Element,212,0,2021-07-06 20:25:31+00:00,[],https://api.github.com/licenses/gpl-3.0
718,https://github.com/k-keshav-k/FPGA-Implementation.git,2021-06-18 06:54:53+00:00,,0,k-keshav-k/FPGA-Implementation,378061414,Verilog,FPGA-Implementation,199,0,2021-09-12 11:05:23+00:00,[],None
719,https://github.com/kambadur/Basys3.git,2021-06-18 13:22:56+00:00,,2,kambadur/Basys3,378157663,Verilog,Basys3,8,0,2021-06-18 13:38:43+00:00,[],None
720,https://github.com/FoxCode-JF/Modulo_counter.git,2021-06-09 18:31:58+00:00,Modulo counter implemented with verilog on FPGA.,0,FoxCode-JF/Modulo_counter,375454623,Verilog,Modulo_counter,3,0,2021-06-11 13:34:35+00:00,[],None
721,https://github.com/sumuduliyanage/8bit-Processor-with-memory.git,2021-06-13 15:40:07+00:00,8 bit processor is implemented in this project using Verilog HDL. Memory is also implemeted and caching techiniques are also used both for data memory and instruction memory.,0,sumuduliyanage/8bit-Processor-with-memory,376579880,Verilog,8bit-Processor-with-memory,1159,0,2021-06-13 15:58:05+00:00,[],None
722,https://github.com/avinashavi20/multiplexer.git,2021-06-08 15:40:57+00:00,the repository contains the verilog code of 4 cross 1 multiplexer,0,avinashavi20/multiplexer,375062156,Verilog,multiplexer,1,0,2021-06-08 15:42:27+00:00,[],None
723,https://github.com/AndrewCraddick/HDLBits.git,2021-06-15 00:29:07+00:00,My current progress through HDLBits (for fun),0,AndrewCraddick/HDLBits,376990954,Verilog,HDLBits,7,0,2021-07-11 04:17:42+00:00,[],None
724,https://github.com/wenbogeng/EEC_180_Labs.git,2021-06-15 08:21:01+00:00,Digital Systems II Winter 2021,0,wenbogeng/EEC_180_Labs,377088947,Verilog,EEC_180_Labs,2961,0,2023-04-18 02:13:14+00:00,[],None
725,https://github.com/cornliu/Single-Cycle-CPU.git,2021-06-12 12:08:30+00:00,,0,cornliu/Single-Cycle-CPU,376280770,Verilog,Single-Cycle-CPU,812,0,2021-06-12 12:18:15+00:00,[],None
726,https://github.com/booleanLegend/CECS225.git,2021-06-07 05:49:07+00:00,"Course files including lecture hw, labs, and book",1,booleanLegend/CECS225,374549370,Verilog,CECS225,14958,0,2021-06-07 05:59:01+00:00,[],None
727,https://github.com/SymbiFlow/utd-sv.git,2021-06-07 11:43:41+00:00,,0,SymbiFlow/utd-sv,374645229,Verilog,utd-sv,481,0,2021-06-07 11:46:26+00:00,[],
728,https://github.com/DragosGheorghe/Register-File-with-ALU.git,2021-06-24 20:57:54+00:00,,0,DragosGheorghe/Register-File-with-ALU,380048662,Verilog,Register-File-with-ALU,320,0,2021-06-24 21:01:46+00:00,[],None
729,https://github.com/Kyouma48596/modified-dual-clcg.git,2021-06-25 03:50:14+00:00,Some PRBG implementations I made in sem 4,0,Kyouma48596/modified-dual-clcg,380117226,Verilog,modified-dual-clcg,510,0,2021-07-05 13:53:36+00:00,[],None
730,https://github.com/Hamna2023/DLD-Project.git,2021-06-19 23:14:47+00:00,,0,Hamna2023/DLD-Project,378520702,Verilog,DLD-Project,2984,0,2021-06-19 23:37:11+00:00,[],None
731,https://github.com/mfkiwl/Universal-1.git,2021-06-20 15:45:18+00:00,CFDR&RP firmware,0,mfkiwl/Universal-1,378682286,,Universal-1,112882,0,2021-07-05 08:52:10+00:00,[],None
732,https://github.com/infphyny/gpio.git,2021-06-20 15:16:31+00:00,,0,infphyny/gpio,378676022,Verilog,gpio,1,0,2021-06-20 15:26:09+00:00,[],None
733,https://github.com/AhmadSyafiq898/projectCAD.git,2021-07-10 07:24:31+00:00,,2,AhmadSyafiq898/projectCAD,384637453,Verilog,projectCAD,627,0,2021-07-19 15:09:58+00:00,[],None
734,https://github.com/MingChe-Hsu/Divider.git,2021-07-09 15:25:11+00:00,,0,MingChe-Hsu/Divider,384477791,Verilog,Divider,5,0,2021-07-09 15:31:20+00:00,[],None
735,https://github.com/shankch/usc_vlsi_chip_project.git,2021-07-08 02:26:04+00:00,,0,shankch/usc_vlsi_chip_project,383978277,Verilog,usc_vlsi_chip_project,62234,0,2021-07-08 03:05:11+00:00,[],https://api.github.com/licenses/gpl-3.0
736,https://github.com/xiaoc1108/frb-monitor.git,2021-07-07 18:48:59+00:00,,0,xiaoc1108/frb-monitor,383896145,Verilog,frb-monitor,51227,0,2023-01-28 01:05:47+00:00,[],None
737,https://github.com/userElaina/mips.git,2021-07-08 09:26:02+00:00,假多周期,0,userElaina/mips,384070792,Verilog,mips,1105,0,2023-01-28 06:27:42+00:00,"['verilog', 'homework']",https://api.github.com/licenses/mit
738,https://github.com/niketramani1/Advanced-Physical-Design_VSDIAT.git,2021-06-29 15:48:16+00:00,,1,niketramani1/Advanced-Physical-Design_VSDIAT,381418968,Verilog,Advanced-Physical-Design_VSDIAT,318103,0,2021-07-05 10:56:23+00:00,[],None
739,https://github.com/chernheng/Mars_Rover.git,2021-07-01 15:45:53+00:00,Different subsystems to integrate an autonomous rover. Control Subsystem was done by me using an ESP-32.,0,chernheng/Mars_Rover,382082945,Verilog,Mars_Rover,74221,0,2021-10-18 11:06:09+00:00,[],None
740,https://github.com/Henry-Fielding/FPGA_digital_lock.git,2021-07-02 08:46:18+00:00,Verilog programme to implement a digital lock circuit using finite statemachines,0,Henry-Fielding/FPGA_digital_lock,382285916,Verilog,FPGA_digital_lock,34,0,2021-07-02 08:47:12+00:00,[],None
741,https://github.com/bipinmandal1/Electronic_Handball_Game.git,2021-07-03 05:08:08+00:00,Implementation of Electronic Handball Game using Verilog,0,bipinmandal1/Electronic_Handball_Game,382530407,Verilog,Electronic_Handball_Game,606,0,2021-07-03 05:12:07+00:00,[],None
742,https://github.com/SahanGura/multi-core-fpga-multiplier.git,2021-07-04 10:27:20+00:00,This multicore processor is built using the code base of the single-core-fpga-multiplier,0,SahanGura/multi-core-fpga-multiplier,382822965,Verilog,multi-core-fpga-multiplier,11208,0,2021-09-05 16:42:55+00:00,[],None
743,https://github.com/Bhavan-Naik/16bit_shift_adder.git,2021-07-01 06:27:24+00:00,Project to Design and Implement a 16-bit Shift Adder (Serial Adder) using Verilog.,1,Bhavan-Naik/16bit_shift_adder,381932180,Verilog,16bit_shift_adder,11,0,2021-07-01 06:44:29+00:00,"['verilog', 'ddco', 'gtkwave', 'vcd']",None
744,https://github.com/volatile-kevin/ECE411.git,2021-06-29 13:26:32+00:00,,0,volatile-kevin/ECE411,381374130,Verilog,ECE411,8169,0,2021-06-29 13:29:10+00:00,[],None
745,https://github.com/michaelgulson/ece411.git,2021-06-22 14:08:20+00:00,Final Project,0,michaelgulson/ece411,379292076,Verilog,ece411,715,0,2021-06-22 14:12:15+00:00,[],None
746,https://github.com/microSharjeel/KNN_SORTING.git,2021-07-05 14:01:51+00:00,,0,microSharjeel/KNN_SORTING,383160548,Verilog,KNN_SORTING,7131,0,2021-07-08 19:11:24+00:00,[],https://api.github.com/licenses/mit
747,https://github.com/DYEkanayake/8-bit-Single-Cycle-Processor.git,2021-07-05 19:13:09+00:00,"A 8-bit single-cycle processor for a given ISA which is somewhat similar to MIPS .Includes an ALU, a register file, a memory sub-system(supports caching) based on Harvard Architecture and Control Logic, implemented with Verilog HDL.",0,DYEkanayake/8-bit-Single-Cycle-Processor,383242011,Verilog,8-bit-Single-Cycle-Processor,14,0,2021-07-05 19:18:43+00:00,[],None
748,https://github.com/kernyan/riscv_de10lite.git,2021-07-01 18:07:39+00:00,"Softcore RISCV cpu implementation for python emulation, and Intel DE10-Lite FPGA",0,kernyan/riscv_de10lite,382118243,Verilog,riscv_de10lite,115,0,2021-10-20 02:47:54+00:00,[],https://api.github.com/licenses/mit
749,https://github.com/AireenAmirJalal/Verilog_101.git,2021-06-25 17:26:12+00:00,This repo contains basic gates in Verilog along with their test benches,0,AireenAmirJalal/Verilog_101,380310186,Verilog,Verilog_101,82,0,2021-06-26 19:28:53+00:00,[],None
750,https://github.com/htwk-bausch/ee4220.git,2021-06-25 16:51:58+00:00,"Codebeispiele und Anleitungen für das Modul ""Digitale Schaltungstechnik""",0,htwk-bausch/ee4220,380301609,Verilog,ee4220,7,0,2021-07-21 11:43:30+00:00,['verilog'],None
751,https://github.com/nuvotion/g2_psoc_bsp.git,2021-06-26 01:12:38+00:00,HDL and configuration for running G2 on a PSOC5,0,nuvotion/g2_psoc_bsp,380386924,Verilog,g2_psoc_bsp,489,0,2021-06-26 01:13:14+00:00,[],None
752,https://github.com/anushaupadhya/ATM-Machine-Controller-using-Verilog.git,2021-06-26 12:59:00+00:00,,0,anushaupadhya/ATM-Machine-Controller-using-Verilog,380502281,Verilog,ATM-Machine-Controller-using-Verilog,173,0,2021-09-23 06:13:45+00:00,[],None
753,https://github.com/Gualix/Proyecto_II_Digitales2.git,2021-06-27 22:03:20+00:00,Repositorio para el segundo proyecto del curso de digitales 2,0,Gualix/Proyecto_II_Digitales2,380846086,Verilog,Proyecto_II_Digitales2,1683,0,2021-07-24 07:49:24+00:00,[],None
754,https://github.com/wenyee9797/zedboard-snake-game.git,2021-06-28 03:00:22+00:00,,0,wenyee9797/zedboard-snake-game,380889376,Verilog,zedboard-snake-game,159,0,2021-09-20 09:27:01+00:00,[],None
755,https://github.com/qmalexkot/test_pins.git,2021-07-03 20:58:34+00:00,,0,qmalexkot/test_pins,382708292,Verilog,test_pins,2046,0,2021-07-03 20:58:44+00:00,[],None
756,https://github.com/StartForKiller/riscv.git,2021-06-22 15:12:14+00:00,Risc-V implemented in a week,0,StartForKiller/riscv,379312196,Verilog,riscv,7,0,2021-06-23 07:59:03+00:00,[],None
757,https://github.com/cyildirim23/UART.git,2021-07-09 14:25:30+00:00,"Anything related to Basys 3 UART (Rx, Tx, bigger project)",0,cyildirim23/UART,384461162,Verilog,UART,99,0,2021-07-23 15:51:12+00:00,[],None
758,https://github.com/kakshat1205/8-bit-cpu-in-verilog.git,2021-06-08 20:44:19+00:00,"this is my first repository, it is endsem project of coa ",1,kakshat1205/8-bit-cpu-in-verilog,375140647,,8-bit-cpu-in-verilog,7,0,2024-01-28 11:44:37+00:00,[],None
759,https://github.com/codver/Verilog.git,2021-06-18 05:07:22+00:00,"Practice codes from HDLbits website , solutions ( learning digital design )",0,codver/Verilog,378040083,Verilog,Verilog,65,0,2021-07-01 07:32:11+00:00,[],None
760,https://github.com/4ydogan/BIL264_Homeworks.git,2021-06-20 11:25:23+00:00,BİL264 dersi kapsamında verilen ödevler ve yazdığım kodlar mevcuttur.,0,4ydogan/BIL264_Homeworks,378627846,Verilog,BIL264_Homeworks,1197,0,2022-03-14 20:31:17+00:00,"['logic-programming', 'verilog', 'computer-architecture']",None
761,https://github.com/shubhi704/Tennis_ScoreBoard.git,2021-06-19 16:35:12+00:00,,0,shubhi704/Tennis_ScoreBoard,378458221,Verilog,Tennis_ScoreBoard,6,0,2021-06-19 17:06:27+00:00,[],None
762,https://github.com/jaglikemakkar/FPGA.git,2021-06-15 17:00:07+00:00,"Implemented Adder, Counter and Multiplexer on same FPGA board in Verilog.",0,jaglikemakkar/FPGA,377235605,Verilog,FPGA,4,0,2021-06-15 17:01:39+00:00,[],None
763,https://github.com/jmoransi/hello-world-v.git,2021-06-16 04:20:59+00:00,Verilog examples,0,jmoransi/hello-world-v,377369091,Verilog,hello-world-v,4458,0,2021-06-16 05:27:27+00:00,[],https://api.github.com/licenses/apache-2.0
764,https://github.com/shipshupe/verilog-testbench.git,2021-06-20 20:57:39+00:00,Learning verilog,0,shipshupe/verilog-testbench,378738764,Verilog,verilog-testbench,1,0,2021-10-03 10:37:09+00:00,[],https://api.github.com/licenses/mit
765,https://github.com/damjes/verilog-poczatki.git,2021-06-07 13:32:56+00:00,Moje początki z Verilogiem,0,damjes/verilog-poczatki,374677445,Verilog,verilog-poczatki,5,0,2021-06-24 16:58:10+00:00,[],None
766,https://github.com/Aroondhati/RISCV-Processors.git,2021-06-08 12:39:30+00:00,,0,Aroondhati/RISCV-Processors,375004381,Verilog,RISCV-Processors,6,0,2021-06-08 13:05:50+00:00,[],None
767,https://github.com/memgonzales/hdl-flip-flop.git,2021-06-14 04:17:14+00:00,"Compilation of Verilog behavioral models and test benches for the four types of flip-flops (SR, JK, D, and T)",0,memgonzales/hdl-flip-flop,376700585,Verilog,hdl-flip-flop,104,0,2022-07-03 22:25:16+00:00,"['verilog', 'flip-flop', 'computer-architecture', 'sequential-circuits', 'behavioral-modeling']",None
768,https://github.com/BryceShakeAir/Logic-Design-Lab.git,2021-06-13 01:59:31+00:00,Set of exercises done to ultimately create a hack machine,0,BryceShakeAir/Logic-Design-Lab,376416678,Verilog,Logic-Design-Lab,89,0,2021-06-13 02:38:05+00:00,[],None
769,https://github.com/nankachiisai/sflmemo.git,2021-06-12 19:02:45+00:00,,0,nankachiisai/sflmemo,376365127,Verilog,sflmemo,11,0,2023-02-16 11:06:44+00:00,[],None
770,https://github.com/V-G-spec/Digital-Electronics.git,2021-06-13 07:02:59+00:00,All the verilog files and mid-sem project for course ELL201,0,V-G-spec/Digital-Electronics,376465698,Verilog,Digital-Electronics,1003,0,2021-06-15 10:32:02+00:00,[],None
771,https://github.com/wingersoft/Pedestrian.git,2021-06-12 12:41:02+00:00,Verilog script controlling a traffic light with pedestrian light.,0,wingersoft/Pedestrian,376287054,Verilog,Pedestrian,9,0,2021-06-12 17:53:56+00:00,[],None
772,https://github.com/deoregaurav92/Verilog_Coding_Practice.git,2021-06-09 16:51:59+00:00,,1,deoregaurav92/Verilog_Coding_Practice,375427539,Verilog,Verilog_Coding_Practice,42,0,2021-06-23 01:23:53+00:00,[],None
773,https://github.com/siva12a/soc_io_expander.git,2021-06-09 15:19:47+00:00,,0,siva12a/soc_io_expander,375401049,Verilog,soc_io_expander,81783,0,2021-06-17 15:16:45+00:00,[],https://api.github.com/licenses/apache-2.0
774,https://github.com/Graycod3/YODA_BCDC_NGRBLE001_MHTSEA001.git,2021-06-23 17:18:09+00:00,,0,Graycod3/YODA_BCDC_NGRBLE001_MHTSEA001,379678445,Verilog,YODA_BCDC_NGRBLE001_MHTSEA001,19,0,2021-06-24 17:49:29+00:00,[],None
775,https://github.com/pcornier/DEC-T11.git,2021-06-23 14:52:34+00:00,DEC-T11 CPU,0,pcornier/DEC-T11,379638262,Verilog,DEC-T11,4,0,2021-06-23 14:56:49+00:00,[],None
776,https://github.com/Nagasaivishnu/VGA-controller-De-10Lite-Board.git,2021-06-24 06:28:01+00:00,Operating VGA operable Monitor Using De-10 Lite FPGA and Quartus Prime Toll,0,Nagasaivishnu/VGA-controller-De-10Lite-Board,379825991,Verilog,VGA-controller-De-10Lite-Board,5,0,2021-06-26 18:00:02+00:00,[],None
777,https://github.com/HLS-UESTHU/HLS.git,2021-06-23 12:59:11+00:00,,0,HLS-UESTHU/HLS,379603966,Verilog,HLS,7859,0,2021-06-27 14:31:25+00:00,[],None
778,https://github.com/X-mei/Tetris-Game.git,2021-06-06 02:06:59+00:00,"A Teris Game written in Verilog with self-written CPU(ALU, regfile...)",0,X-mei/Tetris-Game,374248561,Verilog,Tetris-Game,840,0,2021-06-06 02:09:24+00:00,[],None
779,https://github.com/Kakeru-Miyazaki/3s_cpuarch_public.git,2021-06-28 09:40:11+00:00,,0,Kakeru-Miyazaki/3s_cpuarch_public,380979666,Verilog,3s_cpuarch_public,4,0,2021-06-28 09:44:11+00:00,[],None
780,https://github.com/TreeLand1101/CCU_DD-Lab.git,2021-06-28 12:55:17+00:00,,0,TreeLand1101/CCU_DD-Lab,381031372,Verilog,CCU_DD-Lab,18353,0,2022-07-04 08:34:30+00:00,[],None
781,https://github.com/havok-dev/Traffic-Light-Controller-Using-Verilog.git,2021-06-29 16:48:54+00:00,,0,havok-dev/Traffic-Light-Controller-Using-Verilog,381435355,Verilog,Traffic-Light-Controller-Using-Verilog,55,0,2021-06-29 16:54:32+00:00,[],None
782,https://github.com/Anthon1e/ADRV9009-Receiver-Signal-Path-FIR-Filter.git,2021-06-30 07:10:02+00:00,"An attempt to implement the signal path on the receiver side of the ADRV9009, a highly integrated, radio frequency (RF) transceiver.",1,Anthon1e/ADRV9009-Receiver-Signal-Path-FIR-Filter,381609025,Verilog,ADRV9009-Receiver-Signal-Path-FIR-Filter,68,0,2021-07-15 04:04:13+00:00,[],None
783,https://github.com/LincolnCB/verilog_learning.git,2021-06-11 19:51:14+00:00,,0,LincolnCB/verilog_learning,376128733,Verilog,verilog_learning,1,0,2022-08-03 21:36:04+00:00,[],None
784,https://github.com/Mahmoud272779/SPI-Module.git,2021-07-09 20:55:00+00:00,,0,Mahmoud272779/SPI-Module,384548839,Verilog,SPI-Module,1922,0,2021-07-09 21:11:34+00:00,[],None
785,https://github.com/AyushLall5/CLA_Layout.git,2021-07-11 12:00:47+00:00,,0,AyushLall5/CLA_Layout,384937053,Verilog,CLA_Layout,14120,0,2021-07-11 15:30:55+00:00,[],None
786,https://github.com/Karolinak246/Zynq-sqrt_inverse_floating_point.git,2021-06-30 09:23:15+00:00,Fast sqrt inverse algorithm - at floating point,0,Karolinak246/Zynq-sqrt_inverse_floating_point,381645183,Verilog,Zynq-sqrt_inverse_floating_point,599,0,2021-06-30 13:23:52+00:00,[],None
787,https://github.com/iBreakEverything/RISC-V.git,2021-06-29 12:18:35+00:00,RISC-V processor written in verilog,0,iBreakEverything/RISC-V,381353878,Verilog,RISC-V,312,0,2023-01-28 08:03:11+00:00,[],https://api.github.com/licenses/mit
788,https://github.com/erdemer-code/cs240_simpleCPU.git,2021-06-25 10:40:41+00:00,,0,erdemer-code/cs240_simpleCPU,380206109,Verilog,cs240_simpleCPU,4,0,2021-06-25 10:43:51+00:00,[],None
789,https://github.com/karentp/GrayCounterVerificator.git,2021-06-22 06:14:49+00:00,Automatic Verificator fo a Gray Counter in Verilog ,0,karentp/GrayCounterVerificator,379161984,Verilog,GrayCounterVerificator,14,0,2021-06-23 10:23:18+00:00,[],None
790,https://github.com/Jason0322/CA_HW4_2021-Single-Cycle-CPU-in-verilog-.git,2021-07-06 06:02:42+00:00,,0,Jason0322/CA_HW4_2021-Single-Cycle-CPU-in-verilog-,383357313,Verilog,CA_HW4_2021-Single-Cycle-CPU-in-verilog-,1775,0,2021-07-06 06:06:08+00:00,[],None
791,https://github.com/emrii/Electronic-Ticket-Vending-Machine.git,2021-07-01 19:00:40+00:00,This is a design for an electronic vending machine and a verilog based simulation testbench for its verification.,0,emrii/Electronic-Ticket-Vending-Machine,382130090,Verilog,Electronic-Ticket-Vending-Machine,4,0,2021-07-08 17:45:04+00:00,[],None
792,https://github.com/kulp/tappy.git,2021-07-11 22:03:25+00:00,"tappy is a tiny Verilog driver for PS/2 keyboards, for use in FPGAs",0,kulp/tappy,385060345,Verilog,tappy,17,0,2021-07-18 23:45:52+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
793,https://github.com/crarch/voj-testbench.git,2021-07-09 00:27:38+00:00,,0,crarch/voj-testbench,384279682,Verilog,voj-testbench,28,0,2021-11-16 02:54:13+00:00,[],None
794,https://github.com/Sabrina-Sumona/Verilog-Codes.git,2021-07-10 10:08:50+00:00,,0,Sabrina-Sumona/Verilog-Codes,384667568,Verilog,Verilog-Codes,3,0,2021-07-10 10:10:47+00:00,[],None
795,https://github.com/orb1t-ua/CYC1000-2.git,2021-07-08 03:40:19+00:00,A place to put random stuff I do with the CYC1000,0,orb1t-ua/CYC1000-2,383992055,,CYC1000-2,10,0,2023-11-18 20:49:03+00:00,[],None
796,https://github.com/gokcenacak/PLODE-Backup.git,2021-06-06 20:22:57+00:00,Updated version of PLODE focusing on sequential circuit support,1,gokcenacak/PLODE-Backup,374456514,Verilog,PLODE-Backup,458,0,2021-06-07 16:13:46+00:00,[],None
