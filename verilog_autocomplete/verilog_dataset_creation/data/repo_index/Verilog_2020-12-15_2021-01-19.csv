,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/racerxdl/riskow.git,2020-12-18 01:53:38+00:00,Learning how to make a RISC-V ,8,racerxdl/riskow,322460500,Verilog,riskow,190,127,2024-03-26 13:58:58+00:00,"['fpga', 'learning-exercise', 'open-core', 'opencore', 'risc-v', 'verilog', 'riskow']",https://api.github.com/licenses/apache-2.0
1,https://github.com/abdelazeem201/Systolic-array-implementation-in-RTL-for-TPU.git,2021-01-07 17:33:58+00:00,IC implementation of Systolic Array for TPU,21,abdelazeem201/Systolic-array-implementation-in-RTL-for-TPU,327681879,Verilog,Systolic-array-implementation-in-RTL-for-TPU,17789,97,2024-04-02 16:55:43+00:00,"['asic', 'asic-design', 'asic-verification', 'fpga', 'rtl', 'verilog']",https://api.github.com/licenses/mit
2,https://github.com/simbricks/simbricks.git,2021-01-07 13:45:41+00:00,Main Repository for the SimBricks Modular Full-System Simulation Framework.,18,simbricks/simbricks,327624432,Verilog,simbricks,6418,71,2024-04-01 15:07:09+00:00,[],https://api.github.com/licenses/mit
3,https://github.com/WangXuan95/FPGA-RMII-SMII.git,2021-01-13 03:59:37+00:00,An FPGA-based MII to RMII & SMII converter to connect 100M ethernet PHY chip such as LAN8720 or KSZ8041TLI-S. 基于FPGA的MII转RMII和MII转SMII，用来连接LAN8720、KSZ8041TLI-S等百兆以太网PHY芯片。,16,WangXuan95/FPGA-RMII-SMII,329188560,Verilog,FPGA-RMII-SMII,308,64,2024-03-23 17:12:27+00:00,"['fpga', 'verilog', 'rtl', 'ethernet', '100m-ethernet', 'mii', 'rmii', 'smii', 'phy', 'ethernet-phy']",https://api.github.com/licenses/gpl-3.0
4,https://github.com/Daniel-GGB/My-Digital-IC-Library.git,2021-01-15 09:13:02+00:00,我的数字IC厂库：Verilog HDL; System Vreilog; UVM; ModelSim; Quartus II;,19,Daniel-GGB/My-Digital-IC-Library,329862975,Verilog,My-Digital-IC-Library,46738,50,2024-04-12 13:36:15+00:00,[],None
5,https://github.com/cjhonlyone/ADC-lvds.git,2021-01-10 14:18:12+00:00,"Xilinx FPGA, ADC344X, AD9252, 14x 12x Serdes, LVDS",14,cjhonlyone/ADC-lvds,328400076,Verilog,ADC-lvds,119,40,2024-03-28 05:49:10+00:00,[],https://api.github.com/licenses/gpl-3.0
6,https://github.com/DinoMax00/TJ-FPGA_MP3.git,2021-01-19 03:02:26+00:00,同济大学数字逻辑课程期末大作业,3,DinoMax00/TJ-FPGA_MP3,330848117,Verilog,TJ-FPGA_MP3,15,34,2024-04-05 03:58:37+00:00,[],https://api.github.com/licenses/mit
7,https://github.com/rave1sking/single_cycle_RISCV_CPU_Design-32bit.git,2020-12-23 11:00:08+00:00,Verilog实现单周期非流水线32位RISCV指令集（45条）CPU,3,rave1sking/single_cycle_RISCV_CPU_Design-32bit,323878345,Verilog,single_cycle_RISCV_CPU_Design-32bit,5287,32,2024-03-28 14:17:27+00:00,[],None
8,https://github.com/mbattyani/sub-25-ns-nasdaq-itch-fpga-parser.git,2021-01-16 19:54:28+00:00,,4,mbattyani/sub-25-ns-nasdaq-itch-fpga-parser,330244730,Verilog,sub-25-ns-nasdaq-itch-fpga-parser,208,30,2024-04-06 22:43:49+00:00,[],https://api.github.com/licenses/gpl-3.0
9,https://github.com/sudhamshu091/Single-Cycle-Risc-Processor-32-bit-Verilog.git,2021-01-07 16:49:31+00:00,Single Cycle RISC MIPS Processor,2,sudhamshu091/Single-Cycle-Risc-Processor-32-bit-Verilog,327671545,Verilog,Single-Cycle-Risc-Processor-32-bit-Verilog,584,25,2024-02-28 10:22:23+00:00,"['verilog', 'risc-processor', 'verilog-project', 'risc-v', 'risc']",None
10,https://github.com/barryZZJ/Hardware_Design.git,2020-12-28 09:24:30+00:00,,1,barryZZJ/Hardware_Design,324967363,Verilog,Hardware_Design,45077,23,2023-02-24 12:15:49+00:00,[],None
11,https://github.com/milochen0418/hello-verilog.git,2021-01-14 15:21:36+00:00,Hello Verilog by Mac + VSCode ,4,milochen0418/hello-verilog,329653866,Verilog,hello-verilog,2319,22,2023-10-20 01:35:27+00:00,[],None
12,https://github.com/santoshsmalagi/Benchmarks.git,2020-12-19 02:21:47+00:00,"A collection of ISCAS,ITC,TAU and other Benchmark Circuits for EDA tool evaluation.",0,santoshsmalagi/Benchmarks,322749088,Verilog,Benchmarks,1455,18,2024-03-17 09:23:30+00:00,[],None
13,https://github.com/zli87/Integrated_Circuit_Design_Laboratory_IC_Lab.git,2021-01-19 17:00:14+00:00,"Integrated Circuit Design Laboratory(IC Lab) at 2019 Fall, NCTU. Final project is a customized 16 bits ISA processor.",3,zli87/Integrated_Circuit_Design_Laboratory_IC_Lab,331049928,Verilog,Integrated_Circuit_Design_Laboratory_IC_Lab,30375,16,2024-03-18 05:22:35+00:00,[],None
14,https://github.com/asinghani/crypto-accelerator-chip.git,2020-12-16 02:26:23+00:00,Cryptography accelerator ASIC (for AES128/AES256 and SHA256) using Skywater 130nm process node (main project repo). Taped out in December 2020.,3,asinghani/crypto-accelerator-chip,321844971,Verilog,crypto-accelerator-chip,253957,16,2024-04-10 15:56:39+00:00,[],https://api.github.com/licenses/apache-2.0
15,https://github.com/GhostFrankWu/SUSTech_CS207_Final-Project_2020f.git,2020-12-25 06:02:07+00:00,Digital logic design FinalProject CS207 数字逻辑(105/100)满分project,4,GhostFrankWu/SUSTech_CS207_Final-Project_2020f,324298659,Verilog,SUSTech_CS207_Final-Project_2020f,554,15,2024-03-31 12:31:13+00:00,[],None
16,https://github.com/WiFiBoy/OK-iCE40Pro.git,2021-01-05 09:32:14+00:00,"OK:iCE40Pro, based on iCE40up5k FPGA Core, is an Open Source Educational FPGA GamePad Console. ",4,WiFiBoy/OK-iCE40Pro,326950263,Verilog,OK-iCE40Pro,16990,15,2023-08-22 00:46:37+00:00,[],https://api.github.com/licenses/mit
17,https://github.com/ombhilare999/riscv-core.git,2020-12-15 19:36:34+00:00,A customized RISCV core made using verilog,3,ombhilare999/riscv-core,321770459,Verilog,riscv-core,4848,15,2021-09-17 22:27:54+00:00,[],https://api.github.com/licenses/mit
18,https://github.com/Saanlima/RISC5Verilog_psram.git,2021-01-10 00:23:43+00:00,,2,Saanlima/RISC5Verilog_psram,328272558,Verilog,RISC5Verilog_psram,1761,13,2023-11-07 12:56:31+00:00,[],None
19,https://github.com/abdelazeem201/Introduction-to-System-on-Chip-Design-Online-Course.git,2020-12-23 18:10:15+00:00,"To develop Arm Cortex-M0 based SoCs, from creating high-level functional specifications to design, implementation and testing on FPGA platforms using standard hardware description and software programming languages",4,abdelazeem201/Introduction-to-System-on-Chip-Design-Online-Course,323971327,Verilog,Introduction-to-System-on-Chip-Design-Online-Course,18242,13,2024-04-07 07:05:33+00:00,[],https://api.github.com/licenses/mit
20,https://github.com/UDXS/floof.git,2021-01-04 22:24:02+00:00,32-bit Fixed-Point Embedded 3D Graphics Processor,0,UDXS/floof,326822155,Verilog,floof,153,13,2023-12-18 23:22:38+00:00,[],None
21,https://github.com/Chair-for-Security-Engineering/AES_masked_BRAM.git,2020-12-24 08:28:57+00:00,Designs of first-order SCA-secure hardware implementations of AES encryption/decryptoin dedicated to Xilinx FPGAs (using BRAM),3,Chair-for-Security-Engineering/AES_masked_BRAM,324106377,Verilog,AES_masked_BRAM,91,13,2024-03-26 14:53:11+00:00,[],
22,https://github.com/GameboxSystems/DMTV-v2.git,2020-12-19 04:23:15+00:00,"v2 of VGA Out for Game Boy: 800x600 60hz, NES controller support, custom color palettes, and scanlines for DMG Gameboy! ",1,GameboxSystems/DMTV-v2,322765467,Verilog,DMTV-v2,9665,13,2024-03-06 18:41:58+00:00,[],https://api.github.com/licenses/gpl-3.0
23,https://github.com/ajackevic/ELEC5882.git,2021-01-14 16:15:56+00:00,The Design and Implementation of a Pulse Compression Filter on an FPGA.,7,ajackevic/ELEC5882,329668444,Verilog,ELEC5882,32398,12,2024-04-12 02:11:08+00:00,"['pulse-compression-filter', 'fir', 'matched-filter', 'complex-fir', 'fpga', 'hilbert-transform', 'matlab', 'non-resoting-sqare-root', 'alpha-max-plus-beta-min']",https://api.github.com/licenses/unlicense
24,https://github.com/owczhlol/HITCCLab.git,2021-01-09 06:31:12+00:00,哈工大计算机组成原理课程实验,3,owczhlol/HITCCLab,328091068,Verilog,HITCCLab,37,12,2024-04-03 06:39:39+00:00,[],None
25,https://github.com/sudhamshu091/Single-Cycle-Risc-Pipelined-Processor-Verilog.git,2021-01-07 20:32:05+00:00,Single Cycle MIPS Pipelined Processor using Verilog,0,sudhamshu091/Single-Cycle-Risc-Pipelined-Processor-Verilog,327718538,Verilog,Single-Cycle-Risc-Pipelined-Processor-Verilog,937,11,2024-04-09 18:41:29+00:00,"['verilog', 'risc-processor', 'pipelined-risc', 'risc', 'verilog-project']",None
26,https://github.com/sudhamshu091/RISC-Pipelined-Processor-32-bit-Verilog.git,2021-01-07 20:30:24+00:00,Simple Pipelined 32 bit RISC Processor,1,sudhamshu091/RISC-Pipelined-Processor-32-bit-Verilog,327718219,Verilog,RISC-Pipelined-Processor-32-bit-Verilog,200,11,2024-04-09 18:41:23+00:00,"['pipeline-risc', 'risc-v', 'risc', 'verilog', 'verilog-project', 'verilog-processor']",None
27,https://github.com/Corle-hyz/UCAS-COD-Lab.git,2021-01-08 06:54:24+00:00,中国科学院大学(UCAS)2020年春季学期计算机组成原理实验课作业,5,Corle-hyz/UCAS-COD-Lab,327823022,Verilog,UCAS-COD-Lab,39379,10,2023-06-22 16:00:40+00:00,"['ucas', 'cod', 'mips', 'riscv']",https://api.github.com/licenses/mit
28,https://github.com/dldldlfma/super_small_toy_tpu.git,2021-01-13 02:23:04+00:00,,6,dldldlfma/super_small_toy_tpu,329169638,Verilog,super_small_toy_tpu,78,9,2024-02-23 10:08:11+00:00,[],None
29,https://github.com/CTSRD-CHERI/garnet.git,2021-01-02 17:30:53+00:00,Amazon F1-inspired Xilinx VCU118 hardware design framework,4,CTSRD-CHERI/garnet,326235560,Verilog,garnet,69966,9,2024-02-24 16:01:26+00:00,[],
30,https://github.com/qmj0923/2020-Fall-NJU-Experiments-in-Digital-Logical-Circuits.git,2021-01-19 09:06:26+00:00,2020秋-南大数电实验,0,qmj0923/2020-Fall-NJU-Experiments-in-Digital-Logical-Circuits,330922002,Verilog,2020-Fall-NJU-Experiments-in-Digital-Logical-Circuits,199611,9,2024-04-12 08:43:24+00:00,[],None
31,https://github.com/folisa-ic/FlsV.git,2021-01-03 13:00:37+00:00,,1,folisa-ic/FlsV,326408035,Verilog,FlsV,1102,9,2023-06-01 12:16:46+00:00,[],None
32,https://github.com/OpenXiangShan/env-scripts.git,2021-01-14 02:16:47+00:00,Scripts for XiangShan,13,OpenXiangShan/env-scripts,329483839,Verilog,env-scripts,2502,8,2023-12-27 12:20:15+00:00,[],None
33,https://github.com/asinghani/crypto-accelerator-builds.git,2020-12-16 03:58:11+00:00,Cryptography accelerator ASIC (for AES128/AES256 and SHA256) using Skywater 130nm process node (build-environment repo).,1,asinghani/crypto-accelerator-builds,321862538,Verilog,crypto-accelerator-builds,1675074,8,2024-04-10 15:54:45+00:00,[],https://api.github.com/licenses/apache-2.0
34,https://github.com/mattvenn/wrapped_rgb_mixer.git,2021-01-18 12:17:56+00:00,Demo project for the Zero to ASIC Course.,9,mattvenn/wrapped_rgb_mixer,330656605,Verilog,wrapped_rgb_mixer,13374,8,2024-03-19 13:26:33+00:00,"['asic', 'hdl', 'gds']",https://api.github.com/licenses/apache-2.0
35,https://github.com/kimianoorbakhsh/Verilog-Matrix-Multiplier.git,2021-01-16 09:04:10+00:00,"Final Project for Digital Systems Design Course, Fall 2020",0,kimianoorbakhsh/Verilog-Matrix-Multiplier,330123417,Verilog,Verilog-Matrix-Multiplier,7850,8,2024-04-07 06:00:01+00:00,"['verilog', 'xilinx', 'modelsim', 'digital-system-design']",https://api.github.com/licenses/mit
36,https://github.com/natanvotre/fm-transmitter.git,2020-12-15 00:03:53+00:00,"FPGA-based Fully Digital FM Transmitter using SDR (Software-Defined Radio) techniquies as up-converter using hpsdm, comb filters, cordic and so forth.",5,natanvotre/fm-transmitter,321504861,Verilog,fm-transmitter,204,8,2024-04-03 08:00:07+00:00,[],https://api.github.com/licenses/mit
37,https://github.com/cyyself/cpu232.git,2021-01-04 08:09:30+00:00,The MIPS CPU from previous CQU NSCSCC team and debugged by me running uCore MIPS porting successfully,0,cyyself/cpu232,326612689,Verilog,cpu232,61,8,2024-01-06 10:07:58+00:00,[],None
38,https://github.com/forth32/mc1201-02.git,2021-01-10 08:08:46+00:00,FPGA-версия платы МС1201.02 и ЭВМ ДВК-3,6,forth32/mc1201-02,328333689,Verilog,mc1201-02,12603,8,2023-07-07 22:27:49+00:00,[],https://api.github.com/licenses/gpl-3.0
39,https://github.com/MaxMorning/Handwritting-number-distinguishing-with-DNN-by-Nexys-4-DDR-in-Verilog-HDL.git,2020-12-22 02:42:57+00:00,Digital Logic Lecture Final Project in the first term of year 2020-21,0,MaxMorning/Handwritting-number-distinguishing-with-DNN-by-Nexys-4-DDR-in-Verilog-HDL,323502259,Verilog,Handwritting-number-distinguishing-with-DNN-by-Nexys-4-DDR-in-Verilog-HDL,6200,8,2024-01-19 11:47:03+00:00,[],https://api.github.com/licenses/mit
40,https://github.com/Armingodiz/LogicDesignFinalProject.git,2021-01-04 13:10:53+00:00,,0,Armingodiz/LogicDesignFinalProject,326687851,Verilog,LogicDesignFinalProject,12,7,2021-05-08 14:39:13+00:00,[],None
41,https://github.com/adimitris/verilog-LDPC-decoder.git,2020-12-15 19:18:33+00:00,A min-sum LDPC decoder written in SystemVerilog (IEEE 1800-2012),2,adimitris/verilog-LDPC-decoder,321766640,Verilog,verilog-LDPC-decoder,74,7,2024-03-26 03:20:57+00:00,[],https://api.github.com/licenses/gpl-3.0
42,https://github.com/mikeroyal/FPGA-Guide.git,2021-01-08 21:46:11+00:00,FPGA Guide,0,mikeroyal/FPGA-Guide,328019296,Verilog,FPGA-Guide,26,7,2023-06-17 07:09:01+00:00,"['fpga', 'verilog', 'hardware', 'fpga-soc', 'fpga-board', 'fpga-programming']",None
43,https://github.com/jes/jescpu.git,2021-01-06 01:06:02+00:00,Silly toy CPU project,1,jes/jescpu,327161927,Verilog,jescpu,29,7,2022-11-21 03:30:34+00:00,[],None
44,https://github.com/wuhanstudio/picorv32_MXO2.git,2021-01-18 18:16:39+00:00,A 32 bit RISC-V SoC (picorv32) on Lattice MXO2 (step fpga),1,wuhanstudio/picorv32_MXO2,330750862,Verilog,picorv32_MXO2,657,7,2023-07-23 14:58:22+00:00,"['picosoc', 'picorv32', 'lattice-mxo2']",None
45,https://github.com/paulsonkantony/risk-five.git,2020-12-20 19:24:36+00:00,A Verilog based implementation of the unprivileged RV32I ISA,2,paulsonkantony/risk-five,323148217,Verilog,risk-five,103166,7,2023-12-10 06:56:31+00:00,"['verilog', 'risc-v', 'rv32i']",https://api.github.com/licenses/mit
46,https://github.com/TaKeTube/FPGA-based-3D-renderer-Project.git,2021-01-19 16:19:30+00:00,👾 Complete Quartus Project for FPGA-based-3D-renderer,1,TaKeTube/FPGA-based-3D-renderer-Project,331038970,Verilog,FPGA-based-3D-renderer-Project,60598,6,2024-03-28 09:45:55+00:00,"['fpga', '3d-renderer', 'rasterizer']",https://api.github.com/licenses/mit
47,https://github.com/RBahrami/Adaptive-Median-Filter-in-Verilog.git,2021-01-10 13:52:17+00:00,Implementation of an Adaptive Median Filter in Verilog (Simulation only),1,RBahrami/Adaptive-Median-Filter-in-Verilog,328394373,Verilog,Adaptive-Median-Filter-in-Verilog,1547,6,2023-09-15 01:08:27+00:00,[],https://api.github.com/licenses/mit
48,https://github.com/GMUCERG/Ascon.git,2021-01-08 22:46:38+00:00,,0,GMUCERG/Ascon,328028811,Verilog,Ascon,433,6,2023-06-27 23:47:10+00:00,[],https://api.github.com/licenses/gpl-3.0
49,https://github.com/tomverbeure/spdif_pmod.git,2021-01-13 06:32:09+00:00,S/PDIF Output PMOD,1,tomverbeure/spdif_pmod,329215426,Verilog,spdif_pmod,2362,6,2023-11-07 07:17:19+00:00,[],https://api.github.com/licenses/mit
50,https://github.com/PetrM1/PMD85.git,2020-12-19 22:38:23+00:00,PMD85 core for MISTer FPGA,0,PetrM1/PMD85,322950620,Verilog,PMD85,3040,6,2023-11-02 20:40:13+00:00,"['pmd85', 'retrocomputing', 'mister-core']",https://api.github.com/licenses/gpl-2.0
51,https://github.com/Pavendhan-PAV/Computer-Architecture.git,2021-01-10 14:24:26+00:00,"In computer engineering, computer architecture is a set of rules and methods that describe the functionality, organization, and implementation of computer systems. Some definitions of architecture define it as describing the capabilities and programming model of a computer but not a particular implementation.",0,Pavendhan-PAV/Computer-Architecture,328401530,Verilog,Computer-Architecture,3213,6,2021-09-05 03:58:52+00:00,[],None
52,https://github.com/abdelazeem201/ASIC-Implementation-UART.git,2020-12-20 20:39:36+00:00,"This paper presents design of UART module for serial communication used for short-distance, low speed and exchange of data between computer and peripherals. UART mainly contains Transmitter, Receiver and Baud Rate Generator. Baud Rate Generator generates the clock for the UART. We can achieve the desired Baud Rate by using divide factor from system clock. If we increase the baud rate, speed of serial data transmission increases. As the dividing factor decrease baud rate increases. in this paper we set the system clock frequency as 50MHz and time to transfer each data bit is 23.75ns with baud rate of 42.1 Mbps (dividing factor is 32). Due to increase in the baud rate the time taken to transfer the data decreases, so it is very useful for faster communication devices. Transmitter and Receiver blocks designed by algorithm state machine method simulated in ModelSim, synthesized in Design Compiler, and extracted in ICC in Nangate 45 nm CMOS cell library.",2,abdelazeem201/ASIC-Implementation-UART,323160670,Verilog,ASIC-Implementation-UART,9528,6,2024-02-11 02:24:43+00:00,"['asic', 'fpga', 'rtl', 'verilog', 'eda', 'pnr', 'soc', 'synthesis', 'uart', 'vhdl']",https://api.github.com/licenses/mit
53,https://github.com/affanabbasi/G_Skywater130nm_1stTO.git,2020-12-19 00:22:41+00:00,,2,affanabbasi/G_Skywater130nm_1stTO,322734046,Verilog,G_Skywater130nm_1stTO,223961,6,2023-07-13 13:53:00+00:00,[],https://api.github.com/licenses/apache-2.0
54,https://github.com/ricynlee/femto.git,2021-01-01 01:58:05+00:00,支持调试的极简RISCV-V微控制器 A minimalist RISC-V microcontroller with debugging support,1,ricynlee/femto,325902266,Verilog,femto,16832,5,2023-03-16 13:08:52+00:00,[],https://api.github.com/licenses/mit
55,https://github.com/goran-mahovlic/ECPIX5_blink.git,2020-12-18 17:27:24+00:00,,0,goran-mahovlic/ECPIX5_blink,322661479,Verilog,ECPIX5_blink,3,5,2023-10-24 22:45:46+00:00,[],None
56,https://github.com/letyrodri/fpga-super-mario.git,2020-12-15 01:55:26+00:00,This is an implementation in Verilog of Super Mario Bros console game levels to be uploaded in a FPGA card.,1,letyrodri/fpga-super-mario,321523949,Verilog,fpga-super-mario,2760,5,2024-02-04 23:11:48+00:00,[],None
57,https://github.com/UT-LCA/tpu_v2.git,2021-01-04 14:02:44+00:00,,3,UT-LCA/tpu_v2,326702278,Verilog,tpu_v2,8818,5,2024-02-23 10:09:36+00:00,[],None
58,https://github.com/XduDavid/MIPS_CPU.git,2020-12-22 08:31:27+00:00,第一个CPU项目,1,XduDavid/MIPS_CPU,323566895,Verilog,MIPS_CPU,32849,5,2023-05-01 03:24:42+00:00,[],None
59,https://github.com/PaletiKrishnasai/Computer-Architecture.git,2021-01-09 20:56:53+00:00,Hardware designs modelled with verilog ,2,PaletiKrishnasai/Computer-Architecture,328244614,Verilog,Computer-Architecture,3691,5,2024-02-21 19:51:42+00:00,"['pipelined-risc', 'cache', 'register-file', 'floating-point-adder', 'floating-point-multiplication', 'logic-unit', 'verilog', 'hardware-designs', 'computer-architecture']",https://api.github.com/licenses/mit
60,https://github.com/duyubo/DigitalDesign-And-ComputerArchitecture.git,2020-12-17 23:58:46+00:00,,1,duyubo/DigitalDesign-And-ComputerArchitecture,322441776,Verilog,DigitalDesign-And-ComputerArchitecture,1310,5,2024-01-18 08:49:32+00:00,[],None
61,https://github.com/kas573/AGC-and-FM.git,2020-12-20 18:26:11+00:00,Курсовая работа Automatic Gain Control and Frequency Demodulation Block,3,kas573/AGC-and-FM,323138082,Verilog,AGC-and-FM,2196,5,2023-11-28 07:25:18+00:00,[],None
62,https://github.com/acsoto/BUAA-Computer-Organization.git,2021-01-17 15:31:17+00:00,BUAA计算机组成,0,acsoto/BUAA-Computer-Organization,330423063,Verilog,BUAA-Computer-Organization,2888,5,2023-11-12 02:50:38+00:00,[],None
63,https://github.com/sudhamshu091/RISC-Processor-32-bit-Verilog.git,2021-01-01 19:25:26+00:00,32 bit RISC Processor,1,sudhamshu091/RISC-Processor-32-bit-Verilog,326042177,Verilog,RISC-Processor-32-bit-Verilog,237,5,2023-10-25 02:34:38+00:00,"['verilog', 'verilog-project', 'risc-processor', 'risc-v', 'risc']",None
64,https://github.com/CHN-ChenYi/Tetris-on-SWORD-LCDF2021.git,2021-01-04 08:39:39+00:00,Tetris in Verilog -- a course project for Logic and Computer Design Fundamentals Course at ZJU.,0,CHN-ChenYi/Tetris-on-SWORD-LCDF2021,326619877,Verilog,Tetris-on-SWORD-LCDF2021,14225,5,2023-11-16 03:23:42+00:00,[],None
65,https://github.com/lawrie/ulx3s_sms.git,2020-12-25 10:55:46+00:00,Sega Master System for Ulx3s ECP5 FPGA,1,lawrie/ulx3s_sms,324344611,Verilog,ulx3s_sms,297,5,2024-04-04 11:14:24+00:00,[],None
66,https://github.com/Utodev/smartROM.git,2021-01-06 19:25:57+00:00,An alternative boot firmware (ROM) for ZX-Uno core running in FPGA boards without a flash RAM,3,Utodev/smartROM,327409667,Verilog,smartROM,26751,5,2023-09-03 20:58:18+00:00,[],https://api.github.com/licenses/gpl-3.0
67,https://github.com/amirhnajafiz-university/S3LC01.git,2021-01-03 07:44:15+00:00,Basic collection for learning logic circuits.,0,amirhnajafiz-university/S3LC01,326354369,Verilog,S3LC01,16226,5,2023-06-27 12:10:19+00:00,"['verilog', 'logic-circuit']",None
68,https://github.com/ljl0222/DynamicPipeline.git,2020-12-26 12:15:57+00:00,动态流水线的实现，Verilog,0,ljl0222/DynamicPipeline,324548490,Verilog,DynamicPipeline,16,4,2024-01-12 12:45:40+00:00,[],None
69,https://github.com/mattvenn/mph-tristate-test.git,2021-01-11 17:08:43+00:00,,1,mattvenn/mph-tristate-test,328735520,Verilog,mph-tristate-test,2539,4,2022-03-17 00:19:42+00:00,[],None
70,https://github.com/maded2/68000.git,2021-01-05 00:22:55+00:00,68000 Retro computer with Amiga Chipset,0,maded2/68000,326841223,Verilog,68000,16233,4,2023-05-31 13:03:30+00:00,[],https://api.github.com/licenses/apache-2.0
71,https://github.com/yasir-javed/bram_xilinxise.git,2020-12-17 06:35:23+00:00,,2,yasir-javed/bram_xilinxise,322203420,Verilog,bram_xilinxise,3,4,2024-04-09 10:36:10+00:00,[],None
72,https://github.com/ombhilare999/Seven-Segment-with-Tang-Primer-FPGA.git,2021-01-02 20:13:20+00:00,Seven Segment Interface with Tang Primer,0,ombhilare999/Seven-Segment-with-Tang-Primer-FPGA,326263099,Verilog,Seven-Segment-with-Tang-Primer-FPGA,29087,4,2022-07-20 09:22:12+00:00,"['fpga', 'tang-primer', 'seven-segments-display', 'sipeed']",https://api.github.com/licenses/mit
73,https://github.com/kutukvpavel/ISA_POST_card.git,2021-01-10 06:25:34+00:00,Simple 8-bit port 80h listener for ISA bus with 7-segment display.,1,kutukvpavel/ISA_POST_card,328318243,Verilog,ISA_POST_card,4322,4,2022-10-18 14:04:51+00:00,[],None
74,https://github.com/JiaxuanCai/IntegratedHardwareDesign.git,2020-12-21 08:53:58+00:00,,0,JiaxuanCai/IntegratedHardwareDesign,323280904,Verilog,IntegratedHardwareDesign,2863,4,2023-12-23 15:02:21+00:00,[],https://api.github.com/licenses/gpl-3.0
75,https://github.com/samidhm/DSP_Slice.git,2021-01-14 09:24:49+00:00,"Floating Point building blocks; Stratix-10, Agilex, Arria-10 DSP Slices",1,samidhm/DSP_Slice,329566090,Verilog,DSP_Slice,2675,4,2024-01-27 03:48:35+00:00,[],https://api.github.com/licenses/mit
76,https://github.com/Iteratorlittle/myCPU.git,2021-01-16 08:29:55+00:00,硬件综合设计实现57条指令的单周期五级流水cpu,1,Iteratorlittle/myCPU,330118158,Verilog,myCPU,30,4,2024-03-09 18:36:23+00:00,[],None
77,https://github.com/sinamna/AUT-LC-Lab.git,2021-01-10 07:04:49+00:00,,0,sinamna/AUT-LC-Lab,328323938,Verilog,AUT-LC-Lab,18,4,2021-02-10 17:54:07+00:00,[],None
78,https://github.com/ARMINPAN/Verilog_Project_Sharif.git,2020-12-15 09:42:01+00:00,Convolutional Encoder & Viterbi Decoder,0,ARMINPAN/Verilog_Project_Sharif,321620860,Verilog,Verilog_Project_Sharif,18,4,2024-02-28 09:48:02+00:00,[],https://api.github.com/licenses/apache-2.0
79,https://github.com/RBahrami/FIR-Filter.git,2021-01-10 12:21:18+00:00,Simple FIR Filter Simulation in Verilog,0,RBahrami/FIR-Filter,328376507,Verilog,FIR-Filter,78,4,2024-03-20 09:20:46+00:00,['verilog'],https://api.github.com/licenses/mit
80,https://github.com/RuyiZhou0622/HDLBits_Solutions.git,2021-01-05 20:20:56+00:00,,0,RuyiZhou0622/HDLBits_Solutions,327109997,Verilog,HDLBits_Solutions,84,3,2022-06-22 06:54:07+00:00,[],None
81,https://github.com/bunnyverma29/verilog.git,2021-01-18 19:19:44+00:00,my projects,0,bunnyverma29/verilog,330764751,Verilog,verilog,939,3,2022-06-21 19:51:02+00:00,"['digital', 'electronics', 'verilog-hdl', 'testbench']",None
82,https://github.com/yuanb/laser310_64k.git,2020-12-28 04:07:55+00:00,64K RAM extension for Vtech Laser 310 computer,0,yuanb/laser310_64k,324908529,Verilog,laser310_64k,4060,3,2023-02-18 11:42:23+00:00,[],https://api.github.com/licenses/apache-2.0
83,https://github.com/mirceanton/VHDL-Decryption.git,2020-12-24 00:30:21+00:00,"A small decryption module, written in Verilog, as a university assignment.",0,mirceanton/VHDL-Decryption,324029592,Verilog,VHDL-Decryption,570,3,2023-03-25 16:26:35+00:00,"['verilog', 'verilog-hdl', 'verilog-code', 'verilog-project', 'decryption', 'caesar-cipher', 'caesar-cipher-algorithm', 'scytale-cipher', 'zigzag-cipher', 'fence-cipher']",https://api.github.com/licenses/gpl-3.0
84,https://github.com/MiSTer-devel/Arcade-QBert_MiSTer.git,2021-01-02 14:11:20+00:00,Q*Bert core for MiSTer,14,MiSTer-devel/Arcade-QBert_MiSTer,326196592,Verilog,Arcade-QBert_MiSTer,9024,3,2023-02-07 12:20:07+00:00,[],https://api.github.com/licenses/gpl-2.0
85,https://github.com/masc-ucsc/livehd_regression.git,2021-01-08 20:05:04+00:00,LiveHD Regression suite and scripts,0,masc-ucsc/livehd_regression,328000972,Verilog,livehd_regression,53470,3,2023-02-28 13:54:37+00:00,[],https://api.github.com/licenses/apache-2.0
86,https://github.com/SyrexMinus/Combinational_lock_code.git,2021-01-11 10:53:09+00:00,Verilog code for combinational lock on FPGA,2,SyrexMinus/Combinational_lock_code,328633263,Verilog,Combinational_lock_code,32,3,2022-11-09 06:40:00+00:00,[],https://api.github.com/licenses/gpl-3.0
87,https://github.com/shibo-chen/SE-prototype.git,2020-12-20 18:21:46+00:00,,0,shibo-chen/SE-prototype,323137306,Verilog,SE-prototype,38285,3,2024-02-14 04:28:49+00:00,[],https://api.github.com/licenses/gpl-3.0
88,https://github.com/ehsanyousefzadehasl/MBC.git,2021-01-07 00:35:43+00:00,MBC stands for Mano's Basic Computer,0,ehsanyousefzadehasl/MBC,327462679,Verilog,MBC,38,3,2023-11-27 00:21:06+00:00,"['verilog', 'basic-computer', 'computer-architecture']",None
89,https://github.com/H874589148/Basic-Experiment-of-Microelectronics.git,2021-01-04 14:31:39+00:00,大四上学期2020年秋季学期微电子专业基础实验实验课文件,2,H874589148/Basic-Experiment-of-Microelectronics,326710506,Verilog,Basic-Experiment-of-Microelectronics,439213,3,2024-03-02 06:03:17+00:00,[],None
90,https://github.com/Mike-Rush/mp3_decoder_01.git,2021-01-01 04:27:59+00:00,MP3 Decoder IP,1,Mike-Rush/mp3_decoder_01,325916180,Verilog,mp3_decoder_01,58070,3,2022-07-19 04:08:45+00:00,[],None
91,https://github.com/amirhnajafiz-university/S3LC02.git,2021-01-06 09:50:46+00:00,Logical circuits course final project.,0,amirhnajafiz-university/S3LC02,327267847,Verilog,S3LC02,288,3,2023-01-31 15:48:47+00:00,"['verilog', 'circuit', 'internet-of-things', 'logical-circuits']",None
92,https://github.com/Bankee-256/CQU_MIPS32.git,2021-01-19 10:49:39+00:00,Hardware design of CQU,0,Bankee-256/CQU_MIPS32,330948360,Verilog,CQU_MIPS32,25,3,2022-05-29 07:25:23+00:00,[],https://api.github.com/licenses/mit
93,https://github.com/hjzboss/mipscpu.git,2021-01-07 12:15:50+00:00,MIPS-based five-stage pipeline CPU.基于mips的五级流水线cpu。,0,hjzboss/mipscpu,327602340,Verilog,mipscpu,1888,3,2023-12-02 21:12:07+00:00,[],https://api.github.com/licenses/apache-2.0
94,https://github.com/miyakelp/FPGA_MNIST_RandomForest.git,2020-12-17 13:36:28+00:00,MNIST RandomForestClassifier for DE0-CV (Cyclone V) written in Verilog,2,miyakelp/FPGA_MNIST_RandomForest,322305301,Verilog,FPGA_MNIST_RandomForest,317,3,2024-03-15 10:35:23+00:00,[],https://api.github.com/licenses/mit
95,https://github.com/jotego/jtsdram.git,2021-01-04 19:30:37+00:00,Checks the sanity of the SDRAM module on MiST and MiSTer systems,4,jotego/jtsdram,326787795,Verilog,jtsdram,62,3,2023-02-24 19:27:54+00:00,[],https://api.github.com/licenses/gpl-2.0
96,https://github.com/cyan333/2020CIM_FPGA.git,2021-01-04 20:49:13+00:00,,0,cyan333/2020CIM_FPGA,326804224,Verilog,2020CIM_FPGA,4491,3,2023-06-28 08:13:13+00:00,[],None
97,https://github.com/nguyenhong-hoa/IEEE754-FPCalculator.git,2021-01-04 15:58:01+00:00,This repo will describe some module to calculate with Floating-Point 32 bit,0,nguyenhong-hoa/IEEE754-FPCalculator,326734668,Verilog,IEEE754-FPCalculator,70,3,2022-07-13 08:10:20+00:00,[],None
98,https://github.com/songzhishuo/Step_verilog.git,2021-01-16 11:02:57+00:00,,1,songzhishuo/Step_verilog,330142806,Verilog,Step_verilog,93319,3,2021-12-01 11:53:35+00:00,[],None
99,https://github.com/duyhungdao/PCA-Linear-Precoder-on-FPGA.git,2021-01-08 06:26:41+00:00,FPGA Implementation of PCA Linear Precoder ,0,duyhungdao/PCA-Linear-Precoder-on-FPGA,327817607,Verilog,PCA-Linear-Precoder-on-FPGA,37427,3,2022-04-07 09:19:50+00:00,[],None
100,https://github.com/FPGA-Systems/spi-mpc3201.git,2021-01-14 11:38:53+00:00,Different SPI implementation,2,FPGA-Systems/spi-mpc3201,329597252,Verilog,spi-mpc3201,27,3,2021-01-15 11:53:58+00:00,"['fpga', 'vivado', 'hdl', 'fpgasystems', 'mpc3201']",https://api.github.com/licenses/mit
101,https://github.com/catherine499/myCPU.git,2020-12-30 06:30:30+00:00,2020虫大硬综,0,catherine499/myCPU,325473815,Verilog,myCPU,71,3,2022-12-22 01:04:12+00:00,[],None
102,https://github.com/armixz/ALU-Design-and-Development.git,2021-01-13 19:02:03+00:00,32 bits ALU include 16 commands to run/Verilog Code (.v) + Digital Circuit (.circ) ,0,armixz/ALU-Design-and-Development,329404822,Verilog,ALU-Design-and-Development,137,3,2023-10-27 17:18:15+00:00,"['verilog-hdl', 'alu', 'circuit', 'verilog']",https://api.github.com/licenses/mit
103,https://github.com/sujoyyyy/Computer-Architecture.git,2021-01-09 08:05:52+00:00,"In computer engineering, computer architecture is a set of rules and methods that describe the functionality, organization, and implementation of computer systems.",0,sujoyyyy/Computer-Architecture,328105889,Verilog,Computer-Architecture,3268,3,2021-03-16 05:15:50+00:00,"['verilog', 'floating-point', 'adder', 'single-precision-floating-point']",None
104,https://github.com/lawrie/ulx3s_z80_template.git,2021-01-19 09:19:15+00:00,Template for Z80 computer on the Ulx3s FPGA board,1,lawrie/ulx3s_z80_template,330925257,Verilog,ulx3s_z80_template,261,3,2022-07-18 18:26:55+00:00,[],None
105,https://github.com/imarcher/HIT-digital-logic.git,2020-12-17 08:18:30+00:00,哈工大数字逻辑实验和大作业相关资料,1,imarcher/HIT-digital-logic,322227113,Verilog,HIT-digital-logic,36889,3,2023-10-16 01:03:22+00:00,[],None
106,https://github.com/suoglu/IR-Transreceiver.git,2021-01-18 16:59:29+00:00,"Encoder and decoder modules for infrared receivers, transmitters and remotes",1,suoglu/IR-Transreceiver,330732285,Verilog,IR-Transreceiver,30,3,2024-01-20 13:03:30+00:00,"['fpga', 'verilog', 'ir', 'remote', 'rgb']",
107,https://github.com/Harshitha172000/IMPLEMENTATION-OF-I2C-AND-SPI-PROTOCOLS.git,2020-12-23 10:28:18+00:00,Implementation of I2C and SPI Protocols,3,Harshitha172000/IMPLEMENTATION-OF-I2C-AND-SPI-PROTOCOLS,323871632,Verilog,IMPLEMENTATION-OF-I2C-AND-SPI-PROTOCOLS,49,3,2023-06-11 14:25:58+00:00,[],None
108,https://github.com/kuashio/conways-game-of-life.git,2020-12-18 03:00:57+00:00,A Verilog implementation of Conway's Game of Life,1,kuashio/conways-game-of-life,322473012,Verilog,conways-game-of-life,998,3,2024-03-09 20:39:07+00:00,[],https://api.github.com/licenses/mit
109,https://github.com/hit-zblv/iCryptoLab_FPGA.git,2020-12-20 07:46:47+00:00,FPGA硬件加密模块（DES、AES128、SHA1）,1,hit-zblv/iCryptoLab_FPGA,323020476,Verilog,iCryptoLab_FPGA,42,2,2021-11-22 11:52:37+00:00,[],None
110,https://github.com/nikhil-feb/Digital-Design-and-Computer-Architecture.git,2021-01-02 15:26:49+00:00,,0,nikhil-feb/Digital-Design-and-Computer-Architecture,326211300,Verilog,Digital-Design-and-Computer-Architecture,12,2,2024-01-18 08:53:10+00:00,[],None
111,https://github.com/nietzhuang/2014-CIC-Contest---Serial-Transmitter-and-Data-Arrange-Controller.git,2021-01-15 13:26:41+00:00,2014 CIC contest preliminary topic,0,nietzhuang/2014-CIC-Contest---Serial-Transmitter-and-Data-Arrange-Controller,329919370,Verilog,2014-CIC-Contest---Serial-Transmitter-and-Data-Arrange-Controller,921,2,2023-08-11 14:03:01+00:00,[],None
112,https://github.com/Kyp069/zx48.sidi.git,2020-12-19 16:22:53+00:00,ZX Spectrum 48K FPGA implementation for SiDi board,4,Kyp069/zx48.sidi,322888799,Verilog,zx48.sidi,153,2,2022-11-03 21:58:44+00:00,[],None
113,https://github.com/Kenchu123/Computer_Architecture_Final.git,2020-12-22 13:23:53+00:00,,0,Kenchu123/Computer_Architecture_Final,323632521,Verilog,Computer_Architecture_Final,807,2,2022-01-12 08:54:14+00:00,[],None
114,https://github.com/18520381/Floating_Point_ALU.git,2020-12-24 04:20:16+00:00,"A Floating Point ALU 32 bit with Add, Sub, Mul, Div",1,18520381/Floating_Point_ALU,324063779,Verilog,Floating_Point_ALU,1537,2,2022-09-17 07:45:39+00:00,[],None
115,https://github.com/andydo111/moded-systolic.git,2021-01-08 20:16:03+00:00,Moded systolic array with modified MAC units.,1,andydo111/moded-systolic,328003163,Verilog,moded-systolic,5,2,2022-02-24 07:31:09+00:00,[],None
116,https://github.com/Mike-Rush/mp3_decoder_reliable.git,2021-01-01 05:35:54+00:00,MP3 decoder IP reliable,0,Mike-Rush/mp3_decoder_reliable,325923279,Verilog,mp3_decoder_reliable,79083,2,2023-09-16 03:35:37+00:00,[],None
117,https://github.com/shalan/Caravel_N5_SoC.git,2020-12-28 10:15:08+00:00,,1,shalan/Caravel_N5_SoC,324978167,Verilog,Caravel_N5_SoC,2120938,2,2021-04-27 11:13:31+00:00,[],https://api.github.com/licenses/apache-2.0
118,https://github.com/Hrier/RISC-V_pipeline.git,2020-12-21 06:03:08+00:00,Use verilog to simulate RSIC-V five-stage pipeline,0,Hrier/RISC-V_pipeline,323245573,Verilog,RISC-V_pipeline,15,2,2023-09-18 12:04:58+00:00,[],None
119,https://github.com/liuzikai/ECE411-RV32I-Processor.git,2021-01-11 12:27:07+00:00,Pipelined RV32I Processor as UIUC ECE411 FA20 Final Project,1,liuzikai/ECE411-RV32I-Processor,328656804,Verilog,ECE411-RV32I-Processor,1223,2,2022-09-20 08:52:02+00:00,[],None
120,https://github.com/riscygeek/eater-8bit.git,2021-01-08 00:51:23+00:00,Ben Eaters CPU in Verilog,0,riscygeek/eater-8bit,327760960,Verilog,eater-8bit,20,2,2024-03-27 18:24:22+00:00,[],None
121,https://github.com/lkpengcs/CS207_Project_AutomaticSellingMachine.git,2021-01-10 01:56:32+00:00,"This is the project for CS207 in 2020-2021 Fall at SUSTech, which is an automatic selling machine.",0,lkpengcs/CS207_Project_AutomaticSellingMachine,328283687,Verilog,CS207_Project_AutomaticSellingMachine,114,2,2024-03-31 03:14:12+00:00,[],None
122,https://github.com/shalan/Caravel_Plus.git,2020-12-30 19:14:59+00:00,,2,shalan/Caravel_Plus,325629461,Verilog,Caravel_Plus,2663717,2,2022-02-22 13:17:24+00:00,[],https://api.github.com/licenses/apache-2.0
123,https://github.com/nietzhuang/2013-CIC-Contest---Frequency-Analysis-System.git,2021-01-01 09:46:25+00:00,2013 CIC contest preliminary topic,0,nietzhuang/2013-CIC-Contest---Frequency-Analysis-System,325952602,Verilog,2013-CIC-Contest---Frequency-Analysis-System,124,2,2023-08-11 14:03:03+00:00,[],None
124,https://github.com/asfdzxcv/verilog_ele-organ.git,2021-01-04 14:44:27+00:00,北邮数电实验之电子琴,0,asfdzxcv/verilog_ele-organ,326714130,Verilog,verilog_ele-organ,603,2,2024-04-10 08:58:19+00:00,[],None
125,https://github.com/mztknhao1/FPGA-subpixel-edge.git,2020-12-15 03:57:30+00:00,FPGA实现边缘提取算法，matlab原型和FPGA实现verilog语言,1,mztknhao1/FPGA-subpixel-edge,321547152,Verilog,FPGA-subpixel-edge,40723,2,2023-09-20 09:18:20+00:00,[],None
126,https://github.com/2bWant2b/HDU_DC_Student_Want.git,2020-12-20 07:26:56+00:00,杭电计算机学院数字电路设计，你想要的都在这。,1,2bWant2b/HDU_DC_Student_Want,323017398,,HDU_DC_Student_Want,0,2,2023-12-31 14:22:37+00:00,[],https://api.github.com/licenses/mit
127,https://github.com/DA21S321D/led-matrix-fan.git,2020-12-17 06:48:11+00:00,led点阵风扇,0,DA21S321D/led-matrix-fan,322206066,Verilog,led-matrix-fan,20,2,2023-01-29 10:25:47+00:00,[],None
128,https://github.com/virobot/5-stage-Pipelined-CPU-Design.git,2021-01-10 02:03:35+00:00,This repository focuses on a 5-stage pipelined built of a CPU design. This project has been built in Cadence Virtuoso as well as in Verilog. The performance review is conducted through power optimization techniques and through overall power consumption.,0,virobot/5-stage-Pipelined-CPU-Design,328284567,Verilog,5-stage-Pipelined-CPU-Design,1898,2,2023-09-04 16:55:24+00:00,[],None
129,https://github.com/nouraan-ahmed/PCI_Target_Device.git,2021-01-12 11:54:50+00:00,"A Verilog Project To Create a synthesizable PCI Target Device with many scenarios of reading and writing Data to and from a buffer in the device with a condition that if the data to be written to the buffer is greater than his limit a larger buffer will store the previous data in the small buffer to let the small buffer able to store again and during the transfer of data TRDY=1 as an active low signal until transfer is completed, We Test it Using Test Bench That act as a Master Device  ",0,nouraan-ahmed/PCI_Target_Device,328971690,Verilog,PCI_Target_Device,46103,2,2023-05-17 05:23:22+00:00,[],None
130,https://github.com/liu-hz18/TrivialRISCV-CPU.git,2021-01-09 15:33:00+00:00,Five-cycle RISC-V processor (Soc) that supports exception handling and virtual memory,0,liu-hz18/TrivialRISCV-CPU,328186291,Verilog,TrivialRISCV-CPU,24859,2,2023-07-01 04:07:22+00:00,[],None
131,https://github.com/kainthpr/linuxcnc_fpga_controller.git,2020-12-21 03:24:45+00:00,DE2 Design for LinuxCNC controller + LinuxCNC component + LinuxCNC config ,1,kainthpr/linuxcnc_fpga_controller,323219925,Verilog,linuxcnc_fpga_controller,86111,2,2023-03-12 06:29:39+00:00,[],None
132,https://github.com/MiSTer-devel/Arcade-Breakout_MiSTer.git,2020-12-15 04:22:49+00:00,Arcade: Atari Breakout (1976) for MiSTer,2,MiSTer-devel/Arcade-Breakout_MiSTer,321551498,Verilog,Arcade-Breakout_MiSTer,6827,2,2023-03-08 18:25:57+00:00,[],https://api.github.com/licenses/gpl-2.0
133,https://github.com/Komeiji-Green/Elevator.git,2021-01-17 10:02:22+00:00,Xilinx-EGO1-Elevator_Controller,0,Komeiji-Green/Elevator,330360783,Verilog,Elevator,4,2,2023-04-27 07:39:27+00:00,[],None
134,https://github.com/nguyenhong-hoa/WatchdogTimer.git,2021-01-04 17:04:50+00:00,Project to build Watchdog Timer with APB interface.,0,nguyenhong-hoa/WatchdogTimer,326752437,Verilog,WatchdogTimer,305,2,2023-07-28 06:43:32+00:00,[],None
135,https://github.com/pyoumg/comsil2_hw.git,2021-01-06 03:32:04+00:00,2020-2 컴퓨터공학실험2 verilog code,0,pyoumg/comsil2_hw,327189428,Verilog,comsil2_hw,15,2,2023-08-21 12:08:58+00:00,[],None
136,https://github.com/SoCFPGA-learning/SoCKit.git,2021-01-03 21:10:46+00:00,Arrow SoCKit development kit by Terasic based on Intel® Cyclone V SoC FPGA,7,SoCFPGA-learning/SoCKit,326501340,Verilog,SoCKit,39094,2,2023-11-05 11:28:28+00:00,[],None
137,https://github.com/stineje/SpringerBookArith04.git,2020-12-15 16:34:04+00:00,"These are files from my 2004 book, ""Digital Computer Arithmetic Datapath Design Using Verilog HDL""",0,stineje/SpringerBookArith04,321726364,Verilog,SpringerBookArith04,476,2,2023-11-07 09:23:16+00:00,[],https://api.github.com/licenses/apache-2.0
138,https://github.com/duixiaoji/mutil-cycle-CPU.git,2021-01-09 14:47:51+00:00,,0,duixiaoji/mutil-cycle-CPU,328177213,Verilog,mutil-cycle-CPU,11,2,2023-06-15 00:48:42+00:00,[],None
139,https://github.com/riscygeek/rv32-cpu.git,2021-01-07 12:10:09+00:00,My first successful attempt on building a RISC-V CPU.,0,riscygeek/rv32-cpu,327601027,Verilog,rv32-cpu,8204,2,2023-04-03 11:16:47+00:00,[],https://api.github.com/licenses/gpl-2.0
140,https://github.com/Salmasherif33/PCI-Target-Device.git,2021-01-14 23:07:56+00:00,,0,Salmasherif33/PCI-Target-Device,329756022,Verilog,PCI-Target-Device,689,2,2023-05-17 06:19:50+00:00,[],None
141,https://github.com/flo-schuster/sdram-controller-quartusPrime.git,2020-12-28 21:29:08+00:00,A FPGA-based controller for a winbond W9864G6JT-6 SDRAM. This is a complete Intel Quartus Prime project for the Trenz CYC1000.,1,flo-schuster/sdram-controller-quartusPrime,325120512,Verilog,sdram-controller-quartusPrime,9,2,2023-04-08 14:30:57+00:00,[],https://api.github.com/licenses/apache-2.0
142,https://github.com/Super-Karl/CPU.git,2020-12-23 02:34:10+00:00,完结，基于FPGA开发板、使用硬件描述语言编写的CPU,0,Super-Karl/CPU,323783173,Verilog,CPU,22979,2,2022-10-11 01:40:22+00:00,[],None
143,https://github.com/kutukvpavel/ISABusListener.git,2021-01-10 05:55:17+00:00,Altera Cyclone-II-based ISA bus address listener developed for reverse-engineering of custom ISA boards.,0,kutukvpavel/ISABusListener,328314167,Verilog,ISABusListener,475,2,2022-02-16 11:17:07+00:00,[],None
144,https://github.com/suoglu/HC-SR04.git,2021-01-16 16:18:55+00:00,Verilog interface for HC-SR04 Ultrasonic Ranging Module ,3,suoglu/HC-SR04,330203658,Verilog,HC-SR04,11,2,2023-08-03 18:43:44+00:00,"['hc-sr04', 'verilog', 'fpga']",
145,https://github.com/MrPenguins/SUSTech-CS202-ComputerOrganization-2021spring.git,2021-01-19 04:20:40+00:00,The lab practice and homework in CS202: ComputerOrganization 2021spring.,0,MrPenguins/SUSTech-CS202-ComputerOrganization-2021spring,330862149,Verilog,SUSTech-CS202-ComputerOrganization-2021spring,12602,2,2023-05-18 06:33:56+00:00,[],None
146,https://github.com/fatemedbghi/neural_network_verilog.git,2021-01-18 14:40:54+00:00,,1,fatemedbghi/neural_network_verilog,330695199,Verilog,neural_network_verilog,1528,2,2023-11-08 18:10:28+00:00,[],None
147,https://github.com/ClubieDong/MIPS-CPU.git,2020-12-26 13:16:05+00:00,"5-stage pipelined 32-bit MIPS CPU, supporting 57 kinds of instructions and 7 kinds of exceptions.",0,ClubieDong/MIPS-CPU,324558794,Verilog,MIPS-CPU,780,2,2021-05-26 07:21:30+00:00,[],https://api.github.com/licenses/mit
148,https://github.com/wtfuzz/hyperbus.git,2020-12-22 03:03:20+00:00,HyperBus/HyperRAM Controller Core,2,wtfuzz/hyperbus,323505927,Verilog,hyperbus,422,2,2023-07-08 02:19:05+00:00,[],
149,https://github.com/Gotg3/ISA_Lab3.git,2020-12-29 17:39:14+00:00,,0,Gotg3/ISA_Lab3,325349627,Verilog,ISA_Lab3,81036,2,2024-02-21 09:24:05+00:00,[],None
150,https://github.com/yasir-javed/vga_bram.git,2020-12-15 05:41:21+00:00,,1,yasir-javed/vga_bram,321564956,Verilog,vga_bram,73,2,2024-03-27 14:08:48+00:00,[],None
151,https://github.com/Hesse73/Simple-Implementation-of-Image-Convolution-on-FPGA.git,2020-12-25 09:10:43+00:00,用FPGA实现简单的图像卷积操作,0,Hesse73/Simple-Implementation-of-Image-Convolution-on-FPGA,324328481,Verilog,Simple-Implementation-of-Image-Convolution-on-FPGA,1511,2,2023-06-02 15:27:55+00:00,[],None
152,https://github.com/Patt-Senior-Design/core-design.git,2021-01-09 16:27:16+00:00,Out-of-Order RISC-V Core Design in Behavioral Verilog and RTL,1,Patt-Senior-Design/core-design,328197057,Verilog,core-design,664,2,2022-05-24 17:38:37+00:00,[],None
153,https://github.com/FVGAce/FPGA.git,2020-12-31 21:10:36+00:00,,0,FVGAce/FPGA,325873831,Verilog,FPGA,41,2,2022-12-03 08:15:36+00:00,[],None
154,https://github.com/oscaracgg/sonar_tracker_fpga.git,2020-12-15 18:45:53+00:00,,1,oscaracgg/sonar_tracker_fpga,321758630,Verilog,sonar_tracker_fpga,10,2,2022-05-31 22:36:14+00:00,[],https://api.github.com/licenses/bsd-3-clause
155,https://github.com/travisg/logic.git,2020-12-28 05:01:39+00:00,,0,travisg/logic,324916196,Verilog,logic,10,2,2022-01-13 16:07:19+00:00,[],https://api.github.com/licenses/mit
156,https://github.com/mhomidi/ARM.git,2020-12-26 21:39:39+00:00,An implementation of ARM processor,1,mhomidi/ARM,324639340,Verilog,ARM,34,1,2022-07-28 14:17:55+00:00,"['arm', 'computer-architecture', 'verilog']",None
157,https://github.com/neginkheirmand/LogicalCircuits_Lab.git,2020-12-23 16:21:09+00:00,Lab  HWs of Logical Circuits,0,neginkheirmand/LogicalCircuits_Lab,323948982,Verilog,LogicalCircuits_Lab,660,1,2021-11-26 17:26:13+00:00,[],None
158,https://github.com/alaql89/SARO_benchmarks_CAD4Assurance.git,2020-12-20 02:36:38+00:00,,1,alaql89/SARO_benchmarks_CAD4Assurance,322979047,Verilog,SARO_benchmarks_CAD4Assurance,4610,1,2023-10-16 09:06:53+00:00,[],None
159,https://github.com/Glowman554/VirtualAGC-v.git,2020-12-28 19:18:34+00:00,,1,Glowman554/VirtualAGC-v,325096971,Verilog,VirtualAGC-v,2696,1,2023-09-08 18:16:29+00:00,[],None
160,https://github.com/GradCristi/verilog-prime.git,2021-01-04 18:16:42+00:00,"A relatively simple program that removes non-prime numbers from an array, but which is based on a complex(for me, at least) architecture of a calculator, which has been implemented in Verilog.",0,GradCristi/verilog-prime,326770689,Verilog,verilog-prime,125,1,2021-06-11 09:33:32+00:00,[],https://api.github.com/licenses/gpl-3.0
161,https://github.com/VrajeshPatel20/Verilog.git,2020-12-19 18:49:41+00:00,Understanding the operation of registers (Verilog),0,VrajeshPatel20/Verilog,322916184,Verilog,Verilog,11,1,2021-01-08 00:29:10+00:00,[],https://api.github.com/licenses/mit
162,https://github.com/pradyumnac26/MISR-Multiple-Input-Signature-Register-.git,2021-01-16 09:23:41+00:00,"Design the five-stage MISR shown usingf(x)=1+x+x3+x4+x5fx=1+x+x3+x4+x5. Compute the fault-free signature for fault free sequence M0 = {011011}, M1= {101101}, M2 = {010101}, M3 = {011110} and M4={100001}. Then, compute the signature for the faulty sequences M0’ = {011100}, M1’ = {111101}, M2’ = {010111}, M3’ = {011111},M4’={100001}",0,pradyumnac26/MISR-Multiple-Input-Signature-Register-,330126552,Verilog,MISR-Multiple-Input-Signature-Register-,1,1,2022-01-25 08:59:02+00:00,[],None
163,https://github.com/Salah-M/Depth-First-Search-Finite-State-Machine.git,2021-01-08 15:47:37+00:00,Hardware Implementation for Depth First Search using Verilog,0,Salah-M/Depth-First-Search-Finite-State-Machine,327944927,Verilog,Depth-First-Search-Finite-State-Machine,1547,1,2021-01-08 16:00:20+00:00,[],None
164,https://github.com/ParimalaS27/Parallel-Prefix-Adder-8bit-UE19CS206-DDCOLab.git,2021-01-06 08:05:42+00:00,This repo consists of the iverilog implementation of a Parallel Prefix adder - 8bit (I/P - O/P). This was done as a part of a project Under UE19CS206 - Digital Design and Computer Organization Laboratory Course at PES University. ,2,ParimalaS27/Parallel-Prefix-Adder-8bit-UE19CS206-DDCOLab,327242439,Verilog,Parallel-Prefix-Adder-8bit-UE19CS206-DDCOLab,509,1,2023-03-09 16:51:25+00:00,"['verilog', 'iverilog', 'icarus-verilog', 'prefix', 'prefix-adder', '8bit', 'ddco', 'parallel-prefixsum']",None
165,https://github.com/cococo2000/myCPU.git,2021-01-15 13:47:55+00:00,,0,cococo2000/myCPU,329924360,Verilog,myCPU,77,1,2023-07-07 01:33:26+00:00,[],None
166,https://github.com/riasingh12/16-bit-shift-adder.git,2021-01-14 20:40:11+00:00,,0,riasingh12/16-bit-shift-adder,329729106,Verilog,16-bit-shift-adder,5905,1,2021-07-06 07:11:10+00:00,[],None
167,https://github.com/nr-electronics/FPGA.Verilog.git,2020-12-28 15:07:15+00:00,FPGA course on Verilog,0,nr-electronics/FPGA.Verilog,325042818,Verilog,FPGA.Verilog,18122,1,2022-08-30 19:47:17+00:00,[],None
168,https://github.com/wh201906/HDLBits.git,2020-12-29 07:06:50+00:00,Some exercises,0,wh201906/HDLBits,325212868,Verilog,HDLBits,51,1,2022-06-05 07:46:10+00:00,[],https://api.github.com/licenses/mit
169,https://github.com/mariamhmousa/femtoRV32.git,2020-12-29 09:32:02+00:00,,0,mariamhmousa/femtoRV32,325244383,Verilog,femtoRV32,2249,1,2022-10-07 14:41:32+00:00,[],None
170,https://github.com/Hanyuezhuohua/toy-tomasulo-cpu.git,2020-12-19 10:31:48+00:00,,0,Hanyuezhuohua/toy-tomasulo-cpu,322821715,Verilog,toy-tomasulo-cpu,35,1,2022-04-14 08:33:19+00:00,[],None
171,https://github.com/george-shaw-czx/-verilog.git,2020-12-16 07:56:47+00:00,BUPT数电部分课内实验,0,george-shaw-czx/-verilog,321909835,Verilog,-verilog,72,1,2021-04-23 14:36:38+00:00,[],None
172,https://github.com/pan2013e/FPGA-Jack-Frost.git,2021-01-18 15:58:35+00:00,,0,pan2013e/FPGA-Jack-Frost,330716866,Verilog,FPGA-Jack-Frost,9,1,2023-12-30 10:48:55+00:00,[],None
173,https://github.com/r08922128/CA-2020-Project2.git,2021-01-02 13:31:41+00:00,Pipelined CPU Using Verilog,0,r08922128/CA-2020-Project2,326189277,Verilog,CA-2020-Project2,157,1,2022-01-22 08:31:05+00:00,[],None
174,https://github.com/teekamkhandelwal/Floating_point_32_bit_adder_sub.git,2020-12-21 08:38:52+00:00,in this respiratory cover adder and subtractor part  and containing testbench and simulation waveform,0,teekamkhandelwal/Floating_point_32_bit_adder_sub,323277390,Verilog,Floating_point_32_bit_adder_sub,29,1,2020-12-21 09:08:44+00:00,[],https://api.github.com/licenses/gpl-3.0
175,https://github.com/tejakrishna1996/1-3-router-using-verilog.git,2021-01-10 16:46:52+00:00,,0,tejakrishna1996/1-3-router-using-verilog,328431225,Verilog,1-3-router-using-verilog,4,1,2021-01-10 17:15:26+00:00,[],None
176,https://github.com/abhishek2002228/uart-core.git,2021-01-11 16:09:09+00:00,Basic UART RX/TX modules with FIFO interface for FPGA's,0,abhishek2002228/uart-core,328719401,Verilog,uart-core,922,1,2021-01-11 16:16:13+00:00,[],None
177,https://github.com/thesrsakabuvttchi/VLSI.git,2020-12-24 15:50:59+00:00,Collection of exercises done in VLSI LAB at college,0,thesrsakabuvttchi/VLSI,324189361,Verilog,VLSI,692,1,2020-12-25 14:15:11+00:00,[],None
178,https://github.com/jensdaci/FIR-Filter.git,2020-12-29 05:05:09+00:00,Design of a 64-tap and 16-bit Finite Impulse Response (FIR) Filter using Verilog. ,0,jensdaci/FIR-Filter,325191009,Verilog,FIR-Filter,19466,1,2022-11-09 05:15:08+00:00,[],None
179,https://github.com/Arvind595/Verilog-stuff.git,2020-12-28 07:20:14+00:00,An verilog repository for VHDL codes and Testbench with RTL (Xilinx 14.7),0,Arvind595/Verilog-stuff,324940759,Verilog,Verilog-stuff,1020,1,2022-04-16 21:38:06+00:00,"['vhdl', 'rtl']",https://api.github.com/licenses/gpl-3.0
180,https://github.com/RMolaei/fifo_generator.git,2020-12-26 19:55:14+00:00,This Repository was created and aimed to study FIFO vs FWFT.,0,RMolaei/fifo_generator,324625463,Verilog,fifo_generator,29,1,2022-11-07 07:44:29+00:00,"['xilinx', 'fifo', 'fwft', 'verilog']",None
181,https://github.com/yehia2000000/Usart-hardware-implementation-.git,2021-01-01 14:37:21+00:00,Design USART communication protocol by verilog ,1,yehia2000000/Usart-hardware-implementation-,325995839,Verilog,Usart-hardware-implementation-,233,1,2022-02-16 08:26:34+00:00,[],None
182,https://github.com/DimiLaprog/3-Bit-ALU-With-Overflow-Bit.git,2021-01-15 18:25:13+00:00,"3 Bit Arithmetic Logic Unit(ALU) with Overflow Bit ,implemented with DSCH 3.5, Microwind and Verilog.",0,DimiLaprog/3-Bit-ALU-With-Overflow-Bit,329991206,Verilog,3-Bit-ALU-With-Overflow-Bit,8,1,2022-03-22 19:56:34+00:00,[],None
183,https://github.com/udithhaputhanthri/FPGA-Multicore-Matrix-Multiplication-Sem5.git,2021-01-15 03:17:57+00:00,Multicore FPGA Matrix Multiplication,1,udithhaputhanthri/FPGA-Multicore-Matrix-Multiplication-Sem5,329796923,Verilog,FPGA-Multicore-Matrix-Multiplication-Sem5,22605,1,2022-08-11 18:20:07+00:00,[],None
184,https://github.com/mukulgarg015/VGA-Game-Design-using-Verilog-on-Basys-3-FPGA-Board.git,2020-12-27 14:40:38+00:00,"In the designed game, the player has to reach the maze's end in a given time crossing all the hurdles. The player can also take certain powers available on the path. BROMs and different frequency clocks are extensively utilized.",0,mukulgarg015/VGA-Game-Design-using-Verilog-on-Basys-3-FPGA-Board,324781421,Verilog,VGA-Game-Design-using-Verilog-on-Basys-3-FPGA-Board,129,1,2021-03-02 07:31:43+00:00,[],None
185,https://github.com/CapSylar/65C02-SBC.git,2021-01-02 08:24:48+00:00,single board computer based on the venerable 6502 with graphics capabilities,0,CapSylar/65C02-SBC,326139910,Verilog,65C02-SBC,20432,1,2022-05-29 15:46:08+00:00,[],None
186,https://github.com/yasnakateb/SdramController.git,2020-12-28 11:45:24+00:00,🛠 A SDRAM controller in Verilog HDL,0,yasnakateb/SdramController,324997458,Verilog,SdramController,49,1,2023-05-21 08:56:16+00:00,"['sdram', 'sdram-controller', 'verilog', 'verilog-hdl', 'icarus-verilog', 'iverilog', 'memory-controller']",None
187,https://github.com/alanswx/Arcade-TempestFromBZ_MiSTer.git,2020-12-30 15:02:25+00:00,,2,alanswx/Arcade-TempestFromBZ_MiSTer,325578717,Verilog,Arcade-TempestFromBZ_MiSTer,16127,1,2022-03-13 22:07:57+00:00,[],None
188,https://github.com/ianjchadwick/FPGA-pseudo-terminal.git,2020-12-29 22:21:06+00:00,"A custom ""psuedo-terminal"" completed as a final project in collaboration with Sophia Delia, John Ngo and Jack Locke in EC311 at Boston University.",0,ianjchadwick/FPGA-pseudo-terminal,325398721,Verilog,FPGA-pseudo-terminal,2027,1,2021-01-27 01:50:45+00:00,[],None
189,https://github.com/MiSTer-devel/ADCTest_MiSTer.git,2021-01-01 16:55:06+00:00,Utility core to test the ADC board and input levels (for tape input),1,MiSTer-devel/ADCTest_MiSTer,326018849,Verilog,ADCTest_MiSTer,840,1,2021-08-21 01:32:11+00:00,[],https://api.github.com/licenses/gpl-2.0
190,https://github.com/MeenakshiShankar/parking_system.git,2021-01-02 02:19:09+00:00,,0,MeenakshiShankar/parking_system,326092618,Verilog,parking_system,209,1,2022-11-22 11:00:21+00:00,[],None
191,https://github.com/D3r3k23/VGA-Char-ROM.git,2020-12-15 23:34:14+00:00,,0,D3r3k23/VGA-Char-ROM,321815386,Verilog,VGA-Char-ROM,377,1,2023-10-12 13:14:28+00:00,[],None
192,https://github.com/scott306lr/pikachu_volleyball.git,2020-12-22 11:03:55+00:00,NCTU Dlab 2020 final project,1,scott306lr/pikachu_volleyball,323601301,Verilog,pikachu_volleyball,28339,1,2022-12-18 06:08:52+00:00,[],None
193,https://github.com/mostafasamir9/PCI-SLAVE.git,2020-12-21 19:21:19+00:00,Verilog-PCI Slave,0,mostafasamir9/PCI-SLAVE,323427960,Verilog,PCI-SLAVE,1303,1,2023-05-17 04:57:51+00:00,[],None
194,https://github.com/AdityaNG/Parallel-Prefix-Adder.git,2020-12-21 15:05:04+00:00,"Parallel Prefix Adders achieve logarithmic time complexity by means of parallelizing the operation. For an n bit prefix adder, the critical path is one xor gate, one and/or gate and log(n) modules.",1,AdityaNG/Parallel-Prefix-Adder,323369124,Verilog,Parallel-Prefix-Adder,1385,1,2023-01-31 06:31:49+00:00,['parallel-prefixsum'],None
195,https://github.com/SH-Hattrick/NJUTyping-game.git,2020-12-28 04:48:49+00:00,南京大学数字电路大实验 （verilog）,0,SH-Hattrick/NJUTyping-game,324914298,Verilog,NJUTyping-game,795,1,2023-11-04 10:49:46+00:00,[],None
196,https://github.com/dhruvshah0208/FPGA-Neuro-Interface.git,2021-01-17 12:32:51+00:00,,0,dhruvshah0208/FPGA-Neuro-Interface,330386685,Verilog,FPGA-Neuro-Interface,13,1,2021-11-19 06:57:37+00:00,[],None
197,https://github.com/Genj1Kai/ECE385-FinalProject.git,2021-01-12 08:44:12+00:00,ECE385 FinalProject from ZJUI FA2020,0,Genj1Kai/ECE385-FinalProject,328923870,Verilog,ECE385-FinalProject,52735,1,2021-02-18 03:18:16+00:00,[],https://api.github.com/licenses/mit
198,https://github.com/BasmalaMagdy/PCI-Target-Device.git,2021-01-18 18:38:00+00:00,,0,BasmalaMagdy/PCI-Target-Device,330755608,Verilog,PCI-Target-Device,993,1,2021-01-21 22:55:32+00:00,[],None
199,https://github.com/Rahg29/Hardware-Security.git,2021-01-04 14:12:17+00:00,Mitigating SAT attack by integrating Anti-SAT block into a locked circuit,0,Rahg29/Hardware-Security,326704973,Verilog,Hardware-Security,638,1,2023-01-24 15:39:57+00:00,[],None
200,https://github.com/G-pacman/CORDIC-Verilog.git,2021-01-05 20:25:32+00:00,CORDIC,0,G-pacman/CORDIC-Verilog,327111014,Verilog,CORDIC-Verilog,6,1,2021-11-23 06:24:24+00:00,[],None
201,https://github.com/zli87/Verilog_Practice.git,2020-12-30 00:57:20+00:00,This repo shows my practice of some interview questions.,0,zli87/Verilog_Practice,325420352,Verilog,Verilog_Practice,224,1,2022-10-23 11:05:03+00:00,[],None
202,https://github.com/erictaur/Component-Labeler.git,2021-01-13 05:09:13+00:00,A hardware implementation of component labeling,0,erictaur/Component-Labeler,329200237,Verilog,Component-Labeler,243,1,2022-12-03 07:33:03+00:00,"['component-labeler', 'verilog', 'synthesizable']",None
203,https://github.com/Darkkogging/Neo-Ligth.git,2020-12-15 21:57:38+00:00,,0,Darkkogging/Neo-Ligth,321799034,Verilog,Neo-Ligth,7802,1,2021-08-24 03:49:07+00:00,[],None
204,https://github.com/shalan/Caravel_Chameleon_SoC.git,2020-12-29 15:03:06+00:00,,1,shalan/Caravel_Chameleon_SoC,325315691,Verilog,Caravel_Chameleon_SoC,359709,1,2022-04-07 06:15:33+00:00,[],https://api.github.com/licenses/apache-2.0
205,https://github.com/erfanshayegani/wlan802.11a_scrambler_descrambler_V.git,2021-01-04 21:12:52+00:00,synchronous data scrambler and descrambler synthesized on Spartan6 FPGA,0,erfanshayegani/wlan802.11a_scrambler_descrambler_V,326808920,Verilog,wlan802.11a_scrambler_descrambler_V,24,1,2023-04-22 00:05:41+00:00,[],None
206,https://github.com/zhuyh128/Computer_Organization.git,2021-01-11 09:37:43+00:00,計算機組織 mips/fpa/riscv_cpu/cache,0,zhuyh128/Computer_Organization,328614370,,Computer_Organization,18175,1,2021-06-06 13:45:08+00:00,[],None
207,https://github.com/WrathofBhuvan11/32bit_risc_verilog.git,2021-01-18 04:55:42+00:00,a generic Verilog based description of risc processor,0,WrathofBhuvan11/32bit_risc_verilog,330558343,Verilog,32bit_risc_verilog,799,1,2023-10-21 10:13:34+00:00,[],None
208,https://github.com/ChungChenWei/CA2020_RISK-V_project2.git,2020-12-22 16:23:07+00:00,,2,ChungChenWei/CA2020_RISK-V_project2,323676663,Verilog,CA2020_RISK-V_project2,3808,1,2023-12-21 09:19:44+00:00,[],None
209,https://github.com/santhosh-raghul/Computer-Architecture.git,2021-01-09 23:19:08+00:00,Work done in Computer Architecture course,0,santhosh-raghul/Computer-Architecture,328264915,Verilog,Computer-Architecture,2941,1,2021-05-14 09:32:35+00:00,[],None
210,https://github.com/Gardenia-Tian/Pipeline-CPU.git,2020-12-15 12:02:41+00:00,SYSU计算机组成原理流水线CPU（Pipeline CPU）,1,Gardenia-Tian/Pipeline-CPU,321655131,Verilog,Pipeline-CPU,13548,1,2023-11-04 12:00:46+00:00,[],None
211,https://github.com/neurorulez/CtrlModule_Loader_Sram.git,2020-12-15 09:12:39+00:00,,0,neurorulez/CtrlModule_Loader_Sram,321613132,Verilog,CtrlModule_Loader_Sram,282,1,2021-03-25 21:28:02+00:00,[],None
212,https://github.com/VinhTA-Computer-Master/VerilogHDL-Divide_by_3.git,2020-12-16 02:28:53+00:00,"Realizations of 3-divider implemented by behavioral, structural and sequential models using Verilog.",0,VinhTA-Computer-Master/VerilogHDL-Divide_by_3,321845452,Verilog,VerilogHDL-Divide_by_3,10,1,2022-11-07 01:08:47+00:00,[],None
213,https://github.com/aia39/Arithmetic-Logic-Unit-ALU-Design-and-Simulation-In-Verilog-and-Proteus.git,2020-12-21 19:36:45+00:00,This is a repository for our EEE 304 course project. The name of the course is Digital Electronics Laboratory. We have explored the ALU section of modern CPU using the concept of elementary digital electronics. Here verilog HDL was coded using Quartus II 9.0 version software and 4 bit ALU hardware design was done using Proteus software. ,0,aia39/Arithmetic-Logic-Unit-ALU-Design-and-Simulation-In-Verilog-and-Proteus,323431047,Verilog,Arithmetic-Logic-Unit-ALU-Design-and-Simulation-In-Verilog-and-Proteus,1692,1,2021-02-26 13:58:14+00:00,[],None
214,https://github.com/zbs9804/Whole-process-design-of-digital-and-analog-circuits.git,2020-12-19 09:28:06+00:00,,0,zbs9804/Whole-process-design-of-digital-and-analog-circuits,322811083,Verilog,Whole-process-design-of-digital-and-analog-circuits,1333,1,2023-07-23 22:21:10+00:00,[],None
215,https://github.com/pbaral5/Implementation-of-ANN-to-predict-Handwritten-Language-in-FPGA.git,2021-01-05 06:55:52+00:00,,0,pbaral5/Implementation-of-ANN-to-predict-Handwritten-Language-in-FPGA,326913836,Verilog,Implementation-of-ANN-to-predict-Handwritten-Language-in-FPGA,2119,1,2021-11-23 09:52:47+00:00,[],None
216,https://github.com/Mcc748/FPGA_item.git,2020-12-27 04:57:47+00:00,all_.v_file,1,Mcc748/FPGA_item,324689784,Verilog,FPGA_item,85122,1,2023-02-15 08:14:10+00:00,[],None
217,https://github.com/Karikaranvetti/Building-a-Simple-Processor-and-Memory-Hierarchy.git,2020-12-15 09:39:29+00:00,"The microarchitecture of a processor is designed based on an Instruction Set. Your processor should implement the instructions add, sub, and, or, mov, loadi, j and beq. All instructions are of 32-bit fixed length",0,Karikaranvetti/Building-a-Simple-Processor-and-Memory-Hierarchy,321620189,Verilog,Building-a-Simple-Processor-and-Memory-Hierarchy,2042,1,2023-01-13 22:07:26+00:00,[],None
218,https://github.com/DogeW/TechV.git,2020-12-15 15:13:28+00:00,mips cpu core,0,DogeW/TechV,321705095,Verilog,TechV,392,1,2020-12-17 13:04:24+00:00,[],https://api.github.com/licenses/bsd-3-clause
219,https://github.com/hust-gaoyujing/E200.git,2020-12-22 06:25:20+00:00,That's for E200-opensource,0,hust-gaoyujing/E200,323541000,Verilog,E200,73737,1,2023-02-14 08:19:12+00:00,[],None
220,https://github.com/quangphan2405/VLA.git,2020-12-21 22:34:32+00:00,Create a simple RISC processor using Verilog and explore Verilog constructs,0,quangphan2405/VLA,323463112,Verilog,VLA,814,1,2021-01-13 08:45:09+00:00,[],None
221,https://github.com/vladshup/ub1amz_v05.git,2021-01-10 11:17:53+00:00,,0,vladshup/ub1amz_v05,328364994,Verilog,ub1amz_v05,17938,1,2022-08-30 04:48:01+00:00,[],None
222,https://github.com/diamond2nv/Basys3HexaDisplay.git,2021-01-05 15:47:13+00:00,"A Verilog module, which can display four hexadecimal digits on the seven-segment display of the Basys 3 Artix-7 FPGA.",0,diamond2nv/Basys3HexaDisplay,327044996,,Basys3HexaDisplay,154,1,2021-05-13 03:14:59+00:00,[],None
223,https://github.com/abdallah-elsawy/7-4-Hamming-code.git,2021-01-06 17:54:13+00:00,"The (7,4) Hamming code encodes 4-bits message using only 3-parity bits for a total of 7-bits, each of the 3-parity bits are parity for 3 of the 4-data bits, and no 2-parity bits are for the same 3-data bits. All of the parity bits are even parity   The total 7-bits are arranged using a special layout plan that is determined by creating a 4×7 generator matrix [G] which was implemented by R.W Hamming using these equations -comes from parity bit definitions- and some mathematics   ",0,abdallah-elsawy/7-4-Hamming-code,327389255,Verilog,7-4-Hamming-code,677,1,2022-06-23 21:10:47+00:00,[],None
224,https://github.com/mattvenn/part3_intro.git,2021-01-18 14:29:53+00:00,,0,mattvenn/part3_intro,330692043,Verilog,part3_intro,7,1,2022-03-17 00:19:44+00:00,[],None
225,https://github.com/develone/iverilog-examples.git,2021-01-08 12:51:12+00:00,,0,develone/iverilog-examples,327902098,Verilog,iverilog-examples,275,1,2021-02-04 05:17:00+00:00,[],None
226,https://github.com/HamedGhoochanian/Single-cycle-mips.git,2021-01-12 09:30:44+00:00,A single cycle MIPS processor implemented in verilog,0,HamedGhoochanian/Single-cycle-mips,328935742,Verilog,Single-cycle-mips,8,1,2021-01-14 06:16:08+00:00,[],None
227,https://github.com/zettasticks/Bdd-Fpga.git,2020-12-31 16:02:46+00:00,,2,zettasticks/Bdd-Fpga,325832017,Verilog,Bdd-Fpga,120,1,2023-11-22 12:37:40+00:00,[],None
228,https://github.com/ChrisUSC/EE457_exercises.git,2020-12-16 16:14:01+00:00,,0,ChrisUSC/EE457_exercises,322035841,Verilog,EE457_exercises,7777,1,2024-03-31 09:52:22+00:00,[],None
229,https://github.com/zhengyanghan28/FlowNet.git,2020-12-16 14:18:10+00:00,,0,zhengyanghan28/FlowNet,322004421,Verilog,FlowNet,1,1,2020-12-16 14:41:46+00:00,[],None
230,https://github.com/VinhTA-Computer-Master/VerilogHDL-4x16_Decoder.git,2020-12-16 02:17:53+00:00,A realization of 4x16 decoder derived from primary 3x8 decoder using Verilog.,1,VinhTA-Computer-Master/VerilogHDL-4x16_Decoder,321843348,Verilog,VerilogHDL-4x16_Decoder,2,1,2020-12-18 03:02:07+00:00,[],None
231,https://github.com/miamedra2/Transceiver_zcu102_adrv9009_hdl.git,2020-12-22 19:14:45+00:00,,1,miamedra2/Transceiver_zcu102_adrv9009_hdl,323712756,Verilog,Transceiver_zcu102_adrv9009_hdl,259795,1,2022-12-02 11:52:03+00:00,[],
232,https://github.com/Madhu-balaji-01/MemoryGame.git,2021-01-14 10:18:06+00:00,A simple game built using the Alchitry Au FPGA in Lucid HDL,0,Madhu-balaji-01/MemoryGame,329578692,Verilog,MemoryGame,1485,1,2021-05-31 09:36:45+00:00,[],None
233,https://github.com/pradyumnac26/Cellular-Automation-Rule-05.git,2021-01-16 09:20:38+00:00,"Build a four flip-flop rule cellular automaton (CA),using rule 05(rule is given in octal format)and compute its pattern sequence. Seed the CA pattern generator with “0001.",0,pradyumnac26/Cellular-Automation-Rule-05,330126045,Verilog,Cellular-Automation-Rule-05,1,1,2022-01-25 08:59:00+00:00,[],None
234,https://github.com/pradyumnac26/LFSR.git,2021-01-16 09:17:36+00:00,"Design a 4-bit maximal LFSR for primitive polynomial 1+x+x4 1+x+x4. Write the system of equation with the companion matrix for this LFSR. Compute the pattern generated by this LFSR if initialized as “0001”, with the ‘1’ in the least significant bit.  Add hardware to map the test-pattern “0011,” which is not useful, into the pattern “0000,” which detects several circuit faults.",0,pradyumnac26/LFSR,330125609,Verilog,LFSR,1,1,2022-01-12 09:39:32+00:00,[],None
235,https://github.com/FPGA-Systems/vga-basic.git,2021-01-17 15:00:36+00:00,,0,FPGA-Systems/vga-basic,330416510,Verilog,vga-basic,79,1,2021-01-17 17:59:29+00:00,[],https://api.github.com/licenses/mit
236,https://github.com/ain1084/dual_clock_buffer.git,2021-01-19 12:26:43+00:00,Dual clock buffer for modules connected by valid-ready protocol,0,ain1084/dual_clock_buffer,330972036,Verilog,dual_clock_buffer,7,1,2021-11-13 17:41:52+00:00,"['verilog', 'protocol-buffers']",https://api.github.com/licenses/unlicense
237,https://github.com/unal-edigital2-labs/2020-2-w07_entrega-_final-grupo02.git,2020-12-15 12:13:32+00:00,w07_entrega-_final-grupo02 created by GitHub Classroom,0,unal-edigital2-labs/2020-2-w07_entrega-_final-grupo02,321657706,Verilog,2020-2-w07_entrega-_final-grupo02,147217,1,2022-11-07 01:03:02+00:00,[],None
238,https://github.com/VinhTA-Computer-Master/VerilogHDL-GCD.git,2020-12-16 03:17:24+00:00,"A realization of greatest common divisor using previously built ALU, control unit and datapath.",0,VinhTA-Computer-Master/VerilogHDL-GCD,321854913,Verilog,VerilogHDL-GCD,4,1,2021-05-21 13:19:11+00:00,[],None
239,https://github.com/Zy8712/Computer-Organization-Course.git,2020-12-29 04:09:39+00:00,"Repository containing all programming related work from EECS2021 - """" (2019/2020 YorkU FW Session). Work belongs to the github user Zy8712. DO NOT reuse or distribute my work without permission.",0,Zy8712/Computer-Organization-Course,325182746,Verilog,Computer-Organization-Course,329,1,2023-02-17 02:47:54+00:00,[],None
240,https://github.com/Mohanito/RISCy-Business.git,2021-01-02 23:11:26+00:00,Pipelined Processor for RISC-V Instruction Set,0,Mohanito/RISCy-Business,326288443,Verilog,RISCy-Business,164,1,2021-03-31 18:39:49+00:00,"['risc-v', 'pipeline-processor', 'systemverilog', 'computer-architecture', 'risc', 'processor']",None
241,https://github.com/lskating/convolutionVerilog.git,2020-12-27 11:10:19+00:00,convilution,0,lskating/convolutionVerilog,324743804,Verilog,convolutionVerilog,6,1,2022-11-21 05:50:38+00:00,[],None
242,https://github.com/abdallah-elsawy/15-11-Hamming-code.git,2021-01-06 19:17:33+00:00,"This work presents a way of designing (11, 15) Hamming encoder and decoder using Verilog  Hardware Description Language . Its an error detection and correction coding technique used to detect double and single bit errors when binary data is transmitted from one end to other. It is type for forward error correction coding which doesn't require re-transmission of data when received data is found to be corrupted. In this design, Hamming code for single bit error detection and correction is implemented using Verilog HDL",0,abdallah-elsawy/15-11-Hamming-code,327407948,Verilog,15-11-Hamming-code,513,1,2022-06-23 21:08:25+00:00,[],None
243,https://github.com/Kronight/Computer-Composition-Design.git,2020-12-24 10:53:04+00:00,BUCT 计算机组成原理实验课设,0,Kronight/Computer-Composition-Design,324134163,Verilog,Computer-Composition-Design,17248,1,2023-05-25 02:28:57+00:00,[],None
244,https://github.com/L4rralde/Arquitectura-de-Procesadores.git,2020-12-21 19:28:46+00:00,Descripciones desarrolladas para las clases de arquitectura de Lagarto. ,0,L4rralde/Arquitectura-de-Procesadores,323429458,Verilog,Arquitectura-de-Procesadores,59,1,2021-09-01 14:40:15+00:00,[],None
245,https://github.com/mennyt11/SaCriWaB.git,2021-01-03 11:26:34+00:00,Safety Critical WatchDog timer and Burnout detector,3,mennyt11/SaCriWaB,326390724,Verilog,SaCriWaB,412,1,2022-06-15 09:54:50+00:00,[],https://api.github.com/licenses/mit
246,https://github.com/agn77/SoC_NiosII.git,2021-01-06 05:15:53+00:00,SoC projects using the Nios II cpu on the altera DE10-Standard FPGA,0,agn77/SoC_NiosII,327207434,Verilog,SoC_NiosII,41,1,2021-10-21 10:06:02+00:00,[],None
247,https://github.com/Icefoxzhx/Exhalation.git,2020-12-30 06:54:20+00:00,"MS108 Project in ACM class, a toy RISCV CPU",0,Icefoxzhx/Exhalation,325478315,Verilog,Exhalation,1579,1,2021-01-04 15:25:40+00:00,[],None
248,https://github.com/samyakjain5559/Verilog-Projects.git,2020-12-30 04:55:01+00:00,,0,samyakjain5559/Verilog-Projects,325458229,Verilog,Verilog-Projects,12508,1,2022-07-16 05:52:30+00:00,[],None
249,https://github.com/giomate/AnalogDevices.git,2021-01-03 08:34:32+00:00,Analog Devices Drivers,0,giomate/AnalogDevices,326362048,Verilog,AnalogDevices,27290,1,2023-04-21 11:38:14+00:00,[],None
250,https://github.com/mattvenn/formal_timer.git,2021-01-17 19:24:04+00:00,Project 3.1 Formal timer,5,mattvenn/formal_timer,330468998,Verilog,formal_timer,7,1,2022-05-24 11:41:01+00:00,"['formal-verification', 'sby', 'yosyshq']",https://api.github.com/licenses/apache-2.0
251,https://github.com/HamedGhoochanian/mips-pipelined.git,2021-01-12 09:19:33+00:00,A pipelined MIPS processor implemented in Verilog,0,HamedGhoochanian/mips-pipelined,328932817,Verilog,mips-pipelined,6,1,2021-03-02 19:55:55+00:00,[],None
252,https://github.com/PrashanthHC16/Audio-Synthesizer-on-Xilinx-FPGAs.git,2021-01-16 18:08:42+00:00,,1,PrashanthHC16/Audio-Synthesizer-on-Xilinx-FPGAs,330225499,Verilog,Audio-Synthesizer-on-Xilinx-FPGAs,874,1,2022-04-29 07:34:38+00:00,[],https://api.github.com/licenses/gpl-3.0
253,https://github.com/ShamsElgohary/PCI-Target.git,2021-01-16 22:14:28+00:00,,0,ShamsElgohary/PCI-Target,330268157,Verilog,PCI-Target,778,1,2023-05-17 05:11:54+00:00,[],None
254,https://github.com/Jackhuang-code/riscv_core.git,2020-12-30 02:37:27+00:00,five stage pipeline of a riscv core,0,Jackhuang-code/riscv_core,325436296,Verilog,riscv_core,27,1,2020-12-30 02:41:53+00:00,[],None
255,https://github.com/Liang-Z8/Mips_CPU-with-Tomasulo.git,2021-01-15 17:06:34+00:00,,0,Liang-Z8/Mips_CPU-with-Tomasulo,329973914,Verilog,Mips_CPU-with-Tomasulo,19,1,2022-11-18 22:09:10+00:00,[],https://api.github.com/licenses/apache-2.0
256,https://github.com/lowlander/riscv_soc.git,2021-01-03 11:01:59+00:00,Pipelined RISC-V SoC,0,lowlander/riscv_soc,326386070,Verilog,riscv_soc,16003,1,2022-04-16 21:37:35+00:00,"['riscv', 'vhdl', 'xilinx', 'vivado']",https://api.github.com/licenses/mit
257,https://github.com/LittleLemon666/Overcook.git,2020-12-18 02:25:18+00:00,Lab of Digital Logic Design final project.,0,LittleLemon666/Overcook,322466491,Verilog,Overcook,72,1,2022-09-29 12:27:15+00:00,[],None
258,https://github.com/pybfms/pybfms-spi.git,2020-12-23 00:03:27+00:00,BFMs for the SPI protocol,0,pybfms/pybfms-spi,323759866,Verilog,pybfms-spi,30,1,2021-10-28 22:26:43+00:00,[],https://api.github.com/licenses/apache-2.0
259,https://github.com/AntwanEmil/PCI-SLAVE.git,2021-01-19 19:45:27+00:00,PCI-Slave Verilog code,0,AntwanEmil/PCI-SLAVE,331091035,Verilog,PCI-SLAVE,5,1,2023-05-17 04:57:08+00:00,[],None
260,https://github.com/yuex1994/hier_soc.git,2021-01-13 13:10:48+00:00,,0,yuex1994/hier_soc,329312228,Verilog,hier_soc,1756,1,2022-09-22 10:55:09+00:00,[],None
261,https://github.com/Sarthakchandra/FIFO-64bit.git,2020-12-24 11:05:04+00:00,"In this part, we will learn how to implement a FIFO Memory using FIFO Generator IP with given size and customize it. We will also look into various signals and their use associated with FIFO. For more details refer to Lab6.pdf",0,Sarthakchandra/FIFO-64bit,324136277,Verilog,FIFO-64bit,1390,1,2022-11-04 04:09:38+00:00,[],None
262,https://github.com/eda-lab/QR_Codes_Decoding_Accelerator.git,2020-12-24 13:42:09+00:00,Software and  accelerator project for decoding of QR codes,0,eda-lab/QR_Codes_Decoding_Accelerator,324165097,Verilog,QR_Codes_Decoding_Accelerator,2147,1,2021-03-07 08:24:11+00:00,[],None
263,https://github.com/Sayed-Abdul-Monem/11-15-Hamming-Encoder-Decoder.git,2021-01-14 14:18:58+00:00,This project introduces how to design a 11-bit hamming code encoder to 15-bit hamming code decoder ,0,Sayed-Abdul-Monem/11-15-Hamming-Encoder-Decoder,329636689,Verilog,11-15-Hamming-Encoder-Decoder,9,1,2023-11-23 10:32:27+00:00,[],None
264,https://github.com/vmazashvili/HW8-Decoder-Control.git,2020-12-19 18:33:02+00:00,"Completed the decoder unit of the simple CPU, and added the datapath control logics",1,vmazashvili/HW8-Decoder-Control,322913213,Verilog,HW8-Decoder-Control,365,1,2023-11-27 01:04:37+00:00,"['verilog', 'arm', 'cpu', 'instruction', 'decoder']",None
265,https://github.com/shalan/EL2_SoC.git,2021-01-01 09:56:37+00:00,,2,shalan/EL2_SoC,325953812,Verilog,EL2_SoC,454260,1,2021-04-26 11:46:45+00:00,[],https://api.github.com/licenses/apache-2.0
266,https://github.com/abdelazeem201/ASIC-Implementation-of-a-Cruise-Control-System-.git,2020-12-20 18:33:26+00:00,"This Paper presents a modified Cruise Control System application specific integrated circuit (ASIC) with speed feedback controller in motor drive. The proposed cruise Control ASIC not only decreases the ripple of hysteresis controller but also enhances the performance of motor controller. Verilog hardware description language (Verilog HDL) is used to implement the hardware architecture; and that an ASIC is fabricated in Nangate 45nm process with cell-based design method. Both switching and calculating delay times mainly contribute the ripples which degrade the control quality in motor drive. By using the predictive scheme, we not only improve the ripple issue of the traditional direct torque control technique, but also make the control system more stable by decreasing the time delay in hysteresis controller. According to the measured results, the proposed Cruise Control System ASIC performs with the coverage of 99.10 % and the fault coverage of 98.28 % at the operating frequency of 250 MHz, the supplied voltage of 1.2 V and the power consumption of 36.9976 uW.",1,abdelazeem201/ASIC-Implementation-of-a-Cruise-Control-System-,323139389,Verilog,ASIC-Implementation-of-a-Cruise-Control-System-,4052,1,2022-04-05 01:20:59+00:00,[],https://api.github.com/licenses/bsd-2-clause
267,https://github.com/prateekagrawaliiit/Computer-Architecture.git,2021-01-09 19:18:18+00:00,The following repository contains various programs developed as a part of Computer Architecture Practice Course,0,prateekagrawaliiit/Computer-Architecture,328228975,Verilog,Computer-Architecture,5825,1,2021-03-22 08:00:13+00:00,[],None
268,https://github.com/widcardw/Clock.git,2021-01-06 11:51:55+00:00,Quartus II project Clock,0,widcardw/Clock,327296244,Verilog,Clock,7040,1,2022-05-17 08:20:06+00:00,[],None
269,https://github.com/vnegnev/flocra_system.git,2021-01-09 12:45:18+00:00,,0,vnegnev/flocra_system,328153145,Verilog,flocra_system,64,1,2023-12-14 10:13:40+00:00,[],https://api.github.com/licenses/gpl-3.0
270,https://github.com/DanielIrons/mips_processor.git,2021-01-05 18:56:48+00:00,"A simple, 5 stage pipelined, MIPS style processor written in Verilog.",0,DanielIrons/mips_processor,327091467,Verilog,mips_processor,85,1,2022-05-29 21:46:27+00:00,[],None
271,https://github.com/lancelotxk/FMA.git,2021-01-19 06:45:54+00:00,,0,lancelotxk/FMA,330888932,Verilog,FMA,7470,1,2022-02-16 04:44:47+00:00,[],None
272,https://github.com/landoty/apb-slave.git,2021-01-13 05:23:55+00:00,Advanced Peripheral Bus Protocol,0,landoty/apb-slave,329202759,Verilog,apb-slave,1055,1,2023-05-22 17:31:31+00:00,[],None
273,https://github.com/VasilyMarkov/UART.git,2020-12-27 15:14:01+00:00,,0,VasilyMarkov/UART,324787958,Verilog,UART,3,1,2022-09-15 06:00:36+00:00,[],None
274,https://github.com/pulpannie/riscv-cpu.git,2020-12-25 09:02:40+00:00,RISC-V CPU coded for the class COSE222 in Verilog HDL,0,pulpannie/riscv-cpu,324327254,Verilog,riscv-cpu,7,1,2022-05-02 22:04:57+00:00,[],None
275,https://github.com/craigjb/BFFPGA.git,2020-12-30 23:19:33+00:00,RTL to make a Big Fun FPGA board work,0,craigjb/BFFPGA,325667654,Verilog,BFFPGA,7,1,2023-09-09 00:24:00+00:00,[],
276,https://github.com/Fisheep1207/CA-project2.git,2020-12-31 06:43:45+00:00,,0,Fisheep1207/CA-project2,325734520,Verilog,CA-project2,402,1,2021-01-05 13:58:49+00:00,[],None
277,https://github.com/Aoi-cn/Single_Cycle_CPU.git,2021-01-04 07:54:58+00:00,单周期CPU，可以运行冒泡排序及jal，jr,0,Aoi-cn/Single_Cycle_CPU,326609070,Verilog,Single_Cycle_CPU,677,1,2021-05-09 10:14:34+00:00,[],None
278,https://github.com/vibsaa/OpenSource_verilog.git,2020-12-22 08:05:30+00:00,A brief go through for writing and simulating verilog codes using open source softwares- iverilog and GTKwave,1,vibsaa/OpenSource_verilog,323561293,Verilog,OpenSource_verilog,1002,1,2023-06-13 08:18:30+00:00,[],https://api.github.com/licenses/gpl-3.0
279,https://github.com/liuzikai/FPGA-Boxhead.git,2021-01-11 11:54:50+00:00,Game on FPGA as UIUC ECE385 SP20 ZJUI Final Project,0,liuzikai/FPGA-Boxhead,328648446,Verilog,FPGA-Boxhead,7615,1,2022-09-07 20:33:45+00:00,[],None
280,https://github.com/ruby5487/Tetris-Verilog-FPGA-.git,2021-01-15 04:04:21+00:00,,0,ruby5487/Tetris-Verilog-FPGA-,329804745,Verilog,Tetris-Verilog-FPGA-,11672,1,2021-03-24 08:09:45+00:00,[],None
281,https://github.com/suoglu/Simple-UART.git,2020-12-17 01:30:46+00:00,  Set of simple modules to communicate via UART,0,suoglu/Simple-UART,322146550,Verilog,Simple-UART,177,1,2023-12-23 15:47:02+00:00,"['fpga', 'verilog', 'uart']",
282,https://github.com/fedemic/ISA_2020_Group_09_Lab_3.git,2021-01-09 12:56:13+00:00,Integrated Systems Architecture - RISC V processor implementation,0,fedemic/ISA_2020_Group_09_Lab_3,328155243,Verilog,ISA_2020_Group_09_Lab_3,5031,1,2024-02-21 09:30:30+00:00,[],None
283,https://github.com/emrdagkusu/digital-design-vdhl.git,2020-12-28 20:08:58+00:00,EE203 Digital Design Course - VHDL circuit design assignments,0,emrdagkusu/digital-design-vdhl,325106588,Verilog,digital-design-vdhl,1347,1,2021-03-29 19:02:14+00:00,[],None
284,https://github.com/Mohammed-CE/5-bits-input-ALU-using-Magic.git,2021-01-09 16:30:25+00:00,,0,Mohammed-CE/5-bits-input-ALU-using-Magic,328197674,Verilog,5-bits-input-ALU-using-Magic,269,1,2023-02-14 20:15:23+00:00,"['verilog', 'magic', 'vlsi', 'logisim']",None
285,https://github.com/chrismoon-code/Memory-game-on-the-DE10-lite.git,2021-01-13 16:58:46+00:00,,0,chrismoon-code/Memory-game-on-the-DE10-lite,329374944,Verilog,Memory-game-on-the-DE10-lite,4,1,2023-11-06 17:57:17+00:00,[],None
286,https://github.com/D3r3k23/Blackboard-Servo.git,2020-12-21 03:30:30+00:00,Servo motor IP with PS control,0,D3r3k23/Blackboard-Servo,323220880,Verilog,Blackboard-Servo,54,1,2023-10-12 13:14:36+00:00,[],None
287,https://github.com/Art2Live/128-p-11-bit-FFT.git,2020-12-18 19:12:59+00:00,"This repository contains all files that needed to generate SoC implementation of 128-point 11-bit FFT using Vivado, Cadence RTL Compiler and Cadence Encounter",0,Art2Live/128-p-11-bit-FFT,322683692,Verilog,128-p-11-bit-FFT,349,1,2023-03-20 11:53:07+00:00,[],None
288,https://github.com/wakaba123/computer-composing.git,2020-12-16 10:57:37+00:00,mysccpu,0,wakaba123/computer-composing,321953898,Verilog,computer-composing,839,1,2023-10-20 10:01:40+00:00,[],None
289,https://github.com/PeterAyad/SPI.git,2020-12-15 23:51:57+00:00,Serial Peripheral Interface using Verilog,0,PeterAyad/SPI,321818116,Verilog,SPI,69,1,2022-06-14 00:33:30+00:00,"['serial-peripheral-interface', 'verilog']",None
290,https://github.com/18520381/Inverse_Matrix.git,2020-12-16 07:17:55+00:00,Inverse matrix 4x4 32bit with floating point,1,18520381/Inverse_Matrix,321900842,Verilog,Inverse_Matrix,46,1,2024-03-03 13:13:24+00:00,[],None
291,https://github.com/yasir-javed/vga.git,2020-12-15 05:31:17+00:00,,1,yasir-javed/vga,321563254,Verilog,vga,4,1,2024-03-27 14:08:48+00:00,[],None
292,https://github.com/KareimGazer/PCI_Target_Device.git,2021-01-16 09:09:39+00:00,Verilog simulation for a Target Device on a PCI bus with read and write transactions.,5,KareimGazer/PCI_Target_Device,330124273,Verilog,PCI_Target_Device,8,1,2023-05-17 03:54:36+00:00,"['verilog', 'pci-devices', 'pci', 'xilinx-vivado', 'xilin']",None
293,https://github.com/lawrie/ulx3s_gamegear.git,2021-01-15 13:06:26+00:00,Segs Game Gear for the Ulx3s ECP5 FPGA board,0,lawrie/ulx3s_gamegear,329914538,Verilog,ulx3s_gamegear,78,1,2022-07-18 18:27:01+00:00,[],None
294,https://github.com/LDelhez/verilog-tutorial.git,2021-01-18 22:55:06+00:00,,1,LDelhez/verilog-tutorial,330806138,Verilog,verilog-tutorial,248,1,2021-04-18 22:15:07+00:00,[],None
295,https://github.com/GVictorsd/MyMos6502.git,2021-01-05 15:31:57+00:00,A Verilog implementation of the Mos 6502 done as one of my personal projects.,0,GVictorsd/MyMos6502,327041127,Verilog,MyMos6502,47,1,2022-05-02 22:01:16+00:00,[],None
296,https://github.com/itspacchu/College-lab-project-files.git,2021-01-10 05:48:22+00:00,College lab programs and stuff for jntuh,1,itspacchu/College-lab-project-files,328313210,Verilog,College-lab-project-files,9229,1,2021-08-10 16:47:20+00:00,"['jntu', 'jntuh']",None
297,https://github.com/oscaracgg/Quadrature_Motor.git,2020-12-15 18:54:04+00:00,,0,oscaracgg/Quadrature_Motor,321760854,Verilog,Quadrature_Motor,10,1,2022-05-31 22:36:31+00:00,[],https://api.github.com/licenses/bsd-3-clause
298,https://github.com/guagnanomichele6/isa16_lab3.git,2020-12-30 13:59:19+00:00,# isa16_lab3  Third laboratory project for ISA course,0,guagnanomichele6/isa16_lab3,325564420,Verilog,isa16_lab3,74287,1,2021-02-20 13:42:28+00:00,[],None
299,https://github.com/Kiran1689/Non-restoring-division-algorithm-for-unsigned-integer.git,2020-12-26 14:04:59+00:00,Development of Non restoring division algorithm for unsigned integer by using Iverilog and GTK wave .,0,Kiran1689/Non-restoring-division-algorithm-for-unsigned-integer,324567456,Verilog,Non-restoring-division-algorithm-for-unsigned-integer,4,1,2022-05-14 09:00:48+00:00,[],None
300,https://github.com/sliuCN/AD9361_spi.git,2021-01-08 05:26:13+00:00,just for 9361 spi read test using pure HDL,3,sliuCN/AD9361_spi,327807144,Verilog,AD9361_spi,3,1,2024-04-07 02:00:54+00:00,[],None
301,https://github.com/Daniel-GGB/DigitalClock.git,2021-01-19 02:29:37+00:00,课程设计_数字钟项目,0,Daniel-GGB/DigitalClock,330841797,Verilog,DigitalClock,616,1,2022-05-17 07:00:40+00:00,[],None
302,https://github.com/kunkun9811/final_cse141L.git,2020-12-20 05:27:41+00:00,,0,kunkun9811/final_cse141L,323000294,Verilog,final_cse141L,31,0,2020-12-20 06:02:13+00:00,[],None
303,https://github.com/Shine0417/CA2020-Project2.git,2020-12-30 07:40:31+00:00,A Computer architecture program that uses Verilog to simulate CPU's behavior,0,Shine0417/CA2020-Project2,325487175,Verilog,CA2020-Project2,33,0,2021-07-06 04:17:57+00:00,[],None
304,https://github.com/sstelfox/tinyfpga-bx-testing.git,2020-12-25 08:25:52+00:00,"Playing around with a TinyFPGA BX, this is just a collection of the various playground projects I've found or designed",0,sstelfox/tinyfpga-bx-testing,324321404,Verilog,tinyfpga-bx-testing,73,0,2021-01-05 15:25:34+00:00,[],None
305,https://github.com/mukulgarg015/VGA-Graphics-using-Basys-3-FPGA-Board.git,2020-12-27 15:10:01+00:00,"Given the endpoints of a line, intermediate points are calculated using Bresenham's line algorithm (implemented in Verilog) and displayed on the screen.",0,mukulgarg015/VGA-Graphics-using-Basys-3-FPGA-Board,324787178,Verilog,VGA-Graphics-using-Basys-3-FPGA-Board,49,0,2021-01-04 12:42:48+00:00,[],None
306,https://github.com/gerrifox28/4x4-Matrix-Keypad-Tone-Generator-with-Rotating-Text-Display.git,2021-01-04 22:59:19+00:00,"A two part project built for the DE1-SoC board that uses a connected 4x4 Matrix Keypad to play tones via the connected DE1-SoC board speaker from C5-C7. The code also uses the DE1-SoC board seven segment display that displays my name ""Gerri Fox"" followed by ""Fall 2020"" in a rotating manner.",0,gerrifox28/4x4-Matrix-Keypad-Tone-Generator-with-Rotating-Text-Display,326827996,Verilog,4x4-Matrix-Keypad-Tone-Generator-with-Rotating-Text-Display,1809,0,2021-01-05 21:35:50+00:00,[],None
307,https://github.com/gitzhangzhao/OpenEVR.git,2021-01-12 02:18:12+00:00,,0,gitzhangzhao/OpenEVR,328847398,Verilog,OpenEVR,2677,0,2023-10-10 15:19:34+00:00,[],None
308,https://github.com/makharadzemisho/Decoder.git,2020-12-21 12:53:23+00:00,,0,makharadzemisho/Decoder,323335772,Verilog,Decoder,10,0,2020-12-21 13:02:25+00:00,[],None
309,https://github.com/ObsisMc/ddproject.git,2020-12-21 13:26:49+00:00,,0,ObsisMc/ddproject,323343840,Verilog,ddproject,2192,0,2021-05-23 04:06:42+00:00,[],None
310,https://github.com/IwasakiYuuki/fpga-7segled-slot.git,2020-12-23 13:36:09+00:00,,0,IwasakiYuuki/fpga-7segled-slot,323911266,Verilog,fpga-7segled-slot,1404,0,2020-12-25 09:05:47+00:00,[],None
311,https://github.com/parthch10jun/FPGA_verilog_exercises.git,2021-01-03 12:46:15+00:00,,0,parthch10jun/FPGA_verilog_exercises,326405199,Verilog,FPGA_verilog_exercises,86,0,2021-01-08 23:21:13+00:00,[],None
312,https://github.com/kakbydima/ASICs.git,2021-01-03 13:55:43+00:00,Projects related to ASIC design ,0,kakbydima/ASICs,326419118,Verilog,ASICs,697,0,2021-04-06 20:41:58+00:00,[],None
313,https://github.com/Mcc748/2020_Summery.git,2021-01-01 08:08:28+00:00,Say goodbye to last year！！！！,0,Mcc748/2020_Summery,325940675,Verilog,2020_Summery,45,0,2021-01-01 08:42:16+00:00,[],None
314,https://github.com/animesh-sahu/16bit-adder.git,2020-12-30 10:29:40+00:00,Behavioral description of a 16 bit adder using 4 ripple carry adders. here single bit adders are implemented using arithmetic operator ,0,animesh-sahu/16bit-adder,325521251,Verilog,16bit-adder,4,0,2020-12-30 10:38:05+00:00,[],None
315,https://github.com/aroshanineshat/SPI_Serializer.git,2020-12-17 21:25:53+00:00,I use this IP to control attenuators on custom ADC control board,0,aroshanineshat/SPI_Serializer,322416912,Verilog,SPI_Serializer,1659,0,2020-12-27 04:07:24+00:00,[],https://api.github.com/licenses/mit
316,https://github.com/mirkocuidado/Very_Large_Scale_Integration.git,2020-12-17 21:27:00+00:00,Very Large Scale Integration tasks,0,mirkocuidado/Very_Large_Scale_Integration,322417120,Verilog,Very_Large_Scale_Integration,25564,0,2020-12-18 23:06:03+00:00,[],None
317,https://github.com/animesh-sahu/Adder_design.git,2020-12-25 17:57:52+00:00,Designing of a adder circuit in HDL,0,animesh-sahu/Adder_design,324409045,Verilog,Adder_design,1,0,2020-12-25 18:13:19+00:00,[],None
318,https://github.com/sharmavins23/SD-Card-Binary-Readout.git,2020-12-24 03:33:51+00:00,A basic data read circuit to practice reading and writing with the SD card.,0,sharmavins23/SD-Card-Binary-Readout,324057085,Verilog,SD-Card-Binary-Readout,8,0,2020-12-25 03:09:57+00:00,[],None
319,https://github.com/sepehrmoghiseh/lc_fall99.git,2021-01-04 08:57:14+00:00,,0,sepehrmoghiseh/lc_fall99,326624231,Verilog,lc_fall99,37479,0,2023-05-21 10:57:58+00:00,[],None
320,https://github.com/AJAbanto/COE_111.git,2021-01-06 07:07:29+00:00,Repository for all academic files  for coe 111,0,AJAbanto/COE_111,327229456,Verilog,COE_111,20,0,2021-01-06 09:59:38+00:00,[],None
321,https://github.com/fz11/RISC-V-CPU.git,2021-01-10 00:26:27+00:00,EE4243 Project,0,fz11/RISC-V-CPU,328272854,Verilog,RISC-V-CPU,536,0,2021-05-22 05:47:24+00:00,[],None
322,https://github.com/jfiagar/Electronica-Digital-2.git,2020-12-18 17:07:22+00:00,Proyecto final de electronica digital 2,1,jfiagar/Electronica-Digital-2,322656767,Verilog,Electronica-Digital-2,22007,0,2020-12-18 17:10:14+00:00,[],None
323,https://github.com/Manasmw01/Newspaper-vending-machine.git,2020-12-16 17:20:33+00:00,,0,Manasmw01/Newspaper-vending-machine,322052654,Verilog,Newspaper-vending-machine,428,0,2020-12-18 10:30:59+00:00,[],None
324,https://github.com/Hassan1503/Project-ambaPrecessor.git,2021-01-15 18:09:07+00:00,,0,Hassan1503/Project-ambaPrecessor,329987711,Verilog,Project-ambaPrecessor,13,0,2021-01-15 18:10:26+00:00,[],https://api.github.com/licenses/mit
325,https://github.com/susiejojo/IPA_tutorial.git,2021-01-17 11:09:37+00:00,,1,susiejojo/IPA_tutorial,330371754,Verilog,IPA_tutorial,7,0,2021-01-17 12:22:07+00:00,[],None
326,https://github.com/Jason-Du/VSD_FINAL_one_layer.git,2021-01-17 01:09:32+00:00,,0,Jason-Du/VSD_FINAL_one_layer,330289726,Verilog,VSD_FINAL_one_layer,14185,0,2021-01-17 04:56:58+00:00,[],None
327,https://github.com/Lisa304/logical-design.git,2021-01-12 10:04:34+00:00,1091 logical design finial project ,0,Lisa304/logical-design,328944610,Verilog,logical-design,16688,0,2021-01-15 08:01:52+00:00,[],None
328,https://github.com/Raj21-21/AMBA-3-AHB_LITE.git,2021-01-13 05:25:02+00:00,RTL of master ,1,Raj21-21/AMBA-3-AHB_LITE,329202956,Verilog,AMBA-3-AHB_LITE,4,0,2021-01-13 08:49:54+00:00,[],None
329,https://github.com/thelonewolf123/RISC-Net_verilog.git,2021-01-15 04:07:17+00:00,Simple 16 bit RISC processor,1,thelonewolf123/RISC-Net_verilog,329805172,Verilog,RISC-Net_verilog,5686,0,2021-04-19 02:05:35+00:00,[],None
330,https://github.com/AhmedAlhajeh/CPU-Control-Logic.git,2020-12-22 21:07:33+00:00,Design control logic for CPU using VHDL,0,AhmedAlhajeh/CPU-Control-Logic,323733162,Verilog,CPU-Control-Logic,178,0,2020-12-22 21:12:02+00:00,[],None
331,https://github.com/Jason-Du/VSD_CNN_system_verilog.git,2020-12-23 02:33:20+00:00,,0,Jason-Du/VSD_CNN_system_verilog,323783027,Verilog,VSD_CNN_system_verilog,10553,0,2021-01-16 11:24:22+00:00,[],None
332,https://github.com/RSPwFPGAs/briscv.git,2021-01-10 01:12:37+00:00,,1,RSPwFPGAs/briscv,328278472,Verilog,briscv,24,0,2021-01-10 02:21:07+00:00,[],None
333,https://github.com/DanielW33/Misc-VerilogCode.git,2021-01-13 03:42:43+00:00,,0,DanielW33/Misc-VerilogCode,329185469,Verilog,Misc-VerilogCode,1,0,2021-01-13 03:42:59+00:00,[],None
334,https://github.com/sahanashettigar/shift-registers.git,2021-01-08 06:15:08+00:00,Verilog code for Parallel In Parallel Out and Parallel In Serial Out Shift Registers,0,sahanashettigar/shift-registers,327815354,Verilog,shift-registers,3,0,2021-01-08 06:20:41+00:00,[],None
335,https://github.com/wwwwwwOwO/Single-circle-CPU.git,2021-01-08 11:47:12+00:00,"Single-cycle CPU, MIPS architecture, 32-bit, implements a total of 61 instructions",0,wwwwwwOwO/Single-circle-CPU,327887908,Verilog,Single-circle-CPU,4118,0,2022-04-22 09:16:14+00:00,[],None
336,https://github.com/alantsd/RTL-lib.git,2021-01-07 19:46:44+00:00,Common verilog RTL library,0,alantsd/RTL-lib,327709682,Verilog,RTL-lib,2,0,2021-01-07 20:42:22+00:00,[],None
337,https://github.com/NicoCasas/Tp_3_Arqui.git,2021-01-07 19:36:51+00:00,,0,NicoCasas/Tp_3_Arqui,327707731,Verilog,Tp_3_Arqui,16,0,2021-01-07 19:40:24+00:00,[],None
338,https://github.com/ganz125/seven_segments.git,2020-12-31 04:01:58+00:00,FPGA implementation of a six digit 7 segment display driver (Verilog),0,ganz125/seven_segments,325709718,Verilog,seven_segments,1886,0,2021-01-31 05:52:14+00:00,"['verilog', 'fpga']",https://api.github.com/licenses/gpl-3.0
339,https://github.com/EthanCua/random-normal-verilog.git,2021-01-09 06:22:32+00:00,Non-synthesizable Verilog project that randomly generates normally distributed numbers.,0,EthanCua/random-normal-verilog,328089746,Verilog,random-normal-verilog,2114,0,2021-01-09 06:40:43+00:00,[],None
340,https://github.com/Maxvlsichaps/vlsichaps.git,2021-01-10 09:21:01+00:00,,0,Maxvlsichaps/vlsichaps,328344990,Verilog,vlsichaps,0,0,2021-01-12 08:39:04+00:00,[],None
341,https://github.com/15095801973/myrtl.git,2020-12-27 16:29:55+00:00,,0,15095801973/myrtl,324802485,Verilog,myrtl,8,0,2020-12-27 16:32:23+00:00,[],None
342,https://github.com/eraser333/shudian.git,2020-12-26 11:19:35+00:00,,0,eraser333/shudian,324539126,Verilog,shudian,66617,0,2021-01-14 03:20:38+00:00,[],None
343,https://github.com/deva0310/7-SEGMENT-DISPLAY-COUNTER.git,2021-01-04 17:38:06+00:00,,0,deva0310/7-SEGMENT-DISPLAY-COUNTER,326760909,Verilog,7-SEGMENT-DISPLAY-COUNTER,0,0,2021-01-04 17:54:48+00:00,[],None
344,https://github.com/saramkhalaf/engr378.git,2021-01-11 05:23:25+00:00,"These labs were conducted during our Digital systems elective course were we were instructed to build Verilog code for specific logic design and verify it on Quartus modalism and on the FPGA. Skills developed: writing Verilog code structurally and behaviorally, testing, simulation, writing test benches and using the FPGA",0,saramkhalaf/engr378,328557346,Verilog,engr378,17747,0,2021-01-11 05:27:05+00:00,"['digital', 'design', 'verilog', 'fpga', 'fpga-programming', 'verilog-code', 'digitallogic', 'simulation', 'modelsim', 'altera-fpga', 'testbenches']",None
345,https://github.com/caasig1/CSC258.git,2021-01-08 19:54:54+00:00,Verilog and .do files for CSC258 labs and final,0,caasig1/CSC258,327999045,Verilog,CSC258,13948,0,2021-01-08 19:56:19+00:00,[],None
346,https://github.com/max-wickham/MipsCPU.git,2021-01-15 20:30:02+00:00,,0,max-wickham/MipsCPU,330015523,Verilog,MipsCPU,4019,0,2021-01-15 20:31:13+00:00,[],None
347,https://github.com/mzaieda/RISCV32I-M-Processor-Verilog.git,2021-01-14 21:10:01+00:00,,0,mzaieda/RISCV32I-M-Processor-Verilog,329735169,Verilog,RISCV32I-M-Processor-Verilog,28745,0,2021-01-14 21:14:03+00:00,[],None
348,https://github.com/Featherweight-IP/fwpic.git,2021-01-19 18:38:33+00:00,Featherweight programmable interrupt controller (PIC),0,Featherweight-IP/fwpic,331074765,Verilog,fwpic,20,0,2022-01-17 18:03:35+00:00,[],https://api.github.com/licenses/apache-2.0
349,https://github.com/huanglaotou/elec491.git,2021-01-19 04:11:39+00:00,,0,huanglaotou/elec491,330860700,Verilog,elec491,95,0,2021-02-06 22:47:41+00:00,[],None
350,https://github.com/pybfms/pybfms-gpio.git,2021-01-19 19:25:59+00:00,Simple GPIO BFM for interacting with non-protocol interfaces,0,pybfms/pybfms-gpio,331086304,Verilog,pybfms-gpio,12,0,2022-01-17 17:18:49+00:00,[],https://api.github.com/licenses/apache-2.0
351,https://github.com/abdulmuneeb-lm/caravel_tinyriscv.git,2020-12-29 12:49:17+00:00,RISC-V based core ,1,abdulmuneeb-lm/caravel_tinyriscv,325285555,Verilog,caravel_tinyriscv,433137,0,2021-01-04 10:15:11+00:00,[],https://api.github.com/licenses/apache-2.0
352,https://github.com/ElektroNeo/verilog.git,2021-01-05 15:39:58+00:00,Verilog blocks for Xilinx Spartan 6 XC6SLX45 (CSG324) FPGA board.,0,ElektroNeo/verilog,327043140,Verilog,verilog,7,0,2021-01-05 19:48:07+00:00,[],https://api.github.com/licenses/mit
353,https://github.com/diamond2nv/Digital-Logic-Design.git,2021-01-05 13:45:07+00:00,Various projects written in Verilog,0,diamond2nv/Digital-Logic-Design,327011557,,Digital-Logic-Design,60,0,2021-01-05 13:45:10+00:00,[],None
354,https://github.com/giulio-naggi/isa33Lab2.git,2020-12-16 18:08:29+00:00,,0,giulio-naggi/isa33Lab2,322063875,Verilog,isa33Lab2,1025,0,2020-12-16 18:26:45+00:00,[],None
355,https://github.com/XtratoS/Computer-Organization-Project.git,2020-12-21 15:05:37+00:00,,0,XtratoS/Computer-Organization-Project,323369254,Verilog,Computer-Organization-Project,784,0,2020-12-29 23:52:48+00:00,[],None
356,https://github.com/makharadzemisho/homework5.git,2020-12-15 09:24:47+00:00,,0,makharadzemisho/homework5,321616396,Verilog,homework5,55,0,2020-12-15 09:28:50+00:00,[],None
357,https://github.com/unal-edigital2-labs/2020-2-w07_entrega-_final-grupo05.git,2020-12-16 03:53:40+00:00,w07_entrega-_final-grupo05 created by GitHub Classroom,1,unal-edigital2-labs/2020-2-w07_entrega-_final-grupo05,321861734,Verilog,2020-2-w07_entrega-_final-grupo05,67202,0,2022-06-26 02:39:45+00:00,[],None
358,https://github.com/vulkanbets/Mips_Matrix_Multiplication_Pipelined.git,2020-12-18 05:12:36+00:00,,0,vulkanbets/Mips_Matrix_Multiplication_Pipelined,322495477,Verilog,Mips_Matrix_Multiplication_Pipelined,11,0,2020-12-21 07:07:23+00:00,[],None
359,https://github.com/kingkwon/week8_.git,2020-12-18 09:09:55+00:00,,0,kingkwon/week8_,322544389,Verilog,week8_,3,0,2020-12-18 09:11:17+00:00,[],None
360,https://github.com/yxnan/verilog-6502.git,2020-12-23 00:06:49+00:00,,0,yxnan/verilog-6502,323760348,Verilog,verilog-6502,34,0,2020-12-23 00:08:52+00:00,[],None
361,https://github.com/GerardoVielma/HexDisplay-Complementer.git,2020-12-23 23:56:15+00:00,,0,GerardoVielma/HexDisplay-Complementer,324025336,Verilog,HexDisplay-Complementer,10,0,2020-12-25 23:48:43+00:00,[],None
362,https://github.com/Sarthakchandra/FloatingPointIP.git,2020-12-24 11:08:58+00:00,"In this Lab, we will implement and verify the following function using the floating-point IP ❖ Q = (X/T) + sqrt (ln(N)/T)",0,Sarthakchandra/FloatingPointIP,324136981,Verilog,FloatingPointIP,1286,0,2020-12-24 11:12:09+00:00,[],None
363,https://github.com/makharadzemisho/homework6.git,2020-12-15 09:03:53+00:00,,0,makharadzemisho/homework6,321610839,Verilog,homework6,55,0,2020-12-15 09:09:33+00:00,[],None
364,https://github.com/sangyou16/MIPS-32bit-Single-Cycle-Processor.git,2020-12-24 02:34:48+00:00,32bit MIPS Single Cycle Processor,0,sangyou16/MIPS-32bit-Single-Cycle-Processor,324047445,Verilog,MIPS-32bit-Single-Cycle-Processor,10,0,2021-10-05 19:05:33+00:00,[],None
365,https://github.com/PlusSevenWang/Ten-Instruction-CPU.git,2021-01-07 12:17:55+00:00,,0,PlusSevenWang/Ten-Instruction-CPU,327602833,Verilog,Ten-Instruction-CPU,8,0,2021-01-07 12:25:47+00:00,[],None
366,https://github.com/AraAssim/AraAssim-Vector-magnitude-and-arctangent-approximation.git,2020-12-21 01:43:20+00:00,"This project is concerned with designing a device for approximating vector magnitude and arctangent, all the required source codes and scripts are provided, in addition to that, the entire project implementation process is explained in README.md file.",1,AraAssim/AraAssim-Vector-magnitude-and-arctangent-approximation,323203241,Verilog,AraAssim-Vector-magnitude-and-arctangent-approximation,98,0,2021-09-23 13:51:31+00:00,[],None
367,https://github.com/raphaellacet/Verilog-Vivado.git,2020-12-23 02:48:47+00:00,Computer/Electrical Engineering Projects made using Xilink Vivado - Verilog coding,0,raphaellacet/Verilog-Vivado,323785709,Verilog,Verilog-Vivado,32,0,2020-12-23 09:29:29+00:00,[],None
368,https://github.com/Kentahayakawa/UCLA-CS-M152A.git,2020-12-20 04:27:02+00:00,Projects from CS M152A: Introductory Digital Design Laboratory,0,Kentahayakawa/UCLA-CS-M152A,322992653,Verilog,UCLA-CS-M152A,4633,0,2021-01-14 23:35:53+00:00,[],None
369,https://github.com/yaohongliu/VerilogProject.git,2020-12-20 02:35:23+00:00,,0,yaohongliu/VerilogProject,322978877,Verilog,VerilogProject,871,0,2020-12-20 02:40:13+00:00,[],None
370,https://github.com/sammyli0106/UCLA_CS_M152A_Introductory_Digital_Design_Laboratory_Fall_2020.git,2020-12-24 21:59:21+00:00,,0,sammyli0106/UCLA_CS_M152A_Introductory_Digital_Design_Laboratory_Fall_2020,324242661,Verilog,UCLA_CS_M152A_Introductory_Digital_Design_Laboratory_Fall_2020,5006,0,2021-10-19 02:41:59+00:00,[],None
371,https://github.com/syee19/MIPS-32bit-Single-Cycle-Processor.git,2020-12-23 11:17:23+00:00,2020 2학기 컴퓨터구조 기말 과제,0,syee19/MIPS-32bit-Single-Cycle-Processor,323881966,Verilog,MIPS-32bit-Single-Cycle-Processor,5,0,2020-12-23 11:20:46+00:00,[],None
372,https://github.com/thegamingbot/Computer-Architecture-Practice.git,2021-01-03 11:38:37+00:00,,0,thegamingbot/Computer-Architecture-Practice,326392756,Verilog,Computer-Architecture-Practice,10331,0,2021-05-10 04:52:08+00:00,[],None
373,https://github.com/kussbandara/FPGA.git,2021-01-03 23:22:20+00:00,,0,kussbandara/FPGA,326520340,Verilog,FPGA,4735,0,2021-01-03 23:28:49+00:00,[],None
374,https://github.com/EyobelB/ARMv8_Datapath.git,2021-01-02 21:31:28+00:00,"An incomplete datapath for ARMv8, made for ECEN 350, AKA Computer Architecture",0,EyobelB/ARMv8_Datapath,326274601,Verilog,ARMv8_Datapath,8,0,2021-01-02 21:32:37+00:00,[],None
375,https://github.com/diamond2nv/Xilinx_Basys3_Fibonacci_Counter.git,2021-01-05 15:58:34+00:00,,0,diamond2nv/Xilinx_Basys3_Fibonacci_Counter,327048098,,Xilinx_Basys3_Fibonacci_Counter,1379,0,2021-04-17 06:09:36+00:00,[],None
376,https://github.com/ganz125/gI2C_mini_master.git,2021-01-02 03:04:36+00:00,FPGA implementation of an I2C Master for comm with a Nintendo Classic Mini retro controller (Verilog).,0,ganz125/gI2C_mini_master,326098046,Verilog,gI2C_mini_master,1851,0,2021-01-31 05:52:57+00:00,"['fpga', 'verilog', 'i2c']",https://api.github.com/licenses/gpl-3.0
377,https://github.com/casperx/cpe223-final-simple-cpu.git,2021-01-03 18:49:14+00:00,Simple 8-bit CPU in Verilog,0,casperx/cpe223-final-simple-cpu,326478047,Verilog,cpe223-final-simple-cpu,80,0,2023-01-27 20:35:47+00:00,[],None
378,https://github.com/alicjamysliwiec/Architektura_Komputerow.git,2020-12-17 19:13:01+00:00,Sumator,0,alicjamysliwiec/Architektura_Komputerow,322389030,Verilog,Architektura_Komputerow,8104,0,2020-12-17 20:00:53+00:00,[],None
379,https://github.com/eric42827/IC_Design_HW3.git,2020-12-15 10:59:23+00:00,,0,eric42827/IC_Design_HW3,321640123,Verilog,IC_Design_HW3,3403,0,2020-12-18 02:53:16+00:00,[],None
380,https://github.com/wmarone/alchitry_cu_icestorm.git,2020-12-16 05:58:42+00:00,Using the Alchitry Cu with the Icestorm/nextpnr/yosys toolchain.,0,wmarone/alchitry_cu_icestorm,321883953,Verilog,alchitry_cu_icestorm,7,0,2021-01-01 00:56:22+00:00,[],https://api.github.com/licenses/bsd-3-clause
381,https://github.com/VinhTA-Computer-Master/VerilogHDL-32bit_ALU.git,2020-12-16 02:45:28+00:00,Realization of 32-bit ALU performing 15 different arithmetic/logical operations.,0,VinhTA-Computer-Master/VerilogHDL-32bit_ALU,321848687,Verilog,VerilogHDL-32bit_ALU,6,0,2020-12-16 03:02:47+00:00,[],None
382,https://github.com/ne-egor/task_4.git,2020-12-15 15:13:28+00:00,,0,ne-egor/task_4,321705094,Verilog,task_4,23,0,2020-12-21 15:03:26+00:00,[],None
383,https://github.com/rigoorozco/basic-fpga-project.git,2021-01-09 00:59:45+00:00,Basic FPGA project to be used with Icarus-verilog and GTKWave,0,rigoorozco/basic-fpga-project,328046647,Verilog,basic-fpga-project,0,0,2021-01-09 01:01:14+00:00,[],None
384,https://github.com/mmagm/max7219_ledmatrix.git,2021-01-09 09:57:07+00:00,Max7219 led matrix driver on verilog,1,mmagm/max7219_ledmatrix,328123852,Verilog,max7219_ledmatrix,59,0,2021-02-15 07:10:49+00:00,"['verilog', 'fpga', 'max7219', 'ledmatrix', 'fifo', 'display']",https://api.github.com/licenses/gpl-3.0
385,https://github.com/adithi-su/Verilog.git,2021-01-17 07:45:33+00:00,,0,adithi-su/Verilog,330340042,Verilog,Verilog,11848,0,2023-03-07 06:43:41+00:00,[],None
386,https://github.com/andres-alcala-gutier/mips-architecture.git,2020-12-21 18:01:30+00:00,"Simplified MIPS Processor Architecture - Instruction Set Architecture (ISA): ADD, SUB, MULT, DIV, AND, OR, SLT, ADDI, ANDI, ORI, SLTI, LW, SW, BEQ, BNE and J",0,andres-alcala-gutier/mips-architecture,323411313,Verilog,mips-architecture,73,0,2020-12-21 18:46:04+00:00,"['verilog', 'mips-architecture', '32-bits']",None
387,https://github.com/charlietzhu12/Verilog-Project.git,2020-12-21 23:29:56+00:00,Verilog project of CPU simulator done at NCSU,0,charlietzhu12/Verilog-Project,323471560,Verilog,Verilog-Project,442,0,2020-12-21 23:40:26+00:00,[],None
388,https://github.com/iremkalkanli/RTL-Design-of-FB-CPU.git,2021-01-11 22:32:11+00:00,RTL design of a basic CPU with 10 operation codes,0,iremkalkanli/RTL-Design-of-FB-CPU,328808295,Verilog,RTL-Design-of-FB-CPU,10665,0,2022-09-22 20:10:11+00:00,"['cpu', 'rtl', 'verilog']",None
389,https://github.com/knmrtkt/sdcard-for-fpga.git,2021-01-12 05:56:39+00:00,,0,knmrtkt/sdcard-for-fpga,328886987,Verilog,sdcard-for-fpga,81,0,2021-09-23 04:10:07+00:00,[],None
390,https://github.com/erik-fox/ViterbiPRML.git,2021-01-13 19:25:47+00:00,,0,erik-fox/ViterbiPRML,329410235,Verilog,ViterbiPRML,21,0,2021-01-18 23:34:38+00:00,[],None
391,https://github.com/SuperRongxiang/MIPS-CPU.git,2021-01-15 06:42:06+00:00,,0,SuperRongxiang/MIPS-CPU,329830904,Verilog,MIPS-CPU,53,0,2021-01-31 05:51:26+00:00,[],None
392,https://github.com/geaninasandu/RISC-V-Processor.git,2021-01-12 12:49:05+00:00,,0,geaninasandu/RISC-V-Processor,328985145,Verilog,RISC-V-Processor,11,0,2021-01-23 16:30:01+00:00,[],None
393,https://github.com/RYANLMJ/uart.git,2021-01-12 04:02:20+00:00,,0,RYANLMJ/uart,328867271,Verilog,uart,19,0,2021-01-13 05:46:47+00:00,[],None
394,https://github.com/pan402945786/embed-second-hw.git,2021-01-11 11:24:29+00:00,嵌入式第二个大作业,0,pan402945786/embed-second-hw,328641154,Verilog,embed-second-hw,7,0,2021-01-11 11:25:34+00:00,[],None
395,https://github.com/cike128/Image_Process.git,2021-01-10 07:23:11+00:00,,0,cike128/Image_Process,328326709,Verilog,Image_Process,1641,0,2021-01-10 08:11:30+00:00,[],None
396,https://github.com/j0106223/Altera-DE0-NIOS-II.git,2021-01-10 07:49:16+00:00,Altera DE0 NIOS II example,0,j0106223/Altera-DE0-NIOS-II,328330580,Verilog,Altera-DE0-NIOS-II,15282,0,2021-01-10 07:55:40+00:00,[],https://api.github.com/licenses/mit
397,https://github.com/j0106223/Verilog-circuit.git,2021-01-09 00:16:03+00:00,Some usefull Circuit Using Verilog,0,j0106223/Verilog-circuit,328040961,Verilog,Verilog-circuit,248,0,2021-01-31 14:01:50+00:00,[],https://api.github.com/licenses/mit
398,https://github.com/Sunthui/test.git,2021-01-18 06:05:19+00:00,,0,Sunthui/test,330570583,Verilog,test,6,0,2021-01-19 02:33:04+00:00,[],None
399,https://github.com/benx45h/de0_nano_tests.git,2020-12-26 04:43:56+00:00,tests with nmigen and the de0_nano board,0,benx45h/de0_nano_tests,324482785,Verilog,de0_nano_tests,3046,0,2020-12-26 04:44:31+00:00,[],None
400,https://github.com/Lingxing-GT/---1902.git,2020-12-30 08:41:11+00:00,西邮电子1902数据结构课设,0,Lingxing-GT/---1902,325499328,Verilog,---1902,8,0,2023-03-13 06:41:40+00:00,[],None
401,https://github.com/makharadzemisho/FinalHomework.git,2020-12-21 13:06:15+00:00,,0,makharadzemisho/FinalHomework,323338807,Verilog,FinalHomework,53,0,2020-12-21 13:11:09+00:00,[],None
402,https://github.com/rrrjjj2019/seal_architecture.git,2020-12-22 10:34:15+00:00,,0,rrrjjj2019/seal_architecture,323594998,Verilog,seal_architecture,54,0,2020-12-22 10:39:05+00:00,[],None
403,https://github.com/LIParadise/NTUEE-2020-Autumn-IC-Design-HW3.git,2020-12-18 17:39:22+00:00,"Homework 3 of NTUEE, 2020 Autumn: sort 5 6-bit unsigned integers using only given cells",0,LIParadise/NTUEE-2020-Autumn-IC-Design-HW3,322664141,Verilog,NTUEE-2020-Autumn-IC-Design-HW3,3940,0,2023-02-23 04:06:24+00:00,[],None
404,https://github.com/mayankshadwani/Verilog-Projects.git,2021-01-17 18:17:18+00:00,This repository contains all the projects coded in Verilog HDL. ,0,mayankshadwani/Verilog-Projects,330456686,Verilog,Verilog-Projects,116,0,2021-02-27 14:28:35+00:00,[],None
405,https://github.com/dariosol/LiteDTU.git,2021-01-19 08:59:08+00:00,LiteDTU starting from version 1.2,1,dariosol/LiteDTU,330920163,Verilog,LiteDTU,14866,0,2021-07-16 09:54:26+00:00,[],None
406,https://github.com/Tatev2919/Haming_code.git,2021-01-18 08:50:25+00:00,,0,Tatev2919/Haming_code,330606444,Verilog,Haming_code,6,0,2021-01-19 13:03:09+00:00,[],None
407,https://github.com/ganz125/uart_transmitter.git,2021-01-01 19:56:53+00:00,FPGA implementation of a UART transmitter (Verilog),0,ganz125/uart_transmitter,326046571,Verilog,uart_transmitter,147,0,2021-01-31 05:52:31+00:00,"['uart-transmitter', 'verilog', 'fpga']",https://api.github.com/licenses/gpl-3.0
408,https://github.com/zhuyh128/Cpu-RISCV-32I.git,2021-01-11 09:38:43+00:00,,0,zhuyh128/Cpu-RISCV-32I,328614609,,Cpu-RISCV-32I,407,0,2021-01-11 09:38:45+00:00,[],None
409,https://github.com/raha96/jerilog.git,2021-01-19 07:18:31+00:00,JSON to Verilog,0,raha96/jerilog,330895924,Verilog,jerilog,37,0,2021-01-19 07:19:46+00:00,[],None
410,https://github.com/VinhTA-Computer-Master/VerilogHDL-Multiplier.git,2020-12-16 05:31:02+00:00,An N-bit parameterized multiplier realized by structural Verilog.,0,VinhTA-Computer-Master/VerilogHDL-Multiplier,321878831,Verilog,VerilogHDL-Multiplier,3,0,2020-12-16 05:36:53+00:00,[],None
411,https://github.com/SriCharanKathirvel/simple-flip-flops-using-verilog-with-test-bench.git,2020-12-16 05:51:23+00:00,,0,SriCharanKathirvel/simple-flip-flops-using-verilog-with-test-bench,321882580,Verilog,simple-flip-flops-using-verilog-with-test-bench,38,0,2020-12-27 08:22:26+00:00,[],None
412,https://github.com/lhx6355/SEP_UART.git,2020-12-16 08:07:34+00:00,,0,lhx6355/SEP_UART,321912244,Verilog,SEP_UART,10,0,2020-12-21 13:47:16+00:00,[],None
413,https://github.com/screinac/Proyecto-SCAAD.git,2020-12-15 06:23:20+00:00,"Con el fin de contribuir al ahorro de agua, se ha creado un sistema para implementar en la ducha.",0,screinac/Proyecto-SCAAD,321573032,Verilog,Proyecto-SCAAD,11411,0,2020-12-17 12:48:56+00:00,"['saving', 'water', 'verilog']",None
414,https://github.com/unal-edigital2-labs/2020-2-w07_entrega-_final-grupo01.git,2020-12-16 00:47:46+00:00,w07_entrega-_final-grupo01 created by GitHub Classroom,7,unal-edigital2-labs/2020-2-w07_entrega-_final-grupo01,321826974,Verilog,2020-2-w07_entrega-_final-grupo01,24281,0,2021-10-10 03:38:38+00:00,[],None
415,https://github.com/suoglu/Simple-I2C.git,2020-12-19 02:06:39+00:00,  Set of simple modules to communicate via I²C Bus.,0,suoglu/Simple-I2C,322747088,Verilog,Simple-I2C,83,0,2021-12-04 23:13:41+00:00,"['fpga', 'verilog', 'i2c']",
416,https://github.com/mario-yankov-todorov/Internship_exercises.git,2020-12-18 14:10:43+00:00,,0,mario-yankov-todorov/Internship_exercises,322613272,Verilog,Internship_exercises,2167,0,2021-01-20 10:15:12+00:00,[],None
417,https://github.com/BeLeap/COSE222-mips-processor-assignment.git,2020-12-18 15:39:51+00:00,,0,BeLeap/COSE222-mips-processor-assignment,322635487,Verilog,COSE222-mips-processor-assignment,11538,0,2020-12-29 12:21:35+00:00,[],None
418,https://github.com/Che100r/Verilog.git,2020-12-18 19:25:12+00:00,,0,Che100r/Verilog,322686163,Verilog,Verilog,11,0,2020-12-23 18:56:17+00:00,[],None
419,https://github.com/scorp85/fpga-synth.git,2020-12-23 16:12:23+00:00,,0,scorp85/fpga-synth,323947124,Verilog,fpga-synth,16,0,2020-12-23 16:12:39+00:00,[],None
420,https://github.com/mhorne1/Verilog_Training.git,2020-12-28 06:56:15+00:00,,0,mhorne1/Verilog_Training,324935753,Verilog,Verilog_Training,124,0,2020-12-28 22:28:58+00:00,[],https://api.github.com/licenses/mit
421,https://github.com/kylezenarosa/CPU_Datapath_CSC142_Term_Project.git,2020-12-19 20:57:36+00:00,,0,kylezenarosa/CPU_Datapath_CSC142_Term_Project,322936690,Verilog,CPU_Datapath_CSC142_Term_Project,1186,0,2021-01-05 01:34:12+00:00,[],None
422,https://github.com/rohanrajnair/pipelined-cpu.git,2020-12-20 04:49:31+00:00,,0,rohanrajnair/pipelined-cpu,322995520,Verilog,pipelined-cpu,389,0,2020-12-20 04:52:19+00:00,[],None
423,https://github.com/nikanika0221/Decoder.git,2020-12-19 12:53:49+00:00,decoder part of CPU,0,nikanika0221/Decoder,322847380,Verilog,Decoder,356,0,2020-12-19 12:54:51+00:00,[],None
424,https://github.com/JieHong-Liu/FPGA-SNAKE-GAME.git,2020-12-27 08:02:30+00:00,This is a snake game on FPGA implement by Verilog HDL.,0,JieHong-Liu/FPGA-SNAKE-GAME,324714530,Verilog,FPGA-SNAKE-GAME,1176,0,2020-12-27 08:57:31+00:00,[],None
425,https://github.com/Sarthakchandra/MooreFSM.git,2020-12-24 10:44:46+00:00,"In this Lab, we will design a non-overlapping sequence detector (11011) using Moore type FSM. For Further Step-by-Step procedure refer to Lab5.pdf",0,Sarthakchandra/MooreFSM,324132694,Verilog,MooreFSM,1103,0,2020-12-24 11:01:55+00:00,[],None
426,https://github.com/xiao-eryu/test.git,2020-12-28 02:17:44+00:00,excersize,0,xiao-eryu/test,324891064,Verilog,test,0,0,2020-12-28 08:05:09+00:00,[],None
427,https://github.com/Niuyuhang03/BUAA_PCO.git,2021-01-01 14:34:08+00:00,2017 BUAA Principles of Computer Organization,0,Niuyuhang03/BUAA_PCO,325995326,Verilog,BUAA_PCO,19916,0,2021-04-23 08:30:26+00:00,[],None
428,https://github.com/raps500/MAX10_ADC.git,2021-01-01 14:45:06+00:00,ADC example for the DE10-Lite (MAX10),0,raps500/MAX10_ADC,325997181,Verilog,MAX10_ADC,584,0,2021-01-01 14:56:57+00:00,[],https://api.github.com/licenses/mit
429,https://github.com/drhodes/structural-fsm.git,2021-01-02 23:47:14+00:00,a structural verilog fsm design with problems!,0,drhodes/structural-fsm,326292832,Verilog,structural-fsm,1,0,2021-01-02 23:55:39+00:00,[],None
430,https://github.com/BenAndrew310/dcl_final_project.git,2021-01-03 07:28:52+00:00,,0,BenAndrew310/dcl_final_project,326352070,Verilog,dcl_final_project,103357,0,2021-01-08 23:48:04+00:00,[],None
431,https://github.com/oscaarrhernandez/ContadorBiestablesJK.git,2021-01-03 01:00:08+00:00,Trabajo Computadores I USAL que consiste en realizar un Contador Arbitrario con Biestables JK en verilog,0,oscaarrhernandez/ContadorBiestablesJK,326301290,Verilog,ContadorBiestablesJK,661,0,2022-12-14 17:13:34+00:00,"['usal', 'verilog', 'computadores-i']",None
432,https://github.com/Khaled-Pr/BCD_Counter.git,2021-01-03 21:29:01+00:00,"This design is for a BCD counter, that its initial count is 5 when it reaches 9 it goes back to 0  (ex: one cycle is: 5-6-7-8-9-0-1-2-3-4)",0,Khaled-Pr/BCD_Counter,326504150,Verilog,BCD_Counter,1,0,2021-01-03 21:30:57+00:00,[],None
433,https://github.com/Mahesh-Jasti/HDLbits-Verilog-Solutions.git,2021-01-09 19:03:24+00:00,This repository contains Verilog codes for problems in HDLbits website under the Verilog Language section.,0,Mahesh-Jasti/HDLbits-Verilog-Solutions,328226414,Verilog,HDLbits-Verilog-Solutions,47,0,2021-05-17 11:40:14+00:00,[],None
434,https://github.com/lkzeric/Projects.git,2021-01-10 08:38:35+00:00,,0,lkzeric/Projects,328338369,Verilog,Projects,29796,0,2021-01-10 15:39:30+00:00,[],None
435,https://github.com/h2570su/FPGA_HanoiTower.git,2021-01-10 03:11:20+00:00,Digital Final Project,0,h2570su/FPGA_HanoiTower,328293067,Verilog,FPGA_HanoiTower,35462,0,2021-01-10 03:17:51+00:00,[],None
436,https://github.com/XiaoyuZhou1106/csc258-Computer-Organization.git,2020-12-30 05:46:07+00:00,"Labs and project for csc258, 19 summer. Using Verilog.",0,XiaoyuZhou1106/csc258-Computer-Organization,325466120,Verilog,csc258-Computer-Organization,87969,0,2020-12-30 05:52:28+00:00,[],None
437,https://github.com/parsanoori/Logic-Circuit-Project.git,2021-01-18 20:20:08+00:00,,0,parsanoori/Logic-Circuit-Project,330777497,Verilog,Logic-Circuit-Project,8,0,2021-01-18 23:28:37+00:00,[],None
438,https://github.com/rishubn/ascon_bluelight.git,2021-01-04 20:28:59+00:00,,0,rishubn/ascon_bluelight,326800223,Verilog,ascon_bluelight,22773,0,2021-01-08 02:12:28+00:00,[],None
439,https://github.com/SemQ20/fpga_practice.git,2021-01-05 18:23:08+00:00,some repository of my practice in verilog,0,SemQ20/fpga_practice,327083845,Verilog,fpga_practice,92,0,2021-02-28 08:40:02+00:00,[],None
440,https://github.com/hi7/P9C.git,2021-01-05 22:52:17+00:00,,0,hi7/P9C,327139597,Verilog,P9C,3,0,2021-01-05 22:59:58+00:00,[],None
441,https://github.com/iliyankrastanov/Verilog_Exercises.git,2021-01-13 13:12:54+00:00,,0,iliyankrastanov/Verilog_Exercises,329312810,Verilog,Verilog_Exercises,1724,0,2021-11-09 12:46:47+00:00,[],None
442,https://github.com/LDL-final-project/Final-LDL.git,2021-01-07 07:37:59+00:00,,0,LDL-final-project/Final-LDL,327538198,Verilog,Final-LDL,86,0,2023-07-17 14:18:52+00:00,[],None
443,https://github.com/Nsinha23/One_Time_Pad_Security.git,2021-01-10 04:45:59+00:00,,0,Nsinha23/One_Time_Pad_Security,328305060,Verilog,One_Time_Pad_Security,58,0,2021-01-12 09:10:12+00:00,[],None
444,https://github.com/LCH030/LogicDesign_Final.git,2021-01-12 09:50:15+00:00,,1,LCH030/LogicDesign_Final,328940823,Verilog,LogicDesign_Final,6268,0,2021-01-14 09:20:35+00:00,[],None
445,https://github.com/saramkhalaf/LFSR.git,2021-01-11 05:28:39+00:00,,0,saramkhalaf/LFSR,328558188,Verilog,LFSR,11,0,2021-01-11 05:28:54+00:00,[],None
446,https://github.com/Anthon1e/ARC4-Decryption-Circuit.git,2021-01-11 02:47:56+00:00,A cypher decryption circuit in SystemVerilog using DE1-Soc,0,Anthon1e/ARC4-Decryption-Circuit,328530939,Verilog,ARC4-Decryption-Circuit,33,0,2021-05-10 09:34:56+00:00,[],None
447,https://github.com/banne2266/Dlab-FinalProject-PickachuVolleyball.git,2021-01-19 06:55:26+00:00,,0,banne2266/Dlab-FinalProject-PickachuVolleyball,330890973,Verilog,Dlab-FinalProject-PickachuVolleyball,7699,0,2021-01-19 06:57:26+00:00,[],https://api.github.com/licenses/mit
448,https://github.com/banne2266/Dlab-NCTU-2019.git,2021-01-19 05:56:12+00:00,,0,banne2266/Dlab-NCTU-2019,330879039,Verilog,Dlab-NCTU-2019,391,0,2021-01-19 07:04:42+00:00,[],https://api.github.com/licenses/mit
449,https://github.com/alainlou/hdlbits.git,2021-01-16 18:54:35+00:00,,0,alainlou/hdlbits,330234055,Verilog,hdlbits,47,0,2022-08-12 21:54:55+00:00,[],None
450,https://github.com/Uncle-Road/CS207_Project.git,2021-01-16 15:17:51+00:00,,0,Uncle-Road/CS207_Project,330191032,Verilog,CS207_Project,4021,0,2021-12-28 19:45:05+00:00,[],https://api.github.com/licenses/mit
451,https://github.com/armenuhiarakelyan1978/fifo.git,2021-01-19 20:22:02+00:00,,0,armenuhiarakelyan1978/fifo,331099707,Verilog,fifo,20,0,2021-01-23 14:26:10+00:00,[],None
452,https://github.com/kcrompton/test.git,2021-01-18 07:39:28+00:00,,0,kcrompton/test,330589808,Verilog,test,17,0,2021-01-18 07:56:06+00:00,[],None
453,https://github.com/sriramb2000/CSM152A-F20.git,2021-01-19 07:31:39+00:00,,0,sriramb2000/CSM152A-F20,330898848,Verilog,CSM152A-F20,21579,0,2021-03-17 09:51:33+00:00,[],None
454,https://github.com/nr-electronics/ARM_Implementation.git,2021-01-17 14:20:47+00:00,This repository contains an implementation of ARM processor in VerilogHDL,4,nr-electronics/ARM_Implementation,330407981,,ARM_Implementation,920,0,2021-04-23 10:25:49+00:00,[],None
455,https://github.com/yope/cpuv2.git,2021-01-17 14:11:15+00:00,A very simple 32bit CPU design in verilog,0,yope/cpuv2,330405985,Verilog,cpuv2,141,0,2021-03-17 10:37:26+00:00,[],None
456,https://github.com/alpcihan/basys-fpga-board-atm.git,2021-01-16 17:10:02+00:00,State machine implementation on the BASYS FPGA board. ,0,alpcihan/basys-fpga-board-atm,330214013,Verilog,basys-fpga-board-atm,15,0,2022-07-16 07:36:33+00:00,[],https://api.github.com/licenses/mit
457,https://github.com/ninkovicr/VLSI-Vedic-Multiplier-4x4-.git,2020-12-28 21:35:53+00:00,,0,ninkovicr/VLSI-Vedic-Multiplier-4x4-,325121640,Verilog,VLSI-Vedic-Multiplier-4x4-,217,0,2020-12-28 22:02:06+00:00,[],None
458,https://github.com/gcgeng/FPGAFruitNinja.git,2020-12-28 13:10:05+00:00,,0,gcgeng/FPGAFruitNinja,325016168,Verilog,FPGAFruitNinja,4828,0,2021-12-25 15:20:20+00:00,[],None
459,https://github.com/MomenK/FIFO_USB.git,2021-01-07 18:19:09+00:00,Benchmarking max speed from Channel B FT2232h,0,MomenK/FIFO_USB,327691753,Verilog,FIFO_USB,3150,0,2021-01-08 14:16:52+00:00,[],None
460,https://github.com/stefantionieren/FPGA-game.git,2021-01-15 06:01:19+00:00,FPGA final,0,stefantionieren/FPGA-game,329823232,Verilog,FPGA-game,22591,0,2021-01-15 07:15:54+00:00,[],https://api.github.com/licenses/mit
461,https://github.com/pan402945786/embedded-course.git,2020-12-26 13:11:42+00:00,embedded course homework 1,1,pan402945786/embedded-course,324557991,Verilog,embedded-course,78,0,2021-01-09 13:22:06+00:00,[],https://api.github.com/licenses/mit
462,https://github.com/Er-Darshil/32-BIT-ALU.git,2020-12-27 09:46:25+00:00,32-Bit Arithmetic and logic unit in verilog ,0,Er-Darshil/32-BIT-ALU,324730269,Verilog,32-BIT-ALU,3,0,2020-12-27 10:00:18+00:00,[],None
463,https://github.com/leonbeier/TensorflowToFPGA.git,2020-12-26 09:50:04+00:00,Deep Neural Network on FPGA. Export your weights and biases from tensorflow and run the neural net on an FPGA with much higher efficiency. It is written with the VHDPlus IDE,0,leonbeier/TensorflowToFPGA,324525320,Verilog,TensorflowToFPGA,9702,0,2023-04-06 01:40:47+00:00,[],https://api.github.com/licenses/mit
464,https://github.com/iAmALai/MIPS_Multi_Cycle_Verilog.git,2020-12-30 09:01:11+00:00,,0,iAmALai/MIPS_Multi_Cycle_Verilog,325503374,Verilog,MIPS_Multi_Cycle_Verilog,6,0,2020-12-30 09:25:12+00:00,[],None
465,https://github.com/Xyedo/Reaction-time.git,2021-01-13 11:19:12+00:00,,0,Xyedo/Reaction-time,329284342,Verilog,Reaction-time,4,0,2021-01-13 11:21:19+00:00,[],None
466,https://github.com/sharmavins23/Analog-Clock.git,2021-01-11 22:33:31+00:00,An implementation of the clock module on the Artix 7 FPGA to emulate an analog clock in real time.,0,sharmavins23/Analog-Clock,328808568,Verilog,Analog-Clock,9,0,2021-01-13 14:38:06+00:00,[],https://api.github.com/licenses/mit
467,https://github.com/andrewl6097/doomcore.git,2021-01-11 19:58:06+00:00,,0,andrewl6097/doomcore,328776719,Verilog,doomcore,42,0,2021-01-14 05:29:15+00:00,[],https://api.github.com/licenses/apache-2.0
468,https://github.com/MeenakshiShankar/Verilog-For-Sequence-Dectection.git,2021-01-13 03:23:20+00:00,,0,MeenakshiShankar/Verilog-For-Sequence-Dectection,329181714,Verilog,Verilog-For-Sequence-Dectection,12,0,2021-01-13 03:27:38+00:00,[],None
469,https://github.com/akkshatsharmaa/32bit_processor.git,2021-01-14 14:37:35+00:00,A 32 bit CPU with verilog and testbenches,0,akkshatsharmaa/32bit_processor,329641969,Verilog,32bit_processor,7,0,2021-01-14 14:38:18+00:00,[],None
470,https://github.com/skyleaworlder/Mips-CPU31.git,2021-01-01 06:54:09+00:00,:warning: 单周期 31 条指令 Mips-CPU。疫情在家写的，甚至没下过板子，谁知道能不能跑呢？,0,skyleaworlder/Mips-CPU31,325931953,Verilog,Mips-CPU31,18,0,2021-01-01 07:13:24+00:00,['mips-simulator'],https://api.github.com/licenses/mit
471,https://github.com/IHannibal/learngit.git,2020-12-31 09:13:40+00:00,,0,IHannibal/learngit,325761839,Verilog,learngit,6,0,2020-12-31 09:19:37+00:00,[],
472,https://github.com/bhargav-s-271100/Advanced-Digital-Logic-Design.git,2021-01-01 21:00:18+00:00,This repo has various digital logic design codes written using Verilog HDL,0,bhargav-s-271100/Advanced-Digital-Logic-Design,326055145,Verilog,Advanced-Digital-Logic-Design,8,0,2021-01-01 21:02:39+00:00,[],None
473,https://github.com/metehanertan/Single-Cycle-MIPS.git,2021-01-02 13:39:09+00:00,,0,metehanertan/Single-Cycle-MIPS,326190636,Verilog,Single-Cycle-MIPS,184,0,2021-01-02 13:40:40+00:00,[],None
474,https://github.com/erik-fox/QuestaSimTest.git,2021-01-07 04:44:54+00:00,,0,erik-fox/QuestaSimTest,327505320,Verilog,QuestaSimTest,2,0,2021-01-07 04:49:10+00:00,[],None
475,https://github.com/SebastianCubides/CONTROL-DE-DESINFECCION-Y-ACCESO.git,2020-12-16 01:28:25+00:00,"EN ESTE REPOSITORIO SE ENCUENTRAN LOS CÓDIGOS TRABAJADOS PARA LA REALIZACIÓN DEL PROYECTO Y TAMBIEN EL ENLACE A YOUTUBE Y EL INFORME.  SOMOS SEBASTIAN CUBIDES TOSCANO, GUILLERMO ALEJANDRO CANO, JULIÁN CAMILO VELÁNDIA Y JOHN BLANDOL MUÑOZ",0,SebastianCubides/CONTROL-DE-DESINFECCION-Y-ACCESO,321833979,Verilog,CONTROL-DE-DESINFECCION-Y-ACCESO,13184,0,2020-12-16 04:27:49+00:00,[],None
476,https://github.com/kingkwon/week_10.git,2020-12-18 11:57:44+00:00,,0,kingkwon/week_10,322582203,Verilog,week_10,3,0,2020-12-18 19:47:35+00:00,[],None
477,https://github.com/zhoukuscedu/Tic-Tac-Toe-FPGA.git,2020-12-16 19:58:15+00:00,Implementation of tic tac toe game on an FPGA board. Supports two players and checks win conditions. Display of game is done by connection a VGA cable to a monitor or screen.,0,zhoukuscedu/Tic-Tac-Toe-FPGA,322088042,Verilog,Tic-Tac-Toe-FPGA,1342,0,2020-12-16 20:03:15+00:00,[],None
478,https://github.com/affanabbasi/G_Skywater130nm_1stTO4.git,2020-12-16 08:22:44+00:00,,0,affanabbasi/G_Skywater130nm_1stTO4,321915930,Verilog,G_Skywater130nm_1stTO4,209130,0,2020-12-19 00:22:16+00:00,[],https://api.github.com/licenses/apache-2.0
479,https://github.com/81reap/WISC-SP13.git,2020-12-24 22:55:01+00:00,Term project for CS 552. Complete functional design of a microprocessor called the WISC-SP13 and cache modules written in Verilog.,0,81reap/WISC-SP13,324248917,Verilog,WISC-SP13,5934,0,2023-04-30 21:41:40+00:00,[],https://api.github.com/licenses/bsd-3-clause
480,https://github.com/este2897/RISC-V-ISA.git,2021-01-08 21:31:07+00:00,Design of a RISC-V ISA for a microprocessor capable to execute some instructions ,0,este2897/RISC-V-ISA,328016736,Verilog,RISC-V-ISA,120,0,2021-01-22 23:49:40+00:00,[],None
481,https://github.com/leo-Ne/FPGACourseNotes.git,2020-12-22 12:39:20+00:00,This is my notebook in my course Designing FPGA .,0,leo-Ne/FPGACourseNotes,323622231,Verilog,FPGACourseNotes,13,0,2021-01-03 04:29:12+00:00,[],None
482,https://github.com/TechFrnds/Verilog-programs.git,2020-12-27 13:44:26+00:00,Simple verilog basic programs ,0,TechFrnds/Verilog-programs,324770695,Verilog,Verilog-programs,767,0,2020-12-27 13:55:26+00:00,[],None
483,https://github.com/imasavior/26-fianlproject.git,2021-01-15 06:49:07+00:00,,0,imasavior/26-fianlproject,329832203,Verilog,26-fianlproject,28,0,2021-01-15 14:07:17+00:00,[],None
484,https://github.com/Komalika-minkstas/HardwareModelingInVerilog_codes.git,2021-01-17 08:48:37+00:00,,0,Komalika-minkstas/HardwareModelingInVerilog_codes,330349385,Verilog,HardwareModelingInVerilog_codes,32,0,2021-01-17 09:18:58+00:00,[],None
485,https://github.com/Qiaodongfpga/verilog.git,2021-01-17 15:08:08+00:00,,0,Qiaodongfpga/verilog,330418134,Verilog,verilog,15,0,2021-01-17 15:08:19+00:00,[],None
486,https://github.com/damlasu/FBCPU.git,2021-01-11 20:53:42+00:00,,0,damlasu/FBCPU,328788906,Verilog,FBCPU,2089,0,2021-01-14 16:16:32+00:00,[],None
487,https://github.com/blackbat35/CECS440.git,2021-01-07 17:33:19+00:00,,0,blackbat35/CECS440,327681752,Verilog,CECS440,1696,0,2021-01-07 17:44:04+00:00,[],None
488,https://github.com/aroshanineshat/LS013B7DH01_Driver.git,2021-01-08 02:55:19+00:00,I am working on a driver for LS013B7DH01 on an iCEBreaker FPGA development board,0,aroshanineshat/LS013B7DH01_Driver,327782811,Verilog,LS013B7DH01_Driver,451,0,2021-06-06 21:42:17+00:00,[],None
489,https://github.com/Ahmed-Mohamed7/SPI-Protocol.git,2021-01-16 22:13:46+00:00,Spi_project,0,Ahmed-Mohamed7/SPI-Protocol,330268059,Verilog,SPI-Protocol,264,0,2021-01-16 22:42:49+00:00,[],None
490,https://github.com/moontree613/electronic_piano02.git,2020-12-17 15:46:52+00:00,verilog HDL、MAX II、piano2.v ,0,moontree613/electronic_piano02,322340610,Verilog,electronic_piano02,13,0,2020-12-25 04:43:24+00:00,[],None
491,https://github.com/mballance/caravel_fwpayload_dev.git,2020-12-18 02:03:27+00:00,Standalone for fwpayload without the heavy-weight files,0,mballance/caravel_fwpayload_dev,322462376,Verilog,caravel_fwpayload_dev,1122,0,2020-12-18 03:02:37+00:00,[],https://api.github.com/licenses/apache-2.0
492,https://github.com/ColinFang1009/SUSTech_CS207_finalproject.git,2020-12-17 05:31:47+00:00,2020 Fall SUSTech CS 207 Digital Logic final project,0,ColinFang1009/SUSTech_CS207_finalproject,322191308,Verilog,SUSTech_CS207_finalproject,4896,0,2020-12-26 13:06:22+00:00,[],None
493,https://github.com/Ryuta339/ChiselImProc.git,2020-12-17 05:10:25+00:00,,0,Ryuta339/ChiselImProc,322187587,Verilog,ChiselImProc,10910,0,2023-02-28 07:55:42+00:00,[],None
494,https://github.com/makharadzemisho/homework4.git,2020-12-15 08:37:47+00:00,,0,makharadzemisho/homework4,321604066,Verilog,homework4,55,0,2020-12-15 08:52:13+00:00,[],None
495,https://github.com/Chen-Line/VLSI.git,2020-12-16 07:20:09+00:00,,0,Chen-Line/VLSI,321901385,Verilog,VLSI,126,0,2023-07-04 16:08:37+00:00,[],None
496,https://github.com/hosniadel666/pci-endpiont.git,2020-12-16 07:25:56+00:00,Hardware Implementation of PCI bus Using Verilog ,1,hosniadel666/pci-endpiont,321902667,Verilog,pci-endpiont,351,0,2021-06-06 12:36:18+00:00,[],None
497,https://github.com/abhineetaryansharan/dflipflop.git,2020-12-21 09:08:22+00:00,,0,abhineetaryansharan/dflipflop,323284098,Verilog,dflipflop,0,0,2020-12-21 09:42:08+00:00,[],None
498,https://github.com/AhsanQureshi1997/FPGA-Verilog.git,2020-12-22 04:45:55+00:00,,0,AhsanQureshi1997/FPGA-Verilog,323523100,Verilog,FPGA-Verilog,3,0,2020-12-22 04:47:49+00:00,[],None
499,https://github.com/varunsk00/RISC-Processor-Verilog.git,2020-12-17 21:06:37+00:00,,0,varunsk00/RISC-Processor-Verilog,322413131,Verilog,RISC-Processor-Verilog,319,0,2020-12-17 21:44:35+00:00,[],None
500,https://github.com/RYANLMJ/uart_2.git,2021-01-19 08:27:29+00:00,,0,RYANLMJ/uart_2,330912224,Verilog,uart_2,3,0,2021-01-20 08:43:06+00:00,[],None
501,https://github.com/connorlowe90/pacman-FPGA.git,2021-01-19 05:00:25+00:00,"This is a version of PACMAN implemented on an FGPA. Specifically, designed for the DE1_SoC board, open the .qpf file to run the code. Requires a PS2 keyboard, VGA monitor, speakers with auxiliary cord, and the DE1_SoC board.",0,connorlowe90/pacman-FPGA,330868928,Verilog,pacman-FPGA,6228,0,2021-10-20 05:50:29+00:00,[],None
502,https://github.com/yenmeng/Single-Cycle-RISCV-Processor.git,2021-01-19 16:53:36+00:00,,0,yenmeng/Single-Cycle-RISCV-Processor,331048261,Verilog,Single-Cycle-RISCV-Processor,175021,0,2021-01-19 17:07:09+00:00,[],None
503,https://github.com/shubhpatel9/32-bit-register-CPU.git,2021-01-01 00:27:13+00:00,Computer architecture course team project,0,shubhpatel9/32-bit-register-CPU,325893809,Verilog,32-bit-register-CPU,598,0,2021-02-21 05:15:52+00:00,"['verilog', 'mips-assembly', 'mips-architecture', 'pipelining-capabilities', 'mealy-machine', 'm', 'moore-machine']",None
504,https://github.com/wzygzlm/asic_sfast_abmof.git,2021-01-03 19:24:10+00:00,ASIC project for SFAST and ABMOF.,0,wzygzlm/asic_sfast_abmof,326484148,Verilog,asic_sfast_abmof,3776,0,2021-01-04 15:16:55+00:00,[],None
505,https://github.com/Dibya-Dipanjan/Floating-point-multiplier.git,2021-01-04 05:51:33+00:00,,0,Dibya-Dipanjan/Floating-point-multiplier,326583349,Verilog,Floating-point-multiplier,2,0,2021-01-04 05:52:14+00:00,[],None
506,https://github.com/Sahil280599/Verilog-Programming.git,2020-12-28 13:26:51+00:00,"Verilog is a Hardware Description Language; a textual format for describing electronic circuits and systems. Applied to electronic design, Verilog is intended to be used for verification through simulation, for timing analysis, for test analysis (testability analysis and fault grading) and for logic synthesis.",0,Sahil280599/Verilog-Programming,325019823,Verilog,Verilog-Programming,11278,0,2021-01-17 18:10:10+00:00,"['verilog', 'verilog-programming', 'testability-analysis', 'electronic-circuits']",None
507,https://github.com/JavierRodriguezM/Proyecto-RISCV.git,2020-12-29 07:39:54+00:00,"Repositorio dedicado al proyecto final de micros, procesador RISCV",0,JavierRodriguezM/Proyecto-RISCV,325219811,Verilog,Proyecto-RISCV,3,0,2020-12-30 04:23:26+00:00,[],None
508,https://github.com/animesh-sahu/16x1-mux-design.git,2020-12-29 06:49:59+00:00,Behavioral description of 16x1 MUX using 4x1 MUX and 4x1 MUX using 2x1 ,0,animesh-sahu/16x1-mux-design,325209309,Verilog,16x1-mux-design,7,0,2020-12-31 11:48:50+00:00,[],None
509,https://github.com/mohamedashraftaha/AutomaticClockGating.git,2020-12-23 12:52:47+00:00,,0,mohamedashraftaha/AutomaticClockGating,323901531,Verilog,AutomaticClockGating,8838,0,2021-02-10 18:17:38+00:00,[],None
510,https://github.com/jybai/hierachical_memory_cpu_verilog_impl.git,2021-01-05 08:42:55+00:00,,0,jybai/hierachical_memory_cpu_verilog_impl,326938260,Verilog,hierachical_memory_cpu_verilog_impl,29,0,2021-01-05 08:46:52+00:00,[],None
511,https://github.com/mohamr01/8237A-DMA-master.git,2021-01-05 20:37:51+00:00,Real world DMA Implementation,0,mohamr01/8237A-DMA-master,327113590,Verilog,8237A-DMA-master,447,0,2021-01-05 20:40:05+00:00,[],None
512,https://github.com/akissu/arty-a7-uart.git,2021-01-03 01:23:25+00:00,Verilog UART Block,0,akissu/arty-a7-uart,326303977,Verilog,arty-a7-uart,10,0,2022-09-30 21:48:21+00:00,[],None
513,https://github.com/hemantjunejaRD/UART.git,2020-12-24 14:08:52+00:00,"To design and implement UART, which is able to take 32 bits of data. Each 32 bit data frame consists of 8 bit address, 8 bit of control signals, and 8/16 bit of data bits. On final completion of design and verifications we will generate its GDS file using an open source tool ""OpenLANE"".",0,hemantjunejaRD/UART,324170232,Verilog,UART,1129,0,2021-06-22 07:42:06+00:00,[],None
514,https://github.com/mohamedashraftaha/RISCV-Processor-Simulator.git,2020-12-23 13:18:23+00:00,,0,mohamedashraftaha/RISCV-Processor-Simulator,323907175,Verilog,RISCV-Processor-Simulator,2265,0,2021-02-10 12:15:23+00:00,[],None
515,https://github.com/charliekelley21/ECE-3544-Digital-Design.git,2021-01-13 00:22:07+00:00,,0,charliekelley21/ECE-3544-Digital-Design,329148181,Verilog,ECE-3544-Digital-Design,7828,0,2021-01-13 00:25:29+00:00,[],None
516,https://github.com/zongnanc/ece385_finalproject.git,2021-01-18 14:00:40+00:00,,0,zongnanc/ece385_finalproject,330683635,Verilog,ece385_finalproject,1371,0,2021-01-18 14:11:33+00:00,[],None
517,https://github.com/bartpleiter/SGBtetrisAI.git,2020-12-21 12:17:35+00:00,"AI for GameBoy Tetris on original hardware using a SNES, Super GameBoy, FPGA and MCU",0,bartpleiter/SGBtetrisAI,323327393,Verilog,SGBtetrisAI,287,0,2024-03-25 17:55:24+00:00,[],https://api.github.com/licenses/gpl-3.0
518,https://github.com/GerardoVielma/ScrollingDigit.git,2020-12-23 23:08:26+00:00,,0,GerardoVielma/ScrollingDigit,324019400,Verilog,ScrollingDigit,4,0,2020-12-23 23:50:52+00:00,[],None
519,https://github.com/mahmoud791/PCI-Target-device.git,2020-12-20 19:39:23+00:00,,0,mahmoud791/PCI-Target-device,323150737,Verilog,PCI-Target-device,94,0,2020-12-24 19:48:40+00:00,[],None
520,https://github.com/Sarthakchandra/ComplexFloatingPoint.git,2020-12-24 11:14:17+00:00,Code For Floating point Calculation of Complex Functions taking into account to avoid multi-driver Input,0,Sarthakchandra/ComplexFloatingPoint,324137932,Verilog,ComplexFloatingPoint,1727,0,2020-12-24 11:20:36+00:00,[],None
521,https://github.com/kybli/ece385finalproject.git,2020-12-16 21:34:00+00:00,ECE 385 Final Project,0,kybli/ece385finalproject,322107383,Verilog,ece385finalproject,59623,0,2022-10-10 18:45:10+00:00,[],None
522,https://github.com/scmejia/Ultimate_Pong_Game.git,2020-12-18 21:14:00+00:00,,0,scmejia/Ultimate_Pong_Game,322705879,Verilog,Ultimate_Pong_Game,16329,0,2020-12-19 08:55:19+00:00,[],None
523,https://github.com/Saiprem98/ECE154A_Lab_1.git,2020-12-20 01:22:33+00:00,,0,Saiprem98/ECE154A_Lab_1,322970415,Verilog,ECE154A_Lab_1,428,0,2020-12-20 01:23:26+00:00,[],None
524,https://github.com/elliott614/WISC-microprocessor.git,2020-12-20 00:43:44+00:00,"Verilog HDL for architecture class. ""WISC"" mips-based processor. 3 phases. 1: no pipeline. 2: pipeline/forwarding 3: cache",0,elliott614/WISC-microprocessor,322965960,Verilog,WISC-microprocessor,25,0,2020-12-20 00:45:35+00:00,[],None
525,https://github.com/MeenakshiShankar/Ripple-Carry-Adder.git,2020-12-25 14:41:32+00:00,,0,MeenakshiShankar/Ripple-Carry-Adder,324379470,Verilog,Ripple-Carry-Adder,3,0,2020-12-25 14:45:51+00:00,[],None
526,https://github.com/jay-in-git/Pipelined-CPU.git,2020-12-28 17:04:28+00:00,,0,jay-in-git/Pipelined-CPU,325068864,Verilog,Pipelined-CPU,1544,0,2021-02-22 08:54:39+00:00,[],None
527,https://github.com/chitrabanut/AES.git,2020-12-17 10:09:36+00:00,,0,chitrabanut/AES,322254912,Verilog,AES,6,0,2020-12-26 01:53:33+00:00,[],None
528,https://github.com/amrehab-98/CO2-Project.git,2020-12-16 17:43:54+00:00,,0,amrehab-98/CO2-Project,322058178,Verilog,CO2-Project,98,0,2021-04-30 04:41:18+00:00,[],None
529,https://github.com/nafe98/Verilog-Sequential-Codes.git,2020-12-17 09:42:42+00:00,,0,nafe98/Verilog-Sequential-Codes,322248240,Verilog,Verilog-Sequential-Codes,1560,0,2020-12-31 07:46:19+00:00,[],None
530,https://github.com/lexyaa/IndividualProject.git,2020-12-16 15:02:38+00:00,,0,lexyaa/IndividualProject,322016559,Verilog,IndividualProject,1,0,2020-12-16 15:12:56+00:00,[],None
531,https://github.com/Er-Darshil/8-Bit-ALU.git,2020-12-27 10:13:53+00:00,8-Bit ALU using Verilog,0,Er-Darshil/8-Bit-ALU,324734595,Verilog,8-Bit-ALU,3,0,2020-12-27 10:15:18+00:00,[],None
532,https://github.com/samwade240/singleCycleProcessor.git,2020-12-15 16:04:36+00:00,This is an implementation of a single-cycle processor load word instruction,0,samwade240/singleCycleProcessor,321718667,Verilog,singleCycleProcessor,152,0,2020-12-15 16:14:24+00:00,[],None
533,https://github.com/SanyueHan/Implementation-of-MIPS-Processor-Using-Verilog-HDL.git,2021-01-17 06:22:58+00:00,An assignment for BDIC3001J - Computer Architectures,0,SanyueHan/Implementation-of-MIPS-Processor-Using-Verilog-HDL,330328491,Verilog,Implementation-of-MIPS-Processor-Using-Verilog-HDL,49,0,2021-04-06 20:23:18+00:00,[],None
534,https://github.com/upamasharmin/Verilog_hdl.git,2021-01-08 17:14:13+00:00,some practices on verilog,0,upamasharmin/Verilog_hdl,327966152,Verilog,Verilog_hdl,1,0,2021-09-05 07:11:32+00:00,[],None
535,https://github.com/lashraelrx/fbcpu_core.git,2021-01-14 21:14:44+00:00,,0,lashraelrx/fbcpu_core,329736180,Verilog,fbcpu_core,1,0,2021-01-14 21:15:06+00:00,[],None
536,https://github.com/AlanjyHuang/Verilog-snake-game.git,2021-01-14 22:22:04+00:00,,0,AlanjyHuang/Verilog-snake-game,329748459,Verilog,Verilog-snake-game,1070,0,2021-12-28 08:44:07+00:00,[],None
537,https://github.com/DrCaH4ec/signal_generator_on_FPGA.git,2021-01-19 14:18:41+00:00,,0,DrCaH4ec/signal_generator_on_FPGA,331003933,Verilog,signal_generator_on_FPGA,31,0,2021-01-19 14:24:10+00:00,[],None
538,https://github.com/zll969722243/MiniSoC.git,2021-01-19 00:40:16+00:00,,0,zll969722243/MiniSoC,330821977,Verilog,MiniSoC,210,0,2021-01-19 14:02:03+00:00,[],None
539,https://github.com/JoshuaBowerman/CPUP.git,2021-01-19 20:18:00+00:00,Simple verilog CPU designed to run on a DE0-NANO with a Cyclone IV,0,JoshuaBowerman/CPUP,331098788,Verilog,CPUP,353,0,2021-04-28 14:35:00+00:00,[],None
540,https://github.com/vmfiguracion/ComputerSystemsArchitecture.git,2020-12-31 20:48:54+00:00,,0,vmfiguracion/ComputerSystemsArchitecture,325871357,Verilog,ComputerSystemsArchitecture,148,0,2021-06-08 04:22:07+00:00,[],None
541,https://github.com/wwweiwei/Digital-Logic-Design.git,2021-01-08 03:39:50+00:00,[CourseWork] 10620CS210201 Digital Logic Design,0,wwweiwei/Digital-Logic-Design,327790651,Verilog,Digital-Logic-Design,8910,0,2021-01-09 06:24:09+00:00,[],None
542,https://github.com/vitaliy2034/ClockOnFPGA.git,2021-01-07 10:59:55+00:00,"Clock for QMTECH Cyclone IV Starter Kit, which controlled by ONE button. View ""StateMachine.pdf"" for detailed information.",0,vitaliy2034/ClockOnFPGA,327585180,Verilog,ClockOnFPGA,113,0,2021-01-09 21:01:46+00:00,[],None
543,https://github.com/hsndmr15/FB-CPU-RTL.git,2021-01-09 14:07:45+00:00,,0,hsndmr15/FB-CPU-RTL,328169060,Verilog,FB-CPU-RTL,15,0,2021-03-05 23:40:49+00:00,[],None
544,https://github.com/ryankosta/r200.git,2021-01-09 17:58:47+00:00,My second core design with pipeline,0,ryankosta/r200,328214931,Verilog,r200,867,0,2021-04-25 18:05:07+00:00,[],None
545,https://github.com/MononobenoFuto/DFFinal.git,2020-12-29 08:40:05+00:00,数电课程设计,1,MononobenoFuto/DFFinal,325233020,Verilog,DFFinal,5,0,2020-12-31 01:09:19+00:00,[],None
546,https://github.com/vsuresh95/rtl-design.git,2021-01-10 04:46:45+00:00,RTL design experiments,0,vsuresh95/rtl-design,328305151,Verilog,rtl-design,22,0,2021-01-17 12:16:54+00:00,[],None
547,https://github.com/hao089/FPGA-Final-project.git,2021-01-11 16:03:52+00:00,,0,hao089/FPGA-Final-project,328717921,Verilog,FPGA-Final-project,106,0,2021-01-14 09:15:47+00:00,[],None
548,https://github.com/michalsc/vcpu.git,2021-01-10 14:02:18+00:00,Verilog-CPU,0,michalsc/vcpu,328396508,Verilog,vcpu,402,0,2021-01-29 19:57:29+00:00,[],https://api.github.com/licenses/mpl-2.0
549,https://github.com/javaherisaber/Modelsim.git,2021-01-11 13:50:43+00:00,Verilog project working with Modelsim IDE,0,javaherisaber/Modelsim,328678919,Verilog,Modelsim,48,0,2021-01-11 14:08:57+00:00,[],None
550,https://github.com/h-enes-simsek/2DConvolutionFPGA.git,2021-01-12 20:28:53+00:00,2D convolution implementation with 3x3 kernel and 128x128 sized image with 1 padding,0,h-enes-simsek/2DConvolutionFPGA,329104283,Verilog,2DConvolutionFPGA,621,0,2021-06-17 16:26:28+00:00,[],None
551,https://github.com/ritamsingal/RISC-Processor.git,2021-01-12 11:00:13+00:00,A RISC processor developed in Verilog ,0,ritamsingal/RISC-Processor,328958553,Verilog,RISC-Processor,16,0,2021-04-01 05:11:39+00:00,[],None
552,https://github.com/xiaoyu0623/Fall-2020-ECE-2500.git,2021-01-14 01:22:10+00:00,,0,xiaoyu0623/Fall-2020-ECE-2500,329474435,Verilog,Fall-2020-ECE-2500,2100,0,2021-01-14 01:36:47+00:00,[],None
553,https://github.com/D3r3k23/Blackboard-IO.git,2020-12-30 23:28:23+00:00,"IP for controlling switches, buttons, LEDs, and SSEG display on Blackboard from the PS",0,D3r3k23/Blackboard-IO,325668749,Verilog,Blackboard-IO,21,0,2023-10-12 13:14:22+00:00,[],None
554,https://github.com/diamond2nv/Harsh_Constraints.git,2020-12-29 06:22:23+00:00,A Verilog project to port 8-bit CameraLink to the Zynq-7000 series chip on Xilinx's PYNQ platform!,0,diamond2nv/Harsh_Constraints,325204080,,Harsh_Constraints,21587,0,2021-01-09 05:48:31+00:00,[],None
555,https://github.com/ntjoar/CS-152B.git,2021-01-06 01:53:24+00:00,CS 152B Labs and Project,0,ntjoar/CS-152B,327170399,Verilog,CS-152B,6638,0,2021-09-28 02:41:55+00:00,[],None
556,https://github.com/hsfalsharif/KMeansClusteringSW.git,2021-01-05 19:27:51+00:00,,0,hsfalsharif/KMeansClusteringSW,327098413,Verilog,KMeansClusteringSW,302405,0,2021-05-10 00:20:18+00:00,[],None
557,https://github.com/ISAgroup01/Lab3.git,2021-01-05 20:29:45+00:00,RISC-V lite,0,ISAgroup01/Lab3,327111945,Verilog,Lab3,32766,0,2021-02-21 14:41:10+00:00,[],None
558,https://github.com/WilliamTaylor21/SystemSynthesis-ModelingFinalProject.git,2021-01-05 21:42:33+00:00,"Full functioning CPU that takes in 16bit instructions, preforms operations, stores, and loads them as the instructions say.",0,WilliamTaylor21/SystemSynthesis-ModelingFinalProject,327126612,Verilog,SystemSynthesis-ModelingFinalProject,346,0,2022-02-24 19:06:14+00:00,[],None
559,https://github.com/AdityaNG/RippleCarryAdder.git,2021-01-12 14:37:20+00:00,A vPackage implementing Ripple Carry Adder,0,AdityaNG/RippleCarryAdder,329014884,Verilog,RippleCarryAdder,89,0,2021-01-21 10:12:04+00:00,[],None
560,https://github.com/AdityaNG/Single-Cycle-Matrix-Multiplier.git,2021-01-11 06:25:36+00:00,,0,AdityaNG/Single-Cycle-Matrix-Multiplier,328568618,Verilog,Single-Cycle-Matrix-Multiplier,2,0,2021-01-11 07:33:48+00:00,[],None
561,https://github.com/austinsbrown/MIPS-Single-Cycle.git,2021-01-08 23:03:51+00:00,,0,austinsbrown/MIPS-Single-Cycle,328031379,Verilog,MIPS-Single-Cycle,18,0,2021-01-08 23:04:08+00:00,[],None
562,https://github.com/gilron31/rs232.git,2021-01-13 17:30:32+00:00,,0,gilron31/rs232,329383161,Verilog,rs232,9,0,2021-01-13 17:33:26+00:00,[],None
563,https://github.com/JimZeyuYang/Reaction-meter.git,2021-01-16 22:51:45+00:00,,0,JimZeyuYang/Reaction-meter,330273188,Verilog,Reaction-meter,5,0,2021-01-17 18:34:11+00:00,[],None
564,https://github.com/saisankp/Digital-Logic-Design.git,2021-01-19 21:31:25+00:00,My code in Verilog to study Digital Logic Design.,0,saisankp/Digital-Logic-Design,331114852,Verilog,Digital-Logic-Design,25,0,2021-02-16 16:02:06+00:00,[],None
565,https://github.com/DanielPetrache/Risc_Processor.git,2021-01-18 11:43:50+00:00,,0,DanielPetrache/Risc_Processor,330648542,Verilog,Risc_Processor,9,0,2021-01-18 11:47:47+00:00,[],None
566,https://github.com/mohab-elrouby/hamming_encoder_decoder.git,2021-01-18 14:56:17+00:00,verilog hamming encoder decoder system ,0,mohab-elrouby/hamming_encoder_decoder,330699604,Verilog,hamming_encoder_decoder,123,0,2021-01-19 01:32:14+00:00,[],None
567,https://github.com/Tatev2919/mem_final.git,2021-01-17 19:02:48+00:00,,0,Tatev2919/mem_final,330465175,Verilog,mem_final,9,0,2021-02-10 08:06:41+00:00,[],None
568,https://github.com/armenuhiarakelyan1978/Hamming_code.git,2021-01-19 11:41:24+00:00,,0,armenuhiarakelyan1978/Hamming_code,330960825,Verilog,Hamming_code,4,0,2021-01-19 11:44:00+00:00,[],None
569,https://github.com/bogdanmm97/obtain-20mhz-clk-from-100mhz.git,2021-01-13 09:57:37+00:00,,0,bogdanmm97/obtain-20mhz-clk-from-100mhz,329264077,Verilog,obtain-20mhz-clk-from-100mhz,0,0,2021-01-13 10:00:18+00:00,[],None
570,https://github.com/ckdur/spix.git,2021-01-11 03:04:05+00:00,An SPI interface. Very basic...,0,ckdur/spix,328533887,Verilog,spix,3,0,2021-01-11 03:05:02+00:00,[],None
571,https://github.com/lemontea8909/logic_final.git,2021-01-12 09:56:55+00:00,109 Logical design final project,0,lemontea8909/logic_final,328942562,Verilog,logic_final,48482,0,2021-01-17 05:41:05+00:00,[],None
572,https://github.com/AAWO/verilog_inout_delay.git,2021-01-11 21:36:34+00:00,Delayed bidirectional connection module,0,AAWO/verilog_inout_delay,328797448,Verilog,verilog_inout_delay,2,0,2021-01-11 21:47:03+00:00,[],None
573,https://github.com/blairtyx/FSM-demo.git,2021-01-14 12:38:15+00:00,A Finite State Machine Lab Demo in Verilog,0,blairtyx/FSM-demo,329611229,Verilog,FSM-demo,3,0,2021-01-14 12:50:09+00:00,[],None
574,https://github.com/andrew-castle/mips-architecture.git,2021-01-07 18:16:39+00:00,Computer Architecture - Simplified MIPS Processor,0,andrew-castle/mips-architecture,327691249,Verilog,mips-architecture,10,0,2021-01-18 20:14:55+00:00,"['verilog', '32-bits', 'computer-architecture', 'mips']",None
575,https://github.com/VasilyMarkov/Pulse-Amplitude-modulation-DSP.git,2021-01-10 17:45:40+00:00,,0,VasilyMarkov/Pulse-Amplitude-modulation-DSP,328443013,Verilog,Pulse-Amplitude-modulation-DSP,10,0,2021-01-10 17:53:22+00:00,[],None
576,https://github.com/Stylesoftware/Tang-Nano-FIFO-IP-Example.git,2021-01-08 06:58:41+00:00,"Explore how to use the FIFO IP from Gowin, setup for the Tang Nano",0,Stylesoftware/Tang-Nano-FIFO-IP-Example,327823838,Verilog,Tang-Nano-FIFO-IP-Example,38,0,2021-07-16 10:10:36+00:00,"['gowin', 'fifo', 'verilog']",https://api.github.com/licenses/unlicense
577,https://github.com/Jason-Du/FINAL_PIPELINE_VERSION.git,2021-01-16 20:01:57+00:00,,0,Jason-Du/FINAL_PIPELINE_VERSION,330245940,Verilog,FINAL_PIPELINE_VERSION,14325,0,2021-01-17 16:56:56+00:00,[],None
578,https://github.com/eiuflhlasf/CS145-Experiments-in-computer-organization.git,2021-01-16 12:32:00+00:00,,0,eiuflhlasf/CS145-Experiments-in-computer-organization,330158337,Verilog,CS145-Experiments-in-computer-organization,20112,0,2021-01-16 13:04:07+00:00,[],https://api.github.com/licenses/mit
579,https://github.com/28aashish/IITB-RISC.git,2021-01-16 17:13:02+00:00,16bit RISC Processor ,0,28aashish/IITB-RISC,330214632,Verilog,IITB-RISC,1760,0,2021-06-07 04:44:19+00:00,[],None
580,https://github.com/sdadsp/DPLL-ISDN.git,2020-12-16 18:35:15+00:00,,0,sdadsp/DPLL-ISDN,322069950,Verilog,DPLL-ISDN,1157,0,2020-12-16 18:50:29+00:00,[],None
581,https://github.com/dumpinfo/DE2115backup.git,2020-12-16 08:32:06+00:00,,0,dumpinfo/DE2115backup,321918290,Verilog,DE2115backup,518429,0,2020-12-22 14:43:20+00:00,[],None
582,https://github.com/semaphoric775/IncDecCounter.git,2020-12-15 23:12:43+00:00,An FSM-based counter in Verilog,0,semaphoric775/IncDecCounter,321811993,Verilog,IncDecCounter,12,0,2020-12-15 23:15:32+00:00,[],None
583,https://github.com/karishma-shah/ece241_Verilog.git,2020-12-25 19:04:13+00:00,,0,karishma-shah/ece241_Verilog,324418131,Verilog,ece241_Verilog,23,0,2020-12-26 15:32:11+00:00,[],None
584,https://github.com/hchenji/de0-nano-soc-ghrd.git,2020-12-18 19:26:20+00:00,,1,hchenji/de0-nano-soc-ghrd,322686399,Verilog,de0-nano-soc-ghrd,11085,0,2021-01-04 19:07:08+00:00,[],None
585,https://github.com/YixingShen/HDLBits_Practice.git,2020-12-28 05:02:59+00:00,,0,YixingShen/HDLBits_Practice,324916390,Verilog,HDLBits_Practice,86,0,2021-01-04 05:34:08+00:00,[],None
586,https://github.com/agucarranza/Mips-pipeline.git,2020-12-30 02:08:32+00:00,HDL Verilog implementation of MIPS processor.,0,agucarranza/Mips-pipeline,325431351,Verilog,Mips-pipeline,374,0,2021-03-07 23:22:12+00:00,[],None
587,https://github.com/SunicYosen/stacc.git,2020-12-31 06:56:22+00:00,,0,SunicYosen/stacc,325736765,Verilog,stacc,891,0,2021-06-04 06:17:48+00:00,[],None
588,https://github.com/dineeshmohan/PYGMYBB_7segment-display.git,2020-12-31 09:37:32+00:00,pygmybb driving 7 segment display,0,dineeshmohan/PYGMYBB_7segment-display,325766177,Verilog,PYGMYBB_7segment-display,1,0,2020-12-31 09:38:00+00:00,[],None
589,https://github.com/EDaraya/Project.git,2021-01-01 00:21:27+00:00,,0,EDaraya/Project,325893326,Verilog,Project,89,0,2021-01-22 17:58:20+00:00,[],None
590,https://github.com/SungJin27/Comsil-2.git,2021-01-06 05:25:14+00:00,,0,SungJin27/Comsil-2,327209105,Verilog,Comsil-2,25,0,2021-01-06 05:40:56+00:00,[],None
591,https://github.com/NakamuraShinou/Floating-point-arithmetic-unit-new-.git,2021-01-05 07:57:17+00:00,,0,NakamuraShinou/Floating-point-arithmetic-unit-new-,326927290,Verilog,Floating-point-arithmetic-unit-new-,14,0,2021-01-05 08:00:07+00:00,[],None
592,https://github.com/Sarthakchandra/AXI4-Lite-IP-Creation.git,2020-12-24 11:44:38+00:00,Create a custom AXI4 Lite IP to perform the following operation Q= X/T + sqrt(α ln(N)/T),0,Sarthakchandra/AXI4-Lite-IP-Creation,324143518,Verilog,AXI4-Lite-IP-Creation,1771,0,2020-12-24 11:47:14+00:00,[],None
593,https://github.com/vmazashvili/simple-processor-ALU.git,2020-12-19 18:33:44+00:00,,0,vmazashvili/simple-processor-ALU,322913333,Verilog,simple-processor-ALU,272,0,2020-12-19 23:53:22+00:00,[],None
594,https://github.com/myadegari/SystemVerilog-Project.git,2020-12-26 06:18:40+00:00,,0,myadegari/SystemVerilog-Project,324494731,Verilog,SystemVerilog-Project,144,0,2021-02-13 07:48:30+00:00,[],None
595,https://github.com/Utsav22G/CompArch.git,2021-01-03 12:53:34+00:00,Lecture notes and assignments from CompArch Fall '20 ,0,Utsav22G/CompArch,326406659,Verilog,CompArch,79088,0,2021-01-03 13:15:23+00:00,[],None
596,https://github.com/AGC-stuff/rotinom.git,2021-01-03 21:09:43+00:00,,0,AGC-stuff/rotinom,326501175,Verilog,rotinom,18508,0,2021-01-03 21:10:55+00:00,[],https://api.github.com/licenses/mit
597,https://github.com/austin-hua/ComputerArchitecture_SimuCPU.git,2020-12-27 09:05:42+00:00,,1,austin-hua/ComputerArchitecture_SimuCPU,324724162,Verilog,ComputerArchitecture_SimuCPU,489,0,2022-01-16 03:32:03+00:00,[],None
598,https://github.com/dosoon883/Merge-Parallel-sort.git,2020-12-19 13:49:31+00:00,,0,dosoon883/Merge-Parallel-sort,322858139,,Merge-Parallel-sort,9,0,2024-02-21 23:13:59+00:00,[],https://api.github.com/licenses/mit
599,https://github.com/aTTiny73/Cyclone2-pwm.git,2020-12-15 20:57:02+00:00,Generating pwm signal on Cyclone II,0,aTTiny73/Cyclone2-pwm,321787215,Verilog,Cyclone2-pwm,1,0,2021-01-01 21:50:37+00:00,[],None
600,https://github.com/CosetteX/Computer-Architecture-Lab_ZJU.git,2020-12-17 07:32:04+00:00,,0,CosetteX/Computer-Architecture-Lab_ZJU,322215866,Verilog,Computer-Architecture-Lab_ZJU,3,0,2020-12-17 07:36:21+00:00,[],None
601,https://github.com/ChrisUSC/EE354_Exercises.git,2020-12-16 16:10:12+00:00,,0,ChrisUSC/EE354_Exercises,322034822,Verilog,EE354_Exercises,18,0,2020-12-16 16:11:15+00:00,[],None
602,https://github.com/eliasffyksen/riscv.git,2020-12-19 20:13:19+00:00,RV32I arcitecture implemented in Verilog,0,eliasffyksen/riscv,322929945,Verilog,riscv,18,0,2020-12-21 03:17:40+00:00,[],https://api.github.com/licenses/mit
603,https://github.com/GerardoVielma/Verilog-Game-Project.git,2020-12-20 01:51:36+00:00,,0,GerardoVielma/Verilog-Game-Project,322973780,Verilog,Verilog-Game-Project,9,0,2020-12-25 23:49:23+00:00,[],None
604,https://github.com/Saiprem98/ECE154A_Lab_5.git,2020-12-20 01:22:25+00:00,,0,Saiprem98/ECE154A_Lab_5,322970395,Verilog,ECE154A_Lab_5,22,0,2020-12-20 01:23:46+00:00,[],None
605,https://github.com/Wenbin-Xiao/fllow_wzc_learn_mips_cpu.git,2020-12-31 03:28:45+00:00,,0,Wenbin-Xiao/fllow_wzc_learn_mips_cpu,325704610,Verilog,fllow_wzc_learn_mips_cpu,662,0,2021-01-16 10:08:11+00:00,[],None
606,https://github.com/VeridisQuo18/ALU.git,2020-12-27 03:48:10+00:00,ALU de 8-bit en Verilog,0,VeridisQuo18/ALU,324681496,Verilog,ALU,68,0,2022-07-29 18:18:54+00:00,"['alu', 'verilog']",None
607,https://github.com/AbdelrahmanBedour/PCI-Target-device.git,2020-12-30 12:03:30+00:00,,0,AbdelrahmanBedour/PCI-Target-device,325540138,Verilog,PCI-Target-device,775,0,2020-12-30 13:00:13+00:00,[],None
608,https://github.com/afcamargot/Dosificador_de_medicinas_PilOut.git,2020-12-15 03:47:24+00:00,El siguiente repositorio contiene los archivos diseñados en el marco del proyecto Pilout. Este proyecto busca hacer el diseño e implementación de un sistema  de dosificación de píldoras. El sistema está enfocado en ayudar a personas que presenten dificultades para adherirse a un tratamiento por enfermedades que afectan la memoria o que son analfabetas.  A continuación encontrará todo el código realizado en el lenguaje Verilog.    ,0,afcamargot/Dosificador_de_medicinas_PilOut,321545430,Verilog,Dosificador_de_medicinas_PilOut,17,0,2020-12-15 19:09:16+00:00,[],None
609,https://github.com/kingkwon/IndividualProject.git,2020-12-15 02:05:11+00:00,,0,kingkwon/IndividualProject,321525723,Verilog,IndividualProject,3,0,2020-12-18 19:48:24+00:00,[],None
610,https://github.com/ShaunPrice/FPGA-Christmas-Lights_v2.git,2020-12-23 12:31:12+00:00,,0,ShaunPrice/FPGA-Christmas-Lights_v2,323896951,Verilog,FPGA-Christmas-Lights_v2,44,0,2022-02-18 05:30:38+00:00,[],None
611,https://github.com/choihamin/assignment.git,2020-12-24 06:09:07+00:00,verilog,0,choihamin/assignment,324080510,Verilog,assignment,15,0,2020-12-24 06:20:01+00:00,[],None
612,https://github.com/gjivaeri/single-cycle-processor.git,2020-12-24 10:28:55+00:00,,0,gjivaeri/single-cycle-processor,324129871,Verilog,single-cycle-processor,2,0,2020-12-24 10:47:59+00:00,[],None
613,https://github.com/Sarthakchandra/Rom-using-BRAM.git,2020-12-24 10:57:20+00:00,"In this part, we will learn about how to implement a ROM using the Block Memory Generator IP and look at how we can customize the IP according to our needs.",0,Sarthakchandra/Rom-using-BRAM,324134877,Verilog,Rom-using-BRAM,1387,0,2020-12-24 11:00:15+00:00,[],None
614,https://github.com/uta9991/labs.git,2020-12-22 19:14:02+00:00,,0,uta9991/labs,323712624,Verilog,labs,1546,0,2020-12-22 19:36:38+00:00,[],None
615,https://github.com/lee-coder/IC_Design.git,2020-12-22 08:02:53+00:00,,0,lee-coder/IC_Design,323560711,Verilog,IC_Design,13,0,2023-08-13 15:11:59+00:00,[],https://api.github.com/licenses/apache-2.0
616,https://github.com/harvastum/ESL.git,2020-12-22 15:21:51+00:00,,0,harvastum/ESL,323661906,Verilog,ESL,4981,0,2020-12-22 15:22:49+00:00,[],None
617,https://github.com/SJ1115/MIPSHOMEWORK.git,2020-12-22 15:05:51+00:00,,0,SJ1115/MIPSHOMEWORK,323658127,Verilog,MIPSHOMEWORK,9,0,2020-12-24 04:46:53+00:00,[],None
618,https://github.com/Korea-Univ-Lectures/Digital-Logic-Design.git,2020-12-25 06:12:35+00:00,Korea Univ. / 2019 Spring Semester / COSE221,0,Korea-Univ-Lectures/Digital-Logic-Design,324300156,Verilog,Digital-Logic-Design,30476,0,2021-06-16 10:49:46+00:00,[],None
619,https://github.com/Nimausfi/Only_Prime_Numbers.git,2020-12-26 00:21:35+00:00,,0,Nimausfi/Only_Prime_Numbers,324454046,Verilog,Only_Prime_Numbers,61,0,2020-12-30 16:14:01+00:00,[],None
620,https://github.com/c-dewey/FPGA-Verilog-LED-Variable-Blinking.git,2021-01-04 06:51:25+00:00,,0,c-dewey/FPGA-Verilog-LED-Variable-Blinking,326595375,Verilog,FPGA-Verilog-LED-Variable-Blinking,92,0,2021-04-10 20:41:47+00:00,[],None
621,https://github.com/a1ali/FPGA_Digital_Clock.git,2021-01-07 20:44:37+00:00,A digital clock built using an FPGA development board and seven segment displays. ,0,a1ali/FPGA_Digital_Clock,327720901,Verilog,FPGA_Digital_Clock,2186,0,2021-01-16 00:14:05+00:00,[],None
622,https://github.com/ktpss95112/CA2020-Project-2.git,2021-01-02 06:09:26+00:00,,0,ktpss95112/CA2020-Project-2,326120928,Verilog,CA2020-Project-2,2571,0,2021-11-18 12:02:27+00:00,[],None
623,https://github.com/vishnuvardhangade/1-3-router-using-verilog.git,2021-01-10 17:02:22+00:00,,0,vishnuvardhangade/1-3-router-using-verilog,328434432,Verilog,1-3-router-using-verilog,4,0,2021-01-10 17:05:25+00:00,[],None
624,https://github.com/a1ali/FPGA_Pong_Game.git,2021-01-12 21:26:23+00:00,Pong Game using an FPGA and a VGA monitor,0,a1ali/FPGA_Pong_Game,329116507,Verilog,FPGA_Pong_Game,12469,0,2021-01-20 02:43:56+00:00,[],None
625,https://github.com/harry900831/LDL_Final_Project-2048.git,2021-01-06 19:39:27+00:00,,0,harry900831/LDL_Final_Project-2048,327412545,Verilog,LDL_Final_Project-2048,65,0,2021-01-20 15:50:43+00:00,[],None
626,https://github.com/DouglasYu/ECE385final_digit_recognition.git,2021-01-07 08:55:15+00:00,I implemented a digit recognition network on DE2-115 FPGA develop board with a camera as input. The whole implementation is done by hardware.,0,DouglasYu/ECE385final_digit_recognition,327555651,Verilog,ECE385final_digit_recognition,59379,0,2021-08-23 01:43:38+00:00,"['fpga', 'convolutional-neural-networks', 'ece385']",https://api.github.com/licenses/mit
627,https://github.com/DaveRichmond/hdl_projects.git,2021-01-06 02:58:10+00:00,"Projects using hdlmake. Mostly from other sources, but ported to build using hdlmake",0,DaveRichmond/hdl_projects,327183137,Verilog,hdl_projects,82,0,2021-02-09 08:35:31+00:00,[],None
628,https://github.com/dora577/Array-sorting-custom-IP-using-Xilinx-Vivado.git,2021-01-18 15:19:04+00:00,"The project aims to create the custom IP* using Xilinx Vivado, which would sort the array of the size of up to 1024 in ascending order.",0,dora577/Array-sorting-custom-IP-using-Xilinx-Vivado,330706068,Verilog,Array-sorting-custom-IP-using-Xilinx-Vivado,922,0,2021-01-18 15:38:09+00:00,[],None
629,https://github.com/hata6502/minimum-computer.git,2021-01-17 15:36:35+00:00,A minimum computer on Papilio One 500K. ,0,hata6502/minimum-computer,330424205,Verilog,minimum-computer,478,0,2021-02-13 17:45:15+00:00,[],https://api.github.com/licenses/mit
630,https://github.com/hiweibolu/cpu.git,2021-01-03 09:03:19+00:00,,0,hiweibolu/cpu,326366378,Verilog,cpu,545,0,2021-01-04 04:40:46+00:00,[],None
631,https://github.com/albertomata8/Digitales2.git,2021-01-03 23:46:26+00:00,"In this repository are all the tasks of the Digital Circuits 2 course, based on Verilog",0,albertomata8/Digitales2,326523454,Verilog,Digitales2,5577,0,2021-01-04 01:18:47+00:00,[],None
632,https://github.com/armenuhiarakelyan1978/BIST.git,2021-01-12 03:56:32+00:00,BIST,0,armenuhiarakelyan1978/BIST,328866175,Verilog,BIST,10,0,2021-01-18 11:07:15+00:00,[],None
633,https://github.com/chloe0919/finalproject_14.git,2021-01-12 07:52:08+00:00,,0,chloe0919/finalproject_14,328911535,Verilog,finalproject_14,3529,0,2021-01-14 12:25:40+00:00,[],None
634,https://github.com/its-just-pritam/Computer-Organization-Lab-IITKGP.git,2021-01-19 14:26:04+00:00,,0,its-just-pritam/Computer-Organization-Lab-IITKGP,331006199,Verilog,Computer-Organization-Lab-IITKGP,277,0,2021-01-19 14:37:19+00:00,[],None
635,https://github.com/wangws-ic/Verilog.git,2021-01-16 12:34:01+00:00,,0,wangws-ic/Verilog,330158743,Verilog,Verilog,4,0,2021-01-16 12:37:19+00:00,[],None
636,https://github.com/molaboon/Final_project_demo.git,2021-01-14 17:13:50+00:00,,1,molaboon/Final_project_demo,329683354,Verilog,Final_project_demo,21,0,2021-01-14 17:48:30+00:00,[],None
637,https://github.com/IdLeoO/Verification_Proj.git,2021-01-14 04:46:42+00:00,,0,IdLeoO/Verification_Proj,329509790,Verilog,Verification_Proj,2387,0,2022-12-13 04:12:03+00:00,[],None
638,https://github.com/kgetech/PWM_Messages.git,2020-12-23 09:17:06+00:00,,0,kgetech/PWM_Messages,323856558,Verilog,PWM_Messages,18,0,2020-12-23 09:20:45+00:00,[],https://api.github.com/licenses/gpl-3.0
639,https://github.com/skarthik21/aes.git,2020-12-17 08:01:15+00:00,Verilog implementation of the symmetric block cipher AES (Advanced Encryption Standard) as specified in NIST FIPS 197. This implementation supports only 128 bit keys.,0,skarthik21/aes,322222880,Verilog,aes,8,0,2021-07-20 07:49:44+00:00,[],https://api.github.com/licenses/mit
640,https://github.com/GerardoVielma/VerilogROM.git,2020-12-20 22:47:50+00:00,,0,GerardoVielma/VerilogROM,323179860,Verilog,VerilogROM,8,0,2020-12-26 00:27:24+00:00,[],None
641,https://github.com/KGback/Triumphcore.git,2020-12-22 12:54:54+00:00,Focus on the experimental creation of CPU archtecture based on risc-v,0,KGback/Triumphcore,323625864,Verilog,Triumphcore,35,0,2021-02-19 14:43:09+00:00,[],https://api.github.com/licenses/apache-2.0
642,https://github.com/Mael2001/Relog_Digital_Verilog.git,2020-12-18 19:40:06+00:00,,0,Mael2001/Relog_Digital_Verilog,322688958,Verilog,Relog_Digital_Verilog,18,0,2020-12-18 19:40:42+00:00,[],None
643,https://github.com/hit-zblv/verilog_units.git,2020-12-19 07:46:57+00:00,收集备份一些经常用到的、通用的verilogModules,0,hit-zblv/verilog_units,322794838,Verilog,verilog_units,539,0,2023-07-16 06:50:44+00:00,[],None
644,https://github.com/108321005/DEMO1.git,2021-01-15 06:25:10+00:00,,0,108321005/DEMO1,329827474,Verilog,DEMO1,23,0,2021-01-16 16:01:43+00:00,[],None
645,https://github.com/mihirkestur/16-bit-shift-rotate-ALU.git,2021-01-14 10:05:47+00:00,"Implementation of shift–left, shift–right and rotate operations for the 16–bit ALU using multiplexers.",0,mihirkestur/16-bit-shift-rotate-ALU,329575921,Verilog,16-bit-shift-rotate-ALU,591,0,2021-01-14 10:49:12+00:00,[],None
646,https://github.com/Vinitha14/Computer-Architecture.git,2021-01-13 16:12:43+00:00,,0,Vinitha14/Computer-Architecture,329362480,Verilog,Computer-Architecture,6556,0,2021-01-13 16:18:14+00:00,[],None
647,https://github.com/zxc97st60108/catch_pdm_zedboard_new.git,2021-01-17 14:25:02+00:00,,0,zxc97st60108/catch_pdm_zedboard_new,330408880,Verilog,catch_pdm_zedboard_new,17991,0,2021-01-18 12:34:04+00:00,[],None
648,https://github.com/ryankosta/r100.git,2021-01-09 18:05:37+00:00,My first core design,0,ryankosta/r100,328216241,Verilog,r100,209,0,2021-01-09 18:07:49+00:00,[],None
649,https://github.com/juarubianopo/Sintetizador-de-Audio.git,2020-12-15 14:00:54+00:00,Descripción de hardware de un sintetizador de audio muy básico.,0,juarubianopo/Sintetizador-de-Audio,321684716,Verilog,Sintetizador-de-Audio,8023,0,2020-12-15 15:14:17+00:00,"['fpga-programming', 'audio-processing']",None
650,https://github.com/navyasri02/Advanced-Encryption-Standard-verilog-.git,2020-12-15 03:26:19+00:00,,0,navyasri02/Advanced-Encryption-Standard-verilog-,321541546,Verilog,Advanced-Encryption-Standard-verilog-,78,0,2021-07-20 18:32:20+00:00,[],None
651,https://github.com/CesareConsonni/ES_20-21-CCC.git,2021-01-02 08:32:06+00:00,"Embedded Systems Project Corbetta, Colombi, Consonni",0,CesareConsonni/ES_20-21-CCC,326140894,Verilog,ES_20-21-CCC,13015,0,2021-08-10 14:18:03+00:00,[],None
652,https://github.com/yousha806/ddcolab2020.git,2021-01-01 07:16:33+00:00,DDCO Lab files 2020,0,yousha806/ddcolab2020,325934589,Verilog,ddcolab2020,4322,0,2021-01-01 07:24:15+00:00,[],None
653,https://github.com/Shakiba-Bolbolian-Khah/ComputerArchitectureLab-ARM.git,2021-01-01 11:36:19+00:00,,0,Shakiba-Bolbolian-Khah/ComputerArchitectureLab-ARM,325967333,Verilog,ComputerArchitectureLab-ARM,129,0,2021-01-01 11:37:47+00:00,[],None
654,https://github.com/pwang7/rtl.git,2021-01-02 16:29:59+00:00,,0,pwang7/rtl,326223592,Verilog,rtl,2017,0,2021-10-17 09:24:31+00:00,[],https://api.github.com/licenses/mit
655,https://github.com/ionhedes/CA2020.git,2020-12-27 12:30:52+00:00,Repository containing code for my Computer Architecture Class,0,ionhedes/CA2020,324757360,Verilog,CA2020,89,0,2021-01-04 12:33:39+00:00,[],None
656,https://github.com/sdlas/CPU_exp.git,2021-01-04 10:16:35+00:00,,0,sdlas/CPU_exp,326644355,Verilog,CPU_exp,200,0,2021-01-04 14:21:17+00:00,[],None
657,https://github.com/VivianLiu108/final_project.git,2021-01-05 04:16:51+00:00,,1,VivianLiu108/final_project,326883903,Verilog,final_project,21092,0,2021-01-15 08:39:24+00:00,[],None
658,https://github.com/peanutlu/test.git,2020-12-30 13:10:59+00:00,work descrip,0,peanutlu/test,325554008,Verilog,test,3,0,2020-12-30 13:41:52+00:00,[],None
659,https://github.com/stevefielding/spiMon.git,2020-12-31 22:07:33+00:00,,0,stevefielding/spiMon,325880100,Verilog,spiMon,1106,0,2021-01-21 17:16:44+00:00,[],None
660,https://github.com/ismaelg-avilag/Full-Adder.git,2021-01-03 05:49:51+00:00,Sumador completo en lenguaje Verilog.,0,ismaelg-avilag/Full-Adder,326337700,Verilog,Full-Adder,113,0,2021-01-06 05:39:24+00:00,[],None
661,https://github.com/Sarthakchandra/MealyFSM.git,2020-12-24 10:18:44+00:00,"In this Lab, we will look into how to implement Mealy FSM using Verilog. As an example, we will be designing a 11011 sequence detector with an overlap.",0,Sarthakchandra/MealyFSM,324127845,Verilog,MealyFSM,927,0,2021-12-17 10:32:19+00:00,[],None
662,https://github.com/Pedro-Rella/KNN_copy2.git,2020-12-29 17:47:37+00:00,,0,Pedro-Rella/KNN_copy2,325351207,Verilog,KNN_copy2,171,0,2020-12-30 04:23:10+00:00,[],None
663,https://github.com/D3r3k23/VGA-Console.git,2020-12-30 02:07:18+00:00,Console text system for VGA displays,0,D3r3k23/VGA-Console,325431147,Verilog,VGA-Console,15492,0,2023-10-12 12:47:03+00:00,"['fpga', 'zynq']",https://api.github.com/licenses/mit
664,https://github.com/XiaoLing12138/Computer_Organization_Project_Traffic_Lights.git,2020-12-23 06:40:48+00:00,Computer Organization Project Traffic Lights,0,XiaoLing12138/Computer_Organization_Project_Traffic_Lights,323824072,Verilog,Computer_Organization_Project_Traffic_Lights,2012,0,2020-12-23 07:22:21+00:00,[],https://api.github.com/licenses/mit
665,https://github.com/woorim1022/verilog-assignment.git,2021-01-07 15:27:51+00:00,,0,woorim1022/verilog-assignment,327651037,Verilog,verilog-assignment,6,0,2021-07-21 02:18:56+00:00,[],None
666,https://github.com/anupamhassapurty/Mtech-Project.git,2021-01-11 14:00:58+00:00,Contains various code snippets in VLSI Design,0,anupamhassapurty/Mtech-Project,328681857,Verilog,Mtech-Project,3535,0,2023-09-07 01:46:34+00:00,[],None
667,https://github.com/mfkiwl/hdmi-vpu-card.git,2020-12-29 19:13:43+00:00,hdmi-vpu-card FPGA project folder,0,mfkiwl/hdmi-vpu-card,325367663,,hdmi-vpu-card,34699,0,2024-01-02 11:54:58+00:00,[],None
668,https://github.com/AdityaNG/BasicModules.git,2021-01-12 09:18:19+00:00,"A vPackage of many basic modules like Muxes, Flip-Flops, Latches, FAs, HAs",0,AdityaNG/BasicModules,328932479,Verilog,BasicModules,30,0,2021-01-15 13:20:04+00:00,[],None
669,https://github.com/UT0903/CA_hw4.git,2020-12-20 01:49:28+00:00,,0,UT0903/CA_hw4,322973496,Verilog,CA_hw4,966,0,2021-02-21 03:55:30+00:00,[],None
670,https://github.com/vmazashvili/performance-optimisation-.git,2020-12-22 17:07:43+00:00,,0,vmazashvili/performance-optimisation-,323686809,Verilog,performance-optimisation-,5,0,2020-12-22 17:09:38+00:00,[],None
671,https://github.com/alirezasalamat/neural_network.git,2020-12-21 18:16:42+00:00,neural network using velrilogHDL,0,alirezasalamat/neural_network,323414523,Verilog,neural_network,205,0,2020-12-24 16:53:03+00:00,[],None
672,https://github.com/ucasdong/huake.git,2020-12-22 13:32:23+00:00,,1,ucasdong/huake,323634652,Verilog,huake,3447,0,2021-01-13 14:46:49+00:00,[],None
673,https://github.com/Erfank96/fulladder-verilog.git,2020-12-25 00:28:50+00:00,,0,Erfank96/fulladder-verilog,324258290,Verilog,fulladder-verilog,9,0,2023-05-15 08:02:44+00:00,[],None
674,https://github.com/ltf0501/Computer-Architecture-2020-Project-2.git,2020-12-22 04:05:52+00:00,,0,ltf0501/Computer-Architecture-2020-Project-2,323516841,Verilog,Computer-Architecture-2020-Project-2,1731,0,2021-05-31 07:51:08+00:00,[],None
675,https://github.com/Saiprem98/ECE154A_Lab_4.git,2020-12-20 01:22:27+00:00,,0,Saiprem98/ECE154A_Lab_4,322970401,Verilog,ECE154A_Lab_4,2598,0,2020-12-20 01:23:47+00:00,[],None
676,https://github.com/SophoWang/verilog-example.git,2020-12-20 11:12:42+00:00,,0,SophoWang/verilog-example,323053153,Verilog,verilog-example,3,0,2021-01-09 16:18:32+00:00,[],None
677,https://github.com/omar-sabry/8-bit_multiplier.git,2020-12-18 13:49:46+00:00,,0,omar-sabry/8-bit_multiplier,322608230,Verilog,8-bit_multiplier,31,0,2020-12-19 06:20:32+00:00,[],None
678,https://github.com/lxu28973/riscv--verilog.git,2020-12-19 03:15:46+00:00,RISC-V RV32I cpu simple design,0,lxu28973/riscv--verilog,322756376,Verilog,riscv--verilog,1403,0,2020-12-19 08:41:01+00:00,[],None
679,https://github.com/priyakatt/FPGA_L-Systems.git,2020-12-22 00:19:07+00:00,Final Project for ECE 5760 (Advanced Microcontrollers) at Cornell University,0,priyakatt/FPGA_L-Systems,323478404,Verilog,FPGA_L-Systems,133352,0,2020-12-22 01:35:55+00:00,[],None
680,https://github.com/shixingsun/cpciip.git,2020-12-29 09:36:20+00:00,changes history log,0,shixingsun/cpciip,325245324,Verilog,cpciip,8,0,2020-12-29 09:43:13+00:00,[],None
681,https://github.com/pgimenes/F1_controller.git,2020-12-29 10:26:51+00:00,University project on F1 race countdown,0,pgimenes/F1_controller,325255919,Verilog,F1_controller,63,0,2020-12-29 10:43:06+00:00,[],None
682,https://github.com/acarideo/Sprite-Project.git,2020-12-17 02:44:47+00:00,,0,acarideo/Sprite-Project,322160414,Verilog,Sprite-Project,37549,0,2020-12-17 19:50:03+00:00,[],None
683,https://github.com/Yikai-coder/digit_exp.git,2020-12-15 12:46:12+00:00,哈尔滨工业大学（深圳）2019级数字逻辑设计,0,Yikai-coder/digit_exp,321665450,Verilog,digit_exp,190,0,2021-12-16 02:16:09+00:00,[],None
684,https://github.com/ArijitS94/Digital_ASIC_Design.git,2020-12-16 02:53:32+00:00,,0,ArijitS94/Digital_ASIC_Design,321850283,Verilog,Digital_ASIC_Design,5107,0,2021-03-14 23:30:42+00:00,[],None
685,https://github.com/dviracachas/ProyectoDigitalII.git,2020-12-15 15:25:16+00:00,,0,dviracachas/ProyectoDigitalII,321708254,Verilog,ProyectoDigitalII,34641,0,2021-03-10 04:04:47+00:00,[],None
686,https://github.com/NakamuraShinou/Floating-point-arithmetic-unit-old-.git,2021-01-05 07:29:00+00:00,all about logic design,0,NakamuraShinou/Floating-point-arithmetic-unit-old-,326920972,Verilog,Floating-point-arithmetic-unit-old-,13,0,2021-01-05 07:44:20+00:00,[],None
687,https://github.com/NakamuraShinou/RISC-V-5-stage-pipeline.git,2021-01-05 08:10:15+00:00,IP of RISC-V with 5-stage pipeline,0,NakamuraShinou/RISC-V-5-stage-pipeline,326930370,Verilog,RISC-V-5-stage-pipeline,84,0,2021-01-05 08:22:57+00:00,[],None
688,https://github.com/Na-moe/Mips-System.git,2021-01-10 09:08:15+00:00,A basic Mips system supporting exception interrupt.,0,Na-moe/Mips-System,328342884,Verilog,Mips-System,21,0,2021-01-10 09:10:40+00:00,[],None
689,https://github.com/BarrinXu/RISC-V_CPU-Computer_System-2020.git,2021-01-02 03:10:46+00:00,,0,BarrinXu/RISC-V_CPU-Computer_System-2020,326098748,Verilog,RISC-V_CPU-Computer_System-2020,310,0,2021-01-02 03:14:16+00:00,[],None
690,https://github.com/kunalvarshney04/comparch.git,2021-01-03 06:48:30+00:00,,0,kunalvarshney04/comparch,326346149,Verilog,comparch,648,0,2021-01-03 14:34:04+00:00,[],None
691,https://github.com/Heezzul/Study_VerilogHDL.git,2021-01-03 05:41:00+00:00,,0,Heezzul/Study_VerilogHDL,326336470,Verilog,Study_VerilogHDL,35,0,2021-02-01 16:23:37+00:00,[],None
692,https://github.com/AGC-stuff/agc_simulation.git,2021-01-03 20:49:59+00:00,,0,AGC-stuff/agc_simulation,326498172,Verilog,agc_simulation,4018,0,2021-01-03 20:56:07+00:00,[],https://api.github.com/licenses/mit
693,https://github.com/marymarkart/ComputerArchitecture.git,2021-01-13 00:23:11+00:00,,0,marymarkart/ComputerArchitecture,329148345,Verilog,ComputerArchitecture,322,0,2021-01-13 00:29:57+00:00,[],None
694,https://github.com/kuoyaoming93/picorv32_galois_field.git,2021-01-13 08:55:28+00:00,PicoRV32 Galois Field submodule,0,kuoyaoming93/picorv32_galois_field,329248104,Verilog,picorv32_galois_field,35,0,2022-07-22 13:05:15+00:00,[],None
695,https://github.com/Tatev2919/BIST.git,2021-01-11 13:48:59+00:00,,0,Tatev2919/BIST,328678390,Verilog,BIST,13,0,2022-02-22 17:09:04+00:00,[],None
696,https://github.com/HakimBadawy/RISCV-32bit-simulator.git,2021-01-11 18:34:09+00:00,,0,HakimBadawy/RISCV-32bit-simulator,328757487,Verilog,RISCV-32bit-simulator,25,0,2021-01-11 18:38:38+00:00,[],None
697,https://github.com/jimpaolin/logic-design-final-project.git,2021-01-14 16:22:19+00:00,,0,jimpaolin/logic-design-final-project,329670066,Verilog,logic-design-final-project,6,0,2021-01-15 04:28:30+00:00,[],None
698,https://github.com/endowp/Calculator-Basys3.git,2021-01-14 03:39:02+00:00,"Basic calculator system implemented on Basys 3, using Verilog.",0,endowp/Calculator-Basys3,329498766,Verilog,Calculator-Basys3,1744,0,2021-01-20 13:04:06+00:00,[],None
699,https://github.com/MrBean2806/Proyecto-Final-TD1.git,2021-01-19 19:09:38+00:00,,0,MrBean2806/Proyecto-Final-TD1,331082485,Verilog,Proyecto-Final-TD1,9276,0,2021-03-09 21:46:02+00:00,[],None
700,https://github.com/yih108321040/FPGA_17_finalProject.git,2021-01-15 05:06:38+00:00,,0,yih108321040/FPGA_17_finalProject,329814255,Verilog,FPGA_17_finalProject,8,0,2021-01-15 08:06:58+00:00,[],None
701,https://github.com/ptenkale123/FPGA-Intent-Classification.git,2021-01-15 10:04:59+00:00,,0,ptenkale123/FPGA-Intent-Classification,329874965,Verilog,FPGA-Intent-Classification,72594,0,2021-01-27 11:00:20+00:00,[],None
702,https://github.com/iamkarthikbk/vtr-quickstart.git,2021-01-04 16:01:04+00:00,,0,iamkarthikbk/vtr-quickstart,326735521,Verilog,vtr-quickstart,264,0,2021-01-04 16:35:38+00:00,[],None
703,https://github.com/snsd0805/FPGA_FINAL.git,2021-01-09 02:50:59+00:00,,1,snsd0805/FPGA_FINAL,328060792,Verilog,FPGA_FINAL,14181,0,2021-01-15 05:54:03+00:00,[],None
704,https://github.com/rahmant3/polymath-iot.git,2021-01-03 23:29:52+00:00,Source code and hardware design files for the Polymath IoT Sensor. Refer to the Readme.md for usage.,0,rahmant3/polymath-iot,326521284,Verilog,polymath-iot,34110,0,2021-05-31 04:14:58+00:00,[],https://api.github.com/licenses/mit
705,https://github.com/dhruvdhawan97/Traffic-Light-System---FPGA-.git,2021-01-04 03:00:21+00:00,This project was  a school project. I made a state machine and made a traffic light system on a FPGA board using verilog,0,dhruvdhawan97/Traffic-Light-System---FPGA-,326554107,Verilog,Traffic-Light-System---FPGA-,9,0,2023-02-16 13:01:59+00:00,[],None
706,https://github.com/LinasEin/FIR_HLS.git,2021-01-06 13:51:01+00:00,,0,LinasEin/FIR_HLS,327325929,Verilog,FIR_HLS,615,0,2021-01-08 17:44:43+00:00,[],None
707,https://github.com/JonasVannieuwenhuijsen/RiscV_final_project.git,2021-01-02 16:47:58+00:00,,0,JonasVannieuwenhuijsen/RiscV_final_project,326227283,Verilog,RiscV_final_project,220358,0,2021-01-16 12:38:44+00:00,[],None
708,https://github.com/chengyanwu/SLAB_Mousecam.git,2021-01-05 00:23:59+00:00,,0,chengyanwu/SLAB_Mousecam,326841405,Verilog,SLAB_Mousecam,90364,0,2021-05-15 18:21:14+00:00,[],None
709,https://github.com/takaNS/HAEC.git,2020-12-31 16:05:50+00:00,,0,takaNS/HAEC,325832508,Verilog,HAEC,102,0,2022-02-17 17:18:24+00:00,[],None
710,https://github.com/braingram/icestick_ili9341_tft.git,2020-12-31 02:23:29+00:00,Basic verilog code to run a ili9341 tft display using the parallel interface,2,braingram/icestick_ili9341_tft,325693570,Verilog,icestick_ili9341_tft,8,0,2020-12-31 02:44:58+00:00,[],None
711,https://github.com/alvn530/MotionEstimator.git,2020-12-30 00:38:06+00:00,ASIC Implementation of Motion Estimator,0,alvn530/MotionEstimator,325417621,Verilog,MotionEstimator,28562,0,2020-12-30 22:41:32+00:00,[],https://api.github.com/licenses/mit
712,https://github.com/NithinTM29/verilog-.git,2021-01-15 06:29:15+00:00,verilog program for all basic logics,0,NithinTM29/verilog-,329828238,Verilog,verilog-,1952,0,2021-01-15 06:35:39+00:00,[],None
713,https://github.com/serhaterdogan77/FBU-CPU-RTL-TASARIM.git,2021-01-14 19:19:53+00:00,,0,serhaterdogan77/FBU-CPU-RTL-TASARIM,329712357,Verilog,FBU-CPU-RTL-TASARIM,3204,0,2021-01-15 13:45:21+00:00,[],None
714,https://github.com/phaneeshwar/N-Channel-8-bit-Servo-Controller.git,2021-01-15 15:10:27+00:00,,0,phaneeshwar/N-Channel-8-bit-Servo-Controller,329945476,Verilog,N-Channel-8-bit-Servo-Controller,922,0,2021-06-04 17:38:17+00:00,[],None
715,https://github.com/mshahshah/dnn_hardware_accelerator.git,2021-01-11 15:42:28+00:00,,0,mshahshah/dnn_hardware_accelerator,328712074,Verilog,dnn_hardware_accelerator,25,0,2021-01-11 15:47:24+00:00,[],None
716,https://github.com/107321054/project.git,2021-01-12 10:03:43+00:00,,0,107321054/project,328944370,Verilog,project,7446,0,2021-01-12 11:11:32+00:00,[],None
717,https://github.com/hust-gaoyujing/simv.git,2021-01-12 09:51:35+00:00,,0,hust-gaoyujing/simv,328941184,Verilog,simv,183,0,2021-01-13 10:15:17+00:00,[],None
718,https://github.com/tada-tadaima/Final-project-demo-.git,2021-01-12 14:23:25+00:00,,0,tada-tadaima/Final-project-demo-,329010873,Verilog,Final-project-demo-,13903,0,2021-01-15 00:38:38+00:00,[],None
719,https://github.com/fz11/Vending-Machine.git,2021-01-09 23:22:56+00:00,VLSI Project,0,fz11/Vending-Machine,328265352,Verilog,Vending-Machine,4567,0,2021-05-22 06:14:33+00:00,[],None
720,https://github.com/fz11/Square-Game.git,2021-01-10 00:28:06+00:00,EE3564,0,fz11/Square-Game,328273019,Verilog,Square-Game,2232,0,2021-05-22 06:06:49+00:00,[],None
721,https://github.com/JimZeyuYang/Echo-Synthesizer-with-Variable-Delay.git,2021-01-16 22:52:27+00:00,,0,JimZeyuYang/Echo-Synthesizer-with-Variable-Delay,330273289,Verilog,Echo-Synthesizer-with-Variable-Delay,14,0,2021-01-17 18:16:23+00:00,[],None
722,https://github.com/simon-staal/Information_Processing_Lab.git,2021-01-18 17:29:58+00:00,Contains all the work done as part of the Information Processing Labs (Year 2 Term 2),0,simon-staal/Information_Processing_Lab,330739719,Verilog,Information_Processing_Lab,17288,0,2021-02-16 17:45:53+00:00,[],None
723,https://github.com/lourensjvr/EPR400-FinalYearProject.git,2020-12-26 15:00:54+00:00,"A system was developed and implemented on FPGA, that allows a physical replica of ""Pong"" to be played against a robot. The system allows a player to control the movement of the player paddle and trigger the actuation of the paddle. The system uses input from a camera to estimate the trajectory of a player hit ball, and through a control system position the robot paddle, that is actuated by another control system, to hit the ball back in the player's direction. The speed at which the user and robot paddle is actuated at will increase slowly until a goal is scored. The system detects when a goal is scored by a player or the robot and keeps track of scoring.",0,lourensjvr/EPR400-FinalYearProject,324577592,Verilog,EPR400-FinalYearProject,5296,0,2020-12-26 15:38:57+00:00,[],None
724,https://github.com/laulin/apio-icefun-example.git,2020-12-28 11:02:00+00:00,Blink example with APIO on icefunboard,0,laulin/apio-icefun-example,324988298,Verilog,apio-icefun-example,16,0,2020-12-28 17:22:22+00:00,[],https://api.github.com/licenses/gpl-3.0
725,https://github.com/md1284/single-cycle-processor.git,2020-12-23 09:38:05+00:00,,0,md1284/single-cycle-processor,323861211,Verilog,single-cycle-processor,12030,0,2021-04-12 14:52:16+00:00,[],None
726,https://github.com/ETCHKILI/vendingMachine.git,2020-12-21 08:43:50+00:00,"FPGA vending machine, on the xilinx board",0,ETCHKILI/vendingMachine,323278548,Verilog,vendingMachine,224,0,2021-03-05 05:36:48+00:00,[],None
727,https://github.com/swaroopj10/Verilog-Programs.git,2020-12-19 04:22:53+00:00,,0,swaroopj10/Verilog-Programs,322765420,Verilog,Verilog-Programs,1065,0,2020-12-19 09:58:34+00:00,[],None
728,https://github.com/RecursiveG/de0nano_skeleton.git,2021-01-03 21:06:08+00:00,Quartus project template for the DE0-Nano FPGA board.,0,RecursiveG/de0nano_skeleton,326500655,Verilog,de0nano_skeleton,2,0,2021-01-03 21:08:31+00:00,[],None
729,https://github.com/ov37/ECE5760_FINAL.git,2020-12-20 17:43:49+00:00,,0,ov37/ECE5760_FINAL,323130051,Verilog,ECE5760_FINAL,4424,0,2020-12-22 00:14:08+00:00,[],None
730,https://github.com/mabubbakar365/ADC_LTC232016HUKG.git,2020-12-20 18:51:14+00:00,,0,mabubbakar365/ADC_LTC232016HUKG,323142706,Verilog,ADC_LTC232016HUKG,1,0,2020-12-20 18:53:35+00:00,[],None
731,https://github.com/GerardoVielma/8BitUpDownCounter.git,2020-12-20 21:38:34+00:00,,0,GerardoVielma/8BitUpDownCounter,323169821,Verilog,8BitUpDownCounter,8,0,2020-12-20 22:04:13+00:00,[],None
732,https://github.com/ATSP5/EngineerSoftCPU.git,2020-12-19 09:41:13+00:00,,0,ATSP5/EngineerSoftCPU,322813292,Verilog,EngineerSoftCPU,70323,0,2021-03-06 22:39:04+00:00,[],None
733,https://github.com/karan18205/VerilogGettingStarted.git,2020-12-20 12:44:27+00:00,"Programs that can be used to brush up your Verilog Skills, As I need to every time. And for beginner students that want to dive in the world of electronics. This would be your first step.",0,karan18205/VerilogGettingStarted,323069517,Verilog,VerilogGettingStarted,16,0,2020-12-20 12:52:29+00:00,[],None
734,https://github.com/kingyaaa/MD5.git,2020-12-19 05:16:02+00:00,,0,kingyaaa/MD5,322772512,Verilog,MD5,51,0,2020-12-23 11:33:06+00:00,[],None
735,https://github.com/viki22052/Verilog_Exercises.git,2020-12-17 16:00:21+00:00,Verilog Exercises,0,viki22052/Verilog_Exercises,322344162,Verilog,Verilog_Exercises,7888,0,2021-04-21 13:51:41+00:00,[],None
736,https://github.com/danielalvar11/open-fpga-verilog-tutorial.git,2020-12-17 16:30:19+00:00,Learn how to design digital systems and synthesize them into an FPGA using only opensource tools,0,danielalvar11/open-fpga-verilog-tutorial,322351657,,open-fpga-verilog-tutorial,38367,0,2021-09-10 12:57:38+00:00,[],https://api.github.com/licenses/gpl-2.0
737,https://github.com/dakshinamurthy13/LD_tutorial_codes.git,2020-12-18 05:42:06+00:00,,0,dakshinamurthy13/LD_tutorial_codes,322500360,Verilog,LD_tutorial_codes,6,0,2020-12-18 05:43:46+00:00,[],None
738,https://github.com/hdubey-debug/Gaming-console-using-DE-10-FPGA.git,2020-12-17 00:32:48+00:00,,0,hdubey-debug/Gaming-console-using-DE-10-FPGA,322136900,Verilog,Gaming-console-using-DE-10-FPGA,31,0,2021-01-27 18:07:45+00:00,[],https://api.github.com/licenses/gpl-3.0
739,https://github.com/yenmeng/IC_Design.git,2021-01-18 12:30:12+00:00,,0,yenmeng/IC_Design,330659655,Verilog,IC_Design,2181,0,2021-01-18 12:38:40+00:00,[],None
740,https://github.com/DaniyaalAhmed/ALUproject.git,2021-01-14 03:31:23+00:00,Arithmetic logic unit created in Verilog for FPGA: XILINX Nexy A7 100T,0,DaniyaalAhmed/ALUproject,329497432,Verilog,ALUproject,18,0,2023-01-04 22:46:39+00:00,[],None
741,https://github.com/sahuvinay339/Router-1-3-.git,2021-01-10 17:22:53+00:00,,0,sahuvinay339/Router-1-3-,328438561,Verilog,Router-1-3-,4,0,2021-01-10 17:26:24+00:00,[],None
742,https://github.com/Nimausfi/Arithmetic_Logic_Unit_Verilog.git,2020-12-26 16:57:38+00:00,,0,Nimausfi/Arithmetic_Logic_Unit_Verilog,324598362,Verilog,Arithmetic_Logic_Unit_Verilog,114,0,2021-03-02 18:09:11+00:00,[],None
743,https://github.com/Bruhath10/MIPS-processor-Implementation.git,2020-12-23 08:02:16+00:00,,0,Bruhath10/MIPS-processor-Implementation,323840376,Verilog,MIPS-processor-Implementation,17,0,2020-12-23 09:36:33+00:00,[],None
744,https://github.com/jerry20091103/Final-Project.git,2020-12-29 08:02:51+00:00,A final project for the Logic Design Lab.,1,jerry20091103/Final-Project,325224519,Verilog,Final-Project,28029,0,2021-01-15 20:07:33+00:00,[],None
745,https://github.com/Yu62229/Logic_Design_Lab_Final_Project.git,2021-01-06 08:42:30+00:00,NTHU Logic Design Laboratory Final Project with Chen yu,0,Yu62229/Logic_Design_Lab_Final_Project,327251249,,Logic_Design_Lab_Final_Project,3173,0,2021-01-06 08:42:31+00:00,[],None
746,https://github.com/HanweiLi-cqu/HardWareDesign.git,2021-01-07 10:47:41+00:00,硬件综合,0,HanweiLi-cqu/HardWareDesign,327582369,Verilog,HardWareDesign,44,0,2024-03-31 06:20:27+00:00,[],None
747,https://github.com/MrThanlon/project_chess_clock.git,2020-12-29 05:23:59+00:00,数字实验期末设计 棋钟,0,MrThanlon/project_chess_clock,325193897,Verilog,project_chess_clock,5,0,2020-12-29 05:24:33+00:00,[],None
748,https://github.com/atomsi7/Arch_Lab_4.git,2020-12-29 07:03:55+00:00,,0,atomsi7/Arch_Lab_4,325212238,Verilog,Arch_Lab_4,14,0,2021-01-08 01:12:51+00:00,[],None
749,https://github.com/llx-08/hardwareSynthesisDesign.git,2020-12-28 10:47:33+00:00,CQU 小学期硬综设计,0,llx-08/hardwareSynthesisDesign,324985165,Verilog,hardwareSynthesisDesign,39528,0,2022-08-31 09:57:31+00:00,[],None
750,https://github.com/VasilyMarkov/Test_counter.git,2020-12-22 10:56:58+00:00,,0,VasilyMarkov/Test_counter,323599796,Verilog,Test_counter,1,0,2020-12-22 11:00:34+00:00,[],None
751,https://github.com/wa1575/Verilog.git,2020-12-25 03:28:02+00:00,verilog_code,0,wa1575/Verilog,324279926,Verilog,Verilog,18,0,2020-12-25 03:29:37+00:00,[],None
752,https://github.com/moeinsh78/MIPS-processor.git,2020-12-25 18:49:33+00:00,"Designed MIPS processor using VerilogHDL language with 3 different approaches: Single-cycle, Multi-cycle and Pipeline",0,moeinsh78/MIPS-processor,324416168,Verilog,MIPS-processor,17,0,2022-09-28 06:35:45+00:00,[],None
753,https://github.com/TienYaoHsu/LED_Blink.git,2020-12-22 06:32:50+00:00,,0,TienYaoHsu/LED_Blink,323542406,Verilog,LED_Blink,2,0,2020-12-22 06:34:49+00:00,[],None
754,https://github.com/hshmatsahak/ECE253.git,2020-12-23 06:16:55+00:00,Some more brick labs,0,hshmatsahak/ECE253,323819537,Verilog,ECE253,38,0,2020-12-23 22:48:38+00:00,[],None
755,https://github.com/eyvazemil/Verilog_MIPS.git,2020-12-26 19:20:44+00:00,,0,eyvazemil/Verilog_MIPS,324620433,Verilog,Verilog_MIPS,22,0,2020-12-26 19:21:39+00:00,[],None
756,https://github.com/jlhsmall/hw_cpu.git,2020-12-27 13:15:02+00:00,,0,jlhsmall/hw_cpu,324765146,Verilog,hw_cpu,105,0,2021-02-01 11:52:16+00:00,[],None
757,https://github.com/bbshangs/CA_project2.git,2020-12-28 05:26:07+00:00,Pipelined CPU + L1 Data Cache,0,bbshangs/CA_project2,324919695,Verilog,CA_project2,406,0,2021-10-18 13:43:13+00:00,[],None
758,https://github.com/MistyMountain1024/HardWareProject_2020-2021.git,2021-01-02 07:28:47+00:00,,0,MistyMountain1024/HardWareProject_2020-2021,326131852,Verilog,HardWareProject_2020-2021,42822,0,2021-01-04 07:46:26+00:00,[],None
759,https://github.com/adam-shanta/SignalSynthesizer.git,2021-01-04 01:28:34+00:00,,0,adam-shanta/SignalSynthesizer,326537674,Verilog,SignalSynthesizer,311,0,2021-01-04 01:36:25+00:00,[],None
760,https://github.com/hi7/TinyFPGA-BX-SPI.git,2021-01-03 22:17:25+00:00,Serial Peripheral Interface for TinyFPGA-BX,0,hi7/TinyFPGA-BX-SPI,326511291,Verilog,TinyFPGA-BX-SPI,4,0,2021-01-04 17:00:23+00:00,[],None
761,https://github.com/aroshanineshat/Icebreaker_buzzer_interface.git,2020-12-30 08:49:23+00:00,I played jingle bells with my icebreaker-fpga. This is the code. ,0,aroshanineshat/Icebreaker_buzzer_interface,325500959,Verilog,Icebreaker_buzzer_interface,4,0,2020-12-30 08:50:58+00:00,[],None
762,https://github.com/littleExamTeam/CodeOnly.git,2021-01-01 11:02:49+00:00,,0,littleExamTeam/CodeOnly,325962554,Verilog,CodeOnly,44,0,2021-01-09 01:59:57+00:00,[],None
763,https://github.com/AmalPrabhashwara/Binary-guessing-system.git,2020-12-17 07:50:10+00:00,,0,AmalPrabhashwara/Binary-guessing-system,322220248,Verilog,Binary-guessing-system,10,0,2020-12-17 09:36:35+00:00,[],None
764,https://github.com/LYRbbding/taximeter.git,2020-12-16 10:53:50+00:00,简易出租车计价器,0,LYRbbding/taximeter,321953010,Verilog,taximeter,3475,0,2020-12-18 02:02:39+00:00,[],None
765,https://github.com/blair3sat/limesdr-pcie_xillybus_core.git,2020-12-20 21:27:03+00:00,,0,blair3sat/limesdr-pcie_xillybus_core,323168064,Verilog,limesdr-pcie_xillybus_core,1593,0,2021-01-14 17:16:48+00:00,[],None
766,https://github.com/zizimumu/fpga_lcd_resize.git,2020-12-20 23:36:49+00:00,,0,zizimumu/fpga_lcd_resize,323186409,Verilog,fpga_lcd_resize,55,0,2021-01-21 06:30:15+00:00,[],None
767,https://github.com/18520424/MIPS.git,2020-12-21 08:10:08+00:00,This is MIPS,0,18520424/MIPS,323270960,Verilog,MIPS,3519,0,2020-12-21 08:24:29+00:00,[],None
768,https://github.com/keh034/Basic-Processor-in-Verilog.git,2020-12-20 05:03:35+00:00,,0,keh034/Basic-Processor-in-Verilog,322997217,Verilog,Basic-Processor-in-Verilog,18,0,2021-01-19 01:02:41+00:00,[],None
769,https://github.com/phaneeshwar/State-Machine-based-Digital-Lock.git,2021-01-15 15:38:29+00:00,,0,phaneeshwar/State-Machine-based-Digital-Lock,329952518,Verilog,State-Machine-based-Digital-Lock,456,0,2021-06-04 17:38:19+00:00,[],None
770,https://github.com/chofinn/tetris-on-FPGA.git,2021-01-15 06:21:03+00:00,,0,chofinn/tetris-on-FPGA,329826691,Verilog,tetris-on-FPGA,12,0,2021-01-15 08:35:32+00:00,[],None
771,https://github.com/WinterGreen17/MiniPipelinedCPU.git,2021-01-11 04:03:58+00:00,,0,WinterGreen17/MiniPipelinedCPU,328544407,Verilog,MiniPipelinedCPU,9,0,2021-01-11 04:14:59+00:00,[],None
772,https://github.com/williamtien23/FPGA-DE10_LITE-PRNG_LFSR.git,2021-01-11 22:54:52+00:00,A Pseudo Random Number Generator Using a Linear Feedback Shift Register Implementation,1,williamtien23/FPGA-DE10_LITE-PRNG_LFSR,328812257,Verilog,FPGA-DE10_LITE-PRNG_LFSR,5,0,2021-01-11 22:57:13+00:00,[],None
773,https://github.com/dyddnekt1/MIPS-CPU.git,2021-01-12 11:08:53+00:00,MIPS CPU with pipelining,0,dyddnekt1/MIPS-CPU,328960577,Verilog,MIPS-CPU,5,0,2021-01-12 11:09:28+00:00,[],None
774,https://github.com/vrbprog/Key-Leds.git,2021-01-16 09:39:24+00:00,,0,vrbprog/Key-Leds,330129111,Verilog,Key-Leds,5,0,2021-01-16 09:39:33+00:00,[],None
775,https://github.com/ocebenzer/BU2020.git,2021-01-16 10:08:42+00:00,cmpe344.02 BU2020 Project,0,ocebenzer/BU2020,330133810,Verilog,BU2020,1057,0,2023-01-28 10:29:25+00:00,[],https://api.github.com/licenses/mit
776,https://github.com/JuliaLWang8/Verilog.git,2020-12-16 00:58:29+00:00,My Verilog labs from Digital and Computer Systems course (ECE253),0,JuliaLWang8/Verilog,321828781,Verilog,Verilog,42,0,2020-12-27 02:53:50+00:00,[],None
777,https://github.com/akissu/arty-a7-blinky.git,2020-12-15 23:09:06+00:00,Blinky using one 31-bit circular shift register,0,akissu/arty-a7-blinky,321811391,Verilog,arty-a7-blinky,5,0,2020-12-15 23:10:11+00:00,[],None
778,https://github.com/SHEELE41/VerilogHDL-Digital-Clock.git,2020-12-29 23:57:13+00:00,2020 Electrical & Computer Design LaboratoryⅡ Term Project,0,SHEELE41/VerilogHDL-Digital-Clock,325412089,Verilog,VerilogHDL-Digital-Clock,6,0,2020-12-29 23:58:12+00:00,[],None
779,https://github.com/nPeeech/TD44TANGPriMER.git,2021-01-10 02:06:31+00:00,作ろう!CPU版のTD4をTANG PriMERで動かしたものです,0,nPeeech/TD44TANGPriMER,328284946,Verilog,TD44TANGPriMER,38336,0,2021-01-10 04:22:16+00:00,[],https://api.github.com/licenses/mit
780,https://github.com/aryanxoxo/portfolio-.git,2021-01-12 07:16:04+00:00,This is Aryan's portfolio,0,aryanxoxo/portfolio-,328903498,Verilog,portfolio-,56466,0,2022-10-19 22:57:45+00:00,[],None
781,https://github.com/Dustinnvn/UART.git,2021-01-12 07:03:14+00:00,The Universal Asynchronous Receiver and Transmitter is a project that utilizes the a microprocessor and the Tramelblaze engine to process assembly code instructions. It is able to send and receivie data as well as baud rate and parity bit control.,0,Dustinnvn/UART,328900702,Verilog,UART,3698,0,2021-04-06 08:18:39+00:00,[],None
782,https://github.com/coronadocx/ECE-411.git,2021-01-08 22:49:12+00:00,,0,coronadocx/ECE-411,328029193,Verilog,ECE-411,300,0,2021-01-09 03:45:09+00:00,[],None
783,https://github.com/littleExamTeam/AXI.git,2021-01-05 02:36:56+00:00,,0,littleExamTeam/AXI,326865484,Verilog,AXI,52,0,2021-01-09 02:01:02+00:00,[],None
784,https://github.com/rockcaensor/Analyzer_v2.git,2021-01-14 17:42:09+00:00,,0,rockcaensor/Analyzer_v2,329690279,Verilog,Analyzer_v2,6,0,2021-02-12 17:13:55+00:00,[],None
785,https://github.com/Zavxoz/Cryptography.git,2021-01-14 20:04:49+00:00,,0,Zavxoz/Cryptography,329721783,Verilog,Cryptography,431,0,2021-01-15 15:17:18+00:00,[],None
786,https://github.com/wanlingliao/Logical-Designed_Group7.git,2021-01-14 14:39:55+00:00,Final Project for Verilog with FPGA,0,wanlingliao/Logical-Designed_Group7,329642585,Verilog,Logical-Designed_Group7,11092,0,2021-01-15 06:55:45+00:00,[],None
787,https://github.com/scott306lr/NYCU_Computer_Organization.git,2021-01-17 17:07:12+00:00,,0,scott306lr/NYCU_Computer_Organization,330442947,Verilog,NYCU_Computer_Organization,21426,0,2021-05-27 07:32:21+00:00,[],https://api.github.com/licenses/mit
788,https://github.com/areezvisram/Verilog-Combo-Lock-FSM.git,2021-01-17 19:34:55+00:00,A Moore Finite State Machine that implements the functionality of a combination lock. Designed in Verilog.,0,areezvisram/Verilog-Combo-Lock-FSM,330470890,Verilog,Verilog-Combo-Lock-FSM,8081,0,2021-04-05 23:36:15+00:00,[],None
789,https://github.com/AdityaNG/ALU.git,2021-01-13 04:36:30+00:00,,0,AdityaNG/ALU,329194706,Verilog,ALU,24,0,2021-01-13 04:38:11+00:00,[],None
790,https://github.com/deva0310/LED-BLINKING.git,2021-01-04 17:33:14+00:00,,0,deva0310/LED-BLINKING,326759663,Verilog,LED-BLINKING,2,0,2021-01-04 18:12:12+00:00,[],None
791,https://github.com/Komalika-minkstas/MIPS32_processor.git,2021-01-17 09:19:16+00:00,,0,Komalika-minkstas/MIPS32_processor,330354119,Verilog,MIPS32_processor,3,0,2021-01-17 09:20:02+00:00,[],None
792,https://github.com/gabyLong/CS-M152A.git,2021-01-05 01:58:27+00:00,Work for UCLA CS M152A - Spring 2020,0,gabyLong/CS-M152A,326858221,Verilog,CS-M152A,35,0,2021-01-05 05:07:48+00:00,[],None
793,https://github.com/diamond2nv/Basys3Uart.git,2021-01-05 15:47:39+00:00,"A Verilog module, which can use UART port from the Basys 3 board to transmit bytes.",0,diamond2nv/Basys3Uart,327045107,,Basys3Uart,65,0,2021-02-06 17:26:36+00:00,[],None
794,https://github.com/zleggett/RISC-Z_CPU.git,2021-01-05 00:24:37+00:00,A CPU designed in Verilog to utilize the RISC-Z ISA,0,zleggett/RISC-Z_CPU,326841505,Verilog,RISC-Z_CPU,7719,0,2021-01-05 03:26:18+00:00,[],None
795,https://github.com/darpanchoudhary/RISC_MIPS32-Calculator.git,2021-01-06 19:47:55+00:00,MIPS32 BASED Pipelined processor design,0,darpanchoudhary/RISC_MIPS32-Calculator,327414372,Verilog,RISC_MIPS32-Calculator,28,0,2021-08-21 16:57:37+00:00,[],None
796,https://github.com/108062237/final.git,2021-01-06 19:13:53+00:00,,0,108062237/final,327407203,Verilog,final,1,0,2021-01-06 19:15:59+00:00,[],None
797,https://github.com/Yaduvanshi05Bhupendra/Verilog.git,2021-01-14 07:08:02+00:00,This repository is for Verilog. Practice is done on some basic concept of Verilog. Learned methods are applied to create the mini project.,0,Yaduvanshi05Bhupendra/Verilog,329535029,Verilog,Verilog,381,0,2021-05-02 15:04:41+00:00,[],None
798,https://github.com/samidhm/MIPS_Pipelined_Processor.git,2021-01-15 10:11:58+00:00,,0,samidhm/MIPS_Pipelined_Processor,329876566,Verilog,MIPS_Pipelined_Processor,25,0,2021-01-15 11:02:38+00:00,[],https://api.github.com/licenses/mit
799,https://github.com/AndreMerendeira/soc-sem.git,2021-01-15 11:44:04+00:00,,0,AndreMerendeira/soc-sem,329896531,Verilog,soc-sem,174192,0,2021-05-26 14:37:34+00:00,[],https://api.github.com/licenses/mit
800,https://github.com/caojason/Torch.git,2021-01-18 19:38:47+00:00,,0,caojason/Torch,330768768,Verilog,Torch,200402,0,2021-04-16 20:04:13+00:00,[],None
801,https://github.com/lubro-crypto/Verification.git,2020-12-18 12:48:22+00:00,,0,lubro-crypto/Verification,322593540,Verilog,Verification,13086,0,2020-12-19 00:03:46+00:00,[],None
802,https://github.com/LungHuiWu/Computer-Architecture-Final-2021.git,2021-01-02 06:54:05+00:00,,0,LungHuiWu/Computer-Architecture-Final-2021,326127118,Verilog,Computer-Architecture-Final-2021,287,0,2021-04-15 16:54:44+00:00,[],None
803,https://github.com/xyftw/PianoTile.git,2020-12-27 04:12:00+00:00,NCKU 2019 Digital System Final Project,0,xyftw/PianoTile,324684220,Verilog,PianoTile,11119,0,2023-06-13 05:01:43+00:00,[],None
804,https://github.com/asaljalilvand/RISC_CPU.git,2020-12-27 01:02:58+00:00,Simplified RISC CPU implementation via Verilog,0,asaljalilvand/RISC_CPU,324662691,Verilog,RISC_CPU,62,0,2020-12-28 15:02:31+00:00,[],None
805,https://github.com/vegaluisjose/reticle-regress.git,2021-01-02 17:35:28+00:00,,0,vegaluisjose/reticle-regress,326236488,Verilog,reticle-regress,42,0,2021-06-06 20:42:41+00:00,[],None
806,https://github.com/lhx6355/advance_timer.git,2020-12-25 14:32:55+00:00,,0,lhx6355/advance_timer,324378105,Verilog,advance_timer,22,0,2020-12-25 14:38:30+00:00,[],None
807,https://github.com/GhiathAjam/SPI_Interface.git,2020-12-24 11:32:05+00:00,Serial Peripheral Interface WIth Verilog,0,GhiathAjam/SPI_Interface,324141277,Verilog,SPI_Interface,93,0,2022-03-28 15:31:41+00:00,[],None
808,https://github.com/abisubramanya27/EE2003_Assgn.git,2020-12-26 05:05:12+00:00,contains my assignment submissions of EE2003 course in 2020,0,abisubramanya27/EE2003_Assgn,324485375,Verilog,EE2003_Assgn,112,0,2021-12-12 08:01:45+00:00,"['riscv', 'verilog', 'computer-organisation-architechure']",None
809,https://github.com/ICzhijia/ZYNQ_RGB88_YCbCr.git,2020-12-29 07:27:02+00:00,,0,ICzhijia/ZYNQ_RGB88_YCbCr,325217152,Verilog,ZYNQ_RGB88_YCbCr,0,0,2020-12-29 07:34:13+00:00,[],None
810,https://github.com/yunz0926/COSE221.git,2020-12-28 14:24:31+00:00,KU2020 | COSE221 Logic Design | Verilog Assignment,0,yunz0926/COSE221,325032863,Verilog,COSE221,3,0,2020-12-28 14:28:51+00:00,[],None
811,https://github.com/Art-007/Traffic-light-using-Verilog-and-FPGA.git,2021-01-02 21:49:26+00:00,,0,Art-007/Traffic-light-using-Verilog-and-FPGA,326277227,Verilog,Traffic-light-using-Verilog-and-FPGA,9151,0,2021-01-02 23:46:08+00:00,[],None
812,https://github.com/bianyuanop/swjtu-2019CS-DC-finalDesign.git,2020-12-21 12:00:11+00:00,SWJTU 2019 Computer science Digit Circuit  final design. Team ...,0,bianyuanop/swjtu-2019CS-DC-finalDesign,323323431,Verilog,swjtu-2019CS-DC-finalDesign,19,0,2023-05-26 13:57:13+00:00,[],https://api.github.com/licenses/gpl-3.0
813,https://github.com/YuviniVelasquez/hdl_one_layer_neural_network.git,2020-12-21 21:37:20+00:00,,0,YuviniVelasquez/hdl_one_layer_neural_network,323453403,Verilog,hdl_one_layer_neural_network,763,0,2021-01-13 13:47:45+00:00,[],None
814,https://github.com/zzzDavid/HW-Resource-Est.git,2020-12-21 06:49:23+00:00,3M-vISA hardware resource estimation,1,zzzDavid/HW-Resource-Est,323254281,Verilog,HW-Resource-Est,14400,0,2022-02-02 02:58:40+00:00,[],None
815,https://github.com/rgulcu1/Reptile-8_Cpu_Design.git,2020-12-15 21:58:05+00:00,,0,rgulcu1/Reptile-8_Cpu_Design,321799108,Verilog,Reptile-8_Cpu_Design,178,0,2020-12-20 20:17:11+00:00,[],None
816,https://github.com/flyingoverclouds/flocs-ulx3s-samples.git,2020-12-16 09:30:12+00:00,My samples and tests on the FGPA ULX3S board and opensource toolchain for ECP5,0,flyingoverclouds/flocs-ulx3s-samples,321932968,Verilog,flocs-ulx3s-samples,30,0,2020-12-31 18:30:12+00:00,"['fpga', 'ulx3s', 'verilog']",https://api.github.com/licenses/mit
817,https://github.com/VinhTA-Computer-Master/VerilogHDL-RippleCarryAdder.git,2020-12-16 02:12:27+00:00,A realization of parameterized ripple carry adder with testbench using Verilog.,0,VinhTA-Computer-Master/VerilogHDL-RippleCarryAdder,321842249,Verilog,VerilogHDL-RippleCarryAdder,9,0,2020-12-16 02:15:17+00:00,[],None
818,https://github.com/vardhan2000/Digital_Design_Assignment_codes.git,2020-12-20 09:45:57+00:00,codes for 2nd sem digital design assignments,0,vardhan2000/Digital_Design_Assignment_codes,323038707,Verilog,Digital_Design_Assignment_codes,4749,0,2020-12-20 10:13:54+00:00,[],https://api.github.com/licenses/mit
819,https://github.com/PengMacro/Computer-Architecture-Project.git,2020-12-22 12:08:11+00:00,,0,PengMacro/Computer-Architecture-Project,323615076,Verilog,Computer-Architecture-Project,1853,0,2020-12-22 13:37:08+00:00,[],None
820,https://github.com/InvincibleJuggernaut/Synthesis.git,2020-12-22 11:08:22+00:00,A collection of digital circuits using Verilog.,0,InvincibleJuggernaut/Synthesis,323602299,Verilog,Synthesis,30,0,2021-08-13 07:38:30+00:00,"['verilog', 'verilog-programs', 'verilog-components', 'logic-gates', 'digital-circuits']",None
821,https://github.com/REdTOrta/32-bit-MIPS-processor-in-Verilog.git,2020-12-23 12:57:50+00:00,,0,REdTOrta/32-bit-MIPS-processor-in-Verilog,323902585,Verilog,32-bit-MIPS-processor-in-Verilog,5,0,2020-12-23 13:08:10+00:00,[],None
822,https://github.com/lucasblanco31/TP4-MIPS.git,2020-12-23 15:30:30+00:00,,0,lucasblanco31/TP4-MIPS,323937698,Verilog,TP4-MIPS,21790,0,2022-06-01 00:10:59+00:00,[],None
823,https://github.com/sou-sugiura/ASCA32.git,2020-12-24 06:59:11+00:00,ASCA is RISC Core Processor for Educational Use.,0,sou-sugiura/ASCA32,324089539,Verilog,ASCA32,6299,0,2020-12-24 13:02:09+00:00,[],None
824,https://github.com/virobot/HDL-Bits.git,2021-01-10 00:08:48+00:00,HDL Bits is a is a collection of digital circuit design exercises for learning digital logic using Verilog HDL.,0,virobot/HDL-Bits,328270820,Verilog,HDL-Bits,30,0,2021-01-10 00:23:17+00:00,[],None
825,https://github.com/roberto-dibella-polito/isa-lab-3.git,2021-01-07 23:45:04+00:00,,0,roberto-dibella-polito/isa-lab-3,327750935,Verilog,isa-lab-3,13660,0,2021-02-20 16:05:22+00:00,[],None
826,https://github.com/recepgemalmaz/Fb_Cpu_RTL_Tasarim.git,2021-01-10 14:35:57+00:00,,0,recepgemalmaz/Fb_Cpu_RTL_Tasarim,328403890,Verilog,Fb_Cpu_RTL_Tasarim,12424,0,2022-09-03 14:09:27+00:00,[],None
827,https://github.com/25Aditya25/IITB-Risc.git,2021-01-11 07:19:23+00:00,Pipelind processor project,0,25Aditya25/IITB-Risc,328580224,Verilog,IITB-Risc,2760,0,2021-08-19 14:01:58+00:00,[],None
828,https://github.com/18520597-DiemNgoc/MIPS32bit.git,2021-01-09 14:30:26+00:00,Design MIPS 32-bit by behavior modelling in verilog,0,18520597-DiemNgoc/MIPS32bit,328173722,Verilog,MIPS32bit,5326,0,2021-05-23 07:32:42+00:00,[],None
829,https://github.com/efframia/traffic-lights.git,2021-01-10 06:07:26+00:00,数字逻辑实验三 ：人行交通灯工程,0,efframia/traffic-lights,328315802,Verilog,traffic-lights,10,0,2021-03-04 08:58:51+00:00,[],None
830,https://github.com/Taster98/SingleCycleProcessor.git,2021-01-15 22:03:04+00:00,Learning purpose Single Cycle implementation in Verilog.,0,Taster98/SingleCycleProcessor,330032049,Verilog,SingleCycleProcessor,20,0,2021-01-16 15:38:13+00:00,[],None
831,https://github.com/coronadocx/ECE-385.git,2021-01-08 02:48:54+00:00,,0,coronadocx/ECE-385,327781558,Verilog,ECE-385,65254,0,2021-01-15 01:09:24+00:00,[],None
832,https://github.com/arjenroodselaar/bazel_yosys.git,2021-01-08 08:20:15+00:00,Import of some Yosys verification flows using Bazel,0,arjenroodselaar/bazel_yosys,327841084,Verilog,bazel_yosys,170,0,2021-01-08 10:35:25+00:00,[],https://api.github.com/licenses/apache-2.0
833,https://github.com/hussain-abbas-06228/FPGA_Snake_Game.git,2021-01-18 06:36:12+00:00,,0,hussain-abbas-06228/FPGA_Snake_Game,330576674,Verilog,FPGA_Snake_Game,3,0,2021-01-18 06:40:48+00:00,[],None
834,https://github.com/neginkheirmand/LogicalDesign_FinalProject.git,2021-01-17 20:14:08+00:00,LC course final project,0,neginkheirmand/LogicalDesign_FinalProject,330477737,Verilog,LogicalDesign_FinalProject,5652,0,2021-02-09 10:32:52+00:00,[],None
835,https://github.com/XcodeRole/Multi-cycle-CPU.git,2020-12-25 11:47:43+00:00,code with vivado HDL ,1,XcodeRole/Multi-cycle-CPU,324352187,Verilog,Multi-cycle-CPU,12212,0,2020-12-25 12:18:06+00:00,[],None
836,https://github.com/2019320106Leejaeseo/single-cycle-mips-processor.git,2020-12-23 23:46:42+00:00,,0,2019320106Leejaeseo/single-cycle-mips-processor,324024243,Verilog,single-cycle-mips-processor,18153,0,2020-12-24 00:18:23+00:00,[],None
837,https://github.com/kyle-one/multi_cycle_processor.git,2020-12-24 07:25:08+00:00,青岛理工大学计算机组成原理多周期处理器,0,kyle-one/multi_cycle_processor,324094235,Verilog,multi_cycle_processor,7,0,2020-12-24 07:44:02+00:00,[],None
838,https://github.com/Er-Darshil/Fifo-memory.git,2020-12-27 10:02:58+00:00,Fifo Memory using Verilog,0,Er-Darshil/Fifo-memory,324732845,Verilog,Fifo-memory,4,0,2020-12-27 10:10:20+00:00,[],None
839,https://github.com/ArudaKawa/FB-CPU-RTL-Tasarimi.git,2021-01-13 11:44:46+00:00,"Fenerbahçe Üniversitesi Bilgisayar Mühendisliği 2. Sınıf Öğrencileri Arda ALHAN, Evrim Arda KALAFAT, Mehmet ÇOLAK, Doğa TURAN ve Erdem ŞENTÜRK tarafından FB-CPU isminde bir işlemcinin Verilog dili ile RTL tasarımı ve tasarlanan işlemci üzerinde makine dili ile yazılan çeşitli kod parçacıkları yazılmıştır.",1,ArudaKawa/FB-CPU-RTL-Tasarimi,329290419,Verilog,FB-CPU-RTL-Tasarimi,4992,0,2021-01-15 13:09:05+00:00,[],None
840,https://github.com/Vinitha14/Scoreboard.git,2021-01-13 20:43:28+00:00,Project done as part of Computer Architecture Practice course.,0,Vinitha14/Scoreboard,329426934,Verilog,Scoreboard,1833,0,2021-01-13 20:50:59+00:00,[],None
841,https://github.com/natanlaurett/processador-8-bits.git,2021-01-15 14:45:19+00:00,8-bit processor designed in the Computer Architecture and Organization II course ,0,natanlaurett/processador-8-bits,329939117,,processador-8-bits,256,0,2022-06-10 02:40:39+00:00,[],None
842,https://github.com/cuneytbalci/fb_cpu_verilog_rtl_project.git,2021-01-15 12:14:02+00:00,,0,cuneytbalci/fb_cpu_verilog_rtl_project,329902910,Verilog,fb_cpu_verilog_rtl_project,1952,0,2021-01-15 12:34:08+00:00,[],None
843,https://github.com/kakbydima/COTS.git,2021-01-03 14:02:47+00:00,Projects related to systems made out of Consumer-of-the-shelf components (e.g. prove of concept),0,kakbydima/COTS,326420609,Verilog,COTS,23,0,2021-01-04 14:07:15+00:00,[],None
844,https://github.com/zht111/toy_cpu.git,2021-01-02 14:20:22+00:00,,0,zht111/toy_cpu,326198322,Verilog,toy_cpu,37,0,2021-01-02 14:24:59+00:00,[],None
845,https://github.com/Elena-knfr/Digital_Systems.git,2021-01-03 16:36:31+00:00,,0,Elena-knfr/Digital_Systems,326452284,Verilog,Digital_Systems,970,0,2021-02-19 17:18:26+00:00,[],None
846,https://github.com/mohamr01/Mips-Project.git,2021-01-05 20:32:02+00:00,Implementing Pipeline MIPS,0,mohamr01/Mips-Project,327112413,Verilog,Mips-Project,6677,0,2021-01-05 20:43:42+00:00,[],None
847,https://github.com/johnt1838/Computer_Organization.git,2021-01-06 09:29:49+00:00,Short Verilog Projects,0,johnt1838/Computer_Organization,327262746,Verilog,Computer_Organization,416,0,2022-03-03 00:15:45+00:00,[],None
848,https://github.com/Abhinand20/Secure-AES.git,2021-01-10 18:53:52+00:00,Verilog code for my paper that proposes a secure-AES algorithm with support for various FPGA boards.,1,Abhinand20/Secure-AES,328456059,Verilog,Secure-AES,103,0,2022-07-08 05:33:25+00:00,"['fpga-programming', 'hardware-designs', 'research-and-development', 'security']",None
849,https://github.com/ARui-tw/LED-Cube.git,2021-01-09 15:55:19+00:00,LED cube with Pong game on FPGA,0,ARui-tw/LED-Cube,328190624,Verilog,LED-Cube,43,0,2021-05-08 14:37:00+00:00,"['pong-game', 'fpga']",None
850,https://github.com/erik-fox/ExpandableDaisyChainArbiter.git,2021-01-06 21:50:09+00:00,,0,erik-fox/ExpandableDaisyChainArbiter,327436887,Verilog,ExpandableDaisyChainArbiter,34,0,2021-01-13 20:05:46+00:00,[],None
851,https://github.com/Khaled-Pr/Count_the_number_of_ones_for_8bit_Input.git,2021-01-03 21:22:27+00:00,This is a combinational design that Counts the number of ones in a parallel 8-bit input,0,Khaled-Pr/Count_the_number_of_ones_for_8bit_Input,326503166,Verilog,Count_the_number_of_ones_for_8bit_Input,1,0,2021-01-03 21:23:33+00:00,[],None
852,https://github.com/ChNgineer/ECE253.git,2021-01-10 00:41:00+00:00,Lab exercises for UofT's Engineering Science ECE253's online fall 2020 semester.,0,ChNgineer/ECE253,328274513,Verilog,ECE253,4729,0,2021-01-27 03:11:42+00:00,[],None
853,https://github.com/Maryambayati/32bit-MIPS-Pipelined-processor-.git,2021-01-10 09:33:08+00:00,,0,Maryambayati/32bit-MIPS-Pipelined-processor-,328347085,Verilog,32bit-MIPS-Pipelined-processor-,9,0,2021-01-10 10:02:33+00:00,[],None
854,https://github.com/jslee6091/AI_RTL_Design.git,2021-01-12 08:45:26+00:00,AI RTL 설계 교육 - CNN 연산 가속기 설계 프로젝트,0,jslee6091/AI_RTL_Design,328924157,Verilog,AI_RTL_Design,1709,0,2021-09-03 03:21:20+00:00,[],None
855,https://github.com/saramkhalaf/MotionEstimator.git,2021-01-11 05:21:15+00:00,,0,saramkhalaf/MotionEstimator,328556979,Verilog,MotionEstimator,27266,0,2021-01-11 05:21:46+00:00,[],https://api.github.com/licenses/mit
856,https://github.com/VijayMeena701/Computer_Architecture.git,2021-01-11 12:24:46+00:00,Computer Architecture Lab Assignments,0,VijayMeena701/Computer_Architecture,328656205,Verilog,Computer_Architecture,4045,0,2021-05-16 12:17:59+00:00,[],None
857,https://github.com/howardchou0302/CAFinal.git,2020-12-30 12:25:23+00:00,this is final.,1,howardchou0302/CAFinal,325544632,Verilog,CAFinal,323,0,2021-01-04 12:20:46+00:00,[],None
858,https://github.com/Chen-Yu-Chang/Multicycle_CPU.git,2020-12-21 03:36:08+00:00,EC413 - Computer Organization,0,Chen-Yu-Chang/Multicycle_CPU,323221872,Verilog,Multicycle_CPU,40,0,2020-12-21 03:40:56+00:00,[],None
859,https://github.com/abhishek2002228/Verilog.git,2020-12-28 13:03:05+00:00,A Working Directory to keep track of my learning process in Verilog HDL,0,abhishek2002228/Verilog,325014565,Verilog,Verilog,808,0,2021-06-20 10:59:45+00:00,[],None
860,https://github.com/Floppies/tp3_arqcomp.git,2020-12-27 19:49:26+00:00,,0,Floppies/tp3_arqcomp,324836958,Verilog,tp3_arqcomp,448,0,2021-02-01 15:39:34+00:00,[],None
861,https://github.com/Nimausfi/Mux_4_to_1.git,2020-12-30 15:19:23+00:00,,0,Nimausfi/Mux_4_to_1,325582507,Verilog,Mux_4_to_1,230,0,2020-12-30 16:13:26+00:00,[],None
862,https://github.com/SunzeY/CPU_project.git,2021-01-02 04:01:31+00:00,recording codes of CPU under mips ISA in lecture of computer organization,0,SunzeY/CPU_project,326104848,Verilog,CPU_project,2274,0,2022-11-29 02:37:17+00:00,"['cpu', 'verilog', 'learning', 'buaa-co', 'buaa']",https://api.github.com/licenses/mit
863,https://github.com/armenuhiarakelyan1978/memory_RAM.git,2020-12-17 19:48:35+00:00,RAM,0,armenuhiarakelyan1978/memory_RAM,322397250,Verilog,memory_RAM,1,0,2020-12-17 19:50:04+00:00,[],None
864,https://github.com/CompoTypo/SimpleALU.git,2020-12-16 23:18:35+00:00,An ALU designed and written for a Digital Logic class,0,CompoTypo/SimpleALU,322125510,Verilog,SimpleALU,114,0,2020-12-17 00:36:41+00:00,[],None
865,https://github.com/AmalPrabhashwara/FPGA-based-power-quality-enhancer.git,2020-12-17 10:47:35+00:00,,0,AmalPrabhashwara/FPGA-based-power-quality-enhancer,322264206,Verilog,FPGA-based-power-quality-enhancer,62,0,2021-01-12 08:36:31+00:00,[],None
866,https://github.com/GokuGhoul/Embd-iverilog.git,2020-12-18 18:33:23+00:00,Embedded Systems Lab Work,0,GokuGhoul/Embd-iverilog,322675567,Verilog,Embd-iverilog,25,0,2021-07-01 04:06:43+00:00,"['embedded-systems', 'iverilog', 'encoder-decoder', 'flip-flop', 'adder', 'counter', 'logic-gates']",None
867,https://github.com/JhianRamos/ProyectoDigital.git,2020-12-16 03:29:21+00:00,Dispensador automático para gatos,0,JhianRamos/ProyectoDigital,321857158,Verilog,ProyectoDigital,2839,0,2020-12-16 04:01:20+00:00,[],None
868,https://github.com/Jeremyngu123/Final-Project.git,2021-01-15 01:52:52+00:00,,0,Jeremyngu123/Final-Project,329781686,Verilog,Final-Project,430,0,2021-01-15 03:59:04+00:00,[],None
869,https://github.com/ZG926/CAproject_2.git,2021-01-03 08:24:52+00:00,,0,ZG926/CAproject_2,326360588,Verilog,CAproject_2,1127,0,2021-01-26 04:58:40+00:00,[],None
870,https://github.com/littleExamTeam/Sram.git,2021-01-03 09:52:54+00:00,,0,littleExamTeam/Sram,326374342,Verilog,Sram,49,0,2021-01-09 02:00:29+00:00,[],None
871,https://github.com/petermayes/EB_Mk8_ObserverController_Hardware.git,2021-01-04 06:56:30+00:00,,0,petermayes/EB_Mk8_ObserverController_Hardware,326596470,Verilog,EB_Mk8_ObserverController_Hardware,2180,0,2021-01-04 10:31:07+00:00,[],None
872,https://github.com/nasirkhanpak/synchronous-fifo-memory.git,2021-01-18 09:31:28+00:00,Synchronous FIFO Memory with aynchronous active-low reset,0,nasirkhanpak/synchronous-fifo-memory,330616819,,synchronous-fifo-memory,20,0,2021-02-04 17:56:05+00:00,[],None
873,https://github.com/eletesta/ASPDAC2021_exp.git,2021-01-16 15:37:23+00:00,,1,eletesta/ASPDAC2021_exp,330194998,Verilog,ASPDAC2021_exp,167,0,2021-01-20 15:38:56+00:00,[],None
874,https://github.com/MoemenGaafar/Single-Cycle-Processor.git,2021-01-17 23:12:31+00:00,"Structural implementation of a single cycle processor using Verilog. The processor handles the following set of instructions: lw, sw, Rtype instructions (add, sub, and, or, slt), addi, sll, lh.",0,MoemenGaafar/Single-Cycle-Processor,330505518,Verilog,Single-Cycle-Processor,934,0,2021-01-17 23:33:58+00:00,"['processor-architecture', 'verilog']",None
875,https://github.com/archit16/Custom-Mips-Processor.git,2021-01-09 10:26:57+00:00,,0,archit16/Custom-Mips-Processor,328128832,Verilog,Custom-Mips-Processor,8,0,2021-01-09 14:34:08+00:00,[],https://api.github.com/licenses/mit
876,https://github.com/b06902044/computer_architecture.git,2021-01-09 13:39:47+00:00,,0,b06902044/computer_architecture,328163476,Verilog,computer_architecture,63,0,2021-01-09 13:43:04+00:00,[],None
877,https://github.com/s108321042/109-1-Final-Project.git,2021-01-09 07:26:49+00:00,109-1 Final Project,0,s108321042/109-1-Final-Project,328099594,Verilog,109-1-Final-Project,7635,0,2021-01-12 16:49:51+00:00,[],None
878,https://github.com/efframia/single-cycle-cpu.git,2021-01-11 09:43:32+00:00,2020计算机组成原理小学期,0,efframia/single-cycle-cpu,328615840,Verilog,single-cycle-cpu,24,0,2021-01-11 10:05:20+00:00,[],None
879,https://github.com/makharadzemisho/homework_ALU.git,2020-12-15 09:15:12+00:00,,0,makharadzemisho/homework_ALU,321613769,Verilog,homework_ALU,56,0,2020-12-15 09:19:07+00:00,[],None
880,https://github.com/dldldlfma/yosys_test.git,2020-12-15 07:51:40+00:00,,0,dldldlfma/yosys_test,321592447,Verilog,yosys_test,12,0,2020-12-22 03:54:04+00:00,[],None
881,https://github.com/Rajasudhangowda321/Verilog.git,2020-12-17 02:07:21+00:00,,0,Rajasudhangowda321/Verilog,322153250,Verilog,Verilog,37,0,2021-01-08 14:07:41+00:00,[],None
882,https://github.com/Sarthakchandra/Adder-Pipelining.git,2020-12-24 10:50:51+00:00,"In this part, we will make two different designs of an 8-bit adder—one without pipelining and the other with pipelining and observe the effect on the maximum operating frequency and latency of the design. For Further Step by Step Instructions Check Lab5.pdf ",0,Sarthakchandra/Adder-Pipelining,324133743,Verilog,Adder-Pipelining,1105,0,2020-12-24 11:03:04+00:00,[],None
883,https://github.com/oshablue/fpga-rs104-up5k.git,2020-12-24 19:00:52+00:00,Demo (very rough) experimental code for the Lattice Semi up5k sg48 chip as implemented in the HDL-0104-RS104 OshaBlue 4-Channel Ultrasound Hardware using AtomIDE apio icestorm tools ,0,oshablue/fpga-rs104-up5k,324219652,Verilog,fpga-rs104-up5k,285,0,2020-12-24 19:11:25+00:00,[],
884,https://github.com/assalupitudor/CS233.git,2020-12-26 13:21:19+00:00,,0,assalupitudor/CS233,324559725,Verilog,CS233,1295,0,2020-12-26 13:38:08+00:00,[],None
885,https://github.com/GerardoVielma/Non-Sequential-Counter.git,2020-12-26 00:23:42+00:00,,0,GerardoVielma/Non-Sequential-Counter,324454243,Verilog,Non-Sequential-Counter,4,0,2020-12-26 00:46:26+00:00,[],None
886,https://github.com/shaily-risc/Pipelined-RISC.git,2020-12-22 07:39:11+00:00,"5 stages pipeline - Fetch, Decode, Execute, Memory, Writeback",0,shaily-risc/Pipelined-RISC,323555847,Verilog,Pipelined-RISC,19,0,2020-12-22 07:58:51+00:00,[],None
887,https://github.com/Tpaitchadze/475L.git,2020-12-22 09:38:24+00:00,,0,Tpaitchadze/475L,323581994,Verilog,475L,553,0,2020-12-22 12:26:01+00:00,[],None
888,https://github.com/sharmavins23/Binary-Decoder.git,2020-12-20 03:53:13+00:00,A basic 8-bit binary decoder with seven segment display output on the Mimas Artix 7 FPGA development board.,0,sharmavins23/Binary-Decoder,322988468,Verilog,Binary-Decoder,54,0,2020-12-25 21:28:55+00:00,[],https://api.github.com/licenses/mit
889,https://github.com/GabrielDeml/full_adder.git,2020-12-20 15:44:35+00:00,,0,GabrielDeml/full_adder,323106626,Verilog,full_adder,2,0,2020-12-20 20:00:04+00:00,[],None
890,https://github.com/mattliu123/Computer-architecture.git,2020-12-31 06:54:22+00:00,,0,mattliu123/Computer-architecture,325736425,Verilog,Computer-architecture,1584,0,2020-12-31 07:02:07+00:00,[],None
891,https://github.com/HeydrichBeillschmidt/CPU-naive.git,2021-01-02 14:15:05+00:00,weaker than weaker,0,HeydrichBeillschmidt/CPU-naive,326197270,Verilog,CPU-naive,47,0,2021-01-04 05:29:43+00:00,[],None
892,https://github.com/jamescevasco/461-Final-Project.git,2020-12-28 16:29:10+00:00,,0,jamescevasco/461-Final-Project,325061126,Verilog,461-Final-Project,235,0,2021-01-02 19:35:25+00:00,[],None
