,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/budude2/openfpga-GBC.git,2023-12-28 21:56:58+00:00,,4,budude2/openfpga-GBC,736787151,Verilog,openfpga-GBC,20092,171,2024-04-13 00:53:43+00:00,[],None
1,https://github.com/hkust-zhiyao/MasterRTL.git,2023-12-18 05:36:37+00:00,MasterRTL: A Pre-Synthesis PPA Estimation Framework for Any RTL Design,1,hkust-zhiyao/MasterRTL,732897800,Verilog,MasterRTL,4848,20,2024-04-11 15:16:56+00:00,[],None
2,https://github.com/wangyuxiao2000/ccsds-ldpc.git,2023-12-28 11:23:36+00:00,ccsds ldpc encdoer and decoder.(CCSDS 131.1-O-2),0,wangyuxiao2000/ccsds-ldpc,736610633,Verilog,ccsds-ldpc,16419,7,2024-03-10 06:05:40+00:00,[],None
3,https://github.com/AwesomeDolphin/openFPGA-SpaceInvaders.git,2023-12-27 17:48:25+00:00,,0,AwesomeDolphin/openFPGA-SpaceInvaders,736367484,Verilog,openFPGA-SpaceInvaders,1566,7,2024-04-13 00:57:45+00:00,[],
4,https://github.com/secworks/verilator_template.git,2023-12-24 10:13:27+00:00,(Hopefully) simple template for a Verilator SystemVerilog project with a usable testbench,0,secworks/verilator_template,735275328,Verilog,verilator_template,6,6,2024-04-09 04:49:32+00:00,[],https://api.github.com/licenses/bsd-2-clause
5,https://github.com/EhsanShahbazii/Digital-VLSI-System-Design-Projects.git,2024-01-01 09:47:29+00:00,سورس کد پروژه های درس طراحی سیستم های دیجیتال برنامه پذیر دانشگاه تبریز مقطع کارشناسی رشته مهندسی کامپیوتر ,0,EhsanShahbazii/Digital-VLSI-System-Design-Projects,737735921,Verilog,Digital-VLSI-System-Design-Projects,75,5,2024-02-08 09:43:02+00:00,"['verilog', 'verilog-code', 'verilog-components', 'verilog-project', 'vlsi']",None
6,https://github.com/cnily03-hive/single-cycle-cpu.git,2023-12-20 13:48:19+00:00,Single-Cycle CPU for Homework of Computer System Design in CUMT,0,cnily03-hive/single-cycle-cpu,733944919,Verilog,single-cycle-cpu,224,5,2024-03-30 14:43:53+00:00,"['cpu', 'verilog', 'verilog-hdl', 'single-cycle']",https://api.github.com/licenses/mit
7,https://github.com/Slamy/fpga-composite-video.git,2023-12-20 17:01:23+00:00,"Verilog implementation of PAL, NTSC and SECAM color encoding",1,Slamy/fpga-composite-video,734018424,Verilog,fpga-composite-video,671,4,2024-04-13 06:29:03+00:00,"['fpga', 'gowin', 'ntsc', 'pal', 'secam', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
8,https://github.com/HEP-Alliance/hsm.git,2023-12-16 08:51:29+00:00,"Open-source, RISC-V-based Hardware Security Module",1,HEP-Alliance/hsm,732311025,Verilog,hsm,18347,3,2024-04-08 11:20:47+00:00,[],https://api.github.com/licenses/apache-2.0
9,https://github.com/davidbroughsmyth/riscv-hdp.git,2023-12-18 13:03:54+00:00,RISC-V - Hardware Design Program,0,davidbroughsmyth/riscv-hdp,733051452,Verilog,riscv-hdp,24697,3,2024-03-04 16:22:01+00:00,[],None
10,https://github.com/alibaba-damo-academy/damo-npu.git,2023-12-19 01:54:40+00:00,,0,alibaba-damo-academy/damo-npu,733288849,Verilog,damo-npu,1805,3,2024-03-14 06:37:03+00:00,[],https://api.github.com/licenses/mit
11,https://github.com/asimkhan8107/AMBA-AHB.git,2023-12-22 14:30:14+00:00,Complete RTL Design of AMBA AHB(Advanced High-Performance Bus)  Protocol for single master and 4 - slave transaction. ,0,asimkhan8107/AMBA-AHB,734757104,Verilog,AMBA-AHB,5,3,2024-03-24 15:53:30+00:00,[],None
12,https://github.com/Mohammed-Abed-Alkareem/Simple-RISC-Processor.git,2023-12-29 20:00:39+00:00,design and verify a simple multi cycle RISC processor in Verilog,0,Mohammed-Abed-Alkareem/Simple-RISC-Processor,737095618,Verilog,Simple-RISC-Processor,794,3,2024-03-28 17:24:59+00:00,[],None
13,https://github.com/ZXMicroJack/mist-ports.git,2023-12-29 23:23:46+00:00,Ports of MiST cores to ZXTres / ZXUno / NeptUno1+ / NeptUno2,1,ZXMicroJack/mist-ports,737132222,Verilog,mist-ports,44,3,2024-02-26 23:51:03+00:00,[],None
14,https://github.com/ffhh927/NSCSCC-2023-mips.git,2023-12-23 12:11:46+00:00,2023龙芯杯mips赛道作品,0,ffhh927/NSCSCC-2023-mips,735029002,Verilog,NSCSCC-2023-mips,1013,3,2024-03-06 12:28:48+00:00,[],None
15,https://github.com/xin-li-sdu/Cryptography-Engineering.git,2024-01-03 12:25:09+00:00,山东大学网络空间安全学院23-24春季学期密码工程报告&&代码,0,xin-li-sdu/Cryptography-Engineering,738522667,Verilog,Cryptography-Engineering,3637,3,2024-01-15 11:24:54+00:00,[],None
16,https://github.com/MiiKiyoshi/Marios_Coin_Collection_Adventure-FPGA.git,2023-12-24 10:31:35+00:00,I’ve managed to replicate the jumps exactly as they are in the real Mario games.,0,MiiKiyoshi/Marios_Coin_Collection_Adventure-FPGA,735279305,Verilog,Marios_Coin_Collection_Adventure-FPGA,52943,2,2024-03-23 07:36:01+00:00,[],None
17,https://github.com/wu1564/SOC_LAB_DMA.git,2023-12-19 15:12:27+00:00,,0,wu1564/SOC_LAB_DMA,733546086,Verilog,SOC_LAB_DMA,215,2,2023-12-20 11:11:18+00:00,[],None
18,https://github.com/Ponponri/SOC_Final_UART.git,2023-12-28 05:01:02+00:00,,0,Ponponri/SOC_Final_UART,736504764,Verilog,SOC_Final_UART,1277,2,2024-01-02 21:13:53+00:00,[],None
19,https://github.com/TheRealGlumfish/FPGA-Pong.git,2023-12-16 15:42:28+00:00,Pong game on a Terasic DE0 FPGA ,0,TheRealGlumfish/FPGA-Pong,732413678,Verilog,FPGA-Pong,51,2,2024-02-26 14:35:45+00:00,[],https://api.github.com/licenses/bsd-3-clause
20,https://github.com/jack74387/tetris.git,2024-01-02 03:46:26+00:00,,0,jack74387/tetris,737952073,Verilog,tetris,40097,2,2024-01-03 01:38:23+00:00,[],None
21,https://github.com/chenjunhao0315/wordEc.git,2023-12-24 15:36:18+00:00,,0,chenjunhao0315/wordEc,735349753,Verilog,wordEc,512,2,2024-03-30 05:14:24+00:00,[],None
22,https://github.com/ARX-0/RISC-V_single_cycle_processor.git,2023-12-30 14:37:22+00:00,This is a implementation of a RISC-V / mips32 single cycle processor,0,ARX-0/RISC-V_single_cycle_processor,737300979,Verilog,RISC-V_single_cycle_processor,48,2,2024-03-11 13:08:29+00:00,[],https://api.github.com/licenses/apache-2.0
23,https://github.com/faa00/Tang_MEGA_138K_Pro_Dock.git,2023-12-19 17:25:21+00:00,SIPEED Tang MEGA 138K with FPGA GOWIN GW5AST-138 SOC (Embedded RISC-V AE350),0,faa00/Tang_MEGA_138K_Pro_Dock,733596709,Verilog,Tang_MEGA_138K_Pro_Dock,3944,2,2024-04-07 12:10:58+00:00,[],None
24,https://github.com/alidakik/FPGA-Digital-Oscilloscope.git,2024-01-03 13:43:51+00:00,,0,alidakik/FPGA-Digital-Oscilloscope,738551355,Verilog,FPGA-Digital-Oscilloscope,50,2,2024-01-05 03:42:44+00:00,[],None
25,https://github.com/XuanxuanRao/BUAA_2023_CO.git,2023-12-18 13:51:29+00:00,the codes of BUAA CO project from P0 to P7,0,XuanxuanRao/BUAA_2023_CO,733070294,Verilog,BUAA_2023_CO,3288,2,2024-01-05 15:14:57+00:00,[],None
26,https://github.com/wu1564/systolic_array.git,2023-12-20 14:37:50+00:00,,0,wu1564/systolic_array,733964019,Verilog,systolic_array,1,2,2023-12-20 14:53:58+00:00,[],None
27,https://github.com/userofmeet27/Verilog.git,2023-12-20 14:15:15+00:00,This repository contains all the designs which i have successfully compiled and verified using the ModelSim and Quartus software,0,userofmeet27/Verilog,733955277,Verilog,Verilog,130,2,2024-02-18 09:51:33+00:00,[],None
28,https://github.com/Ahtishamu/PONG-Basys-3-.git,2023-12-16 18:17:27+00:00,Created a pong game using basys-3 FPGA and VGA controller with keyboard input,0,Ahtishamu/PONG-Basys-3-,732454558,Verilog,PONG-Basys-3-,443,1,2023-12-23 18:01:29+00:00,[],https://api.github.com/licenses/mit
29,https://github.com/Ajaymalolan/Verilog.git,2023-12-22 16:20:04+00:00,,0,Ajaymalolan/Verilog,734791300,Verilog,Verilog,54,1,2024-03-27 08:31:05+00:00,[],None
30,https://github.com/GeeK21235/router2x2.git,2024-01-02 10:21:21+00:00,,0,GeeK21235/router2x2,738060475,Verilog,router2x2,4,1,2024-01-08 17:19:18+00:00,[],None
31,https://github.com/li-yiyang/one-bit-CPU.git,2023-12-23 16:54:39+00:00,A one bit CPU FPGA implementation of naoto64/1bit-CPU.,0,li-yiyang/one-bit-CPU,735098845,Verilog,one-bit-CPU,5,1,2023-12-24 16:57:43+00:00,[],None
32,https://github.com/mcclure/analogue-core-template-amaranth-variants.git,2023-12-29 19:32:42+00:00,Bug/test branches of amaranth projects,0,mcclure/analogue-core-template-amaranth-variants,737089232,Verilog,analogue-core-template-amaranth-variants,9664,1,2024-01-02 01:26:21+00:00,[],None
33,https://github.com/kento2247/mp_exp.git,2023-12-18 02:01:29+00:00,,2,kento2247/mp_exp,732849508,Verilog,mp_exp,10488,1,2023-12-18 05:26:19+00:00,[],None
34,https://github.com/akaArmin/jku-tt06-7-segment-FUN.git,2023-12-18 08:51:20+00:00,,0,akaArmin/jku-tt06-7-segment-FUN,732959527,Verilog,jku-tt06-7-segment-FUN,272,1,2024-04-12 00:08:42+00:00,[],https://api.github.com/licenses/apache-2.0
35,https://github.com/OrGolan12/RISC-V-Project-OB.git,2023-12-17 13:15:38+00:00,RISC-V Project OB,0,OrGolan12/RISC-V-Project-OB,732671047,Verilog,RISC-V-Project-OB,82,1,2023-12-18 14:33:23+00:00,[],None
36,https://github.com/HayatGamal2000/SAP-1-Processor-using-Verilog.git,2023-12-28 19:59:43+00:00,,0,HayatGamal2000/SAP-1-Processor-using-Verilog,736762270,Verilog,SAP-1-Processor-using-Verilog,5,1,2024-01-16 07:16:34+00:00,[],None
37,https://github.com/giebfried/leet_verilog.git,2023-12-30 07:18:24+00:00,Solving LeetCode Programming Problems with Verilog,0,giebfried/leet_verilog,737207173,Verilog,leet_verilog,11,1,2024-02-25 07:23:16+00:00,[],https://api.github.com/licenses/mit
38,https://github.com/andy1147/IMG2COL_GEMM.git,2024-01-01 10:25:46+00:00,img2col_gemm,0,andy1147/IMG2COL_GEMM,737743065,Verilog,IMG2COL_GEMM,99,1,2024-01-16 07:34:18+00:00,[],None
39,https://github.com/AlperenBaris/Amiral_Batti.git,2024-01-03 10:55:19+00:00,,0,AlperenBaris/Amiral_Batti,738491878,Verilog,Amiral_Batti,6,1,2024-03-30 21:07:18+00:00,[],None
40,https://github.com/zhanhc21/2023_COD_pipeline_CPU.git,2023-12-17 08:24:46+00:00,2023菜鸡造机,0,zhanhc21/2023_COD_pipeline_CPU,732602839,Verilog,2023_COD_pipeline_CPU,3017,1,2023-12-24 14:41:14+00:00,[],None
41,https://github.com/KonataLin/KonataNPU-MonoCycleVersion.git,2024-01-02 06:22:09+00:00,KonataNPU-MonoCycleVersion,0,KonataLin/KonataNPU-MonoCycleVersion,737986456,Verilog,KonataNPU-MonoCycleVersion,54,1,2024-01-04 04:32:56+00:00,[],None
42,https://github.com/Strivekaudani/64-QAM-Modulator.git,2023-12-28 20:34:58+00:00,64-QAM Modulator for RF communications,0,Strivekaudani/64-QAM-Modulator,736770173,Verilog,64-QAM-Modulator,2046,1,2024-02-23 01:47:25+00:00,[],None
43,https://github.com/rohann-9/100daysofRTL.git,2024-01-02 10:36:47+00:00,,1,rohann-9/100daysofRTL,738065424,Verilog,100daysofRTL,39,1,2024-02-28 09:20:32+00:00,[],None
44,https://github.com/Nipun-9420/Simple_counter_switch_fpga.git,2023-12-25 07:12:19+00:00,with the help of switch user wil provide a number and then when we press start then it will start counting till 0,0,Nipun-9420/Simple_counter_switch_fpga,735507517,Verilog,Simple_counter_switch_fpga,5559,1,2024-03-25 09:07:32+00:00,[],None
45,https://github.com/yenzu0329/ICLab.git,2023-12-26 14:34:55+00:00,2023 Spring ICLab,1,yenzu0329/ICLab,735945810,Verilog,ICLab,39880,1,2024-01-07 02:31:28+00:00,[],None
46,https://github.com/TejasAshokR/7-segment_LED_display_project.git,2023-12-17 06:59:26+00:00,This Verilog project is an implementation of a 7-segment LED display driver. The code is designed to control a common cathode/anode 7-segment LED display using Quartus Prime and is targeted for [mention the FPGA or hardware platform]. The project allows users to display numerical digits (0-9) ,0,TejasAshokR/7-segment_LED_display_project,732585554,Verilog,7-segment_LED_display_project,475,1,2023-12-17 07:04:01+00:00,[],None
47,https://github.com/manish03/LDPCENCDEC.git,2023-12-26 00:48:40+00:00,LDPC Encoder Decoder for 5G BG2 Z=4,0,manish03/LDPCENCDEC,735723989,Verilog,LDPCENCDEC,41143,1,2024-01-19 05:20:05+00:00,[],https://api.github.com/licenses/apache-2.0
48,https://github.com/LoganFun/CPU-Digitial-Design.git,2023-12-21 16:20:25+00:00,MIPS CPU for FPGA,0,LoganFun/CPU-Digitial-Design,734418353,Verilog,CPU-Digitial-Design,8,1,2023-12-21 16:24:52+00:00,[],None
49,https://github.com/rempmarian/Pipeline-FPGA.git,2023-12-27 16:01:32+00:00, Pipeline FPGA Lab modules with the addition of stalls in order to prevent data hazards,0,rempmarian/Pipeline-FPGA,736330109,Verilog,Pipeline-FPGA,7,1,2023-12-27 16:08:52+00:00,[],None
50,https://github.com/jqkh/robot.git,2023-12-20 13:25:16+00:00,,0,jqkh/robot,733936241,Verilog,robot,161205,1,2023-12-29 17:36:57+00:00,[],https://api.github.com/licenses/mit
51,https://github.com/Poker-sang/cpupro.git,2024-01-03 08:51:32+00:00,,0,Poker-sang/cpupro,738447765,Verilog,cpupro,12000,1,2024-01-12 08:02:03+00:00,[],None
52,https://github.com/MohsinTaj/RiscVSingleCycleWithMemoryMapped-UART.git,2024-01-04 20:27:10+00:00,,0,MohsinTaj/RiscVSingleCycleWithMemoryMapped-UART,739121591,Verilog,RiscVSingleCycleWithMemoryMapped-UART,2681,1,2024-02-01 07:05:03+00:00,[],None
53,https://github.com/Frankd35/matmul.git,2023-12-19 14:54:02+00:00,,0,Frankd35/matmul,733538589,Verilog,matmul,2114,1,2024-02-27 16:06:27+00:00,[],None
54,https://github.com/Meee-31/cirno9.git,2023-12-30 04:45:51+00:00,a riscv core,0,Meee-31/cirno9,737178431,Verilog,cirno9,5753,1,2024-01-15 11:05:35+00:00,[],https://api.github.com/licenses/mit
55,https://github.com/RajuNITK/FPGA-based-Morse-Code-decoder.git,2024-01-03 17:40:24+00:00,,0,RajuNITK/FPGA-based-Morse-Code-decoder,738640677,Verilog,FPGA-based-Morse-Code-decoder,12,1,2024-03-23 13:08:15+00:00,[],None
56,https://github.com/TejasAshokR/trafic_light_controller.git,2023-12-16 09:25:53+00:00,This repository contains the Verilog code for a simple traffic light controller implemented using Quartus. The project simulates a basic traffic intersection with three traffic lights for different directions.,0,TejasAshokR/trafic_light_controller,732319024,Verilog,trafic_light_controller,285,1,2023-12-17 07:04:05+00:00,[],None
57,https://github.com/KaushikVempati/Serial_Protocols.git,2023-12-20 07:17:39+00:00,Simple_I2C_Protocol_Design and Verification,0,KaushikVempati/Serial_Protocols,733810975,Verilog,Serial_Protocols,7,1,2024-02-07 13:21:00+00:00,[],None
58,https://github.com/KonstantinBee/Floating-point-arithmetic.git,2023-12-23 09:58:54+00:00,,0,KonstantinBee/Floating-point-arithmetic,734999804,Verilog,Floating-point-arithmetic,4,1,2023-12-25 05:31:40+00:00,[],None
59,https://github.com/syedfahdali/SAP-1-Implementation-in-Verilog.git,2023-12-22 11:26:11+00:00,SAP-1 Implementation in Verilog,0,syedfahdali/SAP-1-Implementation-in-Verilog,734701196,Verilog,SAP-1-Implementation-in-Verilog,137,1,2024-02-18 18:41:10+00:00,[],https://api.github.com/licenses/gpl-3.0
60,https://github.com/MachineKiller36/Simple_Verilog_Microprocessor.git,2023-12-16 09:24:12+00:00,,0,MachineKiller36/Simple_Verilog_Microprocessor,732318630,Verilog,Simple_Verilog_Microprocessor,2232,1,2024-03-01 04:43:59+00:00,[],https://api.github.com/licenses/gpl-3.0
61,https://github.com/clareFlork/FPGAprojects111321076.git,2024-01-02 10:17:13+00:00,,0,clareFlork/FPGAprojects111321076,738059162,Verilog,FPGAprojects111321076,5,1,2024-03-16 12:28:41+00:00,[],None
62,https://github.com/akshatsabavat/Gaussian-Image-Blur-using-system-verilog.git,2023-12-18 03:12:08+00:00,,0,akshatsabavat/Gaussian-Image-Blur-using-system-verilog,732865305,Verilog,Gaussian-Image-Blur-using-system-verilog,149,1,2024-03-02 15:41:12+00:00,[],None
63,https://github.com/30N6/pluto_hdl.git,2023-12-22 22:54:19+00:00,,0,30N6/pluto_hdl,734884198,Verilog,pluto_hdl,544,1,2024-01-03 04:50:07+00:00,[],
64,https://github.com/jeceljr/SoftCoreCompare.git,2023-12-18 15:07:59+00:00,compares various RISC-V and other small soft cores in terms of resources used in various FPGAs,1,jeceljr/SoftCoreCompare,733101424,Verilog,SoftCoreCompare,224,1,2023-12-23 05:52:09+00:00,[],https://api.github.com/licenses/mit
65,https://github.com/DWARAKRAM/Asynchronous-FIFO.git,2023-12-16 12:12:27+00:00,,0,DWARAKRAM/Asynchronous-FIFO,732357858,Verilog,Asynchronous-FIFO,2,1,2023-12-16 12:18:44+00:00,[],None
66,https://github.com/GeeK21235/fsm_proc.git,2024-01-03 14:18:34+00:00,A 3rd year course project designing a 16 bit proc with FSM,0,GeeK21235/fsm_proc,738564999,Verilog,fsm_proc,312,1,2024-01-08 17:19:16+00:00,[],None
67,https://github.com/ashishtummuri/Quantum-Computer-Emulator-.git,2023-12-21 18:43:23+00:00,NCSU-ECE 564,0,ashishtummuri/Quantum-Computer-Emulator-,734463906,Verilog,Quantum-Computer-Emulator-,13972,1,2024-03-24 06:25:35+00:00,[],None
68,https://github.com/vinis001/SPI-PROTOCOL-DESIGNING.git,2023-12-16 05:46:05+00:00,SPI design using VERILOG with various modules,0,vinis001/SPI-PROTOCOL-DESIGNING,732271765,Verilog,SPI-PROTOCOL-DESIGNING,2880,1,2023-12-16 07:01:01+00:00,[],None
69,https://github.com/sarakady/NOC-Project.git,2024-01-03 12:54:27+00:00,,1,sarakady/NOC-Project,738533246,Verilog,NOC-Project,3742,1,2024-01-05 14:16:36+00:00,[],None
70,https://github.com/WangHelin123/MIPS32-5pip-CPU.git,2023-12-29 09:31:51+00:00,"计组CPU课设,参照《自己动手写CPU》第3-9章实现",0,WangHelin123/MIPS32-5pip-CPU,736928670,Verilog,MIPS32-5pip-CPU,4650,1,2023-12-29 11:43:07+00:00,[],None
71,https://github.com/Aliasgharshinwari/SAP1_In_Verilog.git,2024-01-02 09:54:29+00:00,"In this repository, I have shared the code for implementing SAP 1 in Verilog for my Computer Organization and Architecture Lab",0,Aliasgharshinwari/SAP1_In_Verilog,738051787,Verilog,SAP1_In_Verilog,122,1,2024-03-02 11:08:25+00:00,[],None
72,https://github.com/ZeroMips/floppy-fun.git,2023-12-23 12:36:06+00:00,,0,ZeroMips/floppy-fun,735034598,Verilog,floppy-fun,264,1,2024-01-22 01:11:15+00:00,[],None
73,https://github.com/mapkkkk/hust-cse-crypto-verilog.git,2024-01-05 05:46:49+00:00,华中科技大学网络空间安全学院密码工程学基础2023(密码硬件工程),0,mapkkkk/hust-cse-crypto-verilog,739250094,Verilog,hust-cse-crypto-verilog,9407,1,2024-02-27 00:55:19+00:00,"['aes', 'crypto', 'cse', 'fifo', 'hardware', 'hust', 'montgomery', 'sha2', 'verilog']",None
74,https://github.com/David810209/Dlab-FinalProject-PickachuVolleyball.git,2023-12-18 10:32:21+00:00,,0,David810209/Dlab-FinalProject-PickachuVolleyball,732997094,Verilog,Dlab-FinalProject-PickachuVolleyball,21534,1,2024-03-04 06:57:15+00:00,[],None
75,https://github.com/ispras/sv-tests.git,2023-12-28 10:08:09+00:00,Test suites based on Verilog and SystemVerilog standards,0,ispras/sv-tests,736588500,Verilog,sv-tests,175,1,2023-12-28 10:40:49+00:00,[],None
76,https://github.com/MAraragi/VerilogProcessorDesign.git,2023-12-31 12:28:51+00:00,使用Verilog设计单周期、多周期以及流水线处理器，完成计算工作以及IO仿真,0,MAraragi/VerilogProcessorDesign,737536484,Verilog,VerilogProcessorDesign,8661,1,2023-12-31 12:35:48+00:00,"['multicycle', 'pipeline', 'processor', 'single-cycle', 'verilog']",None
77,https://github.com/ryfu2/Verilog-Chess-Game.git,2024-01-01 20:16:23+00:00,This project is an FPGA-based chess game using verilog.,0,ryfu2/Verilog-Chess-Game,737876372,Verilog,Verilog-Chess-Game,46393,1,2024-01-04 05:33:33+00:00,[],None
78,https://github.com/Yun-YeoJun/ICE2011.git,2023-12-17 12:31:40+00:00,디지털 논리회로 final project,0,Yun-YeoJun/ICE2011,732659524,Verilog,ICE2011,596,1,2023-12-18 08:10:46+00:00,[],None
79,https://github.com/DavidVentura/the-web.git,2023-12-22 18:26:48+00:00,WebAssembly soft-core,0,DavidVentura/the-web,734827393,Verilog,the-web,120,1,2024-01-04 08:49:13+00:00,[],None
80,https://github.com/khoing0810/fpga-project.git,2023-12-19 20:39:22+00:00,EECS 151 FPGA Projects with 3-stage pipeline RISC-V CPU,0,khoing0810/fpga-project,733658274,Verilog,fpga-project,584,1,2024-01-18 02:30:11+00:00,[],None
81,https://github.com/iChenwei/HDLBits.git,2023-12-30 08:23:13+00:00,刷题记录,0,iChenwei/HDLBits,737220016,Verilog,HDLBits,40,1,2024-01-02 11:46:45+00:00,[],None
82,https://github.com/Aaron-Belay/Dodger-The-Game.git,2023-12-26 18:36:41+00:00,,0,Aaron-Belay/Dodger-The-Game,736016738,Verilog,Dodger-The-Game,985,1,2024-01-05 03:33:39+00:00,[],None
83,https://github.com/franksking4/Plinkoboard.git,2023-12-16 23:04:06+00:00,A simulation of a Plinkoboard created using Verilog. Final capstone project for Honors Digital Logic and Computer Architecture,0,franksking4/Plinkoboard,732510858,Verilog,Plinkoboard,3099,1,2024-04-08 22:03:08+00:00,[],None
84,https://github.com/GeeK21235/single-cycle-riscv-32i.git,2024-01-02 10:09:04+00:00,"a single cycle risc-v 32i core with all types of instruction. The ""architecture.v"" is the top-level file",0,GeeK21235/single-cycle-riscv-32i,738056468,Verilog,single-cycle-riscv-32i,5,1,2024-01-08 17:19:19+00:00,[],None
85,https://github.com/stefanfaur/fdt16.git,2024-01-05 16:28:58+00:00,Fundamentals of Computer Engineering project: 16-bit processor designed from the ground up.,0,stefanfaur/fdt16,739467251,Verilog,fdt16,7840,1,2024-01-11 08:31:10+00:00,[],None
86,https://github.com/TZH119/PLL_ADC_USB.git,2023-12-20 10:54:06+00:00,,0,TZH119/PLL_ADC_USB,733884132,Verilog,PLL_ADC_USB,50200,1,2023-12-21 15:49:49+00:00,[],None
87,https://github.com/TahaKeremEris/FB_CPU.git,2024-01-01 19:16:46+00:00,fb_cpu project,0,TahaKeremEris/FB_CPU,737864344,Verilog,FB_CPU,6938,1,2024-04-08 09:53:20+00:00,"['cpu', 'fpga', 'verilog']",None
88,https://github.com/kunal-lx/RISCV-HDP.git,2023-12-24 15:13:38+00:00,,0,kunal-lx/RISCV-HDP,735344321,Verilog,RISCV-HDP,5118,0,2024-01-28 13:08:16+00:00,[],None
89,https://github.com/robertomeroni/processorArchitecture.git,2023-12-21 18:59:26+00:00,,0,robertomeroni/processorArchitecture,734468462,Verilog,processorArchitecture,275,0,2024-01-31 17:31:14+00:00,[],None
90,https://github.com/Lovmy/Verilog.git,2024-01-05 07:15:39+00:00,Apprentissage de Verilog.,0,Lovmy/Verilog,739276292,Verilog,Verilog,288,0,2024-02-01 12:36:30+00:00,[],https://api.github.com/licenses/gpl-2.0
91,https://github.com/SasanquaProject/Core-IP.git,2023-12-26 20:01:55+00:00,,0,SasanquaProject/Core-IP,736037207,Verilog,Core-IP,74,0,2024-02-17 05:45:16+00:00,[],None
92,https://github.com/SkyXJW/coe_synthesis.git,2023-12-25 12:35:45+00:00,,0,SkyXJW/coe_synthesis,735580976,,coe_synthesis,107,0,2023-12-25 12:35:45+00:00,[],None
93,https://github.com/omarkashif/RISC-V-Implementation-.git,2023-12-16 23:10:56+00:00,RISC-V Implementation  using Verilog for my Computer Organization and Assembly Language Programming course,0,omarkashif/RISC-V-Implementation-,732511912,Verilog,RISC-V-Implementation-,35,0,2023-12-16 23:11:46+00:00,[],None
94,https://github.com/momoisgoodforhealth/MIPS_FPGA.git,2023-12-17 06:36:29+00:00,,0,momoisgoodforhealth/MIPS_FPGA,732581183,Verilog,MIPS_FPGA,74,0,2023-12-17 06:37:45+00:00,[],None
95,https://github.com/Rachu7224/rach.git,2023-12-17 06:52:05+00:00,,0,Rachu7224/rach,732584139,Verilog,rach,11927,0,2023-12-17 09:53:14+00:00,[],https://api.github.com/licenses/apache-2.0
96,https://github.com/KINGFIOX/DIgiLogic.git,2023-12-19 08:21:21+00:00,,0,KINGFIOX/DIgiLogic,733392812,Verilog,DIgiLogic,254796,0,2023-12-19 08:22:24+00:00,[],None
97,https://github.com/hibx/FROGGER.git,2023-12-16 12:14:08+00:00,,0,hibx/FROGGER,732358297,Verilog,FROGGER,35,0,2023-12-19 10:20:38+00:00,[],None
98,https://github.com/ritvikmanda03/FPGA-Tank-Shooter-Game.git,2023-12-19 06:46:42+00:00,,0,ritvikmanda03/FPGA-Tank-Shooter-Game,733362402,Verilog,FPGA-Tank-Shooter-Game,12284,0,2023-12-19 07:37:07+00:00,[],None
99,https://github.com/mohamedhazem511/async_fifo.git,2023-12-19 18:03:07+00:00,An asynchronous FIFO refers to a FIFO design where data values are written to a FIFO-buffer from one clock domain and the data values are read from the same FIFO buffer from another clock domain.,0,mohamedhazem511/async_fifo,733610301,Verilog,async_fifo,615,0,2023-12-19 18:35:33+00:00,[],None
100,https://github.com/PolashDeb/Design-and-implementation-of-sorting-algorithms-based-on-FPGA.git,2023-12-21 08:33:48+00:00,Verilog Code.,0,PolashDeb/Design-and-implementation-of-sorting-algorithms-based-on-FPGA,734254857,Verilog,Design-and-implementation-of-sorting-algorithms-based-on-FPGA,1,0,2023-12-21 08:34:42+00:00,[],None
101,https://github.com/NicoRathmayr/Digitaler-Filter.git,2023-12-18 07:54:43+00:00,,0,NicoRathmayr/Digitaler-Filter,732940096,Verilog,Digitaler-Filter,42,0,2023-12-18 07:54:49+00:00,[],https://api.github.com/licenses/apache-2.0
102,https://github.com/zzz332choi/digital_logic_circuit.git,2023-12-22 11:34:23+00:00,2023-2  Digital_logic_circuit2 class,0,zzz332choi/digital_logic_circuit,734703419,Verilog,digital_logic_circuit,10761,0,2023-12-22 11:53:21+00:00,[],None
103,https://github.com/Satvik3799/UART.git,2023-12-21 19:33:15+00:00,UART in verilog ,0,Satvik3799/UART,734477804,Verilog,UART,91,0,2023-12-22 11:24:08+00:00,[],None
104,https://github.com/Zameo08/verilog.git,2023-12-22 13:25:52+00:00,,0,Zameo08/verilog,734736637,Verilog,verilog,4,0,2023-12-22 14:09:16+00:00,[],None
105,https://github.com/Zameo08/test.git,2023-12-22 14:13:14+00:00,,0,Zameo08/test,734751536,Verilog,test,47,0,2023-12-22 14:15:55+00:00,[],None
106,https://github.com/josedelarosados/test.git,2023-12-22 21:13:27+00:00,,0,josedelarosados/test,734865787,Verilog,test,120936,0,2023-12-22 21:14:10+00:00,[],https://api.github.com/licenses/apache-2.0
107,https://github.com/lilxkush/digital-circuit.git,2023-12-24 09:48:34+00:00,,0,lilxkush/digital-circuit,735270277,Verilog,digital-circuit,992,0,2023-12-24 09:49:53+00:00,[],None
108,https://github.com/Amaryllis-YJY/CSC3050.git,2023-12-24 13:05:38+00:00,The Assignments of CSC3050 of AY2022-2023 Term 1,0,Amaryllis-YJY/CSC3050,735313158,Verilog,CSC3050,3804,0,2023-12-24 13:07:25+00:00,[],None
109,https://github.com/Tony-TTran/Hang_Man_FPGA.git,2023-12-21 23:29:07+00:00,Implemented the game of Hang_Man on an FPGA using Verilog,0,Tony-TTran/Hang_Man_FPGA,734529891,Verilog,Hang_Man_FPGA,6,0,2023-12-21 23:30:40+00:00,[],None
110,https://github.com/ASOKAN-MAXVY/asokan-AND-gate.git,2023-12-27 07:12:24+00:00,asokan And fate,0,ASOKAN-MAXVY/asokan-AND-gate,736171803,Verilog,asokan-AND-gate,11927,0,2023-12-27 07:13:05+00:00,[],https://api.github.com/licenses/apache-2.0
111,https://github.com/Ckdylon/PBL-CD-2-Problema.git,2023-12-28 02:57:23+00:00,"Problema 2: Batalha Naval Digital: Caike Dylon Lima de Matos, Camila de Araújo Bastos e Lucas de Andrade Pereira Mendes",0,Ckdylon/PBL-CD-2-Problema,736480025,Verilog,PBL-CD-2-Problema,29,0,2023-12-28 02:59:07+00:00,[],None
112,https://github.com/B10902046/CA2023.git,2023-12-29 07:55:50+00:00,,0,B10902046/CA2023,736903083,Verilog,CA2023,5140,0,2023-12-29 14:47:31+00:00,[],None
113,https://github.com/parangatm/LFSR-Associative-Memory.git,2023-12-28 11:13:41+00:00,"Verilog code for the LFSR-based Content-Addressable Memory, designed to improve the speed of conventional architecture",0,parangatm/LFSR-Associative-Memory,736607707,Verilog,LFSR-Associative-Memory,28,0,2023-12-30 03:10:25+00:00,[],None
114,https://github.com/dav3floyd/HDLBits-Problems-Set.git,2023-12-31 01:07:05+00:00,Practice problems for Verilog HDL,0,dav3floyd/HDLBits-Problems-Set,737422011,Verilog,HDLBits-Problems-Set,4202,0,2023-12-31 01:12:36+00:00,[],None
115,https://github.com/richardtan10176/16bit_processor.git,2023-12-31 21:03:26+00:00,,0,richardtan10176/16bit_processor,737634263,Verilog,16bit_processor,4,0,2023-12-31 21:54:23+00:00,[],None
116,https://github.com/Ashish-Chokhani/Pipelined-Processor-Architecture.git,2023-12-31 20:49:00+00:00,Implemented a full fledged processor architecture with 5 stage pipeline which includes support for eliminating pipeline hazards.,1,Ashish-Chokhani/Pipelined-Processor-Architecture,737632392,Verilog,Pipelined-Processor-Architecture,3478,0,2023-12-31 20:51:55+00:00,[],None
117,https://github.com/0xkerem/digital_design_of_calculator.git,2023-12-16 13:00:03+00:00,"This repository contains the source code and related materials for a digital calculator designed as a project for a 2023 digital design course. The project primarily uses Digital Tool (.dig) available at Digital Tool, and Icarus Verilog for simulation purposes.",0,0xkerem/digital_design_of_calculator,732369542,Verilog,digital_design_of_calculator,1981,0,2024-01-02 06:57:12+00:00,[],https://api.github.com/licenses/mit
118,https://github.com/kate-omi/MathAlarmClock.git,2024-01-02 03:14:21+00:00,Math Alarm Clock project written in Verilog for the Altera DE1-SoC FPGA board.,0,kate-omi/MathAlarmClock,737945959,Verilog,MathAlarmClock,39,0,2024-01-02 03:16:41+00:00,[],None
119,https://github.com/bonanyan/embark-rv.git,2024-01-01 16:22:22+00:00,Embark RISC-V: A Step-By-Step Tutorial for Building RISC-V Processor ,0,bonanyan/embark-rv,737823255,Verilog,embark-rv,4819,0,2024-01-01 16:34:19+00:00,[],https://api.github.com/licenses/mit
120,https://github.com/Zharasbek/3bit_binary-gray_counter.git,2024-01-02 13:39:46+00:00,Binary/Gray Code Counter circuit using Verilog and implementing d flip flop and jk flip flop.  ,0,Zharasbek/3bit_binary-gray_counter,738125882,Verilog,3bit_binary-gray_counter,1,0,2024-01-02 13:43:15+00:00,[],None
121,https://github.com/varunposimsetty/Full_Adder_Verilog.git,2024-01-02 13:38:58+00:00, Full Adder Implementation Using Two Half Adders in Verilog with Xilinx Vivado,0,varunposimsetty/Full_Adder_Verilog,738125616,Verilog,Full_Adder_Verilog,6,0,2024-01-02 13:48:19+00:00,[],None
122,https://github.com/laylamohsen/RISC-V-Processor.git,2024-01-03 16:56:18+00:00,Verilog code for a RISC-V processor. Supports all 40 RISC-V instructions + all additional multiplication and division instructions and their variations. Also uses a single memory for instructions and data.,0,laylamohsen/RISC-V-Processor,738625306,Verilog,RISC-V-Processor,12,0,2024-01-03 17:05:07+00:00,[],None
123,https://github.com/artecs-group/transpad.git,2024-01-05 16:13:10+00:00,Sample hardware address translator for hybrid cache-SPM systems,0,artecs-group/transpad,739461471,Verilog,transpad,44,0,2024-01-05 16:22:39+00:00,[],None
124,https://github.com/ALanStewart47/Altera_EP4CE10.git,2023-12-16 11:41:57+00:00,FPGA_Practice,0,ALanStewart47/Altera_EP4CE10,732350509,Verilog,Altera_EP4CE10,6119,0,2023-12-17 15:15:45+00:00,[],None
125,https://github.com/Rossetas/Verilog.git,2023-12-20 02:36:48+00:00,Este es un repositorio que proporciona una breve introducción al lenguaje Verilog. / This is a repository that provides a brief introduction to the Verilog language.,0,Rossetas/Verilog,733739264,Verilog,Verilog,2,0,2024-01-07 04:02:11+00:00,[],None
126,https://github.com/Retr0r0cket/OVERTURE.git,2024-01-05 01:18:12+00:00,My first computer architecture from Turing Complete.,0,Retr0r0cket/OVERTURE,739187998,Verilog,OVERTURE,25,0,2024-01-05 01:49:31+00:00,[],https://api.github.com/licenses/unlicense
127,https://github.com/rishabh4749/Slow_Decade_Counter.git,2024-01-03 09:28:41+00:00,,0,rishabh4749/Slow_Decade_Counter,738460954,Verilog,Slow_Decade_Counter,4,0,2024-01-13 14:56:24+00:00,[],None
128,https://github.com/aviel207/Final_Project.git,2023-12-18 10:59:26+00:00,,0,aviel207/Final_Project,733006976,Verilog,Final_Project,71970,0,2023-12-18 11:09:34+00:00,[],None
129,https://github.com/zhangxm99/InstructionFetch.git,2023-12-20 03:13:35+00:00,LZU riscv cpu IF stage code,0,zhangxm99/InstructionFetch,733747763,Verilog,InstructionFetch,48,0,2024-02-19 08:16:32+00:00,[],https://api.github.com/licenses/mit
130,https://github.com/jason890317/computer-architecture.git,2023-12-17 13:51:50+00:00,,0,jason890317/computer-architecture,732681090,Verilog,computer-architecture,27825,0,2024-03-14 13:18:18+00:00,[],None
131,https://github.com/prayogak/NodeCloud.git,2023-12-28 13:38:56+00:00,Simulasi modul Verilog 'Node' untuk representasi sederhana dalam sistem cloud.,0,prayogak/NodeCloud,736651029,Verilog,NodeCloud,4,0,2023-12-28 13:41:12+00:00,[],None
132,https://github.com/KOMOSYS/npu_iplib.git,2023-12-16 02:28:53+00:00,,0,KOMOSYS/npu_iplib,732236628,Verilog,npu_iplib,830,0,2024-03-18 04:43:40+00:00,[],None
133,https://github.com/pavan-deretard/First-computer.git,2023-12-30 04:37:15+00:00,,0,pavan-deretard/First-computer,737176958,Verilog,First-computer,19,0,2024-04-01 13:25:09+00:00,[],https://api.github.com/licenses/unlicense
134,https://github.com/Chaoyang2007/rs_dec_uvm.git,2024-01-03 15:05:20+00:00,"rs_dec, with uvm",0,Chaoyang2007/rs_dec_uvm,738583196,Verilog,rs_dec_uvm,121,0,2024-01-21 07:06:44+00:00,[],None
135,https://github.com/AjinkyaMore07/G13_VLSI.git,2023-12-24 11:45:39+00:00,,24,AjinkyaMore07/G13_VLSI,735295248,Verilog,G13_VLSI,6032,0,2024-02-11 14:20:59+00:00,[],None
136,https://github.com/Basilkhowaja/RISC-V-pipelined-processor.git,2023-12-23 16:11:49+00:00,,0,Basilkhowaja/RISC-V-pipelined-processor,735088246,Verilog,RISC-V-pipelined-processor,562,0,2024-04-06 16:05:44+00:00,[],None
137,https://github.com/liuutin9/Green_Cube.git,2023-12-19 15:47:47+00:00,,0,liuutin9/Green_Cube,733559769,Verilog,Green_Cube,53250,0,2024-01-12 03:08:39+00:00,[],None
138,https://github.com/yashk2530/FPU-Design-for-MIPS-Processor.git,2023-12-16 19:05:45+00:00,,0,yashk2530/FPU-Design-for-MIPS-Processor,732465699,Verilog,FPU-Design-for-MIPS-Processor,667,0,2023-12-16 19:19:00+00:00,[],None
139,https://github.com/vishwaskarale83/crypto-processor.git,2023-12-16 19:13:03+00:00,,0,vishwaskarale83/crypto-processor,732467345,Verilog,crypto-processor,50,0,2023-12-16 19:15:08+00:00,[],None
140,https://github.com/little612pea/FPGA-MAZE-2023DD-final.git,2023-12-19 07:58:52+00:00,,0,little612pea/FPGA-MAZE-2023DD-final,733385005,Verilog,FPGA-MAZE-2023DD-final,104,0,2023-12-19 08:02:36+00:00,[],None
141,https://github.com/KrawezG/iu4_verilog_2023.git,2023-12-16 17:20:58+00:00,,0,KrawezG/iu4_verilog_2023,732440365,Verilog,iu4_verilog_2023,11,0,2023-12-16 17:56:24+00:00,[],None
142,https://github.com/afasolino28/Test_23.12.19.git,2023-12-19 16:02:22+00:00,,0,afasolino28/Test_23.12.19,733565359,Verilog,Test_23.12.19,11927,0,2023-12-19 16:03:04+00:00,[],https://api.github.com/licenses/apache-2.0
143,https://github.com/RamChockalingam/16-Point-FFT.git,2023-12-27 03:13:55+00:00,,0,RamChockalingam/16-Point-FFT,736116599,Verilog,16-Point-FFT,2,0,2024-01-25 14:38:46+00:00,[],None
144,https://github.com/itsHamdySalem/Multipliers-Mania.git,2023-12-16 13:26:05+00:00,,1,itsHamdySalem/Multipliers-Mania,732376243,Verilog,Multipliers-Mania,17607,0,2024-01-25 17:39:01+00:00,[],None
145,https://github.com/coqzieiro/Central-Process-Unit.git,2023-12-31 13:28:34+00:00,Desenvolvimento de uma CPU,0,coqzieiro/Central-Process-Unit,737548586,Verilog,Central-Process-Unit,14423,0,2024-02-02 11:49:17+00:00,[],None
146,https://github.com/DuRuofu/HDLBits_Practies.git,2024-01-05 01:20:36+00:00,Learning  Verilog  in HDLBits website ,0,DuRuofu/HDLBits_Practies,739188548,Verilog,HDLBits_Practies,4,0,2024-01-08 14:20:17+00:00,[],None
147,https://github.com/matztron/easy_PAL.git,2023-12-18 19:34:48+00:00,"This is a simple, potentially naive PAL design and I want to tape it out! :)))))))",0,matztron/easy_PAL,733199066,Verilog,easy_PAL,817,0,2023-12-18 22:53:26+00:00,[],https://api.github.com/licenses/mit
148,https://github.com/PradhyumnaVA/adld_aat.git,2023-12-16 16:01:09+00:00,,0,PradhyumnaVA/adld_aat,732418566,Verilog,adld_aat,4641,0,2023-12-16 17:29:42+00:00,[],None
149,https://github.com/Pangisa/ECE287_finale_proj.git,2023-12-18 14:56:36+00:00,Pixel Drawer for DE2-115,0,Pangisa/ECE287_finale_proj,733096557,Verilog,ECE287_finale_proj,834,0,2023-12-18 15:39:24+00:00,[],None
150,https://github.com/SANGESH007/Cyclone_III-fpga-projects.git,2023-12-24 04:09:16+00:00,This Repository Contains Basic projects done in Altera Cyclone III FPGA,0,SANGESH007/Cyclone_III-fpga-projects,735209678,Verilog,Cyclone_III-fpga-projects,8,0,2023-12-24 04:57:13+00:00,[],None
151,https://github.com/dkargus/RGB2YCbCr_alt.git,2023-12-26 05:32:26+00:00,Just another RGB to YCbCr (YUV) converter,0,dkargus/RGB2YCbCr_alt,735797176,Verilog,RGB2YCbCr_alt,15,0,2023-12-26 05:48:58+00:00,[],https://api.github.com/licenses/gpl-3.0
152,https://github.com/Shwetakr08/RTL_CODING_100DAY.git,2023-12-19 08:50:45+00:00,,0,Shwetakr08/RTL_CODING_100DAY,733402873,Verilog,RTL_CODING_100DAY,11,0,2023-12-19 09:38:39+00:00,[],None
153,https://github.com/Russ420/SoCLab-ExtraLab.git,2023-12-16 17:56:56+00:00,,2,Russ420/SoCLab-ExtraLab,732449369,Verilog,SoCLab-ExtraLab,19187,0,2023-12-16 17:57:41+00:00,[],None
154,https://github.com/lianyuanbo/-Verilog-.git,2023-12-20 14:49:29+00:00,,0,lianyuanbo/-Verilog-,733968702,Verilog,-Verilog-,24,0,2023-12-20 14:52:00+00:00,[],None
155,https://github.com/Winter021/ECN_104-Verilog.git,2023-12-23 17:58:48+00:00,"Basic Verilog Programs of Turin Machine, MUX, Look up table (LUT), Not Gate Ring Oscillator etc.",0,Winter021/ECN_104-Verilog,735113955,Verilog,ECN_104-Verilog,6528,0,2023-12-23 17:59:31+00:00,[],None
156,https://github.com/xiaoshecode/uartspi.git,2023-12-19 09:22:47+00:00,,0,xiaoshecode/uartspi,733414273,Verilog,uartspi,296,0,2023-12-19 09:22:56+00:00,[],None
157,https://github.com/matty2048/TriangleConcreteMachine.git,2023-12-26 21:52:28+00:00,,0,matty2048/TriangleConcreteMachine,736060068,Verilog,TriangleConcreteMachine,2785,0,2023-12-26 21:52:45+00:00,[],None
158,https://github.com/Manikanta-1723/Router_1x3-project.git,2023-12-26 13:00:59+00:00,,0,Manikanta-1723/Router_1x3-project,735917341,Verilog,Router_1x3-project,12,0,2023-12-26 13:13:56+00:00,[],None
159,https://github.com/ayushiitk23/Alarm-clock.git,2023-12-27 07:33:15+00:00,,0,ayushiitk23/Alarm-clock,736177751,Verilog,Alarm-clock,1,0,2023-12-27 07:36:11+00:00,[],None
160,https://github.com/B-Ak-shay/100-DAYS-OF-RTL-Verilog-HDL-.git,2023-12-28 14:54:51+00:00,,0,B-Ak-shay/100-DAYS-OF-RTL-Verilog-HDL-,736675595,Verilog,100-DAYS-OF-RTL-Verilog-HDL-,2,0,2023-12-28 15:18:03+00:00,[],None
161,https://github.com/JianuoZhu/dlproj2.git,2023-12-17 07:05:23+00:00,database projectII,0,JianuoZhu/dlproj2,732586652,Verilog,dlproj2,5336,0,2023-12-26 18:56:16+00:00,[],None
162,https://github.com/Mustafasohail7/single_cycle_processor.git,2023-12-28 16:55:16+00:00,A single instruction processor designed according to RISC-V architecture,0,Mustafasohail7/single_cycle_processor,736713305,Verilog,single_cycle_processor,8,0,2023-12-28 17:58:37+00:00,[],None
163,https://github.com/Strivekaudani/CDC-FIFO.git,2023-12-28 20:07:21+00:00,Clock Domain Crossing FIFO,0,Strivekaudani/CDC-FIFO,736764026,Verilog,CDC-FIFO,632,0,2023-12-28 20:10:08+00:00,[],None
164,https://github.com/padhu125/Four-Function-8-bit-Calculator-unit-implement-on-the-DE10-Lite-KeyPad-HexBoard.git,2023-12-30 02:38:02+00:00,"Designed and implemented an eight-bit, four-function calculator using Verilog and Intel Quartus Prime Lite on the Intel DE-10 Lite FPGA board.",0,padhu125/Four-Function-8-bit-Calculator-unit-implement-on-the-DE10-Lite-KeyPad-HexBoard,737158699,Verilog,Four-Function-8-bit-Calculator-unit-implement-on-the-DE10-Lite-KeyPad-HexBoard,1703,0,2023-12-30 02:41:06+00:00,[],https://api.github.com/licenses/mit
165,https://github.com/ZhiyingZh/test.git,2024-01-01 16:31:28+00:00,,0,ZhiyingZh/test,737825569,Verilog,test,11927,0,2024-01-01 16:32:08+00:00,[],https://api.github.com/licenses/apache-2.0
166,https://github.com/jaewonlee16/Vending-machine.git,2023-12-31 08:58:04+00:00,A vending machine FSM implemented by verilog,0,jaewonlee16/Vending-machine,737495779,Verilog,Vending-machine,147,0,2023-12-31 09:21:14+00:00,[],None
167,https://github.com/ZeddBao/temp_ctrl.git,2024-01-02 14:59:29+00:00,复旦大学近代无线电实验基于 FPGA(EP3C25Q240C8) 实现 PID 温度控制器,0,ZeddBao/temp_ctrl,738155450,Verilog,temp_ctrl,8739,0,2024-01-02 15:12:21+00:00,"['ds18b20', 'fpga', 'fudan', 'pid', 'temperature-control', 'verilog', 'ep3c25q240c8']",None
168,https://github.com/EricWu1213/FPGA_PROJECT.git,2024-01-01 01:36:18+00:00,,0,EricWu1213/FPGA_PROJECT,737664751,Verilog,FPGA_PROJECT,98,0,2024-01-02 02:13:25+00:00,[],None
169,https://github.com/vakeesank99/Image_processing_on_ZYNQ.git,2024-01-04 03:40:48+00:00,convolution based image processing tasks can be applicable,0,vakeesank99/Image_processing_on_ZYNQ,738789074,Verilog,Image_processing_on_ZYNQ,254,0,2024-01-04 08:05:27+00:00,[],None
170,https://github.com/Awe1123/EDA_experiment.git,2023-12-21 05:12:11+00:00,EDA实验源代码,0,Awe1123/EDA_experiment,734194153,Verilog,EDA_experiment,478,0,2023-12-21 05:18:15+00:00,[],None
171,https://github.com/prayogak/VPNBuildEdu.git,2023-12-28 13:06:25+00:00,"Penjelasan mendalam mengenai pembuatan hardware VPN menggunakan Verilog, mencakup state machine, enkripsi, dekripsi, dan logika kontrol.",0,prayogak/VPNBuildEdu,736640737,Verilog,VPNBuildEdu,5,0,2023-12-28 13:53:12+00:00,[],None
172,https://github.com/Rahul-Cheruku/Verilog-Calculator-ASCII.git,2024-01-02 00:14:10+00:00,"Verilog Calculator which takes 8 bit ASCII char input, clk and a test bench which reads string of expersion from .txt file",0,Rahul-Cheruku/Verilog-Calculator-ASCII,737915116,Verilog,Verilog-Calculator-ASCII,12,0,2024-01-02 00:17:50+00:00,[],None
173,https://github.com/miya4649/Live_Audio_KV260_KR260_Template.git,2023-12-16 04:28:40+00:00,Live Audio and Live Video Example for AMD (Xilinx) Kria KV260 and KR260,0,miya4649/Live_Audio_KV260_KR260_Template,732256999,Verilog,Live_Audio_KV260_KR260_Template,37,0,2023-12-16 04:33:57+00:00,[],None
174,https://github.com/Qglddd111/ECE755_gnn.git,2023-12-17 09:50:53+00:00,ECE755_gnn图神经网络,0,Qglddd111/ECE755_gnn,732621265,Verilog,ECE755_gnn,42051,0,2023-12-17 09:58:52+00:00,[],None
175,https://github.com/elkw/EECS_251LA.git,2023-12-17 22:08:32+00:00,,0,elkw/EECS_251LA,732807921,Verilog,EECS_251LA,17690,0,2023-12-17 22:10:16+00:00,[],None
176,https://github.com/ASIFMUHAMMED756/Waveform-Generator-in-FPGA.git,2023-12-18 04:07:18+00:00,Development of waveform generator in spartan 6 FPGA using Numato Mimas v2 development board,0,ASIFMUHAMMED756/Waveform-Generator-in-FPGA,732877280,Verilog,Waveform-Generator-in-FPGA,823,0,2023-12-18 05:46:11+00:00,['fpga-design'],None
177,https://github.com/50049/Dlab.git,2023-12-18 04:03:46+00:00,,0,50049/Dlab,732876488,Verilog,Dlab,3,0,2023-12-18 04:10:44+00:00,[],None
178,https://github.com/AlaaTaha32/Overlapping-Sequence-Detector.git,2023-12-18 01:51:33+00:00,"a Verilog project that detect and count the number of overlapping ""1011"" sequences stored in a ROM. ",0,AlaaTaha32/Overlapping-Sequence-Detector,732847498,Verilog,Overlapping-Sequence-Detector,13,0,2023-12-18 01:54:58+00:00,[],None
179,https://github.com/chinafpga/litedram_p2.git,2023-12-21 01:06:19+00:00,,0,chinafpga/litedram_p2,734140077,Verilog,litedram_p2,1165,0,2023-12-21 02:17:13+00:00,[],None
180,https://github.com/YerraBhaskaraVaraPrasad/First_in_First_out.git,2023-12-23 06:07:50+00:00,"First-In-First-Out (FIFO) structures play a pivotal role in managing data flow within digital systems, offering a systematic approach to buffering and synchronizing data between asynchronous components.",0,YerraBhaskaraVaraPrasad/First_in_First_out,734951780,Verilog,First_in_First_out,4,0,2023-12-23 06:16:12+00:00,[],None
181,https://github.com/YoussefNasser11/Clock-Divider-by-PI.git,2023-12-22 03:59:17+00:00,,0,YoussefNasser11/Clock-Divider-by-PI,734581496,Verilog,Clock-Divider-by-PI,23,0,2023-12-22 04:11:54+00:00,[],https://api.github.com/licenses/gpl-3.0
182,https://github.com/philam2001/RISC_Machine.git,2023-12-23 02:21:07+00:00,A Verilog implementation of a simple Reduced Instruction Set Computing machine. ,0,philam2001/RISC_Machine,734914402,Verilog,RISC_Machine,2219,0,2023-12-23 20:25:22+00:00,[],None
183,https://github.com/JVIiracLe/MIPS.git,2023-12-27 16:38:09+00:00,,0,JVIiracLe/MIPS,736343382,Verilog,MIPS,7,0,2023-12-27 16:38:32+00:00,[],None
184,https://github.com/Linkyed/PBL2-CIRCUITOS-DIGITAIS.git,2023-12-28 01:09:15+00:00,,0,Linkyed/PBL2-CIRCUITOS-DIGITAIS,736459339,Verilog,PBL2-CIRCUITOS-DIGITAIS,2095,0,2023-12-28 01:09:26+00:00,[],None
185,https://github.com/seankooo/VLSI-Project.git,2023-12-28 05:45:53+00:00,,0,seankooo/VLSI-Project,736514967,Verilog,VLSI-Project,38368,0,2023-12-28 05:46:26+00:00,[],None
186,https://github.com/vyom-elan/Caravel_User_Project_Timer.git,2023-12-27 17:26:18+00:00,,0,vyom-elan/Caravel_User_Project_Timer,736361094,Verilog,Caravel_User_Project_Timer,2,0,2023-12-27 17:27:56+00:00,[],None
187,https://github.com/Tiru373/ALU.git,2023-12-29 16:16:25+00:00,,0,Tiru373/ALU,737040276,Verilog,ALU,3,0,2023-12-30 06:16:43+00:00,[],None
188,https://github.com/zevv/cic.git,2023-12-28 18:20:16+00:00,,0,zevv/cic,736737316,Verilog,cic,3537,0,2023-12-28 18:21:06+00:00,[],None
189,https://github.com/el21ycl/Verilog.git,2023-12-29 16:01:39+00:00,,0,el21ycl/Verilog,737036252,Verilog,Verilog,78341,0,2023-12-29 16:44:57+00:00,[],None
190,https://github.com/PythonLinks/Z80Class.git,2024-01-01 14:34:52+00:00,,0,PythonLinks/Z80Class,737796300,Verilog,Z80Class,6,0,2024-01-01 14:36:57+00:00,[],None
191,https://github.com/aroig1/Pipelined_Datapath.git,2024-01-02 00:30:26+00:00,,0,aroig1/Pipelined_Datapath,737917575,Verilog,Pipelined_Datapath,23540,0,2024-01-02 00:43:54+00:00,[],None
192,https://github.com/pinchihuang/shooting-game.git,2023-12-31 07:13:53+00:00,,1,pinchihuang/shooting-game,737477219,Verilog,shooting-game,8498,0,2023-12-31 07:26:56+00:00,[],None
193,https://github.com/AhsanM71/Combination-Lock.git,2024-01-02 19:07:38+00:00,Combination Lock created using Verilog,0,AhsanM71/Combination-Lock,738240999,Verilog,Combination-Lock,4,0,2024-01-02 19:09:27+00:00,[],None
194,https://github.com/akshayrao9708/reduced_restoring_divider.git,2024-01-02 20:31:27+00:00,,0,akshayrao9708/reduced_restoring_divider,738264428,Verilog,reduced_restoring_divider,1915,0,2024-01-02 20:47:49+00:00,[],None
195,https://github.com/Potassium-chromate/Snake.git,2023-12-28 03:41:53+00:00,Implement snake Game on FPGA,1,Potassium-chromate/Snake,736488654,Verilog,Snake,343,0,2023-12-28 03:47:36+00:00,[],None
196,https://github.com/emma16163/extra_labD.git,2024-01-03 13:19:42+00:00,,0,emma16163/extra_labD,738542183,Verilog,extra_labD,1618,0,2024-01-03 13:23:57+00:00,[],None
197,https://github.com/Mohanad-Bador/8259A_PIC.git,2023-12-16 19:32:56+00:00,,0,Mohanad-Bador/8259A_PIC,732471590,Verilog,8259A_PIC,28,0,2024-01-03 13:09:05+00:00,[],None
198,https://github.com/AhmedWaeI/InterruptController8259A-Verilog.git,2023-12-16 13:31:00+00:00,Implementing the interrupt controller using verilog,0,AhmedWaeI/InterruptController8259A-Verilog,732377516,Verilog,InterruptController8259A-Verilog,165,0,2024-01-03 17:46:48+00:00,[],None
199,https://github.com/TsingPig/SingleCPU.git,2024-01-04 01:01:39+00:00,,0,TsingPig/SingleCPU,738753554,Verilog,SingleCPU,4531,0,2024-01-04 01:08:27+00:00,[],None
200,https://github.com/jmstein7/MPL_Data_Collector.git,2024-01-04 14:39:06+00:00,Simple Data Collection,0,jmstein7/MPL_Data_Collector,738998737,Verilog,MPL_Data_Collector,16571,0,2024-01-04 14:55:41+00:00,[],None
201,https://github.com/thanhbien0402/LogicDesign.git,2024-01-04 07:43:36+00:00,,0,thanhbien0402/LogicDesign,738854072,Verilog,LogicDesign,6250,0,2024-01-05 05:34:23+00:00,[],None
202,https://github.com/wxxcl0825/DinoGame.git,2023-12-28 10:24:20+00:00,,0,wxxcl0825/DinoGame,736593257,Verilog,DinoGame,6034,0,2023-12-28 10:30:30+00:00,[],None
203,https://github.com/Mixih/NAIL.git,2023-12-25 00:07:25+00:00,Common cross-design FPGA IP modules,0,Mixih/NAIL,735440061,Verilog,NAIL,62,0,2024-01-09 06:28:54+00:00,[],https://api.github.com/licenses/cern-ohl-s-2.0
204,https://github.com/PadmayyagariMayavathi/100-Days-Challenge-RTL-Programming-.git,2023-12-27 05:13:57+00:00,Config files for my GitHub profile.,0,PadmayyagariMayavathi/100-Days-Challenge-RTL-Programming-,736140890,Verilog,100-Days-Challenge-RTL-Programming-,75,0,2023-12-27 05:55:44+00:00,"['config', 'github-config']",None
205,https://github.com/rishabh4749/JKFF.git,2024-01-01 05:48:27+00:00,,0,rishabh4749/JKFF,737695970,Verilog,JKFF,4,0,2024-01-13 14:50:25+00:00,[],None
206,https://github.com/rishabh4749/Decade_Counter_Reset1.git,2023-12-31 06:46:33+00:00,,0,rishabh4749/Decade_Counter_Reset1,737472395,Verilog,Decade_Counter_Reset1,4,0,2024-01-13 14:49:29+00:00,[],None
207,https://github.com/BAJANTRISIVA/-30daysofverilog.git,2023-12-28 05:09:56+00:00,,0,BAJANTRISIVA/-30daysofverilog,736506659,Verilog,-30daysofverilog,856,0,2023-12-28 05:20:30+00:00,[],None
208,https://github.com/Landom3562/Single-cycle_MIPS_implementation.git,2023-12-26 21:03:43+00:00,CENG311_Computer_Architecture_Programming_Assignment_3,0,Landom3562/Single-cycle_MIPS_implementation,736050604,Verilog,Single-cycle_MIPS_implementation,485,0,2024-02-12 10:56:44+00:00,[],None
209,https://github.com/jnaraujo/tec498_2023_2_projeto_03.git,2023-12-17 05:47:06+00:00,,0,jnaraujo/tec498_2023_2_projeto_03,732572213,Verilog,tec498_2023_2_projeto_03,1216,0,2024-01-15 15:29:32+00:00,[],None
210,https://github.com/xjh2000/craft_implementation.git,2023-12-24 13:51:33+00:00,Craft efficient implementation,0,xjh2000/craft_implementation,735324138,Verilog,craft_implementation,21303,0,2023-12-24 14:11:33+00:00,[],https://api.github.com/licenses/apache-2.0
211,https://github.com/ChrisJH95/verilog-project.git,2024-01-02 19:48:06+00:00,,0,ChrisJH95/verilog-project,738252573,Verilog,verilog-project,14,0,2024-01-02 19:48:12+00:00,[],https://api.github.com/licenses/apache-2.0
212,https://github.com/billauer/smartzynq-projects.git,2024-01-04 18:40:18+00:00,,0,billauer/smartzynq-projects,739088774,Verilog,smartzynq-projects,13024,0,2024-01-04 18:41:32+00:00,[],None
213,https://github.com/PierreBB2002/Multi-cycle-MIPS-RISC-Processor.git,2024-01-04 15:59:20+00:00,,0,PierreBB2002/Multi-cycle-MIPS-RISC-Processor,739029960,Verilog,Multi-cycle-MIPS-RISC-Processor,1125,0,2024-03-28 22:27:07+00:00,[],None
214,https://github.com/kwhr0/fz80.git,2023-12-21 03:28:04+00:00,,0,kwhr0/fz80,734170786,Verilog,fz80,12,0,2024-04-07 05:44:41+00:00,[],https://api.github.com/licenses/mit
215,https://github.com/thhongee/SoC_Lab_06.git,2023-12-16 08:44:01+00:00,,0,thhongee/SoC_Lab_06,732309352,Verilog,SoC_Lab_06,1691,0,2023-12-16 08:47:35+00:00,[],None
216,https://github.com/ZakWillCode/MultiSIKEles.git,2023-12-17 20:39:50+00:00,,0,ZakWillCode/MultiSIKEles,732790130,Verilog,MultiSIKEles,666,0,2023-12-17 20:42:54+00:00,[],None
217,https://github.com/quangnm4202/non_stop_ETC.git,2023-12-17 04:16:17+00:00,nonstopETC,0,quangnm4202/non_stop_ETC,732556694,Verilog,non_stop_ETC,3,0,2023-12-17 04:24:41+00:00,[],None
218,https://github.com/alb-x-n/Verilog-code.git,2023-12-17 07:38:04+00:00,,0,alb-x-n/Verilog-code,732593221,Verilog,Verilog-code,4,0,2023-12-17 07:40:57+00:00,[],None
219,https://github.com/DomnikBrandstetter/JKU_Demo.git,2023-12-18 08:02:10+00:00,,0,DomnikBrandstetter/JKU_Demo,732942413,Verilog,JKU_Demo,10,0,2023-12-18 08:02:16+00:00,[],https://api.github.com/licenses/apache-2.0
220,https://github.com/guepernt/ADD_Demos.git,2023-12-19 23:32:15+00:00,Digital Design Demos,0,guepernt/ADD_Demos,733700149,Verilog,ADD_Demos,150578,0,2023-12-19 23:40:12+00:00,[],None
221,https://github.com/userVincent/AXI_REG.git,2023-12-23 18:22:14+00:00,AXI register IP for KM-DFX reconfigurable partitions,0,userVincent/AXI_REG,735119433,Verilog,AXI_REG,15,0,2023-12-23 18:22:21+00:00,[],None
222,https://github.com/userVincent/KM-DFX_RP.git,2023-12-23 19:16:12+00:00,reconfigurable partition for KM-DFX system,0,userVincent/KM-DFX_RP,735130619,Verilog,KM-DFX_RP,853,0,2023-12-23 19:16:20+00:00,[],None
223,https://github.com/ibanespm/ALU-32BITS-ARM-IMPLEMTENTATION.git,2023-12-24 23:00:21+00:00,,0,ibanespm/ALU-32BITS-ARM-IMPLEMTENTATION,735432079,Verilog,ALU-32BITS-ARM-IMPLEMTENTATION,169,0,2023-12-24 23:58:07+00:00,[],None
224,https://github.com/Yuru-0630/Logic-Design-and-Laboratory-Experiments.git,2023-12-24 14:45:51+00:00,數位邏輯設計與實驗,0,Yuru-0630/Logic-Design-and-Laboratory-Experiments,735337538,Verilog,Logic-Design-and-Laboratory-Experiments,810,0,2023-12-26 02:29:12+00:00,[],None
225,https://github.com/Rahma-Aly/DSP-Slice.git,2023-12-26 11:44:54+00:00,DSP48E1 slice implementation using verilog,1,Rahma-Aly/DSP-Slice,735896060,Verilog,DSP-Slice,16,0,2023-12-26 12:44:44+00:00,[],None
226,https://github.com/maxeg291/DZ_verilog.git,2023-12-25 08:06:29+00:00,,0,maxeg291/DZ_verilog,735519834,Verilog,DZ_verilog,279,0,2023-12-25 08:10:18+00:00,[],None
227,https://github.com/panigantiTarun/Implementation-of-Single-Cycle-MIPS-Processor-on-Nexys4-DDR.git,2023-12-27 02:48:07+00:00,,0,panigantiTarun/Implementation-of-Single-Cycle-MIPS-Processor-on-Nexys4-DDR,736111415,Verilog,Implementation-of-Single-Cycle-MIPS-Processor-on-Nexys4-DDR,2356,0,2023-12-27 03:17:01+00:00,[],None
228,https://github.com/ASOKAN-MAXVY/8-BIT--ANALOG.git,2023-12-27 05:14:18+00:00,MY REPO ANALOG ,0,ASOKAN-MAXVY/8-BIT--ANALOG,736140969,Verilog,8-BIT--ANALOG,97,0,2023-12-27 05:14:24+00:00,[],https://api.github.com/licenses/apache-2.0
229,https://github.com/nenadstoisavljevic/verilog-piano.git,2023-12-26 18:31:17+00:00,A piano written in Verilog for Intel's DE1-SOC FPGA board.,0,nenadstoisavljevic/verilog-piano,736015344,Verilog,verilog-piano,67,0,2023-12-26 18:47:30+00:00,[],https://api.github.com/licenses/gpl-3.0
230,https://github.com/sunhaolou/Hardware-projects.git,2024-01-01 01:48:03+00:00,,0,sunhaolou/Hardware-projects,737665997,Verilog,Hardware-projects,19,0,2024-01-01 01:55:33+00:00,[],None
231,https://github.com/suga-vanam/tic-tac-toe.git,2024-01-02 09:36:08+00:00,,0,suga-vanam/tic-tac-toe,738045611,Verilog,tic-tac-toe,963,0,2024-01-02 09:41:50+00:00,[],None
232,https://github.com/Zharasbek/half_full_adder_multiplier.git,2024-01-02 14:05:20+00:00,"Implementation of half adder, full adder and multiplier.",0,Zharasbek/half_full_adder_multiplier,738135126,Verilog,half_full_adder_multiplier,2,0,2024-01-02 14:05:57+00:00,[],None
233,https://github.com/TranNguyenAnhKhoa/Square-root-algorithm-use-continous-assignment.git,2024-01-04 08:06:19+00:00,use pipeline technique for square-root algorithm.,0,TranNguyenAnhKhoa/Square-root-algorithm-use-continous-assignment,738861499,Verilog,Square-root-algorithm-use-continous-assignment,5,0,2024-01-04 08:08:39+00:00,[],None
234,https://github.com/LaiCharlie/NYCU-Computer-Organization.git,2024-01-04 08:58:15+00:00,111暑 蔡文錦 計算機組織,0,LaiCharlie/NYCU-Computer-Organization,738878972,Verilog,NYCU-Computer-Organization,2406,0,2024-01-04 12:47:10+00:00,"['nctu', 'nycu']",None
235,https://github.com/DoyleBellamy/TOBB_ETU_Computer_Architecture.git,2024-01-04 07:44:33+00:00,,0,DoyleBellamy/TOBB_ETU_Computer_Architecture,738854357,Verilog,TOBB_ETU_Computer_Architecture,1209,0,2024-01-04 07:44:43+00:00,[],None
236,https://github.com/Ignite2001/DOM_codev.git,2024-01-03 08:13:53+00:00,attempt,0,Ignite2001/DOM_codev,738435138,Verilog,DOM_codev,4,0,2024-01-04 06:29:44+00:00,[],None
237,https://github.com/IssacAmin/PIC-8259A.git,2024-01-02 22:16:30+00:00,Verilog Design for the pic 8259A,0,IssacAmin/PIC-8259A,738290238,Verilog,PIC-8259A,6,0,2024-01-02 22:19:00+00:00,[],None
238,https://github.com/Cheng-yang0513/FPGA-.git,2024-01-03 09:14:22+00:00,,0,Cheng-yang0513/FPGA-,738455662,Verilog,FPGA-,12,0,2024-01-03 10:00:35+00:00,[],None
239,https://github.com/pouree/extra_labD.git,2024-01-03 12:45:44+00:00,,0,pouree/extra_labD,738529969,Verilog,extra_labD,2281,0,2024-01-03 12:51:26+00:00,[],None
240,https://github.com/Onurkart/FB-CPU-RTL.git,2024-01-03 12:25:56+00:00,,0,Onurkart/FB-CPU-RTL,738522957,Verilog,FB-CPU-RTL,2462,0,2024-01-03 12:26:53+00:00,[],None
241,https://github.com/Azizburak2/FBU-CPU-PROJECT.git,2024-01-03 21:52:54+00:00,,0,Azizburak2/FBU-CPU-PROJECT,738714190,Verilog,FBU-CPU-PROJECT,751,0,2024-01-03 21:56:28+00:00,[],None
242,https://github.com/kchandrasek4/Pipelined_Proccesor.git,2024-01-03 20:38:46+00:00,,0,kchandrasek4/Pipelined_Proccesor,738695465,Verilog,Pipelined_Proccesor,254,0,2024-01-03 20:39:05+00:00,[],None
243,https://github.com/TonyHu2001s/UCAS-Advanced_DIC.git,2023-12-22 03:05:39+00:00,,0,TonyHu2001s/UCAS-Advanced_DIC,734570588,Verilog,UCAS-Advanced_DIC,18834,0,2023-12-22 03:26:23+00:00,[],None
244,https://github.com/RanaMohamad21/8259-PIC-Project.git,2023-12-21 12:41:48+00:00,,0,RanaMohamad21/8259-PIC-Project,734338473,Verilog,8259-PIC-Project,76,0,2024-01-08 03:41:10+00:00,[],None
245,https://github.com/JunnanLi/ThreeStage-Packet-Parser.git,2024-01-05 16:49:57+00:00,packet parser,0,JunnanLi/ThreeStage-Packet-Parser,739474547,Verilog,ThreeStage-Packet-Parser,29,0,2024-01-08 14:29:15+00:00,[],None
246,https://github.com/rishabh4749/Left_Right_Arithmetic_Shifter.git,2024-01-01 19:40:44+00:00,,0,rishabh4749/Left_Right_Arithmetic_Shifter,737869231,Verilog,Left_Right_Arithmetic_Shifter,4,0,2024-01-13 14:55:07+00:00,[],None
247,https://github.com/rishabh4749/DFF_Synchronous_Reset_2.git,2023-12-29 07:39:11+00:00,,0,rishabh4749/DFF_Synchronous_Reset_2,736898834,Verilog,DFF_Synchronous_Reset_2,4,0,2024-01-13 14:44:06+00:00,[],None
248,https://github.com/rishabh4749/DFF_Gate.git,2023-12-29 14:52:03+00:00,,0,rishabh4749/DFF_Gate,737016307,Verilog,DFF_Gate,4,0,2024-01-13 14:46:18+00:00,[],None
249,https://github.com/Hafsa1918/RISC_V.git,2024-01-03 16:01:30+00:00,,0,Hafsa1918/RISC_V,738604294,Verilog,RISC_V,22,0,2024-01-21 07:31:41+00:00,[],https://api.github.com/licenses/mit
250,https://github.com/frontcover/SKL_Radar_FPGA.git,2024-01-03 19:13:51+00:00,,0,frontcover/SKL_Radar_FPGA,738671227,,SKL_Radar_FPGA,636,0,2024-01-03 19:13:51+00:00,[],None
251,https://github.com/vyom-elan/Counter_caravel_project.git,2024-01-04 09:30:23+00:00,,0,vyom-elan/Counter_caravel_project,738889759,Verilog,Counter_caravel_project,11966,0,2024-01-25 06:35:45+00:00,[],https://api.github.com/licenses/apache-2.0
252,https://github.com/lbabeu/RISCVmicroprocessor.git,2023-12-16 21:00:20+00:00,RISC-V 32I Microprocessor Implemented in Verilog,0,lbabeu/RISCVmicroprocessor,732489660,Verilog,RISCVmicroprocessor,23,0,2023-12-16 21:01:04+00:00,[],https://api.github.com/licenses/agpl-3.0
253,https://github.com/WajeehaTahir/pipelined-rca.git,2023-12-23 11:56:38+00:00,,0,WajeehaTahir/pipelined-rca,735025627,Verilog,pipelined-rca,4,0,2024-02-05 16:40:57+00:00,[],None
254,https://github.com/Silviozv/PBL-Sistemas-Digitais-Interface-de-Entrada-e-Saida.git,2023-12-29 00:56:16+00:00,,0,Silviozv/PBL-Sistemas-Digitais-Interface-de-Entrada-e-Saida,736816922,,PBL-Sistemas-Digitais-Interface-de-Entrada-e-Saida,546774,0,2024-02-11 00:35:55+00:00,[],None
255,https://github.com/EdwardLeeMacau/computer_architecture.git,2023-12-27 09:31:26+00:00,,0,EdwardLeeMacau/computer_architecture,736211174,Verilog,computer_architecture,7653,0,2024-03-21 05:53:47+00:00,[],None
256,https://github.com/vncprado/COMP2003-devcontainer.git,2023-12-18 17:08:55+00:00,,0,vncprado/COMP2003-devcontainer,733149213,Verilog,COMP2003-devcontainer,5437,0,2024-01-04 18:31:36+00:00,[],None
257,https://github.com/nikhilrawat543/DigitalBhem-Image-Classification-Project.git,2023-12-17 12:28:34+00:00,,0,nikhilrawat543/DigitalBhem-Image-Classification-Project,732658750,Verilog,DigitalBhem-Image-Classification-Project,39130,0,2023-12-17 12:46:00+00:00,[],None
258,https://github.com/tien0709/DATKLL-TICTACTOE_GAME.git,2023-12-18 10:07:38+00:00,,0,tien0709/DATKLL-TICTACTOE_GAME,732987892,Verilog,DATKLL-TICTACTOE_GAME,4,0,2023-12-18 10:10:52+00:00,[],None
259,https://github.com/KushagraLPU/CadenceWork.git,2023-12-18 09:42:19+00:00,All verilog codes done on cadence platform,0,KushagraLPU/CadenceWork,732978346,Verilog,CadenceWork,14,0,2023-12-18 09:48:02+00:00,[],None
260,https://github.com/Refangs/fpga-projects-fa23-andi.git,2023-12-19 05:34:40+00:00,,0,Refangs/fpga-projects-fa23-andi,733341241,Verilog,fpga-projects-fa23-andi,287,0,2023-12-19 05:35:11+00:00,[],None
261,https://github.com/MrMisterial/tt05-FIR.git,2023-12-19 11:43:06+00:00,,0,MrMisterial/tt05-FIR,733464342,Verilog,tt05-FIR,25,0,2023-12-19 11:43:12+00:00,[],https://api.github.com/licenses/apache-2.0
262,https://github.com/gunjyo0817/FPGA-Writing-Machine.git,2024-01-01 07:45:05+00:00,FPGA Writing Machine,1,gunjyo0817/FPGA-Writing-Machine,737714803,Verilog,FPGA-Writing-Machine,12171,0,2024-01-19 08:34:26+00:00,[],None
263,https://github.com/chapelea/PacmanInVerilog.git,2023-12-18 00:31:28+00:00,,0,chapelea/PacmanInVerilog,732832593,Verilog,PacmanInVerilog,7757,0,2024-01-23 22:51:02+00:00,[],None
264,https://github.com/AndersonHsieh0330/cpu_8b_fpga.git,2024-01-01 10:07:55+00:00,8 bit softcore cpu vivado project targeting Arty-S7 50,0,AndersonHsieh0330/cpu_8b_fpga,737739657,Verilog,cpu_8b_fpga,579,0,2024-01-20 03:02:38+00:00,[],None
265,https://github.com/bhadmusm/CodeWord-Dectector-System.git,2024-01-04 19:33:47+00:00,,0,bhadmusm/CodeWord-Dectector-System,739106185,Verilog,CodeWord-Dectector-System,11,0,2024-01-04 19:35:16+00:00,[],None
266,https://github.com/abdallahahmed10/AES-project-.git,2023-12-23 04:46:05+00:00,Project for implementing Advanced Encryption Standard(AES) for 128-bit key according to NIST document. implemented using verlilog,0,abdallahahmed10/AES-project-,734936823,Verilog,AES-project-,41,0,2024-01-27 10:19:35+00:00,[],None
267,https://github.com/amraliraqi/ECE-3300---Digital-Circuit-Design-Using-Verilog-By-Anas-Salah-Eddin-.git,2023-12-31 00:58:53+00:00,I have self-studied the course ECE 3300 - Digital Circuit Design Using Verilog by Anas Salah Eddin on Youtube. I have written and uploaded the codes for the blocks described in the videos I have watched.,0,amraliraqi/ECE-3300---Digital-Circuit-Design-Using-Verilog-By-Anas-Salah-Eddin-,737421039,Verilog,ECE-3300---Digital-Circuit-Design-Using-Verilog-By-Anas-Salah-Eddin-,172,0,2024-01-31 19:46:30+00:00,[],None
268,https://github.com/nick-pilgrim/hello.git,2023-12-19 22:12:19+00:00,"This is Verilog module that displays ""Hello World"" on a 7-segment display on my FPGA prototype board. It converts the ASCII code that represents a letter or number to an array to be associated with LEDs on a 7-segment display in order to display that letter or number",0,nick-pilgrim/hello,733681931,Verilog,hello,6,0,2023-12-20 17:24:43+00:00,[],None
269,https://github.com/CuongTranMCU/RISC_V.git,2023-12-21 07:53:17+00:00,,0,CuongTranMCU/RISC_V,734241789,Verilog,RISC_V,3,0,2023-12-23 16:08:29+00:00,[],None
270,https://github.com/navnoorsingh0309/MIP32_Pipelined_Processor.git,2023-12-23 19:33:36+00:00,Processor based on MIP32 Instruction Set Architecture(ISA) which can perform basic arithmetic operations and logical operations and can perform conditional branching. This processor can store and read data from a bank of registers using pipelining.,0,navnoorsingh0309/MIP32_Pipelined_Processor,735133973,Verilog,MIP32_Pipelined_Processor,7,0,2023-12-23 19:34:18+00:00,[],None
271,https://github.com/eecsmap/ucb_eecs151_2023_sp_fpga_project.git,2023-12-25 00:43:30+00:00,,0,eecsmap/ucb_eecs151_2023_sp_fpga_project,735444183,Verilog,ucb_eecs151_2023_sp_fpga_project,7669,0,2023-12-25 00:47:43+00:00,[],None
272,https://github.com/ASOKAN-MAXVY/and-gate.git,2023-12-26 10:55:30+00:00,,0,ASOKAN-MAXVY/and-gate,735882903,Verilog,and-gate,11927,0,2023-12-26 10:56:12+00:00,[],https://api.github.com/licenses/apache-2.0
273,https://github.com/lvd0611/motor_ctrl_1.0.git,2023-12-26 09:04:38+00:00,,0,lvd0611/motor_ctrl_1.0,735852299,Verilog,motor_ctrl_1.0,14527,0,2023-12-27 02:34:35+00:00,[],None
274,https://github.com/ZAIN-ALI-02/SPI.git,2023-12-26 21:23:29+00:00,An open-source Verilog implementation of Serial Peripheral Interface protocol with simulation support for efficient data exchange.,0,ZAIN-ALI-02/SPI,736054481,Verilog,SPI,12,0,2023-12-26 21:38:33+00:00,[],None
275,https://github.com/WitheringRiser/BasicCPU.git,2023-12-29 03:21:42+00:00,,0,WitheringRiser/BasicCPU,736841765,Verilog,BasicCPU,31,0,2023-12-29 03:22:36+00:00,[],None
276,https://github.com/Adazaiya/A-CLOCK-WITH-FEATURES.git,2023-12-30 05:04:16+00:00,,0,Adazaiya/A-CLOCK-WITH-FEATURES,737181403,Verilog,A-CLOCK-WITH-FEATURES,8,0,2023-12-30 05:07:22+00:00,[],None
277,https://github.com/HoraceKuo/SoC-lab_D.git,2023-12-29 14:57:21+00:00,,0,HoraceKuo/SoC-lab_D,737017981,Verilog,SoC-lab_D,1491,0,2023-12-29 15:03:58+00:00,[],None
278,https://github.com/KuznetsovNick/PLIS.git,2024-01-02 15:30:29+00:00,,0,KuznetsovNick/PLIS,738166851,Verilog,PLIS,3,0,2024-01-02 15:34:10+00:00,[],None
279,https://github.com/eidHossam/8259A_PIC_Project.git,2024-01-02 15:09:08+00:00,,0,eidHossam/8259A_PIC_Project,738158992,Verilog,8259A_PIC_Project,20,0,2024-01-02 21:47:54+00:00,[],None
280,https://github.com/s110321038/-.git,2024-01-03 10:05:10+00:00,,0,s110321038/-,738474347,Verilog,-,1,0,2024-01-03 10:06:56+00:00,[],None
281,https://github.com/MohamedAlii59/PIC_8259A_CA_Project.git,2024-01-02 18:37:41+00:00,,0,MohamedAlii59/PIC_8259A_CA_Project,738232204,Verilog,PIC_8259A_CA_Project,19,0,2024-01-02 18:44:17+00:00,[],None
282,https://github.com/HossamTarek7/PROGRAMMABLE-INTERRUPT-CONTROLLER-8259A-.git,2023-12-20 15:33:35+00:00,,0,HossamTarek7/PROGRAMMABLE-INTERRUPT-CONTROLLER-8259A-,733985561,Verilog,PROGRAMMABLE-INTERRUPT-CONTROLLER-8259A-,28,0,2024-01-02 19:15:42+00:00,[],None
283,https://github.com/ycpranchu/IST.git,2024-01-04 16:49:45+00:00,Ray-Tracing Intersaction,0,ycpranchu/IST,739049345,Verilog,IST,3755,0,2024-01-04 16:52:10+00:00,[],None
284,https://github.com/nguyendaithien/convolution_line_buffer_verilog.git,2024-01-05 12:32:48+00:00,,0,nguyendaithien/convolution_line_buffer_verilog,739381282,Verilog,convolution_line_buffer_verilog,30,0,2024-01-05 12:34:38+00:00,[],None
285,https://github.com/yalevras/ece241.git,2024-01-02 19:11:42+00:00,,0,yalevras/ece241,738242147,Verilog,ece241,6,0,2024-01-08 05:40:24+00:00,[],None
286,https://github.com/cojocarucristian05/VerilogProiectFIC.git,2024-01-04 12:03:18+00:00,,0,cojocarucristian05/VerilogProiectFIC,738941710,Verilog,VerilogProiectFIC,31,0,2024-01-04 12:03:34+00:00,[],None
287,https://github.com/BulllsAndCowsss/verilog.git,2023-12-24 23:32:46+00:00,,0,BulllsAndCowsss/verilog,735436074,Verilog,verilog,6468,0,2023-12-27 06:36:17+00:00,[],https://api.github.com/licenses/mit
288,https://github.com/xthee0906/IC-lab-final.git,2023-12-30 04:11:26+00:00,,0,xthee0906/IC-lab-final,737172798,Verilog,IC-lab-final,4305,0,2024-01-05 15:20:52+00:00,[],None
289,https://github.com/engstad/xcrunner-cpld.git,2023-12-26 07:05:11+00:00,,0,engstad/xcrunner-cpld,735820325,Verilog,xcrunner-cpld,4,0,2024-01-13 06:43:11+00:00,[],None
290,https://github.com/tms4517/DE1-SoC-Projects.git,2024-01-03 21:28:54+00:00,This repository contains simple projects that have been implemented to gain a better understanding  of the architecture of the DE1-SoC board.,0,tms4517/DE1-SoC-Projects,738708596,Verilog,DE1-SoC-Projects,2471,0,2024-01-22 17:08:51+00:00,[],None
291,https://github.com/Foolock/C-PASTA.git,2023-12-31 01:13:04+00:00,,0,Foolock/C-PASTA,737422728,Verilog,C-PASTA,103819,0,2024-01-01 17:11:42+00:00,[],None
292,https://github.com/AbrarShaikh/RISC-V-Design.git,2023-12-17 19:12:08+00:00,,1,AbrarShaikh/RISC-V-Design,732769907,Verilog,RISC-V-Design,16349,0,2024-01-19 15:13:56+00:00,[],None
293,https://github.com/Fossum2523/Digital-IC-Contest.git,2024-01-05 09:21:10+00:00,,0,Fossum2523/Digital-IC-Contest,739316464,Verilog,Digital-IC-Contest,489629,0,2024-01-19 17:12:11+00:00,[],None
294,https://github.com/RVECE-A-RISC-V-Community/SWIS-V.git,2023-12-30 04:58:29+00:00,A Single Cycle RISC-V core supporting RV32I Instruction Set.,1,RVECE-A-RISC-V-Community/SWIS-V,737180539,Verilog,SWIS-V,54,0,2023-12-30 05:20:22+00:00,[],https://api.github.com/licenses/mit
295,https://github.com/TMaTTeO99/verilog_circuits.git,2023-12-22 20:15:47+00:00,some examples of Verilog circuits,0,TMaTTeO99/verilog_circuits,734853520,Verilog,verilog_circuits,10,0,2023-12-22 20:22:26+00:00,[],None
296,https://github.com/pjsheth354/8-bit-RISC-Pipelined-CPU.git,2023-12-22 21:03:16+00:00,,0,pjsheth354/8-bit-RISC-Pipelined-CPU,734863685,Verilog,8-bit-RISC-Pipelined-CPU,3446,0,2023-12-22 21:07:00+00:00,[],None
297,https://github.com/josedelarosados/comps.git,2023-12-22 21:16:18+00:00,,0,josedelarosados/comps,734866423,Verilog,comps,120502,0,2023-12-22 21:16:57+00:00,[],https://api.github.com/licenses/apache-2.0
298,https://github.com/itsramazain/vlsi_course_assignment.git,2023-12-22 13:01:31+00:00,,0,itsramazain/vlsi_course_assignment,734728740,Verilog,vlsi_course_assignment,33,0,2023-12-23 20:14:02+00:00,[],None
299,https://github.com/Sasisekhar/VLSI_MAC.git,2023-12-23 12:51:03+00:00,,0,Sasisekhar/VLSI_MAC,735037945,Verilog,VLSI_MAC,2,0,2023-12-23 12:51:36+00:00,[],None
300,https://github.com/DeepLogicCore/FPGA-IIC.git,2023-12-23 06:52:27+00:00,,0,DeepLogicCore/FPGA-IIC,734960604,Verilog,FPGA-IIC,9,0,2023-12-23 06:52:55+00:00,[],None
301,https://github.com/Nilesh002/Pipelined_RCA.git,2023-12-23 16:09:57+00:00,4-Bit Pipelined Ripple Carry Adder,0,Nilesh002/Pipelined_RCA,735087806,Verilog,Pipelined_RCA,105,0,2023-12-23 16:11:38+00:00,[],https://api.github.com/licenses/mit
302,https://github.com/hamsternz/xadc_verilog_help.git,2023-12-24 07:32:01+00:00,,0,hamsternz/xadc_verilog_help,735243542,Verilog,xadc_verilog_help,18,0,2023-12-25 07:31:59+00:00,[],None
303,https://github.com/rinkwork/verilog_basic.git,2023-12-25 04:29:09+00:00,,0,rinkwork/verilog_basic,735476251,Verilog,verilog_basic,3,0,2023-12-25 04:34:28+00:00,[],None
304,https://github.com/SalehMousavi/CarRacer.git,2023-12-25 14:07:23+00:00,A car racing game programmed in Verilog for implementation on an DE1-SOC FPGA,0,SalehMousavi/CarRacer,735603494,Verilog,CarRacer,29,0,2023-12-25 14:37:01+00:00,[],None
305,https://github.com/rjujjav/Quantum-Emulator-ASIC-Design.git,2023-12-26 19:18:00+00:00,,0,rjujjav/Quantum-Emulator-ASIC-Design,736027106,Verilog,Quantum-Emulator-ASIC-Design,11767,0,2023-12-26 19:20:55+00:00,[],None
306,https://github.com/dengwenyi88/bus-test.git,2023-12-25 10:12:05+00:00,,0,dengwenyi88/bus-test,735548742,Verilog,bus-test,188,0,2023-12-25 10:14:04+00:00,[],https://api.github.com/licenses/mit
307,https://github.com/Pizza3368/CPEN-311---Computer-Architecture-II-.git,2023-12-27 07:00:51+00:00,"Code written for CPEN 311 class. I furthered my understanding of system verilog. The use of FSM, on chip and off chip memory with FPGA and etc. ",0,Pizza3368/CPEN-311---Computer-Architecture-II-,736168678,Verilog,CPEN-311---Computer-Architecture-II-,9986,0,2023-12-27 07:56:58+00:00,[],None
308,https://github.com/Tang-KJ/EDA.git,2023-12-28 02:52:03+00:00,The codes are the homework for the THU experiment with FPGA,0,Tang-KJ/EDA,736479016,Verilog,EDA,9,0,2023-12-28 03:36:51+00:00,[],None
309,https://github.com/liaoyunkun/SM4-RTL.git,2023-12-28 05:30:24+00:00,,0,liaoyunkun/SM4-RTL,736511240,Verilog,SM4-RTL,20,0,2023-12-28 05:47:14+00:00,[],None
310,https://github.com/Tanishqgithub/Design-of-RISC-V-Single-Cycle-Processor-using-Verilog-.git,2023-12-28 04:15:23+00:00,This Repository is a step wise design of RISC-V Single cycle processor .,0,Tanishqgithub/Design-of-RISC-V-Single-Cycle-Processor-using-Verilog-,736495476,Verilog,Design-of-RISC-V-Single-Cycle-Processor-using-Verilog-,11,0,2023-12-28 05:48:55+00:00,[],None
311,https://github.com/ayaahmed20018414/8-Bit-ALU-Core.git,2023-12-26 23:50:30+00:00,,0,ayaahmed20018414/8-Bit-ALU-Core,736080011,Verilog,8-Bit-ALU-Core,49,0,2023-12-27 20:10:41+00:00,[],None
312,https://github.com/dengwenyi88/azpr-cpu.git,2023-12-17 14:10:49+00:00,,0,dengwenyi88/azpr-cpu,732686420,Verilog,azpr-cpu,112,0,2023-12-17 14:12:24+00:00,[],https://api.github.com/licenses/mit
313,https://github.com/chuanjunzhang/Verilog-design-example.git,2023-12-28 05:46:31+00:00,Verilog经典手撕代码、进阶设计示例,0,chuanjunzhang/Verilog-design-example,736515106,Verilog,Verilog-design-example,37,0,2023-12-28 06:03:04+00:00,[],None
314,https://github.com/Strivekaudani/Program-Counter.git,2023-12-28 18:40:56+00:00,Program Counter for MIPS processor,0,Strivekaudani/Program-Counter,736742693,Verilog,Program-Counter,1,0,2023-12-28 18:44:53+00:00,[],None
315,https://github.com/jdakrofi/FPGA_MIPS_SingleCycle.git,2024-01-01 14:35:32+00:00,,0,jdakrofi/FPGA_MIPS_SingleCycle,737796485,Verilog,FPGA_MIPS_SingleCycle,9,0,2024-01-01 14:37:59+00:00,[],None
316,https://github.com/ryandc-yeo/FPGA-Slot-Machine.git,2023-12-18 12:25:54+00:00,"A slot machine created written in Verilog. Built, simulated, synthesized, and implemented in Vivado on the Xilinx Basys 3 board.",0,ryandc-yeo/FPGA-Slot-Machine,733037706,Verilog,FPGA-Slot-Machine,12,0,2023-12-18 12:31:16+00:00,[],None
317,https://github.com/lazybear0425/FPGA-project-111321019-111321035.git,2023-12-31 06:09:01+00:00,,0,lazybear0425/FPGA-project-111321019-111321035,737466002,Verilog,FPGA-project-111321019-111321035,22192,0,2023-12-31 07:49:12+00:00,[],None
318,https://github.com/FIUSCIS-CDA/Sixteen.git,2024-01-03 19:26:02+00:00,Constant 16,0,FIUSCIS-CDA/Sixteen,738674935,Verilog,Sixteen,14,0,2024-01-03 19:51:07+00:00,[],https://api.github.com/licenses/mit
319,https://github.com/gcpadua/VerilogHDLCacheSubSystem.git,2024-01-03 18:19:08+00:00,,0,gcpadua/VerilogHDLCacheSubSystem,738654066,Verilog,VerilogHDLCacheSubSystem,31,0,2024-01-03 18:40:55+00:00,[],https://api.github.com/licenses/gpl-3.0
320,https://github.com/kimiaghorbani/logic-system-design1.git,2024-01-03 16:54:44+00:00,,0,kimiaghorbani/logic-system-design1,738624705,Verilog,logic-system-design1,1196,0,2024-01-03 17:03:12+00:00,[],None
321,https://github.com/zayedu/Verilog-Combination-Lock.git,2024-01-05 05:03:28+00:00,,0,zayedu/Verilog-Combination-Lock,739238867,Verilog,Verilog-Combination-Lock,7787,0,2024-01-05 05:09:36+00:00,[],None
322,https://github.com/Saaaaaaaaaaaaaaaari/-FPGA-.git,2024-01-05 07:27:22+00:00,利用FPGA實踐的8X8點矩陣小遊戲,0,Saaaaaaaaaaaaaaaari/-FPGA-,739279924,Verilog,-FPGA-,2057,0,2024-01-05 07:28:03+00:00,[],None
323,https://github.com/Asad674/Pipelined-RISC-V-Integer-Scalar-Unit.git,2024-01-05 12:17:27+00:00,,0,Asad674/Pipelined-RISC-V-Integer-Scalar-Unit,739376143,Verilog,Pipelined-RISC-V-Integer-Scalar-Unit,12,0,2024-01-05 12:20:39+00:00,[],None
324,https://github.com/pingi0131/FPGA_tetris.git,2024-01-05 08:11:17+00:00,,1,pingi0131/FPGA_tetris,739293294,Verilog,FPGA_tetris,27984,0,2024-01-05 13:46:15+00:00,[],https://api.github.com/licenses/lgpl-2.1
325,https://github.com/PriscillaJCorn/Top-module.git,2024-01-05 14:38:03+00:00,,0,PriscillaJCorn/Top-module,739425775,Verilog,Top-module,25,0,2024-01-05 15:24:05+00:00,[],None
326,https://github.com/ShengxiLiang/EdgeDetect_Sobel_RealTIme.git,2023-12-16 07:08:47+00:00,,0,ShengxiLiang/EdgeDetect_Sobel_RealTIme,732289035,Verilog,EdgeDetect_Sobel_RealTIme,6648,0,2023-12-16 07:13:26+00:00,[],None
327,https://github.com/Ponponri/SOC_Design_LabD.git,2023-12-17 14:06:17+00:00,,0,Ponponri/SOC_Design_LabD,732685107,Verilog,SOC_Design_LabD,961,0,2023-12-17 14:20:07+00:00,[],None
328,https://github.com/Sumit0976/Traffic-Light-Controller.git,2023-12-16 12:59:47+00:00,Traffic Light Controller using Verilog done  in Vivado,0,Sumit0976/Traffic-Light-Controller,732369475,Verilog,Traffic-Light-Controller,62,0,2023-12-16 13:27:33+00:00,"['verilog-code', 'verilog-project']",None
329,https://github.com/shabbarvejlani/sudoku_cocotb.git,2023-12-16 21:37:17+00:00,cocotb bench to verify sudoku rtl code,0,shabbarvejlani/sudoku_cocotb,732496541,Verilog,sudoku_cocotb,11,0,2023-12-16 21:38:26+00:00,[],None
330,https://github.com/NicoCasas/Tp2_Arqui.git,2023-12-18 03:39:22+00:00,Repositorio con el tp2 de Arquitectura. Es un módulo UART,0,NicoCasas/Tp2_Arqui,732871187,Verilog,Tp2_Arqui,15,0,2023-12-18 03:42:40+00:00,[],None
331,https://github.com/Sooyoungk01/etri2018.git,2023-12-19 15:32:16+00:00,,0,Sooyoungk01/etri2018,733553845,Verilog,etri2018,3143,0,2023-12-19 15:35:02+00:00,[],None
332,https://github.com/PolashDeb/Design---implementation-of-a-system-on-chip-for-EEG-pattern-on-FPGA.git,2023-12-21 08:02:34+00:00,In this work filter & feature extractor were implemented for analyzing EEG on Field Programmable Gate Array (FPGA). The simulation process was done by using ISim which used Verilog. All processes were implemented and designed by using Xilinx ISE Suite 14.7 & Quartus prime 17.1 Lite Edition software.,0,PolashDeb/Design---implementation-of-a-system-on-chip-for-EEG-pattern-on-FPGA,734244668,Verilog,Design---implementation-of-a-system-on-chip-for-EEG-pattern-on-FPGA,11868,0,2023-12-21 08:04:45+00:00,[],None
333,https://github.com/TeHsunWang/Single-Cycle-Processor.git,2023-12-16 08:20:07+00:00,,0,TeHsunWang/Single-Cycle-Processor,732304140,Verilog,Single-Cycle-Processor,959,0,2023-12-21 09:21:49+00:00,[],None
334,https://github.com/andyfremont/vendingmachine.git,2023-12-21 05:41:50+00:00,,0,andyfremont/vendingmachine,734201636,Verilog,vendingmachine,2301,0,2023-12-21 05:42:07+00:00,[],None
335,https://github.com/gomadoufu/cpu-starting-from-scratch.git,2023-12-27 01:11:10+00:00,,0,gomadoufu/cpu-starting-from-scratch,736093389,Verilog,cpu-starting-from-scratch,24,0,2023-12-27 07:29:48+00:00,[],None
336,https://github.com/irya-senshi/Multipliers-in-Verilog.git,2023-12-21 05:18:06+00:00,Verilog Multiplier Implementation,0,irya-senshi/Multipliers-in-Verilog,734195709,Verilog,Multipliers-in-Verilog,15,0,2024-01-16 06:40:42+00:00,"['booth-multiplier', 'multipliers', 'verilog-project']",None
337,https://github.com/ujjwal-2001/HDL-Bits-Solutions.git,2023-12-16 15:56:32+00:00,,0,ujjwal-2001/HDL-Bits-Solutions,732417406,Verilog,HDL-Bits-Solutions,9,0,2023-12-16 16:28:10+00:00,[],None
338,https://github.com/baselkelziye/riscv32im_pipelined_cpu.git,2023-12-28 13:15:44+00:00,,0,baselkelziye/riscv32im_pipelined_cpu,736643598,Verilog,riscv32im_pipelined_cpu,8988,0,2024-01-16 12:20:48+00:00,[],None
339,https://github.com/histefan/tiny-tapeout-snake.git,2023-12-17 15:22:49+00:00,,0,histefan/tiny-tapeout-snake,732707225,Verilog,tiny-tapeout-snake,4011,0,2023-12-17 15:22:54+00:00,[],https://api.github.com/licenses/apache-2.0
340,https://github.com/SakethGajawada/Transformers.git,2024-01-04 18:02:09+00:00,,0,SakethGajawada/Transformers,739076024,Verilog,Transformers,13,0,2024-01-13 10:11:11+00:00,[],None
341,https://github.com/usmank23/RTL_Codes.git,2023-12-24 03:03:15+00:00,I'll upload my verilog codes here.,0,usmank23/RTL_Codes,735200422,Verilog,RTL_Codes,83,0,2024-01-03 05:04:56+00:00,[],None
342,https://github.com/XHuiWang/SDU_Multi_Cycle.git,2023-12-19 08:03:49+00:00,可串行调试的多周期CPU,0,XHuiWang/SDU_Multi_Cycle,733386544,Verilog,SDU_Multi_Cycle,34,0,2024-02-01 07:56:21+00:00,[],None
343,https://github.com/imrun10/VerilogProcessor.git,2024-01-01 18:06:21+00:00,Creating a processor using Verilog HDL & a Python script.,0,imrun10/VerilogProcessor,737848741,Verilog,VerilogProcessor,1976,0,2024-02-09 15:14:27+00:00,"['processor', 'python', 'verilog']",None
344,https://github.com/Nehara831/Processor-for-Image-Convolution.git,2023-12-21 04:03:56+00:00,,1,Nehara831/Processor-for-Image-Convolution,734178631,Verilog,Processor-for-Image-Convolution,39017,0,2024-01-10 16:00:35+00:00,[],None
345,https://github.com/jacquygis/IIC_Template.git,2023-12-17 15:01:28+00:00,,0,jacquygis/IIC_Template,732701013,Verilog,IIC_Template,73,0,2023-12-17 15:01:34+00:00,[],https://api.github.com/licenses/apache-2.0
346,https://github.com/mason30114/ICLab.git,2024-01-04 06:38:10+00:00,,0,mason30114/ICLab,738833618,Verilog,ICLab,18016,0,2024-04-02 10:25:14+00:00,[],None
347,https://github.com/Mightlaus/CLA-full-adder.git,2023-12-16 07:25:09+00:00,A high-performance and versatile carry-lookahead (CLA) full adder designed for rapid addition of arbitrary x^y bit inputs.,0,Mightlaus/CLA-full-adder,732292688,Verilog,CLA-full-adder,19,0,2023-12-16 07:38:18+00:00,"['adder', 'digital-circuits', 'high-performance', 'verilog']",https://api.github.com/licenses/gpl-3.0
348,https://github.com/hhh2639168682/parctice.git,2023-12-18 01:40:30+00:00,,0,hhh2639168682/parctice,732845310,Verilog,parctice,9,0,2023-12-18 01:47:04+00:00,[],None
349,https://github.com/SumanthKumarM/RISCV-Processor.git,2023-12-16 11:15:18+00:00,RISC-V processor with R-type instruction has been designed using Verilog HDL in Gate level and Data flow abstraction.  ,0,SumanthKumarM/RISCV-Processor,732344160,Verilog,RISCV-Processor,140,0,2023-12-16 11:19:41+00:00,[],None
350,https://github.com/This-is-available/CPU-Design-and-Application-Programs.git,2023-12-20 10:23:55+00:00,A course project of Computer Organization and Design Honored. This project is a teamwork of me and my teammate Yuanyuan Xu,0,This-is-available/CPU-Design-and-Application-Programs,733873635,Verilog,CPU-Design-and-Application-Programs,94858,0,2023-12-20 10:30:01+00:00,[],None
351,https://github.com/Omaghrabi26/DSP_SLICE.git,2023-12-18 23:06:31+00:00,Implementation of DSP Slice,0,Omaghrabi26/DSP_SLICE,733254478,Verilog,DSP_SLICE,28,0,2023-12-22 00:50:05+00:00,[],None
352,https://github.com/VarrianRin/Verilog_MIPT.git,2023-12-20 02:28:11+00:00,homework on FPGA lessons at MIPT,0,VarrianRin/Verilog_MIPT,733737312,Verilog,Verilog_MIPT,32,0,2023-12-21 03:16:21+00:00,[],None
353,https://github.com/Narukara/ModelComputer.git,2023-12-22 12:28:59+00:00,a toy Instruction Set Architecture,0,Narukara/ModelComputer,734718997,Verilog,ModelComputer,594,0,2023-12-22 12:33:07+00:00,[],None
354,https://github.com/Dhruv6730/Verilog-based-parking-system.git,2023-12-21 12:29:07+00:00,,0,Dhruv6730/Verilog-based-parking-system,734334426,Verilog,Verilog-based-parking-system,609,0,2023-12-24 17:27:12+00:00,"['fpga', 'fpga-programming', 'verilog']",https://api.github.com/licenses/mit
355,https://github.com/varuns31/Risc5-Pipelined-Processor.git,2023-12-24 05:00:51+00:00,Pipelined Processor adhering to RISC5-M ,0,varuns31/Risc5-Pipelined-Processor,735217444,Verilog,Risc5-Pipelined-Processor,158,0,2023-12-24 05:05:47+00:00,[],None
356,https://github.com/jwwang2003/SingleCycleMIPSCPU.git,2023-12-26 05:23:37+00:00,,0,jwwang2003/SingleCycleMIPSCPU,735795279,Verilog,SingleCycleMIPSCPU,132470,0,2023-12-26 05:31:20+00:00,[],None
357,https://github.com/Muzamil-Sikander/coal-lab6.git,2023-12-26 08:19:05+00:00,,0,Muzamil-Sikander/coal-lab6,735839781,Verilog,coal-lab6,1,0,2023-12-26 08:19:55+00:00,[],None
358,https://github.com/KishorKumar0/N-bit-Adder.git,2023-12-25 18:36:24+00:00,,0,KishorKumar0/N-bit-Adder,735666063,Verilog,N-bit-Adder,120,0,2023-12-25 18:37:12+00:00,[],None
359,https://github.com/kiarashgb11/Digital-Game-System---FPGA-Development.git,2023-12-26 18:15:30+00:00,,0,kiarashgb11/Digital-Game-System---FPGA-Development,736011097,Verilog,Digital-Game-System---FPGA-Development,255,0,2023-12-26 18:17:30+00:00,[],None
360,https://github.com/Alexm-picard/ECE473_proc.git,2023-12-26 15:33:10+00:00,,0,Alexm-picard/ECE473_proc,735963541,Verilog,ECE473_proc,3164,0,2023-12-26 15:34:41+00:00,[],None
361,https://github.com/joshuanieh/CVSD_Final_QR_Decomposition.git,2023-12-25 04:39:59+00:00,,0,joshuanieh/CVSD_Final_QR_Decomposition,735477911,Verilog,CVSD_Final_QR_Decomposition,11585,0,2023-12-25 04:41:33+00:00,[],None
362,https://github.com/OssamaJamalEddin/FB-CPU-Project-MONM-GROUP-.git,2023-12-27 10:39:13+00:00,,0,OssamaJamalEddin/FB-CPU-Project-MONM-GROUP-,736231439,Verilog,FB-CPU-Project-MONM-GROUP-,2,0,2023-12-27 10:39:35+00:00,[],None
363,https://github.com/CNStanLee/RVFPGA_CAN.git,2023-12-25 23:06:13+00:00,,0,CNStanLee/RVFPGA_CAN,735710533,Verilog,RVFPGA_CAN,82,0,2023-12-27 12:10:07+00:00,[],None
364,https://github.com/LordAdamsy/Pipeline_CPU.git,2023-12-26 13:01:43+00:00,,0,LordAdamsy/Pipeline_CPU,735917549,Verilog,Pipeline_CPU,269,0,2023-12-26 13:03:23+00:00,[],None
365,https://github.com/asgarisepide/LoopFilter_PLL.git,2023-12-28 02:34:15+00:00,,0,asgarisepide/LoopFilter_PLL,736475419,Verilog,LoopFilter_PLL,3,0,2023-12-28 02:35:04+00:00,[],None
366,https://github.com/TwingleMora/8Bit-ALU.git,2023-12-29 04:28:54+00:00,,0,TwingleMora/8Bit-ALU,736854306,Verilog,8Bit-ALU,1052,0,2023-12-29 04:37:24+00:00,[],None
367,https://github.com/Hamikha/VerilogFFLatchesRepo.git,2023-12-29 16:44:27+00:00,VerilogFFLatchesRepo: A collection of Verilog files showcasing various flip-flops and latches designs for digital circuit implementations.,0,Hamikha/VerilogFFLatchesRepo,737047912,Verilog,VerilogFFLatchesRepo,3,0,2023-12-29 16:46:17+00:00,[],None
368,https://github.com/jacorui/pproj.git,2023-12-28 18:49:08+00:00,,0,jacorui/pproj,736744920,Verilog,pproj,1648,0,2023-12-29 22:02:33+00:00,[],None
369,https://github.com/MunadEAli/SerialHardwareMultiplier.git,2024-01-02 19:03:49+00:00,A flexible serial multiplier using an Algorithmic State Machine for varying operand lengths.,0,MunadEAli/SerialHardwareMultiplier,738239834,Verilog,SerialHardwareMultiplier,915,0,2024-01-02 19:13:04+00:00,[],None
370,https://github.com/Shengach/IoT_Data_Filter.git,2024-01-02 10:14:28+00:00,,0,Shengach/IoT_Data_Filter,738058264,Verilog,IoT_Data_Filter,311,0,2024-01-02 12:31:11+00:00,[],None
371,https://github.com/youssef47048/8_Bit_ALU.git,2023-12-31 01:00:57+00:00,Building 8_Bit_Alu in structural and behavioral techniques Using modelsim and Quartus softwares and analyize the time and power consumption of the design. ,0,youssef47048/8_Bit_ALU,737421302,Verilog,8_Bit_ALU,732,0,2023-12-31 01:15:41+00:00,[],None
372,https://github.com/YoussefPr0jects/DigitalSystemsProjects.git,2023-12-25 12:42:33+00:00,"This section contains laboratory reports done by my classmate and I. It covers mainly the programming (Verilog) of an FPGA for multiple projects each discussed in an uploaded pdf for each lab in its respective file. The software used were Quartus Altera II and ModelSim. As for the hardware, we used an FPGA (DE2-115, Cyclone IV).",1,YoussefPr0jects/DigitalSystemsProjects,735582581,Verilog,DigitalSystemsProjects,16301,0,2023-12-31 12:51:02+00:00,[],None
373,https://github.com/Vakon84/graphics-gremlin.git,2023-12-31 06:13:40+00:00,,0,Vakon84/graphics-gremlin,737466799,Verilog,graphics-gremlin,1156,0,2023-12-31 06:14:02+00:00,[],None
374,https://github.com/duyen2016/CE213_Digital-System-Design-with-HDL.git,2023-12-28 04:14:28+00:00,Labs and projects modeled using verilog,0,duyen2016/CE213_Digital-System-Design-with-HDL,736495298,Verilog,CE213_Digital-System-Design-with-HDL,262,0,2023-12-28 04:17:43+00:00,[],None
375,https://github.com/togawa-sak1ko/Principles-of-Computer-Composition.git,2024-01-01 08:55:23+00:00,,0,togawa-sak1ko/Principles-of-Computer-Composition,737726809,Verilog,Principles-of-Computer-Composition,6452,0,2024-01-01 08:58:09+00:00,[],None
376,https://github.com/jontitalukdar/neos_jt.git,2023-12-28 23:22:21+00:00,Neos test mods,0,jontitalukdar/neos_jt,736802488,Verilog,neos_jt,88806,0,2023-12-28 23:28:41+00:00,[],
377,https://github.com/youssefashmawy/8259-PIC-Project.git,2023-12-30 22:47:59+00:00,This is the Computer Architecture project 8259 Programmable interrupt controller.,0,youssefashmawy/8259-PIC-Project,737403424,Verilog,8259-PIC-Project,25,0,2024-01-02 22:20:39+00:00,[],https://api.github.com/licenses/mit
378,https://github.com/JohnathanGamal/PIC-8259A.git,2024-01-02 19:30:34+00:00,,0,JohnathanGamal/PIC-8259A,738247486,Verilog,PIC-8259A,23,0,2024-01-02 22:03:35+00:00,[],None
379,https://github.com/sahindogu/FB-CPU-RTL.git,2024-01-03 12:21:40+00:00,,0,sahindogu/FB-CPU-RTL,738521379,Verilog,FB-CPU-RTL,2463,0,2024-01-03 12:23:11+00:00,[],None
380,https://github.com/KaiChen18/SOC_extralab.git,2024-01-03 13:12:33+00:00,this is extra lab,0,KaiChen18/SOC_extralab,738539541,Verilog,SOC_extralab,1618,0,2024-01-03 13:18:14+00:00,[],None
381,https://github.com/ccccbe/cqu.git,2024-01-04 11:49:06+00:00,硬件综合,0,ccccbe/cqu,738936897,Verilog,cqu,23025,0,2024-01-04 11:51:00+00:00,[],None
382,https://github.com/AhmedEissaeng/CA_Project.git,2024-01-01 18:00:24+00:00,,1,AhmedEissaeng/CA_Project,737847229,Verilog,CA_Project,23,0,2024-01-07 18:17:04+00:00,[],None
383,https://github.com/omei-ogami/LD_final_project.git,2024-01-02 02:55:04+00:00,always check readme in others first,0,omei-ogami/LD_final_project,737942297,Verilog,LD_final_project,880,0,2024-01-03 17:14:14+00:00,[],None
384,https://github.com/nikhil730/washing_machine.git,2024-01-05 14:59:57+00:00,,0,nikhil730/washing_machine,739434296,Verilog,washing_machine,4,0,2024-01-05 15:02:02+00:00,[],None
385,https://github.com/EmperorPenguin18/mycore.git,2024-01-05 17:13:46+00:00,Messing around in Verilog,0,EmperorPenguin18/mycore,739483247,Verilog,mycore,106,0,2024-01-05 17:14:21+00:00,[],https://api.github.com/licenses/gpl-2.0
386,https://github.com/Luclam1310/RTL-verilog.git,2024-01-04 16:50:40+00:00,code về các phần mạch liên quan tới thiết kế mạch số,0,Luclam1310/RTL-verilog,739049697,Verilog,RTL-verilog,210,0,2024-01-04 17:02:38+00:00,[],None
387,https://github.com/adrianbetea/fic-project-hw.git,2024-01-03 17:49:49+00:00,,0,adrianbetea/fic-project-hw,738643738,Verilog,fic-project-hw,649,0,2024-01-03 17:52:56+00:00,[],None
388,https://github.com/Retr0r0cket/LEG.git,2024-01-05 01:46:16+00:00,An 8-bit computer architecture with memory and wide instruction support,0,Retr0r0cket/LEG,739194215,Verilog,LEG,51,0,2024-01-05 01:52:45+00:00,[],https://api.github.com/licenses/gpl-3.0
389,https://github.com/alisina97/ChessPuzzleLogic.git,2023-12-29 16:57:51+00:00,Verilog-based Chess Puzzles Project with DE10 Lite FPGA integration.,0,alisina97/ChessPuzzleLogic,737051551,Verilog,ChessPuzzleLogic,6,0,2024-01-14 08:43:16+00:00,[],None
390,https://github.com/erfanasgari21/DLDE4.git,2023-12-19 13:04:26+00:00,,0,erfanasgari21/DLDE4,733494736,Verilog,DLDE4,64,0,2023-12-26 15:42:24+00:00,[],None
391,https://github.com/easoncchou/metrotune_FPGA.git,2023-12-24 05:34:04+00:00,,0,easoncchou/metrotune_FPGA,735222473,Verilog,metrotune_FPGA,35,0,2023-12-25 02:04:49+00:00,[],None
392,https://github.com/marouan-boumchahate/FBU_CPU.git,2023-12-28 11:19:56+00:00,,0,marouan-boumchahate/FBU_CPU,736609579,Verilog,FBU_CPU,880,0,2023-12-28 11:21:34+00:00,[],None
393,https://github.com/OmkarRatna/activation_fn.git,2024-01-03 13:54:07+00:00,,0,OmkarRatna/activation_fn,738555322,Verilog,activation_fn,57707,0,2024-01-04 09:20:16+00:00,[],None
394,https://github.com/ikac22/PicoComputer-CPU.git,2023-12-25 22:24:19+00:00,PicoComputer architecture cpu.,0,ikac22/PicoComputer-CPU,735704710,Verilog,PicoComputer-CPU,8283,0,2024-01-24 14:47:55+00:00,[],None
395,https://github.com/gurkiratb03/Interactive-Sequence-Memory-Game-DE10-Lite.git,2023-12-17 07:16:13+00:00,"Interactive Sequence Memory Game with 5 levels using numbers and letters, that would challenge users to physically interact with the board.",0,gurkiratb03/Interactive-Sequence-Memory-Game-DE10-Lite,732588888,Verilog,Interactive-Sequence-Memory-Game-DE10-Lite,77,0,2023-12-17 08:02:53+00:00,[],None
396,https://github.com/bear1222/TypeRacer.git,2023-12-24 10:31:14+00:00,,0,bear1222/TypeRacer,735279251,Verilog,TypeRacer,76,0,2024-03-06 11:40:13+00:00,[],None
397,https://github.com/Illusion12315/RISC-V.git,2024-01-02 14:30:25+00:00,自己写的一个RISC-V RV32i cpu核,0,Illusion12315/RISC-V,738144341,Verilog,RISC-V,60078,0,2024-03-17 07:56:26+00:00,[],None
398,https://github.com/AtsukiTak/openfpga.git,2023-12-19 13:27:10+00:00,,0,AtsukiTak/openfpga,733503456,Verilog,openfpga,388,0,2023-12-31 08:00:14+00:00,[],None
399,https://github.com/c0dE3P/100DaysofRTL.git,2023-12-23 11:02:27+00:00,Collection of basic and essential RTL Design and Verification codes,0,c0dE3P/100DaysofRTL,735013742,Verilog,100DaysofRTL,87,0,2023-12-23 11:09:47+00:00,[],None
400,https://github.com/huangr18/ECE287-Project.git,2023-12-16 00:34:21+00:00,,0,huangr18/ECE287-Project,732218953,Verilog,ECE287-Project,12,0,2023-12-16 00:35:30+00:00,[],None
401,https://github.com/yipin3/Verilog.git,2023-12-16 02:06:00+00:00,,0,yipin3/Verilog,732232880,Verilog,Verilog,9519,0,2023-12-16 03:24:21+00:00,[],None
402,https://github.com/shayaanhu/DLD-Final-Project-Tetris-on-FPGA.git,2023-12-17 15:27:28+00:00,,0,shayaanhu/DLD-Final-Project-Tetris-on-FPGA,732708572,Verilog,DLD-Final-Project-Tetris-on-FPGA,9,0,2023-12-17 15:28:53+00:00,[],None
403,https://github.com/aabenham/FFALU_w-tempsense.git,2023-12-18 01:43:32+00:00,,0,aabenham/FFALU_w-tempsense,732845893,Verilog,FFALU_w-tempsense,17,0,2023-12-18 01:46:11+00:00,[],None
404,https://github.com/Sumit0976/Schoolbook-Multiplications.git,2023-12-16 12:50:49+00:00,This project is done in Vivado in Verilog with hardware implementation and the project is optimized Schoolbook multiplier which is much faster than the traditional ones,0,Sumit0976/Schoolbook-Multiplications,732367296,Verilog,Schoolbook-Multiplications,79,0,2023-12-16 13:27:00+00:00,"['optimization-algorithms', 'verilog-code', 'verilog-project']",None
405,https://github.com/TeHsunWang/Pipeline-Processor.git,2023-12-16 08:22:10+00:00,,0,TeHsunWang/Pipeline-Processor,732304619,Verilog,Pipeline-Processor,888,0,2023-12-21 09:19:45+00:00,[],None
406,https://github.com/LakshmiRajkumarM/FSM.git,2023-12-22 09:09:49+00:00,,0,LakshmiRajkumarM/FSM,734660501,Verilog,FSM,1,0,2023-12-22 09:11:25+00:00,[],None
407,https://github.com/origin76/tiny_mips_cpu.git,2023-12-22 05:43:53+00:00,a tiny mips cpu for xjtu 2023 fall architecture lab,0,origin76/tiny_mips_cpu,734603473,Verilog,tiny_mips_cpu,19,0,2023-12-22 05:45:33+00:00,[],None
408,https://github.com/Tay-Day/VerilogPractice.git,2023-12-17 22:55:56+00:00,Some practice verilog Code,0,Tay-Day/VerilogPractice,732816632,Verilog,VerilogPractice,45,0,2023-12-19 22:42:12+00:00,[],None
409,https://github.com/HimaSava/Verilog_Tutorials.git,2023-12-20 20:51:34+00:00,All the codes I worked on while learning Verilog,0,HimaSava/Verilog_Tutorials,734087720,Verilog,Verilog_Tutorials,2,0,2023-12-20 21:01:35+00:00,[],None
410,https://github.com/mohanadabouserie/Pipelined_RISC-V_Processor.git,2023-12-20 23:05:07+00:00,,0,mohanadabouserie/Pipelined_RISC-V_Processor,734117764,Verilog,Pipelined_RISC-V_Processor,16,0,2023-12-20 23:10:47+00:00,[],None
411,https://github.com/CJ2002002/HDLbits_Countbcd.git,2023-12-24 08:46:28+00:00,"Build a 4-digit BCD (binary-coded decimal) counter. Each decimal digit is encoded using 4 bits: q[3:0] is the ones digit, q[7:4] is the tens digit, etc. For digits [3:1], also output an enable signal indicating when each of the upper three digits should be incremented.",0,CJ2002002/HDLbits_Countbcd,735257958,Verilog,HDLbits_Countbcd,9,0,2023-12-24 09:00:44+00:00,[],None
412,https://github.com/LakshmiRajkumarM/Shift_Registers.git,2023-12-25 06:50:31+00:00,,0,LakshmiRajkumarM/Shift_Registers,735502589,Verilog,Shift_Registers,1,0,2023-12-25 06:51:54+00:00,[],None
413,https://github.com/asgarisepide/DCOControl.git,2023-12-28 02:28:53+00:00,,0,asgarisepide/DCOControl,736474478,Verilog,DCOControl,8,0,2023-12-28 02:30:28+00:00,[],None
414,https://github.com/JVIiracLe/MIPS_2.git,2023-12-28 05:51:35+00:00,,0,JVIiracLe/MIPS_2,736516371,Verilog,MIPS_2,5,0,2023-12-28 05:55:44+00:00,[],None
415,https://github.com/sagacioussage03/Receiver_Transmitter.git,2023-12-27 16:06:54+00:00,,0,sagacioussage03/Receiver_Transmitter,736331865,Verilog,Receiver_Transmitter,3,0,2023-12-27 16:19:41+00:00,[],None
416,https://github.com/AsahiroKenpachi/UnivesalCounter-using-Verilog-HDL.git,2023-12-28 12:00:12+00:00,,0,AsahiroKenpachi/UnivesalCounter-using-Verilog-HDL,736620988,Verilog,UnivesalCounter-using-Verilog-HDL,6,0,2023-12-28 12:05:59+00:00,[],None
417,https://github.com/Akshaya114/T20-Cricket-Game.git,2023-12-22 16:09:03+00:00,T20 Cricket Game using Verilog coding. Includes a constraint file for implementing on Nexys A7 FPGA board.,0,Akshaya114/T20-Cricket-Game,734787913,Verilog,T20-Cricket-Game,3372,0,2023-12-28 10:54:54+00:00,"['cricket', 'cricket-game', 'fpga-projects', 'ipl', 'nexys-a7', 'simulation']",None
418,https://github.com/lahirub99/HDL-CSI-Extraction-Tool.git,2023-12-27 08:25:38+00:00,,0,lahirub99/HDL-CSI-Extraction-Tool,736192360,Verilog,HDL-CSI-Extraction-Tool,215,0,2023-12-27 08:30:30+00:00,[],None
419,https://github.com/azraksk/FB-CPU.git,2024-01-01 14:16:31+00:00,My group designed the RTL design of a basic CPU with 9 operations called FB-CPU.,0,azraksk/FB-CPU,737791864,Verilog,FB-CPU,3191,0,2024-01-01 14:34:40+00:00,[],None
420,https://github.com/Yi92522/Logic-final-project.git,2024-01-01 08:41:55+00:00,,0,Yi92522/Logic-final-project,737724533,Verilog,Logic-final-project,10670,0,2024-01-01 08:55:41+00:00,[],None
421,https://github.com/Mak-2805/Custom-Computer.git,2023-12-27 05:40:52+00:00,Designing a personal computer from low level gates all the way up using verilog.,0,Mak-2805/Custom-Computer,736147050,Verilog,Custom-Computer,32,0,2024-01-02 08:04:12+00:00,[],None
422,https://github.com/ddogurgi/CPU-cache.git,2024-01-03 02:55:23+00:00,,0,ddogurgi/CPU-cache,738349666,Verilog,CPU-cache,204,0,2024-01-03 03:06:20+00:00,[],None
423,https://github.com/vicharak-in/UART-Controller-Designs.git,2024-01-01 12:06:34+00:00,,0,vicharak-in/UART-Controller-Designs,737762938,Verilog,UART-Controller-Designs,37608,0,2024-01-01 12:14:45+00:00,[],None
424,https://github.com/DoyleBellamy/TOBB_ETU_Digital_Logic_Design.git,2024-01-04 07:43:37+00:00,,0,DoyleBellamy/TOBB_ETU_Digital_Logic_Design,738854076,Verilog,TOBB_ETU_Digital_Logic_Design,921,0,2024-01-04 07:43:48+00:00,[],None
425,https://github.com/kwhou/memristor_based_snn_chip.git,2023-12-31 05:29:12+00:00,,0,kwhou/memristor_based_snn_chip,737459388,Verilog,memristor_based_snn_chip,64,0,2024-01-07 02:51:22+00:00,[],https://api.github.com/licenses/mit
426,https://github.com/renozhan/Greedy-Snake-in-FPGA.git,2024-01-05 02:07:33+00:00,,0,renozhan/Greedy-Snake-in-FPGA,739198972,Verilog,Greedy-Snake-in-FPGA,56,0,2024-01-05 06:54:34+00:00,[],None
427,https://github.com/huankai0731/soc_labD.git,2024-01-05 08:36:22+00:00,,0,huankai0731/soc_labD,739301562,Verilog,soc_labD,785,0,2024-01-05 08:37:42+00:00,[],https://api.github.com/licenses/mit
428,https://github.com/Anush82/Verilog-Projects.git,2024-01-04 16:30:38+00:00,These Verilog projects are created using Xilinx Vivado Software.,0,Anush82/Verilog-Projects,739042079,Verilog,Verilog-Projects,2,0,2024-01-04 16:37:38+00:00,[],None
429,https://github.com/shohschulz/FlappyBird.git,2023-12-18 19:43:46+00:00,A collection of System Verilog Projects,0,shohschulz/FlappyBird,733201736,Verilog,FlappyBird,35,0,2024-01-09 00:12:25+00:00,[],None
430,https://github.com/Ammar-Bin-Amir/ARTY_A7_I2C_BME280.git,2023-12-28 09:03:56+00:00,Integration of Arty A7-100T with BME280 Pressure Sensor for Pressure Sensing and FPGA Testing,0,Ammar-Bin-Amir/ARTY_A7_I2C_BME280,736569526,Verilog,ARTY_A7_I2C_BME280,791,0,2024-01-15 07:33:23+00:00,"['bme280', 'i2c', 'pressure-sensor', 'rtl-design', 'artix-7-100t', 'fpga-testing']",None
431,https://github.com/Kwskayumu/electric-2023-2.git,2023-12-18 06:55:56+00:00,,0,Kwskayumu/electric-2023-2,732920302,Verilog,electric-2023-2,29,0,2024-01-15 04:47:50+00:00,[],None
432,https://github.com/Kaisiiii/AES-Verification-UVM.git,2024-01-02 12:03:57+00:00,An 128-bits Pipelined AES algorithm verification using UVM methodology ,0,Kaisiiii/AES-Verification-UVM,738093015,Verilog,AES-Verification-UVM,41,0,2024-01-02 12:18:28+00:00,[],None
433,https://github.com/Sourabh-Mallapur/Floating-Point-Adder.git,2023-12-30 03:43:05+00:00,This Repo contains details of designing and implementing a 32 bit (Single Precision) Floating point Adder module using Open source ASIC/IC Design tools,0,Sourabh-Mallapur/Floating-Point-Adder,737168314,Verilog,Floating-Point-Adder,560,0,2024-02-02 16:20:39+00:00,[],None
434,https://github.com/WajeehaTahir/64-bit-cla.git,2023-12-23 11:40:07+00:00,,0,WajeehaTahir/64-bit-cla,735021997,Verilog,64-bit-cla,4,0,2024-02-05 16:40:58+00:00,[],None
435,https://github.com/RobinH08/EIS_01.git,2023-12-17 21:17:41+00:00,EIS_01 project from RobinH08,0,RobinH08/EIS_01,732797937,Verilog,EIS_01,40,0,2023-12-17 21:17:47+00:00,[],https://api.github.com/licenses/apache-2.0
436,https://github.com/isa-gr9/risc-v-lite.git,2023-12-21 12:52:13+00:00,,0,isa-gr9/risc-v-lite,734342019,Verilog,risc-v-lite,65557,0,2024-02-23 19:07:24+00:00,[],None
437,https://github.com/aurora324/SUSTECH-CS207-FINAL-Digital-Logic-PROJECT.git,2024-01-05 09:32:20+00:00,,0,aurora324/SUSTECH-CS207-FINAL-Digital-Logic-PROJECT,739320126,Verilog,SUSTECH-CS207-FINAL-Digital-Logic-PROJECT,34981,0,2024-02-29 11:34:16+00:00,[],None
438,https://github.com/Sourabh-Mallapur/HDL-Codes.git,2023-12-27 02:44:09+00:00,A Repo of Verilog and System Verilog Codes for Common Circuits with Testbench and simulations for Quick and Easy Referencing,0,Sourabh-Mallapur/HDL-Codes,736110549,Verilog,HDL-Codes,1118,0,2024-03-05 15:15:58+00:00,[],None
439,https://github.com/tusharsahu007/DIGI-WARE.git,2023-12-31 14:43:50+00:00,,0,tusharsahu007/DIGI-WARE,737565047,Verilog,DIGI-WARE,6,0,2023-12-31 14:47:33+00:00,[],None
440,https://github.com/Windream-learning/jizu_lab.git,2023-12-21 21:46:44+00:00,,0,Windream-learning/jizu_lab,734510116,Verilog,jizu_lab,69,0,2024-03-31 13:23:47+00:00,[],None
441,https://github.com/hsuting0627/HW5.git,2023-12-19 05:12:43+00:00,,0,hsuting0627/HW5,733335415,Verilog,HW5,2,0,2023-12-19 06:07:57+00:00,[],None
442,https://github.com/nikitosing/F23_DCD_FPGA_Project.git,2023-12-18 18:42:11+00:00,,0,nikitosing/F23_DCD_FPGA_Project,733182202,Verilog,F23_DCD_FPGA_Project,40221,0,2023-12-18 21:46:55+00:00,[],None
443,https://github.com/MrMisterial/tt05-cordic.git,2023-12-17 19:33:06+00:00,,0,MrMisterial/tt05-cordic,732774822,Verilog,tt05-cordic,24,0,2023-12-17 19:33:12+00:00,[],https://api.github.com/licenses/apache-2.0
444,https://github.com/byongmin424/-EH-FPGA-project.git,2023-12-17 13:59:03+00:00,FPGA 설계기초,0,byongmin424/-EH-FPGA-project,732683075,Verilog,-EH-FPGA-project,694,0,2023-12-17 18:23:14+00:00,[],None
445,https://github.com/thinh241819/snake_verilog.git,2023-12-21 05:58:56+00:00,,0,thinh241819/snake_verilog,734206550,Verilog,snake_verilog,17373,0,2023-12-21 05:59:09+00:00,[],None
446,https://github.com/domdanda/goobus.git,2023-12-17 04:14:50+00:00,"This repository is the final (but incomplete) version of ""The adventures of Goobus the Brave"" in Verilog using the DE1-SoC FPGA. This project was created as a final project for ECE241 at the University of Toronto.",0,domdanda/goobus,732556441,Verilog,goobus,11758,0,2023-12-17 04:20:12+00:00,"['audio', 'fpga', 'verilog', 'vga']",None
447,https://github.com/maryyufei21/5-stage-pipeline-processor-based-on-MIPS.git,2023-12-16 06:39:49+00:00,a verilog 5-stage pipeline processor based on the subset of MIPS instruction set,0,maryyufei21/5-stage-pipeline-processor-based-on-MIPS,732282823,Verilog,5-stage-pipeline-processor-based-on-MIPS,4377,0,2023-12-16 07:04:41+00:00,[],None
448,https://github.com/2427jim2427/SOC_lab6.git,2023-12-17 20:34:26+00:00,,0,2427jim2427/SOC_lab6,732788984,Verilog,SOC_lab6,293,0,2023-12-17 20:43:01+00:00,[],None
449,https://github.com/rtalwart/Verilog.git,2023-12-16 19:13:32+00:00,,0,rtalwart/Verilog,732467438,Verilog,Verilog,5,0,2023-12-16 20:23:24+00:00,[],None
450,https://github.com/Shant1R/Custom_Memory.git,2023-12-18 04:47:35+00:00,"Under the repo, we will be looking into the abstract view of a custom RAM and ROM, and model them using HDL, specifically verilog.",0,Shant1R/Custom_Memory,732886219,Verilog,Custom_Memory,6,0,2023-12-18 06:22:02+00:00,[],None
451,https://github.com/pindibangaram/Verilog_Codes.git,2023-12-23 15:24:26+00:00,100 days RTL challenge,0,pindibangaram/Verilog_Codes,735076457,Verilog,Verilog_Codes,516,0,2023-12-23 15:26:15+00:00,[],None
452,https://github.com/CPollreis/calculator.git,2023-12-24 06:40:21+00:00,A calculator made using Verilog on the DE-10 Standard Board from Intel,0,CPollreis/calculator,735233838,Verilog,calculator,5,0,2023-12-24 06:45:48+00:00,[],None
453,https://github.com/aseem0609/KGP-RISC-32-bit-processor.git,2023-12-25 09:55:20+00:00,COA course project,0,aseem0609/KGP-RISC-32-bit-processor,735544965,Verilog,KGP-RISC-32-bit-processor,612,0,2023-12-25 09:57:05+00:00,[],None
454,https://github.com/parangatm/Program-Scheduler.git,2023-12-25 23:35:05+00:00,Repository for the course project for EC M216A Design of VLSI Circuits and Systems in Fall 2023 taught by Prof. Dejan Markovic,0,parangatm/Program-Scheduler,735714218,Verilog,Program-Scheduler,14,0,2023-12-25 23:49:57+00:00,"['synthesis', 'verilog', 'vlsi']",None
455,https://github.com/RSqwining/Verilog.git,2023-12-30 03:16:26+00:00,,0,RSqwining/Verilog,737164345,Verilog,Verilog,7100,0,2023-12-30 04:52:36+00:00,[],None
456,https://github.com/varadgadgil19/Multi-Drop-Bus.git,2023-12-29 09:38:16+00:00,Verilog code for Multidrop Bus and its testbench.,0,varadgadgil19/Multi-Drop-Bus,736930352,Verilog,Multi-Drop-Bus,30,0,2023-12-29 10:09:10+00:00,['multidrop-bus'],None
457,https://github.com/andrew99154/FPGA-pingpong.git,2023-12-22 14:58:37+00:00,,1,andrew99154/FPGA-pingpong,734766176,Verilog,FPGA-pingpong,29,0,2023-12-22 15:01:07+00:00,[],None
458,https://github.com/Error3ero/suffer.git,2023-12-23 11:50:32+00:00,,0,Error3ero/suffer,735024298,Verilog,suffer,126,0,2023-12-23 12:29:22+00:00,[],None
459,https://github.com/zeynepiince/FB-CPU.git,2023-12-30 23:00:11+00:00,My group designed the RTL design of a basic CPU with 9 operations called FB-CPU.,0,zeynepiince/FB-CPU,737405186,Verilog,FB-CPU,3192,0,2023-12-30 23:02:05+00:00,[],None
460,https://github.com/KarimWalidFawzy/PIC-verilog-project.git,2023-12-20 16:03:56+00:00,For us to help each other on the project,0,KarimWalidFawzy/PIC-verilog-project,733996631,Verilog,PIC-verilog-project,77,0,2023-12-20 16:10:06+00:00,[],None
461,https://github.com/NguQuang/RISC_SPM.git,2024-01-01 19:25:20+00:00,,0,NguQuang/RISC_SPM,737866106,Verilog,RISC_SPM,17155,0,2024-01-01 19:25:41+00:00,[],None
462,https://github.com/RobertChienShiba/Single-cycle-CPU.git,2023-12-25 16:31:54+00:00,,0,RobertChienShiba/Single-cycle-CPU,735638306,Verilog,Single-cycle-CPU,1582,0,2023-12-25 16:44:32+00:00,[],None
463,https://github.com/dabinl1258/picorv_soc.git,2024-01-04 22:45:53+00:00,my custom picorv32 base soc,0,dabinl1258/picorv_soc,739156156,Verilog,picorv_soc,108,0,2024-01-04 22:51:01+00:00,[],None
464,https://github.com/ZAIN-ALI-02/I2C.git,2023-12-27 22:21:02+00:00,An open-source Verilog implementation of Inter-Integrated Circuit protocol with simulation support for efficient data exchange.  Resources,0,ZAIN-ALI-02/I2C,736431152,Verilog,I2C,9,0,2024-01-05 07:32:24+00:00,[],None
465,https://github.com/Josephood7/sdram.git,2024-01-03 08:30:10+00:00,sdram,0,Josephood7/sdram,738440750,Verilog,sdram,886,0,2024-01-03 08:33:47+00:00,[],None
466,https://github.com/BarryJu1999/Lab_SDRAM.git,2024-01-03 11:43:31+00:00,,0,BarryJu1999/Lab_SDRAM,738508083,Verilog,Lab_SDRAM,3597,0,2024-01-03 11:58:45+00:00,[],None
467,https://github.com/fff1214/extra_labD.git,2024-01-03 13:17:18+00:00,,0,fff1214/extra_labD,738541345,Verilog,extra_labD,1618,0,2024-01-03 13:37:22+00:00,[],None
468,https://github.com/Kliver0910/logic.git,2023-12-22 17:49:25+00:00,,0,Kliver0910/logic,734817469,Verilog,logic,10890,0,2024-01-03 13:02:20+00:00,[],None
469,https://github.com/drkome/Verilog-ornekleri.git,2024-01-02 17:30:44+00:00,Verilogda Yaptığım Basit Örnekler,0,drkome/Verilog-ornekleri,738210089,Verilog,Verilog-ornekleri,8,0,2024-01-02 17:44:22+00:00,[],None
470,https://github.com/wzray07/FPGA_snake_game_contest.git,2023-12-26 07:44:44+00:00,,0,wzray07/FPGA_snake_game_contest,735830706,Verilog,FPGA_snake_game_contest,1175,0,2024-01-04 07:19:40+00:00,[],None
471,https://github.com/kevin861222/SOC-Lab-D-SDRAM.git,2024-01-04 05:30:17+00:00,SOC_Lab-D SDRAM,0,kevin861222/SOC-Lab-D-SDRAM,738814235,Verilog,SOC-Lab-D-SDRAM,2702,0,2024-01-04 05:32:34+00:00,[],None
472,https://github.com/ZAIN-ALI-02/AXI4-Lite.git,2024-01-05 07:47:42+00:00,,0,ZAIN-ALI-02/AXI4-Lite,739285960,Verilog,AXI4-Lite,47,0,2024-01-05 07:50:06+00:00,[],None
473,https://github.com/zhqnb6666/FPGA-piano.git,2023-12-18 07:52:46+00:00,a FPGA piano,0,zhqnb6666/FPGA-piano,732939500,Verilog,FPGA-piano,190,0,2024-01-07 13:09:12+00:00,[],None
474,https://github.com/federico-b-ee/RISCV_Intro.git,2023-12-21 01:47:51+00:00,RISCV_Intro,0,federico-b-ee/RISCV_Intro,734148607,Verilog,RISCV_Intro,61105,0,2023-12-21 01:58:00+00:00,[],None
475,https://github.com/manjunath-8/CRC_Generation-NB_IoT.git,2024-01-01 14:25:10+00:00,,0,manjunath-8/CRC_Generation-NB_IoT,737793999,Verilog,CRC_Generation-NB_IoT,7116,0,2024-01-07 10:47:49+00:00,[],None
476,https://github.com/Sourabh-Mallapur/WM-Controller-Design.git,2023-12-25 09:54:27+00:00,This repository contains the Verilog implementation of a Washing Machine Controller module.  The Verilog code provides a flexible and customizable solution for integrating a washing machine controller into larger digital designs.,0,Sourabh-Mallapur/WM-Controller-Design,735544782,Verilog,WM-Controller-Design,1693,0,2023-12-27 02:41:26+00:00,[],None
477,https://github.com/Surajmodi1007/Design-and-Implementation-of-Digital-Timer-on-Altera-DE2-FPGA.git,2023-12-16 11:24:04+00:00,Developd the RTL Design of Timer using the Verilog HDL and Successfully dumped the design on Altera DE2 FPGA Board and verified the characteristics.,0,Surajmodi1007/Design-and-Implementation-of-Digital-Timer-on-Altera-DE2-FPGA,732346268,Verilog,Design-and-Implementation-of-Digital-Timer-on-Altera-DE2-FPGA,2,0,2024-01-26 12:40:31+00:00,[],None
478,https://github.com/AlexWalburg/control_system_coprocessor.git,2023-12-31 17:34:28+00:00,Coprocessor for control systems used in digital audio amp,0,AlexWalburg/control_system_coprocessor,737600596,Verilog,control_system_coprocessor,30,0,2024-01-18 08:35:46+00:00,[],None
479,https://github.com/dodododddo/openmips.git,2024-01-05 16:59:44+00:00,《自己动手写CPU》学习笔记与代码实现,0,dodododddo/openmips,739478256,Verilog,openmips,31,0,2024-01-15 12:49:04+00:00,[],None
480,https://github.com/wendadawen/mycpu.git,2023-12-27 08:44:45+00:00,,0,wendadawen/mycpu,736197512,Verilog,mycpu,1147,0,2024-01-08 07:42:10+00:00,[],None
481,https://github.com/dangwi/systolic-array-CNN-accelerator.git,2023-12-29 06:12:09+00:00,,0,dangwi/systolic-array-CNN-accelerator,736876445,Verilog,systolic-array-CNN-accelerator,1000,0,2024-02-02 07:20:42+00:00,[],None
482,https://github.com/Hariprasath-hub/Verilog-HDL.git,2023-12-18 16:21:27+00:00,,0,Hariprasath-hub/Verilog-HDL,733130398,Verilog,Verilog-HDL,11,0,2024-02-12 07:27:26+00:00,[],None
483,https://github.com/SilinYe2001/riscv_CPU.git,2023-12-28 00:28:20+00:00,"Use Verilog to implement a riscv CPU, from single cycle to pipeline.",0,SilinYe2001/riscv_CPU,736452623,Verilog,riscv_CPU,3233,0,2023-12-28 00:37:52+00:00,[],https://api.github.com/licenses/unlicense
484,https://github.com/hekurani/CPU.git,2023-12-29 14:02:30+00:00,,0,hekurani/CPU,737001659,Verilog,CPU,30,0,2024-04-12 18:28:05+00:00,[],None
485,https://github.com/usmank23/UART--Protocol.git,2023-12-31 06:45:08+00:00,My UART project,0,usmank23/UART--Protocol,737472169,Verilog,UART--Protocol,44,0,2023-12-31 06:46:15+00:00,[],None
486,https://github.com/shreyas0770/RISC_V_CNN_Accelerator.git,2023-12-20 08:55:01+00:00,,0,shreyas0770/RISC_V_CNN_Accelerator,733842299,Verilog,RISC_V_CNN_Accelerator,137,0,2024-01-10 08:11:31+00:00,[],None
487,https://github.com/viethoang298/UART_FPGA.git,2023-12-17 18:24:12+00:00,This project implement UART interface on FPGA board ,0,viethoang298/UART_FPGA,732757865,Verilog,UART_FPGA,5,0,2023-12-17 18:26:23+00:00,[],None
488,https://github.com/Ponponri/SOC_labD.git,2023-12-21 09:05:45+00:00,,0,Ponponri/SOC_labD,734265767,Verilog,SOC_labD,960,0,2023-12-21 09:23:31+00:00,[],None
489,https://github.com/bbbuuggg/HITSZ-DIGLogic-Password-lock.git,2023-12-21 13:09:05+00:00,运用Verilog语言完成数字系统设计-实现可设定密码、报错等功能的密码锁,0,bbbuuggg/HITSZ-DIGLogic-Password-lock,734347808,Verilog,HITSZ-DIGLogic-Password-lock,1729,0,2023-12-21 13:10:56+00:00,[],None
490,https://github.com/george91731/CNN.git,2023-12-20 01:45:19+00:00,,0,george91731/CNN,733727608,Verilog,CNN,952,0,2023-12-20 01:46:15+00:00,[],None
491,https://github.com/tvd040562/RTL-APB.git,2023-12-21 04:13:31+00:00,APB lab,0,tvd040562/RTL-APB,734180737,Verilog,RTL-APB,327,0,2023-12-21 04:14:47+00:00,[],None
492,https://github.com/DeepLogicCore/FPGA-SPI.git,2023-12-23 06:47:32+00:00,,0,DeepLogicCore/FPGA-SPI,734959583,Verilog,FPGA-SPI,2,0,2023-12-23 06:51:42+00:00,[],None
493,https://github.com/luoxi1228/myCPU.git,2023-12-28 02:14:18+00:00,,0,luoxi1228/myCPU,736471595,Verilog,myCPU,41,0,2023-12-28 02:14:33+00:00,[],None
494,https://github.com/eecsmap/ucb_eecs151_2023_fall_fpga_project.git,2023-12-25 00:58:25+00:00,,0,eecsmap/ucb_eecs151_2023_fall_fpga_project,735445904,Verilog,ucb_eecs151_2023_fall_fpga_project,84,0,2023-12-25 00:58:45+00:00,[],None
495,https://github.com/avikvaish123/Super-Smash-Bros-FPGA-Project.git,2023-12-21 21:29:44+00:00,Final Project using System Verilog. Implemented VGA display and game state machine on NIOS II SoC,0,avikvaish123/Super-Smash-Bros-FPGA-Project,734506195,Verilog,Super-Smash-Bros-FPGA-Project,2020,0,2023-12-26 02:03:35+00:00,[],None
496,https://github.com/LordAdamsy/Multicycle-CPU.git,2023-12-26 12:59:39+00:00,,0,LordAdamsy/Multicycle-CPU,735916973,Verilog,Multicycle-CPU,798,0,2023-12-26 13:00:55+00:00,[],None
497,https://github.com/kleungkt/comp-architecture.git,2023-12-24 11:30:28+00:00,"Learning resources, assignments & projects for computer architecture course",0,kleungkt/comp-architecture,735291963,Verilog,comp-architecture,8081,0,2023-12-24 11:39:28+00:00,[],None
498,https://github.com/john-1109/SoC-Lab-SDRAM.git,2024-01-01 23:42:13+00:00,,0,john-1109/SoC-Lab-SDRAM,737910448,Verilog,SoC-Lab-SDRAM,914,0,2024-01-01 23:45:28+00:00,[],None
499,https://github.com/FeridunTavsanli/FB-CPU.git,2023-12-29 13:23:54+00:00,My group designed the RTL design of a basic CPU with 9 operations called FB-CPU.,0,FeridunTavsanli/FB-CPU,736990664,Verilog,FB-CPU,8273,0,2024-01-01 15:34:05+00:00,[],None
500,https://github.com/sametbr/FB-CPU.git,2024-01-02 13:17:37+00:00,,0,sametbr/FB-CPU,738118088,Verilog,FB-CPU,2,0,2024-01-02 13:25:20+00:00,[],None
501,https://github.com/suvadeep3/32bitMIPS_Pipelined_Processor.git,2023-12-30 05:23:37+00:00,,0,suvadeep3/32bitMIPS_Pipelined_Processor,737184969,Verilog,32bitMIPS_Pipelined_Processor,3,0,2023-12-31 08:00:22+00:00,[],None
502,https://github.com/984-ISHU/8-Bit-ALU-Using-iverilog.git,2023-12-31 05:56:06+00:00,8-bit ALU performing 8 operations using iverilog.,0,984-ISHU/8-Bit-ALU-Using-iverilog,737463824,Verilog,8-Bit-ALU-Using-iverilog,6,0,2023-12-31 06:04:13+00:00,[],None
503,https://github.com/PalakTripathi1/SAChache-Project.git,2023-12-29 18:14:03+00:00,,0,PalakTripathi1/SAChache-Project,737071112,Verilog,SAChache-Project,180,0,2023-12-29 18:26:43+00:00,[],None
504,https://github.com/Zeynepuraz/FB-CPU-RTL.git,2024-01-03 12:22:14+00:00,,0,Zeynepuraz/FB-CPU-RTL,738521583,Verilog,FB-CPU-RTL,2462,0,2024-01-03 12:24:06+00:00,[],None
505,https://github.com/kerlee/verilog.git,2024-01-04 13:50:53+00:00,,0,kerlee/verilog,738980054,Verilog,verilog,2,0,2024-01-04 14:09:05+00:00,[],None
506,https://github.com/hsuting0627/ICLAB_final.git,2024-01-01 17:38:30+00:00,,0,hsuting0627/ICLAB_final,737841944,Verilog,ICLAB_final,12,0,2024-01-01 17:39:03+00:00,[],None
507,https://github.com/pranjal20498/RISCV-Single-Stage.git,2024-01-05 11:27:27+00:00,,0,pranjal20498/RISCV-Single-Stage,739359549,Verilog,RISCV-Single-Stage,5,0,2024-01-05 11:37:13+00:00,[],None
508,https://github.com/soy3563/MNIST_CNN.git,2023-12-26 01:55:51+00:00,,0,soy3563/MNIST_CNN,735745784,Verilog,MNIST_CNN,7492,0,2023-12-26 02:00:49+00:00,[],None
509,https://github.com/RookieT0T/Processor_Cache_Design.git,2024-01-05 08:40:52+00:00,,0,RookieT0T/Processor_Cache_Design,739303004,Verilog,Processor_Cache_Design,56,0,2024-01-05 08:58:31+00:00,[],None
510,https://github.com/shadowash0215/ZJU-LCDF-FPGA-Project.git,2023-12-24 07:18:15+00:00,,1,shadowash0215/ZJU-LCDF-FPGA-Project,735240930,Verilog,ZJU-LCDF-FPGA-Project,28,0,2024-01-04 13:22:26+00:00,[],None
511,https://github.com/chuanjunzhang/About-me.git,2023-12-27 09:38:49+00:00,"👋 Hi, I’m @Chuanjun 👀 I’m interested in Codeing 🌱 I’m currently learning AIGC and IC design",0,chuanjunzhang/About-me,736213315,Verilog,About-me,50661,0,2023-12-28 14:55:47+00:00,[],None
512,https://github.com/doee-hc/ucas_digital_ic_homework.git,2023-12-28 08:30:40+00:00,国科大高等数集作业,0,doee-hc/ucas_digital_ic_homework,736560143,Verilog,ucas_digital_ic_homework,339,0,2023-12-28 08:32:10+00:00,[],None
513,https://github.com/J-oseph/glorbcore.git,2023-12-26 08:18:48+00:00,Very basic RISC ISA core ,0,J-oseph/glorbcore,735839723,Verilog,glorbcore,23,0,2023-12-28 20:50:21+00:00,[],https://api.github.com/licenses/mit
514,https://github.com/AnselPeng2019/IFC_protocol_CPLD_test.git,2023-12-20 02:22:13+00:00,Use CPLD test IFC protocol with LS1046,0,AnselPeng2019/IFC_protocol_CPLD_test,733735981,Verilog,IFC_protocol_CPLD_test,91614,0,2023-12-20 02:30:40+00:00,[],None
515,https://github.com/sdcarlson/FPGA-Battleship.git,2024-01-02 02:58:48+00:00,Implementation of a battleship game for Basys 3 FPGA. Display via VGA.,0,sdcarlson/FPGA-Battleship,737942989,Verilog,FPGA-Battleship,20,0,2024-01-22 19:27:07+00:00,[],None
516,https://github.com/AntiHexCode/PIC-8259A.git,2024-01-02 12:28:31+00:00,,0,AntiHexCode/PIC-8259A,738101292,Verilog,PIC-8259A,2375,0,2024-01-24 04:25:34+00:00,[],None
517,https://github.com/TurDi1/I2C_CORE.git,2024-01-04 21:55:39+00:00,,0,TurDi1/I2C_CORE,739144673,Verilog,I2C_CORE,13117,0,2024-01-04 22:27:01+00:00,[],None
518,https://github.com/sintanony/dld.git,2023-12-27 18:09:57+00:00,not to copy,0,sintanony/dld,736373503,Verilog,dld,14,0,2024-01-19 19:03:06+00:00,[],None
519,https://github.com/Aniketkumarroy/NovaEdge32.git,2024-01-05 15:36:49+00:00,verilog model of a 32 bit RISC-V processor core supporting the RV32I instruction set,0,Aniketkumarroy/NovaEdge32,739448248,Verilog,NovaEdge32,804,0,2024-01-25 08:57:21+00:00,"['computer-architecture', 'digital-system-design', 'hardware-description-language', 'risc-v']",None
520,https://github.com/vinycecard/Lab.git,2023-12-17 15:47:03+00:00,,0,vinycecard/Lab,732714302,Verilog,Lab,18285,0,2023-12-17 15:48:59+00:00,[],None
521,https://github.com/RAS-95/6_bit_CPU_verilog.git,2023-12-16 17:29:01+00:00,,0,RAS-95/6_bit_CPU_verilog,732442423,Verilog,6_bit_CPU_verilog,16,0,2023-12-16 17:29:49+00:00,[],None
522,https://github.com/tahamunawar/FPGA-Bowling.git,2023-12-16 13:24:39+00:00,"This repository contains all the files for our DLD Fall'23 Final Project titled ""Bowling"".",0,tahamunawar/FPGA-Bowling,732375837,Verilog,FPGA-Bowling,3166,0,2023-12-16 17:54:13+00:00,[],None
523,https://github.com/chrnthnkmutt/CarPark_Verilog.git,2023-12-16 06:23:04+00:00,"This project is using for illustrating on making the circuit on Xillin's BASYS3 from AMD and Verilog Language on Vivado, on the scope of car parking system",0,chrnthnkmutt/CarPark_Verilog,732279511,Verilog,CarPark_Verilog,33,0,2023-12-16 06:26:41+00:00,[],https://api.github.com/licenses/mit
524,https://github.com/Kuramych/HLIMDS_lab3.git,2023-12-18 16:15:22+00:00,лабораторная №3 по HLIMDS,0,Kuramych/HLIMDS_lab3,733127961,Verilog,HLIMDS_lab3,30081,0,2023-12-18 16:18:04+00:00,[],None
525,https://github.com/LeonardoEnne12/Verilog-Morse-Code-Translator.git,2023-12-19 00:07:30+00:00,,0,LeonardoEnne12/Verilog-Morse-Code-Translator,733267018,Verilog,Verilog-Morse-Code-Translator,5246,0,2023-12-19 01:25:29+00:00,[],None
526,https://github.com/savvy-tech-bySF/RISC-V-processor.git,2023-12-20 03:00:01+00:00,,0,savvy-tech-bySF/RISC-V-processor,733744595,Verilog,RISC-V-processor,707,0,2023-12-20 03:07:44+00:00,[],None
527,https://github.com/CLEEIV/UART.git,2023-12-18 11:32:27+00:00,,0,CLEEIV/UART,733018751,Verilog,UART,117,0,2023-12-18 11:33:21+00:00,[],None
528,https://github.com/sofyafyaa/fpga.git,2023-12-20 07:11:28+00:00,,0,sofyafyaa/fpga,733808810,Verilog,fpga,6559,0,2023-12-20 07:41:59+00:00,[],None
529,https://github.com/Zhuyh1139/verilog_guess-number.git,2023-12-30 07:14:41+00:00,"A project that accomplish a simple game.Please use vivado.etc to generate bitstream or use existed bit file,then you can play your game!",0,Zhuyh1139/verilog_guess-number,737206391,Verilog,verilog_guess-number,38,0,2024-01-21 04:10:10+00:00,[],None
530,https://github.com/MrMisterial/tt05-FIR_VERSION2.git,2023-12-19 19:18:37+00:00,,0,MrMisterial/tt05-FIR_VERSION2,733634449,Verilog,tt05-FIR_VERSION2,117,0,2023-12-19 19:18:48+00:00,[],https://api.github.com/licenses/apache-2.0
531,https://github.com/bbnoir/simple_processor.git,2023-12-29 10:09:15+00:00,Simple processor written in verilog,0,bbnoir/simple_processor,736938631,Verilog,simple_processor,660,0,2024-02-01 11:07:19+00:00,[],None
532,https://github.com/gggmmm/caravel.git,2023-12-17 11:11:40+00:00,,0,gggmmm/caravel,732639861,Verilog,caravel,11927,0,2023-12-17 11:15:20+00:00,[],https://api.github.com/licenses/apache-2.0
533,https://github.com/Word-exee/Cache-subsystem.git,2023-12-16 12:58:40+00:00,,0,Word-exee/Cache-subsystem,732369221,Verilog,Cache-subsystem,8,0,2023-12-16 13:04:48+00:00,[],None
534,https://github.com/johnbagshaw007/FPGA-SoC.git,2023-12-19 03:09:23+00:00,,0,johnbagshaw007/FPGA-SoC,733306659,Verilog,FPGA-SoC,5,0,2023-12-19 03:12:57+00:00,[],None
535,https://github.com/kritika902/Traffic-light-controller.git,2023-12-20 04:36:29+00:00,,0,kritika902/Traffic-light-controller,733765982,Verilog,Traffic-light-controller,3,0,2023-12-20 04:40:27+00:00,[],None
536,https://github.com/Manish0120/Name-Detector-using-verilog.git,2023-12-20 04:14:04+00:00,,0,Manish0120/Name-Detector-using-verilog,733761088,Verilog,Name-Detector-using-verilog,3,0,2023-12-20 04:23:14+00:00,[],None
537,https://github.com/SKrishnaPrasad-10/IEEE-754-32-bit-Floating-Point-Comparator.git,2023-12-18 08:18:14+00:00,This code contains design and testbench files for the comparison of 32-bit Floating Point numbers.,0,SKrishnaPrasad-10/IEEE-754-32-bit-Floating-Point-Comparator,732947936,Verilog,IEEE-754-32-bit-Floating-Point-Comparator,3,0,2023-12-18 08:19:12+00:00,[],None
538,https://github.com/niyati-10/Car-Parking-System.git,2023-12-18 09:57:51+00:00,,0,niyati-10/Car-Parking-System,732984301,Verilog,Car-Parking-System,12,0,2023-12-19 09:58:59+00:00,[],None
539,https://github.com/yyybbbyyyb/2023_BUAA_CO_P3-P7.git,2023-12-21 15:52:16+00:00,2023级北航CO计组课程p3-p7（含码源）,0,yyybbbyyyb/2023_BUAA_CO_P3-P7,734408434,Verilog,2023_BUAA_CO_P3-P7,673,0,2023-12-21 15:58:14+00:00,[],None
540,https://github.com/tahiya04/FPGAPianoTiles.git,2023-12-24 01:55:53+00:00,"This was created for ECE241 as a final project. It is a simplified version of piano tiles with dynamic tiles moving down, and the game points will increase if the correct key is clicked with the associated tile on screen. As keys are clicked audio is also played through a speaker. ",0,tahiya04/FPGAPianoTiles,735191459,Verilog,FPGAPianoTiles,55,0,2023-12-24 01:58:07+00:00,[],None
541,https://github.com/vemulasarika/Adder.git,2023-12-22 04:37:42+00:00,,0,vemulasarika/Adder,734589129,Verilog,Adder,1,0,2023-12-22 04:38:30+00:00,[],None
542,https://github.com/Gatsch/tt06-verilog-demo.git,2023-12-18 00:59:53+00:00,,1,Gatsch/tt06-verilog-demo,732837304,Verilog,tt06-verilog-demo,50,0,2023-12-18 00:59:59+00:00,[],https://api.github.com/licenses/apache-2.0
543,https://github.com/tadjc/DSD_assignment.git,2023-12-20 14:35:20+00:00,,0,tadjc/DSD_assignment,733963045,Verilog,DSD_assignment,155,0,2023-12-23 06:56:09+00:00,[],None
544,https://github.com/APikka1984/Vending-machine.git,2023-12-24 06:44:39+00:00,,0,APikka1984/Vending-machine,735234591,Verilog,Vending-machine,491,0,2023-12-24 08:37:38+00:00,[],None
545,https://github.com/rtwoa/verilog_sem.git,2023-12-23 10:47:59+00:00,,0,rtwoa/verilog_sem,735010604,Verilog,verilog_sem,282,0,2023-12-25 11:06:17+00:00,[],None
546,https://github.com/advaneharshal/prog_decoder.git,2023-12-26 11:16:18+00:00,Programable decoder can decode the inputs based on the decoding logic which can be loaded into the ram from outside ,0,advaneharshal/prog_decoder,735888351,Verilog,prog_decoder,11927,0,2023-12-26 11:16:59+00:00,[],https://api.github.com/licenses/apache-2.0
547,https://github.com/rjujjav/FIR-Filter-Accelerator-physical-design-and-HLS-for-RISC-V-processor.git,2023-12-26 19:23:28+00:00,,0,rjujjav/FIR-Filter-Accelerator-physical-design-and-HLS-for-RISC-V-processor,736028395,Verilog,FIR-Filter-Accelerator-physical-design-and-HLS-for-RISC-V-processor,15712,0,2023-12-26 19:24:57+00:00,[],None
548,https://github.com/molly5617/ncue-verilog11.git,2023-12-26 11:41:11+00:00,,0,molly5617/ncue-verilog11,735895076,Verilog,ncue-verilog11,10422,0,2023-12-26 12:15:19+00:00,[],None
549,https://github.com/Sidshah29/Zybo-Pipeline-CPU-Verilog-Implementation.git,2023-12-28 17:07:31+00:00,"Designed a pipelined CPU on Zybo Board using Verilog, with stages for instruction fetch, decode, execute, memory access, and write back. Achieved accurate simulation, synthesis, and error-free execution. Produced detailed waveforms, schematics, and floor plans for comprehensive FPGA analysis and verification.",0,Sidshah29/Zybo-Pipeline-CPU-Verilog-Implementation,736716795,Verilog,Zybo-Pipeline-CPU-Verilog-Implementation,10,0,2023-12-28 17:21:07+00:00,[],None
550,https://github.com/Mustafasohail7/DLD_Project.git,2023-12-28 16:33:09+00:00,A lane changing obstacle avoidance game made for Digital Logic Design Project,0,Mustafasohail7/DLD_Project,736706701,Verilog,DLD_Project,9,0,2023-12-28 16:34:33+00:00,[],None
551,https://github.com/yuchengliu0519/2023-Fall-NTU-Soc-Design-Laboratory-Lab_SDRAM.git,2023-12-28 15:09:58+00:00,,0,yuchengliu0519/2023-Fall-NTU-Soc-Design-Laboratory-Lab_SDRAM,736680551,Verilog,2023-Fall-NTU-Soc-Design-Laboratory-Lab_SDRAM,910,0,2023-12-28 15:13:16+00:00,[],None
552,https://github.com/PhuocTai03/RISC-V.git,2023-12-29 04:35:06+00:00,Design and simulate basic instructions of the RISC-V instruction set architecture using Verilog HDL,0,PhuocTai03/RISC-V,736855477,Verilog,RISC-V,264,0,2023-12-29 04:37:36+00:00,[],None
553,https://github.com/Zharasbek/and_module.git,2024-01-02 13:49:43+00:00,Implementation of the and module using Verilog.,0,Zharasbek/and_module,738129475,Verilog,and_module,0,0,2024-01-02 13:50:28+00:00,[],None
554,https://github.com/ChaitanyaA96/SOC_microprocessor.git,2023-12-16 21:04:49+00:00,32 bit microprocessor using verilog,0,ChaitanyaA96/SOC_microprocessor,732490482,Verilog,SOC_microprocessor,22,0,2024-01-03 14:15:21+00:00,[],None
555,https://github.com/john-1109/SoC-Lab-WLOS.git,2023-12-18 05:05:52+00:00,,0,john-1109/SoC-Lab-WLOS,732890406,Verilog,SoC-Lab-WLOS,858,0,2023-12-18 05:09:30+00:00,[],None
556,https://github.com/Pritham13/ADLD_assignment_1.git,2023-12-28 18:12:33+00:00,,0,Pritham13/ADLD_assignment_1,736735221,Verilog,ADLD_assignment_1,766,0,2023-12-28 18:14:30+00:00,[],None
557,https://github.com/Awaumikoubou/wakasagiviewer.git,2024-01-03 11:08:19+00:00,わかさぎちゃんをGTKwaveで表示するだけ,0,Awaumikoubou/wakasagiviewer,738496195,Verilog,wakasagiviewer,9,0,2024-01-03 11:14:21+00:00,[],None
558,https://github.com/UmarJavaid56/Project-3---Memory-Chips.git,2024-01-03 11:15:26+00:00,,0,UmarJavaid56/Project-3---Memory-Chips,738498615,Verilog,Project-3---Memory-Chips,2,0,2024-01-03 12:39:07+00:00,[],None
559,https://github.com/daiwuzhenhan/Dinasour.git,2024-01-03 02:16:23+00:00,,1,daiwuzhenhan/Dinasour,738340432,Verilog,Dinasour,295,0,2024-01-03 11:29:56+00:00,[],None
560,https://github.com/omardoesart/PIC-8259.git,2024-01-02 18:45:25+00:00,,0,omardoesart/PIC-8259,738234587,Verilog,PIC-8259,880,0,2024-01-02 18:50:38+00:00,[],None
561,https://github.com/TranNguyenAnhKhoa/Square-root-algorithm-structeral-code.git,2024-01-04 08:09:33+00:00,use pipeline technique for square-root algorithm.,0,TranNguyenAnhKhoa/Square-root-algorithm-structeral-code,738862591,Verilog,Square-root-algorithm-structeral-code,8,0,2024-01-04 08:12:12+00:00,[],None
562,https://github.com/rfzjk9/Timer.git,2024-01-05 15:02:55+00:00,,0,rfzjk9/Timer,739435496,Verilog,Timer,22,0,2024-01-05 15:16:11+00:00,[],None
563,https://github.com/StewartChicken/Digital-Logic-ECEN-2350.git,2024-01-04 21:04:42+00:00,Verilog for Digital Logic Class,0,StewartChicken/Digital-Logic-ECEN-2350,739131994,Verilog,Digital-Logic-ECEN-2350,5362,0,2024-01-04 21:11:02+00:00,[],None
564,https://github.com/Quiibbz/HDLBits-Solutions.git,2023-12-23 21:06:24+00:00,My solutions to the challenges given by the HDLBits Website,0,Quiibbz/HDLBits-Solutions,735151068,Verilog,HDLBits-Solutions,97,0,2023-12-23 21:32:07+00:00,[],None
565,https://github.com/noyaboy/riscv.git,2023-12-27 12:48:19+00:00,ICLAB FINALPROJECT,0,noyaboy/riscv,736269069,Verilog,riscv,6882,0,2023-12-30 16:45:47+00:00,[],None
566,https://github.com/DouglasWWolf/old_tb_sensor_emu.git,2023-12-17 00:51:33+00:00,Test jig for the sensor emulator - implemented on a Nexys A7-100T,0,DouglasWWolf/old_tb_sensor_emu,732525682,Verilog,old_tb_sensor_emu,617,0,2024-01-12 02:13:36+00:00,[],None
567,https://github.com/rishabh4749/Four_Bit_Counter.git,2023-12-31 05:54:33+00:00,,0,rishabh4749/Four_Bit_Counter,737463530,Verilog,Four_Bit_Counter,4,0,2024-01-13 14:47:47+00:00,[],None
568,https://github.com/rishabh4749/Decade_Counter.git,2023-12-31 06:25:27+00:00,,0,rishabh4749/Decade_Counter,737468871,Verilog,Decade_Counter,4,0,2024-01-13 14:48:41+00:00,[],None
569,https://github.com/SonalSinha237/Binary_Squaring.git,2024-01-03 17:03:29+00:00,,0,SonalSinha237/Binary_Squaring,738627954,Verilog,Binary_Squaring,13,0,2024-01-13 14:51:43+00:00,[],None
570,https://github.com/rjacobs1969/TTT8BG_HDL.git,2024-01-04 16:26:11+00:00,HDL Files for the TTT8BG  8 bit retro computer inspired by the C128,0,rjacobs1969/TTT8BG_HDL,739040248,Verilog,TTT8BG_HDL,64,0,2024-01-09 22:56:56+00:00,[],None
571,https://github.com/Ammar-Bin-Amir/ARTY_A7_I2C_MPU-6050.git,2024-01-01 12:06:23+00:00,Integration of Arty A7-100T with MPU-6050 Gyroscope Sensor for Motion Sensing and FPGA Testing,0,Ammar-Bin-Amir/ARTY_A7_I2C_MPU-6050,737762901,Verilog,ARTY_A7_I2C_MPU-6050,223,0,2024-01-15 07:34:38+00:00,"['artix-7-100t', 'fpga-testing', 'gyroscope', 'i2c', 'mpu-6050', 'rtl-design']",None
572,https://github.com/meeeeet/5-Stage-Pipelined-RISC-V-Processor.git,2023-12-16 20:55:33+00:00,,0,meeeeet/5-Stage-Pipelined-RISC-V-Processor,732488755,Verilog,5-Stage-Pipelined-RISC-V-Processor,4808,0,2023-12-29 18:08:24+00:00,"['pipelined-processors', 'risc-processor', 'risc-v', 'rv32i']",None
573,https://github.com/Entwinedime/AXI4.git,2023-12-28 16:43:26+00:00,,0,Entwinedime/AXI4,736709776,Verilog,AXI4,300,0,2024-03-06 12:04:35+00:00,[],None
574,https://github.com/armangokalp/Digital-Combination-Lock-System.git,2023-12-26 15:54:47+00:00,Course Project for CS303 (Logic and Digital System Design). Digital combination lock system made using logic gates and verilog,0,armangokalp/Digital-Combination-Lock-System,735970096,Verilog,Digital-Combination-Lock-System,7,0,2024-03-12 13:15:06+00:00,[],None
575,https://github.com/FrankOu2001/y86_cpu.git,2024-01-03 02:13:11+00:00,A implement of Y86 cpu written in verilog,0,FrankOu2001/y86_cpu,738339655,Verilog,y86_cpu,49,0,2024-03-17 15:16:02+00:00,[],None
576,https://github.com/embedded-explorer/RTL2GDS-Flow.git,2023-12-21 14:09:56+00:00,Exploring RTL to GDS Flow in VLSI,0,embedded-explorer/RTL2GDS-Flow,734370102,Verilog,RTL2GDS-Flow,1080,0,2024-03-27 19:18:32+00:00,[],None
577,https://github.com/fangfang0930/GR20230909PCB_MingDeCode_Test.git,2023-12-28 06:33:30+00:00,,0,fangfang0930/GR20230909PCB_MingDeCode_Test,736527551,Verilog,GR20230909PCB_MingDeCode_Test,17951,0,2023-12-28 06:40:47+00:00,[],None
578,https://github.com/s095339/SOC_wlos_opt.git,2023-12-17 07:31:44+00:00,SOC Final project ,0,s095339/SOC_wlos_opt,732592002,Verilog,SOC_wlos_opt,26419,0,2023-12-17 07:32:28+00:00,[],None
579,https://github.com/jarthomas/EEE120-Digital-Design-Fundementals.git,2023-12-30 23:29:59+00:00,,0,jarthomas/EEE120-Digital-Design-Fundementals,737409482,Verilog,EEE120-Digital-Design-Fundementals,152,0,2024-01-31 05:26:36+00:00,[],None
580,https://github.com/Patrick-Lew/LabOfMIPSCPU.git,2024-01-03 09:32:04+00:00,,0,Patrick-Lew/LabOfMIPSCPU,738462162,Verilog,LabOfMIPSCPU,46,0,2024-01-03 09:45:01+00:00,[],None
581,https://github.com/shubhamghorpade88/100-Days-of-RTL-Coding.git,2024-01-05 07:37:24+00:00,,0,shubhamghorpade88/100-Days-of-RTL-Coding,739282858,Verilog,100-Days-of-RTL-Coding,68,0,2024-02-03 14:42:35+00:00,[],None
582,https://github.com/Noha-A-Kh/8259-PIC-Verilog-CA-Project.git,2023-12-25 12:58:35+00:00,,0,Noha-A-Kh/8259-PIC-Verilog-CA-Project,735586417,Verilog,8259-PIC-Verilog-CA-Project,208,0,2024-01-02 23:51:57+00:00,[],None
583,https://github.com/Andyyyy64/SCCP2023.git,2024-01-03 08:00:17+00:00,,0,Andyyyy64/SCCP2023,738430659,Verilog,SCCP2023,3,0,2024-01-03 08:02:05+00:00,[],None
584,https://github.com/varunposimsetty/N_Bit_Multiplier.git,2024-01-04 07:21:13+00:00,"A versatile Verilog implementation of an N-bit multiplier with Binary-Coded Decimal (BCD) conversion, ready for deployment on Xilinx FPGAs.",0,varunposimsetty/N_Bit_Multiplier,738847064,Verilog,N_Bit_Multiplier,5,0,2024-01-04 07:22:45+00:00,[],None
585,https://github.com/Lanxas1018/Lab_sdram.git,2024-01-05 03:02:28+00:00,,0,Lanxas1018/Lab_sdram,739211284,Verilog,Lab_sdram,947,0,2024-01-05 03:09:44+00:00,[],None
586,https://github.com/TomerBitton/UART-8-bit-transmitter-and-receiver.git,2024-01-05 11:17:22+00:00,,0,TomerBitton/UART-8-bit-transmitter-and-receiver,739356191,Verilog,UART-8-bit-transmitter-and-receiver,172,0,2024-01-05 11:22:17+00:00,[],None
587,https://github.com/dlugano32/r4054-LUGANO-DAMIAN-GABRIEL.git,2024-01-04 15:40:36+00:00,Técnicas Digitales II - 4to año | UTN FRBA - 2023,0,dlugano32/r4054-LUGANO-DAMIAN-GABRIEL,739022640,Verilog,r4054-LUGANO-DAMIAN-GABRIEL,2855,0,2024-01-04 15:48:34+00:00,[],None
588,https://github.com/Squirrel7ang/BUAA-CO-2023-Aut.git,2023-12-30 12:59:01+00:00,Squirrel7ang的北航计算机学院2023-2024学年计算机组成实验课 课下设计,0,Squirrel7ang/BUAA-CO-2023-Aut,737277964,Verilog,BUAA-CO-2023-Aut,9352,0,2024-01-05 15:16:24+00:00,[],None
589,https://github.com/qnigma/qnigma-nam-demo.git,2024-01-04 21:33:00+00:00,Network-attached mutiplier modulo p25519 demo,0,qnigma/qnigma-nam-demo,739139031,Verilog,qnigma-nam-demo,46,0,2024-01-14 12:10:33+00:00,[],https://api.github.com/licenses/gpl-3.0
590,https://github.com/AlaaTaha32/AMBA-AHB-2-APB-Bridge.git,2023-12-18 02:05:53+00:00,A Verilog project that implements the bridge between Advanced High-Performance Bus (AHB) and Advanced Peripheral Bus (APB) of AMBA.,0,AlaaTaha32/AMBA-AHB-2-APB-Bridge,732850487,Verilog,AMBA-AHB-2-APB-Bridge,13,0,2023-12-18 02:06:43+00:00,[],None
591,https://github.com/elkw/EECS_251A-ASIC_Project-RISC-V-Processor-Design.git,2023-12-17 21:54:35+00:00,,0,elkw/EECS_251A-ASIC_Project-RISC-V-Processor-Design,732805205,Verilog,EECS_251A-ASIC_Project-RISC-V-Processor-Design,8410,0,2023-12-17 22:07:10+00:00,[],None
592,https://github.com/PloeckiPhil/EIS_001.git,2023-12-17 21:17:40+00:00,,0,PloeckiPhil/EIS_001,732797934,Verilog,EIS_001,10,0,2023-12-17 21:17:46+00:00,[],https://api.github.com/licenses/apache-2.0
593,https://github.com/tim21525/SOC-lab_6.git,2023-12-17 07:48:05+00:00,,0,tim21525/SOC-lab_6,732595193,Verilog,SOC-lab_6,839,0,2023-12-17 07:49:31+00:00,[],None
594,https://github.com/HashimotoKoichi/OpenMPW.git,2023-12-17 17:46:24+00:00,,0,HashimotoKoichi/OpenMPW,732748131,Verilog,OpenMPW,11927,0,2023-12-17 17:47:06+00:00,[],https://api.github.com/licenses/apache-2.0
595,https://github.com/PDrookie/digital_system.git,2023-12-18 13:03:28+00:00,數位系統導論,0,PDrookie/digital_system,733051284,Verilog,digital_system,6,0,2023-12-18 13:05:24+00:00,[],None
596,https://github.com/BHa2R00/audio_ns.git,2023-12-16 18:03:57+00:00,"audio noise suppression, mono pcm s16le, fixed number alu",0,BHa2R00/audio_ns,732451038,Verilog,audio_ns,31,0,2023-12-16 18:04:45+00:00,[],https://api.github.com/licenses/bsd-2-clause
597,https://github.com/Manish0120/Washing-Machine-Controller-Using-Verilog.git,2023-12-20 04:29:33+00:00,,0,Manish0120/Washing-Machine-Controller-Using-Verilog,733764503,Verilog,Washing-Machine-Controller-Using-Verilog,3,0,2023-12-20 04:33:16+00:00,[],None
598,https://github.com/andyfremont/riscV32biot.git,2023-12-21 05:43:34+00:00,,0,andyfremont/riscV32biot,734202121,Verilog,riscV32biot,214523,0,2023-12-21 05:46:31+00:00,[],https://api.github.com/licenses/apache-2.0
599,https://github.com/GuiYago2015/processador8bits.git,2023-12-22 02:25:03+00:00,Processador de 8 bits em Verilog,0,GuiYago2015/processador8bits,734562385,Verilog,processador8bits,3,0,2023-12-22 02:43:23+00:00,[],None
600,https://github.com/Northeus/LearnVerilog.git,2023-12-20 09:17:33+00:00,Some verilog samples,0,Northeus/LearnVerilog,733850253,Verilog,LearnVerilog,69,0,2023-12-20 13:34:49+00:00,[],https://api.github.com/licenses/mit
601,https://github.com/aydendauenhauer/moore-state-machine.git,2023-12-23 09:04:02+00:00,Language: Verilog. Sim Tool: Intel Quartus Prime. Hardware: Cyclone II Altera DE2 FPGA board. Moore state machine using counter to simulate states.,0,aydendauenhauer/moore-state-machine,734987954,Verilog,moore-state-machine,5,0,2023-12-23 09:04:51+00:00,[],None
602,https://github.com/zhangfeiww/FPGA_uart.git,2023-12-25 01:25:50+00:00,通过PC机串口助手进行发送数据，也可以看到接收数据,0,zhangfeiww/FPGA_uart,735449247,Verilog,FPGA_uart,1149,0,2023-12-25 01:26:39+00:00,[],None
603,https://github.com/LakshmiRajkumarM/Fulladder_Halfadder.git,2023-12-22 08:53:02+00:00,,0,LakshmiRajkumarM/Fulladder_Halfadder,734655393,Verilog,Fulladder_Halfadder,2,0,2023-12-25 06:56:11+00:00,[],None
604,https://github.com/AlexHoferW23/W23.git,2023-12-18 07:40:23+00:00,,0,AlexHoferW23/W23,732935336,Verilog,W23,636,0,2023-12-18 07:40:29+00:00,[],https://api.github.com/licenses/apache-2.0
605,https://github.com/SelimAbdelwahab/DE1-SoC_Connect_Four.git,2023-12-26 02:29:37+00:00,,0,SelimAbdelwahab/DE1-SoC_Connect_Four,735760846,Verilog,DE1-SoC_Connect_Four,33372,0,2023-12-26 02:32:13+00:00,[],None
606,https://github.com/HarishMarepalli/CMPE-200-Computer-Architecture.git,2023-12-26 21:24:00+00:00,CMPE 200 Computer Architecture,0,HarishMarepalli/CMPE-200-Computer-Architecture,736054585,Verilog,CMPE-200-Computer-Architecture,127200,0,2023-12-26 21:32:45+00:00,[],None
607,https://github.com/Prime-KEM/Pseudomersenne_reduce_hardware.git,2023-12-27 12:39:48+00:00,The hardware codes of Pseudomersenne reduce,0,Prime-KEM/Pseudomersenne_reduce_hardware,736266477,Verilog,Pseudomersenne_reduce_hardware,3,0,2023-12-27 12:40:19+00:00,[],None
608,https://github.com/iahks/VLSI_System_Testing.git,2023-12-27 21:12:22+00:00,,0,iahks/VLSI_System_Testing,736417335,Verilog,VLSI_System_Testing,16257,0,2023-12-27 21:15:59+00:00,[],None
609,https://github.com/kyojiawaki/compRTL.v.git,2023-12-23 10:21:26+00:00,VivadoでCPUを作成,0,kyojiawaki/compRTL.v,735004817,Verilog,compRTL.v,38,0,2023-12-28 12:53:43+00:00,[],None
610,https://github.com/lyt105u/HDL.git,2023-12-28 08:47:08+00:00,,0,lyt105u/HDL,736564770,Verilog,HDL,187,0,2023-12-28 08:57:08+00:00,[],None
611,https://github.com/Elijah-Ye/RISC-V_Pipelined_Processor.git,2023-12-28 17:30:59+00:00,Simple 5-stage RISC-V Processor with some advance features,0,Elijah-Ye/RISC-V_Pipelined_Processor,736723694,Verilog,RISC-V_Pipelined_Processor,3647,0,2023-12-28 17:37:13+00:00,[],https://api.github.com/licenses/mit
612,https://github.com/navnoorsingh0309/LED_Chasing_Game.git,2023-12-28 20:18:23+00:00,A verilog implementation of a game to catch the desired LED using a stop button.,0,navnoorsingh0309/LED_Chasing_Game,736766424,Verilog,LED_Chasing_Game,7,0,2023-12-28 20:31:34+00:00,[],None
613,https://github.com/xfwduke/verilog-study.git,2024-01-01 08:48:18+00:00,,0,xfwduke/verilog-study,737725598,Verilog,verilog-study,14,0,2024-01-01 08:49:26+00:00,[],None
614,https://github.com/Kalclavia/ARMv8-Single-Cycle-Processor.git,2023-12-30 06:08:17+00:00,Project to create a single-cycle processor in Verilog based on the ArmV8 ISA.,0,Kalclavia/ARMv8-Single-Cycle-Processor,737193199,Verilog,ARMv8-Single-Cycle-Processor,11,0,2023-12-30 06:11:12+00:00,[],None
615,https://github.com/AntR22/fpga.git,2023-12-30 06:35:20+00:00,,0,AntR22/fpga,737198462,Verilog,fpga,3,0,2023-12-30 06:35:24+00:00,[],None
616,https://github.com/vicharak-in/vaaman-ahb-verilog.git,2023-12-26 12:34:43+00:00,Verilog AHB Bus implementation for VAAMAN,0,vicharak-in/vaaman-ahb-verilog,735909877,Verilog,vaaman-ahb-verilog,28,0,2023-12-30 04:18:14+00:00,"['ahb', 'ahb-lite', 'ahb3-lite', 'verilog', 'verilog-hdl']",None
617,https://github.com/garrettknuf/WS2812B-Digital-Design.git,2023-12-22 21:50:02+00:00,Verilog Implementation of WS2812B RGB LED Driver,0,garrettknuf/WS2812B-Digital-Design,734872960,Verilog,WS2812B-Digital-Design,609,0,2024-01-02 06:58:29+00:00,"['verilog', 'ws2812b']",None
618,https://github.com/kyjiang24/iclab2022.git,2024-01-02 14:28:36+00:00,,0,kyjiang24/iclab2022,738143730,Verilog,iclab2022,15169,0,2024-01-02 14:31:57+00:00,[],None
619,https://github.com/omardoesart/PIC8259.git,2023-12-31 15:53:07+00:00,Group project for course Computer Architecture,0,omardoesart/PIC8259,737579949,Verilog,PIC8259,23,0,2023-12-31 15:54:30+00:00,[],None
620,https://github.com/zevv/yosys.git,2024-01-05 20:13:02+00:00,,0,zevv/yosys,739538771,Verilog,yosys,4898,0,2024-01-05 20:13:18+00:00,[],None
621,https://github.com/gabrielzinCoelho/Verilog_Sudoku.git,2023-12-17 16:11:10+00:00,Repositório de desenvolvimento do jogo Sudoku em FPGA (DE10-Lite),1,gabrielzinCoelho/Verilog_Sudoku,732721379,Verilog,Verilog_Sudoku,42249,0,2023-12-21 17:41:23+00:00,[],None
622,https://github.com/PloeckiPhil/EIS_002.git,2023-12-20 13:11:56+00:00,,0,PloeckiPhil/EIS_002,733931442,Verilog,EIS_002,31,0,2023-12-20 13:12:02+00:00,[],https://api.github.com/licenses/apache-2.0
623,https://github.com/ThomasHadner/EntwurfIntegrierterSchaltungen_Hadner.git,2023-12-18 07:52:59+00:00,,0,ThomasHadner/EntwurfIntegrierterSchaltungen_Hadner,732939562,Verilog,EntwurfIntegrierterSchaltungen_Hadner,106,0,2023-12-18 07:53:06+00:00,[],https://api.github.com/licenses/apache-2.0
624,https://github.com/WavJaby/1121_NCKU_IntroDigitalSystemFinalProject.git,2023-12-27 22:03:17+00:00,,0,WavJaby/1121_NCKU_IntroDigitalSystemFinalProject,736427606,Verilog,1121_NCKU_IntroDigitalSystemFinalProject,1107,0,2024-03-10 12:52:28+00:00,[],None
625,https://github.com/yuyu0830/FPGA_Encryption.git,2024-01-03 13:05:01+00:00,AES128 with verilog/FPGA,0,yuyu0830/FPGA_Encryption,738536948,Verilog,FPGA_Encryption,5806,0,2024-01-10 04:55:11+00:00,[],None
626,https://github.com/sdakul19/ECSE_318_Labs.git,2024-01-05 13:18:59+00:00,These are Labs 1-5 for VLSI containing all HDL Labs,0,sdakul19/ECSE_318_Labs,739397019,Verilog,ECSE_318_Labs,250,0,2024-01-05 13:26:31+00:00,[],None
627,https://github.com/matiasilva/riscv-cpu.git,2023-12-26 22:13:36+00:00,A RISC-V CPU compliant with the RV32I instruction set,0,matiasilva/riscv-cpu,736063966,Verilog,riscv-cpu,117,0,2024-01-04 10:42:40+00:00,[],https://api.github.com/licenses/gpl-3.0
628,https://github.com/vitlukhi1011/VLSI.git,2023-12-31 15:06:39+00:00,,0,vitlukhi1011/VLSI,737569986,Verilog,VLSI,98,0,2023-12-31 15:14:29+00:00,[],None
629,https://github.com/browns47/browns47.git,2023-12-16 02:20:39+00:00,Project for ECE 287,0,browns47/browns47,732235313,Verilog,browns47,10,0,2023-12-16 02:24:43+00:00,[],None
630,https://github.com/donny0101/ece260a_lab3.git,2023-12-16 07:27:45+00:00,,0,donny0101/ece260a_lab3,732293237,Verilog,ece260a_lab3,5532,0,2023-12-16 07:30:34+00:00,[],None
631,https://github.com/Nikhil-Vishnoi/Bayse3-Piano.git,2023-12-17 05:21:26+00:00,,0,Nikhil-Vishnoi/Bayse3-Piano,732567837,Verilog,Bayse3-Piano,12,0,2023-12-17 05:23:28+00:00,[],None
632,https://github.com/Sanaa35/ECE287_Connect_Four.git,2023-12-16 09:38:24+00:00,Connect four game on a 8X6 grid in verilog using DE2-115 board.,0,Sanaa35/ECE287_Connect_Four,732321779,Verilog,ECE287_Connect_Four,5465,0,2023-12-16 19:15:34+00:00,[],None
633,https://github.com/MrMisterial/tt05-FIRFILTER_NEW.git,2023-12-19 16:33:04+00:00,,0,MrMisterial/tt05-FIRFILTER_NEW,733577214,Verilog,tt05-FIRFILTER_NEW,24,0,2023-12-19 16:33:10+00:00,[],https://api.github.com/licenses/apache-2.0
634,https://github.com/CCCBruce/soc_lab3.git,2023-12-19 23:19:36+00:00,,0,CCCBruce/soc_lab3,733697490,Verilog,soc_lab3,521,0,2023-12-19 23:23:37+00:00,[],None
635,https://github.com/ericmaclean/BRAM-Music-Player.git,2023-12-18 21:38:55+00:00,,0,ericmaclean/BRAM-Music-Player,733234038,Verilog,BRAM-Music-Player,6,0,2023-12-18 22:00:15+00:00,[],None
636,https://github.com/JacoboJin/Grow-RV32.git,2023-12-21 06:29:51+00:00,"This is an experiment for  lab's members, aiming to design an RV32 SoC. In the future, we will continuously add the desired functions to it.",0,JacoboJin/Grow-RV32,734215620,Verilog,Grow-RV32,5548,0,2023-12-21 13:32:32+00:00,[],https://api.github.com/licenses/mit
637,https://github.com/ASOKAN-MAXVY/8-bit-addr.git,2023-12-27 04:27:33+00:00,my-dir-adder,0,ASOKAN-MAXVY/8-bit-addr,736131274,Verilog,8-bit-addr,11927,0,2023-12-27 04:28:15+00:00,[],https://api.github.com/licenses/apache-2.0
638,https://github.com/DgTanDat/Verilog-image-processing.git,2023-12-26 13:47:49+00:00,,0,DgTanDat/Verilog-image-processing,735931319,Verilog,Verilog-image-processing,1480,0,2023-12-26 13:51:34+00:00,[],None
639,https://github.com/A-MilkyCat/DClab_final.git,2023-12-18 12:02:23+00:00,,0,A-MilkyCat/DClab_final,733029133,Verilog,DClab_final,114,0,2023-12-24 10:52:41+00:00,[],None
640,https://github.com/celiikerenn/FB-CPU.git,2023-12-28 19:54:48+00:00,,0,celiikerenn/FB-CPU,736761098,Verilog,FB-CPU,4,0,2023-12-28 19:56:14+00:00,[],None
641,https://github.com/Sameersinghere/mavencourse.git,2023-12-28 11:21:51+00:00,"This repo contains all my labs and projects I did under the maven silicon course ""RISC-V RV32I RTL Design using Verilog HDL""",0,Sameersinghere/mavencourse,736610142,Verilog,mavencourse,15,0,2023-12-29 10:13:17+00:00,[],None
642,https://github.com/utkarshad21/Ring-Johnson-Counter.git,2023-12-29 10:35:02+00:00,Verilog code for Ring-Johnson Counter.,0,utkarshad21/Ring-Johnson-Counter,736945320,Verilog,Ring-Johnson-Counter,14,0,2023-12-29 11:10:00+00:00,"['counter', 'johnson', 'ring', 'ring-counter', 'ring-johnson-counter']",None
643,https://github.com/Kalclavia/Verilog-Projects.git,2023-12-29 19:30:27+00:00,"Repository for Verilog Projects I have completed in my ECEN-248 and ECEN-350 coursework. Each project is stored in its own subdirectory with all Verilog code, testbench files, and simulation results included.",0,Kalclavia/Verilog-Projects,737088794,Verilog,Verilog-Projects,34010,0,2023-12-29 23:56:54+00:00,[],None
644,https://github.com/Tony-TTran/verilog_vending_machine.git,2023-12-30 01:40:27+00:00,,0,Tony-TTran/verilog_vending_machine,737150823,Verilog,verilog_vending_machine,2,0,2023-12-30 01:42:10+00:00,[],None
645,https://github.com/awmiller/test_analog1.git,2023-12-21 14:46:11+00:00,trying out analog,0,awmiller/test_analog1,734384053,Verilog,test_analog1,97,0,2023-12-21 14:46:18+00:00,[],https://api.github.com/licenses/apache-2.0
646,https://github.com/tvarna10/3201-Project.git,2023-12-21 18:54:52+00:00,,0,tvarna10/3201-Project,734467207,Verilog,3201-Project,15,0,2023-12-21 18:55:46+00:00,[],None
647,https://github.com/RicardoMayoral/MIPS-PPU.git,2023-12-21 23:20:17+00:00,"Course Project for ICOM4215 where a MIPS Pipelined Processing Unit was developed. This project was worked on as a group from phase 1 through phase 3 alongside Victor Hernandez and Jose Crespo. After phase 3, the project was continued individually by Victor, and myself.",0,RicardoMayoral/MIPS-PPU,734528318,Verilog,MIPS-PPU,185,0,2023-12-21 23:25:28+00:00,[],None
648,https://github.com/martianwei/Computer-Architecture.git,2023-12-23 08:36:56+00:00,,0,martianwei/Computer-Architecture,734982332,Verilog,Computer-Architecture,2397,0,2023-12-23 08:37:48+00:00,[],None
649,https://github.com/Zameo08/Demo.git,2023-12-22 14:02:45+00:00,Hello,0,Zameo08/Demo,734748163,Verilog,Demo,124,0,2023-12-22 15:38:01+00:00,[],None
650,https://github.com/TalhaSemihGunduz/FB_CPU.git,2023-12-31 19:36:29+00:00,,0,TalhaSemihGunduz/FB_CPU,737621932,Verilog,FB_CPU,528,0,2023-12-31 19:38:43+00:00,[],None
651,https://github.com/DomnikBrandstetter/4Bit_FanCTRL_TinyTapeout.git,2023-12-18 08:04:24+00:00,,0,DomnikBrandstetter/4Bit_FanCTRL_TinyTapeout,732943145,Verilog,4Bit_FanCTRL_TinyTapeout,444,0,2023-12-31 16:09:31+00:00,[],https://api.github.com/licenses/apache-2.0
652,https://github.com/ShubhamRaut9922/Mtech_MiniProject-GCD-computaion-using-repeated-substration.git,2023-12-31 09:00:54+00:00,,0,ShubhamRaut9922/Mtech_MiniProject-GCD-computaion-using-repeated-substration,737496230,Verilog,Mtech_MiniProject-GCD-computaion-using-repeated-substration,7,0,2023-12-31 09:04:06+00:00,[],None
653,https://github.com/NCSECNO1/DDS_FPGA.git,2024-01-01 09:53:11+00:00,"Use FPGA to create a simple DDS signal generator that can generate four waveforms: sine wave, square wave, triangle wave, and sawtooth wave, and can adjust the amplitude and frequency.",0,NCSECNO1/DDS_FPGA,737737017,Verilog,DDS_FPGA,374,0,2024-01-01 09:59:50+00:00,[],None
654,https://github.com/jdakrofi/FPGA_FIFO.git,2024-01-01 14:33:04+00:00,,0,jdakrofi/FPGA_FIFO,737795857,Verilog,FPGA_FIFO,6,0,2024-01-01 14:33:37+00:00,[],None
655,https://github.com/guruprasad1003/Router1-3.git,2024-01-02 17:27:00+00:00,,0,guruprasad1003/Router1-3,738208900,Verilog,Router1-3,8,0,2024-01-02 17:38:39+00:00,[],None
656,https://github.com/vakeesank99/MIPS_simple_implementation.git,2024-01-04 04:17:11+00:00,Whole design was inspired from the book 'Digital design and computer architecture.',0,vakeesank99/MIPS_simple_implementation,738797128,Verilog,MIPS_simple_implementation,9,0,2024-01-04 04:44:57+00:00,[],None
657,https://github.com/alex-951/Mips32-Pipelined.git,2024-01-05 02:44:38+00:00,,0,alex-951/Mips32-Pipelined,739207371,Verilog,Mips32-Pipelined,17,0,2024-01-05 02:47:08+00:00,[],None
658,https://github.com/DarhenWu/SPI_CHIP.git,2024-01-05 06:27:05+00:00,,0,DarhenWu/SPI_CHIP,739261576,Verilog,SPI_CHIP,89236,0,2024-01-05 07:44:54+00:00,[],None
659,https://github.com/MohamedRuby/L1-Cache.git,2024-01-05 12:36:01+00:00,01286619966,0,MohamedRuby/L1-Cache,739382416,Verilog,L1-Cache,4,0,2024-01-05 12:38:07+00:00,[],None
660,https://github.com/plsngan/ecdsa_srcs.git,2024-01-05 19:19:52+00:00,,0,plsngan/ecdsa_srcs,739524048,Verilog,ecdsa_srcs,29,0,2024-01-05 19:24:02+00:00,[],None
661,https://github.com/y111321016/fpga-final_project.git,2024-01-03 10:50:04+00:00,111321016 111321013,0,y111321016/fpga-final_project,738490112,Verilog,fpga-final_project,339,0,2024-01-03 10:52:16+00:00,[],None
662,https://github.com/riscv-yyds/rv32e_pipeline.git,2023-12-26 02:06:55+00:00,,0,riscv-yyds/rv32e_pipeline,735751062,Verilog,rv32e_pipeline,74420,0,2024-01-03 05:18:31+00:00,[],None
663,https://github.com/kalinf/tetris_fpga.git,2023-12-19 14:41:07+00:00,Verilog implementation of Tetris game for FPGA,0,kalinf/tetris_fpga,733533314,Verilog,tetris_fpga,69,0,2024-02-08 12:40:52+00:00,[],None
664,https://github.com/Aidan-McNay/rsa-xcel.git,2023-12-28 15:48:44+00:00,Hardware accelerators for RSA encryption/decryption,0,Aidan-McNay/rsa-xcel,736692908,Verilog,rsa-xcel,3057,0,2024-02-17 05:16:54+00:00,[],https://api.github.com/licenses/bsd-3-clause
665,https://github.com/Bhanuka-Anjana/32-bit-RISC-Processor.git,2023-12-21 05:51:26+00:00,Design and Create basic processor with risc architecture using Verilog language. ,0,Bhanuka-Anjana/32-bit-RISC-Processor,734204487,Verilog,32-bit-RISC-Processor,104,0,2024-01-19 13:15:12+00:00,[],None
666,https://github.com/rishabh4749/4bit_Shift_Right.git,2024-01-01 07:50:51+00:00,,0,rishabh4749/4bit_Shift_Right,737715820,Verilog,4bit_Shift_Right,4,0,2024-01-13 14:51:46+00:00,[],None
667,https://github.com/srivaishnavix/Arithmetic-Logic-Unit.git,2023-12-17 08:15:10+00:00,,0,srivaishnavix/Arithmetic-Logic-Unit,732600590,Verilog,Arithmetic-Logic-Unit,11144,0,2024-01-08 18:06:16+00:00,[],None
668,https://github.com/z-huu/Connect-Four-DE1_SoC.git,2023-12-23 01:58:56+00:00,Verilog files for the implementation of a Connect Four game on the Altera DE1_SoC board.,0,z-huu/Connect-Four-DE1_SoC,734911023,Verilog,Connect-Four-DE1_SoC,10902,0,2023-12-23 05:41:09+00:00,[],https://api.github.com/licenses/mit
669,https://github.com/liron111230/Alarm_Clock-project-in-verilog.git,2023-12-25 18:38:42+00:00,,0,liron111230/Alarm_Clock-project-in-verilog,735666483,Verilog,Alarm_Clock-project-in-verilog,13,0,2024-01-26 22:09:25+00:00,[],None
670,https://github.com/sraj77k/100_RTL_Coding.git,2023-12-23 10:38:12+00:00,Coding in Verilog and System Veriloge,0,sraj77k/100_RTL_Coding,735008470,Verilog,100_RTL_Coding,5317,0,2023-12-28 06:37:38+00:00,[],None
671,https://github.com/Unintei/FPGA.git,2023-12-16 08:06:58+00:00,,0,Unintei/FPGA,732301197,Verilog,FPGA,37483,0,2023-12-16 08:07:44+00:00,[],None
672,https://github.com/Qin-shihuang/BUAA_CO_2023.git,2023-12-30 14:11:51+00:00,"Pipelined MIPS CPU, suitable for the Computer Organization course of Beihang University in 2023 fall semester.",0,Qin-shihuang/BUAA_CO_2023,737294970,Verilog,BUAA_CO_2023,64,0,2024-04-02 13:47:34+00:00,[],https://api.github.com/licenses/mit
673,https://github.com/SivaPrasad65/100_DAYS_OF_RTL.git,2023-12-31 12:30:55+00:00,,0,SivaPrasad65/100_DAYS_OF_RTL,737536863,Verilog,100_DAYS_OF_RTL,4494,0,2024-04-03 14:31:23+00:00,[],None
674,https://github.com/abrahamparoya/single-cycle-processor.git,2023-12-16 03:13:59+00:00,Final project for advanced processor systems course,0,abrahamparoya/single-cycle-processor,732244032,Verilog,single-cycle-processor,16,0,2023-12-16 03:15:11+00:00,[],None
675,https://github.com/unitem/ECE3700JFa22_23_Public.git,2023-12-16 13:30:44+00:00,This is an archive public files for ECE3700J in University of Michigan - Shanghai Jiao Tong University Joint Institute,0,unitem/ECE3700JFa22_23_Public,732377451,Verilog,ECE3700JFa22_23_Public,128047,0,2023-12-16 14:00:15+00:00,[],None
676,https://github.com/isikkusgoz/research_caravel.git,2023-12-16 17:40:01+00:00,,0,isikkusgoz/research_caravel,732445090,Verilog,research_caravel,11927,0,2023-12-16 17:40:42+00:00,[],https://api.github.com/licenses/apache-2.0
677,https://github.com/Knave16/Flapga-Bird.git,2023-12-18 06:10:49+00:00,DLD Project for Flapga Bird Game,0,Knave16/Flapga-Bird,732907001,Verilog,Flapga-Bird,1709,0,2023-12-18 06:13:26+00:00,[],None
678,https://github.com/PothulaSuma/Full-Adder.git,2023-12-17 15:33:07+00:00,"A Verilog code for Full Adder , it is used to add three bits and produces sum , carry as outputs.",0,PothulaSuma/Full-Adder,732710115,Verilog,Full-Adder,14,0,2023-12-17 15:34:39+00:00,[],None
679,https://github.com/Tao0v0/HDMI-sending-system-on-FPGA.git,2023-12-19 13:00:19+00:00,By writing verilog to design sending function of HDMI on FPGA,0,Tao0v0/HDMI-sending-system-on-FPGA,733493192,Verilog,HDMI-sending-system-on-FPGA,101,0,2023-12-19 13:02:33+00:00,[],None
680,https://github.com/mohamedhazem511/cache_system_integrate_with_risc_v.git,2023-12-19 18:56:00+00:00,Cache Controller Implementation with Write-Through Policy & integrate with single cycle RISC-V,0,mohamedhazem511/cache_system_integrate_with_risc_v,733627201,Verilog,cache_system_integrate_with_risc_v,4059,0,2023-12-19 19:39:32+00:00,[],None
681,https://github.com/cartheur/M6x09-pipeline-09.git,2023-12-20 18:30:28+00:00,Turbo-pipelined 6x09,0,cartheur/M6x09-pipeline-09,734048133,Verilog,M6x09-pipeline-09,8035,0,2023-12-20 18:34:13+00:00,[],https://api.github.com/licenses/mit
682,https://github.com/HLTlal/CQU_MYprojects.git,2024-01-02 01:21:16+00:00,,0,HLTlal/CQU_MYprojects,737925170,Verilog,CQU_MYprojects,110,0,2024-01-02 02:16:45+00:00,[],None
683,https://github.com/ibanespm/Multicycle-ARM-Processor.git,2023-12-24 21:39:44+00:00,Este proyecto presenta una implementación de un procesador ARM en modo multi-ciclo. ,0,ibanespm/Multicycle-ARM-Processor,735421044,Verilog,Multicycle-ARM-Processor,43,0,2024-01-13 19:54:46+00:00,[],None
684,https://github.com/tyouthfor/Computer-Organization.git,2023-12-26 04:09:17+00:00,重庆大学2023秋《硬件综合设计》,0,tyouthfor/Computer-Organization,735780900,Verilog,Computer-Organization,108,0,2024-01-18 05:57:37+00:00,[],None
685,https://github.com/nick-pilgrim/ALU.git,2023-12-21 19:34:45+00:00,"This is a ALU I designed in Verilog using Modelsim for an FPGA that performs 4 bit adder, adder with carry in, subtractor, bitwise AND, bitwise NOR, bitwise XNOR,  bitwise NOT, and logical shift right functions.",0,nick-pilgrim/ALU,734478238,Verilog,ALU,2,0,2023-12-21 19:35:34+00:00,[],None
686,https://github.com/Abdulrahman-Mostafa10/AES_Encryption.git,2023-12-22 07:48:18+00:00,An AES encryption and decryption project that follows SPI (Serial Peripheral Interface) specification. Implemented in Verilog,0,Abdulrahman-Mostafa10/AES_Encryption,734636803,Verilog,AES_Encryption,15,0,2023-12-22 07:52:16+00:00,[],None
687,https://github.com/moitreyachaudhuri/vlsi.git,2023-12-22 20:01:16+00:00,,0,moitreyachaudhuri/vlsi,734850129,Verilog,vlsi,2,0,2023-12-22 20:03:56+00:00,[],None
688,https://github.com/DeepLogicCore/FPGA-GT.git,2023-12-23 02:49:55+00:00,,0,DeepLogicCore/FPGA-GT,734918564,Verilog,FPGA-GT,19,0,2023-12-23 02:53:38+00:00,[],None
689,https://github.com/aydendauenhauer/clock-divider-mealy-state-machine.git,2023-12-23 09:07:51+00:00,"Language: Verilog. Sim Tool: Intel Quartus Prime. Hardware: Cyclone II Altera DE2 FPGA board. Clock divider using a mealy state machine, utilizing the 7 segment display on the board.",0,aydendauenhauer/clock-divider-mealy-state-machine,734988735,Verilog,clock-divider-mealy-state-machine,316,0,2023-12-23 09:09:07+00:00,[],None
690,https://github.com/DeepLogicCore/FPGA-AXI_M.git,2023-12-25 09:27:43+00:00,,0,DeepLogicCore/FPGA-AXI_M,735538571,Verilog,FPGA-AXI_M,4,0,2023-12-25 09:28:09+00:00,[],None
691,https://github.com/DuroyGeorge/CS61c-5_stages_pipeline.git,2023-12-25 08:35:55+00:00,,0,DuroyGeorge/CS61c-5_stages_pipeline,735526513,Verilog,CS61c-5_stages_pipeline,27,0,2023-12-25 08:36:44+00:00,[],None
692,https://github.com/SupunDK/single-cycle-riscv-processor.git,2023-12-24 14:21:57+00:00,"A RISC-V processor that supports R-type, I-type, S-type, SB-type, U-type, and UJ-type instructions excluding system instructions of the RV32I base instruction set.",0,SupunDK/single-cycle-riscv-processor,735331750,Verilog,single-cycle-riscv-processor,34720,0,2023-12-24 14:31:30+00:00,[],https://api.github.com/licenses/mit
693,https://github.com/goushaa/Multipliers-Mania.git,2023-12-24 14:44:43+00:00,,0,goushaa/Multipliers-Mania,735337247,Verilog,Multipliers-Mania,158,0,2023-12-24 14:46:53+00:00,[],None
694,https://github.com/AKSHILMY/Canny-Edge-Detector-Using-Verilog.git,2023-12-19 16:21:58+00:00,,0,AKSHILMY/Canny-Edge-Detector-Using-Verilog,733572704,Verilog,Canny-Edge-Detector-Using-Verilog,216,0,2023-12-28 13:41:03+00:00,[],None
695,https://github.com/mizar/caravel_tutorial.git,2023-12-29 05:16:49+00:00,,0,mizar/caravel_tutorial,736863962,Verilog,caravel_tutorial,11927,0,2023-12-29 05:17:31+00:00,[],https://api.github.com/licenses/apache-2.0
696,https://github.com/Ma7moud-X/PIC_8256A.git,2023-12-21 11:57:49+00:00,,0,Ma7moud-X/PIC_8256A,734323941,Verilog,PIC_8256A,573,0,2024-01-03 09:21:50+00:00,[],None
697,https://github.com/varun20020124/Verilog-Projects.git,2023-12-30 12:23:59+00:00,,0,varun20020124/Verilog-Projects,737270317,Verilog,Verilog-Projects,6,0,2023-12-30 12:44:04+00:00,[],None
698,https://github.com/Andy-Ko-0620/SoC_Design_Final.git,2023-12-27 04:28:44+00:00,,0,Andy-Ko-0620/SoC_Design_Final,736131500,Verilog,SoC_Design_Final,19744,0,2023-12-29 16:29:59+00:00,[],None
699,https://github.com/HoraceKuo/SoC-lab_5.git,2024-01-02 08:59:16+00:00,,0,HoraceKuo/SoC-lab_5,738033654,Verilog,SoC-lab_5,1635,0,2024-01-02 09:03:15+00:00,[],None
700,https://github.com/AdhamAbouelata/8-bit-ALU-VerilogHDL.git,2024-01-01 14:43:11+00:00,8 bit ALU using verilogHDL. Basic project as an intro to verilog.,0,AdhamAbouelata/8-bit-ALU-VerilogHDL,737798221,Verilog,8-bit-ALU-VerilogHDL,7,0,2024-01-01 14:45:48+00:00,[],None
701,https://github.com/HenryChang6/NCKU_Pong_Game.git,2023-12-27 11:58:51+00:00,NCKU Digital System Lab Final Project,2,HenryChang6/NCKU_Pong_Game,736254233,Verilog,NCKU_Pong_Game,559,0,2023-12-27 13:34:37+00:00,[],None
702,https://github.com/Omar-HeshamR/CPU-331.git,2023-12-23 10:03:03+00:00,A fully pipelined CPU replicating the MIPS architecture. 🖥️,0,Omar-HeshamR/CPU-331,735000683,Verilog,CPU-331,767,0,2024-01-01 23:09:41+00:00,[],None
703,https://github.com/MohamedMontasser03/PIC-8259A.git,2024-01-02 09:43:25+00:00,,0,MohamedMontasser03/PIC-8259A,738048013,Verilog,PIC-8259A,9,0,2024-01-02 18:35:31+00:00,[],None
704,https://github.com/ayanjdeka/RISCV-Proccessor.git,2024-01-02 21:42:01+00:00,"Developed a RISCV pipeline processor in System Verilog, along with more advanced processor features",0,ayanjdeka/RISCV-Proccessor,738282238,Verilog,RISCV-Proccessor,152,0,2024-01-02 21:45:03+00:00,[],None
705,https://github.com/Ayesha-Ilyas/Verilog-Practice-i.git,2024-01-04 09:08:42+00:00,,0,Ayesha-Ilyas/Verilog-Practice-i,738882390,Verilog,Verilog-Practice-i,7,0,2024-01-04 10:58:38+00:00,[],None
706,https://github.com/n4982150605/DSA.git,2024-01-05 08:02:40+00:00,,0,n4982150605/DSA,739290495,Verilog,DSA,4,0,2024-01-05 08:11:48+00:00,[],None
707,https://github.com/ardonash/conv.git,2024-01-04 11:11:22+00:00,,0,ardonash/conv,738923974,Verilog,conv,11927,0,2024-01-04 11:12:04+00:00,[],https://api.github.com/licenses/apache-2.0
708,https://github.com/nikhil730/traffic_controller.git,2024-01-05 15:44:28+00:00,,0,nikhil730/traffic_controller,739450989,Verilog,traffic_controller,5,0,2024-01-05 15:45:31+00:00,[],None
709,https://github.com/jia-yli/coyote-rdma.git,2023-12-22 14:42:40+00:00,"A fork for coyote from https://github.com/zhenhaohe/Coyote/tree/mem_bypass, commit 27a2ecbb3316c6aab201bbb6e32df6fe92e01f69",0,jia-yli/coyote-rdma,734761061,Verilog,coyote-rdma,4738,0,2023-12-22 15:02:27+00:00,[],https://api.github.com/licenses/mit
710,https://github.com/vincent-kh/fpga_1a2b.git,2023-12-30 15:18:13+00:00,112-1 Digital Logic Design Laboratory,0,vincent-kh/fpga_1a2b,737311126,Verilog,fpga_1a2b,528,0,2023-12-30 15:33:51+00:00,[],None
711,https://github.com/yinwenxin/DDR1.git,2023-12-26 06:13:16+00:00,,0,yinwenxin/DDR1,735806768,Verilog,DDR1,47,0,2023-12-26 07:33:19+00:00,[],https://api.github.com/licenses/gpl-3.0
712,https://github.com/muehlbachler-b/calculator-muehlbb.git,2023-12-20 16:03:00+00:00,Simple Calculator using 16bit data and ALU to perform operations,0,muehlbachler-b/calculator-muehlbb,733996306,Verilog,calculator-muehlbb,37,0,2023-12-20 16:03:05+00:00,[],https://api.github.com/licenses/apache-2.0
713,https://github.com/adrianvirlan200/IC-design-for-Image-Sharpening-using-Convolution.git,2023-12-21 18:34:47+00:00,,0,adrianvirlan200/IC-design-for-Image-Sharpening-using-Convolution,734461548,Verilog,IC-design-for-Image-Sharpening-using-Convolution,93,0,2024-02-14 10:09:45+00:00,[],None
714,https://github.com/denizpelen/riscv-hdp.git,2023-12-23 11:26:09+00:00,,0,denizpelen/riscv-hdp,735019031,Verilog,riscv-hdp,6297,0,2024-01-17 12:19:56+00:00,[],None
715,https://github.com/kelma01/simonGameFPGA.git,2023-12-19 14:02:59+00:00,"I have developed a game called ""Simon"" that can be played on FPGA Card",0,kelma01/simonGameFPGA,733517613,Verilog,simonGameFPGA,8,0,2024-01-28 15:27:37+00:00,[],None
716,https://github.com/visionvlsi/veriloghdlBasicsToAdvanced.git,2023-12-20 19:20:34+00:00,It aims to cover the concepts of Verilog HDL from basics to advanced.,0,visionvlsi/veriloghdlBasicsToAdvanced,734063097,Verilog,veriloghdlBasicsToAdvanced,887,0,2023-12-20 20:17:29+00:00,[],None
717,https://github.com/serval19/8bitprefixadder.git,2023-12-30 11:34:07+00:00,Design and test bench code for Parallel 8-bit prefix Adder ,0,serval19/8bitprefixadder,737259790,Verilog,8bitprefixadder,11,0,2024-02-01 19:05:34+00:00,[],https://api.github.com/licenses/mit
718,https://github.com/SimonLiu423/ConwayGOL-Verilog.git,2023-12-27 14:09:53+00:00,Conway's Game of Life in VHDL for school project,0,SimonLiu423/ConwayGOL-Verilog,736294381,Verilog,ConwayGOL-Verilog,41087,0,2023-12-30 15:27:51+00:00,[],None
719,https://github.com/devendranaga/verilog.git,2023-12-28 12:11:53+00:00,verilog learning,0,devendranaga/verilog,736624428,Verilog,verilog,10,0,2024-02-12 08:11:18+00:00,[],None
720,https://github.com/www-light/Computer-Organization.git,2023-12-27 03:14:36+00:00,,0,www-light/Computer-Organization,736116728,Verilog,Computer-Organization,33,0,2024-02-13 12:34:01+00:00,[],None
721,https://github.com/yawar-hayat/BSIM-BULK.git,2023-12-20 19:46:06+00:00,This repository contains easily accessible collection of BSIM-BULK (formerly known as BSIM6) models.,0,yawar-hayat/BSIM-BULK,734070246,Verilog,BSIM-BULK,14121,0,2024-02-06 16:42:00+00:00,"['compact-modeling', 'semiconductor-devices', 'semiconductor-physics']",
722,https://github.com/stevenzhangdongyu/MIPS_PIPELINE.git,2023-12-28 04:50:23+00:00,,0,stevenzhangdongyu/MIPS_PIPELINE,736502546,Verilog,MIPS_PIPELINE,63,0,2023-12-28 04:54:45+00:00,[],None
723,https://github.com/dhjoo98/Pipirima_RTL.git,2023-12-28 06:12:39+00:00,RTL for Pipirima,0,dhjoo98/Pipirima_RTL,736521819,Verilog,Pipirima_RTL,91,0,2023-12-28 06:14:18+00:00,[],None
724,https://github.com/alex19803/RISC-V-Team-5.git,2023-12-27 22:57:11+00:00,datapath,0,alex19803/RISC-V-Team-5,736437495,Verilog,RISC-V-Team-5,15,0,2023-12-27 23:06:35+00:00,[],None
725,https://github.com/Strivekaudani/Elevator-Controller.git,2023-12-28 20:21:24+00:00,Elevator controller for a three story elevator.,0,Strivekaudani/Elevator-Controller,736767133,Verilog,Elevator-Controller,582,0,2023-12-28 20:23:27+00:00,[],None
726,https://github.com/8ark1hyun/CSED273.git,2023-12-29 10:19:27+00:00,POSTECH CSED273 - Digital Sys. Design,0,8ark1hyun/CSED273,736941247,Verilog,CSED273,9638,0,2023-12-29 10:20:19+00:00,[],None
727,https://github.com/parsaoy/Tabriz-School.git,2023-12-28 17:08:45+00:00,"Homeworks, Exams, etc related to the School",0,parsaoy/Tabriz-School,736717194,Verilog,Tabriz-School,111969,0,2023-12-28 18:10:19+00:00,[],None
728,https://github.com/JanyaGupta05/VLSI_project.git,2023-12-31 13:40:27+00:00,,0,JanyaGupta05/VLSI_project,737551082,Verilog,VLSI_project,1018,0,2023-12-31 13:42:02+00:00,[],None
729,https://github.com/JFSAS/DEclass-verilog.git,2023-12-29 10:53:01+00:00,用verilog实现了加法器，比较器，数字时钟和流水灯,0,JFSAS/DEclass-verilog,736949948,Verilog,DEclass-verilog,51,0,2023-12-31 14:40:29+00:00,[],None
730,https://github.com/yashssingh/Embedded_System_CS429.git,2024-01-01 11:48:21+00:00,A project report on the clap switch made using arduino,0,yashssingh/Embedded_System_CS429,737759198,Verilog,Embedded_System_CS429,2914,0,2024-01-01 12:16:15+00:00,[],None
731,https://github.com/Muzamil-Sikander/Lab-7-Coal.git,2024-01-02 08:06:01+00:00,Instruction Mem File And Register File used For Another Lab too,0,Muzamil-Sikander/Lab-7-Coal,738016853,Verilog,Lab-7-Coal,1,0,2024-01-02 08:30:14+00:00,[],None
732,https://github.com/Zharasbek/3bit_circuit_d_and_jk_flip_flop.git,2024-01-02 13:44:48+00:00,Designing and simulating sequential circuits using d and jk flip flops for the given circuit,0,Zharasbek/3bit_circuit_d_and_jk_flip_flop,738127649,Verilog,3bit_circuit_d_and_jk_flip_flop,1,0,2024-01-02 13:45:35+00:00,[],None
733,https://github.com/RodrigoVegaGonzalez/Aqrui.git,2024-01-02 22:31:54+00:00,Proyecto monociclo arquitectura de computadoras 3CV11,0,RodrigoVegaGonzalez/Aqrui,738293771,Verilog,Aqrui,6748,0,2024-01-02 22:44:00+00:00,[],None
734,https://github.com/KaganAsl/Extended-MIPS.git,2024-01-04 13:53:40+00:00,This is MIPS processor for a homework.,0,KaganAsl/Extended-MIPS,738981084,Verilog,Extended-MIPS,19,0,2024-01-04 13:54:11+00:00,[],None
735,https://github.com/vasanth1906/100-Days-of-rtl.git,2024-01-02 19:00:12+00:00,,0,vasanth1906/100-Days-of-rtl,738238811,Verilog,100-Days-of-rtl,173,0,2024-01-02 19:03:39+00:00,[],None
736,https://github.com/ScanfIkun/FPGA-DigitalClock.git,2024-01-03 11:32:34+00:00,,0,ScanfIkun/FPGA-DigitalClock,738504371,Verilog,FPGA-DigitalClock,110,0,2024-01-05 10:37:11+00:00,[],None
737,https://github.com/KueTone/Digital-Design-Projects.git,2024-01-05 02:13:19+00:00,Small repository with labs from my Digital Design II labs that I felt were memorable and challenging,0,KueTone/Digital-Design-Projects,739200322,Verilog,Digital-Design-Projects,7896,0,2024-01-05 02:15:08+00:00,[],None
738,https://github.com/RodSchz/first-test-openlane.git,2024-01-05 21:42:11+00:00,First test,0,RodSchz/first-test-openlane,739560918,Verilog,first-test-openlane,11927,0,2024-01-05 21:42:51+00:00,[],https://api.github.com/licenses/apache-2.0
739,https://github.com/huankai0731/soc_lab-final.git,2023-12-30 18:55:03+00:00,,0,huankai0731/soc_lab-final,737362290,Verilog,soc_lab-final,4913,0,2023-12-30 18:56:47+00:00,[],https://api.github.com/licenses/mit
740,https://github.com/AdwaithRK/Noc-verilog.git,2024-01-05 10:45:55+00:00,,0,AdwaithRK/Noc-verilog,739345589,Verilog,Noc-verilog,55,0,2024-01-05 10:46:50+00:00,[],None
741,https://github.com/pauliedrico/FIR-FILTER.git,2023-12-18 19:04:12+00:00,A fir filter implementation in VHDL (std version + unfolded version + pipelined version ),0,pauliedrico/FIR-FILTER,733189287,Verilog,FIR-FILTER,10115,0,2023-12-18 20:20:39+00:00,[],https://api.github.com/licenses/mit
742,https://github.com/asgarisepide/ClockDivider_PLL.git,2023-12-20 14:32:18+00:00,,0,asgarisepide/ClockDivider_PLL,733961882,Verilog,ClockDivider_PLL,73,0,2023-12-20 14:42:47+00:00,[],None
743,https://github.com/Mrw0lf14/sist_task01_fir.git,2023-12-19 21:22:25+00:00,Задание 1 по Системотехнике ЭВС. КИХ-фильтр,0,Mrw0lf14/sist_task01_fir,733669896,Verilog,sist_task01_fir,863,0,2023-12-19 21:27:50+00:00,[],None
744,https://github.com/TejasAshokR/Two_way_switch_simple_project.git,2023-12-17 07:16:13+00:00,"A two way switch can be explained using a simple example. Consider a room with two switches and one bulb. Now, If both the switches are in OFF state or ON state the bulb will not glow. But, if either of the two switch is ON the bulb will glow. If we have to relate this with digital electronics, the logic can be realised using an X-OR gate.",0,TejasAshokR/Two_way_switch_simple_project,732588889,Verilog,Two_way_switch_simple_project,124,0,2023-12-17 07:18:06+00:00,[],None
745,https://github.com/dennuguyen/elec2141.git,2023-12-17 14:22:50+00:00,,0,dennuguyen/elec2141,732689914,Verilog,elec2141,95284,0,2023-12-17 14:23:57+00:00,[],None
746,https://github.com/arunachalamrangarj/RTL_simulation_verilator.git,2023-12-18 07:49:17+00:00,,0,arunachalamrangarj/RTL_simulation_verilator,732938239,Verilog,RTL_simulation_verilator,5,0,2023-12-18 07:51:55+00:00,[],None
747,https://github.com/FLesic/2023DLSProject.git,2023-12-17 15:10:17+00:00,2023秋冬数字逻辑设计大作业,1,FLesic/2023DLSProject,732703602,Verilog,2023DLSProject,3,0,2023-12-17 15:16:05+00:00,[],None
748,https://github.com/awmiller/ecarv_test1.git,2023-12-20 20:20:24+00:00,,0,awmiller/ecarv_test1,734079579,Verilog,ecarv_test1,11933,0,2023-12-20 20:21:06+00:00,[],https://api.github.com/licenses/apache-2.0
749,https://github.com/KaihaoYuHW/Verilog_a-simple-Voltmeter.git,2023-12-21 09:50:36+00:00,a simple Voltmeter designed with AD/DA converter and FPGA,1,KaihaoYuHW/Verilog_a-simple-Voltmeter,734281625,Verilog,Verilog_a-simple-Voltmeter,443,0,2023-12-21 09:54:11+00:00,[],None
750,https://github.com/BlackRanger4/LOGI-CKTS-DIG-SYS-.git,2023-12-16 19:09:52+00:00,Logical circuts and Digital system,0,BlackRanger4/LOGI-CKTS-DIG-SYS-,732466640,Verilog,LOGI-CKTS-DIG-SYS-,4542,0,2023-12-21 13:33:58+00:00,[],None
751,https://github.com/YerraBhaskaraVaraPrasad/Advanced_Encryption_Standard.git,2023-12-18 18:53:04+00:00,"The Advanced Encryption Standard (AES) stands as a cornerstone in modern cryptographic protocols, ensuring secure communication and data protection. This paper presents a hardware implementation of the AES algorithm using Verilog hardware description language. ",0,YerraBhaskaraVaraPrasad/Advanced_Encryption_Standard,733185768,Verilog,Advanced_Encryption_Standard,16782,0,2023-12-23 05:34:27+00:00,[],None
752,https://github.com/shreeya-r-02/ADS1115.git,2023-12-24 08:24:27+00:00,Interfacing ADS1115 with fpga,0,shreeya-r-02/ADS1115,735253383,Verilog,ADS1115,18,0,2023-12-24 08:30:49+00:00,[],https://api.github.com/licenses/gpl-3.0
753,https://github.com/Mohamed-Sharaf/MES-RISCV.git,2023-12-23 11:49:46+00:00,Single Cycle RISC-V processor extended by Single Precision Floating Point Unit (IEEE 754).,0,Mohamed-Sharaf/MES-RISCV,735024135,Verilog,MES-RISCV,1852,0,2023-12-23 12:05:05+00:00,[],None
754,https://github.com/zz020817/Signal_Modulation.git,2023-12-22 09:51:28+00:00,,0,zz020817/Signal_Modulation,734673020,Verilog,Signal_Modulation,3363,0,2023-12-25 01:24:59+00:00,[],None
755,https://github.com/Knightmare-0/Low-Power-VLSI.git,2023-12-26 09:24:30+00:00,,1,Knightmare-0/Low-Power-VLSI,735857860,Verilog,Low-Power-VLSI,1352,0,2023-12-26 09:26:57+00:00,[],None
756,https://github.com/molly5617/verilog23.git,2023-12-26 07:20:08+00:00,,0,molly5617/verilog23,735824443,Verilog,verilog23,6934,0,2023-12-26 08:18:45+00:00,[],None
757,https://github.com/sanmat-sp/DDCO-Project.git,2023-12-26 12:20:16+00:00,,0,sanmat-sp/DDCO-Project,735905827,Verilog,DDCO-Project,13,0,2023-12-26 12:20:43+00:00,[],None
758,https://github.com/ShawnZL/RL_Mul.git,2023-12-25 07:38:00+00:00,,0,ShawnZL/RL_Mul,735513388,Verilog,RL_Mul,15476,0,2023-12-25 09:38:44+00:00,[],None
759,https://github.com/TurDi1/Primitive_SPI.git,2023-12-21 19:00:27+00:00,,0,TurDi1/Primitive_SPI,734468753,Verilog,Primitive_SPI,56,0,2023-12-21 20:58:15+00:00,[],None
760,https://github.com/bizu2001/architecture_project.git,2023-12-27 09:11:15+00:00,,0,bizu2001/architecture_project,736205167,Verilog,architecture_project,640,0,2023-12-27 10:32:28+00:00,[],None
761,https://github.com/Fap15203/riscv.git,2023-12-26 16:23:28+00:00,,0,Fap15203/riscv,735978567,Verilog,riscv,7,0,2023-12-26 16:24:47+00:00,[],None
762,https://github.com/wojtekzebrowski/Bus_Functional_Model.git,2024-01-04 10:23:57+00:00,The BFM (Bus functional models) is dedicated to multi vendor simulations IPCores in Riviera-Pro,2,wojtekzebrowski/Bus_Functional_Model,738908091,Verilog,Bus_Functional_Model,103764,0,2024-01-04 12:26:09+00:00,[],None
763,https://github.com/eminakgun/mips-basic.git,2023-12-29 20:00:09+00:00,,0,eminakgun/mips-basic,737095515,Verilog,mips-basic,532,0,2023-12-31 21:02:47+00:00,[],https://api.github.com/licenses/gpl-3.0
764,https://github.com/bilonio/HardwareLabProject.git,2023-12-24 10:52:41+00:00,Lab exercises for HW1 course of ECE AUTH,0,bilonio/HardwareLabProject,735283642,Verilog,HardwareLabProject,272,0,2023-12-24 11:16:25+00:00,[],None
765,https://github.com/CrazyCrazy115/Portal-RV.git,2023-12-23 08:18:50+00:00,,0,CrazyCrazy115/Portal-RV,734978597,Verilog,Portal-RV,33876,0,2024-01-21 03:40:50+00:00,[],None
766,https://github.com/schandreas/EIS-JKU.git,2023-12-18 07:40:31+00:00,,0,schandreas/EIS-JKU,732935385,Verilog,EIS-JKU,35,0,2023-12-18 07:40:37+00:00,[],https://api.github.com/licenses/apache-2.0
767,https://github.com/abhaytiwari10/miniProjects.git,2023-12-17 16:31:24+00:00,,0,abhaytiwari10/miniProjects,732727297,Verilog,miniProjects,3,0,2023-12-17 16:33:16+00:00,[],None
768,https://github.com/jackdroach/FPGA-Limit-Order-Book.git,2023-12-18 03:14:37+00:00,,0,jackdroach/FPGA-Limit-Order-Book,732865823,Verilog,FPGA-Limit-Order-Book,952,0,2023-12-18 13:09:11+00:00,[],None
769,https://github.com/Nomdinoh/Single-Cycle-RISC.git,2023-12-16 13:14:37+00:00,,0,Nomdinoh/Single-Cycle-RISC,732373279,Verilog,Single-Cycle-RISC,5,0,2023-12-16 13:16:29+00:00,[],None
770,https://github.com/liuchao6355/SM4.git,2023-12-16 09:09:28+00:00,,0,liuchao6355/SM4,732315165,Verilog,SM4,8,0,2023-12-16 09:10:35+00:00,[],None
771,https://github.com/RandyMcSavage/2048FPGAProject.git,2023-12-16 03:31:58+00:00,,0,RandyMcSavage/2048FPGAProject,732246940,Verilog,2048FPGAProject,7668,0,2023-12-16 03:32:17+00:00,[],None
772,https://github.com/TungnxUIT/CE213-RISCV.git,2023-12-20 06:58:03+00:00,,0,TungnxUIT/CE213-RISCV,733804497,Verilog,CE213-RISCV,5106,0,2023-12-21 14:34:08+00:00,[],None
773,https://github.com/Joeymacauley02/NIOSII_Embedded_System.git,2023-12-20 17:23:57+00:00,,0,Joeymacauley02/NIOSII_Embedded_System,734026540,Verilog,NIOSII_Embedded_System,4877,0,2023-12-20 17:25:35+00:00,[],None
774,https://github.com/YerraBhaskaraVaraPrasad/UART.git,2023-12-23 06:19:18+00:00,"The Universal Asynchronous Receiver Transmitter (UART) stands as a fundamental communication interface in digital systems, facilitating serial communication between devices.",0,YerraBhaskaraVaraPrasad/UART,734954119,Verilog,UART,5,0,2023-12-23 06:21:31+00:00,[],None
775,https://github.com/aydendauenhauer/4bitALU-calculator.git,2023-12-23 08:54:56+00:00,Language: Verilog. Sim Tool: Intel Quartus Prime. Hardware: Cyclone II Altera DE2 FPGA board. Basic calculator using 4 bit ALU and displayed via the 7 segment display. Calculator is used by the switches according to bit location. it also has a built in save function.,0,aydendauenhauer/4bitALU-calculator,734986016,Verilog,4bitALU-calculator,17,0,2023-12-23 09:10:45+00:00,[],None
776,https://github.com/Moustafa55589/MIPS-32-Bit-Single-Cycle-and-Pipelined-RTL-Design-using-verilog.git,2023-12-23 13:51:21+00:00,,0,Moustafa55589/MIPS-32-Bit-Single-Cycle-and-Pipelined-RTL-Design-using-verilog,735052718,Verilog,MIPS-32-Bit-Single-Cycle-and-Pipelined-RTL-Design-using-verilog,48,0,2023-12-23 13:55:32+00:00,[],None
777,https://github.com/YerraBhaskaraVaraPrasad/Cipher_Block_Chaining.git,2023-12-23 06:02:28+00:00,"Cipher Block Chaining (CBC) is a fundamental mode of operation for block ciphers, widely employed in securing data through encryption. CBC enhances the confidentiality and integrity of data by chaining encrypted blocks, introducing a dependency between successive blocks.",0,YerraBhaskaraVaraPrasad/Cipher_Block_Chaining,734950546,Verilog,Cipher_Block_Chaining,153,0,2023-12-23 06:04:46+00:00,[],None
778,https://github.com/thhoanq/test_sky.git,2023-12-23 06:03:06+00:00,,0,thhoanq/test_sky,734950704,Verilog,test_sky,11927,0,2023-12-23 06:03:47+00:00,[],https://api.github.com/licenses/apache-2.0
779,https://github.com/LakshmiRajkumarM/FIFO_8X8.git,2023-12-22 09:50:35+00:00,,0,LakshmiRajkumarM/FIFO_8X8,734672730,Verilog,FIFO_8X8,1,0,2023-12-22 09:52:08+00:00,[],None
780,https://github.com/yses/fpgasim.git,2023-12-22 07:42:51+00:00,fpga simulation  ,0,yses/fpgasim,734635290,Verilog,fpgasim,3,0,2023-12-22 09:20:50+00:00,[],None
781,https://github.com/Benjamin-Anderson-II/ECE_272-Lab7.git,2023-12-23 00:50:48+00:00,VGA Driver (With verilog for image ROM),0,Benjamin-Anderson-II/ECE_272-Lab7,734901539,Verilog,ECE_272-Lab7,6,0,2023-12-23 00:51:12+00:00,[],None
782,https://github.com/Omarbayom/FSM-ATM-SYSTEM.git,2023-12-24 12:42:24+00:00,,0,Omarbayom/FSM-ATM-SYSTEM,735307872,Verilog,FSM-ATM-SYSTEM,4577,0,2023-12-24 12:50:03+00:00,[],None
783,https://github.com/saif-1219/RISC-V-processor-pipelined.git,2023-12-24 08:39:29+00:00,We made this RISC-V pipelined processor for our Computer Architecture project. The processor runs bubble sort algorithm and sorts the array.,0,saif-1219/RISC-V-processor-pipelined,735256406,Verilog,RISC-V-processor-pipelined,23,0,2023-12-24 08:49:55+00:00,[],None
784,https://github.com/iansun2/robot_experiment_final.git,2023-12-17 18:08:05+00:00,,0,iansun2/robot_experiment_final,732753834,Verilog,robot_experiment_final,21111,0,2023-12-17 18:38:02+00:00,[],None
785,https://github.com/ZONG-RUI1216/SOC-Design-Lab-D.git,2023-12-29 07:01:54+00:00,,0,ZONG-RUI1216/SOC-Design-Lab-D,736889134,Verilog,SOC-Design-Lab-D,1577,0,2023-12-29 07:07:43+00:00,[],None
786,https://github.com/JannaYasserr/ALU_project.git,2024-01-01 22:21:54+00:00,,0,JannaYasserr/ALU_project,737898481,Verilog,ALU_project,17,0,2024-01-01 22:39:50+00:00,[],None
787,https://github.com/lazybear0425/logicdesign.git,2023-12-31 05:39:51+00:00,,0,lazybear0425/logicdesign,737461111,Verilog,logicdesign,25,0,2024-01-02 02:48:50+00:00,[],None
788,https://github.com/roywatermelon11370/final_logic_design.git,2023-12-30 13:42:54+00:00,Final logic design,0,roywatermelon11370/final_logic_design,737288068,Verilog,final_logic_design,2,0,2023-12-30 13:43:29+00:00,[],None
789,https://github.com/nguyenhavi/Traffic-Light-System.git,2023-12-26 07:38:39+00:00,This is my HDL project,0,nguyenhavi/Traffic-Light-System,735829172,Verilog,Traffic-Light-System,16,0,2023-12-30 10:21:36+00:00,[],None
790,https://github.com/UmarJavaid56/Project-2---Arithmetic-Logic-Unit.git,2024-01-01 04:00:54+00:00,,0,UmarJavaid56/Project-2---Arithmetic-Logic-Unit,737681215,Verilog,Project-2---Arithmetic-Logic-Unit,2,0,2024-01-01 04:12:59+00:00,[],None
791,https://github.com/UmarJavaid56/Project-1---15-Hardware-Chips.git,2023-12-28 21:01:55+00:00,,0,UmarJavaid56/Project-1---15-Hardware-Chips,736776101,Verilog,Project-1---15-Hardware-Chips,3,0,2024-01-01 04:11:43+00:00,[],None
792,https://github.com/Osama-Alchati/project.git,2023-12-30 15:23:25+00:00,code + powerpoint + youtube video ,0,Osama-Alchati/project,737312349,Verilog,project,22945,0,2024-01-02 21:31:39+00:00,[],None
793,https://github.com/kirollosGeorge164/PIC_8259_Project.git,2024-01-02 17:53:24+00:00,,3,kirollosGeorge164/PIC_8259_Project,738218016,Verilog,PIC_8259_Project,28,0,2024-01-02 21:45:38+00:00,[],None
794,https://github.com/nikhilaroraa/EECS2021.git,2024-01-02 23:17:36+00:00,Lab work regarding Computer Architecture and Organization Course at York University (EECS 2021),0,nikhilaroraa/EECS2021,738303695,Verilog,EECS2021,19,0,2024-01-03 20:23:58+00:00,[],None
795,https://github.com/Abdo99-alt/RISC-V.git,2024-01-03 21:14:22+00:00,"RISC-V CPU with R,I,S,B & J instruction set implemented in Verilog HDL.",0,Abdo99-alt/RISC-V,738704910,Verilog,RISC-V,1048,0,2024-01-03 21:35:19+00:00,[],None
796,https://github.com/amar312696/washingMachine.git,2024-01-03 19:38:36+00:00,,0,amar312696/washingMachine,738678531,Verilog,washingMachine,3,0,2024-01-04 06:52:46+00:00,[],None
797,https://github.com/TranNguyenAnhKhoa/FIFO.git,2024-01-04 08:02:01+00:00,LIFO memory,0,TranNguyenAnhKhoa/FIFO,738860080,Verilog,FIFO,4,0,2024-01-04 08:03:28+00:00,[],None
798,https://github.com/KaganAsl/SingleCycle-MIPS.git,2024-01-02 09:59:32+00:00,Single cycle MIPS implementation with verilog.,0,KaganAsl/SingleCycle-MIPS,738053377,Verilog,SingleCycle-MIPS,923,0,2024-01-04 13:32:41+00:00,[],None
799,https://github.com/CNStanLee/MCUCANDRIVER.git,2024-01-04 15:45:15+00:00,,0,CNStanLee/MCUCANDRIVER,739024416,Verilog,MCUCANDRIVER,1058,0,2024-01-04 19:34:13+00:00,[],None
800,https://github.com/AmandaLimaB/Cofre_Digital.git,2024-01-04 23:02:21+00:00,Segurança Digital - Cofre,0,AmandaLimaB/Cofre_Digital,739159887,Verilog,Cofre_Digital,324,0,2024-01-04 23:11:01+00:00,[],None
801,https://github.com/JellyCo9064/Digital-Design_CSE371.git,2024-01-05 01:47:57+00:00,Class project files for UW 371 - Design of Digital Circuits and Systems. Targeted for the Altera DE1-SoC.,0,JellyCo9064/Digital-Design_CSE371,739194565,Verilog,Digital-Design_CSE371,37625,0,2024-01-05 01:51:29+00:00,[],None
802,https://github.com/DarhenWu/SIMPLE_RISC_CPU_linux.git,2024-01-02 01:56:55+00:00,,0,DarhenWu/SIMPLE_RISC_CPU_linux,737931324,Verilog,SIMPLE_RISC_CPU_linux,18817,0,2024-01-05 07:45:23+00:00,[],None
803,https://github.com/Abdo99-alt/RVF32-Floating-Point-Extension.git,2024-01-04 00:39:18+00:00,,0,Abdo99-alt/RVF32-Floating-Point-Extension,738748895,Verilog,RVF32-Floating-Point-Extension,960,0,2024-01-04 01:14:06+00:00,[],None
804,https://github.com/MariammAbdelkader/8259_PIC_Project.git,2023-12-23 14:44:17+00:00,,0,MariammAbdelkader/8259_PIC_Project,735066387,Verilog,8259_PIC_Project,66,0,2024-01-09 16:50:34+00:00,[],None
805,https://github.com/CSIE523/2023_CA_FinalProject.git,2024-01-02 06:29:57+00:00,,0,CSIE523/2023_CA_FinalProject,737988535,Verilog,2023_CA_FinalProject,1356,0,2024-01-02 06:38:18+00:00,[],None
806,https://github.com/2763981847/mycpu.git,2023-12-31 04:32:23+00:00,,0,2763981847/mycpu,737450657,Verilog,mycpu,206,0,2024-01-13 14:07:13+00:00,[],None
807,https://github.com/OguzKahramn/ZedBoard-OV7670-cam.git,2023-12-17 10:16:18+00:00,,0,OguzKahramn/ZedBoard-OV7670-cam,732627119,Verilog,ZedBoard-OV7670-cam,19,0,2024-01-06 14:49:49+00:00,[],https://api.github.com/licenses/mit
808,https://github.com/Dyumnin-Interns/cocotbext-bow.git,2023-12-19 12:45:39+00:00,"The Bunch of Wires (BoW) is a simple, open, and interoperable physical interface between two chiplets or chip-scale-packages (CSP) in a common package.",1,Dyumnin-Interns/cocotbext-bow,733487528,Verilog,cocotbext-bow,2459,0,2023-12-19 13:09:09+00:00,[],https://api.github.com/licenses/mit
809,https://github.com/LiuziqiOvO/RISC-V_Snake.git,2023-12-27 07:56:38+00:00,FPGA、RISC-V CPU、贪吃蛇小游戏,0,LiuziqiOvO/RISC-V_Snake,736184391,Verilog,RISC-V_Snake,8817,0,2023-12-27 07:58:53+00:00,[],None
810,https://github.com/iliasslasri/fpga-sv.git,2023-12-30 10:21:10+00:00,,0,iliasslasri/fpga-sv,737244455,Verilog,fpga-sv,8619,0,2024-01-02 15:51:15+00:00,[],None
811,https://github.com/nadiazhou/ece241-digitalsystems.git,2023-12-18 18:39:56+00:00,"Verilog labs for Digital Systems Course, ECE241. Using Altera's De1 SOC Board",0,nadiazhou/ece241-digitalsystems,733181470,Verilog,ece241-digitalsystems,31801,0,2024-03-30 03:39:39+00:00,[],None
812,https://github.com/atri45/colab.git,2023-12-27 09:35:30+00:00,重庆大学2023硬件综合设计,0,atri45/colab,736212376,Verilog,colab,116,0,2024-03-30 15:09:06+00:00,[],None
813,https://github.com/Shylie/eightbit.git,2024-01-05 17:36:53+00:00,Custom 8-bit CPU.,0,Shylie/eightbit,739491395,Verilog,eightbit,343,0,2024-01-05 17:37:13+00:00,[],None
814,https://github.com/Tiru373/Digital-Clock.git,2023-12-30 07:18:59+00:00,,0,Tiru373/Digital-Clock,737207298,Verilog,Digital-Clock,9,0,2023-12-30 07:20:28+00:00,[],None
815,https://github.com/wishvamadushanka/cache.git,2023-12-30 01:56:12+00:00,cache,0,wishvamadushanka/cache,737152915,Verilog,cache,139,0,2024-03-10 17:38:09+00:00,[],None
816,https://github.com/prayogak/VRegisterFile.git,2023-12-29 15:56:43+00:00,"Kode Register File Verilog sederhana untuk belajar, implementasi praktis.",0,prayogak/VRegisterFile,737034926,Verilog,VRegisterFile,2,0,2023-12-29 15:57:47+00:00,[],None
817,https://github.com/jandrovins/PA-project.git,2024-01-02 11:41:04+00:00,RISC-V CPU,0,jandrovins/PA-project,738085885,Verilog,PA-project,97,0,2024-04-05 14:18:14+00:00,[],None
818,https://github.com/AGstars/Vivado_TrafficSystem.git,2023-12-30 12:57:20+00:00,,0,AGstars/Vivado_TrafficSystem,737277576,Verilog,Vivado_TrafficSystem,7,0,2024-04-10 05:12:08+00:00,[],None
819,https://github.com/KishorKumar0/RISC-Processor.git,2023-12-25 09:36:42+00:00,,0,KishorKumar0/RISC-Processor,735540611,Verilog,RISC-Processor,334,0,2023-12-25 09:37:34+00:00,[],None
