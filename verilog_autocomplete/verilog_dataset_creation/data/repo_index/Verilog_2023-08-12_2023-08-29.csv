,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/nand2mario/usb_hid_host.git,2023-08-29 16:32:26+00:00,"A compact USB HID host FPGA core supporting keyboards, mice and gamepads.",14,nand2mario/usb_hid_host,684682042,Verilog,usb_hid_host,234,90,2024-04-04 18:26:59+00:00,[],https://api.github.com/licenses/apache-2.0
1,https://github.com/phoeniX-Digital-Design/phoeniX.git,2023-08-12 06:33:11+00:00,phoeniX RISC-V Processor,5,phoeniX-Digital-Design/phoeniX,677643796,Verilog,phoeniX,151663,41,2024-03-21 16:14:39+00:00,"['cpu-design', 'computer-architecture', 'fpga', 'vlsi', 'microprocessor', 'riscv', 'risc-v', 'cpu', 'embedded-systems', 'approximate-computing']",https://api.github.com/licenses/gpl-3.0
2,https://github.com/HIT-MaRiver-mips/cpucore-mariver.git,2023-08-22 14:06:18+00:00,,2,HIT-MaRiver-mips/cpucore-mariver,681673169,Verilog,cpucore-mariver,142,23,2024-04-10 08:03:29+00:00,[],https://api.github.com/licenses/gpl-3.0
3,https://github.com/fayizferosh/yosys-tcl-ui-report.git,2023-08-23 15:42:46+00:00,5 Day TCL begginer to advanced training workshop by VSD,1,fayizferosh/yosys-tcl-ui-report,682172722,Verilog,yosys-tcl-ui-report,1246,15,2024-04-05 06:23:27+00:00,"['bash', 'linux', 'open-source', 'opentimer', 'shell-scripting', 'static-timing-analysis', 'synthesis', 'tcl', 'tcl-extensions', 'tcl-procedures', 'tcl-programming', 'vlsi-physical-design', 'workshop', 'yosys', 'eda-tools', 'csv', 'hardware-description-language']",None
4,https://github.com/agg23/fpga-compositevideo.git,2023-08-14 22:16:43+00:00,,0,agg23/fpga-compositevideo,678580348,Verilog,fpga-compositevideo,2029,13,2023-10-26 16:36:12+00:00,[],https://api.github.com/licenses/mit
5,https://github.com/ChinnuReddySeelam/100DaysRTL_Part1_HDL.git,2023-08-27 17:27:55+00:00,,0,ChinnuReddySeelam/100DaysRTL_Part1_HDL,683784709,Verilog,100DaysRTL_Part1_HDL,10363,11,2023-12-20 16:58:09+00:00,[],None
6,https://github.com/EECS-151/asic_labs_fa23.git,2023-08-25 06:22:42+00:00,EECS 151/251A ASIC Labs,3,EECS-151/asic_labs_fa23,682903474,Verilog,asic_labs_fa23,17580,9,2024-01-29 12:15:15+00:00,[],None
7,https://github.com/Baungarten-CINVESTAV/AI_by_AI.git,2023-08-18 15:15:50+00:00,AI by AI,1,Baungarten-CINVESTAV/AI_by_AI,680195574,Verilog,AI_by_AI,760790,9,2023-12-11 17:57:59+00:00,[],https://api.github.com/licenses/apache-2.0
8,https://github.com/fm4dd/gatemate-riscv.git,2023-08-20 02:14:27+00:00,"RISCV CPU implementation tutorial steps for Cologne Chip Gatemate E1, adopted from https://github.com/BrunoLevy/learn-fpga",0,fm4dd/gatemate-riscv,680668276,Verilog,gatemate-riscv,6463,7,2024-03-18 22:04:40+00:00,"['fpga-programming', 'gatemate', 'risc-v', 'verilog']",https://api.github.com/licenses/bsd-3-clause
9,https://github.com/hsieh672/SNN-Accelerator.git,2023-08-23 07:25:59+00:00,"A three-layer LIF neuron SNN accelerator. The first layer is the input layer and has 784 neurons, that receive the encoded spikes. The second layer is the hidden layer and has 100 neurons; the last layer is the output layer with 10 neurons.",1,hsieh672/SNN-Accelerator,681984679,Verilog,SNN-Accelerator,311,6,2024-04-01 05:27:53+00:00,[],None
10,https://github.com/masc-ucsc/MASC-AI-Synthesized-Cryptoprocessor.git,2023-08-16 06:06:28+00:00,,0,masc-ucsc/MASC-AI-Synthesized-Cryptoprocessor,679114456,Verilog,MASC-AI-Synthesized-Cryptoprocessor,75244,5,2024-01-28 04:16:05+00:00,[],https://api.github.com/licenses/apache-2.0
11,https://github.com/sequencer/riscv-cosim.git,2023-08-13 14:44:45+00:00,,1,sequencer/riscv-cosim,678056615,Verilog,riscv-cosim,139,5,2024-02-04 03:14:12+00:00,[],None
12,https://github.com/shailja-thakur/AutoChip.git,2023-08-14 17:26:10+00:00,,1,shailja-thakur/AutoChip,678495903,Verilog,AutoChip,711,5,2024-03-18 19:52:14+00:00,[],https://api.github.com/licenses/apache-2.0
13,https://github.com/MarcioDzn/Sensor-Digital-em-FPGA-utilizando-Comunicacao-Serial.git,2023-08-27 18:46:02+00:00,,0,MarcioDzn/Sensor-Digital-em-FPGA-utilizando-Comunicacao-Serial,683804391,Verilog,Sensor-Digital-em-FPGA-utilizando-Comunicacao-Serial,12858,5,2023-11-24 21:35:09+00:00,[],None
14,https://github.com/jwangtobeno1/mymemc.git,2023-08-28 13:33:02+00:00,A Memory Controller,0,jwangtobeno1/mymemc,684111800,Verilog,mymemc,323,5,2023-08-29 08:14:00+00:00,[],None
15,https://github.com/shalan/MS_QSPI_XIP_CACHE.git,2023-08-17 13:14:52+00:00,AHB-Lite Quad I/O SPI Flash memory controller with direct mapped cache and support for XiP,4,shalan/MS_QSPI_XIP_CACHE,679718764,Verilog,MS_QSPI_XIP_CACHE,538,5,2024-03-20 08:48:22+00:00,"['ahb-lite', 'asic', 'ip', 'qspi', 'qspi-flash', 'sky130', 'verilog']",https://api.github.com/licenses/apache-2.0
16,https://github.com/NOP-Processor/NOP-SoC.git,2023-08-21 16:06:35+00:00,System-on-chip design for NOP in NSCSCC 2023.,0,NOP-Processor/NOP-SoC,681259131,Verilog,NOP-SoC,1216,5,2024-03-27 13:54:21+00:00,"['nscscc', 'soc']",https://api.github.com/licenses/mulanpsl-2.0
17,https://github.com/amrkhalid-star902/FPGA_Based_64points_FFT.git,2023-08-25 08:38:40+00:00,An FPGA implementation of FFT algorithm using pipelined Radix 2^2 topology,0,amrkhalid-star902/FPGA_Based_64points_FFT,682949876,Verilog,FPGA_Based_64points_FFT,9,4,2024-04-02 16:22:45+00:00,[],None
18,https://github.com/AryanBastani/Computer-Architecture.git,2023-08-17 10:18:08+00:00,,0,AryanBastani/Computer-Architecture,679654444,Verilog,Computer-Architecture,1629,4,2024-01-05 18:18:16+00:00,[],None
19,https://github.com/MasterPu2020/IC-design-general.git,2023-08-26 19:07:23+00:00,Êï∞Â≠óICËÆæËÆ°Á¨îËØïÁõ∏ÂÖ≥ÁöÑ‰∏Ä‰∫õÁîµË∑Ø‰ª£Á†Å,0,MasterPu2020/IC-design-general,683500558,Verilog,IC-design-general,31,4,2024-02-22 12:50:28+00:00,[],None
20,https://github.com/OuDret/OnlyNandYosysSynth.git,2023-08-25 12:12:02+00:00,Yosys Synthesis using only Nand Gates,1,OuDret/OnlyNandYosysSynth,683021897,Verilog,OnlyNandYosysSynth,288,4,2024-03-03 15:54:52+00:00,[],https://api.github.com/licenses/mit
21,https://github.com/VladimirMeshcheriakov/Le-FauxrjePGA-CPU.git,2023-08-12 17:00:06+00:00,RISCV-32 based CPU made by the Fauxrje,0,VladimirMeshcheriakov/Le-FauxrjePGA-CPU,677797150,Verilog,Le-FauxrjePGA-CPU,355,4,2023-09-05 17:32:52+00:00,[],https://api.github.com/licenses/mit
22,https://github.com/WingsySgen/CPU-Based-on-TangNano.git,2023-08-27 06:51:02+00:00,A simple CPU based on Sipeed Tang Nano 9k/20k with single cycle and Harvard architecture.Âú®Sipeed Tang Nano 9k/20k‰∏äÂÆûÁé∞ÁöÑ‰∏Ä‰∏™ÁÆÄÊòìÂçïÂë®ÊúüÁöÑ„ÄÅÂìà‰ΩõÁªìÊûÑÁöÑCPU„ÄÇ,0,WingsySgen/CPU-Based-on-TangNano,683620900,Verilog,CPU-Based-on-TangNano,232,4,2024-03-31 16:29:39+00:00,[],None
23,https://github.com/arhamhashmi01/RV32I_Single_Cycle.git,2023-08-27 18:51:42+00:00,"This repository contains the implementation of single cycle processor based on RISC-V ISA and implemented on ""LOGISIM"".",0,arhamhashmi01/RV32I_Single_Cycle,683805768,Verilog,RV32I_Single_Cycle,399,4,2024-04-10 22:57:37+00:00,"['3-stagepipeline', '5-stage-pipeline', 'fetch-stage-pipeline', 'hardware-designs', 'microprocessor', 'pipeline-processor', 'rv32i', 'single-cycle-processor', 'verilog', 'vhdl', 'computer-architecture']",None
24,https://github.com/messerliang/cordic.git,2023-08-19 07:16:56+00:00,A project implementing the CORDIC algorithm for computing cosines and sines using fixed-point decimals in Verilog codeÔºà‰ΩøÁî®ÂÆöÁÇπÂ∞èÊï∞Âú® verilog ‰ª£Á†Å‰∏ãÂÆûÁé∞ÁöÑ cordic ÁÆóÊ≥ïÊ±ÇËß£ cos„ÄÅsin ÁöÑÈ°πÁõÆÔºâ,0,messerliang/cordic,680420460,Verilog,cordic,306,4,2024-02-13 14:28:03+00:00,[],None
25,https://github.com/AhmedOsama2000/RV32I.git,2023-08-16 23:24:40+00:00,,0,AhmedOsama2000/RV32I,679469727,Verilog,RV32I,244,4,2024-04-12 21:45:33+00:00,[],None
26,https://github.com/wasinsangdam/Systolic-Array.git,2023-08-24 18:42:54+00:00,Implemented Systolic-Array that performs GEMM operation.,0,wasinsangdam/Systolic-Array,682705798,Verilog,Systolic-Array,1993,4,2024-04-04 13:15:21+00:00,[],None
27,https://github.com/yagnavivek/PES_ASIC_CLASS.git,2023-08-15 06:46:28+00:00,This Repository Guides you to complete ASIC flow from scratch,0,yagnavivek/PES_ASIC_CLASS,678698243,Verilog,PES_ASIC_CLASS,2808,3,2023-10-31 10:23:57+00:00,[],https://api.github.com/licenses/mit
28,https://github.com/Ovalelephant35/Logisim-Verilog-Digital-Design.git,2023-08-25 05:06:37+00:00,"üñ±Ô∏è ""Digisim Repository: A collection of digital circuits and simulations developed during the Digital Design Lab, organized for effective learning, collaboration, and experimentation.""",0,Ovalelephant35/Logisim-Verilog-Digital-Design,682881882,Verilog,Logisim-Verilog-Digital-Design,61,3,2024-03-30 13:12:58+00:00,"['digital-design', 'digital-electronics', 'digisim']",https://api.github.com/licenses/mit
29,https://github.com/douglasojesus/interface-entrada-saida.git,2023-08-21 18:13:37+00:00,Problema 01 do M√≥dulo Integrador de Sistemas Digitais.,2,douglasojesus/interface-entrada-saida,681305378,Verilog,interface-entrada-saida,114970,3,2023-09-23 08:25:34+00:00,[],https://api.github.com/licenses/mit
30,https://github.com/KKIDOL/uvm_for_ahb_sramc.git,2023-08-16 15:37:43+00:00,,1,KKIDOL/uvm_for_ahb_sramc,679327584,Verilog,uvm_for_ahb_sramc,43,3,2024-03-28 15:21:17+00:00,[],None
31,https://github.com/tommythorn/NCL-examples.git,2023-08-20 04:37:08+00:00,"A collection of Null Convention Logic examples, simulated and synthesized for FPGA",0,tommythorn/NCL-examples,680690354,Verilog,NCL-examples,26,3,2023-09-16 05:54:50+00:00,[],https://api.github.com/licenses/apache-2.0
32,https://github.com/AhmedOsama2000/Vedic_Multiplier.git,2023-08-20 22:30:22+00:00,32-bit Multiplier,0,AhmedOsama2000/Vedic_Multiplier,680941560,Verilog,Vedic_Multiplier,3,3,2023-12-07 02:14:47+00:00,[],None
33,https://github.com/TAlmeida003/PBL-Sistemas-Digitais-Interface-de-Entrada-e-Saida.git,2023-08-21 16:40:48+00:00,,0,TAlmeida003/PBL-Sistemas-Digitais-Interface-de-Entrada-e-Saida,681271544,Verilog,PBL-Sistemas-Digitais-Interface-de-Entrada-e-Saida,546797,3,2023-12-29 11:41:46+00:00,[],None
34,https://github.com/kakafariaZ/DigitalSensor.git,2023-08-18 13:17:16+00:00,"Project made for the ""M.I. Sistemas Digitais"" subject @ UEFS Computer Engineering Bachelor's Degree",0,kakafariaZ/DigitalSensor,680152008,Verilog,DigitalSensor,16670,2,2023-09-28 12:59:17+00:00,[],https://api.github.com/licenses/mit
35,https://github.com/DopeBiscuit/IEEE-Digital-IC-Design.git,2023-08-27 05:47:54+00:00,"This repo is for my IEEE ASU Student Branch Digital IC Design workshop, an introduction to digital design using Verilog, this is a documentation of my tasks.",0,DopeBiscuit/IEEE-Digital-IC-Design,683606124,Verilog,IEEE-Digital-IC-Design,12022,2,2023-11-13 08:18:52+00:00,"['digital-design-and-computer-organization', 'logic-design', 'verilog-project']",https://api.github.com/licenses/mit
36,https://github.com/Drashti268/APB-Protocol.git,2023-08-19 06:37:03+00:00,,0,Drashti268/APB-Protocol,680409916,Verilog,APB-Protocol,1197,2,2023-12-26 21:18:08+00:00,[],None
37,https://github.com/Biggestapple/risc-v-cpu.git,2023-08-16 07:54:43+00:00,A simple risc-v core based on FPGA,0,Biggestapple/risc-v-cpu,679150887,Verilog,risc-v-cpu,4912,2,2023-10-20 03:48:39+00:00,[],None
38,https://github.com/Linkyed/Circuitos-Digitais.git,2023-08-17 20:56:06+00:00,Projetos no Quartus II para a disciplina de Circuitos Digitais,0,Linkyed/Circuitos-Digitais,679885346,Verilog,Circuitos-Digitais,6366,2,2023-11-29 04:19:36+00:00,[],None
39,https://github.com/ParsaHaghighatgoo/Vending-Machine.git,2023-08-21 08:18:06+00:00,,0,ParsaHaghighatgoo/Vending-Machine,681082491,Verilog,Vending-Machine,274,2,2024-02-01 08:15:46+00:00,[],None
40,https://github.com/suraj1singh2460/UART.git,2023-08-22 05:41:10+00:00,"Universal Asynchronous Receiver / Transmitter design, and verification using UVM methodology.",0,suraj1singh2460/UART,681480677,,UART,7787,2,2023-09-09 09:14:15+00:00,[],None
41,https://github.com/shalan/MS_DMAC_AHBL.git,2023-08-25 11:14:40+00:00,A Direct Memory Access Controller (DMAC) with AHB-lite bus interface,3,shalan/MS_DMAC_AHBL,683002758,Verilog,MS_DMAC_AHBL,40,2,2024-02-10 16:47:48+00:00,"['ahb-lite', 'asic', 'dma', 'dmac', 'fpga', 'verilog']",https://api.github.com/licenses/apache-2.0
42,https://github.com/SailajaPeddakotla/100daysofRTL.git,2023-08-27 16:57:16+00:00,This is the progress of 100 days of RTL and codes will be shared,0,SailajaPeddakotla/100daysofRTL,683775781,Verilog,100daysofRTL,1813,2,2023-10-07 16:47:46+00:00,[],None
43,https://github.com/lutayyy/openplush.git,2023-08-12 16:50:23+00:00,An open virtual pc.,0,lutayyy/openplush,677794651,Verilog,openplush,46,2,2023-10-07 08:38:42+00:00,[],None
44,https://github.com/kyrov/Hardware_Synthesis_Lab.git,2023-08-16 17:35:14+00:00,A repository contain verilog file from HW_Syn Class,0,kyrov/Hardware_Synthesis_Lab,679373412,Verilog,Hardware_Synthesis_Lab,651,2,2023-09-22 14:02:51+00:00,[],None
45,https://github.com/KushagraYADAV/Wallace-tree-and-Dadda-multiplier-Implementation.git,2023-08-23 12:22:03+00:00,,0,KushagraYADAV/Wallace-tree-and-Dadda-multiplier-Implementation,682090980,Verilog,Wallace-tree-and-Dadda-multiplier-Implementation,4,2,2024-03-18 13:23:57+00:00,[],None
46,https://github.com/wyvernSemi/firfilter.git,2023-08-16 12:23:30+00:00,Verilog finite impulse response filter,1,wyvernSemi/firfilter,679248342,Verilog,firfilter,343,2,2023-09-16 05:43:18+00:00,[],https://api.github.com/licenses/gpl-3.0
47,https://github.com/LainChip/complex_soc.git,2023-08-16 03:09:03+00:00,System-on-Chip designed for Lain Core on NSCSCC board,0,LainChip/complex_soc,679067705,Verilog,complex_soc,12407,2,2024-01-05 03:10:17+00:00,[],https://api.github.com/licenses/gpl-3.0
48,https://github.com/amrkhalid-star902/AMBA-BUS-PROTOCOL.git,2023-08-13 15:20:28+00:00,"In this project different bus architectures : APB , AHP , AXI that are part of AMBA (Advanced Microcontroller Bus Architecture) are implemented",1,amrkhalid-star902/AMBA-BUS-PROTOCOL,678066581,Verilog,AMBA-BUS-PROTOCOL,61,2,2024-01-29 12:24:03+00:00,[],None
49,https://github.com/JamesTimothyMeech/FPGA-Ignite-LFSR.git,2023-08-20 21:59:48+00:00,,0,JamesTimothyMeech/FPGA-Ignite-LFSR,680936246,Verilog,FPGA-Ignite-LFSR,1021,2,2023-08-30 14:11:55+00:00,[],https://api.github.com/licenses/mit
50,https://github.com/Kanishk-K-U/100daysofRTL.git,2023-08-15 17:47:40+00:00,,0,Kanishk-K-U/100daysofRTL,678925355,Verilog,100daysofRTL,25535,2,2024-03-16 10:05:42+00:00,[],None
51,https://github.com/Rafael-Espinosa-Bramasco/HA-FA.git,2023-08-23 01:05:10+00:00,Half Adder and Full Adder repository.,0,Rafael-Espinosa-Bramasco/HA-FA,681882072,Verilog,HA-FA,90,1,2023-08-25 04:18:38+00:00,[],None
52,https://github.com/fortify-iq/fiq-openaes-128e.git,2023-08-17 13:17:12+00:00,,0,fortify-iq/fiq-openaes-128e,679719719,Verilog,fiq-openaes-128e,1433,1,2023-09-13 13:29:24+00:00,[],
53,https://github.com/jorodriguez312/Lab1Digital.git,2023-08-29 21:54:01+00:00,,0,jorodriguez312/Lab1Digital,684796792,Verilog,Lab1Digital,11644,1,2023-12-01 22:08:35+00:00,[],None
54,https://github.com/Hrishikesh-S-Nair/AHB-to-APB_Bridge-Design.git,2023-08-13 22:00:51+00:00,This repository offers a comprehensive collection of Verilog netlist code aimed at the design and verification of an AHB (Advanced High-Performance Bus) to APB (Advanced Peripheral Bus) bridge. ,0,Hrishikesh-S-Nair/AHB-to-APB_Bridge-Design,678159946,Verilog,AHB-to-APB_Bridge-Design,11,1,2024-04-07 03:03:03+00:00,[],https://api.github.com/licenses/mit
55,https://github.com/YoussefAyman11/AES.git,2023-08-12 11:58:51+00:00,Verilog implementation of the symmetrical cipher AES-128,0,YoussefAyman11/AES,677717140,Verilog,AES,21,1,2023-08-13 23:22:50+00:00,[],None
56,https://github.com/mhamdy2712/SPI.git,2023-08-15 22:48:31+00:00,SPI Protocol,0,mhamdy2712/SPI,679009834,Verilog,SPI,26,1,2023-08-17 14:25:48+00:00,[],None
57,https://github.com/Shahiraosama/Clock_Divider.git,2023-08-22 11:59:00+00:00,,0,Shahiraosama/Clock_Divider,681619077,Verilog,Clock_Divider,18,1,2023-09-06 17:24:32+00:00,[],None
58,https://github.com/SantaCRC/tamagotchi.git,2023-08-24 17:21:23+00:00,,0,SantaCRC/tamagotchi,682674523,Verilog,tamagotchi,206,1,2023-09-07 12:33:59+00:00,[],https://api.github.com/licenses/apache-2.0
59,https://github.com/MichaelBell/pico-ice-projects.git,2023-08-15 20:34:46+00:00,,0,MichaelBell/pico-ice-projects,678975936,Verilog,pico-ice-projects,150,1,2023-10-01 09:12:20+00:00,[],https://api.github.com/licenses/mit
60,https://github.com/KakaoSoup/EEE4610.git,2023-08-14 06:47:38+00:00,Ï†ÑÍ∏∞Ï†ÑÏûêÏ¢ÖÌï©ÏÑ§Í≥Ñ,0,KakaoSoup/EEE4610,678269040,Verilog,EEE4610,102,1,2023-08-15 13:09:16+00:00,[],None
61,https://github.com/mleticiamn/Final_CPU_MIPS.git,2023-08-14 01:40:22+00:00,,0,mleticiamn/Final_CPU_MIPS,678195994,Verilog,Final_CPU_MIPS,26,1,2023-08-31 01:56:54+00:00,[],None
62,https://github.com/mhamdy2712/AES.git,2023-08-12 12:36:40+00:00,Encryption and Decryption 128bit using The Advanced Encryption Standard (AES) ,0,mhamdy2712/AES,677726187,Verilog,AES,16,1,2023-08-12 13:23:16+00:00,[],None
63,https://github.com/Shant1R/RISC-V.git,2023-08-20 13:43:27+00:00,This repository summaries the task and flow under the RISC-V workshop hosted by Kunal Ghosh of VSD Corp. Pvt. Ltd. ,0,Shant1R/RISC-V,680812995,Verilog,RISC-V,286,1,2023-09-11 03:56:11+00:00,[],None
64,https://github.com/mohamedhazem511/N_BIT_GENERAL_PURPOSE_INTEGER_PROCESSOR_RISC_V.git,2023-08-21 16:21:12+00:00,Graduation Project : Implement a 32-bit multi-Cycle microarchitecture RISC V processor based on Harvard Architecture  on a FPGA kit(spartan-6) using Xilinx‚Äôs tool ‚ÄúISE14.7‚Äù.,0,mohamedhazem511/N_BIT_GENERAL_PURPOSE_INTEGER_PROCESSOR_RISC_V,681264493,Verilog,N_BIT_GENERAL_PURPOSE_INTEGER_PROCESSOR_RISC_V,15,1,2023-09-11 21:03:45+00:00,[],None
65,https://github.com/NouraMedhat28/Single-Cycle-RISC-V.git,2023-08-18 11:16:55+00:00,,0,NouraMedhat28/Single-Cycle-RISC-V,680111196,Verilog,Single-Cycle-RISC-V,9,1,2023-08-18 18:03:24+00:00,[],None
66,https://github.com/adarsh-a11/phase_detector.git,2023-08-24 05:24:02+00:00,,0,adarsh-a11/phase_detector,682404615,Verilog,phase_detector,30,1,2023-12-04 09:25:01+00:00,[],None
67,https://github.com/BhAvYa010/Single-cycle-datapath-riscv-minimips.git,2023-08-13 11:48:56+00:00,"GitHub repo: Single Cycle Data Path RISC-V MiniMIPS. Verilog-based RISC-V processor with IF, ID, EX, MEM, WB stages. Educational and functional for studying processor architecture. Ideal for learning RISC-V and computer organization. Explore datapath and stages in this compact design.",0,BhAvYa010/Single-cycle-datapath-riscv-minimips,678009840,Verilog,Single-cycle-datapath-riscv-minimips,363,1,2023-12-12 14:06:55+00:00,[],None
68,https://github.com/Ali-Mokhtar02/SPI-Slave-connected-to-RAM-Verilog-Design.git,2023-08-29 11:39:38+00:00,Verilog Code for SPI slave connected to a single port synchronous RAM.,0,Ali-Mokhtar02/SPI-Slave-connected-to-RAM-Verilog-Design,684558109,Verilog,SPI-Slave-connected-to-RAM-Verilog-Design,513,1,2024-03-12 19:22:44+00:00,[],None
69,https://github.com/Cyberyzy/Verilog-16bit-calculator.git,2023-08-27 12:03:31+00:00,"A calculator based on 8 bit ALU, supporting operator precedence.",0,Cyberyzy/Verilog-16bit-calculator,683692983,Verilog,Verilog-16bit-calculator,40,1,2023-10-06 07:53:04+00:00,[],https://api.github.com/licenses/mit
70,https://github.com/yikoulian2001/pcie_adapter.git,2023-08-19 14:36:46+00:00,Pcie Endpoint DMA operation AdapterÔºåGet rid of the limitations of maxpayload and maxreadreqsize etc.,0,yikoulian2001/pcie_adapter,680527849,Verilog,pcie_adapter,67,1,2023-09-08 11:57:13+00:00,[],None
71,https://github.com/Herculoxz/DSP-ON-FPGA-.git,2023-08-17 18:06:28+00:00,eklavya 2k23- dsp on fpga ,0,Herculoxz/DSP-ON-FPGA-,679830787,Verilog,DSP-ON-FPGA-,1192,1,2023-11-04 14:02:32+00:00,[],
72,https://github.com/suraijmuhammed/intel-unnati.git,2023-08-17 18:30:14+00:00,,0,suraijmuhammed/intel-unnati,679840025,Verilog,intel-unnati,18847,1,2023-08-22 06:56:42+00:00,[],None
73,https://github.com/Sourav365/CORDIC_V2.git,2023-08-18 15:00:19+00:00,,0,Sourav365/CORDIC_V2,680189983,Verilog,CORDIC_V2,55,1,2023-09-18 12:26:34+00:00,[],None
74,https://github.com/Icarus131/iverilog-programs.git,2023-08-17 08:54:28+00:00,Collection of basic gates and circuits made using the Icarus Verilog Software,0,Icarus131/iverilog-programs,679623971,Verilog,iverilog-programs,2090,1,2023-08-19 16:26:21+00:00,[],None
75,https://github.com/zyadahmed24/SPI_Slave_TX-RX.git,2023-08-29 01:22:12+00:00,,0,zyadahmed24/SPI_Slave_TX-RX,684359085,Verilog,SPI_Slave_TX-RX,4,1,2023-08-29 01:24:20+00:00,[],None
76,https://github.com/mishraharsu/washing-machine-using-verilog.git,2023-08-24 17:11:06+00:00,I have created a project of washing machine using verilog in xillinx software.,0,mishraharsu/washing-machine-using-verilog,682670826,Verilog,washing-machine-using-verilog,2,1,2023-08-24 17:20:13+00:00,[],None
77,https://github.com/Kashyap682/Memory-Module-Layered-Testbench.git,2023-08-14 04:22:18+00:00,Layered Testbench for Memory Module,1,Kashyap682/Memory-Module-Layered-Testbench,678231452,Verilog,Memory-Module-Layered-Testbench,2,1,2024-01-29 09:57:39+00:00,"['memory', 'testbench', 'verilog']",None
78,https://github.com/efabless/EF_GPIO8.git,2023-08-28 09:23:08+00:00,A generic 8-bit General Purpose I/O (GPIO) Peripheral,0,efabless/EF_GPIO8,684017510,Verilog,EF_GPIO8,356,1,2024-01-16 13:41:08+00:00,[],https://api.github.com/licenses/apache-2.0
79,https://github.com/nezhajun/full_adder.git,2023-08-13 03:26:03+00:00,"Build a lightweight Verilog simulation environment with VScode, provides a full adder project example",0,nezhajun/full_adder,677905239,Verilog,full_adder,3,1,2023-10-03 11:25:30+00:00,[],None
80,https://github.com/Sai-Sahith/matrixmultiplication_using_DA.git,2023-08-26 17:00:20+00:00,Designed and Simulated Matrix vector multiplication using Verilog. it is a multiplier less design. multiplication is done using Distributed arithmatic architecture which consists of memory and a delay elements which takes less time and area.,0,Sai-Sahith/matrixmultiplication_using_DA,683466585,Verilog,matrixmultiplication_using_DA,69,1,2024-01-08 15:02:29+00:00,[],None
81,https://github.com/Aziz-Ru/Digital-System-Design-verilog-.git,2023-08-12 09:38:52+00:00,Here I write code in verilog for DSD.,0,Aziz-Ru/Digital-System-Design-verilog-,677684837,Verilog,Digital-System-Design-verilog-,43503,1,2023-08-21 08:32:05+00:00,[],None
82,https://github.com/themperek/ORConf23.git,2023-08-24 08:06:21+00:00,,1,themperek/ORConf23,682459522,Verilog,ORConf23,1331,1,2023-12-11 14:11:19+00:00,[],https://api.github.com/licenses/lgpl-2.1
83,https://github.com/bun137/iVerilog.git,2023-08-24 17:02:30+00:00,DDCO Lab Stuff,1,bun137/iVerilog,682667678,Verilog,iVerilog,27,1,2023-09-07 13:56:05+00:00,[],https://api.github.com/licenses/apache-2.0
84,https://github.com/cangtianhuang/BIT-pipelined-cpu.git,2023-08-23 09:21:36+00:00,A classic five-stage pipelined cpu based on the MIPS instruction set designed by BITers for learning purposes.,1,cangtianhuang/BIT-pipelined-cpu,682025315,Verilog,BIT-pipelined-cpu,66569,1,2023-09-08 16:33:04+00:00,[],None
85,https://github.com/m7md5303/Digital-Signal-Processing-Unit.git,2023-08-25 00:52:34+00:00,A DSP based on xilinix FPGA DSP (DSP48E1) with some extra combinational logic. The project was implemented using verilog. The design schematics including the implemented design was done through vivado tool.,0,m7md5303/Digital-Signal-Processing-Unit,682818383,Verilog,Digital-Signal-Processing-Unit,171,1,2023-10-18 13:35:58+00:00,[],None
86,https://github.com/PJDissanayake/Debouncing_push_buttons.git,2023-08-12 17:43:27+00:00,"This repository features a Verilog design for a push-button circuit that effectively eliminates the bouncing effect. Our solution generates clean step signals on both button press and release, ensuring reliable signal generation in the presence of noise.",0,PJDissanayake/Debouncing_push_buttons,677807582,Verilog,Debouncing_push_buttons,2,1,2023-08-17 15:24:16+00:00,[],None
87,https://github.com/Madhuu-XD/SynthoSphere-PIC16C5x-FPGA_Processor_Core.git,2023-08-25 16:58:22+00:00,PIC16C5x-compatible FPGA Processor core,0,Madhuu-XD/SynthoSphere-PIC16C5x-FPGA_Processor_Core,683126130,Verilog,SynthoSphere-PIC16C5x-FPGA_Processor_Core,3650,1,2023-12-29 08:22:03+00:00,[],None
88,https://github.com/shalan/MS_CLK_RST.git,2023-08-27 19:04:13+00:00,All digital clock and rest controller,4,shalan/MS_CLK_RST,683808746,Verilog,MS_CLK_RST,2870,1,2024-01-09 14:14:30+00:00,[],https://api.github.com/licenses/apache-2.0
89,https://github.com/GVTK7/Synthesis-Of-Add_sft_Multiplier.git,2023-08-18 08:12:50+00:00,The output files of Snthesized  Clock driven Add sift Multiplier using Cadence tool Genus,0,GVTK7/Synthesis-Of-Add_sft_Multiplier,680049569,Verilog,Synthesis-Of-Add_sft_Multiplier,4492,1,2023-12-10 15:23:49+00:00,[],None
90,https://github.com/DakshKalley/ece385-street-fighter.git,2023-08-28 03:30:35+00:00,System Verilog Implementation of Street Fighter,0,DakshKalley/ece385-street-fighter,683909466,Verilog,ece385-street-fighter,54969,1,2024-01-01 17:26:40+00:00,[],https://api.github.com/licenses/mit
91,https://github.com/Yunshui-Bai/RISC-V-CPU.git,2023-08-12 13:57:05+00:00,,0,Yunshui-Bai/RISC-V-CPU,677746250,Verilog,RISC-V-CPU,1323,1,2024-01-11 07:39:05+00:00,[],None
92,https://github.com/AniruddhaN2203/pes_asic_class.git,2023-08-17 14:07:54+00:00,,0,AniruddhaN2203/pes_asic_class,679740768,Verilog,pes_asic_class,1481,1,2024-01-30 18:52:35+00:00,[],None
93,https://github.com/saumyatshah/microprocessor-design.git,2023-08-21 22:27:24+00:00,Design of a CISC based 8-bit microprocessor,0,saumyatshah/microprocessor-design,681380119,Verilog,microprocessor-design,10,1,2024-02-15 06:12:21+00:00,[],None
94,https://github.com/AmirhosseinR/VeeRwolf.git,2023-08-27 14:33:02+00:00,VeeRwolf (a platform for the VeeR family of RISC-V cores) for Nexys Video Board: https://github.com/chipsalliance/VeeRwolf,1,AmirhosseinR/VeeRwolf,683733389,Verilog,VeeRwolf,1619,1,2024-02-22 13:04:37+00:00,"['nexys-video', 'risc-v', 'veerwolf']",None
95,https://github.com/kuhgeork/RISC_V_single_cycle_processor.git,2023-08-24 09:18:10+00:00,RISC V implementation,0,kuhgeork/RISC_V_single_cycle_processor,682485237,Verilog,RISC_V_single_cycle_processor,444,1,2024-03-31 16:26:00+00:00,[],https://api.github.com/licenses/gpl-3.0
96,https://github.com/elkw/Computer-aided-VLSI-System-Design.git,2023-08-20 18:38:00+00:00,,0,elkw/Computer-aided-VLSI-System-Design,680893354,Verilog,Computer-aided-VLSI-System-Design,107595,1,2024-04-01 13:16:09+00:00,[],None
97,https://github.com/pawan0011/verilog_practice_code.git,2023-08-15 12:57:36+00:00,this is my practice code on verilog code,0,pawan0011/verilog_practice_code,678816747,Verilog,verilog_practice_code,23,1,2023-08-16 12:56:49+00:00,[],None
98,https://github.com/Shahiraosama/UART_TX.git,2023-08-17 22:29:02+00:00,,0,Shahiraosama/UART_TX,679906227,Verilog,UART_TX,10,1,2023-09-06 17:25:07+00:00,[],None
99,https://github.com/VardhanSuroshi/VLSI-ASIC-Design-Flow.git,2023-08-18 09:27:07+00:00,"This repository is dedicated to VLSI ASIC Design Flow using open-source tools! Here, we embark on a journey that starts with specifications, RTL DV, Synthesis, Physical Design, Signoff and Finally Tape-It-Out",0,VardhanSuroshi/VLSI-ASIC-Design-Flow,680075053,Verilog,VLSI-ASIC-Design-Flow,3077,1,2024-01-23 18:49:01+00:00,"['openlane', 'opensource', 'risc-v', 'rtl', 'vlsi', 'vlsi-design', 'vlsi-physical-design', 'asic-design', 'skywater']",None
100,https://github.com/jeffreymonjacastro/2023-II.git,2023-08-14 19:43:27+00:00,4th cicle,0,jeffreymonjacastro/2023-II,678540606,Verilog,2023-II,24478,1,2023-12-01 03:59:38+00:00,[],None
101,https://github.com/isomoye/EEGR471.git,2023-08-15 13:34:06+00:00,EEGR471 VLSI,0,isomoye/EEGR471,678829934,Verilog,EEGR471,105923,1,2023-11-09 23:33:27+00:00,[],None
102,https://github.com/amrkhalid-star902/TPU.git,2023-08-18 17:22:46+00:00,In this project a Tensor Processing Unit (TPU) is implemented on FPGA,0,amrkhalid-star902/TPU,680237798,Verilog,TPU,46,1,2024-01-29 12:24:01+00:00,[],None
103,https://github.com/ISmillex/Simon-Game-FPGA.git,2023-08-25 10:37:47+00:00,A hardware project that implements the classic Simon Game using Verilog programming language on the Basys3 FPGA development board.,0,ISmillex/Simon-Game-FPGA,682990592,Verilog,Simon-Game-FPGA,24,1,2023-11-06 08:15:28+00:00,"['electronics', 'fpga', 'game', 'verilog']",https://api.github.com/licenses/mit
104,https://github.com/vamsi-2312/pes_asic_class.git,2023-08-14 16:14:57+00:00,,0,vamsi-2312/pes_asic_class,678469153,Verilog,pes_asic_class,437,1,2023-09-03 12:26:05+00:00,[],None
105,https://github.com/mcjtag/hamming_code.git,2023-08-14 16:41:36+00:00,Hamming code implementation in Verilog,0,mcjtag/hamming_code,678480390,Verilog,hamming_code,3,1,2024-01-26 10:40:12+00:00,[],https://api.github.com/licenses/mit
106,https://github.com/VenuPabbuleti/100-Days-RTL-using-Verilog.git,2023-08-29 06:16:48+00:00,RTL Design using Verilog Hardware Description Language,2,VenuPabbuleti/100-Days-RTL-using-Verilog,684443684,Verilog,100-Days-RTL-using-Verilog,9982,1,2024-03-05 03:48:24+00:00,[],https://api.github.com/licenses/mit
107,https://github.com/abartella02/asip-stepper-motor-controller-full.git,2023-08-17 18:56:09+00:00,,0,abartella02/asip-stepper-motor-controller-full,679849371,Verilog,asip-stepper-motor-controller-full,25152,1,2024-04-07 09:04:11+00:00,[],None
108,https://github.com/MukeshIITB/SYNC_FIFO.git,2023-08-18 10:10:49+00:00,This file contains code & testbenches for SINGLE clock synchronous fifo in verilog,0,MukeshIITB/SYNC_FIFO,680089906,Verilog,SYNC_FIFO,212,1,2023-08-18 10:26:57+00:00,[],None
109,https://github.com/Bodagattu/AES.git,2023-08-22 16:01:40+00:00,,0,Bodagattu/AES,681721814,Verilog,AES,7,1,2023-08-22 16:18:52+00:00,[],None
110,https://github.com/zyadahmed24/CRC.git,2023-08-21 14:57:17+00:00,,0,zyadahmed24/CRC,681231494,Verilog,CRC,501,1,2023-08-29 01:24:21+00:00,[],None
111,https://github.com/abdul-muyeed/DSD.git,2023-08-16 07:15:29+00:00,,0,abdul-muyeed/DSD,679137247,Verilog,DSD,3,1,2023-09-02 20:08:46+00:00,[],None
112,https://github.com/dabinl1258/dabin_ICE40UP5K_Example.git,2023-08-20 00:57:06+00:00,lattice ICE40UP5K Example Design by dabin ,0,dabinl1258/dabin_ICE40UP5K_Example,680657620,Verilog,dabin_ICE40UP5K_Example,4,1,2023-10-10 09:30:07+00:00,[],None
113,https://github.com/arhamhashmi01/RTL_Practice.git,2023-08-22 18:15:00+00:00,,0,arhamhashmi01/RTL_Practice,681771781,Verilog,RTL_Practice,6,1,2024-03-19 06:38:42+00:00,[],None
114,https://github.com/mhamdy2712/Washing-Machine-Controller.git,2023-08-12 12:39:32+00:00,Washing machine controller with ability to pause spinning and double wash,0,mhamdy2712/Washing-Machine-Controller,677726839,Verilog,Washing-Machine-Controller,3,1,2023-08-12 13:23:30+00:00,[],None
115,https://github.com/SeyyedAhmadRokni/Risc_v_pipeline.git,2023-08-15 08:22:22+00:00,,0,SeyyedAhmadRokni/Risc_v_pipeline,678727118,Verilog,Risc_v_pipeline,2647,1,2023-08-20 05:44:12+00:00,[],None
116,https://github.com/AmirHamzahR/IRTransmitter.git,2023-08-16 06:46:58+00:00,Created my own infra-red transmitter for a remote car controller using Verilog in Xilinx FPGA,0,AmirHamzahR/IRTransmitter,679127792,Verilog,IRTransmitter,291,1,2023-08-16 08:18:22+00:00,[],None
117,https://github.com/YoussefAyman11/SPI.git,2023-08-17 14:33:05+00:00,A Verilog implementation of SPI master with multiple slaves featuring all 4 modes.,0,YoussefAyman11/SPI,679751431,Verilog,SPI,11,1,2023-08-22 12:23:10+00:00,[],None
118,https://github.com/qinhant/SE_verification_CCS.git,2023-08-25 13:59:30+00:00,,0,qinhant/SE_verification_CCS,683061191,Verilog,SE_verification_CCS,477,1,2024-02-14 04:25:13+00:00,[],https://api.github.com/licenses/apache-2.0
119,https://github.com/m0jks/verilog-pcie.git,2023-08-21 14:39:54+00:00,,0,m0jks/verilog-pcie,681224174,Verilog,verilog-pcie,1259,1,2024-01-30 19:37:48+00:00,[],https://api.github.com/licenses/mit
120,https://github.com/mathdufo/UART.git,2023-08-13 23:14:29+00:00,,0,mathdufo/UART,678171446,Verilog,UART,4,1,2023-08-13 23:52:35+00:00,[],https://api.github.com/licenses/mit
121,https://github.com/gautamV19/CPU-Implementation.git,2023-08-14 12:08:16+00:00,,0,gautamV19/CPU-Implementation,678374916,Verilog,CPU-Implementation,80,1,2023-10-15 20:31:21+00:00,[],None
122,https://github.com/Ajaymalolan/Hamming_code_verilog.git,2023-08-18 15:32:17+00:00,,0,Ajaymalolan/Hamming_code_verilog,680201265,Verilog,Hamming_code_verilog,4,1,2023-11-21 14:29:49+00:00,[],None
123,https://github.com/myyerrol/learning-digital-circuit.git,2023-08-14 06:21:20+00:00,":book: This project contains the code I wrote when I was learning USTC digital circuit, and the simulation tool supports vivado.",0,myyerrol/learning-digital-circuit,678261092,Verilog,learning-digital-circuit,198,1,2024-03-17 12:14:13+00:00,[],https://api.github.com/licenses/gpl-3.0
124,https://github.com/tart-telescope/signal_pipeline.git,2023-08-25 01:59:08+00:00,The signal processing and correlation components of the TART radio telescope,1,tart-telescope/signal_pipeline,682837316,Verilog,signal_pipeline,406,1,2023-09-23 08:21:07+00:00,[],https://api.github.com/licenses/mit
125,https://github.com/zyadahmed24/UART_TX.git,2023-08-21 14:52:25+00:00,,0,zyadahmed24/UART_TX,681229477,Verilog,UART_TX,701,1,2023-08-29 01:24:22+00:00,[],None
126,https://github.com/SakethGajawada/RISCV_GNU.git,2023-08-21 17:51:19+00:00,,0,SakethGajawada/RISCV_GNU,681297667,Verilog,RISCV_GNU,5630,1,2024-01-03 16:56:47+00:00,[],None
127,https://github.com/socks2309/neural-network-fpga.git,2023-08-29 13:46:32+00:00,This project is part of the B.Tech degree in Electronics and Telecommunication Engineering at KIIT University.,1,socks2309/neural-network-fpga,684610701,Verilog,neural-network-fpga,22534,1,2023-10-03 12:28:39+00:00,"['c-programming', 'fpga-programming', 'high-level-synthesis', 'neural-network', 'verilog-hdl']",https://api.github.com/licenses/mit
128,https://github.com/Ali-Mokhtar02/AMD-Spartan6-dsp48a1-Verilog-Design.git,2023-08-29 12:43:04+00:00,Verilog Code For spartan6 dsp48a1 with a simple test bench to verify the design,0,Ali-Mokhtar02/AMD-Spartan6-dsp48a1-Verilog-Design,684583113,Verilog,AMD-Spartan6-dsp48a1-Verilog-Design,324,0,2023-11-12 12:36:57+00:00,[],None
129,https://github.com/shuaikangzhang/demo.git,2023-08-29 14:47:48+00:00,123,0,shuaikangzhang/demo,684637649,Verilog,demo,10,0,2023-09-01 08:51:05+00:00,[],None
130,https://github.com/RlingM/Pipeline.git,2023-08-24 08:11:36+00:00,Pipeline,0,RlingM/Pipeline,682461448,Verilog,Pipeline,2667,0,2023-08-24 08:25:23+00:00,[],None
131,https://github.com/ajaygoswami2612/DCT.git,2023-08-24 13:41:06+00:00,,0,ajaygoswami2612/DCT,682585295,Verilog,DCT,14,0,2023-08-24 13:44:48+00:00,[],None
132,https://github.com/QEDady/RISC-V-Processor.git,2023-08-28 22:23:12+00:00,,1,QEDady/RISC-V-Processor,684315216,Verilog,RISC-V-Processor,883,0,2023-08-28 22:45:30+00:00,[],None
133,https://github.com/priyankahembram/Vending-machine--verilog.git,2023-08-25 14:37:17+00:00,,0,priyankahembram/Vending-machine--verilog,683075553,Verilog,Vending-machine--verilog,1,0,2023-08-25 14:37:43+00:00,[],None
134,https://github.com/VamseeKVK/Verilog-HDL.git,2023-08-25 03:23:41+00:00,,0,VamseeKVK/Verilog-HDL,682858247,Verilog,Verilog-HDL,65,0,2023-08-25 05:08:42+00:00,[],None
135,https://github.com/swrjima/Automatic-Washing-Machine.git,2023-08-25 05:21:07+00:00,,0,swrjima/Automatic-Washing-Machine,682885380,Verilog,Automatic-Washing-Machine,3,0,2023-08-25 05:24:58+00:00,[],None
136,https://github.com/JiaaaweiL/HDL_bits_Solutions.git,2023-08-25 05:07:01+00:00,"The answer to HDL bits written by myself. It is not necessarily the optimal solution, but it is correct with a high probability (at least through compilation, the waveform diagram is correct?",0,JiaaaweiL/HDL_bits_Solutions,682881971,Verilog,HDL_bits_Solutions,1,0,2023-08-25 06:14:05+00:00,[],None
137,https://github.com/AnubhavSinghPawar/Asynchronous-FIFO-Memory-Module.git,2023-08-25 13:27:40+00:00,,0,AnubhavSinghPawar/Asynchronous-FIFO-Memory-Module,683049356,Verilog,Asynchronous-FIFO-Memory-Module,3,0,2023-08-25 13:28:36+00:00,[],None
138,https://github.com/radio-chet/16-Bit-CPU-using-Verilog.git,2023-08-24 23:26:30+00:00,,0,radio-chet/16-Bit-CPU-using-Verilog,682786857,Verilog,16-Bit-CPU-using-Verilog,381,0,2023-08-24 23:28:52+00:00,[],None
139,https://github.com/Phxix911/Vector-database-controller.git,2023-08-23 02:11:28+00:00,,0,Phxix911/Vector-database-controller,681897530,Verilog,Vector-database-controller,2852,0,2023-08-23 02:14:41+00:00,[],None
140,https://github.com/neild-coder/8-Bit-ALU.git,2023-08-28 16:36:00+00:00,Simple 8-Bit-ALU,0,neild-coder/8-Bit-ALU,684192262,Verilog,8-Bit-ALU,1,0,2023-08-28 16:36:43+00:00,[],None
141,https://github.com/oshov/DSD.git,2023-08-28 17:37:01+00:00,,0,oshov/DSD,684219408,Verilog,DSD,13,0,2023-08-28 17:38:21+00:00,[],None
142,https://github.com/JamesHoi/cpu-verilog.git,2023-08-29 02:49:37+00:00,FPGAÊ®°ÊãüCPUÁªÑÊàêÂπ∂ÂÆûÁé∞Ëá™ÂÆö‰πâÊåá‰ª§ÈõÜ,0,JamesHoi/cpu-verilog,684382026,Verilog,cpu-verilog,35,0,2023-08-29 02:57:49+00:00,[],None
143,https://github.com/projectDV/Assertions.git,2023-08-28 05:31:40+00:00,,0,projectDV/Assertions,683939688,Verilog,Assertions,12,0,2023-09-14 06:12:21+00:00,[],None
144,https://github.com/chenwei0129/Bit-blade-circuit.git,2023-08-29 12:24:07+00:00,,0,chenwei0129/Bit-blade-circuit,684575495,Verilog,Bit-blade-circuit,64,0,2023-08-29 12:28:10+00:00,[],None
145,https://github.com/NOP-Processor/NOP-Misc.git,2023-08-29 13:37:34+00:00,Miscellaneous objects for NOP in NSCSCC 2023.,0,NOP-Processor/NOP-Misc,684606740,Verilog,NOP-Misc,570,0,2023-08-29 14:01:56+00:00,[],None
146,https://github.com/marc0620/NTU_ICD_2022.git,2023-08-18 08:15:17+00:00,,0,marc0620/NTU_ICD_2022,680050322,Verilog,NTU_ICD_2022,15726,0,2023-08-18 08:16:37+00:00,[],None
147,https://github.com/AkshatGupta468/RISC-V_RV32I.git,2023-08-18 11:25:20+00:00,,2,AkshatGupta468/RISC-V_RV32I,680113908,Verilog,RISC-V_RV32I,101,0,2023-08-18 11:26:46+00:00,[],None
148,https://github.com/JheelMak/PWM-Generator.git,2023-08-19 06:31:56+00:00,,0,JheelMak/PWM-Generator,680408636,Verilog,PWM-Generator,4052,0,2023-10-19 04:27:25+00:00,[],None
149,https://github.com/m0jks/1000base-X.git,2023-08-21 19:59:23+00:00,,0,m0jks/1000base-X,681342336,Verilog,1000base-X,8672,0,2023-08-24 13:54:45+00:00,[],None
150,https://github.com/coollabtju/crosslinki2chardcore.git,2023-08-15 03:56:11+00:00,Lattice FPGA CrossLink  I2C Hardened IP write Operation.,0,coollabtju/crosslinki2chardcore,678657196,Verilog,crosslinki2chardcore,25,0,2023-08-15 03:59:49+00:00,[],None
151,https://github.com/Souvik996/Harvard-architecture-processor-design.git,2023-08-15 07:28:40+00:00,,0,Souvik996/Harvard-architecture-processor-design,678710739,Verilog,Harvard-architecture-processor-design,511,0,2023-08-15 17:34:33+00:00,[],https://api.github.com/licenses/gpl-3.0
152,https://github.com/NamrathaCTR/Asynchronous-FIFO.git,2023-08-17 20:57:21+00:00,,0,NamrathaCTR/Asynchronous-FIFO,679885640,Verilog,Asynchronous-FIFO,3,0,2023-08-17 20:58:15+00:00,[],None
153,https://github.com/neeraj-patidar/705_Tasks.git,2023-08-17 21:16:09+00:00,,0,neeraj-patidar/705_Tasks,679890111,Verilog,705_Tasks,306,0,2023-08-17 21:18:30+00:00,[],None
154,https://github.com/Ayman-Helal/32-bit-RISC-V-Processor-Harvard-Architecture-with-Verilog-.git,2023-08-17 23:59:50+00:00,this project is the RISC-V RTL codes and the Assembly Programm to test the Processor,0,Ayman-Helal/32-bit-RISC-V-Processor-Harvard-Architecture-with-Verilog-,679924396,Verilog,32-bit-RISC-V-Processor-Harvard-Architecture-with-Verilog-,5,0,2023-08-18 00:04:29+00:00,[],None
155,https://github.com/aks7865/Design-of-Asynchronous-FIFO.git,2023-08-18 05:00:02+00:00,,0,aks7865/Design-of-Asynchronous-FIFO,679990288,Verilog,Design-of-Asynchronous-FIFO,392,0,2023-08-18 13:37:38+00:00,[],None
156,https://github.com/yikoulian2001/Nvme-endpoint.git,2023-08-19 15:39:12+00:00,,0,yikoulian2001/Nvme-endpoint,680545433,Verilog,Nvme-endpoint,3,0,2023-08-19 15:44:37+00:00,[],None
157,https://github.com/rtalwart/Verilog_labs.git,2023-08-16 21:33:32+00:00,These are some of the basic labs for verilog,0,rtalwart/Verilog_labs,679445436,Verilog,Verilog_labs,1,0,2023-08-16 23:38:30+00:00,[],None
158,https://github.com/Inventor-X/alarm-clock.git,2023-08-22 05:07:59+00:00,,0,Inventor-X/alarm-clock,681472030,Verilog,alarm-clock,2,0,2023-08-22 05:10:36+00:00,[],None
159,https://github.com/VISHNU-VARDHAN-GURRALA/Pulse-Width-Modulation-Using-Verilog.git,2023-08-22 10:37:31+00:00,,0,VISHNU-VARDHAN-GURRALA/Pulse-Width-Modulation-Using-Verilog,681589199,Verilog,Pulse-Width-Modulation-Using-Verilog,2,0,2023-08-22 10:38:40+00:00,[],None
160,https://github.com/Pinigelbard/ALU_4bit.git,2023-08-22 13:26:45+00:00,ALU_4bit_testbench_Verilog,0,Pinigelbard/ALU_4bit,681655211,Verilog,ALU_4bit,2,0,2023-08-22 13:29:13+00:00,[],None
161,https://github.com/meetbhatt2113/USR-Universal-Shift-Register-.git,2023-08-22 09:32:06+00:00,,0,meetbhatt2113/USR-Universal-Shift-Register-,681564094,Verilog,USR-Universal-Shift-Register-,1,0,2023-08-22 09:33:47+00:00,[],None
162,https://github.com/cepdnaclk/e17-co502-RV32IM-and-PipelineProcessor-and-Extention-Group_3.git,2023-08-22 08:08:55+00:00,,2,cepdnaclk/e17-co502-RV32IM-and-PipelineProcessor-and-Extention-Group_3,681532896,Verilog,e17-co502-RV32IM-and-PipelineProcessor-and-Extention-Group_3,8156,0,2023-11-07 20:17:19+00:00,[],None
163,https://github.com/ajaygoswami2612/Digital_Clock.git,2023-08-22 19:25:13+00:00,,0,ajaygoswami2612/Digital_Clock,681798565,Verilog,Digital_Clock,441,0,2023-08-24 12:54:25+00:00,[],None
164,https://github.com/Ali-Bakhtiarian/QRNG.git,2023-08-22 07:03:42+00:00,Quantum Random Number Generator,0,Ali-Bakhtiarian/QRNG,681509304,Verilog,QRNG,9,0,2023-08-22 07:05:17+00:00,[],None
165,https://github.com/ajaygoswami2612/Lammings-Game.git,2023-08-22 16:40:04+00:00,project on lammings game,0,ajaygoswami2612/Lammings-Game,681736448,Verilog,Lammings-Game,11960,0,2023-08-23 13:38:18+00:00,[],None
166,https://github.com/bhavaniprasad2001/verilog_basic-programs.git,2023-08-22 17:55:39+00:00,,0,bhavaniprasad2001/verilog_basic-programs,681764623,Verilog,verilog_basic-programs,6,0,2023-08-22 17:57:07+00:00,[],None
167,https://github.com/mohamedhazem511/Automatic_Garage_Door_Controller.git,2023-08-22 17:38:39+00:00,,0,mohamedhazem511/Automatic_Garage_Door_Controller,681757887,Verilog,Automatic_Garage_Door_Controller,48,0,2023-08-22 17:39:17+00:00,[],None
168,https://github.com/mohamedhazem511/clk_div.git,2023-08-22 17:43:26+00:00,,0,mohamedhazem511/clk_div,681759584,Verilog,clk_div,3,0,2023-08-22 17:43:50+00:00,[],None
169,https://github.com/monish-nath/quick_sort_hw.git,2023-08-23 16:23:36+00:00,Design of a Verilog module to sort a M length array using quick sort,0,monish-nath/quick_sort_hw,682188956,Verilog,quick_sort_hw,1703,0,2023-08-23 16:28:54+00:00,[],None
170,https://github.com/ghaithkdimati/AES-Verilog.git,2023-08-23 17:07:57+00:00,,0,ghaithkdimati/AES-Verilog,682205254,Verilog,AES-Verilog,10,0,2023-08-23 17:12:29+00:00,[],None
171,https://github.com/shananjana/advance-system-bus.git,2023-08-27 03:16:16+00:00,,0,shananjana/advance-system-bus,683580720,Verilog,advance-system-bus,5915,0,2023-08-27 03:59:28+00:00,[],https://api.github.com/licenses/mit
172,https://github.com/j-k01/davis-alveo-u280.git,2023-08-27 02:02:14+00:00,Repo for collaboration using the Alveo U280,0,j-k01/davis-alveo-u280,683569198,Verilog,davis-alveo-u280,31,0,2023-08-27 02:08:20+00:00,[],None
173,https://github.com/filipeparreira/SistemasDigitais.git,2023-08-27 13:56:25+00:00,Arquivos referente √† disciplina de Sistemas Digitais,0,filipeparreira/SistemasDigitais,683722836,Verilog,SistemasDigitais,9319,0,2023-09-06 17:04:29+00:00,[],https://api.github.com/licenses/mit
174,https://github.com/MohamedDawod29/UART.git,2023-08-27 14:07:05+00:00,,0,MohamedDawod29/UART,683725920,Verilog,UART,292,0,2023-08-27 14:57:30+00:00,[],None
175,https://github.com/Shubham-makar/SAT-Attack.git,2023-08-14 18:43:53+00:00,,0,Shubham-makar/SAT-Attack,678522401,Verilog,SAT-Attack,5511,0,2023-08-14 18:47:25+00:00,[],None
176,https://github.com/Tarak12-star/Asynchronous-FIFO.git,2023-08-13 09:18:54+00:00,,0,Tarak12-star/Asynchronous-FIFO,677975609,Verilog,Asynchronous-FIFO,1548,0,2023-08-17 06:25:26+00:00,[],None
177,https://github.com/omkarnaik17/8-bit-processor_Verilog.git,2023-08-13 09:04:55+00:00,,0,omkarnaik17/8-bit-processor_Verilog,677972536,Verilog,8-bit-processor_Verilog,5,0,2023-08-13 09:05:56+00:00,[],None
178,https://github.com/Reshusaini/TCL_Workshop_Basic-to-advance.git,2023-08-26 14:18:44+00:00,TCL Workshop_5 DAYS: Learning from  Basic of TCL basics to Advance Scripting Techniques in VLSI,0,Reshusaini/TCL_Workshop_Basic-to-advance,683420782,Verilog,TCL_Workshop_Basic-to-advance,888,0,2023-08-29 18:03:38+00:00,[],None
179,https://github.com/EstebanS-O/Digital-1.git,2023-08-29 01:02:00+00:00,entregas y pr√°cticas electr√≥nica digital 1,0,EstebanS-O/Digital-1,684354025,Verilog,Digital-1,15625,0,2023-10-03 20:43:28+00:00,[],None
180,https://github.com/bb33bb/Side_channel_attack.git,2023-08-27 06:50:09+00:00,,0,bb33bb/Side_channel_attack,683620651,,Side_channel_attack,1288,0,2023-08-27 06:50:10+00:00,[],None
181,https://github.com/odinx123/HDLbits.git,2023-08-18 09:10:22+00:00,,0,odinx123/HDLbits,680068941,Verilog,HDLbits,35,0,2024-04-07 08:49:13+00:00,[],None
182,https://github.com/DasMayur/Floating-Point-ALU.git,2023-08-13 06:11:44+00:00,It takes 16 bit floating point numbers in input calculates given instruction and shows output as 16 bit floating point numberes,0,DasMayur/Floating-Point-ALU,677935570,Verilog,Floating-Point-ALU,204,0,2023-09-06 04:55:55+00:00,[],None
183,https://github.com/Sofiaafsar/processor.git,2023-08-13 06:57:47+00:00,,0,Sofiaafsar/processor,677945042,Verilog,processor,62,0,2023-08-13 06:58:22+00:00,[],None
184,https://github.com/guavarav/Asynchronous-FIFO-Design.git,2023-08-15 10:12:50+00:00,,1,guavarav/Asynchronous-FIFO-Design,678762605,Verilog,Asynchronous-FIFO-Design,5,0,2023-08-15 13:32:38+00:00,[],None
185,https://github.com/Mohammed-Mairajuddin-Musharraf/Digital_filters.git,2023-08-15 22:29:24+00:00,,0,Mohammed-Mairajuddin-Musharraf/Digital_filters,679005549,Verilog,Digital_filters,3,0,2023-08-15 22:44:01+00:00,[],None
186,https://github.com/HarshPatel1503/Single-Port-RAM.git,2023-08-13 18:47:13+00:00,,0,HarshPatel1503/Single-Port-RAM,678121556,Verilog,Single-Port-RAM,412,0,2023-08-13 18:48:56+00:00,[],None
187,https://github.com/HiteshKumarTyro/Dadda_Multiplier_20_bits.git,2023-08-13 18:31:29+00:00,,0,HiteshKumarTyro/Dadda_Multiplier_20_bits,678117907,Verilog,Dadda_Multiplier_20_bits,15,0,2023-08-13 18:32:08+00:00,[],None
188,https://github.com/Devanshg1908/Design-And-Implementation-of-Asynchronous-FIFO.git,2023-08-13 14:20:51+00:00,,0,Devanshg1908/Design-And-Implementation-of-Asynchronous-FIFO,678050159,Verilog,Design-And-Implementation-of-Asynchronous-FIFO,3,0,2023-08-13 14:21:50+00:00,[],None
189,https://github.com/aqaPayam/DSD_Assignment.git,2023-08-14 11:01:10+00:00,Digital System Design - 4 Assignment and Midterm exam [SPRING SEM 2022-2023],0,aqaPayam/DSD_Assignment,678352441,Verilog,DSD_Assignment,10071,0,2023-08-14 11:03:46+00:00,[],None
190,https://github.com/Dilip-nith/TEST.git,2023-08-16 08:53:49+00:00,To check Efabless process flow,0,Dilip-nith/TEST,679172012,Verilog,TEST,11914,0,2023-08-16 08:54:49+00:00,[],https://api.github.com/licenses/apache-2.0
191,https://github.com/ahmedemad9/Digital.git,2023-08-15 16:18:28+00:00,,0,ahmedemad9/Digital,678893600,Verilog,Digital,18,0,2023-08-15 16:33:46+00:00,[],None
192,https://github.com/Domtaxx/Laboratorio1.git,2023-08-18 21:31:18+00:00,,0,Domtaxx/Laboratorio1,680307445,Verilog,Laboratorio1,76398,0,2023-08-19 04:27:07+00:00,[],None
193,https://github.com/shiv013iitb/Asynchronous-Synchronous-FIFO.git,2023-08-17 17:54:17+00:00,,0,shiv013iitb/Asynchronous-Synchronous-FIFO,679826351,Verilog,Asynchronous-Synchronous-FIFO,384,0,2023-08-17 18:29:49+00:00,[],None
194,https://github.com/YASH-malve/Digital_oscilloscope_using_FPGA.git,2023-08-18 13:20:43+00:00,,0,YASH-malve/Digital_oscilloscope_using_FPGA,680153246,Verilog,Digital_oscilloscope_using_FPGA,49,0,2023-08-18 20:26:29+00:00,[],None
195,https://github.com/dennisgookyi/experimenting.git,2023-08-18 11:24:56+00:00,,0,dennisgookyi/experimenting,680113776,Verilog,experimenting,11913,0,2023-08-18 11:26:00+00:00,[],https://api.github.com/licenses/apache-2.0
196,https://github.com/Spirithead/PWM.git,2023-08-19 19:42:39+00:00,,0,Spirithead/PWM,680608024,Verilog,PWM,5,0,2023-08-19 19:43:56+00:00,[],None
197,https://github.com/psjsptcoder/Digital_CircuitDesign_IN_verilog.git,2023-08-27 07:25:13+00:00,Various digital circuits I have designed during my learning. You can go through the codes and check all the designs.,0,psjsptcoder/Digital_CircuitDesign_IN_verilog,683628719,Verilog,Digital_CircuitDesign_IN_verilog,84,0,2023-08-28 14:03:04+00:00,[],None
198,https://github.com/PJDissanayake/SimpleMux4to1-Verilog.git,2023-08-21 12:48:02+00:00,"A beginner-friendly Verilog implementation of a 4-to-1 multiplexer. Learn the basics of digital design with this. Watch the step-by-step guide on YouTube: [Add_Your_YouTube_Link_Here]"" hands-on example",0,PJDissanayake/SimpleMux4to1-Verilog,681178427,Verilog,SimpleMux4to1-Verilog,48,0,2023-08-21 13:00:55+00:00,[],None
199,https://github.com/KeerthiBhushanM/Simple-Memory-Game.git,2023-08-20 08:04:04+00:00,,0,KeerthiBhushanM/Simple-Memory-Game,680732321,Verilog,Simple-Memory-Game,2,0,2023-08-20 08:10:09+00:00,[],None
200,https://github.com/Chaitanya-Meshram/AES.git,2023-08-28 04:42:32+00:00,Advanced Encryption Standard,0,Chaitanya-Meshram/AES,683926461,Verilog,AES,77,0,2023-08-28 05:10:20+00:00,[],None
201,https://github.com/ricejar/ECSE-4770-Computer-Hardware-Design.git,2023-08-29 01:09:02+00:00,,0,ricejar/ECSE-4770-Computer-Hardware-Design,684355970,Verilog,ECSE-4770-Computer-Hardware-Design,24943,0,2023-08-29 02:04:52+00:00,[],None
202,https://github.com/nourhussin/sequential_multiplier_8bits.git,2023-08-28 19:36:45+00:00,,0,nourhussin/sequential_multiplier_8bits,684265168,Verilog,sequential_multiplier_8bits,6,0,2023-08-28 20:26:41+00:00,[],None
203,https://github.com/Asma-Mohsin/CyberGuard-Fortifying-Tomorrows-data_AI-based-design.git,2023-08-28 16:58:51+00:00,,0,Asma-Mohsin/CyberGuard-Fortifying-Tomorrows-data_AI-based-design,684203312,Verilog,CyberGuard-Fortifying-Tomorrows-data_AI-based-design,121187,0,2023-08-28 16:59:59+00:00,[],https://api.github.com/licenses/apache-2.0
204,https://github.com/MohamedDawod29/ALU.git,2023-08-29 14:24:16+00:00,,0,MohamedDawod29/ALU,684627462,Verilog,ALU,104,0,2023-08-29 14:26:14+00:00,[],None
205,https://github.com/jbahrenburg7/Verilog-32-Bit-Computer-Processor.git,2023-08-29 02:14:15+00:00,A 32-bit Computer processor with a MIPS-esque instruction set.,0,jbahrenburg7/Verilog-32-Bit-Computer-Processor,684372462,Verilog,Verilog-32-Bit-Computer-Processor,115,0,2023-08-29 02:16:35+00:00,[],None
206,https://github.com/JamesHoi/bath-heater.git,2023-08-29 02:36:34+00:00,Âü∫‰∫éCPLDÁöÑÊ®°ÊãüÈ£éÊöñÂºèÊµ¥Èú∏ÊéßÂà∂Âô®ÁöÑËÆæËÆ°‰∏éÂÆûÁé∞,0,JamesHoi/bath-heater,684378412,Verilog,bath-heater,2069,0,2023-08-29 02:42:10+00:00,[],None
207,https://github.com/gt-cs3220-23fall/cs3220-labs.git,2023-08-24 21:52:35+00:00,,3,gt-cs3220-23fall/cs3220-labs,682763275,Verilog,cs3220-labs,5262,0,2023-10-10 02:56:50+00:00,[],None
208,https://github.com/shivamverma060/Booth_Multiplier_Verilog.git,2023-08-24 16:05:20+00:00,,0,shivamverma060/Booth_Multiplier_Verilog,682646111,Verilog,Booth_Multiplier_Verilog,243,0,2023-08-24 16:09:57+00:00,[],None
209,https://github.com/rahulrathod10/Synthosphere_design_hackathon.git,2023-08-25 20:24:21+00:00,This documentation contains detailed explanation of design and synthesis of a digital delay timer used for generating programmable delay,0,rahulrathod10/Synthosphere_design_hackathon,683192841,Verilog,Synthosphere_design_hackathon,237,0,2023-08-25 21:15:15+00:00,[],None
210,https://github.com/PradhyumnaVA/SynthoSphere_Pradhyumna.git,2023-08-25 23:31:41+00:00,Report of my activities done during SynthoSphere hackathon,0,PradhyumnaVA/SynthoSphere_Pradhyumna,683231175,Verilog,SynthoSphere_Pradhyumna,39,0,2023-09-26 04:52:49+00:00,[],None
211,https://github.com/Smruti2002/Karatsuba_Multiplier.git,2023-08-22 06:14:11+00:00,Multiplication of two polynomials in GF (2^163) field,0,Smruti2002/Karatsuba_Multiplier,681490060,Verilog,Karatsuba_Multiplier,5,0,2023-08-22 10:45:32+00:00,[],https://api.github.com/licenses/unlicense
212,https://github.com/Inventor-X/Fifo.git,2023-08-22 05:33:32+00:00,,0,Inventor-X/Fifo,681478648,Verilog,Fifo,2,0,2023-08-22 05:35:09+00:00,[],None
213,https://github.com/Jagadeesh1833/FIFO-memory-using-verilog-code.git,2023-08-25 14:30:54+00:00,,0,Jagadeesh1833/FIFO-memory-using-verilog-code,683073233,Verilog,FIFO-memory-using-verilog-code,3,0,2023-08-25 15:24:31+00:00,[],None
214,https://github.com/sumit200697/MIPS_32.git,2023-08-24 11:31:50+00:00,,0,sumit200697/MIPS_32,682533974,Verilog,MIPS_32,20,0,2023-08-26 14:05:10+00:00,[],None
215,https://github.com/matin-mb/MIPS-Datapath-Implementation.git,2023-08-23 21:26:03+00:00,Computer Structure and Microprocessor Project ,0,matin-mb/MIPS-Datapath-Implementation,682292088,Verilog,MIPS-Datapath-Implementation,1866,0,2023-08-27 09:58:22+00:00,[],None
216,https://github.com/BinL233/Computer-Organization-and-Design.git,2023-08-25 18:26:26+00:00,,0,BinL233/Computer-Organization-and-Design,683156796,Verilog,Computer-Organization-and-Design,496,0,2023-08-25 18:31:46+00:00,[],None
217,https://github.com/suvadeep3/Traffic_light_controller_design_using_verilog.git,2023-08-25 17:02:30+00:00,,0,suvadeep3/Traffic_light_controller_design_using_verilog,683127525,Verilog,Traffic_light_controller_design_using_verilog,157,0,2023-08-25 17:03:54+00:00,[],None
218,https://github.com/hiteshachar/Synthosphere_crsc01.git,2023-08-25 13:01:04+00:00,,0,hiteshachar/Synthosphere_crsc01,683039224,Verilog,Synthosphere_crsc01,3586,0,2023-08-26 00:55:29+00:00,[],None
219,https://github.com/HarshaKurma/Pipelined-MIPS32-Processor-Implementation.git,2023-08-25 13:23:25+00:00,,0,HarshaKurma/Pipelined-MIPS32-Processor-Implementation,683047720,Verilog,Pipelined-MIPS32-Processor-Implementation,16,0,2023-08-25 13:29:28+00:00,[],None
220,https://github.com/CasperDev/tangnano9k-vfb-psram.git,2023-08-24 13:01:30+00:00,TangNano9k FPGA reference design of HDMI with tripple Frame Buffer using PSRAM,0,CasperDev/tangnano9k-vfb-psram,682568578,Verilog,tangnano9k-vfb-psram,4478,0,2023-09-07 05:53:11+00:00,[],https://api.github.com/licenses/gpl-3.0
221,https://github.com/algofoogle/tt04-reciprocal.git,2023-08-20 12:12:04+00:00,Test for TT04 to try implementing @drom's 1-step reciprocal approximation method,0,algofoogle/tt04-reciprocal,680789284,Verilog,tt04-reciprocal,30,0,2023-08-21 10:42:30+00:00,[],https://api.github.com/licenses/apache-2.0
222,https://github.com/jnaraujo/tec498_2023_2_projeto_01.git,2023-08-20 15:56:17+00:00,,0,jnaraujo/tec498_2023_2_projeto_01,680849797,Verilog,tec498_2023_2_projeto_01,40,0,2023-08-23 18:52:11+00:00,[],None
223,https://github.com/YunJoongChul/Verilog-LeNet5-Acc-08.21-END.git,2023-08-21 08:38:21+00:00,,0,YunJoongChul/Verilog-LeNet5-Acc-08.21-END,681089693,Verilog,Verilog-LeNet5-Acc-08.21-END,509,0,2023-08-21 08:40:20+00:00,[],None
224,https://github.com/qqwert0/aes_512.git,2023-08-21 10:28:03+00:00,,0,qqwert0/aes_512,681128847,Verilog,aes_512,19,0,2023-08-21 11:10:00+00:00,[],None
225,https://github.com/mohamedhazem511/pipelined-rsic_v.git,2023-08-20 13:46:24+00:00,,0,mohamedhazem511/pipelined-rsic_v,680813789,Verilog,pipelined-rsic_v,9,0,2023-08-20 13:47:25+00:00,[],None
226,https://github.com/Arsh-q/project.git,2023-08-22 16:05:43+00:00,,0,Arsh-q/project,681723289,Verilog,project,28,0,2023-08-22 16:06:54+00:00,[],None
227,https://github.com/PepperoniPingu/tt04_ice40_pin_wrapper.git,2023-08-22 15:51:20+00:00,Tiny Tapeout 4 pin config for iCE40UP5K FPGA,0,PepperoniPingu/tt04_ice40_pin_wrapper,681718015,Verilog,tt04_ice40_pin_wrapper,2,0,2023-08-22 15:51:25+00:00,[],None
228,https://github.com/Reyann007/Verilog_Projects.git,2023-08-22 17:22:13+00:00,,0,Reyann007/Verilog_Projects,681751929,Verilog,Verilog_Projects,9,0,2023-08-22 18:00:12+00:00,[],None
229,https://github.com/binhkieudo/serial_riscv.git,2023-08-15 03:50:37+00:00,,0,binhkieudo/serial_riscv,678655744,Verilog,serial_riscv,350687,0,2023-08-15 03:52:11+00:00,[],None
230,https://github.com/HX2003/tt04-stepper-driver.git,2023-08-13 16:25:04+00:00,,0,HX2003/tt04-stepper-driver,678085457,Verilog,tt04-stepper-driver,17541,0,2023-08-13 16:48:34+00:00,[],https://api.github.com/licenses/mit
231,https://github.com/EdigaSuseela/verilogcode.git,2023-08-14 08:12:30+00:00,,0,EdigaSuseela/verilogcode,678295661,Verilog,verilogcode,3,0,2023-08-14 08:18:29+00:00,[],None
232,https://github.com/febz012/Microprocessor-Architecture.git,2023-08-14 17:23:10+00:00,,0,febz012/Microprocessor-Architecture,678494867,Verilog,Microprocessor-Architecture,193,0,2023-08-14 17:26:52+00:00,[],None
233,https://github.com/ronakr010/SAT-Attack.git,2023-08-14 18:25:21+00:00,,0,ronakr010/SAT-Attack,678516084,Verilog,SAT-Attack,5818,0,2023-08-14 18:29:19+00:00,[],None
234,https://github.com/Asish4956/Scalar-Pipelined-Processor.git,2023-08-14 16:09:12+00:00,,0,Asish4956/Scalar-Pipelined-Processor,678466831,Verilog,Scalar-Pipelined-Processor,12,0,2023-08-14 16:10:42+00:00,[],None
235,https://github.com/farbodfld/Logical-Circuits.git,2023-08-14 12:48:07+00:00,My all project for Logical-Circuits can be found in this repository.,0,farbodfld/Logical-Circuits,678389449,Verilog,Logical-Circuits,325,0,2023-08-14 12:51:56+00:00,[],None
236,https://github.com/mcjtag/cyclic_code.git,2023-08-14 19:21:44+00:00,Cyclic code over GF(2) - Verilog,0,mcjtag/cyclic_code,678533848,Verilog,cyclic_code,4,0,2023-08-14 19:51:36+00:00,[],https://api.github.com/licenses/mit
237,https://github.com/abhilipsha27/Verilog.git,2023-08-26 15:24:18+00:00,,0,abhilipsha27/Verilog,683439292,Verilog,Verilog,22,0,2023-09-01 03:59:49+00:00,[],None
238,https://github.com/Abidh56/VLSI-Final-Project.git,2023-08-26 18:26:14+00:00,Design of a 32-bit adder that consists of 2 stage pipeline CSA where each stage is made with a 16-bit Carry Select Adder that uses 4-bit CLAs and MUXs,0,Abidh56/VLSI-Final-Project,683489406,Verilog,VLSI-Final-Project,3,0,2023-08-27 07:49:59+00:00,[],None
239,https://github.com/franknguen/RTL_docs.git,2023-08-28 14:11:30+00:00,,0,franknguen/RTL_docs,684128746,Verilog,RTL_docs,90532,0,2023-08-28 14:20:26+00:00,[],None
240,https://github.com/miedda/ClockEnable.git,2023-08-28 10:30:11+00:00,,0,miedda/ClockEnable,684041399,Verilog,ClockEnable,9359,0,2023-08-28 10:31:33+00:00,[],None
241,https://github.com/Mohamedfares10/ALSU-Arithmetic-Logic-Shift-Unit.git,2023-08-28 07:43:25+00:00,,0,Mohamedfares10/ALSU-Arithmetic-Logic-Shift-Unit,683982280,Verilog,ALSU-Arithmetic-Logic-Shift-Unit,6,0,2023-08-31 18:27:20+00:00,[],None
242,https://github.com/Ajay-Jarapla/MIPS32.git,2023-08-23 17:53:35+00:00,,0,Ajay-Jarapla/MIPS32,682222088,Verilog,MIPS32,188,0,2023-08-23 17:54:10+00:00,[],None
243,https://github.com/gk97-ux/Half-Adder.git,2023-08-24 10:29:20+00:00,,0,gk97-ux/Half-Adder,682511436,Verilog,Half-Adder,42,0,2023-08-24 10:47:16+00:00,[],None
244,https://github.com/b21217/ATM-Machine.git,2023-08-17 18:11:41+00:00,,0,b21217/ATM-Machine,679832692,Verilog,ATM-Machine,59,0,2023-08-17 18:14:00+00:00,[],None
245,https://github.com/JonDGS/Tarea1PSO.git,2023-08-18 00:16:04+00:00,,0,JonDGS/Tarea1PSO,679927561,Verilog,Tarea1PSO,23591,0,2023-08-20 04:41:20+00:00,[],None
246,https://github.com/RakeshN124/AsynchronousFifo.git,2023-08-18 14:11:00+00:00,,0,RakeshN124/AsynchronousFifo,680171962,Verilog,AsynchronousFifo,321,0,2023-08-18 14:18:08+00:00,[],None
247,https://github.com/msyksphinz-self/scariv_research.git,2023-08-29 06:23:27+00:00,,0,msyksphinz-self/scariv_research,684445796,Verilog,scariv_research,4120,0,2023-08-29 06:24:07+00:00,[],None
248,https://github.com/Nesabbasi/Computer-Architecture-Lab.git,2023-08-27 12:20:01+00:00,"ARM processor implementation, hazard unit, forwarding unit, SRAM & cache memory.",0,Nesabbasi/Computer-Architecture-Lab,683697149,Verilog,Computer-Architecture-Lab,13364,0,2023-08-27 12:21:27+00:00,[],None
249,https://github.com/jjgar11/Digital-2.git,2023-08-26 02:38:18+00:00,Desarrollo para la materia de Electronica Digital 2,0,jjgar11/Digital-2,683262550,Verilog,Digital-2,16084,0,2023-09-28 20:38:16+00:00,"['assembly', 'c', 'fpga', 'fpga-programming', 'riscv32', 'riscv32i', 'rv32i']",None
250,https://github.com/HarineeRathod/Half-precision-FPU.git,2023-08-13 06:55:33+00:00,,0,HarineeRathod/Half-precision-FPU,677944606,Verilog,Half-precision-FPU,4,0,2023-08-13 07:05:30+00:00,[],None
251,https://github.com/ttang007/full_adder.git,2023-08-12 16:20:13+00:00,,0,ttang007/full_adder,677785616,Verilog,full_adder,10,0,2023-08-12 16:22:24+00:00,[],None
252,https://github.com/AbhishekChinchani/Samsung_pd.git,2023-08-17 06:46:00+00:00,,0,AbhishekChinchani/Samsung_pd,679578673,Verilog,Samsung_pd,61935,0,2023-09-20 10:37:19+00:00,[],None
253,https://github.com/nianyinwu/Geo-fencing_system.git,2023-08-18 04:10:02+00:00,,0,nianyinwu/Geo-fencing_system,679979121,Verilog,Geo-fencing_system,131,0,2023-09-24 09:32:01+00:00,[],None
254,https://github.com/nikhil5-b/VSD-5-DAYS-TCL-SCRIPTING-WORKSHOP.git,2023-08-24 09:47:55+00:00,VSD-IAT TCL Automation Workshop,0,nikhil5-b/VSD-5-DAYS-TCL-SCRIPTING-WORKSHOP,682496007,Verilog,VSD-5-DAYS-TCL-SCRIPTING-WORKSHOP,1046,0,2023-08-29 16:44:13+00:00,[],None
255,https://github.com/EngAhmed21/FIFO.git,2023-08-24 14:12:26+00:00,First-In-First-Out memory,0,EngAhmed21/FIFO,682599094,Verilog,FIFO,2,0,2023-10-15 09:25:56+00:00,[],None
256,https://github.com/Ajay-Jarapla/Async_fifo.git,2023-08-23 17:03:40+00:00,,0,Ajay-Jarapla/Async_fifo,682203663,Verilog,Async_fifo,32,0,2023-08-23 17:08:02+00:00,[],None
257,https://github.com/Ahmed-Salah-312/Arithmetic-and-Logical-Unit-Design-Project.git,2023-08-24 00:42:33+00:00,"The ALU was designed to perform a variety of arithmetic and logical operations , utilizing a 3-bit selection mechanism for operation choice and the Most Significant Bit (MSB) to determine output type.",0,Ahmed-Salah-312/Arithmetic-and-Logical-Unit-Design-Project,682336682,Verilog,Arithmetic-and-Logical-Unit-Design-Project,1,0,2023-08-24 00:44:40+00:00,[],None
258,https://github.com/MarsImmortal/SIP.git,2023-08-25 09:45:31+00:00,Welcome everyone this is the repository for satellite image processing project. This has been made to demonstrate our working and store the final code of the project. ,0,MarsImmortal/SIP,682973190,Verilog,SIP,960,0,2023-10-06 12:53:50+00:00,[],None
259,https://github.com/aryanmohansaxena/MIPS-32.git,2023-08-25 18:21:15+00:00,,0,aryanmohansaxena/MIPS-32,683154562,Verilog,MIPS-32,115,0,2023-08-25 18:22:35+00:00,[],None
260,https://github.com/Sonalighode/SynthoSphere.git,2023-08-25 18:44:07+00:00,,0,Sonalighode/SynthoSphere,683163550,Verilog,SynthoSphere,2874,0,2023-08-26 02:22:44+00:00,[],None
261,https://github.com/CodeitVasu/MIPS32_processor.git,2023-08-24 20:10:40+00:00,,0,CodeitVasu/MIPS32_processor,682735165,Verilog,MIPS32_processor,2,0,2023-08-24 20:13:04+00:00,[],None
262,https://github.com/nmalamug/MultimodalDigitalClock.git,2023-08-14 14:52:58+00:00,Digital clock written in SystemVerilog,0,nmalamug/MultimodalDigitalClock,678438387,Verilog,MultimodalDigitalClock,62,0,2023-08-15 03:03:21+00:00,[],None
263,https://github.com/amirmuallim/Verilog-Mini-Projects.git,2023-08-14 06:11:11+00:00,My Mini Projects using Verilog HDL,0,amirmuallim/Verilog-Mini-Projects,678258234,Verilog,Verilog-Mini-Projects,44,0,2023-08-15 02:37:36+00:00,[],None
264,https://github.com/mahdimoeini8102/DigitalSystems_Synthesis.git,2023-08-15 15:49:50+00:00,"This is the third project of the Digital System course at the university and it's about RT Level Components and Iterative Logic desgin using SystemVerilog HDL(Hardware Description Language) and it provides an introduction to a synthesis tool called ""yosys"".",0,mahdimoeini8102/DigitalSystems_Synthesis,678882087,Verilog,DigitalSystems_Synthesis,8370,0,2023-08-15 15:57:07+00:00,[],None
265,https://github.com/Zeelsss/Digital-PID-Controller.git,2023-08-13 18:23:34+00:00,This is a verilog project which we can implement for industry purpose.,0,Zeelsss/Digital-PID-Controller,678116012,Verilog,Digital-PID-Controller,4,0,2023-08-13 18:26:24+00:00,[],None
266,https://github.com/Hrldspnz/Tarea1Operativos.git,2023-08-15 05:19:07+00:00,,0,Hrldspnz/Tarea1Operativos,678677098,Verilog,Tarea1Operativos,19823,0,2023-08-15 06:21:26+00:00,[],None
267,https://github.com/PaulaPistrila/Booth-Radix-4.git,2023-08-12 13:36:41+00:00,,0,PaulaPistrila/Booth-Radix-4,677741038,Verilog,Booth-Radix-4,658,0,2023-08-13 10:50:24+00:00,[],None
268,https://github.com/amitkumar1310/Image_Processing_Using_verilog.git,2023-08-16 19:17:58+00:00,,0,amitkumar1310/Image_Processing_Using_verilog,679408688,Verilog,Image_Processing_Using_verilog,1834,0,2023-08-16 19:35:07+00:00,[],None
269,https://github.com/thiagoolvr/Verilog.git,2023-08-15 21:52:46+00:00,Repository related to the Cademics program (1st edition),0,thiagoolvr/Verilog,678997334,Verilog,Verilog,2,0,2023-08-15 22:11:40+00:00,[],https://api.github.com/licenses/mit
270,https://github.com/wkbostic/taskscheduler.git,2023-08-16 00:02:32+00:00,Simple task scheduling module for reading/writing memories,0,wkbostic/taskscheduler,679024995,Verilog,taskscheduler,31,0,2023-08-16 00:05:15+00:00,[],None
271,https://github.com/gavaskark/eFPGA.git,2023-08-16 08:16:24+00:00,,0,gavaskark/eFPGA,679158532,Verilog,eFPGA,11913,0,2023-08-16 08:17:31+00:00,[],https://api.github.com/licenses/apache-2.0
272,https://github.com/souvik4374/mips32_pipeline.git,2023-08-13 17:50:04+00:00,,0,souvik4374/mips32_pipeline,678107854,Verilog,mips32_pipeline,1363,0,2023-08-13 17:57:26+00:00,[],None
273,https://github.com/Manoj-0007/IEEE-754-Floating-Point-Multiplier.git,2023-08-26 10:12:55+00:00,,0,Manoj-0007/IEEE-754-Floating-Point-Multiplier,683360259,Verilog,IEEE-754-Floating-Point-Multiplier,3,0,2023-08-26 10:14:27+00:00,[],None
274,https://github.com/lehar303/VerilogProcessor.git,2023-08-26 10:32:49+00:00,Based on Building a Processor with Verilog from Scratch by Kumar Khandagle,0,lehar303/VerilogProcessor,683364914,Verilog,VerilogProcessor,3,0,2023-08-27 13:04:56+00:00,[],None
275,https://github.com/MohamedDawod29/universal-shift-reg.git,2023-08-26 21:07:08+00:00,,0,MohamedDawod29/universal-shift-reg,683525052,Verilog,universal-shift-reg,0,0,2023-08-26 21:20:09+00:00,[],None
276,https://github.com/MohamedDawod29/Adder-subtractor.git,2023-08-26 21:24:29+00:00,,0,MohamedDawod29/Adder-subtractor,683528360,Verilog,Adder-subtractor,4,0,2023-08-26 21:26:46+00:00,[],None
277,https://github.com/KanchiTejaswi/Verilog-Projects.git,2023-08-27 14:02:52+00:00,,0,KanchiTejaswi/Verilog-Projects,683724665,Verilog,Verilog-Projects,53285,0,2023-08-27 14:10:59+00:00,[],None
278,https://github.com/hhlcodefor/EGo1.git,2023-08-27 02:40:01+00:00,ÊöëÊ†°ÁîµËÆæËØæÁ®ã,0,hhlcodefor/EGo1,683575212,Verilog,EGo1,69,0,2023-08-27 02:40:27+00:00,[],None
279,https://github.com/mrtcelik/Verilog-Examples.git,2023-08-27 11:46:59+00:00,100 Days RTL Challange Examples,0,mrtcelik/Verilog-Examples,683688787,Verilog,Verilog-Examples,4934,0,2023-08-27 11:47:05+00:00,[],None
280,https://github.com/ziadmali59/SPI_Protocol.git,2023-08-27 17:05:14+00:00,,0,ziadmali59/SPI_Protocol,683778220,Verilog,SPI_Protocol,1819,0,2023-08-27 17:21:50+00:00,[],None
281,https://github.com/aryanmohansaxena/Asynchronous-FIFO.git,2023-08-29 04:32:54+00:00,,0,aryanmohansaxena/Asynchronous-FIFO,684410982,Verilog,Asynchronous-FIFO,3,0,2023-08-29 04:33:18+00:00,[],None
282,https://github.com/suvadeep3/FIFO_using_verilog.git,2023-08-20 12:53:00+00:00,,0,suvadeep3/FIFO_using_verilog,680799501,Verilog,FIFO_using_verilog,3,0,2023-08-27 14:10:37+00:00,[],None
283,https://github.com/empedans/delta_ic.git,2023-08-20 14:08:38+00:00,,0,empedans/delta_ic,680819847,Verilog,delta_ic,2985,0,2023-08-20 14:10:40+00:00,[],None
284,https://github.com/HaeffnerLab/staq_control.git,2023-08-18 18:53:05+00:00,,0,HaeffnerLab/staq_control,680266506,Verilog,staq_control,74036,0,2023-08-18 23:03:40+00:00,[],None
285,https://github.com/RishiRavula/5-Stage-Pipelined-Processor.git,2023-08-19 04:13:49+00:00,"5 Staged Pipeline 32 bit Processor with an ALU, MultDiv, RegFile with bypassing, hazard checking, and branching",0,RishiRavula/5-Stage-Pipelined-Processor,680381439,Verilog,5-Stage-Pipelined-Processor,296,0,2023-08-19 04:15:13+00:00,[],None
286,https://github.com/KKiranR/pes_asic_class.git,2023-08-20 09:44:28+00:00,,0,KKiranR/pes_asic_class,680754450,Verilog,pes_asic_class,129,0,2023-08-27 09:06:34+00:00,[],None
287,https://github.com/J-boklejandro37/HDLBits-Practice.git,2023-08-20 04:31:52+00:00,,0,J-boklejandro37/HDLBits-Practice,680689434,Verilog,HDLBits-Practice,3,0,2023-08-20 04:54:44+00:00,[],None
288,https://github.com/Istiaq-Fuad/verilog_practice.git,2023-08-20 20:11:48+00:00,,0,Istiaq-Fuad/verilog_practice,680915639,Verilog,verilog_practice,12,0,2023-08-20 20:12:35+00:00,[],None
289,https://github.com/Inventor-X/sequence_detector_fsm.git,2023-08-22 05:21:07+00:00,,0,Inventor-X/sequence_detector_fsm,681475533,Verilog,sequence_detector_fsm,1,0,2023-08-22 05:29:18+00:00,[],None
290,https://github.com/kanade-k-1228/my-micon.git,2023-08-23 10:56:05+00:00,32bit RISC-V „Éû„Ç§„Ç≥„É≥ üî•32bit RISC-V Microcontroller,0,kanade-k-1228/my-micon,682059886,Verilog,my-micon,85,0,2023-08-23 11:26:11+00:00,"['next-micon', 'fpga']",None
291,https://github.com/Arsenii2013/fb_hp.git,2023-08-22 08:47:27+00:00,,0,Arsenii2013/fb_hp,681546796,Verilog,fb_hp,467,0,2023-09-11 03:12:55+00:00,[],None
292,https://github.com/Pinigelbard/fulladder4bit.git,2023-08-22 17:12:26+00:00,Testbench_fulladder4bit,0,Pinigelbard/fulladder4bit,681748350,Verilog,fulladder4bit,1,0,2023-08-22 17:35:50+00:00,[],None
293,https://github.com/mohamedhazem511/n_bit_ring_counter.git,2023-08-22 17:19:13+00:00,N-bit ring counter using generate statements (for generate).,0,mohamedhazem511/n_bit_ring_counter,681750872,Verilog,n_bit_ring_counter,13,0,2023-08-22 17:19:47+00:00,[],None
294,https://github.com/Ishaananish/16-bit_Dadda_Multiplier.git,2023-08-22 09:59:33+00:00,using Verilog,0,Ishaananish/16-bit_Dadda_Multiplier,681575181,Verilog,16-bit_Dadda_Multiplier,11,0,2023-08-22 10:02:29+00:00,[],https://api.github.com/licenses/mit
295,https://github.com/amitpadey/16Bit_RISC_Processor.git,2023-08-23 07:24:16+00:00,,0,amitpadey/16Bit_RISC_Processor,681984082,Verilog,16Bit_RISC_Processor,11,0,2023-08-23 07:24:42+00:00,[],None
296,https://github.com/monish-nath/matrix_convolution.git,2023-08-23 16:12:40+00:00,Design and implementation of a matrix convolution circuit with padding and N-bit parameterised integer ALU using Verilog,0,monish-nath/matrix_convolution,682184246,Verilog,matrix_convolution,5652,0,2023-08-23 16:19:46+00:00,[],None
297,https://github.com/majumderswarnendu/asynchronousFIFOdesign.git,2023-08-18 13:51:17+00:00,,0,majumderswarnendu/asynchronousFIFOdesign,680164651,Verilog,asynchronousFIFOdesign,644,0,2023-08-18 13:58:31+00:00,[],None
298,https://github.com/SimonFV/Cronometro_SO.git,2023-08-17 01:16:19+00:00,,0,SimonFV/Cronometro_SO,679492372,Verilog,Cronometro_SO,17527,0,2023-08-21 23:19:53+00:00,[],None
299,https://github.com/ahmedheikal173/AES.git,2023-08-15 19:09:35+00:00,Advanced Encryption Standard (10 Rounds),0,ahmedheikal173/AES,678951799,Verilog,AES,10,0,2023-08-15 19:14:06+00:00,[],None
300,https://github.com/Lucky-11/SelfProject.git,2023-08-19 07:57:24+00:00,Contains a self project which i have made using verilog. The project is Asynchronous FIFO,0,Lucky-11/SelfProject,680429563,Verilog,SelfProject,826,0,2023-08-19 08:00:14+00:00,[],None
301,https://github.com/Vishnu1426/PES_Asic_course_7th_sem.git,2023-08-18 09:00:06+00:00,,0,Vishnu1426/PES_Asic_course_7th_sem,680065252,Verilog,PES_Asic_course_7th_sem,238,0,2023-08-22 07:20:06+00:00,[],https://api.github.com/licenses/gpl-3.0
302,https://github.com/Sajid-iquebal/12hour_clock.git,2023-08-18 13:54:37+00:00,,0,Sajid-iquebal/12hour_clock,680165873,Verilog,12hour_clock,142,0,2023-08-18 13:57:09+00:00,[],None
303,https://github.com/aravindsai2512/RISC-Processor-16-bit.git,2023-08-21 11:19:07+00:00,,0,aravindsai2512/RISC-Processor-16-bit,681146067,Verilog,RISC-Processor-16-bit,10,0,2023-08-24 10:17:37+00:00,[],None
304,https://github.com/agamani22/Designing-of-Memory-Controller.git,2023-08-20 13:27:15+00:00,,0,agamani22/Designing-of-Memory-Controller,680808616,Verilog,Designing-of-Memory-Controller,8,0,2023-08-22 18:42:35+00:00,[],None
305,https://github.com/agamani22/FIFO-Architecture-Design.git,2023-08-20 13:53:56+00:00,,0,agamani22/FIFO-Architecture-Design,680815845,Verilog,FIFO-Architecture-Design,13,0,2023-08-22 18:41:36+00:00,[],None
306,https://github.com/emmanestallo/digital-flow.git,2023-08-28 10:30:26+00:00,ic design using digital flow,0,emmanestallo/digital-flow,684041487,Verilog,digital-flow,14,0,2023-08-28 10:31:35+00:00,[],None
307,https://github.com/lucasgpulcinelli/labsd-cpu.git,2023-08-29 21:35:53+00:00,A simple cpu created with quartus for a univeristy discipline,0,lucasgpulcinelli/labsd-cpu,684791709,Verilog,labsd-cpu,782,0,2024-03-18 13:57:15+00:00,[],https://api.github.com/licenses/bsd-3-clause
308,https://github.com/Rawan227/Aes-Encryption-Decryption.git,2023-08-23 14:08:35+00:00,,0,Rawan227/Aes-Encryption-Decryption,682133251,Verilog,Aes-Encryption-Decryption,23,0,2023-08-23 14:10:47+00:00,[],None
309,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-32.git,2023-08-28 15:59:26+00:00,RING COUNTER,0,rajitha0119/100-DAYS-OF-RTL-DAY-32,684176282,Verilog,100-DAYS-OF-RTL-DAY-32,257,0,2023-08-28 16:01:35+00:00,[],None
310,https://github.com/AbdullahMahmoudGhazal/Traffic_Signal_Controller.git,2023-08-28 18:34:15+00:00,,0,AbdullahMahmoudGhazal/Traffic_Signal_Controller,684242199,Verilog,Traffic_Signal_Controller,197,0,2023-08-28 20:10:57+00:00,[],None
311,https://github.com/invabadilla/Tarea1-SO.git,2023-08-14 21:30:14+00:00,,0,invabadilla/Tarea1-SO,678569448,Verilog,Tarea1-SO,24860,0,2023-08-15 01:04:57+00:00,[],None
312,https://github.com/JoyenBenitto/pes_asic_class.git,2023-08-15 09:37:40+00:00,In this repository we begin our journey with simulating basic C code for a RISC-V processor.,0,JoyenBenitto/pes_asic_class,678751185,Verilog,pes_asic_class,4366,0,2023-09-13 14:55:02+00:00,[],None
313,https://github.com/sujianleo/FPGA.git,2023-08-15 03:47:50+00:00,,0,sujianleo/FPGA,678655167,Verilog,FPGA,12,0,2023-08-15 06:08:37+00:00,[],None
314,https://github.com/SandeepVissa/Hardware_security_1.git,2023-08-15 12:57:34+00:00,,0,SandeepVissa/Hardware_security_1,678816731,Verilog,Hardware_security_1,410,0,2023-08-15 12:58:40+00:00,[],None
315,https://github.com/Pranav1723/pes_asic_class.git,2023-08-15 13:58:13+00:00,Contains the files for the VLSI Physical Design Special Topic for 7th Semester,0,Pranav1723/pes_asic_class,678839234,Verilog,pes_asic_class,131,0,2023-09-08 06:18:50+00:00,[],None
316,https://github.com/Anjali-Poliyapram/Implementation-of-32-bit-floating-point-ALU-on-FPGA.git,2023-08-15 13:59:25+00:00,,0,Anjali-Poliyapram/Implementation-of-32-bit-floating-point-ALU-on-FPGA,678839711,Verilog,Implementation-of-32-bit-floating-point-ALU-on-FPGA,1,0,2023-08-15 14:04:35+00:00,[],None
317,https://github.com/alex-torrubia-ollero/TFM_CAM.git,2023-08-26 18:29:22+00:00,This github repository contains my Master thesis code,0,alex-torrubia-ollero/TFM_CAM,683490369,Verilog,TFM_CAM,11551,0,2023-08-27 23:03:05+00:00,[],None
318,https://github.com/dikshaiitk/micro_controller_8bit.git,2023-08-24 17:08:34+00:00,,0,dikshaiitk/micro_controller_8bit,682669932,Verilog,micro_controller_8bit,3,0,2023-08-24 17:09:12+00:00,[],None
319,https://github.com/adityaraj0109/Image-Enhancement-Verilog-HDL.git,2023-08-21 18:57:38+00:00,,0,adityaraj0109/Image-Enhancement-Verilog-HDL,681322343,Verilog,Image-Enhancement-Verilog-HDL,209,0,2023-08-21 19:07:45+00:00,[],None
320,https://github.com/chengyih001/UofT_ECE1718.git,2023-08-20 17:46:45+00:00,,0,chengyih001/UofT_ECE1718,680878960,Verilog,UofT_ECE1718,20840,0,2023-08-20 18:11:53+00:00,[],None
321,https://github.com/TarakaSriram/SPI-Commuication-protocol-and-PWM-implementation-in-verilog.git,2023-08-22 04:31:46+00:00,,0,TarakaSriram/SPI-Commuication-protocol-and-PWM-implementation-in-verilog,681463497,Verilog,SPI-Commuication-protocol-and-PWM-implementation-in-verilog,341,0,2023-08-24 04:43:54+00:00,[],None
322,https://github.com/Tushars-97/Implementation-of-MIPS-32-bit-processor-using-Verilog.git,2023-08-22 05:19:23+00:00,,0,Tushars-97/Implementation-of-MIPS-32-bit-processor-using-Verilog,681475027,Verilog,Implementation-of-MIPS-32-bit-processor-using-Verilog,115,0,2023-08-22 05:26:40+00:00,[],None
323,https://github.com/ZoroGH/RiscV-CPU.git,2023-08-23 14:19:35+00:00,"This repo is for little term, the goal is to develop a risc-v based cpu with pipeline struct",4,ZoroGH/RiscV-CPU,682138074,Verilog,RiscV-CPU,36,0,2023-08-30 10:16:56+00:00,[],https://api.github.com/licenses/bsd-2-clause
324,https://github.com/sevimeftal/Verilog-Logic.git,2023-08-23 13:57:57+00:00,,0,sevimeftal/Verilog-Logic,682128549,Verilog,Verilog-Logic,72,0,2023-08-23 14:03:27+00:00,[],None
325,https://github.com/caleb-huning/verilog-calculator.git,2023-08-23 18:06:23+00:00,A verilog program which describes a circuit that reads 16-bit numbers and computes different operations on them.,0,caleb-huning/verilog-calculator,682226666,Verilog,verilog-calculator,84,0,2023-08-23 18:25:14+00:00,[],https://api.github.com/licenses/mit
326,https://github.com/Ajay-Jarapla/hamming-code.git,2023-08-23 17:15:56+00:00,,0,Ajay-Jarapla/hamming-code,682208273,Verilog,hamming-code,117,0,2023-08-23 17:30:18+00:00,[],None
327,https://github.com/sandeep-sai-dannapaneni/16-bit-Alu-verilogHDL.git,2023-08-25 15:32:44+00:00,,0,sandeep-sai-dannapaneni/16-bit-Alu-verilogHDL,683095850,Verilog,16-bit-Alu-verilogHDL,4,0,2023-08-25 15:40:18+00:00,[],None
328,https://github.com/Nikhilthecodr/Synthosphere_Nikhil.git,2023-08-25 10:54:09+00:00,Synthosphere is a hackathon project.It involves creating Verilog code to describe circuit behavior (pre-synthesis) and then translating it into optimized gate-level representations (post-synthesis) using synthesis tools. ,0,Nikhilthecodr/Synthosphere_Nikhil,682995978,Verilog,Synthosphere_Nikhil,298,0,2023-08-25 10:55:23+00:00,[],None
329,https://github.com/Jagadeesh1833/Carry-Look-Ahead-Adder.git,2023-08-25 13:49:47+00:00,,0,Jagadeesh1833/Carry-Look-Ahead-Adder,683057673,Verilog,Carry-Look-Ahead-Adder,2,0,2023-08-25 13:53:21+00:00,[],None
330,https://github.com/carrysocks/fpga-bluespec-genome-minimizer.git,2023-08-25 08:14:25+00:00,,0,carrysocks/fpga-bluespec-genome-minimizer,682941790,Verilog,fpga-bluespec-genome-minimizer,661,0,2023-08-25 08:22:38+00:00,[],None
331,https://github.com/Spirithead/GirvanNewman_Verilog.git,2023-08-19 18:38:14+00:00,,0,Spirithead/GirvanNewman_Verilog,680592478,Verilog,GirvanNewman_Verilog,7,0,2023-08-19 18:46:45+00:00,[],None
332,https://github.com/sanils2002/airfield-control-system.git,2023-08-19 16:57:35+00:00,Using Verilog Programming,0,sanils2002/airfield-control-system,680566666,Verilog,airfield-control-system,371,0,2023-08-19 16:57:58+00:00,[],https://api.github.com/licenses/mit
333,https://github.com/adityagudla2208/RISC_processor.git,2023-08-16 08:33:44+00:00,,0,adityagudla2208/RISC_processor,679164622,Verilog,RISC_processor,20728,0,2023-08-16 08:38:43+00:00,[],None
334,https://github.com/vs34/ALU_verilog.git,2023-08-17 13:44:49+00:00,,0,vs34/ALU_verilog,679731147,Verilog,ALU_verilog,3,0,2023-08-17 13:45:45+00:00,[],None
335,https://github.com/nianyinwu/Locker.git,2023-08-18 04:04:15+00:00,,0,nianyinwu/Locker,679977804,Verilog,Locker,285,0,2023-09-24 09:44:07+00:00,[],None
336,https://github.com/alok2802/MIPS-Verification.git,2023-08-17 20:13:26+00:00,,0,alok2802/MIPS-Verification,679873843,Verilog,MIPS-Verification,5,0,2023-08-17 20:16:16+00:00,[],None
337,https://github.com/mohamedhazem511/counter.git,2023-08-22 18:00:26+00:00,,0,mohamedhazem511/counter,681766332,Verilog,counter,1,0,2023-08-22 18:01:01+00:00,[],None
338,https://github.com/pgurve22/Mips_32_processor_using_verilog.git,2023-08-22 15:48:39+00:00,,0,pgurve22/Mips_32_processor_using_verilog,681716931,Verilog,Mips_32_processor_using_verilog,536,0,2023-08-22 16:00:21+00:00,[],None
339,https://github.com/anmol-pabla/RISC-Processor.git,2023-08-22 08:50:00+00:00,RISC,0,anmol-pabla/RISC-Processor,681547822,Verilog,RISC-Processor,78,0,2023-08-22 08:55:09+00:00,[],None
340,https://github.com/wei851246721/Caravel-User-Project.git,2023-08-13 10:41:29+00:00,,0,wei851246721/Caravel-User-Project,677994035,Verilog,Caravel-User-Project,11913,0,2023-08-13 10:42:29+00:00,[],https://api.github.com/licenses/apache-2.0
341,https://github.com/mcjtag/dw_fifo.git,2023-08-13 15:04:28+00:00,Asymmetrical FIFO with dynamic width,0,mcjtag/dw_fifo,678062161,Verilog,dw_fifo,3,0,2023-08-13 15:56:22+00:00,[],https://api.github.com/licenses/mit
342,https://github.com/AdrikaMohanty/asic_class.git,2023-08-17 19:01:43+00:00,,0,AdrikaMohanty/asic_class,679851404,Verilog,asic_class,279,0,2023-09-03 18:35:40+00:00,[],None
343,https://github.com/Sajid-iquebal/Asynchronous_FIFO.git,2023-08-17 18:53:53+00:00,,0,Sajid-iquebal/Asynchronous_FIFO,679848532,Verilog,Asynchronous_FIFO,437,0,2023-08-17 18:55:30+00:00,[],None
344,https://github.com/Kushal-jain-vlsi/fifo.git,2023-08-18 08:30:16+00:00,This repository contains verilog code for  async. FIFO,0,Kushal-jain-vlsi/fifo,680055317,Verilog,fifo,448,0,2023-08-18 08:36:41+00:00,[],None
345,https://github.com/scalable-arch/CAL_22-MPC_RTL.git,2023-08-18 03:04:11+00:00,Verilog code of Multi-Prediction Compression,1,scalable-arch/CAL_22-MPC_RTL,679964103,Verilog,CAL_22-MPC_RTL,2586,0,2023-08-18 03:19:46+00:00,[],None
346,https://github.com/ahmed-kabil/Universal_Shift_Register.git,2023-08-13 21:25:13+00:00,,0,ahmed-kabil/Universal_Shift_Register,678153822,Verilog,Universal_Shift_Register,2,0,2023-08-13 21:47:32+00:00,[],None
347,https://github.com/matfmar/modulo-n-counter.git,2023-08-15 11:36:22+00:00,My project of creating modulo-N counter for FPGA. Written in Verilog HDL and compiled (and deployed on Terasic DE10-Lite board) in Intel Quartus.,0,matfmar/modulo-n-counter,678789404,Verilog,modulo-n-counter,47109,0,2023-08-15 11:39:27+00:00,[],None
348,https://github.com/wkbostic/taskscheduler2.git,2023-08-16 00:06:12+00:00,Expansion of taskscheduler to schedule tasks between multiple processing units,0,wkbostic/taskscheduler2,679025731,Verilog,taskscheduler2,10,0,2023-08-16 00:06:42+00:00,[],None
349,https://github.com/nepridumalnik/verilog.git,2023-08-15 14:21:58+00:00,,0,nepridumalnik/verilog,678848633,Verilog,verilog,1,0,2023-08-15 14:22:06+00:00,[],None
350,https://github.com/pratyushpare/Synchronous_and_Asynchronous_FIFO.git,2023-08-17 06:59:20+00:00,,0,pratyushpare/Synchronous_and_Asynchronous_FIFO,679583519,Verilog,Synchronous_and_Asynchronous_FIFO,452,0,2023-08-17 07:03:34+00:00,[],None
351,https://github.com/jakaransingh/UVM_TESTbench.git,2023-08-17 08:46:46+00:00,,0,jakaransingh/UVM_TESTbench,679621165,Verilog,UVM_TESTbench,61,0,2023-08-17 08:48:12+00:00,[],None
352,https://github.com/anshuman0790/eYRC-21-Soil-Monitering-Bot-Theme.git,2023-08-17 10:54:59+00:00,"In this project, the SM Bot deploy on an arena that is the abstraction of the agriculture field. The brain of the robot is powered by an FPGA that controls its sensors, actuators and pick-place mechanism. It is using wired and wireless communication techniques using UART.",0,anshuman0790/eYRC-21-Soil-Monitering-Bot-Theme,679667586,Verilog,eYRC-21-Soil-Monitering-Bot-Theme,24038,0,2023-09-07 06:14:28+00:00,[],None
353,https://github.com/Shinhyundo/sram_bist.git,2023-08-14 14:20:05+00:00,sram 256x10,0,Shinhyundo/sram_bist,678425453,Verilog,sram_bist,43,0,2023-08-14 14:22:54+00:00,[],None
354,https://github.com/ardubit/verilog.git,2023-08-14 21:03:43+00:00,Verilog [Digital Logic],0,ardubit/verilog,678562863,Verilog,verilog,353,0,2023-08-14 21:03:52+00:00,[],None
355,https://github.com/nnguyendinh/FPGA-Digital-Audio-Visualizer.git,2023-08-13 23:44:33+00:00,,0,nnguyendinh/FPGA-Digital-Audio-Visualizer,678176132,Verilog,FPGA-Digital-Audio-Visualizer,188,0,2023-08-13 23:44:41+00:00,[],None
356,https://github.com/isubasinghe/hardware-accelerated-computing.git,2023-08-14 11:44:21+00:00,Verilog stuff,0,isubasinghe/hardware-accelerated-computing,678366885,Verilog,hardware-accelerated-computing,5,0,2023-08-21 05:27:16+00:00,[],None
357,https://github.com/VLSI-JP/Z16CPU.git,2023-08-19 12:14:44+00:00,,0,VLSI-JP/Z16CPU,680490272,Verilog,Z16CPU,5,0,2023-08-19 12:15:33+00:00,[],None
358,https://github.com/Nowiczok/gth_tdc.git,2023-08-17 13:59:20+00:00,,0,Nowiczok/gth_tdc,679737217,Verilog,gth_tdc,56230,0,2023-08-17 14:00:43+00:00,[],None
359,https://github.com/EhabMostafaa/Single-Cycle-RISC-v.git,2023-08-17 20:52:42+00:00,,0,EhabMostafaa/Single-Cycle-RISC-v,679884499,Verilog,Single-Cycle-RISC-v,519,0,2023-08-17 20:56:30+00:00,[],None
360,https://github.com/nbertol/Fundamentals-of-Digital-Electronics.git,2023-08-17 20:17:30+00:00,Using Verilog a hardware language I made this course project which is a 4-bit binary adder.,0,nbertol/Fundamentals-of-Digital-Electronics,679874990,Verilog,Fundamentals-of-Digital-Electronics,2,0,2023-08-17 20:18:48+00:00,[],https://api.github.com/licenses/mit
361,https://github.com/nianyinwu/Job-Assignment-Machine.git,2023-08-18 04:20:56+00:00,,0,nianyinwu/Job-Assignment-Machine,679981509,Verilog,Job-Assignment-Machine,105,0,2023-09-24 08:09:17+00:00,[],None
362,https://github.com/PawanPanga/Self_project.git,2023-08-18 14:07:09+00:00,,0,PawanPanga/Self_project,680170564,Verilog,Self_project,3,0,2023-08-18 14:32:00+00:00,[],None
363,https://github.com/rakshShivarajSE31/Computer_Architecture-Verilog-Project.git,2023-08-16 23:42:27+00:00,,0,rakshShivarajSE31/Computer_Architecture-Verilog-Project,679473399,Verilog,Computer_Architecture-Verilog-Project,9,0,2023-08-17 00:30:08+00:00,[],None
364,https://github.com/NoahKusaba/UART-Verilog.git,2023-08-20 13:48:33+00:00,Modeling a UART in Verilog ,0,NoahKusaba/UART-Verilog,680814387,Verilog,UART-Verilog,37,0,2023-09-17 22:49:33+00:00,[],None
365,https://github.com/agamani22/Hamming-Code-Design-for-Error-Detection-Correction.git,2023-08-20 13:55:34+00:00,,0,agamani22/Hamming-Code-Design-for-Error-Detection-Correction,680816303,Verilog,Hamming-Code-Design-for-Error-Detection-Correction,2,0,2023-08-22 18:40:52+00:00,[],None
366,https://github.com/monish-nath/HDL_based_32b_processor.git,2023-08-20 17:00:39+00:00,Simple 32b HDL based pipelined processor as a part of Lab project,0,monish-nath/HDL_based_32b_processor,680866899,Verilog,HDL_based_32b_processor,861,0,2023-08-21 07:32:26+00:00,[],None
367,https://github.com/sumit200697/Inverted-Pendulum.git,2023-08-26 18:26:07+00:00,,0,sumit200697/Inverted-Pendulum,683489381,Verilog,Inverted-Pendulum,7,0,2023-08-26 18:27:45+00:00,[],None
368,https://github.com/nvchuyen/Design_IC_Elevator.git,2023-08-26 02:38:14+00:00,,0,nvchuyen/Design_IC_Elevator,683262541,Verilog,Design_IC_Elevator,2027,0,2023-08-26 02:49:40+00:00,[],None
369,https://github.com/Matan7050/Verilog-projects1.git,2023-08-27 09:20:18+00:00,,0,Matan7050/Verilog-projects1,683654086,Verilog,Verilog-projects1,5,0,2023-08-27 09:47:44+00:00,[],None
370,https://github.com/tusharshenoy/8-BIT-Even-Down-Counter.git,2023-08-27 10:53:03+00:00,,0,tusharshenoy/8-BIT-Even-Down-Counter,683676007,Verilog,8-BIT-Even-Down-Counter,23,0,2023-08-27 11:19:08+00:00,[],None
371,https://github.com/VishvaOshada/external_mem_controller.git,2023-08-26 07:18:52+00:00,,0,VishvaOshada/external_mem_controller,683319458,Verilog,external_mem_controller,17,0,2023-08-26 07:21:46+00:00,[],None
372,https://github.com/jazzsajan/ALU.git,2023-08-29 02:26:43+00:00,,0,jazzsajan/ALU,684375657,Verilog,ALU,35,0,2023-08-29 02:30:34+00:00,[],None
373,https://github.com/kevinpinto98/VSD_TCL_Workshop.git,2023-08-29 12:13:00+00:00,,0,kevinpinto98/VSD_TCL_Workshop,684571157,Verilog,VSD_TCL_Workshop,1821,0,2023-08-29 12:22:24+00:00,[],None
374,https://github.com/Pavan2280/pes_asic_class.git,2023-08-12 11:58:04+00:00,,0,Pavan2280/pes_asic_class,677716970,Verilog,pes_asic_class,2987,0,2023-09-12 14:25:23+00:00,[],https://api.github.com/licenses/mit
375,https://github.com/gunavant-s/Dual_Port_RAM-Day-024.git,2023-08-12 06:35:50+00:00,A dual port RAM has two independent ports that can read and write data simultaneously.,0,gunavant-s/Dual_Port_RAM-Day-024,677644333,Verilog,Dual_Port_RAM-Day-024,123,0,2023-08-12 06:37:29+00:00,[],None
376,https://github.com/Brijeshpate/2-to-4-decoder.git,2023-08-13 09:11:22+00:00,,0,Brijeshpate/2-to-4-decoder,677973982,Verilog,2-to-4-decoder,2447,0,2023-08-13 09:59:58+00:00,[],None
377,https://github.com/ap-sharma/Asynchronous_FIFO.git,2023-08-12 16:52:25+00:00,,0,ap-sharma/Asynchronous_FIFO,677795229,Verilog,Asynchronous_FIFO,57,0,2023-08-12 16:54:55+00:00,[],None
378,https://github.com/rajnirmal2604/RISC-32-bits.git,2023-08-12 16:45:18+00:00,This project involves designing and implementing a 32-bit MIPS RISC processor with a 5-stage pipeline. It offers a valuable opportunity to gain knowledge in hardware design and computer architecture concepts. Implemented the processor in a hardware description language Verilog.,0,rajnirmal2604/RISC-32-bits,677793250,Verilog,RISC-32-bits,1067,0,2023-08-12 16:51:31+00:00,[],None
379,https://github.com/AbdulrahmanNourEldeen/Washing-Machine-Controller.git,2023-08-12 13:51:03+00:00,Design and Verification of Washing Machine Controller.,0,AbdulrahmanNourEldeen/Washing-Machine-Controller,677744672,Verilog,Washing-Machine-Controller,2038,0,2023-08-12 14:24:53+00:00,[],None
380,https://github.com/Gallerys/Verilog-Basic-Code.git,2023-08-22 03:42:27+00:00,,0,Gallerys/Verilog-Basic-Code,681452052,Verilog,Verilog-Basic-Code,2,0,2023-08-22 03:43:19+00:00,[],None
381,https://github.com/cqllysto/spi_interface.git,2023-08-22 02:01:37+00:00,,0,cqllysto/spi_interface,681427483,Verilog,spi_interface,70,0,2023-08-23 04:01:58+00:00,[],None
382,https://github.com/HummockHamek/DDR2_Controller.git,2023-08-22 11:02:27+00:00,,0,HummockHamek/DDR2_Controller,681597885,Verilog,DDR2_Controller,25,0,2023-08-22 11:05:08+00:00,[],https://api.github.com/licenses/mit
383,https://github.com/Rahulprakash77/Processor-Design-using-verilog.git,2023-08-23 19:27:18+00:00,in modern era we all know impostance of processor so i choose to design processor using verilog code . this processor is based on harward architecture,0,Rahulprakash77/Processor-Design-using-verilog,682256724,Verilog,Processor-Design-using-verilog,13,0,2023-08-24 07:23:18+00:00,[],None
384,https://github.com/vaishnavi-parihar/Router_1x3.git,2023-08-23 19:17:41+00:00,,0,vaishnavi-parihar/Router_1x3,682253736,Verilog,Router_1x3,12,0,2023-09-10 20:47:44+00:00,[],None
385,https://github.com/drwilkes/low-power-neural-net.git,2023-08-23 17:12:54+00:00,Proof of principle for extreme low power neural net implementations,0,drwilkes/low-power-neural-net,682207177,Verilog,low-power-neural-net,96,0,2023-08-23 19:17:43+00:00,[],https://api.github.com/licenses/apache-2.0
386,https://github.com/m0jks/verilog-ethernet.git,2023-08-24 13:01:05+00:00,,0,m0jks/verilog-ethernet,682568405,Verilog,verilog-ethernet,2853,0,2023-08-24 13:01:57+00:00,[],https://api.github.com/licenses/mit
387,https://github.com/dikshaiitk/Multiplication.git,2023-08-24 16:39:21+00:00,,0,dikshaiitk/Multiplication,682658923,Verilog,Multiplication,2,0,2023-08-24 16:56:36+00:00,[],None
388,https://github.com/db2260/Data-Multiplexer.git,2023-08-23 14:53:58+00:00,,0,db2260/Data-Multiplexer,682152871,Verilog,Data-Multiplexer,3,0,2023-08-23 14:56:25+00:00,[],None
389,https://github.com/akash0758/001-sequence-detector.git,2023-08-23 05:18:51+00:00,,0,akash0758/001-sequence-detector,681942070,Verilog,001-sequence-detector,1,0,2023-08-23 05:19:44+00:00,[],None
390,https://github.com/ZemelZhao/verilog_code.git,2023-08-23 13:01:13+00:00,,0,ZemelZhao/verilog_code,682105227,Verilog,verilog_code,81,0,2023-08-25 09:28:08+00:00,[],None
391,https://github.com/swrjima/Implementation-of-synchronous-FIFO.git,2023-08-25 05:57:07+00:00,,0,swrjima/Implementation-of-synchronous-FIFO,682895033,Verilog,Implementation-of-synchronous-FIFO,3,0,2023-08-25 06:06:39+00:00,[],None
392,https://github.com/sangeeth33/data_stream_mux.git,2023-08-25 06:17:30+00:00,A data stream mutiplexor  which consists of 3 modes which transfers data from 3 input data streams to output with respect to the mode selected,0,sangeeth33/data_stream_mux,682901456,Verilog,data_stream_mux,5,0,2023-08-25 08:08:19+00:00,[],None
393,https://github.com/zulisses/Projetos_LAOCII.git,2023-08-25 03:56:31+00:00,Projetos realizados como requisito da mat√©ria Laborat√≥rio de arquitetura e organiza√ß√£o de computadores II,0,zulisses/Projetos_LAOCII,682866209,Verilog,Projetos_LAOCII,6122,0,2023-08-25 04:02:54+00:00,[],None
394,https://github.com/usc-chips/ee599-hw1.git,2023-08-24 23:34:07+00:00,,1,usc-chips/ee599-hw1,682788450,Verilog,ee599-hw1,163,0,2023-08-24 23:39:53+00:00,[],
395,https://github.com/nithin1007/PWM_generator.git,2023-08-25 11:07:39+00:00,,0,nithin1007/PWM_generator,683000390,Verilog,PWM_generator,15,0,2023-08-25 15:08:25+00:00,[],None
396,https://github.com/Rohitvgupta15/DSD.git,2023-08-24 16:43:36+00:00,,0,Rohitvgupta15/DSD,682660519,Verilog,DSD,3377,0,2023-08-24 17:04:29+00:00,[],None
397,https://github.com/VipulNeharwal/Asynchronous-FIFO.git,2023-08-25 16:39:33+00:00,,0,VipulNeharwal/Asynchronous-FIFO,683119271,Verilog,Asynchronous-FIFO,2,0,2023-09-03 09:45:03+00:00,[],None
398,https://github.com/Prit1402/spi_to_i2c.git,2023-08-25 17:42:52+00:00,,0,Prit1402/spi_to_i2c,683141145,Verilog,spi_to_i2c,20,0,2023-08-25 20:29:27+00:00,[],None
399,https://github.com/IsaacViolette/VERILOG_PONG.git,2023-08-28 00:45:02+00:00,"This is a small one player ""pong"" game that was created with a partner in a sequential logic systems class. The files that are included are the major modules",0,IsaacViolette/VERILOG_PONG,683873596,Verilog,VERILOG_PONG,4,0,2023-08-28 00:50:48+00:00,[],None
400,https://github.com/kkmlyle/s2p_8.28.git,2023-08-28 20:10:15+00:00,,0,kkmlyle/s2p_8.28,684277067,Verilog,s2p_8.28,5,0,2023-08-28 20:10:49+00:00,[],None
401,https://github.com/kkmlyle/master_thesis8.28.git,2023-08-28 20:08:24+00:00,,0,kkmlyle/master_thesis8.28,684276326,Verilog,master_thesis8.28,67,0,2023-08-28 20:09:51+00:00,[],None
402,https://github.com/ErfanPanahi/Digital-Logic-Design-Lab.git,2023-08-28 11:18:11+00:00,"In this repository, projects related to the Digital Logic Design course laboratory at the University of Tehran have been implemented.",0,ErfanPanahi/Digital-Logic-Design-Lab,684058231,Verilog,Digital-Logic-Design-Lab,21279,0,2023-08-28 11:38:50+00:00,[],None
403,https://github.com/ahmedheikal173/DSB.git,2023-08-18 19:52:42+00:00,,0,ahmedheikal173/DSB,680283638,Verilog,DSB,5,0,2023-08-18 19:55:28+00:00,[],None
404,https://github.com/Daniel-Porras/Digital-1-2023-2.git,2023-08-29 00:02:27+00:00,Repositorio destinado a las pr√°cticas del laboratorio de Digital I,0,Daniel-Porras/Digital-1-2023-2,684339471,Verilog,Digital-1-2023-2,4215,0,2023-11-30 02:56:02+00:00,[],None
405,https://github.com/Gcerpa01/COMPE470L.git,2023-08-29 04:52:38+00:00,,0,Gcerpa01/COMPE470L,684417726,Verilog,COMPE470L,71,0,2023-08-30 05:25:06+00:00,[],None
406,https://github.com/chethans-25/program.git,2023-08-13 10:53:09+00:00,,0,chethans-25/program,677996635,Verilog,program,759,0,2024-01-12 08:17:12+00:00,[],None
407,https://github.com/NachtSpyder04/RISC-V-Eklavya-23.git,2023-08-16 14:45:56+00:00,,3,NachtSpyder04/RISC-V-Eklavya-23,679306450,Verilog,RISC-V-Eklavya-23,1420,0,2023-09-29 16:57:30+00:00,[],None
408,https://github.com/pbeltram/Enclustra.git,2023-08-16 18:59:29+00:00,Enclustra Mercury XU8 and ST1 board devel.,0,pbeltram/Enclustra,679403262,Verilog,Enclustra,48294,0,2023-08-19 18:20:51+00:00,[],https://api.github.com/licenses/apache-2.0
409,https://github.com/srikar555/Vending-Machine.git,2023-08-14 09:23:59+00:00,,0,srikar555/Vending-Machine,678320177,Verilog,Vending-Machine,6,0,2023-08-16 07:11:49+00:00,[],None
410,https://github.com/Coooolix/Hyperbus_vip.git,2023-08-20 11:21:40+00:00,,0,Coooolix/Hyperbus_vip,680777071,Verilog,Hyperbus_vip,152,0,2023-08-20 11:23:30+00:00,[],None
411,https://github.com/Ultimos2020/HDLBits.git,2023-08-20 08:56:09+00:00,Verilog Codes for Problem statements on HDLBits,0,Ultimos2020/HDLBits,680743624,Verilog,HDLBits,28,0,2023-08-20 09:00:33+00:00,[],None
412,https://github.com/Shahiraosama/SPI_Slave_Interface.git,2023-08-19 20:23:05+00:00,,0,Shahiraosama/SPI_Slave_Interface,680616255,Verilog,SPI_Slave_Interface,82,0,2023-08-19 20:24:14+00:00,[],None
413,https://github.com/Drashti268/Division.git,2023-08-19 07:40:36+00:00,,0,Drashti268/Division,680425767,Verilog,Division,1292,0,2023-08-20 03:11:06+00:00,[],None
414,https://github.com/1YEN-Toru/MCOC115-TD.git,2023-08-19 01:41:11+00:00,Moscovium series MCU projects,0,1YEN-Toru/MCOC115-TD,680355277,Verilog,MCOC115-TD,1382,0,2023-08-19 02:43:52+00:00,[],None
415,https://github.com/Ssirrikh/nexys3-tictactoe.git,2023-08-21 19:12:11+00:00,nexys3 hardware description implementation of tic-tac-toe via vga,0,Ssirrikh/nexys3-tictactoe,681327946,Verilog,nexys3-tictactoe,23,0,2023-08-21 20:11:07+00:00,[],None
416,https://github.com/lildiop2/laoc2.git,2023-08-22 00:19:56+00:00,,0,lildiop2/laoc2,681404063,Verilog,laoc2,12860,0,2023-08-22 00:27:54+00:00,[],None
417,https://github.com/Saurava69/RSA-Implementation-Using-Verilog-on-FPGA.git,2023-08-21 17:47:16+00:00,Implemented RSA Algorithm Using Verilog for Secure Data Encryption and Decryption.,0,Saurava69/RSA-Implementation-Using-Verilog-on-FPGA,681296192,Verilog,RSA-Implementation-Using-Verilog-on-FPGA,2064,0,2023-08-21 17:49:32+00:00,[],None
418,https://github.com/0marAmr/Multi_Cyclic_MIPS_Processor.git,2023-08-14 22:44:36+00:00,,1,0marAmr/Multi_Cyclic_MIPS_Processor,678586323,Verilog,Multi_Cyclic_MIPS_Processor,11141,0,2023-08-14 23:01:53+00:00,[],None
419,https://github.com/meetbhatt2113/Vending-machine.git,2023-08-22 10:39:30+00:00,,0,meetbhatt2113/Vending-machine,681589894,Verilog,Vending-machine,1,0,2023-08-22 10:42:27+00:00,[],None
420,https://github.com/AvantikaN/Audio-Signal-Processing-using-FPGA.git,2023-08-22 17:32:51+00:00,,0,AvantikaN/Audio-Signal-Processing-using-FPGA,681755734,Verilog,Audio-Signal-Processing-using-FPGA,4,0,2023-08-22 17:42:12+00:00,[],None
421,https://github.com/sagarrothe/verilog-projects.git,2023-08-23 15:48:38+00:00,,0,sagarrothe/verilog-projects,682174936,Verilog,verilog-projects,6,0,2023-08-24 15:55:45+00:00,[],None
422,https://github.com/anvithashirva/TCL-Workshop.git,2023-08-23 16:36:58+00:00,,0,anvithashirva/TCL-Workshop,682193954,Verilog,TCL-Workshop,682,0,2023-08-29 00:38:28+00:00,[],None
423,https://github.com/yaminisiripuram97/Multiplier.git,2023-08-24 17:22:48+00:00,,0,yaminisiripuram97/Multiplier,682675084,Verilog,Multiplier,2,0,2023-08-24 17:22:56+00:00,[],None
424,https://github.com/NileshPandey22/8bit_processor_Nilesh_Pandey.git,2023-08-25 16:07:38+00:00,,0,NileshPandey22/8bit_processor_Nilesh_Pandey,683107934,Verilog,8bit_processor_Nilesh_Pandey,3,0,2023-08-25 16:29:04+00:00,[],None
425,https://github.com/onkarsm22/Implementation-of-32-bit-MIPS-Processor.git,2023-08-25 17:10:32+00:00,,0,onkarsm22/Implementation-of-32-bit-MIPS-Processor,683130225,Verilog,Implementation-of-32-bit-MIPS-Processor,115,0,2023-08-25 17:14:05+00:00,[],None
426,https://github.com/RishithaRao14/Dsd-assignments.git,2023-08-24 15:41:01+00:00,,0,RishithaRao14/Dsd-assignments,682636625,Verilog,Dsd-assignments,5164,0,2023-09-14 12:54:22+00:00,[],None
427,https://github.com/shivamverma060/16Bit_RISC_Processor.git,2023-08-24 15:29:28+00:00,,0,shivamverma060/16Bit_RISC_Processor,682632071,Verilog,16Bit_RISC_Processor,6,0,2023-08-24 15:30:53+00:00,[],None
428,https://github.com/ShreyaVerma1303/DIGITAL-SYSTEM-DESIGN.git,2023-08-24 15:21:12+00:00,,0,ShreyaVerma1303/DIGITAL-SYSTEM-DESIGN,682628791,Verilog,DIGITAL-SYSTEM-DESIGN,4895,0,2023-09-16 16:13:17+00:00,[],None
429,https://github.com/Sushovanb22/Memory-Modelling.git,2023-08-24 18:41:42+00:00,,0,Sushovanb22/Memory-Modelling,682705292,Verilog,Memory-Modelling,3,0,2023-08-24 18:51:48+00:00,[],None
430,https://github.com/usc-chips/x.git,2023-08-24 19:45:11+00:00,,0,usc-chips/x,682727011,Verilog,x,11,0,2023-08-24 19:45:36+00:00,[],None
431,https://github.com/ArunSaiJaligama/Spatial-filter.git,2023-08-27 14:36:16+00:00,This repository include the files related to the project,0,ArunSaiJaligama/Spatial-filter,683734327,Verilog,Spatial-filter,5,0,2023-08-27 14:38:47+00:00,[],None
432,https://github.com/pratheekgg/SSCS_Synthoshpere.git,2023-08-26 01:34:42+00:00,,0,pratheekgg/SSCS_Synthoshpere,683251462,Verilog,SSCS_Synthoshpere,520,0,2023-08-26 03:04:17+00:00,[],None
433,https://github.com/Raftaar-98/VLSI-project-1.git,2023-08-26 20:27:32+00:00,,0,Raftaar-98/VLSI-project-1,683517509,Verilog,VLSI-project-1,9,0,2023-08-26 20:34:24+00:00,[],None
434,https://github.com/Mahfuza20/DSD.git,2023-08-16 18:18:55+00:00,,0,Mahfuza20/DSD,679390516,Verilog,DSD,14,0,2023-08-16 18:29:37+00:00,[],None
435,https://github.com/marianabuhazi/FIR-filter.git,2023-08-16 18:18:04+00:00,FIR filter design,0,marianabuhazi/FIR-filter,679390177,Verilog,FIR-filter,400,0,2023-10-28 01:05:00+00:00,[],None
436,https://github.com/punnavamshi/Implementation-of-vending-machine-controller-using-veriloghdl.git,2023-08-17 05:46:20+00:00,,0,punnavamshi/Implementation-of-vending-machine-controller-using-veriloghdl,679559162,Verilog,Implementation-of-vending-machine-controller-using-veriloghdl,9,0,2023-08-17 06:07:54+00:00,[],None
437,https://github.com/ziadmali59/Spartan6---DSP48A1.git,2023-08-18 08:32:20+00:00,"The Spartan-6 family offers a high ratio of DSP48A1 slices to logic, making it ideal for math-intensive applications.",0,ziadmali59/Spartan6---DSP48A1,680055972,Verilog,Spartan6---DSP48A1,15,0,2023-08-18 08:42:38+00:00,[],None
438,https://github.com/marc0620/NTU_CA_2022.git,2023-08-18 08:17:47+00:00,,0,marc0620/NTU_CA_2022,680051157,Verilog,NTU_CA_2022,44845,0,2023-08-18 08:21:33+00:00,[],None
439,https://github.com/SimhadriVenkat1999/Design_of_16x8_Asynchronous_FIFO.git,2023-08-16 14:05:19+00:00,This repository explains the Design of 16x8 Asynchronous FIFO,0,SimhadriVenkat1999/Design_of_16x8_Asynchronous_FIFO,679289604,Verilog,Design_of_16x8_Asynchronous_FIFO,468,0,2023-08-16 14:40:32+00:00,[],None
440,https://github.com/arta-ns/chipignite_sep2023.git,2023-08-17 02:52:58+00:00,,0,arta-ns/chipignite_sep2023,679515130,Verilog,chipignite_sep2023,11914,0,2023-08-17 02:54:03+00:00,[],https://api.github.com/licenses/apache-2.0
441,https://github.com/aks7865/Vending-Machine.git,2023-08-18 05:41:06+00:00,,0,aks7865/Vending-Machine,680000429,Verilog,Vending-Machine,114,0,2023-08-18 05:49:02+00:00,[],None
442,https://github.com/gunavant-s/ALU_Day-030.git,2023-08-18 00:33:39+00:00,An arithmetic logic unit(ALU) is a major component of the central processing unit of the a computer system. It does all processes related to arithmetic and logic operations that need to be done on instruction words.,0,gunavant-s/ALU_Day-030,679931089,Verilog,ALU_Day-030,201,0,2023-08-18 00:34:14+00:00,[],None
443,https://github.com/Yashraj6190/MIPS.git,2023-08-16 22:32:10+00:00,32-bit Single Cycle MIPS Processor in Verilog,0,Yashraj6190/MIPS,679458730,Verilog,MIPS,541,0,2023-08-16 22:33:57+00:00,[],None
444,https://github.com/ErfanPanahi/Digital-Logic-Design.git,2023-08-28 11:11:28+00:00,"In this repository, projects related to the Digital Logic Design course at the University of Tehran have been implemented.",0,ErfanPanahi/Digital-Logic-Design,684055718,Verilog,Digital-Logic-Design,8131,0,2023-08-28 11:17:00+00:00,[],None
445,https://github.com/jayant31j/SIT329-ParkingPRO.git,2023-08-28 05:43:04+00:00,The Main github repo for Group 8. In this repo we are going to add all the commits and work done by the team. ,0,jayant31j/SIT329-ParkingPRO,683942795,Verilog,SIT329-ParkingPRO,3370,0,2023-10-06 10:52:22+00:00,[],None
446,https://github.com/ErfanPanahi/Computer-Architecture.git,2023-08-28 11:51:50+00:00,"In this repository, projects related to the Computer Architecture course laboratory at the University of Tehran have been implemented.",0,ErfanPanahi/Computer-Architecture,684071071,Verilog,Computer-Architecture,6617,0,2023-08-28 11:53:47+00:00,[],None
447,https://github.com/catpupu/CPU.git,2023-08-28 10:57:18+00:00,,0,catpupu/CPU,684050636,Verilog,CPU,71,0,2023-08-28 11:17:06+00:00,[],None
448,https://github.com/shiv013iitb/MIPS32-pipeline.git,2023-08-13 17:46:33+00:00,self project along with report,0,shiv013iitb/MIPS32-pipeline,678106966,Verilog,MIPS32-pipeline,678,0,2023-08-13 17:59:41+00:00,[],None
449,https://github.com/mahdimoeini8102/DigitalSystems_StateMachine.git,2023-08-15 17:07:38+00:00,"This is the fifth project of the Digital System course at the university and it is about state machines. In this project, I have implemented two sequence detectors using SystemVerilog HDL(Hardware Description Language) and then I have synthesized them. ",0,mahdimoeini8102/DigitalSystems_StateMachine,678911556,Verilog,DigitalSystems_StateMachine,1066,0,2023-08-15 17:09:01+00:00,[],None
450,https://github.com/cepdnaclk/e17-co502-RV32IM-Pipeline-Implementation-Group1.git,2023-08-17 16:34:18+00:00,An in-order 5-stage pipelined RISC-V CPU implementation consisting of the RV32I base ISA and the M-extension for multiplication/division operations.,3,cepdnaclk/e17-co502-RV32IM-Pipeline-Implementation-Group1,679797525,Verilog,e17-co502-RV32IM-Pipeline-Implementation-Group1,4234,0,2023-08-21 18:52:21+00:00,[],None
451,https://github.com/skudlur/pes_asic_class.git,2023-08-18 04:32:23+00:00,Repo for the lab assignments for ASIC Special topic,0,skudlur/pes_asic_class,679984072,Verilog,pes_asic_class,4027,0,2023-09-08 09:49:25+00:00,[],None
452,https://github.com/cepdnaclk/e17-co502-RV32IM-Pipeline-Implementation_Group2.git,2023-08-29 05:28:13+00:00,,2,cepdnaclk/e17-co502-RV32IM-Pipeline-Implementation_Group2,684428753,Verilog,e17-co502-RV32IM-Pipeline-Implementation_Group2,238,0,2023-10-15 11:32:10+00:00,[],None
453,https://github.com/NagireddychandramouliReddy/MIPS_Processor.git,2023-08-27 10:43:28+00:00,Design of 32-bit basic processor unit which decodes the instruction and performs different operations of ALU.,0,NagireddychandramouliReddy/MIPS_Processor,683673670,Verilog,MIPS_Processor,19,0,2023-08-27 10:44:27+00:00,[],https://api.github.com/licenses/gpl-3.0
454,https://github.com/Foxlisic/M8088.git,2023-08-12 05:45:02+00:00,–ú–∏–∫—Ä–æ—Å–∫–æ–ø,0,Foxlisic/M8088,677633762,Verilog,M8088,170,0,2023-08-12 18:54:48+00:00,[],https://api.github.com/licenses/mit
455,https://github.com/LuisVaca1503/Lab_DIgital_1.git,2023-08-22 19:25:40+00:00,"Repositorio creado con el proposito de desarrollar las actividades relacionadas al laboratorio digital 1, dirigido por el profesor Jhonny Cubides",0,LuisVaca1503/Lab_DIgital_1,681798726,Verilog,Lab_DIgital_1,10459,0,2023-10-07 02:30:17+00:00,[],None
456,https://github.com/chandermani209/Asynchronous_FIFO.git,2023-08-26 09:44:33+00:00,,0,chandermani209/Asynchronous_FIFO,683353054,Verilog,Asynchronous_FIFO,154,0,2023-08-30 16:12:56+00:00,[],None
457,https://github.com/aravindsai2512/Pipelined-Multiplier.git,2023-08-22 19:18:18+00:00,,0,aravindsai2512/Pipelined-Multiplier,681796328,Verilog,Pipelined-Multiplier,5,0,2023-08-22 19:31:19+00:00,[],None
458,https://github.com/Sidv005/Samsung-PD-Training.git,2023-08-17 06:47:57+00:00,,0,Sidv005/Samsung-PD-Training,679579347,Verilog,Samsung-PD-Training,77338,0,2023-09-12 10:24:31+00:00,[],None
459,https://github.com/judeurban/computer-hardware-techniques.git,2023-08-27 20:54:54+00:00,,0,judeurban/computer-hardware-techniques,683833160,Verilog,computer-hardware-techniques,4215,0,2023-09-25 03:19:10+00:00,[],None
460,https://github.com/robertlee2014/Synthesizing-SystemVerilog-Smaple-and-Advices.git,2023-08-14 10:05:55+00:00,This project is created to record my synthesuzing system verilog usagement and  provide some advices based on the synthesis result.,0,robertlee2014/Synthesizing-SystemVerilog-Smaple-and-Advices,678334378,Verilog,Synthesizing-SystemVerilog-Smaple-and-Advices,306,0,2023-10-12 13:26:36+00:00,[],https://api.github.com/licenses/gpl-3.0
461,https://github.com/KareemElsheikh/AES.git,2023-08-15 21:35:48+00:00,This repository contains different modules used for implementing AES using Verilog as an HDL.,0,KareemElsheikh/AES,678993111,Verilog,AES,555,0,2023-08-16 05:38:27+00:00,[],None
462,https://github.com/bharatts/Physical_Design_Using_OpenLane_Sky130.git,2023-08-15 13:03:03+00:00,,0,bharatts/Physical_Design_Using_OpenLane_Sky130,678818673,Verilog,Physical_Design_Using_OpenLane_Sky130,43649,0,2023-08-16 14:29:20+00:00,[],https://api.github.com/licenses/mit
463,https://github.com/Shubham-makar/16-bit-dadda-multiplier.git,2023-08-14 17:48:04+00:00,,0,Shubham-makar/16-bit-dadda-multiplier,678503638,Verilog,16-bit-dadda-multiplier,6,0,2023-08-14 17:55:03+00:00,[],None
464,https://github.com/DasMayur/Dual-Elevator-Control-System.git,2023-08-13 06:12:32+00:00,,0,DasMayur/Dual-Elevator-Control-System,677935735,Verilog,Dual-Elevator-Control-System,382,0,2023-09-05 13:42:42+00:00,[],None
465,https://github.com/sandchick/aging_soc.git,2023-08-14 09:08:11+00:00,,0,sandchick/aging_soc,678314944,Verilog,aging_soc,2165,0,2023-08-14 09:27:50+00:00,[],None
466,https://github.com/Abhinandan-Singh-Baghel/hardwaresecurity.git,2023-08-14 10:26:59+00:00,,0,Abhinandan-Singh-Baghel/hardwaresecurity,678341300,Verilog,hardwaresecurity,530,0,2023-08-14 10:28:10+00:00,[],None
467,https://github.com/kapilsingla22/Mips_32_processor_using_verilog.git,2023-08-14 07:22:07+00:00,,0,kapilsingla22/Mips_32_processor_using_verilog,678279623,Verilog,Mips_32_processor_using_verilog,369,0,2023-08-22 15:42:17+00:00,[],None
468,https://github.com/SuperrGao/RISC_V_cpu_verification.git,2023-08-13 13:30:00+00:00,,0,SuperrGao/RISC_V_cpu_verification,678036831,Verilog,RISC_V_cpu_verification,1361,0,2023-08-13 13:48:45+00:00,[],None
469,https://github.com/Dhruvithakar0913/2-to-4-decoder.git,2023-08-13 09:15:48+00:00,,0,Dhruvithakar0913/2-to-4-decoder,677974943,Verilog,2-to-4-decoder,5,0,2023-08-13 09:16:43+00:00,[],None
470,https://github.com/fleathlushby/tinytapeout_TT04_SEAL.git,2023-08-14 15:28:02+00:00,,0,fleathlushby/tinytapeout_TT04_SEAL,678451777,Verilog,tinytapeout_TT04_SEAL,120,0,2023-08-18 09:53:04+00:00,[],https://api.github.com/licenses/apache-2.0
471,https://github.com/Typas/ca-final-project.git,2023-08-15 16:54:02+00:00,,0,Typas/ca-final-project,678907062,Verilog,ca-final-project,831,0,2023-08-15 17:07:17+00:00,[],None
472,https://github.com/Khalid-Hesham/MIPS.git,2023-08-16 11:59:23+00:00,Single Cycle MIPS Processor,0,Khalid-Hesham/MIPS,679238920,Verilog,MIPS,12,0,2023-09-02 20:32:24+00:00,[],None
473,https://github.com/ivbakula/Gowin-SinGenerator.git,2023-08-16 18:58:02+00:00,,0,ivbakula/Gowin-SinGenerator,679402874,Verilog,Gowin-SinGenerator,7,0,2023-08-16 18:58:40+00:00,[],None
474,https://github.com/ronakr010/12HourClk.git,2023-08-17 17:09:26+00:00,,0,ronakr010/12HourClk,679810148,Verilog,12HourClk,1119,0,2023-08-17 17:11:56+00:00,[],None
475,https://github.com/shiv013iitb/Dadda-Wallace-Multiplier_FPGA.git,2023-08-17 20:37:59+00:00,,0,shiv013iitb/Dadda-Wallace-Multiplier_FPGA,679880666,Verilog,Dadda-Wallace-Multiplier_FPGA,761,0,2023-08-17 20:44:22+00:00,[],None
476,https://github.com/NamrathaCTR/12HourClock.git,2023-08-17 21:20:50+00:00,,0,NamrathaCTR/12HourClock,679891258,Verilog,12HourClock,1,0,2023-08-17 21:21:49+00:00,[],None
477,https://github.com/udayM-design/pes_asic_class.git,2023-08-18 09:07:51+00:00,,0,udayM-design/pes_asic_class,680068030,Verilog,pes_asic_class,149,0,2023-08-19 10:41:29+00:00,[],https://api.github.com/licenses/mit
478,https://github.com/FPGA-Systems/wave_logo.git,2023-08-18 07:39:27+00:00,FPGA systems logo in waveform style,0,FPGA-Systems/wave_logo,680038994,Verilog,wave_logo,9,0,2023-08-18 07:43:01+00:00,[],None
479,https://github.com/Ragineeiitb/Asynchronous-_Dual_clock_FIFO.git,2023-08-18 10:32:37+00:00,This file contains code and results for asynchronous fio,0,Ragineeiitb/Asynchronous-_Dual_clock_FIFO,680096914,Verilog,Asynchronous-_Dual_clock_FIFO,8451,0,2023-08-18 10:58:39+00:00,[],None
480,https://github.com/souvik4374/asyncronous_fifo.git,2023-08-17 17:52:11+00:00,,0,souvik4374/asyncronous_fifo,679825555,Verilog,asyncronous_fifo,384,0,2023-08-17 18:20:01+00:00,[],None
481,https://github.com/haraqu/RTL_PRACTICE.git,2023-08-21 08:18:33+00:00,FOR HOMEWORK,0,haraqu/RTL_PRACTICE,681082648,Verilog,RTL_PRACTICE,9,0,2023-08-24 08:17:48+00:00,[],None
482,https://github.com/nouramr-ic-d/PWM.git,2023-08-21 02:46:48+00:00,"pulse with modulation(PWM) , which is a technique to control the amount of power you provide to certain analog devices.",0,nouramr-ic-d/PWM,680988350,Verilog,PWM,10,0,2023-08-21 02:51:59+00:00,[],None
483,https://github.com/14kars/RTL_Challenge.git,2023-08-19 04:01:48+00:00,,0,14kars/RTL_Challenge,680379382,Verilog,RTL_Challenge,270,0,2023-08-19 04:02:13+00:00,[],None
484,https://github.com/kapilsingla22/T-20_Cricket_game.git,2023-08-19 09:21:15+00:00,,0,kapilsingla22/T-20_Cricket_game,680448968,Verilog,T-20_Cricket_game,124,0,2023-08-25 17:01:03+00:00,[],None
485,https://github.com/ericlee310quark/Spring_2023_NYCU_ICLAB.git,2023-08-19 08:36:56+00:00,Integrated Circuit Design Laboratory ( NYCU: EEIE30041 ),0,ericlee310quark/Spring_2023_NYCU_ICLAB,680438560,Verilog,Spring_2023_NYCU_ICLAB,158645,0,2023-08-19 09:42:28+00:00,[],None
486,https://github.com/vinay012002/AHB_to_APB_Bridge_design.git,2023-08-20 13:42:22+00:00,,0,vinay012002/AHB_to_APB_Bridge_design,680812722,Verilog,AHB_to_APB_Bridge_design,3,0,2023-08-20 13:47:53+00:00,[],None
487,https://github.com/nourhussin/Logic_Circuits_Design_Projects.git,2023-08-23 15:24:57+00:00,,0,nourhussin/Logic_Circuits_Design_Projects,682165758,Verilog,Logic_Circuits_Design_Projects,10,0,2023-08-23 15:27:04+00:00,[],None
488,https://github.com/bommalimanoj110298/AsynchronousFIFO.git,2023-08-23 16:35:18+00:00,,0,bommalimanoj110298/AsynchronousFIFO,682193327,Verilog,AsynchronousFIFO,10,0,2023-08-24 06:19:52+00:00,[],None
489,https://github.com/AshokumarT/Data_Stream_Multiplexing.git,2023-08-24 06:44:30+00:00,,0,AshokumarT/Data_Stream_Multiplexing,682431216,Verilog,Data_Stream_Multiplexing,297,0,2023-08-24 06:46:30+00:00,[],None
490,https://github.com/tarunaturkane/Tic-Tac-Toe.git,2023-08-26 05:58:30+00:00,,0,tarunaturkane/Tic-Tac-Toe,683299158,Verilog,Tic-Tac-Toe,7,0,2024-01-03 13:23:03+00:00,[],None
491,https://github.com/YanChengHuang/IC_learning.git,2023-08-29 03:00:23+00:00,,0,YanChengHuang/IC_learning,684384890,Verilog,IC_learning,294620,0,2024-02-19 07:08:08+00:00,[],None
492,https://github.com/aysim319/verilog_webapp.git,2023-08-28 16:30:30+00:00,,0,aysim319/verilog_webapp,684189671,Verilog,verilog_webapp,8123,0,2024-03-26 18:35:01+00:00,[],None
493,https://github.com/suvadeep3/4x4Array_multiplier_using_Verilog.git,2023-08-27 12:24:22+00:00,,0,suvadeep3/4x4Array_multiplier_using_Verilog,683698240,Verilog,4x4Array_multiplier_using_Verilog,173,0,2023-08-27 13:50:32+00:00,[],None
494,https://github.com/walker99999/-E902.git,2023-08-27 08:22:06+00:00,,0,walker99999/-E902,683641181,Verilog,-E902,13028,0,2023-08-27 08:23:54+00:00,[],None
495,https://github.com/vaibhavmustilwar/Sequence_detector.git,2023-08-27 10:16:04+00:00,,0,vaibhavmustilwar/Sequence_detector,683667148,Verilog,Sequence_detector,3,0,2023-08-27 10:20:48+00:00,[],None
496,https://github.com/lakshmangreat/32_bits_processor.git,2023-08-26 17:08:48+00:00,"Design an HDL-based 32-bit processor (Instruction decode (Instruction decoder + controller) + Instruction execute (ALU)+register write (Register Bank)) which executes the following 10 instructions: ADD, SUB, SLL, SLT, SLTU, XOR, SRL, SRA, OR, AND",0,lakshmangreat/32_bits_processor,683468898,Verilog,32_bits_processor,1306,0,2023-08-26 17:10:30+00:00,[],None
497,https://github.com/yosri227/LFSR.git,2023-08-26 17:45:06+00:00,LFSR,0,yosri227/LFSR,683478373,Verilog,LFSR,1,0,2023-08-26 17:52:13+00:00,[],None
498,https://github.com/Yazan-Habash114/FIFO_Memory.git,2023-08-26 09:33:43+00:00,"FIFO stands for First In, First Out which is a method for organizing the manipulation of a data structure (often, specifically a data buffer) where the oldest (first) entry, is processed first. So, in this project I designed and verify the FIFO memory using direct testing.",0,Yazan-Habash114/FIFO_Memory,683350352,Verilog,FIFO_Memory,3,0,2023-08-26 09:36:24+00:00,[],None
499,https://github.com/bongbui321/uart.git,2023-08-27 01:06:15+00:00,"Created a fake uart system that can only transmit  a ""H"" within a one uart so is it really a communication link?",0,bongbui321/uart,683561114,Verilog,uart,1,0,2023-08-27 01:06:36+00:00,[],None
500,https://github.com/ahmed-nader-ahmed/verilog_blocks.git,2023-08-29 10:41:32+00:00,This repository contains the logic blocks written in verilog,0,ahmed-nader-ahmed/verilog_blocks,684537167,Verilog,verilog_blocks,16,0,2023-08-29 10:42:46+00:00,[],None
501,https://github.com/danielmergy/OrbitalTracking.git,2023-08-22 14:38:22+00:00,,0,danielmergy/OrbitalTracking,681687139,Verilog,OrbitalTracking,1859,0,2023-10-20 08:11:31+00:00,[],None
502,https://github.com/alymmak/FitBit.git,2023-08-22 19:35:07+00:00,Verilog FitBit Project,0,alymmak/FitBit,681801830,Verilog,FitBit,84,0,2023-08-22 19:35:30+00:00,[],None
503,https://github.com/YunJoongChul/Verilog-LeNet5-Fixed8bit.git,2023-08-17 01:00:53+00:00,,0,YunJoongChul/Verilog-LeNet5-Fixed8bit,679489144,Verilog,Verilog-LeNet5-Fixed8bit,103,0,2023-08-17 01:01:46+00:00,[],None
504,https://github.com/kareefardi/test_cup.git,2023-08-28 13:51:53+00:00,,0,kareefardi/test_cup,684120026,Verilog,test_cup,11913,0,2023-08-28 13:53:01+00:00,[],https://api.github.com/licenses/apache-2.0
505,https://github.com/Udaykumarchoudhary/Tic-Tac-Toe.git,2023-08-25 19:10:51+00:00,,0,Udaykumarchoudhary/Tic-Tac-Toe,683172589,Verilog,Tic-Tac-Toe,7,0,2023-08-27 09:34:24+00:00,[],None
506,https://github.com/Karthik7090ps/Bluetooth-communication-RTL-synthesis-using-yosys.git,2023-08-25 19:03:16+00:00,"Designed UART receiver: 9600 Baud, 100 MHz clock, 8-bit FIFO. State machine, synced RX signal, efficient data processing.",0,Karthik7090ps/Bluetooth-communication-RTL-synthesis-using-yosys,683170125,Verilog,Bluetooth-communication-RTL-synthesis-using-yosys,1396,0,2023-10-29 18:27:52+00:00,[],None
507,https://github.com/Kamleshk22/FIFO.git,2023-08-25 16:13:29+00:00,,0,Kamleshk22/FIFO,683110006,Verilog,FIFO,77,0,2023-08-25 16:15:06+00:00,[],None
508,https://github.com/yojansharma/8_bit_processor.git,2023-08-25 16:40:07+00:00,,0,yojansharma/8_bit_processor,683119478,Verilog,8_bit_processor,3,0,2023-08-25 16:42:52+00:00,[],None
509,https://github.com/Darshit-Singh22/TIC_TAC_TOE_VERILOG.git,2023-08-25 20:26:40+00:00,VERILOG CODE FOR TIV TAC TOE GAME ,0,Darshit-Singh22/TIC_TAC_TOE_VERILOG,683193499,Verilog,TIC_TAC_TOE_VERILOG,696,0,2023-08-25 21:04:42+00:00,[],None
510,https://github.com/shourovrm/skywater-picorv.git,2023-08-25 20:32:32+00:00,,0,shourovrm/skywater-picorv,683194952,Verilog,skywater-picorv,221567,0,2023-08-25 20:42:06+00:00,[],https://api.github.com/licenses/apache-2.0
511,https://github.com/sagarb0919/Verilog_project_Backend_unit-for-mixed-IC.git,2023-08-24 22:26:06+00:00,,0,sagarb0919/Verilog_project_Backend_unit-for-mixed-IC,682771120,Verilog,Verilog_project_Backend_unit-for-mixed-IC,721,0,2023-08-25 15:33:50+00:00,[],None
512,https://github.com/shivamverma060/Backend_Design.git,2023-08-24 15:35:35+00:00,,0,shivamverma060/Backend_Design,682634438,Verilog,Backend_Design,193,0,2023-08-24 15:38:15+00:00,[],None
513,https://github.com/ArunSaiJaligama/I2C-Protocol.git,2023-08-24 16:21:31+00:00,This repository include the files related to the project,0,ArunSaiJaligama/I2C-Protocol,682652303,Verilog,I2C-Protocol,1,0,2023-08-24 16:22:10+00:00,[],None
514,https://github.com/imanand816/ASIC-design-of-8-bit-synchronous-up-counter-using-Cadence-tool.git,2023-08-25 11:48:39+00:00,,0,imanand816/ASIC-design-of-8-bit-synchronous-up-counter-using-Cadence-tool,683013964,Verilog,ASIC-design-of-8-bit-synchronous-up-counter-using-Cadence-tool,13940,0,2023-08-25 16:23:02+00:00,[],None
515,https://github.com/rohitwhogar/16-bit-ALU-.git,2023-08-24 18:18:38+00:00,A 16-bit Arithmetic and Logic Unit is designed using HDL Verilog. The RTL simulation and synthesis are performed in Yosys.,0,rohitwhogar/16-bit-ALU-,682695988,Verilog,16-bit-ALU-,3548,0,2023-08-24 19:48:28+00:00,[],None
516,https://github.com/vamshi-vm/Design-of-Multiplier-using-datapath-and-controlpath.git,2023-08-28 07:01:56+00:00,,0,vamshi-vm/Design-of-Multiplier-using-datapath-and-controlpath,683967888,Verilog,Design-of-Multiplier-using-datapath-and-controlpath,27,0,2023-09-01 03:40:13+00:00,[],None
517,https://github.com/thistle-witch/openFPGA-GBA.git,2023-08-29 16:30:58+00:00,,0,thistle-witch/openFPGA-GBA,684681365,Verilog,openFPGA-GBA,369,0,2023-08-29 16:37:07+00:00,[],None
518,https://github.com/BitterDer/MarioVGA.git,2023-08-15 22:46:54+00:00,Super Mario inspired game for VGA. ,0,BitterDer/MarioVGA,679009430,Verilog,MarioVGA,16,0,2023-11-23 23:27:23+00:00,[],None
519,https://github.com/ATWeatherly/vortex-dev.git,2023-08-16 18:21:18+00:00,pseudo-fork of vortex-dev ,0,ATWeatherly/vortex-dev,679391371,Verilog,vortex-dev,342882,0,2023-12-12 21:00:52+00:00,[],https://api.github.com/licenses/bsd-3-clause
520,https://github.com/AbdelrahmanKhaled826/traffic_light_controller.git,2023-08-25 09:17:51+00:00,,0,AbdelrahmanKhaled826/traffic_light_controller,682963463,Verilog,traffic_light_controller,3,0,2023-12-18 15:35:33+00:00,[],None
521,https://github.com/AbdelrahmanKhaled826/debouncing.git,2023-08-23 03:43:12+00:00,,0,AbdelrahmanKhaled826/debouncing,681919419,Verilog,debouncing,10,0,2023-12-18 15:35:34+00:00,[],None
522,https://github.com/deepanshi919/Advanced-Encryption-Standard.git,2023-08-27 16:11:55+00:00,,0,deepanshi919/Advanced-Encryption-Standard,683761419,Verilog,Advanced-Encryption-Standard,70,0,2023-08-27 16:14:44+00:00,[],None
523,https://github.com/Pavanpm199/Hamming_code.git,2023-08-29 17:25:52+00:00,,0,Pavanpm199/Hamming_code,684705520,Verilog,Hamming_code,7,0,2023-08-29 17:27:16+00:00,[],None
524,https://github.com/ahmedheikal173/SPI.git,2023-08-29 03:24:58+00:00,Serial Peripheral Interface Communication Protocol,0,ahmedheikal173/SPI,684391644,Verilog,SPI,4,0,2023-08-29 03:26:10+00:00,[],None
525,https://github.com/aadeesh06/Verilog_beginner.git,2023-08-28 05:42:12+00:00,,0,aadeesh06/Verilog_beginner,683942581,Verilog,Verilog_beginner,13,0,2023-08-28 05:42:34+00:00,[],None
526,https://github.com/BassantAhmedElbakry/CRC.git,2023-08-28 22:12:47+00:00,,0,BassantAhmedElbakry/CRC,684312530,Verilog,CRC,4,0,2023-08-28 22:14:49+00:00,[],None
527,https://github.com/puneets143/Vending_Machine_verilog.git,2023-08-25 14:34:13+00:00,,0,puneets143/Vending_Machine_verilog,683074402,Verilog,Vending_Machine_verilog,1,0,2023-08-25 14:35:17+00:00,[],None
528,https://github.com/VarshaIITG/RAM-and-ROM-Design.git,2023-08-25 17:39:14+00:00,,0,VarshaIITG/RAM-and-ROM-Design,683140019,Verilog,RAM-and-ROM-Design,46,0,2023-08-25 18:06:59+00:00,[],None
529,https://github.com/VipulNeharwal/UART.git,2023-08-25 18:03:03+00:00,,0,VipulNeharwal/UART,683147988,Verilog,UART,5,0,2023-09-02 11:28:02+00:00,[],None
530,https://github.com/yazmrt/shift-and-add-multiplier.git,2023-08-25 20:04:04+00:00,Shift and add multiplier that uses only one FA for addition process.,0,yazmrt/shift-and-add-multiplier,683187500,Verilog,shift-and-add-multiplier,204,0,2023-08-25 20:06:43+00:00,[],None
531,https://github.com/Aditikushwah/UART-Transmitter.git,2023-08-25 20:45:00+00:00,,1,Aditikushwah/UART-Transmitter,683197932,Verilog,UART-Transmitter,80,0,2023-08-25 21:00:15+00:00,[],None
532,https://github.com/coolbeans404/caravel-harness-test.git,2023-08-17 14:48:09+00:00,Test module on the Caravel harness,0,coolbeans404/caravel-harness-test,679757470,Verilog,caravel-harness-test,11913,0,2023-08-17 15:02:35+00:00,[],https://api.github.com/licenses/apache-2.0
533,https://github.com/b21217/Traffic-Light-Controller.git,2023-08-17 17:49:23+00:00,,0,b21217/Traffic-Light-Controller,679824541,Verilog,Traffic-Light-Controller,79,0,2023-08-17 18:11:10+00:00,[],None
534,https://github.com/preetam575/32-bit-pipelined-RISC-Processor.git,2023-08-16 20:03:55+00:00,,0,preetam575/32-bit-pipelined-RISC-Processor,679421837,Verilog,32-bit-pipelined-RISC-Processor,34,0,2023-08-16 20:10:53+00:00,[],None
535,https://github.com/MoamenSAlkady/UART.git,2023-08-12 05:36:19+00:00,,0,MoamenSAlkady/UART,677632099,Verilog,UART,4,0,2023-08-12 06:18:45+00:00,[],https://api.github.com/licenses/mit
536,https://github.com/yuvi15158/Digital-Clock.git,2023-08-12 05:06:03+00:00,,0,yuvi15158/Digital-Clock,677626479,Verilog,Digital-Clock,3,0,2023-08-12 05:17:33+00:00,[],None
537,https://github.com/Vivek-Surwase/VerilogSTACK.git,2023-08-14 16:53:23+00:00,stack using verilog,0,Vivek-Surwase/VerilogSTACK,678484838,Verilog,VerilogSTACK,3,0,2023-08-14 16:54:48+00:00,[],None
538,https://github.com/Vivek-Surwase/FP_adder.git,2023-08-14 16:50:07+00:00,Floating point adder,0,Vivek-Surwase/FP_adder,678483663,Verilog,FP_adder,5,0,2023-08-14 16:52:02+00:00,[],None
539,https://github.com/saideepu5692/16bitrisc.git,2023-08-14 01:24:26+00:00,,0,saideepu5692/16bitrisc,678192934,Verilog,16bitrisc,48,0,2023-08-14 01:28:35+00:00,[],None
540,https://github.com/RohanS-14/Clock_divide_by_24.git,2023-08-15 08:49:56+00:00,here is a verilog HDL code to divide clock by 24 circuit. ,0,RohanS-14/Clock_divide_by_24,678735955,Verilog,Clock_divide_by_24,0,0,2023-08-15 08:51:43+00:00,[],None
541,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-28.git,2023-08-23 04:38:37+00:00,synchronous counters,0,rajitha0119/100-DAYS-OF-RTL-DAY-28,681932161,Verilog,100-DAYS-OF-RTL-DAY-28,469,0,2023-08-23 04:41:53+00:00,[],None
542,https://github.com/vijaya-93/TCL_1.git,2023-08-24 09:21:57+00:00,,0,vijaya-93/TCL_1,682486715,Verilog,TCL_1,2360,0,2023-09-20 05:02:09+00:00,[],None
543,https://github.com/khelanvaishnav38/DSD-ASSIGNMENTS3880.git,2023-08-24 16:27:22+00:00,Config files for my GitHub profile.,0,khelanvaishnav38/DSD-ASSIGNMENTS3880,682654471,Verilog,DSD-ASSIGNMENTS3880,8911,0,2023-09-11 12:53:58+00:00,"['config', 'github-config']",None
544,https://github.com/shalan/MS_SPI_XIP_CACHE.git,2023-08-24 18:14:27+00:00,,2,shalan/MS_SPI_XIP_CACHE,682694220,Verilog,MS_SPI_XIP_CACHE,377,0,2023-08-24 18:16:06+00:00,[],https://api.github.com/licenses/apache-2.0
545,https://github.com/Gowthami0412/Apex_Challenge.git,2023-08-23 16:57:53+00:00,,0,Gowthami0412/Apex_Challenge,682201625,Verilog,Apex_Challenge,3,0,2023-08-23 17:16:04+00:00,[],None
546,https://github.com/EstebanJGC/ProjectUIC.git,2023-08-21 14:23:46+00:00,,0,EstebanJGC/ProjectUIC,681217469,Verilog,ProjectUIC,20,0,2023-08-21 14:37:22+00:00,[],https://api.github.com/licenses/apache-2.0
547,https://github.com/amitpadey/Backend_Design.git,2023-08-23 03:48:37+00:00,,0,amitpadey/Backend_Design,681920714,Verilog,Backend_Design,196,0,2023-08-23 04:39:46+00:00,[],None
548,https://github.com/EzzAddinKukhun/I2C.git,2023-08-21 17:44:09+00:00,,0,EzzAddinKukhun/I2C,681295027,Verilog,I2C,1271,0,2023-08-21 17:45:32+00:00,[],None
549,https://github.com/krishnaps22/Project_placement_2023.git,2023-08-21 12:26:04+00:00,Memory_design,0,krishnaps22/Project_placement_2023,681170397,Verilog,Project_placement_2023,4,0,2023-08-21 12:28:19+00:00,[],None
550,https://github.com/noobsharannya/MiniRISC-Processor.git,2023-08-25 03:57:32+00:00,,0,noobsharannya/MiniRISC-Processor,682866394,Verilog,MiniRISC-Processor,7033,0,2023-08-25 04:03:13+00:00,[],None
551,https://github.com/Tawfeeq2507/pes_asic_class.git,2023-08-12 13:14:48+00:00,,0,Tawfeeq2507/pes_asic_class,677735483,Verilog,pes_asic_class,5601,0,2023-08-29 14:45:24+00:00,[],None
552,https://github.com/AITT000/CPU-design.git,2023-08-12 15:16:48+00:00,Design a CPU for calculator programmed by Verilog.,0,AITT000/CPU-design,677767487,Verilog,CPU-design,19,0,2023-08-12 15:31:13+00:00,[],None
553,https://github.com/adarsh9975/IITB_SelfProjects.git,2023-08-13 14:25:14+00:00,Repository for self projects at IIT-B resume verification,0,adarsh9975/IITB_SelfProjects,678051364,Verilog,IITB_SelfProjects,903,0,2023-08-13 14:41:38+00:00,[],None
554,https://github.com/chetan1107/12-Hour-Clock.git,2023-08-18 09:15:02+00:00,,0,chetan1107/12-Hour-Clock,680070509,Verilog,12-Hour-Clock,1690,0,2023-08-18 09:15:46+00:00,[],None
555,https://github.com/YASH-malve/Smart_home_automation_verilog.git,2023-08-18 08:02:09+00:00,,0,YASH-malve/Smart_home_automation_verilog,680046064,Verilog,Smart_home_automation_verilog,3,0,2023-08-18 08:15:29+00:00,[],None
556,https://github.com/monish-nath/exponential_function_course_project.git,2023-08-20 16:55:21+00:00,An Area-Efficient and High Throughput Hardware Implementation of Exponent Function,0,monish-nath/exponential_function_course_project,680865490,Verilog,exponential_function_course_project,1484,0,2023-08-21 07:32:04+00:00,[],None
557,https://github.com/HayatoKimura22/caravel_degital.git,2023-08-14 04:22:42+00:00,,0,HayatoKimura22/caravel_degital,678231570,Verilog,caravel_degital,11914,0,2023-08-14 04:23:47+00:00,[],https://api.github.com/licenses/apache-2.0
558,https://github.com/DasMayur/Risc-V-micromips-processor.git,2023-08-13 05:14:01+00:00,,0,DasMayur/Risc-V-micromips-processor,677924990,Verilog,Risc-V-micromips-processor,8,0,2023-09-13 02:26:05+00:00,[],None
559,https://github.com/axyrai/sequence_detector.git,2023-08-18 05:46:02+00:00,,0,axyrai/sequence_detector,680001607,Verilog,sequence_detector,1,0,2023-08-18 05:48:29+00:00,[],None
560,https://github.com/adityakakeri/Asynchronous-FIFO-Design.git,2023-08-18 13:50:41+00:00,,0,adityakakeri/Asynchronous-FIFO-Design,680164334,Verilog,Asynchronous-FIFO-Design,524,0,2023-08-18 13:54:40+00:00,[],None
561,https://github.com/sasi-kiran123/AES-128-Encryption.git,2023-08-16 13:39:22+00:00,,0,sasi-kiran123/AES-128-Encryption,679278789,Verilog,AES-128-Encryption,19,0,2023-08-16 13:41:23+00:00,[],https://api.github.com/licenses/mit
562,https://github.com/RGD2/srdydrdy_lib.git,2023-08-16 00:23:31+00:00,From https://opencores.org/projects/srdydrdy_lib for inclusion as a git submodule,0,RGD2/srdydrdy_lib,679029416,Verilog,srdydrdy_lib,174,0,2023-08-16 00:24:04+00:00,[],None
563,https://github.com/lichye/sec_resource_partitioning.git,2023-08-15 00:02:16+00:00,,0,lichye/sec_resource_partitioning,678602880,Verilog,sec_resource_partitioning,15,0,2023-08-15 00:04:53+00:00,[],None
564,https://github.com/souhardyadey2001/bidirectional_buffer.git,2023-08-14 17:58:42+00:00,used model-sim and quartus-prime for stimulation and synthesis purpose,0,souhardyadey2001/bidirectional_buffer,678507228,Verilog,bidirectional_buffer,117,0,2023-08-14 18:03:43+00:00,[],None
565,https://github.com/MohamedKhaleeed/MIPS_Processor.git,2023-08-14 15:10:01+00:00,,0,MohamedKhaleeed/MIPS_Processor,678444859,Verilog,MIPS_Processor,35,0,2023-08-15 01:51:08+00:00,[],None
566,https://github.com/IvanLuT29/ansiblek8s.git,2023-08-18 11:04:01+00:00,Ansible Playbook for k8s,0,IvanLuT29/ansiblek8s,680107039,Verilog,ansiblek8s,18,0,2023-08-18 11:07:55+00:00,[],None
567,https://github.com/AliAhmed0000/SPI-Slave-with-Single-Port-RAM.git,2023-08-20 12:47:46+00:00,,0,AliAhmed0000/SPI-Slave-with-Single-Port-RAM,680798186,Verilog,SPI-Slave-with-Single-Port-RAM,12,0,2023-09-02 20:44:52+00:00,[],None
568,https://github.com/GauthamMulay/pes_asics_class.git,2023-08-20 12:05:43+00:00,,0,GauthamMulay/pes_asics_class,680787670,Verilog,pes_asics_class,252,0,2023-08-28 18:07:20+00:00,[],None
569,https://github.com/MichaelBell/pico-ice-nanoV.git,2023-08-20 10:35:55+00:00,nanoV on Pico-Ice,0,MichaelBell/pico-ice-nanoV,680766045,Verilog,pico-ice-nanoV,4,0,2023-08-20 10:36:08+00:00,[],None
570,https://github.com/MohamedDawod29/n-bit-counter-with-parallel-load.git,2023-08-26 21:36:02+00:00,,0,MohamedDawod29/n-bit-counter-with-parallel-load,683530356,Verilog,n-bit-counter-with-parallel-load,2,0,2023-08-26 21:36:23+00:00,[],None
571,https://github.com/KUMARNUNAVATH/100-Days-RTL.git,2023-08-27 11:40:56+00:00,,0,KUMARNUNAVATH/100-Days-RTL,683687288,Verilog,100-Days-RTL,25,0,2023-08-27 11:44:09+00:00,[],None
572,https://github.com/BassantAhmedElbakry/ALU.git,2023-08-27 17:24:11+00:00,"ALU is the fundamental building block of the processor,  which is responsible for carrying out different functions",0,BassantAhmedElbakry/ALU,683783698,Verilog,ALU,23,0,2023-08-27 17:25:14+00:00,[],None
573,https://github.com/dip-0011/binary_multiplication.git,2023-08-26 15:47:56+00:00,,0,dip-0011/binary_multiplication,683445862,Verilog,binary_multiplication,9,0,2023-08-26 16:01:25+00:00,[],None
574,https://github.com/DecoZin/Cademics_lab.git,2023-08-16 21:59:11+00:00,"Verilog exercises from the Cadence course ""Verilog Language and Application v27.0"".",0,DecoZin/Cademics_lab,679451503,Verilog,Cademics_lab,86,0,2024-01-05 01:54:52+00:00,[],None
575,https://github.com/phuhavan/litex_reference_designs.git,2023-08-18 07:52:05+00:00,Litex Reference Designs provides reference designs created out of IP Catalog using Litex integration capabilities.,0,phuhavan/litex_reference_designs,680042882,,litex_reference_designs,2821,0,2024-01-16 12:19:05+00:00,[],None
576,https://github.com/devchadha-jmi/JAMIA-RISC-V.git,2023-08-27 16:49:20+00:00,JAMIA-RISC-V Core is a three stage pipelined general purpose processor written in Verilog using RV32I ISA.,1,devchadha-jmi/JAMIA-RISC-V,683773084,Verilog,JAMIA-RISC-V,140,0,2023-08-27 16:55:58+00:00,[],None
577,https://github.com/NkVaishnav/Vaishnav_Physical_design.git,2023-08-17 06:51:20+00:00,,0,NkVaishnav/Vaishnav_Physical_design,679580589,Verilog,Vaishnav_Physical_design,244439,0,2023-09-19 09:40:34+00:00,[],None
578,https://github.com/Vivek-Surwase/CPU.git,2023-08-14 16:25:50+00:00,Single cycle CPU built using verilog,0,Vivek-Surwase/CPU,678473932,Verilog,CPU,24,0,2023-08-14 16:46:13+00:00,[],None
579,https://github.com/hekurani/CPU_with_verilog.git,2023-08-13 15:03:04+00:00,,0,hekurani/CPU_with_verilog,678061776,Verilog,CPU_with_verilog,18,0,2023-08-13 15:37:47+00:00,[],None
580,https://github.com/aaronghosh/pes_asic_class.git,2023-08-15 13:57:55+00:00,contains the files for the VLSI PHYSICAL DESIGN classes,0,aaronghosh/pes_asic_class,678839119,Verilog,pes_asic_class,145,0,2023-09-04 05:05:52+00:00,[],None
581,https://github.com/somil00/RISC-V-Processor.git,2023-08-15 13:49:52+00:00,,0,somil00/RISC-V-Processor,678835986,Verilog,RISC-V-Processor,82,0,2023-08-15 14:03:40+00:00,[],None
582,https://github.com/ziadmali59/Advanced_Encryption_Standard.git,2023-08-15 17:01:36+00:00,Implementation of AES-128-bit encryption,0,ziadmali59/Advanced_Encryption_Standard,678909632,Verilog,Advanced_Encryption_Standard,140,0,2023-08-15 17:09:45+00:00,[],None
583,https://github.com/Mohammed-Mairajuddin-Musharraf/Serial_Parallel_Communication_protocols.git,2023-08-15 21:33:40+00:00,,0,Mohammed-Mairajuddin-Musharraf/Serial_Parallel_Communication_protocols,678992599,Verilog,Serial_Parallel_Communication_protocols,4,0,2023-08-18 14:00:59+00:00,[],None
584,https://github.com/xicongye/my_user_project.git,2023-08-18 13:08:33+00:00,,0,xicongye/my_user_project,680148865,Verilog,my_user_project,11913,0,2023-08-18 13:09:39+00:00,[],https://api.github.com/licenses/apache-2.0
585,https://github.com/bitofsomesh/Linear-Feedback-Shift-Register.git,2023-08-18 13:08:04+00:00,Wrote the Verilog code of the complete interleaver. It is an interleaver which is a fundamental part of the turbo code design and plays critical role in the performance of turbo decoding.,0,bitofsomesh/Linear-Feedback-Shift-Register,680148682,Verilog,Linear-Feedback-Shift-Register,5,0,2023-08-18 13:09:57+00:00,[],None
586,https://github.com/nazmulhasan77/DSD_Verilog.git,2023-08-19 00:24:38+00:00,,0,nazmulhasan77/DSD_Verilog,680343176,Verilog,DSD_Verilog,4,0,2023-08-19 18:06:33+00:00,[],None
587,https://github.com/alfadelta10010/pes-asic-class.git,2023-08-17 16:26:01+00:00,Assignments and Files from the ASIC course,0,alfadelta10010/pes-asic-class,679794608,Verilog,pes-asic-class,5513,0,2023-08-21 16:24:25+00:00,[],None
588,https://github.com/Preetham2808/Verilog.git,2023-08-17 22:46:07+00:00,Verilog Practice Files,0,Preetham2808/Verilog,679909710,Verilog,Verilog,37,0,2023-08-17 23:00:42+00:00,[],None
589,https://github.com/xuantungbrian/Digital-systems.git,2023-08-17 16:07:09+00:00,,0,xuantungbrian/Digital-systems,679787883,Verilog,Digital-systems,4375,0,2023-08-17 16:15:29+00:00,[],None
590,https://github.com/alokiitb/Asynchronus_FIFO.git,2023-08-17 17:59:04+00:00,,0,alokiitb/Asynchronus_FIFO,679828201,Verilog,Asynchronus_FIFO,1393,0,2023-08-17 18:08:29+00:00,[],None
591,https://github.com/RahulV-24/32-bit_Pipeline_MIPS_Processor.git,2023-08-16 20:55:19+00:00,,0,RahulV-24/32-bit_Pipeline_MIPS_Processor,679435937,Verilog,32-bit_Pipeline_MIPS_Processor,14,0,2023-08-16 21:09:19+00:00,[],None
592,https://github.com/Muhammadussain/100Days_of_RTL.git,2023-08-19 15:26:29+00:00,,0,Muhammadussain/100Days_of_RTL,680542000,Verilog,100Days_of_RTL,1,0,2023-08-20 14:57:01+00:00,[],None
593,https://github.com/YagizKesepara/delta.git,2023-08-27 21:39:13+00:00,,0,YagizKesepara/delta,683841609,Verilog,delta,579,0,2023-11-08 23:46:39+00:00,[],None
594,https://github.com/tusharshenoy/8-BIT-Ripple-Counter.git,2023-08-27 12:08:57+00:00,,0,tusharshenoy/8-BIT-Ripple-Counter,683694348,Verilog,8-BIT-Ripple-Counter,8,0,2023-08-27 14:34:43+00:00,[],None
595,https://github.com/Mohammed-Mairajuddin-Musharraf/GCD_algorithmn.git,2023-08-16 11:11:33+00:00,,0,Mohammed-Mairajuddin-Musharraf/GCD_algorithmn,679221677,Verilog,GCD_algorithmn,2,0,2023-08-16 11:12:12+00:00,[],None
596,https://github.com/donlon/verilator-testcases.git,2023-08-16 12:20:23+00:00,,0,donlon/verilator-testcases,679247176,Verilog,verilator-testcases,165,0,2023-08-16 12:27:05+00:00,[],None
597,https://github.com/saipraveenankireddy/asynch_fifo.git,2023-08-16 18:17:12+00:00,Objective of this project is to transfer the data between two different clock domains ,0,saipraveenankireddy/asynch_fifo,679389853,Verilog,asynch_fifo,451,0,2023-08-16 19:09:42+00:00,[],None
598,https://github.com/smsarmava/Asynchronous_FIFO.git,2023-08-17 17:06:53+00:00,,0,smsarmava/Asynchronous_FIFO,679809292,Verilog,Asynchronous_FIFO,801,0,2023-08-17 18:27:01+00:00,[],None
599,https://github.com/purveshthummar/FIFO-first_in_first_out.git,2023-08-19 04:22:58+00:00,in this we make single clock FIFO,0,purveshthummar/FIFO-first_in_first_out,680383000,Verilog,FIFO-first_in_first_out,1,0,2023-08-19 04:24:02+00:00,[],None
600,https://github.com/Mohammed-Mairajuddin-Musharraf/4x16_Decoder.git,2023-08-18 18:15:47+00:00,,0,Mohammed-Mairajuddin-Musharraf/4x16_Decoder,680254176,Verilog,4x16_Decoder,78,0,2023-08-18 18:18:19+00:00,[],None
601,https://github.com/rajendra-17/Linear-Feedback-Shift-Register.git,2023-08-18 11:47:09+00:00,"‚Ä¢ Proximity Wireless Communication: Here I discussed about an upcoming technology about PWC, which is very useful for short distance wireless communication. In this paper, i have discussed about the construction, application and guidelines of two different types of PWC technology.",0,rajendra-17/Linear-Feedback-Shift-Register,680121147,Verilog,Linear-Feedback-Shift-Register,5,0,2023-08-18 11:48:44+00:00,[],None
602,https://github.com/Abrahamhossainrahat/DSD_Lab.git,2023-08-17 15:02:03+00:00,,0,Abrahamhossainrahat/DSD_Lab,679763008,Verilog,DSD_Lab,5,0,2023-08-18 15:29:43+00:00,[],None
603,https://github.com/mattvenn/tt04-rgb-mixer.git,2023-08-21 16:13:32+00:00,,0,mattvenn/tt04-rgb-mixer,681261731,Verilog,tt04-rgb-mixer,43,0,2023-08-21 16:14:45+00:00,[],https://api.github.com/licenses/apache-2.0
604,https://github.com/sumit11899/32bit-Floating-point-ALU.git,2023-08-22 11:28:21+00:00,"A 32-bit floating point arithmetic unit (FPU) capable of performing addition, subtraction, multiplication and division on two 32-bit floating point numbers.",0,sumit11899/32bit-Floating-point-ALU,681607248,Verilog,32bit-Floating-point-ALU,1915,0,2023-08-23 12:00:26+00:00,[],https://api.github.com/licenses/agpl-3.0
605,https://github.com/YunJoongChul/Verilog-LeNet5-08.22.git,2023-08-22 07:29:23+00:00,,0,YunJoongChul/Verilog-LeNet5-08.22,681518733,Verilog,Verilog-LeNet5-08.22,138,0,2023-08-22 07:30:41+00:00,[],None
606,https://github.com/surendrayerragorla/Asynchronous_FIFO.git,2023-08-22 11:48:22+00:00,,0,surendrayerragorla/Asynchronous_FIFO,681614919,Verilog,Asynchronous_FIFO,18,0,2023-08-22 11:51:07+00:00,[],https://api.github.com/licenses/mit
607,https://github.com/Sumit94790/DataStreamMultiplexer.git,2023-08-25 10:37:56+00:00,,0,Sumit94790/DataStreamMultiplexer,682990636,Verilog,DataStreamMultiplexer,6,0,2023-08-25 10:44:46+00:00,[],None
608,https://github.com/xyhy/EECS207001_Logic-Design-Laboratory.git,2023-08-23 10:29:47+00:00,,0,xyhy/EECS207001_Logic-Design-Laboratory,682050280,Verilog,EECS207001_Logic-Design-Laboratory,91265,0,2023-08-23 10:40:50+00:00,[],None
609,https://github.com/vaishnavks98/Designed-an-Automated-Washing-Machine-Control-System-in-Verilog-HDL.git,2023-08-25 16:18:57+00:00,"Developed a automated washing machine control system in Verilog HDL, cycle sequencing and user interface design",0,vaishnavks98/Designed-an-Automated-Washing-Machine-Control-System-in-Verilog-HDL,683111874,Verilog,Designed-an-Automated-Washing-Machine-Control-System-in-Verilog-HDL,6,0,2023-08-25 16:19:29+00:00,[],None
610,https://github.com/VarshaIITG/Hexadeciaml-Scanner.git,2023-08-25 17:15:33+00:00,,0,VarshaIITG/Hexadeciaml-Scanner,683131964,Verilog,Hexadeciaml-Scanner,88,0,2023-08-25 17:18:19+00:00,[],None
611,https://github.com/sandeep-sai-dannapaneni/CRC-Encoder.git,2023-08-25 16:50:41+00:00,,0,sandeep-sai-dannapaneni/CRC-Encoder,683123192,Verilog,CRC-Encoder,2,0,2023-08-25 16:51:11+00:00,[],None
612,https://github.com/AnubhavSinghPawar/1X3_Router.git,2023-08-25 16:52:55+00:00,,0,AnubhavSinghPawar/1X3_Router,683124116,Verilog,1X3_Router,15,0,2023-08-25 17:04:41+00:00,[],None
613,https://github.com/Rabindrakharga/MIPS-32_Verilog_Project.git,2023-08-24 22:47:02+00:00,,0,Rabindrakharga/MIPS-32_Verilog_Project,682776505,Verilog,MIPS-32_Verilog_Project,450,0,2023-08-25 14:35:49+00:00,[],None
614,https://github.com/aryanmohansaxena/Automatic-Washing-Machine.git,2023-08-25 18:16:21+00:00,,0,aryanmohansaxena/Automatic-Washing-Machine,683152586,Verilog,Automatic-Washing-Machine,547,0,2023-08-25 18:20:12+00:00,[],None
615,https://github.com/petersn/micro1.git,2023-08-27 00:03:41+00:00,Simple microprocessor with off-die SPI SRAM,0,petersn/micro1,683552855,Verilog,micro1,90,0,2023-08-27 03:46:09+00:00,[],None
616,https://github.com/JiteshNayak2004/PD_ASIC.git,2023-08-17 16:28:48+00:00,this is a repo that contains the notes and lab assignments for physical design for ASIC course,0,JiteshNayak2004/PD_ASIC,679795566,Verilog,PD_ASIC,6252,0,2024-01-05 18:42:59+00:00,[],None
617,https://github.com/Liu-Bingxu/ysyx-for-LiuBingxu.git,2023-08-23 13:14:23+00:00,,0,Liu-Bingxu/ysyx-for-LiuBingxu,682110292,Verilog,ysyx-for-LiuBingxu,13,0,2024-04-10 18:48:12+00:00,[],https://api.github.com/licenses/gpl-3.0
618,https://github.com/Albertokeroro/Input_Arbiter_TFG.git,2023-08-17 13:26:04+00:00,,0,Albertokeroro/Input_Arbiter_TFG,679723399,Verilog,Input_Arbiter_TFG,537,0,2024-04-12 14:56:41+00:00,[],None
619,https://github.com/catpupu/ALU.git,2023-08-28 08:58:17+00:00,,0,catpupu/ALU,684008438,Verilog,ALU,137,0,2023-08-28 09:59:59+00:00,[],None
620,https://github.com/joyjacobcharles/joy.git,2023-08-27 18:48:02+00:00,,0,joyjacobcharles/joy,683804869,Verilog,joy,3,0,2023-08-27 18:56:06+00:00,[],None
621,https://github.com/isomoye/analog_test.git,2023-08-19 04:52:46+00:00,,0,isomoye/analog_test,680388242,Verilog,analog_test,96,0,2023-08-19 04:52:51+00:00,[],https://api.github.com/licenses/apache-2.0
622,https://github.com/SantaCRC/maquina-de-estado.git,2023-08-19 23:56:15+00:00,,0,SantaCRC/maquina-de-estado,680649733,Verilog,maquina-de-estado,24,0,2023-08-19 23:56:25+00:00,[],https://api.github.com/licenses/apache-2.0
623,https://github.com/Srini-web/pes_asic_class.git,2023-08-13 04:05:25+00:00,,0,Srini-web/pes_asic_class,677911991,Verilog,pes_asic_class,1182,0,2023-09-04 02:15:44+00:00,[],None
624,https://github.com/light389/uart-protocol.git,2023-08-13 12:31:08+00:00,,0,light389/uart-protocol,678020896,Verilog,uart-protocol,10,0,2023-08-13 12:35:28+00:00,[],None
625,https://github.com/MohamedDawod29/n-bit-counter.git,2023-08-26 21:32:31+00:00,,0,MohamedDawod29/n-bit-counter,683529690,Verilog,n-bit-counter,0,0,2023-08-26 21:32:54+00:00,[],None
626,https://github.com/nyinyioo/HDLBitsSolns.git,2023-08-26 21:43:36+00:00,,0,nyinyioo/HDLBitsSolns,683531666,Verilog,HDLBitsSolns,6,0,2023-08-26 21:51:01+00:00,[],None
627,https://github.com/vaidik-08/Efficiency_Improved_Dadda_Multiplier.git,2023-08-27 13:34:13+00:00,,0,vaidik-08/Efficiency_Improved_Dadda_Multiplier,683716564,Verilog,Efficiency_Improved_Dadda_Multiplier,8,0,2023-08-27 13:39:07+00:00,[],None
628,https://github.com/sumit200697/FIFO-DESIGN.git,2023-08-26 12:06:56+00:00,,0,sumit200697/FIFO-DESIGN,683386805,Verilog,FIFO-DESIGN,6,0,2023-08-26 13:18:48+00:00,[],None
629,https://github.com/KommalaNagasai/100-days-of-RTL-README.md.git,2023-08-26 09:41:49+00:00,,0,KommalaNagasai/100-days-of-RTL-README.md,683352401,Verilog,100-days-of-RTL-README.md,454,0,2023-08-28 09:32:07+00:00,[],None
630,https://github.com/Momoi2309/LDH-Project.git,2023-08-29 14:19:53+00:00,Proiect Limbaje Descriere Hardware,0,Momoi2309/LDH-Project,684625437,Verilog,LDH-Project,13,0,2023-08-29 14:22:34+00:00,[],None
631,https://github.com/Kavinnnnnn/chck.git,2023-08-29 12:02:34+00:00,,0,Kavinnnnnn/chck,684567016,Verilog,chck,258,0,2023-08-29 12:05:11+00:00,[],None
632,https://github.com/gunavant-s/Majority_Detector-Day-026.git,2023-08-14 06:27:44+00:00,"A majority detector is a circuit or algorithm that determines whether the majority of its inputs are 1 or 0. It is a simple logic gate that can be used to implement more complex functions, such as full adders and comparators.",0,gunavant-s/Majority_Detector-Day-026,678263034,Verilog,Majority_Detector-Day-026,62,0,2023-08-14 06:28:51+00:00,[],None
633,https://github.com/segivens/alarm-clock.git,2023-08-14 19:28:38+00:00,,0,segivens/alarm-clock,678536019,Verilog,alarm-clock,312,0,2023-08-14 19:33:21+00:00,[],None
634,https://github.com/tinywaferShark/tiny_user_project.git,2023-08-15 15:20:07+00:00,,0,tinywaferShark/tiny_user_project,678871114,Verilog,tiny_user_project,3168,0,2023-08-15 15:20:27+00:00,[],https://api.github.com/licenses/apache-2.0
635,https://github.com/Anshul380/Design-Comparison-of-8x8-bit-Dadda-Wallace-Multiplier.git,2023-08-12 19:54:18+00:00,,0,Anshul380/Design-Comparison-of-8x8-bit-Dadda-Wallace-Multiplier,677836488,Verilog,Design-Comparison-of-8x8-bit-Dadda-Wallace-Multiplier,806,0,2023-08-16 18:25:24+00:00,[],None
636,https://github.com/Brijeshpate/Single-Port-RAM.git,2023-08-13 09:23:30+00:00,,0,Brijeshpate/Single-Port-RAM,677976653,Verilog,Single-Port-RAM,2,0,2023-08-13 09:57:31+00:00,[],None
637,https://github.com/Rabindrakharga/Designing_backend_unit_of_mixed_signal_IC.git,2023-08-24 22:49:21+00:00,,0,Rabindrakharga/Designing_backend_unit_of_mixed_signal_IC,682777100,Verilog,Designing_backend_unit_of_mixed_signal_IC,718,0,2023-08-25 14:34:10+00:00,[],None
638,https://github.com/Kushal-Varma/VLSI_projects.git,2023-08-23 20:53:54+00:00,,0,Kushal-Varma/VLSI_projects,682283297,Verilog,VLSI_projects,2009,0,2023-08-23 21:00:47+00:00,[],None
639,https://github.com/shubham-swadi/Digital-Lottery-System.git,2023-08-24 12:17:54+00:00,,0,shubham-swadi/Digital-Lottery-System,682551139,Verilog,Digital-Lottery-System,6,0,2023-08-24 12:22:05+00:00,[],None
640,https://github.com/akshayeagle/FSM-multiplication.git,2023-08-18 04:44:26+00:00,,0,akshayeagle/FSM-multiplication,679986787,Verilog,FSM-multiplication,6,0,2023-08-24 15:14:21+00:00,[],None
641,https://github.com/pratyushpare/256_Bit_AES_Encryption_System.git,2023-08-17 08:18:15+00:00,,0,pratyushpare/256_Bit_AES_Encryption_System,679611130,Verilog,256_Bit_AES_Encryption_System,85,0,2023-08-17 08:21:18+00:00,[],None
642,https://github.com/ujwaluttarwar/Design-of-Asynchronous-FIFO.git,2023-08-18 07:25:24+00:00,,0,ujwaluttarwar/Design-of-Asynchronous-FIFO,680034635,Verilog,Design-of-Asynchronous-FIFO,181,0,2023-08-18 07:26:04+00:00,[],None
643,https://github.com/zl-guo/hw_core.git,2023-08-18 12:24:27+00:00,verilog,0,zl-guo/hw_core,680133439,Verilog,hw_core,2,0,2023-08-18 12:42:04+00:00,[],None
644,https://github.com/tanmay0550/SAT_Attack.git,2023-08-18 05:40:38+00:00,mplementation of SAT-attack to break Logic Encryption techniques,0,tanmay0550/SAT_Attack,680000311,Verilog,SAT_Attack,5475,0,2023-08-18 05:53:41+00:00,[],None
645,https://github.com/AnshumatDinesh/Verilog-Projects.git,2023-08-23 22:37:17+00:00,,0,AnshumatDinesh/Verilog-Projects,682309099,Verilog,Verilog-Projects,2,0,2023-08-23 22:37:31+00:00,[],None
646,https://github.com/RahulTripathy/MIPS-Pipelined-Processor.git,2023-08-21 18:22:35+00:00,,0,RahulTripathy/MIPS-Pipelined-Processor,681308869,Verilog,MIPS-Pipelined-Processor,14,0,2023-08-21 18:26:39+00:00,[],None
647,https://github.com/alankuo04/sdram.git,2023-08-22 10:37:55+00:00,,0,alankuo04/sdram,681589340,Verilog,sdram,260,0,2023-08-22 10:39:27+00:00,[],None
648,https://github.com/ketzx/Building-a-Processor-with-Verilog-HDL-from-Scratch.git,2023-08-22 11:27:13+00:00,,0,ketzx/Building-a-Processor-with-Verilog-HDL-from-Scratch,681606823,Verilog,Building-a-Processor-with-Verilog-HDL-from-Scratch,95,0,2023-08-22 20:29:20+00:00,[],None
649,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-31.git,2023-08-25 17:23:52+00:00,"PIPO,PISO REGISTERS",0,rajitha0119/100-DAYS-OF-RTL-DAY-31,683134818,Verilog,100-DAYS-OF-RTL-DAY-31,469,0,2023-08-25 17:26:39+00:00,[],None
650,https://github.com/ArunSaiJaligama/Tic-Tac-Toe.git,2023-08-25 16:50:45+00:00,This repository include the files related to the project,0,ArunSaiJaligama/Tic-Tac-Toe,683123225,Verilog,Tic-Tac-Toe,4,0,2023-08-25 16:53:48+00:00,[],None
651,https://github.com/cncherisher/zynq.git,2023-08-23 02:53:18+00:00,"Zynq UltraScale+ MPSoC learning, base on Alinx AXU2CGB",0,cncherisher/zynq,681907702,Verilog,zynq,69324,0,2023-08-23 13:33:07+00:00,[],https://api.github.com/licenses/gpl-3.0
652,https://github.com/nailasuely/IOInterfacesProblem1.git,2023-08-21 12:50:06+00:00,,1,nailasuely/IOInterfacesProblem1,681179257,Verilog,IOInterfacesProblem1,14124,0,2023-09-23 08:25:31+00:00,[],https://api.github.com/licenses/mit
653,https://github.com/gavaskark/new.git,2023-08-22 13:13:05+00:00,,0,gavaskark/new,681648832,Verilog,new,11913,0,2023-08-22 13:14:12+00:00,[],https://api.github.com/licenses/apache-2.0
654,https://github.com/Inventor-X/MASAR-multiplier.git,2023-08-22 05:37:38+00:00,,0,Inventor-X/MASAR-multiplier,681479754,Verilog,MASAR-multiplier,172,0,2023-08-22 05:44:15+00:00,[],None
655,https://github.com/LuizGustavo8/nRISC.git,2023-08-28 23:17:08+00:00,Simula√ß√£o do funcionamento de um Processador MIPS para Trabalho Pr√°tico do Laborat√≥rio de Arquitetura de Computadores I,0,LuizGustavo8/nRISC,684328556,Verilog,nRISC,207,0,2024-01-04 21:24:00+00:00,[],None
656,https://github.com/jx-zheng/hdlbits.git,2023-08-16 11:07:57+00:00,My solutions to HDLbits problems,0,jx-zheng/hdlbits,679220511,Verilog,hdlbits,4,0,2024-01-09 07:39:23+00:00,[],https://api.github.com/licenses/mit
657,https://github.com/velicharlagokulkumar/quartus.git,2023-08-18 06:39:36+00:00,,0,velicharlagokulkumar/quartus,680018834,Verilog,quartus,508771,0,2024-01-12 06:53:49+00:00,[],None
658,https://github.com/omarmuhamed123/encryption_decryption.git,2023-08-24 15:58:04+00:00,,0,omarmuhamed123/encryption_decryption,682643354,Verilog,encryption_decryption,405,0,2024-01-31 23:19:43+00:00,[],None
659,https://github.com/Saangetheya/ComputerSystemDesign.git,2023-08-25 10:49:11+00:00,CS401 Project,0,Saangetheya/ComputerSystemDesign,682994380,Verilog,ComputerSystemDesign,851,0,2023-11-27 15:20:57+00:00,[],None
660,https://github.com/vtneil/cp-eng-hwsynlab2023.git,2023-08-21 15:57:08+00:00,2110363 Hardware Synthesis Lab I Files,0,vtneil/cp-eng-hwsynlab2023,681255536,Verilog,cp-eng-hwsynlab2023,129181,0,2023-12-07 09:39:13+00:00,[],None
661,https://github.com/WebKingdom/CPRE587.git,2023-08-23 17:31:01+00:00,Projects and labs for CPR E 587 Fall 2023,0,WebKingdom/CPRE587,682213789,Verilog,CPRE587,839192,0,2023-12-11 05:32:06+00:00,[],https://api.github.com/licenses/apache-2.0
662,https://github.com/AbdelrahmanKhaled826/pwm.git,2023-08-15 10:22:30+00:00,create a pulse witdth modultion analog to digital converter,0,AbdelrahmanKhaled826/pwm,678765554,Verilog,pwm,94,0,2023-12-18 15:35:40+00:00,[],None
663,https://github.com/TonyHo722/perl_study.git,2023-08-28 03:10:18+00:00,,0,TonyHo722/perl_study,683904897,Verilog,perl_study,72,0,2024-02-16 07:20:54+00:00,[],None
664,https://github.com/Sohansik02/Core-Projects.git,2023-08-29 12:02:53+00:00,Core Projects Having Arduino and Verilog,0,Sohansik02/Core-Projects,684567122,Verilog,Core-Projects,228,0,2023-08-29 12:21:16+00:00,[],None
665,https://github.com/EngAhmed21/SPI_Master-Slave.git,2023-08-23 00:51:33+00:00,Serial Peripheral Interface,0,EngAhmed21/SPI_Master-Slave,681879129,Verilog,SPI_Master-Slave,29,0,2023-08-24 13:39:49+00:00,[],None
666,https://github.com/Beyant1711/16Bit_RISC_Processor.git,2023-08-23 14:44:08+00:00,,0,Beyant1711/16Bit_RISC_Processor,682148759,Verilog,16Bit_RISC_Processor,7,0,2023-08-23 14:47:25+00:00,[],None
667,https://github.com/akash0758/Verilog-Project.git,2023-08-24 10:56:09+00:00,,0,akash0758/Verilog-Project,682520938,Verilog,Verilog-Project,448,0,2023-08-24 10:57:44+00:00,[],None
668,https://github.com/callmemahmud/lab3.git,2023-08-16 09:12:07+00:00,,0,callmemahmud/lab3,679178507,Verilog,lab3,8,0,2023-08-16 10:15:31+00:00,[],None
669,https://github.com/mahdimoeini8102/DigitalSystems_RTL.git,2023-08-15 15:40:41+00:00,This is the second project of the Digital System course at the university and it provides an introduction using SystemVerilog HDL(Hardware Description Language).,0,mahdimoeini8102/DigitalSystems_RTL,678878853,Verilog,DigitalSystems_RTL,1180,0,2023-08-15 15:42:40+00:00,[],None
670,https://github.com/kakhileshrao/Asynchronous-FIFO.git,2023-08-15 23:22:06+00:00,,0,kakhileshrao/Asynchronous-FIFO,679016750,Verilog,Asynchronous-FIFO,4,0,2023-08-15 23:23:30+00:00,[],None
671,https://github.com/aryavivek/TCL-Workshop-by-VSD.git,2023-08-22 11:03:07+00:00,TCL WORKSHOP: FROM INTRODUCTION TO ADVANCED SCRIPTING by VSD,0,aryavivek/TCL-Workshop-by-VSD,681598091,Verilog,TCL-Workshop-by-VSD,2953,0,2023-08-26 06:11:15+00:00,[],None
672,https://github.com/Revenant01/ALU_Structral_verilog.git,2023-08-18 07:55:40+00:00,Simple structral design for a ALU in verilog,0,Revenant01/ALU_Structral_verilog,680043993,Verilog,ALU_Structral_verilog,5,0,2023-08-18 07:55:46+00:00,[],https://api.github.com/licenses/mit
673,https://github.com/som0305/uart_hex_calculator.git,2023-08-14 06:30:51+00:00,,0,som0305/uart_hex_calculator,678263978,Verilog,uart_hex_calculator,3,0,2023-08-21 06:02:48+00:00,[],None
674,https://github.com/souvik4374/dadda-wallace_multiplier_fpga.git,2023-08-17 20:39:17+00:00,,0,souvik4374/dadda-wallace_multiplier_fpga,679880980,Verilog,dadda-wallace_multiplier_fpga,697,0,2023-08-17 20:43:11+00:00,[],None
675,https://github.com/HajraKamran/RTL_codes.git,2023-08-21 09:04:19+00:00,,0,HajraKamran/RTL_codes,681099083,Verilog,RTL_codes,5,0,2023-08-21 09:07:31+00:00,[],None
676,https://github.com/furiousprd15/8-bit-microprocessor-main.git,2023-08-28 11:11:36+00:00,,0,furiousprd15/8-bit-microprocessor-main,684055770,Verilog,8-bit-microprocessor-main,11,0,2023-08-28 11:13:06+00:00,[],None
677,https://github.com/SR-Rishab/Digital-system-design.git,2023-08-27 07:21:30+00:00,,0,SR-Rishab/Digital-system-design,683627881,Verilog,Digital-system-design,10,0,2023-08-27 07:25:26+00:00,[],https://api.github.com/licenses/mit
678,https://github.com/radic2682/Wallace_Tree_Multiplier.git,2023-08-27 15:34:21+00:00,,0,radic2682/Wallace_Tree_Multiplier,683750961,Verilog,Wallace_Tree_Multiplier,2,0,2023-08-27 15:35:02+00:00,[],None
679,https://github.com/MukeshIITB/processor.git,2023-08-18 18:21:59+00:00,,0,MukeshIITB/processor,680256306,Verilog,processor,23,0,2023-08-18 18:23:54+00:00,[],None
680,https://github.com/qinjiuyin/fastinput_verilog.git,2023-08-19 06:50:16+00:00,Âõ†‰∏∫ÊµãËØïËÑâÂÜ≤Êó∂ÈúÄË¶ÅÊü•ÁúãËÑâÂÜ≤Êï∞ÊòØÂê¶ÂáÜÁ°Æ ‰ΩÜÊòØÊ≤°Êúâ‰∏Ä‰∏™Ë∂ÅÊâãÁöÑËÆ∞ÂΩïÂ∑•ÂÖ∑ÊâÄ‰ª•‰ΩøÁî®fpgaÂÅö‰∏Ä‰∏™Â∞èÁöÑÊµãËØï,0,qinjiuyin/fastinput_verilog,680413393,Verilog,fastinput_verilog,6,0,2023-08-20 10:00:38+00:00,[],None
681,https://github.com/Ajay-Jarapla/syn_FIFO.git,2023-08-20 13:46:13+00:00,,0,Ajay-Jarapla/syn_FIFO,680813736,Verilog,syn_FIFO,25,0,2023-08-23 16:45:18+00:00,[],None
682,https://github.com/yikoulian2001/Nvme-rootport.git,2023-08-19 15:39:47+00:00,,0,yikoulian2001/Nvme-rootport,680545558,Verilog,Nvme-rootport,6,0,2023-08-19 15:45:10+00:00,[],None
683,https://github.com/ege-turan/reaction_timer.git,2023-08-21 16:03:46+00:00,,0,ege-turan/reaction_timer,681258111,Verilog,reaction_timer,72,0,2023-08-21 16:04:05+00:00,[],None
684,https://github.com/Ananvai/CNN_FPGA.git,2023-08-25 09:53:41+00:00,,0,Ananvai/CNN_FPGA,682976005,Verilog,CNN_FPGA,2,0,2023-08-25 09:54:27+00:00,[],None
685,https://github.com/MilesLucas14/DSD_Assignment.git,2023-08-24 17:16:33+00:00,,0,MilesLucas14/DSD_Assignment,682672765,Verilog,DSD_Assignment,6716,0,2023-09-15 09:50:16+00:00,[],None
686,https://github.com/puravbhatt/BPSK-Demodulator.git,2023-08-24 22:08:52+00:00,Project for the course - ASIC CMOS Design,0,puravbhatt/BPSK-Demodulator,682767071,Verilog,BPSK-Demodulator,60,0,2023-08-24 22:11:36+00:00,['verilog'],None
687,https://github.com/aaryanshar/FPGA-VisPro.git,2023-08-25 13:04:16+00:00,,3,aaryanshar/FPGA-VisPro,683040362,Verilog,FPGA-VisPro,5024,0,2023-09-06 10:45:42+00:00,[],None
688,https://github.com/Kamleshk22/GCD-calculator.git,2023-08-25 16:12:39+00:00,,0,Kamleshk22/GCD-calculator,683109745,Verilog,GCD-calculator,193,0,2023-08-25 16:15:47+00:00,[],None
689,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-29-.git,2023-08-25 16:16:44+00:00,SISO,0,rajitha0119/100-DAYS-OF-RTL-DAY-29-,683111103,Verilog,100-DAYS-OF-RTL-DAY-29-,222,0,2023-08-25 16:20:23+00:00,[],None
690,https://github.com/agrawalrahul5260/RISC-V-Single-Cycle-Verilog-HDL.git,2023-08-24 21:51:17+00:00,,0,agrawalrahul5260/RISC-V-Single-Cycle-Verilog-HDL,682762939,Verilog,RISC-V-Single-Cycle-Verilog-HDL,7,0,2023-08-24 21:58:18+00:00,[],None
691,https://github.com/sagarb0919/Verilog-project_MIPS32_Processor.git,2023-08-24 22:00:44+00:00,,0,sagarb0919/Verilog-project_MIPS32_Processor,682765186,Verilog,Verilog-project_MIPS32_Processor,450,0,2023-08-25 15:34:17+00:00,[],None
692,https://github.com/OjasPatkar/DSD-Assignment-21EL023.git,2023-08-24 18:45:42+00:00,,0,OjasPatkar/DSD-Assignment-21EL023,682706896,Verilog,DSD-Assignment-21EL023,14502,0,2023-09-14 19:11:25+00:00,[],None
693,https://github.com/vaishnavks98/AUTOMATED-WASHING-MACHINE-CONTROL-SYSTEM-IN-VERILOG-HDL-.git,2023-08-25 15:36:01+00:00,,0,vaishnavks98/AUTOMATED-WASHING-MACHINE-CONTROL-SYSTEM-IN-VERILOG-HDL-,683097164,Verilog,AUTOMATED-WASHING-MACHINE-CONTROL-SYSTEM-IN-VERILOG-HDL-,6,0,2023-08-25 15:36:55+00:00,[],None
694,https://github.com/onkarsm22/HDLBITs_soln.git,2023-08-25 17:44:01+00:00,,0,onkarsm22/HDLBITs_soln,683141520,Verilog,HDLBITs_soln,36,0,2023-08-25 18:11:28+00:00,[],None
695,https://github.com/Tushars-97/Automatic-Washing-Machine.git,2023-08-25 18:11:18+00:00,,0,Tushars-97/Automatic-Washing-Machine,683150693,Verilog,Automatic-Washing-Machine,547,0,2023-08-25 18:14:15+00:00,[],None
696,https://github.com/GHub23Deep/Full-Adder-Implementation-in-Verilog.git,2023-08-25 17:00:39+00:00,Implementation of variants of Full Adder using Verilog,0,GHub23Deep/Full-Adder-Implementation-in-Verilog,683126928,Verilog,Full-Adder-Implementation-in-Verilog,25,0,2023-08-25 17:18:26+00:00,[],None
697,https://github.com/mansik22/8BIT_PROCESSOR_MANSI.git,2023-08-25 17:26:01+00:00,,0,mansik22/8BIT_PROCESSOR_MANSI,683135522,Verilog,8BIT_PROCESSOR_MANSI,7,0,2023-08-25 17:27:41+00:00,[],None
698,https://github.com/yosri227/UART_TX.git,2023-08-26 18:19:50+00:00,TX_UART,0,yosri227/UART_TX,683487468,Verilog,UART_TX,724,0,2023-08-26 18:21:03+00:00,[],None
699,https://github.com/mohos455/Client-Queue-With-Verilog.git,2023-08-26 20:48:34+00:00,,0,mohos455/Client-Queue-With-Verilog,683521519,Verilog,Client-Queue-With-Verilog,7,0,2023-09-11 10:47:01+00:00,[],None
700,https://github.com/JoJo1811/DSD.git,2023-08-24 18:09:30+00:00,,0,JoJo1811/DSD,682692337,Verilog,DSD,7038,0,2023-09-14 19:51:26+00:00,[],None
701,https://github.com/Digital-EDA/Digital-Test.git,2023-08-24 03:35:58+00:00,test space for Digital IDE extension,0,Digital-EDA/Digital-Test,682378449,Verilog,Digital-Test,8655,0,2023-10-06 07:31:00+00:00,[],https://api.github.com/licenses/apache-2.0
702,https://github.com/amadeusjustinn/team-pipt.git,2023-08-29 04:48:47+00:00,,0,amadeusjustinn/team-pipt,684416453,Verilog,team-pipt,2135,0,2023-08-30 01:36:43+00:00,[],https://api.github.com/licenses/mit
703,https://github.com/aep227/Verilog_coursework.git,2023-08-28 15:40:59+00:00,,0,aep227/Verilog_coursework,684168883,Verilog,Verilog_coursework,4214,0,2023-08-28 15:43:06+00:00,[],None
704,https://github.com/ESP32DE/R128S2_tmp.git,2023-08-29 00:14:47+00:00,Allwinner R128-S2,0,ESP32DE/R128S2_tmp,684342473,Verilog,R128S2_tmp,91836,0,2023-08-30 05:19:54+00:00,[],None
705,https://github.com/Danny0204/SOC_Final_practice.git,2023-08-29 06:32:26+00:00,,0,Danny0204/SOC_Final_practice,684448634,Verilog,SOC_Final_practice,38866,0,2023-09-01 12:00:58+00:00,[],None
706,https://github.com/sec-int/tmvp_vliw_simd.git,2023-08-29 06:51:01+00:00,,0,sec-int/tmvp_vliw_simd,684454946,Verilog,tmvp_vliw_simd,44,0,2023-11-01 17:02:42+00:00,[],None
707,https://github.com/pabloromogz/Tank_Mayhem.git,2023-08-29 14:56:48+00:00,Repository for 2nd Year Information Processing Coursework,0,pabloromogz/Tank_Mayhem,684641836,Verilog,Tank_Mayhem,16875,0,2023-08-29 14:59:49+00:00,[],None
708,https://github.com/OmarMahmoudElsherif/APB_Protocol.git,2023-08-28 20:16:54+00:00,,0,OmarMahmoudElsherif/APB_Protocol,684279157,Verilog,APB_Protocol,661,0,2023-08-28 20:17:33+00:00,[],None
709,https://github.com/nourhussin/learn_verilog.git,2023-08-29 19:24:59+00:00,,0,nourhussin/learn_verilog,684750846,Verilog,learn_verilog,8,0,2023-08-29 20:47:05+00:00,[],None
710,https://github.com/2lambda123/SiliconRE.git,2023-08-12 15:13:48+00:00,,0,2lambda123/SiliconRE,677766652,Verilog,SiliconRE,135170,0,2023-08-12 15:16:03+00:00,[],https://api.github.com/licenses/gpl-2.0
711,https://github.com/478133329/descriptor_distance.git,2023-08-25 07:33:49+00:00,,0,478133329/descriptor_distance,682928686,Verilog,descriptor_distance,18,0,2024-01-19 08:39:18+00:00,[],None
712,https://github.com/Tech-mohankrishna/pes_asic_class.git,2023-08-12 03:12:17+00:00,,0,Tech-mohankrishna/pes_asic_class,677604374,Verilog,pes_asic_class,609,0,2023-08-24 02:28:42+00:00,[],None
713,https://github.com/gunavant-s/ROM-Day-025.git,2023-08-13 02:37:39+00:00,ROM is a type of non-volatile memory used in computers and other electronic devices. It can only read the data.,0,gunavant-s/ROM-Day-025,677897688,Verilog,ROM-Day-025,78,0,2023-08-13 02:38:18+00:00,[],None
714,https://github.com/Anirudh-Ravi123/pes_asic_class.git,2023-08-13 12:13:27+00:00,,0,Anirudh-Ravi123/pes_asic_class,678016268,Verilog,pes_asic_class,2519,0,2023-08-26 19:15:53+00:00,[],None
715,https://github.com/Kunnu1998/async_fifo.git,2023-08-13 16:47:37+00:00,,0,Kunnu1998/async_fifo,678092321,Verilog,async_fifo,823,0,2023-08-13 16:58:20+00:00,[],None
716,https://github.com/m7md5303/Gray_Counter.git,2023-08-17 00:53:26+00:00,A 2-bit gray counter implemented with verilog in addition with a testbench,0,m7md5303/Gray_Counter,679487668,Verilog,Gray_Counter,1,0,2023-08-17 00:57:26+00:00,[],None
717,https://github.com/baliyanshantanu/Dadda_and_Wallace.git,2023-08-15 10:01:14+00:00,,0,baliyanshantanu/Dadda_and_Wallace,678758828,Verilog,Dadda_and_Wallace,636,0,2023-08-15 10:07:55+00:00,[],None
718,https://github.com/manav4code/MIPS-Single-Cycle-Datapath.git,2023-08-15 09:06:23+00:00,MIPS Single Cycle Datapath,0,manav4code/MIPS-Single-Cycle-Datapath,678741243,Verilog,MIPS-Single-Cycle-Datapath,9,0,2023-08-15 09:07:32+00:00,[],None
719,https://github.com/PranshuMandal/Digital_Alarm_Clock_using_Verilog.git,2023-08-15 17:43:03+00:00,,0,PranshuMandal/Digital_Alarm_Clock_using_Verilog,678923887,Verilog,Digital_Alarm_Clock_using_Verilog,9,0,2023-08-15 17:45:53+00:00,[],None
720,https://github.com/gavaskark/open-eFPGA.git,2023-08-16 08:56:58+00:00,,0,gavaskark/open-eFPGA,679173150,Verilog,open-eFPGA,11913,0,2023-08-16 08:58:04+00:00,[],https://api.github.com/licenses/apache-2.0
721,https://github.com/chanhuirobot/rh_plus_2_axis_manipulator_hardware.git,2023-08-16 01:06:47+00:00,,0,chanhuirobot/rh_plus_2_axis_manipulator_hardware,679038892,Verilog,rh_plus_2_axis_manipulator_hardware,28539,0,2023-08-16 01:11:47+00:00,[],None
722,https://github.com/aakashreddyrv/DSD-lab-project.git,2023-08-15 16:13:45+00:00,,0,aakashreddyrv/DSD-lab-project,678891724,Verilog,DSD-lab-project,3,0,2023-08-15 16:13:55+00:00,[],None
723,https://github.com/silimate/designs.git,2023-08-16 02:46:26+00:00,Test designs,0,silimate/designs,679062337,Verilog,designs,4416,0,2023-08-16 02:47:51+00:00,[],None
724,https://github.com/Grusjaponensis/BUAA-CO-2023.git,2023-08-28 16:38:45+00:00,For BUAA  Computer Organization and Architecture Class.,0,Grusjaponensis/BUAA-CO-2023,684193589,Verilog,BUAA-CO-2023,6446,0,2024-03-23 10:01:21+00:00,[],None
725,https://github.com/yosri227/ALU_16_bits.git,2023-08-26 17:35:14+00:00,ALU with width of 16 bits ,0,yosri227/ALU_16_bits,683475771,Verilog,ALU_16_bits,1233,0,2023-08-26 17:40:28+00:00,[],None
726,https://github.com/sumit200697/RAM_ROM.git,2023-08-26 13:41:19+00:00,,0,sumit200697/RAM_ROM,683410539,Verilog,RAM_ROM,22,0,2023-08-26 14:00:37+00:00,[],None
727,https://github.com/dip-0011/verilog_simple_codes.git,2023-08-26 11:47:12+00:00,,0,dip-0011/verilog_simple_codes,683382147,Verilog,verilog_simple_codes,22,0,2023-08-26 16:26:00+00:00,[],None
728,https://github.com/samrudhBMSCE/synthosphere.git,2023-08-25 09:20:21+00:00,,0,samrudhBMSCE/synthosphere,682964318,Verilog,synthosphere,1610,0,2023-08-25 09:42:37+00:00,[],None
729,https://github.com/JheelMak/RAM.git,2023-08-25 13:42:04+00:00,,0,JheelMak/RAM,683054874,Verilog,RAM,602,0,2023-10-19 04:52:34+00:00,[],None
730,https://github.com/nvchuyen/DCT-64points.git,2023-08-25 09:06:37+00:00,,0,nvchuyen/DCT-64points,682959670,Verilog,DCT-64points,16174,0,2023-08-25 09:15:55+00:00,[],None
731,https://github.com/krishnaps22/Automated-Washing-Machine-Control-System-Design-in-Verilog.git,2023-08-24 06:41:22+00:00,,0,krishnaps22/Automated-Washing-Machine-Control-System-Design-in-Verilog,682429870,Verilog,Automated-Washing-Machine-Control-System-Design-in-Verilog,5,0,2023-08-24 06:42:22+00:00,[],None
732,https://github.com/NiharGowdaS/Music-Synthesizer---Karplus-Strong-Algorithm.git,2023-08-24 08:03:59+00:00,,0,NiharGowdaS/Music-Synthesizer---Karplus-Strong-Algorithm,682458743,Verilog,Music-Synthesizer---Karplus-Strong-Algorithm,7,0,2023-08-24 08:14:01+00:00,[],None
733,https://github.com/ege-turan/ask_transmit_v1.git,2023-08-12 02:31:57+00:00,,0,ege-turan/ask_transmit_v1,677597235,Verilog,ask_transmit_v1,21,0,2023-08-12 02:34:20+00:00,[],None
734,https://github.com/Vakon84/divtiesus.git,2023-08-12 09:31:06+00:00,,0,Vakon84/divtiesus,677683018,Verilog,divtiesus,1783,0,2023-08-12 09:34:09+00:00,[],https://api.github.com/licenses/gpl-3.0
735,https://github.com/aadeesh06/Greatest_Common_Divisor.git,2023-08-12 10:13:44+00:00,A program to calculate the Greatest Common Divisor(also called HCF) of two 16 bit numbers utilizing the datapath and controller design.,0,aadeesh06/Greatest_Common_Divisor,677693151,Verilog,Greatest_Common_Divisor,579,0,2023-08-12 10:14:03+00:00,[],None
736,https://github.com/Vishwa533/UART.git,2023-08-13 10:51:06+00:00,Design and implement a UART which is widely used in serial communication that enables data transmission  between devices. This project involves developing the logic circuitry using Verilog and synthesizing it to a target  FPGA platform for hardware implementation. ‚Ä¢ Language : Verilog ‚Äì HDL,0,Vishwa533/UART,677996175,Verilog,UART,9,0,2023-08-13 11:43:44+00:00,[],None
737,https://github.com/Roy-Ayalon/m-ff.git,2023-08-14 16:01:47+00:00,,0,Roy-Ayalon/m-ff,678463909,Verilog,m-ff,2,0,2023-08-14 16:02:41+00:00,[],None
738,https://github.com/Nibs75/MoreWrk.git,2023-08-24 20:41:24+00:00,Some more coding work,0,Nibs75/MoreWrk,682744008,Verilog,MoreWrk,157,0,2023-08-24 21:21:40+00:00,[],None
739,https://github.com/usc-chips/ee599-tut3-verilog.git,2023-08-24 18:41:54+00:00,,0,usc-chips/ee599-tut3-verilog,682705392,Verilog,ee599-tut3-verilog,171,0,2023-08-24 18:42:55+00:00,[],
740,https://github.com/nxxlxsh/PWM-Generator-Using-Verilog.git,2023-08-24 16:13:02+00:00,,0,nxxlxsh/PWM-Generator-Using-Verilog,682649045,Verilog,PWM-Generator-Using-Verilog,2,0,2023-08-24 16:18:59+00:00,[],None
741,https://github.com/ArshTheGreat/FIFO-Memory.git,2023-08-24 19:43:07+00:00,,0,ArshTheGreat/FIFO-Memory,682726367,Verilog,FIFO-Memory,81,0,2023-08-24 19:48:12+00:00,[],None
742,https://github.com/nikhilg2121/CSE-Bubble.git,2023-08-22 10:24:34+00:00,,0,nikhilg2121/CSE-Bubble,681584633,Verilog,CSE-Bubble,302,0,2023-08-22 13:21:47+00:00,[],None
743,https://github.com/TonyHo722/xvlog_systemverilog.git,2023-08-23 03:37:31+00:00,,0,TonyHo722/xvlog_systemverilog,681918081,Verilog,xvlog_systemverilog,2,0,2023-08-23 03:42:59+00:00,[],None
744,https://github.com/harshil0802/FPGA-TECH-CHALLENGE.git,2023-08-23 22:43:16+00:00,,0,harshil0802/FPGA-TECH-CHALLENGE,682310419,Verilog,FPGA-TECH-CHALLENGE,178,0,2023-08-23 22:52:19+00:00,[],None
745,https://github.com/KDBoy9/ADVD_Project.git,2023-08-27 08:10:26+00:00,EEE_F313 2023-24 First Semester Project Repository,0,KDBoy9/ADVD_Project,683638592,Verilog,ADVD_Project,14495,0,2023-09-02 06:05:28+00:00,[],None
746,https://github.com/sikeclown/My_RTL.git,2023-08-27 10:40:27+00:00,,0,sikeclown/My_RTL,683672987,Verilog,My_RTL,1,0,2023-08-27 10:41:16+00:00,[],None
747,https://github.com/radic2682/Multi_Function_mini_Robot.git,2023-08-27 15:04:52+00:00,,0,radic2682/Multi_Function_mini_Robot,683742497,Verilog,Multi_Function_mini_Robot,198,0,2023-08-27 15:23:31+00:00,[],None
748,https://github.com/jagdishthakur904/samsung-pd-training.git,2023-08-17 06:45:22+00:00,,0,jagdishthakur904/samsung-pd-training,679578392,Verilog,samsung-pd-training,42968,0,2023-09-04 09:19:19+00:00,[],None
749,https://github.com/cp024s/5-Stage-Pipelined-Architecture.git,2023-08-24 16:00:29+00:00,32 bit 5 stage pipelined RISC ,0,cp024s/5-Stage-Pipelined-Architecture,682644269,Verilog,5-Stage-Pipelined-Architecture,141,0,2023-11-30 07:28:14+00:00,[],https://api.github.com/licenses/gpl-2.0
750,https://github.com/SantiagoSolanoP/Informes_de_electronica_digital.git,2023-08-22 17:22:45+00:00,Se encuentran almacenados los preinformes e informes del laboratorio de electronica digital (grupo 1),0,SantiagoSolanoP/Informes_de_electronica_digital,681752129,Verilog,Informes_de_electronica_digital,7465,0,2023-11-26 19:50:52+00:00,[],None
751,https://github.com/madhumadhu1318/PES_ASIC_CLASS.git,2023-08-19 15:11:52+00:00,This Repository Guides you to complete ASIC flow from scratch,0,madhumadhu1318/PES_ASIC_CLASS,680537931,Verilog,PES_ASIC_CLASS,126,0,2023-08-23 16:31:31+00:00,[],https://api.github.com/licenses/mit
752,https://github.com/yeokm1/tt4-pwm-audio.git,2023-08-20 02:35:07+00:00,YKM Covox PWM Verilog submission for Tiny Tapeout 04,0,yeokm1/tt4-pwm-audio,680671332,Verilog,tt4-pwm-audio,1592,0,2023-08-20 02:36:56+00:00,[],https://api.github.com/licenses/apache-2.0
753,https://github.com/amitpadey/Booth_Multiplier_Verilog.git,2023-08-20 05:05:57+00:00,,0,amitpadey/Booth_Multiplier_Verilog,680695115,Verilog,Booth_Multiplier_Verilog,243,0,2023-08-20 18:34:11+00:00,[],None
754,https://github.com/SourabhiDunung/VLSI_VerilogHDL.git,2023-08-19 17:20:35+00:00,A set of Verilog HDL code that will help you get clear your concepts with basic Verilog HDL programming the EDA tool that we will be using here will be Xilinx.,0,SourabhiDunung/VLSI_VerilogHDL,680572507,Verilog,VLSI_VerilogHDL,2,0,2023-08-19 17:22:20+00:00,[],None
755,https://github.com/yikoulian2001/ahci_sata_controller.git,2023-08-19 15:37:20+00:00,,0,yikoulian2001/ahci_sata_controller,680544910,Verilog,ahci_sata_controller,8,0,2023-08-19 15:43:04+00:00,[],None
756,https://github.com/DulhacNinja/amd-practice.git,2023-08-19 19:49:23+00:00,"A little binary calculator designed in Verilog, made over the course of 3 weeks as practice at AMD",0,DulhacNinja/amd-practice,680609381,Verilog,amd-practice,1470,0,2023-08-19 19:56:59+00:00,[],None
757,https://github.com/Spirithead/MatrixDisplay.git,2023-08-19 19:47:36+00:00,,0,Spirithead/MatrixDisplay,680609048,Verilog,MatrixDisplay,1,0,2023-08-19 19:48:39+00:00,[],None
758,https://github.com/mohamedyakoub/AES.git,2023-08-19 21:47:47+00:00,Verilog implementation of the symmetrical cipher AES-128,0,mohamedyakoub/AES,680631163,Verilog,AES,2,0,2023-08-19 21:51:22+00:00,[],None
759,https://github.com/mariamsendiony/AES-Encryption.git,2023-08-19 22:16:29+00:00,,0,mariamsendiony/AES-Encryption,680635794,Verilog,AES-Encryption,8,0,2023-08-19 22:36:37+00:00,[],None
760,https://github.com/Dhruvithakar0913/LFSR.git,2023-08-20 12:19:15+00:00,,0,Dhruvithakar0913/LFSR,680790988,Verilog,LFSR,1,0,2023-08-20 12:21:11+00:00,[],None
761,https://github.com/chetan1107/Dual-Clock-Asynchronous-FIFO.git,2023-08-18 07:03:27+00:00,"Designed Asynchronous FIFO in Verilog, synthesised & verified the design in Xilinx Vivado. ‚ó¶ Synchronization of FIFO pointers is accomplished using Gray Code to avoid multi-bit signal transitions. ‚ó¶ Implemented 2 Flip-Flop Synchronizer to avoid meta-stability issues in CDC.",0,chetan1107/Dual-Clock-Asynchronous-FIFO,680027445,Verilog,Dual-Clock-Asynchronous-FIFO,7,0,2023-08-18 07:07:54+00:00,[],None
762,https://github.com/FuryDark/QuaternionMul.git,2023-08-18 12:54:06+00:00,Verilog Code of a New 16 bit Quaternion Multiplier for CNN,0,FuryDark/QuaternionMul,680143732,Verilog,QuaternionMul,7,0,2023-08-18 13:20:14+00:00,[],None
763,https://github.com/punnavamshi/implementation-of-UART-using-veriloghdl.git,2023-08-17 06:14:36+00:00,,0,punnavamshi/implementation-of-UART-using-veriloghdl,679567374,Verilog,implementation-of-UART-using-veriloghdl,4,0,2023-08-17 06:19:40+00:00,[],None
764,https://github.com/Foolock/OpenTimer_modified_tbb.git,2023-08-17 17:10:02+00:00,,0,Foolock/OpenTimer_modified_tbb,679810344,Verilog,OpenTimer_modified_tbb,260783,0,2023-08-17 17:12:27+00:00,[],
765,https://github.com/NivedK-S/RAM-Modeling-Using-Verilog.git,2023-08-18 19:26:26+00:00,,0,NivedK-S/RAM-Modeling-Using-Verilog,680276800,Verilog,RAM-Modeling-Using-Verilog,3,0,2023-08-18 19:27:11+00:00,[],None
766,https://github.com/sanjugouda/Vending-machine.git,2023-08-15 12:43:23+00:00,,0,sanjugouda/Vending-machine,678811743,Verilog,Vending-machine,4,0,2023-08-15 12:47:10+00:00,[],https://api.github.com/licenses/mit
767,https://github.com/Mohammed-Mairajuddin-Musharraf/Synchronous-and-Asynchronous-FIFO-LIFO.git,2023-08-15 13:48:13+00:00,,0,Mohammed-Mairajuddin-Musharraf/Synchronous-and-Asynchronous-FIFO-LIFO,678835303,Verilog,Synchronous-and-Asynchronous-FIFO-LIFO,3,0,2023-08-15 14:20:46+00:00,[],None
768,https://github.com/STOCKFISh07/Verilog_Image_Processing.git,2023-08-15 12:32:29+00:00,,0,STOCKFISh07/Verilog_Image_Processing,678808103,Verilog,Verilog_Image_Processing,2648,0,2023-08-15 12:33:32+00:00,[],None
769,https://github.com/Randomguywithamoustache/Dadda_multiplier.git,2023-08-16 21:26:20+00:00,,0,Randomguywithamoustache/Dadda_multiplier,679443734,Verilog,Dadda_multiplier,4,0,2023-08-16 21:27:14+00:00,[],None
770,https://github.com/amymainyc/fpga-cpu.git,2023-08-17 07:48:28+00:00,"A CPU coded in Verilog for the FPGA Board with IRAM modules, adder, arithmetic logic unit (ALU), decoder, register file, and DRAM. Includes an IRAM module for a heart-rate monitor.",0,amymainyc/fpga-cpu,679601252,Verilog,fpga-cpu,32,0,2023-08-17 08:04:02+00:00,[],None
771,https://github.com/Saurava69/RSA-Implementation-Using-Verilog.git,2023-08-21 17:35:09+00:00, Implemented RSA Algorithm Using Verilog for Secure Data Encryption and Decryption.,0,Saurava69/RSA-Implementation-Using-Verilog,681291543,Verilog,RSA-Implementation-Using-Verilog,2064,0,2023-08-21 17:44:26+00:00,[],None
772,https://github.com/theHDLguy/SPI-Protocol.git,2023-08-20 15:03:38+00:00,Verilog Implementation of SPI Protocol using one Master and Slave,0,theHDLguy/SPI-Protocol,680835270,Verilog,SPI-Protocol,7,0,2023-08-20 15:05:57+00:00,[],None
773,https://github.com/Jagadeesh908/8_bit_multiplier_verilog.git,2023-08-20 19:27:29+00:00,,0,Jagadeesh908/8_bit_multiplier_verilog,680906002,Verilog,8_bit_multiplier_verilog,46,0,2023-08-20 19:30:41+00:00,[],None
774,https://github.com/Malak-Mokhtar/SPI-Slave-with-Single-Port-RAM.git,2023-08-21 15:06:52+00:00,,0,Malak-Mokhtar/SPI-Slave-with-Single-Port-RAM,681235250,Verilog,SPI-Slave-with-Single-Port-RAM,3014,0,2023-08-21 15:08:45+00:00,[],None
775,https://github.com/Abrahamhossainrahat/DSD_LAB1.git,2023-08-21 15:49:30+00:00,,0,Abrahamhossainrahat/DSD_LAB1,681252382,Verilog,DSD_LAB1,3,0,2023-08-21 15:54:13+00:00,[],None
776,https://github.com/larisajurj/Alarm-Clock.git,2023-08-21 13:21:21+00:00,Verilog Alarm Clock,0,larisajurj/Alarm-Clock,681191183,Verilog,Alarm-Clock,27010,0,2023-08-21 13:22:39+00:00,[],None
777,https://github.com/TonyHo722/xvlog_2022.2.git,2023-08-22 07:12:16+00:00,,0,TonyHo722/xvlog_2022.2,681512406,Verilog,xvlog_2022.2,8,0,2023-08-22 07:15:44+00:00,[],None
778,https://github.com/Hrocha1109/UFOP.git,2023-08-25 02:25:06+00:00,,0,Hrocha1109/UFOP,682844092,Verilog,UFOP,12,0,2023-08-25 02:27:07+00:00,[],None
779,https://github.com/Shivaprasadm02/uart-dv.git,2023-08-17 05:26:10+00:00,,0,Shivaprasadm02/uart-dv,679553996,Verilog,uart-dv,62,0,2024-03-12 12:27:00+00:00,[],None
780,https://github.com/Khan1832/Verilog.git,2023-08-18 02:04:30+00:00,,0,Khan1832/Verilog,679950641,Verilog,Verilog,207,0,2023-10-08 09:51:08+00:00,[],None
781,https://github.com/gautamarora04/Risc-V.git,2023-08-19 13:48:33+00:00,"This project uses Verilog in designing Single cycle RISC-V Microprocessor. Different logical units are designed separately like ALU, ALU-CONTROL, DATA MEMORY, INSTRUCTION MEMORY, PC COUNTER etc.",0,gautamarora04/Risc-V,680514464,Verilog,Risc-V,13,0,2023-08-19 13:51:34+00:00,[],None
782,https://github.com/Spirithead/JitterFilter.git,2023-08-19 19:34:16+00:00,,0,Spirithead/JitterFilter,680606244,Verilog,JitterFilter,1,0,2023-08-19 19:49:10+00:00,[],None
783,https://github.com/roman012285/riscv_pipe.git,2023-08-20 13:16:32+00:00,,0,roman012285/riscv_pipe,680805765,Verilog,riscv_pipe,6897,0,2023-08-20 13:19:09+00:00,[],None
784,https://github.com/yaminisiripuram97/8_bit_micro_controller.git,2023-08-21 04:04:53+00:00,,0,yaminisiripuram97/8_bit_micro_controller,681006045,Verilog,8_bit_micro_controller,3,0,2023-08-24 16:59:01+00:00,[],None
785,https://github.com/afinogeev/verilog-lib.git,2023-08-15 05:54:11+00:00,,0,afinogeev/verilog-lib,678684910,Verilog,verilog-lib,21,0,2023-08-15 05:54:28+00:00,[],None
786,https://github.com/khanasfar73/caravel_WSU.git,2023-08-14 06:57:04+00:00,Repo to send design to efabless ,0,khanasfar73/caravel_WSU,678271836,Verilog,caravel_WSU,11914,0,2023-08-14 06:58:08+00:00,[],https://api.github.com/licenses/apache-2.0
787,https://github.com/AryaMilli/Traffic-Light-Controller.git,2023-08-17 14:11:44+00:00,,0,AryaMilli/Traffic-Light-Controller,679742366,Verilog,Traffic-Light-Controller,4,0,2023-08-17 14:17:03+00:00,[],None
788,https://github.com/jwangtobeno1/VerilogDemo.git,2023-08-21 14:18:48+00:00,Some examples of design units,0,jwangtobeno1/VerilogDemo,681215384,Verilog,VerilogDemo,64,0,2023-08-21 14:39:41+00:00,[],None
789,https://github.com/kimpao207/computer-organization-RISC-V-CPU.git,2023-08-21 07:24:13+00:00,write a RISC-V CPU based on Verilog,0,kimpao207/computer-organization-RISC-V-CPU,681064204,Verilog,computer-organization-RISC-V-CPU,10,0,2023-08-21 07:29:54+00:00,[],None
790,https://github.com/akash0758/I2C-interface.git,2023-08-24 19:00:52+00:00,,0,akash0758/I2C-interface,682712625,Verilog,I2C-interface,2,0,2023-08-24 19:01:44+00:00,[],None
791,https://github.com/FatmaAli99/Debouncer.git,2023-08-23 18:39:52+00:00,,0,FatmaAli99/Debouncer,682240061,Verilog,Debouncer,1864,0,2023-08-23 22:09:20+00:00,[],None
792,https://github.com/Vaibhavmvyas/RISC-processor.git,2023-08-24 16:13:37+00:00,,0,Vaibhavmvyas/RISC-processor,682649282,Verilog,RISC-processor,77,0,2023-08-24 16:15:39+00:00,[],None
793,https://github.com/mcjtag/poly_arithmetic.git,2023-08-13 15:07:27+00:00,Polynomial arithmetic (Verilog),0,mcjtag/poly_arithmetic,678063031,Verilog,poly_arithmetic,7,0,2023-08-14 09:51:04+00:00,[],https://api.github.com/licenses/mit
794,https://github.com/SiddheshUttarwar/-Design-of-High-speed-8-bit-Vedic-Multiplier-using-Brent-Kung-Adder.git,2023-08-13 14:50:37+00:00,,0,SiddheshUttarwar/-Design-of-High-speed-8-bit-Vedic-Multiplier-using-Brent-Kung-Adder,678058347,Verilog,-Design-of-High-speed-8-bit-Vedic-Multiplier-using-Brent-Kung-Adder,7,0,2023-08-20 14:00:37+00:00,[],None
795,https://github.com/Ripakshi-Singh/Synchronous-and-asynchronous-fifo.git,2023-08-25 16:53:09+00:00,Synchronous and asynchronous fifo,0,Ripakshi-Singh/Synchronous-and-asynchronous-fifo,683124188,Verilog,Synchronous-and-asynchronous-fifo,3,0,2023-08-31 19:08:40+00:00,[],None
796,https://github.com/suleymanemre/riscv_core.git,2023-08-25 20:21:47+00:00,32_bit_riscv_plus_compressed_branch_prediction_datamem_cache,0,suleymanemre/riscv_core,683192137,Verilog,riscv_core,62,0,2023-08-25 20:51:48+00:00,[],None
797,https://github.com/jhengfuyan/2018cic.git,2023-08-25 02:29:56+00:00,,0,jhengfuyan/2018cic,682845269,Verilog,2018cic,817,0,2023-08-25 02:34:57+00:00,[],None
798,https://github.com/aadeesh06/MIPS32_Processor.git,2023-08-26 06:33:07+00:00,Implementation of MIPS32 processor in Verliog.,0,aadeesh06/MIPS32_Processor,683307683,Verilog,MIPS32_Processor,7172,0,2023-08-28 16:08:26+00:00,['mips32'],None
799,https://github.com/wisdomzhu/Verilog.git,2023-08-26 12:50:02+00:00,,0,wisdomzhu/Verilog,683397390,Verilog,Verilog,40,0,2023-08-26 16:02:49+00:00,[],None
800,https://github.com/swrjima/Implementation-of-asynchronous-fifo.git,2023-08-25 06:13:54+00:00,,0,swrjima/Implementation-of-asynchronous-fifo,682900101,Verilog,Implementation-of-asynchronous-fifo,3,0,2023-08-25 06:38:31+00:00,[],None
801,https://github.com/vamshi-vm/Design-of-a-5-Stage-Pipelined-MIPS-Processor-using-Verilog.git,2023-08-28 04:38:45+00:00,,0,vamshi-vm/Design-of-a-5-Stage-Pipelined-MIPS-Processor-using-Verilog,683925336,Verilog,Design-of-a-5-Stage-Pipelined-MIPS-Processor-using-Verilog,182,0,2023-08-31 15:45:04+00:00,[],None
802,https://github.com/novarcee/AES-128-Encryptor-Decryptor.git,2023-08-22 14:00:24+00:00,,0,novarcee/AES-128-Encryptor-Decryptor,681670497,Verilog,AES-128-Encryptor-Decryptor,39,0,2023-08-23 15:03:11+00:00,[],None
803,https://github.com/mohamedhazem511/Linear_Feedback_Shift_Register.git,2023-08-22 17:41:45+00:00,,0,mohamedhazem511/Linear_Feedback_Shift_Register,681758970,Verilog,Linear_Feedback_Shift_Register,48,0,2023-08-22 17:42:08+00:00,[],None
804,https://github.com/Malak-Mokhtar/Spartan6-DSP48A1.git,2023-08-21 15:22:52+00:00,,0,Malak-Mokhtar/Spartan6-DSP48A1,681242031,Verilog,Spartan6-DSP48A1,82,0,2023-08-21 15:23:41+00:00,[],None
805,https://github.com/QY7/power_vhdl.git,2023-08-23 09:31:23+00:00,VHDL models for digital control,1,QY7/power_vhdl,682028997,Verilog,power_vhdl,96854,0,2023-09-06 04:50:37+00:00,[],None
806,https://github.com/Graziele-Rodrigues/ULA_Verilog.git,2023-08-23 10:33:19+00:00,Projeto pr√°tico CSI509 - Implementa√ß√£o ULA e a sua Unidade de Controle usando Verilog,0,Graziele-Rodrigues/ULA_Verilog,682051538,Verilog,ULA_Verilog,495,0,2023-08-23 10:33:57+00:00,[],https://api.github.com/licenses/mit
807,https://github.com/sujan-hn/APB_master_synthoSphere.git,2023-08-25 14:55:58+00:00,,0,sujan-hn/APB_master_synthoSphere,683082572,Verilog,APB_master_synthoSphere,263,0,2023-10-18 04:53:03+00:00,[],None
808,https://github.com/ShivaniArya32/IIR-Filter-using-2-Folded-Architecture.git,2023-08-27 17:54:00+00:00,,0,ShivaniArya32/IIR-Filter-using-2-Folded-Architecture,683791470,Verilog,IIR-Filter-using-2-Folded-Architecture,94,0,2023-08-27 19:53:31+00:00,[],None
809,https://github.com/LEESEUNGHEON1/FPGA_STUDY.git,2023-08-23 08:17:41+00:00,FPGA_STUDY,0,LEESEUNGHEON1/FPGA_STUDY,682001812,Verilog,FPGA_STUDY,66,0,2023-08-23 08:54:34+00:00,[],None
810,https://github.com/onkarsm22/Asynchronous_FIFO.git,2023-08-29 07:01:09+00:00,,0,onkarsm22/Asynchronous_FIFO,684458543,Verilog,Asynchronous_FIFO,3,0,2023-08-29 07:02:49+00:00,[],None
811,https://github.com/shayan-taheri/CYENG225_MicrocontrollerEssentialsForCyberApplications.git,2023-08-29 18:02:12+00:00,,0,shayan-taheri/CYENG225_MicrocontrollerEssentialsForCyberApplications,684720000,Verilog,CYENG225_MicrocontrollerEssentialsForCyberApplications,10855,0,2023-08-29 18:04:14+00:00,[],None
812,https://github.com/eldanielh31/tallernios.git,2023-08-14 01:20:26+00:00,,0,eldanielh31/tallernios,678192204,Verilog,tallernios,13795,0,2023-08-14 01:20:52+00:00,[],None
813,https://github.com/salihturhan/delta.git,2023-08-16 13:44:14+00:00,,0,salihturhan/delta,679280825,Verilog,delta,1106,0,2023-09-17 13:58:05+00:00,[],None
814,https://github.com/ChandraLekha559/-Design-of-Asynchronous-FIFO.git,2023-08-16 13:21:38+00:00,,0,ChandraLekha559/-Design-of-Asynchronous-FIFO,679271604,Verilog,-Design-of-Asynchronous-FIFO,8,0,2023-08-16 13:23:06+00:00,[],None
815,https://github.com/vishu33/Asynchronous_FIFO.git,2023-08-13 20:05:04+00:00,This repositry conetains the Verilog Design of Asynchrounous Dual Clock FIFO.,0,vishu33/Asynchronous_FIFO,678138539,Verilog,Asynchronous_FIFO,454,0,2023-08-16 17:57:11+00:00,[],None
816,https://github.com/NouranAbdelaziz/Hazard3_SoC_on_FPGA.git,2023-08-13 08:23:12+00:00,,0,NouranAbdelaziz/Hazard3_SoC_on_FPGA,677963303,Verilog,Hazard3_SoC_on_FPGA,402,0,2023-08-13 08:26:33+00:00,[],None
817,https://github.com/darpanshukla/Digital-IC-Design-Development-Training.git,2023-08-13 18:18:46+00:00,,0,darpanshukla/Digital-IC-Design-Development-Training,678114786,Verilog,Digital-IC-Design-Development-Training,37048,0,2023-08-13 18:30:26+00:00,[],None
818,https://github.com/akshayanr/dorm_security_lock.git,2023-08-15 01:19:30+00:00,This is a dorm security lock I built on Verilog inspired by issues I found in my freshman dorm lock. ,0,akshayanr/dorm_security_lock,678619303,Verilog,dorm_security_lock,29,0,2023-08-16 17:58:57+00:00,[],None
819,https://github.com/STOCKFISh07/CS-F342-Computer-Architecture-main.git,2023-08-15 12:24:02+00:00,,0,STOCKFISh07/CS-F342-Computer-Architecture-main,678805202,Verilog,CS-F342-Computer-Architecture-main,10829,0,2023-08-15 12:24:44+00:00,[],None
820,https://github.com/Anjali-Poliyapram/Design-and-Implementation-of-Flight-Control-System-on-FPGA.git,2023-08-15 13:44:06+00:00,,0,Anjali-Poliyapram/Design-and-Implementation-of-Flight-Control-System-on-FPGA,678833720,Verilog,Design-and-Implementation-of-Flight-Control-System-on-FPGA,20,0,2023-08-15 13:55:08+00:00,[],None
821,https://github.com/pratyushpare/Single_Cycle_MIPS.git,2023-08-17 06:24:36+00:00,,0,pratyushpare/Single_Cycle_MIPS,679570850,Verilog,Single_Cycle_MIPS,7,0,2023-08-17 06:26:26+00:00,[],None
822,https://github.com/mynkv/Samsung-PD-.git,2023-08-17 06:45:46+00:00,,1,mynkv/Samsung-PD-,679578571,Verilog,Samsung-PD-,123141,0,2023-09-20 11:06:55+00:00,[],None
823,https://github.com/FPaddle007/LogicDesign.git,2023-08-12 23:05:58+00:00,,0,FPaddle007/LogicDesign,677868442,Verilog,LogicDesign,3315,0,2023-11-06 22:41:38+00:00,[],None
824,https://github.com/0marAmr/UART-Interface.git,2023-08-22 12:16:54+00:00,Design of Universal Asynchronous Receiver Transmitter Interface using verilog HDL,0,0marAmr/UART-Interface,681626148,Verilog,UART-Interface,1376,0,2023-11-30 16:25:48+00:00,"['communication-interface', 'digital-design', 'uart-interface', 'uart-rx', 'uart-tx', 'uart-verilog']",None
825,https://github.com/ZSteam77/RISCV-Pipeline.git,2023-08-19 18:54:48+00:00,,0,ZSteam77/RISCV-Pipeline,680596824,Verilog,RISCV-Pipeline,11,0,2023-12-07 00:28:09+00:00,[],None
826,https://github.com/himansh107/Basic-digital-circuits.git,2023-08-22 19:42:02+00:00,This repository consists of digital circuits desgined using verilog ,0,himansh107/Basic-digital-circuits,681804014,Verilog,Basic-digital-circuits,20,0,2023-08-22 19:49:23+00:00,[],None
827,https://github.com/Foolock/Opentimer_repcut.git,2023-08-17 17:20:50+00:00,,0,Foolock/Opentimer_repcut,679814203,Verilog,Opentimer_repcut,111912,0,2024-02-28 08:15:03+00:00,[],None
828,https://github.com/anthonydotmoe/68040pc.git,2023-08-22 02:08:39+00:00,A general purpose computer platform for retrocomputing enthusiasts,1,anthonydotmoe/68040pc,681429209,Verilog,68040pc,15222,0,2024-04-02 16:20:30+00:00,"['68040', '68k', 'computer-engineering', 'fpga', 'retrocomputing']",None
829,https://github.com/Saukkott/verilog-processor.git,2023-08-14 04:52:57+00:00,Building a simple CPU pipeline from the ground up while learning verilog. ,0,Saukkott/verilog-processor,678238949,Verilog,verilog-processor,1,0,2023-08-14 04:53:12+00:00,[],None
830,https://github.com/Diabyboua/ECE7530.git,2023-08-14 20:30:16+00:00,,0,Diabyboua/ECE7530,678553867,Verilog,ECE7530,11913,0,2023-08-15 04:07:55+00:00,[],https://api.github.com/licenses/apache-2.0
831,https://github.com/franzromanov/HDL_Walkthrough.git,2023-08-14 05:55:28+00:00,HDL(verilog) Learning,0,franzromanov/HDL_Walkthrough,678253957,Verilog,HDL_Walkthrough,28,0,2023-08-14 06:04:09+00:00,[],None
832,https://github.com/SiddheshUttarwar/High-Speed-Double-Precision-Floating-Point-Vedic-Multiplier.git,2023-08-13 14:17:58+00:00,,0,SiddheshUttarwar/High-Speed-Double-Precision-Floating-Point-Vedic-Multiplier,678049370,Verilog,High-Speed-Double-Precision-Floating-Point-Vedic-Multiplier,29,0,2023-08-13 14:31:15+00:00,[],None
833,https://github.com/Mohammed-Mairajuddin-Musharraf/5-stage-pipeline-MIPS32-processor.git,2023-08-15 13:40:22+00:00,,0,Mohammed-Mairajuddin-Musharraf/5-stage-pipeline-MIPS32-processor,678832356,Verilog,5-stage-pipeline-MIPS32-processor,3,0,2023-08-17 20:49:55+00:00,[],None
834,https://github.com/snekolen/ECEN350-Armv8.git,2023-08-15 18:25:30+00:00,,0,snekolen/ECEN350-Armv8,678938235,Verilog,ECEN350-Armv8,7,0,2023-08-15 18:27:02+00:00,[],None
835,https://github.com/emma-eva/llama2.v.git,2023-08-15 20:01:14+00:00,"vlang, llama based llama2.c to llama2.v port",0,emma-eva/llama2.v,678966827,Verilog,llama2.v,1,0,2023-08-15 20:03:55+00:00,[],https://api.github.com/licenses/mit
836,https://github.com/Advaith-RN/pes_asic_class.git,2023-08-17 08:09:20+00:00,,0,Advaith-RN/pes_asic_class,679608108,Verilog,pes_asic_class,1449,0,2023-08-29 16:47:28+00:00,[],None
837,https://github.com/nianyinwu/multiplier.git,2023-08-18 03:40:28+00:00,,0,nianyinwu/multiplier,679972489,Verilog,multiplier,231,0,2023-09-24 11:03:08+00:00,[],None
838,https://github.com/Divya2030/DDR.git,2023-08-16 08:43:57+00:00,,0,Divya2030/DDR,679168404,Verilog,DDR,11914,0,2023-08-16 08:45:04+00:00,[],https://api.github.com/licenses/apache-2.0
839,https://github.com/ujwaluttarwar/Design-of-12-hour-clock.git,2023-08-18 07:07:55+00:00,,0,ujwaluttarwar/Design-of-12-hour-clock,680029068,Verilog,Design-of-12-hour-clock,133,0,2023-08-18 07:13:52+00:00,[],None
840,https://github.com/JoaoAccorsi/Digital-Systems-Architecture.git,2023-08-20 21:47:44+00:00,,0,JoaoAccorsi/Digital-Systems-Architecture,680934176,Verilog,Digital-Systems-Architecture,18,0,2023-08-31 13:29:09+00:00,[],None
841,https://github.com/Innocent912/FPGA.git,2023-08-20 14:33:19+00:00,,0,Innocent912/FPGA,680826792,Verilog,FPGA,1,0,2023-08-20 14:34:46+00:00,[],None
842,https://github.com/gunavant-s/Vedic_Multiplier_4bit.git,2023-08-16 02:31:53+00:00,4 bit Vedic Multiplier is a type of digital circuit that performs multiplication of 4bit numbers using ancient Indian Vedic Mathematics techniques.,0,gunavant-s/Vedic_Multiplier_4bit,679058796,Verilog,Vedic_Multiplier_4bit,148,0,2023-10-04 00:29:44+00:00,[],None
843,https://github.com/dsingla54/pes_asic_class.git,2023-08-15 17:58:31+00:00,,0,dsingla54/pes_asic_class,678928989,Verilog,pes_asic_class,2818,0,2023-09-09 16:38:20+00:00,[],None
844,https://github.com/sk-preda/aFIFOdesign.git,2023-08-17 10:27:43+00:00,,0,sk-preda/aFIFOdesign,679658014,Verilog,aFIFOdesign,6,0,2023-08-17 10:55:11+00:00,[],None
845,https://github.com/Asma-Mohsin/MemoryGuard-ModuleWriteShield_AI-design-contest.git,2023-08-27 17:23:52+00:00,,0,Asma-Mohsin/MemoryGuard-ModuleWriteShield_AI-design-contest,683783624,Verilog,MemoryGuard-ModuleWriteShield_AI-design-contest,96273,0,2023-08-27 17:24:57+00:00,[],https://api.github.com/licenses/apache-2.0
846,https://github.com/multi-megaman/Arquitetura-projeto-2.git,2023-08-29 18:39:35+00:00,Implementa√ß√£o do MIPS monociclo utilizando Verilog,0,multi-megaman/Arquitetura-projeto-2,684734394,Verilog,Arquitetura-projeto-2,196157,0,2023-08-29 18:39:48+00:00,[],None
847,https://github.com/abhi09v/TCL-Scripting.git,2023-08-29 05:52:55+00:00,,0,abhi09v/TCL-Scripting,684436151,Verilog,TCL-Scripting,14725,0,2023-08-29 06:19:52+00:00,[],None
848,https://github.com/DongbeomSon/AIHA_CONV_ACC.git,2023-08-29 05:49:37+00:00,2023 AIHA lab // Graduation products,0,DongbeomSon/AIHA_CONV_ACC,684435142,Verilog,AIHA_CONV_ACC,815,0,2023-08-29 06:10:12+00:00,[],https://api.github.com/licenses/apache-2.0
849,https://github.com/nick-ng13/Ultimate-Security-System.git,2023-08-28 23:36:19+00:00,,0,nick-ng13/Ultimate-Security-System,684333132,Verilog,Ultimate-Security-System,3017,0,2023-08-28 23:41:18+00:00,[],None
850,https://github.com/jollysan/delta-stuff.git,2023-08-19 17:59:38+00:00,tasks for delta,0,jollysan/delta-stuff,680582425,Verilog,delta-stuff,4644,0,2023-08-19 18:47:22+00:00,[],None
851,https://github.com/ayushsoni2709/Verilog-projects-for-practice.git,2023-08-26 09:48:11+00:00,,0,ayushsoni2709/Verilog-projects-for-practice,683353949,Verilog,Verilog-projects-for-practice,3,0,2023-08-26 09:51:42+00:00,[],None
852,https://github.com/Tushars-97/HDLBits-solutions.git,2023-08-26 10:22:31+00:00,,0,Tushars-97/HDLBits-solutions,683362496,Verilog,HDLBits-solutions,20,0,2023-08-26 11:15:43+00:00,[],None
853,https://github.com/Sarthakkumar22/Fifo_buffer_synch.git,2023-08-19 07:57:29+00:00,"The implemented FIFO buffer module offers functionalities for data input, output, read, write, and status flag management. The module is designed to be synchronous. The FIFO buffer can store up to eight 32-bit data elements, and it employs registers and counters to manage data movement and FIFO status.",0,Sarthakkumar22/Fifo_buffer_synch,680429579,Verilog,Fifo_buffer_synch,145,0,2023-08-19 08:02:02+00:00,[],None
854,https://github.com/lance-zheng-sz/test_remote.git,2023-08-22 02:43:43+00:00,,0,lance-zheng-sz/test_remote,681437908,Verilog,test_remote,0,0,2023-08-22 02:50:03+00:00,[],None
855,https://github.com/MohamedDawod29/PWM.git,2023-08-26 21:43:22+00:00,,0,MohamedDawod29/PWM,683531621,Verilog,PWM,1,0,2023-08-30 13:15:01+00:00,[],None
856,https://github.com/rockymoo/synthosphere.git,2023-08-25 10:50:46+00:00,yosys  ,0,rockymoo/synthosphere,682994880,Verilog,synthosphere,72,0,2023-08-25 17:01:32+00:00,[],None
857,https://github.com/meetbhatt2113/Detect-0101-pattern.git,2023-08-22 10:35:18+00:00,,0,meetbhatt2113/Detect-0101-pattern,681588453,Verilog,Detect-0101-pattern,0,0,2023-08-22 10:38:41+00:00,[],None
858,https://github.com/shreyanshuAg/VLSI_project.git,2023-08-22 16:04:48+00:00,,0,shreyanshuAg/VLSI_project,681722936,Verilog,VLSI_project,2,0,2023-08-23 18:00:40+00:00,[],None
859,https://github.com/EngAhmed21/ALSU.git,2023-08-23 01:02:02+00:00,"ALSU is a logic unit that can perform logical, arithmetic, and shift operations on input ports.",0,EngAhmed21/ALSU,681881413,Verilog,ALSU,4,0,2023-08-24 14:11:19+00:00,[],None
860,https://github.com/hashej/100-DAYS-OF-RTL.git,2023-08-24 07:28:48+00:00,,0,hashej/100-DAYS-OF-RTL,682447077,Verilog,100-DAYS-OF-RTL,5,0,2023-08-24 08:26:35+00:00,[],None
861,https://github.com/Ananvai/FSM.git,2023-08-25 08:03:56+00:00,,0,Ananvai/FSM,682938405,Verilog,FSM,1,0,2023-08-25 08:04:53+00:00,[],None
862,https://github.com/karthikkbs05/SynthoSphere-.git,2023-08-24 20:37:33+00:00,Designing a Digital Circuit and performing pre and post synthesis simulation. ,0,karthikkbs05/SynthoSphere-,682743011,Verilog,SynthoSphere-,2314,0,2023-08-30 12:38:20+00:00,[],None
863,https://github.com/radio-chet/RISC-V-Processor-in-Verilog.git,2023-08-25 04:49:02+00:00,,0,radio-chet/RISC-V-Processor-in-Verilog,682877924,Verilog,RISC-V-Processor-in-Verilog,137,0,2023-08-25 04:59:24+00:00,[],None
864,https://github.com/hanerdemhan/verilog.git,2023-08-24 07:38:58+00:00,Verilog'da kullanƒ±lan genel kodlar,0,hanerdemhan/verilog,682450606,Verilog,verilog,20,0,2023-08-24 08:09:46+00:00,[],None
865,https://github.com/Ripakshi-Singh/Pipelined-RISC.git,2023-08-24 21:12:53+00:00,,0,Ripakshi-Singh/Pipelined-RISC,682752628,Verilog,Pipelined-RISC,7,0,2023-08-31 19:07:56+00:00,[],None
866,https://github.com/Sushovanb22/Washing-Machine.git,2023-08-24 21:16:09+00:00,,0,Sushovanb22/Washing-Machine,682753464,Verilog,Washing-Machine,7,0,2023-08-24 21:16:51+00:00,[],None
867,https://github.com/Beyant1711/Booth_Multiplier_Verilog.git,2023-08-22 13:05:13+00:00,,0,Beyant1711/Booth_Multiplier_Verilog,681645596,Verilog,Booth_Multiplier_Verilog,244,0,2023-08-22 13:08:12+00:00,[],None
868,https://github.com/EngAhmed21/Spartan6-DSP48A1.git,2023-08-24 14:07:12+00:00,Designing DSP48A1 of the Spartan-6 family,0,EngAhmed21/Spartan6-DSP48A1,682596860,Verilog,Spartan6-DSP48A1,6,0,2023-08-24 14:07:54+00:00,[],None
869,https://github.com/ramtej1/SHA3-Functions.git,2023-08-24 13:00:04+00:00,,0,ramtej1/SHA3-Functions,682567947,Verilog,SHA3-Functions,7,0,2023-08-24 13:02:28+00:00,[],None
870,https://github.com/Ravi4744/digital_system_design_assignment.git,2023-08-24 16:14:19+00:00,,0,Ravi4744/digital_system_design_assignment,682649548,Verilog,digital_system_design_assignment,5170,0,2023-09-16 16:18:08+00:00,[],None
871,https://github.com/kaushikbaidya09/Verilog_Code.git,2023-08-27 11:15:49+00:00,Hardware Modeling Using Verilog,0,kaushikbaidya09/Verilog_Code,683681419,Verilog,Verilog_Code,189,0,2023-08-27 12:31:26+00:00,"['verilog', 'verilog-code']",None
872,https://github.com/NikPrav/SystolicArray4x4.git,2023-08-27 05:12:59+00:00,A 4x4 Systolic Array capable of performing Fixed Point matrix multiplications from 4x1 to 4x16 matrices ,0,NikPrav/SystolicArray4x4,683599890,Verilog,SystolicArray4x4,10,0,2023-08-27 05:22:31+00:00,[],None
873,https://github.com/DeusGuedes/Tese.git,2023-08-25 20:48:01+00:00,,0,DeusGuedes/Tese,683198628,Verilog,Tese,9,0,2023-08-25 20:50:40+00:00,[],None
874,https://github.com/GHub23Deep/CRC-Code-Implementation-in-Verilog.git,2023-08-25 16:46:37+00:00,Implementation of CRC-16 & CRC-32 in Verilog,0,GHub23Deep/CRC-Code-Implementation-in-Verilog,683121700,Verilog,CRC-Code-Implementation-in-Verilog,17,0,2023-08-25 17:13:41+00:00,[],None
875,https://github.com/Gurusatwik/PWM-Generator.git,2023-08-27 17:27:58+00:00,This repository focuses on how to design a PWM Generator with variable Duty cycle,0,Gurusatwik/PWM-Generator,683784719,Verilog,PWM-Generator,69,0,2023-08-27 20:41:29+00:00,"['asic', 'digitalelectronics', 'fpga', 'pwm-generator', 'verilog-hdl']",https://api.github.com/licenses/mit
876,https://github.com/Vinayak-kVA/VLSI-Projects.git,2023-08-24 06:21:44+00:00,,0,Vinayak-kVA/VLSI-Projects,682422376,Verilog,VLSI-Projects,5160,0,2023-08-24 13:07:57+00:00,[],None
877,https://github.com/Lucasa98/Org-Computadoras-2023.git,2023-08-22 00:02:06+00:00,Organizacion de las Computadoras (2023),0,Lucasa98/Org-Computadoras-2023,681400300,Verilog,Org-Computadoras-2023,8735,0,2023-12-02 16:30:17+00:00,[],None
878,https://github.com/bert799/SOC_linux.git,2023-08-17 19:10:35+00:00,,0,bert799/SOC_linux,679854608,Verilog,SOC_linux,31503,0,2023-12-15 17:11:53+00:00,[],None
879,https://github.com/Flanagan-Lab-Neutron-Detector/nr1b-sqt56-bridge.git,2023-08-29 18:36:19+00:00,NR1B-SQT56 QSPI to Parallel Asynchronous NOR Bridge,0,Flanagan-Lab-Neutron-Detector/nr1b-sqt56-bridge,684733146,Verilog,nr1b-sqt56-bridge,185,0,2024-01-02 01:41:48+00:00,[],None
880,https://github.com/trong420/icc.git,2023-08-12 00:23:20+00:00,,0,trong420/icc,677576997,Verilog,icc,115800,0,2024-03-02 08:21:56+00:00,[],None
881,https://github.com/srikar555/Backscatter-Communication.git,2023-08-16 04:54:00+00:00,,0,srikar555/Backscatter-Communication,679095122,Verilog,Backscatter-Communication,41,0,2023-11-17 06:54:28+00:00,[],None
882,https://github.com/Wlfc912/ICLab.git,2023-08-13 22:05:39+00:00,,0,Wlfc912/ICLab,678160749,Verilog,ICLab,38,0,2023-08-13 23:44:59+00:00,[],None
883,https://github.com/redusuario/mips.git,2023-08-17 20:36:58+00:00,mips - arquitectura 2023,0,redusuario/mips,679880397,Verilog,mips,2134,0,2023-08-21 00:49:55+00:00,[],None
884,https://github.com/clsf/PBL-SD.git,2023-08-18 12:02:32+00:00,Reposit√≥rio do problema 1 do PBL de sistemas digitais,1,clsf/PBL-SD,680126294,Verilog,PBL-SD,82934,0,2023-09-10 01:53:29+00:00,[],None
885,https://github.com/gunavant-s/Clock_Buffer-Day-029.git,2023-08-17 01:55:18+00:00,Clock buffers are fairly straight-forward ICs for distributing multiple copies of a clock to multiple ICs with the same frequency requirements.,0,gunavant-s/Clock_Buffer-Day-029,679501342,Verilog,Clock_Buffer-Day-029,26,0,2023-08-17 01:55:40+00:00,[],None
886,https://github.com/borhanur-rahman/DSD_LAB_Verilog.git,2023-08-18 15:14:23+00:00,,0,borhanur-rahman/DSD_LAB_Verilog,680195063,Verilog,DSD_LAB_Verilog,3,0,2023-08-18 15:27:41+00:00,[],None
887,https://github.com/walker99999/test_board.git,2023-08-27 08:14:46+00:00,Êèê‰æõhdmi hsstÂÖâÂè£ ËæìÂÖ•,0,walker99999/test_board,683639580,Verilog,test_board,18524,0,2023-08-27 08:18:33+00:00,[],None
888,https://github.com/radic2682/FSM_Slot_Machine.git,2023-08-27 15:36:41+00:00,,0,radic2682/FSM_Slot_Machine,683751635,Verilog,FSM_Slot_Machine,4,0,2023-08-27 15:37:01+00:00,[],None
889,https://github.com/Ankur722/Processor.git,2023-08-27 15:59:31+00:00,Design and Implementation of Processor using Verilog.,0,Ankur722/Processor,683758003,Verilog,Processor,882,0,2023-08-27 16:01:22+00:00,[],None
890,https://github.com/Sishmasquash/verilog_basics.git,2023-08-24 06:56:37+00:00,Projects to practice FPGA design,0,Sishmasquash/verilog_basics,682436259,Verilog,verilog_basics,0,0,2023-08-24 06:59:01+00:00,[],None
891,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-27.git,2023-08-12 13:24:30+00:00,asynchronous counters,0,rajitha0119/100-DAYS-OF-RTL-DAY-27,677737940,Verilog,100-DAYS-OF-RTL-DAY-27,797,0,2023-08-12 13:31:16+00:00,[],None
892,https://github.com/manglamayank/High-Performance-Adders.git,2023-08-12 12:15:34+00:00,"Implemented CLA, Ripple-Carry, Brent Kung and Kogge Stone adder using Verilog on Xilinx Vivado. Also compared then on the grounds of Power and Time Delay.",0,manglamayank/High-Performance-Adders,677721128,Verilog,High-Performance-Adders,5,0,2023-10-08 06:17:43+00:00,[],None
893,https://github.com/Dhruvithakar0913/Single-Port-RAM.git,2023-08-13 09:25:26+00:00,,0,Dhruvithakar0913/Single-Port-RAM,677977112,Verilog,Single-Port-RAM,1,0,2023-08-13 10:10:54+00:00,[],None
894,https://github.com/aoowweenn/caravel_user_test.git,2023-08-21 01:03:36+00:00,,0,aoowweenn/caravel_user_test,680966732,Verilog,caravel_user_test,11912,0,2023-08-21 01:04:42+00:00,[],https://api.github.com/licenses/apache-2.0
895,https://github.com/oliviawu77/NIOSII_ConvolutionEngine.git,2023-08-22 09:22:19+00:00,Nios II CPU with Convolution Engine,0,oliviawu77/NIOSII_ConvolutionEngine,681560298,Verilog,NIOSII_ConvolutionEngine,59824,0,2023-08-22 09:25:14+00:00,[],None
896,https://github.com/svkocherla/systolic_array.git,2023-08-14 17:19:40+00:00,,0,svkocherla/systolic_array,678493637,Verilog,systolic_array,207,0,2023-08-14 17:57:06+00:00,[],None
897,https://github.com/pawan0011/2to1_demux.git,2023-08-16 10:55:45+00:00,,0,pawan0011/2to1_demux,679216484,Verilog,2to1_demux,2,0,2023-08-16 10:58:07+00:00,[],None
898,https://github.com/PranshuMandal/32bitMIPS_Pipelined_Processor.git,2023-08-17 16:55:28+00:00,,0,PranshuMandal/32bitMIPS_Pipelined_Processor,679805229,Verilog,32bitMIPS_Pipelined_Processor,4,0,2023-08-17 16:57:38+00:00,[],None
899,https://github.com/BoldWinds/SingleCycle-RV-CPU.git,2023-08-23 14:34:41+00:00,A single cycle risc-V cpu,1,BoldWinds/SingleCycle-RV-CPU,682144666,Verilog,SingleCycle-RV-CPU,20,0,2023-08-23 14:37:54+00:00,[],https://api.github.com/licenses/gpl-3.0
900,https://github.com/Amrendra5/verilog_mini_proj.git,2023-08-25 12:02:24+00:00,,0,Amrendra5/verilog_mini_proj,683018580,Verilog,verilog_mini_proj,432,0,2023-08-25 12:05:39+00:00,[],None
901,https://github.com/lujunk77/my_clock.git,2023-08-25 14:58:29+00:00,,0,lujunk77/my_clock,683083499,Verilog,my_clock,3514,0,2023-08-25 15:15:27+00:00,[],None
902,https://github.com/patwang16/UIUC_ECE385.git,2023-08-26 20:06:04+00:00,,0,patwang16/UIUC_ECE385,683513043,Verilog,UIUC_ECE385,76116,0,2023-08-26 20:14:18+00:00,[],None
903,https://github.com/ShubhamMachhi/Digital.system.design.git,2023-08-24 17:52:52+00:00,Assignments,0,ShubhamMachhi/Digital.system.design,682686381,Verilog,Digital.system.design,3547,0,2023-09-16 17:17:00+00:00,[],None
904,https://github.com/bommalimanoj110298/UART.git,2023-08-24 07:15:47+00:00,,0,bommalimanoj110298/UART,682442762,Verilog,UART,33,0,2023-08-24 07:16:21+00:00,[],None
905,https://github.com/Tushars-97/Implementing-Asynchronous-FIFO-Using-Verilog.git,2023-08-29 05:59:09+00:00,,0,Tushars-97/Implementing-Asynchronous-FIFO-Using-Verilog,684438154,Verilog,Implementing-Asynchronous-FIFO-Using-Verilog,3,0,2023-08-29 06:00:32+00:00,[],None
906,https://github.com/Chaitanya-Meshram/Sudoku-Solver.git,2023-08-28 05:12:55+00:00,,0,Chaitanya-Meshram/Sudoku-Solver,683934898,Verilog,Sudoku-Solver,3,0,2023-08-28 05:13:29+00:00,[],None
907,https://github.com/RohanS-14/RTL101.git,2023-08-28 07:23:19+00:00,"here is the RTL codes from basic combination to advance concepts such as FF, clock division , FIFO ,SISO , FSM, FSM overlapping.  ",0,RohanS-14/RTL101,683975277,Verilog,RTL101,11,0,2023-08-28 07:35:44+00:00,[],None
908,https://github.com/aryanmohansaxena/HDL-BITS.git,2023-08-25 18:23:08+00:00,,0,aryanmohansaxena/HDL-BITS,683155355,Verilog,HDL-BITS,37,0,2023-08-25 18:26:11+00:00,[],None
909,https://github.com/kutaybulun/ITCHprotocolParser.git,2023-08-25 14:00:13+00:00,,0,kutaybulun/ITCHprotocolParser,683061427,Verilog,ITCHprotocolParser,175,0,2023-09-11 19:04:20+00:00,[],None
910,https://github.com/Mohamed-Ayman27/UART.git,2023-08-28 15:38:52+00:00,,0,Mohamed-Ayman27/UART,684168000,Verilog,UART,701,0,2023-08-28 15:41:19+00:00,[],None
911,https://github.com/yhx88huge/project.git,2023-08-29 02:05:52+00:00,,0,yhx88huge/project,684370202,Verilog,project,2794,0,2023-08-29 02:46:07+00:00,[],None
912,https://github.com/Navya-tayi/pes_asic_class.git,2023-08-15 13:32:49+00:00,,0,Navya-tayi/pes_asic_class,678829480,Verilog,pes_asic_class,101,0,2023-09-04 07:53:46+00:00,[],None
913,https://github.com/baliyanshantanu/Asynchronus_FIFO.git,2023-08-15 09:54:18+00:00,,0,baliyanshantanu/Asynchronus_FIFO,678756524,Verilog,Asynchronus_FIFO,4,0,2023-08-15 10:00:28+00:00,[],None
914,https://github.com/mohamedhazem511/single-cycle_risc-v.git,2023-08-20 13:35:59+00:00,,0,mohamedhazem511/single-cycle_risc-v,680811014,Verilog,single-cycle_risc-v,77,0,2023-08-20 13:38:27+00:00,[],None
915,https://github.com/Spirithead/MIPS_CPU.git,2023-08-19 19:28:07+00:00,,0,Spirithead/MIPS_CPU,680604959,Verilog,MIPS_CPU,1,0,2023-08-19 19:28:32+00:00,[],None
916,https://github.com/DavidN110/Laboratorio-Electronica-Digital-I-Grupo2.git,2023-08-25 15:33:46+00:00,Repositorio del Grupo 2 del Laboratorio de Electr√≥nica Digital I para la recopilaci√≥n de informes y documentaci√≥n del Proyecto final de la materia,0,DavidN110/Laboratorio-Electronica-Digital-I-Grupo2,683096257,Verilog,Laboratorio-Electronica-Digital-I-Grupo2,49083,0,2023-11-28 07:26:50+00:00,[],None
917,https://github.com/Sharon-03/Verilog_Programs.git,2023-08-24 05:50:54+00:00,,0,Sharon-03/Verilog_Programs,682412185,Verilog,Verilog_Programs,11,0,2023-08-24 05:55:30+00:00,[],None
918,https://github.com/Y2Kmeltdown/NeuroRISC.git,2023-08-14 04:40:22+00:00,,0,Y2Kmeltdown/NeuroRISC,678235997,Verilog,NeuroRISC,2578,0,2023-08-14 04:40:32+00:00,[],None
919,https://github.com/vladimir-vasyuk/I2Cmaster.git,2023-08-21 16:29:16+00:00,Tiny I2C master,0,vladimir-vasyuk/I2Cmaster,681267506,Verilog,I2Cmaster,38,0,2024-02-26 11:00:00+00:00,[],None
920,https://github.com/AbdelrahmanKhaled826/clock_divider.git,2023-08-14 20:08:07+00:00,A CLOCK DIVIDER or FREQUENCY DIVIDER   is an electronic circuit that takes an input signal with afrequency and generate the output frequancy,0,AbdelrahmanKhaled826/clock_divider,678547591,Verilog,clock_divider,101,0,2023-12-18 15:35:39+00:00,[],None
921,https://github.com/saif-1219/Piano_Tiles.git,2023-08-14 20:07:20+00:00,Piano Tiles game using verilog and implemented on Basys-3 FPGA board,0,saif-1219/Piano_Tiles,678547382,Verilog,Piano_Tiles,9830,0,2023-12-24 07:05:46+00:00,[],None
922,https://github.com/JheelMak/Counters.git,2023-08-24 14:04:20+00:00,,0,JheelMak/Counters,682595570,Verilog,Counters,8,0,2023-08-24 14:11:06+00:00,[],None
923,https://github.com/NiharGowdaS/Image-processing-using-Verilog.git,2023-08-24 06:53:40+00:00,,0,NiharGowdaS/Image-processing-using-Verilog,682435002,Verilog,Image-processing-using-Verilog,23,0,2023-08-24 07:00:47+00:00,[],None
924,https://github.com/srikar555/SPI.git,2023-08-16 07:11:16+00:00,,0,srikar555/SPI,679135850,Verilog,SPI,111,0,2023-08-28 07:47:18+00:00,[],None
925,https://github.com/SudeepJoshi22/CORDIC_Unit.git,2023-08-24 12:49:13+00:00,CORDIC Unit Design and Synthesis Using Verilog HDL and YOSYS,0,SudeepJoshi22/CORDIC_Unit,682563753,Verilog,CORDIC_Unit,9504,0,2023-08-28 17:44:50+00:00,[],None
926,https://github.com/Yash-Barge/computer-architecture-labs.git,2023-08-28 08:47:27+00:00,,0,Yash-Barge/computer-architecture-labs,684004585,Verilog,computer-architecture-labs,466,0,2023-08-28 08:48:04+00:00,[],None
927,https://github.com/tanvihang/2023CPUDesign.git,2023-08-22 01:58:36+00:00,,0,tanvihang/2023CPUDesign,681426762,Verilog,2023CPUDesign,7666,0,2023-09-05 08:41:17+00:00,[],None
928,https://github.com/jasnoor-sandhu/Bubblesort_vhdl.git,2023-08-20 19:39:54+00:00,,0,jasnoor-sandhu/Bubblesort_vhdl,680908781,Verilog,Bubblesort_vhdl,19,0,2023-08-20 20:25:14+00:00,[],None
929,https://github.com/ysyou31/fpga-rc.git,2023-08-20 22:57:17+00:00,,0,ysyou31/fpga-rc,680945956,Verilog,fpga-rc,21,0,2023-08-20 22:58:35+00:00,[],None
930,https://github.com/awitthus/HDL-Bits_MySolutions.git,2023-08-20 22:24:56+00:00,My Solutions to the design exercises presented on HDLBits from Henry Wong,0,awitthus/HDL-Bits_MySolutions,680940683,Verilog,HDL-Bits_MySolutions,8,0,2023-08-20 22:47:25+00:00,[],https://api.github.com/licenses/mit
931,https://github.com/Wyxal/Single-cycle-CPU.git,2023-08-23 13:37:21+00:00,,0,Wyxal/Single-cycle-CPU,682119753,Verilog,Single-cycle-CPU,3,0,2023-08-23 13:41:07+00:00,[],None
932,https://github.com/EECS-151/fpga_labs_fa23.git,2023-08-23 23:48:07+00:00,,0,EECS-151/fpga_labs_fa23,682324393,Verilog,fpga_labs_fa23,54,0,2023-09-10 21:18:33+00:00,[],None
933,https://github.com/IsmailS-712/BalanceBug.git,2023-08-23 18:27:08+00:00,"BalanceBug, an Imperial College London 2nd Year EIE Summer Project. Designed and implemented a maze-traversing robot that can balance on two wheels, using an FPGA, camera, ESP32 and a server.",0,IsmailS-712/BalanceBug,682234890,Verilog,BalanceBug,7112,0,2023-08-24 16:46:38+00:00,[],None
934,https://github.com/himansh107/UART.git,2023-08-23 18:10:45+00:00,"UART - Universal asynchronous reciever transmitter. This project was made using Verilog, synthesized using Vivado and implemented on Nexys 4 FPGA. ",0,himansh107/UART,682228275,Verilog,UART,138,0,2023-09-13 06:07:04+00:00,[],None
935,https://github.com/drwilkes/low-power-neural-net-digital.git,2023-08-23 19:30:23+00:00,,0,drwilkes/low-power-neural-net-digital,682257695,Verilog,low-power-neural-net-digital,11913,0,2023-08-23 19:31:30+00:00,[],https://api.github.com/licenses/apache-2.0
936,https://github.com/MohamedDawod29/pos-edge-detector.git,2023-08-26 21:42:37+00:00,,0,MohamedDawod29/pos-edge-detector,683531490,Verilog,pos-edge-detector,1,0,2023-08-26 21:43:05+00:00,[],None
937,https://github.com/ravikumar8043/8-Bit-Micro-processor.git,2023-08-27 14:34:53+00:00,,0,ravikumar8043/8-Bit-Micro-processor,683733915,Verilog,8-Bit-Micro-processor,5,0,2023-08-27 14:36:22+00:00,[],None
938,https://github.com/radic2682/CNN_accelerator.git,2023-08-27 14:57:22+00:00,,0,radic2682/CNN_accelerator,683740395,Verilog,CNN_accelerator,5,0,2023-08-27 14:58:53+00:00,[],None
939,https://github.com/AnubhavSinghPawar/Dual-Port-RAM.git,2023-08-25 13:18:37+00:00,,0,AnubhavSinghPawar/Dual-Port-RAM,683045807,Verilog,Dual-Port-RAM,3,0,2023-08-25 13:19:14+00:00,[],None
940,https://github.com/sevimeftal/computer-organization-verilog.git,2023-08-25 14:08:36+00:00,,0,sevimeftal/computer-organization-verilog,683064678,Verilog,computer-organization-verilog,440,0,2023-08-25 14:15:00+00:00,[],None
941,https://github.com/rocky910/DSD.git,2023-08-24 19:40:34+00:00,,0,rocky910/DSD,682725517,Verilog,DSD,5340,0,2023-09-16 12:14:45+00:00,[],None
942,https://github.com/gk97-ux/Full-Adder.git,2023-08-24 10:19:58+00:00,A Full Adder using Verilog,0,gk97-ux/Full-Adder,682507995,Verilog,Full-Adder,65,0,2023-08-24 10:20:54+00:00,[],None
943,https://github.com/nouramr-ic-d/Traffic-light-controller.git,2023-08-28 05:41:49+00:00,A controller which control the movement of cars to intersect streets ,0,nouramr-ic-d/Traffic-light-controller,683942460,Verilog,Traffic-light-controller,348,0,2023-08-28 05:44:49+00:00,[],None
944,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-30.git,2023-08-25 17:19:52+00:00,SIPO,0,rajitha0119/100-DAYS-OF-RTL-DAY-30,683133448,Verilog,100-DAYS-OF-RTL-DAY-30,213,0,2023-08-25 17:22:15+00:00,[],None
945,https://github.com/islam-nasser0/ICpedia-internsip-project-RTL2GDSII_flow_for_SPI-flash_design_using_OpenLane.git,2023-08-25 15:30:02+00:00,"We have the ‚Äúwbqspiflash‚Äù design, and we want to perform RTL2GDSII flow  (logic synthesis and proceed through physical synthesis steps).",0,islam-nasser0/ICpedia-internsip-project-RTL2GDSII_flow_for_SPI-flash_design_using_OpenLane,683094915,Verilog,ICpedia-internsip-project-RTL2GDSII_flow_for_SPI-flash_design_using_OpenLane,1783,0,2023-08-25 15:58:50+00:00,[],None
946,https://github.com/Ishmam-Zahin/DSD_LAB.git,2023-08-26 13:18:44+00:00,,0,Ishmam-Zahin/DSD_LAB,683404679,Verilog,DSD_LAB,12,0,2023-08-26 13:23:41+00:00,[],None
947,https://github.com/Kulsoomgit/RTL_Practice.git,2023-08-24 08:09:25+00:00,,0,Kulsoomgit/RTL_Practice,682460687,Verilog,RTL_Practice,0,0,2023-08-24 08:20:12+00:00,[],None
948,https://github.com/alymmak/ParkingMeter.git,2023-08-22 18:44:44+00:00,"Designed (coded, simulated, and implemented) a parking meter much like the ones around Austin. Program is able to simulate coins being added and shows the appropriate time remaining. Also, it flashs slowly when less than 200 seconds are remaining and flash quickly when time has expired.",0,alymmak/ParkingMeter,681783966,Verilog,ParkingMeter,36,0,2023-08-22 18:56:12+00:00,[],None
949,https://github.com/NourMamdouh/CLOCK_DIVIDER.git,2023-08-22 18:11:16+00:00,,0,NourMamdouh/CLOCK_DIVIDER,681770360,Verilog,CLOCK_DIVIDER,1,0,2023-08-22 18:12:01+00:00,[],None
950,https://github.com/HayatoKimura22/caravel_old.git,2023-08-19 02:19:31+00:00,,0,HayatoKimura22/caravel_old,680361770,Verilog,caravel_old,11912,0,2023-08-19 02:20:40+00:00,[],https://api.github.com/licenses/apache-2.0
951,https://github.com/YunJoongChul/Verilog-LeNet5-5bit-5truncated-END.git,2023-08-18 01:40:28+00:00,,0,YunJoongChul/Verilog-LeNet5-5bit-5truncated-END,679945042,Verilog,Verilog-LeNet5-5bit-5truncated-END,588,0,2023-08-18 01:41:52+00:00,[],None
952,https://github.com/johanjino/MazeMaster.git,2023-08-17 20:08:25+00:00,Autonomous bot capable of balancing on two wheels that traverses through a maze formed using white LED strips and maps it on a webapp to find shortest path. This project was developed as part of the engineering design project for 2nd year EIE.,0,johanjino/MazeMaster,679872430,Verilog,MazeMaster,98172,0,2023-08-17 20:39:45+00:00,[],None
953,https://github.com/shayan-taheri/CYENG351_EmbeddedSecureNetworking.git,2023-08-29 18:07:32+00:00,,0,shayan-taheri/CYENG351_EmbeddedSecureNetworking,684722017,Verilog,CYENG351_EmbeddedSecureNetworking,14532,0,2023-08-29 18:08:28+00:00,[],None
954,https://github.com/Venky-26/Light-weight-stream-cipher-based-on-chaotic-maps.git,2023-08-27 11:35:45+00:00,,0,Venky-26/Light-weight-stream-cipher-based-on-chaotic-maps,683686061,Verilog,Light-weight-stream-cipher-based-on-chaotic-maps,25,0,2023-08-27 11:36:33+00:00,[],None
955,https://github.com/rolance110/VLSICAD.git,2023-08-27 12:20:07+00:00,Ë∂ÖÂ§ßÂûãÁ©çÈ´îÈõªË∑ØÈõªËÖ¶ËºîÂä©Ë®≠Ë®àÊ¶ÇË´ñ(verilog„ÄÅHspice„ÄÅLaker),0,rolance110/VLSICAD,683697175,Verilog,VLSICAD,13765,0,2023-10-01 13:57:06+00:00,[],None
956,https://github.com/vinodkhichar/8-Bit-MicroProcessor.git,2023-08-27 18:27:15+00:00,,0,vinodkhichar/8-Bit-MicroProcessor,683799903,Verilog,8-Bit-MicroProcessor,7,0,2023-08-27 18:29:01+00:00,[],None
957,https://github.com/Mahnoor-ismail01/AI-Verilog-Design.git,2023-08-27 19:43:30+00:00,,0,Mahnoor-ismail01/AI-Verilog-Design,683817932,Verilog,AI-Verilog-Design,11917,0,2023-08-27 19:44:28+00:00,[],https://api.github.com/licenses/apache-2.0
958,https://github.com/Aakulmalhotra/Car-parking-system-using-verilog.git,2023-08-15 16:40:22+00:00,,0,Aakulmalhotra/Car-parking-system-using-verilog,678902401,Verilog,Car-parking-system-using-verilog,193,0,2023-08-15 16:57:55+00:00,[],None
959,https://github.com/m7md5303/ALS_Unit.git,2023-08-16 00:37:36+00:00,"An arithmetic logic shift unit that performs operations on its inputs including XORing, Multiplication and rotating implemented with verilog. The functionality was tested by  a testbench simulated using questasim. ",0,m7md5303/ALS_Unit,679032279,Verilog,ALS_Unit,44,0,2023-08-16 00:47:58+00:00,[],None
960,https://github.com/dylee0907/RISC_MIPS_CPU.git,2023-08-16 11:01:08+00:00,,0,dylee0907/RISC_MIPS_CPU,679218294,Verilog,RISC_MIPS_CPU,13,0,2023-08-16 11:33:32+00:00,[],None
961,https://github.com/ketzx/MIPS32-Processor-using-Verilog.git,2023-08-17 08:17:21+00:00,MIPS32 processor,0,ketzx/MIPS32-Processor-using-Verilog,679610790,Verilog,MIPS32-Processor-using-Verilog,83,0,2023-08-24 18:10:51+00:00,[],None
962,https://github.com/sifferman/tt_asic_screensaver.git,2023-08-12 07:11:52+00:00,,0,sifferman/tt_asic_screensaver,677652119,Verilog,tt_asic_screensaver,77,0,2023-08-22 18:35:27+00:00,[],https://api.github.com/licenses/apache-2.0
963,https://github.com/ronakr010/Multiply-and-Accumulate-MAC-circuit-using-Dadda-Multiplier.git,2023-08-14 18:42:33+00:00,,0,ronakr010/Multiply-and-Accumulate-MAC-circuit-using-Dadda-Multiplier,678522008,Verilog,Multiply-and-Accumulate-MAC-circuit-using-Dadda-Multiplier,251,0,2023-08-14 18:44:32+00:00,[],None
964,https://github.com/Roy-Ayalon/m-fifo.git,2023-08-14 16:03:41+00:00,,0,Roy-Ayalon/m-fifo,678464627,Verilog,m-fifo,3,0,2023-08-14 16:04:24+00:00,[],None
965,https://github.com/KingsleyHng/3-Bit-Asynchronous-Graycode-Upcounter.git,2023-08-13 13:45:27+00:00,,0,KingsleyHng/3-Bit-Asynchronous-Graycode-Upcounter,678040775,Verilog,3-Bit-Asynchronous-Graycode-Upcounter,5,0,2023-08-13 13:50:20+00:00,[],None
966,https://github.com/AzeemRG/asic_special_topic.git,2023-08-14 05:22:15+00:00,,0,AzeemRG/asic_special_topic,678245588,Verilog,asic_special_topic,248,0,2023-08-28 20:07:18+00:00,[],None
967,https://github.com/mfaydingtu/deltaHW_mfa.git,2023-08-16 10:04:15+00:00,,0,mfaydingtu/deltaHW_mfa,679198174,Verilog,deltaHW_mfa,392,0,2023-08-16 12:00:02+00:00,[],None
968,https://github.com/reemashour118/Single_Cyclic_RISC_V_Processor.git,2023-08-14 02:54:23+00:00,,0,reemashour118/Single_Cyclic_RISC_V_Processor,678211045,Verilog,Single_Cyclic_RISC_V_Processor,457,0,2023-08-14 02:58:08+00:00,[],None
969,https://github.com/bnbn6969/DCG_SUMMER_PRA.git,2023-08-15 05:19:55+00:00,,0,bnbn6969/DCG_SUMMER_PRA,678677265,Verilog,DCG_SUMMER_PRA,2335,0,2024-03-04 06:15:47+00:00,[],None
970,https://github.com/angrybunny404/CTF.git,2023-08-15 02:41:11+00:00,Notes and challenges from CTFs,0,angrybunny404/CTF,678640486,Verilog,CTF,117979,0,2024-02-10 19:12:17+00:00,[],None
971,https://github.com/PoojithaVadinuri/RTL_Coding_Challenge.git,2023-08-26 11:39:19+00:00,,0,PoojithaVadinuri/RTL_Coding_Challenge,683380330,Verilog,RTL_Coding_Challenge,2648,0,2023-09-24 12:52:41+00:00,[],None
