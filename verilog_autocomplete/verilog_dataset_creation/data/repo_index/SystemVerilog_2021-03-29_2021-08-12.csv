,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/spcl/pspin.git,2021-04-13 12:33:16+00:00,PsPIN: A RISC-V in-network accelerator for flexible high-performance low-power packet processing,16,spcl/pspin,357546275,SystemVerilog,pspin,9537,82,2024-04-02 13:53:13+00:00,"['packet-processing', 'in-network-compute', 'spin', 'networking', 'pulp']",
1,https://github.com/Xilinx/kria-vitis-platforms.git,2021-03-31 12:47:23+00:00,Kria KV260 Vitis platforms and overlays,39,Xilinx/kria-vitis-platforms,353354251,SystemVerilog,kria-vitis-platforms,112317,78,2024-04-10 11:34:59+00:00,[],https://api.github.com/licenses/apache-2.0
2,https://github.com/YosysHQ/nerv.git,2021-05-11 13:52:39+00:00,Naive Educational RISC V processor,12,YosysHQ/nerv,366398952,SystemVerilog,nerv,220,64,2024-04-10 16:27:25+00:00,[],
3,https://github.com/siliconcompiler/zerosoc.git,2021-05-25 15:00:52+00:00,Demo SoC for SiliconCompiler.,7,siliconcompiler/zerosoc,370732291,SystemVerilog,zerosoc,12394,49,2024-03-26 13:51:45+00:00,[],None
4,https://github.com/NotCamelCase/Pathsy.git,2021-07-28 14:15:52+00:00,Simple Path Tracer on an FPGA,1,NotCamelCase/Pathsy,390376894,SystemVerilog,Pathsy,37289,32,2024-03-07 09:13:16+00:00,"['raytracing', 'pathtracing', 'graphics', 'hardware', 'gpu']",https://api.github.com/licenses/apache-2.0
5,https://github.com/jasha64/SNN-FPGA.git,2021-04-29 11:08:52+00:00,Spiking Neural Network RTL Implementation,7,jasha64/SNN-FPGA,362788649,SystemVerilog,SNN-FPGA,203,31,2024-04-01 16:16:37+00:00,[],https://api.github.com/licenses/mit
6,https://github.com/OpenXiangShan/XS-Verilog-Library.git,2021-07-01 03:20:46+00:00,,12,OpenXiangShan/XS-Verilog-Library,381896328,SystemVerilog,XS-Verilog-Library,706,29,2024-02-28 06:10:30+00:00,[],None
7,https://github.com/esynr3z/proto245.git,2021-07-16 16:28:14+00:00,üî¥ SystemVerilog FPGA cores to communicate with FTDI Synchronous/Asynchronous FIFOs (FT245 protocol),7,esynr3z/proto245,386700227,SystemVerilog,proto245,5078,28,2024-02-13 13:30:15+00:00,"['systemverilog', 'ftdi', 'fifo', 'ft232h', 'ft2232h', 'ft600']",https://api.github.com/licenses/mit
8,https://github.com/esynr3z/axi_vip_demo.git,2021-04-24 06:52:48+00:00,Xilinx AXI VIP example of use,6,esynr3z/axi_vip_demo,361092259,SystemVerilog,axi_vip_demo,5064,27,2024-03-22 13:16:34+00:00,"['axi', 'systemverilog', 'xilinx', 'fpga']",None
9,https://github.com/openhwgroup/cv32e41p.git,2021-06-23 15:42:35+00:00,"4 stage, in-order, secure RISC-V core based on the CV32E40P with Zfinx and Zce ISA extentions",11,openhwgroup/cv32e41p,379653247,SystemVerilog,cv32e41p,5903,26,2023-11-24 21:21:38+00:00,[],
10,https://github.com/ecilasun/NekoIchi.git,2021-04-04 23:23:46+00:00,A simple risc-v CPU /GPU running on an Arty A7-100T FPGA board,2,ecilasun/NekoIchi,354666656,SystemVerilog,NekoIchi,2118,22,2024-03-29 20:42:12+00:00,[],
11,https://github.com/black-parrot-hdk/zynq-parrot.git,2021-04-16 23:32:32+00:00,BlackParrot on Zynq,13,black-parrot-hdk/zynq-parrot,358742654,SystemVerilog,zynq-parrot,1290,21,2024-04-12 06:47:40+00:00,[],https://api.github.com/licenses/bsd-3-clause
12,https://github.com/letitbe0201/AXI-DMA-master-verification.git,2021-05-11 03:20:33+00:00,,6,letitbe0201/AXI-DMA-master-verification,366242727,SystemVerilog,AXI-DMA-master-verification,1330,20,2024-03-11 06:36:40+00:00,[],None
13,https://github.com/chipsalliance/aib-protocols.git,2021-05-07 17:16:39+00:00,,5,chipsalliance/aib-protocols,365304399,SystemVerilog,aib-protocols,14131,20,2024-01-04 01:58:57+00:00,[],https://api.github.com/licenses/apache-2.0
14,https://github.com/programer-guan/digital_ic_verification.git,2021-04-27 09:14:53+00:00,Êï∞Â≠óICÈ™åËØÅÊ°à‰æãÔºàSV and UVMÔºâ,4,programer-guan/digital_ic_verification,362051183,SystemVerilog,digital_ic_verification,26,19,2024-04-08 14:56:51+00:00,[],None
15,https://github.com/0xArt/Tiny_But_Mighty_I2C_Master_Verilog.git,2021-06-01 02:25:39+00:00,I2C Master Verilog module,10,0xArt/Tiny_But_Mighty_I2C_Master_Verilog,372678858,SystemVerilog,Tiny_But_Mighty_I2C_Master_Verilog,54,19,2024-02-19 15:16:54+00:00,"['fpga', 'i2c', 'i2c-bus', 'verilog']",https://api.github.com/licenses/gpl-3.0
16,https://github.com/aseddin/ece_4305.git,2021-07-27 18:21:23+00:00,Code associated with Cal Poly Pomona's ECE 4305,13,aseddin/ece_4305,390085715,SystemVerilog,ece_4305,119,18,2024-02-10 05:10:54+00:00,[],None
17,https://github.com/ForwardCom/softcoreA.git,2021-08-07 09:19:45+00:00,softcore for ForwardCom,1,ForwardCom/softcoreA,393636721,SystemVerilog,softcoreA,44219,16,2024-03-19 13:24:00+00:00,[],None
18,https://github.com/racerxdl/pcieledblink.git,2021-08-02 02:44:22+00:00,Stratix V PCIe Ledblink (for usage in Microsoft Storey Peak boards),4,racerxdl/pcieledblink,391796599,SystemVerilog,pcieledblink,1037,15,2024-04-05 21:38:38+00:00,"['example', 'fpga', 'pci-express', 'pcie', 'storey-peak', 'stratix-v']",None
19,https://github.com/dpretet/svlogger.git,2021-07-24 08:51:09+00:00,SystemVerilog Logger ,1,dpretet/svlogger,389047966,SystemVerilog,svlogger,17,15,2024-01-02 12:02:09+00:00,"['verilog', 'systemverilog', 'fpga', 'asic', 'logging', 'logger', 'class', 'simulation', 'hdl', 'icarus']",https://api.github.com/licenses/mit
20,https://github.com/Rain92/FPGA-Mandelbrot.git,2021-07-10 18:24:01+00:00,"A fast, parametrized Mandelbrot generator written in SystemVerilog.",1,Rain92/FPGA-Mandelbrot,384764302,SystemVerilog,FPGA-Mandelbrot,1766,13,2024-04-07 07:53:13+00:00,"['fpga', 'ebaz4205', 'systemverilog', 'vga', 'hdmi', 'wukong-board', 'ps2-keyboard']",None
21,https://github.com/vlotnik/uvm_modem.git,2021-04-07 19:46:02+00:00,UVM components for DSP tasks (MODulation/DEModulation),1,vlotnik/uvm_modem,355664398,SystemVerilog,uvm_modem,202,13,2023-01-02 08:40:06+00:00,[],https://api.github.com/licenses/gpl-3.0
22,https://github.com/Mohamed-Younis/SPI-UVM-Testbench.git,2021-05-16 15:55:17+00:00,,0,Mohamed-Younis/SPI-UVM-Testbench,367925219,SystemVerilog,SPI-UVM-Testbench,11306,12,2024-03-30 15:16:21+00:00,[],None
23,https://github.com/QmppmQ/riscv.git,2021-04-11 07:51:08+00:00,,4,QmppmQ/riscv,356802930,SystemVerilog,riscv,9780,12,2024-03-21 21:19:02+00:00,[],None
24,https://github.com/kitune-san/KFPC-XT.git,2021-05-15 23:46:24+00:00,XT-like PC written in SystemVerilog ,1,kitune-san/KFPC-XT,367750333,SystemVerilog,KFPC-XT,85,12,2023-10-12 12:08:59+00:00,"['pc', 'pcxt', 'pc-xt', '8088', 'x86', 'fpga', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
25,https://github.com/AkeelMedina22/RISC-V-Pipelined-Processor.git,2021-05-08 16:46:41+00:00,A Verilog based 5-stage fully functional pipelined RISC-V Processor code.,1,AkeelMedina22/RISC-V-Pipelined-Processor,365565151,SystemVerilog,RISC-V-Pipelined-Processor,22,11,2024-04-04 00:09:51+00:00,"['riscv', 'systemverilog', 'computerarchitecture']",https://api.github.com/licenses/mit
26,https://github.com/Laxer3a/PS-GPU.git,2021-05-08 04:13:35+00:00,GPU Re-Implementation for PS1 Game Console.,5,Laxer3a/PS-GPU,365416307,SystemVerilog,PS-GPU,1105,11,2023-10-24 00:56:10+00:00,[],None
27,https://github.com/UMJI-VE450-21SU/Ria.git,2021-04-30 14:10:38+00:00,UM-SJTU JI VE450 2021 Summer Capstone Design Project,1,UMJI-VE450-21SU/Ria,363160971,SystemVerilog,Ria,72931,10,2024-01-19 07:01:02+00:00,[],None
28,https://github.com/pulp-platform/ne16.git,2021-04-09 12:51:02+00:00,"Neural Engine, 16 input channels",2,pulp-platform/ne16,356269598,SystemVerilog,ne16,80,10,2023-09-17 02:45:50+00:00,[],
29,https://github.com/OpenEDF/verilog-basic.git,2021-06-30 01:19:18+00:00,learn the combinational and sequential logic circuit.,1,OpenEDF/verilog-basic,381539354,SystemVerilog,verilog-basic,24370,10,2023-10-14 03:58:26+00:00,"['verilog', 'fpga-programming', 'fpga', 'simulation', 'simulator', 'vhdl', 'ice40up5k', 'iverilog', 'synopsys-dc', 'synopsys-vcs']",https://api.github.com/licenses/gpl-3.0
30,https://github.com/yoshi-ki/RISC-V-core.git,2021-04-17 03:14:34+00:00,,0,yoshi-ki/RISC-V-core,358773368,SystemVerilog,RISC-V-core,386,10,2024-02-04 10:57:20+00:00,[],None
31,https://github.com/techav-homebrew/SE-VGA.git,2021-04-07 00:38:44+00:00,Mirror the Mac SE video over VGA,1,techav-homebrew/SE-VGA,355367580,SystemVerilog,SE-VGA,5178,10,2024-03-26 08:39:32+00:00,[],None
32,https://github.com/Rain92/vga_interface.git,2021-06-24 21:45:02+00:00,,2,Rain92/vga_interface,380057282,SystemVerilog,vga_interface,1734,9,2023-01-14 18:58:08+00:00,"['fpga', 'ebaz4205', 'systemverilog', 'vga-controller', 'keyboard-controller', 'vga-simulator', 'verilator']",None
33,https://github.com/avashist003/FIFO_SystemVerilog_Assertion.git,2021-06-04 13:43:50+00:00,Synchronous FIFO design & verification using systemVerilog Assertions,3,avashist003/FIFO_SystemVerilog_Assertion,373854808,SystemVerilog,FIFO_SystemVerilog_Assertion,32,9,2024-04-04 18:31:56+00:00,[],None
34,https://github.com/shivanishah269/vsdfpga.git,2021-07-06 12:55:02+00:00,Implementation of Mixed Signal SoC (RISCV based Core + PLL) on FPGA,3,shivanishah269/vsdfpga,383468488,SystemVerilog,vsdfpga,43,8,2024-01-08 15:27:41+00:00,[],None
35,https://github.com/Ludini1/minimal-risc-v-cpu.git,2021-08-03 10:35:04+00:00,,5,Ludini1/minimal-risc-v-cpu,392279435,SystemVerilog,minimal-risc-v-cpu,16,8,2024-04-02 05:56:16+00:00,[],None
36,https://github.com/Mr-southerly/router_verification.git,2021-04-16 10:49:51+00:00,Ë∑ØÁßëÈ™åËØÅV0ÂÆûÈ™åÔºåÂÆåÊàê‰∏Ä‰∏™routerËÆæËÆ°ÁöÑÈ™åËØÅÂ∑•‰Ωú,3,Mr-southerly/router_verification,358567425,SystemVerilog,router_verification,151,7,2024-04-05 11:41:59+00:00,[],None
37,https://github.com/kitune-san/KF8259.git,2021-04-12 15:20:42+00:00,8259/8259A-like Interrupt Controller written in SystemVerilog,0,kitune-san/KF8259,357242583,SystemVerilog,KF8259,140,7,2023-12-21 00:55:34+00:00,"['8259', '8259a', 'pic', 'interrupt', 'interrupt-controller', 'systemverilog', 'fpga', 'pc']",https://api.github.com/licenses/mit
38,https://github.com/kumarrishav14/arm_watchdog.git,2021-04-01 05:59:19+00:00,Verification IP for Watchdog,2,kumarrishav14/arm_watchdog,353591120,SystemVerilog,arm_watchdog,42,7,2023-11-24 02:38:56+00:00,"['arm', 'uvm', 'uvm-ral-model', 'watchdog-timer', 'arm-watchdog']",None
39,https://github.com/hashi0203/riscv-processor.git,2021-04-23 04:38:03+00:00,,1,hashi0203/riscv-processor,360764030,SystemVerilog,riscv-processor,481,7,2024-03-25 22:19:28+00:00,[],None
40,https://github.com/adnanashraf17501/UVM_AMBA3_APB_FUNCTIONAL-COVERAGE.git,2021-06-11 03:55:24+00:00,,0,adnanashraf17501/UVM_AMBA3_APB_FUNCTIONAL-COVERAGE,375898455,SystemVerilog,UVM_AMBA3_APB_FUNCTIONAL-COVERAGE,930,6,2023-07-24 11:42:24+00:00,[],None
41,https://github.com/U-Ar/Kotsu2Risc.git,2021-04-23 09:20:47+00:00,system verilog implementation of RISC-V ISA for FPGA,1,U-Ar/Kotsu2Risc,360829507,SystemVerilog,Kotsu2Risc,7,6,2023-06-17 09:01:37+00:00,[],None
42,https://github.com/shashwat2707/APB-Verification.git,2021-08-07 10:22:53+00:00,verification of APB bus on System Verilog. creating a testbench consisting of modules to check and improve the functional coverage.,1,shashwat2707/APB-Verification,393650568,SystemVerilog,APB-Verification,335,6,2022-12-24 17:01:02+00:00,[],None
43,https://github.com/ishfaqahmed29/FIFO_UVM_Verification.git,2021-04-18 18:10:43+00:00,Synchronous FIFO Testbench ,5,ishfaqahmed29/FIFO_UVM_Verification,359219118,SystemVerilog,FIFO_UVM_Verification,33,6,2024-01-18 07:19:23+00:00,[],https://api.github.com/licenses/mit
44,https://github.com/XinlueLiu/UVM.git,2021-06-07 20:43:03+00:00,Learn UVM by small projects,1,XinlueLiu/UVM,374795522,SystemVerilog,UVM,4639,6,2024-02-10 21:39:48+00:00,[],None
45,https://github.com/aaronshappell/tage-predictor.git,2021-05-17 22:09:19+00:00,SystemVerilog implemention of the TAGE branch predictor,0,aaronshappell/tage-predictor,368333733,SystemVerilog,tage-predictor,72943,6,2024-03-31 06:49:15+00:00,[],https://api.github.com/licenses/mit
46,https://github.com/pineapple-one/HDL_Simulation.git,2021-08-07 06:18:41+00:00,,1,pineapple-one/HDL_Simulation,393598345,SystemVerilog,HDL_Simulation,16,6,2023-09-19 01:19:42+00:00,[],None
47,https://github.com/nimish15shah/DPU_DAG_Processing_Unit.git,2021-07-13 12:53:48+00:00,RTL code for the DPU chip designed for irregular graphs,1,nimish15shah/DPU_DAG_Processing_Unit,385603382,SystemVerilog,DPU_DAG_Processing_Unit,400,6,2024-03-16 19:21:02+00:00,[],https://api.github.com/licenses/mit
48,https://github.com/SymbiFlow/axi-vip.git,2021-06-07 11:43:29+00:00,,1,SymbiFlow/axi-vip,374645171,SystemVerilog,axi-vip,33,6,2024-03-19 08:55:04+00:00,[],https://api.github.com/licenses/isc
49,https://github.com/openx86/w8086.git,2021-04-11 08:28:54+00:00,8086-compatible cpu,1,openx86/w8086,356811098,SystemVerilog,w8086,15,6,2022-08-30 12:17:35+00:00,[],https://api.github.com/licenses/apache-2.0
50,https://github.com/milestone12/JSON.sv.git,2021-06-05 11:57:53+00:00,"SystemVerilog package for reading, manipulating, and writing JSON-formatted data",1,milestone12/JSON.sv,374102370,SystemVerilog,JSON.sv,58,6,2023-12-02 02:42:01+00:00,['systemverilog'],
51,https://github.com/ecilasun/nekoichiarticle.git,2021-05-29 19:47:02+00:00,Files for each part of the article,0,ecilasun/nekoichiarticle,372057909,SystemVerilog,nekoichiarticle,33326,5,2023-09-30 05:49:18+00:00,[],None
52,https://github.com/kitune-san/KFMMC.git,2021-06-05 14:54:59+00:00,Multi media card access controller written in SystemVerilog ,1,kitune-san/KFMMC,374140772,SystemVerilog,KFMMC,403,5,2023-10-12 12:11:39+00:00,"['mmc', 'systemverilog', 'sdcard', 'multimediacard']",https://api.github.com/licenses/mit
53,https://github.com/NazerkeT/MultilevelTLB.git,2021-07-09 16:43:27+00:00,Multilevel TLB implementation workspace for (CVA6) Ariane Core during summer GSoC'21,1,NazerkeT/MultilevelTLB,384497694,SystemVerilog,MultilevelTLB,172,5,2021-11-17 10:07:03+00:00,[],None
54,https://github.com/jnestor/hw_pq.git,2021-06-15 18:17:49+00:00,A family of hardware priority queue implementations,1,jnestor/hw_pq,377256637,SystemVerilog,hw_pq,146,5,2023-10-09 12:57:28+00:00,[],None
55,https://github.com/FranzLuepke/HW_SW_Codesign.git,2021-04-19 22:42:18+00:00,Hardware-Software codesign project.,2,FranzLuepke/HW_SW_Codesign,359617378,SystemVerilog,HW_SW_Codesign,116822,5,2022-11-06 11:43:25+00:00,[],None
56,https://github.com/Vivek-Dave/UVM_TestBench_For_Single_Port_RAM.git,2021-04-16 17:23:40+00:00,A complete UVM TB for verification of single port 64KB RAM,1,Vivek-Dave/UVM_TestBench_For_Single_Port_RAM,358672066,SystemVerilog,UVM_TestBench_For_Single_Port_RAM,480,5,2023-12-09 07:48:43+00:00,[],None
57,https://github.com/Vivek-Dave/FIFO_UVM_Testbench_Reactive_Stimulus.git,2021-05-07 15:24:49+00:00,UVM TestBench For Verification Of Synchronous FIFO With Reactive Stimulus ,0,Vivek-Dave/FIFO_UVM_Testbench_Reactive_Stimulus,365276062,SystemVerilog,FIFO_UVM_Testbench_Reactive_Stimulus,75,5,2023-11-10 02:26:14+00:00,[],None
58,https://github.com/msinger/dmg-sim.git,2021-04-12 22:08:44+00:00,SystemVerilog files for simulating a complete Game Boy system with DMG-CPU B chip,1,msinger/dmg-sim,357352227,SystemVerilog,dmg-sim,464,5,2023-09-22 12:55:25+00:00,"['verilog', 'gameboy', 'simulation', 'systemverilog', 'game-boy', 'dmg-cpu', 'asic', 'chip', 'dmg-001', 'electronics', 'icarus-verilog', 'nintendo']",https://api.github.com/licenses/cc-by-sa-4.0
59,https://github.com/hdlguy/iir_filter.git,2021-07-28 13:58:51+00:00,IIR digital filter implemented using Vivado HLS and C++,2,hdlguy/iir_filter,390370983,SystemVerilog,iir_filter,904,5,2024-04-09 02:45:26+00:00,[],https://api.github.com/licenses/mit
60,https://github.com/mirkat1206/NCTUEE.git,2021-07-14 16:01:09+00:00,assignments and projects when I studied in NCTU EE.,1,mirkat1206/NCTUEE,385997486,SystemVerilog,NCTUEE,5262,5,2023-05-31 09:25:23+00:00,[],None
61,https://github.com/SpiNNakerManchester/spif.git,2021-04-02 09:06:28+00:00,SpiNNaker peripheral interface,2,SpiNNakerManchester/spif,353965484,SystemVerilog,spif,1178,5,2023-10-22 10:23:08+00:00,"['spinnaker', 'spinnlink', 'fpga', 'hardware', 'verilog']",
62,https://github.com/mcai/chisel-rv32.git,2021-04-11 00:00:11+00:00,chisel-rv32,1,mcai/chisel-rv32,356726350,SystemVerilog,chisel-rv32,7710,5,2023-07-13 02:39:44+00:00,[],https://api.github.com/licenses/mit
63,https://github.com/HDLForBeginners/HDLBits.git,2021-07-10 19:53:00+00:00,,0,HDLForBeginners/HDLBits,384778656,SystemVerilog,HDLBits,3,5,2023-10-05 13:39:16+00:00,[],https://api.github.com/licenses/mit
64,https://github.com/JennahF/ComputerArchitectureLabs.git,2021-03-31 08:13:49+00:00,USTC ,5,JennahF/ComputerArchitectureLabs,353278534,SystemVerilog,ComputerArchitectureLabs,38723,4,2024-04-06 09:45:40+00:00,[],None
65,https://github.com/LearnToDoShit-com/svToolset.git,2021-05-28 18:26:52+00:00,A continually growing system verilog parts library,0,LearnToDoShit-com/svToolset,371787066,SystemVerilog,svToolset,8414,4,2021-12-09 05:45:40+00:00,[],https://api.github.com/licenses/mit
66,https://github.com/sramxtr/fpgas_from_scratch.git,2021-05-06 01:01:53+00:00,"Learn how to program FPGAs, starting from .. relatively scratch",0,sramxtr/fpgas_from_scratch,364746184,SystemVerilog,fpgas_from_scratch,63,4,2021-06-21 12:53:47+00:00,[],https://api.github.com/licenses/mit
67,https://github.com/rksingh23/UVM_TestBench.git,2021-04-04 00:13:51+00:00,"Please find my Extensive Research and Verification Plan,  Here I  -  1. Wrote testbench in UVM;  2. Understood Configuration db in UVM; 3. Implemented strategies for implementation of UVM components such as Transaction, Generator, Sequencer, Monitor, Scoreboard, Environment, Test; 4. Used TLM ports for Communication between Driver , Sequencer, Monitor, Scoreboard; 5. Completed the Reporting Mechanism in UVM Usage of Virtual Interface                               ..",0,rksingh23/UVM_TestBench,354421236,SystemVerilog,UVM_TestBench,26,4,2023-09-09 08:33:31+00:00,[],None
68,https://github.com/0xArt/Super_SPI_Master_Verilog.git,2021-06-14 03:22:31+00:00,SPI Master Verilog module,3,0xArt/Super_SPI_Master_Verilog,376691745,SystemVerilog,Super_SPI_Master_Verilog,184,4,2023-11-03 06:10:39+00:00,"['fpga', 'spi', 'verilog']",https://api.github.com/licenses/gpl-3.0
69,https://github.com/emrii/DPRAM-Design-and-UVM-based-Verification.git,2021-07-01 15:01:11+00:00,RTL design for a DUAL-PORT RAM and a UVM based testbench for functional verification. This project was undertaken to gain familiarity with UVM constructs.,0,emrii/DPRAM-Design-and-UVM-based-Verification,382069986,SystemVerilog,DPRAM-Design-and-UVM-based-Verification,19,4,2024-01-08 13:41:40+00:00,[],None
70,https://github.com/jhy1000/systemverilog_assertion.git,2021-04-03 02:04:47+00:00,collection some usfull systemverilog assertion.,1,jhy1000/systemverilog_assertion,354177792,SystemVerilog,systemverilog_assertion,5,4,2023-04-02 07:20:49+00:00,[],None
71,https://github.com/dineshannayya/qspim.git,2021-07-26 07:15:59+00:00,SPI Master Optimized for RISC V Instruction memory Prefecth,0,dineshannayya/qspim,389543192,SystemVerilog,qspim,3137,4,2023-10-13 07:22:55+00:00,[],https://api.github.com/licenses/apache-2.0
72,https://github.com/Tristone1217/asic.git,2021-04-10 08:35:02+00:00,,0,Tristone1217/asic,356521393,SystemVerilog,asic,687,4,2022-03-18 07:43:20+00:00,[],None
73,https://github.com/bitglitcher/QuantaRV.git,2021-06-13 21:53:53+00:00,Serial 32bit RISCV Core,1,bitglitcher/QuantaRV,376647026,SystemVerilog,QuantaRV,190,4,2022-01-20 21:34:49+00:00,[],https://api.github.com/licenses/mit
74,https://github.com/OmriRaz/CPUCamp.git,2021-05-25 13:20:10+00:00,"Documentation and sample projects for the CPU-Camp course, based on the ¬µLab Kiwi and Terasic DE10-Lite",0,OmriRaz/CPUCamp,370700105,SystemVerilog,CPUCamp,577,4,2024-02-27 15:55:30+00:00,[],None
75,https://github.com/stevefalco/ansi-terminal-firmware.git,2021-04-18 21:02:08+00:00,"FPGA and C source code for an ANSI ""dumb"" terminal",0,stevefalco/ansi-terminal-firmware,359251948,SystemVerilog,ansi-terminal-firmware,5123,4,2022-11-15 14:48:48+00:00,[],https://api.github.com/licenses/gpl-3.0
76,https://github.com/YosysHQ-Docs/AppNote-109.git,2021-05-04 19:23:41+00:00,,2,YosysHQ-Docs/AppNote-109,364363339,SystemVerilog,AppNote-109,2754,3,2023-08-02 02:47:04+00:00,[],
77,https://github.com/jontio/jfpga_i2c_master.git,2021-04-15 04:38:29+00:00,FPGA I2C Master,0,jontio/jfpga_i2c_master,358128348,SystemVerilog,jfpga_i2c_master,641,3,2023-03-15 15:26:47+00:00,[],https://api.github.com/licenses/mit
78,https://github.com/VerificaticationStudio/MultPortedRAM.git,2021-06-06 18:34:49+00:00,Three kinds of multi-ported ram implemented by Chisel.,0,VerificaticationStudio/MultPortedRAM,374436397,SystemVerilog,MultPortedRAM,31323,3,2022-09-20 07:16:24+00:00,[],None
79,https://github.com/Vivek-Dave/UVM_TestBench_For_S_R_Latch.git,2021-06-18 04:10:50+00:00,Simple and Complete UVM TestBench For Verification Of S R Latch,1,Vivek-Dave/UVM_TestBench_For_S_R_Latch,378030716,SystemVerilog,UVM_TestBench_For_S_R_Latch,77,3,2023-04-05 11:17:52+00:00,"['uvm', 'functional-coverage', 'verification']",None
80,https://github.com/yanyirui/uart_apb.git,2021-07-19 14:52:27+00:00,,0,yanyirui/uart_apb,387500453,SystemVerilog,uart_apb,195,3,2024-03-13 05:49:50+00:00,[],None
81,https://github.com/lllirunze/Digital_Lab.git,2021-06-01 01:06:43+00:00,TJU Digital logic and Digital systems,0,lllirunze/Digital_Lab,372665209,SystemVerilog,Digital_Lab,2098,3,2024-03-31 13:01:59+00:00,[],None
82,https://github.com/siglabsoss/ip-library-core.git,2021-06-15 06:14:23+00:00,,2,siglabsoss/ip-library-core,377055955,SystemVerilog,ip-library-core,482,3,2022-09-08 13:04:33+00:00,[],https://api.github.com/licenses/bsd-3-clause
83,https://github.com/ESCA-RISC-V/ov7670_with_cnn_open.git,2021-07-13 05:28:24+00:00,,1,ESCA-RISC-V/ov7670_with_cnn_open,385486770,SystemVerilog,ov7670_with_cnn_open,713,3,2023-07-10 09:44:57+00:00,[],None
84,https://github.com/2bitsin/Q2A03.git,2021-04-05 03:01:12+00:00,My attempt to write a NES emulator in Verilog. ,0,2bitsin/Q2A03,354700857,SystemVerilog,Q2A03,3040,3,2021-07-14 12:44:38+00:00,[],None
85,https://github.com/MaxwellWjj/DBN-Processor.git,2021-06-18 02:20:40+00:00,"An energy-efficient processor design based on Deep Belief Network (DBN), which is one of the most suitable DNN models for on-chip learning",0,MaxwellWjj/DBN-Processor,378011242,SystemVerilog,DBN-Processor,36,3,2024-03-13 13:54:48+00:00,[],None
86,https://github.com/george-hcc/virotti-core.git,2021-06-07 10:16:13+00:00,RISCV IM32 processor tested in ASIC and FPGA.,1,george-hcc/virotti-core,374621841,SystemVerilog,virotti-core,681,3,2022-12-17 05:34:06+00:00,[],None
87,https://github.com/zyasui/HyperRAM_AXI4.git,2021-07-26 03:51:00+00:00,,1,zyasui/HyperRAM_AXI4,389501131,SystemVerilog,HyperRAM_AXI4,38,3,2023-06-30 03:20:48+00:00,[],None
88,https://github.com/theSergeyGusev/simple10GbaseR.git,2021-06-21 20:29:54+00:00,FPGA Low latency 10GBASE-R PCS,1,theSergeyGusev/simple10GbaseR,379055209,SystemVerilog,simple10GbaseR,228,3,2023-12-03 09:48:07+00:00,"['fpga', 'pcs', '10gbase-r', 'ieee80211', '10g', '10gbps']",https://api.github.com/licenses/mit
89,https://github.com/gregorykemp/sample_uvm_testbench.git,2021-04-02 22:24:12+00:00,"a sample UVM testbench, in System Verilog, exercising a RISC-V arithmetic unit",1,gregorykemp/sample_uvm_testbench,354146952,SystemVerilog,sample_uvm_testbench,49,3,2023-11-12 06:10:57+00:00,[],https://api.github.com/licenses/apache-2.0
90,https://github.com/0n1shi/fpga-mips.git,2021-04-26 13:48:45+00:00,MIPS architecure processor on Intel FPGA.,1,0n1shi/fpga-mips,361766993,SystemVerilog,fpga-mips,956,3,2021-05-22 14:16:46+00:00,"['fpga', 'cpu', 'mips', 'systemverilog']",https://api.github.com/licenses/mit
91,https://github.com/mohamed-elkhawas/ROCE.git,2021-04-01 17:20:32+00:00,,2,mohamed-elkhawas/ROCE,353774633,SystemVerilog,ROCE,15235,3,2023-08-02 01:55:15+00:00,[],None
92,https://github.com/ChrisAndrea2011/Sync_FIFO.git,2021-04-25 21:25:39+00:00,Synchronous FIFO code verified using UVM verification environment.,1,ChrisAndrea2011/Sync_FIFO,361542250,SystemVerilog,Sync_FIFO,67,3,2023-08-29 02:32:55+00:00,[],None
93,https://github.com/1009qjm/BIT-SERIAL-MULTIPLIER.git,2021-07-29 06:45:47+00:00,,1,1009qjm/BIT-SERIAL-MULTIPLIER,390628278,SystemVerilog,BIT-SERIAL-MULTIPLIER,7,3,2021-12-26 06:10:49+00:00,[],None
94,https://github.com/dave41266/cpu8080-alu.git,2021-04-14 05:18:52+00:00,UVM code to verify ALU,2,dave41266/cpu8080-alu,357783056,SystemVerilog,cpu8080-alu,28,3,2024-01-10 11:06:59+00:00,[],None
95,https://github.com/VSHEV92/Fast_Fourier_Correlation.git,2021-04-23 17:36:49+00:00,–ë–ª–æ–∫ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤–∑–∞–∏–º–Ω–æ–π –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–≤—É—Ö –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ —Å –ø–æ–º–æ—â—å—é –±—ã—Å—Ç—Ä–æ–π —Å–≤–µ—Ä—Ç–∫–∏ ,1,VSHEV92/Fast_Fourier_Correlation,360961094,SystemVerilog,Fast_Fourier_Correlation,2729,2,2023-10-16 13:38:25+00:00,[],None
96,https://github.com/botliu/rkvproject.git,2021-06-02 14:51:02+00:00,,0,botliu/rkvproject,373204725,SystemVerilog,rkvproject,136719,2,2023-11-01 13:57:47+00:00,[],None
97,https://github.com/skmtti/div.git,2021-03-31 15:37:07+00:00,signed/unsigned divider,0,skmtti/div,353406379,SystemVerilog,div,102,2,2024-03-27 01:13:07+00:00,[],None
98,https://github.com/karin0018/ComputerArchitecture.git,2021-05-11 02:28:46+00:00,2021Âπ¥Êò•ËÆ°ÁÆóÊú∫‰ΩìÁ≥ªÁªìÊûÑËØïÈ™å,1,karin0018/ComputerArchitecture,366232768,SystemVerilog,ComputerArchitecture,47605,2,2021-12-15 12:35:21+00:00,[],None
99,https://github.com/lcbeams/DE10-Lite_Accelerometer.git,2021-05-15 03:29:37+00:00,SystemVerilog design to use the accelerometer on the DE10-Lite FPGA Development Board,0,lcbeams/DE10-Lite_Accelerometer,367531158,SystemVerilog,DE10-Lite_Accelerometer,66,2,2022-02-19 19:38:39+00:00,[],https://api.github.com/licenses/mit
100,https://github.com/black-parrot-hdk/arty-parrot.git,2021-04-16 23:54:36+00:00,,0,black-parrot-hdk/arty-parrot,358745616,SystemVerilog,arty-parrot,7143,2,2022-07-16 22:59:57+00:00,[],https://api.github.com/licenses/bsd-3-clause
101,https://github.com/mfkiwl/fyp-rca-taiga.git,2021-04-05 17:04:57+00:00,,0,mfkiwl/fyp-rca-taiga,354908734,,fyp-rca-taiga,1464,2,2022-04-24 12:16:42+00:00,[],https://api.github.com/licenses/apache-2.0
102,https://github.com/Shihhaolin/Four-port-switch-.git,2021-07-28 05:23:05+00:00,This project is basically from Cadence training course Essential Systemverilog for UVM. All copyright is from Cadence. The project only for my personal practice.  The packet switch design has four port. The switch would get the data packets on a port and transmits the packet to one or more ports which depending on the packet data.,0,Shihhaolin/Four-port-switch-,390224135,SystemVerilog,Four-port-switch-,20,2,2023-08-03 10:28:29+00:00,[],https://api.github.com/licenses/mit
103,https://github.com/joydddd/OoO-Processor.git,2021-04-21 07:00:35+00:00,,1,joydddd/OoO-Processor,360063892,SystemVerilog,OoO-Processor,7326,2,2023-08-09 09:51:15+00:00,[],None
104,https://github.com/my-smilence/LM96570.git,2021-05-18 08:04:10+00:00,verilog for LM96570 Ultrasound Configurable Transmit Beamformer,0,my-smilence/LM96570,368449208,SystemVerilog,LM96570,159,2,2022-12-10 17:06:24+00:00,[],None
105,https://github.com/cxdzyq1110/design_pattern_sv.git,2021-04-17 02:54:41+00:00,learning design pattern using system verilog,0,cxdzyq1110/design_pattern_sv,358770427,SystemVerilog,design_pattern_sv,11,2,2023-05-04 12:58:18+00:00,[],None
106,https://github.com/Shihhaolin/verificatio-of-mux4-1-using-systemverilog.git,2021-08-10 06:12:21+00:00,"Built a test environment using SystemVerilog to verify mux4:1. Used Vivado to design and verify the module of systemverilog. Created components like generator, driver, monitor, scoreboard, interface, environment, and testbench.",0,Shihhaolin/verificatio-of-mux4-1-using-systemverilog,394544762,SystemVerilog,verificatio-of-mux4-1-using-systemverilog,5,2,2022-03-12 14:06:43+00:00,[],None
107,https://github.com/1009qjm/A-Simple-AXI-DMA-.git,2021-08-11 04:03:35+00:00,,0,1009qjm/A-Simple-AXI-DMA-,394856869,SystemVerilog,A-Simple-AXI-DMA-,8,2,2023-02-28 07:24:31+00:00,[],None
108,https://github.com/Sizhe-Zhang/HDC-SystemVerilog-Cadio.git,2021-04-28 00:09:41+00:00,A implemention of Hyperdimensional Computing for CARDIO,0,Sizhe-Zhang/HDC-SystemVerilog-Cadio,362286695,SystemVerilog,HDC-SystemVerilog-Cadio,1520,2,2023-07-18 13:22:22+00:00,[],None
109,https://github.com/Vivek-Dave/UVM_TestBench_For_Adder.git,2021-04-17 11:11:31+00:00,Complete UVM TB For Verification Of Adder,0,Vivek-Dave/UVM_TestBench_For_Adder,358857586,SystemVerilog,UVM_TestBench_For_Adder,87,2,2022-07-23 14:25:08+00:00,[],None
110,https://github.com/iremkalkanli/RISC-V-Processor.git,2021-05-27 22:36:46+00:00,Processor with 11 operation codes based on RISC V,1,iremkalkanli/RISC-V-Processor,371520321,SystemVerilog,RISC-V-Processor,3760,2,2024-02-11 04:22:31+00:00,"['processor', 'risc-v', 'systemverilog']",None
111,https://github.com/matthewbconn/EE552_Project.git,2021-03-29 20:07:41+00:00,"Asynchronous VLSI, Spring 2021, Dr. Peter Beerel.  Co-author Ahmed Abuhjar",1,matthewbconn/EE552_Project,352771040,SystemVerilog,EE552_Project,62,2,2024-04-01 02:34:19+00:00,[],None
112,https://github.com/black-parrot-hdk/black-parrot-subsystems.git,2021-07-21 23:40:26+00:00,,4,black-parrot-hdk/black-parrot-subsystems,388273750,SystemVerilog,black-parrot-subsystems,231,2,2023-03-02 08:54:32+00:00,[],https://api.github.com/licenses/bsd-3-clause
113,https://github.com/mfkiwl/RV32IMF-MicroGT_01.git,2021-08-12 00:20:25+00:00,"A low power, 6 stage in order pipeline, 2 privilege level (M and U), clock cicle of 100MHz, 32 bit RISC-V softcore for FPGA. Written in SystemVerilog.",0,mfkiwl/RV32IMF-MicroGT_01,395148518,SystemVerilog,RV32IMF-MicroGT_01,1439,2,2024-04-11 19:24:31+00:00,[],https://api.github.com/licenses/mit
114,https://github.com/uranusb/SYN_FIFO_UVM.git,2021-05-04 19:27:54+00:00,A UVM based testbench for the synchronous FIFO.,1,uranusb/SYN_FIFO_UVM,364364335,SystemVerilog,SYN_FIFO_UVM,14,2,2023-09-27 21:45:55+00:00,[],None
115,https://github.com/teekamkhandelwal/ENVIRONMENTAL-VERIFICATION-EXAMPLES.git,2021-05-01 17:19:11+00:00,"2x1 mux is verification is done using system verilog. For verification of mux all component are designed and simulated .rtl design -verilog testbench -systemverilog, tool-edaplayground and questasim",0,teekamkhandelwal/ENVIRONMENTAL-VERIFICATION-EXAMPLES,363466777,SystemVerilog,ENVIRONMENTAL-VERIFICATION-EXAMPLES,34,2,2023-11-30 10:29:36+00:00,[],https://api.github.com/licenses/apache-2.0
116,https://github.com/oafonsoo/SPI-Module-in-SystemVerilog.git,2021-06-05 20:39:07+00:00,Master and Slaves Modules in SystemVerilog language to SPI Communication ,0,oafonsoo/SPI-Module-in-SystemVerilog,374208122,SystemVerilog,SPI-Module-in-SystemVerilog,8,2,2024-03-17 14:29:09+00:00,[],None
117,https://github.com/YingnanWang-Ray/EE552.git,2021-06-16 08:00:23+00:00,Final Course Project for EE552,0,YingnanWang-Ray/EE552,377417503,SystemVerilog,EE552,26,2,2024-04-01 02:33:55+00:00,[],None
118,https://github.com/siglabsoss/d-engine.git,2021-06-27 00:52:51+00:00,,1,siglabsoss/d-engine,380623172,SystemVerilog,d-engine,74,2,2022-06-01 04:38:22+00:00,[],https://api.github.com/licenses/bsd-3-clause
119,https://github.com/MikeWakeland/Xoodyak-HW.git,2021-04-29 02:08:03+00:00,Implementing Xoodyak in hardware/sv for speed.,0,MikeWakeland/Xoodyak-HW,362661799,SystemVerilog,Xoodyak-HW,606,2,2023-11-03 01:02:56+00:00,[],None
120,https://github.com/SerLippo/Lemmings.git,2021-07-31 02:01:05+00:00,This is a simple UVM env for DV starters.,0,SerLippo/Lemmings,391232317,SystemVerilog,Lemmings,16,2,2022-03-23 13:35:59+00:00,['uvm'],https://api.github.com/licenses/mit
121,https://github.com/UndefeatedSunny/SystemVerilog.git,2021-05-31 21:47:33+00:00,,0,UndefeatedSunny/SystemVerilog,372635880,SystemVerilog,SystemVerilog,22,2,2023-04-15 13:01:01+00:00,[],None
122,https://github.com/victormanu/VectorProcessor.git,2021-05-30 18:31:42+00:00,,0,victormanu/VectorProcessor,372288532,SystemVerilog,VectorProcessor,4544,2,2021-10-31 18:02:34+00:00,[],None
123,https://github.com/redchenjs/axi_dfm.git,2021-06-02 05:49:22+00:00,AXI Digital Frequency Meter,0,redchenjs/axi_dfm,373054255,SystemVerilog,axi_dfm,857,2,2023-07-04 13:38:44+00:00,[],None
124,https://github.com/asomu/SytemVerilog_Practice.git,2021-07-23 06:00:20+00:00,,0,asomu/SytemVerilog_Practice,388693381,SystemVerilog,SytemVerilog_Practice,26,2,2023-08-09 05:56:03+00:00,[],None
125,https://github.com/teekamkhandelwal/4X16-decoder-environment-with-coverage-.git,2021-05-13 04:55:25+00:00,decoder design using verilog and verified using system verilog and also perform code coverage operation using questa sim,0,teekamkhandelwal/4X16-decoder-environment-with-coverage-,366937970,SystemVerilog,4X16-decoder-environment-with-coverage-,25,2,2024-01-26 02:08:08+00:00,[],https://api.github.com/licenses/apache-2.0
126,https://github.com/varunsax12/systolic_array_matrix_multiplication.git,2021-08-04 12:50:56+00:00,Scalable (parameterized) systolic array for NxN matrix multiplication,1,varunsax12/systolic_array_matrix_multiplication,392687042,SystemVerilog,systolic_array_matrix_multiplication,6,2,2024-03-04 16:25:58+00:00,[],None
127,https://github.com/mfkiwl/ArmleoCPU-1.git,2021-06-25 10:37:00+00:00,"Development branch: Multicore RV32IMA w/ MMU, Cache capable of booting Linux. two stage: RISC-V RV32IM compatible CPU created from scratch. Includes MMU and D/I-Caches",2,mfkiwl/ArmleoCPU-1,380205287,SystemVerilog,ArmleoCPU-1,2935,2,2024-04-10 10:00:15+00:00,[],https://api.github.com/licenses/gpl-3.0
128,https://github.com/cyberfantom2000/fano_decoder_verilog.git,2021-04-05 08:13:09+00:00,,0,cyberfantom2000/fano_decoder_verilog,354764711,SystemVerilog,fano_decoder_verilog,114,2,2022-06-29 23:24:37+00:00,[],None
129,https://github.com/ORKA-HPC/orka-hpc-llp.git,2021-07-16 09:59:57+00:00,Run C/C++ on automatically generated hardware,0,ORKA-HPC/orka-hpc-llp,386590525,SystemVerilog,orka-hpc-llp,105237,2,2024-04-10 15:39:33+00:00,[],https://api.github.com/licenses/apache-2.0
130,https://github.com/my-smilence/sthv800_my_code.git,2021-05-11 11:21:48+00:00,my first verilog project(verilog for sthv800),0,my-smilence/sthv800_my_code,366356066,SystemVerilog,sthv800_my_code,7386,2,2024-02-20 07:52:51+00:00,[],None
131,https://github.com/VSHEV92/AXIS_UVM_Agent.git,2021-05-12 17:00:03+00:00,UVM –∞–≥–µ–Ω—Ç –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–æ–¥—É–ª–µ–π —Å AXI-Stream –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º,1,VSHEV92/AXIS_UVM_Agent,366789490,SystemVerilog,AXIS_UVM_Agent,17,2,2024-04-03 07:02:25+00:00,[],None
132,https://github.com/Geniussh/Bitcoin-Hash.git,2021-05-19 11:02:34+00:00,Bitcoin Hashing using SHA-256 Hashing Algorithm,0,Geniussh/Bitcoin-Hash,368838814,SystemVerilog,Bitcoin-Hash,4980,2,2022-03-06 05:37:37+00:00,"['sha-256', 'bitcoin-hash-calculator', 'hashing', 'systemverilog', 'fpga']",None
133,https://github.com/Vivek-Dave/UVM_TeatBench_For_ROM.git,2021-04-17 04:11:27+00:00,Complete UVM TestBench for verification of ROM,1,Vivek-Dave/UVM_TeatBench_For_ROM,358781703,SystemVerilog,UVM_TeatBench_For_ROM,87,2,2023-09-09 08:59:21+00:00,[],None
134,https://github.com/nonamehi/verification-userexample.git,2021-05-01 08:02:22+00:00,,0,nonamehi/verification-userexample,363355632,SystemVerilog,verification-userexample,61,2,2021-10-24 03:14:40+00:00,[],None
135,https://github.com/AdulisL/ECE_111.git,2021-04-14 04:00:25+00:00,Spring 2021,0,AdulisL/ECE_111,357767651,SystemVerilog,ECE_111,1483,2,2021-09-23 03:53:26+00:00,[],None
136,https://github.com/Warl3ck/ad9643.git,2021-07-05 17:47:41+00:00,AXI project AD9643,0,Warl3ck/ad9643,383222212,SystemVerilog,ad9643,2044,2,2022-08-13 04:25:45+00:00,[],None
137,https://github.com/34-Engineering/Virtex-HDL.git,2021-05-20 22:54:35+00:00,This repository contains the Xilinx Vivado project for the Artix-7 (XC7A35T-1FTG256C) FPGA on Virtex.,0,34-Engineering/Virtex-HDL,369357083,SystemVerilog,Virtex-HDL,110773,2,2024-02-18 20:58:41+00:00,"['systemverilog', 'vivado', 'artix-7', 'fpga']",https://api.github.com/licenses/gpl-3.0
138,https://github.com/dh73/YosysHQ_subprj.git,2021-05-18 18:17:15+00:00,,0,dh73/YosysHQ_subprj,368627559,SystemVerilog,YosysHQ_subprj,1014,1,2022-07-02 23:09:24+00:00,[],
139,https://github.com/CaglayanDokme/SystemVerilogExercises.git,2021-05-11 09:50:26+00:00,This is a repo where I share the System Verilog exercises that I worked on. Contributions and suggestions are welcome,1,CaglayanDokme/SystemVerilogExercises,366332883,SystemVerilog,SystemVerilogExercises,227,1,2022-11-14 15:16:04+00:00,"['systemverilog', 'systemverilog-hdl', 'digital-design']",None
140,https://github.com/masongerace/EE310-projects.git,2021-06-11 19:41:52+00:00,Projects done over the course of the Spring 2021 semester. Taught by Professor Paul Bakke,0,masongerace/EE310-projects,376127002,SystemVerilog,EE310-projects,33,1,2021-12-10 01:52:31+00:00,[],None
141,https://github.com/mertakcay/EgeUni_Micro.git,2021-07-14 23:26:19+00:00,EgeMicroarc Traning,0,mertakcay/EgeUni_Micro,386101982,SystemVerilog,EgeUni_Micro,650,1,2023-03-29 06:23:38+00:00,[],None
142,https://github.com/harambe-forever/olmadidcd.git,2021-07-04 07:29:39+00:00,,0,harambe-forever/olmadidcd,382790806,SystemVerilog,olmadidcd,121,1,2021-11-21 13:35:12+00:00,[],None
143,https://github.com/tblink-rpc/tblink-rpc-hdl.git,2021-07-02 16:39:19+00:00,Provides VPI- and DPI-based integrations,0,tblink-rpc/tblink-rpc-hdl,382405945,SystemVerilog,tblink-rpc-hdl,307,1,2022-03-30 11:57:59+00:00,[],https://api.github.com/licenses/apache-2.0
144,https://github.com/StanfordAHA/Configuration.git,2021-08-12 20:33:19+00:00,,0,StanfordAHA/Configuration,395437390,SystemVerilog,Configuration,2346,1,2023-02-27 12:03:03+00:00,[],https://api.github.com/licenses/bsd-3-clause
145,https://github.com/anish2888/SV.git,2021-04-20 01:13:47+00:00,design,0,anish2888/SV,359644003,SystemVerilog,SV,1,1,2021-04-20 01:20:00+00:00,[],None
146,https://github.com/ShonTaware/TL-V_Projects.git,2021-04-09 17:35:50+00:00,,0,ShonTaware/TL-V_Projects,356351953,SystemVerilog,TL-V_Projects,7,1,2022-03-31 03:32:32+00:00,[],None
147,https://github.com/Soham-coder/ROCC_based_neurosynapse.git,2021-04-25 06:33:18+00:00,ROCC accelerator ISA based neuroSynapse,1,Soham-coder/ROCC_based_neurosynapse,361349956,SystemVerilog,ROCC_based_neurosynapse,1747,1,2022-07-20 09:34:30+00:00,"['rocc', 'rocketchip-rocc', 'systemverilog', 'verilog-hdl', 'fsm', 'state-machine', 'random', 'testing']",None
148,https://github.com/Vivek-Dave/UVM_TestBench_For_Parity_Generator.git,2021-06-12 03:59:37+00:00,Complete UVM TestBench For Verification Of Parity Generator,0,Vivek-Dave/UVM_TestBench_For_Parity_Generator,376197267,SystemVerilog,UVM_TestBench_For_Parity_Generator,84,1,2023-09-09 09:09:50+00:00,[],None
149,https://github.com/hao310rui140326/my_uvm_ahb2.git,2021-04-03 02:37:13+00:00,,0,hao310rui140326/my_uvm_ahb2,354182381,SystemVerilog,my_uvm_ahb2,27,1,2021-12-18 09:13:02+00:00,[],https://api.github.com/licenses/apache-2.0
150,https://github.com/Vivek-Dave/UVM.git,2021-04-16 17:15:53+00:00,Basic Examples in UVM,0,Vivek-Dave/UVM,358670134,SystemVerilog,UVM,184,1,2022-04-02 03:50:42+00:00,[],None
151,https://github.com/ankangd/4bitPC.git,2021-04-01 11:06:29+00:00,Verilog-HDL implementation of a simple 4-bit PC.,0,ankangd/4bitPC,353671340,SystemVerilog,4bitPC,712,1,2023-03-25 16:23:03+00:00,"['4-bit-cpu', 'verilog-hdl', 'verilog-project']",https://api.github.com/licenses/mit
152,https://github.com/mcellin/kangaroo_hdl.git,2021-04-05 14:22:46+00:00,,0,mcellin/kangaroo_hdl,354860142,SystemVerilog,kangaroo_hdl,73,1,2022-02-17 21:38:02+00:00,[],None
153,https://github.com/PeterWrighten/ComputerSystem.git,2021-06-07 21:29:30+00:00,Computer Architecture Powered By CSAPP and So on.,0,PeterWrighten/ComputerSystem,374804949,SystemVerilog,ComputerSystem,63,1,2021-12-25 18:45:36+00:00,[],None
154,https://github.com/WD20160314/sv_test.git,2021-06-26 07:11:38+00:00,sv example,0,WD20160314/sv_test,380439356,SystemVerilog,sv_test,94079,1,2022-05-09 13:22:22+00:00,[],None
155,https://github.com/adnanashraf17501/System-Verilog-based-Verification-Of-Dflipflop.git,2021-06-29 07:38:57+00:00,,0,adnanashraf17501/System-Verilog-based-Verification-Of-Dflipflop,381279718,SystemVerilog,System-Verilog-based-Verification-Of-Dflipflop,72,1,2022-05-28 13:58:52+00:00,[],None
156,https://github.com/Shihhaolin/counter.git,2021-07-31 05:18:11+00:00,Practice design a testbench of counter.,0,Shihhaolin/counter,391262263,SystemVerilog,counter,2,1,2021-10-31 20:58:33+00:00,[],None
157,https://github.com/Elia1996/cv32e40p_ft_tests.git,2021-03-31 20:00:40+00:00,,1,Elia1996/cv32e40p_ft_tests,353475456,SystemVerilog,cv32e40p_ft_tests,1509,1,2021-06-17 08:56:10+00:00,[],None
158,https://github.com/loafbrad/libimg.git,2021-04-04 00:07:03+00:00,,0,loafbrad/libimg,354420352,SystemVerilog,libimg,2,1,2021-04-06 09:15:35+00:00,[],None
159,https://github.com/Vivek-Dave/UVM_TestBench_For_ShIft_Register.git,2021-05-20 15:06:24+00:00,Complete UVM TestBench For Verification Of Shift Register ,0,Vivek-Dave/UVM_TestBench_For_ShIft_Register,369248293,SystemVerilog,UVM_TestBench_For_ShIft_Register,77,1,2021-06-09 15:13:23+00:00,[],None
160,https://github.com/bibistellar/cache_testbench.git,2021-05-14 18:01:03+00:00,cacheÁöÑÊµãËØïÈõÜ,0,bibistellar/cache_testbench,367442601,SystemVerilog,cache_testbench,130,1,2022-05-26 11:28:36+00:00,[],None
161,https://github.com/knyuchen/interconnect_model.git,2021-05-04 19:38:18+00:00,Models for various interconnects,0,knyuchen/interconnect_model,364366753,SystemVerilog,interconnect_model,80,1,2022-06-28 09:23:28+00:00,"['python', 'interconnect', 'systemverilog']",None
162,https://github.com/bhargav253/ultra_core.git,2021-06-28 09:17:33+00:00,,1,bhargav253/ultra_core,380973838,SystemVerilog,ultra_core,81,1,2022-04-19 18:42:42+00:00,[],None
163,https://github.com/Vivek-Dave/UVM_TestBench_For_D_Flip_Flop.git,2021-06-16 12:45:02+00:00,Complete UVM TestBench For Verification Of D Flip Flop,1,Vivek-Dave/UVM_TestBench_For_D_Flip_Flop,377493250,SystemVerilog,UVM_TestBench_For_D_Flip_Flop,75,1,2023-06-06 09:47:15+00:00,[],None
164,https://github.com/LuisGarcia-S/Procesador-Segmentado.git,2021-07-31 03:01:01+00:00,Peque√±o proyecto de Verilog en el que se implementa un procesador segmentado con la arquitectura de RISC-V,0,LuisGarcia-S/Procesador-Segmentado,391241431,SystemVerilog,Procesador-Segmentado,31,1,2023-09-28 17:56:09+00:00,[],None
165,https://github.com/techvinodreddy/Router_1x3_verification.git,2021-04-29 07:37:16+00:00,Router 1x3 has single input port and three output ports.,0,techvinodreddy/Router_1x3_verification,362730634,SystemVerilog,Router_1x3_verification,638,1,2021-05-31 04:17:07+00:00,[],None
166,https://github.com/sathyapriyanka/APB_UVC_UVM.git,2021-05-23 21:06:43+00:00,,0,sathyapriyanka/APB_UVC_UVM,370157430,SystemVerilog,APB_UVC_UVM,399,1,2021-11-27 06:25:48+00:00,[],None
167,https://github.com/LoialOtter/FPGA-USB-PD.git,2021-06-16 04:28:20+00:00,USB-PD interface in FPGA logic with minimal external hardware.,0,LoialOtter/FPGA-USB-PD,377370340,SystemVerilog,FPGA-USB-PD,11,1,2023-02-04 07:51:29+00:00,[],https://api.github.com/licenses/apache-2.0
168,https://github.com/furkanitap/8-Bit-Processor-in-SystemVerilog.git,2021-08-05 21:22:58+00:00,,0,furkanitap/8-Bit-Processor-in-SystemVerilog,393173549,SystemVerilog,8-Bit-Processor-in-SystemVerilog,11,1,2023-01-03 15:19:17+00:00,[],None
169,https://github.com/Ravinduabey/SERIAL_BUS_project.git,2021-08-03 07:33:45+00:00,,1,Ravinduabey/SERIAL_BUS_project,392230967,SystemVerilog,SERIAL_BUS_project,4186,1,2022-03-02 19:09:15+00:00,[],None
170,https://github.com/Nameer-Iqbal-Ansari/RV32I-Microprocessor.git,2021-04-07 17:51:51+00:00,A single cycle microprocessor which executes only integer type commands and operations.,1,Nameer-Iqbal-Ansari/RV32I-Microprocessor,355635418,SystemVerilog,RV32I-Microprocessor,41998,1,2022-10-10 05:53:34+00:00,[],None
171,https://github.com/ayengec/FPGA-Design-with-Systemverilog.git,2021-05-09 09:07:39+00:00,"SystemVerilog brings a higher level of abstraction to the Verilog designer. Constructs and commands like Interfaces, new Data types (logic, int), Enumerated types, Arrays, Hardware-specific always (always_ff, always_comb) and others allow modeling of RTL designs easily, and with less coding.",2,ayengec/FPGA-Design-with-Systemverilog,365710983,SystemVerilog,FPGA-Design-with-Systemverilog,41394,1,2022-07-08 10:40:00+00:00,"['fpga', 'rtl', 'systemverilog', 'uvm']",None
172,https://github.com/kyusuf97/I2C-Subordinate-Interface.git,2021-06-09 01:37:59+00:00,,0,kyusuf97/I2C-Subordinate-Interface,375192310,SystemVerilog,I2C-Subordinate-Interface,1620,1,2021-10-31 17:41:32+00:00,[],None
173,https://github.com/gcet231-ciruitos-digitais-ii-2020-2/tutorial-verilog.git,2021-08-10 16:46:07+00:00,Tutorial Verilog GCET231,1,gcet231-ciruitos-digitais-ii-2020-2/tutorial-verilog,394716141,SystemVerilog,tutorial-verilog,11,1,2021-08-31 14:04:20+00:00,[],None
174,https://github.com/FilippoCheein/RISCV_CPU_Pipepline.git,2021-08-06 21:49:08+00:00,,1,FilippoCheein/RISCV_CPU_Pipepline,393511298,SystemVerilog,RISCV_CPU_Pipepline,964,1,2021-08-08 20:19:58+00:00,[],None
175,https://github.com/Shihhaolin/mux-4to1-with-assertion.git,2021-08-04 07:35:22+00:00,design a mux 4to1 with assertion ,0,Shihhaolin/mux-4to1-with-assertion,392594392,SystemVerilog,mux-4to1-with-assertion,2,1,2021-10-31 20:58:29+00:00,[],None
176,https://github.com/Vivek-Dave/UVM_TestBench_For_3x8_Decoder.git,2021-06-02 02:35:00+00:00,Complete UVM TestBench For Verification Of 3x8 Decoder,0,Vivek-Dave/UVM_TestBench_For_3x8_Decoder,373017556,SystemVerilog,UVM_TestBench_For_3x8_Decoder,83,1,2024-02-13 00:13:16+00:00,[],None
177,https://github.com/jiru1997/NOC-Convolutional-Neural-Network-implementation-2D-3x3-filter-5x5-mapper.git,2021-06-20 22:51:06+00:00,NOC Convolutional Neural Network implementation by using systemverilog,0,jiru1997/NOC-Convolutional-Neural-Network-implementation-2D-3x3-filter-5x5-mapper,378754026,SystemVerilog,NOC-Convolutional-Neural-Network-implementation-2D-3x3-filter-5x5-mapper,13,1,2024-03-22 10:35:37+00:00,[],None
178,https://github.com/upaengineering/TD4_SV.git,2021-07-05 00:43:16+00:00,TD4 (4bit CPU) written by System Verilog,1,upaengineering/TD4_SV,382976305,SystemVerilog,TD4_SV,8,1,2021-10-11 14:16:18+00:00,[],None
179,https://github.com/ZhiyiGUO/test_zeroriscy.git,2021-07-04 06:06:24+00:00,,0,ZhiyiGUO/test_zeroriscy,382776723,SystemVerilog,test_zeroriscy,860,1,2022-09-09 10:53:35+00:00,[],
180,https://github.com/Shihhaolin/register.git,2021-08-01 08:52:18+00:00,Practice design a testbench of register.,0,Shihhaolin/register,391575666,SystemVerilog,register,2,1,2021-10-31 20:58:32+00:00,[],None
181,https://github.com/dajoariando/WMPMRI_PCBv11_HDLv1_2021_Quartus.git,2021-06-04 21:09:24+00:00,The WMP MRI HDL with Bitstream topology,0,dajoariando/WMPMRI_PCBv11_HDLv1_2021_Quartus,373960035,SystemVerilog,WMPMRI_PCBv11_HDLv1_2021_Quartus,21668,1,2022-06-16 06:18:21+00:00,[],None
182,https://github.com/bhargav-s-271100/System-Verilog.git,2021-06-06 07:17:58+00:00,"This repository contains programs to demonstrate System Verilog test constructs like modports, interface and clocking blocks, driver and transactor classes, constrained randomization and functional coverage.",0,bhargav-s-271100/System-Verilog,374294093,SystemVerilog,System-Verilog,1045,1,2021-12-01 10:48:31+00:00,[],None
183,https://github.com/Grapefruite/SHA256_SystemVerilog.git,2021-04-16 08:32:36+00:00,implement SHA256 algorithm by SystemVerilog ,0,Grapefruite/SHA256_SystemVerilog,358530627,SystemVerilog,SHA256_SystemVerilog,1074,1,2024-02-18 06:50:10+00:00,[],None
184,https://github.com/fcoccimi/Flatsat-UHF-transceiver.git,2021-04-08 01:07:34+00:00,"The following shows an implementation of a UHF transceiver that can be used as a flat sat. The implementation is to get universities, radio amateur, and the general public to understand digital radio communication, space communication, and for universities to use in there there testing of their CubeSat, before purchasing the more expensive transceivers.   ",0,fcoccimi/Flatsat-UHF-transceiver,355724704,SystemVerilog,Flatsat-UHF-transceiver,8196,1,2024-03-18 17:20:02+00:00,"['digital-radio-communication', 'uhf-transceiver', 'flatsat-uhf-ransiever']",None
185,https://github.com/teekamkhandelwal/UVM_Simple_testbech_examples.git,2021-05-15 04:33:00+00:00,,1,teekamkhandelwal/UVM_Simple_testbech_examples,367539582,SystemVerilog,UVM_Simple_testbech_examples,49,1,2021-11-09 15:50:05+00:00,[],None
186,https://github.com/Vivek-Dave/UVM_TestBench_For_Ring_Counter.git,2021-06-19 07:19:46+00:00,Complete UVM TestBench For Verification Of Ring (Onehot) Counter,2,Vivek-Dave/UVM_TestBench_For_Ring_Counter,378350124,SystemVerilog,UVM_TestBench_For_Ring_Counter,74,1,2023-05-28 08:21:18+00:00,"['uvm', 'functional-coverage']",None
187,https://github.com/elirazd/Verifcation-APB-transceiver.git,2021-08-09 16:07:52+00:00,"Verification test (with UVM) of 3 interfaces transceiver include APB, Tx-Rx and IRQ",0,elirazd/Verifcation-APB-transceiver,394357640,SystemVerilog,Verifcation-APB-transceiver,774,1,2022-03-23 14:01:45+00:00,[],None
188,https://github.com/knyuchen/fifo_model.git,2021-05-01 17:47:13+00:00,Models for Various FIFO & Buffer,0,knyuchen/fifo_model,363472214,SystemVerilog,fifo_model,29,1,2024-02-11 04:20:08+00:00,"['systemverilog', 'fifo', 'buffer']",None
189,https://github.com/Aric5301/Space-Invaders-Maabada1A-Technion.git,2021-05-09 18:52:13+00:00,,0,Aric5301/Space-Invaders-Maabada1A-Technion,365825820,SystemVerilog,Space-Invaders-Maabada1A-Technion,59808,1,2024-03-13 05:36:28+00:00,[],None
190,https://github.com/j-sungyeong/esca_samsung.git,2021-04-14 05:17:58+00:00,,0,j-sungyeong/esca_samsung,357782905,SystemVerilog,esca_samsung,26883,1,2022-01-13 08:11:13+00:00,[],None
191,https://github.com/MinatsuT/TangNano_GamingLED.git,2021-06-05 13:46:24+00:00,Tang Nano RGB LED Example,0,MinatsuT/TangNano_GamingLED,374124989,SystemVerilog,TangNano_GamingLED,9,1,2022-01-21 23:33:30+00:00,"['fpga', 'verilog', 'sipeed-tang-nano']",https://api.github.com/licenses/apache-2.0
192,https://github.com/mario-yankov-todorov/Verilog_examples_from_EDA_playground.git,2021-04-22 06:42:40+00:00,,0,mario-yankov-todorov/Verilog_examples_from_EDA_playground,360418336,SystemVerilog,Verilog_examples_from_EDA_playground,105,1,2022-06-07 00:59:33+00:00,[],None
193,https://github.com/Elia1996/Travulog.git,2021-04-25 20:39:56+00:00,Travulog a metalanguage to automatize regular modification to verilgo code,1,Elia1996/Travulog,361533469,SystemVerilog,Travulog,252,1,2023-03-07 20:21:04+00:00,[],None
194,https://github.com/Radiophantom/dma_controller.git,2021-08-12 15:57:50+00:00,,0,Radiophantom/dma_controller,395372426,SystemVerilog,dma_controller,8,1,2022-07-26 08:11:44+00:00,[],None
195,https://github.com/FilippoCheein/RISCV_SUPERSCALAR.git,2021-08-06 23:33:39+00:00,,1,FilippoCheein/RISCV_SUPERSCALAR,393529245,SystemVerilog,RISCV_SUPERSCALAR,22141,1,2021-08-08 20:19:20+00:00,[],None
196,https://github.com/Jayshil-Patel/System-Verilog.git,2021-04-17 10:28:13+00:00,This repository consists of Some system Verilog files made during my 6th semester,0,Jayshil-Patel/System-Verilog,358849069,SystemVerilog,System-Verilog,11,1,2021-12-28 15:45:23+00:00,[],https://api.github.com/licenses/mit
197,https://github.com/U-Ar/Kotsu3Risc.git,2021-04-25 14:24:07+00:00,Multi-cycle RISC-V processor and advanced version of Kotsu2Risc.,1,U-Ar/Kotsu3Risc,361449621,SystemVerilog,Kotsu3Risc,4,1,2021-04-28 13:06:37+00:00,[],None
198,https://github.com/nvitya/hps_fpga.git,2021-05-23 09:09:35+00:00,Some tests and documentation over Altera Cyclone V SoC (ARM-A9 + FPGA),0,nvitya/hps_fpga,370006928,SystemVerilog,hps_fpga,171,1,2022-06-01 04:28:06+00:00,[],https://api.github.com/licenses/bsd-2-clause
199,https://github.com/peterzhong2001/JTAG.git,2021-04-20 02:57:54+00:00,,0,peterzhong2001/JTAG,359665614,SystemVerilog,JTAG,542,1,2022-09-21 02:49:37+00:00,[],None
200,https://github.com/Tyler1T/HSCA_Final.git,2021-05-02 23:54:20+00:00,,0,Tyler1T/HSCA_Final,363774767,SystemVerilog,HSCA_Final,3930,1,2022-04-13 19:58:45+00:00,[],https://api.github.com/licenses/gpl-3.0
201,https://github.com/tylergithub/8b_10b_Encoder_Verification_EE273.git,2021-04-18 22:23:54+00:00,Design and verify an 8b/10b encoder with CRC Using UVM,0,tylergithub/8b_10b_Encoder_Verification_EE273,359265174,SystemVerilog,8b_10b_Encoder_Verification_EE273,67,1,2023-09-09 09:19:57+00:00,[],None
202,https://github.com/DarthZhu/MIPS_Pipeline.git,2021-06-04 16:33:52+00:00,,0,DarthZhu/MIPS_Pipeline,373902194,SystemVerilog,MIPS_Pipeline,468,1,2023-02-21 08:39:22+00:00,[],None
203,https://github.com/jiru1997/NOC-Convolutional-Neural-Network-implementation-with-two-CONV-layers.git,2021-06-20 23:15:05+00:00,NOC-Convolutional-Neural-Network-implementation with two CONV layer,0,jiru1997/NOC-Convolutional-Neural-Network-implementation-with-two-CONV-layers,378756873,SystemVerilog,NOC-Convolutional-Neural-Network-implementation-with-two-CONV-layers,68,1,2024-03-22 10:37:31+00:00,[],None
204,https://github.com/sri-srujan08/AHB_APB_BRIDGE.git,2021-06-29 13:48:27+00:00,,0,sri-srujan08/AHB_APB_BRIDGE,381380839,SystemVerilog,AHB_APB_BRIDGE,23,1,2022-01-31 14:55:50+00:00,[],None
205,https://github.com/m-hariszafar/apb_uvm_vip.git,2021-07-28 09:38:15+00:00,,1,m-hariszafar/apb_uvm_vip,390295559,SystemVerilog,apb_uvm_vip,19,1,2023-02-09 08:11:30+00:00,[],None
206,https://github.com/ShashankVM/overlapping-sequence-detector-1011-mealy-sv.git,2021-07-16 14:26:04+00:00,"Mealy Finite State Machine type overlapping sequence detector of ""1011"" in SystemVerilog.",0,ShashankVM/overlapping-sequence-detector-1011-mealy-sv,386664289,SystemVerilog,overlapping-sequence-detector-1011-mealy-sv,19,1,2022-06-18 22:30:14+00:00,"['systemverilog', 'finite-state-machine', 'sequence-detector']",https://api.github.com/licenses/gpl-3.0
207,https://github.com/Zchunhua521/Hello-word.git,2021-07-16 07:06:38+00:00,train,0,Zchunhua521/Hello-word,386543580,SystemVerilog,Hello-word,2,1,2021-07-19 11:22:29+00:00,[],None
208,https://github.com/lwflwf1/uvm-generator.git,2021-05-06 03:30:49+00:00,uvm testbench generator,0,lwflwf1/uvm-generator,364773997,SystemVerilog,uvm-generator,78,1,2021-06-23 08:35:10+00:00,[],None
209,https://github.com/KuangjuX-Archived/Digital-Lab.git,2021-04-02 04:51:55+00:00,Digital Design Lab,0,KuangjuX-Archived/Digital-Lab,353908401,SystemVerilog,Digital-Lab,5511,1,2023-08-16 02:21:23+00:00,[],https://api.github.com/licenses/gpl-3.0
210,https://github.com/menotti/lightriscv.git,2021-05-17 22:38:00+00:00,Multi-cycle implementation of a subset of RISC-V for educational purposes,1,menotti/lightriscv,368338787,SystemVerilog,lightriscv,9,1,2023-09-01 13:02:53+00:00,[],None
211,https://github.com/PratikNarkhede20/ECE571-FinalProject-DMA-Controller.git,2021-05-16 00:19:21+00:00,,0,PratikNarkhede20/ECE571-FinalProject-DMA-Controller,367753967,SystemVerilog,ECE571-FinalProject-DMA-Controller,11441,1,2023-01-28 08:05:10+00:00,[],None
212,https://github.com/charkster/adc_block_ram_spi_top.git,2021-07-16 06:28:08+00:00,"Xilinx Artix-7 FPGA design using block ram, XADC and a SPI slave (SCARF). The block ram is dual port and can be written by either SPI or XADC samples, and only read by SPI.",1,charkster/adc_block_ram_spi_top,386533668,SystemVerilog,adc_block_ram_spi_top,217,1,2024-02-15 08:17:42+00:00,"['fpga', 'cmod-a7', 'xadc', 'pll', 'spi', 'raspberry-pi', 'block-ram']",https://api.github.com/licenses/mit
213,https://github.com/kevinscorzu/Diseno-e-Implementacion-de-un-ASIP-vectorial-para-composicion-alfa.git,2021-05-02 04:04:21+00:00,Proyecto Grupal I - Arquitectura de Computadore II,0,kevinscorzu/Diseno-e-Implementacion-de-un-ASIP-vectorial-para-composicion-alfa,363562417,SystemVerilog,Diseno-e-Implementacion-de-un-ASIP-vectorial-para-composicion-alfa,15329,1,2022-06-22 22:24:02+00:00,[],None
214,https://github.com/7FM/Usb20DeviceController.git,2021-06-10 13:01:34+00:00,"Foolish try to implement an non standard Usb 2.0 Full Speed Device Controller on an ICE40 FPGA. Use at your OWN risk, no garuantees what so ever!",0,7FM/Usb20DeviceController,375699155,SystemVerilog,Usb20DeviceController,638,1,2022-11-10 08:24:46+00:00,[],https://api.github.com/licenses/gpl-3.0
215,https://github.com/EmreAlabayMasterCourses/MEH173.git,2021-05-02 15:01:03+00:00,Functional Verification of SPI Master IP using SystemVerilog,0,EmreAlabayMasterCourses/MEH173,363677695,SystemVerilog,MEH173,44,1,2022-06-10 05:34:16+00:00,[],None
216,https://github.com/SilverArrow009/alu-cores.git,2021-05-16 14:46:05+00:00,64-bit RISCV ALU cores,1,SilverArrow009/alu-cores,367907968,SystemVerilog,alu-cores,55,1,2021-06-20 21:31:13+00:00,[],https://api.github.com/licenses/gpl-3.0
217,https://github.com/VSHEV92/CycloneV_StarterKit_Leds7_UVM.git,2021-05-03 13:08:29+00:00,–¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å —Å–µ–º–∏—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º UVM,0,VSHEV92/CycloneV_StarterKit_Leds7_UVM,363933066,SystemVerilog,CycloneV_StarterKit_Leds7_UVM,13,1,2021-08-30 19:29:02+00:00,[],None
218,https://github.com/ethan12377/Digital_Circuit_Lab.git,2021-08-03 17:33:38+00:00,HWs of Digital Circuit Lab (DCLab),0,ethan12377/Digital_Circuit_Lab,392401167,SystemVerilog,Digital_Circuit_Lab,5819,1,2024-03-18 00:13:44+00:00,[],None
219,https://github.com/nitinm694/Tensor_Core_RISCV_VP.git,2021-06-17 21:03:17+00:00,RISCV Vector Extension ISA to accelerate Deep Learning,2,nitinm694/Tensor_Core_RISCV_VP,377960079,SystemVerilog,Tensor_Core_RISCV_VP,47,1,2021-09-24 13:44:17+00:00,[],https://api.github.com/licenses/gpl-3.0
220,https://github.com/YosysHQ-Docs/AppNote-120.git,2021-04-29 16:24:39+00:00,YosysHQ AppNote 120,1,YosysHQ-Docs/AppNote-120,362879307,SystemVerilog,AppNote-120,1085,1,2022-07-02 23:09:59+00:00,[],
221,https://github.com/siglabsoss/ip-verification.git,2021-06-13 22:09:35+00:00,,0,siglabsoss/ip-verification,376649484,SystemVerilog,ip-verification,2,1,2022-06-01 04:39:33+00:00,[],https://api.github.com/licenses/bsd-3-clause
222,https://github.com/RPTU-EIS/OpenTitan_with_Access_Control.git,2021-06-28 12:07:28+00:00,OpenTitan Silver Release v5 copy for security improvements,2,RPTU-EIS/OpenTitan_with_Access_Control,381017614,SystemVerilog,OpenTitan_with_Access_Control,32378,1,2023-11-09 09:41:20+00:00,[],https://api.github.com/licenses/apache-2.0
223,https://github.com/Shihhaolin/full_adder.git,2021-07-30 07:03:53+00:00,The main purpose is trying to practice my skill to build a testbench. Using task to detect the fata is correct or not,0,Shihhaolin/full_adder,390966049,SystemVerilog,full_adder,1,1,2021-10-31 20:58:34+00:00,[],None
224,https://github.com/tmarpaka/test.git,2021-08-03 16:33:04+00:00,,0,tmarpaka/test,392383072,SystemVerilog,test,4,1,2021-08-29 06:00:27+00:00,"['tlm', 'uvm']",None
225,https://github.com/redchenjs/optical_transceiver.git,2021-08-04 05:45:09+00:00,Optical Transceiver,0,redchenjs/optical_transceiver,392564876,SystemVerilog,optical_transceiver,2830,1,2022-06-05 07:52:07+00:00,[],None
226,https://github.com/Lampro-Mellon/LEC-RTL.git,2021-04-01 10:36:19+00:00,,0,Lampro-Mellon/LEC-RTL,353663669,SystemVerilog,LEC-RTL,5325,1,2024-04-05 06:32:48+00:00,[],None
227,https://github.com/mish3albaiz/cache-simulation.git,2021-05-02 02:34:27+00:00,SystemVerilog cache simulation,1,mish3albaiz/cache-simulation,363550754,SystemVerilog,cache-simulation,9,1,2022-05-23 15:48:21+00:00,[],None
228,https://github.com/gzyIDE/fputil.git,2021-04-08 03:23:44+00:00,,1,gzyIDE/fputil,355751334,SystemVerilog,fputil,8,1,2021-09-06 04:22:36+00:00,[],None
229,https://github.com/dairecant/riscv.git,2021-04-07 20:18:02+00:00,RISCV Processor Demonstrated on MAX10 FPGA Development Kit,0,dairecant/riscv,355671637,SystemVerilog,riscv,1063,1,2023-10-31 23:21:15+00:00,[],None
230,https://github.com/yangli900520/Dynamic-Neural-Network.git,2021-04-08 21:45:19+00:00,NN accelerator,0,yangli900520/Dynamic-Neural-Network,356055891,SystemVerilog,Dynamic-Neural-Network,91,1,2021-04-08 21:53:52+00:00,[],None
231,https://github.com/rag1404/APB-slave-UVM-TB.git,2021-05-02 22:29:32+00:00,UVM TB for APB Slave ,0,rag1404/APB-slave-UVM-TB,363763292,SystemVerilog,APB-slave-UVM-TB,9,1,2023-02-15 10:40:53+00:00,[],None
232,https://github.com/omer-genc/tek-ritimli-islemci.git,2021-04-19 12:29:50+00:00,,0,omer-genc/tek-ritimli-islemci,359451676,SystemVerilog,tek-ritimli-islemci,1992,1,2022-03-11 12:18:02+00:00,[],None
233,https://github.com/abdelrahmanadel2/ALU-UVM-Environment.git,2021-05-17 12:19:20+00:00,A Complete UVM environment for verifying the functionality of a simple ALU,0,abdelrahmanadel2/ALU-UVM-Environment,368174625,SystemVerilog,ALU-UVM-Environment,6,1,2023-04-11 06:38:45+00:00,[],None
234,https://github.com/namangr8/VHDL_Codes.git,2021-05-14 09:31:57+00:00,Verilog Codes for Digital Systems simulated on EDA Playground,0,namangr8/VHDL_Codes,367314940,SystemVerilog,VHDL_Codes,30,1,2021-05-15 17:58:35+00:00,[],None
235,https://github.com/cyan333/Ising_testing_FPGA.git,2021-07-26 15:27:06+00:00,,1,cyan333/Ising_testing_FPGA,389680730,SystemVerilog,Ising_testing_FPGA,6625,1,2022-11-05 03:54:59+00:00,[],None
236,https://github.com/LuisGarcia-S/Procesador-Monociclo.git,2021-07-31 03:16:23+00:00,Peque√±a implementaci√≥n en Verilog de un procesador monociclo usando la arquitectura de RISC-V,0,LuisGarcia-S/Procesador-Monociclo,391243664,SystemVerilog,Procesador-Monociclo,24,1,2023-10-11 02:08:08+00:00,[],None
237,https://github.com/uranusb/SYN_SRAM_UVM.git,2021-05-10 19:32:15+00:00,A UVM based testbench for a synchronous static RAM. ,0,uranusb/SYN_SRAM_UVM,366155097,SystemVerilog,SYN_SRAM_UVM,24,1,2023-11-25 07:59:15+00:00,[],None
238,https://github.com/Vivek-Dave/UVM_TestBench_For_Up_Counter.git,2021-04-18 08:00:30+00:00,Complete UVM TB For Verification Of Up_Counter,0,Vivek-Dave/UVM_TestBench_For_Up_Counter,359081152,SystemVerilog,UVM_TestBench_For_Up_Counter,74,1,2024-02-19 05:44:22+00:00,[],None
239,https://github.com/Vivek-Dave/UVM_TestBench_For_Sequence_Detector.git,2021-06-15 13:35:33+00:00,Complete UVM TestBench For Verification Of 1001 Sequence Detector,0,Vivek-Dave/UVM_TestBench_For_Sequence_Detector,377174716,SystemVerilog,UVM_TestBench_For_Sequence_Detector,78,1,2024-01-27 10:41:15+00:00,[],None
240,https://github.com/minchaej/intro-to-systemverilog.git,2021-06-14 11:12:02+00:00,,0,minchaej/intro-to-systemverilog,376795334,SystemVerilog,intro-to-systemverilog,7,1,2021-08-04 21:21:55+00:00,[],None
241,https://github.com/hughbyrne10/RiscV-Core.git,2021-04-27 17:56:35+00:00,"RISC-V is an open standard instruction set architecture based on established reduced instruction set computer principles. Unlike most other ISA designs, the RISC-V ISA is provided under open source licenses that do not require fees to use.",0,hughbyrne10/RiscV-Core,362204025,SystemVerilog,RiscV-Core,23,1,2023-04-12 18:51:39+00:00,[],https://api.github.com/licenses/unlicense
242,https://github.com/peterzhong2001/EE271_FinalProject.git,2021-05-13 22:42:40+00:00,,0,peterzhong2001/EE271_FinalProject,367191512,SystemVerilog,EE271_FinalProject,10210,1,2022-05-28 20:36:38+00:00,[],None
243,https://github.com/mfkiwl/SpinalHDL-FPGA-IPbox.git,2021-05-22 04:17:58+00:00,,0,mfkiwl/SpinalHDL-FPGA-IPbox,369712682,,SpinalHDL-FPGA-IPbox,9,1,2023-04-17 22:56:30+00:00,[],https://api.github.com/licenses/mit
244,https://github.com/ChaoWao/ustcy.git,2021-06-30 01:30:17+00:00,"A rv32i core cut from cv32e40p, originally ri5cY, by USTCer.",2,ChaoWao/ustcy,381541434,SystemVerilog,ustcy,309,1,2021-07-29 20:00:08+00:00,[],https://api.github.com/licenses/agpl-3.0
245,https://github.com/aurthurtang/flashing_leds.git,2021-07-30 14:02:50+00:00,First simple FPGA project on NEXYS A7 to get familiar with the board,0,aurthurtang/flashing_leds,391084767,SystemVerilog,flashing_leds,120,1,2022-05-17 02:52:49+00:00,[],None
246,https://github.com/gordonchen98/DAV.git,2021-06-13 10:45:29+00:00,Digital Audio Visualizer project from IEEE@UCLA,0,gordonchen98/DAV,376514452,SystemVerilog,DAV,22,1,2021-06-14 03:42:20+00:00,[],None
247,https://github.com/ZhangYifan01/Kirisame-Marisa-s-FPGA-Adventure.git,2021-06-04 15:08:49+00:00,"DE1_SoC based Touhou game ""Kirisame Marisa's FPGA Adventure""",0,ZhangYifan01/Kirisame-Marisa-s-FPGA-Adventure,373879381,SystemVerilog,Kirisame-Marisa-s-FPGA-Adventure,21,1,2021-09-20 20:32:18+00:00,[],https://api.github.com/licenses/mit
248,https://github.com/jiru1997/NOC-Convolutional-Neural-Network-implementation-5x5-filter-7x7-mapper-.git,2021-06-20 22:30:52+00:00,NOC Convolutional Neural Network implementation by using systemverilog,0,jiru1997/NOC-Convolutional-Neural-Network-implementation-5x5-filter-7x7-mapper-,378751680,SystemVerilog,NOC-Convolutional-Neural-Network-implementation-5x5-filter-7x7-mapper-,31,1,2024-03-22 10:35:36+00:00,[],None
249,https://github.com/Phyteon/RISCV_IPcore.git,2021-03-29 15:42:00+00:00,This repository contains files associated with the development of RISC-V IP core,1,Phyteon/RISCV_IPcore,352696335,SystemVerilog,RISCV_IPcore,7984,1,2022-01-10 21:20:25+00:00,[],https://api.github.com/licenses/mit
250,https://github.com/sathyapriyanka/AXI4_UVC_UVM.git,2021-05-24 17:14:48+00:00,,0,sathyapriyanka/AXI4_UVC_UVM,370429600,SystemVerilog,AXI4_UVC_UVM,525,1,2023-06-29 21:10:56+00:00,[],None
251,https://github.com/bmartini/verilog-cdc.git,2021-05-17 02:10:44+00:00,Selection of Clock Domain Crossing modules,1,bmartini/verilog-cdc,368029387,SystemVerilog,verilog-cdc,2,1,2022-04-21 00:27:27+00:00,[],https://api.github.com/licenses/mit
252,https://github.com/vinodsake/NetworkSwitch-Verification.git,2021-06-16 17:39:07+00:00,Design and Verify a Network Switch using UVM Testbench,0,vinodsake/NetworkSwitch-Verification,377579373,SystemVerilog,NetworkSwitch-Verification,7,1,2022-02-18 16:37:11+00:00,[],None
253,https://github.com/erik-fox/AXIProtocol-Verification.git,2021-05-25 22:15:18+00:00,,0,erik-fox/AXIProtocol-Verification,370841008,SystemVerilog,AXIProtocol-Verification,1562,1,2023-04-07 18:01:58+00:00,[],None
254,https://github.com/CanAvsar/CS223Labs.git,2021-04-25 19:36:32+00:00,Bilkent University 2020-2021 Fall - My CS223 Lab Codes,0,CanAvsar/CS223Labs,361521114,SystemVerilog,CS223Labs,19878,1,2022-12-20 02:21:48+00:00,[],None
255,https://github.com/18nygara/QuadCopter_Driver.git,2021-04-30 17:46:03+00:00,Custom designed quadcopter implementation / driver. Contains verilog for remote and actual Quadcopter,0,18nygara/QuadCopter_Driver,363216905,SystemVerilog,QuadCopter_Driver,192,1,2021-04-30 17:56:56+00:00,[],None
256,https://github.com/RevanthNandamuri1341b0/Router-4x4-Verification-Environment.git,2021-07-28 16:04:52+00:00,Development UVM Verification Environment for Router 4x4 DUT.,0,RevanthNandamuri1341b0/Router-4x4-Verification-Environment,390412915,SystemVerilog,Router-4x4-Verification-Environment,22,1,2022-02-18 16:07:23+00:00,[],None
257,https://github.com/jiru1997/NOC-Convolutional-Neural-Network-implementation-with-one-CONV-layer.git,2021-06-20 22:56:29+00:00,NOC-Convolutional-Neural-Network-implementation with one CONV layer,0,jiru1997/NOC-Convolutional-Neural-Network-implementation-with-one-CONV-layer,378754639,SystemVerilog,NOC-Convolutional-Neural-Network-implementation-with-one-CONV-layer,22,1,2024-03-22 10:35:38+00:00,[],None
258,https://github.com/felipesqra/LOAC.git,2021-04-19 13:18:35+00:00,Atividades da cadeira de Laborat√≥rio de Organiza√ß√£o e Arquitetura de Computadores da UFCG.,1,felipesqra/LOAC,359466591,SystemVerilog,LOAC,214,1,2021-11-01 00:49:28+00:00,"['systemverilog', 'fpga', 'loac', 'hacktoberfest']",None
259,https://github.com/KelvinVale/tcc_RAL.git,2021-05-03 17:46:41+00:00,,0,KelvinVale/tcc_RAL,364013339,SystemVerilog,tcc_RAL,8486,1,2023-07-13 03:54:49+00:00,[],None
260,https://github.com/IEEE-SSCS/AES.git,2021-04-17 21:54:07+00:00,,4,IEEE-SSCS/AES,358990045,SystemVerilog,AES,275,1,2021-10-26 20:00:20+00:00,"['aes', 'encryption', 'decryption', 'hardware']",None
261,https://github.com/Sash-github-account/linked_list_rtl.git,2021-06-18 02:44:23+00:00,A SystemVerilog / verilog RTL implementation of linked list with a test bench (W.I.P),1,Sash-github-account/linked_list_rtl,378015510,SystemVerilog,linked_list_rtl,570,1,2022-07-08 17:10:21+00:00,[],https://api.github.com/licenses/gpl-3.0
262,https://github.com/shariethernet/synthesis2.git,2021-06-04 17:59:23+00:00,,0,shariethernet/synthesis2,373922435,SystemVerilog,synthesis2,40,1,2021-08-27 06:11:27+00:00,[],None
263,https://github.com/imamura-slab/PR_demo.git,2021-05-07 01:48:45+00:00,Intel FPGA ÂãïÁöÑÂÜçÊßãÊàê„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´,0,imamura-slab/PR_demo,365084893,SystemVerilog,PR_demo,16653,1,2021-06-10 16:31:39+00:00,[],None
264,https://github.com/edoardo-monnetti/VGA.git,2021-07-06 14:10:15+00:00,Verilog code for VGA protocol,0,edoardo-monnetti/VGA,383491349,SystemVerilog,VGA,39895,1,2023-11-04 12:34:48+00:00,[],None
265,https://github.com/villyye97/EE-469-HW1.git,2021-08-07 16:10:28+00:00,"Lab1 for EE 469. to design the basic structure of an assembly language, such as logic gates, DFFs and decoder and encoders. ",0,villyye97/EE-469-HW1,393730801,SystemVerilog,EE-469-HW1,5,1,2021-10-15 18:41:06+00:00,[],None
266,https://github.com/HIeart-Vael/KannyMIPS.git,2021-08-07 07:57:26+00:00,ÊîØÊåÅÈÉ®ÂàÜMIPS32Êåá‰ª§ÈõÜÁöÑ‰∫îÁ∫ßÊµÅÊ∞¥CPU,0,HIeart-Vael/KannyMIPS,393618984,SystemVerilog,KannyMIPS,857,1,2021-08-07 10:00:42+00:00,[],None
267,https://github.com/Shihhaolin/mux-4to1.git,2021-08-01 09:48:53+00:00,Practice design a testbench of mux 4to1.,0,Shihhaolin/mux-4to1,391587604,SystemVerilog,mux-4to1,1,1,2021-10-31 20:58:31+00:00,[],None
268,https://github.com/Shihhaolin/Arithmetic-Logic-Unit.git,2021-08-02 05:19:43+00:00,Practice design a testbench of Arithmetic Logic Unit(ALU).,0,Shihhaolin/Arithmetic-Logic-Unit,391824038,SystemVerilog,Arithmetic-Logic-Unit,2,1,2021-10-31 20:58:30+00:00,[],None
269,https://github.com/deoregaurav92/Parallel-to-Serial-Interface-using-Asynch-FIFO-.git,2021-07-10 23:24:52+00:00,Low Power parallel to serial interface using asynchronous FIFO ,1,deoregaurav92/Parallel-to-Serial-Interface-using-Asynch-FIFO-,384817657,SystemVerilog,Parallel-to-Serial-Interface-using-Asynch-FIFO-,2017,1,2023-11-23 03:31:10+00:00,[],None
270,https://github.com/ensaremirerol/DIR-ARM.git,2021-06-25 17:00:24+00:00,,0,ensaremirerol/DIR-ARM,380303688,SystemVerilog,DIR-ARM,169,1,2021-08-03 01:58:58+00:00,[],https://api.github.com/licenses/gpl-3.0
271,https://github.com/bhargavasai222/bhargav12.git,2021-04-20 04:34:42+00:00,,0,bhargavasai222/bhargav12,359684598,SystemVerilog,bhargav12,160,0,2021-04-20 04:34:55+00:00,[],None
272,https://github.com/kat066/cpuOptimization.git,2021-04-22 21:06:17+00:00,,0,kat066/cpuOptimization,360681712,SystemVerilog,cpuOptimization,321810,0,2021-06-08 23:30:17+00:00,[],None
273,https://github.com/durganila/Verification-of-AMBA-AXI4-Lite-Protocol.git,2021-04-27 03:55:46+00:00,,0,durganila/Verification-of-AMBA-AXI4-Lite-Protocol,361974018,SystemVerilog,Verification-of-AMBA-AXI4-Lite-Protocol,9196,0,2021-06-05 06:07:32+00:00,[],None
274,https://github.com/hao310rui140326/pe_array_sim.git,2021-04-27 06:18:55+00:00,,0,hao310rui140326/pe_array_sim,362002387,SystemVerilog,pe_array_sim,17425,0,2021-05-07 03:18:34+00:00,[],None
275,https://github.com/BarronStack/ELO212_labdigitales.git,2021-05-05 18:52:41+00:00,Repositorio con sesiones y proyectos asociados al ramo ELO212. Laboratorio de Electr√≥nica Digital 2021-1,0,BarronStack/ELO212_labdigitales,364676862,SystemVerilog,ELO212_labdigitales,3850,0,2021-06-25 03:05:42+00:00,[],None
276,https://github.com/HappyChuckProgramming/SystemVerilog.git,2021-05-08 05:58:09+00:00,,0,HappyChuckProgramming/SystemVerilog,365431880,SystemVerilog,SystemVerilog,1,0,2021-05-08 06:02:24+00:00,[],None
277,https://github.com/naomimotwani98/ibex-sv.git,2021-05-05 19:59:51+00:00,,0,naomimotwani98/ibex-sv,364691854,SystemVerilog,ibex-sv,113,0,2021-05-05 20:24:11+00:00,[],None
278,https://github.com/sunbanett40/SystemVerilog-Programming.git,2021-04-24 13:03:09+00:00,"Not technically programming because SV is a description language, but it keeps consistent naming.",0,sunbanett40/SystemVerilog-Programming,361163277,SystemVerilog,SystemVerilog-Programming,1889,0,2021-04-24 13:04:49+00:00,[],None
279,https://github.com/Vivek-Dave/UVM_TestBench_For_Programmable_Counter.git,2021-05-04 06:58:57+00:00,Complete UVM Testbench For Verification Of Programmable Counter,0,Vivek-Dave/UVM_TestBench_For_Programmable_Counter,364167599,SystemVerilog,UVM_TestBench_For_Programmable_Counter,11,0,2021-05-04 07:02:35+00:00,[],None
280,https://github.com/Embedded-Tinkerer/EECE6540.git,2021-05-17 12:19:59+00:00,Heterogeneous Computing,0,Embedded-Tinkerer/EECE6540,368174840,SystemVerilog,EECE6540,448343,0,2021-07-31 06:14:04+00:00,[],None
281,https://github.com/huntingt/6111-final-project.git,2021-05-16 20:20:14+00:00,,0,huntingt/6111-final-project,367977481,SystemVerilog,6111-final-project,124,0,2021-06-04 15:35:29+00:00,[],None
282,https://github.com/JakeA42/Otter_qHDVGA.git,2021-03-31 07:08:56+00:00,,0,JakeA42/Otter_qHDVGA,353260804,SystemVerilog,Otter_qHDVGA,18,0,2022-04-11 01:55:59+00:00,[],https://api.github.com/licenses/mit
283,https://github.com/TishukBogdana/dijkstra_hw.git,2021-04-14 17:35:06+00:00,,0,TishukBogdana/dijkstra_hw,357989893,SystemVerilog,dijkstra_hw,16,0,2021-07-24 09:21:23+00:00,[],None
284,https://github.com/juan230500/PROYECTO-DIGITALES.git,2021-06-03 15:48:04+00:00,,0,juan230500/PROYECTO-DIGITALES,373561723,SystemVerilog,PROYECTO-DIGITALES,7985,0,2021-06-13 06:04:48+00:00,[],None
285,https://github.com/rjmdhr/RTCSV.git,2021-06-14 21:52:02+00:00,A Real Time Clock in System Verilog,0,rjmdhr/RTCSV,376964906,SystemVerilog,RTCSV,666,0,2021-07-13 23:17:17+00:00,[],None
286,https://github.com/tsubaki-8192/cultura.git,2021-05-24 17:48:17+00:00,„ÅØ„Åò„ÇÅ„Å¶„ÅÆCPUË®≠Ë®à,0,tsubaki-8192/cultura,370438628,SystemVerilog,cultura,23,0,2021-05-24 18:02:26+00:00,[],None
287,https://github.com/cuneytbalci/riscv_design_project.git,2021-05-28 16:52:33+00:00,,0,cuneytbalci/riscv_design_project,371765295,SystemVerilog,riscv_design_project,3093,0,2021-05-28 18:57:32+00:00,[],None
288,https://github.com/aurthurtang/priority_arbiter.git,2021-06-30 22:32:03+00:00,This is a verilog design for a priority arbiter with N number of requests,0,aurthurtang/priority_arbiter,381848172,SystemVerilog,priority_arbiter,2,0,2021-06-30 22:34:03+00:00,[],None
289,https://github.com/tishi43/bitonic_verilog.git,2021-07-01 02:12:13+00:00,,1,tishi43/bitonic_verilog,381883412,SystemVerilog,bitonic_verilog,14621,0,2021-07-05 03:52:52+00:00,[],None
290,https://github.com/adnanashraf17501/uvm_mux.git,2021-05-30 06:17:38+00:00,,0,adnanashraf17501/uvm_mux,372138987,SystemVerilog,uvm_mux,155,0,2021-05-30 06:18:56+00:00,[],None
291,https://github.com/bzeeno/ddfs.git,2021-06-24 08:10:19+00:00,Direct Digital Frequency Synthesis Module,0,bzeeno/ddfs,379851589,SystemVerilog,ddfs,231,0,2021-07-01 21:47:24+00:00,[],None
292,https://github.com/MohamedOsamaAhmed/mips-processor.git,2021-07-19 04:59:04+00:00,,0,MohamedOsamaAhmed/mips-processor,387343902,SystemVerilog,mips-processor,23,0,2021-07-19 05:38:33+00:00,[],None
293,https://github.com/CAGeng/MIPS-pipeline.git,2021-07-17 08:57:50+00:00,,0,CAGeng/MIPS-pipeline,386888019,SystemVerilog,MIPS-pipeline,4893,0,2021-07-17 08:59:01+00:00,[],None
294,https://github.com/Vilanya/SIT329--Week-2.git,2021-07-31 15:23:00+00:00,,0,Vilanya/SIT329--Week-2,391392490,SystemVerilog,SIT329--Week-2,1,0,2021-07-31 15:24:32+00:00,[],None
295,https://github.com/villyye97/EE-475-HW3.git,2021-08-07 16:21:36+00:00,Basic assembly commands testing. ,0,villyye97/EE-475-HW3,393733401,SystemVerilog,EE-475-HW3,19,0,2021-08-07 16:26:08+00:00,[],None
296,https://github.com/Santos-Everton/problema1-gcet231-hamming.git,2021-07-20 13:04:59+00:00,Implementa√ß√£o do c√≥digo de Hamming para detec√ß√£o de erros em transmiss√µes de dados.,0,Santos-Everton/problema1-gcet231-hamming,387794583,SystemVerilog,problema1-gcet231-hamming,218,0,2021-07-22 19:32:04+00:00,[],https://api.github.com/licenses/mit
297,https://github.com/HeRCLab/pebb-routing.git,2021-07-19 19:37:15+00:00,RTL code implementing routing and relating functionality for the PEBB project,0,HeRCLab/pebb-routing,387575024,SystemVerilog,pebb-routing,21,0,2022-02-11 20:38:00+00:00,[],None
298,https://github.com/flaviens/zero_width_issue.git,2021-07-26 13:45:54+00:00,,0,flaviens/zero_width_issue,389647969,SystemVerilog,zero_width_issue,13,0,2021-07-26 13:47:04+00:00,[],None
299,https://github.com/SemperAnte/firdir.git,2021-07-27 09:49:29+00:00,HDL description of digital filter with Finite Impulse Response (FIR).,0,SemperAnte/firdir,389929675,SystemVerilog,firdir,23,0,2021-09-07 15:00:52+00:00,[],None
300,https://github.com/flaviens/yosys_packed_struct_issue.git,2021-08-03 08:33:36+00:00,,0,flaviens/yosys_packed_struct_issue,392246957,SystemVerilog,yosys_packed_struct_issue,0,0,2021-08-03 08:34:11+00:00,[],None
301,https://github.com/evanmladina/verilog.git,2021-07-23 22:16:37+00:00,Contains verilog for ARM processor and FFT with a Butterworth filter.,0,evanmladina/verilog,388939418,SystemVerilog,verilog,31,0,2021-12-08 02:10:14+00:00,[],None
302,https://github.com/sotiris1982/embedded_systems.git,2021-06-10 08:31:10+00:00,,0,sotiris1982/embedded_systems,375626755,SystemVerilog,embedded_systems,15,0,2024-01-29 12:22:23+00:00,[],None
303,https://github.com/anaszameer/UVM-adder_example.git,2021-07-16 06:36:43+00:00,,0,anaszameer/UVM-adder_example,386535735,,UVM-adder_example,9,0,2021-07-16 06:43:32+00:00,[],None
304,https://github.com/slayterteal/Cache-Controller-Implementation.git,2021-04-08 23:48:33+00:00,,0,slayterteal/Cache-Controller-Implementation,356078196,SystemVerilog,Cache-Controller-Implementation,1058,0,2021-04-28 14:01:55+00:00,[],None
305,https://github.com/k1rill-fedoseev/fpga_arbiter.git,2021-04-07 17:04:14+00:00,,0,k1rill-fedoseev/fpga_arbiter,355622627,SystemVerilog,fpga_arbiter,95,0,2021-04-11 15:52:07+00:00,[],None
306,https://github.com/Asfagus/CRC-Design-Verification.git,2021-04-07 04:29:45+00:00,,1,Asfagus/CRC-Design-Verification,355411848,SystemVerilog,CRC-Design-Verification,10776,0,2021-06-01 06:29:38+00:00,[],None
307,https://github.com/zzhang681/273proj.git,2021-04-11 22:14:02+00:00,,0,zzhang681/273proj,356991230,SystemVerilog,273proj,114,0,2021-11-22 18:55:35+00:00,[],None
308,https://github.com/zceeudd/ELEC0036---Microprocessor-1S.git,2021-04-13 20:27:06+00:00,,0,zceeudd/ELEC0036---Microprocessor-1S,357679952,SystemVerilog,ELEC0036---Microprocessor-1S,14,0,2021-04-13 20:30:41+00:00,[],None
309,https://github.com/mlipasti/sparse.git,2021-04-18 15:19:53+00:00,,0,mlipasti/sparse,359179113,SystemVerilog,sparse,5,0,2021-04-28 00:46:31+00:00,[],None
310,https://github.com/giulio-naggi/isa33Lab4.git,2021-04-08 16:56:34+00:00,,0,giulio-naggi/isa33Lab4,355986418,SystemVerilog,isa33Lab4,19,0,2021-04-11 09:48:29+00:00,[],None
311,https://github.com/DorianXGH/CVA6-concours.git,2021-04-23 19:41:03+00:00,,0,DorianXGH/CVA6-concours,360988740,SystemVerilog,CVA6-concours,39621,0,2021-04-26 19:38:50+00:00,[],
312,https://github.com/beezow/ECE_385_final.git,2021-04-21 22:53:14+00:00,,0,beezow/ECE_385_final,360327344,SystemVerilog,ECE_385_final,63,0,2021-05-11 19:03:48+00:00,[],None
313,https://github.com/bansil-vaghasiya/UVM-based-functional-verification-of-OFDM-transmitter-module.git,2021-06-03 23:23:47+00:00,,0,bansil-vaghasiya/UVM-based-functional-verification-of-OFDM-transmitter-module,373667260,SystemVerilog,UVM-based-functional-verification-of-OFDM-transmitter-module,4,0,2021-06-03 23:24:33+00:00,[],None
314,https://github.com/Knguyen2107/ECE-271-Design-Project.git,2021-06-04 16:55:26+00:00,,0,Knguyen2107/ECE-271-Design-Project,373907373,,ECE-271-Design-Project,5,0,2021-06-04 16:55:26+00:00,[],None
315,https://github.com/Cra2yPierr0t/cprv64g_v1.git,2021-04-26 11:41:10+00:00,,0,Cra2yPierr0t/cprv64g_v1,361728460,SystemVerilog,cprv64g_v1,61,0,2021-06-08 16:12:30+00:00,[],None
316,https://github.com/shalinibare/OurProject3.git,2021-04-28 07:13:03+00:00,,0,shalinibare/OurProject3,362373145,SystemVerilog,OurProject3,3896,0,2021-04-28 07:13:30+00:00,[],https://api.github.com/licenses/mit
317,https://github.com/pabmars2/UART.git,2021-04-28 14:30:24+00:00,,0,pabmars2/UART,362498519,SystemVerilog,UART,13405,0,2021-07-02 14:56:08+00:00,[],None
318,https://github.com/marinamoheb/verlog.git,2021-05-26 02:22:10+00:00,,0,marinamoheb/verlog,370882305,SystemVerilog,verlog,1276,0,2021-05-26 02:25:46+00:00,[],None
319,https://github.com/fgs76100/UVM_Simplified.git,2021-05-29 04:15:55+00:00,A quick tutorial for building a UVM framework ,1,fgs76100/UVM_Simplified,371877788,SystemVerilog,UVM_Simplified,124,0,2021-10-02 19:48:12+00:00,[],None
320,https://github.com/Alen302/SystemVerilog-for-HDLBits.git,2021-05-26 17:26:09+00:00,SystemVerilog for HDLBits,0,Alen302/SystemVerilog-for-HDLBits,371116895,SystemVerilog,SystemVerilog-for-HDLBits,56,0,2022-11-05 03:57:13+00:00,[],None
321,https://github.com/adem-y/Single-Cycle-Processor-Design.git,2021-06-12 21:00:20+00:00,The project was designed in Quartus Prime environment using SystemVerilog and simulated with ModelSim. We designed a single rhythm processor based on a simplified instruction set.,0,adem-y/Single-Cycle-Processor-Design,376382950,SystemVerilog,Single-Cycle-Processor-Design,8,0,2021-06-12 22:17:49+00:00,[],None
322,https://github.com/0bs3n/glitcherPlatform.git,2021-04-03 00:11:07+00:00,Source code for glitching/fault injection platform for the Arty A7/Artix 7 FPGA,1,0bs3n/glitcherPlatform,354162155,SystemVerilog,glitcherPlatform,12,0,2021-04-06 19:56:20+00:00,[],None
323,https://github.com/yagmurx/elm234_FPGA.git,2021-04-15 15:35:16+00:00,Homeworks and projects of ELM234 Logic Circuit Design Lesson.,0,yagmurx/elm234_FPGA,358309282,SystemVerilog,elm234_FPGA,3,0,2021-11-02 06:15:45+00:00,[],None
324,https://github.com/VikBelt/Galaxian-385.git,2021-04-16 19:25:53+00:00,ECE 385 Final Project,0,VikBelt/Galaxian-385,358699484,SystemVerilog,Galaxian-385,1075,0,2021-05-17 22:17:40+00:00,[],None
325,https://github.com/HemP97/Sample.git,2021-05-07 13:24:17+00:00,Sample project to run RTL lint and simulation using open tool,0,HemP97/Sample,365241212,SystemVerilog,Sample,2,0,2021-05-09 04:33:51+00:00,[],None
326,https://github.com/emilijav-97/SV_UVM_training.git,2021-05-18 11:42:13+00:00,,0,emilijav-97/SV_UVM_training,368508236,SystemVerilog,SV_UVM_training,98,0,2021-06-19 06:43:21+00:00,[],None
327,https://github.com/pabmars2/avalonRiscV.git,2021-04-02 18:37:26+00:00,Proyecto de adaptaci√≥n de un RISC-V a la plataforma Avalon,0,pabmars2/avalonRiscV,354103693,SystemVerilog,avalonRiscV,332048,0,2021-07-02 19:32:27+00:00,[],None
328,https://github.com/GeorgeKef-School-Projects/edge_detection.git,2021-03-29 18:56:19+00:00,In this project we implement an edge detection algorithm that consists of 2 steps. The algorithm is base on cellular automata. In the repository you can also find a detailed report. Co-Authors: Giorgos Kefalas and Dimitris Karagiannis Karousos,0,GeorgeKef-School-Projects/edge_detection,352753254,SystemVerilog,edge_detection,294,0,2022-05-24 17:08:18+00:00,[],None
329,https://github.com/sotiris1982/embedded_systems_pico_blaze.git,2021-06-10 10:38:01+00:00,,0,sotiris1982/embedded_systems_pico_blaze,375661146,SystemVerilog,embedded_systems_pico_blaze,12,0,2021-06-10 18:11:31+00:00,[],None
330,https://github.com/jyhi/step-peripherals.git,2021-06-09 14:21:02+00:00,Step FPGA Development Board Peripheral Export Module.,0,jyhi/step-peripherals,375381765,SystemVerilog,step-peripherals,12,0,2021-08-07 11:52:45+00:00,[],
331,https://github.com/Peegggy/cpen311-lab3.git,2021-07-09 19:09:04+00:00,,0,Peegggy/cpen311-lab3,384529207,SystemVerilog,cpen311-lab3,554,0,2021-07-09 19:11:55+00:00,[],None
332,https://github.com/EpsLeonid/Student-2022.git,2021-08-02 09:30:59+00:00,,1,EpsLeonid/Student-2022,391888716,SystemVerilog,Student-2022,24015,0,2022-08-29 07:31:33+00:00,[],None
333,https://github.com/spicker23/UART.git,2021-07-29 17:27:19+00:00,,0,spicker23/UART,390802219,SystemVerilog,UART,5,0,2021-09-07 13:11:05+00:00,[],None
334,https://github.com/kentiscool/processor.git,2021-08-11 06:37:39+00:00,,0,kentiscool/processor,394888237,SystemVerilog,processor,11,0,2021-08-12 02:52:25+00:00,[],None
335,https://github.com/ConsciousMachines/SAP.git,2021-07-12 04:21:19+00:00,my interpretations of SAP from Albert Paul Malvino's digital design textbook,0,ConsciousMachines/SAP,385123134,SystemVerilog,SAP,547,0,2024-04-02 22:36:05+00:00,[],None
336,https://github.com/GCET231/tutorial4-criando-projeto-quartus-prime.git,2021-04-22 17:57:12+00:00,Tutorial para cria√ß√£o de projetos no Quartus Prime Lite Editon.,0,GCET231/tutorial4-criando-projeto-quartus-prime,360636765,SystemVerilog,tutorial4-criando-projeto-quartus-prime,30,0,2021-04-25 12:26:25+00:00,"['quartus-prime', 'criar-um-projeto']",None
337,https://github.com/pabmars2/TFG-RISC-V-AVALON.git,2021-04-27 11:26:00+00:00,,0,pabmars2/TFG-RISC-V-AVALON,362086890,SystemVerilog,TFG-RISC-V-AVALON,281008,0,2021-06-02 15:17:46+00:00,[],None
338,https://github.com/Mengyan2000/ECE385_Labs.git,2021-04-13 16:27:25+00:00,This is all code of lab2 to lab7 from ECE385 at UIUC,0,Mengyan2000/ECE385_Labs,357619614,SystemVerilog,ECE385_Labs,863,0,2023-01-28 06:42:22+00:00,[],None
339,https://github.com/miura-katsuyoshi/counter_with_trigout.git,2021-04-11 01:01:07+00:00,Parameterized counter with trigger output in SystemVerilog,0,miura-katsuyoshi/counter_with_trigout,356735014,SystemVerilog,counter_with_trigout,22,0,2021-04-11 02:46:54+00:00,[],None
340,https://github.com/tinozzz/EECS_4612_Project_2_Group_4.git,2021-04-13 07:52:33+00:00,,0,tinozzz/EECS_4612_Project_2_Group_4,357468861,SystemVerilog,EECS_4612_Project_2_Group_4,9300,0,2021-04-14 00:52:42+00:00,[],None
341,https://github.com/kougioumis/MIPS-32bit.git,2021-04-26 10:01:41+00:00,,0,kougioumis/MIPS-32bit,361701503,SystemVerilog,MIPS-32bit,4020,0,2021-05-25 13:06:01+00:00,[],None
342,https://github.com/alainlou/synth.git,2021-04-05 01:23:59+00:00,"""Cool to be square wave"" - @JeriEllsworth",0,alainlou/synth,354684277,SystemVerilog,synth,40413,0,2021-08-20 16:12:07+00:00,[],None
343,https://github.com/17111748/18847_joebertli.git,2021-04-05 02:07:55+00:00,,0,17111748/18847_joebertli,354691365,SystemVerilog,18847_joebertli,1369,0,2021-05-13 15:34:36+00:00,[],None
344,https://github.com/mrschnabel/MazeRunner.git,2021-04-02 15:24:40+00:00,A robot that can follow reflective tape through an obstacle course.  Made using System Verilog.,0,mrschnabel/MazeRunner,354057890,SystemVerilog,MazeRunner,25,0,2021-04-02 15:27:13+00:00,[],None
345,https://github.com/GabrielMonteroSierra/8-bit-ALU.git,2021-05-30 02:23:34+00:00,This project was coded in Verilog/SystemVerilog on Fall 2020.,0,GabrielMonteroSierra/8-bit-ALU,372106580,SystemVerilog,8-bit-ALU,9,0,2021-05-30 03:10:42+00:00,[],None
346,https://github.com/62050219/intership.git,2021-05-20 16:52:48+00:00,,0,62050219/intership,369278387,SystemVerilog,intership,25,0,2021-05-20 17:28:24+00:00,[],None
347,https://github.com/nkaranam178/Cryptographic-Accelerator.git,2021-05-21 03:36:31+00:00,,0,nkaranam178/Cryptographic-Accelerator,369404244,SystemVerilog,Cryptographic-Accelerator,138,0,2021-05-21 03:37:36+00:00,[],None
348,https://github.com/deveshasnani/UVM_work.git,2021-06-04 08:48:33+00:00,uvm projects and lab sessions ,0,deveshasnani/UVM_work,373779011,SystemVerilog,UVM_work,35,0,2021-06-28 07:53:48+00:00,[],None
349,https://github.com/MEETMS7/tue.git,2021-05-16 09:23:32+00:00,,0,MEETMS7/tue,367835311,SystemVerilog,tue,70,0,2021-05-16 09:23:51+00:00,[],https://api.github.com/licenses/apache-2.0
350,https://github.com/karthik-0398/arm_soc.git,2021-05-02 07:30:46+00:00,,0,karthik-0398/arm_soc,363592774,SystemVerilog,arm_soc,1928,0,2021-05-02 13:13:28+00:00,[],https://api.github.com/licenses/mit
351,https://github.com/Vivek-Dave/UVM_TestBench_For_Magnitude_Comparator.git,2021-05-31 11:23:01+00:00,Complete UVM TestBench For Verification Of Magnitude Comparator,0,Vivek-Dave/UVM_TestBench_For_Magnitude_Comparator,372481326,SystemVerilog,UVM_TestBench_For_Magnitude_Comparator,86,0,2021-05-31 11:27:49+00:00,[],None
352,https://github.com/Vivek-Dave/UVM_TestBench_For_Frequency_Divider.git,2021-06-08 04:24:46+00:00,Complete UVM TestBench For Verification Of Frequency Divider ,0,Vivek-Dave/UVM_TestBench_For_Frequency_Divider,374879713,SystemVerilog,UVM_TestBench_For_Frequency_Divider,82,0,2021-06-08 04:31:12+00:00,[],None
353,https://github.com/yolannel/RTL-design-Modelsim.git,2021-05-26 08:46:48+00:00,,0,yolannel/RTL-design-Modelsim,370966573,SystemVerilog,RTL-design-Modelsim,8,0,2021-05-26 08:52:01+00:00,[],https://api.github.com/licenses/mit
354,https://github.com/aurthurtang/round_robin_arbitor.git,2021-07-14 17:04:42+00:00,This is a simple illustration of round robin arbitration using single fixed priority.  ,0,aurthurtang/round_robin_arbitor,386015725,SystemVerilog,round_robin_arbitor,2,0,2021-07-14 17:12:56+00:00,[],None
355,https://github.com/aurthurtang/BreakTheCodeGame.git,2021-08-11 05:49:49+00:00,This is a game created using Nexys A7 FPGA board,0,aurthurtang/BreakTheCodeGame,394877276,SystemVerilog,BreakTheCodeGame,9,0,2021-08-18 05:45:33+00:00,[],None
356,https://github.com/eilims/8BitAlu.git,2021-06-09 17:50:54+00:00,,0,eilims/8BitAlu,375443879,SystemVerilog,8BitAlu,43,0,2021-06-09 17:53:36+00:00,[],None
357,https://github.com/Vivek-Dave/UVM_TestBench_For_Priority_Encoder.git,2021-06-12 03:52:45+00:00,Complete UVM TestBench For Verification Of Priority Encoder,0,Vivek-Dave/UVM_TestBench_For_Priority_Encoder,376196369,SystemVerilog,UVM_TestBench_For_Priority_Encoder,84,0,2021-06-12 03:57:31+00:00,[],None
358,https://github.com/komaljaved-lm/LM_APB_GPIO_IP.git,2021-06-17 05:03:41+00:00,,0,komaljaved-lm/LM_APB_GPIO_IP,377710499,SystemVerilog,LM_APB_GPIO_IP,420,0,2021-06-29 04:47:49+00:00,[],None
359,https://github.com/artbdev/fpga-embedded-design-verilog.git,2021-06-22 03:22:20+00:00,Verilog design principles for circuit design. ,0,artbdev/fpga-embedded-design-verilog,379129106,SystemVerilog,fpga-embedded-design-verilog,2,0,2021-06-22 03:45:09+00:00,[],None
360,https://github.com/Ting-Wei-Chen/dcs_final.git,2021-07-01 23:15:09+00:00,,0,Ting-Wei-Chen/dcs_final,382177719,SystemVerilog,dcs_final,610,0,2021-09-23 10:00:41+00:00,[],None
361,https://github.com/ignaciogodoy/test_elo212.git,2021-07-06 03:29:00+00:00,,1,ignaciogodoy/test_elo212,383328085,SystemVerilog,test_elo212,5,0,2021-08-03 03:33:15+00:00,[],None
362,https://github.com/usmanziak/UVM-Conversion-Project.git,2021-07-08 16:56:57+00:00,,0,usmanziak/UVM-Conversion-Project,384193278,SystemVerilog,UVM-Conversion-Project,57,0,2021-07-13 12:48:11+00:00,[],None
363,https://github.com/metzkorn/uvm_demo1.git,2021-07-21 21:13:39+00:00,Simple UVM for a cache.,1,metzkorn/uvm_demo1,388247254,SystemVerilog,uvm_demo1,8,0,2021-07-21 21:22:02+00:00,[],None
364,https://github.com/AAdvari/ARM-Microprogrammed-Multicycle-Processor.git,2021-07-26 16:14:33+00:00,Multicycle ARM processor using microprogrammed control unit,0,AAdvari/ARM-Microprogrammed-Multicycle-Processor,389695091,SystemVerilog,ARM-Microprogrammed-Multicycle-Processor,5,0,2021-07-26 16:23:33+00:00,[],None
365,https://github.com/zzhang681/ee297github.git,2021-08-03 04:26:45+00:00,111,0,zzhang681/ee297github,392188025,SystemVerilog,ee297github,273469,0,2021-12-02 23:09:52+00:00,[],None
366,https://github.com/Gehad-16/FP-Multiplier.git,2021-07-11 21:10:03+00:00,,0,Gehad-16/FP-Multiplier,385052674,SystemVerilog,FP-Multiplier,2105,0,2021-07-11 21:12:15+00:00,[],None
367,https://github.com/troyguo/verify_practice.git,2021-07-09 09:06:22+00:00,wechat public account verify_practice codebase,0,troyguo/verify_practice,384382091,SystemVerilog,verify_practice,8,0,2021-07-10 06:11:45+00:00,"['uvm', 'systemverilog', 'formal-verification', 'emulation']",https://api.github.com/licenses/apache-2.0
368,https://github.com/Rian-Borah/SysVerilog-HarrisDDCA.git,2021-07-13 11:52:25+00:00,,0,Rian-Borah/SysVerilog-HarrisDDCA,385586370,SystemVerilog,SysVerilog-HarrisDDCA,10,0,2021-07-13 12:55:14+00:00,[],None
369,https://github.com/HarunaIppai/ECE_385_Lab7.git,2021-04-17 02:14:27+00:00,,0,HarunaIppai/ECE_385_Lab7,358764580,SystemVerilog,ECE_385_Lab7,16,0,2021-04-17 02:15:15+00:00,[],None
370,https://github.com/jehosuaa/practica2.git,2021-04-13 02:10:34+00:00,,0,jehosuaa/practica2,357396429,SystemVerilog,practica2,31113,0,2021-10-08 15:47:31+00:00,[],None
371,https://github.com/zceeudd/ELEC0036---Microprocessor-1P-.git,2021-04-13 17:34:50+00:00,,0,zceeudd/ELEC0036---Microprocessor-1P-,357638048,SystemVerilog,ELEC0036---Microprocessor-1P-,25,0,2021-04-13 20:43:07+00:00,[],None
372,https://github.com/zceeudd/ELEC0036---Microprocessor-GSH.git,2021-04-14 12:03:18+00:00,,0,zceeudd/ELEC0036---Microprocessor-GSH,357890308,SystemVerilog,ELEC0036---Microprocessor-GSH,27,0,2021-04-14 12:09:27+00:00,[],None
373,https://github.com/cchen82/EE478_LABS.git,2021-04-21 01:05:04+00:00,UB Course EE 478 Hardware Descriptive Language Lab assignments,0,cchen82/EE478_LABS,359993282,SystemVerilog,EE478_LABS,4804,0,2021-04-21 01:06:10+00:00,[],None
374,https://github.com/cjcordosi/417-MACC_Accelerator.git,2021-04-21 18:40:06+00:00,,0,cjcordosi/417-MACC_Accelerator,360271373,SystemVerilog,417-MACC_Accelerator,77,0,2021-04-21 18:40:56+00:00,[],None
375,https://github.com/allRisc/RISC-V.git,2021-05-07 00:45:30+00:00,,0,allRisc/RISC-V,365073823,SystemVerilog,RISC-V,1145,0,2021-10-18 16:52:42+00:00,[],https://api.github.com/licenses/gpl-3.0
376,https://github.com/ahmeterdem9603/MEH173_project.git,2021-05-09 18:52:31+00:00,MEH173_project git repo.,0,ahmeterdem9603/MEH173_project,365825880,SystemVerilog,MEH173_project,2086,0,2021-05-26 10:28:55+00:00,[],None
377,https://github.com/zmh403/PULPino_src.git,2021-05-07 09:26:39+00:00,The source files are Clone from the https://github.com/pulp-platform/pulpino ,0,zmh403/PULPino_src,365181948,SystemVerilog,PULPino_src,357,0,2021-05-18 04:02:42+00:00,[],None
378,https://github.com/Shaoma-lyl/USTC_Lab.git,2021-05-02 12:35:20+00:00,,1,Shaoma-lyl/USTC_Lab,363647088,,USTC_Lab,62531,0,2021-08-08 08:52:33+00:00,[],None
379,https://github.com/SergeyIvanets/ChipExpo-2021.git,2021-04-05 14:53:32+00:00,FIFO examples for ChipExpo 2021,0,SergeyIvanets/ChipExpo-2021,354869800,SystemVerilog,ChipExpo-2021,4786,0,2022-01-22 08:32:00+00:00,[],None
380,https://github.com/kshitij-r/SCR1.git,2021-04-01 00:54:07+00:00,,0,kshitij-r/SCR1,353530833,SystemVerilog,SCR1,4865,0,2021-04-01 00:57:38+00:00,[],
381,https://github.com/barzamin/ece551-final.git,2021-04-16 04:32:32+00:00,,0,barzamin/ece551-final,358475820,SystemVerilog,ece551-final,294,0,2022-12-01 23:47:41+00:00,[],None
382,https://github.com/RadioactiveScandium/Logic-Design.git,2021-05-18 14:16:28+00:00,Digital logic implementation and verification through Verilog/SV,1,RadioactiveScandium/Logic-Design,368556534,SystemVerilog,Logic-Design,12652,0,2022-07-11 20:06:07+00:00,[],None
383,https://github.com/danielpmarks/FPGATetris.git,2021-05-12 02:51:02+00:00,Tetris game programmed for Intel FPGA,0,danielpmarks/FPGATetris,366573777,SystemVerilog,FPGATetris,228,0,2021-05-12 03:22:25+00:00,[],None
384,https://github.com/kartiksamtani/demo-repo.git,2021-05-25 11:03:41+00:00,Learning github,0,kartiksamtani/demo-repo,370662365,SystemVerilog,demo-repo,1,0,2021-05-25 12:18:58+00:00,[],None
385,https://github.com/ryancj14/ecen323.git,2021-06-09 15:19:12+00:00,ECEn 323 Files,0,ryancj14/ecen323,375400896,SystemVerilog,ecen323,109394,0,2021-06-09 15:29:13+00:00,[],None
386,https://github.com/TaiTruong21/ECE111-FinalProject.git,2021-06-05 00:37:42+00:00,,1,TaiTruong21/ECE111-FinalProject,373989263,SystemVerilog,ECE111-FinalProject,7359,0,2021-06-12 18:54:08+00:00,[],None
387,https://github.com/Mohamed-Younis/Simple_Memory-UVM-Testbench.git,2021-05-13 13:39:29+00:00,,0,Mohamed-Younis/Simple_Memory-UVM-Testbench,367060446,SystemVerilog,Simple_Memory-UVM-Testbench,11,0,2021-05-31 18:15:10+00:00,[],None
388,https://github.com/m-hariszafar/UVM_with_adder.git,2021-07-16 07:02:16+00:00,,0,m-hariszafar/UVM_with_adder,386542392,SystemVerilog,UVM_with_adder,7,0,2021-07-16 07:17:37+00:00,[],None
389,https://github.com/Arti-121097/64-bit-ALU.git,2021-07-13 07:22:58+00:00,"In this project, the design of an ALU is done with the delay aspect in mind. The signed 64-bit ALU is designed using Verilog HDL and verification is performed using the Universal Verification Methodology (UVM).",0,Arti-121097/64-bit-ALU,385514712,SystemVerilog,64-bit-ALU,7015,0,2021-07-13 07:38:00+00:00,[],None
390,https://github.com/mkmuis/MAS_ALU.git,2021-07-05 09:15:54+00:00,,0,mkmuis/MAS_ALU,383081866,SystemVerilog,MAS_ALU,92,0,2021-07-28 05:02:29+00:00,[],None
391,https://github.com/Arsalan-M/CPE333.git,2021-06-29 02:39:47+00:00,"This repository includes all associated System Verilog code used in development of the 32-bit OTTER Architecture CPU. The OTTER CPU has 37 base instructions and 26 pseudo instructions, in line with RV32I standard.",0,Arsalan-M/CPE333,381218180,SystemVerilog,CPE333,322,0,2021-06-29 03:05:17+00:00,[],None
392,https://github.com/sltm-14/HDL.git,2021-08-12 15:40:16+00:00,,0,sltm-14/HDL,395367525,SystemVerilog,HDL,413,0,2021-08-12 17:43:11+00:00,[],None
393,https://github.com/LoialOtter/ICE40-Cheetah-FPGA.git,2021-06-16 04:37:30+00:00,Animatronics servo driver based around an ICE40 FPGA,0,LoialOtter/ICE40-Cheetah-FPGA,377371854,SystemVerilog,ICE40-Cheetah-FPGA,18,0,2021-06-19 07:15:47+00:00,[],https://api.github.com/licenses/apache-2.0
394,https://github.com/CWerberger/pulp_gf_arith_ip.git,2021-07-30 06:16:50+00:00,GF(N) IP for Pulpissimo ,0,CWerberger/pulp_gf_arith_ip,390953752,SystemVerilog,pulp_gf_arith_ip,35,0,2021-11-05 11:53:38+00:00,[],None
395,https://github.com/merledu/ibex-collaboration.git,2021-04-10 11:38:28+00:00,This repo is created to present the design of ibex in such a way that MICT guys can put their peripherals with it.,0,merledu/ibex-collaboration,356563161,SystemVerilog,ibex-collaboration,320,0,2021-04-11 09:03:07+00:00,[],None
396,https://github.com/miura-katsuyoshi/onehot.git,2021-04-11 05:56:49+00:00,Parameterized one-hot code encoder in SystemVerilog,0,miura-katsuyoshi/onehot,356779765,SystemVerilog,onehot,45,0,2021-04-11 06:40:39+00:00,[],None
397,https://github.com/ThreeHoolagins/hsaFinalProject.git,2021-04-21 18:59:06+00:00,My High Speed Computer Architecture project in which we make a goldschmit divide unit,0,ThreeHoolagins/hsaFinalProject,360276394,SystemVerilog,hsaFinalProject,933,0,2021-05-01 01:37:27+00:00,[],None
398,https://github.com/shalinibare/OurProject2.git,2021-04-27 17:02:44+00:00,,0,shalinibare/OurProject2,362189247,SystemVerilog,OurProject2,3665,0,2021-04-27 17:03:11+00:00,[],https://api.github.com/licenses/mit
399,https://github.com/hao310rui140326/ahblite_mem.git,2021-04-05 06:04:08+00:00,,1,hao310rui140326/ahblite_mem,354736514,SystemVerilog,ahblite_mem,391,0,2021-04-05 06:12:46+00:00,[],None
400,https://github.com/selengorgun/CS223_Lab_Assignments.git,2021-04-04 14:35:32+00:00,Solutions for Bilkent University Fall 2020 lab assignments ,0,selengorgun/CS223_Lab_Assignments,354566298,SystemVerilog,CS223_Lab_Assignments,5085,0,2021-04-04 15:03:27+00:00,[],None
401,https://github.com/Zongpc/Auto-SOM.git,2021-04-15 12:44:33+00:00,,0,Zongpc/Auto-SOM,358255986,SystemVerilog,Auto-SOM,298,0,2021-04-15 12:59:30+00:00,[],None
402,https://github.com/Dipto9999/Scrolling_Display_DE1-SoC.git,2021-04-17 06:28:13+00:00,Scrolling Display Implemented With Digital Design Concepts on De1-SoC,0,Dipto9999/Scrolling_Display_DE1-SoC,358802870,SystemVerilog,Scrolling_Display_DE1-SoC,3244,0,2023-05-13 23:19:16+00:00,"['systemverilog-hdl', 'de1-soc', 'fpga', 'modelsim', 'quartus-prime']",None
403,https://github.com/jdupak/PAP-RISC-V-CPU-VERILOG.git,2021-04-19 17:06:12+00:00,Simple RISC-V CPU with 5-stage pipeline created as semestral work at FEE CTU.,0,jdupak/PAP-RISC-V-CPU-VERILOG,359537119,SystemVerilog,PAP-RISC-V-CPU-VERILOG,198,0,2021-04-19 17:24:20+00:00,[],None
404,https://github.com/Vivek-Dave/UVM_TestBench_For_Multiplier.git,2021-04-17 04:48:58+00:00,Complete UVM TB For Verification Of Multiplier ,0,Vivek-Dave/UVM_TestBench_For_Multiplier,358787225,SystemVerilog,UVM_TestBench_For_Multiplier,81,0,2021-04-17 04:55:56+00:00,[],None
405,https://github.com/IacPc/AES_Sbox_based_Stream_Cipher.git,2021-05-25 10:17:37+00:00,A simple stream cipher based on the AES S-box.,0,IacPc/AES_Sbox_based_Stream_Cipher,370650587,SystemVerilog,AES_Sbox_based_Stream_Cipher,9327,0,2021-06-20 15:28:47+00:00,[],None
406,https://github.com/mifiscus/Digital-Circuits-and-Systems-Final.git,2021-03-29 01:18:59+00:00,"Final project for digital circuits and systems class, which is a flappy bird game programmed onto the Altera DE1-SoC FPGA using SystemVerilog and an 8x8 LED matrix",0,mifiscus/Digital-Circuits-and-Systems-Final,352479443,SystemVerilog,Digital-Circuits-and-Systems-Final,13,0,2021-06-03 22:49:17+00:00,[],None
407,https://github.com/Adnan-Asif/Risc-V-Pipelined-Processor-.git,2021-04-30 11:35:11+00:00,,0,Adnan-Asif/Risc-V-Pipelined-Processor-,363121027,SystemVerilog,Risc-V-Pipelined-Processor-,1036,0,2021-06-03 11:07:14+00:00,[],None
408,https://github.com/ahmedmed/TestBench-Sys-Verilg.git,2021-04-30 13:16:48+00:00,,0,ahmedmed/TestBench-Sys-Verilg,363146299,SystemVerilog,TestBench-Sys-Verilg,6,0,2021-04-30 13:17:08+00:00,[],None
409,https://github.com/rushi0005/8to10-encoder-verifiction.git,2021-05-06 22:33:40+00:00,Testbench Architecture of 8 to 10 bit encoder,0,rushi0005/8to10-encoder-verifiction,365053197,SystemVerilog,8to10-encoder-verifiction,42878,0,2021-05-18 01:13:37+00:00,[],None
410,https://github.com/notwilliamng/RISC_V.git,2021-05-07 02:47:58+00:00,Restricted Instruction Set Computer (V5) OTTER architecture for Xilinx Basys3 Board. Developed using Xilinx Vivado Suite,0,notwilliamng/RISC_V,365095910,SystemVerilog,RISC_V,15,0,2022-09-05 16:38:21+00:00,"['basys3-fpga', 'system-verilog', 'xilinx-vivado']",None
411,https://github.com/Radiophantom/filters.git,2021-05-12 07:09:49+00:00,,0,Radiophantom/filters,366625041,SystemVerilog,filters,6,0,2021-05-13 14:50:08+00:00,[],None
412,https://github.com/xapicella/mrs-puffs-boarding-school.git,2021-05-11 18:52:51+00:00,Repo to hold the code for the EE 532 digital board project--Spring 2021.,0,xapicella/mrs-puffs-boarding-school,366484049,SystemVerilog,mrs-puffs-boarding-school,31,0,2021-05-28 18:26:56+00:00,[],None
413,https://github.com/zceeudd/ELEC0036---Microprocessor-TB.git,2021-04-14 12:10:08+00:00,,0,zceeudd/ELEC0036---Microprocessor-TB,357892285,SystemVerilog,ELEC0036---Microprocessor-TB,26,0,2021-04-14 12:11:37+00:00,[],None
414,https://github.com/lisboavini/single_cycle_processor_fpga.git,2021-04-14 18:52:19+00:00,Development of a single cycle processor using FPGA and own mini assembler.,0,lisboavini/single_cycle_processor_fpga,358010653,SystemVerilog,single_cycle_processor_fpga,9211,0,2021-05-25 20:59:55+00:00,[],None
415,https://github.com/miura-katsuyoshi/mealy-machine-vs-moore-machine.git,2021-05-02 09:10:47+00:00,This document describes difference between mealy machine and moor machine,0,miura-katsuyoshi/mealy-machine-vs-moore-machine,363609829,SystemVerilog,mealy-machine-vs-moore-machine,506,0,2021-06-20 08:36:38+00:00,[],None
416,https://github.com/hugo655/DCT.git,2021-05-09 21:41:06+00:00,,0,hugo655/DCT,365853412,SystemVerilog,DCT,4,0,2021-05-22 20:28:34+00:00,[],None
417,https://github.com/bogdanovrv/YCP.git,2021-05-18 16:22:13+00:00,,0,bogdanovrv/YCP,368596210,SystemVerilog,YCP,8,0,2021-05-18 16:28:33+00:00,[],None
418,https://github.com/jiru1997/PE-Processing-Element-implementing-1-D-row-Convolution-.git,2021-06-21 01:01:15+00:00,PE (Processing Element implementing 1-D row Convolution):,0,jiru1997/PE-Processing-Element-implementing-1-D-row-Convolution-,378770019,SystemVerilog,PE-Processing-Element-implementing-1-D-row-Convolution-,9,0,2021-06-21 01:04:48+00:00,[],None
419,https://github.com/lcbeams/DE10-Lite_VGA.git,2021-05-26 01:39:19+00:00,SystemVerilog design to use the VGA output on the DE10-Lite FPGA Development Board,0,lcbeams/DE10-Lite_VGA,370874309,SystemVerilog,DE10-Lite_VGA,10,0,2021-05-26 02:13:24+00:00,[],https://api.github.com/licenses/mit
420,https://github.com/atahanakar/Simple-RISC-Machine.git,2021-05-31 06:15:42+00:00,,0,atahanakar/Simple-RISC-Machine,372401746,SystemVerilog,Simple-RISC-Machine,30935,0,2021-07-19 05:47:07+00:00,[],None
421,https://github.com/weiminruan/multi_core_cpu.git,2021-06-03 17:45:40+00:00,cpu design,0,weiminruan/multi_core_cpu,373594358,SystemVerilog,multi_core_cpu,97,0,2021-06-03 17:55:16+00:00,[],None
422,https://github.com/DilankaLaknath/system-verilog-learning.git,2021-06-13 15:51:02+00:00,,0,DilankaLaknath/system-verilog-learning,376582212,SystemVerilog,system-verilog-learning,7,0,2021-06-26 11:08:41+00:00,[],None
423,https://github.com/Vivek-Dave/UVM_TestBench_For_T_Flip_Flop.git,2021-06-16 12:54:47+00:00,Complete UVM TestBench For Verification Of T Flip Flop,0,Vivek-Dave/UVM_TestBench_For_T_Flip_Flop,377496022,SystemVerilog,UVM_TestBench_For_T_Flip_Flop,76,0,2021-06-16 15:52:51+00:00,[],None
424,https://github.com/benjascott/computer_architecture.git,2021-04-23 16:09:12+00:00,,0,benjascott/computer_architecture,360939358,SystemVerilog,computer_architecture,383,0,2021-04-23 18:13:50+00:00,[],None
425,https://github.com/davidh777/signal_processing.git,2021-04-27 01:01:42+00:00,,0,davidh777/signal_processing,361937818,SystemVerilog,signal_processing,28,0,2022-02-08 18:06:57+00:00,[],None
426,https://github.com/mfatihkeskin/Single_Cycle_Processor.git,2021-05-29 10:48:21+00:00,,0,mfatihkeskin/Single_Cycle_Processor,371947454,SystemVerilog,Single_Cycle_Processor,6,0,2022-01-19 00:31:44+00:00,[],None
427,https://github.com/EmanMahm0ud/Floating-Point-Multiplication.git,2021-05-29 22:45:36+00:00,,0,EmanMahm0ud/Floating-Point-Multiplication,372082145,SystemVerilog,Floating-Point-Multiplication,2,0,2021-05-29 22:50:17+00:00,[],None
428,https://github.com/YotStyle/generic_lib.git,2021-08-11 13:28:25+00:00,,0,YotStyle/generic_lib,394998769,SystemVerilog,generic_lib,1,0,2021-08-11 13:46:15+00:00,[],None
429,https://github.com/belmontcomputing/counter.git,2021-07-19 13:59:28+00:00,The counter example,0,belmontcomputing/counter,387483461,SystemVerilog,counter,3,0,2021-07-21 02:11:38+00:00,[],None
430,https://github.com/flaviens/pickled_pulpissimo.git,2021-07-19 13:50:30+00:00,,0,flaviens/pickled_pulpissimo,387480749,SystemVerilog,pickled_pulpissimo,1019,0,2021-07-22 08:09:14+00:00,[],None
431,https://github.com/avilaJorge/BitcoinHasher.git,2021-07-29 05:26:08+00:00,Bitcoin hashing fpga design in SystemVerilog.,0,avilaJorge/BitcoinHasher,390610286,SystemVerilog,BitcoinHasher,38,0,2021-07-29 05:30:49+00:00,[],None
432,https://github.com/erayibr/axis_fifo.git,2021-08-07 22:19:29+00:00,,0,erayibr/axis_fifo,393804558,SystemVerilog,axis_fifo,7,0,2021-08-07 22:24:59+00:00,[],None
433,https://github.com/liangcha1980/Learning.git,2021-07-07 01:29:44+00:00,,0,liangcha1980/Learning,383640618,SystemVerilog,Learning,2665,0,2021-12-31 08:49:20+00:00,[],None
434,https://github.com/MaksimRatnikov/PipelinedHashCodeGenerator.git,2021-05-04 01:42:41+00:00,Research project,0,MaksimRatnikov/PipelinedHashCodeGenerator,364110052,SystemVerilog,PipelinedHashCodeGenerator,31,0,2021-05-08 00:32:12+00:00,[],https://api.github.com/licenses/gpl-3.0
435,https://github.com/ybu5/fourPhaseHandshake.git,2021-04-29 19:10:28+00:00,"A model that simulates the four phase hand shake, and its test bench ",0,ybu5/fourPhaseHandshake,362921221,SystemVerilog,fourPhaseHandshake,4,0,2021-04-29 19:13:06+00:00,[],None
436,https://github.com/yolanda10202/FPGAppy_Bird.git,2021-06-14 02:52:37+00:00,,0,yolanda10202/FPGAppy_Bird,376687084,SystemVerilog,FPGAppy_Bird,9,0,2021-06-15 06:49:42+00:00,[],None
437,https://github.com/mfkiwl/swerv-el2-formal.git,2021-07-11 19:05:09+00:00,Adding RISC-V Formal Interface to Swerv-el2 processor,0,mfkiwl/swerv-el2-formal,385031630,SystemVerilog,swerv-el2-formal,125,0,2021-10-03 05:06:41+00:00,[],None
438,https://github.com/aurthurtang/Pulse_Generator.git,2021-07-11 05:30:35+00:00,Generated a pulse based on given pulse width and in any data width.  ,0,aurthurtang/Pulse_Generator,384867654,SystemVerilog,Pulse_Generator,1,0,2021-07-11 05:33:01+00:00,[],None
439,https://github.com/orb1t-ua/driver.git,2021-07-08 04:41:19+00:00,FPGA based driver for power electronics applications,0,orb1t-ua/driver,384002552,,driver,800,0,2021-08-01 16:39:26+00:00,[],None
440,https://github.com/chengyih001/FPGA_Image_Processing.git,2021-07-04 13:17:01+00:00,,1,chengyih001/FPGA_Image_Processing,382856385,SystemVerilog,FPGA_Image_Processing,8076,0,2021-07-12 12:31:29+00:00,[],None
441,https://github.com/lwflwf1/pecell.git,2021-07-04 17:12:46+00:00,,0,lwflwf1/pecell,382907573,SystemVerilog,pecell,1157,0,2021-07-04 17:13:40+00:00,[],None
442,https://github.com/HEADS-UNCC/SYN_SRAM_UVM.git,2021-06-25 17:17:08+00:00,,0,HEADS-UNCC/SYN_SRAM_UVM,380307977,SystemVerilog,SYN_SRAM_UVM,18,0,2021-06-25 17:27:58+00:00,[],None
443,https://github.com/SamuelOrtizV/Lab-Sistemas-Digitales-2021-1.git,2021-07-02 20:13:40+00:00,,0,SamuelOrtizV/Lab-Sistemas-Digitales-2021-1,382453756,SystemVerilog,Lab-Sistemas-Digitales-2021-1,3,0,2021-07-02 20:26:47+00:00,[],None
444,https://github.com/mahmoudabdelhadii/lab5.git,2021-03-31 02:30:51+00:00,,0,mahmoudabdelhadii/lab5,353201047,SystemVerilog,lab5,29,0,2022-02-24 00:55:33+00:00,[],None
445,https://github.com/Vivek-Dave/UVM_TestBench_For_And_Gate.git,2021-06-17 15:50:00+00:00,Simple and Complete UVM TestBench For Verification Of And Gate ,0,Vivek-Dave/UVM_TestBench_For_And_Gate,377884317,SystemVerilog,UVM_TestBench_For_And_Gate,79,0,2021-06-18 04:15:29+00:00,[],None
446,https://github.com/palexander23/as-embedded-processor.git,2021-07-05 09:45:56+00:00,An Application Specific Embedded Processor designed to perform Affine Transformations using as little energy and FPGA resources as possible.,0,palexander23/as-embedded-processor,383090098,SystemVerilog,as-embedded-processor,5592,0,2021-07-19 18:14:38+00:00,[],None
447,https://github.com/f14981327/hdmi_vip.git,2021-06-22 02:23:54+00:00,,0,f14981327/hdmi_vip,379117793,SystemVerilog,hdmi_vip,16380,0,2021-06-22 05:06:46+00:00,[],None
448,https://github.com/mr-gaurav/Sequence-Counter.git,2021-07-07 12:41:02+00:00,Implement sequence counter 2->1->2->3->2->4->2->5->2,0,mr-gaurav/Sequence-Counter,383794508,SystemVerilog,Sequence-Counter,1,0,2021-07-07 12:41:11+00:00,[],None
449,https://github.com/nimaomidsajedi/SystemVerilog.git,2021-07-21 09:52:58+00:00,Some programming ideas in SystemVerilog,0,nimaomidsajedi/SystemVerilog,388070926,SystemVerilog,SystemVerilog,2,0,2021-07-21 11:35:57+00:00,[],None
450,https://github.com/ss-reposit/RISCV4Stage.git,2021-07-13 20:54:22+00:00,2 difference processors for Riscv,0,ss-reposit/RISCV4Stage,385732759,SystemVerilog,RISCV4Stage,23,0,2021-07-13 21:00:50+00:00,[],None
451,https://github.com/spicker23/encoder.git,2021-08-04 10:15:20+00:00,,0,spicker23/encoder,392642141,SystemVerilog,encoder,4,0,2021-08-21 07:19:22+00:00,[],None
452,https://github.com/Redbeard358/SV-Verification-Testbench-Development-for-Synchronous-Read-Write-Memory.git,2021-08-03 18:30:16+00:00,This repository contains SV Testbench Environment developed for a Synchronous Write-Read Memory ,0,Redbeard358/SV-Verification-Testbench-Development-for-Synchronous-Read-Write-Memory,392417025,SystemVerilog,SV-Verification-Testbench-Development-for-Synchronous-Read-Write-Memory,12,0,2021-08-10 18:13:15+00:00,[],None
453,https://github.com/paller/risc-v_rv32i_fpga.git,2021-06-20 19:20:55+00:00,A simple project to get started with SystemVerilog.,0,paller/risc-v_rv32i_fpga,378723451,SystemVerilog,risc-v_rv32i_fpga,21,0,2021-06-25 19:19:18+00:00,[],None
454,https://github.com/jeron7/loac-codes.git,2021-07-01 16:18:47+00:00,Repositorio contendo c√≥digos utilizados na cadeira de LOAC,0,jeron7/loac-codes,382091794,SystemVerilog,loac-codes,12,0,2021-07-04 00:04:43+00:00,[],None
455,https://github.com/prendConnor/sha256fpga.git,2021-07-21 01:48:09+00:00,,0,prendConnor/sha256fpga,387961496,SystemVerilog,sha256fpga,3557,0,2021-07-21 01:49:47+00:00,[],None
456,https://github.com/TheOneKevin/coldbrew-soc.git,2021-07-13 05:11:59+00:00,,0,TheOneKevin/coldbrew-soc,385483709,SystemVerilog,coldbrew-soc,6005,0,2022-01-02 18:47:02+00:00,[],https://api.github.com/licenses/apache-2.0
457,https://github.com/kraysang/ECE342-Computer-Hardware.git,2021-04-28 13:49:41+00:00,,0,kraysang/ECE342-Computer-Hardware,362484272,SystemVerilog,ECE342-Computer-Hardware,7493,0,2021-04-28 13:59:03+00:00,[],None
458,https://github.com/MasterJubei/RISC-V-Inspired-Pipeline.git,2021-05-18 22:06:24+00:00,,0,MasterJubei/RISC-V-Inspired-Pipeline,368677685,SystemVerilog,RISC-V-Inspired-Pipeline,723,0,2021-07-05 20:53:49+00:00,[],None
459,https://github.com/ikzer9x/uvm-GoKorea.git,2021-05-21 18:03:31+00:00,,0,ikzer9x/uvm-GoKorea,369616561,SystemVerilog,uvm-GoKorea,1098,0,2021-05-21 18:26:22+00:00,[],None
460,https://github.com/George-Dong/icslab3.git,2021-05-17 13:56:08+00:00,,0,George-Dong/icslab3,368204682,SystemVerilog,icslab3,179,0,2021-05-17 14:50:07+00:00,[],None
461,https://github.com/Shahidan101/8bitFullAdder_with7SD.git,2021-05-29 07:35:59+00:00,Verilog implementation of an 8-bit Ripple Carry Adder integrated with 3 units of 7-segment display,0,Shahidan101/8bitFullAdder_with7SD,371910773,SystemVerilog,8bitFullAdder_with7SD,5,0,2021-05-31 07:20:33+00:00,[],None
462,https://github.com/acoimbramendes/superscalar_risc-v.git,2021-05-28 03:16:25+00:00,,1,acoimbramendes/superscalar_risc-v,371566715,SystemVerilog,superscalar_risc-v,101,0,2021-05-28 03:19:43+00:00,[],None
463,https://github.com/AdamMakinSoftware/picoMIPS.git,2021-04-07 13:21:08+00:00,,0,AdamMakinSoftware/picoMIPS,355553036,SystemVerilog,picoMIPS,271,0,2021-04-07 13:49:34+00:00,[],None
464,https://github.com/groutlloyd/OldLaggyRiscVfromHCMUT.git,2021-05-10 12:03:31+00:00,"Just an old ""hag"" of RISC-V piece, made from an assigment of Computer Architecture class from somewhere in Earth...",0,groutlloyd/OldLaggyRiscVfromHCMUT,366028237,SystemVerilog,OldLaggyRiscVfromHCMUT,29,0,2021-07-23 11:15:15+00:00,[],None
465,https://github.com/desirable98/Computer-and-Intelligent-Processor-Architecture.git,2021-05-03 06:59:54+00:00,ËÆ°ÁÆóÊú∫ÂíåÊô∫ËÉΩÂ§ÑÁêÜÂô®Êû∂ÊûÑËØæÁ®ã‰Ωú‰∏ö,0,desirable98/Computer-and-Intelligent-Processor-Architecture,363843714,SystemVerilog,Computer-and-Intelligent-Processor-Architecture,2672,0,2023-02-04 08:40:29+00:00,[],None
466,https://github.com/Moorvan/multiport-memory.git,2021-05-08 02:12:32+00:00,multiport memory implemented by Chisel,0,Moorvan/multiport-memory,365398055,SystemVerilog,multiport-memory,446,0,2021-05-20 07:22:12+00:00,[],https://api.github.com/licenses/unlicense
467,https://github.com/standanley/fixture_demo_kiwi.git,2021-05-07 18:40:48+00:00,,1,standanley/fixture_demo_kiwi,365323766,SystemVerilog,fixture_demo_kiwi,5881,0,2021-09-02 14:38:09+00:00,[],None
468,https://github.com/Sanya-123/Lib_myOFDM.git,2021-05-10 07:48:33+00:00,OFDM FPGA,0,Sanya-123/Lib_myOFDM,365960647,SystemVerilog,Lib_myOFDM,229,0,2021-05-10 07:49:54+00:00,[],None
469,https://github.com/tzahiperetz/labPoolGame.git,2021-04-05 05:04:29+00:00,SV pool game ,0,tzahiperetz/labPoolGame,354724380,SystemVerilog,labPoolGame,17611,0,2021-04-05 05:11:38+00:00,[],None
470,https://github.com/yagizyasar/Single-Cycle-MIPS-Processor.git,2021-04-23 11:03:23+00:00,CS 223 Course Project,0,yagizyasar/Single-Cycle-MIPS-Processor,360855277,SystemVerilog,Single-Cycle-MIPS-Processor,1316,0,2021-04-23 11:03:30+00:00,[],None
471,https://github.com/standanley/fixture_demo_caddy.git,2021-04-21 19:20:43+00:00,Files for the fixture demo on caddy,0,standanley/fixture_demo_caddy,360281766,SystemVerilog,fixture_demo_caddy,4,0,2021-04-21 19:48:08+00:00,[],None
472,https://github.com/demyanenko-d/EvoHD_Lite.git,2021-04-11 18:40:50+00:00,,0,demyanenko-d/EvoHD_Lite,356950234,SystemVerilog,EvoHD_Lite,10746,0,2023-03-30 14:20:28+00:00,[],None
473,https://github.com/pbeltram/Ultra96.git,2021-04-27 19:37:43+00:00,Ultra96 developement.,0,pbeltram/Ultra96,362230199,SystemVerilog,Ultra96,12988,0,2023-08-17 10:13:21+00:00,[],https://api.github.com/licenses/gpl-3.0
474,https://github.com/pocket7878/minicpu.git,2021-05-04 10:31:40+00:00,Â≠¶Áøí„ÅÆ„Åü„ÇÅ„Å´DE0-CV‰∏ä„Å´Êú¨„Çí„Çà„Åø„Å™„Åå„ÇâÂ∞è„Åï„Å™CPU„Çí„Å§„Åè„Å£„Å¶„ÅÑ„Åè,0,pocket7878/minicpu,364219779,SystemVerilog,minicpu,45,0,2021-05-09 11:11:11+00:00,[],None
475,https://github.com/GCET231/tut4-fpga-flow.git,2021-04-26 14:50:18+00:00,Fluxo de Projeto FPGA na Ferramenta Intel Quartus Prime,0,GCET231/tut4-fpga-flow,361787788,SystemVerilog,tut4-fpga-flow,24579,0,2021-09-24 18:56:59+00:00,[],None
476,https://github.com/1190201923/HIT--lift.git,2021-05-20 09:08:49+00:00,,0,1190201923/HIT--lift,369147690,SystemVerilog,HIT--lift,2411,0,2021-05-20 09:15:18+00:00,[],None
477,https://github.com/munevveru/basys3-calculator.git,2021-05-20 22:14:03+00:00,,0,munevveru/basys3-calculator,369350725,SystemVerilog,basys3-calculator,12,0,2021-05-20 22:30:39+00:00,[],None
478,https://github.com/salvarez97/Working_directory.git,2021-05-21 03:47:55+00:00,,0,salvarez97/Working_directory,369406267,SystemVerilog,Working_directory,126,0,2021-05-21 03:54:51+00:00,[],None
479,https://github.com/Sreehari-BGK/Digital_Stopwatch.git,2021-05-20 11:36:39+00:00,Implementing Digital Stopwatch using FPGA.,0,Sreehari-BGK/Digital_Stopwatch,369186711,SystemVerilog,Digital_Stopwatch,1,0,2021-05-20 11:38:07+00:00,[],None
480,https://github.com/shilei-massclouds/xsoc.git,2021-05-25 02:23:15+00:00,,0,shilei-massclouds/xsoc,370540003,SystemVerilog,xsoc,164,0,2023-04-25 01:57:55+00:00,[],https://api.github.com/licenses/gpl-2.0
481,https://github.com/cterrill26/cs259_binary_neuralnet_accelerator.git,2021-06-02 07:07:58+00:00,,0,cterrill26/cs259_binary_neuralnet_accelerator,373073298,SystemVerilog,cs259_binary_neuralnet_accelerator,87,0,2021-07-14 04:25:15+00:00,[],None
482,https://github.com/Vivek-Dave/UVM_TestBench_For_Adder_Comparator.git,2021-05-31 11:10:58+00:00,Complete UVM TestBench For Verification Of Adder_Comparator,0,Vivek-Dave/UVM_TestBench_For_Adder_Comparator,372478197,SystemVerilog,UVM_TestBench_For_Adder_Comparator,81,0,2021-05-31 11:19:00+00:00,[],None
483,https://github.com/cabajian/median-filter.git,2021-05-29 23:56:02+00:00,,0,cabajian/median-filter,372089866,SystemVerilog,median-filter,860,0,2021-05-30 00:02:37+00:00,[],None
484,https://github.com/Shahidan101/sign-language-translator-soc.git,2021-06-16 01:08:22+00:00,Hardware description of an American Sign Language (ASL) Translator System-On-Chip using System Verilog,0,Shahidan101/sign-language-translator-soc,377333365,SystemVerilog,sign-language-translator-soc,63,0,2021-09-07 12:15:40+00:00,[],None
485,https://github.com/mfkiwl/NekoNi.git,2021-06-16 14:14:14+00:00,Second version of the NekoIchi SoC,0,mfkiwl/NekoNi,377519917,,NekoNi,0,0,2021-06-16 14:14:16+00:00,[],None
486,https://github.com/divyanshu0x16/Integer-Arithmetic-Algorithms-in-Verilog.git,2021-07-04 19:34:56+00:00,"Non-Restoring (Division and Square Root), Resotring (Division) and Booths Algorithm (Multiplication) written in System Verilog ",0,divyanshu0x16/Integer-Arithmetic-Algorithms-in-Verilog,382933928,SystemVerilog,Integer-Arithmetic-Algorithms-in-Verilog,3,0,2021-07-04 19:36:21+00:00,[],None
487,https://github.com/ybu5/digital_safe.git,2021-04-29 19:00:28+00:00,User needs to input the correct sequences with a joystick and the correct PIN code to unlock the the safe ,0,ybu5/digital_safe,362918788,SystemVerilog,digital_safe,13,0,2021-04-29 19:06:13+00:00,[],None
488,https://github.com/Vivek-Dave/UVM_TestBench_For_Up_Down_Counter.git,2021-04-18 07:45:14+00:00,Complete UVM TB For Verification Of Up_Down_Counter,0,Vivek-Dave/UVM_TestBench_For_Up_Down_Counter,359078137,SystemVerilog,UVM_TestBench_For_Up_Down_Counter,472,0,2021-04-18 07:51:16+00:00,[],None
489,https://github.com/aditi1prakash/SHA256.git,2021-05-10 20:31:03+00:00,,0,aditi1prakash/SHA256,366168261,SystemVerilog,SHA256,345,0,2022-05-17 09:42:40+00:00,[],None
490,https://github.com/xuehao-su/I2CUVM-.git,2021-05-18 02:35:31+00:00,,0,xuehao-su/I2CUVM-,368379350,SystemVerilog,I2CUVM-,64,0,2021-05-19 01:58:09+00:00,[],None
491,https://github.com/OikawaLab/NexysVideo_UDP2HDMI.git,2021-05-13 07:19:05+00:00,,0,OikawaLab/NexysVideo_UDP2HDMI,366967296,SystemVerilog,NexysVideo_UDP2HDMI,781,0,2021-05-13 07:19:58+00:00,[],None
492,https://github.com/Vivek-Dave/UVM_TEstBench_For_PIPO_Register.git,2021-06-03 02:59:05+00:00,Complete UVM TestBench For Verification Of PIPO (P-in P-out) Register,0,Vivek-Dave/UVM_TEstBench_For_PIPO_Register,373364073,SystemVerilog,UVM_TEstBench_For_PIPO_Register,84,0,2021-06-03 03:03:04+00:00,[],None
493,https://github.com/kentiscool/CSE140L-Lab3.git,2021-05-25 02:41:30+00:00,,0,kentiscool/CSE140L-Lab3,370543573,SystemVerilog,CSE140L-Lab3,96,0,2021-05-27 16:53:09+00:00,[],None
494,https://github.com/Vectis99/ece272-digital-logic.git,2021-05-25 22:35:55+00:00,Coursework for ECE 272: Digital Logic Design at Oregon State University.,0,Vectis99/ece272-digital-logic,370844310,SystemVerilog,ece272-digital-logic,87,0,2021-05-25 22:36:20+00:00,[],None
495,https://github.com/vrstanchev/Verilog-Projects.git,2021-06-12 04:29:25+00:00,GNU SystemVerilog Projects,0,vrstanchev/Verilog-Projects,376201519,SystemVerilog,Verilog-Projects,15,0,2021-06-12 04:36:41+00:00,[],https://api.github.com/licenses/gpl-3.0
496,https://github.com/RecepSaid/SystemVerilog-Examples.git,2021-04-27 11:13:48+00:00,This repo contains SystemVerilog codes which is written for the ELM235/Logic Circuits and Design course.,0,RecepSaid/SystemVerilog-Examples,362083735,SystemVerilog,SystemVerilog-Examples,12,0,2022-03-13 21:50:06+00:00,[],None
497,https://github.com/ian7aylor/SystemVerilog.git,2021-04-28 03:16:01+00:00,,0,ian7aylor/SystemVerilog,362323180,SystemVerilog,SystemVerilog,5,0,2021-05-18 06:33:41+00:00,[],None
498,https://github.com/Danil1997Dev/VRLgit.git,2021-04-19 07:48:43+00:00,,0,Danil1997Dev/VRLgit,359373195,SystemVerilog,VRLgit,25,0,2021-04-20 15:09:40+00:00,[],None
499,https://github.com/tnguyen-tx/arm_core.git,2021-04-18 21:25:15+00:00,,0,tnguyen-tx/arm_core,359255935,SystemVerilog,arm_core,215,0,2021-04-18 21:25:49+00:00,[],None
500,https://github.com/berkstar/Checksum.git,2021-05-25 20:56:07+00:00,,0,berkstar/Checksum,370825551,SystemVerilog,Checksum,357,0,2021-05-25 20:57:47+00:00,[],None
501,https://github.com/yichao-yuan-99/Ria.git,2021-05-26 12:58:29+00:00,,0,yichao-yuan-99/Ria,371034656,SystemVerilog,Ria,16,0,2021-05-26 12:58:42+00:00,[],None
502,https://github.com/a4ansuman/codes.git,2021-04-23 12:18:44+00:00,,0,a4ansuman/codes,360874161,SystemVerilog,codes,13,0,2021-04-28 06:46:18+00:00,[],None
503,https://github.com/emilijav-97/Verilog.git,2021-04-21 13:42:30+00:00,Exercises in Verilog & SystemVerilog,0,emilijav-97/Verilog,360185382,SystemVerilog,Verilog,1196,0,2021-04-26 10:37:39+00:00,[],None
504,https://github.com/jehosuaa/practica1.git,2021-03-30 20:03:50+00:00,,0,jehosuaa/practica1,353127092,SystemVerilog,practica1,14,0,2023-06-09 03:55:42+00:00,[],None
505,https://github.com/junote/myHDL.git,2021-04-04 14:00:22+00:00,myHDL,0,junote/myHDL,354558071,SystemVerilog,myHDL,1165,0,2022-03-08 09:42:56+00:00,[],None
506,https://github.com/metricsjagan/metricsjagan.git,2021-03-29 14:39:08+00:00,Config files for my GitHub profile.,0,metricsjagan/metricsjagan,352676246,SystemVerilog,metricsjagan,19,0,2021-08-24 14:01:21+00:00,"['config', 'github-config']",None
507,https://github.com/Woooooow-Pro/MIPS.git,2021-04-15 00:37:55+00:00,The computer architecture course Project,0,Woooooow-Pro/MIPS,358080577,SystemVerilog,MIPS,7182,0,2021-06-28 05:50:05+00:00,[],None
508,https://github.com/Grabulosaure/NES3D_MiSTer.git,2021-06-20 02:58:44+00:00,,0,Grabulosaure/NES3D_MiSTer,378545921,SystemVerilog,NES3D_MiSTer,76329,0,2021-06-23 22:54:13+00:00,[],None
509,https://github.com/HEADS-UNCC/Syn_FIFO_UVM.git,2021-06-25 16:31:36+00:00,,0,HEADS-UNCC/Syn_FIFO_UVM,380296754,SystemVerilog,Syn_FIFO_UVM,12,0,2021-06-25 17:46:45+00:00,[],None
510,https://github.com/kura197/RISCV_single_cycle_processor.git,2021-07-19 14:45:33+00:00,RISC-V rv32i single-cycle processor,2,kura197/RISCV_single_cycle_processor,387498284,SystemVerilog,RISCV_single_cycle_processor,30,0,2021-08-02 12:38:45+00:00,[],None
511,https://github.com/kpavan24/32-bit-MIPS.git,2021-07-20 08:52:32+00:00,,0,kpavan24/32-bit-MIPS,387730881,SystemVerilog,32-bit-MIPS,4,0,2021-07-20 08:53:39+00:00,[],None
512,https://github.com/hughy086/prj.git,2021-07-07 10:32:47+00:00,,0,hughy086/prj,383760741,SystemVerilog,prj,33204,0,2021-07-07 11:12:38+00:00,[],
513,https://github.com/chien172431/riscv32.git,2021-07-07 10:52:52+00:00,,0,chien172431/riscv32,383765918,SystemVerilog,riscv32,11,0,2021-08-31 15:22:53+00:00,[],None
514,https://github.com/7FM/verilator_bug_showcase.git,2021-06-30 19:35:04+00:00,The code is primarly from: https://github.com/openhwgroup/cva6 and its submodules,0,7FM/verilator_bug_showcase,381813602,SystemVerilog,verilator_bug_showcase,41,0,2023-01-28 08:00:23+00:00,[],None
515,https://github.com/alephium/fpga-miner.git,2021-07-26 06:54:38+00:00,This is not under development anymore,0,alephium/fpga-miner,389537534,SystemVerilog,fpga-miner,499,0,2022-05-02 07:39:21+00:00,[],https://api.github.com/licenses/lgpl-3.0
516,https://github.com/strauch-co/va_uvm_basics.git,2021-07-12 21:25:16+00:00,,0,strauch-co/va_uvm_basics,385387312,SystemVerilog,va_uvm_basics,13,0,2021-07-13 21:01:58+00:00,[],
517,https://github.com/ZAIN-ALI-02/riscv-single-cycle.git,2021-04-04 17:26:31+00:00,,0,ZAIN-ALI-02/riscv-single-cycle,354604994,SystemVerilog,riscv-single-cycle,612,0,2024-01-03 10:40:32+00:00,[],None
518,https://github.com/andrewjrae/optmult.git,2021-04-29 19:44:49+00:00,Efficient softlogic multiplier based on Booth multiplication for Xilinx FPGAs,0,andrewjrae/optmult,362929403,SystemVerilog,optmult,100,0,2021-05-06 02:18:01+00:00,[],None
519,https://github.com/ybu5/Vending_Machine.git,2021-04-29 19:29:18+00:00,A module that keeps track of the amount of money put into a vending machine and assert the output for one cycle once $1 or more has been received. ,0,ybu5/Vending_Machine,362925778,SystemVerilog,Vending_Machine,2,0,2021-04-29 19:29:58+00:00,[],None
520,https://github.com/Moinahmed7777/Digital-logic-circuit_design.git,2021-05-18 22:42:38+00:00,Digital logic circuit designs using Hardware design languages ( System Verilog and Verilog) ,0,Moinahmed7777/Digital-logic-circuit_design,368683829,SystemVerilog,Digital-logic-circuit_design,15923,0,2021-05-18 22:59:55+00:00,[],None
521,https://github.com/mish3albaiz/pdp11-isa-sim.git,2021-04-11 01:20:15+00:00,SystemVerilog Simulation of PDP-11 ISA,0,mish3albaiz/pdp11-isa-sim,356737838,SystemVerilog,pdp11-isa-sim,12,0,2021-04-11 01:20:46+00:00,[],None
522,https://github.com/BokChoyMan/ECE152A.git,2021-04-13 07:11:45+00:00,,0,BokChoyMan/ECE152A,357457824,SystemVerilog,ECE152A,10,0,2021-04-21 17:14:27+00:00,[],None
523,https://github.com/ofrankg/risc-v.git,2021-04-09 18:24:31+00:00,A simple riscv cpu implementation,0,ofrankg/risc-v,356363551,SystemVerilog,risc-v,23,0,2021-10-07 02:51:27+00:00,[],None
524,https://github.com/benchilton/Verilog-learning-project-a-basic-processor.git,2021-05-30 19:55:32+00:00,A project I undertook to help myself learn about HDLs,0,benchilton/Verilog-learning-project-a-basic-processor,372303852,SystemVerilog,Verilog-learning-project-a-basic-processor,347,0,2023-06-03 20:03:35+00:00,[],None
525,https://github.com/ivanzuglic/RISC-V-core.git,2021-06-07 14:08:23+00:00,Implementation of RISC-V core in SystemVerilog,0,ivanzuglic/RISC-V-core,374689052,SystemVerilog,RISC-V-core,912,0,2023-01-28 06:05:05+00:00,"['risc-v', 'fpga', 'systemverilog']",None
526,https://github.com/Adnan-Asif/Multiplayer-Snake-Game-Verilog.git,2021-06-02 07:26:12+00:00,,0,Adnan-Asif/Multiplayer-Snake-Game-Verilog,373078353,SystemVerilog,Multiplayer-Snake-Game-Verilog,1196,0,2021-06-05 18:20:14+00:00,[],None
527,https://github.com/Vivek-Dave/UVM_TestBench_For_Binary_to_Ex3_Converter.git,2021-06-01 01:04:13+00:00,Complete UVM TestBench For Verification Of Binary to Ex3 Code Converter,0,Vivek-Dave/UVM_TestBench_For_Binary_to_Ex3_Converter,372664800,SystemVerilog,UVM_TestBench_For_Binary_to_Ex3_Converter,122,0,2021-06-01 01:11:48+00:00,[],None
528,https://github.com/Vivek-Dave/UVM_TestBench_For_DeMultiplexer.git,2021-06-05 15:24:39+00:00,Complete UVM TestBench For Verification Of 8x1 DeMultiplexer,0,Vivek-Dave/UVM_TestBench_For_DeMultiplexer,374147836,SystemVerilog,UVM_TestBench_For_DeMultiplexer,82,0,2021-06-05 15:35:35+00:00,[],None
529,https://github.com/kotyadamohini/google_dinosaur.git,2021-05-01 03:51:27+00:00,,0,kotyadamohini/google_dinosaur,363317045,SystemVerilog,google_dinosaur,15982,0,2021-05-01 03:54:52+00:00,[],None
530,https://github.com/GabrielMonteroSierra/Processing-Engine.git,2021-05-30 02:11:38+00:00,This project was coded in SystemVerilog on Fall 2020.,0,GabrielMonteroSierra/Processing-Engine,372105217,SystemVerilog,Processing-Engine,12,0,2021-05-30 03:06:21+00:00,[],None
531,https://github.com/adnanashraf17501/uvm_dpram.git,2021-05-30 06:14:25+00:00,,0,adnanashraf17501/uvm_dpram,372138475,SystemVerilog,uvm_dpram,413,0,2021-05-30 06:16:41+00:00,[],None
532,https://github.com/adnanashraf17501/uvm_APB-AMBA-3.git,2021-05-30 06:25:35+00:00,,0,adnanashraf17501/uvm_APB-AMBA-3,372140227,SystemVerilog,uvm_APB-AMBA-3,2652,0,2021-06-10 08:55:33+00:00,[],None
533,https://github.com/wu-hu-qi-fei/lab1-cpen311-wu-hu-qi-fei.git,2021-05-21 14:02:31+00:00,,0,wu-hu-qi-fei/lab1-cpen311-wu-hu-qi-fei,369553933,SystemVerilog,lab1-cpen311-wu-hu-qi-fei,2713,0,2021-05-21 14:04:00+00:00,[],None
534,https://github.com/carloleo/Embedded-Security.git,2021-05-20 19:33:24+00:00,,1,carloleo/Embedded-Security,369318010,SystemVerilog,Embedded-Security,728,0,2021-07-03 17:39:32+00:00,[],None
535,https://github.com/zappos23/word_deserializer.git,2021-05-14 07:27:26+00:00,,0,zappos23/word_deserializer,367283856,SystemVerilog,word_deserializer,6,0,2021-05-14 07:32:11+00:00,[],None
536,https://github.com/serhaterdogan77/BLM202_RISC-V_Proje.git,2021-05-28 14:45:32+00:00,,0,serhaterdogan77/BLM202_RISC-V_Proje,371731864,SystemVerilog,BLM202_RISC-V_Proje,1721,0,2021-05-28 20:26:04+00:00,[],None
537,https://github.com/Ryan377/Mips.git,2021-06-19 15:28:58+00:00,,0,Ryan377/Mips,378444711,SystemVerilog,Mips,4171,0,2021-06-19 16:28:12+00:00,[],None
538,https://github.com/Dipeshmkwana/DesignSV.git,2021-06-29 16:20:41+00:00,Plan is to make some design projects using systemverilog ,0,Dipeshmkwana/DesignSV,381428139,SystemVerilog,DesignSV,477,0,2022-03-01 16:39:38+00:00,[],https://api.github.com/licenses/mit
539,https://github.com/FlipperCoin/sim3.git,2021-06-27 14:52:49+00:00,,0,FlipperCoin/sim3,380766128,SystemVerilog,sim3,7,0,2021-06-27 18:08:53+00:00,[],None
540,https://github.com/7FM/ShadyPong.git,2021-08-04 16:46:35+00:00,Simple Pong Implementation for the icesugar with VGA extension,0,7FM/ShadyPong,392762687,SystemVerilog,ShadyPong,42,0,2022-07-09 12:56:52+00:00,[],https://api.github.com/licenses/gpl-3.0
541,https://github.com/Jacobzwh/project3_riscv.git,2021-08-02 15:23:22+00:00,,0,Jacobzwh/project3_riscv,391999458,SystemVerilog,project3_riscv,198,0,2021-08-02 17:12:34+00:00,[],None
542,https://github.com/Kiran760043/Synchronous-FIFO.git,2021-07-27 22:56:34+00:00,,0,Kiran760043/Synchronous-FIFO,390149644,SystemVerilog,Synchronous-FIFO,390,0,2021-07-27 23:02:56+00:00,[],https://api.github.com/licenses/unlicense
543,https://github.com/umutozdemr/DigitalDesignProject.git,2021-07-30 07:39:16+00:00,,0,umutozdemr/DigitalDesignProject,390975929,SystemVerilog,DigitalDesignProject,4,0,2021-07-30 07:42:03+00:00,[],None
544,https://github.com/blackcatruri/uvm_test.git,2021-07-05 03:29:03+00:00,,0,blackcatruri/uvm_test,383002964,SystemVerilog,uvm_test,8507,0,2021-09-17 09:48:55+00:00,[],None
545,https://github.com/kmakhno/hdl_ip.git,2021-07-09 14:10:30+00:00,,0,kmakhno/hdl_ip,384457067,SystemVerilog,hdl_ip,4,0,2021-08-27 14:07:05+00:00,[],None
546,https://github.com/SheronSuditha/SIT329-Advanced-Embedded-Systems.git,2021-07-22 11:37:31+00:00,,0,SheronSuditha/SIT329-Advanced-Embedded-Systems,388440432,SystemVerilog,SIT329-Advanced-Embedded-Systems,0,0,2021-07-22 11:39:03+00:00,[],None
547,https://github.com/amirshmul/Logic-Design-Building-Blocks.git,2021-07-04 14:56:30+00:00,,0,amirshmul/Logic-Design-Building-Blocks,382878358,SystemVerilog,Logic-Design-Building-Blocks,582,0,2021-08-20 15:16:56+00:00,[],None
548,https://github.com/namanmody-UML/HeterogenousComputing-Lab4.git,2021-07-28 17:28:15+00:00,,0,namanmody-UML/HeterogenousComputing-Lab4,390442378,SystemVerilog,HeterogenousComputing-Lab4,18396,0,2021-07-28 18:45:29+00:00,[],https://api.github.com/licenses/mit
549,https://github.com/Niu0351/Image-Decompressor-Project.git,2021-03-30 14:13:04+00:00,,0,Niu0351/Image-Decompressor-Project,353025364,SystemVerilog,Image-Decompressor-Project,2159,0,2021-03-30 14:35:27+00:00,[],None
550,https://github.com/karthik-0398/Vector-parallel-graphics-accelerator.git,2021-05-02 08:47:15+00:00,,0,karthik-0398/Vector-parallel-graphics-accelerator,363605710,SystemVerilog,Vector-parallel-graphics-accelerator,214648,0,2022-08-03 08:09:40+00:00,[],https://api.github.com/licenses/gpl-3.0
551,https://github.com/charkster/trigger.git,2021-05-09 22:14:45+00:00,SystemVerilog FPGA design of a custom trigger circuit which can be used with oscilloscopes or logic analyzers.,0,charkster/trigger,365858456,SystemVerilog,trigger,321,0,2022-10-22 23:34:52+00:00,"['cmod-a7', 'fpga', 'trigger', 'systemverilog', 'scarf']",https://api.github.com/licenses/mit
552,https://github.com/ashtneoi/DE0-Nano-skeleton.git,2021-05-09 03:06:13+00:00,,0,ashtneoi/DE0-Nano-skeleton,365655879,SystemVerilog,DE0-Nano-skeleton,18,0,2021-05-14 18:04:08+00:00,[],None
553,https://github.com/peterzhong2001/EE271_Labs.git,2021-05-13 22:46:53+00:00,,0,peterzhong2001/EE271_Labs,367192140,SystemVerilog,EE271_Labs,22284,0,2021-05-14 06:57:47+00:00,[],None
554,https://github.com/470486104/J1_WB-master.git,2021-05-15 10:37:47+00:00,,0,470486104/J1_WB-master,367604163,SystemVerilog,J1_WB-master,1380,0,2021-05-20 01:30:04+00:00,[],None
555,https://github.com/OikawaLab/NexysVideo_skeleton.git,2021-05-13 06:41:44+00:00,,0,OikawaLab/NexysVideo_skeleton,366958551,SystemVerilog,NexysVideo_skeleton,10,0,2021-05-13 06:41:58+00:00,[],None
556,https://github.com/raychen0212/ASIC-Design.git,2021-05-12 01:50:50+00:00,,0,raychen0212/ASIC-Design,366562194,SystemVerilog,ASIC-Design,1591,0,2022-01-18 07:39:07+00:00,[],None
557,https://github.com/MarianoIDC/ProyectoTallerDigitales.git,2021-05-19 01:18:24+00:00,,0,MarianoIDC/ProyectoTallerDigitales,368708981,SystemVerilog,ProyectoTallerDigitales,82,0,2021-06-15 06:03:14+00:00,[],None
558,https://github.com/zackfravel/MESI-Cache-Simulator.git,2021-05-22 20:29:17+00:00,"Final project for ECE585 - Microprocessor Systems Design (Winter 2021, Portland State University) ",0,zackfravel/MESI-Cache-Simulator,369900215,SystemVerilog,MESI-Cache-Simulator,791,0,2021-05-22 20:32:00+00:00,[],None
559,https://github.com/kanedayo/test_systemverilog.git,2021-05-19 10:44:32+00:00,,0,kanedayo/test_systemverilog,368834278,SystemVerilog,test_systemverilog,22,0,2021-11-02 15:39:41+00:00,[],None
560,https://github.com/kentiscool/CSE140L-Lab2.git,2021-05-05 02:25:51+00:00,,0,kentiscool/CSE140L-Lab2,364440560,SystemVerilog,CSE140L-Lab2,201,0,2021-05-07 22:56:10+00:00,[],None
561,https://github.com/Vivek-Dave/UVM_TestBench_For_Logic_gates.git,2021-06-14 13:21:53+00:00,Complete UVM TestBecnh For Verification Of All Logic Gates ,0,Vivek-Dave/UVM_TestBench_For_Logic_gates,376830720,SystemVerilog,UVM_TestBench_For_Logic_gates,79,0,2021-06-14 13:29:24+00:00,[],None
562,https://github.com/harshitaaaaaa/fpga_lab_requirements.git,2021-06-24 14:43:45+00:00,,0,harshitaaaaaa/fpga_lab_requirements,379957521,,fpga_lab_requirements,85,0,2021-06-26 17:17:36+00:00,[],None
563,https://github.com/Jseok-Heo/CAM2VGA.git,2021-06-26 14:08:25+00:00,OV7670 Camera to VGA monitor,0,Jseok-Heo/CAM2VGA,380517250,SystemVerilog,CAM2VGA,2998,0,2021-07-24 16:04:45+00:00,[],None
564,https://github.com/ishan-patil2388/AHB_UVM_BASIC_SKELETON.git,2021-04-18 11:31:04+00:00,This is a basic AHB UVM based testbech for dummy testing of UVM features,0,ishan-patil2388/AHB_UVM_BASIC_SKELETON,359124995,SystemVerilog,AHB_UVM_BASIC_SKELETON,5,0,2021-04-18 11:32:35+00:00,[],None
565,https://github.com/hamidkhd/MIPS-PipeLine.git,2021-04-27 07:31:27+00:00,,0,hamidkhd/MIPS-PipeLine,362021087,SystemVerilog,MIPS-PipeLine,1596,0,2022-10-11 08:07:40+00:00,[],None
566,https://github.com/aman-gill/riscv_rv32i.git,2021-04-28 16:09:56+00:00,Repo for CPU using RISC-V RV32I ISA,0,aman-gill/riscv_rv32i,362532043,SystemVerilog,riscv_rv32i,2,0,2023-02-22 05:46:04+00:00,[],None
567,https://github.com/hadiloomehdi/ARM.git,2021-04-29 18:48:29+00:00,,0,hadiloomehdi/ARM,362915936,SystemVerilog,ARM,69,0,2021-06-25 19:38:20+00:00,[],None
568,https://github.com/yangli900520/FFT.git,2021-04-08 21:52:10+00:00,Configurable FFT,0,yangli900520/FFT,356057133,SystemVerilog,FFT,27,0,2021-04-08 21:53:10+00:00,[],None
569,https://github.com/putnik47/dds_sin_uvm.git,2021-04-07 16:09:28+00:00,simple dds sin generator with uvm verification environment,0,putnik47/dds_sin_uvm,355607419,SystemVerilog,dds_sin_uvm,33,0,2021-04-07 16:52:44+00:00,[],https://api.github.com/licenses/gpl-3.0
570,https://github.com/yohansh/CodeBlock_Verification_Work.git,2021-04-07 12:45:57+00:00,,0,yohansh/CodeBlock_Verification_Work,355541831,SystemVerilog,CodeBlock_Verification_Work,742,0,2021-04-07 12:51:37+00:00,[],None
571,https://github.com/hao310rui140326/example_and_uvm_source_code.git,2021-04-07 09:26:52+00:00,,0,hao310rui140326/example_and_uvm_source_code,355485908,SystemVerilog,example_and_uvm_source_code,2523,0,2021-04-07 09:34:33+00:00,[],None
572,https://github.com/mfkiwl/azadi.git,2021-03-31 07:36:42+00:00,Azadi is an SoC with 32 bit RISC-V CPU core.,0,mfkiwl/azadi,353268183,,azadi,25893,0,2021-04-17 08:24:16+00:00,[],None
573,https://github.com/adnanashraf17501/System-Verilog-Based-Verification-of-Decoder.git,2021-06-29 07:43:11+00:00,,0,adnanashraf17501/System-Verilog-Based-Verification-of-Decoder,381280832,SystemVerilog,System-Verilog-Based-Verification-of-Decoder,216,0,2021-06-29 07:43:59+00:00,[],None
574,https://github.com/devmanaktala10/StreetFighterFPGA.git,2021-07-17 22:21:17+00:00,Street Fighter Remastered on FPGA as a 2-player game on a VGA console.,0,devmanaktala10/StreetFighterFPGA,387046524,SystemVerilog,StreetFighterFPGA,35176,0,2021-07-17 22:32:19+00:00,[],None
575,https://github.com/zheng-yijia/Algorithm-Training.git,2021-07-16 01:58:17+00:00,Algorithm Study.,0,zheng-yijia/Algorithm-Training,386477732,SystemVerilog,Algorithm-Training,4,0,2021-07-19 06:33:44+00:00,['algorithm'],https://api.github.com/licenses/mit
576,https://github.com/yoonseo-choi/FPGA_NeuralNet.git,2021-05-25 23:40:30+00:00,,0,yoonseo-choi/FPGA_NeuralNet,370854608,SystemVerilog,FPGA_NeuralNet,11667,0,2022-02-04 00:04:48+00:00,[],None
577,https://github.com/lashraelrx/RISC-V-PROJECT.git,2021-05-28 20:48:12+00:00,,0,lashraelrx/RISC-V-PROJECT,371815250,SystemVerilog,RISC-V-PROJECT,40557,0,2021-05-28 20:58:53+00:00,[],None
578,https://github.com/hao310rui140326/board_kernel_interface.git,2021-06-04 02:11:27+00:00,board_kernel_interface,0,hao310rui140326/board_kernel_interface,373694883,SystemVerilog,board_kernel_interface,169,0,2021-06-04 02:34:04+00:00,[],None
579,https://github.com/rag1404/AHB_Slave_dut_Master_UVMTB.git,2021-07-04 21:22:35+00:00,A simple AHB Slave dut and Master UVM TB,0,rag1404/AHB_Slave_dut_Master_UVMTB,382950803,SystemVerilog,AHB_Slave_dut_Master_UVMTB,12,0,2021-07-04 21:27:26+00:00,[],None
580,https://github.com/smeng1024/Count-One-Circuit.git,2021-08-02 02:35:30+00:00,This is just a studying project. It is a circuit that can count how many 1s are in a 32 bit input. And the TB written in SV is also attached,0,smeng1024/Count-One-Circuit,391795107,SystemVerilog,Count-One-Circuit,1,0,2021-08-02 02:40:37+00:00,[],None
581,https://github.com/Anson-Sun/MIPS_32bit.git,2021-08-11 23:12:37+00:00,,0,Anson-Sun/MIPS_32bit,395137778,SystemVerilog,MIPS_32bit,5175,0,2021-08-11 23:25:05+00:00,[],None
582,https://github.com/villyye97/EE-469-HW2.git,2021-08-07 16:16:36+00:00,Design of ALU.,0,villyye97/EE-469-HW2,393732248,SystemVerilog,EE-469-HW2,11,0,2021-08-07 16:21:10+00:00,[],None
583,https://github.com/Fireflaker/SummerResearchTemp.git,2021-07-22 00:29:38+00:00,SHA-3 implementation on Artix7 FPGA in System Verilog ,0,Fireflaker/SummerResearchTemp,388282020,SystemVerilog,SummerResearchTemp,4752,0,2021-08-09 14:45:34+00:00,[],None
584,https://github.com/mfkiwl/ss_rvc.git,2021-07-26 06:02:56+00:00,"subset riscv rv32i Core, Tile, Fabric",0,mfkiwl/ss_rvc,389524792,,ss_rvc,1,0,2021-08-04 14:42:32+00:00,[],https://api.github.com/licenses/mit
585,https://github.com/Ammar-Bin-Amir/RV32I_Single_Cycle_CPU.git,2021-04-04 17:48:21+00:00,Processor Design of RV32I Single Cycle CPU,0,Ammar-Bin-Amir/RV32I_Single_Cycle_CPU,354609481,SystemVerilog,RV32I_Single_Cycle_CPU,601,0,2024-01-15 07:44:56+00:00,"['risc-v', 'rtl-design', 'rv32i', 'single-cycle-processor', 'digital-circuit-design']",None
586,https://github.com/A00x40/FC-Layer.git,2021-05-23 20:01:08+00:00,,1,A00x40/FC-Layer,370146282,SystemVerilog,FC-Layer,508,0,2021-06-10 20:36:11+00:00,[],None
587,https://github.com/Vivek-Dave/UVM_TestBench_For_Encoder.git,2021-06-03 02:52:31+00:00,Complete UVM TestBench For Verification Of 8x3 Encoder,0,Vivek-Dave/UVM_TestBench_For_Encoder,373362804,SystemVerilog,UVM_TestBench_For_Encoder,81,0,2021-06-03 02:57:05+00:00,[],None
588,https://github.com/Alfred9998/APB.git,2021-05-31 14:07:45+00:00,,0,Alfred9998/APB,372527789,SystemVerilog,APB,20,0,2021-05-31 14:09:03+00:00,[],None
589,https://github.com/NoharMarcus/FPGA_lab_project.git,2021-06-01 05:58:23+00:00,"Final 1a lab project , game called bumpy, using all analog components. Peoject By Chen Shmueli and Nohar Marcus",0,NoharMarcus/FPGA_lab_project,372717239,SystemVerilog,FPGA_lab_project,28969,0,2021-06-01 06:36:26+00:00,[],https://api.github.com/licenses/gpl-3.0
590,https://github.com/jorgeaportilla/ELO212-2021-1.git,2021-06-08 15:52:34+00:00,Archivos asociados a la realizaci√≥n de ELO212 Laboratorio de Sistemas Digitales durante el a√±o 2021 primer semestre.,0,jorgeaportilla/ELO212-2021-1,375065622,,ELO212-2021-1,30,0,2021-08-06 20:06:56+00:00,[],None
591,https://github.com/hao310rui140326/uvm-1.2.git,2021-04-07 09:39:49+00:00,,0,hao310rui140326/uvm-1.2,355489529,SystemVerilog,uvm-1.2,2067,0,2021-04-07 09:40:46+00:00,[],https://api.github.com/licenses/apache-2.0
592,https://github.com/FeBarbosa/UVM_example.git,2021-04-07 19:44:56+00:00,A testbench using UVM to test TinyALU,0,FeBarbosa/UVM_example,355664128,SystemVerilog,UVM_example,12,0,2021-05-24 20:01:30+00:00,[],None
593,https://github.com/Philngtn/Labs_systemVerilog.git,2021-04-08 00:50:27+00:00,Basic labs for practicing system verilog ,0,Philngtn/Labs_systemVerilog,355721655,SystemVerilog,Labs_systemVerilog,510,0,2021-04-08 00:56:08+00:00,[],None
594,https://github.com/adenzer/ECE_593_A1.git,2021-03-31 02:28:20+00:00,,1,adenzer/ECE_593_A1,353200555,SystemVerilog,ECE_593_A1,551,0,2021-04-22 06:20:28+00:00,[],None
595,https://github.com/vvzunin/systolic_array.git,2021-04-11 21:33:17+00:00,,0,vvzunin/systolic_array,356984307,SystemVerilog,systolic_array,41314,0,2021-05-23 15:17:28+00:00,[],None
596,https://github.com/deoregaurav92/SystemVerilog_Coding_Practice.git,2021-06-27 19:22:10+00:00,,1,deoregaurav92/SystemVerilog_Coding_Practice,380821149,SystemVerilog,SystemVerilog_Coding_Practice,27,0,2021-07-27 18:10:39+00:00,[],None
597,https://github.com/aurthurtang/finding_first_one.git,2021-06-30 23:18:05+00:00,A simple verilog example for returning the index of the first '1' for data with length of N,0,aurthurtang/finding_first_one,381855490,SystemVerilog,finding_first_one,1,0,2021-06-30 23:19:08+00:00,[],None
598,https://github.com/atsmith3/riscv.git,2021-06-12 05:45:25+00:00,,0,atsmith3/riscv,376212143,SystemVerilog,riscv,64,0,2022-03-27 06:09:27+00:00,[],None
599,https://github.com/lrvnc/trabalho6-microarquitetura.git,2021-06-18 02:18:59+00:00,,0,lrvnc/trabalho6-microarquitetura,378010945,SystemVerilog,trabalho6-microarquitetura,5,0,2021-06-18 02:19:27+00:00,[],None
600,https://github.com/adnanashraf17501/dff_uvm.git,2021-05-30 06:20:52+00:00,,0,adnanashraf17501/dff_uvm,372139440,SystemVerilog,dff_uvm,5,0,2021-05-30 06:21:35+00:00,[],None
601,https://github.com/pranjal-mittal0/NoCRouter.git,2021-05-27 18:09:16+00:00,,0,pranjal-mittal0/NoCRouter,371463421,SystemVerilog,NoCRouter,650,0,2021-06-20 11:48:06+00:00,[],https://api.github.com/licenses/mit
602,https://github.com/Jseok-Heo/FIFO.git,2021-05-22 17:07:10+00:00,Asynchronous First-In First-Out,0,Jseok-Heo/FIFO,369863857,SystemVerilog,FIFO,12,0,2021-05-30 06:49:09+00:00,[],None
603,https://github.com/Danil1997Dev/buzzer.git,2021-05-24 14:44:15+00:00,,0,Danil1997Dev/buzzer,370385594,SystemVerilog,buzzer,4441,0,2021-05-24 14:57:12+00:00,[],None
604,https://github.com/WeitingLian/UVM_Practice.git,2021-07-11 03:26:33+00:00,,0,WeitingLian/UVM_Practice,384851491,SystemVerilog,UVM_Practice,11,0,2021-07-20 15:58:49+00:00,[],None
605,https://github.com/mec391/system_verilog_practice.git,2021-07-06 00:30:57+00:00,Practice Code for Systemverilog,0,mec391/system_verilog_practice,383295564,SystemVerilog,system_verilog_practice,1,0,2021-07-06 01:56:17+00:00,[],None
606,https://github.com/evannuss/BYUecen220.git,2021-07-27 00:10:34+00:00,,0,evannuss/BYUecen220,389801227,SystemVerilog,BYUecen220,29,0,2021-07-27 00:16:36+00:00,[],None
607,https://github.com/Monsoonexe/cpe200-project.git,2021-07-29 19:50:35+00:00,Semester project by Justin and Rich.,0,Monsoonexe/cpe200-project,390834867,SystemVerilog,cpe200-project,894,0,2021-08-14 03:49:23+00:00,[],None
608,https://github.com/Gehad-16/-problems-using-system-Verilog-.git,2021-07-11 21:00:39+00:00,,0,Gehad-16/-problems-using-system-Verilog-,385051242,SystemVerilog,-problems-using-system-Verilog-,1246,0,2021-07-11 21:08:34+00:00,[],None
609,https://github.com/ahmedmed/EventGenerator.git,2021-04-30 13:18:57+00:00,,0,ahmedmed/EventGenerator,363146863,SystemVerilog,EventGenerator,8,0,2021-04-30 13:19:24+00:00,[],None
610,https://github.com/bhargavasai222/bhargav123.git,2021-04-19 05:17:53+00:00,,0,bhargavasai222/bhargav123,359337275,SystemVerilog,bhargav123,6,0,2021-04-19 05:18:07+00:00,[],None
611,https://github.com/ThePVY/processor_core.git,2021-04-21 08:03:24+00:00,,0,ThePVY/processor_core,360082203,SystemVerilog,processor_core,23,0,2021-04-21 08:10:32+00:00,[],None
612,https://github.com/nodenskoren/ece411_mp3_sp2018-risingedge.git,2021-04-23 07:39:56+00:00,,0,nodenskoren/ece411_mp3_sp2018-risingedge,360802934,SystemVerilog,ece411_mp3_sp2018-risingedge,94187,0,2021-04-23 07:42:44+00:00,[],None
613,https://github.com/Tyler1T/HSCA-Final-Project.git,2021-04-22 18:36:11+00:00,,0,Tyler1T/HSCA-Final-Project,360646884,SystemVerilog,HSCA-Final-Project,1428,0,2021-05-02 03:30:31+00:00,[],https://api.github.com/licenses/gpl-3.0
614,https://github.com/ArquiII-2021-S1/ASIPVectorial.git,2021-05-13 16:16:05+00:00,,0,ArquiII-2021-S1/ASIPVectorial,367105774,SystemVerilog,ASIPVectorial,6696,0,2021-06-07 04:46:54+00:00,[],https://api.github.com/licenses/mit
615,https://github.com/Je06jm/64-bit-CPU.git,2021-04-04 00:03:00+00:00,A 64 bit CPU following modern principles,0,Je06jm/64-bit-CPU,354419836,SystemVerilog,64-bit-CPU,89,0,2021-04-24 01:11:15+00:00,[],None
616,https://github.com/dclab02/final_project.git,2021-05-17 09:36:07+00:00,DCLab Final Project,0,dclab02/final_project,368131001,SystemVerilog,final_project,736,0,2021-12-11 14:57:57+00:00,[],None
617,https://github.com/NitishaS-812k/Verilog-codes.git,2021-05-14 17:44:29+00:00,"A collection of basic gates , combinational circuits and sequential circuits modelled in system verilog ",0,NitishaS-812k/Verilog-codes,367438828,SystemVerilog,Verilog-codes,31,0,2021-06-02 11:07:01+00:00,[],https://api.github.com/licenses/mit
618,https://github.com/uranusb/UART_UVM.git,2021-05-14 16:50:35+00:00,A testbench for UART using UVM,0,uranusb/UART_UVM,367426024,SystemVerilog,UART_UVM,133,0,2021-05-15 06:38:46+00:00,[],None
619,https://github.com/bhyou/sensor-network-readout.git,2021-07-16 04:56:57+00:00,,0,bhyou/sensor-network-readout,386514038,SystemVerilog,sensor-network-readout,23,0,2021-07-30 03:32:31+00:00,[],None
620,https://github.com/namanmody-UML/HeterogenousCompLab3.git,2021-07-17 12:16:00+00:00,,0,namanmody-UML/HeterogenousCompLab3,386929442,SystemVerilog,HeterogenousCompLab3,17750,0,2021-07-17 12:44:19+00:00,[],https://api.github.com/licenses/apache-2.0
621,https://github.com/CloudNomad/github.io.git,2021-08-12 16:03:24+00:00,FPGA 100% Hardware Synthesized Galaga (2D Arcade Game) - ECE 385,0,CloudNomad/github.io,395374015,SystemVerilog,github.io,24716,0,2021-08-12 20:38:47+00:00,[],None
622,https://github.com/De3ph/A-Simple-8-Bit-Processor.git,2021-07-05 16:37:09+00:00,,0,De3ph/A-Simple-8-Bit-Processor,383204719,SystemVerilog,A-Simple-8-Bit-Processor,281,0,2024-01-19 20:05:38+00:00,[],None
623,https://github.com/bigBrain1901/nPOWER-ISA-5-STAGE-PIPELINED-CPU.git,2021-05-02 10:57:09+00:00,,0,bigBrain1901/nPOWER-ISA-5-STAGE-PIPELINED-CPU,363628697,SystemVerilog,nPOWER-ISA-5-STAGE-PIPELINED-CPU,1056,0,2021-10-15 09:56:12+00:00,[],None
624,https://github.com/hansgaensbauer/riscv-democore.git,2021-04-07 23:45:53+00:00,"My scratch implementation of a pipelined RV32I processor, for fun and practice. ",0,hansgaensbauer/riscv-democore,355711086,SystemVerilog,riscv-democore,41,0,2021-08-21 16:20:16+00:00,[],None
625,https://github.com/GeorgeKef-School-Projects/fpga_score_4.git,2021-03-29 18:34:30+00:00,"Course: VLSI. The main objective of this project was the implementation of the well-known score_4 game on FPGA. Also, in this project both the results of each players' moves and the status of the game(win/lose/draw) had to be displayed on a monitor through VGA. In this repository you can find both the module for the gameplay but also a test bench that is mainly created from the director of the course.",0,GeorgeKef-School-Projects/fpga_score_4,352747146,SystemVerilog,fpga_score_4,5,0,2022-05-24 17:07:57+00:00,[],None
626,https://github.com/Vivek-Dave/UVM_TestBench_For_BCD_To_7_Segment.git,2021-06-05 15:37:58+00:00,Complete UVM TestBench For Verification Of BCD To 7 Segment Converter,0,Vivek-Dave/UVM_TestBench_For_BCD_To_7_Segment,374150740,SystemVerilog,UVM_TestBench_For_BCD_To_7_Segment,79,0,2021-06-05 15:47:50+00:00,[],None
627,https://github.com/hx15/AMBA_AP3_UVM.git,2021-04-27 19:02:00+00:00,,0,hx15/AMBA_AP3_UVM,362221376,SystemVerilog,AMBA_AP3_UVM,11,0,2021-04-27 19:32:46+00:00,[],None
628,https://github.com/iliyankrastanov/SV_UVM_training.git,2021-05-18 08:28:50+00:00,,0,iliyankrastanov/SV_UVM_training,368456306,SystemVerilog,SV_UVM_training,200,0,2021-11-09 12:46:45+00:00,[],None
629,https://github.com/adnanashraf17501/uvm_4_16_decoder.git,2021-05-30 06:19:46+00:00,,0,adnanashraf17501/uvm_4_16_decoder,372139272,SystemVerilog,uvm_4_16_decoder,132,0,2021-05-30 06:20:31+00:00,[],None
630,https://github.com/lrvnc/trabalho5-verilog.git,2021-06-10 19:55:57+00:00,,0,lrvnc/trabalho5-verilog,375815588,SystemVerilog,trabalho5-verilog,3020,0,2021-06-10 20:17:01+00:00,[],None
631,https://github.com/aknapen/otter-fun.git,2021-06-24 19:19:08+00:00,Fun side projects with the RISC-V OTTER CPU,0,aknapen/otter-fun,380028750,SystemVerilog,otter-fun,10,0,2021-06-24 21:21:45+00:00,[],None
632,https://github.com/BrandanJV/Scanner3D.git,2021-05-09 00:39:08+00:00,,0,BrandanJV/Scanner3D,365638090,SystemVerilog,Scanner3D,408,0,2021-06-04 23:42:26+00:00,[],None
633,https://github.com/MEETMS7/tvip-common.git,2021-05-16 09:25:01+00:00,,0,MEETMS7/tvip-common,367835622,SystemVerilog,tvip-common,11,0,2021-05-16 09:25:15+00:00,[],https://api.github.com/licenses/apache-2.0
634,https://github.com/MarianoIDC/Lab4_TTT.git,2021-05-05 19:13:03+00:00,,0,MarianoIDC/Lab4_TTT,364681708,SystemVerilog,Lab4_TTT,10,0,2021-05-11 10:18:55+00:00,[],None
635,https://github.com/MarianoIDC/TallerDigitales.git,2021-08-04 01:36:16+00:00,,0,MarianoIDC/TallerDigitales,392509320,SystemVerilog,TallerDigitales,151035,0,2022-01-04 15:31:48+00:00,[],None
636,https://github.com/MickeyMouseMouse/AlarmClock.git,2021-07-02 13:14:08+00:00,,0,MickeyMouseMouse/AlarmClock,382351076,SystemVerilog,AlarmClock,2,0,2021-07-02 13:25:54+00:00,[],None
637,https://github.com/liqinyang/Analysis-of-random-numbers-using-FPGAs.git,2021-06-15 16:45:33+00:00,,0,liqinyang/Analysis-of-random-numbers-using-FPGAs,377231838,SystemVerilog,Analysis-of-random-numbers-using-FPGAs,2342,0,2021-06-16 15:04:32+00:00,[],None
638,https://github.com/Thanujsai/4X4-multiplier.git,2021-06-18 18:02:31+00:00,This project multiplies the given two 4 bit numbers.,0,Thanujsai/4X4-multiplier,378229419,SystemVerilog,4X4-multiplier,30,0,2021-06-21 05:20:52+00:00,[],None
639,https://github.com/RyanNand/MyProjects.git,2021-06-17 18:28:36+00:00,A repo for all personal projects done.,0,RyanNand/MyProjects,377926277,SystemVerilog,MyProjects,54556,0,2021-10-08 05:29:49+00:00,[],None
640,https://github.com/ttsaadet/FPGA-Based-POS-Terminal_METU_EE314.git,2021-06-19 06:35:12+00:00,,0,ttsaadet/FPGA-Based-POS-Terminal_METU_EE314,378342320,SystemVerilog,FPGA-Based-POS-Terminal_METU_EE314,41,0,2023-01-28 00:07:57+00:00,[],None
641,https://github.com/Haridhra/VGA_Pong_FPGA.git,2021-07-12 18:19:08+00:00,,0,Haridhra/VGA_Pong_FPGA,385343136,SystemVerilog,VGA_Pong_FPGA,1072,0,2022-05-23 17:40:19+00:00,[],None
642,https://github.com/fcarli3/tiny_encryption_algorithm.git,2021-07-22 19:26:49+00:00,Final Project of Hardware and Embedded Security course (Master's Degree in Cybersecurity at University of Pisa) ,1,fcarli3/tiny_encryption_algorithm,388574650,SystemVerilog,tiny_encryption_algorithm,2680,0,2021-09-08 14:34:06+00:00,[],None
643,https://github.com/adi-s-bit/Verilog-Projects.git,2021-07-29 20:04:57+00:00,,0,adi-s-bit/Verilog-Projects,390838109,SystemVerilog,Verilog-Projects,349,0,2021-08-02 15:55:16+00:00,[],None
644,https://github.com/Fernsicles/Clock_Generator.git,2021-07-29 04:23:26+00:00,,0,Fernsicles/Clock_Generator,390598935,SystemVerilog,Clock_Generator,0,0,2021-07-29 04:23:45+00:00,[],None
645,https://github.com/brandon197/LRU_Intigrated-Circuit.git,2021-04-24 03:45:19+00:00,A VLSI design of the Least Recently Used algorithm,0,brandon197/LRU_Intigrated-Circuit,361063704,SystemVerilog,LRU_Intigrated-Circuit,22588,0,2021-04-24 04:04:08+00:00,[],None
646,https://github.com/MohammedAbuFares/Verification-of-ALU.git,2021-05-23 06:01:23+00:00,,0,MohammedAbuFares/Verification-of-ALU,369973510,SystemVerilog,Verification-of-ALU,7934,0,2021-05-23 06:02:46+00:00,[],None
647,https://github.com/viki22052/sv_uvm_training.git,2021-05-17 12:10:08+00:00,,0,viki22052/sv_uvm_training,368171982,SystemVerilog,sv_uvm_training,125,0,2021-06-18 15:33:20+00:00,[],None
648,https://github.com/alopez802/project.git,2021-05-10 05:54:56+00:00,,0,alopez802/project,365932961,SystemVerilog,project,25256,0,2021-05-17 01:43:49+00:00,[],None
649,https://github.com/Stefanshi2019/ECE342.git,2021-05-03 23:58:35+00:00,,0,Stefanshi2019/ECE342,364092487,SystemVerilog,ECE342,6970,0,2021-05-03 23:59:22+00:00,[],None
650,https://github.com/rvkrysh/openrtl.git,2021-04-02 03:52:14+00:00,free rtl source,0,rvkrysh/openrtl,353898233,SystemVerilog,openrtl,5,0,2021-12-06 10:04:16+00:00,[],None
651,https://github.com/thao-n/UART.git,2021-03-29 13:50:24+00:00,,0,thao-n/UART,352660352,SystemVerilog,UART,3,0,2021-03-29 13:51:01+00:00,[],None
652,https://github.com/snowtothemax/ECE551FinalProject.git,2021-04-06 17:30:42+00:00,,0,snowtothemax/ECE551FinalProject,355275996,SystemVerilog,ECE551FinalProject,51017,0,2023-08-13 01:12:33+00:00,[],None
653,https://github.com/aknapen/cpe333.git,2021-04-06 17:50:57+00:00,,1,aknapen/cpe333,355281460,SystemVerilog,cpe333,628,0,2021-06-24 19:14:45+00:00,[],None
654,https://github.com/matsumon/System-Verilog-NES-Receiver.git,2021-06-10 04:08:52+00:00,,0,matsumon/System-Verilog-NES-Receiver,375565849,SystemVerilog,System-Verilog-NES-Receiver,13870,0,2021-06-10 04:41:11+00:00,[],None
655,https://github.com/Vivek-Dave/UVM_TestBench_For_Multiplexer.git,2021-05-04 06:30:41+00:00,Complete UVM Testbench for Verification of 8x1 Multiplexer,0,Vivek-Dave/UVM_TestBench_For_Multiplexer,364161334,SystemVerilog,UVM_TestBench_For_Multiplexer,79,0,2021-05-04 06:37:25+00:00,[],None
656,https://github.com/skyfenton/otter-mcu.git,2021-05-01 20:31:42+00:00,OTTER microcomputing unit implementing RISC-V architecture (with some custom instructions) to be deployed to a Artix-7 Baysis 3 FPGA,0,skyfenton/otter-mcu,363501664,SystemVerilog,otter-mcu,14565,0,2022-01-29 19:17:06+00:00,[],https://api.github.com/licenses/mit
657,https://github.com/moiz8989/ece-593-pre-silicon.git,2021-04-12 01:06:04+00:00,,1,moiz8989/ece-593-pre-silicon,357018001,SystemVerilog,ece-593-pre-silicon,1170,0,2021-04-12 03:46:07+00:00,[],None
658,https://github.com/Vivek-Dave/SystemVerilog.git,2021-04-19 13:15:45+00:00,Examples In SystemVerilog,0,Vivek-Dave/SystemVerilog,359465744,SystemVerilog,SystemVerilog,12,0,2021-04-19 13:19:48+00:00,[],None
659,https://github.com/abbasrsyedk/SystemVerilog.git,2021-06-07 03:38:49+00:00,,0,abbasrsyedk/SystemVerilog,374524880,SystemVerilog,SystemVerilog,26,0,2021-08-22 03:40:16+00:00,[],None
660,https://github.com/yuri-panchul/2019_2021_eda_playground.git,2021-06-22 06:08:31+00:00,,1,yuri-panchul/2019_2021_eda_playground,379160614,SystemVerilog,2019_2021_eda_playground,17,0,2021-06-22 06:11:16+00:00,[],None
661,https://github.com/hansikaweerasena/Chaffing-and-Winnowing.git,2021-04-24 19:53:06+00:00,,0,hansikaweerasena/Chaffing-and-Winnowing,361253472,SystemVerilog,Chaffing-and-Winnowing,18,0,2021-10-04 21:35:30+00:00,[],None
662,https://github.com/alpylmmz/video-scene.git,2021-05-26 11:41:40+00:00,,0,alpylmmz/video-scene,371012862,SystemVerilog,video-scene,10130,0,2023-05-31 21:12:41+00:00,[],None
663,https://github.com/deserthobo13/Thunderbird_lights.git,2021-06-04 04:25:43+00:00,Simply state machine showing the turning lights and hazards of a mustang Thunderbird.,0,deserthobo13/Thunderbird_lights,373719345,SystemVerilog,Thunderbird_lights,6,0,2021-06-04 04:27:16+00:00,[],None
664,https://github.com/OkanSen/Mips-and-Verilog-Practices-4.git,2021-06-24 13:57:26+00:00,,0,OkanSen/Mips-and-Verilog-Practices-4,379942873,SystemVerilog,Mips-and-Verilog-Practices-4,232,0,2021-06-24 14:04:30+00:00,[],None
665,https://github.com/jiru1997/Implementation-of-the-Click-controller.git,2021-06-21 01:17:52+00:00,implementation of the Click controller,0,jiru1997/Implementation-of-the-Click-controller,378772576,SystemVerilog,Implementation-of-the-Click-controller,173,0,2021-06-21 01:21:07+00:00,[],None
666,https://github.com/4mod3/matrix_mul_fyp.git,2021-04-16 16:32:34+00:00,Reproduce a linear array architecture dealing with arbitrary-size matrix multiplication.,0,4mod3/matrix_mul_fyp,358659751,SystemVerilog,matrix_mul_fyp,428,0,2021-06-24 11:09:49+00:00,[],None
667,https://github.com/danielgaio/sigmoid_taylor.git,2021-04-22 12:25:17+00:00,Implementa√ß√£o de arquitetura digital para a fun√ß√£o sigmoid pela t√©cnica de aproxima√ß√£o por s√©ries de Taylor.,0,danielgaio/sigmoid_taylor,360510282,SystemVerilog,sigmoid_taylor,8149,0,2021-10-14 21:25:55+00:00,[],None
668,https://github.com/MatusPilnan/asicde-collab-testing.git,2021-04-24 16:08:03+00:00,,0,MatusPilnan/asicde-collab-testing,361206745,SystemVerilog,asicde-collab-testing,0,0,2021-04-24 16:09:17+00:00,[],None
669,https://github.com/aurthurtang/StopWatch.git,2021-08-01 01:03:42+00:00,,0,aurthurtang/StopWatch,391492332,SystemVerilog,StopWatch,92,0,2021-08-01 17:57:59+00:00,[],None
670,https://github.com/pnayak1501/sun-sensors.git,2021-07-30 12:49:32+00:00,,1,pnayak1501/sun-sensors,391063002,SystemVerilog,sun-sensors,7,0,2021-08-12 09:44:31+00:00,[],None
671,https://github.com/AdityaBhargava64/Implementation_Full_Adder_using_VERILOG_HDL.git,2021-07-30 11:43:24+00:00,,0,AdityaBhargava64/Implementation_Full_Adder_using_VERILOG_HDL,391044001,SystemVerilog,Implementation_Full_Adder_using_VERILOG_HDL,6,0,2021-08-19 11:02:55+00:00,[],None
672,https://github.com/AndrewSain/HLS_Wrapper.git,2021-08-02 04:38:00+00:00,,0,AndrewSain/HLS_Wrapper,391816718,SystemVerilog,HLS_Wrapper,144,0,2021-11-22 23:32:51+00:00,[],None
673,https://github.com/paulikauro/verikool.git,2021-08-01 19:38:20+00:00,Fibonacci machines (CPUs),0,paulikauro/verikool,391721279,SystemVerilog,verikool,4,0,2021-08-02 15:31:21+00:00,[],None
674,https://github.com/zeeshandildar/Simple_alu_uvm_testbench.git,2021-08-02 05:52:43+00:00,,0,zeeshandildar/Simple_alu_uvm_testbench,391830442,SystemVerilog,Simple_alu_uvm_testbench,13,0,2021-08-04 06:59:34+00:00,[],None
675,https://github.com/CarsonChild/kogge_stone_adder.git,2021-08-12 20:51:38+00:00,,0,CarsonChild/kogge_stone_adder,395440885,SystemVerilog,kogge_stone_adder,3,0,2021-08-12 20:58:15+00:00,[],None
676,https://github.com/MalinaMetea/Snake-Game.git,2021-07-26 19:29:43+00:00,,0,MalinaMetea/Snake-Game,389746610,SystemVerilog,Snake-Game,9,0,2021-07-26 20:01:45+00:00,[],None
677,https://github.com/metzkorn/HDLtoys.git,2021-07-17 18:23:46+00:00,Small design toys to practice HDL with,0,metzkorn/HDLtoys,387011582,SystemVerilog,HDLtoys,1,0,2021-07-17 18:32:24+00:00,[],https://api.github.com/licenses/mit
678,https://github.com/Stanzin15/jkFF.git,2021-05-27 08:25:14+00:00,SV tb for jk flip flop,0,Stanzin15/jkFF,371300281,SystemVerilog,jkFF,4,0,2024-02-25 20:12:25+00:00,[],None
679,https://github.com/lapd-soc/ECE510-EFV.git,2021-04-22 02:49:33+00:00,Coursework for Emerging Function Verification,0,lapd-soc/ECE510-EFV,360372660,,ECE510-EFV,97664,0,2023-03-20 02:19:08+00:00,[],None
680,https://github.com/rhgod/RISC-V_Project.git,2021-05-08 14:23:01+00:00,"Within the scope of this project, we are going to design ALU and Instruction decoder blocks of a RISC-V processor by using the basic SystemVerilog language features.",0,rhgod/RISC-V_Project,365533672,SystemVerilog,RISC-V_Project,2673,0,2021-05-09 07:11:40+00:00,[],None
681,https://github.com/zmh403/PULPino_on_Vitis.git,2021-05-12 07:36:55+00:00,Use Xilinx RTL Wizard flow to run program on the SoC PULPino,0,zmh403/PULPino_on_Vitis,366632023,SystemVerilog,PULPino_on_Vitis,695,0,2021-05-19 05:16:34+00:00,[],None
682,https://github.com/DarthZhu/MIPS_MultiCycle.git,2021-05-10 15:30:29+00:00,,0,DarthZhu/MIPS_MultiCycle,366090863,SystemVerilog,MIPS_MultiCycle,6561,0,2021-07-20 02:41:28+00:00,[],None
683,https://github.com/MegaSoC/SoC.git,2021-04-03 03:39:57+00:00,,0,MegaSoC/SoC,354191528,SystemVerilog,SoC,80,0,2023-01-27 23:40:44+00:00,[],None
684,https://github.com/Zihaokong/CSE148.git,2021-04-08 05:55:27+00:00,,0,Zihaokong/CSE148,355779744,SystemVerilog,CSE148,89797,0,2021-04-08 05:57:20+00:00,[],None
685,https://github.com/melt-umn/ableC-checkedc.git,2021-04-01 20:03:21+00:00,,0,melt-umn/ableC-checkedc,353813542,SystemVerilog,ableC-checkedc,16,0,2021-04-01 20:04:01+00:00,[],https://api.github.com/licenses/lgpl-3.0
686,https://github.com/skmtti/mul.git,2021-04-08 14:20:45+00:00,32bit integer multiplier,0,skmtti/mul,355937003,SystemVerilog,mul,6,0,2022-04-13 18:24:19+00:00,[],None
687,https://github.com/knyuchen/fix_point_model.git,2021-04-10 13:57:58+00:00,Models for fixed-point computation,0,knyuchen/fix_point_model,356597450,SystemVerilog,fix_point_model,12,0,2021-11-23 01:49:50+00:00,"['fixed-point', 'systemverilog', 'matlab', 'python']",None
688,https://github.com/sunbanett40/XOR-Decryptor.git,2021-04-12 13:55:02+00:00,SystemVerilog Microprocessor for D2 Lab,0,sunbanett40/XOR-Decryptor,357213323,SystemVerilog,XOR-Decryptor,1447,0,2021-04-12 13:56:19+00:00,[],None
689,https://github.com/ChrisAndrea2011/Decoder.git,2021-04-26 10:08:20+00:00,,0,ChrisAndrea2011/Decoder,361703359,SystemVerilog,Decoder,3,0,2021-04-26 13:30:36+00:00,[],None
690,https://github.com/MaurizioCapra/automatic_synthesis.git,2021-04-22 07:18:23+00:00,,0,MaurizioCapra/automatic_synthesis,360427580,SystemVerilog,automatic_synthesis,10303,0,2021-04-22 07:33:38+00:00,[],None
691,https://github.com/zceeudd/ELEC0036---Microprocessor-GH.git,2021-04-14 10:08:55+00:00,,0,zceeudd/ELEC0036---Microprocessor-GH,357859677,SystemVerilog,ELEC0036---Microprocessor-GH,27,0,2021-04-14 10:12:03+00:00,[],None
692,https://github.com/LadyzRoman/verilog_i2c.git,2021-05-16 10:09:55+00:00,,1,LadyzRoman/verilog_i2c,367844767,SystemVerilog,verilog_i2c,6,0,2021-05-16 13:07:09+00:00,[],None
693,https://github.com/walberfa/SystemVerilog.git,2021-05-13 15:27:30+00:00,Implementa√ß√µes em SystemVerilog para a disciplina Projeto de Sistemas VLSI do Mestrado em Ci√™ncia da Computa√ß√£o (2021.1),0,walberfa/SystemVerilog,367091921,SystemVerilog,SystemVerilog,14,0,2021-05-27 21:17:26+00:00,[],None
694,https://github.com/damlasu/RISC-V-Tabanli-Islemci-Tasarimi.git,2021-05-28 06:43:39+00:00,"In this project, basic SystemVerilog language  reviews and test tests will be carried out on the ALU and  instruction decoder blocks",0,damlasu/RISC-V-Tabanli-Islemci-Tasarimi,371606308,SystemVerilog,RISC-V-Tabanli-Islemci-Tasarimi,5855,0,2021-05-28 07:43:19+00:00,[],None
695,https://github.com/muregad/Multicore-Cache-Design.git,2021-05-23 14:59:11+00:00,,1,muregad/Multicore-Cache-Design,370081860,SystemVerilog,Multicore-Cache-Design,44,0,2021-05-29 17:53:52+00:00,[],None
696,https://github.com/Grieverheart/v30mz.git,2021-05-16 16:19:48+00:00,Attempt to write a Verilog module for a NEC V30MZ cpu.,0,Grieverheart/v30mz,367930880,SystemVerilog,v30mz,47099,0,2021-08-30 22:19:42+00:00,[],None
697,https://github.com/shi428/ben-eater-cpu.git,2021-06-03 16:35:38+00:00,,0,shi428/ben-eater-cpu,373575556,SystemVerilog,ben-eater-cpu,121,0,2021-06-14 05:00:27+00:00,[],None
698,https://github.com/EngRaff92/SIMPLE_RISCV.git,2021-06-09 19:12:24+00:00,,0,EngRaff92/SIMPLE_RISCV,375464263,SystemVerilog,SIMPLE_RISCV,2163,0,2021-06-17 19:33:00+00:00,[],None
699,https://github.com/ianberdan/Single-Error-Correction-Double-Error-Detection.git,2021-06-17 23:33:30+00:00,,0,ianberdan/Single-Error-Correction-Double-Error-Detection,377984501,SystemVerilog,Single-Error-Correction-Double-Error-Detection,5,0,2021-06-17 23:34:46+00:00,[],None
700,https://github.com/sri-harshaa/AHB-Lite-verification.git,2021-05-19 22:01:03+00:00,ECE-593 final project,0,sri-harshaa/AHB-Lite-verification,369011483,SystemVerilog,AHB-Lite-verification,9407,0,2023-04-07 21:15:04+00:00,[],None
701,https://github.com/AloriumTechnology/evo_servo.git,2021-06-22 00:04:27+00:00,,0,AloriumTechnology/evo_servo,379093542,SystemVerilog,evo_servo,19,0,2021-06-22 00:28:35+00:00,[],https://api.github.com/licenses/mit
702,https://github.com/sdesai41/RISCV-32-Processor.git,2021-07-12 18:48:19+00:00,5 stage Pipeline Processor with functionality for 35+ instructions for RiscV-32bit instruction set,0,sdesai41/RISCV-32-Processor,385350776,SystemVerilog,RISCV-32-Processor,118,0,2021-11-17 03:50:34+00:00,[],None
703,https://github.com/las-sc/scr7_l3.git,2021-07-05 19:33:54+00:00,,0,las-sc/scr7_l3,383246291,SystemVerilog,scr7_l3,15,0,2021-07-05 19:34:13+00:00,[],None
704,https://github.com/y38y38/verilator_dct.git,2021-07-02 19:21:42+00:00,,0,y38y38/verilator_dct,382442447,SystemVerilog,verilator_dct,13,0,2021-09-20 12:28:55+00:00,[],None
705,https://github.com/Sda19021971/CoreX16.git,2021-08-08 19:15:52+00:00,Single core with X16 instruction set,0,Sda19021971/CoreX16,394050418,SystemVerilog,CoreX16,204,0,2021-08-08 19:18:36+00:00,[],None
706,https://github.com/flaviens/pkg_function_issue.git,2021-07-27 07:25:53+00:00,,0,flaviens/pkg_function_issue,389887497,SystemVerilog,pkg_function_issue,999,0,2021-07-27 07:26:06+00:00,[],None
707,https://github.com/KetanJogi021/Hardware-Scheduler.git,2021-07-14 12:52:11+00:00,,0,KetanJogi021/Hardware-Scheduler,385939095,SystemVerilog,Hardware-Scheduler,11,0,2021-07-14 13:41:02+00:00,[],None
708,https://github.com/CutaAndrei/CutaAndrei.git,2021-07-14 14:46:04+00:00,Config files for my GitHub profile.,0,CutaAndrei/CutaAndrei,385974900,SystemVerilog,CutaAndrei,30,0,2022-10-31 07:33:52+00:00,"['config', 'github-config']",None
709,https://github.com/zaznov/MKDS-free-mode.git,2021-04-01 14:32:43+00:00,"free management of I / O pins mode of MKDS board, for subsequent connection with the main MKDS project",0,zaznov/MKDS-free-mode,353728464,SystemVerilog,MKDS-free-mode,439,0,2024-01-18 13:48:02+00:00,[],None
710,https://github.com/Nurl4n/Nim-Game.git,2021-03-30 17:05:30+00:00,Famous Nim Game coded in SystemVerilog and implemented on FPGA board (bety board) using Basys3 FPGA.,0,Nurl4n/Nim-Game,353079047,SystemVerilog,Nim-Game,41,0,2021-03-30 17:16:23+00:00,[],https://api.github.com/licenses/mit
711,https://github.com/adnanashraf17501/uvm_and.git,2021-05-30 06:22:17+00:00,,0,adnanashraf17501/uvm_and,372139673,SystemVerilog,uvm_and,4,0,2021-05-30 06:22:51+00:00,[],None
712,https://github.com/Mahesh-Jasti/32Bit-MIPS_Processor.git,2021-06-03 09:55:46+00:00,,0,Mahesh-Jasti/32Bit-MIPS_Processor,373459630,SystemVerilog,32Bit-MIPS_Processor,13,0,2021-06-11 06:23:16+00:00,[],None
713,https://github.com/jacksonconte/cse140l_lab2.git,2021-05-05 23:03:20+00:00,,0,jacksonconte/cse140l_lab2,364727232,SystemVerilog,cse140l_lab2,9,0,2021-05-05 23:08:56+00:00,[],None
714,https://github.com/FJShen/chisel-adder-generator.git,2021-04-06 16:56:35+00:00,,0,FJShen/chisel-adder-generator,355265980,SystemVerilog,chisel-adder-generator,279,0,2021-04-14 14:43:15+00:00,[],None
715,https://github.com/ricardoadley/LOAC.git,2021-04-08 23:30:09+00:00,,0,ricardoadley/LOAC,356075006,SystemVerilog,LOAC,6,0,2021-09-11 22:30:50+00:00,[],None
716,https://github.com/scqthe/digital_design_projects.git,2021-04-02 21:36:03+00:00,Digital Design: Theory and Practice Projects,0,scqthe/digital_design_projects,354138713,SystemVerilog,digital_design_projects,237,0,2021-10-16 00:08:52+00:00,[],None
717,https://github.com/cchen82/ALS_VHDL.git,2021-04-21 01:01:14+00:00,Light sensor with SPI using VHDL on FPGA,0,cchen82/ALS_VHDL,359992636,SystemVerilog,ALS_VHDL,398,0,2021-04-29 02:52:39+00:00,[],None
718,https://github.com/OYounis/Basic-OOP-Testbench.git,2021-05-01 18:38:29+00:00,,0,OYounis/Basic-OOP-Testbench,363482130,SystemVerilog,Basic-OOP-Testbench,7,0,2021-05-03 23:48:35+00:00,[],None
719,https://github.com/tbriggs6/iic_vivado.git,2021-05-02 17:17:10+00:00,,0,tbriggs6/iic_vivado,363707774,SystemVerilog,iic_vivado,49,0,2021-05-02 17:17:32+00:00,[],None
720,https://github.com/leahyao/ALU.git,2021-05-19 13:04:39+00:00,basic integer arithmetic,0,leahyao/ALU,368871959,SystemVerilog,ALU,3,0,2021-05-19 15:18:26+00:00,[],None
721,https://github.com/simonlav24/SpaceInvadersFPGA.git,2021-05-28 08:00:25+00:00,,0,simonlav24/SpaceInvadersFPGA,371625778,SystemVerilog,SpaceInvadersFPGA,41585,0,2021-07-08 18:44:39+00:00,[],None
722,https://github.com/zyd2001/ECE551.git,2021-05-25 07:44:27+00:00,,0,zyd2001/ECE551,370607876,SystemVerilog,ECE551,151,0,2021-05-25 07:44:34+00:00,[],None
723,https://github.com/Vivek-Dave/UVM_TestBench_For_Binary_To_Gray_Code.git,2021-06-05 15:49:49+00:00,Complete UVM TestBench For Verification Of ,0,Vivek-Dave/UVM_TestBench_For_Binary_To_Gray_Code,374153409,SystemVerilog,UVM_TestBench_For_Binary_To_Gray_Code,87,0,2021-06-05 15:57:32+00:00,[],None
724,https://github.com/antivorg/MIPS-SV.git,2021-06-06 19:11:52+00:00,,0,antivorg/MIPS-SV,374443522,SystemVerilog,MIPS-SV,1,0,2021-06-19 06:28:45+00:00,[],None
725,https://github.com/adnanashraf17501/uvm-based-UART-Tx-Rx-verification-.git,2021-06-08 09:16:33+00:00,,0,adnanashraf17501/uvm-based-UART-Tx-Rx-verification-,374952100,SystemVerilog,uvm-based-UART-Tx-Rx-verification-,14,0,2021-06-08 09:34:42+00:00,[],None
726,https://github.com/sayleechandavarkar/uvm.git,2021-06-08 16:07:47+00:00,Some uvm based testing,0,sayleechandavarkar/uvm,375070024,SystemVerilog,uvm,1,0,2021-06-08 16:12:53+00:00,[],None
727,https://github.com/surendra55555/I2C.git,2021-04-10 13:36:01+00:00,,0,surendra55555/I2C,356591820,SystemVerilog,I2C,15,0,2021-04-10 17:23:32+00:00,[],None
728,https://github.com/AlekssGit/verilog_labs_mursaev.git,2021-05-16 19:01:34+00:00,,0,AlekssGit/verilog_labs_mursaev,367963386,SystemVerilog,verilog_labs_mursaev,60770,0,2021-05-25 06:03:00+00:00,[],None
729,https://github.com/Vivek-Dave/UVM_Testbench_For_Adder_Subtractor.git,2021-05-14 15:42:24+00:00,A Complete UVM TestBench For Verification Of Adder And Subtractor (Unsigned),1,Vivek-Dave/UVM_Testbench_For_Adder_Subtractor,367408693,SystemVerilog,UVM_Testbench_For_Adder_Subtractor,84,0,2021-05-15 02:21:06+00:00,"['uvm', 'verification', 'coverage', 'scoreboard']",None
730,https://github.com/vikas043/ES3B2_animation.git,2021-05-19 09:00:17+00:00,Contains Vivado Verilog source files for ES3B2 animation,0,vikas043/ES3B2_animation,368806104,SystemVerilog,ES3B2_animation,102,0,2021-05-19 09:08:52+00:00,[],https://api.github.com/licenses/cc0-1.0
731,https://github.com/cypox/csm-dataflow.git,2021-05-22 01:15:22+00:00,,0,cypox/csm-dataflow,369688538,SystemVerilog,csm-dataflow,9,0,2021-05-26 23:49:19+00:00,[],None
732,https://github.com/Keerthan1994/RISC-V-Floating-Point-Processor.git,2021-04-18 02:40:51+00:00,Design of a floating point processor using RISC V ISA,1,Keerthan1994/RISC-V-Floating-Point-Processor,359028140,SystemVerilog,RISC-V-Floating-Point-Processor,33009,0,2021-06-15 20:00:32+00:00,[],None
733,https://github.com/burritoking/counter.git,2021-04-16 10:02:16+00:00,,0,burritoking/counter,358555029,SystemVerilog,counter,3,0,2021-04-16 11:23:26+00:00,[],None
734,https://github.com/DarthZhu/MIPS_SingleCycle.git,2021-04-21 15:15:50+00:00,Computer architecture lab2: Single cycle MIPS,0,DarthZhu/MIPS_SingleCycle,360215307,SystemVerilog,MIPS_SingleCycle,6479,0,2021-07-20 02:41:06+00:00,[],None
735,https://github.com/dv-engineer/sv-constraints.git,2021-04-21 16:06:10+00:00,,0,dv-engineer/sv-constraints,360230236,SystemVerilog,sv-constraints,0,0,2021-04-21 16:09:43+00:00,[],None
736,https://github.com/OmarNaffaa/ECE4305_Coursework.git,2021-04-08 01:56:49+00:00,,0,OmarNaffaa/ECE4305_Coursework,355733972,SystemVerilog,ECE4305_Coursework,963,0,2021-04-08 02:14:10+00:00,[],None
737,https://github.com/prasss/SHA256_sv.git,2021-04-02 13:45:38+00:00,SHA256 implementation in System verilog + Wrapper implementation as a part of my assignments at Hda,0,prasss/SHA256_sv,354031869,SystemVerilog,SHA256_sv,6,0,2021-04-02 13:50:37+00:00,[],None
738,https://github.com/miura-katsuyoshi/thermometer.git,2021-04-11 03:08:42+00:00,Parameterized thermometer encoder in SystemVerilog,0,miura-katsuyoshi/thermometer,356754010,SystemVerilog,thermometer,44,0,2021-04-11 06:38:53+00:00,[],None
739,https://github.com/swethakathir/Thesis.git,2021-05-06 13:51:17+00:00,,0,swethakathir/Thesis,364927024,SystemVerilog,Thesis,107,0,2021-08-19 10:17:18+00:00,[],None
740,https://github.com/mjc0608/really-simple-fadd.git,2021-05-06 18:25:25+00:00,A pipelined floating point adder (only part of the standard is implemented).,1,mjc0608/really-simple-fadd,365001718,SystemVerilog,really-simple-fadd,1,0,2021-05-06 18:30:40+00:00,[],None
741,https://github.com/waynarbocangel/cse141L.git,2021-07-26 09:07:56+00:00,All code for CSE141L for SS1 2021 ,0,waynarbocangel/cse141L,389573265,SystemVerilog,cse141L,28,0,2021-08-02 05:42:40+00:00,[],None
742,https://github.com/bhyou/systemverilog_demo.git,2021-06-30 08:29:34+00:00,,0,bhyou/systemverilog_demo,381629674,SystemVerilog,systemverilog_demo,32,0,2021-12-25 06:25:53+00:00,[],None
743,https://github.com/ukorat/SystemVerilog-Practice.git,2021-07-08 22:50:12+00:00,,0,ukorat/SystemVerilog-Practice,384265712,SystemVerilog,SystemVerilog-Practice,42,0,2022-06-07 17:49:02+00:00,[],None
744,https://github.com/xusong666/test.git,2021-07-30 14:34:33+00:00,the description is that the repository is used to train my git usage,0,xusong666/test,391094532,SystemVerilog,test,9,0,2021-08-30 14:44:39+00:00,[],None
745,https://github.com/chim20air/ACA-2021.git,2021-08-05 18:10:46+00:00,Repo de arquitectura de computadoras avanzada,0,chim20air/ACA-2021,393134004,SystemVerilog,ACA-2021,2112,0,2021-12-11 22:14:59+00:00,[],None
746,https://github.com/xJogger/puvm.git,2021-07-15 04:20:24+00:00,,1,xJogger/puvm,386160856,SystemVerilog,puvm,116,0,2021-07-15 04:31:36+00:00,[],None
747,https://github.com/dlvalencia/ECE260C_FinalProject.git,2021-06-10 19:47:11+00:00,UVM Converted Test Setup for Decryptor,0,dlvalencia/ECE260C_FinalProject,375813567,SystemVerilog,ECE260C_FinalProject,8,0,2021-06-10 19:47:17+00:00,[],None
748,https://github.com/Sash-github-account/simple_alu_interview.git,2021-06-13 03:59:26+00:00,"Simple ALU with stubs, performs add, sub, mult, div and arithmetic mean. Verified using a UVM test-bench.",0,Sash-github-account/simple_alu_interview,376433720,SystemVerilog,simple_alu_interview,2544,0,2021-06-13 04:03:51+00:00,[],None
749,https://github.com/lsplf/vitis_hls.git,2021-06-17 12:15:27+00:00,,0,lsplf/vitis_hls,377819434,SystemVerilog,vitis_hls,45,0,2021-06-17 12:24:23+00:00,[],None
750,https://github.com/ianberdan/FPGA-Pipelined-Processor.git,2021-06-16 23:24:17+00:00,,0,ianberdan/FPGA-Pipelined-Processor,377651830,SystemVerilog,FPGA-Pipelined-Processor,10,0,2021-06-17 23:29:22+00:00,[],None
751,https://github.com/Risto97/test_ip.git,2021-06-17 14:35:42+00:00,,0,Risto97/test_ip,377861433,SystemVerilog,test_ip,4,0,2021-06-17 15:38:14+00:00,[],None
752,https://github.com/Yash-tomar/My-projects.git,2021-07-05 17:21:14+00:00,,0,Yash-tomar/My-projects,383215714,SystemVerilog,My-projects,90,0,2022-10-30 20:12:02+00:00,[],None
753,https://github.com/rag1404/out_of_order_scoreboard.git,2021-03-31 06:00:06+00:00,out of order transactions checking ,0,rag1404/out_of_order_scoreboard,353243522,SystemVerilog,out_of_order_scoreboard,6,0,2021-04-08 17:29:58+00:00,[],None
754,https://github.com/SSJ-0/Synchronous_FIFO.git,2021-05-03 14:38:58+00:00,A Verilog RTL for a simple synchronous fifo,0,SSJ-0/Synchronous_FIFO,363960295,SystemVerilog,Synchronous_FIFO,12,0,2021-05-03 20:22:23+00:00,[],https://api.github.com/licenses/mit
755,https://github.com/EilamNir/EE_lab_space_invaders.git,2021-05-03 15:27:31+00:00,,0,EilamNir/EE_lab_space_invaders,363975285,SystemVerilog,EE_lab_space_invaders,3790,0,2021-06-09 11:07:43+00:00,[],None
756,https://github.com/sgpthomas/mandlebrot-fpga.git,2021-05-24 21:15:35+00:00,,0,sgpthomas/mandlebrot-fpga,370486621,SystemVerilog,mandlebrot-fpga,2946,0,2021-07-23 00:45:21+00:00,[],None
757,https://github.com/Vivek-Dave/UVM_TestBench_For_ALU.git,2021-05-25 03:47:14+00:00,Complete UVM TestBench For Verification Of Arithmetic And Logical Unit ,0,Vivek-Dave/UVM_TestBench_For_ALU,370556209,SystemVerilog,UVM_TestBench_For_ALU,130,0,2021-05-25 03:55:02+00:00,[],None
758,https://github.com/Danil1997Dev/t.git,2021-06-04 12:17:25+00:00,,0,Danil1997Dev/t,373831829,SystemVerilog,t,3,0,2021-06-04 12:36:12+00:00,[],None
759,https://github.com/moriyaprateek/ibex.git,2021-05-13 07:14:06+00:00,,2,moriyaprateek/ibex,366966069,SystemVerilog,ibex,5912,0,2021-10-30 07:41:55+00:00,[],https://api.github.com/licenses/apache-2.0
760,https://github.com/deserthobo13/SV_TicTacToe.git,2021-06-04 03:57:47+00:00,A different Tic-Tac-Toe in SV.,0,deserthobo13/SV_TicTacToe,373714578,SystemVerilog,SV_TicTacToe,14,0,2021-06-04 04:02:11+00:00,[],None
761,https://github.com/aakash-n-gupta/CoffeeVendingMachine.git,2021-06-03 10:19:21+00:00,,0,aakash-n-gupta/CoffeeVendingMachine,373466270,SystemVerilog,CoffeeVendingMachine,3514,0,2021-06-03 14:21:48+00:00,[],None
762,https://github.com/alkanalperen/CS223TERM-PROJECT.git,2021-05-25 10:11:08+00:00,,0,alkanalperen/CS223TERM-PROJECT,370648838,SystemVerilog,CS223TERM-PROJECT,3015,0,2021-05-25 10:14:08+00:00,[],None
763,https://github.com/ankitsinghyadav81967/Digital_designs.git,2021-06-19 15:21:25+00:00,Config files for my GitHub profile.,0,ankitsinghyadav81967/Digital_designs,378442939,SystemVerilog,Digital_designs,40,0,2023-05-19 11:31:06+00:00,"['config', 'github-config']",None
764,https://github.com/DevCode-C/SystemVerilog_Class.git,2021-05-28 04:52:02+00:00,,0,DevCode-C/SystemVerilog_Class,371583373,SystemVerilog,SystemVerilog_Class,278,0,2021-05-28 04:53:24+00:00,[],None
765,https://github.com/qqn2/uart_16650_sv.git,2021-05-09 22:02:14+00:00,,1,qqn2/uart_16650_sv,365856512,SystemVerilog,uart_16650_sv,583,0,2021-05-09 22:03:10+00:00,[],None
766,https://github.com/daniel12091/final.git,2021-05-11 10:58:52+00:00,,0,daniel12091/final,366350215,SystemVerilog,final,802,0,2021-05-11 11:17:45+00:00,[],None
767,https://github.com/adnanashraf17501/uvm_AXI-4-.git,2021-06-08 08:48:04+00:00,,1,adnanashraf17501/uvm_AXI-4-,374943629,SystemVerilog,uvm_AXI-4-,95,0,2021-06-08 09:37:27+00:00,[],None
768,https://github.com/likaigelikaige/esg_hdl.git,2021-06-15 09:04:21+00:00,Convenient FPGA communication,0,likaigelikaige/esg_hdl,377101019,,esg_hdl,65,0,2021-07-05 06:01:51+00:00,[],None
769,https://github.com/braamBeresford/multimedia-final-project.git,2021-04-11 00:55:43+00:00,,0,braamBeresford/multimedia-final-project,356734300,SystemVerilog,multimedia-final-project,288,0,2021-06-01 15:55:41+00:00,[],None
770,https://github.com/chgarrettv/sv-rv32im-soft-processor.git,2021-04-27 20:32:08+00:00,"A simple, single core, multi-cycle, RV32IM soft processor. Designed for the Arty A7 FPGA.",0,chgarrettv/sv-rv32im-soft-processor,362243049,SystemVerilog,sv-rv32im-soft-processor,11,0,2021-04-27 20:36:05+00:00,[],None
771,https://github.com/MeaninglessCode/KaratsubaMultiplier_n-Bit.git,2021-04-28 19:31:22+00:00,A generic Karatsuba multiplier.,0,MeaninglessCode/KaratsubaMultiplier_n-Bit,362584894,SystemVerilog,KaratsubaMultiplier_n-Bit,16,0,2022-11-25 23:14:52+00:00,"['systemverilog', 'karatsuba', 'multiplier']",https://api.github.com/licenses/gpl-3.0
772,https://github.com/mfkiwl/pulpino_accelerator.git,2021-04-14 18:52:18+00:00,,0,mfkiwl/pulpino_accelerator,358010647,SystemVerilog,pulpino_accelerator,31,0,2021-05-22 23:11:43+00:00,[],None
773,https://github.com/surendra55555/D_FlipFlop.git,2021-04-08 04:11:19+00:00,,0,surendra55555/D_FlipFlop,355760002,SystemVerilog,D_FlipFlop,5,0,2021-04-08 05:29:49+00:00,[],None
774,https://github.com/alainlou/6502.git,2021-04-05 03:53:51+00:00,,0,alainlou/6502,354710241,SystemVerilog,6502,160,0,2021-09-19 04:02:13+00:00,[],None
775,https://github.com/vazchandrashekar/vazchandrashekar.git,2021-04-25 23:35:47+00:00,Config files for my GitHub profile.,0,vazchandrashekar/vazchandrashekar,361562751,SystemVerilog,vazchandrashekar,1,0,2021-04-25 23:41:20+00:00,"['config', 'github-config']",None
776,https://github.com/yangli900520/Fir-Filter.git,2021-04-08 21:51:22+00:00,Configurable Fir Filter,0,yangli900520/Fir-Filter,356057001,SystemVerilog,Fir-Filter,593,0,2021-04-08 21:51:46+00:00,[],None
777,https://github.com/ajnaboulsi/ECE385.git,2021-04-23 05:32:14+00:00,,0,ajnaboulsi/ECE385,360773462,SystemVerilog,ECE385,12836,0,2022-12-13 06:54:14+00:00,[],None
778,https://github.com/EStrugar/systemVerilogCPU.git,2021-06-06 16:37:28+00:00,program files and testbenches for a CPU to be compiled. Auxiliary coding for VGA controller also completed,0,EStrugar/systemVerilogCPU,374411543,SystemVerilog,systemVerilogCPU,13,0,2021-06-07 11:35:11+00:00,[],None
779,https://github.com/yakir8/CPU.git,2021-08-07 13:49:26+00:00,,0,yakir8/CPU,393696207,SystemVerilog,CPU,285,0,2021-08-07 15:46:49+00:00,[],https://api.github.com/licenses/apache-2.0
780,https://github.com/Vilanya/SIT329-Week-3.git,2021-08-08 10:33:56+00:00,,0,Vilanya/SIT329-Week-3,393930704,SystemVerilog,SIT329-Week-3,1,0,2021-08-08 10:34:14+00:00,[],None
781,https://github.com/flaviens/streaming_operator_issue.git,2021-07-26 13:13:29+00:00,,0,flaviens/streaming_operator_issue,389637908,SystemVerilog,streaming_operator_issue,1,0,2021-07-26 13:15:32+00:00,[],None
782,https://github.com/mayank-kabra2001/tensor-core-viz.git,2021-06-28 14:44:07+00:00,,0,mayank-kabra2001/tensor-core-viz,381065162,SystemVerilog,tensor-core-viz,62,0,2021-07-07 08:43:20+00:00,[],None
783,https://github.com/kura197/RISCV_pipeline_processor.git,2021-08-02 15:09:32+00:00,RISC-V rv32i 5-stage pipeline processor,1,kura197/RISCV_pipeline_processor,391995010,SystemVerilog,RISCV_pipeline_processor,32,0,2021-10-20 18:33:18+00:00,[],None
784,https://github.com/dorriehammond/System_Verilog.git,2021-07-29 18:57:53+00:00,,0,dorriehammond/System_Verilog,390823041,SystemVerilog,System_Verilog,4417,0,2021-07-29 19:14:55+00:00,[],None
785,https://github.com/maggiez-z/lab6.git,2021-07-15 00:07:25+00:00,,0,maggiez-z/lab6,386109400,SystemVerilog,lab6,7006,0,2021-07-15 00:18:59+00:00,[],None
786,https://github.com/Engr315/P8_Pipeline_Dot.git,2021-04-05 14:41:01+00:00,,0,Engr315/P8_Pipeline_Dot,354865777,SystemVerilog,P8_Pipeline_Dot,269,0,2022-11-03 14:53:22+00:00,[],None
787,https://github.com/hungbk99/renas-mcu.git,2021-04-01 16:56:14+00:00,Bachelor Thesis,0,hungbk99/renas-mcu,353768315,SystemVerilog,renas-mcu,65062,0,2021-08-04 13:45:21+00:00,[],https://api.github.com/licenses/apache-2.0
788,https://github.com/GuavTek/DDS2_Term.git,2021-04-06 15:26:21+00:00,Term project in Design of Digital Circuits 2,0,GuavTek/DDS2_Term,355238581,SystemVerilog,DDS2_Term,608,0,2022-04-24 15:34:28+00:00,[],None
789,https://github.com/cgiesler/BusDriversProject.git,2021-03-30 22:56:30+00:00,,0,cgiesler/BusDriversProject,353162382,SystemVerilog,BusDriversProject,503177,0,2021-05-08 05:38:40+00:00,[],https://api.github.com/licenses/mit
790,https://github.com/OikawaLab/NexysVideo_UDP2Probe.git,2021-05-13 07:21:11+00:00,,0,OikawaLab/NexysVideo_UDP2Probe,366967788,SystemVerilog,NexysVideo_UDP2Probe,35791,0,2021-05-13 07:22:20+00:00,[],None
791,https://github.com/tharinduSamare/Multicore_processor_SystemVerilog_design.git,2021-05-21 13:55:01+00:00,This is a multicore processor specially designed for matrix multiplication.,0,tharinduSamare/Multicore_processor_SystemVerilog_design,369551840,SystemVerilog,Multicore_processor_SystemVerilog_design,8220,0,2022-01-08 12:01:22+00:00,"['fpga', 'simulation', 'systemverilog', 'python3']",None
792,https://github.com/Unparalleled-Calvin/dragon-chip.git,2021-05-24 08:33:14+00:00,,0,Unparalleled-Calvin/dragon-chip,370282275,SystemVerilog,dragon-chip,4345,0,2022-02-06 03:25:46+00:00,[],None
793,https://github.com/nfproc/TRNG_IP.git,2021-04-22 10:09:22+00:00,Versatile TRNG IP Core for PYNQ,0,nfproc/TRNG_IP,360474933,SystemVerilog,TRNG_IP,23,0,2021-10-28 08:23:09+00:00,[],
794,https://github.com/zceeudd/ELEC0036---Microprocessor-LH.git,2021-04-13 20:49:05+00:00,,0,zceeudd/ELEC0036---Microprocessor-LH,357684846,SystemVerilog,ELEC0036---Microprocessor-LH,27,0,2021-04-13 20:50:22+00:00,[],None
795,https://github.com/francisco-groppo/grupo-a-mic-mic.git,2021-05-08 20:33:41+00:00,,0,francisco-groppo/grupo-a-mic-mic,365606102,SystemVerilog,grupo-a-mic-mic,1742,0,2021-07-02 00:23:19+00:00,[],None
796,https://github.com/rushi0005/Verilog_counter_coding.git,2021-04-11 06:14:27+00:00,,0,rushi0005/Verilog_counter_coding,356783144,SystemVerilog,Verilog_counter_coding,5,0,2021-04-11 22:50:19+00:00,[],None
797,https://github.com/kuocy/scaling-octo-potato.git,2021-04-11 14:39:36+00:00,,0,kuocy/scaling-octo-potato,356892822,,scaling-octo-potato,9,0,2021-07-21 19:38:44+00:00,[],None
798,https://github.com/miura-katsuyoshi/LFSR.git,2021-04-10 01:55:11+00:00,Parameterized LFSR (Linear Feedback Shift Register) implementation in SystemVerilog,0,miura-katsuyoshi/LFSR,356441792,SystemVerilog,LFSR,27,0,2021-04-10 20:29:23+00:00,[],None
799,https://github.com/yichungchen84/RISCV.git,2021-06-17 03:38:56+00:00,,0,yichungchen84/RISCV,377695563,SystemVerilog,RISCV,17,0,2021-06-17 03:39:35+00:00,[],None
800,https://github.com/FlipperCoin/sim2.git,2021-06-13 16:09:21+00:00,,0,FlipperCoin/sim2,376586276,SystemVerilog,sim2,49,0,2021-06-15 22:00:11+00:00,[],None
801,https://github.com/kpavan24/CRC-Transmitter.git,2021-06-10 11:54:09+00:00,,0,kpavan24/CRC-Transmitter,375680236,SystemVerilog,CRC-Transmitter,435,0,2021-07-21 08:26:04+00:00,[],None
802,https://github.com/mario-yankov-todorov/SV_uvm_training.git,2021-05-18 08:38:08+00:00,,0,mario-yankov-todorov/SV_uvm_training,368458827,SystemVerilog,SV_uvm_training,213,0,2021-06-18 19:38:21+00:00,[],None
803,https://github.com/motheshashidhar/ece-571-project.git,2021-06-06 07:22:33+00:00,dma,0,motheshashidhar/ece-571-project,374294942,SystemVerilog,ece-571-project,52,0,2021-06-11 06:53:57+00:00,[],None
804,https://github.com/archive-Otcoy/async-wasm-metal.git,2021-06-06 09:18:16+00:00,An experimental physics asynchronous multi-core implementation of WebAssembly.,0,archive-Otcoy/async-wasm-metal,374317010,SystemVerilog,async-wasm-metal,30,0,2021-08-04 12:03:02+00:00,[],https://api.github.com/licenses/mpl-2.0
805,https://github.com/jackson-nestelroad/verilog-mips-processor.git,2021-04-26 16:09:52+00:00,Single-cycle 32-bit MIPS processor implemented in SystemVerilog.,0,jackson-nestelroad/verilog-mips-processor,361813291,SystemVerilog,verilog-mips-processor,16,0,2021-05-03 16:54:52+00:00,"['verilog', 'mips', 'processor', 'cpu']",None
806,https://github.com/DavidWigley/EECE6540.git,2021-05-29 15:43:12+00:00,,0,DavidWigley/EECE6540,372010797,SystemVerilog,EECE6540,690149,0,2021-05-29 17:40:31+00:00,[],None
807,https://github.com/FlipperCoin/sim1.git,2021-05-28 13:00:13+00:00,,0,FlipperCoin/sim1,371701858,SystemVerilog,sim1,9,0,2021-06-01 12:04:13+00:00,[],None
808,https://github.com/Fillipek/FPGA-gps-reader-via-uart.git,2021-05-28 08:53:18+00:00,,0,Fillipek/FPGA-gps-reader-via-uart,371639467,SystemVerilog,FPGA-gps-reader-via-uart,13,0,2021-05-28 13:13:01+00:00,[],None
809,https://github.com/EbenezerMetrics/Apb_master.git,2021-07-15 12:22:53+00:00,APB protocol master for demo ,0,EbenezerMetrics/Apb_master,386280187,SystemVerilog,Apb_master,73,0,2021-08-19 14:07:44+00:00,[],None
810,https://github.com/lcnz/RSTCypher-Encryption.git,2021-07-11 13:11:58+00:00,,1,lcnz/RSTCypher-Encryption,384951515,SystemVerilog,RSTCypher-Encryption,2025,0,2021-09-23 06:27:40+00:00,[],None
811,https://github.com/YAEemf/PWM_test.git,2021-07-14 12:22:53+00:00,,0,YAEemf/PWM_test,385930875,SystemVerilog,PWM_test,11,0,2021-08-01 13:28:27+00:00,[],None
812,https://github.com/Eric-Souza/binary-text-encryptor-decryptor.git,2021-07-14 16:16:16+00:00,"An algorithm, developed in Verilog hardware design language (HDL), that encrypts a text input into binary, then decrypts it back, using logic gates and public/private keys. This system was developed as a Logical Systems subject exercise (UFMG).",0,Eric-Souza/binary-text-encryptor-decryptor,386001910,SystemVerilog,binary-text-encryptor-decryptor,4,0,2021-08-17 21:09:02+00:00,"['verilog', 'computer-science', 'cryptography', 'logical-operators', 'logical-clocks', 'hardware', 'hdl', 'ufmg', 'encryption']",None
813,https://github.com/Fizz-Trickster/SPI.git,2021-07-04 07:43:10+00:00,,0,Fizz-Trickster/SPI,382793109,SystemVerilog,SPI,5,0,2021-07-18 14:40:24+00:00,[],None
814,https://github.com/Gabo-82/ELO212_ses8.git,2021-07-05 21:49:30+00:00,,0,Gabo-82/ELO212_ses8,383271835,SystemVerilog,ELO212_ses8,199,0,2021-07-05 21:52:11+00:00,[],None
815,https://github.com/shreejnanesh/DES_Hardware_Accelerator.git,2021-06-27 11:01:38+00:00,"Hardware acceleration combines the flexibility of general-purpose processors, such as CPUs, with the efficiency of fully customized hardware, such as GPUs and ASICs, increasing efficiency by orders of magnitude when any application is implemented higher up the hierarchy of digital computing systems",1,shreejnanesh/DES_Hardware_Accelerator,380717398,SystemVerilog,DES_Hardware_Accelerator,18722,0,2021-06-27 12:36:57+00:00,[],https://api.github.com/licenses/afl-3.0
816,https://github.com/mfkiwl/srvio.git,2021-07-18 07:37:34+00:00,Synthesizeble Risc-V In-order Processor,0,mfkiwl/srvio,387118569,SystemVerilog,srvio,16164,0,2021-09-06 04:22:05+00:00,[],https://api.github.com/licenses/mit
817,https://github.com/filipignjatic/sort_alg.git,2021-07-18 09:55:03+00:00,,0,filipignjatic/sort_alg,387142440,SystemVerilog,sort_alg,96,0,2021-08-31 08:17:01+00:00,[],None
818,https://github.com/flaviens/pulpissimo-yosys-issue.git,2021-07-29 14:50:06+00:00,,0,flaviens/pulpissimo-yosys-issue,390757552,SystemVerilog,pulpissimo-yosys-issue,989,0,2021-07-29 14:52:58+00:00,[],None
819,https://github.com/Anant-Gupta31/Verilog-combinationalckts.git,2021-07-29 20:45:47+00:00,,0,Anant-Gupta31/Verilog-combinationalckts,390846446,SystemVerilog,Verilog-combinationalckts,197,0,2021-08-09 14:08:18+00:00,[],None
820,https://github.com/Engr315/P9_Parallel_Dot.git,2021-04-22 10:39:33+00:00,,0,Engr315/P9_Parallel_Dot,360482778,SystemVerilog,P9_Parallel_Dot,1840,0,2022-11-28 15:16:23+00:00,[],None
821,https://github.com/gaganminocha/systemverilog.git,2021-05-26 18:39:17+00:00,System Verilog designs and testbenches.,0,gaganminocha/systemverilog,371135678,SystemVerilog,systemverilog,148,0,2022-01-10 21:26:55+00:00,[],https://api.github.com/licenses/mit
