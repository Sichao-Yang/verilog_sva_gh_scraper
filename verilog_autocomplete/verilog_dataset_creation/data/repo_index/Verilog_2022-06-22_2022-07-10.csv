,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/someone755/ddr3-controller.git,2022-07-09 01:42:19+00:00,"A DDR3(L) PHY and controller, written in Verilog, for Xilinx 7-Series FPGAs",8,someone755/ddr3-controller,512067848,Verilog,ddr3-controller,220,51,2024-04-05 11:05:37+00:00,"['ddr3', 'fpga', 'memory-controller', 'verilog']",None
1,https://github.com/zephray/RISu064.git,2022-06-24 20:41:43+00:00,Dual-issue RV64IM processor for fun & learning,7,zephray/RISu064,507139099,Verilog,RISu064,4969,50,2024-03-27 14:09:37+00:00,['risc-v'],https://api.github.com/licenses/mit
2,https://github.com/xiaowuzxc/SparrowRV.git,2022-06-25 13:01:03+00:00,An embed RISC-V Core with RV32IMZicsr ISA named SparrowRV. ,14,xiaowuzxc/SparrowRV,507312280,Verilog,SparrowRV,12608,44,2024-03-20 02:04:41+00:00,[],https://api.github.com/licenses/mit
3,https://github.com/fluctlight001/nscscc2022_single_tools.git,2022-07-07 14:27:02+00:00,龙芯杯个人赛工具包（适用于个人赛的golden_trace工具）,2,fluctlight001/nscscc2022_single_tools,511559549,Verilog,nscscc2022_single_tools,173,37,2024-03-21 14:47:24+00:00,[],None
4,https://github.com/TCL606/MipsPipeline.git,2022-07-07 13:18:56+00:00,Mips五级流水线CPU,0,TCL606/MipsPipeline,511535464,Verilog,MipsPipeline,2801,28,2024-02-06 13:29:34+00:00,[],https://api.github.com/licenses/mit
5,https://github.com/RClabiisc/I2SRV32-S-v1.git,2022-06-26 04:46:27+00:00,"Reconfigurable Computing Lab, DESE, Indian Institiute of Science",3,RClabiisc/I2SRV32-S-v1,507479444,Verilog,I2SRV32-S-v1,38398,15,2024-02-05 18:49:02+00:00,"['core', 'cpu', 'fpga', 'risc-v', 'verilog']",https://api.github.com/licenses/apache-2.0
6,https://github.com/emu-russia/mappers.git,2022-06-23 16:13:54+00:00,NES/Famicom/Famiclones Mappers Research,3,emu-russia/mappers,506708943,Verilog,mappers,98890,11,2024-01-29 01:07:16+00:00,[],https://api.github.com/licenses/cc0-1.0
7,https://github.com/lorentsinani/16bitCPU-Verilog.git,2022-06-28 11:13:41+00:00,16 bit CPU created in Vivado with Verilog,3,lorentsinani/16bitCPU-Verilog,508266496,Verilog,16bitCPU-Verilog,21,10,2024-03-06 17:41:32+00:00,"['computer-architecture', 'verilog', 'verilog-project']",https://api.github.com/licenses/gpl-3.0
8,https://github.com/MirageTurtle/USTC_CS_Resources.git,2022-07-01 01:31:51+00:00,some resources for CS courses of USTC,0,MirageTurtle/USTC_CS_Resources,509283833,Verilog,USTC_CS_Resources,427074,9,2023-10-29 07:20:45+00:00,[],None
9,https://github.com/Feanor1021/PMODE_Step_VerilogHDL_Basys3.git,2022-06-26 20:54:32+00:00,This project is a digital design project that implements a simple programmable stepper motor controller using the Verilog hardware description language (HDL) and the Basys 3 FPGA development board. The project is designed to be an educational resource for students and hobbyists interested in learning about digital design and FPGA programming.,1,Feanor1021/PMODE_Step_VerilogHDL_Basys3,507682472,Verilog,PMODE_Step_VerilogHDL_Basys3,4824,9,2024-03-04 14:06:26+00:00,[],https://api.github.com/licenses/mit
10,https://github.com/alynna/mega65-mister.git,2022-07-03 22:01:44+00:00,Mega65 Core for MiSTer,1,alynna/mega65-mister,510144659,Verilog,mega65-mister,147,9,2024-03-28 20:45:44+00:00,[],https://api.github.com/licenses/gpl-2.0
11,https://github.com/Geetima2021/TCL-programming.git,2022-07-06 02:14:36+00:00,,4,Geetima2021/TCL-programming,510957183,Verilog,TCL-programming,32240,9,2023-09-20 18:47:52+00:00,[],https://api.github.com/licenses/apache-2.0
12,https://github.com/npz7yyk/clap.git,2022-07-04 10:15:38+00:00,,0,npz7yyk/clap,510309336,Verilog,clap,19422,8,2023-12-19 06:12:44+00:00,[],None
13,https://github.com/YANthinkn/SHU-Computer-Hardware-Major-Assignment.git,2022-07-09 13:01:27+00:00,SHU-CES 计算机硬件综合大型作业 项目二 交通灯控制器,0,YANthinkn/SHU-Computer-Hardware-Major-Assignment,512187034,Verilog,SHU-Computer-Hardware-Major-Assignment,4251,8,2024-04-02 16:41:32+00:00,[],None
14,https://github.com/SlithyMatt/rocket88.git,2022-06-30 05:46:52+00:00,A New 8-Bit Architecture,1,SlithyMatt/rocket88,508949345,Verilog,rocket88,17996,7,2023-11-26 05:55:24+00:00,[],https://api.github.com/licenses/gpl-3.0
15,https://github.com/wyvernSemi/eccExamples.git,2022-07-10 06:02:59+00:00,Error correction and detection example Verilog (hamming and Reed-Solomon) to accompany presentation material,2,wyvernSemi/eccExamples,512358321,Verilog,eccExamples,3801,7,2024-03-18 08:58:33+00:00,[],https://api.github.com/licenses/gpl-3.0
16,https://github.com/EricJin2002/UCAS-COD-2022.git,2022-07-06 12:25:03+00:00,UCAS大二计算机组成原理研讨课实验,1,EricJin2002/UCAS-COD-2022,511127056,Verilog,UCAS-COD-2022,8091,7,2023-07-08 16:04:56+00:00,[],https://api.github.com/licenses/mit
17,https://github.com/Guahao31/for_Computer_Logic.git,2022-07-09 06:50:26+00:00,Slides and demo code for the experiment of Computer Logic of ZJU.,0,Guahao31/for_Computer_Logic,512115533,Verilog,for_Computer_Logic,3739,6,2023-11-07 06:25:00+00:00,[],None
18,https://github.com/TsingYiPainter/Sustech_CS202_Computer-Organization_22S.git,2022-06-23 07:02:22+00:00,南方科技大学2022年春季学期计算机组成原理期末项目 125/100,0,TsingYiPainter/Sustech_CS202_Computer-Organization_22S,506532148,Verilog,Sustech_CS202_Computer-Organization_22S,781,6,2024-03-25 12:55:08+00:00,[],None
19,https://github.com/kuzmenciy/FPGA_VLC_reciever.git,2022-06-26 12:13:22+00:00,Implementation of Camera Based Visible Light Communication on FPGA,0,kuzmenciy/FPGA_VLC_reciever,507565033,Verilog,FPGA_VLC_reciever,2881,5,2024-03-21 07:42:15+00:00,[],None
20,https://github.com/amsacks/Asynchronous-FIFO.git,2022-06-28 23:30:05+00:00,"RTL of a parametrized asynchronous FIFO that allows for variable depth, data width, and includes almost empty/full flags.",0,amsacks/Asynchronous-FIFO,508484264,Verilog,Asynchronous-FIFO,504,5,2023-04-19 12:53:14+00:00,"['fifo', 'fpga', 'verilog']",None
21,https://github.com/191220029/NJU-DCE.git,2022-06-25 04:45:46+00:00,NJU数字电路实验,0,191220029/NJU-DCE,507215528,Verilog,NJU-DCE,238356,5,2024-03-09 14:48:58+00:00,[],None
22,https://github.com/A0620-00/Conv2D-Verilog.git,2022-07-02 08:56:56+00:00,,0,A0620-00/Conv2D-Verilog,509706519,Verilog,Conv2D-Verilog,67,5,2022-10-01 13:43:48+00:00,[],https://api.github.com/licenses/gpl-3.0
23,https://github.com/sylefeb/mch2022-silice.git,2022-06-24 15:17:30+00:00,Silice designs for the MCH2022 badge,2,sylefeb/mch2022-silice,507055729,Verilog,mch2022-silice,749,4,2023-01-03 11:08:19+00:00,[],https://api.github.com/licenses/mit
24,https://github.com/Dianchun/SoC-with-FBP-algorithm-accelerator.git,2022-07-05 05:38:57+00:00,A SoC based on Arm CortexM3 processor with filtered back-projection algorithm accelerator,0,Dianchun/SoC-with-FBP-algorithm-accelerator,510600958,Verilog,SoC-with-FBP-algorithm-accelerator,155490,4,2023-07-30 05:20:59+00:00,[],None
25,https://github.com/inannan423/Quartus_FPGA_8bit_CPU.git,2022-07-06 00:47:08+00:00,FPGA开发板8bitCPU程序,2,inannan423/Quartus_FPGA_8bit_CPU,510938582,Verilog,Quartus_FPGA_8bit_CPU,15794,4,2023-11-11 08:12:10+00:00,"['cpu', 'fpga', 'verilog']",https://api.github.com/licenses/mit
26,https://github.com/Didula98/Building-a-Simple-Processor.git,2022-07-08 08:17:24+00:00,"Simple 8-bit single-cycle processor which includes an  ALU, a register file and control logic, using Verilog HDL",0,Didula98/Building-a-Simple-Processor,511817619,Verilog,Building-a-Simple-Processor,8353,4,2024-01-14 14:28:51+00:00,"['alu', 'cpu', 'gtkwave', 'instruction-set-architecture', 'instructions', 'verilog']",None
27,https://github.com/onlyforqiong/mips_cpu_cache.git,2022-06-29 06:52:02+00:00,mips cpu with chisel,0,onlyforqiong/mips_cpu_cache,508579449,Verilog,mips_cpu_cache,4387,4,2024-01-23 10:15:40+00:00,[],None
28,https://github.com/spockman66/SIFT-Hardware-Implementation.git,2022-06-25 03:24:57+00:00,SIFT Hardware Implementation on Hercules P1 FPGA,2,spockman66/SIFT-Hardware-Implementation,507203156,Verilog,SIFT-Hardware-Implementation,50922,4,2024-04-01 12:29:10+00:00,[],https://api.github.com/licenses/apache-2.0
29,https://github.com/piotro888/ppcpu.git,2022-07-06 14:08:02+00:00,Pipelined PCPU,0,piotro888/ppcpu,511163095,Verilog,ppcpu,219,4,2024-02-25 18:52:36+00:00,"['pcpu', 'cpu', 'computer-architecture', 'core', 'processor', 'risc']",None
30,https://github.com/AnushangaPavith/Building-a-simple-processor-Memory-hierarchy.git,2022-06-22 09:32:56+00:00,"Group mini project (Lab 05, 06) in Computer Architecture Course",1,AnushangaPavith/Building-a-simple-processor-Memory-hierarchy,506182355,Verilog,Building-a-simple-processor-Memory-hierarchy,10037,4,2023-03-14 06:13:51+00:00,[],None
31,https://github.com/Visheshanagu2894/riscv.git,2022-07-01 07:49:17+00:00,RISC-V 32IM - Dobby SOC,1,Visheshanagu2894/riscv,509366849,Verilog,riscv,2495,4,2024-02-25 07:05:25+00:00,"['booths-algorithm', 'pipeline', 'risc-v-assembly', 'riscv32', 'single-cycle-processor', 'risc-v32im']",None
32,https://github.com/RPTU-EIS/SecureBOOM.git,2022-06-29 08:41:05+00:00,"Formally proven secure design of the RISC-V core BOOM (Berkeley Out-of-Order Machine) w.r.t. transient execution attacks (e.g., Meltdown and Spectre)",0,RPTU-EIS/SecureBOOM,508612379,Verilog,SecureBOOM,11685,4,2024-03-14 10:59:46+00:00,"['design-methods', 'formal-verification-for-designers', 'hardware', 'hardware-security', 'meltdown', 'security', 'spectre']",
33,https://github.com/sgauthamr2001/Conv2D_CFU.git,2022-07-05 13:48:23+00:00,Conv2D acceleration using the framework CFU Playground,1,sgauthamr2001/Conv2D_CFU,510755552,Verilog,Conv2D_CFU,49026,4,2023-01-29 17:34:55+00:00,[],https://api.github.com/licenses/apache-2.0
34,https://github.com/SriVarun126/HDL-Bits_Solutions.git,2022-07-05 16:31:32+00:00,Here are solutions for problems on https://hdlbits.01xz.net/ website,0,SriVarun126/HDL-Bits_Solutions,510815049,Verilog,HDL-Bits_Solutions,211,3,2022-11-06 06:56:26+00:00,[],None
35,https://github.com/michg/cproc_riscv32.git,2022-07-06 18:41:35+00:00,,0,michg/cproc_riscv32,511254154,Verilog,cproc_riscv32,508,3,2024-04-11 17:16:39+00:00,"['cproc', 'qbe', 'riscv32']",None
36,https://github.com/shili2017/CONNECT-AXI.git,2022-06-29 21:32:26+00:00,,0,shili2017/CONNECT-AXI,508851833,Verilog,CONNECT-AXI,652,3,2023-11-30 09:13:01+00:00,[],None
37,https://github.com/Udit86/Image-Encryption-using-Verilog.git,2022-06-28 15:21:29+00:00,Implementation of stream cipher A5/1 algorithm in verilog,0,Udit86/Image-Encryption-using-Verilog,508353128,Verilog,Image-Encryption-using-Verilog,66,3,2024-04-01 09:33:19+00:00,[],None
38,https://github.com/zsgvivo/smart-car.git,2022-06-27 05:06:20+00:00,,0,zsgvivo/smart-car,507769648,Verilog,smart-car,75,3,2022-07-15 01:26:50+00:00,[],None
39,https://github.com/kimweng01/RV32I_KIMWENG_sopc.git,2022-07-01 12:04:59+00:00,本Project實現一個RV32I架構的CPU。,1,kimweng01/RV32I_KIMWENG_sopc,509439860,Verilog,RV32I_KIMWENG_sopc,51,3,2024-02-14 15:10:40+00:00,[],None
40,https://github.com/coleblackman/FPGA-Placement-Generator.git,2022-06-29 18:44:14+00:00,This tool generates a macro_placement.cfg file for use with OpenLANE and OpenFPGA.,0,coleblackman/FPGA-Placement-Generator,508808850,Verilog,FPGA-Placement-Generator,10459,2,2023-06-20 14:13:32+00:00,[],None
41,https://github.com/damonti/Characterization.git,2022-07-06 21:16:16+00:00,Digital flow for component characterization.,1,damonti/Characterization,511294173,Verilog,Characterization,57616,2,2024-01-06 05:53:42+00:00,[],None
42,https://github.com/CaptainCCCP/Lab-of-ComputerOrganization-Assembly.git,2022-06-24 01:13:56+00:00,The Principle of Computer Organization and Lab；8086 Assembly Language,0,CaptainCCCP/Lab-of-ComputerOrganization-Assembly,506838329,Verilog,Lab-of-ComputerOrganization-Assembly,5890,2,2023-05-16 00:25:20+00:00,[],None
43,https://github.com/Satogun/cpu_design_lab.git,2022-07-01 13:33:33+00:00,HITSZ-2022-Summer-LAB,0,Satogun/cpu_design_lab,509467000,Verilog,cpu_design_lab,22,2,2023-07-17 02:48:01+00:00,[],None
44,https://github.com/zjjzby/GEMM.git,2022-07-07 19:51:42+00:00,The code repo for GEMM verilog,0,zjjzby/GEMM,511656654,Verilog,GEMM,4,2,2024-01-08 12:22:05+00:00,[],None
45,https://github.com/namu00/VerilogHDL-TB_Generator.git,2022-06-30 04:44:17+00:00,2022 Summer Study,0,namu00/VerilogHDL-TB_Generator,508935723,Verilog,VerilogHDL-TB_Generator,9678,2,2023-02-25 08:24:38+00:00,[],None
46,https://github.com/Jon3Y/IP_RTL.git,2022-07-04 09:03:03+00:00,Some simple IP.,1,Jon3Y/IP_RTL,510285526,Verilog,IP_RTL,74,2,2024-03-28 15:26:24+00:00,[],None
47,https://github.com/OpenPOWERFoundation/toy-sram.git,2022-07-01 14:47:09+00:00,High-specific-bandwidth memory design,2,OpenPOWERFoundation/toy-sram,509490900,Verilog,toy-sram,72502,2,2023-11-23 14:31:16+00:00,[],
48,https://github.com/yunkai1841/HC-SR04-FPGA.git,2022-07-08 08:55:58+00:00,Measure the distance using HC-SR04 ultrasonic sensor on FPGA.,0,yunkai1841/HC-SR04-FPGA,511828706,Verilog,HC-SR04-FPGA,6,2,2024-02-05 15:38:36+00:00,"['de10-nano', 'fpga', 'hc-sr04', 'verilog-hdl']",https://api.github.com/licenses/cc0-1.0
49,https://github.com/aharongilo/Anubis-Crypto-algorithm-implementation-on-Xilinx-FPGA.git,2022-06-29 12:06:43+00:00,"Implementation of Anubis algorithm for Xilinx competition, June 2022",0,aharongilo/Anubis-Crypto-algorithm-implementation-on-Xilinx-FPGA,508675072,Verilog,Anubis-Crypto-algorithm-implementation-on-Xilinx-FPGA,17895,2,2023-02-28 15:18:09+00:00,[],None
50,https://github.com/maheshbhatk/APB_Bridge.git,2022-07-02 02:36:29+00:00,,0,maheshbhatk/APB_Bridge,509639012,Verilog,APB_Bridge,4,2,2023-05-22 15:46:40+00:00,[],None
51,https://github.com/Rodrigodd/CPU-MIPS.git,2022-06-26 16:49:04+00:00,Processador MIPS para o Trabalho final da disciplina ELTD05 da Universidade Federal de Itajubá,0,Rodrigodd/CPU-MIPS,507631214,Verilog,CPU-MIPS,131,2,2022-07-05 12:22:09+00:00,[],None
52,https://github.com/pyong-1459/JPEG-DCT.git,2022-06-30 04:44:05+00:00,DCT implement with Verilog and Python,1,pyong-1459/JPEG-DCT,508935683,Verilog,JPEG-DCT,635,2,2024-04-10 21:41:41+00:00,[],https://api.github.com/licenses/mit
53,https://github.com/uclcrypto/aead_modes_leveled_hw.git,2022-07-09 15:49:54+00:00,,0,uclcrypto/aead_modes_leveled_hw,512224780,Verilog,aead_modes_leveled_hw,40,2,2022-09-19 14:19:28+00:00,[],
54,https://github.com/feifan1996/RiscSoC.git,2022-07-10 23:43:20+00:00,RiscSoC 是一个芯片集成项目，包含了 Cortex-M0、Cortex-M3、MIPS、RISC-V、4-BIT 等内核的 SoC 集成，部分 SoC 使用的自己设计的内核,3,feifan1996/RiscSoC,512563629,,RiscSoC,1010,2,2024-04-07 07:11:19+00:00,[],https://api.github.com/licenses/apache-2.0
55,https://github.com/ysyx-ta/ysyx-soc.git,2022-07-10 16:30:58+00:00,,1,ysyx-ta/ysyx-soc,512484428,Verilog,ysyx-soc,7089,2,2023-06-11 12:58:05+00:00,[],None
56,https://github.com/ketak-singh/Speech-Recognition-Simulation-using-Verilog.git,2022-06-28 17:45:27+00:00,"Our project aimed at developing a Real-Time Speech Recognition Engine on an FPGA using Altera DE2 board. The system was designed so as to recognize the word being spoken into the microphone. As large number of accents spoken around the world that this conundrum still remains an active area of research. Speech Recognition finds numerous applications including health care, artificial intelligence, human-computer interaction, Interactive Voice Response Systems, military, avionics, etc. Another most important application resides in helping physically-challenged people to interact with the world in a better way.",0,ketak-singh/Speech-Recognition-Simulation-using-Verilog,508399691,Verilog,Speech-Recognition-Simulation-using-Verilog,39,2,2024-01-17 07:17:16+00:00,[],None
57,https://github.com/Mrcold2002/Computer-composition-and-design.git,2022-06-29 10:09:13+00:00,WHU计组CPU设计,0,Mrcold2002/Computer-composition-and-design,508639401,Verilog,Computer-composition-and-design,91,2,2024-04-11 14:09:53+00:00,[],None
58,https://github.com/1mina1/Uart-transmitter-verilog.git,2022-07-09 18:39:20+00:00,"this is the uart transmitter project , it was done using verilog HDL language",0,1mina1/Uart-transmitter-verilog,512260229,Verilog,Uart-transmitter-verilog,29,2,2022-08-23 17:34:48+00:00,[],None
59,https://github.com/antonblanchard/microwatt-mpw7.git,2022-07-08 20:33:38+00:00,,0,antonblanchard/microwatt-mpw7,512019900,Verilog,microwatt-mpw7,1724268,2,2023-02-10 16:59:35+00:00,[],https://api.github.com/licenses/apache-2.0
60,https://github.com/Byteahalf/riscv_online_debug.git,2022-07-01 02:15:41+00:00,,0,Byteahalf/riscv_online_debug,509292984,Verilog,riscv_online_debug,4948,2,2023-04-05 10:12:53+00:00,[],None
61,https://github.com/markaulunGH/alu.git,2022-06-29 17:46:08+00:00,,0,markaulunGH/alu,508791601,Verilog,alu,41,2,2023-03-20 12:59:49+00:00,[],None
62,https://github.com/dkarakay/EE314-term-project.git,2022-06-30 00:30:27+00:00,,0,dkarakay/EE314-term-project,508884363,Verilog,EE314-term-project,2036,2,2023-06-24 20:13:22+00:00,[],None
63,https://github.com/TangtangSix/distance.git,2022-07-04 01:15:56+00:00,基于FPGA的超声波测距,1,TangtangSix/distance,510173390,Verilog,distance,12194,2,2023-01-08 10:45:25+00:00,[],None
64,https://github.com/jogeshsingh/MIPS-32-bit-Single_Cycle_Architecture_Implementation.git,2022-06-26 07:26:51+00:00,,0,jogeshsingh/MIPS-32-bit-Single_Cycle_Architecture_Implementation,507506290,Verilog,MIPS-32-bit-Single_Cycle_Architecture_Implementation,81,2,2023-07-31 12:31:29+00:00,[],https://api.github.com/licenses/mit
65,https://github.com/Sachin09032k/A5-1-GSM-Cipher-Image-Encryption-and-Decryption-using-Verilog.git,2022-07-06 17:39:16+00:00,Chips are designed using Verilog which can encrypt and decrypt a 256*256 image using A5/1 algorithm.,0,Sachin09032k/A5-1-GSM-Cipher-Image-Encryption-and-Decryption-using-Verilog,511235383,Verilog,A5-1-GSM-Cipher-Image-Encryption-and-Decryption-using-Verilog,494,2,2024-04-05 06:52:20+00:00,[],None
66,https://github.com/madoov/MAPPY-fpga.git,2022-07-06 17:47:41+00:00,,0,madoov/MAPPY-fpga,511237957,Verilog,MAPPY-fpga,6387,2,2022-08-23 11:23:47+00:00,[],None
67,https://github.com/HareetX/RV64IM-CPU.git,2022-07-06 07:30:38+00:00,,0,HareetX/RV64IM-CPU,511034754,Verilog,RV64IM-CPU,4213,2,2023-05-29 03:00:12+00:00,[],None
68,https://github.com/Lokshaw-Chau/myCPU.git,2022-07-09 02:44:56+00:00,risc-v指令集的五级流水cpu,0,Lokshaw-Chau/myCPU,512076875,Verilog,myCPU,13,2,2024-04-03 01:30:41+00:00,[],None
69,https://github.com/Shaanukstar123/Mars-Rover-Project-WALL-EE.git,2022-07-02 23:39:57+00:00,,0,Shaanukstar123/Mars-Rover-Project-WALL-EE,509882821,Verilog,Mars-Rover-Project-WALL-EE,368276,1,2022-07-02 23:47:34+00:00,[],None
70,https://github.com/adarsh4j/verilog.git,2022-07-06 09:53:01+00:00,,0,adarsh4j/verilog,511080327,Verilog,verilog,5,1,2023-08-06 13:29:22+00:00,[],None
71,https://github.com/hoglet67/DragonKeyMatrix.git,2022-06-28 17:56:27+00:00,A PS/2 to Dragon 32 Keyboard Matrix convertor in Verilog,0,hoglet67/DragonKeyMatrix,508402948,Verilog,DragonKeyMatrix,9,1,2022-06-28 21:35:22+00:00,[],None
72,https://github.com/thainnos/FISMOS.git,2022-07-04 06:06:12+00:00,FPGA Implementation of a Security Module as Open Source,0,thainnos/FISMOS,510232772,Verilog,FISMOS,2836,1,2024-02-08 06:38:56+00:00,"['fismos', 'risc-v', 'system-on-chip']",https://api.github.com/licenses/mit
73,https://github.com/h20210154/BWT.git,2022-07-04 08:51:04+00:00,,0,h20210154/BWT,510281615,Verilog,BWT,5,1,2024-03-08 12:59:59+00:00,[],None
74,https://github.com/StefanoRizzello/IIR_Filter.git,2022-06-30 16:08:18+00:00,Design and implementation of a digital filter,1,StefanoRizzello/IIR_Filter,509148022,Verilog,IIR_Filter,8898,1,2022-06-30 16:17:38+00:00,[],None
75,https://github.com/xusiqi2002/tinyriscv.git,2022-07-02 08:17:29+00:00,一个支持37条riscv指令顺序双发射cpu,0,xusiqi2002/tinyriscv,509698562,Verilog,tinyriscv,94,1,2022-12-14 15:21:32+00:00,[],None
76,https://github.com/mattvenn/wrapped_scan_test.git,2022-06-22 14:39:42+00:00,,1,mattvenn/wrapped_scan_test,506286300,Verilog,wrapped_scan_test,6470,1,2022-07-02 23:04:47+00:00,[],https://api.github.com/licenses/apache-2.0
77,https://github.com/mannavapremkumar/Lab03.git,2022-07-08 07:43:27+00:00,,0,mannavapremkumar/Lab03,511808081,Verilog,Lab03,6,1,2023-02-09 09:01:33+00:00,[],None
78,https://github.com/DT9025A/From-digital-circuits-to-FPGA.git,2022-06-23 08:45:40+00:00,一些数字电路的FPGA实现，基于正点原子新起点FPGA开发板,0,DT9025A/From-digital-circuits-to-FPGA,506562943,Verilog,From-digital-circuits-to-FPGA,8082,1,2022-06-30 10:02:33+00:00,[],https://api.github.com/licenses/mit
79,https://github.com/DouglasWWolf/sidewinder.git,2022-07-07 19:05:00+00:00,Basic DDR4 access on a Fidus Sidewinder,0,DouglasWWolf/sidewinder,511644545,Verilog,sidewinder,85210,1,2022-07-11 22:42:33+00:00,[],None
80,https://github.com/cryystalll/Dart-Game-Based-on-Electronic-Dart-Board-With-FPGA.git,2022-07-07 19:04:19+00:00,,0,cryystalll/Dart-Game-Based-on-Electronic-Dart-Board-With-FPGA,511644382,Verilog,Dart-Game-Based-on-Electronic-Dart-Board-With-FPGA,3878,1,2022-07-14 17:54:22+00:00,[],None
81,https://github.com/CHESS-mission/Clyde.git,2022-07-10 19:32:45+00:00,SoC for the decemer 22 mission designed using libero design suite,0,CHESS-mission/Clyde,512522498,Verilog,Clyde,124377,1,2022-08-11 06:55:34+00:00,[],None
82,https://github.com/UncleZhang13/IC_Contest.git,2022-06-23 10:25:16+00:00,IC_Contest,0,UncleZhang13/IC_Contest,506593796,Verilog,IC_Contest,12510,1,2022-09-16 02:03:06+00:00,[],None
83,https://github.com/Smartmayukh/Lemmings-using-Verilog.git,2022-06-30 13:48:23+00:00,Developing Lemmings Game using Verilog and simulating it using FPGA.,0,Smartmayukh/Lemmings-using-Verilog,509098780,Verilog,Lemmings-using-Verilog,18,1,2022-07-31 02:39:23+00:00,[],https://api.github.com/licenses/mit
84,https://github.com/nk-yadav/A5-1-stream-cipher-verilog-HDL.git,2022-07-02 19:35:53+00:00,Verilog implementation of a famous encryption algorithm,0,nk-yadav/A5-1-stream-cipher-verilog-HDL,509845781,Verilog,A5-1-stream-cipher-verilog-HDL,193,1,2023-04-28 03:47:00+00:00,[],None
85,https://github.com/StefanoRizzello/Multiplier_verification_with_UVM.git,2022-06-30 16:14:29+00:00,The aim of this lab is to verify a multiplier resorting to the Universal Verification Methodology (UVM),0,StefanoRizzello/Multiplier_verification_with_UVM,509150045,Verilog,Multiplier_verification_with_UVM,20904,1,2022-06-30 16:17:41+00:00,[],https://api.github.com/licenses/mit
86,https://github.com/Mateus-Henr/RISC-V-Datapath.git,2022-07-01 13:54:24+00:00,This project consists of a RISC-V datapath created for a computer organization practical work.,0,Mateus-Henr/RISC-V-Datapath,509473790,Verilog,RISC-V-Datapath,178,1,2022-07-31 13:52:24+00:00,[],None
87,https://github.com/mohamedtareq24/4_Channel_Logic_Analyzer.git,2022-07-07 19:11:41+00:00,FPGA based Logic analyzer designed then FPGA implemented on ALTERA cyclone IV FPGA ,0,mohamedtareq24/4_Channel_Logic_Analyzer,511646260,Verilog,4_Channel_Logic_Analyzer,142,1,2024-02-05 13:54:00+00:00,"['altera-fpga', 'fpga', 'logic-analyzer', 'verilog', 'quartus-prime']",None
88,https://github.com/KerJoe/VgaTest.git,2022-07-04 19:41:29+00:00,Verilog vga color bar signal generator,0,KerJoe/VgaTest,510483818,Verilog,VgaTest,9,1,2024-02-19 12:16:07+00:00,[],None
89,https://github.com/Yale-Young/FPGA-project.git,2022-06-28 00:38:56+00:00,,0,Yale-Young/FPGA-project,508104609,Verilog,FPGA-project,9494,1,2022-09-15 00:55:22+00:00,[],None
90,https://github.com/flashbangout/handshakefinish.git,2022-06-24 11:49:30+00:00,"a handshake model (verilog, systemverilog)",0,flashbangout/handshakefinish,506991050,Verilog,handshakefinish,755,1,2022-08-01 06:17:11+00:00,[],None
91,https://github.com/efrem-upt/hamming-ecc.git,2022-07-01 11:09:59+00:00,"Verilog module that receives a data input on 32 bits and returns the data output on 32 bits, where the flipped bit is corrected. If there are two bit flips, then a signal will be activated stating so",2,efrem-upt/hamming-ecc,509424551,Verilog,hamming-ecc,1305,1,2022-12-27 16:19:36+00:00,[],https://api.github.com/licenses/mit
92,https://github.com/StefanoRizzello/RISC-V_Lite.git,2022-06-30 16:02:45+00:00,Design of a RISC-V-lite processor,0,StefanoRizzello/RISC-V_Lite,509146355,Verilog,RISC-V_Lite,56514,1,2022-06-30 16:17:31+00:00,[],None
93,https://github.com/Guilhermeaug/NanoRisc.git,2022-07-08 14:31:16+00:00,,1,Guilhermeaug/NanoRisc,511924669,Verilog,NanoRisc,24,1,2022-08-15 01:25:49+00:00,[],None
94,https://github.com/crlarsen/fp_div-1.git,2022-07-05 20:10:35+00:00,Initial Version of Floating Point Division Circuit,0,crlarsen/fp_div-1,510880421,Verilog,fp_div-1,26,1,2024-03-06 00:12:24+00:00,[],None
95,https://github.com/venite-xjc/2020WHUCOD.git,2022-06-27 15:48:25+00:00,2020级武汉大学计算机组成与设计/计算机组成原理实验代码,0,venite-xjc/2020WHUCOD,507970460,Verilog,2020WHUCOD,156,1,2023-09-05 17:45:40+00:00,[],None
96,https://github.com/Dudestin/tinyEtherDeveloper.git,2022-07-07 21:07:22+00:00,Inexpensive FPGA board-based Ethernet evaluation board project. Consists mostly of DIP components and uses Tang PriMER. It can be built for about $50.,0,Dudestin/tinyEtherDeveloper,511674574,Verilog,tinyEtherDeveloper,3016,1,2022-09-18 04:00:19+00:00,[],None
97,https://github.com/Smartmayukh/Cellular-Automata-and-Verilog.git,2022-06-30 13:03:00+00:00,"Simulating various Cellular Automata designs on different topologies like Flat plane, Toroid, Morbius loop, Klein's bottle using Verilog.",0,Smartmayukh/Cellular-Automata-and-Verilog,509083020,Verilog,Cellular-Automata-and-Verilog,29,1,2022-07-31 02:39:24+00:00,[],https://api.github.com/licenses/mit
98,https://github.com/Omar-Abdullah-Muhammad-AlMaghawry/PCI_Interface_verilog.git,2022-07-10 19:34:35+00:00,"Desing, and verify PCI interface using verilog",0,Omar-Abdullah-Muhammad-AlMaghawry/PCI_Interface_verilog,512522832,Verilog,PCI_Interface_verilog,1584,1,2023-05-17 05:24:27+00:00,[],None
99,https://github.com/SoraShu/miniRV.git,2022-06-23 13:38:30+00:00,支持 miniRV-1 指令集的 SoC,0,SoraShu/miniRV,506655227,Verilog,miniRV,47,1,2023-04-01 14:28:24+00:00,[],None
100,https://github.com/yashgupta26/Single-Port-RAM.git,2022-07-03 14:15:32+00:00,,0,yashgupta26/Single-Port-RAM,510043025,Verilog,Single-Port-RAM,131,1,2023-09-07 07:59:16+00:00,[],None
101,https://github.com/SunrShine/FocInSoc.git,2022-07-02 09:28:53+00:00,foc algorithm in verilog,0,SunrShine/FocInSoc,509712865,Verilog,FocInSoc,7,1,2023-06-28 13:59:18+00:00,[],None
102,https://github.com/t0d4/IoTProject.git,2022-06-23 01:12:42+00:00,"情報理工学科3年次科目""IoTシステム設計""における制作物をまとめたリポジトリ",0,t0d4/IoTProject,506455431,Verilog,IoTProject,3507,1,2022-07-09 15:14:38+00:00,[],None
103,https://github.com/abrahamjdn/MIPS-Multicycle.git,2022-06-29 07:11:19+00:00,"Mips multicycle using verilog, the instructions implemented are: LW, SW, BEQ, BNE, J, ADD, SUB, OR, AND & SLT",0,abrahamjdn/MIPS-Multicycle,508585042,Verilog,MIPS-Multicycle,893,1,2022-11-26 12:29:05+00:00,[],None
104,https://github.com/1261843107/handshake.git,2022-06-22 14:06:24+00:00,shakehand,0,1261843107/handshake,506273811,Verilog,handshake,132,1,2023-06-04 16:41:20+00:00,[],None
105,https://github.com/stativeboss/Development-of-a-Matrix-Multiplication-unit-using-2D-systolic-array-architecture.git,2022-07-09 17:46:25+00:00,,0,stativeboss/Development-of-a-Matrix-Multiplication-unit-using-2D-systolic-array-architecture,512249915,Verilog,Development-of-a-Matrix-Multiplication-unit-using-2D-systolic-array-architecture,18,1,2023-11-20 12:49:43+00:00,[],None
106,https://github.com/Suhaib033/Image-Processing-using-FPGA.git,2022-07-08 15:59:19+00:00,An efficient image processor utilizing the Zynq -7000 SoC. (Zedboard),0,Suhaib033/Image-Processing-using-FPGA,511950967,Verilog,Image-Processing-using-FPGA,15,1,2023-06-30 08:12:38+00:00,[],None
107,https://github.com/ysyx-ta/axi4-template.git,2022-07-08 03:47:14+00:00,,0,ysyx-ta/axi4-template,511753237,Verilog,axi4-template,3,1,2022-09-01 07:11:51+00:00,[],None
108,https://github.com/Smartmayukh/Serial-Communication-using-Verilog.git,2022-07-03 10:26:43+00:00,"Designing serial communication system used by PS/2 mouse, UART, RS232 etc. using Verilog",0,Smartmayukh/Serial-Communication-using-Verilog,509990356,Verilog,Serial-Communication-using-Verilog,9,1,2022-12-01 14:04:58+00:00,[],https://api.github.com/licenses/mit
109,https://github.com/bet20ICL/imps-mips.git,2022-07-03 13:32:17+00:00,Yet another implementation of a MIPS CPU - an Imperial EIE coursework extension,0,bet20ICL/imps-mips,510031958,Verilog,imps-mips,1,1,2022-07-08 21:42:29+00:00,[],None
110,https://github.com/MJARAB/Matrix-Operations.git,2022-07-04 23:28:35+00:00,"✖ In this repository, I implement mathematical operations on matrices using the Verilog language.",0,MJARAB/Matrix-Operations,510528482,Verilog,Matrix-Operations,5,1,2022-07-22 16:21:49+00:00,[],https://api.github.com/licenses/mit
111,https://github.com/mannavapremkumar/Lab1.git,2022-07-08 02:43:13+00:00,,0,mannavapremkumar/Lab1,511739457,Verilog,Lab1,23,1,2023-02-09 09:01:37+00:00,[],None
112,https://github.com/WHU-RVLAB/Educational_cpu_design.git,2022-06-27 09:47:26+00:00,,1,WHU-RVLAB/Educational_cpu_design,507850313,Verilog,Educational_cpu_design,12,1,2022-06-28 12:06:43+00:00,[],https://api.github.com/licenses/apache-2.0
113,https://github.com/Walid-Kh/AES-Verilog.git,2022-06-23 18:09:32+00:00,"AES or Advanced Encryption Standard is used for Encryption and Decryption, the encryption and decryption each had 5 algorithms: subBytes, shiftRow, mixColumns, addRoundKey and keyExpansion, these algorithms were also inverted during the decryption process. the project was a requirement of the Advanced Logic Design course.",0,Walid-Kh/AES-Verilog,506744355,Verilog,AES-Verilog,63,1,2023-02-10 11:26:24+00:00,[],None
114,https://github.com/hesiqi2000/zynq-lab.git,2022-07-09 02:38:21+00:00,,0,hesiqi2000/zynq-lab,512075906,Verilog,zynq-lab,96589,1,2023-12-18 04:06:09+00:00,[],None
115,https://github.com/SanjaySivalingam/Warehouse_management_using_FPGA_based_AGV.git,2022-07-08 17:20:50+00:00,,0,SanjaySivalingam/Warehouse_management_using_FPGA_based_AGV,511973048,Verilog,Warehouse_management_using_FPGA_based_AGV,597,1,2024-04-06 15:57:54+00:00,[],None
116,https://github.com/Nahla-Mustafa99/Verilog_PCI_target_device-slave-.git,2022-06-27 16:40:50+00:00,,0,Nahla-Mustafa99/Verilog_PCI_target_device-slave-,507987317,Verilog,Verilog_PCI_target_device-slave-,11,1,2023-05-17 06:23:48+00:00,[],None
117,https://github.com/thariqfahry/colour-memory-2000.git,2022-07-07 00:19:23+00:00,An LCD-based game written in Verlilog HDL for the DE1-SoC.,0,thariqfahry/colour-memory-2000,511331026,Verilog,colour-memory-2000,1514,1,2023-03-05 07:26:06+00:00,[],None
118,https://github.com/buntyhim/Vaman_FPGA_LCD.git,2022-06-23 16:16:30+00:00,16x2 LCD display driver using verilog,1,buntyhim/Vaman_FPGA_LCD,506709809,Verilog,Vaman_FPGA_LCD,6,1,2024-03-18 16:47:58+00:00,[],None
119,https://github.com/DouglasWWolf/sidewinder_dma.git,2022-07-10 17:42:51+00:00,DMA over PCIe on a Fidus Sidewinder,0,DouglasWWolf/sidewinder_dma,512500128,Verilog,sidewinder_dma,26398,1,2022-07-11 22:42:31+00:00,[],None
120,https://github.com/ksdgundam1/36bits_ripple_carry_adder.git,2022-06-27 00:24:31+00:00,36bits ripple carry adder developed with verilog,0,ksdgundam1/36bits_ripple_carry_adder,507715287,Verilog,36bits_ripple_carry_adder,5448,1,2023-05-12 12:36:24+00:00,[],None
121,https://github.com/mannavapremkumar/Router-1X3-Desgin.git,2022-07-07 18:45:23+00:00,"Routing is the process of moving a packet of data from source to destination and enables messages to pass from one computer to another and eventually reach the target machine. A router is a networking device that forwards data packets between computer networks. It is connected to two or more data lines from different networks (as opposed to a network switch, which connects data lines from one single network). This paper, mainly emphasizes upon the study of router device, it""s top level architecture, and how various sub-modules of router i.e. Register, FIFO, FSM and Synchronizer are synthesized, and simulated and finally connected to its top module.",0,mannavapremkumar/Router-1X3-Desgin,511639263,Verilog,Router-1X3-Desgin,2911,1,2023-02-09 09:01:35+00:00,[],None
122,https://github.com/mannavapremkumar/Lab02.git,2022-07-08 07:38:36+00:00,,0,mannavapremkumar/Lab02,511806688,Verilog,Lab02,5,1,2023-02-09 09:01:34+00:00,[],None
123,https://github.com/drovak/friden.git,2022-06-30 05:34:40+00:00,Verilog models of Friden calculators,0,drovak/friden,508946567,Verilog,friden,294,1,2022-07-30 13:18:28+00:00,[],None
124,https://github.com/charlie-ccw/2nd-year-project-vision.git,2022-06-27 09:44:31+00:00,,0,charlie-ccw/2nd-year-project-vision,507849393,Verilog,2nd-year-project-vision,51588,1,2022-12-15 00:24:11+00:00,[],None
125,https://github.com/mattvenn/select-driver-cell.git,2022-06-24 13:32:49+00:00,,0,mattvenn/select-driver-cell,507021993,Verilog,select-driver-cell,2749,1,2022-07-02 23:04:36+00:00,[],None
126,https://github.com/jogeshsingh/UART_Communication_on_FPGA.git,2022-07-02 08:41:48+00:00,UART(UNIVERSAL ASYNCHRONOUS RECEIVER TRANSMITTER ) . Reciever Module (UART-PC-FPGA),0,jogeshsingh/UART_Communication_on_FPGA,509703511,Verilog,UART_Communication_on_FPGA,57,1,2022-07-20 18:59:38+00:00,[],https://api.github.com/licenses/mit
127,https://github.com/eteRnaL198/cs-ex-processor.git,2022-07-10 04:12:34+00:00,,0,eteRnaL198/cs-ex-processor,512341849,Verilog,cs-ex-processor,10284,1,2022-12-10 04:08:47+00:00,[],None
128,https://github.com/Hola39e/pss_verification.git,2022-06-23 12:45:27+00:00,,0,Hola39e/pss_verification,506636840,Verilog,pss_verification,8408,1,2023-12-05 02:39:15+00:00,[],https://api.github.com/licenses/apache-2.0
129,https://github.com/jogeshsingh/8-bit-Adder_Subtractor-Design-Unit-using-Verilog-HDL-in-NCSim-Cadence.git,2022-06-29 08:51:26+00:00,,0,jogeshsingh/8-bit-Adder_Subtractor-Design-Unit-using-Verilog-HDL-in-NCSim-Cadence,508615593,Verilog,8-bit-Adder_Subtractor-Design-Unit-using-Verilog-HDL-in-NCSim-Cadence,5,1,2022-07-20 18:59:40+00:00,[],https://api.github.com/licenses/mit
130,https://github.com/yangbo/fpga-mojo-sound-locator.git,2022-07-10 06:23:15+00:00,For debug Mojo-v3(Alchitry) sample project Sound-Locator and learn FPGA design technics.,0,yangbo/fpga-mojo-sound-locator,512361420,Verilog,fpga-mojo-sound-locator,4571,1,2022-07-15 08:04:28+00:00,[],https://api.github.com/licenses/apache-2.0
131,https://github.com/Pairshoe/Thinpad.git,2022-06-30 06:57:52+00:00,,0,Pairshoe/Thinpad,508968342,Verilog,Thinpad,52321,1,2023-10-08 03:01:01+00:00,[],None
132,https://github.com/sydzou/8-bit-Barrel-Shifter.git,2022-07-06 17:59:41+00:00,"8 bit Barrel Shifter using 2x1 which performs arithmetic, logical and circular shifts.",0,sydzou/8-bit-Barrel-Shifter,511241767,Verilog,8-bit-Barrel-Shifter,4,1,2022-07-06 18:05:24+00:00,[],https://api.github.com/licenses/mit
133,https://github.com/lunarmobiscuit/verilog-65C2402-fsm.git,2022-07-10 18:36:01+00:00,,1,lunarmobiscuit/verilog-65C2402-fsm,512511162,Verilog,verilog-65C2402-fsm,93,1,2022-07-24 06:38:47+00:00,[],None
134,https://github.com/andreemedeiros/CPU-MIPS.git,2022-06-30 14:02:24+00:00,Projeto de um processador MIPS ciclo único com instruções em Assembly em FPGA.,0,andreemedeiros/CPU-MIPS,509103930,Verilog,CPU-MIPS,12180,1,2024-01-20 17:51:18+00:00,[],https://api.github.com/licenses/mit
135,https://github.com/cepdnaclk/e16-4yp-Hardware-Cache-Switching-with-Operating-System-Context-Switches.git,2022-07-01 15:01:10+00:00,"An operating system performs a context switch when it suspends one kernel-level thread and activates a different thread. Typically, data stored in the cache memory are lost in such events. This project aims to explore the advantages of maintaining multiple small ""cache-storage-cores"" and switching to the appropriate one during a context switch. We will use a RISC-V CPU with a suitable embedded operating system and a custom-built cache for the FPGA-based experiments",5,cepdnaclk/e16-4yp-Hardware-Cache-Switching-with-Operating-System-Context-Switches,509495448,Verilog,e16-4yp-Hardware-Cache-Switching-with-Operating-System-Context-Switches,1491,1,2024-01-25 12:46:52+00:00,"['computer-architecture', 'operating-systems', 'systems-on-chip-design']",None
136,https://github.com/abhishek692001/Verilog.git,2022-07-02 17:55:28+00:00,,0,abhishek692001/Verilog,509825782,Verilog,Verilog,4,0,2022-07-02 17:56:48+00:00,[],None
137,https://github.com/MonirMomo/Verilog.git,2022-07-02 17:36:06+00:00,Verilog,0,MonirMomo/Verilog,509821372,Verilog,Verilog,27,0,2022-07-02 17:36:12+00:00,[],None
138,https://github.com/Atg2002/Verilog.git,2022-07-02 18:56:24+00:00,,0,Atg2002/Verilog,509838284,Verilog,Verilog,18,0,2022-07-02 19:02:25+00:00,[],None
139,https://github.com/Chinhalex/THSoc.git,2022-06-25 09:15:20+00:00,,0,Chinhalex/THSoc,507265556,Verilog,THSoc,21152,0,2022-06-25 09:18:51+00:00,[],None
140,https://github.com/DanielLeyvaM/Verilog.git,2022-06-26 01:57:09+00:00,Verilog (Hardware description),0,DanielLeyvaM/Verilog,507455445,Verilog,Verilog,175,0,2022-06-26 02:01:06+00:00,[],None
141,https://github.com/saay1010/Stopwatch.git,2022-06-27 18:22:56+00:00,verilog stopwatch project,0,saay1010/Stopwatch,508018535,Verilog,Stopwatch,3,0,2022-06-27 18:39:28+00:00,[],None
142,https://github.com/experimentech/14500_system.git,2022-06-30 12:56:43+00:00,mc14500 8bitworkshop minimal system,0,experimentech/14500_system,509080751,Verilog,14500_system,12,0,2022-06-30 12:57:05+00:00,[],None
143,https://github.com/yls108u/Verilog.git,2022-07-05 07:33:56+00:00,,0,yls108u/Verilog,510633188,Verilog,Verilog,393,0,2022-07-05 07:34:21+00:00,[],None
144,https://github.com/ShadyCookies/4-stage-Pipelined-8-bit-Processor.git,2022-07-05 10:51:04+00:00,Implementation of a pipelined 8-bit processor for a custom ISA in Verilog,0,ShadyCookies/4-stage-Pipelined-8-bit-Processor,510695465,Verilog,4-stage-Pipelined-8-bit-Processor,1044,0,2022-11-18 05:45:49+00:00,[],https://api.github.com/licenses/mit
145,https://github.com/sreedharn1108/Dual_Port_SRAM.git,2022-07-01 20:31:52+00:00,Dual Port SRAM using inbuilt IP Catalog of Quartus Prime Lite (Veerilig),0,sreedharn1108/Dual_Port_SRAM,509581878,Verilog,Dual_Port_SRAM,6,0,2022-07-01 20:37:05+00:00,[],None
146,https://github.com/ajaykrishna1878/ALU-RTL.git,2022-06-23 06:51:39+00:00,,0,ajaykrishna1878/ALU-RTL,506528986,Verilog,ALU-RTL,3,0,2022-06-23 07:34:34+00:00,[],None
147,https://github.com/Hetvi21/efabless.git,2022-06-23 07:40:12+00:00,,0,Hetvi21/efabless,506543060,Verilog,efabless,51884,0,2022-06-23 07:51:50+00:00,[],https://api.github.com/licenses/apache-2.0
148,https://github.com/Kalkan-Emre/CENG_232_labs.git,2022-07-05 18:39:17+00:00,,0,Kalkan-Emre/CENG_232_labs,510855283,Verilog,CENG_232_labs,4,0,2022-11-04 17:00:26+00:00,[],None
149,https://github.com/Prasoon-Garg/Y86-Processor.git,2022-07-06 18:15:43+00:00,,0,Prasoon-Garg/Y86-Processor,511246677,Verilog,Y86-Processor,790,0,2022-08-10 10:05:24+00:00,[],None
150,https://github.com/PrashantP2k/Floating-Point-Unit.git,2022-07-05 18:00:17+00:00,"A project done by my while studying the Embedded Systems course at Indian Institute of Technology, Guwahati",0,PrashantP2k/Floating-Point-Unit,510843240,Verilog,Floating-Point-Unit,1901,0,2022-07-05 18:16:48+00:00,[],None
151,https://github.com/AhmedElDaly9/Low-Power-Configurable-Multi-Clock-Digital-System.git,2022-07-06 10:38:39+00:00,,0,AhmedElDaly9/Low-Power-Configurable-Multi-Clock-Digital-System,511094165,Verilog,Low-Power-Configurable-Multi-Clock-Digital-System,67,0,2022-07-06 10:38:54+00:00,[],None
152,https://github.com/Kajaldeep/CS220-Assignments.git,2022-07-05 16:09:12+00:00,,0,Kajaldeep/CS220-Assignments,510807721,Verilog,CS220-Assignments,3566,0,2022-07-05 16:54:11+00:00,[],None
153,https://github.com/ekcmert/eggtimer.git,2022-07-04 21:56:00+00:00,Egg Timer Digital Design (Algorithmic State Machine),0,ekcmert/eggtimer,510512681,Verilog,eggtimer,1303,0,2022-07-04 21:56:32+00:00,[],None
154,https://github.com/sidastro30/Simple-UART-Protocol-HDL-.git,2022-07-04 18:11:52+00:00,,0,sidastro30/Simple-UART-Protocol-HDL-,510460369,Verilog,Simple-UART-Protocol-HDL-,2,0,2022-07-04 20:17:57+00:00,[],None
155,https://github.com/pateldivyam26/EEL2020-Digital-Design-Labs.git,2022-07-04 18:59:49+00:00,,0,pateldivyam26/EEL2020-Digital-Design-Labs,510473120,Verilog,EEL2020-Digital-Design-Labs,4110,0,2023-07-08 05:22:26+00:00,['verilog'],None
156,https://github.com/pateldivyam26/Traffic-Light-Controller.git,2022-07-10 14:20:17+00:00,This project aims to build a Traffic Light Control System to control traffic at an intersection of crossroad using Verilog.,1,pateldivyam26/Traffic-Light-Controller,512454114,Verilog,Traffic-Light-Controller,8090,0,2023-07-08 12:13:33+00:00,[],None
157,https://github.com/kmkim036/FFT-Simulator.git,2022-06-30 12:03:38+00:00,,0,kmkim036/FFT-Simulator,509063201,Verilog,FFT-Simulator,134,0,2022-06-30 12:08:29+00:00,[],None
158,https://github.com/JeonHoe/summer_prj.git,2022-06-30 06:45:18+00:00,여름 방학 활동,0,JeonHoe/summer_prj,508964754,Verilog,summer_prj,50031,0,2022-07-19 06:10:18+00:00,[],None
159,https://github.com/AlanPonnachan/Verilog_projects.git,2022-06-30 06:56:52+00:00,,0,AlanPonnachan/Verilog_projects,508968059,Verilog,Verilog_projects,2,0,2022-06-30 06:57:22+00:00,[],None
160,https://github.com/Lewis-Tsai/Logic-Design-Laboratory-Final-Project.git,2022-06-24 11:24:51+00:00,,0,Lewis-Tsai/Logic-Design-Laboratory-Final-Project,506984313,Verilog,Logic-Design-Laboratory-Final-Project,778,0,2023-03-06 16:52:32+00:00,[],None
161,https://github.com/Max-Klenyshev/CVSD-PCM-codec.git,2022-06-24 06:29:10+00:00,"Код для ВКРб ""Разработка на языке Verilog PCM-CVSD кодека с возможностью сжатия по  альфа-закону""",0,Max-Klenyshev/CVSD-PCM-codec,506902321,Verilog,CVSD-PCM-codec,70,0,2022-07-12 10:33:49+00:00,[],None
162,https://github.com/Must-Hard/Breathing-lamp.git,2022-06-22 01:38:39+00:00,Breathing lamp realized by FPGA,0,Must-Hard/Breathing-lamp,506059619,Verilog,Breathing-lamp,61,0,2022-06-22 01:41:22+00:00,[],None
163,https://github.com/chunsubin/FW_soobin.git,2022-06-22 06:08:55+00:00,,0,chunsubin/FW_soobin,506119298,Verilog,FW_soobin,229,0,2022-06-22 06:10:13+00:00,[],None
164,https://github.com/antonblaise/SelectionSort_ASM.git,2022-06-22 12:51:01+00:00,Selection Sort algorithm with Verilog HDL and state machine,0,antonblaise/SelectionSort_ASM,506245779,Verilog,SelectionSort_ASM,7,0,2022-06-22 12:51:08+00:00,[],https://api.github.com/licenses/mit
165,https://github.com/fennecfox38/VerilogHDL.git,2022-06-25 11:43:59+00:00,VerilogHDL Syntax Learning and Excersices,0,fennecfox38/VerilogHDL,507295732,Verilog,VerilogHDL,138,0,2022-06-26 07:52:59+00:00,"['verilog', 'verilog-hdl']",None
166,https://github.com/LongHoGit/Exp_mod7.git,2022-06-26 07:26:05+00:00,,0,LongHoGit/Exp_mod7,507506114,Verilog,Exp_mod7,0,0,2022-06-26 07:26:32+00:00,[],None
167,https://github.com/Chun-Ching-Hsu/MAC.git,2022-06-26 15:50:22+00:00,,1,Chun-Ching-Hsu/MAC,507617281,Verilog,MAC,3728,0,2022-07-05 23:25:13+00:00,[],None
168,https://github.com/madhav2391/Tomasulo-algorithm.git,2022-06-29 11:41:45+00:00,,0,madhav2391/Tomasulo-algorithm,508667363,Verilog,Tomasulo-algorithm,27,0,2022-06-29 11:42:41+00:00,[],None
169,https://github.com/Pierre120/CSARCH1_HDLProject3.git,2022-06-23 12:56:15+00:00,Hardware Desciption Language machine project 3 for CSARCH1 Term 2 AY2021-2022. This implements the sequential circuit with flip-flops.,0,Pierre120/CSARCH1_HDLProject3,506640403,Verilog,CSARCH1_HDLProject3,36,0,2022-07-29 10:26:40+00:00,[],None
170,https://github.com/ShubhamGupta577/HDLbits_solutions.git,2022-06-24 13:33:58+00:00,This repository contains the solutions of the problems given on HDLbits site.,0,ShubhamGupta577/HDLbits_solutions,507022386,Verilog,HDLbits_solutions,71,0,2022-06-24 13:51:46+00:00,"['combinational-circuits', 'sequential-circuits', 'verilog']",None
171,https://github.com/DiyadotSaha/OOP-interactive-game-Frog-Frenzy-.git,2022-06-24 22:18:24+00:00,,0,DiyadotSaha/OOP-interactive-game-Frog-Frenzy-,507157326,Verilog,OOP-interactive-game-Frog-Frenzy-,21692,0,2022-11-18 18:27:50+00:00,[],None
172,https://github.com/pepijndevos/74xx-gameoflife.git,2022-06-27 16:10:02+00:00,Game of life implemented in 74xx logic,0,pepijndevos/74xx-gameoflife,507977645,Verilog,74xx-gameoflife,40,0,2022-07-02 08:34:07+00:00,[],None
173,https://github.com/Mazen-Elaraby/A-full-implementation-of-the-pipelined-MIPS-processor.git,2022-06-27 20:53:44+00:00,This is a full implementation of the pipelined MIPS processor with a control hazard unit and a forwarding unit,0,Mazen-Elaraby/A-full-implementation-of-the-pipelined-MIPS-processor,508058931,Verilog,A-full-implementation-of-the-pipelined-MIPS-processor,8,0,2022-06-27 20:56:32+00:00,[],None
174,https://github.com/Ther-nullptr/Pipeline_CPU.git,2022-06-28 03:53:27+00:00,lab for pipeline CPU,0,Ther-nullptr/Pipeline_CPU,508146224,Verilog,Pipeline_CPU,1124,0,2022-07-18 02:21:06+00:00,[],None
175,https://github.com/aamir1412/verilog-project.git,2022-06-28 05:47:17+00:00,8-bit microprocessor,0,aamir1412/verilog-project,508170996,,verilog-project,2086,0,2022-08-15 06:47:14+00:00,[],None
176,https://github.com/sshyran/openfpga-macros.git,2022-06-27 15:56:00+00:00,GDS-ready eFPGA IPs using OpenFPGA prototyping tool,0,sshyran/openfpga-macros,507973063,Verilog,openfpga-macros,29585,0,2022-06-27 15:58:30+00:00,"['eda', 'efpga', 'foss', 'google', 'openfpga']",None
177,https://github.com/chrispustka/HDL-Projects.git,2022-06-27 21:04:05+00:00,,0,chrispustka/HDL-Projects,508061457,Verilog,HDL-Projects,3,0,2022-06-28 15:32:48+00:00,[],None
178,https://github.com/call-me-ab/Speech-Recognition-Simulation-using-Verilog.git,2022-06-29 17:29:54+00:00,"Our project aimed at developing a Real-Time Speech Recognition Engine on an FPGA using Altera DE2 board. The system was designed so as to recognize the word being spoken into the microphone. As large number of accents spoken around the world that this conundrum still remains an active area of research. Speech Recognition finds numerous applications including health care, artificial intelligence, human-computer interaction, Interactive Voice Response Systems, military, avionics, etc. Another most important application resides in helping physically-challenged people to interact with the world in a better way.",0,call-me-ab/Speech-Recognition-Simulation-using-Verilog,508786486,Verilog,Speech-Recognition-Simulation-using-Verilog,13,0,2022-06-29 17:37:00+00:00,[],None
179,https://github.com/TheKingOfForest/TaskOne.git,2022-06-23 14:57:13+00:00,,0,TheKingOfForest/TaskOne,506683713,Verilog,TaskOne,476,0,2022-06-23 14:58:56+00:00,[],None
180,https://github.com/Precioux/Logic-Circuit-Lab.git,2022-06-25 22:33:51+00:00,Logic Circuit Laboratory - Spring 2021,0,Precioux/Logic-Circuit-Lab,507429983,Verilog,Logic-Circuit-Lab,5828,0,2022-07-09 18:19:50+00:00,"['logic-circuit-laboratory', 'verilog']",None
181,https://github.com/LEANA18/Verilog-Programs-S4.git,2022-06-25 09:50:39+00:00,,0,LEANA18/Verilog-Programs-S4,507272564,Verilog,Verilog-Programs-S4,5,0,2022-06-25 09:53:04+00:00,[],None
182,https://github.com/mwebbs1/HDL_Design_Snippits.git,2022-06-29 05:54:49+00:00,A place just to put HDL modules,0,mwebbs1/HDL_Design_Snippits,508564104,Verilog,HDL_Design_Snippits,262,0,2022-07-01 11:58:25+00:00,[],None
183,https://github.com/JJHYE0N/CSED273.git,2022-06-28 14:41:16+00:00,,0,JJHYE0N/CSED273,508338303,Verilog,CSED273,14,0,2022-06-28 14:42:43+00:00,[],None
184,https://github.com/tyrosey/Computer-Architecture.git,2022-07-07 20:03:30+00:00,MIPS Assembly Language and Verilog Description Language Projects,0,tyrosey/Computer-Architecture,511659558,Verilog,Computer-Architecture,30,0,2022-07-07 20:20:33+00:00,[],None
185,https://github.com/AyaseErii/my_openlane_project.git,2022-06-30 18:10:01+00:00,This is a preparation repo for the backend design flow,0,AyaseErii/my_openlane_project,509186047,Verilog,my_openlane_project,7274,0,2022-06-30 21:14:12+00:00,[],None
186,https://github.com/mateobode/GreenHouse-temperature-monitoring.git,2022-07-01 20:52:07+00:00,,0,mateobode/GreenHouse-temperature-monitoring,509585989,Verilog,GreenHouse-temperature-monitoring,4,0,2022-07-01 21:05:59+00:00,[],None
187,https://github.com/nikmilj/100DaysOfRTL.git,2022-07-03 12:06:07+00:00,,0,nikmilj/100DaysOfRTL,510012028,Verilog,100DaysOfRTL,3,0,2022-07-23 22:50:33+00:00,[],None
188,https://github.com/kalptechs/nano.git,2022-06-22 17:25:04+00:00,Kalp Nano IoT Contoller,0,kalptechs/nano,506342978,Verilog,nano,49621,0,2022-06-22 17:51:33+00:00,[],https://api.github.com/licenses/apache-2.0
189,https://github.com/jayasree2411/Floating-Point-Multiplier.git,2022-06-23 07:00:12+00:00,,0,jayasree2411/Floating-Point-Multiplier,506531412,Verilog,Floating-Point-Multiplier,2,0,2022-06-23 07:02:53+00:00,[],None
190,https://github.com/russelljjarvis/ali_test_code.git,2022-06-23 04:15:34+00:00,,0,russelljjarvis/ali_test_code,506493643,Verilog,ali_test_code,4,0,2022-06-23 04:18:36+00:00,[],None
191,https://github.com/ahpinder/FPGPU.git,2022-06-24 00:03:27+00:00,FPGA-based GPU project (mostly for fun / practice),0,ahpinder/FPGPU,506825318,Verilog,FPGPU,7,0,2022-07-08 22:22:41+00:00,[],https://api.github.com/licenses/mit
192,https://github.com/LanaP2000/Microarchitecture.git,2022-07-02 10:07:10+00:00,,0,LanaP2000/Microarchitecture,509720470,Verilog,Microarchitecture,969,0,2022-07-24 20:19:38+00:00,[],None
193,https://github.com/faiek-ahsan/test_caravel.git,2022-07-04 13:32:51+00:00,,0,faiek-ahsan/test_caravel,510372010,Verilog,test_caravel,51938,0,2022-07-04 13:33:04+00:00,[],https://api.github.com/licenses/apache-2.0
194,https://github.com/abhinav1601/4-Staged-RISC-V-Pipelined-Processor.git,2022-07-07 15:20:46+00:00,,0,abhinav1601/4-Staged-RISC-V-Pipelined-Processor,511578551,Verilog,4-Staged-RISC-V-Pipelined-Processor,5,0,2022-07-07 15:31:55+00:00,[],None
195,https://github.com/kamzaaa/State-Machine-Digital-Lock.git,2022-07-07 16:43:58+00:00,"a copy of university mini-project, a digital lock using a finite state machine",0,kamzaaa/State-Machine-Digital-Lock,511604841,Verilog,State-Machine-Digital-Lock,9,0,2022-07-07 16:56:08+00:00,[],None
196,https://github.com/frank355325/HW.git,2022-06-30 13:47:09+00:00,,0,frank355325/HW,509098362,Verilog,HW,4,0,2022-06-30 13:49:57+00:00,[],None
197,https://github.com/MertArslanoglu/FPGA-Implementation-of-Simple-Quality-of-Service-QoS-based-Queuing.git,2022-07-03 01:46:54+00:00,,0,MertArslanoglu/FPGA-Implementation-of-Simple-Quality-of-Service-QoS-based-Queuing,509898745,Verilog,FPGA-Implementation-of-Simple-Quality-of-Service-QoS-based-Queuing,67065,0,2022-07-06 17:27:47+00:00,[],None
198,https://github.com/Pawantech-App/DDCO_Mini_Project.git,2022-07-03 14:31:19+00:00,DESIGN AND IMPLEMENTATION OF A RING AND JOHNSON COUNTER WITH CONTROL LOGIC,0,Pawantech-App/DDCO_Mini_Project,510047043,Verilog,DDCO_Mini_Project,1558,0,2022-07-03 14:32:15+00:00,[],None
199,https://github.com/priyank-091/RISC-V-Pipelined-Processor.git,2022-07-03 07:37:55+00:00,,0,priyank-091/RISC-V-Pipelined-Processor,509954987,Verilog,RISC-V-Pipelined-Processor,23,0,2022-07-03 07:53:14+00:00,[],None
200,https://github.com/bojieli/dlx-cpu-backup.git,2022-06-26 11:02:20+00:00,,0,bojieli/dlx-cpu-backup,507549985,Verilog,dlx-cpu-backup,8527,0,2022-06-26 11:02:59+00:00,[],None
201,https://github.com/ngrabbs/linuxFoundationRISCVCore.git,2022-06-29 01:43:56+00:00,code from the Linux Foundation RISC-V Core class,0,ngrabbs/linuxFoundationRISCVCore,508509441,Verilog,linuxFoundationRISCVCore,15,0,2022-07-02 02:35:56+00:00,[],None
202,https://github.com/RuochenDai78/2021_hackdac_phase1.git,2022-06-28 17:41:14+00:00,,0,RuochenDai78/2021_hackdac_phase1,508398401,Verilog,2021_hackdac_phase1,544,0,2022-06-28 17:52:29+00:00,[],None
203,https://github.com/BaselDOS/Verilog_Practice_BitCoin.git,2022-07-04 11:44:53+00:00,,0,BaselDOS/Verilog_Practice_BitCoin,510336441,Verilog,Verilog_Practice_BitCoin,4054,0,2022-07-04 12:00:29+00:00,[],None
204,https://github.com/Hua-rookie/Gobang-with-FPGA.git,2022-06-24 14:47:53+00:00,"This is a backgammon based on FPGA (Artix-7), supporting the use of VGA interface display, keyboard control, while supporting the use of audio playback game background music.",0,Hua-rookie/Gobang-with-FPGA,507046407,Verilog,Gobang-with-FPGA,8,0,2022-06-24 14:48:41+00:00,[],None
205,https://github.com/demeritbird/50.002-1D-The-Holding-Dice.git,2022-07-01 00:10:05+00:00,,0,demeritbird/50.002-1D-The-Holding-Dice,509268826,Verilog,50.002-1D-The-Holding-Dice,14551,0,2022-07-01 00:11:30+00:00,[],None
206,https://github.com/minecraftdixit/verilog-codes-.git,2022-06-30 22:01:27+00:00,mini projects,0,minecraftdixit/verilog-codes-,509245077,Verilog,verilog-codes-,64,0,2023-07-04 20:06:39+00:00,"['hdl', 'rtl', 'verilog']",None
207,https://github.com/PokrAndrey/Concentrator_sim.git,2022-06-30 12:40:08+00:00,Module for uniting packet in one,0,PokrAndrey/Concentrator_sim,509074948,Verilog,Concentrator_sim,24769,0,2022-06-30 12:50:56+00:00,[],None
208,https://github.com/Janavind/MPW_7A.git,2022-07-09 05:19:46+00:00,,0,Janavind/MPW_7A,512100437,Verilog,MPW_7A,47371,0,2022-07-09 05:19:58+00:00,[],https://api.github.com/licenses/apache-2.0
209,https://github.com/tstren1223/computer-architecture.git,2022-06-25 16:23:02+00:00,,0,tstren1223/computer-architecture,507360480,Verilog,computer-architecture,65944,0,2023-05-14 12:24:07+00:00,[],None
210,https://github.com/tv8630/PWM-Generator---Verilog.git,2022-06-28 03:10:21+00:00,A basic Pulse Width Modulation generator in Xilinx Verilog,0,tv8630/PWM-Generator---Verilog,508137218,Verilog,PWM-Generator---Verilog,1,0,2022-06-28 03:13:12+00:00,[],None
211,https://github.com/Gaurav-Krishna-Gaali/votingMachine_vivado.git,2022-06-27 11:20:39+00:00,,0,Gaurav-Krishna-Gaali/votingMachine_vivado,507878508,Verilog,votingMachine_vivado,2442,0,2022-06-27 11:26:01+00:00,[],None
212,https://github.com/Hetvi21/efabless_1.git,2022-06-23 09:24:48+00:00,,0,Hetvi21/efabless_1,506575486,Verilog,efabless_1,51883,0,2022-06-23 09:32:30+00:00,[],https://api.github.com/licenses/apache-2.0
213,https://github.com/sauunivlsi/vijanu.git,2022-06-22 17:57:47+00:00,Students project for ADC ASIC using Efabless.com's Caravel,0,sauunivlsi/vijanu,506353236,Verilog,vijanu,49620,0,2022-06-22 18:24:52+00:00,[],https://api.github.com/licenses/apache-2.0
214,https://github.com/Rahulwadhwa157/Structural-Modeling-of-Processor.git,2022-07-06 06:46:42+00:00,,0,Rahulwadhwa157/Structural-Modeling-of-Processor,511021511,Verilog,Structural-Modeling-of-Processor,4,0,2022-07-06 06:50:58+00:00,[],None
215,https://github.com/Ch1-n/Multi-architecture-simplified-LC-3-MIPS-processor.git,2022-07-07 12:25:58+00:00,,0,Ch1-n/Multi-architecture-simplified-LC-3-MIPS-processor,511518004,Verilog,Multi-architecture-simplified-LC-3-MIPS-processor,17,0,2022-07-07 12:27:29+00:00,[],None
216,https://github.com/ShashwatGupta2001/P_GCD-Counter.git,2022-07-07 08:38:06+00:00,A Verilog HDL Implementation of GCD Counter,0,ShashwatGupta2001/P_GCD-Counter,511448263,Verilog,P_GCD-Counter,2,0,2022-07-07 08:44:15+00:00,[],None
217,https://github.com/kaivalyaeAnilP/I-Chip-PS2.git,2022-07-07 14:05:30+00:00,,0,kaivalyaeAnilP/I-Chip-PS2,511551748,Verilog,I-Chip-PS2,330,0,2022-07-08 12:32:44+00:00,[],None
218,https://github.com/egoRTL/VGA-Framebuffer.git,2022-07-06 10:07:41+00:00,FB project,0,egoRTL/VGA-Framebuffer,511084861,Verilog,VGA-Framebuffer,119777,0,2024-01-08 19:52:28+00:00,[],None
219,https://github.com/Voidcharacter/Verilog-D-Flip-flop.git,2022-07-01 10:05:09+00:00,,0,Voidcharacter/Verilog-D-Flip-flop,509406761,Verilog,Verilog-D-Flip-flop,2,0,2022-07-01 10:07:17+00:00,[],None
220,https://github.com/noraalsubaie/Traffic_signal-.git,2022-07-01 12:11:19+00:00,,0,noraalsubaie/Traffic_signal-,509441691,Verilog,Traffic_signal-,14,0,2022-07-01 12:15:38+00:00,[],None
221,https://github.com/tejas2605/IEEE-Floating-Point-Unit.git,2022-07-03 17:58:42+00:00,,0,tejas2605/IEEE-Floating-Point-Unit,510097772,Verilog,IEEE-Floating-Point-Unit,9,0,2022-09-06 10:00:12+00:00,[],None
222,https://github.com/marwaneltoukhy/test.git,2022-07-07 11:14:47+00:00,,0,marwaneltoukhy/test,511496122,Verilog,test,2226,0,2022-07-07 11:15:01+00:00,[],https://api.github.com/licenses/apache-2.0
223,https://github.com/pyong-1459/Deinterleaver-2022-mod1536.git,2022-07-07 04:08:06+00:00,,0,pyong-1459/Deinterleaver-2022-mod1536,511377659,Verilog,Deinterleaver-2022-mod1536,1674,0,2022-07-07 04:11:44+00:00,[],https://api.github.com/licenses/mit
224,https://github.com/kamzaaa/Pong-Mini-project.git,2022-07-07 16:19:10+00:00,"University project, a classic pong game on FPGA microcontroller!",0,kamzaaa/Pong-Mini-project,511597340,Verilog,Pong-Mini-project,58,0,2022-07-07 16:25:47+00:00,[],None
225,https://github.com/dzwduan/axi4.git,2022-07-08 03:33:02+00:00,,0,dzwduan/axi4,511750193,Verilog,axi4,2,0,2022-07-08 03:36:57+00:00,[],None
226,https://github.com/maheshbhatk/RTL_Practice.git,2022-07-02 02:41:48+00:00,Very simple basics using Verilog,0,maheshbhatk/RTL_Practice,509639762,Verilog,RTL_Practice,4,0,2022-07-02 17:35:01+00:00,[],None
227,https://github.com/liyutong343/MIPS_CPU_Single-Multi_Cycle.git,2022-07-03 08:23:05+00:00,大二春/数字逻辑与处理器基础/处理器大作业,0,liyutong343/MIPS_CPU_Single-Multi_Cycle,509963888,Verilog,MIPS_CPU_Single-Multi_Cycle,1986,0,2022-07-03 08:25:37+00:00,[],None
228,https://github.com/yohitha08/CRPTO-FPGA.git,2022-07-04 21:28:01+00:00,,0,yohitha08/CRPTO-FPGA,510507475,Verilog,CRPTO-FPGA,16,0,2022-07-04 21:32:38+00:00,[],None
229,https://github.com/NguyenHuan22/He_thong_cay_xang_tu_dong.git,2022-07-05 14:46:41+00:00,,0,NguyenHuan22/He_thong_cay_xang_tu_dong,510778201,Verilog,He_thong_cay_xang_tu_dong,3,0,2022-07-14 09:36:45+00:00,[],None
230,https://github.com/kassane/FPGA_Course.git,2022-07-02 18:12:31+00:00,Testing conducted during verilog studies,0,kassane/FPGA_Course,509829350,Verilog,FPGA_Course,1,0,2022-07-02 18:23:19+00:00,"['fpga', 'verilog']",None
231,https://github.com/Rohit-Mundada/IEEE-FPU.git,2022-07-02 08:25:53+00:00,Designed a floating-point unit that follows the IEEE 754 single-point precision standard and computes the addition and multiplication of 2 floating-point numbers. Addressed issues related to unnormalized and overflow values.,0,Rohit-Mundada/IEEE-FPU,509700261,Verilog,IEEE-FPU,1105,0,2022-07-02 08:27:31+00:00,[],None
232,https://github.com/SHIVANSH-DUBEY/Verilog-Based-Image-Editor.git,2022-06-27 08:21:07+00:00,,0,SHIVANSH-DUBEY/Verilog-Based-Image-Editor,507822752,Verilog,Verilog-Based-Image-Editor,194,0,2022-06-27 08:21:16+00:00,[],None
233,https://github.com/hihii11/The-Code-Lock-design-based-on-FPGA.git,2022-06-28 03:03:56+00:00,"The program uses chip Cyclone II-EP2C35F672C6 under quartus integrated development environment.  The project includes complete design files, simulation files and bit stream files.",0,hihii11/The-Code-Lock-design-based-on-FPGA,508135791,Verilog,The-Code-Lock-design-based-on-FPGA,411,0,2022-06-28 03:11:02+00:00,[],None
234,https://github.com/LongHoGit/inv_AES_128bit.git,2022-06-26 06:49:39+00:00,,0,LongHoGit/inv_AES_128bit,507499258,Verilog,inv_AES_128bit,16,0,2022-06-26 06:52:50+00:00,[],None
235,https://github.com/HK-Finaviya/Gates100.git,2022-06-26 06:37:25+00:00,"Build a combinational circuit with 100 inputs, in[99:0].  There are 3 outputs:  out_and: output of a 100-input AND gate. out_or: output of a 100-input OR gate. out_xor: output of a 100-input XOR gate.",0,HK-Finaviya/Gates100,507496979,Verilog,Gates100,4,0,2022-06-26 06:39:02+00:00,[],None
236,https://github.com/ftmyrk/FPGA-Nexys7-Verilog.git,2022-06-26 14:12:39+00:00,,0,ftmyrk/FPGA-Nexys7-Verilog,507592294,Verilog,FPGA-Nexys7-Verilog,13,0,2022-06-26 14:16:39+00:00,[],None
237,https://github.com/xxxxxinyu/CO_LAB0-Full-Substractor-.git,2022-06-27 07:25:22+00:00,,0,xxxxxinyu/CO_LAB0-Full-Substractor-,507805316,Verilog,CO_LAB0-Full-Substractor-,0,0,2022-06-27 07:31:07+00:00,[],None
238,https://github.com/ArmandoVVV/RISC_V_Single_Cycle.git,2022-06-23 08:42:49+00:00,,0,ArmandoVVV/RISC_V_Single_Cycle,506562045,Verilog,RISC_V_Single_Cycle,519,0,2022-10-29 09:27:56+00:00,[],None
239,https://github.com/adityan18/Minor.git,2022-06-24 10:48:49+00:00,,0,adityan18/Minor,506974896,Verilog,Minor,9519,0,2022-07-24 09:28:49+00:00,[],None
240,https://github.com/BigNixon/VerilogProcessor.git,2022-06-28 22:05:37+00:00,,0,BigNixon/VerilogProcessor,508468062,Verilog,VerilogProcessor,329,0,2022-08-22 21:31:32+00:00,[],None
241,https://github.com/KINGPIN8825/8-bit-microprocessor.git,2022-06-29 17:42:27+00:00,,0,KINGPIN8825/8-bit-microprocessor,508790483,Verilog,8-bit-microprocessor,9,0,2022-07-07 15:23:13+00:00,[],None
242,https://github.com/kxdxzr/ALU.git,2022-06-29 06:01:13+00:00,,0,kxdxzr/ALU,508565696,Verilog,ALU,589,0,2022-06-29 06:05:27+00:00,"['alu', 'verilog']",None
243,https://github.com/Sachini007/Processor-Design.git,2022-06-30 18:21:01+00:00,,0,Sachini007/Processor-Design,509189453,Verilog,Processor-Design,768,0,2022-07-06 17:35:31+00:00,[],None
244,https://github.com/katariaak579/Door-Lock.git,2022-07-01 04:33:44+00:00,,0,katariaak579/Door-Lock,509320774,Verilog,Door-Lock,6916,0,2022-07-01 04:34:38+00:00,[],None
245,https://github.com/zouming74/just_for_fun.git,2022-06-30 13:59:53+00:00,,0,zouming74/just_for_fun,509102948,Verilog,just_for_fun,89894,0,2023-05-29 07:22:39+00:00,[],None
246,https://github.com/rkvaishnavp/Display-and-VGA-Core.git,2022-07-10 14:00:16+00:00,,0,rkvaishnavp/Display-and-VGA-Core,512449430,Verilog,Display-and-VGA-Core,734,0,2022-07-10 14:01:46+00:00,[],None
247,https://github.com/ateeque-ahmed/RISC-V-Single-Cycle-Processor.git,2022-07-05 13:04:38+00:00,A 32-bit single cycle processor implemented using Verilog that supports R type and Immediate type instructions.,0,ateeque-ahmed/RISC-V-Single-Cycle-Processor,510739451,Verilog,RISC-V-Single-Cycle-Processor,5,0,2022-07-05 13:05:23+00:00,[],None
248,https://github.com/Basten1209/CSED273.git,2022-07-02 09:03:27+00:00,CSED273 lab (2022-Spring),0,Basten1209/CSED273,509707892,Verilog,CSED273,6136,0,2022-08-04 09:04:05+00:00,[],None
249,https://github.com/tejas2605/Pipelined-MIPS-Processor.git,2022-07-03 17:02:51+00:00,,0,tejas2605/Pipelined-MIPS-Processor,510084841,Verilog,Pipelined-MIPS-Processor,2465,0,2022-07-03 17:14:01+00:00,[],None
250,https://github.com/Kholoud-Ebrahim/ALU-8bit.git,2022-07-01 17:09:55+00:00, Using an 8-bit full-adder/subtractor to create an 8-bit ALU.,1,Kholoud-Ebrahim/ALU-8bit,509532485,Verilog,ALU-8bit,624,0,2023-08-25 03:47:22+00:00,[],None
251,https://github.com/BulletForce69/RISC_V_SC-main.git,2022-07-02 01:07:18+00:00,RISCV smn,0,BulletForce69/RISC_V_SC-main,509625844,Verilog,RISC_V_SC-main,9538,0,2023-05-04 22:59:08+00:00,[],None
252,https://github.com/CarlosCraveiro/ProjetoSistemasDigitais_SEL0628.git,2022-07-06 02:10:57+00:00,Repositório para organizar o projeto final da disciplina de Sistemas Digitais - SEL0628,0,CarlosCraveiro/ProjetoSistemasDigitais_SEL0628,510956372,Verilog,ProjetoSistemasDigitais_SEL0628,39,0,2022-07-29 05:17:45+00:00,[],https://api.github.com/licenses/gpl-3.0
253,https://github.com/h20210154/Booth-s-multiplier.git,2022-07-04 09:27:19+00:00,,0,h20210154/Booth-s-multiplier,510293686,Verilog,Booth-s-multiplier,6,0,2022-07-16 09:06:32+00:00,[],None
254,https://github.com/oreomustdoit/Car_alarm_project.git,2022-07-05 07:17:26+00:00,,0,oreomustdoit/Car_alarm_project,510628156,Verilog,Car_alarm_project,3043,0,2022-07-05 07:19:00+00:00,[],None
255,https://github.com/mkkassem/clearxx.git,2022-07-05 10:37:01+00:00,,0,mkkassem/clearxx,510691275,Verilog,clearxx,51887,0,2022-07-05 10:38:11+00:00,[],https://api.github.com/licenses/apache-2.0
256,https://github.com/hadiforoughi/Layout-of-8x4bit-Associative-Memory.git,2022-07-06 14:49:29+00:00,Final project of Digital Electronics course,0,hadiforoughi/Layout-of-8x4bit-Associative-Memory,511178588,Verilog,Layout-of-8x4bit-Associative-Memory,1497,0,2022-07-06 14:53:42+00:00,[],https://api.github.com/licenses/mit
257,https://github.com/dimplesaii/vlsi_coursebased.git,2022-06-22 14:11:54+00:00,,0,dimplesaii/vlsi_coursebased,506275901,Verilog,vlsi_coursebased,4,0,2022-06-22 14:13:49+00:00,[],None
258,https://github.com/melody16483/single-cycle-cpu.git,2022-06-23 04:42:22+00:00,final project of computer architecture in 2022,0,melody16483/single-cycle-cpu,506498723,Verilog,single-cycle-cpu,8,0,2022-06-23 04:43:46+00:00,[],None
259,https://github.com/kacperoooni/SDUP_AXI_FIFO.git,2022-06-28 02:45:26+00:00,,0,kacperoooni/SDUP_AXI_FIFO,508131598,Verilog,SDUP_AXI_FIFO,17780,0,2022-06-28 02:56:09+00:00,[],None
260,https://github.com/XAli-SHX/MIPS-Multi-Cycle.git,2022-06-30 07:12:18+00:00,,0,XAli-SHX/MIPS-Multi-Cycle,508972712,Verilog,MIPS-Multi-Cycle,756,0,2022-06-30 07:15:06+00:00,[],None
261,https://github.com/anch83/RS232.git,2022-07-07 11:35:11+00:00,This is a Universal Asynchronous Receiver Transmitter (UART) for FPGA. ,0,anch83/RS232,511502298,Verilog,RS232,56,0,2022-07-07 12:07:15+00:00,[],https://api.github.com/licenses/gpl-3.0
262,https://github.com/lemonwenx/my_first_CPU_design.git,2022-06-29 02:42:40+00:00,This is my first design,0,lemonwenx/my_first_CPU_design,508522603,Verilog,my_first_CPU_design,13,0,2022-06-29 02:59:03+00:00,[],https://api.github.com/licenses/apache-2.0
263,https://github.com/Yosiky/RISC-V.git,2022-06-23 18:08:06+00:00,,0,Yosiky/RISC-V,506743941,Verilog,RISC-V,2,0,2022-07-01 06:25:49+00:00,[],None
264,https://github.com/kwanit1142/4-way-Traffic-Controller.git,2022-06-25 11:58:35+00:00,"Project in Digital Designs,, under Prof. Nitin Bhatia in Course EEL2020.",0,kwanit1142/4-way-Traffic-Controller,507298761,Verilog,4-way-Traffic-Controller,4,0,2023-05-01 02:47:37+00:00,[],https://api.github.com/licenses/mit
265,https://github.com/VincitoreSi/resource-aware-patch-generation.git,2022-07-07 10:10:02+00:00,A project that tries to solve a problem from ICCAD contest 2017,2,VincitoreSi/resource-aware-patch-generation,511477338,Verilog,resource-aware-patch-generation,11525,0,2022-07-07 10:13:56+00:00,[],None
266,https://github.com/Udaff2/calculator.git,2022-07-07 09:29:44+00:00,,0,Udaff2/calculator,511464628,Verilog,calculator,49,0,2022-07-15 07:27:08+00:00,[],None
267,https://github.com/Wellinne/Projeto-Sistemas-Digitais.git,2022-07-06 22:58:01+00:00,Reproduzimos um microondas,0,Wellinne/Projeto-Sistemas-Digitais,511315478,Verilog,Projeto-Sistemas-Digitais,566,0,2022-07-06 23:02:03+00:00,[],None
268,https://github.com/XingchenLi202/EDA-Bicycle-Design.git,2022-07-09 20:51:37+00:00,EDA Bicycle Design,0,XingchenLi202/EDA-Bicycle-Design,512283326,Verilog,EDA-Bicycle-Design,14738,0,2022-07-09 20:58:59+00:00,[],None
269,https://github.com/leosd3050/Simple-Processor.git,2022-07-09 20:21:30+00:00,,0,leosd3050/Simple-Processor,512278348,Verilog,Simple-Processor,6,0,2022-07-09 20:22:30+00:00,[],None
270,https://github.com/Jaye-Xue/ElevatorControlSystem.git,2022-07-09 04:43:17+00:00,使用BASYS3模拟一个4层楼的电梯控制系统,1,Jaye-Xue/ElevatorControlSystem,512094795,Verilog,ElevatorControlSystem,1469,0,2023-12-06 02:42:53+00:00,[],None
271,https://github.com/Bi11-Git/Vivado.git,2022-06-27 20:57:11+00:00,,0,Bi11-Git/Vivado,508059792,Verilog,Vivado,33,0,2023-02-07 16:47:28+00:00,[],https://api.github.com/licenses/mit
272,https://github.com/erfaniravani/tanhx.git,2022-06-28 03:31:20+00:00,tanhx hardware implementation,0,erfaniravani/tanhx,508141717,Verilog,tanhx,8240,0,2022-06-28 04:05:42+00:00,[],None
273,https://github.com/whrudwns/caravel_walkthrough.git,2022-07-01 01:42:16+00:00,,0,whrudwns/caravel_walkthrough,509285967,Verilog,caravel_walkthrough,51888,0,2022-07-01 01:42:29+00:00,[],https://api.github.com/licenses/apache-2.0
274,https://github.com/harsh-lodha/pipelinedmips.git,2022-07-04 11:52:26+00:00,,0,harsh-lodha/pipelinedmips,510338868,Verilog,pipelinedmips,5,0,2022-07-04 11:55:15+00:00,[],None
275,https://github.com/HishamIITK/UnderTheHoodFiles.git,2022-07-07 11:59:20+00:00,Project Under Programming Club IITK,0,HishamIITK/UnderTheHoodFiles,511509465,Verilog,UnderTheHoodFiles,7,0,2022-07-07 12:00:43+00:00,[],None
276,https://github.com/anfama15/FPGA-Based-Virus-Detection-System.git,2022-07-07 17:16:50+00:00,"In pattern matching, a sequence is scanned bit by bit and once a  required pattern is found, the scan restarts from the next bit. For example, we have 11011101011 in  the data file, the scanning process start from the left, we have 11 at that start (first and second bit)  that is different from the virus pattern (10111), since it’s a mismatch, the scan starts form the second  bit. Upon restarting the scan from second bit, we have found that the virus pattern exists in the next  four bits, so the counter is incremented to one and the scan restarts from sixth bit and this process  continues until the end of file.",0,anfama15/FPGA-Based-Virus-Detection-System,511614493,Verilog,FPGA-Based-Virus-Detection-System,11402,0,2023-03-12 21:46:43+00:00,[],None
277,https://github.com/raghavptdr18/Tic-Tac-Toe.git,2022-07-03 13:04:58+00:00,,0,raghavptdr18/Tic-Tac-Toe,510025419,Verilog,Tic-Tac-Toe,3991,0,2022-07-03 13:05:37+00:00,[],None
278,https://github.com/wzf2000/cod21.git,2022-07-03 14:18:13+00:00,,0,wzf2000/cod21,510043728,Verilog,cod21,120199,0,2022-07-03 14:22:18+00:00,[],None
279,https://github.com/kaivalyaeAnilP/I-Chip-PS1.git,2022-07-07 14:04:10+00:00,,0,kaivalyaeAnilP/I-Chip-PS1,511551293,Verilog,I-Chip-PS1,457,0,2022-07-08 07:47:33+00:00,[],None
280,https://github.com/termias19/final_Horner_algorithm.git,2022-06-29 23:08:50+00:00,,0,termias19/final_Horner_algorithm,508870522,Verilog,final_Horner_algorithm,2,0,2022-06-29 23:12:40+00:00,[],None
281,https://github.com/aferolkay/FPGA-Implementation-QoS.git,2022-07-06 14:06:22+00:00,FPGA Implementation of Simple Quality of Service (QoS) based Queuing displayed through VGA cable to a montior,0,aferolkay/FPGA-Implementation-QoS,511162495,Verilog,FPGA-Implementation-QoS,86678,0,2022-07-06 14:09:35+00:00,[],None
282,https://github.com/xiahongchi/ArchLab-of-SJTU.git,2022-06-22 09:45:40+00:00,ArchLab-of-SJTU Final Score:100,0,xiahongchi/ArchLab-of-SJTU,506186384,Verilog,ArchLab-of-SJTU,10614,0,2022-06-22 09:54:39+00:00,[],https://api.github.com/licenses/apache-2.0
283,https://github.com/carlosmgv02/ECPracFinal.git,2022-06-23 11:11:29+00:00,Práctica final Estructura de Computadors - URV (2021-2022),0,carlosmgv02/ECPracFinal,506607433,Verilog,ECPracFinal,2273,0,2022-09-29 21:43:03+00:00,"['assembly', 'benchmark', 'processor', 'shell', 'verilog']",None
284,https://github.com/LSDnoob/baugh-wooley.git,2022-06-29 05:35:21+00:00,"A simple Baugh-Wooley multiplier design in Verilog. This was synthesized using Intel Quartus, and a report has been attached along too.",1,LSDnoob/baugh-wooley,508559626,Verilog,baugh-wooley,536,0,2022-06-29 05:38:29+00:00,[],None
285,https://github.com/xxxxxinyu/CO_LAB3-Single-Cycle-CPU-Complete-Edition.git,2022-06-27 07:46:18+00:00,,0,xxxxxinyu/CO_LAB3-Single-Cycle-CPU-Complete-Edition,507811680,Verilog,CO_LAB3-Single-Cycle-CPU-Complete-Edition,2702,0,2022-06-27 07:52:13+00:00,[],None
286,https://github.com/priyagole/CS220-Assignments.git,2022-07-01 10:15:38+00:00,,0,priyagole/CS220-Assignments,509409748,Verilog,CS220-Assignments,2789,0,2022-07-01 10:57:39+00:00,[],None
287,https://github.com/ruchi09/32-bit-Pipelined-Processor.git,2022-07-01 15:14:02+00:00,,0,ruchi09/32-bit-Pipelined-Processor,509499614,Verilog,32-bit-Pipelined-Processor,3454,0,2022-07-01 15:22:58+00:00,[],None
288,https://github.com/Rahhul17-IITH/digital_circuits_verilog_projects.git,2022-07-07 04:49:16+00:00,,0,Rahhul17-IITH/digital_circuits_verilog_projects,511386426,Verilog,digital_circuits_verilog_projects,4,0,2022-07-07 04:50:01+00:00,[],None
289,https://github.com/manjithadulana98/FPGA.git,2022-07-07 09:41:48+00:00,,0,manjithadulana98/FPGA,511468514,Verilog,FPGA,343,0,2022-07-07 09:52:53+00:00,[],None
290,https://github.com/BossWangST/SpinalHDL-RISC-V-CPU.git,2022-07-10 08:39:07+00:00,TSoc 2022 RISC-V CPU Design using SpinalHDL,1,BossWangST/SpinalHDL-RISC-V-CPU,512385090,Verilog,SpinalHDL-RISC-V-CPU,35,0,2022-07-10 13:29:03+00:00,[],None
291,https://github.com/Rafae1130/Soft_core-in-verilog.git,2022-07-08 09:27:20+00:00,,0,Rafae1130/Soft_core-in-verilog,511837737,Verilog,Soft_core-in-verilog,3,0,2022-07-08 09:30:46+00:00,[],None
292,https://github.com/sumit11899/Advanced-Encryption-Standard.git,2022-07-08 07:29:23+00:00,,0,sumit11899/Advanced-Encryption-Standard,511804123,Verilog,Advanced-Encryption-Standard,73,0,2022-07-08 07:31:51+00:00,[],None
293,https://github.com/Mohamed5620/washing-machine.git,2022-07-10 13:14:44+00:00,,0,Mohamed5620/washing-machine,512439043,Verilog,washing-machine,12,0,2022-07-10 13:15:48+00:00,[],None
294,https://github.com/Mei-x-l/ysyx-cpu.git,2022-07-10 14:33:54+00:00,,0,Mei-x-l/ysyx-cpu,512457399,Verilog,ysyx-cpu,2812,0,2022-07-10 16:25:36+00:00,[],None
295,https://github.com/xc720/EEE2Rover_627.git,2022-06-27 16:49:31+00:00,,0,xc720/EEE2Rover_627,507990055,Verilog,EEE2Rover_627,90560,0,2022-11-18 03:56:27+00:00,[],None
296,https://github.com/replica455/Watchdog-RTL-to-GDSII-Flow.git,2022-06-27 18:00:44+00:00,Design and RTL to GDSII flow(180nm Technology) implementation of Single Stage Watchdog Timer using Open-Source EDA Tools,0,replica455/Watchdog-RTL-to-GDSII-Flow,508012015,Verilog,Watchdog-RTL-to-GDSII-Flow,118,0,2022-06-27 19:40:40+00:00,[],https://api.github.com/licenses/gpl-3.0
297,https://github.com/seckingezer/Asic_tryout.git,2022-06-28 14:24:20+00:00,,0,seckingezer/Asic_tryout,508331744,Verilog,Asic_tryout,51890,0,2022-06-28 14:59:38+00:00,[],https://api.github.com/licenses/apache-2.0
298,https://github.com/talhaiqbal-10xe/buffer.git,2022-07-04 11:26:31+00:00,This repo contains the address generating logic along with a parametrized buffer.,0,talhaiqbal-10xe/buffer,510330889,Verilog,buffer,135,0,2022-07-04 11:31:26+00:00,[],None
299,https://github.com/apollo-heidal/tang-nano-hdl.git,2022-07-04 21:32:24+00:00,Verilog modules for Sipeed Tang Nano FPGA board ,0,apollo-heidal/tang-nano-hdl,510508388,Verilog,tang-nano-hdl,72,0,2022-07-04 21:57:40+00:00,[],None
300,https://github.com/avcolgate/TCL-maker.git,2022-07-05 11:10:27+00:00,,0,avcolgate/TCL-maker,510701351,Verilog,TCL-maker,231,0,2022-10-13 13:28:34+00:00,[],None
301,https://github.com/abrahamjdn/Risc-V.git,2022-06-29 07:50:29+00:00,Risc v single cycle,0,abrahamjdn/Risc-V,508596864,Verilog,Risc-V,554,0,2022-06-29 07:56:43+00:00,[],None
302,https://github.com/Chengwu0203/ICDC_DT.git,2022-06-29 12:39:42+00:00,,0,Chengwu0203/ICDC_DT,508685864,Verilog,ICDC_DT,809,0,2022-06-29 12:49:45+00:00,[],None
303,https://github.com/antonblaise/CAD-assignment-batch05.git,2022-07-02 07:41:11+00:00,CAD w/ HDL assignment - Batch 5,0,antonblaise/CAD-assignment-batch05,509691520,Verilog,CAD-assignment-batch05,13,0,2022-07-02 09:09:56+00:00,[],https://api.github.com/licenses/mit
304,https://github.com/AntonKrug/verilog_experiments.git,2022-07-02 22:21:51+00:00,,0,AntonKrug/verilog_experiments,509872907,Verilog,verilog_experiments,17,0,2022-07-02 22:24:42+00:00,[],None
305,https://github.com/Athanasioschourlias/Mips-single-cycle.git,2022-07-01 15:13:46+00:00,"This is a simple implementation of the MIPS single cycle processor that is described and taught in the book of ""Computer Organisation and Design"" from Patterson and Hennessy.",0,Athanasioschourlias/Mips-single-cycle,509499516,Verilog,Mips-single-cycle,16,0,2022-07-03 20:04:45+00:00,"['fpga', 'mips-architecture', 'single-cycle-processor']",https://api.github.com/licenses/mit
306,https://github.com/bokukubo/FPGA.git,2022-06-24 11:28:50+00:00,masaru FPGAyaruyo! gg,0,bokukubo/FPGA,506985444,Verilog,FPGA,2,0,2022-06-27 00:27:04+00:00,[],None
307,https://github.com/DaveDuck321/VoyageRISCV.git,2022-06-24 12:33:25+00:00,A RISCier Sail,0,DaveDuck321/VoyageRISCV,507003756,Verilog,VoyageRISCV,63,0,2022-06-27 01:07:27+00:00,[],None
308,https://github.com/ChairImpSec/COMAR.git,2022-06-25 07:46:05+00:00,Composable Gadgets with Reused Fresh Masks,0,ChairImpSec/COMAR,507247883,Verilog,COMAR,339,0,2022-06-25 15:54:45+00:00,[],
309,https://github.com/talhaiqbal-10xe/demosiacing.git,2022-06-23 09:23:02+00:00,,0,talhaiqbal-10xe/demosiacing,506574937,Verilog,demosiacing,16,0,2022-06-23 09:25:48+00:00,[],None
310,https://github.com/AndrianDevFPGA/ALU-code.git,2022-06-23 12:56:41+00:00,,0,AndrianDevFPGA/ALU-code,506640542,Verilog,ALU-code,2,0,2022-06-23 12:57:08+00:00,[],None
311,https://github.com/HARSHIL156/verilog.git,2022-06-23 12:44:25+00:00,,0,HARSHIL156/verilog,506636478,Verilog,verilog,6,0,2022-06-23 12:53:15+00:00,[],None
312,https://github.com/Itsyashraj/Clock-Generator.git,2022-06-24 16:38:17+00:00,This project involves understanding of clock signals,0,Itsyashraj/Clock-Generator,507078971,Verilog,Clock-Generator,1,0,2022-06-24 16:46:13+00:00,[],None
313,https://github.com/luckjack00/test.git,2022-07-10 09:09:10+00:00,test,0,luckjack00/test,512390652,Verilog,test,0,0,2022-12-21 07:14:49+00:00,[],None
314,https://github.com/asd0012/Digital-design.git,2022-07-01 16:05:14+00:00,,0,asd0012/Digital-design,509515151,Verilog,Digital-design,277759,0,2022-07-03 13:08:11+00:00,[],None
315,https://github.com/akshay142002/uart_transmitter_and_reciever.git,2022-07-01 16:27:48+00:00,,0,akshay142002/uart_transmitter_and_reciever,509521572,Verilog,uart_transmitter_and_reciever,8,0,2022-07-01 16:30:33+00:00,[],None
316,https://github.com/choiy4432/Shift_register.git,2022-07-03 18:33:43+00:00,,0,choiy4432/Shift_register,510105517,Verilog,Shift_register,6,0,2022-07-03 18:34:17+00:00,[],None
317,https://github.com/neushaj/Tanh-x-Hardware-Implementation.git,2022-06-27 13:08:21+00:00,Tanh(x) Hardware Design in Verilog and Synthesis in Quartus,0,neushaj/Tanh-x-Hardware-Implementation,507913614,Verilog,Tanh-x-Hardware-Implementation,8596,0,2022-06-27 13:14:10+00:00,[],None
318,https://github.com/chen-yy20/MIPSpipeline.git,2022-07-06 13:26:39+00:00,verilog project coming from hw of THUEE 数字逻辑与处理器,0,chen-yy20/MIPSpipeline,511147938,Verilog,MIPSpipeline,4156,0,2022-07-17 15:48:06+00:00,[],None
319,https://github.com/Fredaumskrt/Arquitetura-de-Computadores-I.git,2022-07-06 15:30:08+00:00,,0,Fredaumskrt/Arquitetura-de-Computadores-I,511193385,Verilog,Arquitetura-de-Computadores-I,679,0,2023-07-18 17:03:17+00:00,[],None
320,https://github.com/dinazak/ALU_verilog.git,2022-06-28 15:17:57+00:00,,0,dinazak/ALU_verilog,508351843,Verilog,ALU_verilog,1,0,2022-06-28 15:30:04+00:00,[],None
321,https://github.com/serpret/i2c_slv_single_byte.git,2022-07-10 19:10:37+00:00,single byte i2c slave,0,serpret/i2c_slv_single_byte,512518165,Verilog,i2c_slv_single_byte,8,0,2022-07-10 19:17:00+00:00,[],None
322,https://github.com/sanjaysattva/Verilog-projects.git,2022-07-01 05:19:21+00:00,,0,sanjaysattva/Verilog-projects,509329356,Verilog,Verilog-projects,12,0,2022-07-01 05:26:10+00:00,[],None
323,https://github.com/joaovclobo/TP2-OC1-CAMINHO_DE_DADOS.git,2022-07-01 18:30:18+00:00,,0,joaovclobo/TP2-OC1-CAMINHO_DE_DADOS,509554209,Verilog,TP2-OC1-CAMINHO_DE_DADOS,419,0,2023-02-16 19:29:56+00:00,[],None
324,https://github.com/Dalei-Jiang/Tower-Defense-game---Guard-radish.git,2022-07-02 05:17:05+00:00,,0,Dalei-Jiang/Tower-Defense-game---Guard-radish,509665368,Verilog,Tower-Defense-game---Guard-radish,13104,0,2022-07-02 05:20:48+00:00,[],None
325,https://github.com/YinChian/Normal-HW4.git,2022-07-02 16:42:53+00:00,,0,YinChian/Normal-HW4,509809194,Verilog,Normal-HW4,2654,0,2022-07-02 16:45:17+00:00,[],None
326,https://github.com/gjaskula99/Verilog-32-bit-multiplier.git,2022-07-01 06:36:47+00:00,,0,gjaskula99/Verilog-32-bit-multiplier,509347080,Verilog,Verilog-32-bit-multiplier,3,0,2022-07-01 06:37:10+00:00,[],None
327,https://github.com/Anjanamb/Downsampling-Processor.git,2022-07-02 09:42:16+00:00,A project related to EN3030 - Circuits and Systems Design,0,Anjanamb/Downsampling-Processor,509715362,Verilog,Downsampling-Processor,1535,0,2022-08-31 17:48:34+00:00,['verilog'],None
328,https://github.com/ysyx-ta/alu.git,2022-07-08 11:34:12+00:00,Some introductions and examples of multipliers and dividers,0,ysyx-ta/alu,511872309,Verilog,alu,38,0,2022-07-08 11:35:46+00:00,[],None
329,https://github.com/parsakv/ARM-Proccesor.git,2022-07-10 09:41:30+00:00,Implementation and simulation of ARM processor using Verilog HDL,0,parsakv/ARM-Proccesor,512396756,Verilog,ARM-Proccesor,838,0,2022-07-10 09:44:48+00:00,[],None
330,https://github.com/Sachin09032k/16-Bit-CPU-Implementation-using-Verilog.git,2022-07-07 06:41:19+00:00,The project shows the design and functioning of a basic CPU using Verilog.,0,Sachin09032k/16-Bit-CPU-Implementation-using-Verilog,511413213,Verilog,16-Bit-CPU-Implementation-using-Verilog,17,0,2022-07-07 06:46:47+00:00,[],None
331,https://github.com/yashgupta26/Dual-Port-RAM.git,2022-07-09 05:48:39+00:00,,0,yashgupta26/Dual-Port-RAM,512104971,Verilog,Dual-Port-RAM,447,0,2022-07-09 05:49:43+00:00,[],https://api.github.com/licenses/mit
332,https://github.com/ajay-763/LC-3-Microarchitecture-Implementation.git,2022-07-09 08:35:03+00:00,,0,ajay-763/LC-3-Microarchitecture-Implementation,512135108,Verilog,LC-3-Microarchitecture-Implementation,5,0,2022-07-09 08:44:15+00:00,[],None
333,https://github.com/jinyoung7165/2022EmbeddedSystem.git,2022-07-08 14:51:28+00:00,,0,jinyoung7165/2022EmbeddedSystem,511930862,Verilog,2022EmbeddedSystem,1,0,2022-07-08 14:56:29+00:00,[],None
334,https://github.com/Ye-Jinhong/AdderProject.git,2022-07-09 03:22:11+00:00,,0,Ye-Jinhong/AdderProject,512082603,Verilog,AdderProject,574,0,2022-07-11 17:34:05+00:00,[],None
335,https://github.com/SaiSatwik2226/Implementation-of-Various-Transmission-Protocols-on-FPGA.git,2022-07-06 03:09:07+00:00,,0,SaiSatwik2226/Implementation-of-Various-Transmission-Protocols-on-FPGA,510969737,Verilog,Implementation-of-Various-Transmission-Protocols-on-FPGA,15,0,2022-07-06 03:10:37+00:00,[],None
336,https://github.com/LukeRJamieson/Fisnar.git,2022-06-22 00:42:07+00:00,,0,LukeRJamieson/Fisnar,506048098,Verilog,Fisnar,106644,0,2022-10-21 11:13:50+00:00,[],None
337,https://github.com/clique2015/stack-embedded-verilog-.git,2022-06-24 11:26:44+00:00,,0,clique2015/stack-embedded-verilog-,506984841,Verilog,stack-embedded-verilog-,34,0,2022-06-24 13:33:21+00:00,[],https://api.github.com/licenses/mit
338,https://github.com/Nandagopal-R/Power-function.git,2022-06-24 03:03:11+00:00,,0,Nandagopal-R/Power-function,506860285,Verilog,Power-function,8,0,2022-06-24 03:05:42+00:00,[],None
339,https://github.com/AndrianDevFPGA/ImageProcessing-.git,2022-06-29 18:35:36+00:00,,0,AndrianDevFPGA/ImageProcessing-,508806471,Verilog,ImageProcessing-,8,0,2022-06-29 18:37:14+00:00,[],None
340,https://github.com/XihangDeng/HDL-Bits-Solutions.git,2022-06-29 22:47:00+00:00,,0,XihangDeng/HDL-Bits-Solutions,508866535,Verilog,HDL-Bits-Solutions,77,0,2022-06-29 22:49:04+00:00,[],None
341,https://github.com/Bill2107/FPGA_DVI_CONTROLLER.git,2022-07-04 09:27:19+00:00,just a simple dvi controller written in verilog for the CMOD-S7 development board,0,Bill2107/FPGA_DVI_CONTROLLER,510293688,Verilog,FPGA_DVI_CONTROLLER,50,0,2022-07-04 13:43:32+00:00,[],None
342,https://github.com/SharathRajM/Difference-between-negation-and-logical-negation-in-verilog.git,2022-07-03 19:43:17+00:00,,0,SharathRajM/Difference-between-negation-and-logical-negation-in-verilog,510119968,Verilog,Difference-between-negation-and-logical-negation-in-verilog,1,0,2022-07-03 19:47:50+00:00,[],None
343,https://github.com/MahmouodMagdi/RTL-to-GDS-Implementaton-of-Low-Power-Configurable-Multi-Clock-Digital-System-.git,2022-07-04 12:26:04+00:00,It is resposable of receiving commands through UART receiver to do different system functions as register file reading/writing or doing some processing using ALU block and send result as well as CRC bits of result using 4 bytes frame through UART transmitter communication protocol.,0,MahmouodMagdi/RTL-to-GDS-Implementaton-of-Low-Power-Configurable-Multi-Clock-Digital-System-,510349877,Verilog,RTL-to-GDS-Implementaton-of-Low-Power-Configurable-Multi-Clock-Digital-System-,2639,0,2022-09-02 20:35:21+00:00,[],None
344,https://github.com/Shehab-Naga/washing-machine-controller.git,2022-07-04 14:52:54+00:00,Verilog HDL implementation and verification of a controller unit of washing machine.,0,Shehab-Naga/washing-machine-controller,510399640,Verilog,washing-machine-controller,1765,0,2022-07-21 05:25:22+00:00,"['digital-circuit-design', 'verilog', 'washing-machine-controller']",None
345,https://github.com/pedrommaiaa/BLED.git,2022-07-04 21:15:49+00:00,Blinking a LED using verilog.,0,pedrommaiaa/BLED,510505027,Verilog,BLED,2,0,2022-10-24 17:33:31+00:00,[],None
346,https://github.com/headlessdevice/esp32-s3-breathectrl.git,2022-07-05 10:47:54+00:00,,0,headlessdevice/esp32-s3-breathectrl,510694500,Verilog,esp32-s3-breathectrl,43736,0,2022-07-05 10:49:52+00:00,[],None
347,https://github.com/mkkassem/clearx.git,2022-07-05 10:29:14+00:00,,0,mkkassem/clearx,510688988,Verilog,clearx,51887,0,2022-07-05 10:31:01+00:00,[],https://api.github.com/licenses/apache-2.0
348,https://github.com/smx-mc/Pacey.git,2022-06-27 22:26:22+00:00,FPGA_F,0,smx-mc/Pacey,508079177,Verilog,Pacey,150372,0,2022-06-27 23:22:22+00:00,[],None
349,https://github.com/thkim2031/caravel_walkthrough.git,2022-06-27 05:59:36+00:00,,0,thkim2031/caravel_walkthrough,507781657,Verilog,caravel_walkthrough,51887,0,2022-06-27 06:08:16+00:00,[],https://api.github.com/licenses/apache-2.0
350,https://github.com/tim108108/fpga.git,2022-06-24 06:15:00+00:00,,0,tim108108/fpga,506898670,Verilog,fpga,37,0,2022-06-24 09:00:52+00:00,[],None
351,https://github.com/yuchengwang1121/IC_Contest_Practice.git,2022-06-28 09:03:28+00:00,,0,yuchengwang1121/IC_Contest_Practice,508227513,Verilog,IC_Contest_Practice,183050,0,2023-09-10 09:59:49+00:00,[],None
352,https://github.com/aman-saini-10/32-bit-Pipelined-Processor.git,2022-07-03 15:38:36+00:00,"Implemented a 32-bit RISC 5-stage Instruction Pipeline in Verilog, that supports basic Arithmetic operations, Compare instructions, Branch instructions, Load & Store (from 128 KB RAM) instructions, Function calls and Return Instruction.",0,aman-saini-10/32-bit-Pipelined-Processor,510064351,Verilog,32-bit-Pipelined-Processor,85,0,2022-07-11 18:24:58+00:00,[],None
353,https://github.com/subramanyakrishna/aes.git,2022-06-27 13:57:46+00:00,,0,subramanyakrishna/aes,507931283,Verilog,aes,1452,0,2022-06-27 14:00:47+00:00,[],None
354,https://github.com/Hetvi21/caravel_hetvi.git,2022-06-22 04:23:13+00:00,,0,Hetvi21/caravel_hetvi,506095763,Verilog,caravel_hetvi,51884,0,2022-06-22 04:45:29+00:00,[],https://api.github.com/licenses/apache-2.0
355,https://github.com/BigNixon/HDMI_SobelFilter_CycloneV.git,2022-06-22 03:14:32+00:00,An implementation of sobel filter with HDMI using ADV7513 chip from the DE10 Nano development Board,0,BigNixon/HDMI_SobelFilter_CycloneV,506081587,Verilog,HDMI_SobelFilter_CycloneV,3210,0,2022-06-22 03:19:50+00:00,[],https://api.github.com/licenses/mit
356,https://github.com/Chunjw/DES.git,2022-06-22 01:15:29+00:00,Symmetric Key Algorithm - DES,0,Chunjw/DES,506054736,Verilog,DES,6,0,2022-06-22 01:22:59+00:00,[],None
357,https://github.com/ViduraErandika/Image-Desampling-FPGA.git,2022-06-29 06:15:02+00:00,,0,ViduraErandika/Image-Desampling-FPGA,508569284,Verilog,Image-Desampling-FPGA,3651,0,2022-10-08 14:19:20+00:00,[],None
358,https://github.com/tanvirarafin/nvdla_hw.git,2022-06-26 00:48:49+00:00,,0,tanvirarafin/nvdla_hw,507446613,Verilog,nvdla_hw,2211,0,2022-06-26 00:50:05+00:00,[],None
359,https://github.com/jaquerinte/space_controller_fpga.git,2022-06-25 18:06:57+00:00,FPGA implementation of the space controller,0,jaquerinte/space_controller_fpga,507383616,Verilog,space_controller_fpga,92,0,2022-06-25 19:55:33+00:00,[],https://api.github.com/licenses/mit
360,https://github.com/briansune/Si5338-and-Si5351-Verilog.git,2022-06-24 12:12:34+00:00,Si5338 and Si5351 Verilog,0,briansune/Si5338-and-Si5351-Verilog,506997635,Verilog,Si5338-and-Si5351-Verilog,13416,0,2022-06-27 11:41:47+00:00,[],https://api.github.com/licenses/mit
361,https://github.com/KevinJudeConcessao/verilog-programs.git,2022-06-27 04:13:58+00:00,,0,KevinJudeConcessao/verilog-programs,507759131,Verilog,verilog-programs,4,0,2022-06-27 04:17:06+00:00,[],None
362,https://github.com/xxxxxinyu/CO_LAB2-Single-Cycle-CPU.git,2022-06-27 07:41:39+00:00,,0,xxxxxinyu/CO_LAB2-Single-Cycle-CPU,507810159,Verilog,CO_LAB2-Single-Cycle-CPU,303,0,2022-06-27 07:43:06+00:00,[],None
363,https://github.com/xxxxxinyu/CO_LAB4-Pipelined-CPU.git,2022-06-27 07:56:19+00:00,,0,xxxxxinyu/CO_LAB4-Pipelined-CPU,507814984,Verilog,CO_LAB4-Pipelined-CPU,169,0,2022-06-27 07:59:37+00:00,[],None
364,https://github.com/zViolett/Soc-SNN.git,2022-07-06 13:38:33+00:00,,0,zViolett/Soc-SNN,511152137,Verilog,Soc-SNN,265,0,2022-07-14 07:44:03+00:00,[],None
365,https://github.com/Increcrazer/Hello_NiosII.git,2022-06-22 15:45:58+00:00,test the possibility of quartus-git combination,0,Increcrazer/Hello_NiosII,506310548,Verilog,Hello_NiosII,1522,0,2022-06-23 05:22:30+00:00,[],None
366,https://github.com/AlexBrionesG/SPWM.git,2022-07-08 15:26:21+00:00,Controlador digital para variadores de frecuencia que genera patrones spwm,0,AlexBrionesG/SPWM,511941531,Verilog,SPWM,16,0,2022-07-08 15:27:42+00:00,[],None
367,https://github.com/Watsonashzs/Openroad.git,2022-07-09 07:54:14+00:00,,0,Watsonashzs/Openroad,512127352,Verilog,Openroad,401499,0,2022-07-09 11:06:41+00:00,[],https://api.github.com/licenses/bsd-3-clause
368,https://github.com/sayam-naqvi/Bfloat-FPU.git,2022-07-08 18:41:31+00:00,,0,sayam-naqvi/Bfloat-FPU,511994532,Verilog,Bfloat-FPU,7764,0,2022-07-08 18:45:03+00:00,[],None
369,https://github.com/Prasoon-Garg/4-Bit-CLA.git,2022-07-06 18:13:44+00:00,,0,Prasoon-Garg/4-Bit-CLA,511246100,Verilog,4-Bit-CLA,2780,0,2022-08-10 10:06:06+00:00,[],None
370,https://github.com/KVREDDY1998/Voting-Machine.git,2022-07-05 11:20:14+00:00,,0,KVREDDY1998/Voting-Machine,510704265,Verilog,Voting-Machine,2,0,2022-07-05 11:21:58+00:00,[],None
371,https://github.com/suhanbrevenkar/UE19CS206-Digital-Design-and-Computer-Organization.git,2022-07-04 13:20:02+00:00,This repo contains lab assignments for UE19CS206 Digital Design and Computer Organization subject.,0,suhanbrevenkar/UE19CS206-Digital-Design-and-Computer-Organization,510367565,Verilog,UE19CS206-Digital-Design-and-Computer-Organization,5077,0,2022-07-04 13:24:27+00:00,[],None
372,https://github.com/ercihankara/verilog-project.git,2022-07-01 15:31:26+00:00,,0,ercihankara/verilog-project,509505102,Verilog,verilog-project,8087,0,2022-07-15 19:24:53+00:00,[],None
373,https://github.com/ateeque-ahmed/RISC-V-Pipelined-processor.git,2022-07-03 07:23:48+00:00,Implementation of 4 Stage Pipelined RISC V Processor using Verilog,0,ateeque-ahmed/RISC-V-Pipelined-processor,509952359,Verilog,RISC-V-Pipelined-processor,6,0,2022-07-05 13:03:07+00:00,[],None
374,https://github.com/Arquitectura-Computacional/RISC-V-Pipeline.git,2022-07-08 04:45:27+00:00,,0,Arquitectura-Computacional/RISC-V-Pipeline,511764737,Verilog,RISC-V-Pipeline,43,0,2022-08-03 23:53:13+00:00,[],None
375,https://github.com/JacksonECO/unifei_eldt15_mips.git,2022-07-09 17:48:48+00:00,CPUs MIPS,0,JacksonECO/unifei_eldt15_mips,512250405,Verilog,unifei_eldt15_mips,345,0,2023-05-05 00:24:24+00:00,[],https://api.github.com/licenses/mit
376,https://github.com/vinayak1106/VGA-main1.git,2022-07-02 16:33:27+00:00,,0,vinayak1106/VGA-main1,509806909,Verilog,VGA-main1,4,0,2022-07-02 16:38:26+00:00,[],None
377,https://github.com/yLYXZG1000/Computer-Architecture.git,2022-07-02 21:42:32+00:00,,0,yLYXZG1000/Computer-Architecture,509867208,Verilog,Computer-Architecture,12,0,2022-07-02 21:44:08+00:00,[],None
378,https://github.com/nabadawy/Chameleon_SoC_with-SST26VF080A-flash-.git,2022-07-03 02:48:23+00:00,,0,nabadawy/Chameleon_SoC_with-SST26VF080A-flash-,509907136,Verilog,Chameleon_SoC_with-SST26VF080A-flash-,2246,0,2022-07-03 03:52:45+00:00,[],None
379,https://github.com/ramtej1/UTH.git,2022-07-04 00:25:59+00:00,,0,ramtej1/UTH,510165449,Verilog,UTH,19,0,2023-10-16 14:17:02+00:00,[],None
380,https://github.com/pradyu152002/My-new-SoC.git,2022-06-30 14:17:45+00:00,Sample SoC build files,1,pradyu152002/My-new-SoC,509109709,Verilog,My-new-SoC,16937,0,2022-06-30 14:35:10+00:00,[],None
381,https://github.com/parthch10jun/5-Stage-Pipelined-RISC-V-processor.git,2022-07-01 14:56:49+00:00,,0,parthch10jun/5-Stage-Pipelined-RISC-V-processor,509494067,Verilog,5-Stage-Pipelined-RISC-V-processor,688,0,2022-07-01 14:58:02+00:00,[],None
382,https://github.com/LBL-InternGroup/m.horner.git,2022-06-30 23:23:50+00:00,,0,LBL-InternGroup/m.horner,509260836,Verilog,m.horner,1,0,2022-06-30 23:24:58+00:00,[],None
383,https://github.com/oscarpobletes/logic-circuits.git,2022-07-03 22:40:19+00:00,"Compilation of logic circuit designs such as adders, multipliers, displays, decoders and more that can be opened and modified in TkGate. A powerful open-source tool for digital circuit simulation.",0,oscarpobletes/logic-circuits,510150598,Verilog,logic-circuits,71,0,2023-07-25 16:55:26+00:00,"['architecture', 'logic-circuit', 'tkgate', 'circuit', 'circuit-simulator']",None
384,https://github.com/mohamedelshafie/Verilog-projects.git,2022-07-06 21:18:45+00:00,,0,mohamedelshafie/Verilog-projects,511294802,Verilog,Verilog-projects,8142,0,2023-01-31 20:02:11+00:00,[],None
385,https://github.com/sos-git/IPs.git,2022-07-09 00:40:37+00:00,Cliosoft's test IPs,0,sos-git/IPs,512059296,Verilog,IPs,232,0,2022-07-09 00:53:40+00:00,[],None
386,https://github.com/GrigoryYar/hdl_lib.git,2022-07-10 15:48:13+00:00,,0,GrigoryYar/hdl_lib,512474767,Verilog,hdl_lib,6,0,2022-07-11 14:57:39+00:00,[],None
387,https://github.com/Devid123349/Sudoku-solver.git,2022-07-07 17:47:38+00:00,,0,Devid123349/Sudoku-solver,511623226,Verilog,Sudoku-solver,4,0,2022-07-07 17:54:16+00:00,[],None
388,https://github.com/noemiabril/AtariST_SoCkit.git,2022-07-09 23:45:16+00:00,Atari ST/STe core for SoCkit board,0,noemiabril/AtariST_SoCkit,512307104,,AtariST_SoCkit,27699,0,2022-08-06 21:17:31+00:00,[],None
389,https://github.com/ollo20/Verilog.git,2022-07-03 04:33:35+00:00,,0,ollo20/Verilog,509922605,Verilog,Verilog,6,0,2022-07-03 04:46:47+00:00,[],None
390,https://github.com/gshimabuko/vector_hft.git,2022-07-02 20:22:00+00:00,,0,gshimabuko/vector_hft,509854279,Verilog,vector_hft,20,0,2022-07-02 21:58:04+00:00,[],None
391,https://github.com/LBL-InternGroup/Horner.v.git,2022-06-30 00:12:47+00:00,,0,LBL-InternGroup/Horner.v,508881353,Verilog,Horner.v,2,0,2022-06-30 00:14:03+00:00,[],None
392,https://github.com/luiscarlos63/Zero_Risc.git,2022-06-29 21:05:56+00:00,Security mechanism in hardware that enforces CFI.,0,luiscarlos63/Zero_Risc,508845842,Verilog,Zero_Risc,299,0,2022-07-01 11:52:05+00:00,"['buffer-overflow', 'cfi', 'hardware', 'verilog']",None
393,https://github.com/Ahmed0100/mnist_dataset_classification_neural_network_ip_soc.git,2022-06-29 08:20:02+00:00,mnist_dataset_classification_neural_network,0,Ahmed0100/mnist_dataset_classification_neural_network_ip_soc,508605954,Verilog,mnist_dataset_classification_neural_network_ip_soc,16125,0,2022-07-02 12:16:48+00:00,[],None
394,https://github.com/ElectroEnthu/4-bit-ALU-in-verilog.git,2022-06-29 06:27:16+00:00,,0,ElectroEnthu/4-bit-ALU-in-verilog,508572511,Verilog,4-bit-ALU-in-verilog,1929,0,2022-06-29 06:41:54+00:00,[],None
395,https://github.com/lxnjupt/VRB.git,2022-06-29 02:02:28+00:00,,0,lxnjupt/VRB,508513652,Verilog,VRB,481,0,2022-06-29 02:09:25+00:00,[],None
396,https://github.com/leehgyu13/systolic_array.git,2022-06-29 09:01:15+00:00,,0,leehgyu13/systolic_array,508618630,Verilog,systolic_array,16,0,2022-06-29 09:07:57+00:00,[],None
397,https://github.com/NikitaVolotovich/VGA_Project.git,2022-06-24 12:19:03+00:00,"For FPGA using Verilog, Cyclone V",0,NikitaVolotovich/VGA_Project,506999529,Verilog,VGA_Project,18262,0,2022-06-24 12:21:28+00:00,[],None
398,https://github.com/thegux/ponteLevadica.git,2022-06-26 02:56:47+00:00,,0,thegux/ponteLevadica,507463563,Verilog,ponteLevadica,3,0,2022-06-26 02:56:54+00:00,[],None
399,https://github.com/zhenghang1/Arch-labs.git,2022-06-22 05:17:58+00:00,,0,zhenghang1/Arch-labs,506106958,Verilog,Arch-labs,9574,0,2022-06-22 05:19:13+00:00,[],None
400,https://github.com/termias19/FMA_horneralgorithm.git,2022-06-24 16:24:35+00:00,,0,termias19/FMA_horneralgorithm,507075167,Verilog,FMA_horneralgorithm,3,0,2022-06-24 16:29:20+00:00,[],None
401,https://github.com/ccccourse/co.git,2022-06-24 00:50:43+00:00,計算機結構 -- 陳鍾誠的課程,0,ccccourse/co,506833879,Verilog,co,8111,0,2022-06-24 02:17:06+00:00,[],None
402,https://github.com/tanay-das/64x8-bit-RAM-using-Verilog.git,2022-06-27 11:55:57+00:00,,0,tanay-das/64x8-bit-RAM-using-Verilog,507889320,Verilog,64x8-bit-RAM-using-Verilog,35,0,2022-06-27 13:13:54+00:00,[],https://api.github.com/licenses/gpl-3.0
403,https://github.com/DanielBarrios2190/caravel_db.git,2022-06-23 21:05:56+00:00,,0,DanielBarrios2190/caravel_db,506791542,Verilog,caravel_db,51887,0,2022-06-23 21:08:44+00:00,[],https://api.github.com/licenses/apache-2.0
404,https://github.com/easonchen0816/Frequency-Analysis-System.git,2022-06-24 06:06:35+00:00,,0,easonchen0816/Frequency-Analysis-System,506896722,Verilog,Frequency-Analysis-System,531,0,2022-06-24 06:07:53+00:00,[],None
405,https://github.com/Nandagopal-R/Nandagopal-R.git,2022-06-24 02:53:56+00:00,Config files for my GitHub profile.,0,Nandagopal-R/Nandagopal-R,506858324,Verilog,Nandagopal-R,4,0,2022-12-11 17:24:48+00:00,"['config', 'github-config']",None
406,https://github.com/DuongBLueFrost/Median_Filter.git,2022-06-23 09:05:40+00:00,Designing Median Filter to filter 430x554 picture with 3x3 kernel ,0,DuongBLueFrost/Median_Filter,506569480,Verilog,Median_Filter,1212,0,2022-06-23 09:09:44+00:00,[],None
407,https://github.com/zinseo964/embeddedsystem.git,2022-06-27 16:20:56+00:00,,0,zinseo964/embeddedsystem,507981039,Verilog,embeddedsystem,2897,0,2022-06-27 16:25:34+00:00,[],None
408,https://github.com/sarina-hemmatpour/varilogAssignmentN1.git,2022-06-26 06:03:06+00:00,,0,sarina-hemmatpour/varilogAssignmentN1,507491271,Verilog,varilogAssignmentN1,487,0,2024-01-27 03:49:23+00:00,[],None
409,https://github.com/yms020615/VerilogHDL.git,2022-07-08 16:23:09+00:00,,0,yms020615/VerilogHDL,511957559,Verilog,VerilogHDL,17,0,2022-07-08 16:23:46+00:00,[],None
410,https://github.com/ViiniciusK9/sistemas_digitais.git,2022-06-22 22:42:37+00:00,,0,ViiniciusK9/sistemas_digitais,506426506,Verilog,sistemas_digitais,17,0,2022-06-22 22:44:07+00:00,[],None
411,https://github.com/Joynan-wind/remote_motor.git,2022-06-23 08:18:16+00:00,Course design of FPGA .,0,Joynan-wind/remote_motor,506554499,Verilog,remote_motor,7,0,2022-06-23 08:18:23+00:00,[],None
412,https://github.com/sarin20/SPILEDCONTROL.git,2022-06-22 13:53:14+00:00,Simple IP to send data to HD107 or similar iwo wire programmable LED chain,0,sarin20/SPILEDCONTROL,506268796,Verilog,SPILEDCONTROL,9,0,2022-06-22 14:04:22+00:00,[],https://api.github.com/licenses/gpl-2.0
413,https://github.com/casval5fn28/NYCU-2022-COmputer-Organization.git,2022-06-22 15:59:52+00:00,,0,casval5fn28/NYCU-2022-COmputer-Organization,506315358,Verilog,NYCU-2022-COmputer-Organization,9605,0,2022-06-22 17:44:21+00:00,[],None
414,https://github.com/alirezanaserinia/ARM.git,2022-06-22 11:05:30+00:00,ARM processor,0,alirezanaserinia/ARM,506210829,Verilog,ARM,17,0,2022-06-22 11:08:21+00:00,[],None
415,https://github.com/methylpentane/GHRD-and-xorshift.git,2022-06-30 08:19:25+00:00,,0,methylpentane/GHRD-and-xorshift,508993291,Verilog,GHRD-and-xorshift,618,0,2022-06-30 08:30:54+00:00,[],None
416,https://github.com/sarina-hemmatpour/verilogAssignmentN2.git,2022-06-26 06:04:57+00:00,,0,sarina-hemmatpour/verilogAssignmentN2,507491530,Verilog,verilogAssignmentN2,944,0,2022-06-26 06:06:38+00:00,[],None
417,https://github.com/a1kayda/mipt-fpga.git,2022-07-02 18:06:26+00:00,D-FlipFlop,0,a1kayda/mipt-fpga,509828181,Verilog,mipt-fpga,35,0,2022-07-02 18:07:44+00:00,[],None
418,https://github.com/kevinpinto98/MIPS_Processor.git,2022-07-02 18:16:48+00:00,,0,kevinpinto98/MIPS_Processor,509830245,Verilog,MIPS_Processor,16,0,2023-09-03 09:40:23+00:00,[],None
419,https://github.com/future141/verilog_cpu.git,2022-07-09 06:16:08+00:00,This is Verilog HDL defined CPU project,0,future141/verilog_cpu,512109449,Verilog,verilog_cpu,43,0,2022-07-10 06:35:06+00:00,[],None
420,https://github.com/LAHARIYADLA/SUDOKU-SOLVER.git,2022-07-10 17:13:35+00:00,,0,LAHARIYADLA/SUDOKU-SOLVER,512493748,Verilog,SUDOKU-SOLVER,8,0,2022-07-10 17:14:35+00:00,[],None
421,https://github.com/leosd3050/Delay_Timer_LS7212.git,2022-07-08 10:50:21+00:00,Behavioral Description of Delay Timer LS7212 in Verilog,0,leosd3050/Delay_Timer_LS7212,511860926,Verilog,Delay_Timer_LS7212,207,0,2022-07-08 17:50:37+00:00,[],None
422,https://github.com/ISS2718/Trabalho_Final_Sistemas_Digitais.git,2022-07-06 16:49:39+00:00,Último trabalho da disciplina de Sistemas Digitais,0,ISS2718/Trabalho_Final_Sistemas_Digitais,511219941,Verilog,Trabalho_Final_Sistemas_Digitais,2928,0,2022-07-08 23:30:52+00:00,[],None
423,https://github.com/William0908/IC_Contest_2019.git,2022-07-06 14:14:11+00:00,,0,William0908/IC_Contest_2019,511165330,Verilog,IC_Contest_2019,1053,0,2022-07-14 09:44:07+00:00,[],None
424,https://github.com/aidawm/Logic_circuit_final_project.git,2022-06-27 15:29:41+00:00,,0,aidawm/Logic_circuit_final_project,507964273,Verilog,Logic_circuit_final_project,24,0,2022-08-19 17:48:53+00:00,[],None
425,https://github.com/annoymous-hpmp/riscv-hpmp.git,2022-07-01 13:38:33+00:00,,3,annoymous-hpmp/riscv-hpmp,509468557,Verilog,riscv-hpmp,74496,0,2022-07-02 03:20:03+00:00,[],https://api.github.com/licenses/bsd-3-clause
426,https://github.com/PokrAndrey/DE2-115_UART_visualisation.git,2022-07-01 11:07:08+00:00,Parameters visualisation on VGA monitor.,0,PokrAndrey/DE2-115_UART_visualisation,509423792,Verilog,DE2-115_UART_visualisation,6269,0,2022-07-01 14:26:20+00:00,[],None
427,https://github.com/tushar4415/multicycle_16-bit_risc_processor.git,2022-07-01 13:12:37+00:00,"Design, Implementation and Testing of a 16-bit Multi-Cycle RISC Processor.",0,tushar4415/multicycle_16-bit_risc_processor,509460480,Verilog,multicycle_16-bit_risc_processor,141,0,2022-07-01 13:13:11+00:00,[],None
428,https://github.com/AytidaLawraga/16-bit-multicycle-RISC-processor.git,2022-07-01 13:22:25+00:00,,0,AytidaLawraga/16-bit-multicycle-RISC-processor,509463489,Verilog,16-bit-multicycle-RISC-processor,118,0,2022-07-01 13:31:52+00:00,[],None
429,https://github.com/cuihao998/note-of-hdlbit.git,2022-07-02 12:31:34+00:00,"In this reponsitory,I'll record my learning progress about verilog. ",0,cuihao998/note-of-hdlbit,509750341,Verilog,note-of-hdlbit,15,0,2022-07-19 16:11:57+00:00,[],None
430,https://github.com/Ruffus26/OLED_Controller.git,2022-07-02 09:04:28+00:00,,0,Ruffus26/OLED_Controller,509708115,Verilog,OLED_Controller,2381,0,2022-07-02 09:05:58+00:00,[],None
431,https://github.com/Arquitectura-Computacional/practica-2.git,2022-06-30 03:35:53+00:00,,0,Arquitectura-Computacional/practica-2,508922017,Verilog,practica-2,266,0,2022-08-03 23:51:56+00:00,[],None
432,https://github.com/XAli-SHX/MIPS-Pipeline.git,2022-06-30 07:16:27+00:00,,0,XAli-SHX/MIPS-Pipeline,508973908,Verilog,MIPS-Pipeline,698,0,2022-12-21 08:30:29+00:00,[],None
433,https://github.com/SaiSatwik2226/FPGA-Password-System.git,2022-07-06 02:59:23+00:00,,0,SaiSatwik2226/FPGA-Password-System,510967526,Verilog,FPGA-Password-System,1608,0,2022-07-06 03:05:49+00:00,[],None
434,https://github.com/Zsbyqx20/CPU_pipeline.git,2022-07-06 04:53:45+00:00,,0,Zsbyqx20/CPU_pipeline,510992918,Verilog,CPU_pipeline,4009,0,2023-03-04 01:27:00+00:00,[],None
435,https://github.com/Shivanagender123/Multiplier-using-structural-model.git,2022-07-06 06:48:19+00:00,"This project contains the logic for Mulplixer16_9_d2 design. It also contains definations of ParialProductGenerator,PartialProductReduction,CarrySaveAdder and CarryPropagateArray",0,Shivanagender123/Multiplier-using-structural-model,511021974,Verilog,Multiplier-using-structural-model,56,0,2022-07-06 07:03:48+00:00,[],None
436,https://github.com/NguyenTanThien/Dog-recognition-using-CNN-on-hardware.git,2022-07-10 13:57:44+00:00,,0,NguyenTanThien/Dog-recognition-using-CNN-on-hardware,512448886,Verilog,Dog-recognition-using-CNN-on-hardware,53957,0,2022-07-10 14:20:22+00:00,[],None
437,https://github.com/Numinda/Verilog.git,2022-06-25 01:11:26+00:00,,0,Numinda/Verilog,507183079,Verilog,Verilog,8,0,2022-06-25 01:17:29+00:00,[],None
438,https://github.com/LongHoGit/AES_128bit.git,2022-06-26 06:44:31+00:00,,0,LongHoGit/AES_128bit,507498206,Verilog,AES_128bit,10,0,2022-06-26 06:48:43+00:00,[],None
439,https://github.com/WANG-TZU-FAN/Digital_IC_Design.git,2022-07-04 07:28:41+00:00,,0,WANG-TZU-FAN/Digital_IC_Design,510255886,Verilog,Digital_IC_Design,11395,0,2022-07-04 07:35:22+00:00,[],None
440,https://github.com/h20210154/CISC-Architecture.git,2022-07-04 07:32:31+00:00,,0,h20210154/CISC-Architecture,510257023,Verilog,CISC-Architecture,5,0,2022-07-04 08:33:38+00:00,[],None
441,https://github.com/MarianKellerHTWG/caravel-test.git,2022-06-29 23:58:06+00:00,,0,MarianKellerHTWG/caravel-test,508878757,Verilog,caravel-test,4340,0,2022-06-29 23:58:18+00:00,[],https://api.github.com/licenses/apache-2.0
442,https://github.com/Jiang0307/COMPUTER_ORGANIZATION.git,2022-06-27 15:39:25+00:00,,0,Jiang0307/COMPUTER_ORGANIZATION,507967421,Verilog,COMPUTER_ORGANIZATION,978,0,2022-06-29 12:03:09+00:00,[],None
443,https://github.com/pepijndevos/caravel_lvds.git,2022-06-27 13:42:59+00:00,,0,pepijndevos/caravel_lvds,507925900,Verilog,caravel_lvds,96,0,2022-06-27 13:43:05+00:00,[],https://api.github.com/licenses/apache-2.0
444,https://github.com/krishbin/coa-lab.git,2022-06-27 17:29:19+00:00,,0,krishbin/coa-lab,508002506,Verilog,coa-lab,3,0,2022-06-27 17:33:56+00:00,[],None
445,https://github.com/Dhruv-Kumar-1/Verilog-Sudoku-Solver-Project.git,2022-07-05 22:31:31+00:00,Contains V File and Constraint File used in the project,0,Dhruv-Kumar-1/Verilog-Sudoku-Solver-Project,510912798,Verilog,Verilog-Sudoku-Solver-Project,19,0,2022-07-05 22:33:25+00:00,[],None
446,https://github.com/phish432/Y86-64-Processor.git,2022-07-06 06:53:48+00:00,Intro to Processor Architecture Course Project implementing a pipelined Y86-64 processor.,0,phish432/Y86-64-Processor,511023506,Verilog,Y86-64-Processor,855,0,2022-07-06 07:12:50+00:00,[],None
447,https://github.com/mziyakara/Four-Bit-Adder.git,2022-07-04 16:11:18+00:00,,0,mziyakara/Four-Bit-Adder,510425205,Verilog,Four-Bit-Adder,0,0,2023-01-02 23:49:56+00:00,[],None
448,https://github.com/Cyberkona/Ultrasonic-Ranging-For-FPGA.git,2022-07-03 11:26:53+00:00,Course Design,0,Cyberkona/Ultrasonic-Ranging-For-FPGA,510003459,Verilog,Ultrasonic-Ranging-For-FPGA,12,0,2022-07-03 11:29:06+00:00,[],None
449,https://github.com/attar8/Mux.git,2022-07-08 13:17:49+00:00,multiplexer,0,attar8/Mux,511901899,Verilog,Mux,1,0,2022-07-08 13:24:58+00:00,[],None
450,https://github.com/AdityaDwivediAtGit/Verilog-HDL-modules.git,2022-07-07 18:49:17+00:00,This repository contains the Designs and TestBench of various circuits based upon Verilog HDL.,0,AdityaDwivediAtGit/Verilog-HDL-modules,511640269,Verilog,Verilog-HDL-modules,9,0,2022-07-07 19:07:59+00:00,[],None
451,https://github.com/PRASANNA-416/Vidyut-Project-2022-23.git,2022-06-30 12:37:42+00:00,,0,PRASANNA-416/Vidyut-Project-2022-23,509074112,Verilog,Vidyut-Project-2022-23,4620,0,2023-02-26 16:16:12+00:00,[],None
452,https://github.com/BaohuiXie/8Bit-RISCV.git,2022-06-29 09:46:27+00:00,,0,BaohuiXie/8Bit-RISCV,508632246,Verilog,8Bit-RISCV,10601,0,2022-10-29 06:08:49+00:00,[],None
453,https://github.com/ragaey722/Hardware-Design.git,2022-06-28 20:54:22+00:00,,0,ragaey722/Hardware-Design,508451658,Verilog,Hardware-Design,231,0,2022-07-13 16:08:46+00:00,[],None
454,https://github.com/thegux/drawbridge.git,2022-06-28 22:24:44+00:00,,0,thegux/drawbridge,508471882,Verilog,drawbridge,174,0,2022-06-28 22:24:51+00:00,[],None
455,https://github.com/DineshVenkatG/16-Bit-Floating-Point-Comparator.git,2022-06-23 18:52:31+00:00,,0,DineshVenkatG/16-Bit-Floating-Point-Comparator,506756640,Verilog,16-Bit-Floating-Point-Comparator,23,0,2022-06-23 18:55:18+00:00,[],None
456,https://github.com/pranav-nb/MinorProject.git,2022-07-01 14:25:33+00:00,This repository contains the code for the miniproject which is done during my 6th semester as a part of course work,0,pranav-nb/MinorProject,509483842,Verilog,MinorProject,6,0,2022-07-01 14:27:28+00:00,[],https://api.github.com/licenses/mit
457,https://github.com/XAli-SHX/MIPS-Single-Cycle.git,2022-06-30 07:01:28+00:00,,0,XAli-SHX/MIPS-Single-Cycle,508969443,Verilog,MIPS-Single-Cycle,807,0,2022-06-30 07:08:15+00:00,[],None
458,https://github.com/LearnxSolutionsOrganization/ARM-Assembly-Projects.git,2022-06-28 18:04:04+00:00,,0,LearnxSolutionsOrganization/ARM-Assembly-Projects,508405332,Verilog,ARM-Assembly-Projects,60,0,2022-06-28 18:33:45+00:00,[],None
459,https://github.com/Ahmed0100/auto_neural_network_generation_python.git,2022-07-02 16:52:39+00:00,"Automatic generation of neural network RTL Verilog files, weights & biases memory files, and wrapping everything in Xilinx Vivado project using Python.",1,Ahmed0100/auto_neural_network_generation_python,509811562,Verilog,auto_neural_network_generation_python,19,0,2022-07-10 09:39:24+00:00,[],None
460,https://github.com/2017250297-choi/2022.spring.COSE221-02team20.git,2022-06-22 07:42:54+00:00,this is repo for team project.,0,2017250297-choi/2022.spring.COSE221-02team20,506147099,Verilog,2022.spring.COSE221-02team20,13,0,2022-06-22 10:14:07+00:00,[],None
461,https://github.com/AndrianDevFPGA/CounterRdAndWr.git,2022-06-23 12:36:32+00:00,,0,AndrianDevFPGA/CounterRdAndWr,506633971,Verilog,CounterRdAndWr,0,0,2022-06-23 12:37:50+00:00,[],None
462,https://github.com/TheKingOfForest/3050ASG4.git,2022-06-23 12:09:29+00:00,ASDG4CODE,0,TheKingOfForest/3050ASG4,506624840,Verilog,3050ASG4,292,0,2022-06-23 12:24:21+00:00,[],None
463,https://github.com/LinJ0/2022ES_Digital_IC_Design.git,2022-06-23 08:11:54+00:00,,0,LinJ0/2022ES_Digital_IC_Design,506552575,Verilog,2022ES_Digital_IC_Design,1373,0,2022-06-23 08:52:31+00:00,[],None
464,https://github.com/JumpBOOM/DP.git,2022-06-22 21:05:43+00:00,,0,JumpBOOM/DP,506405848,Verilog,DP,2,0,2022-06-22 22:27:10+00:00,[],None
465,https://github.com/AndrianDevFPGA/baudeRateGenerator.git,2022-06-23 19:28:17+00:00,This code is used to generate Baude rate in verilog ,0,AndrianDevFPGA/baudeRateGenerator,506766434,Verilog,baudeRateGenerator,6,0,2022-06-23 19:30:30+00:00,[],None
466,https://github.com/easonchen0816/SHA-256-Chip.git,2022-06-24 06:14:52+00:00,,0,easonchen0816/SHA-256-Chip,506898638,Verilog,SHA-256-Chip,15919,0,2022-06-24 06:17:43+00:00,[],None
467,https://github.com/xxxxxinyu/CO_LAB1-32-bit-ALU.git,2022-06-27 07:34:46+00:00,,0,xxxxxinyu/CO_LAB1-32-bit-ALU,507808041,Verilog,CO_LAB1-32-bit-ALU,370,0,2022-06-27 07:37:04+00:00,[],None
468,https://github.com/TimeSea05/custom-cpu.git,2022-06-24 16:12:36+00:00,,0,TimeSea05/custom-cpu,507071891,Verilog,custom-cpu,19,0,2023-06-08 14:22:15+00:00,[],None
469,https://github.com/xiaczzzz/VTB.git,2022-06-26 08:25:42+00:00,,0,xiaczzzz/VTB,507517814,Verilog,VTB,20,0,2022-06-26 08:26:24+00:00,[],None
470,https://github.com/Kanishk-K-U/AND.git,2022-06-29 05:55:47+00:00,,0,Kanishk-K-U/AND,508564357,Verilog,AND,3111,0,2022-06-29 06:22:43+00:00,[],None
471,https://github.com/rohx17/AHB2APB.git,2022-06-29 06:10:52+00:00,,0,rohx17/AHB2APB,508568211,Verilog,AHB2APB,3,0,2022-06-29 06:11:30+00:00,[],None
472,https://github.com/h20210160/Verilog.git,2022-06-29 11:45:23+00:00,,0,h20210160/Verilog,508668450,Verilog,Verilog,6,0,2022-06-29 11:51:53+00:00,[],None
473,https://github.com/mohamadhoseinmarvi/verilog-4-Way-Traffic-Lights-System-On-FPGA.git,2022-06-28 06:55:49+00:00,This project aims to make a 4-Way traffic light system meant for a 4-Way intersection. The project was implemented in Verilog for Nexys-2 FPGA Dev Kit.,0,mohamadhoseinmarvi/verilog-4-Way-Traffic-Lights-System-On-FPGA,508189046,Verilog,verilog-4-Way-Traffic-Lights-System-On-FPGA,1393,0,2022-06-28 06:58:09+00:00,[],None
474,https://github.com/Nitcloud/adi-hdl.git,2022-06-28 06:58:25+00:00,,0,Nitcloud/adi-hdl,508189828,Verilog,adi-hdl,1272,0,2022-06-28 06:58:41+00:00,[],
475,https://github.com/senihberkay/CS303-Term-Project-Egg-Timer-Verilog-in-XILINX.git,2022-06-27 11:22:51+00:00,Egg timer with Verilog,0,senihberkay/CS303-Term-Project-Egg-Timer-Verilog-in-XILINX,507879156,Verilog,CS303-Term-Project-Egg-Timer-Verilog-in-XILINX,7,0,2022-09-21 19:48:26+00:00,"['egg-timer', 'logic', 'verilog', 'digital']",None
476,https://github.com/Dareten/Verilog-invaders.git,2022-06-27 11:33:05+00:00,"Процессор, написанный для реализации игры с простейшими командами на языке Verilog",0,Dareten/Verilog-invaders,507882281,Verilog,Verilog-invaders,4,0,2022-06-27 11:41:13+00:00,[],None
477,https://github.com/xiaoxiaoCkw/Principles-of-Computer-Organization.git,2022-07-06 03:50:23+00:00,,0,xiaoxiaoCkw/Principles-of-Computer-Organization,510979229,Verilog,Principles-of-Computer-Organization,10,0,2022-07-07 14:46:33+00:00,[],None
478,https://github.com/erfaniravani/ClockGeneration.git,2022-07-06 06:14:57+00:00,,0,erfaniravani/ClockGeneration,511012502,Verilog,ClockGeneration,1722,0,2022-07-06 06:18:46+00:00,[],None
479,https://github.com/mateobode/6-bit-ADDER.git,2022-07-01 21:07:36+00:00,,0,mateobode/6-bit-ADDER,509589044,Verilog,6-bit-ADDER,1,0,2022-07-01 21:11:39+00:00,[],None
480,https://github.com/olivamadrigal/FPGA_Tutorial.git,2022-06-23 23:32:08+00:00,"FPGA Functional Verification, Implementation, & Hardware Validation ",0,olivamadrigal/FPGA_Tutorial,506820191,Verilog,FPGA_Tutorial,2444,0,2022-06-24 02:41:10+00:00,[],https://api.github.com/licenses/mit
481,https://github.com/kalptechs/swaroopiot.git,2022-06-22 17:19:30+00:00,Efabless caravel based IoT ASIC,0,kalptechs/swaroopiot,506341163,Verilog,swaroopiot,49619,0,2022-06-22 18:06:31+00:00,[],https://api.github.com/licenses/apache-2.0
482,https://github.com/vlade1998/Audio-Codec.git,2022-07-10 22:54:02+00:00,,0,vlade1998/Audio-Codec,512556526,Verilog,Audio-Codec,386,0,2023-02-03 12:34:02+00:00,[],None
483,https://github.com/xin-20010304/FPGA-ultrasonic-ranging.git,2022-06-30 08:56:22+00:00,,0,xin-20010304/FPGA-ultrasonic-ranging,509005119,Verilog,FPGA-ultrasonic-ranging,15518,0,2022-06-30 09:02:41+00:00,[],None
484,https://github.com/MST2002/UART.git,2022-07-05 09:25:52+00:00,,0,MST2002/UART,510668771,Verilog,UART,1423,0,2022-07-05 09:27:49+00:00,[],None
485,https://github.com/nicyyyy/FAST_Feature_Detect.git,2022-07-10 08:03:09+00:00,,0,nicyyyy/FAST_Feature_Detect,512378521,Verilog,FAST_Feature_Detect,831,0,2022-07-10 08:08:05+00:00,[],None
486,https://github.com/jacksonalanhenry/fpga.git,2022-06-30 11:31:37+00:00,The Goal is to create an Audio or signal visualizer on a CRT TV with an FPGA,0,jacksonalanhenry/fpga,509053272,Verilog,fpga,3,0,2022-06-30 13:07:38+00:00,[],None
487,https://github.com/carlosvvv80/FPGA-Alarm-Clock.git,2022-07-06 23:25:30+00:00,Design and implementation of a configurable alarm clock that will display in military time and play music through an external speaker.,0,carlosvvv80/FPGA-Alarm-Clock,511320775,Verilog,FPGA-Alarm-Clock,27,0,2022-09-12 17:36:37+00:00,[],None
488,https://github.com/attar8/comparator.git,2022-07-08 14:46:57+00:00,,0,attar8/comparator,511929480,Verilog,comparator,1,0,2022-07-08 14:47:26+00:00,[],None
489,https://github.com/Jim-CTChen/FFT-Accelerated-Sequence-Alignment.git,2022-06-29 09:31:23+00:00,,0,Jim-CTChen/FFT-Accelerated-Sequence-Alignment,508627701,Verilog,FFT-Accelerated-Sequence-Alignment,779,0,2023-01-03 12:59:48+00:00,[],None
490,https://github.com/DuongBLueFrost/Viterbi_Algorithm.git,2022-06-23 08:33:03+00:00,Implementation of Viterbi Algorithm_Part of Speech Tagging,0,DuongBLueFrost/Viterbi_Algorithm,506559022,Verilog,Viterbi_Algorithm,317,0,2022-06-23 08:58:08+00:00,[],None
491,https://github.com/Arquitectura-Computacional/RISC-V-Single-Cycle.git,2022-06-23 05:42:24+00:00,,0,Arquitectura-Computacional/RISC-V-Single-Cycle,506511257,Verilog,RISC-V-Single-Cycle,66,0,2022-08-03 23:52:51+00:00,[],None
492,https://github.com/andrewb1999/pynq-ex.git,2022-06-23 16:56:49+00:00,,0,andrewb1999/pynq-ex,506722433,Verilog,pynq-ex,26,0,2022-06-23 16:58:01+00:00,[],None
493,https://github.com/tmahlburg/mriscv.git,2022-07-10 20:53:46+00:00,"simple, modular rv32i implementation (WIP)",0,tmahlburg/mriscv,512537476,Verilog,mriscv,58,0,2022-09-02 15:17:49+00:00,"['risc-v', 'riscv', 'riscv32', 'rv32i', 'verilog', 'verilog-hdl']",None
494,https://github.com/theoldtree/CPU_ARM.git,2022-06-27 14:18:31+00:00,Verilog Code for CPU structure,0,theoldtree/CPU_ARM,507938739,Verilog,CPU_ARM,23,0,2022-06-27 14:20:23+00:00,[],None
495,https://github.com/sauunivlsi/iitgvlsi.git,2022-06-28 15:48:19+00:00,VLSI Project for IITG,0,sauunivlsi/iitgvlsi,508362214,Verilog,iitgvlsi,49621,0,2022-06-28 16:20:25+00:00,[],https://api.github.com/licenses/apache-2.0
496,https://github.com/Celve/verilog-practice.git,2022-06-29 03:47:38+00:00,,0,Celve/verilog-practice,508536439,Verilog,verilog-practice,199,0,2022-06-29 03:48:36+00:00,[],None
497,https://github.com/MihaiStefanoaia/amd-summer-practice.git,2022-07-04 17:22:08+00:00,,0,MihaiStefanoaia/amd-summer-practice,510445994,Verilog,amd-summer-practice,1737,0,2022-07-21 20:24:47+00:00,[],None
498,https://github.com/plutonh/fpga_labs_sp22.git,2022-07-08 08:06:21+00:00,,0,plutonh/fpga_labs_sp22,511814478,Verilog,fpga_labs_sp22,3933,0,2022-07-08 08:07:49+00:00,[],None
499,https://github.com/SaiSatwik2226/32-bit-Single-Cycle-processor.git,2022-07-06 03:11:18+00:00,,0,SaiSatwik2226/32-bit-Single-Cycle-processor,510970327,Verilog,32-bit-Single-Cycle-processor,903,0,2022-07-06 03:14:49+00:00,[],None
500,https://github.com/hackerMonica/cpu_model.git,2022-07-05 12:05:35+00:00,,0,hackerMonica/cpu_model,510718886,Verilog,cpu_model,501,0,2022-07-05 12:22:19+00:00,[],https://api.github.com/licenses/mit
501,https://github.com/wlgh1593/DRAM_cache.git,2022-06-29 11:50:02+00:00,,0,wlgh1593/DRAM_cache,508669893,Verilog,DRAM_cache,30,0,2022-06-29 11:54:41+00:00,[],None
502,https://github.com/YejialiangTHU/HDLbits.git,2022-07-07 03:11:37+00:00,code for  HDLbits solution,0,YejialiangTHU/HDLbits,511366147,Verilog,HDLbits,56,0,2022-07-09 01:00:32+00:00,[],None
503,https://github.com/ashwin417/Verilog.git,2022-07-06 08:31:51+00:00,,2,ashwin417/Verilog,511054096,Verilog,Verilog,1262,0,2022-07-06 08:32:58+00:00,[],None
504,https://github.com/lls-trans/BJ.git,2022-07-09 08:03:06+00:00,,0,lls-trans/BJ,512129028,Verilog,BJ,2,0,2022-07-09 08:03:13+00:00,[],None
505,https://github.com/anfama15/FPGA-based-Reconfigurable-High-data-rate-modulator-and-demodulator-.git,2022-07-09 15:05:39+00:00,"Developed a reconfigurable FPGA-based transceiver architecture capable of performing multiple modulations over the same hardware. Designed mapper and demapper algorithms to map digital bits according to the selected modulation constellation and retrieve them back at the receiving end, respectively. Supported various modulation schemes",0,anfama15/FPGA-based-Reconfigurable-High-data-rate-modulator-and-demodulator-,512214712,Verilog,FPGA-based-Reconfigurable-High-data-rate-modulator-and-demodulator-,10,0,2023-03-13 09:33:26+00:00,[],None
506,https://github.com/bhanuprakash1111/simpleprocessor.git,2022-07-07 05:12:15+00:00,,0,bhanuprakash1111/simpleprocessor,511391196,Verilog,simpleprocessor,9,0,2022-07-07 05:14:20+00:00,[],None
507,https://github.com/AlexBrionesG/bin2BCD.git,2022-07-07 15:59:53+00:00,,0,AlexBrionesG/bin2BCD,511591246,Verilog,bin2BCD,1,0,2022-07-08 14:12:11+00:00,[],None
508,https://github.com/saiputravu/CPUDesign.git,2022-06-30 18:16:39+00:00,Simple CPU Designs in Verilog,0,saiputravu/CPUDesign,509188108,Verilog,CPUDesign,6,0,2022-06-30 19:31:46+00:00,[],None
509,https://github.com/RakeshVerma1996/Verilog-Projects.git,2022-06-30 17:01:03+00:00,,0,RakeshVerma1996/Verilog-Projects,509164694,Verilog,Verilog-Projects,25,0,2022-06-30 17:11:21+00:00,[],None
510,https://github.com/HieronZhang/mandelbrot.git,2022-06-28 01:50:19+00:00,,0,HieronZhang/mandelbrot,508119285,Verilog,mandelbrot,14,0,2022-06-28 01:50:33+00:00,[],None
511,https://github.com/AtuL-KumaR-00/RISC-V-Processor.git,2022-07-01 16:20:46+00:00,Implementation of RISC-V processor using Verilog in Xilinx Vivado,0,AtuL-KumaR-00/RISC-V-Processor,509519592,Verilog,RISC-V-Processor,87,0,2022-07-08 16:11:35+00:00,[],None
512,https://github.com/Chunjw/AES.git,2022-06-22 01:28:00+00:00,Symmetric Key Algorithm,0,Chunjw/AES,506057443,Verilog,AES,8,0,2022-06-22 01:31:11+00:00,[],None
513,https://github.com/meowAJin/risc-v-CPU.git,2022-06-26 12:35:28+00:00,,0,meowAJin/risc-v-CPU,507569862,Verilog,risc-v-CPU,1316,0,2022-06-26 12:55:19+00:00,[],None
514,https://github.com/Riddhiman-M/Hardware-Modelling.git,2022-06-26 07:47:37+00:00,Modelling a password based door lock system using Verilog,0,Riddhiman-M/Hardware-Modelling,507510316,Verilog,Hardware-Modelling,890,0,2022-09-11 17:33:59+00:00,[],None
515,https://github.com/bojieli/dlx-cpu.git,2022-06-26 13:19:47+00:00,,0,bojieli/dlx-cpu,507579855,Verilog,dlx-cpu,4,0,2022-06-26 13:20:12+00:00,[],None
516,https://github.com/T1anyu-zhao/flash.git,2022-06-26 20:33:59+00:00,,0,T1anyu-zhao/flash,507678609,Verilog,flash,94429,0,2022-06-26 20:37:45+00:00,[],None
517,https://github.com/AishMahadeo/FPGA_ADDERS.git,2022-07-04 19:34:08+00:00,"This is my Third year, 6th semester project. In this we had Implemented and Compared various types of 16 bit  adders on FPGA board.",0,AishMahadeo/FPGA_ADDERS,510482100,Verilog,FPGA_ADDERS,6915,0,2022-07-04 19:37:31+00:00,[],None
518,https://github.com/Rohit-Kumar-iitm/16-bit-ALU-implementation-verilog.git,2022-07-05 16:47:10+00:00,,0,Rohit-Kumar-iitm/16-bit-ALU-implementation-verilog,510820094,Verilog,16-bit-ALU-implementation-verilog,4,0,2022-07-05 16:47:40+00:00,[],None
519,https://github.com/rejoie/CPU.git,2022-06-24 07:03:45+00:00,计算机组成课程项目,0,rejoie/CPU,506911755,Verilog,CPU,5664,0,2022-06-24 07:27:54+00:00,[],None
520,https://github.com/rumman153/VLSI.git,2022-06-25 15:18:26+00:00,,0,rumman153/VLSI,507345010,Verilog,VLSI,4183,0,2022-06-25 15:22:08+00:00,[],None
521,https://github.com/Mateus-Henr/Moore-Machine.git,2022-07-02 13:15:33+00:00,This project refers to the second practical work of the introduction to logic systems subject.,0,Mateus-Henr/Moore-Machine,509760008,Verilog,Moore-Machine,4,0,2022-07-02 13:21:20+00:00,[],None
522,https://github.com/ChrisShakkour/UART16550-Playground.git,2022-07-05 17:49:33+00:00,UART16550 verif and Development playground,0,ChrisShakkour/UART16550-Playground,510839896,Verilog,UART16550-Playground,1960,0,2022-07-12 18:52:14+00:00,[],None
523,https://github.com/pep3175/Pep6502.git,2022-07-06 17:31:14+00:00,My own implementation of BE6502 computer.,0,pep3175/Pep6502,511232938,Verilog,Pep6502,237,0,2022-07-06 17:48:51+00:00,[],None
524,https://github.com/xiaoxiaoCkw/riscv-CPU.git,2022-07-06 13:44:33+00:00,,0,xiaoxiaoCkw/riscv-CPU,511154312,Verilog,riscv-CPU,15,0,2022-09-21 10:45:07+00:00,[],None
525,https://github.com/ysjaee/2022_summer.git,2022-07-07 06:21:54+00:00,,0,ysjaee/2022_summer,511407947,Verilog,2022_summer,603,0,2022-08-29 01:29:02+00:00,[],None
526,https://github.com/mjagi/PONG.git,2022-07-08 12:51:17+00:00,PONG++ for UEC2,0,mjagi/PONG,511894078,Verilog,PONG,133,0,2022-07-08 13:57:03+00:00,[],None
527,https://github.com/kp620/Mars_Rover_Team14.git,2022-06-24 01:21:51+00:00,Mars_Rover_Team14,1,kp620/Mars_Rover_Team14,506839791,Verilog,Mars_Rover_Team14,1374,0,2022-06-24 09:18:25+00:00,[],None
528,https://github.com/Diego10Rocha/PBL-4.git,2022-06-27 17:58:54+00:00,,0,Diego10Rocha/PBL-4,508011483,Verilog,PBL-4,693,0,2022-06-27 18:05:43+00:00,[],None
529,https://github.com/AndrianDevFPGA/Schedule.git,2022-06-28 08:44:19+00:00,,0,AndrianDevFPGA/Schedule,508221529,Verilog,Schedule,1,0,2022-06-28 08:49:46+00:00,[],None
530,https://github.com/xin-20010304/Vending_machine.git,2022-06-28 07:46:54+00:00,,0,xin-20010304/Vending_machine,508204149,Verilog,Vending_machine,4444,0,2022-06-28 07:49:07+00:00,[],None
531,https://github.com/termias19/clked_add-and-Mul.git,2022-06-29 00:18:08+00:00,,0,termias19/clked_add-and-Mul,508492797,Verilog,clked_add-and-Mul,1,0,2022-06-29 00:19:18+00:00,[],None
532,https://github.com/puneeth714/verilog.git,2022-07-09 16:14:48+00:00,,0,puneeth714/verilog,512230343,Verilog,verilog,7743,0,2022-07-16 06:04:13+00:00,[],None
533,https://github.com/ituitis20-taskin19/computer-organization-project1.git,2022-07-04 07:42:13+00:00,latex pdf and verilog codes,0,ituitis20-taskin19/computer-organization-project1,510259884,Verilog,computer-organization-project1,2780,0,2022-07-04 07:44:52+00:00,[],None
534,https://github.com/ritishu/RISC-Architecture.git,2022-07-04 12:03:38+00:00,,0,ritishu/RISC-Architecture,510342610,Verilog,RISC-Architecture,1156,0,2022-07-04 12:08:39+00:00,[],None
535,https://github.com/wilsonngja/EE2026_Verilog_Project.git,2022-07-04 12:53:58+00:00,,0,wilsonngja/EE2026_Verilog_Project,510359137,Verilog,EE2026_Verilog_Project,5336,0,2022-07-04 12:55:34+00:00,[],None
536,https://github.com/tendo14/verilog-projects.git,2022-07-02 14:56:00+00:00,Projects made in Verilog for learning,0,tendo14/verilog-projects,509783883,Verilog,verilog-projects,33,0,2022-07-02 14:59:16+00:00,[],https://api.github.com/licenses/mit
537,https://github.com/ChoiKangwoo/verilog.git,2022-06-22 15:05:06+00:00,verilog exercise book,0,ChoiKangwoo/verilog,506295890,Verilog,verilog,6,0,2023-05-10 14:26:31+00:00,[],None
538,https://github.com/pandalandala/HIT-CS31105E-Project.git,2022-06-23 05:33:36+00:00,Car Lights Controller - Project of HIT Digital Logic Design,0,pandalandala/HIT-CS31105E-Project,506509351,Verilog,HIT-CS31105E-Project,1360,0,2022-06-25 02:48:56+00:00,[],None
539,https://github.com/Pridudecool1211/MIPS-Project.git,2022-06-27 05:14:42+00:00,,0,Pridudecool1211/MIPS-Project,507771339,,MIPS-Project,470,0,2022-10-18 11:48:21+00:00,[],None
540,https://github.com/SilentEllise/SoC-VGGrep.git,2022-06-25 09:04:11+00:00,,0,SilentEllise/SoC-VGGrep,507263278,Verilog,SoC-VGGrep,8810,0,2022-06-27 07:00:11+00:00,[],None
541,https://github.com/mathehertogh/march.git,2022-06-27 15:42:28+00:00,,0,mathehertogh/march,507968444,Verilog,march,22,0,2022-06-27 18:22:29+00:00,[],https://api.github.com/licenses/gpl-3.0
542,https://github.com/mtseng15/test_analog_user_project.git,2022-07-07 15:11:06+00:00,,0,mtseng15/test_analog_user_project,511575019,Verilog,test_analog_user_project,54,0,2022-07-07 15:11:12+00:00,[],https://api.github.com/licenses/apache-2.0
543,https://github.com/KukoshitoKora/cpu_design_risc-v_whu.git,2022-07-08 13:19:41+00:00,个人学习尝试使用Verilog编写RISC-V CPU,0,KukoshitoKora/cpu_design_risc-v_whu,511902453,Verilog,cpu_design_risc-v_whu,23,0,2022-07-08 15:31:23+00:00,[],https://api.github.com/licenses/apache-2.0
544,https://github.com/gabriel-vitor/CircuitosDigitais_P4.git,2022-07-08 22:49:12+00:00,,0,gabriel-vitor/CircuitosDigitais_P4,512044131,Verilog,CircuitosDigitais_P4,1201,0,2022-07-08 22:50:36+00:00,[],None
545,https://github.com/ch4nu/HWAcc.git,2022-07-09 17:55:14+00:00,Hardware accelerator for I2C interfaces of nanosat OBC,0,ch4nu/HWAcc,512251663,Verilog,HWAcc,20,0,2022-10-16 18:30:14+00:00,[],https://api.github.com/licenses/mit
546,https://github.com/talhaiqbal-10xe/RestoringDivider.git,2022-06-28 12:01:23+00:00,,0,talhaiqbal-10xe/RestoringDivider,508280833,Verilog,RestoringDivider,5423,0,2022-06-28 12:58:57+00:00,[],None
547,https://github.com/erfaniravani/BoothMultiplier.git,2022-06-30 13:49:46+00:00,5 bit booth multiplier implemented with verilog,0,erfaniravani/BoothMultiplier,509099283,Verilog,BoothMultiplier,283,0,2022-06-30 13:53:28+00:00,[],None
548,https://github.com/RanvirSingh2012/Microprocessor.git,2022-07-01 06:05:51+00:00,"Basic 8-bit Microprocessor with 4 types of instructions - Input, Addition, Move, Output",0,RanvirSingh2012/Microprocessor,509339550,Verilog,Microprocessor,1117,0,2022-07-01 06:42:16+00:00,[],None
549,https://github.com/RayChao1030/Digital-IC.git,2022-07-03 15:11:43+00:00,,0,RayChao1030/Digital-IC,510057536,Verilog,Digital-IC,10666,0,2022-07-03 16:24:24+00:00,[],None
550,https://github.com/dabsonFerreira/fpga_verilog_intel.git,2022-07-01 16:02:42+00:00,alguns estudos em verilog,0,dabsonFerreira/fpga_verilog_intel,509514458,Verilog,fpga_verilog_intel,702,0,2022-07-01 16:02:50+00:00,[],None
551,https://github.com/Rishabh-Hulsurkar/Computer-Architecture.git,2022-07-01 17:49:50+00:00,,0,Rishabh-Hulsurkar/Computer-Architecture,509543687,Verilog,Computer-Architecture,6,0,2022-07-02 01:14:12+00:00,[],None
552,https://github.com/akshay142002/automatic_parking_system.git,2022-06-30 19:07:04+00:00,,0,akshay142002/automatic_parking_system,509202228,Verilog,automatic_parking_system,7,0,2022-06-30 19:09:46+00:00,[],None
553,https://github.com/erfaniravani/MIPS.git,2022-06-30 13:57:54+00:00,,0,erfaniravani/MIPS,509102269,Verilog,MIPS,784,0,2022-07-02 08:56:42+00:00,[],None
554,https://github.com/StefanoRizzello/isa.git,2022-06-30 15:24:12+00:00,Integrated systems architecture Projects course ,0,StefanoRizzello/isa,509133279,Verilog,isa,77620,0,2022-06-30 15:29:14+00:00,[],None
555,https://github.com/OrosJacks0n/Placement-Projects.git,2022-07-02 13:34:13+00:00,New projects verification for placements,0,OrosJacks0n/Placement-Projects,509764195,Verilog,Placement-Projects,15,0,2022-07-02 14:10:20+00:00,[],None
556,https://github.com/AtuL-KumaR-00/HDLBits-Solutions.git,2022-07-02 16:42:45+00:00,Solution of the problems in HDLBits website,1,AtuL-KumaR-00/HDLBits-Solutions,509809169,Verilog,HDLBits-Solutions,65,0,2022-07-02 16:42:50+00:00,[],https://api.github.com/licenses/gpl-3.0
557,https://github.com/jinyin2333/FPGA-project.git,2022-07-03 04:29:48+00:00,Code used to place the self-practicing FPGA,0,jinyin2333/FPGA-project,509922065,Verilog,FPGA-project,85,0,2022-07-03 04:53:10+00:00,[],None
558,https://github.com/Ahmed0100/floating_point_arithmatic.git,2022-06-23 08:36:07+00:00,floating point arithmatic,0,Ahmed0100/floating_point_arithmatic,506559935,Verilog,floating_point_arithmatic,4,0,2022-06-23 08:36:35+00:00,[],None
559,https://github.com/nakengelhardt/faultinjection_mcy.git,2022-06-24 13:41:00+00:00,Demo for using mcy for fault injection to verify a circuit with error-checking/correction capabilities,1,nakengelhardt/faultinjection_mcy,507024608,Verilog,faultinjection_mcy,4,0,2022-06-24 13:41:18+00:00,[],None
560,https://github.com/Itsyashraj/Design-and-Verification-of-configurable-memory.git,2022-06-24 16:02:26+00:00,This project involves Memory Design with front door and back door access.,0,Itsyashraj/Design-and-Verification-of-configurable-memory,507069015,Verilog,Design-and-Verification-of-configurable-memory,4,0,2023-07-08 11:09:29+00:00,[],None
561,https://github.com/Misaka12124/ASIC-project.git,2022-06-26 12:09:43+00:00,a practice project for ASIC,0,Misaka12124/ASIC-project,507564148,Verilog,ASIC-project,33,0,2022-06-26 12:27:04+00:00,[],https://api.github.com/licenses/gpl-3.0
562,https://github.com/Warl3ck/test_adc.git,2022-06-22 09:54:46+00:00,,0,Warl3ck/test_adc,506189191,Verilog,test_adc,29173,0,2022-06-22 10:07:42+00:00,[],None
563,https://github.com/avinashjnvr/Automatic-Vending-Machine.git,2022-07-06 08:37:02+00:00,,0,avinashjnvr/Automatic-Vending-Machine,511055728,Verilog,Automatic-Vending-Machine,3,0,2023-03-09 17:42:10+00:00,[],None
564,https://github.com/SaiSatwik2226/4-Stage-Pipeline-Processor.git,2022-07-06 03:15:04+00:00,,0,SaiSatwik2226/4-Stage-Pipeline-Processor,510971247,Verilog,4-Stage-Pipeline-Processor,975,0,2022-07-06 03:35:08+00:00,[],None
565,https://github.com/mava123-0/ComputerOrganizationAndArchitecture.git,2022-07-06 17:17:52+00:00,,0,mava123-0/ComputerOrganizationAndArchitecture,511228931,Verilog,ComputerOrganizationAndArchitecture,20,0,2022-07-06 17:23:52+00:00,[],None
566,https://github.com/nk-yadav/image-processing-verilog-HDL.git,2022-07-06 16:20:38+00:00,Verilog implementation of basic image processing operations,0,nk-yadav/image-processing-verilog-HDL,511210445,Verilog,image-processing-verilog-HDL,192,0,2022-07-06 16:38:19+00:00,[],None
567,https://github.com/nivasbasker/LFR_with_FPGA.git,2022-07-06 05:54:48+00:00,"Source code for A LFR with FPGA in Verilog language along with functionalities like Color detection, PWM, UART message transmission and Dijkstra's algorithm for autonomous path planning",0,nivasbasker/LFR_with_FPGA,511006975,Verilog,LFR_with_FPGA,16,0,2023-04-22 14:00:45+00:00,[],https://api.github.com/licenses/apache-2.0
568,https://github.com/kuliga/tcam.git,2022-06-26 21:48:30+00:00,,0,kuliga/tcam,507691673,Verilog,tcam,9,0,2022-06-26 21:48:50+00:00,[],None
569,https://github.com/gm-28/PSD.git,2022-06-23 16:46:03+00:00,Projects developed for Digital Systems Design,0,gm-28/PSD,506718959,Verilog,PSD,11,0,2022-06-23 16:47:04+00:00,[],None
570,https://github.com/Jnaneshrompilli/8-Bit-ALU-Verilog.git,2022-07-04 18:11:27+00:00,,0,Jnaneshrompilli/8-Bit-ALU-Verilog,510460208,Verilog,8-Bit-ALU-Verilog,1,0,2022-07-04 18:16:36+00:00,[],None
571,https://github.com/surucux/Egg-Timer.git,2022-06-29 17:14:30+00:00,,0,surucux/Egg-Timer,508781621,Verilog,Egg-Timer,13,0,2022-06-29 17:15:00+00:00,[],None
572,https://github.com/annapetrosyaan/Verilog_tasks.git,2022-06-29 13:40:05+00:00,,0,annapetrosyaan/Verilog_tasks,508707133,Verilog,Verilog_tasks,2,0,2022-06-29 13:42:36+00:00,[],None
573,https://github.com/kaanolgu/sparse-bfs-fpga.git,2022-06-22 10:56:45+00:00,The source files for the Sparse BFS used for Zedboard Implementation,0,kaanolgu/sparse-bfs-fpga,506208052,Verilog,sparse-bfs-fpga,37950,0,2022-06-27 12:53:17+00:00,[],https://api.github.com/licenses/cc-by-4.0
574,https://github.com/FranciscoDias98/alfa_pc_hw.git,2022-07-07 20:18:25+00:00,,0,FranciscoDias98/alfa_pc_hw,511663042,Verilog,alfa_pc_hw,33,0,2022-07-07 20:21:40+00:00,[],None
575,https://github.com/ladium493/VLSIhw.git,2022-07-08 15:35:56+00:00,,0,ladium493/VLSIhw,511944317,Verilog,VLSIhw,25,0,2022-07-08 15:37:00+00:00,[],None
576,https://github.com/Mark-MDO47/FPGA_RBG_2_RBGW.git,2022-07-09 02:46:00+00:00,Lattice iCE40 FPGA convert WS2812b RGB from ESP32 to SK6812 RGBW,4,Mark-MDO47/FPGA_RBG_2_RBGW,512077043,Verilog,FPGA_RBG_2_RBGW,798,0,2022-08-07 18:11:02+00:00,"['fpga', 'ice40', 'led', 'ws2812b', 'esp32-arduino', 'sk6812', 'apio', 'verilog', 'icestick']",https://api.github.com/licenses/unlicense
