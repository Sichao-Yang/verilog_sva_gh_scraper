,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/circuitvalley/USB_C_Industrial_Camera_FPGA_USB3.git,2022-06-12 23:22:44+00:00,"Source and Documentation files for USB C Industrial Camera Project, This repo contains PCB boards, FPGA , Camera and USB along with FPGA Firmware and USB Controller Firmware source.",125,circuitvalley/USB_C_Industrial_Camera_FPGA_USB3,502749865,Verilog,USB_C_Industrial_Camera_FPGA_USB3,60157,700,2024-04-12 03:19:00+00:00,"['camera', 'fpga', 'usb', 'usb3', 'verilog', 'csi', 'mipi', 'mipi-csi-receiver', 'uvc']",None
1,https://github.com/zeroasiccorp/umi.git,2022-06-20 00:41:40+00:00,Universal Memory Interface (UMI),9,zeroasiccorp/umi,505251182,Verilog,umi,3913,106,2024-04-08 22:39:06+00:00,[],https://api.github.com/licenses/apache-2.0
2,https://github.com/XueTianyu24/cnn_accelerator.git,2022-05-20 06:48:59+00:00,【入门项目】基于PYNQ-Z2实现手写数字识别卷积神经网络硬件加速器,24,XueTianyu24/cnn_accelerator,494353034,Verilog,cnn_accelerator,35422,101,2024-04-11 06:14:55+00:00,[],https://api.github.com/licenses/mit
3,https://github.com/mattvenn/wokwi-verilog-gds-test.git,2022-06-13 08:22:01+00:00,,20,mattvenn/wokwi-verilog-gds-test,502868308,Verilog,wokwi-verilog-gds-test,3022,55,2023-06-15 01:38:53+00:00,[],https://api.github.com/licenses/apache-2.0
4,https://github.com/niklasekstrom/clockport_pi_interface.git,2022-06-15 11:01:56+00:00,Amiga clock port to Raspberry Pi interface,9,niklasekstrom/clockport_pi_interface,503728523,Verilog,clockport_pi_interface,1557,52,2024-01-22 22:58:44+00:00,[],https://api.github.com/licenses/gpl-3.0
5,https://github.com/ZiyangYE/General-Slow-DDR3-Interface.git,2022-05-19 16:07:11+00:00,A general slow DDR3 interface. Very little resource consumption. Suits for all FPGAs with 1.5V IO voltage.,8,ZiyangYE/General-Slow-DDR3-Interface,494141537,Verilog,General-Slow-DDR3-Interface,20,34,2024-03-03 14:00:05+00:00,[],https://api.github.com/licenses/bsd-3-clause
6,https://github.com/Parretto/DisplayPort.git,2022-06-13 12:21:02+00:00,DisplayPort IP-core,2,Parretto/DisplayPort,502944312,Verilog,DisplayPort,2275,32,2024-03-15 17:55:36+00:00,"['displayport', 'ip-core', 'lattice', 'xilinx', 'fpga']",None
7,https://github.com/buhe/bugu-computer.git,2022-05-30 06:36:42+00:00, 💻  Build own computer by fpga.,2,buhe/bugu-computer,497819211,Verilog,bugu-computer,327,23,2024-03-31 06:35:51+00:00,"['fpga', 'own', 'tutorials', 'hdl', 'verilog', 'nand2tetris']",https://api.github.com/licenses/gpl-3.0
8,https://github.com/fast-codesign/OpenTSN3.4.git,2022-05-20 07:32:02+00:00,OpenTSN3.4开源项目的新特性：（1）交换平面深度解耦，硬件代码由TSS（时间敏感交换），HCP（硬件控制点）和OSMAC（Opensync MAC）实现。（2）集成了Opensync开源实现，支持802.1AS和AS6802两种时间同步协议；（3）集成了TSN硬件仿真工具OpenEmulator，用户可在仿真环境下运行OpenTSN3.4交换机、网卡、控制器和opensync同步软件,4,fast-codesign/OpenTSN3.4,494365862,Verilog,OpenTSN3.4,101344,19,2024-04-08 05:02:36+00:00,[],
9,https://github.com/jeshraghian/snn-accelerator.git,2022-06-08 13:33:52+00:00,,1,jeshraghian/snn-accelerator,501265198,Verilog,snn-accelerator,26360,18,2024-03-01 12:21:37+00:00,[],https://api.github.com/licenses/apache-2.0
10,https://github.com/somhi/PCXT_DeMiSTify.git,2022-06-12 19:23:18+00:00,PCXT by spark2k06 deMiSTified ,9,somhi/PCXT_DeMiSTify,502707982,Verilog,PCXT_DeMiSTify,10501,15,2024-02-10 19:11:53+00:00,[],https://api.github.com/licenses/gpl-3.0
11,https://github.com/borti4938/n64rgb_flex.git,2022-06-19 22:53:49+00:00,,0,borti4938/n64rgb_flex,505236095,Verilog,n64rgb_flex,15356,15,2024-01-04 00:00:55+00:00,[],https://api.github.com/licenses/gpl-3.0
12,https://github.com/HUXIYIGE/cqu_cs_course.git,2022-05-27 10:59:25+00:00,重庆大学计算机学院计算机科学与技术课程相关文档和实验,1,HUXIYIGE/cqu_cs_course,496962936,Verilog,cqu_cs_course,1177672,13,2024-03-31 01:05:20+00:00,[],None
13,https://github.com/icgrp/hipr.git,2022-06-18 19:58:22+00:00,,1,icgrp/hipr,504938744,Verilog,hipr,7132,11,2023-04-27 21:41:13+00:00,[],None
14,https://github.com/gju06051/TPU_HW_Verilog.git,2022-06-16 01:32:19+00:00,,0,gju06051/TPU_HW_Verilog,503973366,Verilog,TPU_HW_Verilog,2512,10,2024-04-11 01:54:46+00:00,[],https://api.github.com/licenses/mit
15,https://github.com/tharunchitipolu/RISC-V-32I-based-core-with-Advanced-Extensible-Interface.git,2022-05-28 06:38:49+00:00,5 stage pipelined RISC-V core with AXI3 bus protocol between the directly mapped cache and main memory.,1,tharunchitipolu/RISC-V-32I-based-core-with-Advanced-Extensible-Interface,497236016,Verilog,RISC-V-32I-based-core-with-Advanced-Extensible-Interface,530,9,2024-03-02 04:27:37+00:00,"['arm', 'axi3', 'cache', 'computer-architecture', 'digitaldesign', 'pipeline', 'processor', 'risc-v', 'systemverilog', 'testbench', 'verilog', 'verilog-hdl']",None
16,https://github.com/Jon3Y/AMBA.git,2022-06-17 07:49:58+00:00,"AHB/APB SRAM Inf, VCS&Verdi Sim.",0,Jon3Y/AMBA,504442027,Verilog,AMBA,2028,9,2024-03-28 15:13:34+00:00,[],None
17,https://github.com/brochz/riscv_151.git,2022-06-16 02:51:07+00:00,An implementation of RV32I based on EECS151,0,brochz/riscv_151,503990667,Verilog,riscv_151,3580,9,2024-03-04 09:24:23+00:00,[],None
18,https://github.com/infini8-13/riscv-ms-soc.git,2022-05-29 17:27:04+00:00,A RISC-V Mixed Signal System-on-Chip(SoC) produced by integrating RVMyth RISC-V Core with Phase Locked Loop(PLL)  as a clock multiplier,0,infini8-13/riscv-ms-soc,497660825,Verilog,riscv-ms-soc,86,9,2024-04-07 06:49:44+00:00,"['fpga', 'mixed-signal', 'pll', 'risc-v', 'system-on-chip', 'tl-verilog', 'verilog']",https://api.github.com/licenses/gpl-3.0
19,https://github.com/2catycm/SUSTech-CS202_214-Computer_Organization-Project.git,2022-06-01 11:49:13+00:00,This is the mirror for gitee in github for project assignment of cs202 / 214 Computer Organization course of Southern University of Science and Technology， which is to manufacture a CPU. 这是南方科技大学CS202/214计算机组成原理课程的大作业——实现一个CPU。,0,2catycm/SUSTech-CS202_214-Computer_Organization-Project,498714649,Verilog,SUSTech-CS202_214-Computer_Organization-Project,109714,9,2023-12-06 07:47:09+00:00,"['computer-organization-and-design', 'cpu', 'digital-logic', 'mips', 'sustech-course-code']",
20,https://github.com/nandland/UART.git,2022-05-25 00:06:59+00:00,UART in Verilog and VHDL,0,nandland/UART,496025524,Verilog,UART,13,8,2024-02-29 14:25:55+00:00,[],https://api.github.com/licenses/mit
21,https://github.com/Eric-is-good/cpu-compilation.git,2022-06-11 11:34:07+00:00,电子科技大学的计算机组成原理实验课，并在此基础上实现了汇编编译器,0,Eric-is-good/cpu-compilation,502330365,Verilog,cpu-compilation,220,8,2024-01-01 11:34:23+00:00,[],None
22,https://github.com/orangeYao/DEEP.git,2022-05-20 14:57:48+00:00,,1,orangeYao/DEEP,494506315,Verilog,DEEP,24732,7,2024-03-05 08:35:07+00:00,[],None
23,https://github.com/opensatellite/spireg.git,2022-06-13 20:22:50+00:00,SPIREG - SPI slave logic for register access,1,opensatellite/spireg,503103799,Verilog,spireg,14,7,2022-09-13 15:54:50+00:00,[],https://api.github.com/licenses/mit
24,https://github.com/derek8955/spring_iclab.git,2022-06-16 14:51:39+00:00,題目練習,1,derek8955/spring_iclab,504195906,Verilog,spring_iclab,20535,7,2024-04-02 08:13:35+00:00,[],None
25,https://github.com/achunbai/taxi_fare_fpga.git,2022-06-03 07:22:18+00:00,出租车计价器——一个EDA课程设计大作业,1,achunbai/taxi_fare_fpga,499417951,Verilog,taxi_fare_fpga,51,7,2024-03-25 10:54:38+00:00,[],https://api.github.com/licenses/mit
26,https://github.com/LYB926/Processor-Z.git,2022-05-27 15:02:54+00:00,使用 Verilog HDL 实现一个比 CS:APP 中 Y86-64 更简单的处理器，简称为 Processor-Z 。,0,LYB926/Processor-Z,497039278,Verilog,Processor-Z,4314,6,2023-11-18 01:25:28+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
27,https://github.com/simonwaid/particle_detector.git,2022-06-02 08:23:10+00:00,"Detector for alpha, beta and other particles",0,simonwaid/particle_detector,499052329,Verilog,particle_detector,34037,6,2024-02-16 22:40:56+00:00,[],https://api.github.com/licenses/apache-2.0
28,https://github.com/briansune/Artix-7-PCIE-Riffa.git,2022-06-07 08:34:47+00:00,,1,briansune/Artix-7-PCIE-Riffa,500756124,Verilog,Artix-7-PCIE-Riffa,18027,6,2024-04-05 17:24:26+00:00,[],https://api.github.com/licenses/mit
29,https://github.com/hz826/RISC-V-CPU.git,2022-06-15 16:12:53+00:00,verilog 实现的 RISC-V 流水线处理器,0,hz826/RISC-V-CPU,503837818,Verilog,RISC-V-CPU,376,5,2023-12-15 10:28:48+00:00,[],None
30,https://github.com/omaranwar21/AutomaticWashingMachine.git,2022-06-11 17:15:38+00:00,,0,omaranwar21/AutomaticWashingMachine,502410981,Verilog,AutomaticWashingMachine,2131,5,2023-12-30 19:06:19+00:00,[],None
31,https://github.com/Prokuma/Kasumi.git,2022-06-08 17:59:21+00:00,The RV32I Implementation of Verilog HDL,0,Prokuma/Kasumi,501358050,Verilog,Kasumi,82,5,2024-03-14 04:03:26+00:00,[],https://api.github.com/licenses/mit
32,https://github.com/FlyHighInSky/OFDM-on-FPGA.git,2022-06-19 02:49:32+00:00,,6,FlyHighInSky/OFDM-on-FPGA,504997246,,OFDM-on-FPGA,743,5,2024-03-04 09:21:28+00:00,[],None
33,https://github.com/pariyajebreili/32BitMipsProcessor.git,2022-05-27 17:40:35+00:00,,0,pariyajebreili/32BitMipsProcessor,497086065,Verilog,32BitMipsProcessor,1070,5,2022-09-03 17:26:10+00:00,[],None
34,https://github.com/mohamed/cordic.git,2022-05-26 17:47:31+00:00,Synthesizable SystemVerilog implementation of fixed-point CORDIC algorithm,2,mohamed/cordic,496718421,Verilog,cordic,3103,5,2024-02-28 01:12:18+00:00,"['cordic', 'dsp', 'systemverilog']",None
35,https://github.com/ankitgarg1999/COP-820.git,2022-05-28 04:57:24+00:00,Eyeriss Hardware Accelerator for Machine Learning,1,ankitgarg1999/COP-820,497217377,Verilog,COP-820,802,4,2023-06-28 12:08:56+00:00,[],None
36,https://github.com/mattvenn/wrapped_instrumented_adder.git,2022-06-02 10:04:47+00:00,,1,mattvenn/wrapped_instrumented_adder,499083592,Verilog,wrapped_instrumented_adder,31221,4,2023-11-19 23:08:00+00:00,[],https://api.github.com/licenses/apache-2.0
37,https://github.com/jiayi-wang98/lpddr4_memory_controller.git,2022-06-06 22:12:15+00:00,,1,jiayi-wang98/lpddr4_memory_controller,500608527,Verilog,lpddr4_memory_controller,6838,4,2024-02-20 03:49:50+00:00,[],None
38,https://github.com/mattvenn/zero_to_asic_mpw6.git,2022-06-06 08:08:31+00:00,MPW6 submission from the Zero to ASIC Course,1,mattvenn/zero_to_asic_mpw6,500345502,Verilog,zero_to_asic_mpw6,178617,4,2023-11-19 23:06:18+00:00,"['asic', 'efabless', 'sky130', 'verilog', 'mpw6']",https://api.github.com/licenses/apache-2.0
39,https://github.com/pariyajebreili/PipelinedMipsProcessor.git,2022-06-19 07:38:47+00:00,,0,pariyajebreili/PipelinedMipsProcessor,505043011,Verilog,PipelinedMipsProcessor,116,4,2022-09-02 01:44:48+00:00,[],None
40,https://github.com/ZephyrusZhang/CS202-Final-HW-Pipellined-CPU.git,2022-05-21 05:41:10+00:00,,3,ZephyrusZhang/CS202-Final-HW-Pipellined-CPU,494691634,Verilog,CS202-Final-HW-Pipellined-CPU,20312,4,2023-07-28 11:36:46+00:00,[],None
41,https://github.com/AnushangaPavith/Building-a-simple-processor-Memory-hierarchy.git,2022-06-22 09:32:56+00:00,"Group mini project (Lab 05, 06) in Computer Architecture Course",1,AnushangaPavith/Building-a-simple-processor-Memory-hierarchy,506182355,Verilog,Building-a-simple-processor-Memory-hierarchy,10037,4,2023-03-14 06:13:51+00:00,[],None
42,https://github.com/varunmadhavam/100daysofrtl.git,2022-06-14 04:32:24+00:00,#100daysofrtl,1,varunmadhavam/100daysofrtl,503208748,Verilog,100daysofrtl,3010,4,2023-08-06 06:03:16+00:00,[],None
43,https://github.com/damdoy/fft_verilog.git,2022-06-05 18:33:52+00:00,FFT implementation with verilog ,0,damdoy/fft_verilog,500180573,Verilog,fft_verilog,4,4,2024-04-04 04:53:07+00:00,[],None
44,https://github.com/Yogesh0211/Image_Processing_using_Verilog.git,2022-05-30 08:21:17+00:00,"In this FPGA Verilog project, some simple processing operations are implemented in Verilog such as inversion, brightness control and threshold operations. The image processing operation is selected by a file and then, the processed image data are written to a bitmap image for verification purposes. The image reading Verilog code operates as a Verilog model of an image sensor/ camera, which can be really helpful for functional verifications in real-time FPGA image processing projects. The image writing part is also extremely useful for testing as well when you want to see the output image in BMP format.",0,Yogesh0211/Image_Processing_using_Verilog,497851986,Verilog,Image_Processing_using_Verilog,10,4,2024-01-01 04:15:52+00:00,[],None
45,https://github.com/htmos6/Quality-of-Service-Based-Queuing.git,2022-06-14 22:05:39+00:00,"To optimize QoS, a queuing algorithm was implemented using Verilog HDL on FPGAs for networks.",0,htmos6/Quality-of-Service-Based-Queuing,503533929,Verilog,Quality-of-Service-Based-Queuing,1074,4,2024-03-15 07:47:56+00:00,"['fpga', 'hdl', 'verilog', 'algorithms', 'qos', 'vga']",https://api.github.com/licenses/mit
46,https://github.com/davidmin7/softswitch.git,2022-05-22 13:08:56+00:00,,1,davidmin7/softswitch,495063042,Verilog,softswitch,8441,4,2024-03-28 18:22:14+00:00,[],None
47,https://github.com/DinCarmon/FPGA_Capstone_Building_FPGA_Projects_Course.git,2022-05-23 04:54:34+00:00,Link for the course: https://www.coursera.org/learn/capstone-fpga-design,0,DinCarmon/FPGA_Capstone_Building_FPGA_Projects_Course,495262870,Verilog,FPGA_Capstone_Building_FPGA_Projects_Course,98357,3,2023-02-10 17:23:01+00:00,[],None
48,https://github.com/alynna/SuperCPU128DX_MiSTer.git,2022-06-15 05:17:41+00:00,,0,alynna/SuperCPU128DX_MiSTer,503624885,Verilog,SuperCPU128DX_MiSTer,127353,3,2023-02-06 23:16:21+00:00,[],None
49,https://github.com/zorkan/cpr.git,2022-06-06 14:34:31+00:00,Developed in accordance with the Aha Standard.,1,zorkan/cpr,500468863,Verilog,cpr,5924,3,2024-01-17 19:58:01+00:00,[],https://api.github.com/licenses/apache-2.0
50,https://github.com/MiSTer-devel/Gamate_MiSTer.git,2022-06-14 01:59:50+00:00,Bit Corporation Gamate for MiSTer,2,MiSTer-devel/Gamate_MiSTer,503175397,Verilog,Gamate_MiSTer,963,3,2024-04-08 06:10:32+00:00,[],https://api.github.com/licenses/gpl-2.0
51,https://github.com/Seaflowery/CS202-CPU_src.git,2022-05-31 17:00:49+00:00,sustech CS202 uart CPU,0,Seaflowery/CS202-CPU_src,498424559,Verilog,CS202-CPU_src,11873,3,2023-06-15 14:16:45+00:00,[],None
52,https://github.com/atalw/fromthetransistor.git,2022-06-09 16:12:28+00:00,Building the modern computer stack from first principles,0,atalw/fromthetransistor,501724060,Verilog,fromthetransistor,3302,3,2024-01-17 05:58:09+00:00,[],None
53,https://github.com/txzing/FPGA_example.git,2022-06-14 03:18:38+00:00,some example. working in haiyun.,0,txzing/FPGA_example,503193452,Verilog,FPGA_example,147258,3,2023-08-02 08:09:01+00:00,[],None
54,https://github.com/Leo-Adventure/CS214-Simple-CPU.git,2022-06-02 18:00:35+00:00,"The repository contains the simple CPU implemented in CS214, which is the result of teamwork with @Cobalt-27 and @aeroplanepaper",0,Leo-Adventure/CS214-Simple-CPU,499238253,Verilog,CS214-Simple-CPU,25067,3,2022-06-16 09:06:57+00:00,[],None
55,https://github.com/yongatek/caravel_yonga-modbus-controller.git,2022-05-25 06:47:47+00:00,,1,yongatek/caravel_yonga-modbus-controller,496114710,Verilog,caravel_yonga-modbus-controller,61378,3,2023-12-13 11:25:47+00:00,[],https://api.github.com/licenses/apache-2.0
56,https://github.com/egorxe/miranda_fpga_openmpw.git,2022-05-27 07:46:41+00:00,Miranda eFPGA for OpenMPW-5,1,egorxe/miranda_fpga_openmpw,496906136,Verilog,miranda_fpga_openmpw,434977,3,2022-12-14 01:09:22+00:00,[],https://api.github.com/licenses/apache-2.0
57,https://github.com/skiphansen/panog2_usb.git,2022-06-09 16:58:47+00:00,USB Support for the Second Generation Pano Logic Thin Client,1,skiphansen/panog2_usb,501738794,Verilog,panog2_usb,4943,3,2024-04-01 18:42:36+00:00,[],None
58,https://github.com/AllenDBoston/caravel_PMU.git,2022-06-09 00:35:43+00:00,,0,AllenDBoston/caravel_PMU,501453867,Verilog,caravel_PMU,132825,3,2022-06-12 22:42:30+00:00,[],https://api.github.com/licenses/apache-2.0
59,https://github.com/lsammarone/OpenPUF.git,2022-06-08 07:06:47+00:00,,1,lsammarone/OpenPUF,501138203,Verilog,OpenPUF,44464,3,2023-10-24 02:49:48+00:00,[],https://api.github.com/licenses/apache-2.0
60,https://github.com/noelpedro/WES_Capstone_GNSS_MR.git,2022-05-27 15:46:03+00:00,,5,noelpedro/WES_Capstone_GNSS_MR,497052820,Verilog,WES_Capstone_GNSS_MR,61442,3,2023-11-16 07:20:56+00:00,[],None
61,https://github.com/UniversityOfPlymouth-Electronics/Quartus21_Ubuntu.git,2022-06-16 11:55:41+00:00,Setup instructions for Quartus 21.x and Questa for Ubuntu 20.04,1,UniversityOfPlymouth-Electronics/Quartus21_Ubuntu,504136805,Verilog,Quartus21_Ubuntu,312,3,2023-11-23 19:10:57+00:00,[],https://api.github.com/licenses/gpl-3.0
62,https://github.com/Junzhou-Chen/input-adder.git,2022-06-05 17:31:03+00:00,,0,Junzhou-Chen/input-adder,500165944,Verilog,input-adder,1633,3,2023-06-16 08:48:28+00:00,[],None
63,https://github.com/choucl/FPGA-SHA256.git,2022-06-10 07:00:00+00:00,,0,choucl/FPGA-SHA256,501934846,Verilog,FPGA-SHA256,4261,2,2023-01-16 08:16:09+00:00,[],None
64,https://github.com/boga-vidhath/Wallace-Tree-Multiplier.git,2022-06-07 14:24:23+00:00,Verilog code project of a modular Wallace Tree multiplier built using Full and Half Adders.,0,boga-vidhath/Wallace-Tree-Multiplier,500873814,Verilog,Wallace-Tree-Multiplier,682,2,2024-02-27 13:43:41+00:00,[],None
65,https://github.com/githubpushpendra/Soil-Monitoring-Bot.git,2022-05-30 04:39:42+00:00,,0,githubpushpendra/Soil-Monitoring-Bot,497790767,Verilog,Soil-Monitoring-Bot,77643,2,2022-11-09 13:16:50+00:00,[],None
66,https://github.com/petrohi/speech-robot.git,2022-06-15 00:59:48+00:00,Speech controlled robot using Tensil and Arty A7-100 FPGA board ,1,petrohi/speech-robot,503568415,Verilog,speech-robot,41344,2,2022-07-20 07:45:11+00:00,"['fpga', 'ml', 'robotics']",https://api.github.com/licenses/apache-2.0
67,https://github.com/pkaselj/Verilog_NeuralNetwork.git,2022-05-22 17:52:27+00:00,PDS 2022 Seminar,3,pkaselj/Verilog_NeuralNetwork,495134987,Verilog,Verilog_NeuralNetwork,1887,2,2023-11-08 18:12:37+00:00,[],None
68,https://github.com/mingerfan/mySimpleCPU.git,2022-06-21 16:17:43+00:00,,0,mingerfan/mySimpleCPU,505918157,Verilog,mySimpleCPU,46,2,2022-06-22 09:09:44+00:00,[],https://api.github.com/licenses/gpl-3.0
69,https://github.com/opensource-fr/wrapped_wavelet_transform.git,2022-06-05 04:21:19+00:00,Wrapped Wavelet Transform Module,1,opensource-fr/wrapped_wavelet_transform,499998586,Verilog,wrapped_wavelet_transform,8971,2,2023-11-19 23:08:35+00:00,[],https://api.github.com/licenses/apache-2.0
70,https://github.com/996refuse/HDLBits-Solutions.git,2022-05-27 07:38:53+00:00,HDLBits-Solutions,1,996refuse/HDLBits-Solutions,496903659,Verilog,HDLBits-Solutions,52,2,2024-04-01 01:48:30+00:00,[],https://api.github.com/licenses/gpl-3.0
71,https://github.com/archibald-carrion/CPU-verilog.git,2022-05-28 15:33:15+00:00,"CPU written in Verilog harware description language, using the RTL abstraction level",0,archibald-carrion/CPU-verilog,497357680,Verilog,CPU-verilog,2371,2,2023-12-10 21:08:22+00:00,[],None
72,https://github.com/FrancesoM/HDL_FFT.git,2022-05-19 14:59:09+00:00,"Simple HDL implementation of FFT algorithm. Less customization in code, for a greater ease of use. ",0,FrancesoM/HDL_FFT,494117590,Verilog,HDL_FFT,14,2,2023-04-11 12:17:47+00:00,[],https://api.github.com/licenses/mit
73,https://github.com/a620006577/AES-PUF.git,2022-06-14 11:35:29+00:00,,0,a620006577/AES-PUF,503332405,Verilog,AES-PUF,16,2,2023-06-01 11:59:09+00:00,[],None
74,https://github.com/smaslovski/ucpu.git,2022-06-12 18:31:30+00:00,A toy Harvard-architecture uCPU realized in verilog. Assembler included. ,0,smaslovski/ucpu,502697341,Verilog,ucpu,148,2,2023-05-19 09:41:31+00:00,[],None
75,https://github.com/jogeshsingh/Sequence_Detector_Mealy_Machine_1010.git,2022-05-28 06:23:14+00:00,sequence detector (1010) with overlapping case implemented using mealy machine in XILINX VIVADO,0,jogeshsingh/Sequence_Detector_Mealy_Machine_1010,497232952,Verilog,Sequence_Detector_Mealy_Machine_1010,7,2,2023-09-29 06:57:15+00:00,[],https://api.github.com/licenses/mit
76,https://github.com/iamalinaji/ARM-processor.git,2022-06-21 10:32:06+00:00,ARM processor written in verilog language. ,0,iamalinaji/ARM-processor,505796172,Verilog,ARM-processor,1282,2,2024-03-27 00:25:03+00:00,[],None
77,https://github.com/ekiwi/comparing-random-testing-and-bmc.git,2022-05-19 20:53:08+00:00,,0,ekiwi/comparing-random-testing-and-bmc,494226220,Verilog,comparing-random-testing-and-bmc,79093,2,2023-03-26 08:24:39+00:00,[],None
78,https://github.com/Chris-Not-Mikey/Synthesis-Fast-ANN-Fieldious.git,2022-05-23 00:51:20+00:00,,0,Chris-Not-Mikey/Synthesis-Fast-ANN-Fieldious,495214165,Verilog,Synthesis-Fast-ANN-Fieldious,78882,2,2022-06-14 09:28:41+00:00,[],None
79,https://github.com/LYB926/Getting_Started_with_Verilog.git,2022-05-26 06:33:05+00:00,通过北京交通大学的网课学习Verilog HDL入门。,0,LYB926/Getting_Started_with_Verilog,496508301,Verilog,Getting_Started_with_Verilog,140,2,2023-12-23 06:17:59+00:00,[],https://api.github.com/licenses/mit
80,https://github.com/JerryHui96/Costas_Loop.git,2022-05-22 00:53:33+00:00,,0,JerryHui96/Costas_Loop,494927400,Verilog,Costas_Loop,4,2,2024-01-11 04:28:53+00:00,[],None
81,https://github.com/Kyp069/pong.git,2022-06-12 17:14:12+00:00,,0,Kyp069/pong,502680202,Verilog,pong,20,2,2022-06-12 20:52:41+00:00,[],None
82,https://github.com/woniu9524/MiniSys_CPU.git,2022-05-22 07:06:46+00:00,简化的MIPS CPU课设,0,woniu9524/MiniSys_CPU,494985481,Verilog,MiniSys_CPU,141,2,2023-04-19 08:56:31+00:00,[],None
83,https://github.com/Sk-2023/AHB-APB-bridge-RTL-design-using-Verilog-HDL.git,2022-06-06 10:59:07+00:00,,0,Sk-2023/AHB-APB-bridge-RTL-design-using-Verilog-HDL,500396992,Verilog,AHB-APB-bridge-RTL-design-using-Verilog-HDL,4,2,2023-05-03 13:59:01+00:00,[],None
84,https://github.com/luoqinpei/Auto-seek-Pilot-with-obstacle-avoidance-bluetooth-control-car.git,2022-06-08 04:19:15+00:00,Auto-seek Pilot with obstacle-avoidance bluetooth-control car based on Digilent Basys3 and Verilog HDL on Vivado design suite,0,luoqinpei/Auto-seek-Pilot-with-obstacle-avoidance-bluetooth-control-car,501097468,Verilog,Auto-seek-Pilot-with-obstacle-avoidance-bluetooth-control-car,39539,2,2023-04-06 05:39:36+00:00,[],None
85,https://github.com/merledu/caravel_soc_now.git,2022-05-27 15:18:16+00:00,,4,merledu/caravel_soc_now,497044171,Verilog,caravel_soc_now,105627,2,2024-01-12 18:31:08+00:00,[],https://api.github.com/licenses/apache-2.0
86,https://github.com/Precioux/Health-Checking-System.git,2022-06-10 20:38:59+00:00,Logic circuits Final Project - Spring 2021,0,Precioux/Health-Checking-System,502175083,Verilog,Health-Checking-System,4256,2,2023-03-25 16:25:05+00:00,"['logic-circuit', 'verilog-project']",None
87,https://github.com/charlotte-mu/QR-factorization.git,2022-05-30 06:57:21+00:00,"Hardware implementation for QR factorization of Givens, using CORDIC computing scheme.",0,charlotte-mu/QR-factorization,497825199,Verilog,QR-factorization,2983,2,2022-08-10 02:04:47+00:00,[],None
88,https://github.com/nandland/bus16.git,2022-05-25 00:32:03+00:00,,0,nandland/bus16,496030466,Verilog,bus16,24,2,2023-12-27 11:25:57+00:00,[],https://api.github.com/licenses/mit
89,https://github.com/ccbrown/axi-lite-vhdl.git,2022-05-22 00:27:33+00:00,axi4-lite implementation in vhdl,0,ccbrown/axi-lite-vhdl,494924124,Verilog,axi-lite-vhdl,16,2,2024-02-10 20:18:06+00:00,[],None
90,https://github.com/chithambaramoorthii/RRAM_crossbar_array_with_periphery.git,2022-06-09 00:23:51+00:00,,0,chithambaramoorthii/RRAM_crossbar_array_with_periphery,501451666,Verilog,RRAM_crossbar_array_with_periphery,2181,2,2022-11-02 03:30:27+00:00,[],https://api.github.com/licenses/apache-2.0
91,https://github.com/lkmidas/FreeCores-AES128-DFA.git,2022-05-24 08:35:13+00:00,Differential Fault Analysis PoC on FreeCores simple AES-128 hardware implementation,0,lkmidas/FreeCores-AES128-DFA,495736772,Verilog,FreeCores-AES128-DFA,9,2,2023-10-23 10:55:38+00:00,[],None
92,https://github.com/kareemelsaed/-A-32-bit-single-cycle-MIPS-processor.git,2022-06-02 17:31:47+00:00,,0,kareemelsaed/-A-32-bit-single-cycle-MIPS-processor,499229654,Verilog,-A-32-bit-single-cycle-MIPS-processor,81,2,2023-02-11 21:56:07+00:00,[],None
93,https://github.com/Ahmedemad77/32-Point-FFT.git,2022-05-20 19:00:22+00:00,,0,Ahmedemad77/32-Point-FFT,494577697,Verilog,32-Point-FFT,3209,2,2024-02-18 05:21:50+00:00,[],None
94,https://github.com/Justin5567/ICLab.git,2022-06-21 11:20:52+00:00,2022 Spring NCTU ICLAB,0,Justin5567/ICLab,505811404,Verilog,ICLab,61929,2,2023-10-17 08:10:31+00:00,[],None
95,https://github.com/proppy/caravel_hsv_mixer.git,2022-06-08 13:46:06+00:00,,0,proppy/caravel_hsv_mixer,501269769,Verilog,caravel_hsv_mixer,57732,2,2024-02-29 12:34:51+00:00,[],https://api.github.com/licenses/apache-2.0
96,https://github.com/ByakuyX/USTC-CALab2022.git,2022-06-01 12:37:54+00:00,,0,ByakuyX/USTC-CALab2022,498730071,Verilog,USTC-CALab2022,3180,2,2023-05-05 09:21:01+00:00,[],None
97,https://github.com/armstrong0/PDP8e.git,2022-06-17 01:50:47+00:00,An FPGA Implementaion of a PDP8e,0,armstrong0/PDP8e,504360849,Verilog,PDP8e,68205,2,2023-09-19 22:55:34+00:00,[],None
98,https://github.com/fatihgulakar/shooting_game_verilog.git,2022-06-10 17:26:20+00:00,,0,fatihgulakar/shooting_game_verilog,502126697,Verilog,shooting_game_verilog,225284,2,2023-03-04 05:02:56+00:00,[],https://api.github.com/licenses/apache-2.0
99,https://github.com/Ljfanny/SUSTech_CS202_CPU.git,2022-05-28 12:46:36+00:00,,0,Ljfanny/SUSTech_CS202_CPU,497315666,Verilog,SUSTech_CS202_CPU,13349,2,2023-05-28 03:04:15+00:00,[],None
100,https://github.com/JF-011101/single-cycle-and-pipeline-cpu.git,2022-06-15 01:45:02+00:00,,0,JF-011101/single-cycle-and-pipeline-cpu,503578084,Verilog,single-cycle-and-pipeline-cpu,8151,2,2023-04-09 04:02:03+00:00,[],https://api.github.com/licenses/mit
101,https://github.com/shalan/ahb_flash.git,2022-06-17 08:52:53+00:00,,1,shalan/ahb_flash,504461121,Verilog,ahb_flash,51,2,2024-03-28 15:04:11+00:00,[],https://api.github.com/licenses/apache-2.0
102,https://github.com/mattvenn/scan_wrapper.git,2022-06-17 12:26:16+00:00,,0,mattvenn/scan_wrapper,504525819,Verilog,scan_wrapper,7226,2,2022-08-20 15:57:17+00:00,[],https://api.github.com/licenses/apache-2.0
103,https://github.com/yuchen-mei/kairos-caravel.git,2022-06-04 23:50:06+00:00,,3,yuchen-mei/kairos-caravel,499960660,Verilog,kairos-caravel,904540,1,2022-11-03 01:30:42+00:00,[],https://api.github.com/licenses/apache-2.0
104,https://github.com/neelesh19687/verilog.git,2022-05-20 06:48:14+00:00,All projects related to verilog.,0,neelesh19687/verilog,494352851,Verilog,verilog,7068,1,2022-05-20 07:03:16+00:00,[],None
105,https://github.com/oromera/UbSoC.git,2022-05-30 09:18:07+00:00,Implementación del PicoSoC para DE0-nano,0,oromera/UbSoC,497870922,Verilog,UbSoC,122,1,2023-09-22 09:36:19+00:00,[],https://api.github.com/licenses/isc
106,https://github.com/lawrie/binxt_verilog_examples.git,2022-06-09 16:19:05+00:00,Verilog examples for the Blackice Nxt ice40 FPGA board,1,lawrie/binxt_verilog_examples,501726249,Verilog,binxt_verilog_examples,43,1,2022-07-18 18:22:04+00:00,[],None
107,https://github.com/Jon3Y/SHA_1.git,2022-06-13 07:06:58+00:00,SHA-1 RTL code，Matlab & FPGA sim.,1,Jon3Y/SHA_1,502844357,Verilog,SHA_1,799,1,2024-03-28 15:25:46+00:00,[],None
108,https://github.com/gjghlinix/data_dynamic.git,2022-05-22 14:29:50+00:00,数码管的数据进行动态显示,0,gjghlinix/data_dynamic,495084081,Verilog,data_dynamic,255,1,2022-05-30 07:10:42+00:00,[],None
109,https://github.com/ccapen/Verilog-usb-ulpi.git,2022-05-28 14:26:17+00:00,,2,ccapen/Verilog-usb-ulpi,497340493,Verilog,Verilog-usb-ulpi,104,1,2023-07-29 12:20:40+00:00,[],None
110,https://github.com/fguzman82/upb_natalius_soc.git,2022-06-09 01:54:05+00:00,,0,fguzman82/upb_natalius_soc,501470173,Verilog,upb_natalius_soc,59064,1,2023-10-01 08:42:50+00:00,[],https://api.github.com/licenses/apache-2.0
111,https://github.com/vagrantxiao/overlay220611.git,2022-06-11 16:55:39+00:00,,0,vagrantxiao/overlay220611,502406416,Verilog,overlay220611,468128,1,2022-06-11 17:56:48+00:00,[],None
112,https://github.com/Brianwind/Snake_inBasys3.git,2022-06-09 15:32:39+00:00,"The classic Snake game, written in verilog. It runs on Basys3 and comes with 2-player mode and mist mode.",0,Brianwind/Snake_inBasys3,501710956,Verilog,Snake_inBasys3,34,1,2022-06-30 16:17:11+00:00,[],https://api.github.com/licenses/mit
113,https://github.com/bigdot123456/THead100.git,2022-06-09 08:52:10+00:00,base wujian100 from T-semi,0,bigdot123456/THead100,501575943,Verilog,THead100,11055,1,2022-06-10 11:00:03+00:00,[],https://api.github.com/licenses/mit
114,https://github.com/tsssni/mips-c5.git,2022-06-09 01:11:38+00:00,"Design of a multi-circle MIPS CPU, supporting MIPS-C5 and interruption",0,tsssni/mips-c5,501460935,Verilog,mips-c5,28,1,2023-09-22 00:57:54+00:00,[],https://api.github.com/licenses/gpl-3.0
115,https://github.com/DawnBlossomsPluckatDusk/computer_organization-lab.git,2022-06-06 11:54:40+00:00,,1,DawnBlossomsPluckatDusk/computer_organization-lab,500413853,Verilog,computer_organization-lab,5,1,2022-07-06 03:57:38+00:00,[],None
116,https://github.com/Anh-tp-do/NandGame.git,2022-06-06 19:11:11+00:00,A verilog version for Nandgame's solutions,0,Anh-tp-do/NandGame,500562070,Verilog,NandGame,37,1,2022-06-20 03:15:02+00:00,[],None
117,https://github.com/inganault/spdif-to-i2s.git,2022-06-05 20:40:02+00:00,,0,inganault/spdif-to-i2s,500206933,Verilog,spdif-to-i2s,18,1,2023-07-31 05:30:45+00:00,[],None
118,https://github.com/akashpatil98/HDLBits.git,2022-06-01 09:00:47+00:00,This repo contains solutions to HDLBits problem set,0,akashpatil98/HDLBits,498662723,Verilog,HDLBits,51,1,2022-06-01 12:52:21+00:00,[],https://api.github.com/licenses/gpl-3.0
119,https://github.com/XhovaniM8/shiftReg_tests.git,2022-06-14 19:50:04+00:00,A verilog shift register with test bench,0,XhovaniM8/shiftReg_tests,503500188,Verilog,shiftReg_tests,9,1,2023-10-05 14:09:41+00:00,[],None
120,https://github.com/TCL606/MIPS_CPU.git,2022-05-31 10:32:02+00:00,MIPS CPU constructed in verilog,0,TCL606/MIPS_CPU,498289997,Verilog,MIPS_CPU,2055,1,2024-01-07 09:24:46+00:00,"['mips', 'multi-cycle', 'single-cycle', 'cpu']",None
121,https://github.com/T1anyu-zhao/2022Project_Rover.git,2022-05-30 12:23:41+00:00,Mars Rover (auto navigation and manual control),1,T1anyu-zhao/2022Project_Rover,497931762,Verilog,2022Project_Rover,124917,1,2022-10-04 13:34:57+00:00,[],None
122,https://github.com/LorenzoServolini/Minimum-voltage.git,2022-06-18 16:09:28+00:00,Description and synthesis (Register-transfer level) of hardware that takes three voltages as input via A/D converters (using the soc/eoc handshake) and returns the minimum value to the consumer using dav/rfd handshake.,0,LorenzoServolini/Minimum-voltage,504890178,Verilog,Minimum-voltage,22,1,2022-07-25 23:54:39+00:00,"['hardware-description-language', 'verilog', 'register-transfer-level', 'handshake']",None
123,https://github.com/mattvenn/wrapped_scan_test.git,2022-06-22 14:39:42+00:00,,1,mattvenn/wrapped_scan_test,506286300,Verilog,wrapped_scan_test,6470,1,2022-07-02 23:04:47+00:00,[],https://api.github.com/licenses/apache-2.0
124,https://github.com/kazkojima/ad9874iq.git,2022-06-16 01:20:04+00:00,A simple AD9874 SSI receiver with FPGA,0,kazkojima/ad9874iq,503970840,Verilog,ad9874iq,1838,1,2023-07-25 14:58:25+00:00,[],https://api.github.com/licenses/bsd-2-clause
125,https://github.com/crlarsen/fp_as.git,2022-06-17 18:32:35+00:00,"Addition/Subtraction Module for IEEE binary16, binary32, binary64, and binary128 Formats",0,crlarsen/fp_as,504636490,Verilog,fp_as,80,1,2022-11-23 15:38:32+00:00,[],None
126,https://github.com/nimamaguale/hw5.git,2022-05-19 13:30:26+00:00,,0,nimamaguale/hw5,494084076,Verilog,hw5,3,1,2022-05-20 04:06:17+00:00,[],None
127,https://github.com/benkyd/fpga-basics.git,2022-05-26 22:53:11+00:00,A collection of multiple basic FPGA projects on various development boards,0,benkyd/fpga-basics,496794715,Verilog,fpga-basics,35,1,2023-08-20 17:43:51+00:00,[],None
128,https://github.com/akramazizz/RISC_v_Processor.git,2022-05-23 20:16:29+00:00,Verilog Pipeline RICSv Processor  ,0,akramazizz/RISC_v_Processor,495560229,Verilog,RISC_v_Processor,322,1,2023-05-10 10:34:54+00:00,[],None
129,https://github.com/fervenceslau/fpga-de-lite10-vga-game.git,2022-06-07 17:56:39+00:00,A simple dodgeball game using VGA driver to display the game and ADC to read joystick inputs,0,fervenceslau/fpga-de-lite10-vga-game,500949307,Verilog,fpga-de-lite10-vga-game,27452,1,2023-05-16 08:45:15+00:00,[],None
130,https://github.com/Alex-Young1113/2022S-CS207-Digital-logic-final-project-Wordle.git,2022-05-25 06:41:32+00:00,This is the final project for the course CS207 Digital Logic in Sustech,0,Alex-Young1113/2022S-CS207-Digital-logic-final-project-Wordle,496112857,Verilog,2022S-CS207-Digital-logic-final-project-Wordle,2636,1,2022-05-30 13:17:14+00:00,[],https://api.github.com/licenses/mit
131,https://github.com/ombhilare999/Interconnect-from-scratch-in-chisel.git,2022-06-09 15:03:06+00:00,Communication Between two FSMs in chisel,0,ombhilare999/Interconnect-from-scratch-in-chisel,501700128,Verilog,Interconnect-from-scratch-in-chisel,2650,1,2022-10-27 09:17:00+00:00,[],https://api.github.com/licenses/mit
132,https://github.com/surefire01/Sm-bot-.git,2022-06-10 06:36:54+00:00,,1,surefire01/Sm-bot-,501928408,Verilog,Sm-bot-,124,1,2022-06-12 18:39:07+00:00,[],None
133,https://github.com/landingcloud/USTB-SingleCycleCPU.git,2022-06-10 15:44:03+00:00,USTB计组实验，单周期处理器扩展指令bne和slti,0,landingcloud/USTB-SingleCycleCPU,502097513,Verilog,USTB-SingleCycleCPU,4,1,2023-05-18 07:51:45+00:00,[],None
134,https://github.com/ashuthosh-mr/LDPC-RTL.git,2022-05-22 07:23:41+00:00,"This repository contains GF4, GF8 and GF16, RTL LDPC decoder",1,ashuthosh-mr/LDPC-RTL,494988765,Verilog,LDPC-RTL,2065,1,2022-08-04 15:10:53+00:00,[],None
135,https://github.com/h-shawn/CS2306-ArchLabs.git,2022-05-27 12:01:14+00:00,Computer Architecture labs in Verilog,0,h-shawn/CS2306-ArchLabs,496980287,Verilog,CS2306-ArchLabs,4587,1,2023-05-11 02:31:20+00:00,[],None
136,https://github.com/mcleod-ideafix/driver-test.git,2022-05-22 12:38:40+00:00,"Todo el material que tengo sobre el cartucho Driver-Test, más los archivos para crear un clon funcional de dicho cartucho",0,mcleod-ideafix/driver-test,495056011,Verilog,driver-test,1389,1,2023-04-27 07:35:30+00:00,[],https://api.github.com/licenses/gpl-3.0
137,https://github.com/UDXS/ece260c_adpcm_xls.git,2022-06-08 01:23:14+00:00,,0,UDXS/ece260c_adpcm_xls,501057239,Verilog,ece260c_adpcm_xls,1796,1,2022-06-23 19:35:37+00:00,[],None
138,https://github.com/mattvenn/wrapped_mbsFSK.git,2022-06-08 20:35:07+00:00,,0,mattvenn/wrapped_mbsFSK,501402725,Verilog,wrapped_mbsFSK,3479,1,2022-07-02 23:05:00+00:00,[],https://api.github.com/licenses/apache-2.0
139,https://github.com/saraa-mohamedd/Basys3-Calculator.git,2022-06-10 22:27:16+00:00,"A simple arithmetic calculator programmed using Verilog HDL, implemented on a Basys3 board, for the CSCE2301 (Digital Design I) course, in Spring 2022.",0,saraa-mohamedd/Basys3-Calculator,502195971,Verilog,Basys3-Calculator,4,1,2023-06-12 01:09:21+00:00,[],None
140,https://github.com/Sandesh-Ideal/5-stage-RISC-V-pipelined-processor.git,2022-06-20 16:18:20+00:00,RISC-V processor,0,Sandesh-Ideal/5-stage-RISC-V-pipelined-processor,505514178,Verilog,5-stage-RISC-V-pipelined-processor,49,1,2022-06-20 16:56:11+00:00,[],https://api.github.com/licenses/gpl-3.0
141,https://github.com/shihjimmy/NTUEE_Computer_Architecture.git,2022-06-07 15:33:48+00:00,NTUEE Computer architecture ( prof Tsung-Te Liu),1,shihjimmy/NTUEE_Computer_Architecture,500899809,Verilog,NTUEE_Computer_Architecture,21267,1,2024-02-23 07:51:59+00:00,[],None
142,https://github.com/DhurgaJ/ASIC.git,2022-05-29 14:35:33+00:00,,0,DhurgaJ/ASIC,497616484,Verilog,ASIC,120136,1,2022-12-18 12:29:38+00:00,[],None
143,https://github.com/dvaleriu/maze-solver-square-root-calculator.git,2022-05-31 19:10:04+00:00,AC,0,dvaleriu/maze-solver-square-root-calculator,498465586,Verilog,maze-solver-square-root-calculator,827,1,2023-03-11 21:12:03+00:00,[],None
144,https://github.com/samin50/Wall-EE.git,2022-05-23 21:34:24+00:00,,1,samin50/Wall-EE,495580506,Verilog,Wall-EE,376334,1,2023-07-03 14:59:15+00:00,[],None
145,https://github.com/khancuteee/Median_filter.git,2022-06-08 10:01:41+00:00,Median Filter use verilog. ,0,khancuteee/Median_filter,501194254,Verilog,Median_filter,123,1,2023-09-25 08:17:22+00:00,[],None
146,https://github.com/MiSTer-devel/Arcade-Athena_MiSTer.git,2022-06-07 17:49:58+00:00,,4,MiSTer-devel/Arcade-Athena_MiSTer,500947188,Verilog,Arcade-Athena_MiSTer,21269,1,2022-07-31 13:35:35+00:00,[],https://api.github.com/licenses/gpl-2.0
147,https://github.com/osynea/ram-handshakes-.git,2022-05-30 03:21:00+00:00,A module to implement handshake protocol with ram,0,osynea/ram-handshakes-,497774057,Verilog,ram-handshakes-,456,1,2022-09-28 03:31:34+00:00,[],None
148,https://github.com/3ab3at/PacMan-Game.git,2022-05-21 10:12:35+00:00,A PacMan game implemented using Verilog to be deployed on Basys3 board.,0,3ab3at/PacMan-Game,494747611,Verilog,PacMan-Game,7,1,2022-10-21 09:35:22+00:00,[],None
149,https://github.com/Madfet/TangNano-serv.git,2022-06-03 21:27:10+00:00,,0,Madfet/TangNano-serv,499656048,Verilog,TangNano-serv,34,1,2023-09-05 15:26:11+00:00,[],None
150,https://github.com/Jon3Y/RTC_UART_I2C.git,2022-06-13 09:14:58+00:00,"Use PCF8563 and 74HC595 design RTC, involving uart/i2c/hex8.",0,Jon3Y/RTC_UART_I2C,502885576,Verilog,RTC_UART_I2C,1427,1,2024-03-28 15:25:22+00:00,[],None
151,https://github.com/pocy9901/fpga-odocrypt.git,2022-05-27 06:56:51+00:00,,0,pocy9901/fpga-odocrypt,496894426,Verilog,fpga-odocrypt,33,1,2023-09-11 02:19:17+00:00,[],None
152,https://github.com/somewhatdistracted/OpenEnclaveCaravel.git,2022-06-16 00:29:46+00:00,caravel repo for OpenEnclave!,2,somewhatdistracted/OpenEnclaveCaravel,503961482,Verilog,OpenEnclaveCaravel,255826,1,2022-10-11 06:12:07+00:00,[],https://api.github.com/licenses/apache-2.0
153,https://github.com/cobo238/Accelerator-Based-Video-Display.git,2022-05-27 09:25:23+00:00,Verilog Source code that draws a shape onto a VGA monitor using an accelerometer,0,cobo238/Accelerator-Based-Video-Display,496936133,Verilog,Accelerator-Based-Video-Display,19,1,2022-05-31 22:54:01+00:00,[],None
154,https://github.com/kerong2002/HDLbits.git,2022-06-04 12:20:43+00:00,kerong_HDLbits,0,kerong2002/HDLbits,499818013,Verilog,HDLbits,95,1,2023-09-24 00:45:46+00:00,[],None
155,https://github.com/Nguyen-C-Dao/TinyRocket_SoC.git,2022-06-05 15:25:12+00:00,,0,Nguyen-C-Dao/TinyRocket_SoC,500134772,Verilog,TinyRocket_SoC,330887,1,2022-06-11 21:08:20+00:00,[],https://api.github.com/licenses/apache-2.0
156,https://github.com/semify-eda/caravel_wfg.git,2022-06-07 06:32:45+00:00,,0,semify-eda/caravel_wfg,500717851,Verilog,caravel_wfg,430782,1,2022-08-09 08:06:01+00:00,[],https://api.github.com/licenses/apache-2.0
157,https://github.com/NPJ-NPJ/Pulse-Width-Modulation.git,2022-05-22 11:03:22+00:00,PWM in FPGA,0,NPJ-NPJ/Pulse-Width-Modulation,495034495,Verilog,Pulse-Width-Modulation,33,1,2022-06-21 00:07:33+00:00,[],None
158,https://github.com/ElefunAi/risc-proj.git,2022-05-29 00:40:00+00:00,make RISC-V cpu by Verilog,0,ElefunAi/risc-proj,497457523,Verilog,risc-proj,604,1,2023-06-18 02:44:33+00:00,[],https://api.github.com/licenses/apache-2.0
159,https://github.com/Dignity-ghost/easy_ldpc_bf.git,2022-05-25 08:46:03+00:00,,1,Dignity-ghost/easy_ldpc_bf,496151140,Verilog,easy_ldpc_bf,744,1,2023-11-20 16:17:59+00:00,[],None
160,https://github.com/tlevaur/spgd.git,2022-06-13 17:32:59+00:00,GITHUB Repo for SPGD,0,tlevaur/spgd,503053625,Verilog,spgd,74812,1,2024-01-04 09:22:34+00:00,[],https://api.github.com/licenses/gpl-3.0
161,https://github.com/ireneann713/vsdriscv.git,2022-05-24 14:57:30+00:00,,0,ireneann713/vsdriscv,495870830,Verilog,vsdriscv,74,1,2023-10-14 03:23:02+00:00,[],None
162,https://github.com/IanBoyanZhang/SystolicArray.git,2022-06-03 19:17:04+00:00,A naive implementation of systolic array,0,IanBoyanZhang/SystolicArray,499625432,Verilog,SystolicArray,106,1,2023-03-05 05:41:00+00:00,[],None
163,https://github.com/LCT429/FPGA.git,2022-06-01 07:17:32+00:00,就是一个综设实验,0,LCT429/FPGA,498630992,Verilog,FPGA,16,1,2022-06-25 08:48:14+00:00,[],None
164,https://github.com/Birdium/dlco_system.git,2022-06-02 03:28:18+00:00,big homework for dlco-exp,0,Birdium/dlco_system,498977918,Verilog,dlco_system,2134,1,2022-06-23 06:09:44+00:00,[],None
165,https://github.com/1261843107/handshake.git,2022-06-22 14:06:24+00:00,shakehand,0,1261843107/handshake,506273811,Verilog,handshake,132,1,2023-06-04 16:41:20+00:00,[],None
166,https://github.com/fangjh21/MIPS-CPU.git,2022-06-12 04:29:28+00:00,course project of computer architecture ,0,fangjh21/MIPS-CPU,502518248,Verilog,MIPS-CPU,2311,1,2022-12-05 14:50:36+00:00,[],None
167,https://github.com/feliscatuss/32-bit_SinglePrecision_FPU_on_FPGA.git,2022-06-13 03:45:11+00:00,A 32-bit FPU (Adder/Subtracter/Multiplier) in Verilog,0,feliscatuss/32-bit_SinglePrecision_FPU_on_FPGA,502796404,Verilog,32-bit_SinglePrecision_FPU_on_FPGA,684,1,2023-08-06 15:47:40+00:00,[],None
168,https://github.com/junshiuanhsieh/FPGA_RealTimeFaceFilter.git,2022-06-16 09:44:32+00:00,"A real time face effect using FPGA DE2-115, written in verilog",0,junshiuanhsieh/FPGA_RealTimeFaceFilter,504097915,Verilog,FPGA_RealTimeFaceFilter,6118,1,2023-11-07 14:38:21+00:00,[],None
169,https://github.com/Jashshor/4bits_Carry-lookahead_Adder.git,2022-05-30 07:09:30+00:00,4bit超前进位加法器,0,Jashshor/4bits_Carry-lookahead_Adder,497828879,Verilog,4bits_Carry-lookahead_Adder,389,1,2023-10-09 11:46:57+00:00,[],None
170,https://github.com/andy39866821/CVAE-seq2seq-Inference-Model-Implementation.git,2022-05-30 12:59:04+00:00,,0,andy39866821/CVAE-seq2seq-Inference-Model-Implementation,497944475,Verilog,CVAE-seq2seq-Inference-Model-Implementation,8769,1,2022-07-05 22:22:41+00:00,[],None
171,https://github.com/buggins/bcpu.git,2022-06-01 06:45:43+00:00,Barrel CPU / MCU - 4 thread 16/18 bit RISC soft core for FPGA,0,buggins/bcpu,498621834,Verilog,bcpu,21,1,2022-12-06 19:43:40+00:00,[],None
172,https://github.com/buraktoker/POSIT_THESIS_ITU.git,2022-05-30 15:20:40+00:00,The Verilog source files for ITU Master.,0,buraktoker/POSIT_THESIS_ITU,497996612,Verilog,POSIT_THESIS_ITU,18,1,2022-05-31 07:41:45+00:00,[],None
173,https://github.com/duchungle/acor_dct32.git,2022-06-06 07:53:48+00:00,,0,duchungle/acor_dct32,500341183,Verilog,acor_dct32,65529,1,2022-06-08 01:33:18+00:00,[],https://api.github.com/licenses/apache-2.0
174,https://github.com/jotego/jttms.git,2022-06-18 12:37:52+00:00,Verilog modules compatible with TMS videos devices and JTFRAME,0,jotego/jttms,504839815,Verilog,jttms,12202,1,2023-08-19 02:14:35+00:00,[],https://api.github.com/licenses/gpl-3.0
175,https://github.com/chrislepore/Game-Trinity.git,2022-06-17 01:52:04+00:00,,0,chrislepore/Game-Trinity,504361123,Verilog,Game-Trinity,14621,1,2024-02-13 04:52:24+00:00,[],None
176,https://github.com/3ab3at/Digital-Lock.git,2022-05-21 10:07:24+00:00,A digital lock created using Verilog to be deployed on Basys3 Board.,0,3ab3at/Digital-Lock,494746448,Verilog,Digital-Lock,8,1,2023-06-12 09:45:18+00:00,[],None
177,https://github.com/AirsFyp/caravel_FPU_Bfloat_16.git,2022-05-22 04:58:01+00:00,This repository is for Floating Point Unit Bfloat16 precision,1,AirsFyp/caravel_FPU_Bfloat_16,494962889,Verilog,caravel_FPU_Bfloat_16,39360,1,2023-06-05 14:25:31+00:00,[],https://api.github.com/licenses/apache-2.0
178,https://github.com/dinasmh/8b10b.git,2022-05-19 13:41:53+00:00,source code of the 8b10b encoder and decoder (verilog) + testbench (systemverilog),0,dinasmh/8b10b,494088301,Verilog,8b10b,3,1,2022-05-26 17:51:53+00:00,[],None
179,https://github.com/jlykhnnw/riscv_basic.git,2022-06-15 10:16:19+00:00,This project is for practicing riscv cpu core designing,0,jlykhnnw/riscv_basic,503714629,Verilog,riscv_basic,11,1,2022-06-15 11:44:49+00:00,[],None
180,https://github.com/NimraAzmat/Neural-Network-on-FPGA.git,2022-06-03 15:52:47+00:00,Implementation of Neural Network on FPGA (MNIST on Zynet),0,NimraAzmat/Neural-Network-on-FPGA,499568349,Verilog,Neural-Network-on-FPGA,23154,1,2023-03-10 12:31:27+00:00,[],https://api.github.com/licenses/mit
181,https://github.com/lansen31/learngit.git,2022-06-07 11:51:55+00:00,,0,lansen31/learngit,500819068,Verilog,learngit,39393,1,2023-04-16 06:26:26+00:00,[],None
182,https://github.com/Antares-Hans/Valid-Ready-Handshakes.git,2022-06-05 05:36:38+00:00,,0,Antares-Hans/Valid-Ready-Handshakes,500009933,Verilog,Valid-Ready-Handshakes,894,1,2022-09-28 03:33:26+00:00,[],None
183,https://github.com/IObundle/iob-uart16550.git,2022-05-27 11:13:05+00:00,,2,IObundle/iob-uart16550,496966848,Verilog,iob-uart16550,590,1,2023-07-25 14:57:45+00:00,[],
184,https://github.com/BaselAbuHamed/ProjectDigital-ENCS2340-.git,2022-06-12 06:19:51+00:00,,0,BaselAbuHamed/ProjectDigital-ENCS2340-,502535629,Verilog,ProjectDigital-ENCS2340-,321,1,2024-04-04 18:42:00+00:00,[],None
185,https://github.com/hardiksingh933/32_bit_MIPS_Processor.git,2022-06-04 01:56:23+00:00,Verilog source files for a five stage pipelined MIPS processor. Testbench designed to utilize ROM to run instructions and hazards with parallel system checks.,0,hardiksingh933/32_bit_MIPS_Processor,499699017,Verilog,32_bit_MIPS_Processor,11,1,2022-06-11 22:52:23+00:00,[],None
186,https://github.com/JuliusAndreas/Carry-select-adder.git,2022-06-12 22:38:26+00:00,Simulating a carry select adder using Verilog,0,JuliusAndreas/Carry-select-adder,502743502,Verilog,Carry-select-adder,71,1,2023-02-03 07:45:54+00:00,[],None
187,https://github.com/darrinj22/ConvolutionalNeuralNetwork.git,2022-06-12 01:58:14+00:00,,0,darrinj22/ConvolutionalNeuralNetwork,502496556,Verilog,ConvolutionalNeuralNetwork,431,1,2022-06-12 02:09:29+00:00,[],None
188,https://github.com/Yogesh0211/Washing_Machine_Automatic_HDL.git,2022-05-26 16:45:48+00:00,A Washing Machine has been implemented using Verilog HDL on Xilinx ISE.,0,Yogesh0211/Washing_Machine_Automatic_HDL,496698946,Verilog,Washing_Machine_Automatic_HDL,1815,1,2022-05-26 16:56:50+00:00,[],None
189,https://github.com/Ther-nullptr/CPU_model.git,2022-05-26 11:50:00+00:00,CPU model (lab2 for theory class and lab4 for experiment class),0,Ther-nullptr/CPU_model,496599666,Verilog,CPU_model,42,1,2022-06-20 09:08:54+00:00,[],None
190,https://github.com/migliom/USB-Implementation.git,2022-06-08 22:11:08+00:00,,1,migliom/USB-Implementation,501425753,Verilog,USB-Implementation,2938,1,2022-11-01 08:10:33+00:00,[],None
191,https://github.com/agonbor11/cosim.git,2022-06-20 09:59:59+00:00,,0,agonbor11/cosim,505385691,Verilog,cosim,130,1,2024-02-04 03:14:41+00:00,[],None
192,https://github.com/kimd98/Cair2.git,2022-06-07 03:58:29+00:00,"CO2 level monitor app using autonomus HVAC control, real-time. object detection, and mobile app with user interface",0,kimd98/Cair2,500682520,Verilog,Cair2,3902,1,2024-03-27 18:04:51+00:00,[],None
193,https://github.com/SavourySnaX/8088_Core.git,2022-05-23 13:49:52+00:00,Verilog 8088 (and eventually 8086) core - Currently Used in https://github.com/SavourySnaX/MiSTer_KonixMultisystem and based on https://www.reenigne.org/blog/8086-microcode-disassembled/,0,SavourySnaX/8088_Core,495430815,Verilog,8088_Core,492,1,2023-08-14 07:15:03+00:00,[],None
194,https://github.com/wassimramy/MTNCL-Stream-Processor.git,2022-05-25 05:36:08+00:00,,0,wassimramy/MTNCL-Stream-Processor,496096072,Verilog,MTNCL-Stream-Processor,121819,1,2023-06-28 15:13:27+00:00,[],None
195,https://github.com/nimamaguale/hw3.git,2022-05-19 11:05:56+00:00,,0,nimamaguale/hw3,494035764,Verilog,hw3,3,1,2022-05-20 04:06:18+00:00,[],None
196,https://github.com/mertcarabaci/BLG222E-Project2.git,2022-05-20 10:45:37+00:00,,0,mertcarabaci/BLG222E-Project2,494425373,Verilog,BLG222E-Project2,5998,1,2023-11-09 21:46:12+00:00,[],None
197,https://github.com/Jashshor/3_FIFO_MAC.git,2022-06-05 04:46:18+00:00,使用modelsim仿真四个FIFO以太网MAC核回环串在一起,0,Jashshor/3_FIFO_MAC,500002145,Verilog,3_FIFO_MAC,323,1,2023-10-09 11:42:04+00:00,[],None
198,https://github.com/MaxMorning/Phosphorus.git,2022-06-12 06:47:20+00:00,A simple GPU implemented by Verilog which can run on Wishbone bus,1,MaxMorning/Phosphorus,502540587,Verilog,Phosphorus,91,1,2022-08-19 09:40:47+00:00,[],https://api.github.com/licenses/apache-2.0
199,https://github.com/niannyyu/Bus_Handshakes.git,2022-06-03 13:05:32+00:00,总线握手：a) 总线master发出data信号，同时master用valid信号拉高表示data有效； b) 总线slave发出ready信号，ready信号拉高表示slave可以接收数据； c) 当valid和slave同时为高时，表示data信号从master到slave发送接收成功。,0,niannyyu/Bus_Handshakes,499514519,Verilog,Bus_Handshakes,725,1,2022-09-28 03:31:05+00:00,[],None
200,https://github.com/eemreeh/wrapped_PrimitiveCalculator.git,2022-05-31 20:16:43+00:00,,1,eemreeh/wrapped_PrimitiveCalculator,498484626,Verilog,wrapped_PrimitiveCalculator,4347,1,2023-11-19 23:08:45+00:00,[],https://api.github.com/licenses/apache-2.0
201,https://github.com/Chenfei-Liao/Great-Verilog.git,2022-05-25 09:25:37+00:00,Verilog Training,0,Chenfei-Liao/Great-Verilog,496164110,Verilog,Great-Verilog,39,1,2023-04-20 05:40:58+00:00,[],None
202,https://github.com/S-Jahania-Shah/T-Rex-Chrome-Dino-Game-using-Verilog.git,2022-05-26 11:19:03+00:00,The purpose of this project was to use the Verilog programming language to port Google Chrome’s T-Rex mini-game to an FPGA Basys 3 board using Vivado.,0,S-Jahania-Shah/T-Rex-Chrome-Dino-Game-using-Verilog,496590496,Verilog,T-Rex-Chrome-Dino-Game-using-Verilog,1119,1,2022-11-26 05:27:11+00:00,[],None
203,https://github.com/secworks/qarma.git,2022-05-25 08:17:36+00:00,Verilog implementation of the lightweight block cipher QARMA,1,secworks/qarma,496142134,Verilog,qarma,13,1,2022-06-08 23:54:00+00:00,[],https://api.github.com/licenses/bsd-2-clause
204,https://github.com/crlarsen/fp_add_exact.git,2022-06-02 17:27:24+00:00,IEEE 754 binary64 Additional Circuit,1,crlarsen/fp_add_exact,499228314,Verilog,fp_add_exact,11,1,2023-09-25 12:56:50+00:00,[],None
205,https://github.com/dzx-dzx/Handshake.git,2022-05-19 02:50:05+00:00,,0,dzx-dzx/Handshake,493898240,Verilog,Handshake,58,1,2023-03-10 07:15:08+00:00,[],None
206,https://github.com/DDPlay123/FPGA-Hw.git,2022-06-20 08:23:35+00:00,(110-2 ) FPGA Homework,0,DDPlay123/FPGA-Hw,505354870,Verilog,FPGA-Hw,114690,1,2022-10-19 16:06:09+00:00,[],None
207,https://github.com/Jazeljung/Multi_Channels_BCI.git,2022-05-27 08:06:30+00:00,My graduate project is right here.,0,Jazeljung/Multi_Channels_BCI,496912243,Verilog,Multi_Channels_BCI,103,1,2023-04-06 16:34:52+00:00,"['bci', 'fpga']",None
208,https://github.com/milovanovic/gbemac.git,2022-06-17 11:42:18+00:00,A Gigabit Ethernet MAC,0,milovanovic/gbemac,504513002,Verilog,gbemac,132,1,2023-05-05 06:38:19+00:00,[],None
209,https://github.com/minghungumich/OpenFASOC-RoT-IBEX-AES.git,2022-06-09 00:56:32+00:00,,1,minghungumich/OpenFASOC-RoT-IBEX-AES,501457949,Verilog,OpenFASOC-RoT-IBEX-AES,259119,1,2024-01-12 00:04:34+00:00,[],https://api.github.com/licenses/apache-2.0
210,https://github.com/Manar20575/Architecture-Project.git,2022-06-08 17:21:32+00:00,A simple bank system done with verlilog then converted into C,0,Manar20575/Architecture-Project,501346107,Verilog,Architecture-Project,572,1,2024-03-18 14:17:04+00:00,[],None
211,https://github.com/Abhijith18/Approximate-FFT.git,2022-05-20 08:01:48+00:00,,0,Abhijith18/Approximate-FFT,494374865,Verilog,Approximate-FFT,934,1,2023-07-25 05:55:30+00:00,[],None
212,https://github.com/birdx-007/MIPS_single_cycle_CPU.git,2022-06-20 03:10:08+00:00,基于MIPS指令集子集的单周期处理器设计,0,birdx-007/MIPS_single_cycle_CPU,505278364,Verilog,MIPS_single_cycle_CPU,195,1,2023-05-31 11:28:28+00:00,[],https://api.github.com/licenses/apache-2.0
213,https://github.com/Tech-Gipsy/AHB2APB-BRIDGE-RTL-DESIGN-USING-VERILOG-HDL.git,2022-06-17 09:58:48+00:00,Implemented AHB2APB Bridge using VERILOG HDL and simulated in Xilinix and intel quartus prime,1,Tech-Gipsy/AHB2APB-BRIDGE-RTL-DESIGN-USING-VERILOG-HDL,504482123,Verilog,AHB2APB-BRIDGE-RTL-DESIGN-USING-VERILOG-HDL,2137,1,2022-06-17 10:17:50+00:00,[],https://api.github.com/licenses/mit
214,https://github.com/eric070021/2019-Spring-Computer-Organization.git,2022-06-14 16:31:26+00:00,"This course introduces the basic hardware structure of a modern programmable computer. Students will learn how to design a processor, how to design large/fast memory and storage systems, and understand why an integration of them (processor, memory, storage, etc) performs as a modern computer does.",0,eric070021/2019-Spring-Computer-Organization,503438933,Verilog,2019-Spring-Computer-Organization,4159,1,2023-02-07 09:57:38+00:00,"['verilog', 'cpu', 'pipeline', 'memory-allocation']",None
215,https://github.com/aerrojuakhil/Verilog-codes.git,2022-06-09 08:10:48+00:00,,0,aerrojuakhil/Verilog-codes,501562476,Verilog,Verilog-codes,11,1,2022-06-09 15:45:18+00:00,[],None
216,https://github.com/Kiyanda/miniCPU.git,2022-06-15 12:50:34+00:00,A miniCPU implemented with Verilog,0,Kiyanda/miniCPU,503763413,Verilog,miniCPU,5,1,2023-01-16 03:31:49+00:00,[],None
217,https://github.com/mbuku/Polar-Code.git,2022-05-24 07:09:34+00:00,,0,mbuku/Polar-Code,495709021,Verilog,Polar-Code,273,1,2023-07-19 08:06:50+00:00,[],https://api.github.com/licenses/mit
218,https://github.com/liby6/iic_driver.git,2022-05-19 07:45:30+00:00,iic、 eeprom、 pmbus,0,liby6/iic_driver,493971390,Verilog,iic_driver,3,1,2024-04-05 14:46:30+00:00,[],None
219,https://github.com/zona8815/Reliable-Advanced-Encryption-Standard-System-Design-with-PUF-based-Key-Generators.git,2022-05-21 22:08:25+00:00,,0,zona8815/Reliable-Advanced-Encryption-Standard-System-Design-with-PUF-based-Key-Generators,494905093,Verilog,Reliable-Advanced-Encryption-Standard-System-Design-with-PUF-based-Key-Generators,41,1,2024-04-09 10:45:18+00:00,[],https://api.github.com/licenses/mit
220,https://github.com/duonglvtnaist/scrypt_multi_romix_fpgas.git,2022-05-25 14:30:34+00:00,Scrypt implementation for FPGAs ,0,duonglvtnaist/scrypt_multi_romix_fpgas,496266817,Verilog,scrypt_multi_romix_fpgas,2156,0,2022-05-25 14:40:18+00:00,[],https://api.github.com/licenses/gpl-3.0
221,https://github.com/AndrianDevFPGA/RMI.git,2022-05-24 13:23:20+00:00,,0,AndrianDevFPGA/RMI,495833545,Verilog,RMI,2,0,2022-05-24 13:24:39+00:00,[],None
222,https://github.com/LamTS72/Verilog_FPGA.git,2022-05-25 07:43:58+00:00,,0,LamTS72/Verilog_FPGA,496131511,Verilog,Verilog_FPGA,29803,0,2022-05-25 07:45:11+00:00,[],None
223,https://github.com/qianchen-123/spinal_axi.git,2022-05-29 22:12:05+00:00,,0,qianchen-123/spinal_axi,497720734,Verilog,spinal_axi,7775,0,2022-08-07 11:42:39+00:00,[],None
224,https://github.com/adwranovsky/quick_spi.git,2022-05-29 23:11:30+00:00,A quick way to integrate a SPI peripheral into an FPGA design,0,adwranovsky/quick_spi,497729790,Verilog,quick_spi,114,0,2022-05-29 23:12:42+00:00,[],
225,https://github.com/foralivin/keyakarthik-MIPS-Processor.git,2022-05-20 16:33:13+00:00, 5 stage Pipeline in the MIPS Design with stalling operations on data hazard detection and data forwarding  ,0,foralivin/keyakarthik-MIPS-Processor,494536463,Verilog,keyakarthik-MIPS-Processor,77,0,2022-05-20 16:33:54+00:00,[],None
226,https://github.com/jonathanmorenofarias/GroupProject.git,2022-05-19 02:44:33+00:00,,0,jonathanmorenofarias/GroupProject,493896946,Verilog,GroupProject,9642,0,2023-01-21 00:14:39+00:00,[],None
227,https://github.com/3ab3at/PacMan-with-Cheese.git,2022-05-21 10:15:45+00:00,An enhanced version of the implemented PacMan Game with the options to eat cheese as well.,0,3ab3at/PacMan-with-Cheese,494748328,Verilog,PacMan-with-Cheese,7,0,2022-05-21 10:16:32+00:00,[],None
228,https://github.com/Hyunok-Kim/axi-vip-examples.git,2022-05-21 02:57:43+00:00,,0,Hyunok-Kim/axi-vip-examples,494664634,Verilog,axi-vip-examples,1844,0,2022-05-25 01:39:21+00:00,[],https://api.github.com/licenses/mit
229,https://github.com/SomeSadBears/VGA_Pong.git,2022-06-06 16:28:14+00:00,Implements a VGA driver and a simple pong game. Uses Verilog.,1,SomeSadBears/VGA_Pong,500509866,Verilog,VGA_Pong,8,0,2022-06-06 16:28:38+00:00,[],None
230,https://github.com/sbrezenski/brick-breaker.git,2022-06-07 02:43:56+00:00,,0,sbrezenski/brick-breaker,500665689,Verilog,brick-breaker,72663,0,2022-06-07 02:51:19+00:00,[],None
231,https://github.com/ryhnAp/CAD-mid.git,2022-05-22 10:01:49+00:00,CAD midterm,0,ryhnAp/CAD-mid,495021317,Verilog,CAD-mid,1727,0,2022-12-23 12:47:44+00:00,[],None
232,https://github.com/e10-nguyen/FPGA-Counter.git,2022-06-03 04:08:26+00:00,Binary counter ranging from 0 - 7,0,e10-nguyen/FPGA-Counter,499374828,Verilog,FPGA-Counter,1173,0,2022-06-03 04:10:42+00:00,[],None
233,https://github.com/dilipboidya/VerilogProject.git,2022-06-03 14:54:17+00:00,,0,dilipboidya/VerilogProject,499550390,Verilog,VerilogProject,9,0,2022-06-03 16:03:57+00:00,[],https://api.github.com/licenses/mit
234,https://github.com/rere950303/study-logicdesign.git,2022-06-03 12:28:41+00:00,,0,rere950303/study-logicdesign,499503186,Verilog,study-logicdesign,1023,0,2022-06-03 12:32:56+00:00,[],None
235,https://github.com/dramoz/arty-s7.git,2022-06-04 10:02:32+00:00,Xilinx Arty-S7 Projects and Tutorials,0,dramoz/arty-s7,499787978,Verilog,arty-s7,46329,0,2022-07-20 20:11:25+00:00,[],https://api.github.com/licenses/mit
236,https://github.com/SighingSnow/npcpu-single-clock.git,2022-06-03 12:25:33+00:00,My single clock riscv32i-cpu,0,SighingSnow/npcpu-single-clock,499502258,Verilog,npcpu-single-clock,2671,0,2022-06-03 12:31:55+00:00,[],None
237,https://github.com/abdallahahmedali/AES-Advanced-Encryption-Standard.git,2022-06-04 13:03:27+00:00,AES (Advanced Encryption Standard) modules implementation using Verilog.,0,abdallahahmedali/AES-Advanced-Encryption-Standard,499828013,Verilog,AES-Advanced-Encryption-Standard,28,0,2022-06-04 13:15:02+00:00,[],None
238,https://github.com/Jiahao-LI-QD/Verilog-CPU-simulation.git,2022-06-08 02:53:44+00:00,verilog CPU simulation sequentially,0,Jiahao-LI-QD/Verilog-CPU-simulation,501078295,Verilog,Verilog-CPU-simulation,660,0,2022-06-08 02:57:17+00:00,[],None
239,https://github.com/kasireddygariDineshKumarReddy/verilogprogramsforVLSI.git,2022-06-05 01:56:10+00:00,,0,kasireddygariDineshKumarReddy/verilogprogramsforVLSI,499977199,Verilog,verilogprogramsforVLSI,7,0,2022-06-05 12:33:12+00:00,[],None
240,https://github.com/majdbiw4200/VGA_Controller_on_Basys3DevBoard_FPGA.git,2022-05-25 12:57:27+00:00,The project is simple VGA controller for Basys3 dev board with Uart module as well to choose from different patterns to display and a 7 segment display to show the pressed key in hex format,0,majdbiw4200/VGA_Controller_on_Basys3DevBoard_FPGA,496231454,Verilog,VGA_Controller_on_Basys3DevBoard_FPGA,1777,0,2022-05-25 13:05:15+00:00,[],https://api.github.com/licenses/mit
241,https://github.com/aileneiioana/Circuit-Inmultire-Secventiala.git,2022-05-25 19:10:56+00:00,,0,aileneiioana/Circuit-Inmultire-Secventiala,496358790,Verilog,Circuit-Inmultire-Secventiala,733,0,2022-05-25 19:12:14+00:00,[],None
242,https://github.com/erosayhi/OpenSync.git,2022-05-27 09:47:47+00:00,OpenSync is a programmable framework enbling diverse clock synchronization on the unified  hardware in deterministic Ethernet.,0,erosayhi/OpenSync,496942819,Verilog,OpenSync,700,0,2022-05-27 09:59:35+00:00,[],None
243,https://github.com/Ismaelc78/Cascaded-Decade-Counters-.git,2022-05-29 01:29:39+00:00,Bidirectional counter (0.00-99.9) driven by a 10Hz clock. 7-seg displays on Altera De1 SoC,0,Ismaelc78/Cascaded-Decade-Counters-,497463869,Verilog,Cascaded-Decade-Counters-,3304,0,2022-05-29 02:10:22+00:00,[],None
244,https://github.com/pranavprabhu01/DSP_FIR_Filter_Verilog.git,2022-06-02 06:25:20+00:00,4-Tap DSP FIR Filter implemented using Verilog (Intel Quartus Prime),0,pranavprabhu01/DSP_FIR_Filter_Verilog,499017203,Verilog,DSP_FIR_Filter_Verilog,20,0,2022-06-03 10:24:19+00:00,[],https://api.github.com/licenses/gpl-3.0
245,https://github.com/Boiapple1/Verilogproject.git,2022-06-01 06:37:55+00:00,,0,Boiapple1/Verilogproject,498619678,Verilog,Verilogproject,14808,0,2022-10-31 16:00:10+00:00,[],None
246,https://github.com/myg36t91/Intern-FPGA-Record.git,2022-05-27 14:56:25+00:00,Opened a road of no return for my digital IC design.,0,myg36t91/Intern-FPGA-Record,497037186,Verilog,Intern-FPGA-Record,3199,0,2022-09-16 01:07:01+00:00,[],https://api.github.com/licenses/gpl-3.0
247,https://github.com/Ablabla0403/ICD_final.git,2022-05-27 13:28:08+00:00,,0,Ablabla0403/ICD_final,497007276,Verilog,ICD_final,34182,0,2022-05-27 13:32:17+00:00,[],None
248,https://github.com/ICL-Year-2-Project-2021-2022/Vision.git,2022-05-24 10:31:07+00:00,Both the quartus and python experiments,0,ICL-Year-2-Project-2021-2022/Vision,495775476,Verilog,Vision,1382983,0,2022-10-20 16:11:58+00:00,[],None
249,https://github.com/sabrinayhu/caravel_example.git,2022-05-24 19:53:00+00:00,,0,sabrinayhu/caravel_example,495968314,Verilog,caravel_example,51883,0,2022-05-25 19:44:00+00:00,[],https://api.github.com/licenses/apache-2.0
250,https://github.com/prashantgit1/ElectronicsVLSI.git,2022-05-20 17:11:55+00:00,VLSI related projects and resources,0,prashantgit1/ElectronicsVLSI,494547765,Verilog,ElectronicsVLSI,85,0,2022-06-08 05:14:31+00:00,[],None
251,https://github.com/KKPROGRAMING/Computer-Organization.git,2022-05-24 15:17:42+00:00,experiment codes of CO course,0,KKPROGRAMING/Computer-Organization,495878572,Verilog,Computer-Organization,34,0,2022-05-24 15:18:33+00:00,[],None
252,https://github.com/alexblue0329/PRNG.git,2022-05-19 08:05:44+00:00,,0,alexblue0329/PRNG,493977822,Verilog,PRNG,1,0,2022-05-19 08:06:13+00:00,[],None
253,https://github.com/oldiss/GB_MMC3.git,2022-06-01 02:50:01+00:00,,0,oldiss/GB_MMC3,498569510,Verilog,GB_MMC3,1,0,2022-06-01 02:54:33+00:00,[],None
254,https://github.com/sayam-naqvi/FPU_Bfloat_new.git,2022-05-30 19:06:37+00:00,APR,0,sayam-naqvi/FPU_Bfloat_new,498066715,Verilog,FPU_Bfloat_new,8498,0,2022-05-30 19:10:17+00:00,[],None
255,https://github.com/TakoyarouVR/RamenIC.git,2022-06-01 03:07:58+00:00,This is a timer IC to help up cook Ramen,0,TakoyarouVR/RamenIC,498573527,Verilog,RamenIC,4340,0,2022-06-01 03:08:11+00:00,[],https://api.github.com/licenses/apache-2.0
256,https://github.com/Anvay-7/Dadda_Wallace_multipliers.git,2022-05-30 18:21:13+00:00,,0,Anvay-7/Dadda_Wallace_multipliers,498053716,Verilog,Dadda_Wallace_multipliers,85,0,2022-05-30 18:21:51+00:00,[],None
257,https://github.com/Gurpreet11903460/4bit-ALU.git,2022-06-09 06:42:27+00:00,,0,Gurpreet11903460/4bit-ALU,501535128,Verilog,4bit-ALU,5,0,2022-06-09 06:43:26+00:00,[],https://api.github.com/licenses/apache-2.0
258,https://github.com/Zo-ran/RISC-V-SINGLE-CLOCK-CPU.git,2022-06-10 02:55:27+00:00,,0,Zo-ran/RISC-V-SINGLE-CLOCK-CPU,501880033,Verilog,RISC-V-SINGLE-CLOCK-CPU,6044,0,2022-06-10 02:57:42+00:00,[],None
259,https://github.com/tinyansun/ICD_project.git,2022-06-10 08:12:23+00:00,,0,tinyansun/ICD_project,501957211,Verilog,ICD_project,17464,0,2022-06-10 08:15:11+00:00,[],None
260,https://github.com/thangND157/RISCV-single-cycle.git,2022-06-14 06:17:14+00:00,,0,thangND157/RISCV-single-cycle,503232631,Verilog,RISCV-single-cycle,5,0,2022-06-15 03:17:39+00:00,[],None
261,https://github.com/samuelpriyadarshan/16bit_microprocessor.git,2022-06-15 00:21:20+00:00,16-bit RISC Harvard-Architecture Microprocessor ,0,samuelpriyadarshan/16bit_microprocessor,503560776,Verilog,16bit_microprocessor,970,0,2022-10-17 08:40:45+00:00,[],None
262,https://github.com/yehiaz2409/Calculator-Simulation-.git,2022-06-17 12:40:33+00:00,,0,yehiaz2409/Calculator-Simulation-,504529979,Verilog,Calculator-Simulation-,3,0,2022-06-17 12:44:38+00:00,[],None
263,https://github.com/RobinGoeree2/FPGA-Software-Defined-Radio.git,2022-06-16 10:46:19+00:00,,0,RobinGoeree2/FPGA-Software-Defined-Radio,504116523,Verilog,FPGA-Software-Defined-Radio,152876,0,2022-06-16 13:11:49+00:00,[],None
264,https://github.com/DDPlay123/FPGA-Game.git,2022-06-20 08:31:03+00:00,(110-2) FPGA - Final Project,0,DDPlay123/FPGA-Game,505357232,Verilog,FPGA-Game,34054,0,2022-07-08 11:29:43+00:00,[],None
265,https://github.com/alikhm0/final-ca-DLD.git,2022-06-21 05:21:04+00:00,,0,alikhm0/final-ca-DLD,505700576,Verilog,final-ca-DLD,4450,0,2022-06-21 05:24:56+00:00,[],None
266,https://github.com/hactinhhai123/Vending-machine.git,2022-06-21 14:46:02+00:00,,0,hactinhhai123/Vending-machine,505884692,Verilog,Vending-machine,1,0,2022-06-21 14:50:36+00:00,[],None
267,https://github.com/hactinhhai123/Modified-Booth-Multiplier-.git,2022-06-21 16:21:33+00:00,,0,hactinhhai123/Modified-Booth-Multiplier-,505919405,Verilog,Modified-Booth-Multiplier-,1,0,2022-06-21 16:26:01+00:00,[],None
268,https://github.com/Must-Hard/Breathing-lamp.git,2022-06-22 01:38:39+00:00,Breathing lamp realized by FPGA,0,Must-Hard/Breathing-lamp,506059619,Verilog,Breathing-lamp,61,0,2022-06-22 01:41:22+00:00,[],None
269,https://github.com/chunsubin/FW_soobin.git,2022-06-22 06:08:55+00:00,,0,chunsubin/FW_soobin,506119298,Verilog,FW_soobin,229,0,2022-06-22 06:10:13+00:00,[],None
270,https://github.com/antonblaise/SelectionSort_ASM.git,2022-06-22 12:51:01+00:00,Selection Sort algorithm with Verilog HDL and state machine,0,antonblaise/SelectionSort_ASM,506245779,Verilog,SelectionSort_ASM,7,0,2022-06-22 12:51:08+00:00,[],https://api.github.com/licenses/mit
271,https://github.com/sudo-elamor/EE2003_dibs.git,2022-06-12 18:45:26+00:00,,0,sudo-elamor/EE2003_dibs,502700241,Verilog,EE2003_dibs,97,0,2022-06-12 18:47:25+00:00,[],https://api.github.com/licenses/mit
272,https://github.com/YingHREN/Caravel__NNgen.git,2022-06-08 09:27:27+00:00,,0,YingHREN/Caravel__NNgen,501183049,Verilog,Caravel__NNgen,8241,0,2022-06-08 09:32:06+00:00,[],https://api.github.com/licenses/apache-2.0
273,https://github.com/sayam-naqvi/FPU_BFLOAT_16.git,2022-05-29 17:20:38+00:00,PNR FLOW,0,sayam-naqvi/FPU_BFLOAT_16,497659154,Verilog,FPU_BFLOAT_16,8914,0,2022-05-29 17:26:49+00:00,[],None
274,https://github.com/klasnordmark/shift_add_multiplier.git,2022-06-11 10:16:31+00:00,A shift-and-add multiplier with AXI4S-compatible interface.,0,klasnordmark/shift_add_multiplier,502314781,Verilog,shift_add_multiplier,9,0,2022-06-11 11:01:05+00:00,[],https://api.github.com/licenses/apache-2.0
275,https://github.com/nuraymamut/baggage_drop.git,2022-06-10 19:11:22+00:00,,0,nuraymamut/baggage_drop,502154330,Verilog,baggage_drop,9,0,2022-06-10 19:15:12+00:00,[],None
276,https://github.com/LJQ0727/mips_pipelined_cpu.git,2022-05-27 00:43:56+00:00,Verilog implementation of a 5-stage pipelined MIPS CPU,0,LJQ0727/mips_pipelined_cpu,496815385,Verilog,mips_pipelined_cpu,635,0,2023-04-19 07:41:29+00:00,[],None
277,https://github.com/DiasGomes/Processador-monociclo-8bits.git,2022-06-10 02:04:03+00:00,Processador nRisc monociclo de 8bits desenvolvido para a disciplina de Arquitetura e Organização de Computadores I,0,DiasGomes/Processador-monociclo-8bits,501869010,Verilog,Processador-monociclo-8bits,460,0,2022-06-10 02:34:32+00:00,[],None
278,https://github.com/MiangMG/DatenLord_t2.git,2022-06-10 09:54:35+00:00,假定slave的ready信号不满足时序要求，要对ready信号用寄存器打一拍，实现该总线握手场景；,0,MiangMG/DatenLord_t2,501989801,Verilog,DatenLord_t2,506,0,2022-06-10 10:02:13+00:00,[],None
279,https://github.com/tanvirarafin/eegr463_submission.git,2022-06-13 17:39:46+00:00,,0,tanvirarafin/eegr463_submission,503055767,Verilog,eegr463_submission,51887,0,2022-06-13 17:59:43+00:00,[],https://api.github.com/licenses/apache-2.0
280,https://github.com/sergey-korobko/Verilog_labs.git,2022-06-09 16:40:16+00:00,,0,sergey-korobko/Verilog_labs,501733107,Verilog,Verilog_labs,8,0,2022-06-09 19:34:03+00:00,[],None
281,https://github.com/Madhurb21/UnderTheHood.git,2022-06-13 06:49:23+00:00,,0,Madhurb21/UnderTheHood,502838485,Verilog,UnderTheHood,212,0,2023-07-09 06:47:06+00:00,[],None
282,https://github.com/danielscher/Single-cycle-MIPS-processor.git,2022-06-13 15:59:21+00:00,,0,danielscher/Single-cycle-MIPS-processor,503023524,Verilog,Single-cycle-MIPS-processor,233,0,2022-06-28 08:30:24+00:00,[],None
283,https://github.com/c28504693/HW2-blocking-noblocking.git,2022-06-11 11:56:16+00:00,,0,c28504693/HW2-blocking-noblocking,502335145,Verilog,HW2-blocking-noblocking,4,0,2022-06-11 12:01:29+00:00,[],None
284,https://github.com/ranu060/CSE120-labs.git,2022-06-10 22:05:06+00:00,,1,ranu060/CSE120-labs,502192218,Verilog,CSE120-labs,35,0,2022-06-10 22:10:27+00:00,[],None
285,https://github.com/erdem-kose/dualport-blockram.git,2022-05-20 20:39:51+00:00,Dualport block ram inferring in VHDL and Verilog,0,erdem-kose/dualport-blockram,494601143,Verilog,dualport-blockram,13,0,2022-05-20 20:39:56+00:00,[],https://api.github.com/licenses/gpl-3.0
286,https://github.com/G1Y2Z3/HW5.git,2022-05-19 03:07:00+00:00,,0,G1Y2Z3/HW5,493902143,Verilog,HW5,2,0,2022-05-19 03:07:48+00:00,[],None
287,https://github.com/Yen-Jen-Lo/weektwelve.git,2022-05-19 06:38:45+00:00,,0,Yen-Jen-Lo/weektwelve,493950575,Verilog,weektwelve,2,0,2022-05-19 06:39:39+00:00,[],None
288,https://github.com/anshangPro/CPUProj.git,2022-05-19 13:41:23+00:00,,0,anshangPro/CPUProj,494088117,Verilog,CPUProj,33217,0,2022-07-19 15:12:52+00:00,[],None
289,https://github.com/TanItech/Stack-Queue-Verilog.git,2022-05-19 03:23:31+00:00,,0,TanItech/Stack-Queue-Verilog,493905850,Verilog,Stack-Queue-Verilog,60,0,2022-05-19 03:30:18+00:00,[],None
290,https://github.com/frank355325/homework4.git,2022-05-19 12:20:32+00:00,,0,frank355325/homework4,494059430,Verilog,homework4,4,0,2022-05-19 12:22:00+00:00,[],None
291,https://github.com/minhtuyen2305/Digital-Logic-Design-Intel-FPGA.git,2022-05-20 14:20:20+00:00,Laboratory Excercise of Intel,0,minhtuyen2305/Digital-Logic-Design-Intel-FPGA,494493294,Verilog,Digital-Logic-Design-Intel-FPGA,9,0,2022-05-20 14:23:20+00:00,[],None
292,https://github.com/yellowblacksnek/func_circ3.git,2022-05-24 08:04:04+00:00,,0,yellowblacksnek/func_circ3,495726478,Verilog,func_circ3,1724,0,2022-05-30 19:49:26+00:00,[],None
293,https://github.com/LeoPGB/SAP-Verilog.git,2022-06-21 20:40:59+00:00,A SAP(SImple as Possible) computer in verilog language project for college,0,LeoPGB/SAP-Verilog,505997367,Verilog,SAP-Verilog,8,0,2022-06-21 20:44:00+00:00,[],None
294,https://github.com/XinChen9994/Digital-high-speed-circuits.git,2022-06-20 13:25:51+00:00,,0,XinChen9994/Digital-high-speed-circuits,505451992,Verilog,Digital-high-speed-circuits,38,0,2022-08-04 11:43:09+00:00,[],https://api.github.com/licenses/mit
295,https://github.com/372510457/FPGA-Basys3-based-wireless-trolley-control-system.git,2022-06-19 13:14:41+00:00,,0,372510457/FPGA-Basys3-based-wireless-trolley-control-system,505114369,Verilog,FPGA-Basys3-based-wireless-trolley-control-system,69,0,2022-06-19 13:17:51+00:00,[],None
296,https://github.com/dnjayasinghe/SASEBOGIII-with-SASEBOG-AES.git,2022-05-25 11:05:53+00:00,This repository maintains the hardware AES circuit from SASEBO G to use with SASEBO GIII hardware board,0,dnjayasinghe/SASEBOGIII-with-SASEBOG-AES,496194828,Verilog,SASEBOGIII-with-SASEBOG-AES,25,0,2022-05-25 11:06:00+00:00,[],https://api.github.com/licenses/mit
297,https://github.com/RyanMcBrayer/ProcessorDesign.git,2022-05-24 20:15:33+00:00,A processor implementing the 16-bit WISC-SP13 ISA (Based off the MIPS R2000 32-bit architecture). Implemented using Verilog HDL.,0,RyanMcBrayer/ProcessorDesign,495974596,Verilog,ProcessorDesign,1468,0,2022-08-25 19:44:17+00:00,[],None
298,https://github.com/Hetsoni2002/cache_memory.git,2022-06-03 15:37:36+00:00,,0,Hetsoni2002/cache_memory,499563845,Verilog,cache_memory,6311,0,2022-06-03 15:38:06+00:00,[],https://api.github.com/licenses/mit
299,https://github.com/Mohammadbadawi01/Verilog-language-design-an-4bit-ALU-that-capable-of-performing-four-operations-AND-OR-ADD-SUB.git,2022-06-02 21:01:03+00:00,4bit sum-add-or-and with mux 4x1,0,Mohammadbadawi01/Verilog-language-design-an-4bit-ALU-that-capable-of-performing-four-operations-AND-OR-ADD-SUB,499289550,Verilog,Verilog-language-design-an-4bit-ALU-that-capable-of-performing-four-operations-AND-OR-ADD-SUB,36,0,2023-01-21 18:57:39+00:00,[],None
300,https://github.com/Agam2002/Agam2002.git,2022-06-02 17:24:08+00:00,Config files for my GitHub profile.,0,Agam2002/Agam2002,499227309,Verilog,Agam2002,508,0,2023-06-24 05:06:09+00:00,"['config', 'github-config']",None
301,https://github.com/marybelb/ALU-calculator.git,2022-05-25 17:19:55+00:00,Implement an ALU calculator on the FPGA,0,marybelb/ALU-calculator,496325939,Verilog,ALU-calculator,12,0,2022-05-25 17:27:30+00:00,[],None
302,https://github.com/kimhw99/mips_processor.git,2022-05-27 01:45:20+00:00,A Simplified MIPS Processor,0,kimhw99/mips_processor,496827461,Verilog,mips_processor,12,0,2022-05-27 01:46:48+00:00,[],None
303,https://github.com/sidharthharidas01/4-input-16bit--sorter-descending-order-.git,2022-05-26 14:15:57+00:00,4 input each of 16bit are sorted in descending order,0,sidharthharidas01/4-input-16bit--sorter-descending-order-,496647908,Verilog,4-input-16bit--sorter-descending-order-,31,0,2022-05-26 14:35:12+00:00,[],None
304,https://github.com/HarithSami/Countdown-Clock.git,2022-05-26 14:18:44+00:00,Countdown clock made for the DE10-Lite FPGA board,0,HarithSami/Countdown-Clock,496648865,Verilog,Countdown-Clock,6,0,2022-06-01 04:29:28+00:00,[],None
305,https://github.com/komalkrishna5/Cascode_dynamic_comparator.git,2022-05-26 14:27:33+00:00,cascode cross coupled stage dynamic comparator,0,komalkrishna5/Cascode_dynamic_comparator,496652214,Verilog,Cascode_dynamic_comparator,3342,0,2022-05-26 15:25:48+00:00,[],https://api.github.com/licenses/apache-2.0
306,https://github.com/kalptechs/nano.git,2022-06-22 17:25:04+00:00,Kalp Nano IoT Contoller,0,kalptechs/nano,506342978,Verilog,nano,49621,0,2022-06-22 17:51:33+00:00,[],https://api.github.com/licenses/apache-2.0
307,https://github.com/SorooshHamedi/Digital-Logic-Design-Fall-2020.git,2022-06-20 17:09:31+00:00,,0,SorooshHamedi/Digital-Logic-Design-Fall-2020,505530256,Verilog,Digital-Logic-Design-Fall-2020,219,0,2022-06-26 19:12:44+00:00,[],None
308,https://github.com/DouglasWWolf/blink_led.git,2022-06-16 20:54:36+00:00,FPGA blinking led demos,0,DouglasWWolf/blink_led,504303193,Verilog,blink_led,52,0,2022-06-16 20:58:08+00:00,[],None
309,https://github.com/EiranAmador/Arquitectura2022.git,2022-06-17 04:14:43+00:00,,0,EiranAmador/Arquitectura2022,504390386,Verilog,Arquitectura2022,120,0,2022-06-17 04:16:33+00:00,[],None
310,https://github.com/FGranda2/N-Tap-FIR-Filter.git,2022-06-20 20:18:25+00:00,Implementation of modular N-Tap FIR Filter in Verilog with testbench using Vivado Design Suite. ,0,FGranda2/N-Tap-FIR-Filter,505586063,Verilog,N-Tap-FIR-Filter,306,0,2023-11-23 09:22:42+00:00,[],None
311,https://github.com/os-fpga/litex_reference_designs.git,2022-06-20 12:48:11+00:00,Litex Reference Designs provides reference designs created out of IP Catalog using Litex integration capabilities.,0,os-fpga/litex_reference_designs,505438688,Verilog,litex_reference_designs,2844,0,2024-01-16 19:34:16+00:00,['sw'],
312,https://github.com/sereen-ba/Design-Assignment-2-Design-of-a-Simple-8-bit-Processor.git,2022-05-24 18:04:54+00:00,,0,sereen-ba/Design-Assignment-2-Design-of-a-Simple-8-bit-Processor,495935564,Verilog,Design-Assignment-2-Design-of-a-Simple-8-bit-Processor,5,0,2024-01-14 14:24:20+00:00,[],None
313,https://github.com/SunilSegu/Image-Processing.git,2022-05-20 12:49:38+00:00,"Using Verilog HDL Language, I have changed the properties of Image by retrieving the hex file of the image.",0,SunilSegu/Image-Processing,494461970,Verilog,Image-Processing,126,0,2022-05-20 12:52:54+00:00,[],None
314,https://github.com/DanMons7er/SerializadorDatosAFE_FPGA.git,2022-05-20 21:46:12+00:00,"En este repositorio se encuentran todos los códigos en lenguaje Python creados para el desarrollo de mi trabajo de grado. También se encuentran archivos complementarios para la implementación del sistema en la tarjeta Nexys Video, y archivos de Excel con los resultados de las pruebas del sistema.",0,DanMons7er/SerializadorDatosAFE_FPGA,494614466,Verilog,SerializadorDatosAFE_FPGA,55541,0,2022-05-23 04:52:15+00:00,[],None
315,https://github.com/frank355325/homework5.git,2022-05-19 13:52:59+00:00,,0,frank355325/homework5,494092695,Verilog,homework5,3,0,2022-05-19 13:58:36+00:00,[],None
316,https://github.com/tanviPDX/ECE-593-MIPS32-Pipeline-Verification.git,2022-05-19 18:40:15+00:00,,1,tanviPDX/ECE-593-MIPS32-Pipeline-Verification,494190246,Verilog,ECE-593-MIPS32-Pipeline-Verification,2572,0,2022-05-19 21:22:23+00:00,[],None
317,https://github.com/lospo109/dldp5.git,2022-05-19 06:45:26+00:00,,0,lospo109/dldp5,493952643,Verilog,dldp5,2,0,2022-05-19 06:45:57+00:00,[],None
318,https://github.com/Must-Hard/Key_seg.git,2022-05-22 12:08:55+00:00,"A scoreboard based on FPGA, realized by key and digital tubes.",0,Must-Hard/Key_seg,495049245,Verilog,Key_seg,4,0,2022-05-22 12:09:58+00:00,[],None
319,https://github.com/antonloof/test_icecube.git,2022-05-20 10:44:23+00:00,me playing with verilog and icecuve,0,antonloof/test_icecube,494425011,Verilog,test_icecube,5,0,2022-05-20 10:46:48+00:00,[],None
320,https://github.com/chuanchuan-Dong/fengniao.git,2022-05-25 11:08:01+00:00,,0,chuanchuan-Dong/fengniao,496195462,Verilog,fengniao,73742,0,2022-05-25 11:12:44+00:00,[],https://api.github.com/licenses/apache-2.0
321,https://github.com/Danil1997Dev/LR5.git,2022-05-25 16:54:31+00:00,,0,Danil1997Dev/LR5,496317785,Verilog,LR5,240,0,2022-05-25 16:55:58+00:00,[],None
322,https://github.com/falcon75/riscv-design.git,2022-05-26 14:34:48+00:00,RISC V Design project GB3.,0,falcon75/riscv-design,496654887,Verilog,riscv-design,88,0,2022-05-26 16:07:04+00:00,[],None
323,https://github.com/ZehraMogulkoc/degital_desing.git,2022-05-26 15:41:41+00:00,some vhdl codes,0,ZehraMogulkoc/degital_desing,496678117,Verilog,degital_desing,72,0,2022-05-26 15:45:40+00:00,[],None
324,https://github.com/Najah-Nasir/FPU_half_precision_dummy2.git,2022-05-31 16:05:55+00:00,,0,Najah-Nasir/FPU_half_precision_dummy2,498406408,Verilog,FPU_half_precision_dummy2,19441,0,2022-05-31 16:08:43+00:00,[],None
325,https://github.com/laraesquivel/Contador_Somador.git,2022-06-01 01:44:47+00:00,PBL da disciplina circuitos digitais,0,laraesquivel/Contador_Somador,498554978,Verilog,Contador_Somador,795,0,2022-06-01 01:49:29+00:00,[],None
326,https://github.com/zzhubk/zzhubk.git,2022-05-30 15:25:21+00:00,Config files for my GitHub profile.,0,zzhubk/zzhubk,497998231,Verilog,zzhubk,13,0,2022-05-30 15:31:33+00:00,"['config', 'github-config']",None
327,https://github.com/nikhilg2121/fpga-blockchain.git,2022-05-29 05:22:13+00:00,,12,nikhilg2121/fpga-blockchain,497497902,Verilog,fpga-blockchain,9747,0,2022-06-04 14:53:33+00:00,[],None
328,https://github.com/Janavind/All_macros.git,2022-06-06 15:59:17+00:00,,0,Janavind/All_macros,500499724,Verilog,All_macros,175106,0,2022-06-06 16:07:08+00:00,[],https://api.github.com/licenses/apache-2.0
329,https://github.com/MiSTer-devel/Arcade-TNKIII_MiSTer.git,2022-06-06 21:20:50+00:00,Beta Core of SNK TNK III before merge with the SNKTripleZ80 Core,2,MiSTer-devel/Arcade-TNKIII_MiSTer,500596939,Verilog,Arcade-TNKIII_MiSTer,38233,0,2023-02-21 16:22:26+00:00,[],https://api.github.com/licenses/gpl-2.0
330,https://github.com/psnukal/Microprocessors-Projects-Using-Icarus-Verilog.git,2022-06-06 10:58:20+00:00,Projects done on Computer Organization and Microprocessors using Icarus Verilog,0,psnukal/Microprocessors-Projects-Using-Icarus-Verilog,500396778,Verilog,Microprocessors-Projects-Using-Icarus-Verilog,47,0,2022-06-06 11:08:10+00:00,[],https://api.github.com/licenses/gpl-3.0
331,https://github.com/okoge-kaz/CLD.git,2022-05-30 02:11:03+00:00,,0,okoge-kaz/CLD,497759489,Verilog,CLD,171,0,2022-05-30 02:11:09+00:00,[],None
332,https://github.com/SangY00n/CSED311_Architecture.git,2022-06-01 14:24:03+00:00,,0,SangY00n/CSED311_Architecture,498768693,Verilog,CSED311_Architecture,1781,0,2022-06-04 12:26:48+00:00,[],None
333,https://github.com/matpotatoes/sync-fifo.git,2022-06-01 20:40:11+00:00,Synchronous FIFO and testbench using Verilog HDL.,0,matpotatoes/sync-fifo,498891974,Verilog,sync-fifo,3,0,2022-06-01 20:41:08+00:00,[],None
334,https://github.com/AbdulrahmanNourEldeen/UART.git,2022-06-02 00:05:45+00:00,,0,AbdulrahmanNourEldeen/UART,498935014,Verilog,UART,83,0,2022-06-02 00:10:45+00:00,[],None
335,https://github.com/andrey-08/Taller-Sistemas-Digitales-P.Final.git,2022-06-02 00:44:22+00:00,"El proyecto consiste en la  implementación de la lógica combinacional de una  máquina de estados finitos, lógica MSI y LSI a través  de lenguaje Verilog, para desarrollar un sistema  operativo de un horno microondas el cual se observa el  funcionamiento a través de la FPGA Nexys 4.",0,andrey-08/Taller-Sistemas-Digitales-P.Final,498942349,Verilog,Taller-Sistemas-Digitales-P.Final,473,0,2022-06-02 00:48:53+00:00,[],None
336,https://github.com/vamsidasari13/-FPGA---Fabric-Design-and-Architecture.git,2022-06-02 05:27:08+00:00,,0,vamsidasari13/-FPGA---Fabric-Design-and-Architecture,499002848,Verilog,-FPGA---Fabric-Design-and-Architecture,12180,0,2022-06-05 01:40:37+00:00,[],None
337,https://github.com/Satyaneshi2346/VerilogProjects.git,2022-06-02 09:10:49+00:00,,0,Satyaneshi2346/VerilogProjects,499067217,Verilog,VerilogProjects,7,0,2022-06-02 09:12:50+00:00,[],None
338,https://github.com/qeeg/IRobot_MiSTer.git,2022-05-24 17:33:39+00:00,,0,qeeg/IRobot_MiSTer,495925606,Verilog,IRobot_MiSTer,81,0,2022-05-24 17:33:44+00:00,[],https://api.github.com/licenses/gpl-2.0
339,https://github.com/FaisalAlshammari/Digital_Logic_Design.git,2022-05-25 00:25:40+00:00,,0,FaisalAlshammari/Digital_Logic_Design,496029155,Verilog,Digital_Logic_Design,80,0,2022-05-25 10:00:02+00:00,[],None
340,https://github.com/JeonSuHyeong/verilog_proj2_submit.git,2022-05-27 09:16:01+00:00,혹시 모를 다른 합성값.,0,JeonSuHyeong/verilog_proj2_submit,496933175,Verilog,verilog_proj2_submit,12,0,2022-05-27 09:16:51+00:00,[],None
341,https://github.com/GeorgieYan/VGA_Clock_Calendar.git,2022-06-15 03:22:28+00:00,,0,GeorgieYan/VGA_Clock_Calendar,503599962,Verilog,VGA_Clock_Calendar,28,0,2022-06-15 23:46:58+00:00,[],None
342,https://github.com/iammkullah/Simple-As-Possible-1-SAP-1-.git,2022-06-18 04:39:22+00:00,"Simple as Possible (SAP) computers in general were designed to introduce beginners to some of the crucial ideas behind computer operations. SAP computers are classified into stages, each stage more evolved and considering more advanced concepts in computer architecture than the previous.The SAP-1 computer is the first stage in this evolution and contains the basic necessities for a functional computer. Its primary purpose is to develop a basic understanding of how a computer works, interacts with memory and other parts of the system like input and output. The instruction set is very limited and is simple.",0,iammkullah/Simple-As-Possible-1-SAP-1-,504744575,Verilog,Simple-As-Possible-1-SAP-1-,429,0,2022-06-18 04:40:34+00:00,[],None
343,https://github.com/LzzCongee/A-miniCPU-friendly-guacamole-.git,2022-06-18 06:22:51+00:00,A miniCPU implemented with Verilog (instructions implemented in sequence),0,LzzCongee/A-miniCPU-friendly-guacamole-,504762811,Verilog,A-miniCPU-friendly-guacamole-,33,0,2022-06-18 06:23:51+00:00,[],https://api.github.com/licenses/gpl-3.0
344,https://github.com/Antonio95-sudo/Verilog_AND.git,2022-06-17 19:28:13+00:00,Descripcion de compuerta AND usando Verilog HDL.,0,Antonio95-sudo/Verilog_AND,504650279,Verilog,Verilog_AND,6,0,2022-06-17 19:30:23+00:00,[],None
345,https://github.com/Keendraa/RISC32IC.git,2022-06-17 12:05:09+00:00,,1,Keendraa/RISC32IC,504519641,Verilog,RISC32IC,88,0,2022-06-17 12:09:34+00:00,[],None
346,https://github.com/sonce139/Basic-Processor-MIPS.git,2022-06-14 03:31:13+00:00,Implement basic processor single cycle to to execute some MIPS instructions,0,sonce139/Basic-Processor-MIPS,503196138,Verilog,Basic-Processor-MIPS,27,0,2023-08-26 14:58:09+00:00,[],None
347,https://github.com/MiangMG/DatenLord_t1.git,2022-06-10 09:52:42+00:00,假定master的valid信号不满足时序要求，要对valid信号用寄存器打一拍，实现该总线握手场景；,0,MiangMG/DatenLord_t1,501989246,Verilog,DatenLord_t1,520,0,2022-06-10 09:53:46+00:00,[],None
348,https://github.com/DouglasWWolf/axi4lite_demo.git,2022-06-11 21:16:17+00:00,Demonstration of AXI4-Lite transactions,0,DouglasWWolf/axi4lite_demo,502457770,Verilog,axi4lite_demo,1892,0,2022-06-11 21:20:22+00:00,[],None
349,https://github.com/abdullah-qureshi/NuCore.git,2022-06-12 11:20:20+00:00,"This project is a processer design with Verilog HDL for an undergraduate course. The processor is built in pipelined stage and divided to 5 stages which are instruction fetch (IF), instruction decode (ID), instruction execution (EX), memory (MEM) and write back (WB).",0,abdullah-qureshi/NuCore,502594870,Verilog,NuCore,14,0,2022-08-13 05:55:09+00:00,[],None
350,https://github.com/BYCakar/caravel_vscpu3x.git,2022-06-14 20:25:03+00:00,,0,BYCakar/caravel_vscpu3x,503509790,Verilog,caravel_vscpu3x,132777,0,2022-06-14 20:45:20+00:00,[],https://api.github.com/licenses/apache-2.0
351,https://github.com/tanvirarafin/my_chip.git,2022-06-08 01:40:53+00:00,,0,tanvirarafin/my_chip,501061127,Verilog,my_chip,51891,0,2022-06-08 01:43:32+00:00,[],https://api.github.com/licenses/apache-2.0
352,https://github.com/Believe20/Fault-Tolerant-Counter.git,2022-06-08 04:05:28+00:00,,0,Believe20/Fault-Tolerant-Counter,501094601,Verilog,Fault-Tolerant-Counter,1,0,2022-06-08 04:05:36+00:00,[],None
353,https://github.com/AndreiMilitaru/BoltzmannRedpitaya.git,2022-06-07 15:51:21+00:00,,0,AndreiMilitaru/BoltzmannRedpitaya,500906317,Verilog,BoltzmannRedpitaya,19376,0,2022-06-07 15:54:12+00:00,[],None
354,https://github.com/dazhuang17/HDLBits_record.git,2022-06-15 01:24:49+00:00,HDLBits；analyze,0,dazhuang17/HDLBits_record,503573537,Verilog,HDLBits_record,2523,0,2022-07-14 15:02:31+00:00,[],None
355,https://github.com/rd2606/Decoder.git,2022-06-11 00:33:55+00:00,I have studied basic concepts of decoder and have implemented in Verilog using behavioral modeling ,0,rd2606/Decoder,502214564,Verilog,Decoder,308,0,2022-06-11 00:36:07+00:00,[],None
356,https://github.com/rd2606/Traffic-Light-Controller.git,2022-06-11 01:41:09+00:00,,0,rd2606/Traffic-Light-Controller,502223747,Verilog,Traffic-Light-Controller,15,0,2022-06-11 01:42:55+00:00,[],None
357,https://github.com/zombie782/matrix_multiply.git,2022-06-11 03:54:22+00:00,,0,zombie782/matrix_multiply,502243831,Verilog,matrix_multiply,4,0,2022-06-11 03:55:15+00:00,[],None
358,https://github.com/sauunivlsi/vijanu.git,2022-06-22 17:57:47+00:00,Students project for ADC ASIC using Efabless.com's Caravel,0,sauunivlsi/vijanu,506353236,Verilog,vijanu,49620,0,2022-06-22 18:24:52+00:00,[],https://api.github.com/licenses/apache-2.0
359,https://github.com/yesilzeytin/Simple-32-bit-CPU.git,2022-05-22 03:07:30+00:00,A custom VerySimpleCPU implementation with a custom 32-bit ISA synthesized with Verilog.,0,yesilzeytin/Simple-32-bit-CPU,494946312,Verilog,Simple-32-bit-CPU,9,0,2024-01-03 12:48:51+00:00,[],https://api.github.com/licenses/mit
360,https://github.com/Sean1410932011/hw5.git,2022-05-20 02:28:49+00:00,,0,Sean1410932011/hw5,494294483,Verilog,hw5,2,0,2022-05-20 02:32:52+00:00,[],None
361,https://github.com/Rayilam/CO_ucas.git,2022-05-20 02:48:57+00:00,,0,Rayilam/CO_ucas,494298897,Verilog,CO_ucas,3081,0,2022-05-20 03:37:13+00:00,[],None
362,https://github.com/tucanae47/edu_tpu.git,2022-05-22 10:19:55+00:00,,0,tucanae47/edu_tpu,495025254,Verilog,edu_tpu,51892,0,2022-05-22 10:24:33+00:00,[],https://api.github.com/licenses/apache-2.0
363,https://github.com/RiscenY/SimpleMIPS.git,2022-05-22 13:37:24+00:00,Simple MIPS demo for tutorial,0,RiscenY/SimpleMIPS,495070169,Verilog,SimpleMIPS,6,0,2022-05-22 14:04:28+00:00,[],None
364,https://github.com/Joynercc/USTC_COD.git,2022-05-19 13:19:36+00:00,,0,Joynercc/USTC_COD,494079927,Verilog,USTC_COD,11,0,2022-05-19 13:27:00+00:00,[],None
365,https://github.com/MelonJ/7-segment-Decoder-Basys3.git,2022-05-25 17:22:34+00:00,The objective of this project was to become familiar with Verilog language and simple hardware modeling by developing a segment decoder depending on the inputs using switches and buttons. The onboard 7 segment display of the Basys 3 board was used. ,0,MelonJ/7-segment-Decoder-Basys3,496326805,Verilog,7-segment-Decoder-Basys3,4,0,2022-05-25 17:35:51+00:00,[],None
366,https://github.com/aileneiioana/Up-Down-Binary-Counter-with-Dynamic-Count-to-Flag.git,2022-05-25 19:07:37+00:00,,0,aileneiioana/Up-Down-Binary-Counter-with-Dynamic-Count-to-Flag,496357870,Verilog,Up-Down-Binary-Counter-with-Dynamic-Count-to-Flag,158,0,2022-05-25 19:08:29+00:00,[],None
367,https://github.com/littlecsi/MarsRoverRRASA2.git,2022-05-24 13:15:19+00:00,,0,littlecsi/MarsRoverRRASA2,495830342,Verilog,MarsRoverRRASA2,74949,0,2023-06-15 11:58:22+00:00,[],None
368,https://github.com/Najah-Nasir/FPU_half_precision.git,2022-05-27 19:23:16+00:00,,0,Najah-Nasir/FPU_half_precision,497113569,Verilog,FPU_half_precision,6806,0,2022-05-27 20:58:20+00:00,[],None
369,https://github.com/rcpeixoto/Pbl_Problema_2.git,2022-05-27 23:43:35+00:00,Código em Verilog da resolução do 2º problema.,0,rcpeixoto/Pbl_Problema_2,497166335,Verilog,Pbl_Problema_2,4458,0,2022-05-27 23:51:59+00:00,[],None
370,https://github.com/Muna-akki/hardwareDesign.git,2022-06-01 04:58:56+00:00,,0,Muna-akki/hardwareDesign,498596463,Verilog,hardwareDesign,1865,0,2022-06-03 15:34:23+00:00,[],None
371,https://github.com/kayakod/figaro.git,2022-06-02 08:31:08+00:00,figaro rtl,0,kayakod/figaro,499054870,Verilog,figaro,68008,0,2022-06-06 10:32:36+00:00,[],https://api.github.com/licenses/apache-2.0
372,https://github.com/boga-vidhath/Pipelined-Wallace-Tree-Multiplier.git,2022-06-07 15:22:20+00:00,Pipelined version of the Wallace Tree Multiplier,0,boga-vidhath/Pipelined-Wallace-Tree-Multiplier,500895771,Verilog,Pipelined-Wallace-Tree-Multiplier,677,0,2022-06-07 15:28:43+00:00,[],None
373,https://github.com/lbwei1016/Digital-Circuit-Design.git,2022-06-08 08:06:52+00:00,Freshman course DCD in NYCU; 2022,0,lbwei1016/Digital-Circuit-Design,501156622,Verilog,Digital-Circuit-Design,9146,0,2022-06-08 08:21:19+00:00,"['digital-circuit-design', 'verilog']",None
374,https://github.com/Gior-gio/Caravel_tutor1al.git,2022-06-08 20:58:34+00:00,y ya,0,Gior-gio/Caravel_tutor1al,501408944,Verilog,Caravel_tutor1al,51884,0,2022-06-08 21:32:47+00:00,[],https://api.github.com/licenses/apache-2.0
375,https://github.com/xych3/Single_circle_CPU.git,2022-05-31 09:17:06+00:00,Single circle CPU,0,xych3/Single_circle_CPU,498265933,Verilog,Single_circle_CPU,8,0,2022-05-31 09:19:10+00:00,[],None
376,https://github.com/opensource-fr/wavelet_transform.git,2022-05-24 18:54:43+00:00,Open source wavelet transform,0,opensource-fr/wavelet_transform,495950911,Verilog,wavelet_transform,145,0,2022-06-03 04:13:57+00:00,[],https://api.github.com/licenses/apache-2.0
377,https://github.com/SuperJaremy/schematics-2.git,2022-06-06 18:22:33+00:00,"Лабораторная работа №2 по предмету ""Функциональная схемотехника""",0,SuperJaremy/schematics-2,500547263,Verilog,schematics-2,6,0,2022-06-06 18:24:21+00:00,[],None
378,https://github.com/MiangMG/Fractional-Frequency-Division-Clock.git,2022-06-06 12:01:34+00:00,小数分频时钟_Verilog代码（含tb文件）,0,MiangMG/Fractional-Frequency-Division-Clock,500416016,Verilog,Fractional-Frequency-Division-Clock,2,0,2022-06-06 12:04:00+00:00,[],None
379,https://github.com/Greenlemonlan/HDLbits_solutions.git,2022-06-09 11:59:14+00:00,Solutions based on HDLbits,0,Greenlemonlan/HDLbits_solutions,501634064,,HDLbits_solutions,11,0,2023-01-22 04:31:10+00:00,[],None
380,https://github.com/MuChengChen/logic-design-project-vending-machine.git,2022-06-19 14:43:35+00:00,,0,MuChengChen/logic-design-project-vending-machine,505136482,Verilog,logic-design-project-vending-machine,2,0,2022-06-19 14:51:05+00:00,[],None
381,https://github.com/huaixil/Hierarchy-ILA-Proof.git,2022-06-20 04:28:27+00:00,Hierachical ILA Verification: refinement checking between the high-level ILA and the ILA composition,0,huaixil/Hierarchy-ILA-Proof,505293718,Verilog,Hierarchy-ILA-Proof,5907,0,2023-05-18 03:24:10+00:00,[],https://api.github.com/licenses/mit
382,https://github.com/karthikvijay5227/VerilogPgms.git,2022-06-20 04:59:37+00:00,,0,karthikvijay5227/VerilogPgms,505299720,Verilog,VerilogPgms,107,0,2023-05-01 02:47:02+00:00,[],None
383,https://github.com/AtivJoshi/outlier.git,2022-05-26 02:09:00+00:00,,0,AtivJoshi/outlier,496451171,Verilog,outlier,176,0,2022-05-26 02:18:51+00:00,[],None
384,https://github.com/amsacks/CoinCollector-FPGA-game.git,2022-05-27 03:51:31+00:00,Final Project for ECE 3300: Digital Logic Design Using Verilog.,0,amsacks/CoinCollector-FPGA-game,496853510,Verilog,CoinCollector-FPGA-game,432,0,2022-08-04 02:24:21+00:00,"['fpga', 'game', 'verilog']",None
385,https://github.com/Rock3Yu/CS207_VGA_tangram.git,2022-06-03 03:44:48+00:00,"A simple project of CS207 Digital Logic, display a pair of tangram in sreen by Vivado and EGO1.",0,Rock3Yu/CS207_VGA_tangram,499370253,Verilog,CS207_VGA_tangram,19852,0,2023-03-30 03:57:51+00:00,[],None
386,https://github.com/kenzhang82/adder.git,2022-05-29 10:19:07+00:00,,0,kenzhang82/adder,497555494,Verilog,adder,0,0,2022-05-29 10:41:52+00:00,[],None
387,https://github.com/cccccc96/murphi2chisel.git,2022-05-31 15:35:25+00:00,,1,cccccc96/murphi2chisel,498395569,Verilog,murphi2chisel,12083,0,2022-06-03 15:54:38+00:00,[],None
388,https://github.com/b09901039/CA_FINAL.git,2022-06-04 15:36:57+00:00,,0,b09901039/CA_FINAL,499866856,Verilog,CA_FINAL,33,0,2022-06-04 16:14:04+00:00,[],
389,https://github.com/opensource-fr/Caravel_Project_Wavelet_Transform.git,2022-06-03 04:03:25+00:00,,0,opensource-fr/Caravel_Project_Wavelet_Transform,499373944,Verilog,Caravel_Project_Wavelet_Transform,52479,0,2022-06-03 04:07:13+00:00,[],https://api.github.com/licenses/apache-2.0
390,https://github.com/108062138/VGAxKEYBOARD.git,2022-05-23 13:27:12+00:00,,0,108062138/VGAxKEYBOARD,495422251,Verilog,VGAxKEYBOARD,215,0,2022-05-23 13:28:35+00:00,[],None
391,https://github.com/AllanRegush/fpga_flip_flop.git,2022-05-19 02:33:14+00:00,FPGA Project Flip Flops and Switch Debounce,0,AllanRegush/fpga_flip_flop,493894289,Verilog,fpga_flip_flop,4,0,2022-05-19 02:33:27+00:00,[],None
392,https://github.com/swapnamani/lightpcie.git,2022-05-28 10:58:34+00:00,,0,swapnamani/lightpcie,497291656,Verilog,lightpcie,203,0,2022-05-28 11:20:51+00:00,[],None
393,https://github.com/yoyoman12379/Median-circuit.git,2022-05-30 06:34:41+00:00,"Use combinational building blocks such as adders, comparators, multiplexers, decoders, encoders, and arbiters, as well as logic gates, design a circuit that accepts three eight-bit one-hot numbers, and outputs the input with the middle of three values.",0,yoyoman12379/Median-circuit,497818665,Verilog,Median-circuit,1,0,2022-05-30 06:39:53+00:00,[],None
394,https://github.com/Northstarfrog/cdc_lib.git,2022-05-30 05:41:18+00:00,cdc lib,0,Northstarfrog/cdc_lib,497804517,Verilog,cdc_lib,1,0,2022-05-30 07:11:02+00:00,[],None
395,https://github.com/IshanSFernando/processor-design.git,2022-06-16 14:07:29+00:00,,1,IshanSFernando/processor-design,504180246,Verilog,processor-design,75,0,2023-01-13 18:01:44+00:00,[],None
396,https://github.com/wataru030-XIAOHEI/Verilog-Platform.git,2022-06-11 15:09:27+00:00,实验包,0,wataru030-XIAOHEI/Verilog-Platform,502380729,Verilog,Verilog-Platform,1,0,2022-06-11 15:10:51+00:00,[],None
397,https://github.com/AlisonWen/Computer-Organization.git,2022-06-14 06:08:43+00:00,2022 Spring NYCU Computer Organization,0,AlisonWen/Computer-Organization,503230269,Verilog,Computer-Organization,6464,0,2023-06-14 03:47:35+00:00,[],None
398,https://github.com/Thungghuan/prj_digitalic.git,2022-06-13 03:33:43+00:00,数集课设,0,Thungghuan/prj_digitalic,502794142,Verilog,prj_digitalic,173,0,2022-07-09 04:50:56+00:00,[],None
399,https://github.com/b06901166/IC-design-final-project.git,2022-06-13 03:04:54+00:00,,0,b06901166/IC-design-final-project,502788332,Verilog,IC-design-final-project,22524,0,2022-06-13 03:27:38+00:00,[],None
400,https://github.com/sarashahtoosi/Computer-Architecture.git,2022-06-13 09:56:42+00:00,CPU Design,0,sarashahtoosi/Computer-Architecture,502899023,Verilog,Computer-Architecture,176,0,2022-06-20 14:10:20+00:00,[],None
401,https://github.com/birdybro/the_pile.git,2022-06-13 01:01:49+00:00,just a pile of random stuff I mess with,0,birdybro/the_pile,502764644,Verilog,the_pile,53226,0,2022-07-19 05:10:56+00:00,[],https://api.github.com/licenses/gpl-3.0
402,https://github.com/behzaddavoodnia/Cyrusim.git,2022-06-12 07:11:35+00:00,Cyrusim is the next-generation tool of Heracles multicore system which it provides fully synthesizable and elastic echosystem,0,behzaddavoodnia/Cyrusim,502544928,Verilog,Cyrusim,78,0,2022-06-12 07:32:01+00:00,[],https://api.github.com/licenses/mit
403,https://github.com/miguelribeirokk/Combinational_Circuits.git,2022-06-10 03:38:38+00:00,Trabalho Prático I da disciplina de Introdução aos Sistemas Lógicos e Digitais ISL | 2021,0,miguelribeirokk/Combinational_Circuits,501889031,Verilog,Combinational_Circuits,158,0,2022-06-10 03:39:31+00:00,[],None
404,https://github.com/nuraymamut/maze.git,2022-06-10 18:40:15+00:00,,0,nuraymamut/maze,502146397,Verilog,maze,130,0,2022-06-10 18:44:40+00:00,[],None
405,https://github.com/rd2606/Full_adder.git,2022-06-11 00:16:59+00:00,I have design Full adder circuit using Verilog at gate level modeling,0,rd2606/Full_adder,502212189,Verilog,Full_adder,438,0,2022-06-11 00:17:59+00:00,[],None
406,https://github.com/ZeyadZaki/SPM.git,2022-06-11 17:48:36+00:00,,0,ZeyadZaki/SPM,502418032,Verilog,SPM,4342,0,2022-06-11 17:48:48+00:00,[],https://api.github.com/licenses/apache-2.0
407,https://github.com/ishmemon/EE-371-Design-of-Digital-Circuits-and-Systems.git,2022-06-11 07:15:25+00:00,These are the projects that I created with my lab partner (Ishan Dane) for UW's EE 371.,0,ishmemon/EE-371-Design-of-Digital-Circuits-and-Systems,502278004,Verilog,EE-371-Design-of-Digital-Circuits-and-Systems,1177,0,2022-06-18 05:26:44+00:00,[],None
408,https://github.com/eric891224/2022_Spring_ComputerArchitectureFinalProject.git,2022-05-26 01:40:30+00:00,計算機結構final project,1,eric891224/2022_Spring_ComputerArchitectureFinalProject,496445167,Verilog,2022_Spring_ComputerArchitectureFinalProject,898,0,2023-05-24 06:58:58+00:00,[],None
409,https://github.com/YoniP31/verilog-async_fifo.git,2022-05-23 16:09:50+00:00,This is an Asynchronous FIFO,0,YoniP31/verilog-async_fifo,495483279,Verilog,verilog-async_fifo,4,0,2022-05-23 16:10:32+00:00,[],None
410,https://github.com/mihirrana620/caravel_walkthrough.git,2022-06-02 17:37:11+00:00,,0,mihirrana620/caravel_walkthrough,499231332,Verilog,caravel_walkthrough,51887,0,2022-06-09 04:54:56+00:00,[],https://api.github.com/licenses/apache-2.0
411,https://github.com/AmrSallam10/Digital_Calculator.git,2022-06-03 17:31:38+00:00,,0,AmrSallam10/Digital_Calculator,499596866,Verilog,Digital_Calculator,8,0,2022-06-03 17:34:45+00:00,[],https://api.github.com/licenses/mit
412,https://github.com/Lucian07N/imgProcessor-Verilog.git,2022-06-03 17:24:02+00:00,,0,Lucian07N/imgProcessor-Verilog,499594561,Verilog,imgProcessor-Verilog,15,0,2022-06-03 17:26:37+00:00,[],None
413,https://github.com/eric334/Simulated-MIPS-Assembly.git,2022-06-03 00:53:58+00:00,Simulated Single-Cycle and Multi-Cycle MIPS Processors in Verilog for Running Assembly Functions,0,eric334/Simulated-MIPS-Assembly,499336561,Verilog,Simulated-MIPS-Assembly,22,0,2022-06-03 05:03:40+00:00,[],None
414,https://github.com/fnmolina/EV22G5.git,2022-06-07 20:19:33+00:00,Five stage pipeline RISC Microprocessor ,0,fnmolina/EV22G5,500991740,Verilog,EV22G5,38189,0,2023-02-03 02:10:19+00:00,[],None
415,https://github.com/godzilila/c_design.git,2022-06-04 01:18:39+00:00,,0,godzilila/c_design,499693489,Verilog,c_design,3,0,2022-06-11 03:39:33+00:00,[],None
416,https://github.com/Twinkling-G/RISC_V-core.git,2022-06-05 08:21:48+00:00,5 pipelines RISC_V core,0,Twinkling-G/RISC_V-core,500039791,Verilog,RISC_V-core,214,0,2022-06-05 08:24:51+00:00,[],https://api.github.com/licenses/gpl-3.0
417,https://github.com/ted-xie/caravel_sandbox.git,2022-06-04 21:47:25+00:00,,0,ted-xie/caravel_sandbox,499943349,Verilog,caravel_sandbox,51887,0,2022-06-04 21:52:12+00:00,[],https://api.github.com/licenses/apache-2.0
418,https://github.com/Midhunmdp/AES128-verilog-encryption.git,2022-06-04 05:26:37+00:00,,0,Midhunmdp/AES128-verilog-encryption,499733879,Verilog,AES128-verilog-encryption,8,0,2022-06-04 09:10:20+00:00,[],None
419,https://github.com/mhamida292/ECE-3300L.git,2022-06-10 17:59:55+00:00,"Course work dedicated to ECE 3300L (Verilog) at Cal Poly Pomona, taken in Spring 2022",0,mhamida292/ECE-3300L,502135797,Verilog,ECE-3300L,9777,0,2022-06-10 18:02:11+00:00,[],https://api.github.com/licenses/gpl-3.0
420,https://github.com/AndrianDevFPGA/comparator-.git,2022-06-08 11:09:42+00:00,,0,AndrianDevFPGA/comparator-,501215677,Verilog,comparator-,2,0,2022-06-08 11:11:25+00:00,[],None
421,https://github.com/AB1ab10/ALU-verilog-design.git,2022-06-10 14:04:08+00:00,This is an example of an ALU which executes a specific operation depending on the opcode input,0,AB1ab10/ALU-verilog-design,502065184,Verilog,ALU-verilog-design,1,0,2022-06-10 14:04:44+00:00,[],None
422,https://github.com/AllanRegush/fpga_sr_latch.git,2022-05-19 00:57:25+00:00,,0,AllanRegush/fpga_sr_latch,493873115,Verilog,fpga_sr_latch,3,0,2022-05-19 01:00:16+00:00,[],None
423,https://github.com/insitochan/master-to-slave.git,2022-05-22 09:01:45+00:00,Imperfect solutions,0,insitochan/master-to-slave,495008523,Verilog,master-to-slave,143,0,2022-05-22 10:38:12+00:00,[],None
424,https://github.com/TheKoren/verilog-calc.git,2022-05-21 15:48:40+00:00,School project for Embedded and Ambient Systems Laboratory,0,TheKoren/verilog-calc,494826798,Verilog,verilog-calc,16,0,2022-05-22 11:50:17+00:00,"['calculator', 'verilog']",None
425,https://github.com/mikprin/rtl_lib.git,2022-05-24 16:48:47+00:00,Library for RTL modules someone might use in future,0,mikprin/rtl_lib,495910568,Verilog,rtl_lib,27,0,2022-05-25 11:00:44+00:00,[],https://api.github.com/licenses/gpl-3.0
426,https://github.com/marybelb/311-Lab-2.git,2022-05-27 00:01:39+00:00,"In this lab, you will use several new Verilog constructs. ",0,marybelb/311-Lab-2,496807381,Verilog,311-Lab-2,22,0,2022-05-27 00:05:00+00:00,[],None
427,https://github.com/Chenyungchin/CAD-Contest-Problem-A.git,2022-05-28 14:56:16+00:00,,0,Chenyungchin/CAD-Contest-Problem-A,497348468,Verilog,CAD-Contest-Problem-A,3649,0,2022-06-12 19:52:33+00:00,[],None
428,https://github.com/rgongw0414/Digital-system-lab.git,2022-05-31 17:12:36+00:00,數位系統測試實驗,0,rgongw0414/Digital-system-lab,498428339,Verilog,Digital-system-lab,2080,0,2023-09-17 12:52:18+00:00,[],None
429,https://github.com/davisnelsons/verilog-VGAbox.git,2022-05-31 19:32:14+00:00,,0,davisnelsons/verilog-VGAbox,498472139,Verilog,verilog-VGAbox,6,0,2022-05-31 19:32:22+00:00,[],None
430,https://github.com/kassemmkk/my-first-design2.git,2022-05-28 22:03:01+00:00,,0,kassemmkk/my-first-design2,497436353,Verilog,my-first-design2,51884,0,2022-05-28 22:04:49+00:00,[],https://api.github.com/licenses/apache-2.0
431,https://github.com/dimplesaii/vlsi_coursebased.git,2022-06-22 14:11:54+00:00,,0,dimplesaii/vlsi_coursebased,506275901,Verilog,vlsi_coursebased,4,0,2022-06-22 14:13:49+00:00,[],None
432,https://github.com/Nobody912/rager.git,2022-06-12 22:43:42+00:00,An arcade style run-and-gun shooter for FPGA,0,Nobody912/rager,502744275,Verilog,rager,30713,0,2022-06-12 22:51:50+00:00,[],https://api.github.com/licenses/mit
433,https://github.com/ChengHanYeh/hw5.git,2022-05-19 23:14:41+00:00,,0,ChengHanYeh/hw5,494256043,Verilog,hw5,2,0,2022-05-19 23:15:09+00:00,[],None
434,https://github.com/lemonteus/processador-nrisc.git,2022-05-20 00:30:27+00:00,Projeto de processador baseado em arquitetura NRISC de 8 bits desenvolvido para a aula de Arquitetura e Organização de Computadores I no CEFET-MG.,0,lemonteus/processador-nrisc,494270211,Verilog,processador-nrisc,39,0,2022-07-27 19:24:24+00:00,"['mips', 'verilog']",None
435,https://github.com/motius/pong-chip.git,2022-05-20 22:32:39+00:00,,0,motius/pong-chip,494622711,Verilog,pong-chip,15183,0,2022-05-20 22:59:36+00:00,[],https://api.github.com/licenses/apache-2.0
436,https://github.com/Gurpreet11903460/8-bit-ALU.git,2022-06-09 07:12:04+00:00,,0,Gurpreet11903460/8-bit-ALU,501543935,Verilog,8-bit-ALU,7,0,2022-06-09 07:14:26+00:00,[],https://api.github.com/licenses/apache-2.0
437,https://github.com/BarsMonster/SerialRV.git,2022-06-08 02:11:58+00:00,,0,BarsMonster/SerialRV,501068388,Verilog,SerialRV,51884,0,2022-06-08 02:49:30+00:00,[],https://api.github.com/licenses/apache-2.0
438,https://github.com/Abram1111/calculatro.git,2022-06-08 05:57:28+00:00,,0,Abram1111/calculatro,501119180,Verilog,calculatro,2233,0,2022-06-08 05:58:04+00:00,[],None
439,https://github.com/rawan4oud/Project-Room-Management-System.git,2022-06-10 23:34:05+00:00,This repo contains an implementation of a project room management system using Verilog on an Altera DE2-115 board.,0,rawan4oud/Project-Room-Management-System,502206197,Verilog,Project-Room-Management-System,7110,0,2023-05-29 16:36:43+00:00,[],None
440,https://github.com/sonce139/SHA256-Verilog.git,2022-06-14 03:01:32+00:00, Implement SHA256 encryption algorithm in Python and Verilog,0,sonce139/SHA256-Verilog,503189405,Verilog,SHA256-Verilog,708,0,2022-06-14 03:22:04+00:00,"['encryption-algorithm', 'python', 'sha256', 'verilog']",None
441,https://github.com/yoyoman12379/Voter-circuit.git,2022-05-30 06:42:34+00:00,"Use combinational building blocks such as adders, comparators, multiplexers, decoders, encoders, and arbiters, as well as logic gates, design a circuit that accepts five three-bit one-hot numbers and outputs the three bit one-hot that occurred most often on the inputs",0,yoyoman12379/Voter-circuit,497820864,Verilog,Voter-circuit,1,0,2022-05-30 06:42:56+00:00,[],None
442,https://github.com/hmzsaeed/FPU-Single-Precision-Dummy.git,2022-05-29 12:06:28+00:00,,0,hmzsaeed/FPU-Single-Precision-Dummy,497579328,Verilog,FPU-Single-Precision-Dummy,34375,0,2022-05-30 18:50:10+00:00,[],None
443,https://github.com/draco97/tuple_sum.git,2022-05-29 21:06:15+00:00,To output a tuple of three elements from an array where each triplet adds to 0,0,draco97/tuple_sum,497709628,Verilog,tuple_sum,46,0,2022-05-30 05:38:59+00:00,[],None
444,https://github.com/miruts/image-processor.git,2022-06-21 05:23:12+00:00,,0,miruts/image-processor,505701058,Verilog,image-processor,1848,0,2022-06-21 05:23:26+00:00,[],None
445,https://github.com/palmenros/cores-swervolf.git,2022-06-21 07:37:02+00:00,,0,palmenros/cores-swervolf,505737927,Verilog,cores-swervolf,1259,0,2022-06-21 07:37:55+00:00,[],None
446,https://github.com/san2130/I-Chip-22.git,2022-06-21 06:30:44+00:00,Verilog Implementation of A5/1 GSM Cipher,0,san2130/I-Chip-22,505718485,Verilog,I-Chip-22,4982,0,2022-07-07 11:31:21+00:00,[],None
447,https://github.com/mfkiwl/WES_Capstone_GNSS_MR.git,2022-06-13 07:47:57+00:00,,0,mfkiwl/WES_Capstone_GNSS_MR,502857324,,WES_Capstone_GNSS_MR,62822,0,2022-07-01 06:16:34+00:00,[],None
448,https://github.com/vidyuthshashidhar/FSM-overlapping.git,2022-06-12 03:12:38+00:00,,0,vidyuthshashidhar/FSM-overlapping,502507063,Verilog,FSM-overlapping,2,0,2022-06-12 15:08:46+00:00,[],None
449,https://github.com/Harsh-Murdeshwar/uart-transmitter-receiver-testbench.git,2022-06-18 10:55:01+00:00,,0,Harsh-Murdeshwar/uart-transmitter-receiver-testbench,504817564,Verilog,uart-transmitter-receiver-testbench,1,0,2022-06-18 10:57:26+00:00,[],None
450,https://github.com/OmkarRatna/ESASdesign.git,2022-06-19 08:38:30+00:00,ESAS: Exponent Series based Approximate Square Root design,0,OmkarRatna/ESASdesign,505054598,Verilog,ESASdesign,39,0,2022-07-01 05:00:10+00:00,[],None
451,https://github.com/quel-inc/qube_master.git,2022-05-23 06:43:04+00:00,,2,quel-inc/qube_master,495288752,Verilog,qube_master,554,0,2022-07-02 09:46:05+00:00,[],None
452,https://github.com/PrashantPanchal20/Modules_in_Verilog.git,2022-06-17 19:47:02+00:00,,0,PrashantPanchal20/Modules_in_Verilog,504654543,Verilog,Modules_in_Verilog,12,0,2023-06-04 18:31:33+00:00,[],None
453,https://github.com/Abdullah-Hasan-Sajjad/CSE460-Lab.git,2022-06-14 12:48:33+00:00,,0,Abdullah-Hasan-Sajjad/CSE460-Lab,503357072,Verilog,CSE460-Lab,10932,0,2024-03-12 19:07:03+00:00,[],None
454,https://github.com/brucexi999/UBC-CPEN-311.git,2022-06-10 06:13:57+00:00,2021 winter term 2 CPEN 311 labs ,0,brucexi999/UBC-CPEN-311,501922096,Verilog,UBC-CPEN-311,18382,0,2024-04-03 18:26:55+00:00,[],None
455,https://github.com/oldiss/NES-MMC1.git,2022-06-01 02:00:41+00:00,,0,oldiss/NES-MMC1,498558602,Verilog,NES-MMC1,355,0,2022-06-01 02:32:24+00:00,[],None
456,https://github.com/ridope/camera-application.git,2022-06-01 09:15:37+00:00,,0,ridope/camera-application,498667445,Verilog,camera-application,451,0,2022-06-23 07:41:58+00:00,[],https://api.github.com/licenses/lgpl-2.1
457,https://github.com/Najah-Nasir/FPU_half_precision_13ns.git,2022-05-31 19:15:10+00:00,,0,Najah-Nasir/FPU_half_precision_13ns,498467145,Verilog,FPU_half_precision_13ns,9265,0,2022-05-31 19:19:29+00:00,[],None
458,https://github.com/merledu/Ghazi_DFT.git,2022-05-29 16:43:21+00:00,,0,merledu/Ghazi_DFT,497649419,Verilog,Ghazi_DFT,91544,0,2022-05-29 16:48:23+00:00,[],https://api.github.com/licenses/apache-2.0
459,https://github.com/hexboom/noobcpu.git,2022-05-31 08:01:00+00:00,a simple riscv,0,hexboom/noobcpu,498241593,Verilog,noobcpu,21,0,2022-05-31 08:04:29+00:00,[],None
460,https://github.com/JasonTPhillipsJr/1X3-Router.git,2022-05-23 21:59:38+00:00,"Router hardware description written in verilog. Not complete, working on bugs ",0,JasonTPhillipsJr/1X3-Router,495586164,Verilog,1X3-Router,27,0,2022-05-23 22:01:30+00:00,[],None
461,https://github.com/leolu030066/CA_final.git,2022-05-31 05:43:34+00:00,,0,leolu030066/CA_final,498201760,Verilog,CA_final,3596,0,2022-05-31 06:16:37+00:00,[],None
462,https://github.com/Gloriaclaro/hecate.git,2022-06-02 20:20:18+00:00,,0,Gloriaclaro/hecate,499278443,Verilog,hecate,23418,0,2023-01-23 16:38:08+00:00,[],None
463,https://github.com/YassYe/GoBoardProjects.git,2022-05-19 05:15:11+00:00,Here resides my Verilog code for different projects implemented on the nandland Go Board. The credit for the base code goes to Russel and his amazing nandland project (https://github.com/nandland/nandland) . I have only extended some capabilities of the projects.,0,YassYe/GoBoardProjects,493929779,Verilog,GoBoardProjects,7,0,2022-05-19 05:18:59+00:00,[],None
464,https://github.com/TangChiaHui/Homework5.git,2022-05-19 08:33:10+00:00,,0,TangChiaHui/Homework5,493986620,Verilog,Homework5,3,0,2022-05-19 08:52:30+00:00,[],None
465,https://github.com/Tommywei0628/homework5.git,2022-05-19 03:42:40+00:00,,0,Tommywei0628/homework5,493909905,Verilog,homework5,3,0,2022-05-19 04:05:37+00:00,[],None
466,https://github.com/recepgunay/mpw6_aes_rng.git,2022-06-07 07:05:23+00:00,,0,recepgunay/mpw6_aes_rng,500727441,Verilog,mpw6_aes_rng,355775,0,2022-06-08 10:51:03+00:00,[],https://api.github.com/licenses/apache-2.0
467,https://github.com/aswinkumar1999/EE2003.git,2022-06-06 07:02:54+00:00,Archive of EE2003 Course @ IITM,0,aswinkumar1999/EE2003,500326609,Verilog,EE2003,104,0,2022-06-06 07:26:04+00:00,[],https://api.github.com/licenses/mit
468,https://github.com/Pramod-Krishna/HDL-Bits.git,2022-06-07 08:57:00+00:00,,0,Pramod-Krishna/HDL-Bits,500763388,Verilog,HDL-Bits,14,0,2022-06-07 09:03:42+00:00,[],None
469,https://github.com/John-Cheng-MJ/NonrecursiveCIC_ASICDesign.git,2022-06-05 06:41:01+00:00,Hello world:),0,John-Cheng-MJ/NonrecursiveCIC_ASICDesign,500020723,Verilog,NonrecursiveCIC_ASICDesign,52913,0,2022-06-05 06:42:57+00:00,[],None
470,https://github.com/rd2606/Full_subtractor.git,2022-06-11 00:20:39+00:00,I have designed Half subtractor and using the same have designed full subtractor as well,0,rd2606/Full_subtractor,502212684,Verilog,Full_subtractor,472,0,2022-06-11 00:21:42+00:00,[],None
471,https://github.com/simrit1/verilog.git,2022-06-09 21:54:31+00:00,Using Iverilog's Hardware Description Language to model digital logic circuits,0,simrit1/verilog,501819464,,verilog,16,0,2023-04-27 20:16:18+00:00,[],None
472,https://github.com/DarkMatterZang/new-test-git.git,2022-05-28 11:00:13+00:00,,0,DarkMatterZang/new-test-git,497291965,Verilog,new-test-git,5,0,2022-05-28 14:36:22+00:00,[],None
473,https://github.com/ammcavoy/ECE552.git,2022-05-26 18:10:38+00:00,UW-Madison's Computer Architecture,0,ammcavoy/ECE552,496725172,Verilog,ECE552,74127,0,2022-05-26 18:18:40+00:00,[],None
474,https://github.com/karinsmguerrero/LaplaceFilter.git,2022-05-28 20:45:15+00:00,Proyecto 1 de diseño lógico,0,karinsmguerrero/LaplaceFilter,497424250,Verilog,LaplaceFilter,17190,0,2022-12-05 17:57:07+00:00,[],None
475,https://github.com/MelonJ/Simple-UART.git,2022-05-26 06:33:13+00:00,,0,MelonJ/Simple-UART,496508351,Verilog,Simple-UART,3,0,2022-05-26 06:34:03+00:00,[],None
476,https://github.com/Sriraam208/4-BIT-ARRAY-MULTIPLIER.git,2022-06-06 10:34:16+00:00,Design and Implementation of 4- bit Array multiplier circuit using Verilog HDL,0,Sriraam208/4-BIT-ARRAY-MULTIPLIER,500389449,Verilog,4-BIT-ARRAY-MULTIPLIER,2944,0,2022-06-06 10:57:40+00:00,[],None
477,https://github.com/211hunter166/revival1234.git,2022-06-07 13:09:33+00:00,,0,211hunter166/revival1234,500845128,Verilog,revival1234,7,0,2022-06-14 14:58:35+00:00,[],None
478,https://github.com/duongtt1/median-filter-verilog.git,2022-06-12 07:24:01+00:00,,0,duongtt1/median-filter-verilog,502547238,Verilog,median-filter-verilog,5671,0,2022-06-12 07:25:03+00:00,[],None
479,https://github.com/lucashnriquer/Keyboard-Verilog.git,2022-06-16 21:54:11+00:00,Criação de um teclado musical utilizando uma FPGA,0,lucashnriquer/Keyboard-Verilog,504316565,Verilog,Keyboard-Verilog,4,0,2022-06-17 04:48:33+00:00,[],None
480,https://github.com/Beaker73/Chip-8-BitWorkshop.git,2022-06-11 20:31:41+00:00,,0,Beaker73/Chip-8-BitWorkshop,502450241,Verilog,Chip-8-BitWorkshop,7,0,2022-06-11 20:31:47+00:00,[],None
481,https://github.com/tom21487/4-bit-cpu.git,2022-06-13 04:21:59+00:00,On line back up.,0,tom21487/4-bit-cpu,502803582,Verilog,4-bit-cpu,138515,0,2022-06-13 04:33:32+00:00,[],None
482,https://github.com/birdybro/Siege-ES2E3.git,2022-06-17 03:06:34+00:00,A simple game built for the Nexys A7 FPGA board in Verilog. Built on top of a custom VGA driver.,0,birdybro/Siege-ES2E3,504376888,Verilog,Siege-ES2E3,29363,0,2022-06-17 03:27:41+00:00,[],https://api.github.com/licenses/gpl-2.0
483,https://github.com/xiahongchi/ArchLab-of-SJTU.git,2022-06-22 09:45:40+00:00,ArchLab-of-SJTU Final Score:100,0,xiahongchi/ArchLab-of-SJTU,506186384,Verilog,ArchLab-of-SJTU,10614,0,2022-06-22 09:54:39+00:00,[],https://api.github.com/licenses/apache-2.0
484,https://github.com/Jim3503/AFE0064-ADS8363.git,2022-06-14 09:46:46+00:00,AFE0064 and ADS8363 hardware,0,Jim3503/AFE0064-ADS8363,503298422,Verilog,AFE0064-ADS8363,2605,0,2023-12-29 03:13:46+00:00,[],None
485,https://github.com/3em0/picgo.git,2022-05-31 03:14:00+00:00,,0,3em0/picgo,498169744,Verilog,picgo,180396,0,2022-05-31 03:49:46+00:00,[],
486,https://github.com/atoomnetmarc/FPGA-playground.git,2022-06-05 15:01:22+00:00,Random collection of FPGA related stuff.,0,atoomnetmarc/FPGA-playground,500128826,Verilog,FPGA-playground,3194,0,2024-03-31 16:22:52+00:00,"['ice40hx8k', 'fpga', 'ice40', 'verilog', 'hdlbits', 'yosys', 'apio', 'icestorm']",https://api.github.com/licenses/apache-2.0
487,https://github.com/bor-yzz/FPGA-Calculator.git,2022-05-30 01:36:16+00:00,FPGA简易计算器主要包括数码管的显示、 矩阵按键输入、EP2CT44C7N芯片的储存和运算、MP3语音播放等，能够实现三位十进制数的加、减、乘、除等功能。,0,bor-yzz/FPGA-Calculator,497752706,Verilog,FPGA-Calculator,31504,0,2024-04-06 11:11:35+00:00,[],None
488,https://github.com/MSoumen/verilog.git,2022-06-09 17:18:24+00:00,All verilog codes that are done in 4th semester are uploaded here for easier transportation,0,MSoumen/verilog,501744908,Verilog,verilog,5,0,2022-06-09 17:20:48+00:00,[],None
489,https://github.com/ZeyadZaki/caravel_example.git,2022-06-09 15:40:19+00:00,,0,ZeyadZaki/caravel_example,501713670,Verilog,caravel_example,4341,0,2022-06-09 15:40:32+00:00,[],https://api.github.com/licenses/apache-2.0
490,https://github.com/AB1ab10/Parallel-to-Serial-conversion-for-data-transmision.git,2022-06-10 13:45:36+00:00,This is a verilog HDL example for serial 8 bit data transmission. The data is stored in two 4-bit parallel registers connected to a multiplexer. The selection input for the multiplexer is controlled by a 3 state controller. The synchronizing signals for the transmission are VO and OK. As long as transmission is occurring the VO signal is active and once the transmission is complete VO becomes inactive and OK activates,0,AB1ab10/Parallel-to-Serial-conversion-for-data-transmision,502059221,Verilog,Parallel-to-Serial-conversion-for-data-transmision,6,0,2022-06-10 13:48:16+00:00,[],None
491,https://github.com/knack233/handshake.git,2022-06-02 07:11:00+00:00,总线握手场景,0,knack233/handshake,499030118,Verilog,handshake,153,0,2022-06-02 07:11:42+00:00,[],None
492,https://github.com/1strangequark/lab4.git,2022-06-02 17:09:20+00:00,,0,1strangequark/lab4,499222812,Verilog,lab4,3043,0,2022-06-02 17:10:25+00:00,[],None
493,https://github.com/Madfet/TangNano-blink-verilog.git,2022-06-04 02:11:16+00:00,,0,Madfet/TangNano-blink-verilog,499701240,Verilog,TangNano-blink-verilog,2,0,2022-06-04 02:16:38+00:00,[],None
494,https://github.com/nikEE2021/Basic_Verilog_Modules.git,2022-06-12 19:52:24+00:00,,0,nikEE2021/Basic_Verilog_Modules,502713767,Verilog,Basic_Verilog_Modules,57,0,2022-06-12 19:59:40+00:00,[],None
495,https://github.com/DevxMike/university_fpga_project.git,2022-06-01 22:31:04+00:00,,0,DevxMike/university_fpga_project,498917052,Verilog,university_fpga_project,9,0,2022-06-01 22:31:30+00:00,[],None
496,https://github.com/MiangMG/DMA_Read-Write.git,2022-06-06 12:05:39+00:00,DMA读模块与DMA写模块,0,MiangMG/DMA_Read-Write,500417232,Verilog,DMA_Read-Write,21,0,2022-06-06 12:19:58+00:00,[],None
497,https://github.com/harunc/VerilogProjects.git,2022-06-06 11:51:37+00:00,Verilog Projects and Homeworks. Homeworks shows better how we learned step by step,0,harunc/VerilogProjects,500412936,Verilog,VerilogProjects,2250,0,2022-06-06 11:54:32+00:00,[],None
498,https://github.com/SomeSadBears/RISC_Processor.git,2022-06-06 16:09:28+00:00,,0,SomeSadBears/RISC_Processor,500503290,Verilog,RISC_Processor,16,0,2022-06-06 16:10:08+00:00,[],None
499,https://github.com/rd2606/Counter.git,2022-06-11 01:17:07+00:00,,0,rd2606/Counter,502220401,Verilog,Counter,384,0,2022-06-11 01:17:53+00:00,[],None
500,https://github.com/Askartos/fossiAES.git,2022-05-29 20:26:18+00:00,Free and open source silicon implementation of Advanced Encryption Standard (AES) ,1,Askartos/fossiAES,497701890,Verilog,fossiAES,93230,0,2022-05-29 21:24:44+00:00,[],https://api.github.com/licenses/apache-2.0
501,https://github.com/s1410932004/hw5.git,2022-05-19 15:07:09+00:00,,0,s1410932004/hw5,494120438,Verilog,hw5,2,0,2022-05-19 15:10:10+00:00,[],None
502,https://github.com/frankie55688/kiwi.git,2022-05-19 16:01:52+00:00,,0,frankie55688/kiwi,494139725,Verilog,kiwi,2,0,2022-05-19 16:03:28+00:00,[],None
503,https://github.com/rajmouli2001/ALU-module-with-8-operations-32-nm-synthesis-.git,2022-05-20 12:49:05+00:00,A synthesised version of 4 module ALU including a divider. these are 16-bit components with two 16-bit inputs. ,0,rajmouli2001/ALU-module-with-8-operations-32-nm-synthesis-,494461788,Verilog,ALU-module-with-8-operations-32-nm-synthesis-,34,0,2022-12-26 08:43:49+00:00,[],None
504,https://github.com/aliaagheisX/Verilog-Labs.git,2022-05-20 18:50:16+00:00,my solutions to verilog Labs,0,aliaagheisX/Verilog-Labs,494575118,Verilog,Verilog-Labs,9,0,2022-05-20 19:17:09+00:00,[],None
505,https://github.com/AndrianDevFPGA/Memory-Controller-.git,2022-06-01 06:44:00+00:00,,0,AndrianDevFPGA/Memory-Controller-,498621381,Verilog,Memory-Controller-,3,0,2022-06-01 06:45:55+00:00,[],None
506,https://github.com/mahajan-aadi/FPGA.git,2022-05-22 08:44:43+00:00,verilog codes for FPGA,0,mahajan-aadi/FPGA,495004911,Verilog,FPGA,8,0,2022-05-22 08:44:51+00:00,[],None
507,https://github.com/xych3/Multi_circle_CPU.git,2022-05-31 09:20:08+00:00,Multi circle CPU,0,xych3/Multi_circle_CPU,498266929,Verilog,Multi_circle_CPU,9,0,2022-05-31 09:21:59+00:00,[],None
508,https://github.com/Danil1997Dev/DECODER.git,2022-05-25 08:00:26+00:00,,0,Danil1997Dev/DECODER,496136633,Verilog,DECODER,68466,0,2022-05-25 08:14:37+00:00,[],None
509,https://github.com/Rt39/Pipelinecpu.git,2022-05-23 14:32:05+00:00,,0,Rt39/Pipelinecpu,495447221,Verilog,Pipelinecpu,141,0,2022-05-23 14:32:12+00:00,[],None
510,https://github.com/vedi97/Slot-Machine.git,2022-05-24 15:48:39+00:00,Basic Slot machine designed with Verilog HDL,0,vedi97/Slot-Machine,495889769,Verilog,Slot-Machine,27,0,2022-05-24 16:03:43+00:00,[],None
511,https://github.com/dyangkk/FPGA_Study.git,2022-05-25 00:12:35+00:00,,0,dyangkk/FPGA_Study,496026468,Verilog,FPGA_Study,13,0,2022-05-25 04:37:00+00:00,[],None
512,https://github.com/racwhite/FPGA-Audio-Recorder.git,2022-05-25 22:47:06+00:00,,0,racwhite/FPGA-Audio-Recorder,496411767,Verilog,FPGA-Audio-Recorder,8,0,2022-06-01 21:58:52+00:00,[],None
513,https://github.com/MuhammedNecatiPolat/Basic_Computer.git,2022-06-04 20:44:11+00:00,,0,MuhammedNecatiPolat/Basic_Computer,499932812,Verilog,Basic_Computer,405,0,2022-06-04 20:49:07+00:00,[],None
514,https://github.com/minggfan/32Bit_Brent_Kung_Adder.git,2022-06-08 04:39:21+00:00,,0,minggfan/32Bit_Brent_Kung_Adder,501101611,Verilog,32Bit_Brent_Kung_Adder,5,0,2022-06-08 04:41:12+00:00,[],None
515,https://github.com/aalopz02/proyectoFPGA.git,2022-06-04 00:51:23+00:00,proyecto de curso: proyecto de diseño ,0,aalopz02/proyectoFPGA,499689603,Verilog,proyectoFPGA,43595,0,2022-06-04 00:57:47+00:00,[],None
516,https://github.com/sergioasn/MUISE.git,2022-06-07 08:37:01+00:00,Proyecto ejemplo MUISE,1,sergioasn/MUISE,500756882,Verilog,MUISE,55,0,2022-06-07 09:01:20+00:00,[],None
517,https://github.com/Supermecase/Lorenz-key.git,2022-06-19 02:38:22+00:00,按键实现Lorenz系统的DA输出不同的相图,0,Supermecase/Lorenz-key,504995718,Verilog,Lorenz-key,3,0,2022-06-19 02:39:57+00:00,[],None
518,https://github.com/vaibhavvishwakarma7/RISCV_MICRO.git,2022-06-16 17:34:24+00:00,micro riscv,0,vaibhavvishwakarma7/RISCV_MICRO,504248338,Verilog,RISCV_MICRO,160905,0,2022-06-16 17:46:12+00:00,[],https://api.github.com/licenses/apache-2.0
519,https://github.com/rajdeeepc21/chipp.git,2022-06-16 19:04:24+00:00,,0,rajdeeepc21/chipp,504274948,Verilog,chipp,8888,0,2022-06-16 19:04:36+00:00,[],https://api.github.com/licenses/apache-2.0
520,https://github.com/diogodeas/nRisc_AOC1CEFETMG.git,2022-06-16 20:32:15+00:00,"Documentação do projeto de processador de 8 bits, nRisc, para matéria de Arquitetura e Organização de Computadores 1 do CEFET-MG.",0,diogodeas/nRisc_AOC1CEFETMG,504297791,Verilog,nRisc_AOC1CEFETMG,1919,0,2023-02-28 20:20:06+00:00,[],None
521,https://github.com/svitvitskiy/hd63484_lcd.git,2022-06-17 05:54:00+00:00,,0,svitvitskiy/hd63484_lcd,504410672,Verilog,hd63484_lcd,307,0,2022-06-17 06:06:19+00:00,[],None
522,https://github.com/Nguyen-C-Dao/caravel_rocket_alpha.git,2022-06-17 13:46:07+00:00,,0,Nguyen-C-Dao/caravel_rocket_alpha,504550651,Verilog,caravel_rocket_alpha,1011071,0,2022-06-17 14:05:30+00:00,[],https://api.github.com/licenses/apache-2.0
523,https://github.com/kimdong1710/kimdong.github.io.git,2022-06-17 11:40:36+00:00,,0,kimdong1710/kimdong.github.io,504512511,Verilog,kimdong.github.io,4,0,2022-06-17 11:43:06+00:00,[],None
524,https://github.com/Cindy2210/RISC-V.git,2022-06-14 13:29:30+00:00,,0,Cindy2210/RISC-V,503372288,Verilog,RISC-V,122,0,2022-06-15 16:46:46+00:00,[],None
525,https://github.com/davidpolk/main.git,2022-06-21 18:38:11+00:00,,0,davidpolk/main,505963054,Verilog,main,1485,0,2022-12-09 22:33:30+00:00,[],None
526,https://github.com/palzhj/u4FCPv1.git,2022-05-27 08:06:01+00:00,MicroTCA.4 fast control and process board (version 1),0,palzhj/u4FCPv1,496912096,Verilog,u4FCPv1,25230,0,2024-02-13 15:49:27+00:00,"['fpga', 'verilog']",None
527,https://github.com/Esad-U/Comporg-Project-2.git,2022-05-21 11:12:28+00:00,,0,Esad-U/Comporg-Project-2,494760572,Verilog,Comporg-Project-2,77,0,2024-03-10 09:14:36+00:00,[],None
528,https://github.com/yasinalperbingul/SingleCycleMIPS-Implementation.git,2022-05-20 10:17:14+00:00,Designed the revised single-cycle datapath and revised control units which make a processor that executes the instructions as well as the instructions implemented already in the design.,0,yasinalperbingul/SingleCycleMIPS-Implementation,494417235,Verilog,SingleCycleMIPS-Implementation,578,0,2024-03-25 07:41:50+00:00,"['mips-architecture', 'mips-assembly', 'processor-design']",None
529,https://github.com/MohammadmehdiKhani/traffic-light.git,2022-05-25 19:49:51+00:00,Controlling a simple traffic light system.,0,MohammadmehdiKhani/traffic-light,496369867,Verilog,traffic-light,833,0,2022-05-25 19:51:32+00:00,"['digital-logic-design', 'traffic-light-controller', 'verilog']",None
530,https://github.com/Narwhal-fish/Midterm_ALU.git,2022-05-24 10:50:21+00:00,,0,Narwhal-fish/Midterm_ALU,495781446,Verilog,Midterm_ALU,7,0,2022-05-24 18:04:25+00:00,[],None
531,https://github.com/jcordero26/digital-systems.git,2022-05-24 01:53:09+00:00,Repository for several projects of a Digital Systems course at ITCR,0,jcordero26/digital-systems,495633877,Verilog,digital-systems,1921,0,2022-05-24 02:10:29+00:00,"['picoblaze-assembly', 'verilog-hdl']",None
532,https://github.com/sycamoretre/nowcoder_v.git,2022-05-21 04:59:26+00:00,record my answer,0,sycamoretre/nowcoder_v,494684538,Verilog,nowcoder_v,131,0,2022-05-21 05:02:00+00:00,[],None
533,https://github.com/pmobbs/cnn_accel.git,2022-05-27 04:04:30+00:00,CNN Hardware Accelerator,0,pmobbs/cnn_accel,496856043,Verilog,cnn_accel,15,0,2022-05-27 04:37:35+00:00,[],None
534,https://github.com/LukeRJamieson/Fisnar.git,2022-06-22 00:42:07+00:00,,0,LukeRJamieson/Fisnar,506048098,Verilog,Fisnar,106644,0,2022-10-21 11:13:50+00:00,[],None
535,https://github.com/suibex/HALL98.git,2022-06-20 18:06:49+00:00,8bit CPU in Verilog (im currently learning verilog) ,0,suibex/HALL98,505548177,Verilog,HALL98,21,0,2022-06-20 18:14:25+00:00,[],None
536,https://github.com/konicst1/RISC-V-single-cycle-processor.git,2022-06-20 19:44:13+00:00,Verilog implementation of RISC-V 32bit single cycle processor,0,konicst1/RISC-V-single-cycle-processor,505576704,Verilog,RISC-V-single-cycle-processor,4,0,2022-06-20 20:07:57+00:00,[],None
537,https://github.com/01fe21mve007/Advance-digital-system-design.git,2022-05-19 10:09:35+00:00,,0,01fe21mve007/Advance-digital-system-design,494018330,Verilog,Advance-digital-system-design,1770,0,2022-05-19 10:17:47+00:00,[],None
538,https://github.com/LIAOGUAN-WEI/Pseudo-Random-Pattern-Generator.git,2022-05-19 12:52:36+00:00,,0,LIAOGUAN-WEI/Pseudo-Random-Pattern-Generator,494070406,Verilog,Pseudo-Random-Pattern-Generator,0,0,2022-05-19 12:54:04+00:00,[],None
539,https://github.com/CJS1224/Verilog.git,2022-05-19 01:34:39+00:00,,0,CJS1224/Verilog,493881003,Verilog,Verilog,2,0,2022-05-19 01:35:42+00:00,[],None
540,https://github.com/7mohamedsaleh/FFT32.git,2022-05-23 19:22:22+00:00,Design of 32-point FFT in RTL using the Cooley-Tukey FFT algorithm.,0,7mohamedsaleh/FFT32,495544762,Verilog,FFT32,1982,0,2022-05-23 19:28:47+00:00,[],None
541,https://github.com/SafaKucukkomurler/caravel_soc_test.git,2022-06-15 13:59:27+00:00,,0,SafaKucukkomurler/caravel_soc_test,503789060,Verilog,caravel_soc_test,51886,0,2022-06-15 14:12:23+00:00,[],https://api.github.com/licenses/apache-2.0
542,https://github.com/ayanbasu11/EE316-ProgrammingAssignments.git,2022-06-18 01:11:43+00:00,Lab assignments for UT Austin EE316/ECE316 - Digital Logic Design,0,ayanbasu11/EE316-ProgrammingAssignments,504712402,Verilog,EE316-ProgrammingAssignments,13756,0,2022-06-18 01:19:23+00:00,[],None
543,https://github.com/tallenintegsys/usbTim.git,2022-06-19 19:36:41+00:00,This is just a base implementation for a USB peripheral ,0,tallenintegsys/usbTim,505202743,Verilog,usbTim,7254,0,2022-06-19 19:41:40+00:00,[],None
544,https://github.com/EMIL-YORKU/SensSoC.git,2022-06-19 07:50:32+00:00,,0,EMIL-YORKU/SensSoC,505045270,Verilog,SensSoC,51887,0,2022-06-19 08:55:59+00:00,[],https://api.github.com/licenses/apache-2.0
545,https://github.com/andrew76214/PWM_Breathe_lights.git,2022-06-12 06:27:07+00:00,,0,andrew76214/PWM_Breathe_lights,502536946,Verilog,PWM_Breathe_lights,3605,0,2022-06-12 06:37:15+00:00,[],https://api.github.com/licenses/mit
546,https://github.com/ryanchang168/CO.git,2022-06-12 09:03:24+00:00,2019 Computer Organization,0,ryanchang168/CO,502566687,,CO,9556,0,2019-06-25 09:47:51+00:00,[],None
547,https://github.com/KUI-YW/simpleCPU.git,2022-06-07 06:10:06+00:00,CPU,0,KUI-YW/simpleCPU,500711628,Verilog,simpleCPU,58779,0,2022-07-10 14:01:25+00:00,[],https://api.github.com/licenses/mit
548,https://github.com/JeffXiesk/2021-Fall-CS207-Digital-Logic.git,2022-06-01 13:50:11+00:00,Sustech 2021 Fall Digital Logic Morse Code,0,JeffXiesk/2021-Fall-CS207-Digital-Logic,498755862,Verilog,2021-Fall-CS207-Digital-Logic,1172,0,2022-06-01 13:52:59+00:00,[],None
549,https://github.com/nishachaudhary17/carvel_example.git,2022-06-11 07:34:09+00:00,,0,nishachaudhary17/carvel_example,502281704,Verilog,carvel_example,51884,0,2022-06-14 05:47:21+00:00,[],https://api.github.com/licenses/apache-2.0
550,https://github.com/TatshSiow/HW4add.git,2022-06-19 14:08:38+00:00,BCD up-counter with positive asynchronous reset,0,TatshSiow/HW4add,505127681,Verilog,HW4add,1,0,2022-06-19 14:34:32+00:00,[],None
551,https://github.com/crazybolillo/cyclone2-calc.git,2022-05-20 03:17:18+00:00,Basic calculator implemented in a Cyclone 2 FPGA,0,crazybolillo/cyclone2-calc,494305189,Verilog,cyclone2-calc,27,0,2022-05-23 21:03:33+00:00,[],https://api.github.com/licenses/gpl-3.0
552,https://github.com/joeljvarghese/cocotb.git,2022-05-19 14:18:33+00:00,Test bench using Cocotb framework and Python,0,joeljvarghese/cocotb,494102358,Verilog,cocotb,1,0,2022-05-19 14:33:42+00:00,[],None
553,https://github.com/ScotthewUT/ECE3700-DigitalSystemDesign.git,2022-05-20 14:37:35+00:00,Collection of Verilog modules for ECE 3700.,0,ScotthewUT/ECE3700-DigitalSystemDesign,494499297,Verilog,ECE3700-DigitalSystemDesign,10,0,2023-01-28 00:37:54+00:00,[],None
554,https://github.com/kasireddygariDineshKumarReddy/RAM_Design_Verilog.git,2022-06-10 03:08:26+00:00,,0,kasireddygariDineshKumarReddy/RAM_Design_Verilog,501882925,Verilog,RAM_Design_Verilog,4,0,2022-06-10 03:34:05+00:00,[],None
555,https://github.com/alexding1226/RISCV_pipeline.git,2022-06-11 05:49:49+00:00,,0,alexding1226/RISCV_pipeline,502262706,Verilog,RISCV_pipeline,20023,0,2022-06-11 05:52:05+00:00,[],None
556,https://github.com/skudlur/chisel_learn.git,2022-06-11 16:45:22+00:00,This repository contains chisel hdl files. ,0,skudlur/chisel_learn,502404032,Verilog,chisel_learn,3,0,2022-07-11 16:51:03+00:00,[],None
557,https://github.com/rajdeeepc21/asic_design.git,2022-06-16 06:36:56+00:00,,0,rajdeeepc21/asic_design,504040500,Verilog,asic_design,8888,0,2022-06-16 06:37:08+00:00,[],https://api.github.com/licenses/apache-2.0
558,https://github.com/baebrum/Digital-Circuits.git,2022-06-13 20:46:52+00:00,,0,baebrum/Digital-Circuits,503109963,Verilog,Digital-Circuits,4689,0,2022-06-13 20:56:12+00:00,[],None
559,https://github.com/bensonthong/Verilog-projects.git,2022-06-03 23:11:47+00:00,,0,bensonthong/Verilog-projects,499674801,Verilog,Verilog-projects,3255,0,2022-06-03 23:13:18+00:00,[],None
560,https://github.com/casval5fn28/NYCU-2022Spring-Computer_Organization.git,2022-05-28 08:46:52+00:00,,0,casval5fn28/NYCU-2022Spring-Computer_Organization,497262934,Verilog,NYCU-2022Spring-Computer_Organization,921,0,2022-05-28 08:55:17+00:00,[],None
561,https://github.com/Milanotang/Verify_Program.git,2022-05-27 08:24:13+00:00,,0,Milanotang/Verify_Program,496917567,Verilog,Verify_Program,60097,0,2022-05-27 08:25:59+00:00,[],None
562,https://github.com/RafikYacoub/simple-calculator-verilog.git,2022-05-31 13:38:19+00:00,,0,RafikYacoub/simple-calculator-verilog,498351643,Verilog,simple-calculator-verilog,4,0,2022-05-31 13:39:09+00:00,[],None
563,https://github.com/liuxiaoyanfpga/rong_riscv_cpu.git,2022-05-31 07:31:34+00:00,,0,liuxiaoyanfpga/rong_riscv_cpu,498232435,Verilog,rong_riscv_cpu,3692,0,2022-05-31 07:33:40+00:00,[],None
564,https://github.com/hmzsaeed/FPU-Single-Precision.git,2022-05-30 18:50:53+00:00,,0,hmzsaeed/FPU-Single-Precision,498062279,Verilog,FPU-Single-Precision,39280,0,2022-05-30 19:25:26+00:00,[],None
565,https://github.com/Fly-fish-seventeen/fpgalearn.git,2022-06-03 11:58:44+00:00,,0,Fly-fish-seventeen/fpgalearn,499494419,Verilog,fpgalearn,24,0,2022-06-03 12:02:16+00:00,[],https://api.github.com/licenses/gpl-3.0
566,https://github.com/PoYangHsieh/CA2022_final_project.git,2022-06-04 08:32:40+00:00,single cycle CPU in verilog,0,PoYangHsieh/CA2022_final_project,499769283,Verilog,CA2022_final_project,7,0,2022-06-04 08:33:56+00:00,[],None
567,https://github.com/Ravi-Singh-12/Cyclic-Redundancy-Check.git,2022-06-03 09:54:40+00:00,,0,Ravi-Singh-12/Cyclic-Redundancy-Check,499460456,Verilog,Cyclic-Redundancy-Check,3,0,2022-06-03 09:55:43+00:00,[],None
568,https://github.com/lshchigorev/hdl_parser_probe.git,2022-06-11 09:05:13+00:00,,0,lshchigorev/hdl_parser_probe,502300087,Verilog,hdl_parser_probe,16,0,2022-06-11 16:45:03+00:00,[],None
569,https://github.com/AB1ab10/Binary-sorter.git,2022-06-12 06:06:03+00:00,"This is a hardware descripted binary sorter as a Mealy machine with 3 states. It will take an 8-bit binary input stored in a parallel intern register and output it serial , sorting the values.",0,AB1ab10/Binary-sorter,502533395,Verilog,Binary-sorter,3,0,2022-06-12 06:06:24+00:00,[],None
570,https://github.com/date20220616/8bit_RISC_CPU.git,2022-06-12 00:05:55+00:00,,0,date20220616/8bit_RISC_CPU,502482274,Verilog,8bit_RISC_CPU,33,0,2022-06-14 15:07:56+00:00,[],None
571,https://github.com/alien2327/New_16pu_firmware.git,2022-05-20 15:03:48+00:00,,0,alien2327/New_16pu_firmware,494508389,Verilog,New_16pu_firmware,778,0,2022-06-17 04:09:04+00:00,[],None
572,https://github.com/paulchen2713/Introduction_to_VerilogHDL.git,2022-05-21 09:17:37+00:00,Digital System Design Course Practices,0,paulchen2713/Introduction_to_VerilogHDL,494735403,Verilog,Introduction_to_VerilogHDL,16660,0,2023-04-25 16:01:25+00:00,['verilog'],None
573,https://github.com/eemreeh/caravel_project_PrimitiveCalculator.git,2022-05-21 17:09:52+00:00,,0,eemreeh/caravel_project_PrimitiveCalculator,494846545,Verilog,caravel_project_PrimitiveCalculator,63869,0,2022-05-21 17:16:07+00:00,[],https://api.github.com/licenses/apache-2.0
574,https://github.com/AhmedSamy02/AES.git,2022-05-25 20:45:06+00:00,"AES encryptor and decryptor tested on de1 soc board used for 128, 192 or 256 bits ",2,AhmedSamy02/AES,496384641,Verilog,AES,26,0,2022-05-25 20:48:23+00:00,[],None
575,https://github.com/Orpicon/NEC_Kursovaya.git,2022-05-22 15:13:26+00:00,Курсовой проект разработки схемы ИК-приёмника на FPGA с USART и на плате с микроконтроллером AVR ATtine2313,0,Orpicon/NEC_Kursovaya,495095663,Verilog,NEC_Kursovaya,3375,0,2022-05-22 15:24:38+00:00,[],None
576,https://github.com/Ferhatbocek/My-All-Verilog-Projects-in-Digital-System-Design.git,2022-06-10 08:06:21+00:00,7 verilog projects I coded on Quartus,0,Ferhatbocek/My-All-Verilog-Projects-in-Digital-System-Design,501955341,Verilog,My-All-Verilog-Projects-in-Digital-System-Design,8042,0,2023-04-17 20:23:51+00:00,[],None
577,https://github.com/carlsberg03/SequenceDetection.git,2022-06-09 07:49:05+00:00,Morse Code Sequence Detection,0,carlsberg03/SequenceDetection,501555701,Verilog,SequenceDetection,319,0,2022-06-09 07:49:44+00:00,[],None
578,https://github.com/PranavGovekar/Neural-Network-Implementation-on-an-FPGA.git,2022-06-15 05:34:22+00:00,,0,PranavGovekar/Neural-Network-Implementation-on-an-FPGA,503628720,Verilog,Neural-Network-Implementation-on-an-FPGA,36,0,2022-06-16 04:04:55+00:00,[],None
579,https://github.com/cwhsu0225/DLab_backup.git,2022-06-16 04:50:35+00:00,,0,cwhsu0225/DLab_backup,504015596,Verilog,DLab_backup,21,0,2022-06-16 04:56:00+00:00,[],None
580,https://github.com/JAIOM/scb.git,2022-06-07 12:01:08+00:00,,0,JAIOM/scb,500822022,Verilog,scb,51886,0,2022-06-07 14:01:01+00:00,[],https://api.github.com/licenses/apache-2.0
581,https://github.com/replica455/Verilog_code_for_Multiplication-_by_repeated_Addition.git,2022-06-08 13:01:09+00:00,Lecture 25 : DATAPATH AND CONTROLLER DESIGN (PART 1) by Prof. Indranil Sengupta IIT Kharagpur ,0,replica455/Verilog_code_for_Multiplication-_by_repeated_Addition,501252953,Verilog,Verilog_code_for_Multiplication-_by_repeated_Addition,65,0,2022-06-08 13:03:20+00:00,[],None
582,https://github.com/yehiaz2409/Calculator-FPGA-Board.git,2022-06-17 12:45:18+00:00,,0,yehiaz2409/Calculator-FPGA-Board,504531368,Verilog,Calculator-FPGA-Board,5,0,2022-06-17 12:46:34+00:00,[],None
583,https://github.com/MAfifiKhalil/verilog-hdl-projects.git,2022-05-28 14:14:28+00:00,A collection of digital design made with verilog HDL. ,0,MAfifiKhalil/verilog-hdl-projects,497337299,Verilog,verilog-hdl-projects,5,0,2022-05-28 14:16:26+00:00,[],https://api.github.com/licenses/mit
584,https://github.com/ailtonljr/LearnADCFPGA.git,2022-06-04 11:23:36+00:00,,0,ailtonljr/LearnADCFPGA,499805437,Verilog,LearnADCFPGA,70,0,2022-06-04 11:24:00+00:00,[],None
585,https://github.com/Midhunmdp/AES128_decryption.git,2022-06-04 13:43:32+00:00,,0,Midhunmdp/AES128_decryption,499837916,Verilog,AES128_decryption,5,0,2022-06-04 13:44:45+00:00,[],None
586,https://github.com/ria1703/Strong-ARM-Latch.git,2022-06-02 04:49:10+00:00,Design of optimised Strong ARM Latch,0,ria1703/Strong-ARM-Latch,498994766,Verilog,Strong-ARM-Latch,956,0,2022-06-02 05:04:50+00:00,[],https://api.github.com/licenses/apache-2.0
587,https://github.com/jakcwik/UEC_Projekt.git,2022-06-02 19:40:44+00:00,,0,jakcwik/UEC_Projekt,499267606,Verilog,UEC_Projekt,370,0,2022-09-14 13:58:23+00:00,[],None
588,https://github.com/fn-w/16bit-MIPS-Processor.git,2022-06-03 00:34:51+00:00,I designed a 16bit MIPS Processor in university course Digital System Designs (DSD). This processor was designed using verilog HDL by using Xilinx software.,0,fn-w/16bit-MIPS-Processor,499333130,Verilog,16bit-MIPS-Processor,6745,0,2022-06-03 19:24:28+00:00,[],None
589,https://github.com/mremperorx/HDL---Verilog.git,2022-06-02 19:46:44+00:00,HomeWorks - hardware description language,0,mremperorx/HDL---Verilog,499269151,Verilog,HDL---Verilog,757,0,2022-06-03 12:06:12+00:00,[],None
590,https://github.com/Silvertrousers/FYP.git,2022-06-04 21:55:15+00:00,,0,Silvertrousers/FYP,499944578,Verilog,FYP,57649,0,2022-06-28 10:11:59+00:00,[],https://api.github.com/licenses/mit
591,https://github.com/ranan-usp/caravel_walkthrough.git,2022-05-21 02:17:16+00:00,,0,ranan-usp/caravel_walkthrough,494657797,Verilog,caravel_walkthrough,55725,0,2022-05-21 02:23:35+00:00,[],https://api.github.com/licenses/apache-2.0
592,https://github.com/mliss26/mojo-microblaze-mcs.git,2022-05-19 16:29:01+00:00,MicroBlaze MCS based SoC for Mojo V3,0,mliss26/mojo-microblaze-mcs,494148647,Verilog,mojo-microblaze-mcs,442,0,2022-05-20 19:22:00+00:00,[],https://api.github.com/licenses/bsd-3-clause
593,https://github.com/Dev-Goel/Digital-Locker.git,2022-05-27 10:27:32+00:00,The project digital locker aims to build a digital lock that can be unlocked by a 4 digit password. The user can input the password and based on the input the locker will function.,0,Dev-Goel/Digital-Locker,496954165,Verilog,Digital-Locker,429,0,2022-05-27 10:56:13+00:00,"['digital-design', 'verilog', 'verilog-hdl']",None
594,https://github.com/yashgupta26/Semi-Design.git,2022-05-27 17:53:52+00:00,,0,yashgupta26/Semi-Design,497089807,Verilog,Semi-Design,61,0,2022-07-06 15:59:37+00:00,[],None
595,https://github.com/mousaq92/ORFS-OL.git,2022-05-27 18:47:37+00:00,,0,mousaq92/ORFS-OL,497104334,Verilog,ORFS-OL,9,0,2022-05-27 18:59:56+00:00,[],None
596,https://github.com/nimra471/MPW6-SOC-NOW.git,2022-05-28 16:13:19+00:00,,0,nimra471/MPW6-SOC-NOW,497367788,Verilog,MPW6-SOC-NOW,86191,0,2022-05-28 17:26:43+00:00,[],None
597,https://github.com/Angelababe/ECE260b.git,2022-05-30 03:47:17+00:00,UCSD ece260b VLSI,0,Angelababe/ECE260b,497779285,Verilog,ECE260b,603,0,2022-05-30 03:48:34+00:00,[],None
598,https://github.com/yoyoman12379/8-bits-Adder-subtractor.git,2022-05-29 17:48:17+00:00,Write a 8 bits Adder-subtractor using gate level,0,yoyoman12379/8-bits-Adder-subtractor,497665952,Verilog,8-bits-Adder-subtractor,2,0,2022-05-29 17:51:10+00:00,[],None
599,https://github.com/fran-retfie/Bell202-modem.git,2022-06-21 08:47:17+00:00,Bell202 modem implementation on FPGA,0,fran-retfie/Bell202-modem,505761772,Verilog,Bell202-modem,14941,0,2022-06-21 09:04:41+00:00,[],https://api.github.com/licenses/gpl-3.0
600,https://github.com/Hetvi21/caravel_hetvi.git,2022-06-22 04:23:13+00:00,,0,Hetvi21/caravel_hetvi,506095763,Verilog,caravel_hetvi,51884,0,2022-06-22 04:45:29+00:00,[],https://api.github.com/licenses/apache-2.0
601,https://github.com/BigNixon/HDMI_SobelFilter_CycloneV.git,2022-06-22 03:14:32+00:00,An implementation of sobel filter with HDMI using ADV7513 chip from the DE10 Nano development Board,0,BigNixon/HDMI_SobelFilter_CycloneV,506081587,Verilog,HDMI_SobelFilter_CycloneV,3210,0,2022-06-22 03:19:50+00:00,[],https://api.github.com/licenses/mit
602,https://github.com/Chunjw/DES.git,2022-06-22 01:15:29+00:00,Symmetric Key Algorithm - DES,0,Chunjw/DES,506054736,Verilog,DES,6,0,2022-06-22 01:22:59+00:00,[],None
603,https://github.com/antonblaise/CAD-assignment-batch04.git,2022-06-10 02:58:58+00:00,CAD w/ HDL assignment - Batch 4,0,antonblaise/CAD-assignment-batch04,501880753,Verilog,CAD-assignment-batch04,7,0,2022-06-11 16:38:44+00:00,[],https://api.github.com/licenses/mit
604,https://github.com/rd2606/JK-FlipFlop.git,2022-06-11 01:14:32+00:00,,0,rd2606/JK-FlipFlop,502220060,Verilog,JK-FlipFlop,363,0,2022-06-11 01:16:10+00:00,[],None
605,https://github.com/hDyat/simple_proc.git,2022-06-12 14:44:22+00:00,,0,hDyat/simple_proc,502642781,Verilog,simple_proc,7,0,2022-06-12 14:44:54+00:00,[],None
606,https://github.com/akhilagrawal1001/UnderTheHood.git,2022-06-12 16:29:53+00:00,,7,akhilagrawal1001/UnderTheHood,502669626,Verilog,UnderTheHood,287,0,2022-07-24 16:24:44+00:00,[],None
607,https://github.com/TasmaiRD/3-bit-counter.git,2022-06-17 04:25:33+00:00,,0,TasmaiRD/3-bit-counter,504392528,Verilog,3-bit-counter,200,0,2022-06-17 04:28:12+00:00,[],None
608,https://github.com/Increcrazer/Hello_NiosII.git,2022-06-22 15:45:58+00:00,test the possibility of quartus-git combination,0,Increcrazer/Hello_NiosII,506310548,Verilog,Hello_NiosII,1522,0,2022-06-23 05:22:30+00:00,[],None
609,https://github.com/osafune/peridot_air.git,2022-05-30 05:42:59+00:00,,0,osafune/peridot_air,497804965,Verilog,peridot_air,2555,0,2022-05-30 05:43:06+00:00,[],https://api.github.com/licenses/mit
610,https://github.com/jargonized/caravel_walkthrough.git,2022-05-19 15:05:03+00:00,,0,jargonized/caravel_walkthrough,494119687,Verilog,caravel_walkthrough,51892,0,2022-05-19 15:16:24+00:00,[],https://api.github.com/licenses/apache-2.0
611,https://github.com/winnieChen00/icdc_previous.git,2022-05-24 12:13:38+00:00,,0,winnieChen00/icdc_previous,495808245,Verilog,icdc_previous,17,0,2022-05-24 12:20:21+00:00,[],None
612,https://github.com/Hcque/arch.git,2022-05-27 05:59:24+00:00,,0,Hcque/arch,496879230,Verilog,arch,8595,0,2022-05-27 13:17:55+00:00,[],None
613,https://github.com/SunrShine/100DaysToICDesigner.git,2022-05-19 02:16:46+00:00,,0,SunrShine/100DaysToICDesigner,493890473,Verilog,100DaysToICDesigner,655,0,2022-05-19 02:16:52+00:00,[],None
614,https://github.com/ChienIKao/verilog_project.git,2022-05-25 07:46:58+00:00,,0,ChienIKao/verilog_project,496132432,Verilog,verilog_project,6,0,2022-05-25 07:48:07+00:00,[],None
615,https://github.com/1brahimmohamed/Bank-Line-Machine.git,2022-06-12 09:15:26+00:00,ELC2242 HDL project of a machine in the bank that regulates / keeps customers order ,0,1brahimmohamed/Bank-Line-Machine,502569114,Verilog,Bank-Line-Machine,2545,0,2023-03-28 17:23:39+00:00,"['fpga', 'hardware-description-language', 'queue', 'verilog']",None
616,https://github.com/VegaMario/VegaMario.git,2022-06-12 10:08:34+00:00,Config files for my GitHub profile.,0,VegaMario/VegaMario,502579909,Verilog,VegaMario,1530,0,2022-10-08 02:24:24+00:00,"['config', 'github-config']",None
617,https://github.com/tanvirarafin/msu_sub.git,2022-06-13 22:49:23+00:00,,2,tanvirarafin/msu_sub,503137469,Verilog,msu_sub,349598,0,2022-06-13 23:00:50+00:00,[],https://api.github.com/licenses/apache-2.0
618,https://github.com/JoseBarreto1/vga-verilog-move-object.git,2022-06-11 12:50:01+00:00,,0,JoseBarreto1/vga-verilog-move-object,502347323,Verilog,vga-verilog-move-object,28024,0,2022-06-11 13:03:57+00:00,[],None
619,https://github.com/Brain-chun/Verilog-HDL.git,2022-06-10 10:57:15+00:00,,0,Brain-chun/Verilog-HDL,502008894,Verilog,Verilog-HDL,5,0,2022-06-10 11:04:42+00:00,[],None
620,https://github.com/AppleChien/1102.git,2022-06-13 07:52:16+00:00,,0,AppleChien/1102,502858706,Verilog,1102,6049,0,2022-06-13 07:57:05+00:00,[],None
621,https://github.com/MMNVSarma/Digital-Alarm-Clock-using-Nexys-4-Artix-7-FPGA.git,2022-06-14 18:48:40+00:00,,0,MMNVSarma/Digital-Alarm-Clock-using-Nexys-4-Artix-7-FPGA,503482438,Verilog,Digital-Alarm-Clock-using-Nexys-4-Artix-7-FPGA,23251,0,2022-06-16 18:14:31+00:00,[],None
622,https://github.com/ALI11-2000/Open-MPW-Framework.git,2022-05-23 18:17:47+00:00,This repository contains the codebase for Development Framework for MPW Shuttle as a participant of google summer of code 2022 under FOSSi Foundation.,0,ALI11-2000/Open-MPW-Framework,495525032,Verilog,Open-MPW-Framework,418,0,2022-06-12 17:42:50+00:00,[],https://api.github.com/licenses/mit
623,https://github.com/sedataskan/digital-design.git,2022-05-22 15:30:24+00:00,BM222 | Lab - Verilog HDL codes,0,sedataskan/digital-design,495100061,Verilog,digital-design,122,0,2023-05-12 20:54:55+00:00,"['digital-design', 'verilog']",None
624,https://github.com/ibrahemdhade33/Advanced-Digital.git,2022-05-24 16:33:13+00:00,,0,ibrahemdhade33/Advanced-Digital,495905377,Verilog,Advanced-Digital,402,0,2022-05-24 16:33:42+00:00,[],None
625,https://github.com/arpiths/RV32.git,2022-05-23 05:58:10+00:00,,0,arpiths/RV32,495276914,Verilog,RV32,188,0,2022-08-18 08:18:12+00:00,[],https://api.github.com/licenses/mit
626,https://github.com/benstobbs/mfsc-example-project.git,2022-05-24 10:15:07+00:00,,0,benstobbs/mfsc-example-project,495770379,Verilog,mfsc-example-project,6,0,2022-05-24 11:10:14+00:00,[],None
627,https://github.com/mikhailbuslaev/8-to-3-commutator.git,2022-05-22 20:44:20+00:00,,0,mikhailbuslaev/8-to-3-commutator,495173149,Verilog,8-to-3-commutator,3205,0,2022-05-26 20:37:38+00:00,[],None
628,https://github.com/Gavin125-tech/Bimode_design.git,2022-05-29 10:14:09+00:00,Digital_control,0,Gavin125-tech/Bimode_design,497554423,Verilog,Bimode_design,19,0,2022-05-29 10:16:01+00:00,[],None
629,https://github.com/ahan321/mips-pipelined-cpu.git,2022-05-29 13:49:26+00:00,This is a 5-staged MIPS pipelined CPU that I created for my Computer Organization & Design Class.  It incorporates branch delays and forwarding.,0,ahan321/mips-pipelined-cpu,497604366,Verilog,mips-pipelined-cpu,2499,0,2022-07-02 06:06:14+00:00,"['cpu', 'fpga', 'mips-architecture', 'pipelining', 'verilog']",https://api.github.com/licenses/mit
630,https://github.com/waxters-osu/ece272_term_project.git,2022-05-28 23:39:16+00:00,,0,waxters-osu/ece272_term_project,497449890,Verilog,ece272_term_project,233,0,2022-06-07 01:09:12+00:00,[],None
631,https://github.com/quanta7/CUT-Circuit-Under-Test.git,2022-05-27 18:51:57+00:00,Vivado project file for CUT,0,quanta7/CUT-Circuit-Under-Test,497105472,Verilog,CUT-Circuit-Under-Test,44668,0,2022-06-05 03:31:01+00:00,[],None
632,https://github.com/unal-edigital1-lab/lab06-2022-1-grupo09-22-1-jopaju.git,2022-06-15 17:06:26+00:00,lab06-2022-1-grupo09-22-1-jopaju created by GitHub Classroom,0,unal-edigital1-lab/lab06-2022-1-grupo09-22-1-jopaju,503854955,Verilog,lab06-2022-1-grupo09-22-1-jopaju,47217,0,2023-05-23 01:07:38+00:00,[],None
633,https://github.com/sujit-saravanan/PipelinedMipsProcessor.git,2022-06-15 11:56:55+00:00,,0,sujit-saravanan/PipelinedMipsProcessor,503745454,Verilog,PipelinedMipsProcessor,138,0,2022-06-15 11:57:58+00:00,[],None
634,https://github.com/Ch1-n/RICS-MIPS-32bitCPU.git,2022-06-15 12:41:52+00:00,"1) A five-stage integer pipeline is used to implement logical operations, shift operations, move operations, arithmetic operations, transfer operations, load-store operations, coprocessor access, etc.; 2) Solve data-related problems; 3) Five-stage integer pipelines, They are: fetch, decode, execute, fetch, write back; 4) Harvard structure, separate instruction and data interface; 32 32-bit integer registers; big endian; 5) 32-bit data and address bus width; Can realize single-cycle multiplication; 6) Compatible with MIPS32 instruction set architecture, supporting all integer instructions in MIPS32 instruction set; 7) Most instructions can be completed in one clock cycle;",0,Ch1-n/RICS-MIPS-32bitCPU,503760322,Verilog,RICS-MIPS-32bitCPU,220,0,2022-06-15 12:49:01+00:00,[],None
635,https://github.com/wulala50/geofence.git,2022-06-19 12:46:55+00:00,,0,wulala50/geofence,505107742,Verilog,geofence,2367,0,2022-06-19 12:47:55+00:00,[],None
636,https://github.com/ILoveBacteria/elevator-state-machine.git,2022-06-19 08:33:10+00:00,My Digital Logic course project - Elevator state machine ,0,ILoveBacteria/elevator-state-machine,505053576,Verilog,elevator-state-machine,393,0,2023-09-01 02:51:21+00:00,"['digital-logic', 'state-machine', 'verilog', 'moore-machine']",https://api.github.com/licenses/mit
637,https://github.com/three-bee/16-bit-CPU.git,2022-06-19 18:23:59+00:00,"Custom 16-bit ISA with multi-cycle CPU, written in Verilog",0,three-bee/16-bit-CPU,505188275,Verilog,16-bit-CPU,1069,0,2022-06-19 18:43:57+00:00,[],None
638,https://github.com/stativeboss/MIPS32.git,2022-05-31 12:56:24+00:00,,0,stativeboss/MIPS32,498336127,Verilog,MIPS32,119,0,2022-06-07 13:36:06+00:00,[],None
639,https://github.com/Haitham-Babbili/FPGA.git,2022-06-07 08:29:08+00:00,FPGA examples by Design Digital Logic Gate using Verilog,0,Haitham-Babbili/FPGA,500754146,Verilog,FPGA,9,0,2022-06-14 22:03:14+00:00,[],None
640,https://github.com/SomeSadBears/PPU.git,2022-06-06 16:47:00+00:00,An attempt to reverse engineer the PPU finite state machine for the original game boy. Uses Verilog,0,SomeSadBears/PPU,500516244,Verilog,PPU,5,0,2022-06-06 16:47:17+00:00,[],None
641,https://github.com/DhruviS48/Microprocessor_MCU.git,2022-05-31 22:21:38+00:00,,0,DhruviS48/Microprocessor_MCU,498514965,Verilog,Microprocessor_MCU,19,0,2022-05-31 22:39:47+00:00,[],None
642,https://github.com/seungjaejeon/verilog_2022.git,2022-06-05 15:10:58+00:00,,0,seungjaejeon/verilog_2022,500131225,Verilog,verilog_2022,1290,0,2022-06-05 15:11:37+00:00,[],None
643,https://github.com/termias19/AND_logic_gate.v.git,2022-06-05 14:35:13+00:00,,0,termias19/AND_logic_gate.v,500122016,Verilog,AND_logic_gate.v,0,0,2022-06-05 14:36:36+00:00,[],None
644,https://github.com/LeoYaobaijian/Valid-Ready.git,2022-06-06 02:59:46+00:00,,0,LeoYaobaijian/Valid-Ready,500273219,Verilog,Valid-Ready,166,0,2022-06-07 02:56:57+00:00,[],None
645,https://github.com/SanaPudding/rv32i-pipeline.git,2022-06-05 22:00:17+00:00,,0,SanaPudding/rv32i-pipeline,500221531,Verilog,rv32i-pipeline,47,0,2022-06-05 22:01:55+00:00,[],None
646,https://github.com/zhenghang1/Arch-labs.git,2022-06-22 05:17:58+00:00,,0,zhenghang1/Arch-labs,506106958,Verilog,Arch-labs,9574,0,2022-06-22 05:19:13+00:00,[],None
647,https://github.com/hactinhhai123/Floatingpoint-to-binary.git,2022-06-21 16:32:50+00:00,,0,hactinhhai123/Floatingpoint-to-binary,505923199,Verilog,Floatingpoint-to-binary,7,0,2022-06-21 16:33:54+00:00,[],None
648,https://github.com/MohammadHDehghani/Computer_Architecture_Project.git,2022-06-21 17:04:13+00:00,Single Cycle MIPS Processor,0,MohammadHDehghani/Computer_Architecture_Project,505934132,Verilog,Computer_Architecture_Project,19,0,2022-06-21 17:08:43+00:00,[],None
649,https://github.com/vladgabriel24/Verilog-Projects.git,2022-06-02 10:24:17+00:00,,0,vladgabriel24/Verilog-Projects,499089267,Verilog,Verilog-Projects,1383,0,2022-06-02 14:12:57+00:00,[],None
650,https://github.com/adwaithkj/verilog-coursework.git,2022-06-02 14:46:56+00:00,,0,adwaithkj/verilog-coursework,499175240,Verilog,verilog-coursework,20804,0,2022-06-02 14:48:53+00:00,[],None
651,https://github.com/hactinhhai123/CPU-Singcle.git,2022-06-21 14:32:24+00:00,,0,hactinhhai123/CPU-Singcle,505879549,Verilog,CPU-Singcle,6,0,2022-06-21 14:35:52+00:00,[],None
652,https://github.com/MiangMG/DatenLord_t3.git,2022-06-10 09:56:10+00:00,假定valid和ready信号都不满足时序要求，都需要用寄存器打一拍，实现该总线握手场景,0,MiangMG/DatenLord_t3,501990335,Verilog,DatenLord_t3,627,0,2022-06-10 10:01:35+00:00,[],None
653,https://github.com/r09g/iadc_caravel_wrapper.git,2022-06-07 05:04:04+00:00,,1,r09g/iadc_caravel_wrapper,500696213,Verilog,iadc_caravel_wrapper,36602,0,2022-06-07 05:04:09+00:00,[],https://api.github.com/licenses/apache-2.0
654,https://github.com/KOmar48/Pipelined-Processor.git,2022-06-10 02:47:42+00:00,Pipelined processor for MIPS instructions - based on Harvard Architecture,0,KOmar48/Pipelined-Processor,501878457,Verilog,Pipelined-Processor,255,0,2022-06-10 03:04:41+00:00,[],None
655,https://github.com/krishagrawal112/Autonomous-Rover.git,2022-05-23 10:53:30+00:00,,0,krishagrawal112/Autonomous-Rover,495369985,Verilog,Autonomous-Rover,66449,0,2023-06-10 19:49:15+00:00,[],None
656,https://github.com/Namu-Lee/comorg_lab3.git,2022-05-29 04:39:27+00:00,2022 computer organization lab3,0,Namu-Lee/comorg_lab3,497490963,Verilog,comorg_lab3,131,0,2022-05-29 04:40:46+00:00,[],None
657,https://github.com/opensource-fr/wavelet_transform_hw_accel.git,2022-05-29 03:48:35+00:00,Open source hardware accelerator for wavelet transforms,0,opensource-fr/wavelet_transform_hw_accel,497483180,Verilog,wavelet_transform_hw_accel,51887,0,2022-05-29 03:51:25+00:00,[],https://api.github.com/licenses/apache-2.0
658,https://github.com/William0908/IC_Contest_2016.git,2022-05-28 04:41:29+00:00,IC contest 2016 preliminary,0,William0908/IC_Contest_2016,497214602,Verilog,IC_Contest_2016,555,0,2022-07-14 09:43:51+00:00,[],None
659,https://github.com/amirhbv/CAD-CA2.git,2022-05-25 04:13:54+00:00,Computer-aided Design CA2,0,amirhbv/CAD-CA2,496078644,Verilog,CAD-CA2,1402,0,2022-05-25 21:41:21+00:00,[],None
660,https://github.com/ViiniciusK9/sistemas_digitais.git,2022-06-22 22:42:37+00:00,,0,ViiniciusK9/sistemas_digitais,506426506,Verilog,sistemas_digitais,17,0,2022-06-22 22:44:07+00:00,[],None
661,https://github.com/zyad19975/digital-IC-design-projects.git,2022-06-12 14:44:08+00:00,This repo contains Digital Designed Blocks designed for the purpose of study,0,zyad19975/digital-IC-design-projects,502642725,Verilog,digital-IC-design-projects,3,0,2022-06-12 20:21:38+00:00,[],None
662,https://github.com/Jerry-hyl/pipeline-CPU.git,2022-06-11 13:03:08+00:00,It has a hazard solution,0,Jerry-hyl/pipeline-CPU,502350240,Verilog,pipeline-CPU,1780,0,2022-06-11 13:06:02+00:00,[],None
663,https://github.com/KevinKarnadi/Logic-Design-Verilog.git,2022-06-09 07:52:03+00:00,Codes for my Logic Design assignments,0,KevinKarnadi/Logic-Design-Verilog,501556621,Verilog,Logic-Design-Verilog,736,0,2022-06-09 07:58:43+00:00,[],None
664,https://github.com/Gurpreet11903460/a-function-using-32-pmos-and-32-nmos-on-NCSIM-CADENCE-.git,2022-06-09 04:28:59+00:00,,0,Gurpreet11903460/a-function-using-32-pmos-and-32-nmos-on-NCSIM-CADENCE-,501503608,Verilog,a-function-using-32-pmos-and-32-nmos-on-NCSIM-CADENCE-,7,0,2022-06-09 04:30:28+00:00,[],https://api.github.com/licenses/apache-2.0
665,https://github.com/emresagiroglu/Verilog-Project.git,2022-06-08 21:22:51+00:00,CSE 3038 Term Project 2,0,emresagiroglu/Verilog-Project,501414741,,Verilog-Project,1714,0,2022-11-25 17:13:47+00:00,[],None
666,https://github.com/WitchElaina/single-circle-processor.git,2022-06-09 01:25:50+00:00,"A single circle CPU in Verilog, USTB Computer Organization homework.",0,WitchElaina/single-circle-processor,501463838,Verilog,single-circle-processor,3,0,2022-06-19 01:25:07+00:00,[],None
667,https://github.com/whoizca/MedianFillter.git,2022-06-09 01:29:18+00:00,,0,whoizca/MedianFillter,501464636,Verilog,MedianFillter,122,0,2022-06-09 01:34:01+00:00,[],None
668,https://github.com/alirezaek/MIPS.git,2022-06-14 20:01:58+00:00,MIPS Processor,0,alirezaek/MIPS,503503629,Verilog,MIPS,102,0,2022-06-14 20:04:19+00:00,[],None
669,https://github.com/sarin20/SPILEDCONTROL.git,2022-06-22 13:53:14+00:00,Simple IP to send data to HD107 or similar iwo wire programmable LED chain,0,sarin20/SPILEDCONTROL,506268796,Verilog,SPILEDCONTROL,9,0,2022-06-22 14:04:22+00:00,[],https://api.github.com/licenses/gpl-2.0
670,https://github.com/casval5fn28/NYCU-2022-COmputer-Organization.git,2022-06-22 15:59:52+00:00,,0,casval5fn28/NYCU-2022-COmputer-Organization,506315358,Verilog,NYCU-2022-COmputer-Organization,9605,0,2022-06-22 17:44:21+00:00,[],None
671,https://github.com/alirezanaserinia/ARM.git,2022-06-22 11:05:30+00:00,ARM processor,0,alirezanaserinia/ARM,506210829,Verilog,ARM,17,0,2022-06-22 11:08:21+00:00,[],None
672,https://github.com/cyberseihis/CadExercises.git,2022-06-02 21:55:04+00:00,cad,0,cyberseihis/CadExercises,499301744,Verilog,CadExercises,11828,0,2023-01-26 11:28:50+00:00,[],None
673,https://github.com/AbdulrahmanNourEldeen/SPI.git,2022-06-02 00:12:12+00:00,,0,AbdulrahmanNourEldeen/SPI,498936261,Verilog,SPI,101,0,2022-06-02 00:14:40+00:00,[],None
674,https://github.com/NestorMatajira/caravel_Nestor.git,2022-06-01 21:05:11+00:00,,0,NestorMatajira/caravel_Nestor,498898173,Verilog,caravel_Nestor,51887,0,2022-06-01 22:23:42+00:00,[],https://api.github.com/licenses/apache-2.0
675,https://github.com/arianniakan/MipsSingleCycleProcessor.git,2022-06-02 09:52:28+00:00,Single Cycle Implementation of the Mips processor in Verilog,0,arianniakan/MipsSingleCycleProcessor,499079992,Verilog,MipsSingleCycleProcessor,103,0,2022-06-02 10:15:59+00:00,[],None
676,https://github.com/AureliusLim/hdl-2.git,2022-05-31 06:53:17+00:00,,0,AureliusLim/hdl-2,498220582,Verilog,hdl-2,9,0,2022-05-31 09:55:47+00:00,[],None
677,https://github.com/sundaewaffle/Verilog.git,2022-05-31 09:45:54+00:00,,0,sundaewaffle/Verilog,498275342,Verilog,Verilog,118,0,2022-05-31 09:50:58+00:00,[],None
678,https://github.com/Najah-Nasir/Najah-Nasir-FPU_half_precision_dummy2.git,2022-05-31 15:54:27+00:00,,0,Najah-Nasir/Najah-Nasir-FPU_half_precision_dummy2,498402396,Verilog,Najah-Nasir-FPU_half_precision_dummy2,19441,0,2022-05-31 16:02:59+00:00,[],None
679,https://github.com/DonjetaMorina9/CPU16BIT.git,2022-05-31 10:45:42+00:00,"arkitektur, nje cpu 16bit",0,DonjetaMorina9/CPU16BIT,498293882,Verilog,CPU16BIT,7,0,2022-05-31 10:46:33+00:00,[],None
680,https://github.com/Sairam-Ganti/verilogPractice.git,2022-06-03 16:28:32+00:00,Verilog and System Verilog practise,0,Sairam-Ganti/verilogPractice,499578766,Verilog,verilogPractice,1,0,2022-06-03 16:30:13+00:00,[],None
681,https://github.com/donghoon-io/spring2022comporg_lab3.git,2022-05-28 12:02:35+00:00,,1,donghoon-io/spring2022comporg_lab3,497305629,Verilog,spring2022comporg_lab3,5918,0,2022-10-01 20:13:07+00:00,[],None
682,https://github.com/AshVenKo/FPGA.git,2022-06-01 05:54:27+00:00,,0,AshVenKo/FPGA,498608438,Verilog,FPGA,3239,0,2022-06-01 06:00:27+00:00,[],None
683,https://github.com/oldiss/NES_MAPPERS_GEN.git,2022-06-01 02:41:13+00:00,,0,oldiss/NES_MAPPERS_GEN,498567609,Verilog,NES_MAPPERS_GEN,9,0,2022-06-01 02:44:19+00:00,[],None
684,https://github.com/ChenNie99/mtlRL-xmg.git,2022-05-20 14:13:10+00:00,GCN-RL with mockturtle in xmg,0,ChenNie99/mtlRL-xmg,494490807,,mtlRL-xmg,39415,0,2022-05-07 19:04:11+00:00,[],https://api.github.com/licenses/mit
685,https://github.com/linxiamiao/Tne-bus-shake-hands.git,2022-05-24 10:19:24+00:00,,0,linxiamiao/Tne-bus-shake-hands,495771677,Verilog,Tne-bus-shake-hands,206,0,2022-05-24 11:01:00+00:00,[],None
686,https://github.com/IshaanReni/Vision.git,2022-05-24 10:54:02+00:00,,0,IshaanReni/Vision,495782558,Verilog,Vision,1076131,0,2023-06-16 21:57:44+00:00,[],None
687,https://github.com/zhermin/VOICcinE.git,2022-05-24 11:11:05+00:00,VOICcinE: A 53-state voice-interfaced RPG on the Basys3 FPGA about a doctor fighting viruses to find the Covid-19 vaccine,0,zhermin/VOICcinE,495787800,Verilog,VOICcinE,11001,0,2022-05-24 15:26:21+00:00,"['fpga', 'rpg', 'verilog']",None
688,https://github.com/mattthewbeach/wrapped_memLCDdriver.git,2022-05-23 23:53:52+00:00,,0,mattthewbeach/wrapped_memLCDdriver,495609183,Verilog,wrapped_memLCDdriver,2745,0,2022-05-23 23:54:00+00:00,[],https://api.github.com/licenses/apache-2.0
689,https://github.com/0901122/0520.git,2022-05-20 02:16:59+00:00,,0,0901122/0520,494291907,Verilog,0520,2,0,2022-05-20 02:29:13+00:00,[],None
690,https://github.com/ivanisakov99/EC311.git,2022-05-20 19:48:12+00:00,,0,ivanisakov99/EC311,494589247,Verilog,EC311,1131,0,2022-05-20 19:54:56+00:00,[],None
691,https://github.com/Hiteshiitg123/sudoku_solver_verilog.git,2022-05-20 06:16:39+00:00,"Sudoku solving using full_house, candidate_line algorithms",0,Hiteshiitg123/sudoku_solver_verilog,494344301,Verilog,sudoku_solver_verilog,8,0,2022-05-20 06:20:30+00:00,[],None
692,https://github.com/philpem/datatrak-rom-emulator.git,2022-05-22 20:16:51+00:00,EPROM emulator and debug card for Datatrak Mk.II Locator,0,philpem/datatrak-rom-emulator,495167664,Verilog,datatrak-rom-emulator,1360,0,2022-05-22 20:17:10+00:00,[],None
693,https://github.com/3ab3at/Digital-Clock.git,2022-05-21 22:21:35+00:00,A simple stopwatch implemented using Verilog.,0,3ab3at/Digital-Clock,494907014,Verilog,Digital-Clock,3,0,2022-05-21 22:22:19+00:00,[],None
694,https://github.com/JunhaoGoo/test1.git,2022-05-21 03:39:25+00:00,a test for myself,0,JunhaoGoo/test1,494671712,Verilog,test1,2,0,2022-05-21 07:14:34+00:00,[],None
695,https://github.com/saul-rodriguez/OpenLane_reference_designs.git,2022-05-22 09:05:17+00:00,,0,saul-rodriguez/OpenLane_reference_designs,495009300,Verilog,OpenLane_reference_designs,6931,0,2022-05-22 11:28:44+00:00,[],None
696,https://github.com/KevinCerqueira/tec499-problema-02.git,2022-05-25 11:17:48+00:00,,2,KevinCerqueira/tec499-problema-02,496198440,Verilog,tec499-problema-02,4422,0,2023-08-17 13:53:29+00:00,[],None
697,https://github.com/aleeau/MPW-6-Caravel.git,2022-06-06 23:13:14+00:00,,0,aleeau/MPW-6-Caravel,500620810,Verilog,MPW-6-Caravel,51884,0,2022-06-07 01:52:30+00:00,[],https://api.github.com/licenses/apache-2.0
698,https://github.com/umangs30/fpga-team-c.git,2022-06-07 13:20:54+00:00,,1,umangs30/fpga-team-c,500849214,Verilog,fpga-team-c,9,0,2022-06-07 13:23:37+00:00,[],None
699,https://github.com/flyingpig72/hw-primitives.git,2022-06-08 03:47:06+00:00,hardware primitives,0,flyingpig72/hw-primitives,501090563,Verilog,hw-primitives,4,0,2022-06-08 04:00:54+00:00,[],None
700,https://github.com/zero1777/VLSI-System-Design.git,2022-06-19 07:34:40+00:00,NTHU CS. 10920 CS512000 VLSI System Design.,0,zero1777/VLSI-System-Design,505042198,Verilog,VLSI-System-Design,51473,0,2022-06-27 04:15:11+00:00,[],None
701,https://github.com/NicolasOrcasitas/caravel_norcasitas.git,2022-06-17 20:51:45+00:00,,0,NicolasOrcasitas/caravel_norcasitas,504668992,Verilog,caravel_norcasitas,51886,0,2022-06-20 20:58:05+00:00,[],https://api.github.com/licenses/apache-2.0
702,https://github.com/elberthomay/Bhargava.git,2022-06-19 10:42:20+00:00,,0,elberthomay/Bhargava,505080281,Verilog,Bhargava,45282,0,2022-09-09 04:56:51+00:00,[],None
703,https://github.com/aishwaryapatil26/ADLD.git,2022-05-19 02:38:26+00:00,,0,aishwaryapatil26/ADLD,493895506,Verilog,ADLD,137,0,2022-05-20 15:00:42+00:00,[],None
704,https://github.com/qqo60710/hw5.git,2022-05-19 15:43:31+00:00,,0,qqo60710/hw5,494133537,Verilog,hw5,12,0,2022-05-19 15:44:21+00:00,[],None
705,https://github.com/uf123/hw3.git,2022-05-19 11:15:09+00:00,,0,uf123/hw3,494038550,Verilog,hw3,3,0,2022-05-19 11:17:14+00:00,[],None
706,https://github.com/uf123/hw5.git,2022-05-19 13:41:28+00:00,,0,uf123/hw5,494088163,Verilog,hw5,3,0,2022-05-19 13:42:30+00:00,[],None
707,https://github.com/ARUNMAHESH007/apb.git,2022-06-12 12:49:21+00:00,,0,ARUNMAHESH007/apb,502614492,Verilog,apb,88,0,2022-06-12 12:55:18+00:00,[],None
708,https://github.com/kotushkens/circuitry_2.git,2022-06-16 23:27:31+00:00,Second lab for the functional circuitry subject,0,kotushkens/circuitry_2,504333871,Verilog,circuitry_2,8,0,2022-06-16 23:28:57+00:00,[],None
709,https://github.com/KaiwenLiu1227/Mars-Rover-2022-Design-and-Implementation.git,2022-06-19 23:25:08+00:00,"In this project, we are aiming to design a fully functional Mars Rover which can explore the whole planet and detect alien and their building automatically while doing its own path planning, and a ground station should also be implemented for data display, storage and remote control.",0,KaiwenLiu1227/Mars-Rover-2022-Design-and-Implementation,505240364,Verilog,Mars-Rover-2022-Design-and-Implementation,78210,0,2024-02-01 12:09:47+00:00,[],None
710,https://github.com/tictactoeid/logic-design-final-project.git,2022-06-01 14:40:37+00:00,,0,tictactoeid/logic-design-final-project,498775064,Verilog,logic-design-final-project,1318,0,2024-02-23 15:11:07+00:00,[],None
711,https://github.com/RobertCrist/ECE-371-Lab-6.git,2022-05-26 05:29:27+00:00,Maze Game,0,RobertCrist/ECE-371-Lab-6,496492716,Verilog,ECE-371-Lab-6,13311,0,2022-06-29 08:46:17+00:00,[],None
712,https://github.com/sabrinayhu/caravel_walkthrough.git,2022-05-26 18:39:19+00:00,,0,sabrinayhu/caravel_walkthrough,496733711,Verilog,caravel_walkthrough,51884,0,2022-05-26 18:46:24+00:00,[],https://api.github.com/licenses/apache-2.0
713,https://github.com/skyline123-boomer/ECE658_VLSI.git,2022-05-27 01:28:12+00:00,,0,skyline123-boomer/ECE658_VLSI,496824113,Verilog,ECE658_VLSI,88830,0,2022-05-27 02:10:08+00:00,[],None
714,https://github.com/Entropy-xcy/logic_synthesis_benchmark.git,2022-05-27 01:06:16+00:00,,0,Entropy-xcy/logic_synthesis_benchmark,496819790,Verilog,logic_synthesis_benchmark,10541,0,2022-05-27 01:34:39+00:00,[],None
715,https://github.com/FrederickPu/matrix-verilog.git,2022-05-27 19:01:44+00:00,,0,FrederickPu/matrix-verilog,497107979,Verilog,matrix-verilog,3383,0,2023-01-01 17:57:07+00:00,[],None
716,https://github.com/xinyuey/basic_verilog_yxy.git,2022-05-31 12:11:43+00:00,,0,xinyuey/basic_verilog_yxy,498321012,Verilog,basic_verilog_yxy,667,0,2022-05-31 12:29:49+00:00,[],None
717,https://github.com/AndrianDevFPGA/ControlGate.git,2022-06-02 19:10:17+00:00,,0,AndrianDevFPGA/ControlGate,499259197,Verilog,ControlGate,3,0,2022-06-02 19:12:01+00:00,[],None
718,https://github.com/dxsumit/Computer-Architrcture-Lab.git,2022-05-21 08:14:58+00:00,Codes of Computer Architecture Lab,0,dxsumit/Computer-Architrcture-Lab,494721828,Verilog,Computer-Architrcture-Lab,4778,0,2022-05-21 08:17:48+00:00,[],None
719,https://github.com/andreiT14/SummerPractice2022.git,2022-05-21 07:53:33+00:00,,0,andreiT14/SummerPractice2022,494717290,Verilog,SummerPractice2022,1457,0,2022-05-24 18:10:07+00:00,[],None
720,https://github.com/duyang92/jigsaw-sketch-paper.git,2022-05-23 10:06:54+00:00,,0,duyang92/jigsaw-sketch-paper,495354774,Verilog,jigsaw-sketch-paper,146464,0,2023-02-10 12:53:00+00:00,[],None
721,https://github.com/Momtahin-Ahammed/VLSI_Circuit_Design.git,2022-05-23 18:12:00+00:00,,0,Momtahin-Ahammed/VLSI_Circuit_Design,495523308,Verilog,VLSI_Circuit_Design,2427,0,2022-05-23 18:33:38+00:00,[],None
722,https://github.com/MarcoGhercioiu/VerilogVendingMachine.git,2022-05-21 21:59:31+00:00,Vending machine implemented in verilog,0,MarcoGhercioiu/VerilogVendingMachine,494903637,Verilog,VerilogVendingMachine,3,0,2022-05-21 22:06:46+00:00,[],None
723,https://github.com/MelonJ/Multi-Peripheral-Implementation-Basys3-.git,2022-05-25 17:01:26+00:00,The purpose of this project was to connect several different peripheral devices to the Basys 3 FPGA board.,0,MelonJ/Multi-Peripheral-Implementation-Basys3-,496320046,Verilog,Multi-Peripheral-Implementation-Basys3-,16,0,2022-05-25 17:35:19+00:00,[],None
724,https://github.com/01fe21mve011/sneha.git,2022-05-19 19:34:08+00:00,,0,01fe21mve011/sneha,494205434,Verilog,sneha,35,0,2022-05-20 11:10:13+00:00,[],None
725,https://github.com/Linty-Services/public-samples.git,2022-05-19 13:14:31+00:00,Public Samples,0,Linty-Services/public-samples,494078038,Verilog,public-samples,3,0,2022-05-19 13:23:02+00:00,[],None
726,https://github.com/WangHao-Hua/Mr.Dope.git,2022-05-29 14:46:57+00:00,,0,WangHao-Hua/Mr.Dope,497619432,Verilog,Mr.Dope,1,0,2022-05-29 14:48:09+00:00,[],None
727,https://github.com/syper4-github/PS2_driver.git,2022-06-07 14:16:24+00:00,A driver for PS2 keyboard,0,syper4-github/PS2_driver,500870673,Verilog,PS2_driver,2058,0,2022-06-07 14:18:35+00:00,[],None
728,https://github.com/orionfernandes/Stopwatch-Simulation.git,2022-06-04 05:29:55+00:00,Implementation of Stopwatch with FSM as hardware logic.,0,orionfernandes/Stopwatch-Simulation,499734415,Verilog,Stopwatch-Simulation,53,0,2022-06-04 05:33:50+00:00,[],None
729,https://github.com/ShounakHerekar/verilog.git,2022-06-10 17:39:28+00:00,,0,ShounakHerekar/verilog,502130203,Verilog,verilog,2,0,2022-12-05 18:08:48+00:00,[],None
730,https://github.com/Libra-SKY/UnderTheHood_1.git,2022-06-15 11:02:44+00:00,,0,Libra-SKY/UnderTheHood_1,503728798,Verilog,UnderTheHood_1,36,0,2022-07-23 19:01:02+00:00,[],None
731,https://github.com/rd2606/D-FlipFlop.git,2022-06-11 01:13:26+00:00,,0,rd2606/D-FlipFlop,502219891,Verilog,D-FlipFlop,363,0,2022-06-11 01:13:56+00:00,[],None
732,https://github.com/giaan-nguyen/ECEN-689-FPGA-Info.git,2022-06-11 07:22:06+00:00,Lab files for ECEN 689: FPGA Information Processing Systems.,0,giaan-nguyen/ECEN-689-FPGA-Info,502279309,Verilog,ECEN-689-FPGA-Info,17410,0,2023-01-27 23:49:28+00:00,[],None
733,https://github.com/SomeSadBears/UART.git,2022-06-06 16:24:22+00:00,Implements UART communication protocol. Uses Verilog. Targets derivative of PIcoBlaze,0,SomeSadBears/UART,500508540,Verilog,UART,9,0,2022-06-06 16:44:35+00:00,[],None
734,https://github.com/GewoonMidas/HDMI-TX-Clash.git,2022-06-16 11:41:13+00:00,,0,GewoonMidas/HDMI-TX-Clash,504132350,Verilog,HDMI-TX-Clash,39,0,2022-06-16 11:53:42+00:00,[],None
735,https://github.com/sarthak-deore/smart-traffic-controller.git,2022-06-10 13:16:54+00:00,,0,sarthak-deore/smart-traffic-controller,502050120,Verilog,smart-traffic-controller,151,0,2022-06-10 13:18:51+00:00,[],None
736,https://github.com/retar-kamuy/riscv.git,2022-06-11 08:35:34+00:00,,0,retar-kamuy/riscv,502294118,Verilog,riscv,4227,0,2022-10-23 02:34:15+00:00,[],https://api.github.com/licenses/bsd-3-clause
737,https://github.com/axyn45/2022_Logisim_Curriculum_Design.git,2022-06-13 04:44:22+00:00,,0,axyn45/2022_Logisim_Curriculum_Design,502808041,Verilog,2022_Logisim_Curriculum_Design,60011,0,2022-06-13 07:41:12+00:00,[],None
738,https://github.com/willlogs/my-arm.git,2022-06-13 14:46:13+00:00,An ARM7 processor in verilog :|,0,willlogs/my-arm,502997084,Verilog,my-arm,882,0,2022-08-10 20:02:27+00:00,[],None
739,https://github.com/dadaozhijian22/TeQuan_Code.git,2022-06-03 09:05:14+00:00,上传的特权同学深入浅出玩转FPGA课程的源代码,0,dadaozhijian22/TeQuan_Code,499446432,Verilog,TeQuan_Code,468,0,2022-06-03 09:11:58+00:00,[],None
740,https://github.com/sigeryang/hdlbits-solutions.git,2022-06-06 01:45:11+00:00,My solutions to problem sets on HDLBits (https://hdlbits.01xz.net),0,sigeryang/hdlbits-solutions,500258175,Verilog,hdlbits-solutions,34,0,2022-06-06 12:15:49+00:00,[],None
741,https://github.com/LabIVUFBA/TesteMemoVGA.git,2022-06-05 14:53:22+00:00,Testes com memória e saída VGA,0,LabIVUFBA/TesteMemoVGA,500126814,Verilog,TesteMemoVGA,71049,0,2022-06-06 00:51:31+00:00,[],None
742,https://github.com/Rexllnia/RISC.git,2022-06-16 13:32:22+00:00,FPGA_RISC_MCU,0,Rexllnia/RISC,504167966,Verilog,RISC,33846,0,2022-06-16 13:34:23+00:00,[],None
743,https://github.com/tarush-g/alternating-step-generator.git,2022-06-21 01:44:31+00:00, A simple 4-bit alternating step generator written in Verilog.,0,tarush-g/alternating-step-generator,505653621,Verilog,alternating-step-generator,24,0,2022-06-21 04:50:14+00:00,[],None
744,https://github.com/2017250297-choi/2022.spring.COSE221-02team20.git,2022-06-22 07:42:54+00:00,this is repo for team project.,0,2017250297-choi/2022.spring.COSE221-02team20,506147099,Verilog,2022.spring.COSE221-02team20,13,0,2022-06-22 10:14:07+00:00,[],None
745,https://github.com/GiddaZhang/CPU_single-multicycle.git,2022-06-19 16:33:05+00:00,,0,GiddaZhang/CPU_single-multicycle,505163312,Verilog,CPU_single-multicycle,26,0,2022-06-19 16:34:58+00:00,[],None
746,https://github.com/luckyjp6/Computer_Organization.git,2022-06-21 15:28:23+00:00,,0,luckyjp6/Computer_Organization,505900661,Verilog,Computer_Organization,5118,0,2022-06-21 15:29:12+00:00,[],None
747,https://github.com/shyam2672/Basys3_AlarmClock.git,2022-06-21 15:29:07+00:00,Designing an Alarm Clock using basys 3 FPGA chip,0,shyam2672/Basys3_AlarmClock,505900916,Verilog,Basys3_AlarmClock,13,0,2022-06-21 15:34:43+00:00,[],None
748,https://github.com/jalaxy/Nexys-4-DDR-app.git,2022-06-17 09:48:38+00:00,Projects and application of Nexys 4 DDR board,0,jalaxy/Nexys-4-DDR-app,504478691,Verilog,Nexys-4-DDR-app,12595,0,2022-06-21 10:09:32+00:00,[],https://api.github.com/licenses/gpl-3.0
749,https://github.com/Cherrywoood/func_circuitry_3.git,2022-06-19 23:17:35+00:00,,0,Cherrywoood/func_circuitry_3,505239302,Verilog,func_circuitry_3,9,0,2022-06-19 23:17:41+00:00,[],None
750,https://github.com/htmos6/HDL-Bits-Solutions.git,2022-06-06 21:51:00+00:00,HDL bit website solutions for Verilog practices,0,htmos6/HDL-Bits-Solutions,500603971,Verilog,HDL-Bits-Solutions,77,0,2022-06-06 22:35:52+00:00,"['hdl', 'verilog']",None
751,https://github.com/superhaks/1x3-Router.git,2022-05-31 21:42:15+00:00,We create a router using Verilog. ,0,superhaks/1x3-Router,498506399,Verilog,1x3-Router,1762,0,2022-05-31 22:06:26+00:00,[],None
752,https://github.com/0907yF/logichw0519.git,2022-05-19 02:54:02+00:00,,0,0907yF/logichw0519,493899171,Verilog,logichw0519,21,0,2022-05-19 02:55:53+00:00,[],None
753,https://github.com/jasonsogod/jason123.git,2022-05-19 03:24:06+00:00,,0,jasonsogod/jason123,493905974,Verilog,jason123,1,0,2022-05-19 03:24:53+00:00,[],None
754,https://github.com/Mr-Moore/LFSR.git,2022-05-19 06:41:19+00:00,,0,Mr-Moore/LFSR,493951337,Verilog,LFSR,1,0,2022-05-19 06:41:59+00:00,[],None
755,https://github.com/Rayilam/Computer-architecture_ucas.git,2022-05-20 02:33:22+00:00,,0,Rayilam/Computer-architecture_ucas,494295421,Verilog,Computer-architecture_ucas,2462,0,2022-05-26 04:57:15+00:00,[],None
756,https://github.com/zenit-abh/verilog.git,2022-05-20 03:44:44+00:00,,0,zenit-abh/verilog,494310716,Verilog,verilog,14,0,2022-07-23 06:03:06+00:00,[],None
757,https://github.com/s1410932049/HW5.git,2022-05-20 02:55:48+00:00,,0,s1410932049/HW5,494300423,Verilog,HW5,9,0,2022-05-20 02:56:18+00:00,[],None
758,https://github.com/lonk151/lonk.git,2022-05-27 16:16:18+00:00,,0,lonk151/lonk,497061832,Verilog,lonk,465,0,2022-05-27 16:36:37+00:00,[],None
759,https://github.com/Yash-Goklani/Vending-Machine.git,2022-05-29 11:34:29+00:00,The machine can take only two types of coins of denomination 1 and 2 in any order.    It delivers only one product that is priced Rs. 3.     On receiving Rs. 3 the product is delivered by asserting an output X=1 which otherwise remains 0.     If it gets Rs. 4 then the product is delivered by asserting X and also a coin     return mechanism is activated by output Y = 1 to return a Re. 1 coin .    ,0,Yash-Goklani/Vending-Machine,497571993,Verilog,Vending-Machine,438,0,2022-05-29 11:40:54+00:00,[],https://api.github.com/licenses/mit
760,https://github.com/KaiLongHu/54-work-support.git,2022-05-30 13:56:06+00:00,,0,KaiLongHu/54-work-support,497965399,Verilog,54-work-support,27152,0,2022-05-30 14:17:39+00:00,[],None
761,https://github.com/leducanhanhlc/SAPA_01.git,2022-05-27 08:35:36+00:00,,0,leducanhanhlc/SAPA_01,496920882,Verilog,SAPA_01,51889,0,2022-05-27 11:04:32+00:00,[],https://api.github.com/licenses/apache-2.0
762,https://github.com/xych3/LED_Switch.git,2022-05-31 09:08:17+00:00,Realization of running lantern,0,xych3/LED_Switch,498263024,Verilog,LED_Switch,1,0,2022-05-31 09:11:55+00:00,[],None
763,https://github.com/Najah-Nasir/FPU_half_precision_dummy13ns.git,2022-05-31 16:19:12+00:00,,0,Najah-Nasir/FPU_half_precision_dummy13ns,498410874,Verilog,FPU_half_precision_dummy13ns,19441,0,2022-05-31 16:22:24+00:00,[],None
764,https://github.com/S-Sankara/Finalyear_project.git,2022-06-08 05:40:41+00:00,,0,S-Sankara/Finalyear_project,501115231,Verilog,Finalyear_project,5618,0,2022-06-08 05:53:27+00:00,[],https://api.github.com/licenses/gpl-3.0
765,https://github.com/RavenSpear/CoreSight-Decoder.git,2022-06-08 01:25:28+00:00,An FPGA-based CoreSight Decoder for ZCU-102 Board,1,RavenSpear/CoreSight-Decoder,501057686,Verilog,CoreSight-Decoder,84478,0,2022-12-11 14:45:49+00:00,[],https://api.github.com/licenses/gpl-3.0
766,https://github.com/farhan-tallman/5.1_uart_basic.git,2022-06-02 08:36:32+00:00,basic uart module in Verilog,0,farhan-tallman/5.1_uart_basic,499056536,Verilog,5.1_uart_basic,2,0,2022-06-02 08:36:39+00:00,[],https://api.github.com/licenses/mit
767,https://github.com/rishabhparihar99/Verilog-Dual-Port-Ram-with-Self-Verifying-Testbench.git,2022-06-15 19:56:32+00:00,The code focuses on designing automated testbench,0,rishabhparihar99/Verilog-Dual-Port-Ram-with-Self-Verifying-Testbench,503904312,Verilog,Verilog-Dual-Port-Ram-with-Self-Verifying-Testbench,65,0,2022-06-15 20:03:44+00:00,[],None
768,https://github.com/zero1777/VLSI-Physical-Design-Automation.git,2022-06-19 07:51:44+00:00,NTHU CS. 11010 CS613500 VLSI Physical Design Automation.,0,zero1777/VLSI-Physical-Design-Automation,505045484,Verilog,VLSI-Physical-Design-Automation,130213,0,2023-01-19 11:15:51+00:00,[],None
769,https://github.com/Ziad-cyber/UART.git,2022-06-20 08:26:59+00:00,,0,Ziad-cyber/UART,505355986,Verilog,UART,7,0,2022-06-20 08:28:44+00:00,[],None
770,https://github.com/ctllmp/Very-Simple-CPU-Project.git,2022-06-10 22:19:32+00:00,,0,ctllmp/Very-Simple-CPU-Project,502194696,Verilog,Very-Simple-CPU-Project,27,0,2022-10-24 16:35:05+00:00,[],https://api.github.com/licenses/gpl-3.0
771,https://github.com/rd2606/Encoder.git,2022-06-11 00:27:36+00:00,I have studied the concept of Encoder and have implemented it in Verilog using Behavioral modeling,0,rd2606/Encoder,502213715,Verilog,Encoder,308,0,2022-06-11 00:28:11+00:00,[],None
772,https://github.com/rd2606/Comparator.git,2022-06-11 00:40:02+00:00,,0,rd2606/Comparator,502215346,Verilog,Comparator,448,0,2022-06-11 00:40:31+00:00,[],None
773,https://github.com/KOmar48/UART-Communication.git,2022-06-10 03:07:13+00:00,Serial Communication hardware design,0,KOmar48/UART-Communication,501882668,Verilog,UART-Communication,2,0,2022-06-10 03:08:19+00:00,[],None
774,https://github.com/MfCrizz/caravel_demonstration.git,2022-06-21 15:23:46+00:00,,0,MfCrizz/caravel_demonstration,505898990,Verilog,caravel_demonstration,51947,0,2022-06-21 16:17:42+00:00,[],https://api.github.com/licenses/apache-2.0
775,https://github.com/jihunmoon/bnn.git,2022-05-20 07:31:09+00:00,,0,jihunmoon/bnn,494365612,Verilog,bnn,292,0,2022-05-20 07:31:40+00:00,[],None
776,https://github.com/OishyS11/Design-of-a-Four-Bit-Computer-Using-Verilog.git,2022-05-22 02:35:18+00:00,,0,OishyS11/Design-of-a-Four-Bit-Computer-Using-Verilog,494941595,Verilog,Design-of-a-Four-Bit-Computer-Using-Verilog,218,0,2022-05-22 02:38:42+00:00,[],None
777,https://github.com/rahulrbharadwaj/finallyp.git,2022-05-23 02:38:21+00:00,,0,rahulrbharadwaj/finallyp,495235205,Verilog,finallyp,54,0,2022-05-23 02:39:42+00:00,[],None
778,https://github.com/nimamaguale/HW4.git,2022-05-19 12:09:35+00:00,,0,nimamaguale/HW4,494055866,Verilog,HW4,4,0,2022-05-19 12:10:30+00:00,[],None
779,https://github.com/AbhinayReddy10082003/HomeAutomation.git,2022-05-19 13:37:52+00:00,This project aims to automate home systems by  introducing a degree of computerized or automatic control over certain electrical and electronic systems in a home. This project aims to increase both security and comfort without human interference. This project uses Verilog HDL in Xilinx,0,AbhinayReddy10082003/HomeAutomation,494086847,Verilog,HomeAutomation,703,0,2022-05-19 14:08:24+00:00,[],None
780,https://github.com/Bojorge/Diseno-logico.git,2022-05-21 18:19:08+00:00,,0,Bojorge/Diseno-logico,494862107,Verilog,Diseno-logico,6945,0,2022-05-21 18:22:52+00:00,[],None
781,https://github.com/JumpBOOM/DP.git,2022-06-22 21:05:43+00:00,,0,JumpBOOM/DP,506405848,Verilog,DP,2,0,2022-06-22 22:27:10+00:00,[],None
782,https://github.com/amiq-eda/uvm_ref_flow_x30.git,2022-06-09 15:25:17+00:00,,0,amiq-eda/uvm_ref_flow_x30,501708316,Verilog,uvm_ref_flow_x30,6962,0,2022-06-09 15:34:53+00:00,[],None
783,https://github.com/secworks/timer.git,2022-06-09 11:33:31+00:00,A simple timer with prescaler written in Verilog,1,secworks/timer,501625904,Verilog,timer,24,0,2022-06-09 12:31:07+00:00,[],https://api.github.com/licenses/bsd-2-clause
784,https://github.com/Shankar18204/RISC-V-processors.git,2022-06-10 10:57:10+00:00,Designed the datapath and control unit for a single cycle processor (,0,Shankar18204/RISC-V-processors,502008872,Verilog,RISC-V-processors,24,0,2022-06-11 02:32:18+00:00,[],None
785,https://github.com/luijacky/replacee.git,2022-06-06 09:15:54+00:00,,0,luijacky/replacee,500365989,Verilog,replacee,97031,0,2022-06-06 09:19:06+00:00,[],https://api.github.com/licenses/bsd-3-clause
786,https://github.com/The10thDoc/Single_Cycle_Processor.git,2022-06-03 16:08:10+00:00,This is a single cycle processor and control unit that I created for the ECEN 350 class at TAMU.,0,The10thDoc/Single_Cycle_Processor,499572823,Verilog,Single_Cycle_Processor,26,0,2022-06-03 16:08:52+00:00,[],None
787,https://github.com/ConstantPark/esocv.git,2022-06-11 15:13:16+00:00,,0,ConstantPark/esocv,502381602,Verilog,esocv,11173,0,2022-06-11 15:13:25+00:00,[],https://api.github.com/licenses/mit
788,https://github.com/iniasdb/FPGA.git,2022-06-14 16:46:14+00:00,,0,iniasdb/FPGA,503443795,Verilog,FPGA,22693,0,2022-06-21 14:33:57+00:00,[],None
789,https://github.com/eric070021/2018-Spring-Digital-Circuit-Design.git,2022-06-15 08:53:45+00:00,This course is aimed at introducing the fundamental concepts and methods and the basic tools used in the logic design of digital circuits.,0,eric070021/2018-Spring-Digital-Circuit-Design,503687835,Verilog,2018-Spring-Digital-Circuit-Design,2853,0,2022-06-15 09:04:27+00:00,"['circuit', 'verilog']",None
790,https://github.com/visionvlsi/mini_projects.git,2022-06-17 00:48:35+00:00,,0,visionvlsi/mini_projects,504348788,Verilog,mini_projects,3850,0,2022-06-17 00:52:02+00:00,[],None
791,https://github.com/aakash-n-gupta/chisel-fun.git,2022-06-16 10:36:58+00:00,,0,aakash-n-gupta/chisel-fun,504113791,Verilog,chisel-fun,25,0,2022-06-24 14:29:37+00:00,[],None
792,https://github.com/Binh20182382/traffic_light_controller.git,2022-06-16 03:19:03+00:00,,0,Binh20182382/traffic_light_controller,503996648,Verilog,traffic_light_controller,5,0,2022-06-16 03:23:25+00:00,[],None
793,https://github.com/GeorgeWu1204/EOY-Project-Group10.git,2022-05-23 15:33:17+00:00,,3,GeorgeWu1204/EOY-Project-Group10,495470317,Verilog,EOY-Project-Group10,311167,0,2022-10-01 15:26:30+00:00,[],None
794,https://github.com/sereen-ba/Pulse-Width-Modulation-Verilog.git,2022-05-24 18:12:11+00:00,,0,sereen-ba/Pulse-Width-Modulation-Verilog,495937950,Verilog,Pulse-Width-Modulation-Verilog,706,0,2022-05-24 18:13:07+00:00,[],None
795,https://github.com/kalptechs/swaroopiot.git,2022-06-22 17:19:30+00:00,Efabless caravel based IoT ASIC,0,kalptechs/swaroopiot,506341163,Verilog,swaroopiot,49619,0,2022-06-22 18:06:31+00:00,[],https://api.github.com/licenses/apache-2.0
796,https://github.com/Charlie059/ECE550Project.git,2022-06-02 13:03:15+00:00,,0,Charlie059/ECE550Project,499137621,Verilog,ECE550Project,5919,0,2023-12-21 19:23:51+00:00,[],https://api.github.com/licenses/mit
797,https://github.com/J-CharanSai/RISC-processor.git,2022-06-16 10:34:50+00:00,,0,J-CharanSai/RISC-processor,504113147,Verilog,RISC-processor,1166,0,2022-06-16 10:37:07+00:00,[],None
798,https://github.com/kmakhno/adf4159.git,2022-05-23 11:00:04+00:00,IP core for using and configuring ADF4159 frequency synthesizer,0,kmakhno/adf4159,495372115,Verilog,adf4159,23,0,2022-05-23 17:50:54+00:00,[],None
799,https://github.com/Shwetapatil05/verilog-examples.git,2022-05-23 06:55:33+00:00,,0,Shwetapatil05/verilog-examples,495292322,Verilog,verilog-examples,5165,0,2022-05-23 07:15:05+00:00,[],None
800,https://github.com/hsagnik/Testing.git,2022-05-25 06:00:32+00:00,,0,hsagnik/Testing,496101820,Verilog,Testing,24,0,2022-05-25 06:08:17+00:00,[],None
801,https://github.com/kcami/Multiplicador-Shift-Add.git,2022-05-23 23:33:01+00:00,,0,kcami/Multiplicador-Shift-Add,495605214,Verilog,Multiplicador-Shift-Add,30953,0,2022-05-24 00:12:05+00:00,[],None
802,https://github.com/veshalin/Group17_YodaProject.git,2022-05-23 21:25:58+00:00,,0,veshalin/Group17_YodaProject,495578463,Verilog,Group17_YodaProject,8290,0,2022-05-23 21:36:53+00:00,[],None
803,https://github.com/recepgunay/mpw6_hyperram.git,2022-05-25 15:46:27+00:00,,0,recepgunay/mpw6_hyperram,496295266,Verilog,mpw6_hyperram,76768,0,2022-05-26 05:04:46+00:00,[],https://api.github.com/licenses/apache-2.0
804,https://github.com/AllanRegush/fpga_7segment_display.git,2022-05-26 02:08:27+00:00,,0,AllanRegush/fpga_7segment_display,496451054,Verilog,fpga_7segment_display,5,0,2022-05-26 17:33:56+00:00,[],None
805,https://github.com/KaneD985/thunderbird.git,2022-05-26 02:15:12+00:00,,0,KaneD985/thunderbird,496452455,Verilog,thunderbird,6,0,2022-05-29 21:10:58+00:00,[],None
806,https://github.com/asmaasameh99/32-Point-FFT-using-the-cooley-Tucky-algorith-Verilog_Design.git,2022-05-26 13:49:12+00:00,Design a 32-point FFT in RTL. The Cooley-Tukey algorithm is the most used FFT  algorithm,0,asmaasameh99/32-Point-FFT-using-the-cooley-Tucky-algorith-Verilog_Design,496638297,Verilog,32-Point-FFT-using-the-cooley-Tucky-algorith-Verilog_Design,245,0,2022-05-26 13:55:49+00:00,[],None
807,https://github.com/leonardochd/Multiplicador-Shift-Add.git,2022-05-26 21:26:14+00:00,Descrição de um calculadora que multiplica dois valores binarios utilizando soma e desloca para gerar o resultado final,0,leonardochd/Multiplicador-Shift-Add,496776320,Verilog,Multiplicador-Shift-Add,439,0,2022-05-26 22:12:03+00:00,[],None
808,https://github.com/ureydata/Y86_csapp.git,2022-05-26 12:31:12+00:00,,0,ureydata/Y86_csapp,496612619,Verilog,Y86_csapp,47,0,2022-06-05 13:56:37+00:00,[],None
809,https://github.com/ZEEN-JI/fpga_learningpath.git,2022-05-22 18:14:15+00:00,record learning path of verilog and fpga,0,ZEEN-JI/fpga_learningpath,495140300,Verilog,fpga_learningpath,462,0,2022-05-22 20:17:37+00:00,[],None
810,https://github.com/kenny-wq/computer-organization-lab5.git,2022-05-22 04:45:41+00:00,,0,kenny-wq/computer-organization-lab5,494960954,Verilog,computer-organization-lab5,12,0,2022-05-22 04:59:18+00:00,[],None
811,https://github.com/hevertonreis-hsrn/LAB-I-A.git,2022-05-24 00:52:45+00:00,Repositório do Projeto Avaliativo do Laboratório Integrado I-A,0,hevertonreis-hsrn/LAB-I-A,495620652,Verilog,LAB-I-A,19000,0,2022-06-11 00:44:23+00:00,[],None
812,https://github.com/NCKMAT001/FPGA-YODA-GROUP-7.git,2022-05-22 22:33:43+00:00,This repository contains the files from the FPGA YODA run on the NEXYS DDR4. The files are coded in verilog in Vivado.,0,NCKMAT001/FPGA-YODA-GROUP-7,495192730,Verilog,FPGA-YODA-GROUP-7,1560,0,2022-05-22 23:14:35+00:00,[],None
813,https://github.com/Yogesh0211/Traffic_light_contoller_using_verilog-.git,2022-05-29 04:57:25+00:00,A Verilog source code for a traffic light controller on FPGA is presented.,0,Yogesh0211/Traffic_light_contoller_using_verilog-,497493746,Verilog,Traffic_light_contoller_using_verilog-,211,0,2022-05-29 04:58:00+00:00,[],None
814,https://github.com/YanYuTu/Pseudo_Random_Pattern_Generator.git,2022-05-19 16:39:39+00:00,,0,YanYuTu/Pseudo_Random_Pattern_Generator,494152207,Verilog,Pseudo_Random_Pattern_Generator,2,0,2022-05-19 16:40:27+00:00,[],None
815,https://github.com/blablabla888/778899011.git,2022-05-19 07:31:17+00:00,,0,blablabla888/778899011,493966895,Verilog,778899011,2,0,2022-05-19 08:24:44+00:00,[],None
816,https://github.com/JunqiPi/CPU-simple-data-path-using-verilog.git,2022-06-01 10:04:36+00:00,CPU DataPath,0,JunqiPi/CPU-simple-data-path-using-verilog,498683386,Verilog,CPU-simple-data-path-using-verilog,5,0,2023-01-04 17:36:49+00:00,[],None
817,https://github.com/Lucian07N/Gray-Code-Counter.git,2022-06-03 17:05:29+00:00,,0,Lucian07N/Gray-Code-Counter,499589245,Verilog,Gray-Code-Counter,677,0,2022-06-03 17:14:26+00:00,[],None
818,https://github.com/Lucas-Lu-coder/CA_2022spring_Project.git,2022-06-04 11:28:36+00:00,,0,Lucas-Lu-coder/CA_2022spring_Project,499806528,Verilog,CA_2022spring_Project,1070,0,2022-06-04 11:32:58+00:00,[],None
819,https://github.com/yuoyuoyan/Q100.git,2022-06-04 17:12:07+00:00,RISCV CPU core,0,yuoyuoyan/Q100,499889586,Verilog,Q100,61,0,2022-06-05 21:06:27+00:00,[],None
820,https://github.com/Wodsk/Computer_Oraganization_Code_BUAA.git,2022-06-13 06:29:32+00:00,,0,Wodsk/Computer_Oraganization_Code_BUAA,502832413,Verilog,Computer_Oraganization_Code_BUAA,76,0,2022-06-13 06:40:00+00:00,[],None
821,https://github.com/ngochai99/-u-gen-gia-ta.git,2022-06-15 07:02:18+00:00,,0,ngochai99/-u-gen-gia-ta,503652700,Verilog,-u-gen-gia-ta,323,0,2022-06-16 08:11:29+00:00,[],None
822,https://github.com/gagana-05/SerialAdder.git,2022-06-15 11:56:03+00:00,Parameterized Serial Adder,0,gagana-05/SerialAdder,503745180,Verilog,SerialAdder,6,0,2023-05-04 13:41:39+00:00,['rtl'],None
823,https://github.com/rajat-gattani/UnderTheHood.git,2022-06-13 14:50:13+00:00,,0,rajat-gattani/UnderTheHood,502998566,Verilog,UnderTheHood,88,0,2023-03-16 15:34:50+00:00,[],None
824,https://github.com/ewt3/ECE385-Final-Project.git,2022-06-13 21:04:21+00:00,,0,ewt3/ECE385-Final-Project,503114679,Verilog,ECE385-Final-Project,93740,0,2022-06-13 21:12:45+00:00,[],None
825,https://github.com/tanvirarafin/msu_submission_1.git,2022-06-13 19:33:36+00:00,,0,tanvirarafin/msu_submission_1,503089970,Verilog,msu_submission_1,51887,0,2022-06-13 19:40:28+00:00,[],https://api.github.com/licenses/apache-2.0
826,https://github.com/srijeet2310/Multi-Cycle-Processor.git,2022-05-31 08:39:48+00:00,,0,srijeet2310/Multi-Cycle-Processor,498253764,Verilog,Multi-Cycle-Processor,634,0,2022-05-31 08:57:25+00:00,[],None
827,https://github.com/jonadmark/felix.git,2022-05-31 19:31:44+00:00,Every Packet Counts: Responding to Network Failures at Data-plane Speeds,0,jonadmark/felix,498471995,Verilog,felix,13067,0,2022-06-03 16:37:42+00:00,[],https://api.github.com/licenses/mit
828,https://github.com/zhangziqing/Lac_tracer.git,2022-06-20 16:58:51+00:00,,0,zhangziqing/Lac_tracer,505526867,Verilog,Lac_tracer,68,0,2022-06-20 17:01:59+00:00,[],None
829,https://github.com/rustemos/hdl4nn.git,2022-06-20 09:29:10+00:00,,1,rustemos/hdl4nn,505376079,Verilog,hdl4nn,21,0,2022-07-02 08:42:07+00:00,[],https://api.github.com/licenses/mit
830,https://github.com/agonbor11/cosim_zynq-7000.git,2022-06-17 16:05:44+00:00,,0,agonbor11/cosim_zynq-7000,504596352,Verilog,cosim_zynq-7000,108,0,2022-06-17 16:12:24+00:00,[],None
831,https://github.com/thangND157/vending-machine.git,2022-06-14 06:10:41+00:00,,0,thangND157/vending-machine,503230778,Verilog,vending-machine,2,0,2022-06-15 03:27:48+00:00,[],None
832,https://github.com/LostInArgand/pynq_3bit_multiplier_xilinx.git,2022-06-16 18:37:47+00:00,,0,LostInArgand/pynq_3bit_multiplier_xilinx,504267186,Verilog,pynq_3bit_multiplier_xilinx,12,0,2022-06-16 18:39:55+00:00,[],None
833,https://github.com/pseudo-aloha/IC-Design-Final.git,2022-06-17 05:37:57+00:00,,0,pseudo-aloha/IC-Design-Final,504407114,Verilog,IC-Design-Final,1119,0,2023-01-22 12:02:42+00:00,[],None
834,https://github.com/Sajuuk121/Verilog-8led-flash.git,2022-06-12 14:19:32+00:00,This is  a led flash by Verilog. ,0,Sajuuk121/Verilog-8led-flash,502636352,Verilog,Verilog-8led-flash,5443,0,2022-06-12 14:37:57+00:00,[],None
835,https://github.com/rishabhparihar99/Router_1_3_Project.git,2022-06-09 12:44:28+00:00,Designing router which accepts data packets on a single 8-bit port and routes them to one of the three output channels based on the address included in the packet,0,rishabhparihar99/Router_1_3_Project,501648934,Verilog,Router_1_3_Project,284,0,2022-06-16 12:02:07+00:00,[],None
836,https://github.com/211hunter166/FPGA-assignment3.git,2022-06-12 06:08:00+00:00,,0,211hunter166/FPGA-assignment3,502533677,Verilog,FPGA-assignment3,1,0,2022-06-12 07:20:17+00:00,[],None
837,https://github.com/htmos6/Verilog-System-Design-Questions.git,2022-06-09 20:46:35+00:00,,0,htmos6/Verilog-System-Design-Questions,501803804,Verilog,Verilog-System-Design-Questions,6,0,2022-06-10 18:38:28+00:00,"['hdl', 'verilog', 'systemdesign']",None
838,https://github.com/minggfan/32Bit_Ripple_Carry_Adder.git,2022-06-09 13:35:22+00:00,,0,minggfan/32Bit_Ripple_Carry_Adder,501666995,Verilog,32Bit_Ripple_Carry_Adder,1,0,2022-06-09 13:37:22+00:00,[],None
839,https://github.com/Neginashi/UART_FPGA_v2.git,2022-06-09 10:26:39+00:00,,0,Neginashi/UART_FPGA_v2,501605940,Verilog,UART_FPGA_v2,17,0,2022-06-09 10:27:39+00:00,[],None
840,https://github.com/crlarsen/cmpadd.git,2022-06-09 22:41:52+00:00,,0,crlarsen/cmpadd,501829349,Verilog,cmpadd,16,0,2022-06-09 22:42:44+00:00,[],None
841,https://github.com/Najah-Nasir/FPU_half_precision_dummy.git,2022-05-30 19:58:52+00:00,,0,Najah-Nasir/FPU_half_precision_dummy,498080630,Verilog,FPU_half_precision_dummy,9246,0,2022-05-30 20:15:17+00:00,[],None
842,https://github.com/BlingDan/EDA-Vending-machine.git,2022-06-03 00:46:24+00:00,,0,BlingDan/EDA-Vending-machine,499335206,Verilog,EDA-Vending-machine,2,0,2022-06-03 01:13:10+00:00,[],None
843,https://github.com/smgl9/muise_2022.git,2022-06-06 21:58:25+00:00,,0,smgl9/muise_2022,500605593,Verilog,muise_2022,17,0,2022-06-07 12:14:00+00:00,[],None
844,https://github.com/rd2606/SIPO_Register.git,2022-06-11 01:27:06+00:00,,0,rd2606/SIPO_Register,502221766,Verilog,SIPO_Register,401,0,2022-06-11 01:28:18+00:00,[],None
845,https://github.com/alfred-leong/EE2026-Digital-Design-Project.git,2022-06-05 14:16:10+00:00,"Together with Ong Zhi Hong, we created a drawing application using Verilog, which works on the Basys 3 Artix-7 FPGA Board. ",0,alfred-leong/EE2026-Digital-Design-Project,500117168,Verilog,EE2026-Digital-Design-Project,3336,0,2022-06-05 14:39:34+00:00,[],None
846,https://github.com/ujjawalece/Asynchronous_FIFO.git,2022-06-05 11:25:00+00:00,Verilog code for implementation of an asynchronous FIFO.,0,ujjawalece/Asynchronous_FIFO,500077406,Verilog,Asynchronous_FIFO,134,0,2022-06-05 11:31:58+00:00,[],None
847,https://github.com/MiangMG/sequence_detector.git,2022-06-06 12:27:55+00:00,"可配置串行输入序列检测器，检测到连续M个子序列A，输出一个脉冲信号detected_pluse,M为2-32任意整数，子序列A为连续N个1紧接连续N个0。N范围为2-63。",0,MiangMG/sequence_detector,500424329,Verilog,sequence_detector,2,0,2022-06-06 12:30:41+00:00,[],None
848,https://github.com/Najah-Nasir/FPU_half_precision_23.2ns.git,2022-06-06 14:31:40+00:00,,0,Najah-Nasir/FPU_half_precision_23.2ns,500467808,Verilog,FPU_half_precision_23.2ns,8243,0,2022-06-06 14:36:32+00:00,[],None
849,https://github.com/Adarsh275/DDCO-LAB-16-Bit-Microprocessor.git,2022-06-08 11:05:22+00:00,,0,Adarsh275/DDCO-LAB-16-Bit-Microprocessor,501214266,Verilog,DDCO-LAB-16-Bit-Microprocessor,12830,0,2022-11-30 14:11:48+00:00,"['16-bit', 'basic-operations', 'iverilog', 'microprocessor', 'multiplexer', 'ripple-carry-adder', 'program-counter', 'register']",https://api.github.com/licenses/isc
850,https://github.com/ocmykr2/RISCV-CPU-verilog.git,2022-06-21 09:11:47+00:00,,0,ocmykr2/RISCV-CPU-verilog,505770060,Verilog,RISCV-CPU-verilog,59,0,2022-06-21 09:11:52+00:00,[],None
851,https://github.com/Chunjw/AES.git,2022-06-22 01:28:00+00:00,Symmetric Key Algorithm,0,Chunjw/AES,506057443,Verilog,AES,8,0,2022-06-22 01:31:11+00:00,[],None
852,https://github.com/ylaloofK/yl_Ethernet.git,2022-06-21 14:03:30+00:00,,0,ylaloofK/yl_Ethernet,505868657,Verilog,yl_Ethernet,20,0,2022-06-22 12:17:31+00:00,[],None
853,https://github.com/PorterLu/NiCore.git,2022-06-21 07:07:44+00:00,,0,PorterLu/NiCore,505729104,Verilog,NiCore,23457,0,2022-11-18 16:48:11+00:00,[],None
854,https://github.com/khancuteee/RGB2Grayscale.git,2022-06-08 10:11:52+00:00,RGB2Grayscale use verilog,0,khancuteee/RGB2Grayscale,501197545,Verilog,RGB2Grayscale,111,0,2022-06-08 10:15:56+00:00,[],None
855,https://github.com/gowrihiremath/Half-Adder-Verilog-Code.git,2022-06-20 14:03:46+00:00,This repo contains the RTL and Test Bench code for a Half Adder using Data Flow Abstraction,0,gowrihiremath/Half-Adder-Verilog-Code,505466207,Verilog,Half-Adder-Verilog-Code,4,0,2022-06-20 14:07:32+00:00,[],None
856,https://github.com/me9hanics/FPGA-Verilog-Serial_Communication.git,2022-06-02 14:53:43+00:00,UART Transmitter in Verilog.,0,me9hanics/FPGA-Verilog-Serial_Communication,499177766,Verilog,FPGA-Verilog-Serial_Communication,5,0,2023-11-25 21:10:16+00:00,"['verilog', 'fpga']",None
857,https://github.com/radical-p/Mathematical-calculations-on-matrices.git,2022-06-05 20:02:28+00:00,Mathematical calculations on matrices in Verilog,0,radical-p/Mathematical-calculations-on-matrices,500199447,Verilog,Mathematical-calculations-on-matrices,627,0,2023-12-18 08:34:04+00:00,"['algebra', 'fpga', 'rtl', 'verilog', 'vhdl']",None
858,https://github.com/mazaczysko/vsynth.git,2022-06-09 19:58:51+00:00,8-bit MIDI-controlled digital synthesizer for FPGA,0,mazaczysko/vsynth,501791642,Verilog,vsynth,635,0,2022-06-10 09:57:01+00:00,[],https://api.github.com/licenses/mit
859,https://github.com/NibiruFT/CPU-MIPS.git,2022-06-04 02:09:57+00:00,Verilog implementation of a fully functional single-cycle MIPS CPU. The CPU will be able to run at least 10 assembly instructions. You can then program it in assembly or even C.,0,NibiruFT/CPU-MIPS,499701016,Verilog,CPU-MIPS,4182,0,2024-03-27 23:40:54+00:00,[],None
860,https://github.com/ipgtestrepos/reloadflow.git,2022-05-19 13:28:23+00:00,test for reloading with project root under source control,0,ipgtestrepos/reloadflow,494083258,Verilog,reloadflow,19,0,2022-05-19 13:46:30+00:00,[],None
861,https://github.com/mmac-pro/sc-processor.git,2022-05-19 20:31:07+00:00,,0,mmac-pro/sc-processor,494220551,Verilog,sc-processor,20,0,2022-05-19 20:35:10+00:00,[],None
862,https://github.com/Koneti-Rajkumar/Digital-circuits-using-verilog.git,2022-05-23 15:59:32+00:00,,0,Koneti-Rajkumar/Digital-circuits-using-verilog,495479729,Verilog,Digital-circuits-using-verilog,23242,0,2022-05-24 15:14:54+00:00,[],None
863,https://github.com/RiscenY/PWM-Generator-I2C-Interface-.git,2022-05-22 15:29:57+00:00,A simple PWM Generator with I2C Slave interface released from opencores.com,1,RiscenY/PWM-Generator-I2C-Interface-,495099931,Verilog,PWM-Generator-I2C-Interface-,32,0,2022-05-22 15:57:27+00:00,[],None
864,https://github.com/marybelb/311-Lab-1.git,2022-05-26 23:44:39+00:00,In this lab you will use both structural and behavioral Verilog to design a 4-bit binary adder-subtractor.,0,marybelb/311-Lab-1,496804243,Verilog,311-Lab-1,43,0,2022-05-26 23:58:52+00:00,[],None
865,https://github.com/marybelb/311-Lab-3.git,2022-05-27 00:08:25+00:00,Design and write behavioral Verilog code for Mealy and Moore state machines,0,marybelb/311-Lab-3,496808647,Verilog,311-Lab-3,8,0,2022-05-27 00:13:42+00:00,[],None
866,https://github.com/zzgmcu/my.git,2022-05-24 09:48:40+00:00,,0,zzgmcu/my,495761920,Verilog,my,1,0,2022-05-26 12:53:19+00:00,[],None
867,https://github.com/aniket-64/FPGA-Assgn2.git,2022-06-07 13:39:38+00:00,,2,aniket-64/FPGA-Assgn2,500856202,Verilog,FPGA-Assgn2,53,0,2022-06-11 15:45:56+00:00,[],None
868,https://github.com/Prabhatatha/8_bit_ALU.git,2022-06-13 05:14:16+00:00,,0,Prabhatatha/8_bit_ALU,502814187,Verilog,8_bit_ALU,52,0,2022-06-13 05:15:27+00:00,[],None
869,https://github.com/ljs-2002/Mips.git,2022-06-09 15:21:02+00:00,2022春季学期计算机组成原理研讨课Mips CPU实验,0,ljs-2002/Mips,501706727,Verilog,Mips,3899,0,2023-06-25 16:24:46+00:00,[],None
870,https://github.com/sajjadahmed677/REST_II.git,2022-06-06 19:32:45+00:00,,0,sajjadahmed677/REST_II,500568410,Verilog,REST_II,87166,0,2022-06-06 19:39:26+00:00,[],https://api.github.com/licenses/apache-2.0
871,https://github.com/kiterunner347/flappy_bird.git,2022-06-07 07:44:17+00:00,,0,kiterunner347/flappy_bird,500739760,Verilog,flappy_bird,12157,0,2022-06-07 08:15:42+00:00,[],None
872,https://github.com/mahendraVamshi/Floating-point-divider.git,2022-06-21 09:39:31+00:00,,0,mahendraVamshi/Floating-point-divider,505779225,Verilog,Floating-point-divider,5,0,2022-06-23 07:01:34+00:00,[],None
873,https://github.com/FMRT19-dragon/hello-world.git,2022-06-21 02:33:40+00:00,The  first  github  repository,0,FMRT19-dragon/hello-world,505664437,Verilog,hello-world,7,0,2023-04-26 12:50:19+00:00,[],None
874,https://github.com/hactinhhai123/CPU-Pipeline.git,2022-06-21 14:36:19+00:00,,0,hactinhhai123/CPU-Pipeline,505881047,Verilog,CPU-Pipeline,15,0,2022-06-21 14:39:05+00:00,[],None
875,https://github.com/VaishnaviChoudhari/FPGA_Fabric_Design_Architechture.git,2022-05-31 11:57:07+00:00,,0,VaishnaviChoudhari/FPGA_Fabric_Design_Architechture,498316155,Verilog,FPGA_Fabric_Design_Architechture,36,0,2022-06-04 09:16:25+00:00,[],None
876,https://github.com/Pierre120/CSARCH1_HDLProject2.git,2022-05-31 15:09:40+00:00,Hardware Desciption Language machine project for CSARCH1 Term 2 AY2021-2022,0,Pierre120/CSARCH1_HDLProject2,498386140,Verilog,CSARCH1_HDLProject2,202,0,2022-07-29 10:24:51+00:00,[],None
877,https://github.com/AndrianDevFPGA/Access-Door.git,2022-06-01 20:30:21+00:00,,0,AndrianDevFPGA/Access-Door,498889322,Verilog,Access-Door,1,0,2022-06-01 20:31:03+00:00,[],None
878,https://github.com/wingz0c/RISC_V_5_stage.git,2022-05-30 13:25:08+00:00,,0,wingz0c/RISC_V_5_stage,497954193,Verilog,RISC_V_5_stage,14591,0,2022-05-30 13:27:49+00:00,[],None
879,https://github.com/visionvlsi/FIR_Filter.git,2022-06-04 07:55:21+00:00,,0,visionvlsi/FIR_Filter,499761497,Verilog,FIR_Filter,6,0,2022-06-04 07:58:29+00:00,[],None
880,https://github.com/YoshiZH/TTL_VGA-DE1-SoC.git,2022-06-04 04:40:46+00:00,Example whith a funcional vga driver for DE1-SoC,0,YoshiZH/TTL_VGA-DE1-SoC,499726186,Verilog,TTL_VGA-DE1-SoC,7848,0,2022-06-04 04:41:04+00:00,[],None
881,https://github.com/vallejoyuridamian/CANOpener.git,2022-05-27 17:33:52+00:00,,0,vallejoyuridamian/CANOpener,497084133,Verilog,CANOpener,95902,0,2022-05-31 22:33:25+00:00,[],None
882,https://github.com/LiQiiiii/U10M11007.03-COAE.git,2022-06-03 17:11:55+00:00,,0,LiQiiiii/U10M11007.03-COAE,499591107,Verilog,U10M11007.03-COAE,3379,0,2022-06-03 17:28:19+00:00,[],None
883,https://github.com/LostInArgand/MIPS_processor_verilog.git,2022-05-21 06:05:30+00:00,,1,LostInArgand/MIPS_processor_verilog,494696040,Verilog,MIPS_processor_verilog,35,0,2022-05-21 06:08:03+00:00,[],https://api.github.com/licenses/mit
884,https://github.com/3ab3at/Simple-Pattern-Displayer.git,2022-05-21 10:20:18+00:00,A pattern displayer that is implemented using Verilog.,0,3ab3at/Simple-Pattern-Displayer,494749342,Verilog,Simple-Pattern-Displayer,5,0,2022-05-21 12:04:53+00:00,[],None
885,https://github.com/gabriel-vitor/CircuitosDigitais_Problema2.git,2022-05-21 12:21:13+00:00,,0,gabriel-vitor/CircuitosDigitais_Problema2,494775398,Verilog,CircuitosDigitais_Problema2,707,0,2022-05-21 12:24:34+00:00,[],None
886,https://github.com/replica455/Verilog-MiniProject.git,2022-05-20 09:05:57+00:00,Verilog code for beginners from Verilog HDL by Samir Palnitkar lecture series by Shrikanth Shirakol and Hardware modeling using verilog NPTEL by Prof. Indranil Sengupta IIT Kharagpur,0,replica455/Verilog-MiniProject,494394389,Verilog,Verilog-MiniProject,159,0,2022-05-21 16:58:16+00:00,[],None
887,https://github.com/Cong-yu-Cong-yu-Cong/FPGA_CODE.git,2022-06-08 09:05:38+00:00,base on verilog,0,Cong-yu-Cong-yu-Cong/FPGA_CODE,501175756,,FPGA_CODE,8441,0,2022-10-15 13:59:47+00:00,[],None
888,https://github.com/antonloof/diode_shunt.git,2022-06-08 09:21:28+00:00,Can u use a diode for high dynamic range high speed current measurements?,0,antonloof/diode_shunt,501181067,Verilog,diode_shunt,29,0,2022-06-25 17:42:51+00:00,[],None
889,https://github.com/hvjydfjng/lr6.git,2022-06-08 19:17:17+00:00,,0,hvjydfjng/lr6,501381271,Verilog,lr6,5,0,2022-06-08 19:30:54+00:00,[],None
890,https://github.com/hodol0301/Convolution_Verilog_FPGA.git,2022-06-06 01:29:05+00:00,,0,hodol0301/Convolution_Verilog_FPGA,500255118,Verilog,Convolution_Verilog_FPGA,13,0,2022-06-06 02:31:54+00:00,[],None
891,https://github.com/sujinhub/FPGA-verilog.git,2022-06-10 10:42:14+00:00,,0,sujinhub/FPGA-verilog,502004578,Verilog,FPGA-verilog,10,0,2022-06-10 10:43:31+00:00,[],None
892,https://github.com/minggfan/16Bit_6Tap_FIR_Filter.git,2022-06-10 13:32:10+00:00,,0,minggfan/16Bit_6Tap_FIR_Filter,502055022,Verilog,16Bit_6Tap_FIR_Filter,6,0,2022-06-10 13:35:50+00:00,[],None
893,https://github.com/MiangMG/DatenLord_t4.git,2022-06-11 07:43:45+00:00,ref and mine,0,MiangMG/DatenLord_t4,502283605,Verilog,DatenLord_t4,187,0,2022-06-11 07:44:48+00:00,[],None
894,https://github.com/dogayaglicioglu/VerySimpleCPUDesign.git,2022-06-17 20:46:34+00:00,,0,dogayaglicioglu/VerySimpleCPUDesign,504667885,Verilog,VerySimpleCPUDesign,2,0,2022-06-17 20:47:03+00:00,[],None
895,https://github.com/junshiuanhsieh/Single_Cycle_CPU.git,2022-06-16 09:35:07+00:00,,0,junshiuanhsieh/Single_Cycle_CPU,504095023,Verilog,Single_Cycle_CPU,245,0,2022-06-16 09:37:23+00:00,[],None
896,https://github.com/KuchuruCharitha/HDL-Carry-Select-Adder.git,2022-06-19 11:38:06+00:00,,0,KuchuruCharitha/HDL-Carry-Select-Adder,505092076,Verilog,HDL-Carry-Select-Adder,1,0,2022-06-19 11:39:30+00:00,[],None
897,https://github.com/HC153Yuanyuan/AES.git,2022-06-19 08:38:23+00:00,,0,HC153Yuanyuan/AES,505054576,Verilog,AES,191,0,2022-06-19 08:59:29+00:00,[],None
898,https://github.com/JerryHui96/FIFO.git,2022-05-22 02:05:37+00:00,,0,JerryHui96/FIFO,494937251,Verilog,FIFO,1,0,2022-05-22 02:38:21+00:00,[],None
899,https://github.com/TheRadDani/lab5.git,2022-06-16 13:56:02+00:00,,0,TheRadDani/lab5,504176153,Verilog,lab5,221,0,2022-06-16 13:56:08+00:00,[],None
900,https://github.com/nguyenvietthi/traffic_light.git,2022-06-15 04:01:44+00:00,traffic_light,0,nguyenvietthi/traffic_light,503608570,Verilog,traffic_light,103,0,2022-06-15 04:03:37+00:00,[],None
901,https://github.com/Junzhou-Chen/ALU-Design.git,2022-06-15 13:20:01+00:00,,0,Junzhou-Chen/ALU-Design,503774260,Verilog,ALU-Design,243,0,2022-06-30 08:23:41+00:00,[],None
902,https://github.com/mhdsdt/dsd-project.git,2022-06-15 10:46:27+00:00,,0,mhdsdt/dsd-project,503723882,Verilog,dsd-project,11577,0,2023-04-02 02:29:49+00:00,[],None
903,https://github.com/tallesmmarques/MIPS32_SC.git,2022-06-17 19:11:34+00:00,Processor MIPS32 Single Cicly in verilog,0,tallesmmarques/MIPS32_SC,504646303,Verilog,MIPS32_SC,31,0,2022-06-17 19:11:59+00:00,[],None
904,https://github.com/ChoiKangwoo/verilog.git,2022-06-22 15:05:06+00:00,verilog exercise book,0,ChoiKangwoo/verilog,506295890,Verilog,verilog,6,0,2023-05-10 14:26:31+00:00,[],None
905,https://github.com/keyakarthik/MIPS-Processor.git,2022-05-20 16:27:29+00:00, 5 stage Pipeline in the MIPS Design with stalling operations on data hazard detection and data forwarding  ,0,keyakarthik/MIPS-Processor,494534688,Verilog,MIPS-Processor,24,0,2024-01-21 06:11:58+00:00,[],None
906,https://github.com/Warl3ck/test_adc.git,2022-06-22 09:54:46+00:00,,0,Warl3ck/test_adc,506189191,Verilog,test_adc,29173,0,2022-06-22 10:07:42+00:00,[],None
907,https://github.com/hakatu/Example.git,2022-05-22 09:52:51+00:00,Bo cong 1 nua,0,hakatu/Example,495019351,Verilog,Example,10260,0,2022-11-25 07:38:14+00:00,[],None
908,https://github.com/xuan37/hw5.git,2022-05-20 02:01:33+00:00,,0,xuan37/hw5,494288748,Verilog,hw5,0,0,2022-05-20 02:04:05+00:00,[],None
909,https://github.com/cccza/Digital-Logic-Design-Practice_-hw5.git,2022-05-19 14:09:31+00:00,,0,cccza/Digital-Logic-Design-Practice_-hw5,494098961,Verilog,Digital-Logic-Design-Practice_-hw5,2,0,2022-05-19 14:10:03+00:00,[],None
910,https://github.com/delfinoariel/CORDIC.git,2022-05-19 21:34:07+00:00,Desarrollo de una Arquitectura CORDIC para FPGA,0,delfinoariel/CORDIC,494235676,Verilog,CORDIC,18,0,2022-05-19 21:56:43+00:00,[],https://api.github.com/licenses/gpl-3.0
911,https://github.com/birdx-007/MIPS_multi_cycle_CPU.git,2022-06-20 13:09:15+00:00,基于MIPS指令集子集的多周期微处理器（三种实现思路）,0,birdx-007/MIPS_multi_cycle_CPU,505446010,Verilog,MIPS_multi_cycle_CPU,722,0,2022-07-08 16:23:54+00:00,[],https://api.github.com/licenses/apache-2.0
912,https://github.com/cedric-cnam/NetFPGA-SBI.git,2022-06-16 15:09:12+00:00,,0,cedric-cnam/NetFPGA-SBI,504202280,Verilog,NetFPGA-SBI,6915,0,2022-06-28 16:03:30+00:00,[],None
913,https://github.com/iggor-1/tcc.git,2022-06-16 22:18:27+00:00,,0,iggor-1/tcc,504321543,Verilog,tcc,16,0,2022-06-16 22:20:05+00:00,[],None
914,https://github.com/Pastedd/Verilog.git,2022-06-17 03:03:28+00:00,,0,Pastedd/Verilog,504376216,Verilog,Verilog,154,0,2022-06-17 03:27:44+00:00,[],None
915,https://github.com/kaanolgu/sparse-bfs-fpga.git,2022-06-22 10:56:45+00:00,The source files for the Sparse BFS used for Zedboard Implementation,0,kaanolgu/sparse-bfs-fpga,506208052,Verilog,sparse-bfs-fpga,37950,0,2022-06-27 12:53:17+00:00,[],https://api.github.com/licenses/cc-by-4.0
916,https://github.com/Ziad-cyber/Single-Cycle-MIPS-.git,2022-06-20 07:38:20+00:00,,0,Ziad-cyber/Single-Cycle-MIPS-,505340969,Verilog,Single-Cycle-MIPS-,18,0,2022-06-20 07:40:51+00:00,[],None
917,https://github.com/yzhangtj/UBC_Cpen311_final_project.git,2022-06-19 05:39:00+00:00,Digital System design projects(using SystemVerilog),0,yzhangtj/UBC_Cpen311_final_project,505021829,Verilog,UBC_Cpen311_final_project,5152,0,2022-06-19 05:48:16+00:00,[],None
918,https://github.com/AndrianDevFPGA/AccessBank.git,2022-06-19 08:07:06+00:00,,0,AndrianDevFPGA/AccessBank,505048383,Verilog,AccessBank,2,0,2022-06-19 08:16:59+00:00,[],None
919,https://github.com/wufei-png/vlsi_final_lab.git,2022-06-19 15:57:58+00:00,,0,wufei-png/vlsi_final_lab,505155023,Verilog,vlsi_final_lab,10322,0,2022-06-19 15:58:41+00:00,[],None
920,https://github.com/tlucanti/grasspopper-encoder.git,2022-06-19 20:35:57+00:00,grasspopper encoder implementation in verilog,0,tlucanti/grasspopper-encoder,505213911,Verilog,grasspopper-encoder,5917,0,2022-06-23 17:50:22+00:00,[],https://api.github.com/licenses/mit
921,https://github.com/mohamedromee12/Master-Slave.git,2022-06-19 21:15:59+00:00,"Connection interface between any master circuit and one or more slave circuits. It's used to connect the computer with keyboard, mouse, etc.",1,mohamedromee12/Master-Slave,505220996,Verilog,Master-Slave,559,0,2022-06-19 21:18:20+00:00,[],None
922,https://github.com/haesungchoi/urp22_summer.git,2022-06-07 00:50:45+00:00,,0,haesungchoi/urp22_summer,500640008,Verilog,urp22_summer,18,0,2022-06-07 00:53:29+00:00,[],None
923,https://github.com/CCChanhan/Pmod_JSTK_and_bluetooth.git,2022-06-09 00:59:42+00:00,This projetc is to introduce how to connect Pmod_JSTK and how to send the data from it by bluetooth,0,CCChanhan/Pmod_JSTK_and_bluetooth,501458568,Verilog,Pmod_JSTK_and_bluetooth,14,0,2022-06-09 01:29:17+00:00,[],None
924,https://github.com/RyanMPrice/BlueEnigma.git,2022-06-08 21:24:26+00:00,Opensource Submission to Test Skywater Open Shuttle Process,0,RyanMPrice/BlueEnigma,501415069,Verilog,BlueEnigma,11052,0,2022-06-08 21:24:38+00:00,[],https://api.github.com/licenses/apache-2.0
925,https://github.com/KashyapKurella3000/3-STAGE-PIPELINED-16-BIT-FIXED-POINT-MAC-FOR-AI-ENGINE.git,2022-06-10 21:56:31+00:00,,0,KashyapKurella3000/3-STAGE-PIPELINED-16-BIT-FIXED-POINT-MAC-FOR-AI-ENGINE,502190751,Verilog,3-STAGE-PIPELINED-16-BIT-FIXED-POINT-MAC-FOR-AI-ENGINE,9,0,2023-01-11 05:32:39+00:00,[],None
926,https://github.com/FrankZacha/caravel_test1.git,2022-06-08 09:40:38+00:00,test chip based on efabless caravel digital,0,FrankZacha/caravel_test1,501187363,Verilog,caravel_test1,51887,0,2022-06-08 10:08:54+00:00,[],https://api.github.com/licenses/apache-2.0
927,https://github.com/vidyuthshashidhar/8-BIT-ALU.git,2022-06-12 02:54:46+00:00,alu verilog code,0,vidyuthshashidhar/8-BIT-ALU,502504428,Verilog,8-BIT-ALU,3,0,2022-06-12 15:22:26+00:00,[],None
928,https://github.com/vidyuthshashidhar/traffic-light-controller-verilog-code.git,2022-06-12 03:12:55+00:00,traffic light controller,0,vidyuthshashidhar/traffic-light-controller-verilog-code,502507116,Verilog,traffic-light-controller-verilog-code,2,0,2022-06-12 14:39:51+00:00,[],None
929,https://github.com/tonymichaelhead/go-board-video-games.git,2022-06-14 02:30:46+00:00,Examples from Designing Video Game Hardware in Verilog implemented on the Nanland Go Board,0,tonymichaelhead/go-board-video-games,503182333,Verilog,go-board-video-games,7,0,2022-06-14 02:31:24+00:00,[],None
930,https://github.com/DanielLoeffeler/Simple-32-bit-ARM-CPU.git,2022-06-14 03:15:57+00:00,,0,DanielLoeffeler/Simple-32-bit-ARM-CPU,503192798,Verilog,Simple-32-bit-ARM-CPU,17,0,2022-06-14 03:17:27+00:00,[],None
931,https://github.com/jayeshsuyal/3to8_decoder.git,2022-06-15 03:07:37+00:00,Implementation of a 3 to 8 Decoder using Verilog,0,jayeshsuyal/3to8_decoder,503596769,Verilog,3to8_decoder,7,0,2022-06-15 03:16:50+00:00,[],None
932,https://github.com/caitlinlopez/ComputerArchitecture.git,2022-05-26 19:29:56+00:00,,0,caitlinlopez/ComputerArchitecture,496747708,Verilog,ComputerArchitecture,271,0,2022-06-29 05:12:42+00:00,[],None
933,https://github.com/amichai-bd/vga_fpga_playground.git,2022-05-25 17:18:28+00:00,VGA FPGA Playground,0,amichai-bd/vga_fpga_playground,496325532,Verilog,vga_fpga_playground,356,0,2022-05-28 20:25:38+00:00,[],https://api.github.com/licenses/mit
934,https://github.com/Sarmad-Salman/Verilog-RTL.git,2022-05-25 11:22:27+00:00,,0,Sarmad-Salman/Verilog-RTL,496199878,Verilog,Verilog-RTL,1503,0,2022-05-28 18:53:16+00:00,[],None
935,https://github.com/AkshitGureja/Processor-Y86-ISA.git,2022-05-29 08:20:24+00:00,,1,AkshitGureja/Processor-Y86-ISA,497530416,Verilog,Processor-Y86-ISA,959,0,2022-05-29 08:24:09+00:00,[],https://api.github.com/licenses/mit
936,https://github.com/AkhilB4/Router1x3.git,2022-05-27 17:38:59+00:00,,0,AkhilB4/Router1x3,497085599,Verilog,Router1x3,811,0,2022-06-25 05:36:35+00:00,[],None
937,https://github.com/shr-gup/Computer-Architecture.git,2022-05-30 02:56:29+00:00,Contains processor design files for RISC-V instruction architecture.,0,shr-gup/Computer-Architecture,497769042,Verilog,Computer-Architecture,9,0,2022-05-30 02:59:00+00:00,[],None
938,https://github.com/yoyoman12379/Traffic_light.git,2022-05-30 06:44:49+00:00,Design a traffic using Verilog,0,yoyoman12379/Traffic_light,497821512,Verilog,Traffic_light,31,0,2022-05-30 06:45:13+00:00,[],None
939,https://github.com/TomGlint/myProject.git,2022-05-30 16:27:14+00:00,,0,TomGlint/myProject,498018740,Verilog,myProject,51892,0,2022-05-30 16:38:18+00:00,[],https://api.github.com/licenses/apache-2.0
940,https://github.com/mayammakram/Verilog_Based_Calculator.git,2022-05-30 17:51:26+00:00,Calculator developed on Basys 3 FPGA using Verilog (HDL)                                         -- Developed By: Maya Hussein & Nada Badawi,1,mayammakram/Verilog_Based_Calculator,498044768,Verilog,Verilog_Based_Calculator,92,0,2022-05-30 18:07:02+00:00,[],None
941,https://github.com/miguelribeirokk/Finite_State_Machine.git,2022-06-10 03:44:24+00:00,Trabalho prático II da disciplina de Introdução aos Sistemas Lógicos e Digitais ISL | 2022,0,miguelribeirokk/Finite_State_Machine,501890273,Verilog,Finite_State_Machine,845,0,2022-06-10 03:47:09+00:00,[],None
942,https://github.com/ConstantPark/mpw_risc_v.git,2022-06-10 04:20:22+00:00,,0,ConstantPark/mpw_risc_v,501897259,Verilog,mpw_risc_v,32,0,2022-06-10 04:26:38+00:00,[],None
943,https://github.com/rd2606/ROUTER-1X3.git,2022-06-11 01:33:12+00:00,,0,rd2606/ROUTER-1X3,502222632,Verilog,ROUTER-1X3,11,0,2022-06-11 01:34:26+00:00,[],None
944,https://github.com/FaizanRawther/4-bit-ripple-carry-adder.git,2022-06-13 09:11:49+00:00,Implemented 4 bit ripple carry adder using verilog Xilinx Vivado,0,FaizanRawther/4-bit-ripple-carry-adder,502884614,Verilog,4-bit-ripple-carry-adder,2,0,2022-06-13 09:27:39+00:00,[],None
945,https://github.com/r3tr0devilz/16bitALUverilog.git,2022-06-11 17:32:25+00:00,,0,r3tr0devilz/16bitALUverilog,502414577,Verilog,16bitALUverilog,49,0,2022-06-11 17:32:36+00:00,[],None
946,https://github.com/Harsh-Murdeshwar/assgn-3.git,2022-06-11 18:32:19+00:00,,0,Harsh-Murdeshwar/assgn-3,502427278,Verilog,assgn-3,9,0,2022-06-11 18:33:35+00:00,[],None
947,https://github.com/LotteLinkArchive/cuddle-vga.git,2022-06-15 13:14:10+00:00,,0,LotteLinkArchive/cuddle-vga,503772164,Verilog,cuddle-vga,38,0,2022-06-15 13:14:18+00:00,[],https://api.github.com/licenses/gpl-3.0
948,https://github.com/3ab3at/Two-Brackets-Circulating-Pattern.git,2022-05-21 12:07:45+00:00,Pattern displayer using verilog,0,3ab3at/Two-Brackets-Circulating-Pattern,494772180,Verilog,Two-Brackets-Circulating-Pattern,5,0,2022-05-21 12:12:13+00:00,[],None
949,https://github.com/frank355325/homework3.git,2022-05-19 11:31:42+00:00,,0,frank355325/homework3,494043722,Verilog,homework3,3,0,2022-05-19 11:33:39+00:00,[],None
950,https://github.com/visionvlsi/Verification_Training.git,2022-05-19 09:04:22+00:00,,0,visionvlsi/Verification_Training,493996909,Verilog,Verification_Training,30695,0,2022-05-19 09:08:53+00:00,[],None
951,https://github.com/uf123/hw4.git,2022-05-19 12:29:27+00:00,,0,uf123/hw4,494062455,Verilog,hw4,4,0,2022-05-19 12:30:25+00:00,[],None
952,https://github.com/knack233/convolution_fpga.git,2022-06-01 10:53:45+00:00,12通道卷积的FPGA实现,0,knack233/convolution_fpga,498698013,Verilog,convolution_fpga,92,0,2022-06-01 10:56:05+00:00,[],None
953,https://github.com/khalfella/fpga-verilog.git,2022-05-30 21:33:08+00:00,FPGA designs in verilog,0,khalfella/fpga-verilog,498102279,Verilog,fpga-verilog,13,0,2022-05-30 21:36:33+00:00,[],None
954,https://github.com/AndreiSPreda/LFSR-Counter-with-Loadable-Input.git,2022-06-02 21:11:18+00:00,,0,AndreiSPreda/LFSR-Counter-with-Loadable-Input,499292098,Verilog,LFSR-Counter-with-Loadable-Input,2,0,2022-06-02 21:15:32+00:00,[],None
955,https://github.com/AndreiSPreda/Shift-and-Add-Multiplication.git,2022-06-02 21:19:48+00:00,,0,AndreiSPreda/Shift-and-Add-Multiplication,499294169,Verilog,Shift-and-Add-Multiplication,31,0,2022-06-02 21:21:17+00:00,[],None
956,https://github.com/kamarya/yosys.git,2022-06-05 04:38:35+00:00,Yosys Toolchain and Simulation,0,kamarya/yosys,500001079,Verilog,yosys,5,0,2022-06-19 23:21:08+00:00,[],https://api.github.com/licenses/mit
957,https://github.com/vansha445/Implementation-Of-UART-Using-Verilog-HDL.git,2022-06-05 06:11:49+00:00,,0,vansha445/Implementation-Of-UART-Using-Verilog-HDL,500015618,Verilog,Implementation-Of-UART-Using-Verilog-HDL,2,0,2022-06-05 06:12:14+00:00,[],None
958,https://github.com/Dev-Goel/CSL2070-DD-Labs.git,2022-06-04 17:27:08+00:00,"Digital Design based labs, under Prof. Nitin Bhatia in course CSL2070.",0,Dev-Goel/CSL2070-DD-Labs,499893005,Verilog,CSL2070-DD-Labs,4642,0,2022-07-01 11:28:42+00:00,"['digital-design', 'verilog', 'verilog-hdl']",None
959,https://github.com/yuxiaojia/Pipelined-Processor.git,2022-05-31 22:20:10+00:00,"A 16-bit pipelined processor implementing the architecture MIPS ISA. This 5-stage processor with a two-way set-associative cache has multiple types of forwarding and exception handlers, and implements branch predicted not-take. The project is designed in Verilog.",0,yuxiaojia/Pipelined-Processor,498514691,Verilog,Pipelined-Processor,4856,0,2022-06-01 22:13:19+00:00,[],None
960,https://github.com/bguan2022/Axi4Lite_Audio_Equalizer_FPGA.git,2022-06-01 21:19:29+00:00,AXI4LITE_Audio_Equalizer,0,bguan2022/Axi4Lite_Audio_Equalizer_FPGA,498901460,Verilog,Axi4Lite_Audio_Equalizer_FPGA,10010,0,2022-08-14 06:31:16+00:00,[],None
961,https://github.com/Lucian07N/lcdDriver.git,2022-06-03 17:27:16+00:00,,0,Lucian07N/lcdDriver,499595585,Verilog,lcdDriver,5,0,2022-06-03 17:28:15+00:00,[],None
962,https://github.com/Lucian07N/bus-referee-with-protocol-req-ack.git,2022-06-03 17:20:54+00:00,,0,Lucian07N/bus-referee-with-protocol-req-ack,499593718,Verilog,bus-referee-with-protocol-req-ack,990,0,2022-06-03 17:21:52+00:00,[],None
963,https://github.com/SCFMVP/axitest.git,2022-05-31 10:28:12+00:00,,0,SCFMVP/axitest,498288773,Verilog,axitest,6,0,2022-05-31 11:27:22+00:00,[],None
964,https://github.com/Shris7/FPGA-Fabric-design-and-Architecture.git,2022-06-01 02:39:24+00:00,,0,Shris7/FPGA-Fabric-design-and-Architecture,498567240,Verilog,FPGA-Fabric-design-and-Architecture,79,0,2022-06-01 02:43:18+00:00,[],None
965,https://github.com/linhengpei/IC_homework.git,2022-06-03 08:05:06+00:00,,0,linhengpei/IC_homework,499429777,Verilog,IC_homework,14922,0,2022-06-03 08:26:03+00:00,[],None
966,https://github.com/AhmedMaher309/AES-128.git,2022-05-20 17:55:05+00:00,,0,AhmedMaher309/AES-128,494560276,,AES-128,379,0,2024-01-09 11:44:20+00:00,[],None
967,https://github.com/devinASinCS/111_computerOrganization.git,2022-06-09 04:39:12+00:00,,0,devinASinCS/111_computerOrganization,501505766,Verilog,111_computerOrganization,6969,0,2023-03-13 05:59:37+00:00,[],None
