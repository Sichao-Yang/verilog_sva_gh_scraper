,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/tillitis/tillitis-key1.git,2022-09-19 06:18:37+00:00,"Board designs, FPGA verilog, firmware for TKey, the flexible and open USB security key 🔑",24,tillitis/tillitis-key1,538359993,Verilog,tillitis-key1,20056,380,2024-03-29 16:01:21+00:00,"['fpga', 'open-hardware', 'security-token']",None
1,https://github.com/opengateware/openFPGA-Genesis.git,2022-09-21 02:20:15+00:00,FPGA implementation of Sega Genesis for Analogue Pocket.,5,opengateware/openFPGA-Genesis,539269902,Verilog,openFPGA-Genesis,56375,115,2024-01-20 08:36:02+00:00,"['analogue-pocket', 'openfpga']",None
2,https://github.com/SamsungLabs/Butterfly_Acc.git,2022-09-26 08:22:12+00:00,"The codes and artifacts associated with our MICRO'22 paper titled: ""Adaptable Butterfly Accelerator for Attention-based NNs via Hardware and Algorithm Co-design""",16,SamsungLabs/Butterfly_Acc,541480134,Verilog,Butterfly_Acc,263,80,2024-04-09 03:02:29+00:00,"['butterfly', 'deep-learning', 'fpga-accelerator']",None
3,https://github.com/NTU-LaDS-II/FAN_ATPG.git,2022-10-02 17:14:09+00:00,FAN (fan-out-oriented) ATPG (Automatic Test Pattern Generation) and Fault Simulation command line tool,10,NTU-LaDS-II/FAN_ATPG,544515359,Verilog,FAN_ATPG,11205,66,2024-04-07 05:38:01+00:00,"['atpg', 'eda', 'cpp', 'verilog', 'stuck-at', 'vlsi', 'cli', 'lex', 'yacc', 'fan-out', 'test-pattern', 'fault-simulation', 'combinational-circuits', 'sequential-circuits', 'electronic-design-automation', 'vlsi-testing']",https://api.github.com/licenses/mit
4,https://github.com/mbaykenar/digital-logic-design.git,2022-10-03 08:00:39+00:00,This course is given in TOBB ETU for Fall 2022-2023 semester as a second grade lecture. You can find lecture notes and Verilog codes related to the course ,9,mbaykenar/digital-logic-design,544780287,Verilog,digital-logic-design,25694,43,2024-03-30 04:02:38+00:00,[],https://api.github.com/licenses/apache-2.0
5,https://github.com/prajwalgekkouga/AHB-to-APB-Bridge.git,2022-10-04 10:20:04+00:00,The AHB to APB bridge is an AHB slave and the only APB master which provides an interface between the highspeed AHB and the low-power APB. Read and write transfers on the AHB are converted into equivalent transfers on the APB.,8,prajwalgekkouga/AHB-to-APB-Bridge,545412126,Verilog,AHB-to-APB-Bridge,36,37,2024-04-11 08:23:47+00:00,"['ahb', 'amba', 'apb', 'digital', 'fpga', 'modelsim', 'verilog', 'verilog-project']",None
6,https://github.com/nand2mario/ddr3-tang-primer-20k.git,2022-10-01 17:05:55+00:00,DDR3 controller for Tang Primer 20K (Gowin GW2A-18C fpga). DDR3-800 speed and low latency.,7,nand2mario/ddr3-tang-primer-20k,544108025,Verilog,ddr3-tang-primer-20k,383,36,2024-04-07 03:14:11+00:00,[],https://api.github.com/licenses/apache-2.0
7,https://github.com/opengateware/arcade-digdug.git,2022-09-20 05:36:57+00:00,Namco Dig Dug Compatible Gateware IP Core,1,opengateware/arcade-digdug,538826007,Verilog,arcade-digdug,6610,21,2023-11-15 06:45:16+00:00,"['analogue-pocket', 'arcade', 'digdug', 'fpga', 'gateware', 'hdl']",https://api.github.com/licenses/gpl-3.0
8,https://github.com/semiDESIgner/50daysRTLcode.git,2022-09-22 06:17:25+00:00,,1,semiDESIgner/50daysRTLcode,539827912,Verilog,50daysRTLcode,3036,16,2024-02-26 04:22:37+00:00,[],None
9,https://github.com/spark2k06/PCXT_Xilinx_Spartan_6.git,2022-09-27 10:04:59+00:00,PCXT port for Xilinx Spartan 6 FPGAs by spark2k06,3,spark2k06/PCXT_Xilinx_Spartan_6,542018824,Verilog,PCXT_Xilinx_Spartan_6,64273,11,2024-03-07 14:46:39+00:00,[],https://api.github.com/licenses/gpl-3.0
10,https://github.com/MrVegetab1e/ethernet_switch.git,2022-09-30 06:44:16+00:00,An ethernet_switch prj for FPGA. Based on xilinx artix-7 FPGA.,4,MrVegetab1e/ethernet_switch,543464494,Verilog,ethernet_switch,412,10,2024-04-12 12:20:09+00:00,[],None
11,https://github.com/open-fpga/core-example-basicchip32.git,2022-10-01 07:21:53+00:00,,1,open-fpga/core-example-basicchip32,543931639,Verilog,core-example-basicchip32,1623,8,2024-01-25 00:54:17+00:00,['openfpga'],None
12,https://github.com/silicon-vlsi/VLSI-2024.git,2022-09-22 07:29:55+00:00,Portal for 2024 SIT batch being mentored at the Advnaced VLSI Lab.,8,silicon-vlsi/VLSI-2024,539854293,Verilog,VLSI-2024,8449,8,2024-03-02 16:45:57+00:00,[],https://api.github.com/licenses/mit
13,https://github.com/sujan2599/LMS-Adaptive-FIR-Filter.git,2022-09-26 10:18:15+00:00,design of LMS adaptive 4-tap FIR filter using Distributed Arithmetic architecture in verilog,0,sujan2599/LMS-Adaptive-FIR-Filter,541524593,Verilog,LMS-Adaptive-FIR-Filter,2,7,2024-02-27 09:07:00+00:00,[],None
14,https://github.com/WitchElaina/COCD.git,2022-09-27 02:38:34+00:00,"2022 USTB Computer Organization course design codes, includes CG, TinyMIPS and so on. 北京科技大学2022计算机组成原理课程设计代码仓库。",0,WitchElaina/COCD,541872896,Verilog,COCD,54,6,2024-03-06 09:05:57+00:00,"['ustb', 'mips']",None
15,https://github.com/EricJin2002/UCAS-CA-2022.git,2022-10-02 01:11:42+00:00,一个单发射五级静态流水CPU，采用龙芯32位精简版指令集，支持异常和中断处理，使用AXI总线接口，已集成TLB模块,1,EricJin2002/UCAS-CA-2022,544230617,Verilog,UCAS-CA-2022,128,6,2024-04-06 08:37:37+00:00,[],None
16,https://github.com/Kaigard/Anfield.git,2022-09-27 08:20:00+00:00,An incomplete RISCV-IM64 SoC,1,Kaigard/Anfield,541977167,Verilog,Anfield,134,6,2024-02-10 16:30:59+00:00,[],https://api.github.com/licenses/mit
17,https://github.com/AkhilDotG/Floating-point-MAC.git,2022-09-17 08:26:35+00:00,Half Precision Floating point Multiplier Accumulator,1,AkhilDotG/Floating-point-MAC,537745353,Verilog,Floating-point-MAC,4,5,2023-12-27 21:44:49+00:00,[],None
18,https://github.com/gju06051/Verilog_study_public.git,2022-09-24 03:38:06+00:00,,0,gju06051/Verilog_study_public,540696730,Verilog,Verilog_study_public,28,5,2024-04-04 04:29:40+00:00,[],https://api.github.com/licenses/mit
19,https://github.com/w32agobot/SKY130_standardcelldesign.git,2022-09-25 18:42:06+00:00,Documentation for RTL-with-customcells to GDSII,1,w32agobot/SKY130_standardcelldesign,541273689,Verilog,SKY130_standardcelldesign,25700,5,2023-07-05 13:42:18+00:00,[],https://api.github.com/licenses/apache-2.0
20,https://github.com/sfmth/iscas-snn-accelerator.git,2022-09-20 10:06:51+00:00,,0,sfmth/iscas-snn-accelerator,538922564,Verilog,iscas-snn-accelerator,98440,5,2024-03-01 13:45:53+00:00,[],None
21,https://github.com/suisuisi/teroshdl.git,2022-09-24 10:37:43+00:00,teroshdl例程,1,suisuisi/teroshdl,540793691,Verilog,teroshdl,6576,5,2023-07-23 10:28:12+00:00,[],None
22,https://github.com/emeb/ice-dongle.git,2022-09-21 01:22:01+00:00,USB-C Dongle with ice40 UP5k FPGA,2,emeb/ice-dongle,539254426,Verilog,ice-dongle,5111,4,2023-09-13 12:31:43+00:00,[],https://api.github.com/licenses/mit
23,https://github.com/mohamedshehabeldean/BBqm-hardware.git,2022-09-30 00:07:16+00:00,using c++ and assembly and machine code,0,mohamedshehabeldean/BBqm-hardware,543364842,Verilog,BBqm-hardware,1850,4,2023-07-15 22:24:49+00:00,[],None
24,https://github.com/YukunXue/E203_SOC_G2.git,2022-09-24 02:42:01+00:00,"We run the E203 based on Genesys2 ,and add some additional IP to develop a powerful system ",2,YukunXue/E203_SOC_G2,540686519,Verilog,E203_SOC_G2,3000,4,2024-04-09 06:03:59+00:00,[],None
25,https://github.com/MiSTer-devel/Arcade-BankPanic_MiSTer.git,2022-10-04 15:47:10+00:00,BankPanic FPGA core for MiSTer,4,MiSTer-devel/Arcade-BankPanic_MiSTer,545568863,Verilog,Arcade-BankPanic_MiSTer,2622,4,2022-11-04 01:33:45+00:00,[],https://api.github.com/licenses/gpl-2.0
26,https://github.com/Lowdata/Mixed-Signal-8bit-RAM.git,2022-09-27 22:56:07+00:00,,0,Lowdata/Mixed-Signal-8bit-RAM,542319081,Verilog,Mixed-Signal-8bit-RAM,25,4,2022-12-21 20:18:06+00:00,[],None
27,https://github.com/Richard-dick/CA_GROUPWORK.git,2022-09-30 09:58:57+00:00,,0,Richard-dick/CA_GROUPWORK,543536232,Verilog,CA_GROUPWORK,7310,4,2023-05-21 11:51:01+00:00,[],None
28,https://github.com/AnthonyAS15/Decodificador-de-Gray.git,2022-09-18 01:06:01+00:00,Segundo proyecto del curso de Diseño Lógico,1,AnthonyAS15/Decodificador-de-Gray,537967647,Verilog,Decodificador-de-Gray,204,4,2024-02-15 05:55:52+00:00,[],https://api.github.com/licenses/mit
29,https://github.com/rj45/rjvdp.git,2022-09-17 16:17:39+00:00,A retro-inspired VDP -- Video Display Processor -- built with Digital running on an FPGA.,0,rj45/rjvdp,537863416,Verilog,rjvdp,494,3,2023-04-10 22:43:04+00:00,[],https://api.github.com/licenses/mit
30,https://github.com/NouraMedhat28/Washing-Machine-Controller.git,2022-09-30 21:30:42+00:00,,0,NouraMedhat28/Washing-Machine-Controller,543797319,Verilog,Washing-Machine-Controller,20,3,2023-05-19 19:14:45+00:00,[],None
31,https://github.com/MuhammadMajiid/AES.git,2022-09-24 19:02:32+00:00,"Advanced Encryption Standard (AES) modelling, using Verilog HDL.",0,MuhammadMajiid/AES,540937442,Verilog,AES,2323,3,2023-05-16 08:22:46+00:00,[],None
32,https://github.com/CraigDroke/Processor.git,2022-09-20 22:00:59+00:00,Computer Architecture Final Project,1,CraigDroke/Processor,539206544,Verilog,Processor,52,3,2024-02-15 18:20:16+00:00,[],None
33,https://github.com/GeYuYao-hub/nscscc.git,2022-09-30 11:16:42+00:00,本项目的成果是在龙芯提供的 FPGA 实验平台上设计并实现基于 MIPS 32 的 CPU，并使用实验板上的周边硬件，成为一个片上系统。 不仅支持大赛要求的57 条指令以及其他复杂运算等32条指令，还完成了CP0和TLB的设计以及实现了对异常和 冲突的处理。能够运行功能、性能测试。,0,GeYuYao-hub/nscscc,543563822,Verilog,nscscc,3924,3,2024-01-09 10:51:41+00:00,[],None
34,https://github.com/iic-jku/kvic_336007_ws22.git,2022-09-26 11:00:57+00:00,Course material for 336.007 (Prof. Pretl) in WS22 at JKU,0,iic-jku/kvic_336007_ws22,541540405,Verilog,kvic_336007_ws22,3343,2,2022-11-25 13:53:37+00:00,[],None
35,https://github.com/jamesrosssharp/1_bit_AM.git,2022-09-17 05:14:41+00:00,1 bit AM Radio for ULX3S,0,jamesrosssharp/1_bit_AM,537705807,Verilog,1_bit_AM,1928,2,2022-10-24 10:35:15+00:00,[],https://api.github.com/licenses/mit
36,https://github.com/ZHAODONG-LYU/test_efpga0.git,2022-10-03 07:09:40+00:00,,0,ZHAODONG-LYU/test_efpga0,544759583,Verilog,test_efpga0,244193,2,2022-11-01 05:45:19+00:00,[],https://api.github.com/licenses/apache-2.0
37,https://github.com/emreissever/APB-PWM-Module.git,2022-09-19 16:54:01+00:00,PWM Controller With APB Slave Interface,0,emreissever/APB-PWM-Module,538604686,Verilog,APB-PWM-Module,577,2,2022-09-20 10:34:02+00:00,[],None
38,https://github.com/echostreams/nand-bch.git,2022-09-29 00:58:40+00:00,,0,echostreams/nand-bch,542855751,Verilog,nand-bch,1566,2,2023-07-19 07:21:42+00:00,[],None
39,https://github.com/norhanreda/solutions-of-computer-archtecture-labs.git,2022-10-04 19:43:10+00:00,,0,norhanreda/solutions-of-computer-archtecture-labs,545676247,Verilog,solutions-of-computer-archtecture-labs,5,2,2023-01-02 07:16:11+00:00,[],None
40,https://github.com/NouraMedhat28/Single-Cycle-MIPS-Processor.git,2022-09-22 15:27:34+00:00,,0,NouraMedhat28/Single-Cycle-MIPS-Processor,540047414,Verilog,Single-Cycle-MIPS-Processor,24,2,2023-05-19 19:14:50+00:00,[],None
41,https://github.com/MiRaCLeXeoN/Handwritten-Number-Recognition-Based-On-Artix7-FPGA.git,2022-09-23 02:08:52+00:00,"This is the project assignment of the the course Computer Organization and Architecture, HUST. It's a rudimentary implementation of handwritten-number recognition, with computing component on FPGA and interactive component on PC.",1,MiRaCLeXeoN/Handwritten-Number-Recognition-Based-On-Artix7-FPGA,540244180,Verilog,Handwritten-Number-Recognition-Based-On-Artix7-FPGA,21267,2,2023-12-04 06:59:44+00:00,[],None
42,https://github.com/irving11119/EE2026-Project.git,2022-09-30 08:29:59+00:00,FPGA Project for NUS EE2026 (Digital Design),2,irving11119/EE2026-Project,543502453,Verilog,EE2026-Project,48535,2,2023-12-26 05:57:56+00:00,[],None
43,https://github.com/polprog/my8051.git,2022-09-27 14:45:07+00:00,An 8051 implementation on the Lattice ECP5 FPGA on Colorlight 5A-75B board,0,polprog/my8051,542136925,Verilog,my8051,379,2,2024-01-22 05:45:41+00:00,[],None
44,https://github.com/wkrska/EC551_Labs.git,2022-10-03 22:47:38+00:00,,0,wkrska/EC551_Labs,545169213,Verilog,EC551_Labs,240358,2,2022-11-23 01:37:43+00:00,[],None
45,https://github.com/fdarling/orangecrab-usb-cdc-demo.git,2022-10-02 23:31:07+00:00,"USB virtual COM port ""open core"" running on an OrangeCrab development board",0,fdarling/orangecrab-usb-cdc-demo,544624606,Verilog,orangecrab-usb-cdc-demo,12,2,2023-09-12 02:32:18+00:00,[],https://api.github.com/licenses/apache-2.0
46,https://github.com/PrathamGit-dev/BB84-Protocol-QuantamKeyDistribution-.git,2022-09-24 09:06:57+00:00,Classical analogy of quantam key distribution and it's implementation on FPGA(Pynqz2),0,PrathamGit-dev/BB84-Protocol-QuantamKeyDistribution-,540769933,Verilog,BB84-Protocol-QuantamKeyDistribution-,6,2,2023-12-28 13:58:00+00:00,[],None
47,https://github.com/gayathrimalamal/Pixel_Level_Reconfigurable_Beamforming.git,2022-09-27 07:38:53+00:00,,0,gayathrimalamal/Pixel_Level_Reconfigurable_Beamforming,541961532,Verilog,Pixel_Level_Reconfigurable_Beamforming,33,2,2024-03-13 00:51:23+00:00,[],None
48,https://github.com/Himanshu5298/Stream-cypher-for-data-encyption-decryption.git,2022-09-25 17:40:08+00:00,8bit stream cypher for text encryption and decryption using the pseudo random number generator in Verilog HDL.,0,Himanshu5298/Stream-cypher-for-data-encyption-decryption,541256374,Verilog,Stream-cypher-for-data-encyption-decryption,3,2,2023-01-17 18:23:04+00:00,[],None
49,https://github.com/sarathb2/logarithmic-Cordic-Unit.git,2022-09-29 12:34:04+00:00,,0,sarathb2/logarithmic-Cordic-Unit,543113180,Verilog,logarithmic-Cordic-Unit,3,2,2023-07-12 06:55:47+00:00,[],None
50,https://github.com/pavanmathur/DDR-SDRAM-.git,2022-10-02 16:14:30+00:00,DESIGN AND VERIFICATION OF DDR SDRAM MEMORY CONTROLLER USING SYSTEMVERILOG FOR HIGHER COVERAGE,1,pavanmathur/DDR-SDRAM-,544494097,Verilog,DDR-SDRAM-,6887,2,2024-02-12 07:03:06+00:00,[],None
51,https://github.com/ipgtestrepos/socX.git,2022-09-18 15:22:06+00:00,flow tests,0,ipgtestrepos/socX,538151092,Verilog,socX,995,1,2023-02-02 15:53:19+00:00,[],None
52,https://github.com/AllenKaixuan/Computer-Architecture.git,2022-09-22 06:18:53+00:00,南开大学计算机体系结构,0,AllenKaixuan/Computer-Architecture,539828430,Verilog,Computer-Architecture,1476,1,2024-01-13 13:16:09+00:00,[],None
53,https://github.com/ritwik-9/Arithmetic-Logical-Unit.git,2022-09-29 13:38:20+00:00,"Designed a 6-bit mini-ALU unit which functionality like ADD, SUB, XOR, CMP, and negation. Implemented in Verilog (Hardware Descriptive Language), tested and simulated in Vivado before implementing it on FPGA Basys 3 board.",0,ritwik-9/Arithmetic-Logical-Unit,543143259,Verilog,Arithmetic-Logical-Unit,20,1,2023-02-23 11:04:34+00:00,[],None
54,https://github.com/AkhilDotG/Floating-Point-Adder.git,2022-09-17 08:10:36+00:00,4 stage - Half Precision Floating point adder,0,AkhilDotG/Floating-Point-Adder,537741895,Verilog,Floating-Point-Adder,94,1,2022-09-17 08:46:44+00:00,[],None
55,https://github.com/sjoon-oh/ee511-computer-arch.git,2022-09-22 23:41:42+00:00,"KAIST EE511 Computer Architecture, coursework project.",0,sjoon-oh/ee511-computer-arch,540208679,Verilog,ee511-computer-arch,1848,1,2023-02-09 09:27:00+00:00,[],https://api.github.com/licenses/mit
56,https://github.com/Vedant-02/Verilog-HDL-Lab-Experiments.git,2022-09-29 09:49:56+00:00,"Verilog, standardized as IEEE 1364, is a hardware description language used to model electronic systems. This repository consists of Verilog HDL lab experiments conducted in course EEL2020 Digitial Design at IIT Jodhpur",2,Vedant-02/Verilog-HDL-Lab-Experiments,543042814,Verilog,Verilog-HDL-Lab-Experiments,104,1,2024-01-02 11:53:22+00:00,"['full-adder', '4-bit-parallel-adder', 'binary-to-gray', '4-bit-combinational-adder', 'bcd-to-7-segment', '4-bit-comparator', 'adder-subtractor', 'carry-look-ahead-adder', 'carry-select-adder', '32-bit-fast-adder', 'carry-skip-adder', 'bcd-adder', 'bcd-subtractor', 'binary-multiplier', 'barrel-shifter', '32-bit-alu', 'priority-encoder', 'verilog', 'hacktoberfest', 'hacktoberfest2022']",https://api.github.com/licenses/mit
57,https://github.com/b224hisl/rioschip2.git,2022-09-18 18:09:46+00:00,,0,b224hisl/rioschip2,538197955,Verilog,rioschip2,153214,1,2024-03-14 08:31:21+00:00,[],https://api.github.com/licenses/apache-2.0
58,https://github.com/sanidhyas3s/Pipelined-Processor-Simulator.git,2022-09-30 15:34:27+00:00,A Simulator for our own customised Assembly Language.,1,sanidhyas3s/Pipelined-Processor-Simulator,543668543,Verilog,Pipelined-Processor-Simulator,24,1,2022-10-23 08:55:55+00:00,[],None
59,https://github.com/Archfx/SnpsTools.git,2022-09-30 15:40:58+00:00,Simple beginner tutorial for Synopsys tool chain,1,Archfx/SnpsTools,543671094,Verilog,SnpsTools,7732,1,2023-04-05 15:30:27+00:00,[],None
60,https://github.com/saisumanthpamujula/Radix-4-booth-multiplier.git,2022-09-28 12:39:22+00:00, design a 8-bit signed multiplier using booth’s algorithm.,0,saisumanthpamujula/Radix-4-booth-multiplier,542583860,Verilog,Radix-4-booth-multiplier,19,1,2022-10-27 23:40:33+00:00,[],https://api.github.com/licenses/gpl-3.0
61,https://github.com/wshuangge/ee457.git,2022-09-30 09:00:24+00:00,,0,wshuangge/ee457,543513827,Verilog,ee457,2379,1,2024-01-26 20:05:13+00:00,[],None
62,https://github.com/sujan2599/Logarithmic-unit-using-CORDIC.git,2022-09-26 10:51:52+00:00,,0,sujan2599/Logarithmic-unit-using-CORDIC,541536820,Verilog,Logarithmic-unit-using-CORDIC,2,1,2022-11-19 14:31:39+00:00,[],None
63,https://github.com/Darksw20/ITESO-digital-systems.git,2022-10-04 13:27:59+00:00,,0,Darksw20/ITESO-digital-systems,545497131,Verilog,ITESO-digital-systems,33,1,2023-01-26 00:53:37+00:00,[],None
64,https://github.com/skarr4616/Y86-Pipeline-Processor.git,2022-10-03 21:45:24+00:00,,0,skarr4616/Y86-Pipeline-Processor,545149991,Verilog,Y86-Pipeline-Processor,1155,1,2023-02-15 08:04:22+00:00,[],None
65,https://github.com/BruceHuynh-hub/DILITHIUM-hardware.git,2022-09-20 18:15:19+00:00,,0,BruceHuynh-hub/DILITHIUM-hardware,539130738,Verilog,DILITHIUM-hardware,4253,1,2023-06-24 14:25:23+00:00,[],None
66,https://github.com/xu842251462/EC551_FinalProject.git,2022-10-03 19:28:41+00:00,,0,xu842251462/EC551_FinalProject,545098052,Verilog,EC551_FinalProject,45293,1,2024-01-12 18:40:07+00:00,[],None
67,https://github.com/nella17/NYCU-DCLab-2022.git,2022-09-17 10:45:36+00:00,,0,nella17/NYCU-DCLab-2022,537777468,Verilog,NYCU-DCLab-2022,317,1,2023-03-10 09:27:11+00:00,[],None
68,https://github.com/thechosenone98/upduino-fpga-particle-filter.git,2022-09-21 13:35:31+00:00,An implementation of a particle filter on an UPduino v3.1,0,thechosenone98/upduino-fpga-particle-filter,539506142,Verilog,upduino-fpga-particle-filter,31,1,2022-09-26 10:44:48+00:00,[],None
69,https://github.com/aaqdas/riscv-scalar.git,2022-09-23 15:36:38+00:00,Pipelined RV32I with Hazard Detection and Forwarding,0,aaqdas/riscv-scalar,540507613,Verilog,riscv-scalar,144,1,2023-11-16 03:47:59+00:00,"['riscv32', 'verilog']",https://api.github.com/licenses/mit
70,https://github.com/syedimaduddin/4-bit_Asynchronous_Up_Counter_using_Mixed-Signal.git,2022-09-29 11:01:26+00:00,"I have created this repository to store my 4-bit Asynchronous Counter design using Mixed Signal which I have designed for Mixed Signal SoC Design Marathon using eSim & SKY130, ",2,syedimaduddin/4-bit_Asynchronous_Up_Counter_using_Mixed-Signal,543073099,Verilog,4-bit_Asynchronous_Up_Counter_using_Mixed-Signal,9701,1,2022-10-06 10:21:52+00:00,[],None
71,https://github.com/PeterZhang17/HelloEDA.git,2022-10-02 12:00:12+00:00,OpenSourceHardwareDevelopment,1,PeterZhang17/HelloEDA,544408033,Verilog,HelloEDA,8,1,2023-07-09 22:39:47+00:00,[],https://api.github.com/licenses/mit
72,https://github.com/Vivehanandhaa/ECEA_HDLTP.git,2022-10-02 19:53:32+00:00,,0,Vivehanandhaa/ECEA_HDLTP,544567628,Verilog,ECEA_HDLTP,844,1,2023-02-10 06:19:50+00:00,[],None
73,https://github.com/srimanthtenneti/FeFET-Programming-Network-.git,2022-09-21 13:08:39+00:00,Pulse varying circuits for FeFET programming ,0,srimanthtenneti/FeFET-Programming-Network-,539494065,Verilog,FeFET-Programming-Network-,2,1,2023-12-15 06:57:44+00:00,[],https://api.github.com/licenses/bsd-3-clause
74,https://github.com/Zhang-Zhi-Kai/2021-CIC.git,2022-09-20 03:32:01+00:00,,0,Zhang-Zhi-Kai/2021-CIC,538794961,Verilog,2021-CIC,1037,1,2022-12-08 07:58:26+00:00,[],None
75,https://github.com/RaviMugidi/GCD-Machine-using-Verilog-HDL.git,2022-09-21 17:43:02+00:00,,0,RaviMugidi/GCD-Machine-using-Verilog-HDL,539613541,Verilog,GCD-Machine-using-Verilog-HDL,8,1,2023-09-10 22:34:45+00:00,[],None
76,https://github.com/marschen233/ECSE_318.git,2022-09-21 17:53:17+00:00,,0,marschen233/ECSE_318,539617776,Verilog,ECSE_318,1212,1,2023-07-02 03:38:04+00:00,[],None
77,https://github.com/abhash2205/8T-SRAM-Based-In-Memory-DAC-for-AI-acceleration.git,2022-09-29 18:03:37+00:00,,0,abhash2205/8T-SRAM-Based-In-Memory-DAC-for-AI-acceleration,543256977,Verilog,8T-SRAM-Based-In-Memory-DAC-for-AI-acceleration,1810,1,2022-10-14 01:31:45+00:00,[],None
78,https://github.com/yuansui123/ISML_SineStimDriver.git,2022-09-29 00:55:21+00:00,,0,yuansui123/ISML_SineStimDriver,542854865,Verilog,ISML_SineStimDriver,6,1,2024-02-26 01:35:08+00:00,[],None
79,https://github.com/wcy777/ICLAB_2021_spring_Lab03_practice.git,2022-09-30 09:18:26+00:00,,0,wcy777/ICLAB_2021_spring_Lab03_practice,543520723,Verilog,ICLAB_2021_spring_Lab03_practice,497,1,2022-12-25 06:07:11+00:00,[],None
80,https://github.com/noemiabril/Minimig-AGA_MiSTer-Arrow_SoCkit.git,2022-09-22 20:40:38+00:00,Minimig AGA for Arrow SoCkit,0,noemiabril/Minimig-AGA_MiSTer-Arrow_SoCkit,540162246,Verilog,Minimig-AGA_MiSTer-Arrow_SoCkit,17787,1,2022-09-23 07:30:25+00:00,[],None
81,https://github.com/leonrinkel/lake.git,2022-10-01 14:37:44+00:00,Yet another RISC-V core implemented in Verilog,1,leonrinkel/lake,544060123,Verilog,lake,15,1,2022-10-12 17:59:24+00:00,[],None
82,https://github.com/sunny865/mic_array.git,2022-10-04 11:24:34+00:00,,1,sunny865/mic_array,545439208,Verilog,mic_array,8592,1,2022-10-05 11:55:39+00:00,[],None
83,https://github.com/ssszwic/IC_Project.git,2022-09-26 06:02:23+00:00,,0,ssszwic/IC_Project,541431143,Verilog,IC_Project,69,1,2022-10-13 12:46:47+00:00,[],None
84,https://github.com/INNO-MAKER/7_INCH_HDMI2MIPI_FPGA_DEMO.git,2022-09-20 02:50:34+00:00,,1,INNO-MAKER/7_INCH_HDMI2MIPI_FPGA_DEMO,538784066,Verilog,7_INCH_HDMI2MIPI_FPGA_DEMO,65319,1,2023-04-11 05:03:59+00:00,[],None
85,https://github.com/anirudh-arunkumar/Single-Cycle-Processor.git,2022-10-04 16:04:24+00:00,created using Verilog,0,anirudh-arunkumar/Single-Cycle-Processor,545576969,Verilog,Single-Cycle-Processor,21,1,2022-10-20 21:00:49+00:00,[],None
86,https://github.com/IsharaNawa/CO221_Digital_Design_LABS.git,2022-09-25 13:39:47+00:00,Labs of CO221 : Digital Design,0,IsharaNawa/CO221_Digital_Design_LABS,541183812,Verilog,CO221_Digital_Design_LABS,21962,1,2022-09-25 23:57:16+00:00,[],None
87,https://github.com/PebPeb/Single-Cycle-RV32I.git,2022-09-29 03:29:32+00:00,Single Cycle CPU using the RV32I Base Instruction set,0,PebPeb/Single-Cycle-RV32I,542898937,Verilog,Single-Cycle-RV32I,3357,1,2023-07-18 09:16:53+00:00,"['computer-architecture', 'cpu', 'from-scratch', 'risc-v', 'single-cycle-processor']",None
88,https://github.com/weidingliu/Lite_dual-CPU.git,2022-09-17 14:41:26+00:00,顺序双发射CPU,0,weidingliu/Lite_dual-CPU,537836888,Verilog,Lite_dual-CPU,136357,1,2024-01-12 18:38:11+00:00,['cpu'],None
89,https://github.com/mohsenrezaei12/4-bit-multiplier-using-array-and-Add-Shift-in-Verilog.git,2022-10-02 08:54:55+00:00,,0,mohsenrezaei12/4-bit-multiplier-using-array-and-Add-Shift-in-Verilog,544350429,Verilog,4-bit-multiplier-using-array-and-Add-Shift-in-Verilog,8,1,2022-11-04 14:57:45+00:00,[],None
90,https://github.com/Adi-SRAM25/FPGA-based-True-Random-Number-Generator.git,2022-09-22 15:23:38+00:00,True random number generators (TRNGs) play a fundamental role in cryptographic systems. This brief presents a new and efficient method to generate true random numbers on field programmable gate array (FPGA) by utilizing the random jitter of free-running oscillators as a source of randomness.,1,Adi-SRAM25/FPGA-based-True-Random-Number-Generator,540045783,Verilog,FPGA-based-True-Random-Number-Generator,699,1,2022-09-22 22:31:04+00:00,[],None
91,https://github.com/MuhammadMajiid/Washing-Machine.git,2022-09-20 15:22:53+00:00,,0,MuhammadMajiid/Washing-Machine,539058092,Verilog,Washing-Machine,63,1,2022-12-12 06:35:38+00:00,[],None
92,https://github.com/srijithkrishnan/SmartHome-FPGA.git,2022-09-18 12:48:50+00:00,Smart Home is a FPGA project designed on a Boolean Board (Spartan 7) for automated control over home appliances within a room.,0,srijithkrishnan/SmartHome-FPGA,538107403,Verilog,SmartHome-FPGA,702,1,2024-03-09 02:11:54+00:00,[],None
93,https://github.com/wcy777/ICLAB_2021_spring_Lab02_practice.git,2022-09-25 10:36:05+00:00,,0,wcy777/ICLAB_2021_spring_Lab02_practice,541135955,Verilog,ICLAB_2021_spring_Lab02_practice,835,1,2022-12-25 06:07:09+00:00,[],None
94,https://github.com/LBL-ICS/Parameterizable-Design-on-CNN-with-Chisel-HCL.git,2022-09-21 16:58:56+00:00,,1,LBL-ICS/Parameterizable-Design-on-CNN-with-Chisel-HCL,539595682,Verilog,Parameterizable-Design-on-CNN-with-Chisel-HCL,118,1,2023-02-22 18:19:46+00:00,[],None
95,https://github.com/dineshannayya/8bit_dac.git,2022-09-23 06:27:23+00:00,4 x 8 Bit DAC taget to openroad/openlane flow and sky130 foundary,1,dineshannayya/8bit_dac,540308309,Verilog,8bit_dac,855,1,2023-05-10 13:32:29+00:00,[],https://api.github.com/licenses/apache-2.0
96,https://github.com/wxjHits/SOC_CORTEX_M0.git,2022-09-19 15:58:37+00:00,,0,wxjHits/SOC_CORTEX_M0,538581887,Verilog,SOC_CORTEX_M0,43201,1,2024-04-07 07:16:02+00:00,[],None
97,https://github.com/howard881010/IC-Design-Lab-Term-Project.git,2022-09-24 02:57:37+00:00,,0,howard881010/IC-Design-Lab-Term-Project,540689423,Verilog,IC-Design-Lab-Term-Project,2887,1,2022-11-23 08:06:22+00:00,[],None
98,https://github.com/DanielMestres/RISC-ARM-Pipeline-Architecture.git,2022-10-02 23:19:51+00:00,Semester project of emulating a RISC ARM arquitecture utilizing Verilog,0,DanielMestres/RISC-ARM-Pipeline-Architecture,544622048,Verilog,RISC-ARM-Pipeline-Architecture,1465,1,2023-06-13 04:35:10+00:00,[],None
99,https://github.com/Swalbak/digital-system-design.git,2022-09-26 13:50:10+00:00,dsd,0,Swalbak/digital-system-design,541611143,Verilog,digital-system-design,11584,1,2023-04-09 08:47:15+00:00,[],None
100,https://github.com/Benisonpin/Caravel-ISP-TWLCE-01.git,2022-09-20 11:58:47+00:00,,0,Benisonpin/Caravel-ISP-TWLCE-01,538965487,Verilog,Caravel-ISP-TWLCE-01,45844,1,2022-11-01 06:23:31+00:00,[],https://api.github.com/licenses/apache-2.0
101,https://github.com/Indirashradda/Blind-Spot-Monitoring-and-Notification-System.git,2022-09-29 10:12:12+00:00,,0,Indirashradda/Blind-Spot-Monitoring-and-Notification-System,543052422,Verilog,Blind-Spot-Monitoring-and-Notification-System,548,1,2022-10-08 14:14:41+00:00,[],None
102,https://github.com/MiSTer-devel/Arcade-PenguinKunWars_MiSTer.git,2022-10-02 21:41:31+00:00,PenguinKunWars by MiSTer-X,2,MiSTer-devel/Arcade-PenguinKunWars_MiSTer,544598423,Verilog,Arcade-PenguinKunWars_MiSTer,1843,1,2022-10-16 17:56:33+00:00,[],https://api.github.com/licenses/gpl-2.0
103,https://github.com/mouer-hub/cmos_sdram_vga.git,2022-09-27 11:48:57+00:00,,0,mouer-hub/cmos_sdram_vga,542056949,Verilog,cmos_sdram_vga,24404,1,2023-11-24 06:47:21+00:00,[],None
104,https://github.com/d4torres/RV32i.git,2022-09-28 21:36:33+00:00,Pipelined RISC-V RV32i processor in Systemverilog,0,d4torres/RV32i,542802138,Verilog,RV32i,159,1,2023-11-14 02:00:40+00:00,[],None
105,https://github.com/tmct-web/omsp430_demo_tmct.git,2022-09-19 07:35:28+00:00,openMSP430 project ported to Terasic DE0 and DE0CV. (I2C master core and basic UART included),0,tmct-web/omsp430_demo_tmct,538385173,Verilog,omsp430_demo_tmct,2642,1,2022-12-16 21:32:27+00:00,"['i2c-master', 'basic-uart', 'openmsp430', 'simple-uart', 'fpga', 'verilog']",https://api.github.com/licenses/bsd-3-clause
106,https://github.com/briansune/Altera-Cyclone-V-HDMI.git,2022-09-21 03:27:20+00:00,Verilog based HDMI for Cyclone V or Altera series,0,briansune/Altera-Cyclone-V-HDMI,539287670,Verilog,Altera-Cyclone-V-HDMI,1465,1,2024-01-08 23:40:58+00:00,"['altera-fpga', 'cyclone-v', 'hdmi', 'tmds', 'verilog']",https://api.github.com/licenses/mit
107,https://github.com/ngrieshop/tinytapetest.git,2022-10-03 11:39:08+00:00,verlogtest,0,ngrieshop/tinytapetest,544874244,Verilog,tinytapetest,9,0,2022-10-03 11:39:15+00:00,[],https://api.github.com/licenses/apache-2.0
108,https://github.com/oldpig123/computer_organization.git,2022-10-04 05:02:14+00:00,,0,oldpig123/computer_organization,545283353,Verilog,computer_organization,8743,0,2022-10-05 02:54:45+00:00,[],None
109,https://github.com/aalexff/voltimetroVerilog.git,2022-09-24 22:29:30+00:00,Un voltimetro unipolar de la Arty-7 con el componente XADC,0,aalexff/voltimetroVerilog,540984252,Verilog,voltimetroVerilog,42,0,2022-09-27 01:40:44+00:00,[],None
110,https://github.com/kenkey101/Lab2.git,2022-09-29 15:29:32+00:00,,0,kenkey101/Lab2,543194580,Verilog,Lab2,1038,0,2022-09-29 15:31:36+00:00,[],None
111,https://github.com/Rasoul-Akhondi/mult_module.git,2022-10-01 11:40:10+00:00,,0,Rasoul-Akhondi/mult_module,544005406,Verilog,mult_module,6,0,2023-03-02 20:20:21+00:00,[],None
112,https://github.com/MarlzRana/binary-adders.git,2022-09-20 15:12:35+00:00,,0,MarlzRana/binary-adders,539053562,Verilog,binary-adders,14,0,2022-09-20 15:21:40+00:00,[],None
113,https://github.com/kenryu621/SP-22-CECS-341-Lab-3.git,2022-09-17 07:26:26+00:00,Lab 3 assignment from Spring 2022 CECS 341 Computer Architecture of CSULB,0,kenryu621/SP-22-CECS-341-Lab-3,537732231,Verilog,SP-22-CECS-341-Lab-3,1768,0,2022-09-17 10:13:50+00:00,[],None
114,https://github.com/Pranavi-2001/FIFO.git,2022-09-18 22:00:15+00:00,,0,Pranavi-2001/FIFO,538252150,Verilog,FIFO,228,0,2022-09-18 22:01:14+00:00,[],None
115,https://github.com/PowellJacob/CaravelRepo.git,2022-09-30 18:16:19+00:00,Repository from Caravel user project,0,PowellJacob/CaravelRepo,543732184,Verilog,CaravelRepo,2227,0,2022-09-30 18:16:35+00:00,[],https://api.github.com/licenses/apache-2.0
116,https://github.com/bugsbunny2210/Implementation-of-Merge-Sort-Using-Verilog.git,2022-10-01 04:16:57+00:00, Implementation and synthesis of Merge Sort Using Verilog and verify the results through simulation,0,bugsbunny2210/Implementation-of-Merge-Sort-Using-Verilog,543885407,Verilog,Implementation-of-Merge-Sort-Using-Verilog,933,0,2022-11-26 16:28:37+00:00,[],None
117,https://github.com/Enting-Chen/Computer-Organisation.git,2022-10-02 07:43:54+00:00,,0,Enting-Chen/Computer-Organisation,544329833,Verilog,Computer-Organisation,15326,0,2022-10-02 07:44:46+00:00,[],None
118,https://github.com/patwarind/Design-and-Evaluation-of-Finite-Field-Multipliers-using-fast-XNOR-cells.git,2022-10-02 08:56:08+00:00,open source data of project done to enhance performance of finite field multiplier using customized xnor standard cell,0,patwarind/Design-and-Evaluation-of-Finite-Field-Multipliers-using-fast-XNOR-cells,544350763,Verilog,Design-and-Evaluation-of-Finite-Field-Multipliers-using-fast-XNOR-cells,2970,0,2023-01-22 12:43:27+00:00,[],None
119,https://github.com/barryvv/AI-Accelerator.git,2022-09-19 20:47:45+00:00,"designed and simulated a systolic matrix multiplication kernel which support a systolic (serial) operation and deployed the circuit on a PYNQ FPGA (hybrid FPGA+ARM SoC) board, which runs an embedded Linux stack on the ARM CPU and use the FPGA as an accelerator",1,barryvv/AI-Accelerator,538691744,Verilog,AI-Accelerator,8128,0,2022-09-21 05:13:09+00:00,[],None
120,https://github.com/jtremesay/kfpga.git,2022-09-25 14:21:43+00:00,Opensource (hardware ?) FPGA architecture,0,jtremesay/kfpga,541196166,Verilog,kfpga,734,0,2022-09-25 15:26:50+00:00,[],https://api.github.com/licenses/gpl-3.0
121,https://github.com/Xavier9031/final_project_flappy_bird.git,2022-09-27 16:41:51+00:00,final_project_flappy_bird,0,Xavier9031/final_project_flappy_bird,542189334,Verilog,final_project_flappy_bird,10487,0,2022-09-27 16:47:22+00:00,[],None
122,https://github.com/Cyber-E-J/Pipeline_CPU_RISCV.git,2022-09-28 12:42:14+00:00,designing pipelined cpu supporting RISC-V RV32I Instructions with verilog,0,Cyber-E-J/Pipeline_CPU_RISCV,542584952,Verilog,Pipeline_CPU_RISCV,79,0,2022-10-10 13:47:02+00:00,[],None
123,https://github.com/NouranAbdelaziz/Caravel_chip_FPGA_validation.git,2022-09-28 13:33:05+00:00,,0,NouranAbdelaziz/Caravel_chip_FPGA_validation,542606838,Verilog,Caravel_chip_FPGA_validation,401,0,2022-09-28 15:14:12+00:00,[],None
124,https://github.com/kaushik397/DCDA-Yantra.git,2022-09-20 16:15:38+00:00,E Yantra comatition,0,kaushik397/DCDA-Yantra,539081161,Verilog,DCDA-Yantra,26347,0,2022-10-02 16:10:22+00:00,[],None
125,https://github.com/manavshah-28/fsm_sequence_detector.git,2022-09-23 16:24:18+00:00,,0,manavshah-28/fsm_sequence_detector,540525994,Verilog,fsm_sequence_detector,77,0,2023-08-11 11:13:23+00:00,[],None
126,https://github.com/siddhant21204/HDL_bits_solutions.git,2022-10-04 09:38:15+00:00,,0,siddhant21204/HDL_bits_solutions,545394427,Verilog,HDL_bits_solutions,0,0,2022-10-04 17:35:08+00:00,[],None
127,https://github.com/didikid3/Project-0-VerilogALU.git,2022-10-04 23:09:01+00:00,,0,didikid3/Project-0-VerilogALU,545749347,Verilog,Project-0-VerilogALU,6,0,2022-10-11 22:49:03+00:00,[],None
128,https://github.com/ngrieshop/Test_caravel.git,2022-09-20 15:51:52+00:00,,0,ngrieshop/Test_caravel,539071104,Verilog,Test_caravel,2229,0,2022-09-20 15:52:09+00:00,[],https://api.github.com/licenses/apache-2.0
129,https://github.com/3ab3at/Digital-Calculatorr.git,2022-09-19 12:53:45+00:00,,0,3ab3at/Digital-Calculatorr,538501249,Verilog,Digital-Calculatorr,10,0,2022-09-19 12:54:05+00:00,[],None
130,https://github.com/dinasmh/i2c_slave.git,2022-09-29 21:27:05+00:00,,0,dinasmh/i2c_slave,543325368,Verilog,i2c_slave,6,0,2022-09-29 21:27:14+00:00,[],None
131,https://github.com/Ravi-2345/8_BIT_MULTIPLIER.git,2022-09-29 19:50:56+00:00,This is a verilog code which takes two 8-bit binary numbers as input to give us the product in the binary form,0,Ravi-2345/8_BIT_MULTIPLIER,543294987,Verilog,8_BIT_MULTIPLIER,4,0,2022-09-29 20:37:35+00:00,[],None
132,https://github.com/JPval007/Finite_State_Machine.git,2022-10-02 22:02:41+00:00,,0,JPval007/Finite_State_Machine,544603875,Verilog,Finite_State_Machine,3597,0,2022-10-02 22:20:56+00:00,[],https://api.github.com/licenses/agpl-3.0
133,https://github.com/yangdachui/handshake-pipline.git,2022-09-17 01:16:48+00:00,,0,yangdachui/handshake-pipline,537665038,Verilog,handshake-pipline,2,0,2022-09-17 01:18:09+00:00,[],None
134,https://github.com/youngmit/led-panel.git,2022-09-24 17:47:48+00:00,FPGA led panel driver,0,youngmit/led-panel,540916847,Verilog,led-panel,17,0,2022-09-24 17:48:15+00:00,[],None
135,https://github.com/JeanDaBleaque/fpga_booth_algorithm_multiplier.git,2022-09-25 18:37:41+00:00,Booth Multiplier Algorithm,0,JeanDaBleaque/fpga_booth_algorithm_multiplier,541272397,Verilog,fpga_booth_algorithm_multiplier,1,0,2022-09-25 18:39:06+00:00,[],None
136,https://github.com/1660472575/AC620.git,2022-09-23 13:23:34+00:00,,0,1660472575/AC620,540450949,Verilog,AC620,121,0,2022-09-23 13:36:51+00:00,[],None
137,https://github.com/tonykim07/16-bit-FPGA-Processor.git,2022-09-30 18:30:18+00:00,An implementation of a 16-bit ARM processor on the DE1-SoC FPGA Board,0,tonykim07/16-bit-FPGA-Processor,543737360,Verilog,16-bit-FPGA-Processor,12,0,2023-08-22 04:33:12+00:00,[],None
138,https://github.com/chenchaiah952/Logarthmic_unit_using_CORDIC.git,2022-09-30 13:50:51+00:00,,0,chenchaiah952/Logarthmic_unit_using_CORDIC,543623957,Verilog,Logarthmic_unit_using_CORDIC,2,0,2022-09-30 13:52:34+00:00,[],None
139,https://github.com/Vidhi2604/Virtual_ATM_Machine.git,2022-10-01 10:52:59+00:00,,0,Vidhi2604/Virtual_ATM_Machine,543991695,Verilog,Virtual_ATM_Machine,1732,0,2022-10-01 11:02:00+00:00,[],None
140,https://github.com/shabbarvejlani/esim-mixed-signal-hackathon-using-sky130-2022.git,2022-10-01 19:38:21+00:00,,0,shabbarvejlani/esim-mixed-signal-hackathon-using-sky130-2022,544154227,Verilog,esim-mixed-signal-hackathon-using-sky130-2022,109076,0,2022-10-09 15:24:11+00:00,[],https://api.github.com/licenses/apache-2.0
141,https://github.com/Amrr10/FPGA-Calculator.git,2022-09-30 21:59:08+00:00,,0,Amrr10/FPGA-Calculator,543804715,Verilog,FPGA-Calculator,10,0,2022-09-30 22:07:47+00:00,[],None
142,https://github.com/Lastaapps/ctu-bi-aps.git,2022-09-30 21:58:07+00:00,,0,Lastaapps/ctu-bi-aps,543804462,Verilog,ctu-bi-aps,2962,0,2023-03-11 11:57:25+00:00,"['ctu', 'ctu-fit']",None
143,https://github.com/aza-atabayev/verilog-cpu.git,2022-10-03 11:57:56+00:00,Verilog implementations of various CPU architectures for RISC-V ISA.,0,aza-atabayev/verilog-cpu,544882532,Verilog,verilog-cpu,20,0,2022-10-03 12:12:31+00:00,[],None
144,https://github.com/HellRain57/FrameGenerator.git,2022-10-03 06:05:11+00:00,"This module is capable of working as a V_Sync/H_Sync camera, generating a video signal",0,HellRain57/FrameGenerator,544734026,Verilog,FrameGenerator,2,0,2022-10-03 06:05:27+00:00,[],None
145,https://github.com/Laaaag1/test.git,2022-10-04 14:24:25+00:00,,1,Laaaag1/test,545526622,Verilog,test,2,0,2022-10-06 14:20:47+00:00,[],None
146,https://github.com/unal-edigital2-labs/lab01-alu-grupo10.git,2022-09-28 21:57:56+00:00,lab01-alu-grupo10 created by GitHub Classroom,0,unal-edigital2-labs/lab01-alu-grupo10,542808384,Verilog,lab01-alu-grupo10,35,0,2022-09-28 21:58:02+00:00,[],None
147,https://github.com/johs2969/ECE_exp4.git,2022-09-23 23:52:27+00:00,서울시립대학교 전자전기컴퓨터공학부 전전설2 과목,0,johs2969/ECE_exp4,540653391,Verilog,ECE_exp4,4,0,2022-09-24 02:53:53+00:00,[],None
148,https://github.com/nishita-paul/RAM-ROM-design.git,2022-09-24 10:52:59+00:00,,0,nishita-paul/RAM-ROM-design,540797683,Verilog,RAM-ROM-design,13,0,2022-09-25 07:25:08+00:00,[],None
149,https://github.com/YunChianLee2001/XOR_gate_implementation.git,2022-09-19 12:39:28+00:00,,0,YunChianLee2001/XOR_gate_implementation,538495427,Verilog,XOR_gate_implementation,16,0,2022-09-19 12:40:58+00:00,[],None
150,https://github.com/mailmesalah/AESAlgorithm.git,2022-09-27 01:38:05+00:00,,0,mailmesalah/AESAlgorithm,541856282,Verilog,AESAlgorithm,66,0,2022-09-27 01:48:21+00:00,[],https://api.github.com/licenses/gpl-3.0
151,https://github.com/LeonidasxX/DSCO.git,2022-09-20 06:10:24+00:00,,0,LeonidasxX/DSCO,538835452,Verilog,DSCO,14,0,2022-10-04 05:25:52+00:00,[],None
152,https://github.com/AK16092003/VERILOG-HDL.git,2022-09-25 03:22:39+00:00,,0,AK16092003/VERILOG-HDL,541037718,Verilog,VERILOG-HDL,17,0,2022-10-05 07:47:21+00:00,[],None
153,https://github.com/sam10486/DIC_2021.git,2022-09-27 11:08:06+00:00,,0,sam10486/DIC_2021,542042040,Verilog,DIC_2021,4560,0,2022-09-27 11:34:23+00:00,[],None
154,https://github.com/robertoramirezdiaz/audio_visualizer.git,2022-09-27 19:43:55+00:00,Audio Waveform Visualizer for the Altera FPGA,0,robertoramirezdiaz/audio_visualizer,542261609,Verilog,audio_visualizer,1678,0,2022-09-27 20:00:04+00:00,[],None
155,https://github.com/Mishrasuyash14/Booth.git,2022-10-01 08:07:53+00:00,,0,Mishrasuyash14/Booth,543943985,Verilog,Booth,5,0,2022-10-01 13:53:25+00:00,[],None
156,https://github.com/seokNULL/NVDLA-Project.git,2022-09-22 09:07:25+00:00,Implementation of Nvidia Deep Learning Accelerator (NVDLA) full-system on ZynqMPSoC,3,seokNULL/NVDLA-Project,539892350,Verilog,NVDLA-Project,38091,0,2022-10-13 01:17:50+00:00,[],None
157,https://github.com/MMurphy98/Giraffe_ADC.git,2022-09-18 03:58:44+00:00,,0,MMurphy98/Giraffe_ADC,537994778,Verilog,Giraffe_ADC,36413,0,2023-05-21 15:55:56+00:00,[],None
158,https://github.com/Protect-Shell/RISC-V-Half.git,2022-09-22 07:28:17+00:00,This is small part of the RISC-V Processor. The whole RISC-V is under development.,0,Protect-Shell/RISC-V-Half,539853703,Verilog,RISC-V-Half,3,0,2022-09-23 16:47:04+00:00,[],None
159,https://github.com/zilin2000/ALU-in-Verilog.git,2022-09-22 07:40:02+00:00,Implement a 32-bit ALU in Verilog,0,zilin2000/ALU-in-Verilog,539857992,Verilog,ALU-in-Verilog,13,0,2022-09-22 07:46:00+00:00,[],None
160,https://github.com/shaolab1/DCP_test.git,2022-09-30 18:33:18+00:00,,0,shaolab1/DCP_test,543738692,Verilog,DCP_test,11765,0,2023-03-15 18:47:33+00:00,[],None
161,https://github.com/mtl2236/VLSI_auto_flow_max_frequency.git,2022-09-24 13:20:51+00:00,,0,mtl2236/VLSI_auto_flow_max_frequency,540836339,Verilog,VLSI_auto_flow_max_frequency,1870,0,2022-09-24 13:30:06+00:00,[],None
162,https://github.com/Kurazhi/simple-uart-receiver.git,2022-09-25 00:58:29+00:00,,0,Kurazhi/simple-uart-receiver,541011097,Verilog,simple-uart-receiver,60,0,2022-09-25 01:02:31+00:00,[],None
163,https://github.com/wulffern/sky130A.git,2022-09-28 13:33:35+00:00,"Subset of files for magic, netgen, ngspice and xschem",0,wulffern/sky130A,542607054,Verilog,sky130A,8135,0,2022-09-28 13:34:41+00:00,[],None
164,https://github.com/xcalcc/git_diff_tool.git,2022-09-28 09:58:41+00:00,,0,xcalcc/git_diff_tool,542521842,Verilog,git_diff_tool,98,0,2022-09-28 10:02:19+00:00,[],
165,https://github.com/Netam1313/Hamming_code.git,2022-09-30 13:27:15+00:00,Encoder and Decoder for Hamming Code Error Detection ,1,Netam1313/Hamming_code,543613502,Verilog,Hamming_code,71,0,2022-09-30 13:32:00+00:00,[],None
166,https://github.com/Arpit-Gupta-CS/verilog_labs.git,2022-09-29 17:07:33+00:00,,0,Arpit-Gupta-CS/verilog_labs,543234585,Verilog,verilog_labs,6,0,2022-09-29 17:45:41+00:00,[],None
167,https://github.com/Ravi-2345/IEEE_754_FLOATING_POINT_ADDER.git,2022-09-29 20:30:26+00:00,"This verilog code takes two Floating Point numbers , IEEE 754 standards and return its sum in the same standard.",0,Ravi-2345/IEEE_754_FLOATING_POINT_ADDER,543307974,Verilog,IEEE_754_FLOATING_POINT_ADDER,4,0,2022-09-29 20:31:05+00:00,[],None
168,https://github.com/jonathanO1/ECE_284_HW1.git,2022-10-04 17:24:50+00:00,,0,jonathanO1/ECE_284_HW1,545614708,Verilog,ECE_284_HW1,28,0,2022-10-04 17:33:09+00:00,[],None
169,https://github.com/GeorgeWu1204/Formula-1-Game-on-FPGA.git,2022-10-01 00:38:08+00:00,ELEC50009 Information Processing,0,GeorgeWu1204/Formula-1-Game-on-FPGA,543839849,Verilog,Formula-1-Game-on-FPGA,74861,0,2022-10-01 20:39:37+00:00,[],None
170,https://github.com/momoph46/RISC-CPU_v2.git,2022-09-30 14:15:43+00:00,,0,momoph46/RISC-CPU_v2,543634821,Verilog,RISC-CPU_v2,1717,0,2022-09-30 14:17:38+00:00,[],None
171,https://github.com/RaviMugidi/Learnings.git,2022-09-28 04:59:29+00:00,This Learnings repository includes  verilog codes for various digital designs and their corresponding testbenches. These designs verified using Xilinx ISE 14.7 tool. ,0,RaviMugidi/Learnings,542414439,Verilog,Learnings,59,0,2022-09-28 05:13:42+00:00,[],None
172,https://github.com/Albert-ga/modelsim_test1.git,2022-09-26 09:10:15+00:00,UART_TX_RX modelsim,0,Albert-ga/modelsim_test1,541498717,Verilog,modelsim_test1,3811,0,2022-09-26 09:13:13+00:00,[],None
173,https://github.com/shivpvtel/Five-Stage-Pipelined-CPU-Final-Project-Verilog.git,2022-09-21 22:40:32+00:00,,0,shivpvtel/Five-Stage-Pipelined-CPU-Final-Project-Verilog,539710035,Verilog,Five-Stage-Pipelined-CPU-Final-Project-Verilog,32,0,2022-09-21 23:23:38+00:00,[],None
174,https://github.com/PamVoy/Vivado_Verilog_Clock.git,2022-09-21 14:10:54+00:00,Digital clock with functions : 1.display time ( hour : minute : second ) 2.time calibration 3.alarm clock,0,PamVoy/Vivado_Verilog_Clock,539522731,Verilog,Vivado_Verilog_Clock,399,0,2022-09-21 15:14:00+00:00,[],None
175,https://github.com/hsa1155/DD_lab.git,2022-09-24 14:06:32+00:00,,0,hsa1155/DD_lab,540849568,Verilog,DD_lab,28740,0,2022-09-24 14:08:41+00:00,[],None
176,https://github.com/akash-iitg/FIFO.git,2022-09-25 07:18:02+00:00,I have done Verilog projects on FIFO Design and Hamming Encoder & decoder,0,akash-iitg/FIFO,541087689,Verilog,FIFO,5,0,2022-10-04 09:00:08+00:00,[],None
177,https://github.com/0616ygh/riosclass_template.git,2022-09-25 12:36:22+00:00,,13,0616ygh/riosclass_template,541166178,Verilog,riosclass_template,5534,0,2022-09-25 12:36:37+00:00,[],https://api.github.com/licenses/apache-2.0
178,https://github.com/poojad22/4x4-Matrix-Multiplication-using-Systolic-Array.git,2022-09-25 13:11:55+00:00,,0,poojad22/4x4-Matrix-Multiplication-using-Systolic-Array,541175673,Verilog,4x4-Matrix-Multiplication-using-Systolic-Array,3,0,2022-09-25 13:13:04+00:00,[],None
179,https://github.com/replica455/Booth_Multiplier_For_IITB_Hackathon.git,2022-09-27 19:18:30+00:00,,0,replica455/Booth_Multiplier_For_IITB_Hackathon,542252011,Verilog,Booth_Multiplier_For_IITB_Hackathon,18,0,2022-09-27 19:22:04+00:00,[],https://api.github.com/licenses/gpl-3.0
180,https://github.com/zouyingcao/minisys-1-cpu.git,2022-10-04 02:04:53+00:00,minisys-1 CPU 简单框架,0,zouyingcao/minisys-1-cpu,545227658,Verilog,minisys-1-cpu,2668,0,2023-04-07 08:37:34+00:00,[],None
181,https://github.com/Enting-Chen/Digital-Circuits.git,2022-10-02 07:45:35+00:00,,0,Enting-Chen/Digital-Circuits,544330383,Verilog,Digital-Circuits,634,0,2022-10-02 07:47:22+00:00,[],None
182,https://github.com/caiorochac/projetoSD2.git,2022-09-29 11:47:07+00:00,,0,caiorochac/projetoSD2,543092435,Verilog,projetoSD2,16237,0,2022-09-29 11:49:13+00:00,[],None
183,https://github.com/Mengyuan410/MIPS-CPU-Project.git,2022-10-01 17:50:11+00:00,,1,Mengyuan410/MIPS-CPU-Project,544121968,Verilog,MIPS-CPU-Project,1769,0,2022-10-01 18:11:54+00:00,[],None
184,https://github.com/hmasarani/PongGame_FPGA.git,2022-09-19 16:32:41+00:00,,0,hmasarani/PongGame_FPGA,538596116,Verilog,PongGame_FPGA,341,0,2022-09-19 16:35:45+00:00,[],None
185,https://github.com/YunChianLee2001/Sobel_Edge_Detection_Engine.git,2022-09-19 09:05:18+00:00,Final Project for Introduction to Digital IC Design Course.,0,YunChianLee2001/Sobel_Edge_Detection_Engine,538417958,Verilog,Sobel_Edge_Detection_Engine,1,0,2022-09-19 10:07:06+00:00,[],None
186,https://github.com/muhammadvip123/RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System.git,2022-09-18 09:43:41+00:00,It is responsible of receiving commands through UART receiver to do different system functions as register file reading/writing or doing some processing using ALU block and send result as well as CRC bits of result using 4 bytes frame through UART transmitter communication protocol.,0,muhammadvip123/RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System,538063144,Verilog,RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System,6,0,2022-09-18 09:50:40+00:00,[],None
187,https://github.com/paxcentauri/enhanced-processor.git,2022-09-20 01:36:57+00:00,,0,paxcentauri/enhanced-processor,538763773,Verilog,enhanced-processor,7,0,2022-09-20 23:48:25+00:00,[],None
188,https://github.com/ngrieshop/Test_caravel_user_project.git,2022-09-20 15:50:21+00:00,,0,ngrieshop/Test_caravel_user_project,539070419,Verilog,Test_caravel_user_project,45844,0,2022-09-20 15:50:34+00:00,[],https://api.github.com/licenses/apache-2.0
189,https://github.com/sina-negarandeh/mlp-artificial-neural-network.git,2022-09-21 17:58:30+00:00,Hardware implementation of a Multi-Layer Perceptron (MLP) Neural Network.,0,sina-negarandeh/mlp-artificial-neural-network,539619859,Verilog,mlp-artificial-neural-network,5737,0,2022-09-21 18:03:07+00:00,[],None
190,https://github.com/q550530/Verilog-train.git,2022-09-17 14:14:43+00:00,,0,q550530/Verilog-train,537829428,Verilog,Verilog-train,1725,0,2022-09-17 14:15:39+00:00,[],None
191,https://github.com/HayLahav/FPGA--I-O-interfaces-verilog--Vivado-.git,2022-09-17 18:13:36+00:00,implementation of  PS2 interface the design and test,0,HayLahav/FPGA--I-O-interfaces-verilog--Vivado-,537893333,Verilog,FPGA--I-O-interfaces-verilog--Vivado-,8256,0,2022-09-18 14:03:51+00:00,[],None
192,https://github.com/kenryu621/SP-22-CECS-341-Lab-5.git,2022-09-17 07:32:54+00:00,Lab 5 assignment from Spring 2022 CECS 341 Computer Architecture of CSULB,0,kenryu621/SP-22-CECS-341-Lab-5,537733760,Verilog,SP-22-CECS-341-Lab-5,9729,0,2022-09-17 10:19:14+00:00,[],None
193,https://github.com/nahin100/17-CSE4000-Verilog.git,2022-10-01 04:39:08+00:00,,0,nahin100/17-CSE4000-Verilog,543890461,Verilog,17-CSE4000-Verilog,13,0,2022-10-01 04:40:17+00:00,[],None
194,https://github.com/sebamas1/TP1_ARQUI.git,2022-09-21 03:08:17+00:00,,0,sebamas1/TP1_ARQUI,539282632,Verilog,TP1_ARQUI,1023,0,2022-09-21 18:05:56+00:00,[],None
195,https://github.com/Sethharrington/CircuitosDigitales2.git,2022-09-20 21:38:41+00:00,Un repositorio para guardar practicas y tareas.,0,Sethharrington/CircuitosDigitales2,539200790,Verilog,CircuitosDigitales2,3112,0,2022-09-20 22:18:49+00:00,[],None
196,https://github.com/yfnijm/Verilog-homework.git,2022-09-20 04:32:52+00:00,106下 NTHU數位邏輯設計,0,yfnijm/Verilog-homework,538809976,Verilog,Verilog-homework,12535,0,2022-09-20 04:36:46+00:00,[],None
197,https://github.com/Jagrathi231843/Blind-Spot-Monitoring-and-Notifying-System.git,2022-09-19 14:14:45+00:00,,0,Jagrathi231843/Blind-Spot-Monitoring-and-Notifying-System,538536419,Verilog,Blind-Spot-Monitoring-and-Notifying-System,547,0,2022-09-19 14:21:58+00:00,[],None
198,https://github.com/LucasBrazza/16_bits_processor.git,2022-10-01 19:00:49+00:00,,0,LucasBrazza/16_bits_processor,544143436,Verilog,16_bits_processor,151,0,2022-10-05 23:50:27+00:00,[],None
199,https://github.com/billylin14/flappybird.git,2022-10-04 05:52:02+00:00,,0,billylin14/flappybird,545299259,Verilog,flappybird,9362,0,2022-10-04 05:56:18+00:00,[],None
200,https://github.com/wpi-ece574-f22/ho-handshake.git,2022-09-28 20:06:02+00:00,,0,wpi-ece574-f22/ho-handshake,542773055,Verilog,ho-handshake,1,0,2022-09-28 20:13:01+00:00,[],None
201,https://github.com/lethiennamnguyen/CME433.git,2022-09-28 15:45:43+00:00,,0,lethiennamnguyen/CME433,542668014,Verilog,CME433,3134,0,2022-09-28 16:11:32+00:00,[],None
202,https://github.com/Niranjanprasad12/ECEA_HDLTP.git,2022-10-03 13:30:12+00:00,ECEA's HDL training program.....,0,Niranjanprasad12/ECEA_HDLTP,544925488,Verilog,ECEA_HDLTP,1336,0,2022-10-15 13:34:59+00:00,[],None
203,https://github.com/ting9266/Pipelined-CPU.git,2022-09-29 07:31:35+00:00,,0,ting9266/Pipelined-CPU,542981580,Verilog,Pipelined-CPU,341,0,2022-10-07 14:59:17+00:00,[],None
204,https://github.com/ChrisZonghaoLi/sky130_ldo.git,2022-09-30 20:07:16+00:00,,0,ChrisZonghaoLi/sky130_ldo,543771858,Verilog,sky130_ldo,95,0,2022-09-30 20:07:23+00:00,[],https://api.github.com/licenses/apache-2.0
205,https://github.com/skarr4616/Y86-Sequential-Processor.git,2022-10-03 21:43:25+00:00,,0,skarr4616/Y86-Sequential-Processor,545149279,Verilog,Y86-Sequential-Processor,149,0,2022-10-03 21:44:45+00:00,[],None
206,https://github.com/Mavioux/aes.git,2022-09-19 12:42:31+00:00,,0,Mavioux/aes,538496609,Verilog,aes,82,0,2022-10-01 12:43:02+00:00,[],https://api.github.com/licenses/mit
207,https://github.com/kuanyuchen123/MIPS-5-stage-pipeline.git,2022-09-27 18:46:37+00:00,,0,kuanyuchen123/MIPS-5-stage-pipeline,542239783,Verilog,MIPS-5-stage-pipeline,11,0,2023-04-29 08:22:46+00:00,[],None
208,https://github.com/royenheart/SimpleCPU.git,2022-09-27 12:56:38+00:00,"very simple experiment mips cpu, for homework",0,royenheart/SimpleCPU,542085054,Verilog,SimpleCPU,109797,0,2022-11-13 16:40:40+00:00,[],None
209,https://github.com/yalcinalp/Accumulator-with-Verilog.git,2022-09-27 23:39:42+00:00,Accumulator capable of executing instructions based on the Opcode-Value pairs with Verilog,0,yalcinalp/Accumulator-with-Verilog,542329645,Verilog,Accumulator-with-Verilog,2432,0,2022-09-27 23:40:18+00:00,[],https://api.github.com/licenses/mit
210,https://github.com/ZarckYa/Modelsim.git,2022-09-27 16:28:44+00:00,,0,ZarckYa/Modelsim,542183823,Verilog,Modelsim,23,0,2022-09-27 16:41:26+00:00,[],None
211,https://github.com/Adhi-cyber/100_RTL.git,2022-09-27 13:47:59+00:00,,0,Adhi-cyber/100_RTL,542108605,Verilog,100_RTL,160,0,2023-02-03 06:26:16+00:00,[],None
212,https://github.com/Jansansnss/NCKU-Cpu.git,2022-09-24 09:00:48+00:00,1092_計算機組織 COMPUTER ORGANIZATION,0,Jansansnss/NCKU-Cpu,540768614,Verilog,NCKU-Cpu,4520,0,2022-09-24 09:17:38+00:00,[],None
213,https://github.com/nishita-paul/Traffic-Light-Cont.git,2022-09-25 07:29:07+00:00,,0,nishita-paul/Traffic-Light-Cont,541090046,Verilog,Traffic-Light-Cont,1,0,2022-09-25 09:24:02+00:00,[],None
214,https://github.com/poojad22/Pipeline-Implementation-of-General-Purpose-Processor.git,2022-09-25 13:09:56+00:00,,0,poojad22/Pipeline-Implementation-of-General-Purpose-Processor,541175154,Verilog,Pipeline-Implementation-of-General-Purpose-Processor,3,0,2022-09-25 13:10:53+00:00,[],None
215,https://github.com/elecyss/A-study-project-of-RISC-V-CPU.git,2022-09-25 14:06:06+00:00,"An incomplete RISC-V CPU, include only: ADD, SUB, AND, OR, LW, SW, BEQ",0,elecyss/A-study-project-of-RISC-V-CPU,541191575,Verilog,A-study-project-of-RISC-V-CPU,18,0,2022-09-25 15:55:41+00:00,[],None
216,https://github.com/Janavind/mpw7.git,2022-09-22 13:37:29+00:00,,0,Janavind/mpw7,539999467,Verilog,mpw7,4085,0,2022-09-22 13:37:45+00:00,[],https://api.github.com/licenses/apache-2.0
217,https://github.com/WFedko/Calculator-FPGA.git,2022-09-25 16:59:04+00:00,,0,WFedko/Calculator-FPGA,541244813,Verilog,Calculator-FPGA,12,0,2022-09-25 17:00:24+00:00,[],None
218,https://github.com/wang59695487/Microprogramming-Processor.git,2022-09-25 01:29:05+00:00,,0,wang59695487/Microprogramming-Processor,541016504,Verilog,Microprogramming-Processor,124307,0,2022-09-25 01:31:43+00:00,[],https://api.github.com/licenses/agpl-3.0
219,https://github.com/GabrielB12/Processador.git,2022-10-02 23:00:11+00:00,"Processador desenvolvido em uma sequência de laboratórios da Universidade.  Compatível com o kit de desenvolvimento FPGA FPGA DE2-115, possuindo 32 bits de instrução.",0,GabrielB12/Processador,544617801,Verilog,Processador,17343,0,2024-04-01 14:45:48+00:00,[],None
220,https://github.com/alerner-6502/git_test.git,2022-09-27 15:29:56+00:00,,0,alerner-6502/git_test,542158389,Verilog,git_test,4,0,2022-09-27 15:43:02+00:00,[],None
221,https://github.com/harshal2030/eyrc22_SB_3320.git,2022-09-21 17:05:46+00:00,,0,harshal2030/eyrc22_SB_3320,539598620,Verilog,eyrc22_SB_3320,61959,0,2023-07-03 08:24:32+00:00,[],None
222,https://github.com/tjcoe/ECE_3710.git,2022-10-04 22:47:45+00:00,,1,tjcoe/ECE_3710,545743050,Verilog,ECE_3710,712,0,2022-10-25 22:48:35+00:00,[],None
223,https://github.com/Shreyas-borse/Dual-core-Architecture-Design-for-Natural-Language-Processing-NLP-Algorithm.git,2022-10-04 03:36:41+00:00,,0,Shreyas-borse/Dual-core-Architecture-Design-for-Natural-Language-Processing-NLP-Algorithm,545256570,Verilog,Dual-core-Architecture-Design-for-Natural-Language-Processing-NLP-Algorithm,3623,0,2022-10-04 04:41:42+00:00,[],None
224,https://github.com/Jo3Zhou/Asynchronou_FIFO.git,2022-09-30 13:56:04+00:00,,1,Jo3Zhou/Asynchronou_FIFO,543626291,Verilog,Asynchronou_FIFO,6,0,2022-09-30 14:02:00+00:00,[],None
225,https://github.com/Zombieattackr/efabTest.git,2022-10-02 19:54:18+00:00,test fork of efabless caravel user project,0,Zombieattackr/efabTest,544567848,Verilog,efabTest,45841,0,2022-10-02 19:54:33+00:00,[],https://api.github.com/licenses/apache-2.0
226,https://github.com/ashyuuu/EECS-31L.git,2022-10-01 16:18:55+00:00,,0,ashyuuu/EECS-31L,544092899,Verilog,EECS-31L,387,0,2022-10-01 16:22:20+00:00,[],None
227,https://github.com/rajesh0208/Elevator_system.git,2022-10-01 14:49:33+00:00,,0,rajesh0208/Elevator_system,544064068,Verilog,Elevator_system,4,0,2022-10-01 14:51:34+00:00,[],None
228,https://github.com/eajayreddy/design-of-hdl-based-32-bit-processor.git,2022-10-03 09:17:09+00:00,,0,eajayreddy/design-of-hdl-based-32-bit-processor,544813314,Verilog,design-of-hdl-based-32-bit-processor,17,0,2022-10-03 16:55:51+00:00,[],https://api.github.com/licenses/gpl-3.0
229,https://github.com/ananyagarg22/Arithematic-Logical-Unit-ALU-.git,2022-10-03 15:24:50+00:00,"Designed a 6-bit mini-ALU unit with functionality like ADD, SUB, XOR, CMP, and negation. Implemented in Verilog (Hardware Descriptive Language), tested and simulated in Vivado before implementing it on FPGA Basys 3 board.",0,ananyagarg22/Arithematic-Logical-Unit-ALU-,544984192,Verilog,Arithematic-Logical-Unit-ALU-,5605,0,2022-10-03 15:27:31+00:00,[],None
230,https://github.com/GenDiMeo/SSFPM.git,2022-09-20 14:07:19+00:00,,0,GenDiMeo/SSFPM,539021644,Verilog,SSFPM,8,0,2022-09-22 09:17:59+00:00,[],https://api.github.com/licenses/mit
231,https://github.com/Anshuman0029/Pushbutton.git,2022-09-18 08:21:45+00:00,,0,Anshuman0029/Pushbutton,538044797,Verilog,Pushbutton,0,0,2022-09-18 08:23:39+00:00,[],None
232,https://github.com/ipgtestrepos/ipY.git,2022-09-18 15:21:18+00:00,test flow,0,ipgtestrepos/ipY,538150820,Verilog,ipY,62,0,2022-09-18 15:54:42+00:00,[],None
233,https://github.com/Perumaltuty/Task-and-Function.git,2022-09-17 05:28:08+00:00,,0,Perumaltuty/Task-and-Function,537708323,Verilog,Task-and-Function,1,0,2022-09-17 05:33:51+00:00,[],None
234,https://github.com/GouriVarma/verilog.git,2022-09-26 13:03:00+00:00,,0,GouriVarma/verilog,541589801,Verilog,verilog,21,0,2022-10-14 14:53:57+00:00,[],None
235,https://github.com/cfiraguston/CPUGarage.git,2022-09-25 19:19:05+00:00,CPU Garage,0,cfiraguston/CPUGarage,541283743,Verilog,CPUGarage,25,0,2022-09-25 19:35:56+00:00,[],None
236,https://github.com/poojad22/Booth_multiplier.git,2022-09-25 13:04:13+00:00,,0,poojad22/Booth_multiplier,541173570,Verilog,Booth_multiplier,2,0,2022-09-25 13:07:35+00:00,[],None
237,https://github.com/q86865511/FSM.git,2022-09-25 13:10:52+00:00,利用有限狀態機的方法模擬出車站的自動售票販賣機,0,q86865511/FSM,541175416,Verilog,FSM,7,0,2022-09-25 13:13:46+00:00,[],None
238,https://github.com/wpi-ece574-f22/solve-ho-handshake.git,2022-09-28 20:06:43+00:00,,0,wpi-ece574-f22/solve-ho-handshake,542773281,Verilog,solve-ho-handshake,2,0,2022-09-29 16:03:48+00:00,[],None
239,https://github.com/ECEahnbin/ECE_exp5.git,2022-09-29 01:42:08+00:00,서울시립대 전전설2,0,ECEahnbin/ECE_exp5,542867891,Verilog,ECE_exp5,3,0,2022-09-29 08:40:38+00:00,[],None
240,https://github.com/mariov24/carvel_walkthrough.git,2022-09-29 05:27:07+00:00,,0,mariov24/carvel_walkthrough,542935141,Verilog,carvel_walkthrough,2602,0,2022-09-29 05:27:20+00:00,[],https://api.github.com/licenses/apache-2.0
241,https://github.com/ushikawa93/signal_processing_fpga.git,2022-09-29 18:10:33+00:00,Modelo para procesamiento de señales en FPGAs de Intel/Altera,0,ushikawa93/signal_processing_fpga,543259745,Verilog,signal_processing_fpga,51180,0,2022-09-29 18:14:33+00:00,[],https://api.github.com/licenses/mit
242,https://github.com/cap-oglu/theCoreburningInMyHeart.git,2022-09-18 18:24:50+00:00,,0,cap-oglu/theCoreburningInMyHeart,538201950,Verilog,theCoreburningInMyHeart,7,0,2022-11-07 16:54:33+00:00,[],None
243,https://github.com/shuntowski/iota-biosciences-technical.git,2022-09-18 20:25:40+00:00,The FPGA technical for Iota biosciences,0,shuntowski/iota-biosciences-technical,538232089,Verilog,iota-biosciences-technical,148,0,2022-09-18 20:27:32+00:00,[],None
244,https://github.com/hamidkhd/ARM-Processor.git,2022-09-19 10:03:13+00:00,ARM processor implementation using Verilog.,0,hamidkhd/ARM-Processor,538438958,Verilog,ARM-Processor,2981,0,2022-09-19 10:05:18+00:00,[],None
245,https://github.com/aaqdas/bresenham-fpga.git,2022-09-23 16:15:02+00:00,Verilog Implementation of Bresenham Circle Drawing Algorithm,0,aaqdas/bresenham-fpga,540522565,Verilog,bresenham-fpga,27,0,2022-09-23 16:25:29+00:00,"['bresenham-algorithm', 'de1-soc', 'fpga', 'verilog']",https://api.github.com/licenses/mit
246,https://github.com/Vikramyadv/SOIL-MONITORING-BOT.git,2022-09-23 21:24:16+00:00,Soil Monitoring Bot is a versatile substrate analyzer,0,Vikramyadv/SOIL-MONITORING-BOT,540621755,Verilog,SOIL-MONITORING-BOT,77625,0,2022-09-23 21:49:26+00:00,[],None
247,https://github.com/noemiabril/Arcade-Arkanoid_MiSTer-Arrow_SoCkit.git,2022-09-22 21:05:13+00:00,Arkanoid MiSTer for Arrow SoCkit,0,noemiabril/Arcade-Arkanoid_MiSTer-Arrow_SoCkit,540169479,Verilog,Arcade-Arkanoid_MiSTer-Arrow_SoCkit,1318,0,2022-09-22 21:05:21+00:00,[],None
248,https://github.com/amanbattan612/Verilog.git,2022-09-22 08:00:49+00:00,Verilog Modules of basic Electronic Circuits,0,amanbattan612/Verilog,539865750,Verilog,Verilog,25,0,2022-09-22 08:57:20+00:00,[],None
249,https://github.com/JadTaya/Controller-for-DNA-Based-Data-Storage.git,2022-09-23 19:15:21+00:00,,0,JadTaya/Controller-for-DNA-Based-Data-Storage,540584626,Verilog,Controller-for-DNA-Based-Data-Storage,2036,0,2022-09-23 19:22:29+00:00,[],None
250,https://github.com/YunChianLee2001/POS_conversion.git,2022-09-19 12:53:55+00:00,,0,YunChianLee2001/POS_conversion,538501325,Verilog,POS_conversion,17,0,2022-09-19 12:54:27+00:00,[],None
251,https://github.com/YunChianLee2001/SOP_conversion.git,2022-09-19 12:47:15+00:00,,0,YunChianLee2001/SOP_conversion,538498485,Verilog,SOP_conversion,25,0,2022-09-19 12:48:45+00:00,[],None
252,https://github.com/YunChianLee2001/AND_gate_implementation.git,2022-09-19 12:22:38+00:00,,0,YunChianLee2001/AND_gate_implementation,538488668,Verilog,AND_gate_implementation,19,0,2022-09-19 12:23:44+00:00,[],None
253,https://github.com/HannahGhassabyte/Processor.git,2022-09-30 23:19:14+00:00,,0,HannahGhassabyte/Processor,543823275,Verilog,Processor,799,0,2022-09-30 23:23:31+00:00,[],None
254,https://github.com/adityaraj543210/IEEE754_MUL_VERILOG.git,2022-09-29 22:05:50+00:00,This verilog code will take two IEEE 754 floating point number and return the product in the IEEE 754 floating point format.,0,adityaraj543210/IEEE754_MUL_VERILOG,543335816,Verilog,IEEE754_MUL_VERILOG,2,0,2022-09-29 22:06:34+00:00,[],None
255,https://github.com/Pei-Hsin-Huang/ticket.git,2022-09-29 15:13:12+00:00,,0,Pei-Hsin-Huang/ticket,543187412,Verilog,ticket,102,0,2022-09-29 15:13:21+00:00,[],None
256,https://github.com/Harika2608/elevatorsys.git,2022-10-02 08:44:28+00:00,,0,Harika2608/elevatorsys,544347383,Verilog,elevatorsys,1,0,2022-10-04 11:00:55+00:00,[],None
257,https://github.com/Akash811998/FIFO-IMPLEMETNATION-ON-VERILOG.git,2022-10-02 18:44:08+00:00,,0,Akash811998/FIFO-IMPLEMETNATION-ON-VERILOG,544545978,Verilog,FIFO-IMPLEMETNATION-ON-VERILOG,10229,0,2022-10-02 18:47:58+00:00,[],None
258,https://github.com/JPval007/Nibbler.git,2022-10-02 21:12:49+00:00,,0,JPval007/Nibbler,544590588,Verilog,Nibbler,180,0,2022-10-02 21:50:15+00:00,[],https://api.github.com/licenses/agpl-3.0
259,https://github.com/grgy078033/2022-Computer-Organization.git,2022-09-29 03:20:03+00:00,2022 Computer Organization homework,0,grgy078033/2022-Computer-Organization,542896049,Verilog,2022-Computer-Organization,4169,0,2022-09-29 03:20:51+00:00,[],None
260,https://github.com/aalexff/contador0A59V2.git,2022-09-21 04:12:12+00:00,Contador de 0 a 59 en Verilog.,0,aalexff/contador0A59V2,539299519,Verilog,contador0A59V2,11,0,2022-09-21 04:12:18+00:00,[],None
261,https://github.com/shivpvtel/Unsigned-Binary-Division-Restoring-Algorithm-Verilog.git,2022-09-21 14:52:28+00:00,,0,shivpvtel/Unsigned-Binary-Division-Restoring-Algorithm-Verilog,539542361,Verilog,Unsigned-Binary-Division-Restoring-Algorithm-Verilog,20,0,2022-09-21 15:55:33+00:00,[],None
262,https://github.com/robfinch/Video-Cores.git,2022-09-26 04:26:20+00:00,Contains an assortment of video cores,0,robfinch/Video-Cores,541406522,Verilog,Video-Cores,3504,0,2022-09-26 04:26:30+00:00,[],https://api.github.com/licenses/bsd-3-clause
263,https://github.com/hjeon2k/2022_GradPrj.git,2022-09-20 04:55:24+00:00,Graduation Project with BitBlade + NAND-net,0,hjeon2k/2022_GradPrj,538815592,Verilog,2022_GradPrj,35828,0,2022-12-20 12:52:48+00:00,[],https://api.github.com/licenses/mit
264,https://github.com/Akash811998/SOC-FPGA-DIGI_CLOCK.git,2022-09-19 20:40:09+00:00,"This code shows how to implement a Digital Clock on a Intel  Cyclone V SOC. The code is written on the FPGA part of the board. The IDE used is Quartus prime 20.1.1. In this example we use HEX displays, switches and keys to implement the digital clock. A load input is used which loads the custom load input value for the minutes and the hours counters. the initial load value for the seconds counter is 0",0,Akash811998/SOC-FPGA-DIGI_CLOCK,538689348,Verilog,SOC-FPGA-DIGI_CLOCK,16701,0,2022-09-19 21:27:45+00:00,[],None
265,https://github.com/JPaglia556/DE10-Lite-Game.git,2022-09-20 20:56:56+00:00,,0,JPaglia556/DE10-Lite-Game,539189263,Verilog,DE10-Lite-Game,11,0,2023-11-08 18:47:14+00:00,[],None
266,https://github.com/sam10486/VSD_2021.git,2022-09-27 11:11:52+00:00,,0,sam10486/VSD_2021,542043445,Verilog,VSD_2021,49723,0,2022-09-27 11:30:30+00:00,[],None
267,https://github.com/pranithkumar123/Quick-sort-algorithm.git,2022-09-27 05:53:34+00:00,Quick sort algorithm was implemented using verilog,0,pranithkumar123/Quick-sort-algorithm,541924548,Verilog,Quick-sort-algorithm,13,0,2022-11-06 11:38:47+00:00,[],None
268,https://github.com/wcy777/Design_and_Implementation_of_Arithmetic_Units.git,2022-09-26 13:29:35+00:00,,0,wcy777/Design_and_Implementation_of_Arithmetic_Units,541601753,Verilog,Design_and_Implementation_of_Arithmetic_Units,109,0,2022-10-19 11:39:07+00:00,[],None
269,https://github.com/centdollar/verilog.git,2022-09-26 19:33:33+00:00,a repo with all of my custom verilog code in it,0,centdollar/verilog,541752978,Verilog,verilog,16265,0,2022-10-04 01:07:57+00:00,[],None
270,https://github.com/wcy777/Convolution_Accelerator_for_VGG-16.git,2022-09-26 15:17:26+00:00,,0,wcy777/Convolution_Accelerator_for_VGG-16,541650589,Verilog,Convolution_Accelerator_for_VGG-16,1024,0,2022-10-19 11:38:36+00:00,[],None
271,https://github.com/prosperousZ/FunctionComputerOnFPGA.git,2022-09-27 00:37:20+00:00,"Our project set out to build a functional computer, capable of three basic types of I/O, glyph based output to a VGA monitor, PS/2 keyboard input, and read and write access to a storage block with a basic filesystem on it. Many compromises in complexity had to be made in order to finish the project, and these are discussed in the sections below. The goal of the entire system is to be able to read and write files, and for every program that is run on the system to be loaded onto the device as a file. That is to say that every program on the computer comes from the same place, and that is somewhat maliable in the sense that it can be reprogrammed fairly easily. The design of the system allows for a wide range of possibilities, and with some further improvement and more software written for the device, it would be possible for the device to reprogram itself. If a hex-based text editor were written and included on the filesystem that was capable of reading, editing in hexadecimal, and writing back files to the file system storage, then this machine would be completely reprogrammable. Not only could new programs be created, but existing programs could be edited, including the kernel itself.",0,prosperousZ/FunctionComputerOnFPGA,541840175,Verilog,FunctionComputerOnFPGA,7432,0,2022-09-27 01:10:16+00:00,[],None
272,https://github.com/PLUTO-SCY/PipeLine_CPU.git,2022-09-18 03:04:18+00:00,THUEE Project CPU using 5-stage pipeline,0,PLUTO-SCY/PipeLine_CPU,537985948,Verilog,PipeLine_CPU,1471,0,2022-09-18 03:06:37+00:00,[],https://api.github.com/licenses/mit
273,https://github.com/TingkaiLiu/Pikachu_RISC-V_CPU.git,2022-09-22 18:24:48+00:00,,0,TingkaiLiu/Pikachu_RISC-V_CPU,540116085,Verilog,Pikachu_RISC-V_CPU,5109,0,2022-09-23 01:44:41+00:00,[],None
274,https://github.com/Simran27971/Washing_machine_verilog_code.git,2022-10-01 06:33:25+00:00,,0,Simran27971/Washing_machine_verilog_code,543918556,Verilog,Washing_machine_verilog_code,1088,0,2022-11-12 11:25:33+00:00,[],https://api.github.com/licenses/apache-2.0
275,https://github.com/momoph46/Digital-IC-design.git,2022-09-30 06:00:00+00:00,,0,momoph46/Digital-IC-design,543451291,Verilog,Digital-IC-design,2795,0,2022-09-30 06:04:56+00:00,[],None
276,https://github.com/chenchaiah952/Biquad_filter.git,2022-09-30 13:32:58+00:00,,0,chenchaiah952/Biquad_filter,543616030,Verilog,Biquad_filter,1,0,2022-09-30 13:39:19+00:00,[],None
277,https://github.com/HellRain57/I2C_fpga.git,2022-10-03 05:54:26+00:00,"This project allows you to transfer data to the FPGA. The project presents the transmission module itself, without the Top-file and constraint",0,HellRain57/I2C_fpga,544730500,Verilog,I2C_fpga,7,0,2022-10-03 05:54:42+00:00,[],None
278,https://github.com/guptarohan6502/IPA-22_project-circuiteers.git,2022-10-04 19:55:25+00:00,,0,guptarohan6502/IPA-22_project-circuiteers,545681415,Verilog,IPA-22_project-circuiteers,9866,0,2022-10-04 19:57:26+00:00,[],None
279,https://github.com/Simrankumari97/systolic_aaray.git,2022-10-01 10:30:28+00:00,,0,Simrankumari97/systolic_aaray,543985201,Verilog,systolic_aaray,119,0,2022-10-03 07:12:05+00:00,[],None
280,https://github.com/vardhan100/booth_multiplication.git,2022-10-01 12:11:24+00:00,,0,vardhan100/booth_multiplication,544014266,Verilog,booth_multiplication,5,0,2022-10-01 12:13:05+00:00,[],None
281,https://github.com/LinoVelardita/Computer-Architecture-Exercises.git,2022-09-19 06:57:07+00:00,Exercises in Assembly language for computer architecture course,0,LinoVelardita/Computer-Architecture-Exercises,538372119,Verilog,Computer-Architecture-Exercises,9,0,2022-09-19 06:58:56+00:00,[],None
282,https://github.com/Pranavi-2001/Serial-Peripheral-Interface.git,2022-09-19 00:52:36+00:00,,0,Pranavi-2001/Serial-Peripheral-Interface,538283764,Verilog,Serial-Peripheral-Interface,1,0,2022-09-19 01:43:14+00:00,[],None
283,https://github.com/ahmedmadbouly186/verilog-SPI-simulation.git,2022-09-20 12:08:30+00:00,its an SPI simulation with one master and three slaves using verilog,0,ahmedmadbouly186/verilog-SPI-simulation,538969233,Verilog,verilog-SPI-simulation,1844,0,2022-09-20 12:11:27+00:00,[],None
284,https://github.com/rfeiglewicz/FPGA_equalizer.git,2022-09-20 17:47:27+00:00,Bachelor's thesis about sound equalizer in FPGA,0,rfeiglewicz/FPGA_equalizer,539119900,Verilog,FPGA_equalizer,7,0,2022-09-20 18:59:32+00:00,[],https://api.github.com/licenses/mit
285,https://github.com/joecha5/dlproyecto2.git,2022-09-20 21:18:41+00:00,Proyecto II: Introducción a diseño digital en HDL,0,joecha5/dlproyecto2,539195513,Verilog,dlproyecto2,43,0,2022-10-10 16:14:19+00:00,[],https://api.github.com/licenses/cc0-1.0
286,https://github.com/Hemanth432/Research-project-at-NIT-Warangal.git,2022-09-19 16:01:47+00:00,,0,Hemanth432/Research-project-at-NIT-Warangal,538583261,Verilog,Research-project-at-NIT-Warangal,584,0,2022-10-08 12:40:10+00:00,[],None
287,https://github.com/AndreKunavin/fpga_homeworks.git,2022-09-18 13:47:38+00:00,,0,AndreKunavin/fpga_homeworks,538123379,Verilog,fpga_homeworks,3437,0,2022-12-06 17:15:32+00:00,[],None
288,https://github.com/SyamSribalaji/Computer-Organisation-EE2003-Syam-SriBalaji-IITM.git,2022-09-17 13:31:13+00:00,,0,SyamSribalaji/Computer-Organisation-EE2003-Syam-SriBalaji-IITM,537817599,Verilog,Computer-Organisation-EE2003-Syam-SriBalaji-IITM,1056,0,2022-11-06 07:03:38+00:00,[],None
289,https://github.com/kmrinal19/CSN-221-Project.git,2022-09-17 17:21:06+00:00,,0,kmrinal19/CSN-221-Project,537880070,Verilog,CSN-221-Project,800,0,2022-10-23 16:59:23+00:00,[],None
290,https://github.com/dlimyh98/CG3207_Labs.git,2022-09-19 08:47:21+00:00,,0,dlimyh98/CG3207_Labs,538411182,Verilog,CG3207_Labs,1015,0,2023-09-09 03:23:58+00:00,[],None
291,https://github.com/Kelsier33/CS3710-GroupProject.git,2022-10-04 21:32:40+00:00,,2,Kelsier33/CS3710-GroupProject,545718382,Verilog,CS3710-GroupProject,2082,0,2022-10-04 21:48:26+00:00,[],None
292,https://github.com/SDragon1205/Computer-Organization.git,2022-10-01 14:51:05+00:00,計算機組織,0,SDragon1205/Computer-Organization,544064626,Verilog,Computer-Organization,19539,0,2022-10-01 14:53:44+00:00,[],None
293,https://github.com/Abhishek-R-18/ECEA_HDLTP.git,2022-10-02 18:38:50+00:00,,0,Abhishek-R-18/ECEA_HDLTP,544544208,Verilog,ECEA_HDLTP,1069,0,2022-10-14 14:14:46+00:00,[],None
294,https://github.com/MontMor4/projetoProcessador.git,2022-09-23 17:49:45+00:00,"Processador implementado na linguagem de descrição de hardware verilog HDL, com suporte a 8 instruções.",0,MontMor4/projetoProcessador,540556260,Verilog,projetoProcessador,20086,0,2022-09-23 17:51:16+00:00,[],None
295,https://github.com/joshua-d-thomas/EECE-235.git,2022-09-22 00:30:14+00:00,Code for EECE 235,0,joshua-d-thomas/EECE-235,539734604,Verilog,EECE-235,3,0,2022-09-22 00:53:00+00:00,[],None
296,https://github.com/0xLucca/ArqComputadoras-TP1.git,2022-09-28 13:45:15+00:00,,1,0xLucca/ArqComputadoras-TP1,542612404,Verilog,ArqComputadoras-TP1,2,0,2022-09-28 13:54:11+00:00,[],None
297,https://github.com/XieZeming0917/FPGA_Learn_Prj.git,2022-09-29 02:20:40+00:00,EP4CE10F;UART with Double RAM IP core;,0,XieZeming0917/FPGA_Learn_Prj,542879045,Verilog,FPGA_Learn_Prj,7,0,2022-09-29 02:41:56+00:00,['fpga'],None
298,https://github.com/gastonsartori/arq_com-tp1_alu.git,2022-09-29 01:41:20+00:00,,0,gastonsartori/arq_com-tp1_alu,542867683,Verilog,arq_com-tp1_alu,1,0,2022-09-29 01:45:22+00:00,[],None
299,https://github.com/wpi-ece574-f22/ex-expressions.git,2022-09-28 16:43:00+00:00,,0,wpi-ece574-f22/ex-expressions,542693047,Verilog,ex-expressions,4,0,2022-09-28 16:44:41+00:00,[],None
300,https://github.com/wiszeto/cpe233_lab1.git,2022-09-28 17:50:25+00:00,,0,wiszeto/cpe233_lab1,542720643,Verilog,cpe233_lab1,19,0,2022-09-30 20:46:18+00:00,[],None
301,https://github.com/ApurbaCD/Model_Sim.git,2022-09-25 06:37:03+00:00,1st assignment. ,0,ApurbaCD/Model_Sim,541077746,Verilog,Model_Sim,290,0,2023-08-24 04:50:04+00:00,[],None
302,https://github.com/MadejSzymon/de0nano_gsensor_spi.git,2022-09-21 21:01:49+00:00,G-Sensor Controller for DE0-Nano board,0,MadejSzymon/de0nano_gsensor_spi,539683602,Verilog,de0nano_gsensor_spi,116,0,2022-09-21 21:04:11+00:00,[],None
303,https://github.com/Ryuuba/risc-v-RV32I.git,2022-09-21 16:25:48+00:00,,0,Ryuuba/risc-v-RV32I,539582468,Verilog,risc-v-RV32I,68,0,2022-09-21 16:25:57+00:00,[],None
304,https://github.com/William-Wang-Chen/ECE385-Final-Project.git,2022-09-22 20:26:57+00:00,,0,William-Wang-Chen/ECE385-Final-Project,540157971,Verilog,ECE385-Final-Project,4150,0,2022-09-22 20:29:14+00:00,[],None
305,https://github.com/ucantjugglikeme/ce2-lab1.git,2022-09-24 17:26:39+00:00,Laboratory work #1,0,ucantjugglikeme/ce2-lab1,540910557,Verilog,ce2-lab1,6,0,2022-09-24 18:31:20+00:00,[],https://api.github.com/licenses/mit
306,https://github.com/CarolineXWL89/eecs151-fa22-lab2.git,2022-09-22 22:51:11+00:00,,0,CarolineXWL89/eecs151-fa22-lab2,540196751,Verilog,eecs151-fa22-lab2,942,0,2022-09-22 22:55:26+00:00,[],None
307,https://github.com/leehj24/Verilog.git,2022-09-26 04:45:44+00:00,,0,leehj24/Verilog,541410976,Verilog,Verilog,17872,0,2022-09-26 04:48:15+00:00,[],None
308,https://github.com/royenheart/SimulateI2C.git,2022-09-27 13:01:30+00:00,"very simple and silly implementation of I2C, just for homework",0,royenheart/SimulateI2C,542087210,Verilog,SimulateI2C,14,0,2022-09-27 13:05:07+00:00,[],None
309,https://github.com/hankpgc/FSM_vending_machine.git,2022-09-30 17:17:21+00:00,,0,hankpgc/FSM_vending_machine,543709353,Verilog,FSM_vending_machine,111,0,2022-09-30 17:17:49+00:00,[],None
310,https://github.com/plChao/digital-circuit-final-project.git,2022-10-03 11:45:47+00:00,,1,plChao/digital-circuit-final-project,544877193,Verilog,digital-circuit-final-project,18,0,2022-10-03 11:46:06+00:00,[],None
311,https://github.com/mgabryelski1/Arkanoid-game-Elbertv2-fpga.git,2022-10-02 12:47:55+00:00,,0,mgabryelski1/Arkanoid-game-Elbertv2-fpga,544423065,Verilog,Arkanoid-game-Elbertv2-fpga,518,0,2022-10-02 13:00:48+00:00,[],https://api.github.com/licenses/lgpl-2.1
312,https://github.com/Shivaganesh1998/Matrix-multiplication-using-FSM.git,2022-10-01 05:41:12+00:00,,0,Shivaganesh1998/Matrix-multiplication-using-FSM,543905424,Verilog,Matrix-multiplication-using-FSM,16,0,2022-10-03 05:48:38+00:00,[],https://api.github.com/licenses/gpl-3.0
313,https://github.com/SnowCharmQ/2022-Fall-Digital-Logic-Assignment.git,2022-10-01 12:58:19+00:00,The lab assignments for Digital Logic in 2022 fall,0,SnowCharmQ/2022-Fall-Digital-Logic-Assignment,544028351,Verilog,2022-Fall-Digital-Logic-Assignment,8,0,2022-12-10 03:59:54+00:00,[],None
314,https://github.com/enesharmankaya/QoS-FPGA.git,2022-09-30 20:40:52+00:00,Quality of Service and VGA Display Module Implementation on FPGA with Verilog HDL,0,enesharmankaya/QoS-FPGA,543782622,Verilog,QoS-FPGA,20,0,2022-09-30 21:03:19+00:00,[],https://api.github.com/licenses/mpl-2.0
315,https://github.com/akashverma1011/RAM_ROM.git,2022-10-01 09:46:46+00:00,,0,akashverma1011/RAM_ROM,543972715,Verilog,RAM_ROM,21,0,2022-10-01 09:48:05+00:00,[],https://api.github.com/licenses/gpl-3.0
316,https://github.com/pun49030/ECE253-labs.git,2022-09-30 05:04:02+00:00,Lab code in verilog and ARM Assembly for ECE253 labs,0,pun49030/ECE253-labs,543437324,Verilog,ECE253-labs,2967,0,2022-09-30 05:11:37+00:00,[],None
317,https://github.com/Cathy-DYX/MIPS-CPU.git,2022-09-20 08:34:58+00:00,,0,Cathy-DYX/MIPS-CPU,538886868,Verilog,MIPS-CPU,1016,0,2022-09-20 08:37:05+00:00,[],None
318,https://github.com/siimnzou/FPGA_Neuron_Network.git,2022-09-18 07:47:50+00:00,,0,siimnzou/FPGA_Neuron_Network,538037754,Verilog,FPGA_Neuron_Network,59789,0,2023-08-30 22:57:49+00:00,[],None
319,https://github.com/shehab2020556/full-digital-system-design.git,2022-09-18 21:10:44+00:00,,0,shehab2020556/full-digital-system-design,538242153,Verilog,full-digital-system-design,11,0,2022-09-18 21:33:35+00:00,[],None
320,https://github.com/LongHoGit/my_riscv.git,2022-09-19 13:38:55+00:00,This is my internship project in Lab IC Design - Ho Chi Minh University of Technology,0,LongHoGit/my_riscv,538520732,Verilog,my_riscv,9,0,2022-09-19 13:40:41+00:00,[],None
321,https://github.com/jineeth-2002/Floating_point_adder.git,2022-09-18 17:27:58+00:00,,0,jineeth-2002/Floating_point_adder,538186203,Verilog,Floating_point_adder,23,0,2022-09-20 16:37:45+00:00,[],None
322,https://github.com/ShuChenLin/logic_design.git,2022-09-24 11:15:31+00:00,a place for me to put my logic_design homework,0,ShuChenLin/logic_design,540803347,Verilog,logic_design,41437,0,2023-03-08 05:41:09+00:00,[],None
323,https://github.com/mailmesalah/FLC.git,2022-09-27 05:25:03+00:00,,0,mailmesalah/FLC,541916391,Verilog,FLC,122,0,2022-09-27 05:25:36+00:00,[],https://api.github.com/licenses/gpl-3.0
324,https://github.com/mailmesalah/UART.git,2022-09-27 14:00:53+00:00,,0,mailmesalah/UART,542114780,Verilog,UART,19,0,2022-09-27 14:01:42+00:00,[],https://api.github.com/licenses/gpl-3.0
325,https://github.com/luophoe/Verilog-projects.git,2022-09-22 21:32:48+00:00,,0,luophoe/Verilog-projects,540177271,Verilog,Verilog-projects,305,0,2022-09-24 18:48:12+00:00,[],None
326,https://github.com/sadmanca/ece241-verilog-snippets.git,2022-09-24 22:27:01+00:00,,0,sadmanca/ece241-verilog-snippets,540983828,Verilog,ece241-verilog-snippets,644,0,2022-09-24 22:30:09+00:00,[],None
327,https://github.com/happaaa/ce6310project.git,2022-09-25 18:34:14+00:00,CE 6310 Project: FANCI Implmentation,0,happaaa/ce6310project,541271409,Verilog,ce6310project,165544,0,2022-11-18 02:22:00+00:00,[],https://api.github.com/licenses/gpl-3.0
328,https://github.com/Chinnaiah21/FIFO.git,2022-09-26 05:21:20+00:00,It is useful for computing algorithms,0,Chinnaiah21/FIFO,541419861,Verilog,FIFO,1,0,2022-09-26 05:23:40+00:00,[],None
329,https://github.com/mo-hosni/gpio_control_block.git,2022-09-26 12:21:04+00:00,Implementation of the gpio_control_block for Caravel,0,mo-hosni/gpio_control_block,541571754,Verilog,gpio_control_block,4898,0,2022-09-26 12:26:02+00:00,[],None
330,https://github.com/repyt-margorp/verilog.git,2022-10-02 17:05:22+00:00,,0,repyt-margorp/verilog,544512340,Verilog,verilog,4,0,2022-10-02 17:11:03+00:00,[],None
331,https://github.com/BYee7127/VerilogCalculator.git,2022-10-02 21:58:58+00:00,,0,BYee7127/VerilogCalculator,544602958,Verilog,VerilogCalculator,26492,0,2022-10-30 22:15:04+00:00,[],None
332,https://github.com/aftermaaath/logic_design_lab.git,2022-09-27 07:41:09+00:00,,0,aftermaaath/logic_design_lab,541962388,Verilog,logic_design_lab,23733,0,2023-12-12 05:06:54+00:00,[],None
333,https://github.com/Ravi-2345/IEEE_754_FLOATING_POINT_MULTIPLIER.git,2022-09-29 20:34:26+00:00,This verilog module takes two IEEE 754 standard Floating point numbers and return their product in the same standard.,0,Ravi-2345/IEEE_754_FLOATING_POINT_MULTIPLIER,543309335,Verilog,IEEE_754_FLOATING_POINT_MULTIPLIER,3,0,2024-02-20 23:22:56+00:00,[],None
334,https://github.com/RanaElGahawy/Vending-Machine.git,2022-09-19 00:40:22+00:00,,0,RanaElGahawy/Vending-Machine,538281392,Verilog,Vending-Machine,656,0,2022-10-11 08:56:50+00:00,[],None
335,https://github.com/ccl19/Medusa_IO.git,2022-09-20 06:32:25+00:00,,0,ccl19/Medusa_IO,538842614,Verilog,Medusa_IO,74645,0,2022-09-20 06:32:43+00:00,[],None
336,https://github.com/Quercussi/261210proj.git,2022-10-03 14:45:03+00:00,,0,Quercussi/261210proj,544963880,Verilog,261210proj,123,0,2022-10-08 05:23:06+00:00,[],None
337,https://github.com/YoniP31/Pipelined-processor.git,2022-09-21 07:52:58+00:00,This is a 5-stage pipelined processor,0,YoniP31/Pipelined-processor,539369888,Verilog,Pipelined-processor,210,0,2022-09-21 08:05:39+00:00,[],None
338,https://github.com/kgarima1234/Data-Transfer-between-two-SRAMs-of-different-sizes.git,2022-09-25 17:16:46+00:00,,0,kgarima1234/Data-Transfer-between-two-SRAMs-of-different-sizes,541249646,Verilog,Data-Transfer-between-two-SRAMs-of-different-sizes,11,0,2022-10-01 10:55:53+00:00,[],None
339,https://github.com/kaursim722/FrogFrenzy.git,2022-09-20 19:09:37+00:00,,0,kaursim722/FrogFrenzy,539151958,Verilog,FrogFrenzy,2070,0,2023-09-14 00:06:05+00:00,[],None
340,https://github.com/Pierre120/CSARCH1_HDLProject1.git,2022-09-21 04:34:57+00:00,Hardware Desciption Language machine project for CSARCH1 Term 2 AY2021-2022 ,0,Pierre120/CSARCH1_HDLProject1,539305568,Verilog,CSARCH1_HDLProject1,29,0,2022-09-21 04:41:49+00:00,[],None
341,https://github.com/cornell-ece4750/ece4750-sec05-bug-hunt.git,2022-09-21 03:58:53+00:00,ECE 4750 Section 5: Bug Hunt,2,cornell-ece4750/ece4750-sec05-bug-hunt,539295893,Verilog,ece4750-sec05-bug-hunt,107,0,2022-09-23 18:20:08+00:00,[],None
342,https://github.com/Nguyenthehuy1/huy_riscv.git,2022-09-20 16:01:48+00:00,,0,Nguyenthehuy1/huy_riscv,539075439,Verilog,huy_riscv,15,0,2022-09-21 01:21:09+00:00,[],None
343,https://github.com/shashankgoud001/SEM5.git,2022-09-21 08:21:38+00:00,,0,shashankgoud001/SEM5,539380481,Verilog,SEM5,53584,0,2022-11-11 06:24:32+00:00,[],None
344,https://github.com/dhillirajesh/Traffic-light-control-system.git,2022-09-21 17:30:08+00:00,,0,dhillirajesh/Traffic-light-control-system,539608267,Verilog,Traffic-light-control-system,2,0,2022-09-23 09:24:56+00:00,[],None
345,https://github.com/LautaroVeliz/ArquitecturaDeComputadoras_TP1.git,2022-09-21 18:08:23+00:00,,0,LautaroVeliz/ArquitecturaDeComputadoras_TP1,539623694,Verilog,ArquitecturaDeComputadoras_TP1,1,0,2022-09-21 18:12:02+00:00,[],None
346,https://github.com/Kowareta993/mig-ddr-controller.git,2022-09-25 10:22:03+00:00,DDR controller ip core for MIG FPGA (not synthesizable),0,Kowareta993/mig-ddr-controller,541132717,Verilog,mig-ddr-controller,43253,0,2022-10-06 14:28:31+00:00,[],None
347,https://github.com/xuzhiqiaoniubi/test.git,2022-10-04 14:48:36+00:00,,0,xuzhiqiaoniubi/test,545539686,Verilog,test,74,0,2023-05-29 12:37:05+00:00,[],https://api.github.com/licenses/gpl-3.0
348,https://github.com/juanignava/Embebidos.Proyecto2.git,2022-09-29 05:14:22+00:00,Alarm clock SoC minimum design,0,juanignava/Embebidos.Proyecto2,542931165,Verilog,Embebidos.Proyecto2,104813,0,2022-09-30 19:36:09+00:00,[],None
349,https://github.com/vikas-4402/Elevator_System.git,2022-10-02 05:22:14+00:00,,0,vikas-4402/Elevator_System,544291177,Verilog,Elevator_System,2,0,2022-10-02 05:23:50+00:00,[],None
350,https://github.com/Shing227/boxing.git,2022-10-04 19:22:26+00:00,數位邏輯設計實習FPGA,0,Shing227/boxing,545667394,Verilog,boxing,4459,0,2022-10-04 19:25:48+00:00,[],None
351,https://github.com/jaden81699/CS-385.git,2022-10-01 01:05:54+00:00,Contains code for semester project,0,jaden81699/CS-385,543845229,Verilog,CS-385,30,0,2022-10-03 05:06:52+00:00,[],None
352,https://github.com/REV623/logic.git,2022-09-30 16:11:53+00:00,,0,REV623/logic,543683862,Verilog,logic,29049,0,2022-09-30 16:16:39+00:00,[],None
353,https://github.com/Dawn-seagull/CA-Team-Project.git,2022-10-03 04:29:37+00:00,,1,Dawn-seagull/CA-Team-Project,544704140,Verilog,CA-Team-Project,15,0,2022-10-09 15:06:32+00:00,[],None
354,https://github.com/LAVANYA-ramkumar/Design-of-Buck-Boost-Converter-using-esim.git,2022-10-03 07:21:51+00:00,,0,LAVANYA-ramkumar/Design-of-Buck-Boost-Converter-using-esim,544764461,Verilog,Design-of-Buck-Boost-Converter-using-esim,13,0,2022-10-08 09:07:26+00:00,[],None
355,https://github.com/IObundle/iob-pcie.git,2022-09-29 22:12:57+00:00,,1,IObundle/iob-pcie,543337576,Verilog,iob-pcie,43,0,2022-10-17 09:04:16+00:00,[],None
356,https://github.com/adityaraj543210/IEEE754_ADD_VER.git,2022-09-29 21:55:52+00:00,This verilog code add two IEEE754 floating number and return the resultant IEEE 754 floating point number.,0,adityaraj543210/IEEE754_ADD_VER,543333330,Verilog,IEEE754_ADD_VER,2,0,2022-09-29 21:57:07+00:00,[],None
357,https://github.com/mailmesalah/RISC16BitProcessor.git,2022-09-27 13:04:27+00:00,,0,mailmesalah/RISC16BitProcessor,542088554,Verilog,RISC16BitProcessor,20,0,2022-09-27 13:04:55+00:00,[],https://api.github.com/licenses/gpl-3.0
358,https://github.com/efabless/caravel_mgmt_soc_gf180mcu.git,2022-10-03 22:38:58+00:00,"This repository is the GF180MCU port of management core for Caravel.  For more information about the Caravel management SoC, see https://github.com/efabless/caravel_mgmt_soc_litex.",2,efabless/caravel_mgmt_soc_gf180mcu,545166594,Verilog,caravel_mgmt_soc_gf180mcu,48176,0,2022-12-19 16:28:34+00:00,[],https://api.github.com/licenses/apache-2.0
359,https://github.com/fthbaskin/comporg_fthbaskin.git,2022-09-26 16:13:39+00:00,ITU Computer Engineering BLG 222E Computer Organization CPU project.,0,fthbaskin/comporg_fthbaskin,541674508,Verilog,comporg_fthbaskin,539,0,2023-12-26 06:32:28+00:00,[],None
360,https://github.com/robfinch/Memory-Cores.git,2022-09-26 13:48:46+00:00,An assortment of memory cores used in other projects,0,robfinch/Memory-Cores,541610514,Verilog,Memory-Cores,1046,0,2022-09-26 13:48:53+00:00,[],None
361,https://github.com/aadithya-hrao/Verilog.git,2022-10-02 04:38:33+00:00,,0,aadithya-hrao/Verilog,544280011,Verilog,Verilog,1147,0,2022-10-02 04:38:56+00:00,[],None
362,https://github.com/mhdr3a/multicycle-stackbased-processor-design.git,2022-09-30 18:10:08+00:00,,0,mhdr3a/multicycle-stackbased-processor-design,543729822,Verilog,multicycle-stackbased-processor-design,3,0,2022-09-30 18:10:44+00:00,[],None
363,https://github.com/Netam1313/Synchronous_and_Asynchronous_FIFO.git,2022-09-30 14:07:19+00:00,– Synchronous FIFO with common clock input for read and write operation and Asynchronous FIFO with two different clock input for read and write operation achieved using gray pointer.,0,Netam1313/Synchronous_and_Asynchronous_FIFO,543631238,Verilog,Synchronous_and_Asynchronous_FIFO,92,0,2022-09-30 14:24:26+00:00,[],None
364,https://github.com/hankpgc/5-stage_MIPS-lite-pipelined-CPU.git,2022-09-30 17:10:16+00:00,,0,hankpgc/5-stage_MIPS-lite-pipelined-CPU,543706830,Verilog,5-stage_MIPS-lite-pipelined-CPU,881,0,2022-09-30 17:11:38+00:00,[],None
365,https://github.com/Alexanderia-Mike/CPU-Design.git,2022-09-30 16:15:32+00:00,,0,Alexanderia-Mike/CPU-Design,543685236,Verilog,CPU-Design,1484,0,2022-09-30 16:17:07+00:00,[],None
366,https://github.com/haiyin0922/digital-logic-design.git,2022-09-23 14:13:23+00:00,,0,haiyin0922/digital-logic-design,540472724,Verilog,digital-logic-design,24063,0,2022-09-23 14:15:04+00:00,[],None
367,https://github.com/noemiabril/TSConf_MiSTer-Arrow_SoCKit.git,2022-09-22 20:42:23+00:00,TSConf / ZXevo for Arrow SoCkit,0,noemiabril/TSConf_MiSTer-Arrow_SoCKit,540162737,Verilog,TSConf_MiSTer-Arrow_SoCKit,2145,0,2022-09-22 20:46:32+00:00,[],None
368,https://github.com/Abdo99-alt/fpu.git,2022-09-23 04:16:37+00:00,,0,Abdo99-alt/fpu,540274987,Verilog,fpu,10,0,2022-09-23 04:18:12+00:00,[],https://api.github.com/licenses/mit
369,https://github.com/basaro/AIEDGE6.git,2022-09-28 10:00:06+00:00,,0,basaro/AIEDGE6,542522373,Verilog,AIEDGE6,68,0,2022-10-02 01:20:00+00:00,[],https://api.github.com/licenses/mit
370,https://github.com/Pei-Hsin-Huang/pipelined-cpu.git,2022-09-29 14:32:24+00:00,,0,Pei-Hsin-Huang/pipelined-cpu,543169224,Verilog,pipelined-cpu,1816,0,2022-09-29 14:32:45+00:00,[],None
371,https://github.com/Ashutosh-Rao/Mixed-Signal-FSM-Sequence-Detector.git,2022-09-29 17:41:10+00:00,Mixed signal circuit implemented as a part of the Mixed Signal SoC Design Hackathon by IIT Bombay and Google,0,Ashutosh-Rao/Mixed-Signal-FSM-Sequence-Detector,543248060,Verilog,Mixed-Signal-FSM-Sequence-Detector,495,0,2022-09-30 05:54:13+00:00,[],None
372,https://github.com/jogeshsingh/Controlling-WS2812b-Addressable-LEDs-using-ARTIX-A7-FPGA-.git,2022-09-29 17:28:07+00:00,This Project involves controlling of WS2812b LED Strips using FPGA . ,0,jogeshsingh/Controlling-WS2812b-Addressable-LEDs-using-ARTIX-A7-FPGA-,543242752,Verilog,Controlling-WS2812b-Addressable-LEDs-using-ARTIX-A7-FPGA-,50,0,2022-10-02 13:40:41+00:00,[],https://api.github.com/licenses/gpl-3.0
373,https://github.com/justajoke-1211/SquareRoot.git,2022-10-01 10:56:26+00:00,,0,justajoke-1211/SquareRoot,543992675,Verilog,SquareRoot,1,0,2022-10-01 11:02:41+00:00,[],None
374,https://github.com/GoWest279/Xilinx_MPSoC_Tutorial.git,2022-10-03 03:24:24+00:00,,0,GoWest279/Xilinx_MPSoC_Tutorial,544684780,Verilog,Xilinx_MPSoC_Tutorial,214,0,2022-10-13 02:17:33+00:00,[],None
375,https://github.com/ItaloAugustoSC/Pratica-1-LAOC-Cache-e-Memoria.git,2022-10-01 13:44:12+00:00,Implementação de uma cache L1 e memória principal no esquema de hierarquia inclusiva. A cache L1 é de 2 vias e a memória principal é diretamente mapeada. A atualização da memória principal ocorre utilizando a política de Write-Back.,0,ItaloAugustoSC/Pratica-1-LAOC-Cache-e-Memoria,544042239,Verilog,Pratica-1-LAOC-Cache-e-Memoria,2104,0,2022-10-01 13:47:20+00:00,[],None
376,https://github.com/Mishrasuyash14/SQRT.git,2022-10-01 08:39:13+00:00,,0,Mishrasuyash14/SQRT,543952993,Verilog,SQRT,3,0,2022-10-01 08:43:06+00:00,[],None
377,https://github.com/pviscone/MEG_TRG.git,2022-09-28 07:34:04+00:00,FPGA firmware module for the MEG experiment trigger 61 (Neutron generator calibration with beam on),0,pviscone/MEG_TRG,542464736,Verilog,MEG_TRG,496,0,2022-10-27 16:35:27+00:00,[],None
378,https://github.com/ahmed-khaled-saber/MIPS-Proccessor-Architecture.git,2022-09-20 09:52:59+00:00,Computer Architecture Emulator,0,ahmed-khaled-saber/MIPS-Proccessor-Architecture,538917193,Verilog,MIPS-Proccessor-Architecture,160,0,2022-09-20 12:09:42+00:00,[],None
379,https://github.com/p-m-a-w/super-4.git,2022-09-21 14:31:55+00:00,racing game,0,p-m-a-w/super-4,539532611,Verilog,super-4,11,0,2023-11-04 12:05:42+00:00,[],
380,https://github.com/mahmoudk07/AES-Encryption-Decryption.git,2022-09-19 01:39:05+00:00,,0,mahmoudk07/AES-Encryption-Decryption,538293433,Verilog,AES-Encryption-Decryption,590,0,2022-09-19 01:44:11+00:00,[],None
381,https://github.com/Nessmakandil/digital_design.git,2022-09-19 12:30:58+00:00,,0,Nessmakandil/digital_design,538491945,Verilog,digital_design,2890,0,2022-09-19 15:49:14+00:00,[],None
382,https://github.com/Virdhatchani/Vending-machine.git,2022-09-25 07:37:35+00:00,,0,Virdhatchani/Vending-machine,541091976,Verilog,Vending-machine,3,0,2022-09-25 07:45:19+00:00,[],None
383,https://github.com/KD-6712/Analysis-of-register-file-.git,2022-09-24 08:16:29+00:00,,0,KD-6712/Analysis-of-register-file-,540757582,Verilog,Analysis-of-register-file-,212,0,2022-09-24 08:29:00+00:00,[],None
384,https://github.com/b-gong/chess-nexys4.git,2022-09-26 09:08:48+00:00,A chess program in verilog that runs on Digilent Nexys 4 FPGA dev board. Displays through VGA and controls through on-board buttons.,0,b-gong/chess-nexys4,541498161,Verilog,chess-nexys4,13,0,2022-09-26 09:17:42+00:00,[],None
385,https://github.com/maha123m/ENCS2110-Digital-Electronics-and-Computer.git,2022-09-27 17:32:07+00:00,,0,maha123m/ENCS2110-Digital-Electronics-and-Computer,542210129,Verilog,ENCS2110-Digital-Electronics-and-Computer,2694,0,2022-09-27 17:34:52+00:00,[],None
386,https://github.com/openpowerwtf/OpenROAD-Tests.git,2022-09-22 12:57:21+00:00,,0,openpowerwtf/OpenROAD-Tests,539982543,Verilog,OpenROAD-Tests,15949,0,2022-10-19 02:41:59+00:00,[],None
387,https://github.com/Pl4y3rOn3/Projeto-MIPS_Arquitetura.git,2022-09-22 17:22:29+00:00,,0,Pl4y3rOn3/Projeto-MIPS_Arquitetura,540091977,Verilog,Projeto-MIPS_Arquitetura,12,0,2022-09-22 18:48:36+00:00,[],None
388,https://github.com/Balaji-200/CORDIC.git,2022-09-21 15:19:32+00:00,,0,Balaji-200/CORDIC,539554221,Verilog,CORDIC,1,0,2022-09-21 15:36:09+00:00,[],None
389,https://github.com/VanshitaGarg01/COA-Laboratory-CS39001.git,2022-10-03 17:37:24+00:00,Assignments for the Computer Organization And Architecture Laboratory - CS39001 course in the session Autumn 2021-22.,0,VanshitaGarg01/COA-Laboratory-CS39001,545048531,Verilog,COA-Laboratory-CS39001,20733,0,2022-10-03 17:54:34+00:00,[],None
390,https://github.com/Apostle-lemon/scpu.git,2022-09-18 09:52:37+00:00,ZJU 计算机系统 实现了自己的 CPU,0,Apostle-lemon/scpu,538065224,Verilog,scpu,12426,0,2023-03-26 05:26:46+00:00,[],None
391,https://github.com/brinnerdt/HeLLO-CTF.git,2022-09-19 23:09:50+00:00,,0,brinnerdt/HeLLO-CTF,538728871,Verilog,HeLLO-CTF,45270,0,2022-09-20 12:21:02+00:00,[],None
392,https://github.com/jineeth-2002/single-cycle-cpu.git,2022-09-20 13:42:07+00:00,,0,jineeth-2002/single-cycle-cpu,539009691,Verilog,single-cycle-cpu,2,0,2022-09-20 13:44:27+00:00,[],None
393,https://github.com/skyline9981/Computer-Organization.git,2022-09-20 13:24:36+00:00,,0,skyline9981/Computer-Organization,539001488,Verilog,Computer-Organization,3385,0,2022-09-20 13:34:07+00:00,[],None
394,https://github.com/nevikw39/LogicDesignLab.git,2022-09-22 09:55:03+00:00,EECS207001,0,nevikw39/LogicDesignLab,539911791,Verilog,LogicDesignLab,15340,0,2023-01-16 09:59:57+00:00,"['basys3', 'digital-logic-design', 'fpga', 'logic-design', 'verilog', 'digital-logic']",None
395,https://github.com/Barsha29/Traffic-Light-Controller.git,2022-09-22 10:12:22+00:00,Traffic light control unit can be designed as a synchronous sequential machine with finite number of states. Explicit finite state model is used to design the necessary coding for control system using Verilog.,0,Barsha29/Traffic-Light-Controller,539918393,Verilog,Traffic-Light-Controller,101,0,2022-09-22 10:24:22+00:00,[],None
396,https://github.com/AyushJam/Single-Cycle-CPU.git,2022-09-18 16:20:35+00:00,Assignment 3: EE2003 Computer Organization July-Nov (2022).,0,AyushJam/Single-Cycle-CPU,538167603,Verilog,Single-Cycle-CPU,25,0,2023-11-29 03:20:11+00:00,[],None
397,https://github.com/Nityanand310/Mixed_Signal.git,2022-09-30 18:57:23+00:00,,0,Nityanand310/Mixed_Signal,543747887,Verilog,Mixed_Signal,3854,0,2022-10-08 16:55:49+00:00,[],None
398,https://github.com/llirrikk/APS_Labs.git,2022-10-02 12:18:01+00:00,"Архитектуры процессорных систем, МИЭТ, 3 курс",0,llirrikk/APS_Labs,544413589,Verilog,APS_Labs,31981,0,2022-10-02 12:31:09+00:00,[],https://api.github.com/licenses/mit
399,https://github.com/ArmandoABD/lab0.git,2022-09-30 18:00:11+00:00,,0,ArmandoABD/lab0,543726090,Verilog,lab0,1,0,2022-09-30 18:07:24+00:00,[],None
400,https://github.com/mdaamirQ/Sine-Wave-Generator.git,2022-10-01 13:14:45+00:00,EE5811: FPGA Lab (Project),0,mdaamirQ/Sine-Wave-Generator,544033209,Verilog,Sine-Wave-Generator,9087,0,2022-10-01 14:12:45+00:00,[],None
401,https://github.com/r4lv/test-sign-expert-octo-carnival.git,2022-10-03 12:30:32+00:00,,0,r4lv/test-sign-expert-octo-carnival,544897701,Verilog,test-sign-expert-octo-carnival,3,0,2022-10-03 12:34:40+00:00,[],None
402,https://github.com/kenkey101/Lab3.git,2022-09-29 15:32:34+00:00,,0,kenkey101/Lab3,543195846,Verilog,Lab3,835,0,2022-09-29 15:34:44+00:00,[],None
403,https://github.com/m4ury4p/sta_opentimer.git,2022-09-20 06:21:31+00:00,Using Opentimer for timing analysis,0,m4ury4p/sta_opentimer,538839008,Verilog,sta_opentimer,676,0,2022-09-22 10:07:56+00:00,[],None
404,https://github.com/dnghia0305/verilogHDL-.git,2022-09-19 14:52:54+00:00,,0,dnghia0305/verilogHDL-,538553794,Verilog,verilogHDL-,152,0,2022-12-03 18:37:58+00:00,[],None
405,https://github.com/LucasLombardiCastro/Pratica-Sistemas-Digitais.git,2022-09-20 19:26:00+00:00,,0,LucasLombardiCastro/Pratica-Sistemas-Digitais,539157632,Verilog,Pratica-Sistemas-Digitais,7308,0,2022-09-20 20:18:23+00:00,[],None
406,https://github.com/EnesErcin/Single_Cycle_RISCV_Core.git,2022-09-27 08:02:42+00:00,Hardware implementation of single cycle RISC-V core and assembly verifications.,0,EnesErcin/Single_Cycle_RISCV_Core,541970394,Verilog,Single_Cycle_RISCV_Core,749,0,2023-03-03 15:51:18+00:00,[],None
407,https://github.com/wanderingnail/ic_learning.git,2022-09-27 08:08:12+00:00,,0,wanderingnail/ic_learning,541972504,Verilog,ic_learning,753,0,2022-10-02 11:38:30+00:00,[],None
408,https://github.com/ChipDesign/FAST_INTR_CPU.git,2022-09-28 09:05:56+00:00,,2,ChipDesign/FAST_INTR_CPU,542500402,Verilog,FAST_INTR_CPU,29125,0,2023-08-10 12:02:50+00:00,[],None
409,https://github.com/grgy078033/2020-Experience-on-Digital-System.git,2022-09-28 12:07:07+00:00,2020 Experience on Digital System lab & project,0,grgy078033/2020-Experience-on-Digital-System,542570631,Verilog,2020-Experience-on-Digital-System,459,0,2022-09-28 12:15:12+00:00,[],None
410,https://github.com/vardhan100/Floating_point_Adder.git,2022-09-28 12:22:50+00:00,,0,vardhan100/Floating_point_Adder,542576849,Verilog,Floating_point_Adder,257,0,2022-09-28 12:28:12+00:00,[],None
411,https://github.com/kapil924/Floating-Point-ALU.git,2022-09-28 08:41:04+00:00,,0,kapil924/Floating-Point-ALU,542490101,Verilog,Floating-Point-ALU,9,0,2022-09-28 08:42:40+00:00,[],None
412,https://github.com/mohammadsayeemsadathossain/Vending-Machine-Using-Verilog-HDL-with-RTL-Diagram.git,2022-09-17 16:15:24+00:00,,0,mohammadsayeemsadathossain/Vending-Machine-Using-Verilog-HDL-with-RTL-Diagram,537862818,Verilog,Vending-Machine-Using-Verilog-HDL-with-RTL-Diagram,129,0,2022-09-17 16:26:49+00:00,[],None
413,https://github.com/ScottyB55/NCSUwork.git,2022-09-24 19:13:18+00:00,,0,ScottyB55/NCSUwork,540940289,Verilog,NCSUwork,2341,0,2022-09-24 19:18:38+00:00,[],None
414,https://github.com/wang59695487/super_mario.git,2022-09-25 04:21:33+00:00,,0,wang59695487/super_mario,541048553,Verilog,super_mario,59477,0,2022-09-25 04:22:50+00:00,[],None
415,https://github.com/JenFuChen/NKUST_Digital_System_Design_110.git,2022-09-22 08:23:24+00:00,,0,JenFuChen/NKUST_Digital_System_Design_110,539874484,Verilog,NKUST_Digital_System_Design_110,112229,0,2022-09-23 03:34:35+00:00,[],https://api.github.com/licenses/mit
416,https://github.com/adityaraj543210/8_BIT_MUL_VERILOG.git,2022-09-29 21:42:48+00:00,This verilog program will return the product of two 8 bit number.,0,adityaraj543210/8_BIT_MUL_VERILOG,543329758,Verilog,8_BIT_MUL_VERILOG,1,0,2022-09-29 21:43:47+00:00,[],None
417,https://github.com/chrispvasquez/HDL-Motion-Traffic-Light.git,2022-10-01 05:31:02+00:00,,0,chrispvasquez/HDL-Motion-Traffic-Light,543902790,Verilog,HDL-Motion-Traffic-Light,871,0,2022-10-01 05:31:21+00:00,[],None
418,https://github.com/pavanmathur/FFT-with-Random-Forest-for-Diagnosis-of-Rotating-Machinery-Faults.git,2022-10-02 17:08:19+00:00,,0,pavanmathur/FFT-with-Random-Forest-for-Diagnosis-of-Rotating-Machinery-Faults,544513336,Verilog,FFT-with-Random-Forest-for-Diagnosis-of-Rotating-Machinery-Faults,19,0,2022-10-02 17:12:15+00:00,[],None
419,https://github.com/amepila/debouncer.git,2022-10-04 04:12:48+00:00,Debouncer with FSM,0,amepila/debouncer,545267222,Verilog,debouncer,4505,0,2022-10-04 04:13:30+00:00,[],None
420,https://github.com/Simrankumari97/booth_multiplier.git,2022-09-30 14:28:48+00:00,,0,Simrankumari97/booth_multiplier,543640762,Verilog,booth_multiplier,185,0,2022-09-30 17:09:26+00:00,[],None
421,https://github.com/azimpour102/Hardware-Implementation-of-Artificial-Neural-Network.git,2022-09-30 10:17:58+00:00,A fully-connected artificial neural network designed and implemented using verilog.,1,azimpour102/Hardware-Implementation-of-Artificial-Neural-Network,543543123,Verilog,Hardware-Implementation-of-Artificial-Neural-Network,380,0,2022-09-30 10:19:38+00:00,[],None
422,https://github.com/ft2063/MIPS-CPU-Components-in-Verilog.git,2022-09-28 20:26:41+00:00,,0,ft2063/MIPS-CPU-Components-in-Verilog,542780335,Verilog,MIPS-CPU-Components-in-Verilog,229,0,2022-09-28 20:28:01+00:00,[],None
423,https://github.com/mauer4/FPGA-Selection-Sort.git,2022-09-28 01:48:55+00:00,"Verilog code to implement the selection sort algorithm in Verilog, on a DE1-SOC FPGA",0,mauer4/FPGA-Selection-Sort,542362833,Verilog,FPGA-Selection-Sort,18,0,2022-09-28 01:52:59+00:00,[],None
424,https://github.com/azimpour102/ARM-Pipeline-Processor.git,2022-09-28 13:23:26+00:00,A pipeline processor with a cache attached to it was fully designed and implemented using Verilog.,0,azimpour102/ARM-Pipeline-Processor,542602227,Verilog,ARM-Pipeline-Processor,3042,0,2022-09-28 13:50:25+00:00,[],None
425,https://github.com/Mohamed-Sharaf/MIPS.git,2022-10-04 15:43:37+00:00,This is an RTL design for MIPS Processor written in Verilog ,0,Mohamed-Sharaf/MIPS,545567186,Verilog,MIPS,5,0,2022-10-04 15:45:30+00:00,[],None
426,https://github.com/cornell-c2s2/C2S2-Module-Library.git,2022-10-01 18:09:49+00:00,,0,cornell-c2s2/C2S2-Module-Library,544128002,Verilog,C2S2-Module-Library,328,0,2022-10-16 02:07:51+00:00,[],None
427,https://github.com/akashverma1011/spi.git,2022-10-01 09:45:15+00:00,,0,akashverma1011/spi,543972219,Verilog,spi,15,0,2022-10-01 09:46:09+00:00,[],https://api.github.com/licenses/gpl-3.0
428,https://github.com/hrt014pocky/zarv.git,2022-10-02 06:37:49+00:00,risc-v cpu verilog project,0,hrt014pocky/zarv,544311512,Verilog,zarv,269,0,2022-10-02 06:44:28+00:00,[],None
429,https://github.com/akashskyash007/Verilog_Practice.git,2022-09-23 06:51:39+00:00,,0,akashskyash007/Verilog_Practice,540315539,Verilog,Verilog_Practice,562,0,2022-09-23 06:56:56+00:00,[],None
430,https://github.com/MadejSzymon/de0nano_running_led.git,2022-09-22 17:30:20+00:00,Running LED done on DE0-Nano FPGA Development Kit,0,MadejSzymon/de0nano_running_led,540095141,Verilog,de0nano_running_led,106,0,2022-09-22 17:31:09+00:00,[],None
431,https://github.com/mudakirfazili/Mixed-Signal-Design-Hackathon.git,2022-10-02 16:22:02+00:00,,0,mudakirfazili/Mixed-Signal-Design-Hackathon,544496774,Verilog,Mixed-Signal-Design-Hackathon,1645,0,2022-10-08 14:36:46+00:00,[],None
432,https://github.com/ting9266/Vending_Machine.git,2022-09-29 08:46:04+00:00,,0,ting9266/Vending_Machine,543013253,Verilog,Vending_Machine,4,0,2022-10-07 14:58:49+00:00,[],None
433,https://github.com/mailmesalah/ADC.git,2022-09-27 01:20:39+00:00,,0,mailmesalah/ADC,541851657,Verilog,ADC,14,0,2022-09-27 01:26:51+00:00,[],https://api.github.com/licenses/gpl-3.0
434,https://github.com/Adhi-cyber/verilog.git,2022-09-26 04:24:38+00:00,,0,Adhi-cyber/verilog,541406019,Verilog,verilog,79,0,2022-09-26 04:27:37+00:00,[],None
435,https://github.com/avermag/VERILOG.git,2022-09-26 12:05:55+00:00,,0,avermag/VERILOG,541565780,Verilog,VERILOG,1,0,2022-09-26 12:07:23+00:00,[],None
436,https://github.com/q86865511/Pipelined-CPU-Design.git,2022-09-25 13:19:57+00:00,使用Icarus，設計出一個可以完成13道 MIPS指令的Pipelined MIPS-Lite CPU。,0,q86865511/Pipelined-CPU-Design,541178048,Verilog,Pipelined-CPU-Design,966,0,2022-09-25 13:25:24+00:00,['chungyuanuniversity'],None
437,https://github.com/SuperMB/ArcticFoxGCD.git,2022-09-17 00:14:16+00:00,,0,SuperMB/ArcticFoxGCD,537655088,Verilog,ArcticFoxGCD,13,0,2022-09-17 00:26:52+00:00,[],https://api.github.com/licenses/bsd-3-clause
438,https://github.com/AshCoder232/Lift-Controller-Using-FPGA.git,2022-09-17 12:41:14+00:00,Lift controller implemention using FPGA,0,AshCoder232/Lift-Controller-Using-FPGA,537804842,Verilog,Lift-Controller-Using-FPGA,2,0,2022-09-17 12:42:41+00:00,[],None
439,https://github.com/BocchiChen/ECE550-CPU-Construction.git,2022-09-17 22:19:31+00:00,,0,BocchiChen/ECE550-CPU-Construction,537943240,Verilog,ECE550-CPU-Construction,55,0,2023-02-06 21:03:09+00:00,[],None
440,https://github.com/Pranavi-2001/Pulse-width-modulation.git,2022-09-19 01:44:29+00:00,,0,Pranavi-2001/Pulse-width-modulation,538294621,Verilog,Pulse-width-modulation,0,0,2022-09-19 01:45:09+00:00,[],None
441,https://github.com/Sharjeelimtiaz27/Single-Cycle-RISC-V-RV32I-Processor.git,2022-09-21 12:53:12+00:00,,0,Sharjeelimtiaz27/Single-Cycle-RISC-V-RV32I-Processor,539487533,Verilog,Single-Cycle-RISC-V-RV32I-Processor,12,0,2022-09-21 13:06:17+00:00,[],None
442,https://github.com/TylerTTX/Test_Repo_Caravel.git,2022-09-19 18:48:57+00:00,,0,TylerTTX/Test_Repo_Caravel,538650605,Verilog,Test_Repo_Caravel,56063,0,2022-09-19 18:49:11+00:00,[],https://api.github.com/licenses/apache-2.0
443,https://github.com/kaursim722/TurkeyCounter.git,2022-09-20 19:18:56+00:00,,0,kaursim722/TurkeyCounter,539155243,Verilog,TurkeyCounter,3037,0,2023-09-14 00:05:37+00:00,[],None
444,https://github.com/OIhroDIL/key_matrix_disp.git,2022-09-22 04:16:31+00:00,,0,OIhroDIL/key_matrix_disp,539794965,Verilog,key_matrix_disp,6,0,2022-09-22 04:17:27+00:00,[],None
445,https://github.com/MarioLeandro/mips32-single-cycle.git,2022-09-22 00:34:58+00:00,Processador MIPS de 32bits implementado em verilog,0,MarioLeandro/mips32-single-cycle,539735813,Verilog,mips32-single-cycle,7312,0,2022-09-22 00:41:28+00:00,[],None
446,https://github.com/xuy50/ECE550_checkpoint1.git,2022-09-21 03:13:54+00:00,,0,xuy50/ECE550_checkpoint1,539284167,Verilog,ECE550_checkpoint1,31,0,2023-05-18 00:46:39+00:00,[],None
447,https://github.com/dblimbrick/vexRISCV_ADEPT.git,2022-09-24 16:06:25+00:00,,0,dblimbrick/vexRISCV_ADEPT,540886971,Verilog,vexRISCV_ADEPT,2230,0,2022-09-24 16:06:37+00:00,[],https://api.github.com/licenses/apache-2.0
448,https://github.com/omikami747/sprocV1.git,2022-10-04 19:07:48+00:00,,0,omikami747/sprocV1,545661314,Verilog,sprocV1,3351,0,2024-01-12 18:40:14+00:00,[],None
449,https://github.com/aldec/Emulations.git,2022-09-28 09:26:59+00:00,Examples of cosimulation with emulators ,1,aldec/Emulations,542508888,Verilog,Emulations,2360,0,2022-09-28 10:04:26+00:00,[],None
450,https://github.com/CameronSettles/Single-Cycle-MIPS-Processor-Verilog.git,2022-09-26 05:02:19+00:00,"A single cycle processor that implements a RISC MIPS, word-adressable architecture in Verilog HDL.",0,CameronSettles/Single-Cycle-MIPS-Processor-Verilog,541415176,Verilog,Single-Cycle-MIPS-Processor-Verilog,7,0,2023-04-26 17:21:16+00:00,[],None
451,https://github.com/GeorgeWu1204/MIPS-CPU101.git,2022-10-01 00:34:48+00:00,ELEC50010 Instruction Architectures and Compilers CPU and Testbench Project,0,GeorgeWu1204/MIPS-CPU101,543839190,Verilog,MIPS-CPU101,55,0,2022-10-01 14:54:36+00:00,[],None
452,https://github.com/olso4539/SMPS-Controller.git,2022-10-01 19:34:43+00:00,,0,olso4539/SMPS-Controller,544153187,Verilog,SMPS-Controller,2228,0,2022-10-01 19:34:59+00:00,[],https://api.github.com/licenses/apache-2.0
453,https://github.com/HayLahav/EE-LAB-3--PROJECT1---Tel-Aviv-University.git,2022-09-18 14:54:58+00:00,EE LAB 3- PROJECT1 - Tel Aviv University ,0,HayLahav/EE-LAB-3--PROJECT1---Tel-Aviv-University,538143115,Verilog,EE-LAB-3--PROJECT1---Tel-Aviv-University,12,0,2022-09-18 15:33:02+00:00,[],None
454,https://github.com/yarakhalaf/UART_TX.git,2022-09-19 02:55:03+00:00,,0,yarakhalaf/UART_TX,538311250,Verilog,UART_TX,2,0,2022-09-19 02:56:36+00:00,[],None
455,https://github.com/TheSonders/XERA4Lite.git,2022-09-18 16:03:53+00:00,XERA4Lite Project,0,TheSonders/XERA4Lite,538163078,Verilog,XERA4Lite,7,0,2022-09-18 16:04:57+00:00,[],None
456,https://github.com/carsonmiiller/microprocessor_design.git,2022-09-19 01:02:52+00:00,,0,carsonmiiller/microprocessor_design,538285801,Verilog,microprocessor_design,9637,0,2022-09-19 01:07:20+00:00,[],None
457,https://github.com/sebas0163/decodificador_Grey.git,2022-09-17 22:25:08+00:00,,0,sebas0163/decodificador_Grey,537944153,Verilog,decodificador_Grey,325,0,2022-10-03 23:21:05+00:00,[],None
458,https://github.com/heenishareddy/MCU.git,2022-09-18 01:26:16+00:00,4-stage pipelined Microcontroller Unit ,0,heenishareddy/MCU,537970581,Verilog,MCU,818,0,2022-09-18 01:27:25+00:00,[],None
459,https://github.com/snapdensing/tutorial.git,2022-09-17 12:44:48+00:00,Various tool tutorials,0,snapdensing/tutorial,537805689,Verilog,tutorial,521,0,2022-09-17 12:46:53+00:00,[],None
460,https://github.com/peterjose/LME_micro_electronics_lab.git,2022-09-17 10:21:47+00:00,Micro Electronics Lab 2022,0,peterjose/LME_micro_electronics_lab,537771917,Verilog,LME_micro_electronics_lab,60,0,2022-09-19 10:41:16+00:00,"['fpga', 'artix-7', 'basys2', 'matlab', 'lme', 'saarland-university', 'hdmi', 'displays', 'hardware', 'image-processing']",None
461,https://github.com/seungjoyea/FIFO_FIR_Filter.git,2022-09-21 14:08:44+00:00,,0,seungjoyea/FIFO_FIR_Filter,539521758,Verilog,FIFO_FIR_Filter,4,0,2022-09-21 14:09:03+00:00,[],None
462,https://github.com/kumar564/Verilog-Programs.git,2022-09-22 19:19:32+00:00,,0,kumar564/Verilog-Programs,540135651,Verilog,Verilog-Programs,11,0,2022-09-22 19:31:37+00:00,[],None
463,https://github.com/GHFATEMEH/MIPS-processor.git,2022-09-24 15:52:47+00:00,,0,GHFATEMEH/MIPS-processor,540882861,Verilog,MIPS-processor,21,0,2022-11-14 19:07:31+00:00,[],None
464,https://github.com/PowellJacob/EE389.git,2022-09-26 17:53:49+00:00,Independent study involving integrated circuit design with Caravel.,0,PowellJacob/EE389,541714846,Verilog,EE389,45839,0,2022-09-26 17:54:06+00:00,[],https://api.github.com/licenses/apache-2.0
465,https://github.com/peterhchen/018_VerilogVerilator.git,2022-09-27 01:14:30+00:00,Verilog and Verilator,0,peterhchen/018_VerilogVerilator,541849940,Verilog,018_VerilogVerilator,15929,0,2022-09-27 05:14:48+00:00,[],None
466,https://github.com/Iris0222/5-Stage-Pipeline-CPU.git,2022-09-26 16:44:59+00:00,,0,Iris0222/5-Stage-Pipeline-CPU,541687570,Verilog,5-Stage-Pipeline-CPU,715,0,2022-09-26 16:47:10+00:00,[],None
467,https://github.com/bwjin310/HDLBits_Solution.git,2022-09-29 02:51:28+00:00,My solution to HDLBits as verilog exercise,0,bwjin310/HDLBits_Solution,542887935,Verilog,HDLBits_Solution,33,0,2022-09-29 02:58:20+00:00,[],None
468,https://github.com/qasimnaeem364/Bresenham_Circle_Drawing_VGA.git,2022-10-03 08:55:45+00:00,This project includes Bresenham Circle Drawing Algorithm Implemented on FPGA using Verilog and displayed on VGA.,0,qasimnaeem364/Bresenham_Circle_Drawing_VGA,544804075,Verilog,Bresenham_Circle_Drawing_VGA,469,0,2023-03-23 13:56:58+00:00,[],https://api.github.com/licenses/apache-2.0
469,https://github.com/HellRain57/AXI_fpga.git,2022-10-03 06:01:20+00:00,"This project allows you to transfer data to the FPGA. The project presents the transmission module itself, without the Top-file and constraint",0,HellRain57/AXI_fpga,544732734,Verilog,AXI_fpga,6,0,2022-10-03 06:01:38+00:00,[],None
470,https://github.com/bhargav2502/Elevator_Sysytem.git,2022-10-02 07:11:34+00:00,,0,bhargav2502/Elevator_Sysytem,544320663,Verilog,Elevator_Sysytem,2,0,2022-10-03 17:18:30+00:00,[],None
471,https://github.com/sivaram-07/ECEA_HDLTP.git,2022-10-03 14:47:54+00:00,,0,sivaram-07/ECEA_HDLTP,544965410,Verilog,ECEA_HDLTP,623,0,2022-10-15 07:17:27+00:00,[],None
472,https://github.com/Herring-UGACSEE-4290-F22/Memory-Module.git,2022-09-27 03:29:45+00:00,Verilog Code for Memory Modules used in Class ISA tests.,0,Herring-UGACSEE-4290-F22/Memory-Module,541886922,Verilog,Memory-Module,47,0,2022-10-03 23:04:19+00:00,[],None
473,https://github.com/EnesErcin/Boron_Encryption.git,2022-09-27 07:48:25+00:00,Hardware implementation of ultraligth-weight Boron Encryption and decryption algorithms,0,EnesErcin/Boron_Encryption,541965014,Verilog,Boron_Encryption,2934,0,2022-09-27 07:59:23+00:00,[],https://api.github.com/licenses/mit
474,https://github.com/mailmesalah/EC-2-Microprocessor.git,2022-09-27 05:08:05+00:00,,0,mailmesalah/EC-2-Microprocessor,541912186,Verilog,EC-2-Microprocessor,16,0,2022-09-27 05:08:36+00:00,[],https://api.github.com/licenses/gpl-3.0
475,https://github.com/mailmesalah/EigenDecomposition.git,2022-09-27 05:13:08+00:00,,0,mailmesalah/EigenDecomposition,541913409,Verilog,EigenDecomposition,402,0,2022-09-27 05:14:42+00:00,[],https://api.github.com/licenses/gpl-3.0
476,https://github.com/mailmesalah/FPGA-Face-Detection.git,2022-09-27 05:28:26+00:00,,0,mailmesalah/FPGA-Face-Detection,541917319,Verilog,FPGA-Face-Detection,14037,0,2022-09-27 05:28:56+00:00,[],https://api.github.com/licenses/gpl-3.0
477,https://github.com/maha123m/ENCS2340-Digital-Systems.git,2022-09-27 17:26:47+00:00,,0,maha123m/ENCS2340-Digital-Systems,542207918,Verilog,ENCS2340-Digital-Systems,1974,0,2022-09-27 17:30:37+00:00,[],None
478,https://github.com/jessieeeeej/5-stage-Pipelined-CPU.git,2022-10-04 03:43:48+00:00,,0,jessieeeeej/5-stage-Pipelined-CPU,545258734,Verilog,5-stage-Pipelined-CPU,1227,0,2022-10-04 03:45:55+00:00,[],None
479,https://github.com/yalcinalp/Lab-Entrance-System.git,2022-09-27 23:45:56+00:00,COVID-19 Related Lab Entrance System with Verilog,0,yalcinalp/Lab-Entrance-System,542331128,Verilog,Lab-Entrance-System,844,0,2022-09-27 23:46:28+00:00,[],None
480,https://github.com/saeid-ebrahimi/MIPS32-Processor-Implementation-in-Verilog.git,2022-09-20 20:07:52+00:00,,0,saeid-ebrahimi/MIPS32-Processor-Implementation-in-Verilog,539172738,Verilog,MIPS32-Processor-Implementation-in-Verilog,3462,0,2022-09-20 20:08:05+00:00,[],None
481,https://github.com/rah1236/CPE233.git,2022-09-19 21:35:46+00:00,,0,rah1236/CPE233,538705466,Verilog,CPE233,5910,0,2022-09-19 21:55:03+00:00,[],None
482,https://github.com/basavaraju496/Verilog-codes.git,2022-10-02 13:21:53+00:00,,0,basavaraju496/Verilog-codes,544434052,Verilog,Verilog-codes,31888,0,2022-12-05 15:42:30+00:00,[],None
483,https://github.com/howard881010/IC-Design-Lab.git,2022-09-24 02:48:15+00:00,,0,howard881010/IC-Design-Lab,540687701,Verilog,IC-Design-Lab,5011,0,2022-09-24 02:55:39+00:00,[],None
484,https://github.com/TharunsaiBestha/Verilog.git,2022-09-24 13:44:20+00:00,Verilog lab programs,0,TharunsaiBestha/Verilog,540842976,Verilog,Verilog,78,0,2022-09-24 13:50:12+00:00,[],None
485,https://github.com/wpf-flash/digital_circuit_lab.git,2022-09-20 11:42:42+00:00,with load/store,0,wpf-flash/digital_circuit_lab,538958935,Verilog,digital_circuit_lab,13,0,2022-09-20 11:48:46+00:00,[],None
486,https://github.com/yuru0320/Ticket-Vending-Machine.git,2022-09-20 14:51:02+00:00,利用有限狀態機的方法模擬出車票販賣機。,0,yuru0320/Ticket-Vending-Machine,539043470,Verilog,Ticket-Vending-Machine,15,0,2022-09-20 15:21:13+00:00,[],https://api.github.com/licenses/mit
487,https://github.com/ashan240/32-Bit-Floating-Point-Arithmetic-Logic-Unit-main.git,2022-09-29 14:25:08+00:00,,0,ashan240/32-Bit-Floating-Point-Arithmetic-Logic-Unit-main,543165868,Verilog,32-Bit-Floating-Point-Arithmetic-Logic-Unit-main,1056,0,2022-09-29 14:26:19+00:00,[],None
488,https://github.com/Azl369/digital_tube.git,2022-09-30 02:50:30+00:00,Counting decoding circuit by FPGA,0,Azl369/digital_tube,543405458,Verilog,digital_tube,40018,0,2022-09-30 02:55:20+00:00,[],None
489,https://github.com/AhmedShafeekk/Single-Cycle-MIPS-Processor.git,2022-09-20 01:32:49+00:00,,0,AhmedShafeekk/Single-Cycle-MIPS-Processor,538762628,Verilog,Single-Cycle-MIPS-Processor,242,0,2022-10-13 20:00:39+00:00,[],None
490,https://github.com/sxsxsx636363/ALU.git,2022-09-23 05:51:32+00:00,,0,sxsxsx636363/ALU,540298183,Verilog,ALU,15,0,2023-02-24 10:26:37+00:00,[],None
491,https://github.com/schang412/verilog-gpio.git,2022-09-23 00:05:12+00:00,,0,schang412/verilog-gpio,540213920,Verilog,verilog-gpio,21,0,2022-09-23 00:05:42+00:00,[],https://api.github.com/licenses/mit
492,https://github.com/MegaIng/tc-exports.git,2022-09-27 18:14:42+00:00,Various files and documentations for the export formats for the game Turing Complete,1,MegaIng/tc-exports,542227136,Verilog,tc-exports,15,0,2022-09-27 18:23:26+00:00,[],None
493,https://github.com/0xn4utilus/pipeline_processor_MIPS.git,2022-09-28 16:43:45+00:00,MIPS Pipeline Processor written in verilog,0,0xn4utilus/pipeline_processor_MIPS,542693361,Verilog,pipeline_processor_MIPS,14265,0,2022-12-11 15:55:02+00:00,[],None
494,https://github.com/OIhroDIL/stopWatch.git,2022-09-26 09:03:20+00:00,,0,OIhroDIL/stopWatch,541496159,Verilog,stopWatch,6,0,2022-09-26 09:03:51+00:00,[],None
495,https://github.com/MagicWinnie/IU_ComputerArchitecture.git,2022-09-22 14:22:18+00:00,Assignment and lab problem solutions for Computer Architecture course at IU ,0,MagicWinnie/IU_ComputerArchitecture,540018990,Verilog,IU_ComputerArchitecture,33,0,2023-01-24 09:55:41+00:00,[],None
496,https://github.com/AzofeifaJ/Proyecto-de-HDL.git,2022-09-22 19:16:47+00:00,Cofección de un circuito decodificador de Gray,0,AzofeifaJ/Proyecto-de-HDL,540134731,Verilog,Proyecto-de-HDL,79,0,2022-10-11 06:20:06+00:00,[],https://api.github.com/licenses/mit
497,https://github.com/YunChianLee2001/4-bit_binary_adder-subtractor.git,2022-09-19 12:12:41+00:00,,0,YunChianLee2001/4-bit_binary_adder-subtractor,538484792,Verilog,4-bit_binary_adder-subtractor,46,0,2022-09-19 12:14:42+00:00,[],None
498,https://github.com/nishita-paul/FSM-1101.git,2022-09-25 07:26:26+00:00,,0,nishita-paul/FSM-1101,541089416,Verilog,FSM-1101,2,0,2022-09-25 07:27:37+00:00,[],None
499,https://github.com/ranjan2939/32-bit-MIPS-Processor.git,2022-09-25 08:37:26+00:00,,0,ranjan2939/32-bit-MIPS-Processor,541106299,Verilog,32-bit-MIPS-Processor,9,0,2022-09-25 10:17:03+00:00,[],None
500,https://github.com/mangakoji/FONT5X7_NTSCSQU.git,2022-09-25 13:07:00+00:00,digital 1Pin output NTSC encoder + 5x7px font OSD,0,mangakoji/FONT5X7_NTSCSQU,541174332,Verilog,FONT5X7_NTSCSQU,824,0,2023-11-01 05:51:22+00:00,[],None
501,https://github.com/LCL-cdsak/Verilog_projects.git,2022-10-02 05:46:16+00:00,,0,LCL-cdsak/Verilog_projects,544297120,Verilog,Verilog_projects,17306,0,2022-10-03 06:26:11+00:00,[],None
502,https://github.com/Jerry-03/CDC-handshake-signal.git,2022-10-03 03:27:22+00:00,多bit数据 跨时钟域握手信号处理方法,0,Jerry-03/CDC-handshake-signal,544685689,Verilog,CDC-handshake-signal,32,0,2023-05-06 11:31:06+00:00,[],None
503,https://github.com/sakibjunaed/ECE241-Digital-Systems.git,2022-10-03 15:21:37+00:00,ECE241-Digital Systems Verilog Labs,0,sakibjunaed/ECE241-Digital-Systems,544982516,Verilog,ECE241-Digital-Systems,16,0,2022-10-03 15:35:56+00:00,[],None
504,https://github.com/shivpvtel/Five-Stage-Pipelined-CPU-Verilog.git,2022-09-21 16:36:53+00:00,,0,shivpvtel/Five-Stage-Pipelined-CPU-Verilog,539587105,Verilog,Five-Stage-Pipelined-CPU-Verilog,16,0,2022-09-21 22:34:50+00:00,[],None
505,https://github.com/yarakhalaf/Single_Cycle_MIPS_Processor.git,2022-09-19 02:27:38+00:00,,0,yarakhalaf/Single_Cycle_MIPS_Processor,538304563,Verilog,Single_Cycle_MIPS_Processor,4,0,2022-09-19 03:05:16+00:00,[],None
506,https://github.com/guberti/caravel_test.git,2022-09-18 11:53:01+00:00,,0,guberti/caravel_test,538093459,Verilog,caravel_test,2230,0,2022-09-18 11:53:13+00:00,[],https://api.github.com/licenses/apache-2.0
507,https://github.com/iamkarthikbk/sample_design.git,2022-09-23 05:54:39+00:00,,0,iamkarthikbk/sample_design,540298959,Verilog,sample_design,66,0,2022-09-23 06:13:05+00:00,[],None
508,https://github.com/akashverma1011/vending-machine.git,2022-10-01 09:53:34+00:00,,0,akashverma1011/vending-machine,543974778,Verilog,vending-machine,2,0,2022-10-03 03:53:18+00:00,[],None
509,https://github.com/MFisherBE/RISC-V-CPU.git,2022-09-30 04:14:33+00:00,This project is an example of a very basic 3-stage RISC-V processor.,0,MFisherBE/RISC-V-CPU,543425628,Verilog,RISC-V-CPU,7,0,2022-09-30 04:15:02+00:00,[],None
510,https://github.com/Benisonpin/caravel_mgmt_soc_litex.git,2022-10-02 13:11:47+00:00,,0,Benisonpin/caravel_mgmt_soc_litex,544430744,Verilog,caravel_mgmt_soc_litex,1267259,0,2022-10-05 12:12:30+00:00,[],https://api.github.com/licenses/apache-2.0
511,https://github.com/smallcute123/chisel-riscv-32-cpu.git,2022-09-30 08:27:04+00:00,基于chisel搭建的单周期五级流水线cpu,0,smallcute123/chisel-riscv-32-cpu,543501431,Verilog,chisel-riscv-32-cpu,1753,0,2022-10-31 01:55:52+00:00,[],None
512,https://github.com/Choijh03/FPGA_NEXYS_A7_PROJECTS.git,2022-10-04 03:12:05+00:00,,0,Choijh03/FPGA_NEXYS_A7_PROJECTS,545248867,Verilog,FPGA_NEXYS_A7_PROJECTS,40435,0,2022-10-04 03:23:46+00:00,"['fpga', 'nexys-a7', 'verilog']",None
513,https://github.com/hyeonwoopyo/7segment.git,2022-09-20 01:00:25+00:00,,0,hyeonwoopyo/7segment,538754841,Verilog,7segment,1,0,2022-09-20 01:15:39+00:00,[],None
514,https://github.com/dhillirajesh/GCD-Machine-using-Verilog-HDL.git,2022-09-21 17:32:11+00:00,,0,dhillirajesh/GCD-Machine-using-Verilog-HDL,539609148,Verilog,GCD-Machine-using-Verilog-HDL,3,0,2022-09-21 17:38:09+00:00,[],None
515,https://github.com/TinyTapeout/cts_fsm.git,2022-09-21 11:01:52+00:00,,0,TinyTapeout/cts_fsm,539442150,,cts_fsm,12,0,2022-10-27 16:09:00+00:00,[],https://api.github.com/licenses/apache-2.0
516,https://github.com/Scrunchy711/FPGA_Project.git,2022-09-21 17:02:24+00:00,,0,Scrunchy711/FPGA_Project,539597181,Verilog,FPGA_Project,57,0,2022-09-21 17:03:44+00:00,[],None
517,https://github.com/Ren-Ps/ren_test.git,2022-09-21 06:24:20+00:00,,0,Ren-Ps/ren_test,539338051,Verilog,ren_test,45844,0,2022-09-21 06:24:36+00:00,[],https://api.github.com/licenses/apache-2.0
518,https://github.com/KaparthiDivya/FIFO-Shift-register.git,2022-09-19 06:02:50+00:00,,0,KaparthiDivya/FIFO-Shift-register,538355510,Verilog,FIFO-Shift-register,343,0,2022-09-19 06:11:14+00:00,[],None
519,https://github.com/jchaudhary21/eyrc22_SB_1135.git,2022-09-19 03:32:29+00:00,,0,jchaudhary21/eyrc22_SB_1135,538320296,Verilog,eyrc22_SB_1135,633581,0,2023-04-17 04:03:03+00:00,[],None
520,https://github.com/YunChianLee2001/4-bit_binary_adder-subtractor_extension.git,2022-09-19 12:17:18+00:00,,0,YunChianLee2001/4-bit_binary_adder-subtractor_extension,538486593,Verilog,4-bit_binary_adder-subtractor_extension,58,0,2022-09-19 12:19:29+00:00,[],None
521,https://github.com/Mengyuan410/FPGA-IoT-Game-Project.git,2022-09-19 12:24:10+00:00,,0,Mengyuan410/FPGA-IoT-Game-Project,538489251,Verilog,FPGA-IoT-Game-Project,85427,0,2022-09-19 15:18:35+00:00,[],None
522,https://github.com/gbellocchi/genov.git,2022-09-18 13:35:54+00:00,,1,gbellocchi/genov,538120135,Verilog,genov,27662,0,2022-09-18 13:38:38+00:00,[],None
523,https://github.com/HayLahav/Binary-adder-to-7-segment-display.git,2022-09-18 14:39:48+00:00,implementing Binary adder to 7 segment display (based on  Ovidiu Plugariu course and tutorial),0,HayLahav/Binary-adder-to-7-segment-display,538138660,Verilog,Binary-adder-to-7-segment-display,6,0,2022-09-18 14:40:22+00:00,[],None
524,https://github.com/MadejSzymon/de0nano_lcd.git,2022-09-28 19:50:23+00:00,Simple FPGA driver for HD44780 2x16 LCD. ,0,MadejSzymon/de0nano_lcd,542767766,Verilog,de0nano_lcd,89,0,2022-09-28 19:52:41+00:00,[],None
525,https://github.com/owen920831/Logic-Design-Laborator.git,2022-09-24 11:31:34+00:00,,0,owen920831/Logic-Design-Laborator,540807225,Verilog,Logic-Design-Laborator,9556,0,2023-09-27 17:35:53+00:00,[],None
526,https://github.com/Abeilles14/VLSI-I.git,2022-09-26 01:45:41+00:00,A series of unfortunate but interesting VLSI projects and labs,0,Abeilles14/VLSI-I,541367426,Verilog,VLSI-I,33794,0,2022-11-13 20:02:16+00:00,[],None
527,https://github.com/adhowell/LD19-A7-interface.git,2022-09-25 19:19:23+00:00,RX Interface for LD19 -> A7-35T,0,adhowell/LD19-A7-interface,541283847,Verilog,LD19-A7-interface,7,0,2022-11-21 22:27:39+00:00,[],None
528,https://github.com/Yongxiang-Guo/Nowcoder_Verilog.git,2022-09-26 15:35:18+00:00,Verilog coding practice on https://www.nowcoder.com,0,Yongxiang-Guo/Nowcoder_Verilog,541658393,Verilog,Nowcoder_Verilog,86,0,2022-10-18 09:56:40+00:00,[],None
529,https://github.com/pranithkumar123/Two-item-vending-machine.git,2022-09-27 05:52:37+00:00,using FSM Modelling,0,pranithkumar123/Two-item-vending-machine,541924274,Verilog,Two-item-vending-machine,1,0,2022-09-30 16:27:34+00:00,[],None
530,https://github.com/johs2969/ECE_exp5.git,2022-09-29 07:59:04+00:00,서울시립대학교 전자전기컴퓨터공학부 전전설2 과목,0,johs2969/ECE_exp5,542992586,Verilog,ECE_exp5,6,0,2022-09-29 13:24:17+00:00,[],None
531,https://github.com/drvasanthi/sta.git,2022-09-17 13:04:00+00:00,,0,drvasanthi/sta,537810715,Verilog,sta,384,0,2022-09-19 17:57:02+00:00,[],None
532,https://github.com/Scienfreak/verilog-projects.git,2022-09-17 13:47:19+00:00,,0,Scienfreak/verilog-projects,537821867,Verilog,verilog-projects,9,0,2022-09-17 13:49:24+00:00,[],None
533,https://github.com/KorenX/basic-psm.git,2022-09-27 18:28:55+00:00,,0,KorenX/basic-psm,542232831,Verilog,basic-psm,5,0,2022-09-27 18:38:49+00:00,[],None
534,https://github.com/mailmesalah/Verilog.git,2022-09-27 14:04:48+00:00,,0,mailmesalah/Verilog,542116778,Verilog,Verilog,17,0,2022-09-27 14:05:21+00:00,[],https://api.github.com/licenses/gpl-3.0
535,https://github.com/alirezajaberirad/ARM.git,2022-09-30 16:41:36+00:00,"A Verilog implementation of the ARM968E-S processor supporting: Forwarding, SRAM, and Cache - Fall 2021",0,alirezajaberirad/ARM,543695903,Verilog,ARM,67957,0,2022-09-30 16:42:30+00:00,[],None
536,https://github.com/Shuhao99/DUKE_ECE550.git,2022-09-21 22:24:08+00:00,Git repo for 550 receptions and checkpoints,0,Shuhao99/DUKE_ECE550,539705883,Verilog,DUKE_ECE550,119831,0,2023-11-17 05:18:09+00:00,[],None
537,https://github.com/enessanc/Calculator.git,2022-09-20 18:49:38+00:00,"sin,cos,square, is,_prime calculator with fpga implementation",0,enessanc/Calculator,539144192,Verilog,Calculator,41,0,2022-09-24 13:56:38+00:00,[],None
538,https://github.com/juanma-gil/FPGA-UART.git,2022-10-01 18:43:41+00:00,TP N° 2 de la materia Arquitectura de computadoras dónde se busca crear un transmisor y receptor UART para trabajar en conjunto con el módulo de la ALU,1,juanma-gil/FPGA-UART,544138275,Verilog,FPGA-UART,264,0,2022-10-10 19:25:58+00:00,[],None
539,https://github.com/s107081028/Logic_Design_Pikachu.git,2022-09-25 04:32:26+00:00,,0,s107081028/Logic_Design_Pikachu,541050538,Verilog,Logic_Design_Pikachu,803,0,2024-01-11 08:43:38+00:00,[],None
540,https://github.com/Gwins7/PackageHandler.git,2022-09-19 05:33:27+00:00,,0,Gwins7/PackageHandler,538347806,Verilog,PackageHandler,4034,0,2024-03-15 03:12:26+00:00,[],None
541,https://github.com/sarathb2/serial_adder.git,2022-09-30 14:20:29+00:00,,0,sarathb2/serial_adder,543637079,Verilog,serial_adder,1,0,2022-09-30 14:22:09+00:00,[],None
542,https://github.com/edelist/4-Bit-Adder-Subtractor-ALU.git,2022-09-30 16:25:19+00:00,,0,edelist/4-Bit-Adder-Subtractor-ALU,543689138,Verilog,4-Bit-Adder-Subtractor-ALU,154,0,2022-12-03 23:18:36+00:00,[],None
543,https://github.com/saisumanthpamujula/Synchronous-FIFO.git,2022-09-30 07:43:45+00:00,mplemented and simulated a synthesisable synchronous FIFO with variable FIFO width and depth,0,saisumanthpamujula/Synchronous-FIFO,543485825,Verilog,Synchronous-FIFO,32,0,2022-09-30 07:47:15+00:00,[],https://api.github.com/licenses/gpl-3.0
544,https://github.com/Alapati-Venkat/BINARY_SEARCH.git,2022-09-30 13:53:29+00:00,,0,Alapati-Venkat/BINARY_SEARCH,543625103,Verilog,BINARY_SEARCH,2,0,2022-09-30 13:57:03+00:00,[],None
545,https://github.com/MehrabToghani/ComputerArchitectureLab.git,2022-09-20 18:36:21+00:00,,0,MehrabToghani/ComputerArchitectureLab,539138819,Verilog,ComputerArchitectureLab,11168,0,2022-09-20 19:39:53+00:00,[],https://api.github.com/licenses/mit
546,https://github.com/arq-org-computadores/mips-verilog.git,2022-09-20 21:01:40+00:00,,0,arq-org-computadores/mips-verilog,539190801,Verilog,mips-verilog,1598,0,2022-09-20 23:01:39+00:00,[],None
547,https://github.com/Ahmed00Gaber/FPGA-Stegnography.git,2022-09-21 14:29:04+00:00,,0,Ahmed00Gaber/FPGA-Stegnography,539531146,Verilog,FPGA-Stegnography,3310,0,2023-03-26 14:16:32+00:00,[],None
548,https://github.com/IngilizAdam/FPGA_Scientific_Calculator.git,2022-10-04 06:43:45+00:00,My project for Logic Circuit Design lecture,0,IngilizAdam/FPGA_Scientific_Calculator,545318260,Verilog,FPGA_Scientific_Calculator,36103,0,2022-10-04 06:51:50+00:00,[],None
549,https://github.com/Zebio/CPU_Assincrona.git,2022-10-03 15:07:58+00:00,,0,Zebio/CPU_Assincrona,544975717,Verilog,CPU_Assincrona,66,0,2022-10-03 15:08:08+00:00,[],None
550,https://github.com/abdulmannan05/Design-and-Implementation-of-Mixed-Signal-Circuit-2-1-MUX.git,2022-10-04 09:06:31+00:00,,0,abdulmannan05/Design-and-Implementation-of-Mixed-Signal-Circuit-2-1-MUX,545380730,Verilog,Design-and-Implementation-of-Mixed-Signal-Circuit-2-1-MUX,648,0,2022-10-04 11:52:36+00:00,[],https://api.github.com/licenses/gpl-3.0
551,https://github.com/kgarima1234/Synchronous-FIFO.git,2022-09-25 07:47:37+00:00,,0,kgarima1234/Synchronous-FIFO,541094356,Verilog,Synchronous-FIFO,13,0,2022-10-01 10:57:50+00:00,[],None
552,https://github.com/datachiii/master-chi.git,2022-09-27 14:16:00+00:00,,0,datachiii/master-chi,542122327,Verilog,master-chi,7423,0,2022-11-15 10:24:21+00:00,[],None
553,https://github.com/diegob94/ulx3s_blink.git,2022-09-29 01:28:45+00:00,Example project,0,diegob94/ulx3s_blink,542864259,Verilog,ulx3s_blink,9,0,2022-09-29 01:29:20+00:00,[],https://api.github.com/licenses/apache-2.0
554,https://github.com/kenkey101/Lab1.git,2022-09-29 15:26:19+00:00,,0,kenkey101/Lab1,543193233,Verilog,Lab1,1070,0,2022-09-29 15:28:04+00:00,[],None
555,https://github.com/deepthi7799/project.git,2022-09-22 14:32:41+00:00,,0,deepthi7799/project,540023705,Verilog,project,9,0,2022-09-22 14:35:45+00:00,[],None
556,https://github.com/chungen04/Digital-Circuit.git,2022-09-22 08:48:40+00:00,,0,chungen04/Digital-Circuit,539884595,Verilog,Digital-Circuit,60081,0,2022-12-28 18:35:46+00:00,[],None
557,https://github.com/ECEahnbin/ECEexp4.git,2022-09-22 08:30:22+00:00,서울시립대 전전설2,0,ECEahnbin/ECEexp4,539877339,Verilog,ECEexp4,2,0,2022-09-22 08:55:54+00:00,[],None
558,https://github.com/Mishrasuyash14/Moving_avg.git,2022-10-01 08:45:05+00:00,,0,Mishrasuyash14/Moving_avg,543954684,Verilog,Moving_avg,3,0,2022-10-01 08:52:26+00:00,[],None
559,https://github.com/amichai-bd/CPUGarageChallenge_2.git,2022-10-03 14:23:36+00:00,Intel CPUGarage Challenge #2,0,amichai-bd/CPUGarageChallenge_2,544952869,Verilog,CPUGarageChallenge_2,366,0,2022-11-12 22:20:16+00:00,[],None
560,https://github.com/yuantian94/Multi-user-Game-Based-on-FPGA.git,2022-10-02 08:38:12+00:00,This is individual course project for ECE 6370 - Advance Digital Design,0,yuantian94/Multi-user-Game-Based-on-FPGA,544345530,Verilog,Multi-user-Game-Based-on-FPGA,25707,0,2023-06-24 23:35:59+00:00,[],None
561,https://github.com/gbalaratnaswamy/Elevator_System.git,2022-10-01 15:56:04+00:00,Designed Elevator System circuit in verilog,0,gbalaratnaswamy/Elevator_System,544085829,Verilog,Elevator_System,2,0,2022-10-01 15:57:05+00:00,[],None
562,https://github.com/jian-fang/a2p-mpw7.git,2022-09-28 07:01:44+00:00,A2P Core with ToySRAM memories,0,jian-fang/a2p-mpw7,542452876,,a2p-mpw7,89093,0,2022-08-29 22:56:32+00:00,[],https://api.github.com/licenses/apache-2.0
563,https://github.com/h-enes-simsek/SimpleSinglePurposeProcessor.git,2022-09-18 19:31:07+00:00,A single purpose processor designed in Verilog calculating division between integers,0,h-enes-simsek/SimpleSinglePurposeProcessor,538219082,Verilog,SimpleSinglePurposeProcessor,556,0,2022-09-18 19:54:10+00:00,[],https://api.github.com/licenses/mit
564,https://github.com/yarakhalaf/Pipelined_MIPS_Processor.git,2022-09-19 02:34:46+00:00,,0,yarakhalaf/Pipelined_MIPS_Processor,538306251,Verilog,Pipelined_MIPS_Processor,10,0,2022-09-19 03:04:27+00:00,[],None
565,https://github.com/Rylan-Bumbasi/MIPSPipeline.git,2022-09-19 04:43:48+00:00,Verilog implementation of a 5-stage pipeline processor using MIPS architecture,0,Rylan-Bumbasi/MIPSPipeline,538336413,Verilog,MIPSPipeline,607,0,2022-09-19 04:45:10+00:00,[],None
566,https://github.com/kenryu621/SP-22-CECS-341-Lab-6.git,2022-09-17 07:36:31+00:00,Lab 6 assignment from Spring 2022 CECS 341 Computer Architecture of CSULB,0,kenryu621/SP-22-CECS-341-Lab-6,537734530,Verilog,SP-22-CECS-341-Lab-6,1028,0,2022-09-17 10:19:47+00:00,[],None
567,https://github.com/Perumaltuty/Pratice-Code.git,2022-09-17 07:06:15+00:00,,0,Perumaltuty/Pratice-Code,537727933,Verilog,Pratice-Code,75,0,2022-09-17 07:08:16+00:00,[],None
568,https://github.com/kenryu621/SP-22-CECS-341-Lab-4.git,2022-09-17 07:28:39+00:00,Lab 4 assignment from Spring 2022 CECS 341 Computer Architecture of CSULB,0,kenryu621/SP-22-CECS-341-Lab-4,537732745,Verilog,SP-22-CECS-341-Lab-4,16532,0,2022-09-17 10:17:53+00:00,[],None
569,https://github.com/MahmoudH2000/Low_Power_Communacation_System.git,2022-09-17 10:55:46+00:00,,0,MahmoudH2000/Low_Power_Communacation_System,537779864,Verilog,Low_Power_Communacation_System,2248,0,2022-09-17 11:05:24+00:00,[],None
570,https://github.com/educhielle/MessageExtractor.git,2022-09-17 19:24:24+00:00,,0,educhielle/MessageExtractor,537909762,Verilog,MessageExtractor,820,0,2022-09-19 23:16:08+00:00,[],https://api.github.com/licenses/gpl-3.0
571,https://github.com/ZhuohaoXu/ECE-385---Digital-Systems-Laboratory.git,2022-09-23 03:15:14+00:00,"Design, build, and test digital systems using transistor-transistor logic (TTL), SystemVerilog, and field-programmable gate arrays (FPGAs). Topics include combinational and sequential logic, storage elements, input/output and display, timing analysis, design tradeoffs, synchronous and asynchronous design methods, datapath and controller, microprocessor design, software/hardware co-design, and system-on-a-chip. ",0,ZhuohaoXu/ECE-385---Digital-Systems-Laboratory,540260999,,ECE-385---Digital-Systems-Laboratory,59685,0,2022-09-21 23:42:02+00:00,[],None
572,https://github.com/Jerry0708/ICC_2016_grad_cell.git,2022-09-26 16:45:21+00:00,,0,Jerry0708/ICC_2016_grad_cell,541687711,Verilog,ICC_2016_grad_cell,35,0,2022-09-26 16:47:14+00:00,[],None
573,https://github.com/brucechanglongxu/ComputerArch.git,2022-09-26 17:07:06+00:00,Projects in Computer Architecture,0,brucechanglongxu/ComputerArch,541696622,Verilog,ComputerArch,3,0,2022-09-26 17:07:30+00:00,[],None
574,https://github.com/jefferyxu1/Multihat-Gaussian-Random-Number-Generator.git,2022-10-04 13:52:23+00:00,,0,jefferyxu1/Multihat-Gaussian-Random-Number-Generator,545509910,Verilog,Multihat-Gaussian-Random-Number-Generator,445,0,2023-01-17 07:57:54+00:00,[],None
