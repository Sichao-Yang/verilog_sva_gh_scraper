,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/Mazamars312/Analogue_Pocket_Neogeo.git,2022-08-01 05:32:46+00:00,Analogue Pocket Neogeo Core compatible with openFPGA,11,Mazamars312/Analogue_Pocket_Neogeo,519976326,Verilog,Analogue_Pocket_Neogeo,152641,241,2024-04-08 08:34:04+00:00,[],None
1,https://github.com/spacemen3/PDP-1.git,2022-07-29 11:03:04+00:00,,3,spacemen3/PDP-1,519183085,Verilog,PDP-1,2341,101,2024-04-07 21:52:43+00:00,['openfpga'],https://api.github.com/licenses/mit
2,https://github.com/open-fpga/core-template.git,2022-07-29 08:31:58+00:00,A template for getting started with FPGA core development,12,open-fpga/core-template,519140306,Verilog,core-template,676,101,2024-04-10 22:09:06+00:00,['openfpga'],None
3,https://github.com/TinyTapeout/tinytapeout-mpw7.git,2022-08-02 09:13:36+00:00,TinyTapeout-01 submission repo,6,TinyTapeout/tinytapeout-mpw7,520428138,Verilog,tinytapeout-mpw7,185275,28,2024-03-26 15:21:22+00:00,[],https://api.github.com/licenses/apache-2.0
4,https://github.com/hizbi-github/AXI4_Master_Interconnect_Slave.git,2022-08-10 12:24:13+00:00,"A generic implementation of AMBA AXI4 communication protocol. The design provides a master, a slave and an interconnect with multiple masters arbitration.  Simulation waveforms are also included.",3,hizbi-github/AXI4_Master_Interconnect_Slave,523333430,Verilog,AXI4_Master_Interconnect_Slave,2475,22,2024-04-06 09:31:21+00:00,[],https://api.github.com/licenses/mit
5,https://github.com/mabrains/PLL_design.git,2022-07-27 05:46:18+00:00,PLL Designs on Skywater 130nm MPW,0,mabrains/PLL_design,518325211,Verilog,PLL_design,1007480,17,2024-01-31 09:16:37+00:00,[],https://api.github.com/licenses/agpl-3.0
6,https://github.com/DOUDIU/Hardware-Implementation-of-the-Canny-Edge-Detection-Algorithm.git,2022-07-28 10:27:12+00:00,"The Canny Edge Detection algorithm is implemented on an FPGA using only Verilog code and no Intellectual Property, making it convenient to replicate using any simulator and any of the available FPGA boards, including those from Xilinx and Altera.",0,DOUDIU/Hardware-Implementation-of-the-Canny-Edge-Detection-Algorithm,518800339,Verilog,Hardware-Implementation-of-the-Canny-Edge-Detection-Algorithm,39656,17,2024-04-09 09:56:38+00:00,"['canny', 'fpga', 'modelsim', 'vivado']",None
7,https://github.com/ika-musume/ASIC_reverse.git,2022-08-04 03:06:11+00:00,Gate array reverse engineering,2,ika-musume/ASIC_reverse,521105068,Verilog,ASIC_reverse,80868,17,2024-04-07 19:50:53+00:00,[],https://api.github.com/licenses/bsd-2-clause
8,https://github.com/accomdemy/accomdemy_rv32i.git,2022-08-02 14:06:04+00:00,伴伴學 RISC-V RV32I Architecture CPU,8,accomdemy/accomdemy_rv32i,520523302,Verilog,accomdemy_rv32i,664,16,2024-03-29 06:06:53+00:00,"['riscv', 'rv32i']",None
9,https://github.com/wbbbbbb123/Sram-controller-design-based-on-AHB-bus.git,2022-07-31 09:50:38+00:00,,5,wbbbbbb123/Sram-controller-design-based-on-AHB-bus,519736386,Verilog,Sram-controller-design-based-on-AHB-bus,36,16,2024-04-07 15:41:33+00:00,[],None
10,https://github.com/mbaykenar/mpw7_yonga_soc.git,2022-07-27 13:00:52+00:00,"Yonga-MCU is a 32-bit RISCV-IMC instruction set compatible SoC design with peripherals like UART, SPI and I2C",1,mbaykenar/mpw7_yonga_soc,518460376,Verilog,mpw7_yonga_soc,497443,14,2024-01-30 16:49:00+00:00,[],https://api.github.com/licenses/apache-2.0
11,https://github.com/ika-musume/ikacore_Psychic5.git,2022-08-04 03:05:19+00:00,Psychic 5 compatible core for MiSTer FPGA,4,ika-musume/ikacore_Psychic5,521104862,Verilog,ikacore_Psychic5,4024,13,2023-12-20 02:18:08+00:00,[],https://api.github.com/licenses/gpl-2.0
12,https://github.com/rstar900/Dual-Core-RISC-V-Processor.git,2022-08-07 15:07:58+00:00,A dual core RISC-V processor (using PULP platform SoC) implemented on a Digilent Arty S7-50 FPGA board.,3,rstar900/Dual-Core-RISC-V-Processor,522245283,Verilog,Dual-Core-RISC-V-Processor,24833,11,2024-03-24 16:59:17+00:00,[],None
13,https://github.com/BrianHGinc/Verilog-Floating-Point-Clock-Divider.git,2022-08-10 00:19:14+00:00,Provide / define the INPUT_CLK_HZ parameter and the BHG_FP_clk_divider.v will generate a clock at the specified CLK_OUT_HZ parameter using fractional floating point division.,1,BrianHGinc/Verilog-Floating-Point-Clock-Divider,523146793,Verilog,Verilog-Floating-Point-Clock-Divider,280,11,2024-04-08 11:33:00+00:00,"['clock-generator', 'verilog', 'verilog-components', 'verilog-hdl']",None
14,https://github.com/wbbbbbb123/UVM-based-AHB-bus-SRAM-controller-design-verification-platform-design.git,2022-08-11 01:10:55+00:00,,1,wbbbbbb123/UVM-based-AHB-bus-SRAM-controller-design-verification-platform-design,523544594,Verilog,UVM-based-AHB-bus-SRAM-controller-design-verification-platform-design,1352,11,2024-03-28 15:23:10+00:00,[],None
15,https://github.com/zf3/some-tang-nano-9k-examples.git,2022-08-07 07:49:40+00:00,Code examples for Sipeed Tang Nano 9K FPGA board including HDMI 720p and PSRAM controller usage.,0,zf3/some-tang-nano-9k-examples,522149450,Verilog,some-tang-nano-9k-examples,332,9,2024-04-08 19:19:58+00:00,[],https://api.github.com/licenses/apache-2.0
16,https://github.com/mwrnd/innova2_experiments.git,2022-08-02 09:44:20+00:00,Works in Progress and Experiments for the Innova-2 Flex XCKU15P-based Board,2,mwrnd/innova2_experiments,520437986,Verilog,innova2_experiments,35357,7,2024-01-20 20:43:50+00:00,"['xdma', 'xdma-stream']",None
17,https://github.com/ptrkrysik/uhd.git,2022-08-03 14:28:43+00:00,USRP Hardware Driver Repository,2,ptrkrysik/uhd,520914331,Verilog,uhd,135177,5,2024-03-26 17:56:14+00:00,[],
18,https://github.com/aashish-tiwary/iiitb_alu.git,2022-08-03 10:30:13+00:00,,0,aashish-tiwary/iiitb_alu,520835816,Verilog,iiitb_alu,6946,5,2023-12-17 06:06:51+00:00,[],None
19,https://github.com/vinayrayapati/rv32i.git,2022-07-27 04:09:27+00:00,Implementation of RISC-V RV32I ,2,vinayrayapati/rv32i,518304577,Verilog,rv32i,4457,5,2024-04-06 15:05:58+00:00,[],https://api.github.com/licenses/mit
20,https://github.com/DantuNandiniDevi/iiitb_freqdiv.git,2022-07-27 04:14:40+00:00,This is a frequency divider model,11,DantuNandiniDevi/iiitb_freqdiv,518305676,Verilog,iiitb_freqdiv,14258,5,2023-08-17 03:20:20+00:00,[],https://api.github.com/licenses/mit
21,https://github.com/OpenPOWERFoundation/Searchboat.git,2022-08-03 13:58:22+00:00,OpenPower Verification,2,OpenPOWERFoundation/Searchboat,520902912,Verilog,Searchboat,116509,5,2023-11-23 14:31:14+00:00,[],
22,https://github.com/McLucifer2646/iiitb_sd.git,2022-08-05 07:39:59+00:00,,0,McLucifer2646/iiitb_sd,521548174,Verilog,iiitb_sd,28425,4,2023-10-15 08:34:17+00:00,[],None
23,https://github.com/MiSTer-devel/Arcade-IkariWarriors_MiSTer.git,2022-08-03 11:30:31+00:00,,4,MiSTer-devel/Arcade-IkariWarriors_MiSTer,520853465,Verilog,Arcade-IkariWarriors_MiSTer,103519,4,2023-01-06 22:09:59+00:00,[],https://api.github.com/licenses/gpl-2.0
24,https://github.com/MuhammadMajiid/UART.git,2022-08-04 14:27:42+00:00,UART implementation using verilog,1,MuhammadMajiid/UART,521298512,Verilog,UART,410,4,2024-02-04 17:50:22+00:00,[],None
25,https://github.com/PashaBarahimi/Digital-Logic-Design-Lab-Experiments.git,2022-08-02 12:22:50+00:00,"Clock and UART Baud rate generation, radix-4 multiplier, function generator & accelerator wrappers.",3,PashaBarahimi/Digital-Logic-Design-Lab-Experiments,520487363,Verilog,Digital-Logic-Design-Lab-Experiments,10376,4,2024-01-06 01:37:26+00:00,"['fpga', 'radix-4', 'baud-rate', 'clock-generator', 'digital-logic-design', 'digital-logic-design-lab', 'function-generator']",https://api.github.com/licenses/mit
26,https://github.com/yuex1994/ICCAD22_composition.git,2022-08-09 05:35:59+00:00,,0,yuex1994/ICCAD22_composition,522816232,Verilog,ICCAD22_composition,4547,4,2023-10-27 09:50:48+00:00,[],None
27,https://github.com/omerk/tinytapeout-verilog-test.git,2022-08-13 16:46:32+00:00,,33,omerk/tinytapeout-verilog-test,524455192,Verilog,tinytapeout-verilog-test,15,4,2023-03-18 03:54:56+00:00,[],https://api.github.com/licenses/apache-2.0
28,https://github.com/TangtangSix/ov5640.git,2022-07-29 01:38:14+00:00,基于ov5640摄像头的实时显示,1,TangtangSix/ov5640,519044582,Verilog,ov5640,703,4,2023-10-10 07:10:43+00:00,[],None
29,https://github.com/Mehedi-Hasan-Shakil/Verilog.git,2022-08-02 17:17:24+00:00,Digital System Design Lab with Verilog,1,Mehedi-Hasan-Shakil/Verilog,520586560,Verilog,Verilog,959,3,2023-06-25 10:45:40+00:00,[],None
30,https://github.com/SaurabhKumar1611/Electronic-Voting-Machine.git,2022-08-09 13:18:38+00:00,Implementation of Electronic Voting Machine on FPGA board as part of Digital Design Project,0,SaurabhKumar1611/Electronic-Voting-Machine,522958066,Verilog,Electronic-Voting-Machine,6,3,2022-11-02 13:56:44+00:00,[],None
31,https://github.com/edwardrichter1/qilin.git,2022-08-01 02:25:16+00:00,,0,edwardrichter1/qilin,519938337,Verilog,qilin,1276,3,2023-04-22 06:26:36+00:00,[],None
32,https://github.com/devchadha-jmi/HDL-Bits-Solutions.git,2022-08-09 17:38:05+00:00,Adding solutions of problems I have solved so far on HDLBits. Hope this helps :-),0,devchadha-jmi/HDL-Bits-Solutions,523049913,Verilog,HDL-Bits-Solutions,90,3,2023-08-16 06:22:32+00:00,[],https://api.github.com/licenses/mit
33,https://github.com/amsacks/OV7670-camera.git,2022-08-02 06:21:58+00:00,"A RTL-based project in Verilog that shows real-time video captured by a CMOS camera OV7670 and displayed on a monitor through VGA at 640 x 480 resolution, 30 fps.",0,amsacks/OV7670-camera,520376792,Verilog,OV7670-camera,3041,3,2024-01-08 05:57:13+00:00,"['fpga', 'verilog', 'video', 'ov7670', 'rtl']",None
34,https://github.com/muse-coder/single-port-FIFO.git,2022-08-12 09:46:20+00:00,single port FIFO ，read and write simultaneously,1,muse-coder/single-port-FIFO,524033753,Verilog,single-port-FIFO,11,3,2024-01-16 05:54:05+00:00,[],None
35,https://github.com/T-K-233/BLI-RISC-V-CPU.git,2022-07-30 08:16:25+00:00,,0,T-K-233/BLI-RISC-V-CPU,519458744,Verilog,BLI-RISC-V-CPU,121,3,2024-04-01 14:06:20+00:00,[],https://api.github.com/licenses/mit
36,https://github.com/1mina1/Washing-machine-verilog.git,2022-08-11 16:43:27+00:00,this a multiclock washing machine microcontroller(FSM) done using verilog,0,1mina1/Washing-machine-verilog,523798446,Verilog,Washing-machine-verilog,7,3,2023-12-15 12:18:15+00:00,[],None
37,https://github.com/sohammjkr/ECE-385.git,2022-07-29 21:33:25+00:00,Projects from ECE385 taken during the SP22 Semester at UIUC,1,sohammjkr/ECE-385,519354647,Verilog,ECE-385,16305,3,2023-09-20 02:32:19+00:00,[],None
38,https://github.com/RainSureZhao/Buaa-P4.git,2022-07-27 16:23:35+00:00,北京航空航天大学计算机组成原理实验P4阶段——单周期CPU,0,RainSureZhao/Buaa-P4,518532132,Verilog,Buaa-P4,2098,2,2023-03-29 08:33:59+00:00,[],None
39,https://github.com/dzx-dzx/UDP.git,2022-07-31 14:56:56+00:00,,0,dzx-dzx/UDP,519805901,Verilog,UDP,99276,2,2023-03-20 02:09:45+00:00,[],https://api.github.com/licenses/apache-2.0
40,https://github.com/shuvipas/step-motor-controller.git,2022-07-27 14:54:54+00:00,FPGA project to create a step motor contrller,1,shuvipas/step-motor-controller,518501448,Verilog,step-motor-controller,1997,2,2023-07-13 00:44:21+00:00,[],None
41,https://github.com/marziehbagherinia/ARM-Processor-Implementation.git,2022-08-10 17:56:11+00:00,This repository contains ARM processor implementation!,0,marziehbagherinia/ARM-Processor-Implementation,523444999,Verilog,ARM-Processor-Implementation,1517,2,2024-03-07 08:30:44+00:00,[],None
42,https://github.com/suysh-msra/iiitb_ptvm.git,2022-07-27 04:15:11+00:00,a parking ticket vending machine simulated in verilog. ,0,suysh-msra/iiitb_ptvm,518305793,Verilog,iiitb_ptvm,4414,2,2023-01-29 18:11:25+00:00,[],https://api.github.com/licenses/mit
43,https://github.com/os-fpga/IP_Catalog.git,2022-08-03 04:58:30+00:00,IP Catalog for Raptor.,6,os-fpga/IP_Catalog,520743073,Verilog,IP_Catalog,84577,2,2024-02-24 10:56:05+00:00,['sw'],
44,https://github.com/ntsdwkr/MIPS.git,2022-07-30 16:30:21+00:00,Single Cycle MIPS (RISC) Processor,0,ntsdwkr/MIPS,519567026,Verilog,MIPS,1147,2,2024-03-05 14:25:36+00:00,"['mips', 'mips32', 'risc', 'risc-v', 'single-cycle-processor', 'verilog']",https://api.github.com/licenses/mit
45,https://github.com/YASHWANT98/iiitb_r2_4bit_bm.git,2022-08-13 17:00:11+00:00,,1,YASHWANT98/iiitb_r2_4bit_bm,524458365,Verilog,iiitb_r2_4bit_bm,11591,2,2024-03-08 13:58:44+00:00,[],https://api.github.com/licenses/mit
46,https://github.com/faris771/VERILOG_PROJECT.git,2022-08-08 18:02:40+00:00,,0,faris771/VERILOG_PROJECT,522655822,Verilog,VERILOG_PROJECT,1108,2,2023-02-11 00:57:56+00:00,[],None
47,https://github.com/NabilYasser/UART_TX.git,2022-07-28 15:28:29+00:00,,0,NabilYasser/UART_TX,518899921,Verilog,UART_TX,637,2,2022-08-20 11:57:08+00:00,[],None
48,https://github.com/Zannatul-Naim/Digital-System-Design.git,2022-08-01 15:54:21+00:00,Digital System Design Lab Codes using Verilog,0,Zannatul-Naim/Digital-System-Design,520173235,Verilog,Digital-System-Design,54,2,2022-09-05 09:28:59+00:00,"['adder', 'full-adder', 'half-adder', 'ripple-carry-adder', 'verilog', 'd-flipflop', 'flipflop', 'jk-flipflop', 't-flipflop']",None
49,https://github.com/ishan-desai64/iiitb_cps.git,2022-07-31 16:40:14+00:00,Car Parking System,0,ishan-desai64/iiitb_cps,519831524,Verilog,iiitb_cps,2409,2,2023-02-22 13:07:47+00:00,[],https://api.github.com/licenses/mit
50,https://github.com/harshitthakur7168/Verilog_Journey.git,2022-08-11 17:10:46+00:00,,0,harshitthakur7168/Verilog_Journey,523806625,Verilog,Verilog_Journey,952,2,2022-08-15 17:52:09+00:00,[],None
51,https://github.com/brscn2/bil265-project.git,2022-08-08 21:39:13+00:00,BIL265 - Calculator on Basys 3 Project using Verilog,0,brscn2/bil265-project,522714843,Verilog,bil265-project,44631,2,2022-08-29 20:44:33+00:00,[],None
52,https://github.com/nouralmulhem/Serial-peripheral-interface.git,2022-08-09 17:10:58+00:00,,1,nouralmulhem/Serial-peripheral-interface,523041102,Verilog,Serial-peripheral-interface,671,2,2024-03-22 22:11:30+00:00,[],None
53,https://github.com/yangtiming/Digital-circuit-course-design.git,2022-07-28 10:32:19+00:00,Digital circuit course design Digital clock,0,yangtiming/Digital-circuit-course-design,518802003,Verilog,Digital-circuit-course-design,2802,2,2022-08-03 13:41:23+00:00,"['digital-clock', 'verilog']",None
54,https://github.com/ducamvinh/QuantLaneNet.git,2022-07-27 03:04:11+00:00,QuantLaneNet: A 640-FPS and 34-GOPS/W FPGA-Based CNN Accelerator for Lane Detection (Sensors 2023),1,ducamvinh/QuantLaneNet,518290315,Verilog,QuantLaneNet,3644,2,2023-12-28 13:40:12+00:00,[],https://api.github.com/licenses/gpl-3.0
55,https://github.com/omerk/tinytapeout-demo1.git,2022-08-11 21:38:42+00:00,,1,omerk/tinytapeout-demo1,523875812,Verilog,tinytapeout-demo1,9,2,2022-12-08 20:47:59+00:00,[],https://api.github.com/licenses/apache-2.0
56,https://github.com/dd-jero/Digital-System-Capstone-Design.git,2022-08-05 04:28:09+00:00,Convolution Layer 구현 (CNN),0,dd-jero/Digital-System-Capstone-Design,521502156,Verilog,Digital-System-Capstone-Design,29,2,2024-01-27 15:32:14+00:00,"['convolution-layer', 'verilog-project']",None
57,https://github.com/Shreyas-Gupta-21/16-Bit-Wallace-Tree-Multiplier.git,2022-08-01 12:23:33+00:00,,0,Shreyas-Gupta-21/16-Bit-Wallace-Tree-Multiplier,520099441,Verilog,16-Bit-Wallace-Tree-Multiplier,3,2,2023-07-14 04:37:53+00:00,[],None
58,https://github.com/RainSureZhao/Buaa-P5.git,2022-07-29 09:40:24+00:00,北京航空航天大学 计算机组成原理实验 P5——五级流水CPU,0,RainSureZhao/Buaa-P5,519160220,Verilog,Buaa-P5,1272,2,2023-03-29 08:33:59+00:00,[],None
59,https://github.com/prachurjyaghy/Physical-Design-using-OpenLANE-SKY130.git,2022-08-03 14:44:14+00:00,Advanced Physical Design Workshop using OpenLANE/SKY130,0,prachurjyaghy/Physical-Design-using-OpenLANE-SKY130,520920138,Verilog,Physical-Design-using-OpenLANE-SKY130,11812,2,2023-11-11 08:39:33+00:00,[],None
60,https://github.com/MohamedAliYounis/ASU_GP22.git,2022-08-07 20:05:21+00:00,,0,MohamedAliYounis/ASU_GP22,522312766,Verilog,ASU_GP22,151024,2,2023-07-21 13:24:19+00:00,[],https://api.github.com/licenses/apache-2.0
61,https://github.com/marziehbagherinia/MIPS-Processor-Implementation.git,2022-08-10 10:36:11+00:00,"This repository contains MIPS processor implementation in single cycle, multi cycle, and pipeline mode!",0,marziehbagherinia/MIPS-Processor-Implementation,523301117,Verilog,MIPS-Processor-Implementation,1249,2,2024-03-07 08:30:51+00:00,[],None
62,https://github.com/mbaykenar/mba_core_region.git,2022-08-04 05:24:46+00:00,A hardened macro with sky130B PDK of slightly modified zero-riscy RISC-V core ,1,mbaykenar/mba_core_region,521134126,Verilog,mba_core_region,53173,2,2023-12-10 16:46:49+00:00,[],None
63,https://github.com/Lukas0025/AproximatedTensorProcesorUnit.git,2022-08-11 14:00:11+00:00,Minimalistic Tensor Procesor Unit (TPU) writed in verilog for FPGAs and ASICs,0,Lukas0025/AproximatedTensorProcesorUnit,523744529,Verilog,AproximatedTensorProcesorUnit,35,2,2024-04-11 02:11:30+00:00,[],https://api.github.com/licenses/gpl-3.0
64,https://github.com/GuTaoZi/CS211_Project_Flappy_Bird.git,2022-08-07 16:42:14+00:00,Flappy Bird running on FPGA. Project for SUSTech CS211 Digital Logic(H). ,0,GuTaoZi/CS211_Project_Flappy_Bird,522268287,Verilog,CS211_Project_Flappy_Bird,15251,2,2023-11-23 10:43:08+00:00,[],https://api.github.com/licenses/gpl-3.0
65,https://github.com/IanBoyanZhang/SystolicArrayMPW7a.git,2022-07-28 02:07:35+00:00,,0,IanBoyanZhang/SystolicArrayMPW7a,518669498,Verilog,SystolicArrayMPW7a,20950,2,2023-03-05 05:40:59+00:00,[],https://api.github.com/licenses/apache-2.0
66,https://github.com/pikamonvvs/UART-Controller.git,2022-08-06 06:34:01+00:00,A 8bit UART controller verilog implementation,0,pikamonvvs/UART-Controller,521867481,Verilog,UART-Controller,1436,2,2024-02-24 16:44:57+00:00,[],https://api.github.com/licenses/mit
67,https://github.com/marziehbagherinia/DigitalLogicDesign-Course-Projects.git,2022-08-10 08:19:45+00:00,This repository contains my Digital Logic Design Course Projects,0,marziehbagherinia/DigitalLogicDesign-Course-Projects,523259147,Verilog,DigitalLogicDesign-Course-Projects,27938,2,2024-03-07 08:30:52+00:00,[],None
68,https://github.com/fatmaVural/workspace.git,2022-07-28 20:32:58+00:00,Basic projects about Quartus-Verilog,0,fatmaVural/workspace,518986860,Verilog,workspace,13023,1,2022-08-22 17:43:29+00:00,[],None
69,https://github.com/ribeirowski/IF675_SistemasDigitais.git,2022-08-01 20:14:19+00:00,Repositório dedicado ao Projeto da Disciplina de Sistemas Digitais (IF675),1,ribeirowski/IF675_SistemasDigitais,520249897,Verilog,IF675_SistemasDigitais,29163,1,2022-12-16 04:23:38+00:00,[],None
70,https://github.com/qmac333/wordle-processor.git,2022-08-06 18:33:14+00:00,"Created Wordle using Vivado, a VGA Screen, a processor that I created in Verilog, and some custom MIPS code to run on the processor.",0,qmac333/wordle-processor,522025372,Verilog,wordle-processor,1979,1,2022-10-08 09:47:49+00:00,[],None
71,https://github.com/lulu0521/ysyx_3.git,2022-07-29 08:09:29+00:00,,0,lulu0521/ysyx_3,519133778,Verilog,ysyx_3,4038,1,2023-05-15 08:26:35+00:00,[],None
72,https://github.com/harshitthakur7168/HDL_Bits_Solution.git,2022-08-12 06:34:11+00:00,HDL_Bits _Solution ,0,harshitthakur7168/HDL_Bits_Solution,523980900,Verilog,HDL_Bits_Solution,23,1,2022-08-15 17:52:11+00:00,[],None
73,https://github.com/amamdouhmahfouz/softmax-verilog.git,2022-08-03 21:47:50+00:00,[2020] softmax activation function written in verilog,0,amamdouhmahfouz/softmax-verilog,521041700,Verilog,softmax-verilog,1231,1,2024-03-07 11:08:41+00:00,[],None
74,https://github.com/ahmed-elhoseiny/16-bit-ALU.git,2022-08-10 09:55:07+00:00,,0,ahmed-elhoseiny/16-bit-ALU,523288986,Verilog,16-bit-ALU,572,1,2022-09-06 00:21:48+00:00,[],None
75,https://github.com/Vaibhav-Makkar/FIR_IIR_filter_Verilog.git,2022-08-10 12:45:49+00:00,Implementation of FIR and IIR filters in Verilog HDL ,0,Vaibhav-Makkar/FIR_IIR_filter_Verilog,523340421,Verilog,FIR_IIR_filter_Verilog,6,1,2023-02-03 09:09:19+00:00,[],None
76,https://github.com/Abhsonu143/VLSI-LAB-CODE-IMPLEMENTATIONS.git,2022-07-31 06:04:40+00:00,I have implemented different digital electronics circuit in verilog using VIVADO.,0,Abhsonu143/VLSI-LAB-CODE-IMPLEMENTATIONS,519693742,Verilog,VLSI-LAB-CODE-IMPLEMENTATIONS,9,1,2023-11-21 08:58:36+00:00,[],None
77,https://github.com/TEFSOM/PWMonFPGA.git,2022-07-31 13:38:57+00:00,Verilog HDL code for a triangle wave type PWM module with symmetrical dead time.,0,TEFSOM/PWMonFPGA,519786394,Verilog,PWMonFPGA,33,1,2024-03-09 01:16:39+00:00,[],None
78,https://github.com/RndMnkIII/Arcade-IkariWarriors_MiSTer.git,2022-08-03 09:12:10+00:00,,0,RndMnkIII/Arcade-IkariWarriors_MiSTer,520811519,Verilog,Arcade-IkariWarriors_MiSTer,103516,1,2022-11-17 22:20:23+00:00,[],https://api.github.com/licenses/gpl-2.0
79,https://github.com/newyear2580/107_2_ComputerOrganization_Final.git,2022-08-07 08:31:30+00:00,,0,newyear2580/107_2_ComputerOrganization_Final,522157704,Verilog,107_2_ComputerOrganization_Final,53,1,2023-05-06 07:31:50+00:00,[],None
80,https://github.com/hassanelsman/-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System.git,2022-07-31 20:20:42+00:00,It is responsible of receiving commands through UART receiver to do different system  functions as register file reading/writing or doing some processing using ALU block and send result as  well as CRC bits of result using 4 bytes frame through UART transmitter communication protocol,0,hassanelsman/-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System,519879076,Verilog,-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System,28,1,2022-08-01 02:57:00+00:00,[],None
81,https://github.com/Pankaj1811/iiitb_bidicntr.git,2022-07-27 04:16:44+00:00,Bidirectional Counter,0,Pankaj1811/iiitb_bidicntr,518306084,Verilog,iiitb_bidicntr,4353,1,2023-10-13 03:15:08+00:00,[],https://api.github.com/licenses/mit
82,https://github.com/sprout-uci/CASU.git,2022-08-10 06:59:11+00:00,,1,sprout-uci/CASU,523236004,Verilog,CASU,5407,1,2023-12-06 11:27:11+00:00,[],https://api.github.com/licenses/gpl-3.0
83,https://github.com/Nidhinchandran47/nielit.git,2022-07-28 02:24:57+00:00,miniproject done at nielit calicut while a workshop on fpga architecture,0,Nidhinchandran47/nielit,518673260,Verilog,nielit,21,1,2023-03-25 16:26:14+00:00,[],None
84,https://github.com/SiddhantNayak5/iiitb_vm.git,2022-07-27 04:06:51+00:00,,1,SiddhantNayak5/iiitb_vm,518304021,Verilog,iiitb_vm,2502,1,2023-01-29 17:55:43+00:00,[],None
85,https://github.com/patelshubham26/ring-counter.git,2022-08-04 15:04:07+00:00,,0,patelshubham26/ring-counter,521311061,Verilog,ring-counter,184,1,2022-08-05 09:23:56+00:00,[],None
86,https://github.com/saifrahmania/CircuitSimulation.git,2022-08-04 14:21:26+00:00,"Problem statement: We will have to design a BCD to Express-3 code generator. Where it will have 4 bit input (a,b,c and d) and 4 bit output (w,x,y and z). The access-3 code generator will take 4bit input by its 4 input pins and the output pin will give the output in binary value. As it is a BCD access-3 code generator, it will take input between 0 and 9; for input 0(0000),1(0001),2(0010) output will be 3(0011),4(0100),5(0101) respectively.",0,saifrahmania/CircuitSimulation,521296282,Verilog,CircuitSimulation,541,1,2023-07-24 01:44:13+00:00,[],None
87,https://github.com/himanshu1308/iiitb_pwm.git,2022-08-07 05:15:11+00:00,,1,himanshu1308/iiitb_pwm,522122051,Verilog,iiitb_pwm,17008,1,2022-10-30 17:46:06+00:00,[],https://api.github.com/licenses/mit
88,https://github.com/kaushanr/System-Bus-Design.git,2022-08-07 07:30:19+00:00,Design of a system bus architecture - Team Project @ ENTC UoM,2,kaushanr/System-Bus-Design,522145661,Verilog,System-Bus-Design,10638,1,2022-09-17 12:04:27+00:00,"['amba-apb', 'verilog-hdl', 'xilinx-ise']",https://api.github.com/licenses/mit
89,https://github.com/rakshit-23/iiitb_usr.git,2022-07-27 11:26:06+00:00,,0,rakshit-23/iiitb_usr,518429303,Verilog,iiitb_usr,9118,1,2024-03-02 08:04:41+00:00,[],https://api.github.com/licenses/mit
90,https://github.com/HelloKayT/sabana_sha_test.git,2022-08-09 17:24:33+00:00,Sabana SHA accelerator integration example,1,HelloKayT/sabana_sha_test,523045455,Verilog,sabana_sha_test,20,1,2022-08-10 14:48:36+00:00,[],None
91,https://github.com/Emmanuel-Innocent/Round_Robin_Arbiter.git,2022-08-08 12:37:06+00:00,"This is the design of a work-conserving Round Robin Arbiter, with four (4) request queues. This was implemented on an FPGA(DE10-Lite).",0,Emmanuel-Innocent/Round_Robin_Arbiter,522542985,Verilog,Round_Robin_Arbiter,261,1,2023-02-14 20:31:06+00:00,"['scheduling-algorithms', 'vlsi-design', 'embedded-systems', 'fpga']",https://api.github.com/licenses/gpl-3.0
92,https://github.com/itsnishit/iiitb_elc.git,2022-07-27 04:13:22+00:00,ELC is abbreviation for Elevation Controller,0,itsnishit/iiitb_elc,518305463,Verilog,iiitb_elc,2281,1,2023-01-29 18:05:02+00:00,[],https://api.github.com/licenses/mit
93,https://github.com/mattvenn/wokwi_filler.git,2022-08-09 08:05:23+00:00,,0,mattvenn/wokwi_filler,522857898,Verilog,wokwi_filler,13,1,2022-10-23 17:18:52+00:00,[],https://api.github.com/licenses/apache-2.0
94,https://github.com/krzyslov/projekt_uec2.git,2022-08-03 07:21:05+00:00,,1,krzyslov/projekt_uec2,520778112,Verilog,projekt_uec2,59465,1,2023-06-15 14:32:45+00:00,[],None
95,https://github.com/Ayyappa1911/Systolic-Array-Implementation-for-3x3-Matrix-Multiplication.git,2022-08-05 10:53:34+00:00,,0,Ayyappa1911/Systolic-Array-Implementation-for-3x3-Matrix-Multiplication,521602962,Verilog,Systolic-Array-Implementation-for-3x3-Matrix-Multiplication,830,1,2024-02-08 15:51:27+00:00,[],None
96,https://github.com/omohey/RISC-V-Processor.git,2022-08-03 20:17:21+00:00,Verilog RISC-V processor on Nexys 100T board,0,omohey/RISC-V-Processor,521019809,Verilog,RISC-V-Processor,11,1,2024-03-06 07:43:21+00:00,[],None
97,https://github.com/pranav1751/iiitb_pwm.git,2022-08-08 17:28:50+00:00,This project simulates a variable duty cycle PWM signal generator with verilog.,0,pranav1751/iiitb_pwm,522645181,Verilog,iiitb_pwm,14344,1,2024-03-14 01:42:29+00:00,[],None
98,https://github.com/prajwal0718/Synchronous-FIFO.git,2022-08-02 17:48:02+00:00,Verilog and systemverilog projects,0,prajwal0718/Synchronous-FIFO,520596147,Verilog,Synchronous-FIFO,18,1,2022-08-05 11:38:20+00:00,[],https://api.github.com/licenses/mit
99,https://github.com/xobs/test-chip-digital.git,2022-08-01 11:08:48+00:00,Test chip using a digital device,0,xobs/test-chip-digital,520076212,Verilog,test-chip-digital,2229,1,2022-08-01 21:34:17+00:00,[],https://api.github.com/licenses/apache-2.0
100,https://github.com/Muhamed-Sayed/32-Point-Radix-2-FFT-architecture.git,2022-08-08 13:17:14+00:00,based on Cooley and Tukey algorithm,1,Muhamed-Sayed/32-Point-Radix-2-FFT-architecture,522556781,Verilog,32-Point-Radix-2-FFT-architecture,6184,1,2022-08-15 07:45:59+00:00,[],None
101,https://github.com/mattvenn/tinytapeout_demo.git,2022-08-11 10:07:43+00:00,,0,mattvenn/tinytapeout_demo,523673874,Verilog,tinytapeout_demo,7,1,2022-08-27 23:00:33+00:00,[],https://api.github.com/licenses/apache-2.0
102,https://github.com/BalaDhinesh/Bitonic-Sorting-In-Verilog.git,2022-07-27 13:18:00+00:00,Bitonic Sorting in Verilog which sorts any number of elements which are a power of two,1,BalaDhinesh/Bitonic-Sorting-In-Verilog,518466015,Verilog,Bitonic-Sorting-In-Verilog,11,1,2023-05-03 23:10:14+00:00,[],https://api.github.com/licenses/mit
103,https://github.com/Daniel20010822/IC-Contest-Cell-Based.git,2022-07-30 13:29:57+00:00,,0,Daniel20010822/IC-Contest-Cell-Based,519524206,Verilog,IC-Contest-Cell-Based,3327,1,2024-01-10 12:49:18+00:00,[],None
104,https://github.com/alyaamoh/Low-Power-Configurable-Multi-Clock-Digital-System.git,2022-07-29 13:10:53+00:00,It is in charge of receiving commands through a UART RX to do system functions as register file R/W or doing some processing using ALU block and send result with CRC bits using 4-Bytes frame with UART TX.,0,alyaamoh/Low-Power-Configurable-Multi-Clock-Digital-System,519219656,Verilog,Low-Power-Configurable-Multi-Clock-Digital-System,1152,1,2022-09-16 19:00:03+00:00,[],None
105,https://github.com/sudhua/HDLBits.git,2022-07-30 14:21:47+00:00,,0,sudhua/HDLBits,519536489,Verilog,HDLBits,19,1,2022-07-30 14:38:24+00:00,[],https://api.github.com/licenses/gpl-3.0
106,https://github.com/vyomasystems-lab/challenges-arpit306.git,2022-07-28 20:40:04+00:00,challenges-arpit306 created by GitHub Classroom,0,vyomasystems-lab/challenges-arpit306,518988494,Verilog,challenges-arpit306,383,1,2022-09-13 13:09:35+00:00,[],https://api.github.com/licenses/gpl-2.0
107,https://github.com/wokwi/tiny-tapeout-test-simple.git,2022-08-09 08:45:02+00:00,7 Segment GDS fun,0,wokwi/tiny-tapeout-test-simple,522870247,Verilog,tiny-tapeout-test-simple,6,1,2022-08-28 15:39:03+00:00,[],https://api.github.com/licenses/apache-2.0
108,https://github.com/renau/bazel_rules_hdl_test.git,2022-08-12 19:50:55+00:00,Several tests for bazel_rules_hdl,0,renau/bazel_rules_hdl_test,524208019,Verilog,bazel_rules_hdl_test,78,1,2023-09-15 14:29:56+00:00,[],https://api.github.com/licenses/apache-2.0
109,https://github.com/phamquanganhBKSET/risc_v.git,2022-08-02 08:13:05+00:00,"RISC-V 5 stages pipeline IF, ID, EX, MEM, WB with forwarding, stalling and branch prediction",0,phamquanganhBKSET/risc_v,520409601,Verilog,risc_v,4017,1,2024-01-30 06:49:59+00:00,[],None
110,https://github.com/ishan-desai64/iiitb_apb.git,2022-07-27 04:10:07+00:00,ASIC Design Flow of Advance Peripheral Bus(APB),0,ishan-desai64/iiitb_apb,518304758,Verilog,iiitb_apb,2349,1,2023-01-29 18:01:08+00:00,[],https://api.github.com/licenses/mit
111,https://github.com/MiskaMoska/simMTR.git,2022-07-29 15:54:19+00:00,"Simulation code for the paper ""Fast turn restriction algorithm to build deadlock-free modular chiplet integration systems""  in ICCS 2022",0,MiskaMoska/simMTR,519270838,Verilog,simMTR,193,1,2022-10-28 05:44:40+00:00,[],None
112,https://github.com/drvasanthi/iiitb_cg.git,2022-07-27 04:10:43+00:00,,1,drvasanthi/iiitb_cg,518304910,Verilog,iiitb_cg,9344,1,2022-11-06 17:12:34+00:00,[],None
113,https://github.com/soheil1156/PCI-FPGA.git,2022-08-05 18:07:42+00:00,PCI FPGA SYSTEM #verilog,0,soheil1156/PCI-FPGA,521734246,Verilog,PCI-FPGA,41,1,2023-05-17 05:00:45+00:00,[],None
114,https://github.com/shaswat2428/MIPS-32-Processor.git,2022-08-07 16:03:24+00:00,MIPS 32 Processor Architecture design using Verilog,0,shaswat2428/MIPS-32-Processor,522259005,Verilog,MIPS-32-Processor,65,1,2022-11-10 10:27:07+00:00,[],None
115,https://github.com/Phillrb/atari_wcc.git,2022-08-08 08:24:06+00:00,MiSTer core of Atari WCC PCB used by Goal IV and World Cup (Coupe Du Monde),0,Phillrb/atari_wcc,522464179,Verilog,atari_wcc,91,1,2022-09-03 07:01:09+00:00,[],https://api.github.com/licenses/gpl-2.0
116,https://github.com/rkvaishnavp/YARC.git,2022-08-10 05:07:09+00:00,,0,rkvaishnavp/YARC,523208150,Verilog,YARC,215,1,2023-05-26 14:06:36+00:00,[],None
117,https://github.com/nitinshrinivas/Y86-64-Processor.git,2022-07-30 13:23:25+00:00,Design the Intel Y86-64 Processor using Verilog,0,nitinshrinivas/Y86-64-Processor,519522625,Verilog,Y86-64-Processor,1653,1,2022-07-31 15:49:40+00:00,[],None
118,https://github.com/norhanreda/solutions-of-CMP1030_Advanced_logic_design_labs-.git,2022-08-11 09:34:06+00:00,its my solutions to advanced logic designs labs in college,0,norhanreda/solutions-of-CMP1030_Advanced_logic_design_labs-,523663438,Verilog,solutions-of-CMP1030_Advanced_logic_design_labs-,3253,1,2022-08-11 09:53:15+00:00,[],None
119,https://github.com/ParasVekariya/iiitb_sd.git,2022-08-08 06:18:09+00:00,,0,ParasVekariya/iiitb_sd,522428341,Verilog,iiitb_sd,32734,1,2024-03-13 05:04:19+00:00,[],None
120,https://github.com/kareemelsaed/UART_main.git,2022-08-11 14:38:50+00:00,,0,kareemelsaed/UART_main,523758072,Verilog,UART_main,6,1,2023-02-11 21:56:06+00:00,[],None
121,https://github.com/NabilYasser/UART_RX.git,2022-07-28 15:12:16+00:00,,0,NabilYasser/UART_RX,518894426,Verilog,UART_RX,699,1,2022-08-20 11:57:13+00:00,[],None
122,https://github.com/yangtiming/Digital-circuit-and-system-experiment.git,2022-07-28 10:02:18+00:00,Digital circuit and system experiment,0,yangtiming/Digital-circuit-and-system-experiment,518792791,Verilog,Digital-circuit-and-system-experiment,41328,1,2022-07-28 16:09:44+00:00,['verilog-hdl'],None
123,https://github.com/RahulV-24/Communication_Protocols.git,2022-07-31 07:49:18+00:00,Design Communication Protocols using Verilog HDL,0,RahulV-24/Communication_Protocols,519712014,Verilog,Communication_Protocols,143,1,2023-09-05 12:16:05+00:00,[],None
124,https://github.com/Gogireddyravikiran/iiitb_sd_fsm.git,2022-07-27 04:11:05+00:00,,2,Gogireddyravikiran/iiitb_sd_fsm,518304992,Verilog,iiitb_sd_fsm,2594,1,2022-09-23 08:58:43+00:00,[],https://api.github.com/licenses/mit
125,https://github.com/YousefSherif/Washing-Machine-Controller.git,2022-08-07 14:04:18+00:00,,0,YousefSherif/Washing-Machine-Controller,522229364,Verilog,Washing-Machine-Controller,31875,1,2024-01-25 17:36:45+00:00,[],None
126,https://github.com/Bandaanusha/iiitb_rtc.git,2022-07-27 04:08:07+00:00,,0,Bandaanusha/iiitb_rtc,518304282,Verilog,iiitb_rtc,12582,1,2022-08-02 08:25:51+00:00,[],https://api.github.com/licenses/mit
127,https://github.com/zhudisheng/Study-Verilog-step-by-step.git,2022-07-28 03:50:55+00:00,,0,zhudisheng/Study-Verilog-step-by-step,518691877,Verilog,Study-Verilog-step-by-step,1330,1,2022-08-26 11:20:47+00:00,[],None
128,https://github.com/alimorgaan/UART.git,2022-08-01 13:56:40+00:00,UART Transmitter & Receiver Using Verilog,1,alimorgaan/UART,520131741,Verilog,UART,647,1,2024-03-15 11:24:32+00:00,[],None
129,https://github.com/vyomasystems-lab/challenges-gaeyasrisatyavinnakota.git,2022-07-27 15:32:25+00:00,challenges-gaeyasrisatyavinnakota created by GitHub Classroom,0,vyomasystems-lab/challenges-gaeyasrisatyavinnakota,518515229,Verilog,challenges-gaeyasrisatyavinnakota,33,1,2022-08-22 16:01:28+00:00,[],
130,https://github.com/adityasingh6256/iiitb_sipo.git,2022-07-27 04:12:39+00:00,serial in parallel out shift register,1,adityasingh6256/iiitb_sipo,518305321,Verilog,iiitb_sipo,14999,1,2023-07-31 15:55:01+00:00,[],https://api.github.com/licenses/mit
131,https://github.com/vyomasystems-lab/challenges-Anvay-7.git,2022-07-30 04:29:00+00:00,challenges-Anvay-7 created by GitHub Classroom,0,vyomasystems-lab/challenges-Anvay-7,519417841,Verilog,challenges-Anvay-7,327,1,2023-06-16 00:05:28+00:00,[],
132,https://github.com/HamzaKh01/MatrixMultiplicationFSM.git,2022-08-06 08:44:26+00:00,,0,HamzaKh01/MatrixMultiplicationFSM,521893160,Verilog,MatrixMultiplicationFSM,369,1,2023-04-13 12:20:54+00:00,[],None
133,https://github.com/hamza-akhtar-dev/Convolutional-Filters-HDL.git,2022-08-09 11:36:36+00:00,This an HDL implementation of convolutional filteration of grayscale images with kernels of different sizes. Currently supports only fixed point arithmetic.,1,hamza-akhtar-dev/Convolutional-Filters-HDL,522923183,Verilog,Convolutional-Filters-HDL,685,1,2023-12-14 07:01:08+00:00,[],None
134,https://github.com/ajavid34/Computer-Architecture.git,2022-07-30 14:33:01+00:00,Computer Architecture - Computer Assignments - Fall 2021,0,ajavid34/Computer-Architecture,519539187,Verilog,Computer-Architecture,3292,0,2022-07-30 14:44:59+00:00,[],None
135,https://github.com/likhigowda/verilog-codes.git,2022-07-30 07:12:09+00:00,,0,likhigowda/verilog-codes,519446497,Verilog,verilog-codes,557,0,2022-07-30 07:16:40+00:00,[],None
136,https://github.com/Mahmoud-el-sayed/MIPS.git,2022-07-30 21:00:43+00:00,The 32-bit single cycle microarchitecture MIPS Risk processor based on Harvard architecture using Verilog HDL.  The implementation consists of 4 main blocks: 1. Data Path. 2. Control Unit. 3. Instruction Memory. 4. Data Memory.  The simulation was performed on Modelsim using the following three programs written in machine code following MIPS ISA: Program 1: GCD of 120 and 180. Program 2: Factorial Number of 7. Program 3: The Fibonacci series numbers,0,Mahmoud-el-sayed/MIPS,519619747,Verilog,MIPS,8742,0,2022-07-31 08:54:31+00:00,[],None
137,https://github.com/jogeshsingh/VGA-Controller-on-FPGA.git,2022-07-30 04:45:08+00:00,,0,jogeshsingh/VGA-Controller-on-FPGA,519420376,Verilog,VGA-Controller-on-FPGA,48,0,2022-08-01 16:15:05+00:00,[],https://api.github.com/licenses/gpl-3.0
138,https://github.com/v-sekar/caravel1.git,2022-08-01 13:51:43+00:00,,0,v-sekar/caravel1,520129870,Verilog,caravel1,45842,0,2022-08-01 13:51:55+00:00,[],https://api.github.com/licenses/apache-2.0
139,https://github.com/iscemy/8-bit-mips-verilog.git,2022-07-31 20:12:45+00:00,,0,iscemy/8-bit-mips-verilog,519877642,Verilog,8-bit-mips-verilog,25,0,2022-07-31 20:13:17+00:00,[],None
140,https://github.com/faiek-ahsan/caravel_AES.git,2022-07-31 22:09:49+00:00,,0,faiek-ahsan/caravel_AES,519897551,Verilog,caravel_AES,93648,0,2022-07-31 22:26:07+00:00,[],https://api.github.com/licenses/apache-2.0
141,https://github.com/Gogireddyravikiran/RISCV_32I.git,2022-07-28 03:21:32+00:00,,0,Gogireddyravikiran/RISCV_32I,518685803,Verilog,RISCV_32I,2876,0,2022-08-04 10:20:14+00:00,[],https://api.github.com/licenses/mit
142,https://github.com/William0908/IC_Contest_2022.git,2022-07-31 09:16:56+00:00,,0,William0908/IC_Contest_2022,519729253,Verilog,IC_Contest_2022,758,0,2022-07-31 09:18:39+00:00,[],None
143,https://github.com/vyomasystems-lab/challenges-Rish-local.git,2022-07-31 10:42:00+00:00,challenges-Rish-local created by GitHub Classroom,0,vyomasystems-lab/challenges-Rish-local,519747115,Verilog,challenges-Rish-local,27,0,2022-08-22 16:01:41+00:00,[],
144,https://github.com/vyomasystems-lab/challenges-Coooolix.git,2022-07-30 10:17:24+00:00,challenges-Coooolix created by GitHub Classroom,0,vyomasystems-lab/challenges-Coooolix,519483563,Verilog,challenges-Coooolix,27,0,2022-08-22 16:01:38+00:00,[],
145,https://github.com/zumahun/traffic_controller.git,2022-08-03 02:49:51+00:00,,0,zumahun/traffic_controller,520716546,Verilog,traffic_controller,2,0,2022-08-03 02:50:08+00:00,[],None
146,https://github.com/jason-designer/oscpu_soc.git,2022-08-02 08:46:43+00:00,"oscpu, finish soc",0,jason-designer/oscpu_soc,520419917,Verilog,oscpu_soc,4508,0,2022-08-02 08:51:54+00:00,[],None
147,https://github.com/NaitikSanas/Effinix_MIPI_Streaming_to_RK3399.git,2022-08-02 11:50:09+00:00,,0,NaitikSanas/Effinix_MIPI_Streaming_to_RK3399,520476966,Verilog,Effinix_MIPI_Streaming_to_RK3399,143913,0,2023-01-23 05:40:16+00:00,[],None
148,https://github.com/glunkad/Alarm-Clock.git,2022-08-07 05:24:56+00:00,,0,glunkad/Alarm-Clock,522123651,Verilog,Alarm-Clock,7,0,2022-08-07 05:26:24+00:00,[],https://api.github.com/licenses/mit
149,https://github.com/RazaSaleem/Synchronous-FIFO.git,2022-08-08 18:50:46+00:00,,0,RazaSaleem/Synchronous-FIFO,522669784,Verilog,Synchronous-FIFO,6,0,2022-08-08 18:52:44+00:00,[],None
150,https://github.com/Savyasachi-Abhijith/RISCV-computerarch.git,2022-08-08 18:15:52+00:00,,0,Savyasachi-Abhijith/RISCV-computerarch,522659618,Verilog,RISCV-computerarch,4,0,2022-08-08 18:44:27+00:00,[],None
151,https://github.com/ozeidan9/Verlog-CPU-with-Automated-Testbench.git,2022-08-10 00:09:57+00:00,Verlog bus interfaced CPU with an automated testbench.,0,ozeidan9/Verlog-CPU-with-Automated-Testbench,523145027,Verilog,Verlog-CPU-with-Automated-Testbench,1961,0,2022-08-10 00:58:54+00:00,[],None
152,https://github.com/Sharmi-Rajakumaran/Router1x3.git,2022-08-10 16:46:31+00:00,,0,Sharmi-Rajakumaran/Router1x3,523423035,Verilog,Router1x3,7,0,2022-08-13 09:58:21+00:00,[],None
153,https://github.com/youwei0505/2015_M_SET.git,2022-08-09 06:07:15+00:00,IC Contest Master 2015 SET,0,youwei0505/2015_M_SET,522823905,Verilog,2015_M_SET,377,0,2022-08-09 06:09:28+00:00,[],None
154,https://github.com/muhammadahmedelmahdy/Calculator_Basys3_VHDL.git,2022-08-10 19:23:29+00:00,A simply calculator on FPGA using VHDL,0,muhammadahmedelmahdy/Calculator_Basys3_VHDL,523470736,Verilog,Calculator_Basys3_VHDL,8,0,2022-08-10 19:24:59+00:00,[],None
155,https://github.com/anushagh/moore_seq_detector.git,2022-07-28 10:57:23+00:00,,0,anushagh/moore_seq_detector,518809260,Verilog,moore_seq_detector,4,0,2022-07-28 10:59:48+00:00,[],https://api.github.com/licenses/bsd-3-clause
156,https://github.com/sky-snow-kong/hello.git,2022-07-29 10:04:14+00:00,,0,sky-snow-kong/hello,519166881,Verilog,hello,5,0,2022-07-29 10:08:42+00:00,[],None
157,https://github.com/v-sekar/caravel_walkthru.git,2022-07-29 18:18:58+00:00,,0,v-sekar/caravel_walkthru,519311103,Verilog,caravel_walkthru,2229,0,2022-07-29 18:19:11+00:00,[],https://api.github.com/licenses/apache-2.0
158,https://github.com/Muhamed-Sayed/UART-Transmitter-Implementation.git,2022-08-13 23:10:00+00:00,,0,Muhamed-Sayed/UART-Transmitter-Implementation,524527280,Verilog,UART-Transmitter-Implementation,629,0,2022-08-13 23:19:46+00:00,[],None
159,https://github.com/OmarFahmy07/Clock_Divider.git,2022-08-11 11:54:29+00:00,Generic Clock Divider Module Using Verilog HDL,0,OmarFahmy07/Clock_Divider,523704809,Verilog,Clock_Divider,1,0,2022-08-11 11:54:47+00:00,[],None
160,https://github.com/PrabalMahajan11/iiitb_clockfpga.git,2022-08-10 15:39:06+00:00,Github Repo,0,PrabalMahajan11/iiitb_clockfpga,523401244,Verilog,iiitb_clockfpga,2512,0,2022-08-11 10:26:05+00:00,[],None
161,https://github.com/qiyj6/risc-v-cpu.git,2022-08-11 14:59:00+00:00,,0,qiyj6/risc-v-cpu,523765017,Verilog,risc-v-cpu,5001,0,2022-08-11 15:39:20+00:00,[],None
162,https://github.com/FVeiza/Snooping_Protocol.git,2022-08-04 22:12:42+00:00,Project in Verilog HDL of an architecture of memory components aiming the implementation of the Snooping coherence protocol,0,FVeiza/Snooping_Protocol,521429497,Verilog,Snooping_Protocol,14,0,2022-08-04 22:21:05+00:00,[],None
163,https://github.com/subha-ratno/clock.git,2022-08-02 20:29:21+00:00,A repository to feature various implementations of real life clock.,0,subha-ratno/clock,520640861,Verilog,clock,139,0,2022-08-02 20:30:05+00:00,[],None
164,https://github.com/yabbondanza/circuitos-digitais-2022-01.git,2022-08-04 19:08:59+00:00,,0,yabbondanza/circuitos-digitais-2022-01,521385894,Verilog,circuitos-digitais-2022-01,621,0,2022-08-04 19:16:39+00:00,[],None
165,https://github.com/joennlae/halutmatmul-openroad-reports.git,2022-08-02 14:41:55+00:00,,0,joennlae/halutmatmul-openroad-reports,520536453,Verilog,halutmatmul-openroad-reports,423521,0,2023-08-14 15:08:10+00:00,[],None
166,https://github.com/Kevinnnnnn01/CO-Lab3.git,2022-07-31 13:42:52+00:00,single cycle CPU,0,Kevinnnnnn01/CO-Lab3,519787349,,CO-Lab3,9,0,2022-07-28 11:32:38+00:00,[],None
167,https://github.com/birlutiuclaudiu/StructureOfComputerSystems.git,2022-07-27 11:19:16+00:00,Laboratory,0,birlutiuclaudiu/StructureOfComputerSystems,518427158,Verilog,StructureOfComputerSystems,1204,0,2022-07-27 11:29:38+00:00,[],None
168,https://github.com/yashkthr/LIFO.git,2022-07-27 04:06:06+00:00,Last-in-First-out Buffer,0,yashkthr/LIFO,518303877,Verilog,LIFO,8274,0,2023-04-25 12:36:43+00:00,[],None
169,https://github.com/vyomasystems-lab/challenges-Mohammed-shafi466.git,2022-07-27 20:36:47+00:00,challenges-Mohammed-shafi466 created by GitHub Classroom,0,vyomasystems-lab/challenges-Mohammed-shafi466,518604730,Verilog,challenges-Mohammed-shafi466,35,0,2022-08-22 16:01:29+00:00,[],
170,https://github.com/pransu-shrivastav/dadda-multiplier.git,2022-07-28 19:17:21+00:00,,0,pransu-shrivastav/dadda-multiplier,518967931,Verilog,dadda-multiplier,84,0,2022-07-28 19:17:54+00:00,[],None
171,https://github.com/Huffer342-WSH/HDLBits-Solutions.git,2022-07-30 17:20:02+00:00,,0,Huffer342-WSH/HDLBits-Solutions,519578027,Verilog,HDLBits-Solutions,2595,0,2022-07-30 17:20:42+00:00,[],None
172,https://github.com/shreyachalla/hdl-bits.git,2022-07-31 00:38:17+00:00,Verilog practice problems,0,shreyachalla/hdl-bits,519648551,Verilog,hdl-bits,1,0,2022-07-31 19:49:13+00:00,[],None
173,https://github.com/XiaBin520/RV-CPU.git,2022-08-09 08:35:37+00:00,,0,XiaBin520/RV-CPU,522867256,Verilog,RV-CPU,930,0,2022-08-14 06:04:53+00:00,[],None
174,https://github.com/samet-nalbant/CSE331-Computer-Organization-Homeworks.git,2022-08-03 18:13:01+00:00,CSE331 Computer Organization Homeworks,0,samet-nalbant/CSE331-Computer-Organization-Homeworks,520986549,Verilog,CSE331-Computer-Organization-Homeworks,2206,0,2022-08-03 18:13:09+00:00,[],None
175,https://github.com/stanley108/detail-sta.git,2022-08-08 15:55:34+00:00,,1,stanley108/detail-sta,522615492,Verilog,detail-sta,39203,0,2022-08-08 15:58:09+00:00,[],https://api.github.com/licenses/apache-2.0
176,https://github.com/RazaSaleem/Dual-Port-RAM.git,2022-08-08 20:09:10+00:00,,0,RazaSaleem/Dual-Port-RAM,522692154,Verilog,Dual-Port-RAM,4,0,2022-08-08 20:10:32+00:00,[],None
177,https://github.com/Cra2yPierr0t/Vthernet-SoC.git,2022-08-08 04:16:43+00:00,picoRV and Ethernet SoC,0,Cra2yPierr0t/Vthernet-SoC,522401967,Verilog,Vthernet-SoC,2248,0,2022-08-08 04:16:56+00:00,[],https://api.github.com/licenses/apache-2.0
178,https://github.com/Ayyappa1911/iiitb_sysarray.git,2022-08-07 10:59:50+00:00,,0,Ayyappa1911/iiitb_sysarray,522187840,Verilog,iiitb_sysarray,16939,0,2022-08-18 06:06:51+00:00,[],https://api.github.com/licenses/mit
179,https://github.com/GraysonHollaway/FPGA_UART.git,2022-08-07 17:32:13+00:00,,0,GraysonHollaway/FPGA_UART,522280231,Verilog,FPGA_UART,53,0,2022-08-07 17:35:14+00:00,[],None
180,https://github.com/natefillups/Verilog-Projects.git,2022-08-07 07:16:47+00:00,Small verilog projects,0,natefillups/Verilog-Projects,522143258,Verilog,Verilog-Projects,3,0,2022-08-07 07:22:26+00:00,[],None
181,https://github.com/RamyaIIIT/iiitb_4bitrc.git,2022-08-10 17:43:49+00:00,ASIC Assignment,0,RamyaIIIT/iiitb_4bitrc,523441219,Verilog,iiitb_4bitrc,3138,0,2022-08-11 10:21:03+00:00,[],None
182,https://github.com/CZX1112/MathLogicCurriDesign.git,2022-08-09 10:26:53+00:00,数字逻辑课程设计，基于Verilog语言，使用若干外设实现自主设定的功能模块。,0,CZX1112/MathLogicCurriDesign,522901875,Verilog,MathLogicCurriDesign,2235,0,2022-08-09 10:30:00+00:00,[],None
183,https://github.com/Rajib-IITB/Dadda-Multiplier.git,2022-08-11 13:42:36+00:00,16x16 bit Dadda Multiplier Design,0,Rajib-IITB/Dadda-Multiplier,523738497,Verilog,Dadda-Multiplier,17,0,2022-08-11 13:44:29+00:00,[],None
184,https://github.com/zumahun/vga_controller.git,2022-08-03 02:44:21+00:00,,0,zumahun/vga_controller,520715372,Verilog,vga_controller,2,0,2022-08-03 02:45:08+00:00,[],None
185,https://github.com/PE-611/Many_pixel_test_shift_reg.git,2022-08-05 16:57:42+00:00,"Test design for many pixel matrix (sensor). Self reload. Variable frequency, non overlapped time, quantity CLK periods.",0,PE-611/Many_pixel_test_shift_reg,521714830,Verilog,Many_pixel_test_shift_reg,4984,0,2022-08-05 16:58:57+00:00,[],None
186,https://github.com/mpdg837/BilberryPI.git,2022-08-04 16:26:04+00:00,"Projekt zintegorwanego chipu wykonanego Verilog HDL, będącego SOC na którym zaimplementowano 16-bitowy komputer retro czytający oprogramowanie z kart SD.",0,mpdg837/BilberryPI,521337848,Verilog,BilberryPI,2138,0,2023-04-15 21:52:25+00:00,"['firmware', 'fpga', 'verilog', 'retro', 'retrocomputing', 'retrogaming', 'verilog-hdl', 'verilog-project']",https://api.github.com/licenses/cc0-1.0
187,https://github.com/nerdstv/Analysing-the-register-File-in-Verilog.git,2022-08-04 11:02:57+00:00,,0,nerdstv/Analysing-the-register-File-in-Verilog,521231808,Verilog,Analysing-the-register-File-in-Verilog,1268,0,2022-08-04 11:05:28+00:00,[],None
188,https://github.com/A3Dprintedude/efabless_andy.git,2022-08-06 17:13:04+00:00,,0,A3Dprintedude/efabless_andy,522008128,Verilog,efabless_andy,2229,0,2022-08-06 17:13:16+00:00,[],https://api.github.com/licenses/apache-2.0
189,https://github.com/nirajgandhi/verilog_projects.git,2022-07-31 18:54:11+00:00,,0,nirajgandhi/verilog_projects,519861922,Verilog,verilog_projects,1707,0,2022-07-31 18:56:12+00:00,[],None
190,https://github.com/AhsanAliUet/spi-protocol.git,2022-08-09 06:24:34+00:00,SPI protocol is implemented and simulated successfully in this repository. ,0,AhsanAliUet/spi-protocol,522828578,Verilog,spi-protocol,2633,0,2022-08-09 06:34:45+00:00,[],None
191,https://github.com/Baozixu99/myCPU.git,2022-08-09 11:12:58+00:00,,0,Baozixu99/myCPU,522915801,Verilog,myCPU,583,0,2024-04-07 03:16:02+00:00,[],https://api.github.com/licenses/gpl-3.0
192,https://github.com/AndyVuLuong/CS-147-Computer-Architecture.git,2022-08-12 07:49:16+00:00,,0,AndyVuLuong/CS-147-Computer-Architecture,524000711,Verilog,CS-147-Computer-Architecture,4569,0,2022-08-20 20:58:02+00:00,[],None
193,https://github.com/MiSTer-devel/Arcade-Chameleon_MiSTer.git,2022-08-13 16:58:57+00:00,Jaleco Chameleon core for MiSTer FPGA,3,MiSTer-devel/Arcade-Chameleon_MiSTer,524458094,Verilog,Arcade-Chameleon_MiSTer,2586,0,2022-08-28 09:16:06+00:00,[],https://api.github.com/licenses/gpl-2.0
194,https://github.com/savinduwannigama/8-Bit-Single-Cycle-Processor.git,2022-08-12 08:30:08+00:00,"In this project we designed a simple 8-bit single-cycle processor which includes an ALU, a register file and control logic, and a memory sub-system using Verilog HDL. The microarchitecture of a processor is designed based on an Instruction Set.",0,savinduwannigama/8-Bit-Single-Cycle-Processor,524012040,Verilog,8-Bit-Single-Cycle-Processor,1719,0,2022-08-12 08:32:52+00:00,[],None
195,https://github.com/Sritam519/iiitb_bcdc.git,2022-07-27 04:19:12+00:00,,0,Sritam519/iiitb_bcdc,518306536,Verilog,iiitb_bcdc,7260,0,2022-07-27 04:32:17+00:00,[],https://api.github.com/licenses/mit
196,https://github.com/chykon/utf8decoder-verilog.git,2022-07-27 14:43:46+00:00,[UNMAINTEINED] A UTF-8 hardware decoder written in the Verilog.,0,chykon/utf8decoder-verilog,518497337,Verilog,utf8decoder-verilog,75,0,2023-01-27 21:15:22+00:00,[],
197,https://github.com/jhzengl/verilog.git,2022-07-27 09:11:08+00:00,学习 verilog,0,jhzengl/verilog,518386931,Verilog,verilog,1371,0,2022-08-02 08:46:56+00:00,[],None
198,https://github.com/Rishabh-zhcet/parity-generator.git,2022-07-27 18:49:00+00:00,Its a 3-bit parity generator for non overlapping input.,0,Rishabh-zhcet/parity-generator,518576684,Verilog,parity-generator,6,0,2022-07-28 08:50:59+00:00,[],https://api.github.com/licenses/mit
199,https://github.com/cbatten/csmore-verilog.git,2022-07-29 16:24:10+00:00,CS More Verilog Labs,0,cbatten/csmore-verilog,519279232,Verilog,csmore-verilog,78,0,2022-07-29 16:25:39+00:00,[],
200,https://github.com/hor-ace/caravel_user_project.git,2022-07-30 12:20:06+00:00,,0,hor-ace/caravel_user_project,519508847,Verilog,caravel_user_project,2230,0,2022-07-30 12:20:18+00:00,[],https://api.github.com/licenses/apache-2.0
201,https://github.com/vyomasystems-lab/challenges-Khoushikh.git,2022-07-30 01:48:45+00:00,challenges-Khoushikh created by GitHub Classroom,0,vyomasystems-lab/challenges-Khoushikh,519392866,Verilog,challenges-Khoushikh,71,0,2022-08-22 16:01:35+00:00,[],https://api.github.com/licenses/gpl-3.0
202,https://github.com/vyomasystems-lab/challenges-Arvi3642.git,2022-07-28 13:27:39+00:00,challenges-Arvi3642 created by GitHub Classroom,0,vyomasystems-lab/challenges-Arvi3642,518857437,Verilog,challenges-Arvi3642,27,0,2022-08-22 16:01:31+00:00,[],
203,https://github.com/Suhaib033/Parallel-Prefix-Adders.git,2022-07-28 21:53:55+00:00,,0,Suhaib033/Parallel-Prefix-Adders,519004010,Verilog,Parallel-Prefix-Adders,5,0,2022-07-28 21:59:36+00:00,[],None
204,https://github.com/RaviMugidi/capture-the-bug.git,2022-07-28 16:33:56+00:00,,0,RaviMugidi/capture-the-bug,518920446,Verilog,capture-the-bug,92,0,2022-07-29 05:19:12+00:00,[],
205,https://github.com/Anarion-zuo/AnBoard.git,2022-08-03 08:54:05+00:00,,0,Anarion-zuo/AnBoard,520805943,Verilog,AnBoard,47,0,2022-08-03 08:55:59+00:00,[],None
206,https://github.com/TangtangSix/AHT10.git,2022-08-03 11:50:18+00:00,基于FPGA的AHT10传感器温湿度读取,0,TangtangSix/AHT10,520859511,Verilog,AHT10,29175,0,2022-08-03 11:51:58+00:00,[],None
207,https://github.com/hassanelsman/UART.git,2022-07-31 09:19:36+00:00,A full implementation to the UART interface using Verilog and get the optimized netlist.,0,hassanelsman/UART,519729784,Verilog,UART,1471,0,2023-08-18 13:42:46+00:00,[],None
208,https://github.com/AhmedSherif-12/Single-cycle-MIPS-.git,2022-07-31 15:29:31+00:00,,0,AhmedSherif-12/Single-cycle-MIPS-,519814101,Verilog,Single-cycle-MIPS-,8,0,2022-07-31 15:33:52+00:00,[],None
209,https://github.com/archandesai/iiitb_wm.git,2022-07-31 17:04:02+00:00,ASIC design of automatic washing machine,1,archandesai/iiitb_wm,519837059,Verilog,iiitb_wm,2340,0,2022-07-31 17:05:50+00:00,[],https://api.github.com/licenses/mit
210,https://github.com/vitorcf10/MIPS_CPU_Verilog.git,2022-07-29 21:32:15+00:00,MIPS CPU described using verilog.,0,vitorcf10/MIPS_CPU_Verilog,519354449,Verilog,MIPS_CPU_Verilog,10,0,2022-07-29 21:35:08+00:00,[],None
211,https://github.com/EhabMostafaa/Washing-Machine-Controller.git,2022-08-01 12:29:44+00:00,,0,EhabMostafaa/Washing-Machine-Controller,520101593,Verilog,Washing-Machine-Controller,29,0,2022-08-01 12:32:07+00:00,[],None
212,https://github.com/YousifEsmail/Single-Cycle-MIPS-Processor.git,2022-07-31 22:11:11+00:00,"Designed and implemented a single cycle 32-bit MIPS processor using Verilog, in which I developed different modules such as: ALU, Datapath, register file. ",0,YousifEsmail/Single-Cycle-MIPS-Processor,519897767,Verilog,Single-Cycle-MIPS-Processor,5,0,2022-07-31 22:15:33+00:00,[],None
213,https://github.com/sifanlight/CPUPipeline.git,2022-08-04 17:44:58+00:00,,0,sifanlight/CPUPipeline,521362241,Verilog,CPUPipeline,0,0,2022-09-19 13:40:28+00:00,[],None
214,https://github.com/FVeiza/Synchronous_Execution.git,2022-08-04 22:25:20+00:00,Project in Verilog HDL of a 16-bit processor with RAM and ROM memories aiming the synchronous execution of instructions.,0,FVeiza/Synchronous_Execution,521431787,Verilog,Synchronous_Execution,11,0,2022-08-04 22:25:51+00:00,[],None
215,https://github.com/Madhur-katyayn/FNN_HD.git,2022-08-06 20:43:23+00:00,,0,Madhur-katyayn/FNN_HD,522050002,Verilog,FNN_HD,1750,0,2022-08-06 20:50:59+00:00,[],None
216,https://github.com/stanley108/openlane-setting-up.git,2022-08-08 15:15:41+00:00,,0,stanley108/openlane-setting-up,522600900,Verilog,openlane-setting-up,902744,0,2022-08-08 15:48:21+00:00,[],https://api.github.com/licenses/apache-2.0
217,https://github.com/MadejSzymon/fsm_de10standard.git,2022-08-09 17:54:42+00:00,"Implementation of the lock with the ""panic button""  and the status display.",0,MadejSzymon/fsm_de10standard,523055147,Verilog,fsm_de10standard,8471,0,2022-08-09 17:56:37+00:00,[],None
218,https://github.com/CyanGuo/MIPS-OoE-32-bit-Tomasulo-CPU-Implementation.git,2022-08-08 06:56:31+00:00,,0,CyanGuo/MIPS-OoE-32-bit-Tomasulo-CPU-Implementation,522438596,Verilog,MIPS-OoE-32-bit-Tomasulo-CPU-Implementation,17,0,2022-08-08 06:58:04+00:00,[],https://api.github.com/licenses/mit
219,https://github.com/GauthamShankar21/Automatic_Solar_Tracking_Using-VerilogHDL.git,2022-08-08 12:48:58+00:00,"According the earth’s rotation axis, Erath rotates 15 degree in its axis per hour. By this idea of rotation per hour the motor is made to rotate 15 degrees every hour. With this rotation the solar panel rotates along with the stepper motor which almost maintains perpendicular profile to the rays from sun. By this maintenance of perpendicular profile less amount of solar energy gets lost and the system becomes more efficient.",0,GauthamShankar21/Automatic_Solar_Tracking_Using-VerilogHDL,522546962,Verilog,Automatic_Solar_Tracking_Using-VerilogHDL,2,0,2022-08-08 12:50:23+00:00,[],https://api.github.com/licenses/mit
220,https://github.com/chankli/modelsim_script_run.git,2022-07-29 08:36:34+00:00,一个简单的脚本运行modelsim仿真的例子,0,chankli/modelsim_script_run,519141655,Verilog,modelsim_script_run,1,0,2022-07-29 08:49:56+00:00,[],None
221,https://github.com/vyomasystems-lab/challenges-guptayush2112.git,2022-07-30 21:01:14+00:00,challenges-guptayush2112 created by GitHub Classroom,0,vyomasystems-lab/challenges-guptayush2112,519619814,Verilog,challenges-guptayush2112,29,0,2022-08-22 16:01:39+00:00,[],
222,https://github.com/inderjit87/sample.git,2022-07-31 14:35:13+00:00,,0,inderjit87/sample,519800379,Verilog,sample,81,0,2022-07-31 15:36:11+00:00,[],
223,https://github.com/YousifEsmail/UART_TX.git,2022-07-31 22:27:46+00:00,,0,YousifEsmail/UART_TX,519900311,Verilog,UART_TX,31,0,2022-07-31 22:28:53+00:00,[],None
224,https://github.com/vyomasystems-lab/challenges-GitNoob2022.git,2022-07-29 09:01:19+00:00,challenges-GitNoob2022 created by GitHub Classroom,0,vyomasystems-lab/challenges-GitNoob2022,519148938,Verilog,challenges-GitNoob2022,30,0,2022-08-22 16:01:32+00:00,[],
225,https://github.com/RazaSaleem/Sequence-Detector.git,2022-08-08 09:56:34+00:00,,0,RazaSaleem/Sequence-Detector,522492877,Verilog,Sequence-Detector,3,0,2022-08-08 09:57:02+00:00,[],None
226,https://github.com/iaakash47/VSDBabySoC.git,2022-08-13 10:31:49+00:00,"VSDBabySoC is a small mixed-signal SoC including PLL, DAC, and a RISCV-based processor named RVMYTH.",0,iaakash47/VSDBabySoC,524367410,Verilog,VSDBabySoC,11042,0,2022-08-13 11:45:27+00:00,[],https://api.github.com/licenses/apache-2.0
227,https://github.com/abhirathsujith/Verilog.git,2022-08-11 16:14:22+00:00,About Verilog,0,abhirathsujith/Verilog,523789678,Verilog,Verilog,803,0,2022-09-07 15:31:48+00:00,[],None
228,https://github.com/Ritvik-02/DuckHunt.git,2022-08-11 05:56:00+00:00,,0,Ritvik-02/DuckHunt,523602576,Verilog,DuckHunt,4834,0,2022-08-11 06:05:18+00:00,[],None
229,https://github.com/OmarFahmy07/Pulse_Generator.git,2022-08-11 11:58:11+00:00,Pulse Generator Module Using Verilog HDL,0,OmarFahmy07/Pulse_Generator,523705863,Verilog,Pulse_Generator,0,0,2022-08-11 11:58:40+00:00,[],None
230,https://github.com/KashifInayat/digital_design_labs.git,2022-08-09 17:01:08+00:00,Ther are my undergrad lab tasks..,0,KashifInayat/digital_design_labs,523038000,Verilog,digital_design_labs,27,0,2022-08-09 17:12:37+00:00,"['design', 'digital', 'architecture', 'computer']",https://api.github.com/licenses/apache-2.0
231,https://github.com/Ahmed-El-said/Asynchronous-FIFO.git,2022-08-05 23:15:41+00:00,,0,Ahmed-El-said/Asynchronous-FIFO,521798233,Verilog,Asynchronous-FIFO,4,0,2022-08-05 23:21:08+00:00,[],None
232,https://github.com/Akshay3924/firstrepo.git,2022-08-09 07:56:27+00:00,my first repo,0,Akshay3924/firstrepo,522855227,Verilog,firstrepo,1,0,2022-08-09 13:59:17+00:00,[],None
233,https://github.com/junejune66/DPA.git,2022-08-09 13:19:34+00:00,,0,junejune66/DPA,522958402,Verilog,DPA,6,0,2022-08-09 13:23:20+00:00,[],None
234,https://github.com/ahamzademir/Microprocessor.git,2022-08-09 07:02:27+00:00,,0,ahamzademir/Microprocessor,522839321,Verilog,Microprocessor,479,0,2022-08-27 12:57:28+00:00,[],None
235,https://github.com/somhi/LCD_480x272.git,2022-08-10 13:16:15+00:00,,1,somhi/LCD_480x272,523350593,Verilog,LCD_480x272,1319,0,2022-08-10 15:41:13+00:00,[],None
236,https://github.com/isahilmahajan/iiitb_4bbc.git,2022-08-10 14:01:35+00:00,Physical Design of a 4 bit bidirectional counter implemented with skywater 130 pdk,0,isahilmahajan/iiitb_4bbc,523366313,Verilog,iiitb_4bbc,2903,0,2022-08-18 03:14:07+00:00,[],None
237,https://github.com/HamzaKh01/RiscVSingleCycleProcessor.git,2022-08-10 05:18:01+00:00,,0,HamzaKh01/RiscVSingleCycleProcessor,523210469,Verilog,RiscVSingleCycleProcessor,188,0,2022-08-10 05:50:32+00:00,[],None
238,https://github.com/codingdud/iverilog_assignment.git,2022-08-10 07:22:03+00:00,,0,codingdud/iverilog_assignment,523242626,Verilog,iverilog_assignment,51,0,2022-08-10 07:24:47+00:00,[],None
239,https://github.com/jlykhnnw/learn-architecture.git,2022-08-03 08:55:41+00:00,,0,jlykhnnw/learn-architecture,520806443,Verilog,learn-architecture,1202,0,2022-08-03 09:03:31+00:00,[],None
240,https://github.com/Sharmi-Rajakumaran/Basic-Verilog-Codes.git,2022-07-27 03:30:34+00:00,,0,Sharmi-Rajakumaran/Basic-Verilog-Codes,518296262,Verilog,Basic-Verilog-Codes,8,0,2022-08-02 15:29:00+00:00,[],None
241,https://github.com/Ookamice/MIPS-CPU-2022.git,2022-07-31 16:42:38+00:00,Little endian MIPS-I CPU along with its test bench written for a university assignement.,0,Ookamice/MIPS-CPU-2022,519832064,Verilog,MIPS-CPU-2022,1127,0,2022-07-31 16:49:12+00:00,[],
242,https://github.com/Durkhai/biquad_mpw7.git,2022-07-31 21:44:26+00:00,,0,Durkhai/biquad_mpw7,519893543,Verilog,biquad_mpw7,81532,0,2022-07-31 22:01:46+00:00,[],https://api.github.com/licenses/apache-2.0
243,https://github.com/LanaP2000/VLSI-Testing.git,2022-07-29 16:46:13+00:00,,0,LanaP2000/VLSI-Testing,519285384,Verilog,VLSI-Testing,5,0,2022-12-28 01:20:50+00:00,[],None
244,https://github.com/yonghaekim/dc_script.git,2022-08-01 17:04:13+00:00,,0,yonghaekim/dc_script,520194984,Verilog,dc_script,66310,0,2022-08-01 17:11:06+00:00,[],None
245,https://github.com/vyomasystems-lab/challenges-shridharkk.git,2022-08-01 17:51:52+00:00,challenges-shridharkk created by GitHub Classroom,0,vyomasystems-lab/challenges-shridharkk,520210109,Verilog,challenges-shridharkk,36,0,2022-08-22 16:01:46+00:00,[],
246,https://github.com/jlykhnnw/arithmetic.git,2022-08-03 06:12:11+00:00,,0,jlykhnnw/arithmetic,520759207,Verilog,arithmetic,2,0,2022-08-03 06:50:05+00:00,[],None
247,https://github.com/AaronKFC/HDLBits-Verilog-Practice.git,2022-08-11 09:55:24+00:00,,0,AaronKFC/HDLBits-Verilog-Practice,523670152,Verilog,HDLBits-Verilog-Practice,111,0,2022-08-11 09:58:26+00:00,[],None
248,https://github.com/Mahi36/Asynchronous-FIFO.git,2022-08-12 18:16:29+00:00,This is the course project done under VLSI Design Lab.,0,Mahi36/Asynchronous-FIFO,524184748,Verilog,Asynchronous-FIFO,691,0,2022-08-12 18:18:25+00:00,[],None
249,https://github.com/sh-mohammadi/super_alu.git,2022-08-12 08:04:37+00:00,An unusual ALU,0,sh-mohammadi/super_alu,524004864,Verilog,super_alu,3,0,2022-08-12 08:22:44+00:00,[],None
250,https://github.com/vijayank88/RISCV_Based_BMS.git,2022-08-01 09:21:15+00:00,,0,vijayank88/RISCV_Based_BMS,520043198,Verilog,RISCV_Based_BMS,2230,0,2022-08-01 09:21:27+00:00,[],https://api.github.com/licenses/apache-2.0
251,https://github.com/yousefkhaled1750/Asynchronous-FIFO.git,2022-08-02 19:19:36+00:00,,0,yousefkhaled1750/Asynchronous-FIFO,520622634,Verilog,Asynchronous-FIFO,54,0,2022-08-02 22:14:26+00:00,[],None
252,https://github.com/annagracia12/EstructuraDeComputadores_P1.git,2022-07-31 14:01:12+00:00,Primera práctica de la asignatura estructura de computadores - Sumadores y Multiplicadores.,0,annagracia12/EstructuraDeComputadores_P1,519791957,Verilog,EstructuraDeComputadores_P1,1012,0,2022-07-31 14:03:34+00:00,"['computer-structure', 'tkgate']",None
253,https://github.com/Cra2yPierr0t/Vthernet.git,2022-08-02 13:54:08+00:00,MAC for Caravel,0,Cra2yPierr0t/Vthernet,520518900,Verilog,Vthernet,38,0,2022-08-02 13:56:03+00:00,[],None
254,https://github.com/antshuang19/Digital-Logic-and-Computer-Organization.git,2022-08-09 05:44:16+00:00,"This course provides an introduction to the design and implementation of digital circuits and microprocessors. Topics include transistor network design, Boolean algebra, combinational circuits, sequential circuits, finite state machine design, processor pipelines, and memory hierarchy. Design methodology using both discrete components and hardware description languages is covered in the laboratory portion of the course.  Outcome 1: Understand Boolean logic and state machines as theoretical foundations of digital systems.  Outcome 2: Be able to conceive, analyze, design, and build combinational and sequential digital logic solutions to everyday problems.  Outcome 3: Comprehend the basic structure and functionality of ROM and RAM memories.  Outcome 4: Understand the basic structure and functionality of central processing units, and build a simple one using FPGA hardware.  Outcome 5: Understand the structure and operation of memory hierarchies and input/output systems.",0,antshuang19/Digital-Logic-and-Computer-Organization,522818115,Verilog,Digital-Logic-and-Computer-Organization,1294,0,2022-08-09 05:50:32+00:00,[],None
255,https://github.com/HarshadUgale5/Async_FIFO.git,2022-08-09 17:25:56+00:00,,1,HarshadUgale5/Async_FIFO,523045895,Verilog,Async_FIFO,10,0,2022-08-18 09:22:40+00:00,[],None
256,https://github.com/SaraEfabless/Sara_Test_01.git,2022-08-10 14:08:38+00:00,getting my feet's wet,0,SaraEfabless/Sara_Test_01,523368821,Verilog,Sara_Test_01,2229,0,2022-08-10 14:08:51+00:00,[],https://api.github.com/licenses/apache-2.0
257,https://github.com/jogeshsingh/4-bit-signed-binary-Mutiplication-Design-Implementation-at-RTL-Level.git,2022-08-08 12:09:16+00:00,,0,jogeshsingh/4-bit-signed-binary-Mutiplication-Design-Implementation-at-RTL-Level,522534105,Verilog,4-bit-signed-binary-Mutiplication-Design-Implementation-at-RTL-Level,36,0,2022-08-09 12:27:17+00:00,[],https://api.github.com/licenses/mit
258,https://github.com/LoesterFranco/GP_ASU_G22.git,2022-08-08 12:34:39+00:00,,0,LoesterFranco/GP_ASU_G22,522542198,,GP_ASU_G22,37545,0,2022-08-09 18:37:48+00:00,[],https://api.github.com/licenses/apache-2.0
259,https://github.com/sreenya24/ALU.git,2022-07-29 19:00:24+00:00,,0,sreenya24/ALU,519321546,Verilog,ALU,6,0,2023-10-10 12:05:38+00:00,[],None
260,https://github.com/trappedMan/Comsil2.git,2022-08-09 08:54:57+00:00,Comsil2 codes,0,trappedMan/Comsil2,522873437,Verilog,Comsil2,714,0,2022-08-09 09:11:24+00:00,[],None
261,https://github.com/ArshKedia/iiitb_3bit_rc.git,2022-07-27 04:18:03+00:00,Three Bit ring counter,1,ArshKedia/iiitb_3bit_rc,518306310,Verilog,iiitb_3bit_rc,9371,0,2022-07-27 04:33:17+00:00,[],https://api.github.com/licenses/mit
262,https://github.com/Byteahalf/TinyRV.git,2022-07-27 21:26:03+00:00,,0,Byteahalf/TinyRV,518615815,Verilog,TinyRV,28,0,2022-07-27 21:26:09+00:00,[],None
263,https://github.com/kaylanelira/Sistemas-Digitais.git,2022-07-28 16:20:40+00:00,"Projetos da disciplina de Sistemas Digitais, utilizando verilog.",0,kaylanelira/Sistemas-Digitais,518916464,Verilog,Sistemas-Digitais,46,0,2023-02-09 02:18:55+00:00,[],None
264,https://github.com/MitchellGraba/Single-core_Processor.git,2022-07-28 21:10:12+00:00,Implementation of a rudimentary single-core non-piplined processor,0,MitchellGraba/Single-core_Processor,518995220,Verilog,Single-core_Processor,35,0,2022-07-28 21:15:34+00:00,[],None
265,https://github.com/areg367/frame_filter.git,2022-07-28 11:52:32+00:00,,0,areg367/frame_filter,518825763,Verilog,frame_filter,4,0,2022-07-28 11:54:13+00:00,[],None
266,https://github.com/TobyDig/tad64-keyboard-controller.git,2022-07-28 11:53:39+00:00,Repository for keyboard controller designs for my custom computer.,0,TobyDig/tad64-keyboard-controller,518826110,Verilog,tad64-keyboard-controller,1325,0,2022-07-28 11:59:00+00:00,[],None
267,https://github.com/ALI11-2000/Open-MPW-Framework-TLV.git,2022-07-27 18:20:16+00:00,,0,ALI11-2000/Open-MPW-Framework-TLV,518568244,Verilog,Open-MPW-Framework-TLV,10581,0,2022-07-27 18:20:29+00:00,[],https://api.github.com/licenses/apache-2.0
268,https://github.com/vyomasystems-lab/challenges-Vinuthna-d.git,2022-07-27 06:57:31+00:00,challenges-Vinuthna-d created by GitHub Classroom,0,vyomasystems-lab/challenges-Vinuthna-d,518344950,Verilog,challenges-Vinuthna-d,27,0,2022-08-22 16:01:25+00:00,[],
269,https://github.com/JavierC24/MPU-SAP-2-Architecture-Design.git,2022-07-27 13:30:20+00:00,Our design for a SAP-2 architecture,0,JavierC24/MPU-SAP-2-Architecture-Design,518470370,Verilog,MPU-SAP-2-Architecture-Design,43,0,2022-07-27 13:38:39+00:00,[],None
270,https://github.com/vyomasystems-lab/challenges-KondapalliMohitha.git,2022-07-29 12:41:53+00:00,challenges-KondapalliMohitha created by GitHub Classroom,0,vyomasystems-lab/challenges-KondapalliMohitha,519210716,Verilog,challenges-KondapalliMohitha,39,0,2022-08-22 16:01:34+00:00,[],
271,https://github.com/PRASANNA-416/MIPS32-New-single-cycle.git,2022-08-04 14:04:21+00:00,,0,PRASANNA-416/MIPS32-New-single-cycle,521290112,Verilog,MIPS32-New-single-cycle,724,0,2022-08-05 10:15:47+00:00,[],None
272,https://github.com/mariamaliezzat/CDC.git,2022-08-03 09:14:31+00:00,,0,mariamaliezzat/CDC,520812260,Verilog,CDC,66,0,2022-08-03 09:19:29+00:00,[],None
273,https://github.com/zhangziqing/lac_chiplab.git,2022-07-30 04:21:16+00:00,forked from loongson education Chiplab project,0,zhangziqing/lac_chiplab,519416583,Verilog,lac_chiplab,28570,0,2022-07-30 04:23:27+00:00,[],
274,https://github.com/prajwal0718/Asynchronous-FIFO.git,2022-08-05 15:50:23+00:00,,0,prajwal0718/Asynchronous-FIFO,521695319,Verilog,Asynchronous-FIFO,5,0,2022-08-15 05:36:03+00:00,[],https://api.github.com/licenses/mit
275,https://github.com/PE-611/One_pixe_test.git,2022-08-05 18:20:52+00:00,,0,PE-611/One_pixe_test,521737627,Verilog,One_pixe_test,18352,0,2022-08-05 18:22:07+00:00,[],None
276,https://github.com/mfkiwl/TestRun_ws1k_dev.git,2022-08-03 16:53:42+00:00,Test run for ws 1k SRAM from dev,0,mfkiwl/TestRun_ws1k_dev,520962669,,TestRun_ws1k_dev,0,0,2022-08-15 14:39:32+00:00,[],https://api.github.com/licenses/apache-2.0
277,https://github.com/Sherif-Sakran/vending-machine-Verilog-.git,2022-08-02 20:48:06+00:00,,0,Sherif-Sakran/vending-machine-Verilog-,520645399,Verilog,vending-machine-Verilog-,634,0,2022-08-02 20:48:31+00:00,[],None
278,https://github.com/tart-telescope/fpga-correlator.git,2022-08-02 21:33:05+00:00,The FPGA based correlator,1,tart-telescope/fpga-correlator,520655518,Verilog,fpga-correlator,873,0,2023-05-20 23:56:45+00:00,[],https://api.github.com/licenses/gpl-3.0
279,https://github.com/born2win685/iiitb_counter.git,2022-08-07 10:47:44+00:00,,2,born2win685/iiitb_counter,522185342,Verilog,iiitb_counter,18358,0,2022-08-07 16:04:27+00:00,[],None
280,https://github.com/benjaminmordaunt/verilog-utils.git,2022-08-07 01:16:44+00:00,A collection of common blocks for Verilog RTL design development.,0,benjaminmordaunt/verilog-utils,522088871,Verilog,verilog-utils,5,0,2022-08-07 01:26:27+00:00,[],None
281,https://github.com/vamsidhar32/iiitb_SISO.git,2022-08-10 15:36:03+00:00,,0,vamsidhar32/iiitb_SISO,523400209,Verilog,iiitb_SISO,15670,0,2022-08-18 09:31:33+00:00,[],None
282,https://github.com/AKSHAYSBHAT666/light-weight-ciphers-.git,2022-08-10 22:58:56+00:00,"capstone project , built using verilog and python, using sstf (secure split test technology) .",0,AKSHAYSBHAT666/light-weight-ciphers-,523520012,Verilog,light-weight-ciphers-,118835,0,2022-08-10 23:00:57+00:00,[],None
283,https://github.com/ShuminR/Verilog.git,2022-07-27 20:09:31+00:00,,0,ShuminR/Verilog,518597942,Verilog,Verilog,17,0,2022-07-27 21:08:43+00:00,[],None
284,https://github.com/karikkuma2329/Multiplier.git,2022-07-29 14:04:32+00:00,,0,karikkuma2329/Multiplier,519236735,Verilog,Multiplier,40,0,2022-07-29 14:13:14+00:00,[],None
285,https://github.com/Ramyerra2703/iiitb_8bitudc.git,2022-08-10 15:27:59+00:00,,0,Ramyerra2703/iiitb_8bitudc,523397305,Verilog,iiitb_8bitudc,12598,0,2022-08-11 10:19:56+00:00,[],https://api.github.com/licenses/mit
286,https://github.com/Sairamakula1999/risc_cpu.git,2022-08-02 10:30:19+00:00,5 stage pipelined risc cpu,0,Sairamakula1999/risc_cpu,520452389,Verilog,risc_cpu,263,0,2022-08-03 08:10:50+00:00,[],https://api.github.com/licenses/gpl-3.0
287,https://github.com/majilokesh/iiitb_ba.git,2022-08-02 11:34:18+00:00,,0,majilokesh/iiitb_ba,520471938,,iiitb_ba,2282,0,2022-09-27 12:29:32+00:00,[],https://api.github.com/licenses/mit
288,https://github.com/Anmol-S314/iiitb_sfifo.git,2022-08-09 17:05:13+00:00,,0,Anmol-S314/iiitb_sfifo,523039367,Verilog,iiitb_sfifo,12507,0,2022-09-12 17:59:02+00:00,[],None
289,https://github.com/SenyaMD/ssyp22-ws03.git,2022-08-09 17:16:58+00:00,,1,SenyaMD/ssyp22-ws03,523043017,Verilog,ssyp22-ws03,31,0,2022-08-09 17:23:14+00:00,[],https://api.github.com/licenses/gpl-3.0
290,https://github.com/gbotkin3/RISC-V-Single-Cycle-CPU-Core.git,2022-08-08 18:45:00+00:00,,0,gbotkin3/RISC-V-Single-Cycle-CPU-Core,522668124,Verilog,RISC-V-Single-Cycle-CPU-Core,393955,0,2022-08-08 19:59:36+00:00,[],https://api.github.com/licenses/apache-2.0
291,https://github.com/Ahmedsaied9/Advanced-Encryption-Standard-AES-.git,2022-08-08 20:32:48+00:00,Verilog Implementation of 128 Key AES,0,Ahmedsaied9/Advanced-Encryption-Standard-AES-,522698491,Verilog,Advanced-Encryption-Standard-AES-,20,0,2022-08-10 05:53:38+00:00,[],None
292,https://github.com/mohammedsaber10/apb_protocol.git,2022-08-08 19:25:47+00:00,,0,mohammedsaber10/apb_protocol,522679877,Verilog,apb_protocol,3,0,2022-08-08 19:32:48+00:00,[],None
293,https://github.com/riowei/caravel_tutorial.git,2022-08-11 20:33:10+00:00,,0,riowei/caravel_tutorial,523860921,Verilog,caravel_tutorial,2229,0,2022-08-11 20:33:22+00:00,[],https://api.github.com/licenses/apache-2.0
294,https://github.com/ameetgohil/i2s-mpw7.git,2022-08-12 06:37:07+00:00,,0,ameetgohil/i2s-mpw7,523981602,Verilog,i2s-mpw7,2230,0,2022-08-12 06:37:19+00:00,[],https://api.github.com/licenses/apache-2.0
295,https://github.com/brsf11/Minos.git,2022-08-13 16:14:51+00:00,A 4-stage-pipeline RV32I core written in verilog.,0,brsf11/Minos,524447776,Verilog,Minos,78,0,2022-08-13 16:15:24+00:00,[],None
296,https://github.com/SeokHyeonLee/AESProccessor.git,2022-08-05 06:44:33+00:00,,0,SeokHyeonLee/AESProccessor,521533036,Verilog,AESProccessor,8,0,2023-07-07 06:01:48+00:00,[],None
297,https://github.com/elifozturkk/vlsi2.git,2022-07-29 22:07:48+00:00,VLSI2 class work,0,elifozturkk/vlsi2,519360625,Verilog,vlsi2,1616,0,2022-07-29 22:11:08+00:00,[],None
298,https://github.com/Sansriti-Shreya/3x1_router.git,2022-08-06 11:17:25+00:00,,0,Sansriti-Shreya/3x1_router,521925561,Verilog,3x1_router,223,0,2022-08-06 11:25:46+00:00,[],https://api.github.com/licenses/mit
299,https://github.com/Na1w/tangnano9k.git,2022-08-06 13:18:31+00:00,Simple tangnano9k workspace,0,Na1w/tangnano9k,521951741,Verilog,tangnano9k,12,0,2022-08-07 03:45:14+00:00,[],None
300,https://github.com/noelleon2001/fpga-calculator.git,2022-08-07 09:21:53+00:00, A simple calculator coded in verilog HDL,0,noelleon2001/fpga-calculator,522167650,Verilog,fpga-calculator,3,0,2022-08-07 14:24:48+00:00,[],None
301,https://github.com/dwildie/xyloni-6809.git,2022-08-06 22:16:23+00:00,Test 6809 implementation for the EFINIX Xyloni Development Board,0,dwildie/xyloni-6809,522064891,Verilog,xyloni-6809,335,0,2022-08-06 22:23:48+00:00,[],https://api.github.com/licenses/apache-2.0
302,https://github.com/arsalanfiroozi/SingleCyclePipeline.git,2022-07-29 22:46:53+00:00,,0,arsalanfiroozi/SingleCyclePipeline,519366952,Verilog,SingleCyclePipeline,4725,0,2022-07-29 22:56:33+00:00,[],None
303,https://github.com/zumahun/pong_game.git,2022-08-03 02:48:08+00:00,,0,zumahun/pong_game,520716193,Verilog,pong_game,4,0,2022-08-03 02:48:30+00:00,[],None
304,https://github.com/zumahun/vga_no_signal_screen.git,2022-08-03 02:45:48+00:00,,0,zumahun/vga_no_signal_screen,520715703,Verilog,vga_no_signal_screen,2,0,2022-08-03 02:46:45+00:00,[],None
305,https://github.com/crlarsen/fpga_div.git,2022-07-30 00:54:33+00:00,Convert Division Circuit to a State Machine,0,crlarsen/fpga_div,519384872,Verilog,fpga_div,31,0,2022-07-30 01:12:48+00:00,[],None
306,https://github.com/DilipKrishnappa/github_experiment_comment.git,2022-08-03 06:04:01+00:00,,1,DilipKrishnappa/github_experiment_comment,520757146,Verilog,github_experiment_comment,7,0,2022-08-09 11:53:03+00:00,[],None
307,https://github.com/megaxoplasma/Verilog.git,2022-08-01 17:19:36+00:00,,0,megaxoplasma/Verilog,520199884,Verilog,Verilog,11,0,2022-08-01 17:20:57+00:00,[],None
308,https://github.com/Hardware-e-Logica-aproximada-Estudos/Projetos-testes.git,2022-08-01 18:20:51+00:00,Projetos introdutórios e testes para o grupo de estudos de lógica aproximada,0,Hardware-e-Logica-aproximada-Estudos/Projetos-testes,520218701,Verilog,Projetos-testes,12627,0,2022-09-19 07:07:16+00:00,[],None
309,https://github.com/LBL-ICS/Three-Dimensional-FFT-Design-With-Verilog-HDL.git,2022-08-03 21:24:02+00:00,,0,LBL-ICS/Three-Dimensional-FFT-Design-With-Verilog-HDL,521036263,Verilog,Three-Dimensional-FFT-Design-With-Verilog-HDL,205043,0,2023-05-31 14:24:33+00:00,[],None
310,https://github.com/DylanKennyBoland/convEncoder.git,2022-08-05 12:42:55+00:00,,0,DylanKennyBoland/convEncoder,521634285,Verilog,convEncoder,177,0,2022-08-05 12:50:45+00:00,[],None
311,https://github.com/bhkim003/bh_pro.git,2022-08-12 13:43:05+00:00,,0,bhkim003/bh_pro,524102875,Verilog,bh_pro,674,0,2022-08-12 14:06:30+00:00,[],None
312,https://github.com/seungjoyea/NCO-Neumerically-Controlled-Oscillatior_by-Verilog.git,2022-07-27 08:45:44+00:00,,0,seungjoyea/NCO-Neumerically-Controlled-Oscillatior_by-Verilog,518378466,Verilog,NCO-Neumerically-Controlled-Oscillatior_by-Verilog,170,0,2022-07-28 00:56:26+00:00,[],None
313,https://github.com/lunarmobiscuit/verilog-65CFF-fsm.git,2022-07-27 23:09:45+00:00,Answering the unasked question of what can you take away from a 6502,0,lunarmobiscuit/verilog-65CFF-fsm,518635811,Verilog,verilog-65CFF-fsm,49,0,2022-07-27 23:12:43+00:00,[],None
314,https://github.com/Gokulraj-R-002/Y86-Processor.git,2022-07-27 20:07:38+00:00,,0,Gokulraj-R-002/Y86-Processor,518597473,Verilog,Y86-Processor,122,0,2022-07-27 20:09:34+00:00,[],None
315,https://github.com/daveisyofav/Pong-Game-on-FPGA-Verilog-.git,2022-07-29 16:10:59+00:00,All Verilog modules for Pong video game created on Lattice FPGA (FPGA dev board provided by Nandland). ,0,daveisyofav/Pong-Game-on-FPGA-Verilog-,519275572,Verilog,Pong-Game-on-FPGA-Verilog-,9,0,2022-07-29 16:24:25+00:00,[],None
316,https://github.com/apicela/lowLevel-Assembly-VerilogHDL-.git,2022-08-01 05:04:02+00:00,,0,apicela/lowLevel-Assembly-VerilogHDL-,519970126,Verilog,lowLevel-Assembly-VerilogHDL-,7,0,2022-09-28 14:09:31+00:00,[],None
317,https://github.com/hazemwalidf/RV32IM-microprocessor.git,2022-07-31 19:14:39+00:00,,0,hazemwalidf/RV32IM-microprocessor,519866125,Verilog,RV32IM-microprocessor,21,0,2022-07-31 19:17:09+00:00,[],None
318,https://github.com/Mariam-ahmed-farouk/MIPS.git,2022-08-01 01:03:09+00:00,,0,Mariam-ahmed-farouk/MIPS,519923088,Verilog,MIPS,78,0,2022-08-01 01:06:21+00:00,[],None
319,https://github.com/bharath19-gs/FunctionalNetlistingof_VSDBABYSoC.git,2022-08-05 19:01:43+00:00,,0,bharath19-gs/FunctionalNetlistingof_VSDBABYSoC,521748416,Verilog,FunctionalNetlistingof_VSDBABYSoC,353,0,2022-08-06 05:57:38+00:00,[],https://api.github.com/licenses/mit
320,https://github.com/Ziad-cyber/Asynchronous_FIFO.git,2022-08-05 21:29:05+00:00,,0,Ziad-cyber/Asynchronous_FIFO,521780482,Verilog,Asynchronous_FIFO,6,0,2022-08-05 21:32:58+00:00,[],None
321,https://github.com/Choo-Minhye/intanfpga.git,2022-07-29 08:23:55+00:00,"intan chip connect, Opal Kelly XEM6010 standard:)",0,Choo-Minhye/intanfpga,519138001,Verilog,intanfpga,27275,0,2022-08-01 03:38:08+00:00,[],None
322,https://github.com/agarwal-kavya/iiitb_rc.git,2022-07-27 04:10:15+00:00,,0,agarwal-kavya/iiitb_rc,518304802,Verilog,iiitb_rc,2331,0,2022-07-27 04:18:42+00:00,[],None
323,https://github.com/sanampudig/iiitb_pwm_gen.git,2022-07-27 04:14:14+00:00,,3,sanampudig/iiitb_pwm_gen,518305614,Verilog,iiitb_pwm_gen,2522,0,2022-07-27 04:31:07+00:00,[],https://api.github.com/licenses/mit
324,https://github.com/LYZ362527/apb.git,2022-08-04 09:25:21+00:00,,0,LYZ362527/apb,521202732,Verilog,apb,1,0,2022-08-04 09:27:23+00:00,[],None
325,https://github.com/FelipeMoraes03/Projeto-Microondas.git,2022-08-03 02:09:55+00:00,Projeto de Sistemas Digitais - 2021.2,0,FelipeMoraes03/Projeto-Microondas,520707788,Verilog,Projeto-Microondas,7,0,2022-08-03 02:14:44+00:00,[],None
326,https://github.com/MadejSzymon/seven_segment_display_timer_de10standard.git,2022-08-09 14:06:25+00:00,Implementation of a timer on two 7-segment displays,0,MadejSzymon/seven_segment_display_timer_de10standard,522975617,Verilog,seven_segment_display_timer_de10standard,11609,0,2022-08-09 19:10:27+00:00,[],None
327,https://github.com/huhuhunhun/verilog_-.git,2022-08-10 03:45:22+00:00,小数倍分频,0,huhuhunhun/verilog_-,523190519,Verilog,verilog_-,1,0,2022-08-10 05:21:07+00:00,[],None
328,https://github.com/33sgs/Verilog-SPI-Receiver.git,2022-08-10 06:50:13+00:00,Verilog SPI Receiver implementation,0,33sgs/Verilog-SPI-Receiver,523233324,Verilog,Verilog-SPI-Receiver,1,0,2022-08-10 06:51:50+00:00,[],None
329,https://github.com/OmarFahmy07/Bit_Synchronizer.git,2022-08-11 11:55:35+00:00,Bit Synchronizer Module Using Verilog HDL,0,OmarFahmy07/Bit_Synchronizer,523705109,Verilog,Bit_Synchronizer,1,0,2022-08-11 11:55:53+00:00,[],None
330,https://github.com/vaishnav-nk/CA_RISC-V-processor-Design.git,2022-08-11 05:19:33+00:00,,0,vaishnav-nk/CA_RISC-V-processor-Design,523594943,Verilog,CA_RISC-V-processor-Design,8,0,2022-08-11 05:21:11+00:00,[],None
331,https://github.com/Gyanendra17/ram.git,2022-08-13 16:04:38+00:00,,0,Gyanendra17/ram,524445468,Verilog,ram,2,0,2022-08-13 16:05:52+00:00,[],https://api.github.com/licenses/mit
332,https://github.com/hassin23ayz/verilogT.git,2022-08-02 04:46:47+00:00,verilog problem solving from HDLBits,0,hassin23ayz/verilogT,520354889,Verilog,verilogT,58,0,2022-08-02 04:55:12+00:00,[],None
333,https://github.com/reminon/core-template.git,2022-08-02 12:10:28+00:00,,0,reminon/core-template,520483379,Verilog,core-template,375,0,2022-08-02 12:10:33+00:00,[],None
334,https://github.com/Sharmi-Rajakumaran/Verilog-Codes.git,2022-08-03 17:59:28+00:00,,0,Sharmi-Rajakumaran/Verilog-Codes,520982432,Verilog,Verilog-Codes,21,0,2022-11-20 09:08:03+00:00,[],None
335,https://github.com/Aeolian2001/computer_design.git,2022-08-01 15:44:16+00:00,,0,Aeolian2001/computer_design,520169962,Verilog,computer_design,26,0,2022-08-01 15:58:15+00:00,[],None
336,https://github.com/zumahun/vga_frogger.git,2022-08-03 02:49:05+00:00,,0,zumahun/vga_frogger,520716386,Verilog,vga_frogger,19,0,2022-08-03 02:49:31+00:00,[],None
337,https://github.com/Himanshu5298/4-bit-Ring-counter.git,2022-08-12 15:50:42+00:00,4 bit ring counter,0,Himanshu5298/4-bit-Ring-counter,524144259,Verilog,4-bit-Ring-counter,5,0,2022-10-03 04:20:25+00:00,[],None
338,https://github.com/shuvipas/simple-processor.git,2022-07-27 15:06:05+00:00,FPGA project to code a simple processor,0,shuvipas/simple-processor,518505560,Verilog,simple-processor,1876,0,2022-08-04 07:17:39+00:00,[],None
339,https://github.com/Priyanshu5437/iiitb_pipo1.git,2022-07-28 09:57:51+00:00,,0,Priyanshu5437/iiitb_pipo1,518791335,Verilog,iiitb_pipo1,2650,0,2023-02-24 18:24:16+00:00,[],https://api.github.com/licenses/mit
340,https://github.com/prashant9111/prashant9111.git,2022-07-27 17:00:38+00:00,Config files for my GitHub profile.,0,prashant9111/prashant9111,518543939,Verilog,prashant9111,21,0,2022-07-27 17:13:41+00:00,"['config', 'github-config']",None
341,https://github.com/Prajakta-S-Kamble/Asynchronous-FIFO.git,2022-07-31 19:58:30+00:00,,0,Prajakta-S-Kamble/Asynchronous-FIFO,519874855,Verilog,Asynchronous-FIFO,185,0,2022-07-31 20:16:58+00:00,[],None
342,https://github.com/vyomasystems-lab/challenges-Sidshx.git,2022-07-31 19:16:36+00:00,challenges-Sidshx created by GitHub Classroom,0,vyomasystems-lab/challenges-Sidshx,519866521,Verilog,challenges-Sidshx,27,0,2022-08-22 16:01:42+00:00,[],
343,https://github.com/vyomasystems-lab/challenges-AugustAnandita.git,2022-08-01 15:49:52+00:00,challenges-AugustAnandita created by GitHub Classroom,0,vyomasystems-lab/challenges-AugustAnandita,520171760,Verilog,challenges-AugustAnandita,28,0,2022-08-22 16:01:44+00:00,[],
344,https://github.com/vyomasystems-lab/challenges-NikHilDewangaN069.git,2022-08-01 15:10:54+00:00,challenges-NikHilDewangaN069 created by GitHub Classroom,0,vyomasystems-lab/challenges-NikHilDewangaN069,520158676,Verilog,challenges-NikHilDewangaN069,29,0,2022-08-22 16:01:43+00:00,[],
345,https://github.com/yanjifei/caravel_asic.git,2022-08-03 08:35:25+00:00,,0,yanjifei/caravel_asic,520800003,Verilog,caravel_asic,2229,0,2022-08-03 08:35:38+00:00,[],https://api.github.com/licenses/apache-2.0
346,https://github.com/jlykhnnw/frequency-detect.git,2022-08-03 08:08:43+00:00,,0,jlykhnnw/frequency-detect,520791975,Verilog,frequency-detect,3,0,2022-08-03 08:09:26+00:00,[],None
347,https://github.com/singee-study/geektime-computer-basic.git,2022-08-03 05:09:27+00:00,,0,singee-study/geektime-computer-basic,520745241,Verilog,geektime-computer-basic,3,0,2022-08-03 05:09:43+00:00,[],None
348,https://github.com/buntyhim/RTL2GDS.git,2022-08-04 20:19:39+00:00,Simple Calculator with 16x2 Interfaced,0,buntyhim/RTL2GDS,521404549,Verilog,RTL2GDS,73,0,2022-08-04 20:21:21+00:00,[],None
349,https://github.com/AnastasiyaSharanhovich/SystemVerilog.git,2022-07-31 21:33:36+00:00,,0,AnastasiyaSharanhovich/SystemVerilog,519891707,Verilog,SystemVerilog,649,0,2023-07-01 16:58:21+00:00,[],None
350,https://github.com/RndMnkIII/Arcade-Athena_MiSTer.git,2022-08-06 17:59:11+00:00,,0,RndMnkIII/Arcade-Athena_MiSTer,522017961,Verilog,Arcade-Athena_MiSTer,20185,0,2022-08-06 18:00:55+00:00,[],https://api.github.com/licenses/gpl-2.0
351,https://github.com/AjayKumar-Gandi/iiitb_sd101011.git,2022-08-05 16:22:34+00:00,1010 Sequence detector using mealy,1,AjayKumar-Gandi/iiitb_sd101011,521704862,Verilog,iiitb_sd101011,5245,0,2022-08-30 19:39:12+00:00,[],https://api.github.com/licenses/mit
352,https://github.com/Angardo18/Arquitectura_del_computador.git,2022-08-05 22:52:06+00:00,,0,Angardo18/Arquitectura_del_computador,521794618,Verilog,Arquitectura_del_computador,5923,0,2022-09-28 02:05:43+00:00,[],None
353,https://github.com/AidanGood/DDR-FPGA.git,2022-08-08 19:02:11+00:00,Dance Dance Revolution FPGA implimentation,1,AidanGood/DDR-FPGA,522673208,Verilog,DDR-FPGA,11,0,2022-08-24 14:05:26+00:00,[],None
354,https://github.com/Aiswarya-MS/verilog.git,2022-08-08 07:26:24+00:00,,0,Aiswarya-MS/verilog,522447043,Verilog,verilog,23,0,2022-10-04 13:34:29+00:00,[],None
355,https://github.com/trisau38/Carry.git,2022-08-09 06:41:00+00:00,,0,trisau38/Carry,522833261,Verilog,Carry,81,0,2022-08-09 06:44:07+00:00,[],None
356,https://github.com/Martech123/verilog_learn.git,2022-08-09 03:39:15+00:00,,0,Martech123/verilog_learn,522790972,Verilog,verilog_learn,0,0,2022-08-12 05:58:14+00:00,[],None
357,https://github.com/HernandoR/lz_ic.git,2022-08-06 08:43:17+00:00,,0,HernandoR/lz_ic,521892899,Verilog,lz_ic,2230,0,2022-08-06 08:43:29+00:00,[],https://api.github.com/licenses/apache-2.0
358,https://github.com/charlotte-mu/ICC2022_grad.git,2022-07-29 07:35:56+00:00,2022 University College IC Design Contest / B_ICC2022_prelimily_grad_cell-based / Job Assignment Machine,0,charlotte-mu/ICC2022_grad,519124163,Verilog,ICC2022_grad,1059,0,2022-07-29 07:53:29+00:00,[],None
359,https://github.com/Nadee740/verilog.git,2022-07-29 09:58:23+00:00,,0,Nadee740/verilog,519165255,Verilog,verilog,17,0,2022-07-29 09:59:01+00:00,[],None
360,https://github.com/omarzalah/Digital-design-ICs.git,2022-07-29 23:19:37+00:00,Ans for assigment one that takes  first flip flop:(IN1 nor IN2)And(IN3) second flip flop:(IN2 NAND IN3) Third flip flop:(IN4'OR IN3)OR(IN5) ,0,omarzalah/Digital-design-ICs,519371825,Verilog,Digital-design-ICs,34,0,2022-07-29 23:20:11+00:00,[],None
361,https://github.com/karikkuma2329/Pipeline_Processor.git,2022-07-29 14:00:53+00:00,,0,karikkuma2329/Pipeline_Processor,519235606,Verilog,Pipeline_Processor,17,0,2022-07-29 14:01:45+00:00,[],None
362,https://github.com/vyomasystems-lab/challenges-Hemanth432.git,2022-07-27 05:44:47+00:00,challenges-Hemanth432 created by GitHub Classroom,0,vyomasystems-lab/challenges-Hemanth432,518324827,Verilog,challenges-Hemanth432,124,0,2022-08-22 16:01:24+00:00,[],
363,https://github.com/gdl1245105585/FOUR-STAGE-pipelined-MIPS-CPU.git,2022-07-27 10:54:35+00:00,More information could be obtained from report.pef,0,gdl1245105585/FOUR-STAGE-pipelined-MIPS-CPU,518419688,Verilog,FOUR-STAGE-pipelined-MIPS-CPU,360,0,2022-12-05 06:29:13+00:00,[],None
364,https://github.com/ysmaicon/MIPS-CPU.git,2022-08-03 04:36:00+00:00,,0,ysmaicon/MIPS-CPU,520738722,Verilog,MIPS-CPU,22777,0,2022-08-04 00:12:10+00:00,[],None
365,https://github.com/ofirm57/Step_Motor-Controller-.git,2022-08-04 09:06:12+00:00,"Step Motor Controller ,Verilog code ,Implementation on an FPGA card --> https://www.youtube.com/watch?v=PZxoFN5Q81s",0,ofirm57/Step_Motor-Controller-,521196913,Verilog,Step_Motor-Controller-,1259,0,2022-08-04 09:20:55+00:00,[],None
366,https://github.com/wishvamadushanka/RISCV_with_cache.git,2022-08-04 10:24:15+00:00,,0,wishvamadushanka/RISCV_with_cache,521220735,Verilog,RISCV_with_cache,20,0,2022-08-04 10:38:05+00:00,[],None
367,https://github.com/pradumnk/Vending-Machine.git,2022-08-13 12:18:29+00:00,Vending Machine implemention in Verilog,0,pradumnk/Vending-Machine,524391117,Verilog,Vending-Machine,3,0,2022-08-18 04:18:18+00:00,[],None
368,https://github.com/YuseiIto/rpn-uart-verilog.git,2022-08-13 15:06:17+00:00,,0,YuseiIto/rpn-uart-verilog,524431280,Verilog,rpn-uart-verilog,42,0,2022-11-01 20:23:02+00:00,[],https://api.github.com/licenses/mit
369,https://github.com/matin-yousefzade/MiniComputer.git,2022-08-13 09:16:57+00:00,A fully RTL-based implemented computer system.,0,matin-yousefzade/MiniComputer,524352347,Verilog,MiniComputer,1994,0,2022-08-13 09:18:13+00:00,[],None
370,https://github.com/ujjawal0503/iiitb_bc.git,2022-08-07 14:47:28+00:00,Bi -directional counter,0,ujjawal0503/iiitb_bc,522240207,Verilog,iiitb_bc,4295,0,2023-05-20 12:39:10+00:00,[],https://api.github.com/licenses/mit
371,https://github.com/DouglasWWolf/sidewinder_bandwidth.git,2022-08-07 08:58:32+00:00,Design and software for measuring component bandwidth on a Fidus Sidewinder,0,DouglasWWolf/sidewinder_bandwidth,522162975,Verilog,sidewinder_bandwidth,1445,0,2022-08-07 09:58:36+00:00,[],None
372,https://github.com/Akshat1412/16-Bit-carry-look-ahead-Adder-using-Verilog.git,2022-08-07 05:43:45+00:00,,0,Akshat1412/16-Bit-carry-look-ahead-Adder-using-Verilog,522126610,Verilog,16-Bit-carry-look-ahead-Adder-using-Verilog,6,0,2022-08-07 06:17:15+00:00,[],None
373,https://github.com/bishoy8599/RISC_V-Core.git,2022-08-06 17:39:55+00:00,This Project implements a 5 stage pipelining RISCV processor using a single ported byte addressable memory for both data and instructions.,0,bishoy8599/RISC_V-Core,522013761,Verilog,RISC_V-Core,20,0,2022-08-06 17:41:19+00:00,[],None
374,https://github.com/Bhavuk-HDL/Caravel_Project.git,2022-08-07 19:15:57+00:00,,0,Bhavuk-HDL/Caravel_Project,522302720,Verilog,Caravel_Project,2992,0,2022-08-07 19:16:09+00:00,[],https://api.github.com/licenses/apache-2.0
375,https://github.com/vyomasystems-lab/challenges-bhu1735.git,2022-08-01 16:38:32+00:00,challenges-bhu1735 created by GitHub Classroom,0,vyomasystems-lab/challenges-bhu1735,520187073,Verilog,challenges-bhu1735,27,0,2022-08-22 16:01:45+00:00,[],
376,https://github.com/zumahun/vga_move_square.git,2022-08-03 02:47:07+00:00,,0,zumahun/vga_move_square,520715982,Verilog,vga_move_square,3,0,2022-08-03 02:47:29+00:00,[],None
377,https://github.com/cirillom/trabalho-final-SEL0628.git,2022-07-30 02:32:03+00:00,,0,cirillom/trabalho-final-SEL0628,519399367,Verilog,trabalho-final-SEL0628,2328,0,2022-07-30 02:43:20+00:00,[],None
378,https://github.com/sasi-kiran123/IITB-RISC-PROCESSOR.git,2022-07-30 03:45:44+00:00,,0,sasi-kiran123/IITB-RISC-PROCESSOR,519411080,Verilog,IITB-RISC-PROCESSOR,6,0,2023-06-28 06:33:51+00:00,[],None
379,https://github.com/Saksham605/Project---8-bit-vedic-multiplier.git,2022-08-04 16:33:10+00:00,,0,Saksham605/Project---8-bit-vedic-multiplier,521340060,Verilog,Project---8-bit-vedic-multiplier,8,0,2022-08-04 16:41:32+00:00,[],None
380,https://github.com/FVeiza/Tomasulo_Algorithm.git,2022-08-04 22:07:39+00:00,"Project in Verilog HDL of an architecture of memory components aiming at the implementation of the Tomasulo algorithm, using the Quartus II software.",0,FVeiza/Tomasulo_Algorithm,521428493,Verilog,Tomasulo_Algorithm,8,0,2022-08-04 22:20:43+00:00,[],None
381,https://github.com/Srikalatvs/vaman.git,2022-07-28 14:54:47+00:00,,0,Srikalatvs/vaman,518888219,Verilog,vaman,4396,0,2022-07-28 17:02:09+00:00,[],None
382,https://github.com/GuilhermeAMoreira/Projeto_Final_SD.git,2022-07-29 18:16:38+00:00,,0,GuilhermeAMoreira/Projeto_Final_SD,519310466,Verilog,Projeto_Final_SD,10,0,2022-08-08 16:36:39+00:00,[],None
383,https://github.com/MatthewWildenradt/karateka.git,2022-08-05 02:15:23+00:00,,0,MatthewWildenradt/karateka,521474756,Verilog,karateka,44475,0,2022-08-05 02:44:52+00:00,[],None
384,https://github.com/KerellosNashaat/Single-Cycle-MIPS-Processor.git,2022-08-05 02:42:07+00:00,,0,KerellosNashaat/Single-Cycle-MIPS-Processor,521480326,Verilog,Single-Cycle-MIPS-Processor,1229,0,2022-08-05 02:44:44+00:00,[],None
385,https://github.com/judah-daniels/formal-exercises.git,2022-08-05 12:42:32+00:00,,0,judah-daniels/formal-exercises,521634181,Verilog,formal-exercises,133,0,2022-08-05 12:45:33+00:00,[],None
386,https://github.com/sumeyyebuyukguclu/Digital_System_Design.git,2022-08-03 22:50:18+00:00,in verilog,0,sumeyyebuyukguclu/Digital_System_Design,521054520,Verilog,Digital_System_Design,153,0,2022-08-04 22:59:27+00:00,[],None
387,https://github.com/FVeiza/Inclusive_Memory.git,2022-08-04 01:57:56+00:00,"Project in Verilog HDL of an inclusive hierarchy memory with 3 levels, using the Quartus II software.",0,FVeiza/Inclusive_Memory,521090066,Verilog,Inclusive_Memory,10,0,2022-08-30 00:48:08+00:00,[],None
388,https://github.com/vyomasystems-lab/challenges-Vinuthna3031.git,2022-07-27 12:47:01+00:00,challenges-Vinuthna3031 created by GitHub Classroom,0,vyomasystems-lab/challenges-Vinuthna3031,518455597,Verilog,challenges-Vinuthna3031,542,0,2022-08-22 16:01:26+00:00,[],
389,https://github.com/YousifEsmail/UART_RX.git,2022-07-31 22:33:13+00:00,,0,YousifEsmail/UART_RX,519901128,Verilog,UART_RX,233,0,2022-07-31 22:35:58+00:00,[],None
390,https://github.com/mahmutsalman/MIPS-Single-Cycle-Implementation.git,2022-07-30 11:54:17+00:00,MIPS single-cycle implementation by implementing additional instructions. ModelSim simulator is used.,0,mahmutsalman/MIPS-Single-Cycle-Implementation,519503466,Verilog,MIPS-Single-Cycle-Implementation,36,0,2022-07-30 11:55:59+00:00,[],None
391,https://github.com/UAH-IC-Design-Team/sscs-22-project-wrapper.git,2022-07-30 20:47:51+00:00,,0,UAH-IC-Design-Team/sscs-22-project-wrapper,519617635,Verilog,sscs-22-project-wrapper,1618964,0,2022-07-30 20:47:57+00:00,[],https://api.github.com/licenses/apache-2.0
392,https://github.com/majilokesh/iiitb_tlc.git,2022-07-27 04:06:53+00:00,Traffic light controller on a four-way road,1,majilokesh/iiitb_tlc,518304031,Verilog,iiitb_tlc,17817,0,2022-07-27 04:16:54+00:00,[],https://api.github.com/licenses/mit
393,https://github.com/OmarFahmy07/Garage_Door_Controller.git,2022-08-11 11:51:59+00:00,Garage Door Controller Module Using Verilog HDL,0,OmarFahmy07/Garage_Door_Controller,523704082,Verilog,Garage_Door_Controller,1,0,2022-08-11 11:52:17+00:00,[],None
394,https://github.com/lifpnc/ColorLiteNC.git,2022-08-08 22:28:23+00:00,LiteX CNC all firmware/drivers,0,lifpnc/ColorLiteNC,522725813,Verilog,ColorLiteNC,4108,0,2022-08-09 09:20:57+00:00,[],None
395,https://github.com/Ahmedsaied9/32-point-FFT.git,2022-08-08 20:27:00+00:00,A block that efficiently computes the DFT of a signal using the Cooley-Tukey algorithm,0,Ahmedsaied9/32-point-FFT,522696939,Verilog,32-point-FFT,23,0,2022-08-08 20:29:18+00:00,[],None
396,https://github.com/govind04/Asynchronous-FIFO.git,2022-08-09 21:30:25+00:00,,0,govind04/Asynchronous-FIFO,523114246,Verilog,Asynchronous-FIFO,1,0,2022-08-09 21:30:51+00:00,[],None
397,https://github.com/Mahmoud-el-sayed/controller_unit_for_a_washing_mashine.git,2022-08-09 15:47:47+00:00,,0,Mahmoud-el-sayed/controller_unit_for_a_washing_mashine,523013602,Verilog,controller_unit_for_a_washing_mashine,123,0,2022-08-09 15:52:27+00:00,[],None
398,https://github.com/Kholoud-Ebrahim/SBqM.git,2022-08-12 06:27:11+00:00,"The manager of the Safebank bank branch, located in a nearby mall, is proposing to install  an embedded system to monitor the client queue in front of the tellers. The proposed  system, called SBqM™, is to display various information about the status of the queue.",1,Kholoud-Ebrahim/SBqM,523979131,Verilog,SBqM,498,0,2022-09-30 10:17:16+00:00,[],None
399,https://github.com/Aymontsh/Controller-Unit-for-a-washing-machine-using-Verilog-Coding.git,2022-08-12 12:46:40+00:00,"A controller unit for a washing machine, the operation of the machine consists of the following states:  Idle - Filling Water - Washing - Rinsing - Spinning",0,Aymontsh/Controller-Unit-for-a-washing-machine-using-Verilog-Coding,524085517,Verilog,Controller-Unit-for-a-washing-machine-using-Verilog-Coding,18,0,2022-08-12 12:53:32+00:00,[],None
400,https://github.com/mattvenn/animation_tinytapeout_demo.git,2022-08-05 08:39:05+00:00,,0,mattvenn/animation_tinytapeout_demo,521564811,Verilog,animation_tinytapeout_demo,9,0,2022-08-05 08:39:09+00:00,[],https://api.github.com/licenses/apache-2.0
401,https://github.com/Hargen1/IC_Contest_2018.git,2022-07-31 07:34:05+00:00,,0,Hargen1/IC_Contest_2018,519709241,Verilog,IC_Contest_2018,1613,0,2022-07-31 12:37:37+00:00,[],None
402,https://github.com/quintenBruce/Capstone.git,2022-07-31 14:03:35+00:00,,1,quintenBruce/Capstone,519792534,Verilog,Capstone,33,0,2022-08-01 03:45:40+00:00,[],None
403,https://github.com/chrnk-exe/VerilogCourseWork.git,2022-08-04 13:33:03+00:00,,0,chrnk-exe/VerilogCourseWork,521279225,Verilog,VerilogCourseWork,132,0,2022-08-04 13:36:23+00:00,[],None
404,https://github.com/OmarFahmy07/16-bit_Reg_file.git,2022-08-11 11:46:22+00:00,16-Bit Register File Module Using Verilog HDL,0,OmarFahmy07/16-bit_Reg_file,523702447,Verilog,16-bit_Reg_file,1,0,2022-08-11 11:47:01+00:00,[],None
405,https://github.com/kowshikveduruparthi/vaman-internship.git,2022-07-27 05:25:19+00:00,,0,kowshikveduruparthi/vaman-internship,518320492,Verilog,vaman-internship,4461,0,2022-07-27 05:51:01+00:00,[],None
406,https://github.com/Ziad-cyber/UART_RX.git,2022-07-27 05:11:30+00:00,,0,Ziad-cyber/UART_RX,518317418,Verilog,UART_RX,12,0,2022-07-27 05:19:40+00:00,[],None
407,https://github.com/m4ury4p/iiitb_tlc.git,2022-08-10 15:47:16+00:00,ASIC project related to traffic light controller using iverilog,0,m4ury4p/iiitb_tlc,523403891,Verilog,iiitb_tlc,13351,0,2022-08-18 07:51:32+00:00,[],None
408,https://github.com/C-YongHeng/apb_can.git,2022-08-09 08:09:15+00:00,CAN controller for APB interface,1,C-YongHeng/apb_can,522859068,Verilog,apb_can,37,0,2022-08-09 08:10:16+00:00,[],None
409,https://github.com/LBL-InternGroup/Horner-Algorithm_attempt.git,2022-08-12 23:43:10+00:00,,0,LBL-InternGroup/Horner-Algorithm_attempt,524251430,Verilog,Horner-Algorithm_attempt,2,0,2022-08-12 23:44:36+00:00,[],None
410,https://github.com/TejasBN28/iiitb_gc.git,2022-07-27 04:15:57+00:00,Physical Design of a gray counter implemented with skywater 130 pdk,2,TejasBN28/iiitb_gc,518305937,Verilog,iiitb_gc,16666,0,2022-07-27 04:33:35+00:00,[],https://api.github.com/licenses/mit
411,https://github.com/Riteshlalwani/iiitb_lfsr.git,2022-07-27 04:14:43+00:00,lfsr for random number generation,1,Riteshlalwani/iiitb_lfsr,518305690,Verilog,iiitb_lfsr,5141,0,2022-07-29 16:30:41+00:00,[],https://api.github.com/licenses/mit
412,https://github.com/karikkuma2329/Single_Cycle_Processor.git,2022-07-29 13:52:44+00:00,,0,karikkuma2329/Single_Cycle_Processor,519233034,Verilog,Single_Cycle_Processor,12,0,2022-07-29 13:58:27+00:00,[],None
413,https://github.com/jayshah1x/iiitb_uarttx.git,2022-08-06 05:21:04+00:00,,0,jayshah1x/iiitb_uarttx,521854666,Verilog,iiitb_uarttx,2352,0,2022-08-11 10:18:28+00:00,[],None
414,https://github.com/mahati-basavaraju/iiitb_piso.git,2022-08-06 07:25:36+00:00,This repository contains details of design and working of a 4-bit PISO Shift Register,0,mahati-basavaraju/iiitb_piso,521877404,Verilog,iiitb_piso,2387,0,2022-08-07 09:39:49+00:00,[],None
415,https://github.com/Anujjha1031/iiitb_sqd_1010.git,2022-08-04 13:04:06+00:00,,1,Anujjha1031/iiitb_sqd_1010,521269333,Verilog,iiitb_sqd_1010,2463,0,2022-08-14 21:38:48+00:00,[],https://api.github.com/licenses/mit
416,https://github.com/RazaSaleem/Ring-Counter.git,2022-08-07 17:40:48+00:00,,0,RazaSaleem/Ring-Counter,522282100,Verilog,Ring-Counter,4,0,2022-08-07 17:53:36+00:00,[],None
417,https://github.com/sudhanshu6163/Design-verification.git,2022-08-08 19:10:39+00:00,,0,sudhanshu6163/Design-verification,522675689,Verilog,Design-verification,48,0,2022-08-08 19:23:52+00:00,[],
418,https://github.com/abdurrahmanuzum/standalone_hdl.git,2022-08-08 19:58:41+00:00,"Learning materials, testsl and small projects with Verilog.",0,abdurrahmanuzum/standalone_hdl,522689256,Verilog,standalone_hdl,358,0,2022-09-22 13:36:26+00:00,[],None
419,https://github.com/michealsafwat/MIPS.git,2022-07-28 21:01:12+00:00,,0,michealsafwat/MIPS,518993338,Verilog,MIPS,93,0,2022-07-28 21:02:37+00:00,[],None
420,https://github.com/michealsafwat/Controller-unit-for-a-washing-machine.git,2022-07-28 20:49:53+00:00,,0,michealsafwat/Controller-unit-for-a-washing-machine,518990823,Verilog,Controller-unit-for-a-washing-machine,9,0,2022-07-28 20:56:21+00:00,[],None
421,https://github.com/AhmedSherif-12/UART-RX.git,2022-07-31 17:43:24+00:00,,0,AhmedSherif-12/UART-RX,519846260,Verilog,UART-RX,4,0,2022-07-31 17:45:21+00:00,[],None
422,https://github.com/JWang5818/Verilog.git,2022-08-01 12:43:54+00:00,Verilog_Project,0,JWang5818/Verilog,520106424,Verilog,Verilog,2,0,2022-08-01 12:50:50+00:00,[],None
423,https://github.com/sirius-blog/fpga_mylibraries.git,2022-08-04 02:37:58+00:00,,0,sirius-blog/fpga_mylibraries,521099044,Verilog,fpga_mylibraries,2,0,2022-08-04 06:21:35+00:00,[],None
424,https://github.com/Ahmed-El-said/-RTL-to-GDS-Implementation-of-low-power-Configurable-Multi-Clock-Digital-System.git,2022-08-05 23:24:57+00:00,,0,Ahmed-El-said/-RTL-to-GDS-Implementation-of-low-power-Configurable-Multi-Clock-Digital-System,521799538,Verilog,-RTL-to-GDS-Implementation-of-low-power-Configurable-Multi-Clock-Digital-System,690,0,2022-08-05 23:29:14+00:00,[],None
425,https://github.com/KerellosNashaat/Washing-Machine-Control-Unit.git,2022-08-05 03:28:39+00:00,,0,KerellosNashaat/Washing-Machine-Control-Unit,521490079,Verilog,Washing-Machine-Control-Unit,1942,0,2022-08-05 03:30:30+00:00,[],None
426,https://github.com/ararajs/efabless_caravel.git,2022-08-05 17:56:48+00:00,efabless_caravel,0,ararajs/efabless_caravel,521731442,Verilog,efabless_caravel,2229,0,2022-08-05 17:57:00+00:00,[],https://api.github.com/licenses/apache-2.0
427,https://github.com/srikanishk/UART_Verilog-1.git,2022-08-10 03:09:30+00:00,,0,srikanishk/UART_Verilog-1,523182773,,UART_Verilog-1,2,0,2022-01-27 12:01:40+00:00,[],None
428,https://github.com/IMT2020511/4Bit_ring_counter_iiitb.git,2022-08-10 08:57:45+00:00,,0,IMT2020511/4Bit_ring_counter_iiitb,523270731,Verilog,4Bit_ring_counter_iiitb,10964,0,2022-08-18 09:32:31+00:00,[],None
429,https://github.com/Aarif2054/Verilog.git,2022-08-09 15:22:59+00:00,Verilog Mini projects,0,Aarif2054/Verilog,523004694,Verilog,Verilog,2181,0,2022-08-09 15:26:35+00:00,[],None
430,https://github.com/Hemantaggarwa/Traffic-Control-System-using-Verilog.git,2022-08-09 13:12:51+00:00,,0,Hemantaggarwa/Traffic-Control-System-using-Verilog,522955978,Verilog,Traffic-Control-System-using-Verilog,5,0,2022-08-09 13:34:12+00:00,[],None
431,https://github.com/CyanGuo/Basic-Modules-Verilog.git,2022-08-11 22:09:56+00:00,,0,CyanGuo/Basic-Modules-Verilog,523882368,Verilog,Basic-Modules-Verilog,3,0,2022-08-11 22:15:15+00:00,[],None
432,https://github.com/OmarFahmy07/16-bit_ALU.git,2022-08-11 11:41:48+00:00,16-Bit ALU Using Verilog HDL,0,OmarFahmy07/16-bit_ALU,523701141,Verilog,16-bit_ALU,6,0,2022-08-11 11:43:12+00:00,[],None
433,https://github.com/DouglasWWolf/testbed.git,2022-07-29 04:35:23+00:00,temporary testbed for DMA development,0,DouglasWWolf/testbed,519080617,Verilog,testbed,20672,0,2022-07-29 19:56:46+00:00,[],None
434,https://github.com/neelamnasir1/HarwareObfuscation.git,2022-07-29 10:27:29+00:00,"Ephemeral Key-based Hybrid Hardware Obfuscation Neelam Nasir1,*, Arsalan Ali Malik2, Ifra Tahir3, Ammar Masood4 and Naveed Riaz5",0,neelamnasir1/HarwareObfuscation,519173329,Verilog,HarwareObfuscation,18,0,2022-07-29 10:35:53+00:00,[],None
435,https://github.com/daveisyofav/UART-in-Verilog.git,2022-07-29 16:43:44+00:00,Receiving and transmitting with UART between FPGA and computer via USB,0,daveisyofav/UART-in-Verilog,519284679,Verilog,UART-in-Verilog,5,0,2022-07-29 16:44:45+00:00,[],None
436,https://github.com/adi-anirudh/Single-Cycle-MIPS-ISA.git,2022-08-02 06:36:52+00:00,Verilog Implementation of a MIPS ISA Processor,0,adi-anirudh/Single-Cycle-MIPS-ISA,520380986,Verilog,Single-Cycle-MIPS-ISA,14522,0,2022-08-02 06:40:54+00:00,[],None
437,https://github.com/JeffreyWong20/ARM_CPU.git,2022-07-30 04:48:01+00:00,,0,JeffreyWong20/ARM_CPU,519420822,Verilog,ARM_CPU,102036,0,2022-07-30 04:52:15+00:00,[],None
438,https://github.com/RTimothyEdwards/caravel_testing.git,2022-07-29 16:32:57+00:00,Temprorary test of the project build procedure,0,RTimothyEdwards/caravel_testing,519281701,Verilog,caravel_testing,2230,0,2022-07-29 16:33:10+00:00,[],https://api.github.com/licenses/apache-2.0
439,https://github.com/talhaiqbal-10xe/CFA_RTL.git,2022-08-03 11:22:30+00:00,,0,talhaiqbal-10xe/CFA_RTL,520851164,Verilog,CFA_RTL,7494,0,2022-08-03 11:35:37+00:00,[],None
440,https://github.com/stevengigi/digital_design__prac.git,2022-08-02 09:00:05+00:00,,0,stevengigi/digital_design__prac,520424127,Verilog,digital_design__prac,1429,0,2022-08-02 09:04:16+00:00,[],None
441,https://github.com/vinisha2410/password_based_lock_verilog.git,2022-07-31 15:20:38+00:00,,0,vinisha2410/password_based_lock_verilog,519811862,Verilog,password_based_lock_verilog,2,0,2022-07-31 17:49:16+00:00,[],https://api.github.com/licenses/mit
442,https://github.com/vyomasystems-lab/challenges-TanuSree2.git,2022-07-31 15:57:40+00:00,challenges-TanuSree2 created by GitHub Classroom,0,vyomasystems-lab/challenges-TanuSree2,519821252,Verilog,challenges-TanuSree2,27,0,2022-08-22 16:01:41+00:00,[],
443,https://github.com/NihalMullaparambil/HDL-lab.git,2022-07-30 16:54:56+00:00,just to transfer dev code from my system to server,1,NihalMullaparambil/HDL-lab,519572549,Verilog,HDL-lab,954,0,2022-07-30 16:58:07+00:00,[],None
444,https://github.com/FVeiza/nRISC_Processor.git,2022-08-04 01:06:11+00:00,"Project in Verilog HDL to simulate a ""nano RISC"" processor using the Quartus II software.",0,FVeiza/nRISC_Processor,521079331,Verilog,nRISC_Processor,10,0,2022-08-04 22:17:39+00:00,[],None
445,https://github.com/JTN22/FPGA.git,2022-08-08 20:33:26+00:00,,0,JTN22/FPGA,522698673,Verilog,FPGA,1239,0,2022-08-08 20:43:38+00:00,[],None
446,https://github.com/Jo3Zhou/axis_i2s_receiver.git,2022-08-09 11:07:32+00:00,axis_i2s_receiver,0,Jo3Zhou/axis_i2s_receiver,522914044,Verilog,axis_i2s_receiver,36,0,2022-08-09 11:08:10+00:00,[],None
447,https://github.com/omarzalah/Alu-by-verliog-and-testbench.git,2022-08-11 09:15:17+00:00,"Introduction: - ALU is the fundamental building block of the processor, which is responsible for carrying out the arithmetic, logic functions, Shift functions and Comparison functions. Specification: ● ALU Operands (A, B) ● ALU Result (ALU_OUT) ● ALU operands and output Result are of 16-bit width. ● ALU Result (ALU_OUT) is registered. ● The ALU function is carried out according to the value of the ALU_FUN input signal stated in the table in the following page and any other value for ALU_FUN not stated in the table, ALU_OUT must equal to 16’b0 ● Arith_flag is activated ""High"" only when ALU performs one of the arithmetic operations (Addition, Subtraction, Multiplication, division), otherwise ""LOW"" ● Logic_flag is activated ""High"" only when ALU performs one of the Boolean operations (AND, OR, NAND, NOR, XOR, XNOR), otherwise ""LOW"" ● CMP_flag is activated ""High"" only when ALU performs one of the Comparison operations (Equal, Greater than, less than), otherwise ""LOW"" ● Shift_flag is activated ""High"" only when ALU performs one of the shifting operations (shift right, shift left), otherwise ""LOW""",0,omarzalah/Alu-by-verliog-and-testbench,523657870,Verilog,Alu-by-verliog-and-testbench,641,0,2022-08-11 09:15:49+00:00,[],None
448,https://github.com/wainejr/VerilogGPU.git,2022-08-05 21:36:47+00:00,Build a processor in Verilog using a SIMD (Single Instruction Multiple Data) architecture,0,wainejr/VerilogGPU,521781879,Verilog,VerilogGPU,2,0,2023-10-04 19:23:18+00:00,[],https://api.github.com/licenses/mit
449,https://github.com/skariuki98/Computer-System-Design-Verilog.git,2022-08-13 21:13:20+00:00,Verilog projects implemented using an Anvyl Spartan-6 FPGA board and Xilinx ISE,0,skariuki98/Computer-System-Design-Verilog,524509242,Verilog,Computer-System-Design-Verilog,6489,0,2022-08-15 23:11:17+00:00,[],https://api.github.com/licenses/unlicense
450,https://github.com/AaronVigal/CP8.git,2022-08-02 15:34:43+00:00,,0,AaronVigal/CP8,520554694,Verilog,CP8,24814,0,2022-08-02 16:05:36+00:00,[],
451,https://github.com/kevinbijuthomas/16-Bit-CPU.git,2022-08-01 10:53:16+00:00,Developed a 16-bit CPU in Verilog,0,kevinbijuthomas/16-Bit-CPU,520071598,Verilog,16-Bit-CPU,28,0,2022-08-01 11:00:59+00:00,[],None
452,https://github.com/imtiaz-usc/Crossy-Road-FPGA.git,2022-08-03 03:51:44+00:00,,0,imtiaz-usc/Crossy-Road-FPGA,520729752,Verilog,Crossy-Road-FPGA,91493,0,2022-08-03 04:20:50+00:00,[],None
453,https://github.com/lumusen0305/OpenMIPS.git,2022-07-30 05:37:18+00:00,learning cpu design flow,0,lumusen0305/OpenMIPS,519428870,Verilog,OpenMIPS,1446,0,2022-07-30 05:39:06+00:00,[],None
454,https://github.com/vyomasystems-lab/challenges-Nikhil190398.git,2022-07-30 06:55:14+00:00,challenges-Nikhil190398 created by GitHub Classroom,0,vyomasystems-lab/challenges-Nikhil190398,519443196,Verilog,challenges-Nikhil190398,44,0,2022-08-22 16:01:37+00:00,[],
455,https://github.com/syaoo/fpga_utils.git,2022-07-30 15:00:30+00:00,,0,syaoo/fpga_utils,519545981,Verilog,fpga_utils,37,0,2022-07-30 15:25:11+00:00,[],None
456,https://github.com/tzzht/SCC.git,2022-08-01 06:37:46+00:00,private,0,tzzht/SCC,519993174,Verilog,SCC,1317,0,2022-08-01 06:55:59+00:00,[],None
457,https://github.com/NCKU-CAID/VLSI_2022_training.git,2022-08-01 09:23:46+00:00,This repo contains the training materials for incoming students in 2022.,0,NCKU-CAID/VLSI_2022_training,520044025,Verilog,VLSI_2022_training,15173,0,2022-08-01 09:48:40+00:00,[],None
458,https://github.com/EhabMostafaa/MIPS-Single-Cycle-Processor-.git,2022-08-01 09:39:15+00:00,,0,EhabMostafaa/MIPS-Single-Cycle-Processor-,520048938,Verilog,MIPS-Single-Cycle-Processor-,12,0,2022-08-01 09:52:34+00:00,[],None
459,https://github.com/vyomasystems-lab/challenges-sajjapratyusha.git,2022-07-31 05:29:51+00:00,challenges-sajjapratyusha created by GitHub Classroom,0,vyomasystems-lab/challenges-sajjapratyusha,519688188,Verilog,challenges-sajjapratyusha,207,0,2022-08-22 16:01:40+00:00,[],
460,https://github.com/mahadevaswamy05/github_experiments.git,2022-08-03 06:00:06+00:00,small code execution,1,mahadevaswamy05/github_experiments,520756165,Verilog,github_experiments,12,0,2022-08-05 17:14:02+00:00,[],None
461,https://github.com/jlykhnnw/AGC.git,2022-08-03 08:24:48+00:00,,0,jlykhnnw/AGC,520796656,Verilog,AGC,4,0,2022-08-03 08:25:26+00:00,[],None
462,https://github.com/ducminhnguyen123/verilog_viterbi.git,2022-08-03 08:32:50+00:00,,0,ducminhnguyen123/verilog_viterbi,520799197,Verilog,verilog_viterbi,20526,0,2022-08-03 08:39:23+00:00,[],None
463,https://github.com/govind04/16-bit-Dadda-Multiplier.git,2022-08-03 12:56:02+00:00,,0,govind04/16-bit-Dadda-Multiplier,520880461,Verilog,16-bit-Dadda-Multiplier,92,0,2022-08-03 12:57:22+00:00,[],None
464,https://github.com/omarzalah/Counter-up-and-down-for-5-bits.git,2022-08-05 13:32:50+00:00,"-5-bit counter - Count Value loaded from ""IN"" port on a positive clock edge when ""Load"" signal is high, Load has highest priority - Count value incremented by 1 on a positive clock edge when ""Up"" signal is high. - Count value decremented by 1 on a positive clock edge when ""Down"" signal is high, Down has higher priority than ""Up"" signal - Increment stops at 31 - Decrement stops at 0 - ""High"" flag active high whenever count value is 31 - ""Low"" flag active high whenever count value is 0",0,omarzalah/Counter-up-and-down-for-5-bits,521650041,Verilog,Counter-up-and-down-for-5-bits,251,0,2022-08-05 13:33:23+00:00,[],None
465,https://github.com/nelagamy/Calculator.git,2022-08-08 20:05:45+00:00,,0,nelagamy/Calculator,522691107,Verilog,Calculator,11,0,2022-08-08 20:13:47+00:00,[],None
466,https://github.com/Peng-ju-Zhang/HDLbits_practice.git,2022-08-08 14:15:27+00:00,This is my  HDLbit practice Repository,0,Peng-ju-Zhang/HDLbits_practice,522577892,Verilog,HDLbits_practice,31,0,2022-08-08 14:20:13+00:00,[],None
467,https://github.com/tryyang2001/EE2026-FPGA-Project.git,2022-08-04 08:17:37+00:00,This repository stores the Verilog code for AY2020-21 Sem 2 EE2026 FPGA Design Project ,0,tryyang2001/EE2026-FPGA-Project,521181867,Verilog,EE2026-FPGA-Project,107,0,2022-08-04 08:24:45+00:00,[],None
468,https://github.com/Ahmed-El-said/WashingMachine-controlUnit.git,2022-08-07 22:26:42+00:00,,0,Ahmed-El-said/WashingMachine-controlUnit,522338518,Verilog,WashingMachine-controlUnit,1,0,2022-08-07 22:29:22+00:00,[],None
469,https://github.com/glunkad/N-Bit-Multiplier.git,2022-08-06 18:04:36+00:00,,0,glunkad/N-Bit-Multiplier,522019127,Verilog,N-Bit-Multiplier,6,0,2022-08-06 18:06:21+00:00,[],https://api.github.com/licenses/mit
470,https://github.com/newyear2580/107_2_ComputerOrganization_Midterm.git,2022-08-07 06:49:19+00:00,,0,newyear2580/107_2_ComputerOrganization_Midterm,522138236,Verilog,107_2_ComputerOrganization_Midterm,22,0,2022-08-07 07:20:34+00:00,[],None
471,https://github.com/Cra2yPierr0t/sky130_sram_test.git,2022-08-07 17:49:58+00:00,,0,Cra2yPierr0t/sky130_sram_test,522284161,Verilog,sky130_sram_test,2234,0,2022-08-07 17:50:11+00:00,[],https://api.github.com/licenses/apache-2.0
472,https://github.com/mattvenn/wokwi_inverters.git,2022-08-09 07:37:11+00:00,,0,mattvenn/wokwi_inverters,522849429,Verilog,wokwi_inverters,11,0,2022-08-09 07:37:15+00:00,[],https://api.github.com/licenses/apache-2.0
473,https://github.com/PabloJoseD/Proyecto-verilog.git,2022-07-27 02:23:36+00:00,,0,PabloJoseD/Proyecto-verilog,518281071,Verilog,Proyecto-verilog,24,0,2022-11-18 01:27:47+00:00,[],None
474,https://github.com/GabrielSiqueira1/AOC_MIPS-Unicycle-4bits.git,2022-07-27 01:32:54+00:00,Project for approval in Computer Organization and Architecture/Design,0,GabrielSiqueira1/AOC_MIPS-Unicycle-4bits,518269756,Verilog,AOC_MIPS-Unicycle-4bits,3918,0,2023-05-01 02:51:12+00:00,[],None
475,https://github.com/Parziwal27/Traffic-Light-controller.git,2022-07-28 15:37:21+00:00,,0,Parziwal27/Traffic-Light-controller,518902849,Verilog,Traffic-Light-controller,8,0,2022-07-28 15:47:41+00:00,[],None
476,https://github.com/vyomasystems-lab/challenges-AtharvRasal.git,2022-07-28 11:15:32+00:00,challenges-AtharvRasal created by GitHub Classroom,0,vyomasystems-lab/challenges-AtharvRasal,518814637,Verilog,challenges-AtharvRasal,27,0,2022-08-22 16:01:30+00:00,[],
477,https://github.com/HarryMusketeer/Study-Verilog.git,2022-07-27 04:36:42+00:00,"Some self-projects about circuit design, digital system, synthesis.... using verilog language.",0,HarryMusketeer/Study-Verilog,518310136,Verilog,Study-Verilog,10,0,2022-11-02 15:30:14+00:00,[],None
478,https://github.com/2500404063/RISC-V32.git,2022-07-27 11:36:33+00:00,An easy implementation of RV32,0,2500404063/RISC-V32,518432376,Verilog,RISC-V32,6476,0,2022-07-27 11:39:07+00:00,[],None
479,https://github.com/ymhagargi/IIITB_CarPS.git,2022-08-11 10:07:23+00:00,,0,ymhagargi/IIITB_CarPS,523673767,Verilog,IIITB_CarPS,86,0,2022-08-11 10:30:38+00:00,[],None
480,https://github.com/mkiesinger/AES-Encryption-Module.git,2022-08-10 20:47:01+00:00,"An AES encryption module written in verilog, featuring ready-valid interface to encrypt key and plaintext pairs.",0,mkiesinger/AES-Encryption-Module,523492216,Verilog,AES-Encryption-Module,23,0,2022-08-10 21:26:47+00:00,[],https://api.github.com/licenses/gpl-3.0
481,https://github.com/Muhamed-Sayed/Single-Cycle-MIPS-Processor.git,2022-08-13 22:55:02+00:00,Using Verilog (simulated and synthesized using Vivado).,0,Muhamed-Sayed/Single-Cycle-MIPS-Processor,524525151,Verilog,Single-Cycle-MIPS-Processor,1232,0,2022-08-13 23:19:49+00:00,[],None
482,https://github.com/jasteve4/MicroMotorSequencer.git,2022-08-13 23:43:38+00:00,,0,jasteve4/MicroMotorSequencer,524532083,Verilog,MicroMotorSequencer,196681,0,2022-08-13 23:43:50+00:00,[],https://api.github.com/licenses/apache-2.0
483,https://github.com/Rajib-IITB/Brent-Kung-Adder.git,2022-08-11 13:44:57+00:00,32-bit Brent Kung Adder Design,0,Rajib-IITB/Brent-Kung-Adder,523739343,Verilog,Brent-Kung-Adder,2,0,2022-08-11 13:45:21+00:00,[],None
484,https://github.com/sh-mohammadi/registered_superalu.git,2022-08-12 08:31:43+00:00,,0,sh-mohammadi/registered_superalu,524012526,Verilog,registered_superalu,4,0,2022-08-12 08:46:39+00:00,[],None
485,https://github.com/dessotti1/projeto_SD.git,2022-07-29 18:13:43+00:00,Projeto final da disciplina de Sistemas Digitais,1,dessotti1/projeto_SD,519309743,Verilog,projeto_SD,2569,0,2022-07-29 18:24:33+00:00,[],https://api.github.com/licenses/mit
486,https://github.com/XiaBin520/RV-Core.git,2022-07-30 05:35:46+00:00,,0,XiaBin520/RV-Core,519428637,Verilog,RV-Core,2852,0,2022-08-08 04:05:48+00:00,[],None
487,https://github.com/CHESS-mission/Clyde_IP_dev.git,2022-07-30 18:15:19+00:00,development of custom IP blocks to be integrated into clyde.,0,CHESS-mission/Clyde_IP_dev,519589505,Verilog,Clyde_IP_dev,1565,0,2022-07-30 18:29:24+00:00,[],None
488,https://github.com/MostafaMahmoud54/Washing-Machine.git,2022-08-08 20:08:53+00:00,Washing Machine control unit. The architecture consists of 2 main modules (FSM and Timer) in addition to a Top Module and a simple testbench. The washing machine starts its operation when a coin is deposited with 2 modes Single wash and Double wash.,0,MostafaMahmoud54/Washing-Machine,522692078,Verilog,Washing-Machine,1685,0,2022-08-08 20:44:20+00:00,[],None
489,https://github.com/pritishsh/HDLBits.git,2022-08-12 11:24:31+00:00,,0,pritishsh/HDLBits,524061421,Verilog,HDLBits,40,0,2022-08-12 11:31:59+00:00,[],None
490,https://github.com/batnas/test_analog_mow.git,2022-08-08 15:06:50+00:00,,0,batnas/test_analog_mow,522597574,Verilog,test_analog_mow,94,0,2022-08-08 15:06:55+00:00,[],https://api.github.com/licenses/apache-2.0
491,https://github.com/Vishalcode9/iiitb_Johnson_counter.git,2022-08-10 15:52:58+00:00,,1,Vishalcode9/iiitb_Johnson_counter,523405860,Verilog,iiitb_Johnson_counter,11827,0,2022-08-11 10:15:52+00:00,[],None
492,https://github.com/SashiniLiyanage/verilog-8-bit-single-cycle-processor.git,2022-08-11 02:56:14+00:00,,0,SashiniLiyanage/verilog-8-bit-single-cycle-processor,523566830,Verilog,verilog-8-bit-single-cycle-processor,3039,0,2022-08-11 03:02:22+00:00,[],None
493,https://github.com/m-s-dhanush/RC.git,2022-08-11 11:26:38+00:00,,0,m-s-dhanush/RC,523696791,Verilog,RC,1,0,2022-08-11 11:29:30+00:00,[],None
494,https://github.com/Gyanendra17/sequence_detector.git,2022-08-13 04:51:05+00:00,,0,Gyanendra17/sequence_detector,524303598,Verilog,sequence_detector,0,0,2022-08-13 04:51:34+00:00,[],None
495,https://github.com/vanBassum/TangNano9k.git,2022-08-05 14:10:53+00:00,,0,vanBassum/TangNano9k,521662675,Verilog,TangNano9k,17872,0,2022-08-05 14:16:57+00:00,[],None
496,https://github.com/hypnotic2402/iiitb_aclock.git,2022-08-04 10:53:13+00:00,,0,hypnotic2402/iiitb_aclock,521229113,Verilog,iiitb_aclock,5058,0,2022-08-11 10:03:04+00:00,[],None
497,https://github.com/Surbhi2712/Verilog-BCD-Adder.git,2022-08-04 10:44:11+00:00,,0,Surbhi2712/Verilog-BCD-Adder,521226469,Verilog,Verilog-BCD-Adder,176,0,2022-08-04 10:48:59+00:00,[],None
498,https://github.com/Nisha-B-Rajput/iiitb_alu.git,2022-08-04 12:24:43+00:00,,0,Nisha-B-Rajput/iiitb_alu,521256677,Verilog,iiitb_alu,6958,0,2022-08-04 12:40:23+00:00,[],https://api.github.com/licenses/mit
499,https://github.com/lorenaol/vlsi.git,2022-07-28 10:49:46+00:00,,0,lorenaol/vlsi,518807008,Verilog,vlsi,663,0,2022-07-28 10:51:00+00:00,[],None
500,https://github.com/PepegaMagnum/DiscreteFourierTransform.git,2022-07-27 21:49:59+00:00,,0,PepegaMagnum/DiscreteFourierTransform,518620872,Verilog,DiscreteFourierTransform,6196,0,2022-07-27 21:52:07+00:00,[],None
501,https://github.com/gednyengs/gcd_wrapper.git,2022-07-28 14:48:59+00:00,GCD Wrapper,0,gednyengs/gcd_wrapper,518886209,Verilog,gcd_wrapper,35,0,2022-08-02 16:54:31+00:00,[],None
502,https://github.com/matteusgui/aad-p5.git,2022-08-01 13:37:26+00:00,Prática 5 da matéria de Arquitetura de Alto Desempenho da Universidade Federal de São Carlos,0,matteusgui/aad-p5,520124827,Verilog,aad-p5,3350,0,2022-08-01 13:42:42+00:00,[],None
503,https://github.com/hassanelsman/Single-Cycle-MIPS-Processor.git,2022-08-01 02:47:17+00:00,"implementation of a 32-bit single-cycle microarchitecture  MIPS processor based on Harvard Architecture. The single-cycle microarchitecture executes an  entire instruction in one cycle. In other words instruction fetch, instruction decode, execute,  write back, and program counter update occurs within a single clock cycle.",0,hassanelsman/Single-Cycle-MIPS-Processor,519942809,Verilog,Single-Cycle-MIPS-Processor,1227,0,2022-08-22 22:43:23+00:00,[],None
504,https://github.com/leeshy-tech/Digital_Circuit_Experiments_fan.git,2022-07-31 13:33:39+00:00,"a project named ""Temperature controlled fan"" from course ""Digital Circuit Experiments""",0,leeshy-tech/Digital_Circuit_Experiments_fan,519785134,Verilog,Digital_Circuit_Experiments_fan,1064,0,2022-07-31 13:36:51+00:00,[],None
505,https://github.com/vyomasystems-lab/challenges-Rahulpendor.git,2022-07-27 14:05:06+00:00,challenges-Rahulpendor created by GitHub Classroom,0,vyomasystems-lab/challenges-Rahulpendor,518483192,Verilog,challenges-Rahulpendor,27,0,2022-08-22 16:01:27+00:00,[],
506,https://github.com/RexCYJ/4x4MIMO_detector_VerilogCode.git,2022-07-27 03:53:42+00:00,Verilog of the MIMO detector,0,RexCYJ/4x4MIMO_detector_VerilogCode,518301214,Verilog,4x4MIMO_detector_VerilogCode,60,0,2022-07-27 03:59:50+00:00,[],None
507,https://github.com/doorvant/CPU-RISC-V.git,2022-07-29 07:12:22+00:00,,0,doorvant/CPU-RISC-V,519117323,Verilog,CPU-RISC-V,16,0,2022-07-29 07:40:57+00:00,[],None
508,https://github.com/Sairamakula1999/Floating_Point_ALU.git,2022-08-02 14:11:32+00:00,,0,Sairamakula1999/Floating_Point_ALU,520525280,Verilog,Floating_Point_ALU,246,0,2022-08-17 18:03:55+00:00,[],None
509,https://github.com/Herring-UGACSEE-4290-F22/Labs.git,2022-08-02 12:59:03+00:00,,0,Herring-UGACSEE-4290-F22/Labs,520499530,Verilog,Labs,10984,0,2022-08-02 13:02:50+00:00,[],None
510,https://github.com/EECS-FingerVein/Verilog_convolution.git,2022-08-07 16:11:02+00:00,,0,EECS-FingerVein/Verilog_convolution,522260902,Verilog,Verilog_convolution,6,0,2022-11-29 08:29:35+00:00,[],None
511,https://github.com/vijaybharath99/IEEE-754-Floating-Point-Adder-Subtractor.git,2022-08-02 12:36:11+00:00,This is the HDL code of IEEE 754 Floating Point Adder Subtractor in verilog.,0,vijaybharath99/IEEE-754-Floating-Point-Adder-Subtractor,520491731,Verilog,IEEE-754-Floating-Point-Adder-Subtractor,2,0,2022-08-02 12:38:08+00:00,[],None
512,https://github.com/swstrathman/repodepot.git,2022-08-07 23:18:08+00:00,Github Repo,0,swstrathman/repodepot,522346582,Verilog,repodepot,116471,0,2024-02-02 04:55:31+00:00,[],None
513,https://github.com/aamodbk/iiitb_aclock.git,2022-08-10 08:19:22+00:00,Design and Implementation of Alarm clock through PD flow,0,aamodbk/iiitb_aclock,523259030,Verilog,iiitb_aclock,3090,0,2024-02-13 11:03:50+00:00,"['alarm', 'clock', 'verilog', 'verilog-hdl']",None
514,https://github.com/vyomasystems-lab/challenges-htrinath.git,2022-07-27 07:30:34+00:00,challenges-htrinath created by GitHub Classroom,0,vyomasystems-lab/challenges-htrinath,518354789,Verilog,challenges-htrinath,27,0,2022-08-22 16:01:26+00:00,[],
515,https://github.com/passant5/caravel_user_project_example.git,2022-07-28 11:47:25+00:00,,0,passant5/caravel_user_project_example,518824108,Verilog,caravel_user_project_example,101993,0,2022-07-28 11:47:37+00:00,[],https://api.github.com/licenses/apache-2.0
516,https://github.com/DebanganaMukherjee/iiitb_usr.git,2022-08-06 14:44:32+00:00,This project analyses and simulates the operations of a 4-bit Universal Shift Register. The Register can take data and control inputs from the user and execute data operations according to the mode of operation specified.,0,DebanganaMukherjee/iiitb_usr,521972572,Verilog,iiitb_usr,2729,0,2022-08-12 08:36:01+00:00,[],None
517,https://github.com/funnylir/blue-whale.git,2022-08-04 09:10:06+00:00,,0,funnylir/blue-whale,521198108,Verilog,blue-whale,2230,0,2022-08-04 09:10:19+00:00,[],https://api.github.com/licenses/apache-2.0
518,https://github.com/KerellosNashaat/UART-Interface-UART-TX-UART-RX-.git,2022-08-05 03:00:55+00:00,,0,KerellosNashaat/UART-Interface-UART-TX-UART-RX-,521484309,Verilog,UART-Interface-UART-TX-UART-RX-,10,0,2022-08-05 03:24:51+00:00,[],None
519,https://github.com/jrfreyes/hexto7seg.git,2022-08-05 08:41:56+00:00,,0,jrfreyes/hexto7seg,521565546,Verilog,hexto7seg,3,0,2022-08-05 08:42:37+00:00,[],https://api.github.com/licenses/mit
520,https://github.com/Euge908/CPF3-Softcore-Processor.git,2022-08-02 07:26:59+00:00,This project implements a 16 bit softcore processor using the CISC architecture,0,Euge908/CPF3-Softcore-Processor,520395832,Verilog,CPF3-Softcore-Processor,11,0,2022-08-02 07:34:09+00:00,[],None
521,https://github.com/PE-611/SPI_TX_MASTER_CYCLONE_IV.git,2022-08-02 18:22:01+00:00,,0,PE-611/SPI_TX_MASTER_CYCLONE_IV,520606402,Verilog,SPI_TX_MASTER_CYCLONE_IV,4776,0,2022-08-02 18:32:42+00:00,[],None
522,https://github.com/RAbh-inav/Wallace-Multiplier.git,2022-08-02 18:35:58+00:00,4 bit Wallace multiplier for fast and efficient multiplication using half and full adders has been implemented using Verilog HDL in Altera Quartus and its timing and power analysis has been done ,0,RAbh-inav/Wallace-Multiplier,520610592,Verilog,Wallace-Multiplier,2364,0,2022-08-02 20:59:26+00:00,['verilog'],None
523,https://github.com/AhmedSherif-12/UART_TX.git,2022-07-31 15:56:05+00:00,,0,AhmedSherif-12/UART_TX,519820871,Verilog,UART_TX,731,0,2022-07-31 16:52:50+00:00,[],None
524,https://github.com/birdx-007/MIPS_pipeline_CPU.git,2022-07-31 11:42:22+00:00,基于MIPS指令集子集的五级流水线处理器设计,0,birdx-007/MIPS_pipeline_CPU,519759804,Verilog,MIPS_pipeline_CPU,1633,0,2022-07-31 15:56:50+00:00,[],https://api.github.com/licenses/apache-2.0
525,https://github.com/Amreen-Kaur/CORDIC.git,2022-07-31 06:12:29+00:00,,0,Amreen-Kaur/CORDIC,519695048,Verilog,CORDIC,2153,0,2022-12-23 08:57:50+00:00,[],None
526,https://github.com/sreenya24/Y-86-processor.git,2022-07-29 19:04:16+00:00,,0,sreenya24/Y-86-processor,519322485,Verilog,Y-86-processor,656,0,2023-10-10 12:05:45+00:00,[],None
527,https://github.com/v-sekar/caravel.git,2022-07-29 18:39:57+00:00,,0,v-sekar/caravel,519316445,Verilog,caravel,2229,0,2022-07-29 18:40:10+00:00,[],https://api.github.com/licenses/apache-2.0
528,https://github.com/subha-ratno/Processor.git,2022-07-29 20:09:00+00:00,A repository to implement various components of a general purpose processor,0,subha-ratno/Processor,519337734,Verilog,Processor,5,0,2022-07-29 20:13:04+00:00,[],None
529,https://github.com/CyanGuo/Asynchronous-FIFO.git,2022-08-05 06:55:30+00:00,"Dual-Clock FIFO, Clock Domain Cross",0,CyanGuo/Asynchronous-FIFO,521536007,Verilog,Asynchronous-FIFO,4,0,2022-08-05 06:56:40+00:00,[],None
530,https://github.com/carvalhosamuel/GrapeForCKTs.git,2022-08-04 13:56:52+00:00,GRAPE code running circuit evolution problems.,0,carvalhosamuel/GrapeForCKTs,521287529,Verilog,GrapeForCKTs,1706,0,2023-09-11 09:31:24+00:00,[],None
531,https://github.com/ClarkBrun/NN_FPGA.git,2022-08-05 13:46:26+00:00,,0,ClarkBrun/NN_FPGA,521654382,Verilog,NN_FPGA,23140,0,2022-08-12 12:48:25+00:00,[],None
532,https://github.com/adi-anirudh/UART-RX-TX.git,2022-08-06 06:10:54+00:00,,0,adi-anirudh/UART-RX-TX,521863425,Verilog,UART-RX-TX,3,0,2022-08-06 06:11:30+00:00,[],None
533,https://github.com/dogeMayichuan/PoorGuy-s_GrahpicCard.git,2022-08-07 01:17:39+00:00,,0,dogeMayichuan/PoorGuy-s_GrahpicCard,522088966,Verilog,PoorGuy-s_GrahpicCard,5,0,2022-08-07 01:22:02+00:00,[],None
534,https://github.com/Gagan163264/Booth-Multiplier.git,2022-08-07 09:31:00+00:00,Booth's multiplication algorithm,0,Gagan163264/Booth-Multiplier,522169565,Verilog,Booth-Multiplier,31,0,2022-08-07 09:40:11+00:00,[],None
535,https://github.com/matin-yousefzade/ARM-CPU-on-FPGA.git,2022-08-13 15:15:35+00:00,A mini ARM-based CPU implemented by Verilog on Altera Cyclone II FPGA board.,0,matin-yousefzade/ARM-CPU-on-FPGA,524433508,Verilog,ARM-CPU-on-FPGA,18,0,2022-08-13 15:20:48+00:00,[],None
536,https://github.com/LoesterFranco/Single-Cycle-Datapath.git,2022-07-28 14:18:55+00:00,,0,LoesterFranco/Single-Cycle-Datapath,518875511,,Single-Cycle-Datapath,48,0,2022-07-28 14:18:52+00:00,[],None
537,https://github.com/AmrMaged-H/UART.git,2022-07-28 10:00:57+00:00,"UART TX, RX Implementation",0,AmrMaged-H/UART,518792333,Verilog,UART,305,0,2022-07-28 10:01:05+00:00,[],None
538,https://github.com/mariamaliezzat/clock-divider.git,2022-08-03 22:20:01+00:00,,0,mariamaliezzat/clock-divider,521048485,Verilog,clock-divider,28,0,2022-08-03 22:23:33+00:00,[],None
539,https://github.com/HemanthVeeramalla/Linux_Basics.git,2022-08-03 10:42:00+00:00,for practicing the linux and git & github,0,HemanthVeeramalla/Linux_Basics,520839410,Verilog,Linux_Basics,5,0,2022-08-03 11:23:09+00:00,[],None
540,https://github.com/stanley108/openlane-stdcell-n-charecterization.git,2022-08-08 15:08:25+00:00,,0,stanley108/openlane-stdcell-n-charecterization,522598154,Verilog,openlane-stdcell-n-charecterization,24587,0,2022-08-08 15:09:27+00:00,[],https://api.github.com/licenses/apache-2.0
541,https://github.com/Naderatef10/washing-machine_final.git,2022-08-08 16:43:33+00:00,,0,Naderatef10/washing-machine_final,522631055,Verilog,washing-machine_final,2,0,2022-08-08 16:43:38+00:00,[],None
542,https://github.com/connor1048/FPGA-Projects.git,2022-08-12 00:42:31+00:00,,0,connor1048/FPGA-Projects,523910116,Verilog,FPGA-Projects,6,0,2022-12-11 02:23:16+00:00,[],None
543,https://github.com/Bianca66/Pipeline.git,2022-08-01 08:06:02+00:00,,0,Bianca66/Pipeline,520019544,Verilog,Pipeline,669,0,2022-08-01 08:06:59+00:00,[],None
544,https://github.com/RanChenRivai/cpu_camp_TO.git,2022-08-01 03:06:48+00:00,,0,RanChenRivai/cpu_camp_TO,519946906,Verilog,cpu_camp_TO,6384,0,2022-09-17 09:18:38+00:00,[],https://api.github.com/licenses/apache-2.0
545,https://github.com/MadejSzymon/ddio_de10standard.git,2022-08-09 18:52:02+00:00,Tester of Double Data IO IP core ,0,MadejSzymon/ddio_de10standard,523072801,Verilog,ddio_de10standard,14855,0,2022-08-09 18:59:10+00:00,[],None
546,https://github.com/AhsanAliUet/stop-watch-on-Nexys-A7-FPGA-with-Verilog.git,2022-08-09 05:21:14+00:00,"It is a repository in which stop watch is made in verilog and synthesized on Nexys A7 FPGA. 7 Segment displays of this FGPA were used to display centi-seconds, seconds, minutes and hours as the start button is asserted. We can pause, resume/start, reset this FPGA with buttons as input to FPGA and eventually stop watch.",0,AhsanAliUet/stop-watch-on-Nexys-A7-FPGA-with-Verilog,522812855,Verilog,stop-watch-on-Nexys-A7-FPGA-with-Verilog,12,0,2022-08-09 05:48:58+00:00,[],None
547,https://github.com/fenggang233/HDLBits_verilog_practice.git,2022-08-13 05:47:25+00:00,HDLBits Verilog上觉得值得记录的题目,0,fenggang233/HDLBits_verilog_practice,524313626,Verilog,HDLBits_verilog_practice,32,0,2022-08-13 05:49:19+00:00,[],None
548,https://github.com/FlyCode-ZX/Graduation_design.git,2022-08-13 06:47:53+00:00,我的毕业设计,0,FlyCode-ZX/Graduation_design,524323687,Verilog,Graduation_design,89561,0,2022-08-13 07:03:35+00:00,[],None
549,https://github.com/Asmita-Zjigyasu/iiitb_riscv32im5.git,2022-08-10 11:40:11+00:00,,2,Asmita-Zjigyasu/iiitb_riscv32im5,523319968,Verilog,iiitb_riscv32im5,13803,0,2022-08-11 10:22:33+00:00,[],None
550,https://github.com/Rajib-IITB/Asynchronous-FIFO.git,2022-08-11 13:40:25+00:00,N-Byte Asynchronous FIFO Design,0,Rajib-IITB/Asynchronous-FIFO,523737735,Verilog,Asynchronous-FIFO,7,0,2022-08-11 13:41:54+00:00,[],None
551,https://github.com/flatline-cz/renderer.git,2022-07-31 11:42:29+00:00,,0,flatline-cz/renderer,519759825,Verilog,renderer,451,0,2023-08-23 08:42:02+00:00,[],https://api.github.com/licenses/gpl-3.0
552,https://github.com/hassanelsman/Linear-Feedback-Shift-Register-LSFR-.git,2022-08-01 02:39:53+00:00,LFSR is a shift register that has some of its outputs together in exclusiveOR or exclusive-NOR configurations to form a feedback path.,0,hassanelsman/Linear-Feedback-Shift-Register-LSFR-,519941354,Verilog,Linear-Feedback-Shift-Register-LSFR-,186,0,2022-08-01 02:41:18+00:00,[],None
553,https://github.com/AyaRedaOsman/UART_Repo.git,2022-07-30 00:10:55+00:00,,0,AyaRedaOsman/UART_Repo,519378990,Verilog,UART_Repo,3,0,2022-07-30 00:14:13+00:00,[],None
554,https://github.com/jay-soggee/LearnVerilog.git,2022-07-27 02:20:36+00:00,,0,jay-soggee/LearnVerilog,518280418,Verilog,LearnVerilog,230,0,2022-07-27 02:32:20+00:00,[],None
555,https://github.com/RohitR1301/iiitb_brg.git,2022-07-27 04:22:49+00:00,,0,RohitR1301/iiitb_brg,518307298,Verilog,iiitb_brg,11688,0,2022-07-27 05:09:08+00:00,[],None
556,https://github.com/AmanP-IIITB/iiitb_jc.git,2022-07-27 04:22:36+00:00,it is used in hardware logic design to create complicated Finite states machine. ex: ASIC and FPGA design.,0,AmanP-IIITB/iiitb_jc,518307247,Verilog,iiitb_jc,2379,0,2022-07-27 13:44:09+00:00,[],https://api.github.com/licenses/mit
557,https://github.com/coderalai/some-module-of-hardware.git,2022-08-02 10:56:20+00:00,collect some IP module ,0,coderalai/some-module-of-hardware,520460161,Verilog,some-module-of-hardware,62,0,2022-08-09 16:48:25+00:00,[],None
558,https://github.com/bbttko/PicoRV-StepFPGA.git,2022-08-01 09:07:46+00:00,PicoRV on StepFPGA MAX10,1,bbttko/PicoRV-StepFPGA,520038878,Verilog,PicoRV-StepFPGA,73,0,2022-08-01 09:11:35+00:00,[],https://api.github.com/licenses/gpl-3.0
559,https://github.com/DylanKennyBoland/upDownCount.git,2022-08-01 11:42:09+00:00,,0,DylanKennyBoland/upDownCount,520086453,Verilog,upDownCount,186,0,2022-08-01 11:46:29+00:00,[],None
560,https://github.com/ofirm57/Processor_Verilog.git,2022-08-04 08:15:03+00:00,"Design and implement the processor using Verilog code, and display it on an FPGA card.",0,ofirm57/Processor_Verilog,521181107,Verilog,Processor_Verilog,3004,0,2022-08-04 08:59:31+00:00,[],None
561,https://github.com/Surbhi2712/Verilog-Carry-Look-Ahead.git,2022-08-04 10:51:15+00:00,,0,Surbhi2712/Verilog-Carry-Look-Ahead,521228520,Verilog,Verilog-Carry-Look-Ahead,956,0,2022-08-08 17:53:36+00:00,[],None
562,https://github.com/jianghaoyu-1030/verilog_repository_self.git,2022-08-03 06:28:48+00:00,存放verilog可用的代码模块，自用,0,jianghaoyu-1030/verilog_repository_self,520763382,Verilog,verilog_repository_self,17,0,2022-08-03 07:06:32+00:00,[],None
563,https://github.com/guanzetong/verilog_practice.git,2022-08-04 22:10:31+00:00,,0,guanzetong/verilog_practice,521429058,Verilog,verilog_practice,1,0,2022-08-04 22:11:21+00:00,[],None
564,https://github.com/doronshamgar/dsp1.git,2022-08-12 20:00:59+00:00,,0,doronshamgar/dsp1,524210322,Verilog,dsp1,2229,0,2022-08-12 20:01:11+00:00,[],https://api.github.com/licenses/apache-2.0
565,https://github.com/yimelon1/cndes_start.git,2022-08-08 11:09:33+00:00,,0,yimelon1/cndes_start,522515159,Verilog,cndes_start,4092,0,2022-08-08 11:22:33+00:00,[],None
566,https://github.com/OmarFahmy07/LFSR.git,2022-08-11 11:49:03+00:00,Linear Feedback Shift Register Module Using Verilog HDL,0,OmarFahmy07/LFSR,523703216,Verilog,LFSR,1,0,2022-08-11 11:49:28+00:00,[],None
567,https://github.com/EnesErcin/Image_Preprocessing_wFPGA.git,2022-08-12 12:09:04+00:00,FPGA design that can apply basic filters to the image data using block ram.,0,EnesErcin/Image_Preprocessing_wFPGA,524073646,Verilog,Image_Preprocessing_wFPGA,45580,0,2022-09-20 19:04:01+00:00,"['image-processing', 'fpga-programming', 'hardware-designs']",https://api.github.com/licenses/mit
568,https://github.com/sh-mohammadi/CSA_adder.git,2022-08-12 10:48:46+00:00,,0,sh-mohammadi/CSA_adder,524051183,Verilog,CSA_adder,3,0,2022-08-12 11:09:44+00:00,[],None
569,https://github.com/sifanlight/wlan_fpga.git,2022-08-06 12:57:43+00:00,,0,sifanlight/wlan_fpga,521947091,Verilog,wlan_fpga,1869,0,2022-09-19 13:36:43+00:00,[],None
570,https://github.com/Muhamed-Sayed/Design-and-Synthesize-a-Full-Digital-System.git,2022-08-13 23:07:22+00:00,It is responsible for doing some processing using ALU block on Register File stored data to generate byte data then send it using Serial Communication Protocol UART.,0,Muhamed-Sayed/Design-and-Synthesize-a-Full-Digital-System,524526896,Verilog,Design-and-Synthesize-a-Full-Digital-System,721,0,2022-08-13 23:19:46+00:00,[],None
571,https://github.com/Anh-tp-do/Combinational-SequentialCircuits.git,2022-08-13 21:30:06+00:00,,0,Anh-tp-do/Combinational-SequentialCircuits,524512051,Verilog,Combinational-SequentialCircuits,8,0,2022-08-13 22:01:31+00:00,[],None
572,https://github.com/romantitovmephi/Crossbar.git,2022-08-13 18:55:52+00:00,,0,romantitovmephi/Crossbar,524483576,Verilog,Crossbar,90,0,2022-08-13 18:57:40+00:00,[],None
573,https://github.com/Justina0331/rs232_AES.git,2022-07-28 07:47:51+00:00,,0,Justina0331/rs232_AES,518750955,Verilog,rs232_AES,665884,0,2023-01-03 11:18:58+00:00,[],None
574,https://github.com/pransu-shrivastav/asynchronous_FIFO.git,2022-07-28 19:13:36+00:00,,0,pransu-shrivastav/asynchronous_FIFO,518966908,Verilog,asynchronous_FIFO,689,0,2022-07-28 19:14:35+00:00,[],None
575,https://github.com/Aymontsh/Up-Down-Counter-using-Verilog-code.git,2022-08-05 14:04:48+00:00,A 5-bits up down counter with load signal ,0,Aymontsh/Up-Down-Counter-using-Verilog-code,521660687,Verilog,Up-Down-Counter-using-Verilog-code,158,0,2022-08-05 14:08:24+00:00,[],None
576,https://github.com/ureydata/RISC-V_singleCycle.git,2022-08-06 01:34:01+00:00,,0,ureydata/RISC-V_singleCycle,521817871,Verilog,RISC-V_singleCycle,377,0,2022-08-07 07:57:54+00:00,[],None
577,https://github.com/mattvenn/tinytapeout-7seg-decoder.git,2022-08-13 10:53:34+00:00,,0,mattvenn/tinytapeout-7seg-decoder,524372225,Verilog,tinytapeout-7seg-decoder,12,0,2022-08-13 10:53:38+00:00,[],https://api.github.com/licenses/apache-2.0
578,https://github.com/harrisonadkin/MTRX3700.git,2022-08-10 23:24:50+00:00,,0,harrisonadkin/MTRX3700,523524787,Verilog,MTRX3700,1394,0,2022-10-06 12:55:27+00:00,[],None
579,https://github.com/pradumnk/MIPS-CPU.git,2022-08-13 12:09:51+00:00,A simple implementation of MIPS CPU which is 16bit single cycle. Logarithmic Barrel Shifter is added and integrated with ALU for SLL and SRL instruction in its ISA. ,0,pradumnk/MIPS-CPU,524389126,Verilog,MIPS-CPU,25180,0,2022-08-16 12:40:19+00:00,[],None
580,https://github.com/adi-anirudh/Asynchronous-FIFO.git,2022-08-06 06:04:52+00:00,RTL Description of an Asynchronous FIFO,0,adi-anirudh/Asynchronous-FIFO,521862378,Verilog,Asynchronous-FIFO,1,0,2022-08-06 06:05:35+00:00,[],None
581,https://github.com/naveen473/Verilog.git,2022-08-06 04:52:44+00:00,"Verilog, standardized as IEEE 1364, is a hardware description language (HDL) used to model electronic systems. It is most commonly used in the design and verification of digital circuits at the register-transfer level of abstraction.",0,naveen473/Verilog,521849936,Verilog,Verilog,393,0,2022-08-19 11:02:29+00:00,[],None
582,https://github.com/jurevreca12/rvj1-caravel-soc-mpw7.git,2022-08-08 13:07:42+00:00,,0,jurevreca12/rvj1-caravel-soc-mpw7,522553437,Verilog,rvj1-caravel-soc-mpw7,95448,0,2022-08-08 13:12:22+00:00,[],https://api.github.com/licenses/apache-2.0
583,https://github.com/MadejSzymon/adc_de10standard.git,2022-08-09 18:22:45+00:00,Implementation of Digital Voltmeter on Four 7-Segment Displays.,0,MadejSzymon/adc_de10standard,523063889,Verilog,adc_de10standard,4098,0,2022-08-09 18:24:34+00:00,[],None
584,https://github.com/University-Academics/INFOS.git,2022-07-31 04:54:22+00:00,,0,University-Academics/INFOS,519683028,Verilog,INFOS,14848,0,2022-07-31 11:30:32+00:00,[],None
585,https://github.com/RudranshKi/Verilog-HDL-designs.git,2022-07-27 16:47:24+00:00,my VLSI projects,0,RudranshKi/Verilog-HDL-designs,518539769,Verilog,Verilog-HDL-designs,17,0,2023-02-07 16:45:02+00:00,[],None
586,https://github.com/archandesai/iiitb_fifo.git,2022-07-27 04:18:18+00:00,ASIC design flow of FIFO memory,0,archandesai/iiitb_fifo,518306354,Verilog,iiitb_fifo,2886,0,2022-07-27 04:36:20+00:00,[],https://api.github.com/licenses/mit
587,https://github.com/termias19/Real_Horner_algorithm.git,2022-07-28 00:45:01+00:00,,0,termias19/Real_Horner_algorithm,518652614,Verilog,Real_Horner_algorithm,1,0,2022-07-28 00:46:34+00:00,[],None
588,https://github.com/eacrawford02/int-clk-div.git,2022-07-30 15:24:10+00:00,An arbitrary integer clock divider with 50% duty cycle.,0,eacrawford02/int-clk-div,519551680,Verilog,int-clk-div,384,0,2022-07-30 15:25:52+00:00,[],https://api.github.com/licenses/mit
589,https://github.com/sinaghadermarzi/low_power_multiplier.git,2022-07-29 19:53:01+00:00,,0,sinaghadermarzi/low_power_multiplier,519334034,Verilog,low_power_multiplier,1511,0,2022-07-29 19:54:06+00:00,[],None
590,https://github.com/Rodrigodsgit/Interface_E-S.git,2022-07-29 15:04:51+00:00,Comunicação RS232 entre uma FPGA e uma Raspberry Pi,0,Rodrigodsgit/Interface_E-S,519256156,Verilog,Interface_E-S,6577,0,2022-07-29 15:30:32+00:00,[],None
591,https://github.com/karikkuma2329/STOPPER_CUBRIDGE.git,2022-07-29 14:26:03+00:00,,0,karikkuma2329/STOPPER_CUBRIDGE,519243725,Verilog,STOPPER_CUBRIDGE,77,0,2022-07-29 14:32:51+00:00,[],None
592,https://github.com/vyomasystems-lab/challenges-jenish4.git,2022-07-29 09:40:46+00:00,challenges-jenish4 created by GitHub Classroom,0,vyomasystems-lab/challenges-jenish4,519160320,Verilog,challenges-jenish4,222,0,2022-08-22 16:01:33+00:00,[],
593,https://github.com/RndMnkIII/Arcade-TNKIII_MiSTer.git,2022-08-03 18:33:12+00:00,,0,RndMnkIII/Arcade-TNKIII_MiSTer,520992374,Verilog,Arcade-TNKIII_MiSTer,38220,0,2022-08-03 19:00:28+00:00,[],https://api.github.com/licenses/gpl-2.0
594,https://github.com/vyomasystems-lab/challenges-shabbarvejlani.git,2022-08-01 18:02:17+00:00,challenges-shabbarvejlani created by GitHub Classroom,0,vyomasystems-lab/challenges-shabbarvejlani,520213263,Verilog,challenges-shabbarvejlani,221,0,2022-08-22 16:05:10+00:00,[],
595,https://github.com/NabilYasser/Multicycle.git,2022-08-03 15:28:22+00:00,,0,NabilYasser/Multicycle,520935500,Verilog,Multicycle,7,0,2022-08-20 11:57:11+00:00,[],None
596,https://github.com/PE-611/ADC128S022_DRIVER.git,2022-08-03 19:12:58+00:00,ADC128S022_DRIVER,0,PE-611/ADC128S022_DRIVER,521003344,Verilog,ADC128S022_DRIVER,3285,0,2022-08-03 19:14:41+00:00,[],None
597,https://github.com/SeungHwan-Do/20221_Logic_Circuit_Design.git,2022-08-06 15:25:23+00:00,,0,SeungHwan-Do/20221_Logic_Circuit_Design,521982701,Verilog,20221_Logic_Circuit_Design,22,0,2022-08-06 15:34:22+00:00,[],None
598,https://github.com/OmarFahmy07/Data_Synchronizer.git,2022-08-11 11:56:58+00:00,Data Synchronizer Module Using Verilog HDL,1,OmarFahmy07/Data_Synchronizer,523705532,Verilog,Data_Synchronizer,2,0,2022-08-11 11:57:28+00:00,[],None
599,https://github.com/jessimd/caravel-tinyrocket.git,2022-08-13 01:17:37+00:00,,0,jessimd/caravel-tinyrocket,524266532,Verilog,caravel-tinyrocket,66493,0,2022-08-13 01:17:49+00:00,[],https://api.github.com/licenses/apache-2.0
600,https://github.com/Dileepkumar57/vaman.git,2022-07-28 16:48:04+00:00,,0,Dileepkumar57/vaman,518924747,Verilog,vaman,32,0,2022-07-28 16:51:42+00:00,[],None
601,https://github.com/vladimir-vasyuk/delqa.git,2022-08-11 18:32:55+00:00,,0,vladimir-vasyuk/delqa,523829641,Verilog,delqa,338,0,2024-02-26 11:00:29+00:00,[],None
