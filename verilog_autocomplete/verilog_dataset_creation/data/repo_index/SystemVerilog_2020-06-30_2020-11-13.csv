,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/pulp-platform/snitch.git,2020-08-21 09:57:34+00:00,⛔ DEPRECATED ⛔ Lean but mean RISC-V system!,49,pulp-platform/snitch,289236605,SystemVerilog,snitch,14614,212,2023-12-16 17:44:39+00:00,[],https://api.github.com/licenses/apache-2.0
1,https://github.com/fpgasystems/Coyote.git,2020-09-04 22:30:25+00:00,"Framework providing operating system abstractions and a range of shared networking (RDMA, TCP/IP) and memory services to common modern heterogeneous platforms.",50,fpgasystems/Coyote,292958683,SystemVerilog,Coyote,303346,176,2024-04-12 01:34:46+00:00,"['fpga', 'hbm', 'rdma', 'service', 'tcp', 'virtualization', 'amd', 'xilinx-fpga']",https://api.github.com/licenses/mit
2,https://github.com/Lampro-Mellon/LM-RISCV-DV.git,2020-08-10 11:14:38+00:00,An Open-Source Design and Verification Environment for RISC-V,26,Lampro-Mellon/LM-RISCV-DV,286453572,SystemVerilog,LM-RISCV-DV,19359,70,2024-02-26 07:00:04+00:00,[],https://api.github.com/licenses/apache-2.0
3,https://github.com/f4pga/prjuray.git,2020-07-15 20:15:48+00:00,"Documenting the Xilinx Ultrascale, Ultrascale+ and UltraScale MPSoC series bit-stream format.",12,f4pga/prjuray,279968526,SystemVerilog,prjuray,1437,66,2024-03-23 19:12:31+00:00,"['fpga', 'xilinx', 'xilinx-fpga', 'ultrascale', 'ultrascale-plus', 'bitstream', 'fuzzer', 'vivado', 'symbiflow']",https://api.github.com/licenses/apache-2.0
4,https://github.com/dadongshangu/async_FIFO.git,2020-09-05 01:03:10+00:00,This asynchrounous FIFO deisgn and UVM verificaiton is one case study of me.  The design is based on Cliff Cumming's paper and the UVM is coded by me(Xianghzi Meng),15,dadongshangu/async_FIFO,292976057,SystemVerilog,async_FIFO,182,47,2024-04-13 13:33:53+00:00,"['async-fifo', 'verilog-tb', 'uvm', 'fifo', 'asynchronous', 'verification-code']",https://api.github.com/licenses/mit
5,https://github.com/Superscalar-HIT-Core/Superscalar-HIT-Core-NSCSCC2020.git,2020-08-20 10:18:10+00:00,"a Quad-issue, Out-of-order Superscalar MIPS Processor Implemented in SystemVerilog",5,Superscalar-HIT-Core/Superscalar-HIT-Core-NSCSCC2020,288974075,SystemVerilog,Superscalar-HIT-Core-NSCSCC2020,13975,42,2024-03-29 06:09:29+00:00,[],None
6,https://github.com/NSCSCC-2020-Fudan/FDU1.1-NSCSCC.git,2020-08-24 13:43:48+00:00,复旦大学FDU1.1队在第四届“龙芯杯”的参赛作品,3,NSCSCC-2020-Fudan/FDU1.1-NSCSCC,289939604,SystemVerilog,FDU1.1-NSCSCC,7134,37,2024-04-11 05:51:17+00:00,[],None
7,https://github.com/ThalesGroup/cva6-softcore-contest.git,2020-10-14 13:50:28+00:00,National RISC-V student contest CV32A6,25,ThalesGroup/cva6-softcore-contest,304030213,SystemVerilog,cva6-softcore-contest,51235,33,2024-04-12 08:29:30+00:00,[],
8,https://github.com/j-marjanovic/pp-sp-reference-design.git,2020-08-29 12:53:09+00:00,,13,j-marjanovic/pp-sp-reference-design,291270895,SystemVerilog,pp-sp-reference-design,799,33,2023-12-15 07:01:47+00:00,[],None
9,https://github.com/Lampro-Mellon/apb-uart-uvm-env.git,2020-11-11 07:04:49+00:00,,13,Lampro-Mellon/apb-uart-uvm-env,311890035,SystemVerilog,apb-uart-uvm-env,11816,32,2024-03-15 05:51:46+00:00,[],None
10,https://github.com/Anjali-287/SPI-Interface.git,2020-07-04 06:17:50+00:00,UVM Testbench to verify serial transmission of data between SPI master and slave,12,Anjali-287/SPI-Interface,277051337,SystemVerilog,SPI-Interface,20,29,2024-03-22 18:12:00+00:00,"['uvm', 'spi']",None
11,https://github.com/alaasal/GPCore.git,2020-09-06 13:42:22+00:00,This is the base repo for our graduation project in AlexU 21,13,alaasal/GPCore,293284979,SystemVerilog,GPCore,1547,28,2023-08-14 01:22:09+00:00,[],https://api.github.com/licenses/mit
12,https://github.com/SymbioticEDA/nerv.git,2020-10-19 11:47:25+00:00,Naive Educational RISC-V -- A simple single-stage RV32I processor,3,SymbioticEDA/nerv,305365923,SystemVerilog,nerv,138,23,2023-03-28 16:25:48+00:00,[],
13,https://github.com/ljgibbslf/basic_cache_core.git,2020-08-06 08:14:29+00:00,,9,ljgibbslf/basic_cache_core,285513470,SystemVerilog,basic_cache_core,3299,22,2024-03-04 06:14:48+00:00,[],None
14,https://github.com/RSPwFPGAs/virtio-fpga.git,2020-07-09 02:38:06+00:00,A platform for emulating Virtio devices with FPGAs,11,RSPwFPGAs/virtio-fpga,278244322,SystemVerilog,virtio-fpga,884,22,2024-03-07 06:21:24+00:00,"['virtio', 'fpga', 'pcie', 'qemu', 'cosim', 'msix']",https://api.github.com/licenses/bsd-3-clause
15,https://github.com/RSPwFPGAs/virtio-fpga-bridge.git,2020-08-22 05:35:41+00:00,"Virtio front-end and back-end bridge, implemented with FPGA.",7,RSPwFPGAs/virtio-fpga-bridge,289426479,SystemVerilog,virtio-fpga-bridge,4136,22,2024-03-19 13:36:18+00:00,"['virtio', 'fpga', 'pcie', 'qemu', 'cosim']",https://api.github.com/licenses/bsd-3-clause
16,https://github.com/pgroupATusc/fasthash.git,2020-10-02 18:41:29+00:00,Source Code for the paper Titled FASTHash: FPGA-Based High Throughput Parallel Hash Table published in ISC high performance 2020,5,pgroupATusc/fasthash,300706058,SystemVerilog,fasthash,27,18,2024-02-01 01:17:16+00:00,[],None
17,https://github.com/Dongtata2020/UVM_Verification_for_P2S_Data_Converter.git,2020-10-06 08:04:08+00:00,为了学习UVM验证相关知识，需要动手尝试实际的项目。作为一个初学者，难以接触到实际的项目，于是我从夏宇闻老师的《Verilog数字系统设计教程》一书中，挑选出一个简单的小设计，作为我的验证对象，并围绕它编写了UVM验证环境。,4,Dongtata2020/UVM_Verification_for_P2S_Data_Converter,301655681,SystemVerilog,UVM_Verification_for_P2S_Data_Converter,263,18,2024-01-04 03:22:11+00:00,"['uvm', 'verilog', 'systemverilog', 'verification']",None
18,https://github.com/CircuitCoder/mill.git,2020-09-30 16:40:36+00:00,RV32I by cats,0,CircuitCoder/mill,299985634,SystemVerilog,mill,599,17,2023-09-04 00:06:16+00:00,[],https://api.github.com/licenses/mit
19,https://github.com/shehanmunasinghe/tinyGPU.git,2020-10-02 11:42:52+00:00,tinyGPU: A Predicated-SIMD processor implementation in SystemVerilog,5,shehanmunasinghe/tinyGPU,300596733,SystemVerilog,tinyGPU,1287,17,2024-01-27 06:11:07+00:00,"['hdl', 'computer-organization', 'systemverilog', 'processor-design', 'gpu', 'simd']",None
20,https://github.com/kumarrishav14/AMBA_APB.git,2020-11-01 16:18:48+00:00,To design test bench of the APB protocol,3,kumarrishav14/AMBA_APB,309136186,SystemVerilog,AMBA_APB,490,14,2024-01-30 15:44:01+00:00,[],https://api.github.com/licenses/mit
21,https://github.com/martinriis/RISC-V-Vector-Processor.git,2020-08-01 11:03:21+00:00,256-bit vector processor based on the RISC-V vector (V) extension,3,martinriis/RISC-V-Vector-Processor,284243255,SystemVerilog,RISC-V-Vector-Processor,26,13,2023-11-16 06:55:09+00:00,[],https://api.github.com/licenses/mit
22,https://github.com/Anjali-287/Synchronous-FIFO-UVM-TB.git,2020-07-07 17:38:22+00:00,UVM Testbench for synchronus fifo,3,Anjali-287/Synchronous-FIFO-UVM-TB,277882906,SystemVerilog,Synchronous-FIFO-UVM-TB,33,12,2024-01-23 05:51:27+00:00,[],None
23,https://github.com/WeiChungWu/UVM_UART_Example.git,2020-08-17 13:11:56+00:00,An UVM example of UART,9,WeiChungWu/UVM_UART_Example,288183829,SystemVerilog,UVM_UART_Example,39,12,2024-03-10 18:10:27+00:00,"['systemverilog', 'uvm']",None
24,https://github.com/efeslab/hardware-bugbase.git,2020-09-02 15:21:13+00:00,,4,efeslab/hardware-bugbase,292319939,SystemVerilog,hardware-bugbase,7004,12,2024-01-17 03:08:06+00:00,[],None
25,https://github.com/hughjackson/PeakRDL-verilog.git,2020-11-01 17:33:24+00:00,Generate verilog register file from systemRDL description,4,hughjackson/PeakRDL-verilog,309151056,SystemVerilog,PeakRDL-verilog,119,11,2024-02-02 09:54:37+00:00,"['verilog', 'rtl', 'asic', 'systemrdl', 'fpga']",https://api.github.com/licenses/gpl-3.0
26,https://github.com/Jefferson-Lopes/Correlator.git,2020-07-06 17:45:53+00:00,Autocorrelation and cross-correlation signal ,2,Jefferson-Lopes/Correlator,277610151,SystemVerilog,Correlator,24947,10,2024-02-05 17:47:24+00:00,[],None
27,https://github.com/amane-uehara/cpubook-code.git,2020-08-14 13:22:29+00:00,書籍「作ろう！CPU」のサンプルコード,3,amane-uehara/cpubook-code,287538160,SystemVerilog,cpubook-code,25,8,2024-01-21 17:08:25+00:00,[],https://api.github.com/licenses/mit
28,https://github.com/PulseRain/PulseRain_RISCV_MCU.git,2020-07-26 02:35:38+00:00,PulseRain RISC-V MCU,7,PulseRain/PulseRain_RISCV_MCU,282561607,SystemVerilog,PulseRain_RISCV_MCU,1099,7,2023-12-23 08:26:38+00:00,[],
29,https://github.com/stong/risc-uproc.git,2020-07-23 05:28:58+00:00,Toy RISC microprocessor in Verilog for Altera FPGA,0,stong/risc-uproc,281859291,SystemVerilog,risc-uproc,27,6,2023-09-01 04:52:56+00:00,[],None
30,https://github.com/PaulZC/XLR8_VGA_HDMI_XB.git,2020-08-14 12:52:39+00:00,An XLR8 XB which will run on the Alorium Technology Sno FPGA board and produce a VGA text display over HDMI. Includes dual-port video memory.,1,PaulZC/XLR8_VGA_HDMI_XB,287532352,SystemVerilog,XLR8_VGA_HDMI_XB,290201,6,2023-10-31 22:26:02+00:00,[],
31,https://github.com/Panda-Cores/PandaZero.git,2020-07-20 17:18:53+00:00,"A pipelined, in-order implementation of the RV32I ISA",1,Panda-Cores/PandaZero,281180880,SystemVerilog,PandaZero,781,6,2022-06-28 15:53:58+00:00,"['risc-v', 'riscv', 'riscv32', 'pipeline-processor', 'rv32i']",None
32,https://github.com/Yummot/adapters.git,2020-08-27 06:42:32+00:00,Common SOC interconnect protocols adapters for learning,1,Yummot/adapters,290697728,SystemVerilog,adapters,33,6,2022-06-28 09:28:56+00:00,[],None
33,https://github.com/reed-foster/pynq-audio.git,2020-09-26 20:42:19+00:00,RTL and python for using the ADAU1761 audio codec on the Pynq-Z2 board from TUL,2,reed-foster/pynq-audio,298896396,SystemVerilog,pynq-audio,4441,6,2024-03-28 06:43:38+00:00,"['pynq-z2', 'audio', 'i2s-audio']",https://api.github.com/licenses/mit
34,https://github.com/carljohnsen/vitis_rtl.git,2020-10-02 13:12:17+00:00,"Examples of Vitis projects, which utilize RTL kernels.",0,carljohnsen/vitis_rtl,300618801,SystemVerilog,vitis_rtl,253,5,2023-08-06 10:33:30+00:00,[],None
35,https://github.com/yujixr/r2rv.git,2020-10-13 22:19:33+00:00,R2 RISC-V implementation ,1,yujixr/r2rv,303841609,SystemVerilog,r2rv,173,5,2022-03-08 00:50:32+00:00,[],https://api.github.com/licenses/mit
36,https://github.com/smirnovich/ofd.git,2020-11-06 10:30:08+00:00,Open FPGA Debug core,6,smirnovich/ofd,310565104,SystemVerilog,ofd,33,5,2023-08-27 12:24:27+00:00,"['hdl', 'fpga', 'debugging-tool']",https://api.github.com/licenses/mit
37,https://github.com/TwistsOfFate/vanilla-cpu.git,2020-08-24 13:23:52+00:00,,1,TwistsOfFate/vanilla-cpu,289934721,SystemVerilog,vanilla-cpu,62390,5,2023-01-21 14:34:24+00:00,[],None
38,https://github.com/akoskovacs/spartan-edge-accelerator-hdmi.git,2020-09-06 00:52:04+00:00,HDMI demo based on the hdl-hdmi video core for the Spartan Edge Accelerator Board,1,akoskovacs/spartan-edge-accelerator-hdmi,293178188,SystemVerilog,spartan-edge-accelerator-hdmi,1352,5,2023-11-15 04:22:39+00:00,[],None
39,https://github.com/1varuna/fifo_tb_uvm.git,2020-07-27 12:54:06+00:00,Self learnt example to write a UVM based TB. (Under construction).,2,1varuna/fifo_tb_uvm,282897715,SystemVerilog,fifo_tb_uvm,1132,5,2023-10-29 14:49:06+00:00,"['uvm', 'systemverilog', 'systemverilog-hdl', 'systemverilog-simulation']",None
40,https://github.com/antmicro/verilator-dynamic-scheduler-tests.git,2020-10-05 07:03:42+00:00,,1,antmicro/verilator-dynamic-scheduler-tests,301320625,SystemVerilog,verilator-dynamic-scheduler-tests,2847,5,2023-04-04 23:05:31+00:00,[],https://api.github.com/licenses/apache-2.0
41,https://github.com/JC-S/Karatsuba_multiplier_HDL.git,2020-07-02 08:04:30+00:00,This is a SystemVerilog HDL implementation of Karatsuba multiplier.,1,JC-S/Karatsuba_multiplier_HDL,276586053,SystemVerilog,Karatsuba_multiplier_HDL,13,5,2024-04-10 23:20:09+00:00,[],https://api.github.com/licenses/gpl-2.0
42,https://github.com/souryadey/mlp-ondevice-training.git,2020-09-16 00:45:45+00:00,FPGA on-device training and inference of a MLP neural network,1,souryadey/mlp-ondevice-training,295883948,SystemVerilog,mlp-ondevice-training,53501,5,2023-03-21 10:44:33+00:00,[],https://api.github.com/licenses/mit
43,https://github.com/hengfengzhang/uvm_lab.git,2020-10-19 13:00:43+00:00,A UVM environment including scoreboard and agent,2,hengfengzhang/uvm_lab,305385266,SystemVerilog,uvm_lab,7,4,2022-08-08 03:36:59+00:00,[],None
44,https://github.com/putongputong-lin/ahb2sram.git,2020-07-23 16:43:16+00:00,"It is a ahb2sram/sramc's rtl design, dv, syn.",3,putongputong-lin/ahb2sram,282005485,SystemVerilog,ahb2sram,6,4,2022-12-12 11:18:44+00:00,[],None
45,https://github.com/LeninSG21/mips-multiciclo.git,2020-11-13 17:50:18+00:00,Implementación en verilog de MIPS Multiciclo,0,LeninSG21/mips-multiciclo,312646294,SystemVerilog,mips-multiciclo,1122,4,2021-03-18 22:46:14+00:00,[],None
46,https://github.com/pulp-training/sw.git,2020-11-11 20:46:42+00:00,"PULPissimo, PULP-SDK and PULP-RUNTIME exercises",11,pulp-training/sw,312085926,SystemVerilog,sw,1569,4,2023-07-31 09:39:00+00:00,[],https://api.github.com/licenses/apache-2.0
47,https://github.com/NikolaF-95/RAM_VIP.git,2020-07-12 22:58:49+00:00,UVM VIP for Single Port RAM Synchronous Read/Write,1,NikolaF-95/RAM_VIP,279161988,SystemVerilog,RAM_VIP,34,4,2024-03-09 06:05:15+00:00,"['uvm', 'ram', 'systemverilog', 'electronics', 'functional-verification', 'uvc', 'vip']",None
48,https://github.com/kitune-san/KFPS2KB.git,2020-08-03 15:35:09+00:00,Simple PS/2 keyboard controller written in SystemVerilog,0,kitune-san/KFPS2KB,284738150,SystemVerilog,KFPS2KB,2532,4,2023-10-12 12:14:10+00:00,"['ps2-keyboard', 'systemverilog', 'fpga', 'ps2', 'keyboard']",https://api.github.com/licenses/mit
49,https://github.com/wangyisong1996/ThinPAD-RISC-V.git,2020-11-05 08:54:14+00:00,Yet another RISC-V implementation on ThinPAD.,1,wangyisong1996/ThinPAD-RISC-V,310241000,SystemVerilog,ThinPAD-RISC-V,22,4,2023-03-22 02:57:31+00:00,[],https://api.github.com/licenses/gpl-3.0
50,https://github.com/sthornington/gemmm2s.git,2020-09-24 14:45:22+00:00,Verilog module for converting from AXI4 MM of Zynq GEM Ethernet DMA to AXI-Stream with packet boundaries,0,sthornington/gemmm2s,298308489,SystemVerilog,gemmm2s,122,4,2023-09-24 07:27:31+00:00,[],https://api.github.com/licenses/mit
51,https://github.com/aakif-h/RISC-V-Processor-Design.git,2020-07-23 00:11:51+00:00,"An implementation of a pipelined RISC-V processor, designed in SystemVerilog",0,aakif-h/RISC-V-Processor-Design,281809543,SystemVerilog,RISC-V-Processor-Design,7634,4,2023-11-14 23:51:00+00:00,[],None
52,https://github.com/ljiaxi/chisel-rv32.git,2020-09-17 09:41:52+00:00,,0,ljiaxi/chisel-rv32,296283524,SystemVerilog,chisel-rv32,4656,3,2021-10-22 05:15:36+00:00,[],https://api.github.com/licenses/mit
53,https://github.com/kitune-san/KF8255.git,2020-07-19 12:14:17+00:00,8255/8255A-like programmable peripheral interface written in SystemVerilog,0,kitune-san/KF8255,280858630,SystemVerilog,KF8255,459,3,2024-01-30 01:39:03+00:00,"['8255', '8255a', 'ppi', 'systemverilog', 'programmable-peripheral-interface', 'fpga', 'pc']",https://api.github.com/licenses/mit
54,https://github.com/dh73/Prop-eller.git,2020-11-03 20:51:09+00:00,Formal Property Verification Components to Speedup Complex Checks,0,dh73/Prop-eller,309804052,SystemVerilog,Prop-eller,134,3,2024-03-13 07:19:04+00:00,[],
55,https://github.com/tsmk94/Taiga.git,2020-10-29 18:03:44+00:00,,1,tsmk94/Taiga,308410365,SystemVerilog,Taiga,1174,3,2023-03-02 03:51:54+00:00,[],https://api.github.com/licenses/apache-2.0
56,https://github.com/Verdvana/Uart.git,2020-10-23 12:24:12+00:00,Uart串口发送接收模块,2,Verdvana/Uart,306628572,SystemVerilog,Uart,292,3,2024-03-09 12:59:13+00:00,[],None
57,https://github.com/FlameKen/ariane_soc.git,2020-11-08 09:51:56+00:00,,1,FlameKen/ariane_soc,311030924,SystemVerilog,ariane_soc,35874,3,2022-03-18 12:31:41+00:00,[],None
58,https://github.com/aditi3512/HyCUBE.git,2020-11-01 03:57:51+00:00,,2,aditi3512/HyCUBE,309019463,SystemVerilog,HyCUBE,280,3,2023-11-29 08:29:33+00:00,[],None
59,https://github.com/hugoferreira/fpga-8bit-console.git,2020-10-26 03:23:50+00:00,8bit console implemented on an FPGA,1,hugoferreira/fpga-8bit-console,307251119,SystemVerilog,fpga-8bit-console,73,3,2023-12-14 01:51:00+00:00,[],None
60,https://github.com/ritviknk/projects.git,2020-08-03 02:51:06+00:00,"Archived-completed projects : RTL design projects to showcase design skills, verilog language expertise, coding styles.",0,ritviknk/projects,284588138,SystemVerilog,projects,4323,3,2024-01-21 18:13:30+00:00,[],https://api.github.com/licenses/mit
61,https://github.com/thisiszy/Space-Oddity-game.git,2020-09-14 15:27:33+00:00,模拟与数字电路实验 双人空战小游戏,0,thisiszy/Space-Oddity-game,295458287,SystemVerilog,Space-Oddity-game,2489,3,2024-02-26 04:24:36+00:00,[],https://api.github.com/licenses/mit
62,https://github.com/letrend/tcm4671.git,2020-10-16 07:19:12+00:00,fpga module for controlling the trinamic tcm4671 ic,1,letrend/tcm4671,304550220,SystemVerilog,tcm4671,8,3,2021-12-24 05:45:58+00:00,[],https://api.github.com/licenses/mit
63,https://github.com/CookDarwin/axi.git,2020-08-01 03:42:47+00:00,a light weight axi library,1,CookDarwin/axi,284180384,SystemVerilog,axi,480,3,2022-08-01 06:43:32+00:00,[],https://api.github.com/licenses/lgpl-2.1
64,https://github.com/agh-riscv/pixel_riscv_soc.git,2020-08-30 18:15:03+00:00,System-on-Chip for calibration of pixelated hybrid X-ray detectors.,0,agh-riscv/pixel_riscv_soc,291526287,SystemVerilog,pixel_riscv_soc,316,3,2022-12-13 14:00:27+00:00,[],https://api.github.com/licenses/gpl-3.0
65,https://github.com/huangyxi/FPGA-16QAM.git,2020-07-29 08:59:17+00:00,16QAM Modulation & Demodulation for FPGA,0,huangyxi/FPGA-16QAM,283449420,SystemVerilog,FPGA-16QAM,8,3,2023-10-23 03:44:57+00:00,[],https://api.github.com/licenses/mit
66,https://github.com/NazerkeT/ArianeDemo.git,2020-10-07 04:17:11+00:00,This is hardware developed for RISCV Bit extension Groups addable to (CVA6) Ariane Core,0,NazerkeT/ArianeDemo,301924639,SystemVerilog,ArianeDemo,41,3,2022-07-05 17:27:14+00:00,[],None
67,https://github.com/JA1TYE/iCEPIC.git,2020-08-16 05:32:05+00:00,A PIC 12-bit core implementation written in SystemVerilog,0,JA1TYE/iCEPIC,287880472,SystemVerilog,iCEPIC,11,3,2022-02-02 16:49:38+00:00,[],https://api.github.com/licenses/bsd-3-clause
68,https://github.com/teekamkhandelwal/Dual_port_ram.git,2020-11-07 14:13:44+00:00,dual clock dual port ram using verilog and system verilog,0,teekamkhandelwal/Dual_port_ram,310859452,SystemVerilog,Dual_port_ram,17,3,2023-12-03 02:16:48+00:00,[],None
69,https://github.com/Elzawawy/mips-processor-simulator.git,2020-08-25 11:51:55+00:00,"A simplified MIPS machine simulator using SystemVerilog, developed with three different micro-architectures: single-cycle, multi-cycle and pipelined.",3,Elzawawy/mips-processor-simulator,290201326,SystemVerilog,mips-processor-simulator,1106,3,2024-01-18 10:22:26+00:00,"['mips', 'mips-architecture', 'mips-simulator', 'single-cycle-processor', 'multi-cycle-processor', 'pipelined-processors']",https://api.github.com/licenses/mit
70,https://github.com/bluecmd/sva-playground.git,2020-09-25 08:19:58+00:00,Place to learn and try out SystemVerilog Assertions (SVA),1,bluecmd/sva-playground,298511978,SystemVerilog,sva-playground,27,3,2022-08-26 09:00:13+00:00,[],https://api.github.com/licenses/mit
71,https://github.com/briansune/Arria_V_FPGA_GoldenPack.git,2020-07-06 15:31:14+00:00,,2,briansune/Arria_V_FPGA_GoldenPack,277580395,SystemVerilog,Arria_V_FPGA_GoldenPack,659712,3,2022-11-20 15:16:41+00:00,[],None
72,https://github.com/RaitoBezarius/sysnum2020.git,2020-10-26 18:04:36+00:00,Projet de sysnum 2020,2,RaitoBezarius/sysnum2020,307462148,SystemVerilog,sysnum2020,59430,3,2021-01-19 11:22:16+00:00,[],https://api.github.com/licenses/mit
73,https://github.com/martinriis/Verilog-FastAdder.git,2020-08-29 12:00:50+00:00,"High speed, customisable width adder written in SystemVerilog",1,martinriis/Verilog-FastAdder,291262841,SystemVerilog,Verilog-FastAdder,8,3,2023-02-10 02:00:11+00:00,[],https://api.github.com/licenses/mit
74,https://github.com/Ag48/sv_dpi.git,2020-07-05 16:46:56+00:00,Examples for SystemVerilog Direct Programming Interface (DPI),0,Ag48/sv_dpi,277344105,SystemVerilog,sv_dpi,4,2,2022-03-18 16:42:20+00:00,[],None
75,https://github.com/Panda-Cores/wishbone.git,2020-08-03 17:23:01+00:00,,0,Panda-Cores/wishbone,284762521,SystemVerilog,wishbone,739,2,2022-12-09 17:10:33+00:00,[],None
76,https://github.com/voraravi30/axi4_uvc.git,2020-07-27 12:47:02+00:00,,0,voraravi30/axi4_uvc,282896169,SystemVerilog,axi4_uvc,84,2,2021-12-03 15:03:23+00:00,[],None
77,https://github.com/Chengineer/VLSI.git,2020-08-28 21:06:18+00:00,,0,Chengineer/VLSI,291145946,SystemVerilog,VLSI,5696,2,2022-12-21 10:05:43+00:00,[],None
78,https://github.com/Verdvana/Battery_Management_System.git,2020-10-17 12:03:21+00:00,电池管理系统,1,Verdvana/Battery_Management_System,304868298,SystemVerilog,Battery_Management_System,163,2,2023-01-10 08:58:06+00:00,[],None
79,https://github.com/weedmank/RisKy1.git,2020-10-25 18:43:30+00:00,"Repository for the RisKy1 RISC-V ISA based CPU and various ""flavors"" of RV32imcZicsr.  This design has many parameters/extensions that may be changed in order to tailor the CPU to a specific configuration.",2,weedmank/RisKy1,307167886,SystemVerilog,RisKy1,12355,2,2023-01-12 19:59:09+00:00,[],None
80,https://github.com/PacoReinaCampo/OpenNN.git,2020-08-23 23:38:32+00:00,Open Neural Network,0,PacoReinaCampo/OpenNN,289784598,SystemVerilog,OpenNN,84406,2,2024-01-12 18:14:57+00:00,[],https://api.github.com/licenses/lgpl-3.0
81,https://github.com/MohcineBerni/cva6-master.git,2020-10-22 20:47:56+00:00,Projet d'optimisation du coeur ARIANE CVA6 RISC-V,2,MohcineBerni/cva6-master,306455309,SystemVerilog,cva6-master,9005,2,2022-06-13 08:06:05+00:00,[],
82,https://github.com/ElectronAsh/psx_gpu_test.git,2020-10-05 05:59:04+00:00,Test MiSTer core for Laxer's PSX GPU,2,ElectronAsh/psx_gpu_test,301307738,SystemVerilog,psx_gpu_test,7254,2,2022-04-12 07:05:36+00:00,[],https://api.github.com/licenses/gpl-3.0
83,https://github.com/barawn/verilog-library-barawn.git,2020-08-13 15:17:35+00:00,Library of common modules in Verilog,0,barawn/verilog-library-barawn,287313424,SystemVerilog,verilog-library-barawn,159,2,2024-04-06 12:28:12+00:00,[],None
84,https://github.com/chenfengrugao/uvm_lab.git,2020-09-30 03:22:17+00:00,a pratical uvm lab,0,chenfengrugao/uvm_lab,299798531,SystemVerilog,uvm_lab,17,2,2020-10-26 09:19:55+00:00,[],https://api.github.com/licenses/gpl-3.0
85,https://github.com/Campo87/VGA-Controller.git,2020-08-14 15:44:11+00:00,Verilog VGA timing driver targeting the Basys 3 FPGA development board.,1,Campo87/VGA-Controller,287568428,SystemVerilog,VGA-Controller,15966,2,2024-04-08 05:30:31+00:00,[],None
86,https://github.com/ECE540-2020-Fall/rvfpga_repo.git,2020-10-12 03:55:09+00:00,,4,ECE540-2020-Fall/rvfpga_repo,303271893,SystemVerilog,rvfpga_repo,5518,2,2023-04-24 06:52:09+00:00,[],None
87,https://github.com/dhaivat7/RISC_CPU.git,2020-09-26 04:32:34+00:00,RTL Design and Verification using SystemVerilog.,0,dhaivat7/RISC_CPU,298737339,SystemVerilog,RISC_CPU,17,2,2023-04-05 09:27:36+00:00,[],None
88,https://github.com/pulp-training/dummy_vip.git,2020-11-11 17:37:46+00:00,Files for the IP Integration Exercise,34,pulp-training/dummy_vip,312043999,SystemVerilog,dummy_vip,6,2,2022-04-27 20:37:27+00:00,[],None
89,https://github.com/rksingh23/System_Verilog_Practise_Problems.git,2020-10-02 06:11:33+00:00,This is my personal Repository where I practice SV,0,rksingh23/System_Verilog_Practise_Problems,300518485,SystemVerilog,System_Verilog_Practise_Problems,109,2,2023-02-26 07:55:37+00:00,[],None
90,https://github.com/MuhammedSamy/DMA8237A-Implementation.git,2020-09-07 17:12:24+00:00,System Verilog based RTL Design of DMA controller for 8086 microprocessor based systems.,0,MuhammedSamy/DMA8237A-Implementation,293587633,SystemVerilog,DMA8237A-Implementation,9,2,2022-06-03 13:40:56+00:00,[],None
91,https://github.com/wen-liao/32bit-MIPS-CPU.git,2020-07-02 16:45:12+00:00,Project for course COMP130013(计算机体系结构实验) in Fudan University,0,wen-liao/32bit-MIPS-CPU,276698873,SystemVerilog,32bit-MIPS-CPU,3938,2,2023-04-12 02:00:32+00:00,[],None
92,https://github.com/alonso9v9/Verificaci-n_Proyecto_2.git,2020-11-10 21:52:50+00:00,,0,alonso9v9/Verificaci-n_Proyecto_2,311793601,SystemVerilog,Verificaci-n_Proyecto_2,514,2,2020-12-18 18:01:24+00:00,[],None
93,https://github.com/PacoReinaCampo/SoC-RTOS.git,2020-09-20 23:30:04+00:00,Operating System for a System on Chip,3,PacoReinaCampo/SoC-RTOS,297182087,SystemVerilog,SoC-RTOS,12064,2,2024-02-24 10:37:19+00:00,[],https://api.github.com/licenses/mit
94,https://github.com/GorgeousWalrus/panda.git,2020-08-21 11:26:20+00:00,,1,GorgeousWalrus/panda,289252799,SystemVerilog,panda,851,2,2021-04-20 18:38:33+00:00,[],None
95,https://github.com/voraravi30/apb4_uvc.git,2020-07-29 09:49:48+00:00," a project that develop the apb4 bus master and slave agents, scoreboard for self-checking and coverage collector component. Also it has the testcases.",0,voraravi30/apb4_uvc,283460699,SystemVerilog,apb4_uvc,321,2,2023-08-30 01:17:27+00:00,[],None
96,https://github.com/Alenkruth/Crypto_RI5CY.git,2020-07-20 10:40:54+00:00,RI5CY from the PULP Platform modified to support Crypto instructions [Work in Progress],4,Alenkruth/Crypto_RI5CY,281088626,SystemVerilog,Crypto_RI5CY,935,2,2022-06-15 07:40:23+00:00,[],None
97,https://github.com/SteveLRojas/TRS80_MC10.git,2020-10-14 21:06:02+00:00,Implementation of a TRS-80 model MC-10 computer for FPGAs,1,SteveLRojas/TRS80_MC10,304135503,SystemVerilog,TRS80_MC10,19593,2,2023-11-21 18:30:16+00:00,[],None
98,https://github.com/EdgeHannah/CPE487.git,2020-09-02 11:39:25+00:00,,0,EdgeHannah/CPE487,292266258,SystemVerilog,CPE487,14940,2,2022-03-14 12:03:14+00:00,[],None
99,https://github.com/tinyvision-ai-inc/spi_slave.git,2020-11-03 00:55:11+00:00,"SPI Slave for the UPduino and other FPGA's, includes a SPI Slave to 32 bit Wishbone master core.",2,tinyvision-ai-inc/spi_slave,309533607,SystemVerilog,spi_slave,19,2,2023-07-03 00:31:54+00:00,[],
100,https://github.com/PXVI/mips-pro-adam.git,2020-09-28 13:20:37+00:00,It's a simple verilog based MIPS microarchitecture hardware design.,0,PXVI/mips-pro-adam,299315481,SystemVerilog,mips-pro-adam,230,2,2022-10-25 19:21:27+00:00,"['verilog', 'rtl', 'processor', 'mips', 'risc', 'systemverilog', 'mips-isa', 'testbench', 'multi-cycle']",https://api.github.com/licenses/mit
101,https://github.com/PacoReinaCampo/MPSoC-RTOS.git,2020-09-20 23:29:31+00:00,Distribution for a MPSoC,2,PacoReinaCampo/MPSoC-RTOS,297182015,SystemVerilog,MPSoC-RTOS,11972,2,2024-02-24 10:37:40+00:00,[],https://api.github.com/licenses/mit
102,https://github.com/GorgeousWalrus/panda_wb2apb.git,2020-08-27 11:11:53+00:00,Wishbone to apb bridge,0,GorgeousWalrus/panda_wb2apb,290754251,SystemVerilog,panda_wb2apb,2,2,2023-08-30 10:43:42+00:00,[],None
103,https://github.com/AgustinDS/Proyecto1_VFCI.git,2020-10-08 21:22:59+00:00,,0,AgustinDS/Proyecto1_VFCI,302464898,SystemVerilog,Proyecto1_VFCI,126,2,2022-09-14 02:29:10+00:00,[],None
104,https://github.com/jeras/ADAMS.git,2020-10-28 20:37:01+00:00,all digital PLL,0,jeras/ADAMS,308135037,SystemVerilog,ADAMS,15,2,2024-01-17 12:02:07+00:00,[],None
105,https://github.com/yanivnana/uvm_first_step.git,2020-07-11 09:17:55+00:00,First Step in UVM,1,yanivnana/uvm_first_step,278828276,SystemVerilog,uvm_first_step,149,2,2022-10-11 14:14:01+00:00,"['uvm', 'dpi-c', 'tlm-waveform', 'hierarchical-configuration']",None
106,https://github.com/Panda-Cores/common.git,2020-07-20 17:29:00+00:00,,1,Panda-Cores/common,281183163,SystemVerilog,common,762,2,2023-01-28 13:26:16+00:00,[],None
107,https://github.com/bkettle/fpgairpods.git,2020-10-18 23:06:41+00:00,Implementing Active Noise Cancellation on an FPGA,1,bkettle/fpgairpods,305213157,SystemVerilog,fpgairpods,77185,2,2023-01-28 06:21:45+00:00,[],None
108,https://github.com/Aniruth-ai/System-Verilog.git,2020-08-05 19:17:53+00:00,Verification using System Verilog,0,Aniruth-ai/System-Verilog,285382944,SystemVerilog,System-Verilog,21,2,2024-03-05 06:19:13+00:00,[],None
109,https://github.com/KlochkovSA/Detectors_FSM_FPGA.git,2020-07-29 08:32:38+00:00,Дипломный проект. Кафедра радиолокация и навигация. 2020,0,KlochkovSA/Detectors_FSM_FPGA,283443395,SystemVerilog,Detectors_FSM_FPGA,628,2,2023-04-12 17:43:28+00:00,"['verilog', 'radar', 'binary-integrator']",None
110,https://github.com/CloudDynasty/FormalVerificationFifo.git,2020-09-22 07:45:24+00:00,A formal verification on fifo design and self-developed fifo wrapper,0,CloudDynasty/FormalVerificationFifo,297574020,SystemVerilog,FormalVerificationFifo,7,2,2023-02-15 00:02:34+00:00,[],None
111,https://github.com/nfproc/hdmi_sender.git,2020-10-13 02:37:41+00:00,AXI-Stream Video Test Pattern Sender IP (for ACRi Blog),0,nfproc/hdmi_sender,303567897,SystemVerilog,hdmi_sender,15,2,2023-11-27 13:09:34+00:00,[],
112,https://github.com/Poorna-Sri/Candi_Ven_Mac.git,2020-11-05 03:06:47+00:00,Design for Candy Vending Machine and UVM Based test Environment for verification,2,Poorna-Sri/Candi_Ven_Mac,310176588,SystemVerilog,Candi_Ven_Mac,29,2,2024-03-09 14:56:43+00:00,[],None
113,https://github.com/verification-gentleman-blog/something-something-formal-equivalence.git,2020-08-29 15:32:37+00:00,,0,verification-gentleman-blog/something-something-formal-equivalence,291297945,SystemVerilog,something-something-formal-equivalence,20,1,2023-03-13 06:30:20+00:00,[],https://api.github.com/licenses/apache-2.0
114,https://github.com/Voprzybyo/SystemVerilog.git,2020-09-01 17:57:01+00:00,"Programming in SystemVerilog - hardware description and hardware verification language used to model, design, simulate, test and implement electronic systems.",0,Voprzybyo/SystemVerilog,292069839,SystemVerilog,SystemVerilog,582,1,2022-01-11 05:52:10+00:00,[],None
115,https://github.com/GorgeousWalrus/panda_cache.git,2020-08-21 11:31:55+00:00,,0,GorgeousWalrus/panda_cache,289253845,SystemVerilog,panda_cache,11,1,2020-08-24 14:36:31+00:00,[],None
116,https://github.com/GorgeousWalrus/panda_timer.git,2020-08-21 11:32:50+00:00,,0,GorgeousWalrus/panda_timer,289253987,SystemVerilog,panda_timer,743,1,2020-08-31 17:13:22+00:00,[],None
117,https://github.com/qaztronic/keras_to_fpga.git,2020-08-29 20:31:30+00:00,,0,qaztronic/keras_to_fpga,291344607,SystemVerilog,keras_to_fpga,578,1,2022-10-05 19:10:38+00:00,[],None
118,https://github.com/erihsu/xor_encrypt.git,2020-09-10 02:53:43+00:00,Simple xor encrypt matrix design and verification both in systemverilog,0,erihsu/xor_encrypt,294286235,SystemVerilog,xor_encrypt,51,1,2020-10-09 09:36:30+00:00,['systemverilog'],None
119,https://github.com/bettencb/cmp_sci_design.git,2020-10-02 08:06:23+00:00,Computer Design Labs,0,bettencb/cmp_sci_design,300545067,SystemVerilog,cmp_sci_design,5681,1,2020-10-18 20:39:30+00:00,[],None
120,https://github.com/Artem1199/ECE540-SoC.git,2020-10-11 09:05:26+00:00,,0,Artem1199/ECE540-SoC,303081339,SystemVerilog,ECE540-SoC,40740,1,2020-11-15 19:59:41+00:00,[],https://api.github.com/licenses/mit
121,https://github.com/URAN235KFFM/karabas-pro.git,2020-09-07 14:21:31+00:00,FPGA based retrocomputer with FDD and HDD controllers,6,URAN235KFFM/karabas-pro,293549052,,karabas-pro,17179,1,2022-06-06 01:55:47+00:00,[],None
122,https://github.com/nipun0307/cordic-design.git,2020-10-22 19:54:42+00:00,,1,nipun0307/cordic-design,306444559,SystemVerilog,cordic-design,1911,1,2021-08-05 14:07:33+00:00,[],None
123,https://github.com/teekamkhandelwal/sequence-detector.git,2020-11-13 15:19:58+00:00,,0,teekamkhandelwal/sequence-detector,312610866,SystemVerilog,sequence-detector,6,1,2020-11-24 12:06:38+00:00,[],https://api.github.com/licenses/mit
124,https://github.com/gzyIDE/ParamMod.git,2020-10-28 03:57:47+00:00,Parameterized Verilog Modules for many applications,1,gzyIDE/ParamMod,307901600,SystemVerilog,ParamMod,179,1,2023-08-19 13:18:33+00:00,[],https://api.github.com/licenses/mit
125,https://github.com/eigenco/S186.git,2020-08-04 14:12:29+00:00,Simplified version of the 80186 FPGA core (original by Jamie Iles),0,eigenco/S186,285000431,SystemVerilog,S186,63,1,2021-07-30 15:17:12+00:00,[],None
126,https://github.com/1varuna/myexamples.git,2020-07-18 15:04:28+00:00,"Example which helps understand modelling of a simple SV TB. For UVM implementation refer the repository ""fifo_tb_uvm"".",1,1varuna/myexamples,280679816,SystemVerilog,myexamples,937,1,2023-10-29 14:49:41+00:00,"['verification-methodologies', 'systemverilog']",None
127,https://github.com/JagrutJadhav/32-bit-Instruction-Fetch-Stage.git,2020-07-01 12:15:22+00:00,,0,JagrutJadhav/32-bit-Instruction-Fetch-Stage,276369078,SystemVerilog,32-bit-Instruction-Fetch-Stage,518,1,2021-05-31 18:42:39+00:00,[],None
128,https://github.com/necamilosevic96/Verification_ARPS_IP_project.git,2020-07-01 12:59:25+00:00,,1,necamilosevic96/Verification_ARPS_IP_project,276378527,SystemVerilog,Verification_ARPS_IP_project,7315,1,2020-08-12 10:22:59+00:00,[],None
129,https://github.com/ejporter/fpga-autotuner.git,2020-10-11 23:16:00+00:00,"6.111 Final Project, Team: Andrew Reyna, Erik Porter, and Jeanne Harabedian",0,ejporter/fpga-autotuner,303229838,SystemVerilog,fpga-autotuner,296,1,2023-10-03 14:52:47+00:00,[],None
130,https://github.com/jakemdaly/RISC-Accumulator.git,2020-09-07 16:00:12+00:00,Accumulator-based instruction set architecture for running decryption and encryption algorithms on FPGA.,0,jakemdaly/RISC-Accumulator,293572229,SystemVerilog,RISC-Accumulator,22,1,2022-04-08 18:13:23+00:00,[],None
131,https://github.com/RohanSeam/Thunderbird-Taillights-.git,2020-09-20 05:44:34+00:00,,0,RohanSeam/Thunderbird-Taillights-,297010486,SystemVerilog,Thunderbird-Taillights-,2220,1,2020-09-20 05:58:03+00:00,[],None
132,https://github.com/SoftNacho/Keystone_XL_Pipeline.git,2020-09-21 22:49:17+00:00,LC-3b Pipeline for Computer Organization and Design class,0,SoftNacho/Keystone_XL_Pipeline,297478593,SystemVerilog,Keystone_XL_Pipeline,1729,1,2020-09-30 20:50:13+00:00,[],None
133,https://github.com/luojw-dwr/Toy-Asynchronous-FIFO-Generator.git,2020-09-18 12:49:43+00:00,,0,luojw-dwr/Toy-Asynchronous-FIFO-Generator,296619780,SystemVerilog,Toy-Asynchronous-FIFO-Generator,31,1,2020-09-23 09:57:56+00:00,[],None
134,https://github.com/tuanla93/SystemVerilog-UVM.git,2020-08-04 19:01:40+00:00,This contains examples for writing a Testbench using SystemVerilog and UVM,0,tuanla93/SystemVerilog-UVM,285072581,SystemVerilog,SystemVerilog-UVM,15,1,2021-04-19 17:16:42+00:00,[],None
135,https://github.com/Panda-Cores/timer_module.git,2020-08-03 17:25:36+00:00,,0,Panda-Cores/timer_module,284763118,SystemVerilog,timer_module,739,1,2020-08-09 12:45:34+00:00,[],None
136,https://github.com/dominicassia/Digital-Design-Theory-and-Practice.git,2020-10-11 02:08:45+00:00,PSU CMPEN 270 - Digital Design Theory and Practive (FA 2020),0,dominicassia/Digital-Design-Theory-and-Practice,303024745,SystemVerilog,Digital-Design-Theory-and-Practice,12280,1,2023-01-25 17:22:52+00:00,[],https://api.github.com/licenses/gpl-3.0
137,https://github.com/Crevg/ARMv4ISAsv.git,2020-10-24 05:44:08+00:00,ARM based ISA ,0,Crevg/ARMv4ISAsv,306814730,SystemVerilog,ARMv4ISAsv,27,1,2021-09-05 16:20:14+00:00,[],None
138,https://github.com/evgeniyBolnov/spi_amm.git,2020-10-02 08:49:23+00:00,Avalon-MM SPI bridge,0,evgeniyBolnov/spi_amm,300555600,SystemVerilog,spi_amm,198,1,2023-09-29 07:01:11+00:00,[],None
139,https://github.com/lookwhoistalkinguvm/symbol_gen_demo.git,2020-08-28 12:11:49+00:00,Demonstrate Unified Symbol Driver design pattern. Unified Symbol Driver Demo Testbench.,0,lookwhoistalkinguvm/symbol_gen_demo,291037580,SystemVerilog,symbol_gen_demo,113,1,2023-01-19 17:49:21+00:00,[],https://api.github.com/licenses/mit
140,https://github.com/Pear0/cs3220-processor.git,2020-07-31 06:50:00+00:00,,0,Pear0/cs3220-processor,283964196,SystemVerilog,cs3220-processor,466,1,2020-08-01 00:04:17+00:00,[],None
141,https://github.com/Sriku007/Stopwatch-on-FPGA.git,2020-07-31 09:19:34+00:00,Implementation of a Stopwatch on Basys FPGA,0,Sriku007/Stopwatch-on-FPGA,283993997,SystemVerilog,Stopwatch-on-FPGA,18,1,2021-05-13 21:43:14+00:00,[],None
142,https://github.com/GorgeousWalrus/panda_wishbone.git,2020-08-21 11:33:12+00:00,,0,GorgeousWalrus/panda_wishbone,289254064,SystemVerilog,panda_wishbone,748,1,2020-08-27 14:21:49+00:00,[],None
143,https://github.com/vnay01/VerilogCodes.git,2020-08-28 13:46:27+00:00,A repository of verilog codes of various digital circuits.,0,vnay01/VerilogCodes,291057639,SystemVerilog,VerilogCodes,433,1,2023-08-15 03:29:47+00:00,[],None
144,https://github.com/PaulZC/XLR8_HDMI_VGA_Text_Demo_XB.git,2020-08-12 13:55:55+00:00,An XLR8 XB which will run on the Alorium Technology Sno FPGA board and produce simple VGA text over HDMI,0,PaulZC/XLR8_HDMI_VGA_Text_Demo_XB,287027530,SystemVerilog,XLR8_HDMI_VGA_Text_Demo_XB,42587,1,2022-10-01 09:05:21+00:00,[],
145,https://github.com/olcayakman/CS223-Project.git,2020-11-07 17:42:54+00:00,The semester project I did for my CS223 course in Bilkent University.,0,olcayakman/CS223-Project,310899547,SystemVerilog,CS223-Project,788,1,2022-12-20 02:27:03+00:00,[],None
146,https://github.com/GorgeousWalrus/panda_gpio.git,2020-08-21 11:32:27+00:00,,0,GorgeousWalrus/panda_gpio,289253925,SystemVerilog,panda_gpio,5,1,2020-09-03 16:36:21+00:00,[],None
147,https://github.com/akilystic/seq_det_uvm.git,2020-08-28 06:20:31+00:00,,0,akilystic/seq_det_uvm,290967454,SystemVerilog,seq_det_uvm,14,1,2020-08-28 06:27:13+00:00,[],None
148,https://github.com/cyyy1/v_pro.git,2020-07-02 12:08:16+00:00,open source code,0,cyyy1/v_pro,276636166,SystemVerilog,v_pro,612,1,2020-07-29 04:18:33+00:00,[],None
149,https://github.com/anuragktl/risc-v.git,2020-08-11 02:56:41+00:00,RISC-V pipeline processor with Hazard Detection Unit and Forwarding Unit. Pipeline stall for 2 clocks occur only in case of RAW dependency. ,0,anuragktl/risc-v,286630935,SystemVerilog,risc-v,21,1,2021-06-01 07:32:18+00:00,[],https://api.github.com/licenses/mit
150,https://github.com/saipra99/overrides.git,2020-08-05 18:55:55+00:00,,0,saipra99/overrides,285378463,SystemVerilog,overrides,2,1,2022-01-25 09:33:51+00:00,[],None
151,https://github.com/Sustrak/Segre.git,2020-09-18 07:44:45+00:00,A RISC-V 32 bit processor,3,Sustrak/Segre,296550591,SystemVerilog,Segre,2704,1,2021-01-21 08:38:30+00:00,[],None
152,https://github.com/djcopley/8bitproc.git,2020-11-02 04:51:29+00:00,A simple 8 bit processor,0,djcopley/8bitproc,309261397,SystemVerilog,8bitproc,1533,1,2022-09-12 01:10:14+00:00,[],https://api.github.com/licenses/gpl-3.0
153,https://github.com/marwanibrahim546/counter_UVM.git,2020-10-30 21:02:51+00:00,,0,marwanibrahim546/counter_UVM,308743482,SystemVerilog,counter_UVM,11,1,2022-11-30 01:25:16+00:00,[],None
154,https://github.com/khmkazu921/hbm_bench.git,2020-07-03 05:03:25+00:00,hbm bench U280,0,khmkazu921/hbm_bench,276811782,SystemVerilog,hbm_bench,3195,1,2024-03-18 04:09:08+00:00,[],None
155,https://github.com/GorgeousWalrus/panda_lsu.git,2020-08-21 11:33:36+00:00,,0,GorgeousWalrus/panda_lsu,289254154,SystemVerilog,panda_lsu,744,1,2020-08-28 15:44:37+00:00,[],None
156,https://github.com/jonataspassos/DigitalClock-HardwareDescription.git,2020-08-21 15:25:38+00:00,,0,jonataspassos/DigitalClock-HardwareDescription,289302446,SystemVerilog,DigitalClock-HardwareDescription,29,1,2020-08-24 17:59:21+00:00,[],None
157,https://github.com/MMMMMARIO11/PWM-motor-control-and-UART-Communication-velocity-measurement.git,2020-07-26 07:34:19+00:00,PWM控制电机转速、实际测速并通过UART发送至电脑端,0,MMMMMARIO11/PWM-motor-control-and-UART-Communication-velocity-measurement,282600033,SystemVerilog,PWM-motor-control-and-UART-Communication-velocity-measurement,22719,1,2023-09-21 11:31:54+00:00,[],None
158,https://github.com/Verdvana/I2C_Controller.git,2020-10-10 08:01:53+00:00,I2C_Controller,2,Verdvana/I2C_Controller,302848567,SystemVerilog,I2C_Controller,325,1,2022-06-06 06:16:10+00:00,[],None
159,https://github.com/halvho/LZSS-hardware-implementation.git,2020-08-02 18:08:00+00:00,Hardware implementation of the LZSS compression algorithm as part of my master thesis,0,halvho/LZSS-hardware-implementation,284515529,SystemVerilog,LZSS-hardware-implementation,8,1,2023-04-04 04:37:27+00:00,[],None
160,https://github.com/nfproc/stencil_coproc.git,2020-11-02 10:27:37+00:00,Stencil Computation Coprocessor (for ACRi Blog),0,nfproc/stencil_coproc,309335163,SystemVerilog,stencil_coproc,17,1,2022-05-13 05:33:33+00:00,[],
161,https://github.com/alexist2623/TEST.git,2020-07-24 05:06:12+00:00,,0,alexist2623/TEST,282127897,SystemVerilog,TEST,2095,1,2020-08-02 09:56:38+00:00,[],None
162,https://github.com/AloriumTechnology/evo_build_template.git,2020-07-28 15:57:06+00:00,,0,AloriumTechnology/evo_build_template,283260391,SystemVerilog,evo_build_template,22,1,2021-06-29 18:28:28+00:00,[],https://api.github.com/licenses/mit
163,https://github.com/teekamkhandelwal/adder_verification_example.git,2020-11-13 11:52:00+00:00,generator driver transection testbench classs,0,teekamkhandelwal/adder_verification_example,312561917,SystemVerilog,adder_verification_example,16,1,2020-11-24 12:09:44+00:00,[],None
164,https://github.com/RafaelLaya/Digital_Circuits.git,2020-09-26 07:03:22+00:00,Advanced and Basic Digital Circuits,0,RafaelLaya/Digital_Circuits,298757498,SystemVerilog,Digital_Circuits,8049,1,2023-04-29 19:09:01+00:00,[],None
165,https://github.com/4spol/my_uvm_statemachine_01.git,2020-09-09 09:05:49+00:00,for study,0,4spol/my_uvm_statemachine_01,294060108,SystemVerilog,my_uvm_statemachine_01,13,1,2020-09-14 00:45:18+00:00,[],None
166,https://github.com/LudwigCRON/platform.git,2020-08-02 22:53:04+00:00,digital platform of obvious block,0,LudwigCRON/platform,284555782,SystemVerilog,platform,71,1,2021-01-02 16:34:15+00:00,"['reflow', 'verilog', 'systemverilog', 'real-number-modelling']",None
167,https://github.com/Panda-Cores/debug_module.git,2020-08-03 17:22:04+00:00,,0,Panda-Cores/debug_module,284762326,SystemVerilog,debug_module,737,1,2020-08-03 18:00:24+00:00,[],None
168,https://github.com/X1nq1Wang/ESE507.git,2020-10-03 17:27:12+00:00,,0,X1nq1Wang/ESE507,300937564,SystemVerilog,ESE507,7144,1,2021-11-02 06:43:46+00:00,[],None
169,https://github.com/akilystic/uvm.git,2020-07-13 15:35:51+00:00,,1,akilystic/uvm,279342873,SystemVerilog,uvm,5,1,2020-07-14 15:54:23+00:00,[],None
170,https://github.com/kfinch333/alarm_clock.git,2020-07-22 01:53:01+00:00,Alarm Clock in SystemVerilog,0,kfinch333/alarm_clock,281547745,SystemVerilog,alarm_clock,4,1,2022-11-22 21:09:47+00:00,[],None
171,https://github.com/vladdum/axi4_stream_pipeline.git,2020-09-14 21:16:11+00:00,,0,vladdum/axi4_stream_pipeline,295540780,SystemVerilog,axi4_stream_pipeline,470,1,2020-10-08 18:41:12+00:00,[],None
172,https://github.com/selvaruban-johnson/EXTRACTION_OF_DATA_FROM_ETHERNET_FRAME.git,2020-07-16 14:30:06+00:00,,0,selvaruban-johnson/EXTRACTION_OF_DATA_FROM_ETHERNET_FRAME,280175979,SystemVerilog,EXTRACTION_OF_DATA_FROM_ETHERNET_FRAME,0,1,2020-07-17 11:59:45+00:00,[],None
173,https://github.com/nnnth/NJU-Digital-and-electrical-experiment.git,2020-08-24 03:06:28+00:00,,0,nnnth/NJU-Digital-and-electrical-experiment,289814864,SystemVerilog,NJU-Digital-and-electrical-experiment,349482,1,2022-09-11 13:38:31+00:00,[],None
174,https://github.com/Siddharth504/Verification-Using-UVM.git,2020-08-07 16:12:50+00:00,Mentioned Project In Cv,0,Siddharth504/Verification-Using-UVM,285871218,SystemVerilog,Verification-Using-UVM,21,1,2022-01-11 05:59:44+00:00,[],None
175,https://github.com/teekamkhandelwal/System_verilog_basic_examples.git,2020-10-31 06:55:24+00:00,using edaplayground-Cadence Xcelium 19.09,0,teekamkhandelwal/System_verilog_basic_examples,308823269,SystemVerilog,System_verilog_basic_examples,105,1,2020-11-13 13:51:24+00:00,[],None
176,https://github.com/ThePalad1n/EDA_Playground.git,2020-09-21 16:45:39+00:00,,0,ThePalad1n/EDA_Playground,297402011,SystemVerilog,EDA_Playground,129,1,2020-09-23 17:30:16+00:00,[],None
177,https://github.com/adiha/multiPULPly.git,2020-10-31 18:27:40+00:00,,0,adiha/multiPULPly,308947206,SystemVerilog,multiPULPly,27,1,2023-09-04 09:24:38+00:00,[],None
178,https://github.com/kariander1/CovidChase.git,2020-11-01 18:41:00+00:00,,0,kariander1/CovidChase,309163377,SystemVerilog,CovidChase,810,1,2020-11-02 15:53:57+00:00,[],None
179,https://github.com/dpears3/EncoderDecoder.git,2020-11-06 16:16:26+00:00,,0,dpears3/EncoderDecoder,310646221,SystemVerilog,EncoderDecoder,243,1,2021-12-20 07:13:57+00:00,[],https://api.github.com/licenses/apache-2.0
180,https://github.com/Panda-Cores/load_store_unit.git,2020-08-03 17:24:47+00:00,,0,Panda-Cores/load_store_unit,284762901,SystemVerilog,load_store_unit,737,1,2020-08-04 18:58:45+00:00,[],None
181,https://github.com/denisrexhepi/fifo_register.git,2020-10-31 18:35:04+00:00,,0,denisrexhepi/fifo_register,308948488,SystemVerilog,fifo_register,2,1,2020-11-08 21:35:37+00:00,[],None
182,https://github.com/HaoCheLee/NXP_SAC57D54H_PWM_Verification.git,2020-10-30 04:17:21+00:00,,0,HaoCheLee/NXP_SAC57D54H_PWM_Verification,308523181,SystemVerilog,NXP_SAC57D54H_PWM_Verification,667,1,2022-02-18 15:58:53+00:00,[],None
183,https://github.com/nguyenquanicd/QuestaSimTutorial.git,2020-10-04 07:21:20+00:00,Examples for performing the QuestaSim simulator on Windows,0,nguyenquanicd/QuestaSimTutorial,301065358,SystemVerilog,QuestaSimTutorial,9,1,2023-08-13 08:13:14+00:00,[],None
184,https://github.com/weihangtan/Modular-multiplier.git,2020-08-11 00:39:04+00:00,,0,weihangtan/Modular-multiplier,286608533,SystemVerilog,Modular-multiplier,1036,1,2023-10-20 22:45:27+00:00,"['asic', 'hardware-designs', 'homomorphic-encryption', 'lattice-based-crypto', 'modular-multiplication', 'post-quantum-cryptography', 'vlsi']",None
185,https://github.com/Dragon-Git/uvm_reference.git,2020-07-11 00:37:40+00:00,,1,Dragon-Git/uvm_reference,278759940,SystemVerilog,uvm_reference,160,1,2024-01-13 14:11:48+00:00,[],None
186,https://github.com/cquickstad/uvm_table_logger.git,2020-09-18 21:52:34+00:00,"An abstract generic logger that logs UVM transactions from a Monitor in an attractive, well-formatted, and highly configurable text table.",0,cquickstad/uvm_table_logger,296736829,SystemVerilog,uvm_table_logger,39,1,2021-12-02 01:03:22+00:00,[],https://api.github.com/licenses/apache-2.0
187,https://github.com/tomjlw/UART-ASIC.git,2020-07-18 01:43:39+00:00,A UART Communication Chip Taped Out in MOSIS AMI 0.5 Micron Process ,0,tomjlw/UART-ASIC,280560060,SystemVerilog,UART-ASIC,12633,1,2020-11-11 08:06:33+00:00,[],None
188,https://github.com/jrmoserbaltimore/wishbone-modules.git,2020-08-13 23:51:01+00:00,Paramaterized Wishbone crossbar,0,jrmoserbaltimore/wishbone-modules,287402121,SystemVerilog,wishbone-modules,42,1,2022-11-02 08:32:01+00:00,[],https://api.github.com/licenses/mit
189,https://github.com/sray0309/5-stage-RISC-V-CPU.git,2020-10-12 22:04:28+00:00,5 stage pipeline CPU,0,sray0309/5-stage-RISC-V-CPU,303523717,SystemVerilog,5-stage-RISC-V-CPU,2165,1,2022-09-08 16:06:02+00:00,[],None
190,https://github.com/zerosquaredio/galois_lfsr.git,2020-10-28 07:03:59+00:00,Galois LFSR Implementation in SystemVerilog with UVM Testbench,0,zerosquaredio/galois_lfsr,307932982,SystemVerilog,galois_lfsr,201,1,2023-10-28 14:49:54+00:00,[],https://api.github.com/licenses/gpl-3.0
191,https://github.com/AloriumTechnology/evo_bsp.git,2020-07-28 15:49:57+00:00,,0,AloriumTechnology/evo_bsp,283258544,SystemVerilog,evo_bsp,51115,1,2021-06-29 18:27:37+00:00,[],https://api.github.com/licenses/mit
192,https://github.com/akira-nishiyama/simple_axi_uvm.git,2020-08-01 22:20:28+00:00,Simple axi verification ip. Main target is vivado simulator.,0,akira-nishiyama/simple_axi_uvm,284348221,SystemVerilog,simple_axi_uvm,27,1,2023-09-19 20:11:05+00:00,[],https://api.github.com/licenses/mit
193,https://github.com/fmurillom/Proyecto_2_Arqui_2_SIMD.git,2020-07-09 16:43:37+00:00,,1,fmurillom/Proyecto_2_Arqui_2_SIMD,278419196,SystemVerilog,Proyecto_2_Arqui_2_SIMD,28999,1,2022-05-03 17:27:34+00:00,[],None
194,https://github.com/zeeshan0309/pseudo_random_sequence_generator.git,2020-08-20 10:46:25+00:00,,0,zeeshan0309/pseudo_random_sequence_generator,288979711,SystemVerilog,pseudo_random_sequence_generator,4,1,2021-07-19 19:19:25+00:00,"['lfsr', 'verilog-code', 'pseudo-random-generator', 'systemverilog', 'pseudo-random']",None
195,https://github.com/4spol/my_uvm_statemachine_02.git,2020-09-14 00:36:30+00:00,"this program is modified and can pass rand test, which is ready to add reg_model for next step debug",0,4spol/my_uvm_statemachine_02,295264521,SystemVerilog,my_uvm_statemachine_02,10,1,2020-09-14 00:45:19+00:00,[],None
196,https://github.com/GorgeousWalrus/panda_uart.git,2020-08-27 20:00:47+00:00,uart module with APB interface,0,GorgeousWalrus/panda_uart,290869735,SystemVerilog,panda_uart,14,1,2020-09-04 12:36:52+00:00,[],None
197,https://github.com/fpozzana/Baugh-Wooley_multiplier.git,2020-09-27 16:42:42+00:00,Implementation in systemVerilog of a Baugh-Wooley (signed) multiplier,0,fpozzana/Baugh-Wooley_multiplier,299075139,SystemVerilog,Baugh-Wooley_multiplier,8,1,2023-03-16 03:45:28+00:00,[],None
198,https://github.com/GorgeousWalrus/panda_apb.git,2020-08-27 11:31:53+00:00,Interconnect for the APB bus,0,GorgeousWalrus/panda_apb,290758034,SystemVerilog,panda_apb,2,1,2020-08-27 22:48:10+00:00,[],None
199,https://github.com/rajkaranswain/DigitalLogicLab.git,2020-10-23 09:29:38+00:00,,0,rajkaranswain/DigitalLogicLab,306589313,,DigitalLogicLab,0,1,2021-03-02 07:32:51+00:00,[],https://api.github.com/licenses/mit
200,https://github.com/christng98/TFE4152.git,2020-11-08 14:27:05+00:00,Analog and digital design of a four pixel camera.,2,christng98/TFE4152,311080338,SystemVerilog,TFE4152,213,1,2021-04-23 19:17:02+00:00,[],None
201,https://github.com/nulface/SystemVerilog-VGA-controller.git,2020-07-21 04:28:50+00:00,A VGA controller designed in SystemVerilog,0,nulface/SystemVerilog-VGA-controller,281294960,SystemVerilog,SystemVerilog-VGA-controller,3,1,2023-08-20 10:13:55+00:00,[],None
202,https://github.com/GorgeousWalrus/panda_debug.git,2020-08-21 11:34:03+00:00,,0,GorgeousWalrus/panda_debug,289254223,SystemVerilog,panda_debug,758,1,2020-09-04 14:25:00+00:00,[],None
203,https://github.com/akira-nishiyama/simple_ics_uvm.git,2020-08-15 04:33:30+00:00,Simple ics verification ip. Main target is vivado simulator.,0,akira-nishiyama/simple_ics_uvm,287677676,SystemVerilog,simple_ics_uvm,32,1,2021-05-21 01:57:35+00:00,[],https://api.github.com/licenses/mit
204,https://github.com/Robert-M-Hughes/BlackJack.git,2020-10-06 17:39:43+00:00,Implementation of BlackJack on a FPGA,0,Robert-M-Hughes/BlackJack,301807081,SystemVerilog,BlackJack,286,1,2020-12-02 22:12:03+00:00,[],None
205,https://github.com/UnAmigaReloaded-fpga/UAReloaded_NES.git,2020-10-20 17:16:36+00:00,Nintendo Entertainment System ported to UnAmiga Reloaded ,0,UnAmigaReloaded-fpga/UAReloaded_NES,305781179,SystemVerilog,UAReloaded_NES,237,1,2020-11-11 12:42:14+00:00,[],None
206,https://github.com/jacianeoc/loac.git,2020-10-21 03:38:05+00:00,,0,jacianeoc/loac,305899609,SystemVerilog,loac,7,1,2021-04-22 03:58:33+00:00,[],None
207,https://github.com/selvaruban-johnson/amba_apb_tb_II.git,2020-11-11 03:47:38+00:00,systemverilog testbench architecture II ,0,selvaruban-johnson/amba_apb_tb_II,311855799,SystemVerilog,amba_apb_tb_II,4,1,2023-01-20 04:23:00+00:00,[],None
208,https://github.com/axytho/CPAED.git,2020-11-09 13:14:08+00:00,Compute platforms hardware,0,axytho/CPAED,311343325,SystemVerilog,CPAED,2797,1,2022-03-23 05:39:28+00:00,[],None
209,https://github.com/alonba/Circus-Charlie.git,2020-09-24 19:18:38+00:00,"As the final project for a course at the Technion, I, with the help of my friend Omer, have built a game to run on a FPGA device using SystemVerilog. This is the game, based on the classic ""Circus Charlie"" game.",0,alonba/Circus-Charlie,298374149,SystemVerilog,Circus-Charlie,2911,1,2024-03-13 05:35:50+00:00,[],None
210,https://github.com/sawaddelll/Some-FPGA-Projects.git,2020-08-06 20:05:05+00:00,,0,sawaddelll/Some-FPGA-Projects,285661162,SystemVerilog,Some-FPGA-Projects,2479,1,2020-08-10 18:56:15+00:00,[],None
211,https://github.com/sampsyo/vivado-example.git,2020-07-27 17:54:07+00:00,just a minimal tcl setup for running Vivado synthesis on a self-contained design,0,sampsyo/vivado-example,282974412,SystemVerilog,vivado-example,13,1,2020-08-03 12:26:20+00:00,[],None
212,https://github.com/Manoj3050/PCIeArbiter.git,2020-07-10 02:43:13+00:00,,0,Manoj3050/PCIeArbiter,278521635,SystemVerilog,PCIeArbiter,68,1,2023-06-17 10:39:41+00:00,[],None
213,https://github.com/mfkiwl/SDRAM-Controller-1.git,2020-08-22 18:24:02+00:00,Verilog 拥有极简用户接口的 SDR SDRAM 控制器,0,mfkiwl/SDRAM-Controller-1,289544083,,SDRAM-Controller-1,109,1,2023-04-17 22:50:22+00:00,[],None
214,https://github.com/neptuno-fpga/NES_mist.git,2020-10-24 09:47:21+00:00,NES core from mist/mc2p sources,0,neptuno-fpga/NES_mist,306852115,SystemVerilog,NES_mist,137158,1,2021-10-22 22:21:58+00:00,[],None
215,https://github.com/Jiawei888/A-32-bit-floating-point-multiplier-based-on-FPGA.git,2020-07-08 11:00:27+00:00,"This project USES Quartus II and ModelSim software, and follows THE IEEE754 standard. It adopts 4:2 compressor structure and other components to design a multiplier, which reduces the hardware scale on the premise of ensuring high speed. The multiplier takes two normalized 32-bit floating-point Numbers and multiplicates them to obtain the normalized result. The multiplier can deal with ""special"" Numbers such as zero, plus, minus infinity, and ""non-number (NaN)"".",0,Jiawei888/A-32-bit-floating-point-multiplier-based-on-FPGA,278065624,SystemVerilog,A-32-bit-floating-point-multiplier-based-on-FPGA,3,1,2022-11-10 13:05:51+00:00,[],None
216,https://github.com/kkurenkov/uvm_uart.git,2020-10-19 14:33:36+00:00,,0,kkurenkov/uvm_uart,305413394,SystemVerilog,uvm_uart,38,1,2021-12-12 17:12:54+00:00,[],None
217,https://github.com/lxfei7310/nontrivial-mips.git,2020-10-20 08:56:50+00:00,,1,lxfei7310/nontrivial-mips,305648281,SystemVerilog,nontrivial-mips,20380,1,2023-01-22 13:12:54+00:00,[],
218,https://github.com/rajeevsaxena563/SVA-based-verification-of-AHB-Lite-protocol.git,2020-08-20 12:32:55+00:00,,1,rajeevsaxena563/SVA-based-verification-of-AHB-Lite-protocol,289001167,SystemVerilog,SVA-based-verification-of-AHB-Lite-protocol,70,1,2023-07-20 03:38:02+00:00,[],None
219,https://github.com/MahdiTorab/lincsim.git,2020-09-23 01:14:14+00:00,This is a multi-dimensional Network-on-chip (NoC) emulator that supports Wired/Wireless link simulation,0,MahdiTorab/lincsim,297815221,SystemVerilog,lincsim,128,1,2023-03-04 08:16:04+00:00,[],None
220,https://github.com/astalstain/improV.git,2020-09-29 15:17:37+00:00,Collaborative effort to design and validate a RISC-V microprocessor using SystemVerilog and other industry standard techniques,0,astalstain/improV,299656245,SystemVerilog,improV,785,1,2022-11-18 21:40:57+00:00,[],None
221,https://github.com/klokaj/DataSniffer.git,2020-09-03 16:38:14+00:00,,0,klokaj/DataSniffer,292625172,SystemVerilog,DataSniffer,69747,1,2020-09-20 10:39:01+00:00,[],None
222,https://github.com/GorgeousWalrus/panda_common.git,2020-08-31 09:36:50+00:00,Some common things for hardware designs,0,GorgeousWalrus/panda_common,291674056,SystemVerilog,panda_common,3,1,2020-09-04 12:33:46+00:00,[],None
223,https://github.com/yuc016/LamboProcessor.git,2020-08-29 03:14:24+00:00,A simple but capable 9-bit processor that comes with a python compiler and example assembly programs.,0,yuc016/LamboProcessor,291191513,SystemVerilog,LamboProcessor,130,1,2021-02-03 18:39:18+00:00,[],None
224,https://github.com/Dom324/RISC-V-CPU.git,2020-10-14 17:15:36+00:00,,0,Dom324/RISC-V-CPU,304084806,SystemVerilog,RISC-V-CPU,11581,1,2021-05-05 18:04:46+00:00,[],None
225,https://github.com/jaytlang/networkedlasers.git,2020-11-13 20:21:29+00:00,Hardware Networking + Laser Projector,0,jaytlang/networkedlasers,312675390,SystemVerilog,networkedlasers,94000,1,2023-01-25 21:18:55+00:00,[],
226,https://github.com/gzyIDE/perceptron.git,2020-10-27 05:02:35+00:00,verilog implementation of perceptron,0,gzyIDE/perceptron,307590453,SystemVerilog,perceptron,77,1,2023-11-28 15:14:58+00:00,[],https://api.github.com/licenses/mit
227,https://github.com/unicornt/mips-OoO.git,2020-07-05 08:33:11+00:00,misp-OoO,0,unicornt/mips-OoO,277261681,SystemVerilog,mips-OoO,3052,0,2020-07-05 08:33:52+00:00,[],None
228,https://github.com/levonkh/verilog_examples.git,2020-07-04 19:23:48+00:00,examples,0,levonkh/verilog_examples,277172449,SystemVerilog,verilog_examples,33,0,2020-07-26 19:49:26+00:00,[],None
229,https://github.com/ivan-1989/labs.git,2020-08-18 04:26:20+00:00,,0,ivan-1989/labs,288354136,SystemVerilog,labs,39,0,2021-01-15 09:31:15+00:00,[],None
230,https://github.com/814322112/EEB_Elevator_Simulator.git,2020-08-26 19:29:40+00:00,"A program written for FPGAs to simulate the behavior of the elevators in EEB, University of Washington. This is a final project of EE271.",0,814322112/EEB_Elevator_Simulator,290586753,SystemVerilog,EEB_Elevator_Simulator,404,0,2020-08-26 19:31:37+00:00,[],None
231,https://github.com/isamumu/dbg_guv.git,2020-08-06 05:15:32+00:00,summer 2020 under Marco Merlini,0,isamumu/dbg_guv,285480177,SystemVerilog,dbg_guv,2263,0,2020-09-03 12:06:25+00:00,[],None
232,https://github.com/Keerthivasan005/32-Bit-ALU.git,2020-08-06 11:25:55+00:00,Verilog code for 32 Bit ALU,0,Keerthivasan005/32-Bit-ALU,285552647,SystemVerilog,32-Bit-ALU,29,0,2020-08-07 18:12:28+00:00,[],None
233,https://github.com/selvaruban-johnson/BLOCK_LEVEL_TESTBENCH.git,2020-07-19 16:31:20+00:00,,0,selvaruban-johnson/BLOCK_LEVEL_TESTBENCH,280905934,SystemVerilog,BLOCK_LEVEL_TESTBENCH,2,0,2020-07-19 16:31:32+00:00,[],None
234,https://github.com/xmralla/full_adder.git,2020-07-03 06:40:16+00:00,,0,xmralla/full_adder,276827165,SystemVerilog,full_adder,1,0,2020-07-03 06:41:20+00:00,[],None
235,https://github.com/bellwood420/pong-arcade-fpga.git,2020-10-04 04:49:46+00:00,A FPGA implementation of original arcade Pong(1972),0,bellwood420/pong-arcade-fpga,301041768,SystemVerilog,pong-arcade-fpga,421,0,2020-11-28 10:22:09+00:00,[],None
236,https://github.com/ClSlaid/Naive_CPU.git,2020-11-01 12:27:51+00:00,A simple CPU designing task of BUPT CE.,0,ClSlaid/Naive_CPU,309090822,SystemVerilog,Naive_CPU,52,0,2023-01-28 11:31:44+00:00,[],https://api.github.com/licenses/mit
237,https://github.com/soleiyu/nexysa7prj.git,2020-09-06 07:47:19+00:00,,0,soleiyu/nexysa7prj,293228456,SystemVerilog,nexysa7prj,20242,0,2020-12-22 05:36:13+00:00,[],None
238,https://github.com/merledu/bolt-core.git,2020-09-21 11:26:15+00:00,This core(RV32) is designed by systemverilog.,0,merledu/bolt-core,297318290,SystemVerilog,bolt-core,7,0,2020-10-22 09:58:49+00:00,[],None
239,https://github.com/vinodsake/learn-verilog-sv.git,2020-10-11 06:30:45+00:00,Learn System verilog,0,vinodsake/learn-verilog-sv,303057399,SystemVerilog,learn-verilog-sv,1385,0,2021-02-08 08:45:28+00:00,[],None
240,https://github.com/xintong731/NOC_perm.git,2020-10-12 07:08:53+00:00,,0,xintong731/NOC_perm,303307307,SystemVerilog,NOC_perm,24,0,2020-10-30 02:07:28+00:00,[],None
241,https://github.com/cwmetrics/test_public.git,2020-09-30 23:06:45+00:00,,0,cwmetrics/test_public,300084860,SystemVerilog,test_public,1,0,2020-10-07 19:36:43+00:00,[],None
242,https://github.com/wmkusters/fgbitw.git,2020-11-09 16:18:04+00:00,,0,wmkusters/fgbitw,311395714,SystemVerilog,fgbitw,1566,0,2020-12-08 23:00:36+00:00,[],None
243,https://github.com/yahya-alhinai/Computer-Architecture.git,2020-07-13 00:40:32+00:00,,0,yahya-alhinai/Computer-Architecture,279173636,SystemVerilog,Computer-Architecture,438,0,2020-07-13 00:43:57+00:00,[],None
244,https://github.com/Zihaokong/SHA256andBitcoin.git,2020-07-13 16:36:19+00:00,model for Bitcoin,0,Zihaokong/SHA256andBitcoin,279357523,SystemVerilog,SHA256andBitcoin,7,0,2020-07-13 16:37:38+00:00,[],None
245,https://github.com/mfkiwl/Systolic_Matrix_Multiplier.git,2020-08-01 07:54:04+00:00,Matrix multiplication using systolic array,1,mfkiwl/Systolic_Matrix_Multiplier,284214656,,Systolic_Matrix_Multiplier,208,0,2021-12-15 09:29:21+00:00,[],None
246,https://github.com/antonyaslan/Cellular-Automata-Map-Evacuation.git,2020-08-03 18:48:35+00:00,,1,antonyaslan/Cellular-Automata-Map-Evacuation,284781170,,Cellular-Automata-Map-Evacuation,257,0,2020-10-08 07:57:22+00:00,[],None
247,https://github.com/Kiran760043/UART-Receiver.git,2020-08-11 00:25:24+00:00,FPGA Programs,0,Kiran760043/UART-Receiver,286606525,SystemVerilog,UART-Receiver,50,0,2020-08-11 00:27:00+00:00,[],None
248,https://github.com/jamenaso/test_hdmi.git,2020-08-02 17:18:34+00:00,Este código consiste en la prueba unitaria del puerto HDMI para el módulo de hardware desarrollado en el trabajo final de la carrera de especialización en sistemas embebidos de la Universidad de Buenos Aires.,0,jamenaso/test_hdmi,284507491,SystemVerilog,test_hdmi,2343,0,2020-08-02 17:39:13+00:00,[],None
249,https://github.com/AzmuthSzym/UEC_Projekt.git,2020-08-16 18:37:51+00:00,Repozytorium stworzone na potrzeby projektu z przedmiotu UEC,1,AzmuthSzym/UEC_Projekt,288003221,SystemVerilog,UEC_Projekt,125,0,2020-09-20 08:45:57+00:00,[],None
250,https://github.com/thata/verilog_building_blocks.git,2020-08-22 08:07:56+00:00,,0,thata/verilog_building_blocks,289447166,SystemVerilog,verilog_building_blocks,1057,0,2020-09-22 00:25:26+00:00,[],None
251,https://github.com/theignorantzen/learnSV.git,2020-07-18 12:53:23+00:00,Examples explored while learning SV. Contains some good examples to start your SV journey.,0,theignorantzen/learnSV,280656060,SystemVerilog,learnSV,7,0,2020-07-18 12:57:00+00:00,[],None
252,https://github.com/coreturn/cache.git,2020-07-19 11:11:54+00:00,,0,coreturn/cache,280848805,,cache,4436,0,2020-08-21 08:33:14+00:00,[],None
253,https://github.com/Artem1199/ECE582-Projects.git,2020-07-07 20:11:41+00:00,,0,Artem1199/ECE582-Projects,277912462,SystemVerilog,ECE582-Projects,161,0,2020-07-22 22:53:22+00:00,[],https://api.github.com/licenses/mit
254,https://github.com/visali85/uart_uvc.git,2020-07-28 10:40:59+00:00,,0,visali85/uart_uvc,283181812,SystemVerilog,uart_uvc,9943,0,2020-07-28 10:46:01+00:00,[],None
255,https://github.com/smanda25/MIPS.git,2020-07-15 23:21:19+00:00,MIPS multi cycle CPU on SystemVerilog,0,smanda25/MIPS,280002779,SystemVerilog,MIPS,7,0,2020-07-15 23:25:24+00:00,[],None
256,https://github.com/Galatis-Giuliano/Lab3EarlyDebouncer.git,2020-09-14 20:30:19+00:00,,0,Galatis-Giuliano/Lab3EarlyDebouncer,295531712,SystemVerilog,Lab3EarlyDebouncer,9,0,2020-09-16 04:21:05+00:00,[],None
257,https://github.com/SovanKundu/aibot.git,2020-08-27 18:24:14+00:00,AI Robot,0,SovanKundu/aibot,290851170,SystemVerilog,aibot,16,0,2020-09-04 00:06:26+00:00,[],None
258,https://github.com/jetvova/myarch32.git,2020-07-06 04:29:55+00:00,Designing a 32-bit CPU from scratch,1,jetvova/myarch32,277442182,SystemVerilog,myarch32,185,0,2020-11-21 04:31:27+00:00,[],https://api.github.com/licenses/apache-2.0
259,https://github.com/e60369/Verilog_Alarm_Clock.git,2020-07-04 16:23:05+00:00,,0,e60369/Verilog_Alarm_Clock,277145658,SystemVerilog,Verilog_Alarm_Clock,5,0,2020-07-11 13:58:07+00:00,[],None
260,https://github.com/SaichethanDevaruppula/stopwatch.fpga.git,2020-08-11 07:34:25+00:00,,0,SaichethanDevaruppula/stopwatch.fpga,286677253,SystemVerilog,stopwatch.fpga,19,0,2020-08-11 07:37:05+00:00,[],None
261,https://github.com/Atif-786/Full-adder-using-gate-level.git,2020-10-26 18:57:49+00:00,,0,Atif-786/Full-adder-using-gate-level,307475688,SystemVerilog,Full-adder-using-gate-level,7,0,2020-10-27 05:59:24+00:00,[],https://api.github.com/licenses/apache-2.0
262,https://github.com/cpe-adventurer/ramchip.git,2020-10-23 13:09:48+00:00,,0,cpe-adventurer/ramchip,306640724,SystemVerilog,ramchip,1,0,2021-01-01 19:56:50+00:00,[],None
263,https://github.com/ranjan-yadav/SHA-256-System-Verilog-Code.git,2020-09-18 18:01:23+00:00,"The complete code for SHA-256 has been implemented on questasim using system verilog and output has been for 256-random input given by user. For verification with real output , I have used an online website link as follows: https://www.movable-type.co.uk/scripts/sha256.html , which generates the SHA-256 output for a message.",0,ranjan-yadav/SHA-256-System-Verilog-Code,296694700,SystemVerilog,SHA-256-System-Verilog-Code,4352,0,2020-09-18 18:10:00+00:00,[],None
264,https://github.com/OmarNaffaa/Lab-5---FIFO.git,2020-09-30 00:01:01+00:00,,0,OmarNaffaa/Lab-5---FIFO,299765825,SystemVerilog,Lab-5---FIFO,6,0,2020-09-30 02:02:07+00:00,[],None
265,https://github.com/llfl/uvm_abc.git,2020-10-12 09:40:04+00:00,It is a new repo about my uvm learning cases(worked on VCS),0,llfl/uvm_abc,303345142,SystemVerilog,uvm_abc,9,0,2020-10-13 07:39:33+00:00,[],None
266,https://github.com/JeterHwang/DClab-team04.git,2020-09-24 05:14:34+00:00,,0,JeterHwang/DClab-team04,298175588,SystemVerilog,DClab-team04,25588,0,2022-09-28 07:19:35+00:00,[],None
267,https://github.com/karthmnz/FPGA_1756.git,2020-10-03 18:31:37+00:00,,0,karthmnz/FPGA_1756,300949961,SystemVerilog,FPGA_1756,15,0,2021-02-08 13:35:06+00:00,[],None
268,https://github.com/melt-umn/Abella-AG-Interface.git,2020-11-07 17:16:15+00:00,,0,melt-umn/Abella-AG-Interface,310894710,SystemVerilog,Abella-AG-Interface,729,0,2021-12-31 21:43:05+00:00,[],None
269,https://github.com/MatusPilnan/asicde-collab-visualization.git,2020-11-08 21:13:47+00:00,,0,MatusPilnan/asicde-collab-visualization,311156087,SystemVerilog,asicde-collab-visualization,35,0,2021-04-21 21:26:02+00:00,[],None
270,https://github.com/tylergithub/SHA-3-Permutation-Engine_SystemVerilog.git,2020-11-08 21:11:55+00:00,"The design shall have w=64, and the data is 5x5x64. The design has limitations. Using 4 provided memory blocks. The design has a 64 bit input interface and a 64 bit output interface. This design is synthesizable.",0,tylergithub/SHA-3-Permutation-Engine_SystemVerilog,311155805,SystemVerilog,SHA-3-Permutation-Engine_SystemVerilog,3313,0,2021-01-05 20:09:16+00:00,[],None
271,https://github.com/devinmur29/kaboom_project.git,2020-11-11 05:42:20+00:00,,1,devinmur29/kaboom_project,311874128,SystemVerilog,kaboom_project,47105,0,2020-12-09 01:02:14+00:00,[],None
272,https://github.com/rintcius/precog-testdata.git,2020-11-02 13:12:09+00:00,,0,rintcius/precog-testdata,309374144,SystemVerilog,precog-testdata,161,0,2021-03-02 10:09:37+00:00,[],None
273,https://github.com/YJ-Guan/pulpino_fpga_chip_test.git,2020-11-02 07:11:32+00:00,test the pulpino chip with zedboard,0,YJ-Guan/pulpino_fpga_chip_test,309286726,SystemVerilog,pulpino_fpga_chip_test,26,0,2021-01-20 07:48:55+00:00,[],https://api.github.com/licenses/mit
274,https://github.com/techie97/watchdog_services.git,2020-11-09 21:41:37+00:00,,1,techie97/watchdog_services,311472169,SystemVerilog,watchdog_services,10,0,2020-11-10 18:43:17+00:00,[],None
275,https://github.com/Tauhoo/neural-burning.git,2020-11-13 08:36:03+00:00,The architecture for neural network computing.,0,Tauhoo/neural-burning,312518361,SystemVerilog,neural-burning,54002,0,2021-04-18 08:55:20+00:00,[],None
276,https://github.com/maluwastaken/Infra_de_Hardware.git,2020-07-10 13:26:46+00:00,,0,maluwastaken/Infra_de_Hardware,278640157,,Infra_de_Hardware,3777,0,2020-07-10 13:28:31+00:00,[],None
277,https://github.com/tallenintegsys/computer_8bit.git,2020-07-01 00:43:37+00:00,Implementation of a popular 8-bit computer on a Cyclone IV,0,tallenintegsys/computer_8bit,276240434,SystemVerilog,computer_8bit,23399,0,2023-04-08 16:44:07+00:00,[],None
278,https://github.com/kushika-s30/Digital-Circuits.git,2020-08-31 14:17:49+00:00,Modelling of basic combinational and sequential digital electronic circuits using SystemVerilog in three different modelling styles. ,0,kushika-s30/Digital-Circuits,291734968,SystemVerilog,Digital-Circuits,133,0,2021-08-10 06:36:00+00:00,[],None
279,https://github.com/Kiran760043/UART-Project.git,2020-09-08 18:10:48+00:00,FPGA design,0,Kiran760043/UART-Project,293890579,SystemVerilog,UART-Project,68,0,2020-09-08 18:12:21+00:00,[],None
280,https://github.com/HaoboChen1887/CpuPrototype.git,2020-08-21 15:33:29+00:00,,0,HaoboChen1887/CpuPrototype,289304216,SystemVerilog,CpuPrototype,2492,0,2020-09-16 19:35:23+00:00,[],None
281,https://github.com/Dimonij/A6-task.git,2020-08-24 16:13:53+00:00,A6 task training in system verilog,0,Dimonij/A6-task,289977188,SystemVerilog,A6-task,17,0,2020-09-20 16:26:59+00:00,[],None
282,https://github.com/rosethepose/CPSC351-Full-Adder.git,2020-09-22 23:41:19+00:00,,0,rosethepose/CPSC351-Full-Adder,297799104,SystemVerilog,CPSC351-Full-Adder,4,0,2020-09-22 23:42:17+00:00,[],None
283,https://github.com/Berk-T/CelularAutomaton.git,2020-09-20 12:14:05+00:00,,0,Berk-T/CelularAutomaton,297068822,SystemVerilog,CelularAutomaton,6,0,2021-07-29 09:36:13+00:00,[],None
284,https://github.com/admiralento/logicboy.git,2020-09-21 18:00:44+00:00,Built from Scratch FPGA plans for a GameBoy-like System,0,admiralento/logicboy,297420188,SystemVerilog,logicboy,19288,0,2022-10-20 21:58:46+00:00,[],None
285,https://github.com/Teggoon/9-bit-ISA-Processor-and-Assembler-Class-Project.git,2020-08-07 07:54:57+00:00,,0,Teggoon/9-bit-ISA-Processor-and-Assembler-Class-Project,285771785,SystemVerilog,9-bit-ISA-Processor-and-Assembler-Class-Project,151,0,2020-09-03 23:08:31+00:00,[],None
286,https://github.com/johnw08/CNN_de0-nano.git,2020-10-04 05:56:38+00:00,,0,johnw08/CNN_de0-nano,301050793,SystemVerilog,CNN_de0-nano,28951,0,2021-01-28 05:30:44+00:00,[],None
287,https://github.com/asfandyark/projects.git,2020-09-27 22:23:44+00:00,Misc Projects,0,asfandyark/projects,299130047,SystemVerilog,projects,16,0,2022-04-14 07:20:53+00:00,[],None
288,https://github.com/fq97/remote.git,2020-07-13 20:15:35+00:00,Building a remote for Samsung TV using DE1-SOC FPGA using the Quartus Prime environment.,0,fq97/remote,279402572,SystemVerilog,remote,8281,0,2020-08-05 21:32:05+00:00,[],None
289,https://github.com/NirLalum/ALU.git,2020-07-08 18:47:31+00:00,ALU implementation,0,NirLalum/ALU,278169031,SystemVerilog,ALU,4,0,2020-07-08 18:49:52+00:00,[],None
290,https://github.com/melmae/logic-analyzer.git,2020-07-28 23:21:14+00:00,Final project for ECE 551 at UW-Madison (Spring 2020),0,melmae/logic-analyzer,283349060,SystemVerilog,logic-analyzer,21,0,2020-07-28 23:24:58+00:00,[],None
291,https://github.com/elektrotechniker-aufgabenDotDE/bcdCounterSynchron.git,2020-07-24 12:29:03+00:00,,0,elektrotechniker-aufgabenDotDE/bcdCounterSynchron,282214508,SystemVerilog,bcdCounterSynchron,108,0,2020-07-28 12:40:34+00:00,[],None
292,https://github.com/mukuljava/Hardware-generator-for-deep-convolutional-neural-networks.git,2020-07-30 01:32:40+00:00,,0,mukuljava/Hardware-generator-for-deep-convolutional-neural-networks,283640257,SystemVerilog,Hardware-generator-for-deep-convolutional-neural-networks,1475,0,2020-07-30 01:38:13+00:00,[],None
293,https://github.com/Fernsicles/FPGA-calc.git,2020-07-30 01:35:33+00:00,Simple calculator in SystemVerilog,0,Fernsicles/FPGA-calc,283640784,SystemVerilog,FPGA-calc,8,0,2020-08-01 05:42:14+00:00,"['fpga', 'systemverilog']",None
294,https://github.com/Jensenwww/apb_uart_top.git,2020-07-24 08:52:29+00:00,,0,Jensenwww/apb_uart_top,282170720,SystemVerilog,apb_uart_top,1,0,2020-07-24 09:10:09+00:00,[],None
295,https://github.com/shimo8810/fpga-practice.git,2020-10-12 02:16:40+00:00,FPGA 勉強用 リポジトリ,0,shimo8810/fpga-practice,303255325,SystemVerilog,fpga-practice,497,0,2020-11-01 07:54:58+00:00,[],https://api.github.com/licenses/mit
296,https://github.com/StephenBartel/UofCProjectHermes.git,2020-10-22 22:20:36+00:00,,0,StephenBartel/UofCProjectHermes,306471298,SystemVerilog,UofCProjectHermes,8537,0,2021-04-14 20:59:50+00:00,[],None
297,https://github.com/salvarez97/tarea_1_Verificacion.git,2020-10-13 21:51:11+00:00,Verificación para un Bus serial ,0,salvarez97/tarea_1_Verificacion,303836906,SystemVerilog,tarea_1_Verificacion,1,0,2020-10-20 06:23:44+00:00,[],None
298,https://github.com/joao-fragoso/serial_file_echo.git,2020-10-09 11:16:47+00:00,A SystemVerilog serial file echo project to Xilinx Vivado,0,joao-fragoso/serial_file_echo,302618769,SystemVerilog,serial_file_echo,39,0,2020-11-30 03:02:17+00:00,[],https://api.github.com/licenses/gpl-3.0
299,https://github.com/Radiophantom/LIFO.git,2020-08-17 09:10:38+00:00,,0,Radiophantom/LIFO,288134012,SystemVerilog,LIFO,14,0,2022-07-26 13:40:28+00:00,[],None
300,https://github.com/irwinfrimpong/MIPS-Single-Cycle-Processor.git,2020-07-19 00:35:49+00:00,"Single Cycle MIPS Processor to support ALU computations including but not limited to add, sub,and,or,slt,lw, j, beq operations",0,irwinfrimpong/MIPS-Single-Cycle-Processor,280764190,SystemVerilog,MIPS-Single-Cycle-Processor,275,0,2020-07-19 00:36:57+00:00,[],None
301,https://github.com/parker44/memory-manipulation.git,2020-07-24 18:36:31+00:00,,0,parker44/memory-manipulation,282291547,SystemVerilog,memory-manipulation,31,0,2020-07-28 22:11:38+00:00,[],None
302,https://github.com/JesusA824/Verilog-.git,2020-08-19 04:00:39+00:00,,1,JesusA824/Verilog-,288629180,SystemVerilog,Verilog-,15,0,2020-08-19 05:21:24+00:00,[],None
303,https://github.com/WenguoZhang-cd/work_and_learn.git,2020-08-26 04:49:09+00:00,Keep of record of the learning notes and work logs ,0,WenguoZhang-cd/work_and_learn,290398002,SystemVerilog,work_and_learn,12,0,2021-11-22 02:32:39+00:00,[],None
304,https://github.com/SergioJJ/systemverilog-babysteps.git,2020-08-19 20:32:36+00:00,A repository for all notes and practice about systemverilog,0,SergioJJ/systemverilog-babysteps,288831540,SystemVerilog,systemverilog-babysteps,14,0,2020-09-06 18:31:23+00:00,[],None
305,https://github.com/jimfred/fpga.git,2020-08-27 02:46:49+00:00,,0,jimfred/fpga,290657906,SystemVerilog,fpga,40,0,2020-08-31 00:54:30+00:00,[],None
306,https://github.com/danielgaio/state_machine_exercise_2.git,2020-10-10 19:36:35+00:00,,0,danielgaio/state_machine_exercise_2,302976641,SystemVerilog,state_machine_exercise_2,12952,0,2020-11-02 22:53:32+00:00,[],None
307,https://github.com/Louisredstone/SystemVerilog.git,2020-10-05 07:57:59+00:00,,0,Louisredstone/SystemVerilog,301333588,SystemVerilog,SystemVerilog,2233,0,2022-01-01 13:05:30+00:00,[],None
308,https://github.com/RadwanAtme/Simple-Arithmetic-Logic-Unit--UniversityHomework.git,2020-10-15 10:55:36+00:00,,0,RadwanAtme/Simple-Arithmetic-Logic-Unit--UniversityHomework,304296628,SystemVerilog,Simple-Arithmetic-Logic-Unit--UniversityHomework,204,0,2020-10-15 11:23:11+00:00,[],None
309,https://github.com/ralfgad/Multiplicador.git,2020-10-07 07:23:48+00:00,,0,ralfgad/Multiplicador,301957866,SystemVerilog,Multiplicador,164,0,2020-10-07 08:06:36+00:00,[],None
310,https://github.com/suyash-20/SystemVerilog_repo.git,2020-08-14 23:39:54+00:00,,0,suyash-20/SystemVerilog_repo,287644107,SystemVerilog,SystemVerilog_repo,27,0,2021-05-09 12:08:52+00:00,[],None
311,https://github.com/Jutenbezbuten/uec2_alt_version.git,2020-09-09 22:48:50+00:00,"alt ver of the uec2 final project, no keyboard basically",0,Jutenbezbuten/uec2_alt_version,294246568,SystemVerilog,uec2_alt_version,18993,0,2020-09-15 01:57:16+00:00,[],None
312,https://github.com/qqn2/sv_fifo.git,2020-09-17 17:40:21+00:00,,0,qqn2/sv_fifo,296399084,SystemVerilog,sv_fifo,764,0,2021-12-13 09:03:25+00:00,[],None
313,https://github.com/PulseRain/FRV2100.git,2020-07-25 23:40:32+00:00,PulseRain FRV2100 RISC-V Core,3,PulseRain/FRV2100,282542887,SystemVerilog,FRV2100,373,0,2020-07-26 01:27:35+00:00,[],
314,https://github.com/kosmar2011/riscv.git,2020-08-11 07:28:07+00:00,Naive RISC-V Implementation in SystemVerilog,0,kosmar2011/riscv,286675886,SystemVerilog,riscv,14,0,2021-06-18 14:14:57+00:00,[],None
315,https://github.com/Radiophantom/serializer.git,2020-08-07 12:09:42+00:00,,0,Radiophantom/serializer,285820183,SystemVerilog,serializer,4,0,2020-08-10 09:59:16+00:00,[],None
316,https://github.com/saipra99/Dual_port_Ram.git,2020-07-16 07:50:07+00:00,,0,saipra99/Dual_port_Ram,280089534,SystemVerilog,Dual_port_Ram,61,0,2023-09-18 10:54:02+00:00,[],None
317,https://github.com/aaronrjmanj/systemverilog.git,2020-07-09 22:08:34+00:00,Design Verification using systemverilog,0,aaronrjmanj/systemverilog,278480989,SystemVerilog,systemverilog,9,0,2020-08-03 03:53:09+00:00,[],None
318,https://github.com/merledu/bulbul_core_sv.git,2020-09-26 10:03:06+00:00,,0,merledu/bulbul_core_sv,298786237,SystemVerilog,bulbul_core_sv,25,0,2020-10-25 14:10:41+00:00,[],None
319,https://github.com/Atif-786/Half-Adder-using-gate-level.git,2020-10-26 18:55:58+00:00,,0,Atif-786/Half-Adder-using-gate-level,307475248,SystemVerilog,Half-Adder-using-gate-level,1,0,2020-10-26 18:56:44+00:00,[],None
320,https://github.com/datamaskinprosjekt/FPGA-MadNES.git,2020-10-20 09:16:47+00:00,A 480p (VGA) 16 bit sprite rendering processing unit,0,datamaskinprosjekt/FPGA-MadNES,305653534,SystemVerilog,FPGA-MadNES,223,0,2021-02-03 23:48:12+00:00,"['vivado', 'systemverilog', 'hdl']",https://api.github.com/licenses/mit
321,https://github.com/NganHoPSU/ECE581_Fall20.git,2020-10-17 23:42:26+00:00,,0,NganHoPSU/ECE581_Fall20,304988712,SystemVerilog,ECE581_Fall20,3065,0,2020-10-19 06:00:12+00:00,[],None
322,https://github.com/Dm1998/Score_4.git,2020-11-09 17:50:56+00:00,"At this project I designed a module that can execute the classic board game Score 4.The game is played by two players, who are called to select on which column they want to put theirc checker,on everu round. The main goal of the game is to put 4 straight checkers on a diagonal,row or column.The project is fully implemented on System Verilog. In this project there are included the source file,main testbench,an .qpf file for quartus compilation and an vga module so that we can represent the game on a screen through vga cables. ",0,Dm1998/Score_4,311420077,SystemVerilog,Score_4,7,0,2020-11-09 18:50:09+00:00,[],None
323,https://github.com/sanketkumar-parekh/Simple_codes.git,2020-07-14 01:56:07+00:00,just some simple codes of design for reference.,0,sanketkumar-parekh/Simple_codes,279455298,SystemVerilog,Simple_codes,2,0,2020-08-03 02:00:21+00:00,[],None
324,https://github.com/jrmoserbaltimore/retro-MiSTer_Gameboy.git,2020-07-13 21:30:57+00:00,Implementation of the Retro using the MiSTer Gameboy core,0,jrmoserbaltimore/retro-MiSTer_Gameboy,279415928,SystemVerilog,retro-MiSTer_Gameboy,154,0,2022-08-11 11:00:17+00:00,[],
325,https://github.com/TwistsOfFate/longson.git,2020-07-14 15:16:46+00:00,,0,TwistsOfFate/longson,279620550,SystemVerilog,longson,31,0,2020-08-24 09:27:02+00:00,[],None
326,https://github.com/konstantinosskoutelis/Cellular-Automata-Map-Evacuation.git,2020-08-03 07:47:33+00:00,,0,konstantinosskoutelis/Cellular-Automata-Map-Evacuation,284636829,SystemVerilog,Cellular-Automata-Map-Evacuation,258,0,2022-11-19 14:13:56+00:00,[],None
327,https://github.com/JelenaVujakovic/Functional_verification.git,2020-08-04 07:38:57+00:00,UVM methodology,0,JelenaVujakovic/Functional_verification,284911114,SystemVerilog,Functional_verification,9652,0,2020-11-20 15:13:55+00:00,[],None
328,https://github.com/Nemiland/CAN-Controller.git,2020-08-03 15:09:30+00:00,,1,Nemiland/CAN-Controller,284732259,SystemVerilog,CAN-Controller,2545,0,2020-08-03 15:14:33+00:00,[],None
329,https://github.com/AustinRye/Ethernet-Switch.git,2020-08-16 00:44:18+00:00,,0,AustinRye/Ethernet-Switch,287848358,SystemVerilog,Ethernet-Switch,16,0,2021-01-02 19:22:49+00:00,[],None
330,https://github.com/akira-nishiyama/simple_urat_uvm.git,2020-08-14 06:38:14+00:00,Simple uart verification ip. Main target is vivado simulator.,0,akira-nishiyama/simple_urat_uvm,287462432,SystemVerilog,simple_urat_uvm,25,0,2020-10-18 20:34:37+00:00,[],https://api.github.com/licenses/mit
331,https://github.com/fong5855/RISCV.git,2020-08-19 13:15:11+00:00,,0,fong5855/RISCV,288736300,SystemVerilog,RISCV,145,0,2020-08-19 13:15:50+00:00,[],None
332,https://github.com/ChristianKouris/sample-processor.git,2020-09-08 21:45:12+00:00,A simple processor written in SystemVerilog,0,ChristianKouris/sample-processor,293934484,SystemVerilog,sample-processor,38,0,2021-03-30 06:09:24+00:00,[],None
333,https://github.com/rolfesl/SingleCycleArmv4ISA.git,2020-09-11 02:18:43+00:00,,0,rolfesl/SingleCycleArmv4ISA,294571694,SystemVerilog,SingleCycleArmv4ISA,323,0,2023-01-28 12:53:12+00:00,[],None
334,https://github.com/mtahna/hdl_sync_fifo.git,2020-07-23 10:07:58+00:00,,0,mtahna/hdl_sync_fifo,281917167,SystemVerilog,hdl_sync_fifo,553,0,2020-07-23 10:11:14+00:00,[],None
335,https://github.com/newshah/NITISA.git,2020-08-11 19:13:51+00:00,,0,newshah/NITISA,286828143,SystemVerilog,NITISA,16,0,2020-08-12 14:11:56+00:00,[],None
336,https://github.com/yg2m19/SOC_design_cycle_computer.git,2020-07-10 14:51:33+00:00,SoC design process version of bicycle computer,0,yg2m19/SOC_design_cycle_computer,278660103,SystemVerilog,SOC_design_cycle_computer,278,0,2020-07-10 15:08:07+00:00,[],None
337,https://github.com/RaviDaGuy/LTC2325.git,2020-08-09 15:51:11+00:00,Code to communicate with LTC2325 ADC.,0,RaviDaGuy/LTC2325,286267846,SystemVerilog,LTC2325,1426,0,2020-08-09 16:28:42+00:00,[],None
338,https://github.com/bindushankarareddy/Calculator-Functional-Verification.git,2020-08-06 04:51:41+00:00,,0,bindushankarareddy/Calculator-Functional-Verification,285476614,SystemVerilog,Calculator-Functional-Verification,11,0,2020-08-06 04:58:35+00:00,[],None
339,https://github.com/jonguyen-ucsd/141.git,2020-08-08 18:49:40+00:00,For 141 labs,0,jonguyen-ucsd/141,286101301,SystemVerilog,141,9859,0,2021-04-28 18:32:53+00:00,[],None
340,https://github.com/rvkrysh/verilator-basic.git,2020-08-10 05:05:24+00:00,Basic verilator sim,0,rvkrysh/verilator-basic,286380818,SystemVerilog,verilator-basic,4,0,2020-08-10 05:19:12+00:00,[],None
341,https://github.com/ahnazeri/Pipelined-MIPS.git,2020-10-13 10:21:41+00:00,,0,ahnazeri/Pipelined-MIPS,303665345,SystemVerilog,Pipelined-MIPS,54,0,2020-10-13 10:39:39+00:00,[],None
342,https://github.com/Stinger1000/FPGA_CORE.git,2020-09-16 10:17:56+00:00,,0,Stinger1000/FPGA_CORE,295997692,SystemVerilog,FPGA_CORE,5,0,2020-09-16 10:31:43+00:00,[],None
343,https://github.com/y0sshi/RISC-V.git,2020-09-22 06:57:04+00:00,,0,y0sshi/RISC-V,297562670,SystemVerilog,RISC-V,435,0,2022-08-20 08:55:54+00:00,[],None
344,https://github.com/ciomagandreidaniel/Verification-of-APBtoBurst.git,2020-08-29 20:47:42+00:00,This is a verification environment for the APBtoBurst module.,0,ciomagandreidaniel/Verification-of-APBtoBurst,291346733,SystemVerilog,Verification-of-APBtoBurst,5918,0,2021-12-10 23:50:12+00:00,[],None
345,https://github.com/bansil-vaghasiya/UVM_Constrained_Random_Verification_of_ALU.git,2020-09-21 02:00:14+00:00,UVM constrained random verification of the ALU unit ,0,bansil-vaghasiya/UVM_Constrained_Random_Verification_of_ALU,297203055,SystemVerilog,UVM_Constrained_Random_Verification_of_ALU,360,0,2020-09-21 02:03:00+00:00,[],None
346,https://github.com/bansil-vaghasiya/UVM_scoreboard_Sending_Receiving_Messages.git,2020-09-21 01:50:52+00:00,UVM Scoreboard class to send and receive 20 message.,0,bansil-vaghasiya/UVM_scoreboard_Sending_Receiving_Messages,297201447,SystemVerilog,UVM_scoreboard_Sending_Receiving_Messages,342,0,2020-09-21 01:54:10+00:00,[],None
347,https://github.com/dschaefer/fpga-template.git,2020-09-20 05:00:24+00:00,Project template for FPGA dev,0,dschaefer/fpga-template,297005307,SystemVerilog,fpga-template,24,0,2021-11-14 19:32:33+00:00,[],None
348,https://github.com/abuzaid268/MultithreadedRISCV.git,2020-09-12 10:25:51+00:00,Design of Coarse Grained Multithreaded RISCV Processor,0,abuzaid268/MultithreadedRISCV,294920657,SystemVerilog,MultithreadedRISCV,1809,0,2020-09-12 10:48:41+00:00,[],None
349,https://github.com/danielgaio/fibnacci_exercise.git,2020-10-09 20:26:14+00:00,,0,danielgaio/fibnacci_exercise,302746308,SystemVerilog,fibnacci_exercise,9407,0,2020-11-02 22:52:34+00:00,[],None
350,https://github.com/freddyD77/Sony-PS3-Cell-CPU-Lite.git,2020-09-30 19:50:20+00:00,,0,freddyD77/Sony-PS3-Cell-CPU-Lite,300043823,SystemVerilog,Sony-PS3-Cell-CPU-Lite,1221,0,2020-09-30 19:54:17+00:00,[],None
351,https://github.com/TMuthuganesan/SV_Randomization.git,2020-10-21 08:40:07+00:00,This repository has short code snippets & examples related to systemverilog randomization and constraints.,0,TMuthuganesan/SV_Randomization,305960909,SystemVerilog,SV_Randomization,13,0,2020-10-23 09:20:35+00:00,[],None
352,https://github.com/tiffanishilts/ECE585-Project-Memory-Controller-Simulator.git,2020-10-31 18:39:06+00:00,SystemVerilog code to simulate memory controller,0,tiffanishilts/ECE585-Project-Memory-Controller-Simulator,308949160,SystemVerilog,ECE585-Project-Memory-Controller-Simulator,736,0,2023-01-28 01:22:36+00:00,[],https://api.github.com/licenses/gpl-3.0
353,https://github.com/varoqr08/ProyectoII_ArquiII.git,2020-10-28 21:24:13+00:00,Segundo Proyecto de Arquitectura de Computadores II,0,varoqr08/ProyectoII_ArquiII,308144441,SystemVerilog,ProyectoII_ArquiII,550,0,2020-11-26 03:26:27+00:00,[],None
354,https://github.com/luisk97/FSMCafe.git,2020-10-27 21:25:34+00:00,,0,luisk97/FSMCafe,307831815,SystemVerilog,FSMCafe,148,0,2020-10-29 22:08:09+00:00,[],None
355,https://github.com/terpakf/4dm4lab3.git,2020-11-10 01:38:02+00:00,,0,terpakf/4dm4lab3,311512796,,4dm4lab3,5,0,2020-11-27 23:30:07+00:00,[],None
356,https://github.com/uricata9/lmeuprocessador.git,2020-11-10 07:41:31+00:00,,0,uricata9/lmeuprocessador,311581832,SystemVerilog,lmeuprocessador,110,0,2021-01-20 09:22:33+00:00,[],https://api.github.com/licenses/mit
357,https://github.com/bansil-vaghasiya/Design-and-verification-of-16-bit-64-KB-memory.git,2020-08-26 23:00:15+00:00,Systemverilog testbench using assertions,0,bansil-vaghasiya/Design-and-verification-of-16-bit-64-KB-memory,290622549,SystemVerilog,Design-and-verification-of-16-bit-64-KB-memory,2,0,2020-09-20 19:47:09+00:00,[],None
358,https://github.com/livebinary/UVM.git,2020-08-23 09:40:18+00:00,UVM Examples,0,livebinary/UVM,289656547,SystemVerilog,UVM,1,0,2020-08-23 09:50:29+00:00,[],None
359,https://github.com/Manoj3050/SystemVerilogPongGame.git,2020-08-23 02:04:02+00:00,System verilog based Pong game for demonstrating system verilog for syntheiszable design,0,Manoj3050/SystemVerilogPongGame,289598797,SystemVerilog,SystemVerilogPongGame,4,0,2020-08-23 02:09:29+00:00,[],None
360,https://github.com/rolfesl/PipelinedArmv4ISA.git,2020-09-11 02:31:18+00:00,,0,rolfesl/PipelinedArmv4ISA,294574115,SystemVerilog,PipelinedArmv4ISA,332,0,2023-01-28 12:53:12+00:00,[],None
361,https://github.com/danielgaio/sigmoid.git,2020-07-09 16:40:22+00:00,Implementação de um bloco sigmoide em verilog,1,danielgaio/sigmoid,278418526,SystemVerilog,sigmoid,45116,0,2021-08-30 11:11:24+00:00,[],None
362,https://github.com/izzul210/flash_memory_reader.git,2020-07-26 01:24:02+00:00,Created a system that reads sound samples from an off-chip flash memory and store them to the on-chip memory with a state machine.     The samples are transferred to the audio core as an output by designing audio CODEC. ,1,izzul210/flash_memory_reader,282553591,SystemVerilog,flash_memory_reader,20,0,2020-07-26 01:38:45+00:00,[],None
363,https://github.com/PulseRain/Hardware_Bootloader.git,2020-07-26 02:49:43+00:00,Hardware Based Bootloader for MCU,0,PulseRain/Hardware_Bootloader,282563262,SystemVerilog,Hardware_Bootloader,613,0,2020-07-31 09:26:03+00:00,[],
364,https://github.com/cdeitner/FPGA_Tetris.git,2020-09-18 02:07:45+00:00,,0,cdeitner/FPGA_Tetris,296489036,SystemVerilog,FPGA_Tetris,38,0,2020-09-18 02:35:03+00:00,[],None
365,https://github.com/chrisspear/uvm_xact.git,2020-10-02 12:21:49+00:00,UVM transaction examples,1,chrisspear/uvm_xact,300605907,SystemVerilog,uvm_xact,15,0,2020-10-26 15:44:35+00:00,[],https://api.github.com/licenses/apache-2.0
366,https://github.com/leoli101/64-bit-pipelined-ARM-CPU.git,2020-10-08 00:21:13+00:00,,0,leoli101/64-bit-pipelined-ARM-CPU,302192119,SystemVerilog,64-bit-pipelined-ARM-CPU,2924,0,2020-10-08 00:24:01+00:00,[],None
367,https://github.com/anuragktl/rtl_modules.git,2020-10-14 00:25:57+00:00,,0,anuragktl/rtl_modules,303860289,SystemVerilog,rtl_modules,2,0,2020-10-14 00:28:08+00:00,[],None
368,https://github.com/IssaBeastBoy/Hardware-Logic-and-Analysis.git,2020-10-12 06:50:41+00:00,Programming BASYS 3 board using vhdl,0,IssaBeastBoy/Hardware-Logic-and-Analysis,303302964,SystemVerilog,Hardware-Logic-and-Analysis,10280,0,2020-10-12 06:54:50+00:00,[],None
369,https://github.com/IIIPlutoIII/VerilogBasicModule.git,2020-09-26 08:55:06+00:00,basic modules with testbench code,0,IIIPlutoIII/VerilogBasicModule,298775063,SystemVerilog,VerilogBasicModule,338,0,2020-09-26 09:01:47+00:00,[],None
370,https://github.com/stdezieg/HDL-snippets.git,2020-08-17 20:51:52+00:00,,0,stdezieg/HDL-snippets,288283853,SystemVerilog,HDL-snippets,17,0,2020-08-17 21:15:25+00:00,[],None
371,https://github.com/ezchi/uvm_sv.git,2020-08-31 06:34:40+00:00,UVM SystemVerlog source code,1,ezchi/uvm_sv,291634669,SystemVerilog,uvm_sv,698,0,2020-08-31 06:38:16+00:00,[],https://api.github.com/licenses/apache-2.0
372,https://github.com/Azhangy38/2048-ECE385.git,2020-09-10 05:05:34+00:00,"2048, playable on VGA monitor with the use of a FPGA.",0,Azhangy38/2048-ECE385,294308453,SystemVerilog,2048-ECE385,30,0,2021-01-22 05:54:55+00:00,[],None
373,https://github.com/Rookie-cprime/Systemverilog.git,2020-10-05 12:38:37+00:00,,0,Rookie-cprime/Systemverilog,301404158,SystemVerilog,Systemverilog,123,0,2020-10-11 08:56:51+00:00,[],None
374,https://github.com/chroco/ece508hw1.git,2020-10-11 16:28:16+00:00,,0,chroco/ece508hw1,303163855,SystemVerilog,ece508hw1,6,0,2020-10-14 01:00:19+00:00,[],None
375,https://github.com/sina-nabavi/CAL-ARM.git,2020-10-27 10:13:44+00:00,,0,sina-nabavi/CAL-ARM,307659556,SystemVerilog,CAL-ARM,15,0,2020-12-09 21:16:00+00:00,[],None
376,https://github.com/charkster/SCARF.git,2020-07-04 02:07:51+00:00,SCARF - “Scarf Connects A Raspberry pi to Fpga”,0,charkster/SCARF,277021475,SystemVerilog,SCARF,902,0,2022-04-08 00:14:07+00:00,"['scarf', 'fpga-designs', 'fpga', 'raspberry-pi', 'spi-slave']",https://api.github.com/licenses/mit
377,https://github.com/toniklippeo/andenV.git,2020-07-06 20:17:54+00:00,,0,toniklippeo/andenV,277640123,SystemVerilog,andenV,2,0,2020-07-07 08:50:00+00:00,[],None
378,https://github.com/soumitr476/VerilogStopwatch.git,2020-08-08 11:38:32+00:00,,0,soumitr476/VerilogStopwatch,286031708,SystemVerilog,VerilogStopwatch,4,0,2020-08-08 11:41:38+00:00,[],None
379,https://github.com/tianxiaohuahua/homework.git,2020-07-11 23:45:41+00:00,a test,0,tianxiaohuahua/homework,278959747,SystemVerilog,homework,1016,0,2020-07-15 03:02:55+00:00,[],None
380,https://github.com/j-koczwara/countingsystem.git,2020-10-24 22:20:52+00:00,,0,j-koczwara/countingsystem,306981546,SystemVerilog,countingsystem,6,0,2020-11-04 10:45:31+00:00,[],None
381,https://github.com/tdell-dev/simon_cipher.git,2020-08-02 01:51:53+00:00,,0,tdell-dev/simon_cipher,284371333,SystemVerilog,simon_cipher,99,0,2023-11-28 22:22:36+00:00,[],None
382,https://github.com/Panda-Cores/gpio_module.git,2020-08-09 11:06:37+00:00,,0,Panda-Cores/gpio_module,286220211,SystemVerilog,gpio_module,2,0,2020-08-09 12:45:50+00:00,[],None
383,https://github.com/esophagus-now/str_to_num_verilog.git,2020-09-03 04:53:46+00:00,A little demo for an upcoming paper,0,esophagus-now/str_to_num_verilog,292470159,SystemVerilog,str_to_num_verilog,9,0,2020-09-09 22:35:07+00:00,[],None
384,https://github.com/Gin594/CSE-141L.git,2020-09-07 01:37:22+00:00,,0,Gin594/CSE-141L,293394307,SystemVerilog,CSE-141L,378,0,2020-09-22 01:33:02+00:00,[],None
385,https://github.com/abbyjoseph/Lab11.git,2020-11-05 16:59:20+00:00,,0,abbyjoseph/Lab11,310364535,SystemVerilog,Lab11,162,0,2020-11-19 19:32:42+00:00,[],None
386,https://github.com/melt-umn/caml-light.git,2020-10-08 16:44:21+00:00,,1,melt-umn/caml-light,302404019,SystemVerilog,caml-light,59,0,2022-06-11 16:12:24+00:00,[],None
387,https://github.com/roscibely/SAP1-computer.git,2020-08-21 22:12:10+00:00,Model of a microprocessor,0,roscibely/SAP1-computer,289374725,SystemVerilog,SAP1-computer,7,0,2020-08-22 21:32:05+00:00,[],None
388,https://github.com/OmarNaffaa/ECE4305_Lab4.git,2020-09-21 19:09:50+00:00,,0,OmarNaffaa/ECE4305_Lab4,297436455,SystemVerilog,ECE4305_Lab4,10,0,2020-09-21 19:11:40+00:00,[],None
389,https://github.com/cetola/a-el-you-tbx.git,2020-10-25 16:33:01+00:00,Another simple alu. This time using TBX.,0,cetola/a-el-you-tbx,307142390,SystemVerilog,a-el-you-tbx,18,0,2020-11-20 22:19:35+00:00,[],https://api.github.com/licenses/gpl-2.0
390,https://github.com/nmtproject/Near-Memory-Threading.git,2020-10-12 19:32:30+00:00,,0,nmtproject/Near-Memory-Threading,303493793,SystemVerilog,Near-Memory-Threading,102,0,2020-10-13 07:17:54+00:00,[],None
391,https://github.com/chroco/ece508extracredit1.git,2020-10-09 00:13:57+00:00,,0,chroco/ece508extracredit1,302490606,SystemVerilog,ece508extracredit1,2,0,2020-10-09 00:30:28+00:00,[],None
392,https://github.com/hawkejo/vga_controller.git,2020-07-11 14:11:19+00:00,,0,hawkejo/vga_controller,278874672,SystemVerilog,vga_controller,1555,0,2021-09-23 16:16:58+00:00,[],https://api.github.com/licenses/mpl-2.0
393,https://github.com/syamhaque/Junior-Year-Work.git,2020-07-28 05:23:29+00:00,Notable projects done during my Junior year of undergraduate at UCI,0,syamhaque/Junior-Year-Work,283108545,SystemVerilog,Junior-Year-Work,15319,0,2020-08-05 05:47:48+00:00,[],None
394,https://github.com/JaviCeRodriguez/TPFinal_D1.git,2020-07-31 22:50:27+00:00,Trabajo Práctico Final para Electrónica Digital 1. Universidad Nacional de San Martín,0,JaviCeRodriguez/TPFinal_D1,284143761,SystemVerilog,TPFinal_D1,20777,0,2020-11-10 23:33:48+00:00,[],None
395,https://github.com/hamidsalemi77/CA_CA_4.git,2020-08-01 05:14:44+00:00,,0,hamidsalemi77/CA_CA_4,284192067,SystemVerilog,CA_CA_4,381,0,2023-09-15 17:59:38+00:00,[],None
396,https://github.com/visali85/apb.git,2020-08-03 16:20:58+00:00,,0,visali85/apb,284748958,SystemVerilog,apb,10275,0,2020-08-03 16:32:06+00:00,[],None
397,https://github.com/tsg3/Proyecto1-Arqui1.git,2020-07-09 04:15:39+00:00,,1,tsg3/Proyecto1-Arqui1,278260758,SystemVerilog,Proyecto1-Arqui1,1155,0,2020-07-18 06:05:09+00:00,[],None
398,https://github.com/Dianeswarr/Implementing-Verifying-a-Door-Lock.git,2020-07-06 11:35:57+00:00," Specified, implemented, and verified parts of a classical code-based door lock system. The system uses 4-digit PINs entered sequentially by pressing the buttons of a keypad, unlocks the door for 3 seconds if a correct code is entered, and has functionality to update the stored code using a Master key",0,Dianeswarr/Implementing-Verifying-a-Door-Lock,277524920,SystemVerilog,Implementing-Verifying-a-Door-Lock,2,0,2020-07-06 11:54:43+00:00,[],None
399,https://github.com/VicMartini/SingleCycleProcessor.git,2020-09-23 04:20:17+00:00,,0,VicMartini/SingleCycleProcessor,297850621,SystemVerilog,SingleCycleProcessor,27,0,2020-09-26 23:24:00+00:00,[],None
400,https://github.com/awnind93/UVM_TB_ALU.git,2020-10-01 17:04:29+00:00,,0,awnind93/UVM_TB_ALU,300357548,SystemVerilog,UVM_TB_ALU,4,0,2020-10-01 17:14:51+00:00,[],None
401,https://github.com/PacoReinaCampo/gnumig.git,2020-10-06 03:35:28+00:00,Kernel Interface Generator for RTOS,1,PacoReinaCampo/gnumig,301604843,SystemVerilog,gnumig,10514,0,2023-01-18 16:03:28+00:00,[],https://api.github.com/licenses/mit
402,https://github.com/isNozo/fpga_cpu.git,2020-09-16 10:44:25+00:00,「上原 周，作ろう！ＣＰＵ 基礎から理解するコンピューターのしくみ，マイナビ出版」を読んでCPUを実装する,1,isNozo/fpga_cpu,296003107,SystemVerilog,fpga_cpu,24,0,2023-07-27 13:05:43+00:00,[],None
403,https://github.com/yyl-2/2020--Xilinx-Summer-School-.git,2020-08-02 09:32:35+00:00, 2020年新工科联盟-Xilinx暑期学校（Summer School）项目,0,yyl-2/2020--Xilinx-Summer-School-,284431170,SystemVerilog,2020--Xilinx-Summer-School-,2175,0,2020-08-06 03:30:03+00:00,[],None
404,https://github.com/scarymen/stop-watch.git,2020-08-11 10:13:22+00:00,,0,scarymen/stop-watch,286711740,SystemVerilog,stop-watch,15,0,2020-08-11 10:14:44+00:00,[],None
405,https://github.com/alinecat/Multicycle-CPU.git,2020-08-22 09:41:43+00:00,,0,alinecat/Multicycle-CPU,289460420,SystemVerilog,Multicycle-CPU,1609,0,2020-08-22 09:50:33+00:00,[],https://api.github.com/licenses/mit
406,https://github.com/rdaum/simple_tta.git,2020-07-28 19:03:59+00:00,,0,rdaum/simple_tta,283302910,SystemVerilog,simple_tta,25,0,2022-05-15 22:41:11+00:00,[],https://api.github.com/licenses/mit
407,https://github.com/AloriumTechnology/evo_pmux_csr.git,2020-07-28 16:07:41+00:00,,0,AloriumTechnology/evo_pmux_csr,283263173,SystemVerilog,evo_pmux_csr,16,0,2020-08-26 19:58:21+00:00,[],https://api.github.com/licenses/mit
408,https://github.com/merledu/atomRVCORE.git,2020-09-21 11:25:43+00:00,This core is based on RV32I  is designed in SystemVerilog it is single cycle core,0,merledu/atomRVCORE,297318158,SystemVerilog,atomRVCORE,432,0,2021-01-12 14:41:12+00:00,[],None
409,https://github.com/octaplexsys/common_hdl_blocks.git,2020-09-21 21:20:42+00:00,,0,octaplexsys/common_hdl_blocks,297463970,,common_hdl_blocks,5,0,2022-04-18 14:34:54+00:00,[],https://api.github.com/licenses/apache-2.0
410,https://github.com/Robert-M-Hughes/MIPs-Processor.git,2020-09-30 23:21:34+00:00,This is a working MIPs Processor written in SystemVerilog that includes a cache.,0,Robert-M-Hughes/MIPs-Processor,300087164,SystemVerilog,MIPs-Processor,380,0,2020-09-30 23:31:25+00:00,[],None
411,https://github.com/Keerthivasan005/Digital-Stopwatch.git,2020-08-05 19:57:57+00:00,Stopwatch implemented on FPGA Board using Verilog programming,0,Keerthivasan005/Digital-Stopwatch,285391148,SystemVerilog,Digital-Stopwatch,96,0,2020-08-25 19:04:56+00:00,[],None
412,https://github.com/Racso08/Decodification_ARM.git,2020-07-27 03:59:34+00:00,"Este proyecto final deberá solucionar el siguiente problema, utilizando un procesador ARMv4, con programación propia de cada grupo. El sistema deberá contar con una memoria ROM en la que se precargar´an hasta 3 mensajes diferentes (uno a la vez). Los mensajes están codificados siguiendo los algoritmos que se describen más adelante. La funci´on del procesador ser´a, al presionar un botón de inicio (en simulaci´on), leer caracter a caracter la memoria, identificar el tipo de algoritmo utilizado para encodificar y realizar el proceso de decodificación, hasta detectar el fin del mensaje, denotado por un carácter 0xFF. Cada carácter decodificado deber´a ser escrito de vuelta en una memoria RAM. A finalizar el proceso de lectura de mensaje, identificación y decodificación, la simulaci´on deber´a escribir el mensaje decodificado en un archivo de texto, mismo que servir´a como m´etodo de validación del funcionamiento del sistema.",0,Racso08/Decodification_ARM,282789769,SystemVerilog,Decodification_ARM,6696,0,2021-06-09 21:53:40+00:00,[],None
413,https://github.com/ZChesterzz/yaoyaole.git,2020-07-26 14:33:19+00:00,,0,ZChesterzz/yaoyaole,282667652,SystemVerilog,yaoyaole,133,0,2020-08-04 11:47:20+00:00,[],None
414,https://github.com/acordobav/ARMv4-MessageDecoder.git,2020-07-10 00:12:16+00:00,Proyecto Final - Taller de Diseño Digital,0,acordobav/ARMv4-MessageDecoder,278497963,SystemVerilog,ARMv4-MessageDecoder,63,0,2021-05-18 05:42:37+00:00,[],None
415,https://github.com/tkrasnoperov/autocorrelaion_autotune_hardware.git,2020-07-16 22:43:22+00:00,,0,tkrasnoperov/autocorrelaion_autotune_hardware,280273791,SystemVerilog,autocorrelaion_autotune_hardware,16154,0,2020-07-28 07:49:20+00:00,[],None
416,https://github.com/SillyRango/FPGA-ESP32-AWS-loT.git,2020-07-27 08:35:30+00:00,null,0,SillyRango/FPGA-ESP32-AWS-loT,282839949,SystemVerilog,FPGA-ESP32-AWS-loT,1090,0,2020-08-02 07:29:32+00:00,[],None
417,https://github.com/andrire/RNNASIP-riscvcore.git,2020-10-21 17:41:44+00:00,,1,andrire/RNNASIP-riscvcore,306102663,SystemVerilog,RNNASIP-riscvcore,2562,0,2020-10-21 20:10:11+00:00,[],
418,https://github.com/regerj/ECE-272-Group-Project.git,2020-09-24 23:19:52+00:00,Digital Logic Design Final II,0,regerj/ECE-272-Group-Project,298417116,SystemVerilog,ECE-272-Group-Project,5570,0,2020-09-24 23:20:04+00:00,[],None
419,https://github.com/RadwanAtme/multi32x32--UniverstiryHomework.git,2020-10-15 11:03:12+00:00,,0,RadwanAtme/multi32x32--UniverstiryHomework,304298418,SystemVerilog,multi32x32--UniverstiryHomework,859,0,2020-10-15 11:22:30+00:00,[],None
420,https://github.com/brunoflores/hdl-counter.git,2020-10-25 12:31:41+00:00,Simple counter to play with the clocks and I/O of the Cmod A7-35T.,0,brunoflores/hdl-counter,307094570,SystemVerilog,hdl-counter,70,0,2020-10-27 14:13:09+00:00,[],https://api.github.com/licenses/apache-2.0
421,https://github.com/mspaur/veripool.git,2020-10-26 05:06:34+00:00,For Verilog Automatics,0,mspaur/veripool,307266708,SystemVerilog,veripool,1280,0,2020-10-26 05:09:55+00:00,[],https://api.github.com/licenses/gpl-3.0
422,https://github.com/storfang/VDIC.git,2020-10-12 13:56:00+00:00,Verification of digital integrated circuits,0,storfang/VDIC,303408534,SystemVerilog,VDIC,1483,0,2020-10-26 18:34:01+00:00,[],None
423,https://github.com/AaronSolera/ASIVP.git,2020-10-29 17:08:23+00:00,,0,AaronSolera/ASIVP,308397006,SystemVerilog,ASIVP,3006,0,2020-11-26 01:56:37+00:00,[],None
424,https://github.com/rureverek/M4.git,2020-11-06 20:01:06+00:00,N bit multiplier in System Verilog,0,rureverek/M4,310694177,SystemVerilog,M4,12,0,2024-02-21 00:07:53+00:00,[],None
425,https://github.com/mtahna/hdl_apb3axi4l.git,2020-07-23 10:15:05+00:00,,0,mtahna/hdl_apb3axi4l,281918683,SystemVerilog,hdl_apb3axi4l,75,0,2020-07-23 10:19:26+00:00,[],None
426,https://github.com/rooty19/sdram_test.git,2020-07-25 11:07:54+00:00,"A simple controller for SDRAM on DE2-115 (clk=50MHz), No bank changing or burst transfer mode",0,rooty19/sdram_test,282427170,SystemVerilog,sdram_test,264,0,2020-07-25 11:20:16+00:00,[],None
427,https://github.com/Besttryer/Sequence-detector-based-on-FPGA.git,2020-08-01 01:22:14+00:00,Sequence detector based on FPGA,0,Besttryer/Sequence-detector-based-on-FPGA,284162056,SystemVerilog,Sequence-detector-based-on-FPGA,2411,0,2020-08-01 02:45:25+00:00,[],None
428,https://github.com/taylor-bsg/dragonphy2.git,2020-08-15 16:31:54+00:00,Temporary copy of DragonPHY,3,taylor-bsg/dragonphy2,287784362,,dragonphy2,6382,0,2021-10-29 00:17:45+00:00,[],https://api.github.com/licenses/apache-2.0
429,https://github.com/theSergeyGusev/sha256.git,2020-08-06 07:54:22+00:00,,0,theSergeyGusev/sha256,285509176,SystemVerilog,sha256,7,0,2020-08-21 09:54:57+00:00,[],https://api.github.com/licenses/mit
430,https://github.com/Cra2yPierr0t/ENC28J60.git,2020-08-04 23:23:23+00:00,ENC28J60 FPGAドライバ,0,Cra2yPierr0t/ENC28J60,285123853,SystemVerilog,ENC28J60,8,0,2020-08-07 05:41:01+00:00,[],None
431,https://github.com/darwinjpr/riscv-core.git,2020-06-30 01:44:31+00:00,Desarrollo de un microprocesador riscvi32 utilizando vivado,0,darwinjpr/riscv-core,275968408,SystemVerilog,riscv-core,85,0,2020-08-07 23:38:44+00:00,[],None
432,https://github.com/bansil-vaghasiya/UVM_Verification_of_Averaging_unit.git,2020-09-21 01:55:12+00:00,UVM Verification environment to test the Averaging unit. ,0,bansil-vaghasiya/UVM_Verification_of_Averaging_unit,297202243,SystemVerilog,UVM_Verification_of_Averaging_unit,362,0,2020-09-21 01:59:27+00:00,[],None
433,https://github.com/Lmbal/versuch1.git,2020-08-27 10:52:19+00:00,,0,Lmbal/versuch1,290750675,SystemVerilog,versuch1,5,0,2020-08-27 12:06:06+00:00,[],None
434,https://github.com/NoIdeaForNick/syntacore.git,2020-08-26 17:29:03+00:00,,0,NoIdeaForNick/syntacore,290561892,SystemVerilog,syntacore,367,0,2020-09-10 08:00:37+00:00,[],None
435,https://github.com/preetam-D/SPI-verification.git,2020-08-30 19:22:41+00:00,,0,preetam-D/SPI-verification,291536868,SystemVerilog,SPI-verification,36,0,2020-09-02 19:11:17+00:00,[],None
436,https://github.com/lq3141/uvm_edaplayground.git,2020-09-27 01:26:30+00:00,copy from edaplayground as a study reference,0,lq3141/uvm_edaplayground,298929109,SystemVerilog,uvm_edaplayground,6,0,2020-09-27 08:18:32+00:00,[],None
437,https://github.com/MartinMeng008/mipscpu.git,2020-08-22 20:55:44+00:00,,0,MartinMeng008/mipscpu,289565598,SystemVerilog,mipscpu,43,0,2020-09-14 01:18:15+00:00,[],None
438,https://github.com/atfienberg/mDOMPins.git,2020-06-30 20:24:12+00:00,mDOM pin validation,0,atfienberg/mDOMPins,276200954,SystemVerilog,mDOMPins,13513,0,2020-07-07 19:57:47+00:00,[],None
439,https://github.com/gishmaya/my-first-verification-environment.git,2020-07-14 22:24:01+00:00,,0,gishmaya/my-first-verification-environment,279705489,SystemVerilog,my-first-verification-environment,14,0,2020-07-15 10:00:34+00:00,[],None
440,https://github.com/roscibely/arithmetic-logic-unit.git,2020-08-21 18:40:08+00:00,A simple arithmetic logic unit (ALU) with System verilog ,0,roscibely/arithmetic-logic-unit,289340760,SystemVerilog,arithmetic-logic-unit,86,0,2020-08-26 20:44:56+00:00,"['alu', 'arithmetic', 'verilog', 'vhdl']",None
441,https://github.com/ceyinskye/UVM_CRC_Test.git,2020-07-16 03:12:21+00:00,,0,ceyinskye/UVM_CRC_Test,280040284,SystemVerilog,UVM_CRC_Test,4,0,2020-07-16 03:13:07+00:00,[],None
442,https://github.com/e60369/Verilog_MCU.git,2020-07-11 01:43:08+00:00,,0,e60369/Verilog_MCU,278767213,SystemVerilog,Verilog_MCU,3,0,2020-07-11 13:58:57+00:00,[],None
443,https://github.com/irwinfrimpong/FPGA-Stopwatch.git,2020-07-19 14:23:08+00:00,Designed and implemented a stopwatch that will display the elapsed time on a set of seven-segment displays on a Nexys4 FPGA board using System Verilog in Xilinx Vivado,0,irwinfrimpong/FPGA-Stopwatch,280881545,SystemVerilog,FPGA-Stopwatch,6,0,2020-07-19 14:23:16+00:00,[],None
444,https://github.com/PreranaB-dev/axi.git,2020-07-13 11:26:59+00:00,Implementation of AXI protocol,1,PreranaB-dev/axi,279283388,SystemVerilog,axi,477,0,2020-07-29 13:16:06+00:00,[],None
445,https://github.com/jparth1593/System_Verilog.git,2020-10-05 14:33:31+00:00,SV code practice,0,jparth1593/System_Verilog,301437977,SystemVerilog,System_Verilog,3,0,2020-10-05 14:47:59+00:00,[],None
446,https://github.com/kacperoooni/VDIC.git,2020-10-20 14:45:02+00:00,VDIC2020 AGH,0,kacperoooni/VDIC,305739836,SystemVerilog,VDIC,32575,0,2022-10-09 09:49:48+00:00,[],None
447,https://github.com/gracenw/arch_and_sys.git,2020-11-08 02:43:08+00:00,"labs, fall 2020",0,gracenw/arch_and_sys,310972131,SystemVerilog,arch_and_sys,6851,0,2023-10-17 14:26:45+00:00,[],None
448,https://github.com/zzhang681/hw_perm.git,2020-10-29 20:25:27+00:00,111,0,zzhang681/hw_perm,308441556,SystemVerilog,hw_perm,72,0,2020-11-02 06:04:36+00:00,[],None
449,https://github.com/llfl/valid_ready_abc.git,2020-11-09 09:34:14+00:00,,0,llfl/valid_ready_abc,311288134,SystemVerilog,valid_ready_abc,5,0,2020-12-24 11:17:29+00:00,[],None
450,https://github.com/sebinsphilip/riscv_nvp.git,2020-10-25 10:25:51+00:00,Non volatile processor experimentation's on RISCV,0,sebinsphilip/riscv_nvp,307073638,SystemVerilog,riscv_nvp,1123,0,2020-10-26 16:09:52+00:00,[],None
451,https://github.com/jc-del/aleatorios.git,2020-10-23 19:52:36+00:00,,0,jc-del/aleatorios,306733795,SystemVerilog,aleatorios,4,0,2020-10-23 19:57:46+00:00,"['hacktoberfest', 'hacktoberfest2020']",None
452,https://github.com/OriSteinberg/Cache_Level_Zero.git,2020-10-25 12:53:38+00:00,"A new level of Cache in low order which offers a possible solution for the memory bottleneck. It includes theories, implementation, and results.",0,OriSteinberg/Cache_Level_Zero,307098567,SystemVerilog,Cache_Level_Zero,3701,0,2020-11-04 11:34:51+00:00,[],None
453,https://github.com/risapav/hdmi_3.git,2020-10-30 15:31:31+00:00,AC608 FPGA HDMI project,0,risapav/hdmi_3,308671222,SystemVerilog,hdmi_3,15559,0,2020-11-08 18:15:55+00:00,[],https://api.github.com/licenses/mit
454,https://github.com/RKishmar/stu.git,2020-10-30 12:24:12+00:00,,0,RKishmar/stu,308623234,SystemVerilog,stu,21,0,2020-11-30 19:55:56+00:00,[],None
455,https://github.com/kagg123/Character-Sudoku.git,2020-11-11 11:19:02+00:00,,0,kagg123/Character-Sudoku,311948311,SystemVerilog,Character-Sudoku,478,0,2020-11-11 11:38:35+00:00,[],None
456,https://github.com/PacoReinaCampo/gnuhurd.git,2020-10-06 11:44:33+00:00,Operating System for RTOS,1,PacoReinaCampo/gnuhurd,301708027,SystemVerilog,gnuhurd,27575,0,2023-02-02 16:46:29+00:00,[],https://api.github.com/licenses/mit
457,https://github.com/k0pterr/-fpga-lib.git,2020-08-12 07:16:10+00:00,,0,k0pterr/-fpga-lib,286944394,SystemVerilog,-fpga-lib,62,0,2020-08-12 07:16:29+00:00,[],None
458,https://github.com/melt-umn/melt-artifacts.git,2020-09-13 16:03:48+00:00,Files and scripts for building software artifacts,1,melt-umn/melt-artifacts,295186855,SystemVerilog,melt-artifacts,1864,0,2023-09-20 22:04:26+00:00,[],None
459,https://github.com/qqwilliamliqq/Self_Design_Processor_and_Compiler.git,2020-09-13 22:34:07+00:00,,0,qqwilliamliqq/Self_Design_Processor_and_Compiler,295249509,SystemVerilog,Self_Design_Processor_and_Compiler,28,0,2020-09-13 22:47:38+00:00,[],None
460,https://github.com/simottei/test.git,2020-09-05 20:41:22+00:00,,0,simottei/test,293151077,SystemVerilog,test,6,0,2020-09-09 20:49:25+00:00,[],None
461,https://github.com/shantonudas/Verilog-Codes.git,2020-09-23 01:22:02+00:00,,0,shantonudas/Verilog-Codes,297816695,SystemVerilog,Verilog-Codes,9,0,2020-10-04 08:54:31+00:00,[],None
462,https://github.com/recogni/axi2apb.git,2020-09-29 14:56:33+00:00,pulp based axi2apb adapter,0,recogni/axi2apb,299650488,SystemVerilog,axi2apb,11,0,2021-01-12 20:46:13+00:00,[],None
463,https://github.com/chroco/ece508hw2.git,2020-10-14 22:45:03+00:00,,0,chroco/ece508hw2,304152842,SystemVerilog,ece508hw2,9,0,2020-10-21 16:39:17+00:00,[],None
464,https://github.com/VSHEV92/Simple_Error_Correction_Channel.git,2020-08-21 16:16:57+00:00,Простой канал с блочным помехоустойчивым кодированием и перемежением,0,VSHEV92/Simple_Error_Correction_Channel,289313322,SystemVerilog,Simple_Error_Correction_Channel,214,0,2020-08-31 16:55:50+00:00,[],None
465,https://github.com/keyonhome/MCDT_Verification.git,2020-08-28 10:35:00+00:00,,0,keyonhome/MCDT_Verification,291019594,SystemVerilog,MCDT_Verification,15,0,2020-08-28 10:46:08+00:00,[],None
466,https://github.com/filipksiezyc/uec2_projekt.git,2020-08-16 18:33:28+00:00,PROJEKT TETRIS,1,filipksiezyc/uec2_projekt,288002524,SystemVerilog,uec2_projekt,79748,0,2020-09-19 16:53:10+00:00,[],None
467,https://github.com/merledu/diamond-core-sv.git,2020-09-21 09:12:40+00:00,,0,merledu/diamond-core-sv,297287592,SystemVerilog,diamond-core-sv,97,0,2020-11-21 09:54:51+00:00,[],None
468,https://github.com/Magicwrath/FuncVer.git,2020-09-18 15:07:05+00:00,System Verilog codes for CHT module verification,0,Magicwrath/FuncVer,296654734,SystemVerilog,FuncVer,40,0,2020-10-13 19:28:27+00:00,[],None
469,https://github.com/HarryPretel/EBike_Controller.git,2020-09-21 21:06:19+00:00,,0,HarryPretel/EBike_Controller,297461288,SystemVerilog,EBike_Controller,1972,0,2020-10-21 06:56:16+00:00,[],None
470,https://github.com/cetola/quattro-ibex.git,2020-10-24 16:03:41+00:00,Emulating the Ibex core on a Veloce Quattro ,2,cetola/quattro-ibex,306920020,SystemVerilog,quattro-ibex,331,0,2020-12-10 05:51:27+00:00,[],https://api.github.com/licenses/apache-2.0
471,https://github.com/kyeb/overcooked-fpga.git,2020-11-09 06:02:29+00:00,Overcooked: Food-programmable Gate Array,0,kyeb/overcooked-fpga,311238970,SystemVerilog,overcooked-fpga,302,0,2020-12-08 22:59:04+00:00,[],None
472,https://github.com/miyo/ppla.git,2020-11-03 12:45:59+00:00,,0,miyo/ppla,309683998,SystemVerilog,ppla,428,0,2020-11-22 10:22:40+00:00,[],None
473,https://github.com/Heppokoyuki/simple-rv32.git,2020-11-01 11:14:29+00:00,,0,Heppokoyuki/simple-rv32,309078547,SystemVerilog,simple-rv32,3,0,2020-11-01 11:15:06+00:00,[],None
474,https://github.com/pramodinicvc/testgit.git,2020-10-27 09:08:14+00:00,This is a test,0,pramodinicvc/testgit,307642882,SystemVerilog,testgit,1,0,2021-02-17 12:22:16+00:00,[],None
475,https://github.com/cougarEngineer/fpgaVGATest.git,2020-10-27 11:49:09+00:00,"Using a Basys-3 board and Xilinx Vivado, created a dynamic test pattern for use on VGA screens. See https://youtu.be/awykPxzEj1g",0,cougarEngineer/fpgaVGATest,307682771,SystemVerilog,fpgaVGATest,93,0,2020-10-27 11:50:29+00:00,[],None
476,https://github.com/PaschalisAngaridis/Simon_Says_Game.git,2020-10-19 12:39:49+00:00,,0,PaschalisAngaridis/Simon_Says_Game,305379529,SystemVerilog,Simon_Says_Game,6,0,2020-10-19 14:38:10+00:00,[],None
477,https://github.com/sqaureshape/uvm.git,2020-10-19 07:30:53+00:00,UVM trails ,0,sqaureshape/uvm,305299330,SystemVerilog,uvm,50,0,2020-10-29 12:46:22+00:00,[],None
478,https://github.com/PRBO-BR/processador-arm.git,2020-10-24 20:11:06+00:00,Desenvolvimento de um modelo de processador arm single cycle,0,PRBO-BR/processador-arm,306963284,SystemVerilog,processador-arm,1889,0,2020-10-29 12:06:22+00:00,[],None
479,https://github.com/Robert-M-Hughes/Digital-Design.git,2020-10-06 17:27:31+00:00,This contains the Digital Design Projects completed at UOP,0,Robert-M-Hughes/Digital-Design,301804156,SystemVerilog,Digital-Design,2866,0,2020-10-06 17:38:55+00:00,[],None
480,https://github.com/PaschalisAngaridis/Transfer_Data_From_Keyboard.git,2020-10-18 12:35:16+00:00,,0,PaschalisAngaridis/Transfer_Data_From_Keyboard,305097802,SystemVerilog,Transfer_Data_From_Keyboard,6,0,2020-10-19 12:48:23+00:00,[],None
481,https://github.com/danielgaio/coffee_machine.git,2020-10-19 18:15:05+00:00,Maquina de estados de uma maquina de café,0,danielgaio/coffee_machine,305474514,SystemVerilog,coffee_machine,15020,0,2020-11-02 22:51:54+00:00,[],None
482,https://github.com/Sunodh-005/gsk-in-waveforms.git,2020-07-25 12:29:27+00:00,using delays i will generate clock which can display my name ,0,Sunodh-005/gsk-in-waveforms,282439685,SystemVerilog,gsk-in-waveforms,3,0,2021-03-03 12:38:42+00:00,[],None
483,https://github.com/veereshk619/spi_check.git,2020-07-23 16:29:47+00:00,,0,veereshk619/spi_check,282002692,SystemVerilog,spi_check,12152,0,2020-07-23 16:34:30+00:00,[],https://api.github.com/licenses/apache-2.0
484,https://github.com/JiayiA/CSE140L-Labs.git,2020-06-30 18:01:18+00:00,Verilog,0,JiayiA/CSE140L-Labs,276172967,SystemVerilog,CSE140L-Labs,7586,0,2020-06-30 18:11:31+00:00,[],None
485,https://github.com/rmital589/Verification-of-SSP-UART.git,2020-07-03 05:28:03+00:00,,0,rmital589/Verification-of-SSP-UART,276815226,SystemVerilog,Verification-of-SSP-UART,7001,0,2020-07-03 05:35:57+00:00,[],None
486,https://github.com/Jiawei888/Matrix-calculation-based-on-picoMIPS.git,2020-07-08 10:50:02+00:00,"This project uses ModelSim and Quartus II software and is based on the Altera Cyclone V SoC 5CSEMA5F31C6 FPGA development board. By customizing processor operation instructions and building processor modules such as PC, register, decoder, ALU, etc., to implement a specified affine transformation algorithm that uses a toggle switch as the input N-bit of matrix binary values. ",0,Jiawei888/Matrix-calculation-based-on-picoMIPS,278063673,SystemVerilog,Matrix-calculation-based-on-picoMIPS,18047,0,2020-07-09 00:06:45+00:00,[],None
487,https://github.com/micky-bank/rtl_design.git,2020-08-02 11:38:53+00:00,Open source RTL codes.,0,micky-bank/rtl_design,284449596,SystemVerilog,rtl_design,10,0,2020-08-23 13:09:06+00:00,[],None
488,https://github.com/bakerjm24450/EE238.git,2020-08-16 19:41:31+00:00,VS Code workspace with necessary tools for EE 238 Digital Systems Design at VMI,0,bakerjm24450/EE238,288012565,SystemVerilog,EE238,33,0,2023-12-30 17:20:43+00:00,[],None
489,https://github.com/qaztronic/AXI4_LIB.git,2020-07-03 20:30:56+00:00,,0,qaztronic/AXI4_LIB,276982461,SystemVerilog,AXI4_LIB,75,0,2023-07-16 22:54:58+00:00,[],None
490,https://github.com/RiShy18/SHA-processor.git,2020-07-04 00:00:52+00:00,Descripcion en proceso,0,RiShy18/SHA-processor,277007463,SystemVerilog,SHA-processor,599,0,2020-07-16 05:52:29+00:00,[],None
491,https://github.com/Radiophantom/Syntacore.git,2020-07-14 12:31:37+00:00,,0,Radiophantom/Syntacore,279579659,SystemVerilog,Syntacore,72,0,2020-07-14 12:35:42+00:00,[],None
492,https://github.com/verilogtools/minitb.git,2020-07-11 09:24:31+00:00,An example of a minimal UVM testbench for educational purposes,0,verilogtools/minitb,278829315,SystemVerilog,minitb,18,0,2020-07-19 02:21:21+00:00,[],https://api.github.com/licenses/apache-2.0
493,https://github.com/MouseHappy123/Ariane-issue_read_operands.git,2020-07-18 15:23:32+00:00,issue_read_operands in Issue Stage of Ariane,1,MouseHappy123/Ariane-issue_read_operands,280683366,SystemVerilog,Ariane-issue_read_operands,81,0,2020-09-10 06:05:00+00:00,[],None
494,https://github.com/emmajingsmith/ece581_hw.git,2020-07-09 02:29:36+00:00,,0,emmajingsmith/ece581_hw,278242868,SystemVerilog,ece581_hw,1,0,2020-07-09 02:32:01+00:00,[],None
495,https://github.com/cNpin/blueteeth_car.git,2020-07-26 12:56:49+00:00,blueteeth_car,0,cNpin/blueteeth_car,282650130,SystemVerilog,blueteeth_car,16070,0,2020-08-01 08:24:23+00:00,[],None
496,https://github.com/visali85/uart_controller.git,2020-08-03 16:36:17+00:00,,0,visali85/uart_controller,284752475,SystemVerilog,uart_controller,19,0,2020-08-03 16:38:55+00:00,[],None
497,https://github.com/Panda-Cores/caches.git,2020-08-08 16:34:29+00:00,"simple WB cache, WorkInProgress",0,Panda-Cores/caches,286080114,SystemVerilog,caches,9,0,2020-08-18 08:37:20+00:00,[],None
498,https://github.com/Keerthivasan005/MIPS-32-Bit-Processor.git,2020-08-10 19:23:33+00:00,,0,Keerthivasan005/MIPS-32-Bit-Processor,286560793,SystemVerilog,MIPS-32-Bit-Processor,13,0,2020-08-10 19:28:20+00:00,[],None
499,https://github.com/wolve265/vdic.git,2020-10-20 15:06:06+00:00,Verification of Digital Integrated Circuits,0,wolve265/vdic,305746089,SystemVerilog,vdic,1895,0,2021-01-25 17:30:54+00:00,[],None
500,https://github.com/Dimonij/A5_task.git,2020-10-13 20:21:46+00:00,find and fix left one and right one ,0,Dimonij/A5_task,303819916,SystemVerilog,A5_task,2,0,2020-10-13 20:25:04+00:00,[],None
501,https://github.com/yasho2249/alu_verification_env.git,2020-10-28 20:37:33+00:00,,0,yasho2249/alu_verification_env,308135141,SystemVerilog,alu_verification_env,4,0,2020-10-28 20:42:31+00:00,[],None
502,https://github.com/bfatehi/MipsCpuAndPongGame.git,2020-10-25 21:25:36+00:00,a mips cpu schematic completed in system verilog and a pong game written in mips assembly language,0,bfatehi/MipsCpuAndPongGame,307195701,SystemVerilog,MipsCpuAndPongGame,23273,0,2020-10-25 21:54:15+00:00,[],None
503,https://github.com/Atif-786/Full-substractor.git,2020-10-27 06:34:04+00:00,,0,Atif-786/Full-substractor,307608055,SystemVerilog,Full-substractor,1,0,2020-10-27 06:36:21+00:00,[],None
504,https://github.com/alex9612/Ambiente-de-Pruebas-FIFO.git,2020-10-23 04:34:41+00:00,En el presente repositorio se encontrará la estructura completa de un ambiente de prueba para la verificación del diseño VLSI de un sistema FIFO.,0,alex9612/Ambiente-de-Pruebas-FIFO,306529945,SystemVerilog,Ambiente-de-Pruebas-FIFO,1,0,2020-10-23 18:28:15+00:00,[],None
505,https://github.com/RaneemAlaa/uart2bus.git,2020-10-26 16:57:15+00:00,,0,RaneemAlaa/uart2bus,307443856,SystemVerilog,uart2bus,2,0,2020-10-26 23:37:11+00:00,[],None
506,https://github.com/paper1235/ENEE459D.git,2020-10-09 14:23:15+00:00,This is a system that has a processor interfacing with memory and RTC using the APB interface.,0,paper1235/ENEE459D,302663830,SystemVerilog,ENEE459D,53,0,2021-03-09 06:24:29+00:00,[],None
507,https://github.com/ArquiII-2021-S1/Proyecto1.git,2020-11-03 21:43:17+00:00,,0,ArquiII-2021-S1/Proyecto1,309814264,SystemVerilog,Proyecto1,3588,0,2020-11-17 23:25:31+00:00,[],None
508,https://github.com/d-cen/ASIC-Design.git,2020-09-03 08:02:18+00:00,ASIC Design Laboratory,0,d-cen/ASIC-Design,292505857,SystemVerilog,ASIC-Design,4423,0,2022-03-17 03:45:56+00:00,[],None
509,https://github.com/kitune-san/KF8288.git,2020-08-30 14:02:10+00:00,8288-like bus controller written in SystemVerilog,0,kitune-san/KF8288,291481499,SystemVerilog,KF8288,47,0,2022-09-23 11:37:20+00:00,"['8288', 'bus-controller', 'systemverilog', 'fpga', 'pc']",https://api.github.com/licenses/mit
510,https://github.com/fmdproject/ledcontroller.git,2020-09-10 19:55:27+00:00,led controlling using fpga,0,fmdproject/ledcontroller,294509155,SystemVerilog,ledcontroller,5,0,2020-09-12 09:33:33+00:00,[],None
511,https://github.com/xavierperez21/digital_circuits_on_verilog.git,2020-10-04 01:55:44+00:00,"Development of a 4 Bits Adder with Carry Lookahead, a 4 bit up-down counter, a 4 bits Shift Register, and other projects using Verilog. These projects were developed thanks to the course ""Introducción al desarrollo de hardware con Verilog"" by GalileoX in edX plattform. ",0,xavierperez21/digital_circuits_on_verilog,301020531,SystemVerilog,digital_circuits_on_verilog,12,0,2020-10-04 02:06:52+00:00,[],None
512,https://github.com/Mooyeonkim628/ECE337.git,2020-08-27 18:34:53+00:00,,0,Mooyeonkim628/ECE337,290853306,SystemVerilog,ECE337,23824,0,2022-08-16 05:48:52+00:00,[],None
513,https://github.com/sethsawant/de10boy.git,2020-11-11 16:07:44+00:00,DE10-Lite FPGA-based emulation of the Nintendo Gameboy,1,sethsawant/de10boy,312021506,SystemVerilog,de10boy,25608,0,2021-01-14 20:32:20+00:00,[],None
514,https://github.com/Dimonij/A2_task.git,2020-11-08 13:06:49+00:00,serialyser with data-width modifier ,0,Dimonij/A2_task,311064797,SystemVerilog,A2_task,3,0,2020-11-08 13:17:17+00:00,[],None
515,https://github.com/vsfol/hello_world.git,2020-09-07 11:17:18+00:00,this is the first hello world repository,0,vsfol/hello_world,293506385,SystemVerilog,hello_world,71,0,2020-09-17 13:48:25+00:00,[],
516,https://github.com/MohamedAli25/Ethernet-Switch-2x2-Verification-using-SystemVerilog.git,2020-09-24 17:55:46+00:00,,0,MohamedAli25/Ethernet-Switch-2x2-Verification-using-SystemVerilog,298354740,SystemVerilog,Ethernet-Switch-2x2-Verification-using-SystemVerilog,3,0,2020-09-24 17:58:15+00:00,[],None
517,https://github.com/nguyenquanicd/BasicSynEnv.git,2020-10-04 03:10:04+00:00,This is the basic synthesis environtment,0,nguyenquanicd/BasicSynEnv,301029728,SystemVerilog,BasicSynEnv,61481,0,2020-11-01 03:34:19+00:00,[],None
518,https://github.com/mtahna/hdl_amba_bfm.git,2020-07-23 10:17:33+00:00,,0,mtahna/hdl_amba_bfm,281919178,SystemVerilog,hdl_amba_bfm,6,0,2020-07-23 10:18:47+00:00,[],None
519,https://github.com/irwinfrimpong/Health-Monitor.git,2020-07-19 14:09:56+00:00,"Health Monitor implementing a pulse sensor PCB and a reaction timer using a Nexys4 FPGA board that is able to analyze, and display a reading of user’s pulse; this designed using a set of combinational and sequential circuit building blocks developed with System Verilog in Xilinx Vivado ",0,irwinfrimpong/Health-Monitor,280879003,SystemVerilog,Health-Monitor,1025,0,2020-07-19 14:10:05+00:00,[],None
520,https://github.com/swift-link/RIFL.git,2020-09-18 04:06:03+00:00,,2,swift-link/RIFL,296509969,SystemVerilog,RIFL,202,0,2021-04-30 22:43:33+00:00,[],
521,https://github.com/kernsimon98/SystemVerilog_FlappyBird.git,2020-09-22 22:45:32+00:00,,0,kernsimon98/SystemVerilog_FlappyBird,297790272,SystemVerilog,SystemVerilog_FlappyBird,20,0,2020-09-22 22:51:31+00:00,[],None
522,https://github.com/merledu/gold-core-sv.git,2020-09-21 09:12:25+00:00,,0,merledu/gold-core-sv,297287532,SystemVerilog,gold-core-sv,30,0,2020-10-19 18:53:22+00:00,[],None
523,https://github.com/ceschini/mips_verilog.git,2020-09-15 14:20:32+00:00,Mini processador MIPS em Verilog,0,ceschini/mips_verilog,295751812,SystemVerilog,mips_verilog,10,0,2023-01-21 12:25:16+00:00,[],None
524,https://github.com/maxkunes/verilog-uart.git,2020-08-05 03:57:26+00:00,,0,maxkunes/verilog-uart,285173807,SystemVerilog,verilog-uart,4,0,2020-08-05 03:58:51+00:00,[],https://api.github.com/licenses/mit
525,https://github.com/IoriOikawa/realTOY.git,2020-08-10 02:56:32+00:00,Hardware Implementation for the TOY computer from Princeton.,0,IoriOikawa/realTOY,286361692,SystemVerilog,realTOY,976,0,2020-11-08 21:15:50+00:00,[],None
526,https://github.com/Pchaves98/Verifacion-Test.git,2020-10-08 21:39:52+00:00,,0,Pchaves98/Verifacion-Test,302467842,SystemVerilog,Verifacion-Test,23,0,2020-11-10 21:33:01+00:00,[],None
527,https://github.com/calvinwiebe/dummy-bronn.git,2020-10-13 19:34:17+00:00,github copy of dummy-bronn,0,calvinwiebe/dummy-bronn,303809757,SystemVerilog,dummy-bronn,22,0,2021-09-22 16:04:34+00:00,[],None
528,https://github.com/RafaelLaya/Dynos_Adventure.git,2020-09-26 06:56:42+00:00,"Side-scrolling FPGA Game (VGA, Speakers, Keyboard)",0,RafaelLaya/Dynos_Adventure,298756469,SystemVerilog,Dynos_Adventure,3751,0,2020-09-29 21:55:31+00:00,[],https://api.github.com/licenses/mit
529,https://github.com/AndresRQ27/ASIP.git,2020-10-23 01:31:29+00:00,,0,AndresRQ27/ASIP,306499497,SystemVerilog,ASIP,21732,0,2020-10-23 01:32:57+00:00,[],None
530,https://github.com/saurabh-ctrl/Verilog-FIFO.git,2020-07-16 07:18:03+00:00,,0,saurabh-ctrl/Verilog-FIFO,280082722,SystemVerilog,Verilog-FIFO,74,0,2020-07-24 12:10:41+00:00,[],None
531,https://github.com/natcz/digitalLogic.git,2020-07-17 13:43:03+00:00,digital logic course at usniversity during 2 semester,0,natcz/digitalLogic,280434529,SystemVerilog,digitalLogic,451,0,2020-07-17 13:44:54+00:00,[],None
532,https://github.com/OmerHemo/Lab1_project.git,2020-08-29 08:12:52+00:00,,0,OmerHemo/Lab1_project,291229766,SystemVerilog,Lab1_project,14559,0,2020-11-03 13:55:38+00:00,[],None
533,https://github.com/chukwuk/System-Verilog-RTL-design-for-temperature-averaging-system.git,2020-10-28 04:04:03+00:00,,0,chukwuk/System-Verilog-RTL-design-for-temperature-averaging-system,307902680,SystemVerilog,System-Verilog-RTL-design-for-temperature-averaging-system,11,0,2021-05-06 23:24:30+00:00,[],None
534,https://github.com/kevinzhang0216/luke_verify.git,2020-10-28 05:57:52+00:00,,0,kevinzhang0216/luke_verify,307920599,SystemVerilog,luke_verify,131380,0,2020-12-08 12:26:07+00:00,[],None
535,https://github.com/marlol94/Proyecto-1-Verificacion-Funcional-de-Circuitos-Integrados.git,2020-10-26 22:38:08+00:00,,0,marlol94/Proyecto-1-Verificacion-Funcional-de-Circuitos-Integrados,307522276,SystemVerilog,Proyecto-1-Verificacion-Funcional-de-Circuitos-Integrados,27,0,2020-11-02 06:39:58+00:00,[],None
536,https://github.com/eric710chen/ECE342_processor_design.git,2020-10-26 22:38:37+00:00,logic systems and processor design,0,eric710chen/ECE342_processor_design,307522354,SystemVerilog,ECE342_processor_design,34,0,2020-10-26 22:38:45+00:00,[],None
537,https://github.com/danielgaio/tanh.git,2020-07-22 14:06:07+00:00,Implementação da função tangente hiperbólica em verilog visando aplicabilidade em FPGAs,0,danielgaio/tanh,281694408,SystemVerilog,tanh,14807,0,2020-11-09 13:07:53+00:00,[],None
538,https://github.com/kfinch333/Microprocessor.git,2020-07-22 01:45:34+00:00,Microprocessor in SystemVerilog,0,kfinch333/Microprocessor,281546366,SystemVerilog,Microprocessor,6,0,2020-07-22 01:51:28+00:00,[],None
539,https://github.com/H-S-S-11/fpga-fm.git,2020-07-29 11:11:43+00:00,"Simple FM SDR implementation on an FPGA, targeting for the DE4 devboard",0,H-S-S-11/fpga-fm,283477415,SystemVerilog,fpga-fm,77,0,2021-01-23 00:46:58+00:00,[],https://api.github.com/licenses/gpl-3.0
540,https://github.com/kfinch333/finite_state_machine.git,2020-07-22 01:56:09+00:00,FSM in SystemVerilog,0,kfinch333/finite_state_machine,281548267,SystemVerilog,finite_state_machine,3,0,2020-07-22 01:57:19+00:00,[],None
541,https://github.com/hrishikeshpujari/N_queen_problem.git,2020-07-23 21:53:46+00:00,"The N_queen problem says that on a NxN board, no queens should be placed in such a way that they threaten each other. ",0,hrishikeshpujari/N_queen_problem,282063377,SystemVerilog,N_queen_problem,2,0,2020-07-23 21:56:07+00:00,[],None
542,https://github.com/AIWKJ/-AWS.git,2020-07-26 12:39:03+00:00,Description (optional),0,AIWKJ/-AWS,282647057,SystemVerilog,-AWS,1773,0,2020-08-02 11:06:11+00:00,[],None
543,https://github.com/AshishAttri/systemverilog.git,2020-07-02 07:41:58+00:00,SystemVerilog examples,0,AshishAttri/systemverilog,276581230,SystemVerilog,systemverilog,7,0,2020-07-06 06:46:27+00:00,[],None
544,https://github.com/saipra99/APB_Testbench.git,2020-07-16 08:27:28+00:00,,0,saipra99/APB_Testbench,280097682,SystemVerilog,APB_Testbench,46,0,2020-12-01 20:41:58+00:00,[],None
545,https://github.com/huskyandrabbit/E-Bike.git,2020-07-10 11:12:28+00:00,,0,huskyandrabbit/E-Bike,278613949,SystemVerilog,E-Bike,63,0,2020-07-10 11:16:22+00:00,[],None
546,https://github.com/Kimc17/PG1_arq.git,2020-07-16 05:49:16+00:00,,0,Kimc17/PG1_arq,280065850,SystemVerilog,PG1_arq,19014,0,2020-07-18 08:47:08+00:00,[],None
547,https://github.com/NirLalum/Multiplier.git,2020-07-08 18:52:28+00:00,an implementaion of 32x32 bit multiplier,0,NirLalum/Multiplier,278169969,SystemVerilog,Multiplier,6,0,2020-07-08 18:55:32+00:00,[],None
548,https://github.com/Roman-Polovtsev/my-first-git.git,2020-10-17 19:28:21+00:00,,0,Roman-Polovtsev/my-first-git,304953631,SystemVerilog,my-first-git,4,0,2020-10-17 20:36:05+00:00,[],None
549,https://github.com/MohcineBerni/M2_Proejct.git,2020-10-22 20:34:20+00:00,Optimisation of ARIANE CVA6 RISC-V,0,MohcineBerni/M2_Proejct,306452555,SystemVerilog,M2_Proejct,9005,0,2020-10-22 20:56:02+00:00,[],None
550,https://github.com/nvsces/test_solution.git,2020-09-13 17:10:10+00:00,,0,nvsces/test_solution,295198982,SystemVerilog,test_solution,2,0,2020-09-13 17:11:48+00:00,[],None
551,https://github.com/bitglitcher/VanilaCore.git,2020-09-03 12:11:38+00:00,RISC-V Implementation in System Verilog,0,bitglitcher/VanilaCore,292559907,SystemVerilog,VanilaCore,164683,0,2022-01-10 16:03:11+00:00,[],https://api.github.com/licenses/mit
552,https://github.com/mcraney2/VerilogE-Bike.git,2020-09-02 19:59:03+00:00,"All the components of an E-Bike designed in System Verilog/Verilog, then synthesized with Synopsys and ready to upload to an FPGA.",0,mcraney2/VerilogE-Bike,292382037,SystemVerilog,VerilogE-Bike,36,0,2020-09-02 20:11:31+00:00,[],None
553,https://github.com/Chlorophytus/fantastic-giggle.git,2020-09-19 19:00:47+00:00,VGA PPU + soft SoC stuff for FPGAs,0,Chlorophytus/fantastic-giggle,296933421,SystemVerilog,fantastic-giggle,242,0,2021-09-16 13:54:28+00:00,[],https://api.github.com/licenses/mit
554,https://github.com/qiweiii-git/qwi_base.git,2020-10-07 08:34:28+00:00,base codes of qwi project.,0,qiweiii-git/qwi_base,301974145,SystemVerilog,qwi_base,14,0,2020-10-08 14:41:14+00:00,[],None
555,https://github.com/hanyax/5_Stages_Pipeline_CPU.git,2020-09-24 19:42:38+00:00,5 Stages Pipeline ARM CPU System Verilog Implementation,0,hanyax/5_Stages_Pipeline_CPU,298379003,SystemVerilog,5_Stages_Pipeline_CPU,23,0,2021-03-22 03:02:25+00:00,[],None
556,https://github.com/qaztronic/tb_base.git,2020-09-05 17:10:19+00:00,,0,qaztronic/tb_base,293120136,SystemVerilog,tb_base,5,0,2020-09-07 23:53:03+00:00,[],None
557,https://github.com/mgomez12/3DVisualizer.git,2020-11-08 17:50:17+00:00,,0,mgomez12/3DVisualizer,311120784,SystemVerilog,3DVisualizer,189,0,2022-02-02 18:19:17+00:00,[],None
558,https://github.com/JoseIuri/Aurora-Apb_Example.git,2020-11-10 13:44:53+00:00,,0,JoseIuri/Aurora-Apb_Example,311671348,SystemVerilog,Aurora-Apb_Example,27,0,2024-02-16 20:45:02+00:00,[],https://api.github.com/licenses/mit
559,https://github.com/izzul210/arc4decryption.git,2020-07-26 00:56:47+00:00,Designed and built and ARC4 decryption with Key-Scheduling Algorithm (KSA) and pseudo-random generation algorithm,0,izzul210/arc4decryption,282550663,SystemVerilog,arc4decryption,44,0,2020-07-26 01:37:23+00:00,[],None
560,https://github.com/garlapatirahul/sv_constraints.git,2020-07-27 00:20:30+00:00,,0,garlapatirahul/sv_constraints,282756482,SystemVerilog,sv_constraints,2,0,2020-09-08 06:47:15+00:00,[],None
561,https://github.com/JassonRM/mixed-iir-filter.git,2020-07-17 14:25:47+00:00,,0,JassonRM/mixed-iir-filter,280444908,SystemVerilog,mixed-iir-filter,4284,0,2020-08-07 00:09:16+00:00,[],None
562,https://github.com/minjiexm/uvm_clam.git,2020-07-10 18:19:18+00:00,An UVM OOP based command line arguments Methodolgy Library,0,minjiexm/uvm_clam,278704197,SystemVerilog,uvm_clam,13,0,2020-07-24 01:42:17+00:00,[],None
563,https://github.com/tallenintegsys/ps2ctrlr.git,2020-08-23 19:45:49+00:00,host side keyboard controller for a PS/2 keyboard,0,tallenintegsys/ps2ctrlr,289755627,SystemVerilog,ps2ctrlr,17,0,2020-08-24 22:06:43+00:00,[],None
564,https://github.com/Yanivhass/FPGAbumpy.git,2020-08-25 12:14:21+00:00,FPGA project of the classic arcade game BUMPY. ,1,Yanivhass/FPGAbumpy,290206081,SystemVerilog,FPGAbumpy,40297,0,2020-09-17 07:31:28+00:00,[],None
565,https://github.com/surendharkodaikal/taxi-project.git,2020-07-02 18:02:53+00:00,,0,surendharkodaikal/taxi-project,276714152,SystemVerilog,taxi-project,662,0,2020-07-02 18:07:39+00:00,[],None
566,https://github.com/Radiophantom/Deserializer.git,2020-08-11 09:09:05+00:00,,0,Radiophantom/Deserializer,286697875,SystemVerilog,Deserializer,3,0,2020-08-11 10:38:23+00:00,[],None
567,https://github.com/choodi007/master.git,2020-09-04 12:10:03+00:00,,0,choodi007/master,292838711,SystemVerilog,master,1,0,2020-09-04 12:11:48+00:00,[],None
568,https://github.com/ranjan-yadav/SPI-Protocol.git,2020-10-09 17:11:43+00:00,,0,ranjan-yadav/SPI-Protocol,302706337,SystemVerilog,SPI-Protocol,257,0,2020-10-17 18:21:08+00:00,[],None
569,https://github.com/variemai/RV32IC.git,2020-10-25 18:40:53+00:00,,0,variemai/RV32IC,307167390,SystemVerilog,RV32IC,20981,0,2020-10-25 19:03:49+00:00,[],None
570,https://github.com/stardust-coder/vendingmachine.git,2020-10-27 01:53:24+00:00,3Aシステム実験,0,stardust-coder/vendingmachine,307556678,SystemVerilog,vendingmachine,1,0,2020-10-27 01:54:22+00:00,[],None
571,https://github.com/Dm1998/Panel_Display.git,2020-11-09 18:00:15+00:00,"In this project I designed an module that can synchronise and transfer our data from an fpga to a screen, through a vga cable. For the project an frequency of 60 Hz and resolution of 640x480 were selected. The project is fully implemented on System Verilog and includes the source file,testbench and an .qpf file for the quartus compilation.",0,Dm1998/Panel_Display,311422393,SystemVerilog,Panel_Display,4,0,2021-12-22 14:31:30+00:00,[],None
572,https://github.com/Ahalya2397/msd.git,2020-11-02 10:24:36+00:00,,0,Ahalya2397/msd,309334455,SystemVerilog,msd,0,0,2020-11-10 07:05:06+00:00,[],None
573,https://github.com/foxxy777/RAL_test.git,2020-10-29 12:14:30+00:00,,0,foxxy777/RAL_test,308317773,SystemVerilog,RAL_test,4715,0,2020-11-08 04:30:18+00:00,[],None
574,https://github.com/deveshkadambari2018/verilog.git,2020-10-29 19:35:40+00:00,This repository describes more about the type of codes I have generated using Verilog language.,0,deveshkadambari2018/verilog,308431017,SystemVerilog,verilog,3,0,2020-10-29 19:38:09+00:00,[],None
575,https://github.com/Alol2565/ComputerArchitecture_CA_5.git,2020-07-29 03:57:28+00:00,,0,Alol2565/ComputerArchitecture_CA_5,283393217,SystemVerilog,ComputerArchitecture_CA_5,100,0,2023-12-19 21:09:56+00:00,[],None
576,https://github.com/PacoReinaCampo/PU-RTOS.git,2020-09-20 23:30:44+00:00,Kernel for a Processing Unit,1,PacoReinaCampo/PU-RTOS,297182185,SystemVerilog,PU-RTOS,11465,0,2024-02-24 10:37:05+00:00,[],https://api.github.com/licenses/mit
577,https://github.com/trmckay/universal-otter-debugger.git,2020-08-11 01:32:15+00:00,Implementation of the RISC-V UART Debugger for Cal Poly's Otter,0,trmckay/universal-otter-debugger,286616487,SystemVerilog,universal-otter-debugger,2120,0,2020-12-20 17:01:30+00:00,[],https://api.github.com/licenses/gpl-3.0
578,https://github.com/kitune-san/KF8253.git,2020-07-28 14:30:07+00:00,8253-like programmable interval timer written in SystemVerilog,0,kitune-san/KF8253,283237119,SystemVerilog,KF8253,60,0,2021-10-02 07:25:26+00:00,"['8253', 'interval-timer', 'timer', 'systemverilog', 'fpga', 'pc']",https://api.github.com/licenses/mit
579,https://github.com/Haotian-wang-swjtu/yoyo.git,2020-07-26 10:03:55+00:00,Homework during summer vacation.,0,Haotian-wang-swjtu/yoyo,282622653,SystemVerilog,yoyo,15624,0,2020-08-02 06:48:55+00:00,[],None
580,https://github.com/ranzbak/aars_video_out.git,2020-07-27 19:14:26+00:00,Tests the output of upscaled video via the adv7511 HDMI transmitter IC.,0,ranzbak/aars_video_out,282992681,SystemVerilog,aars_video_out,40074,0,2020-07-27 19:15:21+00:00,[],None
581,https://github.com/ismetalp98/Vivado-Basys3-memory.git,2020-08-08 19:04:46+00:00,,0,ismetalp98/Vivado-Basys3-memory,286103484,SystemVerilog,Vivado-Basys3-memory,1073,0,2021-03-01 13:03:33+00:00,[],None
582,https://github.com/Galatis-Giuliano/TempConverterLab4.git,2020-09-20 04:01:25+00:00,,0,Galatis-Giuliano/TempConverterLab4,296998556,SystemVerilog,TempConverterLab4,9,0,2020-09-22 04:35:13+00:00,[],None
583,https://github.com/pieska/ItLCaLDwVerilog_computer.git,2020-09-17 19:22:11+00:00,Computer in SystemVerilog as described in https://www.youtube.com/watch?v=GMi18i0bFAk&list=PL643xA3Ie_Et2uM4xu1yFk-A5ZQQ8gQ5e&index=133,0,pieska/ItLCaLDwVerilog_computer,296421862,SystemVerilog,ItLCaLDwVerilog_computer,4085,0,2023-08-03 19:22:59+00:00,[],None
584,https://github.com/1varuna/SV-TB-Practice.git,2020-07-08 14:16:03+00:00,Development of modular SV TB from scratch (based on a Udemy course),0,1varuna/SV-TB-Practice,278108405,SystemVerilog,SV-TB-Practice,2872,0,2020-07-15 12:50:40+00:00,[],None
585,https://github.com/Jensenwww/andata.git,2020-07-01 04:48:31+00:00,,0,Jensenwww/andata,276279367,SystemVerilog,andata,2593,0,2022-07-14 02:28:42+00:00,[],
586,https://github.com/siwczak/ibex.git,2020-08-24 20:10:15+00:00,,0,siwczak/ibex,290029368,SystemVerilog,ibex,22690,0,2020-11-05 07:19:22+00:00,[],None
587,https://github.com/mihir23chauhan/verilog_Code.git,2020-08-23 06:41:13+00:00,,0,mihir23chauhan/verilog_Code,289631245,SystemVerilog,verilog_Code,1,0,2021-04-22 01:00:48+00:00,[],None
588,https://github.com/07151129/sharedmem_models.git,2020-08-23 14:18:10+00:00,,0,07151129/sharedmem_models,289700491,SystemVerilog,sharedmem_models,22,0,2020-08-31 16:31:12+00:00,[],None
589,https://github.com/Rookie-cprime/SV.git,2020-08-19 07:43:50+00:00,,0,Rookie-cprime/SV,288667037,SystemVerilog,SV,440,0,2020-10-29 09:25:00+00:00,[],None
590,https://github.com/regerj/ECE-272-Lab-6.git,2020-09-24 23:21:47+00:00,Digital Logic Design Lab 6,0,regerj/ECE-272-Lab-6,298417424,SystemVerilog,ECE-272-Lab-6,4945,0,2020-09-25 00:28:03+00:00,[],None
591,https://github.com/bonn/Shift-Register.git,2020-09-30 04:10:22+00:00,Shift Register Created for EE 4321 - Digital Design with System Verilog,0,bonn/Shift-Register,299806040,SystemVerilog,Shift-Register,2,0,2021-05-18 16:12:12+00:00,[],None
592,https://github.com/rosethepose/left_shift.git,2020-09-29 21:31:08+00:00,,0,rosethepose/left_shift,299742647,SystemVerilog,left_shift,8,0,2020-09-30 03:32:58+00:00,[],None
593,https://github.com/cpeng03d/GitTest.git,2020-09-16 20:43:27+00:00,test git,0,cpeng03d/GitTest,296143749,SystemVerilog,GitTest,34,0,2022-08-16 21:48:04+00:00,[],None
594,https://github.com/garlapatirahul/system_verilog_env_scb.git,2020-07-19 05:24:39+00:00,,0,garlapatirahul/system_verilog_env_scb,280797956,SystemVerilog,system_verilog_env_scb,1,0,2020-07-20 07:17:38+00:00,[],None
595,https://github.com/cainingw/VHDL.git,2020-09-05 23:02:17+00:00,,0,cainingw/VHDL,293167480,SystemVerilog,VHDL,4478,0,2020-09-05 23:55:53+00:00,[],None
596,https://github.com/rureverek/D2-Project.git,2020-09-06 14:15:55+00:00,Project was part of semester 1 assessment within Digital Systems Module.,0,rureverek/D2-Project,293291258,SystemVerilog,D2-Project,17726,0,2020-09-19 08:19:53+00:00,[],None
597,https://github.com/MaddieBurbage/lowrisc-extended.git,2020-07-24 20:43:48+00:00,The Bailey Research Group's extensions to lowRISC,1,MaddieBurbage/lowrisc-extended,282312707,SystemVerilog,lowrisc-extended,3330,0,2021-05-24 14:56:51+00:00,[],
598,https://github.com/e60369/Verliog_FSM.git,2020-07-04 16:18:44+00:00,,0,e60369/Verliog_FSM,277144928,SystemVerilog,Verliog_FSM,3,0,2020-07-11 14:05:56+00:00,[],None
599,https://github.com/asafarad/foosball-game-project.git,2020-08-19 13:10:09+00:00,,1,asafarad/foosball-game-project,288735187,SystemVerilog,foosball-game-project,44016,0,2020-08-19 13:28:01+00:00,[],None
600,https://github.com/soshim/core1.git,2020-08-28 12:22:22+00:00,,0,soshim/core1,291039820,SystemVerilog,core1,11,0,2020-08-29 13:53:18+00:00,[],None
601,https://github.com/zeeshan0309/serial_2s_complementer.git,2020-08-14 07:23:38+00:00,Behavioural model of a Serial 2's complementer,1,zeeshan0309/serial_2s_complementer,287470686,SystemVerilog,serial_2s_complementer,4,0,2020-08-21 15:51:17+00:00,[],None
602,https://github.com/prasannaHWDevelopment/HDMI2CSI.git,2020-10-10 00:31:06+00:00,4KHDMI to CSI2 MIPI,1,prasannaHWDevelopment/HDMI2CSI,302781397,SystemVerilog,HDMI2CSI,3,0,2020-10-10 00:42:24+00:00,[],None
603,https://github.com/Stellau/ColorDetector.git,2020-10-30 17:05:01+00:00,A color detector built with Terasic digital camera and DE1_SoC board. Program built with SystemVerilog.,0,Stellau/ColorDetector,308694243,SystemVerilog,ColorDetector,2155,0,2022-10-02 15:37:37+00:00,[],None
604,https://github.com/tangshi706/systemverilog-learning.git,2020-10-31 04:48:35+00:00,systemverilog learning and training,0,tangshi706/systemverilog-learning,308805700,SystemVerilog,systemverilog-learning,2,0,2020-10-31 04:57:30+00:00,[],https://api.github.com/licenses/unlicense
605,https://github.com/bzeeno/Serial-Comm-SoC.git,2020-10-31 20:43:17+00:00,"SoC using the Microblaze MCS designed for using different serial communication methods. The SoC contains a UART core, a SPI core, and an I2C core.",0,bzeeno/Serial-Comm-SoC,308968427,SystemVerilog,Serial-Comm-SoC,5650,0,2021-06-08 08:33:23+00:00,[],None
606,https://github.com/tallenintegsys/framebuffer.git,2020-07-23 17:12:35+00:00,A video frame buffer with VGA output,0,tallenintegsys/framebuffer,282011588,SystemVerilog,framebuffer,9221,0,2020-08-29 02:07:20+00:00,[],None
607,https://github.com/onurtoker/simple8bitCPU.git,2020-10-10 03:12:31+00:00,,0,onurtoker/simple8bitCPU,302804119,SystemVerilog,simple8bitCPU,232,0,2020-10-10 04:24:11+00:00,[],None
608,https://github.com/gloriafang123/ml_fpga.git,2020-11-03 20:23:27+00:00,,0,gloriafang123/ml_fpga,309798551,SystemVerilog,ml_fpga,3044,0,2020-12-11 16:52:57+00:00,[],None
609,https://github.com/Eeaeau/TFE4152-Digital-Camera-implementation.git,2020-11-07 13:14:14+00:00,Design project of digital camera solution.,0,Eeaeau/TFE4152-Digital-Camera-implementation,310848418,SystemVerilog,TFE4152-Digital-Camera-implementation,4477,0,2020-11-17 17:49:11+00:00,[],None
610,https://github.com/andrire/RNNASIP-pulpissimo.git,2020-10-21 17:28:21+00:00,,0,andrire/RNNASIP-pulpissimo,306099160,SystemVerilog,RNNASIP-pulpissimo,3196,0,2020-10-21 20:09:24+00:00,[],
611,https://github.com/aneeshp10/BCD-7Segment-Display.git,2020-10-20 13:36:00+00:00,,0,aneeshp10/BCD-7Segment-Display,305719305,SystemVerilog,BCD-7Segment-Display,3,0,2020-12-21 12:35:56+00:00,[],None
612,https://github.com/PacoReinaCampo/gnumach.git,2020-10-06 11:29:00+00:00,Kernel for RTOS,1,PacoReinaCampo/gnumach,301704280,SystemVerilog,gnumach,20594,0,2023-02-02 16:46:32+00:00,[],https://api.github.com/licenses/mit
613,https://github.com/motchy869/code-fractions.git,2020-07-18 08:19:09+00:00,code fractions for various works,0,motchy869/code-fractions,280613471,SystemVerilog,code-fractions,6341,0,2024-04-12 17:05:11+00:00,[],https://api.github.com/licenses/mit
614,https://github.com/arkinshah/uiuc_ece_projects.git,2020-07-10 18:42:13+00:00,,1,arkinshah/uiuc_ece_projects,278708583,SystemVerilog,uiuc_ece_projects,44294,0,2020-07-10 20:02:11+00:00,[],None
615,https://github.com/rmital589/UVM-for-ALU.git,2020-07-03 05:26:20+00:00,,0,rmital589/UVM-for-ALU,276815012,SystemVerilog,UVM-for-ALU,6,0,2020-07-03 05:26:54+00:00,[],None
616,https://github.com/tsubasa123/System-Verilog-UVM.git,2020-07-07 15:14:22+00:00,,0,tsubasa123/System-Verilog-UVM,277850833,SystemVerilog,System-Verilog-UVM,1522,0,2020-08-01 17:21:26+00:00,[],None
617,https://github.com/zeeshan0309/alu_8-bit.git,2020-08-22 14:59:38+00:00,"8-bit wide ALU, with asynchronous reset",0,zeeshan0309/alu_8-bit,289509554,SystemVerilog,alu_8-bit,6,0,2020-08-22 15:18:25+00:00,[],None
618,https://github.com/AnandSunderrajan/Pipelined-Microprocessors.git,2020-08-13 14:17:30+00:00,Pipelined LC3-b and RISC-V microprocessor,1,AnandSunderrajan/Pipelined-Microprocessors,287299396,SystemVerilog,Pipelined-Microprocessors,32406,0,2022-06-30 01:12:41+00:00,[],None
619,https://github.com/sepehrMSP/dummy-spi-slave.git,2020-08-17 11:43:50+00:00,,0,sepehrMSP/dummy-spi-slave,288165160,SystemVerilog,dummy-spi-slave,4,0,2020-08-20 10:53:44+00:00,[],None
620,https://github.com/honeytung/ELEC402-FSM_Project.git,2020-09-23 02:19:51+00:00,ELEC 402 SystemVerilog FSM Project,0,honeytung/ELEC402-FSM_Project,297827890,SystemVerilog,ELEC402-FSM_Project,240,0,2020-09-23 04:10:34+00:00,[],None
621,https://github.com/Siddhant-k/ZyboZ7-audio-video-jukebox.git,2020-09-25 19:43:32+00:00,,0,Siddhant-k/ZyboZ7-audio-video-jukebox,298665249,SystemVerilog,ZyboZ7-audio-video-jukebox,2039,0,2020-09-25 19:45:15+00:00,[],https://api.github.com/licenses/mit
622,https://github.com/siddhantv10/fibonacci-optimization.git,2020-08-04 14:06:23+00:00,Implementing the fibonacci calculator using 3 different approaches and analyzing the logic devices used.,0,siddhantv10/fibonacci-optimization,284998685,SystemVerilog,fibonacci-optimization,365,0,2020-08-04 16:40:51+00:00,[],None
623,https://github.com/hrishikeshpujari/bitmovement_engine_AHB_bus-.git,2020-07-26 19:29:05+00:00,,0,hrishikeshpujari/bitmovement_engine_AHB_bus-,282718984,SystemVerilog,bitmovement_engine_AHB_bus-,21,0,2020-07-26 19:55:43+00:00,[],None
624,https://github.com/ceyinskye/SV-Lab.git,2020-07-16 03:22:55+00:00,,0,ceyinskye/SV-Lab,280042122,SystemVerilog,SV-Lab,25663,0,2020-07-16 05:01:14+00:00,[],None
625,https://github.com/NotZombieFood/PITE.git,2020-09-11 17:39:25+00:00,Telecommunication modules in verilog,0,NotZombieFood/PITE,294765667,SystemVerilog,PITE,39,0,2020-10-30 22:00:45+00:00,[],https://api.github.com/licenses/gpl-3.0
626,https://github.com/ibrahimkhairy/MIPS_ALU_RTL_and_verification.git,2020-09-18 15:12:33+00:00,,0,ibrahimkhairy/MIPS_ALU_RTL_and_verification,296656065,SystemVerilog,MIPS_ALU_RTL_and_verification,278,0,2020-09-18 15:14:15+00:00,[],None
627,https://github.com/yizhoushen/Baccarat-Punto-Banco.git,2020-09-21 12:54:01+00:00,,0,yizhoushen/Baccarat-Punto-Banco,297338930,SystemVerilog,Baccarat-Punto-Banco,2713,0,2022-04-06 05:20:10+00:00,[],https://api.github.com/licenses/gpl-3.0
628,https://github.com/aiap-skt/github-upload.git,2020-09-22 06:46:12+00:00,,0,aiap-skt/github-upload,297560155,SystemVerilog,github-upload,50,0,2020-09-23 01:33:15+00:00,[],None
629,https://github.com/LiuChenHsiung/test_sv.git,2020-09-01 19:24:14+00:00,For learning SystemVerilog,0,LiuChenHsiung/test_sv,292088205,SystemVerilog,test_sv,9,0,2020-11-16 00:56:14+00:00,[],None
630,https://github.com/aminb7/MIPS-Processor-Pipeline.git,2020-08-29 09:46:46+00:00,Implementation of MIPS processor using pipeline in Verilog.,0,aminb7/MIPS-Processor-Pipeline,291243603,SystemVerilog,MIPS-Processor-Pipeline,8,0,2022-01-17 16:32:51+00:00,[],None
631,https://github.com/xutianyish/piplined-processor.git,2020-09-15 18:26:02+00:00,,0,xutianyish/piplined-processor,295815129,SystemVerilog,piplined-processor,15,0,2020-09-15 21:43:11+00:00,[],None
632,https://github.com/rtldesignlabs/spi.git,2020-09-10 19:58:30+00:00,,0,rtldesignlabs/spi,294509718,SystemVerilog,spi,5518,0,2021-05-02 11:17:30+00:00,[],None
633,https://github.com/Beikerone/FPGA_game.git,2020-07-26 05:35:51+00:00,Implementation of games in FPGA,0,Beikerone/FPGA_game,282583555,SystemVerilog,FPGA_game,1342,0,2020-07-31 13:15:16+00:00,[],None
634,https://github.com/garlapatirahul/agent_sva.git,2020-07-18 21:29:52+00:00,,0,garlapatirahul/agent_sva,280742604,SystemVerilog,agent_sva,2,0,2020-07-19 05:08:52+00:00,[],None
635,https://github.com/systemverilogstudio/training.git,2020-08-26 17:43:14+00:00,SystemVerilog training code.,0,systemverilogstudio/training,290564938,SystemVerilog,training,2,0,2020-08-26 17:50:04+00:00,[],None
636,https://github.com/dreaqdp/PA-MIRI.git,2020-10-27 12:46:13+00:00,"RISC-V processor implemented in System Verilog, for PA subject of MIRI (FIB)",0,dreaqdp/PA-MIRI,307697016,SystemVerilog,PA-MIRI,596,0,2023-06-23 08:45:30+00:00,[],https://api.github.com/licenses/gpl-3.0
637,https://github.com/calvinwiebe/metrics-public-integration.git,2020-10-07 21:39:49+00:00,Testing metrics integration with public github repos,0,calvinwiebe/metrics-public-integration,302166649,SystemVerilog,metrics-public-integration,0,0,2020-10-07 21:41:15+00:00,[],None
638,https://github.com/akshatmathur16/AHB.git,2020-11-07 17:54:01+00:00,AHB Design ,1,akshatmathur16/AHB,310901476,SystemVerilog,AHB,2,0,2020-11-07 18:27:59+00:00,[],None
639,https://github.com/sthornington/matrix8x8.git,2020-11-11 03:43:37+00:00,,0,sthornington/matrix8x8,311855073,SystemVerilog,matrix8x8,90,0,2021-05-11 01:43:44+00:00,[],https://api.github.com/licenses/mit
640,https://github.com/merledu/Murtajiz_core_sv.git,2020-11-02 15:32:32+00:00,,1,merledu/Murtajiz_core_sv,309413484,SystemVerilog,Murtajiz_core_sv,6,0,2020-11-14 16:40:14+00:00,[],None
641,https://github.com/aflores614/Verilog_ECE_526.git,2020-10-25 20:16:20+00:00,,0,aflores614/Verilog_ECE_526,307184178,SystemVerilog,Verilog_ECE_526,7,0,2020-10-25 20:26:34+00:00,[],None
642,https://github.com/Artem1199/ECE540-finalproject.git,2020-11-10 08:41:17+00:00,,0,Artem1199/ECE540-finalproject,311596453,SystemVerilog,ECE540-finalproject,11537,0,2020-12-24 00:12:47+00:00,[],https://api.github.com/licenses/mit
643,https://github.com/lucasbrant/processador_i2o2.git,2020-10-28 22:51:23+00:00,,0,lucasbrant/processador_i2o2,308159933,SystemVerilog,processador_i2o2,14,0,2020-11-05 02:31:35+00:00,[],None
