,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/agg23/openfpga-pong.git,2022-08-18 16:15:17+00:00,"FPGA Pong implementation, specifically for the Analogue Pocket",2,agg23/openfpga-pong,526285135,Verilog,openfpga-pong,20461,63,2024-04-07 21:58:53+00:00,"['analogue-pocket', 'fpga', 'openfpga', 'pong']",https://api.github.com/licenses/mit
1,https://github.com/agg23/openfpga-arduboy.git,2022-08-24 20:16:26+00:00,Arduboy for Analogue Pocket,2,agg23/openfpga-arduboy,528580452,Verilog,openfpga-arduboy,11168,55,2024-04-08 04:58:59+00:00,"['analogue-pocket', 'arduboy', 'fpga', 'openfpga']",https://api.github.com/licenses/gpl-3.0
2,https://github.com/zf3/psram-tang-nano-9k.git,2022-08-21 06:12:41+00:00,An open source PSRAM/HyperRAM controller for Sipeed Tang Nano 9K / Gowin GW1NR-LV9QN88PC6/15 FPGA,5,zf3/psram-tang-nano-9k,527121942,Verilog,psram-tang-nano-9k,22,44,2024-04-04 17:00:19+00:00,"['fpga', 'hyperram', 'sipeed-tang-nano-9k', 'psram', 'gowin']",https://api.github.com/licenses/apache-2.0
3,https://github.com/stnolting/neorv32-verilog.git,2022-08-27 15:06:26+00:00,♻️ Convert the NEORV32 processor into a synthesizable plain-Verilog netlist module using GHDL.,9,stnolting/neorv32-verilog,529618104,Verilog,neorv32-verilog,174,38,2024-03-28 16:44:11+00:00,"['asic', 'fpga', 'ghdl', 'neorv32', 'verilog', 'icarus-verilog']",https://api.github.com/licenses/bsd-3-clause
4,https://github.com/thinkoco/microsoft_fpga.git,2022-08-28 15:03:02+00:00,"Microsoft Catapult FPGA, Catapult V3, PCIE Test Demo, On-board usb Blaster and OpenCL BSP ",7,thinkoco/microsoft_fpga,529895140,Verilog,microsoft_fpga,179593,30,2024-03-27 04:06:12+00:00,"['catapult', 'fpga', 'longs-peak', 'microsoft', 'storey-peak']",None
5,https://github.com/EECS150/fpga_labs_fa22.git,2022-08-23 21:45:09+00:00,,28,EECS150/fpga_labs_fa22,528172298,Verilog,fpga_labs_fa22,5289,18,2024-03-21 02:00:49+00:00,[],None
6,https://github.com/harshbhosale01/image-processing-fpga.git,2022-08-18 13:22:03+00:00,Image processing on FPGA using verilog,1,harshbhosale01/image-processing-fpga,526221054,Verilog,image-processing-fpga,4681,16,2024-03-20 02:50:38+00:00,"['fpga', 'jpeg-image-compression', 'verilog']",https://api.github.com/licenses/mit
7,https://github.com/sfmth/ibnalhaytham.git,2022-08-24 16:40:18+00:00,32-bit RISC-V based processor with memory controler,1,sfmth/ibnalhaytham,528509847,Verilog,ibnalhaytham,1869,15,2023-06-02 03:33:52+00:00,[],https://api.github.com/licenses/gpl-3.0
8,https://github.com/skycrapers/AM-Lib.git,2022-08-25 05:27:29+00:00,,2,skycrapers/AM-Lib,528706942,Verilog,AM-Lib,64,15,2024-04-10 06:44:20+00:00,[],None
9,https://github.com/SuperChamp234/RISC-V-FPGA.git,2022-08-29 11:14:28+00:00,Implementing a RISC-V CPU on FPGA(Cyclone II),1,SuperChamp234/RISC-V-FPGA,530184427,Verilog,RISC-V-FPGA,550,14,2024-03-18 01:09:39+00:00,[],https://api.github.com/licenses/gpl-3.0
10,https://github.com/Robin-WZQ/CNN-FPGA.git,2022-08-26 08:25:39+00:00,基于FPGA的二维卷积识别任务,1,Robin-WZQ/CNN-FPGA,529176308,Verilog,CNN-FPGA,3528,13,2024-04-08 03:57:49+00:00,[],https://api.github.com/licenses/mit
11,https://github.com/briansune/USB-PD-Verilog.git,2022-08-31 22:29:26+00:00,USB Type-C Power Delivery FPGA,1,briansune/USB-PD-Verilog,531279620,Verilog,USB-PD-Verilog,17789,11,2024-03-03 15:33:38+00:00,"['fpga', 'usb-pd', 'usb-type-c', 'voltage-trigger']",https://api.github.com/licenses/mit
12,https://github.com/va7deo/PrehistoricIsle.git,2022-08-14 15:22:14+00:00,SNK Prehistoric Isle (MiSTerFPGA),2,va7deo/PrehistoricIsle,524707443,Verilog,PrehistoricIsle,198010,10,2024-04-05 23:38:59+00:00,[],https://api.github.com/licenses/gpl-2.0
13,https://github.com/gatecat/tinytapeout-fpga-test.git,2022-08-30 08:19:09+00:00,,3,gatecat/tinytapeout-fpga-test,530561964,Verilog,tinytapeout-fpga-test,43,10,2023-03-01 12:19:40+00:00,[],https://api.github.com/licenses/apache-2.0
14,https://github.com/ML-CAD/AppGNN.git,2022-08-15 13:47:58+00:00,Approximation-Aware Functional Reverse Engineering using Graph Neural Networks,1,ML-CAD/AppGNN,525004499,Verilog,AppGNN,2545,9,2023-10-24 14:12:37+00:00,[],None
15,https://github.com/fredrequin/verilator_gowin.git,2022-08-15 22:07:05+00:00,Re-coded Gowin GW1N primitives for Verilator use,0,fredrequin/verilator_gowin,525152535,Verilog,verilator_gowin,32,9,2024-03-05 14:18:12+00:00,"['fpga', 'gowin', 'verilator', 'verilog']",https://api.github.com/licenses/bsd-2-clause
16,https://github.com/sufiiyan/verilog.git,2022-08-16 11:58:05+00:00,This repository contains codes for Verilog.,2,sufiiyan/verilog,525359537,Verilog,verilog,1564,9,2024-01-15 08:42:03+00:00,[],None
17,https://github.com/atrac17/Toaplan2.git,2022-08-16 14:48:05+00:00,Toaplan V2 system for MiSTerFPGA,7,atrac17/Toaplan2,525423410,Verilog,Toaplan2,64098,9,2024-02-01 16:10:33+00:00,[],https://api.github.com/licenses/gpl-3.0
18,https://github.com/open-fpga/core-example-interact.git,2022-08-23 13:36:12+00:00,,2,open-fpga/core-example-interact,528006561,Verilog,core-example-interact,535,8,2024-01-25 00:53:53+00:00,['openfpga'],None
19,https://github.com/FlorentCLMichel/karatsuba_multiplication_verilog.git,2022-08-28 21:33:36+00:00,A simple implementation of the Karatsuba multiplication algorithm,0,FlorentCLMichel/karatsuba_multiplication_verilog,529984920,Verilog,karatsuba_multiplication_verilog,139,8,2024-01-10 05:50:47+00:00,[],https://api.github.com/licenses/mit
20,https://github.com/eng-mahmoudhussain/Piplined_MIPS_microprocessor.git,2022-08-27 17:40:01+00:00,,3,eng-mahmoudhussain/Piplined_MIPS_microprocessor,529655200,Verilog,Piplined_MIPS_microprocessor,316,7,2023-11-30 18:59:29+00:00,[],None
21,https://github.com/sfmth/tinytapeout-tinycordic.git,2022-08-30 16:05:41+00:00,A 6bit sin/cos CORDIC for tinytapeout,3,sfmth/tinytapeout-tinycordic,530731752,Verilog,tinytapeout-tinycordic,28,7,2024-02-08 09:03:36+00:00,[],https://api.github.com/licenses/apache-2.0
22,https://github.com/canbozaci/Cache.git,2022-08-18 18:05:27+00:00,"L1 Data, L1 Instruction and L2 Unified Cache Design FOR RV64IMC",4,canbozaci/Cache,526321901,Verilog,Cache,120,6,2024-03-16 07:22:17+00:00,[],None
23,https://github.com/machdyne/brot.git,2022-08-21 11:36:18+00:00,Brot FPGA Board,0,machdyne/brot,527188126,Verilog,brot,434,5,2023-12-09 15:01:21+00:00,[],
24,https://github.com/Devipriya1921/Physical_Design_Using_OpenLANE_Sky130.git,2022-08-20 12:36:02+00:00,,4,Devipriya1921/Physical_Design_Using_OpenLANE_Sky130,526922129,Verilog,Physical_Design_Using_OpenLANE_Sky130,238,5,2024-03-23 05:24:48+00:00,[],https://api.github.com/licenses/apache-2.0
25,https://github.com/rohan-v8rma/Verilog-Vectors.git,2022-08-24 09:25:24+00:00,,0,rohan-v8rma/Verilog-Vectors,528352213,Verilog,Verilog-Vectors,146,4,2023-09-10 07:58:45+00:00,[],None
26,https://github.com/FelipeMoraes03/Projeto-InfraHard.git,2022-08-20 13:58:23+00:00,Projeto para cadeira de Infraestrutura de Hardware - 2022.1,5,FelipeMoraes03/Projeto-InfraHard,526942131,Verilog,Projeto-InfraHard,582,4,2023-05-15 18:11:49+00:00,[],None
27,https://github.com/evansm7/MR-hw.git,2022-08-21 22:46:54+00:00,A for-fun 32-bit PowerPC-like Linux-capable RISC CPU for FPGA entertainment purposes,1,evansm7/MR-hw,527344086,Verilog,MR-hw,230,4,2023-01-02 02:46:44+00:00,[],None
28,https://github.com/Till-Later/bwa-hbm.git,2022-08-17 14:20:53+00:00,Adaptation of the BWA MEM read mapper leveraging HBM on FPGAs to accelerate the SMEM algorithm,2,Till-Later/bwa-hbm,525825809,Verilog,bwa-hbm,24170,4,2024-04-11 01:02:09+00:00,[],https://api.github.com/licenses/gpl-3.0
29,https://github.com/ZSTIH/2022_NSCSCC_MoYuSpecialists.git,2022-08-21 15:40:02+00:00,"2022年第六届“龙芯杯”全国大学生计算机系统能力培养大赛哈尔滨工业大学（深圳）摸鱼专业户队参赛作品，获全国总决赛三等奖 | contest entry of the HITSZ team ""MoYuSpecialists"" in the 6th NSCSCC, which was awarded the 3rd prize in the national final, 2022.",0,ZSTIH/2022_NSCSCC_MoYuSpecialists,527249789,Verilog,2022_NSCSCC_MoYuSpecialists,2408,4,2024-04-11 17:00:52+00:00,[],https://api.github.com/licenses/mit
30,https://github.com/omerk/tinytapeout-verilog-test.git,2022-08-13 16:46:32+00:00,,33,omerk/tinytapeout-verilog-test,524455192,Verilog,tinytapeout-verilog-test,15,4,2023-03-18 03:54:56+00:00,[],https://api.github.com/licenses/apache-2.0
31,https://github.com/wndif/Tarsel.git,2022-08-29 15:05:26+00:00,,0,wndif/Tarsel,530271190,Verilog,Tarsel,10777,4,2024-02-23 06:06:47+00:00,[],https://api.github.com/licenses/mit
32,https://github.com/opengateware/gateman-pocket.git,2022-08-27 13:53:04+00:00,Analogue Pocket openFPGA Platform for Gateman-based projects,0,opengateware/gateman-pocket,529599488,Verilog,gateman-pocket,163,4,2023-11-14 17:50:15+00:00,[],
33,https://github.com/BilalAlpaslan/introduction-to-processor.git,2022-08-30 14:13:17+00:00,RV32I,0,BilalAlpaslan/introduction-to-processor,530688145,Verilog,introduction-to-processor,56,4,2023-07-17 19:48:32+00:00,"['processor', 'risc-v', 'riscv', 'verilog']",None
34,https://github.com/sfmth/wrapped_ibnalhaytham.git,2022-08-20 13:05:49+00:00,RISC-V based 32-bit pipelined processor + memory controler,1,sfmth/wrapped_ibnalhaytham,526929071,Verilog,wrapped_ibnalhaytham,47620,3,2022-10-25 17:06:00+00:00,[],https://api.github.com/licenses/apache-2.0
35,https://github.com/pengzhouzp/wrapped_snn_network.git,2022-08-31 09:48:23+00:00,,1,pengzhouzp/wrapped_snn_network,531022334,Verilog,wrapped_snn_network,3332,3,2023-07-24 08:21:29+00:00,[],https://api.github.com/licenses/apache-2.0
36,https://github.com/Ye-Jinhong/BoothMultiplier.git,2022-08-21 12:24:36+00:00,,1,Ye-Jinhong/BoothMultiplier,527199113,Verilog,BoothMultiplier,1781,3,2023-11-20 13:59:58+00:00,[],None
37,https://github.com/Arieswithme/BLE_sample_data_transmit_core5.3.git,2022-08-29 14:42:07+00:00,以2021年7月更新的蓝牙5.3规范为标准，使用Verilog HDL硬件描述语言设计了具有链路层发送数据处理功能的模块。设计方法是：首先根据比特流处理的步骤设计相应的CRC、白化和编码映射等功能模块，然后根据蓝牙发送报文的不同结构设计状态机控制整体发送数据处理的过程。此模块可用Modelsim功能仿真对其进行验证（在代码的testbench里使用了core5.3提供的sample data）。,1,Arieswithme/BLE_sample_data_transmit_core5.3,530261873,Verilog,BLE_sample_data_transmit_core5.3,9058,3,2024-03-20 14:36:41+00:00,[],None
38,https://github.com/Edwardjojo/JTAG_driver.git,2022-08-17 13:49:26+00:00,A verilog driver module that meet the JTAG standard,0,Edwardjojo/JTAG_driver,525812725,Verilog,JTAG_driver,5,3,2024-01-12 01:16:16+00:00,[],None
39,https://github.com/ninglixin98/SRAM_design.git,2022-08-19 15:23:40+00:00,,0,ninglixin98/SRAM_design,526657518,Verilog,SRAM_design,5,3,2023-05-07 17:23:12+00:00,[],None
40,https://github.com/open-fpga/core-example-basicassets.git,2022-08-23 13:31:21+00:00,,0,open-fpga/core-example-basicassets,528004697,Verilog,core-example-basicassets,3213,3,2024-01-19 01:02:06+00:00,['openfpga'],None
41,https://github.com/0xECEAD/Arcade-CrystalCastles_MiSTer.git,2022-08-27 16:47:22+00:00,"FPGA implementation of Crystal Castles arcade game, released by Atari in 1983",0,0xECEAD/Arcade-CrystalCastles_MiSTer,529642835,Verilog,Arcade-CrystalCastles_MiSTer,1142,3,2022-11-30 14:48:47+00:00,[],https://api.github.com/licenses/gpl-2.0
42,https://github.com/wuxuezhi/qspi.git,2022-08-23 01:24:41+00:00,,0,wuxuezhi/qspi,527788579,Verilog,qspi,109,3,2024-01-10 02:53:05+00:00,[],None
43,https://github.com/NidalZabade/ENCS3310-ADVANCED-DIGITAL-SYSTEMS-DESIGN.git,2022-08-27 16:17:30+00:00,,0,NidalZabade/ENCS3310-ADVANCED-DIGITAL-SYSTEMS-DESIGN,529635748,Verilog,ENCS3310-ADVANCED-DIGITAL-SYSTEMS-DESIGN,1350,3,2023-03-19 16:05:44+00:00,[],None
44,https://github.com/AqeelMuhammad/Image-DownSampling-Processor-Design.git,2022-08-23 11:16:39+00:00,A simple processor for image down-scaling. ,0,AqeelMuhammad/Image-DownSampling-Processor-Design,527955330,Verilog,Image-DownSampling-Processor-Design,6419,3,2023-09-22 08:02:25+00:00,[],None
45,https://github.com/loujc/BNN-VAD-Hardware.git,2022-08-22 13:31:13+00:00,VAD with BNN ,0,loujc/BNN-VAD-Hardware,527578197,Verilog,BNN-VAD-Hardware,57,3,2023-09-16 03:38:22+00:00,[],https://api.github.com/licenses/gpl-3.0
46,https://github.com/dave-roo/ddcomparatorandro.git,2022-08-31 11:01:13+00:00,,1,dave-roo/ddcomparatorandro,531044916,Verilog,ddcomparatorandro,12,3,2023-03-10 07:14:38+00:00,[],https://api.github.com/licenses/apache-2.0
47,https://github.com/daniestevez/tinytapeout-verilog.git,2022-08-27 16:51:38+00:00,,1,daniestevez/tinytapeout-verilog,529643876,Verilog,tinytapeout-verilog,61,3,2023-02-02 20:14:20+00:00,[],https://api.github.com/licenses/apache-2.0
48,https://github.com/mazarona/spi-slave.git,2022-08-22 08:45:22+00:00,SPI Slave with a dual-port synchronous Memory wrapper.,0,mazarona/spi-slave,527481095,Verilog,spi-slave,4,3,2023-10-15 22:00:19+00:00,[],None
49,https://github.com/Nikhil201ec131/Data-Compression-on-FPGA.git,2022-08-14 04:47:47+00:00,Implemented Data compression on the FPGA using Verilog Hardware description language. Created a Verilog model for two kinds of lossless data compression algorithms i.e Huffman compression and Shanon fano algorithm. Compared the performances of the algorithms used and finally implemented the Huffman algorithm on the FPGA board.,1,Nikhil201ec131/Data-Compression-on-FPGA,524575260,Verilog,Data-Compression-on-FPGA,6,3,2024-02-25 11:07:54+00:00,[],None
50,https://github.com/Favorsiki/SM4-verilog.git,2022-08-29 02:57:43+00:00,verilog implement of SM4 encryption algorithm,0,Favorsiki/SM4-verilog,530045824,Verilog,SM4-verilog,411,3,2024-02-02 09:26:20+00:00,[],None
51,https://github.com/yasinxyz/muldiv.git,2022-08-18 14:21:01+00:00,RISC-V multiplier/divider circuits,0,yasinxyz/muldiv,526242760,Verilog,muldiv,9,2,2022-10-27 05:07:37+00:00,[],None
52,https://github.com/mohamedtareq24/SPI_Memory_interface.git,2022-08-22 21:47:00+00:00,The RTL for an SPI slave memory interface ,0,mohamedtareq24/SPI_Memory_interface,527742015,Verilog,SPI_Memory_interface,102,2,2023-11-23 14:56:44+00:00,[],None
53,https://github.com/Farbod-Siahkali/Digital-Logical-Designs-Projects.git,2022-08-15 18:14:50+00:00,Digital Logical Designs Course Projects,0,Farbod-Siahkali/Digital-Logical-Designs-Projects,525091769,Verilog,Digital-Logical-Designs-Projects,4887,2,2024-01-11 05:53:08+00:00,"['gate-level-simulation', 'rtl', 'state-machine', 'dld-project', 'rtl-design']",None
54,https://github.com/1mina1/UART-COMPLETE_SYSTEM-verilog.git,2022-08-16 17:39:22+00:00,,0,1mina1/UART-COMPLETE_SYSTEM-verilog,525482853,Verilog,UART-COMPLETE_SYSTEM-verilog,986,2,2022-08-23 17:34:33+00:00,[],None
55,https://github.com/vmunoz82/tinytapeout_euler1.git,2022-08-29 00:18:06+00:00,ASIC version of Project Euler problem 1,2,vmunoz82/tinytapeout_euler1,530013324,Verilog,tinytapeout_euler1,12,2,2023-02-14 20:16:01+00:00,"['asic', 'verilog', 'vlsi', 'tinytapeout']",https://api.github.com/licenses/apache-2.0
56,https://github.com/juj/gowin_array_handling_bug.git,2022-08-29 18:23:46+00:00,A test case of a possible(?) array handling bug in Gowin synthesizer,0,juj/gowin_array_handling_bug,530342541,Verilog,gowin_array_handling_bug,10,2,2023-09-13 22:58:04+00:00,[],None
57,https://github.com/sfmth/tinycordic.git,2022-08-30 16:18:39+00:00,A 6bit CORDIC for sin/cos,0,sfmth/tinycordic,530736282,Verilog,tinycordic,5,2,2022-08-30 20:28:39+00:00,[],None
58,https://github.com/YASHWANT98/iiitb_r2_4bit_bm.git,2022-08-13 17:00:11+00:00,,1,YASHWANT98/iiitb_r2_4bit_bm,524458365,Verilog,iiitb_r2_4bit_bm,11591,2,2024-03-08 13:58:44+00:00,[],https://api.github.com/licenses/mit
59,https://github.com/teekamkhandelwal/Jtag_verliog_rtl.git,2022-08-21 12:01:49+00:00, jtag tap_controller_fsm Verilog code,1,teekamkhandelwal/Jtag_verliog_rtl,527193964,Verilog,Jtag_verliog_rtl,16,2,2024-03-09 17:24:10+00:00,"['verilog', 'jtag', 'tapcontroller', 'controller', 'tap']",https://api.github.com/licenses/apache-2.0
60,https://github.com/srilokhkaruturi/Digital-Calculator.git,2022-08-27 14:50:29+00:00,The group project for CS 4341 repository. ,0,srilokhkaruturi/Digital-Calculator,529613941,Verilog,Digital-Calculator,202,2,2023-06-12 20:39:16+00:00,[],None
61,https://github.com/Ahmed-ata112/FPGA-Labs.git,2022-08-18 13:46:20+00:00,,1,Ahmed-ata112/FPGA-Labs,526230131,Verilog,FPGA-Labs,10000,2,2023-03-19 18:52:36+00:00,[],https://api.github.com/licenses/mit
62,https://github.com/smunaut/tinytapeout-misc-1.git,2022-08-27 19:03:38+00:00,,1,smunaut/tinytapeout-misc-1,529673553,Verilog,tinytapeout-misc-1,24,2,2022-10-18 02:21:14+00:00,[],https://api.github.com/licenses/apache-2.0
63,https://github.com/pgratz1/ECEN350_RasPI.git,2022-08-16 21:02:54+00:00,Repo for the starting files in ECEN 350,10,pgratz1/ECEN350_RasPI,525541574,Verilog,ECEN350_RasPI,16,2,2023-10-23 05:28:28+00:00,[],None
64,https://github.com/zencove-thu/zencove-soc.git,2022-08-21 06:14:51+00:00,ZenCove CPU System-on-Chip Design for NSCSCC Board,0,zencove-thu/zencove-soc,527122318,Verilog,zencove-soc,4267,2,2023-07-08 13:31:05+00:00,[],None
65,https://github.com/hustgl/GL_project.git,2022-08-21 17:19:37+00:00,,0,hustgl/GL_project,527275935,Verilog,GL_project,23353,2,2024-03-21 01:32:40+00:00,[],None
66,https://github.com/aminh7325/80211.a-wireless-local-network.git,2022-08-15 13:41:37+00:00,Implementation of IEEE 802.11 wireless local network transmitter and receiver on FPGA,0,aminh7325/80211.a-wireless-local-network,525002294,Verilog,80211.a-wireless-local-network,3962,2,2024-03-26 18:41:14+00:00,[],None
67,https://github.com/Micuks/Principles_of_Computer_Organization_Course_Design.git,2022-08-23 04:33:44+00:00,,0,Micuks/Principles_of_Computer_Organization_Course_Design,527833184,Verilog,Principles_of_Computer_Organization_Course_Design,5480,2,2023-06-26 02:21:26+00:00,[],None
68,https://github.com/naveen473/16-bit-Vedic-Multipler.git,2022-08-19 03:26:41+00:00,It is a general multiplication formula applicable to all cases of multiplication. It literally means Vertically and Crosswise. The multiplication of two operands using VEDIC multiplier is achieved by multiplication by Vertically and Crosswise and then adding all the results.,0,naveen473/16-bit-Vedic-Multipler,526449965,Verilog,16-bit-Vedic-Multipler,421,2,2023-12-02 02:14:46+00:00,[],None
69,https://github.com/jglim/tinytapeout_bcd-dec.git,2022-08-27 16:50:14+00:00,TinyTapeout : BCD to decimal,1,jglim/tinytapeout_bcd-dec,529643531,Verilog,tinytapeout_bcd-dec,64,2,2023-12-17 09:33:40+00:00,[],https://api.github.com/licenses/apache-2.0
70,https://github.com/OriBenZur/Encryption-CoProcessor-For-RISCV.git,2022-08-30 15:29:21+00:00,,0,OriBenZur/Encryption-CoProcessor-For-RISCV,530718269,Verilog,Encryption-CoProcessor-For-RISCV,462364,2,2024-04-04 10:39:47+00:00,[],None
71,https://github.com/asdplk0410/b-icc-2022.git,2022-08-15 10:11:19+00:00,2022 IC Design Contest Cell-Based IC Design Category for Graduate Level: Job Assignment Machine,0,asdplk0410/b-icc-2022,524939052,Verilog,b-icc-2022,8508,2,2022-10-13 09:51:29+00:00,[],None
72,https://github.com/vijayank88/graphics_controller.git,2022-08-31 13:20:55+00:00,,0,vijayank88/graphics_controller,531094269,Verilog,graphics_controller,74133,2,2022-09-20 16:43:25+00:00,[],https://api.github.com/licenses/apache-2.0
73,https://github.com/dshatwell23/lvds-to-gige.git,2022-08-23 03:57:48+00:00,Jicamarca Radio Observatory summer internship project,0,dshatwell23/lvds-to-gige,527825437,Verilog,lvds-to-gige,60652,2,2024-04-11 20:38:18+00:00,[],None
74,https://github.com/RomanRevzin/riscv_ai_accelerator.git,2022-08-27 21:14:14+00:00,"This is a small Verilog project for Hackaton at Ruppin Academic College. Given a RISCV processor, we've been asked to extends it's abilities by adding number of modules.",0,RomanRevzin/riscv_ai_accelerator,529698244,Verilog,riscv_ai_accelerator,2711,2,2023-03-25 06:08:25+00:00,[],https://api.github.com/licenses/mit
75,https://github.com/skyline123-boomer/mini_RISC-V_CPU.git,2022-08-15 22:05:36+00:00,该项目为极客时间彭东老师的付费课程《计算机基础实战课》，会日常摸鱼更新：），目的为学习RISC-V的同时手搓一个mini_CPU。,0,skyline123-boomer/mini_RISC-V_CPU,525152230,Verilog,mini_RISC-V_CPU,8259,2,2023-07-09 02:46:43+00:00,[],None
76,https://github.com/GuzTech/tinytapeout-tinysoc.git,2022-08-28 22:28:49+00:00,A tiny SoC for TinyTapeout,0,GuzTech/tinytapeout-tinysoc,529994701,Verilog,tinytapeout-tinysoc,40,2,2022-08-29 22:57:00+00:00,[],https://api.github.com/licenses/apache-2.0
77,https://github.com/marcusmueller/hamming74-tapeout.git,2022-08-29 14:23:06+00:00,"Experimenting with 7,4-Encoding/Decoding",1,marcusmueller/hamming74-tapeout,530254271,Verilog,hamming74-tapeout,11,2,2022-08-31 21:32:50+00:00,[],https://api.github.com/licenses/apache-2.0
78,https://github.com/Muhamed-Sayed/Design-of-AES-Advanced-Encryption-Standard-128-Bits.git,2022-08-16 21:52:48+00:00,Based on (RIJNDAEL) Encryption Algorithm,0,Muhamed-Sayed/Design-of-AES-Advanced-Encryption-Standard-128-Bits,525553037,Verilog,Design-of-AES-Advanced-Encryption-Standard-128-Bits,2548,2,2022-09-10 19:37:27+00:00,[],None
79,https://github.com/amrkhalid-star902/PIPLENED_RISCV_PROCESSOR.git,2022-08-15 06:06:55+00:00,"5-stage piplened Risc-v processor that contains hazard detection unit and foward unit and support R-Typr,I-type,S-type and conditional branch instructions",0,amrkhalid-star902/PIPLENED_RISCV_PROCESSOR,524873523,Verilog,PIPLENED_RISCV_PROCESSOR,11,2,2024-01-29 12:23:55+00:00,[],None
80,https://github.com/zcj-debug/temperature_ds18b20.git,2022-08-16 02:09:36+00:00,,0,zcj-debug/temperature_ds18b20,525200855,Verilog,temperature_ds18b20,34891,2,2024-03-17 06:37:35+00:00,[],None
81,https://github.com/lara-arikan/ask.git,2022-08-27 01:03:07+00:00,Amplitude-shift keying for in-bore wireless transmission of MRI data.,0,lara-arikan/ask,529445994,Verilog,ask,15,2,2024-01-06 22:59:05+00:00,[],None
82,https://github.com/mathis-s/CaravelSoomRV.git,2022-08-22 20:54:27+00:00,,0,mathis-s/CaravelSoomRV,527729206,Verilog,CaravelSoomRV,1960022,2,2022-09-26 13:07:52+00:00,[],https://api.github.com/licenses/apache-2.0
83,https://github.com/mole99/wokwi-1bit-alu.git,2022-08-18 09:30:20+00:00,A 1-bit ALU for TinyTapeout,1,mole99/wokwi-1bit-alu,526144744,Verilog,wokwi-1bit-alu,93,2,2024-02-25 15:52:03+00:00,[],https://api.github.com/licenses/apache-2.0
84,https://github.com/MuballighHossain/Moore_Machine_VLSI.git,2022-08-20 14:01:40+00:00,,1,MuballighHossain/Moore_Machine_VLSI,526942989,Verilog,Moore_Machine_VLSI,7,2,2023-06-02 15:49:02+00:00,"['moore', 'moore-machine', 'verilog', 'verilog-hdl', 'vlsi', 'vlsi-circuits', 'vlsi-design', 'vlsi-physical-design']",None
85,https://github.com/wuzirui/SimPU.git,2022-08-22 04:34:17+00:00,A Single Cycle CPU in Vivado Simulator,0,wuzirui/SimPU,527411889,Verilog,SimPU,59,2,2022-10-21 07:28:40+00:00,[],None
86,https://github.com/SamueleGerminiani/dea_benchmarks.git,2022-08-24 12:03:44+00:00,,0,SamueleGerminiani/dea_benchmarks,528404943,Verilog,dea_benchmarks,3881,2,2023-05-11 14:50:15+00:00,[],None
87,https://github.com/vaibhavmustilwar/16-bit-booth-multiplier.git,2022-08-26 16:31:58+00:00,,1,vaibhavmustilwar/16-bit-booth-multiplier,529331466,Verilog,16-bit-booth-multiplier,3,2,2023-11-17 06:09:16+00:00,[],None
88,https://github.com/yoshiyuki-takeda/Tang_Nano_1k_RISC-V_Project.git,2022-08-17 02:13:18+00:00,Tang Nano 1k用のRISC-Vコア,0,yoshiyuki-takeda/Tang_Nano_1k_RISC-V_Project,525608017,Verilog,Tang_Nano_1k_RISC-V_Project,101,1,2023-04-18 17:43:17+00:00,"['risc-v', 'verilog', 'rv32i', 'tang-nano-1k']",https://api.github.com/licenses/bsd-2-clause
89,https://github.com/sonic55567/IC-Contest.git,2022-08-24 18:23:25+00:00,,0,sonic55567/IC-Contest,528545639,Verilog,IC-Contest,17969,1,2022-08-26 09:39:51+00:00,[],None
90,https://github.com/bodasanthosh/ahb2apb_bridge.git,2022-08-20 06:32:50+00:00,,0,bodasanthosh/ahb2apb_bridge,526846191,Verilog,ahb2apb_bridge,2,1,2022-08-21 09:34:47+00:00,[],None
91,https://github.com/thanavignesh/verilog.git,2022-08-29 16:52:25+00:00,basic verilog programms,0,thanavignesh/verilog,530310505,Verilog,verilog,216,1,2022-11-02 02:01:01+00:00,[],None
92,https://github.com/theRTLmaker/100DaysOfRTL.git,2022-08-29 13:59:44+00:00,"One RTL a day, keeps the verification engineer away",0,theRTLmaker/100DaysOfRTL,530244636,Verilog,100DaysOfRTL,2252,1,2022-08-30 21:10:57+00:00,[],None
93,https://github.com/EnesErcin/Convolutional_Neural_Network_wFPGA.git,2022-08-17 10:47:15+00:00,FPGA implementation of convolutional neural network with the dataset Fashion mnist,0,EnesErcin/Convolutional_Neural_Network_wFPGA,525747262,Verilog,Convolutional_Neural_Network_wFPGA,76,1,2023-03-27 11:48:32+00:00,[],None
94,https://github.com/GaneshKumarShaw/Asynchronous_FIFO.git,2022-08-21 14:54:48+00:00,,0,GaneshKumarShaw/Asynchronous_FIFO,527237724,Verilog,Asynchronous_FIFO,337,1,2022-08-21 14:56:41+00:00,[],None
95,https://github.com/AntrikshMehta/Elevator_control_system.git,2022-08-28 15:16:53+00:00,,0,AntrikshMehta/Elevator_control_system,529898717,Verilog,Elevator_control_system,154,1,2022-08-28 15:28:50+00:00,[],None
96,https://github.com/wpi-ece574-f22/ho-gcd.git,2022-08-31 01:04:51+00:00,,1,wpi-ece574-f22/ho-gcd,530887620,Verilog,ho-gcd,3,1,2023-09-14 00:09:13+00:00,[],None
97,https://github.com/arabaod/PianoProject.git,2022-08-18 00:56:25+00:00,,0,arabaod/PianoProject,526004741,Verilog,PianoProject,738,1,2023-05-09 02:23:13+00:00,[],None
98,https://github.com/Ikarthikmb/VerilogClocks.git,2022-08-28 21:09:14+00:00,Various methods on generating clock signal in verilog.,0,Ikarthikmb/VerilogClocks,529980195,Verilog,VerilogClocks,597,1,2023-11-06 02:33:27+00:00,[],None
99,https://github.com/30shubhvish/Dadda_multiplier.git,2022-08-16 20:53:43+00:00,Design of Dadda Multiplier ,0,30shubhvish/Dadda_multiplier,525539463,Verilog,Dadda_multiplier,769,1,2024-03-11 23:41:04+00:00,[],None
100,https://github.com/Soumya2754/Modified-booth-algorithm.git,2022-08-31 13:02:20+00:00,,0,Soumya2754/Modified-booth-algorithm,531086926,Verilog,Modified-booth-algorithm,5,1,2022-09-08 05:02:30+00:00,[],None
101,https://github.com/mattvenn/tinytapeout-7seg-seconds-counter.git,2022-08-23 17:51:42+00:00,,3,mattvenn/tinytapeout-7seg-seconds-counter,528104333,Verilog,tinytapeout-7seg-seconds-counter,11,1,2022-08-23 19:16:26+00:00,[],https://api.github.com/licenses/apache-2.0
102,https://github.com/1475015695/easy_riscv_soc.git,2022-08-21 04:47:52+00:00,"Simple riscv SoC, supports riscv-I instruction set, serial port, interrupt, gpio, download program from serial port",0,1475015695/easy_riscv_soc,527107737,Verilog,easy_riscv_soc,6437,1,2022-11-23 01:53:08+00:00,[],None
103,https://github.com/ericlewis/analogue-draw.git,2022-08-29 03:15:56+00:00,,0,ericlewis/analogue-draw,530049777,Verilog,analogue-draw,2273,1,2022-09-13 11:34:51+00:00,[],None
104,https://github.com/elecclubiitg/FruitNinja.git,2022-08-31 15:04:13+00:00,"This is the official repository of Fruit Ninja project of Electronics Club IITG for the autumn sem 2022. Implementation of fruit ninja game, completely on reprogrammable chip called FPGA",5,elecclubiitg/FruitNinja,531135537,Verilog,FruitNinja,9374,1,2023-07-11 11:26:29+00:00,[],None
105,https://github.com/MuballighHossain/VLSI_FSM_Verilog_Simulation.git,2022-08-20 14:03:35+00:00,,1,MuballighHossain/VLSI_FSM_Verilog_Simulation,526943484,Verilog,VLSI_FSM_Verilog_Simulation,3102,1,2024-02-21 15:13:15+00:00,"['fsm', 'hdl', 'vlsi', 'vlsi-circuits', 'vlsi-design', 'verilog', 'verilog-hdl', 'verilog-project']",None
106,https://github.com/islam-nasser0/RTL-to-GDSII-implementation-of-low-power-configurable-multi-clock-system.git,2022-08-21 19:47:22+00:00,,0,islam-nasser0/RTL-to-GDSII-implementation-of-low-power-configurable-multi-clock-system,527310816,Verilog,RTL-to-GDSII-implementation-of-low-power-configurable-multi-clock-system,732,1,2024-02-28 05:15:14+00:00,[],None
107,https://github.com/NabilYasser/Final-Project.git,2022-08-19 00:48:47+00:00,,0,NabilYasser/Final-Project,526416971,Verilog,Final-Project,38592,1,2022-08-25 23:23:24+00:00,[],None
108,https://github.com/MiSTer-devel/Arcade-TankBattalion_MiSTer.git,2022-08-21 15:43:04+00:00,FPGA implementation of Namco's Tank Battalion arcade game ,2,MiSTer-devel/Arcade-TankBattalion_MiSTer,527250665,Verilog,Arcade-TankBattalion_MiSTer,1891,1,2022-08-26 16:50:13+00:00,[],None
109,https://github.com/shubham-sai47/Image_Processing_Verilog.git,2022-08-30 07:15:33+00:00,Parameterized Verilog code for Image Sharpening (Laplacian Filter) and Image smoothening (Average Filter) on 128x128 image,2,shubham-sai47/Image_Processing_Verilog,530541027,Verilog,Image_Processing_Verilog,996,1,2023-09-15 01:12:46+00:00,[],None
110,https://github.com/rares-fodor/Verilog-FPU.git,2022-08-15 03:27:55+00:00,Floating point division and square root,0,rares-fodor/Verilog-FPU,524843579,Verilog,Verilog-FPU,5,1,2023-04-12 07:00:58+00:00,[],None
111,https://github.com/SaurabhSahu38/Design-and-Verification-of-Synchronous-FIFO-on-Icarus-Verilog.git,2022-08-23 08:23:10+00:00,,0,SaurabhSahu38/Design-and-Verification-of-Synchronous-FIFO-on-Icarus-Verilog,527897554,Verilog,Design-and-Verification-of-Synchronous-FIFO-on-Icarus-Verilog,2,1,2023-11-24 06:30:32+00:00,[],None
112,https://github.com/iandailis/SDRAM-Suite.git,2022-08-26 06:42:32+00:00,SV modules and software for instantiating and using the SDRAM on a Terasic DE-10 Lite with JTAG UART. Includes an image viewer.,0,iandailis/SDRAM-Suite,529145792,Verilog,SDRAM-Suite,10745,1,2023-12-10 22:29:05+00:00,[],None
113,https://github.com/amrkhalid-star902/LCD_Interface_with_FPGA.git,2022-08-31 07:11:33+00:00,,0,amrkhalid-star902/LCD_Interface_with_FPGA,530972982,Verilog,LCD_Interface_with_FPGA,0,1,2024-01-29 12:23:49+00:00,[],None
114,https://github.com/sqduan/YuCore.git,2022-08-21 14:58:47+00:00,A tiny CPU based on RISC ISA,0,sqduan/YuCore,527238894,Verilog,YuCore,429,1,2022-11-02 14:05:17+00:00,[],None
115,https://github.com/rajukatala/32-bit-RISC-MIPS-Processor-.git,2022-08-26 04:11:09+00:00,This is a simple RISC 32 bit pipelined as well as without pipelining processor made in Verilog using MIPS ISA.,0,rajukatala/32-bit-RISC-MIPS-Processor-,529110072,Verilog,32-bit-RISC-MIPS-Processor-,1718,1,2022-10-03 22:10:32+00:00,[],None
116,https://github.com/Spaced-Cowboy/gowin-modelsim-test.git,2022-08-26 20:19:11+00:00,Simple test of using Modelsim with the Gowin FPGA environment,1,Spaced-Cowboy/gowin-modelsim-test,529394000,Verilog,gowin-modelsim-test,74,1,2022-09-14 14:57:29+00:00,[],https://api.github.com/licenses/gpl-3.0
117,https://github.com/tachyon121/32-bit-ALU-ECN-project.git,2022-08-26 08:17:14+00:00,"An IEEE floating-point single-precision (32-bit) ALU that supports the arithmetic and logic operations: addition, subtraction, multiplication, division, AND, OR, NOT.",0,tachyon121/32-bit-ALU-ECN-project,529173746,,32-bit-ALU-ECN-project,862,1,2022-08-26 08:17:28+00:00,[],None
118,https://github.com/asdplk0410/b-icc-2021.git,2022-08-15 10:31:02+00:00,2021 IC Design Contest  Cell-Based IC Design Category for Graduate Level  Geofence,0,asdplk0410/b-icc-2021,524944515,Verilog,b-icc-2021,923,1,2022-10-13 09:51:31+00:00,[],None
119,https://github.com/kisek/rvcore_chip1.git,2022-08-31 09:17:09+00:00,,0,kisek/rvcore_chip1,531012469,Verilog,rvcore_chip1,16251,1,2023-12-09 04:53:24+00:00,[],https://api.github.com/licenses/apache-2.0
120,https://github.com/jglim/tinytapeout_bcd-7seg.git,2022-08-27 17:59:47+00:00,TinyTapeout : BCD to 7 segment,1,jglim/tinytapeout_bcd-7seg,529659930,Verilog,tinytapeout_bcd-7seg,576,1,2023-12-17 09:33:38+00:00,[],https://api.github.com/licenses/apache-2.0
121,https://github.com/gregdavill/tinytapeout_spin0.git,2022-08-17 06:09:55+00:00,Basic spin animation on LED 7 segment,4,gregdavill/tinytapeout_spin0,525662162,Verilog,tinytapeout_spin0,12,1,2022-09-09 15:15:48+00:00,[],https://api.github.com/licenses/apache-2.0
122,https://github.com/mamuneeb/A-Pipelined-RISCV-Core.git,2022-08-29 08:36:51+00:00,A 5 Stage Pipelined RISC V Core deigned using Verilog HDL.,0,mamuneeb/A-Pipelined-RISCV-Core,530133633,Verilog,A-Pipelined-RISCV-Core,697,1,2022-10-10 12:07:45+00:00,[],None
123,https://github.com/MahmoudH2000/Pipelined_MIPS_Processor.git,2022-08-27 10:22:58+00:00,,0,MahmoudH2000/Pipelined_MIPS_Processor,529551429,Verilog,Pipelined_MIPS_Processor,145,1,2023-03-04 22:17:21+00:00,[],None
124,https://github.com/CarlosCraveiro/LabProjectSEL0606.git,2022-08-26 16:31:51+00:00,Open source project of a processor for the discipline SEL0606,0,CarlosCraveiro/LabProjectSEL0606,529331441,Verilog,LabProjectSEL0606,2229,1,2023-06-05 22:44:05+00:00,[],https://api.github.com/licenses/apache-2.0
125,https://github.com/lara-arikan/dpsk.git,2022-08-27 00:13:19+00:00,"Sends out modulated input with each bit xor'd with the previous. Can optionally link up to its own demodulator, which uses the same strategy to recover the original 12-bit word with start and stop bits 1, 0.",0,lara-arikan/dpsk,529437918,Verilog,dpsk,30,1,2022-08-27 01:20:35+00:00,"['dpsk', 'mri', 'random-number-generators']",None
126,https://github.com/GaneshKumarShaw/Multiplication_Pipelining.git,2022-08-21 13:22:52+00:00,,0,GaneshKumarShaw/Multiplication_Pipelining,527213160,Verilog,Multiplication_Pipelining,702,1,2022-08-21 14:56:45+00:00,[],None
127,https://github.com/libokuohai/tinytapeout-2022-08.git,2022-08-27 13:36:43+00:00,,2,libokuohai/tinytapeout-2022-08,529595371,Verilog,tinytapeout-2022-08,7,1,2024-03-24 02:58:32+00:00,[],https://api.github.com/licenses/apache-2.0
128,https://github.com/Kyp069/AY-3-891x.git,2022-08-17 17:30:20+00:00,FPGA Clone of AY-3-891x progammable sound generators,0,Kyp069/AY-3-891x,525892268,Verilog,AY-3-891x,5,1,2022-11-03 21:59:02+00:00,[],None
129,https://github.com/GaneshKumarShaw/Booth_Multiplication.git,2022-08-21 13:12:01+00:00,,0,GaneshKumarShaw/Booth_Multiplication,527210508,Verilog,Booth_Multiplication,457,1,2022-08-21 14:56:46+00:00,[],None
130,https://github.com/pauvrepetit/XuLin-F.git,2022-08-20 03:31:35+00:00,A Data-Centric Accelerator for High-Performance Hypergraph Processing,2,pauvrepetit/XuLin-F,526815571,Verilog,XuLin-F,17499,1,2022-08-23 03:55:25+00:00,[],https://api.github.com/licenses/mit
131,https://github.com/dailing57/MIPS-CPU.git,2022-08-22 14:21:44+00:00,,0,dailing57/MIPS-CPU,527597746,Verilog,MIPS-CPU,1400,1,2022-08-25 09:09:28+00:00,[],https://api.github.com/licenses/mit
132,https://github.com/97Albino/IDEC-Synopsys-IC-design.git,2022-08-15 12:36:31+00:00,,0,97Albino/IDEC-Synopsys-IC-design,524980675,Verilog,IDEC-Synopsys-IC-design,89604,1,2023-05-03 14:03:13+00:00,[],None
133,https://github.com/bakkalzade/verilog-finite-state-machine.git,2022-08-18 08:49:27+00:00,In this experiment we are asked to design a machine to find in which state there is s at least two 1’s and an odd number of 0’s.,0,bakkalzade/verilog-finite-state-machine,526130730,Verilog,verilog-finite-state-machine,1,1,2022-11-02 06:23:58+00:00,[],None
134,https://github.com/Grad-Project2023/Single_Cycle_MIPS_Processor.git,2022-08-15 18:01:25+00:00,,3,Grad-Project2023/Single_Cycle_MIPS_Processor,525087733,Verilog,Single_Cycle_MIPS_Processor,57,1,2022-08-15 18:45:11+00:00,[],None
135,https://github.com/muse-coder/DARIC.git,2022-08-15 13:07:33+00:00,,0,muse-coder/DARIC,524990991,Verilog,DARIC,886,1,2023-08-31 01:31:41+00:00,[],None
136,https://github.com/GaneshKumarShaw/Extreme_Learning_Machine.git,2022-08-21 14:48:22+00:00,,0,GaneshKumarShaw/Extreme_Learning_Machine,527235816,Verilog,Extreme_Learning_Machine,9845,1,2022-09-02 17:54:56+00:00,[],None
137,https://github.com/sjkeller/smart-sensors-project.git,2022-08-25 20:10:09+00:00,Verilog implementations of different simple tasks,0,sjkeller/smart-sensors-project,529003192,Verilog,smart-sensors-project,421,1,2023-03-25 16:23:51+00:00,"['alu', 'fpga', 'hdl', 'ice40', 'spi-protocol', 'verilog', 'verilog-hdl', 'verilog-project', 'yosys']",None
138,https://github.com/MiSTer-devel/Arcade-Galivan_MiSTer.git,2022-08-31 10:50:40+00:00,,4,MiSTer-devel/Arcade-Galivan_MiSTer,531041697,Verilog,Arcade-Galivan_MiSTer,7034,1,2023-11-20 20:18:17+00:00,[],https://api.github.com/licenses/gpl-2.0
139,https://github.com/luchLasarya/LRF.git,2022-08-24 18:27:36+00:00,Simple laser rangefinder,0,luchLasarya/LRF,528547082,Verilog,LRF,1,1,2023-12-17 09:59:01+00:00,[],None
140,https://github.com/i212431/SPATIAL_SD_ADC.git,2022-08-30 08:00:31+00:00,,0,i212431/SPATIAL_SD_ADC,530555749,Verilog,SPATIAL_SD_ADC,2991,1,2024-01-21 16:47:47+00:00,[],https://api.github.com/licenses/apache-2.0
141,https://github.com/adamgreig/tinytapeout-prn.git,2022-08-27 18:06:30+00:00,,1,adamgreig/tinytapeout-prn,529661469,Verilog,tinytapeout-prn,23,1,2022-09-21 21:03:16+00:00,[],https://api.github.com/licenses/apache-2.0
142,https://github.com/nayanesh-reddy/2-Bit_Add_Mul_Comp.git,2022-08-31 17:12:41+00:00,,1,nayanesh-reddy/2-Bit_Add_Mul_Comp,531183436,Verilog,2-Bit_Add_Mul_Comp,15,1,2022-10-30 12:03:37+00:00,[],https://api.github.com/licenses/apache-2.0
143,https://github.com/s100projects/T35_GPIO_TEST.git,2022-08-31 17:43:56+00:00,S100Computers T35 FPGA Module GPIO Test Code,0,s100projects/T35_GPIO_TEST,531194570,Verilog,T35_GPIO_TEST,63,1,2023-01-03 22:19:52+00:00,[],None
144,https://github.com/MuballighHossain/Mealy_Machine_VLSI.git,2022-08-20 13:58:53+00:00,,0,MuballighHossain/Mealy_Machine_VLSI,526942253,Verilog,Mealy_Machine_VLSI,85,1,2023-02-14 20:09:48+00:00,"['mealy', 'mealy-machine', 'mealy-machine-code', 'verilog', 'vlsi']",None
145,https://github.com/nihonge/cpu.git,2022-08-23 10:47:34+00:00,,0,nihonge/cpu,527945549,Verilog,cpu,9,1,2022-08-25 12:54:53+00:00,[],None
146,https://github.com/mouer-hub/AHT10.git,2022-08-30 09:37:09+00:00,,0,mouer-hub/AHT10,530588713,Verilog,AHT10,40601,1,2023-11-24 06:44:02+00:00,[],None
147,https://github.com/mohammedsaber10/apb_spi_lite.git,2022-08-14 21:10:27+00:00,This project is aimed to implement the spi communication protocol with apb slave as its interface.,0,mohammedsaber10/apb_spi_lite,524780635,Verilog,apb_spi_lite,207,1,2024-03-17 03:14:44+00:00,[],None
148,https://github.com/SalazarBryan/Proyecto_Electrico.git,2022-08-24 00:33:42+00:00,"Cláusula Ethernet(PMA, PCS, reconciliation)",1,SalazarBryan/Proyecto_Electrico,528209328,Verilog,Proyecto_Electrico,29,1,2023-04-05 17:35:03+00:00,[],None
149,https://github.com/Only-FPGA/Bus-Handshakes.git,2022-08-21 03:51:57+00:00,达坦科技,0,Only-FPGA/Bus-Handshakes,527099148,Verilog,Bus-Handshakes,2008,1,2022-11-27 00:15:26+00:00,[],None
150,https://github.com/MuballighHossain/Full_Adder_Priority_Encoder_VLSI.git,2022-08-20 13:52:47+00:00,,1,MuballighHossain/Full_Adder_Priority_Encoder_VLSI,526940610,Verilog,Full_Adder_Priority_Encoder_VLSI,50,1,2023-02-14 20:07:03+00:00,"['encoder', 'fulladder', 'vlsi', 'vlsi-circuits', 'vlsi-design', 'priority-encoder']",None
151,https://github.com/ThorKn/tinytapeout_shiftregister_challenge.git,2022-08-31 15:46:24+00:00,Shiftregister challenge: A mikrochip design for tapeout with SKY130 MPW via tinytapeouts.,1,ThorKn/tinytapeout_shiftregister_challenge,531151827,Verilog,tinytapeout_shiftregister_challenge,331,1,2023-01-14 14:37:25+00:00,[],https://api.github.com/licenses/apache-2.0
152,https://github.com/nic24-rgb/Arcade-TankBattalion-MiSTer.git,2022-08-20 13:28:45+00:00,,0,nic24-rgb/Arcade-TankBattalion-MiSTer,526934429,Verilog,Arcade-TankBattalion-MiSTer,1885,1,2022-12-12 01:58:35+00:00,[],None
153,https://github.com/islam-nasser0/MIPS_single_cycle_Microprocessor.git,2022-08-21 17:09:52+00:00,32-bit general purpose integer microprocessor,0,islam-nasser0/MIPS_single_cycle_Microprocessor,527273473,Verilog,MIPS_single_cycle_Microprocessor,1333,1,2022-08-23 05:09:12+00:00,[],None
154,https://github.com/karanmgandhi/DSD-Lab-Sem-3.git,2022-08-25 05:01:03+00:00,,0,karanmgandhi/DSD-Lab-Sem-3,528700671,Verilog,DSD-Lab-Sem-3,10,1,2022-08-25 05:21:13+00:00,[],None
155,https://github.com/feybm2002/Verilog.git,2022-08-25 18:52:27+00:00,,0,feybm2002/Verilog,528980344,Verilog,Verilog,10,1,2024-01-22 21:29:24+00:00,[],None
156,https://github.com/amrkhalid-star902/UART-implementation-using-verilog.git,2022-08-28 07:31:17+00:00,In this project UART communication protocol that used to receive and transmit serious data is implemented using verilog,0,amrkhalid-star902/UART-implementation-using-verilog,529793545,Verilog,UART-implementation-using-verilog,0,1,2024-01-29 12:23:44+00:00,[],None
157,https://github.com/zhou886/LittleCPU.git,2022-08-21 09:10:52+00:00,,0,zhou886/LittleCPU,527156293,Verilog,LittleCPU,16929,1,2022-08-26 01:25:24+00:00,[],None
158,https://github.com/TrungNgoc20172869/SNN_in_Linux_on_LiteX_VexRiscV.git,2022-08-22 12:39:37+00:00,,2,TrungNgoc20172869/SNN_in_Linux_on_LiteX_VexRiscV,527558668,Verilog,SNN_in_Linux_on_LiteX_VexRiscV,186,1,2023-05-25 06:26:50+00:00,[],None
159,https://github.com/msuadOf/DDS.git,2022-08-24 05:43:03+00:00,多平台可调频、调幅的dds,0,msuadOf/DDS,528282257,Verilog,DDS,529,1,2022-09-26 13:28:47+00:00,[],None
160,https://github.com/JohnBagshaw/SoC-FPGA-ASIC-AXI-based-Digital-Designs.git,2022-08-24 10:08:48+00:00,AXI-based digital design examples,0,JohnBagshaw/SoC-FPGA-ASIC-AXI-based-Digital-Designs,528366622,Verilog,SoC-FPGA-ASIC-AXI-based-Digital-Designs,21,1,2022-09-01 09:36:23+00:00,[],https://api.github.com/licenses/gpl-3.0
161,https://github.com/Ikarthikmb/rtl_designs.git,2022-08-30 14:36:16+00:00,Design of verilog circuits and verifying them,0,Ikarthikmb/rtl_designs,530697671,Verilog,rtl_designs,724,1,2023-11-11 06:13:22+00:00,[],None
162,https://github.com/anniezfy/STAP_algorithm.git,2022-08-19 09:01:58+00:00,,0,anniezfy/STAP_algorithm,526535116,Verilog,STAP_algorithm,5736,1,2023-10-24 07:59:03+00:00,[],None
163,https://github.com/pretentious7/tinytapeout.git,2022-08-27 15:15:36+00:00,,1,pretentious7/tinytapeout,529620313,Verilog,tinytapeout,12,1,2023-03-23 15:39:18+00:00,[],https://api.github.com/licenses/apache-2.0
164,https://github.com/dhanush904/Traffic_lights_4_way_junction.git,2022-08-21 03:55:08+00:00,,0,dhanush904/Traffic_lights_4_way_junction,527099582,Verilog,Traffic_lights_4_way_junction,2,1,2022-08-28 17:00:47+00:00,[],None
165,https://github.com/MuballighHossain/CMOS_3_To_8_Decoder_VLSI.git,2022-08-20 14:07:55+00:00,,0,MuballighHossain/CMOS_3_To_8_Decoder_VLSI,526944593,Verilog,CMOS_3_To_8_Decoder_VLSI,33,1,2023-02-14 20:09:45+00:00,"['cmos', 'cmos-circuits', 'verilog', 'verilog-code', 'vlsi', 'vlsi-design']",None
166,https://github.com/cornell-ece4750/ece4750-tut3-verilog.git,2022-08-31 04:58:11+00:00,ECE 4750 Tutorial 3: Verilog Hardware Description Language,82,cornell-ece4750/ece4750-tut3-verilog,530940598,Verilog,ece4750-tut3-verilog,36,1,2023-11-07 18:07:45+00:00,[],None
167,https://github.com/smunaut/tinytapeout-smolram.git,2022-08-30 14:01:43+00:00,,1,smunaut/tinytapeout-smolram,530683145,Verilog,tinytapeout-smolram,30,1,2022-10-18 02:21:09+00:00,[],https://api.github.com/licenses/apache-2.0
168,https://github.com/siriusm46/tinytapeout_calculator.git,2022-08-31 02:54:52+00:00,,0,siriusm46/tinytapeout_calculator,530914068,Verilog,tinytapeout_calculator,7,1,2024-03-01 07:42:48+00:00,[],https://api.github.com/licenses/apache-2.0
169,https://github.com/WazaAbdulkadir/PWM.git,2022-08-22 14:37:10+00:00,,0,WazaAbdulkadir/PWM,527603686,Verilog,PWM,18,1,2023-02-12 03:49:49+00:00,[],None
170,https://github.com/skerr92/tinytapeout_frequency_div.git,2022-08-27 16:25:43+00:00,frequency divider tiny tapeout design,1,skerr92/tinytapeout_frequency_div,529637817,Verilog,tinytapeout_frequency_div,17,1,2022-08-27 18:17:11+00:00,[],https://api.github.com/licenses/apache-2.0
171,https://github.com/Grad-Project2023/Pipelined_MIPS_Processor.git,2022-08-27 17:42:05+00:00,,0,Grad-Project2023/Pipelined_MIPS_Processor,529655730,Verilog,Pipelined_MIPS_Processor,144,1,2022-10-15 13:24:35+00:00,[],None
172,https://github.com/ahmed-elhoseiny/a-32-bit-single-cycle-microarchitecture-MIPS-processor-based-on-Harvard-Architecture..git,2022-08-15 17:25:16+00:00," In this project, you are required to implement a 32-bit single-cycle microarchitecture  MIPS processor based on Harvard Architecture. The single-cycle microarchitecture executes an  entire instruction in one cycle. In other words instruction fetch, instruction decode, execute,  write back, and program counter update occurs within a single clock cycle.  ",0,ahmed-elhoseiny/a-32-bit-single-cycle-microarchitecture-MIPS-processor-based-on-Harvard-Architecture.,525076578,Verilog,a-32-bit-single-cycle-microarchitecture-MIPS-processor-based-on-Harvard-Architecture.,1336,1,2022-08-15 19:00:57+00:00,[],None
173,https://github.com/tonyalfred/Universal-Asynchronous-Receiver-Transmitter-UART.git,2022-08-15 16:14:55+00:00,Implemented UART TX and RX Modules Using Verilog HDL. The RX Module uses the oversampling scheme in order to estimate the middle points of the transmitted bits and retrieve these points accordingly,0,tonyalfred/Universal-Asynchronous-Receiver-Transmitter-UART,525055029,Verilog,Universal-Asynchronous-Receiver-Transmitter-UART,13,1,2023-12-26 00:32:47+00:00,[],None
174,https://github.com/amrkhalid-star902/SPI-Communication-Protocol.git,2022-08-28 09:32:36+00:00,,0,amrkhalid-star902/SPI-Communication-Protocol,529817574,Verilog,SPI-Communication-Protocol,0,1,2024-01-29 12:23:48+00:00,[],None
175,https://github.com/213070088/dadda-multiplier.git,2022-08-15 16:16:15+00:00,,0,213070088/dadda-multiplier,525055429,Verilog,dadda-multiplier,298,0,2022-08-15 16:21:42+00:00,[],None
176,https://github.com/1234robin/booth_multiplier.git,2022-08-15 14:30:55+00:00,,0,1234robin/booth_multiplier,525019542,Verilog,booth_multiplier,203,0,2022-08-15 15:59:07+00:00,[],None
177,https://github.com/Muhamed-Sayed/UART-Transmitter-Implementation.git,2022-08-13 23:10:00+00:00,,0,Muhamed-Sayed/UART-Transmitter-Implementation,524527280,Verilog,UART-Transmitter-Implementation,629,0,2022-08-13 23:19:46+00:00,[],None
178,https://github.com/krasin/wokwi-guess-my-number.git,2022-08-22 06:30:02+00:00,See tinytapeout.com,1,krasin/wokwi-guess-my-number,527439475,Verilog,wokwi-guess-my-number,13,0,2022-08-22 06:30:07+00:00,[],https://api.github.com/licenses/apache-2.0
179,https://github.com/shanmukh2607/Single-Cycle-CPU.git,2022-08-23 12:07:39+00:00,,0,shanmukh2607/Single-Cycle-CPU,527973066,Verilog,Single-Cycle-CPU,6749,0,2022-08-23 12:12:44+00:00,[],None
180,https://github.com/MatheusAssisNeves/MIPS-based-Processor.git,2022-08-23 20:13:19+00:00,,0,MatheusAssisNeves/MIPS-based-Processor,528147991,Verilog,MIPS-based-Processor,1027,0,2022-08-23 20:13:53+00:00,[],https://api.github.com/licenses/mit
181,https://github.com/RDDinesh/MCU.git,2022-08-23 15:24:49+00:00,Design of MCU using Verilog,0,RDDinesh/MCU,528051170,Verilog,MCU,7,0,2022-08-24 10:26:28+00:00,[],None
182,https://github.com/javed-alam01/mips32bit-RISC-PIPELINE.git,2022-08-24 07:08:01+00:00,VERILOG IMPLEMENTATION OF MIPS32,0,javed-alam01/mips32bit-RISC-PIPELINE,528306325,Verilog,mips32bit-RISC-PIPELINE,3,0,2022-08-24 07:11:43+00:00,[],None
183,https://github.com/Cram963/Marcxip.git,2022-08-20 16:31:08+00:00,,0,Cram963/Marcxip,526980912,Verilog,Marcxip,7,0,2022-08-20 16:31:12+00:00,[],https://api.github.com/licenses/apache-2.0
184,https://github.com/EliaIfrach/Processing_Unit.git,2022-08-24 12:26:51+00:00,Final Project,1,EliaIfrach/Processing_Unit,528413454,Verilog,Processing_Unit,989869,0,2023-04-28 16:15:38+00:00,[],None
185,https://github.com/rahulgaud/Design-of-Asynchronous-FIFO.git,2022-08-19 13:19:10+00:00,,0,rahulgaud/Design-of-Asynchronous-FIFO,526615489,Verilog,Design-of-Asynchronous-FIFO,3,0,2022-08-19 13:20:48+00:00,[],None
186,https://github.com/kthomas488/verilog-codes.git,2022-08-20 06:21:36+00:00,,0,kthomas488/verilog-codes,526844076,Verilog,verilog-codes,2,0,2022-08-20 09:55:47+00:00,[],None
187,https://github.com/phuvg/rtl_sudoku_solver_by_backtracking.git,2022-08-18 17:35:12+00:00,,0,phuvg/rtl_sudoku_solver_by_backtracking,526312009,Verilog,rtl_sudoku_solver_by_backtracking,164,0,2022-08-18 18:04:13+00:00,[],None
188,https://github.com/pearlste/my_caravel_user_project.git,2022-08-18 19:34:46+00:00,,0,pearlste/my_caravel_user_project,526349462,Verilog,my_caravel_user_project,2229,0,2022-08-18 19:34:58+00:00,[],https://api.github.com/licenses/apache-2.0
189,https://github.com/sumanmahato027/Booth-Multiplier.git,2022-08-19 13:35:51+00:00,,0,sumanmahato027/Booth-Multiplier,526621371,Verilog,Booth-Multiplier,142,0,2022-08-19 13:38:35+00:00,[],None
190,https://github.com/SalmaKhaled95/user_proj_mul32.git,2022-08-19 15:27:59+00:00,,0,SalmaKhaled95/user_proj_mul32,526658952,Verilog,user_proj_mul32,2230,0,2022-08-19 15:28:12+00:00,[],https://api.github.com/licenses/apache-2.0
191,https://github.com/mattvenn/tinytapeout-test-invert.git,2022-08-31 18:56:42+00:00,,0,mattvenn/tinytapeout-test-invert,531219196,Verilog,tinytapeout-test-invert,9,0,2022-08-31 18:56:48+00:00,[],https://api.github.com/licenses/apache-2.0
192,https://github.com/Amreen-Kaur/FPGA-Workshop.git,2022-08-26 17:20:30+00:00,,0,Amreen-Kaur/FPGA-Workshop,529345973,Verilog,FPGA-Workshop,4160,0,2023-08-02 16:07:16+00:00,[],None
193,https://github.com/Amreen-Kaur/Processor-Design.git,2022-08-30 12:34:32+00:00,,0,Amreen-Kaur/Processor-Design,530649203,Verilog,Processor-Design,3,0,2023-08-02 16:08:48+00:00,[],None
194,https://github.com/cfib/trafficlight-fsm.git,2022-08-30 12:28:24+00:00,,1,cfib/trafficlight-fsm,530646978,Verilog,trafficlight-fsm,14,0,2022-08-30 12:28:28+00:00,[],https://api.github.com/licenses/apache-2.0
195,https://github.com/mguthaus/caravel_test_project.git,2022-08-31 18:27:24+00:00,,0,mguthaus/caravel_test_project,531209488,Verilog,caravel_test_project,2230,0,2022-08-31 18:27:40+00:00,[],https://api.github.com/licenses/apache-2.0
196,https://github.com/mattvenn/tinytapeout-marc.git,2022-08-31 13:20:50+00:00,,0,mattvenn/tinytapeout-marc,531094221,Verilog,tinytapeout-marc,12,0,2022-08-31 17:38:34+00:00,[],https://api.github.com/licenses/apache-2.0
197,https://github.com/AyaMedhat555/Hamming_Code.git,2022-08-26 20:45:04+00:00,,0,AyaMedhat555/Hamming_Code,529400100,Verilog,Hamming_Code,12241,0,2022-08-26 22:05:48+00:00,[],None
198,https://github.com/ArsenioDev/CustomSiliconTest.git,2022-08-30 18:39:10+00:00,Quick little custom silicon test clock divider and weird stuff. New feather to the hat,1,ArsenioDev/CustomSiliconTest,530784748,Verilog,CustomSiliconTest,14,0,2022-09-01 01:08:14+00:00,[],https://api.github.com/licenses/apache-2.0
199,https://github.com/wpi-ece574-f22/ho-hgcd.git,2022-08-31 01:05:12+00:00,,0,wpi-ece574-f22/ho-hgcd,530887691,Verilog,ho-hgcd,2,0,2022-08-31 01:12:52+00:00,[],None
200,https://github.com/evansm7/MR-sys.git,2022-08-29 21:55:43+00:00,Overall system for MR FPGA computer,0,evansm7/MR-sys,530406835,Verilog,MR-sys,54,0,2022-08-29 21:56:37+00:00,[],None
201,https://github.com/Jihal/Verilog-TicTacToe.git,2022-08-18 09:10:01+00:00,"A tic-tac-toe game made in Verilog using the DE10-Lite FPGA board by Intel. It utilizes the VGA port of the board along with the togglable switches, push buttons and seven segment displays to interact with the game. ",0,Jihal/Verilog-TicTacToe,526137713,Verilog,Verilog-TicTacToe,26,0,2022-08-18 10:09:09+00:00,[],None
202,https://github.com/RanaElGahawy/Simple-Calculator.git,2022-08-17 19:15:58+00:00,,0,RanaElGahawy/Simple-Calculator,525924290,Verilog,Simple-Calculator,136,0,2022-08-17 19:19:24+00:00,[],None
203,https://github.com/user-4314/flip-flop.git,2022-08-25 05:26:25+00:00,,0,user-4314/flip-flop,528706690,Verilog,flip-flop,4,0,2022-08-26 02:33:23+00:00,[],None
204,https://github.com/seungjoyea/Generic_FIR_Filter-generic-CPS-TAP-parallel.git,2022-08-31 06:20:53+00:00,,0,seungjoyea/Generic_FIR_Filter-generic-CPS-TAP-parallel,530958989,Verilog,Generic_FIR_Filter-generic-CPS-TAP-parallel,289,0,2022-09-05 07:58:17+00:00,[],None
205,https://github.com/sritech555/sritech555.git,2022-08-24 11:09:20+00:00,Config files for my GitHub profile.,0,sritech555/sritech555,528386490,Verilog,sritech555,5878,0,2024-01-15 12:25:26+00:00,"['config', 'github-config']",None
206,https://github.com/nikitasharma7/Car-Parking-System-using-Verilog.git,2022-08-14 04:06:00+00:00,,0,nikitasharma7/Car-Parking-System-using-Verilog,524569248,Verilog,Car-Parking-System-using-Verilog,90,0,2022-08-17 08:06:39+00:00,[],None
207,https://github.com/amit94302/IITB_RISC.git,2022-08-15 18:38:01+00:00,,0,amit94302/IITB_RISC,525098701,Verilog,IITB_RISC,907,0,2022-08-15 18:55:28+00:00,[],None
208,https://github.com/Aaaaaaakash/Linear-Feedback-Shift-Register.git,2022-08-14 10:41:39+00:00,,0,Aaaaaaakash/Linear-Feedback-Shift-Register,524641259,Verilog,Linear-Feedback-Shift-Register,6,0,2022-08-14 10:43:15+00:00,[],None
209,https://github.com/rahultanwar10/DaddaMultiplier.git,2022-08-19 16:15:07+00:00,,0,rahultanwar10/DaddaMultiplier,526673783,Verilog,DaddaMultiplier,226,0,2023-03-01 12:20:19+00:00,[],None
210,https://github.com/hossamfadeel/user_proj_mul32.git,2022-08-19 17:00:03+00:00,,0,hossamfadeel/user_proj_mul32,526687457,Verilog,user_proj_mul32,2229,0,2022-08-19 17:00:17+00:00,[],https://api.github.com/licenses/apache-2.0
211,https://github.com/MaryamMagdy570/MIPS.git,2022-08-19 17:17:06+00:00,,0,MaryamMagdy570/MIPS,526692790,Verilog,MIPS,22,0,2022-08-19 17:27:41+00:00,[],None
212,https://github.com/hisham-hariz/RISC-V-single-cycle-CPU.git,2022-08-21 07:07:22+00:00,Implementing all instructions of the RV32I set to make a single cycle CPU.,0,hisham-hariz/RISC-V-single-cycle-CPU,527131890,Verilog,RISC-V-single-cycle-CPU,12,0,2022-08-21 07:13:00+00:00,[],None
213,https://github.com/HALxmont/MixPix.git,2022-08-20 18:25:04+00:00,CHIPATON 2022. MixPix Design,2,HALxmont/MixPix,527007664,Verilog,MixPix,299547,0,2022-08-20 18:25:16+00:00,[],https://api.github.com/licenses/apache-2.0
214,https://github.com/Marwa2019uet/FYP_Matlab.git,2022-08-15 08:48:36+00:00,,0,Marwa2019uet/FYP_Matlab,524915326,Verilog,FYP_Matlab,95,0,2022-08-15 09:14:55+00:00,[],None
215,https://github.com/Yashwecan2/Asynchronous-FIFO.git,2022-08-17 17:17:15+00:00,,0,Yashwecan2/Asynchronous-FIFO,525888303,Verilog,Asynchronous-FIFO,728,0,2022-08-18 06:48:18+00:00,[],None
216,https://github.com/rportocarrero/Verilog.git,2022-08-18 02:53:21+00:00,,0,rportocarrero/Verilog,526032250,Verilog,Verilog,38,0,2022-08-21 22:57:49+00:00,[],None
217,https://github.com/dylanlimonlime/RISC-V-Processor.git,2022-08-18 14:43:28+00:00,,0,dylanlimonlime/RISC-V-Processor,526251248,Verilog,RISC-V-Processor,1023,0,2022-08-18 14:46:05+00:00,[],None
218,https://github.com/AkshayAnand2931/Verilog-Programming.git,2022-08-17 13:37:51+00:00,,0,AkshayAnand2931/Verilog-Programming,525807917,Verilog,Verilog-Programming,197,0,2022-08-17 13:59:21+00:00,[],None
219,https://github.com/SDZZGNDRC/Divider.git,2022-08-21 23:51:36+00:00,A 64*64-bits divider written in VerilogHDL.,0,SDZZGNDRC/Divider,527354636,Verilog,Divider,8,0,2022-08-23 07:30:32+00:00,[],None
220,https://github.com/ChinmaiVignyaKolli/Computer-Organization.git,2022-08-22 22:16:40+00:00,Lab files,0,ChinmaiVignyaKolli/Computer-Organization,527748733,Verilog,Computer-Organization,2986,0,2022-08-22 22:19:44+00:00,[],None
221,https://github.com/gsxgoldenlegendary/digital_electronics.git,2022-08-23 02:03:08+00:00,Source of USTC Digital Electromics Course ( Advanced Class).,0,gsxgoldenlegendary/digital_electronics,527797935,Verilog,digital_electronics,18,0,2023-01-27 19:33:34+00:00,"['digital-electronics', 'verilog-hdl']",None
222,https://github.com/Luis0922/Processador.git,2022-08-22 20:24:13+00:00,,0,Luis0922/Processador,527721122,Verilog,Processador,407,0,2022-08-22 20:29:44+00:00,[],None
223,https://github.com/eslamhussein20/16_Points_16BitFixedPoint_IFFT_Core.git,2022-08-22 14:25:02+00:00,,0,eslamhussein20/16_Points_16BitFixedPoint_IFFT_Core,527598963,Verilog,16_Points_16BitFixedPoint_IFFT_Core,171,0,2022-08-22 14:26:09+00:00,[],None
224,https://github.com/AdDraw/tinytapeout_demo.git,2022-08-29 18:50:15+00:00,,1,AdDraw/tinytapeout_demo,530351703,Verilog,tinytapeout_demo,14,0,2022-08-29 18:50:19+00:00,[],https://api.github.com/licenses/apache-2.0
225,https://github.com/alirafiqmalik/Bresenham-Circle-Algorithm-Hardware-Accelerator.git,2022-08-30 04:26:38+00:00,,0,alirafiqmalik/Bresenham-Circle-Algorithm-Hardware-Accelerator,530495164,Verilog,Bresenham-Circle-Algorithm-Hardware-Accelerator,16535,0,2023-06-27 20:10:03+00:00,[],None
226,https://github.com/github-fds/confmc.examples.2022.08.git,2022-08-30 04:12:05+00:00,CON-FMC Examples for Version 2020.06,2,github-fds/confmc.examples.2022.08,530491920,Verilog,confmc.examples.2022.08,11023,0,2022-09-02 02:24:27+00:00,[],None
227,https://github.com/user-tax-dev/site-static.git,2022-08-28 00:19:04+00:00,,0,user-tax-dev/site-static,529725242,Verilog,site-static,12,0,2022-08-28 00:47:14+00:00,[],None
228,https://github.com/AntrikshMehta/Adder_Analysis.git,2022-08-28 15:22:43+00:00,,0,AntrikshMehta/Adder_Analysis,529900251,Verilog,Adder_Analysis,131,0,2022-08-28 15:25:24+00:00,[],None
229,https://github.com/gregdavill/tinytapeout-verilog-fifo.git,2022-08-28 02:52:48+00:00,,1,gregdavill/tinytapeout-verilog-fifo,529746794,Verilog,tinytapeout-verilog-fifo,76,0,2022-08-28 02:54:55+00:00,[],https://api.github.com/licenses/apache-2.0
230,https://github.com/arafatasim/Implementing-Four-bit-computer-in-VerilogHDL.git,2022-08-30 19:40:01+00:00,"It is a four bit computer which can just do add, subtract ,multiplication and division",0,arafatasim/Implementing-Four-bit-computer-in-VerilogHDL,530804507,Verilog,Implementing-Four-bit-computer-in-VerilogHDL,98,0,2022-08-30 19:41:11+00:00,[],None
231,https://github.com/mkssoftware/M3-Music_Suite.git,2022-08-26 09:16:27+00:00,,0,mkssoftware/M3-Music_Suite,529191733,Verilog,M3-Music_Suite,23,0,2022-08-29 09:23:40+00:00,[],None
232,https://github.com/mattvenn/tinytapeout-test-straight.git,2022-08-31 18:51:37+00:00,,0,mattvenn/tinytapeout-test-straight,531217519,Verilog,tinytapeout-test-straight,10,0,2022-08-31 18:51:42+00:00,[],https://api.github.com/licenses/apache-2.0
233,https://github.com/Harshkadole/Code-converter-Arithmatic-block-and-Comparator.git,2022-08-25 11:31:38+00:00,code converters to convert a decimal to binary are designed at behavioral and structural level. BCD adder and subtractor are designed and results are displayed on 7-segment LED display. Comparator is designed to compare two single digit positive integer in BCD form.,0,Harshkadole/Code-converter-Arithmatic-block-and-Comparator,528821549,Verilog,Code-converter-Arithmatic-block-and-Comparator,10,0,2022-08-25 11:41:50+00:00,[],None
234,https://github.com/msaideroglu/user_proj_mul32.git,2022-08-19 12:24:24+00:00,,0,msaideroglu/user_proj_mul32,526597253,Verilog,user_proj_mul32,2230,0,2022-08-19 12:24:38+00:00,[],https://api.github.com/licenses/apache-2.0
235,https://github.com/manaam216/user_proj_mul32.git,2022-08-19 15:23:58+00:00,,0,manaam216/user_proj_mul32,526657604,Verilog,user_proj_mul32,2229,0,2022-08-19 15:24:11+00:00,[],https://api.github.com/licenses/apache-2.0
236,https://github.com/Arch1610/16-bit-dadda-vs-wallace.git,2022-08-18 19:47:58+00:00,,0,Arch1610/16-bit-dadda-vs-wallace,526353061,Verilog,16-bit-dadda-vs-wallace,3,0,2022-08-18 19:48:23+00:00,[],None
237,https://github.com/rahulgaud/RAM-Arbiter-design.git,2022-08-19 12:53:42+00:00,,0,rahulgaud/RAM-Arbiter-design,526606750,Verilog,RAM-Arbiter-design,4,0,2022-08-19 12:54:28+00:00,[],None
238,https://github.com/hermitgunner/Dadda_Multiplier.git,2022-08-19 13:34:17+00:00,,0,hermitgunner/Dadda_Multiplier,526620850,Verilog,Dadda_Multiplier,6,0,2022-08-19 13:35:24+00:00,[],None
239,https://github.com/sureshsugumar/tinytapeout_counter.git,2022-08-28 13:06:37+00:00,,1,sureshsugumar/tinytapeout_counter,529865044,Verilog,tinytapeout_counter,7,0,2022-08-28 13:06:40+00:00,[],https://api.github.com/licenses/apache-2.0
240,https://github.com/Rahma-Aly/Pipelined-Mips.git,2022-08-29 09:41:44+00:00,Implementation of a 5 Stage Pipelined MIPS processor using Verilog HDL ,0,Rahma-Aly/Pipelined-Mips,530155039,Verilog,Pipelined-Mips,16,0,2022-08-29 10:07:43+00:00,[],None
241,https://github.com/ericlewis/analogue-blinky.git,2022-08-28 22:20:10+00:00,,0,ericlewis/analogue-blinky,529993135,Verilog,analogue-blinky,484,0,2022-08-28 22:20:15+00:00,[],None
242,https://github.com/ALI11-2000/PDK_Files.git,2022-08-28 08:58:09+00:00,,0,ALI11-2000/PDK_Files,529810509,Verilog,PDK_Files,69,0,2022-08-28 09:05:42+00:00,[],None
243,https://github.com/damionfan/chisel-template.git,2022-08-24 06:03:19+00:00,,0,damionfan/chisel-template,528287433,Verilog,chisel-template,28,0,2022-08-29 00:52:48+00:00,[],https://api.github.com/licenses/unlicense
244,https://github.com/ratneshsinghai/Booth-Multiplier-design.git,2022-08-19 10:14:42+00:00,,0,ratneshsinghai/Booth-Multiplier-design,526558421,Verilog,Booth-Multiplier-design,141,0,2022-08-19 10:32:25+00:00,[],None
245,https://github.com/john-saber/user_proj_mul32.git,2022-08-19 15:55:42+00:00,,0,john-saber/user_proj_mul32,526667857,Verilog,user_proj_mul32,2229,0,2022-08-19 15:55:54+00:00,[],https://api.github.com/licenses/apache-2.0
246,https://github.com/shahzaibk23/tinytapeout-barrel-shifter.git,2022-08-27 19:00:43+00:00,This repo contains Barrel Shifter made via GUI through TinyTapeout for MPW7 Shuttle :D,1,shahzaibk23/tinytapeout-barrel-shifter,529672965,Verilog,tinytapeout-barrel-shifter,1343,0,2022-08-28 15:51:42+00:00,[],https://api.github.com/licenses/apache-2.0
247,https://github.com/WeiXXXXVVVV/FFT.git,2022-08-28 15:25:56+00:00,,0,WeiXXXXVVVV/FFT,529901177,Verilog,FFT,1309,0,2022-08-28 15:26:32+00:00,[],None
248,https://github.com/mark64/tinytapeout.git,2022-08-31 09:49:21+00:00,Template repository for my loadswitch ASIC!,1,mark64/tinytapeout,531022619,Verilog,tinytapeout,14,0,2022-08-31 09:49:26+00:00,[],https://api.github.com/licenses/apache-2.0
249,https://github.com/regymm/tinytapeout-mcpi.git,2022-08-31 11:59:02+00:00,,1,regymm/tinytapeout-mcpi,531063930,Verilog,tinytapeout-mcpi,84,0,2022-08-31 16:19:26+00:00,[],https://api.github.com/licenses/apache-2.0
250,https://github.com/wpi-ece574-f22/solve-ho-hgcd.git,2022-08-31 01:42:31+00:00,,0,wpi-ece574-f22/solve-ho-hgcd,530896420,Verilog,solve-ho-hgcd,3,0,2022-09-08 12:17:49+00:00,[],None
251,https://github.com/Mahi36/16-Bit-Wallace-Multiplier.git,2022-08-16 17:25:31+00:00,Wallace multiplier is 16-bit with one of the element. ,0,Mahi36/16-Bit-Wallace-Multiplier,525478380,Verilog,16-Bit-Wallace-Multiplier,3,0,2022-08-16 17:26:12+00:00,[],None
252,https://github.com/PE-611/SDRAM_IS42S16160B_DRIVER.git,2022-08-15 18:25:55+00:00,,0,PE-611/SDRAM_IS42S16160B_DRIVER,525094966,Verilog,SDRAM_IS42S16160B_DRIVER,11053,0,2022-08-15 18:29:23+00:00,[],None
253,https://github.com/DouglasWWolf/sidewinder_pcie_reference.git,2022-08-15 17:35:40+00:00,A reference design for PCIe on the Fidus Sidewinder,0,DouglasWWolf/sidewinder_pcie_reference,525079832,Verilog,sidewinder_pcie_reference,883,0,2022-08-15 17:36:43+00:00,[],None
254,https://github.com/jjaggi/temp.git,2022-08-17 15:58:44+00:00,,0,jjaggi/temp,525862977,Verilog,temp,11,0,2022-10-04 05:41:31+00:00,[],None
255,https://github.com/Mahi36/16-bit-Dadda-Multiplier.git,2022-08-16 13:19:07+00:00,This is 16-bit Dadda multiplier,0,Mahi36/16-bit-Dadda-Multiplier,525388163,Verilog,16-bit-Dadda-Multiplier,11,0,2022-08-16 13:21:49+00:00,[],None
256,https://github.com/MiSTer-devel/Arcade-Chameleon_MiSTer.git,2022-08-13 16:58:57+00:00,Jaleco Chameleon core for MiSTer FPGA,3,MiSTer-devel/Arcade-Chameleon_MiSTer,524458094,Verilog,Arcade-Chameleon_MiSTer,2586,0,2022-08-28 09:16:06+00:00,[],https://api.github.com/licenses/gpl-2.0
257,https://github.com/nimeshshedge/Wallace-Multiplier.git,2022-08-18 17:43:14+00:00,,0,nimeshshedge/Wallace-Multiplier,526314678,Verilog,Wallace-Multiplier,2,0,2022-08-18 17:43:38+00:00,[],None
258,https://github.com/yongatek/caravel_yonga-can-controller.git,2022-08-24 14:59:29+00:00,,1,yongatek/caravel_yonga-can-controller,528472518,Verilog,caravel_yonga-can-controller,70352,0,2022-08-29 12:21:31+00:00,[],https://api.github.com/licenses/apache-2.0
259,https://github.com/slysw4/Msc_project_Shilei_Wang.git,2022-08-25 22:11:38+00:00,,0,slysw4/Msc_project_Shilei_Wang,529033410,Verilog,Msc_project_Shilei_Wang,74656,0,2022-09-02 01:16:34+00:00,[],None
260,https://github.com/CaioRodrigues200/Sprint10_LASD.git,2022-08-27 02:11:56+00:00,Projeto para implementação de desencapsulador Ethernet em um processador MIPS modelado em FPGA,0,CaioRodrigues200/Sprint10_LASD,529457593,Verilog,Sprint10_LASD,2913,0,2022-08-27 02:12:04+00:00,[],https://api.github.com/licenses/mit
261,https://github.com/andars/universal-turing-machine-w5s8.git,2022-08-27 22:06:59+00:00,,1,andars/universal-turing-machine-w5s8,529706848,Verilog,universal-turing-machine-w5s8,49,0,2022-08-31 14:41:59+00:00,[],https://api.github.com/licenses/apache-2.0
262,https://github.com/mbalestrini/tinytapeout_rgb_lut_test.git,2022-08-28 00:05:13+00:00,,1,mbalestrini/tinytapeout_rgb_lut_test,529723511,Verilog,tinytapeout_rgb_lut_test,12,0,2022-08-28 00:05:17+00:00,[],https://api.github.com/licenses/apache-2.0
263,https://github.com/seungjoyea/FIR_Filter_Generic_TAP-Tap-only-.git,2022-08-30 05:14:19+00:00,,0,seungjoyea/FIR_Filter_Generic_TAP-Tap-only-,530506870,Verilog,FIR_Filter_Generic_TAP-Tap-only-,13,0,2022-08-31 06:20:26+00:00,[],None
264,https://github.com/argunda/tinytapeout_dualedgedetector.git,2022-08-27 16:43:35+00:00,,1,argunda/tinytapeout_dualedgedetector,529641907,Verilog,tinytapeout_dualedgedetector,12,0,2022-08-27 16:43:39+00:00,[],https://api.github.com/licenses/apache-2.0
265,https://github.com/goran-mahovlic/tinytapeout-verilog-piano.git,2022-08-30 21:06:03+00:00,,1,goran-mahovlic/tinytapeout-verilog-piano,530831510,Verilog,tinytapeout-verilog-piano,23,0,2022-08-31 19:42:33+00:00,[],https://api.github.com/licenses/apache-2.0
266,https://github.com/I-rocha/IMIPS.git,2022-08-22 18:56:59+00:00,Processador baseado em MIPS aplicado em FPGA,0,I-rocha/IMIPS,527695492,Verilog,IMIPS,5188,0,2022-08-22 19:03:52+00:00,[],None
267,https://github.com/FFGGSSJJ/PacketSpliter_w-P4.git,2022-08-22 09:11:46+00:00,Repo for Packet Splitter based on P4 language w/ Xilinx,0,FFGGSSJJ/PacketSpliter_w-P4,527489910,Verilog,PacketSpliter_w-P4,95,0,2022-09-22 07:57:23+00:00,[],https://api.github.com/licenses/mit
268,https://github.com/DylanKennyBoland/serialTX.git,2022-08-19 15:46:37+00:00,,0,DylanKennyBoland/serialTX,526664927,Verilog,serialTX,107,0,2022-08-19 16:03:53+00:00,[],None
269,https://github.com/rehannasar2002/Single-bit-Floating-Adder.git,2022-08-20 04:33:51+00:00,To design a 32 bit single precision floating point adder/subtractor on the IEEE 754 standard floating point representations.,0,rehannasar2002/Single-bit-Floating-Adder,526825478,Verilog,Single-bit-Floating-Adder,9,0,2022-10-02 19:54:45+00:00,[],None
270,https://github.com/user-tax/ui-static.git,2022-08-25 06:10:38+00:00,,0,user-tax/ui-static,528718220,Verilog,ui-static,66,0,2022-08-27 13:45:36+00:00,[],None
271,https://github.com/os-fpga/micro_benchmark_designs.git,2022-08-20 15:59:56+00:00,,0,os-fpga/micro_benchmark_designs,526973157,Verilog,micro_benchmark_designs,11330,0,2024-01-25 10:50:54+00:00,['sw'],None
272,https://github.com/iaakash47/VSDBabySoC.git,2022-08-13 10:31:49+00:00,"VSDBabySoC is a small mixed-signal SoC including PLL, DAC, and a RISCV-based processor named RVMYTH.",0,iaakash47/VSDBabySoC,524367410,Verilog,VSDBabySoC,11042,0,2022-08-13 11:45:27+00:00,[],https://api.github.com/licenses/apache-2.0
273,https://github.com/Himanshu5298/Shift_register.git,2022-08-14 08:31:10+00:00,8 bit right shift register,0,Himanshu5298/Shift_register,524614617,Verilog,Shift_register,4,0,2022-10-03 04:20:26+00:00,[],None
274,https://github.com/Kholoud-Ebrahim/MAC-Unit.git,2022-08-14 11:25:00+00:00,"Perform a behavioral simulation of the top-module design, and run the simulation for 5 cycles.",1,Kholoud-Ebrahim/MAC-Unit,524650736,Verilog,MAC-Unit,642,0,2022-09-30 10:17:40+00:00,[],None
275,https://github.com/tarunkanodia40/CS220-Verilog-Assignments.git,2022-08-15 13:11:48+00:00,This repository contains all assignments done under the course CS220: Computer Organization under Prof. Mainak Chaudhuri in 2020-21-II.,0,tarunkanodia40/CS220-Verilog-Assignments,524992349,Verilog,CS220-Verilog-Assignments,27,0,2022-08-15 13:13:38+00:00,[],None
276,https://github.com/yousefkhaled1750/UART-module.git,2022-08-15 11:10:12+00:00,,0,yousefkhaled1750/UART-module,524955463,Verilog,UART-module,214,0,2022-08-15 11:10:21+00:00,[],None
277,https://github.com/nbajay88/IITB_RISC.git,2022-08-15 18:49:15+00:00,Six stage Pipelined Achitecture,0,nbajay88/IITB_RISC,525102032,Verilog,IITB_RISC,917,0,2022-08-15 18:58:34+00:00,[],None
278,https://github.com/Ahmedsaied9/user_proj_mul32.git,2022-08-19 17:19:36+00:00,,0,Ahmedsaied9/user_proj_mul32,526693551,Verilog,user_proj_mul32,2229,0,2022-08-19 17:19:48+00:00,[],https://api.github.com/licenses/apache-2.0
279,https://github.com/maeb28490/user_proj_mul32.git,2022-08-19 17:12:50+00:00,,0,maeb28490/user_proj_mul32,526691338,Verilog,user_proj_mul32,2229,0,2022-08-19 17:13:02+00:00,[],https://api.github.com/licenses/apache-2.0
280,https://github.com/AudiHsieh/FPGA_flie.git,2022-08-22 14:04:01+00:00,之前實做的一些FPGA主題，將其記錄在此。,0,AudiHsieh/FPGA_flie,527590906,Verilog,FPGA_flie,17710,0,2022-08-23 07:02:29+00:00,[],None
281,https://github.com/Gautam-Sahay/8-x-8-Dadda-multiplier.git,2022-08-18 14:18:36+00:00,,0,Gautam-Sahay/8-x-8-Dadda-multiplier,526241902,Verilog,8-x-8-Dadda-multiplier,5961,0,2022-08-18 14:22:12+00:00,[],None
282,https://github.com/Chavareoa/Design-of-Dadda-Multiplier.git,2022-08-18 14:28:23+00:00,,0,Chavareoa/Design-of-Dadda-Multiplier,526245603,Verilog,Design-of-Dadda-Multiplier,479,0,2022-08-18 14:33:13+00:00,[],None
283,https://github.com/CPU-Mips-Project/InfraHard.git,2022-08-17 16:54:56+00:00,,2,CPU-Mips-Project/InfraHard,525882197,Verilog,InfraHard,766,0,2022-09-04 23:13:19+00:00,[],None
284,https://github.com/srivashivansh/Alarm-Clock-Project.git,2022-08-21 19:58:08+00:00,,0,srivashivansh/Alarm-Clock-Project,527313178,Verilog,Alarm-Clock-Project,11,0,2022-08-21 19:59:25+00:00,[],None
285,https://github.com/RAVITEJA153/Asynchronous_FIFO.git,2022-08-22 05:39:16+00:00,,0,RAVITEJA153/Asynchronous_FIFO,527426288,Verilog,Asynchronous_FIFO,3,0,2022-08-22 05:49:06+00:00,[],None
286,https://github.com/ratneshsinghai/DaddaMultiplierDesign.git,2022-08-17 07:03:13+00:00,,0,ratneshsinghai/DaddaMultiplierDesign,525676875,Verilog,DaddaMultiplierDesign,768,0,2022-08-17 07:10:13+00:00,[],None
287,https://github.com/sarath-003/LW_DES.git,2022-08-21 12:41:55+00:00,LightWeight DES Decryption,0,sarath-003/LW_DES,527203172,Verilog,LW_DES,38,0,2022-08-21 12:42:17+00:00,[],None
288,https://github.com/udayhasan-buet/user_proj_mul32.git,2022-08-19 16:50:27+00:00,This is for hands on session for basics2asic,0,udayhasan-buet/user_proj_mul32,526684484,Verilog,user_proj_mul32,2229,0,2022-08-19 16:50:40+00:00,[],https://api.github.com/licenses/apache-2.0
289,https://github.com/Ali-Sabir2/caravel_mul.git,2022-08-19 16:20:51+00:00,,0,Ali-Sabir2/caravel_mul,526675481,Verilog,caravel_mul,2230,0,2022-08-19 16:21:03+00:00,[],https://api.github.com/licenses/apache-2.0
290,https://github.com/Ali-Sabir2/caravel_multiplication.git,2022-08-19 16:26:12+00:00,,0,Ali-Sabir2/caravel_multiplication,526677165,Verilog,caravel_multiplication,2229,0,2022-08-19 16:26:24+00:00,[],https://api.github.com/licenses/apache-2.0
291,https://github.com/jaisanubhav/Asynchronous_FIFO.git,2022-08-19 12:37:28+00:00,,0,jaisanubhav/Asynchronous_FIFO,526601329,Verilog,Asynchronous_FIFO,7,0,2022-08-19 12:39:53+00:00,[],None
292,https://github.com/MahmoudH2000/Single_Cycle_MIPS_Processor.git,2022-08-15 17:42:55+00:00,"The project aims to implement a 32-bit single-cycle MIPS RISC (Reduced Instruction Set Computer) processor based on Harvard architecture using verilog HDL, the processor is simulated on ModelSim tool.",1,MahmoudH2000/Single_Cycle_MIPS_Processor,525082029,Verilog,Single_Cycle_MIPS_Processor,61,0,2022-08-15 17:49:39+00:00,[],None
293,https://github.com/akkuak07/COMPUTER_ARCHITECTURE_Project.git,2022-08-17 17:41:17+00:00,,0,akkuak07/COMPUTER_ARCHITECTURE_Project,525895742,Verilog,COMPUTER_ARCHITECTURE_Project,2222,0,2022-08-17 20:50:04+00:00,[],None
294,https://github.com/Mounika129/Dadda-Multipier.git,2022-08-16 10:30:28+00:00,,0,Mounika129/Dadda-Multipier,525332035,Verilog,Dadda-Multipier,9,0,2022-08-16 10:32:31+00:00,[],None
295,https://github.com/duty7351/MIPS.git,2022-08-26 04:14:56+00:00,MIPS practice designing with Verilog coding,0,duty7351/MIPS,529110887,Verilog,MIPS,4,0,2022-08-26 05:51:46+00:00,[],None
296,https://github.com/SHI-AI-TSAO/5-stages-pipeline-cpu-RISC-V-.git,2022-08-25 08:03:41+00:00,,0,SHI-AI-TSAO/5-stages-pipeline-cpu-RISC-V-,528752726,Verilog,5-stages-pipeline-cpu-RISC-V-,422,0,2022-08-25 08:18:34+00:00,[],None
297,https://github.com/ratneshsinghai/Asynchronous-FIFO-Design.git,2022-08-16 11:09:39+00:00,The objective of the project is to design a 32 x 16 Aysnchronous FIFO.,0,ratneshsinghai/Asynchronous-FIFO-Design,525344049,Verilog,Asynchronous-FIFO-Design,792,0,2022-08-16 11:34:28+00:00,[],None
298,https://github.com/SMSajadi99/TinyTapeout.git,2022-08-29 03:32:28+00:00,,0,SMSajadi99/TinyTapeout,530053460,Verilog,TinyTapeout,6,0,2022-08-29 03:32:32+00:00,[],https://api.github.com/licenses/apache-2.0
299,https://github.com/Giftwen/HDLBits-UCAS.git,2022-08-26 06:29:32+00:00,,2,Giftwen/HDLBits-UCAS,529142246,Verilog,HDLBits-UCAS,21,0,2022-08-26 07:17:13+00:00,[],None
300,https://github.com/alvinandtonic/Security-Engineering-Project.git,2022-08-30 02:53:06+00:00,,0,alvinandtonic/Security-Engineering-Project,530474625,Verilog,Security-Engineering-Project,16000,0,2022-12-29 03:56:03+00:00,[],None
301,https://github.com/mwelling/led-blaster.git,2022-08-30 04:13:38+00:00,Shift in and then display arbitrary sequence of 8 bytes on the LEDs,1,mwelling/led-blaster,530492266,Verilog,led-blaster,13,0,2022-08-30 04:13:43+00:00,[],https://api.github.com/licenses/apache-2.0
302,https://github.com/ShuminR/matrix_multiplication.git,2022-08-29 19:21:46+00:00,,0,ShuminR/matrix_multiplication,530362320,Verilog,matrix_multiplication,90,0,2022-08-29 19:31:01+00:00,[],None
303,https://github.com/evansm7/mic-hw.git,2022-08-29 19:40:34+00:00,Interconnect and I/O components/devices for the MR FPGA computer system,0,evansm7/mic-hw,530368309,Verilog,mic-hw,152,0,2022-08-29 19:42:58+00:00,[],None
304,https://github.com/wokwi/tt-game-of-life-cell-popcnt.git,2022-08-29 20:13:39+00:00,Tiny Tapeout Game of Life Cell Logic (population count),1,wokwi/tt-game-of-life-cell-popcnt,530378565,Verilog,tt-game-of-life-cell-popcnt,19,0,2022-08-29 20:13:45+00:00,[],https://api.github.com/licenses/apache-2.0
305,https://github.com/Kholoud-Ebrahim/Uart-Tx.git,2022-08-27 21:12:49+00:00,implementing Universal Asynchronous Receiver/Transmitter [TX],1,Kholoud-Ebrahim/Uart-Tx,529698043,Verilog,Uart-Tx,544,0,2022-09-30 10:17:57+00:00,[],None
306,https://github.com/MostafaMahmoud54/PIPELINED-MIPS.git,2022-08-28 21:49:38+00:00,,0,MostafaMahmoud54/PIPELINED-MIPS,529987833,Verilog,PIPELINED-MIPS,1587,0,2022-08-28 22:11:49+00:00,[],None
307,https://github.com/gregdavill/tinytapeout-wokwi-74xG198.git,2022-08-28 00:12:14+00:00,,2,gregdavill/tinytapeout-wokwi-74xG198,529724364,Verilog,tinytapeout-wokwi-74xG198,12,0,2022-08-28 00:12:18+00:00,[],https://api.github.com/licenses/apache-2.0
308,https://github.com/derhexenmeister/tinytapeout_pwm.git,2022-08-28 20:04:37+00:00,,1,derhexenmeister/tinytapeout_pwm,529967203,Verilog,tinytapeout_pwm,12,0,2022-08-28 20:04:41+00:00,[],https://api.github.com/licenses/apache-2.0
309,https://github.com/shubham-sai47/SPI_protocol.git,2022-08-30 09:19:30+00:00,SPI Communication Protocol with one Master and three Slaves,1,shubham-sai47/SPI_protocol,530582754,Verilog,SPI_protocol,3,0,2022-08-30 09:20:20+00:00,[],None
310,https://github.com/goran-mahovlic/wokwi-verilog-test.git,2022-08-30 13:43:04+00:00,,0,goran-mahovlic/wokwi-verilog-test,530675471,Verilog,wokwi-verilog-test,7,0,2022-08-30 13:43:13+00:00,[],https://api.github.com/licenses/apache-2.0
311,https://github.com/supersat/infinite-tape.git,2022-08-31 06:29:13+00:00,,0,supersat/infinite-tape,530961278,Verilog,infinite-tape,6,0,2022-08-31 06:29:17+00:00,[],https://api.github.com/licenses/apache-2.0
312,https://github.com/anm/nyasic-wokwi.git,2022-08-31 15:06:16+00:00,A nya nya ASIC,0,anm/nyasic-wokwi,531136364,Verilog,nyasic-wokwi,7,0,2022-08-31 15:39:44+00:00,[],https://api.github.com/licenses/apache-2.0
313,https://github.com/snapdensing/temp_optikal.git,2022-08-24 06:35:59+00:00,,0,snapdensing/temp_optikal,528296644,Verilog,temp_optikal,6,0,2022-08-24 06:38:29+00:00,[],None
314,https://github.com/ftrennepohl/SistemasDigitais.git,2022-08-23 21:08:01+00:00,,0,ftrennepohl/SistemasDigitais,528163275,Verilog,SistemasDigitais,4,0,2022-08-27 15:52:23+00:00,[],None
315,https://github.com/ShuminR/sine_wave.git,2022-08-30 17:12:01+00:00,,0,ShuminR/sine_wave,530754882,Verilog,sine_wave,14078,0,2022-08-30 17:17:03+00:00,[],None
316,https://github.com/rahultanwar10/SixStageRISCPipeline.git,2022-08-19 15:09:42+00:00,,1,rahultanwar10/SixStageRISCPipeline,526652957,Verilog,SixStageRISCPipeline,14,0,2022-12-13 16:14:38+00:00,[],None
317,https://github.com/bizoffermark/openlane_prj_eg.git,2022-08-19 14:32:08+00:00,,0,bizoffermark/openlane_prj_eg,526640506,Verilog,openlane_prj_eg,2229,0,2022-08-19 14:32:21+00:00,[],https://api.github.com/licenses/apache-2.0
318,https://github.com/srm1071/abc.git,2022-08-18 18:17:11+00:00,,0,srm1071/abc,526325835,Verilog,abc,253,0,2022-09-03 04:30:17+00:00,[],None
319,https://github.com/KhaledHAhmed/TRISC-Processor.git,2022-08-19 11:23:29+00:00,,0,KhaledHAhmed/TRISC-Processor,526578977,Verilog,TRISC-Processor,54800,0,2022-08-19 11:25:39+00:00,[],None
320,https://github.com/ShuminR/project.git,2022-08-17 20:59:36+00:00,,0,ShuminR/project,525952045,Verilog,project,6047,0,2022-08-29 19:30:13+00:00,[],None
321,https://github.com/Satyaki1911/Unsigned-8x8-bit-Dadda-multiplier.git,2022-08-18 04:03:21+00:00,,0,Satyaki1911/Unsigned-8x8-bit-Dadda-multiplier,526049216,Verilog,Unsigned-8x8-bit-Dadda-multiplier,3154,0,2022-08-18 04:04:04+00:00,[],None
322,https://github.com/pmkenned/spartan3_modules.git,2022-08-17 22:21:09+00:00,A collection of minimal examples of modules which use various components of the Spartan 3 FPGA board.,0,pmkenned/spartan3_modules,525971359,Verilog,spartan3_modules,55,0,2023-02-12 03:02:00+00:00,[],https://api.github.com/licenses/mit
323,https://github.com/minecraftdixit/uart-using-verilog.git,2022-08-18 11:31:39+00:00,uart implementation  using verilog with testbench,0,minecraftdixit/uart-using-verilog,526183455,Verilog,uart-using-verilog,242,0,2022-08-18 11:32:40+00:00,[],None
324,https://github.com/Rahulyadav121201/LFSR.git,2022-08-15 06:17:13+00:00,,0,Rahulyadav121201/LFSR,524875790,Verilog,LFSR,1,0,2022-08-28 11:05:24+00:00,[],None
325,https://github.com/SaraEfabless/Matt_walkthrough.git,2022-08-15 16:52:48+00:00,,0,SaraEfabless/Matt_walkthrough,525066582,Verilog,Matt_walkthrough,2230,0,2022-08-15 16:53:00+00:00,[],https://api.github.com/licenses/apache-2.0
326,https://github.com/SaraEfabless/Matt_walkthrough-test.git,2022-08-15 17:11:06+00:00,,0,SaraEfabless/Matt_walkthrough-test,525072255,Verilog,Matt_walkthrough-test,2229,0,2022-08-15 17:11:19+00:00,[],https://api.github.com/licenses/apache-2.0
327,https://github.com/Prajakta-S-Kamble/8x8-Dadda-Multiplier.git,2022-08-14 14:24:15+00:00,,0,Prajakta-S-Kamble/8x8-Dadda-Multiplier,524693139,Verilog,8x8-Dadda-Multiplier,273,0,2022-08-17 15:27:21+00:00,[],None
328,https://github.com/Manikanta-gurram/Asynchronous-Fifo.git,2022-08-15 13:34:39+00:00,"FIFOs are often used to safely pass data from one clock  domain to another clock domain. An asynchronous FIFO refers to a FIFO design  where data is written to a FIFO buffer from one clock domain and the same data is read from the FIFO buffer from another clock domain, where the two clock domains are  asynchronous to each other.",0,Manikanta-gurram/Asynchronous-Fifo,524999933,Verilog,Asynchronous-Fifo,1670,0,2022-08-15 13:39:10+00:00,[],None
329,https://github.com/hello-TW/Inplace_FFT_verilog.git,2022-08-19 06:20:42+00:00,,0,hello-TW/Inplace_FFT_verilog,526486241,Verilog,Inplace_FFT_verilog,262,0,2022-08-19 06:20:51+00:00,[],None
330,https://github.com/rehannasar2002/PWM-Shift-Register.git,2022-08-20 06:55:32+00:00,To design and implement an 8-bit shift register compatible with PWM Outputs using Verilog HDL,0,rehannasar2002/PWM-Shift-Register,526850580,Verilog,PWM-Shift-Register,5,0,2022-08-20 07:06:23+00:00,[],None
331,https://github.com/janethamrani/FPGAMatrixMultiplication.git,2022-08-17 19:20:13+00:00,,0,janethamrani/FPGAMatrixMultiplication,525925538,Verilog,FPGAMatrixMultiplication,9,0,2022-08-25 17:05:36+00:00,[],None
332,https://github.com/buzmeg/ext_test_structures.git,2022-08-22 01:45:11+00:00,Analog extraction test structures,0,buzmeg/ext_test_structures,527375119,Verilog,ext_test_structures,94,0,2022-08-22 01:45:16+00:00,[],https://api.github.com/licenses/apache-2.0
333,https://github.com/RuiGuo-2019/caravel_test_proj.git,2022-08-22 02:18:51+00:00,,0,RuiGuo-2019/caravel_test_proj,527382312,Verilog,caravel_test_proj,2229,0,2022-08-22 02:19:03+00:00,[],https://api.github.com/licenses/apache-2.0
334,https://github.com/david81982/Microprocessor-Architecture-CPU.git,2022-08-20 21:47:09+00:00,Final code for a Verilog designed RISC CPU,0,david81982/Microprocessor-Architecture-CPU,527046694,Verilog,Microprocessor-Architecture-CPU,3,0,2022-08-20 21:48:10+00:00,[],None
335,https://github.com/PE-611/SDRAM_DEBUG.git,2022-08-24 16:27:00+00:00,"SDRAM driver with test single write/read, auto precharge, auto refresh",0,PE-611/SDRAM_DEBUG,528505013,Verilog,SDRAM_DEBUG,8514,0,2022-08-24 16:30:22+00:00,[],None
336,https://github.com/HDO504/e200.git,2022-08-27 10:11:31+00:00,,0,HDO504/e200,529548928,Verilog,e200,73757,0,2022-08-27 10:13:59+00:00,[],None
337,https://github.com/ZhaoZiHao1998/RISCV.git,2022-08-29 01:45:03+00:00,,0,ZhaoZiHao1998/RISCV,530029816,Verilog,RISCV,32,0,2022-08-29 02:32:48+00:00,[],None
338,https://github.com/mennamohamed0207/Randomizer.git,2022-08-28 19:37:29+00:00,It is a project using verilog language.,0,mennamohamed0207/Randomizer,529961429,Verilog,Randomizer,7495,0,2022-08-28 19:41:40+00:00,[],None
339,https://github.com/H-S-S-11/caravel_AMS_2.git,2022-08-28 19:03:18+00:00,"Second MPW submission. To include a Gilbert cell, gm-C filter(s), ring oscillator, charge pump. Maybe some Flash cells, sample-and-hold circuit, and hardened digital blocks.",0,H-S-S-11/caravel_AMS_2,529953906,Verilog,caravel_AMS_2,252,0,2022-08-28 19:03:23+00:00,[],https://api.github.com/licenses/apache-2.0
340,https://github.com/aoayhan/Egg-Timer-Circuit.git,2022-08-23 09:08:50+00:00,Egg Timer Logic Circuit and Verilog Code,0,aoayhan/Egg-Timer-Circuit,527912962,Verilog,Egg-Timer-Circuit,13,0,2022-12-20 11:23:02+00:00,[],None
341,https://github.com/Ali-Sabir2/user_proj_dummy.git,2022-08-23 11:33:26+00:00,,0,Ali-Sabir2/user_proj_dummy,527960948,Verilog,user_proj_dummy,2230,0,2022-08-23 11:33:40+00:00,[],https://api.github.com/licenses/apache-2.0
342,https://github.com/rhsuanwang/ICLAB.git,2022-08-22 14:00:12+00:00,一些在iclab的筆記及作業,1,rhsuanwang/ICLAB,527589466,Verilog,ICLAB,14344,0,2022-08-22 14:20:19+00:00,[],None
343,https://github.com/WazaAbdulkadir/Debounce.git,2022-08-22 14:37:34+00:00,,0,WazaAbdulkadir/Debounce,527603831,Verilog,Debounce,26,0,2022-08-22 14:40:52+00:00,[],None
344,https://github.com/azzeloof/tinytapeout-counter.git,2022-08-29 19:53:00+00:00,,1,azzeloof/tinytapeout-counter,530372234,Verilog,tinytapeout-counter,7,0,2022-08-29 19:53:05+00:00,[],https://api.github.com/licenses/apache-2.0
345,https://github.com/Rahma-Aly/UART.git,2022-08-29 10:52:00+00:00,,0,Rahma-Aly/UART,530177383,Verilog,UART,28,0,2022-10-06 14:53:51+00:00,[],None
346,https://github.com/jainparas386/Digital-Watermarking.git,2022-08-29 08:42:43+00:00,,0,jainparas386/Digital-Watermarking,530135425,Verilog,Digital-Watermarking,4208,0,2022-08-29 08:59:17+00:00,[],None
347,https://github.com/urielcho/crypto_aes128.git,2022-08-30 01:25:54+00:00,,0,urielcho/crypto_aes128,530453688,Verilog,crypto_aes128,58773,0,2022-08-30 01:26:07+00:00,[],https://api.github.com/licenses/apache-2.0
348,https://github.com/eusanchez/Digitales-II.git,2022-08-31 02:38:33+00:00,Aqui adjunto mis tareas de digitales II,0,eusanchez/Digitales-II,530910161,Verilog,Digitales-II,327,0,2023-08-07 22:21:04+00:00,[],None
349,https://github.com/yanxwang/TINY-REDUCED-INSTRUCTION-SET-COMPUTER-TRISC-.git,2022-08-30 17:50:46+00:00,"Verilog, C, Windows, Altera DE1",0,yanxwang/TINY-REDUCED-INSTRUCTION-SET-COMPUTER-TRISC-,530768404,Verilog,TINY-REDUCED-INSTRUCTION-SET-COMPUTER-TRISC-,157,0,2022-08-30 17:54:44+00:00,[],None
350,https://github.com/Mahnoor-ismail01/tinytapeout-chromatic-3-to-8-Decoder.git,2022-08-30 18:44:39+00:00,,1,Mahnoor-ismail01/tinytapeout-chromatic-3-to-8-Decoder,530786546,Verilog,tinytapeout-chromatic-3-to-8-Decoder,145,0,2022-08-30 19:00:58+00:00,[],https://api.github.com/licenses/apache-2.0
351,https://github.com/jorden3502/eMemory_intern.git,2022-08-31 05:41:00+00:00,,0,jorden3502/eMemory_intern,530949386,Verilog,eMemory_intern,15,0,2022-08-31 07:18:22+00:00,[],None
352,https://github.com/andrewtkh1/EE2026_Verilog.git,2022-08-30 23:56:58+00:00,,1,andrewtkh1/EE2026_Verilog,530872555,Verilog,EE2026_Verilog,6076,0,2022-08-31 00:03:51+00:00,[],None
353,https://github.com/Amreen-Kaur/Communication-Protocols.git,2022-08-30 12:33:07+00:00,,0,Amreen-Kaur/Communication-Protocols,530648697,Verilog,Communication-Protocols,934,0,2022-12-23 08:25:10+00:00,[],None
354,https://github.com/BinhHo351/8_bit_timer.git,2022-08-24 01:19:30+00:00,,0,BinhHo351/8_bit_timer,528219585,Verilog,8_bit_timer,30,0,2022-08-24 02:11:43+00:00,[],None
355,https://github.com/MohanMoki/mohang.git,2022-08-25 12:44:50+00:00,,0,MohanMoki/mohang,528846933,Verilog,mohang,1,0,2022-08-25 12:53:47+00:00,[],None
356,https://github.com/anindita200/n_bit_ALU.git,2022-08-25 15:46:52+00:00,A parameterised n-bit ALU coded in Verilog and implemented on a Xilinx Spartan 7 FPGA,0,anindita200/n_bit_ALU,528917789,Verilog,n_bit_ALU,214,0,2022-08-25 15:48:12+00:00,[],https://api.github.com/licenses/gpl-3.0
357,https://github.com/RahulRanjann/Dsdl.git,2022-08-25 05:37:52+00:00,,0,RahulRanjann/Dsdl,528709418,Verilog,Dsdl,5050,0,2022-09-01 16:58:49+00:00,[],None
358,https://github.com/ganyunhan/ACOUSTIC-Camera.git,2022-08-26 06:42:21+00:00,An acoustic camera based on SPR-PHAT algorithm and a simple image processor,0,ganyunhan/ACOUSTIC-Camera,529145736,Verilog,ACOUSTIC-Camera,5682,0,2022-11-30 09:46:57+00:00,[],None
359,https://github.com/PriyanshKasyap/Loo-Up-Table-LUT-Optimization-for-Memory-Based-Computations.git,2022-08-15 22:38:15+00:00,,0,PriyanshKasyap/Loo-Up-Table-LUT-Optimization-for-Memory-Based-Computations,525158808,Verilog,Loo-Up-Table-LUT-Optimization-for-Memory-Based-Computations,1809,0,2022-08-18 19:02:20+00:00,[],None
360,https://github.com/Mounika129/Brentkung.git,2022-08-16 09:29:24+00:00,,0,Mounika129/Brentkung,525312726,Verilog,Brentkung,4,0,2022-08-16 09:54:32+00:00,[],None
361,https://github.com/nimeshshedge/Dadda-Multiplier.git,2022-08-18 17:41:12+00:00,,0,nimeshshedge/Dadda-Multiplier,526313979,Verilog,Dadda-Multiplier,9,0,2022-08-18 17:42:26+00:00,[],None
362,https://github.com/tejassatpalkar/FPGA-SuperMarioBros.git,2022-08-19 08:29:02+00:00,,0,tejassatpalkar/FPGA-SuperMarioBros,526524476,Verilog,FPGA-SuperMarioBros,40681,0,2022-08-19 08:37:18+00:00,[],None
363,https://github.com/KiprasR/universal-fpga-eth-server.git,2022-08-30 10:25:16+00:00,,0,KiprasR/universal-fpga-eth-server,530605058,Verilog,universal-fpga-eth-server,49,0,2022-08-30 11:34:41+00:00,[],None
364,https://github.com/qigel/MADDNESS_hardware.git,2022-08-30 08:36:07+00:00,,0,qigel/MADDNESS_hardware,530567818,Verilog,MADDNESS_hardware,6,0,2022-08-30 08:37:49+00:00,[],None
365,https://github.com/5hayanB/tinytapeout-bcd-counter.git,2022-08-31 16:49:55+00:00,A BCD Counter implemented with TinyTapeout,1,5hayanB/tinytapeout-bcd-counter,531175289,Verilog,tinytapeout-bcd-counter,13,0,2022-08-31 16:49:59+00:00,[],https://api.github.com/licenses/apache-2.0
366,https://github.com/khanasfar73/configs.git,2022-08-17 02:03:41+00:00,General config that I use across systems,0,khanasfar73/configs,525605918,Verilog,configs,10,0,2023-07-02 01:47:48+00:00,[],None
367,https://github.com/AGemstone/pfr-v.git,2022-08-23 08:02:23+00:00,A basic RISC-V 64bit processor,0,AGemstone/pfr-v,527890822,Verilog,pfr-v,979,0,2024-02-27 19:20:40+00:00,[],None
368,https://github.com/davidsiaw/atfsim.git,2022-08-21 19:07:51+00:00,,0,davidsiaw/atfsim,527302051,Verilog,atfsim,36,0,2022-08-21 19:08:20+00:00,[],None
369,https://github.com/feilongfl/chisel_gowin_mcu.git,2022-08-21 00:09:40+00:00,This project helps developers create FPGA based systems with zephyr rtos.The goal of this project is to build Zephyr RTOS in a way similar to Xilinx's PetaLinux workflow.,0,feilongfl/chisel_gowin_mcu,527067530,Verilog,chisel_gowin_mcu,3396,0,2023-02-02 23:30:25+00:00,"['chisel', 'fpga', 'zephyr']",https://api.github.com/licenses/apache-2.0
370,https://github.com/juan2175606/user_proj_mul32.git,2022-08-21 23:32:14+00:00,,0,juan2175606/user_proj_mul32,527351560,Verilog,user_proj_mul32,2230,0,2022-08-21 23:32:26+00:00,[],https://api.github.com/licenses/apache-2.0
371,https://github.com/bingo123122121/pipelineCPU-group.git,2022-08-29 06:32:43+00:00,,0,bingo123122121/pipelineCPU-group,530094683,Verilog,pipelineCPU-group,4533,0,2022-08-29 06:36:18+00:00,[],None
372,https://github.com/nwtechguy/tinytapeout_BCD_counter.git,2022-08-29 07:26:43+00:00,,1,nwtechguy/tinytapeout_BCD_counter,530111134,Verilog,tinytapeout_BCD_counter,12,0,2022-08-29 07:26:48+00:00,[],https://api.github.com/licenses/apache-2.0
373,https://github.com/nazaninys/ARM-Processor.git,2022-08-30 15:43:36+00:00,"A 32-bit processor with hazard detection, cache and SRAM",0,nazaninys/ARM-Processor,530723767,Verilog,ARM-Processor,9,0,2022-09-19 10:29:10+00:00,[],None
374,https://github.com/nikaemami/MIPS_Processor_MultiCycle.git,2022-08-26 10:43:21+00:00,Design and implementation of a MIPS processor with multi-cycle controller and datapath with Verilog.,0,nikaemami/MIPS_Processor_MultiCycle,529217616,Verilog,MIPS_Processor_MultiCycle,8,0,2022-09-16 20:44:41+00:00,[],None
375,https://github.com/manavshah-28/blinky-de0-nano.git,2022-08-26 16:24:35+00:00,,0,manavshah-28/blinky-de0-nano,529329163,Verilog,blinky-de0-nano,253,0,2022-08-30 06:28:57+00:00,[],None
376,https://github.com/TomFinet/risky-cpu.git,2022-08-31 10:10:27+00:00,A verilog RISC-V softcore CPU,0,TomFinet/risky-cpu,531029126,Verilog,risky-cpu,666,0,2023-09-14 21:35:50+00:00,[],None
377,https://github.com/javed-alam01/vedic-multiplier-using-verilog.git,2022-08-23 11:30:53+00:00,Active research over decades has lead to the emergence of Vedic Multipliers as one of the fastest and low power multiplier over traditional array and booth multipliers. Vedic Multiplier deals with a total of sixteen sutras or algorithms for predominantly logical operations. A large number of them have been proposed using Urdhava Tiryakbhyam sutra rendering them most efficient in terms of speed.,0,javed-alam01/vedic-multiplier-using-verilog,527960096,Verilog,vedic-multiplier-using-verilog,2,0,2022-08-23 11:35:41+00:00,[],None
378,https://github.com/anuratb/COAA_sem5.git,2022-08-23 11:54:22+00:00,,0,anuratb/COAA_sem5,527968189,Verilog,COAA_sem5,1667,0,2022-08-23 11:54:35+00:00,[],None
379,https://github.com/jdrosent/wrapped_mbsFSK.git,2022-08-31 21:02:31+00:00,ZeroToASIC Submission,0,jdrosent/wrapped_mbsFSK,531257706,Verilog,wrapped_mbsFSK,3933,0,2022-08-31 21:02:36+00:00,[],https://api.github.com/licenses/apache-2.0
380,https://github.com/ElectricPotato/tinytapeout-picture-printer-b.git,2022-08-31 21:21:24+00:00,,1,ElectricPotato/tinytapeout-picture-printer-b,531263030,Verilog,tinytapeout-picture-printer-b,72,0,2022-08-31 21:22:36+00:00,[],https://api.github.com/licenses/apache-2.0
381,https://github.com/naveen473/FIR_Filter.git,2022-08-19 07:49:08+00:00,"In signal processing, a finite impulse response (FIR) filter is a filter whose impulseresponse(or response to any finite length input) is of finite duration, because it settles to zero in finite time. This is in contrast to infinite impulse response (IIR) filters, which have internal feedback and may continue to respond indefinitely (usually decaying).",1,naveen473/FIR_Filter,526512052,Verilog,FIR_Filter,120,0,2022-08-19 08:47:50+00:00,[],None
382,https://github.com/bbttko/Tang9k-lcdled.git,2022-08-19 08:11:48+00:00,TangNano 9k with AT050TN33 Innolux lcdled,0,bbttko/Tang9k-lcdled,526519108,Verilog,Tang9k-lcdled,353,0,2022-09-07 06:26:19+00:00,['sipeed-tang-nano-9k'],None
383,https://github.com/213070060/PD.git,2022-08-19 10:29:45+00:00,,0,213070060/PD,526562841,Verilog,PD,105,0,2022-08-19 10:32:52+00:00,[],None
384,https://github.com/Mmazumde/VHDL-Verilog-code.git,2022-08-25 07:17:53+00:00,,0,Mmazumde/VHDL-Verilog-code,528738400,Verilog,VHDL-Verilog-code,2749,0,2022-08-25 07:19:24+00:00,[],None
385,https://github.com/jonchuaenzhe/ban-prototype.git,2022-08-25 14:53:32+00:00,Body Area Network system where a central node wirelessly powers an on-body ECG sensor through body-coupled power transfer while the sensor node sends back data via body-coupled data transmission,0,jonchuaenzhe/ban-prototype,528897188,Verilog,ban-prototype,20078,0,2022-08-25 15:09:45+00:00,[],None
386,https://github.com/NinaP21/cad_project.git,2022-08-27 13:49:40+00:00,"Project in ""CAD for Digital H/W (E-CAD)"" course 2019-2020",0,NinaP21/cad_project,529598628,Verilog,cad_project,6013,0,2023-01-19 23:38:02+00:00,[],None
387,https://github.com/brsf11/Minos.git,2022-08-13 16:14:51+00:00,A 4-stage-pipeline RV32I core written in verilog.,0,brsf11/Minos,524447776,Verilog,Minos,78,0,2022-08-13 16:15:24+00:00,[],None
388,https://github.com/30shubhvish/IITB_RISC.git,2022-08-15 18:46:06+00:00,,0,30shubhvish/IITB_RISC,525101101,Verilog,IITB_RISC,915,0,2022-08-15 18:56:39+00:00,[],None
389,https://github.com/nehaenkay/wallace_multiplier.git,2022-08-16 14:06:12+00:00,,0,nehaenkay/wallace_multiplier,525406692,Verilog,wallace_multiplier,933,0,2022-08-16 14:15:07+00:00,[],https://api.github.com/licenses/gpl-3.0
390,https://github.com/Mahi36/6-Stage-Pipelined-16-bit-RISC-Processor.git,2022-08-16 14:33:55+00:00,This project has been done under EE739-Processor Design Course at IIT Bombay.,0,Mahi36/6-Stage-Pipelined-16-bit-RISC-Processor,525417749,Verilog,6-Stage-Pipelined-16-bit-RISC-Processor,959,0,2022-08-16 14:35:29+00:00,[],None
391,https://github.com/luchLasarya/UART_TX_-_RX.git,2022-08-16 14:59:09+00:00,UART transmit and receive modules,0,luchLasarya/UART_TX_-_RX,525427907,Verilog,UART_TX_-_RX,3,0,2022-08-16 15:08:00+00:00,[],None
392,https://github.com/Endeavour-Innovations-Inc/Reaction-TIme-Monitor-with-Averaging-Filter-implemented-in-Verilog.git,2022-08-16 18:36:46+00:00,This repository stores verilog code for E_E 214 course of WSU. Only the most relevant of the assignments are stored here,0,Endeavour-Innovations-Inc/Reaction-TIme-Monitor-with-Averaging-Filter-implemented-in-Verilog,525501024,Verilog,Reaction-TIme-Monitor-with-Averaging-Filter-implemented-in-Verilog,8,0,2022-08-16 19:00:12+00:00,[],None
393,https://github.com/Tauqir-Ahmad/LUT-Optimization-for-Memory-Based-computations.git,2022-08-17 11:59:28+00:00,,0,Tauqir-Ahmad/LUT-Optimization-for-Memory-Based-computations,525770774,Verilog,LUT-Optimization-for-Memory-Based-computations,619,0,2022-08-17 12:03:00+00:00,[],None
394,https://github.com/WoolseyWorkshop/Article-Creating-A-Configurable-Multifunction-Logic-Gate-In-Verilog.git,2022-08-17 13:21:54+00:00,Creating A Configurable Multifunction Logic Gate In Verilog Article Resources,0,WoolseyWorkshop/Article-Creating-A-Configurable-Multifunction-Logic-Gate-In-Verilog,525801611,Verilog,Article-Creating-A-Configurable-Multifunction-Logic-Gate-In-Verilog,4,0,2022-08-17 13:30:42+00:00,"['digital-logic', 'verilog']",https://api.github.com/licenses/mit
395,https://github.com/JoelJassan/caravel_test.git,2022-08-18 16:00:45+00:00,,0,JoelJassan/caravel_test,526280173,Verilog,caravel_test,2230,0,2022-08-18 16:00:58+00:00,[],https://api.github.com/licenses/apache-2.0
396,https://github.com/mak-rram/Hardware-Implementation-of-AES.git,2022-08-20 18:57:41+00:00,High Speed and Low Power Implementation in Verilog,0,mak-rram/Hardware-Implementation-of-AES,527014540,Verilog,Hardware-Implementation-of-AES,51,0,2022-08-20 20:36:15+00:00,[],None
397,https://github.com/HarshadUgale5/Brent_Kung_Adder.git,2022-08-18 09:33:55+00:00,,0,HarshadUgale5/Brent_Kung_Adder,526145955,Verilog,Brent_Kung_Adder,4,0,2022-08-18 09:37:29+00:00,[],None
398,https://github.com/A-Sathvik/IEEE-754-Floating-Point-Operations.git,2022-08-19 13:17:55+00:00,,0,A-Sathvik/IEEE-754-Floating-Point-Operations,526615051,Verilog,IEEE-754-Floating-Point-Operations,180,0,2022-08-19 13:21:23+00:00,[],None
399,https://github.com/bizoffermark/user_proj_mul32.git,2022-08-19 14:32:32+00:00,,0,bizoffermark/user_proj_mul32,526640622,Verilog,user_proj_mul32,2229,0,2022-08-19 14:32:45+00:00,[],https://api.github.com/licenses/apache-2.0
400,https://github.com/alpsark/shooting_game_verilog.git,2022-08-15 08:05:37+00:00,,0,alpsark/shooting_game_verilog,524903458,,shooting_game_verilog,225284,0,2022-08-15 09:00:27+00:00,[],https://api.github.com/licenses/apache-2.0
401,https://github.com/Jihwan-Shin99/SDS_git_practice.git,2022-08-16 07:06:18+00:00,,0,Jihwan-Shin99/SDS_git_practice,525267836,Verilog,SDS_git_practice,1,0,2022-08-16 07:16:18+00:00,[],None
402,https://github.com/PIYUSHSINGHRANA/WALLACE_MULTIPLIER.git,2022-08-16 14:05:00+00:00,,0,PIYUSHSINGHRANA/WALLACE_MULTIPLIER,525406203,Verilog,WALLACE_MULTIPLIER,894,0,2022-08-16 14:11:36+00:00,[],https://api.github.com/licenses/gpl-3.0
403,https://github.com/Gyanendra17/ram.git,2022-08-13 16:04:38+00:00,,0,Gyanendra17/ram,524445468,Verilog,ram,2,0,2022-08-13 16:05:52+00:00,[],https://api.github.com/licenses/mit
404,https://github.com/knirajiitb/Brent-kung-adder.git,2022-08-17 06:13:17+00:00,16 bit brent kung adder,0,knirajiitb/Brent-kung-adder,525663056,Verilog,Brent-kung-adder,5,0,2022-08-17 06:18:37+00:00,[],None
405,https://github.com/Ali-Sabir2/Caravel_Ali_Update.git,2022-08-19 12:44:39+00:00,,0,Ali-Sabir2/Caravel_Ali_Update,526603695,Verilog,Caravel_Ali_Update,2229,0,2022-08-19 12:44:51+00:00,[],https://api.github.com/licenses/apache-2.0
406,https://github.com/LukJA/mpw_test_project.git,2022-08-19 21:42:41+00:00,,0,LukJA/mpw_test_project,526759134,Verilog,mpw_test_project,2230,0,2022-08-19 21:42:53+00:00,[],https://api.github.com/licenses/apache-2.0
407,https://github.com/sridharb21/Design-of-an-8-bit-Microcontroller-Unit.git,2022-08-25 13:57:39+00:00,,0,sridharb21/Design-of-an-8-bit-Microcontroller-Unit,528875111,Verilog,Design-of-an-8-bit-Microcontroller-Unit,4,0,2022-08-25 14:06:23+00:00,[],None
408,https://github.com/vjkr/KoggeStoneAdder.git,2022-08-29 09:58:05+00:00,,0,vjkr/KoggeStoneAdder,530160252,Verilog,KoggeStoneAdder,30,0,2022-08-29 09:59:46+00:00,[],None
409,https://github.com/nathancheek/tinytapeout-loop.git,2022-08-28 21:29:01+00:00,,1,nathancheek/tinytapeout-loop,529983965,Verilog,tinytapeout-loop,7,0,2022-08-28 21:29:05+00:00,[],https://api.github.com/licenses/apache-2.0
410,https://github.com/neilbluejohn/trial_flow.git,2022-08-24 11:44:43+00:00,,0,neilbluejohn/trial_flow,528398209,Verilog,trial_flow,2229,0,2022-08-24 11:44:56+00:00,[],https://api.github.com/licenses/apache-2.0
411,https://github.com/Jayanth-sharma/FIFO-design.git,2022-08-23 09:46:38+00:00,Designed 32-bit data Width Sync FIFO and Synchronizer.,0,Jayanth-sharma/FIFO-design,527926015,Verilog,FIFO-design,140,0,2022-10-27 11:01:24+00:00,['verilog-hdl'],https://api.github.com/licenses/bsd-2-clause
412,https://github.com/riser44/RISC-V-CPU.git,2022-08-24 02:51:14+00:00,,0,riser44/RISC-V-CPU,528241984,Verilog,RISC-V-CPU,38384,0,2022-08-24 02:51:38+00:00,[],https://api.github.com/licenses/apache-2.0
413,https://github.com/Jump-Wang-111/naive-mips.git,2022-08-24 03:34:13+00:00,a naive mips cpu from the shortsemester of BIT,0,Jump-Wang-111/naive-mips,528252229,Verilog,naive-mips,911,0,2022-08-24 03:42:39+00:00,[],https://api.github.com/licenses/mit
414,https://github.com/hn-on-fire/Digital-Systems.git,2022-08-27 10:15:22+00:00,,0,hn-on-fire/Digital-Systems,529549761,Verilog,Digital-Systems,2355,0,2022-09-17 09:59:33+00:00,[],None
415,https://github.com/janvlad/Sprint10_Jan.git,2022-08-27 04:49:19+00:00,,0,janvlad/Sprint10_Jan,529484474,Verilog,Sprint10_Jan,2320,0,2022-08-27 04:53:27+00:00,[],None
416,https://github.com/Pankaj-GoSu/M.tech-Project.git,2022-08-18 19:51:18+00:00,,0,Pankaj-GoSu/M.tech-Project,526353972,Verilog,M.tech-Project,19108,0,2022-08-18 20:00:07+00:00,[],None
417,https://github.com/naveen473/UART-Protocol.git,2022-08-19 04:44:43+00:00, UART is a hardware communication protocol that uses asynchronous serial communication with configurable speed. Asynchronous means there is no clock signal to synchronize the output bits from the transmitting device going to the receiving end.,0,naveen473/UART-Protocol,526465706,Verilog,UART-Protocol,691,0,2022-08-19 05:59:47+00:00,[],None
418,https://github.com/k1booshehri/MiniALU.git,2022-08-19 09:47:04+00:00,,0,k1booshehri/MiniALU,526549596,Verilog,MiniALU,47,0,2022-08-25 07:50:34+00:00,[],None
419,https://github.com/mwelling/figure-8.git,2022-08-30 04:42:03+00:00,,1,mwelling/figure-8,530499026,Verilog,figure-8,13,0,2022-08-30 04:42:07+00:00,[],https://api.github.com/licenses/apache-2.0
420,https://github.com/gsxgoldenlegendary/codh-labs.git,2022-08-23 02:12:46+00:00,Source of USTC CODH Experiment(Advanced Class).,0,gsxgoldenlegendary/codh-labs,527800309,Verilog,codh-labs,31,0,2023-01-27 19:33:34+00:00,"['computer-organization', 'verilog-hdl']",None
421,https://github.com/KairosXu/Computer-Organization.git,2022-08-23 03:13:04+00:00,南京航空航天大学计算机组成原理实验及课设,0,KairosXu/Computer-Organization,527814951,Verilog,Computer-Organization,461,0,2022-08-23 03:49:23+00:00,[],None
422,https://github.com/Ayman-Helal/Washing_Machine_Controller.git,2022-08-23 03:14:21+00:00,Finite state machine that handle the washing program for the washing machine.,0,Ayman-Helal/Washing_Machine_Controller,527815225,Verilog,Washing_Machine_Controller,2,0,2022-08-23 03:28:50+00:00,[],None
423,https://github.com/omarzalah/Automatic-Garage-Door-Controller-.git,2022-08-30 12:43:17+00:00,,0,omarzalah/Automatic-Garage-Door-Controller-,530652263,Verilog,Automatic-Garage-Door-Controller-,3,0,2022-08-30 12:44:22+00:00,[],None
424,https://github.com/Sirawit7205/tinytapeout-2G97-2G98.git,2022-08-30 15:34:28+00:00,TinyTapeout Design for a dual 1G97/1G98 configurable gates (plus extra 1G79/1G80 flip-flop),1,Sirawit7205/tinytapeout-2G97-2G98,530720209,Verilog,tinytapeout-2G97-2G98,15,0,2022-09-24 09:24:59+00:00,[],https://api.github.com/licenses/apache-2.0
425,https://github.com/WeiXXXXVVVV/LZ77-DECODER.git,2022-08-28 15:17:18+00:00,,0,WeiXXXXVVVV/LZ77-DECODER,529898809,Verilog,LZ77-DECODER,1,0,2022-08-28 15:29:37+00:00,[],None
426,https://github.com/tcptomato/tinytapeout.git,2022-08-27 20:25:30+00:00,,1,tcptomato/tinytapeout,529689538,Verilog,tinytapeout,17,0,2022-08-27 20:25:34+00:00,[],https://api.github.com/licenses/apache-2.0
427,https://github.com/hisham-hariz/NanoJpeg.git,2022-08-21 07:28:39+00:00,A hardware accelerated nanojpeg decoder,0,hisham-hariz/NanoJpeg,527135884,Verilog,NanoJpeg,65,0,2022-08-21 07:29:59+00:00,[],None
428,https://github.com/AsheshPangma/user_proj_mul32.git,2022-08-20 20:40:01+00:00,,0,AsheshPangma/user_proj_mul32,527034915,Verilog,user_proj_mul32,2229,0,2022-08-20 20:40:13+00:00,[],https://api.github.com/licenses/apache-2.0
429,https://github.com/Gautam-Sahay/Design-of-Asynchronous-FIFO-.git,2022-08-18 14:11:34+00:00,,0,Gautam-Sahay/Design-of-Asynchronous-FIFO-,526239309,Verilog,Design-of-Asynchronous-FIFO-,563,0,2022-08-18 14:14:21+00:00,[],None
430,https://github.com/MariamELhattab/RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System.git,2022-08-21 20:09:50+00:00,: It is responsible of receiving commands through UART receiver to do different system functions as register file reading/writing or doing some processing using ALU block and send result as well as CRC bits of result using 4 bytes frame through UART transmitter communication protocol,0,MariamELhattab/RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System,527315594,Verilog,RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System,868,0,2022-08-25 12:14:59+00:00,[],None
431,https://github.com/PoojithaBachu/Sequence-detector.git,2022-08-22 10:14:32+00:00,,0,PoojithaBachu/Sequence-detector,527510875,Verilog,Sequence-detector,73,0,2022-08-22 10:29:12+00:00,[],None
432,https://github.com/NainaJaiswal/Combating-Data-Leakage-Trojans-in-Commercial-and-ASIC-Applications-With-Time-Division-Multiplex--ing.git,2022-08-19 13:39:44+00:00,,0,NainaJaiswal/Combating-Data-Leakage-Trojans-in-Commercial-and-ASIC-Applications-With-Time-Division-Multiplex--ing,526622640,Verilog,Combating-Data-Leakage-Trojans-in-Commercial-and-ASIC-Applications-With-Time-Division-Multiplex--ing,10751,0,2022-08-22 17:59:22+00:00,[],None
433,https://github.com/ChinmaiVignyaKolli/Computer-Architecture.git,2022-08-22 22:27:32+00:00,Lab codes,0,ChinmaiVignyaKolli/Computer-Architecture,527751133,Verilog,Computer-Architecture,489,0,2022-08-22 22:29:13+00:00,[],None
434,https://github.com/utn-ba-rf-lab/pf-2019-hdl.git,2022-08-31 23:03:49+00:00,Repositorio para los desarrollos de software para la FPGA del PCB PF-2019 (Mercurial),1,utn-ba-rf-lab/pf-2019-hdl,531287294,Verilog,pf-2019-hdl,343,0,2022-09-01 10:44:36+00:00,['mercurial'],None
435,https://github.com/meterglost/HCMUT-CO1025-LogicDesignHDL.git,2022-08-23 15:36:13+00:00,Implement Tic-Tac-Toe game on FPGA with Verilog,0,meterglost/HCMUT-CO1025-LogicDesignHDL,528055623,Verilog,HCMUT-CO1025-LogicDesignHDL,18,0,2023-12-19 15:21:57+00:00,"['fpga', 'hcmut', 'verilog']",https://api.github.com/licenses/gpl-3.0
436,https://github.com/dazhuang17/AXI4_Lite_ip.git,2022-08-16 11:19:24+00:00,AXI4_Lite;slave side,2,dazhuang17/AXI4_Lite_ip,525347139,Verilog,AXI4_Lite_ip,506,0,2022-09-26 12:28:37+00:00,[],None
437,https://github.com/AbanoubSamir004/ALU_Verilog.git,2022-08-17 06:26:05+00:00,,0,AbanoubSamir004/ALU_Verilog,525666529,Verilog,ALU_Verilog,4,0,2022-08-17 06:27:28+00:00,[],None
438,https://github.com/pradumnk/Vending-Machine.git,2022-08-13 12:18:29+00:00,Vending Machine implemention in Verilog,0,pradumnk/Vending-Machine,524391117,Verilog,Vending-Machine,3,0,2022-08-18 04:18:18+00:00,[],None
439,https://github.com/YuseiIto/rpn-uart-verilog.git,2022-08-13 15:06:17+00:00,,0,YuseiIto/rpn-uart-verilog,524431280,Verilog,rpn-uart-verilog,42,0,2022-11-01 20:23:02+00:00,[],https://api.github.com/licenses/mit
440,https://github.com/matin-yousefzade/MiniComputer.git,2022-08-13 09:16:57+00:00,A fully RTL-based implemented computer system.,0,matin-yousefzade/MiniComputer,524352347,Verilog,MiniComputer,1994,0,2022-08-13 09:18:13+00:00,[],None
441,https://github.com/javed-alam01/Serial-UART.git,2022-08-23 18:43:53+00:00,"UART does not use clock then it is asynchronous communication. it is use in GSM, GPS and industrial machines.",0,javed-alam01/Serial-UART,528121535,Verilog,Serial-UART,1,0,2022-08-23 18:46:57+00:00,[],None
442,https://github.com/omarzalah/ALU-with-decoder-.git,2022-08-23 18:35:26+00:00,"ALU_TOP is the fundamental building block of the processor, which is responsible for carrying out different functions: - - Arithmetic functions through ARITHMETIC_UNIT block. - Logic functions through LOGIC_UNIT block. - Shift functions through SHIFT _UNIT block. - Comparison functions through CMP_UNIT block. And Decoder Unit responsibles for enable which Function to operate according to the highest Most significant 2-bit of the ALU_FUNC control bus ALU_FUNC [3:2].",0,omarzalah/ALU-with-decoder-,528118869,Verilog,ALU-with-decoder-,5,0,2022-08-23 18:36:27+00:00,[],None
443,https://github.com/ericsmi/tinytapeout_popcnt.git,2022-08-19 01:27:23+00:00,popcnt on the input switches,1,ericsmi/tinytapeout_popcnt,526424856,Verilog,tinytapeout_popcnt,7,0,2022-08-19 01:27:27+00:00,[],https://api.github.com/licenses/apache-2.0
444,https://github.com/chandrapavansai/KGP-RISC.git,2022-08-20 11:06:40+00:00,This project is a processor based on RISC instruction set architecture,0,chandrapavansai/KGP-RISC,526902360,Verilog,KGP-RISC,4760,0,2022-08-20 11:25:09+00:00,[],None
445,https://github.com/213070088/Design-of-Logarithmic-Adder-using-Brent-Kung-Architecture.git,2022-08-15 19:49:23+00:00,,0,213070088/Design-of-Logarithmic-Adder-using-Brent-Kung-Architecture,525118823,Verilog,Design-of-Logarithmic-Adder-using-Brent-Kung-Architecture,318,0,2022-08-15 19:50:27+00:00,[],None
446,https://github.com/yousefkhaled1750/Pipelined-MIPS.git,2022-08-15 23:23:46+00:00,Implemenation of a Pipelined 32-bit MIPS ,0,yousefkhaled1750/Pipelined-MIPS,525167669,Verilog,Pipelined-MIPS,878,0,2022-08-15 23:24:36+00:00,[],None
447,https://github.com/yamchanz/ECE411-PipelinedProcessor.git,2022-08-14 15:06:19+00:00,"A pipelined processor based on RISC-V architecture written in SystemVerilog that has fully functional fowarding and branch prediction. Additionally, as some advanced features we included the M-Extension as well as the Eviction Buffer. ",0,yamchanz/ECE411-PipelinedProcessor,524703597,Verilog,ECE411-PipelinedProcessor,20804,0,2022-08-14 16:03:21+00:00,[],None
448,https://github.com/srinivasgazula/Dadda-Multiplier.git,2022-08-16 14:03:16+00:00,,0,srinivasgazula/Dadda-Multiplier,525405513,Verilog,Dadda-Multiplier,84,0,2022-08-16 14:04:16+00:00,[],None
449,https://github.com/hermitgunner/asynchronous_fifo.git,2022-08-19 13:50:15+00:00,,0,hermitgunner/asynchronous_fifo,526626228,Verilog,asynchronous_fifo,5,0,2022-08-19 14:07:30+00:00,[],None
450,https://github.com/markuslyq/Megaman-vs-Mario.git,2022-08-19 16:12:03+00:00,,0,markuslyq/Megaman-vs-Mario,526672917,Verilog,Megaman-vs-Mario,17146,0,2022-08-20 11:43:52+00:00,[],None
451,https://github.com/jaisanubhav/Dadda_Multiplier.git,2022-08-19 12:32:10+00:00,,0,jaisanubhav/Dadda_Multiplier,526599639,Verilog,Dadda_Multiplier,18,0,2022-08-19 12:33:31+00:00,[],None
452,https://github.com/PriyanshKasyap/6-Stage-Pipelined-RISC-Processor.git,2022-08-19 10:43:50+00:00,,0,PriyanshKasyap/6-Stage-Pipelined-RISC-Processor,526567021,Verilog,6-Stage-Pipelined-RISC-Processor,891,0,2022-08-19 10:44:25+00:00,[],None
453,https://github.com/luanvt1/boom_rtl.git,2022-08-21 06:20:33+00:00,,0,luanvt1/boom_rtl,527123363,Verilog,boom_rtl,88709,0,2023-02-22 13:10:02+00:00,[],None
454,https://github.com/ChinmaiVignyaKolli/vlsi.git,2022-08-22 22:29:51+00:00,Codes,0,ChinmaiVignyaKolli/vlsi,527751598,Verilog,vlsi,38,0,2022-08-22 22:31:48+00:00,[],None
455,https://github.com/MuhammadMajiid/BasicBlocks.git,2022-08-24 22:54:20+00:00,"This Repo contains RTL codes for basic logic blocks (eg. Counter, mux … etc.), using Verilog HDL.",0,MuhammadMajiid/BasicBlocks,528619665,Verilog,BasicBlocks,50,0,2022-10-08 15:19:55+00:00,[],None
456,https://github.com/nikaemami/MIPS_Processor_SingleCycle.git,2022-08-26 10:39:59+00:00,Design and implementation of MIPS processor with a single-cycle datapath and controller with Verilog.,0,nikaemami/MIPS_Processor_SingleCycle,529216582,Verilog,MIPS_Processor_SingleCycle,7,0,2022-09-16 20:43:46+00:00,[],None
457,https://github.com/gustavozmprn/SD-final.git,2022-08-26 16:38:30+00:00,,0,gustavozmprn/SD-final,529333431,Verilog,SD-final,2,0,2022-08-26 16:40:20+00:00,[],None
458,https://github.com/jasteve4/super-duper-garbanzo.git,2022-08-26 12:28:30+00:00,,0,jasteve4/super-duper-garbanzo,529248833,Verilog,super-duper-garbanzo,12131,0,2022-08-26 12:28:43+00:00,[],https://api.github.com/licenses/apache-2.0
459,https://github.com/Deutschkiller/module_parser.git,2022-08-26 13:56:39+00:00,,0,Deutschkiller/module_parser,529278502,Verilog,module_parser,170,0,2022-08-29 06:02:37+00:00,[],None
460,https://github.com/ThiiagoMoura/Projeto-lasd_fechadura.git,2022-08-25 22:21:20+00:00,Desenvolvimento de uma fechadura eletrônica a partir de uma cpu mips,0,ThiiagoMoura/Projeto-lasd_fechadura,529035552,Verilog,Projeto-lasd_fechadura,7229,0,2022-08-25 22:23:27+00:00,[],None
461,https://github.com/AlyElruby/SQBM.git,2022-08-28 12:36:24+00:00,,0,AlyElruby/SQBM,529857707,Verilog,SQBM,1,0,2022-08-28 12:36:29+00:00,[],None
462,https://github.com/OmniaMohamed12/UART.git,2022-08-27 22:52:27+00:00,,0,OmniaMohamed12/UART,529713683,Verilog,UART,504,0,2022-08-30 22:54:34+00:00,[],None
463,https://github.com/derhexenmeister/tinytapeout_nco.git,2022-08-27 22:47:14+00:00,,1,derhexenmeister/tinytapeout_nco,529712920,Verilog,tinytapeout_nco,13,0,2022-08-27 22:47:17+00:00,[],https://api.github.com/licenses/apache-2.0
464,https://github.com/antittelbaugh/ECE-369A.git,2022-08-29 19:52:23+00:00,,0,antittelbaugh/ECE-369A,530372010,Verilog,ECE-369A,45,0,2022-08-29 22:09:29+00:00,[],None
465,https://github.com/bessembhiri/Digital_Electronics_adder_4bits.git,2022-08-30 11:45:16+00:00,,0,bessembhiri/Digital_Electronics_adder_4bits,530631723,Verilog,Digital_Electronics_adder_4bits,4,0,2022-08-30 12:00:13+00:00,[],None
466,https://github.com/DouglasWWolf/ipc_reference.git,2022-08-30 02:57:45+00:00,Reference design for FPGA IPC,0,DouglasWWolf/ipc_reference,530475699,Verilog,ipc_reference,500,0,2022-08-30 03:04:46+00:00,[],None
467,https://github.com/risingstar213/SuperTinyRiscv.git,2022-08-30 12:14:06+00:00,,0,risingstar213/SuperTinyRiscv,530641824,Verilog,SuperTinyRiscv,47,0,2022-08-31 15:46:24+00:00,[],None
468,https://github.com/Abhirajj23/5-stage-pipelined-RISC-processor.git,2022-08-27 21:23:06+00:00,,0,Abhirajj23/5-stage-pipelined-RISC-processor,529699785,Verilog,5-stage-pipelined-RISC-processor,11,0,2022-08-27 21:37:54+00:00,[],None
469,https://github.com/derhexenmeister/tinytapeout_updwnbcd.git,2022-08-28 02:10:57+00:00,,1,derhexenmeister/tinytapeout_updwnbcd,529740525,Verilog,tinytapeout_updwnbcd,12,0,2022-08-28 02:11:01+00:00,[],https://api.github.com/licenses/apache-2.0
470,https://github.com/Alexluwh/AD7683_interface.git,2022-08-29 13:35:06+00:00,"Ad7683 Verilog interface, from https://wiki.analog.com/resources/fpga/altera/bemicro/ad7683",0,Alexluwh/AD7683_interface,530234752,Verilog,AD7683_interface,478,0,2022-08-29 13:38:44+00:00,[],None
471,https://github.com/TomKeddie/tinytapeout-2022-1.git,2022-08-29 16:07:13+00:00,,1,TomKeddie/tinytapeout-2022-1,530294398,Verilog,tinytapeout-2022-1,14,0,2022-08-29 16:07:18+00:00,[],https://api.github.com/licenses/apache-2.0
472,https://github.com/madlee08/IE0523_project.git,2022-08-21 00:47:57+00:00,"Proyecto para el curso IE0523 Circuitos digitales II que consiste en diseñar en Verilog la lógica del Physical coding sublayer (PCS), una subcapa del modelo OSI de Ethernet de acuerdo con la cláusula 36 y 37 del estándar IEEE 802.3.",0,madlee08/IE0523_project,527072638,Verilog,IE0523_project,29,0,2022-08-21 00:54:50+00:00,[],None
473,https://github.com/alyssonkelvim/random-forest-gpu-maker.git,2022-08-22 23:31:35+00:00,,0,alyssonkelvim/random-forest-gpu-maker,527764579,Verilog,random-forest-gpu-maker,39341,0,2022-08-22 23:40:31+00:00,[],None
474,https://github.com/Yashwecan2/LUT-Optimization-for-Memory-Based-Computation.git,2022-08-18 06:54:40+00:00,,0,Yashwecan2/LUT-Optimization-for-Memory-Based-Computation,526092843,Verilog,LUT-Optimization-for-Memory-Based-Computation,448,0,2022-08-18 06:58:27+00:00,[],None
475,https://github.com/nimeshshedge/Asynchronous-FIFO.git,2022-08-18 17:45:14+00:00,,0,nimeshshedge/Asynchronous-FIFO,526315368,Verilog,Asynchronous-FIFO,686,0,2022-08-18 17:46:57+00:00,[],None
476,https://github.com/CyanGuo/Bus-Arbiter.git,2022-08-15 10:48:16+00:00,Different types of Bus Arbiter,0,CyanGuo/Bus-Arbiter,524949268,Verilog,Bus-Arbiter,3,0,2022-08-15 10:49:41+00:00,[],https://api.github.com/licenses/mit
477,https://github.com/Akansh-Agarwal/Asynchronous-FIFO.git,2022-08-15 17:10:29+00:00,,0,Akansh-Agarwal/Asynchronous-FIFO,525072065,Verilog,Asynchronous-FIFO,839,0,2022-08-15 17:14:12+00:00,[],None
478,https://github.com/Souhardya-Mondal/Implementation-of-8x8-Dadda-and-Wallace-Multipliers.git,2022-08-16 06:29:19+00:00,,0,Souhardya-Mondal/Implementation-of-8x8-Dadda-and-Wallace-Multipliers,525257094,Verilog,Implementation-of-8x8-Dadda-and-Wallace-Multipliers,1377,0,2022-08-16 06:30:50+00:00,[],None
479,https://github.com/sg05060/SDS_HEIR_PROJECT_.git,2022-08-16 07:21:09+00:00,,0,sg05060/SDS_HEIR_PROJECT_,525272276,Verilog,SDS_HEIR_PROJECT_,747,0,2022-08-16 16:04:58+00:00,[],None
480,https://github.com/Subhadip-Sen/Asynchronous_Fifo.git,2022-08-18 09:28:32+00:00,,0,Subhadip-Sen/Asynchronous_Fifo,526144155,Verilog,Asynchronous_Fifo,573,0,2022-08-18 09:29:29+00:00,[],None
481,https://github.com/duyquan27/Digital-Clock.git,2022-08-24 16:39:04+00:00,using FPGA - Verilog,0,duyquan27/Digital-Clock,528509383,Verilog,Digital-Clock,64,0,2022-08-26 09:35:44+00:00,[],None
482,https://github.com/fluxfocus/jdtt-logic1.git,2022-08-29 13:17:56+00:00,submisstion for tiny tapeout,1,fluxfocus/jdtt-logic1,530227877,Verilog,jdtt-logic1,10,0,2022-08-29 13:18:01+00:00,[],https://api.github.com/licenses/apache-2.0
483,https://github.com/mrubin02/processor.git,2022-08-30 23:08:53+00:00,,0,mrubin02/processor,530862627,Verilog,processor,6045,0,2023-01-01 00:17:32+00:00,[],None
484,https://github.com/burtyb/srld.git,2022-08-30 18:42:19+00:00,,1,burtyb/srld,530785717,Verilog,srld,13,0,2022-08-30 18:42:23+00:00,[],https://api.github.com/licenses/apache-2.0
485,https://github.com/DuaneSand/primefact.git,2022-08-30 22:18:51+00:00,"TinyTapeout example: Find largest factor of odd input number, else is prime",0,DuaneSand/primefact,530851360,Verilog,primefact,7,0,2022-08-30 22:18:55+00:00,[],https://api.github.com/licenses/apache-2.0
486,https://github.com/toybuilder/learn-tinytapeout.git,2022-08-31 16:03:04+00:00,Learning about Tiny Tapeout,1,toybuilder/learn-tinytapeout,531157924,Verilog,learn-tinytapeout,15,0,2022-08-31 16:03:08+00:00,[],https://api.github.com/licenses/apache-2.0
487,https://github.com/mametarou967/nios2pio.git,2022-08-15 09:59:41+00:00,,0,mametarou967/nios2pio,524935802,Verilog,nios2pio,621,0,2022-08-15 11:51:59+00:00,[],None
488,https://github.com/b06611033/Pipelined-CPU-L1-Data-Cache.git,2022-08-16 00:51:11+00:00,,0,b06611033/Pipelined-CPU-L1-Data-Cache,525184316,Verilog,Pipelined-CPU-L1-Data-Cache,3671,0,2022-08-16 04:51:08+00:00,[],None
489,https://github.com/Jagadeesh100100/Asynchronous-read-and-write-FIFO.git,2022-08-15 11:55:37+00:00,Self Projects that I had implementd MTech 2nd year.,0,Jagadeesh100100/Asynchronous-read-and-write-FIFO,524968606,Verilog,Asynchronous-read-and-write-FIFO,126,0,2022-08-15 16:25:29+00:00,[],None
490,https://github.com/Dhruv-Kumar-1/AES.git,2022-08-14 11:25:37+00:00,,0,Dhruv-Kumar-1/AES,524650886,Verilog,AES,3,0,2022-08-14 11:28:03+00:00,[],None
491,https://github.com/manijith/DADDA_MULTILPLIER.git,2022-08-15 19:30:58+00:00,,0,manijith/DADDA_MULTILPLIER,525113750,Verilog,DADDA_MULTILPLIER,462,0,2022-08-15 19:32:50+00:00,[],None
492,https://github.com/lifpnc/svb_vit74_drv.git,2022-08-16 09:15:07+00:00,"Для наших файлов и никому больше, пока не доделаем",0,lifpnc/svb_vit74_drv,525307953,Verilog,svb_vit74_drv,4288,0,2022-08-16 21:18:56+00:00,[],None
493,https://github.com/Mahi36/16-Bit-MIPS.git,2022-08-16 15:07:02+00:00,This is MIPS for single cycle implementation that the processor with CPI=1,0,Mahi36/16-Bit-MIPS,525430782,Verilog,16-Bit-MIPS,458,0,2022-08-16 15:08:21+00:00,[],None
494,https://github.com/flyingpig14/AD5761R.git,2022-08-19 02:42:30+00:00,ad5761r_verilog_fpga,0,flyingpig14/AD5761R,526440573,Verilog,AD5761R,1409,0,2022-08-19 02:44:37+00:00,[],None
495,https://github.com/tigerfan/pcm.git,2022-08-19 02:07:52+00:00,spinalhdl telemetry frame synchronizer,0,tigerfan/pcm,526433204,Verilog,pcm,31,0,2023-04-19 13:56:27+00:00,[],https://api.github.com/licenses/gpl-3.0
496,https://github.com/Arch1610/Asynchronous-FIFO.git,2022-08-18 19:51:42+00:00,,0,Arch1610/Asynchronous-FIFO,526354102,Verilog,Asynchronous-FIFO,1,0,2022-08-18 19:52:12+00:00,[],None
497,https://github.com/rahulgaud/6-stage-Pipelined-RISC-Processor.git,2022-08-19 09:59:20+00:00,,0,rahulgaud/6-stage-Pipelined-RISC-Processor,526553447,Verilog,6-stage-Pipelined-RISC-Processor,11,0,2022-08-19 10:05:19+00:00,[],None
498,https://github.com/Ali-Sabir2/user_proj_mul32.git,2022-08-19 16:07:02+00:00,,0,Ali-Sabir2/user_proj_mul32,526671417,Verilog,user_proj_mul32,2230,0,2022-08-19 16:07:14+00:00,[],https://api.github.com/licenses/apache-2.0
499,https://github.com/MariamFarouk26/MIPS.git,2022-08-19 17:49:25+00:00,,0,MariamFarouk26/MIPS,526702375,Verilog,MIPS,74,0,2022-08-19 17:52:36+00:00,[],None
500,https://github.com/ammar89/user_proj_mul32.git,2022-08-19 15:36:38+00:00,project for the basics to asics workshop,0,ammar89/user_proj_mul32,526661736,Verilog,user_proj_mul32,2229,0,2022-08-19 15:36:50+00:00,[],https://api.github.com/licenses/apache-2.0
501,https://github.com/SakshamKamath/A-Simple-FPU.git,2022-08-25 08:48:34+00:00,,0,SakshamKamath/A-Simple-FPU,528767103,Verilog,A-Simple-FPU,9,0,2022-08-25 08:55:12+00:00,[],None
502,https://github.com/javed-alam01/Real-time-digital-clock.git,2022-08-26 06:00:38+00:00," I want to share Verilog code for a simple Digital clock. The module has two inputs - A Clock at 1 Hz frequency and an active high reset. There are three outputs to tell the time - seconds,minutes and hours.",0,javed-alam01/Real-time-digital-clock,529134702,Verilog,Real-time-digital-clock,1,0,2022-08-26 06:03:52+00:00,[],None
503,https://github.com/AidanMedcalf/caravel_analog_synth.git,2022-08-23 19:56:21+00:00,Analog synthesizer,0,AidanMedcalf/caravel_analog_synth,528143102,Verilog,caravel_analog_synth,94,0,2022-08-23 19:56:26+00:00,[],https://api.github.com/licenses/apache-2.0
504,https://github.com/pkuligowski/tinytapeout_tmr.git,2022-08-28 14:44:41+00:00,Simple Triple Modular Redundancy (TMR) project for tinytapeout submission,1,pkuligowski/tinytapeout_tmr,529890357,Verilog,tinytapeout_tmr,9,0,2022-08-28 15:04:35+00:00,[],https://api.github.com/licenses/apache-2.0
505,https://github.com/coralmw/tinytapeout-css-feedback.git,2022-08-28 19:45:16+00:00,,1,coralmw/tinytapeout-css-feedback,529963034,Verilog,tinytapeout-css-feedback,38,0,2022-08-31 11:56:05+00:00,[],https://api.github.com/licenses/apache-2.0
506,https://github.com/OmarAshour8/Feedback-ADC-using-Veriloga.git,2022-08-28 15:26:11+00:00,"This is a verilog (a) Code that was used to help in simulating and design an analog integrated circuit. It is used to calibrate the output termination impedance and voltage swing of a 10 Gb/s driver across process, voltage, and temperature variations.",0,OmarAshour8/Feedback-ADC-using-Veriloga,529901237,Verilog,Feedback-ADC-using-Veriloga,3,0,2022-08-28 15:26:51+00:00,[],None
507,https://github.com/ArslanNust/Raptor.git,2022-08-30 04:54:07+00:00,Basic And Gate Raptor,0,ArslanNust/Raptor,530501842,Verilog,Raptor,16,0,2022-08-30 10:13:37+00:00,[],https://api.github.com/licenses/gpl-3.0
508,https://github.com/gregdavill/tinytapeout-wokwi-74x1G00.git,2022-08-28 00:00:04+00:00,,1,gregdavill/tinytapeout-wokwi-74x1G00,529722845,Verilog,tinytapeout-wokwi-74x1G00,12,0,2022-08-28 00:00:08+00:00,[],https://api.github.com/licenses/apache-2.0
509,https://github.com/r-a-hoggarth/tinytapeGaloisLFSR.git,2022-08-29 16:29:23+00:00,Testing Matt Venn's 'Tiny Tapeout' with a simple LFSR ,1,r-a-hoggarth/tinytapeGaloisLFSR,530302408,Verilog,tinytapeGaloisLFSR,13,0,2022-08-29 16:29:27+00:00,[],https://api.github.com/licenses/apache-2.0
510,https://github.com/gr33nka/pl-RISC-V-for-the-course.git,2022-08-23 15:14:50+00:00,Pipeline RISC-V processor for use in the course,0,gr33nka/pl-RISC-V-for-the-course,528047272,Verilog,pl-RISC-V-for-the-course,18,0,2022-08-23 15:16:50+00:00,[],https://api.github.com/licenses/gpl-3.0
511,https://github.com/Ali-Sabir2/caravel_walk.git,2022-08-19 11:35:00+00:00,,0,Ali-Sabir2/caravel_walk,526582412,Verilog,caravel_walk,2230,0,2022-08-19 11:35:12+00:00,[],https://api.github.com/licenses/apache-2.0
512,https://github.com/user-4314/operator.git,2022-08-24 14:42:51+00:00,,0,user-4314/operator,528465987,Verilog,operator,9,0,2022-08-26 02:34:43+00:00,[],None
513,https://github.com/nurirfansyah/caravel_analogits0.git,2022-08-21 02:29:01+00:00,Caravel ITS MPW 7 ,0,nurirfansyah/caravel_analogits0,527086616,Verilog,caravel_analogits0,2229,0,2022-08-21 02:29:14+00:00,[],https://api.github.com/licenses/apache-2.0
514,https://github.com/akrambonny/MIPS_Single_Cycle_Microprocessor.git,2022-08-22 07:37:23+00:00,,0,akrambonny/MIPS_Single_Cycle_Microprocessor,527459862,Verilog,MIPS_Single_Cycle_Microprocessor,140,0,2022-08-22 07:39:15+00:00,[],None
515,https://github.com/jonathanhurtado/proyec_prueba.git,2022-08-22 15:33:59+00:00,prueba para mpw7,0,jonathanhurtado/proyec_prueba,527625663,Verilog,proyec_prueba,45842,0,2022-08-22 15:34:12+00:00,[],https://api.github.com/licenses/apache-2.0
516,https://github.com/udayhasan-buet/user_proj_adder.git,2022-08-22 03:33:19+00:00,Test_project : adder,0,udayhasan-buet/user_proj_adder,527398994,Verilog,user_proj_adder,2229,0,2022-08-22 03:33:31+00:00,[],https://api.github.com/licenses/apache-2.0
517,https://github.com/Ali-Sabir2/caravel_user_mul32.git,2022-08-22 08:53:31+00:00,,0,Ali-Sabir2/caravel_user_mul32,527483814,Verilog,caravel_user_mul32,2229,0,2022-08-22 08:53:43+00:00,[],https://api.github.com/licenses/apache-2.0
518,https://github.com/OIhroDIL/miltyi_disp.git,2022-08-22 09:02:15+00:00,,0,OIhroDIL/miltyi_disp,527486697,Verilog,miltyi_disp,2,0,2022-08-22 09:03:29+00:00,[],None
519,https://github.com/nitinmukeshgithub/Verilog.git,2022-08-22 17:13:51+00:00,Verilog Codes of standard  block,0,nitinmukeshgithub/Verilog,527661383,Verilog,Verilog,265,0,2023-02-04 21:36:35+00:00,[],https://api.github.com/licenses/gpl-3.0
520,https://github.com/Harshkadole/Bus-Arbiter.git,2022-08-25 11:24:48+00:00,"Bus Arbiter with  two request and two grant signals. When two units request at the same time, one request is given higher priority.",0,Harshkadole/Bus-Arbiter,528819290,Verilog,Bus-Arbiter,1,0,2022-08-25 11:26:04+00:00,[],None
521,https://github.com/DanielBarrios2190/mul32_example.git,2022-08-23 22:28:54+00:00,,0,DanielBarrios2190/mul32_example,528182833,Verilog,mul32_example,2229,0,2022-08-23 22:29:07+00:00,[],https://api.github.com/licenses/apache-2.0
522,https://github.com/nikaemami/MIPS_Processor_Pipeline.git,2022-08-26 10:45:25+00:00,Design and implementation of MIPS processor with a pipeline architecure in datapath and controller with Verilog.,0,nikaemami/MIPS_Processor_Pipeline,529218188,Verilog,MIPS_Processor_Pipeline,12,0,2022-09-16 20:45:11+00:00,[],None
523,https://github.com/ringokin/sprint-10-LASD.git,2022-08-27 01:57:20+00:00,,1,ringokin/sprint-10-LASD,529455103,Verilog,sprint-10-LASD,4572,0,2022-08-27 06:37:35+00:00,[],None
524,https://github.com/ongzhihong/EE2026-Digital-Design-Project.git,2022-08-16 04:16:29+00:00,,0,ongzhihong/EE2026-Digital-Design-Project,525227644,Verilog,EE2026-Digital-Design-Project,3327,0,2022-08-16 04:16:41+00:00,[],None
525,https://github.com/amanshaikh45/4-bit-Dadda_Multiplier.git,2022-08-24 07:58:34+00:00,It is 4x4 Dadda Multiplier code in Verilog,0,amanshaikh45/4-bit-Dadda_Multiplier,528322672,Verilog,4-bit-Dadda_Multiplier,1,0,2022-08-24 08:00:36+00:00,[],None
526,https://github.com/ShuminR/project2.git,2022-08-22 20:02:12+00:00,,0,ShuminR/project2,527714896,Verilog,project2,342,0,2022-08-22 22:10:16+00:00,[],None
527,https://github.com/PriyanshKasyap/Design-of-8-x-8-Dadda-Wallace-Multiplier.git,2022-08-16 17:03:08+00:00,,0,PriyanshKasyap/Design-of-8-x-8-Dadda-Wallace-Multiplier,525471178,Verilog,Design-of-8-x-8-Dadda-Wallace-Multiplier,2306,0,2022-08-16 17:07:20+00:00,[],None
528,https://github.com/be1ieve/accomdemy_rv32i_will.git,2022-08-14 02:20:08+00:00,,0,be1ieve/accomdemy_rv32i_will,524553217,Verilog,accomdemy_rv32i_will,19,0,2022-08-24 07:48:33+00:00,[],https://api.github.com/licenses/unlicense
529,https://github.com/luca-rassi/EEA-25.git,2022-08-25 21:10:09+00:00,Material from the laboratory classes of the discipline of EEA-25 2022.2,0,luca-rassi/EEA-25,529019046,Verilog,EEA-25,49881,0,2023-08-14 23:39:45+00:00,[],None
530,https://github.com/grecuandrei/VLSI-design.git,2022-08-25 15:32:01+00:00,VLSI design Course,0,grecuandrei/VLSI-design,528912093,Verilog,VLSI-design,4596,0,2022-08-25 15:35:15+00:00,[],https://api.github.com/licenses/mit
531,https://github.com/Kunzro/Reinforcement_Learning_for_Logic_Optimization.git,2022-08-24 10:34:57+00:00,A project aimed to improve logic synthesis by applying reinforcement learning to the problem.,0,Kunzro/Reinforcement_Learning_for_Logic_Optimization,528375266,Verilog,Reinforcement_Learning_for_Logic_Optimization,13898,0,2023-02-11 09:48:26+00:00,[],https://api.github.com/licenses/bsd-3-clause
532,https://github.com/Harshkadole/Asynchronous_First-in-first-out-stack.git,2022-08-25 11:59:09+00:00,,0,Harshkadole/Asynchronous_First-in-first-out-stack,528830442,Verilog,Asynchronous_First-in-first-out-stack,2,0,2022-08-25 12:01:19+00:00,[],None
533,https://github.com/Gokulkrishna-c/MIPS-32-Pipeline-proc.git,2022-08-18 05:43:13+00:00,,0,Gokulkrishna-c/MIPS-32-Pipeline-proc,526072509,Verilog,MIPS-32-Pipeline-proc,7,0,2022-08-18 05:44:04+00:00,[],None
534,https://github.com/Akansh-Agarwal/-Look-up-Table-LUT-Optimization-for-Memory-Based-Computations.git,2022-08-15 14:19:44+00:00,,0,Akansh-Agarwal/-Look-up-Table-LUT-Optimization-for-Memory-Based-Computations,525015619,Verilog,-Look-up-Table-LUT-Optimization-for-Memory-Based-Computations,2284,0,2022-08-15 14:23:47+00:00,[],None
535,https://github.com/islam-nasser0/Design-UART-module-tx-rx-synthesis-in-design-compiler.git,2022-08-21 20:05:23+00:00,,0,islam-nasser0/Design-UART-module-tx-rx-synthesis-in-design-compiler,527314686,Verilog,Design-UART-module-tx-rx-synthesis-in-design-compiler,273,0,2022-08-22 19:29:05+00:00,[],None
536,https://github.com/LStrying/MIPS_CPU.git,2022-08-21 10:45:22+00:00,A 5-stage pipeline MIPS CPU.,0,LStrying/MIPS_CPU,527176783,Verilog,MIPS_CPU,1368,0,2022-09-10 10:50:46+00:00,[],https://api.github.com/licenses/mit
537,https://github.com/nimeshshedge/Brent-Kung-Adder.git,2022-08-18 17:20:26+00:00,,0,nimeshshedge/Brent-Kung-Adder,526307270,Verilog,Brent-Kung-Adder,2,0,2022-08-18 17:29:14+00:00,[],None
538,https://github.com/Aryan-333/DSDL.git,2022-08-22 11:22:30+00:00,,0,Aryan-333/DSDL,527532706,Verilog,DSDL,46,0,2022-11-17 08:29:56+00:00,[],None
539,https://github.com/Souhardya-Mondal/Design-of-Asynchronous-FIFO.git,2022-08-16 13:56:22+00:00,,0,Souhardya-Mondal/Design-of-Asynchronous-FIFO,525402861,Verilog,Design-of-Asynchronous-FIFO,563,0,2022-08-16 13:56:54+00:00,[],None
540,https://github.com/Himanshu5298/Ring-Counter.git,2022-08-17 04:45:59+00:00,8 Bit Ring Counter,0,Himanshu5298/Ring-Counter,525642446,Verilog,Ring-Counter,3,0,2022-10-03 04:20:28+00:00,[],None
541,https://github.com/ZeyadZaki/user_proj_mul32.git,2022-08-19 11:52:31+00:00,,0,ZeyadZaki/user_proj_mul32,526587739,Verilog,user_proj_mul32,2229,0,2022-08-19 11:52:44+00:00,[],https://api.github.com/licenses/apache-2.0
542,https://github.com/PriyanshKasyap/Asynchronous-FIFO.git,2022-08-19 14:45:01+00:00,,0,PriyanshKasyap/Asynchronous-FIFO,526644819,Verilog,Asynchronous-FIFO,713,0,2022-08-19 14:45:56+00:00,[],None
543,https://github.com/cy384/seven-segment-with-adder.git,2022-08-31 22:12:53+00:00,a little four bit adder with seven segment decoder,1,cy384/seven-segment-with-adder,531275798,Verilog,seven-segment-with-adder,12,0,2022-08-31 22:12:59+00:00,[],https://api.github.com/licenses/apache-2.0
544,https://github.com/kishor-pamar/sudoku_solver.git,2022-08-29 15:03:23+00:00,,0,kishor-pamar/sudoku_solver,530270373,Verilog,sudoku_solver,4,0,2022-08-29 15:05:07+00:00,[],None
545,https://github.com/ianloic/tinytapeout-1.git,2022-08-29 16:59:20+00:00,,1,ianloic/tinytapeout-1,530312816,Verilog,tinytapeout-1,13,0,2022-08-29 16:59:24+00:00,[],https://api.github.com/licenses/apache-2.0
546,https://github.com/mengstr/TinyTapeout1.git,2022-08-31 08:13:37+00:00,Playground/Tests for TinyTapeout,0,mengstr/TinyTapeout1,530992098,Verilog,TinyTapeout1,7,0,2022-08-31 08:13:41+00:00,[],https://api.github.com/licenses/apache-2.0
547,https://github.com/hosein-mokarian/tinytapeout_counter_3to8_decoder.git,2022-08-30 18:19:04+00:00,,1,hosein-mokarian/tinytapeout_counter_3to8_decoder,530778022,Verilog,tinytapeout_counter_3to8_decoder,7,0,2022-08-30 18:19:08+00:00,[],https://api.github.com/licenses/apache-2.0
548,https://github.com/Naderatef10/Pipelined-Mips.git,2022-08-30 00:40:45+00:00,,0,Naderatef10/Pipelined-Mips,530443440,Verilog,Pipelined-Mips,20,0,2022-08-30 00:43:02+00:00,[],None
549,https://github.com/DaveyPocket/chaser.git,2022-08-27 20:50:03+00:00,,1,DaveyPocket/chaser,529694121,Verilog,chaser,13,0,2022-08-27 20:50:07+00:00,[],https://api.github.com/licenses/apache-2.0
550,https://github.com/benlaurie/twistedringcounter.git,2022-08-28 11:43:17+00:00,,1,benlaurie/twistedringcounter,529845293,Verilog,twistedringcounter,7,0,2022-08-28 11:43:21+00:00,[],https://api.github.com/licenses/apache-2.0
551,https://github.com/raha96/tinycharacters-locked.git,2022-08-28 20:00:08+00:00,"A simple, logic-locked seven segment display controller designed for TinyTapeout, using Wokwi. ",1,raha96/tinycharacters-locked,529966264,Verilog,tinycharacters-locked,7,0,2022-08-28 20:00:12+00:00,[],https://api.github.com/licenses/apache-2.0
552,https://github.com/kushazsehgal/CoA.git,2022-08-17 10:15:25+00:00,,0,kushazsehgal/CoA,525737408,Verilog,CoA,100959,0,2023-05-18 19:21:08+00:00,[],None
553,https://github.com/amit94302/async_fifo.git,2022-08-16 12:06:19+00:00,,0,amit94302/async_fifo,525362355,Verilog,async_fifo,780,0,2022-08-16 12:07:10+00:00,[],None
554,https://github.com/Farbod-Siahkali/Computer-Architecture-Projects.git,2022-08-15 18:48:10+00:00,Computer Architecture Course Projects,0,Farbod-Siahkali/Computer-Architecture-Projects,525101742,Verilog,Computer-Architecture-Projects,2400,0,2022-09-16 11:29:46+00:00,"['computer-architecture', 'divider', 'mips', 'multi-cycle-processor']",None
555,https://github.com/manish-pp/IITB_RISC.git,2022-08-15 18:32:46+00:00,,0,manish-pp/IITB_RISC,525097110,Verilog,IITB_RISC,3015,0,2022-08-15 18:41:10+00:00,[],None
556,https://github.com/213070088/16-x-8-Asynchronous-FIFO.git,2022-08-15 16:31:32+00:00,,0,213070088/16-x-8-Asynchronous-FIFO,525060113,Verilog,16-x-8-Asynchronous-FIFO,305,0,2022-08-15 16:36:31+00:00,[],None
557,https://github.com/rfadc/asic.git,2022-08-15 19:43:25+00:00,design flow,0,rfadc/asic,525117163,Verilog,asic,45841,0,2022-08-15 19:43:37+00:00,[],https://api.github.com/licenses/apache-2.0
558,https://github.com/jinhyeok1003/GIT_PRACTICE.git,2022-08-16 07:06:18+00:00,,0,jinhyeok1003/GIT_PRACTICE,525267840,Verilog,GIT_PRACTICE,1,0,2022-08-16 07:16:21+00:00,[],None
559,https://github.com/Mounika129/Pipilined-RISC-Processor.git,2022-08-19 07:00:16+00:00,,0,Mounika129/Pipilined-RISC-Processor,526497462,Verilog,Pipilined-RISC-Processor,1032,0,2022-08-19 07:04:34+00:00,[],None
560,https://github.com/spammeLoop/spammeLoop.git,2022-08-19 11:10:22+00:00,Config files for my GitHub profile.,0,spammeLoop/spammeLoop,526575015,Verilog,spammeLoop,1,0,2023-05-04 18:57:34+00:00,"['config', 'github-config']",None
561,https://github.com/KirolosMa/FPGA_flow.git,2022-08-19 15:20:57+00:00,,0,KirolosMa/FPGA_flow,526656664,Verilog,FPGA_flow,2582,0,2023-03-20 22:44:24+00:00,[],None
562,https://github.com/MariamFarouk26/washing-machine.git,2022-08-19 17:54:39+00:00,,0,MariamFarouk26/washing-machine,526703899,Verilog,washing-machine,3,0,2022-08-19 17:55:12+00:00,[],None
563,https://github.com/MadejSzymon/de10standard_FPGA_Invaders.git,2022-08-19 15:59:58+00:00,Game created for a DE10 Standard FPGA Development Kit,0,MadejSzymon/de10standard_FPGA_Invaders,526669144,Verilog,de10standard_FPGA_Invaders,1993,0,2022-08-19 16:03:52+00:00,[],None
564,https://github.com/Gaurav138-Nan/FIFO-using-Verilog.git,2022-08-21 09:38:53+00:00,,0,Gaurav138-Nan/FIFO-using-Verilog,527162259,Verilog,FIFO-using-Verilog,24,0,2022-08-23 18:07:33+00:00,[],None
565,https://github.com/bessembhiri/Digital_Electronics_SupEqual10.git,2022-08-30 12:01:52+00:00,,0,bessembhiri/Digital_Electronics_SupEqual10,530637457,Verilog,Digital_Electronics_SupEqual10,3,0,2022-08-30 12:07:16+00:00,[],None
566,https://github.com/omarzalah/LFSR.git,2022-08-30 12:39:45+00:00,Linear Feedback Shift Register  Introduction: -  What is LFSR?  - The LFSR is a shift register that has some of its outputs together in exclusive-OR or exclusive-NOR configurations to form a feedback path. - The initial content of the shift register is referred to as seed. (Note: any value can be a seed except all 0’s to avoid lookup state). - Lookup state is the state in which shift register values are zeros all the time while shifting and xoring). - Feedbacks can be comprising of XOR gates or XNOR gates,0,omarzalah/LFSR,530650997,Verilog,LFSR,3,0,2022-08-30 12:40:18+00:00,[],None
567,https://github.com/bessembhiri/DigitalElectronics_Adder4_Decimal_Display.git,2022-08-30 12:55:11+00:00,,0,bessembhiri/DigitalElectronics_Adder4_Decimal_Display,530656855,Verilog,DigitalElectronics_Adder4_Decimal_Display,14,0,2022-08-30 12:59:20+00:00,[],None
568,https://github.com/KoalaYuFeng/Net4FPGAs.git,2022-08-29 11:38:32+00:00,,0,KoalaYuFeng/Net4FPGAs,530192474,Verilog,Net4FPGAs,1106,0,2022-10-10 07:21:00+00:00,[],None
569,https://github.com/fluxfocus/tttest1.git,2022-08-30 13:11:37+00:00,,0,fluxfocus/tttest1,530663190,Verilog,tttest1,10,0,2022-08-30 13:11:41+00:00,[],https://api.github.com/licenses/apache-2.0
570,https://github.com/deXter969/BCD-adder-subtractor-Verilog.git,2022-08-28 13:41:22+00:00,,0,deXter969/BCD-adder-subtractor-Verilog,529873673,Verilog,BCD-adder-subtractor-Verilog,104,0,2022-08-28 13:49:02+00:00,[],None
571,https://github.com/erbert-gadelha/-IF674-grupo7-2022-2-.git,2022-08-28 00:30:12+00:00,,0,erbert-gadelha/-IF674-grupo7-2022-2-,529726619,Verilog,-IF674-grupo7-2022-2-,2144,0,2022-09-02 18:53:57+00:00,[],None
572,https://github.com/nemo2255/32-bits-single-cycle-MIPS.git,2022-08-28 11:59:49+00:00,,0,nemo2255/32-bits-single-cycle-MIPS,529849133,Verilog,32-bits-single-cycle-MIPS,2083,0,2022-08-28 12:13:42+00:00,[],None
573,https://github.com/Spaced-Cowboy/gowin-pll-ddr3-BrianHG.git,2022-08-28 02:37:15+00:00,Match up the signaling to match the PLL in BrianHG's DDR3 controller,1,Spaced-Cowboy/gowin-pll-ddr3-BrianHG,529744390,Verilog,gowin-pll-ddr3-BrianHG,108,0,2022-08-28 02:41:16+00:00,[],None
574,https://github.com/Venkateshkgp400/IIRfilter-.git,2022-08-27 11:57:12+00:00,,0,Venkateshkgp400/IIRfilter-,529571982,Verilog,IIRfilter-,2,0,2022-08-27 12:06:47+00:00,[],None
575,https://github.com/skariuki98/Computer-System-Design-Verilog.git,2022-08-13 21:13:20+00:00,Verilog projects implemented using an Anvyl Spartan-6 FPGA board and Xilinx ISE,0,skariuki98/Computer-System-Design-Verilog,524509242,Verilog,Computer-System-Design-Verilog,6489,0,2022-08-15 23:11:17+00:00,[],https://api.github.com/licenses/unlicense
576,https://github.com/dylanlimonlime/Space-Invaders.git,2022-08-18 14:57:38+00:00,,0,dylanlimonlime/Space-Invaders,526256761,Verilog,Space-Invaders,4609,0,2022-08-18 14:59:50+00:00,[],None
577,https://github.com/mablinov/caravel_hello_world.git,2022-08-18 18:13:13+00:00,,0,mablinov/caravel_hello_world,526324595,Verilog,caravel_hello_world,45844,0,2022-08-18 18:13:25+00:00,[],https://api.github.com/licenses/apache-2.0
578,https://github.com/vjkr/icarussimulator.git,2022-08-25 06:30:36+00:00,,0,vjkr/icarussimulator,528724129,Verilog,icarussimulator,13,0,2022-08-25 09:19:52+00:00,[],None
579,https://github.com/Aaaaaaakash/Restoring_Square_Root-calculator.git,2022-08-14 10:35:06+00:00,,0,Aaaaaaakash/Restoring_Square_Root-calculator,524639678,Verilog,Restoring_Square_Root-calculator,2,0,2022-08-14 10:36:45+00:00,[],None
580,https://github.com/mabrains/temperature_sensor_mpw7.git,2022-08-15 09:10:16+00:00,Temperature Sensor on MPW7,0,mabrains/temperature_sensor_mpw7,524921556,Verilog,temperature_sensor_mpw7,94,0,2022-08-15 09:10:22+00:00,[],https://api.github.com/licenses/apache-2.0
581,https://github.com/msaideroglu/clear.git,2022-08-21 15:35:49+00:00,,0,msaideroglu/clear,527248701,Verilog,clear,2230,0,2022-08-21 15:36:01+00:00,[],https://api.github.com/licenses/apache-2.0
582,https://github.com/AhmedSherif-12/Low-Power-Configurable-Multi-Clock-Digital-System.git,2022-08-22 10:26:03+00:00,: It is responsible of receiving commands through UART receiver to do different system functions as register file reading/writing or doing some processing using ALU block and send result as well as CRC bits of result using 4 bytes frame through UART transmitter communication protocol.,0,AhmedSherif-12/Low-Power-Configurable-Multi-Clock-Digital-System,527514655,Verilog,Low-Power-Configurable-Multi-Clock-Digital-System,2157,0,2022-08-22 10:39:54+00:00,[],None
583,https://github.com/donghao118/PipelineCPU.git,2022-08-22 10:51:32+00:00,donghao    yueyuan   shenyirui   yangxiangyu ,0,donghao118/PipelineCPU,527522620,Verilog,PipelineCPU,7,0,2022-08-22 11:42:46+00:00,[],None
584,https://github.com/rishav-singh-0/uart-verilog.git,2022-08-23 06:28:08+00:00,,0,rishav-singh-0/uart-verilog,527860933,Verilog,uart-verilog,3,0,2022-08-23 07:09:17+00:00,[],None
585,https://github.com/Kuotta/FPGA-Realtime-Object-Tracking.git,2022-08-24 23:19:53+00:00,,0,Kuotta/FPGA-Realtime-Object-Tracking,528624969,Verilog,FPGA-Realtime-Object-Tracking,14,0,2022-08-24 23:20:37+00:00,[],None
586,https://github.com/Jeremiah-Jiang/EE2026-Iron-Man-Shooter-Game.git,2022-08-24 16:23:37+00:00,Iron Man Game created for EE2026 Open Ended Project,0,Jeremiah-Jiang/EE2026-Iron-Man-Shooter-Game,528503788,Verilog,EE2026-Iron-Man-Shooter-Game,10008,0,2022-08-24 16:28:56+00:00,[],None
587,https://github.com/eslamhussein20/UART_IN_Verilog.git,2022-08-22 14:17:52+00:00,,0,eslamhussein20/UART_IN_Verilog,527596270,Verilog,UART_IN_Verilog,17,0,2022-08-22 14:20:19+00:00,[],None
588,https://github.com/mattvenn/tristate.git,2022-08-28 18:27:11+00:00,,0,mattvenn/tristate,529945634,Verilog,tristate,1,0,2022-09-11 03:17:51+00:00,[],None
589,https://github.com/aiunderstand/tinytapeout_bintristateloadablecounter.git,2022-08-31 15:41:13+00:00,"This IP block simulates a binary synchronous (parallel) MOD-4 counter. Applications are CPU's, PWM signal generators, etc. It features:  - tri-direction (pause, count up, count down)  - loadable (use data[3:1], eg. for jump instruction) - synchronous output(at rising edge) with async (ripple) setup of next count)  - easy to control, fast and scalable (each 1 bit counter only depends on previous counter)",1,aiunderstand/tinytapeout_bintristateloadablecounter,531149828,Verilog,tinytapeout_bintristateloadablecounter,191,0,2022-08-31 15:41:18+00:00,[],https://api.github.com/licenses/apache-2.0
590,https://github.com/wpi-ece574-f22/solve-ho-gcd.git,2022-08-31 01:41:55+00:00,,0,wpi-ece574-f22/solve-ho-gcd,530896285,Verilog,solve-ho-gcd,3,0,2022-09-07 00:53:06+00:00,[],None
591,https://github.com/gohil-vasudev/ATTRITION.git,2022-08-30 18:52:39+00:00,Supporting material for our RL-based Trojan insertion work at CCS 2022.,0,gohil-vasudev/ATTRITION,530789226,Verilog,ATTRITION,431301,0,2023-04-23 16:38:37+00:00,"['hardware-security', 'hardware-trojans', 'reinforcement-learning']",https://api.github.com/licenses/bsd-3-clause
592,https://github.com/Scleverlin/chisel_learn8.25.git,2022-08-25 09:45:11+00:00,8.25,0,Scleverlin/chisel_learn8.25,528786492,Verilog,chisel_learn8.25,2524,0,2022-11-30 14:57:38+00:00,[],None
593,https://github.com/likhigowda/Sequence-detector.git,2022-08-15 11:41:08+00:00,Verilog sequence detector using gate level modelling,0,likhigowda/Sequence-detector,524964320,Verilog,Sequence-detector,451,0,2022-08-15 11:41:46+00:00,[],None
594,https://github.com/srinivasgazula/Asynchronous-FIFO.git,2022-08-16 13:56:27+00:00,,0,srinivasgazula/Asynchronous-FIFO,525402897,Verilog,Asynchronous-FIFO,2,0,2022-08-16 14:02:08+00:00,[],None
595,https://github.com/toof-jp/computer-aided-logic-design.git,2022-08-16 12:26:55+00:00,,0,toof-jp/computer-aided-logic-design,525369270,Verilog,computer-aided-logic-design,11,0,2022-08-16 13:37:44+00:00,[],None
596,https://github.com/Mahi36/Superscalar-Processor.git,2022-08-16 15:01:34+00:00,This is course project for EE739-Processor Design at IIT Bombay.,0,Mahi36/Superscalar-Processor,525428816,Verilog,Superscalar-Processor,855,0,2022-08-16 15:03:54+00:00,[],None
597,https://github.com/CemBelentepe/OdbemOpenLane.git,2022-08-16 18:53:05+00:00,,0,CemBelentepe/OdbemOpenLane,525505998,Verilog,OdbemOpenLane,2230,0,2022-08-16 19:01:03+00:00,[],https://api.github.com/licenses/apache-2.0
598,https://github.com/Prajakta-S-Kamble/Implementation-of-APB-protocol.git,2022-08-16 19:02:35+00:00,,0,Prajakta-S-Kamble/Implementation-of-APB-protocol,525508737,Verilog,Implementation-of-APB-protocol,54,0,2022-08-16 20:27:46+00:00,[],None
599,https://github.com/WeiXXXXVVVV/ELA.git,2022-08-28 15:19:38+00:00,,0,WeiXXXXVVVV/ELA,529899391,Verilog,ELA,4,0,2022-08-28 15:29:04+00:00,[],None
600,https://github.com/kambadur/bcd_to_7seg.git,2022-08-29 13:14:02+00:00,,1,kambadur/bcd_to_7seg,530226404,Verilog,bcd_to_7seg,9,0,2022-08-29 13:14:06+00:00,[],https://api.github.com/licenses/apache-2.0
601,https://github.com/priyanka-raina/chipathon-demo.git,2022-08-26 05:11:34+00:00,,0,priyanka-raina/chipathon-demo,529122826,Verilog,chipathon-demo,56021,0,2022-08-26 05:18:22+00:00,[],https://api.github.com/licenses/apache-2.0
602,https://github.com/amanshaikh45/8-Bit-Dadda-Multiplier.git,2022-08-24 08:12:36+00:00,It is 8x8 bit Dadda multiplier code in Verilog,0,amanshaikh45/8-Bit-Dadda-Multiplier,528327568,Verilog,8-Bit-Dadda-Multiplier,4,0,2022-08-24 08:13:36+00:00,[],None
603,https://github.com/kinnerparikh/CMPEN331.git,2022-08-28 02:08:00+00:00,Work for CMPEN331,0,kinnerparikh/CMPEN331,529740101,Verilog,CMPEN331,5840,0,2023-05-08 13:27:38+00:00,[],None
604,https://github.com/bradysalz/pll_tiny_tapeout_demo.git,2022-08-28 04:13:14+00:00,tiny tapeout - phase frequency detector + divider blocks,1,bradysalz/pll_tiny_tapeout_demo,529759181,Verilog,pll_tiny_tapeout_demo,18,0,2022-08-28 04:13:18+00:00,[],https://api.github.com/licenses/apache-2.0
605,https://github.com/gregdavill/tinytapeout-wokwi-74x1G02.git,2022-08-28 00:04:02+00:00,,1,gregdavill/tinytapeout-wokwi-74x1G02,529723365,Verilog,tinytapeout-wokwi-74x1G02,12,0,2022-08-28 00:04:05+00:00,[],https://api.github.com/licenses/apache-2.0
606,https://github.com/anmehta4/Computer-Architecture---Processor-and-ISA.git,2022-08-26 21:44:37+00:00,,0,anmehta4/Computer-Architecture---Processor-and-ISA,529412618,Verilog,Computer-Architecture---Processor-and-ISA,511,0,2022-08-26 22:25:42+00:00,[],None
607,https://github.com/AlyElruby/UART_TX_verilog.git,2022-08-28 09:30:07+00:00,,0,AlyElruby/UART_TX_verilog,529817019,Verilog,UART_TX_verilog,4,0,2022-08-28 09:32:51+00:00,[],None
608,https://github.com/alanvgreen/tinytapeout4bitadder.git,2022-08-28 09:34:18+00:00,Four bit adder for tiny tapeout,1,alanvgreen/tinytapeout4bitadder,529817922,Verilog,tinytapeout4bitadder,12,0,2022-08-28 09:34:22+00:00,[],https://api.github.com/licenses/apache-2.0
609,https://github.com/Talha-Ahmed-1/tinytapeout_flop_regfile.git,2022-08-28 13:39:50+00:00,FlipFlop Based 1R1W Register File for TinyTapeout MPW7 Shuttle.,1,Talha-Ahmed-1/tinytapeout_flop_regfile,529873276,Verilog,tinytapeout_flop_regfile,14,0,2022-08-28 13:39:55+00:00,[],https://api.github.com/licenses/apache-2.0
610,https://github.com/dingfen/Learn-Verilog.git,2022-08-24 16:54:12+00:00,,0,dingfen/Learn-Verilog,528514690,Verilog,Learn-Verilog,30,0,2022-08-31 16:25:30+00:00,[],None
611,https://github.com/SakshamKamath/MIPS-Processor.git,2022-08-25 08:56:21+00:00,,0,SakshamKamath/MIPS-Processor,528769708,Verilog,MIPS-Processor,2385,0,2022-08-25 08:59:45+00:00,[],None
612,https://github.com/SharangDP/sync_fifo.git,2022-08-23 01:50:26+00:00,Design and testing of synchronous FIFO,0,SharangDP/sync_fifo,527794824,Verilog,sync_fifo,41,0,2022-08-23 02:00:35+00:00,[],None
613,https://github.com/tayutayufk/caravel_tests.git,2022-08-24 14:55:32+00:00,,0,tayutayufk/caravel_tests,528470973,Verilog,caravel_tests,2229,0,2022-08-24 14:55:45+00:00,[],https://api.github.com/licenses/apache-2.0
614,https://github.com/gatecat/tinytapeout-srlut-test.git,2022-08-29 20:03:01+00:00,,1,gatecat/tinytapeout-srlut-test,530375355,Verilog,tinytapeout-srlut-test,35,0,2022-08-29 20:03:37+00:00,[],https://api.github.com/licenses/apache-2.0
615,https://github.com/cpldcpu/tinytapeout_mcpu6bit.git,2022-08-29 21:43:14+00:00,6 bit version of MCPU to meet tinytapeout.com I/O constraints,1,cpldcpu/tinytapeout_mcpu6bit,530404104,Verilog,tinytapeout_mcpu6bit,33,0,2022-08-29 21:43:18+00:00,[],https://api.github.com/licenses/apache-2.0
616,https://github.com/alirafiqmalik/Nucore-microprocessor.git,2022-08-30 04:28:57+00:00,,0,alirafiqmalik/Nucore-microprocessor,530495749,Verilog,Nucore-microprocessor,40395,0,2022-08-30 04:30:16+00:00,[],None
617,https://github.com/benpye/tinytapeout-cpu.git,2022-08-27 19:02:01+00:00,A very tiny 4 bit CPU.,0,benpye/tinytapeout-cpu,529673265,Verilog,tinytapeout-cpu,7,0,2022-08-27 19:02:05+00:00,[],https://api.github.com/licenses/apache-2.0
618,https://github.com/toyoshim/MahJamma.git,2022-08-27 11:23:19+00:00,,0,toyoshim/MahJamma,529564616,Verilog,MahJamma,887,0,2022-11-13 12:41:20+00:00,[],None
619,https://github.com/bessembhiri/Digital_Electronics_adder.git,2022-08-30 11:37:14+00:00,,0,bessembhiri/Digital_Electronics_adder,530628896,Verilog,Digital_Electronics_adder,2,0,2022-08-30 11:42:53+00:00,[],None
620,https://github.com/bessembhiri/Digital_Electronics_Sub10.git,2022-08-30 12:11:27+00:00,,0,bessembhiri/Digital_Electronics_Sub10,530640885,Verilog,Digital_Electronics_Sub10,3,0,2022-08-30 12:59:42+00:00,[],None
621,https://github.com/Muhamed-Sayed/Single-Cycle-MIPS-Processor.git,2022-08-13 22:55:02+00:00,Using Verilog (simulated and synthesized using Vivado).,0,Muhamed-Sayed/Single-Cycle-MIPS-Processor,524525151,Verilog,Single-Cycle-MIPS-Processor,1232,0,2022-08-13 23:19:49+00:00,[],None
622,https://github.com/jasteve4/MicroMotorSequencer.git,2022-08-13 23:43:38+00:00,,0,jasteve4/MicroMotorSequencer,524532083,Verilog,MicroMotorSequencer,196681,0,2022-08-13 23:43:50+00:00,[],https://api.github.com/licenses/apache-2.0
623,https://github.com/zzy666666zzy/RISCV_32I_AES.git,2022-08-21 23:01:56+00:00,,0,zzy666666zzy/RISCV_32I_AES,527346587,Verilog,RISCV_32I_AES,98,0,2022-08-21 23:14:46+00:00,[],None
624,https://github.com/krisY999/Verilog-Practice.git,2022-08-21 08:12:01+00:00,应用于FPGA下的例程代码,0,krisY999/Verilog-Practice,527144432,Verilog,Verilog-Practice,208,0,2022-08-21 08:27:34+00:00,[],None
625,https://github.com/jeronimopenha/kmeans_oc.git,2022-08-21 13:29:25+00:00,Kmeans para o professor Rocardo,0,jeronimopenha/kmeans_oc,527214800,Verilog,kmeans_oc,96,0,2022-08-24 11:40:53+00:00,[],https://api.github.com/licenses/gpl-3.0
626,https://github.com/Synyster008/COEN6741.git,2022-08-17 02:13:18+00:00,,0,Synyster008/COEN6741,525608018,Verilog,COEN6741,38,0,2022-08-17 02:15:29+00:00,[],None
627,https://github.com/jmsdoc/VerilogStudy.git,2022-08-16 08:13:56+00:00,My Verilog Study Repo,0,jmsdoc/VerilogStudy,525288257,Verilog,VerilogStudy,9,0,2022-08-16 08:46:43+00:00,[],None
628,https://github.com/Arch1610/6-stage-pipelined-IITB-RISC-Processor.git,2022-08-18 11:01:52+00:00,"Designed Pipelined RISC-ISA having 6 stages (Instruction Fetch, Instruction Decode, Register Read, Execute, Memory Access and Write Back) and 19 instructions. Implemented data-forwarding and branch-prediction technique to remove data and control hazards issue in pipelined datapath design flow. Implemented the design in Quartus using Verilog, did RTL simulation on Modelsim, and tested the design using specifically designed testbench.",0,Arch1610/6-stage-pipelined-IITB-RISC-Processor,526174209,Verilog,6-stage-pipelined-IITB-RISC-Processor,8,0,2022-08-18 11:12:37+00:00,[],None
629,https://github.com/DouglasWWolf/tokenizer.git,2022-08-20 22:40:00+00:00,Development platform for IPC RTL code,0,DouglasWWolf/tokenizer,527054972,Verilog,tokenizer,1459,0,2022-08-20 22:40:55+00:00,[],None
630,https://github.com/JuanMoya/user_proj_mul32.git,2022-08-20 01:56:28+00:00,,0,JuanMoya/user_proj_mul32,526800388,Verilog,user_proj_mul32,2229,0,2022-08-20 01:56:41+00:00,[],https://api.github.com/licenses/apache-2.0
631,https://github.com/tarun-prakash/caravel_counter_example.git,2022-08-18 18:13:39+00:00,test the caravel user project,0,tarun-prakash/caravel_counter_example,526324731,Verilog,caravel_counter_example,2230,0,2022-08-18 18:13:52+00:00,[],https://api.github.com/licenses/apache-2.0
632,https://github.com/Amrsamy1072/user_proj_mul32.git,2022-08-19 13:29:39+00:00,,0,Amrsamy1072/user_proj_mul32,526619195,Verilog,user_proj_mul32,2229,0,2022-08-19 13:29:51+00:00,[],https://api.github.com/licenses/apache-2.0
633,https://github.com/asmaasameh99/FIFO-using-2-port-memory.git,2022-08-17 00:21:03+00:00,,0,asmaasameh99/FIFO-using-2-port-memory,525583745,Verilog,FIFO-using-2-port-memory,6,0,2022-08-17 00:22:00+00:00,[],None
634,https://github.com/13arn/tinytapeout_counter_steamdeck.git,2022-08-31 20:31:41+00:00,Built entirely on a Steamdeck! Tinytapeout with some combinational logic and a counter based on this utexas presentation https://www.cs.utexas.edu/users/fussell/courses/cs310/lectures/cs310-lecture7.pdf,1,13arn/tinytapeout_counter_steamdeck,531249011,Verilog,tinytapeout_counter_steamdeck,12,0,2022-08-31 20:34:51+00:00,[],https://api.github.com/licenses/apache-2.0
635,https://github.com/marcusmueller/xoroshiro128-tapeout.git,2022-08-31 21:32:34+00:00,,0,marcusmueller/xoroshiro128-tapeout,531265992,Verilog,xoroshiro128-tapeout,10,0,2022-08-31 21:32:41+00:00,[],https://api.github.com/licenses/apache-2.0
636,https://github.com/alpkoyun/alpkoyun.git,2022-08-16 18:24:16+00:00,Some of my hobby projects,0,alpkoyun/alpkoyun,525497093,Verilog,alpkoyun,280,0,2023-12-07 20:04:14+00:00,[],None
637,https://github.com/Xlucidator/MegaSoC-lain_core.git,2022-08-14 05:09:22+00:00,another repository for the changing MegaSoC,0,Xlucidator/MegaSoC-lain_core,524578512,Verilog,MegaSoC-lain_core,156678,0,2023-08-23 14:06:03+00:00,[],None
638,https://github.com/alex9810171/CAO2018-Fall.git,2022-08-14 08:01:08+00:00,"NCCU CS Computer Architecture and Organization, 2018 Fall",0,alex9810171/CAO2018-Fall,524608761,Verilog,CAO2018-Fall,12880,0,2022-08-14 10:43:04+00:00,[],None
639,https://github.com/Souhardya-Mondal/Look-up-Table-LUT-Optimization-for-Memory-Based-Computations-for-DSP-Applications..git,2022-08-14 08:50:50+00:00,,0,Souhardya-Mondal/Look-up-Table-LUT-Optimization-for-Memory-Based-Computations-for-DSP-Applications.,524618575,Verilog,Look-up-Table-LUT-Optimization-for-Memory-Based-Computations-for-DSP-Applications.,950,0,2022-08-16 06:28:44+00:00,[],None
640,https://github.com/tima8816811/fpga-game.git,2022-08-14 13:08:08+00:00,,0,tima8816811/fpga-game,524674638,Verilog,fpga-game,80,0,2022-12-05 18:53:28+00:00,[],None
641,https://github.com/Gyanendra17/sequence_detector.git,2022-08-13 04:51:05+00:00,,0,Gyanendra17/sequence_detector,524303598,Verilog,sequence_detector,0,0,2022-08-13 04:51:34+00:00,[],None
642,https://github.com/wasifijaz/4-bit-16-function-complete-alu.git,2022-08-15 06:17:31+00:00,4 bit 16 functions complete Arithmetic Logic Unit implemented in Verilog Xilinx,0,wasifijaz/4-bit-16-function-complete-alu,524875844,Verilog,4-bit-16-function-complete-alu,514,0,2022-08-15 06:21:59+00:00,[],None
643,https://github.com/alejoeie/verilog-modules.git,2022-08-28 03:47:47+00:00,Repo for deploying different verilog projects for developing hardware design skills.,0,alejoeie/verilog-modules,529755250,Verilog,verilog-modules,42,0,2022-08-28 03:49:08+00:00,[],None
644,https://github.com/kbeckmann/tinytapeout_kbeckmann1.git,2022-08-27 12:28:44+00:00,,1,kbeckmann/tinytapeout_kbeckmann1,529579162,Verilog,tinytapeout_kbeckmann1,16,0,2022-08-27 15:44:00+00:00,[],https://api.github.com/licenses/apache-2.0
645,https://github.com/kardusenor/soothcpu.git,2022-08-23 10:12:01+00:00,BUPT Computer Organization Principles Course Design.,0,kardusenor/soothcpu,527934340,Verilog,soothcpu,8,0,2022-08-30 10:11:30+00:00,[],None
646,https://github.com/MeaquaZZ/aes_core_syn.git,2022-08-31 12:49:30+00:00,open core aes_core,0,MeaquaZZ/aes_core_syn,531082044,Verilog,aes_core_syn,3261,0,2022-09-01 02:08:34+00:00,[],None
647,https://github.com/ejfisc/Verilog-Enigma-Machine.git,2022-08-30 13:08:47+00:00,Enigma Machine Designed in VHDL for CS 4341,1,ejfisc/Verilog-Enigma-Machine,530662094,Verilog,Verilog-Enigma-Machine,329,0,2022-10-04 19:17:40+00:00,[],None
648,https://github.com/zacyangs/i2c_master.git,2022-08-31 06:45:35+00:00,,0,zacyangs/i2c_master,530965587,Verilog,i2c_master,1532,0,2022-08-31 06:58:05+00:00,[],None
649,https://github.com/cpldcpu/tinydice.git,2022-08-29 19:04:35+00:00,,1,cpldcpu/tinydice,530356569,Verilog,tinydice,18,0,2022-08-29 19:04:40+00:00,[],https://api.github.com/licenses/apache-2.0
650,https://github.com/mm21/tinytapeout-led-matrix.git,2022-08-30 20:35:19+00:00,Simple driver for SparkFun's RGB LED matrix backpack,1,mm21/tinytapeout-led-matrix,530821552,Verilog,tinytapeout-led-matrix,20,0,2022-08-30 20:35:23+00:00,[],https://api.github.com/licenses/apache-2.0
651,https://github.com/Shahzaib2028/tinytapeout-4to2Encoder-2to4Decoder.git,2022-08-30 18:55:50+00:00,,1,Shahzaib2028/tinytapeout-4to2Encoder-2to4Decoder,530790279,Verilog,tinytapeout-4to2Encoder-2to4Decoder,96,0,2022-08-30 18:55:55+00:00,[],https://api.github.com/licenses/apache-2.0
652,https://github.com/amit94302/dadda_multiplier.git,2022-08-16 20:16:59+00:00,,0,amit94302/dadda_multiplier,525529620,Verilog,dadda_multiplier,755,0,2022-08-16 20:17:51+00:00,[],None
653,https://github.com/May-Tesla/asyn_fifo.git,2022-08-21 14:56:27+00:00,,0,May-Tesla/asyn_fifo,527238231,Verilog,asyn_fifo,62,0,2023-04-23 13:58:23+00:00,[],https://api.github.com/licenses/mit
654,https://github.com/Ali-Arasteh/Computer-Structure-and-Microprocessor-Course-Project.git,2022-08-21 05:24:23+00:00,"Implemented a single-cycle processor consisting of different modules (Instruction Memory, Data Memory, Register File, ALU, Controller, and Data Path), then improved it to a pipelined processor with a Hazard Unit. Also, developed a Cache Memory.",0,Ali-Arasteh/Computer-Structure-and-Microprocessor-Course-Project,527113729,Verilog,Computer-Structure-and-Microprocessor-Course-Project,5570,0,2023-09-13 13:41:07+00:00,[],None
655,https://github.com/tonyalfred/32-bit-Single-Cycle-MIPS-Microprocessor.git,2022-08-15 05:34:40+00:00,,0,tonyalfred/32-bit-Single-Cycle-MIPS-Microprocessor,524866702,Verilog,32-bit-Single-Cycle-MIPS-Microprocessor,64,0,2022-08-15 15:56:57+00:00,[],None
656,https://github.com/buzmeg/extraction_test_structures.git,2022-08-22 00:09:10+00:00,Extraction test structure repo,0,buzmeg/extraction_test_structures,527357457,Verilog,extraction_test_structures,2230,0,2022-08-22 00:09:22+00:00,[],https://api.github.com/licenses/apache-2.0
657,https://github.com/aminh7325/multi-cycle-implementation-of-MIPS.git,2022-08-17 12:29:36+00:00,,0,aminh7325/multi-cycle-implementation-of-MIPS,525781749,Verilog,multi-cycle-implementation-of-MIPS,5,0,2022-08-23 13:16:28+00:00,[],None
658,https://github.com/seshasainadh/Brent-Kung-Adder-16-bit.git,2022-08-18 13:54:38+00:00,,0,seshasainadh/Brent-Kung-Adder-16-bit,526233069,Verilog,Brent-Kung-Adder-16-bit,217,0,2022-08-18 13:59:18+00:00,[],None
659,https://github.com/dinhquanglam/Quartus.git,2022-08-22 04:09:49+00:00,,0,dinhquanglam/Quartus,527406701,Verilog,Quartus,6636,0,2022-08-22 04:13:47+00:00,[],None
660,https://github.com/TudorCostinCristian/VerilogDecription.git,2022-08-18 23:13:56+00:00,,0,TudorCostinCristian/VerilogDecription,526399893,Verilog,VerilogDecription,312,0,2022-08-18 23:15:03+00:00,[],None
661,https://github.com/sumanmahato027/8x8-Dadda-Multiplier.git,2022-08-19 06:40:25+00:00,,0,sumanmahato027/8x8-Dadda-Multiplier,526491608,Verilog,8x8-Dadda-Multiplier,195,0,2022-08-19 06:49:54+00:00,[],None
662,https://github.com/uChoh5fe/tinytapeout.git,2022-08-16 07:36:31+00:00,,0,uChoh5fe/tinytapeout,525277055,Verilog,tinytapeout,7,0,2022-08-16 07:36:37+00:00,[],https://api.github.com/licenses/apache-2.0
663,https://github.com/tayutayufk/tinyASICtemp.git,2022-08-24 06:53:08+00:00,,0,tayutayufk/tinyASICtemp,528301723,Verilog,tinyASICtemp,7,0,2022-08-24 06:53:12+00:00,[],https://api.github.com/licenses/apache-2.0
664,https://github.com/nikaemami/Restoring_Divider.git,2022-08-26 10:14:39+00:00,Design and implementation of a 10 bit by 5 bit binary restoring divider with Verilog.,0,nikaemami/Restoring_Divider,529209420,Verilog,Restoring_Divider,8,0,2022-09-16 20:43:02+00:00,[],None
665,https://github.com/aiunderstand/tinytapeout_asyncbinterconvcomp.git,2022-08-29 05:00:43+00:00,"ZeroToAsics' TinyTapeOut submission for Google MPW7. Features: async binary encoded ternary comparator, 2-channel binary to ternary converter, ternary to binary  converter ",1,aiunderstand/tinytapeout_asyncbinterconvcomp,530071919,Verilog,tinytapeout_asyncbinterconvcomp,1051,0,2022-08-29 05:00:48+00:00,[],https://api.github.com/licenses/apache-2.0
666,https://github.com/BelalAli2022/Egypt2-CMOS-Power-Oscillator-.git,2022-08-29 13:13:51+00:00,,0,BelalAli2022/Egypt2-CMOS-Power-Oscillator-,530226353,Verilog,Egypt2-CMOS-Power-Oscillator-,94,0,2022-08-29 13:13:57+00:00,[],https://api.github.com/licenses/apache-2.0
667,https://github.com/abdullahkhalids/TinyTapeout-hamming-code.git,2022-08-31 01:27:14+00:00,"My TinyTapeout 2022 submission, the design of a chip that implements the Hamming code ",1,abdullahkhalids/TinyTapeout-hamming-code,530892766,Verilog,TinyTapeout-hamming-code,12,0,2022-08-31 01:27:18+00:00,[],https://api.github.com/licenses/apache-2.0
668,https://github.com/JackLee65535/FPGA.git,2022-08-31 14:04:02+00:00,,0,JackLee65535/FPGA,531110916,Verilog,FPGA,20,0,2022-08-31 14:10:22+00:00,[],None
669,https://github.com/johnnycubides/qucs-tutorial-examples.git,2022-08-18 00:41:20+00:00,,1,johnnycubides/qucs-tutorial-examples,526001608,Verilog,qucs-tutorial-examples,2865,0,2024-03-27 20:27:02+00:00,"['qucs-s', 'qucs', 'ngspice', 'electronic', 'tutorial']",None
670,https://github.com/Subhadip-Sen/8x8Dadda_Multiplier.git,2022-08-18 09:41:05+00:00,,0,Subhadip-Sen/8x8Dadda_Multiplier,526148474,Verilog,8x8Dadda_Multiplier,5970,0,2022-08-18 09:42:34+00:00,[],None
671,https://github.com/ALI11-2000/mpw-waprv.git,2022-08-14 15:48:27+00:00,,0,ALI11-2000/mpw-waprv,524713879,Verilog,mpw-waprv,61870,0,2022-08-14 15:48:39+00:00,[],https://api.github.com/licenses/apache-2.0
672,https://github.com/JuanMoya/jsmoya_proj_mul32.git,2022-08-19 04:16:14+00:00,,0,JuanMoya/jsmoya_proj_mul32,526459959,Verilog,jsmoya_proj_mul32,2230,0,2022-08-19 04:16:26+00:00,[],https://api.github.com/licenses/apache-2.0
673,https://github.com/sumanmahato027/Floating-Point-Adder.git,2022-08-19 07:34:34+00:00,,0,sumanmahato027/Floating-Point-Adder,526507711,Verilog,Floating-Point-Adder,337,0,2022-08-19 07:35:34+00:00,[],None
674,https://github.com/gizmo4487/simon-nexys-a7-100t.git,2022-08-17 16:02:05+00:00,A recreation of the memory game Simon for the Nexys A7-100T FPGA board,0,gizmo4487/simon-nexys-a7-100t,525864091,Verilog,simon-nexys-a7-100t,10,0,2022-08-17 16:11:55+00:00,[],None
675,https://github.com/Tauqir-Ahmad/Asynchronous_FIFO_Design.git,2022-08-17 13:02:11+00:00,,0,Tauqir-Ahmad/Asynchronous_FIFO_Design,525793877,Verilog,Asynchronous_FIFO_Design,806,0,2022-08-19 20:06:47+00:00,[],None
676,https://github.com/Ayman-Helal/Piplined_MIPS_Processor_Harvard_Architecture.git,2022-08-23 03:20:54+00:00,5 stage pipelined MIPS with a control hazard unit to handle the data and the control hazards,0,Ayman-Helal/Piplined_MIPS_Processor_Harvard_Architecture,527816880,Verilog,Piplined_MIPS_Processor_Harvard_Architecture,16,0,2022-08-23 03:30:04+00:00,[],None
677,https://github.com/Ayman-Helal/Synchronous_FIFO_Buffer.git,2022-08-23 03:09:06+00:00,Synchronous FIFO buffer reads and writes data with the same rate (clock).,0,Ayman-Helal/Synchronous_FIFO_Buffer,527814052,Verilog,Synchronous_FIFO_Buffer,2,0,2022-08-23 03:09:38+00:00,[],None
678,https://github.com/sridharraj240/TCAM.git,2022-08-23 13:54:20+00:00,TRENARY CONTENT ADDRESABLE MEMORY,0,sridharraj240/TCAM,528013797,Verilog,TCAM,48230,0,2022-08-25 15:17:45+00:00,[],None
679,https://github.com/Ayman-Helal/Asynchronous_FIFO_Buffer.git,2022-08-23 03:06:23+00:00,Asynchronous FIFO buffer reads and writes the data with different rates (clocks).,0,Ayman-Helal/Asynchronous_FIFO_Buffer,527813462,Verilog,Asynchronous_FIFO_Buffer,3,0,2022-08-23 03:07:55+00:00,[],None
680,https://github.com/javed-alam01/Serial-I2C.git,2022-08-23 18:31:08+00:00,"Supports multimaster, adding new slave is easy.",0,javed-alam01/Serial-I2C,528117485,Verilog,Serial-I2C,2,0,2022-08-23 18:34:04+00:00,[],None
681,https://github.com/jaisanubhav/N_bit_brunt_kung_adder.git,2022-08-19 12:24:41+00:00,,0,jaisanubhav/N_bit_brunt_kung_adder,526597343,Verilog,N_bit_brunt_kung_adder,2,0,2022-08-19 12:25:06+00:00,[],None
682,https://github.com/hermitgunner/brent_kung_fast_adder.git,2022-08-19 13:39:59+00:00,,0,hermitgunner/brent_kung_fast_adder,526622715,Verilog,brent_kung_fast_adder,3,0,2022-08-19 14:26:21+00:00,[],None
683,https://github.com/jaysunl/caravel_efpga.git,2022-08-19 21:22:26+00:00,,0,jaysunl/caravel_efpga,526754936,Verilog,caravel_efpga,17634,0,2022-08-19 21:22:39+00:00,[],https://api.github.com/licenses/apache-2.0
684,https://github.com/AidenPetersen/crypto-coproc.git,2022-08-14 02:40:56+00:00,Coprocessor for cryptographic applications,0,AidenPetersen/crypto-coproc,524556211,Verilog,crypto-coproc,24,0,2022-08-14 02:41:55+00:00,[],None
685,https://github.com/MoinakG2/user_proj_mul32.git,2022-08-19 18:20:45+00:00,Caravel project template for RTL2GDS Openlane flow,0,MoinakG2/user_proj_mul32,526711183,Verilog,user_proj_mul32,2229,0,2022-08-19 18:34:12+00:00,[],https://api.github.com/licenses/apache-2.0
686,https://github.com/seshasainadh/Asynchronous-fifo.git,2022-08-18 13:49:34+00:00,,0,seshasainadh/Asynchronous-fifo,526231270,Verilog,Asynchronous-fifo,449,0,2022-08-18 13:52:56+00:00,[],None
687,https://github.com/yufuskoc/basys3_calculator.git,2022-08-19 11:16:45+00:00,,0,yufuskoc/basys3_calculator,526577006,Verilog,basys3_calculator,8,0,2022-08-19 11:25:07+00:00,[],None
688,https://github.com/sumanmahato027/SRAM.git,2022-08-19 09:18:43+00:00,,0,sumanmahato027/SRAM,526540523,Verilog,SRAM,200,0,2022-08-19 09:27:20+00:00,[],None
689,https://github.com/MoamenSameh/user_proj_mul32.git,2022-08-19 14:19:47+00:00,,0,MoamenSameh/user_proj_mul32,526636285,Verilog,user_proj_mul32,2229,0,2022-08-19 14:20:00+00:00,[],https://api.github.com/licenses/apache-2.0
690,https://github.com/matin-yousefzade/ARM-CPU-on-FPGA.git,2022-08-13 15:15:35+00:00,A mini ARM-based CPU implemented by Verilog on Altera Cyclone II FPGA board.,0,matin-yousefzade/ARM-CPU-on-FPGA,524433508,Verilog,ARM-CPU-on-FPGA,18,0,2022-08-13 15:20:48+00:00,[],None
691,https://github.com/30shubhvish/Asynchronous-FIFO.git,2022-08-16 12:13:56+00:00, Design of Asynchronous FIFO ,0,30shubhvish/Asynchronous-FIFO,525364851,Verilog,Asynchronous-FIFO,792,0,2022-08-16 12:20:16+00:00,[],None
692,https://github.com/lzy1280617312/uhd.git,2022-08-16 07:09:48+00:00,,0,lzy1280617312/uhd,525268903,Verilog,uhd,125813,0,2022-08-16 07:50:17+00:00,[],
693,https://github.com/ethanjamesauto/vectorfpga.git,2022-08-16 01:00:29+00:00,FPGA analog vector graphics generator,0,ethanjamesauto/vectorfpga,525186275,Verilog,vectorfpga,75,0,2022-08-18 01:19:09+00:00,[],None
694,https://github.com/Mounika129/Asynchronous-fifo.git,2022-08-16 10:10:51+00:00,,0,Mounika129/Asynchronous-fifo,525326069,Verilog,Asynchronous-fifo,3,0,2022-08-16 10:11:27+00:00,[],None
695,https://github.com/emanazakria/Universal-Asynchronous-Receiver-Transmitter-UART-.git,2022-08-15 18:52:10+00:00,Implemented UART TX and RX Modules Using Verilog HDL. The RX Module uses the oversampling scheme in order to estimate the middle points of the transmitted bits,0,emanazakria/Universal-Asynchronous-Receiver-Transmitter-UART-,525102916,Verilog,Universal-Asynchronous-Receiver-Transmitter-UART-,21,0,2022-08-15 18:53:34+00:00,[],None
696,https://github.com/OIhroDIL/cnt-led.git,2022-08-20 14:05:20+00:00,,0,OIhroDIL/cnt-led,526943920,Verilog,cnt-led,1,0,2022-08-20 14:06:16+00:00,[],None
697,https://github.com/utkarshkumar7/Pooling-Filter-Combinational-Design-Project.git,2022-08-21 23:46:19+00:00," The goal of this project is design a digital circuit that implements a common type of image filter known as a pooling filter (also known as a pooling layer). This type of filter is employed to reduce the size of an input image while keeping relevant features of the input and discarding irrelevant in- formation, such as noise. Pooling layers are an essential component of convolutional neural networks as they allow models to learn relations between distant regions of the input image, which is necessary for most modern computer vision applications.",0,utkarshkumar7/Pooling-Filter-Combinational-Design-Project,527353778,Verilog,Pooling-Filter-Combinational-Design-Project,4087,0,2022-08-21 23:47:26+00:00,[],None
698,https://github.com/naveen473/SPI-Protocol.git,2022-08-22 10:28:39+00:00,"The Serial Peripheral Interface (SPI) is a synchronous serial communication interface specification used for short-distance communication, primarily in embedded systems. The interface was developed by Motorola in the mid-1980s and has become a de facto standard. Typical applications include Secure Digital cards and liquid crystal displays.  SPI devices communicate in full duplex mode using a master-slave architecture usually with a single master (though some Atmel devices support changing roles on the fly depending on an external (SS) pin). The master (controller) device originates the frame for reading and writing. Multiple slave-devices may be supported through selection with individual chip select (CS), sometimes called slave select (SS) lines.",0,naveen473/SPI-Protocol,527515544,Verilog,SPI-Protocol,50,0,2022-08-22 10:52:54+00:00,[],None
699,https://github.com/kthomas488/d_flipflop_tb.git,2022-08-27 10:16:58+00:00,system verilog tb for d_ff,0,kthomas488/d_flipflop_tb,529550123,Verilog,d_flipflop_tb,1,0,2022-11-30 07:53:42+00:00,[],None
700,https://github.com/OIhroDIL/KEY-MATRIX.git,2022-08-25 10:56:59+00:00,,0,OIhroDIL/KEY-MATRIX,528809980,Verilog,KEY-MATRIX,4,0,2022-08-25 10:57:50+00:00,[],None
701,https://github.com/eymay/boron_cipher.git,2022-08-25 12:01:11+00:00,"An implementation of Boron Cipher, a compact encryption algorithm designed for hardware.",0,eymay/boron_cipher,528831163,Verilog,boron_cipher,11,0,2022-12-07 06:38:32+00:00,['encryption'],https://api.github.com/licenses/mit
702,https://github.com/sad-electronics/tinytapeout-clock-divider-asic.git,2022-08-29 19:08:32+00:00,,1,sad-electronics/tinytapeout-clock-divider-asic,530358049,Verilog,tinytapeout-clock-divider-asic,13,0,2022-08-29 19:08:37+00:00,[],https://api.github.com/licenses/apache-2.0
703,https://github.com/mikenet213/mikenet213-tt2-verilog.git,2022-08-29 04:02:39+00:00,,1,mikenet213/mikenet213-tt2-verilog,530059868,Verilog,mikenet213-tt2-verilog,29,0,2022-08-29 04:05:41+00:00,[],https://api.github.com/licenses/apache-2.0
704,https://github.com/siriusm46/tinytapeout_bcd_decimal.git,2022-08-29 01:10:13+00:00,,1,siriusm46/tinytapeout_bcd_decimal,530022868,Verilog,tinytapeout_bcd_decimal,20,0,2022-08-31 19:23:20+00:00,[],https://api.github.com/licenses/apache-2.0
705,https://github.com/OpenPOWERFoundation/toy-sram-mpw7.git,2022-08-29 14:12:57+00:00,eFabless MPW-7,1,OpenPOWERFoundation/toy-sram-mpw7,530250155,Verilog,toy-sram-mpw7,201636,0,2022-08-29 14:13:10+00:00,[],https://api.github.com/licenses/apache-2.0
706,https://github.com/Hemanthsirivella/FPGA-based-Microcontroller.git,2022-08-24 09:33:02+00:00,,0,Hemanthsirivella/FPGA-based-Microcontroller,528354763,Verilog,FPGA-based-Microcontroller,4,0,2022-08-24 10:29:02+00:00,[],None
707,https://github.com/andrew-tn/HDLBits.git,2022-08-25 03:40:28+00:00,My solutions to HDLBits Verilog Exercises,0,andrew-tn/HDLBits,528682946,Verilog,HDLBits,54,0,2022-08-25 03:47:55+00:00,[],None
708,https://github.com/Lcooldong/FPGA.git,2022-08-24 12:50:14+00:00,,0,Lcooldong/FPGA,528422033,Verilog,FPGA,19209,0,2022-08-24 12:50:24+00:00,[],None
709,https://github.com/DanieleKaroline/elevator.git,2022-08-30 23:36:41+00:00,Projeto de elevador. Utilizou-se Verilog e Altera Cyclone II FPGA.,0,DanieleKaroline/elevator,530868411,Verilog,elevator,967,0,2022-08-30 23:38:45+00:00,[],None
710,https://github.com/Academic-Ayda-z/Computer-Architecture-lab.git,2022-08-30 18:46:59+00:00,Feb 2022,0,Academic-Ayda-z/Computer-Architecture-lab,530787392,Verilog,Computer-Architecture-lab,93525,0,2022-08-30 19:11:41+00:00,[],None
711,https://github.com/pramitpal/tinytapeout_pramit.git,2022-08-27 18:34:03+00:00,efabless tiny tapeout with wokwi BCD to 7-Segment,1,pramitpal/tinytapeout_pramit,529667465,Verilog,tinytapeout_pramit,87,0,2022-08-28 03:10:40+00:00,[],https://api.github.com/licenses/apache-2.0
712,https://github.com/PKhing/HW_SYN_LAB.git,2022-08-27 13:31:36+00:00,Chula engineering 2110363 HW SYN LAB I codes,0,PKhing/HW_SYN_LAB,529594160,Verilog,HW_SYN_LAB,2968,0,2022-12-22 16:34:54+00:00,[],None
713,https://github.com/omarzalah/Regester-file.git,2022-08-30 12:37:43+00:00,,0,omarzalah/Regester-file,530650322,Verilog,Regester-file,3,0,2022-08-30 12:38:34+00:00,[],None
714,https://github.com/SakethGajawada/iiitb_riscv32im.git,2022-08-31 21:16:41+00:00,,0,SakethGajawada/iiitb_riscv32im,531261757,Verilog,iiitb_riscv32im,13328,0,2022-09-08 08:53:15+00:00,[],None
715,https://github.com/Lixxxymaster/MIPS_kernel.git,2022-08-31 12:50:28+00:00,,0,Lixxxymaster/MIPS_kernel,531082438,Verilog,MIPS_kernel,593,0,2022-08-31 13:25:58+00:00,[],None
716,https://github.com/fenggang233/HDLBits_verilog_practice.git,2022-08-13 05:47:25+00:00,HDLBits Verilog上觉得值得记录的题目,0,fenggang233/HDLBits_verilog_practice,524313626,Verilog,HDLBits_verilog_practice,32,0,2022-08-13 05:49:19+00:00,[],None
717,https://github.com/FlyCode-ZX/Graduation_design.git,2022-08-13 06:47:53+00:00,我的毕业设计,0,FlyCode-ZX/Graduation_design,524323687,Verilog,Graduation_design,89561,0,2022-08-13 07:03:35+00:00,[],None
718,https://github.com/genArg/caravel_walkthrough-.git,2022-08-28 13:45:02+00:00,,0,genArg/caravel_walkthrough-,529874601,Verilog,caravel_walkthrough-,2229,0,2022-08-28 13:45:14+00:00,[],https://api.github.com/licenses/apache-2.0
719,https://github.com/Muhamed-Sayed/Design-and-Synthesize-a-Full-Digital-System.git,2022-08-13 23:07:22+00:00,It is responsible for doing some processing using ALU block on Register File stored data to generate byte data then send it using Serial Communication Protocol UART.,0,Muhamed-Sayed/Design-and-Synthesize-a-Full-Digital-System,524526896,Verilog,Design-and-Synthesize-a-Full-Digital-System,721,0,2022-08-13 23:19:46+00:00,[],None
720,https://github.com/Anh-tp-do/Combinational-SequentialCircuits.git,2022-08-13 21:30:06+00:00,,0,Anh-tp-do/Combinational-SequentialCircuits,524512051,Verilog,Combinational-SequentialCircuits,8,0,2022-08-13 22:01:31+00:00,[],None
721,https://github.com/romantitovmephi/Crossbar.git,2022-08-13 18:55:52+00:00,,0,romantitovmephi/Crossbar,524483576,Verilog,Crossbar,90,0,2022-08-13 18:57:40+00:00,[],None
722,https://github.com/nikitasharma7/Combinational_Circuits.git,2022-08-14 04:04:51+00:00,,0,nikitasharma7/Combinational_Circuits,524569048,Verilog,Combinational_Circuits,298,0,2022-08-17 08:19:33+00:00,[],None
723,https://github.com/Shivam1164/32_bit_RISCV_Processor.git,2022-08-14 02:32:36+00:00,,0,Shivam1164/32_bit_RISCV_Processor,524555000,Verilog,32_bit_RISCV_Processor,8,0,2022-08-14 02:35:32+00:00,[],None
724,https://github.com/alutnopk/coa-lab-autumn-22.git,2022-08-15 18:50:57+00:00,Assignment codes for Computer Organization and Architecture,0,alutnopk/coa-lab-autumn-22,525102551,Verilog,coa-lab-autumn-22,3957,0,2023-03-29 16:29:05+00:00,[],None
725,https://github.com/99june18/SDS_GIT_PRACTICE.git,2022-08-16 07:06:18+00:00,,0,99june18/SDS_GIT_PRACTICE,525267839,Verilog,SDS_GIT_PRACTICE,1,0,2022-08-16 07:16:09+00:00,[],None
726,https://github.com/abhijithabhiakl/clk_test.git,2022-08-15 17:49:07+00:00,,0,abhijithabhiakl/clk_test,525083889,Verilog,clk_test,2,0,2022-08-15 17:49:14+00:00,[],None
727,https://github.com/jaisanubhav/pipeline_processor.git,2022-08-19 18:26:32+00:00,,0,jaisanubhav/pipeline_processor,526712802,Verilog,pipeline_processor,9,0,2022-08-19 19:01:40+00:00,[],None
728,https://github.com/rahulgaud/Comparision-of-Dadda-Multiplier-with-Wallace-Multiplier.git,2022-08-19 13:29:29+00:00,,0,rahulgaud/Comparision-of-Dadda-Multiplier-with-Wallace-Multiplier,526619152,Verilog,Comparision-of-Dadda-Multiplier-with-Wallace-Multiplier,15,0,2022-08-19 13:31:56+00:00,[],None
729,https://github.com/amo890806/Coordinate_Rotation_Digital_Computer.git,2022-08-19 14:49:27+00:00,,0,amo890806/Coordinate_Rotation_Digital_Computer,526646245,Verilog,Coordinate_Rotation_Digital_Computer,28,0,2022-08-19 16:12:30+00:00,[],None
730,https://github.com/hermitgunner/wallace_multiplier.git,2022-08-19 14:15:27+00:00,,0,hermitgunner/wallace_multiplier,526634832,Verilog,wallace_multiplier,4,0,2022-08-19 14:15:59+00:00,[],None
731,https://github.com/MaryamMagdy570/Washing_Machine.git,2022-08-19 17:29:36+00:00,,0,MaryamMagdy570/Washing_Machine,526696631,Verilog,Washing_Machine,7,0,2022-08-19 20:25:21+00:00,[],None
732,https://github.com/rahultanwar10/AsynchronousFIFO.git,2022-08-19 16:12:34+00:00,,0,rahultanwar10/AsynchronousFIFO,526673049,Verilog,AsynchronousFIFO,50,0,2022-12-13 16:33:56+00:00,[],None
733,https://github.com/VishalNov18/Router-1-3-design-in-verilog-hdl.git,2022-08-25 17:28:23+00:00,,0,VishalNov18/Router-1-3-design-in-verilog-hdl,528952181,Verilog,Router-1-3-design-in-verilog-hdl,176,0,2022-08-25 17:29:30+00:00,[],None
734,https://github.com/AmrMaged-H/Low-Power-Multi-Clock-Digital-System.git,2022-08-25 11:00:32+00:00,,0,AmrMaged-H/Low-Power-Multi-Clock-Digital-System,528811108,Verilog,Low-Power-Multi-Clock-Digital-System,17,0,2022-08-25 11:03:42+00:00,[],None
735,https://github.com/javed-alam01/Serial-SPI.git,2022-08-23 18:40:38+00:00,SPI is faster than I2C . it uses 4 wire so it's 4 wire interface so you need more pins to communicate.,0,javed-alam01/Serial-SPI,528120544,Verilog,Serial-SPI,1,0,2022-08-23 18:41:10+00:00,[],None
736,https://github.com/Bharadwaj297/Design-of-an-8-bit-MC-Unit.git,2022-08-24 05:10:25+00:00,,0,Bharadwaj297/Design-of-an-8-bit-MC-Unit,528274349,Verilog,Design-of-an-8-bit-MC-Unit,21,0,2022-08-25 13:58:39+00:00,[],None
737,https://github.com/minecraftdixit/sequence-detector.git,2022-08-23 20:07:59+00:00,Mealy Machine Based Sequence Detector,0,minecraftdixit/sequence-detector,528146449,Verilog,sequence-detector,58,0,2022-08-23 20:10:30+00:00,[],None
738,https://github.com/luchLasarya/Inc_encoder_DE10-lite.git,2022-08-21 09:23:57+00:00,Обработка сигнала с инкрементного энкодера с фильтрацией дребезга. Проверка на плате DE10-lite,0,luchLasarya/Inc_encoder_DE10-lite,527159042,Verilog,Inc_encoder_DE10-lite,1,0,2022-08-21 09:27:39+00:00,[],None
739,https://github.com/pradumnk/6-Stage-Pipeline-CPU.git,2022-08-16 13:25:29+00:00,This is a 6 stage pipeline CPU containing IF_ID_RF_EX_MeM_WB stages. It includes implementation of 2bit Branch Predictor and Hazard Mitigation technique,0,pradumnk/6-Stage-Pipeline-CPU,525390596,Verilog,6-Stage-Pipeline-CPU,666,0,2023-04-07 11:41:38+00:00,[],None
740,https://github.com/robinyangyanfeng/General_Components_for_Digital_Circuits.git,2022-08-17 01:17:29+00:00,The repository has some general components for digital circuit design.,0,robinyangyanfeng/General_Components_for_Digital_Circuits,525595679,Verilog,General_Components_for_Digital_Circuits,422,0,2022-08-19 08:27:39+00:00,[],https://api.github.com/licenses/gpl-3.0
741,https://github.com/thkim2031/efabless_mpw.git,2022-08-19 11:57:22+00:00,,0,thkim2031/efabless_mpw,526589127,Verilog,efabless_mpw,22097,0,2022-08-19 11:57:35+00:00,[],https://api.github.com/licenses/apache-2.0
742,https://github.com/init-01/SNU-Digital-System-Design.git,2022-08-22 12:56:13+00:00,Conv module,0,init-01/SNU-Digital-System-Design,527564813,Verilog,SNU-Digital-System-Design,8,0,2022-08-22 12:58:22+00:00,[],None
743,https://github.com/zhuyueqq/-Xilinx-FPGA.git,2022-08-18 12:31:31+00:00,学习记录，代码随堂练。,0,zhuyueqq/-Xilinx-FPGA,526203553,Verilog,-Xilinx-FPGA,5,0,2022-08-18 12:51:47+00:00,[],None
744,https://github.com/seshasainadh/Vending-Machine.git,2022-08-18 14:00:22+00:00,,0,seshasainadh/Vending-Machine,526235241,Verilog,Vending-Machine,161,0,2022-08-18 14:03:51+00:00,[],None
745,https://github.com/OmarFahmy07/RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System-.git,2022-08-18 13:37:11+00:00,Responsible of receiving commands through UART receiver to do different system functions as register file reading/writing or doing some processing using an ALU block and send the result using 4-byte frames through UART transmitter communication protocol.,0,OmarFahmy07/RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System-,526226694,Verilog,RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System-,37474,0,2022-08-18 13:45:45+00:00,[],None
746,https://github.com/YinChian/VSCode-Wave-Show.git,2022-08-31 20:57:46+00:00,Demo code of the article.,0,YinChian/VSCode-Wave-Show,531256431,Verilog,VSCode-Wave-Show,48,0,2022-08-31 21:02:51+00:00,[],None
747,https://github.com/ritikmakhija/369Lab1.git,2022-08-31 22:53:14+00:00,,0,ritikmakhija/369Lab1,531284997,Verilog,369Lab1,8,0,2022-08-31 22:57:35+00:00,[],None
748,https://github.com/guioco/caravel_walkthrough.git,2022-08-28 20:53:06+00:00,,0,guioco/caravel_walkthrough,529977112,Verilog,caravel_walkthrough,2230,0,2022-08-28 20:53:22+00:00,[],https://api.github.com/licenses/apache-2.0
749,https://github.com/smunaut/tinytapeout-fifo.git,2022-08-28 18:53:06+00:00,Tiny Tapeout FIFO,0,smunaut/tinytapeout-fifo,529951578,Verilog,tinytapeout-fifo,17,0,2022-08-28 18:53:10+00:00,[],https://api.github.com/licenses/apache-2.0
750,https://github.com/ianhan/tinytapeout_pulsar.git,2022-08-28 18:16:27+00:00,,0,ianhan/tinytapeout_pulsar,529943198,Verilog,tinytapeout_pulsar,5,0,2022-08-28 18:16:31+00:00,[],https://api.github.com/licenses/apache-2.0
751,https://github.com/WeiXXXXVVVV/LZ77-ENCODER.git,2022-08-28 15:15:31+00:00,,0,WeiXXXXVVVV/LZ77-ENCODER,529898330,Verilog,LZ77-ENCODER,2,0,2022-08-28 15:30:04+00:00,[],None
752,https://github.com/Sirawit7205/tinytapeout-2G57-2G58.git,2022-08-29 18:58:22+00:00,TinyTapeout Design for a dual 1G57/1G58 configurable gates (plus extra 1G79/1G80 flip-flop),1,Sirawit7205/tinytapeout-2G57-2G58,530354466,Verilog,tinytapeout-2G57-2G58,15,0,2022-09-24 09:42:24+00:00,[],https://api.github.com/licenses/apache-2.0
753,https://github.com/bessembhiri/Digital_Electronics_halfadder.git,2022-08-30 11:29:15+00:00,,0,bessembhiri/Digital_Electronics_halfadder,530626219,Verilog,Digital_Electronics_halfadder,1,0,2022-08-30 11:35:16+00:00,[],None
754,https://github.com/andars/tiny-tapeout-module-2.git,2022-08-31 01:45:46+00:00,,0,andars/tiny-tapeout-module-2,530897156,Verilog,tiny-tapeout-module-2,62,0,2022-08-31 01:46:03+00:00,[],https://api.github.com/licenses/apache-2.0
755,https://github.com/djsaye/fpga_tank_trouble.git,2022-08-31 03:52:47+00:00,The mini-game TankTrouble implemented on a NIOS-II based SoC on Altera FPGA,0,djsaye/fpga_tank_trouble,530927436,Verilog,fpga_tank_trouble,39132,0,2023-07-02 04:40:59+00:00,[],None
756,https://github.com/youmna2023/MIPS.git,2022-08-29 23:17:59+00:00,Computer architecture project >> single-cycle MIPS processor,0,youmna2023/MIPS,530425478,Verilog,MIPS,32,0,2022-08-29 23:27:55+00:00,[],None
757,https://github.com/Azeem-M/Processor-Project.git,2022-08-31 02:27:42+00:00,This project is for a 16-bit processor written in Verilog. The processor supports many different instructions.,0,Azeem-M/Processor-Project,530907554,Verilog,Processor-Project,17,0,2022-08-31 02:43:40+00:00,[],None
758,https://github.com/OmniaMohamed12/MIPS.git,2022-08-30 20:28:46+00:00,,0,OmniaMohamed12/MIPS,530819652,Verilog,MIPS,147,0,2022-08-30 22:58:40+00:00,[],None
759,https://github.com/narmitsmartstriker/VHDL-Verilog_projects.git,2022-08-16 17:56:46+00:00,,0,narmitsmartstriker/VHDL-Verilog_projects,525488380,Verilog,VHDL-Verilog_projects,2848,0,2022-10-12 03:04:27+00:00,[],None
760,https://github.com/mattvenn/tinytapeout-7seg-decoder.git,2022-08-13 10:53:34+00:00,,0,mattvenn/tinytapeout-7seg-decoder,524372225,Verilog,tinytapeout-7seg-decoder,12,0,2022-08-13 10:53:38+00:00,[],https://api.github.com/licenses/apache-2.0
761,https://github.com/pradumnk/MIPS-CPU.git,2022-08-13 12:09:51+00:00,A simple implementation of MIPS CPU which is 16bit single cycle. Logarithmic Barrel Shifter is added and integrated with ALU for SLL and SRL instruction in its ISA. ,0,pradumnk/MIPS-CPU,524389126,Verilog,MIPS-CPU,25180,0,2022-08-16 12:40:19+00:00,[],None
762,https://github.com/MadejSzymon/de0nano_uart_adc_sound.git,2022-08-19 22:00:59+00:00,Project for DE0-Nano Development Kit - Sampling sound using ADC and transferring it to PC using ADC.,0,MadejSzymon/de0nano_uart_adc_sound,526762665,Verilog,de0nano_uart_adc_sound,169,0,2022-08-19 22:02:37+00:00,[],None
763,https://github.com/IslamAdam/user_proj_mul32.git,2022-08-19 15:14:52+00:00,,0,IslamAdam/user_proj_mul32,526654591,Verilog,user_proj_mul32,45842,0,2022-08-19 15:15:04+00:00,[],https://api.github.com/licenses/apache-2.0
764,https://github.com/Tauqir-Ahmad/Dadda-Multiplier.git,2022-08-19 10:25:18+00:00,,0,Tauqir-Ahmad/Dadda-Multiplier,526561507,Verilog,Dadda-Multiplier,830,0,2022-08-19 10:28:07+00:00,[],None
765,https://github.com/SDZZGNDRC/Multiplier.git,2022-08-19 13:24:33+00:00,A signed 65×65bits multiplier written in verilogHDL.,0,SDZZGNDRC/Multiplier,526617386,Verilog,Multiplier,7,0,2022-08-20 11:54:36+00:00,[],None
766,https://github.com/sumanmahato027/asynchronous-FIFO.git,2022-08-19 06:52:08+00:00,,0,sumanmahato027/asynchronous-FIFO,526495097,Verilog,asynchronous-FIFO,632,0,2022-08-19 06:55:41+00:00,[],None
767,https://github.com/usd-cs/comp300-fa22-p0-2-boardtest.git,2022-08-19 01:22:12+00:00,,0,usd-cs/comp300-fa22-p0-2-boardtest,526423743,Verilog,comp300-fa22-p0-2-boardtest,4,0,2022-09-10 14:54:00+00:00,[],None
768,https://github.com/Knight0fCarol/SEUfuckFPGA.git,2022-08-17 13:07:54+00:00,东南大学暑期学校FPGA项目,1,Knight0fCarol/SEUfuckFPGA,525796095,Verilog,SEUfuckFPGA,5,0,2022-08-17 13:21:27+00:00,[],None
769,https://github.com/Infinity-24/UART-Universal-Asynchronous-Receiver-Transmitter-.git,2022-08-18 03:27:04+00:00,Universal Asynchronous Receiver/ Transmitter is such a hardware circuit that uses asynchronous serial communication for data transmission.,0,Infinity-24/UART-Universal-Asynchronous-Receiver-Transmitter-,526040613,Verilog,UART-Universal-Asynchronous-Receiver-Transmitter-,6,0,2022-08-18 03:44:32+00:00,[],None
770,https://github.com/OIhroDIL/seg_test2.git,2022-08-22 04:00:16+00:00,,0,OIhroDIL/seg_test2,527404696,Verilog,seg_test2,1,0,2022-08-22 04:01:10+00:00,[],None
771,https://github.com/fleb72/FPGA-Ultrasonic-sensor.git,2022-08-21 18:02:12+00:00,FPGA Ultrasonic sensor controller (SRF05 / HC-SR04),1,fleb72/FPGA-Ultrasonic-sensor,527286745,Verilog,FPGA-Ultrasonic-sensor,227,0,2022-08-21 19:56:11+00:00,[],None
772,https://github.com/AllenDBoston/PMU_caravel_mpw7.git,2022-08-24 14:50:30+00:00,,0,AllenDBoston/PMU_caravel_mpw7,528469042,Verilog,PMU_caravel_mpw7,558575,0,2022-08-24 14:50:43+00:00,[],https://api.github.com/licenses/apache-2.0
773,https://github.com/DingZ0115/2022_Spring_ComputerOrganization.git,2022-08-24 09:40:15+00:00,,0,DingZ0115/2022_Spring_ComputerOrganization,528357148,Verilog,2022_Spring_ComputerOrganization,10279,0,2022-08-24 09:52:37+00:00,[],None
774,https://github.com/Harshkadole/Unconventional-density-based-traffic-light-controller.git,2022-08-25 11:19:50+00:00,Traffic light controller for three way junction with  a main road and a side road.,0,Harshkadole/Unconventional-density-based-traffic-light-controller,528817683,Verilog,Unconventional-density-based-traffic-light-controller,1,0,2022-08-25 11:22:11+00:00,[],None
775,https://github.com/ZeroX29a/pynq_clock_Divider_with_sw.git,2022-08-26 14:40:51+00:00,Simple Projects based on Pynq Z2,0,ZeroX29a/pynq_clock_Divider_with_sw,529294225,Verilog,pynq_clock_Divider_with_sw,1083,0,2022-08-26 15:00:13+00:00,[],None
776,https://github.com/KAMOME-code/RSA-encryption-in-Verilog.git,2022-08-27 03:21:25+00:00,"Result = ""A^B mod C"", 8 bit RSA but easily expandable",0,KAMOME-code/RSA-encryption-in-Verilog,529469310,Verilog,RSA-encryption-in-Verilog,81,0,2022-11-16 05:07:47+00:00,[],https://api.github.com/licenses/mit
777,https://github.com/Ayesh-Rajakaruna/Image-downsampling-processor-design.git,2022-08-25 01:09:48+00:00,,0,Ayesh-Rajakaruna/Image-downsampling-processor-design,528647740,Verilog,Image-downsampling-processor-design,2775,0,2022-08-25 01:23:34+00:00,[],None
778,https://github.com/chiplet/tinytapeout-snake.git,2022-08-28 14:43:33+00:00,,1,chiplet/tinytapeout-snake,529890037,Verilog,tinytapeout-snake,12,0,2022-08-28 14:43:37+00:00,[],https://api.github.com/licenses/apache-2.0
779,https://github.com/bigwhoman/Mini-core.git,2022-08-28 14:53:30+00:00,,0,bigwhoman/Mini-core,529892645,Verilog,Mini-core,14091,0,2022-08-28 17:04:41+00:00,[],None
780,https://github.com/WeiXXXXVVVV/LZ77-ELA.git,2022-08-28 15:31:57+00:00,,0,WeiXXXXVVVV/LZ77-ELA,529902694,Verilog,LZ77-ELA,5,0,2022-08-28 15:33:11+00:00,[],None
781,https://github.com/kambadur/tinytapeout_2bitcounter.git,2022-08-28 17:50:48+00:00,,0,kambadur/tinytapeout_2bitcounter,529937241,Verilog,tinytapeout_2bitcounter,7,0,2022-08-28 17:50:52+00:00,[],https://api.github.com/licenses/apache-2.0
782,https://github.com/tkuester/wokwi-directghost.git,2022-08-27 14:22:33+00:00,,1,tkuester/wokwi-directghost,529606846,Verilog,wokwi-directghost,6,0,2022-08-27 14:22:37+00:00,[],https://api.github.com/licenses/apache-2.0
783,https://github.com/nicoleddm/Projeto-Jogo.git,2022-08-27 00:31:18+00:00,"Projeto de um jogo pedre, papel ou tesoura. ",0,nicoleddm/Projeto-Jogo,529440776,Verilog,Projeto-Jogo,7253,0,2022-08-27 01:07:48+00:00,[],None
784,https://github.com/yangyang1120/ISLAB_summer2022.git,2022-08-29 04:32:22+00:00,summer training lab,0,yangyang1120/ISLAB_summer2022,530065854,Verilog,ISLAB_summer2022,1058,0,2022-08-29 04:36:01+00:00,[],None
785,https://github.com/phish432/Carry-Lookahead-Adder.git,2022-08-14 02:15:02+00:00,VLSI Design Project implementing a Carry Lookahead Adder.,0,phish432/Carry-Lookahead-Adder,524552377,Verilog,Carry-Lookahead-Adder,1570,0,2022-08-14 02:19:54+00:00,[],None
786,https://github.com/Rahulyadav121201/Finite-State-Machine.git,2022-08-15 06:18:22+00:00,,0,Rahulyadav121201/Finite-State-Machine,524876045,Verilog,Finite-State-Machine,1,0,2022-08-28 11:07:44+00:00,[],None
787,https://github.com/Sondos-Shabana/Pipelined-MIPS-Processor.git,2022-08-14 04:09:52+00:00,,1,Sondos-Shabana/Pipelined-MIPS-Processor,524569765,Verilog,Pipelined-MIPS-Processor,12,0,2022-08-14 04:23:49+00:00,[],None
788,https://github.com/jessimd/caravel-tinyrocket.git,2022-08-13 01:17:37+00:00,,0,jessimd/caravel-tinyrocket,524266532,Verilog,caravel-tinyrocket,66493,0,2022-08-13 01:17:49+00:00,[],https://api.github.com/licenses/apache-2.0
789,https://github.com/SushmaUsurupati/Asynchronous-FIFO.git,2022-08-15 13:33:56+00:00,,0,SushmaUsurupati/Asynchronous-FIFO,524999708,Verilog,Asynchronous-FIFO,4348,0,2022-08-15 13:40:35+00:00,[],None
790,https://github.com/manijith/Asynchronous_FIFO.git,2022-08-15 19:27:55+00:00,,0,manijith/Asynchronous_FIFO,525112918,Verilog,Asynchronous_FIFO,454,0,2022-08-15 19:28:46+00:00,[],None
791,https://github.com/Jagadeesh100100/Dadda-Multiplier.git,2022-08-15 16:26:52+00:00,,0,Jagadeesh100100/Dadda-Multiplier,525058655,Verilog,Dadda-Multiplier,314,0,2022-08-15 16:36:27+00:00,[],None
792,https://github.com/Ziad-cyber/AES.git,2022-08-16 07:00:33+00:00,,0,Ziad-cyber/AES,525266119,Verilog,AES,8,0,2022-08-30 06:22:06+00:00,[],None
793,https://github.com/knirajiitb/Dadda-Multiplier.git,2022-08-17 07:20:11+00:00,Dadda multiplier using brent kung adder,0,knirajiitb/Dadda-Multiplier,525682123,Verilog,Dadda-Multiplier,12,0,2022-08-17 07:22:10+00:00,[],None
794,https://github.com/Mahi36/32-bit-Brent-Kung-Logarithmic-Adder.git,2022-08-16 13:01:26+00:00,This is 32-bit tree adder which performs the addition operation at faster rate as compared to Ripple Carry Adder.,0,Mahi36/32-bit-Brent-Kung-Logarithmic-Adder,525381572,Verilog,32-bit-Brent-Kung-Logarithmic-Adder,3,0,2022-08-16 13:03:45+00:00,[],None
795,https://github.com/lpn-plant/lpntpm-lpc-verilog.git,2022-08-16 11:26:11+00:00,,2,lpn-plant/lpntpm-lpc-verilog,525349297,Verilog,lpntpm-lpc-verilog,311,0,2022-08-17 21:20:25+00:00,[],https://api.github.com/licenses/lgpl-2.1
796,https://github.com/bieganski/tinytapeout_bieganski.git,2022-08-29 13:29:49+00:00,,1,bieganski/tinytapeout_bieganski,530232702,Verilog,tinytapeout_bieganski,13,0,2022-08-29 13:29:53+00:00,[],https://api.github.com/licenses/apache-2.0
797,https://github.com/dominic-meads/CAN_2.0.git,2022-08-31 03:08:12+00:00,CAN_2.0,0,dominic-meads/CAN_2.0,530917306,Verilog,CAN_2.0,366,0,2022-12-08 21:17:07+00:00,[],None
798,https://github.com/ThorKn/tinytapeout_shiftregister_8bit.git,2022-08-31 11:18:35+00:00,Shiftregister 8-bit: A mikrochip design for tapeout with SKY130 MPW via tinytapeouts.,1,ThorKn/tinytapeout_shiftregister_8bit,531050423,Verilog,tinytapeout_shiftregister_8bit,318,0,2022-10-03 18:03:12+00:00,[],https://api.github.com/licenses/apache-2.0
799,https://github.com/andars/universal-turing-machine-aw7s8.git,2022-08-31 19:40:01+00:00,,1,andars/universal-turing-machine-aw7s8,531233322,Verilog,universal-turing-machine-aw7s8,44,0,2022-08-31 19:40:23+00:00,[],https://api.github.com/licenses/apache-2.0
800,https://github.com/azzeloof/FunPGAs.git,2022-08-31 20:29:33+00:00,,0,azzeloof/FunPGAs,531248401,Verilog,FunPGAs,22,0,2022-08-31 20:45:43+00:00,[],https://api.github.com/licenses/gpl-3.0
801,https://github.com/rmosenkis/DDR-FPGA.git,2022-08-30 18:14:22+00:00,Dance Dance Revolution FPGA implimentation,0,rmosenkis/DDR-FPGA,530776485,Verilog,DDR-FPGA,10,0,2022-08-30 18:15:36+00:00,[],None
802,https://github.com/shubham-sai47/FSM_Sequence_Detector.git,2022-08-30 09:14:11+00:00,1101 Overlapping Sequence Detector,0,shubham-sai47/FSM_Sequence_Detector,530580974,Verilog,FSM_Sequence_Detector,164,0,2022-08-30 09:15:38+00:00,[],None
803,https://github.com/todd1251/tinytapeout-figure8.git,2022-08-31 16:05:56+00:00,Figure 8 pattern generator,1,todd1251/tinytapeout-figure8,531159062,Verilog,tinytapeout-figure8,48,0,2022-09-23 22:43:29+00:00,['tinytapeout'],https://api.github.com/licenses/apache-2.0
804,https://github.com/seungjoyea/FIR_Filter.git,2022-08-17 04:33:05+00:00,,0,seungjoyea/FIR_Filter,525639740,Verilog,FIR_Filter,11,0,2022-08-17 04:34:32+00:00,[],None
