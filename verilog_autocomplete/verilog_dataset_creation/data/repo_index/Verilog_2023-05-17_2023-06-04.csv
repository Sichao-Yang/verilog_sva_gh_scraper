,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/WangXuan95/FPGA-Gzip-compressor.git,2023-05-26 12:23:07+00:00,FPGA-based GZIP (deflate) data compressor. Input raw data and output standard GZIP format (as known as .gz file format). 基于 FPGA 的流式 GZIP 压缩器，用于通用数据压缩。输入原始数据，输出标准的 GZIP 格式，即常见的 .gz / .tar.gz 文件的格式。,15,WangXuan95/FPGA-Gzip-compressor,645781763,Verilog,FPGA-Gzip-compressor,1207,78,2024-04-07 12:11:08+00:00,"['deflate', 'deflate-algorithm', 'fpga', 'gzip', 'gzip-compression', 'verilog', 'deflate-compression', 'deflate-compressor', 'gzip-compressor', 'gzip-encoder', 'data-compression', 'data-compressor', 'compression']",https://api.github.com/licenses/gpl-3.0
1,https://github.com/jjejdhhd/License-Plate-Recognition-FPGA.git,2023-05-17 02:45:20+00:00,基于FPGA进行车牌识别,10,jjejdhhd/License-Plate-Recognition-FPGA,641714494,Verilog,License-Plate-Recognition-FPGA,143863,43,2024-04-11 06:07:59+00:00,[],None
2,https://github.com/kiwih/qtcore-C1.git,2023-05-22 20:30:32+00:00,,3,kiwih/qtcore-C1,644103771,Verilog,qtcore-C1,169132,39,2024-04-12 07:39:22+00:00,[],https://api.github.com/licenses/apache-2.0
3,https://github.com/hipersys-team/lightning.git,2023-05-31 18:56:32+00:00,[SIGCOMM 2023] Lightning: A Reconfigurable Photonic-Electronic SmartNIC for Fast and Energy-Efficient Inference,5,hipersys-team/lightning,647895277,Verilog,lightning,14713,36,2024-03-07 14:49:53+00:00,"['machine-learning', 'photonic-computing', 'rfsoc', 'smartnic', 'verilog', 'fpga-soc', 'inference-serving', 'hardware']",https://api.github.com/licenses/mit
4,https://github.com/hello-eternity/Cyberrio.git,2023-05-31 16:32:22+00:00,,10,hello-eternity/Cyberrio,647844294,Verilog,Cyberrio,68337,31,2024-03-26 15:26:03+00:00,[],https://api.github.com/licenses/apache-2.0
5,https://github.com/Kyp069/ep.git,2023-05-19 16:32:04+00:00,Elan Enterprise FPGA implementation,6,Kyp069/ep,642915905,Verilog,ep,3618,10,2024-04-12 08:01:33+00:00,[],None
6,https://github.com/LC044/CPU.git,2023-06-01 08:41:48+00:00,五级流水线CPU设计,0,LC044/CPU,648116316,Verilog,CPU,505,9,2024-03-18 12:27:18+00:00,"['cpu', 'verilog']",https://api.github.com/licenses/gpl-3.0
7,https://github.com/suchuankai/CNN-hw-accelerator.git,2023-05-22 10:26:43+00:00,CNN hardware accelerator to accelerate quantized LeNet-5 model ,0,suchuankai/CNN-hw-accelerator,643870097,Verilog,CNN-hw-accelerator,42434,7,2024-03-23 12:01:39+00:00,"['accelerator', 'cnn']",None
8,https://github.com/cepdnaclk/e17-4yp-Neuromorphic-NoC-Architecture-for-SNNs.git,2023-05-19 16:39:40+00:00,"This project aims to develop a novel neuromorphic NoC architecture based on RISC-V ISA to support spiking neural network applications, and test it on FPGA.",4,cepdnaclk/e17-4yp-Neuromorphic-NoC-Architecture-for-SNNs,642918436,Verilog,e17-4yp-Neuromorphic-NoC-Architecture-for-SNNs,4952,6,2024-03-19 17:57:06+00:00,[],None
9,https://github.com/xiaotianbc/FPGA_XDMA_Demo.git,2023-05-29 16:20:26+00:00,a simple FPGA xdma demo based Memblaze,0,xiaotianbc/FPGA_XDMA_Demo,646914254,Verilog,FPGA_XDMA_Demo,12774,6,2024-03-31 02:25:54+00:00,[],None
10,https://github.com/Asma-Mohsin/Model-Predictive-Controller_using-AI.git,2023-06-01 19:39:28+00:00,"MPC, or Model Predictive Control, is an advanced control strategy that uses a mathematical model and predictions of future behavior to optimize control actions over a finite time horizon. It is widely used in engineering and automation systems to improve performance, handle constraints, and adapt to changing conditions in real-time.",0,Asma-Mohsin/Model-Predictive-Controller_using-AI,648359123,Verilog,Model-Predictive-Controller_using-AI,293540,5,2024-01-09 08:53:45+00:00,[],https://api.github.com/licenses/apache-2.0
11,https://github.com/Shaf3y99/OFDM_Verilog.git,2023-05-27 17:13:15+00:00,This repo is about implementing OFDM transmitter on FPGA (Zedboard) using Verilog language and Vivado simulator,2,Shaf3y99/OFDM_Verilog,646220709,Verilog,OFDM_Verilog,7,5,2024-04-11 03:10:36+00:00,[],None
12,https://github.com/Nidhinchandran47/NxN-network-on-chip.git,2023-06-02 10:37:42+00:00,implementation of a 5 port router,0,Nidhinchandran47/NxN-network-on-chip,648594530,Verilog,NxN-network-on-chip,138,5,2024-01-16 12:15:45+00:00,[],None
13,https://github.com/HaoderO/Color_Space_Conversion.git,2023-05-30 12:42:53+00:00,RGB转YCbCr、HSV、HSI等及其反转，Verilog语言实现。,0,HaoderO/Color_Space_Conversion,647277273,Verilog,Color_Space_Conversion,4215,4,2024-03-15 08:33:59+00:00,[],None
14,https://github.com/johnnycubides/digital-electronic-1-101.git,2023-05-17 22:03:20+00:00,,2,johnnycubides/digital-electronic-1-101,642125720,Verilog,digital-electronic-1-101,16316,4,2023-12-02 14:25:19+00:00,"['cyclone-iv', 'fpga', 'ice40', 'iverilog', 'verilog', 'yosys']",None
15,https://github.com/ayyucedemirbas/8bit_single_cycle_computer.git,2023-05-17 21:10:58+00:00,,0,ayyucedemirbas/8bit_single_cycle_computer,642112202,Verilog,8bit_single_cycle_computer,4,4,2023-05-23 05:38:35+00:00,[],None
16,https://github.com/XhyDds/creep.git,2023-05-17 10:24:42+00:00,,0,XhyDds/creep,641865549,Verilog,creep,157308,4,2023-11-17 04:28:59+00:00,[],https://api.github.com/licenses/mit
17,https://github.com/clemenkok/BalanceBug.git,2023-05-19 11:20:46+00:00,EEE2/EIE2 Project,1,clemenkok/BalanceBug,642798618,Verilog,BalanceBug,149133,4,2024-01-21 17:19:33+00:00,[],None
18,https://github.com/blackbird2003/Verilog_Lock.git,2023-05-26 18:18:11+00:00,Verilog密码锁设计，来自UESTC英才数电课程作业。,0,blackbird2003/Verilog_Lock,645907756,Verilog,Verilog_Lock,5,4,2024-03-28 11:55:50+00:00,[],None
19,https://github.com/pgreenland/plutosdr-hdl-quantulum.git,2023-06-03 10:00:29+00:00,Additional PlutoSDR HDL libraries,0,pgreenland/plutosdr-hdl-quantulum,648951393,Verilog,plutosdr-hdl-quantulum,77,3,2024-02-08 18:37:56+00:00,[],https://api.github.com/licenses/mit
20,https://github.com/Abd1997-Dev/PRN-Based-CDR-Circuits.git,2023-05-23 04:13:38+00:00,Pseudo Random Number based Clock and Data Recovery circuits ,0,Abd1997-Dev/PRN-Based-CDR-Circuits,644216739,Verilog,PRN-Based-CDR-Circuits,2574,3,2024-03-28 07:40:35+00:00,[],None
21,https://github.com/KillerPQY/CUHKSZ-CSC3050.git,2023-06-03 01:34:27+00:00,This repository stored my assignments of the CSC3050 course at CUHKSZ in my undergraduate career.,0,KillerPQY/CUHKSZ-CSC3050,648847564,Verilog,CUHKSZ-CSC3050,95259,3,2023-12-24 06:50:40+00:00,[],None
22,https://github.com/ZhangYHe/32bit-ALU.git,2023-05-20 12:21:33+00:00,32位ALU/32bit ALU,0,ZhangYHe/32bit-ALU,643202325,Verilog,32bit-ALU,245,3,2023-12-06 01:14:13+00:00,[],None
23,https://github.com/lisper/sun2-fpga.git,2023-05-27 19:48:58+00:00,fpga implementaion of sun-2 workstation without a 68010,0,lisper/sun2-fpga,646258262,Verilog,sun2-fpga,18079,3,2024-04-03 00:15:09+00:00,[],None
24,https://github.com/JAYRAM711/FSM-MINI-PROJECTS.git,2023-05-18 13:39:49+00:00,This Repo contains Source Codes of FSM-BASED implementation of various circuit designs using Verilog in Xilinx ISE 14.7 and sometimes Modelsim tools,0,JAYRAM711/FSM-MINI-PROJECTS,642402220,Verilog,FSM-MINI-PROJECTS,1515,3,2024-04-11 03:10:21+00:00,[],None
25,https://github.com/pyCoder03/CISC_16bit.git,2023-05-17 15:35:58+00:00,"Modeling a 16-bit CISC processor ""ZEAL"" using Verilog and implementing on FPGA.",0,pyCoder03/CISC_16bit,641994952,Verilog,CISC_16bit,29,2,2023-10-22 13:03:09+00:00,[],None
26,https://github.com/sasasatori/ime-bit_digital_frontend_specification.git,2023-05-20 11:34:31+00:00,,0,sasasatori/ime-bit_digital_frontend_specification,643190105,Verilog,ime-bit_digital_frontend_specification,29273,2,2023-10-13 14:07:24+00:00,[],None
27,https://github.com/mgwang37/AXI4Bus.git,2023-05-22 03:05:16+00:00,一套AXI4 interconnect 组件，通过简单连接可以搭建需要的AXI interconnect。,1,mgwang37/AXI4Bus,643727370,Verilog,AXI4Bus,38,2,2024-02-09 14:48:24+00:00,[],https://api.github.com/licenses/gpl-3.0
28,https://github.com/Royfor12/CQUT-FPGA-Electric_Piano.git,2023-06-01 15:55:56+00:00,硬件电路设计_音乐盒&电子琴,0,Royfor12/CQUT-FPGA-Electric_Piano,648282148,Verilog,CQUT-FPGA-Electric_Piano,7781,2,2023-08-15 04:19:30+00:00,[],https://api.github.com/licenses/mit
29,https://github.com/sisifos9461/8bit_cpu.git,2023-05-22 03:54:08+00:00,"build a 8bit cpu by verilog with instruction mov,add and sub",0,sisifos9461/8bit_cpu,643739007,Verilog,8bit_cpu,36,2,2023-08-16 12:54:57+00:00,[],None
30,https://github.com/tangzihengtzh/FPGA-.git,2023-06-02 18:22:53+00:00,FPGA搭建UART实现串口通信,0,tangzihengtzh/FPGA-,648755945,Verilog,FPGA-,0,2,2023-08-24 13:33:39+00:00,[],None
31,https://github.com/JakeHafele101/FPGA_SSD1331_OLED_Interface.git,2023-05-29 22:37:13+00:00,,0,JakeHafele101/FPGA_SSD1331_OLED_Interface,647024434,Verilog,FPGA_SSD1331_OLED_Interface,79231,2,2023-11-20 16:13:58+00:00,[],None
32,https://github.com/eymay/riscv-cocotb.git,2023-05-28 14:29:47+00:00,Unit testing with Python for agile RISC-V core development based on Cocotb,0,eymay/riscv-cocotb,646478428,Verilog,riscv-cocotb,76,2,2024-03-28 19:28:50+00:00,[],None
33,https://github.com/dylee0907/Process-in-Memory-PIM-.git,2023-06-03 12:09:07+00:00,PIM architecture using SRAM,0,dylee0907/Process-in-Memory-PIM-,648983444,Verilog,Process-in-Memory-PIM-,20,2,2024-01-05 15:18:19+00:00,[],None
34,https://github.com/MYNAMEHOLO/ICCONTEST_2018_uni.git,2023-05-25 06:32:27+00:00,Cell Based IC_CONTEST 2018 uni,0,MYNAMEHOLO/ICCONTEST_2018_uni,645203251,Verilog,ICCONTEST_2018_uni,834,2,2023-08-14 08:57:48+00:00,[],None
35,https://github.com/Masimba249/Quantus-Prime-Solutions.git,2023-05-23 07:03:31+00:00,Providing Solution to the Quantus Prime Solutions,0,Masimba249/Quantus-Prime-Solutions,644266919,Verilog,Quantus-Prime-Solutions,34,2,2024-03-03 07:14:23+00:00,[],None
36,https://github.com/sohnryang/csed273-final-project.git,2023-05-21 03:04:42+00:00,CSED273 Final Project,0,sohnryang/csed273-final-project,643397901,Verilog,csed273-final-project,682,2,2024-03-11 02:52:19+00:00,[],None
37,https://github.com/osayamenja/RISCyMCU.git,2023-05-29 20:22:23+00:00,An 8-bit microcontroller unit with a 4-stage pipelined RISC CPU supporting data and control hazard detection. ,0,osayamenja/RISCyMCU,646991687,Verilog,RISCyMCU,863,2,2024-01-17 03:00:42+00:00,"['fpga', 'verilog']",None
38,https://github.com/sgn-cho/fpga_game_2048.git,2023-05-25 10:44:11+00:00,,0,sgn-cho/fpga_game_2048,645295924,Verilog,fpga_game_2048,375,2,2023-12-25 09:12:22+00:00,[],None
39,https://github.com/lauchinyuan/reed_solomon_codes.git,2023-05-30 15:27:34+00:00,Reed Solomon encoder written in verilog hardware description language,0,lauchinyuan/reed_solomon_codes,647348358,Verilog,reed_solomon_codes,105,2,2024-02-19 14:08:59+00:00,[],None
40,https://github.com/erdemcanaz/EE314-Term-Project.git,2023-05-24 13:39:55+00:00,,0,erdemcanaz/EE314-Term-Project,644899998,Verilog,EE314-Term-Project,794879,2,2023-06-25 02:51:36+00:00,[],None
41,https://github.com/bol-edu/caravel-soc_fpga.git,2023-05-29 13:40:54+00:00,,4,bol-edu/caravel-soc_fpga,646853744,Verilog,caravel-soc_fpga,13199,2,2023-06-13 20:21:10+00:00,[],None
42,https://github.com/Jaya-Bansal/RISC-V.git,2023-05-24 10:05:32+00:00,This repository contains the Verilog code for implementing a 32 bit RISC-V processor.,1,Jaya-Bansal/RISC-V,644814038,Verilog,RISC-V,38,2,2023-06-14 13:58:15+00:00,[],None
43,https://github.com/ben5049/EEEBalanceBug.git,2023-05-18 14:36:57+00:00,Repository for group 1's balancing robot (2023),0,ben5049/EEEBalanceBug,642425949,Verilog,EEEBalanceBug,883834,2,2023-06-24 17:02:59+00:00,"['balancing-robot', 'imperial-college-london', 'robotics']",None
44,https://github.com/Jingtao01Zhong/DQPSK-Modem.git,2023-05-29 13:07:10+00:00,DQPSK Modem designed by Verilog HDL,0,Jingtao01Zhong/DQPSK-Modem,646839890,Verilog,DQPSK-Modem,19,2,2023-09-16 08:41:01+00:00,[],None
45,https://github.com/xhd0728/HEU-Model-Computer.git,2023-06-01 11:54:23+00:00,哈尔滨工程大学——模型机设计,1,xhd0728/HEU-Model-Computer,648185896,Verilog,HEU-Model-Computer,5368,2,2023-09-24 10:39:26+00:00,[],None
46,https://github.com/Essenceia/MoldUPD64.git,2023-05-26 07:26:59+00:00,RTL implementation of a MoldUPD64 receiver. ,1,Essenceia/MoldUPD64,645676534,Verilog,MoldUPD64,2809,2,2023-12-07 16:36:04+00:00,"['formal-verification', 'icarus-verilog', 'moldudp', 'moldudp64', 'rtl', 'verilog', 'yosys', 'hft-network', 'itch', 'ouch']",
47,https://github.com/cristicordonas/Traffic_Lights.git,2023-05-29 15:27:50+00:00,Traffic lights design in Verilog,0,cristicordonas/Traffic_Lights,646895338,Verilog,Traffic_Lights,169,2,2023-12-26 02:37:21+00:00,[],None
48,https://github.com/DrEden33773/VerilogLearning.git,2023-05-26 11:46:23+00:00,,0,DrEden33773/VerilogLearning,645767853,Verilog,VerilogLearning,30,2,2024-02-15 02:58:01+00:00,[],https://api.github.com/licenses/mit
49,https://github.com/Apostolgs/HW_1_Project.git,2023-05-30 11:09:51+00:00,@Apostolgs's Implementing a Transmitter-Receiver System in Verilog using UART protocol and display on a 7-Segments LED Display Screen,0,Apostolgs/HW_1_Project,647242176,Verilog,HW_1_Project,287,2,2023-06-01 04:31:43+00:00,[],None
50,https://github.com/RonnyA/nd-120.git,2023-06-02 08:50:04+00:00,Norsk Data ND-120 CPU Design Documents. Modern Logisim and HDL implementation,0,RonnyA/nd-120,648558424,Verilog,nd-120,207335,2,2024-02-21 17:20:41+00:00,"['logisim', 'norsk-data', 'verilog']",https://api.github.com/licenses/mit
51,https://github.com/CHS-SANDEEP/Chess_Clock_Timer.git,2023-05-27 14:05:02+00:00,,0,CHS-SANDEEP/Chess_Clock_Timer,646169180,Verilog,Chess_Clock_Timer,4,1,2023-05-27 14:07:53+00:00,[],None
52,https://github.com/uiysda/Pipelining_Design.git,2023-06-02 13:35:32+00:00,,1,uiysda/Pipelining_Design,648656499,Verilog,Pipelining_Design,131,1,2023-06-02 13:41:28+00:00,[],None
53,https://github.com/EhabMostafaa/FFE-EQUALIZER.git,2023-05-30 09:58:35+00:00,FFE Equalizer design using only 1 multiplier & 1 adder and make testbench using Matlab Model,1,EhabMostafaa/FFE-EQUALIZER,647216511,Verilog,FFE-EQUALIZER,10,1,2023-05-30 18:52:59+00:00,[],None
54,https://github.com/algofoogle/raybox_reciprocal.git,2023-05-27 05:03:52+00:00,Verilog HDL fixed-point single-step (combinational) reciprocal approximation,0,algofoogle/raybox_reciprocal,646038577,Verilog,raybox_reciprocal,13,1,2023-07-30 09:01:07+00:00,[],None
55,https://github.com/Shashvat300/Traffic_Signal_Controller.git,2023-05-17 19:34:45+00:00,,0,Shashvat300/Traffic_Signal_Controller,642084077,Verilog,Traffic_Signal_Controller,11,1,2023-05-17 19:52:31+00:00,[],None
56,https://github.com/Wanghaixia-qwq/2_TinyAMBA_AHB_APB.git,2023-05-23 14:36:36+00:00,A simple AHB_demo by Haixia Wang.,0,Wanghaixia-qwq/2_TinyAMBA_AHB_APB,644449367,Verilog,2_TinyAMBA_AHB_APB,6,1,2024-02-08 16:59:34+00:00,[],None
57,https://github.com/theZeenX1/InventoryManagerFPGA.git,2023-05-28 07:49:09+00:00,APR-2023 FPGA PProject,0,theZeenX1/InventoryManagerFPGA,646379203,Verilog,InventoryManagerFPGA,1488,1,2023-11-14 04:19:49+00:00,[],None
58,https://github.com/capt-FROSTY/L293D.git,2023-06-03 14:04:10+00:00,Created a L293D Motor Driver IC using Verilog,0,capt-FROSTY/L293D,649015198,Verilog,L293D,4,1,2023-06-03 14:09:18+00:00,[],None
59,https://github.com/Satyamverma0721/Full_Adder.git,2023-05-26 21:23:05+00:00,"A full adder is a digital circuit that adds two binary numbers together, along with a carry-in bit from a previous stage of addition. It produces a sum and a carry-out bit, which can be passed on to the next stage of addition.",0,Satyamverma0721/Full_Adder,645958206,Verilog,Full_Adder,296,1,2023-05-29 18:14:33+00:00,[],None
60,https://github.com/Satyamverma0721/Full-Adder-Using-Half-Adder.git,2023-05-29 18:46:19+00:00,"Full adder is also a combinational logic circuit that can add two binary digits (bits) and a carry bit, and produces a sum bit and a carry bit as output. From the logic diagram of the full adder using half adders, it is clear that we require two XOR gates, two AND gates and one OR gate for the implementation of a full adder circuit using half-adder",0,Satyamverma0721/Full-Adder-Using-Half-Adder,646963722,Verilog,Full-Adder-Using-Half-Adder,295,1,2023-05-30 09:52:27+00:00,[],None
61,https://github.com/shifengzhicheng/Logic_Synthesis_Using_abc.git,2023-05-28 11:23:21+00:00,,0,shifengzhicheng/Logic_Synthesis_Using_abc,646428452,Verilog,Logic_Synthesis_Using_abc,2765,1,2023-09-06 07:36:40+00:00,[],None
62,https://github.com/MoAminPourzare/Computer-Architecture-Course.git,2023-05-21 21:40:17+00:00,,0,MoAminPourzare/Computer-Architecture-Course,643664492,Verilog,Computer-Architecture-Course,3898,1,2023-12-25 20:41:32+00:00,[],None
63,https://github.com/fardinabbasi/RISC-V_Processor_SingleCycle.git,2023-05-26 11:56:59+00:00,Digital Systems 2 Course [ECE 778] - CA2 - Spring 2023 - University of Tehran - Dr. Safari,0,fardinabbasi/RISC-V_Processor_SingleCycle,645771754,Verilog,RISC-V_Processor_SingleCycle,1290,1,2024-03-22 21:50:51+00:00,"['computer-architecture', 'computer-arithmetic', 'digital-systems', 'risc-v', 'verilog', 'modelsim']",None
64,https://github.com/LN57421/CS202-CPU-Design.git,2023-05-23 15:53:31+00:00,,0,LN57421/CS202-CPU-Design,644482644,Verilog,CS202-CPU-Design,80,1,2023-06-04 09:00:51+00:00,[],None
65,https://github.com/AliMomtahen/RISK_V_single_cycle_implementation.git,2023-06-02 05:19:22+00:00,verilog description of single ctcle risk v proccessor ,0,AliMomtahen/RISK_V_single_cycle_implementation,648492435,Verilog,RISK_V_single_cycle_implementation,11,1,2023-11-21 16:13:24+00:00,[],None
66,https://github.com/xuanz20/thinpad.git,2023-05-30 01:39:20+00:00,"A 5-stage pipelined CPU in SystemVerilog which supports interrupts and exceptions, also support uCore (an OS written in C++), major project of Principle of Computer Organizations",0,xuanz20/thinpad,647063574,Verilog,thinpad,1063,1,2024-01-31 12:50:12+00:00,[],None
67,https://github.com/AbdullahHabib-github/RiscV-Processor.git,2023-05-18 16:23:44+00:00,"This projects implements Verilog modules for various processor components such as Program Counter, Instruction Memory, Data Memory, ALU, Muxes, etc.",0,AbdullahHabib-github/RiscV-Processor,642467592,Verilog,RiscV-Processor,71,1,2024-03-30 17:51:04+00:00,[],None
68,https://github.com/nic24-rgb/Dottori.git,2023-05-20 03:55:44+00:00,,0,nic24-rgb/Dottori,643083083,Verilog,Dottori,1441,1,2023-09-24 18:09:50+00:00,[],None
69,https://github.com/amir-hossein-shahgholi/CA-CA1.git,2023-06-04 11:53:00+00:00,,0,amir-hossein-shahgholi/CA-CA1,649290253,Verilog,CA-CA1,174,1,2023-07-07 15:21:59+00:00,[],None
70,https://github.com/amir-hossein-shahgholi/CA-CA4.git,2023-06-04 12:15:06+00:00,,0,amir-hossein-shahgholi/CA-CA4,649296034,Verilog,CA-CA4,429,1,2023-07-07 15:21:25+00:00,[],None
71,https://github.com/cad-polito-it/r4ves.git,2023-05-27 17:04:05+00:00,RiscV Environment for Simulation (R4VES) is a generic and modular framework that eases the grunt work required in order to perform pre/post-synthesis logic and fault simulation on RISC-V cores based on Model/QuestaSim and Z01X.,1,cad-polito-it/r4ves,646218221,Verilog,r4ves,4272,1,2024-01-25 08:10:32+00:00,"['fault-simulation', 'logic-simulation', 'questasim', 'risc-v', 'stuck-at-faults', 'zoix']",https://api.github.com/licenses/apache-2.0
72,https://github.com/shifengzhicheng/ASIC_Whack_A_Mole.git,2023-05-24 15:58:25+00:00,这是一个复旦的ASIC课程的项目，使用的开发板时XIlinx的xc7a35tfgg484-2,0,shifengzhicheng/ASIC_Whack_A_Mole,644959898,Verilog,ASIC_Whack_A_Mole,10643,1,2024-03-12 07:19:10+00:00,[],None
73,https://github.com/Sinan997/embedded-systems.git,2023-05-30 18:05:44+00:00,,0,Sinan997/embedded-systems,647407920,Verilog,embedded-systems,269,1,2024-04-09 06:43:30+00:00,[],None
74,https://github.com/Rqph/DE10-LITE-Lab3.git,2023-05-20 09:40:13+00:00,,0,Rqph/DE10-LITE-Lab3,643161839,Verilog,DE10-LITE-Lab3,238,1,2023-06-27 08:20:43+00:00,[],None
75,https://github.com/uiysda/ALU_Design.git,2023-06-02 13:27:13+00:00,,0,uiysda/ALU_Design,648653279,Verilog,ALU_Design,12,1,2023-06-02 13:34:17+00:00,[],None
76,https://github.com/reshma0639/Polar-Encoder.git,2023-05-25 17:19:44+00:00,,0,reshma0639/Polar-Encoder,645449973,Verilog,Polar-Encoder,63684,1,2023-07-14 08:48:15+00:00,[],None
77,https://github.com/kiwih/tt03p5-verilog-qtcoreA1.git,2023-05-28 16:38:26+00:00,,1,kiwih/tt03p5-verilog-qtcoreA1,646515190,Verilog,tt03p5-verilog-qtcoreA1,365,1,2024-01-22 06:48:03+00:00,[],https://api.github.com/licenses/apache-2.0
78,https://github.com/egegonul/opensparc.git,2023-05-20 03:09:59+00:00,,0,egegonul/opensparc,643074262,Verilog,opensparc,226,1,2023-07-25 13:02:21+00:00,[],None
79,https://github.com/srimanthtenneti/Systolic_Arrays.git,2023-06-03 14:37:01+00:00,This repo contains an implementation of a 2x2 Systolic Array using Verilog HDL. The testbench is also included in the design file. ,0,srimanthtenneti/Systolic_Arrays,649025150,Verilog,Systolic_Arrays,6,1,2023-09-27 19:22:07+00:00,[],https://api.github.com/licenses/apache-2.0
80,https://github.com/Satyamverma0721/4-Bit-Ripple-carry-Adder.git,2023-05-29 18:47:15+00:00,A ripple carry adder is a type of adder circuit that performs the addition of multiple binary digits by cascading full adders together.,0,Satyamverma0721/4-Bit-Ripple-carry-Adder,646964028,Verilog,4-Bit-Ripple-carry-Adder,99,1,2023-05-29 18:53:28+00:00,[],None
81,https://github.com/TarunkumarKondala/Router_1-3.git,2023-05-23 09:16:59+00:00,,0,TarunkumarKondala/Router_1-3,644318825,Verilog,Router_1-3,441,1,2023-09-12 14:36:20+00:00,[],None
82,https://github.com/charlotte-mu/ICC2023_grad.git,2023-05-17 09:27:44+00:00,2023 University College IC Design Contest / B_ICC2023_prelimily_grad_cell-based / Laser Treatment,0,charlotte-mu/ICC2023_grad,641843720,Verilog,ICC2023_grad,1163,1,2023-12-17 10:05:08+00:00,[],None
83,https://github.com/Vamsi12345-eng/100daysofRTL.git,2023-06-01 15:02:36+00:00,"Any kind of goal need its shorter steps to succeed it. On Considering the goal i have. To be an RTL engineer also need its shorter steps to succeed it. That is #100daysofRTL. In this #100daysofRTL i am going to build logics , code the logics that i have build using HDL and verify them using HVL for 100 days. Lets hope for the best and keep going. ",0,Vamsi12345-eng/100daysofRTL,648261395,Verilog,100daysofRTL,3506,1,2023-10-10 16:27:07+00:00,[],None
84,https://github.com/islam-nasser0/implementation-of-16-BITS-MIPS-MICROPROCESSOR-on-ICC.git,2023-05-20 14:30:18+00:00,,0,islam-nasser0/implementation-of-16-BITS-MIPS-MICROPROCESSOR-on-ICC,643238239,Verilog,implementation-of-16-BITS-MIPS-MICROPROCESSOR-on-ICC,4636,1,2024-02-28 05:12:53+00:00,[],None
85,https://github.com/Satyamverma0721/Half-Adder.git,2023-05-25 17:21:06+00:00,Half adder is a combinational circuit. It performs the binary addition operation of two 1-bit binary digits.,0,Satyamverma0721/Half-Adder,645450460,Verilog,Half-Adder,288,1,2023-05-25 17:30:08+00:00,[],None
86,https://github.com/Al-Amin134/Verilog-DSD-LAB-.git,2023-06-03 05:45:53+00:00,,0,Al-Amin134/Verilog-DSD-LAB-,648893055,Verilog,Verilog-DSD-LAB-,5,1,2023-06-03 05:51:24+00:00,[],None
87,https://github.com/Sushma-Soni/practiceverilog.git,2023-05-29 12:30:10+00:00,,0,Sushma-Soni/practiceverilog,646825764,Verilog,practiceverilog,3194,1,2023-06-28 03:00:51+00:00,[],https://api.github.com/licenses/apache-2.0
88,https://github.com/NimaEnigma/Hardwar_c.git,2023-06-01 06:34:51+00:00,,0,NimaEnigma/Hardwar_c,648072258,Verilog,Hardwar_c,6,1,2023-12-19 16:46:02+00:00,[],https://api.github.com/licenses/mit
89,https://github.com/saraa-mohamedd/Pipelined-RISCV-CPU.git,2023-06-02 20:07:00+00:00,"A verilog implementation of a pipelined processor for the RISC-V architecture, with support for all 40 instructions of the RV32I instruction set; as well as an additional 8 for the RV32M instruction set. Supports implementation on a Nexys A7 board. Implemented as the CSCE 3301 (Computer Architecture) course's first project, in Spring 2023. ",1,saraa-mohamedd/Pipelined-RISCV-CPU,648785454,Verilog,Pipelined-RISCV-CPU,204,1,2023-09-06 07:05:14+00:00,[],None
90,https://github.com/Aayushi-J/Verilog_codes.git,2023-05-27 19:01:32+00:00,,0,Aayushi-J/Verilog_codes,646247598,Verilog,Verilog_codes,18,1,2023-09-01 21:52:43+00:00,[],None
91,https://github.com/Satyamverma0721/Full-Subtractor.git,2023-06-01 17:10:22+00:00,"A full subtractor is a combinational circuit that performs subtraction of two bits, one is minuend and other is subtrahend, taking into account borrow of the previous adjacent lower minuend bit. This circuit has three inputs and two outputs. ",0,Satyamverma0721/Full-Subtractor,648309292,Verilog,Full-Subtractor,200,1,2023-06-01 18:43:42+00:00,[],None
92,https://github.com/capt-FROSTY/Car_Parking_System.git,2023-06-03 13:24:35+00:00,Created a Car Parking System using Verilog in Vivado,0,capt-FROSTY/Car_Parking_System,649003864,Verilog,Car_Parking_System,7,1,2023-06-03 14:09:19+00:00,[],None
93,https://github.com/reshma0639/POLAR-ENCODER-DECODER.git,2023-05-25 17:27:56+00:00,,0,reshma0639/POLAR-ENCODER-DECODER,645452798,Verilog,POLAR-ENCODER-DECODER,63685,1,2023-10-22 13:51:14+00:00,[],None
94,https://github.com/wangc0812/rics_v.git,2023-05-29 06:41:24+00:00,,0,wangc0812/rics_v,646705007,Verilog,rics_v,31671,1,2023-12-06 13:42:14+00:00,[],None
95,https://github.com/scottsus/EE457.git,2023-05-27 22:26:02+00:00,,0,scottsus/EE457,646287438,Verilog,EE457,2922,1,2024-03-31 09:50:14+00:00,[],None
96,https://github.com/wilb-bit/HDMI-Embedded.git,2023-05-24 08:39:42+00:00,Use Verilog HDL to program a FPGA (Intel Cyclone 5) to drive a HDMI output to a external monitor. Output the image of a bird to the screen.,0,wilb-bit/HDMI-Embedded,644780259,Verilog,HDMI-Embedded,2937,1,2024-02-27 11:53:17+00:00,[],None
97,https://github.com/pathces-gone/snuriscv-version2.git,2023-05-28 08:29:28+00:00,공부겸 대규모 리펙토링,0,pathces-gone/snuriscv-version2,646387923,Verilog,snuriscv-version2,191,1,2023-05-29 08:48:02+00:00,[],None
98,https://github.com/dakshinatharindu/matrix-multiplier-accelerator.git,2023-06-02 04:29:55+00:00,A Matrix Multiplication Accelerator implemented on PL side of Zynq SoC which communicate through external UART interface.,0,dakshinatharindu/matrix-multiplier-accelerator,648481059,Verilog,matrix-multiplier-accelerator,481,1,2023-07-27 05:48:19+00:00,[],None
99,https://github.com/PRAGATI-0102/router_fifo-Day-056-.git,2023-06-04 17:40:39+00:00, A FIFO buffer is a fundamental component often used in digital systems to manage and store data temporarily.,0,PRAGATI-0102/router_fifo-Day-056-,649390711,Verilog,router_fifo-Day-056-,283,1,2023-06-21 05:21:03+00:00,[],None
100,https://github.com/ycx122/Single-cycle-multipliers.git,2023-05-28 02:39:30+00:00,a Single-cycle multipliers。Low latency。32 bits。,0,ycx122/Single-cycle-multipliers,646323524,Verilog,Single-cycle-multipliers,4,1,2024-04-06 09:29:44+00:00,[],None
101,https://github.com/Harshal-0510/Approximate_Multipliers.git,2023-05-19 17:37:10+00:00,,0,Harshal-0510/Approximate_Multipliers,642938574,Verilog,Approximate_Multipliers,16,1,2023-07-13 16:05:35+00:00,[],None
102,https://github.com/DPhongUIT2021/Floating-Point-Multiplier-32bit-base-on-Indian-Vedic-mathematics.git,2023-05-19 09:37:45+00:00,,0,DPhongUIT2021/Floating-Point-Multiplier-32bit-base-on-Indian-Vedic-mathematics,642761778,Verilog,Floating-Point-Multiplier-32bit-base-on-Indian-Vedic-mathematics,92,1,2023-07-17 23:24:11+00:00,[],None
103,https://github.com/greentextterminal/FPGA_Slot_Machine.git,2023-05-18 00:56:54+00:00,FPGA files for a simple slot game,0,greentextterminal/FPGA_Slot_Machine,642163546,Verilog,FPGA_Slot_Machine,37,1,2023-05-18 02:17:40+00:00,[],None
104,https://github.com/Satyamverma0721/Full-Subtractor-Using-Half-Subtractor.git,2023-06-01 18:06:20+00:00,,0,Satyamverma0721/Full-Subtractor-Using-Half-Subtractor,648328484,Verilog,Full-Subtractor-Using-Half-Subtractor,87,1,2023-06-01 18:12:22+00:00,[],None
105,https://github.com/XeniaPhe/MIPS-Extended.git,2023-06-01 21:27:29+00:00,Extension of an existing MIPS implementation in verilog,1,XeniaPhe/MIPS-Extended,648389252,Verilog,MIPS-Extended,2003,1,2023-06-04 16:41:52+00:00,[],None
106,https://github.com/SeyyedAhmadRokni/Risc5_signle_cycle.git,2023-05-22 07:10:07+00:00,,0,SeyyedAhmadRokni/Risc5_signle_cycle,643794418,Verilog,Risc5_signle_cycle,233,1,2023-08-20 05:44:23+00:00,[],None
107,https://github.com/learn-cocotb/assignment-1-xor-verification-asimkhan8107.git,2023-05-17 06:45:45+00:00,assignment-1-xor-verification-asimkhan8107 created by GitHub Classroom,0,learn-cocotb/assignment-1-xor-verification-asimkhan8107,641780819,Verilog,assignment-1-xor-verification-asimkhan8107,16,1,2023-05-24 01:35:35+00:00,[],None
108,https://github.com/amir-hossein-shahgholi/CA-CA2.git,2023-06-04 11:58:00+00:00,,0,amir-hossein-shahgholi/CA-CA2,649291572,Verilog,CA-CA2,743,1,2023-07-07 15:21:37+00:00,[],None
109,https://github.com/CHS-SANDEEP/Router1x3.git,2023-05-27 13:09:31+00:00,,0,CHS-SANDEEP/Router1x3,646153945,Verilog,Router1x3,15,1,2023-05-27 14:07:54+00:00,[],None
110,https://github.com/amir-hossein-shahgholi/CA-CA3.git,2023-06-04 12:08:33+00:00,,0,amir-hossein-shahgholi/CA-CA3,649294380,Verilog,CA-CA3,682,1,2023-07-07 15:21:30+00:00,[],None
111,https://github.com/Satyamverma0721/Full-Adder-Using-If-Else.git,2023-05-29 18:45:28+00:00," If Else a conditional branching statement . If condition_1 evaluates to a non- zero value, then the procedural_statement_1 is executed. If condition_2 evaluates to a value 0, X or Z, the procedural_statement_1 will not be executed, and an else branch, if it exists, is executed.",0,Satyamverma0721/Full-Adder-Using-If-Else,646963468,Verilog,Full-Adder-Using-If-Else,216,1,2023-05-30 09:50:15+00:00,[],None
112,https://github.com/Vellarity/Mospolytech__FPGA_ciphers.git,2023-06-03 23:36:55+00:00,"Код реализаций алгоритмов шифрования AES и ""Кузнечик"" на языках Verilog и VHDL",0,Vellarity/Mospolytech__FPGA_ciphers,649145799,Verilog,Mospolytech__FPGA_ciphers,18,1,2023-11-17 16:11:38+00:00,[],None
113,https://github.com/hwlabnitc/Finite-State-Machines.git,2023-05-29 11:24:08+00:00,This is the second module of the Hardware Lab Course to build a single cycle processor at NIT Calicut  Topics Resources,0,hwlabnitc/Finite-State-Machines,646801678,Verilog,Finite-State-Machines,16,1,2024-02-18 23:15:30+00:00,[],None
114,https://github.com/casonk/CSC565-Computer_System_Architecture.git,2023-05-20 23:30:38+00:00,"Intro to Hardware Descriptive Languages, Study of Microprocessors, CPUs, GPUs ",0,casonk/CSC565-Computer_System_Architecture,643365259,Verilog,CSC565-Computer_System_Architecture,6001,1,2023-06-20 02:44:22+00:00,[],None
115,https://github.com/RajuMachupalli/IterativeMAC_carnival.git,2023-05-24 17:40:53+00:00,The project is a part of AI generated chip design contest. Designing an Iterative MAC based DNN accelerator for inference which can also train the models using same resources.,1,RajuMachupalli/IterativeMAC_carnival,644997752,Verilog,IterativeMAC_carnival,93694,1,2023-07-19 22:27:50+00:00,[],https://api.github.com/licenses/apache-2.0
116,https://github.com/rebek-007/riscvisa_ifu.git,2023-05-27 22:28:08+00:00,,0,rebek-007/riscvisa_ifu,646287757,Verilog,riscvisa_ifu,1805,1,2023-11-05 09:47:20+00:00,[],https://api.github.com/licenses/gpl-3.0
117,https://github.com/maj77/Karatsuba_project.git,2023-05-28 10:47:26+00:00,Hardware implementation of Karatsuba multiplication algorithm,0,maj77/Karatsuba_project,646419777,Verilog,Karatsuba_project,1181,1,2023-12-12 07:43:51+00:00,[],None
118,https://github.com/HenryJuan325/IC_CONTEST_2023_Laser-Treatment.git,2023-05-17 13:55:45+00:00,,0,HenryJuan325/IC_CONTEST_2023_Laser-Treatment,641949749,Verilog,IC_CONTEST_2023_Laser-Treatment,5773,1,2024-03-22 03:32:39+00:00,[],None
119,https://github.com/SSJ2085/Router-1x3.git,2023-05-18 22:23:37+00:00,,0,SSJ2085/Router-1x3,642577666,Verilog,Router-1x3,991,1,2023-05-18 22:48:25+00:00,[],None
120,https://github.com/Arafat-Kabir/PiCaSO.git,2023-05-30 21:13:40+00:00,,0,Arafat-Kabir/PiCaSO,647469191,Verilog,PiCaSO,264,1,2023-09-09 12:25:59+00:00,[],https://api.github.com/licenses/mit
121,https://github.com/haiyangqin/verilog-axi.git,2023-05-31 08:43:20+00:00,this is a axi interconnection module,0,haiyangqin/verilog-axi,647655545,Verilog,verilog-axi,705,1,2024-02-28 12:11:41+00:00,[],https://api.github.com/licenses/mit
122,https://github.com/TheFishBubbled/Risc-VCPU.git,2023-06-01 16:01:17+00:00,武汉大学计算机学院2021级（2023年）计算机组成与设计risc-vCPU设计,0,TheFishBubbled/Risc-VCPU,648284136,Verilog,Risc-VCPU,301,1,2024-03-22 01:57:34+00:00,[],None
123,https://github.com/4z0t/veriloglabs.git,2023-06-01 20:31:36+00:00,,1,4z0t/veriloglabs,648374495,Verilog,veriloglabs,158,1,2024-03-24 20:10:15+00:00,[],None
124,https://github.com/abrarfahim-afi/MBIST.git,2023-05-26 05:11:02+00:00,,0,abrarfahim-afi/MBIST,645634157,Verilog,MBIST,4781,1,2024-04-05 15:55:55+00:00,[],None
125,https://github.com/VVsxmja/MIPS31-SingleCycle.git,2023-05-25 16:49:22+00:00,同济大学 计算机组成原理 MIPS31 作业,0,VVsxmja/MIPS31-SingleCycle,645439335,Verilog,MIPS31-SingleCycle,3904,1,2023-08-09 13:39:31+00:00,[],https://api.github.com/licenses/mit
126,https://github.com/adar-sh/NxN-Systolic-Array.git,2023-06-02 11:09:16+00:00,,0,adar-sh/NxN-Systolic-Array,648604660,Verilog,NxN-Systolic-Array,272,1,2023-09-09 01:23:34+00:00,[],None
127,https://github.com/zafshin/Minesweeper.git,2023-05-26 12:23:21+00:00,,0,zafshin/Minesweeper,645781862,Verilog,Minesweeper,12373,1,2023-07-24 19:37:14+00:00,[],None
128,https://github.com/ajiiit/Sigmoid-Function.git,2023-06-02 10:36:57+00:00,Verilog implementation of Sigmoid function using Zhang approximation,0,ajiiit/Sigmoid-Function,648594305,Verilog,Sigmoid-Function,38949,1,2023-06-07 14:21:40+00:00,[],https://api.github.com/licenses/apache-2.0
129,https://github.com/nanana2002/riscvDesign.git,2023-05-31 16:17:01+00:00,基于RISC-V指令系统的单周期、多周期处理器设计,0,nanana2002/riscvDesign,647838706,Verilog,riscvDesign,31200,1,2023-08-29 03:13:37+00:00,[],None
130,https://github.com/taylorychen/Sky-Stacker.git,2023-06-01 00:53:06+00:00,A small FPGA game,0,taylorychen/Sky-Stacker,647987176,Verilog,Sky-Stacker,66,1,2023-09-26 04:59:59+00:00,[],None
131,https://github.com/Falcom4000/new.git,2023-05-18 02:44:40+00:00,,0,Falcom4000/new,642189489,Verilog,new,4,1,2023-07-05 08:01:53+00:00,[],None
132,https://github.com/Satyamverma0721/Half-Subtactor.git,2023-06-01 17:05:41+00:00,"A half subtractor is a digital logic circuit that performs binary subtraction of two single-bit binary numbers. It has two inputs, A and B, and two outputs, DIFFERENCE and BORROW.",0,Satyamverma0721/Half-Subtactor,648307652,Verilog,Half-Subtactor,200,1,2023-06-01 17:07:22+00:00,[],None
133,https://github.com/m4dem0x60/communication_protocols.git,2023-05-29 22:33:07+00:00,Common communication protocols in embedded systems,0,m4dem0x60/communication_protocols,647023525,Verilog,communication_protocols,3,0,2023-05-29 22:44:20+00:00,[],None
134,https://github.com/sangamanathpuncham/Ring_counter.git,2023-05-30 04:17:32+00:00,,0,sangamanathpuncham/Ring_counter,647102555,Verilog,Ring_counter,2280,0,2023-06-01 07:11:15+00:00,[],None
135,https://github.com/zainali28/RISCV-verilog.git,2023-06-03 18:28:53+00:00,This is a verilog code written for RISCV RV32I ISA,0,zainali28/RISCV-verilog,649087891,Verilog,RISCV-verilog,9,0,2023-06-03 18:29:27+00:00,[],None
136,https://github.com/2wodms/fifo.git,2023-06-04 09:02:17+00:00,for hojjai,0,2wodms/fifo,649247788,Verilog,fifo,2,0,2023-06-04 09:10:17+00:00,[],None
137,https://github.com/JayadityaVLSI/counter_10bit_verification.git,2023-05-31 01:22:26+00:00,Verification of a 10 bit counter using verilog,0,JayadityaVLSI/counter_10bit_verification,647526594,Verilog,counter_10bit_verification,2,0,2023-05-31 01:23:19+00:00,[],None
138,https://github.com/MuhammadTalhaPawa/verilog-series-multiplier-4x4-bits.git,2023-05-27 14:17:41+00:00,made this seies multiplier for fun,0,MuhammadTalhaPawa/verilog-series-multiplier-4x4-bits,646172736,Verilog,verilog-series-multiplier-4x4-bits,3,0,2023-05-27 15:03:39+00:00,[],None
139,https://github.com/syedr3/ECE-385-Final-Project-PONG-.git,2023-05-27 12:57:05+00:00,,0,syedr3/ECE-385-Final-Project-PONG-,646150522,Verilog,ECE-385-Final-Project-PONG-,32952,0,2023-06-05 14:49:50+00:00,[],None
140,https://github.com/Lucalini/BCD-to-Seven-Segment-Decoder.git,2023-06-02 06:31:36+00:00,In this experiment I used behavioral modeling and standard decoders to control the 7 segment display on the basys board. ,0,Lucalini/BCD-to-Seven-Segment-Decoder,648512164,Verilog,BCD-to-Seven-Segment-Decoder,1,0,2023-06-02 06:32:13+00:00,[],None
141,https://github.com/millerresearch/tt03p5.git,2023-06-02 08:10:38+00:00,Tiny Tapeout 3.5 submission,0,millerresearch/tt03p5,648545227,Verilog,tt03p5,32,0,2023-06-02 10:38:39+00:00,[],https://api.github.com/licenses/apache-2.0
142,https://github.com/OmarMiniesy/RISCV-Processor.git,2023-06-01 09:55:13+00:00,"Processor that implements the 40 RISCV assembly instructions, as well as the multiplication instructions. There is also the pipelined version of the processor.",0,OmarMiniesy/RISCV-Processor,648142975,Verilog,RISCV-Processor,4535,0,2023-06-01 09:59:21+00:00,[],None
143,https://github.com/MoFaraz/CPU.git,2023-06-01 20:39:53+00:00,,0,MoFaraz/CPU,648376913,Verilog,CPU,0,0,2023-06-01 20:45:42+00:00,[],None
144,https://github.com/IgorVoronetchi/Proiect_CLP.git,2023-05-30 16:18:12+00:00,,0,IgorVoronetchi/Proiect_CLP,647368309,Verilog,Proiect_CLP,83,0,2023-05-30 16:19:58+00:00,[],None
145,https://github.com/Ctr011/CS161L-Lab06.git,2023-06-02 23:47:57+00:00,Lab 6 For CS161l,0,Ctr011/CS161L-Lab06,648830753,Verilog,CS161L-Lab06,10325,0,2023-06-15 20:45:49+00:00,[],None
146,https://github.com/meison-lee/Computer-Architecture.git,2023-05-17 06:13:23+00:00,,0,meison-lee/Computer-Architecture,641769701,Verilog,Computer-Architecture,629,0,2023-05-17 06:15:18+00:00,[],None
147,https://github.com/mohamed-mohamed-tarek/hamming_verilog.git,2023-05-25 19:50:12+00:00,,0,mohamed-mohamed-tarek/hamming_verilog,645500293,Verilog,hamming_verilog,3,0,2023-05-25 19:56:27+00:00,[],None
148,https://github.com/AnnalingamGowsigan/building_a_simple_processor_and_memory_hierarchy.git,2023-05-25 15:38:26+00:00,,0,AnnalingamGowsigan/building_a_simple_processor_and_memory_hierarchy,645413060,Verilog,building_a_simple_processor_and_memory_hierarchy,1690,0,2023-05-25 15:38:57+00:00,[],None
149,https://github.com/avdssrk/UART_Virtex6.git,2023-05-24 02:56:32+00:00,Implementation of UART serial communication on Virtex 6 FPGA,0,avdssrk/UART_Virtex6,644676392,Verilog,UART_Virtex6,1160,0,2023-06-20 16:29:22+00:00,"['verilog', 'c']",None
150,https://github.com/Tanvir-Rizve/SIMD-processor.git,2023-05-24 05:46:38+00:00,,0,Tanvir-Rizve/SIMD-processor,644719054,Verilog,SIMD-processor,16534,0,2023-05-24 05:54:26+00:00,[],None
151,https://github.com/kiarashk8128/ceTech.git,2023-06-01 06:30:20+00:00,,0,kiarashk8128/ceTech,648070887,Verilog,ceTech,6,0,2023-06-01 06:30:28+00:00,[],https://api.github.com/licenses/mit
152,https://github.com/amirkoochk/-229-.git,2023-06-01 06:37:16+00:00,,0,amirkoochk/-229-,648073033,Verilog,-229-,8,0,2023-06-03 02:18:01+00:00,[],https://api.github.com/licenses/mit
153,https://github.com/CaptainRhett/Verilog-study.git,2023-05-31 09:34:25+00:00,,0,CaptainRhett/Verilog-study,647675421,Verilog,Verilog-study,4,0,2023-05-31 11:10:45+00:00,[],https://api.github.com/licenses/mit
154,https://github.com/malikshanaah1999/malik_efabless.git,2023-05-27 21:41:24+00:00,,0,malikshanaah1999/malik_efabless,646280142,Verilog,malik_efabless,41726,0,2023-05-27 21:42:02+00:00,[],https://api.github.com/licenses/apache-2.0
155,https://github.com/RoundShee/DigClockOnDE2.git,2023-05-25 11:49:31+00:00,在DE2开发板上的设计作业,0,RoundShee/DigClockOnDE2,645319697,Verilog,DigClockOnDE2,29,0,2023-05-29 00:17:17+00:00,[],None
156,https://github.com/MiSTer-devel/Arcade-KickAndRun_MiSTer.git,2023-06-02 15:31:25+00:00,Taito Kick And Run for MiSTer FPGA,2,MiSTer-devel/Arcade-KickAndRun_MiSTer,648700736,Verilog,Arcade-KickAndRun_MiSTer,21536,0,2023-06-08 08:24:51+00:00,[],https://api.github.com/licenses/gpl-2.0
157,https://github.com/josemgaleas/caravel_cocotb.git,2023-05-22 16:49:09+00:00,,0,josemgaleas/caravel_cocotb,644026861,Verilog,caravel_cocotb,93694,0,2023-05-22 16:49:48+00:00,[],https://api.github.com/licenses/apache-2.0
158,https://github.com/akhilmalladi/I2C_PROTOCOL_FSM_VERILOG.git,2023-05-22 12:44:41+00:00,,0,akhilmalladi/I2C_PROTOCOL_FSM_VERILOG,643923821,Verilog,I2C_PROTOCOL_FSM_VERILOG,144,0,2023-05-22 12:57:48+00:00,[],None
159,https://github.com/josemgaleas/caravel_example.git,2023-05-22 16:03:09+00:00,,0,josemgaleas/caravel_example,644009468,Verilog,caravel_example,41721,0,2023-05-22 16:48:17+00:00,[],https://api.github.com/licenses/apache-2.0
160,https://github.com/TristanJeferson/Coffee-Machine.git,2023-05-22 18:49:39+00:00,,0,TristanJeferson/Coffee-Machine,644070828,Verilog,Coffee-Machine,13,0,2023-06-20 20:41:41+00:00,[],None
161,https://github.com/VigneshKarthikV/IRIS_LABS_REC_211EC258.git,2023-05-23 20:36:57+00:00,Repository for Verilog codes for IRIS Lab Recs,0,VigneshKarthikV/IRIS_LABS_REC_211EC258,644584178,Verilog,IRIS_LABS_REC_211EC258,19,0,2023-09-17 12:27:53+00:00,[],None
162,https://github.com/samuelzureick/verilog.git,2023-05-23 15:43:07+00:00,,0,samuelzureick/verilog,644478194,Verilog,verilog,28,0,2023-05-23 15:44:05+00:00,[],None
163,https://github.com/IshtaJayakody/8-bit-single-cycle-processor.git,2023-05-20 19:30:57+00:00,"The basic functionalities implemented include an instruction fetch unit, a decoder, a register file, a control unit, an arithmetic and logic unit, and a data and instruction memory unit.",0,IshtaJayakody/8-bit-single-cycle-processor,643319234,Verilog,8-bit-single-cycle-processor,619,0,2023-06-11 09:01:01+00:00,[],None
164,https://github.com/EmbeddedCamerata/Convolution_in_Verilog.git,2023-05-20 12:53:39+00:00,Tranditional convolution implementation and verification in Verilog from scratch.,0,EmbeddedCamerata/Convolution_in_Verilog,643210988,Verilog,Convolution_in_Verilog,44,0,2023-05-28 01:38:50+00:00,"['convolution', 'verilog']",https://api.github.com/licenses/mit
165,https://github.com/binfu1/vivado-axi.git,2023-05-20 01:09:38+00:00,,2,binfu1/vivado-axi,643052206,Verilog,vivado-axi,30,0,2023-05-20 09:30:31+00:00,[],None
166,https://github.com/AhmedHany1212/xor-verification-using-cocotb.git,2023-05-19 03:56:53+00:00,verification of xor gate using cocotb python,0,AhmedHany1212/xor-verification-using-cocotb,642655367,Verilog,xor-verification-using-cocotb,10,0,2023-05-19 03:58:39+00:00,[],None
167,https://github.com/asinghani/18224-tapeout-s23-caravel.git,2023-05-18 03:51:20+00:00,"Class-wide Tapeout for 18-224/624 Intro to Open Source Chip Design, Spring 2023",0,asinghani/18224-tapeout-s23-caravel,642206092,Verilog,18224-tapeout-s23-caravel,549119,0,2023-05-31 02:18:34+00:00,[],https://api.github.com/licenses/apache-2.0
168,https://github.com/Adr-hyng/FPGA-Counters.git,2023-05-19 05:49:04+00:00,This repo is for our final term project for Hardware Description Language using FPGA Board to explore real-time simulation using Verilog.,0,Adr-hyng/FPGA-Counters,642682671,Verilog,FPGA-Counters,9,0,2023-07-12 10:12:59+00:00,[],None
169,https://github.com/Adomnr/4-deep-FIfo.git,2023-05-19 11:51:20+00:00,Verilog code and testbench of 4-deep fifo,0,Adomnr/4-deep-FIfo,642809483,Verilog,4-deep-FIfo,2,0,2023-05-19 11:52:21+00:00,[],None
170,https://github.com/harshwanwale/Counter-using-verilog-and-DE10Lite-Fpga-board.git,2023-05-23 03:32:36+00:00,,0,harshwanwale/Counter-using-verilog-and-DE10Lite-Fpga-board,644206705,Verilog,Counter-using-verilog-and-DE10Lite-Fpga-board,26448,0,2023-05-23 03:37:34+00:00,[],None
171,https://github.com/nicedayd/car.git,2023-05-18 14:55:13+00:00,,0,nicedayd/car,642433427,Verilog,car,41721,0,2023-05-18 14:55:54+00:00,[],https://api.github.com/licenses/apache-2.0
172,https://github.com/zechenwang00/ECE-5760-FHP.git,2023-05-18 07:28:41+00:00,,0,zechenwang00/ECE-5760-FHP,642267874,Verilog,ECE-5760-FHP,189007,0,2023-05-18 07:32:32+00:00,[],https://api.github.com/licenses/apache-2.0
173,https://github.com/FIUSCIS-CDA/Encoder_32.git,2023-05-18 13:24:41+00:00,32-bit encoder,0,FIUSCIS-CDA/Encoder_32,642395807,Verilog,Encoder_32,17,0,2023-08-15 15:16:30+00:00,[],https://api.github.com/licenses/mit
174,https://github.com/nikitapatil1233/ADLD.git,2023-05-18 13:27:11+00:00,,0,nikitapatil1233/ADLD,642396831,Verilog,ADLD,2111,0,2023-05-18 13:39:34+00:00,[],None
175,https://github.com/Akashgouda4/ADLD.git,2023-05-18 16:08:15+00:00,,0,Akashgouda4/ADLD,642461739,Verilog,ADLD,912,0,2023-05-18 16:17:45+00:00,[],None
176,https://github.com/o0w0v/CPU.git,2023-05-17 03:43:26+00:00,自作CPU,0,o0w0v/CPU,641729027,Verilog,CPU,2781,0,2023-05-17 03:57:33+00:00,[],None
177,https://github.com/EhabMostafaa/System-project.git,2023-05-17 09:22:37+00:00,System Processor ,0,EhabMostafaa/System-project,641841696,Verilog,System-project,841,0,2023-05-17 09:24:03+00:00,[],None
178,https://github.com/FelixTsubame/DigitalCircuitDesign.git,2023-05-17 08:13:45+00:00,,0,FelixTsubame/DigitalCircuitDesign,641814062,Verilog,DigitalCircuitDesign,2438,0,2023-05-18 04:32:38+00:00,[],None
179,https://github.com/3ab3at/AES-Caravel-Chip.git,2023-05-20 11:57:37+00:00,An integration of the well-known AES Encryption methodology implementation in Verilog on a Caravel Chip.,0,3ab3at/AES-Caravel-Chip,643195965,Verilog,AES-Caravel-Chip,41725,0,2023-05-20 11:58:08+00:00,[],https://api.github.com/licenses/apache-2.0
180,https://github.com/dila128/mors_code_decoder.git,2023-05-29 11:00:39+00:00,,0,dila128/mors_code_decoder,646793482,Verilog,mors_code_decoder,25343,0,2023-05-29 11:01:38+00:00,[],None
181,https://github.com/hwlabnitc/Single-Cycle-Processor.git,2023-05-29 11:35:11+00:00,This is the third module of the Hardware Lab Course to build a single cycle processor at NIT Calicut  Topics Resources,0,hwlabnitc/Single-Cycle-Processor,646805722,Verilog,Single-Cycle-Processor,12,0,2023-06-08 05:36:49+00:00,[],None
182,https://github.com/TheYash27/PWM_shift_register.git,2023-05-29 06:03:11+00:00,,0,TheYash27/PWM_shift_register,646693425,Verilog,PWM_shift_register,4,0,2023-05-29 06:04:05+00:00,[],None
183,https://github.com/bpsswu/Arm_Cortex-M3_HWnSW_Design.git,2023-05-26 08:05:54+00:00,Hardware and software design with Arm DesignStart,0,bpsswu/Arm_Cortex-M3_HWnSW_Design,645689672,Verilog,Arm_Cortex-M3_HWnSW_Design,2026,0,2023-05-26 16:14:11+00:00,[],https://api.github.com/licenses/mit
184,https://github.com/Jingtao01Zhong/RISC-V-Pipeline-CPU.git,2023-05-29 12:27:02+00:00,"RISC-V CPU designed by Verilog, KAIST EE312(2022Fall) lab assignment",0,Jingtao01Zhong/RISC-V-Pipeline-CPU,646824543,Verilog,RISC-V-Pipeline-CPU,850,0,2023-05-29 13:04:05+00:00,[],None
185,https://github.com/franciscod/core.git,2023-05-31 19:07:45+00:00,,0,franciscod/core,647899143,Verilog,core,11513,0,2023-08-07 06:06:33+00:00,[],https://api.github.com/licenses/mit
186,https://github.com/Anindya-06/4-Bit-Multiplier.git,2023-05-31 18:51:16+00:00,Verilog project to implement 4-bit-multiplier,0,Anindya-06/4-Bit-Multiplier,647893535,Verilog,4-Bit-Multiplier,12,0,2023-05-31 18:53:00+00:00,[],None
187,https://github.com/NidhiADarak/ADLD.git,2023-05-18 08:06:20+00:00,verilog programming,0,NidhiADarak/ADLD,642280232,Verilog,ADLD,7012,0,2023-05-22 07:29:56+00:00,[],None
188,https://github.com/Lucalini/Multi-Output-4-Bit-Up-Down-Counter.git,2023-06-02 06:39:19+00:00,"In this verilog file I instantiated 3 modules, a register, a clock divider, and a univ sseg display. The register holds the next state and outputs the present state based on a clock input. The output decoder outputs a stone age unary value based on the present state using the leds, 0 through 14. ",0,Lucalini/Multi-Output-4-Bit-Up-Down-Counter,648514439,Verilog,Multi-Output-4-Bit-Up-Down-Counter,6,0,2023-06-02 06:40:32+00:00,[],None
189,https://github.com/shihuibang/EDA.git,2023-06-03 10:54:32+00:00,用Verilog实现的电子时钟，包括时间调节和整点报时,0,shihuibang/EDA,648964508,Verilog,EDA,5845,0,2023-06-03 13:17:20+00:00,[],None
190,https://github.com/STARS-Design-Track-2023/rtl-blocks-stop-watch.git,2023-06-03 18:12:05+00:00,,0,STARS-Design-Track-2023/rtl-blocks-stop-watch,649083825,Verilog,rtl-blocks-stop-watch,2009,0,2023-06-13 12:13:00+00:00,[],None
191,https://github.com/PWis123/new.git,2023-06-03 06:49:40+00:00,Calculator_On_FPGA,0,PWis123/new,648906899,Verilog,new,21,0,2023-06-03 06:49:49+00:00,[],None
192,https://github.com/taanyarustogi/verilog.git,2023-05-24 22:14:03+00:00,,0,taanyarustogi/verilog,645082204,Verilog,verilog,17313,0,2023-05-24 22:18:53+00:00,[],None
193,https://github.com/artrivas/ComputerArchitecture.git,2023-05-21 20:00:51+00:00,Codigos de arqui,0,artrivas/ComputerArchitecture,643643111,Verilog,ComputerArchitecture,47152,0,2023-05-21 20:03:31+00:00,[],None
194,https://github.com/Saniya-eram/ADLD.git,2023-05-18 21:51:23+00:00,,0,Saniya-eram/ADLD,642570228,Verilog,ADLD,1102,0,2023-05-18 21:52:47+00:00,[],None
195,https://github.com/AhmedHany1212/Traffic-light-using-verilog.git,2023-05-19 06:56:52+00:00,,0,AhmedHany1212/Traffic-light-using-verilog,642704422,Verilog,Traffic-light-using-verilog,2,0,2023-05-19 06:57:23+00:00,[],None
196,https://github.com/Zufaruu/cyclone_fpga.git,2023-05-23 15:49:19+00:00,Having Fun with Cyclone II and III FPGA Board ,0,Zufaruu/cyclone_fpga,644480759,Verilog,cyclone_fpga,17186,0,2023-06-11 04:40:13+00:00,[],None
197,https://github.com/PRAGATI-0102/Cube-Generator-Day-044-.git,2023-05-23 16:25:26+00:00,The n-bit cube generator is a digital circuit that takes an n-bit input number and produces its cube as the output.,0,PRAGATI-0102/Cube-Generator-Day-044-,644495079,Verilog,Cube-Generator-Day-044-,42,0,2023-05-23 16:27:26+00:00,[],None
198,https://github.com/lashhw/dcd-tester.git,2023-05-21 05:11:07+00:00,,0,lashhw/dcd-tester,643419233,Verilog,dcd-tester,118,0,2023-07-07 05:59:19+00:00,[],None
199,https://github.com/kunnu210697/Snake-Game.git,2023-05-20 22:53:02+00:00,,0,kunnu210697/Snake-Game,643359417,Verilog,Snake-Game,11162,0,2023-05-20 23:19:16+00:00,[],None
200,https://github.com/LucasBorges4/Tp_OC1_2.git,2023-05-20 14:35:42+00:00,,0,LucasBorges4/Tp_OC1_2,643239886,Verilog,Tp_OC1_2,87255,0,2023-07-20 22:56:50+00:00,[],None
201,https://github.com/SU10ERych/Counter.git,2023-05-25 11:44:03+00:00,,0,SU10ERych/Counter,645317777,Verilog,Counter,8,0,2023-05-25 11:45:51+00:00,[],None
202,https://github.com/MG18/Lab9.git,2023-05-24 15:56:20+00:00,,0,MG18/Lab9,644959070,Verilog,Lab9,1857,0,2023-05-24 16:00:34+00:00,[],None
203,https://github.com/rajitha0119/DAY-03-half-subtractor.git,2023-05-30 15:08:02+00:00,,0,rajitha0119/DAY-03-half-subtractor,647340115,Verilog,DAY-03-half-subtractor,105,0,2023-05-30 15:33:18+00:00,[],None
204,https://github.com/PRAGATI-0102/Parity-Generator-Day-049-.git,2023-05-28 16:41:14+00:00,A parity generator is a digital circuit that calculates the parity bit for a given set of data bits. Parity bits are commonly used for error detection and correction in data transmission.,0,PRAGATI-0102/Parity-Generator-Day-049-,646515957,Verilog,Parity-Generator-Day-049-,63,0,2023-05-28 16:43:44+00:00,[],None
205,https://github.com/DavidDavidDavidDavidDavidDavidDavid/analog_chip.git,2023-05-28 21:23:50+00:00,,0,DavidDavidDavidDavidDavidDavidDavid/analog_chip,646585692,Verilog,analog_chip,1843,0,2023-05-28 21:27:45+00:00,[],https://api.github.com/licenses/apache-2.0
206,https://github.com/sye3888/IRISdff.git,2023-05-28 04:52:50+00:00,,0,sye3888/IRISdff,646344860,Verilog,IRISdff,1,0,2023-05-28 05:49:13+00:00,[],None
207,https://github.com/Varsh1330/AHB_to_APB-Bridge.git,2023-05-30 05:10:09+00:00,"The AHB-APB interfaces AHB and APB. It buffers address, controls, and data from the AHB, drives the APB peripherals, and return data along with response signal to the AHB. The AHB2APB interface is designed to operate when AHB and APB clocks have any combination of frequency and phase. ",0,Varsh1330/AHB_to_APB-Bridge,647115455,Verilog,AHB_to_APB-Bridge,1413,0,2023-05-30 05:17:40+00:00,[],None
208,https://github.com/TheYash27/single_port_RAM.git,2023-05-31 11:20:14+00:00,,0,TheYash27/single_port_RAM,647714899,Verilog,single_port_RAM,4,0,2023-05-31 11:21:06+00:00,[],None
209,https://github.com/uae-1208/Verilog-HDLBits.git,2023-05-31 12:03:34+00:00,practices when studying verilog,0,uae-1208/Verilog-HDLBits,647731301,Verilog,Verilog-HDLBits,61,0,2023-10-03 04:54:48+00:00,[],None
210,https://github.com/YangZiyi121/TCP-IP-stream-interface-simulation.git,2023-05-31 13:20:04+00:00,,0,YangZiyi121/TCP-IP-stream-interface-simulation,647762440,Verilog,TCP-IP-stream-interface-simulation,33,0,2023-05-31 13:24:22+00:00,[],None
211,https://github.com/satayyeb/hardwarq1.git,2023-06-01 06:27:46+00:00,,0,satayyeb/hardwarq1,648070051,Verilog,hardwarq1,10,0,2023-06-01 14:21:01+00:00,[],https://api.github.com/licenses/mit
212,https://github.com/mohamadjavad1383/Nezuko-chan.git,2023-06-01 06:35:32+00:00,,0,mohamadjavad1383/Nezuko-chan,648072484,Verilog,Nezuko-chan,2,0,2023-06-01 06:35:39+00:00,[],https://api.github.com/licenses/mit
213,https://github.com/IsepantaI/salam.git,2023-06-01 06:45:41+00:00,,0,IsepantaI/salam,648075600,Verilog,salam,4,0,2023-06-01 13:31:32+00:00,[],https://api.github.com/licenses/mit
214,https://github.com/AFSA1729/HardWar2023.git,2023-06-01 06:35:50+00:00,,0,AFSA1729/HardWar2023,648072581,Verilog,HardWar2023,2,0,2023-06-01 06:35:55+00:00,[],https://api.github.com/licenses/mit
215,https://github.com/amirhosse-in/Hardware-Challenge.git,2023-06-01 06:37:55+00:00,,0,amirhosse-in/Hardware-Challenge,648073213,Verilog,Hardware-Challenge,5,0,2023-08-05 21:26:07+00:00,[],https://api.github.com/licenses/mit
216,https://github.com/1920276cpe/HDL-EXPERIMENT-TIAMSIM.git,2023-06-01 12:22:00+00:00,,0,1920276cpe/HDL-EXPERIMENT-TIAMSIM,648196218,Verilog,HDL-EXPERIMENT-TIAMSIM,1352,0,2023-06-01 12:22:35+00:00,[],None
217,https://github.com/5g-ucl-idrbt/oai-gnodeb-n310.git,2023-06-02 01:17:59+00:00,,0,5g-ucl-idrbt/oai-gnodeb-n310,648437352,Verilog,oai-gnodeb-n310,34532,0,2023-07-19 07:43:53+00:00,[],None
218,https://github.com/PRO-2684/USTC-CODLabs.git,2023-05-20 00:30:14+00:00,My code for computer organization labs at USTC. (011145.02),0,PRO-2684/USTC-CODLabs,643045468,Verilog,USTC-CODLabs,8128,0,2023-07-04 11:08:49+00:00,[],None
219,https://github.com/mornthx/adc08d_test.git,2023-05-22 13:29:35+00:00,design for adc configuration and test,0,mornthx/adc08d_test,643942897,Verilog,adc08d_test,4,0,2023-05-22 14:00:50+00:00,[],None
220,https://github.com/karansos/Hummingbird_riscv.git,2023-05-23 06:55:00+00:00,,0,karansos/Hummingbird_riscv,644263672,Verilog,Hummingbird_riscv,77,0,2023-05-23 12:31:57+00:00,[],None
221,https://github.com/Adil-j/ADLD.git,2023-05-17 10:06:00+00:00,,0,Adil-j/ADLD,641858873,Verilog,ADLD,385,0,2023-05-17 10:13:43+00:00,[],None
222,https://github.com/Daniel-xsm/FPGAandPeripheralInterface.git,2023-05-22 00:55:47+00:00,,0,Daniel-xsm/FPGAandPeripheralInterface,643698347,Verilog,FPGAandPeripheralInterface,345283,0,2023-05-22 00:57:22+00:00,[],https://api.github.com/licenses/gpl-2.0
223,https://github.com/Prixii/simple_riscv_cpu.git,2023-05-21 13:32:11+00:00,,0,Prixii/simple_riscv_cpu,643536347,Verilog,simple_riscv_cpu,93,0,2023-05-21 13:35:26+00:00,[],None
224,https://github.com/Essenceia/rtl_utils.git,2023-05-26 22:49:45+00:00,Collection of rtl tricks,0,Essenceia/rtl_utils,645975486,Verilog,rtl_utils,12,0,2023-11-17 05:03:22+00:00,[],None
225,https://github.com/JayKaku/HDL-Bits-Solutions.git,2023-05-18 21:32:33+00:00,HDL Bits solution,0,JayKaku/HDL-Bits-Solutions,642565670,Verilog,HDL-Bits-Solutions,52,0,2024-02-03 14:48:07+00:00,"['computer-architecture', 'computer-organisation-architechure', 'hardware', 'hardware-description-language', 'hdl', 'verilog', 'verilog-hdl', 'hardware-leetcode']",None
226,https://github.com/HossamTarek7/SIMULINK-VIEWER-CSE231s.git,2023-05-26 17:25:17+00:00,,1,HossamTarek7/SIMULINK-VIEWER-CSE231s,645891237,Verilog,SIMULINK-VIEWER-CSE231s,117,0,2024-01-02 19:44:22+00:00,[],None
227,https://github.com/hasan437/Icecek-Otomat-Makinas-.git,2023-05-31 14:03:01+00:00,,0,hasan437/Icecek-Otomat-Makinas-,647781276,Verilog,Icecek-Otomat-Makinas-,4,0,2023-05-31 14:25:08+00:00,[],None
228,https://github.com/rashmigavimath/ADLD.git,2023-05-19 14:26:51+00:00,,0,rashmigavimath/ADLD,642869801,Verilog,ADLD,1950,0,2023-05-19 15:18:50+00:00,[],None
229,https://github.com/rushi1222/MIPS.git,2023-05-18 22:51:21+00:00,,0,rushi1222/MIPS,642583794,Verilog,MIPS,231,0,2023-05-18 22:53:45+00:00,[],None
230,https://github.com/Youssef-Ashraf71/Sequence-Detector.git,2023-05-19 20:01:08+00:00,Implementation of a Mealy state machine in Verilog for sequence detection and pattern recognition.,2,Youssef-Ashraf71/Sequence-Detector,642984917,Verilog,Sequence-Detector,888,0,2023-08-01 19:12:15+00:00,[],None
231,https://github.com/rebek-007/riscv_cpu_core.git,2023-05-21 15:53:26+00:00,,0,rebek-007/riscv_cpu_core,643577800,Verilog,riscv_cpu_core,20,0,2023-05-21 16:07:46+00:00,[],https://api.github.com/licenses/gpl-3.0
232,https://github.com/tallenintegsys/hwterm.git,2023-05-21 21:56:28+00:00,Hardware based (no CPU) terminal UI,0,tallenintegsys/hwterm,643667503,Verilog,hwterm,4729,0,2023-05-21 22:01:16+00:00,[],None
233,https://github.com/cjs1219/5-Stage-Pipeline-CPU.git,2023-06-03 23:59:03+00:00,大二下 | 計算機組織,0,cjs1219/5-Stage-Pipeline-CPU,649148865,,5-Stage-Pipeline-CPU,3517,0,2023-06-03 23:59:04+00:00,[],None
234,https://github.com/zahramojtahedin/Computer-Architecture-Project.git,2023-06-03 21:09:50+00:00,A project in Verilog for the Computer Architecture and Microprocessor course whose goal was implementation of MIPS processor with four issues.,0,zahramojtahedin/Computer-Architecture-Project,649121956,Verilog,Computer-Architecture-Project,13268,0,2023-06-04 21:31:29+00:00,[],None
235,https://github.com/yehiatarek63/AES-encryption-and-decryption.git,2023-06-03 14:37:43+00:00,AES encryption and Decryption,1,yehiatarek63/AES-encryption-and-decryption,649025346,Verilog,AES-encryption-and-decryption,385,0,2023-06-03 14:39:56+00:00,[],None
236,https://github.com/hsncck26/hc_asic_1.git,2023-06-03 07:02:08+00:00,,0,hsncck26/hc_asic_1,648909763,Verilog,hc_asic_1,53036,0,2023-06-04 07:47:18+00:00,[],https://api.github.com/licenses/apache-2.0
237,https://github.com/alexm610/HiFi_Adaptor.git,2023-05-23 18:18:37+00:00,A SystemVerilog project utilizing the onboard audio CODEC of the DE1-SoC to listen to high-quality audio files,0,alexm610/HiFi_Adaptor,644537507,Verilog,HiFi_Adaptor,273571,0,2023-05-23 19:08:09+00:00,[],None
238,https://github.com/exaithrg/linux_digital_templates.git,2023-05-20 13:59:48+00:00,Templates of Digital IC Development Environments on Ubuntu 22.04 and so on,0,exaithrg/linux_digital_templates,643229448,Verilog,linux_digital_templates,12,0,2023-05-20 14:02:13+00:00,[],None
239,https://github.com/juskeerat/m152test.git,2023-05-23 00:40:43+00:00,,0,juskeerat/m152test,644163875,Verilog,m152test,27,0,2023-05-23 00:44:49+00:00,[],https://api.github.com/licenses/gpl-3.0
240,https://github.com/furkasdn2/Gomulu-Sistemler.git,2023-05-31 06:27:39+00:00,Gomulu Sistemler Proje Konusu,0,furkasdn2/Gomulu-Sistemler,647606090,Verilog,Gomulu-Sistemler,3,0,2023-05-31 06:34:35+00:00,[],None
241,https://github.com/TomKeddie/tinytapeout-2023-2a.git,2023-05-31 13:33:44+00:00,Submission for Tiny Tapeout 3.5,0,TomKeddie/tinytapeout-2023-2a,647768483,Verilog,tinytapeout-2023-2a,7526,0,2023-05-31 13:55:22+00:00,[],https://api.github.com/licenses/apache-2.0
242,https://github.com/rajitha0119/DAY-04-FULL-SUBTRACTOR.git,2023-05-31 13:30:17+00:00,,0,rajitha0119/DAY-04-FULL-SUBTRACTOR,647766954,Verilog,DAY-04-FULL-SUBTRACTOR,224,0,2023-05-31 14:06:43+00:00,[],None
243,https://github.com/TahaMemari/BranchPrediction.git,2023-06-01 07:02:51+00:00,,0,TahaMemari/BranchPrediction,648081235,Verilog,BranchPrediction,12,0,2023-06-01 07:02:58+00:00,[],https://api.github.com/licenses/mit
244,https://github.com/donyarz/originals.git,2023-06-01 06:38:23+00:00,,0,donyarz/originals,648073331,Verilog,originals,9,0,2023-06-01 06:38:29+00:00,[],https://api.github.com/licenses/mit
245,https://github.com/sh1609496768/256_8bit_uart_fifo.git,2023-06-01 08:32:38+00:00,uart加fifo读写小设计,0,sh1609496768/256_8bit_uart_fifo,648112959,Verilog,256_8bit_uart_fifo,45,0,2023-06-01 09:06:36+00:00,[],None
246,https://github.com/alexcoderie/NexysA7_Digital_Clock.git,2023-05-31 07:06:05+00:00,,0,alexcoderie/NexysA7_Digital_Clock,647619590,Verilog,NexysA7_Digital_Clock,29,0,2023-05-31 07:09:56+00:00,[],None
247,https://github.com/Anthonykung/VT512.git,2023-06-01 05:10:37+00:00,,0,Anthonykung/VT512,648047465,Verilog,VT512,230080,0,2023-06-03 02:03:28+00:00,[],https://api.github.com/licenses/apache-2.0
248,https://github.com/ahmedashrafalaaser/digital-design-codes.git,2023-05-17 09:58:50+00:00,some code of learning digital design track in verilog,0,ahmedashrafalaaser/digital-design-codes,641856075,Verilog,digital-design-codes,2351,0,2023-05-17 10:38:59+00:00,[],None
249,https://github.com/MohamedKhaledMohamedAli/Algorithm-to-find-the-Greatest-Common-Divisor-GCD-of-two-numbers.git,2023-05-17 10:25:34+00:00,,0,MohamedKhaledMohamedAli/Algorithm-to-find-the-Greatest-Common-Divisor-GCD-of-two-numbers,641865876,Verilog,Algorithm-to-find-the-Greatest-Common-Divisor-GCD-of-two-numbers,4,0,2023-05-17 10:33:27+00:00,[],None
250,https://github.com/Rohit-kademani/01FE20BEC080_ADLD.git,2023-05-18 17:13:58+00:00,,0,Rohit-kademani/01FE20BEC080_ADLD,642485583,Verilog,01FE20BEC080_ADLD,565,0,2023-05-18 17:47:32+00:00,[],None
251,https://github.com/Srushti0313/ADLD.git,2023-05-18 16:06:41+00:00,,0,Srushti0313/ADLD,642461151,Verilog,ADLD,1483,0,2023-05-18 16:25:31+00:00,[],None
252,https://github.com/Qianfqi/MIPS-course-design.git,2023-06-02 08:35:10+00:00,,0,Qianfqi/MIPS-course-design,648553387,Verilog,MIPS-course-design,188,0,2023-06-02 08:40:55+00:00,[],None
253,https://github.com/Lefteris-B/caravel_user_project.git,2023-05-31 07:57:09+00:00,,1,Lefteris-B/caravel_user_project,647638067,Verilog,caravel_user_project,41726,0,2023-05-31 07:57:42+00:00,[],https://api.github.com/licenses/apache-2.0
254,https://github.com/markshinyounglee/DigitalAudioVisualizerIEEE22-23.git,2023-06-01 09:46:22+00:00,This is the compilation of work I did from IEEE at UCLA 2022-23.,0,markshinyounglee/DigitalAudioVisualizerIEEE22-23,648139801,Verilog,DigitalAudioVisualizerIEEE22-23,30198,0,2023-06-01 09:50:13+00:00,[],https://api.github.com/licenses/mit
255,https://github.com/Eyantra698Sumanto/kicp.git,2023-06-03 15:47:40+00:00,The Knight Innovation Co-Processor,0,Eyantra698Sumanto/kicp,649045636,,kicp,112517,0,2023-10-02 17:04:01+00:00,[],https://api.github.com/licenses/apache-2.0
256,https://github.com/dila128/led_encryption.git,2023-05-29 01:46:13+00:00,,0,dila128/led_encryption,646633049,Verilog,led_encryption,1,0,2023-05-29 01:48:12+00:00,[],None
257,https://github.com/dila128/led_decoder.git,2023-05-29 01:52:42+00:00,,0,dila128/led_decoder,646634552,Verilog,led_decoder,1,0,2023-05-29 01:53:38+00:00,[],None
258,https://github.com/harshaksachdeva/IRIS_labs.git,2023-05-28 11:06:35+00:00,,0,harshaksachdeva/IRIS_labs,646424415,Verilog,IRIS_labs,1804,0,2023-06-03 13:00:47+00:00,[],None
259,https://github.com/Gladsonsabu/FPGA.git,2023-05-23 16:33:23+00:00,,2,Gladsonsabu/FPGA,644498144,Verilog,FPGA,6497,0,2023-05-23 16:38:23+00:00,[],None
260,https://github.com/Zufaruu/de10_fpga.git,2023-05-23 15:25:04+00:00,Having Fun with DE10-Lite Terasic FPGA Board,0,Zufaruu/de10_fpga,644470577,Verilog,de10_fpga,4922,0,2023-05-23 15:28:36+00:00,[],None
261,https://github.com/PRAGATI-0102/Adder-Cum-Subtractor-Day-046-.git,2023-05-25 17:33:47+00:00,The 4-bit Adder Cum Subtractor is a digital circuit that performs both addition and subtraction operations on 4-bit binary numbers.,0,PRAGATI-0102/Adder-Cum-Subtractor-Day-046-,645454895,Verilog,Adder-Cum-Subtractor-Day-046-,120,0,2023-05-25 17:36:02+00:00,[],None
262,https://github.com/SU10ERych/Automats.git,2023-05-25 11:48:46+00:00,,0,SU10ERych/Automats,645319429,Verilog,Automats,9,0,2023-05-25 11:53:09+00:00,[],None
263,https://github.com/alperenaydinn/pomodoro.git,2023-05-30 16:43:26+00:00,Embedded Systems Project,1,alperenaydinn/pomodoro,647377662,Verilog,pomodoro,21302,0,2023-05-30 16:43:58+00:00,[],None
264,https://github.com/cmosinverter/hls-accelerator-pe.git,2023-05-27 14:48:15+00:00,,0,cmosinverter/hls-accelerator-pe,646181230,Verilog,hls-accelerator-pe,10144,0,2023-06-02 14:22:23+00:00,[],None
265,https://github.com/HAL9000COM/Digit-Invader-EGO1.git,2023-05-31 06:25:43+00:00,Digit Invader on EGO1,0,HAL9000COM/Digit-Invader-EGO1,647605464,Verilog,Digit-Invader-EGO1,414,0,2023-05-31 07:21:01+00:00,[],https://api.github.com/licenses/mit
266,https://github.com/mannndrew/RISC-Processor.git,2023-05-22 19:13:20+00:00,Unfinished repository.,0,mannndrew/RISC-Processor,644078820,Verilog,RISC-Processor,2413,0,2024-01-25 22:35:03+00:00,[],https://api.github.com/licenses/mit
267,https://github.com/AHNakbari/Nezuko-chan.git,2023-06-01 06:35:31+00:00,,0,AHNakbari/Nezuko-chan,648072482,Verilog,Nezuko-chan,3,0,2023-06-01 06:35:37+00:00,[],https://api.github.com/licenses/mit
268,https://github.com/PoChuan994/Max_Min_Selector.git,2023-05-20 03:47:20+00:00,,0,PoChuan994/Max_Min_Selector,643081414,Verilog,Max_Min_Selector,272,0,2023-05-20 03:50:07+00:00,[],None
269,https://github.com/misterRoshi22/Digital-Logic-Lab_Final-Project.git,2023-05-27 18:38:57+00:00,,0,misterRoshi22/Digital-Logic-Lab_Final-Project,646242099,Verilog,Digital-Logic-Lab_Final-Project,126,0,2024-04-04 00:45:25+00:00,[],None
270,https://github.com/mokweri/Seq_Multiplier.git,2023-05-23 10:04:34+00:00,4-bit Sequential Binary Multiplier in Verilog,0,mokweri/Seq_Multiplier,644337753,Verilog,Seq_Multiplier,104,0,2023-05-23 10:04:42+00:00,[],None
271,https://github.com/HLingLu/Counting-the-Number-of-United-Vertex-Covers.git,2023-05-20 00:58:47+00:00,2021 ICD HW2 & 3 – Digital IC Design,0,HLingLu/Counting-the-Number-of-United-Vertex-Covers,643050482,Verilog,Counting-the-Number-of-United-Vertex-Covers,2396,0,2023-05-20 01:02:13+00:00,[],None
272,https://github.com/Subha175/Verilog-ElectronicLock.git,2023-05-24 05:09:26+00:00,Verilog,0,Subha175/Verilog-ElectronicLock,644708930,Verilog,Verilog-ElectronicLock,20,0,2023-07-05 17:58:33+00:00,[],None
273,https://github.com/TheYash27/round_robin_arbiter.git,2023-05-24 06:03:53+00:00,,0,TheYash27/round_robin_arbiter,644724219,Verilog,round_robin_arbiter,4,0,2023-05-24 06:04:56+00:00,[],None
274,https://github.com/mohamd-khaled/ALU.git,2023-05-24 20:58:26+00:00,,0,mohamd-khaled/ALU,645063198,Verilog,ALU,2,0,2023-05-24 20:59:26+00:00,[],None
275,https://github.com/mohamed-mohamed-tarek/ALU.git,2023-05-25 19:46:11+00:00,,0,mohamed-mohamed-tarek/ALU,645499125,Verilog,ALU,0,0,2023-05-25 19:47:07+00:00,[],None
276,https://github.com/aliibrahim3/ALU.git,2023-05-22 13:11:44+00:00,This the code for the ALU,0,aliibrahim3/ALU,643935189,Verilog,ALU,1372,0,2023-05-22 13:23:29+00:00,[],None
277,https://github.com/RicardoX2X/verilog_examples_MAX10.git,2023-05-23 02:54:37+00:00,Exercises that i made on FPGA intel course,0,RicardoX2X/verilog_examples_MAX10,644197286,Verilog,verilog_examples_MAX10,3,0,2023-05-23 03:00:28+00:00,[],https://api.github.com/licenses/mit
278,https://github.com/ToucHeart/Digital-Logic-and-Computer-Composition-Experiments.git,2023-05-23 04:49:15+00:00,,0,ToucHeart/Digital-Logic-and-Computer-Composition-Experiments,644225287,Verilog,Digital-Logic-and-Computer-Composition-Experiments,40075,0,2023-09-24 02:34:47+00:00,[],None
279,https://github.com/AlanPonnachan/Mini_project-FPGA-Bird-s-eye-view.git,2023-05-17 12:41:07+00:00,,0,AlanPonnachan/Mini_project-FPGA-Bird-s-eye-view,641917448,Verilog,Mini_project-FPGA-Bird-s-eye-view,8591,0,2023-05-17 15:28:54+00:00,[],None
280,https://github.com/Denis2810/car__parking.git,2023-05-17 20:19:14+00:00,,0,Denis2810/car__parking,642097670,Verilog,car__parking,3,0,2023-05-17 20:20:05+00:00,[],None
281,https://github.com/natruffles/FPG8.git,2023-05-17 21:55:45+00:00,Verilog implementation of a computer architecture project (single-bus processor) on an iCEstick FPGA,0,natruffles/FPG8,642123818,Verilog,FPG8,845,0,2023-06-18 19:35:58+00:00,"['computer-architecture', 'fpga', 'verilog', 'processor-design', 'testbench']",None
282,https://github.com/garvin-stack/Lab05-Adders.git,2023-05-19 22:12:30+00:00,,0,garvin-stack/Lab05-Adders,643018368,Verilog,Lab05-Adders,907,0,2023-05-19 22:12:37+00:00,[],None
283,https://github.com/azwefabless/tp2.git,2023-06-02 18:41:38+00:00,trial user project 2 for trying out AI based RTL deve and the user ENV issues,0,azwefabless/tp2,648761322,Verilog,tp2,41725,0,2023-06-02 18:42:17+00:00,[],https://api.github.com/licenses/apache-2.0
284,https://github.com/AnttiLukats/MEGA65.git,2023-05-30 12:33:50+00:00,Various code for MEGA65 Home Computer,0,AnttiLukats/MEGA65,647273608,Verilog,MEGA65,128,0,2023-05-30 12:44:14+00:00,[],None
285,https://github.com/neena-eka/COEN122LFinal.git,2023-05-30 23:03:24+00:00,,1,neena-eka/COEN122LFinal,647496346,,COEN122LFinal,203,0,2023-05-30 23:03:24+00:00,[],None
286,https://github.com/LorisPanaroGit/DLX.git,2023-05-30 16:19:43+00:00,VHDL implementation of DLX processor (basic version),0,LorisPanaroGit/DLX,647368891,Verilog,DLX,29088,0,2023-05-30 16:41:02+00:00,[],None
287,https://github.com/garvin-stack/Lab06-Caches.git,2023-06-02 22:13:50+00:00,,0,garvin-stack/Lab06-Caches,648814397,Verilog,Lab06-Caches,2255,0,2023-06-02 22:14:01+00:00,[],None
288,https://github.com/merledu/Caravel_N_M_P.git,2023-06-03 05:48:50+00:00,,1,merledu/Caravel_N_M_P,648893672,Verilog,Caravel_N_M_P,41731,0,2023-06-03 05:49:26+00:00,[],https://api.github.com/licenses/apache-2.0
289,https://github.com/JohnGierlach/Hardware-Design-Flow-SS.git,2023-06-03 19:35:04+00:00,,0,JohnGierlach/Hardware-Design-Flow-SS,649102480,Verilog,Hardware-Design-Flow-SS,55,0,2023-10-26 00:59:58+00:00,[],None
290,https://github.com/SreehariC/Verilog_Cache_DRAM_Implimentation.git,2023-05-31 19:25:57+00:00,,0,SreehariC/Verilog_Cache_DRAM_Implimentation,647905136,Verilog,Verilog_Cache_DRAM_Implimentation,29,0,2023-06-01 04:45:33+00:00,[],None
291,https://github.com/Dyumnin-Interns/interfaces-Revanthavmk.git,2023-06-02 11:12:41+00:00,interfaces-Revanthavmk created by GitHub Classroom,1,Dyumnin-Interns/interfaces-Revanthavmk,648605726,Verilog,interfaces-Revanthavmk,11445,0,2023-06-30 06:40:57+00:00,[],None
292,https://github.com/afan2023/msoc.git,2023-06-01 00:40:25+00:00,prototyping a processor,0,afan2023/msoc,647984364,Verilog,msoc,75,0,2023-06-12 00:55:14+00:00,[],https://api.github.com/licenses/bsd-3-clause
293,https://github.com/egorioch/binaryFrog.git,2023-06-01 14:16:59+00:00,,0,egorioch/binaryFrog,648242795,Verilog,binaryFrog,593,0,2023-06-01 14:56:41+00:00,[],None
294,https://github.com/zweiwang/caravel_dfsc.git,2023-06-03 15:49:03+00:00,,0,zweiwang/caravel_dfsc,649046008,Verilog,caravel_dfsc,41725,0,2023-06-03 15:49:46+00:00,[],https://api.github.com/licenses/apache-2.0
295,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-36.git,2023-06-04 04:56:57+00:00,RIPPLE CARRY ADDER,0,rajitha0119/100-DAYS-OF-RTL-DAY-36,649194910,Verilog,100-DAYS-OF-RTL-DAY-36,301,0,2023-06-04 05:01:35+00:00,[],None
296,https://github.com/mohajel/CA_LAB.git,2023-05-23 07:46:28+00:00,,0,mohajel/CA_LAB,644282936,Verilog,CA_LAB,10209,0,2023-10-11 15:27:41+00:00,[],None
297,https://github.com/ShrutikaPatel/8-bit-multipliers-in-Verilog.git,2023-05-23 05:24:30+00:00,"This repository contains code and documentation for 8-bit Vedic Multiplier, 8-bit Array Multiplier and 8-bit Wallace Tree Multiplier.",0,ShrutikaPatel/8-bit-multipliers-in-Verilog,644234617,Verilog,8-bit-multipliers-in-Verilog,2015,0,2023-05-23 05:44:28+00:00,[],https://api.github.com/licenses/mit
298,https://github.com/malikshanaah1999/mahdee.git,2023-05-28 11:25:56+00:00,,0,malikshanaah1999/mahdee,646429088,Verilog,mahdee,41725,0,2023-05-28 11:26:29+00:00,[],https://api.github.com/licenses/apache-2.0
299,https://github.com/mattvenn/power_switch.git,2023-05-21 18:04:12+00:00,,0,mattvenn/power_switch,643613255,Verilog,power_switch,72,0,2023-05-24 14:27:38+00:00,[],None
300,https://github.com/DmMkh/HDL.git,2023-05-18 21:20:34+00:00,Verilog projects,0,DmMkh/HDL,642562954,Verilog,HDL,7,0,2023-05-18 21:29:30+00:00,[],https://api.github.com/licenses/mit
301,https://github.com/ydclzby/Year2-Project.git,2023-05-18 20:11:00+00:00,,0,ydclzby/Year2-Project,642543649,Verilog,Year2-Project,69440,0,2023-06-21 14:24:56+00:00,[],None
302,https://github.com/Prithvippatil/ADLD.git,2023-05-18 18:22:45+00:00,,0,Prithvippatil/ADLD,642509592,Verilog,ADLD,309,0,2023-05-18 18:26:57+00:00,[],None
303,https://github.com/YoelMoya99/Proyecto-Personal-Capa-PCS.git,2023-05-26 22:55:00+00:00,"Proyecto personal, capa PCS",0,YoelMoya99/Proyecto-Personal-Capa-PCS,645976388,Verilog,Proyecto-Personal-Capa-PCS,4,0,2023-07-29 22:52:51+00:00,[],None
304,https://github.com/cp024s/Verilog-basics.git,2023-05-27 16:22:34+00:00,,0,cp024s/Verilog-basics,646207327,Verilog,Verilog-basics,9,0,2023-07-15 14:10:16+00:00,[],None
305,https://github.com/Nidhinchandran47/mips32.git,2023-05-26 05:56:03+00:00,Verilog implementation of a mips32 processor,0,Nidhinchandran47/mips32,645645904,Verilog,mips32,8,0,2023-05-26 06:00:22+00:00,[],None
306,https://github.com/akeboy123/read.git,2023-05-28 23:51:56+00:00,,0,akeboy123/read,646612515,Verilog,read,2,0,2023-05-29 00:05:22+00:00,[],None
307,https://github.com/aa389393/Verilog_example.git,2023-05-25 11:28:27+00:00,verilog_example,0,aa389393/Verilog_example,645312178,Verilog,Verilog_example,58,0,2023-05-25 12:16:16+00:00,[],None
308,https://github.com/k-motohashi51/ITF-COJT-donyu.git,2023-05-17 04:19:44+00:00,,0,k-motohashi51/ITF-COJT-donyu,641738143,Verilog,ITF-COJT-donyu,3990,0,2024-04-09 09:01:03+00:00,[],None
309,https://github.com/Kikatdrrr/Lab.git,2023-05-17 13:14:04+00:00,數邏Lab,0,Kikatdrrr/Lab,641931392,Verilog,Lab,44,0,2023-05-30 06:26:52+00:00,[],None
310,https://github.com/MohanSardar01/Verilog.git,2023-05-17 10:01:30+00:00,Practicing Verilog HDL Coding Here!,0,MohanSardar01/Verilog,641857160,Verilog,Verilog,3,0,2023-05-17 10:09:37+00:00,[],None
311,https://github.com/quantum2409/CS220.git,2023-05-21 14:38:21+00:00,,0,quantum2409/CS220,643555654,Verilog,CS220,388,0,2023-05-21 14:39:57+00:00,[],None
312,https://github.com/kevvvch/verilog_exercises.git,2023-05-21 20:02:20+00:00,,0,kevvvch/verilog_exercises,643643411,Verilog,verilog_exercises,4,0,2023-05-21 20:05:47+00:00,[],None
313,https://github.com/guojackie/blockminifloat.git,2023-05-24 12:04:04+00:00,,0,guojackie/blockminifloat,644858935,Verilog,blockminifloat,26,0,2023-05-24 12:06:57+00:00,[],None
314,https://github.com/zlinwei/hdl.git,2023-05-23 13:21:42+00:00,,0,zlinwei/hdl,644415439,Verilog,hdl,18738,0,2023-05-23 13:30:11+00:00,[],
315,https://github.com/9389lalit/16_bit_adder_subtractor.git,2023-05-23 01:47:18+00:00,It's a calculator to find the sum and subtraction in 2's complement of 2 16 bit number,0,9389lalit/16_bit_adder_subtractor,644179956,Verilog,16_bit_adder_subtractor,293,0,2023-06-22 11:46:03+00:00,[],None
316,https://github.com/sasi-kiran123/brent-kung-adder.git,2023-05-24 18:21:48+00:00,,0,sasi-kiran123/brent-kung-adder,645013230,Verilog,brent-kung-adder,50,0,2023-05-24 18:28:28+00:00,[],https://api.github.com/licenses/mit
317,https://github.com/maktheus/blackjack-varilog.git,2023-05-24 20:00:09+00:00,,0,maktheus/blackjack-varilog,645045948,Verilog,blackjack-varilog,9,0,2023-05-24 20:01:23+00:00,[],None
318,https://github.com/ManuelFerreira90/Caminho-de-dados-RISCV.git,2023-05-26 12:06:37+00:00,,0,ManuelFerreira90/Caminho-de-dados-RISCV,645775260,Verilog,Caminho-de-dados-RISCV,151471,0,2023-07-06 20:21:21+00:00,[],https://api.github.com/licenses/mit
319,https://github.com/mohamed-mohamed-tarek/SBQM-chipions.git,2023-05-25 19:35:42+00:00,,0,mohamed-mohamed-tarek/SBQM-chipions,645496007,Verilog,SBQM-chipions,468,0,2023-05-25 19:37:15+00:00,[],None
320,https://github.com/JasmineTJ/Tic-Tac-Toe-Verilog.git,2023-05-25 15:30:01+00:00,,0,JasmineTJ/Tic-Tac-Toe-Verilog,645409844,Verilog,Tic-Tac-Toe-Verilog,339,0,2023-05-25 15:32:01+00:00,[],None
321,https://github.com/gannoCal/Dynamically-Scheduled-Speculative-Execution-RISC-V-32I-Core.git,2023-05-29 21:00:57+00:00,Functional and structural verification workflows are developed in tandem to the design. The benefits of the open-source RISC-V tool flow are analyzed across variants of RISC-V microarchitectures.,0,gannoCal/Dynamically-Scheduled-Speculative-Execution-RISC-V-32I-Core,647001915,Verilog,Dynamically-Scheduled-Speculative-Execution-RISC-V-32I-Core,285791,0,2023-05-29 21:07:35+00:00,[],None
322,https://github.com/Swapnil-Jain1121/Verilog.git,2023-05-28 19:27:03+00:00,,0,Swapnil-Jain1121/Verilog,646559278,Verilog,Verilog,9108,0,2023-09-08 13:36:19+00:00,[],None
323,https://github.com/ZhangHongrui99/sram_ctr_ahb.git,2023-05-17 02:05:04+00:00,,0,ZhangHongrui99/sram_ctr_ahb,641704272,Verilog,sram_ctr_ahb,7,0,2023-05-17 02:12:21+00:00,[],None
324,https://github.com/nishudit/8-Bit-ALU.git,2023-05-19 08:52:03+00:00,This GitHub repository contains Verilog files and a Proteus simulation for an 8-bit Arithmetic Logic Unit.,0,nishudit/8-Bit-ALU,642745247,Verilog,8-Bit-ALU,41,0,2023-05-19 09:06:10+00:00,[],None
325,https://github.com/grmdarya/HDL-coding.git,2023-05-19 20:43:23+00:00,Моделирование различных небольших систем на Verilog и VHDL,0,grmdarya/HDL-coding,642996744,Verilog,HDL-coding,239,0,2023-05-22 06:34:07+00:00,[],None
326,https://github.com/BreadEnthusiast/architektura.git,2023-05-19 12:59:13+00:00,hgshsh,0,BreadEnthusiast/architektura,642834522,Verilog,architektura,14744,0,2023-06-25 17:35:13+00:00,[],None
327,https://github.com/yfyHaoYe/CPU.git,2023-05-18 06:10:12+00:00,,0,yfyHaoYe/CPU,642242050,Verilog,CPU,23280,0,2023-06-02 10:32:11+00:00,[],None
328,https://github.com/jasonyhuang/tod.git,2023-05-20 06:16:30+00:00,,0,jasonyhuang/tod,643111829,Verilog,tod,7,0,2023-05-20 06:42:32+00:00,[],None
329,https://github.com/mayammakram/user_proj_mul32.git,2023-05-20 06:53:03+00:00,,0,mayammakram/user_proj_mul32,643120617,Verilog,user_proj_mul32,41726,0,2023-05-20 06:53:46+00:00,[],https://api.github.com/licenses/apache-2.0
330,https://github.com/TarunkumarKondala/digital-clock.git,2023-05-20 04:54:07+00:00,,0,TarunkumarKondala/digital-clock,643094402,Verilog,digital-clock,67,0,2023-05-23 09:58:30+00:00,[],None
331,https://github.com/AnushaGaddadevaramath/ADLD.git,2023-05-18 18:03:22+00:00,,0,AnushaGaddadevaramath/ADLD,642502954,Verilog,ADLD,2720,0,2023-05-18 18:33:16+00:00,[],None
332,https://github.com/vgupta3233/VLIW_architecture.git,2023-05-24 06:14:12+00:00,VLIW architecture implemented using python and iverilog,0,vgupta3233/VLIW_architecture,644727409,Verilog,VLIW_architecture,4777,0,2023-05-24 06:17:28+00:00,[],None
333,https://github.com/mcgivernm/caravel_user.git,2023-05-28 13:28:53+00:00,,0,mcgivernm/caravel_user,646461162,Verilog,caravel_user,93695,0,2023-05-28 13:29:31+00:00,[],https://api.github.com/licenses/apache-2.0
334,https://github.com/Changi-Im/Development-of-Image-Synthesis-Edge-Device-for-Image-Quality-Improvement.git,2023-06-03 02:29:40+00:00,Development of Image Synthesis Edge Device for Image Quality Improvement,0,Changi-Im/Development-of-Image-Synthesis-Edge-Device-for-Image-Quality-Improvement,648857079,Verilog,Development-of-Image-Synthesis-Edge-Device-for-Image-Quality-Improvement,2921,0,2023-06-25 08:15:16+00:00,[],None
335,https://github.com/ThorKn/tt03p5-vgaclock-02.git,2023-06-02 14:21:40+00:00,,1,ThorKn/tt03p5-vgaclock-02,648674468,Verilog,tt03p5-vgaclock-02,381,0,2023-06-02 15:05:44+00:00,[],https://api.github.com/licenses/apache-2.0
336,https://github.com/MrTbag/team-205.git,2023-06-01 06:28:18+00:00,,0,MrTbag/team-205,648070226,Verilog,team-205,8,0,2023-06-01 12:43:33+00:00,[],https://api.github.com/licenses/mit
337,https://github.com/Lucalini/8-Bit-Comparator-with-4-Bit-Comparator-Modules.git,2023-06-02 06:33:15+00:00,This verilog project implements the 8 bit comparator by instantiating 2 n=4 bit comparators for the 4 lsbs and 4 msbs. The results of these 2 comparators are then evaluated using an always block and if/else statements. ,0,Lucalini/8-Bit-Comparator-with-4-Bit-Comparator-Modules,648512608,Verilog,8-Bit-Comparator-with-4-Bit-Comparator-Modules,1,0,2023-06-02 06:33:43+00:00,[],None
338,https://github.com/Lucalini/4-Bit-Up-Down-Counter-w-Multiplexed-7-Segment-Display.git,2023-06-02 06:45:58+00:00,"In this verilog file i used my previous experiment’s code, but modified the output decoder to be a mealy output and depend on the button input. Additionally, I instatiated my own multiplex display module.",0,Lucalini/4-Bit-Up-Down-Counter-w-Multiplexed-7-Segment-Display,648516459,Verilog,4-Bit-Up-Down-Counter-w-Multiplexed-7-Segment-Display,4,0,2023-06-02 06:46:29+00:00,[],None
339,https://github.com/longzhenyuan01/Stopwatch.git,2023-06-03 11:02:06+00:00,,0,longzhenyuan01/Stopwatch,648966342,Verilog,Stopwatch,10,0,2023-06-03 11:03:41+00:00,[],None
340,https://github.com/benson1210/finalproject.git,2023-05-31 08:49:17+00:00,,0,benson1210/finalproject,647657836,Verilog,finalproject,7,0,2023-05-31 09:04:47+00:00,[],None
341,https://github.com/Turjoy167/3-bit-binary-square-calculator.git,2023-05-31 08:26:44+00:00,,0,Turjoy167/3-bit-binary-square-calculator,647649109,Verilog,3-bit-binary-square-calculator,617,0,2023-05-31 08:31:15+00:00,[],None
342,https://github.com/alessandrovargiu/DLX-Project.git,2023-05-25 07:24:02+00:00,DLX architecture implementation in VHDL,0,alessandrovargiu/DLX-Project,645221534,Verilog,DLX-Project,41993,0,2023-11-21 23:11:58+00:00,[],https://api.github.com/licenses/gpl-3.0
343,https://github.com/Deviated-Form/ps2Adapter.git,2023-05-20 17:27:12+00:00,Adapter for accessing a PS2 Controller with a Zybo z7-10,0,Deviated-Form/ps2Adapter,643288563,Verilog,ps2Adapter,330,0,2023-11-12 23:25:15+00:00,"['fpga', 'ps2', 'zybo-z7-10']",None
344,https://github.com/rocky-utm/gcd-verilog.git,2023-05-25 08:47:51+00:00,,0,rocky-utm/gcd-verilog,645252776,Verilog,gcd-verilog,401,0,2023-05-25 08:48:32+00:00,[],None
345,https://github.com/crlarsen/sigmul_10-3.git,2023-05-24 15:13:19+00:00,Use Modified Booth's Method for Binary16 Significand Multiply Circuit,0,crlarsen/sigmul_10-3,644941949,Verilog,sigmul_10-3,6,0,2023-05-24 15:18:47+00:00,[],None
346,https://github.com/pramathk2002/adldcodes.git,2023-05-22 07:10:35+00:00,,0,pramathk2002/adldcodes,643794582,Verilog,adldcodes,1395,0,2023-05-22 07:15:51+00:00,[],None
347,https://github.com/DenizUlucan/embedded-systems.git,2023-05-30 18:09:16+00:00,,0,DenizUlucan/embedded-systems,647409131,Verilog,embedded-systems,268,0,2023-05-30 18:13:18+00:00,[],None
348,https://github.com/malikshanaah1999/3000.git,2023-05-30 18:27:22+00:00,,0,malikshanaah1999/3000,647415606,Verilog,3000,41726,0,2023-05-30 18:27:58+00:00,[],https://api.github.com/licenses/apache-2.0
349,https://github.com/psychogenic/tt03p5-gatecat-fpga.git,2023-05-31 13:49:33+00:00,,0,psychogenic/tt03p5-gatecat-fpga,647775473,Verilog,tt03p5-gatecat-fpga,14,0,2023-06-01 21:43:32+00:00,[],https://api.github.com/licenses/apache-2.0
350,https://github.com/Salvatorecoscab/Practica-3-Arquitectura.git,2023-05-31 09:19:23+00:00,,0,Salvatorecoscab/Practica-3-Arquitectura,647669607,Verilog,Practica-3-Arquitectura,6611,0,2023-06-02 18:16:02+00:00,[],None
351,https://github.com/gorilla-1/Digital_System_Design.git,2023-05-30 09:18:38+00:00,,0,gorilla-1/Digital_System_Design,647201262,Verilog,Digital_System_Design,16,0,2023-05-30 09:20:03+00:00,[],None
352,https://github.com/mindful-ai/quest-fpga.git,2023-05-30 07:42:03+00:00,Material for FPGA training for Quest Global,0,mindful-ai/quest-fpga,647164460,Verilog,quest-fpga,152038,0,2023-06-26 07:59:22+00:00,[],None
353,https://github.com/paritoshv/AES-Algo-Verilog.git,2023-05-29 12:08:35+00:00,,0,paritoshv/AES-Algo-Verilog,646817773,Verilog,AES-Algo-Verilog,4,0,2023-05-31 08:39:11+00:00,[],None
354,https://github.com/Cocty/MIPSCPU.git,2023-06-02 14:59:27+00:00,,0,Cocty/MIPSCPU,648688934,Verilog,MIPSCPU,6643,0,2023-06-02 14:59:44+00:00,[],None
355,https://github.com/safiyamohsin/ADLD_01FE20BEC332.git,2023-05-19 14:38:16+00:00,,0,safiyamohsin/ADLD_01FE20BEC332,642874247,Verilog,ADLD_01FE20BEC332,1189,0,2023-05-19 14:41:27+00:00,[],None
356,https://github.com/PRAGATI-0102/BCD-to-Excess-3-Day-040-.git,2023-05-19 15:08:56+00:00,"In my implementation, I wrote a Verilog code that takes a 4-bit BCD input and converts it into a 4-bit Excess-3 output. Excess-3, also known as XS-3 or Stibitz code, is a self-complementing code where each decimal digit is represented by adding 3 to the corresponding BCD digit.",0,PRAGATI-0102/BCD-to-Excess-3-Day-040-,642886202,Verilog,BCD-to-Excess-3-Day-040-,73,0,2023-05-19 15:19:41+00:00,[],None
357,https://github.com/Manvith-Prabhu/DSD-Verilog.git,2023-05-19 10:37:34+00:00,,0,Manvith-Prabhu/DSD-Verilog,642783771,Verilog,DSD-Verilog,6746,0,2023-05-19 10:41:21+00:00,[],None
358,https://github.com/tmandic/caravana.git,2023-05-18 20:32:04+00:00,,0,tmandic/caravana,642549896,Verilog,caravana,93,0,2023-05-18 20:32:11+00:00,[],https://api.github.com/licenses/apache-2.0
359,https://github.com/Essenceia/formal_experiements.git,2023-05-19 01:06:01+00:00,Formal verification experiments,0,Essenceia/formal_experiements,642613538,Verilog,formal_experiements,25,0,2023-05-23 18:00:17+00:00,"['assertions', 'formal-verification', 'verilog', 'yosyshq', 'systemverilog']",None
360,https://github.com/Potassium-chromate/ATconvolution.git,2023-05-21 15:05:59+00:00,ATconvolution,0,Potassium-chromate/ATconvolution,643564031,Verilog,ATconvolution,8,0,2023-05-21 15:06:51+00:00,[],None
361,https://github.com/souleymanedembele/Project_16_bit_CPU.git,2023-05-21 17:05:28+00:00,CPU Project,0,souleymanedembele/Project_16_bit_CPU,643597589,Verilog,Project_16_bit_CPU,4786,0,2023-07-30 05:45:45+00:00,[],None
362,https://github.com/joe82512/hdlbits.git,2023-05-20 05:21:12+00:00,HDLBits practice,0,joe82512/hdlbits,643099798,Verilog,hdlbits,47,0,2023-05-20 05:22:54+00:00,[],None
363,https://github.com/amysamy2002/aes.git,2023-05-20 16:51:14+00:00,,0,amysamy2002/aes,643278865,Verilog,aes,41725,0,2023-05-20 16:51:55+00:00,[],https://api.github.com/licenses/apache-2.0
364,https://github.com/russellfriesenhahn/spi.git,2023-05-20 18:11:48+00:00,,0,russellfriesenhahn/spi,643300264,Verilog,spi,1,0,2023-05-20 18:26:18+00:00,[],https://api.github.com/licenses/mit
365,https://github.com/aebarthyi/cse-100-labs.git,2023-05-23 06:19:24+00:00,,0,aebarthyi/cse-100-labs,644251639,Verilog,cse-100-labs,5,0,2023-05-24 18:18:35+00:00,[],None
366,https://github.com/PRAGATI-0102/Vedic-Divider-Day-047-.git,2023-05-26 18:29:13+00:00,The Vedic Divider implements a highly efficient and parallel division algorithm by leveraging Vedic Mathematics techniques. It takes a dividend and divisor as inputs and produces the quotient and remainder as outputs.,0,PRAGATI-0102/Vedic-Divider-Day-047-,645911059,Verilog,Vedic-Divider-Day-047-,177,0,2023-05-26 18:30:08+00:00,[],None
367,https://github.com/RegisBloemer/verilog.git,2023-05-23 19:59:15+00:00,,0,RegisBloemer/verilog,644571950,Verilog,verilog,1,0,2023-05-23 20:05:19+00:00,[],None
368,https://github.com/TheYash27/byte_vedic_multiplier.git,2023-05-25 04:04:11+00:00,,0,TheYash27/byte_vedic_multiplier,645162222,Verilog,byte_vedic_multiplier,4,0,2023-05-25 04:05:32+00:00,[],None
369,https://github.com/dsatizabal/caravel_test.git,2023-05-25 00:55:59+00:00,Test of Caravel,0,dsatizabal/caravel_test,645117133,Verilog,caravel_test,93696,0,2023-05-25 00:56:36+00:00,[],https://api.github.com/licenses/apache-2.0
370,https://github.com/arduinojinarendra/fwc_1may.git,2023-05-24 04:45:09+00:00,,0,arduinojinarendra/fwc_1may,644702578,Verilog,fwc_1may,6558,0,2023-07-10 07:24:34+00:00,[],None
371,https://github.com/smizanian/Saturating-Counter.git,2023-06-01 06:32:43+00:00,,0,smizanian/Saturating-Counter,648071600,Verilog,Saturating-Counter,117,0,2023-06-18 07:56:52+00:00,[],https://api.github.com/licenses/mit
372,https://github.com/smkh1400/Group236.git,2023-06-01 06:30:14+00:00,,0,smkh1400/Group236,648070867,Verilog,Group236,4,0,2023-06-02 19:57:52+00:00,[],https://api.github.com/licenses/mit
373,https://github.com/BozorgmehrZia/hardwar.git,2023-06-01 06:31:53+00:00,,0,BozorgmehrZia/hardwar,648071357,Verilog,hardwar,5,0,2023-06-01 06:32:00+00:00,[],https://api.github.com/licenses/mit
374,https://github.com/ravalika-karnati/VerilogTutorial.git,2023-06-01 15:19:09+00:00,,0,ravalika-karnati/VerilogTutorial,648268086,Verilog,VerilogTutorial,31,0,2023-06-06 17:45:09+00:00,[],None
375,https://github.com/AnoopHanchate/ADLD_ANOOP.git,2023-05-18 17:36:30+00:00,,0,AnoopHanchate/ADLD_ANOOP,642493289,Verilog,ADLD_ANOOP,608,0,2023-05-18 17:41:00+00:00,[],None
376,https://github.com/tanish1729/Y86-64-Instruction-Set-Architechture.git,2023-05-17 10:10:14+00:00,"Course Project for Intro to Processor Architechture at IIIT Hyderabad (2nd Year, 2nd Semester) ",0,tanish1729/Y86-64-Instruction-Set-Architechture,641860393,Verilog,Y86-64-Instruction-Set-Architechture,1537,0,2023-05-17 10:11:52+00:00,[],None
377,https://github.com/BhavanaKulkarni/ADLD.git,2023-05-18 10:48:36+00:00,,0,BhavanaKulkarni/ADLD,642337499,Verilog,ADLD,794,0,2023-05-18 10:52:53+00:00,[],None
378,https://github.com/Veeresh-Akki/ADLD_Assignment.git,2023-05-18 11:06:17+00:00,,0,Veeresh-Akki/ADLD_Assignment,642343782,Verilog,ADLD_Assignment,2529,0,2023-05-18 11:09:16+00:00,[],None
379,https://github.com/feyzaanurr/EE446-Laboratory-Work-4---Pipelined-Processor-Design.git,2023-05-18 21:44:48+00:00,,0,feyzaanurr/EE446-Laboratory-Work-4---Pipelined-Processor-Design,642568601,Verilog,EE446-Laboratory-Work-4---Pipelined-Processor-Design,8753,0,2024-01-16 11:09:23+00:00,[],None
380,https://github.com/Nikolai489/ar_cpu.git,2023-05-18 00:23:44+00:00,,0,Nikolai489/ar_cpu,642156279,Verilog,ar_cpu,7020,0,2024-02-19 02:39:44+00:00,[],https://api.github.com/licenses/mit
381,https://github.com/Goldenglows/private-Verilog-learning.git,2023-06-02 06:28:42+00:00,"Please note that the code in this library is used by me for daily practice, and is not a complete project as a codebase for my own use",0,Goldenglows/private-Verilog-learning,648511306,Verilog,private-Verilog-learning,22,0,2024-03-31 13:55:19+00:00,[],None
382,https://github.com/cemery123/SIMTAM.git,2023-05-19 01:45:53+00:00,,0,cemery123/SIMTAM,642622910,Verilog,SIMTAM,3678,0,2023-06-12 15:23:40+00:00,[],None
383,https://github.com/ahmedtmgouda/DD2_GoogleProj.git,2023-05-17 16:37:56+00:00,,0,ahmedtmgouda/DD2_GoogleProj,642020010,Verilog,DD2_GoogleProj,93692,0,2023-05-17 16:38:36+00:00,[],https://api.github.com/licenses/apache-2.0
384,https://github.com/kurfurst114514/my-RISC-V_PCPU.git,2023-05-17 09:34:33+00:00,RISC-V架构五级流水线CPU设计,0,kurfurst114514/my-RISC-V_PCPU,641846252,Verilog,my-RISC-V_PCPU,12956,0,2023-05-17 09:37:53+00:00,[],None
385,https://github.com/dimasmb/E5-TP2.git,2023-05-17 18:01:10+00:00,TP2 de Electrónica 5,0,dimasmb/E5-TP2,642051761,Verilog,E5-TP2,16,0,2023-05-17 18:11:15+00:00,[],None
386,https://github.com/0xkr3pt0n/FPGAs.git,2023-05-17 20:02:03+00:00,,0,0xkr3pt0n/FPGAs,642092744,Verilog,FPGAs,4,0,2023-05-17 20:03:41+00:00,[],None
387,https://github.com/amysamy2002/user_proj_mul32.git,2023-05-18 14:17:51+00:00,,0,amysamy2002/user_proj_mul32,642418196,Verilog,user_proj_mul32,41721,0,2023-05-18 14:18:25+00:00,[],https://api.github.com/licenses/apache-2.0
388,https://github.com/we4t/COSE222_CA.git,2023-05-19 05:08:28+00:00,,0,we4t/COSE222_CA,642672179,Verilog,COSE222_CA,64596,0,2023-05-19 05:10:43+00:00,[],None
389,https://github.com/PRAGATI-0102/BCD-to-Binary-Day-039-.git,2023-05-18 16:38:10+00:00,"BCD to Binary conversion is a common operation in digital circuits, especially in applications that involve numerical calculations and displays.",0,PRAGATI-0102/BCD-to-Binary-Day-039-,642472877,Verilog,BCD-to-Binary-Day-039-,91,0,2023-05-18 16:39:19+00:00,[],None
390,https://github.com/Strykez/verilog_practice.git,2023-05-19 11:30:12+00:00,A repo that stores basic verilog projects I made in uni,0,Strykez/verilog_practice,642801839,Verilog,verilog_practice,4,0,2023-05-19 11:54:47+00:00,[],None
391,https://github.com/joshuanieh/RISCV-with-Compressed-Instructions.git,2023-05-20 07:47:36+00:00,,0,joshuanieh/RISCV-with-Compressed-Instructions,643133854,Verilog,RISCV-with-Compressed-Instructions,5904,0,2023-11-02 13:59:41+00:00,[],None
392,https://github.com/WHU-HZY/SCPU.git,2023-06-01 03:09:56+00:00,,0,WHU-HZY/SCPU,648018830,Verilog,SCPU,26,0,2023-07-23 12:56:34+00:00,[],None
393,https://github.com/busrayilmaz01/encryptionSystem.git,2023-05-31 18:39:28+00:00,A verilog code that firstly records the password you entered and then validates the password you entered and turns on certain leds as the case may be. For video https://drive.google.com/file/d/1-yNNA_C3xunZ7pT7ppVryVOGFUDUNQQN/view?usp=sharing,0,busrayilmaz01/encryptionSystem,647889642,Verilog,encryptionSystem,2,0,2023-05-31 18:40:52+00:00,[],None
394,https://github.com/Gaurav138-Nan/32-bit-single-cycle-MIPS-processor.git,2023-06-03 17:42:42+00:00,,0,Gaurav138-Nan/32-bit-single-cycle-MIPS-processor,649076509,Verilog,32-bit-single-cycle-MIPS-processor,10,0,2023-06-06 06:17:39+00:00,[],None
395,https://github.com/Lucalini/5-Bit-Ripple-Carry-Adder-RCA-.git,2023-06-02 06:30:20+00:00,This verilog project implements the 5 bit ripple carry adder by initiating the half adder and full adder modules. We have two 5 bit inputs and one 4 bit output. ,0,Lucalini/5-Bit-Ripple-Carry-Adder-RCA-,648511765,Verilog,5-Bit-Ripple-Carry-Adder-RCA-,1,0,2023-06-02 06:30:55+00:00,[],None
396,https://github.com/gustavofcunha/d-flip-flop.git,2023-05-30 17:16:11+00:00,"Em Verilog, implementei um flip-flop do tipo D. Inclui a especificação descritiva e comportamental e testbench, além dos diagramas de tempo. Também implementados os registradores e stream cypher.",0,gustavofcunha/d-flip-flop,647389941,Verilog,d-flip-flop,291,0,2023-05-30 17:21:42+00:00,[],None
397,https://github.com/JayadityaVLSI/random_number.git,2023-05-31 01:17:54+00:00,Generate random even/odd/one hot numbers using verilog,0,JayadityaVLSI/random_number,647525481,Verilog,random_number,0,0,2023-05-31 01:20:24+00:00,[],None
398,https://github.com/UpendraSaiCH/100DaysOfVerilogRTL.git,2023-05-26 10:13:06+00:00,,0,UpendraSaiCH/100DaysOfVerilogRTL,645735678,Verilog,100DaysOfVerilogRTL,12,0,2023-06-15 14:41:26+00:00,[],None
399,https://github.com/Spandanabandekar/ADLD.git,2023-05-19 14:23:58+00:00,,0,Spandanabandekar/ADLD,642868593,Verilog,ADLD,2147,0,2023-05-19 14:34:52+00:00,[],None
400,https://github.com/hsj10/2022-Cryptographic_Engineering.git,2023-05-28 09:26:20+00:00,,0,hsj10/2022-Cryptographic_Engineering,646400686,Verilog,2022-Cryptographic_Engineering,339,0,2023-05-28 09:49:03+00:00,[],None
401,https://github.com/dila128/mors_code.git,2023-05-28 16:04:19+00:00,,0,dila128/mors_code,646505941,Verilog,mors_code,1,0,2023-05-28 16:05:46+00:00,[],None
402,https://github.com/aqaPayam/MyHardwar.git,2023-06-01 06:27:12+00:00,,0,aqaPayam/MyHardwar,648069876,Verilog,MyHardwar,7,0,2023-06-01 14:22:30+00:00,[],https://api.github.com/licenses/mit
403,https://github.com/Sinanmz/hardwar.git,2023-06-01 06:54:35+00:00,,0,Sinanmz/hardwar,648078557,Verilog,hardwar,3,0,2023-06-01 14:01:13+00:00,[],https://api.github.com/licenses/mit
404,https://github.com/elahemrtz/Hardware203.git,2023-06-01 06:35:04+00:00,,0,elahemrtz/Hardware203,648072326,Verilog,Hardware203,18,0,2023-06-01 14:16:14+00:00,[],https://api.github.com/licenses/mit
405,https://github.com/1920276cpe/HDL-Activity.git,2023-06-01 12:10:18+00:00,,0,1920276cpe/HDL-Activity,648191685,Verilog,HDL-Activity,5,0,2023-06-01 12:19:47+00:00,[],None
406,https://github.com/AlexLicuriceanu/structura-si-organizarea-calculatoarelor.git,2023-05-29 16:26:54+00:00,Structura si Organizarea Calculatoarelor (SOC) - UPB ACS 2022-2023,0,AlexLicuriceanu/structura-si-organizarea-calculatoarelor,646916534,Verilog,structura-si-organizarea-calculatoarelor,588,0,2023-06-06 12:52:23+00:00,"['acs', 'si', 'soc', 'structura', 'upb', 'calculatoarelor', 'organizarea']",https://api.github.com/licenses/mit
407,https://github.com/MotiR80/Computer-Architectur.git,2023-05-29 17:11:03+00:00,,0,MotiR80/Computer-Architectur,646931800,Verilog,Computer-Architectur,2649,0,2023-05-29 17:38:05+00:00,[],None
408,https://github.com/MarlonHenq/Verilog-HDLBits-solutions.git,2023-05-29 16:45:48+00:00,Codes HDLBits problems,0,MarlonHenq/Verilog-HDLBits-solutions,646923151,Verilog,Verilog-HDLBits-solutions,44,0,2023-07-24 12:26:35+00:00,[],None
409,https://github.com/TheYash27/ROM.git,2023-05-31 11:31:56+00:00,,0,TheYash27/ROM,647719115,Verilog,ROM,4,0,2023-05-31 11:32:48+00:00,[],None
410,https://github.com/Shikar7/VLSI-Projects.git,2023-05-24 16:17:31+00:00,,0,Shikar7/VLSI-Projects,644966978,Verilog,VLSI-Projects,4,0,2023-05-24 16:58:05+00:00,[],None
411,https://github.com/yang151-bit/Tang-Primer-20k-udp-loopback.git,2023-05-25 14:30:30+00:00,base on onboard rtl8201 ethernet phy,0,yang151-bit/Tang-Primer-20k-udp-loopback,645385522,Verilog,Tang-Primer-20k-udp-loopback,2802,0,2023-09-27 10:33:38+00:00,[],None
412,https://github.com/abdelrhmankadry/DMA.git,2023-05-25 23:27:09+00:00,This project consists of several Verilog modules that implement a DMA.,0,abdelrhmankadry/DMA,645554876,Verilog,DMA,3,0,2023-05-25 23:34:03+00:00,[],None
413,https://github.com/TMaitri/ADLD.git,2023-05-18 04:49:37+00:00,,0,TMaitri/ADLD,642219762,Verilog,ADLD,1396,0,2023-05-18 05:01:34+00:00,[],None
414,https://github.com/xytyz/AES_128bit.git,2023-05-27 18:38:33+00:00,Implemented AES encryption on 128 bit for the College Major Project,0,xytyz/AES_128bit,646242010,Verilog,AES_128bit,26,0,2023-06-13 05:25:26+00:00,[],None
415,https://github.com/AditiPrasadz/FPGA-iCE40-Verilog-Project.git,2023-05-27 20:27:26+00:00,,0,AditiPrasadz/FPGA-iCE40-Verilog-Project,646266240,Verilog,FPGA-iCE40-Verilog-Project,404,0,2023-05-27 20:29:20+00:00,[],None
416,https://github.com/MujahidBilalOrakzai/Open_Source_COPHEE.git,2023-05-27 17:49:37+00:00,,0,MujahidBilalOrakzai/Open_Source_COPHEE,646229993,Verilog,Open_Source_COPHEE,17,0,2023-09-23 19:20:30+00:00,[],None
417,https://github.com/harish2238/16Bit_Radix-4-Two_Speed_Multiplier.git,2023-05-24 08:36:36+00:00,,0,harish2238/16Bit_Radix-4-Two_Speed_Multiplier,644779095,Verilog,16Bit_Radix-4-Two_Speed_Multiplier,342,0,2023-05-24 09:22:52+00:00,[],None
418,https://github.com/PRAGATI-0102/Binary-to-7segment-Day-042-.git,2023-05-21 17:05:39+00:00,,0,PRAGATI-0102/Binary-to-7segment-Day-042-,643597646,Verilog,Binary-to-7segment-Day-042-,99,0,2023-05-21 17:09:28+00:00,[],None
419,https://github.com/mannndrew/Synthesizable-Dynamic-ALU.git,2023-05-23 06:16:55+00:00,Verilog-based ALU component generator for n-bit operations.,0,mannndrew/Synthesizable-Dynamic-ALU,644250817,Verilog,Synthesizable-Dynamic-ALU,60,0,2023-08-11 16:54:16+00:00,[],https://api.github.com/licenses/mit
420,https://github.com/avetisminasyan/verilog.git,2023-05-24 17:44:59+00:00,verilog,0,avetisminasyan/verilog,644999253,Verilog,verilog,3,0,2023-05-24 17:46:16+00:00,[],None
421,https://github.com/eecsmap/iverilog_demo.git,2023-05-24 21:08:17+00:00,,0,eecsmap/iverilog_demo,645065835,Verilog,iverilog_demo,8,0,2023-05-26 07:45:37+00:00,[],None
422,https://github.com/fhvlegenda/hui.git,2023-05-30 12:28:25+00:00,zalupa,0,fhvlegenda/hui,647271547,Verilog,hui,41726,0,2023-05-30 12:29:08+00:00,[],https://api.github.com/licenses/apache-2.0
423,https://github.com/mohamedmorsi22/washing_machine_controller.git,2023-05-25 14:02:03+00:00,systemVerilog implementation of a washing machine controller that supports different modes of operation.,0,mohamedmorsi22/washing_machine_controller,645373123,Verilog,washing_machine_controller,3,0,2023-05-25 14:04:42+00:00,[],None
424,https://github.com/cepdnaclk/e17-4yp-os-initiated-cache-switching-to-minimize-performance-loss-in-context-switches.git,2023-05-22 05:55:34+00:00,OS-initiated cache switching to minimize performance loss in context switches,3,cepdnaclk/e17-4yp-os-initiated-cache-switching-to-minimize-performance-loss-in-context-switches,643769220,Verilog,e17-4yp-os-initiated-cache-switching-to-minimize-performance-loss-in-context-switches,72378,0,2023-07-22 16:15:58+00:00,[],None
425,https://github.com/pallavi2564/VERILOG.git,2023-05-25 13:21:28+00:00,,0,pallavi2564/VERILOG,645355854,Verilog,VERILOG,136,0,2023-08-05 16:57:30+00:00,[],None
426,https://github.com/jhpower901/Verilog.git,2023-05-17 05:31:26+00:00,,0,jhpower901/Verilog,641756700,Verilog,Verilog,95601,0,2023-12-21 10:05:53+00:00,[],None
427,https://github.com/suehara-tsuyoshi/le3hw.git,2023-05-22 20:15:58+00:00,,0,suehara-tsuyoshi/le3hw,644099122,Verilog,le3hw,64831,0,2023-05-22 20:17:52+00:00,[],None
428,https://github.com/8BitRobot/flappyblock.git,2023-05-22 22:26:11+00:00,Flappybird on an FPGA. CS M152A final project.,0,8BitRobot/flappyblock,644133978,Verilog,flappyblock,34,0,2023-06-05 22:06:55+00:00,[],None
429,https://github.com/kshitizt/ee209_trial.git,2023-05-25 02:23:57+00:00,,0,kshitizt/ee209_trial,645138153,Verilog,ee209_trial,128,0,2023-05-25 02:24:06+00:00,[],https://api.github.com/licenses/apache-2.0
430,https://github.com/amg-eng/Moore_FSM_Sequence_Detector.git,2023-05-25 14:01:45+00:00,detect Moore FSM Sequence in the input signal.,0,amg-eng/Moore_FSM_Sequence_Detector,645373000,Verilog,Moore_FSM_Sequence_Detector,7,0,2023-05-25 14:32:21+00:00,[],None
431,https://github.com/AhmedHany1212/Pipelined-Mip-using-verilog.git,2023-05-19 06:19:24+00:00,,0,AhmedHany1212/Pipelined-Mip-using-verilog,642691305,Verilog,Pipelined-Mip-using-verilog,1534,0,2023-05-19 06:20:55+00:00,[],None
432,https://github.com/liamgoss/MIPS-32-Bit-Processor.git,2023-05-19 00:07:59+00:00,"The objective of this project was to design a 32-bit MIPS processor featuring pipelining, hazard detection, and forwarding.",0,liamgoss/MIPS-32-Bit-Processor,642599838,Verilog,MIPS-32-Bit-Processor,26,0,2023-05-19 00:11:14+00:00,[],None
433,https://github.com/AhmedHany1212/The-Advanced-Encryption-standard-using-verilog.git,2023-05-19 06:40:38+00:00,,0,AhmedHany1212/The-Advanced-Encryption-standard-using-verilog,642698568,Verilog,The-Advanced-Encryption-standard-using-verilog,147,0,2023-05-19 06:41:35+00:00,[],None
434,https://github.com/Parisaa/LoByHW.git,2023-05-26 09:46:44+00:00,Hardware Implementation for LoBy,0,Parisaa/LoByHW,645726045,Verilog,LoByHW,28,0,2023-05-26 11:29:03+00:00,[],None
435,https://github.com/sasi-kiran123/wallace_multiplier.git,2023-05-26 16:57:39+00:00,,0,sasi-kiran123/wallace_multiplier,645881991,Verilog,wallace_multiplier,15,0,2023-05-26 16:58:28+00:00,[],https://api.github.com/licenses/mit
436,https://github.com/mohamed-mohamed-tarek/UART-ass11.git,2023-05-25 20:02:07+00:00,,0,mohamed-mohamed-tarek/UART-ass11,645503778,Verilog,UART-ass11,154,0,2023-05-25 20:07:38+00:00,[],None
437,https://github.com/AlekseiIurkov/currentPID.git,2023-05-25 21:34:29+00:00,High current PID controller ,0,AlekseiIurkov/currentPID,645529448,Verilog,currentPID,1,0,2023-05-25 21:35:01+00:00,[],None
438,https://github.com/Meghanatedla/Y86-64_Processor.git,2023-05-27 08:29:47+00:00,A Y86-64 processor implemented using Verilog,0,Meghanatedla/Y86-64_Processor,646085040,Verilog,Y86-64_Processor,10860,0,2023-05-27 08:31:05+00:00,[],None
439,https://github.com/AdithiBhatta/IRIS-LABS-Efabless-Recs.git,2023-05-27 10:50:25+00:00,,0,AdithiBhatta/IRIS-LABS-Efabless-Recs,646118966,Verilog,IRIS-LABS-Efabless-Recs,6,0,2023-06-03 12:05:41+00:00,[],None
440,https://github.com/mohamed-mohamed-tarek/FSM_sequence-detecor.git,2023-05-25 19:43:51+00:00,,0,mohamed-mohamed-tarek/FSM_sequence-detecor,645498450,Verilog,FSM_sequence-detecor,3284,0,2023-05-25 19:45:07+00:00,[],None
441,https://github.com/lumusen0305/IDEA-encryptone.git,2023-05-20 03:24:50+00:00,,0,lumusen0305/IDEA-encryptone,643077110,Verilog,IDEA-encryptone,614,0,2023-05-20 09:12:38+00:00,[],None
442,https://github.com/johnsaber1/Design-UART-module-tx-rx-synthesis-in-design-compiler-main.git,2023-05-19 08:18:31+00:00,,0,johnsaber1/Design-UART-module-tx-rx-synthesis-in-design-compiler-main,642733504,Verilog,Design-UART-module-tx-rx-synthesis-in-design-compiler-main,264,0,2023-05-19 08:23:59+00:00,[],None
443,https://github.com/PRAGATI-0102/Binary-to-2-s-Complement-Day-041-.git,2023-05-20 17:21:45+00:00,,0,PRAGATI-0102/Binary-to-2-s-Complement-Day-041-,643287104,Verilog,Binary-to-2-s-Complement-Day-041-,73,0,2023-05-20 17:22:52+00:00,[],None
444,https://github.com/Daniel-Lamb/VerilogDesign.git,2023-05-28 01:06:16+00:00,HDL Designs for use in Xilinx Vivado Design Suite,0,Daniel-Lamb/VerilogDesign,646310117,Verilog,VerilogDesign,27,0,2023-05-28 04:06:49+00:00,[],None
445,https://github.com/sayoojkj/Verilog_seqdet.git,2023-05-28 12:01:26+00:00,,0,sayoojkj/Verilog_seqdet,646437714,Verilog,Verilog_seqdet,79,0,2023-07-16 13:45:05+00:00,[],None
446,https://github.com/salmanmunaf/cs552.git,2023-05-22 07:15:59+00:00,Repository for the UW Madison course: CS552 - Introduction to Computer Architecture,0,salmanmunaf/cs552,643796476,Verilog,cs552,19235,0,2023-05-22 07:17:42+00:00,[],None
447,https://github.com/Sunnyhong0326/Logic-Design-Lab.git,2023-05-22 13:43:52+00:00,,0,Sunnyhong0326/Logic-Design-Lab,643949049,Verilog,Logic-Design-Lab,34432,0,2023-05-22 13:52:18+00:00,[],None
448,https://github.com/TheYash27/voting_machine.git,2023-05-24 04:20:41+00:00,,0,TheYash27/voting_machine,644696608,Verilog,voting_machine,5,0,2023-05-24 04:21:41+00:00,[],None
449,https://github.com/Dyumnin-Interns/interfaces-ddeviprsanna9876.git,2023-05-25 06:56:01+00:00,interfaces-ddeviprsanna9876 created by GitHub Classroom,0,Dyumnin-Interns/interfaces-ddeviprsanna9876,645211325,Verilog,interfaces-ddeviprsanna9876,7,0,2023-06-02 10:19:53+00:00,[],None
450,https://github.com/psychogenic/tt03p5_neptune_proportional_b.git,2023-06-01 16:56:38+00:00,,0,psychogenic/tt03p5_neptune_proportional_b,648304396,Verilog,tt03p5_neptune_proportional_b,26,0,2023-06-01 17:00:50+00:00,[],https://api.github.com/licenses/apache-2.0
451,https://github.com/UmangSharma5/PipeSeqProcessor.git,2023-06-02 11:37:11+00:00,,0,UmangSharma5/PipeSeqProcessor,648613656,Verilog,PipeSeqProcessor,528,0,2023-06-02 11:41:25+00:00,[],None
452,https://github.com/TheYash27/hex_keypad_scanner_encoder.git,2023-05-31 06:21:19+00:00,,0,TheYash27/hex_keypad_scanner_encoder,647604040,Verilog,hex_keypad_scanner_encoder,5,0,2023-05-31 06:22:10+00:00,[],None
453,https://github.com/Bjorsvik98/Digital_Estimator_CBADC.git,2023-05-30 08:50:52+00:00,,0,Bjorsvik98/Digital_Estimator_CBADC,647190245,Verilog,Digital_Estimator_CBADC,803,0,2023-06-03 08:57:15+00:00,[],None
454,https://github.com/EthanW0901/axi_stream_insert_header.git,2023-06-02 15:46:11+00:00,,0,EthanW0901/axi_stream_insert_header,648705472,Verilog,axi_stream_insert_header,86,0,2023-10-17 05:39:30+00:00,[],None
455,https://github.com/EfelerGibi/Wishbone_VGA_controller.git,2023-06-02 13:02:32+00:00,,0,EfelerGibi/Wishbone_VGA_controller,648643962,Verilog,Wishbone_VGA_controller,264914,0,2023-06-03 19:38:57+00:00,[],https://api.github.com/licenses/apache-2.0
456,https://github.com/piotrszczypior/adder-verilog.git,2023-06-03 16:40:16+00:00,,0,piotrszczypior/adder-verilog,649060317,Verilog,adder-verilog,28,0,2023-06-03 18:47:45+00:00,[],None
457,https://github.com/Mahan-Bayhaghi/verilog-branch-prediction.git,2023-06-01 06:34:54+00:00,,0,Mahan-Bayhaghi/verilog-branch-prediction,648072273,Verilog,verilog-branch-prediction,6,0,2023-06-01 06:35:00+00:00,[],https://api.github.com/licenses/mit
458,https://github.com/retchart/lq-tot.git,2023-06-01 04:06:25+00:00,The data acquire FPGA firmware for 64 channel TOT,0,retchart/lq-tot,648032204,Verilog,lq-tot,18299,0,2023-06-01 04:07:36+00:00,[],None
459,https://github.com/khofesh/fpga-icestick.git,2023-05-18 14:10:09+00:00,,0,khofesh/fpga-icestick,642414997,Verilog,fpga-icestick,15072,0,2023-05-18 15:40:17+00:00,[],None
460,https://github.com/KhushiRT/ADLD.git,2023-05-18 16:49:25+00:00,,0,KhushiRT/ADLD,642476987,Verilog,ADLD,1386,0,2023-05-18 17:06:36+00:00,[],None
461,https://github.com/AbhayDeshpande26/ADLD_Codes.git,2023-05-18 12:53:02+00:00,,0,AbhayDeshpande26/ADLD_Codes,642383444,Verilog,ADLD_Codes,783,0,2023-05-18 12:54:37+00:00,[],None
462,https://github.com/VarunSavadatti/VarunS.git,2023-05-19 11:47:29+00:00,,0,VarunSavadatti/VarunS,642808096,Verilog,VarunS,347,0,2023-05-19 12:17:44+00:00,[],None
463,https://github.com/Girka-Kirill/FPGA.git,2023-05-18 08:28:40+00:00,,0,Girka-Kirill/FPGA,642288289,Verilog,FPGA,5567,0,2023-05-18 08:34:34+00:00,[],None
464,https://github.com/DavidDavidDavidDavidDavidDavidDavid/caravel_user_project_analog.git,2023-05-30 15:09:07+00:00,,0,DavidDavidDavidDavidDavidDavidDavid/caravel_user_project_analog,647340576,Verilog,caravel_user_project_analog,4404,0,2023-05-30 15:13:58+00:00,[],https://api.github.com/licenses/apache-2.0
465,https://github.com/mustafagl/MorseCodeConverter.git,2023-05-29 14:54:59+00:00,,0,mustafagl/MorseCodeConverter,646882853,Verilog,MorseCodeConverter,13748,0,2023-05-29 15:03:29+00:00,[],None
466,https://github.com/4Nanai/ADDs_Proj.git,2023-05-17 09:10:32+00:00,Code of a simple FSM for ADD challenge course in Glasgow College（数电挑战课）,0,4Nanai/ADDs_Proj,641836647,Verilog,ADDs_Proj,11145,0,2023-11-16 05:23:11+00:00,[],https://api.github.com/licenses/mit
467,https://github.com/89Mods/tt3p5-as1802.git,2023-05-25 13:09:33+00:00,AS1802 for TinyTapeout 3.5,0,89Mods/tt3p5-as1802,645350902,Verilog,tt3p5-as1802,684,0,2023-05-25 13:10:27+00:00,[],https://api.github.com/licenses/apache-2.0
468,https://github.com/TinyTapeout/tinytapeout-03p5.git,2023-05-19 19:39:59+00:00,Tiny Tapeout 3.5 (experimental),3,TinyTapeout/tinytapeout-03p5,642978395,Verilog,tinytapeout-03p5,84198,0,2023-05-29 16:16:12+00:00,[],https://api.github.com/licenses/apache-2.0
469,https://github.com/Vk13io/SPI-controller.git,2023-05-27 08:30:06+00:00,,0,Vk13io/SPI-controller,646085107,Verilog,SPI-controller,5,0,2023-05-27 08:31:32+00:00,[],None
470,https://github.com/aylinraste/Hardwar.git,2023-06-01 06:28:59+00:00,,0,aylinraste/Hardwar,648070458,Verilog,Hardwar,12,0,2023-06-01 14:07:50+00:00,[],https://api.github.com/licenses/mit
471,https://github.com/Negarbsh/Hardwar2023.git,2023-06-01 06:29:11+00:00,,0,Negarbsh/Hardwar2023,648070516,Verilog,Hardwar2023,10,0,2023-06-01 14:01:39+00:00,[],https://api.github.com/licenses/mit
472,https://github.com/pariyahr/BranchPredictor.git,2023-06-01 06:29:16+00:00,,0,pariyahr/BranchPredictor,648070554,Verilog,BranchPredictor,5,0,2023-06-01 13:53:37+00:00,[],https://api.github.com/licenses/mit
473,https://github.com/Snehasanchekar/ADLD.git,2023-05-19 13:02:07+00:00,,0,Snehasanchekar/ADLD,642835568,Verilog,ADLD,2471,0,2023-05-19 13:45:40+00:00,[],None
474,https://github.com/shivamkundan/ALU-and-RegFile.git,2023-05-19 16:00:59+00:00,Simple ALU and register file implementation,0,shivamkundan/ALU-and-RegFile,642905070,Verilog,ALU-and-RegFile,41,0,2023-06-03 06:42:53+00:00,"['cadence-virtuoso', 'verilog']",None
475,https://github.com/marek-kuros/Project_UEC2_copy.git,2023-05-19 14:13:56+00:00,,0,marek-kuros/Project_UEC2_copy,642864619,Verilog,Project_UEC2_copy,5951,0,2023-10-27 08:02:24+00:00,[],None
476,https://github.com/yennergonzalez/Proyecto-Electrico-FPGA.git,2023-05-19 19:32:49+00:00,En este repositorio se incluyen las soluciones para cada una de las guías desarrolladas como parte del Proyecto Eléctrico: Elaboración de material didáctico con FPGAs para el curso Circuitos Digitales I,0,yennergonzalez/Proyecto-Electrico-FPGA,642976215,Verilog,Proyecto-Electrico-FPGA,8,0,2023-05-19 19:43:38+00:00,[],None
477,https://github.com/clp510/chipyard_simple.git,2023-05-20 09:28:29+00:00,,0,clp510/chipyard_simple,643158969,Verilog,chipyard_simple,8588,0,2023-05-20 09:43:28+00:00,[],None
478,https://github.com/AhmedHany1212/ML-hardware-acceleration-network-SqueezNext.git,2023-05-20 03:45:47+00:00,,0,AhmedHany1212/ML-hardware-acceleration-network-SqueezNext,643081063,Verilog,ML-hardware-acceleration-network-SqueezNext,4456,0,2023-05-20 03:52:39+00:00,[],None
479,https://github.com/SykpeWookal/PMSI.git,2023-06-04 13:47:25+00:00,,0,SykpeWookal/PMSI,649321884,Verilog,PMSI,203141,0,2023-06-04 14:03:09+00:00,[],None
480,https://github.com/malikshanaah1999/m_caravel.git,2023-05-28 14:16:36+00:00,,0,malikshanaah1999/m_caravel,646474547,Verilog,m_caravel,41722,0,2023-05-28 14:17:13+00:00,[],https://api.github.com/licenses/apache-2.0
481,https://github.com/cheshtapathak/Vedic-Multiplier.git,2023-05-27 13:10:53+00:00,,0,cheshtapathak/Vedic-Multiplier,646154350,Verilog,Vedic-Multiplier,1,0,2023-05-27 13:11:19+00:00,[],None
482,https://github.com/AkabJack/SemaforVerilog.git,2023-06-03 14:03:15+00:00,"Semafor scris in verilog, surprinzator ca este functional.",0,AkabJack/SemaforVerilog,649014952,Verilog,SemaforVerilog,3,0,2023-06-03 14:07:20+00:00,[],None
483,https://github.com/mieeleaf/-string-.git,2023-05-20 14:41:31+00:00,,0,mieeleaf/-string-,643241446,Verilog,-string-,4,0,2023-05-20 15:22:51+00:00,[],None
484,https://github.com/Mariam-Taher409/Counter-to-be-implemented-on-FPGA.git,2023-05-22 18:36:45+00:00,,0,Mariam-Taher409/Counter-to-be-implemented-on-FPGA,644066327,Verilog,Counter-to-be-implemented-on-FPGA,1,0,2023-05-22 18:37:17+00:00,[],None
485,https://github.com/UmarShaikh27/Flappy-Bird.git,2023-05-17 06:01:21+00:00,,0,UmarShaikh27/Flappy-Bird,641765882,Verilog,Flappy-Bird,28,0,2023-05-17 06:12:25+00:00,[],None
486,https://github.com/vageeshmaiya/verilog.git,2023-05-17 04:03:38+00:00,,0,vageeshmaiya/verilog,641734045,Verilog,verilog,158,0,2023-05-17 05:52:34+00:00,[],None
487,https://github.com/Harsha-Jangamani/ADLD.git,2023-05-18 10:50:52+00:00,,0,Harsha-Jangamani/ADLD,642338281,Verilog,ADLD,604,0,2023-05-21 06:08:29+00:00,[],None
488,https://github.com/SimpleKidd/ping-pong.git,2023-05-23 15:14:53+00:00,ping pong game using verilog,0,SimpleKidd/ping-pong,644466039,Verilog,ping-pong,4,0,2023-05-23 15:16:32+00:00,"['verilog', 'xilinx-vivado']",None
489,https://github.com/RIT-CHAOS-SEC/DiCA.git,2023-05-23 00:37:27+00:00,DiCA: A Hardware-Software Co-Design for Differential Check-Pointing in Intermittently Powered Devices,0,RIT-CHAOS-SEC/DiCA,644163061,Verilog,DiCA,5383,0,2023-08-24 21:16:45+00:00,[],None
490,https://github.com/mohamed-mohamed-tarek/DES-System-main.git,2023-05-25 09:36:55+00:00,,0,mohamed-mohamed-tarek/DES-System-main,645271594,Verilog,DES-System-main,16,0,2023-05-25 09:38:47+00:00,[],None
491,https://github.com/Gagasii/EEE4120_Project.git,2023-05-27 00:19:08+00:00,FPGA Implementation of Median and Sobel filter,0,Gagasii/EEE4120_Project,645990378,Verilog,EEE4120_Project,22,0,2023-05-27 01:15:02+00:00,[],None
492,https://github.com/NgoQuangHai19/Lab-LSI_Logic_Design.git,2023-05-27 03:29:48+00:00,,0,NgoQuangHai19/Lab-LSI_Logic_Design,646021375,Verilog,Lab-LSI_Logic_Design,3188,0,2023-05-27 12:39:33+00:00,[],None
493,https://github.com/TheYash27/clock_with_alarm.git,2023-05-26 05:50:43+00:00,,0,TheYash27/clock_with_alarm,645644483,Verilog,clock_with_alarm,5,0,2023-05-26 05:51:32+00:00,[],None
494,https://github.com/vilakshan2996/8-bit-single-cycle-processor.git,2023-05-26 05:35:18+00:00,,0,vilakshan2996/8-bit-single-cycle-processor,645640413,Verilog,8-bit-single-cycle-processor,2749,0,2023-05-26 05:41:29+00:00,[],None
495,https://github.com/PRAGATI-0102/Full-Subtractor-Day-045-.git,2023-05-25 17:10:42+00:00,"The Full Subtractor is a digital circuit that performs subtraction of three binary bits: the minuend (A), the subtrahend (B), and a borrow-in (Bin).",0,PRAGATI-0102/Full-Subtractor-Day-045-,645446859,Verilog,Full-Subtractor-Day-045-,81,0,2023-05-25 17:13:56+00:00,[],None
496,https://github.com/Xantherwin/FIR-Filter-Design-using-Distributed-Arithmetic.git,2023-05-25 17:07:10+00:00,"FIR filter is a filter response to any finite length input in a finite duration, because it settles to zero in finite time. Generally FIR filter consists of Multipliers, Adders, Delay elements. The previous work done mainly focuses on the design using the same devices.",1,Xantherwin/FIR-Filter-Design-using-Distributed-Arithmetic,645445606,Verilog,FIR-Filter-Design-using-Distributed-Arithmetic,2187,0,2023-06-08 13:25:23+00:00,[],None
497,https://github.com/swarup3457/100-days-of-RTL-coding-.git,2023-05-25 15:54:43+00:00,,0,swarup3457/100-days-of-RTL-coding-,645419485,Verilog,100-days-of-RTL-coding-,1714,0,2023-05-25 16:46:05+00:00,[],None
498,https://github.com/xyyangkun/risc_v_cpu.git,2023-05-21 18:51:39+00:00,,0,xyyangkun/risc_v_cpu,643625607,Verilog,risc_v_cpu,201,0,2023-05-21 18:54:53+00:00,[],None
499,https://github.com/PRAGATI-0102/Square-Generator-Day-043-.git,2023-05-22 17:07:08+00:00,The n-bit square generator is a digital circuit that takes an n-bit input number and produces its square as the output.,0,PRAGATI-0102/Square-Generator-Day-043-,644033447,Verilog,Square-Generator-Day-043-,42,0,2023-05-22 17:09:40+00:00,[],None
500,https://github.com/abdelrhmankadry/MIPS32.git,2023-05-25 23:13:54+00:00,This repository contains the implementation of a MIPS32 processor using Verilog HDL.,0,abdelrhmankadry/MIPS32,645551745,Verilog,MIPS32,5,0,2023-05-26 01:52:16+00:00,[],None
501,https://github.com/ccryan/Template_MiSTer.git,2023-05-17 21:16:32+00:00,,0,ccryan/Template_MiSTer,642113670,Verilog,Template_MiSTer,106,0,2023-05-17 21:16:40+00:00,[],https://api.github.com/licenses/gpl-2.0
502,https://github.com/tanish1729/4-Bit-Multiplier.git,2023-05-17 09:20:14+00:00,"Course Project for VLSI Design at IIIT Hyderabad (2nd Year, 1st Semester)",0,tanish1729/4-Bit-Multiplier,641840697,Verilog,4-Bit-Multiplier,6721,0,2023-05-17 09:22:12+00:00,[],None
503,https://github.com/lukhanyoVena808/fpga.git,2023-05-17 16:14:30+00:00,Paralle Number Genarator  using FPGA,0,lukhanyoVena808/fpga,642010880,Verilog,fpga,167,0,2023-05-22 08:45:37+00:00,[],None
504,https://github.com/Darshanskatagihallimath/ADLD_01fe20bec087.git,2023-05-18 18:04:28+00:00,,0,Darshanskatagihallimath/ADLD_01fe20bec087,642503320,Verilog,ADLD_01fe20bec087,821,0,2023-05-18 18:26:27+00:00,[],None
505,https://github.com/Manoj8877/ADLD.git,2023-05-18 13:40:48+00:00,,0,Manoj8877/ADLD,642402628,Verilog,ADLD,1194,0,2023-05-18 13:53:25+00:00,[],None
506,https://github.com/Youssefhassan1717/Single-Cycle-MIPS.git,2023-05-31 20:43:30+00:00,Implements a Single Cycle MIPS using VeriLog Language,0,Youssefhassan1717/Single-Cycle-MIPS,647929485,Verilog,Single-Cycle-MIPS,7,0,2023-05-31 20:49:18+00:00,[],None
507,https://github.com/amirbakhtiary23/Calc3_Verification.git,2023-05-27 13:47:21+00:00,Verification environment of Calc3 using systemVerilog,0,amirbakhtiary23/Calc3_Verification,646164233,Verilog,Calc3_Verification,90,0,2023-05-27 13:48:16+00:00,[],https://api.github.com/licenses/gpl-3.0
508,https://github.com/yanvithat/IRIS_LABS.git,2023-05-28 18:03:00+00:00,,0,yanvithat/IRIS_LABS,646538051,Verilog,IRIS_LABS,13,0,2023-06-03 18:56:18+00:00,[],None
509,https://github.com/OzanAkgon/ParkSistemi.git,2023-05-29 06:32:25+00:00,,0,OzanAkgon/ParkSistemi,646702314,Verilog,ParkSistemi,3881,0,2023-05-29 06:38:00+00:00,[],None
510,https://github.com/Eyantra698Sumanto/caravel_dvsdfossbfc.git,2023-06-02 02:01:26+00:00,,0,Eyantra698Sumanto/caravel_dvsdfossbfc,648447470,Verilog,caravel_dvsdfossbfc,81100,0,2023-06-02 02:02:01+00:00,[],https://api.github.com/licenses/apache-2.0
511,https://github.com/sandeshrc9245/01fe20bec330_ADLD.git,2023-05-18 18:37:22+00:00,,0,sandeshrc9245/01fe20bec330_ADLD,642514375,Verilog,01fe20bec330_ADLD,2098,0,2023-05-18 18:41:41+00:00,[],None
512,https://github.com/maddiewaldie/COEN-122.git,2023-05-30 22:26:24+00:00,"Here, you can find all my projects for my COEN 122: Computer Architecture Lab",0,maddiewaldie/COEN-122,647487830,Verilog,COEN-122,826,0,2024-02-22 21:29:01+00:00,[],None
513,https://github.com/Mariam-Taher409/MCU-Project.git,2023-05-22 18:10:43+00:00,,0,Mariam-Taher409/MCU-Project,644056894,Verilog,MCU-Project,7,0,2023-05-22 18:17:47+00:00,[],None
514,https://github.com/PoChuan994/Atrous_Convolution_Circuit.git,2023-05-23 02:29:34+00:00,,0,PoChuan994/Atrous_Convolution_Circuit,644190836,Verilog,Atrous_Convolution_Circuit,3250,0,2023-05-23 02:30:55+00:00,[],None
515,https://github.com/GukGuk25/Verilog.git,2023-06-03 07:40:45+00:00,All of My Past Verilog Project,0,GukGuk25/Verilog,648918462,Verilog,Verilog,1609,0,2024-03-22 05:24:31+00:00,[],None
516,https://github.com/Bakkesh123/ADLD.git,2023-05-18 16:57:49+00:00,,0,Bakkesh123/ADLD,642479930,Verilog,ADLD,8721,0,2023-05-18 18:02:36+00:00,[],None
517,https://github.com/SpencerGSherman/4-bit-CPU-MIPS.git,2023-05-20 02:13:46+00:00,Creating a 4-bit nip CPU in Verilog,0,SpencerGSherman/4-bit-CPU-MIPS,643063603,Verilog,4-bit-CPU-MIPS,3,0,2023-05-20 02:17:02+00:00,[],None
518,https://github.com/almas304/ADLD.git,2023-05-18 16:52:05+00:00,,0,almas304/ADLD,642477975,Verilog,ADLD,23,0,2023-05-18 16:53:13+00:00,[],None
519,https://github.com/lisihang1401443109/coen122_proj.git,2023-05-17 16:45:10+00:00,,0,lisihang1401443109/coen122_proj,642022841,Verilog,coen122_proj,175,0,2023-06-01 22:43:48+00:00,[],None
520,https://github.com/kryInit/processor-design-contest.git,2023-05-17 10:00:41+00:00,,0,kryInit/processor-design-contest,641856830,Verilog,processor-design-contest,1378,0,2023-09-24 00:16:22+00:00,[],None
521,https://github.com/hong2589/computer-organization-DMA.git,2023-05-22 12:26:06+00:00,,0,hong2589/computer-organization-DMA,643916396,Verilog,computer-organization-DMA,47,0,2023-06-19 06:48:42+00:00,[],None
522,https://github.com/memrey/Design.git,2023-05-22 06:10:03+00:00,Notes about FPGA/ASIC Design Concepts,0,memrey/Design,643773769,Verilog,Design,301,0,2023-05-22 06:13:08+00:00,[],None
523,https://github.com/ChangLiu2022/SecondYearFinal_Team26.git,2023-05-19 12:52:50+00:00,,0,ChangLiu2022/SecondYearFinal_Team26,642832069,Verilog,SecondYearFinal_Team26,61136,0,2023-06-25 11:44:01+00:00,[],None
524,https://github.com/HarshaHiregoudar/ADLD.git,2023-05-19 14:52:14+00:00,,0,HarshaHiregoudar/ADLD,642880026,Verilog,ADLD,4846,0,2023-05-19 14:52:50+00:00,[],None
525,https://github.com/pmnzl/FPGACalculator.git,2023-05-24 02:18:06+00:00,A calculator made from various basic Verilog modules.,0,pmnzl/FPGACalculator,644666664,Verilog,FPGACalculator,5,0,2023-05-24 03:28:15+00:00,[],None
526,https://github.com/JainPromudShreyansh/100_days_RTL.git,2023-05-24 01:31:48+00:00,,0,JainPromudShreyansh/100_days_RTL,644654819,Verilog,100_days_RTL,910,0,2023-05-24 02:16:05+00:00,[],None
527,https://github.com/AlgaPeng/Sobel_Edge_Detection_FPGA.git,2023-05-18 05:29:06+00:00,Sobel_Edge_Detection on FPGA for ECE5760,0,AlgaPeng/Sobel_Edge_Detection_FPGA,642229859,Verilog,Sobel_Edge_Detection_FPGA,13,0,2023-05-18 05:36:01+00:00,[],None
528,https://github.com/tmandic/caravela.git,2023-05-18 14:21:21+00:00,,0,tmandic/caravela,642419548,Verilog,caravela,41725,0,2023-05-18 14:22:04+00:00,[],https://api.github.com/licenses/apache-2.0
529,https://github.com/abdallahgs/dd2proj2env.git,2023-05-18 01:24:41+00:00,,0,abdallahgs/dd2proj2env,642169844,Verilog,dd2proj2env,41726,0,2023-05-18 01:25:58+00:00,[],https://api.github.com/licenses/apache-2.0
530,https://github.com/NourhanSabry/AccDnn_1.git,2023-05-18 12:29:07+00:00,,0,NourhanSabry/AccDnn_1,642373892,Verilog,AccDnn_1,1151,0,2023-05-18 13:09:33+00:00,[],None
531,https://github.com/AnushaNagesh97/8-bit-RISC-Microprocessor.git,2023-05-21 01:00:54+00:00,,0,AnushaNagesh97/8-bit-RISC-Microprocessor,643379099,Verilog,8-bit-RISC-Microprocessor,363,0,2023-05-21 01:08:08+00:00,[],None
532,https://github.com/abdelmaksou/user_project_tic_tac_toe.git,2023-05-21 04:04:28+00:00,,0,abdelmaksou/user_project_tic_tac_toe,643407744,Verilog,user_project_tic_tac_toe,41726,0,2023-05-21 04:05:04+00:00,[],https://api.github.com/licenses/apache-2.0
533,https://github.com/MahdeSouqi/4bit_adder_efabless.git,2023-05-28 10:10:20+00:00,,0,MahdeSouqi/4bit_adder_efabless,646410972,Verilog,4bit_adder_efabless,41725,0,2023-05-28 10:10:55+00:00,[],https://api.github.com/licenses/apache-2.0
534,https://github.com/GulnurKorkmaz/Gomulu_Sistemler_Proje.git,2023-05-29 07:41:24+00:00,Proje Ödevi,0,GulnurKorkmaz/Gomulu_Sistemler_Proje,646724286,Verilog,Gomulu_Sistemler_Proje,3303,0,2023-05-29 07:49:52+00:00,[],https://api.github.com/licenses/mit
535,https://github.com/Rajat-Govil/DES-Codes.git,2023-05-24 12:09:06+00:00,All the original DES codes written by me ([1:64] bit format),0,Rajat-Govil/DES-Codes,644860881,Verilog,DES-Codes,12,0,2023-05-24 12:11:58+00:00,[],None
536,https://github.com/yuanjin0928/YuanRiscV.git,2023-05-24 20:06:18+00:00,,0,yuanjin0928/YuanRiscV,645047800,Verilog,YuanRiscV,8,0,2023-05-24 20:11:03+00:00,[],None
537,https://github.com/calint/zen-one.git,2023-05-25 15:28:27+00:00,experimental retro 16 bit cpu written in verilog xilinx vivado intended for fpga cmod s7 from digilent,0,calint/zen-one,645409278,Verilog,zen-one,473,0,2023-10-10 00:03:51+00:00,"['16-bit', 'cmod-s7', 'cpu', 'fpga', 'iverilog', 'verilog', 'vintage', 'vivado']",None
538,https://github.com/KeerthiBhushanM/IRIS-EFabless-Recruitment.git,2023-05-28 09:19:19+00:00,,0,KeerthiBhushanM/IRIS-EFabless-Recruitment,646398976,Verilog,IRIS-EFabless-Recruitment,235,0,2023-06-04 08:13:21+00:00,[],None
539,https://github.com/AhmadMaazz/SingleCycle-RISC-V-Processor-Using-Verilog.git,2023-05-29 22:41:32+00:00,,0,AhmadMaazz/SingleCycle-RISC-V-Processor-Using-Verilog,647025294,Verilog,SingleCycle-RISC-V-Processor-Using-Verilog,52,0,2023-05-29 22:43:02+00:00,[],None
540,https://github.com/juanmicro/icestudio6502.git,2023-05-29 18:06:13+00:00,,0,juanmicro/icestudio6502,646950575,Verilog,icestudio6502,41,0,2023-05-29 18:23:29+00:00,[],None
541,https://github.com/rajitha0119/DAY-02.git,2023-05-29 16:57:41+00:00,FULL ADDER,0,rajitha0119/DAY-02,646927202,Verilog,DAY-02,286,0,2023-05-29 17:00:19+00:00,[],None
542,https://github.com/zhulike6/Stopwatch.git,2023-05-27 05:23:24+00:00,A stopwatch based on Verilog 一款基于Verilog语言的秒表,0,zhulike6/Stopwatch,646042526,Verilog,Stopwatch,26,0,2023-05-27 05:42:02+00:00,[],None
543,https://github.com/nicedayd/walk.git,2023-05-26 14:29:21+00:00,,0,nicedayd/walk,645829627,Verilog,walk,41994,0,2023-05-26 14:29:58+00:00,[],https://api.github.com/licenses/apache-2.0
544,https://github.com/ericking022/CO.git,2023-06-02 13:21:19+00:00,,0,ericking022/CO,648651067,,CO,0,0,2023-06-02 13:21:19+00:00,[],None
545,https://github.com/malikshanaah1999/hi.git,2023-05-27 23:52:33+00:00,,0,malikshanaah1999/hi,646300040,Verilog,hi,41726,0,2023-05-27 23:53:10+00:00,[],https://api.github.com/licenses/apache-2.0
546,https://github.com/Ananya22131/tapeoutANN.git,2023-05-27 17:04:12+00:00,,0,Ananya22131/tapeoutANN,646218245,Verilog,tapeoutANN,41725,0,2023-05-27 17:04:44+00:00,[],https://api.github.com/licenses/apache-2.0
547,https://github.com/ax0080/HDLbits.git,2023-05-26 17:40:12+00:00,My HDLbits Answer,0,ax0080/HDLbits,645896251,Verilog,HDLbits,20,0,2023-10-04 01:57:36+00:00,"['online-judge', 'verilog']",None
548,https://github.com/sjleefg02/microprocessor.git,2023-05-26 17:17:29+00:00,,0,sjleefg02/microprocessor,645888816,Verilog,microprocessor,125,0,2023-05-26 17:25:40+00:00,[],None
549,https://github.com/mehmetMRE/Gomulu_sistemler_proje.git,2023-05-29 15:00:46+00:00,,0,mehmetMRE/Gomulu_sistemler_proje,646885053,Verilog,Gomulu_sistemler_proje,6,0,2023-05-29 15:37:51+00:00,[],None
550,https://github.com/Lucalini/Five-Bit-Magnitude-Comparator.git,2023-06-02 06:34:30+00:00,"This verilog file implements a magnitude comparator by instantiating 2 two's complement modules, 2 multiplexors, a 5 bit comparator and the univ sseg module",0,Lucalini/Five-Bit-Magnitude-Comparator,648512951,Verilog,Five-Bit-Magnitude-Comparator,6,0,2023-06-02 06:36:07+00:00,[],None
551,https://github.com/Lucalini/Half-Adder-HA-Full-Adder-FA-Standard-POS-Form.git,2023-06-02 06:24:21+00:00,Design a half adder and implement your design on the development board. Table 3 shows the input and  output assignment for the devices on the development board. The output of your circuit should show  both standard SOP and POS forms for both the SUM and CO signals.,0,Lucalini/Half-Adder-HA-Full-Adder-FA-Standard-POS-Form,648510035,Verilog,Half-Adder-HA-Full-Adder-FA-Standard-POS-Form,6,0,2023-06-02 06:28:14+00:00,[],None
552,https://github.com/Lucalini/Signed-Binary-5-Bit-Adder-Subtractor-with-Validity-Detection.git,2023-06-02 06:36:48+00:00," In this verilog file I instantiated 2 muxs, a two’s comp module, signed validity checker, 5 bit RCA and the univ sseg module. This allows me to perform the desired operations based on a button input and output my result or invalidity to the 7 segment display.",0,Lucalini/Signed-Binary-5-Bit-Adder-Subtractor-with-Validity-Detection,648513672,Verilog,Signed-Binary-5-Bit-Adder-Subtractor-with-Validity-Detection,7,0,2023-06-02 06:38:11+00:00,[],None
553,https://github.com/hy-chou/1112-computer-architecture.git,2023-05-28 16:43:50+00:00,,0,hy-chou/1112-computer-architecture,646516635,Verilog,1112-computer-architecture,3,0,2023-05-28 16:51:43+00:00,[],None
554,https://github.com/dorsanaji/Meow.git,2023-06-01 06:35:12+00:00,,0,dorsanaji/Meow,648072374,Verilog,Meow,11,0,2023-06-01 14:11:58+00:00,[],https://api.github.com/licenses/mit
555,https://github.com/kooshkya/VerilogPredictor.git,2023-06-01 06:33:03+00:00,,0,kooshkya/VerilogPredictor,648071707,Verilog,VerilogPredictor,4,0,2023-06-01 06:33:09+00:00,[],https://api.github.com/licenses/mit
556,https://github.com/malikshanaah1999/2000.git,2023-05-30 15:42:19+00:00,,0,malikshanaah1999/2000,647354284,Verilog,2000,41725,0,2023-05-30 15:42:56+00:00,[],https://api.github.com/licenses/apache-2.0
557,https://github.com/JayadityaVLSI/reset_sequence.git,2023-05-31 01:14:48+00:00,Generating 3 types of reset sequence,0,JayadityaVLSI/reset_sequence,647524725,Verilog,reset_sequence,0,0,2023-05-31 01:15:31+00:00,[],None
558,https://github.com/adideva98/HDLBits_Solutions.git,2023-06-04 03:24:53+00:00,My solutions to Verilog practice problems on HDLBits.,0,adideva98/HDLBits_Solutions,649179624,Verilog,HDLBits_Solutions,6,0,2023-06-04 03:34:15+00:00,[],None
559,https://github.com/MiaOuyang/ultrasound_waves.git,2023-06-03 08:16:34+00:00,This is an ultrasonic distance measurement project based on the DE2-115 development board and the hc-sr04 sensor,0,MiaOuyang/ultrasound_waves,648926628,Verilog,ultrasound_waves,5861,0,2023-06-03 08:26:53+00:00,[],None
560,https://github.com/aksharpat/risc.cpu.git,2023-06-02 14:34:51+00:00,Verilog CPU ,0,aksharpat/risc.cpu,648679402,Verilog,risc.cpu,95,0,2023-06-02 14:48:08+00:00,[],None
561,https://github.com/atimbol27/TicTacToe-Game.git,2023-06-02 18:36:19+00:00,,0,atimbol27/TicTacToe-Game,648759796,Verilog,TicTacToe-Game,7972,0,2023-06-02 18:40:49+00:00,[],None
562,https://github.com/nguyenhavi/Single-Precision-Floating-Point-Adder.git,2023-06-02 10:21:53+00:00,,0,nguyenhavi/Single-Precision-Floating-Point-Adder,648589367,Verilog,Single-Precision-Floating-Point-Adder,4,0,2023-06-02 10:22:53+00:00,[],None
563,https://github.com/PiyumaliSandunika/Simple-Processor.git,2023-05-27 15:46:24+00:00,"This is a simple 8-bit single-cycle processor  which  includes  an ALU, a register file and control logic, using Verilog HDL. This was designed as a part of CO224 Computer Architecture course. ",0,PiyumaliSandunika/Simple-Processor,646197388,Verilog,Simple-Processor,2335,0,2023-05-27 15:59:00+00:00,[],None
564,https://github.com/Liuzihan1226/axi.git,2023-05-26 09:17:44+00:00,,0,Liuzihan1226/axi,645715239,Verilog,axi,149,0,2023-05-26 09:26:52+00:00,[],None
565,https://github.com/codsalah/Mano-Basic-Computer-Using-Verilog.git,2023-05-21 23:15:28+00:00,"A Mano Basic Computer is a simple computer architecture designed by M. Morris Mano.  a hardware implementation of the various components in the computer architecture, such as the instruction register, arithmetic logic unit, memory unit and control unit",0,codsalah/Mano-Basic-Computer-Using-Verilog,643681101,Verilog,Mano-Basic-Computer-Using-Verilog,3941,0,2023-05-21 23:32:08+00:00,[],None
566,https://github.com/JubSteven/ICE2603-Final-Project.git,2023-05-21 13:13:44+00:00,Contains the code and report of the final project for the course ICE2603 in SJTU,0,JubSteven/ICE2603-Final-Project,643531261,Verilog,ICE2603-Final-Project,1936,0,2023-11-29 07:08:31+00:00,[],None
567,https://github.com/sasi-kiran123/classical_multiplier.git,2023-05-26 16:48:49+00:00,,0,sasi-kiran123/classical_multiplier,645879043,Verilog,classical_multiplier,10,0,2023-06-28 06:28:24+00:00,[],https://api.github.com/licenses/mit
568,https://github.com/omarshaban02/Digital-Task_Round-robin_Arbiter.git,2023-05-26 18:00:40+00:00,,0,omarshaban02/Digital-Task_Round-robin_Arbiter,645902540,Verilog,Digital-Task_Round-robin_Arbiter,0,0,2023-05-26 18:01:39+00:00,[],None
569,https://github.com/zyz-2299mod10/Computer-Organization.git,2023-05-27 07:18:36+00:00,,0,zyz-2299mod10/Computer-Organization,646068141,Verilog,Computer-Organization,9231,0,2023-05-27 07:22:37+00:00,[],None
570,https://github.com/SU10ERych/Memory_RAM_ROM_STACK.git,2023-05-28 06:06:19+00:00,,0,SU10ERych/Memory_RAM_ROM_STACK,646358063,Verilog,Memory_RAM_ROM_STACK,36,0,2023-05-28 06:11:30+00:00,[],None
571,https://github.com/berezovik77/traffic_light.git,2023-05-28 05:32:17+00:00, FSM of traffic light,0,berezovik77/traffic_light,646351817,Verilog,traffic_light,92,0,2023-05-29 05:21:05+00:00,[],None
572,https://github.com/VanshikaTanwar/caravel_mag_comp.git,2023-05-17 07:09:47+00:00,,0,VanshikaTanwar/caravel_mag_comp,641789717,Verilog,caravel_mag_comp,41726,0,2023-05-17 07:10:29+00:00,[],https://api.github.com/licenses/apache-2.0
573,https://github.com/haniomar2000/Traffic_Light_Contrroller.git,2023-05-30 06:35:06+00:00,,0,haniomar2000/Traffic_Light_Contrroller,647141031,Verilog,Traffic_Light_Contrroller,3345,0,2023-05-30 06:49:56+00:00,[],None
574,https://github.com/DudesVult/Calavan.git,2023-05-30 12:20:14+00:00,Calavan,0,DudesVult/Calavan,647268363,Verilog,Calavan,41725,0,2023-05-30 12:25:05+00:00,[],https://api.github.com/licenses/apache-2.0
575,https://github.com/krissjarvis/ADLD.git,2023-05-18 17:30:10+00:00,,0,krissjarvis/ADLD,642491122,Verilog,ADLD,1255,0,2023-05-18 17:51:27+00:00,[],None
576,https://github.com/Sheela-Kapase/ADLD.git,2023-05-18 10:18:33+00:00,,0,Sheela-Kapase/ADLD,642327166,Verilog,ADLD,1873,0,2023-05-18 17:12:16+00:00,[],None
577,https://github.com/Mehul-Kumar-Sahoo/16-Bit-CPU.git,2023-05-19 06:33:26+00:00,,0,Mehul-Kumar-Sahoo/16-Bit-CPU,642695881,Verilog,16-Bit-CPU,3832,0,2023-07-25 01:38:54+00:00,[],None
578,https://github.com/aiunderstand/tt03p5-4-trit-balanced-ternary-counter-bt_signb_bt-radix-convertor.git,2023-05-27 23:04:34+00:00,A 4-trit balanced ternary counter and 3-trit BT to signed binary to BT radix convertor for TinyTapeout 3.5 made with MRCS,0,aiunderstand/tt03p5-4-trit-balanced-ternary-counter-bt_signb_bt-radix-convertor,646293134,Verilog,tt03p5-4-trit-balanced-ternary-counter-bt_signb_bt-radix-convertor,12402,0,2023-05-28 01:34:10+00:00,[],https://api.github.com/licenses/apache-2.0
579,https://github.com/zybzzz/hdlbits-answer.git,2023-05-29 08:46:57+00:00,这是我的HDLBits答案,0,zybzzz/hdlbits-answer,646746457,Verilog,hdlbits-answer,31,0,2023-05-29 10:14:50+00:00,[],https://api.github.com/licenses/mit
580,https://github.com/T-Maharshi-Sanand-Yadav/counter_designing_verilog.git,2023-05-29 17:24:23+00:00,,0,T-Maharshi-Sanand-Yadav/counter_designing_verilog,646936394,Verilog,counter_designing_verilog,4,0,2023-05-29 17:25:07+00:00,[],None
581,https://github.com/benson1210/final.git,2023-05-31 04:28:55+00:00,final project for logic design lab,0,benson1210/final,647573822,Verilog,final,350,0,2023-05-31 07:42:26+00:00,[],None
582,https://github.com/JayadityaVLSI/counter_up_dwn.git,2023-05-31 01:08:55+00:00,Up down counter,0,JayadityaVLSI/counter_up_dwn,647523442,Verilog,counter_up_dwn,3,0,2023-05-31 01:09:54+00:00,[],None
583,https://github.com/Young-TW/verilog.git,2023-05-27 01:39:54+00:00,,0,Young-TW/verilog,646002943,Verilog,verilog,219,0,2023-05-27 03:19:42+00:00,[],None
584,https://github.com/Seattlice/HC595---Driving-digital-tubes-on-FPGAs-using-verilog.git,2023-05-31 15:12:42+00:00,"Here is my big assignment for the digital circuit logic lab course, using the fpga to drive the hc595 chip and control the reality of the digital tube, I implemented a six-digit digital tube display from 000000 to 999999",0,Seattlice/HC595---Driving-digital-tubes-on-FPGAs-using-verilog,647812838,Verilog,HC595---Driving-digital-tubes-on-FPGAs-using-verilog,2,0,2023-05-31 15:13:33+00:00,[],None
585,https://github.com/abhi-pixel1/number-of-ones-in-binary-iverilog.git,2023-05-31 14:38:57+00:00,,0,abhi-pixel1/number-of-ones-in-binary-iverilog,647797497,Verilog,number-of-ones-in-binary-iverilog,2,0,2023-05-31 14:40:00+00:00,[],None
586,https://github.com/psychogenic/tt03p5-s4ga.git,2023-05-31 13:48:36+00:00,,0,psychogenic/tt03p5-s4ga,647775103,Verilog,tt03p5-s4ga,74,0,2023-06-01 21:55:35+00:00,[],https://api.github.com/licenses/apache-2.0
587,https://github.com/Penta0308/BikeRadar.git,2023-05-31 14:05:53+00:00,,0,Penta0308/BikeRadar,647782576,Verilog,BikeRadar,277904,0,2023-07-20 15:35:30+00:00,[],None
588,https://github.com/Morning1139Angel/Predictor.git,2023-06-01 06:27:00+00:00,,0,Morning1139Angel/Predictor,648069823,Verilog,Predictor,13,0,2023-06-01 06:27:07+00:00,[],https://api.github.com/licenses/mit
589,https://github.com/mahyazz/Test123.git,2023-06-01 06:35:20+00:00,,0,mahyazz/Test123,648072418,Verilog,Test123,8,0,2023-06-01 14:01:19+00:00,[],https://api.github.com/licenses/mit
590,https://github.com/Moeen89/cloned.git,2023-06-01 06:34:02+00:00,,0,Moeen89/cloned,648072010,Verilog,cloned,6,0,2023-06-01 06:34:08+00:00,[],https://api.github.com/licenses/mit
591,https://github.com/25Aditya25/HDL-Bits-Solutions.git,2023-06-01 06:31:12+00:00,Solutions to Problems present on HDL Bits Website,0,25Aditya25/HDL-Bits-Solutions,648071157,Verilog,HDL-Bits-Solutions,11,0,2023-06-01 06:42:45+00:00,[],None
592,https://github.com/Arash1381-y/verilog.git,2023-06-01 06:22:26+00:00,,0,Arash1381-y/verilog,648068353,Verilog,verilog,2,0,2023-06-01 06:22:33+00:00,[],https://api.github.com/licenses/mit
593,https://github.com/Soham-coder/TPU_16X16_32_cycles.git,2023-05-20 16:50:46+00:00,,0,Soham-coder/TPU_16X16_32_cycles,643278706,Verilog,TPU_16X16_32_cycles,226,0,2023-05-27 15:16:31+00:00,[],None
594,https://github.com/JIAMAOXU/ECE411_MPs.git,2023-05-20 18:57:40+00:00,,0,JIAMAOXU/ECE411_MPs,643311626,Verilog,ECE411_MPs,15871,0,2023-08-05 07:15:18+00:00,[],None
595,https://github.com/Alifathysalama/FIFO-.git,2023-05-23 20:26:41+00:00,"The FIFO Verilog project involves designing and simulating a basic First-In-First-Out buffer module in Verilog, enabling efficient data transfer between modules.",0,Alifathysalama/FIFO-,644581182,Verilog,FIFO-,5,0,2023-05-23 20:27:35+00:00,[],None
596,https://github.com/patrick-5546/hdlbits.git,2023-05-23 20:19:16+00:00,"My solutions to HDLBits, formatted using Verible",0,patrick-5546/hdlbits,644578827,Verilog,hdlbits,16,0,2023-05-24 01:00:26+00:00,[],None
597,https://github.com/Shaoting-Wang/Geofence.git,2023-05-24 11:54:17+00:00,,0,Shaoting-Wang/Geofence,644855059,Verilog,Geofence,3,0,2023-05-24 12:06:25+00:00,[],None
598,https://github.com/emirhantopcuoglu/Alarm_Clock.git,2023-05-22 15:50:14+00:00,Gömülü Sistemler dersi projesi,0,emirhantopcuoglu/Alarm_Clock,644004432,Verilog,Alarm_Clock,2,0,2023-05-22 15:51:50+00:00,[],None
599,https://github.com/HeshanChen/CPU.git,2023-05-23 10:58:27+00:00,,0,HeshanChen/CPU,644358324,Verilog,CPU,540,0,2023-05-23 11:04:18+00:00,[],None
600,https://github.com/mohamd-khaled/SBqM.git,2023-05-24 20:59:49+00:00,,0,mohamd-khaled/SBqM,645063545,Verilog,SBqM,1,0,2023-05-24 21:00:50+00:00,[],None
601,https://github.com/Kyeong-Jun/Verilog_RTL.git,2023-05-25 02:47:58+00:00,semicon_academy,0,Kyeong-Jun/Verilog_RTL,645143962,Verilog,Verilog_RTL,10,0,2023-06-02 06:07:37+00:00,[],None
602,https://github.com/ShamodGeevinda/Freelance-project01-cpu.git,2023-05-25 18:41:29+00:00,,0,ShamodGeevinda/Freelance-project01-cpu,645478402,Verilog,Freelance-project01-cpu,126,0,2023-06-13 06:09:29+00:00,[],None
603,https://github.com/Sridharkarthik12/Round-robin-arbiter-using-Verilog-HDL.git,2023-05-26 12:17:29+00:00,This project involves the design of a round robin arbiter system for 4 masters trying to access a common resource.,0,Sridharkarthik12/Round-robin-arbiter-using-Verilog-HDL,645779592,Verilog,Round-robin-arbiter-using-Verilog-HDL,6,0,2023-06-28 09:38:18+00:00,[],None
604,https://github.com/abdallahgs/caravel_user_project_ase.git,2023-05-26 13:44:05+00:00,,0,abdallahgs/caravel_user_project_ase,645811832,Verilog,caravel_user_project_ase,41726,0,2023-05-26 13:44:36+00:00,[],https://api.github.com/licenses/apache-2.0
605,https://github.com/AhmedNasserEnna/First-Version-of-BBqM-Computer-Architecture-.git,2023-05-25 20:47:56+00:00,Hardware Project using FPGA for Bank queue system (1st Version) in Verilog,0,AhmedNasserEnna/First-Version-of-BBqM-Computer-Architecture-,645517045,Verilog,First-Version-of-BBqM-Computer-Architecture-,9863,0,2023-05-25 21:58:18+00:00,[],None
606,https://github.com/rivercut404/ARM_microarchitectures_design101.git,2023-05-26 05:13:41+00:00,"Design 3 different microarchitectures: Single-Cycle Processor, Multicycle Processor, Pipelined Processor",0,rivercut404/ARM_microarchitectures_design101,645634882,Verilog,ARM_microarchitectures_design101,30,0,2023-05-26 06:12:12+00:00,[],None
607,https://github.com/JeyKeyWrma/Y86-Processor.git,2023-06-02 16:14:50+00:00,Implementing Sequential and Pipelined version of the Y-86 processor,0,JeyKeyWrma/Y86-Processor,648715305,Verilog,Y86-Processor,1016,0,2023-06-02 16:18:56+00:00,[],None
608,https://github.com/nittvlsi/-verilog-12-20-files.git,2023-06-03 11:40:49+00:00,,0,nittvlsi/-verilog-12-20-files,648976142,Verilog,-verilog-12-20-files,12,0,2023-06-03 11:44:10+00:00,[],None
609,https://github.com/sumeetkvd/PINE.git,2023-06-03 14:26:51+00:00,,0,sumeetkvd/PINE,649022013,Verilog,PINE,16,0,2023-06-03 15:13:28+00:00,[],None
610,https://github.com/TristanV1/TristanV1-FPGA-RISCV32I-Processor.git,2023-06-04 12:15:12+00:00,,0,TristanV1/TristanV1-FPGA-RISCV32I-Processor,649296059,Verilog,TristanV1-FPGA-RISCV32I-Processor,5,0,2023-06-04 12:21:51+00:00,[],None
611,https://github.com/muratbayindir/ee446_project.git,2023-06-04 12:22:13+00:00,,0,muratbayindir/ee446_project,649297856,Verilog,ee446_project,12578,0,2023-06-04 12:23:01+00:00,[],None
612,https://github.com/ScribblerCoder/ComputerArch2_proj.git,2023-05-27 21:34:02+00:00,,0,ScribblerCoder/ComputerArch2_proj,646278821,Verilog,ComputerArch2_proj,1170,0,2023-05-27 21:39:51+00:00,[],None
613,https://github.com/tallenintegsys/parameterizedGlitchGenerator.git,2023-05-28 14:27:33+00:00,This will generate precision one-shot glitch pulses but requires resynthesis to change the timings.,0,tallenintegsys/parameterizedGlitchGenerator,646477774,Verilog,parameterizedGlitchGenerator,10,0,2023-05-28 14:29:37+00:00,[],None
614,https://github.com/shalan/ip_test.git,2023-06-04 18:57:34+00:00,,0,shalan/ip_test,649411683,Verilog,ip_test,41725,0,2023-06-04 18:58:07+00:00,[],https://api.github.com/licenses/apache-2.0
615,https://github.com/Baskar-46/ethernet_uvm.git,2023-05-18 13:54:56+00:00,,0,Baskar-46/ethernet_uvm,642408826,Verilog,ethernet_uvm,69,0,2023-05-18 14:05:40+00:00,[],None
616,https://github.com/MadurHiremath/013-ADLD.git,2023-05-18 17:09:41+00:00,,0,MadurHiremath/013-ADLD,642484080,Verilog,013-ADLD,2249,0,2023-05-18 18:15:56+00:00,[],None
617,https://github.com/kylem343/LearningExperienceE3.git,2023-05-17 21:20:37+00:00,Learning Experience for the Computer Systems Class at Virginia Tech,0,kylem343/LearningExperienceE3,642114741,Verilog,LearningExperienceE3,9,0,2023-05-17 21:22:36+00:00,[],None
618,https://github.com/EBB-Imperial/EBB-FPGA.git,2023-05-22 13:44:34+00:00,FPGA hardware design files and Nios II firmware for video capture and balancing,0,EBB-Imperial/EBB-FPGA,643949371,Verilog,EBB-FPGA,7008,0,2023-05-25 13:59:16+00:00,[],None
619,https://github.com/MohamedKhaledMohamedAli/Simple-Microprocessor.git,2023-05-17 10:04:18+00:00,,0,MohamedKhaledMohamedAli/Simple-Microprocessor,641858193,Verilog,Simple-Microprocessor,2,0,2023-05-17 10:09:29+00:00,[],None
620,https://github.com/OmarMiniesy/user_proj_mul32.git,2023-05-20 06:02:00+00:00,,0,OmarMiniesy/user_proj_mul32,643108601,Verilog,user_proj_mul32,41721,0,2023-05-20 06:02:37+00:00,[],https://api.github.com/licenses/apache-2.0
621,https://github.com/fmasar/nvdla_zcu104.git,2023-06-01 11:46:25+00:00,,1,fmasar/nvdla_zcu104,648182941,Verilog,nvdla_zcu104,2442,0,2023-06-07 08:55:05+00:00,[],None
622,https://github.com/unolabo/efx-trinita-demo-spo2.git,2023-05-17 01:27:47+00:00,,0,unolabo/efx-trinita-demo-spo2,641695144,Verilog,efx-trinita-demo-spo2,30921,0,2024-03-13 14:10:38+00:00,[],
623,https://github.com/Bharathreddy02/apb_protocol.git,2023-06-04 17:55:39+00:00,,1,Bharathreddy02/apb_protocol,649395005,Verilog,apb_protocol,124,0,2023-07-16 13:42:02+00:00,[],None
624,https://github.com/developedby/sods-lp-contest.git,2023-05-31 07:10:05+00:00,,0,developedby/sods-lp-contest,647621001,Verilog,sods-lp-contest,76079,0,2023-05-31 07:12:52+00:00,[],None
625,https://github.com/RickyLiao5083/CVSD_Final_Project.git,2023-05-26 17:10:11+00:00,,0,RickyLiao5083/CVSD_Final_Project,645886301,Verilog,CVSD_Final_Project,54140,0,2023-07-04 15:01:54+00:00,[],None
626,https://github.com/nada-mohamed-abdelhamid/Arithmetic-and-Logical-Unit-Design-Project.git,2023-05-24 15:42:02+00:00,,0,nada-mohamed-abdelhamid/Arithmetic-and-Logical-Unit-Design-Project,644953560,Verilog,Arithmetic-and-Logical-Unit-Design-Project,8,0,2023-05-24 16:10:43+00:00,[],None
627,https://github.com/damanidevansh/ECE385-Digital-Systems-Laboratory.git,2023-05-25 06:19:36+00:00,,0,damanidevansh/ECE385-Digital-Systems-Laboratory,645199010,Verilog,ECE385-Digital-Systems-Laboratory,47511,0,2023-05-25 06:21:16+00:00,[],None
628,https://github.com/fyazici/max1k-barebone-eth.git,2023-05-26 20:39:32+00:00,,0,fyazici/max1k-barebone-eth,645947731,Verilog,max1k-barebone-eth,431,0,2023-05-26 21:30:21+00:00,[],None
629,https://github.com/harish2238/32bit-Low_Power_Multipler_Accumulate_Unit.git,2023-05-24 09:16:34+00:00,,0,harish2238/32bit-Low_Power_Multipler_Accumulate_Unit,644794716,Verilog,32bit-Low_Power_Multipler_Accumulate_Unit,403,0,2023-05-24 09:20:54+00:00,[],None
630,https://github.com/caoziying/MIPS.git,2023-05-24 13:10:23+00:00,,0,caoziying/MIPS,644886572,Verilog,MIPS,26,0,2023-05-24 13:19:47+00:00,[],https://api.github.com/licenses/mit
631,https://github.com/nicedayd/caravel_user_projecttest.git,2023-05-28 15:01:34+00:00,,0,nicedayd/caravel_user_projecttest,646487792,Verilog,caravel_user_projecttest,41726,0,2023-05-28 15:02:15+00:00,[],https://api.github.com/licenses/apache-2.0
632,https://github.com/TheYash27/n_bit_bcd_op_multiplier.git,2023-05-28 06:11:26+00:00,,0,TheYash27/n_bit_bcd_op_multiplier,646359090,Verilog,n_bit_bcd_op_multiplier,4,0,2023-05-28 06:12:27+00:00,[],None
633,https://github.com/chanhuirobot/github_learning.git,2023-05-29 05:49:51+00:00,,0,chanhuirobot/github_learning,646689665,Verilog,github_learning,28546,0,2023-06-28 12:07:42+00:00,[],None
634,https://github.com/furkanklvz/encryptionSystem.git,2023-05-29 07:10:51+00:00,"First, a verilog code that records the password you entered and then validates the password you entered and turns on certain leds as the case may be.",0,furkanklvz/encryptionSystem,646714300,Verilog,encryptionSystem,3,0,2023-05-29 07:11:17+00:00,[],None
635,https://github.com/GokayHELVACI/MorsKodDonusturucu.git,2023-05-29 10:43:08+00:00,Gömülü Sistemler Dersi Mors Kodu Dönüştürücü Projesi,0,GokayHELVACI/MorsKodDonusturucu,646787494,Verilog,MorsKodDonusturucu,26763,0,2023-05-29 10:44:12+00:00,[],None
636,https://github.com/rajitha0119/100-DAYS-OF-RTL.git,2023-05-28 16:32:39+00:00,DAY 01- HALF ADDER,0,rajitha0119/100-DAYS-OF-RTL,646513672,Verilog,100-DAYS-OF-RTL,581,0,2023-05-29 16:54:27+00:00,[],None
637,https://github.com/KiranHanamagoudar/ADLD.git,2023-05-18 14:31:12+00:00,,0,KiranHanamagoudar/ADLD,642423496,Verilog,ADLD,14518,0,2023-05-18 18:22:42+00:00,[],None
638,https://github.com/johnsaber1/RTL-to-GDSII-implementation-of-low-power-configurable-multi-clock-system.git,2023-05-18 19:37:46+00:00,,0,johnsaber1/RTL-to-GDSII-implementation-of-low-power-configurable-multi-clock-system,642533376,Verilog,RTL-to-GDSII-implementation-of-low-power-configurable-multi-clock-system,2445,0,2023-05-18 19:45:15+00:00,[],None
639,https://github.com/SakshiHalbhavi/ADLD.git,2023-05-19 09:26:19+00:00,,0,SakshiHalbhavi/ADLD,642757753,Verilog,ADLD,2021,0,2023-05-19 09:55:42+00:00,[],None
640,https://github.com/johnsaber1/MIPS_single_cycle_Microprocessor.git,2023-05-19 07:43:48+00:00,,0,johnsaber1/MIPS_single_cycle_Microprocessor,642720947,Verilog,MIPS_single_cycle_Microprocessor,7,0,2023-05-19 08:16:38+00:00,[],None
641,https://github.com/tereza78/HW_lessons.git,2023-05-19 10:50:21+00:00,,0,tereza78/HW_lessons,642788573,Verilog,HW_lessons,0,0,2023-05-19 10:57:55+00:00,[],None
642,https://github.com/GSXAM/HDMI.git,2023-05-23 06:24:12+00:00,TMDS encoder repo,0,GSXAM/HDMI,644253177,Verilog,HDMI,130,0,2023-07-02 03:50:47+00:00,[],None
643,https://github.com/3ab3at/aes_caravel.git,2023-05-23 19:19:40+00:00,,0,3ab3at/aes_caravel,644559080,Verilog,aes_caravel,41721,0,2023-05-23 19:20:24+00:00,[],https://api.github.com/licenses/apache-2.0
644,https://github.com/goel-vanshika/UE20CS201_DDCO_Lab.git,2023-05-25 10:30:15+00:00,,0,goel-vanshika/UE20CS201_DDCO_Lab,645290788,Verilog,UE20CS201_DDCO_Lab,12642,0,2023-05-25 10:57:28+00:00,[],None
645,https://github.com/paras1009/tapeoutANN.git,2023-05-25 17:20:43+00:00,,0,paras1009/tapeoutANN,645450330,Verilog,tapeoutANN,93696,0,2023-05-25 17:21:25+00:00,[],https://api.github.com/licenses/apache-2.0
646,https://github.com/AkshayD13/Motion-Estimation.git,2023-05-26 03:58:06+00:00,,0,AkshayD13/Motion-Estimation,645616794,Verilog,Motion-Estimation,1181,0,2023-05-26 04:05:53+00:00,[],None
647,https://github.com/Xun-Xun-NTU/RISCV-with-Compressed-Instructions.git,2023-05-20 15:45:53+00:00,,0,Xun-Xun-NTU/RISCV-with-Compressed-Instructions,643260119,,RISCV-with-Compressed-Instructions,15,0,2023-05-20 15:45:53+00:00,[],None
648,https://github.com/alvi-codes/MazeMaster.git,2023-05-22 10:59:51+00:00,,1,alvi-codes/MazeMaster,643882108,Verilog,MazeMaster,99126,0,2023-06-28 10:08:07+00:00,[],None
649,https://github.com/tars3017/Logic-Design-Final-Project.git,2023-06-03 17:47:38+00:00,,0,tars3017/Logic-Design-Final-Project,649077708,Verilog,Logic-Design-Final-Project,303,0,2023-06-20 03:17:28+00:00,[],None
650,https://github.com/shanmukh2607/gna_makesim.git,2023-06-01 05:10:21+00:00,,0,shanmukh2607/gna_makesim,648047385,Verilog,gna_makesim,416,0,2023-06-01 22:02:25+00:00,[],None
651,https://github.com/zy-Vanessa/computer-organization.git,2023-06-01 05:05:45+00:00,《计算机组成原理》课程,0,zy-Vanessa/computer-organization,648046128,Verilog,computer-organization,13231,0,2023-10-01 07:01:04+00:00,[],None
652,https://github.com/tugceozz/Gomulu_Sistemler_Proje.git,2023-05-31 18:33:11+00:00,,0,tugceozz/Gomulu_Sistemler_Proje,647887525,Verilog,Gomulu_Sistemler_Proje,5554,0,2023-05-31 18:36:52+00:00,[],None
653,https://github.com/smhh22/predictor.git,2023-06-01 06:34:49+00:00,,0,smhh22/predictor,648072249,Verilog,predictor,6,0,2023-06-01 14:00:30+00:00,[],https://api.github.com/licenses/mit
654,https://github.com/amirmm03/ver.git,2023-06-01 06:30:33+00:00,,0,amirmm03/ver,648070958,Verilog,ver,7,0,2023-06-01 13:28:15+00:00,[],https://api.github.com/licenses/mit
655,https://github.com/isaac-ahlgren/riscv-processor.git,2023-05-31 23:29:51+00:00,RISCV processor in verilog.,0,isaac-ahlgren/riscv-processor,647969659,Verilog,riscv-processor,854,0,2023-06-11 22:13:36+00:00,[],None
656,https://github.com/TahaMemari/BranchPrediction2.git,2023-06-01 07:47:07+00:00,,0,TahaMemari/BranchPrediction2,648096952,Verilog,BranchPrediction2,5,0,2023-06-01 07:47:15+00:00,[],https://api.github.com/licenses/mit
657,https://github.com/JainPromudShreyansh/Pattern_Detector.git,2023-05-20 08:54:15+00:00,,0,JainPromudShreyansh/Pattern_Detector,643150272,Verilog,Pattern_Detector,71,0,2023-05-20 10:17:25+00:00,[],None
658,https://github.com/AbdelazizZakareya/Caravel_Example.git,2023-05-20 09:03:55+00:00,,0,AbdelazizZakareya/Caravel_Example,643152673,Verilog,Caravel_Example,41721,0,2023-05-20 09:04:39+00:00,[],https://api.github.com/licenses/apache-2.0
659,https://github.com/SteveT10/16bit-verilog-processor.git,2023-05-18 21:23:35+00:00,A 16-bit programmable processor project designed and simulated in ModelSim and Quartus Software.,0,SteveT10/16bit-verilog-processor,642563660,Verilog,16bit-verilog-processor,24870,0,2023-10-27 08:54:07+00:00,[],https://api.github.com/licenses/mit
660,https://github.com/nadabadawi/aes_caravel_project.git,2023-05-18 07:11:31+00:00,,0,nadabadawi/aes_caravel_project,642261862,Verilog,aes_caravel_project,41726,0,2023-05-18 07:12:08+00:00,[],https://api.github.com/licenses/apache-2.0
661,https://github.com/ahmedtmgouda/user_proj_mul32.git,2023-05-17 16:39:21+00:00,,0,ahmedtmgouda/user_proj_mul32,642020524,Verilog,user_proj_mul32,41725,0,2023-05-17 16:40:01+00:00,[],https://api.github.com/licenses/apache-2.0
662,https://github.com/ahmedashrafalaaser/SPI_SLAVE_DesignProject.git,2023-05-17 11:02:28+00:00,,0,ahmedashrafalaaser/SPI_SLAVE_DesignProject,641878958,Verilog,SPI_SLAVE_DesignProject,377,0,2023-05-17 11:03:20+00:00,[],None
663,https://github.com/Aftab-affu/intern_6w.git,2023-05-17 11:15:05+00:00,,0,Aftab-affu/intern_6w,641883439,Verilog,intern_6w,734,0,2023-06-19 21:58:56+00:00,[],None
664,https://github.com/MohamedKhaledMohamedAli/FIFO-Design.git,2023-05-17 10:48:49+00:00,,0,MohamedKhaledMohamedAli/FIFO-Design,641874158,Verilog,FIFO-Design,3,0,2023-05-17 10:56:04+00:00,[],None
665,https://github.com/Morning1139Angel/simpleALU.git,2023-06-03 10:47:19+00:00,simple alu as digital systems homework for college ,0,Morning1139Angel/simpleALU,648962743,Verilog,simpleALU,6,0,2023-06-03 11:18:21+00:00,[],None
666,https://github.com/rgchuan13/METEO_SoC.git,2023-06-03 07:34:20+00:00,METEO_SoC is a wireless SoC design based on arm cortex m0.,0,rgchuan13/METEO_SoC,648917012,Verilog,METEO_SoC,4727,0,2023-06-03 08:49:33+00:00,[],https://api.github.com/licenses/mit
667,https://github.com/mukhaledd/Advanced-Encryption-system.git,2023-06-02 23:05:25+00:00,,2,mukhaledd/Advanced-Encryption-system,648823891,Verilog,Advanced-Encryption-system,450,0,2023-06-02 23:10:01+00:00,[],None
668,https://github.com/Adi-SRAM25/Verilog.git,2023-06-02 20:28:26+00:00,,0,Adi-SRAM25/Verilog,648791008,Verilog,Verilog,18,0,2023-06-02 20:45:30+00:00,[],None
669,https://github.com/Readon/SpinalI2C.git,2023-06-02 05:51:56+00:00,,0,Readon/SpinalI2C,648500567,Verilog,SpinalI2C,21,0,2023-06-02 05:56:07+00:00,[],None
670,https://github.com/Sh4peshifting/SDUST_EDA_test.git,2023-05-25 00:14:21+00:00,山东科技大学电子信息科学与技术2021级EDA理论考试复习大纲及实验考试,0,Sh4peshifting/SDUST_EDA_test,645108220,Verilog,SDUST_EDA_test,204,0,2023-07-06 04:38:23+00:00,[],https://api.github.com/licenses/gpl-3.0
671,https://github.com/urish/tt03p5-simon-game.git,2023-05-23 09:40:26+00:00,Simon Says game submission for TT-03p5,1,urish/tt03p5-simon-game,644328161,Verilog,tt03p5-simon-game,451,0,2023-05-23 09:40:58+00:00,[],https://api.github.com/licenses/apache-2.0
672,https://github.com/03-khalid/Advance-digital-logics-design.git,2023-05-18 12:22:20+00:00,ASSIGNMENTS AND COURSE PROJECT,0,03-khalid/Advance-digital-logics-design,642371384,Verilog,Advance-digital-logics-design,780,0,2024-01-04 07:55:46+00:00,[],None
673,https://github.com/mohamedmorsi22/Asynchronous_fifo.git,2023-05-25 11:14:54+00:00,This project implemented a FIFO with separate clock domains for read and write,0,mohamedmorsi22/Asynchronous_fifo,645307042,Verilog,Asynchronous_fifo,3,0,2023-05-25 11:17:44+00:00,[],None
674,https://github.com/PRAGATI-0102/Gray-to-Binary-Day-038-.git,2023-05-17 15:35:07+00:00,"Gray to Binary conversion is a fundamental operation in digital circuits, particularly in applications where sequential decoding is required.",0,PRAGATI-0102/Gray-to-Binary-Day-038-,641994614,Verilog,Gray-to-Binary-Day-038-,111,0,2023-05-17 15:36:08+00:00,[],None
675,https://github.com/Mariam-Taher409/Pattern-Detector.git,2023-05-22 18:25:31+00:00,,0,Mariam-Taher409/Pattern-Detector,644062221,Verilog,Pattern-Detector,100,0,2023-05-22 18:26:07+00:00,[],None
676,https://github.com/Sahana1540/ADLD.git,2023-05-19 14:12:15+00:00,assignments,0,Sahana1540/ADLD,642863933,Verilog,ADLD,2328,0,2023-05-19 14:14:02+00:00,[],None
677,https://github.com/ROSHAN0120/esim-general.git,2023-05-20 17:05:27+00:00,basic reference files for esim simulation,1,ROSHAN0120/esim-general,643282796,Verilog,esim-general,1890,0,2023-05-20 17:07:04+00:00,[],None
678,https://github.com/EngMohamedGamal/serial_adder_fsm.git,2023-05-20 05:18:54+00:00,Serial Adder: Using Finite State Machine Implemented Using Verilog,0,EngMohamedGamal/serial_adder_fsm,643099257,Verilog,serial_adder_fsm,2,0,2023-05-20 05:19:31+00:00,[],None
679,https://github.com/kersorus/fpga.git,2023-05-24 16:05:00+00:00,,0,kersorus/fpga,644962345,Verilog,fpga,6,0,2023-05-24 16:05:40+00:00,[],None
680,https://github.com/Minasjan/design.git,2023-05-23 09:32:04+00:00,,0,Minasjan/design,644324925,Verilog,design,34,0,2023-05-23 09:37:47+00:00,[],None
681,https://github.com/mohamed-mohamed-tarek/Synthesizable-Verilog-Source-Codes-DUT-Test-bench-and-Simulation-Results.-.git,2023-05-25 00:11:31+00:00,,0,mohamed-mohamed-tarek/Synthesizable-Verilog-Source-Codes-DUT-Test-bench-and-Simulation-Results.-,645107638,Verilog,Synthesizable-Verilog-Source-Codes-DUT-Test-bench-and-Simulation-Results.-,3522,0,2023-05-25 00:15:19+00:00,[],None
682,https://github.com/anujmore23/demo5.git,2023-05-24 21:44:44+00:00,,0,anujmore23/demo5,645075104,Verilog,demo5,80,0,2023-05-24 21:46:05+00:00,[],None
683,https://github.com/kbmorris/ZP_Adder.git,2023-05-27 17:12:56+00:00,,0,kbmorris/ZP_Adder,646220619,Verilog,ZP_Adder,0,0,2023-05-27 17:16:17+00:00,[],None
684,https://github.com/PRAGATI-0102/Clock-Divider-Day-048-.git,2023-05-27 17:03:34+00:00,A clock divider is a fundamental digital circuit that divides the frequency of an input clock signal to generate slower clock signals with reduced frequencies.,0,PRAGATI-0102/Clock-Divider-Day-048-,646218100,Verilog,Clock-Divider-Day-048-,87,0,2023-05-27 17:04:16+00:00,[],None
685,https://github.com/barawn/rack-jtag.git,2023-05-25 14:29:03+00:00,CPLD firmware for RACK JTAG multiplexing,0,barawn/rack-jtag,645384857,Verilog,rack-jtag,5,0,2023-05-25 14:29:44+00:00,[],None
686,https://github.com/Pawankestwal/Xilinx.git,2023-05-28 14:51:53+00:00,,0,Pawankestwal/Xilinx,646484980,Verilog,Xilinx,157,0,2023-05-28 15:02:09+00:00,[],None
687,https://github.com/blueberrymuffin3/tiny16.git,2023-05-27 18:07:31+00:00,,0,blueberrymuffin3/tiny16,646234410,Verilog,tiny16,174,0,2023-05-28 07:42:31+00:00,[],None
688,https://github.com/slvno/1bitsum.git,2023-05-29 20:06:07+00:00,1 bit sum,0,slvno/1bitsum,646987169,Verilog,1bitsum,161,0,2023-05-29 20:17:53+00:00,[],None
689,https://github.com/NishaniKasineshan/CO224-Computer-Architecture-Building-a-Simple-Processor.git,2023-05-23 15:53:43+00:00,Building a simple processor using verilog,0,NishaniKasineshan/CO224-Computer-Architecture-Building-a-Simple-Processor,644482733,Verilog,CO224-Computer-Architecture-Building-a-Simple-Processor,3664,0,2023-05-23 16:14:27+00:00,[],None
690,https://github.com/XianPearl/CA.git,2023-05-23 18:05:30+00:00,,0,XianPearl/CA,644532773,Verilog,CA,65,0,2023-08-09 18:29:41+00:00,[],None
691,https://github.com/Strawberry-Banana/Verilog_Lib.git,2023-05-24 11:17:46+00:00,一些常用的Verilog小模块,0,Strawberry-Banana/Verilog_Lib,644840551,Verilog,Verilog_Lib,14,0,2023-05-24 11:20:32+00:00,[],None
692,https://github.com/Royshivam18/CNN_Hardware.git,2023-05-24 06:35:31+00:00,,0,Royshivam18/CNN_Hardware,644734650,Verilog,CNN_Hardware,30,0,2023-05-24 06:36:35+00:00,[],None
693,https://github.com/JayadityaVLSI/Programmable_clk.git,2023-05-30 16:45:15+00:00,3 ways to generate programmable clock of given frequency,0,JayadityaVLSI/Programmable_clk,647378335,Verilog,Programmable_clk,3,0,2023-05-30 16:47:16+00:00,[],None
694,https://github.com/sonnyshiau/System-level-DNN-Accelerator.git,2023-05-31 06:09:26+00:00,Integrating the LeNet accelerator engine into the Embedded Scalable Platform (ESP).,0,sonnyshiau/System-level-DNN-Accelerator,647600291,Verilog,System-level-DNN-Accelerator,8,0,2023-10-19 13:59:20+00:00,[],https://api.github.com/licenses/mit
695,https://github.com/cornell-c2s2/c2s2-tape-out-23.git,2023-06-02 18:39:47+00:00,,0,cornell-c2s2/c2s2-tape-out-23,648760788,Verilog,c2s2-tape-out-23,80461,0,2023-06-02 18:51:58+00:00,[],https://api.github.com/licenses/apache-2.0
696,https://github.com/Doom1016/Verilog.git,2023-06-03 10:49:35+00:00,,0,Doom1016/Verilog,648963279,Verilog,Verilog,86,0,2023-06-03 10:51:49+00:00,[],https://api.github.com/licenses/mit
697,https://github.com/Arashziyaei/HardWar231.2023.git,2023-06-01 06:42:23+00:00,,0,Arashziyaei/HardWar231.2023,648074562,Verilog,HardWar231.2023,3,0,2023-06-01 06:42:31+00:00,[],https://api.github.com/licenses/mit
698,https://github.com/Rishbit/General-UART.git,2023-06-02 16:13:00+00:00,This is a general UART implementation that can be deployed on Xilinx FPGAs.,0,Rishbit/General-UART,648714749,Verilog,General-UART,70,0,2023-06-02 16:16:49+00:00,[],None
699,https://github.com/sam10486/DTFAG_FFTC_my_env.git,2023-06-04 10:08:18+00:00,,0,sam10486/DTFAG_FFTC_my_env,649264076,Verilog,DTFAG_FFTC_my_env,2696,0,2023-06-04 10:09:38+00:00,[],None
700,https://github.com/MarivaldoFraga/gerador_sinal_pwm.git,2023-06-03 23:15:07+00:00,,0,MarivaldoFraga/gerador_sinal_pwm,649142829,Verilog,gerador_sinal_pwm,7096,0,2023-06-03 23:16:44+00:00,[],None
701,https://github.com/TinyTapeout/tt03p5-power-test.git,2023-06-01 12:45:23+00:00,,0,TinyTapeout/tt03p5-power-test,648205034,Verilog,tt03p5-power-test,951,0,2023-06-01 15:37:02+00:00,[],https://api.github.com/licenses/apache-2.0
702,https://github.com/anudeepnrao/radar_wv_gen.git,2023-06-04 13:28:47+00:00,Radar waveform Generator using FPGA,0,anudeepnrao/radar_wv_gen,649316335,Verilog,radar_wv_gen,7,0,2023-06-04 13:30:30+00:00,[],https://api.github.com/licenses/apache-2.0
703,https://github.com/GetulioVictor/ELTD12A.git,2023-06-04 03:02:43+00:00,Projetos direcionados realizados durante a disciplina de Eletrônica Digital II (ELTD12A),0,GetulioVictor/ELTD12A,649175965,Verilog,ELTD12A,583,0,2023-06-04 03:42:01+00:00,[],https://api.github.com/licenses/gpl-3.0
704,https://github.com/Ashok123R/3-Bit-Carry-Look-Ahead-Adder.git,2023-05-17 04:16:24+00:00,,0,Ashok123R/3-Bit-Carry-Look-Ahead-Adder,641737303,Verilog,3-Bit-Carry-Look-Ahead-Adder,19,0,2023-05-17 06:51:37+00:00,[],None
705,https://github.com/triode-zyl/A-Pipelined-CPU-Supporting-50-MIPS-Instructions-Using-Verilog.git,2023-05-18 14:08:45+00:00,利用Verilog HDL开发支持50条MIPS指令的流水线CPU,0,triode-zyl/A-Pipelined-CPU-Supporting-50-MIPS-Instructions-Using-Verilog,642414421,Verilog,A-Pipelined-CPU-Supporting-50-MIPS-Instructions-Using-Verilog,11009,0,2023-10-26 06:50:08+00:00,[],None
706,https://github.com/Aneeshsingh08/ADLD.git,2023-05-18 15:32:02+00:00,,0,Aneeshsingh08/ADLD,642448102,Verilog,ADLD,976,0,2023-05-18 16:44:07+00:00,[],None
707,https://github.com/megalloid/I2C-Master-Read-Write-EEPROM-on-Verilog.git,2023-06-01 17:10:01+00:00,I2C Master Read Write EEPROM on Verilog,0,megalloid/I2C-Master-Read-Write-EEPROM-on-Verilog,648309173,Verilog,I2C-Master-Read-Write-EEPROM-on-Verilog,3,0,2023-06-01 17:14:49+00:00,[],None
708,https://github.com/htfab/totp.git,2023-06-01 16:51:37+00:00,,0,htfab/totp,648302581,Verilog,totp,48,0,2023-06-01 18:40:52+00:00,[],https://api.github.com/licenses/apache-2.0
709,https://github.com/lnmthu1505/uart_ip.git,2023-05-29 09:28:12+00:00,,0,lnmthu1505/uart_ip,646761145,Verilog,uart_ip,13,0,2023-12-25 19:31:50+00:00,[],None
710,https://github.com/Ironsuper1/ChippyChip.git,2023-05-18 04:03:36+00:00,,0,Ironsuper1/ChippyChip,642208989,Verilog,ChippyChip,13,0,2023-12-19 06:58:22+00:00,[],None
711,https://github.com/algofoogle/tt03p5-solo-squash.git,2023-06-01 11:17:41+00:00,Experimental Tiny Tapeout TT03p5 sub: Minimal VGA game like Pong but for 1 lonely player,1,algofoogle/tt03p5-solo-squash,648172545,Verilog,tt03p5-solo-squash,2889,0,2023-06-01 12:50:22+00:00,[],https://api.github.com/licenses/apache-2.0
712,https://github.com/TrustworthyComputing/hdl-benchmarks.git,2023-05-24 16:35:42+00:00,Verilog designs and their synthesized netlists,0,TrustworthyComputing/hdl-benchmarks,644973649,Verilog,hdl-benchmarks,40537,0,2023-05-24 19:17:51+00:00,[],https://api.github.com/licenses/mit
713,https://github.com/AliHashempour/smart-parking-system.git,2023-05-25 14:40:07+00:00,Logical Circuits Final Project,0,AliHashempour/smart-parking-system,645389716,Verilog,smart-parking-system,7,0,2023-05-25 20:57:47+00:00,[],None
714,https://github.com/Izil/matMulAccel.git,2023-05-24 14:15:38+00:00,Design of a Digital Matrix Multiplication Accelerator,0,Izil/matMulAccel,644915985,Verilog,matMulAccel,41721,0,2023-05-24 14:16:20+00:00,[],https://api.github.com/licenses/apache-2.0
715,https://github.com/Shazarulislam/100-days-of-coding.git,2023-05-22 12:07:53+00:00,,0,Shazarulislam/100-days-of-coding,643908871,Verilog,100-days-of-coding,60,0,2023-05-22 12:09:51+00:00,[],None
716,https://github.com/Mariam-Taher409/Greatest-Common-Divisor-GCD-.git,2023-05-22 18:31:51+00:00,,0,Mariam-Taher409/Greatest-Common-Divisor-GCD-,644064548,Verilog,Greatest-Common-Divisor-GCD-,143,0,2023-05-22 18:33:14+00:00,[],None
717,https://github.com/Akarsh-Gupta/IRIS_Labs.git,2023-05-25 21:00:45+00:00,,0,Akarsh-Gupta/IRIS_Labs,645520601,Verilog,IRIS_Labs,6,0,2023-05-25 22:26:13+00:00,[],None
718,https://github.com/MohammadJavadN/Council.git,2023-05-20 14:04:37+00:00,A desktop application (using JavaFX) for entrance exam counselors who can control students' plans. This program can also be useful for students themselves,0,MohammadJavadN/Council,643230821,Verilog,Council,2,0,2023-05-20 14:05:01+00:00,[],None
719,https://github.com/PiyumaliSandunika/Memory-Heirarchy.git,2023-05-27 16:27:11+00:00,Here a memory sub-system was added to the previously implemented single-cycle CPU. This was done as a part of the Lab in CO224 Computer Architecture course,0,PiyumaliSandunika/Memory-Heirarchy,646208539,Verilog,Memory-Heirarchy,435,0,2023-05-27 16:36:53+00:00,[],None
720,https://github.com/rawanalaa/Pipelined-CPU-Implementation.git,2023-05-29 09:34:36+00:00,,0,rawanalaa/Pipelined-CPU-Implementation,646763369,Verilog,Pipelined-CPU-Implementation,19,0,2023-05-29 09:35:36+00:00,[],None
721,https://github.com/TheYash27/vending_machine.git,2023-05-30 05:29:16+00:00,,0,TheYash27/vending_machine,647120536,Verilog,vending_machine,4,0,2023-05-30 05:30:27+00:00,[],None
722,https://github.com/sayoojkj/Automatic-washing-machine-HDL.git,2023-05-30 06:53:48+00:00,FSM implementation of Washing machine,0,sayoojkj/Automatic-washing-machine-HDL,647147294,Verilog,Automatic-washing-machine-HDL,2,0,2023-05-30 06:54:20+00:00,[],None
723,https://github.com/TheYash27/automatic_washing_machine.git,2023-05-27 07:24:19+00:00,,0,TheYash27/automatic_washing_machine,646069601,Verilog,automatic_washing_machine,5,0,2023-05-27 07:25:05+00:00,[],None
724,https://github.com/amanluth03/test.git,2023-05-30 10:59:09+00:00,,0,amanluth03/test,647237940,Verilog,test,87,0,2023-05-30 11:00:05+00:00,[],None
725,https://github.com/Nullbeer/axi_stream_insert_header.git,2023-05-30 11:45:53+00:00,,0,Nullbeer/axi_stream_insert_header,647255571,Verilog,axi_stream_insert_header,1703,0,2023-05-30 11:59:07+00:00,[],None
726,https://github.com/liu-bruce/CPE-4020.git,2023-05-25 01:51:59+00:00,,0,liu-bruce/CPE-4020,645130043,Verilog,CPE-4020,23371,0,2023-05-25 01:56:35+00:00,[],None
727,https://github.com/NouranAbdelaziz/user_proj_mul32.git,2023-05-24 08:52:37+00:00,,0,NouranAbdelaziz/user_proj_mul32,644785430,Verilog,user_proj_mul32,282109,0,2023-05-24 08:53:20+00:00,[],https://api.github.com/licenses/apache-2.0
728,https://github.com/poseidon078/CS220.git,2023-06-02 06:29:53+00:00,,0,poseidon078/CS220,648511648,Verilog,CS220,1214,0,2023-06-02 06:36:09+00:00,[],None
729,https://github.com/mariamaliezzat/vlsi_project.git,2023-05-28 16:56:27+00:00,ffe equalizer ,0,mariamaliezzat/vlsi_project,646520102,Verilog,vlsi_project,212,0,2023-05-30 15:21:49+00:00,[],None
730,https://github.com/jalakjk13/IRIS_verilog.git,2023-05-28 17:50:42+00:00,IRIS Efabless recs verilog codes,0,jalakjk13/IRIS_verilog,646534793,Verilog,IRIS_verilog,4,0,2023-06-03 19:58:52+00:00,[],None
731,https://github.com/dwisehart/tt03p5-greycode.git,2023-06-02 02:43:31+00:00,,0,dwisehart/tt03p5-greycode,648457281,Verilog,tt03p5-greycode,56,0,2023-06-02 02:44:05+00:00,[],https://api.github.com/licenses/apache-2.0
732,https://github.com/TaniaRahmanKhan99/VLSI-Design.git,2023-06-01 15:26:04+00:00,VLSI Design,0,TaniaRahmanKhan99/VLSI-Design,648270921,Verilog,VLSI-Design,312,0,2023-06-01 15:29:22+00:00,[],None
733,https://github.com/AhmedHany1212/FFT-using-verilog.git,2023-05-19 07:04:54+00:00,,0,AhmedHany1212/FFT-using-verilog,642707019,Verilog,FFT-using-verilog,17,0,2023-05-19 07:10:04+00:00,[],None
734,https://github.com/AhmedHany1212/Stop-watch-using-verilog.git,2023-05-19 06:52:17+00:00,,0,AhmedHany1212/Stop-watch-using-verilog,642702850,Verilog,Stop-watch-using-verilog,2,0,2023-05-19 06:53:10+00:00,[],None
735,https://github.com/shivamkundan/MIPS-on-Artix-7-FPGA.git,2023-05-19 05:43:37+00:00,Implementation of a MIPS processor on a Xilinx Artix-7 FPGA.,0,shivamkundan/MIPS-on-Artix-7-FPGA,642681250,Verilog,MIPS-on-Artix-7-FPGA,980,0,2023-06-03 06:48:59+00:00,"['artix-7', 'basys3-fpga-board', 'verilog', 'xilinx-fpga', 'xilinx-vivado', 'mips-architecture', 'mips32']",None
736,https://github.com/MoAminPourzare/Digital-Logic-Design-Course.git,2023-05-21 21:45:51+00:00,,0,MoAminPourzare/Digital-Logic-Design-Course,643665467,Verilog,Digital-Logic-Design-Course,33402,0,2023-05-21 21:50:30+00:00,[],None
737,https://github.com/jchin2/OpenLane_designs.git,2023-05-19 16:18:52+00:00,Place to dump the openlane designs verilog files,0,jchin2/OpenLane_designs,642911215,Verilog,OpenLane_designs,5,0,2023-05-19 16:34:48+00:00,[],None
738,https://github.com/pramathk2002/adld.git,2023-05-22 06:49:39+00:00,adld assignments and project,0,pramathk2002/adld,643787025,Verilog,adld,69,0,2023-05-22 07:02:44+00:00,[],None
739,https://github.com/vishnu-05-03/IRIS-LABs-Rec-Task.git,2023-05-23 09:05:50+00:00,This repository is made to submit the recruitment task of IRIS-LABs,0,vishnu-05-03/IRIS-LABs-Rec-Task,644314143,Verilog,IRIS-LABs-Rec-Task,119,0,2023-06-03 11:59:34+00:00,[],None
740,https://github.com/Beautlin29/fault_tolerant_satellite_fsm.git,2023-05-18 14:23:44+00:00,,0,Beautlin29/fault_tolerant_satellite_fsm,642420496,Verilog,fault_tolerant_satellite_fsm,1215,0,2023-08-22 14:07:59+00:00,[],None
741,https://github.com/kevinchou0518/2022-FALL-NYCU-DLAB.git,2023-05-18 13:33:02+00:00,,0,kevinchou0518/2022-FALL-NYCU-DLAB,642399260,Verilog,2022-FALL-NYCU-DLAB,148,0,2023-05-18 13:59:24+00:00,[],None
742,https://github.com/vedika-saravanan/Power-and-Speed-Efficiency-of-Multipliers.git,2023-05-23 03:17:02+00:00,,0,vedika-saravanan/Power-and-Speed-Efficiency-of-Multipliers,644202887,Verilog,Power-and-Speed-Efficiency-of-Multipliers,1470,0,2023-05-23 03:36:22+00:00,[],https://api.github.com/licenses/mit
743,https://github.com/DanutAldea/SOC-Labs.git,2023-05-29 11:57:48+00:00,,0,DanutAldea/SOC-Labs,646813930,Verilog,SOC-Labs,2,0,2023-05-29 12:02:25+00:00,[],None
744,https://github.com/YBatuhan07/ParkSistemi.git,2023-05-29 07:55:47+00:00,,0,YBatuhan07/ParkSistemi,646729031,Verilog,ParkSistemi,3880,0,2023-05-29 07:56:27+00:00,[],None
745,https://github.com/Ylidox/proc.git,2023-05-29 18:29:19+00:00,,0,Ylidox/proc,646958400,Verilog,proc,600,0,2023-05-29 18:46:50+00:00,[],None
746,https://github.com/imchetan9/Verilog-codes.git,2023-05-24 17:32:40+00:00,,0,imchetan9/Verilog-codes,644994623,Verilog,Verilog-codes,366,0,2023-05-24 17:36:54+00:00,[],None
747,https://github.com/Kieran-Du/Open_MIPS_simple.git,2023-05-24 16:56:52+00:00,,0,Kieran-Du/Open_MIPS_simple,644981690,Verilog,Open_MIPS_simple,728,0,2023-05-24 17:08:28+00:00,[],None
748,https://github.com/Dedorou/core_RISC_V.git,2023-05-30 22:01:53+00:00,,0,Dedorou/core_RISC_V,647481797,Verilog,core_RISC_V,25,0,2023-06-12 07:08:11+00:00,[],None
749,https://github.com/aferolkay/pipelineProcessor.git,2023-06-03 18:40:03+00:00,EE446-Term Project ,0,aferolkay/pipelineProcessor,649090331,Verilog,pipelineProcessor,35,0,2023-07-08 18:56:12+00:00,[],None
750,https://github.com/riccardofusari/leakpowerminimization_pt.git,2023-06-03 17:26:55+00:00,,2,riccardofusari/leakpowerminimization_pt,649072795,Verilog,leakpowerminimization_pt,79317,0,2023-06-03 17:45:17+00:00,[],None
751,https://github.com/LyraN66/HDL---VHDL.git,2023-05-29 19:00:06+00:00,,0,LyraN66/HDL---VHDL,646968042,Verilog,HDL---VHDL,91,0,2024-01-17 16:40:24+00:00,[],None
752,https://github.com/ayush-62/MTP.git,2023-05-29 12:14:36+00:00,,0,ayush-62/MTP,646819933,Verilog,MTP,38211,0,2024-02-01 09:24:32+00:00,[],None
753,https://github.com/garimaa-goyal/Pipelined-Design-of-32-bit-MIPS-Processor.git,2023-05-30 08:16:40+00:00,,0,garimaa-goyal/Pipelined-Design-of-32-bit-MIPS-Processor,647177369,Verilog,Pipelined-Design-of-32-bit-MIPS-Processor,264,0,2023-05-30 12:51:01+00:00,[],None
754,https://github.com/Pal-A-Patel/CME-433.git,2023-05-22 17:54:45+00:00,,0,Pal-A-Patel/CME-433,644050918,Verilog,CME-433,2,0,2024-03-12 04:43:52+00:00,[],None
755,https://github.com/Crina20/pipoBuggy.git,2023-05-28 15:19:27+00:00,,0,Crina20/pipoBuggy,646493031,Verilog,pipoBuggy,1,0,2023-05-28 15:44:28+00:00,[],None
756,https://github.com/Di-viner/RISCV-Pipeline-cpu.git,2023-05-21 03:02:29+00:00,,0,Di-viner/RISCV-Pipeline-cpu,643397567,Verilog,RISCV-Pipeline-cpu,19,0,2024-03-20 02:06:10+00:00,[],https://api.github.com/licenses/gpl-2.0
757,https://github.com/Nausheen200/ADLD.git,2023-05-18 16:21:29+00:00,,0,Nausheen200/ADLD,642466717,Verilog,ADLD,46,0,2023-05-18 16:27:04+00:00,[],None
758,https://github.com/rohitupari4321/01fe20bec222_adld.git,2023-05-17 13:09:51+00:00,ADLD Submission 1)Assignment_1 2)Assignment_2 3)Course_Project 4)Lab_codes,0,rohitupari4321/01fe20bec222_adld,641929658,Verilog,01fe20bec222_adld,5060,0,2023-10-15 10:44:29+00:00,[],None
759,https://github.com/umutgokdg/CORG-HW2.git,2023-05-17 16:12:35+00:00,,0,umutgokdg/CORG-HW2,642010099,Verilog,CORG-HW2,394,0,2023-05-17 16:15:55+00:00,[],None
760,https://github.com/Harsha-Jangamani/ADLD_CODES.git,2023-05-18 11:10:05+00:00,,0,Harsha-Jangamani/ADLD_CODES,642345178,Verilog,ADLD_CODES,499,0,2023-05-18 11:14:56+00:00,[],None
761,https://github.com/khofesh/fpga-go-board.git,2023-05-18 14:05:32+00:00,,0,khofesh/fpga-go-board,642413132,Verilog,fpga-go-board,372,0,2023-06-11 10:44:34+00:00,[],None
762,https://github.com/CuriousGeorgiy/mipt-fpga.git,2023-05-19 06:21:50+00:00,«Designing digital devices on FPGA» course at MIPT department of electrical engineering and computer science (MCST),0,CuriousGeorgiy/mipt-fpga,642692171,Verilog,mipt-fpga,4,0,2023-05-24 13:16:24+00:00,[],None
763,https://github.com/AhmedHany1212/interface-verification-using-cocotb.git,2023-05-19 04:24:19+00:00,,0,AhmedHany1212/interface-verification-using-cocotb,642661921,Verilog,interface-verification-using-cocotb,64,0,2023-05-19 04:25:52+00:00,[],https://api.github.com/licenses/bsd-2-clause
764,https://github.com/PoornimaSB/PoornimaBendigerimath.git,2023-05-19 11:46:44+00:00,,0,PoornimaSB/PoornimaBendigerimath,642807818,Verilog,PoornimaBendigerimath,344,0,2023-05-19 12:16:59+00:00,[],None
765,https://github.com/sneha129/ADLD.git,2023-05-19 12:19:21+00:00,,0,sneha129/ADLD,642819063,Verilog,ADLD,3660,0,2023-05-19 12:58:12+00:00,[],None
766,https://github.com/MostafaBelo/DD1_Project2.git,2023-05-25 19:23:00+00:00,,0,MostafaBelo/DD1_Project2,645492150,Verilog,DD1_Project2,3266,0,2023-05-26 21:25:02+00:00,[],None
767,https://github.com/NororonaZoro/MIPS.git,2023-05-26 01:06:47+00:00,,0,NororonaZoro/MIPS,645576491,Verilog,MIPS,26,0,2023-05-26 01:17:01+00:00,[],None
768,https://github.com/hong2589/computer-organization-cache.git,2023-05-20 15:22:04+00:00,,0,hong2589/computer-organization-cache,643253408,Verilog,computer-organization-cache,50,0,2023-06-19 06:49:13+00:00,[],None
769,https://github.com/kunnu210697/Tic-Tac-Toe.git,2023-05-20 22:34:47+00:00,,0,kunnu210697/Tic-Tac-Toe,643356232,Verilog,Tic-Tac-Toe,8950,0,2023-05-20 22:48:45+00:00,[],None
770,https://github.com/divc13/CSE-Bubble.git,2023-05-21 09:21:37+00:00,,0,divc13/CSE-Bubble,643472901,Verilog,CSE-Bubble,111,0,2023-05-21 15:16:42+00:00,[],None
771,https://github.com/elmaxxo/verilog.git,2023-05-24 15:07:13+00:00,,0,elmaxxo/verilog,644939105,Verilog,verilog,4,0,2023-05-24 15:09:41+00:00,[],None
772,https://github.com/cheshtapathak/Digital-Alarm-Clock-using-Verilog.git,2023-05-27 13:00:49+00:00,,0,cheshtapathak/Digital-Alarm-Clock-using-Verilog,646151568,Verilog,Digital-Alarm-Clock-using-Verilog,2,0,2023-05-27 13:06:16+00:00,[],None
773,https://github.com/RITApragya/IRIS-Labs-Assignment.git,2023-05-26 13:38:19+00:00,IRIS LABS Efabless Recs Assignment,0,RITApragya/IRIS-Labs-Assignment,645809677,Verilog,IRIS-Labs-Assignment,5,0,2023-05-26 15:55:35+00:00,[],None
774,https://github.com/nujaadeen/Single-Cycle-CPU-Design-with-Direct-Mapped-Cache-having-functionality.git,2023-05-24 03:51:43+00:00,,1,nujaadeen/Single-Cycle-CPU-Design-with-Direct-Mapped-Cache-having-functionality,644689885,Verilog,Single-Cycle-CPU-Design-with-Direct-Mapped-Cache-having-functionality,1099,0,2023-05-24 03:59:47+00:00,[],None
775,https://github.com/emincilm/RV32I-5stage.git,2023-05-24 05:15:39+00:00,RISC-V RV32I 5 STAGE CPU,0,emincilm/RV32I-5stage,644710544,Verilog,RV32I-5stage,49,0,2023-05-24 06:22:45+00:00,[],https://api.github.com/licenses/apache-2.0
776,https://github.com/omerdurmaz2/reaction-game.git,2023-05-31 13:49:51+00:00,Embedded Systems FPGA Project ,0,omerdurmaz2/reaction-game,647775598,Verilog,reaction-game,2,0,2023-05-31 13:50:41+00:00,[],None
777,https://github.com/CoditaV22/UART.git,2023-05-31 17:54:34+00:00,,0,CoditaV22/UART,647873986,Verilog,UART,89,0,2023-05-31 18:03:17+00:00,[],None
778,https://github.com/uludaqilker/Park_sensor.git,2023-05-31 11:44:34+00:00,,0,uludaqilker/Park_sensor,647724147,Verilog,Park_sensor,1349,0,2023-05-31 11:47:35+00:00,[],None
779,https://github.com/psychogenic/tt03p5-verilog-demo.git,2023-05-31 11:34:51+00:00,,0,psychogenic/tt03p5-verilog-demo,647720265,Verilog,tt03p5-verilog-demo,14,0,2023-05-31 11:37:31+00:00,[],https://api.github.com/licenses/apache-2.0
780,https://github.com/TheYash27/dual_port_RAM.git,2023-05-31 11:21:21+00:00,,0,TheYash27/dual_port_RAM,647715318,Verilog,dual_port_RAM,4,0,2023-05-31 11:31:29+00:00,[],None
781,https://github.com/rajitha0119/100-days-of-RTL-DAY-07.git,2023-06-04 05:41:20+00:00,N BIT PARALLEL ADDER,0,rajitha0119/100-days-of-RTL-DAY-07,649202953,Verilog,100-days-of-RTL-DAY-07,297,0,2023-06-04 05:42:37+00:00,[],None
782,https://github.com/Shanzaywasim/Combinational-Circuit-Design.git,2023-05-30 04:15:45+00:00,learn about assigning I/O pins of our modules for synthesizing the designs on the FPGA,0,Shanzaywasim/Combinational-Circuit-Design,647102138,Verilog,Combinational-Circuit-Design,378,0,2023-05-30 04:22:12+00:00,[],None
783,https://github.com/ahmetkaankara/Embedded-systems-project-pomodoro.git,2023-05-30 16:40:05+00:00,,0,ahmetkaankara/Embedded-systems-project-pomodoro,647376521,Verilog,Embedded-systems-project-pomodoro,1,0,2023-05-30 16:43:47+00:00,[],None
784,https://github.com/bala5213/BCD-adder.git,2023-05-30 17:43:06+00:00,,0,bala5213/BCD-adder,647399818,Verilog,BCD-adder,0,0,2023-05-30 17:46:15+00:00,[],None
785,https://github.com/CHIDAUCF/CHIDA-RISC-V.git,2023-06-03 20:17:53+00:00,,1,CHIDAUCF/CHIDA-RISC-V,649111663,Verilog,CHIDA-RISC-V,2,0,2023-06-11 18:36:41+00:00,[],None
786,https://github.com/kadlub/qemusykt.git,2023-06-03 23:52:31+00:00,QEMU based university project,0,kadlub/qemusykt,649147942,Verilog,qemusykt,5,0,2023-06-22 23:13:42+00:00,[],None
787,https://github.com/nittvlsi/verilog-1-12-code.git,2023-06-03 11:24:24+00:00,,0,nittvlsi/verilog-1-12-code,648972078,Verilog,verilog-1-12-code,11,0,2023-06-03 11:35:42+00:00,[],None
788,https://github.com/Hardwar2023/VerilogPredictor.git,2023-06-01 05:42:58+00:00,,1,Hardwar2023/VerilogPredictor,648056341,Verilog,VerilogPredictor,2,0,2023-06-10 11:17:07+00:00,[],https://api.github.com/licenses/mit
789,https://github.com/EmadEJ/Mohandes_Dre.git,2023-06-01 06:28:05+00:00,,0,EmadEJ/Mohandes_Dre,648070162,Verilog,Mohandes_Dre,11,0,2023-06-01 14:02:36+00:00,[],https://api.github.com/licenses/mit
790,https://github.com/PedroRonzani18/LAOC-Processador-8-bits.git,2023-06-04 23:56:16+00:00,Processador de 8 bits desenvolvido nas aulas de Laboratório de Arquitetura e Organização de Computadores 1,0,PedroRonzani18/LAOC-Processador-8-bits,649471053,Verilog,LAOC-Processador-8-bits,612,0,2023-10-20 04:36:27+00:00,[],None
791,https://github.com/rajitha0119/100DAYS-OF-RTL-DAY-08-DECODER.git,2023-06-04 10:37:20+00:00,DECODER 3_8,0,rajitha0119/100DAYS-OF-RTL-DAY-08-DECODER,649271145,Verilog,100DAYS-OF-RTL-DAY-08-DECODER,307,0,2023-06-04 10:38:57+00:00,[],None
792,https://github.com/Asma-Mohsin/Model-Predictive-Controller_AI-based-chip-design.git,2023-05-22 07:20:51+00:00,,0,Asma-Mohsin/Model-Predictive-Controller_AI-based-chip-design,643798189,Verilog,Model-Predictive-Controller_AI-based-chip-design,147800,0,2023-05-22 07:21:34+00:00,[],https://api.github.com/licenses/apache-2.0
793,https://github.com/Pacuraru-Alex-Marius/Traffic-Lights-Verilog.git,2023-05-25 11:21:43+00:00,Design and testbench code for traffic lights,0,Pacuraru-Alex-Marius/Traffic-Lights-Verilog,645309706,Verilog,Traffic-Lights-Verilog,309,0,2023-05-25 11:24:01+00:00,[],None
794,https://github.com/france1995cx/VerilogCodeGenerator.git,2023-05-27 08:07:53+00:00,This Python script is part of a data analytics project that reads an XLSX file and then processes the data contained within it.,0,france1995cx/VerilogCodeGenerator,646079933,Verilog,VerilogCodeGenerator,27,0,2023-05-29 12:19:06+00:00,[],None
795,https://github.com/sasi-kiran123/dadda_multiplier.git,2023-05-26 16:54:28+00:00,,0,sasi-kiran123/dadda_multiplier,645881008,Verilog,dadda_multiplier,51,0,2023-05-26 16:55:14+00:00,[],https://api.github.com/licenses/mit
796,https://github.com/ozlemyalciner/7segmentdisplay-ROMmemory.git,2023-06-01 23:29:28+00:00,,0,ozlemyalciner/7segmentdisplay-ROMmemory,648415530,Verilog,7segmentdisplay-ROMmemory,17,0,2023-06-01 23:42:30+00:00,[],None
797,https://github.com/Sushma-Soni/mux.git,2023-05-27 06:19:39+00:00,,0,Sushma-Soni/mux,646054378,Verilog,mux,701,0,2023-05-27 06:23:02+00:00,[],None
798,https://github.com/nastasya73/vhdl_project.git,2023-05-17 07:15:06+00:00,,0,nastasya73/vhdl_project,641791760,Verilog,vhdl_project,262695,0,2023-05-17 07:58:10+00:00,[],None
799,https://github.com/NouranAbdelaziz/Design_integration_into_Caravel_tutorial.git,2023-05-23 10:34:41+00:00,,0,NouranAbdelaziz/Design_integration_into_Caravel_tutorial,644349451,Verilog,Design_integration_into_Caravel_tutorial,232,0,2023-05-30 10:19:51+00:00,[],None
800,https://github.com/TheYash27/traffic_light_controller.git,2023-05-23 17:59:26+00:00,,0,TheYash27/traffic_light_controller,644530523,Verilog,traffic_light_controller,5,0,2023-05-23 18:04:13+00:00,[],None
801,https://github.com/malikshanaah1999/my_test.git,2023-05-28 19:23:30+00:00,,0,malikshanaah1999/my_test,646558389,Verilog,my_test,41725,0,2023-05-28 19:24:13+00:00,[],https://api.github.com/licenses/apache-2.0
802,https://github.com/Crina20/ALU_Reg.git,2023-05-28 15:22:26+00:00,,0,Crina20/ALU_Reg,646493935,Verilog,ALU_Reg,49,0,2023-05-28 15:43:34+00:00,[],None
803,https://github.com/orhunaka/VerySimpleCPU.git,2023-05-29 11:29:32+00:00,A verysimpleCPU.,0,orhunaka/VerySimpleCPU,646803736,Verilog,VerySimpleCPU,140,0,2023-06-19 12:24:26+00:00,[],None
804,https://github.com/lihm21/com.git,2023-05-28 08:22:53+00:00,principles of computer composition,0,lihm21/com,646386464,Verilog,com,10,0,2023-05-28 08:40:06+00:00,[],None
805,https://github.com/LeeChunHei/ov_ftdi-de0-nano-port.git,2023-05-31 14:55:41+00:00,A porting of openvizsla with DE0-Nano,0,LeeChunHei/ov_ftdi-de0-nano-port,647805243,Verilog,ov_ftdi-de0-nano-port,20764,0,2023-07-02 15:44:23+00:00,[],None
806,https://github.com/maarikazuki/pulse.git,2023-05-17 05:48:14+00:00,,0,maarikazuki/pulse,641761591,Verilog,pulse,2,0,2023-05-17 06:27:19+00:00,[],None
807,https://github.com/Navya20011982/100-days-of-rtl.git,2023-05-26 06:09:39+00:00,,0,Navya20011982/100-days-of-rtl,645650146,Verilog,100-days-of-rtl,3049,0,2023-06-20 17:33:43+00:00,[],None
808,https://github.com/alishahali1382/hardwar2023.git,2023-06-01 06:30:49+00:00,,0,alishahali1382/hardwar2023,648071030,Verilog,hardwar2023,8,0,2023-06-01 14:01:17+00:00,[],https://api.github.com/licenses/mit
809,https://github.com/NikiSP/verilog_hardwar.git,2023-06-01 06:31:10+00:00,,0,NikiSP/verilog_hardwar,648071137,Verilog,verilog_hardwar,4,0,2023-06-01 14:01:12+00:00,[],https://api.github.com/licenses/mit
810,https://github.com/farbodhma/roztwoo.git,2023-06-01 06:41:21+00:00,,0,farbodhma/roztwoo,648074224,Verilog,roztwoo,6,0,2023-06-01 06:41:27+00:00,[],https://api.github.com/licenses/mit
811,https://github.com/WillisHuang/prj_verilogboy.git,2023-06-03 08:06:15+00:00,a simple gameboy,0,WillisHuang/prj_verilogboy,648924333,Verilog,prj_verilogboy,1790,0,2023-06-03 09:42:45+00:00,[],None
812,https://github.com/HarithaGunarathna/8bit-Single-Cycle-Processor-in-Verilog-HDL.git,2023-06-02 15:07:50+00:00,"A single cycle processor was built using verilog- behavioural modeling. The basic functionalities implemented include an instruction fetch unit, a decoder, a register file, a control unit, an arithmetic and logic unit, and a data and instruction memory unit.",0,HarithaGunarathna/8bit-Single-Cycle-Processor-in-Verilog-HDL,648692156,Verilog,8bit-Single-Cycle-Processor-in-Verilog-HDL,622,0,2023-06-22 13:58:33+00:00,[],None
813,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-06.git,2023-06-02 17:06:44+00:00,,0,rajitha0119/100-DAYS-OF-RTL-DAY-06,648732139,Verilog,100-DAYS-OF-RTL-DAY-06,204,0,2023-06-02 17:08:58+00:00,[],None
814,https://github.com/Sunmq1995/Underlying-data.git,2023-06-02 12:32:54+00:00,Underlying data for paper “An Off-host Architecture for Large-scale Sorting on FPGA”,0,Sunmq1995/Underlying-data,648633203,Verilog,Underlying-data,14,0,2023-06-02 12:36:54+00:00,[],None
815,https://github.com/yogeshk0126/Count_clock-HDLbits-Solution.git,2023-06-01 13:21:34+00:00,Here is the verilog code of digital clock which is one of counter problem of HDLbits.  /hdlbits.01xz.net/wiki/Count_clock,0,yogeshk0126/Count_clock-HDLbits-Solution,648219750,Verilog,Count_clock-HDLbits-Solution,4,0,2023-06-01 13:38:59+00:00,[],None
816,https://github.com/GaryChen886/ICC-script.git,2023-06-02 08:04:14+00:00,,0,GaryChen886/ICC-script,648542986,Verilog,ICC-script,426,0,2023-06-02 08:22:21+00:00,[],None
817,https://github.com/MohamedKhaledMohamedAli/Pattern-Detector.git,2023-05-17 10:12:56+00:00,,0,MohamedKhaledMohamedAli/Pattern-Detector,641861350,Verilog,Pattern-Detector,20,0,2023-05-17 10:23:48+00:00,[],None
818,https://github.com/nadabadawi/user_proj_mul32.git,2023-05-17 16:14:20+00:00,,0,nadabadawi/user_proj_mul32,642010824,Verilog,user_proj_mul32,41721,0,2023-05-17 16:14:52+00:00,[],https://api.github.com/licenses/apache-2.0
819,https://github.com/Svorpal/FPGA_website.git,2023-05-17 19:20:52+00:00,,0,Svorpal/FPGA_website,642079604,Verilog,FPGA_website,23390,0,2023-05-17 19:21:24+00:00,[],https://api.github.com/licenses/mit
820,https://github.com/rupak10987/Graphics-Processor-Using-HDL.git,2023-05-19 03:39:16+00:00,"In this repo, Algorithms regarding Computer graphics are implemented to render object",0,rupak10987/Graphics-Processor-Using-HDL,642651094,Verilog,Graphics-Processor-Using-HDL,38300,0,2023-09-11 03:48:12+00:00,[],https://api.github.com/licenses/mit
821,https://github.com/benaxline/digital_logic_project_simple_processor.git,2023-05-17 05:27:31+00:00,,0,benaxline/digital_logic_project_simple_processor,641755588,Verilog,digital_logic_project_simple_processor,291,0,2023-05-21 12:56:39+00:00,[],None
822,https://github.com/Sarvesh1452/ADLD.git,2023-05-19 10:06:00+00:00,,0,Sarvesh1452/ADLD,642772384,Verilog,ADLD,2047,0,2023-05-19 10:07:06+00:00,[],None
823,https://github.com/TaePoong719/RISCV_CPU_Verilog.git,2023-06-01 02:00:59+00:00,Risc-v cpu implemented by Verilog,0,TaePoong719/RISCV_CPU_Verilog,648002379,Verilog,RISCV_CPU_Verilog,35,0,2023-06-01 02:07:18+00:00,[],None
824,https://github.com/dl123456123/btl-tkll.git,2023-05-17 12:16:03+00:00,,0,dl123456123/btl-tkll,641907053,Verilog,btl-tkll,878,0,2023-05-17 12:17:12+00:00,[],None
825,https://github.com/RiyaChordia/RISCV_and_ECC.git,2023-05-23 11:55:27+00:00,,0,RiyaChordia/RISCV_and_ECC,644380309,Verilog,RISCV_and_ECC,2169,0,2023-05-23 11:57:43+00:00,[],None
826,https://github.com/monica0325/CA_Final_Project.git,2023-05-23 08:30:46+00:00,,0,monica0325/CA_Final_Project,644299634,Verilog,CA_Final_Project,248,0,2023-05-23 08:33:18+00:00,[],None
827,https://github.com/delidoktor/lattice_icestick_mba.git,2023-05-20 13:50:11+00:00,,0,delidoktor/lattice_icestick_mba,643226723,Verilog,lattice_icestick_mba,293,0,2023-05-20 13:52:33+00:00,[],None
828,https://github.com/rgongw0414/2023-IC-Design-Contest.git,2023-05-20 13:22:04+00:00,Graduate-Level Cell-Based Digital Circuit Design Category,0,rgongw0414/2023-IC-Design-Contest,643218857,Verilog,2023-IC-Design-Contest,61576,0,2023-09-17 12:38:10+00:00,[],None
829,https://github.com/simgeozlemsarp/FB-CPU-RTL-TASARIMI.git,2023-05-23 10:08:53+00:00,"Bu proje kapsamında FB-CPU isminde bir işlemcinin Verilog dili ile RTL tasarımı ve tasarlanan işlemci üzerinde makine dili ile yazılan çeşitli kod parçacıkları yazılacaktır. Proje sonunda basit bir işlemcideki RAM, Kontrol Ünitesi ve Saklayıcıların bir arada çalışıp, makine dilindeki kod parçacıklarını nasıl yürütebildiği gözlemlenecektir. ",0,simgeozlemsarp/FB-CPU-RTL-TASARIMI,644339355,Verilog,FB-CPU-RTL-TASARIMI,3549,0,2023-05-23 10:12:14+00:00,[],None
830,https://github.com/Invariant64/Mips-CPU.git,2023-05-23 10:52:01+00:00,A Mips CPU(BJUT 2023 COA course design),0,Invariant64/Mips-CPU,644355733,Verilog,Mips-CPU,52,0,2023-09-11 11:36:52+00:00,[],None
831,https://github.com/JeewanthaUdeshika/8bit-Single-Cycle-Processor-in-Verilog-HDL.git,2023-05-26 16:09:31+00:00,"In this project, a 8bit single cycle processor is implemented using verilog HDL.",0,JeewanthaUdeshika/8bit-Single-Cycle-Processor-in-Verilog-HDL,645865654,Verilog,8bit-Single-Cycle-Processor-in-Verilog-HDL,2619,0,2023-05-26 16:18:52+00:00,[],None
832,https://github.com/EmirhanTemel/FPGA-Design-LabWorks.git,2023-05-26 19:02:05+00:00,,0,EmirhanTemel/FPGA-Design-LabWorks,645921067,Verilog,FPGA-Design-LabWorks,22,0,2023-05-26 20:15:19+00:00,[],None
833,https://github.com/meteorshowering/mips_singlecycleprocessor.git,2023-05-21 12:51:12+00:00,,0,meteorshowering/mips_singlecycleprocessor,643525014,Verilog,mips_singlecycleprocessor,722,0,2023-05-21 12:58:25+00:00,[],None
834,https://github.com/hyperboli/Akilov_task_plis.git,2023-05-18 17:01:04+00:00,Repository for storing my data on verilog.,0,hyperboli/Akilov_task_plis,642481051,Verilog,Akilov_task_plis,420,0,2023-05-18 23:11:34+00:00,[],None
835,https://github.com/nosc3453/Thunderbird-Tail-Light-DE10-Lite-Edition.git,2023-05-22 01:50:57+00:00,This is a digital logic FPGA project that utilizes the DE10-Lite FPGA board and Verilog code to recreate the distinctive lighting sequences of a 1966 Ford Thunderbird. By Noah Schwartz,0,nosc3453/Thunderbird-Tail-Light-DE10-Lite-Edition,643709863,Verilog,Thunderbird-Tail-Light-DE10-Lite-Edition,2,0,2023-05-23 20:59:31+00:00,[],None
836,https://github.com/mruchann/Logic-Design.git,2023-05-19 21:53:20+00:00,"CENG232 Lab Assignments, done by Logisim or written in Verilog.",0,mruchann/Logic-Design,643014453,Verilog,Logic-Design,2667,0,2023-05-19 23:19:31+00:00,[],None
837,https://github.com/Digitales-II/periferico_display.git,2023-05-21 23:19:22+00:00,,0,Digitales-II/periferico_display,643681719,Verilog,periferico_display,153,0,2023-05-21 23:37:33+00:00,[],None
838,https://github.com/HLingLu/Image-Processing-Filter.git,2023-05-20 00:45:22+00:00,2021 ICD Project – Digital IC Design,0,HLingLu/Image-Processing-Filter,643047994,Verilog,Image-Processing-Filter,3081,0,2023-05-20 00:53:24+00:00,[],None
839,https://github.com/Gunashree13/IRIS-labs.git,2023-05-28 18:09:22+00:00,recruitments,0,Gunashree13/IRIS-labs,646539781,Verilog,IRIS-labs,5,0,2023-06-03 17:48:20+00:00,[],None
840,https://github.com/mustafaenes/Gomulu_Sistemler_Proje.git,2023-05-29 07:43:30+00:00,Proje Ödevi,0,mustafaenes/Gomulu_Sistemler_Proje,646724901,Verilog,Gomulu_Sistemler_Proje,3303,0,2023-05-29 07:44:08+00:00,[],https://api.github.com/licenses/mit
841,https://github.com/Crina20/smartSafeBox.git,2023-05-28 15:16:32+00:00,,0,Crina20/smartSafeBox,646492126,Verilog,smartSafeBox,53,0,2023-05-28 15:44:47+00:00,[],None
842,https://github.com/Aplace0927/CSED273-Digital-System-Design-Final.git,2023-05-30 17:32:01+00:00,POSTECH 2023 Spring [CSED273] Digital System Design Final Project,0,Aplace0927/CSED273-Digital-System-Design-Final,647395820,Verilog,CSED273-Digital-System-Design-Final,28,0,2023-06-11 10:34:38+00:00,[],None
843,https://github.com/sayoojkj/Verilog_FSM.git,2023-05-29 15:28:17+00:00,,0,sayoojkj/Verilog_FSM,646895507,Verilog,Verilog_FSM,153,0,2023-05-29 15:32:57+00:00,[],None
844,https://github.com/EldadHellerman/FPGA-programs.git,2023-05-22 19:32:21+00:00,,0,EldadHellerman/FPGA-programs,644085282,Verilog,FPGA-programs,7,0,2023-05-22 19:32:30+00:00,[],None
845,https://github.com/amysamy2002/user_proj_aes.git,2023-05-20 16:53:28+00:00,,0,amysamy2002/user_proj_aes,643279509,Verilog,user_proj_aes,41725,0,2023-05-20 16:54:00+00:00,[],https://api.github.com/licenses/apache-2.0
846,https://github.com/LikaiZzz/HDLBits_Solution.git,2023-05-21 05:24:25+00:00,HDLBits_Solution,0,LikaiZzz/HDLBits_Solution,643421768,Verilog,HDLBits_Solution,3,0,2023-05-21 08:32:17+00:00,[],None
847,https://github.com/omkarmannepula/verilogHUB.git,2023-05-23 17:38:57+00:00,verilog code for logic gates,0,omkarmannepula/verilogHUB,644522908,Verilog,verilogHUB,2,0,2023-05-23 17:39:04+00:00,[],None
848,https://github.com/mohamed-mohamed-tarek/SINGLE-PORT-RAM-VERILOG.git,2023-05-25 19:38:30+00:00,,0,mohamed-mohamed-tarek/SINGLE-PORT-RAM-VERILOG,645496844,Verilog,SINGLE-PORT-RAM-VERILOG,1903,0,2023-05-25 19:39:50+00:00,[],None
849,https://github.com/anamrzv/ArbiterRISCV.git,2023-05-25 13:45:12+00:00,,0,anamrzv/ArbiterRISCV,645366046,Verilog,ArbiterRISCV,1839,0,2023-07-28 10:03:48+00:00,[],
850,https://github.com/omikami747/tinycpu.git,2023-05-25 16:07:25+00:00,,0,omikami747/tinycpu,645424386,Verilog,tinycpu,15718,0,2023-05-25 17:43:35+00:00,[],None
851,https://github.com/5hayanB/test.git,2023-06-03 05:49:34+00:00,,0,5hayanB/test,648893842,Verilog,test,41725,0,2023-06-03 05:50:11+00:00,[],https://api.github.com/licenses/apache-2.0
852,https://github.com/nicedayd/water.git,2023-06-03 14:53:07+00:00,,0,nicedayd/water,649029936,Verilog,water,93689,0,2023-06-03 14:53:43+00:00,[],https://api.github.com/licenses/apache-2.0
853,https://github.com/pthomas/caravel_trig_functions.git,2023-06-04 17:43:32+00:00,,0,pthomas/caravel_trig_functions,649391528,Verilog,caravel_trig_functions,41725,0,2023-06-04 17:44:09+00:00,[],https://api.github.com/licenses/apache-2.0
854,https://github.com/Ramagond15/ADLD.git,2023-05-19 08:44:40+00:00,advanced digital logic design using verilog HDL,0,Ramagond15/ADLD,642742419,Verilog,ADLD,8497,0,2023-05-19 08:51:18+00:00,[],None
855,https://github.com/sangeedh/Exploring_Verilog_HDL.git,2023-06-01 16:12:44+00:00,A collection of Verilog programs for beginners.,0,sangeedh/Exploring_Verilog_HDL,648288385,Verilog,Exploring_Verilog_HDL,44,0,2024-02-13 07:49:06+00:00,[],https://api.github.com/licenses/mit
856,https://github.com/Joanjajas/touch_control.git,2023-05-26 20:17:18+00:00,Touch screen controller written in verilog,0,Joanjajas/touch_control,645941933,Verilog,touch_control,273,0,2024-02-21 13:38:41+00:00,[],None
857,https://github.com/KT0331/IC_Contest.git,2023-05-21 19:14:19+00:00,,0,KT0331/IC_Contest,643631503,Verilog,IC_Contest,5172,0,2023-06-22 11:57:21+00:00,[],None
