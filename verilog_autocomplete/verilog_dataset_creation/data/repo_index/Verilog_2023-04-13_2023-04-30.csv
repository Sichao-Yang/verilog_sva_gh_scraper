,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/lauchinyuan/FPGA_QPSK-modem.git,2023-04-15 09:04:26+00:00,"A QPSK modem written in the Verilog hardware description language, that can be implemented on FPGA",14,lauchinyuan/FPGA_QPSK-modem,628217542,Verilog,FPGA_QPSK-modem,16321,60,2024-04-11 05:01:23+00:00,"['fpga', 'matlab', 'qpsk', 'verilog', 'vivado']",None
1,https://github.com/lauchinyuan/Booth4_wallace_MULT16_16.git,2023-04-19 02:31:07+00:00,A 16-bit by 16-bit signed binary multiplier based on the Radix-4 Booth algorithm and Wallace Tree reduction,0,lauchinyuan/Booth4_wallace_MULT16_16,629780534,Verilog,Booth4_wallace_MULT16_16,11633,16,2024-04-09 11:41:33+00:00,[],https://api.github.com/licenses/mit
2,https://github.com/merldsu/RISCV_Pipeline_Core.git,2023-04-30 06:09:26+00:00,This repository contains the design files of RISC-V Pipeline Core,4,merldsu/RISCV_Pipeline_Core,634442939,Verilog,RISCV_Pipeline_Core,945,14,2024-03-25 17:21:09+00:00,[],https://api.github.com/licenses/apache-2.0
3,https://github.com/TonyCrane/CraneCPU.git,2023-04-26 12:13:13+00:00,RISC-V SingleCycle/Pipeline CPU (lab of ZJU Computer System Series),0,TonyCrane/CraneCPU,632925140,Verilog,CraneCPU,88,13,2023-10-09 07:09:18+00:00,"['cpu', 'os', 'risc-v', 'school-project', 'system', 'verilog']",https://api.github.com/licenses/mit
4,https://github.com/aneeshkandi14/ascon-hw-public.git,2023-04-25 09:37:10+00:00,,0,aneeshkandi14/ascon-hw-public,632380489,Verilog,ascon-hw-public,1823,12,2024-02-07 21:01:18+00:00,[],None
5,https://github.com/Ummidichandrika/RTL-Examples.git,2023-04-26 05:49:19+00:00,,1,Ummidichandrika/RTL-Examples,632780497,Verilog,RTL-Examples,27,9,2023-11-25 06:13:08+00:00,[],None
6,https://github.com/utnslab/RingleaderNIC.git,2023-04-18 17:52:08+00:00,,0,utnslab/RingleaderNIC,629632022,Verilog,RingleaderNIC,2299,9,2024-04-01 04:14:12+00:00,[],https://api.github.com/licenses/mit
7,https://github.com/leesou/Step-into-RISCV.git,2023-04-25 13:38:39+00:00,TA's implementation for the project of Computer Architecture and Intelligent Chip Design (23 Spring),1,leesou/Step-into-RISCV,632475962,Verilog,Step-into-RISCV,109,9,2023-07-14 12:28:07+00:00,[],None
8,https://github.com/FeldmeierMichael/MIPI_CSI_2.git,2023-04-27 09:09:43+00:00,,5,FeldmeierMichael/MIPI_CSI_2,633329752,Verilog,MIPI_CSI_2,2287,8,2023-11-02 03:13:50+00:00,[],None
9,https://github.com/RTimothyEdwards/caravel_openframe_project.git,2023-04-27 21:34:42+00:00,"Example digital project for the Efabless Caravel ""openframe"" harness",7,RTimothyEdwards/caravel_openframe_project,633598695,Verilog,caravel_openframe_project,7529,7,2024-03-09 07:54:56+00:00,[],https://api.github.com/licenses/apache-2.0
10,https://github.com/chsachinkumar/HDLBits-Verilog-Solutions.git,2023-04-24 01:31:10+00:00,"This repository contains solutions to the practice problems available on the HDLBits platform, which cover a wide range of topics in Digital Logic Design using Verilog HDL. The solutions have been written by me and verified to be correct using the HDLBits online tool (Icarus Verilog).",0,chsachinkumar/HDLBits-Verilog-Solutions,631753976,Verilog,HDLBits-Verilog-Solutions,78,7,2024-03-29 16:41:41+00:00,[],https://api.github.com/licenses/apache-2.0
11,https://github.com/machdyne/fpga-dac.git,2023-04-29 10:35:28+00:00,FPGA-based sigma-delta DAC and PCM audio player,0,machdyne/fpga-dac,634190484,Verilog,fpga-dac,6,6,2024-02-27 08:59:59+00:00,[],
12,https://github.com/Shashvat300/100_Days_of_RTL.git,2023-04-18 15:34:17+00:00,,1,Shashvat300/100_Days_of_RTL,629577151,Verilog,100_Days_of_RTL,163,6,2023-05-01 07:40:28+00:00,[],None
13,https://github.com/caszca/CPU.git,2023-04-16 00:36:32+00:00,多周期流水25条基础MIPS指令CPU实现。测试环境：vivado。编写语言：verilog。必选书籍：《自己动手写CPU》,0,caszca/CPU,628442505,Verilog,CPU,144,5,2024-04-06 09:59:46+00:00,[],None
14,https://github.com/uni-v/uranium-235.git,2023-04-29 12:35:43+00:00,An open-source RISC-V processor.,2,uni-v/uranium-235,634220017,Verilog,uranium-235,688,5,2023-07-28 09:13:39+00:00,[],https://api.github.com/licenses/apache-2.0
15,https://github.com/UzixLS/zxkit1-vga-scandoubler-firmware.git,2023-04-17 08:42:17+00:00,Alternate firmware for ZXKIT1 VGA scandoubler for ZX Spectrum,2,UzixLS/zxkit1-vga-scandoubler-firmware,628915426,Verilog,zxkit1-vga-scandoubler-firmware,9,5,2024-01-04 00:23:00+00:00,"['vga', 'zx-spectrum', 'zxspectrum']",None
16,https://github.com/simple-crypto/SMAesH-challenge.git,2023-04-27 07:39:09+00:00,Framework for the side-channel challenge of the SMAesH implementation,0,simple-crypto/SMAesH-challenge,633295475,Verilog,SMAesH-challenge,25616,5,2024-03-22 14:03:50+00:00,[],None
17,https://github.com/T7imal/USTC_LuJianLiang_COD_Lab.git,2023-04-16 07:10:42+00:00,,0,T7imal/USTC_LuJianLiang_COD_Lab,628512509,Verilog,USTC_LuJianLiang_COD_Lab,76169,5,2024-03-24 16:05:22+00:00,[],None
18,https://github.com/Mightlaus/AlarmWithBreathingLight.git,2023-04-19 13:19:17+00:00,,1,Mightlaus/AlarmWithBreathingLight,630004226,Verilog,AlarmWithBreathingLight,789,4,2023-05-10 13:36:56+00:00,[],None
19,https://github.com/LX-IC/e203_hbirdv2.git,2023-04-16 05:03:57+00:00,,0,LX-IC/e203_hbirdv2,628487130,Verilog,e203_hbirdv2,62252,4,2023-10-30 13:15:49+00:00,[],None
20,https://github.com/muneeb-mbytes/verilogHDL.git,2023-04-18 09:00:28+00:00,,1,muneeb-mbytes/verilogHDL,629411152,Verilog,verilogHDL,192,4,2023-08-01 14:54:33+00:00,[],None
21,https://github.com/olofk/spi_ram_loader.git,2023-04-18 17:04:33+00:00,SPI RAM loader,1,olofk/spi_ram_loader,629614039,Verilog,spi_ram_loader,24,4,2023-05-15 09:41:33+00:00,[],None
22,https://github.com/AhmedHamed3699/AES-Encryption.git,2023-04-27 23:26:37+00:00,An AES encryption and decryption project that follows SPI (Serial Peripheral Interface) specification. Implemented in Verilog,2,AhmedHamed3699/AES-Encryption,633624191,Verilog,AES-Encryption,213,4,2023-11-29 11:12:18+00:00,"['aes', 'aes-encryption', 'fpga', 'logic-design', 'spi', 'verilog']",None
23,https://github.com/efabless/EF_PSRAM_CTRL.git,2023-04-23 20:26:01+00:00,A Quad I/O SPI Pseudo Static RAM (PSRAM) Controller ,1,efabless/EF_PSRAM_CTRL,631695096,Verilog,EF_PSRAM_CTRL,46,4,2024-01-01 09:09:16+00:00,[],https://api.github.com/licenses/apache-2.0
24,https://github.com/yczheng-hit/apb_cordic.git,2023-04-13 12:29:06+00:00,,0,yczheng-hit/apb_cordic,627417303,Verilog,apb_cordic,1306,3,2023-06-15 06:19:32+00:00,[],None
25,https://github.com/suoglu/xorshiftPlus.git,2023-04-16 22:43:27+00:00,Pseudorandom number generator,0,suoglu/xorshiftPlus,628754578,Verilog,xorshiftPlus,10,3,2024-02-27 00:33:30+00:00,[],https://api.github.com/licenses/cern-ohl-w-2.0
26,https://github.com/Epsilon10/ooo-processor.git,2023-04-13 02:26:08+00:00,Out-Of-Order Superscalar processor for the ARM instruction set,0,Epsilon10/ooo-processor,627212813,Verilog,ooo-processor,105,3,2023-07-22 16:03:50+00:00,[],None
27,https://github.com/ogssensor/chipignite_2304C.git,2023-04-27 08:34:10+00:00,Sigma Delta ADC 8 Bit SAR ADC,0,ogssensor/chipignite_2304C,633315827,Verilog,chipignite_2304C,46701,3,2024-03-24 07:59:50+00:00,[],https://api.github.com/licenses/apache-2.0
28,https://github.com/arpit306/5-Stage-Pipelined-MIPS32-RISC-Processor-Design-on-Verilog.git,2023-04-13 12:25:36+00:00,"This repository contains the details and the code for the MIPS32 ISA based RISC Processor, which is implemented in 5 stage pipelined configuration.",2,arpit306/5-Stage-Pipelined-MIPS32-RISC-Processor-Design-on-Verilog,627415908,Verilog,5-Stage-Pipelined-MIPS32-RISC-Processor-Design-on-Verilog,71,3,2024-03-26 16:20:09+00:00,"['microprocessors', 'mips32', 'nptel', 'risc', 'verilog']",https://api.github.com/licenses/mit
29,https://github.com/benipoo/yosys-docker.git,2023-04-17 21:02:19+00:00,"Working with yosys, but without the headache. Generates minimized AIG schematics from your directory of Verilog files. ",1,benipoo/yosys-docker,629205229,Verilog,yosys-docker,1489,3,2023-09-15 20:51:00+00:00,[],https://api.github.com/licenses/mit
30,https://github.com/efabless/EF_UART.git,2023-04-23 18:59:59+00:00,Universal Asynchronous Receiver/Transmitter (UART) with FIFOs Soft IP,2,efabless/EF_UART,631674000,Verilog,EF_UART,1032,3,2024-04-08 13:53:28+00:00,[],https://api.github.com/licenses/apache-2.0
31,https://github.com/drhl/I2S_to_TDA1540.git,2023-04-25 16:29:46+00:00,Converts I2S to TDA1540 input format,1,drhl/I2S_to_TDA1540,632549748,Verilog,I2S_to_TDA1540,2801,3,2024-03-16 01:44:29+00:00,"['audio', 'converter', 'cpld', 'fpga', 'i2s', 'tda1540']",https://api.github.com/licenses/mit
32,https://github.com/k-nasim/synchronizers-CDC.git,2023-04-28 10:03:50+00:00,basic synchronizers used in CDC paths ( Verilog),0,k-nasim/synchronizers-CDC,633801649,Verilog,synchronizers-CDC,24,3,2023-10-31 22:11:42+00:00,[],None
33,https://github.com/aceaton/475_final.git,2023-04-29 20:43:23+00:00,,0,aceaton/475_final,634349771,Verilog,475_final,38166,2,2023-05-08 20:36:03+00:00,[],None
34,https://github.com/jdcasanasr/lagarto_v.git,2023-04-18 16:13:51+00:00,An In-Order Implementation of the RISC-V Vector ISA based on the Lagarto Hun Processor,1,jdcasanasr/lagarto_v,629594130,Verilog,lagarto_v,762,2,2024-03-07 02:23:30+00:00,[],None
35,https://github.com/LLLjun/sparse-tensor-core.git,2023-04-18 10:51:09+00:00,,2,LLLjun/sparse-tensor-core,629454175,Verilog,sparse-tensor-core,122,2,2023-11-14 07:17:40+00:00,[],None
36,https://github.com/jackbang/MulAdd_Acc.git,2023-04-29 14:30:21+00:00,EE218 VLSI final project,0,jackbang/MulAdd_Acc,634251441,Verilog,MulAdd_Acc,4844,2,2023-09-27 07:03:46+00:00,[],None
37,https://github.com/sainavaneet/Verilog.git,2023-04-18 14:30:53+00:00,,0,sainavaneet/Verilog,629547756,Verilog,Verilog,4,2,2024-02-01 05:56:07+00:00,[],None
38,https://github.com/mostafa-elgendy22/Adder-Subtractor-Circuits.git,2023-04-16 11:55:02+00:00,Parametrized Verilog implementation of different architectures of adder / subtractor circuits.,0,mostafa-elgendy22/Adder-Subtractor-Circuits,628579849,Verilog,Adder-Subtractor-Circuits,953,2,2024-03-30 20:57:16+00:00,"['carry-look-ahead-adder', 'carry-select-adder', 'carry-skip-adder', 'ripple-carry-adder']",https://api.github.com/licenses/mit
39,https://github.com/Eggy115/Verilog.git,2023-04-18 19:40:04+00:00,Verilog,0,Eggy115/Verilog,629671115,Verilog,Verilog,32,2,2023-04-18 19:49:05+00:00,[],https://api.github.com/licenses/gpl-3.0
40,https://github.com/Glucose-180/UCAS-COD.git,2023-04-21 09:59:57+00:00,UCAS-计算机组成原理研讨课,1,Glucose-180/UCAS-COD,630855814,Verilog,UCAS-COD,164,2,2024-02-12 02:29:37+00:00,[],None
41,https://github.com/Jerc007/Hardware_Evaluation_Environment.git,2023-04-17 13:49:34+00:00,"The proposed environment supports the implementation of a methodology focuses on the accurate and efficient analysis of fault effects in microarchitectural control units of GPUs, as well as their capacity to propagate, possibly identifying equivalent error effects during the execution of instructions by a parallel application.",1,Jerc007/Hardware_Evaluation_Environment,629039326,Verilog,Hardware_Evaluation_Environment,173251,2,2023-05-26 10:07:12+00:00,[],https://api.github.com/licenses/mit
42,https://github.com/majx1996/axi_interconnect.git,2023-04-23 14:08:38+00:00,AXI4 Interconnect,1,majx1996/axi_interconnect,631591921,Verilog,axi_interconnect,13,2,2024-02-09 14:53:57+00:00,[],None
43,https://github.com/zhuzhu81998/Arithmetic-Logic-Unit.git,2023-04-21 15:00:18+00:00,"An ALU designed for the coursework ""Digital Design and Computer Architecture"" given by Prof. Onur Mutlu at ETH Zurich (Spring 2023)",0,zhuzhu81998/Arithmetic-Logic-Unit,630959272,Verilog,Arithmetic-Logic-Unit,6,2,2023-09-17 12:47:27+00:00,"['arithmetic-logic-unit', 'computer-architecture', 'microprocessor', 'verilog']",None
44,https://github.com/ricardobizerra/if675-sd-p3.git,2023-04-14 02:14:42+00:00,"Project to emulate a microwave controller and logic, built with Verilog",2,ricardobizerra/if675-sd-p3,627694961,Verilog,if675-sd-p3,4113,2,2023-12-24 15:55:43+00:00,[],None
45,https://github.com/Sanya000/reservoir-computing.git,2023-04-29 10:26:33+00:00,A VHDL project proposing an implementation of a hardware oriented reservoir computer on FPGA’s to create a crypto-chaotic communication channel,0,Sanya000/reservoir-computing,634188224,Verilog,reservoir-computing,2627,2,2024-01-12 10:16:48+00:00,[],None
46,https://github.com/HaHaJun1101/EGO1-Whack_A_Mole_GAME.git,2023-04-28 06:39:13+00:00,A verilog-based Whack-a-Mole game project running on an EGO1 development board.,0,HaHaJun1101/EGO1-Whack_A_Mole_GAME,633729463,Verilog,EGO1-Whack_A_Mole_GAME,3505,2,2024-03-12 07:19:07+00:00,[],None
47,https://github.com/Zhizhifeng/Nexys4-Oscilloscope.git,2023-04-14 11:11:24+00:00,,0,Zhizhifeng/Nexys4-Oscilloscope,627861104,Verilog,Nexys4-Oscilloscope,2033,2,2024-04-02 13:33:29+00:00,[],None
48,https://github.com/diqingz/Fruit-ninja-on-FPGA.git,2023-04-13 00:19:50+00:00,,0,diqingz/Fruit-ninja-on-FPGA,627180714,Verilog,Fruit-ninja-on-FPGA,73220,2,2023-04-22 07:22:01+00:00,[],None
49,https://github.com/ishaan40/RISC-V-Processor.git,2023-04-23 21:59:13+00:00,"A 5-stage pipelined single-core processor with support for M extension prefetching, and 2-level set-associative cache. ",0,ishaan40/RISC-V-Processor,631714522,Verilog,RISC-V-Processor,26006,2,2023-05-17 11:16:27+00:00,[],https://api.github.com/licenses/mit
50,https://github.com/slipegg/Do-not-step-spider-block.git,2023-04-19 08:53:25+00:00,同济大学数字逻辑的大作业，使用了VGA，蓝牙，7短数码管，蜂鸣器这4个外设，使用Verilog语言在NEXYS 4 DDR Atrix-7开发板上完成的与别踩白块游戏规则相同的游戏——别踩蜘蛛块。,0,slipegg/Do-not-step-spider-block,629900464,Verilog,Do-not-step-spider-block,2722,2,2023-12-24 05:32:35+00:00,[],None
51,https://github.com/BlagojeBlagojevic/vga_verilog.git,2023-04-24 13:03:53+00:00,Implementation of a vga interface  on  a Basys 3 FPGA,0,BlagojeBlagojevic/vga_verilog,631975759,Verilog,vga_verilog,116,1,2023-04-24 15:29:42+00:00,"['fpga', 'verilog']",None
52,https://github.com/abzman/Mojo-V3-dev-boards.git,2023-04-19 05:48:11+00:00,boards to use my mojo v3 as a development system for other FPGA projects,0,abzman/Mojo-V3-dev-boards,629831436,Verilog,Mojo-V3-dev-boards,852,1,2023-06-06 05:32:23+00:00,[],https://api.github.com/licenses/unlicense
53,https://github.com/Abd1997-Dev/Design-of-reduced-latency-and-increased-throughput-Polar-Decoder.git,2023-04-18 05:16:50+00:00,The projects consists of the design and testbench files of polar decoder. The design is based on the research paper published on Signal Processing for communications Symposium 2012,0,Abd1997-Dev/Design-of-reduced-latency-and-increased-throughput-Polar-Decoder,629329914,Verilog,Design-of-reduced-latency-and-increased-throughput-Polar-Decoder,268,1,2023-12-10 13:51:49+00:00,[],None
54,https://github.com/YukunXue/TPU_systolic_array.git,2023-04-24 07:23:44+00:00,Convolution accelerated by systolic array,0,YukunXue/TPU_systolic_array,631845382,Verilog,TPU_systolic_array,161,1,2024-01-16 08:14:31+00:00,[],None
55,https://github.com/is22mtech14003/2D-Coordinate-Rotating-and-Vectoring-based-Design-Methodology-CORDIC-using-Verilog-HDL.git,2023-04-27 16:39:00+00:00,,0,is22mtech14003/2D-Coordinate-Rotating-and-Vectoring-based-Design-Methodology-CORDIC-using-Verilog-HDL,633505423,Verilog,2D-Coordinate-Rotating-and-Vectoring-based-Design-Methodology-CORDIC-using-Verilog-HDL,892,1,2024-04-10 09:47:17+00:00,[],None
56,https://github.com/RISCO-5bola/risc-v.git,2023-04-29 20:59:15+00:00,,1,RISCO-5bola/risc-v,634353081,Verilog,risc-v,4524,1,2023-06-21 10:12:39+00:00,[],None
57,https://github.com/PRAGATI-0102/Down-Counter-Day-019-.git,2023-04-28 05:16:42+00:00,"A down counter is a digital circuit that counts down from a given value to zero, and then resets itself to the original value to repeat the process.",0,PRAGATI-0102/Down-Counter-Day-019-,633705549,Verilog,Down-Counter-Day-019-,54,1,2023-05-13 09:49:59+00:00,[],None
58,https://github.com/VallepalliDheeraj/All-Counters-Using-Verilog.git,2023-04-28 12:04:36+00:00,,0,VallepalliDheeraj/All-Counters-Using-Verilog,633841510,Verilog,All-Counters-Using-Verilog,3,1,2023-04-28 12:09:31+00:00,[],None
59,https://github.com/SeyyedAhmadRokni/CL_Lab3.git,2023-04-25 12:50:11+00:00,,0,SeyyedAhmadRokni/CL_Lab3,632455213,Verilog,CL_Lab3,26,1,2023-08-20 05:45:06+00:00,[],None
60,https://github.com/Richard-zzj/EEC-180.git,2023-04-14 23:17:53+00:00,EEC 180 project,0,Richard-zzj/EEC-180,628100709,Verilog,EEC-180,7,1,2023-05-19 01:12:40+00:00,[],None
61,https://github.com/ogssensor/SAR_ADC.git,2023-04-27 03:06:33+00:00,,0,ogssensor/SAR_ADC,633217806,Verilog,SAR_ADC,293745,1,2023-06-10 10:19:44+00:00,[],https://api.github.com/licenses/apache-2.0
62,https://github.com/Buenobarbie/karatsuba.git,2023-04-19 12:15:24+00:00,,0,Buenobarbie/karatsuba,629977776,Verilog,karatsuba,69,1,2024-02-16 23:03:20+00:00,[],None
63,https://github.com/peleemanuel/srt4-simple.git,2023-04-19 19:51:28+00:00,,0,peleemanuel/srt4-simple,630161356,Verilog,srt4-simple,7218,1,2024-02-23 17:51:03+00:00,[],https://api.github.com/licenses/mit
64,https://github.com/ShreyB2091/CSE-BUBBLE-Processor.git,2023-04-21 20:26:29+00:00,,0,ShreyB2091/CSE-BUBBLE-Processor,631058992,Verilog,CSE-BUBBLE-Processor,1477,1,2024-03-13 06:23:05+00:00,"['assembly', 'cs220', 'cse', 'iitk', 'mips', 'processor', 'sem-4']",None
65,https://github.com/efabless/tinytapeout-rca.git,2023-04-28 12:02:01+00:00,,0,efabless/tinytapeout-rca,633840550,Verilog,tinytapeout-rca,192348,1,2023-07-31 20:49:20+00:00,[],https://api.github.com/licenses/apache-2.0
66,https://github.com/henriqueedu2001/SDII_Registrador.git,2023-04-18 22:55:45+00:00,,0,henriqueedu2001/SDII_Registrador,629727458,Verilog,SDII_Registrador,68,1,2024-02-24 22:28:50+00:00,[],None
67,https://github.com/vSasakiv/RV64F_Processor.git,2023-04-24 21:21:30+00:00,,0,vSasakiv/RV64F_Processor,632169345,Verilog,RV64F_Processor,26708,1,2024-03-11 22:56:16+00:00,[],https://api.github.com/licenses/apache-2.0
68,https://github.com/WenbinTeng/t8051.git,2023-04-18 13:13:55+00:00,A soft CPU core compatible for Intel 8051.,0,WenbinTeng/t8051,629512217,Verilog,t8051,440,1,2023-05-19 16:57:06+00:00,['8051'],None
69,https://github.com/mariaclara-moura/microwave.git,2023-04-23 21:10:37+00:00,,0,mariaclara-moura/microwave,631704924,Verilog,microwave,1473,1,2023-04-23 21:43:33+00:00,[],None
70,https://github.com/DiegoBrine269/Arquitectura-32-bits.git,2023-04-27 01:01:05+00:00,Arquitectura de 32 bits en Verilog,0,DiegoBrine269/Arquitectura-32-bits,633185817,Verilog,Arquitectura-32-bits,15984,1,2023-05-06 02:30:18+00:00,[],None
71,https://github.com/akramhany/AES-Encryption-Decryption.git,2023-04-18 13:09:10+00:00,,0,akramhany/AES-Encryption-Decryption,629510075,Verilog,AES-Encryption-Decryption,2228,1,2024-02-23 00:25:09+00:00,[],None
72,https://github.com/laijinlin/datan_exam.git,2023-04-28 08:58:29+00:00,达坦科技的笔试题,0,laijinlin/datan_exam,633778724,Verilog,datan_exam,60,1,2024-03-22 02:20:38+00:00,[],None
73,https://github.com/RoshinEdge/PGNoCv3.git,2023-04-13 11:20:55+00:00,Программно-аппаратный комплекс для прототипирования сети на кристалле на двух ПЛИС,1,RoshinEdge/PGNoCv3,627390874,Verilog,PGNoCv3,11332,1,2023-04-13 12:16:11+00:00,[],None
74,https://github.com/moa234/AES-encryption-decryption.git,2023-04-23 14:11:53+00:00,,0,moa234/AES-encryption-decryption,631592824,Verilog,AES-encryption-decryption,44,1,2023-06-13 16:29:29+00:00,[],None
75,https://github.com/matchupikchu/data_parity_filter.git,2023-04-17 15:19:07+00:00,,0,matchupikchu/data_parity_filter,629080348,Verilog,data_parity_filter,25,1,2023-04-24 12:45:56+00:00,[],None
76,https://github.com/Residuum22/fpga_2d_fir_filter.git,2023-04-27 05:41:42+00:00,,0,Residuum22/fpga_2d_fir_filter,633255743,Verilog,fpga_2d_fir_filter,43713,1,2023-08-22 15:18:09+00:00,[],None
77,https://github.com/VallepalliDheeraj/Carry-Look-Ahead-Adder-Using-Verilog.git,2023-04-28 12:10:32+00:00,,0,VallepalliDheeraj/Carry-Look-Ahead-Adder-Using-Verilog,633843628,Verilog,Carry-Look-Ahead-Adder-Using-Verilog,2,1,2023-04-28 12:14:41+00:00,[],None
78,https://github.com/PRAGATI-0102/Ring_Counter-Day-021-.git,2023-04-30 15:46:52+00:00," A Ring Counter is a type of digital counter that consists of a series of flip-flops connected in a circular configuration, where the output of each flip-flop is connected to the input of the next flip-flop.",0,PRAGATI-0102/Ring_Counter-Day-021-,634581945,Verilog,Ring_Counter-Day-021-,84,1,2023-05-13 09:49:28+00:00,[],None
79,https://github.com/PRAGATI-0102/Gray_Counter-Day-020-.git,2023-04-29 10:04:01+00:00,"A Gray counter is a type of counter in which the output changes only one bit at a time, and adjacent numbers have only a one-bit difference, making it useful in many applications such as digital signal processing and communication systems.",0,PRAGATI-0102/Gray_Counter-Day-020-,634182560,Verilog,Gray_Counter-Day-020-,113,1,2023-05-13 09:49:30+00:00,[],None
80,https://github.com/Hellocoded/axi-spi.git,2023-04-17 04:26:24+00:00,axi spi ip,0,Hellocoded/axi-spi,628831422,Verilog,axi-spi,147103,1,2024-01-30 07:04:37+00:00,[],https://api.github.com/licenses/apache-2.0
81,https://github.com/roygabriel102/GRU-LSTM-Verliog.git,2023-04-28 01:26:55+00:00,,1,roygabriel102/GRU-LSTM-Verliog,633650160,Verilog,GRU-LSTM-Verliog,37,1,2024-02-29 04:01:13+00:00,[],None
82,https://github.com/gyxxc/tinyMIPS.git,2023-04-14 08:27:49+00:00,an uncompleted tiny MIPS32 soft core based on Altera Cyclone-IV EP4CE10F17C8,0,gyxxc/tinyMIPS,627802481,Verilog,tinyMIPS,103,1,2023-08-07 07:10:48+00:00,"['fpga-programming', 'softcore', 'verilog-project']",None
83,https://github.com/Wren6991/Hazard3-SWD-SoC.git,2023-04-20 19:14:24+00:00,Example Hazard3 + OpenDAP RISC-V SWD SoC integration,0,Wren6991/Hazard3-SWD-SoC,630618259,Verilog,Hazard3-SWD-SoC,103,1,2023-06-28 10:02:26+00:00,[],https://api.github.com/licenses/apache-2.0
84,https://github.com/Sinan997/gomulu-sistemler.git,2023-04-30 12:30:33+00:00,,0,Sinan997/gomulu-sistemler,634528583,Verilog,gomulu-sistemler,1,1,2023-08-01 07:22:06+00:00,[],None
85,https://github.com/jpenolio75/smp8.git,2023-04-21 06:48:02+00:00,An implementation of a simple 8-bit microprocessor on an Altera DE2-115 board for UNLV CpE 300L Digital Systems Architecture and Design final project.,0,jpenolio75/smp8,630788377,Verilog,smp8,9,1,2024-02-15 06:15:13+00:00,"['de2-115', 'verilog', 'altera-quartus', 'microprocessor']",https://api.github.com/licenses/mit
86,https://github.com/aniketuppin/16-Point-FFT---ASIC-Design-Flow.git,2023-04-27 13:47:27+00:00,VLSI Mini Project 2022-23,1,aniketuppin/16-Point-FFT---ASIC-Design-Flow,633436235,Verilog,16-Point-FFT---ASIC-Design-Flow,891,1,2023-09-15 14:37:44+00:00,[],None
87,https://github.com/bhendi-boi/verilog-practice.git,2023-04-29 04:50:48+00:00,A repo for documenting my verilog practice journey,0,bhendi-boi/verilog-practice,634111795,Verilog,verilog-practice,4416,1,2023-05-08 16:07:31+00:00,[],https://api.github.com/licenses/mit
88,https://github.com/ian-lab/uvm_prj.git,2023-04-22 12:55:04+00:00,,0,ian-lab/uvm_prj,631258191,Verilog,uvm_prj,71196,1,2023-08-08 15:05:05+00:00,[],None
89,https://github.com/muhammadali74/RISCV-Verilog.git,2023-04-24 16:56:08+00:00,,0,muhammadali74/RISCV-Verilog,632076438,Verilog,RISCV-Verilog,6684,1,2023-04-24 20:03:52+00:00,[],None
90,https://github.com/qifengle-s/FM-PWM-LED.git,2023-04-26 04:13:26+00:00,,0,qifengle-s/FM-PWM-LED,632755353,Verilog,FM-PWM-LED,34,1,2023-04-26 11:40:13+00:00,[],None
91,https://github.com/VLSILab/vlsi.git,2023-04-20 06:21:37+00:00,,0,VLSILab/vlsi,630323312,Verilog,vlsi,1299,1,2023-04-20 06:32:09+00:00,[],
92,https://github.com/edimkou/Design-of-a-Floating-Point-Unit.git,2023-04-21 18:51:50+00:00,"Design, functional simulation, and implementation (synthesis, placement and routing) of a Floating Point Adder in Verilog using the Xilinx Vivado® toolset. I also, test the design on Zedboard under different configurations.",0,edimkou/Design-of-a-Floating-Point-Unit,631034371,Verilog,Design-of-a-Floating-Point-Unit,53,1,2024-03-10 11:11:22+00:00,[],None
93,https://github.com/ValeriyAndreevichPushkarev/Add_16_bit.git,2023-04-17 09:08:02+00:00,Contains synthesis results for adder(16 bit),0,ValeriyAndreevichPushkarev/Add_16_bit,628925603,Verilog,Add_16_bit,390,1,2023-05-09 11:17:32+00:00,[],None
94,https://github.com/PRAGATI-0102/1X4_DEMUX-Day-005-.git,2023-04-14 14:55:59+00:00,A DEMUX is a digital circuit that takes a single input line and forwards it to one of several output lines based on the control signal.,0,PRAGATI-0102/1X4_DEMUX-Day-005-,627948862,Verilog,1X4_DEMUX-Day-005-,87,1,2023-04-23 04:39:40+00:00,[],None
95,https://github.com/Ding-weiyi/-.git,2023-04-24 13:27:16+00:00,HUST,0,Ding-weiyi/-,631986010,Verilog,-,6,1,2023-04-24 13:40:44+00:00,[],None
96,https://github.com/SharmaPrateek18/Fully_Connected_Neural_Network.git,2023-04-15 17:36:25+00:00,,0,SharmaPrateek18/Fully_Connected_Neural_Network,628357007,Verilog,Fully_Connected_Neural_Network,33294,1,2023-06-17 08:42:35+00:00,[],None
97,https://github.com/cai-zhi-jie/iccad2023a_benchmark.git,2023-04-30 01:43:40+00:00,benchmark for iccad 2023 problem A,0,cai-zhi-jie/iccad2023a_benchmark,634399445,Verilog,iccad2023a_benchmark,5625,1,2023-11-28 00:32:42+00:00,[],None
98,https://github.com/xqbf/CSC3050.git,2023-04-25 08:50:26+00:00,Computer Architecture Assignments Reference,0,xqbf/CSC3050,632362017,,CSC3050,2155,1,2023-12-18 07:07:34+00:00,[],https://api.github.com/licenses/mit
99,https://github.com/XiaohuMu/ECE385_Final_Project.git,2023-04-14 23:23:34+00:00,,0,XiaohuMu/ECE385_Final_Project,628101762,Verilog,ECE385_Final_Project,343301,1,2024-02-07 14:10:11+00:00,[],None
100,https://github.com/henriqueedu2001/RISC-V.git,2023-04-27 23:29:19+00:00,,1,henriqueedu2001/RISC-V,633624688,Verilog,RISC-V,5962,1,2024-02-10 13:05:33+00:00,[],None
101,https://github.com/ValeriyAndreevichPushkarev/Selector_16_bit.git,2023-04-18 14:31:23+00:00,Contains synthesis results for selector(12-14-16 bit),0,ValeriyAndreevichPushkarev/Selector_16_bit,629547984,Verilog,Selector_16_bit,1804,1,2023-05-09 11:17:40+00:00,[],None
102,https://github.com/visvaldas01/functional-schematics-1.git,2023-04-24 10:12:44+00:00,"Functional schematics, LW 1",0,visvaldas01/functional-schematics-1,631909891,Verilog,functional-schematics-1,267,1,2023-06-22 18:29:13+00:00,[],None
103,https://github.com/douglasojesus/coffee-machine.git,2023-04-30 19:28:23+00:00,Atividade proposta pela disciplina de M.I de Circuitos Digitais utilizando a metodologia PBL.,0,douglasojesus/coffee-machine,634641770,Verilog,coffee-machine,7166,1,2023-06-07 21:44:00+00:00,[],https://api.github.com/licenses/mit
104,https://github.com/VitalyAnkh/open-fpga-tutorial.git,2023-04-16 15:19:22+00:00,Open FPGA Tutorial,0,VitalyAnkh/open-fpga-tutorial,628638830,Verilog,open-fpga-tutorial,33664,1,2023-04-20 03:36:35+00:00,"['chisel', 'fpga', 'verilog']",None
105,https://github.com/mayammakram/RISCV32_CPU.git,2023-04-16 10:17:09+00:00,"In collaboration with Nada Badawi, a piplelined and a single cycle cpu were implemented based on RISCV32 Instrcution Set Architecture.",0,mayammakram/RISCV32_CPU,628555441,Verilog,RISCV32_CPU,1235,1,2023-11-28 10:32:46+00:00,[],None
106,https://github.com/PRAGATI-0102/4X1_Mux-Day-004-.git,2023-04-13 10:56:37+00:00,A MUX is a digital circuit that selects one of several input signals and forwards the selected input to a single output line based on the control signal.,0,PRAGATI-0102/4X1_Mux-Day-004-,627381971,Verilog,4X1_Mux-Day-004-,46,1,2023-04-23 04:39:39+00:00,[],None
107,https://github.com/allrighteveryday/GeekClub.git,2023-04-25 12:43:04+00:00,Geek club ,0,allrighteveryday/GeekClub,632452215,Verilog,GeekClub,2717,1,2023-04-25 13:02:46+00:00,[],None
108,https://github.com/PRAGATI-0102/Up_Counter-Day-018-.git,2023-04-27 17:06:41+00:00,"An up counter is a sequential digital circuit that counts upward from a given starting point, and is commonly used in applications such as timing, control, and measurement systems.",0,PRAGATI-0102/Up_Counter-Day-018-,633515614,Verilog,Up_Counter-Day-018-,86,1,2023-05-13 09:49:58+00:00,[],None
109,https://github.com/somaniarushi/riscpu.git,2023-04-16 17:40:19+00:00,📠 RISC-V ISA CPU Implementation,0,somaniarushi/riscpu,628680670,Verilog,riscpu,15867,1,2023-07-26 15:07:59+00:00,"['cpu', 'fpga', 'risc-v', 'verilog']",None
110,https://github.com/richard259/G6_imageprocessing.git,2023-04-14 19:59:01+00:00,ECE532 Project: FPGA accellerated image processing with handwritten digit recognition,0,richard259/G6_imageprocessing,628053818,Verilog,G6_imageprocessing,8989,1,2023-04-14 23:19:26+00:00,[],None
111,https://github.com/xaioxaioma/RO_PUF_Design.git,2023-04-20 08:14:48+00:00,,0,xaioxaioma/RO_PUF_Design,630363289,,RO_PUF_Design,24,1,2024-04-12 07:23:44+00:00,[],None
112,https://github.com/G1008/Verilog.git,2023-04-15 13:41:10+00:00,MyFirstProject,0,G1008/Verilog,628289020,Verilog,Verilog,17106,1,2023-06-13 14:50:38+00:00,[],None
113,https://github.com/vyom-elan/Counters-Verilog-.git,2023-04-24 18:59:54+00:00,,0,vyom-elan/Counters-Verilog-,632123670,Verilog,Counters-Verilog-,2,1,2023-07-08 03:48:40+00:00,[],None
114,https://github.com/Pietro4F/driver-for-sha-1-on-pynq-z2.git,2023-04-25 14:44:27+00:00,A Linux device driver for a crypto core in a PYNQ-Xilinx Board,0,Pietro4F/driver-for-sha-1-on-pynq-z2,632505264,Verilog,driver-for-sha-1-on-pynq-z2,9397,1,2023-12-06 11:28:21+00:00,[],None
115,https://github.com/abhinavprakash199/2D-Coordinate-Rotation-and-Vectoring-based-Design-Methodology-CORDIC-using-Verilog-HDL.git,2023-04-15 13:28:15+00:00,,0,abhinavprakash199/2D-Coordinate-Rotation-and-Vectoring-based-Design-Methodology-CORDIC-using-Verilog-HDL,628285378,Verilog,2D-Coordinate-Rotation-and-Vectoring-based-Design-Methodology-CORDIC-using-Verilog-HDL,1540,1,2024-04-10 09:47:15+00:00,[],None
116,https://github.com/Trehan-Mayank/P4_Vending_Machine_Controllers_VERILOG.git,2023-04-24 04:34:30+00:00,Vending Machine Controllers (VMC),1,Trehan-Mayank/P4_Vending_Machine_Controllers_VERILOG,631796030,Verilog,P4_Vending_Machine_Controllers_VERILOG,10,1,2023-04-26 18:34:17+00:00,[],None
117,https://github.com/YukunXue/pingpang_buffer.git,2023-04-16 11:36:47+00:00,pingpang operation by verilog (用verilog实现简单的乒乓操作，并且支持双向通道),0,YukunXue/pingpang_buffer,628575283,Verilog,pingpang_buffer,485,1,2023-04-17 03:45:06+00:00,[],None
118,https://github.com/senina-m/circuit_design.git,2023-04-24 11:42:19+00:00,,0,senina-m/circuit_design,631942524,Verilog,circuit_design,3248,1,2023-04-24 17:49:06+00:00,[],None
119,https://github.com/TeinkBR/lock_in_PLL.git,2023-04-15 19:34:24+00:00,,0,TeinkBR/lock_in_PLL,628386243,Verilog,lock_in_PLL,8,1,2023-05-29 13:23:19+00:00,[],None
120,https://github.com/liy0212/verilog_learning.git,2023-04-21 12:33:05+00:00,,0,liy0212/verilog_learning,630905024,Verilog,verilog_learning,653,1,2023-09-12 06:19:46+00:00,[],https://api.github.com/licenses/gpl-3.0
121,https://github.com/Kieran-Du/PROJECTS.git,2023-04-27 11:07:31+00:00,,0,Kieran-Du/PROJECTS,633373154,Verilog,PROJECTS,4397,1,2023-05-02 22:08:14+00:00,[],None
122,https://github.com/lq06668/Red-Light-Green-Light.git,2023-04-28 20:35:17+00:00,An attempt to make a game using Verilog connected to an FPGA board. Detailed description is available in the README file. ,0,lq06668/Red-Light-Green-Light,634019790,Verilog,Red-Light-Green-Light,16,1,2023-05-23 10:40:42+00:00,[],None
123,https://github.com/NouraMedhat28/UART-RX.git,2023-04-16 21:06:14+00:00,,0,NouraMedhat28/UART-RX,628734260,Verilog,UART-RX,7,1,2023-05-19 19:14:40+00:00,[],None
124,https://github.com/PRAGATI-0102/Decade_Counter-Day-008-.git,2023-04-17 15:49:32+00:00,Decade Counter using Verilog behavioral modeling. A decade counter is a synchronous counter that counts from 0 to 9 in decimal form.,0,PRAGATI-0102/Decade_Counter-Day-008-,629093078,Verilog,Decade_Counter-Day-008-,143,1,2023-04-23 04:39:16+00:00,[],None
125,https://github.com/ajs667/ece_5760_final_proj.git,2023-04-17 16:22:51+00:00,ece 5760 final project,0,ajs667/ece_5760_final_proj,629106490,Verilog,ece_5760_final_proj,590487,1,2023-12-18 03:21:27+00:00,[],https://api.github.com/licenses/mit
126,https://github.com/YoungSTM32/LDPC_FPGA.git,2023-04-19 02:19:37+00:00,,0,YoungSTM32/LDPC_FPGA,629777491,Verilog,LDPC_FPGA,4,1,2023-06-01 03:53:07+00:00,[],None
127,https://github.com/IG2001/FPGA-Ping-Pong-Game.git,2023-04-14 05:01:38+00:00,"This project is a ping pong game, reminisce of the old Atari ping pong game. It is coded in Verilog and uses a DE-10 Lite.",0,IG2001/FPGA-Ping-Pong-Game,627736014,Verilog,FPGA-Ping-Pong-Game,18,1,2023-11-06 17:57:22+00:00,[],None
128,https://github.com/nnk03/PIPELINE-GROUP-13-BATCH-2021-CO-LAB-IIT-PALAKKAD.git,2023-04-29 07:38:07+00:00,Pipelining using Verilog done during the Computer Organisation and Architecture Lab during Semester 3,0,nnk03/PIPELINE-GROUP-13-BATCH-2021-CO-LAB-IIT-PALAKKAD,634147610,Verilog,PIPELINE-GROUP-13-BATCH-2021-CO-LAB-IIT-PALAKKAD,5713,1,2023-06-14 09:21:41+00:00,"['instruction-set-architecture', 'risc-v', 'verilog']",None
129,https://github.com/beatriz-emiliano/LASD_2022.2.git,2023-04-27 20:36:20+00:00,Códigos referentes ao avanço do Laboratório de Arquitetura de Sistemas Digitais.,0,beatriz-emiliano/LASD_2022.2,633582647,Verilog,LASD_2022.2,10984,1,2023-08-11 00:42:22+00:00,[],None
130,https://github.com/sifferman/nes_controller_interface.git,2023-04-25 19:53:18+00:00,NES Controller Interface written in Verilog-2005,0,sifferman/nes_controller_interface,632625784,Verilog,nes_controller_interface,39,1,2023-08-11 02:13:26+00:00,"['fusesoc', 'nintendo-nes', 'verilog']",https://api.github.com/licenses/mit
131,https://github.com/VallepalliDheeraj/Ripple-Carry-Adder-Using-Verilog.git,2023-04-28 11:58:35+00:00,,0,VallepalliDheeraj/Ripple-Carry-Adder-Using-Verilog,633839420,Verilog,Ripple-Carry-Adder-Using-Verilog,1,1,2023-04-28 12:02:57+00:00,[],None
132,https://github.com/Ding-weiyi/MIPS_HUST.git,2023-04-24 13:13:55+00:00,微机原理实验,0,Ding-weiyi/MIPS_HUST,631980186,Verilog,MIPS_HUST,6,1,2023-04-24 13:38:34+00:00,[],None
133,https://github.com/ogssensor/sar_adc_2023_caravel.git,2023-04-27 05:08:04+00:00,,0,ogssensor/sar_adc_2023_caravel,633246978,Verilog,sar_adc_2023_caravel,17264,1,2023-04-27 05:12:37+00:00,[],https://api.github.com/licenses/apache-2.0
134,https://github.com/DapengFeng/FPGA-Sync.git,2023-04-15 14:07:00+00:00,Hardware Synchronization by FPGA,0,DapengFeng/FPGA-Sync,628296679,Verilog,FPGA-Sync,1,1,2023-04-23 09:58:30+00:00,[],None
135,https://github.com/shreyas1998/HSCA_Multipliers.git,2023-04-16 19:46:06+00:00,"FPGA implementation of Wallace, Dadda, Array and Booth Multipliers",1,shreyas1998/HSCA_Multipliers,628714914,Verilog,HSCA_Multipliers,5319,1,2023-08-02 12:35:34+00:00,[],None
136,https://github.com/bohepidan/simpleMIPS.git,2023-04-19 00:04:39+00:00,,0,bohepidan/simpleMIPS,629743541,Verilog,simpleMIPS,69,1,2023-08-11 20:19:57+00:00,[],None
137,https://github.com/Chshy/FPGA_QAM_Modulation.git,2023-04-17 01:38:32+00:00,,0,Chshy/FPGA_QAM_Modulation,628789524,Verilog,FPGA_QAM_Modulation,1198,1,2024-02-23 01:47:29+00:00,[],https://api.github.com/licenses/gpl-3.0
138,https://github.com/Mahdiyeh-Asgharpour/Computer-architecture.git,2023-04-19 17:51:59+00:00,in winter/spring semester of 2023,0,Mahdiyeh-Asgharpour/Computer-architecture,630118438,Verilog,Computer-architecture,12,0,2023-11-13 15:00:42+00:00,[],None
139,https://github.com/cowboy35927/Folding-FIR-Filter.git,2023-04-13 17:32:41+00:00,,0,cowboy35927/Folding-FIR-Filter,627545877,Verilog,Folding-FIR-Filter,11882,0,2023-04-13 17:33:41+00:00,[],None
140,https://github.com/NikoScher/B31DE-Assignment-3.git,2023-04-17 16:12:09+00:00,,0,NikoScher/B31DE-Assignment-3,629102271,Verilog,B31DE-Assignment-3,210,0,2023-05-10 14:07:19+00:00,[],None
141,https://github.com/jianlingg/verilog.git,2023-04-17 09:45:20+00:00,,0,jianlingg/verilog,628940610,Verilog,verilog,80,0,2023-04-18 03:13:49+00:00,[],None
142,https://github.com/sujan-hn/Scrolling-msg.git,2023-04-16 17:24:25+00:00,implementation of a scrolling message on a  7 segment display of a basys-3 board,0,sujan-hn/Scrolling-msg,628676156,Verilog,Scrolling-msg,2321,0,2023-04-16 17:32:05+00:00,[],None
143,https://github.com/Emerald-Bay/EE354_Final_Project.git,2023-04-13 23:25:40+00:00,Recreation of VVVVVV in Verilog,0,Emerald-Bay/EE354_Final_Project,627654863,Verilog,EE354_Final_Project,174,0,2023-04-17 02:10:00+00:00,[],None
144,https://github.com/brsf11/RealTank2023.git,2023-04-14 07:19:59+00:00,,0,brsf11/RealTank2023,627778132,Verilog,RealTank2023,792,0,2023-08-31 22:17:31+00:00,[],None
145,https://github.com/wotupfoo/verilog-examples.git,2023-04-14 22:34:49+00:00,A collection of projects as I learn verilog,0,wotupfoo/verilog-examples,628092271,Verilog,verilog-examples,14,0,2023-05-12 22:34:05+00:00,[],https://api.github.com/licenses/mit
146,https://github.com/Suhaib033/DeepDive.v.git,2023-04-14 14:54:20+00:00,,0,Suhaib033/DeepDive.v,627948213,Verilog,DeepDive.v,16,0,2023-04-14 15:04:19+00:00,[],None
147,https://github.com/pbhanupr/Mtech-project.git,2023-04-18 04:14:16+00:00,Verilog codes for my Mtech projects,0,pbhanupr/Mtech-project,629313956,Verilog,Mtech-project,289,0,2023-04-18 04:28:02+00:00,[],None
148,https://github.com/DiegoSainzR/ArquitecturaComputacional.git,2023-04-18 06:01:51+00:00,,0,DiegoSainzR/ArquitecturaComputacional,629343709,Verilog,ArquitecturaComputacional,496,0,2023-04-18 06:04:39+00:00,[],None
149,https://github.com/Sahil9425/64bitveidicmultiplier.git,2023-04-30 10:51:25+00:00,64 bit Vedic calculator without floating point.,0,Sahil9425/64bitveidicmultiplier,634505133,Verilog,64bitveidicmultiplier,9368,0,2023-04-30 11:03:40+00:00,[],None
150,https://github.com/xiaotianbc/verilog_modules.git,2023-04-30 06:53:08+00:00,,1,xiaotianbc/verilog_modules,634452112,Verilog,verilog_modules,2233,0,2023-04-30 06:53:53+00:00,[],None
151,https://github.com/DenizUlucan/gs_odev.git,2023-04-30 13:06:13+00:00,Gömülü Sistemler Ödev,0,DenizUlucan/gs_odev,634537499,Verilog,gs_odev,1,0,2023-04-30 13:06:41+00:00,[],None
152,https://github.com/0xff00a/network-python.git,2023-04-26 03:12:36+00:00,,0,0xff00a/network-python,632740692,Verilog,network-python,2,0,2023-04-26 03:20:20+00:00,[],None
153,https://github.com/dachariy/EE287_FIR_Filter.git,2023-04-25 19:02:05+00:00,,0,dachariy/EE287_FIR_Filter,632607974,Verilog,EE287_FIR_Filter,1530,0,2023-05-16 17:10:00+00:00,[],None
154,https://github.com/alokerdas/faultSim.git,2023-04-26 05:14:20+00:00,,0,alokerdas/faultSim,632770598,Verilog,faultSim,68,0,2023-06-09 12:27:00+00:00,[],https://api.github.com/licenses/gpl-3.0
155,https://github.com/notsotalented/Crossroad-Traffic-Light.git,2023-04-28 10:15:21+00:00,Crossroad Traffic Light in Verilog.,0,notsotalented/Crossroad-Traffic-Light,633805538,Verilog,Crossroad-Traffic-Light,430,0,2023-04-28 10:26:17+00:00,[],None
156,https://github.com/Sondos-Shabana/ATM_FSM.git,2023-04-28 00:08:49+00:00,"This repo contains a verilog code that implements an ATM FSM that has mainly 4 options which are withdrawal, deposit, balance inquiry and PIN change",0,Sondos-Shabana/ATM_FSM,633632630,Verilog,ATM_FSM,7,0,2023-04-28 00:09:55+00:00,[],None
157,https://github.com/M0stafaRady/RST_CLK_CTRL.git,2023-04-26 08:16:07+00:00,,2,M0stafaRady/RST_CLK_CTRL,632831961,Verilog,RST_CLK_CTRL,332,0,2023-04-27 10:18:52+00:00,[],https://api.github.com/licenses/mit
158,https://github.com/ahmedosama07/Chipions23-Assignments.git,2023-04-28 22:35:52+00:00,,0,ahmedosama07/Chipions23-Assignments,634046857,Verilog,Chipions23-Assignments,883,0,2023-05-27 02:39:06+00:00,[],None
159,https://github.com/garvin-stack/Lab03-SingleCycleDatapath.git,2023-04-28 22:07:34+00:00,,0,garvin-stack/Lab03-SingleCycleDatapath,634041145,Verilog,Lab03-SingleCycleDatapath,515,0,2023-04-28 22:07:41+00:00,[],None
160,https://github.com/mohanadabouserie/Basys-3-FPGA-calculator.git,2023-04-23 15:58:43+00:00,,0,mohanadabouserie/Basys-3-FPGA-calculator,631624223,Verilog,Basys-3-FPGA-calculator,415,0,2023-09-01 13:46:00+00:00,[],None
161,https://github.com/Ahmed-Waseem77/signed_sequential_multiplier.git,2023-04-22 21:26:23+00:00,signed sequential multiplier implemented in verilog and fitted onto the Basys 3 FPGA 7-segment display,0,Ahmed-Waseem77/signed_sequential_multiplier,631385737,Verilog,signed_sequential_multiplier,1846,0,2023-05-07 06:53:44+00:00,[],https://api.github.com/licenses/gpl-2.0
162,https://github.com/Sivaprakasam-741/Mouse_interface-_with_FPGA.git,2023-04-20 14:43:22+00:00,mouse is interfaced with FPGA using verilog HDL and is implemented in the Basys 3 FPGA through which the movement of the mouse is represented using seven segment display and scrolling forward and backward is shown by LEDs and the right and left click is also shown using LEDs,0,Sivaprakasam-741/Mouse_interface-_with_FPGA,630514071,Verilog,Mouse_interface-_with_FPGA,19,0,2023-04-20 14:45:19+00:00,[],None
163,https://github.com/arsdorintbp2003/EE2026-AY2022-23-Project.git,2023-04-22 13:59:26+00:00,,0,arsdorintbp2003/EE2026-AY2022-23-Project,631274969,Verilog,EE2026-AY2022-23-Project,31116,0,2023-04-22 13:59:34+00:00,[],None
164,https://github.com/PRAGATI-0102/SR-FF_using_JK-FF-Day-013-.git,2023-04-22 16:36:55+00:00,,0,PRAGATI-0102/SR-FF_using_JK-FF-Day-013-,631319320,Verilog,SR-FF_using_JK-FF-Day-013-,163,0,2023-04-22 16:40:20+00:00,[],None
165,https://github.com/fivexxxxx/fpga_vga.git,2023-04-25 12:33:06+00:00,vga,0,fivexxxxx/fpga_vga,632448068,Verilog,fpga_vga,2,0,2023-04-25 12:37:05+00:00,[],None
166,https://github.com/sujan-hn/interactive-parking-system-using-fpga-board.git,2023-04-19 17:35:51+00:00,,0,sujan-hn/interactive-parking-system-using-fpga-board,630112358,Verilog,interactive-parking-system-using-fpga-board,6488,0,2023-04-19 17:38:32+00:00,[],None
167,https://github.com/threonorm/bsv_orange.git,2023-04-22 01:35:54+00:00,,0,threonorm/bsv_orange,631115941,Verilog,bsv_orange,5916,0,2023-05-12 21:06:14+00:00,[],None
168,https://github.com/WenbinTeng/t8086.git,2023-04-22 11:09:16+00:00,A soft CPU core compatible for Intel 8086.,0,WenbinTeng/t8086,631231861,Verilog,t8086,226,0,2023-05-01 07:44:22+00:00,['8086'],None
169,https://github.com/ftkovr9k/AHB-Master-to-Wishbone-Slave-Bridge.git,2023-04-19 12:50:32+00:00,,0,ftkovr9k/AHB-Master-to-Wishbone-Slave-Bridge,629991883,Verilog,AHB-Master-to-Wishbone-Slave-Bridge,7,0,2023-04-19 13:00:07+00:00,[],https://api.github.com/licenses/mit
170,https://github.com/fran07981/ece5760finalproject.git,2023-04-19 19:35:09+00:00,ECE 5760 Final Project: Modeling Thermal Distribution,1,fran07981/ece5760finalproject,630155940,Verilog,ece5760finalproject,2269828,0,2023-04-26 20:10:35+00:00,[],None
171,https://github.com/Wevel/ExperiarSoC_Core.git,2023-04-24 12:22:02+00:00,SoC implementation.,0,Wevel/ExperiarSoC_Core,631958270,Verilog,ExperiarSoC_Core,307,0,2023-05-10 17:46:35+00:00,[],https://api.github.com/licenses/apache-2.0
172,https://github.com/henryseo1000/2023_VHDL_Study.git,2023-04-28 07:43:27+00:00,언젠가 시간 나면 스터디해볼 예정인 VHDL ,0,henryseo1000/2023_VHDL_Study,633751838,Verilog,2023_VHDL_Study,11,0,2023-12-25 19:04:03+00:00,"['verilog', 'vhdl']",None
173,https://github.com/wilfredkisku/CHISEL3-TEST-PROJECTS.git,2023-04-13 05:50:23+00:00,Chisel3 test project build template with startup code,0,wilfredkisku/CHISEL3-TEST-PROJECTS,627267210,Verilog,CHISEL3-TEST-PROJECTS,1652,0,2024-03-28 23:08:04+00:00,[],https://api.github.com/licenses/unlicense
174,https://github.com/j0106223/cat_edge_capture.git,2023-04-13 15:38:08+00:00,cat_edge_capture,0,j0106223/cat_edge_capture,627499582,Verilog,cat_edge_capture,3390,0,2023-04-13 15:44:18+00:00,[],None
175,https://github.com/UraniumNutt/ENGR228FinalProject.git,2023-04-13 15:24:26+00:00,A CPU for (4X4) Matrix multiplication,1,UraniumNutt/ENGR228FinalProject,627493782,Verilog,ENGR228FinalProject,91789,0,2023-05-06 16:38:06+00:00,[],None
176,https://github.com/ZITANIMohamed98/pong_game.git,2023-04-22 13:11:07+00:00,,0,ZITANIMohamed98/pong_game,631262269,Verilog,pong_game,773,0,2023-04-22 13:13:50+00:00,[],https://api.github.com/licenses/mit
177,https://github.com/Harishtr1/7-segment.git,2023-04-19 15:42:16+00:00,,0,Harishtr1/7-segment,630066841,Verilog,7-segment,2,0,2023-04-19 15:55:06+00:00,[],None
178,https://github.com/zhejianguk/GC_Backend.git,2023-04-19 14:05:23+00:00,,0,zhejianguk/GC_Backend,630024414,Verilog,GC_Backend,15451,0,2023-04-19 14:40:58+00:00,[],None
179,https://github.com/IObundle/iob-ethmac.git,2023-04-20 13:22:42+00:00,,1,IObundle/iob-ethmac,630479838,Verilog,iob-ethmac,860,0,2023-04-20 14:55:42+00:00,[],https://api.github.com/licenses/lgpl-3.0
180,https://github.com/HMTCT/Slot_Machine.git,2023-04-19 06:33:53+00:00,,0,HMTCT/Slot_Machine,629846080,Verilog,Slot_Machine,2031,0,2023-04-19 06:39:29+00:00,[],None
181,https://github.com/minecraftdixit/AES.git,2023-04-15 21:31:47+00:00,128 bit aes implementation ,0,minecraftdixit/AES,628411209,Verilog,AES,10,0,2023-04-15 21:33:08+00:00,[],None
182,https://github.com/kevinhzhang/ECE385MusicSampler.git,2023-04-15 18:49:13+00:00,,0,kevinhzhang/ECE385MusicSampler,628375475,Verilog,ECE385MusicSampler,3728,0,2023-04-15 20:06:01+00:00,[],None
183,https://github.com/AryaTripathi/AES_Decryption.git,2023-04-17 19:29:07+00:00,,0,AryaTripathi/AES_Decryption,629175916,Verilog,AES_Decryption,13,0,2023-04-17 19:32:01+00:00,[],None
184,https://github.com/diesisfox/PuccinaLED-FPGA.git,2023-04-19 18:00:57+00:00,Verilog HUB75 Driver for PuccinaLED,0,diesisfox/PuccinaLED-FPGA,630121741,Verilog,PuccinaLED-FPGA,16,0,2023-04-22 12:09:59+00:00,[],https://api.github.com/licenses/mit
185,https://github.com/longmeow/Digital-design.git,2023-04-22 21:35:34+00:00,,0,longmeow/Digital-design,631387402,Verilog,Digital-design,1593,0,2023-04-23 15:23:32+00:00,[],None
186,https://github.com/Will-Denton/ECE350.git,2023-04-21 17:48:13+00:00,,0,Will-Denton/ECE350,631015461,Verilog,ECE350,30689,0,2023-04-21 18:08:12+00:00,[],None
187,https://github.com/Sarvepalli53/SPI-Protocol.git,2023-04-21 19:14:59+00:00,,0,Sarvepalli53/SPI-Protocol,631040892,Verilog,SPI-Protocol,966,0,2023-04-21 19:16:34+00:00,[],None
188,https://github.com/garvin-stack/Lab02-DatapathControlUnits.git,2023-04-21 23:11:06+00:00,,0,garvin-stack/Lab02-DatapathControlUnits,631093298,Verilog,Lab02-DatapathControlUnits,503,0,2023-04-21 23:11:12+00:00,[],None
189,https://github.com/LohitDaksha/LWC_Pyjamask.git,2023-04-21 15:36:19+00:00,,0,LohitDaksha/LWC_Pyjamask,630972261,Verilog,LWC_Pyjamask,10544,0,2023-05-09 06:09:21+00:00,[],None
190,https://github.com/21758/mipsCPU.git,2023-04-25 01:59:25+00:00,,0,21758/mipsCPU,632235717,Verilog,mipsCPU,139,0,2023-04-25 02:18:26+00:00,[],None
191,https://github.com/kaichodesu/elec2205.git,2023-04-24 15:53:32+00:00,D2 Source,0,kaichodesu/elec2205,632050961,Verilog,elec2205,1756,0,2023-04-24 15:54:17+00:00,[],None
192,https://github.com/sumanthbs17/0to99Counter.git,2023-04-25 09:05:57+00:00,,0,sumanthbs17/0to99Counter,632368130,Verilog,0to99Counter,4,0,2023-04-25 09:42:37+00:00,[],None
193,https://github.com/gawddivyansh/16BitMIPSProc.git,2023-04-26 18:53:48+00:00,,0,gawddivyansh/16BitMIPSProc,633088450,Verilog,16BitMIPSProc,5,0,2023-04-26 18:57:00+00:00,[],None
194,https://github.com/Invisiphantom/RISC-V-Mult-Cycle.git,2023-04-29 06:43:40+00:00,,0,Invisiphantom/RISC-V-Mult-Cycle,634135069,Verilog,RISC-V-Mult-Cycle,67,0,2023-04-29 06:49:07+00:00,[],https://api.github.com/licenses/apache-2.0
195,https://github.com/im-prajwal/AHB2APB_Bridge.git,2023-04-28 11:32:55+00:00,,0,im-prajwal/AHB2APB_Bridge,633830932,Verilog,AHB2APB_Bridge,192,0,2023-09-21 10:14:00+00:00,[],None
196,https://github.com/Aymontsh/ATM-Design.git,2023-04-28 16:08:06+00:00,,0,Aymontsh/ATM-Design,633934957,Verilog,ATM-Design,3,0,2023-04-28 16:12:39+00:00,[],None
197,https://github.com/PRAGATI-0102/SIPO_Using_D-FF-Day-016--.git,2023-04-25 07:06:55+00:00,The SIPO register is a digital circuit that stores a stream of binary data and outputs it in parallel.,0,PRAGATI-0102/SIPO_Using_D-FF-Day-016--,632321904,Verilog,SIPO_Using_D-FF-Day-016--,143,0,2023-04-25 07:07:42+00:00,[],None
198,https://github.com/fivexxxxx/fpga_miller.git,2023-04-25 12:24:20+00:00,miller ,0,fivexxxxx/fpga_miller,632444479,Verilog,fpga_miller,206,0,2023-04-25 12:27:25+00:00,[],None
199,https://github.com/sumanthbs17/0000to9999counter.git,2023-04-26 04:28:31+00:00,,0,sumanthbs17/0000to9999counter,632759046,Verilog,0000to9999counter,4,0,2023-04-26 04:29:49+00:00,[],None
200,https://github.com/levrage76/BPR.git,2023-04-13 03:40:32+00:00,,0,levrage76/BPR,627232727,Verilog,BPR,15,0,2023-04-13 03:43:34+00:00,[],None
201,https://github.com/MYNAMEHOLO/SPU.git,2023-04-14 07:12:15+00:00,This is a project for implement a cpu.,0,MYNAMEHOLO/SPU,627775353,Verilog,SPU,401,0,2023-06-07 13:41:17+00:00,[],None
202,https://github.com/JOHNYVPD/verilog_combinational.git,2023-04-14 09:31:26+00:00,,0,JOHNYVPD/verilog_combinational,627826162,Verilog,verilog_combinational,9,0,2023-04-14 10:03:24+00:00,[],None
203,https://github.com/shanyangS/3d_self_test.git,2023-04-24 05:25:29+00:00,"This is a project about 3D chip self-testing.  The main modules include the .v files written in Verilog HDL for the circuit, the testbench, and the generated waveforms",0,shanyangS/3d_self_test,631808297,Verilog,3d_self_test,1211,0,2023-04-24 12:43:33+00:00,[],https://api.github.com/licenses/agpl-3.0
204,https://github.com/ogssensor/caravel_2304C.git,2023-04-27 07:31:35+00:00,Sigma Delta ADC,0,ogssensor/caravel_2304C,633292599,Verilog,caravel_2304C,85445,0,2023-04-27 07:32:13+00:00,[],https://api.github.com/licenses/apache-2.0
205,https://github.com/maatheusfp/Microwave-Oven-Project.git,2023-04-23 22:05:57+00:00,,0,maatheusfp/Microwave-Oven-Project,631715813,Verilog,Microwave-Oven-Project,1506,0,2023-04-23 22:10:06+00:00,[],None
206,https://github.com/Seif2001/rVProc.git,2023-04-30 13:46:07+00:00,,0,Seif2001/rVProc,634547944,Verilog,rVProc,700,0,2023-11-14 11:51:03+00:00,[],None
207,https://github.com/malikshanaah1999/802.11Final.git,2023-04-29 11:39:58+00:00,,1,malikshanaah1999/802.11Final,634206363,Verilog,802.11Final,643,0,2023-04-29 11:41:57+00:00,[],None
208,https://github.com/dhiptmc/maxpooling.git,2023-04-13 02:51:41+00:00,,0,dhiptmc/maxpooling,627219778,Verilog,maxpooling,11384,0,2023-04-13 02:59:29+00:00,[],None
209,https://github.com/aixb666/axi_stream_insert_header.git,2023-04-13 18:42:14+00:00,,0,aixb666/axi_stream_insert_header,627572471,Verilog,axi_stream_insert_header,2,0,2023-04-13 19:06:28+00:00,[],None
210,https://github.com/dzwyl/obsidian.git,2023-04-13 14:27:05+00:00,,0,dzwyl/obsidian,627468483,Verilog,obsidian,10,0,2023-07-16 12:42:52+00:00,[],None
211,https://github.com/Junklea/CmpE-240-Prelabs.git,2023-04-13 08:16:42+00:00,,0,Junklea/CmpE-240-Prelabs,627320760,Verilog,CmpE-240-Prelabs,5,0,2023-04-13 08:20:19+00:00,[],None
212,https://github.com/brantlii/Mini-SRC.git,2023-04-14 06:06:18+00:00,,0,brantlii/Mini-SRC,627753575,Verilog,Mini-SRC,6733,0,2023-04-14 06:06:29+00:00,[],https://api.github.com/licenses/mit
213,https://github.com/Mostafa12d/RISC-V-Processor.git,2023-04-14 14:05:17+00:00,RISC-V Processor that could run RV32I instructions,0,Mostafa12d/RISC-V-Processor,627928016,Verilog,RISC-V-Processor,6724,0,2023-04-21 23:57:38+00:00,[],None
214,https://github.com/liuweiseu/snap_hdl_tut.git,2023-04-15 18:55:23+00:00,,0,liuweiseu/snap_hdl_tut,628376979,Verilog,snap_hdl_tut,15464,0,2023-04-17 22:19:04+00:00,[],None
215,https://github.com/ozcaglarbora/ram_verilog.git,2023-04-15 07:45:11+00:00,Gowin & Verilog ile Çift Yollu Ram Tasarımı,0,ozcaglarbora/ram_verilog,628198016,Verilog,ram_verilog,0,0,2023-04-15 07:46:02+00:00,[],None
216,https://github.com/stark-phoenix/Serial-Peripheral-Interface.git,2023-04-16 10:55:25+00:00,,0,stark-phoenix/Serial-Peripheral-Interface,628564888,Verilog,Serial-Peripheral-Interface,13,0,2023-05-07 11:07:45+00:00,[],None
217,https://github.com/psychogenic/tt03_neptune_constantwindow.git,2023-04-19 17:47:03+00:00,Neptune TinyTapeout Submission 1: constant frequency window,0,psychogenic/tt03_neptune_constantwindow,630116575,Verilog,tt03_neptune_constantwindow,170,0,2023-04-19 18:06:10+00:00,[],
218,https://github.com/pyamnihc/caravel_test_project.git,2023-04-21 20:32:26+00:00,,0,pyamnihc/caravel_test_project,631060397,Verilog,caravel_test_project,41725,0,2023-04-21 20:33:08+00:00,[],https://api.github.com/licenses/apache-2.0
219,https://github.com/Potato-TW/Computer-Organization.git,2023-04-22 17:02:02+00:00,,0,Potato-TW/Computer-Organization,631326012,Verilog,Computer-Organization,1893,0,2023-05-15 19:17:11+00:00,[],None
220,https://github.com/Thaniana/systolic.git,2023-04-16 19:28:20+00:00,,0,Thaniana/systolic,628710358,Verilog,systolic,409,0,2023-05-16 02:41:00+00:00,[],None
221,https://github.com/a20084551/frequency_analysis_system.git,2023-04-24 10:56:22+00:00,,0,a20084551/frequency_analysis_system,631925751,Verilog,frequency_analysis_system,1245,0,2023-04-24 10:58:05+00:00,[],None
222,https://github.com/cetincangokal/single-port-ram.git,2023-04-24 12:06:17+00:00,,0,cetincangokal/single-port-ram,631952042,Verilog,single-port-ram,3,0,2023-04-24 12:06:46+00:00,[],None
223,https://github.com/imbnayan99/50-Days-of-RTL-1.0.git,2023-04-25 08:18:30+00:00,,0,imbnayan99/50-Days-of-RTL-1.0,632349505,Verilog,50-Days-of-RTL-1.0,6,0,2023-04-25 13:02:03+00:00,[],None
224,https://github.com/PRAGATI-0102/PISO_Shift_Register-Day-017-.git,2023-04-26 17:17:02+00:00,"A PISO register is a type of shift register that takes in parallel data and shifts it out serially, bit by bit.",0,PRAGATI-0102/PISO_Shift_Register-Day-017-,633051969,Verilog,PISO_Shift_Register-Day-017-,160,0,2023-04-26 17:17:55+00:00,[],None
225,https://github.com/miketanto/ece385-finalproject.git,2023-04-27 03:46:10+00:00,,0,miketanto/ece385-finalproject,633227436,Verilog,ece385-finalproject,23326,0,2023-04-27 03:48:02+00:00,[],None
226,https://github.com/TannerHollis/LED_Matrix_Controller.git,2023-04-27 03:31:49+00:00,,0,TannerHollis/LED_Matrix_Controller,633224134,Verilog,LED_Matrix_Controller,256,0,2023-07-09 01:02:54+00:00,[],None
227,https://github.com/joshuanieh/Gauss-Seidel.git,2023-04-27 07:41:03+00:00,,0,joshuanieh/Gauss-Seidel,633296113,Verilog,Gauss-Seidel,9457,0,2023-04-27 07:49:32+00:00,[],None
228,https://github.com/ZainabbHaider/CA-project.git,2023-04-27 04:59:36+00:00,,0,ZainabbHaider/CA-project,633244847,Verilog,CA-project,25,0,2023-04-27 05:09:05+00:00,[],None
229,https://github.com/GM-Chess/RISC-V_VERILOG.git,2023-04-28 18:58:01+00:00,This was made for my computer architecture at York University,0,GM-Chess/RISC-V_VERILOG,633992218,Verilog,RISC-V_VERILOG,592,0,2023-04-28 20:04:46+00:00,[],None
230,https://github.com/jszprada/ONP-verilog.git,2023-04-28 17:15:11+00:00,,0,jszprada/ONP-verilog,633958915,Verilog,ONP-verilog,4,0,2023-04-28 17:15:17+00:00,[],None
231,https://github.com/tatakassab/SignedMultiplier.git,2023-04-30 00:09:37+00:00,A Signed 8-bit * 8-bit binary Multiplier that is to be implemented using an FPGA Basys3 board,1,tatakassab/SignedMultiplier,634385878,Verilog,SignedMultiplier,10112,0,2023-05-14 01:59:07+00:00,[],None
232,https://github.com/NayanaRajeev/Coffee_Vending_Machine.git,2023-04-29 19:12:41+00:00,,0,NayanaRajeev/Coffee_Vending_Machine,634328853,Verilog,Coffee_Vending_Machine,1,0,2023-04-29 19:14:13+00:00,[],None
233,https://github.com/NayanaRajeev/4_bit_multiplier.git,2023-04-29 19:18:04+00:00,,0,NayanaRajeev/4_bit_multiplier,634330141,Verilog,4_bit_multiplier,1,0,2023-04-29 19:19:13+00:00,[],None
234,https://github.com/Jormit/Verilog-FFT.git,2023-04-29 08:38:41+00:00,,0,Jormit/Verilog-FFT,634161683,Verilog,Verilog-FFT,2,0,2023-04-29 08:39:01+00:00,[],None
235,https://github.com/alperenaydinn/trafficligths.git,2023-04-30 13:41:09+00:00,gomulu odev,0,alperenaydinn/trafficligths,634546630,Verilog,trafficligths,5503,0,2023-04-30 13:41:55+00:00,[],None
236,https://github.com/mojtabahadei81/CarrySellectAdder-32-bit.git,2023-04-27 21:40:10+00:00,,0,mojtabahadei81/CarrySellectAdder-32-bit,633600126,Verilog,CarrySellectAdder-32-bit,2173,0,2023-04-27 21:41:18+00:00,[],None
237,https://github.com/MohamdFekry/Pipelined-RV32IMC-Processor.git,2023-04-29 10:50:40+00:00,This is an implementation of a fully pipelined RV32IMC Processor using Verilog.,0,MohamdFekry/Pipelined-RV32IMC-Processor,634194184,Verilog,Pipelined-RV32IMC-Processor,2791,0,2023-04-29 10:55:51+00:00,[],None
238,https://github.com/2022Test2022/verilog.git,2023-04-29 07:01:23+00:00,,0,2022Test2022/verilog,634139239,Verilog,verilog,1,0,2023-04-29 07:11:04+00:00,[],None
239,https://github.com/HotMercury/NCKU_IC_design.git,2023-04-17 11:36:56+00:00,,0,HotMercury/NCKU_IC_design,628982818,Verilog,NCKU_IC_design,23847,0,2023-07-21 09:03:30+00:00,[],None
240,https://github.com/AlanPonnachan/Imageprocessing23_fpga2363.git,2023-04-18 10:42:57+00:00,,0,AlanPonnachan/Imageprocessing23_fpga2363,629451145,Verilog,Imageprocessing23_fpga2363,5,0,2023-04-18 16:33:09+00:00,[],None
241,https://github.com/hanxinwa/-FIFO-.git,2023-04-21 00:15:33+00:00,,0,hanxinwa/-FIFO-,630693928,Verilog,-FIFO-,4,0,2023-04-21 22:59:28+00:00,[],None
242,https://github.com/dwisehart/tt03-ring-grey.git,2023-04-21 02:10:58+00:00,Ring-Grey project for TinyTapeout 03 submission,0,dwisehart/tt03-ring-grey,630719848,Verilog,tt03-ring-grey,48,0,2023-04-21 15:30:46+00:00,[],https://api.github.com/licenses/apache-2.0
243,https://github.com/marco-milanesi/FPGA-based-Digital-Twin.git,2023-04-27 04:13:21+00:00," FPGA-based digital twin implementation where the datasets are taken directly from the physical asset running in parallel to the digital asset. This setup eliminates the need for big data and cloud upload which in turn ensures data privacy and faster, efficient digital twin implementation and update.",0,marco-milanesi/FPGA-based-Digital-Twin,633233841,Verilog,FPGA-based-Digital-Twin,109061,0,2023-04-29 07:25:27+00:00,[],https://api.github.com/licenses/mit
244,https://github.com/Dasharo/verilog-tpm-fifo-registers.git,2023-04-30 09:59:08+00:00,Verilog module implementing TPM FIFO register space and locality state machine,0,Dasharo/verilog-tpm-fifo-registers,634493064,Verilog,verilog-tpm-fifo-registers,66,0,2023-05-19 10:11:28+00:00,[],https://api.github.com/licenses/lgpl-2.1
245,https://github.com/RohanKhatua/DSD-Verilog.git,2023-04-13 07:56:27+00:00,,0,RohanKhatua/DSD-Verilog,627313114,Verilog,DSD-Verilog,81,0,2023-08-16 14:41:28+00:00,[],None
246,https://github.com/dila128/Gomulu_Sistemler_Tek_Port_RAM.git,2023-04-14 16:26:54+00:00,,0,dila128/Gomulu_Sistemler_Tek_Port_RAM,627983569,Verilog,Gomulu_Sistemler_Tek_Port_RAM,0,0,2023-04-14 21:49:15+00:00,[],None
247,https://github.com/rockyco/PR_Lab.git,2023-04-17 18:02:55+00:00,,0,rockyco/PR_Lab,629145096,Verilog,PR_Lab,2568,0,2023-04-18 14:40:50+00:00,[],None
248,https://github.com/JohnWicksPenc1l/HSD_Matrix_Multiplication_Accelerator.git,2023-04-17 19:46:14+00:00,"This repository includes the verilog codes written in Seoul National University Hardware System Design class. Professor Sungjoo Yoo, Seoul National University: https://www.aminer.org/profile/sungjoo-yoo/54897f25dabfae8a11fb45e8",0,JohnWicksPenc1l/HSD_Matrix_Multiplication_Accelerator,629181510,Verilog,HSD_Matrix_Multiplication_Accelerator,1001,0,2023-04-17 20:50:29+00:00,[],None
249,https://github.com/Pritam-Sethuraman/Calc3.git,2023-04-17 15:09:49+00:00,,0,Pritam-Sethuraman/Calc3,629076300,Verilog,Calc3,7678,0,2023-04-17 15:13:36+00:00,[],None
250,https://github.com/Eric-Xie98/automated_birdhouse.git,2023-04-19 16:17:19+00:00,"Final Project of ECE350, designing and creating an automated birdhouse feeder in Verilog and assembly",0,Eric-Xie98/automated_birdhouse,630081293,Verilog,automated_birdhouse,1262,0,2023-04-19 16:22:07+00:00,[],None
251,https://github.com/sumanthbs17/Challenge_codes.git,2023-04-19 09:32:45+00:00,,0,sumanthbs17/Challenge_codes,629916229,Verilog,Challenge_codes,4,0,2023-04-19 09:46:56+00:00,[],None
252,https://github.com/TVCONG/digital_design_lab2.git,2023-04-23 01:37:43+00:00,,0,TVCONG/digital_design_lab2,631425778,Verilog,digital_design_lab2,102,0,2023-04-23 01:55:52+00:00,[],None
253,https://github.com/ahmedkha2/Register-File.git,2023-04-22 04:27:55+00:00,,0,ahmedkha2/Register-File,631144714,Verilog,Register-File,66,0,2023-04-22 04:39:33+00:00,[],None
254,https://github.com/CesarSant0s/monoCicloMips.git,2023-04-22 20:26:54+00:00,,0,CesarSant0s/monoCicloMips,631374167,Verilog,monoCicloMips,27896,0,2023-04-22 20:36:56+00:00,[],None
255,https://github.com/Gcerpa01/CompE470.git,2023-04-24 03:53:00+00:00,Work of my projects I worked on while enrolled in SDSU's COMPE470 Digital Circuits course in Spring 2023,0,Gcerpa01/CompE470,631786769,Verilog,CompE470,7866,0,2023-07-06 03:12:53+00:00,"['verilog', 'verilog-hdl', 'vivado']",None
256,https://github.com/SE-O22-ITESO/p2-single-cycle-edgar_barba_jorge_velazquez.git,2023-04-13 21:42:12+00:00,p2-single-cycle-edgar_barba_jorge_velazquez created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-edgar_barba_jorge_velazquez,627629695,Verilog,p2-single-cycle-edgar_barba_jorge_velazquez,104730,0,2023-04-13 21:51:50+00:00,[],None
257,https://github.com/Mohammad-AbuJaber/Verilog-Digital-Systems-Project.git,2023-04-15 14:00:33+00:00,,0,Mohammad-AbuJaber/Verilog-Digital-Systems-Project,628294633,Verilog,Verilog-Digital-Systems-Project,1974,0,2023-04-15 14:02:46+00:00,[],None
258,https://github.com/IBDELMA/CALC-3.git,2023-04-16 04:05:29+00:00,,0,IBDELMA/CALC-3,628476890,Verilog,CALC-3,53,0,2023-04-16 04:06:40+00:00,[],None
259,https://github.com/chitwang/CSE-BUBBLE.git,2023-04-15 19:58:06+00:00,,0,chitwang/CSE-BUBBLE,628391550,Verilog,CSE-BUBBLE,118,0,2023-06-23 09:48:39+00:00,[],None
260,https://github.com/haniomar2000/Trafik-Hani.git,2023-04-16 00:05:20+00:00,,0,haniomar2000/Trafik-Hani,628437585,Verilog,Trafik-Hani,549,0,2023-04-16 00:27:12+00:00,[],None
261,https://github.com/Pritam-Sethuraman/Calc2.git,2023-04-17 01:34:00+00:00,,0,Pritam-Sethuraman/Calc2,628788472,Verilog,Calc2,1712,0,2023-04-17 01:35:04+00:00,[],None
262,https://github.com/syedahsan297engr/Verilog_Modeling_Techniques.git,2023-04-16 20:00:26+00:00,"In this lab we will learn Gate Level Modeling, Data Flow Modeling and Behavioural Modeling in verilog, we will implement adders muxes counters etc",0,syedahsan297engr/Verilog_Modeling_Techniques,628718576,Verilog,Verilog_Modeling_Techniques,7,0,2023-04-16 20:00:34+00:00,[],None
263,https://github.com/Abd1997-Dev/Design-and-Testbench-of-the-JTAG-TAP-Controller.git,2023-04-18 06:57:59+00:00,"The JTAG is used prevalent for the debugging and testing purpose. Thus, the design and test bench are created to understand its behaviour.",0,Abd1997-Dev/Design-and-Testbench-of-the-JTAG-TAP-Controller,629363486,Verilog,Design-and-Testbench-of-the-JTAG-TAP-Controller,1181,0,2023-05-23 12:01:50+00:00,[],None
264,https://github.com/FiZufa/CS202-CPU-Project-.git,2023-04-24 09:53:03+00:00,,0,FiZufa/CS202-CPU-Project-,631902265,Verilog,CS202-CPU-Project-,9,0,2023-04-24 09:56:01+00:00,[],None
265,https://github.com/M-H-Elarabawy/caravel.git,2023-04-24 10:21:00+00:00,,0,M-H-Elarabawy/caravel,631912855,Verilog,caravel,41721,0,2023-04-24 10:21:34+00:00,[],https://api.github.com/licenses/apache-2.0
266,https://github.com/jakobhindemith/memory.git,2023-04-24 10:41:10+00:00,This repository shows a RS-Flipflop in which you can save Bits.,0,jakobhindemith/memory,631920101,Verilog,memory,3,0,2023-04-24 11:05:34+00:00,[],None
267,https://github.com/yashkthr/AxPPA-Adder.git,2023-04-24 18:27:42+00:00,AxPPA adder is a type of adder circuit that uses a parallel prefix adder structure with asynchronous logic to achieve high performance and low power consumption.,0,yashkthr/AxPPA-Adder,632112000,Verilog,AxPPA-Adder,66,0,2023-04-24 18:28:43+00:00,[],None
268,https://github.com/Derek46518/ComputerOrgMidtermProject.git,2023-04-24 12:48:31+00:00,,0,Derek46518/ComputerOrgMidtermProject,631969067,Verilog,ComputerOrgMidtermProject,868,0,2023-04-24 13:40:42+00:00,[],None
269,https://github.com/shalan/caravel_ips_tc.git,2023-04-30 15:55:30+00:00,,2,shalan/caravel_ips_tc,634584478,Verilog,caravel_ips_tc,41748,0,2023-04-30 15:56:11+00:00,[],https://api.github.com/licenses/apache-2.0
270,https://github.com/johnwinans/IceStick-Examples-Icarus.git,2023-04-30 20:24:20+00:00,,0,johnwinans/IceStick-Examples-Icarus,634654777,Verilog,IceStick-Examples-Icarus,112,0,2023-04-30 20:52:23+00:00,[],https://api.github.com/licenses/gpl-3.0
271,https://github.com/josborja7castillo/caravel_example.git,2023-04-29 10:56:39+00:00,,0,josborja7castillo/caravel_example,634195638,Verilog,caravel_example,41725,0,2023-04-29 10:57:17+00:00,[],https://api.github.com/licenses/apache-2.0
272,https://github.com/diqingz/pokemaze.git,2023-04-27 00:31:45+00:00,,0,diqingz/pokemaze,633179220,Verilog,pokemaze,52062,0,2023-09-28 20:08:50+00:00,[],None
273,https://github.com/leon-ufba/ransac.git,2023-04-28 01:23:00+00:00,,0,leon-ufba/ransac,633649190,Verilog,ransac,193737,0,2023-07-20 18:59:24+00:00,[],None
274,https://github.com/mohamedmorsi22/uart-module.git,2023-04-26 01:13:19+00:00,simple uart communication protocol that transmits data serially between transmitter and receiver(written in verilog).,0,mohamedmorsi22/uart-module,632709914,Verilog,uart-module,5,0,2023-04-26 01:18:46+00:00,[],None
275,https://github.com/TonyKorol1/152Lab2.git,2023-04-26 21:25:50+00:00,Verilog for lab 2,0,TonyKorol1/152Lab2,633135874,Verilog,152Lab2,10,0,2023-04-27 00:15:32+00:00,[],None
276,https://github.com/Sebastian-GA/verilog-basics.git,2023-04-25 01:28:49+00:00,Basic examples of Verilog,0,Sebastian-GA/verilog-basics,632227795,Verilog,verilog-basics,501,0,2023-04-30 22:30:33+00:00,[],None
277,https://github.com/radumto/my_aes128_ip_coprocessor.git,2023-04-28 14:18:34+00:00,"This AES implementation is an asynchronous, combinational implementation in Verilog; the module implements the encryption algorithm and the key expansion algorithm; the ciphertext result is generated after the propagation delay through the AES rounds; the AES coprocessor was tested with the NIST example found in AES_NIST.FIPS.197.pdf",0,radumto/my_aes128_ip_coprocessor,633891833,Verilog,my_aes128_ip_coprocessor,2568,0,2023-04-28 14:27:09+00:00,[],https://api.github.com/licenses/mit
278,https://github.com/rheefine/Embedded_Design.git,2023-04-28 14:16:15+00:00,Embedded design by using Verilog,0,rheefine/Embedded_Design,633890941,Verilog,Embedded_Design,743,0,2023-04-28 14:18:53+00:00,[],None
279,https://github.com/choidaedae/POSTECH-CSED311-Labs.git,2023-04-24 07:48:43+00:00,2023 Spring - POSTECH CSED311 (Computer Architecture) Lab Assignments,0,choidaedae/POSTECH-CSED311-Labs,631854436,Verilog,POSTECH-CSED311-Labs,37,0,2023-12-03 13:04:22+00:00,[],None
280,https://github.com/Invisiphantom/RISC-V-Single-Cycle.git,2023-04-26 12:10:59+00:00,,0,Invisiphantom/RISC-V-Single-Cycle,632924311,Verilog,RISC-V-Single-Cycle,1449,0,2023-12-22 05:55:42+00:00,[],None
281,https://github.com/jaewonlee16/tsc_cpu.git,2023-04-21 11:36:42+00:00,,0,jaewonlee16/tsc_cpu,630886297,Verilog,tsc_cpu,4140,0,2023-07-02 14:46:04+00:00,[],None
282,https://github.com/Harshit0143/project.v.git,2023-04-23 19:24:33+00:00,,0,Harshit0143/project.v,631680354,Verilog,project.v,676,0,2023-11-11 14:49:28+00:00,[],None
283,https://github.com/abundance-io/verilog_game_hardware.git,2023-04-22 20:32:12+00:00,8-bit game Hardware in Verilog,0,abundance-io/verilog_game_hardware,631375193,Verilog,verilog_game_hardware,5,0,2023-04-27 21:55:53+00:00,[],None
284,https://github.com/PRAGATI-0102/D-FF-Day-014-.git,2023-04-23 17:07:48+00:00,"The D Flip Flop is a fundamental building block in digital circuits, used to store a single bit of information.",0,PRAGATI-0102/D-FF-Day-014-,631643926,Verilog,D-FF-Day-014-,117,0,2023-04-23 17:09:08+00:00,[],None
285,https://github.com/MohamadDibassy/CSE-490-Project-1-Verilog.git,2023-04-16 16:49:21+00:00,,0,MohamadDibassy/CSE-490-Project-1-Verilog,628665916,Verilog,CSE-490-Project-1-Verilog,6,0,2023-04-16 16:52:32+00:00,[],None
286,https://github.com/tastynoob/riscv-decoder-generator.git,2023-04-18 17:30:49+00:00,,0,tastynoob/riscv-decoder-generator,629623883,Verilog,riscv-decoder-generator,2,0,2023-04-18 17:31:51+00:00,[],None
287,https://github.com/Gunasaikiran/ALL_IN_ONE_Counter.git,2023-04-20 06:57:09+00:00,,0,Gunasaikiran/ALL_IN_ONE_Counter,630334988,Verilog,ALL_IN_ONE_Counter,1668,0,2023-04-20 07:11:49+00:00,[],None
288,https://github.com/Amalziad1/FSM-traffic-light.git,2023-04-19 20:32:41+00:00,finite state machine of traffic lights using verilog,0,Amalziad1/FSM-traffic-light,630174186,Verilog,FSM-traffic-light,1021,0,2023-04-19 20:36:12+00:00,[],None
289,https://github.com/guilp03/Projeto-SD.git,2023-04-19 14:01:12+00:00,,0,guilp03/Projeto-SD,630022512,Verilog,Projeto-SD,3301,0,2023-04-19 14:13:00+00:00,[],None
290,https://github.com/KzcDuD/Digital_Design-111-2.git,2023-04-19 13:41:06+00:00,,0,KzcDuD/Digital_Design-111-2,630013772,Verilog,Digital_Design-111-2,3699,0,2023-04-24 06:43:21+00:00,[],None
291,https://github.com/ara-chi/Study_VerilogHDL.git,2023-04-21 15:33:16+00:00,,0,ara-chi/Study_VerilogHDL,630971114,Verilog,Study_VerilogHDL,20,0,2023-04-21 15:49:29+00:00,[],None
292,https://github.com/Hikari0893/mat_mul.git,2023-04-18 20:07:31+00:00,,0,Hikari0893/mat_mul,629680316,Verilog,mat_mul,3208,0,2023-04-18 20:16:38+00:00,[],None
293,https://github.com/Thiagotvr/digital-clock.git,2023-04-18 20:06:56+00:00,Relógio digital,0,Thiagotvr/digital-clock,629680137,Verilog,digital-clock,4,0,2023-04-18 20:23:28+00:00,[],None
294,https://github.com/cetincangokal/trafic_light.git,2023-04-24 11:53:04+00:00,,0,cetincangokal/trafic_light,631946849,Verilog,trafic_light,1,0,2023-04-24 12:09:41+00:00,[],None
295,https://github.com/nguyenvietthi/edabk_degital_design.git,2023-04-22 03:47:52+00:00,Digital Design  - Group 4,0,nguyenvietthi/edabk_degital_design,631138000,Verilog,edabk_degital_design,10,0,2023-05-13 00:40:32+00:00,[],None
296,https://github.com/Arkhaios40/lib.git,2023-04-23 00:26:36+00:00,file holder for libs,0,Arkhaios40/lib,631414969,Verilog,lib,100186,0,2023-04-23 00:31:50+00:00,[],None
297,https://github.com/taruntejreddych/HSCA-Spring-2023-Project.git,2023-04-17 19:30:22+00:00,,0,taruntejreddych/HSCA-Spring-2023-Project,629176315,Verilog,HSCA-Spring-2023-Project,1326,0,2023-04-17 19:35:24+00:00,[],None
298,https://github.com/furkanklvz/Single-Port-Ram.git,2023-04-13 12:20:17+00:00,16x16 memory,0,furkanklvz/Single-Port-Ram,627413775,Verilog,Single-Port-Ram,1,0,2023-04-13 12:20:58+00:00,[],None
299,https://github.com/taegun-kim/Traffic.git,2023-04-16 06:15:35+00:00,,0,taegun-kim/Traffic,628501013,Verilog,Traffic,3454,0,2023-04-22 07:27:46+00:00,[],None
300,https://github.com/EDL12/Proj2_VLSI.git,2023-04-15 20:12:20+00:00,,1,EDL12/Proj2_VLSI,628394736,Verilog,Proj2_VLSI,240,0,2023-04-15 20:30:05+00:00,[],None
301,https://github.com/ichi4096/fpga-pong.git,2023-04-27 15:59:42+00:00,Pong for the Basys 3 board,1,ichi4096/fpga-pong,633490396,Verilog,fpga-pong,8,0,2023-04-27 16:11:04+00:00,[],https://api.github.com/licenses/cc0-1.0
302,https://github.com/Basant-Elhussein/RISC-V.git,2023-04-25 19:59:23+00:00,,0,Basant-Elhussein/RISC-V,632627764,Verilog,RISC-V,777,0,2023-04-25 20:07:02+00:00,[],None
303,https://github.com/BarboraLysa/digital-electronics-1-Project.git,2023-04-25 21:02:50+00:00,,0,BarboraLysa/digital-electronics-1-Project,632648528,Verilog,digital-electronics-1-Project,1570,0,2023-05-02 21:48:19+00:00,[],https://api.github.com/licenses/mit
304,https://github.com/yourealfun/mux.git,2023-04-26 15:17:02+00:00,for diplom,0,yourealfun/mux,633004791,Verilog,mux,1,0,2023-04-26 15:50:20+00:00,[],None
305,https://github.com/Suedz01/Verilog.git,2023-04-27 19:34:44+00:00,Portas lógicas e etc,0,Suedz01/Verilog,633561626,Verilog,Verilog,287,0,2023-04-27 19:37:31+00:00,[],None
306,https://github.com/AlexandeGomez/PROYECTO_32X32MAT.git,2023-04-27 20:44:15+00:00,,0,AlexandeGomez/PROYECTO_32X32MAT,633584809,Verilog,PROYECTO_32X32MAT,33262,0,2023-04-27 20:45:52+00:00,[],None
307,https://github.com/YihuiCalm/VLSI-Design-and-Simulation.git,2023-04-17 22:44:27+00:00,Courseworks of CMOS VLSI design using Cadence Virtuoso.,0,YihuiCalm/VLSI-Design-and-Simulation,629232179,Verilog,VLSI-Design-and-Simulation,13679,0,2023-04-17 23:06:28+00:00,[],None
308,https://github.com/CCRHuluPig/FALL22-ECE-385-final-project.git,2023-04-17 22:30:46+00:00,This is a final project of ECE385 in UIUC. In this project we use System Verilog to achieve doodle jump game based on FPGA.,0,CCRHuluPig/FALL22-ECE-385-final-project,629228916,Verilog,FALL22-ECE-385-final-project,5376,0,2023-04-17 23:09:01+00:00,[],None
309,https://github.com/mannndrew/VGA-Display.git,2023-04-18 01:27:34+00:00,FPGA VGA sampler for RGB and ASCII testing.,0,mannndrew/VGA-Display,629270439,Verilog,VGA-Display,16547,0,2023-08-11 16:50:26+00:00,[],https://api.github.com/licenses/mit
310,https://github.com/HITer21S101105/baidukunlun.git,2023-04-27 05:52:34+00:00,昆仑芯实习工作记录&practice,0,HITer21S101105/baidukunlun,633259138,Verilog,baidukunlun,8,0,2023-04-27 09:47:16+00:00,[],https://api.github.com/licenses/apache-2.0
311,https://github.com/MihaelaBaksic/network-on-chip.git,2023-04-23 09:44:24+00:00,Implementation of Serpent symmetrical cryptoalgorithm as Network on Chip,0,MihaelaBaksic/network-on-chip,631524697,Verilog,network-on-chip,1241,0,2023-04-23 09:55:59+00:00,[],None
312,https://github.com/mehmetakbaba/gomulu-sistemler.git,2023-04-16 18:47:11+00:00,,0,mehmetakbaba/gomulu-sistemler,628699374,Verilog,gomulu-sistemler,1,0,2023-04-16 18:48:40+00:00,[],None
313,https://github.com/Trehan-Mayank/P2_Easy_Processor_VERILOG.git,2023-04-16 17:13:04+00:00,"The Instructor accept 10 Different Functions and Perform tasks just like a Processor, using a Program RAM and Memory RAM ",0,Trehan-Mayank/P2_Easy_Processor_VERILOG,628672873,Verilog,P2_Easy_Processor_VERILOG,13,0,2023-04-26 18:32:05+00:00,[],None
314,https://github.com/S-E-N-S-O-H-A-M/32-bit-MIPS-based-RISC-processor.git,2023-04-20 16:23:58+00:00,,0,S-E-N-S-O-H-A-M/32-bit-MIPS-based-RISC-processor,630556332,Verilog,32-bit-MIPS-based-RISC-processor,335,0,2023-06-05 05:55:04+00:00,[],https://api.github.com/licenses/apache-2.0
315,https://github.com/DanX069/CSE-BUBBLE.git,2023-04-17 05:05:46+00:00,,0,DanX069/CSE-BUBBLE,628840994,Verilog,CSE-BUBBLE,296,0,2023-04-17 05:08:13+00:00,[],None
316,https://github.com/yagnavivek/HDL_DIJKSTRA.git,2023-04-29 10:01:48+00:00,,0,yagnavivek/HDL_DIJKSTRA,634182027,Verilog,HDL_DIJKSTRA,49,0,2023-04-29 10:05:42+00:00,[],None
317,https://github.com/CODESURGEN/Verilog.git,2023-04-29 13:19:27+00:00,This is a mini project using Verilog HDL,0,CODESURGEN/Verilog,634231720,Verilog,Verilog,137,0,2023-04-29 13:24:27+00:00,[],None
318,https://github.com/j0106223/Avalon-bus.git,2023-04-28 11:51:16+00:00,Avalon master or slave interface RTL example,0,j0106223/Avalon-bus,633837010,Verilog,Avalon-bus,691404,0,2023-04-29 02:49:12+00:00,[],None
319,https://github.com/xVoidDevilx/CPUArch.git,2023-04-27 20:17:55+00:00,CPU Architecture Implementation | Verilog Layout,0,xVoidDevilx/CPUArch,633576943,Verilog,CPUArch,66,0,2023-05-06 20:47:01+00:00,[],None
320,https://github.com/ManasaDeviMalla/Router_1x3.git,2023-04-27 11:42:13+00:00,,0,ManasaDeviMalla/Router_1x3,633386286,Verilog,Router_1x3,752,0,2023-04-27 12:28:18+00:00,[],None
321,https://github.com/k-nasim/NDI-DCT-encoder.git,2023-04-27 04:12:20+00:00,"NDA encoder is used to compress data using different algorithmic techniques, The proposed architecture is given below, which stores the image data in a compressed format. #encoder_DCT , #image_compression #verilog",1,k-nasim/NDI-DCT-encoder,633233603,Verilog,NDI-DCT-encoder,474,0,2023-08-18 04:23:15+00:00,[],None
322,https://github.com/santosh2407/Semi-Custom-Design-of-a-CLA-with-90nm-Using-Cadence.git,2023-04-28 18:01:38+00:00,,1,santosh2407/Semi-Custom-Design-of-a-CLA-with-90nm-Using-Cadence,633974554,Verilog,Semi-Custom-Design-of-a-CLA-with-90nm-Using-Cadence,1532,0,2023-04-28 18:37:01+00:00,[],None
323,https://github.com/seafooddelicious/FPGA_final_subway.git,2023-04-19 11:56:59+00:00,,0,seafooddelicious/FPGA_final_subway,629970274,Verilog,FPGA_final_subway,1322,0,2023-04-19 12:02:23+00:00,[],None
324,https://github.com/Preethigrace-7/Digital_clk.git,2023-04-18 17:34:54+00:00,This repository contains data and code related to design of digital clock using verilog code.,0,Preethigrace-7/Digital_clk,629625403,Verilog,Digital_clk,2,0,2023-10-06 16:01:06+00:00,[],None
325,https://github.com/Pacific-Feng/FPGA-Prototyping-Using-Synopsys-HAPS.git,2023-04-20 08:16:50+00:00,The final project of FPGA Prototyping Using Synopsys HAPS 2023,0,Pacific-Feng/FPGA-Prototyping-Using-Synopsys-HAPS,630364091,Verilog,FPGA-Prototyping-Using-Synopsys-HAPS,222,0,2023-04-20 08:18:40+00:00,[],None
326,https://github.com/gimmymansui/EC311-Project.git,2023-04-22 00:08:36+00:00,Hex Guessing Game,1,gimmymansui/EC311-Project,631102494,Verilog,EC311-Project,1215,0,2023-04-22 00:09:06+00:00,[],None
327,https://github.com/pjymichael/WhackAMike-Game.git,2023-04-25 08:23:38+00:00,"Computation Strucutures 1D Project, featuring Whack A Mike, a hardware game built from scratch.",0,pjymichael/WhackAMike-Game,632351561,Verilog,WhackAMike-Game,6437,0,2023-04-25 08:26:06+00:00,[],None
328,https://github.com/jonelee12138/DifferStateNav.git,2023-04-14 02:44:54+00:00,,0,jonelee12138/DifferStateNav,627703081,Verilog,DifferStateNav,11,0,2023-04-14 02:46:54+00:00,[],None
329,https://github.com/sou-sugiura/intel_de0_cv_for_openMSP430.git,2023-04-14 02:46:32+00:00,,0,sou-sugiura/intel_de0_cv_for_openMSP430,627703545,Verilog,intel_de0_cv_for_openMSP430,8350,0,2023-04-14 02:49:43+00:00,[],None
330,https://github.com/FalconBreaker49/TugasAkhir_RTL_Implementation.git,2023-04-13 22:26:56+00:00,"Tugas Akhir II, Implementasi algoritma Double Q-Learning dengan HDL di Verilog",0,FalconBreaker49/TugasAkhir_RTL_Implementation,627641053,Verilog,TugasAkhir_RTL_Implementation,54,0,2023-04-13 22:35:10+00:00,[],None
331,https://github.com/AndreaCheah/50.002-Computer-Structures.git,2023-04-15 09:16:34+00:00,SUTD CSD 2023 Computation Structures Electronic Hardware 1D Project,0,AndreaCheah/50.002-Computer-Structures,628220581,Verilog,50.002-Computer-Structures,5358,0,2023-04-23 00:01:28+00:00,[],None
332,https://github.com/GaneshSai720/DDR_controller.git,2023-04-15 20:14:01+00:00,,0,GaneshSai720/DDR_controller,628395083,Verilog,DDR_controller,3057,0,2023-04-21 10:59:41+00:00,[],None
333,https://github.com/mustafaenes/Gomulu_Sistemler.git,2023-04-16 14:41:38+00:00,Gömülü Sistemler,0,mustafaenes/Gomulu_Sistemler,628627012,Verilog,Gomulu_Sistemler,2881,0,2023-04-16 14:41:48+00:00,[],https://api.github.com/licenses/mit
334,https://github.com/Yorbre25/I_Proyecto_Grupal_Arqui_I.git,2023-04-16 11:38:01+00:00,Diseño e implementación en hardware de un Application Specific Instruction Set Processor que produce el efecto Rippling en una imagen 300x300 y lo muestra por en un monitor HDMI,0,Yorbre25/I_Proyecto_Grupal_Arqui_I,628575622,Verilog,I_Proyecto_Grupal_Arqui_I,173116,0,2023-09-20 03:49:12+00:00,[],None
335,https://github.com/MYNAMEHOLO/test.git,2023-04-13 10:36:00+00:00,just for test,0,MYNAMEHOLO/test,627374668,Verilog,test,2,0,2023-04-13 10:39:26+00:00,[],None
336,https://github.com/Build-A-Moat/IC_Contest_2016_CELL_BASED_Graduate.git,2023-04-18 07:14:37+00:00,,0,Build-A-Moat/IC_Contest_2016_CELL_BASED_Graduate,629369676,Verilog,IC_Contest_2016_CELL_BASED_Graduate,1,0,2023-05-17 08:41:21+00:00,[],None
337,https://github.com/datnassoc/data_chipignite_2034c.git,2023-04-27 09:38:39+00:00,Data Encryption,0,datnassoc/data_chipignite_2034c,633340706,Verilog,data_chipignite_2034c,7539,0,2023-04-27 09:39:28+00:00,[],https://api.github.com/licenses/apache-2.0
338,https://github.com/abheejani/FPGAGeoDash.git,2023-04-26 23:53:34+00:00,,0,abheejani/FPGAGeoDash,633170781,Verilog,FPGAGeoDash,147576,0,2023-05-05 22:11:40+00:00,[],None
339,https://github.com/CrisDroguett/LongDivisionAlgorithm.git,2023-04-28 21:16:51+00:00,,0,CrisDroguett/LongDivisionAlgorithm,634029931,Verilog,LongDivisionAlgorithm,10,0,2023-04-28 21:19:22+00:00,[],None
340,https://github.com/Bun-chan/FPGA_PWM.git,2023-04-21 04:25:26+00:00,PWM implemented on DE10 Lite FPGA development board,0,Bun-chan/FPGA_PWM,630750927,Verilog,FPGA_PWM,5414,0,2023-04-21 04:27:20+00:00,[],None
341,https://github.com/ducall/hvbird.git,2023-04-23 07:30:15+00:00,,0,ducall/hvbird,631493238,Verilog,hvbird,63774,0,2023-04-23 07:33:43+00:00,[],https://api.github.com/licenses/apache-2.0
342,https://github.com/AmaanRehman/ECE385_FinalProj.git,2023-04-24 00:59:52+00:00,ECE385 Final Project Tracking,0,AmaanRehman/ECE385_FinalProj,631747339,Verilog,ECE385_FinalProj,26226,0,2023-05-11 09:28:34+00:00,[],None
343,https://github.com/dan20kim/MotionCompensation.git,2023-04-24 03:38:51+00:00,Motion compensation block for a hardware video codec integrated circucit,0,dan20kim/MotionCompensation,631783610,Verilog,MotionCompensation,41722,0,2023-04-24 03:39:23+00:00,[],https://api.github.com/licenses/apache-2.0
344,https://github.com/psychogenic/tt03_shaman.git,2023-04-24 20:20:39+00:00,Rough last minute attempt,0,psychogenic/tt03_shaman,632151086,Verilog,tt03_shaman,58,0,2023-04-24 20:26:16+00:00,[],https://api.github.com/licenses/apache-2.0
345,https://github.com/Haardik-Ravat/Embedded_ISA.git,2023-04-28 20:20:02+00:00,,0,Haardik-Ravat/Embedded_ISA,634015783,Verilog,Embedded_ISA,414,0,2023-05-05 17:06:38+00:00,[],None
346,https://github.com/itsnishit/Accelerating-Convolution-using-Dadda-Debam-Multipliers-in-CNN.git,2023-04-26 16:13:12+00:00,,0,itsnishit/Accelerating-Convolution-using-Dadda-Debam-Multipliers-in-CNN,633027812,Verilog,Accelerating-Convolution-using-Dadda-Debam-Multipliers-in-CNN,75,0,2023-11-29 08:34:34+00:00,[],None
347,https://github.com/AbdulrahmanEl-Bedewy/AES-Encryption-with-SPI.git,2023-04-16 10:34:09+00:00,,1,AbdulrahmanEl-Bedewy/AES-Encryption-with-SPI,628559658,Verilog,AES-Encryption-with-SPI,73,0,2024-02-26 19:05:50+00:00,[],https://api.github.com/licenses/mit
348,https://github.com/ozlavi/NAND2Tetris.git,2023-04-14 10:14:09+00:00,NAND2Tetris project - Created by Oz Lavi,0,ozlavi/NAND2Tetris,627841589,Verilog,NAND2Tetris,183,0,2024-04-09 07:25:33+00:00,[],None
349,https://github.com/michaellangford99/STARS_caravel_test.git,2023-04-18 21:00:02+00:00,,0,michaellangford99/STARS_caravel_test,629696405,Verilog,STARS_caravel_test,41725,0,2023-04-18 21:01:32+00:00,[],https://api.github.com/licenses/apache-2.0
350,https://github.com/ruchit-422/riscv.git,2023-04-15 15:54:28+00:00,,0,ruchit-422/riscv,628328556,Verilog,riscv,2140,0,2023-04-15 16:03:52+00:00,[],None
351,https://github.com/PalDaps/Verilog_Punch.git,2023-04-15 13:47:09+00:00,🌟 Description of digital chips,0,PalDaps/Verilog_Punch,628290769,Verilog,Verilog_Punch,2,0,2023-04-15 13:50:17+00:00,[],None
352,https://github.com/qianyu1022/axi_stream_insert_header.git,2023-04-16 16:37:28+00:00,,0,qianyu1022/axi_stream_insert_header,628662427,Verilog,axi_stream_insert_header,330,0,2023-04-17 01:44:26+00:00,[],https://api.github.com/licenses/mit
353,https://github.com/MinhVuUS/bai7_thnhung.git,2023-04-14 15:05:35+00:00,,0,MinhVuUS/bai7_thnhung,627952827,Verilog,bai7_thnhung,25629,0,2023-04-14 15:07:37+00:00,[],None
354,https://github.com/burakardaa/caraveltraill.git,2023-04-17 21:41:05+00:00,,0,burakardaa/caraveltraill,629216377,Verilog,caraveltraill,93688,0,2023-04-17 21:41:43+00:00,[],https://api.github.com/licenses/apache-2.0
355,https://github.com/gbsha/ttfir2.git,2023-04-17 19:20:54+00:00,,0,gbsha/ttfir2,629173128,Verilog,ttfir2,21,0,2023-04-17 19:36:57+00:00,[],https://api.github.com/licenses/apache-2.0
356,https://github.com/IoannisIn/tt03-verilog-pwm.git,2023-04-17 16:00:29+00:00,PWM led dimming for Tiny Tapeout 03,0,IoannisIn/tt03-verilog-pwm,629097572,Verilog,tt03-verilog-pwm,40,0,2023-04-19 08:27:27+00:00,[],https://api.github.com/licenses/apache-2.0
357,https://github.com/JoshLobo-21/4-Bit-ALU.git,2023-04-19 06:43:52+00:00,,0,JoshLobo-21/4-Bit-ALU,629849797,Verilog,4-Bit-ALU,20,0,2023-04-19 06:46:05+00:00,[],None
358,https://github.com/ethanshen18/ThermoLog.git,2023-04-20 22:19:45+00:00,Foot Traffic Monitoring System,0,ethanshen18/ThermoLog,630669860,Verilog,ThermoLog,21344,0,2023-04-20 22:24:17+00:00,[],None
359,https://github.com/Shivaprasadm02/advanced_verilog.git,2023-04-13 11:13:51+00:00,,0,Shivaprasadm02/advanced_verilog,627388265,Verilog,advanced_verilog,7095,0,2023-04-13 11:19:54+00:00,[],None
360,https://github.com/adrianp1206/Tennis_Game_Verilog.git,2023-04-27 17:26:37+00:00,,0,adrianp1206/Tennis_Game_Verilog,633522886,Verilog,Tennis_Game_Verilog,6,0,2023-04-27 17:27:27+00:00,[],None
361,https://github.com/RAHUL-1881/4way-juction-traffic-light-controller.git,2023-04-27 18:01:38+00:00,A Traffic light controller using Verilog HDL.,0,RAHUL-1881/4way-juction-traffic-light-controller,633535362,Verilog,4way-juction-traffic-light-controller,100,0,2023-04-27 18:12:13+00:00,[],https://api.github.com/licenses/gpl-3.0
362,https://github.com/austenppm/simpleausten.git,2023-04-28 04:20:21+00:00,,0,austenppm/simpleausten,633692286,Verilog,simpleausten,10532,0,2023-04-28 04:27:50+00:00,[],None
363,https://github.com/lmkphdungz/RISC-SPM.git,2023-04-23 03:15:37+00:00,Design a RISC Stored-Program Machine Using Verilog HDL ,0,lmkphdungz/RISC-SPM,631442956,,RISC-SPM,21246,0,2023-04-23 03:15:37+00:00,[],None
364,https://github.com/anhducdinh/CRC_CCIT_16_enc_dec.git,2023-04-23 08:03:47+00:00,,0,anhducdinh/CRC_CCIT_16_enc_dec,631500799,Verilog,CRC_CCIT_16_enc_dec,1,0,2023-04-23 08:09:08+00:00,[],None
365,https://github.com/jeffdi/mpw-9-test.git,2023-04-24 05:07:48+00:00,,0,jeffdi/mpw-9-test,631803959,Verilog,mpw-9-test,162257,0,2023-04-24 05:38:35+00:00,[],https://api.github.com/licenses/apache-2.0
366,https://github.com/24-24i/Trojan_Detection.git,2023-04-26 11:41:45+00:00,作品赛界面,1,24-24i/Trojan_Detection,632912599,Verilog,Trojan_Detection,32014,0,2023-08-14 20:19:10+00:00,[],None
367,https://github.com/a-nnza-r/Traffic_Light_Showdown_debugtest.git,2023-04-18 07:26:40+00:00,This repo contains teseter and debugger code for testing the code,0,a-nnza-r/Traffic_Light_Showdown_debugtest,629374435,Verilog,Traffic_Light_Showdown_debugtest,2730,0,2023-04-18 07:38:08+00:00,[],None
368,https://github.com/TelezaKanthonga/Verilog.git,2023-04-20 23:07:21+00:00,,0,TelezaKanthonga/Verilog,630680367,Verilog,Verilog,3,0,2023-04-20 23:28:37+00:00,[],None
369,https://github.com/algofoogle/anton2-tt03.git,2023-04-24 12:46:54+00:00,Anton's 2nd experiment for Tiny Tapeout 3 (TT03),0,algofoogle/anton2-tt03,631968353,Verilog,anton2-tt03,44,0,2023-04-24 12:49:12+00:00,[],https://api.github.com/licenses/apache-2.0
370,https://github.com/PRAGATI-0102/FF_Using_SR-FF-Day-012_.git,2023-04-21 17:28:50+00:00,,0,PRAGATI-0102/FF_Using_SR-FF-Day-012_,631009767,Verilog,FF_Using_SR-FF-Day-012_,2,0,2023-04-21 17:30:58+00:00,[],None
371,https://github.com/SaiSharanyaVattam/Enigma_machine.git,2023-04-21 16:59:57+00:00,,0,SaiSharanyaVattam/Enigma_machine,631000627,Verilog,Enigma_machine,2219,0,2023-04-21 17:17:47+00:00,[],None
372,https://github.com/melchisedech333/verilog-for-fun.git,2023-04-21 17:47:30+00:00,,0,melchisedech333/verilog-for-fun,631015247,Verilog,verilog-for-fun,697,0,2023-04-21 21:17:04+00:00,[],https://api.github.com/licenses/bsd-3-clause
373,https://github.com/Marcox385/ARQ_Tarea_RISC_V_Pipeline_Equipo_2.git,2023-04-29 02:30:13+00:00,Tarea RISC V Pipeline para Arquitectura Computacional (P2023),0,Marcox385/ARQ_Tarea_RISC_V_Pipeline_Equipo_2,634086909,Verilog,ARQ_Tarea_RISC_V_Pipeline_Equipo_2,125,0,2023-04-29 03:14:36+00:00,[],None
374,https://github.com/baibaininlei/insert_stream.git,2023-04-26 14:28:20+00:00,,0,baibaininlei/insert_stream,632983894,Verilog,insert_stream,33,0,2023-04-26 14:29:33+00:00,[],None
375,https://github.com/nourhussin/Chipion_Program.git,2023-04-26 19:05:26+00:00,,0,nourhussin/Chipion_Program,633092440,Verilog,Chipion_Program,1155,0,2023-04-26 20:47:09+00:00,[],None
376,https://github.com/lgb12345/FPGA-implementation-of-convolution.git,2023-04-30 09:32:16+00:00,,0,lgb12345/FPGA-implementation-of-convolution,634486736,Verilog,FPGA-implementation-of-convolution,36906,0,2023-05-04 05:53:06+00:00,[],None
377,https://github.com/kc0506/CA-2023.git,2023-04-24 02:11:30+00:00,2023 Spring 台大計算機結構-楊佳玲,0,kc0506/CA-2023,631763450,Verilog,CA-2023,6158,0,2024-01-17 15:21:16+00:00,[],None
378,https://github.com/JOHNYVPD/FSM_codes.git,2023-04-14 10:54:44+00:00,,0,JOHNYVPD/FSM_codes,627855324,Verilog,FSM_codes,6,0,2023-04-14 10:57:24+00:00,[],None
379,https://github.com/BrandonBae/space-invaders.git,2023-04-14 00:15:04+00:00,,0,BrandonBae/space-invaders,627665368,Verilog,space-invaders,4468,0,2023-04-14 00:19:20+00:00,[],None
380,https://github.com/JOHNYVPD/Verilog_sequential.git,2023-04-14 10:07:14+00:00,,0,JOHNYVPD/Verilog_sequential,627839177,Verilog,Verilog_sequential,10,0,2023-04-14 10:10:14+00:00,[],None
381,https://github.com/JOHNYVPD/MIPS_16bits_processor.git,2023-04-14 10:15:29+00:00,,0,JOHNYVPD/MIPS_16bits_processor,627842057,Verilog,MIPS_16bits_processor,5,0,2023-04-14 10:17:48+00:00,[],None
382,https://github.com/Benjamin-Teng/Shift4.git,2023-04-21 15:44:51+00:00,,0,Benjamin-Teng/Shift4,630975230,Verilog,Shift4,5,0,2023-04-21 17:17:41+00:00,[],None
383,https://github.com/justyoyo123/RISC-V_CPU.git,2023-04-26 19:48:04+00:00,,0,justyoyo123/RISC-V_CPU,633106847,Verilog,RISC-V_CPU,5,0,2023-05-04 17:23:03+00:00,[],None
384,https://github.com/Wea-Code/Wea-Code.github.io.git,2023-04-26 13:26:25+00:00,one and zero ,0,Wea-Code/Wea-Code.github.io,632955860,Verilog,Wea-Code.github.io,16,0,2023-04-26 14:55:03+00:00,[],None
385,https://github.com/grorge123/Boolean-Function-Matching-Benchmark.git,2023-04-15 08:17:10+00:00,,0,grorge123/Boolean-Function-Matching-Benchmark,628205880,Verilog,Boolean-Function-Matching-Benchmark,6244,0,2023-05-25 15:14:23+00:00,[],None
386,https://github.com/vodkacoco/axi_stream_insert_header.git,2023-04-19 13:48:52+00:00,Datanlord: axi_stream_insert_header,0,vodkacoco/axi_stream_insert_header,630017118,Verilog,axi_stream_insert_header,302,0,2023-04-19 14:18:22+00:00,[],None
387,https://github.com/PRAGATI-0102/T_Flip-Flop-Day-010-.git,2023-04-19 10:17:55+00:00,"The T flip flop has single input as a ‘T’. Whenever input T=1, the output toggles from its previous state else the output remains the same as its previous state.",0,PRAGATI-0102/T_Flip-Flop-Day-010-,629933679,Verilog,T_Flip-Flop-Day-010-,128,0,2023-04-19 10:18:34+00:00,[],None
388,https://github.com/rejunity/tt03-tiny-bnn.git,2023-04-22 19:41:53+00:00,,0,rejunity/tt03-tiny-bnn,631364448,Verilog,tt03-tiny-bnn,103,0,2023-04-22 19:43:19+00:00,[],https://api.github.com/licenses/apache-2.0
389,https://github.com/MounaKrishnaEE22S082/DSP_Archi_Course_proj.git,2023-04-24 09:29:06+00:00,,0,MounaKrishnaEE22S082/DSP_Archi_Course_proj,631892958,Verilog,DSP_Archi_Course_proj,19,0,2023-04-24 09:40:51+00:00,[],None
390,https://github.com/a20084551/six_stage_pipeline_CPU.git,2023-04-24 11:08:28+00:00,,0,a20084551/six_stage_pipeline_CPU,631930157,Verilog,six_stage_pipeline_CPU,2187,0,2023-04-24 11:10:24+00:00,[],None
391,https://github.com/emo-ocean/pipeline-CPU-callled-ocean.git,2023-04-25 03:34:40+00:00,,0,emo-ocean/pipeline-CPU-callled-ocean,632260060,Verilog,pipeline-CPU-callled-ocean,101,0,2023-05-08 14:13:14+00:00,[],None
392,https://github.com/Woosyun/digital-design.git,2023-04-25 05:14:03+00:00,"디지털 설계, gate-level, iverilog codes.",0,Woosyun/digital-design,632285022,Verilog,digital-design,2,0,2023-04-25 05:23:23+00:00,[],None
393,https://github.com/aswaniar/ann_chip.git,2023-04-24 15:49:02+00:00,,0,aswaniar/ann_chip,632049046,Verilog,ann_chip,41879,0,2023-04-24 15:49:42+00:00,[],https://api.github.com/licenses/apache-2.0
394,https://github.com/nokronim/riscv-verilog.git,2023-04-24 20:21:36+00:00,,0,nokronim/riscv-verilog,632151413,Verilog,riscv-verilog,112,0,2023-04-24 20:22:50+00:00,[],None
395,https://github.com/mozerj2001/2d_fir_for_kintex7.git,2023-04-25 12:28:27+00:00,2D FIR filter for the Kintex 7 FPGA.,0,mozerj2001/2d_fir_for_kintex7,632446271,Verilog,2d_fir_for_kintex7,1793,0,2023-05-13 14:34:04+00:00,[],None
396,https://github.com/SaxonRah/FPGA-Pesudocode.git,2023-04-25 23:45:14+00:00,Verilog/HDL implementations of various impossible circuits. These are all untested as you can't do analog on an FPGA. Theoretically you could use these for an ASIC. Basically my workbook while I teach myself the syntax.,0,SaxonRah/FPGA-Pesudocode,632689392,Verilog,FPGA-Pesudocode,57,0,2023-08-24 11:31:31+00:00,[],https://api.github.com/licenses/mit
397,https://github.com/ximenanajera/Proyecto.git,2023-04-26 15:12:26+00:00,Proyecto final arquitectura de computadoras,0,ximenanajera/Proyecto,633002893,Verilog,Proyecto,3359,0,2023-04-26 16:58:43+00:00,[],None
398,https://github.com/MonetRX19/rkic_virtualmachine_update.git,2023-04-26 13:56:20+00:00,,0,MonetRX19/rkic_virtualmachine_update,632969197,Verilog,rkic_virtualmachine_update,16343,0,2023-04-26 13:56:55+00:00,[],None
399,https://github.com/PedroZanato/projetoRF.git,2023-04-26 16:37:45+00:00,,0,PedroZanato/projetoRF,633036969,Verilog,projetoRF,4,0,2023-04-26 16:48:29+00:00,[],None
400,https://github.com/smblackwll/CAOProjectPart2.git,2023-04-23 20:50:32+00:00,,0,smblackwll/CAOProjectPart2,631700505,Verilog,CAOProjectPart2,3,0,2023-04-23 20:50:56+00:00,[],None
401,https://github.com/davinder110/Approximate_Multiplier.git,2023-04-23 09:17:48+00:00,,1,davinder110/Approximate_Multiplier,631518236,Verilog,Approximate_Multiplier,3556,0,2023-04-23 09:26:03+00:00,[],None
402,https://github.com/LeostarR/Computer-Organization-Experiments.git,2023-04-15 08:36:12+00:00,,0,LeostarR/Computer-Organization-Experiments,628210439,Verilog,Computer-Organization-Experiments,284,0,2023-05-28 06:25:14+00:00,[],None
403,https://github.com/andresnv12/Tareas_CircuitosII.git,2023-04-16 19:05:17+00:00,Repositorio de Tareas para el Curso Circuitos Digitales II de la Universidad de Costa Rica.,0,andresnv12/Tareas_CircuitosII,628704260,Verilog,Tareas_CircuitosII,1269,0,2023-05-28 01:00:54+00:00,[],None
404,https://github.com/jamessa/fantastic-enigma.git,2023-04-18 15:07:21+00:00,,0,jamessa/fantastic-enigma,629564698,Verilog,fantastic-enigma,41725,0,2023-04-18 15:11:42+00:00,[],https://api.github.com/licenses/apache-2.0
405,https://github.com/JasurIsroilov/SPI_module.git,2023-04-17 12:49:11+00:00,SPI module using verilog,0,JasurIsroilov/SPI_module,629011707,Verilog,SPI_module,3,0,2023-04-17 12:51:08+00:00,[],None
406,https://github.com/ZeinNoureddin/Verilog-Based-Calculator.git,2023-04-20 11:20:01+00:00,Reprogrammed a Basys 3 FPGA board using Verilog board to perform arithmetic operations on integers from and including 0 to 99.,0,ZeinNoureddin/Verilog-Based-Calculator,630432998,Verilog,Verilog-Based-Calculator,4,0,2023-04-20 14:49:43+00:00,[],None
407,https://github.com/psychogenic/tt03_neptune_proportional.git,2023-04-20 23:09:12+00:00,"Neptune Guitar Tuner, proportional window",0,psychogenic/tt03_neptune_proportional,630680755,Verilog,tt03_neptune_proportional,150,0,2023-04-20 23:17:48+00:00,[],
408,https://github.com/IamJezza/MajorProject_NIE_G4.git,2023-04-21 11:48:34+00:00,,1,IamJezza/MajorProject_NIE_G4,630889854,Verilog,MajorProject_NIE_G4,131,0,2023-06-07 06:27:54+00:00,[],None
409,https://github.com/jchin2/PRESENT80_R1.git,2023-04-21 20:19:52+00:00,,0,jchin2/PRESENT80_R1,631057398,Verilog,PRESENT80_R1,41745,0,2023-04-21 20:20:33+00:00,[],https://api.github.com/licenses/apache-2.0
410,https://github.com/AmarBor/My-Tiny-CPU.git,2023-04-20 02:20:02+00:00,,0,AmarBor/My-Tiny-CPU,630260427,Verilog,My-Tiny-CPU,115,0,2023-04-20 02:21:37+00:00,[],None
411,https://github.com/Bun-chan/FPGA_ADC.git,2023-04-21 07:46:11+00:00,An ADC and PWM for FPGA,0,Bun-chan/FPGA_ADC,630808484,Verilog,FPGA_ADC,43026,0,2023-04-21 07:48:37+00:00,[],None
412,https://github.com/Bsovann/06-ELEVATOR-SYSTEM.git,2023-04-22 17:37:01+00:00,Simulation of Elevator System in Verilog,0,Bsovann/06-ELEVATOR-SYSTEM,631334999,Verilog,06-ELEVATOR-SYSTEM,9,0,2023-04-22 22:42:04+00:00,[],None
413,https://github.com/snehabiswas28/bus-interface.git,2023-04-30 13:03:43+00:00,simple bus interface,0,snehabiswas28/bus-interface,634536872,Verilog,bus-interface,3,0,2023-04-30 13:08:51+00:00,[],None
414,https://github.com/Pisich/risc-v-pipeline-hw.git,2023-04-29 02:29:16+00:00,,0,Pisich/risc-v-pipeline-hw,634086760,Verilog,risc-v-pipeline-hw,24280,0,2023-04-29 05:17:43+00:00,[],None
415,https://github.com/Yoganandar0073/Division-logic-in-verilog-for-floafting-point-.git,2023-04-15 08:02:44+00:00,,0,Yoganandar0073/Division-logic-in-verilog-for-floafting-point-,628202288,Verilog,Division-logic-in-verilog-for-floafting-point-,6,0,2023-04-15 08:10:42+00:00,[],None
416,https://github.com/YllkaNishevci/CPU_24bit.git,2023-04-15 18:22:39+00:00,Dizajnimi i një CPU 24-bitëshe (Single-Cycle).,0,YllkaNishevci/CPU_24bit,628369136,Verilog,CPU_24bit,17,0,2023-04-15 18:24:17+00:00,[],None
417,https://github.com/etzhong/ducking-duck.git,2023-04-13 02:33:09+00:00,,1,etzhong/ducking-duck,627214638,Verilog,ducking-duck,164,0,2023-05-08 03:04:54+00:00,[],None
418,https://github.com/GYHuang111/VSD2023.git,2023-04-30 10:27:23+00:00,,0,GYHuang111/VSD2023,634499675,Verilog,VSD2023,207102,0,2023-04-30 10:36:04+00:00,[],None
419,https://github.com/jeffdi/gpio_defaults_test.git,2023-04-27 13:57:18+00:00,,0,jeffdi/gpio_defaults_test,633440372,Verilog,gpio_defaults_test,41727,0,2023-04-27 13:57:52+00:00,[],https://api.github.com/licenses/apache-2.0
420,https://github.com/CoccaGuo/Verilog-Timer.git,2023-04-30 20:16:42+00:00,,0,CoccaGuo/Verilog-Timer,634653031,Verilog,Verilog-Timer,2,0,2023-04-30 20:32:58+00:00,[],None
421,https://github.com/CLiz17/vending-machine.git,2023-04-30 06:15:05+00:00,Verilog code for replicating a vending machine,0,CLiz17/vending-machine,634444114,Verilog,vending-machine,3,0,2024-01-10 07:53:14+00:00,"['verilog', 'xilinx-vivado']",None
422,https://github.com/davifelix5/riscV.git,2023-04-24 13:50:13+00:00,Processador riscV,0,davifelix5/riscV,631996239,Verilog,riscV,596,0,2024-01-23 16:40:37+00:00,[],None
423,https://github.com/jmimu/easy6502_ice40.git,2023-04-29 09:06:24+00:00,Fpga implementation of easy 6502,1,jmimu/easy6502_ice40,634168375,Verilog,easy6502_ice40,22820,0,2023-04-29 09:12:32+00:00,[],None
424,https://github.com/Erfan-ram/verilog.git,2023-04-20 14:30:26+00:00,verilog code,0,Erfan-ram/verilog,630508652,Verilog,verilog,26,0,2023-05-23 15:15:10+00:00,[],None
425,https://github.com/Mohammad-AbuJaber/Computer-Architecture-Projects---------Multi-Cycle-RISC-Processor--MIPS-Assembly.git,2023-04-18 19:58:45+00:00,,0,Mohammad-AbuJaber/Computer-Architecture-Projects---------Multi-Cycle-RISC-Processor--MIPS-Assembly,629677220,Verilog,Computer-Architecture-Projects---------Multi-Cycle-RISC-Processor--MIPS-Assembly,4896,0,2023-04-18 23:46:52+00:00,[],https://api.github.com/licenses/mit
426,https://github.com/nnguyendinh/FPGA-Hero.git,2023-04-28 08:01:41+00:00,,0,nnguyendinh/FPGA-Hero,633758088,Verilog,FPGA-Hero,51,0,2023-06-23 23:05:18+00:00,[],None
427,https://github.com/im-prajwal/UART_VerilogHDL.git,2023-04-28 10:30:15+00:00,,0,im-prajwal/UART_VerilogHDL,633810655,Verilog,UART_VerilogHDL,7,0,2023-09-21 10:13:18+00:00,[],None
428,https://github.com/MoShamy/DD1_Proj2.git,2023-04-29 15:46:45+00:00,This is a Sequential Signed Multiplier,0,MoShamy/DD1_Proj2,634273372,Verilog,DD1_Proj2,1075,0,2023-05-23 16:53:35+00:00,[],None
429,https://github.com/tejlagwankar/simplified-AES.git,2023-04-22 09:22:41+00:00,A simplified version of the popular AES encryption algorithm which takes 16-bit plaintext input and 16-bit key.,0,tejlagwankar/simplified-AES,631206425,Verilog,simplified-AES,92,0,2023-04-22 10:22:47+00:00,[],None
430,https://github.com/fivexxxxx/fpga_fir.git,2023-04-25 07:51:41+00:00,FIR FPGA,0,fivexxxxx/fpga_fir,632338772,Verilog,fpga_fir,7884,0,2023-04-25 07:58:41+00:00,[],None
431,https://github.com/SiLab-Bonn/GPAC_ADC_DEMO.git,2023-04-25 10:16:39+00:00,,0,SiLab-Bonn/GPAC_ADC_DEMO,632395728,Verilog,GPAC_ADC_DEMO,277,0,2023-04-25 10:21:45+00:00,[],None
432,https://github.com/mwolff79/jtframeX.git,2023-04-25 10:19:27+00:00,,0,mwolff79/jtframeX,632396791,Verilog,jtframeX,20799,0,2023-05-02 22:47:56+00:00,[],https://api.github.com/licenses/gpl-3.0
433,https://github.com/abdallahdaoud/Traffic-Light-Design---ADVANCED-DIGITAL-SYSTEMS-DESIGN.git,2023-04-22 11:35:08+00:00,,0,abdallahdaoud/Traffic-Light-Design---ADVANCED-DIGITAL-SYSTEMS-DESIGN,631238061,Verilog,Traffic-Light-Design---ADVANCED-DIGITAL-SYSTEMS-DESIGN,2520,0,2023-04-22 19:07:50+00:00,[],None
434,https://github.com/rickroller314/Verilog-PWM.git,2023-04-23 06:54:50+00:00,PWM made in Verilog,0,rickroller314/Verilog-PWM,631484909,Verilog,Verilog-PWM,2,0,2023-04-23 06:55:19+00:00,[],None
435,https://github.com/ET4351/lab1.git,2023-04-23 17:00:45+00:00,,0,ET4351/lab1,631641956,Verilog,lab1,434,0,2023-04-23 18:44:01+00:00,[],https://api.github.com/licenses/mit
436,https://github.com/exaithrg/v_sv_test.git,2023-04-24 07:02:58+00:00,Test code for Verilog & System Verilog,0,exaithrg/v_sv_test,631837962,Verilog,v_sv_test,12,0,2023-04-24 07:04:32+00:00,[],None
437,https://github.com/HayatoMurakami/vhdl_smpl.git,2023-04-28 01:04:05+00:00,,0,HayatoMurakami/vhdl_smpl,633644876,Verilog,vhdl_smpl,5,0,2023-04-28 01:04:11+00:00,[],None
438,https://github.com/JasurIsroilov/MSB.git,2023-04-17 12:54:23+00:00,Searching most high bit using verilog,0,JasurIsroilov/MSB,629013976,Verilog,MSB,4,0,2023-04-17 12:57:08+00:00,[],None
439,https://github.com/ronnygranados/Binary-Adder.git,2023-04-14 21:11:03+00:00,Binary Adder and Subtractor,0,ronnygranados/Binary-Adder,628073227,Verilog,Binary-Adder,10,0,2023-04-14 21:40:53+00:00,[],None
440,https://github.com/SaiRajat2303/MIPS-Processors.git,2023-04-15 17:05:32+00:00,MIPS based Single Cycle Processor,0,SaiRajat2303/MIPS-Processors,628348628,Verilog,MIPS-Processors,256,0,2023-04-15 17:18:37+00:00,[],None
441,https://github.com/JasurIsroilov/FIR_filter.git,2023-04-17 12:28:35+00:00,Simple FIR-filter (verilog and python),0,JasurIsroilov/FIR_filter,629003256,Verilog,FIR_filter,4,0,2023-04-17 12:31:42+00:00,[],None
442,https://github.com/itsubaidrehman/RISC-V-single-cycle.git,2023-04-14 19:00:44+00:00,Design of a single cycle RISC V processor,0,itsubaidrehman/RISC-V-single-cycle,628036732,Verilog,RISC-V-single-cycle,237,0,2023-04-14 19:48:33+00:00,[],None
443,https://github.com/497672776/modelsim_template.git,2023-04-21 08:33:38+00:00,,0,497672776/modelsim_template,630825282,Verilog,modelsim_template,3,0,2023-04-21 08:40:13+00:00,[],https://api.github.com/licenses/mit
444,https://github.com/Moondok/cpu-31.git,2023-04-24 07:37:33+00:00,A Harvard-structure CPU which supports 31 Mips assembly instructions .,0,Moondok/cpu-31,631850303,Verilog,cpu-31,342,0,2023-05-24 04:23:38+00:00,"['cpu', 'mips', 'verilog']",None
445,https://github.com/ericksuzart/AcumuladorNIOS.git,2023-04-21 20:50:12+00:00,,0,ericksuzart/AcumuladorNIOS,631064548,Verilog,AcumuladorNIOS,1681,0,2023-04-22 04:27:24+00:00,[],None
446,https://github.com/redEddie/silos.git,2023-04-24 23:14:04+00:00,from verilog hdl book,0,redEddie/silos,632197626,Verilog,silos,10111,0,2023-10-19 05:58:23+00:00,[],None
447,https://github.com/aswaniar/ann.git,2023-04-24 15:48:29+00:00,,0,aswaniar/ann,632048811,Verilog,ann,41721,0,2023-04-24 15:49:00+00:00,[],https://api.github.com/licenses/apache-2.0
448,https://github.com/cornell-c2s2/tape_in_mar_23.git,2023-04-27 04:15:40+00:00,,0,cornell-c2s2/tape_in_mar_23,633234377,Verilog,tape_in_mar_23,61923,0,2023-04-27 04:16:16+00:00,[],https://api.github.com/licenses/apache-2.0
449,https://github.com/axyrai/multiplier.git,2023-04-27 04:12:29+00:00,,0,axyrai/multiplier,633233639,Verilog,multiplier,1,0,2023-04-27 04:16:20+00:00,[],None
450,https://github.com/elliotdziemiela1/Tetris-on-FPGA.git,2023-04-13 16:16:20+00:00,An original tetris game written in systemverilog.,0,elliotdziemiela1/Tetris-on-FPGA,627515026,Verilog,Tetris-on-FPGA,524778,0,2023-10-06 15:18:57+00:00,[],None
451,https://github.com/omerdurmaz2/gomulu-sistemler.git,2023-04-16 18:52:21+00:00,,0,omerdurmaz2/gomulu-sistemler,628700808,Verilog,gomulu-sistemler,1,0,2023-04-16 18:52:27+00:00,[],None
452,https://github.com/manhcuong1502/Logic_Design.git,2023-04-20 05:32:25+00:00,,0,manhcuong1502/Logic_Design,630308477,Verilog,Logic_Design,11863,0,2023-04-20 05:33:26+00:00,[],None
453,https://github.com/Leo-H-Cao/square.git,2023-04-18 21:53:21+00:00,,0,Leo-H-Cao/square,629711257,Verilog,square,24724,0,2023-06-10 18:29:42+00:00,[],None
454,https://github.com/derzhavin3016/RISCV-verilog.git,2023-04-18 20:18:57+00:00,RISC-V pipelined cpu,0,derzhavin3016/RISCV-verilog,629684126,Verilog,RISCV-verilog,108,0,2023-04-24 17:32:15+00:00,[],https://api.github.com/licenses/mit
455,https://github.com/nicedayd/SW.git,2023-04-19 08:07:56+00:00,for test,0,nicedayd/SW,629882379,Verilog,SW,193,0,2023-04-19 08:08:50+00:00,[],https://api.github.com/licenses/apache-2.0
456,https://github.com/j0106223/DE0_TOP.git,2023-04-16 07:00:53+00:00,DE0_TOP Golden file,0,j0106223/DE0_TOP,628510352,Verilog,DE0_TOP,104,0,2023-04-16 07:26:53+00:00,[],None
457,https://github.com/leon123858/verilog_exercise.git,2023-04-14 13:47:32+00:00,2023 verilog HW,0,leon123858/verilog_exercise,627921035,Verilog,verilog_exercise,2221,0,2023-04-14 14:05:07+00:00,[],https://api.github.com/licenses/apache-2.0
458,https://github.com/FpgaPublish/f2_imag_eye.git,2023-04-14 17:04:37+00:00,基于K7实现的学习工程,0,FpgaPublish/f2_imag_eye,627996813,Verilog,f2_imag_eye,25,0,2023-04-30 16:29:38+00:00,[],https://api.github.com/licenses/mit
459,https://github.com/LuizMariano203/SD2.git,2023-04-14 12:44:26+00:00,Tentar não pirar fazendo isso aí,1,LuizMariano203/SD2,627895796,Verilog,SD2,388,0,2023-04-19 16:48:57+00:00,[],None
460,https://github.com/ahmetkaankara/Embedded-systems-homework.git,2023-04-30 13:34:56+00:00,,0,ahmetkaankara/Embedded-systems-homework,634544951,Verilog,Embedded-systems-homework,5551,0,2023-04-30 13:35:32+00:00,[],None
461,https://github.com/Stelios1908/FPGA_PS2_VGA_PWM.git,2023-04-28 21:55:35+00:00,PROJECT FPGA VERILOG,0,Stelios1908/FPGA_PS2_VGA_PWM,634038589,Verilog,FPGA_PS2_VGA_PWM,116,0,2023-07-01 17:39:49+00:00,[],None
462,https://github.com/landonriver/CPU-8bits.git,2023-04-18 08:22:59+00:00,Principles of computer composition,0,landonriver/CPU-8bits,629396323,Verilog,CPU-8bits,31570,0,2023-12-25 12:25:15+00:00,[],None
463,https://github.com/Dike-Cai/IC_design.git,2023-04-25 09:20:28+00:00,,0,Dike-Cai/IC_design,632373954,Verilog,IC_design,3358,0,2023-04-25 09:24:31+00:00,[],None
464,https://github.com/coo122567/2023_Spring_NTHU_FPGA-Prototyping-Using-Synopsys-HAPS_Demo.git,2023-04-19 08:02:14+00:00,,0,coo122567/2023_Spring_NTHU_FPGA-Prototyping-Using-Synopsys-HAPS_Demo,629880055,Verilog,2023_Spring_NTHU_FPGA-Prototyping-Using-Synopsys-HAPS_Demo,332,0,2024-01-21 09:18:42+00:00,[],None
465,https://github.com/Aviad1Akiva/Nand2Tetris.git,2023-04-16 10:46:54+00:00,,0,Aviad1Akiva/Nand2Tetris,628562742,Verilog,Nand2Tetris,158,0,2023-04-16 10:52:39+00:00,[],None
466,https://github.com/dalia315/Low-Power-Configurable-Multi-Clock-Digital-System.git,2023-04-16 14:53:12+00:00,It is responsible of receiving commands through UART receiver to do different system functions as register file reading/writing or doing some processing using ALU block and send result as well as CRC bits of result using 4 bytes frame through UART transmitter communication protocol.,0,dalia315/Low-Power-Configurable-Multi-Clock-Digital-System,628630616,Verilog,Low-Power-Configurable-Multi-Clock-Digital-System,14,0,2023-04-16 15:02:23+00:00,[],None
467,https://github.com/programmeruser2/subleq-verilog.git,2023-04-21 01:29:24+00:00,A simple CPU core for SUBLEQ written in Verilog,0,programmeruser2/subleq-verilog,630710054,Verilog,subleq-verilog,4,0,2023-04-21 21:05:29+00:00,[],https://api.github.com/licenses/mit
468,https://github.com/maryamaltawil4/CPU.git,2023-04-20 16:01:43+00:00,,0,maryamaltawil4/CPU,630547842,Verilog,CPU,8,0,2023-04-20 16:06:48+00:00,[],None
469,https://github.com/Co1dmountain/VGA_experiment.git,2023-04-21 09:21:50+00:00,VGA相关实验,0,Co1dmountain/VGA_experiment,630842642,Verilog,VGA_experiment,11168,0,2023-04-21 09:29:12+00:00,[],None
470,https://github.com/Poorva-jog/Full-Adder.git,2023-04-19 11:13:40+00:00,,0,Poorva-jog/Full-Adder,629953879,Verilog,Full-Adder,21,0,2023-04-19 11:14:47+00:00,[],None
471,https://github.com/mmonden/CA_exercise.git,2023-04-20 08:40:33+00:00,,0,mmonden/CA_exercise,630372851,Verilog,CA_exercise,5639,0,2023-04-20 08:47:55+00:00,[],None
472,https://github.com/sakshamssy/MIPS_PipelinedDatapath_withHazards.git,2023-04-28 05:25:30+00:00,MIPS Pipelined Datapath with Data Hazards and Control Hazards with Forwarding and Stalling Units Functional,0,sakshamssy/MIPS_PipelinedDatapath_withHazards,633707892,Verilog,MIPS_PipelinedDatapath_withHazards,12,0,2023-08-01 17:15:48+00:00,[],https://api.github.com/licenses/mit
473,https://github.com/mojtabahadei81/CLA-64-bit-verilog-.git,2023-04-27 21:36:13+00:00,,0,mojtabahadei81/CLA-64-bit-verilog-,633599111,Verilog,CLA-64-bit-verilog-,2173,0,2023-04-27 21:39:09+00:00,[],None
474,https://github.com/LucasBissonho/sapzinho.git,2023-04-26 16:28:45+00:00,,0,LucasBissonho/sapzinho,633033696,Verilog,sapzinho,4,0,2023-04-26 16:30:09+00:00,[],None
475,https://github.com/skynatepro/Verilog-Projects.git,2023-04-26 20:49:22+00:00,All The projects done by Me is stored in this Repository,0,skynatepro/Verilog-Projects,633125673,Verilog,Verilog-Projects,225,0,2023-04-27 10:51:16+00:00,[],None
476,https://github.com/mucorleone/chip.git,2023-04-27 15:21:56+00:00,,0,mucorleone/chip,633476040,Verilog,chip,53036,0,2023-04-27 16:15:16+00:00,[],https://api.github.com/licenses/apache-2.0
477,https://github.com/22aronl/OoOP.git,2023-04-13 04:25:51+00:00,An Out of Order Processor built in Verilog,0,22aronl/OoOP,627243981,Verilog,OoOP,373,0,2023-04-14 04:06:51+00:00,[],None
478,https://github.com/JunFN888/AXU3EG_TCL.git,2023-04-13 07:58:24+00:00,,0,JunFN888/AXU3EG_TCL,627313862,Verilog,AXU3EG_TCL,8126,0,2023-04-13 07:59:44+00:00,[],None
479,https://github.com/May-Tesla/ahb_lite.git,2023-04-26 06:21:27+00:00,,0,May-Tesla/ahb_lite,632790622,Verilog,ahb_lite,16,0,2023-04-26 06:22:22+00:00,[],None
480,https://github.com/dmaldo19/ProyectoFinalArquitectura.git,2023-04-26 15:11:16+00:00,Proyecto final para la materia Arquitectura de Computadoras,0,dmaldo19/ProyectoFinalArquitectura,633002438,Verilog,ProyectoFinalArquitectura,835,0,2023-05-23 15:50:12+00:00,[],None
481,https://github.com/DiasGomes/Cache-2vias.git,2023-04-23 16:28:06+00:00,Modelo de uma cache associativa por conjunto de 2 vias,0,DiasGomes/Cache-2vias,631632754,Verilog,Cache-2vias,1435,0,2023-04-23 16:45:33+00:00,[],None
482,https://github.com/sumanthbs17/name.git,2023-04-26 04:31:35+00:00,,0,sumanthbs17/name,632759760,Verilog,name,0,0,2023-04-26 06:06:30+00:00,[],None
483,https://github.com/FerdousALgorbeye/Digital.git,2023-04-28 17:11:26+00:00,,0,FerdousALgorbeye/Digital,633957593,Verilog,Digital,261,0,2023-09-14 14:16:09+00:00,[],None
484,https://github.com/xzljq/Simple-Computer-System-in-FPGA.git,2023-04-29 02:52:38+00:00,developed in DE-10,0,xzljq/Simple-Computer-System-in-FPGA,634090708,Verilog,Simple-Computer-System-in-FPGA,130672,0,2023-04-29 04:26:14+00:00,[],None
485,https://github.com/Sephry/Gomulu-Sistemler.git,2023-04-30 17:26:25+00:00,,0,Sephry/Gomulu-Sistemler,634610369,Verilog,Gomulu-Sistemler,4227,0,2023-04-30 17:27:28+00:00,[],None
486,https://github.com/Kaigard/ISP.git,2023-04-30 16:46:10+00:00,,1,Kaigard/ISP,634599217,Verilog,ISP,6,0,2023-04-30 16:49:08+00:00,[],None
487,https://github.com/ilydaYildiiz/memory.git,2023-04-30 19:15:12+00:00,,0,ilydaYildiiz/memory,634638507,Verilog,memory,2,0,2023-04-30 19:18:26+00:00,[],None
488,https://github.com/dsa-shua/amba-xilinx.git,2023-04-30 14:22:21+00:00,,0,dsa-shua/amba-xilinx,634557687,Verilog,amba-xilinx,1610,0,2023-04-30 14:23:48+00:00,[],None
489,https://github.com/christianreivan/OTA.git,2023-04-30 22:24:07+00:00,,0,christianreivan/OTA,634678878,Verilog,OTA,41725,0,2023-04-30 22:24:43+00:00,[],https://api.github.com/licenses/apache-2.0
490,https://github.com/RakshithaRShettigar/Binary-Counter.git,2023-04-17 16:16:18+00:00,,1,RakshithaRShettigar/Binary-Counter,629103897,Verilog,Binary-Counter,7,0,2023-04-17 16:21:41+00:00,[],None
491,https://github.com/yueyeweiliang/pre8051.git,2023-04-17 14:29:37+00:00,,0,yueyeweiliang/pre8051,629057897,Verilog,pre8051,89,0,2023-04-17 14:36:05+00:00,[],None
492,https://github.com/chelyfern/PlantsvsZombies.git,2023-04-17 22:35:24+00:00,"A recreated ""Plants vs. Zombies"" single player game implemented using an FPGA and verilog code.",0,chelyfern/PlantsvsZombies,629230037,Verilog,PlantsvsZombies,204,0,2023-04-25 19:19:44+00:00,[],None
493,https://github.com/shubham23082002/Cache-Coherence-MESI-Protocol.git,2023-04-15 12:16:37+00:00,"This project implements Cache Coherence Protocol, MESI in particular on a two-core system. Moreover, it verifies the cache coherence with exhaustive test cases. ",0,shubham23082002/Cache-Coherence-MESI-Protocol,628265984,Verilog,Cache-Coherence-MESI-Protocol,1692,0,2023-04-15 12:21:33+00:00,[],https://api.github.com/licenses/mit
494,https://github.com/melisayildirimy/fbu-cpu-rtl-tasarimi.git,2023-04-13 23:50:42+00:00,,0,melisayildirimy/fbu-cpu-rtl-tasarimi,627659946,Verilog,fbu-cpu-rtl-tasarimi,2,0,2023-04-14 00:10:27+00:00,[],None
495,https://github.com/WassuhJ/BUAA_CO.git,2023-04-14 02:24:48+00:00,2021年北航计组课设,0,WassuhJ/BUAA_CO,627697747,Verilog,BUAA_CO,29,0,2023-04-14 02:27:12+00:00,[],None
496,https://github.com/Build-A-Moat/IC_Contest_2018_CELL_BASED_Undergraduate.git,2023-04-18 07:11:46+00:00,,0,Build-A-Moat/IC_Contest_2018_CELL_BASED_Undergraduate,629368657,Verilog,IC_Contest_2018_CELL_BASED_Undergraduate,2,0,2023-05-17 08:40:58+00:00,[],None
497,https://github.com/Invisiphantom/RISC-V-Pipeline.git,2023-04-29 14:07:29+00:00,,0,Invisiphantom/RISC-V-Pipeline,634244778,Verilog,RISC-V-Pipeline,384,0,2023-04-29 14:10:33+00:00,[],https://api.github.com/licenses/apache-2.0
498,https://github.com/darklyght/SoCKat.git,2023-04-15 04:29:01+00:00,,0,darklyght/SoCKat,628156080,Verilog,SoCKat,122,0,2024-03-31 16:28:38+00:00,[],None
499,https://github.com/himanshu1308/BAS.git,2023-04-19 16:24:28+00:00,Beetle antennae search (BAS) is a newly developed meta-heuristic algorithm which is effectively used for optimizing objective functions of complex forms or even unknown forms. ,1,himanshu1308/BAS,630083950,Verilog,BAS,4175,0,2023-04-20 05:59:32+00:00,[],https://api.github.com/licenses/mit
500,https://github.com/JerryLingjieMei/ece475-proj.git,2023-04-18 01:44:13+00:00,,0,JerryLingjieMei/ece475-proj,629274875,Verilog,ece475-proj,51798,0,2023-04-18 01:44:28+00:00,[],None
501,https://github.com/Bryanskiy/CPU.git,2023-04-21 09:48:23+00:00,,0,Bryanskiy/CPU,630851824,Verilog,CPU,104,0,2023-04-23 14:28:17+00:00,[],None
502,https://github.com/hellopuza/Verilog-project.git,2023-04-22 17:48:50+00:00,,0,hellopuza/Verilog-project,631337872,Verilog,Verilog-project,8278,0,2023-04-27 09:29:01+00:00,[],None
503,https://github.com/jtzhangLogan/dvrk-velocity-control.git,2023-04-21 03:51:54+00:00,,0,jtzhangLogan/dvrk-velocity-control,630743654,Verilog,dvrk-velocity-control,13823,0,2023-04-21 03:56:00+00:00,[],None
504,https://github.com/TimKraemer1/Frog-Jump-Structural-Verilog-.git,2023-04-21 03:55:59+00:00,The popular game Frog Jump written in structural verilog on the  Basys 3 Artyx-7 FPGA board,0,TimKraemer1/Frog-Jump-Structural-Verilog-,630744553,Verilog,Frog-Jump-Structural-Verilog-,15873,0,2023-04-21 03:58:43+00:00,[],None
505,https://github.com/CherrySprings/CherrySprings-verilog.git,2023-04-18 21:27:25+00:00,,0,CherrySprings/CherrySprings-verilog,629704425,Verilog,CherrySprings-verilog,5546,0,2023-04-18 21:29:15+00:00,[],None
506,https://github.com/MarcelPratikto/ECEN-240-02-Fundamentals-of-Digital-Systems.git,2023-04-18 21:37:17+00:00,Some of the work I did for my Fundamentals of Digital Systems class. Mainly Logisim and System Verilog.,0,MarcelPratikto/ECEN-240-02-Fundamentals-of-Digital-Systems,629707107,Verilog,ECEN-240-02-Fundamentals-of-Digital-Systems,10002,0,2023-04-18 22:01:47+00:00,[],None
507,https://github.com/denizcanyildizj/FBU-Processor.git,2023-04-26 06:41:57+00:00,fbu-processor,0,denizcanyildizj/FBU-Processor,632797556,Verilog,FBU-Processor,3,0,2023-04-26 06:44:44+00:00,[],None
508,https://github.com/kojonbaidoo/VLSI_Project_2023.git,2023-04-24 23:31:07+00:00,,0,kojonbaidoo/VLSI_Project_2023,632201256,Verilog,VLSI_Project_2023,3715,0,2023-04-26 10:51:30+00:00,[],None
509,https://github.com/Colgate-3v1/aps.git,2023-04-24 16:33:30+00:00,,0,Colgate-3v1/aps,632067083,Verilog,aps,9076,0,2023-04-24 16:41:37+00:00,[],None
510,https://github.com/AdeAdeRH/FPGA-game.git,2023-04-28 17:50:30+00:00,,0,AdeAdeRH/FPGA-game,633970781,Verilog,FPGA-game,6762,0,2023-06-05 18:58:11+00:00,[],None
511,https://github.com/Bun-chan/FPGA_NIOS_II_SoC.git,2023-04-29 02:56:42+00:00,FPGA_NIOS_II_SoC,0,Bun-chan/FPGA_NIOS_II_SoC,634091440,Verilog,FPGA_NIOS_II_SoC,94661,0,2023-04-29 03:02:05+00:00,[],None
512,https://github.com/ppqppl/FPGA_PRJ.git,2023-04-28 01:34:45+00:00,,0,ppqppl/FPGA_PRJ,633651952,Verilog,FPGA_PRJ,83120,0,2023-04-28 01:35:05+00:00,[],None
513,https://github.com/Quarol/Modular_Adder_And_Subtractor.git,2023-04-17 17:54:07+00:00,A new unified modular adder/subtractor for arbitrary moduli,0,Quarol/Modular_Adder_And_Subtractor,629141795,Verilog,Modular_Adder_And_Subtractor,177,0,2023-05-10 20:08:26+00:00,"['article', 'ieee', 'research-paper']",None
514,https://github.com/YBatuhan07/Trafik-Sinyalizasyonu.git,2023-04-16 19:57:56+00:00,,0,YBatuhan07/Trafik-Sinyalizasyonu,628717983,Verilog,Trafik-Sinyalizasyonu,3,0,2023-04-16 19:59:41+00:00,[],None
515,https://github.com/Lgdavis/16-Bit-Microcontroller.git,2023-04-21 17:22:37+00:00,This is a design to implement a simple 16-bit microcontroller in Verilog. ,0,Lgdavis/16-Bit-Microcontroller,631007851,Verilog,16-Bit-Microcontroller,9,0,2023-05-13 15:02:34+00:00,[],None
516,https://github.com/jeffdi/test.git,2023-04-21 18:14:06+00:00,,0,jeffdi/test,631023293,Verilog,test,95,0,2023-04-21 18:14:13+00:00,[],https://api.github.com/licenses/apache-2.0
517,https://github.com/Shruti-Mahato/Verilog-Projects.git,2023-04-14 16:01:35+00:00,,0,Shruti-Mahato/Verilog-Projects,627974443,Verilog,Verilog-Projects,110,0,2023-04-14 16:41:49+00:00,[],None
518,https://github.com/Ahmed-Waseem77/digital_clock_Basys3.git,2023-04-24 19:22:42+00:00,implementation of a digital clock on the Basys 3 FPGA board using verilog,0,Ahmed-Waseem77/digital_clock_Basys3,632131799,Verilog,digital_clock_Basys3,5,0,2023-04-24 19:26:17+00:00,[],None
519,https://github.com/fivexxxxx/fpga_manchester.git,2023-04-25 10:22:44+00:00,manchester ,0,fivexxxxx/fpga_manchester,632397958,Verilog,fpga_manchester,157,0,2023-04-25 10:25:14+00:00,[],None
520,https://github.com/ridvikpal/enhanced_processor.git,2023-04-30 13:14:02+00:00,Working Code for ECE243 Lab 8 (Winter 2023) at the University of Toronto. Main code is written in Verilog.,0,ridvikpal/enhanced_processor,634539492,Verilog,enhanced_processor,613,0,2023-04-30 13:59:19+00:00,"['de1-soc', 'uoft', 'verilog']",None
521,https://github.com/ArpitNITC/100_days_of_rtl.git,2023-04-26 07:54:27+00:00,,0,ArpitNITC/100_days_of_rtl,632823784,Verilog,100_days_of_rtl,21,0,2023-04-28 12:53:00+00:00,[],None
522,https://github.com/GYHuang111/IC_contest.git,2023-04-30 10:08:00+00:00,,0,GYHuang111/IC_contest,634495141,Verilog,IC_contest,44323,0,2023-04-30 10:18:30+00:00,[],None
523,https://github.com/dila128/Gomulu_S-stemler_traffic_light.git,2023-04-14 22:34:57+00:00,,0,dila128/Gomulu_S-stemler_traffic_light,628092300,Verilog,Gomulu_S-stemler_traffic_light,0,0,2023-04-14 22:35:40+00:00,[],None
524,https://github.com/SE-O22-ITESO/p2-single-cycle-antonio_rangel.git,2023-04-13 04:56:45+00:00,p2-single-cycle-antonio_rangel created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-antonio_rangel,627252104,Verilog,p2-single-cycle-antonio_rangel,27187,0,2023-04-13 05:10:52+00:00,[],None
525,https://github.com/aswaniar/inverter1.git,2023-04-13 08:18:45+00:00,,0,aswaniar/inverter1,627321535,Verilog,inverter1,41725,0,2023-04-13 08:19:24+00:00,[],https://api.github.com/licenses/apache-2.0
526,https://github.com/yelbuod/brent-kung-adder.git,2023-04-16 14:25:42+00:00,,0,yelbuod/brent-kung-adder,628622298,Verilog,brent-kung-adder,4,0,2023-04-16 14:30:26+00:00,[],None
527,https://github.com/Dhanush-04/UART-in-Verilog.git,2023-04-18 08:48:53+00:00,,0,Dhanush-04/UART-in-Verilog,629406473,Verilog,UART-in-Verilog,3,0,2023-04-18 08:52:04+00:00,[],None
528,https://github.com/mary-k99/photo_disdrometer.git,2023-04-30 14:33:05+00:00,,0,mary-k99/photo_disdrometer,634560662,Verilog,photo_disdrometer,7010,0,2023-04-30 14:54:43+00:00,[],None
529,https://github.com/RaviKumarKorada217/ROUTER_1-3.git,2023-04-24 03:58:50+00:00,,0,RaviKumarKorada217/ROUTER_1-3,631788080,Verilog,ROUTER_1-3,728,0,2023-04-24 04:00:48+00:00,[],None
530,https://github.com/Sivaprakasam-741/VGA_interface-with_FPGA.git,2023-04-21 14:57:04+00:00,,0,Sivaprakasam-741/VGA_interface-with_FPGA,630958174,Verilog,VGA_interface-with_FPGA,1096,0,2023-04-21 16:33:35+00:00,[],None
531,https://github.com/mireavmis/PS2.git,2023-04-18 13:05:24+00:00,PS2 interface implementation,0,mireavmis/PS2,629508425,Verilog,PS2,22,0,2023-04-18 13:07:26+00:00,[],None
532,https://github.com/ponderingm/carevel.git,2023-04-20 08:14:13+00:00,,0,ponderingm/carevel,630363084,Verilog,carevel,41725,0,2023-04-20 08:14:51+00:00,[],https://api.github.com/licenses/apache-2.0
533,https://github.com/cowboy35927/SOM-Processing-System.git,2023-04-14 02:48:36+00:00,,0,cowboy35927/SOM-Processing-System,627704147,Verilog,SOM-Processing-System,8262,0,2023-04-14 02:49:43+00:00,[],None
534,https://github.com/jiax0105/axi_stream_insert_header.git,2023-04-13 14:49:32+00:00,,0,jiax0105/axi_stream_insert_header,627478698,Verilog,axi_stream_insert_header,94,0,2023-04-13 15:45:23+00:00,[],None
535,https://github.com/pragati21code/Vending-Machine.git,2023-04-13 17:43:59+00:00,,0,pragati21code/Vending-Machine,627550405,Verilog,Vending-Machine,3,0,2023-04-22 13:07:19+00:00,[],None
536,https://github.com/tugce90karakaya/TekPortRAM.git,2023-04-15 14:11:04+00:00,TekPortRAM,0,tugce90karakaya/TekPortRAM,628297897,Verilog,TekPortRAM,3,0,2023-04-15 14:11:11+00:00,[],None
537,https://github.com/sontung1010/MacOS-FPGA-Toolchain.git,2023-04-16 08:00:57+00:00,,0,sontung1010/MacOS-FPGA-Toolchain,628523415,Verilog,MacOS-FPGA-Toolchain,9369,0,2023-04-16 08:01:33+00:00,[],None
538,https://github.com/mikebayth/GRAND.git,2023-04-18 14:31:58+00:00,,0,mikebayth/GRAND,629548233,,GRAND,988480,0,2023-04-14 10:15:42+00:00,[],None
539,https://github.com/TonyRangel/pipeline-riscv-processor.git,2023-04-19 03:15:29+00:00,5 stages pipeline riscv processor ,0,TonyRangel/pipeline-riscv-processor,629792027,Verilog,pipeline-riscv-processor,27715,0,2023-04-19 03:19:05+00:00,[],None
540,https://github.com/RaimeSong/VerilogStudy.git,2023-04-19 02:18:09+00:00,,0,RaimeSong/VerilogStudy,629777071,Verilog,VerilogStudy,8,0,2023-04-19 03:11:07+00:00,[],None
541,https://github.com/bogdan-krstic/fifo.git,2023-04-14 17:46:12+00:00,,0,bogdan-krstic/fifo,628011925,Verilog,fifo,7,0,2023-04-18 14:26:51+00:00,[],https://api.github.com/licenses/mit
542,https://github.com/manhcuong1502/VLSI.git,2023-04-20 05:35:11+00:00,,0,manhcuong1502/VLSI,630309292,Verilog,VLSI,21222,0,2023-04-20 05:36:41+00:00,[],None
543,https://github.com/pragati21code/Combinational-Circuit.git,2023-04-20 18:37:02+00:00,,0,pragati21code/Combinational-Circuit,630605134,Verilog,Combinational-Circuit,49,0,2023-04-20 18:42:23+00:00,[],None
544,https://github.com/SahaDipto/Efabless_CU.git,2023-04-25 16:40:00+00:00,,0,SahaDipto/Efabless_CU,632553799,Verilog,Efabless_CU,41721,0,2023-04-25 16:40:38+00:00,[],https://api.github.com/licenses/apache-2.0
545,https://github.com/SalahAbotaleb/Advanced-Encryption-System.git,2023-04-24 14:15:17+00:00,Advanced Encryption System hardware using AES standards and SPI interface.,0,SalahAbotaleb/Advanced-Encryption-System,632007877,Verilog,Advanced-Encryption-System,10246,0,2023-07-07 02:28:14+00:00,[],None
546,https://github.com/sivananthampalaniappan/verilog_code.git,2023-04-24 06:12:53+00:00,This repository is to learn verilog code for basic digital circuits,0,sivananthampalaniappan/verilog_code,631821312,Verilog,verilog_code,3151,0,2023-04-28 02:13:29+00:00,['verilog-hdl'],None
547,https://github.com/TnTsukasa/evo_ap_mult_github.git,2023-04-27 15:47:26+00:00,,0,TnTsukasa/evo_ap_mult_github,633485734,Verilog,evo_ap_mult_github,170,0,2023-04-27 15:48:59+00:00,[],None
548,https://github.com/yggycs/Montgomery_multiply.git,2023-04-22 13:12:24+00:00,,0,yggycs/Montgomery_multiply,631262617,Verilog,Montgomery_multiply,1255,0,2023-04-25 07:45:35+00:00,[],None
549,https://github.com/liaoyige/FPGA_project.git,2023-04-22 05:39:01+00:00,,0,liaoyige/FPGA_project,631157378,Verilog,FPGA_project,31026,0,2023-04-22 05:39:51+00:00,[],None
550,https://github.com/J-Bhavana/RISC_V_RP.git,2023-04-29 09:16:55+00:00,DESIGN AND IMPLEMENTATION OF RISC-V INSTRUCTION SET ARCHITECTURE(ISA),0,J-Bhavana/RISC_V_RP,634170965,Verilog,RISC_V_RP,7,0,2023-04-29 09:32:20+00:00,[],None
551,https://github.com/Snigdha2005/Verilog.git,2023-04-29 16:33:28+00:00,,0,Snigdha2005/Verilog,634286481,Verilog,Verilog,7,0,2023-04-29 16:34:09+00:00,[],None
552,https://github.com/itsnishit/AxPPA-Approximate-Parallel-Prefix-Adders.git,2023-04-14 14:16:16+00:00,,0,itsnishit/AxPPA-Approximate-Parallel-Prefix-Adders,627932465,Verilog,AxPPA-Approximate-Parallel-Prefix-Adders,1054,0,2023-04-14 14:21:44+00:00,[],None
553,https://github.com/OguzKahramn/FPGA_examples.git,2023-04-18 06:14:02+00:00,FPGA Examples,0,OguzKahramn/FPGA_examples,629347855,Verilog,FPGA_examples,17,0,2023-04-18 17:30:47+00:00,[],None
554,https://github.com/AaronPacheco24/Verilog_Practice.git,2023-04-18 06:34:13+00:00,,0,AaronPacheco24/Verilog_Practice,629354640,Verilog,Verilog_Practice,27,0,2023-04-18 06:38:00+00:00,[],None
555,https://github.com/ThomasLuchies/Tetris-FPGA.git,2023-04-17 14:39:11+00:00,A Tetris clone made for the Altera DE2-115 FPGA development board.,0,ThomasLuchies/Tetris-FPGA,629062399,Verilog,Tetris-FPGA,90107,0,2023-08-30 22:08:43+00:00,[],None
556,https://github.com/sail-Yang/cpu.git,2023-04-17 03:19:34+00:00,Simple MIPS CPU ,0,sail-Yang/cpu,628815367,Verilog,cpu,4945,0,2023-04-18 09:04:25+00:00,[],None
557,https://github.com/Shivaprasadm02/verilog.git,2023-04-13 11:07:59+00:00,,0,Shivaprasadm02/verilog,627386093,Verilog,verilog,23,0,2023-04-13 11:09:34+00:00,[],None
558,https://github.com/Hao7un/ComputerOrganization-BUAA-2022.git,2023-04-28 11:56:46+00:00,北航计算机学院2022年计算机组成课程设计,0,Hao7un/ComputerOrganization-BUAA-2022,633838845,Verilog,ComputerOrganization-BUAA-2022,7317,0,2023-12-24 04:13:36+00:00,[],None
559,https://github.com/Thaylor-Hugo/SD2.git,2023-04-25 01:52:26+00:00,,0,Thaylor-Hugo/SD2,632233855,Verilog,SD2,103,0,2024-01-21 15:08:28+00:00,[],None
560,https://github.com/luke-igaw/SNU-Logic-Design.git,2023-04-19 10:26:20+00:00,SNU CSE Logic Design,0,luke-igaw/SNU-Logic-Design,629936705,Verilog,SNU-Logic-Design,25,0,2023-11-13 10:35:54+00:00,[],None
561,https://github.com/KULeuven-Diepenbeek/course_hwswcodesign.git,2023-04-24 07:32:04+00:00,,2,KULeuven-Diepenbeek/course_hwswcodesign,631848333,Verilog,course_hwswcodesign,10954,0,2024-01-15 14:31:50+00:00,[],None
562,https://github.com/ftppz/phase-3.git,2023-04-25 13:11:10+00:00,,0,ftppz/phase-3,632463752,Verilog,phase-3,4600,0,2023-04-25 13:12:34+00:00,[],None
563,https://github.com/zjw2020EE/Design-of-a-CPU-by-Gated-Circuit.git,2023-04-26 14:10:40+00:00,A project from course Fundamental of digital logic and processor,0,zjw2020EE/Design-of-a-CPU-by-Gated-Circuit,632975904,Verilog,Design-of-a-CPU-by-Gated-Circuit,14,0,2023-04-26 14:24:09+00:00,[],https://api.github.com/licenses/mit
564,https://github.com/kilka-rav/simulatorRISCV.git,2023-04-23 07:08:19+00:00,simulator RISCV on the verilog,0,kilka-rav/simulatorRISCV,631488085,Verilog,simulatorRISCV,3667,0,2023-04-23 21:19:04+00:00,[],None
565,https://github.com/AnanyaVaibhavi/Y86-64-Processor-.git,2023-04-21 18:49:24+00:00,Verilog implementation of a Y86-64 Processor,0,AnanyaVaibhavi/Y86-64-Processor-,631033662,Verilog,Y86-64-Processor-,4369,0,2023-04-21 18:52:50+00:00,[],None
566,https://github.com/KriiFT/IA_TP_Damien_TRAN.git,2023-04-14 09:24:47+00:00,,0,KriiFT/IA_TP_Damien_TRAN,627823647,Verilog,IA_TP_Damien_TRAN,119,0,2023-04-14 09:29:30+00:00,[],None
567,https://github.com/oriod-malo/DE10-Lite-SONAR-2.0.git,2023-04-14 17:37:57+00:00,Updated version of the old DE10-lite based SONAR,0,oriod-malo/DE10-Lite-SONAR-2.0,628008979,Verilog,DE10-Lite-SONAR-2.0,345,0,2023-04-14 17:39:53+00:00,[],None
568,https://github.com/CalvinHsu0901/2023_HAPS_Finalproject_111064559.git,2023-04-14 14:58:21+00:00,JPEG Decoder implementation through Synopsys HAPS design flow,0,CalvinHsu0901/2023_HAPS_Finalproject_111064559,627949816,Verilog,2023_HAPS_Finalproject_111064559,799,0,2023-04-28 04:11:58+00:00,[],None
569,https://github.com/Martofol/bz403_spring_2023_Davud_Kalayal.git,2023-04-18 20:22:23+00:00,Home Work,0,Martofol/bz403_spring_2023_Davud_Kalayal,629685205,Verilog,bz403_spring_2023_Davud_Kalayal,2295,0,2023-09-07 11:12:03+00:00,[],None
570,https://github.com/PRAGATI-0102/JK_Flip-Flop-Day-011-.git,2023-04-20 17:10:42+00:00, I designed a JK Flip-Flop using Verilog behavioral modeling. A JK Flip-Flop is a type of flip-flop that can be used as a basic building block in digital circuit design to store one bit of data.,0,PRAGATI-0102/JK_Flip-Flop-Day-011-,630574217,Verilog,JK_Flip-Flop-Day-011-,146,0,2023-04-20 17:37:49+00:00,[],None
571,https://github.com/meerkat-log/Digital_Logic_Circuit.git,2023-04-23 12:02:48+00:00,,0,meerkat-log/Digital_Logic_Circuit,631557442,Verilog,Digital_Logic_Circuit,147,0,2023-05-19 13:04:34+00:00,[],None
572,https://github.com/YinCH724/computer-organization.git,2023-04-24 04:06:21+00:00,,0,YinCH724/computer-organization,631789766,Verilog,computer-organization,10,0,2023-06-16 08:00:23+00:00,[],None
573,https://github.com/hossein0gh/nand-only-xnor.git,2023-04-23 14:53:47+00:00,Design and simulation of nand only xnor in verilog,0,hossein0gh/nand-only-xnor,631605511,Verilog,nand-only-xnor,477,0,2023-04-23 15:03:01+00:00,[],None
574,https://github.com/wjcccccc/NYCU_CO.git,2023-04-27 07:36:30+00:00,,0,wjcccccc/NYCU_CO,633294515,Verilog,NYCU_CO,7,0,2023-04-27 07:38:09+00:00,[],None
575,https://github.com/pibha/UART.git,2023-04-28 09:15:52+00:00,,0,pibha/UART,633785029,Verilog,UART,1357,0,2023-04-28 09:51:44+00:00,[],None
576,https://github.com/matchy-at-snu/logic-design-lab.git,2023-04-29 11:29:14+00:00,🍟 Logic Design Verilog practice,0,matchy-at-snu/logic-design-lab,634203718,Verilog,logic-design-lab,71167,0,2023-04-29 11:41:16+00:00,"['logic-design', 'verilog']",None
577,https://github.com/JuanIgnacioHZ/Tarea-1-IE0523-B93826.git,2023-04-17 02:28:52+00:00,Entrega de la tarea 1 del curso Circuitos Digitales II,0,JuanIgnacioHZ/Tarea-1-IE0523-B93826,628802163,Verilog,Tarea-1-IE0523-B93826,21,0,2023-04-17 02:30:59+00:00,[],None
578,https://github.com/panicmarvin/Learn-Cortex-M0.git,2023-04-17 11:12:16+00:00,,1,panicmarvin/Learn-Cortex-M0,628973323,Verilog,Learn-Cortex-M0,5985,0,2023-04-17 11:35:46+00:00,[],None
579,https://github.com/PRAGATI-0102/3X8_Decoder-Day-007-.git,2023-04-16 15:50:44+00:00," A decoder is a combinational circuit that converts a coded input into a set of outputs. In my implementation, I used a 3-bit binary input and 8 outputs to create a 3-to-8 decoder that activates one of the 8 outputs based on the input code.",0,PRAGATI-0102/3X8_Decoder-Day-007-,628648352,Verilog,3X8_Decoder-Day-007-,113,0,2023-04-16 15:51:13+00:00,[],None
580,https://github.com/GulnurKorkmaz/GomuluSistemler.git,2023-04-16 14:43:41+00:00,,0,GulnurKorkmaz/GomuluSistemler,628627689,Verilog,GomuluSistemler,4703,0,2023-04-16 14:50:15+00:00,[],https://api.github.com/licenses/mit
581,https://github.com/chienthan-cucu/MS.git,2023-04-15 13:12:20+00:00,,0,chienthan-cucu/MS,628280772,Verilog,MS,56,0,2023-04-15 13:16:04+00:00,[],None
582,https://github.com/AxlNuke/Verilog.git,2023-04-15 14:27:50+00:00,,0,AxlNuke/Verilog,628302910,Verilog,Verilog,12,0,2023-05-03 13:40:33+00:00,[],None
583,https://github.com/arthurnamz/Mini-Lab-Project-on-Verilog.git,2023-04-18 06:57:17+00:00,"This project is all about creating, a generator which generate the power of 3 numbers and send through FiFI to the Memory Controller then Memory. I will use the AXI-STREAM interface",0,arthurnamz/Mini-Lab-Project-on-Verilog,629363259,Verilog,Mini-Lab-Project-on-Verilog,212,0,2023-04-18 07:00:45+00:00,[],None
584,https://github.com/Arima9/IMTC20.git,2023-04-23 06:41:36+00:00,Eight bit processor with Ten bit address bus.,0,Arima9/IMTC20,631481966,Verilog,IMTC20,3,0,2023-04-23 06:48:50+00:00,[],None
585,https://github.com/samiyaalizaidi/Pipelined-RISC-V-Processor.git,2023-04-17 04:48:27+00:00,A Pipelined RISC-V Processor with forwarding support and hazard detection.,0,samiyaalizaidi/Pipelined-RISC-V-Processor,628836640,Verilog,Pipelined-RISC-V-Processor,81,0,2023-06-14 13:38:41+00:00,"['computer-architecture', 'pipelining', 'risc-v', 'assembly', 'processor', 'processor-architecture', 'verilog', 'vivado']",None
586,https://github.com/Sameersinghere/Verilogcodes.git,2023-04-29 13:10:55+00:00,These are the codes i have written regarding almost all topics of digital design with the testbenches ,0,Sameersinghere/Verilogcodes,634229515,Verilog,Verilogcodes,26,0,2023-08-07 12:25:22+00:00,[],None
587,https://github.com/Wevel/ExperiarSoC_Tests.git,2023-04-24 12:22:43+00:00,SoC tests,0,Wevel/ExperiarSoC_Tests,631958539,Verilog,ExperiarSoC_Tests,170697,0,2023-05-19 22:25:44+00:00,[],https://api.github.com/licenses/apache-2.0
588,https://github.com/iremnuy/EncoderMultiplexer.git,2023-04-13 08:32:47+00:00,,0,iremnuy/EncoderMultiplexer,627326985,Verilog,EncoderMultiplexer,2,0,2024-01-16 08:59:41+00:00,[],None
589,https://github.com/mec2021045/RTL_Codes.git,2023-04-14 18:57:35+00:00,,0,mec2021045/RTL_Codes,628035800,Verilog,RTL_Codes,362,0,2023-05-03 10:49:19+00:00,[],None
590,https://github.com/bogdan-krstic/round-robin.git,2023-04-14 17:13:58+00:00,,0,bogdan-krstic/round-robin,628000272,Verilog,round-robin,4,0,2023-04-18 14:27:05+00:00,[],https://api.github.com/licenses/mit
591,https://github.com/eymay/L2R_Exp.git,2023-04-17 21:14:09+00:00,"Hardware implementation of ""Left to Right Exponentiation"" algorithm.",0,eymay/L2R_Exp,629208778,Verilog,L2R_Exp,27007,0,2023-04-17 21:15:21+00:00,[],None
592,https://github.com/kurm33/verilog-.git,2023-04-19 15:37:18+00:00,,0,kurm33/verilog-,630064847,Verilog,verilog-,2,0,2023-04-19 15:45:44+00:00,[],None
593,https://github.com/AkshayD13/SAD_full_search.git,2023-04-14 17:44:41+00:00,,0,AkshayD13/SAD_full_search,628011381,Verilog,SAD_full_search,553,0,2023-04-14 17:52:52+00:00,[],None
594,https://github.com/PRAGATI-0102/8X3_Encoder-Day-006-.git,2023-04-15 16:02:09+00:00," An encoder is a combinational circuit that converts a set of inputs into a coded output. In my implementation, I used 8 inputs and 3 outputs to create an 8x3 priority encoder that encodes the highest active input into its binary equivalent.",0,PRAGATI-0102/8X3_Encoder-Day-006-,628330854,Verilog,8X3_Encoder-Day-006-,76,0,2023-04-15 16:03:28+00:00,[],None
595,https://github.com/ttffer/thesis_code.git,2023-04-15 03:21:25+00:00,,0,ttffer/thesis_code,628143894,Verilog,thesis_code,20679,0,2023-04-15 03:29:07+00:00,[],None
596,https://github.com/ozcaglarbora/trafik_sinyalizasyonu_verilog.git,2023-04-15 07:40:54+00:00,Gowin & Verilog ile Trafik Sinyalizasyonu,0,ozcaglarbora/trafik_sinyalizasyonu_verilog,628197014,Verilog,trafik_sinyalizasyonu_verilog,3573,0,2023-04-15 07:44:18+00:00,[],None
597,https://github.com/qviettt/rv.git,2023-04-30 13:46:56+00:00,,0,qviettt/rv,634548187,Verilog,rv,22,0,2023-04-30 13:49:55+00:00,[],None
598,https://github.com/MuhammadMajiid/PIG.git,2023-04-13 15:10:22+00:00,"Smart Pipeline Inspection Pig Control Logic, modelled in Verilog",0,MuhammadMajiid/PIG,627487950,Verilog,PIG,25,0,2023-09-29 14:09:35+00:00,[],None
599,https://github.com/mohos455/Verilog.git,2023-04-14 03:02:43+00:00,,0,mohos455/Verilog,627707947,Verilog,Verilog,12,0,2023-04-18 04:43:57+00:00,[],None
600,https://github.com/MinHsuanYu/1072-Yzu-Digital-Systems-Lab.git,2023-04-13 08:06:00+00:00,,0,MinHsuanYu/1072-Yzu-Digital-Systems-Lab,627316678,Verilog,1072-Yzu-Digital-Systems-Lab,6174,0,2023-04-13 08:15:51+00:00,[],None
601,https://github.com/BMR0305/g1_computer_architecture_1_2023.git,2023-04-13 03:24:04+00:00,Proyecto grupal #!,1,BMR0305/g1_computer_architecture_1_2023,627228402,Verilog,g1_computer_architecture_1_2023,5242,0,2023-06-13 02:21:00+00:00,[],None
602,https://github.com/lambdaconcept/efx-jtag-spi-flash-loader.git,2023-04-13 14:38:28+00:00,Efinix JTAG SPI Flash loader proxy bitstream,1,lambdaconcept/efx-jtag-spi-flash-loader,627473738,Verilog,efx-jtag-spi-flash-loader,116,0,2023-04-13 14:42:10+00:00,[],None
603,https://github.com/AbdullahAyman02/AES-using-Verilog-HDL.git,2023-04-23 18:38:41+00:00,,3,AbdullahAyman02/AES-using-Verilog-HDL,631668473,Verilog,AES-using-Verilog-HDL,70,0,2023-06-07 14:49:15+00:00,[],None
604,https://github.com/MohammadAmr20/AES-System.git,2023-04-23 18:56:52+00:00,,0,MohammadAmr20/AES-System,631673233,Verilog,AES-System,487,0,2023-04-24 01:05:48+00:00,[],None
605,https://github.com/HarithSami/Verilog-projects.git,2023-04-23 05:02:14+00:00,Various Verilog Projects created for the DE10-Lite Board,0,HarithSami/Verilog-projects,631461472,Verilog,Verilog-projects,14,0,2023-04-23 05:09:00+00:00,[],https://api.github.com/licenses/mit
606,https://github.com/chakshandhir004/Verilog.git,2023-04-25 04:44:38+00:00,,0,chakshandhir004/Verilog,632277268,Verilog,Verilog,53,0,2023-04-25 04:45:36+00:00,[],None
607,https://github.com/CoquettishZyz/MIPS_CPU.git,2023-04-21 13:26:31+00:00,,0,CoquettishZyz/MIPS_CPU,630923802,Verilog,MIPS_CPU,23,0,2023-04-21 13:27:40+00:00,[],None
608,https://github.com/maiquanh1210/digitalDesign_lab.git,2023-04-22 15:01:05+00:00,,0,maiquanh1210/digitalDesign_lab,631292426,Verilog,digitalDesign_lab,7,0,2023-04-22 15:16:41+00:00,[],None
609,https://github.com/Pedro-Seixas/Digital-Stop-Watch.git,2023-04-27 16:02:03+00:00,,0,Pedro-Seixas/Digital-Stop-Watch,633491297,Verilog,Digital-Stop-Watch,3127,0,2023-04-27 16:07:26+00:00,[],https://api.github.com/licenses/mit
610,https://github.com/vsiva308/385FinalProject.git,2023-04-28 01:23:26+00:00,The final project for ECE 385.,0,vsiva308/385FinalProject,633649279,Verilog,385FinalProject,7919,0,2023-08-16 20:36:28+00:00,[],None
611,https://github.com/piyushkandoriya/CORDIC.git,2023-04-27 16:35:49+00:00,,0,piyushkandoriya/CORDIC,633504182,Verilog,CORDIC,906,0,2023-04-28 08:45:43+00:00,[],None
612,https://github.com/aserenate/multicast_router.git,2023-04-27 07:17:49+00:00,,0,aserenate/multicast_router,633287681,Verilog,multicast_router,36,0,2023-10-26 01:35:36+00:00,[],None
613,https://github.com/NoNounknow/I2C_EEPROM_control.git,2023-04-24 13:31:54+00:00,主要参考了小梅哥的代码和视频，新手练习。,0,NoNounknow/I2C_EEPROM_control,631988104,Verilog,I2C_EEPROM_control,12,0,2023-04-30 12:50:44+00:00,[],None
614,https://github.com/shinyuchen/ICDLAB_Final.git,2023-04-26 11:46:35+00:00,,1,shinyuchen/ICDLAB_Final,632914434,Verilog,ICDLAB_Final,106568,0,2023-04-26 12:10:18+00:00,[],None
615,https://github.com/anasabk/A-Single-Cycle-MIPS-CPU.git,2023-04-26 13:15:49+00:00,,0,anasabk/A-Single-Cycle-MIPS-CPU,632951108,Verilog,A-Single-Cycle-MIPS-CPU,412,0,2023-04-26 13:39:41+00:00,[],None
616,https://github.com/minhaj6/modelsim-tutorials.git,2023-04-28 09:40:23+00:00,modelsim tutorials,0,minhaj6/modelsim-tutorials,633793649,Verilog,modelsim-tutorials,34,0,2023-04-28 10:17:49+00:00,[],https://api.github.com/licenses/mit
617,https://github.com/ljtxsg/HDL_BITs.git,2023-04-28 09:09:47+00:00,HDL-BITs的通过代码,0,ljtxsg/HDL_BITs,633782875,Verilog,HDL_BITs,42,0,2023-04-29 12:26:27+00:00,[],None
618,https://github.com/aileneiioana/NiosII_HDL.git,2023-04-28 11:16:01+00:00,,0,aileneiioana/NiosII_HDL,633825385,Verilog,NiosII_HDL,231814,0,2023-05-11 14:44:54+00:00,"['eclipse', 'fpga', 'nios-embedded-system', 'nios-ii', 'qsys', 'verilog', 'altera', 'de10-lite', 'hdl', 'quartus', 'terasic-de10-lite', 'avalon']",None
619,https://github.com/Soham-coder/TPU_4_X_4.git,2023-04-15 07:45:20+00:00,TPU_4_X_4,0,Soham-coder/TPU_4_X_4,628198065,Verilog,TPU_4_X_4,5134,0,2023-04-15 15:36:41+00:00,[],None
620,https://github.com/htfab/microtapeout.git,2023-04-19 18:11:47+00:00,,0,htfab/microtapeout,630125841,Verilog,microtapeout,16227,0,2023-08-30 20:31:45+00:00,[],https://api.github.com/licenses/apache-2.0
621,https://github.com/Zofek/SDUP_quicksort.git,2023-04-20 12:17:57+00:00,,0,Zofek/SDUP_quicksort,630454195,Verilog,SDUP_quicksort,248,0,2023-05-01 14:21:35+00:00,[],None
622,https://github.com/AgamemnonasKyriazis/Asynchronous-FIFO.git,2023-04-20 15:00:01+00:00,RTL code for an async fifo queue for clock domain crossing,0,AgamemnonasKyriazis/Asynchronous-FIFO,630521587,Verilog,Asynchronous-FIFO,5,0,2023-04-20 15:00:40+00:00,[],https://api.github.com/licenses/mit
623,https://github.com/giuseppequaratino/daniel_kim_tapeout_temp.git,2023-04-25 00:10:01+00:00,,0,giuseppequaratino/daniel_kim_tapeout_temp,632209597,Verilog,daniel_kim_tapeout_temp,41784,0,2023-04-25 00:10:39+00:00,[],https://api.github.com/licenses/apache-2.0
624,https://github.com/mohamed-mohamed-tarek/verilog-ass.git,2023-04-25 00:49:31+00:00,,0,mohamed-mohamed-tarek/verilog-ass,632218507,Verilog,verilog-ass,0,0,2023-05-25 10:00:32+00:00,[],None
625,https://github.com/Trehan-Mayank/P3_Traffic_Light_Controllers_VERILOG.git,2023-04-21 16:35:52+00:00,Traffic Light Controllers (TLC),0,Trehan-Mayank/P3_Traffic_Light_Controllers_VERILOG,630992938,Verilog,P3_Traffic_Light_Controllers_VERILOG,6,0,2023-04-26 18:33:25+00:00,[],None
626,https://github.com/AnanyaV2004/Y86-64-Processor.git,2023-04-21 19:05:11+00:00,A Processor architecture design based on the Y86 ISA using Verilog. A full fledged processor architecture implementation with 5 stage pipeline which includes support for eliminating pipeline hazards.,0,AnanyaV2004/Y86-64-Processor,631038127,Verilog,Y86-64-Processor,4367,0,2023-04-23 07:06:56+00:00,[],None
627,https://github.com/eymay/Memory_Units.git,2023-04-19 11:14:52+00:00,"Instruction, Data Mem. and Regfile",0,eymay/Memory_Units,629954275,Verilog,Memory_Units,2591,0,2023-12-01 12:07:15+00:00,[],None
628,https://github.com/New-pro125/AES_Project.git,2023-04-27 14:48:14+00:00,"""Dive into the world of secure data with Verilog's dynamic implementation of the AES algorithm! Unleash cryptographic prowess with variants tailored to 128, 192, and 256-bit sizes. Elevate your designs, fortify your systems, and encrypt with confidence. #VerilogAES #SecureDesigns 🛡️🔒""",0,New-pro125/AES_Project,633461967,Verilog,AES_Project,39,0,2024-01-20 19:55:42+00:00,[],https://api.github.com/licenses/mit
629,https://github.com/SE-O22-ITESO/p2-single-cycle-alberto_vargas_garrido.git,2023-04-14 02:17:44+00:00,p2-single-cycle-alberto_vargas_garrido created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-alberto_vargas_garrido,627695843,Verilog,p2-single-cycle-alberto_vargas_garrido,118140,0,2023-04-14 02:23:08+00:00,[],None
630,https://github.com/meosii/ahbmaster.git,2023-04-14 02:51:56+00:00,,0,meosii/ahbmaster,627705078,Verilog,ahbmaster,16,0,2023-04-14 03:45:57+00:00,[],None
631,https://github.com/AbhinavM71/MAURYAN_NEXRAD.git,2023-04-13 11:22:59+00:00,,0,AbhinavM71/MAURYAN_NEXRAD,627391660,Verilog,MAURYAN_NEXRAD,514,0,2023-05-06 14:29:47+00:00,[],None
632,https://github.com/foxxy777/mycdc.git,2023-04-13 05:31:27+00:00,some commonly used verilog cdc structure,0,foxxy777/mycdc,627261449,Verilog,mycdc,2768,0,2023-04-13 05:31:37+00:00,[],None
633,https://github.com/OzanAkgon/TrafikIsikSinyalizasyon.git,2023-04-14 12:28:41+00:00,,0,OzanAkgon/TrafikIsikSinyalizasyon,627890000,Verilog,TrafikIsikSinyalizasyon,3,0,2023-04-14 12:29:10+00:00,[],None
634,https://github.com/Erfan-nia/rply_project_TempSense.git,2023-04-29 15:18:12+00:00,,0,Erfan-nia/rply_project_TempSense,634265303,Verilog,rply_project_TempSense,192,0,2023-05-02 09:40:20+00:00,[],None
635,https://github.com/guaguagua132/datenlord_interview.git,2023-04-27 12:19:19+00:00,,0,guaguagua132/datenlord_interview,633400774,Verilog,datenlord_interview,9272,0,2023-04-27 13:00:10+00:00,[],None
636,https://github.com/pibha/VotingSecureAES_SHA_Verilog.git,2023-04-27 18:30:27+00:00,,0,pibha/VotingSecureAES_SHA_Verilog,633545589,Verilog,VotingSecureAES_SHA_Verilog,2779,0,2023-04-27 18:33:43+00:00,[],None
637,https://github.com/mostafa0001-me/Piplined-RiscV-Processor.git,2023-04-27 18:00:24+00:00,,0,mostafa0001-me/Piplined-RiscV-Processor,633534900,Verilog,Piplined-RiscV-Processor,16666,0,2023-09-27 08:44:37+00:00,[],None
638,https://github.com/jkinyanjui/VLSIRippleCarryAdder.git,2023-04-27 10:56:32+00:00,,0,jkinyanjui/VLSIRippleCarryAdder,633369265,Verilog,VLSIRippleCarryAdder,3,0,2023-04-27 11:37:41+00:00,[],None
639,https://github.com/YI-CHENG-SHIH645/NYCU-AAML.git,2023-04-25 05:42:29+00:00,,0,YI-CHENG-SHIH645/NYCU-AAML,632292711,Verilog,NYCU-AAML,12,0,2023-04-25 05:51:43+00:00,[],None
640,https://github.com/mwolff79/jtcoresX.git,2023-04-25 10:17:49+00:00,,0,mwolff79/jtcoresX,632396163,Verilog,jtcoresX,203460,0,2023-05-02 22:46:44+00:00,[],https://api.github.com/licenses/gpl-3.0
641,https://github.com/WazaAbdulkadir/gupsiseAkademi.git,2023-04-20 18:43:26+00:00,,0,WazaAbdulkadir/gupsiseAkademi,630607335,Verilog,gupsiseAkademi,50,0,2023-04-20 18:52:13+00:00,[],None
642,https://github.com/WHUCSstetman/Computer-Organization-and-Design-experiments.git,2023-04-23 03:41:12+00:00,,0,WHUCSstetman/Computer-Organization-and-Design-experiments,631447573,Verilog,Computer-Organization-and-Design-experiments,73,0,2023-04-23 04:17:55+00:00,[],None
643,https://github.com/Brohan9126/Chip_Droid.git,2023-04-23 16:40:36+00:00,,0,Brohan9126/Chip_Droid,631636514,Verilog,Chip_Droid,41728,0,2023-04-23 17:29:55+00:00,[],https://api.github.com/licenses/apache-2.0
644,https://github.com/calint/znxcr.git,2023-04-23 09:53:08+00:00,experimental retro 16 bit cpu written in verilog xilinx vivado intended for fpga Cmod S7 from Digilent,0,calint/znxcr,631526958,Verilog,znxcr,5359,0,2023-05-07 22:49:19+00:00,"['16-bit', 'cpu', 'fpga', 'verilog', 'cmod-s7']",None
645,https://github.com/cjfman/Mandelbrot.git,2023-04-23 17:43:32+00:00,FPGA Mandelbrot Generator,0,cjfman/Mandelbrot,631653448,Verilog,Mandelbrot,31529,0,2023-04-23 17:51:29+00:00,[],None
646,https://github.com/RakshithaRShettigar/BCD-counter.git,2023-04-17 14:58:10+00:00,,1,RakshithaRShettigar/BCD-counter,629071017,Verilog,BCD-counter,10,0,2023-04-17 15:12:42+00:00,[],None
647,https://github.com/uslsteen/risc-v_cpu.git,2023-04-24 19:25:16+00:00,5-stage CPU RISC-V pipeline,0,uslsteen/risc-v_cpu,632132683,Verilog,risc-v_cpu,45,0,2023-04-25 11:57:02+00:00,[],https://api.github.com/licenses/mit
648,https://github.com/hacerakinci/Logic-Circuits-Laboratory.git,2023-04-24 12:03:19+00:00,,0,hacerakinci/Logic-Circuits-Laboratory,631950863,Verilog,Logic-Circuits-Laboratory,56,0,2023-04-24 12:34:46+00:00,[],None
649,https://github.com/PRAGATI-0102/SISO_Using_D-FF-Day-015-.git,2023-04-24 09:03:03+00:00,"A SISO register is a type of shift register that takes a single bit of input data and shifts it in serially, one bit at a time, while also shifting out the previously stored bits in a similar manner.",0,PRAGATI-0102/SISO_Using_D-FF-Day-015-,631882506,Verilog,SISO_Using_D-FF-Day-015-,127,0,2023-04-24 09:03:57+00:00,[],None
650,https://github.com/sumanthbs17/0000to9999_Counter.git,2023-04-25 10:03:12+00:00,,0,sumanthbs17/0000to9999_Counter,632390580,Verilog,0000to9999_Counter,3,0,2023-04-25 10:23:14+00:00,[],None
651,https://github.com/xjh2000/fpga-learn.git,2023-04-21 07:42:56+00:00,,0,xjh2000/fpga-learn,630807256,Verilog,fpga-learn,63400,0,2023-04-21 07:43:35+00:00,[],None
652,https://github.com/nickleeair/Haps_final_111501555.git,2023-04-20 02:25:26+00:00,,0,nickleeair/Haps_final_111501555,630261780,Verilog,Haps_final_111501555,1030,0,2023-04-20 02:38:44+00:00,[],None
653,https://github.com/Zilly-1213/UART_Design.git,2023-04-20 07:07:24+00:00,,0,Zilly-1213/UART_Design,630338628,Verilog,UART_Design,8,0,2023-04-20 07:08:03+00:00,[],None
654,https://github.com/tsl-robt/graph-calculator.git,2023-04-19 06:10:16+00:00,,0,tsl-robt/graph-calculator,629838332,Verilog,graph-calculator,869,0,2023-04-19 06:13:56+00:00,[],None
655,https://github.com/neha-sawant03/Traffic-Light-Controller-using-Verilog.git,2023-04-19 10:46:36+00:00,,0,neha-sawant03/Traffic-Light-Controller-using-Verilog,629943892,Verilog,Traffic-Light-Controller-using-Verilog,1659,0,2023-04-19 11:17:42+00:00,[],None
656,https://github.com/kwokkeith/50002-OthelloBeep.git,2023-04-14 15:36:13+00:00,"Contains a custom designed CPU (named ""NOT BETA CPU"") with its own instruction set assembled in lucid on an Alchitry FPGA and an assembly script to run a modified version of Othello/Reversi.",1,kwokkeith/50002-OthelloBeep,627965052,Verilog,50002-OthelloBeep,948,0,2023-04-14 15:39:08+00:00,[],https://api.github.com/licenses/mit
657,https://github.com/Benjamin-Teng/DFF.git,2023-04-21 16:07:50+00:00,,0,Benjamin-Teng/DFF,630983476,Verilog,DFF,2,0,2023-04-21 16:08:02+00:00,[],None
658,https://github.com/MooMooHorse/FPGA-Tank-World.git,2023-04-22 18:13:45+00:00,A game implemented on FPGA as ECE 385 Final Project,1,MooMooHorse/FPGA-Tank-World,631344100,Verilog,FPGA-Tank-World,317071,0,2023-04-29 03:50:34+00:00,[],None
659,https://github.com/gitzhangzhao/Embedded-EVR.git,2023-04-16 14:40:12+00:00,include firmware and EPICS App for Embedded EVR ,0,gitzhangzhao/Embedded-EVR,628626581,Verilog,Embedded-EVR,1857,0,2023-10-10 15:20:52+00:00,[],None
660,https://github.com/aylanckerem/Embedded_System.git,2023-04-16 14:47:42+00:00,,0,aylanckerem/Embedded_System,628628946,Verilog,Embedded_System,8,0,2023-04-16 14:48:00+00:00,[],None
661,https://github.com/Co1dmountain/Sdram_Controller.git,2023-04-17 12:29:02+00:00,Sdram Controller by Co1dMountain,0,Co1dmountain/Sdram_Controller,629003487,Verilog,Sdram_Controller,8884,0,2023-04-18 03:36:15+00:00,[],None
662,https://github.com/h20man13/ARM7TDMISEmulator.git,2023-04-18 16:54:53+00:00,The following project contains a Arm Pep9 like Emulator and a Gui to control it. It was developed as a Maven project with the Emulator Development Environment,0,h20man13/ARM7TDMISEmulator,629610192,Verilog,ARM7TDMISEmulator,28,0,2023-04-18 18:34:17+00:00,[],https://api.github.com/licenses/apache-2.0
663,https://github.com/PRAGATI-0102/D_Flip-Flop-day-009-.git,2023-04-18 16:49:32+00:00,A D Flip-Flop is a basic building block in digital circuit design that stores a single bit of data.,0,PRAGATI-0102/D_Flip-Flop-day-009-,629608005,Verilog,D_Flip-Flop-day-009-,79,0,2023-04-18 16:52:22+00:00,[],None
664,https://github.com/FDULsy/arm_ai.git,2023-04-18 10:17:54+00:00,,0,FDULsy/arm_ai,629441657,Verilog,arm_ai,2627,0,2023-07-03 12:20:35+00:00,[],None
665,https://github.com/Dimanteo/RISC-V_pipeline_model.git,2023-04-27 20:59:13+00:00,MIPT homework. RISC-V pipeline verilog model. Uses verilator for tracing purposes.,0,Dimanteo/RISC-V_pipeline_model,633589196,Verilog,RISC-V_pipeline_model,155,0,2023-05-12 02:56:13+00:00,[],None
666,https://github.com/Zamir-Khan/64-Bit_ALU_Processor.git,2023-04-26 14:04:54+00:00,A simple ALU processor that handles up-to 64-bit using Verilog simulation,0,Zamir-Khan/64-Bit_ALU_Processor,632973103,Verilog,64-Bit_ALU_Processor,87,0,2023-08-27 20:02:15+00:00,[],None
667,https://github.com/smischny/ws2812b_fpga_gowin.git,2023-04-28 11:29:24+00:00,FPGA experiement to drive WS2812b on the TangNano1K (GOWIN GW1NZ),0,smischny/ws2812b_fpga_gowin,633829797,Verilog,ws2812b_fpga_gowin,14951,0,2023-04-28 12:07:35+00:00,[],None
668,https://github.com/cornell-ece5745/example-gate-level-design.git,2023-04-28 04:09:49+00:00,,0,cornell-ece5745/example-gate-level-design,633689742,Verilog,example-gate-level-design,41,0,2023-04-28 04:32:53+00:00,[],None
669,https://github.com/srinivasbonthu551/RAM.git,2023-04-14 10:18:06+00:00,,0,srinivasbonthu551/RAM,627842985,Verilog,RAM,2,0,2023-04-14 10:21:02+00:00,[],None
670,https://github.com/PeterHung26/ASIC-Design-Laboratory.git,2023-04-29 14:01:34+00:00,Code in the lab of ECE 33700 of Purdue University,0,PeterHung26/ASIC-Design-Laboratory,634243132,Verilog,ASIC-Design-Laboratory,17029,0,2023-12-24 09:59:27+00:00,[],None
