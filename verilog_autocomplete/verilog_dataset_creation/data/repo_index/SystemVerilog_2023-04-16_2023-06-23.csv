,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/pulp-platform/FlooNoC.git,2023-06-19 14:09:30+00:00,"A Fast, Low-Overhead On-chip Network",10,pulp-platform/FlooNoC,655746307,SystemVerilog,FlooNoC,3137,67,2024-04-09 04:46:48+00:00,[],https://api.github.com/licenses/apache-2.0
1,https://github.com/agg23/fpga-gameandwatch.git,2023-05-06 22:56:06+00:00,Game and Watch for Analogue Pocket and MiSTer,2,agg23/fpga-gameandwatch,637230109,SystemVerilog,fpga-gameandwatch,100045,51,2024-02-25 14:17:28+00:00,[],https://api.github.com/licenses/mit
2,https://github.com/gnodipac886/ViT-FPGA-TPU.git,2023-06-08 18:08:25+00:00,FPGA based Vision Transformer accelerator (Harvard CS205),4,gnodipac886/ViT-FPGA-TPU,651198133,SystemVerilog,ViT-FPGA-TPU,9860,41,2024-04-11 05:17:37+00:00,[],None
3,https://github.com/yuri-panchul/basics-graphics-music.git,2023-06-11 03:40:15+00:00,FPGA exercise for beginners,47,yuri-panchul/basics-graphics-music,652088432,SystemVerilog,basics-graphics-music,27563,37,2024-04-07 01:18:26+00:00,[],
4,https://github.com/wdxm657/fpga_practice.git,2023-05-29 11:59:59+00:00,,6,wdxm657/fpga_practice,646814705,SystemVerilog,fpga_practice,17846,26,2024-04-02 18:28:00+00:00,[],None
5,https://github.com/accellera-official/uvm-core.git,2023-06-06 16:01:00+00:00,,6,accellera-official/uvm-core,650226393,SystemVerilog,uvm-core,1059,21,2024-04-13 10:26:46+00:00,[],https://api.github.com/licenses/apache-2.0
6,https://github.com/AsFigo/pyslint.git,2023-05-05 04:03:44+00:00,SystemVerilog Linter based on pyslang,21,AsFigo/pyslint,636531832,SystemVerilog,pyslint,232,16,2024-04-12 05:28:42+00:00,[],https://api.github.com/licenses/mit
7,https://github.com/skudlur/diablo.git,2023-05-03 16:01:40+00:00,diablo is an Out-Of-Order 64-bit RISC-V processor. ,3,skudlur/diablo,635863233,SystemVerilog,diablo,254,12,2024-02-10 18:58:26+00:00,[],https://api.github.com/licenses/mit
8,https://github.com/AsFigo/MathLib.git,2023-06-06 04:26:59+00:00,MathLib DAC 2023 version,5,AsFigo/MathLib,649981485,SystemVerilog,MathLib,1770,10,2023-11-26 05:18:28+00:00,[],None
9,https://github.com/OFS/ofs-agx7-pcie-attach.git,2023-04-17 18:31:06+00:00,,4,OFS/ofs-agx7-pcie-attach,629155420,SystemVerilog,ofs-agx7-pcie-attach,12932,9,2024-03-05 14:19:14+00:00,[],https://api.github.com/licenses/mit
10,https://github.com/vonbrank/HIT-CS32201-Assignments-Fall-2022.git,2023-05-09 04:27:47+00:00,哈工大《计算机组织与体系结构》实验 - 2022年秋 | HIT Computer Architecture Course Assignments - Fall 2022,0,vonbrank/HIT-CS32201-Assignments-Fall-2022,638095036,SystemVerilog,HIT-CS32201-Assignments-Fall-2022,63,7,2024-03-24 08:05:19+00:00,[],None
11,https://github.com/IskXCr/CS202-CS214-Computer-Organization-Project.git,2023-05-18 12:10:52+00:00,SUSTech CS202/CS214 Computer Organization Project. Streams Bad Apple.,0,IskXCr/CS202-CS214-Computer-Organization-Project,642367161,SystemVerilog,CS202-CS214-Computer-Organization-Project,16453,7,2024-03-29 06:32:51+00:00,"['bad-apple', 'mips', 'mips32', 'systemverilog', 'vga-driver', 'vga-text']",None
12,https://github.com/xiaochuang-lxc/AMBA-SVA.git,2023-05-03 01:53:30+00:00,"ARM AMBA 4 AXI4,AXI4-lite,AXI4-stream SVAs (BP063) MiscellaneousBP063",0,xiaochuang-lxc/AMBA-SVA,635575918,SystemVerilog,AMBA-SVA,637,6,2024-03-12 05:21:52+00:00,[],None
13,https://github.com/Sulekha231/100-days-of-rtl.git,2023-04-19 11:11:12+00:00,,0,Sulekha231/100-days-of-rtl,629952987,SystemVerilog,100-days-of-rtl,208,6,2023-11-25 06:40:45+00:00,[],None
14,https://github.com/ZiyangYE/Verilog_TCP.git,2023-06-22 02:26:20+00:00,Highly specialized TCP module. Simple and high-performance. No ARP support.,1,ZiyangYE/Verilog_TCP,656958418,SystemVerilog,Verilog_TCP,346,5,2024-03-08 01:21:50+00:00,[],https://api.github.com/licenses/apache-2.0
15,https://github.com/Shreesh-Kulkarni/RISC-V-Core.git,2023-05-02 10:09:21+00:00,A repository consisting of all the project files and codes for RISC-V Processor design using Transaction Level Verilog.,0,Shreesh-Kulkarni/RISC-V-Core,635259798,SystemVerilog,RISC-V-Core,121,5,2023-07-19 20:38:07+00:00,"['computer-architecture', 'risc-v', 'rv32i', 'tl-verilog']",None
16,https://github.com/snbk001/LIN-protocol.git,2023-05-18 05:09:19+00:00,"LIN (Local Interconnect Network) bus protocol, a serial communication protocol for automotive applications.",0,snbk001/LIN-protocol,642224721,SystemVerilog,LIN-protocol,12,5,2024-01-27 13:36:16+00:00,"['fpga', 'lin', 'local-interconnect-network', 'protocol', 'serial-communication', 'systemverilog', 'verilog', 'design', 'micro-architecture', 'bus', 'test-bench']",https://api.github.com/licenses/mit
17,https://github.com/cicero884/CRYSTALS.git,2023-04-18 05:08:17+00:00,Code about CRYSTALS-Dilithium/Kyber,0,cicero884/CRYSTALS,629327542,SystemVerilog,CRYSTALS,47178,4,2023-11-06 08:52:53+00:00,[],None
18,https://github.com/radiolok/distortionhdl.git,2023-06-21 17:24:29+00:00,,1,radiolok/distortionhdl,656808725,SystemVerilog,distortionhdl,1439,4,2023-11-27 22:01:56+00:00,[],https://api.github.com/licenses/mit
19,https://github.com/pulp-platform/obi.git,2023-04-24 17:09:17+00:00,,0,pulp-platform/obi,632081730,SystemVerilog,obi,82,4,2024-03-10 03:46:12+00:00,[],
20,https://github.com/UIUC-ChenLab/FSSD.git,2023-06-09 15:06:41+00:00,,0,UIUC-ChenLab/FSSD,651584069,SystemVerilog,FSSD,92,3,2024-03-11 03:01:39+00:00,[],https://api.github.com/licenses/apache-2.0
21,https://github.com/githubofaliyev/SNN-DSE.git,2023-05-31 23:04:24+00:00,Hardware and software implementation of Sparsely-active SNNs,2,githubofaliyev/SNN-DSE,647964217,SystemVerilog,SNN-DSE,11206,3,2024-04-06 12:50:05+00:00,[],None
22,https://github.com/agg23/sdram-controller.git,2023-05-11 18:08:36+00:00,A HDL SDRAM controller designed for retro hardware and FPGAs,3,agg23/sdram-controller,639563169,SystemVerilog,sdram-controller,63,3,2023-10-25 17:14:55+00:00,"['analogue-pocket', 'fpga', 'misterfpga', 'sdram', 'sdram-controller']",https://api.github.com/licenses/mit
23,https://github.com/Mihaelfug/apb.git,2023-06-02 19:25:32+00:00,,0,Mihaelfug/apb,648773765,SystemVerilog,apb,9,3,2023-10-05 05:29:43+00:00,[],
24,https://github.com/Sulekha231/3x1-mux.git,2023-04-18 12:53:54+00:00,,0,Sulekha231/3x1-mux,629503622,SystemVerilog,3x1-mux,0,3,2023-06-29 07:19:05+00:00,[],None
25,https://github.com/angry-goose-initiative/letc.git,2023-06-01 02:07:32+00:00,The Little Engine That Could (Run Linux) :),0,angry-goose-initiative/letc,648003945,SystemVerilog,letc,449,3,2024-02-06 23:56:21+00:00,[],https://api.github.com/licenses/mit
26,https://github.com/Ratwe/evm.git,2023-05-29 06:46:53+00:00,Архитектура ЭВМ - 4/5 семестр ИУ7 МГТУ,0,Ratwe/evm,646706607,SystemVerilog,evm,49371,3,2024-04-10 22:40:20+00:00,"['bmstu-iu7', 'bmstu']",None
27,https://github.com/va7deo/vimana.git,2023-05-21 00:39:08+00:00,Toaplan Vimana / Same! Same! Same! for MiSTer FPGA,1,va7deo/vimana,643375522,SystemVerilog,vimana,28101,3,2023-07-07 06:09:15+00:00,[],https://api.github.com/licenses/gpl-2.0
28,https://github.com/gravelcai/weiminghu-noc.git,2023-04-25 08:30:48+00:00,,0,gravelcai/weiminghu-noc,632354289,SystemVerilog,weiminghu-noc,3040,3,2023-07-26 14:03:20+00:00,[],https://api.github.com/licenses/unlicense
29,https://github.com/fpgadeveloper/camera-fmc-vitis-platforms.git,2023-06-02 10:45:10+00:00,Acceleration platforms for Opsero Camera FMCs,1,fpgadeveloper/camera-fmc-vitis-platforms,648596969,SystemVerilog,camera-fmc-vitis-platforms,1995,3,2024-02-21 16:58:30+00:00,[],https://api.github.com/licenses/mit
30,https://github.com/Powerhouse28/Project.git,2023-05-10 00:29:44+00:00,ENGR 850,1,Powerhouse28/Project,638714879,SystemVerilog,Project,610,3,2023-09-23 08:17:39+00:00,[],None
31,https://github.com/realtime-tracking/graphbuilding.git,2023-06-16 05:23:36+00:00,Online Graph Building on FPGAs for Machine Learning Trigger Applications in Particle Physics,0,realtime-tracking/graphbuilding,654424550,SystemVerilog,graphbuilding,2648,3,2023-08-25 15:51:32+00:00,[],https://api.github.com/licenses/gpl-3.0
32,https://github.com/ZiyangYE/verilog_UDP.git,2023-06-05 03:14:07+00:00,,1,ZiyangYE/verilog_UDP,649510252,SystemVerilog,verilog_UDP,23,3,2023-10-15 10:35:20+00:00,[],https://api.github.com/licenses/apache-2.0
33,https://github.com/bitglitcher/QuantiumV.git,2023-06-07 19:25:30+00:00,RISCV SoC Collab work.,1,bitglitcher/QuantiumV,650774086,SystemVerilog,QuantiumV,5003,3,2023-10-28 07:40:11+00:00,[],https://api.github.com/licenses/mit
34,https://github.com/BigPig-Bro/Anlogic.git,2023-05-27 17:14:20+00:00,【例程】国产安路 FPGA 开发板及其工程,0,BigPig-Bro/Anlogic,646221000,SystemVerilog,Anlogic,9612,3,2023-09-20 15:42:53+00:00,[],None
35,https://github.com/Ismail821/uvm_verification_ahb_apb_bridge.git,2023-05-14 11:21:46+00:00,UVM Verification enviroinment for AHB to APB bridge. Supports upto 8 APB slave Devices. ,1,Ismail821/uvm_verification_ahb_apb_bridge,640521044,SystemVerilog,uvm_verification_ahb_apb_bridge,18826,3,2024-03-12 13:15:37+00:00,[],None
36,https://github.com/OctCarp/SUSTech_CS202-Organization_2023s_Project-CPU.git,2023-05-12 11:43:10+00:00,"(Verilog+MIPS+FPGA MINISYS) (121/100): Single Cycle CPU: Our project of CS202 2023 Spring: Computer Organization, SUSTech. Taught by Prof. Jin ZHANG.",0,OctCarp/SUSTech_CS202-Organization_2023s_Project-CPU,639858881,SystemVerilog,SUSTech_CS202-Organization_2023s_Project-CPU,19588,3,2024-03-29 06:32:32+00:00,"['cs202', 'sustech-course-code', '2023spring', 'sustech']",https://api.github.com/licenses/mit
37,https://github.com/ukmssu/Study-of-various-multipliers-using-verilog.git,2023-06-03 11:42:44+00:00,"Understanding logic behind each one Multipliers: Array Multiplier, Booth Multiplier, Baugh-Wooley Multiplier and Wallace Multiplier. Implementing each one multiplier using verilog",0,ukmssu/Study-of-various-multipliers-using-verilog,648976575,SystemVerilog,Study-of-various-multipliers-using-verilog,4050,2,2024-04-07 15:32:26+00:00,[],None
38,https://github.com/ttdragon0722/verilog.git,2023-05-12 10:26:48+00:00,ㄏㄏ,0,ttdragon0722/verilog,639833105,SystemVerilog,verilog,15097,2,2023-06-10 15:01:45+00:00,[],None
39,https://github.com/andreondra/vesp-alpha.git,2023-04-19 12:00:54+00:00,RISC-V based student processor for embedded applications.,0,andreondra/vesp-alpha,629971836,SystemVerilog,vesp-alpha,810,2,2024-03-11 15:42:59+00:00,[],https://api.github.com/licenses/gpl-3.0
40,https://github.com/va7deo/rallybike.git,2023-05-11 04:54:59+00:00,Toaplan Rally Bike,1,va7deo/rallybike,639252370,SystemVerilog,rallybike,53490,2,2023-07-07 06:09:19+00:00,[],None
41,https://github.com/va7deo/demonswld.git,2023-05-09 22:31:28+00:00,Toaplan Demon's World,1,va7deo/demonswld,638690156,SystemVerilog,demonswld,56454,2,2023-07-07 06:09:12+00:00,[],https://api.github.com/licenses/gpl-2.0
42,https://github.com/jaeyoon0531/URP2023.git,2023-05-15 07:05:24+00:00,,1,jaeyoon0531/URP2023,640806558,SystemVerilog,URP2023,128,2,2023-06-03 05:32:42+00:00,[],None
43,https://github.com/tom-urkin/SDRAM-controller.git,2023-06-04 10:29:48+00:00,SDRAM controller implemented in SystemVerilog for ISSI IS42S16320f-7 IC,1,tom-urkin/SDRAM-controller,649269289,SystemVerilog,SDRAM-controller,7503,2,2023-10-22 15:50:52+00:00,[],None
44,https://github.com/ncsys-lab/analog-verification.git,2023-05-18 21:46:30+00:00,,0,ncsys-lab/analog-verification,642569031,SystemVerilog,analog-verification,4359,2,2023-07-01 21:37:57+00:00,[],None
45,https://github.com/Amirarsalan-sn/RISCV-multi-cycle-processor.git,2023-06-05 09:45:47+00:00,A multi-cycle processor designed according to the instruction set(assembly language) of RISC-V using the System Verilog HDL,0,Amirarsalan-sn/RISCV-multi-cycle-processor,649629768,SystemVerilog,RISCV-multi-cycle-processor,11369,2,2024-04-07 12:25:14+00:00,"['cpu', 'hardware', 'hdl', 'modelsim', 'multi-cycle-processor', 'quartus', 'risc', 'risc-v', 'system-verilog']",None
46,https://github.com/TheShortDuck/synchronous_NoC_systemverilog.git,2023-05-08 12:12:01+00:00,This repository is the collected source code for a Synchronous 2d mesh NoC with diagonal routing.,0,TheShortDuck/synchronous_NoC_systemverilog,637788755,SystemVerilog,synchronous_NoC_systemverilog,36,2,2023-10-10 02:57:24+00:00,[],None
47,https://github.com/frankxaio/Sophomore-Seminar-Verilog-Pratice.git,2023-04-19 13:59:57+00:00,"Practices, projects, and acquired knowledge from the seminar.",0,frankxaio/Sophomore-Seminar-Verilog-Pratice,630021922,SystemVerilog,Sophomore-Seminar-Verilog-Pratice,154176,2,2024-03-26 08:29:22+00:00,[],None
48,https://github.com/BigPig-Bro/Modelsim.git,2023-05-02 06:04:11+00:00,【例程】用于Modelsim的图像、信号仿真类工程，纯代码逻辑仿真，无DRAM等工程实用模型。 仅用于仿真贴图，不一定适用于实物,0,BigPig-Bro/Modelsim,635175519,SystemVerilog,Modelsim,1830,2,2023-06-13 14:19:06+00:00,[],None
49,https://github.com/evancheng02/cva6-renaming.git,2023-05-01 07:46:55+00:00,,3,evancheng02/cva6-renaming,634791870,SystemVerilog,cva6-renaming,17155,2,2023-05-01 21:36:09+00:00,[],
50,https://github.com/OmarBadr108/FIFO_testbench.git,2023-05-07 09:59:27+00:00,"black box verfication of a synchronus FIFO using dynamic verfication ( code coverage , function coverage and Assertions)",0,OmarBadr108/FIFO_testbench,637356205,SystemVerilog,FIFO_testbench,6,2,2023-09-25 18:34:55+00:00,[],None
51,https://github.com/Orderism/FIR_Bluetooth_ECE551.git,2023-05-14 23:19:50+00:00,"Synthesis & Post-synthesis is based on the SAED32_lib(cell libary). Include the connection part based on A2D, UART, SPI, and the filter weighted & control part. Connect your cell phone to radio with an FPGA board , you are the best DJ of tonight!!! Just try it!",1,Orderism/FIR_Bluetooth_ECE551,640695916,SystemVerilog,FIR_Bluetooth_ECE551,9807,2,2024-02-17 15:21:11+00:00,[],None
52,https://github.com/BMWTree/Virtualization.git,2023-04-17 11:05:17+00:00,,0,BMWTree/Virtualization,628970736,SystemVerilog,Virtualization,43096,2,2024-01-14 14:04:06+00:00,[],None
53,https://github.com/STARS-Design-Track-2023/synthestars.git,2023-06-20 12:17:28+00:00,Synthestars Team 13-Channel Synthesizer HDL Project,0,STARS-Design-Track-2023/synthestars,656181457,SystemVerilog,synthestars,122,2,2023-06-27 20:45:36+00:00,[],
54,https://github.com/STARS-Design-Track-2023/outel-8227.git,2023-06-20 13:52:29+00:00,,0,STARS-Design-Track-2023/outel-8227,656221976,SystemVerilog,outel-8227,1653,2,2023-06-30 21:36:22+00:00,[],
55,https://github.com/estufa-cin-ufpe/RISC-V-Pipeline.git,2023-06-15 16:28:43+00:00,32-bit 5-stage pipelined RISC-V processor in SystemVerilog,1,estufa-cin-ufpe/RISC-V-Pipeline,654219121,SystemVerilog,RISC-V-Pipeline,2752,2,2024-02-11 04:34:15+00:00,"['pipeline', 'processor', 'risc', 'risc-v', 'riscv', 'systemverilog']",https://api.github.com/licenses/mit
56,https://github.com/amsheth/2048_vivado.git,2023-05-13 00:02:27+00:00,This is a System Verilog implementation of 2048 in Vivado and Artx A7,0,amsheth/2048_vivado,640080596,SystemVerilog,2048_vivado,1039,2,2024-03-02 01:34:25+00:00,[],None
57,https://github.com/ika-musume/IKA32010.git,2023-06-02 15:53:59+00:00,A BSD-licensed Verilog core for TI's TMS32010 DSP,0,ika-musume/IKA32010,648708246,SystemVerilog,IKA32010,18,2,2024-01-20 15:39:21+00:00,[],https://api.github.com/licenses/bsd-2-clause
58,https://github.com/m9in1/alarm-with-sound.git,2023-06-09 23:09:17+00:00,,0,m9in1/alarm-with-sound,651723945,SystemVerilog,alarm-with-sound,4715,1,2023-06-14 21:08:37+00:00,[],None
59,https://github.com/sathviks/UVM_FUNDAMENTALS.git,2023-06-17 14:37:19+00:00,"UVM Fundamentals code challenge WELCOME TO MY 100 DAYS OF RTL  My Name is Sathvik S, I mostly use Xilinx ISE 14.7 Design Suite and sometimes Modelsim  and Eda playground software for the simulation of RTL Codes. And The Synthesis is performed by using Intel Quartus Prime Software.",0,sathviks/UVM_FUNDAMENTALS,654988604,SystemVerilog,UVM_FUNDAMENTALS,1306,1,2023-06-20 05:43:06+00:00,[],None
60,https://github.com/NikosLefakis/hy220-maze.git,2023-04-19 13:28:34+00:00,The game maze  Mario with systemverilog  in lesson HY220 in CSD-UoC.,0,NikosLefakis/hy220-maze,630008283,SystemVerilog,hy220-maze,21,1,2023-11-09 20:48:41+00:00,[],None
61,https://github.com/PRAGATI-0102/Gray-Converter-using-SV-Day-055-.git,2023-06-03 16:11:45+00:00,A Gray code is a binary numeral system in which adjacent values differ by only one bit. The converter takes an i-bit binary number as input and generates the corresponding i-bit Gray code.,0,PRAGATI-0102/Gray-Converter-using-SV-Day-055-,649052415,SystemVerilog,Gray-Converter-using-SV-Day-055-,86,1,2023-06-04 12:06:26+00:00,[],None
62,https://github.com/Ismail821/sv_verification_ahb_apb_bridge.git,2023-05-23 17:03:59+00:00,"Verification of AHB to APB Bridge, using System verilog",0,Ismail821/sv_verification_ahb_apb_bridge,644509911,SystemVerilog,sv_verification_ahb_apb_bridge,24,1,2023-05-23 17:32:33+00:00,[],None
63,https://github.com/ItisCaleb/Verilog-Homework.git,2023-04-27 08:49:42+00:00,digital design verilog homework,0,ItisCaleb/Verilog-Homework,633321850,SystemVerilog,Verilog-Homework,3603,1,2023-10-10 16:50:11+00:00,[],None
64,https://github.com/mukesh891/PCIE_SV.git,2023-06-21 15:23:49+00:00,Generating TLPs using PCIE protocol,0,mukesh891/PCIE_SV,656760515,SystemVerilog,PCIE_SV,12,1,2024-02-21 11:21:20+00:00,[],None
65,https://github.com/lizocf/ECE251.git,2023-04-25 15:24:21+00:00,,0,lizocf/ECE251,632522437,SystemVerilog,ECE251,205,1,2023-04-26 00:16:54+00:00,[],None
66,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-besties.git,2023-05-09 22:07:25+00:00,ece-251-spring-2023-final-project-besties created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-besties,638684570,SystemVerilog,ece-251-spring-2023-final-project-besties,122,1,2023-05-10 00:48:40+00:00,[],None
67,https://github.com/chesskiss/VLSI_AI_crypto_tools.git,2023-05-09 15:16:13+00:00,"AI on chip, to decode crypto.",0,chesskiss/VLSI_AI_crypto_tools,638542535,SystemVerilog,VLSI_AI_crypto_tools,56176,1,2024-01-09 15:41:17+00:00,[],
68,https://github.com/Nameer-Iqbal-Ansari/UVM-OOP_work.git,2023-04-16 18:51:24+00:00,This repositroy contains design and UVM based verification codes. All the projects related to harware designing and verification done by myself with the online freelance community and other then freelance community as well.,0,Nameer-Iqbal-Ansari/UVM-OOP_work,628700561,SystemVerilog,UVM-OOP_work,8,1,2023-06-03 09:10:44+00:00,[],None
69,https://github.com/denSmashh/Verilog.git,2023-06-01 13:35:22+00:00,,0,denSmashh/Verilog,648225354,SystemVerilog,Verilog,28,1,2023-11-13 13:23:04+00:00,[],None
70,https://github.com/angelus9/CORE_I_DG.git,2023-06-09 13:24:33+00:00,CORE I Latest Experimental Code,1,angelus9/CORE_I_DG,651543298,SystemVerilog,CORE_I_DG,24,1,2023-07-22 21:52:04+00:00,[],None
71,https://github.com/vyom-elan/System-Verilog.git,2023-06-11 09:12:20+00:00,SystemVerilog files,0,vyom-elan/System-Verilog,652156836,SystemVerilog,System-Verilog,62,1,2023-07-08 03:48:31+00:00,[],None
72,https://github.com/bbnoir/dcs.git,2023-06-08 09:11:24+00:00,,0,bbnoir/dcs,650998751,SystemVerilog,dcs,235466,1,2024-03-04 06:15:41+00:00,[],None
73,https://github.com/Sanket-Makkar/SystemVerilog.git,2023-05-22 16:04:42+00:00,This contains all ModelSim projects from my Digital Logic Design class.,0,Sanket-Makkar/SystemVerilog,644010045,SystemVerilog,SystemVerilog,19,1,2023-05-22 18:51:27+00:00,[],None
74,https://github.com/Ariel424/Communication-Protocol-Verification-of-UART.git,2023-06-02 05:45:38+00:00,"Verification of Universal Asynchronous Receiver Transmitter (URAT). The code contains the SPI structure itself, and Classe's for comprehensive testing: Transaction, Generator, Driver, Monitor, Scoreboard and also T…",0,Ariel424/Communication-Protocol-Verification-of-UART,648498838,SystemVerilog,Communication-Protocol-Verification-of-UART,36,1,2023-09-26 09:07:24+00:00,[],None
75,https://github.com/pulp-platform/irq_router.git,2023-05-02 14:02:05+00:00,,0,pulp-platform/irq_router,635350066,SystemVerilog,irq_router,13,1,2023-05-12 15:08:19+00:00,[],https://api.github.com/licenses/apache-2.0
76,https://github.com/JakeA42/mini-crypto-accelerator.git,2023-05-30 20:56:52+00:00,,0,JakeA42/mini-crypto-accelerator,647464422,SystemVerilog,mini-crypto-accelerator,33,1,2023-06-10 22:35:26+00:00,[],None
77,https://github.com/evgenysns/PMSM_frga.git,2023-06-15 10:10:29+00:00,simple pmsm controller,0,evgenysns/PMSM_frga,654065955,SystemVerilog,PMSM_frga,951,1,2023-11-16 06:16:18+00:00,[],None
78,https://github.com/RPTU-EIS/Security-Conscious-Hardware.git,2023-05-31 07:50:16+00:00,Collection of experiments on data-oblivious hardware designs that dynamically adjust their latency,0,RPTU-EIS/Security-Conscious-Hardware,647635630,SystemVerilog,Security-Conscious-Hardware,126,1,2024-01-30 10:41:38+00:00,[],None
79,https://github.com/dgarci23/snn_soc.git,2023-04-20 13:52:59+00:00,,0,dgarci23/snn_soc,630492426,SystemVerilog,snn_soc,165,1,2024-02-26 02:59:43+00:00,[],None
80,https://github.com/JohnBagshaw/UVM.git,2023-05-07 04:03:57+00:00,Design Verification Tasks,0,JohnBagshaw/UVM,637279895,SystemVerilog,UVM,12,1,2024-03-21 16:42:25+00:00,[],None
81,https://github.com/AndLiuTiw/ProjFin.git,2023-05-31 21:25:38+00:00,,0,AndLiuTiw/ProjFin,647941180,SystemVerilog,ProjFin,65,1,2023-11-12 05:44:16+00:00,[],None
82,https://github.com/IteratorandIterator/7-stage-sequential-four-issue-superscalar-MIPS-processor-design.git,2023-05-31 12:42:02+00:00,7-stage sequential four-issue superscalar MIPS processor design,0,IteratorandIterator/7-stage-sequential-four-issue-superscalar-MIPS-processor-design,647746811,SystemVerilog,7-stage-sequential-four-issue-superscalar-MIPS-processor-design,202,1,2023-06-17 14:10:08+00:00,[],https://api.github.com/licenses/mit
83,https://github.com/EmanFatima-ef/Computer-Architecture.git,2023-05-31 21:47:34+00:00,,0,EmanFatima-ef/Computer-Architecture,647946655,SystemVerilog,Computer-Architecture,33,1,2023-05-31 22:46:43+00:00,[],None
84,https://github.com/abdelazeem201/ovl.git,2023-05-11 17:43:00+00:00,Accellera Standard OVL V2,0,abdelazeem201/ovl,639554187,SystemVerilog,ovl,1404,1,2023-05-30 17:09:37+00:00,[],https://api.github.com/licenses/mit
85,https://github.com/look4raghav/SV.git,2023-06-11 07:10:50+00:00,System_Verilog,0,look4raghav/SV,652127472,SystemVerilog,SV,107,1,2023-06-18 18:44:26+00:00,[],https://api.github.com/licenses/mit
86,https://github.com/Ridwan-Hussain/Computer-Architecture.git,2023-04-30 20:55:21+00:00,Created a MIPs CPU in Verilog for ECE251.,0,Ridwan-Hussain/Computer-Architecture,634661445,SystemVerilog,Computer-Architecture,130,1,2023-12-31 15:51:51+00:00,[],None
87,https://github.com/Papayaved/cnc3_fpga.git,2023-05-10 07:50:58+00:00,Wire-cut CNC machine (EDM and stone). 10M16SCE144 FPGA project for Quartus,0,Papayaved/cnc3_fpga,638833172,SystemVerilog,cnc3_fpga,685,1,2023-12-19 20:24:37+00:00,"['fpga', 'systemverilog', 'verilog']",https://api.github.com/licenses/gpl-3.0
88,https://github.com/hiremathpriyag/DMA_reg_verifier.git,2023-04-20 10:52:10+00:00,,0,hiremathpriyag/DMA_reg_verifier,630422882,SystemVerilog,DMA_reg_verifier,9,1,2023-05-23 04:10:59+00:00,[],None
89,https://github.com/hylnpy2021/mcdf.git,2023-04-18 12:37:10+00:00,shiyan,0,hylnpy2021/mcdf,629496235,SystemVerilog,mcdf,34,1,2023-06-13 13:48:42+00:00,[],None
90,https://github.com/ziyueg3/ECE385-Final-Project-Pico-Park.git,2023-05-10 15:24:14+00:00,This is the final project of ECE385 courses. We use the FGPA board to make a game Pico Park.,0,ziyueg3/ECE385-Final-Project-Pico-Park,639017655,SystemVerilog,ECE385-Final-Project-Pico-Park,1496,1,2023-05-11 01:47:20+00:00,[],None
91,https://github.com/zhang-stephen/hdlbits-sv-solutions.git,2023-05-21 17:08:17+00:00,SystemVerilog Solutions to exercise from HDLBits,0,zhang-stephen/hdlbits-sv-solutions,643598345,SystemVerilog,hdlbits-sv-solutions,12,1,2023-05-30 03:27:13+00:00,"['hdl', 'systemverilog', 'fpga-programming', 'hdlbits', 'hdlbitssolution']",https://api.github.com/licenses/mit
92,https://github.com/veznitom/VTM.git,2023-05-29 13:11:32+00:00,Expansion and continuation of the bachelor thesis RISC-V Superscalar Processor. (https://gitlab.fit.cvut.cz/veznitom/bakalarsky-projekt),0,veznitom/VTM,646841621,SystemVerilog,VTM,2339,1,2023-10-02 14:19:32+00:00,[],https://api.github.com/licenses/mit
93,https://github.com/tommy73594/SNN.git,2023-06-17 05:18:18+00:00,Asynchronous Spiking Neural Network Accelerator. Project from EE552-Asynchronous VLSI Design. ,0,tommy73594/SNN,654839720,SystemVerilog,SNN,21,1,2024-02-26 02:52:59+00:00,[],None
94,https://github.com/sean-galloway/RTLDesignSherpa.git,2023-06-15 21:56:48+00:00,This site is hopefully a springboard for others to learn about coding in System Verilog and experimenting with FPGAs.,0,sean-galloway/RTLDesignSherpa,654322426,SystemVerilog,RTLDesignSherpa,26277,1,2024-01-12 06:29:46+00:00,"['rtl', 'system-verilog', 'uvm-verification']",https://api.github.com/licenses/bsd-3-clause
95,https://github.com/Nancy-Makar/SPI_Master_Driver.git,2023-05-02 20:30:56+00:00,SPI Master Driver - Mode 1 ,0,Nancy-Makar/SPI_Master_Driver,635497662,SystemVerilog,SPI_Master_Driver,19,1,2023-05-03 10:41:13+00:00,[],https://api.github.com/licenses/mit
96,https://github.com/nutc-csiejar/Logical-design-final.git,2023-06-11 02:30:27+00:00,數位邏輯期末考,0,nutc-csiejar/Logical-design-final,652076881,SystemVerilog,Logical-design-final,7,1,2023-06-15 07:46:23+00:00,[],None
97,https://github.com/tom-urkin/PRNG.git,2023-04-30 12:20:41+00:00,Cellular automaton based pseudo random number generator,0,tom-urkin/PRNG,634526272,SystemVerilog,PRNG,880,1,2023-05-01 06:15:33+00:00,[],None
98,https://github.com/jpenolio75/tron_on_vga.git,2023-05-10 00:06:57+00:00,An implementation of the popular Tron arcade game on the Altera DE2-115 board for UNLV CpE 302 Synthesis and Verification Using Programmable Devices final.,0,jpenolio75/tron_on_vga,638710061,SystemVerilog,tron_on_vga,19,1,2023-11-05 02:46:52+00:00,"['nintendo-entertainment-system', 'systemverilog', 'tron-game', 'vga', 'altera-quartus', 'de2-115']",https://api.github.com/licenses/mit
99,https://github.com/zhb9103/LightUart_MultiPort_Example.git,2023-05-01 04:21:48+00:00,Example for integrating LightUart_MultiPort,0,zhb9103/LightUart_MultiPort_Example,634744322,SystemVerilog,LightUart_MultiPort_Example,3932,1,2024-01-29 14:04:56+00:00,[],None
100,https://github.com/davidmallasen/F-HEEP.git,2023-04-21 07:54:13+00:00,System integrating fpu_ss into X-HEEP via the eXtension interface.,0,davidmallasen/F-HEEP,630811361,SystemVerilog,F-HEEP,19041,1,2023-04-26 09:38:08+00:00,[],
101,https://github.com/negative-seven/fpga_hdmi.git,2023-05-04 11:19:36+00:00,"HDMI output device written in SystemVerilog, to be run on a ZedBoard.",0,negative-seven/fpga_hdmi,636220410,SystemVerilog,fpga_hdmi,50801,1,2023-07-10 21:41:29+00:00,[],None
102,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-bawsss.git,2023-05-09 22:05:42+00:00,ece-251-spring-2023-final-project-bawsss created by GitHub Classroom,1,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-bawsss,638684127,SystemVerilog,ece-251-spring-2023-final-project-bawsss,669,1,2023-10-03 04:11:07+00:00,[],None
103,https://github.com/chetha123/coverage_systemverilog.git,2023-05-03 16:04:55+00:00,function covergae information/code,0,chetha123/coverage_systemverilog,635864424,SystemVerilog,coverage_systemverilog,5,1,2023-05-03 16:59:19+00:00,[],None
104,https://github.com/Jerry93-7/98154-tapeout.git,2023-05-03 17:41:57+00:00,"Chip Tapeout for 98154, Open-source FPGA and ASIC Chip Design",0,Jerry93-7/98154-tapeout,635900694,SystemVerilog,98154-tapeout,6004,1,2023-08-07 08:53:51+00:00,[],https://api.github.com/licenses/apache-2.0
105,https://github.com/UDogg/CMPEN270verilog.git,2023-04-17 16:12:46+00:00,,0,UDogg/CMPEN270verilog,629102493,SystemVerilog,CMPEN270verilog,4,1,2023-07-07 19:30:09+00:00,[],None
106,https://github.com/Spriteson/Correction-Decoder.git,2023-05-14 12:23:00+00:00,,0,Spriteson/Correction-Decoder,640535587,SystemVerilog,Correction-Decoder,114,1,2023-12-31 00:17:27+00:00,[],None
107,https://github.com/NYU-Processor-Design/PurdNyUart.git,2023-05-31 19:39:47+00:00,,0,NYU-Processor-Design/PurdNyUart,647909782,SystemVerilog,PurdNyUart,109,1,2024-03-08 07:34:20+00:00,[],https://api.github.com/licenses/cc0-1.0
108,https://github.com/Bardisk/coreals-rv32.git,2023-06-09 09:46:22+00:00,An RTL implementation of a 5-level pipeline riscv32 core.,0,Bardisk/coreals-rv32,651465725,SystemVerilog,coreals-rv32,15,1,2024-03-21 00:42:15+00:00,[],None
109,https://github.com/mrincognito01/Synchronous_FIFO.git,2023-04-22 05:29:20+00:00,,0,mrincognito01/Synchronous_FIFO,631155600,SystemVerilog,Synchronous_FIFO,1,1,2023-07-23 14:05:33+00:00,[],None
110,https://github.com/cepeters-ucsd/cse141L-project.git,2023-05-09 22:27:59+00:00,,0,cepeters-ucsd/cse141L-project,638689408,SystemVerilog,cse141L-project,78,1,2023-10-08 22:02:55+00:00,[],None
111,https://github.com/Nagarjun444/SRAM_UVM.git,2023-04-22 15:44:42+00:00,Sram design and verification using UVM,0,Nagarjun444/SRAM_UVM,631305067,SystemVerilog,SRAM_UVM,10,1,2023-07-06 13:24:08+00:00,[],None
112,https://github.com/gopalvamsi09/32_bit_adder_uvm_code.git,2023-05-19 08:34:24+00:00,,0,gopalvamsi09/32_bit_adder_uvm_code,642738625,SystemVerilog,32_bit_adder_uvm_code,84,1,2023-05-19 09:46:44+00:00,[],None
113,https://github.com/Akhil-Barad-04/100_design_modules.git,2023-05-03 06:35:40+00:00,,0,Akhil-Barad-04/100_design_modules,635646214,SystemVerilog,100_design_modules,635,1,2023-05-03 06:43:11+00:00,[],None
114,https://github.com/samirti/sv.git,2023-05-31 18:53:47+00:00,,0,samirti/sv,647894417,SystemVerilog,sv,9879,1,2023-06-01 07:35:12+00:00,[],None
115,https://github.com/MuhammadHuzaifa-stu/RISCV-Pipelined-CSR-s.git,2023-05-06 12:54:29+00:00,,0,MuhammadHuzaifa-stu/RISCV-Pipelined-CSR-s,637080467,SystemVerilog,RISCV-Pipelined-CSR-s,2470,1,2024-01-24 08:38:33+00:00,[],None
116,https://github.com/chetha123/APB_Protocol.git,2023-05-14 06:32:08+00:00,Design and UVM testbench code for APB Protocol,0,chetha123/APB_Protocol,640456163,SystemVerilog,APB_Protocol,7320,1,2023-05-23 16:25:25+00:00,[],None
117,https://github.com/mrincognito01/Asynchronous_FIFO.git,2023-04-17 09:27:46+00:00,,1,mrincognito01/Asynchronous_FIFO,628933590,SystemVerilog,Asynchronous_FIFO,7,1,2023-07-23 14:05:30+00:00,[],None
118,https://github.com/tom-urkin/VGA-SRAM.git,2023-05-18 08:02:40+00:00,Generation and visualization of cellular automaton based patterns stored on SRAM chip via VGA protocol in SystemVerilog,0,tom-urkin/VGA-SRAM,642278989,SystemVerilog,VGA-SRAM,32808,1,2023-05-19 10:24:47+00:00,[],None
119,https://github.com/LasithaJananjaya/EN2111-UART-Transceiver.git,2023-06-01 04:00:25+00:00,,0,LasithaJananjaya/EN2111-UART-Transceiver,648030869,SystemVerilog,EN2111-UART-Transceiver,6360,1,2023-08-22 08:42:38+00:00,[],None
120,https://github.com/CristianMascia/ibex-ri5cy-soc.git,2023-05-18 17:21:33+00:00,Simulation and Synthesis on FPGA of SoC with IBEX or CV32E40P,0,CristianMascia/ibex-ri5cy-soc,642488249,SystemVerilog,ibex-ri5cy-soc,4714,1,2023-08-26 04:42:32+00:00,[],None
121,https://github.com/jahidul10/32-bit-RISC-V-core-and-APB-design..git,2023-04-17 17:50:36+00:00,VLSI lab final project using Cadence.,0,jahidul10/32-bit-RISC-V-core-and-APB-design.,629140481,SystemVerilog,32-bit-RISC-V-core-and-APB-design.,3405,1,2023-09-21 03:20:36+00:00,[],None
122,https://github.com/ribrdb/fpgahawk.git,2023-04-18 04:37:43+00:00,,0,ribrdb/fpgahawk,629319537,SystemVerilog,fpgahawk,127,1,2023-04-21 20:55:09+00:00,[],https://api.github.com/licenses/mit
123,https://github.com/ivanMilin/UVM-for-ALU.git,2023-06-08 00:12:37+00:00,"Uvod u UVM verifikaciju, prepravljena hijerarhija i prekucani kodovi sa youtube snimka, osnovne akademske studije",0,ivanMilin/UVM-for-ALU,650847906,SystemVerilog,UVM-for-ALU,21,1,2024-02-04 03:18:13+00:00,"['uvm-verification', 'systemverilog']",None
124,https://github.com/SagarSorathiya2002/APB_UVM.git,2023-06-16 11:00:16+00:00,APB_VERIFICATION_UVM,0,SagarSorathiya2002/APB_UVM,654542482,SystemVerilog,APB_UVM,277,1,2024-02-19 02:42:03+00:00,[],None
125,https://github.com/alencar-felipe/mea-craft.git,2023-04-27 20:20:11+00:00,,0,alencar-felipe/mea-craft,633577649,SystemVerilog,mea-craft,1535,1,2023-06-12 21:36:02+00:00,[],None
126,https://github.com/OFS/ofs-f2000x-pl.git,2023-04-17 18:32:06+00:00,,0,OFS/ofs-f2000x-pl,629155755,SystemVerilog,ofs-f2000x-pl,4567,1,2023-08-11 09:10:13+00:00,[],https://api.github.com/licenses/mit
127,https://github.com/AzofeifaJ/Proyecto_3_Diseno_Logico.git,2023-05-18 05:43:55+00:00,Multiplicador secuencial,0,AzofeifaJ/Proyecto_3_Diseno_Logico,642233953,SystemVerilog,Proyecto_3_Diseno_Logico,210,1,2023-06-14 16:40:59+00:00,[],https://api.github.com/licenses/mit
128,https://github.com/weelieguo/computer-architecture-lab.git,2023-05-14 23:40:42+00:00,,0,weelieguo/computer-architecture-lab,640699782,SystemVerilog,computer-architecture-lab,6626,1,2023-09-06 23:45:55+00:00,[],
129,https://github.com/JasonBrave/MicroSoC.git,2023-04-24 00:29:19+00:00,RISC-V SoC,0,JasonBrave/MicroSoC,631741388,SystemVerilog,MicroSoC,38,1,2024-02-11 04:04:54+00:00,"['microcontroller', 'risc-v', 'riscv', 'soc', 'system-on-chip', 'systemverilog', 'uart', 'verilog']",None
130,https://github.com/DilipKrishnappa/APB.git,2023-05-12 09:04:24+00:00,,0,DilipKrishnappa/APB,639803259,SystemVerilog,APB,6250,1,2024-03-18 01:34:50+00:00,[],None
131,https://github.com/wmiskowicz/Saper_game.git,2023-06-20 12:34:29+00:00,Project of popular game Saper designed for FPGA Basys-3. AGH 2023.,0,wmiskowicz/Saper_game,656188399,SystemVerilog,Saper_game,6096,1,2024-03-22 21:43:12+00:00,[],None
132,https://github.com/srkhan01/picoMIPS.git,2023-04-23 10:48:05+00:00,A custom picoMIPS implementation for ELEC6234 Embedded Processors,0,srkhan01/picoMIPS,631539701,SystemVerilog,picoMIPS,893,1,2024-04-08 14:49:53+00:00,[],None
133,https://github.com/EhabMostafaa/ATM-System.git,2023-05-17 08:04:48+00:00,ATM System design and its UVM environment verification,0,EhabMostafaa/ATM-System,641810475,SystemVerilog,ATM-System,25,1,2023-05-24 03:35:28+00:00,[],None
134,https://github.com/sathviks/SytemVerilog.git,2023-05-27 14:46:31+00:00,"As a graduate in Electronics and Communication, I have experience in digital circuit design, Verilog, SystemVerilog, and simulation tools like QuestaSim and ModelSim. Passionate about innovation and committed to delivering high-quality results on time",0,sathviks/SytemVerilog,646180790,SystemVerilog,SytemVerilog,48,1,2023-06-08 17:04:22+00:00,[],None
135,https://github.com/AKhaled47/Dual_Port_Ram.git,2023-04-20 23:57:45+00:00,Ram with dual ports each with different clock rates,0,AKhaled47/Dual_Port_Ram,630690262,SystemVerilog,Dual_Port_Ram,2,1,2023-04-27 16:18:42+00:00,[],None
136,https://github.com/chetha123/AXI_Protocol.git,2023-05-14 06:33:15+00:00,Design and UVM testbench code for AXI Protocol,0,chetha123/AXI_Protocol,640456340,SystemVerilog,AXI_Protocol,11,1,2023-05-23 16:25:29+00:00,[],None
137,https://github.com/NickSica/ECEC575.git,2023-04-26 13:56:47+00:00,,0,NickSica/ECEC575,632969381,SystemVerilog,ECEC575,8149,1,2024-01-29 15:07:04+00:00,[],None
138,https://github.com/ismahc/Lab-digitales.git,2023-05-25 02:21:28+00:00,,0,ismahc/Lab-digitales,645137542,SystemVerilog,Lab-digitales,13,1,2024-04-11 23:26:25+00:00,[],None
139,https://github.com/JohnGierlach/Cache_Project.git,2023-04-24 07:41:21+00:00,,0,JohnGierlach/Cache_Project,631851628,SystemVerilog,Cache_Project,8563,1,2023-04-25 17:53:35+00:00,[],None
140,https://github.com/OmarBadr108/black_box_verfication.git,2023-05-07 11:01:47+00:00,a bank of 8 registers each one of them has a bug and i have to test it and know the bug in each register,0,OmarBadr108/black_box_verfication,637371229,SystemVerilog,black_box_verfication,1470,1,2023-08-23 20:18:43+00:00,[],None
141,https://github.com/FlorentFlament/atari-csync.git,2023-04-27 22:01:10+00:00,Generating a clean Atari ST RGB C-Sync signal ,0,FlorentFlament/atari-csync,633605141,SystemVerilog,atari-csync,97,1,2023-04-30 12:34:35+00:00,[],None
142,https://github.com/ChipDev/MorseVerilog.git,2023-06-09 09:01:48+00:00,,0,ChipDev/MorseVerilog,651448929,SystemVerilog,MorseVerilog,255,1,2023-06-11 05:52:51+00:00,[],None
143,https://github.com/R-Rjn/System_Verilog.git,2023-06-14 12:38:01+00:00,The way i am learning systemverilog.,0,R-Rjn/System_Verilog,653636996,SystemVerilog,System_Verilog,43,1,2023-08-03 11:52:29+00:00,[],https://api.github.com/licenses/mit
144,https://github.com/mukesh891/Ethernet_packet_gen.git,2023-06-01 10:23:14+00:00,"This repo is coded in UVM, with command line control to generate Ethernet packets",0,mukesh891/Ethernet_packet_gen,648153152,SystemVerilog,Ethernet_packet_gen,11049,1,2023-11-25 09:00:35+00:00,[],None
145,https://github.com/MuhammadHuzaifa-stu/RISCV-Pipelined-Architecture.git,2023-04-23 08:07:59+00:00,Implementing 3 stage pipelined architecture,0,MuhammadHuzaifa-stu/RISCV-Pipelined-Architecture,631501805,SystemVerilog,RISCV-Pipelined-Architecture,15,1,2023-05-06 12:53:25+00:00,[],None
146,https://github.com/kirollos9/fifo_verification.git,2023-05-09 14:14:11+00:00,this project to test  encrypted fifo with function coverage and assertions coverage ,0,kirollos9/fifo_verification,638514485,SystemVerilog,fifo_verification,1078,1,2023-12-17 12:06:04+00:00,[],None
147,https://github.com/IteratorandIterator/4.-4-way-set-associative-cache-with-tree-based-pseudo-LRU-design.git,2023-06-14 13:09:54+00:00,"此缓存总容量为32KB，Write Back, 替换策略为tree-based pseudo LRU，缓存内部两级流水。地址解码和选择将会被替换的缓存行由第一级流水线实现，访存操作在第二级流水线实现（多周期访存）。在FPGA上工作频率能接近170MHz。",0,IteratorandIterator/4.-4-way-set-associative-cache-with-tree-based-pseudo-LRU-design,653651044,SystemVerilog,4.-4-way-set-associative-cache-with-tree-based-pseudo-LRU-design,167,1,2023-06-19 10:05:34+00:00,[],https://api.github.com/licenses/mit
148,https://github.com/OMiD-Borzoei/RISC-V-MultiCycle.git,2023-06-06 12:49:02+00:00,Final Project of Computer Architecture using SystemVerilog,0,OMiD-Borzoei/RISC-V-MultiCycle,650147405,SystemVerilog,RISC-V-MultiCycle,4915,1,2023-06-06 12:57:20+00:00,[],None
149,https://github.com/Fahad-Habib/RISC-V-Pipelined-Processor-with-CSR.git,2023-05-04 17:19:37+00:00,3-stage RISC-V Pipelined Processor with interrupt CSR support,0,Fahad-Habib/RISC-V-Pipelined-Processor-with-CSR,636361714,SystemVerilog,RISC-V-Pipelined-Processor-with-CSR,9,1,2023-12-12 22:12:40+00:00,"['risc-v', 'risc-v-architecture', 'risc-v-assembly', 'digital-system-design', 'systemverilog']",None
150,https://github.com/alineebrit/LOAC.git,2023-04-29 20:47:20+00:00,Laboratório de Organização e Arquitetura de Computadores usando SystemVerilog ,0,alineebrit/LOAC,634350603,SystemVerilog,LOAC,378,1,2024-02-14 00:26:18+00:00,[],None
151,https://github.com/gokeshenzhen/SVA-Local-Variables-Practical-Examples.git,2023-05-07 13:58:54+00:00,,0,gokeshenzhen/SVA-Local-Variables-Practical-Examples,637419475,SystemVerilog,SVA-Local-Variables-Practical-Examples,3,0,2023-05-07 13:59:48+00:00,[],https://api.github.com/licenses/mit
152,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-verilogician.git,2023-05-09 22:21:39+00:00,ece-251-spring-2023-final-project-verilogician created by GitHub Classroom,1,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-verilogician,638687929,SystemVerilog,ece-251-spring-2023-final-project-verilogician,347,0,2023-05-09 22:21:47+00:00,[],https://api.github.com/licenses/mit
153,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-zanax.git,2023-05-09 22:16:38+00:00,ece-251-spring-2023-final-project-zanax created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-zanax,638686698,SystemVerilog,ece-251-spring-2023-final-project-zanax,4124,0,2023-05-09 22:16:44+00:00,[],https://api.github.com/licenses/mit
154,https://github.com/abby96/SV-project.git,2023-05-09 09:09:16+00:00,,0,abby96/SV-project,638188146,SystemVerilog,SV-project,6,0,2023-05-09 09:34:07+00:00,[],None
155,https://github.com/echow2001/ece385_finalproject.git,2023-05-04 22:58:18+00:00,final project for ece 385 at UIUC. using altera max10 fpga emulate parallel eeprom ,0,echow2001/ece385_finalproject,636464237,SystemVerilog,ece385_finalproject,6911,0,2023-05-05 15:28:01+00:00,[],None
156,https://github.com/abhismitta/sv_new.git,2023-05-09 10:02:51+00:00,,0,abhismitta/sv_new,638209156,SystemVerilog,sv_new,1,0,2023-05-09 10:10:44+00:00,[],None
157,https://github.com/adithyakashyap95/Comp_arch.git,2023-05-15 23:53:50+00:00,for compyter arch subject,0,adithyakashyap95/Comp_arch,641171827,SystemVerilog,Comp_arch,172,0,2023-05-26 22:40:35+00:00,[],None
158,https://github.com/efablessmarmik/chipignite_2304_cdac_riscv.git,2023-04-29 05:09:07+00:00,Make in India RISC-V Initiative,0,efablessmarmik/chipignite_2304_cdac_riscv,634115343,SystemVerilog,chipignite_2304_cdac_riscv,733848,0,2023-04-29 05:15:58+00:00,[],https://api.github.com/licenses/apache-2.0
159,https://github.com/RunpengJ/ucsd-cse140l-lab2.git,2023-04-29 18:39:00+00:00,,0,RunpengJ/ucsd-cse140l-lab2,634320697,SystemVerilog,ucsd-cse140l-lab2,924,0,2023-05-15 01:09:36+00:00,[],None
160,https://github.com/jyothiswaroopa03/lab7-project-repo.git,2023-05-01 01:11:20+00:00,,0,jyothiswaroopa03/lab7-project-repo,634707984,SystemVerilog,lab7-project-repo,3607,0,2023-05-01 01:22:07+00:00,[],None
161,https://github.com/karthik-0710/Verification-of-a-cominational-adder-using-UVM.git,2023-05-01 04:10:22+00:00,,1,karthik-0710/Verification-of-a-cominational-adder-using-UVM,634742029,SystemVerilog,Verification-of-a-cominational-adder-using-UVM,3,0,2023-05-01 04:12:22+00:00,[],None
162,https://github.com/bwilhelm0/18224-tapeout-template.git,2023-05-01 18:51:53+00:00,"Tapeout project, my Intel 8008-like chip. It supports the instruction set of the original 8008, and has the same accumulator architecture.",0,bwilhelm0/18224-tapeout-template,635006240,SystemVerilog,18224-tapeout-template,43661,0,2023-05-10 04:45:02+00:00,[],https://api.github.com/licenses/apache-2.0
163,https://github.com/Nrusinga/-Developed-verification-components-for-a-4-port-switch-design.git,2023-06-03 03:21:54+00:00,We will be developing verification components for 4-port switch design,0,Nrusinga/-Developed-verification-components-for-a-4-port-switch-design,648866200,SystemVerilog,-Developed-verification-components-for-a-4-port-switch-design,6,0,2023-06-03 03:55:44+00:00,[],None
164,https://github.com/Masooma82/Combinational_Circuit_Design_using_K-maps.git,2023-05-30 04:16:09+00:00,Lab4a: Create a module containing two 2-bits inputs a and b such that we observe the following output on the tri-color LED. Lab4b: build a circuit to display different characters (0 to F) on one of the eight seven-segment displays,0,Masooma82/Combinational_Circuit_Design_using_K-maps,647102239,SystemVerilog,Combinational_Circuit_Design_using_K-maps,617,0,2023-05-30 04:22:12+00:00,[],None
165,https://github.com/Sagarbc05/I2C_SV.git,2023-06-05 00:21:47+00:00,I2C protocol verifcation environment,0,Sagarbc05/I2C_SV,649475309,SystemVerilog,I2C_SV,7,0,2023-08-31 12:52:58+00:00,[],None
166,https://github.com/danielyu925/3_Way_Superscalar_Out_of_Order_Processor_in_R10K_Architecture.git,2023-06-10 01:14:15+00:00,,1,danielyu925/3_Way_Superscalar_Out_of_Order_Processor_in_R10K_Architecture,651744471,SystemVerilog,3_Way_Superscalar_Out_of_Order_Processor_in_R10K_Architecture,436,0,2023-07-05 03:35:35+00:00,[],None
167,https://github.com/SidK123/EigenBot-Artificial-Neuron.git,2023-05-30 17:23:43+00:00,,0,SidK123/EigenBot-Artificial-Neuron,647392824,SystemVerilog,EigenBot-Artificial-Neuron,18,0,2023-08-31 04:05:29+00:00,[],None
168,https://github.com/SiyamAcet/Register_File.git,2023-06-02 08:26:57+00:00,,0,SiyamAcet/Register_File,648550666,SystemVerilog,Register_File,546,0,2023-06-12 12:26:01+00:00,[],None
169,https://github.com/cjbarimbao/advanced-digital-design.git,2023-05-31 08:15:08+00:00,CoE 111 course,0,cjbarimbao/advanced-digital-design,647644750,SystemVerilog,advanced-digital-design,5,0,2023-05-31 08:16:26+00:00,[],None
170,https://github.com/srsapireddy/Systemverilog-Test-Bench-Environment-Half-Adder.git,2023-06-22 19:23:14+00:00,,0,srsapireddy/Systemverilog-Test-Bench-Environment-Half-Adder,657308195,SystemVerilog,Systemverilog-Test-Bench-Environment-Half-Adder,17,0,2023-10-20 07:19:23+00:00,[],None
171,https://github.com/mijanik/TaylorCos.git,2023-06-22 17:15:45+00:00,Approximation of Cosinus function with Taylor series in Verilog,0,mijanik/TaylorCos,657264373,SystemVerilog,TaylorCos,1195,0,2023-06-22 22:12:20+00:00,[],None
172,https://github.com/rkasal/systemVerilog.git,2023-06-19 13:31:38+00:00,basic application of sv,0,rkasal/systemVerilog,655729080,SystemVerilog,systemVerilog,0,0,2023-06-21 09:12:23+00:00,[],None
173,https://github.com/shinchankosen/lab_verilog.git,2023-06-18 00:20:29+00:00,,0,shinchankosen/lab_verilog,655118405,SystemVerilog,lab_verilog,170,0,2023-06-18 00:21:20+00:00,[],None
174,https://github.com/RaviduHM99/UVM-Switch.git,2023-06-21 09:00:50+00:00,,0,RaviduHM99/UVM-Switch,656596445,SystemVerilog,UVM-Switch,7479,0,2023-06-21 14:50:14+00:00,[],None
175,https://github.com/MoraOss/Tarea-5-Sistemas-Digitales.git,2023-06-19 03:13:26+00:00,,0,MoraOss/Tarea-5-Sistemas-Digitales,655501153,SystemVerilog,Tarea-5-Sistemas-Digitales,6,0,2023-06-19 03:16:58+00:00,[],None
176,https://github.com/Nathan33t/Final_Project.git,2023-04-26 22:01:08+00:00,,0,Nathan33t/Final_Project,633144880,SystemVerilog,Final_Project,5845,0,2023-05-05 19:58:30+00:00,[],None
177,https://github.com/Bouer/shifter_SystemVerilog.git,2023-04-28 14:54:54+00:00,,0,Bouer/shifter_SystemVerilog,633906726,SystemVerilog,shifter_SystemVerilog,8766,0,2023-04-28 17:34:16+00:00,[],https://api.github.com/licenses/gpl-3.0
178,https://github.com/efoerst/color_crasher.git,2023-04-29 01:23:41+00:00,Color Crasher - A game of wits and rainbows,0,efoerst/color_crasher,634075931,SystemVerilog,color_crasher,182,0,2023-06-12 20:24:11+00:00,[],None
179,https://github.com/pedrodeoliamarante/DE1-SoC-Celular-Automation.git,2023-05-22 23:51:19+00:00,,0,pedrodeoliamarante/DE1-SoC-Celular-Automation,644152781,SystemVerilog,DE1-SoC-Celular-Automation,286,0,2023-11-14 18:18:06+00:00,[],None
180,https://github.com/RohanKumar15/VLSI-Verse.git,2023-06-14 07:30:35+00:00,,0,RohanKumar15/VLSI-Verse,653505785,SystemVerilog,VLSI-Verse,38,0,2023-06-23 06:45:14+00:00,[],None
181,https://github.com/Mrinal99kumar/System_Verilog.git,2023-06-14 12:50:08+00:00,,0,Mrinal99kumar/System_Verilog,653642096,SystemVerilog,System_Verilog,13,0,2023-06-14 14:08:27+00:00,[],https://api.github.com/licenses/mit
182,https://github.com/ikbalarg/GTU_Digital_Logic_Design_LAB.git,2023-06-06 12:19:19+00:00,,0,ikbalarg/GTU_Digital_Logic_Design_LAB,650136384,SystemVerilog,GTU_Digital_Logic_Design_LAB,2385,0,2023-06-06 12:45:26+00:00,[],None
183,https://github.com/YuanziX/dld_lab_sem2.git,2023-05-07 10:46:48+00:00,Verilog code for assignments from my DLD lab,0,YuanziX/dld_lab_sem2,637367596,SystemVerilog,dld_lab_sem2,81,0,2023-05-07 10:59:34+00:00,[],None
184,https://github.com/mohamedelshafie/cocotb-projects.git,2023-05-21 18:01:10+00:00,,0,mohamedelshafie/cocotb-projects,643612482,SystemVerilog,cocotb-projects,38,0,2023-05-21 18:02:42+00:00,[],None
185,https://github.com/agh-riscv/mtm_ppcu_vlsi_riscv.git,2023-05-24 16:01:06+00:00,Project for PPCU_VLSI,0,agh-riscv/mtm_ppcu_vlsi_riscv,644960927,SystemVerilog,mtm_ppcu_vlsi_riscv,161,0,2023-05-24 16:06:14+00:00,[],None
186,https://github.com/d0p1er/safe.git,2023-05-20 00:39:12+00:00,,0,d0p1er/safe,643046867,SystemVerilog,safe,3,0,2023-05-20 00:53:27+00:00,[],None
187,https://github.com/Sequner/sTPU.git,2023-05-20 04:57:01+00:00,Simplified Google TPU RTL with systolic array and memory controller for convolution,0,Sequner/sTPU,643094982,SystemVerilog,sTPU,8,0,2023-05-20 04:58:39+00:00,[],None
188,https://github.com/DilipKrishnappa/multiplier.git,2023-05-18 04:41:01+00:00,verification of 4-bit multiplier,0,DilipKrishnappa/multiplier,642217696,SystemVerilog,multiplier,5997,0,2023-05-18 07:29:10+00:00,[],None
189,https://github.com/mohamd-khaled/mips.git,2023-05-24 21:02:44+00:00,,0,mohamd-khaled/mips,645064331,SystemVerilog,mips,4,0,2023-05-24 21:03:18+00:00,[],None
190,https://github.com/Cra2yPierr0t/KotoamatsuV.git,2023-05-25 03:40:15+00:00,⛩,0,Cra2yPierr0t/KotoamatsuV,645156624,SystemVerilog,KotoamatsuV,26,0,2023-05-25 03:41:49+00:00,[],None
191,https://github.com/Nutmeg43/10-Instruction-Processor.git,2023-05-25 01:28:56+00:00,"A simple 10 instruction processor in Verilog RTL, with UVM testbench",0,Nutmeg43/10-Instruction-Processor,645124431,SystemVerilog,10-Instruction-Processor,21,0,2023-05-30 04:23:24+00:00,[],https://api.github.com/licenses/mit
192,https://github.com/KalineMzs/factorial-functional-verif.git,2023-05-25 00:41:17+00:00,Repository for developing a verification environment according to the UVM methodology to verify a block that performs the factorial operation,0,KalineMzs/factorial-functional-verif,645113693,SystemVerilog,factorial-functional-verif,293,0,2023-07-08 20:13:13+00:00,[],None
193,https://github.com/ArgyroP/FCFI-landing-pad.git,2023-06-12 16:30:53+00:00,,0,ArgyroP/FCFI-landing-pad,652712838,SystemVerilog,FCFI-landing-pad,370,0,2023-12-06 17:19:07+00:00,[],None
194,https://github.com/gvillanovanm/svlog-aes.git,2023-05-26 01:18:44+00:00,,0,gvillanovanm/svlog-aes,645579190,SystemVerilog,svlog-aes,2634,0,2023-05-26 01:31:24+00:00,[],None
195,https://github.com/rr1verif/100days_of_verif.git,2023-04-20 08:34:32+00:00,This repo will have verification setup for various rtl codes.,0,rr1verif/100days_of_verif,630370464,SystemVerilog,100days_of_verif,91,0,2023-08-04 08:15:27+00:00,[],None
196,https://github.com/shengjie-chen/MeshSim.git,2023-04-28 01:53:41+00:00,,0,shengjie-chen/MeshSim,633656354,SystemVerilog,MeshSim,1849,0,2024-04-03 02:29:35+00:00,[],None
197,https://github.com/nekrasov-d/tremolo-fpga.git,2023-06-18 08:28:34+00:00,,0,nekrasov-d/tremolo-fpga,655213628,SystemVerilog,tremolo-fpga,61,0,2023-07-02 14:34:50+00:00,[],https://api.github.com/licenses/mit
198,https://github.com/Ariel424/SystemVerilog---Verification-of-D-FF.git,2023-05-21 12:38:42+00:00,,0,Ariel424/SystemVerilog---Verification-of-D-FF,643521649,SystemVerilog,SystemVerilog---Verification-of-D-FF,10,0,2024-04-12 04:44:56+00:00,[],None
199,https://github.com/Zclaussen/SystemVerilog_Timing_Optimization.git,2023-04-19 17:03:07+00:00,Reconfigurable Computing 2 lab 4,1,Zclaussen/SystemVerilog_Timing_Optimization,630099347,SystemVerilog,SystemVerilog_Timing_Optimization,5,0,2023-04-19 17:06:58+00:00,[],None
200,https://github.com/AKouyoumjian/RISC-V-Processor.git,2023-04-19 14:02:42+00:00,"Files from a project making a functioning processor in SystemVerilog and Assembly. Programed full adder, ALU, data memory, and logic functions. Synthesized and simulated results using Xilinx Vivado mixed language simulator.",0,AKouyoumjian/RISC-V-Processor,630023228,SystemVerilog,RISC-V-Processor,5,0,2023-04-19 14:04:03+00:00,[],None
201,https://github.com/nguyen-noah-uet/HeThongVxlProjs.git,2023-04-16 10:23:58+00:00,,0,nguyen-noah-uet/HeThongVxlProjs,628557075,SystemVerilog,HeThongVxlProjs,8,0,2023-04-16 10:39:14+00:00,[],None
202,https://github.com/Ephtiny/Digital-Circuit.git,2023-04-18 09:38:50+00:00,数字电路的学习笔记,1,Ephtiny/Digital-Circuit,629426192,SystemVerilog,Digital-Circuit,39045,0,2023-07-21 10:22:18+00:00,[],None
203,https://github.com/yavuzselimilik/Simple_8-Bit_ProcessorDesign.git,2023-04-23 12:30:15+00:00,,0,yavuzselimilik/Simple_8-Bit_ProcessorDesign,631564618,SystemVerilog,Simple_8-Bit_ProcessorDesign,1398,0,2023-04-23 14:15:45+00:00,[],None
204,https://github.com/WeiXXXXVVVV/35.git,2023-06-08 09:08:41+00:00,3d,0,WeiXXXXVVVV/35,650997763,SystemVerilog,35,73,0,2023-06-08 09:10:50+00:00,[],None
205,https://github.com/LeloJNM/PomodoroSV.git,2023-06-07 01:10:13+00:00,,0,LeloJNM/PomodoroSV,650388847,SystemVerilog,PomodoroSV,4,0,2023-06-07 01:11:30+00:00,[],None
206,https://github.com/grampol/riscv_processor_sim.git,2023-05-14 20:43:04+00:00,,0,grampol/riscv_processor_sim,640667124,SystemVerilog,riscv_processor_sim,199,0,2023-05-15 05:51:27+00:00,[],None
207,https://github.com/Powerhouse28/Project_3.0.git,2023-05-16 23:52:54+00:00,,0,Powerhouse28/Project_3.0,641673667,SystemVerilog,Project_3.0,413,0,2023-05-16 23:59:07+00:00,[],None
208,https://github.com/vishweswar/ADC.git,2023-05-10 19:06:07+00:00,,0,vishweswar/ADC,639102212,SystemVerilog,ADC,7845,0,2023-07-24 01:29:52+00:00,[],None
209,https://github.com/KashyapKurella3000/FIR_EE287.git,2023-05-08 22:15:21+00:00,,0,KashyapKurella3000/FIR_EE287,638007355,SystemVerilog,FIR_EE287,1074,0,2023-05-08 22:20:36+00:00,[],None
210,https://github.com/florentin05/CVA6.git,2023-06-02 11:48:55+00:00,This is a fork from OpenHWGroup CVA6 repo with support for Xilinx KCU116 board,0,florentin05/CVA6,648617772,SystemVerilog,CVA6,36004,0,2023-07-08 13:07:59+00:00,[],
211,https://github.com/apkrier/CPEFinal.git,2023-06-05 22:55:21+00:00,,0,apkrier/CPEFinal,649908335,SystemVerilog,CPEFinal,127,0,2023-06-05 22:59:42+00:00,[],None
212,https://github.com/DineshVenkatG/Packed-SIMD-Extension-for-DL-Float-and-B-Float-Datatypes.git,2023-06-06 05:56:42+00:00,,0,DineshVenkatG/Packed-SIMD-Extension-for-DL-Float-and-B-Float-Datatypes,650002774,SystemVerilog,Packed-SIMD-Extension-for-DL-Float-and-B-Float-Datatypes,131,0,2023-06-06 06:01:07+00:00,[],None
213,https://github.com/retar-kamuy/apb.git,2023-06-04 12:09:40+00:00,,0,retar-kamuy/apb,649294655,SystemVerilog,apb,97,0,2023-06-04 13:30:44+00:00,[],None
214,https://github.com/2023-Spring-ECE4278/project2.git,2023-05-21 08:03:12+00:00,,0,2023-Spring-ECE4278/project2,643454921,SystemVerilog,project2,11,0,2023-05-21 08:04:33+00:00,[],None
215,https://github.com/Liuzihan1226/axi_lzh_re.git,2023-05-30 03:35:05+00:00,,0,Liuzihan1226/axi_lzh_re,647092357,SystemVerilog,axi_lzh_re,266,0,2023-05-31 06:06:40+00:00,[],None
216,https://github.com/AlPrime2k1/SystemVerilog.git,2023-05-22 19:34:50+00:00,This repository consists of the files that i developed while learning SystemVerilog,0,AlPrime2k1/SystemVerilog,644086168,SystemVerilog,SystemVerilog,407,0,2023-05-23 18:32:35+00:00,[],None
217,https://github.com/Riyazudd8n/practice.git,2023-05-17 07:29:22+00:00,,0,Riyazudd8n/practice,641797201,SystemVerilog,practice,5,0,2023-06-08 11:05:12+00:00,[],None
218,https://github.com/PrachiGoutam/100days-of-RTL.git,2023-05-05 17:53:57+00:00,RTL Code with Basic to Advance,0,PrachiGoutam/100days-of-RTL,636813668,SystemVerilog,100days-of-RTL,23,0,2023-05-09 16:13:56+00:00,[],None
219,https://github.com/MrDoomsday/Multiplexer-Avalon-ST.git,2023-05-05 14:22:33+00:00,Multiplexer for two streams Avalon-ST,1,MrDoomsday/Multiplexer-Avalon-ST,636736991,SystemVerilog,Multiplexer-Avalon-ST,31,0,2023-05-06 14:08:04+00:00,[],https://api.github.com/licenses/gpl-3.0
220,https://github.com/alinparcalab/priority_picker.git,2023-05-02 10:10:03+00:00,,0,alinparcalab/priority_picker,635260061,SystemVerilog,priority_picker,1,0,2023-05-02 10:20:10+00:00,[],None
221,https://github.com/Carlos12001/game2048.git,2023-05-01 15:50:00+00:00,This is a SystemVerilog implementation of the game 2048.,0,Carlos12001/game2048,634941950,SystemVerilog,game2048,2499,0,2023-05-16 05:33:37+00:00,[],None
222,https://github.com/abhisheknair1729/direct-mapped-cache.git,2023-05-02 03:52:26+00:00,,0,abhisheknair1729/direct-mapped-cache,635140857,SystemVerilog,direct-mapped-cache,12,0,2023-05-02 03:53:15+00:00,[],None
223,https://github.com/arjundineshk/Dual-Issue-Cell-SPU-pipelined-multimedia-processor.git,2023-04-29 18:52:13+00:00,SystemVerilog implementation of IBM Sony Cell SPU multimedia processor that was used in PlayStation 3.,1,arjundineshk/Dual-Issue-Cell-SPU-pipelined-multimedia-processor,634323863,,Dual-Issue-Cell-SPU-pipelined-multimedia-processor,121,0,2023-04-29 18:52:13+00:00,[],None
224,https://github.com/DeepSweeter/Implementation-of-AM2940.git,2023-04-16 17:52:20+00:00,,0,DeepSweeter/Implementation-of-AM2940,628684166,SystemVerilog,Implementation-of-AM2940,11,0,2023-07-01 05:33:29+00:00,[],None
225,https://github.com/faizan8349/100-days-RTL.git,2023-04-23 19:38:18+00:00,,0,faizan8349/100-days-RTL,631683759,SystemVerilog,100-days-RTL,90,0,2023-04-29 10:04:51+00:00,[],None
226,https://github.com/LispEngineer/fpga-spi-peripherals.git,2023-05-08 00:31:11+00:00,FPGA SystemVerilog SPI implementation with controllers for several common or interesting peripherals,0,LispEngineer/fpga-spi-peripherals,637573837,SystemVerilog,fpga-spi-peripherals,23229,0,2023-05-08 00:31:46+00:00,[],
227,https://github.com/NicholasArner/senior_project.git,2023-06-17 05:50:12+00:00,HDL source files for the FPGA image processing project,0,NicholasArner/senior_project,654846700,SystemVerilog,senior_project,26,0,2023-06-17 05:54:14+00:00,[],None
228,https://github.com/TomKessous/Error-Correction-Encoder-Decoder.git,2023-06-17 13:28:45+00:00,,0,TomKessous/Error-Correction-Encoder-Decoder,654966766,SystemVerilog,Error-Correction-Encoder-Decoder,27202,0,2023-06-17 13:30:52+00:00,[],None
229,https://github.com/dsandall/RiscVOtter-i2c.git,2023-06-23 00:10:28+00:00,,0,dsandall/RiscVOtter-i2c,657381527,SystemVerilog,RiscVOtter-i2c,264,0,2023-06-23 06:47:22+00:00,[],None
230,https://github.com/balaji-vbr/AHB-Lite-Protocol-Verification.git,2023-06-19 02:50:17+00:00,,0,balaji-vbr/AHB-Lite-Protocol-Verification,655494758,SystemVerilog,AHB-Lite-Protocol-Verification,366,0,2023-06-19 02:51:17+00:00,[],None
231,https://github.com/jaycordaro/half-band-filter.git,2023-06-19 02:17:50+00:00,"An implementation of an FIR half-band filter, from MATLAB floating point to SystemVerilog fixed point",0,jaycordaro/half-band-filter,655486232,SystemVerilog,half-band-filter,664,0,2023-06-27 17:33:40+00:00,"['dsp', 'filter', 'fir', 'systemverilog-hdl']",https://api.github.com/licenses/bsd-2-clause
232,https://github.com/mvgprasanth/VLSI-design.git,2023-06-22 21:04:21+00:00,,0,mvgprasanth/VLSI-design,657338315,SystemVerilog,VLSI-design,77,0,2024-02-05 00:58:55+00:00,[],None
233,https://github.com/FHDO-ICLAB/TMRG_Config_Generator.git,2023-04-25 08:14:01+00:00,,0,FHDO-ICLAB/TMRG_Config_Generator,632347792,SystemVerilog,TMRG_Config_Generator,2205,0,2024-02-20 23:01:19+00:00,[],None
234,https://github.com/supleed2/cordic.git,2023-05-28 15:01:35+00:00,SystemVerilog CORDIC block that converts from an input phase (sawtooth wave) to a sine wave,0,supleed2/cordic,646487800,SystemVerilog,cordic,14,0,2024-01-19 04:43:27+00:00,"['cordic', 'module', 'sine-wave', 'systemverilog', 'waveform-generator']",https://api.github.com/licenses/apache-2.0
235,https://github.com/Vitya198/dds_wg.git,2023-05-14 19:34:28+00:00,,0,Vitya198/dds_wg,640651679,SystemVerilog,dds_wg,2486,0,2023-05-31 10:57:31+00:00,[],None
236,https://github.com/Jimmy-Chu-127/FPGA-SHA-256-Bitcoin-Hashing-Algorithm.git,2023-05-28 01:50:08+00:00,,0,Jimmy-Chu-127/FPGA-SHA-256-Bitcoin-Hashing-Algorithm,646316287,SystemVerilog,FPGA-SHA-256-Bitcoin-Hashing-Algorithm,3563,0,2024-04-06 18:55:11+00:00,[],None
237,https://github.com/ZhengYuhe/NonVonNeumann-4bit-Processor.git,2023-04-28 00:55:01+00:00,A 4-bit processor that uses an array of processing elements to execute program,0,ZhengYuhe/NonVonNeumann-4bit-Processor,633642818,SystemVerilog,NonVonNeumann-4bit-Processor,630,0,2023-04-28 02:47:13+00:00,[],None
238,https://github.com/birdybro/chatGPT4_sv.git,2023-04-28 19:40:11+00:00,"some goofy ai built systemverilog modules, none of these probably work properly, just for fun",0,birdybro/chatGPT4_sv,634004649,SystemVerilog,chatGPT4_sv,9,0,2023-05-01 16:30:06+00:00,[],https://api.github.com/licenses/mit
239,https://github.com/bushbecky/verilog2vhdl.git,2023-05-08 20:03:04+00:00,,0,bushbecky/verilog2vhdl,637971542,SystemVerilog,verilog2vhdl,17296,0,2023-05-08 20:04:47+00:00,[],https://api.github.com/licenses/mit
240,https://github.com/SummerDay231/TinyTPU.git,2023-05-08 14:12:56+00:00,,0,SummerDay231/TinyTPU,637838346,SystemVerilog,TinyTPU,6,0,2023-05-08 14:13:57+00:00,[],None
241,https://github.com/abdelrahman99999/Mult_Mode_Counter.git,2023-05-09 15:36:55+00:00,Assignment for Digital System Verification Cource ,0,abdelrahman99999/Mult_Mode_Counter,638551813,SystemVerilog,Mult_Mode_Counter,2,0,2023-05-09 15:37:35+00:00,[],None
242,https://github.com/shubhamsavita98/DV_HW7.git,2023-05-08 07:51:20+00:00,,0,shubhamsavita98/DV_HW7,637689241,SystemVerilog,DV_HW7,2,0,2023-07-13 21:52:02+00:00,[],None
243,https://github.com/SriVemulapalli22/Temp.git,2023-04-30 21:41:45+00:00,,0,SriVemulapalli22/Temp,634670957,SystemVerilog,Temp,33,0,2023-04-30 21:45:19+00:00,[],https://api.github.com/licenses/apache-2.0
244,https://github.com/karthik-0710/Verification-of-a-multiplier-using-UVM.git,2023-05-01 04:15:36+00:00,,0,karthik-0710/Verification-of-a-multiplier-using-UVM,634743049,SystemVerilog,Verification-of-a-multiplier-using-UVM,3,0,2023-05-01 04:16:01+00:00,[],None
245,https://github.com/CakemasterFTW/18224-ttt-tapeout.git,2023-05-01 22:13:36+00:00,,0,CakemasterFTW/18224-ttt-tapeout,635063718,SystemVerilog,18224-ttt-tapeout,36,0,2023-05-02 20:59:21+00:00,[],https://api.github.com/licenses/apache-2.0
246,https://github.com/Fahad-Habib/RISC-V-Single-Cycle-Processor.git,2023-04-20 17:58:27+00:00,Single Cycle Processor written in SystemVerilog for executing machine code of RISC-V ISA,0,Fahad-Habib/RISC-V-Single-Cycle-Processor,630591572,SystemVerilog,RISC-V-Single-Cycle-Processor,7,0,2023-10-13 13:53:44+00:00,"['digital-system-design', 'risc-v', 'single-cycle-processor', 'systemverilog', 'verilog', 'risc-v-architecture']",None
247,https://github.com/BROsandr/vga.git,2023-05-10 13:37:29+00:00,,1,BROsandr/vga,638969773,SystemVerilog,vga,152,0,2023-05-24 13:57:51+00:00,[],None
248,https://github.com/CreeKee/RISCV_Starfish.git,2023-05-17 00:13:26+00:00,,0,CreeKee/RISCV_Starfish,641678202,SystemVerilog,RISCV_Starfish,20,0,2023-05-17 00:14:02+00:00,[],None
249,https://github.com/sid-anand98/Verification-of-AMBA---APB-in-UVM.git,2023-06-15 13:07:13+00:00,,0,sid-anand98/Verification-of-AMBA---APB-in-UVM,654134368,SystemVerilog,Verification-of-AMBA---APB-in-UVM,24,0,2023-06-18 11:32:54+00:00,[],None
250,https://github.com/Rohithgarde/factorial_function_SV.git,2023-06-15 05:14:24+00:00,,0,Rohithgarde/factorial_function_SV,653954170,SystemVerilog,factorial_function_SV,2,0,2023-06-15 05:15:54+00:00,[],None
251,https://github.com/haydenbeames/FastMultiplication.git,2023-06-14 16:30:58+00:00,Fast Multiplication algorithm in SystemVerilog by using 4 to 2 compressors,1,haydenbeames/FastMultiplication,653743801,SystemVerilog,FastMultiplication,2522,0,2023-06-16 00:53:28+00:00,[],None
252,https://github.com/cyprienh/H2BP.git,2023-06-11 14:37:56+00:00,A custom architecture for a custom processor.,0,cyprienh/H2BP,652242152,SystemVerilog,H2BP,60,0,2023-06-11 14:38:22+00:00,[],None
253,https://github.com/gjtromp/blink_hps.git,2023-06-12 04:50:35+00:00,,0,gjtromp/blink_hps,652440383,SystemVerilog,blink_hps,0,0,2023-06-12 05:01:23+00:00,[],None
254,https://github.com/beneldokow/VGA-Road-Fighter-Project.git,2023-06-13 14:43:50+00:00,,0,beneldokow/VGA-Road-Fighter-Project,653177190,SystemVerilog,VGA-Road-Fighter-Project,2331,0,2023-06-13 14:52:44+00:00,[],None
255,https://github.com/GlennVodra/OOP-System-Verilog.git,2023-06-15 18:30:34+00:00,Some simple examples of Object-Oriented Programming (OOP) concepts in System Verilog,0,GlennVodra/OOP-System-Verilog,654263325,SystemVerilog,OOP-System-Verilog,8,0,2023-06-15 18:31:17+00:00,[],None
256,https://github.com/GeekyDev2002DG/RAM_and_ROM_using_verilog.git,2023-06-19 19:04:07+00:00,"Here we create Single port RAM, dual port RAM, and ROM using Verilog",0,GeekyDev2002DG/RAM_and_ROM_using_verilog,655861969,SystemVerilog,RAM_and_ROM_using_verilog,9,0,2023-06-20 07:03:51+00:00,[],https://api.github.com/licenses/mit
257,https://github.com/HBX-hbx/A-simple-CPU.git,2023-06-18 13:50:39+00:00,Projects for Principles of Computer Composition. ,0,HBX-hbx/A-simple-CPU,655301759,SystemVerilog,A-simple-CPU,450,0,2023-06-18 13:54:13+00:00,[],None
258,https://github.com/MrDarkhawk/System-Verilog-Full-Adder.git,2023-06-21 05:53:05+00:00,,0,MrDarkhawk/System-Verilog-Full-Adder,656522154,SystemVerilog,System-Verilog-Full-Adder,2,0,2023-06-21 06:00:02+00:00,[],None
259,https://github.com/YKengo1224/tremor_extraction_system_interface.git,2023-06-07 06:56:18+00:00,,0,YKengo1224/tremor_extraction_system_interface,650481160,SystemVerilog,tremor_extraction_system_interface,94,0,2023-06-08 05:59:58+00:00,[],None
260,https://github.com/sharathk227/Router-1X3.git,2023-06-05 18:17:45+00:00,RTL desgin and verification of  Router having 1 source and 3 destination ,0,sharathk227/Router-1X3,649827901,SystemVerilog,Router-1X3,122,0,2023-06-06 12:25:31+00:00,[],None
261,https://github.com/GiantDwarfRen/CSE140_lab5.git,2023-06-05 20:50:46+00:00,,0,GiantDwarfRen/CSE140_lab5,649877478,SystemVerilog,CSE140_lab5,10,0,2023-06-05 20:52:55+00:00,[],None
262,https://github.com/monty6400/NumEx1.git,2023-05-23 07:54:48+00:00,BA FOREVER!,0,monty6400/NumEx1,644286170,SystemVerilog,NumEx1,5563,0,2023-05-28 17:44:49+00:00,[],None
263,https://github.com/Jaco-bB-rown/Final-Project-ECE-111.git,2023-05-31 02:09:27+00:00,Bitcoin Miner,0,Jaco-bB-rown/Final-Project-ECE-111,647538481,SystemVerilog,Final-Project-ECE-111,4595,0,2023-05-31 02:13:38+00:00,[],None
264,https://github.com/cheepakeepa/ECE_111_Bitcoin_Miner.git,2023-05-31 02:08:27+00:00,,0,cheepakeepa/ECE_111_Bitcoin_Miner,647538173,SystemVerilog,ECE_111_Bitcoin_Miner,71588,0,2023-05-31 02:10:10+00:00,[],None
265,https://github.com/STARS-Design-Track-2023/Teenage-Mixing-Ninja-Turtles.git,2023-06-20 01:34:59+00:00,Final Design Synth,1,STARS-Design-Track-2023/Teenage-Mixing-Ninja-Turtles,655958440,SystemVerilog,Teenage-Mixing-Ninja-Turtles,3014,0,2023-06-22 20:26:13+00:00,[],
266,https://github.com/Fazail333/Dsd-lab-.git,2023-05-30 05:08:56+00:00,,0,Fazail333/Dsd-lab-,647115138,SystemVerilog,Dsd-lab-,3,0,2023-05-30 05:19:57+00:00,[],None
267,https://github.com/MoonLoone/alu_verilog.git,2023-05-29 12:45:06+00:00,,0,MoonLoone/alu_verilog,646831191,SystemVerilog,alu_verilog,7819,0,2023-05-29 14:37:28+00:00,[],None
268,https://github.com/CLA10LAW10/SSD_Keypad_FPGA.git,2023-05-11 16:35:59+00:00,,0,CLA10LAW10/SSD_Keypad_FPGA,639529826,SystemVerilog,SSD_Keypad_FPGA,21,0,2023-05-11 16:36:41+00:00,[],None
269,https://github.com/geoneill12/CPE521_Branch_Predictor.git,2023-05-25 05:56:20+00:00,,0,geoneill12/CPE521_Branch_Predictor,645191495,SystemVerilog,CPE521_Branch_Predictor,31,0,2023-06-01 19:47:22+00:00,[],None
270,https://github.com/lenguyen8888/verilog_examples.git,2023-05-27 01:56:31+00:00,,0,lenguyen8888/verilog_examples,646005655,SystemVerilog,verilog_examples,37,0,2023-05-27 01:57:37+00:00,[],None
271,https://github.com/AlphaLyrae0/UVM_RAL_DPI_C_Example.git,2023-05-28 03:55:46+00:00,,0,AlphaLyrae0/UVM_RAL_DPI_C_Example,646335434,SystemVerilog,UVM_RAL_DPI_C_Example,39,0,2023-06-07 15:05:35+00:00,[],None
272,https://github.com/troykerim/ECE-524-Lab-4-Intro-to-VGA-PMOD.git,2023-05-28 22:18:10+00:00,,0,troykerim/ECE-524-Lab-4-Intro-to-VGA-PMOD,646595862,SystemVerilog,ECE-524-Lab-4-Intro-to-VGA-PMOD,5949,0,2023-06-02 23:18:26+00:00,[],None
273,https://github.com/PRAGATI-0102/Half-Adder-using-SV-Day-050-.git,2023-05-29 17:23:34+00:00,"The Half Adder is a combinational logic circuit that performs the binary addition of two 1-bit binary digits (a_i, b_i). The sum of this additon is output to the sum_o signal and the carry is output on the cout_o signal.",0,PRAGATI-0102/Half-Adder-using-SV-Day-050-,646936132,SystemVerilog,Half-Adder-using-SV-Day-050-,53,0,2023-05-29 17:24:30+00:00,[],None
274,https://github.com/philiprbrenan/zero.git,2023-05-08 01:19:48+00:00,Compile and execute the B-Tree algorithm using the Zero assembler programming language.,1,philiprbrenan/zero,637583348,SystemVerilog,zero,7214,0,2023-11-18 03:11:28+00:00,[],None
275,https://github.com/csnewman/juna.git,2023-06-11 13:32:44+00:00,Toy processor in SystemVerilog,0,csnewman/juna,652222287,SystemVerilog,juna,58,0,2023-06-11 13:44:50+00:00,[],https://api.github.com/licenses/mit
276,https://github.com/testguruai/riscv-cva6.git,2023-05-20 08:51:57+00:00,,0,testguruai/riscv-cva6,643149663,SystemVerilog,riscv-cva6,327,0,2023-05-20 09:17:01+00:00,[],None
277,https://github.com/dewostator/verilog_clock.git,2023-06-16 14:14:09+00:00,,0,dewostator/verilog_clock,654613832,SystemVerilog,verilog_clock,2,0,2023-12-30 21:16:58+00:00,[],None
278,https://github.com/cleverever/nand_cpu.git,2023-06-20 15:02:16+00:00,,0,cleverever/nand_cpu,656252825,SystemVerilog,nand_cpu,547,0,2023-06-24 08:32:21+00:00,[],None
279,https://github.com/bittervivek/UVM.git,2023-04-21 09:06:34+00:00,Here I am going to write simplified code for UVM,0,bittervivek/UVM,630837241,SystemVerilog,UVM,19,0,2023-04-21 09:08:05+00:00,[],None
280,https://github.com/sumiravishan/RGB-to-Grayscale-conversion-Methods.git,2023-04-16 05:53:17+00:00,Conver colour image to gray scale image,0,sumiravishan/RGB-to-Grayscale-conversion-Methods,628496414,SystemVerilog,RGB-to-Grayscale-conversion-Methods,77,0,2023-05-25 02:57:12+00:00,[],https://api.github.com/licenses/gpl-3.0
281,https://github.com/tommy73594/MCDF_Verification.git,2023-06-17 05:45:26+00:00,MCDF verification with UVM,0,tommy73594/MCDF_Verification,654845621,SystemVerilog,MCDF_Verification,43,0,2023-06-17 05:47:31+00:00,[],None
282,https://github.com/princemahi2001/system-verilog.git,2023-06-20 04:00:03+00:00,,0,princemahi2001/system-verilog,655996382,SystemVerilog,system-verilog,115,0,2023-08-09 10:23:39+00:00,[],None
283,https://github.com/rbride/SystemVerilog_Practice_Problems.git,2023-06-19 00:51:33+00:00,,0,rbride/SystemVerilog_Practice_Problems,655465630,SystemVerilog,SystemVerilog_Practice_Problems,412,0,2023-08-05 16:51:23+00:00,[],None
284,https://github.com/Temix707/ROI.git,2023-06-21 08:51:03+00:00,Project to work,0,Temix707/ROI,656592074,SystemVerilog,ROI,33465,0,2023-07-15 12:01:26+00:00,[],None
285,https://github.com/ArmanGhafarnia/RISC-V-multi-cycle-processor.git,2023-06-13 07:55:14+00:00,Multi cycle processor using Systemverilog,0,ArmanGhafarnia/RISC-V-multi-cycle-processor,652995292,SystemVerilog,RISC-V-multi-cycle-processor,1141,0,2023-06-13 07:56:13+00:00,[],None
286,https://github.com/pp-cyril/Verification-of-AXI-Memory.git,2023-06-13 10:20:57+00:00,AMBA AXI Bus Protocol Verification,0,pp-cyril/Verification-of-AXI-Memory,653056604,SystemVerilog,Verification-of-AXI-Memory,10,0,2023-06-13 10:21:41+00:00,[],None
287,https://github.com/Bhoomi-sravanthi/D15_UP-DOWN-COUNTER.git,2023-05-13 11:05:03+00:00,,0,Bhoomi-sravanthi/D15_UP-DOWN-COUNTER,640214814,SystemVerilog,D15_UP-DOWN-COUNTER,2,0,2023-05-13 11:05:59+00:00,[],None
288,https://github.com/hyungmin2/FlexKA.git,2023-05-10 07:29:38+00:00,,0,hyungmin2/FlexKA,638825601,SystemVerilog,FlexKA,20,0,2023-05-10 07:47:57+00:00,[],None
289,https://github.com/qyley/limber-generic.git,2023-05-10 08:46:21+00:00,,0,qyley/limber-generic,638854144,SystemVerilog,limber-generic,171,0,2023-05-10 08:46:50+00:00,[],https://api.github.com/licenses/apache-2.0
290,https://github.com/AliMaher15/tinyalu.git,2023-05-17 12:22:13+00:00,functional verification with UVM for the tinyalu example in uvmprimer,0,AliMaher15/tinyalu,641909567,SystemVerilog,tinyalu,2229,0,2023-05-17 12:24:56+00:00,[],None
291,https://github.com/stefana17/AM2940.git,2023-05-14 13:25:50+00:00,,0,stefana17/AM2940,640552028,SystemVerilog,AM2940,679,0,2023-05-14 13:31:28+00:00,[],None
292,https://github.com/flaviens/cva6_yosys_issue.git,2023-05-20 17:48:45+00:00,A repository to reproduce the Yosys issue with CVA6,0,flaviens/cva6_yosys_issue,643294245,SystemVerilog,cva6_yosys_issue,469,0,2023-05-20 17:52:52+00:00,[],None
293,https://github.com/Asrithamanju12/SV_Project_Spring_2023.git,2023-06-09 00:00:41+00:00,,0,Asrithamanju12/SV_Project_Spring_2023,651293802,,SV_Project_Spring_2023,29,0,2023-06-09 00:00:41+00:00,[],None
294,https://github.com/anmandaisuki/HDL_Source_Storage.git,2023-06-15 11:12:00+00:00,Storage for HDL sources,0,anmandaisuki/HDL_Source_Storage,654088785,SystemVerilog,HDL_Source_Storage,101,0,2023-11-07 04:33:33+00:00,[],None
295,https://github.com/Vassardog77/SHA256_optimizations.git,2023-05-04 00:02:42+00:00,,0,Vassardog77/SHA256_optimizations,636009518,SystemVerilog,SHA256_optimizations,2355,0,2023-05-04 00:27:23+00:00,[],None
296,https://github.com/lelewel4/Fibonacci-search-algorithm.git,2023-05-07 11:34:08+00:00,Fibonacci search technique - Gornisiewicz - Kapala,0,lelewel4/Fibonacci-search-algorithm,637379428,SystemVerilog,Fibonacci-search-algorithm,591,0,2023-10-08 17:22:27+00:00,[],None
297,https://github.com/sxwkl2/friendly-enigma.git,2023-04-28 08:51:33+00:00,,0,sxwkl2/friendly-enigma,633776208,SystemVerilog,friendly-enigma,327,0,2023-04-28 08:57:46+00:00,[],None
298,https://github.com/karthik-0710/Design-and-verification-of-D-Flip-Flop-using-UVM.git,2023-05-01 04:08:51+00:00,Design and verification of a D Flip Flop using UVM. UVM verification testbench for the  D-Flip flop has 3 seq item's a) for random d and rst values b)for random d values with rst disabled c) rst enabled and driving random d values,0,karthik-0710/Design-and-verification-of-D-Flip-Flop-using-UVM,634741725,SystemVerilog,Design-and-verification-of-D-Flip-Flop-using-UVM,6,0,2023-05-01 04:09:37+00:00,[],None
299,https://github.com/2011eric/DCLAB-Final.git,2023-04-28 15:39:13+00:00,2023NTUEE-DCLAB Final Project,1,2011eric/DCLAB-Final,633924030,SystemVerilog,DCLAB-Final,1835,0,2023-06-13 03:14:35+00:00,[],
300,https://github.com/thinhngo11/hdlGPT.git,2023-05-03 02:45:05+00:00,,0,thinhngo11/hdlGPT,635588370,SystemVerilog,hdlGPT,285,0,2023-05-04 02:55:54+00:00,[],None
301,https://github.com/sarakane6090/lpddr2_nios.git,2023-05-09 13:12:51+00:00,,0,sarakane6090/lpddr2_nios,638485490,SystemVerilog,lpddr2_nios,13,0,2023-05-09 13:16:33+00:00,[],None
302,https://github.com/Bhoomi-sravanthi/D02_Full-Subtractor.git,2023-05-08 05:41:43+00:00,,0,Bhoomi-sravanthi/D02_Full-Subtractor,637645833,SystemVerilog,D02_Full-Subtractor,2,0,2023-08-30 17:28:36+00:00,[],None
303,https://github.com/ZVasilii/VerilogRISCV_Pipeline.git,2023-05-12 03:26:24+00:00,TBD,0,ZVasilii/VerilogRISCV_Pipeline,639703818,SystemVerilog,VerilogRISCV_Pipeline,133,0,2023-08-15 21:25:26+00:00,[],https://api.github.com/licenses/mit
304,https://github.com/juanprrr/jpena_cornputer_architecture_1_2023.git,2023-05-17 06:35:12+00:00,,0,juanprrr/jpena_cornputer_architecture_1_2023,641776934,SystemVerilog,jpena_cornputer_architecture_1_2023,202,0,2023-05-17 06:41:17+00:00,[],None
305,https://github.com/cjstange/perceptron_tiny_tapeout.git,2023-04-30 03:15:24+00:00,,0,cjstange/perceptron_tiny_tapeout,634413768,SystemVerilog,perceptron_tiny_tapeout,1118,0,2023-04-30 03:35:23+00:00,[],https://api.github.com/licenses/apache-2.0
306,https://github.com/njayawar/ModifiedTetrisV2.git,2023-04-27 22:28:36+00:00,,0,njayawar/ModifiedTetrisV2,633611549,SystemVerilog,ModifiedTetrisV2,1899,0,2023-05-05 16:12:41+00:00,[],https://api.github.com/licenses/apache-2.0
307,https://github.com/robmarano/cpu_hdl_catalog.git,2023-04-25 03:52:24+00:00,Catalog of Verilog Components to Design and Simulate a MIPS-based RISC Computer,0,robmarano/cpu_hdl_catalog,632264294,SystemVerilog,cpu_hdl_catalog,36,0,2023-05-03 01:01:55+00:00,[],None
308,https://github.com/TeoThatsMe/2940.git,2023-04-25 11:12:44+00:00,,0,TeoThatsMe/2940,632416398,SystemVerilog,2940,8,0,2023-04-25 11:13:43+00:00,[],None
309,https://github.com/Totoro742/jos_project.git,2023-04-28 07:47:11+00:00,,0,Totoro742/jos_project,633753092,SystemVerilog,jos_project,1057,0,2023-07-12 17:02:55+00:00,[],None
310,https://github.com/mukesh891/google_riscv_dv.git,2023-04-28 07:04:51+00:00,,1,mukesh891/google_riscv_dv,633738137,SystemVerilog,google_riscv_dv,0,0,2023-04-28 07:05:48+00:00,[],None
311,https://github.com/0TulipRose0/ADC.git,2023-05-02 14:30:12+00:00,Analog to Digital Converter ,0,0TulipRose0/ADC,635362332,SystemVerilog,ADC,446,0,2023-05-02 15:20:20+00:00,[],None
312,https://github.com/STARS-Design-Track-2023/silly-synthesizer.git,2023-06-21 13:06:41+00:00,Purdue STARS Design 2023 Silly Synthesizer Project,0,STARS-Design-Track-2023/silly-synthesizer,656699919,SystemVerilog,silly-synthesizer,87,0,2023-06-28 13:34:50+00:00,[],
313,https://github.com/6Kotnk/async_main.git,2023-05-04 09:26:09+00:00,Asynchrous circuit source files,0,6Kotnk/async_main,636176005,SystemVerilog,async_main,81,0,2023-06-23 14:17:27+00:00,[],None
314,https://github.com/GProCPU/Lexington.git,2023-05-17 06:56:23+00:00,The GPro 1 (Lexington) is the first generation of RISC-V processors designed by Gerber Prototyping,2,GProCPU/Lexington,641784635,SystemVerilog,Lexington,1183,0,2023-10-06 05:17:29+00:00,[],https://api.github.com/licenses/gpl-3.0
315,https://github.com/nikhilj6644/MAC_8x8.git,2023-04-17 23:14:00+00:00,,0,nikhilj6644/MAC_8x8,629239120,SystemVerilog,MAC_8x8,4685,0,2023-04-18 02:00:28+00:00,[],https://api.github.com/licenses/apache-2.0
316,https://github.com/xiaotianbc/dht11_verilog.git,2023-04-18 15:48:05+00:00,a simple dht11_verilog module,0,xiaotianbc/dht11_verilog,629583111,SystemVerilog,dht11_verilog,72,0,2023-04-18 15:54:51+00:00,[],None
317,https://github.com/pabmars2/riscV_pipelined.git,2023-04-19 16:33:13+00:00,,1,pabmars2/riscV_pipelined,630087361,SystemVerilog,riscV_pipelined,8733,0,2023-04-19 16:41:58+00:00,[],None
318,https://github.com/akiki19950827/gen_hdl_top.git,2023-04-21 08:52:38+00:00,,0,akiki19950827/gen_hdl_top,630832178,SystemVerilog,gen_hdl_top,285,0,2023-04-21 09:07:49+00:00,[],None
319,https://github.com/bushbecky/Kotsu2Risc.git,2023-05-08 21:00:32+00:00,,0,bushbecky/Kotsu2Risc,637988404,SystemVerilog,Kotsu2Risc,6,0,2023-05-08 21:00:46+00:00,[],None
320,https://github.com/tamirsh123/BSc_EE.git,2023-05-13 16:40:33+00:00,Here are my Projects and Academic files related to my BSc in EE,0,tamirsh123/BSc_EE,640305384,SystemVerilog,BSc_EE,16329,0,2023-08-10 13:51:56+00:00,[],None
321,https://github.com/gajendra17/prep_.git,2023-05-09 08:03:58+00:00,,0,gajendra17/prep_,638162386,SystemVerilog,prep_,12,0,2023-05-09 09:21:20+00:00,[],None
322,https://github.com/ayanjdeka/SLC-3.2.git,2023-05-18 07:43:10+00:00,Designed a microprocessor using SystemVerilog,0,ayanjdeka/SLC-3.2,642272550,SystemVerilog,SLC-3.2,7701,0,2023-05-18 07:44:55+00:00,[],None
323,https://github.com/AydoganArslantash/fbu-riscv.git,2023-05-24 10:04:57+00:00,This is for Computer Architecture Project,0,AydoganArslantash/fbu-riscv,644813807,SystemVerilog,fbu-riscv,1537,0,2023-05-24 10:07:19+00:00,[],None
324,https://github.com/motasem-rafati/sha256.git,2023-05-28 18:59:06+00:00,sha256 pipeline,0,motasem-rafati/sha256,646552443,SystemVerilog,sha256,625,0,2023-05-28 19:07:11+00:00,[],None
325,https://github.com/CLA10LAW10/FSM_Digital_Lock_FPGA.git,2023-05-11 16:37:36+00:00,,0,CLA10LAW10/FSM_Digital_Lock_FPGA,639530426,SystemVerilog,FSM_Digital_Lock_FPGA,10,0,2023-05-11 16:38:54+00:00,[],None
326,https://github.com/transistasis/nexys4ddr-mig-demo.git,2023-05-11 13:00:12+00:00,This design demonstrates how to interact directly with the on-board DDR2 memory of the Nexys 4 DDR board  from fabric by using the MIG IP,0,transistasis/nexys4ddr-mig-demo,639425771,SystemVerilog,nexys4ddr-mig-demo,214,0,2023-05-13 20:48:09+00:00,[],None
327,https://github.com/aniruddhavaidya21/SegwayProject.git,2023-05-09 04:51:20+00:00,FPGA based self balancing Segway.,0,aniruddhavaidya21/SegwayProject,638100805,SystemVerilog,SegwayProject,35,0,2023-05-09 05:08:46+00:00,[],None
328,https://github.com/cam-br0wn/vliw.git,2023-05-12 19:30:13+00:00,,0,cam-br0wn/vliw,640020978,SystemVerilog,vliw,130,0,2023-06-08 10:33:50+00:00,[],None
329,https://github.com/ChungKee/Learning_uvm.git,2023-05-20 04:45:30+00:00,,0,ChungKee/Learning_uvm,643092590,SystemVerilog,Learning_uvm,12,0,2023-05-20 07:04:28+00:00,[],None
330,https://github.com/suchuankai/PE.git,2023-04-30 15:15:44+00:00,,0,suchuankai/PE,634572792,SystemVerilog,PE,14,0,2023-05-07 16:27:44+00:00,[],None
331,https://github.com/PRAGATI-0102/BCD-to-7-Segment-using-SV-Day-072-.git,2023-06-20 16:59:54+00:00," This particular circuit is of the combinational type, taking a 4-bit binary coded decimal (BCD) input and producing the corresponding output for a 7-segment display.",0,PRAGATI-0102/BCD-to-7-Segment-using-SV-Day-072-,656299871,SystemVerilog,BCD-to-7-Segment-using-SV-Day-072-,82,0,2023-06-20 17:02:57+00:00,[],None
332,https://github.com/UjvalMadhu/System-Verilog-Projects.git,2023-06-20 23:44:51+00:00,"This repo contains various projects that I am doing to learn System Verilog, I will try to provide as much documentation that any user will be able to get an understanding of the code and learn from it.",0,UjvalMadhu/System-Verilog-Projects,656422189,SystemVerilog,System-Verilog-Projects,1,0,2023-06-20 23:52:47+00:00,[],None
333,https://github.com/Tahsin2020/LED-Dance-Cube.git,2023-06-23 02:30:55+00:00,An App that can record your movements and project you onto a LED cube as long as you have appropriate hardware.  ,0,Tahsin2020/LED-Dance-Cube,657413761,SystemVerilog,LED-Dance-Cube,92534,0,2023-06-23 02:36:21+00:00,[],None
334,https://github.com/twinter145/NoStallsMP3.git,2023-06-06 18:40:32+00:00,ECE 411 MP3 LC3 CPU Implementation,0,twinter145/NoStallsMP3,650286162,SystemVerilog,NoStallsMP3,77,0,2023-06-06 18:40:57+00:00,[],None
335,https://github.com/tsnlab/2023-nipa-opensource-hw.git,2023-06-07 01:57:46+00:00,,0,tsnlab/2023-nipa-opensource-hw,650400116,SystemVerilog,2023-nipa-opensource-hw,130,0,2023-09-08 04:29:04+00:00,[],None
336,https://github.com/AmirEfi/MultiCycle-Processor-of-RISC-V-in-SystemVerilog.git,2023-06-07 11:03:03+00:00,Final Project of Computer Architecture course - Spring 2022,0,AmirEfi/MultiCycle-Processor-of-RISC-V-in-SystemVerilog,650574225,SystemVerilog,MultiCycle-Processor-of-RISC-V-in-SystemVerilog,9,0,2023-06-07 11:06:37+00:00,[],None
337,https://github.com/nightlanding/dsc_verilog.git,2023-06-19 11:15:07+00:00,Deepwise Separable Convolution by Verilog,0,nightlanding/dsc_verilog,655673373,SystemVerilog,dsc_verilog,11,0,2023-06-19 11:36:02+00:00,[],None
338,https://github.com/zhengxuan-luan/ebi.git,2023-04-20 11:32:02+00:00,,0,zhengxuan-luan/ebi,630437276,SystemVerilog,ebi,14,0,2023-04-20 11:36:31+00:00,[],None
339,https://github.com/rafaelcollege123/lab4.git,2023-04-20 22:43:30+00:00,,0,rafaelcollege123/lab4,630675337,SystemVerilog,lab4,6,0,2023-04-20 22:45:50+00:00,[],None
340,https://github.com/0TulipRose0/APS.git,2023-05-02 12:57:02+00:00,,0,0TulipRose0/APS,635322420,SystemVerilog,APS,241,0,2023-05-02 13:52:01+00:00,[],None
341,https://github.com/aribrin/140L_lab1.git,2023-05-01 20:55:22+00:00,,0,aribrin/140L_lab1,635043413,SystemVerilog,140L_lab1,16,0,2023-05-01 21:02:16+00:00,[],None
342,https://github.com/VictorClements/Branch_Predictor_CPE404Project2.git,2023-04-29 06:27:53+00:00,,0,VictorClements/Branch_Predictor_CPE404Project2,634131671,SystemVerilog,Branch_Predictor_CPE404Project2,143,0,2023-08-09 01:42:27+00:00,[],None
343,https://github.com/Pranav1723/ALU.git,2023-05-05 13:08:04+00:00,Implementation of an ALU,0,Pranav1723/ALU,636706818,SystemVerilog,ALU,1,0,2023-05-05 13:09:20+00:00,[],None
344,https://github.com/sid-anand98/Synchronous-FIFO-in-SystemVerilog.git,2023-06-15 07:23:50+00:00,Synchronous BUFFER/FIRST IN FIRST OUT in SystemVerilog,0,sid-anand98/Synchronous-FIFO-in-SystemVerilog,653998690,SystemVerilog,Synchronous-FIFO-in-SystemVerilog,24,0,2023-06-18 14:41:53+00:00,[],None
345,https://github.com/CharAznable97/cheriot_zcu102.git,2023-06-13 10:40:59+00:00,,0,CharAznable97/cheriot_zcu102,653064724,SystemVerilog,cheriot_zcu102,2149,0,2023-06-13 10:45:00+00:00,[],None
346,https://github.com/TDIE/BCD_UVM_Testbench.git,2023-05-30 22:25:46+00:00,,0,TDIE/BCD_UVM_Testbench,647487684,SystemVerilog,BCD_UVM_Testbench,1923,0,2023-07-24 23:55:51+00:00,[],None
347,https://github.com/ying-project/fpga-dsp.git,2023-05-31 15:00:34+00:00,,0,ying-project/fpga-dsp,647807548,SystemVerilog,fpga-dsp,390,0,2023-06-30 14:51:20+00:00,[],None
348,https://github.com/hazemMondy/decoder.git,2023-06-16 20:21:50+00:00,,0,hazemMondy/decoder,654734614,SystemVerilog,decoder,1,0,2023-06-16 20:23:37+00:00,[],None
349,https://github.com/EfrenML/MipsPipelineV2.git,2023-06-15 19:21:52+00:00,,0,EfrenML/MipsPipelineV2,654279901,SystemVerilog,MipsPipelineV2,16,0,2023-06-15 19:25:10+00:00,[],None
350,https://github.com/Parsifal22/Systolic-Array-Output-Stationary.git,2023-06-15 12:32:31+00:00,This is a Systolic Array project for Vivado Xilinx written in the SystemVerilog language. Systolic array has Output Stationary dataflow. You can use my project for further development of DNN accelerator.,0,Parsifal22/Systolic-Array-Output-Stationary,654120278,SystemVerilog,Systolic-Array-Output-Stationary,129,0,2023-06-15 12:51:23+00:00,[],None
351,https://github.com/HACK-EVENT/hackatdac19.git,2023-06-12 19:00:01+00:00,Hack@DAC 2019,0,HACK-EVENT/hackatdac19,652769279,SystemVerilog,hackatdac19,10966,0,2023-06-21 08:59:36+00:00,[],
352,https://github.com/dylanzflores/Resume-Projects.git,2023-05-27 04:16:39+00:00,MIPS Assembly Instruction,0,dylanzflores/Resume-Projects,646029609,SystemVerilog,Resume-Projects,7773,0,2023-06-15 03:42:51+00:00,[],None
353,https://github.com/mrowaha/mips-pipelined-processor.git,2023-06-03 18:08:13+00:00,,0,mrowaha/mips-pipelined-processor,649082871,SystemVerilog,mips-pipelined-processor,531,0,2023-12-23 06:10:43+00:00,[],None
354,https://github.com/NP95/p.git,2023-05-01 01:04:27+00:00,,0,NP95/p,634706718,,p,2,0,2024-01-01 18:04:25+00:00,[],None
355,https://github.com/dsa-shua/FPGA-Based-Arcade-Game.git,2023-06-17 13:51:46+00:00,FPGA Based Penguin Runner Game,0,dsa-shua/FPGA-Based-Arcade-Game,654974265,SystemVerilog,FPGA-Based-Arcade-Game,1261,0,2024-01-05 07:40:21+00:00,[],None
356,https://github.com/CSCE689-SP23/project.git,2023-05-02 06:44:21+00:00,,0,CSCE689-SP23/project,635187695,SystemVerilog,project,164,0,2024-01-08 15:57:07+00:00,[],None
357,https://github.com/abbmir/alu.proj.git,2023-05-15 01:49:36+00:00,,0,abbmir/alu.proj,640724996,SystemVerilog,alu.proj,114,0,2023-10-08 05:31:41+00:00,[],None
358,https://github.com/guilherme-ls/Dual-Slope-Analog-to-Digital-Converter.git,2023-06-19 11:33:29+00:00,"This repository contains the project for a Dual Slope Analog to Digital Converter, built for the Digital Systems class.",0,guilherme-ls/Dual-Slope-Analog-to-Digital-Converter,655680601,SystemVerilog,Dual-Slope-Analog-to-Digital-Converter,2923,0,2023-07-05 12:58:36+00:00,[],https://api.github.com/licenses/mit
359,https://github.com/KobiDekel/FPGA_Examples.git,2023-05-25 09:20:13+00:00,,0,KobiDekel/FPGA_Examples,645265197,SystemVerilog,FPGA_Examples,2016,0,2023-05-25 09:22:27+00:00,[],None
360,https://github.com/OYounis/sc-mips.git,2023-05-25 14:38:01+00:00,Single-cycle single-core MIPS processor ,0,OYounis/sc-mips,645388749,SystemVerilog,sc-mips,143,0,2023-05-25 14:39:47+00:00,"['computer-architecture', 'mips32', 'systemverilog']",https://api.github.com/licenses/apache-2.0
361,https://github.com/Nadav-Abramovich/RoadFighterVL.git,2023-05-25 11:10:24+00:00,,0,Nadav-Abramovich/RoadFighterVL,645305364,SystemVerilog,RoadFighterVL,307592,0,2023-05-25 11:11:21+00:00,[],None
362,https://github.com/rbrinson2/UVM_v1.git,2023-06-06 12:45:44+00:00,Not Functional,0,rbrinson2/UVM_v1,650146122,SystemVerilog,UVM_v1,5,0,2023-06-06 12:47:00+00:00,[],None
363,https://github.com/AidanDougherty/ECE111_FinalProj.git,2023-06-02 20:22:14+00:00,,0,AidanDougherty/ECE111_FinalProj,648789387,SystemVerilog,ECE111_FinalProj,131,0,2023-06-02 20:47:40+00:00,[],None
364,https://github.com/vadimfastos/VGA-APB.git,2023-06-03 14:11:44+00:00,VGA controller with APB bus written on SystemVerilog,0,vadimfastos/VGA-APB,649017556,SystemVerilog,VGA-APB,7,0,2023-06-03 14:29:09+00:00,[],https://api.github.com/licenses/mit
365,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-gigahurt.git,2023-05-09 22:05:28+00:00,ece-251-spring-2023-final-project-gigahurt created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-gigahurt,638684070,SystemVerilog,ece-251-spring-2023-final-project-gigahurt,9,0,2023-05-09 22:05:36+00:00,[],https://api.github.com/licenses/mit
366,https://github.com/Lauritabrenes/Proyecto_III_Multiplicador_secuencial.git,2023-05-16 03:47:49+00:00,,0,Lauritabrenes/Proyecto_III_Multiplicador_secuencial,641231438,SystemVerilog,Proyecto_III_Multiplicador_secuencial,40,0,2023-05-25 04:56:14+00:00,[],https://api.github.com/licenses/mit
367,https://github.com/EngMostafaKhaled/ATM---based-bank-system-Design-verification.git,2023-04-28 14:50:50+00:00,,0,EngMostafaKhaled/ATM---based-bank-system-Design-verification,633905148,SystemVerilog,ATM---based-bank-system-Design-verification,2259,0,2023-05-12 08:07:34+00:00,[],None
368,https://github.com/kibersport3000/repo.git,2023-05-12 13:52:55+00:00,,0,kibersport3000/repo,639907445,SystemVerilog,repo,17811,0,2023-05-12 13:54:29+00:00,[],None
369,https://github.com/zahrahojati19/Comparators.git,2023-05-19 11:55:44+00:00,"different type of comparators (bit-wise, hex, ...) in SystemVerilog HDL",0,zahrahojati19/Comparators,642811146,SystemVerilog,Comparators,10,0,2023-05-19 11:57:56+00:00,[],None
370,https://github.com/shubhamsavita98/DV_HW8.git,2023-05-21 00:26:21+00:00,Verification of Memory Module using SV,0,shubhamsavita98/DV_HW8,643373788,SystemVerilog,DV_HW8,4,0,2023-05-29 13:21:15+00:00,[],None
371,https://github.com/sara-totah/SystemVerilog.git,2023-05-21 11:14:51+00:00,,0,sara-totah/SystemVerilog,643500580,SystemVerilog,SystemVerilog,7,0,2023-09-03 20:52:01+00:00,[],None
372,https://github.com/edenninary/CSMA_Project.git,2023-05-23 11:43:02+00:00,,0,edenninary/CSMA_Project,644375433,SystemVerilog,CSMA_Project,191,0,2023-05-23 12:04:57+00:00,[],None
373,https://github.com/FiercestT/vga.sv.git,2023-05-09 06:29:43+00:00,A  VGA Controller IP in SystemVerilog,0,FiercestT/vga.sv,638128478,SystemVerilog,vga.sv,5033,0,2023-05-09 22:04:09+00:00,[],None
374,https://github.com/hongkaiqin/UVM_ADD.git,2023-05-09 15:57:02+00:00,just for test,0,hongkaiqin/UVM_ADD,638560177,SystemVerilog,UVM_ADD,79,0,2023-05-15 14:52:15+00:00,[],None
375,https://github.com/benjas909/Arqui-T3.git,2023-05-29 05:59:38+00:00,,0,benjas909/Arqui-T3,646692230,SystemVerilog,Arqui-T3,17,0,2023-06-04 06:16:39+00:00,[],None
376,https://github.com/function47/Shuhai.git,2023-05-29 02:01:44+00:00,Forked Shuhai,0,function47/Shuhai,646636595,SystemVerilog,Shuhai,168,0,2023-05-29 02:02:23+00:00,[],None
377,https://github.com/DevrathIyer/cva6-formal.git,2023-05-27 16:12:09+00:00,,0,DevrathIyer/cva6-formal,646204432,SystemVerilog,cva6-formal,592,0,2023-05-27 16:12:38+00:00,[],None
378,https://github.com/STARS-Design-Track-2023/rtl-blocks-shift-register.git,2023-05-31 17:30:01+00:00,,0,STARS-Design-Track-2023/rtl-blocks-shift-register,647865183,SystemVerilog,rtl-blocks-shift-register,526,0,2023-06-12 12:41:44+00:00,[],None
379,https://github.com/tonetooo/Archivos-_Lab_ELO212.git,2023-05-10 19:16:39+00:00,"repositorio del lab de digitales, SEXOOOOOOO",1,tonetooo/Archivos-_Lab_ELO212,639105587,SystemVerilog,Archivos-_Lab_ELO212,7,0,2023-05-17 03:00:51+00:00,[],None
380,https://github.com/YongCastle/ICE2005_42.git,2023-05-15 15:26:30+00:00,Sobel_FPGA_Accelerator..... KING,0,YongCastle/ICE2005_42,641008617,SystemVerilog,ICE2005_42,34577,0,2023-05-22 12:42:17+00:00,[],None
381,https://github.com/J-Hutchinson-C/cpe521-FinalProject.git,2023-05-12 02:13:00+00:00,,0,J-Hutchinson-C/cpe521-FinalProject,639686031,SystemVerilog,cpe521-FinalProject,10317,0,2023-05-12 02:23:26+00:00,[],None
382,https://github.com/Mujahid135/exp7.git,2023-06-14 08:29:58+00:00,,0,Mujahid135/exp7,653531893,SystemVerilog,exp7,3,0,2023-06-14 08:32:42+00:00,[],None
383,https://github.com/RAMVAITHI/system-verilog-.git,2023-05-06 04:53:05+00:00,,0,RAMVAITHI/system-verilog-,636960118,SystemVerilog,system-verilog-,206,0,2023-05-19 05:12:17+00:00,[],None
384,https://github.com/jessief25/tapeout-traffic-light.git,2023-05-05 21:53:28+00:00,,0,jessief25/tapeout-traffic-light,636881256,SystemVerilog,tapeout-traffic-light,586,0,2023-05-05 22:50:42+00:00,[],https://api.github.com/licenses/apache-2.0
385,https://github.com/nikhil123123/Verification-of-serial-peripheral-interface.git,2023-04-19 11:03:56+00:00,,0,nikhil123123/Verification-of-serial-peripheral-interface,629950208,SystemVerilog,Verification-of-serial-peripheral-interface,3,0,2023-04-19 11:07:05+00:00,[],None
386,https://github.com/Kush193/csce_714.git,2023-04-28 03:05:14+00:00,,0,Kush193/csce_714,633674057,SystemVerilog,csce_714,132,0,2023-04-28 03:16:04+00:00,[],None
387,https://github.com/HassanKhaled11/SPI_RAM_FIFO_Verification.git,2023-04-27 22:52:09+00:00,,3,HassanKhaled11/SPI_RAM_FIFO_Verification,633616560,SystemVerilog,SPI_RAM_FIFO_Verification,3014,0,2023-05-02 16:03:38+00:00,[],None
388,https://github.com/nikhil123123/Verification-of-D-flip-flop.git,2023-04-19 11:00:47+00:00,,0,nikhil123123/Verification-of-D-flip-flop,629948950,SystemVerilog,Verification-of-D-flip-flop,2,0,2023-04-19 11:06:01+00:00,[],None
389,https://github.com/LispEngineer/fpga-i2c.git,2023-04-30 03:45:20+00:00,FPGA integration of the Pimoroni Scroll Hat Mini,0,LispEngineer/fpga-i2c,634418455,SystemVerilog,fpga-i2c,13328,0,2023-05-20 03:09:01+00:00,[],
390,https://github.com/masonJamesWheeler/Risc-V-Pipeline-Processor.git,2023-06-19 04:12:30+00:00,"Welcome to my RISC-V Pipeline Processor project. Showcasing proficiency in embedded systems engineering and computer architecture, this project implements the open-source RISC-V ISA, employing a pipelined design for enhanced performance.  The repository offers a practical demonstration of key concepts in hardware-software design.",0,masonJamesWheeler/Risc-V-Pipeline-Processor,655516475,SystemVerilog,Risc-V-Pipeline-Processor,14,0,2023-06-19 04:25:51+00:00,[],None
391,https://github.com/abdullahbiniftikhar/RTL_lib.git,2023-06-18 12:57:51+00:00,,0,abdullahbiniftikhar/RTL_lib,655285460,SystemVerilog,RTL_lib,6,0,2023-06-18 12:58:43+00:00,[],None
392,https://github.com/MohammadShaded/Digital2-Verilog-HW2.git,2023-06-18 18:40:08+00:00,Verilog code to implement a digital system that counts the number of bit transitions.,0,MohammadShaded/Digital2-Verilog-HW2,655389467,SystemVerilog,Digital2-Verilog-HW2,137,0,2023-06-18 18:43:17+00:00,[],None
393,https://github.com/NabilYasser/ATM_Controller.git,2023-06-21 14:39:08+00:00,An ATM cotroller (High level + RTL+ SVA + Cover groups),0,NabilYasser/ATM_Controller,656740466,SystemVerilog,ATM_Controller,926,0,2023-06-21 14:39:20+00:00,[],None
394,https://github.com/Danna112002/exe_unit-sVerilog.git,2023-06-21 16:15:21+00:00,,0,Danna112002/exe_unit-sVerilog,656781939,SystemVerilog,exe_unit-sVerilog,439,0,2023-06-21 16:17:47+00:00,[],None
395,https://github.com/seanfan34/UMICH_EECS.git,2023-05-04 19:51:22+00:00,,0,seanfan34/UMICH_EECS,636414730,SystemVerilog,UMICH_EECS,23850,0,2023-05-06 17:03:28+00:00,[],None
396,https://github.com/2019ee25unioni/Compressed_extention_for_risc_v.git,2023-06-08 05:32:15+00:00,,0,2019ee25unioni/Compressed_extention_for_risc_v,650923701,SystemVerilog,Compressed_extention_for_risc_v,500,0,2023-12-26 08:34:04+00:00,[],None
397,https://github.com/NP95/v.git,2023-05-01 01:05:23+00:00,A solution to a sorting challenge.,0,NP95/v,634706954,SystemVerilog,v,316,0,2023-10-22 00:20:18+00:00,[],None
398,https://github.com/PoChuan994/Johnson_Counter.git,2023-05-19 16:46:06+00:00,,0,PoChuan994/Johnson_Counter,642920684,SystemVerilog,Johnson_Counter,6,0,2023-05-19 16:47:16+00:00,[],None
399,https://github.com/Yuxin-Yu/verilator_experiment.git,2023-05-29 14:41:37+00:00,verilator练习,0,Yuxin-Yu/verilator_experiment,646877702,SystemVerilog,verilator_experiment,329,0,2023-06-04 12:58:52+00:00,[],None
400,https://github.com/craigc40/playground.git,2023-04-19 01:17:34+00:00,,0,craigc40/playground,629760876,SystemVerilog,playground,24,0,2023-04-19 01:19:17+00:00,[],https://api.github.com/licenses/gpl-3.0
401,https://github.com/nandgyf/ELEC527_Vending_Machine.git,2023-04-16 06:06:50+00:00,,0,nandgyf/ELEC527_Vending_Machine,628499176,SystemVerilog,ELEC527_Vending_Machine,16087,0,2023-04-16 06:31:19+00:00,[],None
402,https://github.com/NChitty/HDL-Processor-X.git,2023-04-20 03:13:49+00:00,"This is a project to develop a simple processor in a chosen HDL, in this case SystemVerilog.",0,NChitty/HDL-Processor-X,630274195,SystemVerilog,HDL-Processor-X,226,0,2023-04-20 03:14:47+00:00,[],None
403,https://github.com/QuietRainto4/TinyTapeout_FPGA.git,2023-05-05 21:54:58+00:00,,0,QuietRainto4/TinyTapeout_FPGA,636881585,SystemVerilog,TinyTapeout_FPGA,219,0,2023-05-06 00:25:44+00:00,[],https://api.github.com/licenses/apache-2.0
404,https://github.com/isaxito/unidad_p.git,2023-05-09 18:10:43+00:00,Ejercicio 4 de TD2 sobre describir una unidad procesadora con arquitectura Harvard,0,isaxito/unidad_p,638612012,SystemVerilog,unidad_p,2,0,2023-05-09 18:12:39+00:00,[],None
405,https://github.com/davemap/Custom-Accelerator-Project.git,2023-05-05 10:52:54+00:00,,0,davemap/Custom-Accelerator-Project,636658623,SystemVerilog,Custom-Accelerator-Project,7458,0,2023-05-05 10:54:19+00:00,[],None
406,https://github.com/KnowAashish/chipdev.io.git,2023-05-06 07:46:18+00:00,This repository consists of all chipdev.io practice questions,0,KnowAashish/chipdev.io,637001018,SystemVerilog,chipdev.io,166,0,2023-10-11 20:56:05+00:00,[],None
407,https://github.com/fpgaudio/fpgaudio-main.git,2023-05-08 20:19:34+00:00,The main repository for the FPGAudio project,0,fpgaudio/fpgaudio-main,637976651,SystemVerilog,fpgaudio-main,6,0,2023-05-08 20:19:50+00:00,[],None
408,https://github.com/bushbecky/System-Verilog-bootcamp.git,2023-05-08 20:56:01+00:00,,0,bushbecky/System-Verilog-bootcamp,637987132,SystemVerilog,System-Verilog-bootcamp,77,0,2023-05-08 20:56:27+00:00,[],https://api.github.com/licenses/gpl-3.0
409,https://github.com/bushbecky/SystemVerilog.git,2023-05-08 21:00:53+00:00,,0,bushbecky/SystemVerilog,637988523,SystemVerilog,SystemVerilog,27964,0,2023-05-08 21:01:32+00:00,[],https://api.github.com/licenses/gpl-3.0
410,https://github.com/asmwriter/cmu_18624_ucpu_tiny_tapeout_submission.git,2023-04-28 03:03:32+00:00,Tiny-Tapeout Github Repository for CMU 18-624: Micro-programmed CPU on ,0,asmwriter/cmu_18624_ucpu_tiny_tapeout_submission,633673651,SystemVerilog,cmu_18624_ucpu_tiny_tapeout_submission,21,0,2023-05-05 13:33:40+00:00,[],https://api.github.com/licenses/apache-2.0
411,https://github.com/jaeyoon0531/CONNECT.git,2023-05-04 07:12:55+00:00,,0,jaeyoon0531/CONNECT,636123311,SystemVerilog,CONNECT,24,0,2023-05-04 07:25:16+00:00,[],None
412,https://github.com/Woods182/VISL_project.git,2023-05-05 07:22:30+00:00,,0,Woods182/VISL_project,636584565,SystemVerilog,VISL_project,18355,0,2023-05-18 07:10:39+00:00,[],None
413,https://github.com/foolfoolaa/rtl_test.git,2023-04-25 13:44:10+00:00,,0,foolfoolaa/rtl_test,632478348,SystemVerilog,rtl_test,1,0,2023-04-25 13:45:15+00:00,[],None
414,https://github.com/Cnh1116/Simple-Processor-.git,2023-04-25 23:23:21+00:00,,0,Cnh1116/Simple-Processor-,632684557,SystemVerilog,Simple-Processor-,265,0,2023-04-25 23:23:50+00:00,[],None
415,https://github.com/TravisDvis/SHA256BitcoinHash.git,2023-04-21 02:59:34+00:00,,0,TravisDvis/SHA256BitcoinHash,630731505,SystemVerilog,SHA256BitcoinHash,4062,0,2023-04-21 03:06:38+00:00,[],None
416,https://github.com/alinparcalab/FreeList.git,2023-05-02 10:30:15+00:00,,0,alinparcalab/FreeList,635267116,SystemVerilog,FreeList,9,0,2023-05-02 10:30:36+00:00,[],https://api.github.com/licenses/apache-2.0
417,https://github.com/jhladik/chu_systemverilog_exercises.git,2023-05-20 19:47:10+00:00,Completed exercises for book FPGA Prototyping by SystemVerilog Examples,0,jhladik/chu_systemverilog_exercises,643322959,SystemVerilog,chu_systemverilog_exercises,5,0,2023-05-20 19:48:35+00:00,[],None
418,https://github.com/fpgaudio/fpgaudio.git,2023-05-17 03:35:05+00:00,The main FPGAUDIO Demo,0,fpgaudio/fpgaudio,641727029,SystemVerilog,fpgaudio,77,0,2023-05-31 19:54:15+00:00,[],None
419,https://github.com/caio-a18/Logic-Design-and-Computer-Organization.git,2023-05-15 07:23:35+00:00,Case Western Reserve University: CSDS 281 - Logic Design and Computer Organization,0,caio-a18/Logic-Design-and-Computer-Organization,640813481,SystemVerilog,Logic-Design-and-Computer-Organization,119,0,2023-05-17 05:35:28+00:00,[],None
420,https://github.com/mohamedmostaf21/Multi-mode-counter.git,2023-05-15 18:06:32+00:00,Design a Multi-Mode-counter count up down by 1 and by 2 in system verilog HDL,0,mohamedmostaf21/Multi-mode-counter,641071235,SystemVerilog,Multi-mode-counter,3,0,2023-05-15 18:11:28+00:00,[],None
421,https://github.com/whoiskaiii/memory_control.git,2023-05-20 04:38:21+00:00,,0,whoiskaiii/memory_control,643091126,SystemVerilog,memory_control,1477,0,2023-06-08 08:28:15+00:00,[],None
422,https://github.com/SiyamAcet/Simple_Data_Path.git,2023-06-09 13:04:47+00:00,,0,SiyamAcet/Simple_Data_Path,651535558,SystemVerilog,Simple_Data_Path,132,0,2023-06-16 10:44:30+00:00,[],None
423,https://github.com/ivanmgribeiro/ibex.git,2023-06-09 14:07:13+00:00,"Ibex is a small 32 bit RISC-V CPU core, previously known as zero-riscy. Forked from https://github.com/ivanmgribeiro-google/ibex",1,ivanmgribeiro/ibex,651560065,SystemVerilog,ibex,11605,0,2023-06-09 14:13:49+00:00,[],https://api.github.com/licenses/apache-2.0
424,https://github.com/MuhammadHammad01/UART-Transmitter.git,2023-06-04 11:30:38+00:00," This GitHub repository contains a UART transmitter implementation in SystemVerilog. It includes the data path and controller modules, offering a reliable serial communication solution for digital systems.",0,MuhammadHammad01/UART-Transmitter,649284602,SystemVerilog,UART-Transmitter,4,0,2023-06-04 11:31:51+00:00,[],None
425,https://github.com/kanade-k-1228/RK8.git,2023-06-15 07:05:33+00:00,,0,kanade-k-1228/RK8,653991271,SystemVerilog,RK8,18,0,2023-06-17 02:00:50+00:00,[],None
426,https://github.com/evgenysns/unique_decoder.git,2023-06-15 09:37:29+00:00,sv test case,0,evgenysns/unique_decoder,654052563,SystemVerilog,unique_decoder,8,0,2023-06-15 09:58:47+00:00,[],None
427,https://github.com/Liam-lyr/Multicycle-MIPS-Processor.git,2023-06-22 08:36:46+00:00,A multicycle MIPS processor with a brunch of basic MIPS instructions supported.,0,Liam-lyr/Multicycle-MIPS-Processor,657064650,SystemVerilog,Multicycle-MIPS-Processor,8645,0,2023-07-01 21:05:58+00:00,[],https://api.github.com/licenses/mit
428,https://github.com/MrDarkhawk/System-Verilog-FIFO.git,2023-06-21 05:50:35+00:00,,0,MrDarkhawk/System-Verilog-FIFO,656521349,SystemVerilog,System-Verilog-FIFO,5,0,2023-06-21 05:52:06+00:00,[],None
429,https://github.com/MoonLoone/calculator.git,2023-06-06 17:44:19+00:00,,0,MoonLoone/calculator,650265700,SystemVerilog,calculator,9023,0,2023-06-06 17:45:43+00:00,[],None
430,https://github.com/mingfeii/RTL_modules.git,2023-06-01 16:11:53+00:00,my rtl design or simulation module collections ,0,mingfeii/RTL_modules,648288079,SystemVerilog,RTL_modules,2257,0,2023-06-01 16:14:24+00:00,[],None
431,https://github.com/tom01h/riscv.git,2023-05-28 09:53:42+00:00,多分わかりやすいと思う3段パイプのRV32I (代わりにいろいろ機能足りない),0,tom01h/riscv,646406979,SystemVerilog,riscv,66,0,2023-06-08 13:44:01+00:00,[],None
432,https://github.com/Beng1997/Road_Fighter_NES.git,2023-06-20 15:49:06+00:00,"As part of the first ECE lab, the final project was to build a video game based on the 80's NES game: Road Fighter.",0,Beng1997/Road_Fighter_NES,656272065,SystemVerilog,Road_Fighter_NES,477,0,2023-06-20 15:56:33+00:00,[],None
433,https://github.com/Nikola2444/Coding_Test.git,2023-06-05 14:27:18+00:00,,0,Nikola2444/Coding_Test,649739924,SystemVerilog,Coding_Test,13,0,2023-06-08 20:51:05+00:00,[],None
434,https://github.com/cjmats04/CPE-133-Final-Project.git,2023-06-05 23:00:09+00:00,,0,cjmats04/CPE-133-Final-Project,649909303,SystemVerilog,CPE-133-Final-Project,15075,0,2023-06-08 05:44:53+00:00,[],None
435,https://github.com/v-kumar1123/CL_0000_MESIC.git,2023-04-30 22:40:10+00:00,,0,v-kumar1123/CL_0000_MESIC,634681754,SystemVerilog,CL_0000_MESIC,299,0,2023-05-05 20:04:22+00:00,[],https://api.github.com/licenses/apache-2.0
436,https://github.com/k-31413/ass_ex.git,2023-04-30 14:27:50+00:00,,0,k-31413/ass_ex,634559227,SystemVerilog,ass_ex,1,0,2023-04-30 14:32:45+00:00,[],None
437,https://github.com/2023-Spring-ECE4278/lab7.git,2023-04-30 11:51:38+00:00,,0,2023-Spring-ECE4278/lab7,634519107,SystemVerilog,lab7,15,0,2023-05-01 00:08:10+00:00,[],None
438,https://github.com/liu-xueyang/AXI_stream_width_converter.git,2023-05-23 22:47:19+00:00,"System verilog AXI_stream_width_converter, include upsizer and downsizer. Compile and run test with icarus verilog",0,liu-xueyang/AXI_stream_width_converter,644618043,SystemVerilog,AXI_stream_width_converter,19,0,2023-05-24 00:03:31+00:00,[],None
439,https://github.com/WalidAkash/DESIGN_VERIFICATION.git,2023-05-22 10:58:44+00:00,,0,WalidAkash/DESIGN_VERIFICATION,643881735,SystemVerilog,DESIGN_VERIFICATION,271,0,2023-08-14 04:50:13+00:00,[],None
440,https://github.com/Aydogan-Goktug/fbu-riscv.git,2023-05-24 09:58:58+00:00,This is for Computer Architecture project.,1,Aydogan-Goktug/fbu-riscv,644811444,SystemVerilog,fbu-riscv,1537,0,2023-05-24 10:08:42+00:00,[],None
441,https://github.com/ruthvikkota/System-Verilog.git,2023-06-15 06:16:42+00:00,,0,ruthvikkota/System-Verilog,653973399,SystemVerilog,System-Verilog,133,0,2023-06-20 06:03:42+00:00,[],None
442,https://github.com/Shwetakr08/sv_program.git,2023-06-05 14:30:35+00:00,,0,Shwetakr08/sv_program,649741262,SystemVerilog,sv_program,11,0,2023-12-19 09:47:47+00:00,[],None
443,https://github.com/serhaturtis/DD-LTC2311-16.git,2023-06-12 18:57:57+00:00,IP Module For LTC2311 ADC,1,serhaturtis/DD-LTC2311-16,652768539,SystemVerilog,DD-LTC2311-16,424,0,2024-01-23 18:08:37+00:00,"['adc', 'digitaldesign', 'fpga', 'systemverilog', 'ltc2311']",https://api.github.com/licenses/mit
444,https://github.com/trswany/rfkit.git,2023-05-16 05:39:36+00:00,Verilog HDL modules for use in RF projects,0,trswany/rfkit,641261020,SystemVerilog,rfkit,133,0,2023-05-16 16:08:25+00:00,[],https://api.github.com/licenses/mit
445,https://github.com/sumiravishan/RISCV32_LINUX_UVM.git,2023-05-24 17:40:38+00:00,Embeded Linux Boot in RISCV32IMA,0,sumiravishan/RISCV32_LINUX_UVM,644997651,SystemVerilog,RISCV32_LINUX_UVM,19425,0,2023-05-24 17:43:48+00:00,[],https://api.github.com/licenses/gpl-3.0
446,https://github.com/MarleyLobao/UVM_Traffic_Backdoor_RAL.git,2023-05-25 00:40:46+00:00,This repository organizes the ChipVerify website code so that it is executable in a verification environment that uses the Register Abstraction Layer (RAL) in backdoor mode.,0,MarleyLobao/UVM_Traffic_Backdoor_RAL,645113594,SystemVerilog,UVM_Traffic_Backdoor_RAL,11,0,2023-05-25 02:08:38+00:00,[],None
447,https://github.com/mohamedmorsi22/SBqM.git,2023-05-25 11:10:41+00:00,The design is implemented to monitor the client queue in front of the tellers. ,0,mohamedmorsi22/SBqM,645305466,SystemVerilog,SBqM,3,0,2023-05-25 11:12:09+00:00,[],None
448,https://github.com/YouEnWang/Hamming-code_Error-correction.git,2023-04-26 11:39:46+00:00,,0,YouEnWang/Hamming-code_Error-correction,632911816,SystemVerilog,Hamming-code_Error-correction,659,0,2023-07-12 15:08:39+00:00,[],None
449,https://github.com/Fahad-Habib/UART-Tx.git,2023-04-23 05:24:08+00:00,UART Tx implemented in SystemVerilog from scratch.,0,Fahad-Habib/UART-Tx,631465519,SystemVerilog,UART-Tx,5,0,2023-04-23 05:34:06+00:00,"['digital-system-design', 'uart', 'uart-verilog']",None
450,https://github.com/anoushkasaraswat/100DaysOfRTL.git,2023-04-20 17:02:58+00:00,,0,anoushkasaraswat/100DaysOfRTL,630571351,SystemVerilog,100DaysOfRTL,142,0,2023-05-13 17:16:03+00:00,[],None
451,https://github.com/DJosueMM/FPGA_HDL_Projects.git,2023-04-21 05:57:39+00:00,Some of the modules and projects that I designed,0,DJosueMM/FPGA_HDL_Projects,630772963,SystemVerilog,FPGA_HDL_Projects,3040,0,2023-04-21 06:05:01+00:00,[],None
452,https://github.com/bryceberger/ecp5-bootstrap.git,2023-04-21 01:15:38+00:00,,0,bryceberger/ecp5-bootstrap,630706984,SystemVerilog,ecp5-bootstrap,42,0,2023-04-21 01:16:10+00:00,[],None
453,https://github.com/Nagaraj3181/universal_verification_methodology.git,2023-06-04 11:42:53+00:00,,0,Nagaraj3181/universal_verification_methodology,649287533,SystemVerilog,universal_verification_methodology,3747,0,2023-06-05 13:03:13+00:00,[],None
454,https://github.com/xuhuan98/Asynchronous-FIFO.git,2023-05-31 13:45:24+00:00,,0,xuhuan98/Asynchronous-FIFO,647773754,SystemVerilog,Asynchronous-FIFO,16698,0,2023-07-19 01:15:42+00:00,[],https://api.github.com/licenses/apache-2.0
455,https://github.com/XintingLi/ahb_manager_uvm.git,2023-04-29 00:54:58+00:00,Make build&run error free. The ahb_if has implementation problem need to be fix.,0,XintingLi/ahb_manager_uvm,634071535,SystemVerilog,ahb_manager_uvm,7945,0,2023-04-29 00:56:26+00:00,[],None
456,https://github.com/khei4/myveri.git,2023-04-29 01:55:12+00:00,verilog coding template,0,khei4/myveri,634080959,SystemVerilog,myveri,39,0,2023-04-29 01:55:29+00:00,[],None
457,https://github.com/alinparcalab/vr_skid_decoupler.git,2023-05-02 10:00:23+00:00,Simple Valid Ready Decoupler with Skid buffer,0,alinparcalab/vr_skid_decoupler,635256492,SystemVerilog,vr_skid_decoupler,9,0,2023-05-02 10:04:43+00:00,[],https://api.github.com/licenses/apache-2.0
458,https://github.com/toms99/computer_architecture_vectorial_asip.git,2023-05-06 17:18:35+00:00,,0,toms99/computer_architecture_vectorial_asip,637155603,SystemVerilog,computer_architecture_vectorial_asip,155,0,2023-05-24 22:55:16+00:00,[],None
459,https://github.com/fpgaudio/midi_module.git,2023-05-07 06:24:42+00:00,,0,fpgaudio/midi_module,637306574,SystemVerilog,midi_module,10405,0,2023-05-07 06:25:15+00:00,[],None
460,https://github.com/Heutlett/2023_ARQUI2_PROYECTO2.git,2023-05-06 00:19:53+00:00,,0,Heutlett/2023_ARQUI2_PROYECTO2,636907955,SystemVerilog,2023_ARQUI2_PROYECTO2,18428,0,2023-05-24 23:37:26+00:00,[],None
461,https://github.com/soukalin96/uvm_practice.git,2023-05-09 07:13:40+00:00,,0,soukalin96/uvm_practice,638144043,SystemVerilog,uvm_practice,1,0,2023-05-09 07:15:08+00:00,[],None
462,https://github.com/varshach26/Bitcoin-Hashing.git,2023-06-23 06:29:59+00:00,Serial and Parallel Implementation of Bitcoin Hashing using SystemVerilog,0,varshach26/Bitcoin-Hashing,657475565,SystemVerilog,Bitcoin-Hashing,13,0,2023-06-23 06:33:32+00:00,[],None
463,https://github.com/afterCherry/Digital-Integrated-Circuit.git,2023-06-23 17:29:50+00:00,,0,afterCherry/Digital-Integrated-Circuit,657720946,SystemVerilog,Digital-Integrated-Circuit,6115,0,2023-06-27 13:03:08+00:00,[],None
464,https://github.com/s0man3/8bitcpu.git,2023-06-20 17:23:43+00:00,8bit cpu,0,s0man3/8bitcpu,656309173,SystemVerilog,8bitcpu,1,0,2023-06-20 18:21:19+00:00,[],None
465,https://github.com/HWL00/umiche-eecs470-group3f22.git,2023-06-21 12:54:44+00:00,,0,HWL00/umiche-eecs470-group3f22,656694471,SystemVerilog,umiche-eecs470-group3f22,4353,0,2023-06-21 14:25:21+00:00,[],None
466,https://github.com/jashwantrajg/FPGA-projects.git,2023-06-13 00:36:41+00:00,,0,jashwantrajg/FPGA-projects,652865897,SystemVerilog,FPGA-projects,7823,0,2023-06-13 01:20:30+00:00,[],None
467,https://github.com/galaxybomb23/STARS-6502cpu.git,2023-06-14 14:59:52+00:00,Purdue STARS program code for 6502 CPU in verilog,0,galaxybomb23/STARS-6502cpu,653705051,SystemVerilog,STARS-6502cpu,6020,0,2023-06-14 15:43:24+00:00,[],None
468,https://github.com/mjalbert99/CSE141L.git,2023-05-12 16:46:48+00:00,Holds all the code for our RISC processor,0,mjalbert99/CSE141L,639970449,SystemVerilog,CSE141L,659,0,2023-05-13 23:50:10+00:00,[],None
469,https://github.com/Adelsamir01/Dadda-Multiplier-Design.git,2023-05-13 13:54:19+00:00,,0,Adelsamir01/Dadda-Multiplier-Design,640258499,SystemVerilog,Dadda-Multiplier-Design,1832,0,2023-05-13 13:56:35+00:00,[],None
470,https://github.com/learnsvuvm/adder4bit.git,2023-05-03 06:35:44+00:00,,0,learnsvuvm/adder4bit,635646244,SystemVerilog,adder4bit,7,0,2023-05-03 06:36:45+00:00,[],None
471,https://github.com/PappasFlow/System_Verilog.git,2023-04-25 15:24:00+00:00,descripciones de hardware en System Verilog utilizando software Cuartus  ,1,PappasFlow/System_Verilog,632522272,SystemVerilog,System_Verilog,11796,0,2023-04-25 15:25:56+00:00,[],None
472,https://github.com/omarv10/RiscV.git,2023-05-04 04:34:59+00:00,,0,omarv10/RiscV,636075221,SystemVerilog,RiscV,356,0,2023-06-01 19:39:08+00:00,[],None
473,https://github.com/haider-06418/RISCV-Pipelined-Processor.git,2023-05-10 20:25:47+00:00,A 5-stage pipelined processor capable of executing any one array sorting algorithm,0,haider-06418/RISCV-Pipelined-Processor,639128495,SystemVerilog,RISCV-Pipelined-Processor,2284,0,2023-05-15 17:40:02+00:00,[],None
474,https://github.com/yvantor/reqrsp_interface.git,2023-05-08 15:15:40+00:00,,0,yvantor/reqrsp_interface,637865190,SystemVerilog,reqrsp_interface,31,0,2023-05-08 15:17:29+00:00,[],None
475,https://github.com/bushbecky/vhdl2verilog.git,2023-05-08 19:56:38+00:00,,0,bushbecky/vhdl2verilog,637969503,SystemVerilog,vhdl2verilog,14834,0,2023-05-08 19:58:08+00:00,[],https://api.github.com/licenses/mit
476,https://github.com/balaji-vbr/MIPS-Lite-5-Stage-Pipeline-Simualtor.git,2023-06-18 02:58:30+00:00,,0,balaji-vbr/MIPS-Lite-5-Stage-Pipeline-Simualtor,655142850,SystemVerilog,MIPS-Lite-5-Stage-Pipeline-Simualtor,500,0,2023-06-19 02:45:10+00:00,[],None
477,https://github.com/RomanMakingCode/NoFish.git,2023-05-04 04:58:28+00:00,Cryptographic Accelerator ,0,RomanMakingCode/NoFish,636080892,SystemVerilog,NoFish,53,0,2024-02-18 04:25:35+00:00,[],https://api.github.com/licenses/apache-2.0
478,https://github.com/singh-rozer/sv_constraints.git,2023-06-04 21:55:43+00:00,constraints,0,singh-rozer/sv_constraints,649451203,SystemVerilog,sv_constraints,49,0,2024-02-07 19:01:02+00:00,[],None
479,https://github.com/PacoReinaCampo/MPSoC-DSA.git,2023-06-01 11:53:18+00:00,Digital Signature Algorithm for MPSoC,0,PacoReinaCampo/MPSoC-DSA,648185486,SystemVerilog,MPSoC-DSA,73851,0,2023-10-08 07:34:57+00:00,"['cryptography', 'ecdsa', 'kcdsa']",https://api.github.com/licenses/mit
480,https://github.com/SolarDebris/writeups.git,2023-06-21 21:54:06+00:00,A collection of writeups for challenges that I've done that I thought were interesting,0,SolarDebris/writeups,656897277,SystemVerilog,writeups,40813,0,2024-04-01 23:42:37+00:00,[],https://api.github.com/licenses/gpl-3.0
481,https://github.com/rudrajyotiroy/SysArray.git,2023-06-10 11:06:39+00:00,,0,rudrajyotiroy/SysArray,651875183,SystemVerilog,SysArray,4,0,2023-06-10 16:20:19+00:00,[],None
482,https://github.com/abarajithan11/uvm_decrypter.git,2023-06-13 04:46:01+00:00,,0,abarajithan11/uvm_decrypter,652931850,SystemVerilog,uvm_decrypter,84,0,2023-06-13 04:46:54+00:00,[],None
483,https://github.com/AlbertZick/MyUvmExample.git,2023-04-17 04:08:49+00:00,,0,AlbertZick/MyUvmExample,628827247,SystemVerilog,MyUvmExample,4,0,2023-04-17 11:17:40+00:00,[],None
484,https://github.com/matheusinoc/loac.git,2023-05-19 13:07:37+00:00,Roteiros de LOAC,0,matheusinoc/loac,642837662,SystemVerilog,loac,8571,0,2023-05-19 13:14:57+00:00,[],None
485,https://github.com/tallenintegsys/glitchGenerator.git,2023-05-19 14:52:32+00:00,Really a fancy pulse generator specialized to generating glitch pulses,0,tallenintegsys/glitchGenerator,642880133,SystemVerilog,glitchGenerator,173,0,2023-05-29 21:18:17+00:00,[],None
486,https://github.com/linzack/fsic.git,2023-05-16 23:39:35+00:00,,0,linzack/fsic,641670778,SystemVerilog,fsic,1399,0,2023-05-17 00:11:55+00:00,[],None
487,https://github.com/gopalvamsi09/leaf_sequence.git,2023-05-18 07:21:49+00:00,,0,gopalvamsi09/leaf_sequence,642265569,SystemVerilog,leaf_sequence,3,0,2023-05-18 07:31:46+00:00,[],None
488,https://github.com/LuisZumbado99/Multiplicador_secuencial.git,2023-05-16 23:55:44+00:00,Implementación del algoritmo de Booth por medio de máquinas de estados complejas.,0,LuisZumbado99/Multiplicador_secuencial,641674235,SystemVerilog,Multiplicador_secuencial,160,0,2023-05-26 22:24:51+00:00,[],None
489,https://github.com/symbolfu/BASIC_IC_DESIGN.git,2023-05-23 13:45:21+00:00,"somtime, code ic common module",0,symbolfu/BASIC_IC_DESIGN,644425860,SystemVerilog,BASIC_IC_DESIGN,14,0,2023-05-23 13:48:49+00:00,[],None
490,https://github.com/TonyKorol1/lab4prelab.git,2023-05-23 20:25:02+00:00,,0,TonyKorol1/lab4prelab,644580621,SystemVerilog,lab4prelab,0,0,2023-05-23 20:56:32+00:00,[],None
491,https://github.com/jnestor/otieno_research.git,2023-05-24 17:26:12+00:00,Summer Design Projects with Maurice Otieno,0,jnestor/otieno_research,644992408,SystemVerilog,otieno_research,249,0,2023-05-25 16:34:45+00:00,[],None
492,https://github.com/adityaB02/100daysofRTL.git,2023-05-24 05:29:17+00:00,RTL (Register Transfer Level) design/digital logic design in system verilog(.sv) and use of verification methodologies.,0,adityaB02/100daysofRTL,644714123,SystemVerilog,100daysofRTL,465,0,2023-05-24 09:35:46+00:00,[],None
493,https://github.com/onurozdemr/pipelined-singlecycle-processor.git,2023-05-18 19:07:41+00:00,,0,onurozdemr/pipelined-singlecycle-processor,642524200,SystemVerilog,pipelined-singlecycle-processor,1848,0,2023-05-18 19:17:36+00:00,[],None
494,https://github.com/SamehM20/UART.git,2023-05-20 14:22:04+00:00,Configurable UART Implementation,0,SamehM20/UART,643235833,SystemVerilog,UART,18,0,2023-05-20 14:22:50+00:00,[],https://api.github.com/licenses/apache-2.0
495,https://github.com/AniketShukla14/AXI_Protocol.git,2023-05-12 06:50:52+00:00,,0,AniketShukla14/AXI_Protocol,639757107,SystemVerilog,AXI_Protocol,19,0,2023-05-12 06:55:33+00:00,[],None
496,https://github.com/KyleHolub-tamu/ECEN_685.git,2023-05-31 22:35:02+00:00,,0,KyleHolub-tamu/ECEN_685,647957825,SystemVerilog,ECEN_685,74,0,2023-06-01 17:20:55+00:00,[],None
497,https://github.com/pdn002/ECE111-Final-Project.git,2023-06-02 18:11:52+00:00,,0,pdn002/ECE111-Final-Project,648752713,SystemVerilog,ECE111-Final-Project,199,0,2023-06-02 18:13:33+00:00,[],None
498,https://github.com/AthibanNatarajan/half_adder_Sv.git,2023-06-23 10:05:09+00:00,,0,AthibanNatarajan/half_adder_Sv,657551022,SystemVerilog,half_adder_Sv,13,0,2023-06-23 10:06:47+00:00,[],None
499,https://github.com/mayyxeng/cva6-synth-sim.git,2023-06-23 14:52:07+00:00,"A fork of cva6 with a ""synthesizable"" testbench for verilator",0,mayyxeng/cva6-synth-sim,657662864,SystemVerilog,cva6-synth-sim,36516,0,2023-06-23 14:56:33+00:00,[],
500,https://github.com/prashant-pvip/AHB_lite_to_AXI4.git,2023-06-23 12:44:47+00:00,Aim to provide UVM Testbench component for AHB-lite to AXI4,0,prashant-pvip/AHB_lite_to_AXI4,657610703,SystemVerilog,AHB_lite_to_AXI4,6,0,2023-06-23 12:47:04+00:00,[],None
501,https://github.com/aknahin/ReversibleGates-SystemVerilog.git,2023-06-14 19:34:38+00:00,,0,aknahin/ReversibleGates-SystemVerilog,653809719,SystemVerilog,ReversibleGates-SystemVerilog,27,0,2023-06-14 19:49:48+00:00,[],https://api.github.com/licenses/mit
502,https://github.com/ibourff/rtk-blocks-counter-ibourff-main.git,2023-06-13 18:35:02+00:00,,0,ibourff/rtk-blocks-counter-ibourff-main,653277121,SystemVerilog,rtk-blocks-counter-ibourff-main,258,0,2023-06-13 18:35:10+00:00,[],None
503,https://github.com/jhlee25/EE-469.git,2023-05-04 05:17:03+00:00,Computer Architecture,0,jhlee25/EE-469,636085747,SystemVerilog,EE-469,1767,0,2023-09-27 04:37:26+00:00,[],None
504,https://github.com/sudohdl/basic_coverage.git,2023-05-01 15:43:18+00:00,,0,sudohdl/basic_coverage,634939451,SystemVerilog,basic_coverage,2,0,2023-05-02 08:37:19+00:00,[],https://api.github.com/licenses/mit
505,https://github.com/tharinduSamare/UVM_switch_test.git,2023-05-01 19:56:33+00:00,"This is a UVM test bench for a simple combinational switch, designed for learning purposes.",1,tharinduSamare/UVM_switch_test,635026598,SystemVerilog,UVM_switch_test,444,0,2023-05-10 17:14:02+00:00,[],None
506,https://github.com/Carl625/18224-platformer-tapeout.git,2023-04-27 23:27:06+00:00,A platformer tapeout project for 18224 (Intro to Open-Source FPGA & ASIC Chip Design) at CMU,0,Carl625/18224-platformer-tapeout,633624285,SystemVerilog,18224-platformer-tapeout,21,0,2023-04-27 23:33:37+00:00,[],https://api.github.com/licenses/apache-2.0
507,https://github.com/abhigna97/Verification-of-Circular-buffer-using-SystemVerilog-Class-based-TestBench.git,2023-04-28 22:31:03+00:00,,0,abhigna97/Verification-of-Circular-buffer-using-SystemVerilog-Class-based-TestBench,634045912,SystemVerilog,Verification-of-Circular-buffer-using-SystemVerilog-Class-based-TestBench,214,0,2023-06-11 18:50:58+00:00,[],None
508,https://github.com/bushbecky/RiSC-16.git,2023-05-08 21:00:20+00:00,,0,bushbecky/RiSC-16,637988335,SystemVerilog,RiSC-16,776,0,2023-05-08 21:00:46+00:00,[],https://api.github.com/licenses/mit
509,https://github.com/drawnator/LOACUFCG.git,2023-05-09 13:22:11+00:00,meus códigos em organização e arquitetura de computadores,0,drawnator/LOACUFCG,638490045,SystemVerilog,LOACUFCG,1567,0,2023-05-09 14:11:47+00:00,[],https://api.github.com/licenses/cc0-1.0
510,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-bit-busters.git,2023-05-09 22:06:28+00:00,ece-251-spring-2023-final-project-bit-busters created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-bit-busters,638684306,SystemVerilog,ece-251-spring-2023-final-project-bit-busters,213,0,2023-05-16 12:46:02+00:00,[],https://api.github.com/licenses/mit
511,https://github.com/beyzoskaya/ComputerArchitecture.git,2023-04-23 00:33:18+00:00,,0,beyzoskaya/ComputerArchitecture,631415923,SystemVerilog,ComputerArchitecture,5055,0,2023-04-23 00:39:48+00:00,[],None
512,https://github.com/acoskuner500/ecen676-project-testbench.git,2023-04-23 05:43:25+00:00,,0,acoskuner500/ecen676-project-testbench,631469342,SystemVerilog,ecen676-project-testbench,23,0,2023-04-23 05:44:53+00:00,[],None
513,https://github.com/mennovf/FPGAHackathon2023.git,2023-04-25 17:50:51+00:00,(Partial) solutions to Nokia's 2023 FPGA Hackathon  (online),0,mennovf/FPGAHackathon2023,632581072,SystemVerilog,FPGAHackathon2023,144,0,2023-04-25 17:57:33+00:00,[],None
514,https://github.com/HantianLin/CSE140L-Lab1.git,2023-04-30 04:20:27+00:00,,0,HantianLin/CSE140L-Lab1,634424270,SystemVerilog,CSE140L-Lab1,38,0,2023-04-30 04:21:07+00:00,[],None
515,https://github.com/DouglasWWolf/vectorpath_scratch_files.git,2023-05-06 03:30:28+00:00,Neccessary files for creating VectorPath projects from scratch,0,DouglasWWolf/vectorpath_scratch_files,636944384,SystemVerilog,vectorpath_scratch_files,28,0,2023-05-06 03:32:21+00:00,[],None
516,https://github.com/jyuwaaw/IC_Verification.git,2023-04-23 07:23:37+00:00,"集成电路验证技术 For HUST IC major by Benji, Class of 2019",0,jyuwaaw/IC_Verification,631491693,SystemVerilog,IC_Verification,25265,0,2024-01-11 19:23:35+00:00,[],None
517,https://github.com/MrDoomsday/sc_lifo.git,2023-06-16 17:04:23+00:00,LIFO,0,MrDoomsday/sc_lifo,654676152,SystemVerilog,sc_lifo,4,0,2024-01-28 18:14:00+00:00,[],None
518,https://github.com/Rakesh5173/4-port-switch-systemverilog-verification.git,2023-06-03 21:06:38+00:00,Verification Component Development for Four-Port Switch ,0,Rakesh5173/4-port-switch-systemverilog-verification,649121304,SystemVerilog,4-port-switch-systemverilog-verification,22,0,2024-02-15 18:52:01+00:00,[],None
519,https://github.com/VishnuMadupoju/SytemVerilog_testbech_scrs.git,2023-05-20 08:59:55+00:00,,0,VishnuMadupoju/SytemVerilog_testbech_scrs,643151666,SystemVerilog,SytemVerilog_testbech_scrs,13,0,2023-05-20 09:04:14+00:00,[],None
520,https://github.com/peter-july/verilogLearnRecord.git,2023-06-18 06:26:32+00:00,,0,peter-july/verilogLearnRecord,655183542,SystemVerilog,verilogLearnRecord,10,0,2024-04-04 09:32:14+00:00,[],None
521,https://github.com/erhangk/Digital-Circuit-Design.git,2023-04-21 15:37:57+00:00,Intel Quartus Projects,0,erhangk/Digital-Circuit-Design,630972890,SystemVerilog,Digital-Circuit-Design,40285,0,2024-02-25 13:26:12+00:00,[],None
522,https://github.com/dakshinatharindu/uvm-switch-test.git,2023-04-21 09:06:42+00:00,An UVM based test for a simple switch,0,dakshinatharindu/uvm-switch-test,630837292,SystemVerilog,uvm-switch-test,758,0,2023-04-21 09:21:47+00:00,[],None
523,https://github.com/zaazad/VCS.git,2023-04-25 16:26:29+00:00,,0,zaazad/VCS,632548433,SystemVerilog,VCS,2,0,2023-04-25 16:48:19+00:00,[],None
524,https://github.com/Ivy-End/SPI-Slave.git,2023-04-24 13:47:35+00:00,SPI Slave Module Verificated by UVM,0,Ivy-End/SPI-Slave,631995112,SystemVerilog,SPI-Slave,71267,0,2023-04-24 15:27:22+00:00,[],https://api.github.com/licenses/gpl-3.0
525,https://github.com/ZhengYuhe/18224-tapeout-template-copy.git,2023-04-28 00:43:58+00:00,Copy of the build template provided as part of CMU 18224 tapeout project,0,ZhengYuhe/18224-tapeout-template-copy,633640210,SystemVerilog,18224-tapeout-template-copy,688,0,2023-05-06 02:02:18+00:00,[],https://api.github.com/licenses/apache-2.0
526,https://github.com/Suanronglajiaojiang/FPGA-VGA-display-with-11x8-dot-matrix-font.git,2023-04-28 16:18:02+00:00,A verilog project to drive a 480p VGA displayer,0,Suanronglajiaojiang/FPGA-VGA-display-with-11x8-dot-matrix-font,633938788,SystemVerilog,FPGA-VGA-display-with-11x8-dot-matrix-font,81,0,2023-04-28 16:22:02+00:00,[],None
527,https://github.com/johnstef99/docker-questa.git,2023-05-13 16:02:55+00:00,This is a template project for compiling and simulating modules written in System Verilog using the Questa Intel,0,johnstef99/docker-questa,640295222,SystemVerilog,docker-questa,5,0,2023-05-13 16:03:44+00:00,[],None
528,https://github.com/hypnotic2402/cv32e40p_verification.git,2023-05-12 10:37:49+00:00,,1,hypnotic2402/cv32e40p_verification,639836709,SystemVerilog,cv32e40p_verification,3306,0,2023-05-12 10:46:29+00:00,[],None
529,https://github.com/Jetoson/Automated_Juice_Seller.git,2023-04-20 05:15:49+00:00,,0,Jetoson/Automated_Juice_Seller,630304307,SystemVerilog,Automated_Juice_Seller,6,0,2023-04-20 05:20:11+00:00,[],None
530,https://github.com/GaalElbaz/deNovoAccelerator.git,2023-05-18 17:07:29+00:00,A design of a hardware accelerator of the 1st part of de-novo assembly workflow.,0,GaalElbaz/deNovoAccelerator,642483325,SystemVerilog,deNovoAccelerator,17092,0,2023-05-19 16:14:36+00:00,[],None
531,https://github.com/mariastt/ADC_7928.git,2023-05-18 16:53:40+00:00,Модуль для проверки АЦП на контрольно-поверочной аппаратуре,0,mariastt/ADC_7928,642478515,SystemVerilog,ADC_7928,4,0,2023-05-18 16:57:43+00:00,[],None
532,https://github.com/jfarr00/System-on-a-Chip-with-Processing-Unit.git,2023-05-23 05:21:34+00:00,A system designed to perform matrix and integer calculations and then storing the data across multiple modules. ,0,jfarr00/System-on-a-Chip-with-Processing-Unit,644233872,SystemVerilog,System-on-a-Chip-with-Processing-Unit,316,0,2023-05-23 05:23:00+00:00,[],None
533,https://github.com/0TulipRose0/DAC.git,2023-05-03 20:38:01+00:00,Digital to analog converter,0,0TulipRose0/DAC,635960540,SystemVerilog,DAC,481,0,2023-05-03 20:51:29+00:00,[],None
534,https://github.com/Divzzzzz23/sample.git,2023-04-30 10:06:08+00:00,test,0,Divzzzzz23/sample,634494684,SystemVerilog,sample,1,0,2023-04-30 10:27:24+00:00,[],None
535,https://github.com/JuanMMonteros/SystemVerilog.git,2023-04-29 21:14:03+00:00,,0,JuanMMonteros/SystemVerilog,634356248,SystemVerilog,SystemVerilog,63,0,2023-05-01 01:07:21+00:00,[],None
536,https://github.com/Bhoomi-sravanthi/D01_Half-Subtractor.git,2023-05-08 05:25:08+00:00,,0,Bhoomi-sravanthi/D01_Half-Subtractor,637641527,SystemVerilog,D01_Half-Subtractor,3,0,2023-08-29 17:14:11+00:00,[],None
537,https://github.com/ShashankC27/termproject.git,2023-05-16 06:52:55+00:00,,0,ShashankC27/termproject,641285368,SystemVerilog,termproject,112,0,2023-05-16 06:53:24+00:00,[],None
538,https://github.com/franciscodantas/LOAC.git,2023-05-16 13:36:13+00:00,,0,franciscodantas/LOAC,641445202,SystemVerilog,LOAC,363,0,2023-05-16 13:43:30+00:00,[],None
539,https://github.com/kele14x/kv32.git,2023-05-28 14:32:13+00:00,A toy RISC-V processer core,0,kele14x/kv32,646479086,SystemVerilog,kv32,74,0,2023-05-28 14:35:28+00:00,[],None
540,https://github.com/akshay7895/System_verilog.git,2023-05-28 13:36:41+00:00,,0,akshay7895/System_verilog,646463331,SystemVerilog,System_verilog,56,0,2023-05-28 13:40:48+00:00,[],None
541,https://github.com/GomyX/pipline-processor-.git,2023-05-24 13:51:14+00:00,pipeline processor using system Verilog on model sim,0,GomyX/pipline-processor-,644905044,SystemVerilog,pipline-processor-,2119,0,2023-05-24 13:55:19+00:00,[],None
542,https://github.com/sumandeb003/Ariane_Trojans_for_Pyverilog.git,2023-05-26 12:50:51+00:00,,0,sumandeb003/Ariane_Trojans_for_Pyverilog,645791762,SystemVerilog,Ariane_Trojans_for_Pyverilog,979,0,2023-08-19 08:45:54+00:00,[],None
543,https://github.com/MoonLoone/ladder_counter.git,2023-05-30 07:35:36+00:00,,0,MoonLoone/ladder_counter,647162192,SystemVerilog,ladder_counter,827,0,2023-05-30 07:37:03+00:00,[],None
544,https://github.com/saballl/ALU.git,2023-06-17 17:48:51+00:00,Simple ALU design in Verilog,0,saballl/ALU,655043388,SystemVerilog,ALU,3,0,2023-06-17 18:50:19+00:00,[],None
545,https://github.com/zkabyken/Basic-SystemVerilog-Processor.git,2023-06-17 20:17:38+00:00,,0,zkabyken/Basic-SystemVerilog-Processor,655077795,SystemVerilog,Basic-SystemVerilog-Processor,28,0,2023-06-17 20:19:02+00:00,[],None
546,https://github.com/abraaovalentim/LOAC.git,2023-05-31 20:43:57+00:00,,0,abraaovalentim/LOAC,647929612,SystemVerilog,LOAC,1,0,2023-05-31 20:46:07+00:00,[],None
547,https://github.com/GiantDwarfRen/CSE140L_lab4.git,2023-06-05 16:35:37+00:00,,0,GiantDwarfRen/CSE140L_lab4,649791181,SystemVerilog,CSE140L_lab4,6,0,2023-06-05 16:36:58+00:00,[],None
548,https://github.com/AmirEfi/Decoder3x8-in-SystemVerilog.git,2023-06-07 10:13:47+00:00,Decoder3x8 Structurally in SystemVerilog,0,AmirEfi/Decoder3x8-in-SystemVerilog,650555825,SystemVerilog,Decoder3x8-in-SystemVerilog,3,0,2023-06-07 10:17:56+00:00,[],None
549,https://github.com/divastor/swerv-workspace.git,2023-06-12 02:04:17+00:00,,0,divastor/swerv-workspace,652400904,SystemVerilog,swerv-workspace,30,0,2023-06-12 02:06:22+00:00,[],None
550,https://github.com/STARS-Design-Track-2023/Absentees.git,2023-06-20 21:04:21+00:00,stopwatch & timer,1,STARS-Design-Track-2023/Absentees,656384599,SystemVerilog,Absentees,70,0,2023-06-30 00:38:51+00:00,[],
551,https://github.com/vicg42/pyuvm-test.git,2023-06-23 13:23:02+00:00,,0,vicg42/pyuvm-test,657626214,SystemVerilog,pyuvm-test,55,0,2023-06-23 17:28:36+00:00,[],None
552,https://github.com/aglucier/soc.git,2023-06-04 14:14:39+00:00,,0,aglucier/soc,649329983,SystemVerilog,soc,76,0,2023-06-04 14:17:18+00:00,[],None
553,https://github.com/pp-cyril/Verification-of-Synchronous-FIFO-Buffer.git,2023-06-04 09:33:55+00:00,Simple verification of a FIFO Buffer  ,0,pp-cyril/Verification-of-Synchronous-FIFO-Buffer,649255595,SystemVerilog,Verification-of-Synchronous-FIFO-Buffer,6,0,2023-06-04 09:49:40+00:00,[],None
554,https://github.com/Aman-Pani/SYSTEM-VERILOG.git,2023-05-30 06:59:05+00:00,,0,Aman-Pani/SYSTEM-VERILOG,647149105,SystemVerilog,SYSTEM-VERILOG,99,0,2023-08-03 05:31:42+00:00,[],None
555,https://github.com/jayfurz/ece-526-final-fft-project.git,2023-05-18 04:42:21+00:00,Radix-2 Implementation of FFT (8-Point),0,jayfurz/ece-526-final-fft-project,642218015,SystemVerilog,ece-526-final-fft-project,105,0,2023-05-18 04:43:45+00:00,[],None
556,https://github.com/ykc2428233/EE165.git,2023-05-29 16:24:48+00:00,,0,ykc2428233/EE165,646915750,SystemVerilog,EE165,368567,0,2023-05-29 16:28:48+00:00,[],None
557,https://github.com/akshx-at/ECE-385-Final-Project---Battle-City.git,2023-05-31 06:56:58+00:00,This project was created as a final project for my Digital Systems class at UIUC. Me and partner built a multiplayer game on a FPGA called Battle City   The game drew inspiration from the original game of Battle tank 1990.,0,akshx-at/ECE-385-Final-Project---Battle-City,647616283,SystemVerilog,ECE-385-Final-Project---Battle-City,1983,0,2023-05-31 08:12:22+00:00,[],None
558,https://github.com/Bouer/Unidad_Procesadora_SV_QuartusII.git,2023-06-05 12:45:37+00:00,,0,Bouer/Unidad_Procesadora_SV_QuartusII,649696721,SystemVerilog,Unidad_Procesadora_SV_QuartusII,8867,0,2023-06-05 12:49:54+00:00,[],https://api.github.com/licenses/gpl-3.0
559,https://github.com/jchanDev/ECE152aLab4.git,2023-06-01 03:37:22+00:00,,0,jchanDev/ECE152aLab4,648025368,SystemVerilog,ECE152aLab4,15,0,2023-06-01 03:38:31+00:00,[],None
560,https://github.com/MrDoomsday/scfifo.git,2023-06-12 17:59:54+00:00,,0,MrDoomsday/scfifo,652747135,SystemVerilog,scfifo,5,0,2023-06-12 19:36:12+00:00,[],None
561,https://github.com/nmang2002/Flappy-Bird-DE1SoC.git,2023-06-11 07:12:11+00:00,,0,nmang2002/Flappy-Bird-DE1SoC,652127732,SystemVerilog,Flappy-Bird-DE1SoC,52,0,2023-06-11 07:18:05+00:00,[],None
562,https://github.com/ItteRevanth/System_Verilog_Verification_Models.git,2023-06-17 13:01:40+00:00,,0,ItteRevanth/System_Verilog_Verification_Models,654958956,SystemVerilog,System_Verilog_Verification_Models,13,0,2023-06-17 13:07:12+00:00,[],None
563,https://github.com/ChiragAumraj/System-Verilog-Dual-port-ram.git,2023-06-21 05:27:05+00:00,,0,ChiragAumraj/System-Verilog-Dual-port-ram,656514341,SystemVerilog,System-Verilog-Dual-port-ram,4,0,2023-06-21 05:29:21+00:00,[],None
564,https://github.com/Heaton15/udemy-uvm.git,2023-06-23 14:14:51+00:00,SystemVerilog UVM Training,0,Heaton15/udemy-uvm,657647446,SystemVerilog,udemy-uvm,647,0,2023-06-29 13:29:42+00:00,[],None
565,https://github.com/Jetoson/Verilog_Case_Explainer.git,2023-04-20 04:57:37+00:00,Explains the case statment in Verilog,0,Jetoson/Verilog_Case_Explainer,630299535,SystemVerilog,Verilog_Case_Explainer,3,0,2023-04-20 04:59:51+00:00,[],None
566,https://github.com/18016336995/final-project---full-version.git,2023-04-23 05:59:04+00:00,,0,18016336995/final-project---full-version,631472520,SystemVerilog,final-project---full-version,124,0,2023-04-30 22:02:18+00:00,[],None
567,https://github.com/GalGranot/BilliardGameLab1A.git,2023-05-06 05:46:34+00:00,,0,GalGranot/BilliardGameLab1A,636971074,SystemVerilog,BilliardGameLab1A,53543,0,2023-05-06 20:39:18+00:00,[],None
568,https://github.com/Domandrenog/Digital_Taltech_Code_with_Assertions.git,2023-05-05 10:57:48+00:00,,0,Domandrenog/Digital_Taltech_Code_with_Assertions,636660216,SystemVerilog,Digital_Taltech_Code_with_Assertions,20,0,2023-05-05 11:00:25+00:00,[],None
569,https://github.com/ekassos/cs141-project.git,2023-04-24 01:37:41+00:00,,0,ekassos/cs141-project,631755507,SystemVerilog,cs141-project,5319,0,2023-04-24 01:38:41+00:00,[],None
570,https://github.com/danielcarrascoza/CSE140L.git,2023-04-27 02:43:29+00:00,,0,danielcarrascoza/CSE140L,633211764,SystemVerilog,CSE140L,20,0,2023-05-01 01:48:08+00:00,[],None
571,https://github.com/nisssal/uvml.git,2023-05-11 18:06:04+00:00,SystemVerilog Test Framework ,1,nisssal/uvml,639562314,SystemVerilog,uvml,76,0,2023-05-11 18:15:08+00:00,[],
572,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-ridwan-fan-club.git,2023-05-09 22:20:18+00:00,ece-251-spring-2023-final-project-ridwan-fan-club created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-ridwan-fan-club,638687598,SystemVerilog,ece-251-spring-2023-final-project-ridwan-fan-club,42,0,2023-05-15 22:00:03+00:00,[],https://api.github.com/licenses/mit
573,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-mr-chips.git,2023-05-09 22:19:08+00:00,ece-251-spring-2023-final-project-mr-chips created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-mr-chips,638687331,SystemVerilog,ece-251-spring-2023-final-project-mr-chips,1672,0,2023-05-09 22:19:17+00:00,[],https://api.github.com/licenses/mit
574,https://github.com/cu-cai-2001/RISC-V_Verilog.git,2023-05-12 16:05:11+00:00,code verilog for risc_v,1,cu-cai-2001/RISC-V_Verilog,639956913,SystemVerilog,RISC-V_Verilog,4073,0,2023-05-12 16:13:20+00:00,[],None
575,https://github.com/Miyaatsumo/Synthesisable_Asynchronous_FIFO.git,2023-04-17 09:11:42+00:00,,1,Miyaatsumo/Synthesisable_Asynchronous_FIFO,628927034,SystemVerilog,Synthesisable_Asynchronous_FIFO,1,0,2023-04-17 09:12:39+00:00,[],None
576,https://github.com/AlexanderKick/Rhythm-Audio-FPGA-Project.git,2023-05-20 16:54:25+00:00,Developed a rhythm project with the MAX10 FPGA device using System Verilog and C in Intel’s Quartus Prime and ModelSim,0,AlexanderKick/Rhythm-Audio-FPGA-Project,643279773,SystemVerilog,Rhythm-Audio-FPGA-Project,404,0,2023-10-31 23:24:23+00:00,[],None
577,https://github.com/maktheus/black_jack_varilog.git,2023-05-25 02:27:36+00:00,AGR VAIIIIII,0,maktheus/black_jack_varilog,645139099,SystemVerilog,black_jack_varilog,4,0,2023-05-25 02:27:56+00:00,[],None
578,https://github.com/zahrahojati19/Latches-and-FlipFlops.git,2023-05-26 11:39:34+00:00,,0,zahrahojati19/Latches-and-FlipFlops,645765461,SystemVerilog,Latches-and-FlipFlops,13,0,2023-05-26 11:40:46+00:00,[],None
579,https://github.com/devanshi-jain/heading_robosub.git,2023-06-03 23:40:38+00:00,,0,devanshi-jain/heading_robosub,649146290,SystemVerilog,heading_robosub,8,0,2023-06-04 01:04:11+00:00,[],None
580,https://github.com/Nagarjun444/leap-yearconstraint.git,2023-06-04 09:32:01+00:00,leap year printing using constraints in system verilog,0,Nagarjun444/leap-yearconstraint,649255101,SystemVerilog,leap-yearconstraint,1,0,2023-06-04 09:32:48+00:00,[],None
581,https://github.com/varshach26/SHA256-Algorithm.git,2023-06-23 06:02:13+00:00,Implementation of SHA256 Algorithm using System Verilog,0,varshach26/SHA256-Algorithm,657466512,SystemVerilog,SHA256-Algorithm,54,0,2023-06-23 06:03:48+00:00,[],None
582,https://github.com/sarinasabouri1/prosthetics_hdc.git,2023-06-19 20:28:51+00:00,,0,sarinasabouri1/prosthetics_hdc,655888903,SystemVerilog,prosthetics_hdc,52,0,2023-06-19 20:59:01+00:00,[],None
583,https://github.com/SamehM20/SBqM.git,2023-05-19 12:08:02+00:00,Safe Bank Queue Manager,0,SamehM20/SBqM,642815347,SystemVerilog,SBqM,10,0,2023-05-19 12:16:39+00:00,[],https://api.github.com/licenses/apache-2.0
584,https://github.com/Alden0012/OptimisedOnlineModules.git,2023-06-19 22:52:01+00:00,,0,Alden0012/OptimisedOnlineModules,655922925,SystemVerilog,OptimisedOnlineModules,246,0,2023-06-20 14:05:21+00:00,[],None
585,https://github.com/Giorgi-Solo/MasterThesis.git,2023-06-19 16:58:24+00:00,,0,Giorgi-Solo/MasterThesis,655817933,SystemVerilog,MasterThesis,14070,0,2023-06-22 10:25:31+00:00,[],None
586,https://github.com/Lathika-Wathsara/FPGA_Training.git,2023-06-06 18:16:51+00:00,,0,Lathika-Wathsara/FPGA_Training,650277685,SystemVerilog,FPGA_Training,49377,0,2023-06-29 18:29:50+00:00,[],None
587,https://github.com/nbannur2/MIPS.git,2023-06-07 01:55:38+00:00,,0,nbannur2/MIPS,650399594,SystemVerilog,MIPS,1188,0,2024-02-26 00:39:54+00:00,[],None
588,https://github.com/a-gafiyatullin/digital-design.git,2023-04-16 18:37:59+00:00,🖥️ Digital Design and Computer Architecture,0,a-gafiyatullin/digital-design,628696874,SystemVerilog,digital-design,909,0,2024-03-02 09:00:58+00:00,"['computer-architecture', 'digital-design', 'digital-design-and-computer-organization', 'system-verilog', 'verilog']",https://api.github.com/licenses/mit
589,https://github.com/Eloquencere/Custom-Keyboard.git,2023-06-15 06:21:31+00:00,,0,Eloquencere/Custom-Keyboard,653975098,SystemVerilog,Custom-Keyboard,332,0,2023-10-25 16:06:36+00:00,[],None
590,https://github.com/AzimSofi/Verilog_16bitCLA.git,2023-06-15 16:16:45+00:00,,0,AzimSofi/Verilog_16bitCLA,654214450,SystemVerilog,Verilog_16bitCLA,15,0,2023-06-15 16:19:08+00:00,[],None
591,https://github.com/aryanindarapu/ece385_summer23.git,2023-06-20 02:38:59+00:00,,0,aryanindarapu/ece385_summer23,655974899,SystemVerilog,ece385_summer23,28170,0,2023-06-20 03:24:38+00:00,[],None
592,https://github.com/Jacario777/Big-2_ASIC.git,2023-05-18 00:34:30+00:00,An ASIC that can play the popular card game Big-2. ,0,Jacario777/Big-2_ASIC,642158639,SystemVerilog,Big-2_ASIC,15276,0,2023-05-18 00:48:18+00:00,[],None
593,https://github.com/Jetoson/32-bit_Ripple_CarryAdder.git,2023-05-28 21:20:03+00:00,,0,Jetoson/32-bit_Ripple_CarryAdder,646584905,SystemVerilog,32-bit_Ripple_CarryAdder,5,0,2023-05-29 08:42:09+00:00,[],None
594,https://github.com/skshamshi/I2C_design_and_verification.git,2023-05-23 04:57:44+00:00,,0,skshamshi/I2C_design_and_verification,644227493,SystemVerilog,I2C_design_and_verification,1014,0,2023-05-30 22:57:29+00:00,[],None
595,https://github.com/dannym49/Calpoly-CPE233.git,2023-05-25 19:29:57+00:00,OTTER MCU,0,dannym49/Calpoly-CPE233,645494254,SystemVerilog,Calpoly-CPE233,28,0,2023-05-25 19:33:25+00:00,[],None
596,https://github.com/Fazail333/CEP_lab.git,2023-05-31 09:25:11+00:00,,0,Fazail333/CEP_lab,647671841,SystemVerilog,CEP_lab,3,0,2023-05-31 09:26:21+00:00,[],None
597,https://github.com/nmang2002/Pipelined-Processor.git,2023-06-11 07:50:37+00:00,,0,nmang2002/Pipelined-Processor,652136321,SystemVerilog,Pipelined-Processor,18,0,2023-06-11 07:51:18+00:00,[],None
598,https://github.com/Shajol9/timer_design.git,2023-05-20 08:01:42+00:00,"counter and frequency dividers are basic building block for timers. Design of a positive edge triggered flipflop can be found in this repository. Design of a 17 bit ripple counter, 4 bit ripple counter and 4 bit gray counter and there testbench is also written in system verilog.   ",0,Shajol9/timer_design,643137300,SystemVerilog,timer_design,3728,0,2023-05-24 11:11:36+00:00,[],None
599,https://github.com/ayush2350/Synchronous-FIFO-Verification-using-SystemVerilog.git,2023-06-02 04:24:56+00:00,,0,ayush2350/Synchronous-FIFO-Verification-using-SystemVerilog,648479938,SystemVerilog,Synchronous-FIFO-Verification-using-SystemVerilog,19,0,2023-06-02 04:25:42+00:00,[],https://api.github.com/licenses/gpl-3.0
600,https://github.com/gary600/bfchip-tapeout.git,2023-04-28 22:41:59+00:00,,0,gary600/bfchip-tapeout,634048111,SystemVerilog,bfchip-tapeout,34,0,2023-05-26 18:55:56+00:00,[],https://api.github.com/licenses/apache-2.0
601,https://github.com/rafiqul-rafi/-Design-and-Simulation-of-a-32-bit-RISC-V-Core-and-APB.git,2023-05-06 04:31:13+00:00,,0,rafiqul-rafi/-Design-and-Simulation-of-a-32-bit-RISC-V-Core-and-APB,636956057,SystemVerilog,-Design-and-Simulation-of-a-32-bit-RISC-V-Core-and-APB,3398,0,2023-05-06 04:31:25+00:00,[],None
602,https://github.com/PrashantPanchal20/Adder_TB_UVM.git,2023-05-09 07:14:27+00:00,,0,PrashantPanchal20/Adder_TB_UVM,638144307,SystemVerilog,Adder_TB_UVM,16,0,2023-06-04 18:28:28+00:00,[],None
603,https://github.com/xinyew/CMU_courses_18341_labs_F22.git,2023-04-20 03:40:41+00:00,,0,xinyew/CMU_courses_18341_labs_F22,630280824,SystemVerilog,CMU_courses_18341_labs_F22,1457,0,2023-04-20 03:41:27+00:00,[],None
604,https://github.com/chesskiss/SysVerilog_game_DonkeyKong.git,2023-04-16 09:49:28+00:00,"Here you'll find the game ""Donkey Kong"" written 100% in SysVerilog. You'll need an FPGA card, a screen, a keyboard, and audio devices for the full functionality.",0,chesskiss/SysVerilog_game_DonkeyKong,628548740,SystemVerilog,SysVerilog_game_DonkeyKong,42877,0,2023-04-18 14:05:34+00:00,"['fpga-programming', 'systemverilog']",None
605,https://github.com/ryan-gits/fpga-axil.git,2023-04-28 18:09:58+00:00,AXI Lite interface,0,ryan-gits/fpga-axil,633977349,SystemVerilog,fpga-axil,15,0,2023-05-01 19:00:17+00:00,[],https://api.github.com/licenses/gpl-3.0
606,https://github.com/Reammaer/books.git,2023-05-06 17:42:19+00:00,,0,Reammaer/books,637161992,SystemVerilog,books,521813,0,2023-06-13 19:21:09+00:00,[],None
607,https://github.com/bushbecky/AES-Processor.git,2023-05-08 20:59:32+00:00,,0,bushbecky/AES-Processor,637988128,SystemVerilog,AES-Processor,19214,0,2023-05-08 21:00:06+00:00,[],https://api.github.com/licenses/mit
608,https://github.com/rbride/System-Verilog-Modules.git,2023-05-21 21:42:43+00:00,A collection of various hardware designs and test benches from various projects. ,0,rbride/System-Verilog-Modules,643664901,SystemVerilog,System-Verilog-Modules,63,0,2023-08-05 16:51:24+00:00,[],None
609,https://github.com/GhanayemMuh/Fusball-Game-on-FPGA.git,2023-05-01 16:53:06+00:00,,0,GhanayemMuh/Fusball-Game-on-FPGA,634964708,SystemVerilog,Fusball-Game-on-FPGA,1009,0,2024-02-20 14:16:23+00:00,[],None
610,https://github.com/tngPhVN/MiniMA-computer-architecture.git,2023-05-01 03:09:52+00:00,,0,tngPhVN/MiniMA-computer-architecture,634730226,SystemVerilog,MiniMA-computer-architecture,2778,0,2023-10-05 16:53:40+00:00,[],None
611,https://github.com/tms4517/Yosys_to_aid_with_RTL_design.git,2023-05-29 10:08:56+00:00,,1,tms4517/Yosys_to_aid_with_RTL_design,646775515,SystemVerilog,Yosys_to_aid_with_RTL_design,29,0,2023-07-08 12:13:23+00:00,[],None
612,https://github.com/varunven/CSE271.git,2023-05-09 19:30:55+00:00,Digital Circuits Intro to Verilog Projects,0,varunven/CSE271,638640082,SystemVerilog,CSE271,20,0,2023-05-09 19:36:45+00:00,[],None
613,https://github.com/apatnana/uvm_practice.git,2023-05-09 07:17:20+00:00,,0,apatnana/uvm_practice,638145413,SystemVerilog,uvm_practice,1,0,2023-05-09 07:23:18+00:00,[],None
614,https://github.com/bushbecky/Digital-Design.git,2023-05-08 21:01:47+00:00,,0,bushbecky/Digital-Design,637988809,SystemVerilog,Digital-Design,42,0,2023-05-08 21:02:10+00:00,[],None
615,https://github.com/calebabutler/verilog-pi-calculator.git,2023-05-08 14:59:18+00:00,A Verilog pi calculator capable of calculating a million digits.,0,calebabutler/verilog-pi-calculator,637858286,SystemVerilog,verilog-pi-calculator,1051,0,2023-05-08 15:15:19+00:00,[],https://api.github.com/licenses/mit
616,https://github.com/ShadyCookies/Cache-Controllers.git,2023-05-10 15:08:57+00:00,Implementation of various cache controller architectures. ,0,ShadyCookies/Cache-Controllers,639011163,SystemVerilog,Cache-Controllers,22,0,2023-05-18 07:06:54+00:00,[],https://api.github.com/licenses/mit
617,https://github.com/SagarSorathiya2002/UART_DESIGN.git,2023-06-17 19:54:41+00:00,RTL Design of UART using Verilog HDL and Verification using System Verilog,0,SagarSorathiya2002/UART_DESIGN,655073022,SystemVerilog,UART_DESIGN,174,0,2023-06-17 19:56:36+00:00,[],None
618,https://github.com/vbnqwe/Poorly-made-Processor.git,2023-05-25 22:33:34+00:00,"An attempt at making a pipelined, superscalar Risc V processor. An attempt at out of order instruction execution as well.",0,vbnqwe/Poorly-made-Processor,645543105,SystemVerilog,Poorly-made-Processor,22161,0,2023-07-19 10:15:19+00:00,[],https://api.github.com/licenses/mit
619,https://github.com/yashwant4756/System_Verilog.git,2023-06-14 13:06:27+00:00,,0,yashwant4756/System_Verilog,653649379,SystemVerilog,System_Verilog,56,0,2023-06-14 16:23:28+00:00,[],https://api.github.com/licenses/mit
620,https://github.com/grakseasy/UVM_projects.git,2023-06-08 07:56:14+00:00,,0,grakseasy/UVM_projects,650971052,SystemVerilog,UVM_projects,272,0,2023-06-08 10:17:21+00:00,[],None
621,https://github.com/pp-cyril/Verification-of-AHB-Memory.git,2023-06-14 10:54:48+00:00,AMBA AHB bus protocol verification,0,pp-cyril/Verification-of-AHB-Memory,653593857,SystemVerilog,Verification-of-AHB-Memory,8,0,2023-06-14 10:55:22+00:00,[],None
622,https://github.com/Paradicat/demo.git,2023-06-15 12:59:51+00:00,this is demo,0,Paradicat/demo,654131289,SystemVerilog,demo,3,0,2023-07-27 07:34:10+00:00,[],None
623,https://github.com/alonso59/uvm_project.git,2023-06-21 17:33:14+00:00,,0,alonso59/uvm_project,656811992,SystemVerilog,uvm_project,10793,0,2023-06-22 18:03:03+00:00,[],None
624,https://github.com/HAMZA-AFZAL404/ahb3lite_memory.git,2023-06-21 06:36:09+00:00,The Roa Logic AHB-Lite Memory IP,0,HAMZA-AFZAL404/ahb3lite_memory,656536883,SystemVerilog,ahb3lite_memory,1206,0,2023-06-21 06:39:02+00:00,[],
625,https://github.com/Temix707/Interfaces.git,2023-06-17 20:14:05+00:00,RTL interface design,0,Temix707/Interfaces,655077023,SystemVerilog,Interfaces,7854,0,2023-11-09 17:34:22+00:00,[],None
626,https://github.com/subramaniantr/SPI.git,2023-06-18 02:47:00+00:00,,0,subramaniantr/SPI,655140764,SystemVerilog,SPI,4,0,2023-06-24 13:29:44+00:00,[],None
627,https://github.com/riscvfsoc/chipignite_2304_soc.git,2023-04-29 04:44:02+00:00,RISC-V Based Quad Core GPIO Station,0,riscvfsoc/chipignite_2304_soc,634110512,SystemVerilog,chipignite_2304_soc,733845,0,2023-04-29 04:51:27+00:00,[],https://api.github.com/licenses/apache-2.0
628,https://github.com/Thomas-J-Kidd/CompArchExtraCredit.git,2023-05-02 00:10:23+00:00,,0,Thomas-J-Kidd/CompArchExtraCredit,635089144,SystemVerilog,CompArchExtraCredit,2266,0,2023-05-02 00:12:48+00:00,[],None
629,https://github.com/abejgonzalez/vitis-help.git,2023-05-02 18:38:32+00:00,,0,abejgonzalez/vitis-help,635460338,SystemVerilog,vitis-help,75225,0,2023-05-02 20:22:14+00:00,[],None
630,https://github.com/SiyamAcet/Design_Alu.git,2023-05-13 07:46:29+00:00,,0,SiyamAcet/Design_Alu,640166994,SystemVerilog,Design_Alu,463,0,2023-05-13 08:01:02+00:00,[],None
631,https://github.com/KobiDekel/FPGA_Projects.git,2023-05-24 14:34:17+00:00,,0,KobiDekel/FPGA_Projects,644924270,SystemVerilog,FPGA_Projects,2016,0,2023-05-25 09:25:38+00:00,[],None
632,https://github.com/Guillen00/lguillen2_computer-architecture_1_2023.git,2023-04-17 02:04:23+00:00,,0,Guillen00/lguillen2_computer-architecture_1_2023,628795882,SystemVerilog,lguillen2_computer-architecture_1_2023,539173,0,2023-10-13 03:34:19+00:00,[],None
633,https://github.com/CreeKee/RISCV_Otter.git,2023-04-21 05:10:26+00:00,Microcontroller unit implementing the Risc-V ISA,0,CreeKee/RISCV_Otter,630761099,SystemVerilog,RISCV_Otter,28,0,2023-04-21 05:11:12+00:00,[],None
634,https://github.com/lj06872/Pipelined-Processor.git,2023-04-25 15:54:50+00:00,,2,lj06872/Pipelined-Processor,632535125,SystemVerilog,Pipelined-Processor,50,0,2023-05-20 16:11:21+00:00,[],None
635,https://github.com/sxwkl2/shiny-engine.git,2023-04-28 08:44:35+00:00,,0,sxwkl2/shiny-engine,633773717,SystemVerilog,shiny-engine,327,0,2023-04-28 08:45:50+00:00,[],None
636,https://github.com/AniketShukla14/UVM_Architecture.git,2023-05-30 03:58:49+00:00,,0,AniketShukla14/UVM_Architecture,647098031,SystemVerilog,UVM_Architecture,6,0,2023-05-30 04:45:35+00:00,[],None
637,https://github.com/lenguyen8888/Engr85.git,2023-05-27 19:47:09+00:00,,0,lenguyen8888/Engr85,646257851,SystemVerilog,Engr85,40433,0,2023-05-27 19:53:58+00:00,[],None
638,https://github.com/Salma-Yassin/Implementation_of_ARM_Single_Cycle_Processor_Control_Unit.git,2023-05-25 18:27:46+00:00,,0,Salma-Yassin/Implementation_of_ARM_Single_Cycle_Processor_Control_Unit,645473815,SystemVerilog,Implementation_of_ARM_Single_Cycle_Processor_Control_Unit,5,0,2023-05-25 18:29:53+00:00,[],None
639,https://github.com/PRAGATI-0102/Mux_2to1-using-SV-Day-054-.git,2023-06-02 15:07:10+00:00,A multiplexer is a digital circuit that selects one of two input signals based on a select signal and routes it to the output.,0,PRAGATI-0102/Mux_2to1-using-SV-Day-054-,648691923,SystemVerilog,Mux_2to1-using-SV-Day-054-,86,0,2023-06-02 15:09:46+00:00,[],None
640,https://github.com/Raymond0429/risc-v5sp.git,2023-06-12 08:32:30+00:00,Project of the risc-v course of Xidian University,0,Raymond0429/risc-v5sp,652518861,SystemVerilog,risc-v5sp,1052,0,2023-06-12 13:57:48+00:00,[],None
641,https://github.com/eceboy/uvm_projects.git,2023-06-13 02:19:28+00:00,Just me being a funny little learning boy,0,eceboy/uvm_projects,652891748,SystemVerilog,uvm_projects,10,0,2023-06-13 02:20:34+00:00,[],None
642,https://github.com/MayaBrito/codesSystemVerilog.git,2023-05-09 14:16:36+00:00,,0,MayaBrito/codesSystemVerilog,638515619,SystemVerilog,codesSystemVerilog,728,0,2024-01-06 14:39:00+00:00,[],None
643,https://github.com/CSCE689-SP23/lab3.git,2023-04-19 00:16:05+00:00,,0,CSCE689-SP23/lab3,629746187,SystemVerilog,lab3,166,0,2024-01-08 15:52:08+00:00,[],None
644,https://github.com/RPTU-EIS/fault-attack-monitors.git,2023-05-24 09:31:47+00:00,,0,RPTU-EIS/fault-attack-monitors,644800629,SystemVerilog,fault-attack-monitors,5,0,2023-05-24 12:29:38+00:00,[],None
645,https://github.com/abbmir/alu_usecoemu.proj.git,2023-05-15 04:16:31+00:00,,0,abbmir/alu_usecoemu.proj,640758526,SystemVerilog,alu_usecoemu.proj,72,0,2023-10-08 05:58:03+00:00,[],None
646,https://github.com/shahpankti2302/ProjectFinal.git,2023-05-16 23:52:38+00:00,,0,shahpankti2302/ProjectFinal,641673607,SystemVerilog,ProjectFinal,10,0,2023-05-16 23:54:36+00:00,[],None
647,https://github.com/pogoreli/HealthMonitorFinal.git,2023-05-16 20:12:10+00:00,,0,pogoreli/HealthMonitorFinal,641599113,SystemVerilog,HealthMonitorFinal,69,0,2023-05-16 20:57:19+00:00,[],https://api.github.com/licenses/mit
648,https://github.com/ShayanNadeem08/UART-Transmitter-with-Controller.git,2023-06-02 19:06:59+00:00,A repository containing Verilog implementations of a UVART Transmitter module and a Controller module for serial data transmission using a UART protocol.,0,ShayanNadeem08/UART-Transmitter-with-Controller,648768721,SystemVerilog,UART-Transmitter-with-Controller,9,0,2023-06-02 19:34:42+00:00,[],None
649,https://github.com/jiaowenlong/RRArbiter.git,2023-04-22 14:02:59+00:00,循环优先级仲裁器,0,jiaowenlong/RRArbiter,631275962,SystemVerilog,RRArbiter,1,0,2023-04-22 14:03:51+00:00,[],None
650,https://github.com/zts92929/ECE_3058.git,2023-04-24 01:56:20+00:00,"Code written for ECE 3058, Lab 1 and 2 are in Assembly, Lab 3 and 4 are in C",0,zts92929/ECE_3058,631759904,SystemVerilog,ECE_3058,3940,0,2023-04-24 01:57:36+00:00,[],None
651,https://github.com/STARS-Design-Track-2023/SaSS.git,2023-06-21 12:16:25+00:00,Silicon Allowing Sound Synthesis,1,STARS-Design-Track-2023/SaSS,656677526,SystemVerilog,SaSS,2653,0,2023-06-23 17:54:46+00:00,[],None
652,https://github.com/ManosMorf97/QueuePrioritization_Verilog.git,2023-06-21 06:50:24+00:00,,0,ManosMorf97/QueuePrioritization_Verilog,656542479,SystemVerilog,QueuePrioritization_Verilog,8,0,2023-07-19 18:59:00+00:00,[],None
653,https://github.com/MrDarkhawk/System-Verilog-Dual-Port-Ram.git,2023-06-21 05:44:19+00:00,Here you get beginner level examples for system verilog,0,MrDarkhawk/System-Verilog-Dual-Port-Ram,656519310,SystemVerilog,System-Verilog-Dual-Port-Ram,3,0,2023-06-21 05:48:59+00:00,[],None
654,https://github.com/cmordi/TugofWar.git,2023-04-29 20:07:00+00:00,2 player tug of war game using an FPGA,0,cmordi/TugofWar,634341590,SystemVerilog,TugofWar,11,0,2023-04-29 20:07:46+00:00,[],None
655,https://github.com/karthik-0710/Verification-of-a-Sequential-adder-using-UVM.git,2023-05-01 04:14:35+00:00,Sequrntial adder UVM testbench environment,0,karthik-0710/Verification-of-a-Sequential-adder-using-UVM,634742843,SystemVerilog,Verification-of-a-Sequential-adder-using-UVM,4,0,2023-05-01 04:15:05+00:00,[],None
656,https://github.com/jhlee25/EE-271.git,2023-05-07 01:26:01+00:00,Digital Circuits And Systems,0,jhlee25/EE-271,637253715,SystemVerilog,EE-271,29849,0,2023-09-27 04:42:15+00:00,[],None
657,https://github.com/advancedengineering/EECS627_tapeout.git,2023-04-30 00:57:29+00:00,,0,advancedengineering/EECS627_tapeout,634392810,SystemVerilog,EECS627_tapeout,83,0,2023-04-30 01:05:35+00:00,[],None
658,https://github.com/gabizon103/riscv-filament.git,2023-04-29 17:11:46+00:00,,0,gabizon103/riscv-filament,634297374,SystemVerilog,riscv-filament,13,0,2023-05-03 06:05:04+00:00,[],None
659,https://github.com/CreeKee/CPE333_lab1.git,2023-04-20 05:57:11+00:00,,0,CreeKee/CPE333_lab1,630315465,SystemVerilog,CPE333_lab1,15,0,2023-04-20 05:58:03+00:00,[],None
660,https://github.com/MohanSardar01/Complete-Testbench-8-bit-AND-Gate.git,2023-05-17 10:33:27+00:00,Repository for System Verilog code,0,MohanSardar01/Complete-Testbench-8-bit-AND-Gate,641868636,SystemVerilog,Complete-Testbench-8-bit-AND-Gate,13,0,2023-05-17 15:50:40+00:00,[],None
661,https://github.com/Cindysu123/ECE385.git,2023-05-16 19:15:32+00:00,,0,Cindysu123/ECE385,641580254,SystemVerilog,ECE385,4079,0,2023-05-16 19:20:45+00:00,[],None
662,https://github.com/mrBitman/int2fp.git,2023-05-22 13:39:28+00:00,"Parametrizable (single/half precision) converter signed int to fp(32/16); Parametrizable (single/half precision) converter fp(32/16) to signed integer, that issues smaller or biggest converted value",0,mrBitman/int2fp,643947206,SystemVerilog,int2fp,360,0,2023-05-22 13:41:45+00:00,[],None
663,https://github.com/axyrai/adderSV.git,2023-06-14 06:52:06+00:00,,0,axyrai/adderSV,653491312,SystemVerilog,adderSV,76,0,2023-06-14 06:55:40+00:00,[],None
664,https://github.com/Anuki16/uart-fpga.git,2023-06-12 17:14:18+00:00,UART Transmitter and Receiver implementation for FPGA,0,Anuki16/uart-fpga,652729675,SystemVerilog,uart-fpga,375,0,2023-08-27 05:31:57+00:00,[],None
665,https://github.com/raymond-chii/ECE251.git,2023-06-14 03:14:24+00:00,This repository is my ECE251 project: It contains assembly and system verilog ,0,raymond-chii/ECE251,653426592,SystemVerilog,ECE251,2509,0,2023-06-14 03:21:42+00:00,[],None
666,https://github.com/HalaAbduljalil/Verification-fifthLab.git,2023-06-17 13:29:48+00:00,,0,HalaAbduljalil/Verification-fifthLab,654967061,SystemVerilog,Verification-fifthLab,366,0,2023-06-17 14:05:46+00:00,[],None
667,https://github.com/thinhgvo/sp23-cse141-project.git,2023-06-17 21:52:30+00:00,,0,thinhgvo/sp23-cse141-project,655095395,SystemVerilog,sp23-cse141-project,116,0,2023-06-18 04:32:54+00:00,[],None
668,https://github.com/Ravenwater/sabana-examples-fpga.git,2023-06-15 23:43:51+00:00,"Welcome to the Sabana Examples repository. This repo contains code examples used in the documentation. For more information, head to: https://docs.sabana.io",0,Ravenwater/sabana-examples-fpga,654345078,,sabana-examples-fpga,830,0,2023-06-15 23:43:51+00:00,[],https://api.github.com/licenses/apache-2.0
669,https://github.com/ajinkyaj238/RISC-V_Processor-.git,2023-06-07 15:14:16+00:00,Built using SystemVerilog on Vivado. Tested on Vivado through testbenches and o0n hardware via the Xilinx PYNQ FPGA,0,ajinkyaj238/RISC-V_Processor-,650678465,SystemVerilog,RISC-V_Processor-,10,0,2023-06-08 00:34:08+00:00,[],None
670,https://github.com/droodhub/ECE551.git,2023-06-08 17:00:21+00:00,ECE551 Files from Fall 2022.,0,droodhub/ECE551,651174782,SystemVerilog,ECE551,5519,0,2023-06-08 22:38:33+00:00,[],None
671,https://github.com/AmirEfi/SingleCycle-Processor-of-RISC-V-in-SystemVerilog.git,2023-06-07 10:50:50+00:00,Update the Single Cycle Processor of RISC-V to support 'auipc' and 'xor' instructions,1,AmirEfi/SingleCycle-Processor-of-RISC-V-in-SystemVerilog,650569758,SystemVerilog,SingleCycle-Processor-of-RISC-V-in-SystemVerilog,9,0,2023-06-07 11:08:29+00:00,[],None
672,https://github.com/akashsaraswatt/Projects.git,2023-06-12 12:35:57+00:00,,0,akashsaraswatt/Projects,652611763,SystemVerilog,Projects,75,0,2023-07-09 17:54:20+00:00,[],None
673,https://github.com/stevenknyazher/Vending-Machine-FPGA.git,2023-06-08 11:22:09+00:00,"Utilized the Zybo Z7-20 and 28BYJ-48 stepper motors to meticulously design and develop a sophisticated miniature snack vending machine. Developed the top module for stepper motor control in SystemVerilog, and debounce and single pulse detector to accurately detect button presses and prevent false triggers in VHDL.",0,stevenknyazher/Vending-Machine-FPGA,651045775,SystemVerilog,Vending-Machine-FPGA,5,0,2023-06-08 11:24:25+00:00,[],None
674,https://github.com/shaharfri/COURSES.git,2023-04-17 15:03:03+00:00,,0,shaharfri/COURSES,629073200,SystemVerilog,COURSES,11880,0,2023-04-17 15:51:00+00:00,[],None
675,https://github.com/pradyumna-d/verilog-codes.git,2023-05-12 14:00:19+00:00,some mini projects implementing digital system design concepts in verilog code ,0,pradyumna-d/verilog-codes,639910390,SystemVerilog,verilog-codes,16,0,2023-05-12 14:03:26+00:00,[],None
676,https://github.com/kek-sick/PRIS_2022.git,2023-05-12 11:00:31+00:00,,0,kek-sick/PRIS_2022,639844270,SystemVerilog,PRIS_2022,378254,0,2023-05-12 11:21:00+00:00,[],None
677,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-nachi.git,2023-05-09 22:19:03+00:00,ece-251-spring-2023-final-project-nachi created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-nachi,638687305,SystemVerilog,ece-251-spring-2023-final-project-nachi,2202,0,2023-05-09 22:19:10+00:00,[],https://api.github.com/licenses/mit
678,https://github.com/ArgyroP/CFI-landing-pad-shadow-stack.git,2023-06-12 16:43:39+00:00,,0,ArgyroP/CFI-landing-pad-shadow-stack,652717930,SystemVerilog,CFI-landing-pad-shadow-stack,593,0,2024-01-14 16:36:32+00:00,[],None
679,https://github.com/Collin-Lambert/HBM_HEATING.git,2023-05-31 17:36:07+00:00,A hardware design purpose built for heating up an HBM chip,0,Collin-Lambert/HBM_HEATING,647867331,SystemVerilog,HBM_HEATING,35364,0,2023-08-07 20:49:13+00:00,[],None
680,https://github.com/sampathnaveen/System-Verilog.git,2023-04-17 15:41:10+00:00,,0,sampathnaveen/System-Verilog,629089672,SystemVerilog,System-Verilog,9,0,2023-04-17 15:42:46+00:00,[],None
681,https://github.com/malikshanaah1999/toMahdee.git,2023-04-16 13:17:45+00:00,,1,malikshanaah1999/toMahdee,628602049,SystemVerilog,toMahdee,5,0,2023-04-16 13:21:49+00:00,[],None
682,https://github.com/TianfengChen/SystemVerilog_notecode.git,2023-05-12 23:36:36+00:00,,0,TianfengChen/SystemVerilog_notecode,640076449,SystemVerilog,SystemVerilog_notecode,125377,0,2023-05-22 15:47:30+00:00,[],None
683,https://github.com/GiantDwarfRen/CSE140_Lab2.git,2023-05-08 16:41:23+00:00,,0,GiantDwarfRen/CSE140_Lab2,637899352,SystemVerilog,CSE140_Lab2,393,0,2023-05-08 16:46:12+00:00,[],None
684,https://github.com/bushbecky/AI-Robotics.git,2023-05-08 21:01:28+00:00,,0,bushbecky/AI-Robotics,637988710,SystemVerilog,AI-Robotics,41,0,2023-05-08 21:01:47+00:00,[],None
685,https://github.com/bushbecky/Verilog-SystemVerilog-Guide.git,2023-05-08 20:57:49+00:00,,0,bushbecky/Verilog-SystemVerilog-Guide,637987667,SystemVerilog,Verilog-SystemVerilog-Guide,7,0,2023-05-08 20:58:03+00:00,[],None
686,https://github.com/MIET-SoCDesignChallenge/verification_hacks.git,2023-04-21 10:15:20+00:00,,0,MIET-SoCDesignChallenge/verification_hacks,630861104,SystemVerilog,verification_hacks,5,0,2023-04-21 10:15:47+00:00,[],None
687,https://github.com/adinavale/ee_287_final_project.git,2023-04-28 17:13:36+00:00,FIR filter final project,0,adinavale/ee_287_final_project,633958384,SystemVerilog,ee_287_final_project,558,0,2023-05-05 07:37:16+00:00,[],None
688,https://github.com/georgec7/Microarchitecture-SPU-Lite-Processor.git,2023-05-04 03:36:37+00:00,,0,georgec7/Microarchitecture-SPU-Lite-Processor,636061233,SystemVerilog,Microarchitecture-SPU-Lite-Processor,3811,0,2023-05-04 03:39:17+00:00,[],None
689,https://github.com/SriVemulapalli22/18624_Project_16-bit-FPU.git,2023-05-05 15:04:18+00:00,,0,SriVemulapalli22/18624_Project_16-bit-FPU,636753782,SystemVerilog,18624_Project_16-bit-FPU,874,0,2023-05-06 03:19:58+00:00,[],https://api.github.com/licenses/apache-2.0
690,https://github.com/davidlacayo12/Pitfall.git,2023-05-06 00:41:24+00:00,,0,davidlacayo12/Pitfall,636911631,SystemVerilog,Pitfall,2797,0,2023-05-07 01:51:33+00:00,[],https://api.github.com/licenses/mit
691,https://github.com/gabriela4321/aluralivros.git,2023-05-18 12:48:00+00:00,,0,gabriela4321/aluralivros,642381203,SystemVerilog,aluralivros,787,0,2023-05-24 17:17:15+00:00,[],None
692,https://github.com/dakshinatharindu/rv32i-single-cycle-uvm.git,2023-04-27 18:03:56+00:00,An UVM test for RISC-V RV32I single-cycle core usign UVM.,0,dakshinatharindu/rv32i-single-cycle-uvm,633536118,SystemVerilog,rv32i-single-cycle-uvm,20,0,2023-04-27 19:34:24+00:00,[],None
693,https://github.com/yttnn/sv_book.git,2023-04-27 08:38:38+00:00,,0,yttnn/sv_book,633317572,SystemVerilog,sv_book,14,0,2023-05-05 09:29:46+00:00,[],None
694,https://github.com/adinderosier/DE1-SOC-SDES.git,2023-04-21 23:28:21+00:00,,0,adinderosier/DE1-SOC-SDES,631096166,SystemVerilog,DE1-SOC-SDES,46,0,2023-04-22 00:17:22+00:00,[],https://api.github.com/licenses/mit
695,https://github.com/cevero/ftm.git,2023-05-15 03:14:08+00:00,Cevero's Fault Tolerance Module,0,cevero/ftm,640744423,SystemVerilog,ftm,6,0,2023-05-15 04:46:36+00:00,[],None
696,https://github.com/mohamedmorsi22/MIPS.git,2023-05-25 13:49:26+00:00,systemVerilog implementation of MIPS single cycle processor,0,mohamedmorsi22/MIPS,645367849,SystemVerilog,MIPS,7,0,2023-05-25 13:54:47+00:00,[],None
697,https://github.com/yiyanghe0/p6-microprocessor.git,2023-06-15 01:33:06+00:00,,0,yiyanghe0/p6-microprocessor,653896508,SystemVerilog,p6-microprocessor,254,0,2023-06-15 01:44:16+00:00,[],None
698,https://github.com/axyrai/ALU_sv.git,2023-06-15 05:55:52+00:00,,0,axyrai/ALU_sv,653966464,SystemVerilog,ALU_sv,56,0,2023-06-15 05:58:03+00:00,[],None
699,https://github.com/raymond-chii/nachi.git,2023-06-14 02:45:35+00:00,Me and Arav Sharma's ECE-251 final project: An 8 bit computer,0,raymond-chii/nachi,653418428,SystemVerilog,nachi,2186,0,2023-06-14 02:50:43+00:00,[],https://api.github.com/licenses/mit
700,https://github.com/z4chh/FPGA_Slot_Machine.git,2023-06-09 03:15:40+00:00,"A slot machine created in System Verilog. It was built, simulated, synthesized, and implemented in Vivado, for use on the Xilinx Basys 3 board.",0,z4chh/FPGA_Slot_Machine,651340990,SystemVerilog,FPGA_Slot_Machine,13,0,2023-06-09 03:29:39+00:00,"['digitaldesign', 'fpga-board', 'fpga-programming', 'systemverilog', 'systemverilog-hdl', 'vivado']",None
701,https://github.com/Usman8511/State_Machine.git,2023-06-13 15:58:16+00:00,"State Machine Verilog code for Operating Elevator, have two floors : 1. Ground (S0 or S1) 2. First (S0 or S1) the elevator cannot open when moving, it will only open if it is on some floor.  ",0,Usman8511/State_Machine,653211910,SystemVerilog,State_Machine,3,0,2023-06-13 16:10:25+00:00,[],None
702,https://github.com/bbnoir/2D-convolution.git,2023-06-18 10:22:37+00:00,hardware 2D convolution,0,bbnoir/2D-convolution,655243972,SystemVerilog,2D-convolution,15,0,2023-06-22 01:28:33+00:00,[],None
703,https://github.com/Masooma82/Full_adder.git,2023-06-17 13:04:46+00:00,It contains design code and test bench (in system verilog) of a full adder,0,Masooma82/Full_adder,654959779,SystemVerilog,Full_adder,0,0,2023-06-17 13:05:39+00:00,[],None
704,https://github.com/Carlos12001/ARM_SingleCycle_SoC.git,2023-06-12 00:43:54+00:00,,0,Carlos12001/ARM_SingleCycle_SoC,652383530,SystemVerilog,ARM_SingleCycle_SoC,7,0,2023-06-12 00:44:03+00:00,[],None
705,https://github.com/Jetoson/pipline_adder.git,2023-05-29 12:00:48+00:00,,0,Jetoson/pipline_adder,646814987,SystemVerilog,pipline_adder,12,0,2023-05-29 12:01:31+00:00,[],None
706,https://github.com/zymason/austin-ooo.git,2023-05-28 03:27:49+00:00,,0,zymason/austin-ooo,646331118,SystemVerilog,austin-ooo,124,0,2023-05-28 03:31:16+00:00,[],
707,https://github.com/icuic/UnarySim.git,2023-06-06 14:00:23+00:00,,0,icuic/UnarySim,650176114,SystemVerilog,UnarySim,190,0,2023-06-06 14:05:26+00:00,[],https://api.github.com/licenses/mit
708,https://github.com/AreebHabib/verilog-code.git,2023-05-31 08:51:10+00:00,,0,AreebHabib/verilog-code,647658585,SystemVerilog,verilog-code,12,0,2023-06-04 06:36:58+00:00,[],None
709,https://github.com/DancauRares-Andrei/ImplementareSimulatorRISC-V.git,2023-06-18 15:51:21+00:00,O simplă implementare a unui procesor RISC-V.,0,DancauRares-Andrei/ImplementareSimulatorRISC-V,655340563,SystemVerilog,ImplementareSimulatorRISC-V,52,0,2023-06-20 19:32:05+00:00,[],None
710,https://github.com/Shan-yi-shuai/pipeline-cpu.git,2023-06-23 06:16:42+00:00,,0,Shan-yi-shuai/pipeline-cpu,657471427,SystemVerilog,pipeline-cpu,37,0,2024-03-19 03:21:07+00:00,[],None
711,https://github.com/PRAGATI-0102/Full-Adder-using-SV-Day-053-.git,2023-06-01 14:17:17+00:00,"Using the power and flexibility of SystemVerilog, I designed a module called ""full_adder"" that takes three input bits (A, B, and Cin) and generates the sum (Sum) and carry (Cout) outputs. The full adder combines the individual bits and considers the carry input to accurately compute the sum.",0,PRAGATI-0102/Full-Adder-using-SV-Day-053-,648242933,SystemVerilog,Full-Adder-using-SV-Day-053-,50,0,2023-06-01 14:18:15+00:00,[],None
712,https://github.com/VigneshB19/spi_protocol.git,2023-06-05 14:44:07+00:00,,0,VigneshB19/spi_protocol,649747049,SystemVerilog,spi_protocol,5,0,2023-06-05 14:44:55+00:00,[],None
713,https://github.com/VarunCypherV/VarunCypherV.git,2023-06-11 03:45:31+00:00,,0,VarunCypherV/VarunCypherV,652089288,SystemVerilog,VarunCypherV,84,0,2023-06-11 04:25:31+00:00,[],None
714,https://github.com/MohitKumarS/System-Verilog.git,2023-06-02 15:42:12+00:00,,0,MohitKumarS/System-Verilog,648704135,SystemVerilog,System-Verilog,167,0,2023-06-02 15:49:16+00:00,[],None
715,https://github.com/harsha-challagulla/Win_23_I2C.git,2023-05-31 22:09:51+00:00,A Simple I2C based Project.,0,harsha-challagulla/Win_23_I2C,647952055,SystemVerilog,Win_23_I2C,27,0,2023-05-31 23:05:36+00:00,[],None
716,https://github.com/rabiut/Hardware-Implementation-of-Image-Decompression.git,2023-05-09 15:10:31+00:00,"In this project, a custom digital circuit was designed for image decompression using the McMaster Image Compression revision 16 (.mic16) specification on an Altera DE2 FPGA development board.",0,rabiut/Hardware-Implementation-of-Image-Decompression,638540105,SystemVerilog,Hardware-Implementation-of-Image-Decompression,1827,0,2023-05-09 15:19:24+00:00,[],None
717,https://github.com/MrDoomsday/Timer.git,2023-05-14 19:03:21+00:00,This timer was used to count time intervals in conjunction with the PicoRV32 processor in one of my works.,0,MrDoomsday/Timer,640644148,SystemVerilog,Timer,5,0,2023-05-21 15:36:33+00:00,[],None
718,https://github.com/roshanprusty/GRE.git,2023-05-14 10:16:49+00:00,,0,roshanprusty/GRE,640505802,SystemVerilog,GRE,468781,0,2023-06-25 14:02:22+00:00,[],None
719,https://github.com/SeboThaGawd/SPI_SystemVerilog.git,2023-05-16 07:02:29+00:00,"SystemVerilog implementation of the SPI protocol, done to learn both concepts.",0,SeboThaGawd/SPI_SystemVerilog,641288775,SystemVerilog,SPI_SystemVerilog,4,0,2023-06-30 23:22:29+00:00,[],None
720,https://github.com/deepblue597/hw_1_uart.git,2023-05-10 18:09:15+00:00,Implementation of Sender-Receiver System in Verilog using UART Protocol and Display on Four 7-Segment LED Display,0,deepblue597/hw_1_uart,639081527,SystemVerilog,hw_1_uart,2426,0,2023-05-10 18:12:07+00:00,[],None
721,https://github.com/dnmanalo/carrd-vector-coprocessor-dimple.git,2023-05-24 03:45:50+00:00,A copy of the codes I wrote for CARRD Vector Coprocessor Thesis Project. ,0,dnmanalo/carrd-vector-coprocessor-dimple,644688391,SystemVerilog,carrd-vector-coprocessor-dimple,14,0,2023-05-24 03:48:50+00:00,[],None
722,https://github.com/bushbecky/InferenceInFPGA.git,2023-05-08 21:01:03+00:00,,0,bushbecky/InferenceInFPGA,637988586,SystemVerilog,InferenceInFPGA,893,0,2023-05-08 21:01:20+00:00,[],None
723,https://github.com/MohammadFarrahi/DLD-projects.git,2023-05-08 11:21:27+00:00,"This repository, contains computer assignments of Digital Logic Design Course- Fall 2020 - UT",0,MohammadFarrahi/DLD-projects,637769107,SystemVerilog,DLD-projects,2289,0,2023-05-08 11:23:48+00:00,[],None
724,https://github.com/TakeoutSpace18/SimpleProcessor.git,2023-05-05 14:59:24+00:00,"Final project on ""Digital design"" discipline, made in 2 semester at NSU FIT.",0,TakeoutSpace18/SimpleProcessor,636751831,SystemVerilog,SimpleProcessor,11,0,2023-06-06 16:58:40+00:00,[],None
725,https://github.com/yadavashi/ashish_practice.git,2023-05-09 07:38:42+00:00,,0,yadavashi/ashish_practice,638153232,SystemVerilog,ashish_practice,2,0,2023-05-09 07:43:40+00:00,[],None
726,https://github.com/pranjal-mittal0/UVM.git,2023-05-05 06:45:33+00:00,,0,pranjal-mittal0/UVM,636572182,SystemVerilog,UVM,665,0,2023-05-12 05:36:45+00:00,[],None
727,https://github.com/keterbasary1/APB-watchdog.git,2023-05-10 06:56:26+00:00,,0,keterbasary1/APB-watchdog,638813673,SystemVerilog,APB-watchdog,29,0,2023-05-11 09:18:47+00:00,[],None
728,https://github.com/varunven/ee371.git,2023-05-09 18:37:40+00:00,Homework and projects for EE/CSE 371 at UW- Digital Circuits,0,varunven/ee371,638621857,SystemVerilog,ee371,58086,0,2023-05-09 19:04:10+00:00,[],None
729,https://github.com/j1ah0ng/turtle.git,2023-05-24 23:06:22+00:00,,0,j1ah0ng/turtle,645094033,SystemVerilog,turtle,162,0,2023-06-01 02:21:04+00:00,[],None
730,https://github.com/sid-anand98/32x8-Dual-Port-RAM-in-SystemVerilog.git,2023-06-15 07:11:58+00:00,,0,sid-anand98/32x8-Dual-Port-RAM-in-SystemVerilog,653993793,SystemVerilog,32x8-Dual-Port-RAM-in-SystemVerilog,22,0,2023-06-18 10:31:34+00:00,[],None
731,https://github.com/omarv10/UART-verification-circuit.git,2023-06-17 03:29:00+00:00,,0,omarv10/UART-verification-circuit,654816745,SystemVerilog,UART-verification-circuit,8,0,2023-06-17 03:36:01+00:00,[],None
732,https://github.com/Anushka1809/Vending_Machine.git,2023-06-03 18:48:47+00:00,"Build a vending machine which accepts only two coins, 5 rupee and 10 rupee. Whenever total of coins equal to 15 rupee, then a can of coke will be given. It will not return any residual coin, if total of rupees exceeds 15. ",0,Anushka1809/Vending_Machine,649092319,SystemVerilog,Vending_Machine,79,0,2023-06-03 18:51:45+00:00,[],None
733,https://github.com/RitwikRishabh/Spiking-Neural-Network-Accelerator.git,2023-04-18 02:20:04+00:00,,0,RitwikRishabh/Spiking-Neural-Network-Accelerator,629284504,SystemVerilog,Spiking-Neural-Network-Accelerator,2834,0,2023-04-18 02:23:24+00:00,[],None
734,https://github.com/Felastian/Lab_Sistemas_Digitales_2023.git,2023-04-27 01:32:57+00:00,Codigos Vivado,0,Felastian/Lab_Sistemas_Digitales_2023,633193387,SystemVerilog,Lab_Sistemas_Digitales_2023,8,0,2023-04-27 01:34:48+00:00,[],None
735,https://github.com/CyanoKobalamyne/msdsl-examples.git,2023-04-21 22:33:14+00:00,,0,CyanoKobalamyne/msdsl-examples,631086509,SystemVerilog,msdsl-examples,72,0,2023-04-21 22:34:02+00:00,[],None
736,https://github.com/Yonell/AGH-Techniki-Cyfrowe-2023.git,2023-04-22 17:13:09+00:00,,0,Yonell/AGH-Techniki-Cyfrowe-2023,631328930,SystemVerilog,AGH-Techniki-Cyfrowe-2023,4910,0,2023-06-08 14:14:27+00:00,[],None
737,https://github.com/stavya3/cayde-2.git,2023-04-29 06:54:34+00:00,,0,stavya3/cayde-2,634137579,SystemVerilog,cayde-2,896,0,2023-04-29 07:12:14+00:00,[],None
738,https://github.com/mvsharikrishna/System-Verilog-Basics.git,2023-06-23 09:43:01+00:00,,0,mvsharikrishna/System-Verilog-Basics,657542738,SystemVerilog,System-Verilog-Basics,22,0,2023-07-05 06:33:42+00:00,[],None
739,https://github.com/LouisTheLuis/6.2050-FA2022.git,2023-06-14 13:58:13+00:00,,0,LouisTheLuis/6.2050-FA2022,653673962,SystemVerilog,6.2050-FA2022,1171,0,2023-06-14 14:00:24+00:00,[],None
740,https://github.com/Shivaprasadm02/uvm_extra.git,2023-04-26 07:06:39+00:00,uvm practice codes,0,Shivaprasadm02/uvm_extra,632806257,SystemVerilog,uvm_extra,26,0,2023-04-26 07:15:25+00:00,[],None
741,https://github.com/dragos-pascu/ahb-arbiter.git,2023-05-14 15:41:02+00:00,,0,dragos-pascu/ahb-arbiter,640590452,SystemVerilog,ahb-arbiter,17375,0,2024-02-08 11:57:09+00:00,[],None
742,https://github.com/jeygen/verilog.git,2023-05-03 02:35:02+00:00,A place to practice verilog,0,jeygen/verilog,635585989,SystemVerilog,verilog,1726,0,2023-07-03 16:07:41+00:00,[],None
