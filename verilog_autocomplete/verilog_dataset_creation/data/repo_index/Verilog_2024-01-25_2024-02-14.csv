,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/vasanthpandian2004/Approximate-vedic-multiplier.git,2024-01-28 06:49:17+00:00,,0,vasanthpandian2004/Approximate-vedic-multiplier,749300691,Verilog,Approximate-vedic-multiplier,1577,21,2024-03-14 06:48:33+00:00,[],https://api.github.com/licenses/gpl-3.0
1,https://github.com/yian521/OpenC910_Modified.git,2024-02-03 07:42:53+00:00,commit rtl and build cosim env,0,yian521/OpenC910_Modified,752159464,Verilog,OpenC910_Modified,27775,12,2024-02-18 15:18:14+00:00,[],None
2,https://github.com/obsidian-dot-dev/openFPGA-DonkeyKong3.git,2024-02-11 03:32:19+00:00,,0,obsidian-dot-dev/openFPGA-DonkeyKong3,755785431,Verilog,openFPGA-DonkeyKong3,2335,11,2024-03-10 21:26:07+00:00,[],None
3,https://github.com/obsidian-dot-dev/openFPGA-Druaga.git,2024-02-11 03:32:51+00:00,,0,obsidian-dot-dev/openFPGA-Druaga,755785507,Verilog,openFPGA-Druaga,5010,10,2024-03-10 21:26:11+00:00,[],None
4,https://github.com/hkust-zhiyao/SpecLLM.git,2024-01-29 06:17:47+00:00,SpecLLM: Exploring Generation and Review of VLSI Design Specification with Large Language Model,0,hkust-zhiyao/SpecLLM,749662152,,SpecLLM,106813,6,2024-03-27 07:07:52+00:00,[],None
5,https://github.com/Andy-SAKN/SUSTech-CS207-Project-Piano.git,2024-01-29 14:04:38+00:00,2023fall Digital Logic ,0,Andy-SAKN/SUSTech-CS207-Project-Piano,749842240,Verilog,SUSTech-CS207-Project-Piano,12406,6,2024-02-19 00:41:23+00:00,[],None
6,https://github.com/EngAhmed21/RISC-V-Processor-with-Pipelining.git,2024-02-09 18:02:42+00:00,"Implementation of the pipelined RISC V processor with many useful features as fully bypassing, dynamic branch prediction, single and multi cycle instructions, ALU unit works in parallel with a multiplication unit, and Reorder Buffer to guarantee in-order termination.",4,EngAhmed21/RISC-V-Processor-with-Pipelining,755239009,Verilog,RISC-V-Processor-with-Pipelining,32,6,2024-02-14 04:28:40+00:00,[],None
7,https://github.com/Mazamars312/Analogue_Star_Wars.git,2024-02-12 08:30:16+00:00,Analogue_Star_Wars,0,Mazamars312/Analogue_Star_Wars,756225759,Verilog,Analogue_Star_Wars,6560,4,2024-02-19 15:55:45+00:00,[],None
8,https://github.com/Bromine035/IC-lab.git,2024-02-12 21:07:39+00:00,Digital IC Design,0,Bromine035/IC-lab,756536764,Verilog,IC-lab,33659,4,2024-02-25 07:58:37+00:00,[],None
9,https://github.com/VeriMaverick/JPEG-image-compression-algorithm-based-on-FPGA.git,2024-01-30 07:05:34+00:00,,0,VeriMaverick/JPEG-image-compression-algorithm-based-on-FPGA,750196746,Verilog,JPEG-image-compression-algorithm-based-on-FPGA,3880,3,2024-04-10 03:08:25+00:00,[],None
10,https://github.com/AmiraliShahriary/Computer-Architecture-Projects.git,2024-02-07 07:21:56+00:00,"RISC-V Single_Cycle,Multi_Cycle & Pipeline Verilog Description implementation.",0,AmiraliShahriary/Computer-Architecture-Projects,753991620,Verilog,Computer-Architecture-Projects,1791,3,2024-03-27 04:28:31+00:00,[],None
11,https://github.com/TinyTapeout/tinytapeout-06.git,2024-01-29 08:38:06+00:00,Tiny Tapeout 06,0,TinyTapeout/tinytapeout-06,749709741,Verilog,tinytapeout-06,243198,3,2024-03-25 14:40:14+00:00,['tiny-tapeout'],https://api.github.com/licenses/apache-2.0
12,https://github.com/KAMATHAM19/OpenROAD-for-Low-cost-ASIC-design-and-Rapid-Innovation.git,2024-02-04 20:32:10+00:00,"This workshop was organised by IIT Guwahati collabarted with MeitY, NINE Labs, Electronics India.",0,KAMATHAM19/OpenROAD-for-Low-cost-ASIC-design-and-Rapid-Innovation,752797542,Verilog,OpenROAD-for-Low-cost-ASIC-design-and-Rapid-Innovation,16885,3,2024-02-17 22:42:09+00:00,[],None
13,https://github.com/aliiimaher/FPGA-Image-Processing-with-Chain-Code-Encoding.git,2024-02-04 10:08:56+00:00,FPGA-based Chain Code Image Encoder and Decoder using Verilog. Compresses images with chain code algorithms and features UART communication for efficient data transfer.,0,aliiimaher/FPGA-Image-Processing-with-Chain-Code-Encoding,752596235,Verilog,FPGA-Image-Processing-with-Chain-Code-Encoding,1581,2,2024-02-05 17:11:47+00:00,[],https://api.github.com/licenses/mit
14,https://github.com/ArianArsenal/LC-Project.git,2024-02-05 20:51:37+00:00,Fighting game implemented in Verilog and FPGA,0,ArianArsenal/LC-Project,753293805,Verilog,LC-Project,1105,2,2024-03-08 18:08:46+00:00,[],None
15,https://github.com/Yogendra-7777/FSM-for-BUS-operation.git,2024-01-31 17:16:54+00:00,,0,Yogendra-7777/FSM-for-BUS-operation,750968001,Verilog,FSM-for-BUS-operation,64,2,2024-02-05 13:21:39+00:00,[],None
16,https://github.com/os-fpga/device_modeling.git,2024-01-26 14:08:05+00:00,,5,os-fpga/device_modeling,748670938,Verilog,device_modeling,207,2,2024-04-09 16:20:05+00:00,[],
17,https://github.com/johnbentcope/iron_violet.git,2024-02-06 13:43:39+00:00,TinyTapeout 6,0,johnbentcope/iron_violet,753622989,Verilog,iron_violet,162,2,2024-02-09 02:32:51+00:00,[],https://api.github.com/licenses/apache-2.0
18,https://github.com/IEEE-UCF/Skills-Series.git,2024-01-29 01:15:38+00:00,Repository for all past IEEE UCF skills series,0,IEEE-UCF/Skills-Series,749586121,Verilog,Skills-Series,21671,2,2024-02-02 20:49:54+00:00,[],None
19,https://github.com/VeriMaverick/Coffee-machine-control-circuit-based-on-FPGA-V3.2.git,2024-02-02 00:41:33+00:00,,0,VeriMaverick/Coffee-machine-control-circuit-based-on-FPGA-V3.2,751617282,Verilog,Coffee-machine-control-circuit-based-on-FPGA-V3.2,21,2,2024-03-11 12:13:23+00:00,[],None
20,https://github.com/zaynaab/FFT-implementation-in-RISCV-using-PCPI.git,2024-01-30 13:57:39+00:00,The objective of this project is to design and implement an FFT co-processor for picorv32 using the PCPI interface. The co-processor will be able to perform FFT on 16-point complex input sequences and output the corresponding frequency spectra. The co-processor will be synthesized and tested on a Xilinx Vivado FPGA board.,0,zaynaab/FFT-implementation-in-RISCV-using-PCPI,750360720,Verilog,FFT-implementation-in-RISCV-using-PCPI,10,2,2024-04-01 08:41:28+00:00,[],None
21,https://github.com/Yogendra-7777/Complex-Multiplier-using-verilog.git,2024-02-01 17:25:27+00:00,,0,Yogendra-7777/Complex-Multiplier-using-verilog,751475252,Verilog,Complex-Multiplier-using-verilog,57,2,2024-02-05 13:21:13+00:00,[],None
22,https://github.com/hemu312004/50DaysVerilogWithMe.git,2024-02-04 10:51:52+00:00,"Welcome to the #50DaysVerilogWithMe GitHub repository, where we embark on a comprehensive 50-day journey into Verilog programming. This initiative is designed to provide participants with a structured and incremental learning experience in Verilog, a hardware description language widely used in digital design.",0,hemu312004/50DaysVerilogWithMe,752607421,Verilog,50DaysVerilogWithMe,161,2,2024-03-24 14:25:47+00:00,[],None
23,https://github.com/jharamirezma/Electronica-digital-1-2024-1.git,2024-02-11 20:31:25+00:00,,1,jharamirezma/Electronica-digital-1-2024-1,756048136,Verilog,Electronica-digital-1-2024-1,18755,2,2024-03-18 13:27:40+00:00,[],None
24,https://github.com/iic-jku/jku-tt06-tdc-v1.git,2024-02-03 22:08:03+00:00,TDC based on simple inverter chain,2,iic-jku/jku-tt06-tdc-v1,752453274,Verilog,jku-tt06-tdc-v1,31130,2,2024-04-09 12:15:24+00:00,[],https://api.github.com/licenses/apache-2.0
25,https://github.com/Monish-Alavalapati/Vedic-Multiplier.git,2024-01-28 09:49:53+00:00,,0,Monish-Alavalapati/Vedic-Multiplier,749341593,Verilog,Vedic-Multiplier,23,2,2024-01-29 17:36:03+00:00,[],None
26,https://github.com/Damn-Vuln-IoT-SoC/Damn-Vuln-IoT-SoC.git,2024-02-05 14:08:22+00:00,A modular platform to generate SoC with hardware vulnerabilities,1,Damn-Vuln-IoT-SoC/Damn-Vuln-IoT-SoC,753120584,Verilog,Damn-Vuln-IoT-SoC,67154,2,2024-04-05 15:08:27+00:00,[],https://api.github.com/licenses/bsd-2-clause
27,https://github.com/SoroushEsk/Border-Flow-Imaging.git,2024-01-30 13:42:58+00:00,,0,SoroushEsk/Border-Flow-Imaging,750353873,Verilog,Border-Flow-Imaging,3648,1,2024-02-02 01:45:49+00:00,[],None
28,https://github.com/rejunity/fpga-icebreaker-racing-the-beam.git,2024-02-08 13:01:52+00:00,Playground for graphics experiments running on iCE40 Lattice FPGA with iceBreaker board,1,rejunity/fpga-icebreaker-racing-the-beam,754625336,Verilog,fpga-icebreaker-racing-the-beam,41,1,2024-02-09 22:32:28+00:00,"['fpga', 'fpga-programming', 'hdmi', 'ice40', 'icebreaker', 'retro', 'vga']",https://api.github.com/licenses/mit
29,https://github.com/ZiyangYE/LicheeTang25k_VexRV_micro.git,2024-01-29 13:09:29+00:00,,1,ZiyangYE/LicheeTang25k_VexRV_micro,749817413,Verilog,LicheeTang25k_VexRV_micro,69,1,2024-04-03 03:38:05+00:00,[],https://api.github.com/licenses/apache-2.0
30,https://github.com/RuyiZhou0622/Cornell-Academic.git,2024-01-27 22:36:06+00:00,,1,RuyiZhou0622/Cornell-Academic,749214082,Verilog,Cornell-Academic,8351,1,2024-02-22 05:17:00+00:00,[],None
31,https://github.com/Essenceia/CAM.git,2024-02-06 03:46:09+00:00,Content Addressable Memory Experimentations,0,Essenceia/CAM,753405887,Verilog,CAM,1,1,2024-03-12 13:21:41+00:00,[],None
32,https://github.com/asreed666/thursdayVGA.git,2024-01-25 15:56:08+00:00,City2077 pong,1,asreed666/thursdayVGA,748259763,Verilog,thursdayVGA,135,1,2024-02-29 09:45:00+00:00,[],None
33,https://github.com/GhadeerJaradat2/RTL_Self_Attention.git,2024-01-26 19:09:13+00:00,,0,GhadeerJaradat2/RTL_Self_Attention,748788695,Verilog,RTL_Self_Attention,257,1,2024-04-09 03:02:25+00:00,[],None
34,https://github.com/kapi36/Designing-and-verification-of-Synchronous-FIFO-using-System-Verilog-.git,2024-02-05 13:07:42+00:00,,0,kapi36/Designing-and-verification-of-Synchronous-FIFO-using-System-Verilog-,753093066,Verilog,Designing-and-verification-of-Synchronous-FIFO-using-System-Verilog-,6,1,2024-02-24 14:27:12+00:00,[],None
35,https://github.com/Bruno325/QuartusDiceGame.git,2024-02-02 05:45:37+00:00,A 2-Player Dice Game Using a DE-10 Lite Board and Intel Quartus,0,Bruno325/QuartusDiceGame,751692870,Verilog,QuartusDiceGame,13,1,2024-03-25 08:29:39+00:00,[],None
36,https://github.com/byte-me404/jku-tt06-ps2-morse-encoder.git,2024-02-01 12:43:44+00:00,"Custom ASIC design which decodes a PS/2 keyboard, furthermore it encodes and outputs the data as morse code",0,byte-me404/jku-tt06-ps2-morse-encoder,751350307,Verilog,jku-tt06-ps2-morse-encoder,1756,1,2024-02-01 13:28:22+00:00,[],https://api.github.com/licenses/apache-2.0
37,https://github.com/Yuvasri-b/30-Days-of-RTL-Learning.git,2024-02-14 10:48:32+00:00,This repository includes 30 days of RTL coding in Multisim and Xilinx- Vivado software. ,0,Yuvasri-b/30-Days-of-RTL-Learning,757364371,Verilog,30-Days-of-RTL-Learning,6899,1,2024-03-29 14:18:16+00:00,[],None
38,https://github.com/Mahmoud-Gamal-ELkholy/MIPS.git,2024-02-09 19:23:09+00:00,,0,Mahmoud-Gamal-ELkholy/MIPS,755269009,Verilog,MIPS,210,1,2024-02-10 18:25:00+00:00,[],None
39,https://github.com/JoenTheWizard/verilog-stuff.git,2024-02-10 08:54:01+00:00,just some simple verilog projects I've written for learning,0,JoenTheWizard/verilog-stuff,755453714,Verilog,verilog-stuff,15,1,2024-02-14 09:42:19+00:00,[],None
40,https://github.com/hyeonseong2000/Sparse_CNN_Accelerator.git,2024-01-26 00:19:40+00:00,Graduation Project,0,hyeonseong2000/Sparse_CNN_Accelerator,748430809,Verilog,Sparse_CNN_Accelerator,630,1,2024-04-01 13:46:02+00:00,[],None
41,https://github.com/kerrishotts/retroputer-fpga.git,2024-01-31 01:37:04+00:00,FPGA implementation for Retroputer,0,kerrishotts/retroputer-fpga,750621759,Verilog,retroputer-fpga,10832,1,2024-03-10 01:42:02+00:00,[],https://api.github.com/licenses/mit
42,https://github.com/nathaliacristina-arch/Lab_CD.git,2024-01-29 16:54:40+00:00,Atividades realizadas na UC Laboratório de circuitos digitaia,0,nathaliacristina-arch/Lab_CD,749920768,Verilog,Lab_CD,1123,1,2024-01-29 21:15:12+00:00,[],None
43,https://github.com/VeriMaverick/FIFO_synchronous.git,2024-01-30 01:42:19+00:00,,0,VeriMaverick/FIFO_synchronous,750103887,Verilog,FIFO_synchronous,78,1,2024-01-30 06:11:59+00:00,[],None
44,https://github.com/Sreeprad/50Daysof_RTL.git,2024-02-11 16:04:20+00:00,,0,Sreeprad/50Daysof_RTL,755968956,Verilog,50Daysof_RTL,98252,1,2024-02-12 06:26:55+00:00,[],https://api.github.com/licenses/mit
45,https://github.com/gaurav136/PRAN_RISC-V_CPU.git,2024-02-04 06:43:26+00:00,PRAN RV32I Single Cycle CPU,0,gaurav136/PRAN_RISC-V_CPU,752546255,Verilog,PRAN_RISC-V_CPU,153,1,2024-02-05 14:24:16+00:00,[],https://api.github.com/licenses/mit
46,https://github.com/mehmetemrekayacan/8-bit-ALU-Adder-Subtractor.git,2024-02-03 14:07:45+00:00,"""8-bit ALU (Arithmetic Logic Unit) with Adder-Subtractor: A project implementing an 8-bit Arithmetic Logic Unit capable of performing addition and subtraction operations. 💻🔢""",0,mehmetemrekayacan/8-bit-ALU-Adder-Subtractor,752260051,Verilog,8-bit-ALU-Adder-Subtractor,7,1,2024-03-06 20:26:20+00:00,[],None
47,https://github.com/hasanatherate/HDL.git,2024-02-11 07:54:37+00:00,,0,hasanatherate/HDL,755833533,Verilog,HDL,35,1,2024-03-21 07:46:37+00:00,[],None
48,https://github.com/vardhan3003/UART_Protocol.git,2024-02-09 07:15:37+00:00,,0,vardhan3003/UART_Protocol,754985391,Verilog,UART_Protocol,2309,1,2024-03-28 04:49:11+00:00,[],None
49,https://github.com/RAOUMERTC73/-Design-and-Verification-Trainee.git,2024-02-12 18:57:15+00:00,"SemiRise Training Program: currently working on a remote training focused on Digital logic design, Verilog, System Verilog, Computer Architecture. This training has provided me with hands-on experience in designing and verifying digital circuits using advanced software tool.",0,RAOUMERTC73/-Design-and-Verification-Trainee,756486466,Verilog,-Design-and-Verification-Trainee,4485,1,2024-03-02 16:13:09+00:00,[],None
50,https://github.com/RajputhSanthoshSingh/32-bit-Up-Down-Counter.git,2024-01-26 10:18:22+00:00,This repository contains the source code and documentation for a 32-bit up-down counter. The counter is implemented in Verilog and is designed in Intel Quarter Prime.,0,RajputhSanthoshSingh/32-bit-Up-Down-Counter,748589516,Verilog,32-bit-Up-Down-Counter,19193,1,2024-01-26 17:04:25+00:00,[],None
51,https://github.com/Vick210282/winograd_syn.git,2024-01-26 03:15:14+00:00,,0,Vick210282/winograd_syn,748471482,Verilog,winograd_syn,82,1,2024-01-26 07:01:35+00:00,[],None
52,https://github.com/QuantumHero10/FPGA.git,2024-02-08 07:05:40+00:00,,0,QuantumHero10/FPGA,754494357,Verilog,FPGA,47,1,2024-02-08 07:14:47+00:00,[],None
53,https://github.com/k-diep/CE6325.git,2024-02-08 23:48:47+00:00,VLSI Design,0,k-diep/CE6325,754879858,Verilog,CE6325,24258,1,2024-02-09 00:05:36+00:00,[],None
54,https://github.com/VeriMaverick/Single-moving-object-detection-based-on-FPGA.git,2024-02-08 03:17:30+00:00,,0,VeriMaverick/Single-moving-object-detection-based-on-FPGA,754433667,Verilog,Single-moving-object-detection-based-on-FPGA,1428,1,2024-02-09 08:16:10+00:00,[],None
55,https://github.com/charliechin424/NTUEE-Computer-Architecture.git,2024-01-29 05:35:39+00:00,,0,charliechin424/NTUEE-Computer-Architecture,749649201,Verilog,NTUEE-Computer-Architecture,4034,1,2024-02-23 07:52:47+00:00,[],None
56,https://github.com/toivoh/tt06-retro-console.git,2024-02-04 05:32:10+00:00,Retro console with two parallax planes and analog emulation polysynth,0,toivoh/tt06-retro-console,752531220,Verilog,tt06-retro-console,335,1,2024-04-08 10:34:13+00:00,[],https://api.github.com/licenses/apache-2.0
57,https://github.com/VeriMaverick/Coffee-machine-control-circuit-based-on-FPGA-V2.2.git,2024-02-01 01:17:08+00:00,,0,VeriMaverick/Coffee-machine-control-circuit-based-on-FPGA-V2.2,751124984,Verilog,Coffee-machine-control-circuit-based-on-FPGA-V2.2,5802,1,2024-02-02 00:53:29+00:00,[],None
58,https://github.com/ahmedatAED/PCIe-Verilog.git,2024-02-02 08:02:54+00:00,,0,ahmedatAED/PCIe-Verilog,751735834,Verilog,PCIe-Verilog,1275,1,2024-03-14 09:32:32+00:00,[],https://api.github.com/licenses/mit
59,https://github.com/NicholasTanYY/fpga-project.git,2024-01-28 03:17:03+00:00,,1,NicholasTanYY/fpga-project,749262038,Verilog,fpga-project,32361,1,2024-03-31 12:42:36+00:00,[],None
60,https://github.com/MichaelBell/tt06-tinyQV.git,2024-02-02 23:40:19+00:00,Tiny QERV Risc-V SoC for TinyTapeout,0,MichaelBell/tt06-tinyQV,752063274,Verilog,tt06-tinyQV,155,1,2024-03-19 23:22:21+00:00,[],https://api.github.com/licenses/apache-2.0
61,https://github.com/mohos455/SPI-Master-Slave.git,2024-02-14 22:36:28+00:00,,0,mohos455/SPI-Master-Slave,757750610,Verilog,SPI-Master-Slave,5,1,2024-02-15 09:43:56+00:00,[],None
62,https://github.com/ICscholar/CPU-design-verilog.git,2024-01-30 04:00:44+00:00,"The two projects are complete blocks for pipeline CPU, with base and Pro version",0,ICscholar/CPU-design-verilog,750141629,Verilog,CPU-design-verilog,6835,1,2024-02-25 03:59:11+00:00,[],None
63,https://github.com/mattgirard/374.git,2024-01-25 21:10:30+00:00,Designing a Processor in Verilog,1,mattgirard/374,748380818,Verilog,374,2090,1,2024-02-25 20:12:31+00:00,[],None
64,https://github.com/ppqppl/FPGA-CAN.git,2024-02-11 01:11:12+00:00,,0,ppqppl/FPGA-CAN,755764624,Verilog,FPGA-CAN,369,1,2024-04-03 11:41:03+00:00,[],None
65,https://github.com/VeriMaverick/FIFO_asynchronous.git,2024-01-30 01:38:41+00:00,,0,VeriMaverick/FIFO_asynchronous,750102849,Verilog,FIFO_asynchronous,334,1,2024-01-30 06:12:00+00:00,[],None
66,https://github.com/VeriMaverick/UART.git,2024-01-30 01:28:39+00:00,,0,VeriMaverick/UART,750100137,Verilog,UART,6,1,2024-01-30 06:12:02+00:00,[],None
67,https://github.com/WangXinTong1202/RISC-V-pipeline-cpu.git,2024-01-25 07:42:41+00:00,,0,WangXinTong1202/RISC-V-pipeline-cpu,748064516,Verilog,RISC-V-pipeline-cpu,155,1,2024-01-30 14:14:27+00:00,[],None
68,https://github.com/VeriMaverick/Design-of-a-four-bit-binary-multiplier-based-on-FPGA.git,2024-01-31 00:59:18+00:00,,0,VeriMaverick/Design-of-a-four-bit-binary-multiplier-based-on-FPGA,750612278,Verilog,Design-of-a-four-bit-binary-multiplier-based-on-FPGA,9918,1,2024-02-02 00:56:34+00:00,[],None
69,https://github.com/OmerAlsum/Display-Image-on-VGA-Monitor-using-FPGA-DE2-115.git,2024-01-26 07:30:17+00:00,,0,OmerAlsum/Display-Image-on-VGA-Monitor-using-FPGA-DE2-115,748533464,Verilog,Display-Image-on-VGA-Monitor-using-FPGA-DE2-115,23479,1,2024-02-04 03:27:28+00:00,[],None
70,https://github.com/x1be1/xibei-s-HDL-bits-.git,2024-02-14 13:38:34+00:00,HDL_bits reference answer,0,x1be1/xibei-s-HDL-bits-,757431833,Verilog,xibei-s-HDL-bits-,66,1,2024-02-14 13:52:16+00:00,[],None
71,https://github.com/Zhongheng-Cheng/4824-projects.git,2024-01-30 17:03:54+00:00,,1,Zhongheng-Cheng/4824-projects,750448954,Verilog,4824-projects,2953,1,2024-02-29 21:52:33+00:00,[],None
72,https://github.com/gdncs09/NYCU-2022Spring-Computer-Organization.git,2024-02-07 09:35:40+00:00,,0,gdncs09/NYCU-2022Spring-Computer-Organization,754042083,Verilog,NYCU-2022Spring-Computer-Organization,5168,1,2024-03-04 04:13:36+00:00,[],None
73,https://github.com/mehrshad-kh/WinstonFarzaneh.git,2024-01-27 18:35:45+00:00,"A fighting game, described in Verilog, implemented on Xilinx FPGA",0,mehrshad-kh/WinstonFarzaneh,749155739,Verilog,WinstonFarzaneh,590,1,2024-03-23 06:32:27+00:00,[],None
74,https://github.com/MyWurger/5.3.--Traffic-light-on-Cyclone-IV-E---EP4CE115F29C7-using-NIOS-II-architecture.git,2024-01-26 11:25:05+00:00,,0,MyWurger/5.3.--Traffic-light-on-Cyclone-IV-E---EP4CE115F29C7-using-NIOS-II-architecture,748612308,Verilog,5.3.--Traffic-light-on-Cyclone-IV-E---EP4CE115F29C7-using-NIOS-II-architecture,25326,1,2024-01-26 11:37:22+00:00,[],None
75,https://github.com/AbdullahSh20/ITU-COURSEWORK.git,2024-01-28 19:11:53+00:00,My coursework files for the classes that I took at Istanbul Technical University over the semesters,0,AbdullahSh20/ITU-COURSEWORK,749504841,Verilog,ITU-COURSEWORK,84035,1,2024-02-09 07:40:29+00:00,[],None
76,https://github.com/in-explicable/Combinational-and-Sequential-Circuits_Design-and-Simulation.git,2024-02-13 09:04:50+00:00,,0,in-explicable/Combinational-and-Sequential-Circuits_Design-and-Simulation,756761909,Verilog,Combinational-and-Sequential-Circuits_Design-and-Simulation,5,1,2024-02-13 09:09:28+00:00,[],None
77,https://github.com/hoglet67/Digiac-Mac-III-FPGA.git,2024-02-12 17:38:54+00:00,Digiac-Mac-III-FPGA,0,hoglet67/Digiac-Mac-III-FPGA,756454001,Verilog,Digiac-Mac-III-FPGA,111,1,2024-02-13 18:24:08+00:00,[],None
78,https://github.com/KULeuven-COSIC/NonPowerOfTwoNTT.git,2024-01-30 14:35:24+00:00,,0,KULeuven-COSIC/NonPowerOfTwoNTT,750378953,Verilog,NonPowerOfTwoNTT,4977,1,2024-03-12 01:40:24+00:00,[],None
79,https://github.com/Michael-J-K94/mike_space_saving.git,2024-01-31 16:30:57+00:00,,0,Michael-J-K94/mike_space_saving,750947877,Verilog,mike_space_saving,11,1,2024-01-31 17:41:12+00:00,[],None
80,https://github.com/zbonneau/ieeeVerilogTutorial.git,2024-02-13 15:12:20+00:00,TTU Spring 2024 IEEE Verilog Tutorial hosted by Zachary Bonneau,0,zbonneau/ieeeVerilogTutorial,756921859,Verilog,ieeeVerilogTutorial,8,1,2024-02-19 01:27:10+00:00,[],None
81,https://github.com/Raveem13/HDLbits-practice-solution.git,2024-02-06 05:15:18+00:00,This is a repository containing my solutions to the problem statements given on HDLBits website. ,0,Raveem13/HDLbits-practice-solution,753429447,Verilog,HDLbits-practice-solution,154,1,2024-02-09 21:36:01+00:00,"['hardware-description-language', 'hdl', 'hdlbits', 'hdlbitssolution', 'verilog', 'verilog-code', 'verilog-programs', 'digitallogic', 'fpga-programming', 'logicdesign']",None
82,https://github.com/raha96/llmhws.git,2024-02-02 18:28:03+00:00,"A dataset of (potential) hardware vulnerabilities. Although this repo is marked ""Public"" to facilitate sharing, it is not actually of shareable quality. License TBD",1,raha96/llmhws,751973891,Verilog,llmhws,198,1,2024-03-21 22:57:30+00:00,[],None
83,https://github.com/WinstonLiyt/Harvard-Architecture-MIPS-based-CPU-series.git,2024-02-04 03:21:37+00:00,Harward Architecture Mips-based CPU series for Course 100656 Project,0,WinstonLiyt/Harvard-Architecture-MIPS-based-CPU-series,752507439,Verilog,Harvard-Architecture-MIPS-based-CPU-series,2208,1,2024-03-08 13:40:39+00:00,[],None
84,https://github.com/KAMALESH-EEE/Verilog.git,2024-01-31 15:56:09+00:00,For learning,0,KAMALESH-EEE/Verilog,750932026,Verilog,Verilog,15,1,2024-03-25 10:01:13+00:00,[],None
85,https://github.com/PFarrokhi/video-down-scaler.git,2024-01-29 10:44:46+00:00,,0,PFarrokhi/video-down-scaler,749760307,Verilog,video-down-scaler,29,0,2024-01-29 11:12:20+00:00,[],https://api.github.com/licenses/gpl-3.0
86,https://github.com/SuchithraM008/JPEG-Compression.git,2024-01-29 11:30:15+00:00,,0,SuchithraM008/JPEG-Compression,749777889,Verilog,JPEG-Compression,2990,0,2024-01-29 11:31:09+00:00,[],https://api.github.com/licenses/apache-2.0
87,https://github.com/Shashank-DL/RISC-V-Processor-Using-Verilog.git,2024-01-28 13:32:01+00:00,,0,Shashank-DL/RISC-V-Processor-Using-Verilog,749400229,Verilog,RISC-V-Processor-Using-Verilog,2880,0,2024-01-28 13:33:50+00:00,[],None
88,https://github.com/MVS-Abhiram/Serial-in-Serial-out-Shift-Register.git,2024-01-28 03:26:05+00:00,"Hi Guys, This is the code for 4 bit serial in serial out shift register, where first two clock cycles shift left happens and the next two clock cycles it acts as an buffer.",0,MVS-Abhiram/Serial-in-Serial-out-Shift-Register,749263573,Verilog,Serial-in-Serial-out-Shift-Register,9,0,2024-01-28 03:55:18+00:00,[],None
89,https://github.com/OmerAlsum/UART-with-Chatbot-verilog-implementation.git,2024-01-28 03:46:23+00:00,,0,OmerAlsum/UART-with-Chatbot-verilog-implementation,749266959,Verilog,UART-with-Chatbot-verilog-implementation,2673,0,2024-01-28 20:37:31+00:00,[],None
90,https://github.com/SONAMSHANDILYA/One-HOT-FSM.git,2024-01-30 17:50:36+00:00,,0,SONAMSHANDILYA/One-HOT-FSM,750469937,Verilog,One-HOT-FSM,3,0,2024-01-30 17:54:54+00:00,[],None
91,https://github.com/gvatiani/gautam.git,2024-01-30 21:19:02+00:00,,0,gvatiani/gautam,750552779,Verilog,gautam,1,0,2024-01-30 21:19:37+00:00,[],None
92,https://github.com/songxuanchen/Template.git,2024-01-31 10:58:01+00:00,VCS，Verdi，syn，pt使用模板，仅供学习使用。,0,songxuanchen/Template,750803869,Verilog,Template,60,0,2024-01-31 11:10:08+00:00,[],None
93,https://github.com/IMFeeferz/Traffic-Light-Conroller.git,2024-02-04 21:51:58+00:00,Final Project for Digital Systems design,0,IMFeeferz/Traffic-Light-Conroller,752817245,Verilog,Traffic-Light-Conroller,621,0,2024-02-04 21:54:54+00:00,[],None
94,https://github.com/zw2123/Async_FIFO.git,2024-02-04 04:05:03+00:00,"side project, custom FIFO design",0,zw2123/Async_FIFO,752515096,Verilog,Async_FIFO,7,0,2024-02-04 21:22:48+00:00,[],None
95,https://github.com/Zachamus/194BB-Labs.git,2024-02-04 23:10:40+00:00,,0,Zachamus/194BB-Labs,752834534,Verilog,194BB-Labs,1,0,2024-02-04 23:29:26+00:00,[],None
96,https://github.com/TOFU-0218/7-segment-display-on-verilog.git,2024-02-03 06:19:37+00:00,4桁の7セグディスプレイに数字を表示する,0,TOFU-0218/7-segment-display-on-verilog,752140283,Verilog,7-segment-display-on-verilog,22,0,2024-02-03 07:14:59+00:00,[],None
97,https://github.com/phuoc0402/Simulate-SPI-on-Vivado-2018.3.git,2024-02-01 10:37:38+00:00,,0,phuoc0402/Simulate-SPI-on-Vivado-2018.3,751301710,Verilog,Simulate-SPI-on-Vivado-2018.3,13,0,2024-02-02 09:15:40+00:00,[],None
98,https://github.com/RESMIRNAIR/ALU.git,2024-01-30 09:46:05+00:00,,0,RESMIRNAIR/ALU,750257430,Verilog,ALU,54,0,2024-01-30 09:54:44+00:00,[],None
99,https://github.com/PK1203/RISC-V-Single-Cycle--Verilog.git,2024-02-02 20:45:06+00:00,,0,PK1203/RISC-V-Single-Cycle--Verilog,752019425,Verilog,RISC-V-Single-Cycle--Verilog,7,0,2024-02-02 20:49:37+00:00,[],None
100,https://github.com/Swetha2244/verilog-hdl-solutions.git,2024-02-02 06:53:30+00:00,,0,Swetha2244/verilog-hdl-solutions,751713696,Verilog,verilog-hdl-solutions,31,0,2024-02-02 07:12:00+00:00,[],None
101,https://github.com/karimmahmoud22/Master-Slave.git,2024-02-08 05:41:54+00:00,,0,karimmahmoud22/Master-Slave,754469697,Verilog,Master-Slave,1143,0,2024-02-08 05:46:46+00:00,[],https://api.github.com/licenses/mit
102,https://github.com/ertanhll/Design-a-rock-paper-scissors-game-Verilog.git,2024-02-07 23:43:13+00:00,,0,ertanhll/Design-a-rock-paper-scissors-game-Verilog,754381955,Verilog,Design-a-rock-paper-scissors-game-Verilog,127,0,2024-02-08 11:03:08+00:00,[],None
103,https://github.com/Sourabh-Mallapur/ALU-Open-Source.git,2024-01-28 04:51:30+00:00,,0,Sourabh-Mallapur/ALU-Open-Source,749277883,Verilog,ALU-Open-Source,2268,0,2024-01-28 06:32:40+00:00,[],None
104,https://github.com/DouglasWWolf/indy_cabletest.git,2024-02-11 01:28:45+00:00,"100G QSFP data integrity test, implemented on Indy",0,DouglasWWolf/indy_cabletest,755767203,Verilog,indy_cabletest,682,0,2024-02-11 01:30:17+00:00,[],None
105,https://github.com/dangaradhya/SolveGPT.git,2024-02-02 19:50:04+00:00,Quadratic polynomial Solver that calculates the roots of a quadratic equation and a simultaneous linear equation solver that presents the solutions to a system of equations using Verilog on the DE1-SoC Board. Made this project in a team of 2.,0,dangaradhya/SolveGPT,752002363,Verilog,SolveGPT,19901,0,2024-02-02 20:05:48+00:00,[],None
106,https://github.com/karimelnekheily/8259_PIC.git,2024-02-10 11:36:52+00:00,,0,karimelnekheily/8259_PIC,755493969,Verilog,8259_PIC,6,0,2024-02-10 12:14:25+00:00,[],None
107,https://github.com/jainl28patel/Pipelined-Processor.git,2024-02-10 14:18:13+00:00,5-Staged pipelined process in verilog,0,jainl28patel/Pipelined-Processor,755538059,Verilog,Pipelined-Processor,129,0,2024-02-10 14:19:31+00:00,[],None
108,https://github.com/5ANS5/Scripting-and-Automation-using-tcl-scripts.git,2024-02-12 19:46:32+00:00,,0,5ANS5/Scripting-and-Automation-using-tcl-scripts,756509475,Verilog,Scripting-and-Automation-using-tcl-scripts,35,0,2024-02-13 06:36:21+00:00,[],None
109,https://github.com/charliechin424/NTUEE-Integrated-Circuit-Design.git,2024-01-29 06:10:59+00:00,,0,charliechin424/NTUEE-Integrated-Circuit-Design,749660007,Verilog,NTUEE-Integrated-Circuit-Design,14851,0,2024-02-12 15:12:46+00:00,[],None
110,https://github.com/Gorruy/fifo.git,2024-02-03 21:20:37+00:00,,0,Gorruy/fifo,752443127,Verilog,fifo,41,0,2024-02-07 01:30:10+00:00,[],None
111,https://github.com/vlsi27/RISCV.git,2024-02-14 08:17:37+00:00,,0,vlsi27/RISCV,757306328,Verilog,RISCV,2,0,2024-02-14 08:36:49+00:00,[],None
112,https://github.com/anvarakhmedov/tt-fpga-hdl-demo.git,2024-02-07 16:34:24+00:00,,0,anvarakhmedov/tt-fpga-hdl-demo,754224737,Verilog,tt-fpga-hdl-demo,34,0,2024-02-14 16:24:25+00:00,[],https://api.github.com/licenses/apache-2.0
113,https://github.com/vvaides27tamu/Single-Cycle-Processor.git,2024-02-14 20:50:22+00:00,,0,vvaides27tamu/Single-Cycle-Processor,757720195,Verilog,Single-Cycle-Processor,34,0,2024-02-14 20:51:49+00:00,[],None
114,https://github.com/vicharak-in/UART_RX_TX_DEMO.git,2024-02-05 09:59:06+00:00,,0,vicharak-in/UART_RX_TX_DEMO,753016524,Verilog,UART_RX_TX_DEMO,34064,0,2024-02-15 12:50:38+00:00,[],None
115,https://github.com/sipneat/COEN-122.git,2024-02-12 05:07:53+00:00,,0,sipneat/COEN-122,756164598,Verilog,COEN-122,622,0,2024-02-16 01:55:01+00:00,[],None
116,https://github.com/parvathy10/decade_counter.git,2024-02-05 13:50:23+00:00,,0,parvathy10/decade_counter,753112089,Verilog,decade_counter,27,0,2024-02-05 13:51:20+00:00,[],None
117,https://github.com/parvathy10/Single-Port-Memory-.git,2024-02-04 08:27:46+00:00,,0,parvathy10/Single-Port-Memory-,752571219,Verilog,Single-Port-Memory-,6,0,2024-02-04 08:29:05+00:00,[],None
118,https://github.com/AHassan001/DIGITAL-DESIGN-USING-VERILOG-AND-FPGA-FLOW-USING-VIVADO.git,2024-02-08 11:02:02+00:00,,0,AHassan001/DIGITAL-DESIGN-USING-VERILOG-AND-FPGA-FLOW-USING-VIVADO,754579355,Verilog,DIGITAL-DESIGN-USING-VERILOG-AND-FPGA-FLOW-USING-VIVADO,3622,0,2024-02-08 11:07:21+00:00,[],None
119,https://github.com/jsdus/ALU-BitSlice.git,2024-01-31 16:34:23+00:00,"Created 1-bit ALU  BitSlice by calling instances of personally developed modules of Full Adders, 2:1 MUXs, Arithmetic Block, and Logic Block.",0,jsdus/ALU-BitSlice,750949483,Verilog,ALU-BitSlice,13,0,2024-03-01 15:46:43+00:00,[],None
120,https://github.com/archnjh/riscv-cpu.git,2024-01-30 07:42:36+00:00,,0,archnjh/riscv-cpu,750209734,Verilog,riscv-cpu,9,0,2024-01-30 07:52:35+00:00,[],None
121,https://github.com/NawshinRaf/Digital-Logic-Circuits.git,2024-02-02 20:12:02+00:00,Find all necessary digital circuits that are the building blocks of our technological devices.,0,NawshinRaf/Digital-Logic-Circuits,752009687,Verilog,Digital-Logic-Circuits,227,0,2024-02-02 20:26:49+00:00,[],None
122,https://github.com/MaddieCrowley/tt06-dds-synthesizer.git,2024-02-08 23:18:30+00:00,"A continuation of the tt05 DDS collab, this time in longer than 2 weeks",0,MaddieCrowley/tt06-dds-synthesizer,754872368,Verilog,tt06-dds-synthesizer,140,0,2024-02-26 04:57:58+00:00,[],https://api.github.com/licenses/apache-2.0
123,https://github.com/stevehoover/tt-fpga-hdl-demo.git,2024-02-08 21:24:12+00:00,,0,stevehoover/tt-fpga-hdl-demo,754838184,Verilog,tt-fpga-hdl-demo,92,0,2024-02-15 18:23:55+00:00,[],https://api.github.com/licenses/apache-2.0
124,https://github.com/matixmaj100/FPGA-Verilog-.git,2024-01-25 17:25:46+00:00,,0,matixmaj100/FPGA-Verilog-,748297995,Verilog,FPGA-Verilog-,7,0,2024-01-25 17:37:34+00:00,[],None
125,https://github.com/jinjuCS/Computer-Organization-Experiment.git,2024-01-26 01:28:26+00:00,计卓寒假计组单周期CPU实验,0,jinjuCS/Computer-Organization-Experiment,748446292,Verilog,Computer-Organization-Experiment,7,0,2024-01-26 02:11:39+00:00,[],None
126,https://github.com/ucrdrk/Lab02-ALU.git,2024-01-25 22:25:38+00:00,,0,ucrdrk/Lab02-ALU,748403636,Verilog,Lab02-ALU,12349,0,2024-01-25 22:25:46+00:00,[],None
127,https://github.com/erenduyuk/Logisim-CPU-Design.git,2024-01-26 12:37:29+00:00,18-bit CPU design,0,erenduyuk/Logisim-CPU-Design,748637112,Verilog,Logisim-CPU-Design,983,0,2024-01-26 12:39:24+00:00,[],None
128,https://github.com/Cengizhan18/caravel_f.git,2024-01-25 10:09:52+00:00,,0,Cengizhan18/caravel_f,748118860,Verilog,caravel_f,11927,0,2024-01-25 10:10:34+00:00,[],https://api.github.com/licenses/apache-2.0
129,https://github.com/Miladbaf/CS303-Codes.git,2024-01-25 09:28:29+00:00,This repository contains codes developed for CS303 - Logic and Digital System Design course Fall 2023 at Sabanci University.,0,Miladbaf/CS303-Codes,748102648,Verilog,CS303-Codes,42,0,2024-01-25 09:31:54+00:00,[],https://api.github.com/licenses/mit
130,https://github.com/Sameer3434/16-bits-microcontroller.git,2024-01-27 17:48:59+00:00,,0,Sameer3434/16-bits-microcontroller,749142450,Verilog,16-bits-microcontroller,733,0,2024-01-27 18:05:51+00:00,[],None
131,https://github.com/SauravS-01/UART-Verilog.git,2024-01-27 18:02:12+00:00,,0,SauravS-01/UART-Verilog,749146188,Verilog,UART-Verilog,775,0,2024-01-27 18:03:39+00:00,[],None
132,https://github.com/musakartalengin/Integer-FloatingPoint.git,2024-01-26 20:32:11+00:00,tam sayı bir sayıyı IEEE-754 Formatında bir kayan noktay sayıya çeviren ip çekirdek tasarımı/ip core design that converts an integer number to a floating point in IEEE-754 Format,0,musakartalengin/Integer-FloatingPoint,748827301,Verilog,Integer-FloatingPoint,53,0,2024-01-26 20:34:11+00:00,[],None
133,https://github.com/elif-colak/verilog-project.git,2024-01-27 16:56:56+00:00,extending the VSCPU Verilog code with interrupt handling,0,elif-colak/verilog-project,749127234,Verilog,verilog-project,199,0,2024-01-27 17:21:30+00:00,[],None
134,https://github.com/rishabh4749/Useful_Lemmings.git,2024-01-27 05:40:24+00:00,,0,rishabh4749/Useful_Lemmings,748945721,Verilog,Useful_Lemmings,1,0,2024-01-27 05:41:23+00:00,[],None
135,https://github.com/aki415/Mini-ALU.git,2024-01-26 22:12:13+00:00,,0,aki415/Mini-ALU,748855972,Verilog,Mini-ALU,5,0,2024-01-26 22:15:02+00:00,[],None
136,https://github.com/Niotx/Verilog.git,2024-01-27 05:51:59+00:00,,0,Niotx/Verilog,748948195,Verilog,Verilog,51,0,2024-01-27 05:54:00+00:00,[],None
137,https://github.com/samli50801/Multi-bit-Large-scale-Boolean-Matching.git,2024-01-30 05:21:31+00:00,,0,samli50801/Multi-bit-Large-scale-Boolean-Matching,750163455,Verilog,Multi-bit-Large-scale-Boolean-Matching,26504,0,2024-01-30 14:08:33+00:00,[],None
138,https://github.com/PFarrokhi/video-overlay.git,2024-01-29 11:23:46+00:00,a Verilog module for putting overlay on a video.,0,PFarrokhi/video-overlay,749775430,Verilog,video-overlay,5,0,2024-01-29 15:55:38+00:00,[],None
139,https://github.com/WaterDragonUseless/Mips-processor.git,2024-01-29 14:36:33+00:00,,0,WaterDragonUseless/Mips-processor,749856779,Verilog,Mips-processor,543,0,2024-01-29 14:42:02+00:00,[],None
140,https://github.com/Cengizhan18/caravel.git,2024-01-29 11:41:00+00:00,,0,Cengizhan18/caravel,749781805,Verilog,caravel,11927,0,2024-01-29 11:41:40+00:00,[],https://api.github.com/licenses/apache-2.0
141,https://github.com/SDFGSJ/Logic-Design.git,2024-01-29 15:04:08+00:00,,0,SDFGSJ/Logic-Design,749869551,Verilog,Logic-Design,1461,0,2024-01-29 15:05:14+00:00,[],None
142,https://github.com/PSGLGDFaithbian7/Chen-Kaida.git,2024-01-30 16:22:32+00:00,,0,PSGLGDFaithbian7/Chen-Kaida,750429410,Verilog,Chen-Kaida,24,0,2024-01-30 16:26:00+00:00,[],None
143,https://github.com/YassineRouchad/Git_learning.git,2024-02-01 14:24:13+00:00,,0,YassineRouchad/Git_learning,751393043,Verilog,Git_learning,2,0,2024-02-01 15:08:29+00:00,[],None
144,https://github.com/navaneethans/VLSI-LAB-EXP-3.git,2024-02-01 06:44:10+00:00,,51,navaneethans/VLSI-LAB-EXP-3,751214223,Verilog,VLSI-LAB-EXP-3,3,0,2024-02-01 09:23:00+00:00,[],None
145,https://github.com/RESMIRNAIR/ELEVATOR_CONTROL.git,2024-02-02 04:47:30+00:00,,0,RESMIRNAIR/ELEVATOR_CONTROL,751677606,Verilog,ELEVATOR_CONTROL,49,0,2024-02-02 04:52:49+00:00,[],None
146,https://github.com/doctor-TZ/my_caravel.git,2024-02-02 02:06:17+00:00,,0,doctor-TZ/my_caravel,751637641,Verilog,my_caravel,11927,0,2024-02-02 03:28:22+00:00,[],https://api.github.com/licenses/apache-2.0
147,https://github.com/MVS-Abhiram/110-sequence-detection.git,2024-02-02 03:49:00+00:00,The output toggles when ever the sequence 110 is detected,0,MVS-Abhiram/110-sequence-detection,751663133,Verilog,110-sequence-detection,258,0,2024-02-02 03:53:03+00:00,[],None
148,https://github.com/alex-le2/verilog-basic.git,2024-02-02 14:35:08+00:00,This repository is for reviewing my basic Verilog skills.,0,alex-le2/verilog-basic,751882521,Verilog,verilog-basic,13,0,2024-02-02 16:12:52+00:00,[],None
149,https://github.com/fiddleyowl/fpga-labs-fa23-fiddleyowl.git,2024-02-04 07:18:41+00:00,,0,fiddleyowl/fpga-labs-fa23-fiddleyowl,752554618,Verilog,fpga-labs-fa23-fiddleyowl,512,0,2024-02-04 07:18:47+00:00,[],None
150,https://github.com/samhitapatil/FPU-Adder.git,2024-02-05 10:54:44+00:00,Verilog code for Floating Point Adder,0,samhitapatil/FPU-Adder,753039718,Verilog,FPU-Adder,10,0,2024-02-05 11:18:41+00:00,[],None
151,https://github.com/KILLER-BOY-999/KILLER-PRO.git,2024-01-26 08:58:03+00:00,KILLER-BOY PAID TOOL.,0,KILLER-BOY-999/KILLER-PRO,748561321,Verilog,KILLER-PRO,1879,0,2024-01-26 09:54:10+00:00,[],https://api.github.com/licenses/gpl-3.0
152,https://github.com/rcemcitak/Pipelined-Processor-with-Hazard-Unit-and-Branch-Predictor.git,2024-02-06 20:41:48+00:00,,0,rcemcitak/Pipelined-Processor-with-Hazard-Unit-and-Branch-Predictor,753809725,Verilog,Pipelined-Processor-with-Hazard-Unit-and-Branch-Predictor,1086,0,2024-02-06 20:45:29+00:00,[],None
153,https://github.com/rcemcitak/FPGA-Implementation-of-Simple-Quality-of-Service-based-Queuing.git,2024-02-06 20:36:17+00:00,,0,rcemcitak/FPGA-Implementation-of-Simple-Quality-of-Service-based-Queuing,753807513,Verilog,FPGA-Implementation-of-Simple-Quality-of-Service-based-Queuing,422,0,2024-02-06 20:38:41+00:00,[],None
154,https://github.com/darshilshah7/usrf.git,2024-02-14 04:37:39+00:00,,0,darshilshah7/usrf,757239882,Verilog,usrf,1,0,2024-02-14 04:41:09+00:00,[],None
155,https://github.com/vishnu-kuncham/IPA_Project.git,2024-02-14 17:44:25+00:00,,0,vishnu-kuncham/IPA_Project,757539834,Verilog,IPA_Project,3242,0,2024-02-14 18:22:08+00:00,[],None
156,https://github.com/MVS-Abhiram/Full_sub_using_half_adder.git,2024-02-09 01:12:38+00:00,This is an implementation of a full subtractor using halfadders,0,MVS-Abhiram/Full_sub_using_half_adder,754899304,Verilog,Full_sub_using_half_adder,209,0,2024-02-09 01:13:25+00:00,[],None
157,https://github.com/weilincao/uvm_demo.git,2024-02-08 03:26:09+00:00,,0,weilincao/uvm_demo,754435772,Verilog,uvm_demo,0,0,2024-02-08 03:43:29+00:00,[],None
158,https://github.com/ertanhll/Parking-Lot-Occupancy-Counter-Verilog.git,2024-02-07 23:48:51+00:00,,0,ertanhll/Parking-Lot-Occupancy-Counter-Verilog,754383564,Verilog,Parking-Lot-Occupancy-Counter-Verilog,184,0,2024-02-08 11:03:31+00:00,[],None
159,https://github.com/taranjot5k/Sequence-Memory-Game.git,2024-02-08 20:22:59+00:00,Sequence Memory Game. An exciting FPGA-based project designed to challenge your memory skills!,0,taranjot5k/Sequence-Memory-Game,754816842,Verilog,Sequence-Memory-Game,11,0,2024-02-08 20:29:18+00:00,[],None
160,https://github.com/Raheja-Sarthak/iisc_vlsi_8bit_sychronous_counter.git,2024-02-08 22:17:53+00:00,IISC's VLSI course - FPGA Assignment 3 - 8 bit synchronous counter,0,Raheja-Sarthak/iisc_vlsi_8bit_sychronous_counter,754855319,Verilog,iisc_vlsi_8bit_sychronous_counter,4,0,2024-02-08 22:19:50+00:00,[],None
161,https://github.com/himanshu1308/HDL_BITS-SOLUTIONS.git,2024-02-10 09:57:02+00:00,,1,himanshu1308/HDL_BITS-SOLUTIONS,755468376,Verilog,HDL_BITS-SOLUTIONS,10,0,2024-02-10 10:00:18+00:00,[],None
162,https://github.com/calikusx/openlane_caravel.git,2024-02-12 15:33:02+00:00,,0,calikusx/openlane_caravel,756396498,Verilog,openlane_caravel,11927,0,2024-02-12 15:33:42+00:00,[],https://api.github.com/licenses/apache-2.0
163,https://github.com/mohamd-khaled/100-Day-RTL.git,2024-02-10 20:55:44+00:00,100 days of RTL coding,0,mohamd-khaled/100-Day-RTL,755702801,Verilog,100-Day-RTL,25,0,2024-02-10 21:14:16+00:00,[],None
164,https://github.com/shevrotin/theReset.git,2024-02-13 11:18:36+00:00,,0,shevrotin/theReset,756818606,Verilog,theReset,495,0,2024-02-13 11:20:15+00:00,[],None
165,https://github.com/lifzcn/HDLBits-Project.git,2024-02-01 13:00:37+00:00,HDLBits - Verilog Practice,0,lifzcn/HDLBits-Project,751356936,Verilog,HDLBits-Project,16,0,2024-02-04 08:47:36+00:00,[],None
166,https://github.com/Mr-Kaushal-22/UART_Simulation.git,2024-02-06 11:11:20+00:00,,0,Mr-Kaushal-22/UART_Simulation,753559442,Verilog,UART_Simulation,153,0,2024-02-08 03:41:01+00:00,[],None
167,https://github.com/aliekhtera/MIPS_Data_Path_Implementation.git,2024-02-09 15:28:06+00:00,,0,aliekhtera/MIPS_Data_Path_Implementation,755175683,Verilog,MIPS_Data_Path_Implementation,8,0,2024-03-04 07:48:00+00:00,[],None
168,https://github.com/bboydt/ecp5-soc.git,2024-01-31 04:51:17+00:00,"An ""SoC"" for the ECP5 FPGA.",1,bboydt/ecp5-soc,750672899,Verilog,ecp5-soc,39,0,2024-01-31 04:57:43+00:00,[],None
169,https://github.com/youya199/Test_ram_write.git,2024-02-12 17:31:20+00:00,,0,youya199/Test_ram_write,756450837,Verilog,Test_ram_write,17990,0,2024-02-12 17:33:33+00:00,[],None
170,https://github.com/SylvieAsija/Mini_SRC.git,2024-01-26 21:04:12+00:00,ELEC 374 W2024 Term Project,0,SylvieAsija/Mini_SRC,748836606,Verilog,Mini_SRC,1412,0,2024-02-01 15:07:06+00:00,[],https://api.github.com/licenses/gpl-3.0
171,https://github.com/aebubebell/cis571.git,2024-01-26 16:57:28+00:00,,0,aebubebell/cis571,748739672,Verilog,cis571,4233,0,2024-03-31 07:09:26+00:00,[],https://api.github.com/licenses/mit
172,https://github.com/eshitasangani/ece5760.git,2024-01-29 03:18:24+00:00,ECE 5760 labs,0,eshitasangani/ece5760,749614262,Verilog,ece5760,314387,0,2024-04-12 02:02:21+00:00,[],None
173,https://github.com/GuhanRajasekar/FPGA_course_assignments.git,2024-01-26 16:00:34+00:00,This repository contains program solutions for the course Digital System Design With FPGA,0,GuhanRajasekar/FPGA_course_assignments,748716907,Verilog,FPGA_course_assignments,120517,0,2024-03-27 16:35:35+00:00,[],None
174,https://github.com/tarobuns/UCR-CS161L-Lab01-ClocksAndTestBenches.git,2024-01-25 22:52:24+00:00,,0,tarobuns/UCR-CS161L-Lab01-ClocksAndTestBenches,748410677,Verilog,UCR-CS161L-Lab01-ClocksAndTestBenches,12196,0,2024-01-25 22:52:31+00:00,[],None
175,https://github.com/hhawley/Cardboard-Weather-Box.git,2024-01-26 15:43:07+00:00,,0,hhawley/Cardboard-Weather-Box,748710124,Verilog,Cardboard-Weather-Box,8,0,2024-01-26 15:46:10+00:00,[],None
176,https://github.com/long385552/SoC_final.git,2024-01-28 06:42:07+00:00,,0,long385552/SoC_final,749299171,Verilog,SoC_final,12752,0,2024-01-28 06:43:46+00:00,[],None
177,https://github.com/219677186/2311LabTest1.git,2024-01-29 18:45:36+00:00,,0,219677186/2311LabTest1,749973162,Verilog,2311LabTest1,136570,0,2024-01-29 19:28:46+00:00,[],None
178,https://github.com/Royalmaddy007/5_Stage_Pipeline_MIPS_Processor.git,2024-01-30 14:01:29+00:00,"This project designs a 5-stage pipelined microprocessor in Verilog, with stages: Instruction Fetch (IF), Decode (ID), Execution (EX), Memory Access (MEM), and Write Back (WB), enhancing throughput by processing multiple instructions simultaneously.",0,Royalmaddy007/5_Stage_Pipeline_MIPS_Processor,750362395,Verilog,5_Stage_Pipeline_MIPS_Processor,71,0,2024-01-30 14:04:54+00:00,[],None
179,https://github.com/ZFXS55/Interpolation-filter-based-on-the-FPGA.git,2024-01-30 14:02:53+00:00,"This design implements the simulation of the interpolation filter in FPGA, in which a 256-point sinusoidal signal is interpolated 25 times, and the filter is set to 99th order. ​",0,ZFXS55/Interpolation-filter-based-on-the-FPGA,750363030,Verilog,Interpolation-filter-based-on-the-FPGA,12618,0,2024-01-30 14:14:30+00:00,[],None
180,https://github.com/corneliawg/cs272.git,2024-01-30 02:57:35+00:00,,0,corneliawg/cs272,750125174,Verilog,cs272,15552,0,2024-01-30 03:39:09+00:00,[],None
181,https://github.com/NitoHGa/Contador-de-pulsos----Verilog.git,2024-01-30 00:21:23+00:00,"The implementation involves  a product counter with reset and hold options. This design incorporates debounce, memory, and seven-segment display multiplexing. It was developed in Verilog for deployment on an FPGA or CPLD.",0,NitoHGa/Contador-de-pulsos----Verilog,750082775,Verilog,Contador-de-pulsos----Verilog,4,0,2024-01-30 00:25:38+00:00,[],None
182,https://github.com/EngAhmed21/RISC-V-Single-Cycle-Processor.git,2024-01-30 02:04:39+00:00,Implementation of the RISC V Single-Cycle Processor ,1,EngAhmed21/RISC-V-Single-Cycle-Processor,750109874,Verilog,RISC-V-Single-Cycle-Processor,13,0,2024-01-30 02:05:43+00:00,[],None
183,https://github.com/Rithikiitb/adder.git,2024-01-31 09:27:21+00:00,,0,Rithikiitb/adder,750767209,Verilog,adder,11927,0,2024-01-31 09:27:59+00:00,[],https://api.github.com/licenses/apache-2.0
184,https://github.com/Mohammad-Azr/FPGA-Digital-Oscilloscope-2.git,2024-01-29 12:28:01+00:00,,0,Mohammad-Azr/FPGA-Digital-Oscilloscope-2,749799952,Verilog,FPGA-Digital-Oscilloscope-2,25,0,2024-01-29 14:32:06+00:00,[],None
185,https://github.com/RESMIRNAIR/MEALY_1101.git,2024-01-30 10:30:41+00:00,,0,RESMIRNAIR/MEALY_1101,750275712,Verilog,MEALY_1101,52,0,2024-01-30 10:34:58+00:00,[],None
186,https://github.com/gtxzsxxk/dw-apb-uart-8250.git,2024-01-30 16:15:56+00:00,8250 uart peripheral,0,gtxzsxxk/dw-apb-uart-8250,750426379,Verilog,dw-apb-uart-8250,23,0,2024-01-30 16:39:40+00:00,[],None
187,https://github.com/PK1203/UART-Verilog.git,2024-02-02 09:59:07+00:00,,0,PK1203/UART-Verilog,751777308,Verilog,UART-Verilog,6,0,2024-02-02 20:49:36+00:00,[],None
188,https://github.com/lukemorrison1341/SimpleCPUProj.git,2024-02-02 19:45:03+00:00,,0,lukemorrison1341/SimpleCPUProj,752000473,Verilog,SimpleCPUProj,14,0,2024-02-02 20:56:26+00:00,[],None
189,https://github.com/pulisrimanikanta/verilogcodes.git,2024-02-04 17:20:48+00:00,,0,pulisrimanikanta/verilogcodes,752741788,Verilog,verilogcodes,0,0,2024-02-04 17:22:47+00:00,[],None
190,https://github.com/Vick210282/winograd_teach.git,2024-02-02 15:03:30+00:00,,0,Vick210282/winograd_teach,751894127,Verilog,winograd_teach,88,0,2024-02-02 15:09:43+00:00,[],None
191,https://github.com/Navjot4/30-Days-Verilog-Challenge.git,2024-01-29 06:33:41+00:00,,0,Navjot4/30-Days-Verilog-Challenge,749667126,Verilog,30-Days-Verilog-Challenge,779,0,2024-01-30 05:16:25+00:00,[],None
192,https://github.com/Ghaithq/Adders-And-Multiplies.git,2024-01-28 13:59:31+00:00,,1,Ghaithq/Adders-And-Multiplies,749408266,Verilog,Adders-And-Multiplies,31674,0,2024-01-28 14:01:53+00:00,[],None
193,https://github.com/MVS-Abhiram/4_Bit_up-down_counter_8_states.git,2024-02-07 03:25:02+00:00,This is a 4 bit up down counter which countes only from 0 - 8 in up count and 8 - 0 in down count,0,MVS-Abhiram/4_Bit_up-down_counter_8_states,753922812,Verilog,4_Bit_up-down_counter_8_states,143,0,2024-02-07 03:27:42+00:00,[],None
194,https://github.com/Kevin-Thomas-Ajax/Logic-Gates-Verilog.git,2024-02-08 13:17:08+00:00,,0,Kevin-Thomas-Ajax/Logic-Gates-Verilog,754631987,Verilog,Logic-Gates-Verilog,8,0,2024-02-08 13:20:31+00:00,[],None
195,https://github.com/Griseoh/SPI-Protocol.git,2024-02-09 23:42:30+00:00,"This repository contains a basic implementation of Master-sided SPI protocol, implemented in Verilog HDL",0,Griseoh/SPI-Protocol,755344985,Verilog,SPI-Protocol,6,0,2024-02-09 23:43:42+00:00,[],None
196,https://github.com/Praranya/1x3-Router.git,2024-02-07 12:05:43+00:00,,0,Praranya/1x3-Router,754102318,Verilog,1x3-Router,191,0,2024-02-08 18:53:16+00:00,[],None
197,https://github.com/Praranya/UART.git,2024-02-05 12:07:04+00:00,,0,Praranya/UART,753068190,Verilog,UART,247,0,2024-02-08 18:53:49+00:00,[],None
198,https://github.com/arcotabidali/Exponential-Function-baseline-pipeline-shared.git,2024-02-12 05:00:06+00:00,,0,arcotabidali/Exponential-Function-baseline-pipeline-shared,756162805,Verilog,Exponential-Function-baseline-pipeline-shared,3361,0,2024-02-12 05:10:30+00:00,[],None
199,https://github.com/melferranti/Pipelined-CPU.git,2024-02-13 00:44:20+00:00,,0,melferranti/Pipelined-CPU,756618400,Verilog,Pipelined-CPU,5,0,2024-02-13 00:44:50+00:00,[],None
200,https://github.com/melferranti/RCA-and-CSA-Adders.git,2024-02-13 00:37:30+00:00,,0,melferranti/RCA-and-CSA-Adders,756616883,Verilog,RCA-and-CSA-Adders,10,0,2024-02-13 00:39:03+00:00,[],None
201,https://github.com/KishanDESE/Efficient_FFT_on_FPGA.git,2024-02-12 22:13:43+00:00,Efficient and fast approximate 16 bit 8 point FFT calculation by only addition.(Avoiding multiplication),0,KishanDESE/Efficient_FFT_on_FPGA,756581646,Verilog,Efficient_FFT_on_FPGA,352,0,2024-02-12 22:37:01+00:00,[],None
202,https://github.com/AlexiaIoana1/Image-Processing.git,2024-02-13 06:27:30+00:00,,0,AlexiaIoana1/Image-Processing,756706614,Verilog,Image-Processing,235,0,2024-02-13 06:35:26+00:00,[],None
203,https://github.com/buhp/pb6502vga.git,2024-02-12 18:17:36+00:00,A graphics chip for my 6502 breadboard computer.,0,buhp/pb6502vga,756470442,Verilog,pb6502vga,21,0,2024-02-12 18:33:41+00:00,[],None
204,https://github.com/DouglasWWolf/tb_i2c.git,2024-01-27 02:02:29+00:00,Testbed for AXI IIC front end,0,DouglasWWolf/tb_i2c,748904082,Verilog,tb_i2c,130498,0,2024-01-28 05:34:22+00:00,[],None
205,https://github.com/kapil-0511/8-Bit-ALU.git,2024-02-13 11:46:37+00:00,,0,kapil-0511/8-Bit-ALU,756829372,Verilog,8-Bit-ALU,394,0,2024-02-13 11:47:37+00:00,[],None
206,https://github.com/YassineRouchad/Git_learning_review.git,2024-02-12 15:21:12+00:00,,0,YassineRouchad/Git_learning_review,756391129,Verilog,Git_learning_review,1,0,2024-02-12 15:30:00+00:00,[],None
207,https://github.com/kaitlynlie/grey-scale.git,2024-02-08 21:42:51+00:00,,0,kaitlynlie/grey-scale,754844062,Verilog,grey-scale,5,0,2024-02-14 01:50:26+00:00,[],None
208,https://github.com/kaitlynlie/cpu.git,2024-02-08 22:25:39+00:00,,0,kaitlynlie/cpu,754857754,Verilog,cpu,15,0,2024-02-16 00:22:33+00:00,[],None
209,https://github.com/ShahnamFeyzian/Computer-Architecture-Course.git,2024-02-13 10:20:59+00:00,,0,ShahnamFeyzian/Computer-Architecture-Course,756794191,Verilog,Computer-Architecture-Course,294,0,2024-02-16 10:51:32+00:00,[],https://api.github.com/licenses/mit
210,https://github.com/Chtholly-Boss/cpu_design.git,2024-02-11 14:56:20+00:00,Learning of Design CPU yourself,0,Chtholly-Boss/cpu_design,755947678,Verilog,cpu_design,6274,0,2024-02-11 15:09:02+00:00,[],None
211,https://github.com/paridhiarya/FPGA_HDL_Project.git,2024-02-13 08:55:15+00:00,,0,paridhiarya/FPGA_HDL_Project,756757805,Verilog,FPGA_HDL_Project,42,0,2024-02-15 17:40:47+00:00,[],None
212,https://github.com/hocamole/RISCV_CPU.git,2024-01-28 05:21:07+00:00,Implementation of simple RV32I-based 5-stage pipelined CPU,0,hocamole/RISCV_CPU,749283415,Verilog,RISCV_CPU,21212,0,2024-02-27 04:28:04+00:00,[],None
213,https://github.com/urish/tt06-analog-test.git,2024-01-30 15:46:27+00:00,Test repo for Tiny Tapeout analog modules,0,urish/tt06-analog-test,750412435,Verilog,tt06-analog-test,30,0,2024-01-30 15:50:15+00:00,[],https://api.github.com/licenses/apache-2.0
214,https://github.com/flarrow19/Reconfigurable-Computing.git,2024-02-09 04:06:15+00:00,,0,flarrow19/Reconfigurable-Computing,754937203,Verilog,Reconfigurable-Computing,4979,0,2024-02-09 04:08:06+00:00,[],None
215,https://github.com/lynchu/NYCU-Microprocessor-Systems-2024.git,2024-01-26 11:21:25+00:00,,0,lynchu/NYCU-Microprocessor-Systems-2024,748611115,Verilog,NYCU-Microprocessor-Systems-2024,8626,0,2024-03-05 09:45:59+00:00,[],None
216,https://github.com/enieman/tt-fpga-hdl-demo.git,2024-02-07 16:37:13+00:00,,0,enieman/tt-fpga-hdl-demo,754226110,Verilog,tt-fpga-hdl-demo,365,0,2024-02-09 18:34:46+00:00,[],https://api.github.com/licenses/apache-2.0
217,https://github.com/Sahilkumar19/Computer-Organization-System.git,2024-01-27 14:06:02+00:00,,0,Sahilkumar19/Computer-Organization-System,749072053,Verilog,Computer-Organization-System,331,0,2024-02-09 18:08:43+00:00,[],None
218,https://github.com/steph-the-burrito96/30.110-DSL.git,2024-02-01 03:55:58+00:00,,0,steph-the-burrito96/30.110-DSL,751166286,Verilog,30.110-DSL,32,0,2024-02-02 04:03:01+00:00,[],None
219,https://github.com/CYx-HHH/verilogbase.git,2024-01-25 17:00:48+00:00,,0,CYx-HHH/verilogbase,748287685,Verilog,verilogbase,260,0,2024-01-25 17:12:41+00:00,[],None
220,https://github.com/Lena-2023/DDS.git,2024-01-31 14:57:23+00:00,,0,Lena-2023/DDS,750904826,Verilog,DDS,48,0,2024-03-19 06:53:53+00:00,[],https://api.github.com/licenses/mit
221,https://github.com/ishancrat/Advanced-Encryption-Standard.git,2024-02-08 15:43:55+00:00,,0,ishancrat/Advanced-Encryption-Standard,754697278,Verilog,Advanced-Encryption-Standard,11,0,2024-02-08 15:44:58+00:00,[],None
222,https://github.com/VimalWill/NonLinearApproxEngine.git,2024-02-06 05:15:41+00:00,SW and HW Design for Approximated Non-Linear functions used in ML Systems,0,VimalWill/NonLinearApproxEngine,753429549,Verilog,NonLinearApproxEngine,24,0,2024-03-31 19:44:57+00:00,[],None
223,https://github.com/R3nnyWeb/labs8.git,2024-02-07 12:25:37+00:00,,0,R3nnyWeb/labs8,754110712,Verilog,labs8,29422,0,2024-03-22 19:22:29+00:00,[],None
224,https://github.com/CedricRev/simple-calculator-verilog.git,2024-01-26 09:26:59+00:00,"An 8-bit calculator that can multiply, add and subtract. Created and simulated in Quartus Prime and physically implemented in DEC-SOC1 FPGA.",0,CedricRev/simple-calculator-verilog,748571232,Verilog,simple-calculator-verilog,25,0,2024-01-26 10:08:17+00:00,"['adder-subtractor', 'full-adder', 'multiplexer', 'multiplier', 'verilog']",https://api.github.com/licenses/mit
225,https://github.com/flexs2n/Snake_Game.git,2024-01-26 13:01:39+00:00,,0,flexs2n/Snake_Game,748645555,Verilog,Snake_Game,12,0,2024-01-26 13:06:50+00:00,[],None
226,https://github.com/NitoHGa/Motor-a-pasos---Verilog.git,2024-01-26 18:07:23+00:00,"Verilog code that outlines the behavior of a stepper motor. This code allows for the activation and deactivation of the motor, along with the capability to control its speed by varying the pulse width through external actuators. Additionally, an anti-bounce system has been implemented for the push buttons used in the system.",0,NitoHGa/Motor-a-pasos---Verilog,748766702,Verilog,Motor-a-pasos---Verilog,7,0,2024-01-26 18:11:34+00:00,[],None
227,https://github.com/johnsiak/UART-Channel.git,2024-01-28 18:44:50+00:00,Create a UART Channel (Receiver & Transmitter),0,johnsiak/UART-Channel,749496955,Verilog,UART-Channel,363,0,2024-01-28 18:46:07+00:00,[],None
228,https://github.com/SDFGSJ/Logic-Design-Laboratory.git,2024-01-29 15:05:57+00:00,,0,SDFGSJ/Logic-Design-Laboratory,749870350,Verilog,Logic-Design-Laboratory,26090,0,2024-01-29 15:07:31+00:00,[],None
229,https://github.com/MVS-Abhiram/Priority_Encoder_using_Task.git,2024-01-30 06:56:10+00:00,"This code implements a 8:3 priority encoder , RTL and TB with task only.",0,MVS-Abhiram/Priority_Encoder_using_Task,750193514,Verilog,Priority_Encoder_using_Task,271,0,2024-01-30 06:58:28+00:00,[],None
230,https://github.com/TheSonders/BinaryToSevenSegment.git,2024-01-30 17:09:21+00:00,Binary to decimal conversion for 7 segments using shift registers,0,TheSonders/BinaryToSevenSegment,750451301,Verilog,BinaryToSevenSegment,3,0,2024-01-30 17:26:45+00:00,"['7segment', 'binarytodecimal', 'display']",None
231,https://github.com/amr-elberry/UART_TX_parmeterized_unit.git,2024-01-30 19:23:05+00:00,,0,amr-elberry/UART_TX_parmeterized_unit,750508952,Verilog,UART_TX_parmeterized_unit,3,0,2024-01-30 19:25:51+00:00,[],None
232,https://github.com/Yeeshukant/Hardware-design-Vivado.git,2024-02-02 04:22:19+00:00,,0,Yeeshukant/Hardware-design-Vivado,751671200,Verilog,Hardware-design-Vivado,1,0,2024-02-02 04:24:13+00:00,[],None
233,https://github.com/RESMIRNAIR/MOORE_1011.git,2024-01-30 10:25:29+00:00,,0,RESMIRNAIR/MOORE_1011,750273553,Verilog,MOORE_1011,52,0,2024-01-30 10:29:04+00:00,[],None
234,https://github.com/UnifiedTable/ElasticTable.git,2024-02-02 06:59:00+00:00,,0,UnifiedTable/ElasticTable,751715421,Verilog,ElasticTable,1184,0,2024-02-02 07:04:00+00:00,[],None
235,https://github.com/vasilomanitaros/Hardware-I-Project.git,2024-02-03 13:16:06+00:00,,0,vasilomanitaros/Hardware-I-Project,752244889,Verilog,Hardware-I-Project,1160,0,2024-02-03 13:18:23+00:00,[],None
236,https://github.com/uC-Manny/Caravel.git,2024-02-04 05:26:56+00:00,,0,uC-Manny/Caravel,752530169,Verilog,Caravel,11927,0,2024-02-04 05:27:36+00:00,[],https://api.github.com/licenses/apache-2.0
237,https://github.com/avinashhere017/32-bit-Unsigned-Divider-in-Verilog.git,2024-02-01 16:01:49+00:00,,0,avinashhere017/32-bit-Unsigned-Divider-in-Verilog,751437825,Verilog,32-bit-Unsigned-Divider-in-Verilog,12,0,2024-02-01 16:03:37+00:00,[],None
238,https://github.com/Hamza-Ali10/VGA.git,2024-02-05 17:01:50+00:00,"Video Graphics Array (VGA) is a video display controller and accompanying de facto graphics standard, first introduced with the IBM PS/2 line of computers in 1987, which became ubiquitous in the IBM PC compatible industry within three years",0,Hamza-Ali10/VGA,753201446,Verilog,VGA,4,0,2024-02-05 17:02:39+00:00,[],None
239,https://github.com/Hamza-Ali10/Dealing-with-Buttons-.git,2024-02-05 16:57:47+00:00,Dealing with Buttons ,0,Hamza-Ali10/Dealing-with-Buttons-,753199671,Verilog,Dealing-with-Buttons-,3,0,2024-02-05 16:58:31+00:00,[],None
240,https://github.com/umbra-mortis123/verilog.git,2024-02-06 11:31:54+00:00,,0,umbra-mortis123/verilog,753567307,Verilog,verilog,1,0,2024-02-06 12:05:26+00:00,[],None
241,https://github.com/AMKelsey99/MIPS-Machine.git,2024-02-06 21:17:47+00:00,A Verilog implementation of a 16-bit MIPS CPU,0,AMKelsey99/MIPS-Machine,753822669,Verilog,MIPS-Machine,5,0,2024-02-06 21:18:14+00:00,[],None
242,https://github.com/JAIDEEPRABHU/Microcontroller.git,2024-02-07 12:04:54+00:00,,0,JAIDEEPRABHU/Microcontroller,754101970,Verilog,Microcontroller,8,0,2024-02-07 12:05:44+00:00,[],None
243,https://github.com/VanashreeParate/4in1Counter.git,2024-02-07 08:13:51+00:00,,0,VanashreeParate/4in1Counter,754009629,Verilog,4in1Counter,4,0,2024-02-07 08:18:15+00:00,[],None
244,https://github.com/leetxgod/tef1002_te0820_fmcomms2.git,2024-02-09 10:04:09+00:00,,0,leetxgod/tef1002_te0820_fmcomms2,755038757,Verilog,tef1002_te0820_fmcomms2,20393,0,2024-02-09 10:52:56+00:00,[],None
245,https://github.com/mdavidsaver/xvc_sim.git,2024-02-04 17:01:59+00:00,XVC cable+device simulation,0,mdavidsaver/xvc_sim,752735953,Verilog,xvc_sim,11,0,2024-02-12 04:30:02+00:00,[],
246,https://github.com/tsk-balaji/NewRepositoryGithubSession.git,2024-02-09 13:38:15+00:00,,0,tsk-balaji/NewRepositoryGithubSession,755130506,Verilog,NewRepositoryGithubSession,1,0,2024-02-12 12:18:34+00:00,[],None
247,https://github.com/tanishshah07/DMC-with-separate-memory-module.git,2024-01-29 04:12:49+00:00,,0,tanishshah07/DMC-with-separate-memory-module,749627432,Verilog,DMC-with-separate-memory-module,84,0,2024-01-29 04:16:06+00:00,[],None
248,https://github.com/YINGZHENG01/test_repo.git,2024-02-14 07:00:18+00:00,a repository used to learn git,0,YINGZHENG01/test_repo,757281424,Verilog,test_repo,1,0,2024-02-14 07:19:19+00:00,[],None
249,https://github.com/devin-macy/tt-fpga-hdl-demo.git,2024-02-08 21:33:48+00:00,Tiny Tapeout FPGA HDL Source Demo,0,devin-macy/tt-fpga-hdl-demo,754841155,Verilog,tt-fpga-hdl-demo,111,0,2024-02-09 18:34:41+00:00,[],https://api.github.com/licenses/apache-2.0
250,https://github.com/vicharak-in/LED_BLINKING_DEMO.git,2024-01-30 13:16:29+00:00,,0,vicharak-in/LED_BLINKING_DEMO,750342384,Verilog,LED_BLINKING_DEMO,3,0,2024-01-30 13:20:42+00:00,[],None
251,https://github.com/Neisseri/cod23-my.git,2024-02-13 13:10:33+00:00,计组小实验1-6,0,Neisseri/cod23-my,756864237,Verilog,cod23-my,125,0,2024-02-13 13:14:01+00:00,[],None
252,https://github.com/Abdelrahman1810/Combinational_Logic_Design_Examples.git,2024-02-13 21:03:41+00:00,some Combinational Logic Design examples  and it's solutions using verilog,0,Abdelrahman1810/Combinational_Logic_Design_Examples,757120595,Verilog,Combinational_Logic_Design_Examples,2298,0,2024-02-13 21:24:51+00:00,[],None
253,https://github.com/jimmyw/my_fpga.git,2024-02-14 08:57:26+00:00,FPGA playground,0,jimmyw/my_fpga,757320735,Verilog,my_fpga,6,0,2024-02-14 08:57:41+00:00,[],None
254,https://github.com/williamhere/Verilog.git,2024-02-14 06:10:12+00:00,This is HDL class code ,0,williamhere/Verilog,757265740,Verilog,Verilog,23106,0,2024-02-14 06:46:53+00:00,[],None
255,https://github.com/HamishWood/AES_CTR_128.git,2024-02-14 17:02:46+00:00,Advanced Encryption Standard Counter Mode 128 bit for FPGAs,0,HamishWood/AES_CTR_128,757522872,Verilog,AES_CTR_128,165,0,2024-02-14 17:04:48+00:00,[],https://api.github.com/licenses/mit
256,https://github.com/CharanMV2913/CORDIC-VERILOG.git,2024-02-02 07:34:05+00:00,,0,CharanMV2913/CORDIC-VERILOG,751726693,Verilog,CORDIC-VERILOG,10,0,2024-02-02 07:45:13+00:00,[],None
257,https://github.com/TravisJohnson2/Elevator_System.git,2024-02-08 19:58:45+00:00,Elevator System was designed in Verilog HDL using only combinational and sequential logic,0,TravisJohnson2/Elevator_System,754807046,Verilog,Elevator_System,33,0,2024-02-12 11:02:56+00:00,[],https://api.github.com/licenses/gpl-3.0
258,https://github.com/chi-an1997/Bubble-Sorting-on-FPGA.git,2024-01-31 06:18:39+00:00,Bubble Sorting is one of the most famous sorting algorithm.,0,chi-an1997/Bubble-Sorting-on-FPGA,750698880,Verilog,Bubble-Sorting-on-FPGA,5,0,2024-01-31 07:59:23+00:00,[],None
259,https://github.com/MananJoshi07/AHB-to-APB-Bridge.git,2024-02-14 04:01:23+00:00,"This repository contains the work done during the project under taken as a part of PG-Diploma in VLSI. The project title is ""Design & Verification of AHB to APB Bridge"". For the scope of this project and PoC we used Single Master - Single Slave configuration, and we are using fixed data size of 32 bits. ",0,MananJoshi07/AHB-to-APB-Bridge,757230624,Verilog,AHB-to-APB-Bridge,30,0,2024-02-28 08:54:46+00:00,[],None
260,https://github.com/elec374/elec374test.git,2024-01-25 15:58:05+00:00,,0,elec374/elec374test,748260608,Verilog,elec374test,7658,0,2024-02-01 14:03:20+00:00,[],None
261,https://github.com/randon358/30.110.git,2024-02-01 09:34:16+00:00,Digital Systems Lab HW ,0,randon358/30.110,751276001,Verilog,30.110,56,0,2024-02-01 09:51:03+00:00,[],None
262,https://github.com/themohitnair/DCOLab.git,2024-01-31 16:06:02+00:00,A collection of DCO Laboratory Verilog Scripts,0,themohitnair/DCOLab,750936582,Verilog,DCOLab,57,0,2024-01-31 16:10:49+00:00,[],None
263,https://github.com/SiwaNetwork/CASS.git,2024-02-04 21:01:29+00:00,CASS RSCC,0,SiwaNetwork/CASS,752805058,Verilog,CASS,96206,0,2024-03-30 13:28:28+00:00,[],None
264,https://github.com/23373/TLV2548.git,2024-01-25 09:36:30+00:00,,0,23373/TLV2548,748105807,Verilog,TLV2548,6,0,2024-01-25 09:36:49+00:00,[],None
265,https://github.com/rohx17/COMMAND-CONTROL-ROBOT-ON-FIELD-PROGRAMMABLE-GATE-ARRAY.git,2024-01-25 02:42:38+00:00,,0,rohx17/COMMAND-CONTROL-ROBOT-ON-FIELD-PROGRAMMABLE-GATE-ARRAY,747980879,Verilog,COMMAND-CONTROL-ROBOT-ON-FIELD-PROGRAMMABLE-GATE-ARRAY,5373,0,2024-01-25 02:44:45+00:00,[],None
266,https://github.com/Cengizhan18/caravel_f1.git,2024-01-25 10:13:45+00:00,,0,Cengizhan18/caravel_f1,748120394,Verilog,caravel_f1,11927,0,2024-01-25 10:14:27+00:00,[],https://api.github.com/licenses/apache-2.0
267,https://github.com/joyou159/Verilog-Based-Door-Lock-System.git,2024-01-26 04:50:46+00:00,Implementation of door lock system for security purposes using Verilog (HDL),1,joyou159/Verilog-Based-Door-Lock-System,748492577,Verilog,Verilog-Based-Door-Lock-System,716,0,2024-01-26 06:34:30+00:00,[],None
268,https://github.com/SauravS-01/Memories.git,2024-01-27 16:41:53+00:00,"This repository contains implementation of RAM, ROM, and, FIFO using verilog",0,SauravS-01/Memories,749122699,Verilog,Memories,1306,0,2024-01-27 17:39:48+00:00,[],None
269,https://github.com/umazhar/AD9634-SPI-Controller-SDF.git,2024-01-29 05:31:18+00:00,SPI Controller for AD9364 RF Agile Transciever,0,umazhar/AD9634-SPI-Controller-SDF,749648077,Verilog,AD9634-SPI-Controller-SDF,552,0,2024-01-29 05:54:24+00:00,[],https://api.github.com/licenses/mit
270,https://github.com/techmanyuan/fpga.git,2024-01-26 02:35:57+00:00,基于fpga的信号分离系统（2023年电赛H题国奖）,0,techmanyuan/fpga,748462231,Verilog,fpga,7755,0,2024-01-28 02:39:41+00:00,[],None
271,https://github.com/SuchithraM008/HDL-code-to-compute-Y-DX-using-distributed-arithmetic.git,2024-01-29 11:10:27+00:00,,0,SuchithraM008/HDL-code-to-compute-Y-DX-using-distributed-arithmetic,749770513,Verilog,HDL-code-to-compute-Y-DX-using-distributed-arithmetic,170,0,2024-01-29 11:11:50+00:00,[],https://api.github.com/licenses/apache-2.0
272,https://github.com/MFahadSohail/Numeric-Quest-De-Lite-Edition.git,2024-01-29 20:11:51+00:00,,0,MFahadSohail/Numeric-Quest-De-Lite-Edition,750006954,Verilog,Numeric-Quest-De-Lite-Edition,13,0,2024-01-29 20:13:37+00:00,[],None
273,https://github.com/DanielGebraiel/AES-Encryption-Decryption.git,2024-01-30 11:40:51+00:00,,1,DanielGebraiel/AES-Encryption-Decryption,750303563,Verilog,AES-Encryption-Decryption,2152,0,2024-01-30 11:41:23+00:00,[],None
274,https://github.com/narim08/Digital-logic-circuit-2.git,2024-02-01 04:56:28+00:00,디논2 과제 백업,0,narim08/Digital-logic-circuit-2,751181742,Verilog,Digital-logic-circuit-2,328,0,2024-02-01 05:17:08+00:00,[],None
275,https://github.com/MVS-Abhiram/Bidirectional_buffer.git,2024-02-01 16:24:33+00:00,Here is an implementation of a bidirectional buffer,0,MVS-Abhiram/Bidirectional_buffer,751448081,Verilog,Bidirectional_buffer,130,0,2024-02-01 16:25:41+00:00,[],None
276,https://github.com/kapil-0511/FIR-Filter.git,2024-02-01 18:02:11+00:00,VLSI Implementation of Finite Impulse Response Filters,0,kapil-0511/FIR-Filter,751491414,Verilog,FIR-Filter,337,0,2024-02-01 18:03:16+00:00,[],None
277,https://github.com/Michael-J-K94/public_rfm_verilog.git,2024-02-01 20:38:46+00:00,,0,Michael-J-K94/public_rfm_verilog,751550355,Verilog,public_rfm_verilog,35,0,2024-02-01 20:40:02+00:00,[],None
278,https://github.com/alexander-wang03/ALU_Polynomial_Computations.git,2024-02-01 21:48:21+00:00,,0,alexander-wang03/ALU_Polynomial_Computations,751572940,Verilog,ALU_Polynomial_Computations,2,0,2024-02-01 22:41:29+00:00,[],None
279,https://github.com/hataehyeok/csed273.git,2024-02-05 13:07:39+00:00,,0,hataehyeok/csed273,753093041,Verilog,csed273,3592,0,2024-02-05 13:07:52+00:00,[],None
280,https://github.com/Hamza-Ali10/PWM.git,2024-02-05 17:07:54+00:00,"Pulse-width modulation (PWM) is a powerful technique for controlling analog circuits with a microcontroller's digital outputs. PWM is used in many applications, ranging from communications to power control and conversion.",0,Hamza-Ali10/PWM,753204188,Verilog,PWM,3,0,2024-02-05 17:08:45+00:00,[],None
281,https://github.com/Hamza-Ali10/RGB.git,2024-02-05 17:09:49+00:00,,0,Hamza-Ali10/RGB,753205067,Verilog,RGB,3,0,2024-02-05 17:10:21+00:00,[],None
282,https://github.com/Hamza-Ali10/N_Bit_Adder.git,2024-02-05 17:14:50+00:00,"The n-bit adder built from n one-bit full adders is know as a ripple carry adder, because of the way the carry is computed. Each full adder inputs a Cin, which is the Cout of the preceding adder. This kind of adder is called a ripple carry adder, since each carry bit ""ripples"" to the next full adder.",0,Hamza-Ali10/N_Bit_Adder,753207385,Verilog,N_Bit_Adder,5,0,2024-02-05 17:15:29+00:00,[],None
283,https://github.com/Ryoujizzz/MyFirstPr_dephase.git,2024-02-05 04:27:08+00:00,LoranReciever_dephase,0,Ryoujizzz/MyFirstPr_dephase,752905538,Verilog,MyFirstPr_dephase,1,0,2024-02-06 07:11:52+00:00,[],None
284,https://github.com/SONAMSHANDILYA/BCD-to-7-segment-display-converter.git,2024-02-03 17:19:24+00:00,,0,SONAMSHANDILYA/BCD-to-7-segment-display-converter,752348833,Verilog,BCD-to-7-segment-display-converter,4,0,2024-02-03 17:34:40+00:00,[],None
285,https://github.com/JelenaVujakovic/FV.git,2024-02-02 08:10:08+00:00,FV,0,JelenaVujakovic/FV,751738129,Verilog,FV,25,0,2024-02-03 06:14:42+00:00,[],None
286,https://github.com/Anurup-18/Lift_Controller.git,2024-02-04 07:55:44+00:00,"Elevators, integral to modern urban life, have evolved from simple mechanical systems to sophisticated, digitally-driven entities.",0,Anurup-18/Lift_Controller,752563606,Verilog,Lift_Controller,17092,0,2024-02-04 08:40:33+00:00,[],None
287,https://github.com/ahsan268/Single-cycle-Processor.git,2024-02-04 12:10:18+00:00,,0,ahsan268/Single-cycle-Processor,752637778,Verilog,Single-cycle-Processor,245,0,2024-02-04 14:16:18+00:00,[],None
288,https://github.com/sams2211/8-bit-processor.git,2024-02-07 13:42:25+00:00,A simple 8-bit processor using verilog(HDL),0,sams2211/8-bit-processor,754144675,Verilog,8-bit-processor,6,0,2024-02-07 13:46:44+00:00,[],None
289,https://github.com/YutongChenVictor/AXI-lite.git,2024-02-07 06:54:02+00:00,demo4axi-lite,0,YutongChenVictor/AXI-lite,753982422,Verilog,AXI-lite,2,0,2024-02-07 06:54:52+00:00,[],None
290,https://github.com/Liblearner/My_OpenMIPS.git,2024-02-08 13:25:34+00:00,,0,Liblearner/My_OpenMIPS,754635767,Verilog,My_OpenMIPS,622,0,2024-02-08 13:31:10+00:00,[],None
291,https://github.com/Apdonis/3300_Lab1.git,2024-02-06 06:16:04+00:00,,0,Apdonis/3300_Lab1,753447351,Verilog,3300_Lab1,9,0,2024-02-06 06:17:14+00:00,[],None
292,https://github.com/yanyiyang2000/verilog.git,2024-02-09 00:53:06+00:00,,0,yanyiyang2000/verilog,754895191,Verilog,verilog,5,0,2024-02-09 00:53:11+00:00,[],None
293,https://github.com/rahgun04/InfoProc_LAbs.git,2024-02-08 02:25:11+00:00,,1,rahgun04/InfoProc_LAbs,754421538,Verilog,InfoProc_LAbs,134161,0,2024-02-08 02:33:05+00:00,[],None
294,https://github.com/Arnav-12/Simple-SIMD-Processor.git,2024-02-11 15:37:04+00:00,,0,Arnav-12/Simple-SIMD-Processor,755960492,Verilog,Simple-SIMD-Processor,14,0,2024-02-11 15:45:24+00:00,[],None
295,https://github.com/Amanec031/Traffic-Light-Controller.git,2024-02-11 12:49:11+00:00,I have developed a Verilog traffic light controller simulation on FPGA platform.,0,Amanec031/Traffic-Light-Controller,755905201,Verilog,Traffic-Light-Controller,4,0,2024-02-11 12:50:24+00:00,[],None
296,https://github.com/YaraHassan3/Floating-Point-Adder-and-Multiplier-IEEE754.git,2024-02-12 00:22:50+00:00,Implementation of  a floating point adder and multiplier IEEE754 single precision using Verilog. ,0,YaraHassan3/Floating-Point-Adder-and-Multiplier-IEEE754,756108757,Verilog,Floating-Point-Adder-and-Multiplier-IEEE754,3,0,2024-02-12 00:24:46+00:00,[],None
297,https://github.com/Abdelrahman1810/D_Latch.git,2024-02-13 21:40:35+00:00,design of D-type latch variable input width using verilog with testbench and do file to run in ModelSim or QuestaSim ,0,Abdelrahman1810/D_Latch,757133153,Verilog,D_Latch,1,0,2024-02-13 21:54:04+00:00,[],None
298,https://github.com/swkfk/PipelineCPU-BUAA_CO.git,2024-02-14 02:09:47+00:00,北航计组课程设计 - 流水线 CPU（Verilog）,0,swkfk/PipelineCPU-BUAA_CO,757204736,Verilog,PipelineCPU-BUAA_CO,43,0,2024-02-14 02:23:04+00:00,[],None
299,https://github.com/DomnikBrandstetter/jku-tt06-PID_FanCTRL.git,2024-02-12 16:52:18+00:00,,0,DomnikBrandstetter/jku-tt06-PID_FanCTRL,756433859,Verilog,jku-tt06-PID_FanCTRL,57,0,2024-02-12 17:28:56+00:00,[],https://api.github.com/licenses/apache-2.0
300,https://github.com/VladMRG2001/Verilog_Homework.git,2024-02-12 11:42:16+00:00,Rezolvarea temelor primite la Arhitectura Calculatoarelor (AC). Sunt incarcate toate modulele necesare (fisierele .v) cu codul aferent fiecarei teme.,0,VladMRG2001/Verilog_Homework,756297131,Verilog,Verilog_Homework,1528,0,2024-02-12 11:43:51+00:00,[],None
301,https://github.com/muehlbachler-b/jku-tt06-16bit-calculator-muehlb.git,2024-02-14 14:06:02+00:00,calculator (with 16-bit alu and 8-bit IO-dataport),0,muehlbachler-b/jku-tt06-16bit-calculator-muehlb,757443916,Verilog,jku-tt06-16bit-calculator-muehlb,1397,0,2024-02-14 15:06:51+00:00,[],https://api.github.com/licenses/apache-2.0
302,https://github.com/Ahmedwagdymohy/Digital_Electronics_workshop_Verilog.git,2024-02-02 11:32:06+00:00,"Digital Electronics workshop under supervision of IEEE CUSB , Learning Verilog",0,Ahmedwagdymohy/Digital_Electronics_workshop_Verilog,751811239,Verilog,Digital_Electronics_workshop_Verilog,7889,0,2024-02-19 00:53:09+00:00,[],None
303,https://github.com/MisguidedBadge/tt-fpga-hdl-demo.git,2024-02-07 16:34:42+00:00,,0,MisguidedBadge/tt-fpga-hdl-demo,754224894,Verilog,tt-fpga-hdl-demo,221,0,2024-02-09 18:37:40+00:00,[],https://api.github.com/licenses/apache-2.0
304,https://github.com/NilotpalMaitra/FPGA-codes.git,2024-02-10 09:56:17+00:00,Basic  DCD codes which can be implemented on the Nexys4 DDR Artix-7 FPGA Board ,0,NilotpalMaitra/FPGA-codes,755468178,Verilog,FPGA-codes,9,0,2024-02-20 18:59:33+00:00,[],None
305,https://github.com/iic-jku/jku-tt06-tempsens-ng.git,2024-02-03 16:19:52+00:00,Temperature sensor from standard cells,0,iic-jku/jku-tt06-tempsens-ng,752322233,Verilog,jku-tt06-tempsens-ng,400,0,2024-02-24 16:11:39+00:00,[],https://api.github.com/licenses/apache-2.0
306,https://github.com/WajeehaTahir/tic-tac-toe.git,2024-01-29 16:51:44+00:00,,1,WajeehaTahir/tic-tac-toe,749919400,Verilog,tic-tac-toe,35,0,2024-03-09 13:26:39+00:00,[],None
307,https://github.com/imbruce0926/Integrated-Circuit-Design-Laboratory-2023-FALL-NYCU.git,2024-02-04 11:32:13+00:00,,0,imbruce0926/Integrated-Circuit-Design-Laboratory-2023-FALL-NYCU,752618187,Verilog,Integrated-Circuit-Design-Laboratory-2023-FALL-NYCU,100550,0,2024-03-05 11:36:11+00:00,[],None
308,https://github.com/pure-blue0/Chat_Chisel.git,2024-01-30 08:08:32+00:00,,0,pure-blue0/Chat_Chisel,750219098,Verilog,Chat_Chisel,7700,0,2024-01-30 08:52:31+00:00,[],None
309,https://github.com/axmalakar/Lab1.git,2024-02-05 17:53:29+00:00,,0,axmalakar/Lab1,753224457,Verilog,Lab1,17132,0,2024-02-21 22:51:02+00:00,[],https://api.github.com/licenses/mit
310,https://github.com/KarthikIlla/8bit_Microprocessor.git,2024-02-01 11:06:48+00:00,,0,KarthikIlla/8bit_Microprocessor,751313354,Verilog,8bit_Microprocessor,222,0,2024-02-23 03:28:00+00:00,[],None
311,https://github.com/hugodiasg/tt06-clock-divider.git,2024-02-04 18:28:45+00:00,,0,hugodiasg/tt06-clock-divider,752762658,Verilog,tt06-clock-divider,63,0,2024-02-04 18:36:11+00:00,[],https://api.github.com/licenses/apache-2.0
312,https://github.com/Rashee99/DSD-Verilog-Practice.git,2024-01-28 16:09:46+00:00,Verilog practice sessions in Digital System Design ,0,Rashee99/DSD-Verilog-Practice,749448601,Verilog,DSD-Verilog-Practice,40,0,2024-01-28 16:13:36+00:00,[],None
313,https://github.com/jxyjason/ZYNQMP-NVDLA.git,2024-02-04 11:24:46+00:00,Run Nvidia Deep Learning Accelerator (NVDLA) in zynq ultrascale+ mpsoc,0,jxyjason/ZYNQMP-NVDLA,752616172,Verilog,ZYNQMP-NVDLA,551148,0,2024-02-04 12:07:18+00:00,"['deep-learning-accelerator', 'mpsoc', 'nvidia', 'zynq', 'zynqmp', 'nvdla']",None
314,https://github.com/VaughnValle/loci.git,2024-02-07 20:49:01+00:00,An address of my mind,0,VaughnValle/loci,754329422,Verilog,loci,2311,0,2024-02-10 16:36:58+00:00,[],None
315,https://github.com/lucas-srigley/ELEC374.git,2024-01-27 15:46:24+00:00,,0,lucas-srigley/ELEC374,749106044,Verilog,ELEC374,272,0,2024-03-06 22:04:26+00:00,[],None
316,https://github.com/JustinReed/CIS5710_Repo3.git,2024-02-03 21:17:11+00:00,,0,JustinReed/CIS5710_Repo3,752442305,Verilog,CIS5710_Repo3,3815,0,2024-04-02 02:28:34+00:00,[],https://api.github.com/licenses/mit
317,https://github.com/AngelicHedgehog/BMSTU-Implementation-of-Programming-Language-Abstractions.git,2024-02-10 06:57:32+00:00,,0,AngelicHedgehog/BMSTU-Implementation-of-Programming-Language-Abstractions,755428056,Verilog,BMSTU-Implementation-of-Programming-Language-Abstractions,388,0,2024-03-07 20:01:37+00:00,[],https://api.github.com/licenses/mit
318,https://github.com/mark0425luke/Digital_Circuit.git,2024-02-06 00:29:19+00:00,,0,mark0425luke/Digital_Circuit,753356819,Verilog,Digital_Circuit,81068,0,2024-03-08 14:22:46+00:00,[],None
319,https://github.com/Bhargavi1611/Verilog-Coding.git,2024-02-05 18:06:24+00:00,,0,Bhargavi1611/Verilog-Coding,753229885,Verilog,Verilog-Coding,4593,0,2024-02-05 18:11:39+00:00,[],None
320,https://github.com/coldmayo/FBGAProjects.git,2024-02-09 17:47:59+00:00,A collection of projects done with the FBGA (using Lucid HDL),0,coldmayo/FBGAProjects,755233137,Verilog,FBGAProjects,4792,0,2024-02-14 02:41:01+00:00,[],https://api.github.com/licenses/mit
321,https://github.com/Griseoh/MIPS32-Implement.git,2024-01-25 18:08:05+00:00,"This repository contains a basic implementation of a MIPS32 , a RISC architecture type processor, done in Verilog HDL",0,Griseoh/MIPS32-Implement,748314214,Verilog,MIPS32-Implement,8,0,2024-01-25 18:09:58+00:00,[],None
322,https://github.com/amr-elberry/Parameterized_Reg_file_verilog.git,2024-01-28 18:48:09+00:00,,0,amr-elberry/Parameterized_Reg_file_verilog,749498048,Verilog,Parameterized_Reg_file_verilog,1,0,2024-01-28 18:48:45+00:00,[],None
323,https://github.com/optimus1010t/32_bit_RISC_like_processor_in_verilog.git,2024-01-29 09:39:44+00:00,,0,optimus1010t/32_bit_RISC_like_processor_in_verilog,749733992,Verilog,32_bit_RISC_like_processor_in_verilog,396,0,2024-01-29 09:40:34+00:00,[],None
324,https://github.com/MoYasser1777/Advanced-Encryption-Standard-in-Verilog.git,2024-01-29 11:44:04+00:00,,1,MoYasser1777/Advanced-Encryption-Standard-in-Verilog,749782921,Verilog,Advanced-Encryption-Standard-in-Verilog,18521,0,2024-01-29 11:46:37+00:00,[],None
325,https://github.com/filipbirger/3TB4.git,2024-01-31 03:20:54+00:00,,0,filipbirger/3TB4,750648866,Verilog,3TB4,2,0,2024-01-31 03:22:18+00:00,[],None
326,https://github.com/sarmadsalman-RS/Jira_Testcase.git,2024-01-26 05:54:06+00:00,,0,sarmadsalman-RS/Jira_Testcase,748507038,Verilog,Jira_Testcase,105618,0,2024-01-31 13:40:27+00:00,[],
327,https://github.com/kha0s-tickler/efab-test.git,2024-01-30 04:56:16+00:00,,0,kha0s-tickler/efab-test,750156491,Verilog,efab-test,11927,0,2024-01-30 05:00:57+00:00,[],https://api.github.com/licenses/apache-2.0
328,https://github.com/idrak28/VLSI-2_Project.git,2024-01-30 01:45:26+00:00,,0,idrak28/VLSI-2_Project,750104680,Verilog,VLSI-2_Project,2,0,2024-01-30 01:50:26+00:00,[],None
329,https://github.com/Khaled072/Coordinates-Converter.git,2024-02-02 00:29:28+00:00,,0,Khaled072/Coordinates-Converter,751614567,Verilog,Coordinates-Converter,9,0,2024-02-02 00:40:48+00:00,[],None
330,https://github.com/noelg23/MIPS_single_cycle.git,2024-02-02 10:02:26+00:00,MIPS single cycle Verilog implementation based on Computer Organization and Design by David A. Patterson and John L. Hennessy. ,0,noelg23/MIPS_single_cycle,751778621,Verilog,MIPS_single_cycle,7,0,2024-02-02 10:07:59+00:00,[],None
331,https://github.com/A-man-T/Verilog-CPU-Pipeline.git,2024-02-02 18:06:01+00:00,,0,A-man-T/Verilog-CPU-Pipeline,751965933,Verilog,Verilog-CPU-Pipeline,21,0,2024-02-02 18:07:46+00:00,[],None
332,https://github.com/TUSHAR-GANOTRA-01/RISC_V_CDAC_ACTS.git,2024-02-02 14:47:41+00:00,5 stage RISC V protocol execution,0,TUSHAR-GANOTRA-01/RISC_V_CDAC_ACTS,751887650,Verilog,RISC_V_CDAC_ACTS,3,0,2024-02-03 13:23:27+00:00,[],None
333,https://github.com/Bheeshmaverma/4Bit_Binary_Vedic_Multiplier.git,2024-02-03 09:55:36+00:00,I have developed a source code for the designing and simulation of  a 4 bit binary Vedic multiplier in Verilog.,0,Bheeshmaverma/4Bit_Binary_Vedic_Multiplier,752191947,Verilog,4Bit_Binary_Vedic_Multiplier,11,0,2024-02-03 10:43:40+00:00,[],None
334,https://github.com/yogeshky11/Newspaper-Vending-Machine-with-Verilog.git,2024-02-04 19:55:36+00:00,,0,yogeshky11/Newspaper-Vending-Machine-with-Verilog,752787598,Verilog,Newspaper-Vending-Machine-with-Verilog,3,0,2024-02-04 20:43:37+00:00,[],None
335,https://github.com/welero/TFG_Hexapodo.git,2024-02-04 17:04:05+00:00,"Código Verilog usado en el proyecto ""Diseño e implementación de la electrónica necesaria para generar locomoción en un robot hexápodo""",0,welero/TFG_Hexapodo,752736604,Verilog,TFG_Hexapodo,214,0,2024-02-04 23:11:30+00:00,[],None
336,https://github.com/Sravani1265/Verilog_-Codes.git,2024-02-04 13:41:32+00:00,,0,Sravani1265/Verilog_-Codes,752671204,Verilog,Verilog_-Codes,0,0,2024-02-04 14:17:02+00:00,[],None
337,https://github.com/Hamza-Ali10/ALU-controller.git,2024-02-05 17:11:38+00:00," ALU is used to calculate an arithmetic result, compute a memory address, or perform a comparison for a branch",0,Hamza-Ali10/ALU-controller,753205893,Verilog,ALU-controller,2,0,2024-02-05 17:12:21+00:00,[],None
338,https://github.com/Hemadri43/basic-gates.git,2024-02-07 06:23:49+00:00,,0,Hemadri43/basic-gates,753973061,Verilog,basic-gates,5,0,2024-02-07 06:25:04+00:00,[],None
339,https://github.com/Ashdhamo/mealy_fsm.git,2024-02-07 07:02:52+00:00,a 101 mealy fsm and if traps 3 0s or 1s in a row,0,Ashdhamo/mealy_fsm,753985166,Verilog,mealy_fsm,1,0,2024-02-07 07:08:11+00:00,[],None
340,https://github.com/obvolent/PROJECT2-.git,2024-02-07 17:46:55+00:00,,0,obvolent/PROJECT2-,754256867,Verilog,PROJECT2-,3,0,2024-02-07 17:49:12+00:00,[],None
341,https://github.com/onursahinler/ownISA_verilog_project.git,2024-02-07 22:20:11+00:00,,0,onursahinler/ownISA_verilog_project,754359210,Verilog,ownISA_verilog_project,121,0,2024-02-07 22:21:17+00:00,[],None
342,https://github.com/SohamD242/voting_machine.git,2024-02-07 17:46:14+00:00,,0,SohamD242/voting_machine,754256554,Verilog,voting_machine,97,0,2024-02-07 17:49:43+00:00,[],None
343,https://github.com/JHsu01/tt-fpga-hdl-demo.git,2024-02-07 16:34:29+00:00,,0,JHsu01/tt-fpga-hdl-demo,754224780,Verilog,tt-fpga-hdl-demo,272,0,2024-02-09 18:56:53+00:00,[],https://api.github.com/licenses/apache-2.0
344,https://github.com/ykDesignSolver/AHB2APB_bridge.git,2024-02-14 07:46:49+00:00,"This project aims to design and verify an AHB to APB bridge with a single master and single slave connected through an asynchronous FIFO buffer. This bridge will facilitate communication between a high-performance AHB bus and a low-power APB bus, bridging the performance and power consumption gap between them.",0,ykDesignSolver/AHB2APB_bridge,757296376,Verilog,AHB2APB_bridge,6,0,2024-02-22 16:22:10+00:00,[],None
345,https://github.com/Leovianaf/MIPS-Verilog.git,2024-02-13 16:24:08+00:00,"Projeto realizado por grupo de 4 alunos na cadeira de Arquitetura e Organização de Computadores na UFRPE, consiste em um processador MIPS feito em Verilog com os testes de instrução.",0,Leovianaf/MIPS-Verilog,756956082,Verilog,MIPS-Verilog,38288,0,2024-02-13 23:49:59+00:00,[],None
346,https://github.com/rare-only/100daysofrtl.git,2024-02-12 15:02:11+00:00,verilog 100 days consistency by saikiran,0,rare-only/100daysofrtl,756382140,Verilog,100daysofrtl,436,0,2024-02-12 15:07:54+00:00,[],None
347,https://github.com/JuliaNewcombe/my_mini_cpu.git,2024-02-05 16:26:58+00:00,,0,JuliaNewcombe/my_mini_cpu,753185793,Verilog,my_mini_cpu,25188,0,2024-02-05 16:51:19+00:00,[],None
348,https://github.com/BavQueens/ELEC-374-Group-28.git,2024-01-25 02:03:42+00:00,,0,BavQueens/ELEC-374-Group-28,747970588,Verilog,ELEC-374-Group-28,728,0,2024-01-25 15:40:30+00:00,[],None
349,https://github.com/maazhamidexe/Fastest-Finger-First-Circuit.git,2024-01-25 12:27:56+00:00,This project aims to implement the fastest finger first circuit based on mealy machine,2,maazhamidexe/Fastest-Finger-First-Circuit,748171256,Verilog,Fastest-Finger-First-Circuit,570,0,2024-01-25 12:50:05+00:00,[],None
350,https://github.com/ntienthanh75/lcd_nios.git,2024-01-25 18:56:03+00:00,,0,ntienthanh75/lcd_nios,748332818,Verilog,lcd_nios,19018,0,2024-01-25 18:58:30+00:00,[],None
351,https://github.com/Priya-Sivalingam/Priya-Sivalingam-Smart-Traffic-Control-System-using-VHDL.git,2024-01-25 19:36:55+00:00,"VHDL-based Smart Traffic Control: Adaptive lights prioritize hospital road vehicles, ensure safe pedestrian crossings. Efficient state machine transitions enhance traffic management",0,Priya-Sivalingam/Priya-Sivalingam-Smart-Traffic-Control-System-using-VHDL,748349169,Verilog,Priya-Sivalingam-Smart-Traffic-Control-System-using-VHDL,8250,0,2024-01-25 19:58:40+00:00,[],None
352,https://github.com/berkeayyldzl/CS303-Term-Project-DigiHockey.git,2024-01-28 17:23:01+00:00,"This repository contains the codes that i have written in Verilog VHDL for my CS303, logic and digital system design course's term project. A digital ice hockey game called DigiHockey, has been created to run on Xilinx Nexys a7 fpga board.",0,berkeayyldzl/CS303-Term-Project-DigiHockey,749471661,Verilog,CS303-Term-Project-DigiHockey,4256,0,2024-01-28 18:57:57+00:00,[],None
353,https://github.com/SONAMSHANDILYA/Printing-Star-and-Number-Patterns.git,2024-01-27 15:20:17+00:00,,0,SONAMSHANDILYA/Printing-Star-and-Number-Patterns,749097689,Verilog,Printing-Star-and-Number-Patterns,7,0,2024-01-27 15:21:50+00:00,[],None
354,https://github.com/FPGASystemsLab/dev_uart.git,2024-01-26 19:02:24+00:00,,0,FPGASystemsLab/dev_uart,748786167,Verilog,dev_uart,27,0,2024-01-27 13:33:11+00:00,[],None
355,https://github.com/4n3m4i1/Test_Instrument_Automation.git,2024-01-28 22:03:00+00:00,"USB <-> RS232/GPIB, but not $300 :p",0,4n3m4i1/Test_Instrument_Automation,749547873,Verilog,Test_Instrument_Automation,16,0,2024-01-29 03:28:58+00:00,[],None
356,https://github.com/folkore0118/YueJi_FPGA.git,2024-01-29 03:02:42+00:00,FPGA engineering written during college,0,folkore0118/YueJi_FPGA,749610785,Verilog,YueJi_FPGA,539,0,2024-01-29 08:05:13+00:00,[],None
357,https://github.com/goOdyaga/cse331-Computer-Organization.git,2024-01-30 11:24:07+00:00,,0,goOdyaga/cse331-Computer-Organization,750297063,Verilog,cse331-Computer-Organization,1072,0,2024-01-30 11:29:16+00:00,[],None
358,https://github.com/naqiraza-512/RISC-V_RV32I_CPU.git,2024-01-29 18:34:51+00:00,,0,naqiraza-512/RISC-V_RV32I_CPU,749968813,Verilog,RISC-V_RV32I_CPU,4,0,2024-01-29 18:37:37+00:00,[],None
359,https://github.com/Hitesh-K18/T-intersection-traffic-light-control-system.git,2024-02-01 06:40:59+00:00,,0,Hitesh-K18/T-intersection-traffic-light-control-system,751213140,Verilog,T-intersection-traffic-light-control-system,8,0,2024-02-01 16:25:11+00:00,[],None
360,https://github.com/tenweilin/HW01-VerilogCoding-1.git,2024-02-01 15:46:28+00:00,Verilog source files nor gates statement,0,tenweilin/HW01-VerilogCoding-1,751430925,Verilog,HW01-VerilogCoding-1,3,0,2024-02-02 04:19:45+00:00,[],None
361,https://github.com/adonairc/caravel_test.git,2024-01-31 17:58:25+00:00,,0,adonairc/caravel_test,750986208,Verilog,caravel_test,11927,0,2024-01-31 17:59:08+00:00,[],https://api.github.com/licenses/apache-2.0
362,https://github.com/NivedK-S/Asynchronous-FIFO.git,2024-01-31 18:19:36+00:00,,0,NivedK-S/Asynchronous-FIFO,750995017,Verilog,Asynchronous-FIFO,6,0,2024-01-31 18:21:49+00:00,[],None
363,https://github.com/PinnnHo/Project.git,2024-01-31 16:56:26+00:00,,0,PinnnHo/Project,750959133,Verilog,Project,10,0,2024-01-31 16:57:03+00:00,[],None
364,https://github.com/NitoHGa/dado_digital----verilog.git,2024-01-31 17:32:09+00:00,Desarrollo de un dado digital implementado en una FPGA.,0,NitoHGa/dado_digital----verilog,750974802,Verilog,dado_digital----verilog,2,0,2024-01-31 17:32:45+00:00,[],None
365,https://github.com/tanishshah07/Dual-port-ram-in-verilog.git,2024-01-28 13:04:47+00:00,this is a smart Dual Port ram having features-- of auto detection of the out of range addresses and also indicates when the memory is full.,0,tanishshah07/Dual-port-ram-in-verilog,749392054,Verilog,Dual-port-ram-in-verilog,122,0,2024-01-28 13:13:55+00:00,[],None
366,https://github.com/YusufGuldadov/4-bit-Microprocessor.git,2024-02-04 14:02:24+00:00,"Designed and implemented a 4-bit microprocessor on an FPGA, using System Verilog, with meticulous debugging and testing using Quartus and QuestaSim.",0,YusufGuldadov/4-bit-Microprocessor,752677669,Verilog,4-bit-Microprocessor,8,0,2024-02-04 14:06:00+00:00,[],None
367,https://github.com/Ali0281/DSD-Assignments.git,2024-02-04 17:53:33+00:00,,0,Ali0281/DSD-Assignments,752752056,Verilog,DSD-Assignments,1467,0,2024-02-04 18:08:14+00:00,[],None
368,https://github.com/SONAMSHANDILYA/Sinc-Wave-Generator-using-Block-ROM..git,2024-02-03 17:57:55+00:00,,0,SONAMSHANDILYA/Sinc-Wave-Generator-using-Block-ROM.,752362460,Verilog,Sinc-Wave-Generator-using-Block-ROM.,3,0,2024-02-04 18:36:16+00:00,[],None
369,https://github.com/Linguene/digital_systems_project.git,2024-02-02 15:22:55+00:00,"The aim of this project was to locate the drone based on the received noisy signals (denoising, cross-correlation, DSP)",0,Linguene/digital_systems_project,751902175,Verilog,digital_systems_project,68703,0,2024-02-02 15:35:00+00:00,[],None
370,https://github.com/leo-oxu/ECE352_coursework.git,2024-02-02 21:21:06+00:00,,0,leo-oxu/ECE352_coursework,752030125,Verilog,ECE352_coursework,2909,0,2024-02-03 01:36:44+00:00,[],https://api.github.com/licenses/mit
371,https://github.com/VA3SFA/analogue-test-0.git,2024-02-05 05:42:04+00:00,,0,VA3SFA/analogue-test-0,752924877,Verilog,analogue-test-0,97,0,2024-02-05 05:42:10+00:00,[],https://api.github.com/licenses/apache-2.0
372,https://github.com/tamertamer1/154A.git,2024-02-06 05:55:24+00:00,,0,tamertamer1/154A,753440851,Verilog,154A,13,0,2024-02-06 05:55:54+00:00,[],None
373,https://github.com/mwael2002/SPI-communication-protocol.git,2024-02-09 18:50:07+00:00,Implementation of SPI communication protocol between one masrer and one slave,0,mwael2002/SPI-communication-protocol,755256741,Verilog,SPI-communication-protocol,12,0,2024-02-09 18:52:39+00:00,[],None
374,https://github.com/DouglasWWolf/indy_pcie_base.git,2024-02-09 02:18:11+00:00,Indy base design,0,DouglasWWolf/indy_pcie_base,754913408,Verilog,indy_pcie_base,1041,0,2024-02-10 16:26:33+00:00,[],None
375,https://github.com/Williamdepig/ComputerSystemII.git,2024-02-06 15:31:36+00:00,,0,Williamdepig/ComputerSystemII,753675087,Verilog,ComputerSystemII,67706,0,2024-02-06 17:08:13+00:00,[],None
376,https://github.com/Mesbah-Lab-UCB/DNN_MPC_Plasma_FPGA.git,2024-02-07 18:48:50+00:00,Project files for a neural network (NN) implementation on an FPGA using Vivado HLS.,0,Mesbah-Lab-UCB/DNN_MPC_Plasma_FPGA,754283405,Verilog,DNN_MPC_Plasma_FPGA,3154,0,2024-02-07 19:42:07+00:00,"['fpga-programming', 'machine-learning', 'neural-networks']",None
377,https://github.com/Griseoh/Verilog.git,2024-01-25 18:02:17+00:00,This repository contains modules written in Verilog Hardware Descriptive Language.,0,Griseoh/Verilog,748311973,Verilog,Verilog,28,0,2024-02-08 06:43:02+00:00,[],None
378,https://github.com/NotQuiteAwake/verilog.git,2024-01-29 20:55:41+00:00,verilog practice,0,NotQuiteAwake/verilog,750023144,Verilog,verilog,223,0,2024-01-31 11:50:24+00:00,[],https://api.github.com/licenses/mit
379,https://github.com/zencodess/multiplier.git,2024-02-08 14:15:56+00:00,Pipelined multiplier,0,zencodess/multiplier,754657422,Verilog,multiplier,142,0,2024-02-08 14:18:01+00:00,[],None
380,https://github.com/Sunishka-Sharma/risc5.git,2024-02-09 04:12:03+00:00,,0,Sunishka-Sharma/risc5,754938607,Verilog,risc5,12,0,2024-02-09 04:31:50+00:00,[],None
381,https://github.com/Ameenafz248/mips-single-cycle.git,2024-02-10 04:09:32+00:00,,0,Ameenafz248/mips-single-cycle,755394294,Verilog,mips-single-cycle,12,0,2024-02-10 04:10:45+00:00,[],None
382,https://github.com/bthnzncr/edge-detection.git,2024-02-11 10:01:43+00:00,Implementation of sobel edge detection algorithm on FPGA board.,0,bthnzncr/edge-detection,755861563,Verilog,edge-detection,79,0,2024-02-11 10:13:03+00:00,[],None
383,https://github.com/Abdelrahman1810/N_bit_counter.git,2024-02-13 22:27:39+00:00,counter of parameter N represents the width of  output signal,0,Abdelrahman1810/N_bit_counter,757148233,Verilog,N_bit_counter,1,0,2024-02-16 12:31:08+00:00,[],None
384,https://github.com/AlbertZick/riscv_core_pub.git,2024-02-13 13:22:51+00:00,A sample of RISC-V ISA,0,AlbertZick/riscv_core_pub,756869521,Verilog,riscv_core_pub,40,0,2024-02-13 13:30:31+00:00,[],https://api.github.com/licenses/mit
385,https://github.com/Pranav-Gadre/VCS.git,2024-02-11 12:51:42+00:00,QuickSilicon.in Problem 1: Atomic Counters,0,Pranav-Gadre/VCS,755905937,Verilog,VCS,10,0,2024-02-20 02:38:54+00:00,[],None
386,https://github.com/histefan/jku-tt06-snake_game.git,2024-01-28 18:32:07+00:00,,0,histefan/jku-tt06-snake_game,749493195,Verilog,jku-tt06-snake_game,33,0,2024-01-28 19:14:31+00:00,[],https://api.github.com/licenses/apache-2.0
387,https://github.com/thomascp/nn_riscv.git,2024-02-06 11:02:27+00:00,,0,thomascp/nn_riscv,753556061,Verilog,nn_riscv,70,0,2024-02-19 22:24:53+00:00,[],None
388,https://github.com/Panha-Sim/SIDS.git,2024-02-12 02:57:19+00:00,,0,Panha-Sim/SIDS,756137496,Verilog,SIDS,217537,0,2024-02-24 18:38:53+00:00,[],None
389,https://github.com/k12005911/jku-tt06-advanced-counter.git,2024-02-12 12:38:03+00:00,Design of TinyTapeout of a multi-digit counter with modifiable maximum values for each digit and switchable carry over.,0,k12005911/jku-tt06-advanced-counter,756318655,Verilog,jku-tt06-advanced-counter,140,0,2024-02-12 12:53:39+00:00,[],https://api.github.com/licenses/apache-2.0
390,https://github.com/superarash1/RCR_Arm.git,2024-01-30 03:07:21+00:00,,0,superarash1/RCR_Arm,750127843,Verilog,RCR_Arm,807948,0,2024-01-30 03:25:18+00:00,[],None
391,https://github.com/Mekky7/FIR-FILTER-.git,2024-01-31 21:02:21+00:00,,0,Mekky7/FIR-FILTER-,751056944,Verilog,FIR-FILTER-,9,0,2024-02-28 16:16:48+00:00,[],None
392,https://github.com/99hhernandez/ECEN489.git,2024-01-27 00:56:48+00:00,,0,99hhernandez/ECEN489,748892174,Verilog,ECEN489,9454,0,2024-02-29 01:59:33+00:00,[],None
393,https://github.com/RV32I/RV32I-core.git,2024-02-03 22:33:08+00:00,,0,RV32I/RV32I-core,752458077,Verilog,RV32I-core,13,0,2024-02-12 08:25:19+00:00,[],None
394,https://github.com/kokkoroQwQ/Reaction-Time-Testing.git,2024-02-01 12:37:41+00:00,电子森林第四届2024年“寒假在家一起练”任务项目,0,kokkoroQwQ/Reaction-Time-Testing,751347851,Verilog,Reaction-Time-Testing,21018,0,2024-02-27 10:11:17+00:00,[],https://api.github.com/licenses/mit
395,https://github.com/Buenobarbie/Laboratorio-Digital-I.git,2024-02-04 20:26:52+00:00,,0,Buenobarbie/Laboratorio-Digital-I,752796245,Verilog,Laboratorio-Digital-I,125,0,2024-03-07 11:57:03+00:00,[],None
396,https://github.com/samuelbianch/sistemas_embarcados.git,2024-02-09 23:40:52+00:00,Material de estudo da disciplina de Sistemas Embarcado - Engenharia da Computação 2024/1 - IFMT,0,samuelbianch/sistemas_embarcados,755344655,Verilog,sistemas_embarcados,909,0,2024-02-09 23:50:15+00:00,[],None
397,https://github.com/D00m5t3R/30.110-HW.git,2024-02-01 11:56:51+00:00,,0,D00m5t3R/30.110-HW,751332356,Verilog,30.110-HW,11,0,2024-02-01 11:58:38+00:00,[],None
398,https://github.com/Dasharo/verilog-spi-module.git,2024-01-30 15:52:27+00:00,,0,Dasharo/verilog-spi-module,750415146,Verilog,verilog-spi-module,52,0,2024-02-05 16:40:05+00:00,[],https://api.github.com/licenses/lgpl-2.1
399,https://github.com/Revenantx86/uart.git,2024-02-08 16:38:04+00:00,new uart module with AXI compatibility and more features,0,Revenantx86/uart,754721705,Verilog,uart,1302,0,2024-02-13 19:03:24+00:00,[],https://api.github.com/licenses/mit
400,https://github.com/YonatanZo/RCB_Rev_B.git,2024-02-11 08:49:04+00:00,,0,YonatanZo/RCB_Rev_B,755845045,Verilog,RCB_Rev_B,32248,0,2024-02-11 08:50:24+00:00,[],None
401,https://github.com/larry4us/Processador_MIPS.git,2024-01-26 00:02:05+00:00,,0,larry4us/Processador_MIPS,748426756,Verilog,Processador_MIPS,10,0,2024-01-26 00:04:05+00:00,[],None
402,https://github.com/psychogenic/fpga-hdl-demo-test.git,2024-01-26 22:02:55+00:00,,0,psychogenic/fpga-hdl-demo-test,748853466,Verilog,fpga-hdl-demo-test,15,0,2024-01-26 22:04:49+00:00,[],https://api.github.com/licenses/apache-2.0
403,https://github.com/aligrand/verilog-Divider.git,2024-01-28 14:34:30+00:00,Final Project of VerilogHDL : Divider module,0,aligrand/verilog-Divider,749419183,Verilog,verilog-Divider,511,0,2024-01-28 14:35:21+00:00,[],None
404,https://github.com/AhmadEbrahem1/Systolic-Array-for-Matrix-Matrix-Multiplication.git,2024-01-27 21:22:08+00:00,The project aims at building a small-scale  systolic array for matrix-matrix multiplication using the weight stationary dataflow  architecture.,0,AhmadEbrahem1/Systolic-Array-for-Matrix-Matrix-Multiplication,749199072,Verilog,Systolic-Array-for-Matrix-Matrix-Multiplication,379,0,2024-01-27 21:24:11+00:00,[],None
405,https://github.com/Royalmaddy007/8_bit_Multiplier.git,2024-01-30 14:34:16+00:00,"This project involves designing and implementing an 8 x 8 multiplier using data path and control path on the Xilinx XC9572XL FPGA. The multiplier efficiently multiplies two 8-bit numbers, with inputs taken sequentially and stored in registers. The product is then displayed on a seven-segment display.",0,Royalmaddy007/8_bit_Multiplier,750378390,Verilog,8_bit_Multiplier,30,0,2024-01-30 14:37:25+00:00,[],None
406,https://github.com/adaady239/adarsh.git,2024-01-29 07:58:27+00:00,Verilog Projects,0,adaady239/adarsh,749695089,Verilog,adarsh,4,0,2024-01-31 09:07:12+00:00,[],None
407,https://github.com/RESMIRNAIR/DIGI_LOCK.git,2024-01-30 10:39:53+00:00,,0,RESMIRNAIR/DIGI_LOCK,750279473,Verilog,DIGI_LOCK,52,0,2024-01-30 10:43:12+00:00,[],None
408,https://github.com/SONAMSHANDILYA/robot_traffic_light.git,2024-02-01 17:21:16+00:00,,0,SONAMSHANDILYA/robot_traffic_light,751473441,Verilog,robot_traffic_light,3,0,2024-02-01 17:23:30+00:00,[],None
409,https://github.com/jonath00n/single-cycle-CPU.git,2024-02-03 02:22:37+00:00,,0,jonath00n/single-cycle-CPU,752093861,Verilog,single-cycle-CPU,8,0,2024-02-03 02:23:33+00:00,[],None
410,https://github.com/AmelRoT/fpga_new.git,2024-02-03 12:02:11+00:00,,0,AmelRoT/fpga_new,752224840,Verilog,fpga_new,49,0,2024-02-03 12:02:41+00:00,[],None
411,https://github.com/Eridarus/tinytapeout.git,2024-02-03 04:29:30+00:00,Tinytapeout 6 project - VGA-based Snake game.,0,Eridarus/tinytapeout,752117263,Verilog,tinytapeout,4,0,2024-02-03 22:28:16+00:00,[],None
412,https://github.com/JivaFPGA/gitclass.git,2024-02-07 03:33:43+00:00,,0,JivaFPGA/gitclass,753924951,Verilog,gitclass,1,0,2024-02-07 03:43:59+00:00,[],None
413,https://github.com/MatteoMarcoM/Progetto_RL.git,2024-02-03 13:28:24+00:00,Project for the Exam of Logic Networks a.y. 2019-2020,0,MatteoMarcoM/Progetto_RL,752248324,Verilog,Progetto_RL,660,0,2024-02-03 13:29:40+00:00,[],None
414,https://github.com/SumanthKumarM/Router-Project.git,2024-02-05 08:55:08+00:00,"A ""Router"" has been designed using verilog HDL which transfers data to 3 different destination devices.",0,SumanthKumarM/Router-Project,752989897,Verilog,Router-Project,328,0,2024-02-05 08:58:53+00:00,[],None
415,https://github.com/ABC10946/verilog-learning.git,2024-02-04 14:10:55+00:00,,0,ABC10946/verilog-learning,752680363,Verilog,verilog-learning,3,0,2024-02-04 14:12:49+00:00,[],None
416,https://github.com/iamustcfw/2022USTC_COD.git,2024-02-05 07:21:13+00:00,"2022USTC计算机组成原理(COD)综合实验,具有感知机局部和全局历史分支预测的五级RISCV流水线",0,iamustcfw/2022USTC_COD,752955668,Verilog,2022USTC_COD,4374,0,2024-02-05 08:05:36+00:00,[],https://api.github.com/licenses/apache-2.0
417,https://github.com/nandan-hirpara/RISC-Processor-Design.git,2024-02-05 17:29:22+00:00,,0,nandan-hirpara/RISC-Processor-Design,753213912,Verilog,RISC-Processor-Design,1843,0,2024-02-05 17:32:01+00:00,[],None
418,https://github.com/LePoloni/Relogio-Digital-FPGA.git,2024-02-05 18:37:16+00:00,Arquivos fonte do projeto de um relógio digital criado em Verilog e customizado para FPGA Intel,0,LePoloni/Relogio-Digital-FPGA,753243351,Verilog,Relogio-Digital-FPGA,48,0,2024-02-05 18:42:02+00:00,[],None
419,https://github.com/MadlerMark/Golay2412_Demo_DE2115.git,2024-01-30 22:18:58+00:00,"Demo of the Golay(24,12) encoder decoder on a DE2-115 FPGA ",0,MadlerMark/Golay2412_Demo_DE2115,750571063,Verilog,Golay2412_Demo_DE2115,16692,0,2024-02-05 22:45:49+00:00,[],None
420,https://github.com/TheDanielPark/ece411.git,2024-02-06 01:21:15+00:00,work from ECE 411 at UIUC 2021,0,TheDanielPark/ece411,753369313,Verilog,ece411,10447,0,2024-02-06 01:35:22+00:00,[],None
421,https://github.com/Abubaker-Nafe/ArchProjectCPU.git,2024-02-08 02:02:32+00:00,Designing and verifying a simple multi cycle RISC processor in Verilog,0,Abubaker-Nafe/ArchProjectCPU,754416275,Verilog,ArchProjectCPU,1552,0,2024-02-08 02:05:22+00:00,[],None
422,https://github.com/Lalo-911/Verilog_learn.git,2024-02-08 06:52:22+00:00,,0,Lalo-911/Verilog_learn,754490333,Verilog,Verilog_learn,64,0,2024-02-08 06:54:25+00:00,[],None
423,https://github.com/Shankar18204/100daysrtl.git,2024-02-06 05:23:17+00:00,This repository is dedicated to maintaining consistency in my RTL design development. Inspired by everyone who have completed it and Rahul Behl ,0,Shankar18204/100daysrtl,753431582,Verilog,100daysrtl,11,0,2024-02-06 05:30:51+00:00,[],None
424,https://github.com/pavnvar/miniIDS.git,2024-02-08 02:37:30+00:00,,0,pavnvar/miniIDS,754424317,Verilog,miniIDS,16,0,2024-02-10 07:12:55+00:00,[],None
425,https://github.com/hadihaz/verilog-projects.git,2024-02-13 13:00:21+00:00,,0,hadihaz/verilog-projects,756859594,Verilog,verilog-projects,102,0,2024-02-13 13:01:30+00:00,[],None
426,https://github.com/gurijalasharmila/Voting-Machine.git,2024-02-14 08:38:34+00:00,,0,gurijalasharmila/Voting-Machine,757313333,Verilog,Voting-Machine,4,0,2024-02-14 17:39:43+00:00,[],None
427,https://github.com/Zaelfenn/CST231Lab4.git,2024-02-06 23:03:07+00:00,,0,Zaelfenn/CST231Lab4,753854696,Verilog,CST231Lab4,8828,0,2024-02-13 05:02:54+00:00,[],None
428,https://github.com/kaitlynlie/adder.git,2024-02-08 22:21:53+00:00,,0,kaitlynlie/adder,754856654,Verilog,adder,6,0,2024-02-16 00:26:50+00:00,[],None
429,https://github.com/Lucy8179/RISCV-processor.git,2024-02-04 08:34:29+00:00,,0,Lucy8179/RISCV-processor,752572797,Verilog,RISCV-processor,17806,0,2024-02-19 07:22:23+00:00,[],None
430,https://github.com/Razi-720/Hdlbits_Solution.git,2024-01-27 15:43:34+00:00,,0,Razi-720/Hdlbits_Solution,749105165,Verilog,Hdlbits_Solution,24,0,2024-01-27 16:28:27+00:00,[],None
431,https://github.com/matt-huesman/OneBitFullAdder.git,2024-02-07 16:16:47+00:00,,0,matt-huesman/OneBitFullAdder,754216008,Verilog,OneBitFullAdder,489,0,2024-02-22 18:54:07+00:00,[],None
432,https://github.com/junhyung0706/Mandelbrot.git,2024-01-29 23:47:54+00:00,Create Mandelbrot set with verilog,0,junhyung0706/Mandelbrot,750074636,Verilog,Mandelbrot,14932,0,2024-02-02 06:21:07+00:00,[],None
433,https://github.com/AVatLeeds/ELEC5566_FPGA.git,2024-02-06 11:37:23+00:00,,0,AVatLeeds/ELEC5566_FPGA,753569309,Verilog,ELEC5566_FPGA,5,0,2024-02-06 11:41:49+00:00,[],None
434,https://github.com/Kononenko-K/ILI9488-Verilog-Demo.git,2024-02-05 18:11:39+00:00,A simple pure Verilog ILI9488 320x480 TFT Display demo,0,Kononenko-K/ILI9488-Verilog-Demo,753232189,Verilog,ILI9488-Verilog-Demo,15960,0,2024-02-05 18:15:30+00:00,[],None
435,https://github.com/ruzicka02/VerilogNN.git,2024-02-08 15:57:50+00:00,"Multiple Verilog modules to work with floating points, used when creating a neural network",0,ruzicka02/VerilogNN,754703244,Verilog,VerilogNN,207,0,2024-03-14 19:54:59+00:00,[],None
436,https://github.com/lancemitrex/tt-fpga-hdl-demo.git,2024-02-07 16:36:14+00:00,,0,lancemitrex/tt-fpga-hdl-demo,754225632,Verilog,tt-fpga-hdl-demo,110,0,2024-02-09 18:43:16+00:00,[],https://api.github.com/licenses/apache-2.0
437,https://github.com/e-Dylan/ELEC374_CPU.git,2024-01-29 18:40:49+00:00,,0,e-Dylan/ELEC374_CPU,749971194,Verilog,ELEC374_CPU,1396,0,2024-02-10 22:05:19+00:00,[],None
438,https://github.com/SohamVaishnav/y86-64bit-processor.git,2024-01-26 06:49:47+00:00,Course Project - Intro to Processor Architecture,0,SohamVaishnav/y86-64bit-processor,748521922,Verilog,y86-64bit-processor,7194,0,2024-03-27 21:03:23+00:00,[],None
439,https://github.com/maggoshreya/CIS_5710_smaggo_2.git,2024-02-04 01:52:53+00:00,,0,maggoshreya/CIS_5710_smaggo_2,752491906,Verilog,CIS_5710_smaggo_2,3814,0,2024-03-30 00:45:36+00:00,[],https://api.github.com/licenses/mit
440,https://github.com/ABKGroup/SLO-ECO.git,2024-02-04 17:12:45+00:00,,0,ABKGroup/SLO-ECO,752739239,Verilog,SLO-ECO,235738,0,2024-04-04 21:18:53+00:00,[],https://api.github.com/licenses/bsd-3-clause
441,https://github.com/RSguy11/Custom_CPU.git,2024-02-03 21:05:23+00:00,Creation of Custom CPU in the verilog language,0,RSguy11/Custom_CPU,752439795,Verilog,Custom_CPU,91711,0,2024-03-27 19:29:41+00:00,[],None
442,https://github.com/Joe-Pacifiker/IceStick.git,2024-02-07 03:18:29+00:00,Lattice IceStick FPGA project development,0,Joe-Pacifiker/IceStick,753921116,Verilog,IceStick,350885,0,2024-02-26 00:00:47+00:00,[],None
443,https://github.com/SONAMSHANDILYA/Frequency-Divider-even-.git,2024-01-25 12:10:55+00:00,,0,SONAMSHANDILYA/Frequency-Divider-even-,748164591,Verilog,Frequency-Divider-even-,3,0,2024-01-25 12:11:54+00:00,[],None
444,https://github.com/Furkan2001/CSE331-HW.git,2024-01-26 16:16:33+00:00,,0,Furkan2001/CSE331-HW,748723297,Verilog,CSE331-HW,1130,0,2024-01-26 16:27:09+00:00,[],None
445,https://github.com/tanishshah07/tetst1.git,2024-01-28 12:24:17+00:00,,0,tanishshah07/tetst1,749381104,Verilog,tetst1,13,0,2024-01-28 12:56:42+00:00,[],None
446,https://github.com/tanishshah07/DMC.git,2024-01-28 13:19:37+00:00,without memory module,0,tanishshah07/DMC,749396471,Verilog,DMC,42,0,2024-01-28 13:20:19+00:00,[],None
447,https://github.com/MahdiMobini/manteqi.project.git,2024-01-27 16:05:49+00:00,,0,MahdiMobini/manteqi.project,749111910,Verilog,manteqi.project,5,0,2024-01-27 16:12:33+00:00,[],None
448,https://github.com/saicharan1996/Designs.git,2024-01-26 03:03:08+00:00,All needed designs,0,saicharan1996/Designs,748468610,Verilog,Designs,277,0,2024-01-26 03:07:08+00:00,[],None
449,https://github.com/andrei-eduard-s/Afisaj-7seg-FPGA.git,2024-01-30 10:39:06+00:00,Implementarea unui sumator pe o placă FPGA Terasic DE10-Lite folosind switch-uri.,0,andrei-eduard-s/Afisaj-7seg-FPGA,750279120,Verilog,Afisaj-7seg-FPGA,3671,0,2024-01-30 10:46:27+00:00,[],None
450,https://github.com/EngAhmed21/RISC-V-Multi-Cycle-Processor.git,2024-01-30 23:17:49+00:00,,1,EngAhmed21/RISC-V-Multi-Cycle-Processor,750587351,Verilog,RISC-V-Multi-Cycle-Processor,17,0,2024-01-30 23:18:49+00:00,[],None
451,https://github.com/Abhi-Singh11/prng.git,2024-01-31 09:39:27+00:00,,0,Abhi-Singh11/prng,750772169,Verilog,prng,1,0,2024-01-31 09:39:57+00:00,[],None
452,https://github.com/ayaahmed20018414/SAP1-simple-as-possible-processor.git,2024-01-30 23:40:40+00:00,,0,ayaahmed20018414/SAP1-simple-as-possible-processor,750592902,Verilog,SAP1-simple-as-possible-processor,22,0,2024-01-31 13:23:28+00:00,[],None
453,https://github.com/wns9294/box.git,2024-02-01 08:29:11+00:00,,0,wns9294/box,751250552,Verilog,box,11927,0,2024-02-01 08:29:56+00:00,[],https://api.github.com/licenses/apache-2.0
454,https://github.com/naavaneetha/Project-Based-Experiment.git,2024-02-02 10:16:35+00:00,,0,naavaneetha/Project-Based-Experiment,751783889,Verilog,Project-Based-Experiment,450,0,2024-02-02 10:21:49+00:00,[],https://api.github.com/licenses/gpl-3.0
455,https://github.com/doctor-TZ/my_caravel2.git,2024-02-02 04:01:25+00:00,,0,doctor-TZ/my_caravel2,751666138,Verilog,my_caravel2,11929,0,2024-02-02 04:02:06+00:00,[],https://api.github.com/licenses/apache-2.0
456,https://github.com/JOKleinGe1/min_sys_riscv.git,2024-01-28 08:52:11+00:00,Minimal system project with riscv core picorv32 : asm startup + linker script + c example + verilog system + testbench + Makefile,0,JOKleinGe1/min_sys_riscv,749328033,Verilog,min_sys_riscv,184,0,2024-01-28 23:17:04+00:00,"['picorv32', 'risc-v', 'verilog-hdl', 'gcc']",https://api.github.com/licenses/cc0-1.0
457,https://github.com/Alexsung929/DSD_RISC-V_Processor.git,2024-02-02 20:03:11+00:00,NTUEE Digital System Design 2021 Spring,0,Alexsung929/DSD_RISC-V_Processor,752006712,Verilog,DSD_RISC-V_Processor,12,0,2024-02-02 20:07:08+00:00,[],None
458,https://github.com/ymentawy/RISCV-Processor-Pipelined-.git,2024-02-02 21:10:53+00:00,This is a project of implementing a RISCV-based processor using Verilog HDL.,0,ymentawy/RISCV-Processor-Pipelined-,752026779,Verilog,RISCV-Processor-Pipelined-,15,0,2024-02-02 21:31:27+00:00,[],None
459,https://github.com/TOFU-0218/verilog_exercise.git,2024-02-03 01:47:41+00:00,verilogの練習問題を解いたやつ,0,TOFU-0218/verilog_exercise,752087678,Verilog,verilog_exercise,11,0,2024-02-03 01:51:27+00:00,[],None
460,https://github.com/MVS-Abhiram/Router_1x3_Design.git,2024-02-03 14:47:17+00:00,Implements a router which has 1 input and 3 outputs,0,MVS-Abhiram/Router_1x3_Design,752272161,Verilog,Router_1x3_Design,23,0,2024-02-03 14:49:14+00:00,[],None
461,https://github.com/DouglasWWolf/tb_pgm_clock_gens.git,2024-02-03 11:52:50+00:00,testbed for programming Indy Si-570 clock generators,0,DouglasWWolf/tb_pgm_clock_gens,752222396,Verilog,tb_pgm_clock_gens,706,0,2024-02-03 11:54:47+00:00,[],None
462,https://github.com/fiddleyowl/fpga-projects-fa23-fiddleyowl.git,2024-02-04 07:19:46+00:00,,0,fiddleyowl/fpga-projects-fa23-fiddleyowl,752554912,Verilog,fpga-projects-fa23-fiddleyowl,82,0,2024-02-04 07:19:50+00:00,[],None
463,https://github.com/selaka-deemantha/VGA_controller.git,2024-02-04 15:13:02+00:00,,0,selaka-deemantha/VGA_controller,752700284,Verilog,VGA_controller,2,0,2024-02-04 15:23:16+00:00,[],None
464,https://github.com/Emre-KMZ/fpga-puck-game.git,2024-02-05 06:49:54+00:00,,0,Emre-KMZ/fpga-puck-game,752945324,Verilog,fpga-puck-game,4840,0,2024-02-05 06:51:25+00:00,[],None
465,https://github.com/Hamza-Ali10/Traffic-light-controller-.git,2024-02-05 17:06:31+00:00,"A Verilog source code for a traffic light controller on FPGA is presented. A sensor on the farm is to detect if there are any vehicles and change the traffic light to allow the vehicles to cross the highway. Otherwise, highway light is always green since it has higher priority than the farm. ",0,Hamza-Ali10/Traffic-light-controller-,753203616,Verilog,Traffic-light-controller-,2,0,2024-02-05 17:07:07+00:00,[],None
466,https://github.com/sidd2423/Audi-etron-GT-Taillamps.git,2024-02-05 18:33:12+00:00,I used Intel Quartus Prime and DE-10 lite board to make a hybrid system that functions similarly as Aud etron GT 's tail lights.,0,sidd2423/Audi-etron-GT-Taillamps,753241568,Verilog,Audi-etron-GT-Taillamps,5,0,2024-02-05 18:35:34+00:00,[],None
467,https://github.com/JAIDEEPRABHU/MIPS-.git,2024-02-07 12:06:19+00:00,,0,JAIDEEPRABHU/MIPS-,754102524,Verilog,MIPS-,8,0,2024-02-07 12:06:44+00:00,[],None
468,https://github.com/VanashreeParate/Alarm-Clock.git,2024-02-07 12:00:20+00:00,,0,VanashreeParate/Alarm-Clock,754100192,Verilog,Alarm-Clock,149,0,2024-02-07 12:06:03+00:00,[],None
469,https://github.com/JAIDEEPRABHU/FIFO.git,2024-02-07 12:10:02+00:00,,0,JAIDEEPRABHU/FIFO,754104063,Verilog,FIFO,6,0,2024-02-07 12:10:21+00:00,[],None
470,https://github.com/vijay12panwar/air-field-system.git,2024-02-07 20:38:01+00:00,,0,vijay12panwar/air-field-system,754325643,Verilog,air-field-system,368,0,2024-02-07 20:39:49+00:00,[],https://api.github.com/licenses/mit
471,https://github.com/keeshanrama/System-Design-with-ChatGPT.git,2024-02-07 21:51:47+00:00,,0,keeshanrama/System-Design-with-ChatGPT,754350040,Verilog,System-Design-with-ChatGPT,2,0,2024-02-07 21:52:48+00:00,[],None
472,https://github.com/erkmenx/caravel_odbem.git,2024-02-09 07:14:37+00:00,,0,erkmenx/caravel_odbem,754985102,Verilog,caravel_odbem,11927,0,2024-02-09 07:15:18+00:00,[],https://api.github.com/licenses/apache-2.0
473,https://github.com/alidoganarkali/-ip_tasar-m-0.2.git,2024-02-09 11:16:58+00:00,,0,alidoganarkali/-ip_tasar-m-0.2,755064448,Verilog,-ip_tasar-m-0.2,11927,0,2024-02-09 11:17:41+00:00,[],https://api.github.com/licenses/apache-2.0
474,https://github.com/melferranti/Structural-ALU.git,2024-02-13 00:41:03+00:00,,0,melferranti/Structural-ALU,756617685,Verilog,Structural-ALU,6,0,2024-02-13 00:41:43+00:00,[],None
475,https://github.com/oguzhanvtnsvr/caravel-experiment.git,2024-02-12 19:59:15+00:00,,0,oguzhanvtnsvr/caravel-experiment,756514021,Verilog,caravel-experiment,11927,0,2024-02-12 19:59:57+00:00,[],https://api.github.com/licenses/apache-2.0
476,https://github.com/on23tueda/rensyu.git,2024-02-09 17:14:52+00:00,,0,on23tueda/rensyu,755220183,Verilog,rensyu,11927,0,2024-02-09 17:15:35+00:00,[],https://api.github.com/licenses/apache-2.0
477,https://github.com/darsh612/CNN-ASIC-Design.git,2024-02-09 17:11:03+00:00,,0,darsh612/CNN-ASIC-Design,755218633,Verilog,CNN-ASIC-Design,5995,0,2024-02-09 17:18:44+00:00,[],None
478,https://github.com/AbrarShaikh/ALU_8bit_Nexys-4DDR.git,2024-02-11 07:07:24+00:00,,0,AbrarShaikh/ALU_8bit_Nexys-4DDR,755823857,Verilog,ALU_8bit_Nexys-4DDR,5,0,2024-02-11 07:07:50+00:00,[],None
479,https://github.com/sujeet1102/riscv_cpu.git,2024-02-10 17:21:52+00:00,Implementation of RISC-V CPU (RV32I) on FPGA (de0-nano),0,sujeet1102/riscv_cpu,755592834,Verilog,riscv_cpu,74,0,2024-02-10 18:46:58+00:00,[],None
480,https://github.com/Abdelrahman1810/4_bit_ALU_displayOn_7_Segment_LED.git,2024-02-13 21:31:28+00:00,verilog code represents a 4-bit ALU and display on 7-Segment LED with a testbench to check the code,0,Abdelrahman1810/4_bit_ALU_displayOn_7_Segment_LED,757130166,Verilog,4_bit_ALU_displayOn_7_Segment_LED,2,0,2024-02-13 21:31:35+00:00,[],None
481,https://github.com/PraveenaK7/Verilog.git,2024-02-14 16:04:52+00:00,DSD Project ,0,PraveenaK7/Verilog,757496295,Verilog,Verilog,8,0,2024-02-14 16:07:05+00:00,[],None
482,https://github.com/Derpanieux/Venture-RISC-V.git,2024-01-30 04:17:52+00:00,A Verilog implemented RISC-V processor,0,Derpanieux/Venture-RISC-V,750146096,Verilog,Venture-RISC-V,25,0,2024-01-30 05:08:46+00:00,[],https://api.github.com/licenses/mit
483,https://github.com/KanishR1/multipliers.git,2024-02-12 14:45:19+00:00,This repository is created to store generic code template of various multipliers,0,KanishR1/multipliers,756374295,Verilog,multipliers,765,0,2024-02-17 11:21:46+00:00,[],https://api.github.com/licenses/mit
484,https://github.com/Muhammadussain/Openlane_Designs.git,2024-02-13 14:57:31+00:00,,0,Muhammadussain/Openlane_Designs,756914702,Verilog,Openlane_Designs,25523,0,2024-02-18 13:18:27+00:00,[],None
485,https://github.com/ashwini0921/Generation-Of-Pn-Sequence-With-Internal-555-Timer-Based-Clock-Using-eSim-And-SKY130.git,2024-02-12 12:33:08+00:00,,0,ashwini0921/Generation-Of-Pn-Sequence-With-Internal-555-Timer-Based-Clock-Using-eSim-And-SKY130,756316749,Verilog,Generation-Of-Pn-Sequence-With-Internal-555-Timer-Based-Clock-Using-eSim-And-SKY130,347,0,2024-02-20 06:18:27+00:00,[],None
486,https://github.com/ThorKn/TT06_AudioChip_V2.git,2024-02-08 20:03:28+00:00,Version 2.0 of the AudioChip. An earlier version of AudioChip was put on the GF180 MPW-1 shuttlerun.,1,ThorKn/TT06_AudioChip_V2,754808924,Verilog,TT06_AudioChip_V2,24,0,2024-02-21 16:23:11+00:00,[],https://api.github.com/licenses/apache-2.0
487,https://github.com/Daniel-Saravia/matrix_multiplication_fpga.git,2024-02-13 04:47:15+00:00,,0,Daniel-Saravia/matrix_multiplication_fpga,756676786,Verilog,matrix_multiplication_fpga,241000,0,2024-02-29 10:56:32+00:00,[],None
488,https://github.com/yukinagata3184/de0_1hclock.git,2024-01-27 11:57:20+00:00,This project uses Terasic DE0 (CycloneⅢ EP3C16F484C6) to create 1 hour clock.,0,yukinagata3184/de0_1hclock,749036458,Verilog,de0_1hclock,64,0,2024-01-28 01:45:20+00:00,[],https://api.github.com/licenses/mit
489,https://github.com/kvb-cal/fpga-router.git,2024-02-14 20:30:28+00:00,FPGA based robust router architecture,0,kvb-cal/fpga-router,757713536,Verilog,fpga-router,33,0,2024-03-09 09:53:09+00:00,[],https://api.github.com/licenses/gpl-3.0
490,https://github.com/JaeHWg/HandsOn1-InClassActivity.git,2024-02-01 10:17:09+00:00,Logic Gates,0,JaeHWg/HandsOn1-InClassActivity,751293337,Verilog,HandsOn1-InClassActivity,15,0,2024-03-24 01:54:37+00:00,[],None
491,https://github.com/FPGASystemsLab/dev_touchscreen.git,2024-01-30 18:59:11+00:00,,0,FPGASystemsLab/dev_touchscreen,750499235,Verilog,dev_touchscreen,7,0,2024-03-24 20:33:11+00:00,[],https://api.github.com/licenses/mit
492,https://github.com/JunzeLi1/ASIC_design_Lab.git,2024-01-27 03:05:12+00:00,,0,JunzeLi1/ASIC_design_Lab,748916225,Verilog,ASIC_design_Lab,8357,0,2024-03-31 21:40:10+00:00,[],None
493,https://github.com/felipevidias/2024-1_ARQ1.git,2024-02-04 03:31:44+00:00,,0,felipevidias/2024-1_ARQ1,752509193,Verilog,2024-1_ARQ1,68,0,2024-03-09 22:04:47+00:00,[],None
494,https://github.com/vinimiraa/AC-I.git,2024-02-07 00:09:47+00:00,Repositório da matéria de Arquitetura de Computadores 1 com o Professor Theldo Cruz Franqueira,0,vinimiraa/AC-I,753871622,Verilog,AC-I,202,0,2024-04-07 23:08:49+00:00,"['computer-architecture', 'logic-circuits', 'logic-gates', 'logisim', 'verilog']",None
495,https://github.com/Padidapu-Bhargav/FPGA-Project.git,2024-02-08 11:07:31+00:00,,0,Padidapu-Bhargav/FPGA-Project,754581410,Verilog,FPGA-Project,1544,0,2024-02-08 11:11:27+00:00,[],None
496,https://github.com/gomadoufu/intel-fpga-book.git,2024-01-27 12:01:37+00:00,,0,gomadoufu/intel-fpga-book,749037491,Verilog,intel-fpga-book,27533,0,2024-01-27 12:01:44+00:00,[],None
497,https://github.com/ErosCamacho/sha3_shake.git,2024-02-01 14:50:26+00:00,,0,ErosCamacho/sha3_shake,751405262,Verilog,sha3_shake,12846,0,2024-02-01 14:50:47+00:00,[],None
498,https://github.com/chinnapa5264/vivado_new.git,2024-02-08 10:56:11+00:00,,0,chinnapa5264/vivado_new,754577095,Verilog,vivado_new,2095,0,2024-02-08 10:59:12+00:00,[],None
499,https://github.com/harshvardhan189/Verilog.git,2024-01-30 13:19:15+00:00,,0,harshvardhan189/Verilog,750343560,Verilog,Verilog,45,0,2024-01-30 17:05:36+00:00,[],None
500,https://github.com/codingdev0075/Traffic-Light-Controller.git,2024-02-13 18:21:03+00:00,Using the verilog module i have created a verilog module,0,codingdev0075/Traffic-Light-Controller,757009752,Verilog,Traffic-Light-Controller,425,0,2024-02-13 18:22:22+00:00,[],None
501,https://github.com/VivekDeniz/ELEC374_CPU_Project.git,2024-02-12 18:20:40+00:00,,2,VivekDeniz/ELEC374_CPU_Project,756471690,Verilog,ELEC374_CPU_Project,10995,0,2024-03-23 17:15:40+00:00,[],None
502,https://github.com/Bakeu127/MIPS_Processor.git,2024-01-25 10:18:26+00:00,,0,Bakeu127/MIPS_Processor,748122190,Verilog,MIPS_Processor,6,0,2024-01-25 10:29:17+00:00,[],None
503,https://github.com/Corigine-mimic/xdma-ddr_demo.git,2024-01-25 03:01:26+00:00,,0,Corigine-mimic/xdma-ddr_demo,747985712,Verilog,xdma-ddr_demo,476,0,2024-01-25 06:09:11+00:00,[],None
504,https://github.com/poojaudupa25/adld.git,2024-01-25 07:06:59+00:00,,0,poojaudupa25/adld,748052272,Verilog,adld,170,0,2024-01-25 07:10:44+00:00,[],None
505,https://github.com/renvlers/MyCPU.git,2024-01-25 12:17:48+00:00,My CPU,0,renvlers/MyCPU,748167243,Verilog,MyCPU,23,0,2024-01-25 12:21:11+00:00,[],None
506,https://github.com/SONAMSHANDILYA/Frequency-Divider-odd.git,2024-01-26 08:32:15+00:00,,0,SONAMSHANDILYA/Frequency-Divider-odd,748552916,Verilog,Frequency-Divider-odd,3,0,2024-01-26 08:42:39+00:00,[],None
507,https://github.com/jiun264/Updowncounter.git,2024-01-29 16:01:13+00:00,counter,0,jiun264/Updowncounter,749896103,Verilog,Updowncounter,4,0,2024-01-29 16:01:46+00:00,[],None
508,https://github.com/MoYasser1777/Floating-Point-Adder-Multiplier-in-Verilog.git,2024-01-29 11:14:42+00:00,,0,MoYasser1777/Floating-Point-Adder-Multiplier-in-Verilog,749772018,Verilog,Floating-Point-Adder-Multiplier-in-Verilog,382,0,2024-01-29 11:15:40+00:00,[],None
509,https://github.com/V0XNIHILI/verilog-array-operations.git,2024-01-26 23:43:58+00:00,Verilog array operations like reshaping,0,V0XNIHILI/verilog-array-operations,748877399,Verilog,verilog-array-operations,10,0,2024-01-26 23:44:16+00:00,[],None
510,https://github.com/SuchithraM008/HDL-code-to-compute-Y-DXD-T.git,2024-01-29 10:55:11+00:00,,0,SuchithraM008/HDL-code-to-compute-Y-DXD-T,749764481,Verilog,HDL-code-to-compute-Y-DXD-T,21,0,2024-01-29 11:05:05+00:00,[],https://api.github.com/licenses/apache-2.0
511,https://github.com/TsaiMingZhe/Gauss-Seidel-Iteration-Machine.git,2024-01-25 12:46:07+00:00,,0,TsaiMingZhe/Gauss-Seidel-Iteration-Machine,748178036,Verilog,Gauss-Seidel-Iteration-Machine,45,0,2024-01-25 15:32:57+00:00,[],None
512,https://github.com/talaalsweiti/RISC-Multicycle-process-.git,2024-02-01 19:55:10+00:00,,0,talaalsweiti/RISC-Multicycle-process-,751535277,Verilog,RISC-Multicycle-process-,772,0,2024-02-01 19:56:24+00:00,[],None
513,https://github.com/DomMurphy-git/Verilog_Chess.git,2024-02-01 18:41:16+00:00,EC311 Final Project: Chess in Verilog running on Artix-7 and FPGA,0,DomMurphy-git/Verilog_Chess,751507526,Verilog,Verilog_Chess,2582,0,2024-02-01 19:46:38+00:00,[],None
514,https://github.com/navaneethans/VLSI-LAB-EXP-1.git,2024-02-01 06:02:36+00:00,,106,navaneethans/VLSI-LAB-EXP-1,751200714,Verilog,VLSI-LAB-EXP-1,11,0,2024-02-01 06:38:32+00:00,[],None
515,https://github.com/maryambaig105/FPGA-based-air-hockey-game.git,2024-02-01 20:17:22+00:00,,0,maryambaig105/FPGA-based-air-hockey-game,751543090,Verilog,FPGA-based-air-hockey-game,13,0,2024-02-01 20:28:29+00:00,[],None
516,https://github.com/navaneethans/VLSI-LAB-EXP-5.git,2024-02-01 06:46:31+00:00,,3,navaneethans/VLSI-LAB-EXP-5,751215029,Verilog,VLSI-LAB-EXP-5,3,0,2024-02-01 09:40:48+00:00,[],None
517,https://github.com/navaneethans/VLSI-LAB-EXP-2.git,2024-02-01 06:43:29+00:00,,68,navaneethans/VLSI-LAB-EXP-2,751213988,Verilog,VLSI-LAB-EXP-2,7,0,2024-02-01 09:07:52+00:00,[],None
518,https://github.com/navaneethans/VLSI-LAB-EXP-4.git,2024-02-01 06:44:55+00:00,,22,navaneethans/VLSI-LAB-EXP-4,751214457,Verilog,VLSI-LAB-EXP-4,6,0,2024-02-01 09:38:21+00:00,[],None
519,https://github.com/Wolf-Tungsten/wolf-rtl-collection.git,2024-02-02 13:27:55+00:00," Sharing with you some RTL widgets for daily use, for ease of copying and pasting",0,Wolf-Tungsten/wolf-rtl-collection,751854920,Verilog,wolf-rtl-collection,15,0,2024-02-02 13:38:53+00:00,[],https://api.github.com/licenses/gpl-3.0
520,https://github.com/SrikantDV/memory-controller.git,2024-01-29 12:40:52+00:00,,0,SrikantDV/memory-controller,749805444,Verilog,memory-controller,3680,0,2024-02-02 11:10:58+00:00,[],None
521,https://github.com/1649406823gm/FPGA_Projects.git,2024-02-03 08:03:24+00:00,,0,1649406823gm/FPGA_Projects,752164316,Verilog,FPGA_Projects,29275,0,2024-02-03 08:06:05+00:00,[],None
522,https://github.com/Abhinav-863/Synchronous-Clock-Divider.git,2024-02-03 06:21:23+00:00,,0,Abhinav-863/Synchronous-Clock-Divider,752140709,Verilog,Synchronous-Clock-Divider,64,0,2024-02-03 06:49:00+00:00,[],None
523,https://github.com/WangYijun-OUC/OUC_AICS.git,2024-02-04 08:26:06+00:00,,0,WangYijun-OUC/OUC_AICS,752570787,Verilog,OUC_AICS,184,0,2024-02-04 08:27:17+00:00,[],None
524,https://github.com/ladalar/Verilog.git,2024-02-01 06:11:38+00:00,Simple code to try Icarus Verilog,0,ladalar/Verilog,751203516,Verilog,Verilog,5,0,2024-02-04 00:00:55+00:00,[],None
525,https://github.com/MVS-Abhiram/Single_port_ram_16x8.git,2024-02-05 05:36:46+00:00,"In this module, The implementation of a single port ram memory designa, dimulation and synthesis is done",0,MVS-Abhiram/Single_port_ram_16x8,752923441,Verilog,Single_port_ram_16x8,71,0,2024-02-05 05:37:36+00:00,[],None
526,https://github.com/Aryan1909/GTH-Transciever-wizard-on-ZCU102.git,2024-02-05 10:59:16+00:00,"Verilog code for GTH transcievers wizard on zcu102 in vivado 2020.1. There are 2 wizards in the code, the first one is set for the RF signals and the second for optical signal through a SFP+ module. Note that, although both may look identical blocks in the code, the MGTREF clock is different for both.",0,Aryan1909/GTH-Transciever-wizard-on-ZCU102,753041427,Verilog,GTH-Transciever-wizard-on-ZCU102,7,0,2024-02-05 11:26:23+00:00,[],None
527,https://github.com/natemik/ICSAANM1.git,2024-02-06 19:56:35+00:00,,0,natemik/ICSAANM1,753792287,Verilog,ICSAANM1,20,0,2024-02-07 17:53:17+00:00,[],None
528,https://github.com/AlixYehia/Verilog.git,2024-02-10 23:24:07+00:00,,0,AlixYehia/Verilog,755747684,Verilog,Verilog,11,0,2024-02-11 14:28:09+00:00,[],None
529,https://github.com/zw2123/ASIC_Crypto.git,2024-02-11 02:38:48+00:00,"Side project, crypto ASIC design.",0,zw2123/ASIC_Crypto,755777420,Verilog,ASIC_Crypto,37,0,2024-02-11 02:39:12+00:00,[],None
530,https://github.com/Spandhan2003/Verilog-based-Neural-Accelerator.git,2024-02-10 18:26:16+00:00,,0,Spandhan2003/Verilog-based-Neural-Accelerator,755611053,Verilog,Verilog-based-Neural-Accelerator,82,0,2024-02-10 18:29:23+00:00,[],None
531,https://github.com/anushkachintawar/All_In_One_Counter.git,2024-02-12 07:38:28+00:00,,0,anushkachintawar/All_In_One_Counter,756208235,Verilog,All_In_One_Counter,493,0,2024-02-12 07:42:18+00:00,[],None
532,https://github.com/MVS-Abhiram/Even_odd_up_down-counter.git,2024-02-13 03:46:12+00:00,It counts only even ny=umbers in up count and odd numbers in down count,0,MVS-Abhiram/Even_odd_up_down-counter,756660861,Verilog,Even_odd_up_down-counter,165,0,2024-02-13 03:46:47+00:00,[],None
533,https://github.com/Neisseri/cod23-grp45.git,2024-02-13 13:15:54+00:00,计组大实验,0,Neisseri/cod23-grp45,756866459,Verilog,cod23-grp45,482,0,2024-02-13 13:16:50+00:00,[],None
534,https://github.com/Zyy439/Easy_eth.git,2024-02-03 12:47:20+00:00,"Easy_Eth is a simple ethernet stack based on verilog, support up to 25Gbps. can be implement on Xilinx FPGA and work together with AXI 10G ethernet subsystem IP",0,Zyy439/Easy_eth,752237022,Verilog,Easy_eth,20,0,2024-02-14 13:44:28+00:00,[],None
535,https://github.com/MrCrewKY/Tic-Tac-Toe-Digital-System.git,2024-02-14 09:49:15+00:00,Here lies the full documentation of my Tic Tac Toe Microprocessor project coded in Verilog.,0,MrCrewKY/Tic-Tac-Toe-Digital-System,757341083,Verilog,Tic-Tac-Toe-Digital-System,28229,0,2024-02-15 10:41:44+00:00,[],None
536,https://github.com/Lingling-LynnChan/risc-v_npc.git,2024-02-08 15:24:15+00:00,ysyx,0,Lingling-LynnChan/risc-v_npc,754688589,Verilog,risc-v_npc,1044,0,2024-02-20 07:06:46+00:00,[],None
537,https://github.com/zbonneau/MSP430_Design.git,2024-02-07 01:40:55+00:00,,0,zbonneau/MSP430_Design,753895090,Verilog,MSP430_Design,403,0,2024-02-07 03:30:28+00:00,[],None
538,https://github.com/MrMisterial/FIR_FILTER_WITH_CONFIGURABLE_COEFFS.git,2024-01-25 22:07:56+00:00,,0,MrMisterial/FIR_FILTER_WITH_CONFIGURABLE_COEFFS,748398714,Verilog,FIR_FILTER_WITH_CONFIGURABLE_COEFFS,10,0,2024-01-25 22:08:02+00:00,[],https://api.github.com/licenses/apache-2.0
539,https://github.com/SauravS-01/Radix-2-Booth-Multiplier.git,2024-01-27 17:56:24+00:00,,0,SauravS-01/Radix-2-Booth-Multiplier,749144577,Verilog,Radix-2-Booth-Multiplier,279,0,2024-01-27 17:57:50+00:00,[],None
540,https://github.com/mangesht/xil_libs.git,2024-01-28 16:46:31+00:00,"Contains unisims,unimacros for verilog and VHDL ",0,mangesht/xil_libs,749460078,Verilog,xil_libs,13853,0,2024-01-29 11:45:53+00:00,[],None
541,https://github.com/surajkoppad/Iris_assignment.git,2024-01-28 13:22:39+00:00,,0,surajkoppad/Iris_assignment,749397420,Verilog,Iris_assignment,838,0,2024-01-28 14:49:35+00:00,[],None
542,https://github.com/lukemello/efabless_tutorial_mello.git,2024-01-28 21:41:26+00:00,,0,lukemello/efabless_tutorial_mello,749543029,Verilog,efabless_tutorial_mello,11927,0,2024-01-28 21:42:06+00:00,[],https://api.github.com/licenses/apache-2.0
543,https://github.com/berkeayyldzl/CS303-Logic-and-Digital-System-Design.git,2024-01-28 17:35:15+00:00,This repository contains the laboratory codes for the CS303 Logic and Digital System Design course taken in 2023-2024 fall term. All the labs are passed with full mark.,0,berkeayyldzl/CS303-Logic-and-Digital-System-Design,749475536,Verilog,CS303-Logic-and-Digital-System-Design,2536,0,2024-01-28 19:25:14+00:00,[],None
544,https://github.com/MrinmoyOpsAlpha/verilog-mini-projects.git,2024-01-27 08:37:07+00:00,,0,MrinmoyOpsAlpha/verilog-mini-projects,748985600,Verilog,verilog-mini-projects,70,0,2024-01-27 08:39:14+00:00,[],None
545,https://github.com/Apdonis/3300_Lab0.git,2024-01-31 03:57:05+00:00,,0,Apdonis/3300_Lab0,750658215,Verilog,3300_Lab0,9,0,2024-01-31 04:17:43+00:00,[],None
546,https://github.com/aven-arlington/riscv-fpga.git,2024-01-27 18:54:57+00:00,Example project for tinkering with a BeagleV Fire development board.,0,aven-arlington/riscv-fpga,749160747,Verilog,riscv-fpga,11819,0,2024-02-01 01:11:49+00:00,[],https://api.github.com/licenses/mit
547,https://github.com/MYNAMEHOLO/NN.git,2024-02-01 03:29:35+00:00,LDR 2 HDR NN,0,MYNAMEHOLO/NN,751159577,Verilog,NN,13,0,2024-02-01 03:29:55+00:00,[],None
548,https://github.com/SONAMSHANDILYA/FIR-FILTER.git,2024-02-01 18:12:39+00:00,,0,SONAMSHANDILYA/FIR-FILTER,751495866,Verilog,FIR-FILTER,4,0,2024-02-01 18:13:35+00:00,[],None
549,https://github.com/PumpedSardines/pumpeds_computer.git,2024-02-01 16:39:43+00:00,A computer with it's own specification written in Rust and implemented in the game Turing Complete!,0,PumpedSardines/pumpeds_computer,751455161,Verilog,pumpeds_computer,417,0,2024-02-01 16:39:59+00:00,[],None
550,https://github.com/Goatney/axi_stream_insert_header.git,2024-02-03 07:56:35+00:00,axi_stream_insert_header,0,Goatney/axi_stream_insert_header,752162720,Verilog,axi_stream_insert_header,63,0,2024-02-03 13:32:33+00:00,[],None
551,https://github.com/yogeshky11/Verification-with-UVM.git,2024-02-04 19:30:31+00:00,,0,yogeshky11/Verification-with-UVM,752780479,Verilog,Verification-with-UVM,4,0,2024-02-04 20:42:25+00:00,[],None
552,https://github.com/najeebuddin09/8BitCPU_verilog.git,2024-02-05 02:45:36+00:00,,0,najeebuddin09/8BitCPU_verilog,752880953,Verilog,8BitCPU_verilog,207,0,2024-02-05 02:46:38+00:00,[],None
553,https://github.com/minhsun-c/Regular-Precision-FP-Hardware.git,2024-02-05 04:25:03+00:00,,0,minhsun-c/Regular-Precision-FP-Hardware,752905049,Verilog,Regular-Precision-FP-Hardware,2,0,2024-02-05 04:57:08+00:00,[],None
554,https://github.com/AlaaddinGursoy/VerilogProjects.git,2024-02-05 17:18:33+00:00,An Basic Proccesor Implementation and Metro Station Project.,0,AlaaddinGursoy/VerilogProjects,753209114,Verilog,VerilogProjects,815,0,2024-02-05 17:22:28+00:00,[],None
555,https://github.com/denisa-pana/maze-solver.git,2024-02-05 18:05:12+00:00,Implementation of a synchronous sequential circuit traversing a maze of size 64×64.,0,denisa-pana/maze-solver,753229343,Verilog,maze-solver,2,0,2024-02-05 18:14:09+00:00,[],None
556,https://github.com/Askaann/Verilog-.git,2024-02-03 01:27:11+00:00,,0,Askaann/Verilog-,752083777,Verilog,Verilog-,5,0,2024-02-04 18:34:36+00:00,[],None
557,https://github.com/SohamD242/ATM_design.git,2024-02-07 17:55:29+00:00,,0,SohamD242/ATM_design,754260882,Verilog,ATM_design,7,0,2024-02-07 17:56:47+00:00,[],None
558,https://github.com/bifanliu/Domain-Specific-accelerator.git,2024-02-07 04:35:02+00:00,,0,bifanliu/Domain-Specific-accelerator,753941196,Verilog,Domain-Specific-accelerator,2564,0,2024-02-07 05:22:15+00:00,[],None
559,https://github.com/MVS-Abhiram/Waveform_coding.git,2024-02-11 04:41:44+00:00,In this project based on thhe outwaveform we are going to do the RTL coding,0,MVS-Abhiram/Waveform_coding,755796524,Verilog,Waveform_coding,205,0,2024-02-11 04:46:42+00:00,[],None
560,https://github.com/NathanJones98/Alien-Invaders.git,2024-02-10 21:26:55+00:00,,0,NathanJones98/Alien-Invaders,755711769,Verilog,Alien-Invaders,39397,0,2024-02-10 21:27:51+00:00,[],None
561,https://github.com/Arnav-12/ARMv8-CPU.git,2024-02-11 12:52:21+00:00,"ARM LEGv8 CPU with a 5-stage pipeline, including IF, ID, EX, MEM, and WB stages",0,Arnav-12/ARMv8-CPU,755906111,Verilog,ARMv8-CPU,11,0,2024-02-11 13:25:42+00:00,[],None
562,https://github.com/Amanec031/Verilog-BCD-Adder.git,2024-02-11 12:10:49+00:00,I have developed  an efficient Verilog BCD adder module for decimal addition in digital circuits.,0,Amanec031/Verilog-BCD-Adder,755894547,Verilog,Verilog-BCD-Adder,3,0,2024-02-11 12:12:32+00:00,[],None
563,https://github.com/c3reuter-499/efabless-tt-fpga-hdl-demo.git,2024-02-07 16:46:57+00:00,,0,c3reuter-499/efabless-tt-fpga-hdl-demo,754230524,Verilog,efabless-tt-fpga-hdl-demo,18,0,2024-02-09 18:42:40+00:00,[],https://api.github.com/licenses/apache-2.0
564,https://github.com/mysterious24/Router-1X3.git,2024-02-11 17:38:00+00:00,The project is about a one input three output Router the file contains the RTL of topmodule and other sub modules,0,mysterious24/Router-1X3,755998741,Verilog,Router-1X3,15,0,2024-02-11 17:58:23+00:00,[],None
565,https://github.com/flarrow19/Verilog.git,2024-02-11 00:35:00+00:00,,0,flarrow19/Verilog,755759314,Verilog,Verilog,26,0,2024-02-11 00:36:43+00:00,[],None
566,https://github.com/LukeVassallo/picosoc-w-approximation.git,2024-01-27 17:52:41+00:00,Picorv32-IM with exact and approximate SIMD multiplication extensions. The SIMD modules can be accessed with custom RISC-V Instruction to perform dual/quad 8-bit multiplications.,0,LukeVassallo/picosoc-w-approximation,749143531,Verilog,picosoc-w-approximation,190333,0,2024-02-08 21:39:09+00:00,"['emulation', 'fpga', 'openlane', 'riscv', 'riscv-extension', 'picosoc', 'gf180', 'approximate-computing', 'simd']",https://api.github.com/licenses/apache-2.0
567,https://github.com/Abdelrahman1810/parameterized_D_T_FlipFlop.git,2024-02-13 21:53:06+00:00,,0,Abdelrahman1810/parameterized_D_T_FlipFlop,757137194,Verilog,parameterized_D_T_FlipFlop,1,0,2024-02-13 21:54:57+00:00,[],None
568,https://github.com/Bhuvana3230/ProjectWork.git,2024-02-14 05:35:56+00:00,,0,Bhuvana3230/ProjectWork,757255557,Verilog,ProjectWork,4,0,2024-02-14 05:43:46+00:00,[],None
569,https://github.com/nmendezst/ihp_stdcell_bmc.git,2024-02-14 17:32:21+00:00,,0,nmendezst/ihp_stdcell_bmc,757535102,Verilog,ihp_stdcell_bmc,1,0,2024-02-14 17:37:46+00:00,[],None
570,https://github.com/cskilbeck/fpga_lcd.git,2024-02-10 10:09:29+00:00,,0,cskilbeck/fpga_lcd,755471563,Verilog,fpga_lcd,23,0,2024-02-10 10:09:46+00:00,[],None
571,https://github.com/donnayye/Verilog-Projects.git,2024-02-11 04:26:53+00:00,,0,donnayye/Verilog-Projects,755794133,Verilog,Verilog-Projects,14,0,2024-02-11 04:29:44+00:00,[],None
572,https://github.com/HEMALATHA-KALLURU/Verilog-code-for-logic-gates.git,2024-02-07 11:10:49+00:00,,0,HEMALATHA-KALLURU/Verilog-code-for-logic-gates,754080634,Verilog,Verilog-code-for-logic-gates,2,0,2024-02-24 16:56:34+00:00,[],None
573,https://github.com/6192-sp24/lab1_b.git,2024-02-10 21:39:56+00:00,,0,6192-sp24/lab1_b,755715674,Verilog,lab1_b,77,0,2024-02-27 20:57:01+00:00,[],None
574,https://github.com/WTrenyer/ddr_file.git,2024-02-08 12:07:10+00:00,正点原子的ddr范例,0,WTrenyer/ddr_file,754603651,Verilog,ddr_file,21,0,2024-02-08 12:11:23+00:00,[],None
575,https://github.com/TotoroTron/amahdl.git,2024-01-29 01:33:47+00:00,,0,TotoroTron/amahdl,749590090,Verilog,amahdl,3686,0,2024-02-09 00:22:24+00:00,[],None
576,https://github.com/bonanyan/digital_logic_lab.git,2024-02-09 03:55:22+00:00,,0,bonanyan/digital_logic_lab,754934830,Verilog,digital_logic_lab,11881,0,2024-02-10 12:45:27+00:00,[],None
577,https://github.com/IEEE-NITK/Build-A-GPU.git,2024-02-07 06:48:03+00:00,"Building a simple 2D GPU with certain basic functions like line drawing, rectangular fill and draw, circle fill and draw and text. The GPU will have a single buffered 320x240 resolution drawing mode.",0,IEEE-NITK/Build-A-GPU,753980520,Verilog,Build-A-GPU,13,0,2024-03-19 10:13:40+00:00,[],None
578,https://github.com/songxuanchen/SerDes_28nm.git,2024-01-31 12:48:33+00:00,28nm项目各种代码,0,songxuanchen/SerDes_28nm,750847143,Verilog,SerDes_28nm,194,0,2024-03-04 05:23:29+00:00,[],None
579,https://github.com/vedantk91/CIS5710_vkelkar.git,2024-01-28 22:35:42+00:00,,0,vedantk91/CIS5710_vkelkar,749555067,Verilog,CIS5710_vkelkar,3903,0,2024-04-01 23:56:15+00:00,[],https://api.github.com/licenses/mit
580,https://github.com/preronaghosh/RISCV-PipelinedCore.git,2024-02-04 00:19:15+00:00,5-stage pipelined RISC-V core,0,preronaghosh/RISCV-PipelinedCore,752476379,Verilog,RISCV-PipelinedCore,2428,0,2024-04-09 00:09:04+00:00,[],None
581,https://github.com/yashbee313839/caravel-test.git,2024-01-25 08:29:55+00:00,Carevel Test,0,yashbee313839/caravel-test,748080994,Verilog,caravel-test,11927,0,2024-01-25 08:30:37+00:00,[],https://api.github.com/licenses/apache-2.0
582,https://github.com/DavidRLindley/Caravel_example.git,2024-01-25 18:58:09+00:00,,0,DavidRLindley/Caravel_example,748333621,Verilog,Caravel_example,11927,0,2024-01-25 18:58:48+00:00,[],https://api.github.com/licenses/apache-2.0
583,https://github.com/rohx17/VLSI_Wallace_Tree.git,2024-01-25 15:31:07+00:00,,0,rohx17/VLSI_Wallace_Tree,748248770,Verilog,VLSI_Wallace_Tree,25433,0,2024-01-25 15:32:37+00:00,[],None
584,https://github.com/AdwaithRK/Verilog_Base_router_without_trojan_and_trust_model.git,2024-01-28 07:58:48+00:00,,0,AdwaithRK/Verilog_Base_router_without_trojan_and_trust_model,749315977,Verilog,Verilog_Base_router_without_trojan_and_trust_model,43,0,2024-01-28 08:00:41+00:00,[],None
585,https://github.com/SauravS-01/Voting-Machine-Verilog.git,2024-01-27 18:27:23+00:00,,0,SauravS-01/Voting-Machine-Verilog,749153359,Verilog,Voting-Machine-Verilog,915,0,2024-01-27 18:29:25+00:00,[],None
586,https://github.com/Surajmodi1007/Verification-of-Single-port-RAM.git,2024-01-27 16:25:37+00:00,,0,Surajmodi1007/Verification-of-Single-port-RAM,749117908,Verilog,Verification-of-Single-port-RAM,3,0,2024-01-27 16:28:14+00:00,[],None
587,https://github.com/zuch3e/verilogImgProc.git,2024-01-30 10:55:59+00:00,"Verilog Image Processing (Grayscale, Mirror, Sharpening)",0,zuch3e/verilogImgProc,750286223,Verilog,verilogImgProc,169,0,2024-01-30 10:56:22+00:00,[],None
588,https://github.com/rapakaushik/Approximate_Multiplier.git,2024-02-01 06:39:17+00:00,"Designed a approximate multiplier aims to reduce area and power consumption with better accuracy Developed using: Verilog HDL,Xilinx Vivado",0,rapakaushik/Approximate_Multiplier,751212570,Verilog,Approximate_Multiplier,9,0,2024-02-01 06:40:49+00:00,[],None
589,https://github.com/ArdaBC/SUGameArdaAltug.git,2024-02-01 15:51:10+00:00,,0,ArdaBC/SUGameArdaAltug,751433043,Verilog,SUGameArdaAltug,4920,0,2024-02-01 16:01:31+00:00,[],None
590,https://github.com/rishabh4749/Single_Port_RAM.git,2024-02-04 06:17:32+00:00,,0,rishabh4749/Single_Port_RAM,752540529,Verilog,Single_Port_RAM,1,0,2024-02-04 06:18:33+00:00,[],None
591,https://github.com/SubrahmanyaDS28/eyrc_ab_1351.git,2024-01-29 15:18:46+00:00,,0,SubrahmanyaDS28/eyrc_ab_1351,749876270,Verilog,eyrc_ab_1351,1139,0,2024-01-29 16:37:00+00:00,[],None
592,https://github.com/noohadnan/PacMan-on-the-FPGA.git,2024-02-06 04:23:35+00:00,,0,noohadnan/PacMan-on-the-FPGA,753415456,Verilog,PacMan-on-the-FPGA,30,0,2024-02-06 04:26:04+00:00,[],None
593,https://github.com/thanhvodong/CE213.git,2024-02-05 14:08:03+00:00,,0,thanhvodong/CE213,753120457,Verilog,CE213,4656,0,2024-02-05 14:12:12+00:00,[],None
594,https://github.com/Hamza-Ali10/Debouncing-Circuit-.git,2024-02-05 17:00:22+00:00,Debouncing Circuit ,0,Hamza-Ali10/Debouncing-Circuit-,753200755,Verilog,Debouncing-Circuit-,2,0,2024-02-05 17:00:55+00:00,[],None
595,https://github.com/YucehanDemir/can_rx_opnlane_chip.git,2024-02-06 13:05:06+00:00,,0,YucehanDemir/can_rx_opnlane_chip,753605485,Verilog,can_rx_opnlane_chip,11927,0,2024-02-06 13:05:47+00:00,[],https://api.github.com/licenses/apache-2.0
596,https://github.com/M-Hamza-Mahmood/FPGA_Pacman.git,2024-02-06 04:33:27+00:00,,0,M-Hamza-Mahmood/FPGA_Pacman,753418050,Verilog,FPGA_Pacman,348,0,2024-02-06 16:02:42+00:00,[],None
597,https://github.com/soldier9810/Processor_16_bit.git,2024-02-06 16:54:49+00:00,,0,soldier9810/Processor_16_bit,753714582,Verilog,Processor_16_bit,6,0,2024-02-06 17:00:17+00:00,[],None
598,https://github.com/BrunoAgst/uart.git,2024-02-07 21:05:42+00:00,simple uart implementation in verilog,0,BrunoAgst/uart,754335199,Verilog,uart,1,0,2024-02-07 21:07:25+00:00,[],None
599,https://github.com/KevinMathewEC/FPGA_Lab.git,2024-01-30 18:10:20+00:00,Digital design with FPGA lab assignment,0,KevinMathewEC/FPGA_Lab,750478847,Verilog,FPGA_Lab,14,0,2024-01-30 18:11:13+00:00,[],None
600,https://github.com/Amanec031/Dual_port_ram.git,2024-02-11 12:24:24+00:00,I have developed a Verilog RAM module with dual-port memory functionality for efficient data storage and retrieval.,0,Amanec031/Dual_port_ram,755898286,Verilog,Dual_port_ram,2,0,2024-02-11 12:26:39+00:00,[],None
601,https://github.com/damian95a/Analog-signal-generator.git,2024-02-10 13:41:22+00:00,FPGA based analog signal generator with DAC,0,damian95a/Analog-signal-generator,755527428,Verilog,Analog-signal-generator,472,0,2024-02-11 13:30:05+00:00,"['analog-signals', 'dac', 'fpga', 'signal-generator', 'spi', 'systemverilog-hdl', 'verilog', 'vivado']",None
602,https://github.com/yazmrt/Verilog-Codes.git,2024-02-05 19:04:44+00:00,,0,yazmrt/Verilog-Codes,753254525,Verilog,Verilog-Codes,37,0,2024-02-05 19:24:08+00:00,[],None
603,https://github.com/raynnersc/SE-204.git,2024-02-13 18:42:01+00:00,Architectures reconfigurables et langages HDL,0,raynnersc/SE-204,757024895,Verilog,SE-204,9017,0,2024-02-13 18:44:58+00:00,[],None
604,https://github.com/ranjeet16pd/N-bit-Multiplier-in-Verilog..git,2024-02-14 10:20:10+00:00,,0,ranjeet16pd/N-bit-Multiplier-in-Verilog.,757353415,Verilog,N-bit-Multiplier-in-Verilog.,3,0,2024-02-14 10:21:31+00:00,[],None
605,https://github.com/ayberk-kara/elevator_control_system.git,2024-02-14 11:24:58+00:00,Digital Design of A Modern Elevator Project,0,ayberk-kara/elevator_control_system,757378392,Verilog,elevator_control_system,445,0,2024-02-15 11:56:35+00:00,[],None
606,https://github.com/kaitlynlie/bcd.git,2024-02-08 22:19:17+00:00,,0,kaitlynlie/bcd,754855772,Verilog,bcd,6,0,2024-02-16 00:19:00+00:00,[],None
607,https://github.com/Hatsuhinode/Verilog.git,2024-02-11 06:55:38+00:00,,0,Hatsuhinode/Verilog,755821451,Verilog,Verilog,19,0,2024-02-11 07:30:36+00:00,[],None
608,https://github.com/AnoushkaTripathi/Signed-multipliers.git,2024-01-27 03:43:37+00:00,,0,AnoushkaTripathi/Signed-multipliers,748923282,Verilog,Signed-multipliers,21,0,2024-02-18 05:48:09+00:00,[],None
609,https://github.com/alhusseingamal/RTL-Projects.git,2024-02-03 00:06:29+00:00,Implementation of some basic and other more advanced RTL schemes,0,alhusseingamal/RTL-Projects,752068675,Verilog,RTL-Projects,1263,0,2024-02-03 03:45:12+00:00,[],None
610,https://github.com/guojt10/ddr4_controller.git,2024-02-07 03:29:09+00:00,,0,guojt10/ddr4_controller,753923865,Verilog,ddr4_controller,17,0,2024-02-07 03:38:42+00:00,[],https://api.github.com/licenses/gpl-3.0
611,https://github.com/Mr-Kaushal-22/UART_Hardware.git,2024-02-08 03:42:08+00:00,,0,Mr-Kaushal-22/UART_Hardware,754439234,Verilog,UART_Hardware,34015,0,2024-03-12 08:52:35+00:00,[],None
612,https://github.com/RiteshKarki27/riscv-a7.git,2024-01-31 09:11:27+00:00,Simple RISC-V based processor implemented on Arty A7,0,RiteshKarki27/riscv-a7,750760799,Verilog,riscv-a7,5,0,2024-02-26 05:50:49+00:00,[],None
613,https://github.com/dmitrodem/analogdevicesinc_hdl.git,2024-02-06 11:52:22+00:00,,0,dmitrodem/analogdevicesinc_hdl,753575413,Verilog,analogdevicesinc_hdl,20586,0,2024-02-06 12:03:44+00:00,[],
614,https://github.com/mranduril/vortex-vm.git,2024-01-26 22:52:33+00:00,,0,mranduril/vortex-vm,748866105,Verilog,vortex-vm,353104,0,2024-03-01 15:42:38+00:00,[],https://api.github.com/licenses/bsd-3-clause
615,https://github.com/IrtazaArain/FPGA-Based-Temperature-Sensitive-LED-Control.git,2024-02-13 14:13:25+00:00,The project involves designing a digital system that utilizes an FPGA (Field-Programmable Gate Array) for controlling the intensity and color of tri-color LEDs based on temperature sensor data. This system employs Pulse Width Modulation (PWM) for intensity control.,0,IrtazaArain/FPGA-Based-Temperature-Sensitive-LED-Control,756892973,Verilog,FPGA-Based-Temperature-Sensitive-LED-Control,1513,0,2024-03-07 08:35:18+00:00,[],None
616,https://github.com/elsiery/mnist_sw-hw.git,2024-01-26 03:32:51+00:00,This repository contains the training of a  deep learning model using tensorflow for mnist images and implementing that trained model in verilog. It is tested also.,0,elsiery/mnist_sw-hw,748475508,Verilog,mnist_sw-hw,1947,0,2024-01-27 06:00:04+00:00,[],https://api.github.com/licenses/mit
617,https://github.com/jElhamm/Verilog-HDL-Codes-Collection.git,2024-02-05 15:40:15+00:00,"""Repository containing a collection of Verilog code modules and test bench for digital design projects. """,0,jElhamm/Verilog-HDL-Codes-Collection,753164038,Verilog,Verilog-HDL-Codes-Collection,396,0,2024-02-08 21:45:38+00:00,"['7segment', 'alu', 'comparator', 'counter', 'decoder', 'encoder', 'gates', 'multiplexer', 'shiftregister', 'testbench', 'testbench-generator-verilog', 'verilog', 'verilog-hdl', 'verilog-programs', 'verilog-project', 'verilog-simulator']",https://api.github.com/licenses/mit
618,https://github.com/amraliraqi/Digital-IC-Design-and-Verification-Diploma-Assignments-Eng.-Kareem-Waseem.git,2024-01-31 19:25:16+00:00,I have provided here th verilog codes and pdf of the questions for the assignments for the Digital IC Design and Verification Diploma supervised by Eng. Kareem Waeem,0,amraliraqi/Digital-IC-Design-and-Verification-Diploma-Assignments-Eng.-Kareem-Waseem,751021245,Verilog,Digital-IC-Design-and-Verification-Diploma-Assignments-Eng.-Kareem-Waseem,8473,0,2024-04-08 09:27:19+00:00,[],None
619,https://github.com/amirmfarzane/Computer-Architecture-Projects.git,2024-02-06 21:47:59+00:00,All projects of Computer architecture course at the University of Tehran.,0,amirmfarzane/Computer-Architecture-Projects,753832670,Verilog,Computer-Architecture-Projects,427,0,2024-02-06 22:10:36+00:00,[],None
620,https://github.com/Abubaker-Nafe/Digital-Project.git,2024-02-08 03:51:01+00:00,BCD Adder,0,Abubaker-Nafe/Digital-Project,754441316,Verilog,Digital-Project,1815,0,2024-02-08 03:52:53+00:00,[],None
621,https://github.com/abdelrahmanmohamedr/mips.git,2024-02-08 13:54:54+00:00,,0,abdelrahmanmohamedr/mips,754648186,Verilog,mips,14,0,2024-02-08 13:57:39+00:00,[],None
622,https://github.com/kjingruz/MECHTRON-3TB4-Lab.git,2024-02-08 23:50:09+00:00,,0,kjingruz/MECHTRON-3TB4-Lab,754880221,Verilog,MECHTRON-3TB4-Lab,7,0,2024-02-08 23:52:39+00:00,[],None
623,https://github.com/davidkebo/benchmark.git,2024-02-10 15:35:17+00:00,,0,davidkebo/benchmark,755561024,Verilog,benchmark,32878,0,2024-02-10 15:37:36+00:00,[],None
624,https://github.com/jlowpc/gcd_test.git,2024-02-02 17:54:20+00:00,Test out GCD on OpenROAD's cloud,0,jlowpc/gcd_test,751961754,Verilog,gcd_test,8,0,2024-02-02 18:31:28+00:00,[],https://api.github.com/licenses/bsd-3-clause
625,https://github.com/datain01/updown.git,2024-02-03 21:21:31+00:00,,0,datain01/updown,752443363,Verilog,updown,19,0,2024-02-03 21:22:38+00:00,[],None
626,https://github.com/Aymane-Aeris-El-Asslouj/ECE_529_standard_AM_demodulator_on_FPGA.git,2024-02-05 02:15:43+00:00,Standard AM modulation and demodulation circuit on FPGA.,0,Aymane-Aeris-El-Asslouj/ECE_529_standard_AM_demodulator_on_FPGA,752873609,Verilog,ECE_529_standard_AM_demodulator_on_FPGA,1736,0,2024-02-05 02:16:14+00:00,[],None
627,https://github.com/Nirvan-Mishra-09/Priority-Encoder-using-Verilog.git,2024-02-04 23:03:02+00:00,,0,Nirvan-Mishra-09/Priority-Encoder-using-Verilog,752832815,Verilog,Priority-Encoder-using-Verilog,28,0,2024-02-04 23:21:54+00:00,[],None
628,https://github.com/adelina233/Proiect-FC.git,2024-02-06 01:09:14+00:00,,0,adelina233/Proiect-FC,753366421,Verilog,Proiect-FC,2,0,2024-02-06 01:10:15+00:00,[],None
629,https://github.com/jenish98-coder/VHDL_Programs.git,2024-02-11 14:15:26+00:00,,0,jenish98-coder/VHDL_Programs,755930117,Verilog,VHDL_Programs,8061,0,2024-02-11 14:21:52+00:00,[],None
630,https://github.com/pOrtiz01/DigitalDesign.git,2024-02-11 22:04:10+00:00,,0,pOrtiz01/DigitalDesign,756069847,Verilog,DigitalDesign,6875,0,2024-02-11 22:09:36+00:00,[],None
631,https://github.com/shenj7/processor.git,2024-02-12 19:47:41+00:00,Pipelined Load-store Processor,0,shenj7/processor,756509881,Verilog,processor,9451,0,2024-02-12 19:50:31+00:00,[],None
632,https://github.com/YaraHassan3/Single-Cycle-Processor-RISC-V.git,2024-02-12 00:13:30+00:00,The target of this project is the implantation of 32-bit RISC-V microarchitecture processor based on Harvard Architecture.,0,YaraHassan3/Single-Cycle-Processor-RISC-V,756106977,Verilog,Single-Cycle-Processor-RISC-V,249,0,2024-02-12 00:36:09+00:00,[],None
633,https://github.com/NKanato/HDL-DIgitalClock.git,2024-01-25 03:30:03+00:00,ディジタルシステム設計の最終課題,0,NKanato/HDL-DIgitalClock,747992951,Verilog,HDL-DIgitalClock,498,0,2024-01-25 03:32:17+00:00,[],None
634,https://github.com/pueo-pynq/firmware-teb0835.git,2024-02-12 15:42:12+00:00,Firmware for the TEB0835 board for testing,0,pueo-pynq/firmware-teb0835,756400627,Verilog,firmware-teb0835,46,0,2024-02-16 14:42:43+00:00,[],None
635,https://github.com/Doggukkan/DigitalHockey.git,2024-02-13 14:22:41+00:00,,0,Doggukkan/DigitalHockey,756897530,Verilog,DigitalHockey,10,0,2024-02-13 14:23:08+00:00,[],None
636,https://github.com/DouglasWWolf/xuppl4_cabletest.git,2024-02-13 22:57:55+00:00,"cable-test RTL design, implemented on BittWare XUP-PL4",0,DouglasWWolf/xuppl4_cabletest,757156496,Verilog,xuppl4_cabletest,680,0,2024-02-13 23:03:00+00:00,[],None
637,https://github.com/coolsakpathak123/RISCV_Project.git,2024-02-13 09:48:40+00:00,,0,coolsakpathak123/RISCV_Project,756780226,Verilog,RISCV_Project,12,0,2024-02-14 10:19:35+00:00,[],None
638,https://github.com/bowling233/riscv.git,2024-02-05 11:38:38+00:00,个人RISC-V CPU及相关课程实验代码仓库,0,bowling233/riscv,753056963,Verilog,riscv,771,0,2024-02-05 11:39:14+00:00,[],None
639,https://github.com/CaioNunes1/Projeto-Arquitetura-monociclo.git,2024-02-12 18:12:43+00:00,,0,CaioNunes1/Projeto-Arquitetura-monociclo,756468439,Verilog,Projeto-Arquitetura-monociclo,377,0,2024-02-14 12:20:04+00:00,[],None
640,https://github.com/JakeHamacher/hamacher-csci330-lab3.git,2024-01-26 00:43:47+00:00,,0,JakeHamacher/hamacher-csci330-lab3,748436032,Verilog,hamacher-csci330-lab3,3,0,2024-01-26 00:47:04+00:00,[],None
641,https://github.com/NitoHGa/Cronometro---Verilog.git,2024-01-27 04:10:08+00:00,"The Verilog implementation of a stopwatch that counts for 10 seconds, stops upon pressing a button, and allows for resetting the timer.",0,NitoHGa/Cronometro---Verilog,748928287,Verilog,Cronometro---Verilog,3,0,2024-01-27 04:10:57+00:00,[],None
642,https://github.com/adeirman46/Verilog-by-Example-Companion.git,2024-01-27 02:42:03+00:00,"This is non official companion of Verilog by Example Book, this is contains testbench and correct code",0,adeirman46/Verilog-by-Example-Companion,748911867,Verilog,Verilog-by-Example-Companion,156,0,2024-01-27 08:50:44+00:00,[],None
643,https://github.com/omarzalahh/16-FFT-Radix-2-2-.git,2024-01-27 14:25:38+00:00,"In digital processing, Fast Fourier Transform represent one of the most important algorithms. It’s used to convert the signal from Time to frequency domain so we can process our chain on it. FFT is a way to implement DFT.",0,omarzalahh/16-FFT-Radix-2-2-,749078073,Verilog,16-FFT-Radix-2-2-,943,0,2024-01-27 14:28:22+00:00,[],None
644,https://github.com/Animeshcoder/Computer_organization_and_systems.git,2024-01-30 09:06:35+00:00,,0,Animeshcoder/Computer_organization_and_systems,750241475,Verilog,Computer_organization_and_systems,6,0,2024-01-30 09:08:40+00:00,[],None
645,https://github.com/Abhi-Singh11/Verilog.git,2024-01-29 07:08:27+00:00,Sequence detector ,0,Abhi-Singh11/Verilog,749678031,Verilog,Verilog,1,0,2024-01-29 07:10:32+00:00,[],None
646,https://github.com/amr-elberry/ALU_ArithmaticLogicUnit_verilog.git,2024-01-28 18:50:36+00:00,,0,amr-elberry/ALU_ArithmaticLogicUnit_verilog,749498721,Verilog,ALU_ArithmaticLogicUnit_verilog,4,0,2024-01-28 18:51:13+00:00,[],None
647,https://github.com/happybear98/VHDL_clock_system.git,2024-01-29 03:26:09+00:00,,0,happybear98/VHDL_clock_system,749616164,Verilog,VHDL_clock_system,52,0,2024-01-29 03:28:31+00:00,[],None
648,https://github.com/mthudaa/PWM_Generator_FPGA_Verilog.git,2024-01-30 16:18:58+00:00,,0,mthudaa/PWM_Generator_FPGA_Verilog,750427771,Verilog,PWM_Generator_FPGA_Verilog,9,0,2024-01-30 16:22:17+00:00,[],https://api.github.com/licenses/apache-2.0
649,https://github.com/prushton-riscv/processor.git,2024-02-12 16:27:42+00:00,,0,prushton-riscv/processor,756422888,Verilog,processor,220,0,2024-02-19 02:28:38+00:00,[],None
650,https://github.com/Mr-Kaushal-22/APB_Interface_Simulation.git,2024-02-12 12:09:41+00:00,,0,Mr-Kaushal-22/APB_Interface_Simulation,756307989,Verilog,APB_Interface_Simulation,78,0,2024-02-12 12:13:46+00:00,[],None
651,https://github.com/surajPrajapati-rgb/Computer-Organisation-and-System.git,2024-01-28 09:58:43+00:00,,0,surajPrajapati-rgb/Computer-Organisation-and-System,749343814,Verilog,Computer-Organisation-and-System,22,0,2024-01-28 10:07:54+00:00,[],None
652,https://github.com/mj1069/Mj32.git,2024-02-08 11:29:19+00:00,32 bit RISC V Microprocessor,0,mj1069/Mj32,754589488,Verilog,Mj32,62,0,2024-03-16 06:03:35+00:00,[],https://api.github.com/licenses/unlicense
653,https://github.com/aditya-me13/Verilog-Projects.git,2024-02-10 00:06:18+00:00,Contains all Verilog code of ES204: Digital Systems and IIT Gandhinagar,0,aditya-me13/Verilog-Projects,755350255,Verilog,Verilog-Projects,61597,0,2024-02-10 00:09:26+00:00,[],None
654,https://github.com/Liorkap/VLSI_CAD.git,2024-01-30 14:49:57+00:00,,0,Liorkap/VLSI_CAD,750386103,Verilog,VLSI_CAD,7086,0,2024-01-30 14:51:40+00:00,[],None
655,https://github.com/Ramagond15/BIST.git,2024-01-25 07:02:56+00:00,PUESDO RANDOM PATTERN GENERATOR FORLOW POWER BUILT IN SELF TEST,0,Ramagond15/BIST,748050995,Verilog,BIST,196,0,2024-01-25 07:05:05+00:00,[],None
656,https://github.com/MAX990ck/IC-Contest-2015-practice.git,2024-01-25 12:51:23+00:00,,0,MAX990ck/IC-Contest-2015-practice,748180027,Verilog,IC-Contest-2015-practice,60,0,2024-01-25 13:07:44+00:00,[],None
657,https://github.com/VIKRUTHI/Cric_scorecard_verilog.git,2024-01-26 05:38:44+00:00,,0,VIKRUTHI/Cric_scorecard_verilog,748503202,Verilog,Cric_scorecard_verilog,5,0,2024-01-26 05:42:02+00:00,[],None
658,https://github.com/konno0121/PipeV_step.git,2024-01-26 10:43:51+00:00,Stepped RV32I processor written in Verilog HDL,0,konno0121/PipeV_step,748598372,Verilog,PipeV_step,4,0,2024-01-26 10:51:03+00:00,[],None
659,https://github.com/manukop/MACUNIT.git,2024-01-27 06:16:24+00:00,MAC unit using vedic multiplier,0,manukop/MACUNIT,748953418,Verilog,MACUNIT,4,0,2024-01-27 06:19:43+00:00,[],None
660,https://github.com/MonaaMansour/Master-Information-Block-Decoding-for-NR-5G-Technology.git,2024-02-06 19:01:38+00:00,"The MIB is broadcasted by the base station periodically to all the user equipment (UE) in its coverage area. To decode the MIB, the UE performs a series of signal processing and decoding steps, including FFT, channel estimation/equalization, demodulation, and decoding.",0,MonaaMansour/Master-Information-Block-Decoding-for-NR-5G-Technology,753770747,Verilog,Master-Information-Block-Decoding-for-NR-5G-Technology,597,0,2024-02-06 22:36:13+00:00,[],None
661,https://github.com/DanielaPavlenco/Circuit-For-Time-Measurement.git,2024-02-07 10:27:50+00:00,,0,DanielaPavlenco/Circuit-For-Time-Measurement,754063165,Verilog,Circuit-For-Time-Measurement,7,0,2024-02-07 10:29:23+00:00,[],None
662,https://github.com/CHENCHETY-ABHISHEK/EE3402-HDL.git,2024-02-01 08:31:50+00:00,Introduction to HDL,0,CHENCHETY-ABHISHEK/EE3402-HDL,751251520,Verilog,EE3402-HDL,729,0,2024-02-04 17:27:47+00:00,[],None
663,https://github.com/Pilouco26/Estructura-de-Computadors-FASE1.git,2024-02-07 18:37:59+00:00,Estructura de Computadors Fase 2,0,Pilouco26/Estructura-de-Computadors-FASE1,754279115,Verilog,Estructura-de-Computadors-FASE1,400,0,2024-02-07 18:42:39+00:00,[],None
664,https://github.com/cixiny/NANDLAND-Projects.git,2024-02-08 04:36:34+00:00,,0,cixiny/NANDLAND-Projects,754452561,Verilog,NANDLAND-Projects,2,0,2024-02-08 06:29:20+00:00,[],https://api.github.com/licenses/unlicense
665,https://github.com/Arefegh/Logic-Lab.git,2024-02-08 13:48:08+00:00,AUT - Logic Circuits Lab ,0,Arefegh/Logic-Lab,754645234,Verilog,Logic-Lab,212,0,2024-02-08 14:46:38+00:00,[],None
666,https://github.com/MayureshDeshpande/VeriTM.git,2024-02-08 15:35:30+00:00,,0,MayureshDeshpande/VeriTM,754693660,Verilog,VeriTM,6,0,2024-02-08 15:39:35+00:00,[],None
667,https://github.com/karthickm12/hdlbits_solutions_verilog.git,2024-02-01 04:28:02+00:00,,0,karthickm12/hdlbits_solutions_verilog,751174199,Verilog,hdlbits_solutions_verilog,16,0,2024-02-01 04:47:44+00:00,[],None
668,https://github.com/CorconTI/FPGA_temp_sens.git,2024-02-09 02:30:00+00:00,simple fsm to read data from temp sens and output it to seven segment indicator,0,CorconTI/FPGA_temp_sens,754916000,Verilog,FPGA_temp_sens,7,0,2024-02-09 02:31:00+00:00,[],None
669,https://github.com/Vibhav-Gopal/UART-TB.git,2024-02-09 10:33:50+00:00,A testbench to verify UART TX and UART RX designs,0,Vibhav-Gopal/UART-TB,755049373,Verilog,UART-TB,61,0,2024-02-09 10:34:02+00:00,[],None
670,https://github.com/patrickparseg/Traffic-Light-Controller.git,2024-02-08 02:37:42+00:00,,0,patrickparseg/Traffic-Light-Controller,754424360,Verilog,Traffic-Light-Controller,380,0,2024-02-08 02:38:14+00:00,[],None
671,https://github.com/ThomasGutek/PipelinedCPUVerilog.git,2024-02-09 22:09:27+00:00,5 stage pipelined MIPS CPU in Verilog,0,ThomasGutek/PipelinedCPUVerilog,755321621,Verilog,PipelinedCPUVerilog,674,0,2024-02-09 22:22:41+00:00,[],None
672,https://github.com/tarun-prakash/riscv_simple_core.git,2024-02-13 15:26:17+00:00,,0,tarun-prakash/riscv_simple_core,756928601,Verilog,riscv_simple_core,11927,0,2024-02-13 15:27:01+00:00,[],https://api.github.com/licenses/apache-2.0
673,https://github.com/aliciacilmora/riscv.git,2024-02-13 18:12:27+00:00,,0,aliciacilmora/riscv,757005929,Verilog,riscv,10636,0,2024-02-13 18:17:18+00:00,[],None
674,https://github.com/Gatsch/jku-tt06-ledcontroller.git,2024-02-05 16:32:31+00:00,,0,Gatsch/jku-tt06-ledcontroller,753188346,Verilog,jku-tt06-ledcontroller,42,0,2024-02-05 16:51:52+00:00,[],https://api.github.com/licenses/apache-2.0
675,https://github.com/mohammadKazzazi/Multi-cycle-MIPS-implementation.git,2024-02-13 21:06:47+00:00,The purpose of this program is to get familiar with the controller and in the MIPS processor and its descriptive implementation in multi-cycle form in Verilog hardware description language and testing it by a simple program with MIPS assembly language. ​,0,mohammadKazzazi/Multi-cycle-MIPS-implementation,757121802,Verilog,Multi-cycle-MIPS-implementation,726,0,2024-02-13 21:07:36+00:00,[],None
676,https://github.com/yardenmodan/Flappy.git,2024-02-13 22:07:37+00:00,Flappy Pikachu,0,yardenmodan/Flappy,757141806,Verilog,Flappy,177,0,2024-02-13 22:16:12+00:00,[],None
677,https://github.com/michaelakbu/ALU-.git,2024-02-12 07:25:48+00:00,16-bit ALU with arithmetic and logical operations ,0,michaelakbu/ALU-,756204275,Verilog,ALU-,17,0,2024-02-12 07:32:35+00:00,[],None
678,https://github.com/ljqljqljq8/axi_stream_insert_header.git,2024-01-25 16:11:44+00:00,,0,ljqljqljq8/axi_stream_insert_header,748266296,Verilog,axi_stream_insert_header,121,0,2024-01-25 17:07:36+00:00,[],None
679,https://github.com/KaihaoYuHW/Verilog_infrared-remote-control.git,2024-01-27 19:36:48+00:00,an infrared remote control designed with FPGA and an integrated receiver unit,0,KaihaoYuHW/Verilog_infrared-remote-control,749173351,Verilog,Verilog_infrared-remote-control,459,0,2024-01-27 19:39:17+00:00,[],None
680,https://github.com/FINALxxx/Sandbox.git,2024-01-27 12:39:35+00:00,,0,FINALxxx/Sandbox,749047461,Verilog,Sandbox,122,0,2024-01-27 12:41:06+00:00,[],None
681,https://github.com/ruizmar1/Pipelined-CPU.git,2024-01-28 22:03:00+00:00,Pipelined CPU designed using Verilog,0,ruizmar1/Pipelined-CPU,749547876,Verilog,Pipelined-CPU,241,0,2024-01-28 22:05:21+00:00,[],None
682,https://github.com/ZeinNoureddin/Pipelined-RISC-V-Processor.git,2024-01-31 21:34:27+00:00,A pipelined RISC-V processor with a single memory for data and instructions that supports the RV32I base integer instruction set.,0,ZeinNoureddin/Pipelined-RISC-V-Processor,751067698,Verilog,Pipelined-RISC-V-Processor,1260,0,2024-01-31 21:35:38+00:00,[],None
683,https://github.com/KiarashDalir2003/wheelOfLuck.git,2024-02-01 05:03:36+00:00,,0,KiarashDalir2003/wheelOfLuck,751183573,Verilog,wheelOfLuck,20,0,2024-02-01 05:09:55+00:00,[],None
684,https://github.com/THIRU-1074/32-BIT-ALU-USING-VERILOG-HDL.git,2024-02-01 12:44:47+00:00,The repository is a Digital System and Design project which focuses on 32-bit Arithmetic Logic Unit where various arithmetic operation could be performed with specific opcode.,0,THIRU-1074/32-BIT-ALU-USING-VERILOG-HDL,751350697,Verilog,32-BIT-ALU-USING-VERILOG-HDL,10,0,2024-02-01 13:07:09+00:00,[],None
685,https://github.com/20msi2/Mini-RISC-Computer.git,2024-02-01 16:14:48+00:00,,0,20msi2/Mini-RISC-Computer,751443706,Verilog,Mini-RISC-Computer,5,0,2024-02-01 16:15:38+00:00,[],None
686,https://github.com/Eridarus/rusc_i.git,2024-02-02 01:22:47+00:00,Verilog sim for breadboard processor,0,Eridarus/rusc_i,751627039,Verilog,rusc_i,2,0,2024-02-02 06:20:26+00:00,[],None
687,https://github.com/ShiYue-HelloWorld/Write-CPU-by-yourself.git,2024-02-04 14:21:50+00:00,"A pipelined CPU based on the MIPS architecture has been implemented with 52 basic instructions, 5 privileged instructions, and an exception handling mechanism. Additionally, a fast divider, AXI interface, and instruction cache have been added to enhance the performance of the CPU.",0,ShiYue-HelloWorld/Write-CPU-by-yourself,752683820,Verilog,Write-CPU-by-yourself,5269,0,2024-02-04 14:31:40+00:00,[],None
688,https://github.com/rishabh4749/One_To_Four_Demux.git,2024-02-04 06:52:40+00:00,,0,rishabh4749/One_To_Four_Demux,752548441,Verilog,One_To_Four_Demux,1,0,2024-02-04 06:53:30+00:00,[],None
689,https://github.com/Varundeep5435/Spatial-filter.git,2024-02-04 06:54:01+00:00,,0,Varundeep5435/Spatial-filter,752548781,Verilog,Spatial-filter,7,0,2024-02-04 06:56:40+00:00,[],None
690,https://github.com/MustafaTarek77/Advanced-Encryption-Standard-AES.git,2024-01-29 09:28:07+00:00,,0,MustafaTarek77/Advanced-Encryption-Standard-AES,749729387,Verilog,Advanced-Encryption-Standard-AES,382,0,2024-02-05 22:40:44+00:00,[],None
691,https://github.com/Hamza-Ali10/RISC-V.git,2024-02-05 16:51:46+00:00,design,0,Hamza-Ali10/RISC-V,753196962,Verilog,RISC-V,11,0,2024-02-05 16:56:15+00:00,[],None
692,https://github.com/xdu-zhangfan/RTL_Libraries.git,2024-02-08 03:13:00+00:00,,0,xdu-zhangfan/RTL_Libraries,754432573,Verilog,RTL_Libraries,257,0,2024-02-10 09:32:03+00:00,[],https://api.github.com/licenses/gpl-3.0
693,https://github.com/nguyendaithien/LSI_CONTEST_HUST.git,2024-01-31 07:12:02+00:00,,0,nguyendaithien/LSI_CONTEST_HUST,750716889,Verilog,LSI_CONTEST_HUST,405,0,2024-01-31 09:54:29+00:00,[],None
694,https://github.com/CasperWhite13/AD8Microprocessor.git,2024-01-31 08:59:35+00:00,,0,CasperWhite13/AD8Microprocessor,750756106,Verilog,AD8Microprocessor,1064,0,2024-02-13 10:51:54+00:00,[],None
695,https://github.com/elonekrasniqi/16bitCPU.git,2024-01-25 19:06:47+00:00,CPU16-bit CPU created on EdaPlayground using Verilog,1,elonekrasniqi/16bitCPU,748337887,Verilog,16bitCPU,58,0,2024-01-25 21:04:08+00:00,[],None
696,https://github.com/Soumil-07/riscv-core.git,2024-02-03 18:53:50+00:00,,0,Soumil-07/riscv-core,752378137,Verilog,riscv-core,2,0,2024-03-18 12:18:09+00:00,[],None
697,https://github.com/phn210/fpga-ascon.git,2024-02-07 21:33:58+00:00,,0,phn210/fpga-ascon,754344502,Verilog,fpga-ascon,14,0,2024-02-07 23:45:25+00:00,[],https://api.github.com/licenses/mit
698,https://github.com/AsparaGus116/Quartus.git,2024-02-12 04:39:08+00:00,,0,AsparaGus116/Quartus,756157954,Verilog,Quartus,4798,0,2024-02-12 04:46:07+00:00,[],None
699,https://github.com/AtmostAtmosphere/Computer-Architecture-Project.git,2024-01-25 16:09:22+00:00,Design 32-bit single core multiple cycle RISC-V CPU using Verilog,0,AtmostAtmosphere/Computer-Architecture-Project,748265329,Verilog,Computer-Architecture-Project,216,0,2024-01-25 16:17:00+00:00,[],None
700,https://github.com/Rithikiitb/pwm.git,2024-01-27 12:23:59+00:00,my_project,0,Rithikiitb/pwm,749043421,Verilog,pwm,11927,0,2024-01-27 12:24:39+00:00,[],https://api.github.com/licenses/apache-2.0
701,https://github.com/techmanyuan/fpgauartgai.git,2024-01-28 02:55:24+00:00,,0,techmanyuan/fpgauartgai,749258305,Verilog,fpgauartgai,253,0,2024-01-28 13:23:07+00:00,[],None
702,https://github.com/mitnk/nextpnr-9k-lcd.git,2024-01-28 14:05:25+00:00,debugging,0,mitnk/nextpnr-9k-lcd,749409985,Verilog,nextpnr-9k-lcd,103,0,2024-01-28 14:07:34+00:00,[],None
703,https://github.com/MahsaNasehi/ModifiedProj.git,2024-01-29 05:29:39+00:00,,0,MahsaNasehi/ModifiedProj,749647629,Verilog,ModifiedProj,10,0,2024-01-29 05:36:39+00:00,[],None
704,https://github.com/kevserrk/FB-CPU.git,2024-01-29 17:48:16+00:00,,0,kevserrk/FB-CPU,749947197,Verilog,FB-CPU,3191,0,2024-01-29 17:55:32+00:00,[],None
705,https://github.com/iurww/BUAA-CO.git,2024-01-30 04:06:23+00:00,BUAA-CO,0,iurww/BUAA-CO,750143050,Verilog,BUAA-CO,3306,0,2024-01-30 04:56:30+00:00,[],None
706,https://github.com/chen96013/VLSI-final.git,2024-01-30 17:12:55+00:00,,0,chen96013/VLSI-final,750452823,Verilog,VLSI-final,5324,0,2024-01-30 18:04:17+00:00,[],None
707,https://github.com/cbgch/UUUUUUUUUUU.git,2024-01-31 07:00:33+00:00,nono,0,cbgch/UUUUUUUUUUU,750712914,Verilog,UUUUUUUUUUU,964,0,2024-01-31 07:06:24+00:00,[],None
708,https://github.com/antiwck/Sevent-Segment-Display-Decoder.git,2024-02-01 06:03:04+00:00,Seven-segment display decoder for common cathode display. ,0,antiwck/Sevent-Segment-Display-Decoder,751200831,Verilog,Sevent-Segment-Display-Decoder,164,0,2024-02-01 06:03:43+00:00,[],None
709,https://github.com/afarajlou/Logic-Labratory.git,2024-02-01 08:41:15+00:00,"In this course, we had ten sessions to understand the concepts of logic circuit and perform implementations using FPGAs. The course was specifically focused on laboratory experiments related to logic circuits.",0,afarajlou/Logic-Labratory,751255047,Verilog,Logic-Labratory,9386,0,2024-02-01 09:46:02+00:00,[],None
710,https://github.com/tututugege/srt-2-divider.git,2024-02-01 19:03:57+00:00,,0,tututugege/srt-2-divider,751516582,Verilog,srt-2-divider,2,0,2024-02-01 19:15:52+00:00,[],None
711,https://github.com/a105520401/ICC2021.git,2024-02-01 18:10:28+00:00,,0,a105520401/ICC2021,751494936,Verilog,ICC2021,0,0,2024-02-01 18:30:54+00:00,[],None
712,https://github.com/Bruno325/Audi-e-tron-Light-Show.git,2024-02-02 06:00:22+00:00,Recreating the Audi RS e-tron GT Light Show on a DE-10 Lite Board,0,Bruno325/Audi-e-tron-Light-Show,751697323,Verilog,Audi-e-tron-Light-Show,16,0,2024-02-02 06:18:10+00:00,[],None
713,https://github.com/meckbau/test.git,2024-02-03 00:09:34+00:00,,0,meckbau/test,752069288,Verilog,test,18681,0,2024-02-03 00:20:00+00:00,[],
714,https://github.com/golo230/multicycleProcessor.git,2024-02-03 06:08:56+00:00,A multicycle processor made with Verilog,0,golo230/multicycleProcessor,752137872,Verilog,multicycleProcessor,9,0,2024-02-03 06:15:05+00:00,[],None
715,https://github.com/Nevanp/Deliverable_2.git,2024-02-02 22:34:24+00:00,EE465 Deliverable 2,0,Nevanp/Deliverable_2,752048777,Verilog,Deliverable_2,71409,0,2024-02-02 23:22:40+00:00,[],None
716,https://github.com/MVS-Abhiram/Dual_port_ram_overidding.git,2024-02-03 14:25:32+00:00,Implementing a Dual port synchronous RAM 64 x 16 and overiding it width 16 x 64,0,MVS-Abhiram/Dual_port_ram_overidding,752265460,Verilog,Dual_port_ram_overidding,68,0,2024-02-03 14:26:50+00:00,[],None
717,https://github.com/MikhaelKaa/GSC.git,2024-02-05 16:06:56+00:00,Counter for global shutter camera,0,MikhaelKaa/GSC,753176264,Verilog,GSC,215,0,2024-02-05 16:10:20+00:00,[],https://api.github.com/licenses/apache-2.0
718,https://github.com/Ritik662/elevator-controller.git,2024-02-07 12:56:57+00:00,,0,Ritik662/elevator-controller,754123938,Verilog,elevator-controller,1049,0,2024-02-07 13:02:16+00:00,[],None
719,https://github.com/mikewarot/FPGA_NCO.git,2024-02-04 19:36:41+00:00,,0,mikewarot/FPGA_NCO,752782180,Verilog,FPGA_NCO,2,0,2024-02-04 19:36:47+00:00,[],None
720,https://github.com/giovanniargueta1/FPGA-vending-machine.git,2024-02-06 15:15:42+00:00,"code, test benches, and supplementary materials for the implementation of a vending machine on a BASYS 3.",0,giovanniargueta1/FPGA-vending-machine,753667720,Verilog,FPGA-vending-machine,3321,0,2024-02-06 15:57:27+00:00,[],None
721,https://github.com/z300z1991/tt-fpga-hdl-demo.git,2024-02-08 21:43:46+00:00,,0,z300z1991/tt-fpga-hdl-demo,754844389,Verilog,tt-fpga-hdl-demo,21,0,2024-02-09 18:37:26+00:00,[],https://api.github.com/licenses/apache-2.0
722,https://github.com/MohabAmged/SPI-PROTOCOL-MASTER.git,2024-02-09 23:45:21+00:00,,0,MohabAmged/SPI-PROTOCOL-MASTER,755345564,Verilog,SPI-PROTOCOL-MASTER,7,0,2024-02-09 23:47:13+00:00,[],None
723,https://github.com/maktheus/Mips-processor-v2.git,2024-02-02 17:25:44+00:00,,0,maktheus/Mips-processor-v2,751951187,Verilog,Mips-processor-v2,30,0,2024-02-02 17:26:26+00:00,[],None
724,https://github.com/shravanbishnoi/Computer-Organisation-System.git,2024-01-29 08:01:59+00:00,,0,shravanbishnoi/Computer-Organisation-System,749696330,Verilog,Computer-Organisation-System,27,0,2024-01-29 08:16:39+00:00,[],None
725,https://github.com/halaalfaris/MIPS32_pipelined_processor.git,2024-02-02 13:11:36+00:00,,0,halaalfaris/MIPS32_pipelined_processor,751848461,Verilog,MIPS32_pipelined_processor,125,0,2024-02-02 16:10:04+00:00,[],None
726,https://github.com/AniketKumarC7/8Bit-Microprocessor.git,2024-02-11 16:21:49+00:00,,0,AniketKumarC7/8Bit-Microprocessor,755974528,Verilog,8Bit-Microprocessor,7,0,2024-02-11 16:22:42+00:00,[],None
727,https://github.com/xeedotechnologies/SampleRepo.git,2024-02-12 08:23:38+00:00,,0,xeedotechnologies/SampleRepo,756223410,Verilog,SampleRepo,1115,0,2024-02-12 10:54:50+00:00,[],None
728,https://github.com/zoezheng04/InfoProc-Lab.git,2024-02-02 00:19:08+00:00,,0,zoezheng04/InfoProc-Lab,751611710,Verilog,InfoProc-Lab,47827,0,2024-02-12 15:43:03+00:00,[],None
729,https://github.com/Mr-Kaushal-22/Synq_FIFO_UART_Hardware.git,2024-02-10 03:56:09+00:00,,0,Mr-Kaushal-22/Synq_FIFO_UART_Hardware,755391783,Verilog,Synq_FIFO_UART_Hardware,34475,0,2024-02-10 04:01:37+00:00,[],None
730,https://github.com/Harminder13/ELEC-374-CPU-Project.git,2024-01-29 05:24:17+00:00,,0,Harminder13/ELEC-374-CPU-Project,749646112,Verilog,ELEC-374-CPU-Project,79,0,2024-01-29 18:46:31+00:00,[],None
731,https://github.com/Feiniu6ABC/srio_test.git,2024-02-04 02:11:22+00:00,,0,Feiniu6ABC/srio_test,752495207,Verilog,srio_test,2987,0,2024-02-04 02:15:06+00:00,[],None
732,https://github.com/DJosueMM/gray_decoder-FPGAOL_CAAS_test.git,2024-02-12 22:25:59+00:00,Academic project to test the https://caas.symbioticeda.com/  platform.,1,DJosueMM/gray_decoder-FPGAOL_CAAS_test,756585196,Verilog,gray_decoder-FPGAOL_CAAS_test,1538,0,2024-03-03 21:28:44+00:00,[],None
733,https://github.com/Voidmarcos00/VSDSquadron-Mini.git,2024-02-14 13:25:23+00:00,,0,Voidmarcos00/VSDSquadron-Mini,757426384,Verilog,VSDSquadron-Mini,2850,0,2024-03-06 15:41:44+00:00,[],None
734,https://github.com/108368062/other_verilog_practice.git,2024-02-04 04:41:21+00:00,some verilog note,0,108368062/other_verilog_practice,752521651,Verilog,other_verilog_practice,10,0,2024-02-08 15:59:49+00:00,[],None
735,https://github.com/srujana30-106/verilog.git,2024-02-08 10:28:44+00:00,,0,srujana30-106/verilog,754566242,Verilog,verilog,18,0,2024-02-08 10:31:51+00:00,[],None
736,https://github.com/matnrocha/CPU-Verilog-AsmMips-InfraHard.git,2024-02-13 13:08:06+00:00,Development of a functional CPU using Verilog,0,matnrocha/CPU-Verilog-AsmMips-InfraHard,756863147,Verilog,CPU-Verilog-AsmMips-InfraHard,132,0,2024-03-14 22:37:18+00:00,[],None
737,https://github.com/manask-02/CIS5710_Manas.git,2024-01-28 03:30:18+00:00,,0,manask-02/CIS5710_Manas,749264245,Verilog,CIS5710_Manas,3728,0,2024-03-15 18:10:00+00:00,[],https://api.github.com/licenses/mit
738,https://github.com/gunavant-s/CLA_64.git,2024-01-26 10:56:02+00:00,"Carry Look Ahead adder speeds up binary addition by parallelizing carry computation for each bit, reducing propagation delays. (Uses generate/propagate signals, enabling faster addition, but may require more hardware.)",0,gunavant-s/CLA_64,748602488,Verilog,CLA_64,41,0,2024-03-22 11:28:52+00:00,[],None
739,https://github.com/dacuevas01/disenio_de_microprocesadores.git,2024-02-11 23:35:11+00:00,,0,dacuevas01/disenio_de_microprocesadores,756098481,Verilog,disenio_de_microprocesadores,62287,0,2024-02-12 21:47:06+00:00,[],None
740,https://github.com/HiddenRoom/Research.git,2024-02-13 03:47:35+00:00,RISC-V CGRA research,0,HiddenRoom/Research,756661224,Verilog,Research,2758,0,2024-03-15 03:10:02+00:00,[],None
741,https://github.com/AB152/ECE_411_MPs.git,2024-02-06 07:34:33+00:00,,0,AB152/ECE_411_MPs,753473380,Verilog,ECE_411_MPs,8140,0,2024-03-31 20:57:15+00:00,[],None
742,https://github.com/anotherAsad/AdvancedComputerArchitecture.git,2024-02-12 23:59:46+00:00,ACS course projects.,0,anotherAsad/AdvancedComputerArchitecture,756608179,Verilog,AdvancedComputerArchitecture,18860,0,2024-04-02 18:13:10+00:00,[],None
743,https://github.com/ewesterhoff/zynq-risc-v.git,2024-01-30 22:29:34+00:00,,0,ewesterhoff/zynq-risc-v,750574028,Verilog,zynq-risc-v,10258,0,2024-02-28 23:19:37+00:00,[],None
744,https://github.com/bhan0234/myproapro.git,2024-02-09 10:00:57+00:00,,0,bhan0234/myproapro,755037613,Verilog,myproapro,20,0,2024-02-09 12:10:56+00:00,[],None
745,https://github.com/apinise/ECE5724.git,2024-01-31 23:52:00+00:00,Assignments for ECE5724 so I can work remotely.,0,apinise/ECE5724,751105458,Verilog,ECE5724,20047,0,2024-02-12 18:23:20+00:00,[],None
746,https://github.com/suriyasaiyan/MBIST-256x4b.git,2024-02-01 13:42:33+00:00,,0,suriyasaiyan/MBIST-256x4b,751374521,Verilog,MBIST-256x4b,5,0,2024-02-01 14:04:14+00:00,[],None
747,https://github.com/RESMIRNAIR/BCD_7SEGMENT.git,2024-01-30 10:07:55+00:00,,0,RESMIRNAIR/BCD_7SEGMENT,750266228,Verilog,BCD_7SEGMENT,49,0,2024-01-30 10:15:35+00:00,[],None
748,https://github.com/dh1501/MMU_m.git,2024-02-02 13:38:33+00:00,,0,dh1501/MMU_m,751858813,Verilog,MMU_m,353,0,2024-02-02 13:48:49+00:00,[],None
749,https://github.com/VishnuPrakashBharadwaj/adld_aat.git,2024-02-03 07:57:22+00:00,,0,VishnuPrakashBharadwaj/adld_aat,752162891,Verilog,adld_aat,3,0,2024-02-03 07:59:10+00:00,[],None
750,https://github.com/MVS-Abhiram/Lodable_4bit_up_counter.git,2024-02-04 03:17:04+00:00,Here I am going to implement a regular 4 bit binary up counter with a small change to load the count value.,0,MVS-Abhiram/Lodable_4bit_up_counter,752506574,Verilog,Lodable_4bit_up_counter,144,0,2024-02-04 03:17:38+00:00,[],None
751,https://github.com/aledolme/sha.git,2024-02-05 11:10:18+00:00,,0,aledolme/sha,753045689,Verilog,sha,40707,0,2024-02-05 11:17:15+00:00,[],None
752,https://github.com/Hamza-Ali10/UART.git,2024-02-05 17:03:32+00:00," UART stands for universal asynchronous receiver / transmitter and defines a protocol, or set of rules, for exchanging serial data between two devices. UART is very simple and only uses two wires between transmitter and receiver to transmit and receive in both directions.",0,Hamza-Ali10/UART,753202211,Verilog,UART,6,0,2024-02-05 17:04:27+00:00,[],None
753,https://github.com/walekarkaran/FPGA-Based-Polynomial-Evaluator-in-Verilog.git,2024-02-05 09:57:30+00:00,,0,walekarkaran/FPGA-Based-Polynomial-Evaluator-in-Verilog,753015847,Verilog,FPGA-Based-Polynomial-Evaluator-in-Verilog,1,0,2024-02-05 10:09:21+00:00,[],None
754,https://github.com/Hamza-Ali10/FSM.git,2024-02-05 17:17:17+00:00,This describes the simplest kind of model-based testing that is based on finite state machines (FSMs). Each node of an FSM corresponds to a particular state of the system under test (SUT) and each corresponds to an SUT action to generate test sequences,0,Hamza-Ali10/FSM,753208535,Verilog,FSM,7,0,2024-02-05 17:18:04+00:00,[],None
755,https://github.com/Hamza-Ali10/LFSR_liner-feedback-shift-register.git,2024-02-05 17:12:59+00:00,LFSR_liner feedback shift register,0,Hamza-Ali10/LFSR_liner-feedback-shift-register,753206514,Verilog,LFSR_liner-feedback-shift-register,2,0,2024-02-05 17:13:39+00:00,[],None
756,https://github.com/Jimin-EE/DesignProject.git,2024-02-04 16:41:06+00:00,,0,Jimin-EE/DesignProject,752729223,Verilog,DesignProject,11927,0,2024-02-04 16:41:45+00:00,[],https://api.github.com/licenses/apache-2.0
757,https://github.com/VA3SFA/dds-test-0.git,2024-02-05 03:28:34+00:00,,0,VA3SFA/dds-test-0,752891194,Verilog,dds-test-0,11927,0,2024-02-05 03:29:12+00:00,[],https://api.github.com/licenses/apache-2.0
758,https://github.com/minhsun-c/Systolic-Array.git,2024-02-05 04:22:50+00:00,,0,minhsun-c/Systolic-Array,752904523,Verilog,Systolic-Array,431,0,2024-02-05 04:23:24+00:00,[],None
759,https://github.com/Ali0281/DSD-Project.git,2024-02-04 18:08:47+00:00,,0,Ali0281/DSD-Project,752756791,Verilog,DSD-Project,729,0,2024-02-04 18:19:15+00:00,[],None
760,https://github.com/hvppycoding/OpenROAD-flow-flat.git,2024-02-04 17:39:45+00:00,,0,hvppycoding/OpenROAD-flow-flat,752747812,Verilog,OpenROAD-flow-flat,700406,0,2024-02-04 17:45:10+00:00,[],
761,https://github.com/txsbms/ts-serial-sram.git,2024-02-06 02:37:39+00:00,RTL model of Microchip 23A640. Supports reading to and writing from 8192 x 8-bit memory at specified address over SPI interface.,0,txsbms/ts-serial-sram,753388470,Verilog,ts-serial-sram,7,0,2024-02-06 02:41:43+00:00,[],None
762,https://github.com/aryanA101a/4-bit-Synchronous-Up-Down-Load-Counter.git,2024-01-26 17:18:15+00:00,4-bit Synchronous Up/Down Load Counter,0,aryanA101a/4-bit-Synchronous-Up-Down-Load-Counter,748747675,Verilog,4-bit-Synchronous-Up-Down-Load-Counter,3,0,2024-01-26 17:18:44+00:00,[],None
763,https://github.com/HasanQreli/Logic-Design.git,2024-02-06 20:28:27+00:00,CENG232 Logic Desing Lab assignments done using Verilog and Logism,0,HasanQreli/Logic-Design,753804463,Verilog,Logic-Design,575,0,2024-02-06 20:30:18+00:00,[],None
764,https://github.com/mohos455/Single-Cycle-RISC-V-processor.git,2024-02-08 00:39:18+00:00,,0,mohos455/Single-Cycle-RISC-V-processor,754396748,Verilog,Single-Cycle-RISC-V-processor,12,0,2024-02-08 00:42:00+00:00,[],None
765,https://github.com/obvolent/ece-project.git,2024-02-07 17:30:44+00:00,,0,obvolent/ece-project,754249739,Verilog,ece-project,14,0,2024-02-07 17:43:28+00:00,[],None
766,https://github.com/Efinix-Inc/sapphire-donut-demo.git,2024-02-08 02:24:50+00:00,,0,Efinix-Inc/sapphire-donut-demo,754421455,Verilog,sapphire-donut-demo,80218,0,2024-02-08 08:46:23+00:00,[],None
767,https://github.com/MVS-Abhiram/4X1_Mux_using_decoder_-_buffer.git,2024-02-08 03:11:30+00:00,This is an implementation of 4 x 1 mux using decoder and multiplexer,0,MVS-Abhiram/4X1_Mux_using_decoder_-_buffer,754432220,Verilog,4X1_Mux_using_decoder_-_buffer,189,0,2024-02-08 03:16:27+00:00,[],None
768,https://github.com/Rohan-b02/HDLBits.git,2024-01-27 10:50:59+00:00,"This repository contains my solutions to the challenges and problems from HDLBits (https://hdlbits.01xz.net/), an online platform for learning and practicing digital logic design using hardware description languages (HDLs) such as Verilog and VHDL.",0,Rohan-b02/HDLBits,749019109,Verilog,HDLBits,26,0,2024-01-27 10:58:50+00:00,[],None
769,https://github.com/DISGpfdkofsk/projekatt.git,2024-02-09 14:32:07+00:00,,0,DISGpfdkofsk/projekatt,755152552,Verilog,projekatt,27,0,2024-02-09 14:42:02+00:00,[],None
770,https://github.com/naqiraza-512/MIPS_PipeLined_Processor.git,2024-01-29 18:59:55+00:00,,0,naqiraza-512/MIPS_PipeLined_Processor,749978738,Verilog,MIPS_PipeLined_Processor,19,0,2024-01-29 19:09:57+00:00,[],None
771,https://github.com/rs-1045/FPU.git,2024-01-30 17:10:49+00:00,Half Precision [16-bit] Floating Point Unit .,0,rs-1045/FPU,750451951,Verilog,FPU,3,0,2024-01-30 17:12:00+00:00,[],None
772,https://github.com/georgejiang2/pipelined-cpu.git,2024-01-27 17:32:21+00:00,,0,georgejiang2/pipelined-cpu,749137566,Verilog,pipelined-cpu,810,0,2024-01-27 17:42:52+00:00,[],None
773,https://github.com/21521060/FULLY-CONNECTED-LAYER.git,2024-01-27 13:51:47+00:00,,0,21521060/FULLY-CONNECTED-LAYER,749067849,Verilog,FULLY-CONNECTED-LAYER,5,0,2024-01-27 14:42:33+00:00,[],None
774,https://github.com/DavidRLindley/Example2.git,2024-01-26 18:44:42+00:00,,0,DavidRLindley/Example2,748780169,Verilog,Example2,11927,0,2024-01-26 18:45:22+00:00,[],https://api.github.com/licenses/apache-2.0
775,https://github.com/thinhnguyenhuu50/BCD_Counter.git,2024-01-31 12:28:11+00:00,,0,thinhnguyenhuu50/BCD_Counter,750839152,Verilog,BCD_Counter,1,0,2024-01-31 12:36:24+00:00,[],None
776,https://github.com/girisushil/CA_L1cache.git,2024-01-31 10:20:53+00:00,,0,girisushil/CA_L1cache,750789237,Verilog,CA_L1cache,35,0,2024-01-31 10:21:20+00:00,[],None
777,https://github.com/Jun-recording/HDLBits_Solution.git,2024-02-05 07:02:36+00:00,My solution to verilog problems in HDLBits,0,Jun-recording/HDLBits_Solution,752949395,Verilog,HDLBits_Solution,377,0,2024-02-11 17:03:09+00:00,"['hdlbits', 'hdlbitssolution', 'verilog']",None
778,https://github.com/ZammY0122/Organizaci-n-de-computadores.git,2024-02-07 06:07:34+00:00,Códigos Verilog Talleres Organización de Computadores,0,ZammY0122/Organizaci-n-de-computadores,753967879,Verilog,Organizaci-n-de-computadores,5,0,2024-02-07 06:31:26+00:00,[],None
779,https://github.com/lancemitrex/efabless-tt-fpga-hdl-demo.git,2024-02-08 21:34:43+00:00,,0,lancemitrex/efabless-tt-fpga-hdl-demo,754841453,Verilog,efabless-tt-fpga-hdl-demo,29,0,2024-02-09 18:35:48+00:00,[],https://api.github.com/licenses/apache-2.0
780,https://github.com/melferranti/Single-Cycle-CPU.git,2024-02-13 00:42:55+00:00,,0,melferranti/Single-Cycle-CPU,756618100,Verilog,Single-Cycle-CPU,5,0,2024-02-13 00:43:30+00:00,[],None
781,https://github.com/virolivs/cpu-hardware-infraestructure.git,2024-02-11 21:43:02+00:00,,0,virolivs/cpu-hardware-infraestructure,756065298,Verilog,cpu-hardware-infraestructure,28,0,2024-02-11 22:05:51+00:00,[],None
782,https://github.com/Hcules/Clg-Final-Project.git,2024-02-13 11:31:26+00:00,,0,Hcules/Clg-Final-Project,756823531,Verilog,Clg-Final-Project,59,0,2024-02-14 04:08:32+00:00,[],None
783,https://github.com/TheFox-cmd/554.git,2024-02-01 23:04:07+00:00,,0,TheFox-cmd/554,751593316,Verilog,554,291,0,2024-02-02 00:08:30+00:00,[],None
784,https://github.com/Emptory/Stopwatch.git,2024-02-12 12:51:09+00:00,www.eetree.cn,0,Emptory/Stopwatch,756323811,Verilog,Stopwatch,36,0,2024-03-06 15:05:44+00:00,[],None
785,https://github.com/bustedwing1/iverilog-examples.git,2024-01-27 20:05:01+00:00,,0,bustedwing1/iverilog-examples,749181300,Verilog,iverilog-examples,1379,0,2024-01-27 20:18:04+00:00,[],https://api.github.com/licenses/mit
786,https://github.com/FPGASystemsLab/src.eco32_core.git,2024-02-13 19:13:22+00:00,,0,FPGASystemsLab/src.eco32_core,757057113,Verilog,src.eco32_core,2207,0,2024-02-13 19:14:40+00:00,[],https://api.github.com/licenses/mit
787,https://github.com/dyanik9/jku-tt06-soundgen.git,2024-02-12 11:47:59+00:00,Play your favourite melody in real hardware!,0,dyanik9/jku-tt06-soundgen,756299306,Verilog,jku-tt06-soundgen,103,0,2024-02-26 19:57:10+00:00,[],https://api.github.com/licenses/apache-2.0
788,https://github.com/parvathy10/dual-port-memory.git,2024-02-07 13:43:08+00:00,,0,parvathy10/dual-port-memory,754145027,Verilog,dual-port-memory,51,0,2024-02-07 13:52:54+00:00,[],None
789,https://github.com/UCR-CS161L/Lab02-ALU.git,2024-01-25 00:03:16+00:00,,0,UCR-CS161L/Lab02-ALU,747941648,Verilog,Lab02-ALU,12350,0,2024-01-25 22:25:14+00:00,[],None
790,https://github.com/aadarsh-chouragade/LIFO-and-FIFO.git,2024-02-07 12:10:38+00:00,Verilog,0,aadarsh-chouragade/LIFO-and-FIFO,754104326,Verilog,LIFO-and-FIFO,8,0,2024-04-11 09:09:08+00:00,[],https://api.github.com/licenses/mit
