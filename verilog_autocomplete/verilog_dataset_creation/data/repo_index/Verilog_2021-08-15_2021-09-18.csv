,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/will127534/RaspberryPiAtomicNixieClock.git,2021-09-04 22:18:16+00:00,,6,will127534/RaspberryPiAtomicNixieClock,403166122,Verilog,RaspberryPiAtomicNixieClock,1783,117,2023-11-06 22:05:20+00:00,[],None
1,https://github.com/NYU-MLDA/OpenABC.git,2021-08-24 18:54:52+00:00,OpenABC-D is a large-scale labeled dataset generated by synthesizing open source hardware IPs. This dataset can be used for various graph level prediction problems in chip design.,15,NYU-MLDA/OpenABC,399573605,Verilog,OpenABC,28181,86,2024-04-10 15:22:38+00:00,"['electronics-design', 'logic-synthesis', 'graph-machine-learning', 'graph-neural-networks', 'deep-learning', 'datasets', 'electronics-design-automation', 'boolean-optimization', 'bulls-eye', 'openabc-d', 'benchmarks', 'circuit-benchmarks', 'logic-synthesis-benchmarks']",https://api.github.com/licenses/bsd-3-clause
2,https://github.com/smunaut/iCE40linux.git,2021-08-21 14:58:09+00:00,Gateware / Firmware / BuildRoot to run linux on iCE40 / iCEBreaker,11,smunaut/iCE40linux,398585426,Verilog,iCE40linux,107,83,2024-04-05 05:13:27+00:00,[],None
3,https://github.com/OSCPU/ysyxSoC.git,2021-08-27 14:00:11+00:00,,24,OSCPU/ysyxSoC,400527244,Verilog,ysyxSoC,18131,58,2024-04-12 04:18:46+00:00,[],None
4,https://github.com/SilenceX12138/MIPS-Microsystems.git,2021-09-06 11:54:54+00:00,"A computer system containing CPU, OS and Compiler under MIPS architecture.",0,SilenceX12138/MIPS-Microsystems,403604431,Verilog,MIPS-Microsystems,9227,53,2023-11-25 15:37:47+00:00,"['mips-architecture', 'computer-architecture', 'operating-system', 'compiler']",https://api.github.com/licenses/mit
5,https://github.com/NetFPGA/NetFPGA-PLUS.git,2021-08-18 14:08:00+00:00,,20,NetFPGA/NetFPGA-PLUS,397623267,Verilog,NetFPGA-PLUS,683,43,2024-03-18 06:19:47+00:00,[],None
6,https://github.com/AngeloJacobo/FPGA_OV7670_Camera_Interface.git,2021-08-17 04:40:28+00:00,Real-time streaming of OV7670 camera via VGA with a 640x480 resolution at 30fps,3,AngeloJacobo/FPGA_OV7670_Camera_Interface,397100550,Verilog,FPGA_OV7670_Camera_Interface,43,41,2024-04-07 20:56:33+00:00,"['fpga', 'verilog', 'ov7670', 'camera']",https://api.github.com/licenses/mit
7,https://github.com/AngeloJacobo/FPGA_RealTime_and_Static_Sobel_Edge_Detection.git,2021-08-23 03:16:30+00:00,Pipelined implementation of  Sobel Edge Detection on OV7670 camera and on still images,2,AngeloJacobo/FPGA_RealTime_and_Static_Sobel_Edge_Detection,398959900,Verilog,FPGA_RealTime_and_Static_Sobel_Edge_Detection,122,35,2024-03-18 10:33:29+00:00,"['fpga', 'verilog', 'sobel-edge-detector', 'ov7670', 'real-time', 'static', 'pipelined']",https://api.github.com/licenses/mit
8,https://github.com/michaelliao/learn-verilog.git,2021-09-09 03:14:55+00:00,Learn Verilog,7,michaelliao/learn-verilog,404570193,Verilog,learn-verilog,1424,34,2024-03-25 02:21:52+00:00,[],https://api.github.com/licenses/gpl-3.0
9,https://github.com/jiegec/fpu-wrappers.git,2021-08-31 14:37:38+00:00, Wrappers for open source FPU hardware implementations.,4,jiegec/fpu-wrappers,401736617,Verilog,fpu-wrappers,2411,27,2024-03-17 17:23:48+00:00,"['fpu', 'hdl', 'chisel3', 'spinalhdl']",https://api.github.com/licenses/mit
10,https://github.com/fatheroflink/xiaohaizi_cpu.git,2021-08-27 07:39:40+00:00,,3,fatheroflink/xiaohaizi_cpu,400428781,Verilog,xiaohaizi_cpu,16,24,2024-03-02 02:55:37+00:00,[],None
11,https://github.com/AngeloJacobo/FPGA_SDRAM_Controller.git,2021-08-16 07:21:03+00:00,SDRAM controller optimized to a memory bandwidth of 316MB/s,3,AngeloJacobo/FPGA_SDRAM_Controller,396671481,Verilog,FPGA_SDRAM_Controller,19,21,2024-02-24 08:38:22+00:00,"['fpga', 'sdram', 'verilog', 'sdram-controller']",https://api.github.com/licenses/mit
12,https://github.com/natu4u/GSOC_TensorCore.git,2021-08-23 02:55:47+00:00,TensorCore Vector Processor for Deep Learning - Google Summer of Code Project,2,natu4u/GSOC_TensorCore,398955874,Verilog,GSOC_TensorCore,58,20,2024-03-08 20:24:35+00:00,[],https://api.github.com/licenses/apache-2.0
13,https://github.com/zeeshanrafique23/mdu.git,2021-08-16 04:15:47+00:00,M-extension for RISC-V cores.,7,zeeshanrafique23/mdu,396613078,Verilog,mdu,23,17,2023-09-21 08:02:52+00:00,"['riscv', 'verilog', 'fpga', 'rtl']",https://api.github.com/licenses/apache-2.0
14,https://github.com/PaserTech-Hardware/PaskiSoC.git,2021-09-06 14:42:20+00:00,"PaserTech PaskiSoC 一个低成本的riscv soc实现, 支持32bit linux with mmu",6,PaserTech-Hardware/PaskiSoC,403657458,Verilog,PaskiSoC,331,16,2023-11-24 23:20:49+00:00,[],https://api.github.com/licenses/wtfpl
15,https://github.com/hyf6661669/ARM_documents.git,2021-09-04 23:43:50+00:00,Documents for ARM,7,hyf6661669/ARM_documents,403176725,Verilog,ARM_documents,620831,14,2023-10-30 03:53:06+00:00,[],None
16,https://github.com/mnmhdanas/DA-Based-LMS-Adaptive-filter.git,2021-08-26 07:09:54+00:00,"Distributed arithmetic (DA) is another way of implementing a dot product where one of the arrays has constant elements. The DA can be effectively used to implement FIR, IIR and FFT type.The DA logic replaces the MAC operation of convolution summation o into a bit-serial look-up table read and addition operation .",2,mnmhdanas/DA-Based-LMS-Adaptive-filter,400075053,Verilog,DA-Based-LMS-Adaptive-filter,7,14,2024-02-27 09:06:43+00:00,"['digital-design', 'lms-algorithm', 'adaptive-filter', 'fir-filter', 'verilog-project', 'verilog', 'distributed-arithmetic']",None
17,https://github.com/sprout-uci/RATA.git,2021-09-01 23:22:52+00:00,On the TOCTOU Problem in Remote Attestation,0,sprout-uci/RATA,402229014,Verilog,RATA,3888,13,2024-02-21 06:46:02+00:00,"['remote-attestation', 'security', 'formal-verification']",https://api.github.com/licenses/gpl-3.0
18,https://github.com/CompuSAR/Ben8Bit.git,2021-09-12 12:56:17+00:00,Verilog implementation of Ben Eater's 8-bit breadboard computer,2,CompuSAR/Ben8Bit,405641836,Verilog,Ben8Bit,199,13,2024-03-27 18:23:50+00:00,[],None
19,https://github.com/AngeloJacobo/FPGA_Asynchronous_FIFO.git,2021-08-15 03:37:10+00:00,FIFO implementation with different clock domains for read and write.,3,AngeloJacobo/FPGA_Asynchronous_FIFO,396204360,Verilog,FPGA_Asynchronous_FIFO,10,12,2024-02-27 12:07:57+00:00,"['fpga', 'verilog', 'fifo', 'clock-domain-crossing', 'asynchronous']",https://api.github.com/licenses/mit
20,https://github.com/EECS150/fpga_labs_fa21.git,2021-08-26 06:15:51+00:00,FPGA Labs for EECS 151/251A (Fall 2021),23,EECS150/fpga_labs_fa21,400061449,Verilog,fpga_labs_fa21,4740,11,2023-07-24 02:41:29+00:00,[],None
21,https://github.com/jamchamb/cojiro.git,2021-08-17 19:58:40+00:00,Nintendo Joy Bus device design for iCEBreaker/iCE40UP5k,0,jamchamb/cojiro,397376730,Verilog,cojiro,94,10,2023-09-24 00:24:47+00:00,"['n64', 'n64-controller', 'fpga', 'pokemon-snap', 'ice40up5k', 'icebreaker', 'nintendo-64']",None
22,https://github.com/liyu-ao/PE-array-for-LeNet-accelerator-based-on-FPGA.git,2021-08-18 08:37:52+00:00,This is a 4*5 PE array for LeNet accelerator based on FPGA.,3,liyu-ao/PE-array-for-LeNet-accelerator-based-on-FPGA,397530244,Verilog,PE-array-for-LeNet-accelerator-based-on-FPGA,56,9,2023-12-15 07:25:57+00:00,[],None
23,https://github.com/BrianHGinc/Verilog-RS232-Synch-UART-RS232-Debugger-and-PC-host-RS232-Hex-editor.git,2021-09-05 04:26:37+00:00,Verilog RS232 Enhanced Synch-UART & RS232 Debugger HDL core with PC host RS232 real-time Hex-editor / viewer host utility.,1,BrianHGinc/Verilog-RS232-Synch-UART-RS232-Debugger-and-PC-host-RS232-Hex-editor,403214375,Verilog,Verilog-RS232-Synch-UART-RS232-Debugger-and-PC-host-RS232-Hex-editor,619,9,2024-02-07 09:11:01+00:00,"['hdl', 'verilog', 'rs232', 'uart', 'hex-editor']",None
24,https://github.com/powgo377/NCTU_ICLAB.git,2021-09-01 11:58:24+00:00,,0,powgo377/NCTU_ICLAB,402043884,Verilog,NCTU_ICLAB,9120,8,2023-06-26 09:10:06+00:00,[],None
25,https://github.com/secworks/gift.git,2021-08-24 06:50:32+00:00,Hardware implementation of the GIFT-128 lightweight block cipher,7,secworks/gift,399364494,Verilog,gift,91,8,2022-03-20 05:01:40+00:00,[],https://api.github.com/licenses/bsd-2-clause
26,https://github.com/explcre/21Summer-VE370-Intro-to-Computer-Organization-Projects.git,2021-08-24 05:25:14+00:00,"21Summer-VE370-Intro-to-Computer-Organization-Projects:     -Project1: RISC-V Assembly, simluating c code.      -Project2: 1.RISC-V64 single cycle processor. 2.RISC-V64 five-stage pipelined processor.     -Project3: Virtual memory, TLB, cache, memory simulator.      -Project4: Literature review on Computer Organization.",0,explcre/21Summer-VE370-Intro-to-Computer-Organization-Projects,399345087,Verilog,21Summer-VE370-Intro-to-Computer-Organization-Projects,12180,8,2023-12-03 12:23:10+00:00,"['computer-organization', 'computer-organization-lab', 'computer-organization-and-design', 'computer-organisation-architechure', 'risc-v', 'riscv64', 'virtual-memory', 'tlb', 'tlb-simulator', 'cpu', 'cpu-emulator', 'risc-v-assembly', 'single-cycle-processor', '5-stage-pipeline']",https://api.github.com/licenses/apache-2.0
27,https://github.com/observerw/USTB_verilog_elevator.git,2021-09-10 02:10:17+00:00,北京科技大学 数字逻辑 电梯,3,observerw/USTB_verilog_elevator,404927926,Verilog,USTB_verilog_elevator,1317,7,2024-03-13 08:54:49+00:00,[],None
28,https://github.com/mnmhdanas/UART-protocol.git,2021-08-30 15:17:12+00:00,UART - RTL Design and Verification,1,mnmhdanas/UART-protocol,401389819,Verilog,UART-protocol,12,7,2024-01-19 05:43:28+00:00,"['digital-design', 'vlsi-design', 'verilog-project', 'verilog', 'uart', 'uart-protocol', 'fpga-programming']",None
29,https://github.com/IEEE-NITK/RDNA2-Compute-Unit.git,2021-08-24 05:49:16+00:00,This project aims to recreate the RDNA2 Compute Unit found in AMD's RX6000 series GPUs,3,IEEE-NITK/RDNA2-Compute-Unit,399350126,Verilog,RDNA2-Compute-Unit,23184,7,2023-09-19 05:22:58+00:00,[],None
30,https://github.com/liangsun97/basic_rtl.git,2021-09-07 13:24:49+00:00,,2,liangsun97/basic_rtl,403987658,Verilog,basic_rtl,35,6,2023-03-25 10:39:45+00:00,[],None
31,https://github.com/zli87/Processor-and-Accelerator.git,2021-09-05 01:32:01+00:00,"MIPS Processor, BNN Accelerator, AXI4 interface, Cache Controller and LRU replacement",0,zli87/Processor-and-Accelerator,403189846,Verilog,Processor-and-Accelerator,39503,5,2023-12-11 18:11:49+00:00,"['computer-architecture', 'verilog']",None
32,https://github.com/q60/verilog-kata.git,2021-09-11 20:45:54+00:00,Verilog HDL and HDL in general basics through code examples.,0,q60/verilog-kata,405479620,Verilog,verilog-kata,28,5,2023-10-06 12:53:33+00:00,[],https://api.github.com/licenses/mit
33,https://github.com/mnmhdanas/Router-1-x-3-.git,2021-08-25 04:48:21+00:00,Router 1 x 3  verilog implementation,2,mnmhdanas/Router-1-x-3-,399692704,Verilog,Router-1-x-3-,3063,5,2023-10-05 05:35:33+00:00,"['digital-design', 'router', 'network', 'verilog', 'verilog-project', 'fpga-programming', 'router-1-3']",None
34,https://github.com/sinsanction/UCAS-CA.git,2021-09-02 11:15:15+00:00,UCAS 体系结构实验课，一个普通的 MIPS32 架构处理器,1,sinsanction/UCAS-CA,402391837,Verilog,UCAS-CA,29,5,2023-10-23 01:08:04+00:00,[],None
35,https://github.com/hustgl/verilog_basic_module.git,2021-09-05 16:38:37+00:00,8 basic verilog module,0,hustgl/verilog_basic_module,403360468,Verilog,verilog_basic_module,17,5,2022-08-03 06:55:02+00:00,[],None
36,https://github.com/thejpster/zube.git,2021-09-09 19:02:25+00:00,My entry for MPW2 on the Zero to ASIC Training Course,0,thejpster/zube,404838991,Verilog,zube,58,5,2023-04-07 12:35:52+00:00,[],https://api.github.com/licenses/apache-2.0
37,https://github.com/ieee-ceda-datc/datc-rdf.git,2021-08-24 18:27:48+00:00,IEEE DATC Robust Design Flow 2021.,3,ieee-ceda-datc/datc-rdf,399566789,Verilog,datc-rdf,17454,5,2024-02-21 15:11:49+00:00,"['vlsi', 'vlsi-physical-design', 'eda', 'design-automation']",https://api.github.com/licenses/bsd-3-clause
38,https://github.com/Frightwig/Handshake_protocol_of_AXI4.git,2021-08-27 19:29:47+00:00,handshake protocol with delay,0,Frightwig/Handshake_protocol_of_AXI4,400616184,Verilog,Handshake_protocol_of_AXI4,277,5,2023-03-24 01:21:12+00:00,[],None
39,https://github.com/L-I-M-I-T/CO_MIPS31.git,2021-09-08 13:12:16+00:00,实现MIPS架构指令集下31条指令的单周期CPU，经过Vivado和Modelsim联合仿真通过并在Nexys4开发板上下板通过。,1,L-I-M-I-T/CO_MIPS31,404352637,Verilog,CO_MIPS31,5665,5,2023-06-26 14:45:38+00:00,"['cpu', 'computer-organization']",None
40,https://github.com/AngeloJacobo/FPGA_I2C_Implementation.git,2021-08-15 03:21:20+00:00,Bit-bang i2c protocol for interfacing with DS1307 RTC,0,AngeloJacobo/FPGA_I2C_Implementation,396201134,Verilog,FPGA_I2C_Implementation,9,5,2023-11-10 07:37:36+00:00,"['fpga', 'verilog', 'i2c', 'ds1307']",https://api.github.com/licenses/mit
41,https://github.com/CMU-SAFARI/MIG-7-PHY-DDR3-Controller.git,2021-08-22 20:50:00+00:00,A DDR3 Controller that uses the Xilinx MIG-7 PHY to interface with DDR3 devices.,2,CMU-SAFARI/MIG-7-PHY-DDR3-Controller,398898434,Verilog,MIG-7-PHY-DDR3-Controller,44,5,2023-10-27 08:48:02+00:00,[],None
42,https://github.com/CompuSAR/6522.git,2021-08-17 14:04:09+00:00,,1,CompuSAR/6522,397279124,Verilog,6522,10,5,2023-11-29 19:22:50+00:00,[],None
43,https://github.com/DECAfpga/freedom-e300.git,2021-09-04 08:53:45+00:00,SiFive's Freedom e300 for the DECA Max10 FPGA,1,DECAfpga/freedom-e300,403009077,Verilog,freedom-e300,3774,5,2023-09-27 04:01:49+00:00,"['risc-v', 'fpga', 'sifive', 'deca', 'max10', 'e300', 'others']",https://api.github.com/licenses/apache-2.0
44,https://github.com/CarloFable/risc-v-32-cpu.git,2021-09-18 15:04:52+00:00,risc-v 单周期和流水线cpu设计， 基于miniRV-1指令集，语言verilog,2,CarloFable/risc-v-32-cpu,407891716,Verilog,risc-v-32-cpu,1025,5,2024-04-03 01:31:02+00:00,[],https://api.github.com/licenses/mit
45,https://github.com/raviporna/HWSYNLAB2021.git,2021-09-14 07:20:49+00:00,"For HW-SYN-LAB Computer Engineering, Chulalongkorn University",4,raviporna/HWSYNLAB2021,406265835,Verilog,HWSYNLAB2021,50,4,2022-11-01 05:44:18+00:00,[],None
46,https://github.com/L-I-M-I-T/CO_MIPS54.git,2021-09-08 13:12:30+00:00,实现MIPS架构指令集下54条指令的单周期CPU，经过Vivado和Modelsim联合仿真通过并在Nexys4开发板上下板通过。,1,L-I-M-I-T/CO_MIPS54,404352708,Verilog,CO_MIPS54,6928,4,2023-07-14 09:51:26+00:00,"['cpu', 'computer-organization']",None
47,https://github.com/HsuChiChen/intro-vlsi-ncku.git,2021-08-24 18:45:07+00:00,grayscale conversion system and simple convolution system,0,HsuChiChen/intro-vlsi-ncku,399571167,Verilog,intro-vlsi-ncku,35272,4,2024-03-18 19:48:38+00:00,"['vlsi-cad', 'grayscale-image-converter', 'convolutional-neural-networks', 'hardware-acceleration', 'hspice']",None
48,https://github.com/hamzahassan-lm/AXI4Lite_To_APB_Bridge.git,2021-09-14 07:00:27+00:00,,1,hamzahassan-lm/AXI4Lite_To_APB_Bridge,406259888,Verilog,AXI4Lite_To_APB_Bridge,8343,4,2024-01-29 07:53:02+00:00,[],None
49,https://github.com/ASP-hellofriend/AHB-to-APB-bridge-interface.git,2021-08-26 13:47:23+00:00,Verilog code for AHB-to-APB interface. Synthesis and Simulation.,0,ASP-hellofriend/AHB-to-APB-bridge-interface,400184754,Verilog,AHB-to-APB-bridge-interface,4,4,2024-03-04 03:37:03+00:00,[],None
50,https://github.com/FoRTE-Research/RingRAM.git,2021-09-07 18:59:05+00:00,"A superior, yet simple, foundation for PUFs and TRNGs",0,FoRTE-Research/RingRAM,404091490,Verilog,RingRAM,174,4,2024-02-27 00:42:44+00:00,[],https://api.github.com/licenses/mit
51,https://github.com/hzume/seccamp_nn.git,2021-08-29 08:08:10+00:00,quantized neural network,0,hzume/seccamp_nn,400986164,Verilog,seccamp_nn,44957,4,2021-12-24 15:47:37+00:00,[],None
52,https://github.com/TripRichert/hdl_rosetta_stone.git,2021-09-06 21:23:27+00:00,"writing up a few examples using different languages and tools, mostly for personal learning.",1,TripRichert/hdl_rosetta_stone,403761859,Verilog,hdl_rosetta_stone,56,4,2024-02-18 10:29:47+00:00,[],https://api.github.com/licenses/mit
53,https://github.com/MiSTer-devel/Interact_MiSTer.git,2021-08-16 01:26:30+00:00,"FPGA recreation of the Interact Home Computer, a early home computer from 1978",2,MiSTer-devel/Interact_MiSTer,396563239,Verilog,Interact_MiSTer,1671,4,2022-05-11 16:28:56+00:00,[],https://api.github.com/licenses/gpl-2.0
54,https://github.com/Arc3554/IC_contest.git,2021-09-04 08:02:50+00:00,,0,Arc3554/IC_contest,402999677,Verilog,IC_contest,29172,4,2023-10-04 09:41:24+00:00,[],None
55,https://github.com/HWSec-UNC/Sylvia.git,2021-09-03 19:50:45+00:00,,1,HWSec-UNC/Sylvia,402882835,Verilog,Sylvia,17491,4,2024-04-05 14:43:52+00:00,[],None
56,https://github.com/georgeyhere/i2c.git,2021-08-22 03:18:27+00:00,A Verilog i2c master,0,georgeyhere/i2c,398703883,Verilog,i2c,299,4,2023-12-08 15:04:15+00:00,[],None
57,https://github.com/L-I-M-I-T/DL_Piano.git,2021-09-08 13:08:05+00:00,基于Nexys4开发板和PS2通信协议的键盘设计的电子琴，能够支持24个音阶的弹奏。,0,L-I-M-I-T/DL_Piano,404351337,Verilog,DL_Piano,7209,3,2022-09-25 15:31:59+00:00,['digital-logic-design'],None
58,https://github.com/patricab/cmos_2021.git,2021-08-27 12:41:26+00:00,CMOS Pixel Sensor - TFE4152 2021,0,patricab/cmos_2021,400505178,Verilog,cmos_2021,159,3,2024-03-15 21:10:16+00:00,[],None
59,https://github.com/xaxiso/Computer-Architecture.git,2021-09-09 08:09:42+00:00,Required course for NTU CSIE students that had us write in verilog for computer architecture homework.,0,xaxiso/Computer-Architecture,404638868,Verilog,Computer-Architecture,2875,3,2023-01-05 06:45:27+00:00,[],None
60,https://github.com/no2fpga/no2hyperbus.git,2021-08-18 18:45:04+00:00,Nitro HyperBus core,2,no2fpga/no2hyperbus,397703361,Verilog,no2hyperbus,29,3,2023-04-17 14:38:00+00:00,[],
61,https://github.com/georgeyhere/vga.git,2021-08-20 18:50:13+00:00,Verilog VGA module w/ parameterized VTC,0,georgeyhere/vga,398372687,Verilog,vga,15,3,2022-05-31 22:35:12+00:00,[],None
62,https://github.com/mmoldsvor/cmos-image-sensor.git,2021-09-12 09:11:46+00:00,CMOS image sensor implementation,0,mmoldsvor/cmos-image-sensor,405596449,Verilog,cmos-image-sensor,408,3,2024-01-01 04:15:45+00:00,[],None
63,https://github.com/rayogunjimi/FPGA-HDC.git,2021-09-08 14:20:39+00:00,FPGA-Based Accelerator For HDC,3,rayogunjimi/FPGA-HDC,404376307,Verilog,FPGA-HDC,38782,3,2024-03-10 14:34:35+00:00,[],None
64,https://github.com/barrettotte/angstrom-cpu.git,2021-08-20 00:03:25+00:00,A 4-bit accumulator-based CPU designed to do the bare minimum and nothing more.,1,barrettotte/angstrom-cpu,398104893,Verilog,angstrom-cpu,280,3,2024-04-04 20:24:30+00:00,['homebrew-cpu'],https://api.github.com/licenses/mit
65,https://github.com/mnmhdanas/Booths-multiplier.git,2021-08-27 05:28:07+00:00,"booth's multiplier defined by datapath and control path , where controller generates different control signals which are used by different modules to generate product",0,mnmhdanas/Booths-multiplier,400398573,Verilog,Booths-multiplier,57,3,2023-09-19 18:17:00+00:00,"['digital-design', 'booth-multiplier', 'booths-algorithm', 'arithmetic-logic-unit', 'fpga-programming', 'verilog', 'verilog-project']",None
66,https://github.com/riscygeek/quartus-make.git,2021-09-05 21:20:03+00:00,This is a template for projects using the Quartus Prime suite with the DE10-Lite FPGA board.,0,riscygeek/quartus-make,403414913,Verilog,quartus-make,16,3,2023-11-09 06:39:43+00:00,"['de10-lite', 'quartus', 'quartus-prime', 'makefile', 'makefile-template', 'template', 'template-project']",None
67,https://github.com/kevinGit777/2021-A-Space-Odyssey-Project.git,2021-09-03 01:22:34+00:00,,0,kevinGit777/2021-A-Space-Odyssey-Project,402609497,Verilog,2021-A-Space-Odyssey-Project,116,3,2021-12-06 23:28:37+00:00,[],None
68,https://github.com/lizhun1/cmos_pixel_sensor_verilog_pj.git,2021-09-14 08:18:07+00:00,,0,lizhun1/cmos_pixel_sensor_verilog_pj,406282728,Verilog,cmos_pixel_sensor_verilog_pj,1455,3,2023-03-15 01:37:28+00:00,[],None
69,https://github.com/HaochiBai1998/ece550-Tetris-Game-pipelined-processor.git,2021-09-13 11:43:34+00:00,,0,HaochiBai1998/ece550-Tetris-Game-pipelined-processor,405949756,Verilog,ece550-Tetris-Game-pipelined-processor,101871,3,2022-09-30 00:18:45+00:00,[],None
70,https://github.com/phuhavan/fft-accelerator.git,2021-08-22 12:37:37+00:00,,2,phuhavan/fft-accelerator,398796159,Verilog,fft-accelerator,4293,3,2023-04-05 07:39:13+00:00,[],None
71,https://github.com/nisarg1631/COA_LAB_AUTUMN_2021.git,2021-08-21 08:01:47+00:00,This repository contains the lab assignments for Computer Organization and Architecture Laboratory.,5,nisarg1631/COA_LAB_AUTUMN_2021,398501261,Verilog,COA_LAB_AUTUMN_2021,2054,3,2024-01-16 10:35:44+00:00,[],None
72,https://github.com/lgx98/ECE-550-Proj1.git,2021-09-10 00:15:38+00:00,,1,lgx98/ECE-550-Proj1,404906004,Verilog,ECE-550-Proj1,39,3,2022-01-22 20:59:18+00:00,[],None
73,https://github.com/kprasadvnsi/mistral-CV96-blinky.git,2021-08-16 07:03:25+00:00,,1,kprasadvnsi/mistral-CV96-blinky,396665134,Verilog,mistral-CV96-blinky,368,3,2022-02-13 06:05:53+00:00,[],None
74,https://github.com/adps/adspacecnnlib.git,2021-08-19 10:44:48+00:00,Open Source Example FPGA VHDL code for Space Centric CNN DPU Research and Development ,2,adps/adspacecnnlib,397908135,Verilog,adspacecnnlib,1349,3,2022-05-20 16:13:13+00:00,[],https://api.github.com/licenses/apache-2.0
75,https://github.com/CompuSAR/BenEater.git,2021-08-24 11:41:22+00:00,Spartan-7 FPGA implementation of Ben Eater's 6502 breadboard computer,1,CompuSAR/BenEater,399443164,Verilog,BenEater,6,3,2022-05-26 04:54:01+00:00,[],None
76,https://github.com/Secure-Embedded-Systems/Open-Source-Threshold-Implementation-of-LED-Block-Cipher.git,2021-08-23 20:29:15+00:00,Threshold Implementation of Lightweight Encryption Device (LED) Block Cipher,1,Secure-Embedded-Systems/Open-Source-Threshold-Implementation-of-LED-Block-Cipher,399239605,Verilog,Open-Source-Threshold-Implementation-of-LED-Block-Cipher,55,3,2024-03-13 15:56:51+00:00,[],https://api.github.com/licenses/gpl-3.0
77,https://github.com/vision-vlsi/verilog.git,2021-08-23 11:04:36+00:00,,1,vision-vlsi/verilog,399070693,Verilog,verilog,7890,3,2023-10-16 11:16:29+00:00,[],None
78,https://github.com/sudhamshu091/Automation-of-HDL-Lab-evaluation-using-scripts.git,2021-08-29 20:14:42+00:00,,0,sudhamshu091/Automation-of-HDL-Lab-evaluation-using-scripts,401133643,Verilog,Automation-of-HDL-Lab-evaluation-using-scripts,9121,2,2024-03-25 08:36:28+00:00,[],None
79,https://github.com/a-r-r-o-w/digital-design-lab-UE20CS206.git,2021-09-10 18:43:08+00:00,Implementation of Digital Circuits taught as part of my Undergraduate Course in Digital Design and Computer Organization in Verilog,0,a-r-r-o-w/digital-design-lab-UE20CS206,405181024,Verilog,digital-design-lab-UE20CS206,5771,2,2022-12-14 17:40:44+00:00,[],https://api.github.com/licenses/mit
80,https://github.com/Onicc/Xcore.git,2021-08-18 02:55:38+00:00,RISC-V CPU,0,Onicc/Xcore,397454251,Verilog,Xcore,79,2,2022-11-16 14:05:43+00:00,[],https://api.github.com/licenses/apache-2.0
81,https://github.com/vitoriapinheiro/comunicacaoUART.git,2021-08-23 18:03:46+00:00,,0,vitoriapinheiro/comunicacaoUART,399202696,Verilog,comunicacaoUART,9,2,2022-10-29 23:52:26+00:00,[],https://api.github.com/licenses/mit
82,https://github.com/phuhavan/qam-16.git,2021-08-22 12:11:59+00:00,,0,phuhavan/qam-16,398790985,Verilog,qam-16,3047,2,2024-02-23 01:47:26+00:00,[],https://api.github.com/licenses/apache-2.0
83,https://github.com/Stray-Pyramid/NESE.git,2021-09-07 03:17:26+00:00,An NES emulator written in Verilog for the Cyclone V FPGA. Currently only the 6502 CPU portion of the emulator is complete.,1,Stray-Pyramid/NESE,403825986,Verilog,NESE,90,2,2023-03-19 08:10:19+00:00,[],None
84,https://github.com/Sai-Manish/Tomasulo-based-RV32I-processor.git,2021-08-19 08:01:38+00:00,,0,Sai-Manish/Tomasulo-based-RV32I-processor,397864272,Verilog,Tomasulo-based-RV32I-processor,627,2,2024-03-21 23:51:54+00:00,[],None
85,https://github.com/lgx98/ECE-550-Proj2.git,2021-09-18 19:26:56+00:00,,0,lgx98/ECE-550-Proj2,407949666,Verilog,ECE-550-Proj2,127,2,2022-01-22 20:59:26+00:00,[],None
86,https://github.com/vijayk10/Arbiter-for-RAM-module.git,2021-08-20 15:44:14+00:00,"This project consists of Arbiter , RAM module and topmodule. An arbiter is used to interface 2 requesters accessing a single RAM module",1,vijayk10/Arbiter-for-RAM-module,398325425,Verilog,Arbiter-for-RAM-module,689,2,2022-05-02 13:16:44+00:00,[],None
87,https://github.com/yvesemmanuel/microwave.git,2021-08-21 18:44:20+00:00,second project - Digital System,1,yvesemmanuel/microwave,398633134,Verilog,microwave,4412,2,2023-08-07 07:02:04+00:00,"['verilog', 'verilog-components', 'digital-systems', 'verilog-project']",None
88,https://github.com/Echo-b/Five-Stage-Pipeline-MipsCpu.git,2021-08-26 05:59:10+00:00,40指令的五级流水cpu,0,Echo-b/Five-Stage-Pipeline-MipsCpu,400057660,Verilog,Five-Stage-Pipeline-MipsCpu,106725,2,2022-12-27 03:18:44+00:00,[],None
89,https://github.com/geee3/computerScienceExperiment2.git,2021-09-09 09:59:06+00:00,서강대학교 컴퓨터공학실험II(CSE3016) 실습 과제물입니다 :),0,geee3/computerScienceExperiment2,404670694,Verilog,computerScienceExperiment2,3094,2,2023-09-14 05:10:32+00:00,[],None
90,https://github.com/AmitavMitra/FIFO_verilog.git,2021-08-23 13:07:33+00:00,"A basic implementation of different types of FIFO buffers (synchronous, asynchronous and circular).",0,AmitavMitra/FIFO_verilog,399107079,Verilog,FIFO_verilog,5,2,2022-04-19 06:24:34+00:00,[],None
91,https://github.com/artn-dev/FPGA-microwave-controller.git,2021-08-18 01:18:40+00:00,Projeto 2 da disciplina de Sistemas Digitais,0,artn-dev/FPGA-microwave-controller,397435029,Verilog,FPGA-microwave-controller,695,2,2021-12-15 16:09:59+00:00,[],None
92,https://github.com/dineshannayya/yifive.git,2021-08-22 14:59:56+00:00,,4,dineshannayya/yifive,398827043,Verilog,yifive,1723799,2,2023-09-19 04:06:10+00:00,[],https://api.github.com/licenses/apache-2.0
93,https://github.com/Frightwig/-64bit-Dual-Channel-Multiplier.git,2021-08-25 02:00:59+00:00,64bit Dual-Channel Multiplier,0,Frightwig/-64bit-Dual-Channel-Multiplier,399659432,Verilog,-64bit-Dual-Channel-Multiplier,735,2,2022-06-01 22:18:38+00:00,[],None
94,https://github.com/Centre-for-Hardware-Security/saber-chip.git,2021-09-01 07:00:24+00:00,Source files of a SABER cryptocore that was taped out in September 2021. This is a collaborative work between TalTech and TU Graz.,0,Centre-for-Hardware-Security/saber-chip,401963496,Verilog,saber-chip,63,2,2023-11-12 10:51:48+00:00,[],None
95,https://github.com/sfu-arch/HJ_solver.git,2021-08-31 23:28:05+00:00,Accelerators for solving Hamiltonian-Jacobi partial differential equation (PDE) on a 4D Dubins Car system,2,sfu-arch/HJ_solver,401869901,Verilog,HJ_solver,1239,2,2023-09-14 11:30:22+00:00,[],https://api.github.com/licenses/mit
96,https://github.com/mnmhdanas/Automatic-washing-machine.git,2021-09-06 02:21:23+00:00,This project proposes to demonstrate the capabilities and scope of Verilog HDL by implementing the control system of an automatic washing machine. The above mentioned objective by implementing the Control System of an automatic washing using the Finite State Machine model. The washing machine control system generates all the control signals required for the operation of washing machine and is designed using Verilog HDL. ,0,mnmhdanas/Automatic-washing-machine,403460324,Verilog,Automatic-washing-machine,559,2,2024-02-21 15:11:50+00:00,"['digital-design', 'verilog', 'verilog-project', 'vlsi-design', 'fpga-programming', 'washing-machine']",None
97,https://github.com/tlucanti/Risc-V.git,2021-09-13 08:18:32+00:00,RISC-V CPU implementation,0,tlucanti/Risc-V,405889647,Verilog,Risc-V,57011,2,2023-09-27 19:10:45+00:00,[],https://api.github.com/licenses/mit
98,https://github.com/nagasuk/dgn_drone_hs.git,2021-09-08 14:09:01+00:00,DGN Drone Hardware System,0,nagasuk/dgn_drone_hs,404372177,Verilog,dgn_drone_hs,63,2,2022-08-12 03:53:23+00:00,[],
99,https://github.com/nagasuk/mBldcm.git,2021-09-06 14:31:39+00:00,mBldcm (Brushless DC Motor Driver IP),0,nagasuk/mBldcm,403653859,Verilog,mBldcm,334,2,2022-01-23 07:23:42+00:00,[],
100,https://github.com/MorryAnderson/JPEG-Encoder.git,2021-08-31 12:25:02+00:00,,0,MorryAnderson/JPEG-Encoder,401693898,Verilog,JPEG-Encoder,77,2,2022-12-14 03:17:29+00:00,[],None
101,https://github.com/5238801/VITI.git,2021-08-27 12:51:52+00:00,,0,5238801/VITI,400508084,Verilog,VITI,12,2,2022-12-01 08:04:45+00:00,[],https://api.github.com/licenses/mit
102,https://github.com/GnosGnas/EE2003-Computer-Organisation.git,2021-09-07 09:16:32+00:00,Solutions to assignments of ee2003,0,GnosGnas/EE2003-Computer-Organisation,403915433,Verilog,EE2003-Computer-Organisation,28046,2,2022-05-23 04:06:23+00:00,[],None
103,https://github.com/Herring-UGACSEE-4290/Labs.git,2021-08-24 01:07:57+00:00,All of the lab files for the class,0,Herring-UGACSEE-4290/Labs,399293067,Verilog,Labs,10174,2,2022-01-25 20:05:47+00:00,[],None
104,https://github.com/YuanBiju/verilog-files.git,2021-09-12 01:41:26+00:00,verilog programs,0,YuanBiju/verilog-files,405520926,Verilog,verilog-files,12,1,2021-09-20 17:00:02+00:00,[],None
105,https://github.com/UMitchC/FIR-Filter-on-FPGA.git,2021-09-02 07:10:31+00:00,,0,UMitchC/FIR-Filter-on-FPGA,402325268,Verilog,FIR-Filter-on-FPGA,103673,1,2021-10-15 15:16:07+00:00,[],None
106,https://github.com/husterZC/pipeRV32N.git,2021-08-29 12:05:52+00:00,A 4 stage pipelined 32-bit  RISCV core with only  8  base integer registers,0,husterZC/pipeRV32N,401031605,Verilog,pipeRV32N,868,1,2021-09-04 08:02:04+00:00,[],https://api.github.com/licenses/gpl-3.0
107,https://github.com/dmildon/ECE3710Group.git,2021-08-31 22:26:07+00:00,,1,dmildon/ECE3710Group,401859197,Verilog,ECE3710Group,51643,1,2021-12-18 02:24:06+00:00,[],None
108,https://github.com/suoglu/Sequential-CRC-Generator.git,2021-09-17 21:59:25+00:00,Pair of modules to calculate crc values sequentially,0,suoglu/Sequential-CRC-Generator,407689456,Verilog,Sequential-CRC-Generator,26,1,2023-08-03 18:35:26+00:00,"['crc', 'verilog', 'fpga']",
109,https://github.com/SexySparrow/RISC_V.git,2021-08-26 17:20:39+00:00,RISC-V CPU arhitecture ,0,SexySparrow/RISC_V,400250229,Verilog,RISC_V,11,1,2022-03-06 13:10:03+00:00,"['risc-v', 'verilog', 'cpu-architecture']",None
110,https://github.com/wdevore/A09-Softcore-Processor.git,2021-08-27 00:26:30+00:00,An FPGA softcore processor for a corresponding video series.,3,wdevore/A09-Softcore-Processor,400341666,Verilog,A09-Softcore-Processor,10678,1,2022-02-18 19:00:13+00:00,[],https://api.github.com/licenses/mit
111,https://github.com/mnmhdanas/RISC-V-rv32i.git,2021-09-09 11:50:06+00:00,"This is rv32i verilog design and it works fine for all instrcutions except lbu , lhu , ecall,ebreak ",0,mnmhdanas/RISC-V-rv32i,404702115,Verilog,RISC-V-rv32i,21,1,2023-02-14 20:07:32+00:00,[],None
112,https://github.com/mdsudara/three-input-gates-TCAD2020.git,2021-09-14 13:04:41+00:00,"Experimental results presented in Three-Input Gates for Logic Synthesis, TCAD 2020.",0,mdsudara/three-input-gates-TCAD2020,406369909,Verilog,three-input-gates-TCAD2020,7298,1,2022-03-12 14:52:51+00:00,[],None
113,https://github.com/GentlemanAMS/Verilog_HDLBits.git,2021-09-16 03:32:51+00:00,Solutions to the problems in https://hdlbits.01xz.net/wiki/Main_Page,0,GentlemanAMS/Verilog_HDLBits,407006788,Verilog,Verilog_HDLBits,28,1,2023-09-30 13:55:54+00:00,[],None
114,https://github.com/64-bit/Trashbin.git,2021-08-24 02:33:52+00:00,A attempt at a RISC-V core.,0,64-bit/Trashbin,399311252,Verilog,Trashbin,703,1,2023-01-05 18:44:59+00:00,[],None
115,https://github.com/booiris/cpu_work.git,2021-08-24 10:17:23+00:00,小学期硬件实验,0,booiris/cpu_work,399421117,Verilog,cpu_work,9,1,2023-05-26 12:35:43+00:00,[],None
116,https://github.com/EE-Mike/EE-Mike.git,2021-09-01 02:19:32+00:00,Config files for my GitHub profile.,0,EE-Mike/EE-Mike,401904409,Verilog,EE-Mike,99,1,2021-11-18 01:45:08+00:00,"['config', 'github-config']",None
117,https://github.com/stkerr/Base-PUF-.git,2021-08-19 18:11:52+00:00,Basic PUF implementation,0,stkerr/Base-PUF-,398034834,Verilog,Base-PUF-,5,1,2023-04-24 00:06:51+00:00,[],None
118,https://github.com/mluisass/UART-SD.git,2021-08-20 01:06:27+00:00,Projeto de um Receptor/Transmissor Universal Assíncrono (UART) para a disciplina de Sistema Digitais (SD),0,mluisass/UART-SD,398116481,Verilog,UART-SD,25,1,2021-09-21 18:41:41+00:00,[],None
119,https://github.com/ffracica/UNPARKING.git,2021-08-28 17:05:28+00:00,"El proyecto se basa en el diseño de un parqueadero inteligente que sirva como una solución alternativa a otras propuestas de este tipo, centrado en la aplicación de un prototipo que pueda ser aplicado en un lugar específico como un centro comercial. Para la realización del prototipo se implemento una tarjeta de desarrollo Altera Cyclone IV, a la cual se le añadieron diferentes componentes con el propósito de crear un sistema automatizado que mejore el funcionamiento y la eficiencia de un parqueadero convencional.",0,ffracica/UNPARKING,400846990,Verilog,UNPARKING,11403,1,2021-10-11 17:21:56+00:00,[],None
120,https://github.com/KhoaDTran/FPGA-Verilog-HDL-Design-Projects-Coursework.git,2021-08-30 22:09:04+00:00,Coursework and projects regarding the design of field programmable gate arrays (FPGA) model applications in System Verilog Hardware Description Language at the University of Washington,0,KhoaDTran/FPGA-Verilog-HDL-Design-Projects-Coursework,401498992,Verilog,FPGA-Verilog-HDL-Design-Projects-Coursework,307284,1,2021-09-01 00:19:25+00:00,[],None
121,https://github.com/abhishekmittal15/ProcesXor.git,2021-08-28 07:04:33+00:00,A y86 processor I made in verilog ,0,abhishekmittal15/ProcesXor,400726359,Verilog,ProcesXor,382,1,2023-03-04 08:58:59+00:00,[],None
122,https://github.com/Nikola-Lab/icopy_fpga_3s_0921.git,2021-08-24 08:28:33+00:00,,0,Nikola-Lab/icopy_fpga_3s_0921,399390670,Verilog,icopy_fpga_3s_0921,423,1,2022-02-02 17:37:37+00:00,[],https://api.github.com/licenses/gpl-3.0
123,https://github.com/phuhavan/singular-value-decomposition.git,2021-08-22 11:05:58+00:00,,0,phuhavan/singular-value-decomposition,398778650,Verilog,singular-value-decomposition,691,1,2022-06-06 17:41:25+00:00,[],https://api.github.com/licenses/apache-2.0
124,https://github.com/Merinyeldho/SAP1-computer-verilog.git,2021-09-12 19:11:16+00:00,Verilog implementation of SAP-1 computer architecture,0,Merinyeldho/SAP1-computer-verilog,405731070,Verilog,SAP1-computer-verilog,61,1,2022-08-18 05:45:25+00:00,"['sap-1', 'verilog', '8bitcomputer', 'sap-1-computer']",None
125,https://github.com/tahaShm/digital-logic-design.git,2021-08-27 11:11:34+00:00,"This repo consists of 6 projects implemented with Verilog language, ModelSim environment, and Quartus.",1,tahaShm/digital-logic-design,400482370,Verilog,digital-logic-design,10115,1,2022-04-16 21:37:43+00:00,"['verilog', 'vhdl', 'modelsim', 'quartus']",None
126,https://github.com/ksooryakrishna1/eSIm_Marathon_Stage4_Report.git,2021-08-20 23:32:24+00:00,Design of 12 Bit Adder using 4 bit CLA logic,0,ksooryakrishna1/eSIm_Marathon_Stage4_Report,398423014,Verilog,eSIm_Marathon_Stage4_Report,1880,1,2021-09-15 07:27:10+00:00,[],None
127,https://github.com/FilipeGomesMelo/IF675-Proj2.git,2021-08-21 13:02:12+00:00,Implementação de forno micro-ondas em verilog,0,FilipeGomesMelo/IF675-Proj2,398559184,Verilog,IF675-Proj2,61,1,2022-01-21 12:16:42+00:00,[],None
128,https://github.com/mnmhdanas/simple-MIPS32-processor.git,2021-08-28 13:57:04+00:00,"A pipelined implementation of MIPS32 processor using Verilog HDL MIPS32 is a Reduced Instruction Set Computer (RISC) architecture, and here, this particular processor is designed in Verilog HDL with 5 phases of pipeline, namely Instruction Fetch (IF), Instruction Decode (ID), Execution (EX), Memory (MEM), Write Back (WB). This design has a small subset of the instructions (and some simplifying assumptions), and verification of the design is done using some testbench and GTKWave simulator.",0,mnmhdanas/simple-MIPS32-processor,400805671,Verilog,simple-MIPS32-processor,5,1,2023-02-14 20:07:41+00:00,"['verilog', 'fpga', 'verilog-hdl', 'mips-architecture', 'mips32', 'pipeline', 'digital-design']",None
129,https://github.com/mauricio-sj/LAB_1_Trabalho_02_FSM.git,2021-09-15 02:06:48+00:00,LAB_1_Trabalho_02_FSM,0,mauricio-sj/LAB_1_Trabalho_02_FSM,406582255,Verilog,LAB_1_Trabalho_02_FSM,5531,1,2021-09-17 00:17:45+00:00,[],None
130,https://github.com/SouthernPark/ECE_550_project.git,2021-09-11 14:26:12+00:00,This is the project for ECE_550,1,SouthernPark/ECE_550_project,405399978,Verilog,ECE_550_project,46,1,2021-12-14 01:34:51+00:00,[],None
131,https://github.com/robotique-ecam/ViveTracker.git,2021-09-07 08:09:30+00:00,This is our solution for lighthouse 2.0 open source tracking,2,robotique-ecam/ViveTracker,403895157,Verilog,ViveTracker,794,1,2022-05-03 21:53:41+00:00,"['ecp5', 'fpga', 'lighthouse', 'ros2', 'tracking', 'valve']",None
132,https://github.com/mshetty149/Hardware-Designs.git,2021-08-30 06:12:38+00:00,RTL Designs along with testbenches to verify them written in Verilog. Icarus Verilog an open source simulator was used for simulations.,0,mshetty149/Hardware-Designs,401235491,Verilog,Hardware-Designs,4321,1,2021-10-12 16:30:39+00:00,"['verilog', 'rtl', 'vlsi', 'digitaldesign']",None
133,https://github.com/TheSonders/NCO.git,2021-09-04 21:16:29+00:00,Simple NCO (Numerically Controlled Oscillator),0,TheSonders/NCO,403157575,Verilog,NCO,3,1,2022-12-01 19:04:50+00:00,[],None
134,https://github.com/raja-aadhithan/Maven_silicon_Verilog.git,2021-09-04 13:57:56+00:00,Verilog Programs used for advanced VLSI Design,0,raja-aadhithan/Maven_silicon_Verilog,403070164,Verilog,Maven_silicon_Verilog,22770,1,2023-10-24 07:35:53+00:00,[],None
135,https://github.com/xuzf-git/music_player.git,2021-09-06 03:15:55+00:00,基于 MIPS 架构、UART 串口通信等方法，通过 Verilog HDL 设计实现包含 CPU 和外设控制器的音乐播放器,0,xuzf-git/music_player,403470946,Verilog,music_player,106,1,2023-05-09 10:09:58+00:00,[],https://api.github.com/licenses/gpl-2.0
136,https://github.com/PDundon2023/Project-Lab-1.git,2021-09-11 04:13:37+00:00,,0,PDundon2023/Project-Lab-1,405280423,Verilog,Project-Lab-1,40,1,2022-02-02 18:13:37+00:00,[],None
137,https://github.com/bvgayatri/Bit-Error-Rate-Testing.git,2021-08-20 16:06:29+00:00,BER testing project using FPGA. It is used to measure the quality of a communication system. ,0,bvgayatri/Bit-Error-Rate-Testing,398331690,Verilog,Bit-Error-Rate-Testing,9,1,2023-05-04 11:08:07+00:00,[],None
138,https://github.com/mriosrivas/Hardware_Labs_2021.git,2021-08-18 22:29:27+00:00,Laboratorios del curso de Hardware y Arquitecturas,0,mriosrivas/Hardware_Labs_2021,397750298,Verilog,Hardware_Labs_2021,164,1,2022-03-24 23:00:27+00:00,[],https://api.github.com/licenses/mit
139,https://github.com/KonstantinFed12344/signed_multiplier.git,2021-09-01 03:32:27+00:00,Signed multiplier made in Verilog using two's complement modules and an unsigned multiplier,0,KonstantinFed12344/signed_multiplier,401919861,Verilog,signed_multiplier,6,1,2022-10-27 23:37:00+00:00,[],https://api.github.com/licenses/mit
140,https://github.com/explcre/19Fall-VE270-Intro-to-Logic-Design.git,2021-08-24 06:40:32+00:00,19Fall-VE270-Intro-to-Logic-Design,0,explcre/19Fall-VE270-Intro-to-Logic-Design,399362030,Verilog,19Fall-VE270-Intro-to-Logic-Design,706,1,2023-05-01 02:25:56+00:00,[],https://api.github.com/licenses/apache-2.0
141,https://github.com/sethm/mfm_emulator.git,2021-09-01 22:01:29+00:00,MFM Drive Emulator for the BeMicro CV FPGA Card,0,sethm/mfm_emulator,402214503,Verilog,mfm_emulator,10,1,2023-02-01 04:19:19+00:00,"['emulator', 'fpga', 'verilog']",None
142,https://github.com/Y-Galal/MIPS-Processor.git,2021-08-16 16:41:35+00:00,,0,Y-Galal/MIPS-Processor,396881913,Verilog,MIPS-Processor,956,1,2021-08-19 07:08:05+00:00,[],None
143,https://github.com/RahilEbrahimi98/Pipelined-MIPS-CPU.git,2021-08-25 15:52:07+00:00,Pipelined MIPS CPU- with Verilog,0,RahilEbrahimi98/Pipelined-MIPS-CPU,399875708,Verilog,Pipelined-MIPS-CPU,292,1,2021-08-29 19:09:35+00:00,[],None
144,https://github.com/aliabbasi-engr/aes-verilog.git,2021-09-06 11:19:00+00:00,,0,aliabbasi-engr/aes-verilog,403594085,Verilog,aes-verilog,36,1,2022-03-15 21:22:02+00:00,[],https://api.github.com/licenses/gpl-3.0
145,https://github.com/williamtien23/monkeyV.git,2021-09-12 15:26:23+00:00,rv32i verilog implementation with 5 stage pipeline,0,williamtien23/monkeyV,405678495,Verilog,monkeyV,9395,1,2022-07-29 05:25:18+00:00,"['risc-v', 'riscv', 'verilog']",https://api.github.com/licenses/mit
146,https://github.com/sidhantp1906/AMBA4-APB.git,2021-09-07 17:57:09+00:00,Advanced Pheripheral Bus design using verilog HDL,1,sidhantp1906/AMBA4-APB,404074294,Verilog,AMBA4-APB,356,1,2023-09-07 07:51:02+00:00,"['verilog', 'amba-apb', 'amba4', 'rtl-design', 'protocols', 'digital-system-design']",https://api.github.com/licenses/apache-2.0
147,https://github.com/jiegec/opencores-fpu.git,2021-09-05 14:01:07+00:00,Mirror of https://opencores.org/projects/fpu with patches,1,jiegec/opencores-fpu,403323200,Verilog,opencores-fpu,98,1,2023-09-19 10:46:49+00:00,[],None
148,https://github.com/lgy-moon/Memory_read-write.git,2021-08-23 09:02:49+00:00,,0,lgy-moon/Memory_read-write,399037978,Verilog,Memory_read-write,4,1,2021-08-24 07:35:07+00:00,[],None
149,https://github.com/Shihhaolin/VLSI-Design.git,2021-09-01 01:37:58+00:00,,0,Shihhaolin/VLSI-Design,401895020,Verilog,VLSI-Design,10862,1,2021-10-31 20:58:25+00:00,[],None
150,https://github.com/JRRL157/Temperature_Monitor_Verilog.git,2021-08-25 18:35:07+00:00,"Projetar um monitor de temperatura ambiente com alarmes e avisos de temperatura alta ou baixa. Neste projeto deverá ser utilizada a linguagem Verilog para o interfaceamento com o sensor de temperatura LM75A. Se o grupo desejar, pode usufruir de códigos projetados anteriormente em AHDL ou VHDL para interfaceamento com os displays de sete segmentos e com o LCD. Para todas as rotinas em AHDL, VHDL ou Verilog DEVEM ser criado módulos distintos. A quantidade de módulos fica a critério do grupo, que deve saber equilibrar a descrição dos circuitos, de forma a manter harmonia entre sua quantidade e complexidade. Devem-se utilizar no mínimo um módulo para o LCD, um para os displays de sete segmentos e mais um para a interface de comunicação com o sensor de temperatura LM75A. Funções adicionais podem ser introduzidas ao projeto, desde que suas funcionalidades sejam relevantes.",0,JRRL157/Temperature_Monitor_Verilog,399921633,Verilog,Temperature_Monitor_Verilog,8674,1,2022-05-20 08:36:10+00:00,[],None
151,https://github.com/alexandre-roque/EnhancedProcessor.git,2021-09-16 00:27:57+00:00,Esse foi um trabalho feito durante a disciplina de Arquitetura de Organização de Software II. O objetivo era criar um processador multiciclo na linguagem Verilog que interpretasse instruções em binário.,0,alexandre-roque/EnhancedProcessor,406963718,Verilog,EnhancedProcessor,8521,1,2022-05-23 17:05:44+00:00,[],None
152,https://github.com/gmojicar/Proyecto-Electr-nica-Digital-I-HelioSmart.git,2021-08-28 16:05:23+00:00,,0,gmojicar/Proyecto-Electr-nica-Digital-I-HelioSmart,400834567,Verilog,Proyecto-Electr-nica-Digital-I-HelioSmart,11943,1,2021-10-11 17:24:07+00:00,[],None
153,https://github.com/TAGGGo/550Verilog.git,2021-09-13 02:05:13+00:00,,0,TAGGGo/550Verilog,405802868,Verilog,550Verilog,101,1,2021-11-16 05:57:37+00:00,[],None
154,https://github.com/liannequach/Digital-Clock-with-Timer-and-Stopwatch-on-Xilinx-FPGA.git,2021-09-13 03:44:24+00:00,,0,liannequach/Digital-Clock-with-Timer-and-Stopwatch-on-Xilinx-FPGA,405823644,Verilog,Digital-Clock-with-Timer-and-Stopwatch-on-Xilinx-FPGA,31641,1,2021-09-13 19:44:50+00:00,[],None
155,https://github.com/anurag-agrwal/Booth-Multiplier.git,2021-08-21 08:04:09+00:00,,0,anurag-agrwal/Booth-Multiplier,398501700,Verilog,Booth-Multiplier,9,1,2022-05-18 12:25:12+00:00,[],None
156,https://github.com/SouthernPark/ECE_550_recitation.git,2021-09-15 14:01:32+00:00,This repo is for the recitation of ECE550,0,SouthernPark/ECE_550_recitation,406789466,Verilog,ECE_550_recitation,30412,1,2022-09-26 14:08:45+00:00,[],None
157,https://github.com/diakovd/NN-MNIST-FPGA.git,2021-09-06 16:09:53+00:00,,0,diakovd/NN-MNIST-FPGA,403685258,Verilog,NN-MNIST-FPGA,27710,1,2022-07-26 16:43:26+00:00,[],None
158,https://github.com/junyang-zh/HeliumCPU.git,2021-08-17 11:48:05+00:00,Personal work for computer organization.,0,junyang-zh/HeliumCPU,397234408,Verilog,HeliumCPU,20,1,2021-08-30 14:48:39+00:00,[],None
159,https://github.com/QianpengLi577/a-implement-cnn-using-verilog.git,2021-08-21 06:35:01+00:00,,0,QianpengLi577/a-implement-cnn-using-verilog,398485602,Verilog,a-implement-cnn-using-verilog,3068,1,2023-08-30 06:35:05+00:00,[],None
160,https://github.com/suhas4122/COA-Lab-CS39001.git,2021-08-23 10:54:32+00:00,,0,suhas4122/COA-Lab-CS39001,399068032,Verilog,COA-Lab-CS39001,22860,1,2022-11-01 09:58:54+00:00,[],None
161,https://github.com/SmirnuX/MD4_verilog.git,2021-08-22 06:12:38+00:00,Verilog realisation of MD4 algorithm for 16-bit input.,0,SmirnuX/MD4_verilog,398728200,Verilog,MD4_verilog,1,1,2021-08-22 14:30:35+00:00,[],None
162,https://github.com/HsuChiChen/logic-design-ncku.git,2021-08-24 07:13:50+00:00,sequence detector with overlapped 2 patterns 010111 or 1101,0,HsuChiChen/logic-design-ncku,399370600,Verilog,logic-design-ncku,14198,1,2024-03-18 19:48:26+00:00,"['sequence-detector', 'hardware-acceleration', 'digital-logic-design']",None
163,https://github.com/aliabbasi-engr/dct-verilog.git,2021-09-06 10:52:31+00:00,,0,aliabbasi-engr/dct-verilog,403586551,Verilog,dct-verilog,27,1,2022-03-15 21:23:09+00:00,[],https://api.github.com/licenses/gpl-3.0
164,https://github.com/aliabbasi-engr/triple-des-verilog.git,2021-09-06 11:20:22+00:00,,1,aliabbasi-engr/triple-des-verilog,403594458,Verilog,triple-des-verilog,29,1,2022-03-15 21:22:33+00:00,[],https://api.github.com/licenses/gpl-3.0
165,https://github.com/zbrydon/SIT329-Project.git,2021-08-21 02:41:48+00:00,,0,zbrydon/SIT329-Project,398449463,Verilog,SIT329-Project,3092,1,2022-03-13 05:44:13+00:00,[],None
166,https://github.com/makararasi/UVM_RISCV.git,2021-09-11 07:23:36+00:00,,1,makararasi/UVM_RISCV,405312614,Verilog,UVM_RISCV,148,1,2022-02-18 08:33:32+00:00,[],https://api.github.com/licenses/mit
167,https://github.com/sbowles22/processor-design.git,2021-09-15 01:01:24+00:00,,1,sbowles22/processor-design,406568104,Verilog,processor-design,16935,1,2021-11-18 19:10:11+00:00,[],None
168,https://github.com/HsuChiChen/computer-organization-ncku.git,2021-08-23 11:50:09+00:00,"assembly code, RISC-V, and some implementation regarding computer organization ",0,HsuChiChen/computer-organization-ncku,399083553,Verilog,computer-organization-ncku,62299,1,2024-03-18 19:47:50+00:00,"['risc-v', 'assembly-language', 'computer-organization', 'arduino']",None
169,https://github.com/marcostfermin/Stepper-Motor-Controller.git,2021-09-05 23:30:42+00:00,Stepper Motor Controller with Verilog,0,marcostfermin/Stepper-Motor-Controller,403433499,Verilog,Stepper-Motor-Controller,7086,1,2022-12-22 19:59:28+00:00,[],https://api.github.com/licenses/mit
170,https://github.com/QuickLogic-Corp/fpgabincombiner.git,2021-08-24 18:14:56+00:00,utility toolset to generate iomux bin and combine bitstream/meminit/iomux bins into fpgabin for EOSS3,2,QuickLogic-Corp/fpgabincombiner,399563378,Verilog,fpgabincombiner,1534,1,2022-02-16 17:58:44+00:00,[],None
171,https://github.com/prannoypara/APB-Protocol.git,2021-08-16 20:16:06+00:00,,0,prannoypara/APB-Protocol,396956994,Verilog,APB-Protocol,1011,1,2022-08-26 11:31:13+00:00,[],None
172,https://github.com/HesamAsad/Cosx-Accelerator-Verilog.git,2021-08-25 10:55:37+00:00,Computer Assignment #06 - Digital Logic Design Course - University of Tehran - Dr. Navabi,0,HesamAsad/Cosx-Accelerator-Verilog,399785455,Verilog,Cosx-Accelerator-Verilog,875,1,2022-11-05 07:21:46+00:00,[],None
173,https://github.com/mashirol/miniCPU.git,2021-08-25 02:26:50+00:00,,0,mashirol/miniCPU,399665065,Verilog,miniCPU,49944,1,2022-03-02 05:36:21+00:00,[],None
174,https://github.com/ksooryakrishna1/dvsd-12-Bit_Adder_Using_4-Bit_CLA.git,2021-08-27 14:37:58+00:00,Designing a 12 Bit adder using 4 Bit CLA,1,ksooryakrishna1/dvsd-12-Bit_Adder_Using_4-Bit_CLA,400538880,Verilog,dvsd-12-Bit_Adder_Using_4-Bit_CLA,66,1,2021-09-15 07:26:45+00:00,[],None
175,https://github.com/ddribin/fpgapu.git,2021-09-12 04:52:26+00:00,An FPGA-based audio synthesizer modeled after the audio processing unit (APU) of the Nintendo Entertainment System (NES).,0,ddribin/fpgapu,405549409,Verilog,fpgapu,203,1,2023-05-28 20:30:07+00:00,[],https://api.github.com/licenses/mit
176,https://github.com/CaRoLZhangxy/UCAS_Computer_Architecture_Lab.git,2021-08-17 03:37:15+00:00,Code for UCAS Computer Architecture Lab 20-21 Autumn,1,CaRoLZhangxy/UCAS_Computer_Architecture_Lab,397082589,Verilog,UCAS_Computer_Architecture_Lab,11544,1,2021-11-10 04:47:49+00:00,[],None
177,https://github.com/debtanu09/ee705-floating-point-multiplier.git,2021-08-15 09:33:31+00:00,This is a repository containing all the Quartus and NIOS II simulation files and the testcases for EE705 course,0,debtanu09/ee705-floating-point-multiplier,396296767,Verilog,ee705-floating-point-multiplier,450,1,2022-04-17 21:44:38+00:00,[],None
178,https://github.com/mbeddedbk/AES-128-Encryption.git,2021-09-02 21:03:57+00:00,"With a focus on resource utilization efficiency and pipelining, this source code includes subparts for implementation of Advanced Encryption Standard using Verilog. Because this project was co-developed by several contributors, the codes may not be entirely working.",0,mbeddedbk/AES-128-Encryption,402562557,Verilog,AES-128-Encryption,7,1,2023-06-05 09:08:36+00:00,[],None
179,https://github.com/smunaut/icecrash-playground.git,2021-09-02 23:01:18+00:00,,0,smunaut/icecrash-playground,402584497,Verilog,icecrash-playground,124,1,2021-09-29 11:15:55+00:00,[],
180,https://github.com/okjonny/16-Bit-CPU-Pong-Game.git,2021-09-02 22:05:16+00:00,3710 Lab,2,okjonny/16-Bit-CPU-Pong-Game,402574537,Verilog,16-Bit-CPU-Pong-Game,4969,1,2023-01-28 02:51:48+00:00,[],None
181,https://github.com/shuiqzhang/zzz.git,2021-09-15 01:49:19+00:00,Config files for my GitHub profile.,0,shuiqzhang/zzz,406578168,Verilog,zzz,100,1,2021-09-15 09:19:37+00:00,"['config', 'github-config']",None
182,https://github.com/anurag-agrwal/Wallace-Multiplier.git,2021-08-21 08:00:22+00:00,,0,anurag-agrwal/Wallace-Multiplier,398500929,Verilog,Wallace-Multiplier,16,1,2023-10-24 17:02:01+00:00,[],None
183,https://github.com/borna-tl/University-DLD.git,2021-08-21 19:23:15+00:00,Contains all of the projects from both Digital Logic Design and Digital Logic Design Lab courses.,0,borna-tl/University-DLD,398639886,Verilog,University-DLD,10484,1,2021-11-11 09:19:51+00:00,[],None
184,https://github.com/borna-tl/University-CA.git,2021-08-21 20:44:20+00:00,Contains some of the more challenging projects for our Computer Architecture course.,0,borna-tl/University-CA,398652895,Verilog,University-CA,689,1,2023-11-30 15:31:46+00:00,[],None
185,https://github.com/ccxuan123/HDL-BIts-Solutions.git,2021-08-30 04:16:23+00:00,Here are my solutions to HDLbits Verilog problem sets (https://hdlbits.01xz.net/wiki/Main_Page). ,0,ccxuan123/HDL-BIts-Solutions,401213489,Verilog,HDL-BIts-Solutions,29,1,2021-11-09 16:28:03+00:00,[],None
186,https://github.com/zzlzzlwithzzl/tessent.git,2021-09-14 13:44:32+00:00,,0,zzlzzlwithzzl/tessent,406384187,Verilog,tessent,35,1,2023-08-30 11:13:36+00:00,[],None
187,https://github.com/CasperHsiao/ECE550_Project.git,2021-09-15 01:05:09+00:00,,0,CasperHsiao/ECE550_Project,406568915,Verilog,ECE550_Project,5300,1,2022-09-26 14:11:15+00:00,[],None
188,https://github.com/horahh/riscv_i32_minimum.git,2021-08-28 20:12:33+00:00,Didactic implementation of a riscv processor,1,horahh/riscv_i32_minimum,400881795,Verilog,riscv_i32_minimum,156,1,2022-02-27 01:13:30+00:00,[],https://api.github.com/licenses/mit
189,https://github.com/DaiAlaa/Multiplication-Verilog.git,2021-08-21 19:45:56+00:00,,1,DaiAlaa/Multiplication-Verilog,398643601,Verilog,Multiplication-Verilog,59,1,2021-08-23 00:53:01+00:00,[],None
190,https://github.com/TripRichert/sort_fpga.git,2021-09-18 20:47:22+00:00,,0,TripRichert/sort_fpga,407964434,Verilog,sort_fpga,46,1,2024-01-24 15:45:08+00:00,[],https://api.github.com/licenses/mit
191,https://github.com/CamiloMaiaPires/MIPS-32.git,2021-08-18 02:50:27+00:00,32 Bits MIPS Single cycle processor,0,CamiloMaiaPires/MIPS-32,397453237,Verilog,MIPS-32,8812,1,2021-08-25 21:10:46+00:00,[],None
192,https://github.com/gabrielsalvi/expression-solver.git,2021-08-27 13:04:29+00:00,A program to solve the equation AX² + BX + C using verilog,0,gabrielsalvi/expression-solver,400511476,Verilog,expression-solver,38877,1,2023-09-08 19:45:39+00:00,[],None
193,https://github.com/99swetha/AMBA-APB-and-AMBA-AHB-Lite.git,2021-08-28 16:21:57+00:00,,0,99swetha/AMBA-APB-and-AMBA-AHB-Lite,400838099,Verilog,AMBA-APB-and-AMBA-AHB-Lite,1111,1,2023-03-25 06:23:05+00:00,[],None
194,https://github.com/slayterteal/Handwritten-Image-Neural-Network.git,2021-09-18 14:22:15+00:00,ECEN 4303 Term Project:,0,slayterteal/Handwritten-Image-Neural-Network,407880779,Verilog,Handwritten-Image-Neural-Network,28316,1,2022-03-28 08:21:53+00:00,[],None
195,https://github.com/ombhilare999/icebreaker-ecp5-examples.git,2021-09-15 14:39:38+00:00,Examples for icebreaker ++ board,0,ombhilare999/icebreaker-ecp5-examples,406805302,Verilog,icebreaker-ecp5-examples,531,1,2021-09-23 14:18:25+00:00,[],https://api.github.com/licenses/mit
196,https://github.com/aliabbasi-engr/des-verilog.git,2021-09-06 11:20:00+00:00,,0,aliabbasi-engr/des-verilog,403594345,Verilog,des-verilog,29,1,2022-03-15 21:21:31+00:00,[],https://api.github.com/licenses/gpl-3.0
197,https://github.com/Gerald-Gui/UCAS-CA-Lab.git,2021-09-07 06:48:20+00:00,UCAS Computer Architecture Lab 2021 Autumn,1,Gerald-Gui/UCAS-CA-Lab,403871827,Verilog,UCAS-CA-Lab,9382,1,2023-12-04 23:11:58+00:00,[],https://api.github.com/licenses/mit
198,https://github.com/Abraxas3d/risc-v.git,2021-09-11 23:28:30+00:00,RISC-V instruction set architecture,0,Abraxas3d/risc-v,405503518,Verilog,risc-v,23,1,2024-02-20 21:11:39+00:00,[],None
199,https://github.com/no2fpga/no2qpimem.git,2021-08-18 18:44:30+00:00,Nitro QPI memory master core,1,no2fpga/no2qpimem,397703210,Verilog,no2qpimem,39,1,2023-02-10 10:23:06+00:00,[],
200,https://github.com/503976632/shakehand_v2.git,2021-09-09 08:10:10+00:00,,0,503976632/shakehand_v2,404639010,Verilog,shakehand_v2,1,1,2023-06-04 16:42:06+00:00,[],None
201,https://github.com/TutuyCosmos224/ALU-simulator.git,2021-09-06 09:56:27+00:00,A C++ program to simulate how ALU works,0,TutuyCosmos224/ALU-simulator,403570329,Verilog,ALU-simulator,4,1,2021-09-06 10:01:07+00:00,[],None
202,https://github.com/PrateekChauhan26/DAC-Digital-Alarm-Clock.git,2021-09-12 03:51:05+00:00,Implemented a Digital Alarm Clock using Verilog (HDL).,0,PrateekChauhan26/DAC-Digital-Alarm-Clock,405540093,Verilog,DAC-Digital-Alarm-Clock,5,1,2021-09-12 03:57:26+00:00,[],None
203,https://github.com/neelpambhar10/verilog.git,2021-08-26 06:55:11+00:00,,0,neelpambhar10/verilog,400071032,Verilog,verilog,29,1,2021-09-04 14:07:23+00:00,[],None
204,https://github.com/IrlandaV01/IrlandaValadez.git,2021-09-02 13:20:50+00:00,,0,IrlandaV01/IrlandaValadez,402428278,Verilog,IrlandaValadez,23106,1,2021-09-02 23:00:04+00:00,[],https://api.github.com/licenses/gpl-3.0
205,https://github.com/suphon-t/hwsynlab.git,2021-09-14 09:05:49+00:00,,0,suphon-t/hwsynlab,406297588,Verilog,hwsynlab,55,1,2023-03-09 00:29:20+00:00,[],None
206,https://github.com/MehmetAnilIrfanoglu/VHDL.git,2021-08-25 20:53:39+00:00,,0,MehmetAnilIrfanoglu/VHDL,399954585,Verilog,VHDL,8467,1,2023-11-29 20:41:36+00:00,[],None
207,https://github.com/MEslamM/VerilogHDL_Slave-master-interface-with-Dual-Port-RAM-SPI.git,2021-08-31 22:55:37+00:00,verilog project : SPI Slave with Dual Port RAM,0,MEslamM/VerilogHDL_Slave-master-interface-with-Dual-Port-RAM-SPI,401864385,Verilog,VerilogHDL_Slave-master-interface-with-Dual-Port-RAM-SPI,2,1,2024-03-12 19:22:53+00:00,[],None
208,https://github.com/abiriya/SoCDesign.git,2021-09-02 09:11:24+00:00,Course on SoC Design Projects and Labs. SPI module is designed in Verilog. It interfaces with an Hard Processor System using the Avalon Memory Mapped Interface.,0,abiriya/SoCDesign,402358492,Verilog,SoCDesign,47086,1,2022-02-09 16:53:15+00:00,[],None
209,https://github.com/widcardw/cpu-design.git,2021-09-12 01:04:57+00:00,,0,widcardw/cpu-design,405516139,Verilog,cpu-design,6983,1,2022-05-17 08:20:06+00:00,[],None
210,https://github.com/Disasm/ncl-playground.git,2021-09-12 06:09:13+00:00,,0,Disasm/ncl-playground,405561893,Verilog,ncl-playground,4,1,2023-03-09 21:31:43+00:00,[],None
211,https://github.com/no2fpga/no2memcache.git,2021-08-18 18:45:40+00:00,Nitro Memory Cache core,1,no2fpga/no2memcache,397703507,Verilog,no2memcache,29,1,2022-08-15 03:22:34+00:00,[],
212,https://github.com/faizaan22/Arbiter-for-RAM-module.git,2021-08-20 15:32:04+00:00,Arbiter is used to interface many devices with a single shared resource. Here we are having 2 requester devices want to access a single RAM module. Here we are using priority based arbiter.,0,faizaan22/Arbiter-for-RAM-module,398321982,Verilog,Arbiter-for-RAM-module,689,1,2022-06-23 07:56:29+00:00,[],None
213,https://github.com/EslamAsHhraf/Carry-Select-Adder.git,2021-09-14 14:40:38+00:00,"A carry select adder is an arithmetic combinational logic circuit which adds two N- bit binary numbers and outputs their N-bit binary sum and a 1-bit carry. This is no different from a ripple carry adder in function, but in design the carry select adder does not propagate the carry through as many full adders as the ripple carry adder does. This means that the time to add two numbers should be shorter. It seems this optimization was used by Charles Babbage in his design for the Analytical Engine.",0,EslamAsHhraf/Carry-Select-Adder,406405308,Verilog,Carry-Select-Adder,198,1,2023-11-20 08:21:06+00:00,[],None
214,https://github.com/wangjianze96/VerilogHDL.git,2021-09-09 11:05:01+00:00,,0,wangjianze96/VerilogHDL,404688782,Verilog,VerilogHDL,152,1,2021-09-23 03:01:42+00:00,[],None
215,https://github.com/jingkaih/chisel-try.git,2021-09-17 03:42:02+00:00,,0,jingkaih/chisel-try,407394791,Verilog,chisel-try,36587,1,2022-05-18 03:19:16+00:00,[],None
216,https://github.com/MeletChirino/vhdl_eea_BEROY_CHIRINO.git,2021-09-02 21:30:39+00:00,"Repo used for class ""Synthese et mise en oeuvre des systemes""",0,MeletChirino/vhdl_eea_BEROY_CHIRINO,402568002,Verilog,vhdl_eea_BEROY_CHIRINO,4337,1,2022-04-16 21:38:08+00:00,"['vhdl', 'simulation']",None
217,https://github.com/piotro888/pcpu.git,2021-09-04 10:30:07+00:00,pcpu - cpu with custom architecture written in Verilog,0,piotro888/pcpu,403027740,Verilog,pcpu,140,1,2022-05-06 10:24:18+00:00,"['cpu', 'fpga', 'pcpu']",None
218,https://github.com/zyn810039594/General-Robot-Control-Unit.git,2021-09-18 00:51:13+00:00,"General Robot Control Unit (aka GRCU), is a FPGA program for small scale robots, which aims to be real-time and stable.",0,zyn810039594/General-Robot-Control-Unit,407716858,Verilog,General-Robot-Control-Unit,108,1,2021-10-19 09:36:09+00:00,[],https://api.github.com/licenses/agpl-3.0
219,https://github.com/TongKang1/fpga-voltmeter.git,2021-08-29 12:14:23+00:00,,0,TongKang1/fpga-voltmeter,401033234,Verilog,fpga-voltmeter,23,0,2021-08-29 12:55:29+00:00,[],None
220,https://github.com/TheRadDani/digitales2.git,2021-08-30 16:17:57+00:00,,0,TheRadDani/digitales2,401409047,Verilog,digitales2,900,0,2021-08-31 23:50:42+00:00,[],None
221,https://github.com/DaRoastFTW/ECE369AryDavidRusty.git,2021-08-30 21:46:23+00:00,,0,DaRoastFTW/ECE369AryDavidRusty,401494588,Verilog,ECE369AryDavidRusty,516675,0,2022-09-15 02:03:17+00:00,[],None
222,https://github.com/ZeinaMohamed/Test.git,2021-09-13 01:56:50+00:00,,0,ZeinaMohamed/Test,405801174,Verilog,Test,1,0,2021-09-13 02:06:06+00:00,[],None
223,https://github.com/aprillzzz/GATE-LEVEL.git,2021-09-16 11:09:02+00:00,,0,aprillzzz/GATE-LEVEL,407131966,Verilog,GATE-LEVEL,3,0,2021-09-22 07:14:42+00:00,[],None
224,https://github.com/Ashutosh-Rao/DEC-Code-32-bit-Mini-Project.git,2021-08-29 14:05:30+00:00,,0,Ashutosh-Rao/DEC-Code-32-bit-Mini-Project,401057059,Verilog,DEC-Code-32-bit-Mini-Project,14,0,2022-09-30 06:03:58+00:00,[],None
225,https://github.com/lilyli5924/745_assignment4.git,2021-08-27 21:17:16+00:00,,0,lilyli5924/745_assignment4,400637113,Verilog,745_assignment4,649,0,2021-08-27 21:18:05+00:00,[],None
226,https://github.com/Mohamedkh30/8-bit-counter.git,2021-08-24 11:34:50+00:00,,0,Mohamedkh30/8-bit-counter,399441364,Verilog,8-bit-counter,56,0,2021-08-24 16:36:13+00:00,[],None
227,https://github.com/ashukumar1997/Counter-FPGA.git,2021-08-27 12:23:36+00:00,"Synthesised,Implemented and bit stream generation of 4-bit upcounter was done using an FPGA board - Nexys A7. Result of board was visible in ILA.",0,ashukumar1997/Counter-FPGA,400500549,Verilog,Counter-FPGA,1744,0,2021-08-27 12:58:20+00:00,[],None
228,https://github.com/dchaparroj/Disinfection-Chamber-Project-Digital-Electronics-I.git,2021-08-27 04:07:31+00:00,,0,dchaparroj/Disinfection-Chamber-Project-Digital-Electronics-I,400383886,Verilog,Disinfection-Chamber-Project-Digital-Electronics-I,11603,0,2023-11-02 15:38:55+00:00,[],None
229,https://github.com/Feetly/EDL-Speech-with-FPGA.git,2021-08-27 04:29:21+00:00,Course Project,0,Feetly/EDL-Speech-with-FPGA,400387843,Verilog,EDL-Speech-with-FPGA,16547,0,2021-10-18 16:32:08+00:00,[],None
230,https://github.com/AshWije/Verilog-For-Digital-Logic.git,2021-08-22 21:16:20+00:00,,0,AshWije/Verilog-For-Digital-Logic,398903010,Verilog,Verilog-For-Digital-Logic,24,0,2021-08-22 22:36:36+00:00,[],None
231,https://github.com/rykovv/DE10-Lite-lab1.git,2021-09-08 02:37:01+00:00,,0,rykovv/DE10-Lite-lab1,404187314,Verilog,DE10-Lite-lab1,19,0,2021-09-08 02:41:16+00:00,[],None
232,https://github.com/genie-earth/Verilog_HDL.git,2021-09-08 12:02:58+00:00,Verilog HDL Basic,1,genie-earth/Verilog_HDL,404331406,Verilog,Verilog_HDL,727,0,2021-09-09 03:42:13+00:00,[],None
233,https://github.com/Computer-Architecture-I-UIS/workshop_risc-v_assembly-leal-centeno.git,2021-09-08 23:56:41+00:00,workshop_risc-v_assembly-leal-centeno created by GitHub Classroom,2,Computer-Architecture-I-UIS/workshop_risc-v_assembly-leal-centeno,404529428,Verilog,workshop_risc-v_assembly-leal-centeno,17610,0,2022-01-26 20:51:18+00:00,[],None
234,https://github.com/VELIDIPRADEEPKUMAR/DECODE_IR.git,2021-09-10 03:56:35+00:00,This file contains verilog hdl code for the circuit which decode the NEC pulse distance encoded signal ,1,VELIDIPRADEEPKUMAR/DECODE_IR,404950184,Verilog,DECODE_IR,778,0,2022-06-11 18:04:09+00:00,[],None
235,https://github.com/shkatebi97/AudioSpectrumVisualizer.git,2021-09-10 12:35:58+00:00,,0,shkatebi97/AudioSpectrumVisualizer,405075185,Verilog,AudioSpectrumVisualizer,60,0,2021-09-10 12:36:17+00:00,[],None
236,https://github.com/DRbean264/ECE550-Project.git,2021-09-10 17:18:57+00:00,,0,DRbean264/ECE550-Project,405159146,Verilog,ECE550-Project,12,0,2021-09-24 02:55:10+00:00,[],None
237,https://github.com/ianbig/ece550-processor.git,2021-09-11 19:13:06+00:00,This is the git repository for ece550 project,1,ianbig/ece550-processor,405463238,Verilog,ece550-processor,36,0,2021-09-23 19:09:22+00:00,[],None
238,https://github.com/khushia2/PACMAN.git,2021-09-13 00:20:44+00:00,Implementation of the game Pac-Man on FPGA DE10-Lite using SystemVerilog,0,khushia2/PACMAN,405783859,Verilog,PACMAN,1360,0,2021-09-13 05:20:19+00:00,[],None
239,https://github.com/00anshjain/CPU-Design-Simulation.git,2021-09-13 19:48:59+00:00,CPU design and simulation using TKGate,0,00anshjain/CPU-Design-Simulation,406108906,Verilog,CPU-Design-Simulation,540,0,2021-09-13 20:08:00+00:00,[],None
240,https://github.com/PrateekChauhan26/Vending_Machine.git,2021-09-13 09:41:47+00:00,"Vending Machine is a soft drink dispensor machine that dispenses drink based on the amount deposited in the machine. It accepts all the coins ie: Nickel(5 cents), Dime(10 cents), Quarter(25 cents). Till it recieves 40 cents it will not dispense anything. After it has recieved 40 cents it will dispense a softdrink.",0,PrateekChauhan26/Vending_Machine,405914314,Verilog,Vending_Machine,4,0,2021-09-13 09:54:03+00:00,[],None
241,https://github.com/t-geon/MultiCycle.git,2021-08-20 04:30:18+00:00,,0,t-geon/MultiCycle,398154868,Verilog,MultiCycle,751,0,2023-01-28 00:56:57+00:00,[],None
242,https://github.com/hsinyang0816/Computer-architecture-HW4.git,2021-08-17 07:50:08+00:00,,0,hsinyang0816/Computer-architecture-HW4,397158968,Verilog,Computer-architecture-HW4,1458,0,2021-08-17 07:50:56+00:00,[],None
243,https://github.com/MFJI/FPQNet.git,2021-08-19 13:54:46+00:00,,0,MFJI/FPQNet,397960824,Verilog,FPQNet,59,0,2023-09-07 15:10:10+00:00,[],None
244,https://github.com/madhur19171/SuperScalarRISCV.git,2021-08-16 10:34:48+00:00,Design of superscalar RISC-V processor in verilog,0,madhur19171/SuperScalarRISCV,396744018,Verilog,SuperScalarRISCV,25,0,2022-12-04 13:21:18+00:00,[],None
245,https://github.com/Priyanka-Banerjee-27/LUT_Optimization.git,2021-08-20 16:34:32+00:00,,0,Priyanka-Banerjee-27/LUT_Optimization,398339533,Verilog,LUT_Optimization,3,0,2021-08-20 17:08:08+00:00,[],None
246,https://github.com/guyrupt/Pipelined-CPU.git,2021-08-22 06:44:53+00:00,,0,guyrupt/Pipelined-CPU,398733013,Verilog,Pipelined-CPU,2100,0,2021-09-28 04:42:17+00:00,[],None
247,https://github.com/MuhammedImdaad/multi-core_processor.git,2021-08-18 16:21:19+00:00,,0,MuhammedImdaad/multi-core_processor,397665462,Verilog,multi-core_processor,15,0,2021-08-19 06:35:10+00:00,[],None
248,https://github.com/Dev-verilog/Router_1-by-3_in_verilog-HDL.git,2021-08-17 16:49:33+00:00,,0,Dev-verilog/Router_1-by-3_in_verilog-HDL,397328557,Verilog,Router_1-by-3_in_verilog-HDL,178,0,2021-08-17 17:25:53+00:00,[],None
249,https://github.com/Dhanraj98/Dadda-Multiplier.git,2021-08-15 18:10:16+00:00,,0,Dhanraj98/Dadda-Multiplier,396445433,Verilog,Dadda-Multiplier,9,0,2021-08-23 15:58:32+00:00,[],None
250,https://github.com/naimulhq/RISC-V-Computer.git,2021-08-19 03:11:48+00:00,Creating a RISC-V Computer from Scratch,0,naimulhq/RISC-V-Computer,397800968,Verilog,RISC-V-Computer,103,0,2021-09-16 23:11:34+00:00,[],None
251,https://github.com/avneetsag/full-adder.git,2021-09-03 03:51:24+00:00,,0,avneetsag/full-adder,402639513,Verilog,full-adder,2,0,2021-09-03 03:51:52+00:00,[],None
252,https://github.com/juansefabi/FPGAInit.git,2021-09-07 19:50:09+00:00,Primeros pasos con EDU CIAA FPGA,0,juansefabi/FPGAInit,404104630,Verilog,FPGAInit,3,0,2021-09-07 23:09:57+00:00,[],None
253,https://github.com/KeonHee0513/CapstoneDesign.git,2021-09-06 09:08:54+00:00,CapstoneDesign,1,KeonHee0513/CapstoneDesign,403556211,Verilog,CapstoneDesign,22,0,2021-10-26 07:59:38+00:00,[],None
254,https://github.com/kaifeng-yu16/duke-ece550.git,2021-09-10 19:20:33+00:00,,0,kaifeng-yu16/duke-ece550,405190005,Verilog,duke-ece550,5971,0,2022-09-09 01:22:10+00:00,[],None
255,https://github.com/Freekick1704/ECE550D_Project.git,2021-09-11 18:05:11+00:00,,0,Freekick1704/ECE550D_Project,405449263,Verilog,ECE550D_Project,337,0,2021-11-19 04:52:29+00:00,[],None
256,https://github.com/HasinduKariyawasam/ADSBusDesign.git,2021-08-15 20:08:17+00:00,Custom Bus design project,0,HasinduKariyawasam/ADSBusDesign,396479620,Verilog,ADSBusDesign,1125,0,2022-03-01 19:10:28+00:00,[],None
257,https://github.com/ArthikRajBJain/CPUArchitecture.git,2021-08-16 11:17:59+00:00,,0,ArthikRajBJain/CPUArchitecture,396759652,Verilog,CPUArchitecture,1269,0,2021-08-17 14:41:32+00:00,[],None
258,https://github.com/BZBZZBZB/HDLbits.git,2021-08-17 08:35:53+00:00,HDLbits Answer,0,BZBZZBZB/HDLbits,397173423,Verilog,HDLbits,48,0,2021-08-18 02:44:25+00:00,[],None
259,https://github.com/str3lyx/3HA02.git,2021-09-05 08:17:56+00:00,Stop watch,0,str3lyx/3HA02,403252734,Verilog,3HA02,4,0,2023-06-11 12:09:26+00:00,[],None
260,https://github.com/mfkiwl/DLFI-HW-ACC.git,2021-09-03 18:54:50+00:00,H/W Accelerator for Deep-learning-based frame interpolation ,0,mfkiwl/DLFI-HW-ACC,402870587,,DLFI-HW-ACC,1673,0,2022-03-04 00:38:39+00:00,[],None
261,https://github.com/xxxbano/DE10_nano_MyFirstFPGA.git,2021-09-08 21:14:26+00:00,DE10 Nano tutorial - My First FPGA,0,xxxbano/DE10_nano_MyFirstFPGA,404497413,Verilog,DE10_nano_MyFirstFPGA,3466,0,2021-09-08 22:20:11+00:00,[],None
262,https://github.com/Satamnigam/Verilog_Xilinx_ise14.7.git,2021-09-17 19:49:01+00:00,,2,Satamnigam/Verilog_Xilinx_ise14.7,407662366,Verilog,Verilog_Xilinx_ise14.7,657,0,2021-09-17 20:45:51+00:00,[],None
263,https://github.com/K-Suneel-kumar/Vending-Machine.git,2021-08-20 15:08:07+00:00,,0,K-Suneel-kumar/Vending-Machine,398315070,Verilog,Vending-Machine,165,0,2021-08-20 15:28:30+00:00,[],None
264,https://github.com/taleman1997/coachip.git,2021-08-23 02:49:35+00:00,IC frontend design study,1,taleman1997/coachip,398954718,Verilog,coachip,23,0,2021-08-23 02:57:14+00:00,[],None
265,https://github.com/shivaniraochepuri21/EmbeddedHardwareDesign-Verilog.git,2021-08-24 22:19:17+00:00,,0,shivaniraochepuri21/EmbeddedHardwareDesign-Verilog,399619087,Verilog,EmbeddedHardwareDesign-Verilog,557,0,2021-08-24 22:39:40+00:00,[],None
266,https://github.com/usman1515/Trigonometric-Function-Calculator-in-Double-FPU.git,2021-08-20 20:22:51+00:00,,0,usman1515/Trigonometric-Function-Calculator-in-Double-FPU,398392018,Verilog,Trigonometric-Function-Calculator-in-Double-FPU,85,0,2021-11-06 11:59:22+00:00,[],https://api.github.com/licenses/gpl-3.0
267,https://github.com/VerLearn/16-16-fixed-point-multiplier-in-Verilog.git,2021-08-27 14:09:11+00:00,,0,VerLearn/16-16-fixed-point-multiplier-in-Verilog,400530074,Verilog,16-16-fixed-point-multiplier-in-Verilog,17,0,2021-08-28 11:33:36+00:00,[],https://api.github.com/licenses/gpl-3.0
268,https://github.com/Y-Galal/AES128.git,2021-09-06 20:07:12+00:00,Implementation of AES encryption using Verilog,0,Y-Galal/AES128,403746280,Verilog,AES128,268,0,2021-09-08 12:34:54+00:00,[],None
269,https://github.com/rvilca/FSM-Elevator.git,2021-09-08 12:11:05+00:00,FSM Elevator Controller using Verilog. which follows input from various floors. Set to open only for clock cycles after reaching the designated floor and receptive to resets for maintenance. Created using Quartus Prime Lite and Modelsim.,0,rvilca/FSM-Elevator,404334053,Verilog,FSM-Elevator,3,0,2021-09-13 02:24:07+00:00,[],None
270,https://github.com/DMPRO2021-Audio/FPGA.git,2021-09-09 10:55:52+00:00,,0,DMPRO2021-Audio/FPGA,404686273,Verilog,FPGA,597,0,2021-11-24 14:16:35+00:00,[],https://api.github.com/licenses/mit
271,https://github.com/AmiteshBadkul/fpga-lab.git,2021-09-10 15:23:42+00:00,"This repo contains my attempt at the lab work of the course ""EEE F348 - FPGA Based System Design"". The code has been written in Verilog and the simulation, RTL synthesises, Implementation and bit stream generation is done on Xilinx Vivado 2018.2",2,AmiteshBadkul/fpga-lab,405125629,Verilog,fpga-lab,338,0,2021-12-14 05:51:46+00:00,[],https://api.github.com/licenses/mit
272,https://github.com/teknoman117/m68k-fpga-bridge.git,2021-09-15 03:21:03+00:00,Metaproject for organizing M68K to FPGA bridge project,0,teknoman117/m68k-fpga-bridge,406599204,Verilog,m68k-fpga-bridge,480,0,2021-09-19 03:41:56+00:00,[],https://api.github.com/licenses/mpl-2.0
273,https://github.com/marronjo/verilog-fpga.git,2021-09-15 14:40:17+00:00,,0,marronjo/verilog-fpga,406805523,Verilog,verilog-fpga,34,0,2021-09-15 14:44:47+00:00,[],None
274,https://github.com/rf-andrey/multi-operation-circuit.git,2021-09-13 17:57:11+00:00,,0,rf-andrey/multi-operation-circuit,406076221,Verilog,multi-operation-circuit,41,0,2022-01-10 12:18:07+00:00,[],None
275,https://github.com/MiSTer-devel/Arcade-Jailbreak_MiSTer.git,2021-09-16 07:32:56+00:00,An FPGA implementation of JAILBREAK Arcade PCB for the MiSTer platform,5,MiSTer-devel/Arcade-Jailbreak_MiSTer,407067659,Verilog,Arcade-Jailbreak_MiSTer,8258,0,2021-12-26 02:49:37+00:00,[],https://api.github.com/licenses/gpl-3.0
276,https://github.com/aledimaggio/GitHubTest.git,2021-08-23 15:14:55+00:00,,0,aledimaggio/GitHubTest,399150813,Verilog,GitHubTest,1,0,2021-08-23 15:55:08+00:00,[],None
277,https://github.com/NostosArch/RISC-V.git,2021-08-30 10:41:50+00:00,5-Stage Pipelined RISCV-32I Processor,0,NostosArch/RISC-V,401306687,Verilog,RISC-V,1834,0,2022-01-22 14:19:49+00:00,[],None
278,https://github.com/jacksonska/microsoftp_clone.git,2021-08-31 04:03:12+00:00,Microsoft Paint Clone - Project for EE354 class during Spring 2020.,0,jacksonska/microsoftp_clone,401567592,Verilog,microsoftp_clone,12,0,2021-08-31 04:19:32+00:00,[],None
279,https://github.com/arthursl12/TP_OC2_.git,2021-09-01 15:44:49+00:00,,0,arthursl12/TP_OC2_,402116003,Verilog,TP_OC2_,2381,0,2021-09-05 01:11:05+00:00,[],None
280,https://github.com/SakaSerbia/FPGA-DE10-Standard-Blinking-LED.git,2021-08-17 13:55:28+00:00, First FPGA Project done on FPGA DE10-Standard. Simple blinking of LED. ,0,SakaSerbia/FPGA-DE10-Standard-Blinking-LED,397276270,Verilog,FPGA-DE10-Standard-Blinking-LED,33,0,2021-08-19 19:12:11+00:00,"['fpga', 'fpga-programming', 'leds', 'blink-led-project']",https://api.github.com/licenses/gpl-3.0
281,https://github.com/vanishka-tanwar/dvsd_cmp.git,2021-08-17 21:01:36+00:00,IP layout design of a 4 bit magnitude comparator,0,vanishka-tanwar/dvsd_cmp,397390398,Verilog,dvsd_cmp,3878,0,2021-08-17 21:43:48+00:00,[],None
282,https://github.com/zyzlxyzy/SATZ.git,2021-08-28 03:13:52+00:00,SAT-solver to compare RLL and Anti-SAT,0,zyzlxyzy/SATZ,400689843,Verilog,SATZ,143,0,2021-08-29 14:45:50+00:00,[],https://api.github.com/licenses/mpl-2.0
283,https://github.com/fxy314/bigcreation.git,2021-08-31 06:47:29+00:00,,0,fxy314/bigcreation,401601717,Verilog,bigcreation,5,0,2021-08-31 06:56:44+00:00,[],None
284,https://github.com/Rzfly/verilog_test.git,2021-08-28 14:17:38+00:00,verilog_quizs,0,Rzfly/verilog_test,400810302,Verilog,verilog_test,268,0,2021-12-24 02:43:30+00:00,[],None
285,https://github.com/AmanVerma-21/dvsdclaa4bit_1v8.git,2021-08-16 17:55:08+00:00,VLSI System Design project,0,AmanVerma-21/dvsdclaa4bit_1v8,396909207,Verilog,dvsdclaa4bit_1v8,2374,0,2024-04-07 21:32:41+00:00,[],None
286,https://github.com/MarizSabry/digital-diploma.git,2021-08-29 14:35:00+00:00,,0,MarizSabry/digital-diploma,401063945,Verilog,digital-diploma,130,0,2024-04-11 20:55:04+00:00,[],None
287,https://github.com/RajatBachhawat/COA-Lab-2021A.git,2021-08-25 10:44:28+00:00,"Course assignments for CS39001: Computer Organisation and Architecture Laboratory, IIT Kharagpur (Autumn 2021)",2,RajatBachhawat/COA-Lab-2021A,399782646,Verilog,COA-Lab-2021A,2272,0,2023-08-28 08:36:39+00:00,[],None
288,https://github.com/platinum95/OledDriver.git,2021-09-03 04:07:04+00:00,Driver for Digilent PMOD OLED in Verilog,0,platinum95/OledDriver,402642405,Verilog,OledDriver,46,0,2021-09-06 23:51:48+00:00,[],None
289,https://github.com/mit018/AC1.git,2021-08-21 07:13:38+00:00,Guias - Arquitetura de Computadores 1,0,mit018/AC1,398492508,Verilog,AC1,1654,0,2022-02-08 17:01:44+00:00,[],None
290,https://github.com/Christine1225/Hdlbits-Solutions.git,2021-08-20 08:26:31+00:00,,0,Christine1225/Hdlbits-Solutions,398207631,Verilog,Hdlbits-Solutions,3,0,2021-09-08 09:07:06+00:00,[],None
291,https://github.com/WingTechCorner/WTC_FPGA_Verilog_GoBoard.git,2021-08-19 21:51:31+00:00,WingTechCorner - Various GO-Board Lattice ICE40HX1K - verilog,0,WingTechCorner/WTC_FPGA_Verilog_GoBoard,398083106,Verilog,WTC_FPGA_Verilog_GoBoard,38,0,2021-08-20 02:47:25+00:00,[],None
292,https://github.com/25Aditya25/Pipelined-Floating-Point-Adder.git,2021-08-19 10:18:33+00:00,,0,25Aditya25/Pipelined-Floating-Point-Adder,397901363,Verilog,Pipelined-Floating-Point-Adder,5250,0,2021-08-19 12:05:45+00:00,[],None
293,https://github.com/rohitkale208/pipelined-risc-processor.git,2021-08-19 18:28:06+00:00,,0,rohitkale208/pipelined-risc-processor,398038797,Verilog,pipelined-risc-processor,354,0,2021-08-19 18:36:16+00:00,[],None
294,https://github.com/elllusion/openlane-template-gcd.git,2021-08-19 17:53:06+00:00,,0,elllusion/openlane-template-gcd,398029919,Verilog,openlane-template-gcd,16,0,2021-08-19 18:20:21+00:00,[],None
295,https://github.com/sidhantp1906/4-bit-first-divider.git,2021-08-17 11:44:07+00:00,4 bit divider design using first divider algorithm,0,sidhantp1906/4-bit-first-divider,397233167,Verilog,4-bit-first-divider,385,0,2021-08-17 11:51:22+00:00,"['verilog', 'divider', 'digitaldesign', 'rtldesign']",https://api.github.com/licenses/apache-2.0
296,https://github.com/SakaSerbia/FPGA-DE10-Standard-Simple-Nios2-Project.git,2021-08-17 17:12:41+00:00,Designing a simple processor system on FPGA. This is demo project to test FPGA DE10-Standard and develop a simpe Nios2 app.,0,SakaSerbia/FPGA-DE10-Standard-Simple-Nios2-Project,397335065,Verilog,FPGA-DE10-Standard-Simple-Nios2-Project,1433,0,2021-08-19 19:11:54+00:00,"['fpga-soc', 'qsys', 'fpga-programming', 'basic-learning', 'nios-ii', 'nios2', 'fpga', 'verilog']",https://api.github.com/licenses/gpl-3.0
297,https://github.com/K10SHI/Data_Types.git,2021-08-23 21:37:55+00:00,,0,K10SHI/Data_Types,399254205,Verilog,Data_Types,8,0,2021-09-13 09:43:49+00:00,[],None
298,https://github.com/citrusn/ZX-J1.git,2021-08-22 12:27:38+00:00,ZX spec с процессором J1,1,citrusn/ZX-J1,398794295,Verilog,ZX-J1,3181,0,2021-10-29 08:55:19+00:00,[],None
299,https://github.com/ojedalf/FPGA.git,2021-09-18 19:05:07+00:00,,0,ojedalf/FPGA,407945405,Verilog,FPGA,23,0,2021-09-18 19:06:13+00:00,[],None
300,https://github.com/rykovv/DE10-Lite-lab3.git,2021-09-16 02:42:35+00:00,,0,rykovv/DE10-Lite-lab3,406994406,Verilog,DE10-Lite-lab3,28,0,2021-09-16 02:46:25+00:00,[],None
301,https://github.com/mecharri/DDA_Ejercicios.git,2021-09-17 16:22:04+00:00,Ejercicios del curso DDA,0,mecharri/DDA_Ejercicios,407607587,Verilog,DDA_Ejercicios,26384,0,2021-12-06 21:11:18+00:00,[],None
302,https://github.com/sebbk3/TP1-arquitectura.git,2021-09-14 19:49:45+00:00,,0,sebbk3/TP1-arquitectura,406502339,Verilog,TP1-arquitectura,1216,0,2021-09-20 12:13:13+00:00,[],None
303,https://github.com/EslamAsHhraf/Design-of-a-Randomizer.git,2021-09-14 14:47:52+00:00,,0,EslamAsHhraf/Design-of-a-Randomizer,406408179,Verilog,Design-of-a-Randomizer,174,0,2021-09-14 14:49:50+00:00,[],None
304,https://github.com/wwwite/RISC-V.git,2021-09-09 15:13:08+00:00,,0,wwwite/RISC-V,404769764,Verilog,RISC-V,56528,0,2021-09-09 15:14:31+00:00,[],https://api.github.com/licenses/apache-2.0
305,https://github.com/sharmaut/Above-Beyond.git,2021-09-15 04:49:07+00:00,,0,sharmaut/Above-Beyond,406617334,Verilog,Above-Beyond,1,0,2021-09-15 04:50:24+00:00,[],None
306,https://github.com/MichaelPate/EE4490-Homework.git,2021-09-18 19:12:35+00:00,,0,MichaelPate/EE4490-Homework,407946872,Verilog,EE4490-Homework,24542,0,2021-10-17 14:55:47+00:00,[],None
307,https://github.com/Pablo-Correa/TP_OC2.git,2021-08-23 15:00:31+00:00,,0,Pablo-Correa/TP_OC2,399145719,,TP_OC2,981,0,2021-09-02 12:22:20+00:00,[],None
308,https://github.com/mulirow/projeto-sd.git,2021-08-24 21:11:54+00:00,Repositório do segundo projeto de Sistemas Digitais 2020.2,0,mulirow/projeto-sd,399605866,Verilog,projeto-sd,23,0,2022-01-16 01:25:03+00:00,[],None
309,https://github.com/TKNopro/hardware_module.git,2021-08-19 05:41:25+00:00,some verilog and chisel practice,0,TKNopro/hardware_module,397829880,Verilog,hardware_module,3,0,2021-09-18 05:58:45+00:00,[],https://api.github.com/licenses/mit
310,https://github.com/tabaldii/Trabalho-Final---Sistemas-Digitais.git,2021-08-27 00:15:57+00:00,,0,tabaldii/Trabalho-Final---Sistemas-Digitais,400339826,Verilog,Trabalho-Final---Sistemas-Digitais,81,0,2021-09-17 18:31:43+00:00,[],None
311,https://github.com/yskoht/nand2tetris.git,2021-08-29 16:51:48+00:00,,0,yskoht/nand2tetris,401094138,Verilog,nand2tetris,403,0,2021-09-28 09:15:46+00:00,[],None
312,https://github.com/rishabhgupta1rg/Brent-kung-adder.git,2021-08-20 15:21:17+00:00,,0,rishabhgupta1rg/Brent-kung-adder,398318886,Verilog,Brent-kung-adder,82,0,2021-08-20 15:23:59+00:00,[],None
313,https://github.com/deepan19/RISC_MACHINE.git,2021-08-28 19:38:43+00:00,Lab Project on creating a simple RISC machine,0,deepan19/RISC_MACHINE,400876138,Verilog,RISC_MACHINE,35816,0,2021-08-28 19:43:03+00:00,[],None
314,https://github.com/marcos2307/ModuladorHW.git,2021-08-31 12:59:27+00:00,Modulador en HW para filtro multinivel,0,marcos2307/ModuladorHW,401704146,Verilog,ModuladorHW,354,0,2021-09-14 21:02:39+00:00,[],None
315,https://github.com/shubidiwoop/College-Projects.git,2021-09-06 11:26:12+00:00,Archive of codes of college projects - MIT 2016-2020,0,shubidiwoop/College-Projects,403596061,Verilog,College-Projects,1461,0,2023-08-22 17:08:31+00:00,[],None
316,https://github.com/ashutoshaks/COA-Laboratory-CS39001.git,2021-09-02 05:15:59+00:00,Assignments for the Computer Organization And Architecture Laboratory course,4,ashutoshaks/COA-Laboratory-CS39001,402298305,Verilog,COA-Laboratory-CS39001,23492,0,2021-12-25 06:42:22+00:00,[],None
317,https://github.com/KHermanUBB/caravelSonarOnChip.git,2021-09-01 21:54:09+00:00,,1,KHermanUBB/caravelSonarOnChip,402212876,Verilog,caravelSonarOnChip,44295,0,2022-01-11 00:27:51+00:00,[],https://api.github.com/licenses/apache-2.0
318,https://github.com/huanjing1218/IC_2017preliminary_graduate_DT.git,2021-09-18 11:12:15+00:00,Distance Transform,0,huanjing1218/IC_2017preliminary_graduate_DT,407838173,Verilog,IC_2017preliminary_graduate_DT,929,0,2021-09-19 11:35:24+00:00,[],None
319,https://github.com/KHU-sunggyu/Manycore.git,2021-09-09 08:26:55+00:00,,0,KHU-sunggyu/Manycore,404643956,Verilog,Manycore,248,0,2021-09-09 09:39:41+00:00,[],None
320,https://github.com/erdemkare/VSCPUProject.git,2021-09-11 12:59:03+00:00,,0,erdemkare/VSCPUProject,405379753,Verilog,VSCPUProject,6,0,2021-09-11 13:07:03+00:00,[],https://api.github.com/licenses/mit
321,https://github.com/gaurav-niranjan/CPU-Design-Simulation.git,2021-09-05 09:41:09+00:00,CPU design and simultion using TKGate,0,gaurav-niranjan/CPU-Design-Simulation,403269028,Verilog,CPU-Design-Simulation,558,0,2021-09-05 10:17:19+00:00,[],None
322,https://github.com/Vilanya/SIT329-Project.git,2021-09-04 02:34:26+00:00,,0,Vilanya/SIT329-Project,402946032,Verilog,SIT329-Project,16040,0,2021-10-09 02:12:29+00:00,[],None
323,https://github.com/evanvnguyen/8bit-UART-Tx.git,2021-09-09 11:36:37+00:00,,0,evanvnguyen/8bit-UART-Tx,404698130,Verilog,8bit-UART-Tx,28,0,2023-02-03 03:09:22+00:00,[],None
324,https://github.com/va1ery/clock_divider_to32.git,2021-09-04 10:41:10+00:00,,0,va1ery/clock_divider_to32,403029711,Verilog,clock_divider_to32,0,0,2021-09-04 10:41:25+00:00,[],None
325,https://github.com/ryankinney33/ece473.git,2021-09-04 16:06:44+00:00,,0,ryankinney33/ece473,403100087,Verilog,ece473,253,0,2023-09-25 16:53:09+00:00,[],None
326,https://github.com/Mithunjha/FPGA_MatrixMultiplication.git,2021-09-12 09:35:14+00:00,,0,Mithunjha/FPGA_MatrixMultiplication,405600811,Verilog,FPGA_MatrixMultiplication,5508,0,2021-10-16 08:24:07+00:00,[],None
327,https://github.com/chamathamarasinghe96/Single-Cycle-CPU-Implementation-with-a-Memory-Subsystem.git,2021-09-05 20:33:45+00:00,Designing of CPU with memory management including cache and memory for instructions and data to support a simple custom Instruction Set Architecture. Implementation has mainly done using Verilog HDL.,0,chamathamarasinghe96/Single-Cycle-CPU-Implementation-with-a-Memory-Subsystem,403407408,Verilog,Single-Cycle-CPU-Implementation-with-a-Memory-Subsystem,16,0,2021-09-06 11:09:38+00:00,"['co224', 'cpu', 'verilog-hdl', 'cache', 'memory', 'computer-architecture']",None
328,https://github.com/Fernando-Magnabosco/Trabalho---VHDL.git,2021-09-11 20:27:52+00:00,,0,Fernando-Magnabosco/Trabalho---VHDL,405476635,Verilog,Trabalho---VHDL,38247,0,2021-09-16 22:04:30+00:00,[],None
329,https://github.com/PaulZeroOne/Image_Processing_Using_FPGA.git,2021-08-20 06:00:40+00:00,,0,PaulZeroOne/Image_Processing_Using_FPGA,398171628,Verilog,Image_Processing_Using_FPGA,9,0,2021-08-20 06:07:08+00:00,[],None
330,https://github.com/BatBlob/Single-Cycle-RISC-V-Processor.git,2021-08-17 09:40:40+00:00,,0,BatBlob/Single-Cycle-RISC-V-Processor,397194688,Verilog,Single-Cycle-RISC-V-Processor,85,0,2021-08-17 09:41:06+00:00,[],https://api.github.com/licenses/mit
331,https://github.com/mhhai/Paper.git,2021-08-18 02:36:38+00:00,,0,mhhai/Paper,397450558,Verilog,Paper,746,0,2021-08-18 03:11:26+00:00,[],None
332,https://github.com/RojasMilo/Chisel_examples.git,2021-08-21 16:22:36+00:00,,0,RojasMilo/Chisel_examples,398604483,Verilog,Chisel_examples,26,0,2021-11-29 14:35:22+00:00,[],None
333,https://github.com/tastynoob/booth-muler.git,2021-08-21 14:10:23+00:00,the booth mulre designed by verilog,0,tastynoob/booth-muler,398574402,Verilog,booth-muler,1,0,2021-08-21 14:11:02+00:00,[],None
334,https://github.com/desxxxi/SYSTEM-VERILOG-PRACTICE.git,2021-08-23 04:09:41+00:00,CODES,0,desxxxi/SYSTEM-VERILOG-PRACTICE,398969476,Verilog,SYSTEM-VERILOG-PRACTICE,2,0,2021-09-23 01:43:30+00:00,[],None
335,https://github.com/danieljin1205/cpu8bitprocessor.git,2021-08-22 18:27:56+00:00,A complete 8 bit processor incorporating add/sub/addi/jump/sw/lw instructions in Verilog,0,danieljin1205/cpu8bitprocessor,398870956,Verilog,cpu8bitprocessor,138,0,2021-08-22 19:48:12+00:00,[],None
336,https://github.com/anurag-agrwal/Dadda-Multiplier.git,2021-08-21 07:57:29+00:00,,0,anurag-agrwal/Dadda-Multiplier,398500423,Verilog,Dadda-Multiplier,16,0,2021-08-21 07:59:53+00:00,[],None
337,https://github.com/parthjindal/COA-IITKGP.git,2021-08-24 12:52:26+00:00,"Repository for Computer Organization and Architecture Lab course offered at IIT Kharagpur, Autumn 2021",1,parthjindal/COA-IITKGP,399463744,Verilog,COA-IITKGP,2086,0,2023-02-28 12:03:11+00:00,[],https://api.github.com/licenses/mit
338,https://github.com/HCSSHC/UART.git,2021-08-24 07:18:05+00:00,verilog,0,HCSSHC/UART,399371710,Verilog,UART,10,0,2022-05-04 08:29:52+00:00,[],None
339,https://github.com/xujunxi/Reinforcement-Learning-Logic-Synthesis-Process-Optimization.git,2021-09-02 20:48:36+00:00,Reinforcement Learning using A2C and PPO,2,xujunxi/Reinforcement-Learning-Logic-Synthesis-Process-Optimization,402558970,Verilog,Reinforcement-Learning-Logic-Synthesis-Process-Optimization,13059,0,2021-09-03 01:54:18+00:00,[],None
340,https://github.com/MahmoudAbdelmawgoed/Viterbi-decoder.git,2021-09-02 05:16:57+00:00,,0,MahmoudAbdelmawgoed/Viterbi-decoder,402298493,Verilog,Viterbi-decoder,11,0,2021-09-02 06:05:50+00:00,[],None
341,https://github.com/avneetsag/FSM-.git,2021-09-03 03:37:12+00:00,,0,avneetsag/FSM-,402636838,Verilog,FSM-,2,0,2021-09-03 03:38:04+00:00,[],None
342,https://github.com/Super-Awesome-Organization/expt4.git,2021-09-17 16:56:58+00:00,,0,Super-Awesome-Organization/expt4,407617570,Verilog,expt4,65,0,2021-09-17 17:15:51+00:00,[],None
343,https://github.com/This-is-lwz/GIT.git,2021-09-18 07:26:29+00:00,,0,This-is-lwz/GIT,407789046,Verilog,GIT,8250,0,2021-09-26 03:16:30+00:00,[],None
344,https://github.com/zbigos/fpga-videostreamer.git,2021-09-17 17:51:27+00:00,,0,zbigos/fpga-videostreamer,407633082,Verilog,fpga-videostreamer,1959,0,2021-09-17 20:05:42+00:00,[],None
345,https://github.com/made-o/Arqui-2021-tp1.git,2021-09-12 21:38:31+00:00,Implementación en FPGA de ALU.,0,made-o/Arqui-2021-tp1,405758936,Verilog,Arqui-2021-tp1,16,0,2021-10-07 14:25:27+00:00,[],None
346,https://github.com/liannequach/Iterative-Divider.git,2021-09-13 05:07:48+00:00,,0,liannequach/Iterative-Divider,405839863,Verilog,Iterative-Divider,195,0,2021-09-13 05:09:01+00:00,[],None
347,https://github.com/K10SHI/GATES.git,2021-09-13 09:53:36+00:00,,0,K10SHI/GATES,405917943,Verilog,GATES,18,0,2021-09-17 02:28:02+00:00,[],None
348,https://github.com/good4Ya/tmp_75b_q1.git,2021-09-05 05:23:17+00:00,read temperature data from tmp_75b_q1 i2c device ,0,good4Ya/tmp_75b_q1,403222773,Verilog,tmp_75b_q1,6,0,2021-09-05 05:26:07+00:00,[],None
349,https://github.com/EnkanSakura/Verilog-Course.git,2021-09-11 00:08:48+00:00,,0,EnkanSakura/Verilog-Course,405242310,Verilog,Verilog-Course,93,0,2022-01-23 04:29:13+00:00,[],https://api.github.com/licenses/mit
350,https://github.com/KlaudiaKinga/Yoshi-Game.git,2021-09-14 15:24:54+00:00,,0,KlaudiaKinga/Yoshi-Game,406422000,Verilog,Yoshi-Game,13491,0,2021-09-15 21:12:24+00:00,[],None
351,https://github.com/sz958/cache.git,2021-08-23 08:40:39+00:00,四路组相连映射 直接相连映射,0,sz958/cache,399031741,Verilog,cache,1243,0,2021-08-23 08:47:38+00:00,[],None
352,https://github.com/imhcyx/auto-inc-counter.git,2021-08-23 08:21:30+00:00,,0,imhcyx/auto-inc-counter,399026439,Verilog,auto-inc-counter,2,0,2021-08-23 08:37:35+00:00,[],None
353,https://github.com/otooooooooooooooooo/calculator.git,2021-08-21 15:21:50+00:00,Calculator modules implemented in Verilog for FPGA boards,0,otooooooooooooooooo/calculator,398590822,Verilog,calculator,8,0,2021-08-21 15:32:56+00:00,[],None
354,https://github.com/pxdream/test.git,2021-08-16 09:22:59+00:00,test,0,pxdream/test,396716937,Verilog,test,0,0,2021-08-16 10:22:37+00:00,[],None
355,https://github.com/tahaShm/computer-architecture.git,2021-08-27 11:59:57+00:00,This repo consists of 5 computer architecture projects using MIPS architecture and Verilog Language,0,tahaShm/computer-architecture,400494137,Verilog,computer-architecture,20958,0,2021-08-27 12:09:10+00:00,"['mips', 'verilog', 'computer-architecture']",None
356,https://github.com/ariannaliu/MIPSmicroprocessor.git,2021-08-26 10:06:28+00:00,a simplified pipelined MIPS microprocessor using HDL,0,ariannaliu/MIPSmicroprocessor,400123540,Verilog,MIPSmicroprocessor,1517,0,2021-08-26 10:11:21+00:00,[],None
357,https://github.com/prannoypara/Asynchronous-FIFO.git,2021-08-19 17:18:03+00:00,,0,prannoypara/Asynchronous-FIFO,398020795,Verilog,Asynchronous-FIFO,62,0,2021-08-20 15:52:08+00:00,[],None
358,https://github.com/VELIDIPRADEEPKUMAR/UART_RTL_VERILOG.git,2021-08-18 04:54:37+00:00,This project aims to design hardware in VERILOG RTL for UART communication protocol and implement it in CYCLONE IV FPGA.,0,VELIDIPRADEEPKUMAR/UART_RTL_VERILOG,397476802,Verilog,UART_RTL_VERILOG,1228,0,2023-08-31 10:57:05+00:00,[],None
359,https://github.com/henryzhang1996/hardware-arithmetic.git,2021-08-24 01:26:25+00:00,,0,henryzhang1996/hardware-arithmetic,399296865,Verilog,hardware-arithmetic,409,0,2021-09-02 06:32:13+00:00,[],None
360,https://github.com/sanathNU/Verilog-Projects.git,2021-08-25 03:16:42+00:00,Just a public repo containing some the projects in verilog. Specially to be opened using Vivado Software,1,sanathNU/Verilog-Projects,399675351,Verilog,Verilog-Projects,15995,0,2023-10-23 13:44:12+00:00,[],None
361,https://github.com/anurag-agrwal/Brent-Kung-Adder.git,2021-08-21 07:50:58+00:00,,0,anurag-agrwal/Brent-Kung-Adder,398499259,Verilog,Brent-Kung-Adder,14,0,2021-10-22 15:53:21+00:00,[],None
362,https://github.com/shihyuhuang/Timing-Circuit-Designs-and-Their-Applications.git,2021-08-21 08:57:54+00:00,NTHU 10920 時序電路設計及應用 黃錫瑜,0,shihyuhuang/Timing-Circuit-Designs-and-Their-Applications,398511739,Verilog,Timing-Circuit-Designs-and-Their-Applications,14768,0,2022-03-15 03:58:45+00:00,[],None
363,https://github.com/LinHeLurking/mips_cpu.git,2021-09-16 09:32:15+00:00,5 level pipelined MIPS CPU,0,LinHeLurking/mips_cpu,407104397,Verilog,mips_cpu,318,0,2021-09-16 09:32:46+00:00,[],None
364,https://github.com/IfrahIshtiaq/MIPS-32bit-Processor.git,2021-09-15 19:37:13+00:00,MIPS 32-bits Single Cycle Data Path using Verilog HDL,0,IfrahIshtiaq/MIPS-32bit-Processor,406902674,Verilog,MIPS-32bit-Processor,182,0,2021-09-15 20:11:17+00:00,[],None
365,https://github.com/503976632/handshakee.git,2021-09-06 08:07:42+00:00,,0,503976632/handshakee,403537695,Verilog,handshakee,270,0,2021-09-09 08:08:16+00:00,[],None
366,https://github.com/Subinsdev/E--Yantra-Sankatmochan-Bot-.git,2021-09-06 17:20:42+00:00,This repo Contains all the works for building Sankatmochan bot ,1,Subinsdev/E--Yantra-Sankatmochan-Bot-,403705185,,E--Yantra-Sankatmochan-Bot-,50259,0,2021-12-06 18:09:45+00:00,[],https://api.github.com/licenses/mit
367,https://github.com/ClaytonJPayne/combo_lock.git,2021-09-07 17:16:47+00:00,Verilog description and test bench for a simple programmable combination lock.,0,ClaytonJPayne/combo_lock,404062744,Verilog,combo_lock,8,0,2021-09-12 04:04:32+00:00,[],None
368,https://github.com/polys18/Stuff.git,2021-09-09 12:51:39+00:00,,0,polys18/Stuff,404720399,Verilog,Stuff,174,0,2021-12-16 13:24:29+00:00,[],None
369,https://github.com/AlexNecakov/WhackAMole.git,2021-09-10 01:50:25+00:00,Whack-A-Mole game implemented in Verilog for Xilinx FPGAs.,0,AlexNecakov/WhackAMole,404923939,Verilog,WhackAMole,487,0,2022-05-09 01:39:39+00:00,[],None
370,https://github.com/flpostolache/Automat-suc.git,2021-08-23 19:21:16+00:00,,0,flpostolache/Automat-suc,399223295,Verilog,Automat-suc,2,0,2021-08-23 19:22:04+00:00,[],None
371,https://github.com/lokeshjaliminche/sha256_verilog_OPS_Count.git,2021-09-12 05:13:25+00:00,,0,lokeshjaliminche/sha256_verilog_OPS_Count,405552945,Verilog,sha256_verilog_OPS_Count,10,0,2021-09-13 20:52:08+00:00,[],None
372,https://github.com/n4m4g/verilog_examples.git,2021-09-12 12:40:29+00:00,,0,n4m4g/verilog_examples,405638192,Verilog,verilog_examples,8,0,2021-11-14 12:34:50+00:00,[],https://api.github.com/licenses/mit
373,https://github.com/liannequach/-Circuit-Equivalence-Checking.git,2021-09-13 05:09:38+00:00,,0,liannequach/-Circuit-Equivalence-Checking,405840236,Verilog,-Circuit-Equivalence-Checking,245,0,2021-09-13 05:12:25+00:00,[],None
374,https://github.com/ddilarakarakas/32-Bit-Mips-Processor-Verilog.git,2021-08-18 11:41:00+00:00,,0,ddilarakarakas/32-Bit-Mips-Processor-Verilog,397579505,Verilog,32-Bit-Mips-Processor-Verilog,2429,0,2023-04-26 13:31:48+00:00,[],https://api.github.com/licenses/mit
375,https://github.com/Mostafa-Hassanien/Single-Cycle-MIPS-Processor-.git,2021-09-15 16:38:28+00:00,"The aim of this project is to design a 32-bit single-cycle MIPS processor for RISC (Reduced Instruction Set Computer) processor. The MIPS processor was designed using MIPS ISA (Instruction Set Architecture) and divided into two parts: the datapath unit, and the control unit. Verilog HDL language to design hardware modeling is used on ModelSim tool. Keywords: MIPS, RISC, ISA, datapath, Verilog.",0,Mostafa-Hassanien/Single-Cycle-MIPS-Processor-,406849235,Verilog,Single-Cycle-MIPS-Processor-,27,0,2021-10-02 22:01:44+00:00,[],None
376,https://github.com/PrasadGholve/IITB-RISC-Pipelined-Processor.git,2021-08-19 14:22:26+00:00,,0,PrasadGholve/IITB-RISC-Pipelined-Processor,397969811,Verilog,IITB-RISC-Pipelined-Processor,25,0,2021-08-19 14:30:16+00:00,[],None
377,https://github.com/satyamprasad27/16x16_Dadda_Multiplier.git,2021-08-19 11:24:44+00:00,Brent_Kung_Adder used for final addition stage,0,satyamprasad27/16x16_Dadda_Multiplier,397918643,Verilog,16x16_Dadda_Multiplier,9,0,2021-08-20 02:38:20+00:00,[],None
378,https://github.com/QianpengLi577/ieee754-Single-precision-multiplier.git,2021-08-20 02:40:26+00:00,,1,QianpengLi577/ieee754-Single-precision-multiplier,398134361,Verilog,ieee754-Single-precision-multiplier,143,0,2021-08-20 02:41:59+00:00,[],None
379,https://github.com/Manvendra96/LUT-optimization.git,2021-08-20 13:14:31+00:00,For memory based computations,0,Manvendra96/LUT-optimization,398281540,Verilog,LUT-optimization,7,0,2021-08-20 13:20:45+00:00,[],None
380,https://github.com/wges9405/Harword_Design_Lab._FinalProject.git,2021-09-07 11:59:07+00:00,,0,wges9405/Harword_Design_Lab._FinalProject,403961044,Verilog,Harword_Design_Lab._FinalProject,1134,0,2021-09-07 12:14:37+00:00,[],None
381,https://github.com/vinayakagarwal43/MIPS32.git,2021-09-09 18:25:31+00:00,MIPS32 (RISC) based processor in verilog.,0,vinayakagarwal43/MIPS32,404828684,Verilog,MIPS32,4,0,2021-09-09 18:26:12+00:00,[],None
382,https://github.com/ZhouSJ5292/ECE550.git,2021-09-10 15:13:03+00:00,,0,ZhouSJ5292/ECE550,405122397,Verilog,ECE550,94,0,2021-10-27 03:20:59+00:00,[],None
383,https://github.com/nicoloporcu/FPGA_Pong.git,2021-09-17 09:02:11+00:00,A Pong Project for the artix 7 FPGA Board.,0,nicoloporcu/FPGA_Pong,407474475,Verilog,FPGA_Pong,13,0,2021-09-17 09:16:48+00:00,[],None
384,https://github.com/jason1440049328/Sludge-Runner.git,2021-09-17 21:33:30+00:00,,0,jason1440049328/Sludge-Runner,407684859,Verilog,Sludge-Runner,1348,0,2021-09-17 22:30:06+00:00,[],None
385,https://github.com/Bitil8747/I2C_interface.git,2021-09-16 08:28:28+00:00,"I2C is a two-wire serial interface developed by Philips. The data transfer protocol on the I2C bus is designed in such a way as to guarantee reliable and high-quality data reception / transmission. When transferring data, one device is the ""Master"", which initiates data transfer and generates synchronization signals. Another ""Slave"" device that can only start data transfer on a command from the master.",1,Bitil8747/I2C_interface,407085046,Verilog,I2C_interface,82,0,2021-09-16 08:32:42+00:00,[],None
386,https://github.com/DanahAldahiry/Single-Cycle-Processor-MIPS-21bit.git,2021-09-04 18:01:49+00:00,,0,DanahAldahiry/Single-Cycle-Processor-MIPS-21bit,403123916,Verilog,Single-Cycle-Processor-MIPS-21bit,11,0,2021-09-04 18:09:38+00:00,[],None
387,https://github.com/WannaMinKhant/fpga_verilog.git,2021-09-11 19:35:59+00:00,This is for basic verilog code of FPGA,0,WannaMinKhant/fpga_verilog,405467351,Verilog,fpga_verilog,4,0,2021-09-11 19:37:41+00:00,[],https://api.github.com/licenses/mit
388,https://github.com/SamBaker101/MAX-10-Lite_Audio_Processing.git,2021-09-12 00:26:14+00:00,Digital audio processing using Max-10 FPGA,0,SamBaker101/MAX-10-Lite_Audio_Processing,405511273,Verilog,MAX-10-Lite_Audio_Processing,29362,0,2021-09-15 16:42:52+00:00,[],None
389,https://github.com/macagauna117/TP1_Arquitectura.git,2021-09-13 17:13:52+00:00,,0,macagauna117/TP1_Arquitectura,406062959,Verilog,TP1_Arquitectura,17,0,2021-10-20 02:33:52+00:00,[],None
390,https://github.com/kuopinghsu/riscv_fpga.git,2021-09-09 00:58:03+00:00,RISCV for Embedfire mini,0,kuopinghsu/riscv_fpga,404540830,Verilog,riscv_fpga,7378,0,2021-09-09 12:17:15+00:00,[],None
391,https://github.com/mfkiwl/RV64_ysyx.git,2021-09-05 12:38:46+00:00,ysyx project : risc-v 64 cpu core ,0,mfkiwl/RV64_ysyx,403304828,,RV64_ysyx,3434,0,2021-09-14 03:44:53+00:00,[],None
392,https://github.com/dnjayasinghe/PoSq.git,2021-09-07 06:52:02+00:00,This repo consists of PoSq Ring Oscilloators written in verilog,0,dnjayasinghe/PoSq,403872929,Verilog,PoSq,3,0,2021-09-22 10:53:47+00:00,[],https://api.github.com/licenses/mit
393,https://github.com/longvietchu/Pipelined-RISC-V.git,2021-08-15 15:31:50+00:00,🔌 Project for Computer Architecture course,0,longvietchu/Pipelined-RISC-V,396397956,Verilog,Pipelined-RISC-V,5,0,2021-08-15 15:58:16+00:00,[],None
394,https://github.com/HongDeJheng/FPGA-Implementation.git,2021-08-25 16:48:29+00:00,"Apr. 2016 - June 2016, Logic Design Laboratory (Undergraduate Level)",0,HongDeJheng/FPGA-Implementation,399892227,Verilog,FPGA-Implementation,788,0,2021-08-25 16:49:19+00:00,[],None
395,https://github.com/chand58/Router_1-by-3-in-verilog_-HDL.git,2021-08-25 07:48:31+00:00,,0,chand58/Router_1-by-3-in-verilog_-HDL,399734513,Verilog,Router_1-by-3-in-verilog_-HDL,176,0,2021-08-25 07:54:12+00:00,[],None
396,https://github.com/CallumMbedded95/FPGA_Tests.git,2021-08-23 10:42:48+00:00,,0,CallumMbedded95/FPGA_Tests,399064941,Verilog,FPGA_Tests,1,0,2021-08-23 10:45:20+00:00,[],None
397,https://github.com/JeffreySamuel/FPGA-FPGA_Communication_using_USB2.0-.git,2021-08-23 17:09:59+00:00,This project uses a universal serial bus (USB) transceiver with a serial interface engine (SIE) and an asynchronous ﬁrst-in ﬁrst-out (FIFO) queue for packet transformation and data transmission in FPGA to FPGA communication.,1,JeffreySamuel/FPGA-FPGA_Communication_using_USB2.0-,399186483,Verilog,FPGA-FPGA_Communication_using_USB2.0-,43,0,2021-08-23 18:32:27+00:00,[],None
398,https://github.com/scottohair/pipelined_mips.git,2021-08-26 22:02:39+00:00,Pipelined MIPS Processor,0,scottohair/pipelined_mips,400316900,Verilog,pipelined_mips,306,0,2021-08-26 22:07:15+00:00,[],None
399,https://github.com/kovagoz/fpga-ball.git,2021-08-22 14:07:35+00:00,Bouncing ball on a VGA screen,0,kovagoz/fpga-ball,398815205,Verilog,fpga-ball,8,0,2021-12-31 09:24:56+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
400,https://github.com/zifeiyuing/vs_git.git,2021-08-23 12:40:04+00:00,VS代码git目录,0,zifeiyuing/vs_git,399098793,Verilog,vs_git,4,0,2021-08-24 03:18:50+00:00,[],None
401,https://github.com/davidli1515/NEDA_project-in-HPC-course.git,2021-09-01 17:39:10+00:00,,0,davidli1515/NEDA_project-in-HPC-course,402150206,Verilog,NEDA_project-in-HPC-course,12,0,2021-09-01 17:42:55+00:00,[],None
402,https://github.com/Akshitha86/Verilog_Adders.git,2021-08-29 18:16:31+00:00,Computer Organization and Architecture Laboratory : Lab–1,0,Akshitha86/Verilog_Adders,401111612,Verilog,Verilog_Adders,267,0,2021-11-19 08:20:01+00:00,[],None
403,https://github.com/fhetrat/v6502R1.git,2021-09-03 07:23:58+00:00,,0,fhetrat/v6502R1,402683253,Verilog,v6502R1,59,0,2021-09-07 00:01:48+00:00,[],https://api.github.com/licenses/gpl-3.0
404,https://github.com/hwstatic/MyPipelineCPU.git,2021-08-31 15:12:46+00:00,,1,hwstatic/MyPipelineCPU,401748443,Verilog,MyPipelineCPU,136,0,2021-09-01 15:09:53+00:00,[],None
405,https://github.com/kovagoz/fpga-bouncing-ball.git,2021-08-30 21:50:55+00:00,Yet another bouncing ball on a VGA screen.,0,kovagoz/fpga-bouncing-ball,401495471,Verilog,fpga-bouncing-ball,15,0,2021-12-31 09:24:39+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
406,https://github.com/yezeo/Verilog.git,2021-09-15 04:34:11+00:00,끄적끄적..,0,yezeo/Verilog,406614330,Verilog,Verilog,2,0,2021-09-24 02:11:44+00:00,[],None
407,https://github.com/devthedevil/Hardware-lab.git,2021-09-08 18:10:36+00:00,,0,devthedevil/Hardware-lab,404449299,Verilog,Hardware-lab,37,0,2021-09-08 18:15:11+00:00,[],None
408,https://github.com/NARAYAN1201/MIPS32-Processor.git,2021-08-25 17:13:39+00:00,,0,NARAYAN1201/MIPS32-Processor,399899283,Verilog,MIPS32-Processor,73,0,2021-08-25 17:29:08+00:00,[],None
409,https://github.com/Robersonybr731/FPGACar.git,2021-09-07 04:16:14+00:00,,0,Robersonybr731/FPGACar,403837471,Verilog,FPGACar,43653,0,2021-09-08 07:16:03+00:00,[],None
410,https://github.com/veganweightlifter/verilogpractice.git,2021-09-05 00:10:16+00:00,,0,veganweightlifter/verilogpractice,403179973,Verilog,verilogpractice,6,0,2021-09-05 00:10:54+00:00,[],None
411,https://github.com/heshamkhaledd/UART-Module.git,2021-09-04 19:13:59+00:00,,0,heshamkhaledd/UART-Module,403137615,Verilog,UART-Module,11,0,2021-09-08 21:15:31+00:00,[],None
412,https://github.com/Bharatcs/UART-Tx-module-Verilog.git,2021-09-06 06:54:53+00:00,UART-TX  Verilog module for serial communication.,0,Bharatcs/UART-Tx-module-Verilog,403517062,Verilog,UART-Tx-module-Verilog,9,0,2021-09-06 07:25:14+00:00,[],https://api.github.com/licenses/apache-2.0
413,https://github.com/KimDongHyub/Microprocessor.git,2021-08-29 11:00:18+00:00,인하대학교 전공필수 과목 (FPGA를 이용한 디지털 시스템 설계) Final Project,0,KimDongHyub/Microprocessor,401019135,Verilog,Microprocessor,32,0,2022-01-27 11:04:34+00:00,"['fpga', 'verilog', 'computer-architecture']",None
414,https://github.com/heshamkhaledd/SPI-Module.git,2021-09-06 18:41:42+00:00,,0,heshamkhaledd/SPI-Module,403726000,Verilog,SPI-Module,10,0,2021-09-08 17:17:45+00:00,[],None
415,https://github.com/seong-wooo/Electrical-Computer-Design-Laboratory2.git,2021-09-06 17:42:28+00:00,전자전기컴퓨터설계실험2,0,seong-wooo/Electrical-Computer-Design-Laboratory2,403710902,Verilog,Electrical-Computer-Design-Laboratory2,22,0,2021-09-16 15:44:57+00:00,[],None
416,https://github.com/RyanChris7/ALU-Verilog.git,2021-09-08 06:59:36+00:00,"Hi, This project show how ALU or Arithmetic Logic Unit Works. This program is going to implement a simple CPU with simple instruction parsing, Registers, and ALU functions.",0,RyanChris7/ALU-Verilog,404244099,Verilog,ALU-Verilog,58,0,2021-09-08 07:01:53+00:00,[],None
417,https://github.com/UCASHurui/SimpleCore.git,2021-09-15 06:14:29+00:00,A simple two stage risc-v cpu core,3,UCASHurui/SimpleCore,406635962,Verilog,SimpleCore,373,0,2021-11-30 07:11:08+00:00,[],https://api.github.com/licenses/mit
418,https://github.com/vbateriw/FPGA_Design.git,2021-09-14 23:50:01+00:00,,0,vbateriw/FPGA_Design,406553865,Verilog,FPGA_Design,18694,0,2021-12-11 04:06:02+00:00,[],None
419,https://github.com/bowipawan/hw-syn-lab.git,2021-09-14 08:03:33+00:00,,0,bowipawan/hw-syn-lab,406278302,Verilog,hw-syn-lab,1021,0,2021-10-31 17:56:35+00:00,[],None
420,https://github.com/edwardclifford/ECE3829Lab2.git,2021-09-10 18:37:59+00:00,,0,edwardclifford/ECE3829Lab2,405179807,Verilog,ECE3829Lab2,16,0,2021-11-01 23:06:56+00:00,[],None
421,https://github.com/arawxx/Single-Cycle-MIPS.git,2021-09-18 13:00:30+00:00,Single-Cycle 32-Bit MIPS processor implemented in Verilog for a university assignment.,0,arawxx/Single-Cycle-MIPS,407861338,,Single-Cycle-MIPS,45,0,2022-05-04 13:14:21+00:00,[],None
422,https://github.com/JohnMismash/ECE3710.git,2021-08-31 21:55:21+00:00,,1,JohnMismash/ECE3710,401853194,Verilog,ECE3710,774,0,2021-12-18 01:19:16+00:00,[],None
423,https://github.com/minahnntnu/dicex_project.git,2021-09-16 07:35:57+00:00,,0,minahnntnu/dicex_project,407068697,Verilog,dicex_project,9853,0,2023-01-28 05:16:45+00:00,[],None
424,https://github.com/LaloMiranda/TP1_Arqui_ALU.git,2021-09-16 19:13:14+00:00,Trabajo práctico 1 de la catedra Arquitectura de Computadoras UNC año 2021.,0,LaloMiranda/TP1_Arqui_ALU,407286382,Verilog,TP1_Arqui_ALU,613,0,2021-09-16 19:28:11+00:00,[],None
425,https://github.com/sajattack/redip-sid-i2s.git,2021-08-17 06:03:22+00:00,Initial bringup experiments for I2S on the redip-sid FPGA board,1,sajattack/redip-sid-i2s,397124974,Verilog,redip-sid-i2s,787,0,2021-08-17 15:32:47+00:00,[],None
426,https://github.com/Nagasaigoud/Elevator-Controller.git,2021-08-16 10:35:46+00:00,,0,Nagasaigoud/Elevator-Controller,396744387,Verilog,Elevator-Controller,642,0,2021-08-20 15:48:06+00:00,[],None
427,https://github.com/sidhantp1906/8-bit-first_multiplier.git,2021-08-16 15:21:10+00:00,verilog design of first multiplier design and architecture,0,sidhantp1906/8-bit-first_multiplier,396851823,Verilog,8-bit-first_multiplier,812,0,2021-08-16 15:25:37+00:00,"['verilog', 'multiplier']",https://api.github.com/licenses/apache-2.0
428,https://github.com/ceheffley/FroggerGame.git,2021-08-18 23:45:08+00:00,Game based heavily off of Frogger,0,ceheffley/FroggerGame,397762548,Verilog,FroggerGame,49631,0,2021-08-19 00:11:18+00:00,[],None
429,https://github.com/mfkiwl/admo-core.git,2021-08-21 22:06:03+00:00,ADMO processor core,0,mfkiwl/admo-core,398664517,,admo-core,5194,0,2021-08-21 22:06:04+00:00,[],https://api.github.com/licenses/mit
430,https://github.com/yimy-liu/Verilog_learning.git,2021-08-23 01:23:36+00:00,,0,yimy-liu/Verilog_learning,398938644,Verilog,Verilog_learning,12,0,2021-09-29 15:35:47+00:00,[],https://api.github.com/licenses/apache-2.0
431,https://github.com/JhoanLeon/FPGA-robot.git,2021-08-20 21:58:20+00:00,All codes and modules developed on FPGA for degree project ,0,JhoanLeon/FPGA-robot,398409034,Verilog,FPGA-robot,178855,0,2021-12-22 21:40:16+00:00,[],None
432,https://github.com/rishabhgupta1rg/LUT-optimization-.git,2021-08-20 15:17:22+00:00,memory based computation,0,rishabhgupta1rg/LUT-optimization-,398317858,Verilog,LUT-optimization-,7,0,2021-08-20 15:19:32+00:00,[],None
433,https://github.com/DevaO7/Computer-Organization-Assignments.git,2021-08-21 13:09:51+00:00,,0,DevaO7/Computer-Organization-Assignments,398560810,Verilog,Computer-Organization-Assignments,41,0,2022-11-13 06:28:19+00:00,[],None
434,https://github.com/aakash-n-gupta/verilog.git,2021-08-19 07:38:59+00:00,,0,aakash-n-gupta/verilog,397858260,Verilog,verilog,17954,0,2022-02-18 10:08:00+00:00,[],None
435,https://github.com/t-geon/SingleCycle.git,2021-08-20 04:16:39+00:00,,0,t-geon/SingleCycle,398152493,Verilog,SingleCycle,620,0,2023-01-28 00:56:57+00:00,[],None
436,https://github.com/Gabbyyy420/Data-Types.git,2021-08-24 08:38:12+00:00,Verilog,0,Gabbyyy420/Data-Types,399393213,Verilog,Data-Types,5,0,2021-08-24 12:46:25+00:00,[],None
437,https://github.com/flpostolache/Pipeline.git,2021-08-23 19:12:35+00:00,,0,flpostolache/Pipeline,399221159,Verilog,Pipeline,3,0,2021-08-23 19:19:23+00:00,[],None
438,https://github.com/SteScheller/GoBoardPlayground.git,2021-09-07 19:14:03+00:00,tutorial and demo project code for the Nandland Go Board,1,SteScheller/GoBoardPlayground,404095647,Verilog,GoBoardPlayground,47,0,2021-10-13 20:39:54+00:00,[],None
439,https://github.com/sethm/verilog_mfm.git,2021-09-01 22:29:13+00:00,MFM decoder written in Verilog,1,sethm/verilog_mfm,402219779,Verilog,verilog_mfm,965,0,2021-09-01 22:29:51+00:00,"['fpga', 'verilog', 'retrocomputing']",None
440,https://github.com/pranay-yadav/circuiticians.git,2021-09-04 22:24:25+00:00,Project for CS 4341 Fall 2021 @ UT Dallas.,0,pranay-yadav/circuiticians,403166970,Verilog,circuiticians,395,0,2021-11-18 17:53:57+00:00,[],None
441,https://github.com/CornellCastelino/FPGA-Project.git,2021-09-16 08:19:17+00:00,"There are 2 projects in this Repo, a 6bit ripple adder and a LSFR- a psuedo random number generator with functionalities to start, stop, and speed up or down",0,CornellCastelino/FPGA-Project,407082182,Verilog,FPGA-Project,15,0,2021-09-16 08:21:15+00:00,[],None
442,https://github.com/raja-aadhithan/System-Verilog.git,2021-09-04 13:36:13+00:00,Labs on System Verilog,0,raja-aadhithan/System-Verilog,403065275,Verilog,System-Verilog,6637,0,2023-10-24 07:35:45+00:00,[],None
443,https://github.com/subashchandran420/Router-1x3.git,2021-09-05 09:40:41+00:00,Designing a Router 1x3 using Verilog language.,0,subashchandran420/Router-1x3,403268944,Verilog,Router-1x3,6,0,2021-09-05 09:44:29+00:00,[],None
444,https://github.com/Vaishnavi1627/Verilog.git,2021-09-17 05:36:39+00:00,,0,Vaishnavi1627/Verilog,407418796,Verilog,Verilog,31,0,2021-10-12 12:05:14+00:00,[],None
445,https://github.com/enu23456/rv32i_processor.git,2021-09-13 09:35:01+00:00,,0,enu23456/rv32i_processor,405912356,Verilog,rv32i_processor,7,0,2021-09-13 09:40:41+00:00,[],https://api.github.com/licenses/mit
446,https://github.com/JK-hammer/SRAM_Comparator.git,2021-09-12 16:44:56+00:00,SRAM and one comparator for SEU test,0,JK-hammer/SRAM_Comparator,405697785,Verilog,SRAM_Comparator,3,0,2021-09-12 16:45:28+00:00,[],None
447,https://github.com/Mizraelly/FPGA-development-course.git,2021-09-13 12:58:57+00:00,"FPGA-development-course based to ""Altera"" Cyclone 4",3,Mizraelly/FPGA-development-course,405974514,Verilog,FPGA-development-course,20889,0,2021-10-25 20:26:29+00:00,[],None
448,https://github.com/ElmirDzaka/16-bit-FPGA-CPU.git,2021-09-02 22:46:47+00:00,,0,ElmirDzaka/16-bit-FPGA-CPU,402582010,Verilog,16-bit-FPGA-CPU,140,0,2023-05-01 18:26:27+00:00,[],None
449,https://github.com/fire219/FireballCPU.git,2021-09-03 01:42:35+00:00, Bespoke 16-bit CPU core design,0,fire219/FireballCPU,402613360,Verilog,FireballCPU,10,0,2021-09-03 01:53:11+00:00,[],None
450,https://github.com/harshb910/FrequencyDivider.git,2021-09-14 21:39:00+00:00,Clock Frequency Divider from 100MHz to 3.5Hz,0,harshb910/FrequencyDivider,406528517,Verilog,FrequencyDivider,113,0,2021-09-14 22:16:36+00:00,[],None
451,https://github.com/Renita1206/DDCO-CS206.git,2021-09-14 17:24:52+00:00,DDCO Lab - 3rd Semester,0,Renita1206/DDCO-CS206,406461295,Verilog,DDCO-CS206,2952,0,2022-09-06 17:29:47+00:00,[],None
452,https://github.com/ReinBentdal/TFE4152_Design_av_Integrerte_Kretser-prosjekt.git,2021-09-11 13:23:47+00:00,,0,ReinBentdal/TFE4152_Design_av_Integrerte_Kretser-prosjekt,405385531,Verilog,TFE4152_Design_av_Integrerte_Kretser-prosjekt,9276,0,2023-01-28 05:15:28+00:00,[],https://api.github.com/licenses/mit
453,https://github.com/JohnsonZha0/FunProjects.git,2021-09-11 16:07:49+00:00,Both hardware and software included.,0,JohnsonZha0/FunProjects,405423374,Verilog,FunProjects,6057,0,2021-09-11 16:23:33+00:00,[],None
454,https://github.com/ShixinChen1999/Winograd.git,2021-09-07 07:37:29+00:00,"In this project, I utilize Chisel, a popular language using for agile hardware description, to generated the corresponding Verilog. The project not only includes the algorithm, but it also has the SRAM operations to meet the special reading demand of Winograd Algorithm. ",0,ShixinChen1999/Winograd,403886102,Verilog,Winograd,5700,0,2023-08-08 13:07:52+00:00,[],https://api.github.com/licenses/gpl-3.0
455,https://github.com/Shreyas1308/DDR2_controller.git,2021-09-01 10:30:52+00:00,,0,Shreyas1308/DDR2_controller,402021012,Verilog,DDR2_controller,10,0,2021-09-04 10:39:10+00:00,[],None
456,https://github.com/RojasMilo/riscv-asm.git,2021-09-07 20:53:19+00:00,,0,RojasMilo/riscv-asm,404119760,Verilog,riscv-asm,89,0,2022-01-26 22:40:55+00:00,[],None
457,https://github.com/TheRadDani/Tarea_3-4_digitales.git,2021-09-07 21:14:47+00:00,,0,TheRadDani/Tarea_3-4_digitales,404124532,Verilog,Tarea_3-4_digitales,7,0,2021-09-10 00:10:15+00:00,[],None
458,https://github.com/pbk186/Vending_Machine.git,2021-09-06 17:57:54+00:00,,0,pbk186/Vending_Machine,403715154,Verilog,Vending_Machine,2,0,2021-09-06 18:02:08+00:00,[],None
459,https://github.com/jwafle/PMOD-keypad-lock.git,2021-09-06 20:19:48+00:00,The goal of the design was to create a 4-digit combination lock using the 16-key PMOD keypad from Digilent in combination with the Artix-7 XC7A35T Basys-3 FPGA. The output of the lock’s state was to be displayed on the Basys-3 board’s 7-segment display. The lock needed to display the unlocked state if and only if 4 specific (predefined) digits were pressed in sequential order on the keypad. Any other sequence of button presses should result in the locked state.,0,jwafle/PMOD-keypad-lock,403749059,Verilog,PMOD-keypad-lock,2781,0,2021-10-11 21:08:41+00:00,[],None
460,https://github.com/harris-chris/xilinx.git,2021-08-15 01:34:29+00:00,Xilinx configuration,0,harris-chris/xilinx,396181591,Verilog,xilinx,6232,0,2021-10-09 03:20:25+00:00,[],None
461,https://github.com/Sapffire/sankat_mochan.git,2021-08-15 09:29:47+00:00,,1,Sapffire/sankat_mochan,396295788,Verilog,sankat_mochan,8,0,2021-08-15 10:08:37+00:00,[],None
462,https://github.com/badjerry0522/SRAM_adder.git,2021-08-22 13:50:30+00:00,,0,badjerry0522/SRAM_adder,398811096,Verilog,SRAM_adder,25,0,2021-08-22 14:03:44+00:00,[],None
463,https://github.com/Surbhii09/Digital--design-using-verilog.git,2021-08-22 11:09:33+00:00,,0,Surbhii09/Digital--design-using-verilog,398779343,Verilog,Digital--design-using-verilog,225,0,2021-08-27 09:49:57+00:00,[],None
464,https://github.com/tj-666/verilog.git,2021-08-23 17:33:18+00:00,verilog trainig,0,tj-666/verilog,399193302,Verilog,verilog,13,0,2021-08-23 17:45:28+00:00,[],None
465,https://github.com/ErickHDdS/Hierarquia-de-Memoria.git,2021-08-23 13:22:06+00:00,,1,ErickHDdS/Hierarquia-de-Memoria,399112174,Verilog,Hierarquia-de-Memoria,3341,0,2021-08-24 20:43:35+00:00,[],None
466,https://github.com/Sandwich1527/hello-world.git,2021-08-22 02:11:17+00:00,"this is a trush(current,but not forever)",1,Sandwich1527/hello-world,398694791,Verilog,hello-world,2,0,2023-08-29 14:57:04+00:00,[],None
467,https://github.com/gqmv/verilog-microwave.git,2021-08-26 22:30:49+00:00,,1,gqmv/verilog-microwave,400322096,Verilog,verilog-microwave,10710,0,2021-08-28 05:04:23+00:00,[],None
468,https://github.com/pabloec1729/Hashes-generator.git,2021-08-24 19:46:55+00:00,El circuito genera y comprueba hashes,0,pabloec1729/Hashes-generator,399586574,Verilog,Hashes-generator,7756,0,2021-08-24 20:44:17+00:00,[],None
469,https://github.com/p4vbox/programmable-anns.git,2021-08-27 15:50:49+00:00,"In this project, we make a case for in-network intelligence in programmable data planes (PDPs) by using the first steps toward running distributed Artificial Neural Networks (ANNs) in programmable switches. The main novelty of our project lies in distributing the neurons of an ANN into multiple switches instead of running an entire ANN in a single device. The many advantages of this approach include wider network flow visibility and better resource usage across switches and links. Results obtained with this P4 implementation evidence that our approach improves network management tasks while keeping their provisioning overhead similar to a baseline.",0,p4vbox/programmable-anns,400561038,Verilog,programmable-anns,40113,0,2021-08-27 15:51:23+00:00,[],https://api.github.com/licenses/apache-2.0
470,https://github.com/YauTungChen/verilog.git,2021-08-30 06:55:18+00:00,used as verilog practice,0,YauTungChen/verilog,401245798,Verilog,verilog,3,0,2021-09-01 10:55:05+00:00,[],None
471,https://github.com/cgmoraes/MIPS-Processor.git,2021-08-19 18:23:38+00:00,Processador MIPS de 32 bits implementado em verilog utilizando o software Quartus.,0,cgmoraes/MIPS-Processor,398037692,Verilog,MIPS-Processor,2025,0,2023-07-06 15:33:22+00:00,[],None
472,https://github.com/hfrk/verilog-hws.git,2021-09-10 08:55:49+00:00,Verilog modules and testbenches,0,hfrk/verilog-hws,405017246,Verilog,verilog-hws,5,0,2021-09-10 09:01:08+00:00,[],None
473,https://github.com/CristianVelazquez/TP1-ARQUI.git,2021-09-13 22:29:49+00:00,,0,CristianVelazquez/TP1-ARQUI,406148031,Verilog,TP1-ARQUI,1105,0,2021-10-23 20:59:43+00:00,[],None
474,https://github.com/yangzeyun12138/ECE550-Project1.git,2021-09-15 02:24:43+00:00,,0,yangzeyun12138/ECE550-Project1,406586271,Verilog,ECE550-Project1,12,0,2021-09-15 02:54:57+00:00,[],None
475,https://github.com/Abhishekmaheshkumar/VLSI_Design-EECT6325.git,2021-09-15 16:47:55+00:00,This repository has codes pertaining to projects of VLSI DESIGN,0,Abhishekmaheshkumar/VLSI_Design-EECT6325,406852254,Verilog,VLSI_Design-EECT6325,75,0,2021-09-15 17:39:33+00:00,[],None
476,https://github.com/syedusama25/single_cycle_MIPS_processor_16_bit.git,2021-09-15 18:03:37+00:00,,0,syedusama25/single_cycle_MIPS_processor_16_bit,406876252,Verilog,single_cycle_MIPS_processor_16_bit,66,0,2021-09-15 18:07:05+00:00,[],None
477,https://github.com/mustafaberktaskin/FBU_CPU_verilog_rtl_project.git,2021-09-08 13:54:22+00:00,,0,mustafaberktaskin/FBU_CPU_verilog_rtl_project,404366897,Verilog,FBU_CPU_verilog_rtl_project,1898,0,2021-09-08 13:55:11+00:00,[],None
478,https://github.com/estherlyoon/pagerank.git,2021-09-12 16:28:41+00:00,iVerilog implementation of PageRank using AXI,0,estherlyoon/pagerank,405693736,Verilog,pagerank,442,0,2021-12-10 22:24:33+00:00,[],None
479,https://github.com/wishvamadushanka/Single-Cycle-CPU-Implementation-with-a-Memory-Subsystem.git,2021-09-05 21:41:20+00:00,,0,wishvamadushanka/Single-Cycle-CPU-Implementation-with-a-Memory-Subsystem,403418126,Verilog,Single-Cycle-CPU-Implementation-with-a-Memory-Subsystem,208,0,2021-09-05 21:43:40+00:00,[],None
480,https://github.com/warikap/STLV7325.git,2021-08-27 15:49:01+00:00,STLV7325 board example projects.,0,warikap/STLV7325,400560518,Verilog,STLV7325,4336,0,2021-09-01 17:12:47+00:00,[],https://api.github.com/licenses/mit
481,https://github.com/JamesD004/HelioSmart.git,2021-08-28 22:34:57+00:00,,0,JamesD004/HelioSmart,400902889,Verilog,HelioSmart,6025,0,2021-08-28 22:50:53+00:00,[],None
482,https://github.com/503976632/dma.git,2021-09-01 08:05:08+00:00,,0,503976632/dma,401980918,Verilog,dma,48,0,2021-09-01 08:08:26+00:00,[],None
483,https://github.com/oliveiraop/verilog_blocks.git,2021-09-03 01:48:16+00:00,Verilog generic blocks,0,oliveiraop/verilog_blocks,402614568,Verilog,verilog_blocks,3,0,2021-09-03 01:57:25+00:00,[],None
484,https://github.com/miuser12/FPGA_project.git,2021-08-22 10:56:19+00:00,,0,miuser12/FPGA_project,398776806,Verilog,FPGA_project,6,0,2021-08-22 11:03:59+00:00,[],None
485,https://github.com/guyrupt/Pipelined-CPU-with-L1-Cache.git,2021-08-22 06:46:48+00:00,,0,guyrupt/Pipelined-CPU-with-L1-Cache,398733345,Verilog,Pipelined-CPU-with-L1-Cache,1453,0,2021-09-30 03:28:03+00:00,[],None
486,https://github.com/brennanreamer/AdaptiveCruiseControl.git,2021-08-24 17:34:43+00:00,Adaptive Cruise Control System Project for Digital Logic Course,0,brennanreamer/AdaptiveCruiseControl,399552566,Verilog,AdaptiveCruiseControl,486,0,2021-08-24 17:40:20+00:00,[],None
487,https://github.com/minhducletran2812/FPGA.git,2021-08-23 12:09:34+00:00,FPGA Project,0,minhducletran2812/FPGA,399090261,Verilog,FPGA,444,0,2021-09-18 03:05:57+00:00,[],None
488,https://github.com/EAugustoAnalysis/MC14500B-FPGA-Implementation.git,2021-09-06 05:37:14+00:00,A verilog implementation of the Motorola MC14500B based on public information,1,EAugustoAnalysis/MC14500B-FPGA-Implementation,403498582,Verilog,MC14500B-FPGA-Implementation,37,0,2021-09-06 20:30:23+00:00,[],None
489,https://github.com/DonMaestro/multifunctional_alarm_clock_FPGA.git,2021-09-18 11:35:44+00:00,,0,DonMaestro/multifunctional_alarm_clock_FPGA,407843014,Verilog,multifunctional_alarm_clock_FPGA,145,0,2021-11-14 09:05:03+00:00,[],None
490,https://github.com/Computer-Architecture-I-UIS/workshop_risc-v_assembly-amaya-hernandez.git,2021-09-08 23:58:16+00:00,workshop_risc-v_assembly-amaya-hernandez created by GitHub Classroom,0,Computer-Architecture-I-UIS/workshop_risc-v_assembly-amaya-hernandez,404529718,Verilog,workshop_risc-v_assembly-amaya-hernandez,30297,0,2022-01-26 21:03:25+00:00,[],None
491,https://github.com/tortuenoire5408/CellBased2016_preliminary.git,2021-09-16 10:03:55+00:00,,0,tortuenoire5408/CellBased2016_preliminary,407113790,Verilog,CellBased2016_preliminary,1389,0,2021-10-10 06:04:15+00:00,[],None
492,https://github.com/IgorRadtke/Trab_Final---Sistemas.git,2021-09-17 01:40:28+00:00,,0,IgorRadtke/Trab_Final---Sistemas,407367824,Verilog,Trab_Final---Sistemas,2020,0,2022-05-30 22:00:28+00:00,[],None
493,https://github.com/TheRadDani/Tarea5_Digitales.git,2021-09-14 23:33:34+00:00,,0,TheRadDani/Tarea5_Digitales,406550983,Verilog,Tarea5_Digitales,29,0,2021-09-20 17:10:49+00:00,[],None
494,https://github.com/BrandonZupan/LC3-B.git,2021-09-10 19:29:05+00:00,LC3-B Implemented on an FPGA,0,BrandonZupan/LC3-B,405192000,Verilog,LC3-B,227,0,2021-09-25 01:14:34+00:00,[],None
495,https://github.com/ma2mo10/uRLTD4.git,2021-09-02 06:09:51+00:00,,1,ma2mo10/uRLTD4,402309974,Verilog,uRLTD4,166,0,2021-10-03 09:01:01+00:00,[],None
496,https://github.com/Lyfae/Verilog.git,2021-09-02 02:01:34+00:00,,0,Lyfae/Verilog,402259118,Verilog,Verilog,95632,0,2021-09-02 02:03:56+00:00,[],https://api.github.com/licenses/gpl-3.0
497,https://github.com/amarjeet-saini/MIPS-32-implementation-in-Verilog.git,2021-09-08 05:29:12+00:00,,0,amarjeet-saini/MIPS-32-implementation-in-Verilog,404222372,Verilog,MIPS-32-implementation-in-Verilog,8,0,2021-09-08 05:59:51+00:00,[],None
498,https://github.com/VerLearn/2x1-MUX-NML.git,2021-08-27 14:07:32+00:00,,0,VerLearn/2x1-MUX-NML,400529562,Verilog,2x1-MUX-NML,21,0,2021-08-28 11:57:45+00:00,[],https://api.github.com/licenses/gpl-3.0
499,https://github.com/abdelrhman-oun/ALU-Design-using-Verilog-Test-bench.git,2021-08-27 12:02:45+00:00,,0,abdelrhman-oun/ALU-Design-using-Verilog-Test-bench,400494890,Verilog,ALU-Design-using-Verilog-Test-bench,2,0,2021-08-27 12:03:40+00:00,[],None
500,https://github.com/Aarun2/Hash_Verilog.git,2021-08-19 20:35:28+00:00,A simple Hash Table implementation in verilog,0,Aarun2/Hash_Verilog,398068237,Verilog,Hash_Verilog,2,0,2021-08-19 20:59:38+00:00,[],None
501,https://github.com/varun-rajesh/32BitComputer.git,2021-08-17 20:19:51+00:00,,0,varun-rajesh/32BitComputer,397381606,Verilog,32BitComputer,645,0,2022-07-25 19:37:57+00:00,[],None
502,https://github.com/matlalijr/EEE3096S-Pracs.git,2021-08-17 23:39:20+00:00,,0,matlalijr/EEE3096S-Pracs,397417805,Verilog,EEE3096S-Pracs,57,0,2021-10-24 17:43:05+00:00,[],None
503,https://github.com/imhcyx/WidthAdapter.git,2021-08-16 10:16:20+00:00,,0,imhcyx/WidthAdapter,396737587,Verilog,WidthAdapter,3,0,2021-08-19 08:25:25+00:00,[],None
504,https://github.com/EUREG/AxLEAP.git,2021-09-04 14:47:55+00:00,Ax-LEAP: Enabling Low-Power Approximations Through Unified Power Format,0,EUREG/AxLEAP,403081861,Verilog,AxLEAP,9247,0,2022-02-12 18:48:11+00:00,"['low-power', 'approximate-computing', 'upf']",https://api.github.com/licenses/mit
505,https://github.com/Norab99/MIPS-21bit-Single-Cycle-Processor.git,2021-09-04 19:23:21+00:00,In this project MIPS 21bit Single Cycle Processor was implemented and designed with Verilog language using Xilinx Integrated Synthesis Environment (ISE) tools,0,Norab99/MIPS-21bit-Single-Cycle-Processor,403139192,Verilog,MIPS-21bit-Single-Cycle-Processor,9,0,2021-09-04 19:25:51+00:00,[],None
506,https://github.com/c6209c6209/Stack_Verilog.git,2021-09-12 09:01:47+00:00,,0,c6209c6209/Stack_Verilog,405594330,Verilog,Stack_Verilog,587,0,2021-09-12 09:02:35+00:00,[],None
507,https://github.com/elp180002/steely-dan-4341.git,2021-09-12 20:41:18+00:00,Steely Dan is a soda fountain not unlike the Coca-Cola Freestyle machines,2,elp180002/steely-dan-4341,405748815,Verilog,steely-dan-4341,140,0,2021-11-13 03:42:34+00:00,[],None
508,https://github.com/Charlmzz/ALU_project.git,2021-09-13 16:50:27+00:00,Project of designing an ALU for ECE550,1,Charlmzz/ALU_project,406055070,Verilog,ALU_project,142,0,2021-10-24 19:37:21+00:00,[],None
509,https://github.com/harshb910/Alarm-Clock.git,2021-09-15 05:23:48+00:00,Alarm clock using verilog.,0,harshb910/Alarm-Clock,406624381,Verilog,Alarm-Clock,3,0,2021-09-15 05:57:55+00:00,[],None
510,https://github.com/fishcrap/OpenZJV2.git,2021-09-17 02:22:07+00:00,,0,fishcrap/OpenZJV2,407377072,Verilog,OpenZJV2,1526,0,2022-01-01 15:00:46+00:00,[],None
511,https://github.com/imgmz29/ALU-Checkpoint1.git,2021-09-11 04:03:29+00:00,,0,imgmz29/ALU-Checkpoint1,405278745,Verilog,ALU-Checkpoint1,34,0,2021-09-21 20:28:43+00:00,[],None
512,https://github.com/VanshikaTanwar/dvsd_4bit_magnitude_comparator.git,2021-09-11 17:34:51+00:00,"About This project produced a clean GDS - Final Layout with all details that are used to print photomasks used in the fabrication of a behavioral RTL of an 4bit_magnitude_comparator, using SkyWater 130 nm PDK. ",0,VanshikaTanwar/dvsd_4bit_magnitude_comparator,405442669,Verilog,dvsd_4bit_magnitude_comparator,6134,0,2023-09-16 15:10:50+00:00,[],https://api.github.com/licenses/apache-2.0
513,https://github.com/PrateekChauhan26/Digital_safe_system.git,2021-09-13 10:46:12+00:00,"A digital safe is an object designed to protect any type of file. It allows the user to have a password on each document or on a specific folder, according to his needs. This password is used as a key to prevent or authorize the reading of files.",0,PrateekChauhan26/Digital_safe_system,405932609,Verilog,Digital_safe_system,3,0,2021-09-13 10:51:02+00:00,[],None
514,https://github.com/desxxxi/GATES.git,2021-09-13 14:26:41+00:00,,0,desxxxi/GATES,406005739,Verilog,GATES,3,0,2021-09-23 01:42:50+00:00,[],None
515,https://github.com/Torresplays/Brent-Kung-32-bit-adder.git,2021-08-25 06:44:25+00:00,This is the verilog code and simulation files for 32 BIT Adder based on Brent Kung Architecture,0,Torresplays/Brent-Kung-32-bit-adder,399717414,Verilog,Brent-Kung-32-bit-adder,166,0,2021-08-26 05:14:25+00:00,[],None
516,https://github.com/badjerry0522/SRAM_adder1.git,2021-08-22 13:54:41+00:00,,0,badjerry0522/SRAM_adder1,398812024,Verilog,SRAM_adder1,56,0,2021-08-22 13:54:47+00:00,[],None
517,https://github.com/TanviS-2000/Multicycle-Processor-Implementation.git,2021-08-21 13:25:44+00:00,A project to design and simulate a 16-bit RISC Multicycle Processor,0,TanviS-2000/Multicycle-Processor-Implementation,398564231,Verilog,Multicycle-Processor-Implementation,21,0,2021-08-21 13:34:53+00:00,"['risc', 'verilog', 'multicycle-processor', 'verilog-hdl']",None
518,https://github.com/e665107/quartus_prjs.git,2021-08-21 12:15:18+00:00,A project for the altera fpgas based on the quartus ide！,0,e665107/quartus_prjs,398549671,Verilog,quartus_prjs,3318,0,2021-08-21 12:42:05+00:00,[],None
519,https://github.com/sartajsw/BuildAComputerFromScratch.git,2021-08-20 14:27:53+00:00,Build a simple computer from first principles,0,sartajsw/BuildAComputerFromScratch,398302987,Verilog,BuildAComputerFromScratch,46,0,2021-08-30 13:48:51+00:00,[],None
520,https://github.com/Asmaa601/UART_design.git,2021-08-21 00:13:36+00:00,UART protocol design in verilog,0,Asmaa601/UART_design,398428630,Verilog,UART_design,3,0,2021-09-11 16:40:15+00:00,[],None
521,https://github.com/ignacico/P-IBEX-2.0.git,2021-09-17 21:19:34+00:00,,0,ignacico/P-IBEX-2.0,407682224,Verilog,P-IBEX-2.0,31020,0,2021-09-21 17:36:08+00:00,[],https://api.github.com/licenses/bsd-3-clause
522,https://github.com/DylanEtson/369ProcessorCode.git,2021-09-01 22:31:50+00:00,"Created by Noah Butler, Colin Herbert, Dylan Etson",0,DylanEtson/369ProcessorCode,402220307,Verilog,369ProcessorCode,2006,0,2021-12-05 15:26:17+00:00,[],None
523,https://github.com/huanjing1218/IC_2019preliminary_university_CONV.git,2021-09-18 19:34:53+00:00,Image Convolutional Circuit Design,0,huanjing1218/IC_2019preliminary_university_CONV,407951112,Verilog,IC_2019preliminary_university_CONV,1372,0,2021-09-18 19:49:41+00:00,[],None
524,https://github.com/josemrtnz/ECE-526-Digital-Design-with-Verilog-and-System-Verilog-and-Lab---Course-Work-Jose-M.git,2021-09-17 23:00:25+00:00,All labs for this class are located here. This repository is intended for potential employers to look at to verify knowledge of Digital Logic Design and Verification using Verilog.,0,josemrtnz/ECE-526-Digital-Design-with-Verilog-and-System-Verilog-and-Lab---Course-Work-Jose-M,407699956,Verilog,ECE-526-Digital-Design-with-Verilog-and-System-Verilog-and-Lab---Course-Work-Jose-M,17946,0,2021-09-17 23:52:22+00:00,[],None
525,https://github.com/Aryan108/hdl_playground.git,2021-08-16 18:37:40+00:00,A collection of simple HDL codes,0,Aryan108/hdl_playground,396924415,Verilog,hdl_playground,9,0,2021-08-16 18:38:57+00:00,[],None
526,https://github.com/hsinyang0816/Computer-architecture-Project-1.git,2021-08-17 07:51:24+00:00,,0,hsinyang0816/Computer-architecture-Project-1,397159374,Verilog,Computer-architecture-Project-1,2078,0,2021-08-17 07:52:19+00:00,[],None
527,https://github.com/giumaug/bluspec_riscv.git,2021-08-29 15:50:04+00:00,,0,giumaug/bluspec_riscv,401080990,Verilog,bluspec_riscv,246,0,2022-02-18 22:28:39+00:00,[],None
528,https://github.com/MrAliTheGreat/DLD_Projects.git,2021-08-22 09:42:02+00:00,University of Tehran Digital Logic Design Course Projects,0,MrAliTheGreat/DLD_Projects,398763507,Verilog,DLD_Projects,11242,0,2021-08-22 09:49:26+00:00,[],None
529,https://github.com/rfebbo/DPE.git,2021-09-07 17:09:32+00:00,,0,rfebbo/DPE,404060560,Verilog,DPE,13114,0,2021-09-09 19:29:38+00:00,[],None
530,https://github.com/ksvnsaikumar/Digital-data-transmission-using-verilog.git,2021-09-15 15:46:23+00:00,,0,ksvnsaikumar/Digital-data-transmission-using-verilog,406831108,Verilog,Digital-data-transmission-using-verilog,41,0,2021-09-15 16:59:27+00:00,[],https://api.github.com/licenses/mit
531,https://github.com/FredodaFred/MIPS_CPU.git,2021-09-09 23:41:19+00:00,,0,FredodaFred/MIPS_CPU,404899620,Verilog,MIPS_CPU,111,0,2021-09-13 15:42:49+00:00,[],None
532,https://github.com/phuhavan/noise-canceling.git,2021-08-22 12:00:17+00:00,,0,phuhavan/noise-canceling,398788581,Verilog,noise-canceling,27801,0,2021-08-22 12:09:56+00:00,[],https://api.github.com/licenses/apache-2.0
533,https://github.com/johnnyBuildsIt/verilog.git,2021-08-25 20:32:41+00:00,,0,johnnyBuildsIt/verilog,399950056,Verilog,verilog,6,0,2021-08-25 20:38:48+00:00,[],None
534,https://github.com/vinayakagarwal43/VotingMachine.git,2021-09-08 12:22:38+00:00,Verilog based voting machine,0,vinayakagarwal43/VotingMachine,404337491,Verilog,VotingMachine,16,0,2021-09-18 08:06:03+00:00,[],None
535,https://github.com/aks1804/uPower_MIPS_COA_Lab.git,2021-09-07 14:46:59+00:00,MIPS and uPower Datapath for CS250 - Computer Organisation and Architecture Lab @ NIT-Surathkal,0,aks1804/uPower_MIPS_COA_Lab,404015933,Verilog,uPower_MIPS_COA_Lab,748,0,2021-09-07 15:06:53+00:00,[],None
536,https://github.com/Gerald-Gui/Sundry-Codes.git,2021-09-18 18:24:31+00:00,Some codes written out of some reason,0,Gerald-Gui/Sundry-Codes,407937031,Verilog,Sundry-Codes,16,0,2021-11-18 02:05:31+00:00,[],https://api.github.com/licenses/mit
537,https://github.com/LyleShao/SLMP.git,2021-09-16 17:45:45+00:00,,0,LyleShao/SLMP,407261059,Verilog,SLMP,14,0,2021-09-26 10:09:53+00:00,[],None
538,https://github.com/tortuenoire5408/CellBased2014_preliminary.git,2021-09-17 06:55:39+00:00,,0,tortuenoire5408/CellBased2014_preliminary,407438103,Verilog,CellBased2014_preliminary,808,0,2021-10-10 06:04:56+00:00,[],None
539,https://github.com/Zylanx/SIT329-Week5.git,2021-08-19 06:36:03+00:00,,0,Zylanx/SIT329-Week5,397842051,Verilog,SIT329-Week5,5604,0,2021-08-19 14:14:05+00:00,[],None
540,https://github.com/flerovious/EE2026-FPGA.git,2021-08-16 18:30:51+00:00,EE2026 Digital Design FPGA Project,0,flerovious/EE2026-FPGA,396922035,Verilog,EE2026-FPGA,67,0,2021-08-22 12:47:53+00:00,"['verilog', 'fpga']",None
541,https://github.com/satyamprasad27/16-bit_Brent_Kung_Adder.git,2021-08-19 11:21:45+00:00,,0,satyamprasad27/16-bit_Brent_Kung_Adder,397917847,Verilog,16-bit_Brent_Kung_Adder,2,0,2021-08-20 02:38:51+00:00,[],None
542,https://github.com/MikeMillard/EEE3096S-Tutorials-Pracs.git,2021-08-15 20:26:38+00:00,This git repository contains the tutorial and practical files of Michael Millard (Std. No. MLLMIC055) and Nicholas Rogers (Std. No. RGRNIC007) for Embedded Systems II (CC: EEE3096S),0,MikeMillard/EEE3096S-Tutorials-Pracs,396484766,Verilog,EEE3096S-Tutorials-Pracs,934,0,2021-11-01 20:24:42+00:00,[],None
543,https://github.com/bharath19-gs/Basys3_FPGA.git,2021-08-15 17:43:20+00:00,"Basys3 is a FPGA development kit, with a Artix - 7 FPGA ",0,bharath19-gs/Basys3_FPGA,396437537,Verilog,Basys3_FPGA,164,0,2021-12-08 02:26:09+00:00,[],https://api.github.com/licenses/gpl-3.0
544,https://github.com/nimaomidsajedi/Verilog.git,2021-08-18 16:03:34+00:00,,0,nimaomidsajedi/Verilog,397660381,Verilog,Verilog,13,0,2021-08-20 16:46:50+00:00,[],None
545,https://github.com/Anvesh98/Brentkung-Adder.git,2021-08-15 12:34:16+00:00,,0,Anvesh98/Brentkung-Adder,396345120,Verilog,Brentkung-Adder,324,0,2021-08-15 13:21:39+00:00,[],None
546,https://github.com/VELIDIPRADEEPKUMAR/BIN_BCD.git,2021-08-29 14:03:05+00:00,This is a hardware circuit which converts binary data to Binary Coded Desimal (BCD) code .,0,VELIDIPRADEEPKUMAR/BIN_BCD,401056520,Verilog,BIN_BCD,8,0,2022-04-15 14:02:57+00:00,[],None
547,https://github.com/mousyball/vtest2.git,2021-08-30 22:55:50+00:00,,0,mousyball/vtest2,401507719,Verilog,vtest2,5,0,2021-08-30 23:24:51+00:00,[],None
548,https://github.com/daniboi16/ALTERA-CYCLONE-II.git,2021-08-30 18:08:12+00:00,Verilog code developed for the Altera Cyclone II EP2C5,0,daniboi16/ALTERA-CYCLONE-II,401441054,Verilog,ALTERA-CYCLONE-II,7,0,2021-08-30 18:28:43+00:00,"['fpg', 'altera-cyclone', 'quartus-prime']",https://api.github.com/licenses/mit
549,https://github.com/neelpambhar10/verilog_projects.git,2021-09-03 16:53:11+00:00,,0,neelpambhar10/verilog_projects,402839784,Verilog,verilog_projects,19,0,2021-09-04 14:05:28+00:00,[],None
550,https://github.com/zli87/NCTU-Computer-Organization.git,2021-09-05 05:43:10+00:00,,0,zli87/NCTU-Computer-Organization,403225812,Verilog,NCTU-Computer-Organization,4368,0,2021-09-05 05:56:25+00:00,[],None
551,https://github.com/hyf6661669/BKM-example.git,2021-09-04 02:50:17+00:00,Some example codes of BKM algorithm,0,hyf6661669/BKM-example,402948415,Verilog,BKM-example,3162,0,2021-09-04 02:54:01+00:00,[],https://api.github.com/licenses/bsd-3-clause
552,https://github.com/tanvir108115/verilog.git,2021-08-20 23:05:46+00:00,,0,tanvir108115/verilog,398419207,Verilog,verilog,1,0,2021-08-20 23:11:27+00:00,[],None
553,https://github.com/Kenji2021K/data-types.git,2021-08-23 23:40:11+00:00,,0,Kenji2021K/data-types,399276981,Verilog,data-types,11,0,2021-08-24 09:37:51+00:00,[],None
554,https://github.com/henrique-monteiro/computer-system-cpu-mips.git,2021-08-24 22:51:15+00:00,,0,henrique-monteiro/computer-system-cpu-mips,399624712,Verilog,computer-system-cpu-mips,26,0,2021-08-24 23:00:24+00:00,[],None
555,https://github.com/VerLearn/UART_rx_Verilog-HDL.git,2021-08-21 05:36:52+00:00,"UART is an asynchronous design. This project involves designing of UART receiver in Verilog HDL in FSM architecture, Let the frequency of the clock be 25MHz // I am considering the baudrate to be 9600 // From the above, number of clocks in a bit can be calculated as 25000000/9600 = 2605 // Input stream is an 8 bit data // Start bit - 0 // Stop bit - 1 // Each bit is accessed in the middle of its level rather than on the edge to avoid errors..",0,VerLearn/UART_rx_Verilog-HDL,398475892,Verilog,UART_rx_Verilog-HDL,12,0,2021-08-21 06:37:55+00:00,[],None
556,https://github.com/tridot64/Zybo-swtich-led.git,2021-08-31 16:12:09+00:00,"Vivado 2020.2 Zyb0 Z7-10 ""HelloWorld"" program. ",0,tridot64/Zybo-swtich-led,401766638,Verilog,Zybo-swtich-led,13,0,2021-09-01 02:58:20+00:00,[],None
557,https://github.com/DEFAULTTEXHAPb/SampleRateConverter.git,2021-08-31 08:41:41+00:00,,0,DEFAULTTEXHAPb/SampleRateConverter,401632227,Verilog,SampleRateConverter,3663,0,2022-03-02 07:25:36+00:00,[],https://api.github.com/licenses/mit
558,https://github.com/ENGR599/P1_Hardware_Trojan.git,2021-09-08 14:45:05+00:00,,0,ENGR599/P1_Hardware_Trojan,404385010,Verilog,P1_Hardware_Trojan,29,0,2024-01-17 18:09:02+00:00,[],None
559,https://github.com/nikhilg2121/revival1234.git,2021-08-19 15:16:07+00:00,,0,nikhilg2121/revival1234,397986287,Verilog,revival1234,7,0,2024-02-09 17:04:51+00:00,[],None
560,https://github.com/tuji25/isle3hw.git,2021-09-18 02:31:45+00:00,,0,tuji25/isle3hw,407734400,Verilog,isle3hw,217,0,2021-09-18 02:47:35+00:00,[],None
561,https://github.com/linhanwang/hdlbits.git,2021-09-12 06:17:09+00:00,,0,linhanwang/hdlbits,405563229,Verilog,hdlbits,6,0,2021-09-12 15:21:28+00:00,[],None
562,https://github.com/VanshikaTanwar/dvsd_cmp.git,2021-09-11 17:38:31+00:00,,0,VanshikaTanwar/dvsd_cmp,405443438,Verilog,dvsd_cmp,7501,0,2021-09-11 19:11:12+00:00,[],None
563,https://github.com/str3lyx/3HA04.git,2021-09-17 18:36:33+00:00,Simple Music Box using FPGA,0,str3lyx/3HA04,407644843,Verilog,3HA04,6,0,2021-09-18 17:50:13+00:00,[],None
564,https://github.com/Pavithra-Rajan/LD-PD-Lab-S3.git,2021-09-11 20:57:45+00:00,"Programs in C and Verilog written as a part of Program Design Laboratory and Logic Design Laboratory offered in S4, CSE NITC.",0,Pavithra-Rajan/LD-PD-Lab-S3,405481564,Verilog,LD-PD-Lab-S3,817,0,2021-11-16 19:59:31+00:00,"['dsa', 'verilog', 'stack', 'queue', 'trees', 'linked-list', 'array', 'recursion', 'modelsim']",None
565,https://github.com/ElliotJiang426/FPGA_Projects.git,2021-08-28 13:48:43+00:00,,0,ElliotJiang426/FPGA_Projects,400803794,Verilog,FPGA_Projects,13669,0,2021-08-28 14:01:58+00:00,[],None
566,https://github.com/RajSoma0415/VLSI_DESIGN-EECT-6325-.git,2021-09-14 16:12:29+00:00,,0,RajSoma0415/VLSI_DESIGN-EECT-6325-,406438469,Verilog,VLSI_DESIGN-EECT-6325-,75,0,2021-09-14 16:29:57+00:00,[],None
567,https://github.com/mauricio-sj/Trabalho_Lab_1_ULA_8bits.git,2021-09-15 01:53:43+00:00,Trabalho_Lab_1_ULA_8bits,0,mauricio-sj/Trabalho_Lab_1_ULA_8bits,406579237,Verilog,Trabalho_Lab_1_ULA_8bits,3149,0,2021-09-15 02:09:21+00:00,[],None
568,https://github.com/tl319/ISA-MIPS-copy.git,2021-09-16 13:23:16+00:00,,0,tl319/ISA-MIPS-copy,407173889,Verilog,ISA-MIPS-copy,23736,0,2021-09-17 10:09:47+00:00,[],None
569,https://github.com/khaki3/ddcpu.git,2021-08-26 20:23:02+00:00,,0,khaki3/ddcpu,400296382,Verilog,ddcpu,74,0,2021-08-26 20:23:47+00:00,[],None
570,https://github.com/krukaj/chess_basys_3.git,2021-09-07 15:38:08+00:00,This is the game based on FPGA created for UEC_2 as a pass,1,krukaj/chess_basys_3,404033129,Verilog,chess_basys_3,40,0,2022-09-09 19:51:16+00:00,[],None
571,https://github.com/Mohamed-Ayaan358/Verilog-modules.git,2021-09-08 15:16:17+00:00,This repository is used for storing various functions and modules which can be used for larger programs,0,Mohamed-Ayaan358/Verilog-modules,404395848,Verilog,Verilog-modules,2,0,2021-09-08 15:53:56+00:00,[],None
572,https://github.com/Niveddita/-100daysofRTL.git,2021-09-07 01:38:50+00:00,,0,Niveddita/-100daysofRTL,403805411,Verilog,-100daysofRTL,15,0,2021-09-07 01:59:50+00:00,[],None
573,https://github.com/NiranjanRavichandran00/Music-Box.git,2021-09-07 19:50:14+00:00,A Music Box with a GUI interface to plays tones and music presets ,0,NiranjanRavichandran00/Music-Box,404104652,Verilog,Music-Box,22,0,2022-01-12 22:36:54+00:00,[],None
574,https://github.com/jbanz25/COMPE470L.git,2021-09-07 21:14:28+00:00,San Diego State COMPE-470L (Digital Logic Laboratory) - FAll 21',0,jbanz25/COMPE470L,404124457,Verilog,COMPE470L,7,0,2021-11-04 01:23:15+00:00,[],None
575,https://github.com/nomoregood/OpenMIPS.git,2021-08-29 22:08:36+00:00,OpenMIPS CPU (Verilog HDL),0,nomoregood/OpenMIPS,401151946,Verilog,OpenMIPS,11,0,2021-09-02 23:24:42+00:00,[],None
576,https://github.com/SheronSuditha/Smart-Kicker.git,2021-08-29 07:50:10+00:00,,3,SheronSuditha/Smart-Kicker,400982765,Verilog,Smart-Kicker,43,0,2021-10-06 09:04:22+00:00,[],None
577,https://github.com/danielpoochai/Cache-Unit-Design.git,2021-08-30 20:29:14+00:00,"Implement Cache Unit in direct-mapped, two-way associative with a write-through policy",0,danielpoochai/Cache-Unit-Design,401477564,Verilog,Cache-Unit-Design,6330,0,2021-08-30 20:35:06+00:00,[],None
578,https://github.com/CarlosM96/Loopback_test1.git,2021-08-30 19:46:00+00:00,Project for first loopback test of Full Mode on DAPHNE,0,CarlosM96/Loopback_test1,401467006,Verilog,Loopback_test1,65675,0,2021-08-30 19:46:52+00:00,[],None
579,https://github.com/gurjot-atkar/game.git,2021-08-23 14:50:51+00:00,,0,gurjot-atkar/game,399142574,Verilog,game,14,0,2021-08-23 20:10:21+00:00,[],None
580,https://github.com/pradhi331/brent-kung-adder-.git,2021-08-15 10:14:27+00:00,,0,pradhi331/brent-kung-adder-,396308618,Verilog,brent-kung-adder-,88,0,2021-08-19 17:00:41+00:00,[],None
581,https://github.com/cyildirim23/SPI-Accelerometer.git,2021-08-16 14:58:51+00:00,Anything related to my SPI Accelerometer project,0,cyildirim23/SPI-Accelerometer,396843106,Verilog,SPI-Accelerometer,121,0,2021-09-21 19:46:38+00:00,[],None
582,https://github.com/varun26khan/floatingPointALU.git,2021-08-19 13:43:49+00:00,,0,varun26khan/floatingPointALU,397957456,Verilog,floatingPointALU,5,0,2021-08-19 13:49:44+00:00,[],None
583,https://github.com/jula97/Chisel_CCSS_Processor.git,2021-08-19 17:32:33+00:00,,0,jula97/Chisel_CCSS_Processor,398024599,Verilog,Chisel_CCSS_Processor,16519,0,2021-08-27 16:37:38+00:00,[],None
584,https://github.com/Priyanka-Banerjee-27/Brent-Kung.git,2021-08-20 17:22:04+00:00,,0,Priyanka-Banerjee-27/Brent-Kung,398351920,Verilog,Brent-Kung,58,0,2021-08-20 17:24:43+00:00,[],None
585,https://github.com/v3xur/Verilog_PE.git,2021-08-20 19:09:36+00:00,simplistic verilog processing engine,0,v3xur/Verilog_PE,398376984,Verilog,Verilog_PE,541,0,2021-08-20 19:33:44+00:00,[],None
586,https://github.com/Sasanka-GRS/Verilog-Session.git,2021-08-18 20:12:50+00:00,,2,Sasanka-GRS/Verilog-Session,397723845,Verilog,Verilog-Session,234,0,2021-08-20 19:35:22+00:00,[],None
587,https://github.com/aximu/Verilog_notes.git,2021-08-18 08:34:43+00:00,,0,aximu/Verilog_notes,397529342,Verilog,Verilog_notes,49,0,2021-09-21 09:39:36+00:00,[],None
588,https://github.com/Phemel01/eee3096s.git,2021-08-21 11:55:03+00:00,,0,Phemel01/eee3096s,398545497,Verilog,eee3096s,619,0,2021-11-03 14:53:29+00:00,[],None
589,https://github.com/anurag-agrwal/Ripple-Carry-Adder.git,2021-08-21 08:08:52+00:00,,0,anurag-agrwal/Ripple-Carry-Adder,398502693,Verilog,Ripple-Carry-Adder,1,0,2021-08-21 08:09:18+00:00,[],None
590,https://github.com/TanviS-2000/Computer-Architecture-Lab-Sheets.git,2021-08-21 13:39:43+00:00,Lab Sheet Solutions for the course Computer Architecture (CS/EEE F342),0,TanviS-2000/Computer-Architecture-Lab-Sheets,398567405,Verilog,Computer-Architecture-Lab-Sheets,2101,0,2021-08-21 13:46:36+00:00,"['verilog', 'verilog-hdl']",None
591,https://github.com/dismastoo/4BIT_REGISTER_VERILOG.git,2021-08-21 16:22:14+00:00,,0,dismastoo/4BIT_REGISTER_VERILOG,398604412,Verilog,4BIT_REGISTER_VERILOG,13,0,2021-08-24 23:51:36+00:00,[],None
592,https://github.com/srimanthtenneti/UART_Implementation_FPGA.git,2021-08-23 11:32:13+00:00,Design and Implementation of a UART Transreciever.,0,srimanthtenneti/UART_Implementation_FPGA,399078152,Verilog,UART_Implementation_FPGA,28,0,2021-08-23 11:39:14+00:00,[],https://api.github.com/licenses/apache-2.0
593,https://github.com/mikhailkhokhlov/zybo-z7-ping-pong.git,2021-08-22 20:59:23+00:00,,0,mikhailkhokhlov/zybo-z7-ping-pong,398900221,Verilog,zybo-z7-ping-pong,41,0,2021-09-14 15:59:27+00:00,[],None
594,https://github.com/Surbhii09/boothmultiplier-for-signed-numbers.git,2021-08-25 13:35:17+00:00,,0,Surbhii09/boothmultiplier-for-signed-numbers,399831305,Verilog,boothmultiplier-for-signed-numbers,56,0,2021-08-25 13:40:57+00:00,[],None
595,https://github.com/FCHXWH/ApproximateMult.git,2021-08-26 06:07:56+00:00,ILP-based Synthesized Approximate Multiplier (DATE'22),1,FCHXWH/ApproximateMult,400059658,Verilog,ApproximateMult,214,0,2024-02-26 05:20:21+00:00,[],None
596,https://github.com/flpostolache/Cronometru-cu-afisare-BCD.git,2021-08-23 19:18:58+00:00,,0,flpostolache/Cronometru-cu-afisare-BCD,399222767,Verilog,Cronometru-cu-afisare-BCD,3,0,2021-08-23 19:20:26+00:00,[],None
597,https://github.com/Raotanuj/Comb_lock.git,2021-08-17 07:59:42+00:00,Designed a combinational lock in Verilog HDL that opens only when sequential input entered is correct,0,Raotanuj/Comb_lock,397161853,Verilog,Comb_lock,97,0,2021-08-20 15:42:14+00:00,[],None
598,https://github.com/carlzhang4/chisel-riscv.git,2021-08-17 09:42:50+00:00,,1,carlzhang4/chisel-riscv,397195349,Verilog,chisel-riscv,888,0,2021-08-17 09:44:21+00:00,[],None
599,https://github.com/vijayk10/Design-of-32-bit-Floating-Point-Multiplier-And-Adder.git,2021-08-20 19:34:37+00:00,,0,vijayk10/Design-of-32-bit-Floating-Point-Multiplier-And-Adder,398382203,Verilog,Design-of-32-bit-Floating-Point-Multiplier-And-Adder,489,0,2021-08-20 19:36:06+00:00,[],None
600,https://github.com/EAugustoAnalysis/SPARCv8-Based-CPU.git,2021-08-18 21:25:13+00:00,,0,EAugustoAnalysis/SPARCv8-Based-CPU,397738485,Verilog,SPARCv8-Based-CPU,193,0,2021-09-13 22:12:09+00:00,[],None
601,https://github.com/str3lyx/3HA01.git,2021-08-27 09:23:16+00:00,Introduction to FPGA using Verilog,0,str3lyx/3HA01,400455785,Verilog,3HA01,3,0,2023-06-11 12:07:35+00:00,[],None
602,https://github.com/rohitkale208/pipelined-double-precision-adder.git,2021-08-16 17:33:49+00:00,,0,rohitkale208/pipelined-double-precision-adder,396901361,Verilog,pipelined-double-precision-adder,1625,0,2021-08-16 17:38:18+00:00,[],None
603,https://github.com/FlavioCJM1/Verilog.git,2021-08-17 02:32:26+00:00,Codigos de sistemas digitales en verilog,0,FlavioCJM1/Verilog,397063576,Verilog,Verilog,7,0,2021-08-17 04:26:07+00:00,[],None
604,https://github.com/lukewhuang/SequentialTaillight.git,2021-08-16 20:29:35+00:00,,0,lukewhuang/SequentialTaillight,396961161,Verilog,SequentialTaillight,11,0,2021-08-16 20:30:16+00:00,[],None
605,https://github.com/Vaghul12345/Vaghul12345.git,2021-08-24 22:49:46+00:00,Config files for my GitHub profile.,0,Vaghul12345/Vaghul12345,399624477,Verilog,Vaghul12345,61,0,2021-11-16 06:15:49+00:00,"['config', 'github-config']",None
606,https://github.com/kbrudz/Yoshi-s-Nightmare.git,2021-08-24 08:26:32+00:00,,0,kbrudz/Yoshi-s-Nightmare,399390130,Verilog,Yoshi-s-Nightmare,443,0,2021-09-06 19:04:57+00:00,[],None
607,https://github.com/shajan-sha/Shajan_Verilog.git,2021-08-24 15:15:54+00:00,,0,shajan-sha/Shajan_Verilog,399512442,Verilog,Shajan_Verilog,1,0,2021-08-24 15:18:39+00:00,[],None
608,https://github.com/srsyed2/Milestone.git,2021-08-25 19:00:39+00:00,,0,srsyed2/Milestone,399928172,Verilog,Milestone,16629,0,2021-08-25 19:07:28+00:00,[],None
609,https://github.com/463548483/Computer-Structure-Design.git,2021-08-26 11:30:14+00:00,Computer Structure Design,1,463548483/Computer-Structure-Design,400144955,Verilog,Computer-Structure-Design,185,0,2023-10-22 03:34:05+00:00,[],None
610,https://github.com/lovishchopra/RISC-Processor.git,2021-08-27 19:14:16+00:00,"Computer Organisation and Architecture Lab, Autumn 2018",0,lovishchopra/RISC-Processor,400612590,Verilog,RISC-Processor,903,0,2021-08-27 19:21:06+00:00,[],None
611,https://github.com/mars0001/verilog_pulse.git,2021-09-16 12:42:26+00:00,,0,mars0001/verilog_pulse,407160433,Verilog,verilog_pulse,7,0,2021-09-17 22:32:43+00:00,[],None
612,https://github.com/Chabo17/CS161L.git,2021-09-17 16:15:16+00:00,CS161L Design and architecture of computer systems,0,Chabo17/CS161L,407605582,Verilog,CS161L,5591,0,2021-09-17 16:32:32+00:00,[],None
613,https://github.com/rithika1910/iverilog.git,2021-09-18 17:14:18+00:00,,0,rithika1910/iverilog,407921841,Verilog,iverilog,45,0,2021-09-18 17:19:05+00:00,[],None
614,https://github.com/KirolosMa/Odd-Clock-Divider-.git,2021-09-01 10:18:32+00:00,"A Verilog implementation of odd clock divider. This divider creates a 50% duty cycle divider. The divider is base on creating a phase shift in the signals and Xoring the signals. The digital clock dividers are efficient, cheaper, simple and faster from external PLLs.",1,KirolosMa/Odd-Clock-Divider-,402017813,Verilog,Odd-Clock-Divider-,29,0,2021-09-05 10:43:36+00:00,[],None
615,https://github.com/estherlyoon/simple_fpga.git,2021-09-02 13:08:35+00:00,,0,estherlyoon/simple_fpga,402424210,Verilog,simple_fpga,6,0,2021-09-04 22:28:12+00:00,[],None
616,https://github.com/rahelmiz/ECE369A_Lab1.git,2021-09-07 15:29:25+00:00,,0,rahelmiz/ECE369A_Lab1,404030438,Verilog,ECE369A_Lab1,18,0,2021-09-07 18:19:13+00:00,[],None
617,https://github.com/sombit-roy/Asynchronous-FIFO-Memory.git,2021-09-07 15:58:52+00:00,FIFO memory for read and write operations using asynchronous clocks.,0,sombit-roy/Asynchronous-FIFO-Memory,404039492,Verilog,Asynchronous-FIFO-Memory,213,0,2021-09-07 16:00:17+00:00,[],None
618,https://github.com/ALI11-2000/CocoTb_FYP_Tasks.git,2021-08-29 19:40:46+00:00,,0,ALI11-2000/CocoTb_FYP_Tasks,401127600,Verilog,CocoTb_FYP_Tasks,426,0,2022-06-15 06:16:40+00:00,[],None
619,https://github.com/0auv0/COD-H-_wc.git,2021-09-12 09:52:51+00:00,USTC_2023COD(H),0,0auv0/COD-H-_wc,405604191,Verilog,COD-H-_wc,24716,0,2023-07-07 13:42:16+00:00,[],None
620,https://github.com/surfer-rfid/FPGA-Test.git,2021-09-10 04:52:29+00:00,FPGA verilog test source code for the S.U.R.F.E.R. MAX10 10M02 FPGA.,0,surfer-rfid/FPGA-Test,404960001,Verilog,FPGA-Test,174,0,2022-01-10 14:07:54+00:00,[],
621,https://github.com/padraics1/ct1.git,2021-09-09 18:56:51+00:00,Countdown Timer Implementation on Cmod-A7 Artix7 FPGA,0,padraics1/ct1,404837425,Verilog,ct1,92,0,2021-11-05 13:58:31+00:00,[],None
622,https://github.com/imgmz29/Testbench-for-ALU.git,2021-09-14 21:07:38+00:00,CSA,0,imgmz29/Testbench-for-ALU,406521450,Verilog,Testbench-for-ALU,5,0,2021-09-14 21:14:33+00:00,[],None
623,https://github.com/Debanjan2001/CS39001-Computer-Architecture-And-Organization-Lab.git,2021-08-19 16:00:01+00:00,,0,Debanjan2001/CS39001-Computer-Architecture-And-Organization-Lab,397999221,Verilog,CS39001-Computer-Architecture-And-Organization-Lab,22988,0,2021-11-15 19:18:07+00:00,[],None
624,https://github.com/sych124/RISC-V_Basic.git,2021-08-19 16:47:38+00:00,,0,sych124/RISC-V_Basic,398012545,Verilog,RISC-V_Basic,5,0,2021-08-19 16:48:53+00:00,[],None
625,https://github.com/sz958/risc-v-CPU.git,2021-08-23 08:06:00+00:00,SystemVerilog to Chisel to Verilog,0,sz958/risc-v-CPU,399022157,Verilog,risc-v-CPU,12,0,2021-08-23 08:14:21+00:00,[],None
626,https://github.com/MohammadYAmmar/Design-Moore-FSM-project-via-Quartus-and-ModelSim.git,2021-08-23 14:21:53+00:00,"Simulate a statement through Moore FSM, With a full explanation. This project was my last additional course project for Verilog in Digital Systems Design during my BS in Computer Engineering",0,MohammadYAmmar/Design-Moore-FSM-project-via-Quartus-and-ModelSim,399132924,Verilog,Design-Moore-FSM-project-via-Quartus-and-ModelSim,9925,0,2023-01-17 12:51:57+00:00,"['verilog', 'quartus', 'hdl', 'modelsim', 'moore-machine', 'digital-systems-design', 'simulation']",https://api.github.com/licenses/apache-2.0
627,https://github.com/thomas861205/Space-Invaders.git,2021-08-31 00:41:03+00:00,You gotta be kidding me. Space Invaders on FPGA 🚀,0,thomas861205/Space-Invaders,401526116,Verilog,Space-Invaders,26257,0,2021-08-31 03:18:25+00:00,"['space-invaders', 'arcade-game', 'verilog', 'fpga']",None
628,https://github.com/flpostolache/sumator-carry-look-ahead.git,2021-08-23 19:25:38+00:00,,0,flpostolache/sumator-carry-look-ahead,399224411,Verilog,sumator-carry-look-ahead,3,0,2021-08-23 19:26:09+00:00,[],None
629,https://github.com/CycloneIV/si.git,2021-08-15 17:05:19+00:00,,0,CycloneIV/si,396426262,Verilog,si,7,0,2021-08-25 16:19:30+00:00,[],None
630,https://github.com/Dhanraj98/Asynchronous-FIFO.git,2021-08-15 17:50:06+00:00,,0,Dhanraj98/Asynchronous-FIFO,396439508,Verilog,Asynchronous-FIFO,222,0,2021-08-20 17:20:51+00:00,[],None
631,https://github.com/QianpengLi577/ieee754_Single-precision-number-compare.git,2021-08-21 06:32:32+00:00,,0,QianpengLi577/ieee754_Single-precision-number-compare,398485195,Verilog,ieee754_Single-precision-number-compare,75,0,2021-08-21 06:34:18+00:00,[],None
632,https://github.com/satyamprasad27/8bit_Barrel_Shifter.git,2021-08-22 02:43:04+00:00,8bit Right_Shift operation,0,satyamprasad27/8bit_Barrel_Shifter,398698934,Verilog,8bit_Barrel_Shifter,1,0,2021-08-22 02:43:46+00:00,[],None
633,https://github.com/MrAliTheGreat/CAD_Projects.git,2021-08-22 07:23:56+00:00,University of Tehran Computer Aided Design Course Projects ,0,MrAliTheGreat/CAD_Projects,398739390,Verilog,CAD_Projects,18026,0,2021-08-22 07:38:58+00:00,[],None
634,https://github.com/MrAliTheGreat/ComputerArchitecture.git,2021-08-22 08:22:06+00:00,University of Tehran Computer Architecture Course Projects,0,MrAliTheGreat/ComputerArchitecture,398749456,Verilog,ComputerArchitecture,7479,0,2021-08-22 11:51:27+00:00,[],None
635,https://github.com/linh97abc/DEV0-CV.git,2021-08-16 03:10:56+00:00,CD Rom for FPGA DEV0,0,linh97abc/DEV0-CV,396594011,Verilog,DEV0-CV,61961,0,2021-08-16 03:15:16+00:00,[],None
636,https://github.com/GouravT8962/VLSI_lab.git,2021-08-20 06:10:05+00:00,"This repository contains the code files, readme and many other things that are needed for proper running of this project",0,GouravT8962/VLSI_lab,398173827,Verilog,VLSI_lab,48589,0,2021-08-20 07:42:15+00:00,[],None
637,https://github.com/prannoypara/Brentkung-and-RippleCarry-Adder.git,2021-08-16 18:08:23+00:00,,0,prannoypara/Brentkung-and-RippleCarry-Adder,396914079,Verilog,Brentkung-and-RippleCarry-Adder,578,0,2021-08-20 15:54:41+00:00,[],None
638,https://github.com/hsinyang0816/Computer-architecture-Project-2.git,2021-08-17 07:52:39+00:00,,0,hsinyang0816/Computer-architecture-Project-2,397159736,Verilog,Computer-architecture-Project-2,1192,0,2021-08-17 07:53:04+00:00,[],None
639,https://github.com/FranciscoCross/Arquitectura-TP1.git,2021-09-10 17:52:17+00:00,,0,FranciscoCross/Arquitectura-TP1,405168021,Verilog,Arquitectura-TP1,965,0,2021-09-24 00:10:36+00:00,[],None
640,https://github.com/2001srikrishna/chaotic_diffusion_bsv.git,2021-09-10 14:45:59+00:00,,0,2001srikrishna/chaotic_diffusion_bsv,405114073,Verilog,chaotic_diffusion_bsv,106,0,2022-01-26 14:54:23+00:00,[],None
641,https://github.com/Euge908/CPF2-Final-Project.git,2021-09-08 11:55:28+00:00,,0,Euge908/CPF2-Final-Project,404329184,Verilog,CPF2-Final-Project,29,0,2023-01-27 22:27:32+00:00,[],None
642,https://github.com/jared-jones280/350-SingleCycleProcessor.git,2021-09-12 16:58:29+00:00,,0,jared-jones280/350-SingleCycleProcessor,405701167,Verilog,350-SingleCycleProcessor,114,0,2021-09-12 16:58:59+00:00,[],None
643,https://github.com/jukkanghost2/arqui-tp-alu.git,2021-09-09 13:31:38+00:00,Primer TP de arquitectura de computadoras ALU,0,jukkanghost2/arqui-tp-alu,404733830,Verilog,arqui-tp-alu,406,0,2021-09-21 19:19:39+00:00,[],None
644,https://github.com/felgueres/fpga.git,2021-09-04 18:16:17+00:00,Programming an FPGA with Verilog,0,felgueres/fpga,403126897,Verilog,fpga,45,0,2022-09-02 16:18:36+00:00,"['fpga-board', 'luts', 'verilog']",None
645,https://github.com/DownToParadise/Riscv-cpu.git,2021-09-04 09:00:31+00:00,在vivado上编写的简单RISCV-cpu实现，主要实现几大类基本指令,0,DownToParadise/Riscv-cpu,403010357,Verilog,Riscv-cpu,4789,0,2021-09-06 12:25:42+00:00,[],None
646,https://github.com/andrewseo2001/VGA-Controller.git,2021-09-06 22:44:09+00:00,Simple VGA Controller using Verilog,0,andrewseo2001/VGA-Controller,403775360,Verilog,VGA-Controller,3,0,2021-09-06 22:48:06+00:00,[],None
647,https://github.com/EDAHUB/mini_new.git,2021-09-12 05:41:52+00:00,test clock_gated exmple,0,EDAHUB/mini_new,405557331,Verilog,mini_new,12067,0,2021-09-12 05:55:15+00:00,[],None
648,https://github.com/tdextrous/single-cycle-processor.git,2021-08-26 16:56:03+00:00,Single cycle processor implementing a small subset of ARMv8 ISA.,0,tdextrous/single-cycle-processor,400243311,Verilog,single-cycle-processor,17,0,2021-08-26 17:04:03+00:00,[],None
649,https://github.com/KevinLuuuuu/Computer-Organization.git,2021-09-01 05:30:53+00:00,,0,KevinLuuuuu/Computer-Organization,401942800,Verilog,Computer-Organization,15568,0,2021-09-01 05:53:30+00:00,[],None
650,https://github.com/mateipetre/Temperature-monitoring.git,2021-08-29 00:49:18+00:00,Homework from 'Computer Architecture' course,0,mateipetre/Temperature-monitoring,400920103,Verilog,Temperature-monitoring,5,0,2021-08-29 00:50:49+00:00,[],None
651,https://github.com/Eddie-Carrizales/iVerilog-Team-Projects.git,2021-09-17 22:40:59+00:00,"iVerilog project that is an Arithmetic Logic Unit that can Multiply, Divide, Mod, AND, OR, NOT, XOR, XNOR, NAND, NOR, PRESET two inputs (NOW WITH CLOCK).",1,Eddie-Carrizales/iVerilog-Team-Projects,407696908,Verilog,iVerilog-Team-Projects,157,0,2022-06-02 01:55:28+00:00,[],None
652,https://github.com/Him887/Y86-Processor.git,2021-09-17 15:06:42+00:00,,0,Him887/Y86-Processor,407584027,Verilog,Y86-Processor,9,0,2021-09-17 15:09:21+00:00,[],None
653,https://github.com/WeiCheng14159/DLIC_2021_pub.git,2021-09-14 16:37:41+00:00,,1,WeiCheng14159/DLIC_2021_pub,406446700,Verilog,DLIC_2021_pub,7044,0,2021-12-10 02:58:51+00:00,[],None
654,https://github.com/DamThanhSon/FskModulationOnFpgaUsingTranduer.git,2021-09-14 05:24:40+00:00,,0,DamThanhSon/FskModulationOnFpgaUsingTranduer,406235404,Verilog,FskModulationOnFpgaUsingTranduer,2878,0,2021-09-20 11:02:05+00:00,[],None
655,https://github.com/YoselynGV/TellerMachine.git,2021-09-14 17:47:56+00:00,This is a recreation of a teller machine programmed in Verilog,0,YoselynGV/TellerMachine,406468157,Verilog,TellerMachine,51,0,2021-09-14 19:35:59+00:00,[],None
656,https://github.com/UESTCpeng/BUS_axi_ms.git,2021-09-18 08:33:40+00:00,This is a axi write time sequence,0,UESTCpeng/BUS_axi_ms,407803622,Verilog,BUS_axi_ms,44,0,2021-09-18 08:45:17+00:00,[],None
657,https://github.com/Kikyoko/FPGA_NES.git,2021-09-15 08:21:02+00:00,FPGA Nintendo Entertainment System,1,Kikyoko/FPGA_NES,406672583,Verilog,FPGA_NES,11462,0,2021-09-15 11:07:25+00:00,[],None
658,https://github.com/Lenv12138/HDLBits.git,2021-09-16 06:10:05+00:00,practice FPGA programming language,0,Lenv12138/HDLBits,407043083,Verilog,HDLBits,16,0,2021-10-20 08:00:22+00:00,[],None
659,https://github.com/Parimala797/Traffic_Control.git,2021-09-13 16:11:17+00:00,,0,Parimala797/Traffic_Control,406042650,Verilog,Traffic_Control,15,0,2021-11-29 05:30:16+00:00,[],None
660,https://github.com/microSharjeel/asic.git,2021-09-15 14:30:30+00:00,,0,microSharjeel/asic,406801509,Verilog,asic,35,0,2021-09-15 14:33:32+00:00,[],None
661,https://github.com/sharmaut/Indoor-Cycling-Project.git,2021-09-07 14:37:54+00:00,,0,sharmaut/Indoor-Cycling-Project,404012713,Verilog,Indoor-Cycling-Project,17,0,2021-10-02 15:25:21+00:00,[],None
662,https://github.com/uXeBoy/Wifi-Telnet-FPGA-NTSC-Drunk-Wall-Clock.git,2021-09-17 05:39:03+00:00,"Using an ESP32 (DevKitC V2) to open a Telnet connection over the local network to an old Raspberry Pi One (Model B Rev 2), and repeatedly sending the Linux 'date' command to get the current time - then shifting out the digits returned to one of my old VGA1306 FPGA boards, which then uses a few external resistors on a VGA breakout board as an R2R DAC to output 7-segment digits as black-and-white NTSC composite video (not VGA) to the guts of an old 2.5"" RCA Video TFT LCD! 😅",0,uXeBoy/Wifi-Telnet-FPGA-NTSC-Drunk-Wall-Clock,407419339,Verilog,Wifi-Telnet-FPGA-NTSC-Drunk-Wall-Clock,82,0,2021-10-04 11:23:22+00:00,[],None
663,https://github.com/ArmandoSernaC/Codigos_Digitales.git,2021-09-17 06:37:39+00:00,Códigos usados a lo largo de mi paso por la clase de Sistemas Electrónicos Digitales,0,ArmandoSernaC/Codigos_Digitales,407433468,Verilog,Codigos_Digitales,51626,0,2021-11-11 10:11:54+00:00,[],https://api.github.com/licenses/gpl-3.0
664,https://github.com/zianwangs/ECE550.git,2021-09-11 03:36:39+00:00,,0,zianwangs/ECE550,405274521,Verilog,ECE550,212,0,2021-11-17 22:51:07+00:00,[],None
665,https://github.com/str3lyx/3HA03.git,2021-09-11 17:51:37+00:00,Easy Sound,0,str3lyx/3HA03,405446289,Verilog,3HA03,4,0,2023-06-11 12:10:17+00:00,[],None
666,https://github.com/gsingla21/iverilog.git,2021-09-16 14:51:03+00:00,,0,gsingla21/iverilog,407204670,Verilog,iverilog,19,0,2021-09-17 14:42:19+00:00,[],None
667,https://github.com/zhu849/packet_classification_update_algorithm.git,2021-09-13 15:53:20+00:00,,0,zhu849/packet_classification_update_algorithm,406036395,Verilog,packet_classification_update_algorithm,63,0,2021-12-16 07:48:20+00:00,[],None
668,https://github.com/ChenDudo/i2c_learn.git,2021-09-14 12:55:38+00:00,,0,ChenDudo/i2c_learn,406366854,Verilog,i2c_learn,204,0,2021-10-12 01:02:45+00:00,[],None
669,https://github.com/jinhwan52/2021ESWContest_free_1014.git,2021-09-16 23:49:14+00:00,,0,jinhwan52/2021ESWContest_free_1014,407346309,Verilog,2021ESWContest_free_1014,304779,0,2021-09-17 01:07:59+00:00,[],None
670,https://github.com/SachiniW/System_BUS_Design.git,2021-08-15 04:53:02+00:00,A point to point multiplexed serial bus design,1,SachiniW/System_BUS_Design,396219552,Verilog,System_BUS_Design,276113,0,2022-01-10 04:05:21+00:00,[],None
671,https://github.com/TheRadDani/verilog.git,2021-08-16 04:17:18+00:00,,0,TheRadDani/verilog,396613508,Verilog,verilog,6,0,2021-08-16 05:03:57+00:00,[],None
672,https://github.com/zmswanson/fpga-vision.git,2021-09-03 22:59:39+00:00,,0,zmswanson/fpga-vision,402915942,Verilog,fpga-vision,1999,0,2021-09-08 23:52:18+00:00,[],None
673,https://github.com/wisen/wisecore.git,2021-09-01 05:35:53+00:00,,0,wisen/wisecore,401943831,Verilog,wisecore,738,0,2021-09-01 05:43:01+00:00,[],None
674,https://github.com/rahelmiz/ECE369A-Labs1-3.git,2021-09-01 19:26:51+00:00,,1,rahelmiz/ECE369A-Labs1-3,402179242,Verilog,ECE369A-Labs1-3,10737,0,2021-10-21 17:03:34+00:00,[],None
675,https://github.com/edngo23/CSM152A.git,2021-09-01 03:03:23+00:00,Digital Design Laboratory course taken with Professor Majid Sarrafzadeh in Spring 2021 ,0,edngo23/CSM152A,401913783,Verilog,CSM152A,5961,0,2021-09-01 03:13:48+00:00,[],None
676,https://github.com/amarjeet-saini/6052-8-bit-microprocessor-cpu-implementation.git,2021-08-31 16:50:34+00:00,6052 8-bit microprocessor cpu implementation in verilog,0,amarjeet-saini/6052-8-bit-microprocessor-cpu-implementation,401777650,Verilog,6052-8-bit-microprocessor-cpu-implementation,6,0,2021-08-31 16:59:44+00:00,[],https://api.github.com/licenses/mit
677,https://github.com/AnimeshAnand1999/MIPS-32Bit.git,2021-09-13 04:29:16+00:00,implementation of a simple MIPS processor on verilog.,0,AnimeshAnand1999/MIPS-32Bit,405832417,Verilog,MIPS-32Bit,3,0,2021-09-13 04:31:21+00:00,[],None
678,https://github.com/Gabbyyy420/Gates-.git,2021-09-13 13:40:53+00:00,,0,Gabbyyy420/Gates-,405989194,Verilog,Gates-,26,0,2021-09-13 14:27:59+00:00,[],None
679,https://github.com/pAuLocordero222/ALU_TDD.git,2021-08-24 00:58:40+00:00,ALU taller de diseño digital,0,pAuLocordero222/ALU_TDD,399290989,Verilog,ALU_TDD,12,0,2021-09-05 06:15:00+00:00,[],None
680,https://github.com/jloaiza/fpga-toolbox.git,2021-08-23 05:01:20+00:00,A repository with several FPGA modules that might be useful for other projects. ,0,jloaiza/fpga-toolbox,398978401,Verilog,fpga-toolbox,5,0,2021-08-27 04:49:27+00:00,[],https://api.github.com/licenses/mit
681,https://github.com/bazzza95/SIMON32-64_Masters_Project.git,2021-08-27 11:51:25+00:00,,0,bazzza95/SIMON32-64_Masters_Project,400492053,Verilog,SIMON32-64_Masters_Project,27722,0,2021-08-28 16:34:22+00:00,[],None
682,https://github.com/VerLearn/Smart-primitive---Majority-in-Verilog-HDL.git,2021-08-27 14:10:09+00:00,,0,VerLearn/Smart-primitive---Majority-in-Verilog-HDL,400530373,Verilog,Smart-primitive---Majority-in-Verilog-HDL,17,0,2021-08-28 11:23:45+00:00,[],https://api.github.com/licenses/gpl-3.0
683,https://github.com/CarlosM96/to_daphne.git,2021-08-26 14:58:51+00:00,Full Mode protocol module for DAPHNE ,0,CarlosM96/to_daphne,400208072,Verilog,to_daphne,13,0,2021-08-26 14:58:58+00:00,[],None
684,https://github.com/pAuLocordero222/MUX_TDD.git,2021-08-24 05:45:18+00:00,Mux,0,pAuLocordero222/MUX_TDD,399349239,Verilog,MUX_TDD,0,0,2021-08-24 05:45:57+00:00,[],None
685,https://github.com/4rfel/soc.git,2021-08-20 22:34:58+00:00,,0,4rfel/soc,398414664,Verilog,soc,251,0,2021-08-26 16:46:32+00:00,[],None
686,https://github.com/Ananya1112/CORDIC.git,2021-08-21 13:45:25+00:00,Implementation of CORDIC algorithm on Verilog HDL,0,Ananya1112/CORDIC,398568677,Verilog,CORDIC,19,0,2022-10-07 02:35:13+00:00,[],None
687,https://github.com/jeason-j/Zynq7010_eink_controller.git,2021-08-21 13:46:13+00:00,Zynq7010 FPGA eink controller,0,jeason-j/Zynq7010_eink_controller,398568862,,Zynq7010_eink_controller,70216,0,2021-09-16 07:20:23+00:00,[],https://api.github.com/licenses/mit
688,https://github.com/priorpeak/computer-organization.git,2021-08-24 15:32:28+00:00,"EC 413: Introduction to the fundamentals and design of computer systems. Topics covered include computer instruction sets, assembly language programming, arithmetic circuits, CPU design (data path and control, pipelining), performance evaluation, memory devices, memory systems including caching and virtual memory, and I/O. Project using design automation tools. Includes lab.",0,priorpeak/computer-organization,399517782,Verilog,computer-organization,1051,0,2021-08-24 17:05:48+00:00,[],None
689,https://github.com/yunuseryilmaz18/crypto-coprocessor.git,2021-08-22 21:35:54+00:00,,1,yunuseryilmaz18/crypto-coprocessor,398906004,Verilog,crypto-coprocessor,584,0,2021-12-15 08:36:23+00:00,[],None
690,https://github.com/Raotanuj/32-bit-brent-kung.git,2021-08-20 13:53:51+00:00,,0,Raotanuj/32-bit-brent-kung,398292969,Verilog,32-bit-brent-kung,2567,0,2021-08-20 15:47:59+00:00,[],None
691,https://github.com/QianpengLi577/IEEE754-Single-precision-adder.git,2021-08-20 02:35:30+00:00,,1,QianpengLi577/IEEE754-Single-precision-adder,398133473,Verilog,IEEE754-Single-precision-adder,112,0,2021-08-20 02:39:07+00:00,[],None
692,https://github.com/vijayk10/Comparision-of-Dadda-Wallace-multiplier.git,2021-08-20 18:53:58+00:00,Comparative study of 16*16-bit unsigned Wallace & Dadda multiplier based on worst case delay.,0,vijayk10/Comparision-of-Dadda-Wallace-multiplier,398373495,Verilog,Comparision-of-Dadda-Wallace-multiplier,1892,0,2021-08-20 18:59:04+00:00,[],None
693,https://github.com/ArthikRajBJain/DataDependency.git,2021-08-25 13:34:07+00:00,,0,ArthikRajBJain/DataDependency,399830951,Verilog,DataDependency,252,0,2021-09-12 07:04:04+00:00,[],None
694,https://github.com/vx-zzy/Ethernet.git,2021-08-25 13:24:55+00:00,,0,vx-zzy/Ethernet,399828045,Verilog,Ethernet,110,0,2021-08-25 13:34:25+00:00,[],https://api.github.com/licenses/mit
695,https://github.com/satviksharmase/SIT329-Advanced-embedded-system.git,2021-08-25 05:56:37+00:00,,0,satviksharmase/SIT329-Advanced-embedded-system,399706257,Verilog,SIT329-Advanced-embedded-system,28,0,2021-10-03 06:59:56+00:00,[],None
696,https://github.com/HarshitBurgula/Vedic_Multiplier.git,2021-08-17 07:19:40+00:00,,0,HarshitBurgula/Vedic_Multiplier,397149596,Verilog,Vedic_Multiplier,68,0,2021-08-17 09:58:17+00:00,[],None
697,https://github.com/Marlon-Lazo-Coronado/Labo_digitales_Lazo_Ramirez.git,2021-08-17 21:01:15+00:00,"En este repositorio se puede encontrar los archivos correspondintes a los ejercicios del labo de digitales, verilog y firmware",0,Marlon-Lazo-Coronado/Labo_digitales_Lazo_Ramirez,397390295,Verilog,Labo_digitales_Lazo_Ramirez,790,0,2021-08-18 17:30:08+00:00,[],None
698,https://github.com/SebekO/MAROC_slow_control.git,2021-08-17 21:01:29+00:00,,0,SebekO/MAROC_slow_control,397390356,Verilog,MAROC_slow_control,34,0,2021-08-18 09:03:33+00:00,[],None
699,https://github.com/nikhilsonawale0705/COCOTB_TESTS.git,2021-08-29 18:11:32+00:00,,0,nikhilsonawale0705/COCOTB_TESTS,401110624,Verilog,COCOTB_TESTS,212,0,2021-10-11 19:52:01+00:00,[],None
700,https://github.com/mateipetre/Message-decryption-application.git,2021-08-29 00:53:32+00:00,Homework from 'Computer Architecture' course,0,mateipetre/Message-decryption-application,400920652,Verilog,Message-decryption-application,9,0,2021-08-29 00:55:37+00:00,[],None
701,https://github.com/Chaplin-Chang/DE0-FPGA-Piano.git,2021-08-29 09:13:53+00:00,"Connect the DE0 FPGA board to an external speaker and perform a performance with a switch. Each switch represents Do.Re.Me..., which is used to adjust the pitch to be output, showing a simple piano, and using buttons to control its power on/off function.",0,Chaplin-Chang/DE0-FPGA-Piano,400998398,Verilog,DE0-FPGA-Piano,1535,0,2023-09-10 09:05:49+00:00,[],https://api.github.com/licenses/mit
702,https://github.com/shernandezl/Ultra-pong.git,2021-09-06 04:25:12+00:00,"Proyecto electrónica digital I, 2021-1.",0,shernandezl/Ultra-pong,403484076,Verilog,Ultra-pong,6,0,2021-09-06 04:29:33+00:00,[],None
703,https://github.com/NOS4A5I/FUNSCII_font_Verilog.git,2021-09-04 19:10:39+00:00,FUNSCII font packaged into a Verilog memory module,0,NOS4A5I/FUNSCII_font_Verilog,403136978,Verilog,FUNSCII_font_Verilog,6,0,2021-09-04 19:12:13+00:00,[],None
704,https://github.com/iamkarthikbk/AGNES.git,2021-09-10 06:11:27+00:00,,0,iamkarthikbk/AGNES,404975219,Verilog,AGNES,420,0,2021-09-10 06:12:49+00:00,[],None
705,https://github.com/preston-Glenn/Verilog-Running-Average-8.git,2021-09-09 15:18:27+00:00,,0,preston-Glenn/Verilog-Running-Average-8,404771626,Verilog,Verilog-Running-Average-8,21,0,2021-09-22 15:46:55+00:00,[],None
706,https://github.com/JK-hammer/SRAM_2_ports.git,2021-09-10 14:43:39+00:00,Static SRAM with two ports: read port and write port,0,JK-hammer/SRAM_2_ports,405113340,Verilog,SRAM_2_ports,2,0,2021-09-10 14:44:59+00:00,[],None
707,https://github.com/siaABC/ELEC5552-team9.git,2021-08-25 12:04:41+00:00,ELEC5552 project4,1,siaABC/ELEC5552-team9,399803365,Verilog,ELEC5552-team9,34828,0,2021-10-15 15:41:05+00:00,[],https://api.github.com/licenses/gpl-3.0
708,https://github.com/gmojicar/HelioSmart.git,2021-08-27 13:09:28+00:00,"HelioSmart es un sistema digital desarrollado en Verilog e implementado mediante la FPGA Altera Cyclone IV de Intel, cuya función es controlar la intensidad lumínica emitida por un led. Consta de un modo manual en el que el usuario elige el nivel de iluminación a través de un teclado, y un modo automático en el cual la intensidad del led varía en razón de la luminosidad percibida en el medio.",0,gmojicar/HelioSmart,400512844,Verilog,HelioSmart,5843,0,2021-08-27 23:17:15+00:00,[],None
709,https://github.com/EslamAsHhraf/Design-of-Combinational-Multiplier.git,2021-09-14 14:45:31+00:00,,0,EslamAsHhraf/Design-of-Combinational-Multiplier,406407236,Verilog,Design-of-Combinational-Multiplier,303,0,2021-09-14 14:47:20+00:00,[],None
710,https://github.com/abarajithan11/cadence_vlsi.git,2021-09-13 09:57:24+00:00,,1,abarajithan11/cadence_vlsi,405919197,Verilog,cadence_vlsi,14992,0,2022-07-09 03:52:11+00:00,[],None
711,https://github.com/gokulsair1998/VLSI_Design-EECT6325.git,2021-09-14 04:56:51+00:00,all the codes pertaining to the projects of VLSI_Design,0,gokulsair1998/VLSI_Design-EECT6325,406229342,Verilog,VLSI_Design-EECT6325,75,0,2021-09-14 04:57:40+00:00,[],None
712,https://github.com/kdsoss/piccolo-arty.git,2021-09-07 10:07:09+00:00,,0,kdsoss/piccolo-arty,403930142,Verilog,piccolo-arty,25796,0,2021-09-07 10:09:17+00:00,[],https://api.github.com/licenses/apache-2.0
713,https://github.com/tortuenoire5408/CellBased2016_final.git,2021-09-16 08:53:45+00:00,,0,tortuenoire5408/CellBased2016_final,407092584,Verilog,CellBased2016_final,994,0,2021-10-10 06:03:38+00:00,[],None
714,https://github.com/Slaung/HDLBits-verilog.git,2021-08-25 06:09:39+00:00,HDLBits website practices,0,Slaung/HDLBits-verilog,399709264,Verilog,HDLBits-verilog,61,0,2022-10-03 17:05:32+00:00,[],None
715,https://github.com/Manvendra96/Brent-kung-adder.git,2021-08-20 13:21:27+00:00,,0,Manvendra96/Brent-kung-adder,398283377,Verilog,Brent-kung-adder,81,0,2021-08-20 13:23:44+00:00,[],None
716,https://github.com/doraemoncito/TSConf_Demistify.git,2021-08-28 20:08:45+00:00,"ZX-EVO TS config ""Demistified""",2,doraemoncito/TSConf_Demistify,400881231,,TSConf_Demistify,319,0,2021-08-28 20:08:46+00:00,[],None
717,https://github.com/MrAliTheGreat/DLD_Lab.git,2021-08-22 09:57:56+00:00,University of Tehran Digital Logic Lab Assignments,0,MrAliTheGreat/DLD_Lab,398766351,Verilog,DLD_Lab,33651,0,2021-08-22 10:05:00+00:00,[],None
718,https://github.com/sinsin1324/EEE3096S-Tutorials.git,2021-08-15 12:56:35+00:00,Tutorials for EEE3096S,0,sinsin1324/EEE3096S-Tutorials,396350546,Verilog,EEE3096S-Tutorials,7,0,2021-10-22 18:52:39+00:00,[],None
719,https://github.com/varun26khan/BrentKungAdder.git,2021-08-15 10:30:38+00:00,Designed a N bit parametrised logarithmic adder using Brent Kung architecture. Implemented the design in Verilog and verified its operation using Modelsim with appropriate test vectors. Identified the critical path of the design to determine the worst case delay of the adder,0,varun26khan/BrentKungAdder,396313009,Verilog,BrentKungAdder,3,0,2021-08-19 04:39:33+00:00,[],None
720,https://github.com/deshmukhshrihari67/RISC_processor.git,2021-08-15 08:55:08+00:00,,0,deshmukhshrihari67/RISC_processor,396285901,Verilog,RISC_processor,19949,0,2021-08-16 19:26:26+00:00,[],None
721,https://github.com/nimaomidsajedi/Design-CPU-on-FPGA.git,2021-08-18 15:01:09+00:00,,0,nimaomidsajedi/Design-CPU-on-FPGA,397640954,Verilog,Design-CPU-on-FPGA,2,0,2021-08-18 15:21:43+00:00,[],None
722,https://github.com/cqmba/hwseclab.git,2021-08-19 19:17:51+00:00,Hardware security lab consisting of Verilog exercises for reversing UART communication as well as exploiting a PIN login.,0,cqmba/hwseclab,398051023,Verilog,hwseclab,12,0,2021-08-19 19:20:22+00:00,[],None
723,https://github.com/psgareja/Building-CPU-on-FPGA.git,2021-08-22 08:43:52+00:00,,0,psgareja/Building-CPU-on-FPGA,398753231,Verilog,Building-CPU-on-FPGA,0,0,2021-08-22 08:49:31+00:00,[],None
724,https://github.com/gabrielztk/SoC-e-Linux-Embarcado.git,2021-08-23 21:59:01+00:00,,0,gabrielztk/SoC-e-Linux-Embarcado,399258505,Verilog,SoC-e-Linux-Embarcado,1096,0,2021-09-13 21:51:46+00:00,[],None
725,https://github.com/Riddy21/8-Bit_Processor.git,2021-09-08 14:32:05+00:00,"Very small 8-bit processor with ALU, decimal output register and 16 byte ram.",0,Riddy21/8-Bit_Processor,404380345,Verilog,8-Bit_Processor,12,0,2022-02-16 18:51:31+00:00,[],None
726,https://github.com/BALAKRISHNA-EPPILI/dvsd_4bit_binary_counter.git,2021-09-11 15:39:48+00:00,"About This project produced a clean GDS - Final Layout with all details that are used to print photomasks used in the fabrication of a behavioral RTL of an 4bit Binary Counter, using SkyWater 130 nm PDK.",0,BALAKRISHNA-EPPILI/dvsd_4bit_binary_counter,405416913,Verilog,dvsd_4bit_binary_counter,9516,0,2021-10-07 18:15:54+00:00,[],https://api.github.com/licenses/apache-2.0
727,https://github.com/xuzf-git/mips_pipeline_cpu.git,2021-08-31 01:53:10+00:00,基于 MIPS 指令集实现的流水线CPU,0,xuzf-git/mips_pipeline_cpu,401540700,Verilog,mips_pipeline_cpu,516,0,2021-10-03 10:51:46+00:00,[],https://api.github.com/licenses/gpl-2.0
728,https://github.com/dixilo/axi_ddc_oct.git,2021-08-26 10:01:12+00:00,,0,dixilo/axi_ddc_oct,400122067,Verilog,axi_ddc_oct,49,0,2022-02-01 09:11:10+00:00,[],None
729,https://github.com/lalfredoaa/VGA_PS2_FPGA.git,2021-09-01 04:33:52+00:00,,0,lalfredoaa/VGA_PS2_FPGA,401931302,Verilog,VGA_PS2_FPGA,1067,0,2021-09-01 05:05:13+00:00,[],None
730,https://github.com/AlejoSev/Tp_Arq.git,2021-09-01 23:07:19+00:00,,0,AlejoSev/Tp_Arq,402226448,Verilog,Tp_Arq,133,0,2021-11-23 20:00:09+00:00,[],None
731,https://github.com/shandy-yuyu/Digital-Circuit-Design.git,2021-08-30 06:17:42+00:00,NCTU Digital Circuit Design class.,0,shandy-yuyu/Digital-Circuit-Design,401236632,Verilog,Digital-Circuit-Design,24728,0,2021-08-30 06:27:46+00:00,[],None
732,https://github.com/pAuLocordero222/RippleCarryAdder_TDD.git,2021-08-24 05:41:09+00:00,Sumador,0,pAuLocordero222/RippleCarryAdder_TDD,399348425,Verilog,RippleCarryAdder_TDD,0,0,2021-08-24 05:42:51+00:00,[],None
