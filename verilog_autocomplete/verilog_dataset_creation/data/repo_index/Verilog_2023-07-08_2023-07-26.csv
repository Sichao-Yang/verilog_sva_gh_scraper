,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/ekknod/pcileech-wifi.git,2023-07-24 18:47:47+00:00,pcileech-fpga with wireless card emulation,51,ekknod/pcileech-wifi,670305909,Verilog,pcileech-wifi,2862,130,2024-04-12 19:06:36+00:00,[],None
1,https://github.com/OSCPU/yosys-sta.git,2023-07-23 11:15:51+00:00,,6,OSCPU/yosys-sta,669768112,Verilog,yosys-sta,24,25,2024-04-08 03:07:41+00:00,[],None
2,https://github.com/thousrm/universal_NPU-CNN_accelerator.git,2023-07-18 12:45:28+00:00,hardware design of universal NPU(CNN accelerator)  for various convolution neural network,4,thousrm/universal_NPU-CNN_accelerator,667848788,Verilog,universal_NPU-CNN_accelerator,56539,23,2024-04-03 11:01:48+00:00,"['cnn', 'hardware-design', 'npu', 'verilog', 'cnn-accelerator', 'asic-design']",https://api.github.com/licenses/mit
3,https://github.com/nand2mario/sdram-tang-nano-20k.git,2023-07-15 06:05:23+00:00,NESTang SDRAM controller and usage example for Tang Nano 20K,4,nand2mario/sdram-tang-nano-20k,666654881,Verilog,sdram-tang-nano-20k,17,22,2024-02-17 23:11:13+00:00,[],https://api.github.com/licenses/apache-2.0
4,https://github.com/turbo9team/turbo9.git,2023-07-21 01:47:49+00:00,Turbo9 - Pipelined 6809 Microprocessor IP,1,turbo9team/turbo9,668948366,Verilog,turbo9,8107,16,2024-03-10 00:55:35+00:00,[],
5,https://github.com/darklife/udarkrisc.git,2023-07-24 00:12:37+00:00,"u[Dark]RISC -- ""micro-darkrisc"" -- an early 16-bit micro-RISC processor defined before DarkRISCV",2,darklife/udarkrisc,669947400,Verilog,udarkrisc,2065,11,2024-03-09 17:22:43+00:00,"['core', 'cpu', 'fpga', 'processor', 'processor-design', 'risc', 'rtl', 'softcore', 'verilog']",https://api.github.com/licenses/bsd-3-clause
6,https://github.com/WzyNoEmo/video_capture_and_process.git,2023-07-24 12:13:10+00:00,"This project aims to integrate image acquisition with AI acceleration to achieve functions such as multi-channel video source input capture, video stitching, FPGA-PC communication.",1,WzyNoEmo/video_capture_and_process,670154019,Verilog,video_capture_and_process,40211,10,2024-04-01 12:16:46+00:00,[],None
7,https://github.com/devindang/dv-cpu-rv.git,2023-07-15 13:24:10+00:00,A harvard architecture CPU based on RISC-V.,2,devindang/dv-cpu-rv,666756367,Verilog,dv-cpu-rv,21327,9,2024-04-05 18:21:14+00:00,[],https://api.github.com/licenses/gpl-3.0
8,https://github.com/Thenmozhie/Procedural-and-OOPs-with-SystemVerilog.git,2023-07-21 14:14:50+00:00,,2,Thenmozhie/Procedural-and-OOPs-with-SystemVerilog,669171857,Verilog,Procedural-and-OOPs-with-SystemVerilog,62,8,2023-09-29 06:55:11+00:00,[],None
9,https://github.com/Essenceia/low-latency-ethernet.git,2023-07-16 02:27:21+00:00,RTL implementation of the low latency ethernet modules for the NASDAQ HFT FPGA project. ,9,Essenceia/low-latency-ethernet,666912088,Verilog,low-latency-ethernet,1344,8,2024-03-28 07:46:03+00:00,"['ethernet', 'fpga', 'hft', 'tcp', 'udp', 'rtl', 'verilog']",https://api.github.com/licenses/mit
10,https://github.com/LIV2/RIPPLE-IDE.git,2023-07-24 14:58:20+00:00,,0,LIV2/RIPPLE-IDE,670221537,Verilog,RIPPLE-IDE,19469,7,2024-03-15 19:37:01+00:00,[],https://api.github.com/licenses/gpl-2.0
11,https://github.com/MiladNooraei/RiscV-Computer-Architecture.git,2023-07-11 20:08:29+00:00,Implementing the RISC-V architecture using Verilog,0,MiladNooraei/RiscV-Computer-Architecture,665262680,Verilog,RiscV-Computer-Architecture,12,6,2023-12-09 16:30:32+00:00,"['computer-architecture', 'risc-v', 'verilog']",None
12,https://github.com/Amr-HAlahla/Multi-Cycle-RISC-Processor-In-Verilog.git,2023-07-12 20:27:29+00:00,To design and verify a simple Multi Cycle RISC processor in Verilog,0,Amr-HAlahla/Multi-Cycle-RISC-Processor-In-Verilog,665711310,Verilog,Multi-Cycle-RISC-Processor-In-Verilog,5046,6,2024-01-16 16:47:29+00:00,[],None
13,https://github.com/DOUDIU/RSA2048.git,2023-07-23 09:34:27+00:00,,0,DOUDIU/RSA2048,669743422,Verilog,RSA2048,586,5,2024-03-23 00:51:19+00:00,"['ahb', 'rsa', 'fpga', 'rtl', 'modular-exponentiation']",None
14,https://github.com/sld-columbia/spikehard.git,2023-07-20 22:15:15+00:00,"The open-source release of ""SpikeHard: Efficiency-Driven Neuromorphic Hardware for Heterogeneous Systems-on-Chip""",1,sld-columbia/spikehard,668908731,Verilog,spikehard,277,5,2024-04-02 06:38:54+00:00,[],https://api.github.com/licenses/mit
15,https://github.com/A-Hares/SPI-NTI-GP.git,2023-07-22 06:50:27+00:00,A Verilog RTL implementation of a Master/Slave Serial Peripheral Interface Block,1,A-Hares/SPI-NTI-GP,669402114,Verilog,SPI-NTI-GP,198,5,2024-02-08 00:15:10+00:00,[],https://api.github.com/licenses/mit
16,https://github.com/fardinabbasi/RISC-V_Processor_Pipelined.git,2023-07-08 13:38:55+00:00,Digital Systems 2 Course [ECE 778] - CA4 - Spring 2023 - University of Tehran - Dr. Safari,1,fardinabbasi/RISC-V_Processor_Pipelined,663937590,Verilog,RISC-V_Processor_Pipelined,900,4,2024-03-22 21:50:19+00:00,"['computer-architecture', 'computer-arithmetic', 'digital-systems', 'modelsim', 'pipelined-processors', 'risc-v', 'verilog']",None
17,https://github.com/Premraj02/OLED-Controller-Verilog.git,2023-07-11 05:21:26+00:00,This is a Verilog controller for SSD1306 0.96'' OLED display.,1,Premraj02/OLED-Controller-Verilog,664944757,Verilog,OLED-Controller-Verilog,435,4,2023-10-18 09:51:56+00:00,[],None
18,https://github.com/MobinaMhr/Computer-Architecture-Course-Projects-S2023.git,2023-07-09 09:32:10+00:00,"A Verilog-based implementation of  Depth-First Search (DFS) algorithm and  RISC-V processor. The RISC-V processor is uniquely crafted in three distinct architectures, namely Single-Cycle, Multi-Cycle, and Pipeline.",2,MobinaMhr/Computer-Architecture-Course-Projects-S2023,664219476,Verilog,Computer-Architecture-Course-Projects-S2023,10286,4,2024-02-23 15:25:04+00:00,[],https://api.github.com/licenses/mit
19,https://github.com/zilongwang123/LeaVe.git,2023-07-19 07:22:46+00:00,A tool for checking the contract satisfaction for hardware designs,1,zilongwang123/LeaVe,668168043,Verilog,LeaVe,8724,3,2023-11-01 16:17:09+00:00,[],None
20,https://github.com/OmarMongy/priority_encoder.git,2023-07-25 11:50:19+00:00,Omar Mongy,0,OmarMongy/priority_encoder,670591365,Verilog,priority_encoder,91,3,2023-08-10 22:01:22+00:00,[],None
21,https://github.com/Gopi-krishnan-77/intelunnati_Incognito.git,2023-07-12 16:23:13+00:00,Intel Unnati - Design and Implementation of Slow and Fast Division Algorithm ,0,Gopi-krishnan-77/intelunnati_Incognito,665631664,Verilog,intelunnati_Incognito,1294,3,2024-02-22 18:46:47+00:00,[],None
22,https://github.com/hammamProg/Single-Cycle-Processor.git,2023-07-19 07:45:09+00:00,Single cycle using verilog,0,hammamProg/Single-Cycle-Processor,668175442,Verilog,Single-Cycle-Processor,97,3,2023-07-19 11:06:23+00:00,[],None
23,https://github.com/OmarMongy/Universal_shift_register.git,2023-07-24 17:06:36+00:00,Omar Mongy,0,OmarMongy/Universal_shift_register,670270686,Verilog,Universal_shift_register,127,3,2023-08-10 22:01:23+00:00,[],None
24,https://github.com/maverick-sp/Project_Vending_Machine_Using_VerilogHDL.git,2023-07-23 22:08:02+00:00,This is a project I did during my Digital Design Course ,0,maverick-sp/Project_Vending_Machine_Using_VerilogHDL,669927810,Verilog,Project_Vending_Machine_Using_VerilogHDL,144,3,2023-10-11 11:02:29+00:00,"['fsms', 'verilog-hdl', 'verilog-project']",None
25,https://github.com/Artityagi123456789/Project.git,2023-07-16 04:32:27+00:00,1. Synchronous FIFO,0,Artityagi123456789/Project,666932032,Verilog,Project,3358,3,2023-09-07 14:15:35+00:00,[],None
26,https://github.com/wrs225/Caravel-Vector-Coprocessor-AI.git,2023-07-13 16:39:34+00:00,,0,wrs225/Caravel-Vector-Coprocessor-AI,666072909,Verilog,Caravel-Vector-Coprocessor-AI,501251,3,2023-10-08 23:31:42+00:00,[],https://api.github.com/licenses/apache-2.0
27,https://github.com/Taher2313/CMP-Core-i13.git,2023-07-22 15:50:54+00:00,Computer architecture pipelined processor.,0,Taher2313/CMP-Core-i13,669538254,Verilog,CMP-Core-i13,266,3,2023-09-13 00:53:33+00:00,[],None
28,https://github.com/OmarMongy/Sequential_8x8_multiplier.git,2023-07-13 16:57:41+00:00,Verilog HDL implementation of an 8x8 bit multiplier using a sequential approach. Omar Mongy,0,OmarMongy/Sequential_8x8_multiplier,666079275,Verilog,Sequential_8x8_multiplier,49,3,2023-10-16 14:02:23+00:00,[],None
29,https://github.com/nouralmulhem/Pipeline-Processor.git,2023-07-18 13:38:10+00:00,"Harvard (separate memories for data and instructions), RISC-like, five-stages pipeline processor.",0,nouralmulhem/Pipeline-Processor,667869581,Verilog,Pipeline-Processor,22816,3,2024-03-22 22:10:49+00:00,"['assembler', 'computer-architecture', 'design', 'instructions', 'pipeline', 'processor', 'risc', 'self-check']",https://api.github.com/licenses/mit
30,https://github.com/Shirokuma233/2023summer-HITsz-cpu-design.git,2023-07-13 08:13:22+00:00,2023HITsz 计算机设计与实践（2023夏季）,0,Shirokuma233/2023summer-HITsz-cpu-design,665886559,Verilog,2023summer-HITsz-cpu-design,2235,2,2023-07-28 09:49:30+00:00,[],None
31,https://github.com/ali-rasteh/JPEG_Algorithm_FPGA.git,2023-07-14 03:58:57+00:00,JPEG Algorithm Implementation on FPGA,0,ali-rasteh/JPEG_Algorithm_FPGA,666247053,Verilog,JPEG_Algorithm_FPGA,14,2,2023-12-03 21:01:53+00:00,[],None
32,https://github.com/bol-edu/fsic_asic.git,2023-07-13 02:24:00+00:00,,2,bol-edu/fsic_asic,665787279,Verilog,fsic_asic,14531,2,2023-08-01 12:10:47+00:00,[],None
33,https://github.com/MobinaMhr/Digital-Logic-Design-Lab-Experiments-S2023.git,2023-07-09 10:10:54+00:00,"This repository showcases the application of Verilog in implementing various Digital Logic Design concepts, including One-Hot Finite State Machines (OTHFSM), Algorithmic State Machines (ASM), and hardware accelerators.",1,MobinaMhr/Digital-Logic-Design-Lab-Experiments-S2023,664228579,Verilog,Digital-Logic-Design-Lab-Experiments-S2023,36714,2,2024-03-30 11:13:09+00:00,[],https://api.github.com/licenses/mit
34,https://github.com/OmarMongy/BCD_Counter.git,2023-07-26 14:18:17+00:00,Omar Mongy,0,OmarMongy/BCD_Counter,671092657,Verilog,BCD_Counter,210,2,2023-08-10 22:01:16+00:00,[],None
35,https://github.com/islamibr/8x8_seq_mult.git,2023-07-13 12:13:09+00:00,,0,islamibr/8x8_seq_mult,665971873,Verilog,8x8_seq_mult,73,2,2023-10-17 13:33:49+00:00,[],None
36,https://github.com/QianLei31/FPGA-code.git,2023-07-11 08:46:45+00:00,,0,QianLei31/FPGA-code,665013337,Verilog,FPGA-code,187701,2,2024-04-12 11:56:58+00:00,[],None
37,https://github.com/URK21CS2064/intelunnati_sci-fi.git,2023-07-15 14:41:51+00:00,,0,URK21CS2064/intelunnati_sci-fi,666777080,Verilog,intelunnati_sci-fi,9220,2,2023-10-10 11:09:30+00:00,[],None
38,https://github.com/kosmalex/tiny_processor.git,2023-07-18 16:48:47+00:00,,0,kosmalex/tiny_processor,667944657,Verilog,tiny_processor,3181,2,2023-10-29 13:57:32+00:00,[],https://api.github.com/licenses/apache-2.0
39,https://github.com/ChetanyaKatara/RISC-V_Processor.git,2023-07-15 09:56:58+00:00,A 32-bit pipelined processor based on RISC-V instruction set architecture.,0,ChetanyaKatara/RISC-V_Processor,666706116,Verilog,RISC-V_Processor,55,2,2024-01-28 09:21:28+00:00,[],https://api.github.com/licenses/mit
40,https://github.com/YoussefMekawy/VeriRISC-CPU.git,2023-07-19 06:50:08+00:00,,0,YoussefMekawy/VeriRISC-CPU,668157400,Verilog,VeriRISC-CPU,3653,2,2024-03-16 07:29:20+00:00,[],None
41,https://github.com/Taher2313/SPI-Protocol.git,2023-07-22 02:25:54+00:00,This is an implementation for the SPI protocol using Verilog.,0,Taher2313/SPI-Protocol,669349688,Verilog,SPI-Protocol,348,2,2023-07-27 11:49:49+00:00,[],None
42,https://github.com/entrepreneurarshadsk143/intelrepo.git,2023-07-14 11:09:32+00:00,"This project is an implementation of an ATM (Automated Teller Machine) controller using Verilog HDL. The ATM controller is designed to handle various functionalities, including PIN verification, withdrawals, deposits, balance display, face recognition and mini statement generation.",0,entrepreneurarshadsk143/intelrepo,666377143,Verilog,intelrepo,50522,2,2024-04-04 04:32:58+00:00,[],None
43,https://github.com/nrs14/verilog_code.git,2023-07-25 07:56:09+00:00,verilog,0,nrs14/verilog_code,670507668,Verilog,verilog_code,1213,2,2023-12-28 16:26:31+00:00,[],None
44,https://github.com/TimothyJNewman/fpga-accelerator.git,2023-07-16 01:03:12+00:00,Creating an FPGA image processor using the Lattice Crosslink-NX LIFCL-40 FPGA. The form factor is a raspberry pi hat.,0,TimothyJNewman/fpga-accelerator,666900545,Verilog,fpga-accelerator,126446,2,2024-04-11 16:15:11+00:00,[],None
45,https://github.com/memidhun/intelunnati_Intel-ectuals.git,2023-07-12 18:57:42+00:00,"This repository contains the implementation and design files for the ""Design and Implementation of Slow and Fast Division Algorithm in Computer Architecture""  as a part of Intel Unnati Industrial Training Program. ",0,memidhun/intelunnati_Intel-ectuals,665684361,Verilog,intelunnati_Intel-ectuals,10082,2,2023-08-10 16:49:22+00:00,[],None
46,https://github.com/Mat2605/CaminhoDeDados.git,2023-07-20 16:14:00+00:00,Caminho de dados feito em verilog,0,Mat2605/CaminhoDeDados,668803356,Verilog,CaminhoDeDados,14,2,2023-12-16 23:14:45+00:00,[],None
47,https://github.com/mabinogi233/branch_prediction_CPU.git,2023-07-12 09:25:15+00:00,MIPS CPU Add Branch Prediction,0,mabinogi233/branch_prediction_CPU,665472015,Verilog,branch_prediction_CPU,886,2,2023-11-17 08:53:59+00:00,[],None
48,https://github.com/OmarMongy/UDL_Counter.git,2023-07-26 13:39:44+00:00,Omar Mongy,0,OmarMongy/UDL_Counter,671076559,Verilog,UDL_Counter,130,2,2023-08-10 22:01:18+00:00,[],None
49,https://github.com/ZAHEER-11/Hardware-Communication-Protocols.git,2023-07-18 19:22:01+00:00,In this repository you can find RTL designs of some hardware communication protocols which are developed using verilog in XIilinx Vivado.,0,ZAHEER-11/Hardware-Communication-Protocols,667996518,Verilog,Hardware-Communication-Protocols,761,2,2023-07-27 04:48:12+00:00,[],None
50,https://github.com/A-Hares/VeriRisc_CPU.git,2023-07-16 22:12:08+00:00,very-reduced-instruction-set processor coded in the Verilog HDL,0,A-Hares/VeriRisc_CPU,667175020,Verilog,VeriRisc_CPU,38,2,2023-12-12 03:12:59+00:00,[],None
51,https://github.com/maitri0410/FPGA-based-PUF_Implementation.git,2023-07-09 05:42:04+00:00,,0,maitri0410/FPGA-based-PUF_Implementation,664169509,Verilog,FPGA-based-PUF_Implementation,710,2,2024-03-14 02:18:36+00:00,[],None
52,https://github.com/Yonsei-BitCrab/hodumaru.git,2023-07-19 15:40:48+00:00,SNN Simulator,1,Yonsei-BitCrab/hodumaru,668350438,Verilog,hodumaru,920,2,2023-07-24 08:18:17+00:00,[],https://api.github.com/licenses/gpl-3.0
53,https://github.com/Baysalt-Zhang/HardwareComprehensiveTraining.git,2023-07-09 01:24:58+00:00,硬件综合训练（HUST）,0,Baysalt-Zhang/HardwareComprehensiveTraining,664122499,Verilog,HardwareComprehensiveTraining,2253,2,2024-03-17 12:11:01+00:00,[],None
54,https://github.com/OmarMongy/Sync_and_Ayunc_counters.git,2023-07-26 13:05:08+00:00,Omar Mongy,0,OmarMongy/Sync_and_Ayunc_counters,671062622,Verilog,Sync_and_Ayunc_counters,131,2,2023-08-10 22:01:22+00:00,[],None
55,https://github.com/OmarMongy/Timer_Counter.git,2023-07-26 16:26:14+00:00,Omar Mongy,0,OmarMongy/Timer_Counter,671142690,Verilog,Timer_Counter,103,2,2023-08-10 22:01:17+00:00,[],None
56,https://github.com/FlippingLogic/fpga_read_bram.git,2023-07-10 05:51:38+00:00,Read FPGA bram content and transfer data to PC through Uart.,0,FlippingLogic/fpga_read_bram,664499555,Verilog,fpga_read_bram,15,2,2024-03-14 04:37:01+00:00,[],None
57,https://github.com/tmdqja1001/IDEC_FPU.git,2023-07-18 09:47:41+00:00,IDEC 실무인력과정 3기 친구들끼리 만든 FPU 프로젝트입니다,0,tmdqja1001/IDEC_FPU,667786099,Verilog,IDEC_FPU,5,2,2023-07-26 07:24:06+00:00,[],None
58,https://github.com/Tan12d/HDL-Code.git,2023-07-14 07:19:52+00:00,Concepts of Digital Logic Design,0,Tan12d/HDL-Code,666302192,Verilog,HDL-Code,107,1,2023-07-17 14:55:28+00:00,"['dataflow-programming', 'logicgates', 'systemverilog-hdl', 'verilog-hdl', 'gateflow-programming']",None
59,https://github.com/moonjayden/ice2005.git,2023-07-15 02:23:42+00:00,SKKU ICE2005 : Design DNN Computation Module in Structural Modeling,0,moonjayden/ice2005,666615203,Verilog,ice2005,42,1,2023-09-04 06:42:52+00:00,[],None
60,https://github.com/shorthate/EG4S20BG256.git,2023-07-15 02:01:17+00:00,FPGA_Learning,1,shorthate/EG4S20BG256,666611573,Verilog,EG4S20BG256,223,1,2023-10-06 23:23:39+00:00,[],None
61,https://github.com/Youssefmdany/Sequential-Multiplier.git,2023-07-12 11:35:57+00:00,Sequential Multiplier,0,Youssefmdany/Sequential-Multiplier,665518563,Verilog,Sequential-Multiplier,766,1,2023-08-02 01:46:04+00:00,[],None
62,https://github.com/BANDIPRANEESHREDDY/AHB-TO-APB-BRIDGE.git,2023-07-11 07:03:08+00:00,"The AHB to APB bridge comprises a state machine, which is used to control the generation of the APB and AHB output signals, and the address decoding logic which is used to generate the APB peripheral select lines.",0,BANDIPRANEESHREDDY/AHB-TO-APB-BRIDGE,664976142,Verilog,AHB-TO-APB-BRIDGE,1626,1,2023-07-11 07:07:13+00:00,[],None
63,https://github.com/YoussefAyman11/Traffic-Light-Controller.git,2023-07-11 16:55:02+00:00,Traffic Light Controller,0,YoussefAyman11/Traffic-Light-Controller,665199654,Verilog,Traffic-Light-Controller,10,1,2023-08-13 23:22:18+00:00,[],None
64,https://github.com/Ali-Imangholi/FIR-Filter-ImplementationOnFPGA-CyclonV.git,2023-07-12 14:29:12+00:00,,0,Ali-Imangholi/FIR-Filter-ImplementationOnFPGA-CyclonV,665586752,Verilog,FIR-Filter-ImplementationOnFPGA-CyclonV,53531,1,2023-07-12 17:00:41+00:00,[],None
65,https://github.com/MYNAMEHOLO/ICCONTEST_2014_preliminary.git,2023-07-18 08:14:42+00:00,A special circuit based on Serial Transmitter Interface (STI) and Data Arrange Controller  (DAC) circuit.,0,MYNAMEHOLO/ICCONTEST_2014_preliminary,667751235,Verilog,ICCONTEST_2014_preliminary,742,1,2023-09-06 13:56:27+00:00,[],None
66,https://github.com/Starkstrek/Parking-System.git,2023-07-25 07:24:21+00:00,Verilog Project to verify Parking System,0,Starkstrek/Parking-System,670496605,Verilog,Parking-System,18,1,2023-07-25 07:29:45+00:00,[],https://api.github.com/licenses/gpl-3.0
67,https://github.com/vsdip/vsdscl180.git,2023-07-11 05:28:38+00:00,,0,vsdip/vsdscl180,664946849,Verilog,vsdscl180,8708,1,2023-11-27 19:26:02+00:00,[],None
68,https://github.com/sprsr/rv32_pipeline.git,2023-07-09 17:23:31+00:00,Risc V Processor,1,sprsr/rv32_pipeline,664343075,Verilog,rv32_pipeline,4330,1,2023-12-06 04:02:17+00:00,[],None
69,https://github.com/lovisXII/Klaw_CORE.git,2023-07-22 20:46:33+00:00,,0,lovisXII/Klaw_CORE,669608060,Verilog,Klaw_CORE,72174,1,2024-01-20 11:00:58+00:00,[],None
70,https://github.com/YoussefAyman11/RSA.git,2023-07-11 15:20:23+00:00,RSA algorithm Implementation on FPGA using Verilog.,0,YoussefAyman11/RSA,665164895,Verilog,RSA,227,1,2023-08-13 23:22:09+00:00,[],None
71,https://github.com/petergad14/VeriRISC-processor.git,2023-07-16 17:41:31+00:00,This repo will contain the modules used to do a VeriRISC processor using verilog,0,petergad14/VeriRISC-processor,667118480,Verilog,VeriRISC-processor,47,1,2023-07-17 09:03:48+00:00,[],None
72,https://github.com/udayapeddirajub/CSA64.git,2023-07-09 05:01:56+00:00,This repository contains the implementation of a 64-bit Carry Select Adder (CSA) using Ripple Carry Adders (RCA). The Carry Select Adder is a fast and efficient method for adding two binary numbers of significant bit lengths. ,0,udayapeddirajub/CSA64,664162154,Verilog,CSA64,6,1,2023-07-09 05:06:07+00:00,[],None
73,https://github.com/rakii-cyper/SoC-camera-integrated-edge-detection.git,2023-07-21 00:22:30+00:00,Using board Zybo-z7 to implement a SoC camera can detect the edge of the input image,0,rakii-cyper/SoC-camera-integrated-edge-detection,668931758,Verilog,SoC-camera-integrated-edge-detection,21332,1,2023-08-15 15:04:13+00:00,[],None
74,https://github.com/fahadmuslim/FYP--Risc-V-32-bit-Matrix-Mac.git,2023-07-19 04:26:11+00:00,A risc v based architecture to develop a core/ processor which is capable of Matrix MAC Operations,1,fahadmuslim/FYP--Risc-V-32-bit-Matrix-Mac,668118107,Verilog,FYP--Risc-V-32-bit-Matrix-Mac,87501,1,2023-09-20 13:35:31+00:00,[],https://api.github.com/licenses/gpl-3.0
75,https://github.com/majilokesh/Optimization-of-Parametric-NTT-Hardware-Accelerator.git,2023-07-19 12:48:24+00:00,,1,majilokesh/Optimization-of-Parametric-NTT-Hardware-Accelerator,668282228,Verilog,Optimization-of-Parametric-NTT-Hardware-Accelerator,31699,1,2024-03-04 01:12:27+00:00,[],https://api.github.com/licenses/mit
76,https://github.com/YoussefAyman11/GCD.git,2023-07-11 17:00:49+00:00,Greatest common divisor algorithm with Verilog ,0,YoussefAyman11/GCD,665201611,Verilog,GCD,1,1,2023-08-13 23:23:15+00:00,[],None
77,https://github.com/JEvSilv/ap-rtl.git,2023-07-17 17:15:51+00:00,Associative processor 2D RTL,0,JEvSilv/ap-rtl,667513893,Verilog,ap-rtl,20433,1,2024-02-25 03:42:37+00:00,[],None
78,https://github.com/negarhonarvar/Computer-architecture-.git,2023-07-08 17:26:56+00:00,,0,negarhonarvar/Computer-architecture-,664014839,Verilog,Computer-architecture-,1917,1,2023-07-08 18:54:40+00:00,[],https://api.github.com/licenses/bsd-2-clause
79,https://github.com/SriKrishna74/Hdl_Bits---Solutions.git,2023-07-10 16:35:03+00:00,In this You can find the solutions to the Questions in HDLBITS in for verilog. The provided solutions is error free and successfully exacted.,0,SriKrishna74/Hdl_Bits---Solutions,664741453,Verilog,Hdl_Bits---Solutions,17,1,2023-07-21 12:40:38+00:00,[],None
80,https://github.com/Naresh1682/newVerilogProject.git,2023-07-11 16:46:28+00:00,,0,Naresh1682/newVerilogProject,665196588,Verilog,newVerilogProject,2,1,2023-07-29 05:52:45+00:00,[],None
81,https://github.com/MYNAMEHOLO/ICCONTEST_2015_preliminary.git,2023-07-13 06:44:05+00:00,This year's competition theme is the design and implementation of a circuitry solution to pinpoint the optimal centroid coordinates of a circle,0,MYNAMEHOLO/ICCONTEST_2015_preliminary,665854776,Verilog,ICCONTEST_2015_preliminary,625,1,2023-09-06 13:51:07+00:00,[],None
82,https://github.com/pandey-priya/verilog-codes.git,2023-07-23 22:00:02+00:00,,0,pandey-priya/verilog-codes,669926413,Verilog,verilog-codes,63,1,2023-08-31 02:41:27+00:00,[],None
83,https://github.com/adityasingh6256/Lemming_game.git,2023-07-26 08:52:21+00:00,"Designing Lemming game using verilog and doing simultation ,Functional verification,RTL to GDS flow",0,adityasingh6256/Lemming_game,670972709,Verilog,Lemming_game,23,1,2023-07-31 15:54:48+00:00,[],https://api.github.com/licenses/apache-2.0
84,https://github.com/mabinogi233/computer_composition.git,2023-07-12 09:40:46+00:00,computer_composition labs of verilog and,0,mabinogi233/computer_composition,665477522,Verilog,computer_composition,537,1,2023-11-17 08:53:57+00:00,[],None
85,https://github.com/anmandaisuki/JESD204b_interface.git,2023-07-18 21:32:27+00:00,,0,anmandaisuki/JESD204b_interface,668032563,Verilog,JESD204b_interface,49,1,2023-12-03 13:02:22+00:00,[],None
86,https://github.com/Vinayak1409/FIFO.git,2023-07-14 03:22:30+00:00,,0,Vinayak1409/FIFO,666238884,Verilog,FIFO,293,1,2024-02-27 05:57:31+00:00,[],None
87,https://github.com/Jerry-Terrasse/RIP.git,2023-07-11 15:15:58+00:00,My implementation of a pipelined CPU based on RISC-V ISA ,0,Jerry-Terrasse/RIP,665163254,Verilog,RIP,34559,1,2023-07-12 19:28:49+00:00,[],None
88,https://github.com/AKhaled47/Sequential-8x8-multiplier.git,2023-07-11 08:01:25+00:00,,0,AKhaled47/Sequential-8x8-multiplier,664996943,Verilog,Sequential-8x8-multiplier,248,1,2023-07-12 17:51:27+00:00,[],None
89,https://github.com/luo-xingyu/SHU-Computer-Hardware-Major-Assignment.git,2023-07-19 04:20:28+00:00,SHU-CES 计算机硬件综合大型作业 项目二 交通灯控制器,0,luo-xingyu/SHU-Computer-Hardware-Major-Assignment,668116754,Verilog,SHU-Computer-Hardware-Major-Assignment,1967,1,2023-07-31 05:21:16+00:00,[],None
90,https://github.com/aniruddhavaidya21/GNN_Accelerator.git,2023-07-10 19:07:41+00:00,Graph Neural Network Accelerator using Verilog for ECE755 VLSI Systems Design ,0,aniruddhavaidya21/GNN_Accelerator,664795281,Verilog,GNN_Accelerator,89928,1,2023-10-17 15:37:02+00:00,[],None
91,https://github.com/DragonAura/MIPS_Pipeline.git,2023-07-12 15:30:46+00:00,2023 夏季学期《数字逻辑与处理器基础实验》课程大作业,0,DragonAura/MIPS_Pipeline,665612216,Verilog,MIPS_Pipeline,8935,1,2024-03-23 08:43:56+00:00,[],None
92,https://github.com/linh97abc/servo.git,2023-07-13 16:05:03+00:00,,0,linh97abc/servo,666060875,Verilog,servo,16628,1,2023-10-01 15:59:56+00:00,[],None
93,https://github.com/Venky-26/AHB2APB_BRIDGE.git,2023-07-26 06:29:54+00:00,,0,Venky-26/AHB2APB_BRIDGE,670923582,Verilog,AHB2APB_BRIDGE,745,1,2023-07-30 06:23:05+00:00,[],None
94,https://github.com/Mirshahnawaz/Controller-Design-for-an-Elevator.git,2023-07-20 09:18:29+00:00,"Verilog-based Elevator Controller: A hardware design project implementing efficient elevator operation, floor selection, and door control using finite state machines and digital logic. Ensuring reliable elevator functionality on FPGA or similar platforms. Testbenches included for verification.",0,Mirshahnawaz/Controller-Design-for-an-Elevator,668639530,Verilog,Controller-Design-for-an-Elevator,5,1,2023-07-21 07:29:09+00:00,[],None
95,https://github.com/HadiSormeyli/verilog_alu.git,2023-07-14 09:24:17+00:00,,0,HadiSormeyli/verilog_alu,666342984,Verilog,verilog_alu,52,1,2023-07-27 05:12:45+00:00,[],None
96,https://github.com/HU-Xu-yang/CNN-accelerator-circuit.git,2023-07-26 08:58:46+00:00,THU-Integreted Circuit Design and Methodology-lab assignment @2021 autumn ,0,HU-Xu-yang/CNN-accelerator-circuit,670975179,Verilog,CNN-accelerator-circuit,24029,1,2024-01-01 13:17:40+00:00,[],https://api.github.com/licenses/mit
97,https://github.com/TahaErenKeles/VerySimpleCPU.git,2023-07-08 08:47:26+00:00,,0,TahaErenKeles/VerySimpleCPU,663844818,Verilog,VerySimpleCPU,1,1,2024-02-21 18:33:14+00:00,[],None
98,https://github.com/Y006/Single_Cycle_RV32I_CPU.git,2023-07-26 03:33:17+00:00,单周期RV32I指令集CPU实现,0,Y006/Single_Cycle_RV32I_CPU,670876687,Verilog,Single_Cycle_RV32I_CPU,86,1,2024-03-14 06:01:28+00:00,[],None
99,https://github.com/nouralmulhem/VLSI.git,2023-07-18 13:26:57+00:00,,0,nouralmulhem/VLSI,667865169,Verilog,VLSI,33906,1,2024-03-22 22:11:03+00:00,[],None
100,https://github.com/mohamedyakoub/Pattern_detecor.git,2023-07-16 11:40:06+00:00,,0,mohamedyakoub/Pattern_detecor,667022986,Verilog,Pattern_detecor,1,1,2023-08-12 23:00:08+00:00,[],None
101,https://github.com/YoussefAyman11/Pattern-Detector.git,2023-07-11 17:08:27+00:00,Pattern Detector with Verilog,0,YoussefAyman11/Pattern-Detector,665204227,Verilog,Pattern-Detector,1,1,2023-08-13 23:22:31+00:00,[],None
102,https://github.com/Dhruv146/Verification-of-SRAM.git,2023-07-18 14:20:29+00:00,,0,Dhruv146/Verification-of-SRAM,667886635,Verilog,Verification-of-SRAM,7,1,2024-01-16 05:38:13+00:00,[],None
103,https://github.com/chouhanj21/CSE_BUBBLE.git,2023-07-16 10:38:46+00:00,,0,chouhanj21/CSE_BUBBLE,667008926,Verilog,CSE_BUBBLE,188,1,2024-04-09 19:10:08+00:00,[],None
104,https://github.com/zitonghan/GPGPU.git,2023-07-20 22:40:12+00:00,,0,zitonghan/GPGPU,668913517,Verilog,GPGPU,242,1,2023-07-21 05:14:54+00:00,[],https://api.github.com/licenses/mit
105,https://github.com/mabinogi233/cpu_mips.git,2023-07-12 09:07:37+00:00,A MIPS CPU OF 100MHZ,0,mabinogi233/cpu_mips,665465276,Verilog,cpu_mips,2248,1,2023-11-17 08:54:00+00:00,[],None
106,https://github.com/namu00/AMBA_AHB_lite.git,2023-07-16 05:24:27+00:00,AMBA AHB-lite studyroom,1,namu00/AMBA_AHB_lite,666941361,Verilog,AMBA_AHB_lite,338,1,2023-07-19 14:15:17+00:00,"['ahb3-lite', 'amba', 'arm', 'bus', 'verilog']",None
107,https://github.com/Ishan2510/Digital-Voting-Machine.git,2023-07-11 17:12:24+00:00,,0,Ishan2510/Digital-Voting-Machine,665205603,Verilog,Digital-Voting-Machine,103,1,2023-07-12 10:08:53+00:00,[],None
108,https://github.com/thefirstnameless/FPGA-face-recognition.git,2023-07-24 13:13:15+00:00,,0,thefirstnameless/FPGA-face-recognition,670177970,Verilog,FPGA-face-recognition,326,1,2023-10-29 04:06:37+00:00,[],None
109,https://github.com/MohamedEmad34/Solutions-to-HDLbits-Verilog-sets.git,2023-07-17 05:34:48+00:00,olutions-to-HDLbits-Verilog-sets ,0,MohamedEmad34/Solutions-to-HDLbits-Verilog-sets,667259778,Verilog,Solutions-to-HDLbits-Verilog-sets,96,1,2023-07-17 08:13:40+00:00,[],None
110,https://github.com/Raspberry-NQ/16Bit-computer.git,2023-07-23 02:12:51+00:00,,0,Raspberry-NQ/16Bit-computer,669655871,Verilog,16Bit-computer,378,1,2023-07-23 02:15:41+00:00,[],https://api.github.com/licenses/mit
111,https://github.com/MohabAmged/VeriRISC_Processor.git,2023-07-18 22:30:27+00:00,The VeriRISC model is a very-reduced-instruction-set processor coded in the Verilog HDL. Its instruction consists of a three-bit operation code and a five-bit operand. That restricts its instruction set to eight instructions and its address space to 32 locations,0,MohabAmged/VeriRISC_Processor,668044854,Verilog,VeriRISC_Processor,5875,1,2023-09-12 20:58:42+00:00,[],None
112,https://github.com/RosMarinas/MIPS_Pipeline_Processor.git,2023-07-25 15:48:59+00:00,MIPS_Single_Processor,0,RosMarinas/MIPS_Pipeline_Processor,670687033,Verilog,MIPS_Pipeline_Processor,13,1,2023-07-25 15:56:28+00:00,[],None
113,https://github.com/Leigaadik/axi_stream_insert_header.git,2023-07-13 13:44:26+00:00,使用Verilog实现axi_stream_insert_header模块并仿真验证,0,Leigaadik/axi_stream_insert_header,666006971,Verilog,axi_stream_insert_header,354,1,2023-07-20 07:23:48+00:00,[],None
114,https://github.com/Dhakkshin/7SegmentDisplay.git,2023-07-12 14:12:59+00:00,Digital Design project ,2,Dhakkshin/7SegmentDisplay,665579591,Verilog,7SegmentDisplay,5147,1,2023-07-14 15:48:48+00:00,[],None
115,https://github.com/darshan-kr/4bit_Full_adder.git,2023-07-12 16:09:23+00:00,4bit full adder is a combinational circuit that is designed using two 2bit adder where that is designed by instantiating two 1bit full adder.,0,darshan-kr/4bit_Full_adder,665626728,Verilog,4bit_Full_adder,3,1,2023-07-13 02:50:15+00:00,[],None
116,https://github.com/SamBaker101/NotAnEntertainmentSystem.git,2023-07-11 21:00:03+00:00,Verilog implementation of 6502 based NES (In Progress),0,SamBaker101/NotAnEntertainmentSystem,665276565,Verilog,NotAnEntertainmentSystem,1902,1,2023-07-14 04:11:57+00:00,[],None
117,https://github.com/XorTrue/LoongArch_32limited_CPU.git,2023-07-16 08:13:06+00:00,LoongArch 32位精简版指令集 CPU,0,XorTrue/LoongArch_32limited_CPU,666976720,Verilog,LoongArch_32limited_CPU,1059,1,2023-07-19 13:35:04+00:00,[],None
118,https://github.com/phyzhenli/AMG.git,2023-07-12 09:21:59+00:00,,0,phyzhenli/AMG,665470645,Verilog,AMG,734,1,2024-03-18 14:25:51+00:00,[],None
119,https://github.com/Sirius1232/CPU_RV32.git,2023-07-22 08:44:00+00:00,A five stage pipeline 32-bit CPU based on RISC-V architecture.,0,Sirius1232/CPU_RV32,669428430,Verilog,CPU_RV32,32,1,2023-10-30 09:27:19+00:00,[],None
120,https://github.com/AKhaled47/Vedic-4-bit-Multiplier.git,2023-07-12 15:30:50+00:00,,0,AKhaled47/Vedic-4-bit-Multiplier,665612235,Verilog,Vedic-4-bit-Multiplier,126,1,2023-07-12 17:51:19+00:00,[],None
121,https://github.com/moonjayden/430.315a.git,2023-07-26 02:11:11+00:00,SNU 430.315A : Design UART Communication considering Metastability Issues / Design Fully Connected Layer in CNN for Image Classification / Design CNN(Conv2d Layers) Image Classifier Accerlerator,0,moonjayden/430.315a,670856434,Verilog,430.315a,17472,1,2023-07-31 02:42:02+00:00,[],None
122,https://github.com/koustav2502/MIPS_32-bit_Pipelined_Processor.git,2023-07-20 14:21:57+00:00,Implementation of a 32-bit pipelined processor based on MIPS architecture in Verilog,0,koustav2502/MIPS_32-bit_Pipelined_Processor,668757483,Verilog,MIPS_32-bit_Pipelined_Processor,8,1,2023-08-01 15:30:45+00:00,[],None
123,https://github.com/Ren-Ps/VSD_TCL_advance.git,2023-07-10 19:25:52+00:00,"TCL is a scripting language commonly used in various domains, including software development, system administration, and electronic design automation (EDA). Created by Pritesh Shirsath.",0,Ren-Ps/VSD_TCL_advance,664801151,Verilog,VSD_TCL_advance,10404,1,2023-07-14 17:05:38+00:00,[],https://api.github.com/licenses/gpl-3.0
124,https://github.com/AKhaled47/UART-TX-RX.git,2023-07-11 11:24:31+00:00,,0,AKhaled47/UART-TX-RX,665072506,Verilog,UART-TX-RX,45,1,2023-07-17 20:42:46+00:00,[],None
125,https://github.com/aniruddhavaidya21/ECE552-WiscProcessor.git,2023-07-10 18:01:03+00:00,5 Stage Pipelined Processor analogous to MIPS R2000,0,aniruddhavaidya21/ECE552-WiscProcessor,664772582,Verilog,ECE552-WiscProcessor,921,1,2023-12-10 02:43:38+00:00,[],None
126,https://github.com/maria15034/HMAC-SHA256.git,2023-07-12 01:33:12+00:00,HMAC-SHA256 hardware implementation written in Verilog. The SHA256 code is sourced from secworks https://github.com/secworks/sha256,0,maria15034/HMAC-SHA256,665333193,Verilog,HMAC-SHA256,15,1,2024-02-13 12:13:58+00:00,[],None
127,https://github.com/fardinabbasi/RISC-V_Processor_MultiCycle.git,2023-07-08 13:15:58+00:00,Digital Systems 2 Course [ECE 778] - CA3 - Spring 2023 - University of Tehran - Dr. Safari,0,fardinabbasi/RISC-V_Processor_MultiCycle,663930027,Verilog,RISC-V_Processor_MultiCycle,727,1,2024-03-22 21:50:36+00:00,"['computer-architecture', 'computer-arithmetic', 'modelsim', 'risc-v', 'verilog']",None
128,https://github.com/Chaitra-s-shetty/PCIe_UW.git,2023-07-14 02:29:19+00:00,,0,Chaitra-s-shetty/PCIe_UW,666226297,Verilog,PCIe_UW,424,1,2023-07-14 18:46:13+00:00,[],
129,https://github.com/AnanduECE/intelunnati_Bitsofduty.git,2023-07-15 14:15:23+00:00,Intel Unnati Industrial Training project on Design and Implementation of Any Time Electricity Bill Payment (ATP) machine controller.,0,AnanduECE/intelunnati_Bitsofduty,666769790,Verilog,intelunnati_Bitsofduty,493,1,2023-10-06 11:24:48+00:00,[],None
130,https://github.com/MichaelBell/spi-ram-controller.git,2023-07-21 14:45:47+00:00,Verilog SPI RAM controller,0,MichaelBell/spi-ram-controller,669183262,Verilog,spi-ram-controller,12,1,2023-07-25 07:38:12+00:00,[],https://api.github.com/licenses/apache-2.0
131,https://github.com/raulciure/Hamming-SECDED-32-26.git,2023-07-11 13:28:22+00:00,"A verilog program implementing the operation of the extended Hamming(32, 26) code.",0,raulciure/Hamming-SECDED-32-26,665118959,Verilog,Hamming-SECDED-32-26,339,1,2023-07-15 13:39:59+00:00,[],https://api.github.com/licenses/agpl-3.0
132,https://github.com/Ali-Imangholi/Digital-Function-Generator.git,2023-07-12 16:48:49+00:00,,0,Ali-Imangholi/Digital-Function-Generator,665640409,Verilog,Digital-Function-Generator,6972,1,2023-07-12 17:00:35+00:00,[],None
133,https://github.com/Ashwin-Rajesh/LifeOnChip.git,2023-07-21 05:07:24+00:00,Convay's Game of Life on silicon (Skywater130 using OpenLane),0,Ashwin-Rajesh/LifeOnChip,668992933,Verilog,LifeOnChip,17302,1,2023-10-05 17:45:04+00:00,[],None
134,https://github.com/fasih0001/Cores-SweRVolff.git,2023-07-24 05:10:15+00:00,,0,fasih0001/Cores-SweRVolff,670008620,Verilog,Cores-SweRVolff,558,1,2023-10-19 11:39:18+00:00,[],None
135,https://github.com/efabless/Caravel_on_FPGA.git,2023-07-24 08:30:12+00:00,,0,efabless/Caravel_on_FPGA,670072480,Verilog,Caravel_on_FPGA,738,1,2024-03-05 10:37:10+00:00,[],None
136,https://github.com/RukmiChavda/4-bit-MAC-unit.git,2023-07-21 02:56:33+00:00,4 -bit MAC unit design using qflow open source tool...,0,RukmiChavda/4-bit-MAC-unit,668963637,Verilog,4-bit-MAC-unit,144,1,2023-07-30 13:39:03+00:00,[],None
137,https://github.com/zitonghan/Tomasulo-CPU.git,2023-07-20 23:48:24+00:00,,0,zitonghan/Tomasulo-CPU,668925746,Verilog,Tomasulo-CPU,195,1,2023-07-21 05:15:13+00:00,[],https://api.github.com/licenses/mit
138,https://github.com/kyrieLei/a-verilog-Lock-simulation.git,2023-07-08 17:38:05+00:00,,0,kyrieLei/a-verilog-Lock-simulation,664018271,Verilog,a-verilog-Lock-simulation,2,1,2023-07-08 17:44:16+00:00,[],None
139,https://github.com/Goutam-115/CSE-BUBBLE-PROCESSOR.git,2023-07-13 10:57:03+00:00,"A 32-bit processor, similar instruction set architecture as MIPS-32 ISA",0,Goutam-115/CSE-BUBBLE-PROCESSOR,665945534,Verilog,CSE-BUBBLE-PROCESSOR,59,1,2023-09-13 00:57:35+00:00,[],https://api.github.com/licenses/mit
140,https://github.com/Emraldoddball100/IntelUnnati_ATM_FSM_Submission.git,2023-07-14 07:38:17+00:00,"Model of an ATM designed with the help of FSM, implemented on a Cyclone 5 FPGA for Intel Unnati Internship (Industrial Training)",0,Emraldoddball100/IntelUnnati_ATM_FSM_Submission,666308378,Verilog,IntelUnnati_ATM_FSM_Submission,10093,1,2023-07-21 10:34:25+00:00,[],None
141,https://github.com/ogakihiromu/music_sequencer_project.git,2023-07-16 10:55:44+00:00,,0,ogakihiromu/music_sequencer_project,667012837,Verilog,music_sequencer_project,9286,1,2023-07-20 15:07:39+00:00,[],None
142,https://github.com/mohamedyakoub/UART.git,2023-07-16 11:30:28+00:00,UART Communication Link Implementation on FPGA using Verilog.,0,mohamedyakoub/UART,667020812,Verilog,UART,63,1,2023-08-12 23:00:05+00:00,[],None
143,https://github.com/mohamedyakoub/GCD.git,2023-07-16 11:38:52+00:00,Greatest common divisor using verilog and its test bench,0,mohamedyakoub/GCD,667022713,Verilog,GCD,1,1,2023-08-12 23:00:10+00:00,[],None
144,https://github.com/anmandaisuki/JESD204b_Interface_v2.git,2023-07-24 13:46:37+00:00,,0,anmandaisuki/JESD204b_Interface_v2,670191590,Verilog,JESD204b_Interface_v2,25,1,2024-02-19 09:12:58+00:00,[],None
145,https://github.com/cp024s/100-days-of-RTL.git,2023-07-23 07:33:31+00:00,probable journey of RTL coding ft. Chandra Prakash,0,cp024s/100-days-of-RTL,669715657,Verilog,100-days-of-RTL,305,1,2024-03-14 14:45:11+00:00,"['fpga-programming', 'systemverilog', 'testbench', 'verilog', 'fpga', 'rtl-design']",https://api.github.com/licenses/bsd-3-clause
146,https://github.com/Birminness/Floating-point-unit-with-AXI4.git,2023-07-21 01:24:37+00:00,,0,Birminness/Floating-point-unit-with-AXI4,668943384,Verilog,Floating-point-unit-with-AXI4,12,0,2023-07-21 01:29:15+00:00,[],None
147,https://github.com/k-nasim/constraints.git,2023-07-21 05:04:37+00:00,,0,k-nasim/constraints,668992232,Verilog,constraints,22,0,2023-07-25 09:33:56+00:00,[],None
148,https://github.com/LakshmiThanujaBommireddy/intelrepo.git,2023-07-15 18:03:38+00:00,tech pirates,0,LakshmiThanujaBommireddy/intelrepo,666829799,Verilog,intelrepo,20554,0,2023-07-19 11:59:05+00:00,[],None
149,https://github.com/DevashyaVismaya/intelunnati_Error404.git,2023-07-15 10:57:50+00:00,Intel Unnati Industrial Training,0,DevashyaVismaya/intelunnati_Error404,666720236,Verilog,intelunnati_Error404,6696,0,2023-07-20 02:38:05+00:00,[],None
150,https://github.com/s431190/CPU.git,2023-07-20 10:03:48+00:00,,0,s431190/CPU,668657447,Verilog,CPU,15674,0,2023-07-20 10:07:45+00:00,[],None
151,https://github.com/chaeypar/SNU-Logic-Design.git,2023-07-19 04:56:42+00:00,"Logic Design labs (codes and reports), Seoul National University, 2023 Spring",0,chaeypar/SNU-Logic-Design,668125463,Verilog,SNU-Logic-Design,6011,0,2023-08-10 06:00:20+00:00,[],None
152,https://github.com/sriramn29/vlsi_code.git,2023-07-19 09:15:40+00:00,,0,sriramn29/vlsi_code,668207197,Verilog,vlsi_code,1,0,2023-07-19 09:18:06+00:00,[],None
153,https://github.com/Surya101010/intelunnati_Miracle_Trio.git,2023-07-15 10:46:47+00:00,Design and Implementation of Slow and fast division algorithm in computer architecture.,0,Surya101010/intelunnati_Miracle_Trio,666717610,Verilog,intelunnati_Miracle_Trio,53068,0,2023-07-19 15:47:51+00:00,[],None
154,https://github.com/Aakulmalhotra/carry-look-ahead-adder.git,2023-07-15 19:32:05+00:00,,0,Aakulmalhotra/carry-look-ahead-adder,666849092,Verilog,carry-look-ahead-adder,29,0,2023-07-30 11:18:39+00:00,[],None
155,https://github.com/tsengs0/RTL_design_of_system_bus_interface.git,2023-07-18 06:15:48+00:00,"This is my exercise projects of RTL implementation of various system bus slaver and master I/F, e.g. APB, AHB and AXI.",0,tsengs0/RTL_design_of_system_bus_interface,667709636,Verilog,RTL_design_of_system_bus_interface,6,0,2023-07-18 06:19:38+00:00,[],None
156,https://github.com/Ashton43/VENDING_MACHINE.git,2023-07-26 10:47:42+00:00,,0,Ashton43/VENDING_MACHINE,671014253,Verilog,VENDING_MACHINE,221,0,2023-07-26 10:54:57+00:00,[],None
157,https://github.com/abhi-ab19/vedic_32bit-multiplication.git,2023-07-09 09:54:27+00:00,The vedic multiplication is one of type of multiplication which multiplies for positive values. To obtain negative multiplication we 2's compliment the negative number.,0,abhi-ab19/vedic_32bit-multiplication,664224650,Verilog,vedic_32bit-multiplication,8,0,2023-07-09 10:17:19+00:00,[],None
158,https://github.com/satyabharadwaj/INTEL-UNNATI-_-TEAM-SIGMA.git,2023-07-10 11:05:04+00:00,,0,satyabharadwaj/INTEL-UNNATI-_-TEAM-SIGMA,664610247,Verilog,INTEL-UNNATI-_-TEAM-SIGMA,16911,0,2023-07-22 11:32:22+00:00,[],None
159,https://github.com/GTPV/TSC-CPU.git,2023-07-10 07:09:13+00:00,Simple TSC-ISA cpu implementation.(Verilog HDL),0,GTPV/TSC-CPU,664523926,Verilog,TSC-CPU,47,0,2023-07-10 07:19:37+00:00,[],None
160,https://github.com/pressant/CSE-BUBBLE.git,2023-07-13 11:18:30+00:00,Single-Cycle Processor,0,pressant/CSE-BUBBLE,665952711,Verilog,CSE-BUBBLE,40,0,2023-07-13 13:21:25+00:00,[],None
161,https://github.com/manan-dangwal/Digital-Circuits.git,2023-07-14 07:44:33+00:00,,0,manan-dangwal/Digital-Circuits,666310287,Verilog,Digital-Circuits,62,0,2023-10-16 17:16:39+00:00,[],None
162,https://github.com/cbvarr01/caravel_CBV.git,2023-07-13 20:12:58+00:00,,0,cbvarr01/caravel_CBV,666141919,Verilog,caravel_CBV,35294,0,2023-07-13 20:13:51+00:00,[],https://api.github.com/licenses/apache-2.0
163,https://github.com/liangyiqiu/epga.git,2023-07-13 17:27:17+00:00,,0,liangyiqiu/epga,666089980,Verilog,epga,29,0,2023-07-13 17:28:09+00:00,[],None
164,https://github.com/DivyamTaneja/16-Bit-CPU-Using-Verilog.git,2023-07-15 08:40:18+00:00,,0,DivyamTaneja/16-Bit-CPU-Using-Verilog,666688663,Verilog,16-Bit-CPU-Using-Verilog,79,0,2023-07-15 08:43:14+00:00,[],None
165,https://github.com/ShwetaKiranTotla/xor_verification.git,2023-07-16 07:39:48+00:00,"Directed and random test bench for an XOR gate using Scoreboard, Test bench, and Monitor",0,ShwetaKiranTotla/xor_verification,666969513,Verilog,xor_verification,31,0,2023-07-16 13:16:24+00:00,[],None
166,https://github.com/Moksha2004/CSE_BUBBLE.git,2023-07-16 17:11:10+00:00,,0,Moksha2004/CSE_BUBBLE,667110824,Verilog,CSE_BUBBLE,57,0,2023-07-16 17:11:54+00:00,[],None
167,https://github.com/Mohamed-AbdulRahman5/mcu.git,2023-07-22 10:11:59+00:00,,0,Mohamed-AbdulRahman5/mcu,669449598,Verilog,mcu,5,0,2023-07-22 10:12:26+00:00,[],None
168,https://github.com/darshan-kr/Day-004-8bit_Encoder.git,2023-07-22 12:22:36+00:00,An encoder is a digital circuit that converts a set of binary inputs into a unique binary code. The binary code represents the position of the input and is used to identify the specific input that is active. Encoders are commonly used in digital systems to convert a parallel set of inputs into a serial code.,0,darshan-kr/Day-004-8bit_Encoder,669481474,Verilog,Day-004-8bit_Encoder,2,0,2023-07-22 12:28:55+00:00,[],None
169,https://github.com/raziie/verilog-risc-computer.git,2023-07-22 19:33:24+00:00,,0,raziie/verilog-risc-computer,669593330,Verilog,verilog-risc-computer,72,0,2023-07-22 19:35:12+00:00,[],None
170,https://github.com/JasonA-dev/Next186_MiSTer.git,2023-07-19 10:51:16+00:00,,0,JasonA-dev/Next186_MiSTer,668240568,Verilog,Next186_MiSTer,106,0,2023-07-19 10:51:23+00:00,[],https://api.github.com/licenses/gpl-2.0
171,https://github.com/crazyjack44/FPGA-UART.git,2023-07-18 02:18:38+00:00,,0,crazyjack44/FPGA-UART,667650001,Verilog,FPGA-UART,8,0,2023-07-24 03:41:40+00:00,[],None
172,https://github.com/AliMaher15/Asynchronous-FIFO-Design-Verilog.git,2023-07-17 10:25:30+00:00,,0,AliMaher15/Asynchronous-FIFO-Design-Verilog,667359799,Verilog,Asynchronous-FIFO-Design-Verilog,475,0,2023-07-17 10:29:30+00:00,[],None
173,https://github.com/manishpundir2207/Dual-Clock-Asynchronous-FIFO.git,2023-07-24 22:22:34+00:00,,0,manishpundir2207/Dual-Clock-Asynchronous-FIFO,670364418,Verilog,Dual-Clock-Asynchronous-FIFO,2129,0,2023-07-25 19:39:59+00:00,[],None
174,https://github.com/chees-e/vDFT.git,2023-07-25 07:13:59+00:00,Discrete Fourier Transform for music note recognition in synthesizable Verilog,0,chees-e/vDFT,670492792,Verilog,vDFT,14,0,2023-07-25 07:19:20+00:00,[],None
175,https://github.com/JetBlack03/Single-Cycle-CPU.git,2023-07-25 20:21:32+00:00,,0,JetBlack03/Single-Cycle-CPU,670778933,Verilog,Single-Cycle-CPU,1598,0,2023-07-27 01:48:42+00:00,[],None
176,https://github.com/mohamedRaslan097/VeriRISC-CPU.git,2023-07-20 10:00:45+00:00,,0,mohamedRaslan097/VeriRISC-CPU,668656247,Verilog,VeriRISC-CPU,2709,0,2023-07-20 10:00:55+00:00,[],None
177,https://github.com/toolmancliosoft/usb_device_core.git,2023-07-25 14:12:35+00:00,Mock repo created to demo SOS integration with Git,0,toolmancliosoft/usb_device_core,670646905,Verilog,usb_device_core,39,0,2023-07-25 14:14:06+00:00,[],None
178,https://github.com/ZPNMiaoHeng/opene902.git,2023-07-20 12:09:52+00:00,,0,ZPNMiaoHeng/opene902,668704174,Verilog,opene902,13780,0,2023-07-20 12:16:51+00:00,[],https://api.github.com/licenses/apache-2.0
179,https://github.com/kdivya03/16-Bit-Microprocessor-Design.git,2023-07-22 03:34:14+00:00,,0,kdivya03/16-Bit-Microprocessor-Design,669361190,Verilog,16-Bit-Microprocessor-Design,12,0,2023-07-22 03:35:03+00:00,[],None
180,https://github.com/Rick-Yin/FPGA.git,2023-07-23 03:06:08+00:00,some funny utilization of FPGA,0,Rick-Yin/FPGA,669663840,Verilog,FPGA,11,0,2023-07-23 09:00:07+00:00,[],https://api.github.com/licenses/mit
181,https://github.com/vidocq-eu/1.git,2023-07-24 09:49:09+00:00,,0,vidocq-eu/1,670101534,Verilog,1,11908,0,2023-07-24 09:50:33+00:00,[],https://api.github.com/licenses/apache-2.0
182,https://github.com/joshithamarripudi/Pipelined_RISC-V_Processor.git,2023-07-11 08:44:50+00:00,,0,joshithamarripudi/Pipelined_RISC-V_Processor,665012614,Verilog,Pipelined_RISC-V_Processor,12,0,2023-07-11 08:46:01+00:00,[],None
183,https://github.com/Avishkarp231/Control_Unit.git,2023-07-10 20:46:37+00:00,,0,Avishkarp231/Control_Unit,664825341,Verilog,Control_Unit,2,0,2023-07-10 20:54:29+00:00,[],None
184,https://github.com/OmarMahmoudElsherif/UART_TX_RX.git,2023-07-10 17:27:35+00:00,UART Receiver protocol using verilog ,0,OmarMahmoudElsherif/UART_TX_RX,664760781,Verilog,UART_TX_RX,929,0,2023-08-28 19:48:08+00:00,[],None
185,https://github.com/salb97/efabless_subsystem_caravel.git,2023-07-12 11:42:11+00:00,,0,salb97/efabless_subsystem_caravel,665520782,Verilog,efabless_subsystem_caravel,32004,0,2023-07-13 13:46:43+00:00,[],None
186,https://github.com/mohamed-mohamed-tarek/Sequential-8x8-multiplier.git,2023-07-12 11:42:34+00:00,,0,mohamed-mohamed-tarek/Sequential-8x8-multiplier,665520916,Verilog,Sequential-8x8-multiplier,1793,0,2023-07-12 11:49:03+00:00,[],None
187,https://github.com/rorollman/ComputerArchitecture.git,2023-07-12 15:08:55+00:00,Code and assignments for Computer Architecture class taken at Texas State.,0,rorollman/ComputerArchitecture,665603552,Verilog,ComputerArchitecture,1866,0,2023-07-12 15:29:12+00:00,[],None
188,https://github.com/aditya-142/intelunnati_teamspark.git,2023-07-14 15:32:56+00:00,Repository for submission of intel unnati industrial trainning project,0,aditya-142/intelunnati_teamspark,666465983,Verilog,intelunnati_teamspark,10044,0,2023-08-21 15:22:51+00:00,[],None
189,https://github.com/tgupta10/VSD_HDP.git,2023-07-23 02:06:45+00:00,,0,tgupta10/VSD_HDP,669654969,Verilog,VSD_HDP,36094,0,2023-09-22 13:10:18+00:00,[],None
190,https://github.com/Arham-git/NNProject.git,2023-07-17 17:11:19+00:00,,0,Arham-git/NNProject,667512264,Verilog,NNProject,3055,0,2023-07-17 17:18:45+00:00,[],None
191,https://github.com/LucasLeipnitz/VVC_Intra_Prediction_Accelerator.git,2023-07-18 06:54:41+00:00,VVC Intra Prediction Accelerator in VHDL and Verilog,0,LucasLeipnitz/VVC_Intra_Prediction_Accelerator,667722941,Verilog,VVC_Intra_Prediction_Accelerator,1219,0,2023-08-31 17:33:27+00:00,[],None
192,https://github.com/hdtr23/vlsi_20222_csv_g19.git,2023-07-09 16:48:34+00:00,,0,hdtr23/vlsi_20222_csv_g19,664333597,Verilog,vlsi_20222_csv_g19,1241,0,2023-07-09 17:04:31+00:00,[],None
193,https://github.com/Tesla9000/Proccessor.git,2023-07-12 15:24:53+00:00,,1,Tesla9000/Proccessor,665609898,Verilog,Proccessor,27,0,2023-07-12 15:25:42+00:00,[],None
194,https://github.com/Kmg13teen/RISCV_verilog.git,2023-07-08 16:48:34+00:00,,0,Kmg13teen/RISCV_verilog,664002664,Verilog,RISCV_verilog,108,0,2023-07-08 16:48:56+00:00,[],None
195,https://github.com/yang151-bit/tang20k-usb-HS.git,2023-07-13 10:04:44+00:00,tang20k usb-serial video,0,yang151-bit/tang20k-usb-HS,665927744,Verilog,tang20k-usb-HS,1970,0,2023-07-13 14:29:23+00:00,[],None
196,https://github.com/gowdy88/Vehicle-TailLight-System.git,2023-07-11 07:15:09+00:00,Implemented a Vehicle Tail-Light System on FPGA,0,gowdy88/Vehicle-TailLight-System,664980796,Verilog,Vehicle-TailLight-System,3,0,2023-07-11 07:20:49+00:00,[],None
197,https://github.com/SamuelCripps/alarm_clock.git,2023-07-13 07:04:58+00:00,,0,SamuelCripps/alarm_clock,665862104,Verilog,alarm_clock,3,0,2023-07-13 07:07:29+00:00,[],None
198,https://github.com/Sujay001coder/Vending_machine.git,2023-07-13 07:39:44+00:00,,0,Sujay001coder/Vending_machine,665874618,Verilog,Vending_machine,6,0,2023-07-13 08:19:42+00:00,[],None
199,https://github.com/Deepanshu18099/CS220-Project.git,2023-07-13 12:22:37+00:00,,0,Deepanshu18099/CS220-Project,665975369,Verilog,CS220-Project,21,0,2023-08-10 17:16:17+00:00,[],None
200,https://github.com/PRAGATI-0102/PWM-Day-092-.git,2023-07-10 18:07:52+00:00,Pulse Width Modulation is a technique used to control the average power delivered to a load by varying the width of the pulses in a periodic signal.,0,PRAGATI-0102/PWM-Day-092-,664774870,Verilog,PWM-Day-092-,84,0,2023-07-10 18:08:38+00:00,[],None
201,https://github.com/markthumes/lcd2.git,2023-07-09 15:33:19+00:00,HD44780U/1602A Verilog LCD Driver,0,markthumes/lcd2,664312545,Verilog,lcd2,3,0,2023-07-09 16:15:01+00:00,[],None
202,https://github.com/vendraDp/Dual-Clock-Asynchronous-FIFO.git,2023-07-14 11:03:01+00:00,,0,vendraDp/Dual-Clock-Asynchronous-FIFO,666375079,Verilog,Dual-Clock-Asynchronous-FIFO,5415,0,2023-07-14 11:07:22+00:00,[],None
203,https://github.com/Broccoli2098/Car-Parking-System.git,2023-07-13 17:49:59+00:00,,0,Broccoli2098/Car-Parking-System,666097602,Verilog,Car-Parking-System,202,0,2023-07-13 18:05:05+00:00,[],None
204,https://github.com/awasthi2003/ICHIP-23-PS1.git,2023-07-15 11:27:42+00:00,,0,awasthi2003/ICHIP-23-PS1,666727346,Verilog,ICHIP-23-PS1,318,0,2023-07-15 11:29:50+00:00,[],None
205,https://github.com/awasthi2003/ICHIP-23-PS2.git,2023-07-15 11:22:16+00:00,,0,awasthi2003/ICHIP-23-PS2,666726077,Verilog,ICHIP-23-PS2,281,0,2023-07-15 11:23:16+00:00,[],None
206,https://github.com/abhi-ab19/Wallace_32-multiplication.git,2023-07-09 10:34:16+00:00,This is one of the best type of multiplication but it doesn't perform for negative values. To perform for negative values the 2's compliment method has to used before sending has an input.,0,abhi-ab19/Wallace_32-multiplication,664233948,Verilog,Wallace_32-multiplication,6,0,2023-08-24 18:32:57+00:00,[],None
207,https://github.com/MuhammedMado/SequenceDetectorMOORE.git,2023-07-14 12:39:10+00:00,Sequence Detector MOORE machine (Verilog Code).,0,MuhammedMado/SequenceDetectorMOORE,666405170,Verilog,SequenceDetectorMOORE,99,0,2023-07-14 14:46:49+00:00,[],None
208,https://github.com/udaychauhan293/Digital_Locker.git,2023-07-18 15:58:10+00:00,,0,udaychauhan293/Digital_Locker,667925886,Verilog,Digital_Locker,3,0,2023-07-18 15:59:22+00:00,[],None
209,https://github.com/JimCie/ASIC_Algebra_Examples.git,2023-07-18 08:44:20+00:00,small examples of linear algebra for the ASIC project,0,JimCie/ASIC_Algebra_Examples,667762217,Verilog,ASIC_Algebra_Examples,6,0,2023-07-20 08:47:55+00:00,[],None
210,https://github.com/AliMaher15/Single-Cycle-MIPS-Design-Verilog.git,2023-07-17 10:30:09+00:00,,0,AliMaher15/Single-Cycle-MIPS-Design-Verilog,667361400,Verilog,Single-Cycle-MIPS-Design-Verilog,1207,0,2023-07-17 10:31:53+00:00,[],None
211,https://github.com/wanakiki/HDLBits_solution.git,2023-07-17 11:54:16+00:00,,0,wanakiki/HDLBits_solution,667390494,Verilog,HDLBits_solution,18,0,2023-07-17 11:58:12+00:00,[],None
212,https://github.com/Moaz-Helmy/SPI-Communication-Protocol.git,2023-07-18 23:48:08+00:00,,0,Moaz-Helmy/SPI-Communication-Protocol,668058909,Verilog,SPI-Communication-Protocol,420,0,2023-08-01 16:47:45+00:00,[],None
213,https://github.com/Yash0147/intelunnati_yash.git,2023-07-11 11:54:50+00:00,,0,Yash0147/intelunnati_yash,665083235,Verilog,intelunnati_yash,990,0,2023-07-17 06:07:24+00:00,[],None
214,https://github.com/feipenghhq/Verilog-Adder.git,2023-07-12 05:08:36+00:00,,0,feipenghhq/Verilog-Adder,665385569,Verilog,Verilog-Adder,2462,0,2023-09-21 04:45:31+00:00,[],https://api.github.com/licenses/mit
215,https://github.com/Vasu2706/Pulse-Width-Modulated-Shift-Register.git,2023-07-16 12:28:58+00:00,,0,Vasu2706/Pulse-Width-Modulated-Shift-Register,667034625,Verilog,Pulse-Width-Modulated-Shift-Register,2,0,2023-07-16 12:29:32+00:00,[],None
216,https://github.com/shanyaobuhaochi/single-cycle-CPU.git,2023-07-24 12:19:31+00:00,计算机组成原理-实验作业,0,shanyaobuhaochi/single-cycle-CPU,670156529,Verilog,single-cycle-CPU,415,0,2023-07-24 12:58:10+00:00,[],None
217,https://github.com/Eyantra698Sumanto/Caravel-AI-RISCV-Timer.git,2023-07-21 18:25:08+00:00,,0,Eyantra698Sumanto/Caravel-AI-RISCV-Timer,669255805,Verilog,Caravel-AI-RISCV-Timer,78432,0,2023-07-21 18:26:26+00:00,[],https://api.github.com/licenses/apache-2.0
218,https://github.com/NickolayTernovoy/green_v_fpu_posit.git,2023-07-20 21:39:15+00:00,,0,NickolayTernovoy/green_v_fpu_posit,668901190,Verilog,green_v_fpu_posit,35294,0,2023-07-20 21:40:10+00:00,[],https://api.github.com/licenses/apache-2.0
219,https://github.com/Manoz790/Verilog_Codes.git,2023-07-23 20:06:24+00:00,,0,Manoz790/Verilog_Codes,669904700,Verilog,Verilog_Codes,320,0,2023-07-23 20:11:20+00:00,[],None
220,https://github.com/gcoimbra/mips_pipeline.git,2023-07-20 01:47:29+00:00,A simple MIPS with pipeline and cache implemented in Verilog,0,gcoimbra/mips_pipeline,668510088,Verilog,mips_pipeline,15,0,2023-07-20 01:48:52+00:00,[],None
221,https://github.com/TakiTanii/study.git,2023-07-24 06:39:59+00:00,,0,TakiTanii/study,670034329,Verilog,study,10,0,2023-07-24 06:48:28+00:00,[],None
222,https://github.com/gsuni/-MUSICAL-NOTES-using-Verilog-on-FPGA-board.git,2023-07-22 12:13:30+00:00,,0,gsuni/-MUSICAL-NOTES-using-Verilog-on-FPGA-board,669479117,Verilog,-MUSICAL-NOTES-using-Verilog-on-FPGA-board,1,0,2023-07-22 12:18:02+00:00,[],None
223,https://github.com/shreyanssoni/RISC-V-Pipeline-Processor.git,2023-07-24 15:23:56+00:00,,0,shreyanssoni/RISC-V-Pipeline-Processor,670232174,Verilog,RISC-V-Pipeline-Processor,8,0,2023-07-24 15:24:42+00:00,[],None
224,https://github.com/shanyaobuhaochi/5stage-pipeline-CPU.git,2023-07-24 15:44:38+00:00,计算机组成原理-课程设计,0,shanyaobuhaochi/5stage-pipeline-CPU,670240397,Verilog,5stage-pipeline-CPU,967,0,2023-07-24 15:46:36+00:00,[],None
225,https://github.com/KINGNANSON/Verilog_codes.git,2023-07-18 20:38:20+00:00,Contains Verilog codes for combinational and sequential circuits and some minor projects ,0,KINGNANSON/Verilog_codes,668018957,Verilog,Verilog_codes,3110,0,2023-07-18 21:14:22+00:00,[],https://api.github.com/licenses/gpl-3.0
226,https://github.com/gunavant-s/8X3_ENCODER_Day-006.git,2023-07-25 01:22:35+00:00,The binary encoder is the combinational circuit which converts the input binary information into the binary code. The Encoder has N outputs and 2^N or fewer inputs. ,0,gunavant-s/8X3_ENCODER_Day-006,670400669,Verilog,8X3_ENCODER_Day-006,596,0,2023-07-25 01:23:09+00:00,[],None
227,https://github.com/Prathyushakorepu/VLSI.git,2023-07-25 06:51:00+00:00,,0,Prathyushakorepu/VLSI,670484728,Verilog,VLSI,135,0,2023-07-25 06:52:30+00:00,[],None
228,https://github.com/prajjwaljoshi/Washing_Machine.git,2023-07-12 11:41:42+00:00,,0,prajjwaljoshi/Washing_Machine,665520636,Verilog,Washing_Machine,1304,0,2023-07-12 11:42:56+00:00,[],None
229,https://github.com/C-YuLong/PAM.git,2023-07-14 04:30:02+00:00,the open-source code of Permutation-Based Approximate Multiplier with High Accuracy,0,C-YuLong/PAM,666253942,Verilog,PAM,403,0,2023-07-14 05:47:49+00:00,[],None
230,https://github.com/mohum1/Harman_Kyunggi.git,2023-07-14 00:16:01+00:00,,0,mohum1/Harman_Kyunggi,666196476,Verilog,Harman_Kyunggi,21,0,2023-09-26 03:58:43+00:00,[],None
231,https://github.com/daniel-karunya/intelunnati_TheDataGuy.git,2023-07-13 17:44:17+00:00,Team: The Data Guy - Design and Implementation of slow and fast division algorithms in Computer Architecture,0,daniel-karunya/intelunnati_TheDataGuy,666095686,Verilog,intelunnati_TheDataGuy,5540,0,2023-07-19 11:38:37+00:00,[],None
232,https://github.com/Vishnusan58/TechTitans_Rajalakshmi_institute_of-_technology_Figo_fsm.git,2023-07-14 05:39:33+00:00,,0,Vishnusan58/TechTitans_Rajalakshmi_institute_of-_technology_Figo_fsm,666271145,Verilog,TechTitans_Rajalakshmi_institute_of-_technology_Figo_fsm,2571,0,2023-07-22 11:50:46+00:00,[],None
233,https://github.com/Swaran2003/Traffic-Light-Controller-.git,2023-07-14 15:56:30+00:00,,0,Swaran2003/Traffic-Light-Controller-,666473925,Verilog,Traffic-Light-Controller-,2,0,2023-07-14 16:04:15+00:00,[],None
234,https://github.com/Simran16702/smart_car_parking_system.git,2023-07-11 13:31:14+00:00,Designed and implemented a password‐controlled car parking system using Verilog HDL.,0,Simran16702/smart_car_parking_system,665120200,Verilog,smart_car_parking_system,3,0,2023-07-11 13:32:15+00:00,[],None
235,https://github.com/vdagar2211/1x8-dimultiplexer.git,2023-07-08 11:56:47+00:00,,0,vdagar2211/1x8-dimultiplexer,663903728,Verilog,1x8-dimultiplexer,1,0,2023-07-08 11:58:28+00:00,[],None
236,https://github.com/HayatoKimura22/Caravel_1st.git,2023-07-11 09:32:02+00:00,,0,HayatoKimura22/Caravel_1st,665030991,Verilog,Caravel_1st,35290,0,2023-07-11 09:32:59+00:00,[],https://api.github.com/licenses/apache-2.0
237,https://github.com/joshithamarripudi/Single_Cycle_RISC-V_Processor.git,2023-07-11 08:30:33+00:00,,0,joshithamarripudi/Single_Cycle_RISC-V_Processor,665007360,Verilog,Single_Cycle_RISC-V_Processor,8,0,2023-07-11 08:41:23+00:00,[],None
238,https://github.com/PRAGATI-0102/Barrel-Shifter-Day-093-.git,2023-07-11 17:56:07+00:00,"A Barrel Shifter is a digital circuit that performs shifting of binary data in a parallel manner, allowing for efficient and fast shifting operations.",0,PRAGATI-0102/Barrel-Shifter-Day-093-,665220434,Verilog,Barrel-Shifter-Day-093-,96,0,2023-07-11 17:58:16+00:00,[],None
239,https://github.com/MuhammedMado/8-bit-ALU.git,2023-07-16 16:14:00+00:00,8-bit Arithmetic Logic Unit (ALU) using full adders (Verilog Code).,0,MuhammedMado/8-bit-ALU,667095703,Verilog,8-bit-ALU,2,0,2023-07-16 16:16:07+00:00,[],None
240,https://github.com/Deadlyflamemaster/CSE_BUBBLE.git,2023-07-16 17:30:23+00:00,,0,Deadlyflamemaster/CSE_BUBBLE,667115797,Verilog,CSE_BUBBLE,162,0,2023-07-16 19:29:06+00:00,[],None
241,https://github.com/angelocguerra/csarch1-hdl2.git,2023-07-17 06:58:03+00:00,CSARCH1 Major Course Output 2: HDL Project 2,0,angelocguerra/csarch1-hdl2,667285282,Verilog,csarch1-hdl2,31,0,2023-07-24 01:55:58+00:00,[],None
242,https://github.com/yamichanCTL/MIPS.git,2023-07-17 06:17:41+00:00,,0,yamichanCTL/MIPS,667272050,Verilog,MIPS,14,0,2023-07-17 06:36:42+00:00,[],None
243,https://github.com/roshanrjohn369/intelunnati_ERROR404.git,2023-07-13 05:04:08+00:00,,0,roshanrjohn369/intelunnati_ERROR404,665825584,Verilog,intelunnati_ERROR404,1396,0,2023-07-19 13:51:53+00:00,[],None
244,https://github.com/sjohnatas7/ProjetoSD.git,2023-07-11 23:40:26+00:00,Este projeto consiste na implementação de um Conversor Analógico para Digital (ADC) do tipo rampa dupla  e um contador BCD utilizando a linguagem de descrição de hardware (HDL) para a disciplina de Sistemas Digitais.,0,sjohnatas7/ProjetoSD,665310345,Verilog,ProjetoSD,1261,0,2023-07-18 15:37:25+00:00,[],None
245,https://github.com/wrs225/SHA-256-AI.git,2023-07-08 18:17:37+00:00,,0,wrs225/SHA-256-AI,664029580,Verilog,SHA-256-AI,35429,0,2023-07-08 18:18:28+00:00,[],https://api.github.com/licenses/apache-2.0
246,https://github.com/haoranx98/ahb-to-apb.git,2023-07-22 06:43:32+00:00,,0,haoranx98/ahb-to-apb,669400505,Verilog,ahb-to-apb,8,0,2023-07-22 06:49:15+00:00,[],None
247,https://github.com/Hanyoung-Park/BW_DigitalLogicDesign.git,2023-07-22 06:59:54+00:00,,0,Hanyoung-Park/BW_DigitalLogicDesign,669404262,Verilog,BW_DigitalLogicDesign,1,0,2023-07-22 07:05:12+00:00,[],None
248,https://github.com/KevinCodePlace/NYCU_Computer_Organization_2023Summer.git,2023-07-22 06:20:38+00:00,,0,KevinCodePlace/NYCU_Computer_Organization_2023Summer,669395444,Verilog,NYCU_Computer_Organization_2023Summer,2461,0,2023-08-17 03:26:35+00:00,[],None
249,https://github.com/SindhujaMendu/intelunnati_innovotech.git,2023-07-15 10:50:11+00:00,,0,SindhujaMendu/intelunnati_innovotech,666718386,Verilog,intelunnati_innovotech,606,0,2023-07-21 05:47:04+00:00,[],None
250,https://github.com/ahmadrmirzaei/Lander-Fischer-Adder.git,2023-07-15 11:22:47+00:00,Here I designed a Ladner Fischer Adder in verilog language.,0,ahmadrmirzaei/Lander-Fischer-Adder,666726189,Verilog,Lander-Fischer-Adder,2,0,2023-07-15 11:35:38+00:00,[],None
251,https://github.com/devangita/MIPS-32-Processor-using-Verilog.git,2023-07-20 16:56:33+00:00,,0,devangita/MIPS-32-Processor-using-Verilog,668818664,Verilog,MIPS-32-Processor-using-Verilog,1,0,2023-07-20 16:59:02+00:00,[],None
252,https://github.com/chai-kat/de10-lite-drivers.git,2023-07-16 20:37:25+00:00,Making a monorepo to put a few controllers for devices on the DE10-Lite board,0,chai-kat/de10-lite-drivers,667157764,Verilog,de10-lite-drivers,13944,0,2023-08-25 09:12:20+00:00,[],None
253,https://github.com/Mahima-150/i_chip.git,2023-07-24 07:35:18+00:00,,0,Mahima-150/i_chip,670053386,Verilog,i_chip,16,0,2023-08-06 13:09:34+00:00,[],https://api.github.com/licenses/gpl-2.0
254,https://github.com/Moaz-Helmy/PWM-Generator.git,2023-07-24 13:15:10+00:00,Digital implementation of PWM Generator using Verilog HDL,0,Moaz-Helmy/PWM-Generator,670178754,Verilog,PWM-Generator,402,0,2023-07-25 06:14:18+00:00,[],None
255,https://github.com/rfreeze/https-github.com-Practical-UVM-Step-By-Step-Practical-UVM-IEEE-Edition-activity-ref-master.git,2023-07-24 20:27:49+00:00,,0,rfreeze/https-github.com-Practical-UVM-Step-By-Step-Practical-UVM-IEEE-Edition-activity-ref-master,670336209,Verilog,https-github.com-Practical-UVM-Step-By-Step-Practical-UVM-IEEE-Edition-activity-ref-master,21390,0,2023-07-24 20:30:39+00:00,[],None
256,https://github.com/AlanPonnachan/Carryselect-ripple-adder.git,2023-07-24 13:56:55+00:00,,0,AlanPonnachan/Carryselect-ripple-adder,670195799,Verilog,Carryselect-ripple-adder,55,0,2023-07-24 13:58:38+00:00,[],None
257,https://github.com/engrvip123/inverter_flow_test.git,2023-07-21 11:05:05+00:00,tool flow and wrapper setup ,0,engrvip123/inverter_flow_test,669107651,Verilog,inverter_flow_test,35294,0,2023-07-21 11:05:56+00:00,[],https://api.github.com/licenses/apache-2.0
258,https://github.com/akshayrajMR95/Datapath_controller_design.git,2023-07-19 06:17:50+00:00,The hardware way of thinking while designing (in verilog) a complex digital circuit,0,akshayrajMR95/Datapath_controller_design,668147199,Verilog,Datapath_controller_design,15,0,2023-07-19 06:29:47+00:00,[],None
259,https://github.com/gunavant-s/Half_Adder_Day-001.git,2023-07-20 02:00:14+00:00,Half adder is a combinational circuit. It performs the binary addition operation of two 1-bit binary digits.,0,gunavant-s/Half_Adder_Day-001,668513063,Verilog,Half_Adder_Day-001,41,0,2023-07-21 23:59:17+00:00,[],None
260,https://github.com/Shinhyundo/Convergent_Capstone_Design1.git,2023-07-19 18:18:15+00:00,,0,Shinhyundo/Convergent_Capstone_Design1,668405228,Verilog,Convergent_Capstone_Design1,1588,0,2023-07-19 18:21:49+00:00,[],None
261,https://github.com/rahulverma00/Verilog.git,2023-07-19 23:29:23+00:00,,0,rahulverma00/Verilog,668483406,Verilog,Verilog,44,0,2023-07-19 23:30:32+00:00,[],None
262,https://github.com/harshaksachdeva/ALU-Design.git,2023-07-18 14:51:36+00:00,,0,harshaksachdeva/ALU-Design,667899667,Verilog,ALU-Design,3,0,2023-07-18 15:02:08+00:00,[],None
263,https://github.com/RudraKumar1218/MIPS32-Processor.git,2023-07-18 12:57:52+00:00,,0,RudraKumar1218/MIPS32-Processor,667853637,Verilog,MIPS32-Processor,2,0,2023-07-18 12:58:17+00:00,[],None
264,https://github.com/inc-code-42/gift-128-design-in-verilog.git,2023-07-18 16:02:20+00:00,gift 128,0,inc-code-42/gift-128-design-in-verilog,667927371,Verilog,gift-128-design-in-verilog,11,0,2023-07-18 16:04:34+00:00,[],None
265,https://github.com/Steve-Asham/RISC-V_CONT.git,2023-07-23 03:50:45+00:00,,0,Steve-Asham/RISC-V_CONT,669670998,Verilog,RISC-V_CONT,0,0,2023-07-23 03:51:09+00:00,[],None
266,https://github.com/Mashiro96/dsp_dac.git,2023-07-23 11:12:46+00:00,,0,Mashiro96/dsp_dac,669767378,Verilog,dsp_dac,187,0,2023-07-23 11:59:57+00:00,[],None
267,https://github.com/aadhilmeeran2843/intelunnati_THE_HINTONS.git,2023-07-12 15:19:35+00:00,"Hi ! my name is Aadhil Ahamed Meeran from the BSA Crescent university . This repository contains the comprehensive report summarizing my valuable training experience, including project details, achievements, and key learnings.",0,aadhilmeeran2843/intelunnati_THE_HINTONS,665607784,Verilog,intelunnati_THE_HINTONS,53244,0,2024-03-13 05:25:13+00:00,[],None
268,https://github.com/Chen-gz233/verilog.git,2023-07-24 09:13:06+00:00,,0,Chen-gz233/verilog,670088487,Verilog,verilog,31,0,2023-08-01 06:51:34+00:00,[],None
269,https://github.com/Harsha-Jangamani/I2C_CDAC.git,2023-07-17 12:54:06+00:00,,0,Harsha-Jangamani/I2C_CDAC,667412590,Verilog,I2C_CDAC,11,0,2024-04-12 15:30:54+00:00,[],None
270,https://github.com/shourya-trikha-12/CSE-BUBBLE.git,2023-07-13 21:21:31+00:00,,0,shourya-trikha-12/CSE-BUBBLE,666160594,Verilog,CSE-BUBBLE,142,0,2023-07-13 23:03:37+00:00,[],None
271,https://github.com/PRAGATI-0102/Baud-Generator-Day-094-.git,2023-07-12 17:12:30+00:00,"The Baud Rate Generator synchronises the data transfer by generating the appropriate clock frequency for the UART communication. It determines the speed at which data is transmitted between devices, commonly known as the baud rate.",0,PRAGATI-0102/Baud-Generator-Day-094-,665648384,Verilog,Baud-Generator-Day-094-,134,0,2023-07-12 17:16:10+00:00,[],None
272,https://github.com/pavangnaik/intelunnati_smar-tech.git,2023-07-14 12:22:56+00:00,,0,pavangnaik/intelunnati_smar-tech,666400118,Verilog,intelunnati_smar-tech,14072,0,2023-07-20 05:32:22+00:00,[],None
273,https://github.com/SaiLLV/UART-using-Verilog.git,2023-07-16 05:44:49+00:00,,0,SaiLLV/UART-using-Verilog,666945134,Verilog,UART-using-Verilog,5,0,2023-07-19 03:49:49+00:00,[],None
274,https://github.com/KingsleyHng/8-Bit-Binary-Divider.git,2023-07-16 15:07:38+00:00,,0,KingsleyHng/8-Bit-Binary-Divider,667077137,Verilog,8-Bit-Binary-Divider,108,0,2023-07-16 15:23:47+00:00,[],None
275,https://github.com/JheelMak/Adders.git,2023-07-18 12:20:31+00:00,,0,JheelMak/Adders,667839821,Verilog,Adders,523,0,2023-07-18 12:56:47+00:00,[],None
276,https://github.com/lohjooh/ee2026.git,2023-07-13 02:37:02+00:00,Verilog final project for EE2026,0,lohjooh/ee2026,665790259,Verilog,ee2026,50414,0,2023-07-13 02:42:56+00:00,[],None
277,https://github.com/Sushil-star/SAP-1-FPGA.git,2023-07-13 04:05:13+00:00,,0,Sushil-star/SAP-1-FPGA,665811442,Verilog,SAP-1-FPGA,6,0,2023-07-13 04:07:41+00:00,[],https://api.github.com/licenses/apache-2.0
278,https://github.com/Rayan-git-hub/Verilog-Project.git,2023-07-14 17:05:02+00:00,,0,Rayan-git-hub/Verilog-Project,666495512,Verilog,Verilog-Project,4868,0,2023-07-15 18:55:56+00:00,[],None
279,https://github.com/Huihaojia/URISC.git,2023-07-18 17:17:33+00:00,A simple RISC realization,0,Huihaojia/URISC,667955020,Verilog,URISC,9,0,2023-07-19 03:04:40+00:00,[],None
280,https://github.com/luizeduardoreis/UnicicloMIPS.git,2023-07-10 20:09:54+00:00,,0,luizeduardoreis/UnicicloMIPS,664814755,Verilog,UnicicloMIPS,94,0,2023-07-10 21:24:30+00:00,[],None
281,https://github.com/fathy-eladle/Uart.git,2023-07-19 16:24:13+00:00,,0,fathy-eladle/Uart,668366007,Verilog,Uart,5,0,2023-07-19 16:27:38+00:00,[],None
282,https://github.com/JagritThapar/SIT329.git,2023-07-22 08:50:36+00:00,,0,JagritThapar/SIT329,669430113,Verilog,SIT329,133,0,2023-10-06 06:36:18+00:00,[],None
283,https://github.com/beastbybirth/FPGA-blink_led.git,2023-07-21 13:50:21+00:00,,0,beastbybirth/FPGA-blink_led,669162862,Verilog,FPGA-blink_led,0,0,2023-07-21 13:53:28+00:00,[],None
284,https://github.com/sventhijssen/xsat.git,2023-07-21 16:54:17+00:00,,0,sventhijssen/xsat,669227670,Verilog,xsat,35539,0,2023-08-13 18:49:48+00:00,[],https://api.github.com/licenses/apache-2.0
285,https://github.com/umarcis/TempSensorSystem.git,2023-07-20 12:37:29+00:00,a temperature monitoring system that utilizes an FPGA with a built-in temperature sensor (ADT7420) to access temperature data. The system uses the I2C protocol to communicate with the sensor.,0,umarcis/TempSensorSystem,668714722,Verilog,TempSensorSystem,801,0,2023-07-20 12:42:41+00:00,[],https://api.github.com/licenses/apache-2.0
286,https://github.com/Adarsh983/4-Bit-Frequency-Divider.git,2023-07-19 13:28:10+00:00,,0,Adarsh983/4-Bit-Frequency-Divider,668297358,Verilog,4-Bit-Frequency-Divider,6,0,2023-07-22 17:34:36+00:00,[],None
287,https://github.com/caovi797/PerlProgamming.git,2023-07-19 10:02:06+00:00,,0,caovi797/PerlProgamming,668223902,Verilog,PerlProgamming,39,0,2023-07-19 10:02:19+00:00,[],None
288,https://github.com/XinyueMa0847/RISC-V-projects.git,2023-07-21 10:08:04+00:00,Course projects for Computer Architecture ,0,XinyueMa0847/RISC-V-projects,669089247,Verilog,RISC-V-projects,1526,0,2023-07-21 10:10:27+00:00,[],None
289,https://github.com/yannickreiss/TT04-MPU.git,2023-07-22 11:16:55+00:00,,0,yannickreiss/TT04-MPU,669465253,Verilog,TT04-MPU,25,0,2023-07-22 11:18:20+00:00,[],https://api.github.com/licenses/apache-2.0
290,https://github.com/JeyasreeRK/VLSI.git,2023-07-24 07:57:40+00:00,,0,JeyasreeRK/VLSI,670061188,Verilog,VLSI,714,0,2023-07-24 07:58:02+00:00,[],None
291,https://github.com/mohamedsalah64792/ASIC-implementation-of-PULPINO.git,2023-07-26 20:42:28+00:00,,0,mohamedsalah64792/ASIC-implementation-of-PULPINO,671225210,Verilog,ASIC-implementation-of-PULPINO,3189,0,2023-07-26 20:46:17+00:00,[],None
292,https://github.com/gdimitrak/Bulls-and-Cows.git,2023-07-26 15:00:09+00:00,,0,gdimitrak/Bulls-and-Cows,671109858,Verilog,Bulls-and-Cows,260,0,2023-07-26 15:03:14+00:00,[],https://api.github.com/licenses/apache-2.0
293,https://github.com/DouglasWWolf/sidewinder_udpgen.git,2023-07-26 06:30:50+00:00,UDP Packet Generator for Sidewinder,0,DouglasWWolf/sidewinder_udpgen,670923884,Verilog,sidewinder_udpgen,26584,0,2023-07-30 00:33:29+00:00,[],None
294,https://github.com/AfshinKI/FPGAwith100Projects.git,2023-07-10 02:40:15+00:00,,0,AfshinKI/FPGAwith100Projects,664454803,Verilog,FPGAwith100Projects,279,0,2023-07-10 05:07:38+00:00,[],None
295,https://github.com/pritish2439/Parking-System-project.git,2023-07-08 05:41:16+00:00,A simple project using Verilog where there are five parking slots available. According to the number of parking space available the 7 segment display shows FULL or OPEn and the incoming vehicle can know if there is any parking space available in the system.,0,pritish2439/Parking-System-project,663793394,Verilog,Parking-System-project,2,0,2023-07-08 05:43:49+00:00,[],None
296,https://github.com/ItteRevanth/Design_of_32-bit_RISC_Processor.git,2023-07-12 06:20:31+00:00,,0,ItteRevanth/Design_of_32-bit_RISC_Processor,665406775,Verilog,Design_of_32-bit_RISC_Processor,4338,0,2023-07-12 11:38:42+00:00,[],None
297,https://github.com/jayfeather9/BUAA_CO_Proj.git,2023-07-11 13:00:53+00:00,"BUAA CO class in 2022, MIPS CPU from P4 to P7 with P3 circuit included",0,jayfeather9/BUAA_CO_Proj,665108189,Verilog,BUAA_CO_Proj,9345,0,2023-07-11 13:04:36+00:00,[],None
298,https://github.com/TarunkumarKondala/Traffic-Light-Controller.git,2023-07-11 18:03:07+00:00,,0,TarunkumarKondala/Traffic-Light-Controller,665222809,Verilog,Traffic-Light-Controller,65,0,2023-07-11 18:07:15+00:00,[],None
299,https://github.com/Shinhyundo/16bit_CLA.git,2023-07-24 18:39:12+00:00,16bit CLA using 4bit CLA,0,Shinhyundo/16bit_CLA,670303117,Verilog,16bit_CLA,15,0,2023-07-24 18:44:08+00:00,[],None
300,https://github.com/deyh2020/braggnn_fpga.git,2023-07-21 06:35:05+00:00,,0,deyh2020/braggnn_fpga,669016673,,braggnn_fpga,15828,0,2023-12-11 11:05:42+00:00,[],None
301,https://github.com/AhmedOsama2000/DIG_CLOCK.git,2023-07-24 09:27:57+00:00,,0,AhmedOsama2000/DIG_CLOCK,670093877,Verilog,DIG_CLOCK,31,0,2023-07-24 09:31:39+00:00,[],None
302,https://github.com/map0te/dsp_fu.git,2023-07-13 20:05:41+00:00,,0,map0te/dsp_fu,666139962,Verilog,dsp_fu,10,0,2023-08-12 01:13:44+00:00,[],None
303,https://github.com/theHDLguy/UART.git,2023-07-13 11:55:49+00:00,,0,theHDLguy/UART,665965612,Verilog,UART,499,0,2023-07-23 10:56:44+00:00,[],None
304,https://github.com/sindhuk95/TCL_WORKSHOP_VSD.git,2023-07-13 12:25:50+00:00,,0,sindhuk95/TCL_WORKSHOP_VSD,665976572,Verilog,TCL_WORKSHOP_VSD,881,0,2023-07-13 12:34:23+00:00,[],None
305,https://github.com/Vincentfzj/MIPI.git,2023-07-18 00:56:57+00:00,,0,Vincentfzj/MIPI,667632241,Verilog,MIPI,46,0,2023-07-18 02:56:25+00:00,[],None
306,https://github.com/Aryaman1528/Vending_Machine.git,2023-07-11 10:03:59+00:00,,0,Aryaman1528/Vending_Machine,665043558,Verilog,Vending_Machine,6,0,2023-07-11 10:08:13+00:00,[],None
307,https://github.com/ziadmali59/Booth_Algorithm.git,2023-07-19 10:51:15+00:00,implemented using verilog based on FSM concepts,0,ziadmali59/Booth_Algorithm,668240561,Verilog,Booth_Algorithm,3,0,2023-07-19 10:53:09+00:00,[],None
308,https://github.com/priyarajammalr/PROJECT.git,2023-07-19 09:07:34+00:00,FPGA REALIZATION OF FFT COMPUTATION,0,priyarajammalr/PROJECT,668204273,Verilog,PROJECT,91,0,2023-07-20 05:17:12+00:00,[],None
309,https://github.com/Matheuslr/MIPS_ULA.git,2023-07-23 00:01:41+00:00,,0,Matheuslr/MIPS_ULA,669637876,Verilog,MIPS_ULA,6,0,2023-07-23 00:05:53+00:00,[],None
310,https://github.com/thereversed/seven_seg_counter.git,2023-07-22 05:41:33+00:00,,0,thereversed/seven_seg_counter,669386485,Verilog,seven_seg_counter,2,0,2023-07-22 05:44:43+00:00,[],None
311,https://github.com/mural03krish/RISC-V-RTL-DESIGN.git,2023-07-22 08:40:15+00:00,,0,mural03krish/RISC-V-RTL-DESIGN,669427551,Verilog,RISC-V-RTL-DESIGN,3558,0,2023-07-22 08:50:38+00:00,[],None
312,https://github.com/cojawdvgyj18/cpld_16keyscaner.git,2023-07-26 15:11:59+00:00,"just a cpld 16 key keyboard scaner , using epm3064.",0,cojawdvgyj18/cpld_16keyscaner,671114554,Verilog,cpld_16keyscaner,187,0,2023-07-26 15:15:21+00:00,[],None
313,https://github.com/gowthami-codes/SISOUsingDff.git,2023-07-15 07:58:34+00:00,,0,gowthami-codes/SISOUsingDff,666679529,Verilog,SISOUsingDff,1,0,2023-07-15 07:59:39+00:00,[],None
314,https://github.com/HayatoKimura22/caravel_analog.git,2023-07-15 06:21:00+00:00,,0,HayatoKimura22/caravel_analog,666658091,Verilog,caravel_analog,96,0,2023-07-15 06:21:07+00:00,[],https://api.github.com/licenses/apache-2.0
315,https://github.com/rrquizon1/PRESENT_VERILOG.git,2023-07-15 12:23:11+00:00,Implementation of PRESENT KEY algorithm in verilog submitted as requirements for EE 227,0,rrquizon1/PRESENT_VERILOG,666740961,Verilog,PRESENT_VERILOG,10,0,2023-07-15 12:30:24+00:00,[],None
316,https://github.com/kunandkarina/Computer-Organization.git,2023-07-15 16:45:20+00:00,,0,kunandkarina/Computer-Organization,666810202,Verilog,Computer-Organization,79825,0,2023-07-15 16:52:55+00:00,[],None
317,https://github.com/itsashishrath/SingleCycle.git,2023-07-20 18:07:15+00:00,,0,itsashishrath/SingleCycle,668843545,Verilog,SingleCycle,62,0,2023-07-20 18:12:17+00:00,[],None
318,https://github.com/crazyjack44/FPGA-image-processing.git,2023-07-20 16:20:56+00:00,,0,crazyjack44/FPGA-image-processing,668805871,Verilog,FPGA-image-processing,1,0,2023-07-20 16:22:28+00:00,[],None
319,https://github.com/ruthvikkota/AHP-APB-Bridge.git,2023-07-09 17:36:58+00:00,,0,ruthvikkota/AHP-APB-Bridge,664346628,Verilog,AHP-APB-Bridge,640,0,2023-07-09 17:38:09+00:00,[],None
320,https://github.com/Rashaad10/Cache-and-DRAM-simulation.git,2023-07-10 05:14:45+00:00,Academic Project for implementing cache and dram in verilog hdl,0,Rashaad10/Cache-and-DRAM-simulation,664490223,Verilog,Cache-and-DRAM-simulation,16,0,2023-07-10 05:18:23+00:00,[],None
321,https://github.com/Drashti268/Adders.git,2023-07-18 12:27:44+00:00,,0,Drashti268/Adders,667842337,Verilog,Adders,525,0,2023-07-18 12:35:26+00:00,[],None
322,https://github.com/mcleod-ideafix/carta_ajuste_tve.git,2023-07-22 01:06:06+00:00,"Descripción en Verilog de un diseño digital que genera una imagen en PAL, entrelazada, de la carta de ajuste de TVE",0,mcleod-ideafix/carta_ajuste_tve,669337346,Verilog,carta_ajuste_tve,6022,0,2023-07-22 01:13:30+00:00,[],https://api.github.com/licenses/gpl-3.0
323,https://github.com/nirmal-2004/Bubble_Machine.git,2023-07-13 10:34:22+00:00,,0,nirmal-2004/Bubble_Machine,665937996,Verilog,Bubble_Machine,5,0,2023-07-13 10:42:22+00:00,[],None
324,https://github.com/anjelogana/HDLBitsPractice.git,2023-07-14 23:06:40+00:00,Practicing Verilog! This contains my solution for the website: https://hdlbits.01xz.net/wiki/Main_Page,0,anjelogana/HDLBitsPractice,666585297,Verilog,HDLBitsPractice,28,0,2023-08-21 04:53:13+00:00,[],None
325,https://github.com/xingchizhang/motion_chart.git,2023-07-24 11:59:49+00:00,运动码表,0,xingchizhang/motion_chart,670148854,Verilog,motion_chart,18854,0,2023-07-24 12:00:58+00:00,[],None
326,https://github.com/rf300400/Verilog_stuff.git,2023-07-16 11:58:51+00:00,,0,rf300400/Verilog_stuff,667027304,Verilog,Verilog_stuff,6,0,2023-07-16 12:00:20+00:00,[],None
327,https://github.com/jainnnayush/digital_circuits.git,2023-07-16 12:37:10+00:00,,0,jainnnayush/digital_circuits,667036587,Verilog,digital_circuits,1,0,2023-07-18 13:10:35+00:00,[],None
328,https://github.com/SourajaKundu/Railway-Self-Ticket-Counter.git,2023-07-16 14:37:28+00:00,,0,SourajaKundu/Railway-Self-Ticket-Counter,667068547,Verilog,Railway-Self-Ticket-Counter,9,0,2023-07-17 13:40:42+00:00,[],https://api.github.com/licenses/mit
329,https://github.com/carel009/CS-161L.git,2023-07-15 21:05:39+00:00,,0,carel009/CS-161L,666866255,Verilog,CS-161L,2347,0,2023-07-15 21:07:26+00:00,[],None
330,https://github.com/AmirhosseinChami/RISC-V-processor.git,2023-07-19 13:30:25+00:00,This is a Single Cycle RISC-V processor implemented in verilog,0,AmirhosseinChami/RISC-V-processor,668298280,Verilog,RISC-V-processor,725,0,2023-07-19 14:15:23+00:00,[],https://api.github.com/licenses/mit
331,https://github.com/rithika-susarla/MIPS-Single-Cycle-Processor.git,2023-07-20 04:51:55+00:00,,0,rithika-susarla/MIPS-Single-Cycle-Processor,668553544,Verilog,MIPS-Single-Cycle-Processor,8,0,2023-07-26 14:51:34+00:00,[],None
332,https://github.com/vinisha2709/VLSI.git,2023-07-26 07:44:36+00:00,,0,vinisha2709/VLSI,670949027,Verilog,VLSI,151,0,2023-07-26 07:45:43+00:00,[],None
333,https://github.com/zimgong/VE370.git,2023-07-11 14:02:18+00:00,,0,zimgong/VE370,665133273,Verilog,VE370,43338,0,2023-12-09 21:41:59+00:00,[],None
334,https://github.com/rohith2h2/Asic-Based-Mini-Stereo-Audio-Digital-Processor.git,2023-07-12 20:35:34+00:00,,0,rohith2h2/Asic-Based-Mini-Stereo-Audio-Digital-Processor,665713491,Verilog,Asic-Based-Mini-Stereo-Audio-Digital-Processor,78,0,2024-03-10 19:49:57+00:00,[],None
335,https://github.com/devadutt-github/8-bit-microprocessor-RISC-.git,2023-07-18 17:44:44+00:00,"A Verilog RTL of 8-bit, pipeline based RISC processor",0,devadutt-github/8-bit-microprocessor-RISC-,667964627,Verilog,8-bit-microprocessor-RISC-,93,0,2023-11-10 18:03:15+00:00,[],None
336,https://github.com/ashishpatidar123/Basic-Digital-Logic-Components-in-Verilog.git,2023-07-09 13:07:54+00:00,Contains the verilog code for different digital blocks,0,ashishpatidar123/Basic-Digital-Logic-Components-in-Verilog,664271959,Verilog,Basic-Digital-Logic-Components-in-Verilog,7,0,2023-07-16 14:18:21+00:00,[],None
337,https://github.com/maitri0410/I2C_Implementation-on-FPGA.git,2023-07-09 13:00:03+00:00,,0,maitri0410/I2C_Implementation-on-FPGA,664269836,Verilog,I2C_Implementation-on-FPGA,2665,0,2023-07-09 13:04:40+00:00,[],None
338,https://github.com/Leonardovm2022/ESC.git,2023-07-09 05:07:42+00:00,,0,Leonardovm2022/ESC,664163247,Verilog,ESC,3825,0,2023-07-09 05:10:21+00:00,[],None
339,https://github.com/marwaneltoukhy/dummy_ip2.git,2023-07-09 11:08:10+00:00,,0,marwaneltoukhy/dummy_ip2,664241940,Verilog,dummy_ip2,3673,0,2023-07-09 11:10:05+00:00,[],None
340,https://github.com/Anirudh1731/RiscV-Processor-Verilog.git,2023-07-08 18:40:52+00:00,In this I implemented an entire RISCV processor from scratch. 17 sub blocks of the processor were coded in verilog.,0,Anirudh1731/RiscV-Processor-Verilog,664036136,Verilog,RiscV-Processor-Verilog,124,0,2023-07-08 18:42:31+00:00,[],None
341,https://github.com/srsapireddy/TCL-Automation.git,2023-07-08 06:57:01+00:00,,0,srsapireddy/TCL-Automation,663813525,Verilog,TCL-Automation,1409,0,2023-07-08 21:28:11+00:00,[],https://api.github.com/licenses/mit
342,https://github.com/K-Rakesh200206/SPI_Design_using_verilog.git,2023-07-08 02:33:27+00:00,,0,K-Rakesh200206/SPI_Design_using_verilog,663747182,Verilog,SPI_Design_using_verilog,1010,0,2023-07-08 02:50:41+00:00,[],None
343,https://github.com/aswinsub/RISC-V-RTL-Design.git,2023-07-22 08:40:16+00:00,,0,aswinsub/RISC-V-RTL-Design,669427552,Verilog,RISC-V-RTL-Design,2952,0,2023-07-22 08:50:10+00:00,[],None
344,https://github.com/Sharkawy115/risc-cpu.git,2023-07-22 19:57:03+00:00,,0,Sharkawy115/risc-cpu,669598229,Verilog,risc-cpu,6,0,2023-07-22 20:17:19+00:00,[],None
345,https://github.com/SaiSharanyaVattam/Verilog-based-cordic-algorithm.git,2023-07-23 07:12:59+00:00,,0,SaiSharanyaVattam/Verilog-based-cordic-algorithm,669710993,Verilog,Verilog-based-cordic-algorithm,565,0,2023-07-23 07:48:16+00:00,[],None
346,https://github.com/aradshapira/multi_cycle_processor.git,2023-07-23 08:05:44+00:00,This is a LAB3 project for HUJI digital lab course.  The project contains Verilog code for a multi-cycle processor implementation and the lab report with detailed description. The project is made for Altera Cyclone V FPGA.,0,aradshapira/multi_cycle_processor,669723084,Verilog,multi_cycle_processor,1567,0,2023-07-23 08:07:34+00:00,[],None
347,https://github.com/wavybangsy/CSARCH1-HDL---Logic-Gates-Implementation.git,2023-07-21 02:54:25+00:00,,0,wavybangsy/CSARCH1-HDL---Logic-Gates-Implementation,668963186,Verilog,CSARCH1-HDL---Logic-Gates-Implementation,1,0,2023-07-21 02:56:34+00:00,[],None
348,https://github.com/nestorfranca/Verilog.git,2023-07-19 17:18:09+00:00,,0,nestorfranca/Verilog,668384569,Verilog,Verilog,21,0,2023-07-19 17:32:26+00:00,[],None
349,https://github.com/Kruthikesh/4BitFrequencyDivider.git,2023-07-19 13:28:41+00:00,,0,Kruthikesh/4BitFrequencyDivider,668297573,Verilog,4BitFrequencyDivider,10,0,2023-07-22 17:37:12+00:00,[],None
350,https://github.com/Adham-Sayed/veriiRISC.git,2023-07-20 17:11:29+00:00,,0,Adham-Sayed/veriiRISC,668824067,Verilog,veriiRISC,1166,0,2023-07-20 17:21:18+00:00,[],None
351,https://github.com/Mahmoud-el-sayed/risc.git,2023-07-20 14:35:21+00:00,The VeriRISC model is a very-reduced-instruction-set processor coded in the Verilog HDL. ,0,Mahmoud-el-sayed/risc,668763268,Verilog,risc,10,0,2023-07-20 14:39:08+00:00,[],None
352,https://github.com/wddmznb/liaosiyuan.git,2023-07-14 02:18:13+00:00,用于记录廖思远的学习过程,0,wddmznb/liaosiyuan,666223534,Verilog,liaosiyuan,24820,0,2023-09-30 08:11:09+00:00,[],None
353,https://github.com/Janeq25/Duck_Hunt_MTM.git,2023-07-10 18:36:31+00:00,,0,Janeq25/Duck_Hunt_MTM,664784902,Verilog,Duck_Hunt_MTM,4179,0,2023-08-12 12:51:15+00:00,[],None
354,https://github.com/IoannisIn/lfsr_verilog_altera_de1-soc.git,2023-07-10 21:03:24+00:00,,0,IoannisIn/lfsr_verilog_altera_de1-soc,664829945,Verilog,lfsr_verilog_altera_de1-soc,14770,0,2023-07-10 21:04:42+00:00,[],None
355,https://github.com/Saurabh1709/Verilog.git,2023-07-14 08:08:40+00:00,,0,Saurabh1709/Verilog,666317977,Verilog,Verilog,142,0,2023-07-14 08:19:14+00:00,[],None
356,https://github.com/mattvenn/tt04-vga-clock.git,2023-07-14 13:17:42+00:00,,1,mattvenn/tt04-vga-clock,666418080,Verilog,tt04-vga-clock,342,0,2023-07-14 13:20:22+00:00,[],https://api.github.com/licenses/apache-2.0
357,https://github.com/hu6148/EnigmaEncrytor-Decrytor.git,2023-07-21 11:13:22+00:00,,0,hu6148/EnigmaEncrytor-Decrytor,669110220,Verilog,EnigmaEncrytor-Decrytor,4,0,2023-07-21 11:13:43+00:00,[],None
358,https://github.com/username9896/Task-1.1P-SIT329.git,2023-07-22 11:22:42+00:00,,0,username9896/Task-1.1P-SIT329,669466743,Verilog,Task-1.1P-SIT329,2,0,2023-07-22 11:25:52+00:00,[],None
359,https://github.com/Steve-Asham/Vending_machine.git,2023-07-22 10:36:08+00:00,This is a simple vending machine Verilog code based on FSM,0,Steve-Asham/Vending_machine,669455481,Verilog,Vending_machine,3,0,2023-07-22 10:55:55+00:00,[],None
360,https://github.com/CodeWithAbbas/Quartus_IP.git,2023-07-22 17:05:59+00:00,,0,CodeWithAbbas/Quartus_IP,669558525,Verilog,Quartus_IP,1,0,2023-07-22 17:10:29+00:00,[],None
361,https://github.com/jtss9/Digital-Circuit-Design.git,2023-07-24 08:12:29+00:00,2022 Spring DCD,0,jtss9/Digital-Circuit-Design,670066322,Verilog,Digital-Circuit-Design,38794,0,2023-07-24 08:20:55+00:00,[],None
362,https://github.com/Nithya-21082002/VLSI.git,2023-07-25 07:45:51+00:00,,0,Nithya-21082002/VLSI,670504001,Verilog,VLSI,13,0,2023-07-25 08:19:48+00:00,[],None
363,https://github.com/theiturhs/Implementation-of-Verilog-HDL-Based-32-bit-Processor.git,2023-07-24 17:55:49+00:00,"The algorithm proposes a prototype to design a 32-bit processor. The processor is capable of performing the task which includes fetching the instructions, decoding the instructions to figure out what operation needs to be performed, on what operands it needs to perform and where to store, write, the result obtained.",0,theiturhs/Implementation-of-Verilog-HDL-Based-32-bit-Processor,670288284,Verilog,Implementation-of-Verilog-HDL-Based-32-bit-Processor,6,0,2023-07-24 17:57:12+00:00,[],None
364,https://github.com/Co1dmountain/Sdram_Controller_pro_fifo_axi_plus.git,2023-07-26 07:19:48+00:00,,0,Co1dmountain/Sdram_Controller_pro_fifo_axi_plus,670940360,Verilog,Sdram_Controller_pro_fifo_axi_plus,11535,0,2023-07-26 07:35:26+00:00,[],None
365,https://github.com/manishpundir2207/MIPS-32-Single-cycle-Processor.git,2023-07-25 19:18:17+00:00,,0,manishpundir2207/MIPS-32-Single-cycle-Processor,670760474,Verilog,MIPS-32-Single-cycle-Processor,813,0,2023-07-25 19:28:53+00:00,[],None
366,https://github.com/saiashishanshuman/single_port_ram.git,2023-07-26 14:58:49+00:00,Verilog Code for Single Port Ram.,0,saiashishanshuman/single_port_ram,671109295,Verilog,single_port_ram,41,0,2023-07-26 15:01:30+00:00,[],None
367,https://github.com/TahaTabatabaei/mips-verilog.git,2023-07-26 20:32:48+00:00,Single-cycle and multi-cycle verilog implementation of a subset of MIPS instruction set ,0,TahaTabatabaei/mips-verilog,671222696,Verilog,mips-verilog,1315,0,2023-07-26 20:34:53+00:00,"['mips', 'mips-architecture', 'multi-cycle', 'single-cycle', 'verilog']",None
368,https://github.com/amiralirahimii/Computer-Architecture-Course-Projects-S2023.git,2023-07-21 11:06:29+00:00,,1,amiralirahimii/Computer-Architecture-Course-Projects-S2023,669108096,Verilog,Computer-Architecture-Course-Projects-S2023,1615,0,2024-02-13 15:35:35+00:00,[],None
369,https://github.com/JakeHafele101/FPGA-Library.git,2023-07-09 21:06:07+00:00,"This is a code bank of useful FPGA modules that are apart of all my other projects. This can include modules for FPGA I/O, Serial communication, or useful state machines such as counters.",0,JakeHafele101/FPGA-Library,664394878,Verilog,FPGA-Library,70,0,2024-02-19 01:41:26+00:00,[],None
370,https://github.com/celinec1/Tennis-and-Squash-Simulation.git,2023-07-10 16:48:31+00:00,,1,celinec1/Tennis-and-Squash-Simulation,664746231,Verilog,Tennis-and-Squash-Simulation,20,0,2023-07-18 17:08:15+00:00,[],None
371,https://github.com/Harsh-Murdeshwar/CSE-Bubble.git,2023-07-12 20:13:11+00:00,32-bit single cycle processor implementation using Verilog,0,Harsh-Murdeshwar/CSE-Bubble,665707334,Verilog,CSE-Bubble,5,0,2023-07-12 20:19:35+00:00,[],None
372,https://github.com/Rushywood/CSEBubble-CS220.git,2023-07-16 12:37:25+00:00,,0,Rushywood/CSEBubble-CS220,667036641,Verilog,CSEBubble-CS220,32,0,2023-07-16 12:38:24+00:00,[],None
373,https://github.com/prajjwaljoshi/Round-robin-arbiter-VERILOG.git,2023-07-12 11:34:19+00:00,,0,prajjwaljoshi/Round-robin-arbiter-VERILOG,665517985,Verilog,Round-robin-arbiter-VERILOG,6,0,2023-07-12 11:35:47+00:00,[],None
374,https://github.com/elif-t/gst-lab-foyleri.git,2023-07-12 17:05:22+00:00,gömülü sistem tasarım lab föyleri,0,elif-t/gst-lab-foyleri,665645914,Verilog,gst-lab-foyleri,4871,0,2023-07-14 15:25:32+00:00,[],None
375,https://github.com/prynshsnh/PWM-Generator-Module.git,2023-07-15 10:26:55+00:00,,0,prynshsnh/PWM-Generator-Module,666712999,Verilog,PWM-Generator-Module,8,0,2023-07-15 10:27:03+00:00,[],None
376,https://github.com/prynshsnh/32-Bit-RSIC-V-Processor.git,2023-07-15 10:21:47+00:00,,0,prynshsnh/32-Bit-RSIC-V-Processor,666711723,Verilog,32-Bit-RSIC-V-Processor,5,0,2023-07-15 10:21:54+00:00,[],None
377,https://github.com/Moaz-Helmy/UART-transmitter-receiver.git,2023-07-19 00:23:10+00:00,,0,Moaz-Helmy/UART-transmitter-receiver,668065150,Verilog,UART-transmitter-receiver,2,0,2023-07-26 15:57:43+00:00,[],None
378,https://github.com/alex-9305/fpga.git,2023-07-18 10:39:45+00:00,,0,alex-9305/fpga,667804526,Verilog,fpga,1435,0,2023-07-18 11:23:30+00:00,[],None
379,https://github.com/adi-012/DDS_Project.git,2023-07-18 14:49:33+00:00,,0,adi-012/DDS_Project,667898739,Verilog,DDS_Project,11,0,2023-07-18 14:50:40+00:00,[],None
380,https://github.com/ianerik6/ianerik73.git,2023-07-18 17:17:24+00:00,es un repositorio de prueba para aprender el funcionamiento de caravel,0,ianerik6/ianerik73,667954975,Verilog,ianerik73,35294,0,2023-07-18 17:18:17+00:00,[],https://api.github.com/licenses/apache-2.0
381,https://github.com/michg/cproc_riscv32_64.git,2023-07-14 19:55:50+00:00,,0,michg/cproc_riscv32_64,666545475,Verilog,cproc_riscv32_64,382,0,2023-07-14 19:56:22+00:00,[],None
382,https://github.com/sharathkrish55/RISCV_Network_Accelerator.git,2023-07-08 13:45:40+00:00,XID - Accelerator Intrusion Detection System with Multi-Core Multi-Threaded RISC-V Processor,0,sharathkrish55/RISCV_Network_Accelerator,663939793,Verilog,RISCV_Network_Accelerator,2079,0,2023-07-08 13:52:59+00:00,[],None
383,https://github.com/Intelectron6/FIFO-Designs.git,2023-07-08 14:30:18+00:00,Verilog codes of Synchronous and Asynchronous FIFOs.,0,Intelectron6/FIFO-Designs,663955955,Verilog,FIFO-Designs,215,0,2023-07-08 14:31:11+00:00,[],None
384,https://github.com/paolovasquezg/single-cycle.git,2023-07-08 20:30:28+00:00,,0,paolovasquezg/single-cycle,664066199,Verilog,single-cycle,33,0,2023-07-08 20:32:09+00:00,[],None
385,https://github.com/JimmyForest/FPGA-DDS.git,2023-07-09 09:30:19+00:00,FPGA DDS,0,JimmyForest/FPGA-DDS,664219043,Verilog,FPGA-DDS,16523,0,2023-07-09 09:33:15+00:00,[],None
386,https://github.com/431jericho/CSE-Bubble.git,2023-07-12 04:34:11+00:00,,0,431jericho/CSE-Bubble,665376841,Verilog,CSE-Bubble,99,0,2023-07-12 04:38:42+00:00,[],None
387,https://github.com/vamsipinnaka/Design-and-Implementation-of-Automated-Teller-Machine-FSM-Controller.git,2023-07-13 03:11:56+00:00,,0,vamsipinnaka/Design-and-Implementation-of-Automated-Teller-Machine-FSM-Controller,665798890,Verilog,Design-and-Implementation-of-Automated-Teller-Machine-FSM-Controller,482,0,2023-07-14 04:42:00+00:00,[],None
388,https://github.com/friedrice123/CS220_Verilog.git,2023-07-13 06:00:36+00:00,This folder contains all the Verilog files that I have made while I was doing CS220- Computer Organisation course ,0,friedrice123/CS220_Verilog,665840417,Verilog,CS220_Verilog,358,0,2023-07-13 06:06:21+00:00,[],None
389,https://github.com/sawanhn/Bubble-Machine.git,2023-07-13 10:00:43+00:00,CS220 Project,0,sawanhn/Bubble-Machine,665926342,Verilog,Bubble-Machine,242,0,2023-07-13 10:02:53+00:00,[],None
390,https://github.com/Lakshvant/CSE_BUBBLE.git,2023-07-13 07:10:57+00:00,Verilog code for a 32-bit RISC processor,0,Lakshvant/CSE_BUBBLE,665864243,Verilog,CSE_BUBBLE,32,0,2023-07-13 07:13:14+00:00,[],None
391,https://github.com/atnts/carparking-system.git,2023-07-13 02:21:52+00:00,,0,atnts/carparking-system,665786748,Verilog,carparking-system,8,0,2023-07-13 02:22:26+00:00,[],https://api.github.com/licenses/mit
392,https://github.com/aHapBean/MIPS-CPU.git,2023-07-13 02:39:26+00:00,,0,aHapBean/MIPS-CPU,665790826,Verilog,MIPS-CPU,18415,0,2023-07-13 02:44:44+00:00,[],None
393,https://github.com/HazimAdel/simple-5-stage-pipeline-processor-design-VERILOG.git,2023-07-13 17:50:19+00:00,a simple design for 5 stage pipeline processor created for few combinations,0,HazimAdel/simple-5-stage-pipeline-processor-design-VERILOG,666097719,Verilog,simple-5-stage-pipeline-processor-design-VERILOG,36,0,2023-09-03 19:34:33+00:00,"['pipeline', '5-stage-pipeline', 'processor']",https://api.github.com/licenses/apache-2.0
394,https://github.com/chiragghodke/Digital-Locker.git,2023-07-13 18:49:51+00:00,,1,chiragghodke/Digital-Locker,666116674,Verilog,Digital-Locker,4,0,2023-07-13 18:54:34+00:00,[],None
395,https://github.com/cbvarr01/caravel_CBV2.git,2023-07-13 20:59:47+00:00,,0,cbvarr01/caravel_CBV2,666154795,Verilog,caravel_CBV2,98615,0,2023-07-13 21:00:33+00:00,[],https://api.github.com/licenses/apache-2.0
396,https://github.com/erfaniravani/OCP.git,2023-07-09 14:20:38+00:00,,0,erfaniravani/OCP,664291978,Verilog,OCP,5,0,2023-07-09 14:23:22+00:00,[],None
397,https://github.com/EatFruitWang/Zedboard_2021.1.1.git,2023-07-11 13:21:29+00:00,這個主要提供我看手冊自學而來針對Zedboard開發Verilog檔案範例，教學內容則放置在我的google site。,0,EatFruitWang/Zedboard_2021.1.1,665116076,Verilog,Zedboard_2021.1.1,17,0,2023-07-11 15:42:06+00:00,[],https://api.github.com/licenses/mit
398,https://github.com/kalai-karthik/KALAIARASI.git,2023-07-11 12:51:16+00:00,,0,kalai-karthik/KALAIARASI,665104343,Verilog,KALAIARASI,343,0,2023-07-15 01:29:38+00:00,[],None
399,https://github.com/ParasuRam146265/Uart-implementation.git,2023-07-11 16:50:48+00:00,,0,ParasuRam146265/Uart-implementation,665198144,Verilog,Uart-implementation,402,0,2023-07-11 16:56:10+00:00,[],None
400,https://github.com/laxmigayatri2003/Image_Processing_using_verilog_HDL.git,2023-07-14 05:49:10+00:00,"This project is to process an image using Verilog from reading an input  bitmap image in Verilog, processing and writing the processed result to an  output bitmap image in Verilog.",0,laxmigayatri2003/Image_Processing_using_verilog_HDL,666273772,Verilog,Image_Processing_using_verilog_HDL,2631,0,2023-07-14 05:54:42+00:00,[],None
401,https://github.com/adisharma1400/TeamSpark_NMIT_ATPcontroller.git,2023-07-15 05:50:41+00:00,Repository for submission of intel unnati industrial trainning project,0,adisharma1400/TeamSpark_NMIT_ATPcontroller,666651891,Verilog,TeamSpark_NMIT_ATPcontroller,10874,0,2023-07-15 12:53:34+00:00,[],None
402,https://github.com/sumithar1/IntelUnnati_Error404.git,2023-07-15 15:57:09+00:00,"Project Name: Anytime Electricity bill payment machine controller, Team Members: Thejashwini, Sumitha",0,sumithar1/IntelUnnati_Error404,666797859,Verilog,IntelUnnati_Error404,5205,0,2023-07-19 12:50:59+00:00,[],None
403,https://github.com/nivethitha31102003/intelunnati_Singleton.git,2023-07-15 16:38:58+00:00,,0,nivethitha31102003/intelunnati_Singleton,666808545,Verilog,intelunnati_Singleton,4373,0,2023-07-20 15:33:25+00:00,[],None
404,https://github.com/Vasu2706/N-bit-multiplier.git,2023-07-16 12:44:41+00:00,,0,Vasu2706/N-bit-multiplier,667038431,Verilog,N-bit-multiplier,4,0,2023-07-16 12:49:02+00:00,[],None
405,https://github.com/ziadmali59/Memory_Swapper.git,2023-07-16 13:27:25+00:00,Swap Two Memory loaction using FSM,0,ziadmali59/Memory_Swapper,667049478,Verilog,Memory_Swapper,3,0,2023-07-16 13:32:11+00:00,[],None
406,https://github.com/Manikantataviti/csn221_cache_project.git,2023-07-12 08:44:06+00:00,,0,Manikantataviti/csn221_cache_project,665456667,Verilog,csn221_cache_project,80,0,2023-07-12 08:44:45+00:00,[],None
407,https://github.com/SZX030908/zixuanSheng_COD_lab.git,2023-07-12 08:44:51+00:00,计组研讨课,0,SZX030908/zixuanSheng_COD_lab,665456930,Verilog,zixuanSheng_COD_lab,75,0,2023-07-12 12:07:31+00:00,[],None
408,https://github.com/retpolanne/tangnano.git,2023-07-18 09:35:28+00:00,,0,retpolanne/tangnano,667781343,Verilog,tangnano,10,0,2023-07-18 13:51:26+00:00,[],None
409,https://github.com/gunavant-s/4x1_MUX_Day-004.git,2023-07-23 09:05:18+00:00,A 4X1 MUX is a digital circuit that selects one of four input signals and forwards the selected input to a single output line based on the control signal.,0,gunavant-s/4x1_MUX_Day-004,669736522,Verilog,4x1_MUX_Day-004,38,0,2023-07-23 09:10:39+00:00,[],None
410,https://github.com/mikerl7784/Radix4_booth_Multiplier.git,2023-07-24 07:33:20+00:00,,0,mikerl7784/Radix4_booth_Multiplier,670052686,Verilog,Radix4_booth_Multiplier,22,0,2023-07-24 07:44:59+00:00,[],None
411,https://github.com/nithishselva47/Verilog-code.git,2023-07-26 08:09:26+00:00,,0,nithishselva47/Verilog-code,670957456,Verilog,Verilog-code,402,0,2023-07-26 08:21:08+00:00,[],None
412,https://github.com/HU-Xu-yang/5-stage-static-superscalar-MIPS32v2-CPU-with-AES128-FPGA-verified.git,2023-07-26 09:08:28+00:00,THU Micro-Processor-Design lab assignment @2022 summer,0,HU-Xu-yang/5-stage-static-superscalar-MIPS32v2-CPU-with-AES128-FPGA-verified,670978655,Verilog,5-stage-static-superscalar-MIPS32v2-CPU-with-AES128-FPGA-verified,4252,0,2023-08-07 15:30:31+00:00,[],https://api.github.com/licenses/mit
413,https://github.com/alexian79/camera_mockup.git,2023-07-24 13:58:37+00:00,"jetson nano + efinix t20 mipi, mocking up imx219 sensor in T20 and sending data over MIPI CSI2 link",0,alexian79/camera_mockup,670196507,Verilog,camera_mockup,1937,0,2023-07-24 14:09:37+00:00,[],None
414,https://github.com/disneyyy/NCKUCSIE-CO-2022.git,2023-07-26 09:26:11+00:00,,0,disneyyy/NCKUCSIE-CO-2022,670985390,Verilog,NCKUCSIE-CO-2022,2470,0,2023-07-26 09:38:31+00:00,[],None
415,https://github.com/amirtha-2002/verilog_code.git,2023-07-26 07:35:33+00:00,,0,amirtha-2002/verilog_code,670945907,Verilog,verilog_code,256,0,2023-07-26 07:36:59+00:00,[],None
416,https://github.com/vivekkar88/VERILOG-MODULES.git,2023-07-26 11:02:30+00:00,,0,vivekkar88/VERILOG-MODULES,671019161,Verilog,VERILOG-MODULES,3,0,2023-08-02 20:49:34+00:00,[],None
417,https://github.com/kdivya03/32-bit-5-stage-Pipelined-MIPS-Processor.git,2023-07-22 03:30:42+00:00,,0,kdivya03/32-bit-5-stage-Pipelined-MIPS-Processor,669360568,Verilog,32-bit-5-stage-Pipelined-MIPS-Processor,16,0,2023-07-22 03:31:42+00:00,[],None
418,https://github.com/SulaimanConain/washing_machine.git,2023-07-12 20:00:35+00:00,,0,SulaimanConain/washing_machine,665703666,Verilog,washing_machine,4,0,2023-07-12 20:01:48+00:00,[],None
419,https://github.com/rakii-cyper/MIPS-Project.git,2023-07-21 01:05:48+00:00,Course project,0,rakii-cyper/MIPS-Project,668939703,Verilog,MIPS-Project,8,0,2023-07-21 01:05:56+00:00,[],None
420,https://github.com/Seyviour/broadcast-riscv.git,2023-07-22 14:44:09+00:00,A broadcast/listener RISC-V implementation. ,0,Seyviour/broadcast-riscv,669519763,Verilog,broadcast-riscv,5,0,2023-08-05 10:04:48+00:00,[],None
421,https://github.com/Vakon84/zx-evo.git,2023-07-16 18:55:55+00:00,,0,Vakon84/zx-evo,667136474,Verilog,zx-evo,625133,0,2023-07-16 19:12:25+00:00,[],None
422,https://github.com/Hesal-jokerman/Sqrt_flxp.git,2023-07-17 10:35:18+00:00,verlog取模，开方，误差计算,0,Hesal-jokerman/Sqrt_flxp,667363129,Verilog,Sqrt_flxp,266,0,2023-07-17 10:59:22+00:00,[],None
423,https://github.com/shrilakshmisk/Bubble-Machine.git,2023-07-16 15:30:48+00:00,,0,shrilakshmisk/Bubble-Machine,667083705,Verilog,Bubble-Machine,56,0,2023-07-25 06:45:49+00:00,[],None
424,https://github.com/mikhailrussell/Dataprocessor.git,2023-07-16 14:38:48+00:00,,0,mikhailrussell/Dataprocessor,667068874,Verilog,Dataprocessor,4,0,2023-07-16 15:08:04+00:00,[],None
425,https://github.com/JEvSilv/riscv-design-eval.git,2023-07-17 16:39:25+00:00,Rocket chip evaluation,0,JEvSilv/riscv-design-eval,667500661,Verilog,riscv-design-eval,11321,0,2023-07-17 17:10:04+00:00,[],None
426,https://github.com/sidd-03/CSE-BUBBLE.git,2023-07-16 16:27:42+00:00,,0,sidd-03/CSE-BUBBLE,667099396,Verilog,CSE-BUBBLE,22,0,2023-07-16 16:33:05+00:00,[],None
427,https://github.com/Vamsi9849/RTL_training.git,2023-07-18 15:54:24+00:00,,0,Vamsi9849/RTL_training,667924467,Verilog,RTL_training,45,0,2023-07-18 16:13:13+00:00,[],None
428,https://github.com/lild4d4/Campamento-VLSI-Valparaiso-2023.git,2023-07-17 22:36:28+00:00,,1,lild4d4/Campamento-VLSI-Valparaiso-2023,667604912,Verilog,Campamento-VLSI-Valparaiso-2023,4,0,2023-07-25 15:14:30+00:00,[],None
429,https://github.com/Mahmoud-Elsanour/Mano-machine.git,2023-07-18 19:26:25+00:00,"The Mano machine is a computer theoretically described by M. Morris Mano. It contains a central processing unit, random access memory, and an input-output bus.",2,Mahmoud-Elsanour/Mano-machine,667997928,Verilog,Mano-machine,1179,0,2023-09-30 06:01:16+00:00,[],None
430,https://github.com/youssefamr01/VERI_RISC.git,2023-07-19 19:49:13+00:00,The VeriRISC model is a very-reduced-instruction-set processor coded in the Verilog HDL. Its instruction consists of a three-bit operation code and a five-bit operand. That restricts its instruction set to eight instructions and its address space to 32 locations.,0,youssefamr01/VERI_RISC,668433444,Verilog,VERI_RISC,150,0,2023-07-19 20:03:37+00:00,[],None
431,https://github.com/Niiui/HDLBits_solution.git,2023-07-26 07:39:01+00:00,HDLBits Verilog practice solutions,0,Niiui/HDLBits_solution,670947067,Verilog,HDLBits_solution,141,0,2023-07-26 07:42:13+00:00,[],https://api.github.com/licenses/gpl-3.0
432,https://github.com/surendra644/testrepository.git,2023-07-22 09:47:11+00:00,,0,surendra644/testrepository,669443653,Verilog,testrepository,428,0,2023-12-30 16:06:25+00:00,[],None
433,https://github.com/kons-9/riscv_processor.git,2023-07-19 08:09:03+00:00,,0,kons-9/riscv_processor,668183480,Verilog,riscv_processor,247,0,2023-11-11 08:11:51+00:00,[],None
434,https://github.com/PRAGATI-0102/Palindrome-Detector-Day-090-.git,2023-07-08 17:49:53+00:00,"A palindrome is a word, phrase, number, or sequence that reads the same backwards as forward. The module takes in an input sequence and determines whether it is a palindrome or not by comparing the characters from both ends of the sequence.",0,PRAGATI-0102/Palindrome-Detector-Day-090-,664021736,Verilog,Palindrome-Detector-Day-090-,63,0,2023-07-08 17:51:35+00:00,[],None
435,https://github.com/nithish203/FFT_Implementation.git,2023-07-09 05:28:31+00:00,,0,nithish203/FFT_Implementation,664167009,Verilog,FFT_Implementation,997,0,2023-07-09 05:31:17+00:00,[],None
436,https://github.com/Ibroad/caravel_start.git,2023-07-08 01:52:32+00:00,,0,Ibroad/caravel_start,663738995,Verilog,caravel_start,35291,0,2023-07-08 01:53:23+00:00,[],https://api.github.com/licenses/apache-2.0
437,https://github.com/tanphandev/Graduation_Thesis.git,2023-07-08 14:39:40+00:00,,0,tanphandev/Graduation_Thesis,663959276,Verilog,Graduation_Thesis,76709,0,2023-07-08 14:45:02+00:00,[],None
438,https://github.com/umarcis/VendingMachine.git,2023-07-20 12:46:15+00:00,,0,umarcis/VendingMachine,668718269,Verilog,VendingMachine,6,0,2023-07-20 12:46:53+00:00,[],https://api.github.com/licenses/apache-2.0
439,https://github.com/MohammadrezaNazirii/8bit-Pseudo-Processor.git,2023-07-18 15:06:46+00:00,8bit Pseudo Processor with little endian architecture,0,MohammadrezaNazirii/8bit-Pseudo-Processor,667905866,Verilog,8bit-Pseudo-Processor,274,0,2023-07-18 15:10:42+00:00,[],None
440,https://github.com/21fernando/RISC-V-processor.git,2023-07-16 16:45:14+00:00,,0,21fernando/RISC-V-processor,667103792,Verilog,RISC-V-processor,9256,0,2023-07-16 17:17:00+00:00,[],None
441,https://github.com/rajatssr835/FHE_Netlist.git,2023-07-14 09:26:21+00:00,,1,rajatssr835/FHE_Netlist,666343639,Verilog,FHE_Netlist,34476,0,2023-07-14 09:28:07+00:00,[],None
442,https://github.com/sarthak-motwani/CSE-BUBBLE-Processor-Single-Cycle-Execution.git,2023-07-16 17:02:37+00:00,"This repository contains the implementation of Single-Cycle Execution Processor in Verilog, utilizing a 32-bit ISA (Instruction Set Architecture). ",0,sarthak-motwani/CSE-BUBBLE-Processor-Single-Cycle-Execution,667108585,Verilog,CSE-BUBBLE-Processor-Single-Cycle-Execution,137,0,2023-07-16 17:05:22+00:00,[],None
443,https://github.com/TanVidushi/DigitalVotingMachine.git,2023-07-14 05:38:22+00:00,,0,TanVidushi/DigitalVotingMachine,666270834,Verilog,DigitalVotingMachine,201,0,2023-07-14 05:42:56+00:00,[],None
444,https://github.com/labajyoti21/Assignment-7-CS220.git,2023-07-10 13:23:00+00:00,&th assignment of the course CS220 about making the HDL for CSE bubble,0,labajyoti21/Assignment-7-CS220,664662186,Verilog,Assignment-7-CS220,64,0,2023-07-10 13:28:21+00:00,[],None
445,https://github.com/MrTejas/y86-64-bit-processor.git,2023-07-11 04:23:16+00:00,"Implementation of both, sequential and 5-stage pipelined x86 64-bit processor in Verilog, designed to handle data dependencies like load-use hazard, invalid return, and jump misprediction along with data-forwarding. ",0,MrTejas/y86-64-bit-processor,664929865,Verilog,y86-64-bit-processor,2044,0,2023-07-11 11:16:03+00:00,[],None
446,https://github.com/sandeepgongati/TEAM-SIGMA-_-MRCET_-DESIGN-AND-STIMILATION-OF-LAND-ROVER-FIGO-FSM.git,2023-07-11 18:40:23+00:00,,0,sandeepgongati/TEAM-SIGMA-_-MRCET_-DESIGN-AND-STIMILATION-OF-LAND-ROVER-FIGO-FSM,665235250,Verilog,TEAM-SIGMA-_-MRCET_-DESIGN-AND-STIMILATION-OF-LAND-ROVER-FIGO-FSM,9264,0,2023-07-27 07:27:12+00:00,[],None
447,https://github.com/Mohak-Singh-Rana/CSE_Bubble.git,2023-07-08 20:33:50+00:00,,0,Mohak-Singh-Rana/CSE_Bubble,664067088,Verilog,CSE_Bubble,175,0,2023-07-08 20:58:21+00:00,[],None
448,https://github.com/vincentkwok21/EE-371-Labs.git,2023-07-08 00:39:10+00:00,Labs for the UW class EE371,0,vincentkwok21/EE-371-Labs,663724305,Verilog,EE-371-Labs,7042,0,2023-07-08 21:54:39+00:00,[],None
449,https://github.com/ejchung0406/RISC-V-Verilog.git,2023-07-09 04:24:01+00:00,,0,ejchung0406/RISC-V-Verilog,664155072,Verilog,RISC-V-Verilog,8369,0,2023-07-09 04:24:54+00:00,[],None
450,https://github.com/Ahmed-Mohamed-Shiba/Single-Cycle-RISC-V-Processor.git,2023-07-09 19:15:55+00:00,Implemented a single cycle RISC-V processor based on Harvard Architecture,0,Ahmed-Mohamed-Shiba/Single-Cycle-RISC-V-Processor,664371229,Verilog,Single-Cycle-RISC-V-Processor,1188,0,2023-07-09 19:20:35+00:00,[],None
451,https://github.com/Shivani4223/Adders.git,2023-07-18 17:30:21+00:00,Verilog,0,Shivani4223/Adders,667959668,Verilog,Adders,11,0,2023-07-18 17:30:54+00:00,[],None
452,https://github.com/MuhammedMado/8x8-Sequential-Multiplier.git,2023-07-15 06:11:50+00:00,"Sequential 8x8 Multiplier, including 16-bit adder, mux, 4x4 multiplier, left shifter, 16-bit register, FSM, counter, seven-segment encoder and controller FSM (Verilog Code).",0,MuhammedMado/8x8-Sequential-Multiplier,666656227,Verilog,8x8-Sequential-Multiplier,8,0,2023-07-15 06:29:46+00:00,[],None
453,https://github.com/aditigarg2810/UART.git,2023-07-14 13:43:31+00:00,,0,aditigarg2810/UART,666427205,Verilog,UART,10,0,2023-07-14 19:10:53+00:00,[],None
454,https://github.com/sanskar0708/I2c_protocol.git,2023-07-19 07:20:20+00:00,Implementation of I2c communication protocol on FPGA using verilog ,0,sanskar0708/I2c_protocol,668167236,Verilog,I2c_protocol,4,0,2023-07-19 08:18:17+00:00,[],None
455,https://github.com/haoranx98/my-ahb-bus.git,2023-07-22 06:34:49+00:00,,0,haoranx98/my-ahb-bus,669398435,Verilog,my-ahb-bus,23,0,2023-07-22 06:37:08+00:00,[],None
456,https://github.com/sairamadugu/manhattan-project_HDP.git,2023-07-22 06:51:52+00:00,,1,sairamadugu/manhattan-project_HDP,669402458,Verilog,manhattan-project_HDP,91555,0,2023-08-29 02:19:34+00:00,[],None
457,https://github.com/addamichal/fpga.git,2023-07-23 09:03:17+00:00,,0,addamichal/fpga,669736066,Verilog,fpga,13,0,2023-07-23 09:10:39+00:00,[],None
458,https://github.com/RyanLei-icer/HDLbit.git,2023-07-24 13:13:44+00:00,,0,RyanLei-icer/HDLbit,670178180,Verilog,HDLbit,82,0,2023-07-24 13:15:12+00:00,[],None
459,https://github.com/sugarspicenshit/RAM-for-Modified-SAP.git,2023-07-23 07:18:23+00:00,"Implementation of a 256x8 RAM on a modified SAP computer. (Forgive the spaghetti code, I only modified the code that was given to me)",0,sugarspicenshit/RAM-for-Modified-SAP,669712221,Verilog,RAM-for-Modified-SAP,84,0,2023-09-28 06:19:34+00:00,[],None
460,https://github.com/proy10/riscv-cpu.git,2023-07-11 07:40:15+00:00,,0,proy10/riscv-cpu,664989717,Verilog,riscv-cpu,188,0,2023-07-11 07:42:17+00:00,[],None
461,https://github.com/Khedr20/DefenderGame.git,2023-07-11 12:30:39+00:00,design and implement a simplified FPGA-based defender arcade game. The concept of this project is designed by referring to the project of simplified FPGA-based balloon-shooter game.,0,Khedr20/DefenderGame,665096671,Verilog,DefenderGame,15,0,2023-07-11 12:39:31+00:00,[],None
462,https://github.com/vivekkar88/vending-machine.git,2023-07-11 12:26:04+00:00,,0,vivekkar88/vending-machine,665094900,Verilog,vending-machine,3,0,2023-07-11 12:53:29+00:00,[],None
463,https://github.com/sanskar0708/UART_verilog.git,2023-07-11 13:09:17+00:00,implementation of UART communication protocol on FPGA device using verilog coding in xilinx vivado tool,0,sanskar0708/UART_verilog,665111297,Verilog,UART_verilog,64,0,2023-07-19 07:31:35+00:00,[],None
464,https://github.com/Kriti-Arora-08/CSE-Bubble.git,2023-07-11 16:42:52+00:00,,0,Kriti-Arora-08/CSE-Bubble,665195356,Verilog,CSE-Bubble,61,0,2023-07-11 16:46:44+00:00,[],None
465,https://github.com/ianerik6/ianerik72.git,2023-07-11 16:12:57+00:00,prueba exitos,0,ianerik6/ianerik72,665184742,Verilog,ianerik72,35296,0,2023-07-11 16:13:49+00:00,[],https://api.github.com/licenses/apache-2.0
466,https://github.com/Kanishk-K-U/SPI-I2C-Protocol.git,2023-07-17 07:30:19+00:00,,0,Kanishk-K-U/SPI-I2C-Protocol,667296487,Verilog,SPI-I2C-Protocol,1074,0,2023-07-17 07:32:34+00:00,[],None
467,https://github.com/ahmadrmirzaei/Radix4-Recoder.git,2023-07-15 11:40:03+00:00,Here I designed 2 radix 4 recoders. one of them is serial and the other one is parallel. we use recoders in multipliers.,0,ahmadrmirzaei/Radix4-Recoder,666730313,Verilog,Radix4-Recoder,11,0,2023-07-15 11:44:47+00:00,[],None
468,https://github.com/talg1996/Verilog-example.git,2023-07-16 00:35:32+00:00,Learn how to write basic Verilog codes and how to test them.,0,talg1996/Verilog-example,666896957,Verilog,Verilog-example,163,0,2023-07-16 00:39:26+00:00,[],None
469,https://github.com/alepnabil/Sematstik.git,2023-07-13 04:11:12+00:00,,0,alepnabil/Sematstik,665812904,Verilog,Sematstik,7402,0,2023-07-13 04:14:08+00:00,[],None
470,https://github.com/JanviBusa/Verilog_codes.git,2023-07-13 06:17:36+00:00,,0,JanviBusa/Verilog_codes,665845647,Verilog,Verilog_codes,1218,0,2023-07-13 06:39:09+00:00,[],None
471,https://github.com/GhazaalN/16-Bit_ISA.git,2023-07-17 17:15:55+00:00,16-Bit Instruction Set Architecture (ISA) Implementation with Matrix Multiplication,0,GhazaalN/16-Bit_ISA,667513916,Verilog,16-Bit_ISA,296,0,2023-07-17 17:19:38+00:00,[],None
472,https://github.com/Jhalakk-21/CSE-BUBBLE.git,2023-07-12 11:30:26+00:00,,0,Jhalakk-21/CSE-BUBBLE,665516667,Verilog,CSE-BUBBLE,167,0,2023-07-12 11:38:28+00:00,[],None
473,https://github.com/yuvrajKharayat30/CSE-Bubble.git,2023-07-12 08:46:10+00:00,,0,yuvrajKharayat30/CSE-Bubble,665457511,Verilog,CSE-Bubble,124,0,2023-07-12 08:46:55+00:00,[],None
474,https://github.com/ziadmali59/Single-Cycle-RISC-V-32I-Processor.git,2023-07-12 15:13:43+00:00,,0,ziadmali59/Single-Cycle-RISC-V-32I-Processor,665605474,Verilog,Single-Cycle-RISC-V-32I-Processor,12,0,2023-07-12 15:16:56+00:00,[],None
475,https://github.com/ridhamharsora12/Combinational-Logic-Designs-using-Verilog.git,2023-07-18 09:22:34+00:00,,0,ridhamharsora12/Combinational-Logic-Designs-using-Verilog,667776586,Verilog,Combinational-Logic-Designs-using-Verilog,56,0,2023-07-21 17:35:04+00:00,[],None
476,https://github.com/eslamsolyman01/PWM-generator-module.git,2023-07-13 16:07:48+00:00,this is a PWM_gen module base on Verilog,0,eslamsolyman01/PWM-generator-module,666061894,Verilog,PWM-generator-module,7,0,2023-07-13 16:10:04+00:00,[],None
477,https://github.com/Shubhansh25/16bit_bcd-adder-with-Bist.git,2023-07-12 21:16:48+00:00,,0,Shubhansh25/16bit_bcd-adder-with-Bist,665723918,Verilog,16bit_bcd-adder-with-Bist,8,0,2023-07-12 21:49:12+00:00,[],None
478,https://github.com/chirag091167/universal_shift_register.git,2023-07-13 16:42:26+00:00,,0,chirag091167/universal_shift_register,666073871,Verilog,universal_shift_register,2,0,2023-07-13 16:43:07+00:00,[],None
479,https://github.com/hu6148/VendingMachine.git,2023-07-21 11:07:14+00:00,,0,hu6148/VendingMachine,669108315,Verilog,VendingMachine,3,0,2023-07-21 11:09:12+00:00,[],None
480,https://github.com/SenthilMurugan-03/Verilog-HDL.git,2023-07-26 10:10:49+00:00,,0,SenthilMurugan-03/Verilog-HDL,671001762,Verilog,Verilog-HDL,239,0,2023-07-26 10:50:48+00:00,[],None
481,https://github.com/mohamedsalah64792/washing-machine-.git,2023-07-26 20:33:32+00:00,,0,mohamedsalah64792/washing-machine-,671222880,Verilog,washing-machine-,4415,0,2023-07-26 20:41:31+00:00,[],None
482,https://github.com/darshan-kr/Day-009-Comparator.git,2023-07-26 15:08:42+00:00,"A digital comparator or magnitude comparator is a hardware electronic device that takes two numbers as input in binary form and determines whether one number is greater than, less than or equal to the other number. ",0,darshan-kr/Day-009-Comparator,671113239,Verilog,Day-009-Comparator,2,0,2023-07-26 15:10:14+00:00,[],None
483,https://github.com/ErenYagar/Adder32.git,2023-07-26 12:39:12+00:00,,0,ErenYagar/Adder32,671052717,Verilog,Adder32,4,0,2023-08-06 07:20:11+00:00,[],None
484,https://github.com/samarqureshii/241.git,2023-07-11 15:12:05+00:00,"Programming labs in Verilog HDL, by Annie Wang and Samar Qureshi.",1,samarqureshii/241,665161731,Verilog,241,364,0,2023-11-22 02:53:48+00:00,[],https://api.github.com/licenses/mit
485,https://github.com/ridhamharsora12/Sequential-Logic-Designs-using-Verilog.git,2023-07-21 18:28:13+00:00,,0,ridhamharsora12/Sequential-Logic-Designs-using-Verilog,669256711,Verilog,Sequential-Logic-Designs-using-Verilog,18,0,2023-07-22 06:03:10+00:00,[],None
486,https://github.com/darshan-kr/Day-006-Demux.git,2023-07-24 08:19:02+00:00,"De-Multiplexer is a combinational circuit that performs the reverse operation of Multiplexer. It has single input, ‘n’ selection lines and maximum of 2n outputs. The input will be connected to one of these outputs based on the values of selection lines.  Since there are ‘n’ selection lines, there will be 2n possible combinations of zeros and ones. ",0,darshan-kr/Day-006-Demux,670068599,Verilog,Day-006-Demux,2,0,2023-07-24 08:20:31+00:00,[],None
487,https://github.com/GhanayemMuh/Hardware-Accelerator-for-Machine-Learning-in-SystemVerilog.git,2023-07-21 14:10:39+00:00,,0,GhanayemMuh/Hardware-Accelerator-for-Machine-Learning-in-SystemVerilog,669170333,Verilog,Hardware-Accelerator-for-Machine-Learning-in-SystemVerilog,2718,0,2024-02-20 18:56:13+00:00,[],None
488,https://github.com/SteveLRojas/DragonBridge.git,2023-07-25 20:43:10+00:00,Control SPI and I2C devices using a UART,0,SteveLRojas/DragonBridge,670784942,Verilog,DragonBridge,649,0,2023-07-25 20:45:48+00:00,[],None
489,https://github.com/tkyen1110/Digital_System_Design.git,2023-07-21 21:59:47+00:00,,0,tkyen1110/Digital_System_Design,669307640,Verilog,Digital_System_Design,113,0,2023-07-22 06:42:01+00:00,[],None
490,https://github.com/ChetanyaKatara/32-bit_Floating-point-ALU.git,2023-07-25 13:50:32+00:00,"A 32-bit Arithmetic Logical Unit which can perform Addition,Subtraction,Multiplication and Division on Single precision floating point numbers based on IEEE 754",0,ChetanyaKatara/32-bit_Floating-point-ALU,670638019,Verilog,32-bit_Floating-point-ALU,27,0,2023-07-27 05:45:14+00:00,[],https://api.github.com/licenses/mit
491,https://github.com/liambeguin/risky.git,2023-07-14 00:21:22+00:00,a tiny risc-v processor,0,liambeguin/risky,666197540,Verilog,risky,38,0,2023-07-14 00:21:41+00:00,[],None
492,https://github.com/IAAJL/Intel_atp_Codeless_Project.git,2023-07-15 14:57:32+00:00,,0,IAAJL/Intel_atp_Codeless_Project,666781533,Verilog,Intel_atp_Codeless_Project,12236,0,2023-07-19 13:25:44+00:00,[],None
493,https://github.com/RudraKumar1218/Trafficlight_controller.git,2023-07-18 12:49:51+00:00,,0,RudraKumar1218/Trafficlight_controller,667850505,Verilog,Trafficlight_controller,3,0,2023-07-18 12:50:56+00:00,[],None
494,https://github.com/Troyf32/matchtest.git,2023-07-18 12:51:30+00:00,,0,Troyf32/matchtest,667851150,Verilog,matchtest,1000,0,2023-07-18 13:13:29+00:00,[],None
495,https://github.com/santhoshkanna50/APB-protocol-amba.git,2023-07-21 14:03:41+00:00,,0,santhoshkanna50/APB-protocol-amba,669167799,Verilog,APB-protocol-amba,6,0,2023-07-21 14:07:00+00:00,[],None
496,https://github.com/Gnanaprasanna-korada/name.git,2023-07-08 16:43:06+00:00,I executed my name prasanna in the verilog using assign statement  to a variable.,0,Gnanaprasanna-korada/name,664000872,Verilog,name,1,0,2023-07-08 16:48:00+00:00,[],None
497,https://github.com/Lokesh1854/Traffic-Light-Controller.git,2023-07-09 15:17:32+00:00,,0,Lokesh1854/Traffic-Light-Controller,664308111,Verilog,Traffic-Light-Controller,14589,0,2023-07-09 17:42:32+00:00,[],None
498,https://github.com/saiprathyushaafk/intelunnati_atm_project.git,2023-07-13 14:42:04+00:00,automated teller machine,0,saiprathyushaafk/intelunnati_atm_project,666029779,Verilog,intelunnati_atm_project,14126,0,2023-07-19 11:45:33+00:00,[],None
499,https://github.com/tamurae/tt04-verilog-demo.git,2023-07-11 15:50:06+00:00,Tiny Tapeout 4 - Verilog Demo,1,tamurae/tt04-verilog-demo,665176319,Verilog,tt04-verilog-demo,23,0,2023-07-11 15:51:52+00:00,[],https://api.github.com/licenses/apache-2.0
500,https://github.com/dhogksirh/d.git,2023-07-13 07:29:45+00:00,d,0,dhogksirh/d,665871268,Verilog,d,155250,0,2023-08-29 06:09:00+00:00,[],None
501,https://github.com/Prix2010/CSE-BUBBLE.git,2023-07-13 16:20:11+00:00,,0,Prix2010/CSE-BUBBLE,666066131,Verilog,CSE-BUBBLE,25,0,2023-07-13 16:49:31+00:00,[],None
502,https://github.com/akshayeagle/MIPS32.git,2023-07-13 15:01:19+00:00,verilog,0,akshayeagle/MIPS32,666037365,Verilog,MIPS32,7,0,2023-08-24 15:18:24+00:00,[],None
503,https://github.com/burn1dream/loongson.git,2023-07-14 03:46:54+00:00,,0,burn1dream/loongson,666244239,Verilog,loongson,808,0,2023-07-14 03:51:49+00:00,[],None
504,https://github.com/PRITHVIRAJ08/INTEL-UNNATI_-TEAM-MISSION-POSSIBLE-.git,2023-07-14 09:07:10+00:00,,0,PRITHVIRAJ08/INTEL-UNNATI_-TEAM-MISSION-POSSIBLE-,666337407,Verilog,INTEL-UNNATI_-TEAM-MISSION-POSSIBLE-,1628,0,2023-07-19 11:55:53+00:00,[],None
505,https://github.com/darshan-kr/Half_adder_Day_001.git,2023-07-11 14:24:09+00:00," A half adder is a combinational logic circuit that performs binary addition of two single-bit binary numbers. It has two inputs, A and B, and two outputs, SUM and CARRY.",0,darshan-kr/Half_adder_Day_001,665142385,Verilog,Half_adder_Day_001,4,0,2023-07-11 14:31:35+00:00,[],None
506,https://github.com/coentmn/HDL.git,2023-07-18 07:04:40+00:00,,0,coentmn/HDL,667726297,Verilog,HDL,57,0,2023-07-18 08:01:50+00:00,[],None
507,https://github.com/xjn-La-La-land/COD_2023_code.git,2023-07-17 10:16:06+00:00,,0,xjn-La-La-land/COD_2023_code,667356533,Verilog,COD_2023_code,6806,0,2023-07-17 10:27:36+00:00,[],None
508,https://github.com/SunirbanRanjit/16-bit-Risc-Processor.git,2023-07-17 03:37:25+00:00,,0,SunirbanRanjit/16-bit-Risc-Processor,667233093,Verilog,16-bit-Risc-Processor,5,0,2023-07-17 04:11:50+00:00,[],None
509,https://github.com/Shinhyundo/RISC-V_pipeline_cpu.git,2023-07-19 17:53:47+00:00,,0,Shinhyundo/RISC-V_pipeline_cpu,668397023,Verilog,RISC-V_pipeline_cpu,1230,0,2023-07-19 18:13:16+00:00,[],None
510,https://github.com/Sharkawy115/Traffic-light-controller-Verilog-HDL.git,2023-07-22 19:34:27+00:00,,0,Sharkawy115/Traffic-light-controller-Verilog-HDL,669593538,Verilog,Traffic-light-controller-Verilog-HDL,6,0,2023-07-22 19:46:36+00:00,[],None
511,https://github.com/bitsynaptics/icePie-examples.git,2023-07-22 11:00:55+00:00,Example Implementations for icePie-FPGA-devkit board,0,bitsynaptics/icePie-examples,669461493,Verilog,icePie-examples,347,0,2023-07-22 11:01:53+00:00,[],None
512,https://github.com/crazyjack44/traffic_light.git,2023-07-23 12:19:54+00:00,,0,crazyjack44/traffic_light,669784116,Verilog,traffic_light,3,0,2023-07-23 12:20:25+00:00,[],None
513,https://github.com/caslab-code/pqc-hqc-hardware.git,2023-07-25 16:19:42+00:00,,0,caslab-code/pqc-hqc-hardware,670698857,Verilog,pqc-hqc-hardware,249,0,2023-10-29 13:15:57+00:00,[],https://api.github.com/licenses/gpl-3.0
514,https://github.com/ansley-claret/intelunnati_DataWizards.git,2023-07-14 17:32:39+00:00,We are Data wizards team. We are assigned to implement slow and fast division algorithm in computer architecture,0,ansley-claret/intelunnati_DataWizards,666504124,Verilog,intelunnati_DataWizards,4361,0,2023-07-19 11:49:03+00:00,[],None
515,https://github.com/MostafaElsharkawy92/Verilog_Projects.git,2023-07-15 03:26:12+00:00,This is a shelf of mini-projects I have done using Verilog HDL,0,MostafaElsharkawy92/Verilog_Projects,666625697,Verilog,Verilog_Projects,177,0,2023-07-25 21:25:30+00:00,[],None
516,https://github.com/Supesh012/Verilog.git,2023-07-23 13:55:42+00:00,,0,Supesh012/Verilog,669809303,Verilog,Verilog,12,0,2023-07-23 16:29:02+00:00,[],None
517,https://github.com/HACK-EVENT/hackatdac21.git,2023-07-15 20:58:02+00:00,Hack@DAC 2021,1,HACK-EVENT/hackatdac21,666864982,Verilog,hackatdac21,21003,0,2023-09-01 08:31:01+00:00,[],
518,https://github.com/mysterious24/verilog-projects.git,2023-07-18 19:10:01+00:00,contain every circuits in verilog lang!!,0,mysterious24/verilog-projects,667992663,Verilog,verilog-projects,19,0,2023-07-18 19:11:00+00:00,[],None
519,https://github.com/halaalfaris/ElevatorProject.git,2023-07-19 15:05:28+00:00,,0,halaalfaris/ElevatorProject,668336801,Verilog,ElevatorProject,590,0,2023-07-19 15:07:40+00:00,[],None
520,https://github.com/2lambda123/can.git,2023-07-09 11:41:43+00:00,,0,2lambda123/can,664250086,Verilog,can,187,0,2023-07-09 11:42:11+00:00,[],None
521,https://github.com/MarimoElectronics/Yonaguni-FPGA.git,2023-07-26 23:45:54+00:00,,0,MarimoElectronics/Yonaguni-FPGA,671264834,Verilog,Yonaguni-FPGA,2349,0,2023-09-15 05:52:24+00:00,[],None
522,https://github.com/GoshaAB29/verilog.git,2023-07-08 20:45:25+00:00,solving several educational problems...,0,GoshaAB29/verilog,664070013,Verilog,verilog,98,0,2023-07-08 20:48:19+00:00,[],None
523,https://github.com/trong420/verilog.git,2023-07-23 16:54:22+00:00,CPU test code,0,trong420/verilog,669858570,Verilog,verilog,27,0,2023-07-23 17:04:52+00:00,[],None
524,https://github.com/hashinisraq/EEE-Projects.git,2023-07-18 19:21:32+00:00,,0,hashinisraq/EEE-Projects,667996371,Verilog,EEE-Projects,48056,0,2024-03-15 18:15:13+00:00,[],None
525,https://github.com/rttr-7/rttr-7.git,2023-07-17 18:05:34+00:00,Config files for my GitHub profile.,0,rttr-7/rttr-7,667530829,Verilog,rttr-7,880,0,2024-02-26 06:13:32+00:00,"['config', 'github-config']",None
526,https://github.com/harishprasad29/Matrix-Multiplier.git,2023-07-13 08:00:14+00:00,"Data-path and controller design of 128 x 128 Matrix Multiplier, each element of 16-bit width using Verilog HDL. This Matrix Multiplier Unit consists of 128x128 16-bit Multiply and Add units for matrix operations",0,harishprasad29/Matrix-Multiplier,665881917,Verilog,Matrix-Multiplier,3,0,2023-07-13 08:01:40+00:00,[],None
527,https://github.com/theHDLguy/Sequence-Detector.git,2023-07-13 11:21:04+00:00,,0,theHDLguy/Sequence-Detector,665953589,Verilog,Sequence-Detector,4,0,2023-07-29 19:13:04+00:00,[],None
528,https://github.com/DONGFENGYUE/FPGA_Related.git,2023-07-13 13:51:48+00:00,For Online Search,0,DONGFENGYUE/FPGA_Related,666009915,Verilog,FPGA_Related,763,0,2023-07-13 15:13:00+00:00,[],None
529,https://github.com/Vaibhav-shar/Cordic_Algorithm.git,2023-07-14 00:32:46+00:00,,0,Vaibhav-shar/Cordic_Algorithm,666199869,Verilog,Cordic_Algorithm,3,0,2023-07-14 00:36:00+00:00,[],None
530,https://github.com/MingxuanLi11233/MIPS32-with-Verilog.git,2023-07-13 17:50:14+00:00,,0,MingxuanLi11233/MIPS32-with-Verilog,666097696,Verilog,MIPS32-with-Verilog,335,0,2023-07-14 02:49:05+00:00,[],None
531,https://github.com/chirag091167/barrel_shifter.git,2023-07-13 16:59:59+00:00,,0,chirag091167/barrel_shifter,666080034,Verilog,barrel_shifter,2,0,2023-09-14 19:27:08+00:00,[],None
532,https://github.com/Ashton43/TRAFFIC_LIGHT_CONTROLLER.git,2023-07-11 16:44:48+00:00,,0,Ashton43/TRAFFIC_LIGHT_CONTROLLER,665196004,Verilog,TRAFFIC_LIGHT_CONTROLLER,61,0,2023-07-11 17:02:15+00:00,[],None
533,https://github.com/harsho21/CSE-Bubble-CS220.git,2023-07-12 10:02:41+00:00,Course project CS220 (prof. urbi chatterjee),0,harsho21/CSE-Bubble-CS220,665485751,Verilog,CSE-Bubble-CS220,186,0,2023-07-12 10:11:25+00:00,[],None
534,https://github.com/thereversed/simple_calculator.git,2023-07-15 19:00:37+00:00,,0,thereversed/simple_calculator,666842615,Verilog,simple_calculator,3,0,2023-07-15 19:01:36+00:00,[],None
535,https://github.com/himanshu-0907/Traffic_Light_Controller.git,2023-07-14 13:32:24+00:00,verilog project,0,himanshu-0907/Traffic_Light_Controller,666423244,Verilog,Traffic_Light_Controller,8,0,2023-07-14 13:35:38+00:00,[],None
536,https://github.com/jigyasa14singh/Vending_Machine.git,2023-07-14 14:57:47+00:00,,0,jigyasa14singh/Vending_Machine,666454181,Verilog,Vending_Machine,3,0,2023-07-14 14:58:56+00:00,[],None
537,https://github.com/MuhammedMado/SequenceDetectorMEALY.git,2023-07-14 14:39:51+00:00,Sequence Detector MEALY machine (Verilog Code).,0,MuhammedMado/SequenceDetectorMEALY,666447502,Verilog,SequenceDetectorMEALY,116,0,2023-07-14 14:40:24+00:00,[],None
538,https://github.com/LBL-ICS/TSQR-Design-with-Verilog-HDL-HF.git,2023-07-14 18:41:49+00:00,,0,LBL-ICS/TSQR-Design-with-Verilog-HDL-HF,666525113,Verilog,TSQR-Design-with-Verilog-HDL-HF,33850,0,2023-07-21 02:33:54+00:00,[],None
539,https://github.com/achallawala876/Digital-Systems-FPGA-Projects.git,2023-07-14 23:36:11+00:00,A documentation of projects that I have extended from their initial applications in the Digital Systems Laboratory in order to acquire more knowledge about various concepts.,0,achallawala876/Digital-Systems-FPGA-Projects,666589987,Verilog,Digital-Systems-FPGA-Projects,82485,0,2023-07-14 23:58:15+00:00,[],None
540,https://github.com/yousefg-codes/FPGA-BasicPacman.git,2023-07-16 02:42:53+00:00,,0,yousefg-codes/FPGA-BasicPacman,666914301,Verilog,FPGA-BasicPacman,9928,0,2023-07-16 02:43:56+00:00,[],None
541,https://github.com/Aryaman1528/Verilog_Modules.git,2023-07-11 09:37:05+00:00,,0,Aryaman1528/Verilog_Modules,665032936,Verilog,Verilog_Modules,6,0,2023-07-11 09:38:32+00:00,[],None
542,https://github.com/nishantmsystems/tclprogramming.git,2023-07-11 14:21:22+00:00,,0,nishantmsystems/tclprogramming,665141251,Verilog,tclprogramming,628,0,2023-07-15 16:09:03+00:00,[],None
543,https://github.com/likewise/vexriscv_ip_repo.git,2023-07-11 08:48:37+00:00,Vivado IP repository files for the VexRiscv. If you really still want to use Block Designer...,0,likewise/vexriscv_ip_repo,665014115,Verilog,vexriscv_ip_repo,72,0,2023-07-11 08:50:02+00:00,[],None
544,https://github.com/quebik/test_caravel1.git,2023-07-11 04:32:19+00:00,,0,quebik/test_caravel1,664932223,Verilog,test_caravel1,35290,0,2023-07-11 04:33:09+00:00,[],https://api.github.com/licenses/apache-2.0
545,https://github.com/SaiLikithP/intelunnati_strivers.git,2023-07-15 05:07:34+00:00,Design and Implementation of Automated Teller Machine (FSM) Controller,0,SaiLikithP/intelunnati_strivers,666643573,Verilog,intelunnati_strivers,25436,0,2023-08-31 17:23:13+00:00,[],None
546,https://github.com/sayoojkj/Traffic_Light_control_system.git,2023-07-24 13:57:33+00:00,,0,sayoojkj/Traffic_Light_control_system,670196046,Verilog,Traffic_Light_control_system,248,0,2023-07-24 15:44:41+00:00,[],None
547,https://github.com/DeepakKR1234/Digital_clock.git,2023-07-16 15:19:44+00:00,Simulation of Digital Clock using Verilog,0,DeepakKR1234/Digital_clock,667080596,Verilog,Digital_clock,2,0,2023-07-16 15:52:41+00:00,[],None
548,https://github.com/Arshia-CE/Risk_CPU.git,2023-07-16 17:50:24+00:00,A simple CPU designed in verilog,0,Arshia-CE/Risk_CPU,667120765,Verilog,Risk_CPU,6,0,2023-07-16 17:53:26+00:00,[],None
549,https://github.com/ChetanyaKatara/Asynchronus_FIFO.git,2023-07-17 10:54:32+00:00,Implemented an asynchronuc FIFO using Verilog HDL.,0,ChetanyaKatara/Asynchronus_FIFO,667369750,Verilog,Asynchronus_FIFO,11,0,2023-07-26 14:30:24+00:00,[],https://api.github.com/licenses/mit
550,https://github.com/NHGrizzly/Display7Seg.git,2023-07-26 20:08:13+00:00,Converts binary switch input to 7 segment display output on the Cyclone V GX Starter development board,0,NHGrizzly/Display7Seg,671215646,Verilog,Display7Seg,3,0,2023-07-26 20:08:18+00:00,[],None
551,https://github.com/crazyjack44/FPGA-SPI.git,2023-07-24 03:37:45+00:00,,0,crazyjack44/FPGA-SPI,669987708,Verilog,FPGA-SPI,1,0,2023-07-24 03:40:50+00:00,[],None
552,https://github.com/yosri227/RISC.git,2023-07-23 22:26:08+00:00,,0,yosri227/RISC,669930805,Verilog,RISC,449,0,2023-07-23 22:36:34+00:00,[],None
553,https://github.com/AvalonSemiconductors/tt04-logisim-auto.git,2023-07-24 09:05:50+00:00,Automatic Logisim to GDSII flow for TinyTapeout,0,AvalonSemiconductors/tt04-logisim-auto,670085838,Verilog,tt04-logisim-auto,449,0,2023-07-24 11:59:03+00:00,[],https://api.github.com/licenses/apache-2.0
554,https://github.com/hu6148/StringDetector.git,2023-07-21 11:09:47+00:00,,0,hu6148/StringDetector,669109097,Verilog,StringDetector,1,0,2023-07-21 11:11:39+00:00,[],None
555,https://github.com/lukgowsi/Computer-Organization.git,2023-07-21 22:54:39+00:00,,0,lukgowsi/Computer-Organization,669317378,Verilog,Computer-Organization,16,0,2023-07-21 22:55:50+00:00,[],None
556,https://github.com/gunavant-s/Ripple_Carry_Adder_Day-003.git,2023-07-21 23:56:46+00:00,A ripple carry adder is a type of adder circuit that performs the addition of multiple binary digits by cascading full adders together.,0,gunavant-s/Ripple_Carry_Adder_Day-003,669327082,Verilog,Ripple_Carry_Adder_Day-003,59,0,2023-07-22 00:02:53+00:00,[],None
557,https://github.com/YunJoongChul/Verilog.git,2023-07-26 08:28:21+00:00,,0,YunJoongChul/Verilog,670964073,Verilog,Verilog,6,0,2023-07-28 02:10:45+00:00,[],None
558,https://github.com/211hunter166/CSE-BUBBLE_CS220_ASSG..git,2023-07-08 09:54:48+00:00,,0,211hunter166/CSE-BUBBLE_CS220_ASSG.,663865593,Verilog,CSE-BUBBLE_CS220_ASSG.,462,0,2023-07-08 09:56:13+00:00,[],None
559,https://github.com/Nripench/VSD_5_DAYS_TCL_WORKSHOP.git,2023-07-09 18:19:59+00:00,,0,Nripench/VSD_5_DAYS_TCL_WORKSHOP,664357588,Verilog,VSD_5_DAYS_TCL_WORKSHOP,632,0,2023-07-14 05:17:04+00:00,[],None
560,https://github.com/yashimalik/verilog.git,2023-07-09 19:19:59+00:00,,0,yashimalik/verilog,664372146,Verilog,verilog,6,0,2023-07-13 16:35:24+00:00,[],None
561,https://github.com/markthumes/ad7606.git,2023-07-10 01:55:55+00:00,AD7606 Verilog Driver,0,markthumes/ad7606,664445059,Verilog,ad7606,5,0,2023-07-10 02:24:56+00:00,[],None
562,https://github.com/findingaish/Tic_Tac_Toe.git,2023-07-10 08:03:35+00:00,"This GitHub repository hosts a project that implements a Tic Tac Toe game using Verilog and GTK Wave for waveform visualization. Tic Tac Toe is a classic game played on a grid of 3x3 squares. The goal of the game is for players to strategically place their symbols (usually X and O) in a row, column, or diagonal to win the game.",0,findingaish/Tic_Tac_Toe,664543763,Verilog,Tic_Tac_Toe,24,0,2023-07-10 08:17:45+00:00,[],None
563,https://github.com/AbdullahKhan286/Internship_embedded-systems.git,2023-07-09 10:15:19+00:00,This repo is for my work which I have done on an internship in embedded systems at University of Engineering of Technology Peshawar.,0,AbdullahKhan286/Internship_embedded-systems,664229566,Verilog,Internship_embedded-systems,96,0,2023-07-09 10:25:40+00:00,[],None
564,https://github.com/Sumitkb21/CS220_Processor.git,2023-07-09 13:05:50+00:00,,0,Sumitkb21/CS220_Processor,664271392,Verilog,CS220_Processor,22,0,2023-07-09 13:09:15+00:00,[],None
565,https://github.com/rudra-101/Hexadecimal-Keypad-Scanner-and-Encoder.git,2023-07-10 18:04:35+00:00,,0,rudra-101/Hexadecimal-Keypad-Scanner-and-Encoder,664773770,Verilog,Hexadecimal-Keypad-Scanner-and-Encoder,251,0,2023-07-10 18:07:14+00:00,[],None
566,https://github.com/praveenyadav02011995/lenet.git,2023-07-20 18:06:59+00:00,,0,praveenyadav02011995/lenet,668843457,Verilog,lenet,1535,0,2023-07-20 18:08:08+00:00,[],None
567,https://github.com/Shin-Yan/Computer-Organization-2023.git,2023-07-18 06:47:06+00:00,,0,Shin-Yan/Computer-Organization-2023,667720227,Verilog,Computer-Organization-2023,967,0,2023-07-18 10:04:24+00:00,[],None
568,https://github.com/EatFruitWang/Vivado_ip_teach.git,2023-07-19 07:07:21+00:00,,0,EatFruitWang/Vivado_ip_teach,668162907,Verilog,Vivado_ip_teach,6,0,2023-07-19 15:42:53+00:00,[],https://api.github.com/licenses/mit
569,https://github.com/ZeboZebo702/ARITH_2023_constant_division.git,2023-07-17 12:35:03+00:00,,0,ZeboZebo702/ARITH_2023_constant_division,667405444,Verilog,ARITH_2023_constant_division,171,0,2023-07-17 13:20:52+00:00,[],None
570,https://github.com/sayoojkj/Convolutional_encoder.git,2023-07-17 09:25:36+00:00,,0,sayoojkj/Convolutional_encoder,667337685,Verilog,Convolutional_encoder,101,0,2023-07-17 09:28:02+00:00,[],None
571,https://github.com/wataru030-XIAOHEI/proj-rv64.git,2023-07-22 13:06:10+00:00,,0,wataru030-XIAOHEI/proj-rv64,669492911,Verilog,proj-rv64,12368,0,2023-08-12 05:51:15+00:00,[],None
572,https://github.com/telmo-paes/Verilog_pratices.git,2023-07-22 18:14:56+00:00,,0,telmo-paes/Verilog_pratices,669576129,Verilog,Verilog_pratices,6,0,2023-07-23 19:51:24+00:00,[],None
573,https://github.com/SunBenqian/test.git,2023-07-23 03:42:48+00:00,,0,SunBenqian/test,669669700,Verilog,test,66,0,2023-07-23 03:55:14+00:00,[],None
574,https://github.com/HarshitMongre/RISC-V-processor-design.git,2023-07-16 15:51:39+00:00,the files into this repository is a collection of different sub0modules which are are required to assemble a real-time processor and the TOP module(inter-connected sub-modules) ),0,HarshitMongre/RISC-V-processor-design,667089451,Verilog,RISC-V-processor-design,24,0,2023-07-16 15:59:15+00:00,[],None
575,https://github.com/Womics/fpga_neuron.git,2023-07-17 09:01:42+00:00,,0,Womics/fpga_neuron,667328969,Verilog,fpga_neuron,4,0,2023-07-17 09:28:34+00:00,[],https://api.github.com/licenses/mit
576,https://github.com/Rohan-1704/Pipelined_Processor.git,2023-07-19 07:53:37+00:00,,0,Rohan-1704/Pipelined_Processor,668178295,Verilog,Pipelined_Processor,2,0,2023-07-19 07:54:13+00:00,[],None
577,https://github.com/AmmarElmargawy/mult_control.git,2023-07-19 18:15:46+00:00,"This state machine will manage all the operations that occur within the 8x8 multiplier   using 6 defined states: idle, lsb, mid, msb, calc_done, and err   The outputs of the mult_control state machine control the other blocks in the design.",0,AmmarElmargawy/mult_control,668404374,Verilog,mult_control,695,0,2023-07-19 18:21:20+00:00,[],None
578,https://github.com/DepJo/Digital_1_UNAL_2021-2.git,2023-07-19 20:08:51+00:00,Desarrollo de la asignatura Electronica Digital 1 - UNAL_2021-2,0,DepJo/Digital_1_UNAL_2021-2,668438786,Verilog,Digital_1_UNAL_2021-2,10292,0,2023-07-19 20:12:10+00:00,[],None
579,https://github.com/nlshipp/PSoC5_DmaTest.git,2023-07-19 02:44:33+00:00,"PSoC5LP project to test DMA, FIFO and bit reversing options.",0,nlshipp/PSoC5_DmaTest,668095010,Verilog,PSoC5_DmaTest,229,0,2023-08-14 23:25:17+00:00,['psoc5lp'],None
580,https://github.com/kfcampit/LBYCPD3-FinalProject.git,2023-07-20 07:16:41+00:00,,0,kfcampit/LBYCPD3-FinalProject,668596413,Verilog,LBYCPD3-FinalProject,116,0,2024-01-10 07:43:01+00:00,[],None
581,https://github.com/SantoshSrivatsan24/ece564_project1.git,2023-07-22 16:28:55+00:00,ECE 564 Project 1: Verilog description of the convolution Layer of a CNN ,0,SantoshSrivatsan24/ece564_project1,669548466,Verilog,ece564_project1,9276,0,2024-02-02 22:02:31+00:00,['ece564'],None
582,https://github.com/NicoCasas/Tp_Final_Arqui.git,2023-07-10 19:49:20+00:00,Tp final de aquitectura,0,NicoCasas/Tp_Final_Arqui,664808573,Verilog,Tp_Final_Arqui,247,0,2024-02-06 03:53:56+00:00,[],None
583,https://github.com/Sulik-git/sycyf_proj.git,2023-07-22 11:10:02+00:00,Repository for sycyf course's project,0,Sulik-git/sycyf_proj,669463572,Verilog,sycyf_proj,18035,0,2023-07-22 11:12:40+00:00,[],None
584,https://github.com/JasonA-dev/Nabu_MiSTer.git,2023-07-19 10:50:42+00:00,,0,JasonA-dev/Nabu_MiSTer,668240374,Verilog,Nabu_MiSTer,106,0,2023-07-19 10:50:51+00:00,[],https://api.github.com/licenses/gpl-2.0
585,https://github.com/Moksh-jain/fpga_blockchain.git,2023-07-18 14:50:12+00:00,,0,Moksh-jain/fpga_blockchain,667899049,Verilog,fpga_blockchain,75,0,2023-07-18 14:53:03+00:00,[],None
586,https://github.com/napen/32-Bit-MIPS-Test.git,2023-07-18 23:11:16+00:00,testing out Efabless with old 32 Bit MIPS Processor Design,0,napen/32-Bit-MIPS-Test,668052408,Verilog,32-Bit-MIPS-Test,35294,0,2023-07-18 23:12:01+00:00,[],https://api.github.com/licenses/apache-2.0
587,https://github.com/baby9/HPS2FPGAmapping.git,2023-07-19 07:33:58+00:00,"SoCFPGA: Mapping HPS Peripherals, like I²C or CAN, over the FPGA fabric to FPGA I/O and using embedded Linux to control them (Intel Cyclone V)",0,baby9/HPS2FPGAmapping,668171729,Verilog,HPS2FPGAmapping,7931,0,2023-07-19 07:48:07+00:00,[],https://api.github.com/licenses/mit
588,https://github.com/Armando-Moya/DE10LITE.git,2023-07-25 03:11:55+00:00,a fpga examples of verilog modules ,0,Armando-Moya/DE10LITE,670426230,Verilog,DE10LITE,6,0,2023-07-25 03:17:14+00:00,[],None
589,https://github.com/Sumithara009/vlsi.git,2023-07-25 10:36:29+00:00,,0,Sumithara009/vlsi,670565282,Verilog,vlsi,83,0,2023-07-25 10:38:19+00:00,[],None
590,https://github.com/toanpm1011/Car_Parking_FSM.git,2023-07-25 04:10:34+00:00,Mini Project:  Khối mạch FSM điều khiển bãi đỗ xe,0,toanpm1011/Car_Parking_FSM,670440036,Verilog,Car_Parking_FSM,79,0,2023-07-25 04:24:08+00:00,[],None
591,https://github.com/manishpundir2207/MIPS-32-Multi-cycle-Processor.git,2023-07-25 19:32:43+00:00,,0,manishpundir2207/MIPS-32-Multi-cycle-Processor,670764686,Verilog,MIPS-32-Multi-cycle-Processor,963,0,2023-07-25 19:38:00+00:00,[],None
592,https://github.com/umarcis/ElevatorSystem.git,2023-07-20 12:02:32+00:00,"Design a digital controller for elevators to ensure safe and efficient floor transportation, including floor selection, door operation, motor control, overload protection, and fire alarm response.",0,umarcis/ElevatorSystem,668701445,Verilog,ElevatorSystem,3009,0,2023-07-20 12:13:56+00:00,[],https://api.github.com/licenses/apache-2.0
593,https://github.com/PranshulG/FPGA.git,2023-07-21 13:51:50+00:00,,0,PranshulG/FPGA,669163394,Verilog,FPGA,0,0,2023-07-21 13:53:20+00:00,[],None
594,https://github.com/darshan-kr/Day-008-5_to_32_decoder.git,2023-07-25 16:10:03+00:00,"The combinational circuit that change the binary information into 2N output lines is known as Decoders. The binary information is passed in the form of N input lines. The output lines define the 2N-bit code for the binary information. In simple words, the Decoder performs the reverse operation of the Encoder.",0,darshan-kr/Day-008-5_to_32_decoder,670695137,Verilog,Day-008-5_to_32_decoder,2,0,2023-07-25 16:11:22+00:00,[],None
595,https://github.com/ksungkeun84/chip-design.git,2023-07-26 03:43:28+00:00,,0,ksungkeun84/chip-design,670879052,Verilog,chip-design,106109,0,2023-07-26 04:20:24+00:00,[],None
596,https://github.com/amandudeja2134/MIPS-Processor.git,2023-07-17 13:58:38+00:00,5 Stage Pipelined MIPS Processor,0,amandudeja2134/MIPS-Processor,667438341,Verilog,MIPS-Processor,83,0,2023-08-12 11:10:07+00:00,[],None
597,https://github.com/akiokitagawa/test01.git,2023-07-21 02:32:11+00:00,,0,akiokitagawa/test01,668958248,Verilog,test01,35294,0,2023-07-21 02:33:00+00:00,[],https://api.github.com/licenses/apache-2.0
598,https://github.com/wavybangsy/CSARCH1-Decoder-Implementation-of-Boolean-Function.git,2023-07-21 02:57:21+00:00,,0,wavybangsy/CSARCH1-Decoder-Implementation-of-Boolean-Function,668963779,Verilog,CSARCH1-Decoder-Implementation-of-Boolean-Function,2,0,2023-07-21 03:00:10+00:00,[],None
599,https://github.com/riyabansal0107/Single-Cycle-Processor.git,2023-07-17 05:26:18+00:00,,0,riyabansal0107/Single-Cycle-Processor,667257658,Verilog,Single-Cycle-Processor,12,0,2023-07-17 05:28:11+00:00,[],None
600,https://github.com/Yash070707/MIPS-32-Processor.git,2023-07-19 05:27:32+00:00,,0,Yash070707/MIPS-32-Processor,668133036,Verilog,MIPS-32-Processor,5,0,2023-07-19 05:28:58+00:00,[],None
601,https://github.com/sayoojkj/Pulse_width_modulation.git,2023-07-23 10:12:23+00:00,Verilog implementation of pulse width modulation,0,sayoojkj/Pulse_width_modulation,669752992,Verilog,Pulse_width_modulation,113,0,2023-07-23 10:14:25+00:00,[],None
602,https://github.com/Mohamed-AbdulRahman5/GCD.git,2023-07-22 10:16:54+00:00,,0,Mohamed-AbdulRahman5/GCD,669450780,Verilog,GCD,2,0,2023-07-22 10:18:48+00:00,[],None
603,https://github.com/darshan-kr/Day-005-Priority_encoder.git,2023-07-23 05:50:11+00:00,"Priority encoder is a combinational circuit. it is the practical form of encoder. The priority encoder is a circuit that executes the priority function. The logic of the priority encoder is such that two or more inputs appear at an equal time, the input having the largest priority will take precedence.",0,darshan-kr/Day-005-Priority_encoder,669693000,Verilog,Day-005-Priority_encoder,3,0,2023-07-23 05:52:00+00:00,[],None
604,https://github.com/heesang-chae/CRC.git,2023-07-22 11:14:48+00:00,,0,heesang-chae/CRC,669464728,Verilog,CRC,4,0,2023-07-22 11:16:49+00:00,[],None
605,https://github.com/Vikas01xz/Booth_Multiplier.git,2023-07-13 11:24:00+00:00,A 4-bit booth's multiplier with Built in Self Test (BIST) feature,0,Vikas01xz/Booth_Multiplier,665954616,Verilog,Booth_Multiplier,4696,0,2023-07-13 11:34:00+00:00,[],None
606,https://github.com/Glinary/Gate-Level-Modeling.git,2023-07-10 03:01:51+00:00,,0,Glinary/Gate-Level-Modeling,664459753,Verilog,Gate-Level-Modeling,39,0,2023-07-10 03:04:11+00:00,[],None
607,https://github.com/Shubhansh25/car-parking-system.git,2023-07-12 22:21:11+00:00,,0,Shubhansh25/car-parking-system,665738087,Verilog,car-parking-system,4,0,2023-07-23 22:12:35+00:00,[],None
608,https://github.com/udayapeddirajub/Booth_Multiplier_32.git,2023-07-09 05:58:06+00:00,"In this repository, I have shared all the files required to design the booth multiplier with radix4 restoring method",0,udayapeddirajub/Booth_Multiplier_32,664172681,Verilog,Booth_Multiplier_32,3,0,2023-07-09 06:08:22+00:00,[],None
609,https://github.com/adrija-50/Traffic_Signal_Design.git,2023-07-12 21:01:18+00:00,Verilog HDL coding of a traffic signal system using icarus verilog,0,adrija-50/Traffic_Signal_Design,665720138,Verilog,Traffic_Signal_Design,217,0,2023-07-14 19:08:10+00:00,[],https://api.github.com/licenses/unlicense
610,https://github.com/Vaibhav-shar/UART_Protocol.git,2023-07-14 00:41:09+00:00,,0,Vaibhav-shar/UART_Protocol,666201538,Verilog,UART_Protocol,4,0,2023-07-14 00:44:51+00:00,[],None
611,https://github.com/Yuboeee/neuron_1.git,2023-07-14 05:42:01+00:00,,0,Yuboeee/neuron_1,666271810,Verilog,neuron_1,6,0,2023-07-14 18:11:24+00:00,[],None
612,https://github.com/TanusriK/intelunnati_InnovateX.git,2023-07-14 06:42:47+00:00,Design and Implementation of ATM (FSM) Controller,0,TanusriK/intelunnati_InnovateX,666290170,Verilog,intelunnati_InnovateX,21974,0,2023-07-19 11:53:38+00:00,[],None
613,https://github.com/fenil210/WALLACE_TREE_MULTIPLIER.git,2023-07-14 13:09:13+00:00,Wallace Tree Multiplier using Verilog and Logisim,0,fenil210/WALLACE_TREE_MULTIPLIER,666415206,Verilog,WALLACE_TREE_MULTIPLIER,4151,0,2023-07-14 13:40:22+00:00,[],None
614,https://github.com/ashu8004/karatsuba_multiplication.git,2023-07-10 02:37:10+00:00,,0,ashu8004/karatsuba_multiplication,664454123,Verilog,karatsuba_multiplication,16,0,2023-07-10 04:24:56+00:00,[],None
615,https://github.com/meghdesai18/Vending-Machine.git,2023-07-11 12:08:18+00:00,I had written a code for vending  machine using verilog language.,0,meghdesai18/Vending-Machine,665088234,Verilog,Vending-Machine,2,0,2023-07-11 12:10:27+00:00,[],None
616,https://github.com/Max-Ming/2023-HITSZCPU.git,2023-07-10 02:32:32+00:00,分为单周期和流水线CPU,0,Max-Ming/2023-HITSZCPU,664453038,Verilog,2023-HITSZCPU,19,0,2023-07-10 03:17:21+00:00,[],None
617,https://github.com/jissjoseph1997/Single_Port-RAM.git,2023-07-11 09:32:08+00:00,Here we are using a single PORT for read and write operations on a memory. A testbench has been created to verify the data transactions. ,0,jissjoseph1997/Single_Port-RAM,665031028,Verilog,Single_Port-RAM,4,0,2023-07-11 10:08:55+00:00,[],None
618,https://github.com/meghdesai18/Verilog-Modules.git,2023-07-11 15:14:44+00:00,,0,meghdesai18/Verilog-Modules,665162772,Verilog,Verilog-Modules,7,0,2023-07-11 15:17:03+00:00,[],None
619,https://github.com/Turikanandakumar/intelunnati_fixer.git,2023-07-11 14:59:55+00:00,,0,Turikanandakumar/intelunnati_fixer,665156851,Verilog,intelunnati_fixer,15094,0,2023-07-19 12:27:18+00:00,[],None
620,https://github.com/tamurae/tt04-latin-practice-verilog.git,2023-07-10 22:58:07+00:00,Tiny Tapeout 04 Latin Practice Verilog Test,0,tamurae/tt04-latin-practice-verilog,664855863,Verilog,tt04-latin-practice-verilog,67,0,2023-07-13 20:15:16+00:00,[],https://api.github.com/licenses/apache-2.0
621,https://github.com/yasharthparas/Vending_Machine.git,2023-07-11 05:16:57+00:00,Vending Machine using FSM and Verilog,0,yasharthparas/Vending_Machine,664943508,Verilog,Vending_Machine,12,0,2023-07-11 05:22:33+00:00,[],None
622,https://github.com/msuadOf/AXI4_JLS.git,2023-07-08 15:40:18+00:00,,0,msuadOf/AXI4_JLS,663980117,Verilog,AXI4_JLS,5069,0,2023-07-08 15:40:45+00:00,[],None
623,https://github.com/sayoojkj/Carry_select_adder.git,2023-07-17 09:46:14+00:00,Verilog implementation of carry select adder,0,sayoojkj/Carry_select_adder,667345345,Verilog,Carry_select_adder,96,0,2023-07-17 09:47:47+00:00,[],None
624,https://github.com/SourajaKundu/System-on-Chip-project.git,2023-07-16 13:38:35+00:00,,0,SourajaKundu/System-on-Chip-project,667052255,Verilog,System-on-Chip-project,11,0,2023-07-16 14:23:20+00:00,[],https://api.github.com/licenses/mit
625,https://github.com/TheMihirD/RISC-Bubble.git,2023-07-16 16:12:03+00:00,RISC Bubble Processor CS220,0,TheMihirD/RISC-Bubble,667095113,Verilog,RISC-Bubble,110,0,2023-07-16 16:13:53+00:00,[],None
626,https://github.com/flowingsunset/Do_Something_With_FPGA.git,2023-07-13 09:56:54+00:00,Verilog로 이것저것 해보기,0,flowingsunset/Do_Something_With_FPGA,665924997,Verilog,Do_Something_With_FPGA,96,0,2023-11-10 04:28:32+00:00,[],None
627,https://github.com/ninad4290/Programmable-Logic-Device.git,2023-07-17 20:14:46+00:00,Built a Light controller and a 3-to-8 decoder in HDL (Verilog) using Altera Quartus Prime,0,ninad4290/Programmable-Logic-Device,667570714,Verilog,Programmable-Logic-Device,3,0,2024-02-25 20:36:29+00:00,[],None
628,https://github.com/tnd13600/cable.git,2023-07-11 14:16:57+00:00,,0,tnd13600/cable,665139516,Verilog,cable,68,0,2023-07-11 14:19:46+00:00,[],None
629,https://github.com/chomchom69420/verilog-uart.git,2023-07-19 19:14:20+00:00,UART loopback using Verilog.,0,chomchom69420/verilog-uart,668422886,Verilog,verilog-uart,7,0,2024-04-04 00:28:16+00:00,[],None
630,https://github.com/udhav-varma/CSE_Bubble.git,2023-07-10 15:42:23+00:00,,0,udhav-varma/CSE_Bubble,664721307,Verilog,CSE_Bubble,112,0,2023-07-10 15:43:32+00:00,[],None
631,https://github.com/Simran16702/dual_port_ram.git,2023-07-11 06:01:50+00:00,Designed a 256‐bit x 8‐bit synchronous dual port RAM with any combination of Read and Write operations in the same clock cycle using Verilog HDL.,0,Simran16702/dual_port_ram,664956274,Verilog,dual_port_ram,32,0,2023-07-11 12:35:14+00:00,[],None
632,https://github.com/aryang13/closetgenie.git,2023-07-09 23:37:01+00:00,,0,aryang13/closetgenie,664420425,Verilog,closetgenie,67152,0,2023-07-09 23:38:09+00:00,[],None
633,https://github.com/disneyyy/Fight_zombie.git,2023-07-11 03:50:28+00:00,111-1 數位系統實驗,0,disneyyy/Fight_zombie,664921903,Verilog,Fight_zombie,10946,0,2023-07-11 03:51:29+00:00,[],None
634,https://github.com/eslamsolyman01/AES.git,2023-07-15 12:52:31+00:00,,0,eslamsolyman01/AES,666748257,Verilog,AES,69,0,2023-07-15 12:53:58+00:00,[],None
635,https://github.com/anjali1411/Image-Processing-using-Verilog.git,2023-07-16 09:58:52+00:00,,0,anjali1411/Image-Processing-using-Verilog,666999921,Verilog,Image-Processing-using-Verilog,2647,0,2023-07-16 10:05:43+00:00,[],None
636,https://github.com/Vikas01xz/Interrupt_Controller.git,2023-07-12 19:57:34+00:00,,0,Vikas01xz/Interrupt_Controller,665702749,Verilog,Interrupt_Controller,11,0,2023-07-13 11:05:34+00:00,[],None
637,https://github.com/naravameghana1/SPI_Protocol.git,2023-07-12 18:13:20+00:00,,0,naravameghana1/SPI_Protocol,665669489,Verilog,SPI_Protocol,41,0,2023-07-12 18:14:45+00:00,[],None
638,https://github.com/Yashas127/Bubble-Machine.git,2023-07-13 07:37:07+00:00,CS220 Project,0,Yashas127/Bubble-Machine,665873711,Verilog,Bubble-Machine,5,0,2023-07-13 07:46:24+00:00,[],None
639,https://github.com/chirag091167/fifo.git,2023-07-13 16:36:41+00:00,,0,chirag091167/fifo,666071830,Verilog,fifo,4,0,2023-07-13 16:39:07+00:00,[],None
640,https://github.com/Aayush2592/intelunnati_proffesionals.git,2023-07-14 06:52:22+00:00,this repository is created to submit the project for the intel unnati program,0,Aayush2592/intelunnati_proffesionals,666293220,Verilog,intelunnati_proffesionals,24978,0,2023-07-19 12:03:23+00:00,[],None
641,https://github.com/Rakeshgupta2020/AHB2APB-Bridge-Implementation-using-verilog-HDL.git,2023-07-10 08:03:27+00:00,,1,Rakeshgupta2020/AHB2APB-Bridge-Implementation-using-verilog-HDL,664543713,Verilog,AHB2APB-Bridge-Implementation-using-verilog-HDL,19,0,2023-07-10 08:50:06+00:00,[],None
642,https://github.com/Vaishnavi-Anand21/CS220-Processor.git,2023-07-08 16:58:21+00:00,,0,Vaishnavi-Anand21/CS220-Processor,664005553,Verilog,CS220-Processor,168,0,2023-07-08 17:10:11+00:00,[],None
643,https://github.com/kartik2629/Intel-Unnati-Techiefi.git,2023-07-09 07:58:45+00:00,Verilog application on ATM FSM controller,0,kartik2629/Intel-Unnati-Techiefi,664198077,Verilog,Intel-Unnati-Techiefi,553,0,2023-07-20 14:21:57+00:00,[],None
644,https://github.com/lithika884/Intelunnati_TechElite.git,2023-07-14 09:05:57+00:00,Design and Implementation of any time Electric Bill Payment Machine Controller,0,lithika884/Intelunnati_TechElite,666336976,Verilog,Intelunnati_TechElite,15195,0,2023-07-20 07:49:51+00:00,[],None
645,https://github.com/iagoalvess/ISL-UFMG.git,2023-07-14 22:47:23+00:00,Trabalho prático desenvolvido na disciplina de Introdução aos Sistemas Lógicos - UFMG,0,iagoalvess/ISL-UFMG,666581895,Verilog,ISL-UFMG,25,0,2023-07-14 22:48:44+00:00,[],None
646,https://github.com/DreamChaser-luzeyu/verilator-study.git,2023-07-17 19:12:45+00:00,,0,DreamChaser-luzeyu/verilator-study,667552510,Verilog,verilator-study,688,0,2023-08-19 09:27:27+00:00,[],None
647,https://github.com/mysterious24/sequencial-circuit.git,2023-07-19 10:28:54+00:00,RTL code for sequencial circuits with there testbenches,0,mysterious24/sequencial-circuit,668233007,Verilog,sequencial-circuit,3,0,2023-07-19 10:33:51+00:00,[],None
648,https://github.com/clikbait295/riscvTest.git,2023-07-24 18:06:02+00:00,,0,clikbait295/riscvTest,670291943,Verilog,riscvTest,11908,0,2023-07-24 18:08:01+00:00,[],https://api.github.com/licenses/apache-2.0
649,https://github.com/saikrishnareddy2002/-AHB-TO-APB-BRIDGE.git,2023-07-11 15:40:04+00:00,The AHB to APB bridge is a hardware device that provides an interface between the high-speed AHB bus and the low-power APB bus. It allows devices that are connected to the APB bus to communicate with devices that are connected to the AHB bus.,0,saikrishnareddy2002/-AHB-TO-APB-BRIDGE,665172499,Verilog,-AHB-TO-APB-BRIDGE,8,0,2023-07-11 15:47:00+00:00,[],None
650,https://github.com/HassanHatem1/Encryption_Decryption_System.git,2023-07-12 00:25:59+00:00,,0,HassanHatem1/Encryption_Decryption_System,665319050,Verilog,Encryption_Decryption_System,10083,0,2023-07-12 00:26:23+00:00,[],None
651,https://github.com/Sujay001coder/TRAFFIC_LIGHT_CONTROLLER.git,2023-07-13 10:17:35+00:00,,0,Sujay001coder/TRAFFIC_LIGHT_CONTROLLER,665932328,Verilog,TRAFFIC_LIGHT_CONTROLLER,2,0,2023-07-13 11:25:38+00:00,[],None
652,https://github.com/odeinjul/USTC-CODH2023.git,2023-07-13 11:29:18+00:00,,0,odeinjul/USTC-CODH2023,665956413,Verilog,USTC-CODH2023,10196,0,2023-07-13 11:30:24+00:00,[],None
653,https://github.com/Co1dmountain/Sdram_Controller_pro_fifo.git,2023-07-11 15:01:03+00:00,add fifo to sdram controller,0,Co1dmountain/Sdram_Controller_pro_fifo,665157366,Verilog,Sdram_Controller_pro_fifo,6714,0,2023-07-11 15:04:43+00:00,[],None
654,https://github.com/Amity-Blight/VE370.git,2023-07-12 14:35:29+00:00,,0,Amity-Blight/VE370,665589347,Verilog,VE370,1053,0,2023-07-18 12:55:29+00:00,[],None
655,https://github.com/ianerik6/Concepcion7.git,2023-07-12 16:32:35+00:00,Es repositorio de Preueba para Efabless,0,ianerik6/Concepcion7,665634839,Verilog,Concepcion7,35296,0,2023-07-12 16:33:32+00:00,[],https://api.github.com/licenses/apache-2.0
656,https://github.com/sp1231/mips-pipelined.git,2023-07-17 17:49:44+00:00,MIPS based 5 stage pipelined processor implementation,0,sp1231/mips-pipelined,667525334,Verilog,mips-pipelined,16,0,2023-07-17 17:57:27+00:00,[],None
657,https://github.com/SunBenqian/DataConverter.git,2023-07-23 03:07:51+00:00,,0,SunBenqian/DataConverter,669664085,Verilog,DataConverter,65,0,2023-07-23 03:23:09+00:00,[],None
658,https://github.com/aradshapira/step_motor_controller.git,2023-07-23 08:00:09+00:00,This is a LAB2 project for HUJI digital lab course. The project contains Verilog code for the step motor controller and the lab report with detailed description. The project is made for Altera Cyclone V FPGA.,0,aradshapira/step_motor_controller,669721782,Verilog,step_motor_controller,727,0,2023-07-23 08:01:11+00:00,[],None
659,https://github.com/thereversed/4sevcen-segment_NEXYSDDR.git,2023-07-21 10:41:42+00:00,,0,thereversed/4sevcen-segment_NEXYSDDR,669100382,Verilog,4sevcen-segment_NEXYSDDR,2,0,2023-07-21 10:43:58+00:00,[],None
660,https://github.com/betechie/intelunnati_mahadev.git,2023-07-13 19:28:44+00:00,DESIGN AND IMPLEMENTATION OF ATM (FSM) CONTROLLER,0,betechie/intelunnati_mahadev,666129043,Verilog,intelunnati_mahadev,31560,0,2023-07-19 15:56:30+00:00,[],None
661,https://github.com/putoze/ic_contest.git,2023-07-21 05:13:05+00:00,,0,putoze/ic_contest,668994338,Verilog,ic_contest,46233,0,2023-07-21 05:16:00+00:00,[],None
662,https://github.com/TonyHo722/fsic_tony.git,2023-07-16 07:37:46+00:00,for fsic integration debug,2,TonyHo722/fsic_tony,666969065,Verilog,fsic_tony,20277,0,2023-07-16 07:40:14+00:00,[],None
663,https://github.com/danielyu925/16-Bit-4-Stage-RISC-Pipeline-Processor.git,2023-07-09 03:39:42+00:00,,0,danielyu925/16-Bit-4-Stage-RISC-Pipeline-Processor,664146826,Verilog,16-Bit-4-Stage-RISC-Pipeline-Processor,3557,0,2024-03-31 03:07:21+00:00,[],None
664,https://github.com/Mooselee/PythonTimingAnalysis.git,2023-07-15 03:16:51+00:00,,0,Mooselee/PythonTimingAnalysis,666623954,Verilog,PythonTimingAnalysis,3160,0,2023-07-15 03:17:39+00:00,[],None
665,https://github.com/Reshmasaba/intelunnati_CALL-OF-DUTY.git,2023-07-15 06:20:12+00:00,This repository presents the design and functional simulation of a Finite State Machine (FSM) for Land Rover Figo vehicle,0,Reshmasaba/intelunnati_CALL-OF-DUTY,666657941,Verilog,intelunnati_CALL-OF-DUTY,12257,0,2023-07-19 12:18:34+00:00,[],None
666,https://github.com/Yossef-Emad/ABP-bus-Connected-to-UART-and-GPIO-using-Verilog.git,2023-07-14 20:45:48+00:00,ABP bus Connected to UART and GPIO using Verilog,0,Yossef-Emad/ABP-bus-Connected-to-UART-and-GPIO-using-Verilog,666557665,Verilog,ABP-bus-Connected-to-UART-and-GPIO-using-Verilog,9,0,2023-07-14 20:46:55+00:00,[],None
667,https://github.com/mikesjak/RISCV-CPU.git,2023-07-13 13:34:39+00:00,32-bit RISC-V CPU,0,mikesjak/RISCV-CPU,666003081,Verilog,RISCV-CPU,7,0,2023-07-13 14:30:21+00:00,"['risc-v', 'riscv32']",https://api.github.com/licenses/mit
668,https://github.com/Vimal2710/Vimal_Verilog.git,2023-07-13 18:21:31+00:00,,0,Vimal2710/Vimal_Verilog,666107753,Verilog,Vimal_Verilog,12,0,2023-07-13 18:24:24+00:00,[],None
669,https://github.com/harshdeepdey/Pipeline-Design-for-32-Bit-Microprocessor.git,2023-07-14 12:30:07+00:00,"Implemented a basic 5 stage: Instruction Fetch, Decode, Execute, Memory Access, Register Writeback; pipeline design for a 32-bit Simple RISC microprocessor using Verilog",0,harshdeepdey/Pipeline-Design-for-32-Bit-Microprocessor,666402389,Verilog,Pipeline-Design-for-32-Bit-Microprocessor,1,0,2023-07-14 12:30:47+00:00,[],None
670,https://github.com/william-lyh/DFX_TclScripts.git,2023-07-14 11:45:25+00:00,,0,william-lyh/DFX_TclScripts,666388157,Verilog,DFX_TclScripts,20,0,2023-07-18 00:49:02+00:00,[],None
671,https://github.com/JMcGhee-CPE/RISCV_Verilog.git,2023-07-15 22:45:39+00:00,"This repo will serve as a scratchpad for my future VHDL/Verilog related projects. I intend to improve my skills in UVM, as well build up a personal library of hardware for future projects. This first repo I will go through the steps I took to create a RISCV Processor.",0,JMcGhee-CPE/RISCV_Verilog,666882064,Verilog,RISCV_Verilog,6,0,2023-07-15 23:26:29+00:00,[],None
672,https://github.com/02bwilson/FPGA_Hex_Count.git,2023-07-08 18:19:41+00:00,A program that counts through hex numbers on a 7 segment display on the STEP FPGA.,0,02bwilson/FPGA_Hex_Count,664030206,Verilog,FPGA_Hex_Count,1,0,2023-07-08 18:22:07+00:00,[],None
673,https://github.com/BehrensG/ETH2CDSO1B.git,2023-07-09 13:34:08+00:00,,0,BehrensG/ETH2CDSO1B,664279108,Verilog,ETH2CDSO1B,885,0,2023-07-16 13:36:40+00:00,[],None
674,https://github.com/NourMamdouh/UART_Tx_FSMD.git,2023-07-09 20:15:09+00:00,,0,NourMamdouh/UART_Tx_FSMD,664384389,Verilog,UART_Tx_FSMD,9,0,2023-07-09 20:16:27+00:00,[],None
675,https://github.com/44omero/TUTEL-Verilog.git,2023-07-08 18:40:54+00:00,Things I done at TUTEL as an intern,0,44omero/TUTEL-Verilog,664036147,Verilog,TUTEL-Verilog,20,0,2023-07-08 18:51:29+00:00,[],None
676,https://github.com/PanjugalaShashikala/HLS-RTL-Mini-Project.git,2023-07-10 11:55:01+00:00,,0,PanjugalaShashikala/HLS-RTL-Mini-Project,664628143,Verilog,HLS-RTL-Mini-Project,316,0,2023-07-10 12:50:54+00:00,[],None
677,https://github.com/SURA-SAI-SWAROOP/ROUTER_1_3.git,2023-07-13 16:15:07+00:00,,0,SURA-SAI-SWAROOP/ROUTER_1_3,666064401,Verilog,ROUTER_1_3,2,0,2023-07-13 16:18:34+00:00,[],None
678,https://github.com/Sujay001coder/BIST_Bcd_Adder.git,2023-07-13 07:13:05+00:00,,0,Sujay001coder/BIST_Bcd_Adder,665865118,Verilog,BIST_Bcd_Adder,4,0,2023-07-13 07:15:14+00:00,[],None
679,https://github.com/flowingsunset/Harman_Semicon.git,2023-07-13 07:29:54+00:00,배운게 올라갈 수도 있음,0,flowingsunset/Harman_Semicon,665871327,Verilog,Harman_Semicon,179,0,2023-10-12 10:47:59+00:00,[],None
680,https://github.com/Gokul0830/IntelUnnati_Ally.git,2023-07-14 06:58:28+00:00,Design and Implementation of Automated Teller Machine (FSM) Controller,0,Gokul0830/IntelUnnati_Ally,666295385,Verilog,IntelUnnati_Ally,17285,0,2023-07-20 18:03:20+00:00,[],None
681,https://github.com/DhamuDynamic/Dhamu-s_RTL_Journey.git,2023-07-14 07:48:14+00:00,,0,DhamuDynamic/Dhamu-s_RTL_Journey,666311463,Verilog,Dhamu-s_RTL_Journey,5,0,2023-07-14 07:49:24+00:00,[],None
682,https://github.com/ahmedheikal173/RISC_V.git,2023-07-12 19:13:50+00:00,,0,ahmedheikal173/RISC_V,665689288,Verilog,RISC_V,20,0,2023-07-12 19:16:55+00:00,[],None
683,https://github.com/DangoD0/digit.git,2023-07-18 10:25:56+00:00,,0,DangoD0/digit,667799771,Verilog,digit,12,0,2023-07-18 10:38:41+00:00,[],None
684,https://github.com/priiyanka82/caravel.git,2023-07-18 16:14:44+00:00,,0,priiyanka82/caravel,667932161,Verilog,caravel,35294,0,2023-07-18 16:15:34+00:00,[],https://api.github.com/licenses/apache-2.0
685,https://github.com/Sans2205/Asynchronous-FIFO.git,2023-07-18 09:03:55+00:00,,0,Sans2205/Asynchronous-FIFO,667769640,Verilog,Asynchronous-FIFO,4,0,2023-08-10 10:31:47+00:00,[],None
686,https://github.com/naravameghana1/Traffic-controller.git,2023-07-24 08:43:17+00:00,,0,naravameghana1/Traffic-controller,670077141,Verilog,Traffic-controller,41,0,2023-07-24 08:44:27+00:00,[],None
687,https://github.com/divya-1408/vlsi.git,2023-07-26 08:25:37+00:00,,0,divya-1408/vlsi,670963073,Verilog,vlsi,9,0,2023-07-26 08:29:00+00:00,[],None
688,https://github.com/maverick-sp/Traffic-Light-Controller.git,2023-07-26 14:31:36+00:00,An Algorithmic State Machine (ASM) based traffic light controller for a road crossing of ExpressWay and LocalWay,0,maverick-sp/Traffic-Light-Controller,671098116,Verilog,Traffic-Light-Controller,4,0,2023-07-26 14:35:29+00:00,[],None
689,https://github.com/gunavant-s/3X8_Decoder_Day-007.git,2023-07-26 00:04:54+00:00,A decoder is a combinational circuit that converts a coded input into a set of outputs. The implementation is different from that of my implemtation of Encoder.,0,gunavant-s/3X8_Decoder_Day-007,670829292,Verilog,3X8_Decoder_Day-007,34,0,2023-07-26 00:05:24+00:00,[],None
690,https://github.com/manishpundir2207/MIPS-32-5-Stage-Pipelined-Processor.git,2023-07-25 19:42:55+00:00,,0,manishpundir2207/MIPS-32-5-Stage-Pipelined-Processor,670767646,Verilog,MIPS-32-5-Stage-Pipelined-Processor,2312,0,2023-07-28 11:03:59+00:00,[],None
691,https://github.com/KashifInayat/tic-tac-toe-Evoprok-3stage-pipeline.git,2023-07-17 22:26:38+00:00,Computer Architecture Project,0,KashifInayat/tic-tac-toe-Evoprok-3stage-pipeline,667602824,Verilog,tic-tac-toe-Evoprok-3stage-pipeline,739,0,2023-07-17 23:32:43+00:00,[],None
692,https://github.com/himanshu6956/Hexadecimal-Keypad-Scanner-and-Encoder.git,2023-07-18 11:06:06+00:00,,0,himanshu6956/Hexadecimal-Keypad-Scanner-and-Encoder,667813427,Verilog,Hexadecimal-Keypad-Scanner-and-Encoder,8,0,2023-07-18 11:06:44+00:00,[],None
693,https://github.com/ChandraLekha559/RISC-6-stage-pipelined-processor.git,2023-07-26 11:03:49+00:00,,0,ChandraLekha559/RISC-6-stage-pipelined-processor,671019613,Verilog,RISC-6-stage-pipelined-processor,5,0,2023-07-26 11:04:40+00:00,[],None
694,https://github.com/deepika1242/VERILOG-CODE.git,2023-07-26 07:41:08+00:00,,0,deepika1242/VERILOG-CODE,670947802,Verilog,VERILOG-CODE,237,0,2023-07-26 07:42:50+00:00,[],None
695,https://github.com/soudhu/Digital-Circuit.git,2023-07-18 13:02:06+00:00,,0,soudhu/Digital-Circuit,667855200,Verilog,Digital-Circuit,0,0,2023-07-18 13:04:39+00:00,[],None
696,https://github.com/JimmyWu-812/2022-Spring-CVSD.git,2023-07-19 04:49:05+00:00,,0,JimmyWu-812/2022-Spring-CVSD,668123622,Verilog,2022-Spring-CVSD,2088,0,2023-07-19 05:01:17+00:00,[],None
697,https://github.com/maouncle/ADMUX-SRAM-MODEL.git,2023-07-20 12:21:38+00:00,Winbond W968D6DA sram model for vcs (protect code),0,maouncle/ADMUX-SRAM-MODEL,668708665,Verilog,ADMUX-SRAM-MODEL,56,0,2023-07-20 12:26:50+00:00,[],None
698,https://github.com/msuadOf/midware.git,2023-07-20 09:59:43+00:00,,0,msuadOf/midware,668655823,Verilog,midware,9,0,2023-07-20 10:00:27+00:00,[],None
699,https://github.com/nabilyoussef/Digital-IC.git,2023-07-21 07:58:17+00:00,,0,nabilyoussef/Digital-IC,669043954,Verilog,Digital-IC,913,0,2023-08-08 19:09:35+00:00,[],None
700,https://github.com/OkenBarrel/bjut-2023----3p.git,2023-07-20 13:29:34+00:00,,0,OkenBarrel/bjut-2023----3p,668736129,Verilog,bjut-2023----3p,594,0,2023-07-20 13:50:36+00:00,[],None
701,https://github.com/Bassam-Kobasy/VeriRISC_CPU_RTL_code-.git,2023-07-20 17:48:54+00:00,,0,Bassam-Kobasy/VeriRISC_CPU_RTL_code-,668837710,Verilog,VeriRISC_CPU_RTL_code-,329,0,2023-07-20 17:55:34+00:00,[],None
702,https://github.com/fathy-eladle/PWM.git,2023-07-19 16:36:27+00:00,,0,fathy-eladle/PWM,668370077,Verilog,PWM,1,0,2023-07-19 16:36:54+00:00,[],None
703,https://github.com/Junherng99/FPGA_Projects.git,2023-07-23 09:40:01+00:00,,0,Junherng99/FPGA_Projects,669744857,Verilog,FPGA_Projects,47668,0,2023-07-23 16:57:59+00:00,[],None
704,https://github.com/Hemasai-24/Bubble_Processor_CS220.git,2023-07-16 03:42:14+00:00,Processor written in verilog  that executes bubble sort instructions ,0,Hemasai-24/Bubble_Processor_CS220,666923456,Verilog,Bubble_Processor_CS220,134,0,2023-07-16 16:53:04+00:00,[],None
705,https://github.com/dhruvgarg004/CSE_Bubble_Processor.git,2023-07-16 15:17:44+00:00,,0,dhruvgarg004/CSE_Bubble_Processor,667080044,Verilog,CSE_Bubble_Processor,33,0,2023-07-25 11:36:36+00:00,[],None
706,https://github.com/riyabansal0107/MIPS-Pipeline-Processor.git,2023-07-11 12:13:55+00:00,,0,riyabansal0107/MIPS-Pipeline-Processor,665090266,Verilog,MIPS-Pipeline-Processor,20,0,2023-07-19 16:33:59+00:00,[],None
707,https://github.com/Manas-ESR/Vending-candy_machine-with-Verilog.git,2023-07-11 10:13:22+00:00,Designed a vending machine to buy candies using verilog language,0,Manas-ESR/Vending-candy_machine-with-Verilog,665047059,Verilog,Vending-candy_machine-with-Verilog,90,0,2023-07-11 10:19:36+00:00,[],None
708,https://github.com/dh123456789/FPGA.git,2023-07-11 05:17:32+00:00,,0,dh123456789/FPGA,664943696,Verilog,FPGA,2,0,2023-07-11 05:44:33+00:00,[],None
709,https://github.com/Melfes233/cpu_design_2023.git,2023-07-12 07:11:20+00:00,,0,Melfes233/cpu_design_2023,665423667,Verilog,cpu_design_2023,28719,0,2023-10-18 11:07:57+00:00,[],None
710,https://github.com/Bhargav110501/Btech-Major-project.git,2023-07-23 05:01:39+00:00,,0,Bhargav110501/Btech-Major-project,669683481,Verilog,Btech-Major-project,4714,0,2023-07-23 05:05:51+00:00,[],None
711,https://github.com/YounG-0516/RISC-V-miniCPU.git,2023-07-24 06:16:51+00:00,HITSZ 计算机设计与实践课程代码（miniRV的SoC设计）,0,YounG-0516/RISC-V-miniCPU,670026970,Verilog,RISC-V-miniCPU,3902,0,2023-11-13 02:29:52+00:00,[],None
712,https://github.com/tejusvs57/blood-compatibility.git,2023-07-21 15:37:44+00:00,,0,tejusvs57/blood-compatibility,669201778,Verilog,blood-compatibility,629,0,2023-07-21 15:39:13+00:00,[],None
713,https://github.com/chetanSMz/CSE-Bubble.git,2023-07-14 02:53:56+00:00,CS220 Course Project,0,chetanSMz/CSE-Bubble,666232073,Verilog,CSE-Bubble,200,0,2023-07-14 02:55:26+00:00,[],https://api.github.com/licenses/mit
714,https://github.com/Apoorvag21/Bubble-machine.git,2023-07-15 13:52:16+00:00,,0,Apoorvag21/Bubble-machine,666763609,Verilog,Bubble-machine,151,0,2023-07-20 04:29:02+00:00,[],None
715,https://github.com/ahmadrmirzaei/Binary-Signed-Digit-Adder.git,2023-07-15 11:33:24+00:00,Here I designed a Binary Signed Digit Adder in verilog language.,0,ahmadrmirzaei/Binary-Signed-Digit-Adder,666728681,Verilog,Binary-Signed-Digit-Adder,2,0,2023-07-15 11:36:26+00:00,[],None
716,https://github.com/stefanioja/Verilog.git,2023-07-20 20:59:43+00:00,,0,stefanioja/Verilog,668892126,Verilog,Verilog,6,0,2023-07-20 21:08:16+00:00,[],None
717,https://github.com/Bassam-Kobasy/Controller_RTL_code.git,2023-07-20 18:01:08+00:00,,0,Bassam-Kobasy/Controller_RTL_code,668841635,Verilog,Controller_RTL_code,195,0,2023-07-20 18:01:59+00:00,[],None
718,https://github.com/ee-uet/fpga-shells.git,2023-07-14 11:20:51+00:00,,1,ee-uet/fpga-shells,666380598,Verilog,fpga-shells,1016,0,2023-07-14 14:21:23+00:00,[],https://api.github.com/licenses/apache-2.0
719,https://github.com/TA-IYO/fpga.git,2023-07-14 14:48:23+00:00,,0,TA-IYO/fpga,666450757,Verilog,fpga,927,0,2023-07-29 08:15:44+00:00,[],None
720,https://github.com/bhumikapc/Computer-architecture-.git,2023-07-14 15:13:13+00:00,"– Implemented a 32 bit Reduced instruction set architecture processor comprising of 5 different stages which supports Arithmetic, Logical, Compare, Load, Store and Branch Instruction Set using Verilog.",0,bhumikapc/Computer-architecture-,666459431,Verilog,Computer-architecture-,261,0,2023-07-19 09:09:45+00:00,[],None
721,https://github.com/Codedict/intelunnati_Xperia.git,2023-07-13 11:42:42+00:00,,0,Codedict/intelunnati_Xperia,665960967,Verilog,intelunnati_Xperia,10933,0,2023-07-19 14:25:25+00:00,[],None
722,https://github.com/Ayas47/VLSI.git,2023-07-13 14:15:59+00:00,,0,Ayas47/VLSI,666019465,Verilog,VLSI,73,0,2023-07-13 14:32:41+00:00,[],None
723,https://github.com/kosmokot45/single-neuron-verilog.git,2023-07-11 14:55:37+00:00,,0,kosmokot45/single-neuron-verilog,665155099,Verilog,single-neuron-verilog,2,0,2023-07-11 15:00:55+00:00,[],None
724,https://github.com/106210049/FPGA.git,2023-07-11 16:21:35+00:00,Verilog code,0,106210049/FPGA,665187808,Verilog,FPGA,8,0,2023-07-11 16:23:00+00:00,[],None
725,https://github.com/tianji22/verilog_Small_experiment.git,2023-07-12 01:04:58+00:00,This is a small experiment of verilog course of Ningbo University,0,tianji22/verilog_Small_experiment,665326878,Verilog,verilog_Small_experiment,209,0,2023-07-25 06:45:38+00:00,[],None
726,https://github.com/Ritika0819/alarm-clock.git,2023-07-09 18:01:26+00:00,,0,Ritika0819/alarm-clock,664352832,Verilog,alarm-clock,533,0,2023-07-09 18:02:18+00:00,[],None
727,https://github.com/ozzyrob/litex-configs.git,2023-07-10 08:36:34+00:00,Linuxcnc configs for Litexcnc & some simple testing stuff,0,ozzyrob/litex-configs,664555804,Verilog,litex-configs,2184,0,2023-07-10 08:56:43+00:00,[],https://api.github.com/licenses/gpl-3.0
728,https://github.com/naravameghana1/I2C_Protocol.git,2023-07-12 17:17:02+00:00,,0,naravameghana1/I2C_Protocol,665649993,Verilog,I2C_Protocol,21,0,2023-07-12 17:40:02+00:00,[],None
729,https://github.com/Eswar-13/CSE-BUBBLE.git,2023-07-12 14:00:08+00:00,,0,Eswar-13/CSE-BUBBLE,665574033,Verilog,CSE-BUBBLE,156,0,2023-07-12 14:16:12+00:00,[],None
730,https://github.com/naravameghana1/GCD.git,2023-07-12 09:20:55+00:00,,0,naravameghana1/GCD,665470154,Verilog,GCD,9,0,2023-07-12 09:22:15+00:00,[],None
731,https://github.com/raghav0601/Pipelined-Cordic-Algorithm.git,2023-07-19 17:37:38+00:00,,0,raghav0601/Pipelined-Cordic-Algorithm,668391214,Verilog,Pipelined-Cordic-Algorithm,3,0,2023-07-19 17:41:21+00:00,[],None
732,https://github.com/Thenmozhie/Academic-Projects.git,2023-07-18 17:25:46+00:00,,0,Thenmozhie/Academic-Projects,667958068,Verilog,Academic-Projects,11161,0,2023-08-02 18:12:19+00:00,[],None
733,https://github.com/ronaksharma77/Hexadecimal_Keypad_Scanner_using_Verilog.git,2023-07-18 16:57:57+00:00,,0,ronaksharma77/Hexadecimal_Keypad_Scanner_using_Verilog,667947952,Verilog,Hexadecimal_Keypad_Scanner_using_Verilog,9,0,2023-07-18 16:58:03+00:00,[],None
734,https://github.com/posaHarsha/verilog.git,2023-07-19 06:38:27+00:00,Verilog codes and its testbenches,0,posaHarsha/verilog,668153472,Verilog,verilog,105,0,2023-07-19 06:59:12+00:00,[],None
735,https://github.com/DivyamTaneja/Path-Planning-Algorithm-On-De0-Nano-FPGA-Dev-Board.git,2023-07-15 09:12:39+00:00,,0,DivyamTaneja/Path-Planning-Algorithm-On-De0-Nano-FPGA-Dev-Board,666695978,Verilog,Path-Planning-Algorithm-On-De0-Nano-FPGA-Dev-Board,100,0,2023-07-15 09:14:12+00:00,[],None
736,https://github.com/Jjateen/Snake-Game-Verilog.git,2023-07-15 16:32:17+00:00,A Snake Game using Verilog for DE-10Lite FPGA Board,0,Jjateen/Snake-Game-Verilog,666806924,Verilog,Snake-Game-Verilog,8989,0,2023-07-15 16:35:41+00:00,[],None
737,https://github.com/Harsh-Kakadiya/Verilog.git,2023-07-15 21:48:31+00:00,It contains verilog codes for hardware modeling,0,Harsh-Kakadiya/Verilog,666873361,Verilog,Verilog,238,0,2023-07-15 21:58:31+00:00,[],None
738,https://github.com/cybergeekdk/temp.git,2023-07-17 15:08:24+00:00,,0,cybergeekdk/temp,667466785,Verilog,temp,35294,0,2023-07-17 15:09:17+00:00,[],https://api.github.com/licenses/apache-2.0
739,https://github.com/stcastell/verilog.git,2023-07-26 01:40:47+00:00,Programas de descripción de hardware desarrollados a lo largo de mis estudios de diseño de sistemas lógicos,0,stcastell/verilog,670849220,Verilog,verilog,1319,0,2023-08-13 03:32:23+00:00,[],None
740,https://github.com/BooleanFunctionalSynthesis/benchmarks.git,2023-07-25 06:17:36+00:00,Benchmarks used for various tools which synthesize or compile boolean functions,0,BooleanFunctionalSynthesis/benchmarks,670473586,Verilog,benchmarks,334422,0,2023-07-25 06:44:58+00:00,[],None
741,https://github.com/manvi27/Pipeline-Processor.git,2023-07-25 10:30:37+00:00,This repository contains Verilog HDL for a five stage pipelined processor and some small applications which will use the processor to execute,0,manvi27/Pipeline-Processor,670563146,Verilog,Pipeline-Processor,3,0,2023-09-01 16:40:59+00:00,[],None
742,https://github.com/Sameer3434/risk.git,2023-07-25 09:25:30+00:00,,0,Sameer3434/risk,670539871,Verilog,risk,89,0,2023-07-25 09:40:02+00:00,[],None
743,https://github.com/Adarsh1Rao/FPGA_PLC-Timer.git,2023-07-25 15:15:53+00:00,,0,Adarsh1Rao/FPGA_PLC-Timer,670673968,Verilog,FPGA_PLC-Timer,1184,0,2023-07-25 15:18:25+00:00,[],None
744,https://github.com/AfifehGhaemnia/myVSD_Version.git,2023-07-26 21:05:52+00:00,,0,AfifehGhaemnia/myVSD_Version,671231297,Verilog,myVSD_Version,11911,0,2023-07-26 21:07:25+00:00,[],https://api.github.com/licenses/apache-2.0
745,https://github.com/Harshinidola/mvsort.git,2023-07-16 06:08:53+00:00,,0,Harshinidola/mvsort,666949851,Verilog,mvsort,84,0,2023-07-16 06:27:12+00:00,[],None
746,https://github.com/laksh-ms/Openlane_caravel_project.git,2023-07-21 02:56:28+00:00,,0,laksh-ms/Openlane_caravel_project,668963610,Verilog,Openlane_caravel_project,35294,0,2023-08-10 12:13:59+00:00,[],https://api.github.com/licenses/apache-2.0
747,https://github.com/Rohanth1234/Rohanth1234-Comparitive_study_on_4-bit_adders_and_multipliers.git,2023-07-20 13:47:38+00:00,Using basic 4-bit adders and multipliers to compoare the delay and logical elements used,0,Rohanth1234/Rohanth1234-Comparitive_study_on_4-bit_adders_and_multipliers,668743135,Verilog,Rohanth1234-Comparitive_study_on_4-bit_adders_and_multipliers,10,0,2023-07-20 13:49:18+00:00,[],None
748,https://github.com/darshan-kr/Day-007-Full_subtractor.git,2023-07-24 09:47:13+00:00,"A full subtractor is a combinational circuit that performs subtraction of two bits, one is minuend and other is subtrahend, taking into account borrow of the previous adjacent lower minuend bit. ",0,darshan-kr/Day-007-Full_subtractor,670100873,Verilog,Day-007-Full_subtractor,2,0,2023-07-24 09:48:35+00:00,[],None
749,https://github.com/yilmaz0734/FPGATictactoegame.git,2023-07-24 13:03:18+00:00,"In this project, we implemented a different kind of a tic tac toe board game that is played on an FPGA board using its push buttons. We used Verilog HDL to code the project and implemented a VGA interface for visualization.",1,yilmaz0734/FPGATictactoegame,670173941,Verilog,FPGATictactoegame,24905,0,2023-07-24 13:45:14+00:00,"['fpga-programming', 'game-logic', 'tic-tac-toe-game', 'verilog-hdl', 'vga-controller', 'vga-screen', 'fpga-soc']",https://api.github.com/licenses/mit
750,https://github.com/lauchinyuan/Verilog_IMG_PROC.git,2023-07-24 18:07:53+00:00,"A configurable image processing module, its functions include image grayscale, RGB to HSV, etc.",0,lauchinyuan/Verilog_IMG_PROC,670292589,Verilog,Verilog_IMG_PROC,272,0,2023-07-25 11:48:19+00:00,[],None
751,https://github.com/manav4code/UART.git,2023-07-24 14:10:32+00:00,Implementation of UART using Verilog,0,manav4code/UART,670201283,Verilog,UART,4,0,2023-07-24 14:12:31+00:00,[],None
752,https://github.com/URK21CS2048/intel.git,2023-07-13 16:09:35+00:00,Design and Implementation of slow and fast division algorithms in Computer Architecture,0,URK21CS2048/intel,666062562,Verilog,intel,26969,0,2024-03-11 16:44:55+00:00,[],None
753,https://github.com/manoel-serafim/PIT.git,2023-07-15 16:56:52+00:00,CPU desenvolvida em verilog e compilada para rodar em um FPGA altera. ,0,manoel-serafim/PIT,666813444,Verilog,PIT,17,0,2023-07-15 17:03:12+00:00,[],https://api.github.com/licenses/mit
754,https://github.com/haoranx98/peripheral-serialport.git,2023-07-22 06:25:14+00:00,,0,haoranx98/peripheral-serialport,669396453,Verilog,peripheral-serialport,11,0,2023-07-22 06:27:10+00:00,[],None
755,https://github.com/agrawalrahul5260/32_Bit_Floating_Point_Adder-Subtractor_with_Verilog.git,2023-07-21 19:24:44+00:00,,0,agrawalrahul5260/32_Bit_Floating_Point_Adder-Subtractor_with_Verilog,669272243,Verilog,32_Bit_Floating_Point_Adder-Subtractor_with_Verilog,16,0,2023-07-21 21:14:08+00:00,[],None
756,https://github.com/amitkumarbakoliya/32_bit_Risc_processor.git,2023-07-24 11:17:45+00:00,,0,amitkumarbakoliya/32_bit_Risc_processor,670133795,Verilog,32_bit_Risc_processor,290,0,2023-07-31 12:08:52+00:00,[],None
757,https://github.com/toanpm1011/Project_VLSI_20222.git,2023-07-25 02:46:34+00:00,Bài tập lớn môn Thiết kế VLSI. Đề tài từ công ty CoAsia SEMI Vietnam,0,toanpm1011/Project_VLSI_20222,670420132,Verilog,Project_VLSI_20222,3760,0,2023-07-25 04:28:09+00:00,[],None
758,https://github.com/openpiton/ost1-core.git,2023-07-19 09:03:45+00:00,,0,openpiton/ost1-core,668202954,Verilog,ost1-core,1366,0,2023-07-19 15:28:05+00:00,[],None
759,https://github.com/Prasad48432/DSD_PRA.git,2023-07-23 12:58:30+00:00,mod 10 Counter,0,Prasad48432/DSD_PRA,669793991,Verilog,DSD_PRA,2,0,2023-07-23 12:59:31+00:00,[],None
760,https://github.com/OmriFichman/RO_FPGA_detector.git,2023-07-22 14:58:43+00:00,This project was developed as part of the proof of concept for my thesis work. The purpose of the project is to find a use for ring oscillators which can potentially sense the environmental activity and thus leak sensitive information.,0,OmriFichman/RO_FPGA_detector,669523828,Verilog,RO_FPGA_detector,745,0,2023-07-22 15:40:47+00:00,[],None
761,https://github.com/joshua9900sudo/iverilog_source_code.git,2023-07-23 02:13:54+00:00,This is my personal iverilog project to make a RISC-V architecture.,0,joshua9900sudo/iverilog_source_code,669656014,Verilog,iverilog_source_code,5,0,2023-07-23 02:14:56+00:00,[],None
762,https://github.com/cristiancristescu5/AMD_SummerPractice.git,2023-07-10 21:54:35+00:00,,0,cristiancristescu5/AMD_SummerPractice,664842488,Verilog,AMD_SummerPractice,880,0,2023-09-27 12:25:57+00:00,[],None
763,https://github.com/rudra-101/PWM-Generator.git,2023-07-11 17:23:15+00:00,,0,rudra-101/PWM-Generator,665209319,Verilog,PWM-Generator,542,0,2023-07-11 17:33:02+00:00,[],None
764,https://github.com/ianerik6/Alvarado10.git,2023-07-11 14:25:43+00:00,Es un proyecto que necesito para probar el funcionaiento de esta herramienta de caravel,0,ianerik6/Alvarado10,665143041,Verilog,Alvarado10,35290,0,2023-07-11 14:26:44+00:00,[],https://api.github.com/licenses/apache-2.0
765,https://github.com/Kiran-MVS/microprocessor0.git,2023-07-24 03:59:34+00:00,,1,Kiran-MVS/microprocessor0,669992388,Verilog,microprocessor0,82,0,2023-07-24 04:09:36+00:00,[],None
766,https://github.com/kingsider/Systems_Engineering_Verilog.git,2023-07-24 14:31:11+00:00,,0,kingsider/Systems_Engineering_Verilog,670210112,Verilog,Systems_Engineering_Verilog,1259,0,2023-07-24 14:31:50+00:00,[],None
767,https://github.com/gunavant-s/4X1_Demux_Day-005.git,2023-07-24 00:35:51+00:00,A DEMUX is a digital circuit that takes a single input line and forwards it to one of several output lines based on the control signal. In 4x1 Demux for single input there are four outputs.,0,gunavant-s/4X1_Demux_Day-005,669951244,Verilog,4X1_Demux_Day-005,31,0,2023-07-24 00:36:25+00:00,[],None
768,https://github.com/naveen221001/verilog.git,2023-07-23 14:28:11+00:00,,0,naveen221001/verilog,669818278,Verilog,verilog,184,0,2023-07-23 14:30:47+00:00,[],None
769,https://github.com/theokemoun/DES_encryption_algorithm.git,2023-07-25 16:14:06+00:00,,0,theokemoun/DES_encryption_algorithm,670696684,Verilog,DES_encryption_algorithm,2069,0,2023-07-25 18:58:04+00:00,[],None
770,https://github.com/pratikyabaji/UART-Module.git,2023-07-21 07:17:04+00:00,,0,pratikyabaji/UART-Module,669030272,Verilog,UART-Module,1,0,2023-07-21 07:19:50+00:00,[],None
771,https://github.com/OrsuVenkataKrishnaiah1235/Router1-3-using-verilog.git,2023-07-26 08:52:16+00:00,Router design using Verilog ,1,OrsuVenkataKrishnaiah1235/Router1-3-using-verilog,670972678,Verilog,Router1-3-using-verilog,3347,0,2023-08-04 05:40:46+00:00,[],None
772,https://github.com/sayoojkj/ALU_basic_calculator.git,2023-07-17 09:51:32+00:00,A basic calculator implementation in verilog,0,sayoojkj/ALU_basic_calculator,667347393,Verilog,ALU_basic_calculator,3,0,2023-07-17 09:54:26+00:00,[],None
773,https://github.com/srinu6707/intelunnati_masters.git,2023-07-14 09:25:21+00:00,,0,srinu6707/intelunnati_masters,666343308,Verilog,intelunnati_masters,22187,0,2023-07-23 07:50:33+00:00,[],None
774,https://github.com/Lawrence-lugs/os_tools_test.git,2023-07-14 09:37:37+00:00,,0,Lawrence-lugs/os_tools_test,666347455,Verilog,os_tools_test,35294,0,2023-07-14 09:38:29+00:00,[],https://api.github.com/licenses/apache-2.0
775,https://github.com/SaiLLV/16-Bit-Microprocessor-Design.git,2023-07-14 18:05:44+00:00,,0,SaiLLV/16-Bit-Microprocessor-Design,666514445,Verilog,16-Bit-Microprocessor-Design,24,0,2023-07-15 11:52:37+00:00,[],None
776,https://github.com/Shirrrning/noc.git,2023-07-14 15:45:50+00:00,,0,Shirrrning/noc,666470280,Verilog,noc,22,0,2023-07-14 15:49:38+00:00,[],None
777,https://github.com/Alexis505/mips_segmentado.git,2023-07-16 21:07:45+00:00,Esta carpeta contiene el diseno de un procesador segmentado que procesa un subconjunto de instrucciones mips.,0,Alexis505/mips_segmentado,667163721,Verilog,mips_segmentado,18,0,2023-07-16 21:20:19+00:00,[],None
778,https://github.com/cbvarr01/caravel_walkthrough.git,2023-07-15 21:37:24+00:00,,0,cbvarr01/caravel_walkthrough,666871628,Verilog,caravel_walkthrough,53036,0,2023-07-15 22:07:46+00:00,[],https://api.github.com/licenses/apache-2.0
779,https://github.com/Aakulmalhotra/4x1-mux-using-2x1-mux.git,2023-07-16 08:59:35+00:00,,0,Aakulmalhotra/4x1-mux-using-2x1-mux,666986717,Verilog,4x1-mux-using-2x1-mux,26,0,2023-07-16 09:00:33+00:00,[],None
780,https://github.com/soudhu/Clock-with-alarm.git,2023-07-18 11:40:37+00:00,,0,soudhu/Clock-with-alarm,667825509,Verilog,Clock-with-alarm,6,0,2023-07-18 12:01:31+00:00,[],None
781,https://github.com/PrecureKamiyu/shit-on-cpu.git,2023-07-18 08:29:49+00:00,cpu in hitsz (uncomplete),0,PrecureKamiyu/shit-on-cpu,667756872,Verilog,shit-on-cpu,1230,0,2023-07-19 12:00:42+00:00,[],None
782,https://github.com/sivaram-07/FFT-IP.git,2023-07-08 11:37:00+00:00,,0,sivaram-07/FFT-IP,663897435,Verilog,FFT-IP,95,0,2023-07-13 03:29:33+00:00,[],None
783,https://github.com/vdagar2211/barrel-shifter-r.git,2023-07-08 11:58:59+00:00,,0,vdagar2211/barrel-shifter-r,663904453,Verilog,barrel-shifter-r,1,0,2023-07-08 12:00:44+00:00,[],None
784,https://github.com/Pouria-Nazemi/GrayToBCD-Converter-verilog-and-proteus.git,2023-07-10 10:56:19+00:00,,0,Pouria-Nazemi/GrayToBCD-Converter-verilog-and-proteus,664607163,Verilog,GrayToBCD-Converter-verilog-and-proteus,92,0,2023-07-10 10:58:15+00:00,[],None
785,https://github.com/professorhu/test.git,2023-07-10 08:12:39+00:00,,0,professorhu/test,664547168,Verilog,test,0,0,2023-07-10 08:14:39+00:00,[],None
786,https://github.com/ShaliniBairy8/intelunnati_BrightReds.git,2023-07-14 07:08:23+00:00,"Problem Statement- Design and Implementation of ATM (FSM) Controller , Malla Reddy College of Engineering and Technology",0,ShaliniBairy8/intelunnati_BrightReds,666298463,Verilog,intelunnati_BrightReds,17149,0,2023-07-20 04:59:30+00:00,[],None
787,https://github.com/R7A2J8A7N/division_algoritm.git,2023-07-15 10:59:05+00:00,Design and implementation of slow and fast division algorithm,0,R7A2J8A7N/division_algoritm,666720517,Verilog,division_algoritm,25,0,2023-10-11 04:13:13+00:00,[],None
788,https://github.com/Ben-McDaniel/VIP-GATE.git,2023-07-17 19:55:21+00:00,Verilog Integrated Processor for General-purpose Application and Task Execution ,0,Ben-McDaniel/VIP-GATE,667565226,Verilog,VIP-GATE,8413,0,2023-07-18 01:51:06+00:00,[],None
789,https://github.com/phuongndbk98/analog_hdl.git,2023-07-16 04:01:35+00:00,,0,phuongndbk98/analog_hdl,666926653,Verilog,analog_hdl,14660,0,2023-07-16 04:10:24+00:00,[],
790,https://github.com/darshan-kr/100bit_2_to_1_MUX.git,2023-07-19 17:13:24+00:00,,0,darshan-kr/100bit_2_to_1_MUX,668382874,Verilog,100bit_2_to_1_MUX,3,0,2023-07-19 17:26:07+00:00,[],None
791,https://github.com/ArturHugo/cnn_fpga.git,2023-07-19 00:37:46+00:00,Repositório do código desenvolvido para meu trabalho de conclusão de curso.,0,ArturHugo/cnn_fpga,668067816,Verilog,cnn_fpga,59837,0,2023-07-19 00:57:22+00:00,[],None
792,https://github.com/Alexis505/MIPS_monociclo.git,2023-07-16 20:00:42+00:00,Inside this repo you can find the files to build a simple verilog mips processor ,0,Alexis505/MIPS_monociclo,667150448,Verilog,MIPS_monociclo,10,0,2023-07-16 21:04:20+00:00,[],None
793,https://github.com/shinkuan/ICC2012_B.git,2023-07-14 09:27:39+00:00,,2,shinkuan/ICC2012_B,666344037,Verilog,ICC2012_B,5569,0,2023-07-14 18:09:07+00:00,[],https://api.github.com/licenses/mit
794,https://github.com/Rahul3-Sai/intelunnati_Eagles.git,2023-07-12 15:04:01+00:00,,0,Rahul3-Sai/intelunnati_Eagles,665601440,Verilog,intelunnati_Eagles,36477,0,2023-07-19 13:53:07+00:00,[],None
795,https://github.com/MohamedKhaledMohamedAli/UART-Receiver.git,2023-07-12 16:24:44+00:00,,0,MohamedKhaledMohamedAli/UART-Receiver,665632192,Verilog,UART-Receiver,172,0,2023-07-12 16:26:40+00:00,[],None
796,https://github.com/chibaf/blink.fpga.9k.git,2023-07-14 21:31:05+00:00,blink.fpga.9k,0,chibaf/blink.fpga.9k,666567701,Verilog,blink.fpga.9k,1,0,2023-07-14 21:31:44+00:00,[],None
797,https://github.com/vishnushan21/intelunnati_Sigmamales.git,2023-07-14 14:29:46+00:00,,0,vishnushan21/intelunnati_Sigmamales,666443882,Verilog,intelunnati_Sigmamales,953,0,2023-07-20 02:49:11+00:00,[],None
798,https://github.com/FerdousMd/AIUB_ESAB_DV_WS.git,2023-07-16 22:29:31+00:00,AIUB_ESAB_DV Workshop,0,FerdousMd/AIUB_ESAB_DV_WS,667177797,Verilog,AIUB_ESAB_DV_WS,0,0,2023-07-16 23:44:29+00:00,[],None
799,https://github.com/sanskar0708/SPI_protocol.git,2023-07-19 07:22:19+00:00,implementation of SPI communication protocol on FPGA device using verilog coding in xilinx vivado tool,0,sanskar0708/SPI_protocol,668167921,Verilog,SPI_protocol,1,0,2023-07-19 08:10:21+00:00,[],None
800,https://github.com/Yash070707/Traffic-Light-Verilog-.git,2023-07-19 05:02:46+00:00,,0,Yash070707/Traffic-Light-Verilog-,668126903,Verilog,Traffic-Light-Verilog-,3,0,2023-07-19 05:04:29+00:00,[],None
801,https://github.com/rudra-101/RISC.git,2023-07-22 11:20:40+00:00,,0,rudra-101/RISC,669466237,Verilog,RISC,1388,0,2023-07-27 19:30:33+00:00,[],None
802,https://github.com/sina-mokhtari/verilog-test.git,2023-07-23 17:21:21+00:00,,0,sina-mokhtari/verilog-test,669865769,Verilog,verilog-test,1,0,2023-07-23 17:28:27+00:00,[],None
803,https://github.com/algofoogle/tt04-solo-squash.git,2023-07-22 04:59:45+00:00,,0,algofoogle/tt04-solo-squash,669377773,Verilog,tt04-solo-squash,1702,0,2023-07-22 05:48:37+00:00,[],https://api.github.com/licenses/apache-2.0
804,https://github.com/himanshu6956/8-bit-vedic-multiplier.git,2023-07-18 14:32:52+00:00,,0,himanshu6956/8-bit-vedic-multiplier,667891707,Verilog,8-bit-vedic-multiplier,3,0,2023-07-18 14:33:54+00:00,[],None
805,https://github.com/dygks254/verilog_exam.git,2023-07-18 08:49:51+00:00,verilog exam code ,0,dygks254/verilog_exam,667764253,Verilog,verilog_exam,83,0,2023-07-21 16:49:56+00:00,[],None
806,https://github.com/soudhu/N-bit-multiplier.git,2023-07-18 13:25:28+00:00,,0,soudhu/N-bit-multiplier,667864588,Verilog,N-bit-multiplier,2,0,2023-07-18 13:28:36+00:00,[],None
807,https://github.com/udayapeddirajub/FIFO_Verilog.git,2023-07-19 18:22:49+00:00,"FIFO (First-In-First-Out) Verilog Implementation with Depth 8 and 8-bit Data  This repository contains a Verilog implementation of a FIFO (First-In-First-Out) data structure. The FIFO has a depth of 8, allowing it to store up to 8 elements of 8-bit data. ",0,udayapeddirajub/FIFO_Verilog,668406784,Verilog,FIFO_Verilog,4,0,2023-07-19 18:24:12+00:00,[],None
808,https://github.com/1fahadaloufi/RISC-CPU.git,2023-07-19 23:28:42+00:00,Designing a RISC-CPU in SystemVerilog and in Accordance with the MIT Beta ISA,0,1fahadaloufi/RISC-CPU,668483275,Verilog,RISC-CPU,327,0,2023-07-20 05:25:47+00:00,[],None
809,https://github.com/uisha/hdl-project-2.git,2023-07-25 03:16:27+00:00,CSARCH1 HDL Project 2,0,uisha/hdl-project-2,670427316,Verilog,hdl-project-2,10,0,2023-07-25 04:26:01+00:00,[],None
810,https://github.com/Avvienash/Finite-State-Machine-and-Counter-Project.git,2023-07-24 13:46:25+00:00,,0,Avvienash/Finite-State-Machine-and-Counter-Project,670191504,Verilog,Finite-State-Machine-and-Counter-Project,56367,0,2023-09-02 05:13:24+00:00,[],None
811,https://github.com/Fangzzxx/ICHIP-PS2.git,2023-07-24 18:24:31+00:00,Prototype of Accumulator based MICROPROCESSOR using Von Neumann Architecture,0,Fangzzxx/ICHIP-PS2,670298261,Verilog,ICHIP-PS2,1428,0,2023-08-01 11:53:05+00:00,[],https://api.github.com/licenses/mit
812,https://github.com/akshitanitr/Hexadecimal-Keypad-Scanner.git,2023-07-11 10:39:05+00:00,,0,akshitanitr/Hexadecimal-Keypad-Scanner,665056346,Verilog,Hexadecimal-Keypad-Scanner,4,0,2023-07-11 10:41:14+00:00,[],None
813,https://github.com/ManasaDeviMalla/PCI-bus-Arbiter-using-Verilog.git,2023-07-11 13:16:47+00:00,,0,ManasaDeviMalla/PCI-bus-Arbiter-using-Verilog,665114216,Verilog,PCI-bus-Arbiter-using-Verilog,279,0,2023-07-11 13:26:48+00:00,[],None
814,https://github.com/ultra205/lemonlite.git,2023-07-12 04:28:30+00:00,,0,ultra205/lemonlite,665375421,Verilog,lemonlite,18259,0,2023-07-12 04:31:14+00:00,[],None
815,https://github.com/saiarunpravinrr/AHB2APB.git,2023-07-13 06:12:31+00:00,,0,saiarunpravinrr/AHB2APB,665844022,Verilog,AHB2APB,5,0,2023-07-13 06:13:11+00:00,[],None
816,https://github.com/PariyaPl/TrafficLightSystem.git,2023-07-13 08:21:04+00:00,This project was the final project of the “Digital Logic” course at SBU,0,PariyaPl/TrafficLightSystem,665889476,Verilog,TrafficLightSystem,3,0,2023-07-13 09:23:55+00:00,[],None
817,https://github.com/ianerik6/ADAPTADOR1.git,2023-07-13 17:52:44+00:00,Se muestra como adaptar impedancias en RF,0,ianerik6/ADAPTADOR1,666098616,Verilog,ADAPTADOR1,35294,0,2023-07-13 17:53:38+00:00,[],https://api.github.com/licenses/apache-2.0
818,https://github.com/blazekd/simple-RISC-V-processor.git,2023-07-13 20:35:45+00:00,Simple processor with subset of RISC-V ISA and one custom instruction. Also includes some simple programs that can be run by this CPU.,0,blazekd/simple-RISC-V-processor,666147939,Verilog,simple-RISC-V-processor,104,0,2023-07-13 20:36:08+00:00,[],None
819,https://github.com/PRAGATI-0102/Prime-Number-Detector-Day-091-.git,2023-07-09 15:59:58+00:00,A prime number is a natural number greater than 1 that is divisible only by 1 and itself. The module takes in an input number and determines whether it is a prime number or not by checking its divisibility with all numbers from 2 to the square root of the input number.,0,PRAGATI-0102/Prime-Number-Detector-Day-091-,664319962,Verilog,Prime-Number-Detector-Day-091-,33,0,2023-07-09 16:00:48+00:00,[],None
820,https://github.com/AvantikaN/Controlling-Servo-Motor-using-Tang-Nano-4k.git,2023-07-08 07:33:57+00:00,,0,AvantikaN/Controlling-Servo-Motor-using-Tang-Nano-4k,663823356,Verilog,Controlling-Servo-Motor-using-Tang-Nano-4k,11,0,2023-09-26 20:33:37+00:00,"['fpga', 'opensource', 'pwm', 'servo-motor', 'tang-nano-4k', 'verilog-hdl']",None
821,https://github.com/bhumikapc/Verilog-project.git,2023-07-10 14:56:06+00:00,It is a Verilog implementation of Finite State Machine that is designed to control Three-way traffic.,0,bhumikapc/Verilog-project,664701800,Verilog,Verilog-project,3,0,2023-08-05 16:52:33+00:00,[],None
822,https://github.com/Omarchaban/Asynchronous-FIFO.git,2023-07-12 06:45:38+00:00,,0,Omarchaban/Asynchronous-FIFO,665414918,Verilog,Asynchronous-FIFO,2,0,2023-07-12 06:46:12+00:00,[],None
823,https://github.com/GitHub-lancel/AESTIScheme.git,2023-07-16 09:42:24+00:00,,0,GitHub-lancel/AESTIScheme,666996227,Verilog,AESTIScheme,89,0,2023-07-16 10:24:27+00:00,[],None
824,https://github.com/Rashs94/ASIC_LAB.git,2023-07-16 15:37:01+00:00,,0,Rashs94/ASIC_LAB,667085314,Verilog,ASIC_LAB,2,0,2023-07-16 16:07:19+00:00,[],None
825,https://github.com/Rishi-T/Pipelined_MIPS32_Processor.git,2023-07-16 04:29:45+00:00,"A 32-bit MIPS Pipelined implementation, created as a part of CS F341 Computer Architecture University course.",0,Rishi-T/Pipelined_MIPS32_Processor,666931580,Verilog,Pipelined_MIPS32_Processor,8,0,2023-07-16 05:20:41+00:00,[],https://api.github.com/licenses/mit
826,https://github.com/nicedayd/demoa.git,2023-07-09 02:09:43+00:00,,0,nicedayd/demoa,664130055,Verilog,demoa,28,0,2023-07-09 02:09:56+00:00,[],https://api.github.com/licenses/apache-2.0
827,https://github.com/PredatorCoder007/UART-implementation-using-verilog.git,2023-07-17 22:12:12+00:00,UART implementation of receiver and transmitter using Verilog,0,PredatorCoder007/UART-implementation-using-verilog,667599733,Verilog,UART-implementation-using-verilog,465,0,2023-07-19 15:36:11+00:00,[],None
828,https://github.com/Wei-Cheng881221/NTU_CVSD_2023_Spring.git,2023-07-26 10:04:46+00:00,,0,Wei-Cheng881221/NTU_CVSD_2023_Spring,670999579,Verilog,NTU_CVSD_2023_Spring,5586,0,2023-07-26 10:41:45+00:00,[],None
829,https://github.com/ChandraLekha559/ASIC-for-Image-Compression-using-2D-DWT.git,2023-07-26 17:36:47+00:00,,0,ChandraLekha559/ASIC-for-Image-Compression-using-2D-DWT,671167824,Verilog,ASIC-for-Image-Compression-using-2D-DWT,301,0,2023-07-26 17:39:51+00:00,[],None
830,https://github.com/Mohamed-Ayman27/FIFO.git,2023-07-20 14:25:01+00:00,,0,Mohamed-Ayman27/FIFO,668758729,Verilog,FIFO,72,0,2023-07-20 14:27:08+00:00,[],None
831,https://github.com/PrecureKamiyu/shit-on-pipeline.git,2023-07-20 13:23:18+00:00,HITSZ SHITTY CPU,0,PrecureKamiyu/shit-on-pipeline,668733656,Verilog,shit-on-pipeline,62,0,2023-07-20 19:37:59+00:00,[],None
832,https://github.com/Glinary/Structural-Modeling-Decoder.git,2023-07-20 15:58:45+00:00,,0,Glinary/Structural-Modeling-Decoder,668797687,Verilog,Structural-Modeling-Decoder,21,0,2023-07-20 16:03:17+00:00,[],None
833,https://github.com/gunavant-s/Full_Adder_Day-002.git,2023-07-21 02:53:44+00:00,"A full adder is a digital circuit that adds two binary numbers together, along with a carry (in) bit from a previous stage of addition. It produces a sum and a carry(out) bit, which can be passed on to the next stage of addition. Can be also designed using 2 half adders.",0,gunavant-s/Full_Adder_Day-002,668963045,Verilog,Full_Adder_Day-002,54,0,2023-07-21 23:59:31+00:00,[],None
834,https://github.com/manishpundir2207/64-bit-Modified-Booth-multiplier.git,2023-07-25 19:08:06+00:00,,0,manishpundir2207/64-bit-Modified-Booth-multiplier,670757355,Verilog,64-bit-Modified-Booth-multiplier,555,0,2023-07-25 19:15:39+00:00,[],None
835,https://github.com/Hoponga/arch.git,2023-07-26 19:17:32+00:00,(work in progress) pipelined MIPS ISA in verilog,0,Hoponga/arch,671200701,Verilog,arch,1522,0,2023-11-09 11:06:11+00:00,[],None
836,https://github.com/serega-drakon/MCST_Lab_DSP_GPU.git,2023-07-26 18:01:12+00:00,Project DSP GPU ,1,serega-drakon/MCST_Lab_DSP_GPU,671175991,Verilog,MCST_Lab_DSP_GPU,10152,0,2024-04-11 11:43:47+00:00,"['assembler', 'c', 'gpu', 'verilog']",None
