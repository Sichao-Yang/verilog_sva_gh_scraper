,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/openhwgroup/cv32e40x.git,2021-02-23 09:23:27+00:00,"4 stage, in-order, compute RISC-V core based on the CV32E40P",48,openhwgroup/cv32e40x,341497701,SystemVerilog,cv32e40x,9828,193,2024-04-09 10:00:59+00:00,[],
1,https://github.com/srg320/Saturn_MiSTer.git,2021-01-30 13:51:15+00:00,,14,srg320/Saturn_MiSTer,334423872,SystemVerilog,Saturn_MiSTer,10893,151,2024-04-08 08:33:37+00:00,[],None
2,https://github.com/openhwgroup/cv32e40s.git,2021-02-23 09:39:51+00:00,"4 stage, in-order, secure RISC-V core based on the CV32E40P",22,openhwgroup/cv32e40s,341502497,SystemVerilog,cv32e40s,11718,122,2024-03-13 12:43:29+00:00,[],
3,https://github.com/Xilinx/open-nic-shell.git,2021-03-01 20:37:05+00:00,AMD OpenNIC Shell includes the HDL source files,58,Xilinx/open-nic-shell,343549926,SystemVerilog,open-nic-shell,17695,88,2024-04-03 15:58:26+00:00,"['fpga', 'smartnic', 'network-acceleration', 'verilog', 'datacenter']",https://api.github.com/licenses/apache-2.0
4,https://github.com/pulp-platform/hero.git,2020-12-21 13:33:33+00:00,"Heterogeneous Research Platform (HERO) for exploration of heterogeneous computers consisting of programmable many-core accelerators and an application-class host CPU, including full-stack software and hardware.",24,pulp-platform/hero,323345486,SystemVerilog,hero,64854,87,2024-02-23 10:38:20+00:00,"['computer-architecture', 'heterogeneous-computing', 'heterogeneous-parallel-programming', 'many-core-architectures', 'shared-memory', 'openmp-offloading', 'openmp-parallelization', 'iommu', 'unified-virtual-memory', 'riscv', 'fpga']",
5,https://github.com/waviousllc/wav-lpddr-hw.git,2021-03-15 22:47:33+00:00,Wavious DDR (WDDR) Physical interface (PHY) Hardware,35,waviousllc/wav-lpddr-hw,348144172,SystemVerilog,wav-lpddr-hw,11836,87,2024-03-26 18:58:39+00:00,[],https://api.github.com/licenses/apache-2.0
6,https://github.com/kumarrishav14/AXI.git,2020-12-29 06:27:53+00:00,VIP for AXI Protocol,27,kumarrishav14/AXI,325205132,SystemVerilog,AXI,82,83,2024-03-29 02:22:55+00:00,"['amba-axi', 'sv', 'uvm', 'design-verification', 'asic-verification']",https://api.github.com/licenses/mit
7,https://github.com/daglem/reDIP-SID.git,2021-01-10 22:05:42+00:00,MOS 6581 / 8580 SID FPGA emulation platform,11,daglem/reDIP-SID,328488852,SystemVerilog,reDIP-SID,42253,79,2024-03-19 22:49:30+00:00,[],
8,https://github.com/tishi43/h265_decoder.git,2021-03-19 06:31:17+00:00,"H265 decoder write in verilog, verified on Xilinx ZYNQ7035",37,tishi43/h265_decoder,349324053,SystemVerilog,h265_decoder,2286,55,2024-04-07 02:42:33+00:00,[],None
9,https://github.com/openhwgroup/core-v-xif.git,2021-03-04 12:54:16+00:00,RISC-V eXtension interface that provides a generalized framework suitable to implement custom coprocessors and ISA extensions,23,openhwgroup/core-v-xif,344473829,SystemVerilog,core-v-xif,556,50,2024-04-13 19:06:14+00:00,[],
10,https://github.com/mikeroyal/Verilog-SystemVerilog-Guide.git,2020-12-15 21:12:03+00:00,Verilog/SystemVerilog Guide,6,mikeroyal/Verilog-SystemVerilog-Guide,321790120,SystemVerilog,Verilog-SystemVerilog-Guide,20,46,2024-04-09 04:51:38+00:00,"['fpga', 'verilog', 'hardware', 'systemverilog', 'awesome', 'awesome-list', 'awesome-readme']",None
11,https://github.com/Travissss/ahb2apb-bridge.git,2020-12-27 15:21:11+00:00,An  uvm verification env for ahb2apb bridge,13,Travissss/ahb2apb-bridge,324789266,SystemVerilog,ahb2apb-bridge,9172,42,2024-03-26 10:25:12+00:00,[],None
12,https://github.com/oprecomp/DDR4_controller.git,2020-12-16 12:40:43+00:00,,11,oprecomp/DDR4_controller,321978574,SystemVerilog,DDR4_controller,1288,40,2024-04-05 07:43:52+00:00,[],https://api.github.com/licenses/apache-2.0
13,https://github.com/zhouchuanrui/JSONinSV.git,2021-01-19 15:15:59+00:00,JSON lib in Systemverilog,12,zhouchuanrui/JSONinSV,331020928,SystemVerilog,JSONinSV,154,39,2024-03-13 07:49:40+00:00,"['json', 'systemverilog', 'json-api', 'json-parser']",https://api.github.com/licenses/mit
14,https://github.com/WukLab/FPGA-OS.git,2021-01-21 04:38:21+00:00,,5,WukLab/FPGA-OS,331515582,SystemVerilog,FPGA-OS,12611,31,2023-07-18 01:25:16+00:00,"['fpga', 'os', 'virtualization']",
15,https://github.com/AI-Vector-Accelerator/ava-core.git,2021-01-18 15:22:45+00:00,A lightweight core for the CV32E40 implementing the RISC-V vector extension specification. (v0.8),11,AI-Vector-Accelerator/ava-core,330707102,SystemVerilog,ava-core,152,27,2024-02-04 21:40:55+00:00,[],
16,https://github.com/amichai-bd/riscv-multi-core-lotr.git,2021-03-20 20:22:24+00:00,RISCV core RV32I/E.4 threads in a ring architecture  ,7,amichai-bd/riscv-multi-core-lotr,349827513,SystemVerilog,riscv-multi-core-lotr,100026,23,2024-03-25 21:53:23+00:00,"['riscv32', 'ring-architecture', 'rtl', 'systemverilog', 'cores', 'core', 'threads', 'hw-threads']",https://api.github.com/licenses/mit
17,https://github.com/ic-lab-duth/DRIM-S.git,2021-03-09 09:19:09+00:00,DUTH RISC-V Superscalar Microprocessor,3,ic-lab-duth/DRIM-S,345948930,SystemVerilog,DRIM-S,1054,23,2024-03-21 21:18:14+00:00,"['riscv', 'risc-v', 'systemverilog', 'superscalar', 'processor']",https://api.github.com/licenses/mit
18,https://github.com/georgeyhere/FPGA-Video-Processing.git,2020-12-15 21:21:06+00:00,Realtime video processing w/ Gaussian + Sobel Filters targeting Artix-7 FPGA,3,georgeyhere/FPGA-Video-Processing,321791796,SystemVerilog,FPGA-Video-Processing,149095,21,2024-02-17 15:51:44+00:00,"['verilog', 'computer-vision', 'fpga']",None
19,https://github.com/svenka3/ivl_uvm.git,2020-11-26 13:52:00+00:00,"Adding UVM support to Icarus Verilog (and Verilator in near future) by taking a step-by-step, bottom-up approach.",39,svenka3/ivl_uvm,316245269,SystemVerilog,ivl_uvm,1827,21,2024-03-24 11:39:01+00:00,[],None
20,https://github.com/intel/pfr-wilson-city.git,2021-01-25 21:19:34+00:00,,6,intel/pfr-wilson-city,332886620,SystemVerilog,pfr-wilson-city,9487,20,2023-11-03 06:09:30+00:00,[],None
21,https://github.com/bensampson5/libsv.git,2020-12-23 22:02:38+00:00,"An open source, parameterized SystemVerilog digital hardware IP library",4,bensampson5/libsv,324010177,SystemVerilog,libsv,473,19,2024-02-04 12:59:30+00:00,"['verilog', 'systemverilog', 'hdl', 'ip', 'fpga', 'asic', 'digital-design', 'asic-library', 'fpga-library', 'hardware', 'hardware-libraries', 'hardware-designs']",https://api.github.com/licenses/mit
22,https://github.com/Efinix-Inc/evsoc.git,2020-12-08 01:30:44+00:00,"This repo is for Edge Vision SoC framework, which facilitates quick porting of users' design for Edge AI and Vision solutions.",10,Efinix-Inc/evsoc,319491543,SystemVerilog,evsoc,154051,19,2024-04-02 05:41:27+00:00,[],https://api.github.com/licenses/mit
23,https://github.com/dh73/A_Formal_Tale_Chapter_I_AMBA.git,2020-11-17 04:28:54+00:00,AXI Formal Verification IP,2,dh73/A_Formal_Tale_Chapter_I_AMBA,313506846,SystemVerilog,A_Formal_Tale_Chapter_I_AMBA,2353,19,2024-03-10 15:02:25+00:00,[],
24,https://github.com/ic-lab-duth/DRIM.git,2021-03-08 06:51:57+00:00,DUTH RISC-V Microprocessor,3,ic-lab-duth/DRIM,345558394,SystemVerilog,DRIM,304,18,2023-12-24 13:03:14+00:00,"['risc-v', 'riscv32', 'processor', 'systemverilog', 'architecture']",https://api.github.com/licenses/mit
25,https://github.com/pulp-platform/rbe.git,2021-02-03 17:39:38+00:00,Reconfigurable Binary Engine,5,pulp-platform/rbe,335705659,SystemVerilog,rbe,553,14,2023-10-07 09:07:31+00:00,[],
26,https://github.com/srg320/Saturn.git,2020-12-04 08:11:41+00:00,,7,srg320/Saturn,318447904,SystemVerilog,Saturn,8363,14,2023-11-05 01:51:34+00:00,[],None
27,https://github.com/holdenQWER/systemverilog_design_pattern.git,2021-02-07 03:09:35+00:00,The source code of blog,3,holdenQWER/systemverilog_design_pattern,336689173,SystemVerilog,systemverilog_design_pattern,16,13,2023-06-27 13:57:40+00:00,[],https://api.github.com/licenses/apache-2.0
28,https://github.com/Xilinx/vck190-base-trd.git,2020-12-02 06:00:18+00:00,,8,Xilinx/vck190-base-trd,317765454,SystemVerilog,vck190-base-trd,160829,13,2024-02-21 02:42:10+00:00,[],https://api.github.com/licenses/apache-2.0
29,https://github.com/asadalam/FINN_MatrixVector_RTL.git,2021-03-04 12:48:37+00:00,Repository for work on on Xilinx's matrix vector activation unit's RTL implementation. Documentation available at: https://asadalam.github.io/FINN_MatrixVector_RTL/,2,asadalam/FINN_MatrixVector_RTL,344472298,SystemVerilog,FINN_MatrixVector_RTL,2560,13,2024-04-06 17:33:18+00:00,[],None
30,https://github.com/ChienKaiMa/HDR-Imaging-with-FPGA.git,2020-12-07 16:55:27+00:00,High Dynamic Range imaging with Altera DE2-115.,1,ChienKaiMa/HDR-Imaging-with-FPGA,319385553,SystemVerilog,HDR-Imaging-with-FPGA,9566,11,2024-04-02 11:34:04+00:00,"['hdr-image', 'fpga', 'de2-115', 'hdr', 'vga']",https://api.github.com/licenses/mit
31,https://github.com/luunguyen97/DPU-TRD-ZCU104.git,2020-12-21 10:01:24+00:00,,4,luunguyen97/DPU-TRD-ZCU104,323296473,SystemVerilog,DPU-TRD-ZCU104,4598,11,2023-12-20 12:45:36+00:00,[],None
32,https://github.com/iammituraj/FIFOs.git,2021-03-17 16:53:41+00:00,Register-based and RAM-based FIFOs designed in Verilog/System Verilog.,3,iammituraj/FIFOs,348785473,SystemVerilog,FIFOs,74,11,2024-03-11 09:53:39+00:00,"['fifo', 'verilog', 'rtl', 'systemverilog']",None
33,https://github.com/srg320/SH.git,2020-12-04 08:00:26+00:00,,4,srg320/SH,318445251,SystemVerilog,SH,1137,11,2023-11-05 01:51:39+00:00,[],None
34,https://github.com/Harshil1995/I2C_UVM_APB.git,2020-12-08 23:16:53+00:00,Formulated testbench using System Verilog and UVM and verified I2C bus controller with APB interface,1,Harshil1995/I2C_UVM_APB,319785203,SystemVerilog,I2C_UVM_APB,422,10,2024-03-29 06:49:18+00:00,[],https://api.github.com/licenses/mit
35,https://github.com/semify-eda/go.debug.git,2021-02-23 20:03:07+00:00,Ease the Life of Verification Engineers by helping them to analyze and understand failing simulation faster,2,semify-eda/go.debug,341675169,SystemVerilog,go.debug,12441,10,2024-01-04 02:46:12+00:00,"['systemverilog', 'verilog', 'uvm', 'hdl', 'verification', 'verilator', 'eda', 'testbench']",None
36,https://github.com/oshears/SNN-FPGA-Implementation.git,2021-01-21 21:31:38+00:00,,1,oshears/SNN-FPGA-Implementation,331760330,SystemVerilog,SNN-FPGA-Implementation,64733,9,2023-08-30 14:47:30+00:00,[],None
37,https://github.com/jmcneal/config_policy_pattern.git,2020-12-13 20:45:11+00:00,Support code for DVCon 2021 paper submission,1,jmcneal/config_policy_pattern,321156564,SystemVerilog,config_policy_pattern,25,9,2024-03-08 21:59:22+00:00,[],None
38,https://github.com/risc-v-cpu/ez-risc-v-cpu.git,2021-03-20 09:02:31+00:00,risc-v cpu core and soc,1,risc-v-cpu/ez-risc-v-cpu,349675616,SystemVerilog,ez-risc-v-cpu,78,8,2022-11-18 02:42:08+00:00,[],https://api.github.com/licenses/apache-2.0
39,https://github.com/kumarrishav14/SRAM_UVM.git,2020-11-29 11:37:15+00:00,UVM Testbench for a SRAM,2,kumarrishav14/SRAM_UVM,316937495,SystemVerilog,SRAM_UVM,117,8,2023-09-24 09:20:17+00:00,[],https://api.github.com/licenses/mit
40,https://github.com/TaoHeyi/ECE385-Tank-World-on-FPGA.git,2020-12-13 17:20:51+00:00,Repos for ECE385 final project,0,TaoHeyi/ECE385-Tank-World-on-FPGA,321119196,SystemVerilog,ECE385-Tank-World-on-FPGA,29785,8,2023-12-06 01:47:22+00:00,[],None
41,https://github.com/Infineon/adsbenchmark.git,2021-02-23 12:04:57+00:00,Benchmark circuits for analog defect simulation including P2427 standard validation,2,Infineon/adsbenchmark,341541533,SystemVerilog,adsbenchmark,4104,8,2024-01-31 17:00:04+00:00,[],https://api.github.com/licenses/mit
42,https://github.com/merledu/azadi.git,2020-11-29 10:41:46+00:00,[Deprecated] Azadi is an SoC with 32 bit RISC-V CPU core.,9,merledu/azadi,316928201,SystemVerilog,azadi,95899,8,2024-04-12 20:00:39+00:00,[],None
43,https://github.com/pulp-platform/redundancy_cells.git,2020-12-30 15:57:37+00:00,,7,pulp-platform/redundancy_cells,325590869,SystemVerilog,redundancy_cells,502,8,2023-12-19 07:43:07+00:00,[],
44,https://github.com/CPEN-391-TEAM-7/RNN_Accelerator.git,2021-02-21 22:40:52+00:00,Verilog Code for RNN accelerator module/submodules,1,CPEN-391-TEAM-7/RNN_Accelerator,341020101,SystemVerilog,RNN_Accelerator,98,7,2024-03-15 08:15:17+00:00,[],None
45,https://github.com/Menci/pipeline.git,2020-12-11 02:25:33+00:00,Pipelined MIPS processor in Verilog,0,Menci/pipeline,320444767,SystemVerilog,pipeline,234,7,2023-04-30 18:00:27+00:00,[],https://api.github.com/licenses/unlicense
46,https://github.com/grant4001/CORDIC-UART-Artix-7.git,2021-03-13 02:53:44+00:00,,0,grant4001/CORDIC-UART-Artix-7,347256359,SystemVerilog,CORDIC-UART-Artix-7,24376,7,2023-07-13 06:41:34+00:00,[],None
47,https://github.com/VimfulDang/APB-SPI-Controller-Verification.git,2020-12-22 00:26:28+00:00,"UVM testbench environment consisting of an APB driver, high level SPI controller model, and SPI verification testbench based upon an LPC24xx microcontroller specification.",5,VimfulDang/APB-SPI-Controller-Verification,323479446,SystemVerilog,APB-SPI-Controller-Verification,14,7,2023-08-10 05:14:52+00:00,[],None
48,https://github.com/NamiLiy/Helios_scalable_QEC.git,2021-03-07 19:46:17+00:00,FPGA implementation of distributed union find algorithm,4,NamiLiy/Helios_scalable_QEC,345437897,SystemVerilog,Helios_scalable_QEC,1971,6,2024-03-12 15:21:04+00:00,"['quantum-computing', 'fpga']",https://api.github.com/licenses/bsd-3-clause
49,https://github.com/Travissss/100BT1_DV.git,2021-02-14 10:10:25+00:00,An uvm environment for 100Base-T1 (IEEE 802.3bw) Phy,1,Travissss/100BT1_DV,338776209,SystemVerilog,100BT1_DV,1074,6,2024-03-04 16:00:04+00:00,[],None
50,https://github.com/nbdd0121/muntjac-soc.git,2021-01-31 03:14:57+00:00,SoC for muntjac,0,nbdd0121/muntjac-soc,334562225,SystemVerilog,muntjac-soc,2104,6,2024-03-19 02:35:50+00:00,[],https://api.github.com/licenses/apache-2.0
51,https://github.com/nbdd0121/sdhci.git,2021-01-22 07:01:01+00:00,Open-source SD host controller interface,0,nbdd0121/sdhci,331864061,SystemVerilog,sdhci,62,6,2024-04-02 17:40:38+00:00,[],https://api.github.com/licenses/apache-2.0
52,https://github.com/SamarSarda/AMBA-APB-I2C-Project.git,2021-02-24 15:49:08+00:00,SystemVerilog project where we design a processor and a I2C peripheral to interact with an AMBA APB interface.,1,SamarSarda/AMBA-APB-I2C-Project,341951023,SystemVerilog,AMBA-APB-I2C-Project,157,5,2023-05-26 07:30:29+00:00,[],None
53,https://github.com/Danny1379/RISC_V_MultiCycle_Processor.git,2021-02-15 09:12:39+00:00,RISC V multicycle processor in system verilog for final project of Comuter Architecture and Orginization,0,Danny1379/RISC_V_MultiCycle_Processor,339021605,SystemVerilog,RISC_V_MultiCycle_Processor,8,5,2023-12-17 21:34:46+00:00,[],None
54,https://github.com/gotti/shrv32.git,2020-12-06 08:08:40+00:00,RISC-V SystemVerilog implementation with AES accelerator and RNG,1,gotti/shrv32,318982813,SystemVerilog,shrv32,114,5,2021-02-19 11:10:41+00:00,[],None
55,https://github.com/gchinna/ahb_pkg.git,2020-11-28 16:26:17+00:00,AHB package with UVM master and slave agents.,1,gchinna/ahb_pkg,316774712,SystemVerilog,ahb_pkg,11,5,2024-02-20 03:05:12+00:00,[],https://api.github.com/licenses/mit
56,https://github.com/takah29/arm-cpu.git,2021-02-20 11:57:34+00:00,Armv5 single-cycle processor,0,takah29/arm-cpu,340643435,SystemVerilog,arm-cpu,5243,5,2023-08-11 21:19:41+00:00,"['arm', 'armv4', 'armv5', 'arm-cpu', 'cpu', 'hdl', 'systemverilog', 'verilog']",None
57,https://github.com/pulp-platform/udma_hyper.git,2021-03-03 10:10:07+00:00,,4,pulp-platform/udma_hyper,344082520,SystemVerilog,udma_hyper,2255,5,2024-03-21 02:29:47+00:00,[],
58,https://github.com/fadialzammar/FPGAmeBoy.git,2021-01-08 03:08:27+00:00,,0,fadialzammar/FPGAmeBoy,327785136,SystemVerilog,FPGAmeBoy,650,5,2024-01-22 07:31:12+00:00,[],None
59,https://github.com/debugevent90901/FPGA-based-3D-graphics-renderer.git,2020-12-12 05:42:50+00:00,ECE 385 Final Project in FALL 2020 UIUC,1,debugevent90901/FPGA-based-3D-graphics-renderer,320757780,SystemVerilog,FPGA-based-3D-graphics-renderer,30789,5,2023-04-13 06:46:23+00:00,[],https://api.github.com/licenses/mit
60,https://github.com/mehaltalukder/UART_UVM_Project.git,2020-11-15 21:03:52+00:00,Verification of UART design using UVM (Universal Verification Methodology) and SystemVerilog,0,mehaltalukder/UART_UVM_Project,313122835,SystemVerilog,UART_UVM_Project,16,5,2024-02-10 15:51:32+00:00,[],None
61,https://github.com/AFEI1100/easyUVM-master.git,2020-12-01 05:48:51+00:00,,4,AFEI1100/easyUVM-master,317438142,SystemVerilog,easyUVM-master,9,5,2023-11-27 06:14:10+00:00,[],https://api.github.com/licenses/mit
62,https://github.com/teekamkhandelwal/memory_verification_using_system_verilog.git,2020-11-24 03:55:47+00:00,In this respiratory having two verification methods first have without scoreboard and monitor and second with includes all component,0,teekamkhandelwal/memory_verification_using_system_verilog,315512848,SystemVerilog,memory_verification_using_system_verilog,43,5,2023-10-18 12:25:50+00:00,[],https://api.github.com/licenses/unlicense
63,https://github.com/letitbe0201/NOC-Switch.git,2020-11-22 15:59:03+00:00,,0,letitbe0201/NOC-Switch,315075471,SystemVerilog,NOC-Switch,292,5,2024-02-04 06:47:04+00:00,[],None
64,https://github.com/IAIK/coco-ibex.git,2020-11-18 07:04:38+00:00,,3,IAIK/coco-ibex,313850861,SystemVerilog,coco-ibex,1294,5,2023-02-16 06:58:11+00:00,[],https://api.github.com/licenses/apache-2.0
65,https://github.com/jieltan/project-v-open.git,2020-12-01 00:31:02+00:00,This is a pipelined in-order RISC-V processor that can run RV-I and part of RV-M instructions.,0,jieltan/project-v-open,317381693,SystemVerilog,project-v-open,300,5,2024-04-09 04:47:30+00:00,[],https://api.github.com/licenses/mit
66,https://github.com/taneroksuz/wolv-z0.git,2021-01-15 16:43:46+00:00,Wolv Z0 is a RISC-V CPU core,3,taneroksuz/wolv-z0,329968686,SystemVerilog,wolv-z0,462,5,2023-09-07 05:42:02+00:00,"['risc-v', 'hardware', 'cpu', 'rv32', 'core', 'fpga']",https://api.github.com/licenses/apache-2.0
67,https://github.com/dramforever/riscarlet.git,2020-12-31 06:49:10+00:00,"Work in progress, RISC-V in Scarlet",0,dramforever/riscarlet,325735441,SystemVerilog,riscarlet,36,5,2022-08-26 11:28:44+00:00,[],https://api.github.com/licenses/mit
68,https://github.com/egorman44/1G-PCS-VIP.git,2020-11-17 08:29:38+00:00,UVM component that could be used in your Verification environment,1,egorman44/1G-PCS-VIP,313554553,SystemVerilog,1G-PCS-VIP,52,5,2023-04-24 14:45:46+00:00,[],None
69,https://github.com/Cra2yPierr0t/stm32_acc.git,2020-12-02 06:08:53+00:00,SPIで制御出来るアクセラレータ,0,Cra2yPierr0t/stm32_acc,317767121,SystemVerilog,stm32_acc,277,4,2022-12-08 23:54:00+00:00,[],None
70,https://github.com/taneroksuz/aes.git,2021-03-04 17:20:44+00:00,Hardware and software implementation of AES algorithm,2,taneroksuz/aes,344553142,SystemVerilog,aes,100,4,2024-03-24 18:14:10+00:00,"['hardware', 'software', 'aes', 'algorithm', 'fpga']",https://api.github.com/licenses/apache-2.0
71,https://github.com/LeninSG21/mips-multiciclo.git,2020-11-13 17:50:18+00:00,Implementación en verilog de MIPS Multiciclo,0,LeninSG21/mips-multiciclo,312646294,SystemVerilog,mips-multiciclo,1122,4,2021-03-18 22:46:14+00:00,[],None
72,https://github.com/kumarrishav14/ALU_UVM.git,2020-12-09 13:10:37+00:00,UVM Test bench for a 8-bit ALU,1,kumarrishav14/ALU_UVM,319960271,SystemVerilog,ALU_UVM,78,4,2023-12-02 03:28:54+00:00,"['uvm', 'alu', 'design-verification', 'system-verilog']",https://api.github.com/licenses/mit
73,https://github.com/2bitsin/FPGAme.git,2020-12-30 02:43:23+00:00,FPGAme,0,2bitsin/FPGAme,325437287,SystemVerilog,FPGAme,2245,4,2023-11-21 13:56:46+00:00,[],None
74,https://github.com/1009qjm/Block-matrix-multiplication.git,2021-03-23 06:53:01+00:00,,1,1009qjm/Block-matrix-multiplication,350609125,SystemVerilog,Block-matrix-multiplication,10,4,2024-01-15 12:10:35+00:00,[],None
75,https://github.com/VSHEV92/AXIS_to_UART.git,2020-12-25 07:11:41+00:00,IP-ядро преобразующее AXI-Stream в UART и обратно,1,VSHEV92/AXIS_to_UART,324309261,SystemVerilog,AXIS_to_UART,2784,4,2024-02-04 16:37:08+00:00,[],None
76,https://github.com/analogdevicesinc/testbenches.git,2020-12-14 13:46:30+00:00,Testbenches for HDL projects,18,analogdevicesinc/testbenches,321361021,SystemVerilog,testbenches,1103,4,2023-11-01 10:18:36+00:00,[],https://api.github.com/licenses/gpl-2.0
77,https://github.com/WasabiFan/apio-upduino-template.git,2021-02-07 06:54:29+00:00,Opinionated starter project for the UPduino V3 with apio. Uses sv2v for SystemVerilog support.,0,WasabiFan/apio-upduino-template,336722463,SystemVerilog,apio-upduino-template,26,4,2023-04-14 06:21:21+00:00,[],https://api.github.com/licenses/mit
78,https://github.com/ShashankVM/generic_systemverilog_designs_library.git,2021-02-14 14:52:23+00:00,"A library of useful, fully parameterized RTL designs implemented in SystemVerilog.",1,ShashankVM/generic_systemverilog_designs_library,338828597,SystemVerilog,generic_systemverilog_designs_library,40,4,2024-03-16 05:16:24+00:00,"['digital-logic-design', 'systemverilog', 'basic-learning']",https://api.github.com/licenses/bsd-3-clause
79,https://github.com/taneroksuz/sha.git,2021-03-28 14:26:37+00:00,Hardware and Software Implementation of SHA Algorithm,1,taneroksuz/sha,352350761,SystemVerilog,sha,138,4,2024-03-24 18:13:10+00:00,"['hardware', 'software', 'sha-1', 'sha-2', 'sha', 'algorithm', 'fpga']",https://api.github.com/licenses/apache-2.0
80,https://github.com/vnegnev/marga.git,2020-12-06 15:59:33+00:00,Flow-based streaming ocra controller,3,vnegnev/marga,319072116,SystemVerilog,marga,232,3,2023-01-07 17:27:13+00:00,[],https://api.github.com/licenses/gpl-3.0
81,https://github.com/saipra99/AHB_APB_Assertions.git,2021-03-20 13:23:17+00:00,,0,saipra99/AHB_APB_Assertions,349731399,SystemVerilog,AHB_APB_Assertions,3,3,2022-10-17 08:16:52+00:00,[],None
82,https://github.com/endereyewxy/NaiveMIPS.git,2020-12-21 02:08:33+00:00,,0,endereyewxy/NaiveMIPS,323207347,SystemVerilog,NaiveMIPS,14457,3,2023-01-27 23:44:35+00:00,[],None
83,https://github.com/susansun1999/eecs570_final_project.git,2021-03-02 01:52:22+00:00,,0,susansun1999/eecs570_final_project,343613548,SystemVerilog,eecs570_final_project,20902,3,2024-04-12 03:07:56+00:00,[],None
84,https://github.com/Hong-Ming/FPGA-Oscilloscope.git,2020-11-17 19:14:13+00:00,Building a simple oscilloscope using FPGA board and PCB.,1,Hong-Ming/FPGA-Oscilloscope,313718317,SystemVerilog,FPGA-Oscilloscope,63840,3,2023-09-24 19:25:23+00:00,"['fpga', 'systemverilog', 'pcb-layout']",None
85,https://github.com/techav-homebrew/SE-Exp30.git,2021-03-21 05:35:24+00:00,68030 & 68882 accelerator card for the Macintosh SE,0,techav-homebrew/SE-Exp30,349909233,SystemVerilog,SE-Exp30,989,3,2024-03-26 08:01:08+00:00,[],None
86,https://github.com/samarth2317/verification_i2c_uvm.git,2020-11-17 07:40:54+00:00,,0,samarth2317/verification_i2c_uvm,313543105,SystemVerilog,verification_i2c_uvm,29,3,2023-10-08 05:27:33+00:00,[],None
87,https://github.com/4caster/de0-nano-matlab-to-axi.git,2020-11-19 20:01:03+00:00,Description of method of matlab-to-fpga memory access using matlab jtag master,0,4caster/de0-nano-matlab-to-axi,314356554,SystemVerilog,de0-nano-matlab-to-axi,235,3,2022-12-25 10:11:36+00:00,[],None
88,https://github.com/punzik/sugar-lissajous.git,2021-02-28 15:48:47+00:00,Light organ on iCESugar board,0,punzik/sugar-lissajous,343143731,SystemVerilog,sugar-lissajous,3854,3,2023-06-22 14:54:52+00:00,[],https://api.github.com/licenses/mit
89,https://github.com/RPTU-EIS/symbolic-pmp.git,2021-03-25 09:53:46+00:00,This repository contains a symbolic and secure configuration template for the RISC-V Physical Memory Protection (PMP) to be used in SV/SVA based verification flows.,0,RPTU-EIS/symbolic-pmp,351385661,SystemVerilog,symbolic-pmp,3,3,2024-03-15 13:42:59+00:00,[],None
90,https://github.com/VSHEV92/FIFO_MIG_BASED_AXI.git,2021-03-01 17:00:18+00:00,"IP-ядро, реализующее Fifo на основе DDR памяти и MIG c AXI4 Memory Map Interface",1,VSHEV92/FIFO_MIG_BASED_AXI,343492058,SystemVerilog,FIFO_MIG_BASED_AXI,3587,3,2024-03-27 04:58:16+00:00,[],None
91,https://github.com/CaiB/CCHW.git,2021-01-27 22:31:08+00:00,"ColorChordHW: real-time chromatic music visualizer, but implemented for FPGA and ASIC. Group project for EE477 at UW Seattle.",0,CaiB/CCHW,333578073,SystemVerilog,CCHW,11305,3,2023-12-24 20:20:52+00:00,"['music', 'music-visualizer', 'visualizers', 'fpga', 'audio', 'colorchord']",None
92,https://github.com/WonHoYoo/axi2mem.git,2021-03-07 10:29:30+00:00,AXI4 to Memory Interface ,0,WonHoYoo/axi2mem,345317185,SystemVerilog,axi2mem,10,3,2024-01-04 08:57:33+00:00,[],None
93,https://github.com/EECS3216Z-W21/tictactoe.git,2021-03-19 18:18:58+00:00,,0,EECS3216Z-W21/tictactoe,349517407,SystemVerilog,tictactoe,494,3,2021-04-12 15:48:08+00:00,[],None
94,https://github.com/pulp-platform/hypnos.git,2021-01-11 14:30:47+00:00,,1,pulp-platform/hypnos,328690913,SystemVerilog,hypnos,111,3,2023-11-14 07:28:22+00:00,[],
95,https://github.com/Soham-coder/uvm_course_cadence.git,2021-01-12 12:53:17+00:00,Labs for UVM in Cadence Xcelium,1,Soham-coder/uvm_course_cadence,328986222,SystemVerilog,uvm_course_cadence,946,3,2024-02-04 17:30:48+00:00,[],None
96,https://github.com/LukeyReyno/DecimalToBinaryGame.git,2020-12-09 20:34:23+00:00,Game Designed for Basys3 board,0,LukeyReyno/DecimalToBinaryGame,320072821,SystemVerilog,DecimalToBinaryGame,41,3,2023-12-26 15:29:16+00:00,[],
97,https://github.com/AI-Vector-Accelerator/cv32e40p.git,2021-01-18 15:46:33+00:00,A fork of the Open Hardware Group CV32E40P core with light modifications to enable better APU device autonomy.,3,AI-Vector-Accelerator/cv32e40p,330713761,SystemVerilog,cv32e40p,4671,3,2023-04-29 18:32:38+00:00,[],
98,https://github.com/AnduinD/flowingLED.git,2020-12-11 14:10:32+00:00,数电流水灯仿真 verilog,0,AnduinD/flowingLED,320591936,SystemVerilog,flowingLED,8475,3,2023-08-12 04:16:48+00:00,[],None
99,https://github.com/ljk98116/mips_simple_sram.git,2021-01-10 15:38:04+00:00,当前为六级流水线，目前仅能通过龙芯sram测试的89个功能点，sram测试工程下仅60MHz,0,ljk98116/mips_simple_sram,328417050,SystemVerilog,mips_simple_sram,29,3,2021-12-05 14:10:25+00:00,[],None
100,https://github.com/Cra2yPierr0t/cprv32g.git,2021-01-12 13:38:44+00:00,まともなRISC-V CPU,1,Cra2yPierr0t/cprv32g,328998351,SystemVerilog,cprv32g,6,3,2022-12-08 23:54:07+00:00,[],None
101,https://github.com/vccheng2001/NeoPixel-LED-Controller.git,2020-11-30 19:09:17+00:00,,0,vccheng2001/NeoPixel-LED-Controller,317320436,SystemVerilog,NeoPixel-LED-Controller,475,3,2022-06-14 17:01:27+00:00,[],None
102,https://github.com/QianfengClarkShen/easyobv.git,2021-01-22 22:29:53+00:00,An on board verification framework for Xilinx FPGAs,1,QianfengClarkShen/easyobv,332077226,SystemVerilog,easyobv,108,2,2023-09-30 02:10:07+00:00,[],https://api.github.com/licenses/mit
103,https://github.com/dh73/fpv_initial.git,2021-02-19 05:50:32+00:00,Dummy tests,0,dh73/fpv_initial,340271588,SystemVerilog,fpv_initial,21,2,2022-07-02 23:08:55+00:00,[],None
104,https://github.com/seanpm2001/SNU_2D_ProgrammingTools_IDE_SystemVerilog.git,2020-12-01 03:24:38+00:00,The System Verilog Programming language IDE submodule for SNU Programming Tools (2D Mode) ,2,seanpm2001/SNU_2D_ProgrammingTools_IDE_SystemVerilog,317413364,SystemVerilog,SNU_2D_ProgrammingTools_IDE_SystemVerilog,1311,2,2022-09-24 06:36:11+00:00,"['gpl3', 'gplv3', 'ide', 'programming', 'snu', 'snu-2d', 'snu-2d-programming-tools', 'snu-2d-programmingtools', 'snu-development', 'snu-programming-tools', 'snu2d-programmingtools', 'snu2dprogrammingtools', 'snuprogrammingtools', 'systemverilog', 'systemverilog-lang', 'systemverilog-language', 'web-ide']",https://api.github.com/licenses/gpl-3.0
105,https://github.com/Tan-YiFan/mycpu.git,2021-03-21 02:04:03+00:00,,0,Tan-YiFan/mycpu,349879236,SystemVerilog,mycpu,22,2,2023-02-25 07:35:52+00:00,[],None
106,https://github.com/guillegil/sv-verification-example.git,2021-03-22 21:48:01+00:00,Simple memory testbench using SystemVerilog techniques,0,guillegil/sv-verification-example,350499009,SystemVerilog,sv-verification-example,24,2,2022-06-02 18:28:31+00:00,[],https://api.github.com/licenses/gpl-3.0
107,https://github.com/litex-hub/pythondata-misc-opentitan.git,2021-02-15 20:25:31+00:00,Python module containing resources files for opentitan misc (for use with LiteX).,1,litex-hub/pythondata-misc-opentitan,339197621,SystemVerilog,pythondata-misc-opentitan,81682,2,2023-09-07 05:42:05+00:00,[],https://api.github.com/licenses/apache-2.0
108,https://github.com/litex-hub/pythondata-cpu-ibex.git,2021-02-15 15:57:07+00:00,Python module containing system_verilog files for ibex cpu (for use with LiteX).,3,litex-hub/pythondata-cpu-ibex,339128468,SystemVerilog,pythondata-cpu-ibex,11784,2,2023-09-07 05:42:05+00:00,[],https://api.github.com/licenses/apache-2.0
109,https://github.com/redchenjs/hxdsoc.git,2021-03-28 11:28:07+00:00,HXD SoC (HXD32 RV32I/E[C]),0,redchenjs/hxdsoc,352311015,SystemVerilog,hxdsoc,63291,2,2023-09-07 05:42:08+00:00,[],None
110,https://github.com/Jefferson-Lopes/projeto-LCL.git,2020-12-01 01:17:49+00:00,,0,Jefferson-Lopes/projeto-LCL,317389491,SystemVerilog,projeto-LCL,34108,2,2021-04-15 16:33:54+00:00,[],None
111,https://github.com/ArmorAmiga/WM1200_fpga.git,2020-11-21 19:27:44+00:00,WM1200 prototype fpga logic,2,ArmorAmiga/WM1200_fpga,314887889,SystemVerilog,WM1200_fpga,5,2,2021-06-18 08:24:12+00:00,[],None
112,https://github.com/shawshank96/AMBA-APB.git,2020-12-15 07:05:18+00:00,Design and Verification of AMBA APB slave,1,shawshank96/AMBA-APB,321581737,SystemVerilog,AMBA-APB,30,2,2021-11-16 09:18:39+00:00,[],None
113,https://github.com/nick-nuti/EE272_SYSVERILOG_BUS.git,2021-01-05 07:36:35+00:00,SJSU MSEE272 Fall 2020 Final Project (Professor Morris Jones): AHB Bus (Utilizing Round Robin Arbitration) with one master device and 4 slave devices. Each of the 4 slave devices have a NOC (Network on chip) that feed packets into 4 individual SHA3 permutation engines. The data for every device is then sent back to the master for checking.,0,nick-nuti/EE272_SYSVERILOG_BUS,326922682,SystemVerilog,EE272_SYSVERILOG_BUS,2278,2,2022-09-15 23:11:27+00:00,[],None
114,https://github.com/cyb0124/FPGA-Music.git,2021-03-25 21:08:26+00:00,FPGA multitrack sequencer and synthesizer,1,cyb0124/FPGA-Music,351576352,SystemVerilog,FPGA-Music,50,2,2024-03-03 02:52:56+00:00,[],None
115,https://github.com/matthewbconn/EE552_Project.git,2021-03-29 20:07:41+00:00,"Asynchronous VLSI, Spring 2021, Dr. Peter Beerel.  Co-author Ahmed Abuhjar",1,matthewbconn/EE552_Project,352771040,SystemVerilog,EE552_Project,62,2,2024-04-01 02:34:19+00:00,[],None
116,https://github.com/romychs/OPro-COM-AY.git,2021-02-05 12:26:25+00:00,Two serial ports and AY-sound board for Orion-PRO amateur personal computer,0,romychs/OPro-COM-AY,336264894,SystemVerilog,OPro-COM-AY,2721,2,2022-01-22 18:15:52+00:00,[],None
117,https://github.com/PassantSamirkh/SimpleAdderTestbench_SystemVerilog-with-and-without-classes.git,2021-03-07 00:07:05+00:00,,0,PassantSamirkh/SimpleAdderTestbench_SystemVerilog-with-and-without-classes,345222340,SystemVerilog,SimpleAdderTestbench_SystemVerilog-with-and-without-classes,56,2,2022-08-03 02:54:17+00:00,[],None
118,https://github.com/srg320/32X.git,2020-12-18 08:41:28+00:00,,1,srg320/32X,322537793,SystemVerilog,32X,107,2,2023-01-27 19:16:31+00:00,[],None
119,https://github.com/jaycordaro/spi_slave_simple.git,2020-12-07 17:08:11+00:00,Simple System Verilog implementation of SPI Slave,1,jaycordaro/spi_slave_simple,319389089,SystemVerilog,spi_slave_simple,131,2,2024-03-15 14:25:32+00:00,[],https://api.github.com/licenses/bsd-2-clause
120,https://github.com/1009qjm/axi_lite-and-axi-full-test.git,2021-03-10 04:52:59+00:00,,1,1009qjm/axi_lite-and-axi-full-test,346235638,SystemVerilog,axi_lite-and-axi-full-test,14,2,2022-06-23 15:02:58+00:00,[],None
121,https://github.com/hhoswaldo/Gumnut-Core-Processor.git,2021-03-20 17:03:44+00:00,"Gumnut CPU from ""An Embedded Systems Approach Using Verilog"" - Peter Ashenden",1,hhoswaldo/Gumnut-Core-Processor,349786504,SystemVerilog,Gumnut-Core-Processor,284,2,2022-08-19 15:58:59+00:00,[],https://api.github.com/licenses/mit
122,https://github.com/UofT-HPRC/NMU.git,2021-01-19 21:50:30+00:00,Network Management Unit Source,1,UofT-HPRC/NMU,331119131,SystemVerilog,NMU,57,2,2022-12-19 19:21:53+00:00,[],None
123,https://github.com/moonishav1997/ambabridge.git,2020-12-02 10:30:01+00:00,The Advanced Microcontroller Bus Architecture (AMBA) is an on-chip bus architecture used to strengthen the reusability of IP core and widely used interconnection standard for system on chip (SOC). To synthesize and simulate a complex interface bridge between Advanced High performance Bus (AHB) and Advanced Peripheral Bus (APB) known as AHB2APB Bridge,0,moonishav1997/ambabridge,317826746,SystemVerilog,ambabridge,31,2,2022-06-26 09:04:54+00:00,[],None
124,https://github.com/CookDarwin/exp_frequency.git,2021-01-02 14:22:04+00:00,基于FPGA的频率测量，能测量方波信号的频率、占空比、相位差。范围100MHz~200MHz，精度0.0001Hz,0,CookDarwin/exp_frequency,326198645,SystemVerilog,exp_frequency,2,2,2023-11-14 07:12:00+00:00,[],None
125,https://github.com/jay20162016/fomu_async.git,2021-02-18 14:40:33+00:00,Asynchronous Circuits on FOMU!,1,jay20162016/fomu_async,340078877,SystemVerilog,fomu_async,49,2,2021-10-10 21:32:57+00:00,[],https://api.github.com/licenses/gpl-3.0
126,https://github.com/Rafa350/riscv.git,2020-12-11 11:19:30+00:00,Experimental RISCV implementation,0,Rafa350/riscv,320552942,SystemVerilog,riscv,817,2,2023-06-30 17:04:36+00:00,"['fpga', 'riscv', 'de0-nano', 'simulation', 'verilator']",None
127,https://github.com/PXVI/ip_amba_ahb_ms_rtl_v.git,2020-12-05 12:12:31+00:00,RTL design for the AMBA AHB protocol.,2,PXVI/ip_amba_ahb_ms_rtl_v,318779599,SystemVerilog,ip_amba_ahb_ms_rtl_v,111,2,2023-08-31 11:01:29+00:00,[],https://api.github.com/licenses/mit
128,https://github.com/maZymaZe/-mips-cpu.git,2021-03-17 15:43:53+00:00,,1,maZymaZe/-mips-cpu,348764397,SystemVerilog,-mips-cpu,236,2,2022-05-14 05:28:49+00:00,[],None
129,https://github.com/lild4d4/ARM-CPU.git,2020-12-03 16:13:58+00:00,basic arm cpu without and with 5 stage pipelining,1,lild4d4/ARM-CPU,318249853,SystemVerilog,ARM-CPU,788,2,2023-11-04 23:58:21+00:00,[],None
130,https://github.com/teekamkhandelwal/two-port-switch-test.git,2020-11-25 08:04:54+00:00,two port switch contaning router,0,teekamkhandelwal/two-port-switch-test,315869549,SystemVerilog,two-port-switch-test,30,2,2021-04-28 18:23:22+00:00,[],https://api.github.com/licenses/mpl-2.0
131,https://github.com/dhaivat7/MUX_Assertions.git,2021-01-10 04:09:20+00:00,Basic Project on System Verilog Assertion,0,dhaivat7/MUX_Assertions,328300406,SystemVerilog,MUX_Assertions,7,1,2021-01-31 22:53:41+00:00,[],None
132,https://github.com/AkarshNKolekar/Mesh_NoC_RTL_Gen-Wormhole_Router.git,2021-02-21 19:46:24+00:00,,0,AkarshNKolekar/Mesh_NoC_RTL_Gen-Wormhole_Router,340988925,SystemVerilog,Mesh_NoC_RTL_Gen-Wormhole_Router,55,1,2022-04-01 20:34:42+00:00,[],https://api.github.com/licenses/gpl-3.0
133,https://github.com/teekamkhandelwal/sequence-detector.git,2020-11-13 15:19:58+00:00,,0,teekamkhandelwal/sequence-detector,312610866,SystemVerilog,sequence-detector,6,1,2020-11-24 12:06:38+00:00,[],https://api.github.com/licenses/mit
134,https://github.com/Hong-Ming/Huffman-Codeing-IC.git,2020-11-17 21:29:24+00:00,Implemented 8-bit Huffman coding algorithm using SystemVerilog.,0,Hong-Ming/Huffman-Codeing-IC,313747608,SystemVerilog,Huffman-Codeing-IC,12,1,2022-10-19 00:49:21+00:00,['systemverilog'],None
135,https://github.com/teilairwin/CMPE_212_ProjectGroup4.git,2020-12-06 17:20:13+00:00,Repo for our final project.,0,teilairwin/CMPE_212_ProjectGroup4,319089073,SystemVerilog,CMPE_212_ProjectGroup4,31,1,2020-12-15 01:26:42+00:00,[],None
136,https://github.com/kropotin4/SystemVerilog-examples.git,2021-03-04 10:05:42+00:00,Попытка написать несколько примеров кода на языке SystemVerilog.,0,kropotin4/SystemVerilog-examples,344429304,SystemVerilog,SystemVerilog-examples,26,1,2021-03-12 10:29:39+00:00,"['questasim', 'systemverilog', 'rtl']",None
137,https://github.com/ildus/midi_fpga.git,2020-12-28 19:23:18+00:00,MIDI footswitch controller on iCE40HX1K-EVB,0,ildus/midi_fpga,325097857,SystemVerilog,midi_fpga,1690,1,2022-02-24 11:56:12+00:00,[],https://api.github.com/licenses/gpl-3.0
138,https://github.com/Mariummasood/RiscV-5-stage-pipeline-.git,2021-03-06 08:54:24+00:00,five stage pipeline R32I,0,Mariummasood/RiscV-5-stage-pipeline-,345048384,SystemVerilog,RiscV-5-stage-pipeline-,8,1,2022-05-02 21:55:48+00:00,[],None
139,https://github.com/yumaueda/aes.git,2020-11-24 04:28:59+00:00,Fully pipelined AES module written in SystemVerilog. WIP.,1,yumaueda/aes,315518270,SystemVerilog,aes,62,1,2023-11-30 14:51:23+00:00,[],None
140,https://github.com/18520474/AnhAnh.git,2021-03-02 07:43:24+00:00,,2,18520474/AnhAnh,343687186,SystemVerilog,AnhAnh,890903,1,2021-07-21 06:33:36+00:00,[],None
141,https://github.com/abdullahmemisoglu/systemverilog.git,2021-02-17 13:13:54+00:00,Intel ModelSIM,1,abdullahmemisoglu/systemverilog,339728575,SystemVerilog,systemverilog,135,1,2022-07-14 14:53:05+00:00,[],None
142,https://github.com/CookDarwin/axi_tdl.git,2021-02-19 15:35:49+00:00,Axi is a light weight axi library. Tdl is a hardware Construction language,1,CookDarwin/axi_tdl,340412601,SystemVerilog,axi_tdl,1549,1,2022-07-17 13:29:26+00:00,[],https://api.github.com/licenses/lgpl-2.1
143,https://github.com/hdl-util/unipolar-rz.git,2021-02-28 21:01:09+00:00,,0,hdl-util/unipolar-rz,343213713,SystemVerilog,unipolar-rz,2889,1,2022-04-12 07:27:48+00:00,[],
144,https://github.com/weicolor0502/xge_mac_SV_UVM_tb.git,2020-12-15 03:08:52+00:00,,1,weicolor0502/xge_mac_SV_UVM_tb,321538076,SystemVerilog,xge_mac_SV_UVM_tb,30,1,2023-04-07 21:41:35+00:00,[],None
145,https://github.com/nmoroze/opentitan-kronos.git,2021-01-15 05:57:47+00:00,Fork of OpenTitan with modifications for Kronos ,1,nmoroze/opentitan-kronos,329822595,SystemVerilog,opentitan-kronos,10415,1,2021-12-10 17:05:44+00:00,[],https://api.github.com/licenses/apache-2.0
146,https://github.com/Skallwar/rv32i-pico.git,2021-02-16 16:09:39+00:00,,0,Skallwar/rv32i-pico,339454352,SystemVerilog,rv32i-pico,51,1,2021-04-11 10:23:40+00:00,[],https://api.github.com/licenses/gpl-2.0
147,https://github.com/Amrit-Raj-Official/32-bit-Instruction-Word-Register.git,2021-02-17 12:47:29+00:00,,1,Amrit-Raj-Official/32-bit-Instruction-Word-Register,339721695,SystemVerilog,32-bit-Instruction-Word-Register,44,1,2024-01-15 17:20:53+00:00,[],None
148,https://github.com/jmerdich/mr-soc.git,2020-12-30 21:32:36+00:00,Mr. SOC - Merdich RISC-V SOC,0,jmerdich/mr-soc,325652115,SystemVerilog,mr-soc,156,1,2024-03-02 12:09:43+00:00,[],https://api.github.com/licenses/mit
149,https://github.com/Phzera/SVmodules.git,2020-12-29 01:41:04+00:00,SystemVerilog examples for digital eletronics and FPGA learning. ,0,Phzera/SVmodules,325158006,SystemVerilog,SVmodules,109,1,2023-06-04 09:49:03+00:00,[],None
150,https://github.com/Soham-coder/Presync.git,2020-12-17 18:22:42+00:00,,0,Soham-coder/Presync,322378218,SystemVerilog,Presync,12281,1,2022-01-10 21:52:47+00:00,[],None
151,https://github.com/Cathuber/sv_fork_disable.git,2020-12-29 16:05:02+00:00,SystemVerilog fork disable code examples,0,Cathuber/sv_fork_disable,325329781,SystemVerilog,sv_fork_disable,8,1,2021-07-30 23:03:35+00:00,[],None
152,https://github.com/kat066/ISA.git,2021-02-16 09:56:14+00:00,9 bit ISA for CSE141L,0,kat066/ISA,339353273,SystemVerilog,ISA,85966,1,2021-05-02 14:02:28+00:00,[],None
153,https://github.com/AnkitaMoholkar/UVM_ALU_Sequence.git,2021-02-19 07:49:50+00:00,,1,AnkitaMoholkar/UVM_ALU_Sequence,340295576,SystemVerilog,UVM_ALU_Sequence,8,1,2021-02-25 20:14:37+00:00,[],None
154,https://github.com/rubywangruobin/ECE385_Rhythm_Master.git,2021-01-24 16:50:10+00:00,,0,rubywangruobin/ECE385_Rhythm_Master,332502495,SystemVerilog,ECE385_Rhythm_Master,1123,1,2022-07-14 17:32:23+00:00,[],None
155,https://github.com/hao310rui140326/my_uvm_3ch.git,2021-02-05 00:40:26+00:00,,0,hao310rui140326/my_uvm_3ch,336121918,SystemVerilog,my_uvm_3ch,8224,1,2021-06-29 07:43:10+00:00,[],None
156,https://github.com/mowaida/Distributed-DecisionTree.git,2021-03-17 15:28:58+00:00,,0,mowaida/Distributed-DecisionTree,348759626,SystemVerilog,Distributed-DecisionTree,120,1,2023-02-07 05:06:50+00:00,[],https://api.github.com/licenses/gpl-3.0
157,https://github.com/gishmaya/second_version_for_switch_standard_UVM.git,2021-01-24 09:33:01+00:00,My second version of verification environment for packet switch by the standard classes of UVM.,0,gishmaya/second_version_for_switch_standard_UVM,332410733,SystemVerilog,second_version_for_switch_standard_UVM,57,1,2021-06-17 07:15:46+00:00,[],None
158,https://github.com/NikhilBellad/cache-design.git,2021-03-08 21:54:12+00:00,,0,NikhilBellad/cache-design,345805724,SystemVerilog,cache-design,2,1,2022-06-10 00:14:09+00:00,[],None
159,https://github.com/AnkitaMoholkar/UVM_Messages-.git,2021-02-19 07:22:03+00:00,,0,AnkitaMoholkar/UVM_Messages-,340289637,SystemVerilog,UVM_Messages-,11,1,2021-03-21 07:06:08+00:00,[],None
160,https://github.com/deveshasnani/System_Verilog.git,2021-02-06 09:42:35+00:00,,0,deveshasnani/System_Verilog,336503300,SystemVerilog,System_Verilog,807,1,2022-06-03 09:31:54+00:00,[],None
161,https://github.com/HaoCheLee/I2C_Single_Master.git,2020-11-18 05:24:23+00:00,,0,HaoCheLee/I2C_Single_Master,313831782,SystemVerilog,I2C_Single_Master,18,1,2023-07-01 03:53:23+00:00,[],None
162,https://github.com/DavidDanD/PULPenix_AES.git,2020-11-29 06:53:26+00:00,PULPenix microcontroller with build-in AES engine,1,DavidDanD/PULPenix_AES,316893785,SystemVerilog,PULPenix_AES,48369,1,2021-05-24 04:46:16+00:00,[],None
163,https://github.com/taichi-ishitani/rtl_with_di.git,2020-12-05 14:46:01+00:00,RTL で依存性の注入（っぽいこと）をする,0,taichi-ishitani/rtl_with_di,318812551,SystemVerilog,rtl_with_di,2,1,2022-02-17 22:09:11+00:00,[],https://api.github.com/licenses/mit
164,https://github.com/saremshal/2D-DCT-8BIT.git,2020-11-20 20:13:19+00:00,,0,saremshal/2D-DCT-8BIT,314659327,SystemVerilog,2D-DCT-8BIT,7666,1,2023-03-08 10:55:13+00:00,[],None
165,https://github.com/taneroksuz/wolv-z3.git,2020-12-06 17:18:31+00:00,Wolv Z3 is a RISC-V CPU core,3,taneroksuz/wolv-z3,319088725,SystemVerilog,wolv-z3,490,1,2023-05-01 02:34:44+00:00,"['risc-v', 'hardware', 'rv32', 'cpu', 'core', 'fpga']",https://api.github.com/licenses/apache-2.0
166,https://github.com/palnikola1996/ASIC-Design-SHA3-256-Permutation-Engine.git,2021-02-14 21:06:10+00:00,SHA3-256 is an encryption algorithm. The project is designed using System Verilog and synthesised using Synopsys DC,0,palnikola1996/ASIC-Design-SHA3-256-Permutation-Engine,338901970,SystemVerilog,ASIC-Design-SHA3-256-Permutation-Engine,2324,1,2022-03-10 06:11:46+00:00,[],None
167,https://github.com/WasabiFan/pipelined-rv32i-core.git,2021-02-07 06:58:59+00:00,"A toy RISC-V processor design implemented in SystemVerilog, targeting FPGA.",0,WasabiFan/pipelined-rv32i-core,336723184,SystemVerilog,pipelined-rv32i-core,136,1,2022-03-01 01:12:17+00:00,[],None
168,https://github.com/VSHEV92/FIFO_MIG_BASED.git,2021-01-14 16:47:56+00:00,AXI-Stream Fifo на основе DDR памяти с использованием MIG c Native Interface,1,VSHEV92/FIFO_MIG_BASED,329676797,SystemVerilog,FIFO_MIG_BASED,8416,1,2023-03-16 02:53:05+00:00,[],None
169,https://github.com/teekamkhandelwal/adder_verification_example.git,2020-11-13 11:52:00+00:00,generator driver transection testbench classs,0,teekamkhandelwal/adder_verification_example,312561917,SystemVerilog,adder_verification_example,16,1,2020-11-24 12:09:44+00:00,[],None
170,https://github.com/ChristianKouris/bitcoin-hash.git,2020-12-27 05:28:55+00:00,A bitcoin hasher done in SystemVerilog,0,ChristianKouris/bitcoin-hash,324693555,SystemVerilog,bitcoin-hash,9742,1,2021-03-29 23:29:17+00:00,[],None
171,https://github.com/salsina/Digital-Logic-Design.git,2021-03-10 20:16:14+00:00,Gate Level Structures and Simple Functional Structures in Verilog,0,salsina/Digital-Logic-Design,346480490,SystemVerilog,Digital-Logic-Design,25,1,2021-07-04 21:15:00+00:00,[],None
172,https://github.com/dh73/appnotes_sandbox.git,2021-03-03 04:25:58+00:00,,0,dh73/appnotes_sandbox,344000606,SystemVerilog,appnotes_sandbox,8,1,2022-07-02 23:11:38+00:00,[],None
173,https://github.com/Ee1ks/FPGA-VGA-textmode.git,2021-02-24 21:05:13+00:00,Text mode VGA driver,0,Ee1ks/FPGA-VGA-textmode,342035447,SystemVerilog,FPGA-VGA-textmode,19630,1,2021-02-27 12:16:22+00:00,[],None
174,https://github.com/pragya77/SPI-protocol-using-UVM.git,2021-01-24 23:51:41+00:00,,0,pragya77/SPI-protocol-using-UVM,332583128,SystemVerilog,SPI-protocol-using-UVM,68,1,2022-05-10 11:23:07+00:00,[],None
175,https://github.com/Jun0951/32-bit-FPadder.git,2021-01-21 14:04:46+00:00,,0,Jun0951/32-bit-FPadder,331646432,SystemVerilog,32-bit-FPadder,5,1,2022-11-27 18:22:19+00:00,[],None
176,https://github.com/Aperture-Electronic/ARP.git,2020-12-16 13:49:50+00:00,,0,Aperture-Electronic/ARP,321996708,SystemVerilog,ARP,685,1,2022-06-18 22:26:22+00:00,[],None
177,https://github.com/quangphan2405/SystemVerilog.git,2021-01-01 11:53:36+00:00,A repo for SystemVerilog self-learning to explore new constructs and features of SystemVerilog compared to Verilog 2001,0,quangphan2405/SystemVerilog,325969740,SystemVerilog,SystemVerilog,1758,1,2022-01-01 11:24:00+00:00,[],None
178,https://github.com/salsina/Digital-Logic-Design-CA4.git,2021-03-10 20:25:02+00:00,"Registers, State machines, and Combinational packages in ""system verilog""",0,salsina/Digital-Logic-Design-CA4,346482527,SystemVerilog,Digital-Logic-Design-CA4,27,1,2021-07-04 21:15:04+00:00,[],None
179,https://github.com/neiman3/basys3battleship.git,2021-03-12 19:44:39+00:00,Battleship game for Basys 3 Xilinx FPGA board.,0,neiman3/basys3battleship,347179926,SystemVerilog,basys3battleship,83,1,2023-11-08 19:46:29+00:00,[],https://api.github.com/licenses/gpl-3.0
180,https://github.com/AnkitaMoholkar/Network-on-Chip-using-System-Verilog.git,2021-02-25 20:09:07+00:00,,2,AnkitaMoholkar/Network-on-Chip-using-System-Verilog,342366088,SystemVerilog,Network-on-Chip-using-System-Verilog,39,1,2021-02-25 20:12:31+00:00,[],None
181,https://github.com/gannoCal/JPEG-ish-SystemVerilog-Bistream-to-video.git,2021-01-28 17:49:52+00:00,"System Verilog Impliemetation: UART tranmission of bitsream to SRAM, bitstream convert to image mic14 JPEG(ish) format 30Hz",0,gannoCal/JPEG-ish-SystemVerilog-Bistream-to-video,333839409,SystemVerilog,JPEG-ish-SystemVerilog-Bistream-to-video,1014,1,2022-02-20 20:26:23+00:00,[],None
182,https://github.com/seanbrede/Single-Cycle-Processor.git,2021-01-07 01:18:05+00:00,"Implementation of a single-cycle processor in SystemVerilog, with an assembler and compiler, and three cryptographic programs that it can run",0,seanbrede/Single-Cycle-Processor,327469374,SystemVerilog,Single-Cycle-Processor,18280,1,2021-06-20 22:18:43+00:00,[],None
183,https://github.com/DesmondZuo/MIPS32bit_with_branch_prediction_UofT_ECE342.git,2021-03-17 08:57:18+00:00,,0,DesmondZuo/MIPS32bit_with_branch_prediction_UofT_ECE342,348641178,SystemVerilog,MIPS32bit_with_branch_prediction_UofT_ECE342,40,1,2021-06-22 00:47:21+00:00,[],https://api.github.com/licenses/mit
184,https://github.com/manani13/AHB_Lite.git,2021-02-11 07:33:32+00:00,,0,manani13/AHB_Lite,337959190,SystemVerilog,AHB_Lite,15,1,2021-05-06 02:03:15+00:00,[],None
185,https://github.com/cevero/cevero-ft-core.git,2021-03-11 22:18:40+00:00,CEVERO fault tolerant core,1,cevero/cevero-ft-core,346854613,SystemVerilog,cevero-ft-core,17,1,2021-06-15 22:36:39+00:00,[],None
186,https://github.com/shiban123/Code-Coverage-Projects.git,2020-11-17 02:57:15+00:00,,0,shiban123/Code-Coverage-Projects,313490569,SystemVerilog,Code-Coverage-Projects,17,1,2021-09-30 08:46:54+00:00,[],None
187,https://github.com/uwu64/videowavy.git,2021-03-27 21:51:11+00:00,VGA output on EBAZ4205,0,uwu64/videowavy,352184664,SystemVerilog,videowavy,3145,1,2021-06-26 07:42:19+00:00,[],None
188,https://github.com/aajibade1/MIPS-Processor.git,2020-11-23 20:56:31+00:00,Complete design of a 32-bit 5-stage pipelined MIPS  Processor with an L1 cache with snoopy coherency with achieved Gate-level Frequency of 53MHz and fully synthesised on an FPGA,0,aajibade1/MIPS-Processor,315438823,SystemVerilog,MIPS-Processor,1111,1,2024-03-22 12:12:27+00:00,"['computer-architecture', 'fpga', 'microprocessor', 'system-design', 'system-verilog']",None
189,https://github.com/teekamkhandelwal/adder_substractor.git,2020-11-21 14:36:05+00:00,adder and substractor both are controlled by different control signal,0,teekamkhandelwal/adder_substractor,314831640,SystemVerilog,adder_substractor,38,1,2020-11-24 12:49:31+00:00,[],https://api.github.com/licenses/gpl-3.0
190,https://github.com/taichi-ishitani/introduction_of_inside_operator.git,2020-11-26 13:54:13+00:00,inside 演算子の紹介,0,taichi-ishitani/introduction_of_inside_operator,316245820,SystemVerilog,introduction_of_inside_operator,2,1,2022-02-17 22:09:28+00:00,[],https://api.github.com/licenses/mit
191,https://github.com/py-five/pyfive-100.git,2021-01-31 17:43:58+00:00,Python Optimized Risc V Based SOC Design,0,py-five/pyfive-100,334717801,SystemVerilog,pyfive-100,759,1,2022-09-12 21:47:09+00:00,[],https://api.github.com/licenses/apache-2.0
192,https://github.com/sasakenUT/cpuex2020_core.git,2020-11-27 16:24:50+00:00,,0,sasakenUT/cpuex2020_core,316549626,SystemVerilog,cpuex2020_core,203,1,2023-10-06 00:21:07+00:00,[],None
193,https://github.com/megakun/FPGA-flappy-bird.git,2021-01-06 09:04:58+00:00,,0,megakun/FPGA-flappy-bird,327256652,SystemVerilog,FPGA-flappy-bird,30642,1,2022-05-18 18:45:19+00:00,[],None
194,https://github.com/shiban123/System-Verilog-Projects.git,2020-11-17 02:49:32+00:00,,0,shiban123/System-Verilog-Projects,313488928,SystemVerilog,System-Verilog-Projects,33,1,2021-09-30 08:46:39+00:00,[],None
195,https://github.com/Joseda8/Vector_ASIP.git,2020-11-18 23:51:09+00:00,Proyecto 2 del curso de Arquitectura de Computadores II del Instituto Tecnológico de Costa Rica,0,Joseda8/Vector_ASIP,314087357,SystemVerilog,Vector_ASIP,61,1,2022-06-22 21:52:35+00:00,[],None
196,https://github.com/MosqNet/CnnMaster.git,2021-03-16 08:31:44+00:00,,0,MosqNet/CnnMaster,348269585,SystemVerilog,CnnMaster,25376,1,2022-03-15 03:18:05+00:00,[],None
197,https://github.com/holdenQWER/pattern_wave_dump.git,2021-02-06 08:49:56+00:00,Use EDA tool dumping pattern wave. Just for fun.,2,holdenQWER/pattern_wave_dump,336494399,SystemVerilog,pattern_wave_dump,120,1,2023-06-27 13:58:02+00:00,[],https://api.github.com/licenses/apache-2.0
198,https://github.com/ECE510-2021-SPRING/PSU_RTL2GDS_28.git,2021-03-27 03:44:28+00:00,,1,ECE510-2021-SPRING/PSU_RTL2GDS_28,351974814,SystemVerilog,PSU_RTL2GDS_28,3896,1,2023-04-10 08:04:19+00:00,[],None
199,https://github.com/AnkitaMoholkar/UVM_Random_Numbers.git,2021-02-19 07:47:26+00:00,,0,AnkitaMoholkar/UVM_Random_Numbers,340295058,SystemVerilog,UVM_Random_Numbers,15,1,2021-03-21 07:06:09+00:00,[],None
200,https://github.com/KorotkiyEugene/fifo.git,2020-11-26 09:20:19+00:00,,0,KorotkiyEugene/fifo,316179959,SystemVerilog,fifo,2,1,2021-05-16 22:32:49+00:00,[],None
201,https://github.com/amirhossein-alizad/MIPS-Single-Cycle-Implementation.git,2021-02-08 18:00:58+00:00,"Single Cycle MIPS Processor implementation, Computer Assignment for Computer Architecture course in University of Tehran",0,amirhossein-alizad/MIPS-Single-Cycle-Implementation,337163473,SystemVerilog,MIPS-Single-Cycle-Implementation,23,1,2022-01-03 00:36:25+00:00,[],https://api.github.com/licenses/gpl-3.0
202,https://github.com/Joshaby/System-Verilog.git,2021-03-23 18:20:13+00:00,Atividades da disciplina Projeto de Sinais Digitais,0,Joshaby/System-Verilog,350814366,SystemVerilog,System-Verilog,1,1,2021-06-30 17:52:42+00:00,[],None
203,https://github.com/berkayarslan17/Digital-Design.git,2021-03-02 10:25:56+00:00,This repository contains basic examples of digital design that I've worked in ELM235 Digital Design Laboratory.,0,berkayarslan17/Digital-Design,343733796,SystemVerilog,Digital-Design,17,1,2023-05-07 16:45:11+00:00,[],None
204,https://github.com/m1nty/image-decompressor.git,2021-02-09 20:10:15+00:00,Hardware implementation of several types of digital signal processing algorithms under critical latency constraints,0,m1nty/image-decompressor,337523426,SystemVerilog,image-decompressor,2071,1,2021-07-29 15:42:59+00:00,[],None
205,https://github.com/EngRaff92/Memory_Prj.git,2020-12-22 19:22:41+00:00,SRAM project for Cache Coherency ,0,EngRaff92/Memory_Prj,323714242,SystemVerilog,Memory_Prj,8,1,2024-03-22 12:07:32+00:00,[],None
206,https://github.com/0n1shi/fpga-td4.git,2021-02-11 12:14:20+00:00,CPU running on FPGA,0,0n1shi/fpga-td4,338019625,SystemVerilog,fpga-td4,41,1,2021-05-12 02:34:13+00:00,[],https://api.github.com/licenses/mit
207,https://github.com/Ismael-G/Verilog_arithmetic_functions.git,2021-01-01 13:03:38+00:00,A repository of basic arithmetic functions created using system verilog,0,Ismael-G/Verilog_arithmetic_functions,325980503,SystemVerilog,Verilog_arithmetic_functions,6,1,2021-01-08 01:03:00+00:00,[],None
208,https://github.com/SteliosMouslech/VLSI-Design-Score-4-Game-Project.git,2021-03-16 12:09:28+00:00,"A repository containing the final project on 8th semester subject ""VLSI Design"" implementing the score 4 game on an FPGA with a panel display",1,SteliosMouslech/VLSI-Design-Score-4-Game-Project,348333356,SystemVerilog,VLSI-Design-Score-4-Game-Project,10,1,2021-03-22 22:27:11+00:00,[],None
209,https://github.com/hao310rui140326/my_uvm_demo.git,2021-02-04 03:11:42+00:00,my_uvm_demo,0,hao310rui140326/my_uvm_demo,335823740,SystemVerilog,my_uvm_demo,6954,1,2021-02-04 07:27:30+00:00,[],None
210,https://github.com/mehaltalukder/ALU_UVM_Project.git,2020-11-17 20:22:34+00:00,Verification of a 8-bit ALU design using UVM (Universal Verification Methodology) and SystemVerilog,0,mehaltalukder/ALU_UVM_Project,313733806,SystemVerilog,ALU_UVM_Project,9,1,2023-04-05 11:21:09+00:00,[],None
211,https://github.com/Purdue-SoCET/AFTx06_Public.git,2020-12-02 01:25:43+00:00,,0,Purdue-SoCET/AFTx06_Public,317714332,SystemVerilog,AFTx06_Public,274,1,2022-09-08 20:52:35+00:00,[],https://api.github.com/licenses/apache-2.0
212,https://github.com/gchinna/vutils_pkg.git,2020-11-28 02:30:26+00:00,SV & UVM verification utilities,0,gchinna/vutils_pkg,316641250,SystemVerilog,vutils_pkg,4,1,2022-05-04 04:34:58+00:00,[],https://api.github.com/licenses/mit
213,https://github.com/RamAIbot/Angular-E-Commerce.git,2020-11-29 15:12:02+00:00,"An Ecommerce website using Angular JS, Spring Boot, Hibernate and MySQL",0,RamAIbot/Angular-E-Commerce,316978317,SystemVerilog,Angular-E-Commerce,1503,1,2022-11-08 14:55:10+00:00,[],None
214,https://github.com/jaehank2/Pacman.git,2020-11-19 08:23:20+00:00,ECE385 Final Project,0,jaehank2/Pacman,314181708,SystemVerilog,Pacman,8367,1,2023-11-15 03:23:13+00:00,[],None
215,https://github.com/iremsvn/digital-design-labs.git,2021-03-25 19:26:02+00:00,,0,iremsvn/digital-design-labs,351551879,SystemVerilog,digital-design-labs,590,1,2024-02-11 03:38:46+00:00,['systemverilog'],https://api.github.com/licenses/mit
216,https://github.com/akerlund/VIP.git,2021-03-14 13:25:31+00:00,System Verilog VIP,0,akerlund/VIP,347643699,SystemVerilog,VIP,202,1,2021-10-25 20:59:35+00:00,[],https://api.github.com/licenses/gpl-3.0
217,https://github.com/akshaypsoni/filehandling_systemverilog.git,2021-03-08 05:29:09+00:00,Reading data from text file as a test vector inputs for verification.,0,akshaypsoni/filehandling_systemverilog,345541002,SystemVerilog,filehandling_systemverilog,16,1,2021-04-16 04:24:19+00:00,[],None
218,https://github.com/MorrisHsia/USB.git,2021-03-08 02:30:33+00:00,USB Full-Speed Bulk-Transfer Endpoint AHB-Lite SoC Module,0,MorrisHsia/USB,345507842,SystemVerilog,USB,960,1,2021-07-20 04:56:30+00:00,[],None
219,https://github.com/xiesicong/fpga_hdmi.git,2021-03-15 08:18:36+00:00,FPGA  HDMI驱动,0,xiesicong/fpga_hdmi,347888045,SystemVerilog,fpga_hdmi,100,1,2021-03-15 12:00:21+00:00,[],None
220,https://github.com/ece554-cryptocrew/bitcoin_accelerator.git,2021-03-16 23:33:53+00:00,,3,ece554-cryptocrew/bitcoin_accelerator,348522039,SystemVerilog,bitcoin_accelerator,11787,1,2021-05-11 09:01:12+00:00,[],None
221,https://github.com/Skyrim-667/uart_testcase.git,2021-02-08 05:28:02+00:00,UART interrupt test cases based on the UART block level environment from Verification Academy Coverage Cookbook,0,Skyrim-667/uart_testcase,336969835,SystemVerilog,uart_testcase,16201,1,2023-09-10 14:50:00+00:00,[],None
222,https://github.com/jay20162016/async.git,2021-02-18 14:21:23+00:00,Asynchronous Circuits!!!!!!!!!!!!!!,1,jay20162016/async,340073476,SystemVerilog,async,62,1,2023-07-20 16:32:29+00:00,[],https://api.github.com/licenses/gpl-3.0
223,https://github.com/vnksnkr/electronic-locker.git,2020-11-17 13:43:45+00:00,,0,vnksnkr/electronic-locker,313632493,SystemVerilog,electronic-locker,2146,1,2021-08-23 06:50:48+00:00,[],None
224,https://github.com/tenthousandfailures/formal_synthesis.git,2020-12-12 23:53:29+00:00,,0,tenthousandfailures/formal_synthesis,320948194,SystemVerilog,formal_synthesis,21,1,2024-02-07 09:03:42+00:00,[],https://api.github.com/licenses/gpl-3.0
225,https://github.com/Joseda8/ASIP_Vector.git,2020-11-18 23:45:21+00:00,Esta es la versión B del segundo proyecto de Arquitectura de Computadores II del ITCR,0,Joseda8/ASIP_Vector,314086479,SystemVerilog,ASIP_Vector,49,1,2022-06-22 21:51:46+00:00,[],None
226,https://github.com/ErickOF/CE4202-Oscilloscope-and-Digital-Filtering.git,2020-11-30 04:33:06+00:00,,0,ErickOF/CE4202-Oscilloscope-and-Digital-Filtering,317111421,SystemVerilog,CE4202-Oscilloscope-and-Digital-Filtering,176,1,2023-08-25 00:15:30+00:00,"['matlab', 'python3', 'systemverilog', 'verilog']",None
227,https://github.com/Phyteon/RISCV_IPcore.git,2021-03-29 15:42:00+00:00,This repository contains files associated with the development of RISC-V IP core,1,Phyteon/RISCV_IPcore,352696335,SystemVerilog,RISCV_IPcore,7984,1,2022-01-10 21:20:25+00:00,[],https://api.github.com/licenses/mit
228,https://github.com/berkayaktunc/Multi-Cycle-MIPS-Processor-Design.git,2021-01-21 19:52:58+00:00,,1,berkayaktunc/Multi-Cycle-MIPS-Processor-Design,331738213,SystemVerilog,Multi-Cycle-MIPS-Processor-Design,6,1,2021-01-21 20:20:09+00:00,[],None
229,https://github.com/ChufanSuki/mips_cpu.git,2020-11-16 10:56:32+00:00,My Computer Architecture Course Project in CQU,1,ChufanSuki/mips_cpu,313272670,SystemVerilog,mips_cpu,31934,1,2020-11-22 10:53:04+00:00,"['computer-architecture', 'chongqing-university', 'cqu', 'pipeline', 'branch-prediction', 'cache']",None
230,https://github.com/salsina/Digital-Logic-Design-CA3.git,2021-03-10 20:21:33+00:00,Combinational packages and their gate-level equivalent,0,salsina/Digital-Logic-Design-CA3,346481709,SystemVerilog,Digital-Logic-Design-CA3,78,1,2021-07-04 21:15:05+00:00,[],None
231,https://github.com/mfkiwl/Configurable-Systolic-Systemverilog.git,2021-03-28 08:33:20+00:00,Systolic Implementation,1,mfkiwl/Configurable-Systolic-Systemverilog,352278650,,Configurable-Systolic-Systemverilog,36982,1,2023-04-17 23:01:53+00:00,[],None
232,https://github.com/Soham-coder/Wallace_tree_mult.git,2020-12-12 12:53:54+00:00,Parameterized High Speed Unsigned Wallace Tree Multiplier ,0,Soham-coder/Wallace_tree_mult,320830486,SystemVerilog,Wallace_tree_mult,3,1,2022-06-21 03:32:26+00:00,[],None
233,https://github.com/Skyrim-667/Simple_UVM.git,2021-02-06 02:40:49+00:00,a simple and intuitive uvm verification platform,0,Skyrim-667/Simple_UVM,336439770,SystemVerilog,Simple_UVM,33,1,2021-02-28 08:09:17+00:00,[],None
234,https://github.com/Sibakumarpanda/Fundamentals-of-System-Verilog-Part-1.git,2021-02-07 09:25:34+00:00,"Aim to explore the System Verilog concepts with Hands on , which could be used for verification",0,Sibakumarpanda/Fundamentals-of-System-Verilog-Part-1,336748288,SystemVerilog,Fundamentals-of-System-Verilog-Part-1,1,1,2021-05-14 17:26:10+00:00,[],None
235,https://github.com/jaytlang/networkedlasers.git,2020-11-13 20:21:29+00:00,Hardware Networking + Laser Projector,0,jaytlang/networkedlasers,312675390,SystemVerilog,networkedlasers,94000,1,2023-01-25 21:18:55+00:00,[],
236,https://github.com/colinpate/fpga_vr_blockmatching.git,2020-12-28 02:18:59+00:00,,3,colinpate/fpga_vr_blockmatching,324891236,SystemVerilog,fpga_vr_blockmatching,369,1,2023-08-28 03:37:55+00:00,[],None
237,https://github.com/Almotaek/Reaction_Timer_Display.git,2020-12-27 12:41:44+00:00,"Calculates, displays human reaction time to a flashing light.",0,Almotaek/Reaction_Timer_Display,324759199,SystemVerilog,Reaction_Timer_Display,11,0,2020-12-27 12:49:49+00:00,[],None
238,https://github.com/Raj21-21/Asynchronous-fifo-Design-and-verification.git,2021-01-12 05:50:32+00:00,,0,Raj21-21/Asynchronous-fifo-Design-and-verification,328885842,SystemVerilog,Asynchronous-fifo-Design-and-verification,12,0,2021-01-13 03:26:00+00:00,[],https://api.github.com/licenses/mit
239,https://github.com/dakshjoshi02/Functional-Verification.git,2021-03-03 16:17:31+00:00,,0,dakshjoshi02/Functional-Verification,344187576,SystemVerilog,Functional-Verification,2,0,2021-03-03 16:22:29+00:00,[],None
240,https://github.com/AlexanderLuasan/ProgPoW_lcisc0.1.git,2021-03-26 07:58:33+00:00,lcsic0.1 progpow version,0,AlexanderLuasan/ProgPoW_lcisc0.1,351704826,SystemVerilog,ProgPoW_lcisc0.1,379,0,2021-03-26 09:41:41+00:00,[],None
241,https://github.com/rag1404/signed_unsignedness.git,2021-01-03 19:51:54+00:00,A quick overview of System verilog Signed and Unsignedness in Arithmetic operations,0,rag1404/signed_unsignedness,326488890,SystemVerilog,signed_unsignedness,2,0,2021-01-03 19:54:39+00:00,[],None
242,https://github.com/Lampro-Mellon/LEC_RTL.git,2021-01-04 12:43:08+00:00,This constains the RTL to check with SweRV-EL2 for LEC,2,Lampro-Mellon/LEC_RTL,326680462,SystemVerilog,LEC_RTL,5792,0,2021-03-29 06:05:18+00:00,[],None
243,https://github.com/naftali10/Single-Cycle-MIPS.git,2021-01-08 07:33:50+00:00,A System Verilog processor design of a single cycle MIPS architecture,0,naftali10/Single-Cycle-MIPS,327831068,SystemVerilog,Single-Cycle-MIPS,56,0,2021-01-16 17:13:01+00:00,"['verilog-processor', 'architecture', 'microarchitecture', 'mips-architecture', 'mips']",None
244,https://github.com/dig025/lucas_processor.git,2021-02-20 01:02:45+00:00,9bit processor for cse 141L,0,dig025/lucas_processor,340528357,SystemVerilog,lucas_processor,30883,0,2021-03-29 20:20:25+00:00,[],None
245,https://github.com/SilverArrow009/uart_tb.git,2021-02-22 17:37:00+00:00,,0,SilverArrow009/uart_tb,341283502,SystemVerilog,uart_tb,26,0,2021-03-01 23:54:48+00:00,[],https://api.github.com/licenses/gpl-3.0
246,https://github.com/andreidemidov/TSC_Lab.git,2021-02-24 16:25:49+00:00,,0,andreidemidov/TSC_Lab,341961841,SystemVerilog,TSC_Lab,8368,0,2021-04-15 16:36:46+00:00,[],None
247,https://github.com/ryaanluke/Bacarat_Game.git,2021-02-08 19:22:08+00:00,Full Bacarat Card game in SystemVerilog,0,ryaanluke/Bacarat_Game,337184703,SystemVerilog,Bacarat_Game,2722,0,2021-02-08 19:27:51+00:00,[],None
248,https://github.com/alainlou/quicksilicon.git,2021-02-13 18:42:04+00:00,,0,alainlou/quicksilicon,338643749,SystemVerilog,quicksilicon,7,0,2021-08-28 01:56:38+00:00,[],None
249,https://github.com/ravil99/4_port_Ethernet_Switch.git,2021-02-08 14:20:09+00:00,,0,ravil99/4_port_Ethernet_Switch,337100124,SystemVerilog,4_port_Ethernet_Switch,1783,0,2022-11-21 16:22:54+00:00,[],None
250,https://github.com/scole02/CPE333.git,2021-02-04 18:19:42+00:00,,0,scole02/CPE333,336044128,SystemVerilog,CPE333,34,0,2021-02-04 18:45:36+00:00,[],None
251,https://github.com/adanpartidajr/FSM.git,2021-02-27 07:04:10+00:00,System Verilog code for FSM physically validated on DE10-Lite FPGA,0,adanpartidajr/FSM,342793647,SystemVerilog,FSM,2,0,2021-02-27 07:05:29+00:00,"['fsm', 'verilog', 'systemverilog', 'fpga']",None
252,https://github.com/usman1515/Matrix-Multiplier.git,2020-11-15 19:35:58+00:00,,0,usman1515/Matrix-Multiplier,313108275,SystemVerilog,Matrix-Multiplier,39,0,2021-01-16 12:20:09+00:00,"['verilog-hdl', 'verilog', 'gtkwave', 'icarus-verilog', 'modelsim']",None
253,https://github.com/annamcole/ECE_551.git,2020-11-18 15:59:46+00:00,UW-Madison ECE 551 Fall 2020,0,annamcole/ECE_551,313984953,SystemVerilog,ECE_551,66,0,2023-01-28 09:51:05+00:00,[],None
254,https://github.com/niklit-dev/HLD_projects.git,2020-11-21 13:40:14+00:00,,0,niklit-dev/HLD_projects,314820690,SystemVerilog,HLD_projects,58,0,2020-11-24 06:31:47+00:00,[],None
255,https://github.com/ARF1939261764/FPGA-UDP.git,2020-11-21 13:20:22+00:00,"FPGA实现ARP,ICMP,UDP协议",0,ARF1939261764/FPGA-UDP,314816758,SystemVerilog,FPGA-UDP,3,0,2020-11-21 13:24:48+00:00,[],None
256,https://github.com/fpozzana/UART.git,2020-12-05 18:05:06+00:00,implementation of a UART peripheral,0,fpozzana/UART,318855592,SystemVerilog,UART,14,0,2020-12-08 14:21:31+00:00,[],None
257,https://github.com/ramacha7/ECE437.git,2020-12-06 21:59:58+00:00,"Single Cycle, Pipelined, Pipelined with Caches, Multicore CPU designs",0,ramacha7/ECE437,319140390,SystemVerilog,ECE437,111,0,2021-06-23 03:20:47+00:00,[],None
258,https://github.com/Ki11erCoffee/ECE-111-Final-Project.git,2021-03-20 07:03:27+00:00,,0,Ki11erCoffee/ECE-111-Final-Project,349652539,SystemVerilog,ECE-111-Final-Project,12640,0,2021-10-13 20:12:19+00:00,[],None
259,https://github.com/ShaowenWang/UW_EE271.git,2021-03-15 07:48:56+00:00,"This is UW winter 2021 EE271 file. For reference only, good luck",0,ShaowenWang/UW_EE271,347880195,SystemVerilog,UW_EE271,59,0,2021-03-16 19:18:04+00:00,[],None
260,https://github.com/byungwoo733/My_Verilog.git,2021-03-04 01:05:44+00:00,Verilog Test Programming,0,byungwoo733/My_Verilog,344309178,SystemVerilog,My_Verilog,75,0,2022-01-04 02:10:03+00:00,[],https://api.github.com/licenses/mit
261,https://github.com/cam-rod/simon-says.git,2020-12-26 19:08:39+00:00,Simon on a DE1-SoC with Cyclone V FPGA.,0,cam-rod/simon-says,324618737,SystemVerilog,simon-says,369,0,2023-12-19 17:28:54+00:00,"['verilog', 'systemverilog']",https://api.github.com/licenses/gpl-3.0
262,https://github.com/curoles/tachyon.git,2021-02-23 18:35:23+00:00,,0,curoles/tachyon,341652635,SystemVerilog,tachyon,58,0,2021-03-10 02:38:23+00:00,[],https://api.github.com/licenses/mit
263,https://github.com/vparik6/MIPS_Pipelined.git,2021-02-25 04:41:25+00:00,This is a group project for ECE 571 course at PSU.,0,vparik6/MIPS_Pipelined,342124888,SystemVerilog,MIPS_Pipelined,4443,0,2021-09-22 21:37:54+00:00,[],None
264,https://github.com/svenka3/vw_enet_dv.git,2021-02-21 16:25:14+00:00,,1,svenka3/vw_enet_dv,340946792,SystemVerilog,vw_enet_dv,8,0,2021-02-21 16:46:49+00:00,[],
265,https://github.com/gavinspoiler/learngit.git,2021-02-23 05:01:22+00:00,,0,gavinspoiler/learngit,341434095,SystemVerilog,learngit,1,0,2021-02-23 07:24:40+00:00,[],None
266,https://github.com/Matteo-Bovino/Multicore-Processor.git,2021-02-01 11:54:55+00:00,Final year project - 306AAE - Individual Project Realisation,0,Matteo-Bovino/Multicore-Processor,334933958,SystemVerilog,Multicore-Processor,22880,0,2022-11-06 20:51:42+00:00,[],None
267,https://github.com/rag1404/uvm_events.git,2021-01-30 07:17:46+00:00,A program to demonstrate different kinds of uvm_events !,0,rag1404/uvm_events,334353040,SystemVerilog,uvm_events,6,0,2021-01-30 07:32:31+00:00,[],None
268,https://github.com/masonw19/ARC4-Decryption-Circuit.git,2021-01-10 23:53:23+00:00,This is an ARC4 Decryption Circuit made with SystemVerilog and the use of on-chip memories,0,masonw19/ARC4-Decryption-Circuit,328504028,SystemVerilog,ARC4-Decryption-Circuit,595,0,2021-07-31 22:44:36+00:00,[],None
269,https://github.com/zzhang681/proj272.git,2020-11-16 22:31:00+00:00,,0,zzhang681/proj272,313443356,SystemVerilog,proj272,6938,0,2020-11-24 07:50:08+00:00,[],None
270,https://github.com/Kiminje/Graduate.git,2021-01-07 18:15:44+00:00,,0,Kiminje/Graduate,327691034,SystemVerilog,Graduate,5331,0,2021-01-19 20:27:50+00:00,[],None
271,https://github.com/qian-gu/RVAnt.git,2021-01-12 03:22:46+00:00,:ant: RVAnt is a minimal RISC-V core for learning purpose.,0,qian-gu/RVAnt,328859864,SystemVerilog,RVAnt,93,0,2022-01-21 07:34:06+00:00,"['risc-v', 'core']",https://api.github.com/licenses/mit
272,https://github.com/rag1404/uvm_tlm_ports_part3.git,2021-01-16 04:37:48+00:00,Sending transactions to UVM components using tlm fifo,0,rag1404/uvm_tlm_ports_part3,330084960,SystemVerilog,uvm_tlm_ports_part3,2,0,2021-01-16 04:40:09+00:00,[],None
273,https://github.com/MeriemLil/DT2.git,2021-01-18 18:07:23+00:00,Digital Techniques 2,0,MeriemLil/DT2,330748659,SystemVerilog,DT2,55,0,2021-01-18 18:11:13+00:00,[],None
274,https://github.com/tirolinko/fpadder.git,2021-02-10 23:19:49+00:00,Floating point adder HDL implementation for Digital System Design coursework,0,tirolinko/fpadder,337880615,SystemVerilog,fpadder,3,0,2021-03-03 20:07:40+00:00,[],None
275,https://github.com/michael-platzer/ibex-soc.git,2021-03-01 15:55:20+00:00,Minimal SoC for the Ibex Core,1,michael-platzer/ibex-soc,343472468,SystemVerilog,ibex-soc,21,0,2021-05-19 14:37:02+00:00,[],None
276,https://github.com/Luke-Jacobs/Lab-5-Code.git,2021-03-02 18:18:30+00:00,,0,Luke-Jacobs/Lab-5-Code,343870279,SystemVerilog,Lab-5-Code,62,0,2021-03-11 23:15:47+00:00,[],None
277,https://github.com/jmcguigs/RISCV_MCU.git,2021-03-23 01:18:03+00:00,A 32-bit RISC-V microcontroller made in systemVerilog,0,jmcguigs/RISCV_MCU,350540088,SystemVerilog,RISCV_MCU,8,0,2021-03-23 05:48:20+00:00,[],https://api.github.com/licenses/mit
278,https://github.com/dclab02/lab3.git,2021-03-26 03:14:40+00:00,digital recorder,0,dclab02/lab3,351647574,SystemVerilog,lab3,320,0,2021-09-30 05:27:20+00:00,[],None
279,https://github.com/chelsea10bqr/Digital-Systems-Laboratory.git,2021-03-26 08:11:52+00:00,FPGA and SoC ,0,chelsea10bqr/Digital-Systems-Laboratory,351708169,SystemVerilog,Digital-Systems-Laboratory,8422,0,2021-03-26 13:21:59+00:00,[],None
280,https://github.com/AlexanderLuasan/KMeans_lcisc0.1.git,2021-03-26 08:05:42+00:00,L-CISC 0.1 Kmeans ,0,AlexanderLuasan/KMeans_lcisc0.1,351706710,SystemVerilog,KMeans_lcisc0.1,1001,0,2021-03-27 06:10:59+00:00,[],None
281,https://github.com/jaruial1/TAREA3.git,2020-11-22 18:23:09+00:00,,0,jaruial1/TAREA3,315104096,SystemVerilog,TAREA3,2,0,2020-11-22 19:04:52+00:00,[],None
282,https://github.com/sachinmodi51/AMBA-APB-PROTOCOL.git,2020-12-02 13:02:12+00:00,,0,sachinmodi51/AMBA-APB-PROTOCOL,317863781,SystemVerilog,AMBA-APB-PROTOCOL,31,0,2021-01-22 19:17:11+00:00,[],None
283,https://github.com/s5suzuki/autd3-fpga-v1.git,2020-12-07 23:26:13+00:00,,0,s5suzuki/autd3-fpga-v1,319470533,SystemVerilog,autd3-fpga-v1,893,0,2023-01-27 20:25:49+00:00,[],https://api.github.com/licenses/mit
284,https://github.com/Ln-Yangzl/Finite-State-Machine-system-verlog.git,2020-12-22 14:30:59+00:00,,0,Ln-Yangzl/Finite-State-Machine-system-verlog,323649494,SystemVerilog,Finite-State-Machine-system-verlog,173,0,2020-12-22 15:13:13+00:00,[],None
285,https://github.com/nkasd/Verilog-trials.git,2020-12-11 17:57:47+00:00,,0,nkasd/Verilog-trials,320646479,SystemVerilog,Verilog-trials,1,0,2020-12-11 20:16:45+00:00,[],None
286,https://github.com/hamidsalemi77/CAL_ARM.git,2020-12-10 09:01:24+00:00,,0,hamidsalemi77/CAL_ARM,320215504,SystemVerilog,CAL_ARM,184,0,2020-12-11 21:58:20+00:00,[],None
287,https://github.com/Tauhoo/neural-burning.git,2020-11-13 08:36:03+00:00,The architecture for neural network computing.,0,Tauhoo/neural-burning,312518361,SystemVerilog,neural-burning,54002,0,2021-04-18 08:55:20+00:00,[],None
288,https://github.com/uop2020-advanced-digital/fpga-sudoku-player.git,2020-12-02 05:00:07+00:00,"A sudoku player implemented on an Intel Cyclone FPGA board. Sudoku inputs are registered via ps2 keyboard connection, and the game is displayed via VGA.",0,uop2020-advanced-digital/fpga-sudoku-player,317754775,SystemVerilog,fpga-sudoku-player,464,0,2020-12-10 07:18:20+00:00,[],None
289,https://github.com/mandebi/FPGA_NoC.git,2021-03-17 02:03:32+00:00,,0,mandebi/FPGA_NoC,348550441,SystemVerilog,FPGA_NoC,16,0,2021-03-19 06:09:04+00:00,[],None
290,https://github.com/GeorgeKef-School-Projects/edge_detection.git,2021-03-29 18:56:19+00:00,In this project we implement an edge detection algorithm that consists of 2 steps. The algorithm is base on cellular automata. In the repository you can also find a detailed report. Co-Authors: Giorgos Kefalas and Dimitris Karagiannis Karousos,0,GeorgeKef-School-Projects/edge_detection,352753254,SystemVerilog,edge_detection,294,0,2022-05-24 17:08:18+00:00,[],None
291,https://github.com/dclab02/lab1.git,2021-03-04 03:03:59+00:00,This is dclab team02 lab1,0,dclab02/lab1,344332788,SystemVerilog,lab1,685,0,2021-09-30 05:26:30+00:00,[],None
292,https://github.com/ggrecu24/TSC_lab.git,2021-02-25 14:30:10+00:00,,0,ggrecu24/TSC_lab,342271497,SystemVerilog,TSC_lab,8714,0,2021-04-22 13:40:24+00:00,[],None
293,https://github.com/oz-matt/cdr_rnm.git,2021-03-17 00:16:25+00:00,sv-rnm behavioral sim of a pcie cdr,0,oz-matt/cdr_rnm,348529571,SystemVerilog,cdr_rnm,181,0,2021-04-21 02:56:38+00:00,[],None
294,https://github.com/markokujundzic/uvm.git,2021-02-10 17:23:45+00:00,UVM framework used for testing finite state machine DUT,0,markokujundzic/uvm,337798593,SystemVerilog,uvm,6,0,2021-02-10 20:20:43+00:00,[],None
295,https://github.com/ryaanluke/Fillscreen_Circle_ReuleauxTriangle.git,2021-02-08 19:31:52+00:00,"A series of SystemVerilog files for filling a VGA screen with a colour, creating a circle, and creating a reuleaux triangle. ",0,ryaanluke/Fillscreen_Circle_ReuleauxTriangle,337187139,SystemVerilog,Fillscreen_Circle_ReuleauxTriangle,1081,0,2021-02-08 19:40:02+00:00,[],None
296,https://github.com/oz-matt/ozphy.git,2021-02-05 16:51:02+00:00,,0,oz-matt/ozphy,336332329,SystemVerilog,ozphy,59,0,2021-02-15 08:05:58+00:00,[],None
297,https://github.com/mfkiwl/DDR3_PRESI.git,2021-02-07 07:00:19+00:00,,0,mfkiwl/DDR3_PRESI,336723401,,DDR3_PRESI,2656,0,2021-02-07 07:00:20+00:00,[],None
298,https://github.com/BourgeoisLenin/Team10Minilab5.git,2021-02-12 12:54:52+00:00,,0,BourgeoisLenin/Team10Minilab5,338319078,SystemVerilog,Team10Minilab5,311,0,2021-02-12 13:31:10+00:00,[],None
299,https://github.com/jinilpatel25/RC4.git,2021-03-10 01:26:43+00:00,"In this lab, I got experience creating a design that contains several on-chip memories. This circuit is an RC4 Decryption circuit which is a popular stream cypher, and was widely used in encrypting web traffic among other uses. RC4 is an important algorithm and provides a good vehicle for studying digital circuits that made  extensive use of on-chip memory. It also provides a basis for implementing some of these variants that are more secure.",0,jinilpatel25/RC4,346194488,SystemVerilog,RC4,56996,0,2022-01-08 22:04:25+00:00,[],None
300,https://github.com/surendra55555/uart.git,2021-03-26 11:15:32+00:00,,0,surendra55555/uart,351756017,SystemVerilog,uart,200,0,2021-04-04 12:24:31+00:00,[],None
301,https://github.com/surendra55555/Ring_counter.git,2021-03-26 11:49:09+00:00,,0,surendra55555/Ring_counter,351764466,SystemVerilog,Ring_counter,2,0,2021-04-04 12:41:45+00:00,[],None
302,https://github.com/vien20010/FloatingPointIEEE754.git,2020-12-23 07:06:57+00:00,,1,vien20010/FloatingPointIEEE754,323829192,SystemVerilog,FloatingPointIEEE754,12864,0,2021-01-03 18:43:51+00:00,[],None
303,https://github.com/saipra99/SPI_Project.git,2020-12-01 20:46:55+00:00,,0,saipra99/SPI_Project,317663638,SystemVerilog,SPI_Project,11,0,2021-03-01 17:27:09+00:00,[],https://api.github.com/licenses/apache-2.0
304,https://github.com/cyanbx/WriteBuffer.git,2020-12-24 08:12:42+00:00,,0,cyanbx/WriteBuffer,324103178,SystemVerilog,WriteBuffer,112,0,2020-12-25 11:32:51+00:00,[],None
305,https://github.com/goshuh/verif.git,2021-01-10 22:11:19+00:00,Simple IC verification environment,0,goshuh/verif,328489686,SystemVerilog,verif,5,0,2022-02-25 00:36:32+00:00,[],None
306,https://github.com/rag1404/uvm_objection_mechanism.svh.git,2021-01-21 07:31:23+00:00,This program is about UVM objections and Drain time !! ,0,rag1404/uvm_objection_mechanism.svh,331549843,SystemVerilog,uvm_objection_mechanism.svh,7,0,2021-01-22 03:05:31+00:00,[],None
307,https://github.com/tiagouergs/AtariProj.git,2021-01-17 20:33:10+00:00,,0,tiagouergs/AtariProj,330481052,SystemVerilog,AtariProj,363,0,2021-01-17 20:49:59+00:00,[],None
308,https://github.com/eestevez123/ece554_miniproject.git,2021-01-29 01:47:22+00:00,,0,eestevez123/ece554_miniproject,334007022,SystemVerilog,ece554_miniproject,502,0,2021-01-29 04:08:46+00:00,[],None
309,https://github.com/pragya77/APB-protocol-using-UVM.git,2021-01-30 19:59:08+00:00,,0,pragya77/APB-protocol-using-UVM,334499864,SystemVerilog,APB-protocol-using-UVM,9,0,2021-01-30 21:16:58+00:00,[],None
310,https://github.com/ybbekele/LC3-Verification.git,2021-02-02 15:23:06+00:00,This project deals with the verification of the data and control path of an unpipelined LC-3 microcontroller with a reduced instruction set.,0,ybbekele/LC3-Verification,335333096,SystemVerilog,LC3-Verification,36,0,2021-04-12 19:06:11+00:00,[],None
311,https://github.com/cryptoKay8/learninggit.git,2021-01-28 04:36:19+00:00,Experimenting here,0,cryptoKay8/learninggit,333646471,SystemVerilog,learninggit,1,0,2021-01-28 04:48:38+00:00,[],None
312,https://github.com/tejakunchavenkata/processorDesigns.git,2020-12-31 05:37:42+00:00,,0,tejakunchavenkata/processorDesigns,325723160,SystemVerilog,processorDesigns,1,0,2020-12-31 06:50:35+00:00,[],None
313,https://github.com/evgeniyBolnov/PID.git,2020-12-21 07:47:56+00:00,,0,evgeniyBolnov/PID,323266344,SystemVerilog,PID,132,0,2023-01-22 10:58:18+00:00,[],None
314,https://github.com/Songchun-Li/ee478_16_bit_arm_cpu_w_aes_accelerator.git,2020-11-24 21:20:58+00:00,VLSI capstone project: 16-bit 5-Stage Pipelined ARM Processor w/ AES128 Crypto Accelerator ,0,Songchun-Li/ee478_16_bit_arm_cpu_w_aes_accelerator,315755269,SystemVerilog,ee478_16_bit_arm_cpu_w_aes_accelerator,38,0,2020-11-24 21:59:21+00:00,[],None
315,https://github.com/acsalas/mips.git,2020-12-02 20:06:56+00:00,Version of mips processor,0,acsalas/mips,317978032,SystemVerilog,mips,1119,0,2020-12-02 20:11:45+00:00,[],None
316,https://github.com/berkyildiz3/Digital-Design.git,2020-11-29 09:19:32+00:00,Labs and project of CS 223,0,berkyildiz3/Digital-Design,316915142,SystemVerilog,Digital-Design,8668,0,2020-11-29 09:40:45+00:00,[],None
317,https://github.com/EmiSancho/CE4301-Proyecto1.git,2020-11-14 01:29:40+00:00,,0,EmiSancho/CE4301-Proyecto1,312722254,SystemVerilog,CE4301-Proyecto1,2267,0,2020-11-18 04:34:39+00:00,[],None
318,https://github.com/sriyerg/systemverilog.git,2020-12-16 03:37:36+00:00,SystemVerilog language examples,0,sriyerg/systemverilog,321858734,SystemVerilog,systemverilog,12,0,2023-12-16 12:01:51+00:00,[],https://api.github.com/licenses/apache-2.0
319,https://github.com/ifd3f/OtterMCU.git,2021-01-22 18:31:20+00:00,,0,ifd3f/OtterMCU,332030798,SystemVerilog,OtterMCU,469,0,2021-11-21 22:53:00+00:00,[],None
320,https://github.com/jayaprasannakomma/Ahb-lite-design-verification-emulation.git,2021-01-09 14:27:35+00:00,,0,jayaprasannakomma/Ahb-lite-design-verification-emulation,328173160,,Ahb-lite-design-verification-emulation,2524,0,2021-01-09 14:27:37+00:00,[],None
321,https://github.com/PhilippNickel/onchip_serial_interface.git,2021-01-27 12:18:41+00:00,small on chip serial interface,0,PhilippNickel/onchip_serial_interface,333410469,SystemVerilog,onchip_serial_interface,48,0,2021-04-16 15:02:26+00:00,[],None
322,https://github.com/Luke-Jacobs/Lab-4-Code.git,2021-02-23 20:36:36+00:00,,0,Luke-Jacobs/Lab-4-Code,341683136,SystemVerilog,Lab-4-Code,20,0,2021-02-26 22:25:03+00:00,[],None
323,https://github.com/ahmadmhasann/mips-processor.git,2021-02-24 00:31:49+00:00,Implementation of MIPS Single Cycle in System Verilog,0,ahmadmhasann/mips-processor,341731075,SystemVerilog,mips-processor,22,0,2021-02-24 00:32:30+00:00,[],None
324,https://github.com/braul98/TSC_Lab.git,2021-02-24 16:24:52+00:00,,0,braul98/TSC_Lab,341961546,SystemVerilog,TSC_Lab,8278,0,2021-04-22 09:56:42+00:00,[],None
325,https://github.com/Jefryruiz/Proyecto2_verificacion.git,2020-11-16 22:41:26+00:00,,0,Jefryruiz/Proyecto2_verificacion,313445233,SystemVerilog,Proyecto2_verificacion,80,0,2020-12-10 06:07:00+00:00,[],None
326,https://github.com/shrutimathurvlsi/repo_2.git,2020-11-17 02:58:10+00:00,,0,shrutimathurvlsi/repo_2,313490738,SystemVerilog,repo_2,2,0,2020-11-17 03:07:08+00:00,[],None
327,https://github.com/nightowlish/Stopwatch.git,2020-12-09 12:34:01+00:00,Verilog clock cycle based stopwatch,0,nightowlish/Stopwatch,319951144,SystemVerilog,Stopwatch,2,0,2022-01-30 22:39:48+00:00,[],None
328,https://github.com/wesleywesley/uvm_train.git,2020-12-11 03:11:20+00:00,,0,wesleywesley/uvm_train,320453375,SystemVerilog,uvm_train,38,0,2021-01-06 05:48:19+00:00,[],None
329,https://github.com/strear/m1fpga-s.git,2020-12-14 11:32:12+00:00,Martin 1 SSTV modulator for Nexys 4 DDR FPGA board,0,strear/m1fpga-s,321327828,SystemVerilog,m1fpga-s,3403,0,2020-12-14 11:45:21+00:00,[],https://api.github.com/licenses/mit
330,https://github.com/vinnyfrijolini/SIWA_FPM.git,2020-12-16 15:47:07+00:00,"Radix-4 and Radix-8 single-precision, floating-point multipliers.",0,vinnyfrijolini/SIWA_FPM,322028592,SystemVerilog,SIWA_FPM,170,0,2021-03-20 15:16:44+00:00,[],https://api.github.com/licenses/gpl-3.0
331,https://github.com/ritik11ritik/TicTacToe-Using-Verilog.git,2020-12-27 17:53:50+00:00,,0,ritik11ritik/TicTacToe-Using-Verilog,324817801,SystemVerilog,TicTacToe-Using-Verilog,208,0,2021-01-03 16:40:38+00:00,[],None
332,https://github.com/rag1404/Array-reduction-operator---Sum-.git,2020-12-26 18:16:02+00:00,Array reduction operator Sum - System verilog,0,rag1404/Array-reduction-operator---Sum-,324610898,SystemVerilog,Array-reduction-operator---Sum-,2,0,2020-12-26 18:18:28+00:00,[],None
333,https://github.com/zaznov/Harris-and-Harris-HDL-tasks.git,2021-03-23 13:33:45+00:00,"Some solutions of tasks from the book ""Digital Design and Computer Architecture"" by Harris and Harris",0,zaznov/Harris-and-Harris-HDL-tasks,350724792,SystemVerilog,Harris-and-Harris-HDL-tasks,2311,0,2021-03-30 05:48:45+00:00,[],None
334,https://github.com/ErikFanderson/cookiecutter-vlog-block.git,2021-01-18 18:52:11+00:00,"Cookiecutter repo fro creating verilog blocks w/ basic UVM tesbench. This ""block"" should hold both RTL and testbench",0,ErikFanderson/cookiecutter-vlog-block,330758733,SystemVerilog,cookiecutter-vlog-block,8,0,2021-01-18 18:52:52+00:00,[],https://api.github.com/licenses/mit
335,https://github.com/AgustinDS/Proyecto3_Verificacion.git,2021-01-05 03:21:51+00:00,Test de un multiplicador combinacional con UVM,0,AgustinDS/Proyecto3_Verificacion,326873912,SystemVerilog,Proyecto3_Verificacion,412,0,2021-01-21 06:18:59+00:00,[],None
336,https://github.com/andrewh265/FlappyBird.git,2021-01-05 23:19:22+00:00,Flappy bird simulation using systemverilog on FPGA board and 16x16 matrix,0,andrewh265/FlappyBird,327144156,SystemVerilog,FlappyBird,31,0,2021-01-05 23:23:10+00:00,[],None
337,https://github.com/PowerSh0t/CrossBar2x2.git,2021-01-15 06:27:51+00:00,,0,PowerSh0t/CrossBar2x2,329827970,SystemVerilog,CrossBar2x2,552,0,2021-01-15 07:38:22+00:00,[],None
338,https://github.com/Mariummasood/riscv-core.git,2021-02-04 06:58:36+00:00,,0,Mariummasood/riscv-core,335867527,SystemVerilog,riscv-core,389,0,2021-02-04 07:08:25+00:00,[],None
339,https://github.com/farukomeraydin/System-Verilog-Digital-Design.git,2021-02-18 13:48:44+00:00,,1,farukomeraydin/System-Verilog-Digital-Design,340064211,SystemVerilog,System-Verilog-Digital-Design,327,0,2021-08-10 19:44:25+00:00,[],None
340,https://github.com/hugoferreira/verilator-sim-skeleton.git,2021-02-20 01:32:57+00:00,Simple Verilator Co-Simulation Skeleton,0,hugoferreira/verilator-sim-skeleton,340533064,SystemVerilog,verilator-sim-skeleton,25,0,2021-04-07 11:10:48+00:00,[],None
341,https://github.com/okologit/ksch.git,2021-02-22 10:15:24+00:00,,0,okologit/ksch,341158498,SystemVerilog,ksch,241381,0,2023-05-17 17:45:28+00:00,[],None
342,https://github.com/Rickenbacker620/MipsCPU.git,2021-03-06 08:43:33+00:00,,0,Rickenbacker620/MipsCPU,345046451,SystemVerilog,MipsCPU,41,0,2021-03-16 14:11:46+00:00,[],None
343,https://github.com/akamboj2/ECE498-Project-SqueezeNet.git,2020-11-16 01:11:16+00:00,ECE 498 final project. Implementing the fourth fire module of SqueezeNet in Systems Verilog.,1,akamboj2/ECE498-Project-SqueezeNet,313158044,SystemVerilog,ECE498-Project-SqueezeNet,7756,0,2020-12-11 06:47:44+00:00,[],None
344,https://github.com/akshaypsoni/address_generator_system_verilog.git,2021-02-14 17:18:17+00:00,Address generator in System Verilog with given condition,0,akshaypsoni/address_generator_system_verilog,338858634,SystemVerilog,address_generator_system_verilog,9,0,2021-02-14 17:41:36+00:00,[],None
345,https://github.com/varunsax12/pipeline_mips.git,2021-02-27 11:26:21+00:00,Implementation of 32-bit 5-stage pipeline MIPS processor,0,varunsax12/pipeline_mips,342839938,SystemVerilog,pipeline_mips,17,0,2021-10-04 23:41:22+00:00,[],None
346,https://github.com/kitune-san/KFTVGA.git,2021-03-01 16:24:48+00:00,Simple text mode video (VGA) controller written in SystemVerilog,0,kitune-san/KFTVGA,343481245,SystemVerilog,KFTVGA,1282,0,2023-02-23 23:53:44+00:00,"['vga', 'vga-controller', 'systemverilog', 'text-mode', 'fpga']",https://api.github.com/licenses/mit
347,https://github.com/dev-sv/open-fpga.git,2021-01-16 11:45:42+00:00,development,0,dev-sv/open-fpga,330150116,SystemVerilog,open-fpga,475626,0,2023-12-11 11:33:43+00:00,[],None
348,https://github.com/punzik/dual-mcp3201-pmod-fw.git,2021-02-02 14:38:57+00:00,Test of dual-mcp3201-pmod board with Cmod A7 FPGA devboard,0,punzik/dual-mcp3201-pmod-fw,335319360,SystemVerilog,dual-mcp3201-pmod-fw,24,0,2021-02-02 20:59:23+00:00,[],None
349,https://github.com/Mop-u/MonkyCPU.git,2021-01-15 03:04:34+00:00,,0,Mop-u/MonkyCPU,329794539,SystemVerilog,MonkyCPU,82,0,2021-02-06 19:35:31+00:00,[],https://api.github.com/licenses/mit
350,https://github.com/pragya77/Memory-module-using-SystemVerilog.git,2021-01-17 21:40:51+00:00,"The memory DUT and testbench are created using SystemVerilog. The testbench instantiates test which in turn instantiates env. Env has instantiations of scoreboard, monitor, generator and driver. ",0,pragya77/Memory-module-using-SystemVerilog,330492127,SystemVerilog,Memory-module-using-SystemVerilog,2,0,2021-01-17 21:41:28+00:00,[],None
351,https://github.com/emanci/seq_det.git,2021-01-24 23:58:24+00:00,8-bit sequence detector with self-checking testbench. FSM and shift register implementations,0,emanci/seq_det,332584084,SystemVerilog,seq_det,3,0,2021-01-25 00:09:24+00:00,[],None
352,https://github.com/buggins/bcpu16.git,2021-02-18 13:30:09+00:00,16-bit 4-thread Barrel CPU softcore for FPGAs,0,buggins/bcpu16,340059006,SystemVerilog,bcpu16,67,0,2021-08-13 10:11:42+00:00,[],
353,https://github.com/jaycordaro/i2s-toneplayer.git,2021-02-12 08:20:40+00:00,"SystemVerilog I2S target, interfaces with an I2S controller.  Controller sources WS and SCK",0,jaycordaro/i2s-toneplayer,338260263,SystemVerilog,i2s-toneplayer,17,0,2021-05-29 20:30:25+00:00,[],https://api.github.com/licenses/bsd-2-clause
354,https://github.com/palnikola1996/Router-SOC-Design.git,2021-02-14 21:03:24+00:00,"The Router SOC Design includes 4 slave devices (FSM based SHA3-256 permutation engine), 1 master device, 1 switch and arbiter in star topology. The project is designed using System Verilog and synthesised using Synopsys DC ",0,palnikola1996/Router-SOC-Design,338901501,SystemVerilog,Router-SOC-Design,1541,0,2021-02-14 21:08:29+00:00,[],None
355,https://github.com/patrick-chen-98/3_layers_full_connection_MAC.git,2021-02-15 15:20:29+00:00,,0,patrick-chen-98/3_layers_full_connection_MAC,339118303,SystemVerilog,3_layers_full_connection_MAC,4,0,2021-02-15 15:21:49+00:00,[],None
356,https://github.com/mifiscus/Digital-Circuits-and-Systems-Final.git,2021-03-29 01:18:59+00:00,"Final project for digital circuits and systems class, which is a flappy bird game programmed onto the Altera DE1-SoC FPGA using SystemVerilog and an 8x8 LED matrix",0,mifiscus/Digital-Circuits-and-Systems-Final,352479443,SystemVerilog,Digital-Circuits-and-Systems-Final,13,0,2021-06-03 22:49:17+00:00,[],None
357,https://github.com/PedroTLemos/ProjetoInfraHard.git,2021-03-27 23:47:44+00:00,Repositório criado para o envio do projeto da disciplina de Infraestrutura de Hardware do CIn - UFPE,0,PedroTLemos/ProjetoInfraHard,352202764,SystemVerilog,ProjetoInfraHard,2779,0,2021-03-27 23:50:36+00:00,[],None
358,https://github.com/MoonSam/simple_risc5_5stage.git,2021-01-21 15:52:25+00:00,,0,MoonSam/simple_risc5_5stage,331676663,SystemVerilog,simple_risc5_5stage,8,0,2022-05-14 01:27:59+00:00,[],None
359,https://github.com/vsandeepsekhar/verification.git,2021-01-18 22:12:39+00:00,This repository is my shot at SV and UVM for basic Design & Verification data structures ,2,vsandeepsekhar/verification,330799199,SystemVerilog,verification,39,0,2021-05-01 19:59:22+00:00,"['systemverilog', 'uvm']",None
360,https://github.com/shadow-blade-X/ECE342_Lab2.git,2021-01-26 18:30:40+00:00,,0,shadow-blade-X/ECE342_Lab2,333178733,SystemVerilog,ECE342_Lab2,3,0,2021-01-26 19:04:20+00:00,[],None
361,https://github.com/rag1404/randomize_assoc_array_index.git,2021-01-11 00:55:31+00:00,A program to randomize associative array index,0,rag1404/randomize_assoc_array_index,328512485,SystemVerilog,randomize_assoc_array_index,2,0,2021-01-11 00:57:50+00:00,[],None
362,https://github.com/Umair772/ARM-processor.git,2021-01-11 18:41:28+00:00,,0,Umair772/ARM-processor,328759248,SystemVerilog,ARM-processor,32,0,2021-01-11 19:36:53+00:00,[],None
363,https://github.com/RajRamani18/Memory.git,2021-03-08 13:27:46+00:00,Memory Interface,0,RajRamani18/Memory,345665343,SystemVerilog,Memory,75,0,2021-03-10 21:38:07+00:00,[],None
364,https://github.com/Geca981020/Undergraduate-Project.git,2021-02-24 12:52:21+00:00,,0,Geca981020/Undergraduate-Project,341899684,SystemVerilog,Undergraduate-Project,8338,0,2021-03-22 13:54:34+00:00,[],None
365,https://github.com/rushi0005/Verification-of-Grey-Coding.git,2021-02-25 07:51:29+00:00,,0,rushi0005/Verification-of-Grey-Coding,342164530,SystemVerilog,Verification-of-Grey-Coding,20,0,2021-03-03 02:00:15+00:00,[],None
366,https://github.com/nmoroze/sby-experiments.git,2021-03-02 05:36:23+00:00,,0,nmoroze/sby-experiments,343658079,SystemVerilog,sby-experiments,4,0,2021-03-02 05:39:54+00:00,[],None
367,https://github.com/Metal2/ISALab4.git,2021-03-05 16:33:53+00:00,Multiplier verification with UVM,0,Metal2/ISALab4,344870431,SystemVerilog,ISALab4,21698,0,2021-03-05 16:35:44+00:00,[],https://api.github.com/licenses/mit
368,https://github.com/elrhod/Xilinx-DPU-with-SEM.git,2021-01-05 17:18:23+00:00,,0,elrhod/Xilinx-DPU-with-SEM,327068323,SystemVerilog,Xilinx-DPU-with-SEM,4805,0,2021-02-08 19:42:31+00:00,[],None
369,https://github.com/Ayushmisr/SV_array.sv.git,2021-01-04 08:44:41+00:00,,0,Ayushmisr/SV_array.sv,326621147,SystemVerilog,SV_array.sv,1,0,2021-01-04 08:48:12+00:00,[],None
370,https://github.com/joel-bailey/verilog-basic-risc.git,2021-01-07 16:39:56+00:00,,0,joel-bailey/verilog-basic-risc,327669339,SystemVerilog,verilog-basic-risc,1708,0,2021-02-18 16:24:15+00:00,[],None
371,https://github.com/postoroniy/Qrisc.git,2021-02-10 10:54:25+00:00,"Qrisc cpu based on mine qrisc32, in different languages",0,postoroniy/Qrisc,337695179,SystemVerilog,Qrisc,6080,0,2022-05-30 15:58:51+00:00,[],https://api.github.com/licenses/mit
372,https://github.com/AdamVanHoewijk/IBM-model-1.git,2021-03-01 12:15:43+00:00,Implementation of IMB model 1,0,AdamVanHoewijk/IBM-model-1,343404866,SystemVerilog,IBM-model-1,1207,0,2021-03-01 12:17:43+00:00,[],None
373,https://github.com/varunsax12/multi_cycle_mips.git,2021-02-27 11:13:19+00:00,Implementation of 32-bit multi-cycle MIPS processor,0,varunsax12/multi_cycle_mips,342837670,SystemVerilog,multi_cycle_mips,11,0,2021-02-27 11:15:16+00:00,[],None
374,https://github.com/qiufengtiger/18725Assignment.git,2021-02-28 06:50:47+00:00,,0,qiufengtiger/18725Assignment,343040390,SystemVerilog,18725Assignment,4,0,2021-02-28 06:59:12+00:00,[],None
375,https://github.com/danielgaio/psan_sigmoid.git,2021-03-24 02:43:20+00:00,Arquitetura digital da função sigmoid implementada pela técnica Piecewise Secound Order Aproximation.,0,danielgaio/psan_sigmoid,350924844,SystemVerilog,psan_sigmoid,12075,0,2021-10-07 11:05:34+00:00,[],None
376,https://github.com/iremsvn/Basys3-simple-calculator.git,2021-03-25 20:04:36+00:00,,0,iremsvn/Basys3-simple-calculator,351561388,SystemVerilog,Basys3-simple-calculator,638,0,2021-03-31 21:42:41+00:00,"['systemverilog', 'fpga']",https://api.github.com/licenses/mit
377,https://github.com/Li-Zhe-Alex/UVM.git,2020-11-19 15:00:31+00:00,,0,Li-Zhe-Alex/UVM,314281700,SystemVerilog,UVM,13,0,2020-11-19 15:03:35+00:00,[],None
378,https://github.com/tomer29575/calc2.git,2020-11-26 20:25:06+00:00,,0,tomer29575/calc2,316330097,SystemVerilog,calc2,2,0,2021-02-12 13:30:43+00:00,[],None
379,https://github.com/alialrifai/uvm_tutorial.git,2020-11-27 05:49:55+00:00,,1,alialrifai/uvm_tutorial,316411743,SystemVerilog,uvm_tutorial,57,0,2020-11-27 06:11:38+00:00,[],None
380,https://github.com/acordobav/FiltroDigital-TallerAnalogico.git,2020-11-30 19:28:56+00:00,"Osciloscopio y filtrado digital, Proyecto 4 Taller de Diseño Analógico IIS 2020",0,acordobav/FiltroDigital-TallerAnalogico,317324808,SystemVerilog,FiltroDigital-TallerAnalogico,1065,0,2021-05-12 00:22:49+00:00,[],None
381,https://github.com/vasilydenisenko/fsm_kernels.git,2020-11-29 12:29:32+00:00,FSM modules which speed up a design of control circuits,0,vasilydenisenko/fsm_kernels,316946405,SystemVerilog,fsm_kernels,24,0,2020-11-29 17:06:02+00:00,[],https://api.github.com/licenses/mit
382,https://github.com/jomero-hex/Early-Detection-Debouncing-Circuit.git,2020-12-11 07:37:41+00:00,,0,jomero-hex/Early-Detection-Debouncing-Circuit,320501649,SystemVerilog,Early-Detection-Debouncing-Circuit,656,0,2021-01-05 22:41:08+00:00,[],None
383,https://github.com/Jacob-Bograd/CPE-133-Final.git,2020-11-16 22:28:52+00:00,CPE 133 final for Cal Poly,1,Jacob-Bograd/CPE-133-Final,313443029,SystemVerilog,CPE-133-Final,6015,0,2020-11-25 03:43:10+00:00,[],None
384,https://github.com/shiban123/Bus-Protocols.git,2020-11-17 02:59:31+00:00,,0,shiban123/Bus-Protocols,313490982,SystemVerilog,Bus-Protocols,6,0,2020-11-21 07:25:21+00:00,[],None
385,https://github.com/zeeshan0309/dvb.git,2021-02-04 10:40:52+00:00,,0,zeeshan0309/dvb,335921796,SystemVerilog,dvb,10,0,2021-09-02 18:58:28+00:00,[],https://api.github.com/licenses/mit
386,https://github.com/alex-nagy-spacefiller/cse_361_lab1.git,2021-02-11 21:01:32+00:00,,0,alex-nagy-spacefiller/cse_361_lab1,338151804,SystemVerilog,cse_361_lab1,3,0,2021-02-11 21:03:24+00:00,[],None
387,https://github.com/mvsoliveira/edatools.git,2021-02-13 16:19:35+00:00,Website to perform small tasks on EDA snippets ,0,mvsoliveira/edatools,338615137,SystemVerilog,edatools,27,0,2022-06-17 15:39:47+00:00,[],None
388,https://github.com/nathan-n-poon/beep-boop.git,2021-02-13 09:04:59+00:00,,0,nathan-n-poon/beep-boop,338535571,SystemVerilog,beep-boop,2767,0,2021-04-15 08:20:05+00:00,[],https://api.github.com/licenses/mit
389,https://github.com/bekelm/ENEE459D.git,2021-02-24 15:19:09+00:00,,0,bekelm/ENEE459D,341941940,SystemVerilog,ENEE459D,44,0,2021-05-15 03:54:56+00:00,[],None
390,https://github.com/danielgaio/plan_sigmoid.git,2021-02-24 14:22:51+00:00,Implementação da função sigmoid pelo método Piecewise Linear Aproximation of Non Linear Function (PLAN).,0,danielgaio/plan_sigmoid,341925033,SystemVerilog,plan_sigmoid,8579,0,2021-10-14 21:26:10+00:00,[],None
391,https://github.com/asicdv/hw_interview_questions.git,2020-11-20 10:00:21+00:00,A collection of commonly asked RTL design interview questions,1,asicdv/hw_interview_questions,314513791,,hw_interview_questions,1699,0,2020-11-20 10:00:23+00:00,[],https://api.github.com/licenses/gpl-3.0
392,https://github.com/nimish15shah/Runtime-precision-scalable-POSIT-RTL.git,2020-11-23 19:24:10+00:00,"POSIT RTL that can be configured in runtime to perform 1x32b, 2x16b or 4x8b posit sums and products.",0,nimish15shah/Runtime-precision-scalable-POSIT-RTL,315418293,SystemVerilog,Runtime-precision-scalable-POSIT-RTL,2221,0,2021-04-09 11:01:47+00:00,[],https://api.github.com/licenses/mit
393,https://github.com/Hyper-Act/Winter-of-Verilog.git,2020-12-08 16:00:46+00:00,Code that we'll use for the KEP,3,Hyper-Act/Winter-of-Verilog,319689253,SystemVerilog,Winter-of-Verilog,7,0,2020-12-18 16:27:51+00:00,[],None
394,https://github.com/coffeestainedcode/Perpetually_Puzzling_Passwords.git,2020-12-05 05:28:03+00:00,,0,coffeestainedcode/Perpetually_Puzzling_Passwords,318709772,SystemVerilog,Perpetually_Puzzling_Passwords,8,0,2021-10-14 21:56:12+00:00,[],None
395,https://github.com/UWCubeSat/hs2-dds-hdl.git,2020-12-01 22:52:13+00:00,SystemVerilog and Quartus Prime configuration settings for the AWG,0,UWCubeSat/hs2-dds-hdl,317688819,SystemVerilog,hs2-dds-hdl,314,0,2020-12-01 22:54:08+00:00,[],None
396,https://github.com/Umair772/Game-of-Snake-on-VGA.git,2021-01-12 07:18:39+00:00,,0,Umair772/Game-of-Snake-on-VGA,328904076,SystemVerilog,Game-of-Snake-on-VGA,370,0,2021-01-12 07:20:38+00:00,[],None
397,https://github.com/Q-b1t/La-Maquina-de-Leonel.git,2021-03-04 05:10:46+00:00,GUMNUT,0,Q-b1t/La-Maquina-de-Leonel,344357246,SystemVerilog,La-Maquina-de-Leonel,5149,0,2021-03-16 17:05:19+00:00,[],None
398,https://github.com/VSHEV92/CycloneV_StarterKit_Leds7.git,2021-03-20 15:20:50+00:00,Тестовое окружение на примере проекта с семисегментными индикаторами,0,VSHEV92/CycloneV_StarterKit_Leds7,349760936,SystemVerilog,CycloneV_StarterKit_Leds7,22,0,2021-03-21 14:26:08+00:00,[],None
399,https://github.com/sharmasnkr/FPGA-Pattern-Detector.git,2021-02-17 18:04:05+00:00,,0,sharmasnkr/FPGA-Pattern-Detector,339812086,SystemVerilog,FPGA-Pattern-Detector,8,0,2021-02-17 19:34:16+00:00,[],None
400,https://github.com/BourgeoisLenin/Team10Minilab4.git,2021-02-09 14:14:12+00:00,,0,BourgeoisLenin/Team10Minilab4,337426564,SystemVerilog,Team10Minilab4,4,0,2021-02-10 05:24:23+00:00,[],None
401,https://github.com/AndreiBalasa/TSC.git,2021-03-10 09:31:09+00:00,,0,AndreiBalasa/TSC,346301816,SystemVerilog,TSC,8273,0,2021-04-08 16:32:58+00:00,[],None
402,https://github.com/RajRamani18/Mux.git,2021-03-11 01:29:30+00:00,Assertion Concept,0,RajRamani18/Mux,346542076,SystemVerilog,Mux,50,0,2021-03-14 14:40:34+00:00,[],None
403,https://github.com/akubicek1/ECE337-Labs.git,2021-02-26 01:33:48+00:00,,0,akubicek1/ECE337-Labs,342428868,SystemVerilog,ECE337-Labs,317,0,2022-09-19 02:29:19+00:00,[],None
404,https://github.com/deokjoo/uvm.git,2021-02-20 15:30:55+00:00,,0,deokjoo/uvm,340687452,SystemVerilog,uvm,60,0,2021-03-28 09:29:01+00:00,[],None
405,https://github.com/VictorHerbert/FPGANeuralNetworkAccelerator.git,2021-02-20 06:08:26+00:00,,0,VictorHerbert/FPGANeuralNetworkAccelerator,340576579,SystemVerilog,FPGANeuralNetworkAccelerator,1118,0,2023-02-13 06:20:13+00:00,[],None
406,https://github.com/RomanSablin/maxII-test.git,2020-11-19 13:13:30+00:00,Test pwm,0,RomanSablin/maxII-test,314252473,SystemVerilog,maxII-test,5,0,2021-09-16 01:58:52+00:00,[],None
407,https://github.com/vasilydenisenko/hdl_primitives.git,2020-11-28 19:41:39+00:00,Small building blocks for HDL projects,0,vasilydenisenko/hdl_primitives,316809168,SystemVerilog,hdl_primitives,25,0,2021-01-05 11:21:40+00:00,[],https://api.github.com/licenses/mit
408,https://github.com/MeriemLil/DT3.git,2021-01-18 18:23:35+00:00,Digital Techniques 3,0,MeriemLil/DT3,330752490,SystemVerilog,DT3,121,0,2021-01-18 18:38:36+00:00,[],None
409,https://github.com/gyx3598/fpgasimulation.git,2021-01-27 06:10:06+00:00,,0,gyx3598/fpgasimulation,333321846,SystemVerilog,fpgasimulation,3994,0,2021-01-27 06:10:27+00:00,[],None
410,https://github.com/dayu1998/ece554_miniproject.git,2021-01-28 11:31:09+00:00,,0,dayu1998/ece554_miniproject,333738450,SystemVerilog,ece554_miniproject,504,0,2021-01-29 02:01:46+00:00,[],None
411,https://github.com/QueMona98/connect4-sysverilog.git,2020-12-24 00:26:06+00:00,,0,QueMona98/connect4-sysverilog,324029030,SystemVerilog,connect4-sysverilog,6,0,2020-12-24 00:50:57+00:00,[],None
412,https://github.com/nhpoole/Rasterization-Hardware-Accelerator.git,2021-01-06 01:42:48+00:00,,0,nhpoole/Rasterization-Hardware-Accelerator,327168333,SystemVerilog,Rasterization-Hardware-Accelerator,77,0,2021-08-23 02:09:35+00:00,[],None
413,https://github.com/CyrilKoe/PAF.git,2021-01-13 14:58:53+00:00,1st year project in Telecom Paris,0,CyrilKoe/PAF,329341773,SystemVerilog,PAF,16,0,2021-01-13 15:00:54+00:00,[],None
414,https://github.com/OdaiBadran/the_key_pusher.git,2021-01-14 16:57:50+00:00,some piece of code from the key pusher game i created,0,OdaiBadran/the_key_pusher,329679336,SystemVerilog,the_key_pusher,17,0,2021-01-14 17:05:02+00:00,[],None
415,https://github.com/awesomeaiden/337labs.git,2021-01-21 19:53:33+00:00,Version control for ECE 33700 lab code,0,awesomeaiden/337labs,331738355,SystemVerilog,337labs,8952,0,2023-01-28 00:43:47+00:00,[],None
416,https://github.com/bslk/nqaxi.git,2020-11-20 15:31:49+00:00,Not quite AXI,0,bslk/nqaxi,314594247,SystemVerilog,nqaxi,8,0,2020-11-20 15:52:32+00:00,[],
417,https://github.com/twoodhouse/aoc-2020.git,2020-11-30 23:01:11+00:00,My Advent of Code 2020 solutions,0,twoodhouse/aoc-2020,317367409,SystemVerilog,aoc-2020,63,0,2020-12-17 17:31:43+00:00,[],None
418,https://github.com/Mooyeonkim628/ECE337_ASIC_Design.git,2020-11-14 05:20:44+00:00,,4,Mooyeonkim628/ECE337_ASIC_Design,312751660,,ECE337_ASIC_Design,3558,0,2021-09-01 01:27:54+00:00,[],None
419,https://github.com/gbellocchi/fullstack_ip_integration.git,2020-12-18 14:09:59+00:00,,1,gbellocchi/fullstack_ip_integration,322613111,SystemVerilog,fullstack_ip_integration,15,0,2020-12-18 15:56:10+00:00,[],None
420,https://github.com/pvlkhm/VGA-Space-Game.git,2020-12-18 09:38:41+00:00,Verilog Game [VGA],0,pvlkhm/VGA-Space-Game,322551149,SystemVerilog,VGA-Space-Game,13246,0,2020-12-18 10:00:31+00:00,[],None
421,https://github.com/RemiChierchia/Progettio-Elettronica.git,2020-12-09 12:14:11+00:00,,0,RemiChierchia/Progettio-Elettronica,319946276,SystemVerilog,Progettio-Elettronica,3048,0,2021-11-26 14:56:30+00:00,[],None
422,https://github.com/catalinstefangheorghe/tsc_lab.git,2021-03-01 17:19:40+00:00,tsc_lab,0,catalinstefangheorghe/tsc_lab,343498002,SystemVerilog,tsc_lab,8421,0,2021-04-19 13:46:00+00:00,[],None
423,https://github.com/GuavTek/Control_bounded_filter_HDL.git,2021-03-07 17:40:20+00:00,A filter implementation for a control-bounded ADC,0,GuavTek/Control_bounded_filter_HDL,345411883,SystemVerilog,Control_bounded_filter_HDL,5090,0,2021-11-28 23:35:49+00:00,[],None
424,https://github.com/EdwinTrejo/CMPE691.git,2021-02-22 05:22:00+00:00,"My CMPE 691 491 Repo, I don't want to lose my school work code, so I back it up to here.",0,EdwinTrejo/CMPE691,341088570,SystemVerilog,CMPE691,6527,0,2021-05-14 17:26:00+00:00,"['verilog', 'c-sharp', 'cpp', 'vhdl', 'systemverilog']",https://api.github.com/licenses/mit
425,https://github.com/georgecosmin98/TSC_Lab.git,2021-02-25 14:27:43+00:00,,0,georgecosmin98/TSC_Lab,342270820,SystemVerilog,TSC_Lab,18014,0,2021-04-15 17:30:02+00:00,[],None
426,https://github.com/grant4001/100MbEthernetFPGA.git,2021-03-09 04:18:33+00:00,,0,grant4001/100MbEthernetFPGA,345880687,SystemVerilog,100MbEthernetFPGA,11,0,2021-03-09 04:24:50+00:00,[],None
427,https://github.com/AlfreddGco/gumnut-processor.git,2021-03-08 13:04:51+00:00,,0,AlfreddGco/gumnut-processor,345658581,SystemVerilog,gumnut-processor,2962,0,2022-06-30 17:19:43+00:00,[],None
428,https://github.com/yolanda10202/FPGA_Memory.git,2021-03-09 07:53:15+00:00,IEEE Student Branch at UCLA Digital Audio Visualizer (DAV) Project Lab 5 Part E,0,yolanda10202/FPGA_Memory,345925542,SystemVerilog,FPGA_Memory,6,0,2021-06-14 14:09:29+00:00,[],None
429,https://github.com/ritik11ritik/2_Way-Set-Associative-Cache-Using-Verilog.git,2021-03-24 11:08:53+00:00,,0,ritik11ritik/2_Way-Set-Associative-Cache-Using-Verilog,351049009,SystemVerilog,2_Way-Set-Associative-Cache-Using-Verilog,8,0,2021-03-24 11:13:03+00:00,[],None
430,https://github.com/Deriskyy/Verilog.git,2021-02-19 11:18:44+00:00,Verilog design and Class Lab,0,Deriskyy/Verilog,340346625,SystemVerilog,Verilog,1219,0,2021-02-19 12:29:04+00:00,[],None
431,https://github.com/NawafSwe/verilog-circuit.git,2021-02-21 17:19:14+00:00,,0,NawafSwe/verilog-circuit,340958684,SystemVerilog,verilog-circuit,0,0,2021-02-21 17:20:07+00:00,[],None
432,https://github.com/SimtinicaLucian/TSC_LAB.git,2021-02-24 14:57:00+00:00,,0,SimtinicaLucian/TSC_LAB,341935194,SystemVerilog,TSC_LAB,8453,0,2021-04-21 09:54:35+00:00,[],None
433,https://github.com/aykutshahin/CustomArchitectureCPU.git,2021-02-24 18:47:12+00:00,32 Bit Custom Architecture CPU developed by using SystemVerilog ,0,aykutshahin/CustomArchitectureCPU,342001236,SystemVerilog,CustomArchitectureCPU,175,0,2021-02-24 18:56:39+00:00,[],None
434,https://github.com/erik-fox/Simple-Bus-Interface.git,2021-02-24 21:04:16+00:00,,0,erik-fox/Simple-Bus-Interface,342035208,SystemVerilog,Simple-Bus-Interface,39,0,2021-03-22 18:53:58+00:00,[],None
435,https://github.com/sandyverif/gitwork.git,2021-02-15 10:12:02+00:00,my first git work,0,sandyverif/gitwork,339036684,SystemVerilog,gitwork,1,0,2021-02-15 11:10:07+00:00,[],None
436,https://github.com/metricsjagan/metricsjagan.git,2021-03-29 14:39:08+00:00,Config files for my GitHub profile.,0,metricsjagan/metricsjagan,352676246,SystemVerilog,metricsjagan,19,0,2021-08-24 14:01:21+00:00,"['config', 'github-config']",None
437,https://github.com/cruelkiddy/multicore.git,2021-03-10 11:57:31+00:00,,0,cruelkiddy/multicore,346340063,SystemVerilog,multicore,11437,0,2021-03-10 12:00:42+00:00,[],None
438,https://github.com/zivdar001matin/sbu-arch-lab.git,2021-02-09 15:14:22+00:00,Projects of Architecture Laboratory Course,1,zivdar001matin/sbu-arch-lab,337444811,SystemVerilog,sbu-arch-lab,16937,0,2021-03-12 16:45:52+00:00,[],None
439,https://github.com/sanchc23/Computer-Architecture.git,2021-01-27 17:32:00+00:00,,0,sanchc23/Computer-Architecture,333507585,SystemVerilog,Computer-Architecture,80,0,2023-03-08 04:35:57+00:00,[],None
440,https://github.com/ritik11ritik/Direct-Mapped-Cache.git,2021-02-10 18:53:10+00:00,,0,ritik11ritik/Direct-Mapped-Cache,337822262,SystemVerilog,Direct-Mapped-Cache,10,0,2021-03-18 11:28:38+00:00,[],None
441,https://github.com/pentolope/cookie.git,2021-01-16 02:54:54+00:00,A custom CPU for an FPGA,0,pentolope/cookie,330071122,SystemVerilog,cookie,3088,0,2022-01-12 03:02:42+00:00,"['fpga', 'cpu-architecture', 'cpu', 'verilog', 'systemverilog']",None
442,https://github.com/brycedavid/Keypad-Lock-HDL.git,2021-01-19 22:48:09+00:00,An old Keypad Lock simulation written in Verilog HDL. (Created 4/30/2020),0,brycedavid/Keypad-Lock-HDL,331130315,SystemVerilog,Keypad-Lock-HDL,6,0,2021-01-19 22:57:40+00:00,[],None
443,https://github.com/jtotran/mips-sv.git,2020-11-24 23:00:07+00:00,MIPS architecture implemented in System Verilog.,0,jtotran/mips-sv,315772785,SystemVerilog,mips-sv,609,0,2021-05-14 05:57:27+00:00,[],None
444,https://github.com/rag1404/systemverilog_coverage.git,2020-12-31 18:00:56+00:00,Simple System verilog coverage module,0,rag1404/systemverilog_coverage,325850167,SystemVerilog,systemverilog_coverage,1,0,2020-12-31 18:03:00+00:00,[],None
445,https://github.com/markrealista/NeuronaArtificialConfigurable.git,2021-01-10 14:21:54+00:00,,0,markrealista/NeuronaArtificialConfigurable,328400907,SystemVerilog,NeuronaArtificialConfigurable,5937,0,2021-03-15 20:20:45+00:00,[],None
446,https://github.com/MikeWakeland/AES-SV.git,2021-01-13 05:00:18+00:00,,0,MikeWakeland/AES-SV,329198711,SystemVerilog,AES-SV,277,0,2021-11-10 06:52:35+00:00,[],None
447,https://github.com/sray0309/2-way-superscalar-RISC-V-OoO-processor-design.git,2021-01-31 23:19:07+00:00,,1,sray0309/2-way-superscalar-RISC-V-OoO-processor-design,334778059,SystemVerilog,2-way-superscalar-RISC-V-OoO-processor-design,1953,0,2021-01-31 23:32:24+00:00,[],None
448,https://github.com/vinodsake/Mini-SOC.git,2021-02-01 09:34:08+00:00,,0,vinodsake/Mini-SOC,334897902,SystemVerilog,Mini-SOC,5,0,2021-02-20 18:44:18+00:00,[],None
449,https://github.com/mohamed-hafez-mohamed/System-Verilog.git,2021-02-12 20:35:46+00:00,,0,mohamed-hafez-mohamed/System-Verilog,338427374,SystemVerilog,System-Verilog,2,0,2021-02-12 20:39:28+00:00,[],None
450,https://github.com/alainlou/nandland.git,2021-02-13 18:53:01+00:00,Exploring FPGA board features with nandland tutorials!,0,alainlou/nandland,338645849,SystemVerilog,nandland,47,0,2021-03-15 02:54:57+00:00,[],None
451,https://github.com/billythedummy/seg7.git,2021-01-13 15:26:59+00:00,SystemVerilog driver for DE1_SoC 7-segment display,0,billythedummy/seg7,329349894,SystemVerilog,seg7,129,0,2021-04-12 19:00:57+00:00,[],None
452,https://github.com/oz-matt/ozphy_uvm.git,2021-02-17 02:08:58+00:00,,1,oz-matt/ozphy_uvm,339586670,SystemVerilog,ozphy_uvm,908,0,2021-03-07 10:36:41+00:00,[],None
453,https://github.com/sirius-y/FIFO-using-verilog-with-testbench.git,2021-02-03 10:20:40+00:00,,0,sirius-y/FIFO-using-verilog-with-testbench,335585305,SystemVerilog,FIFO-using-verilog-with-testbench,129,0,2021-02-03 10:27:13+00:00,[],None
454,https://github.com/metro68/Counter.git,2021-02-12 22:32:13+00:00,This project uses the FPGA board to show how one can count in decimal up to 15 using hexadecimal. It uses small 'd' to differentiate D from 0 on the FPGA. It uses 'b' to differentiate B from 8.,0,metro68/Counter,338448648,SystemVerilog,Counter,14316,0,2021-02-12 23:27:32+00:00,[],None
455,https://github.com/shrutimathurvlsi/project_vlsi.git,2020-11-18 09:51:41+00:00,,0,shrutimathurvlsi/project_vlsi,313890037,SystemVerilog,project_vlsi,8,0,2020-11-24 18:57:33+00:00,[],None
456,https://github.com/richardojo12/Verilog-SystemVerilog-Projects.git,2020-12-03 04:01:48+00:00,Richard Ojo's previous projects using Verilog and SystemVerilog,0,richardojo12/Verilog-SystemVerilog-Projects,318069787,SystemVerilog,Verilog-SystemVerilog-Projects,5811,0,2022-02-25 22:56:12+00:00,[],None
457,https://github.com/xsz1216/test.git,2021-01-23 13:44:58+00:00,,0,xsz1216/test,332220380,SystemVerilog,test,40,0,2021-09-15 01:58:02+00:00,[],None
458,https://github.com/amank94007/APB_Protocol.git,2021-01-30 12:31:29+00:00,,0,amank94007/APB_Protocol,334408039,SystemVerilog,APB_Protocol,5083,0,2021-01-30 14:01:54+00:00,[],https://api.github.com/licenses/gpl-3.0
459,https://github.com/zachchanak/ece554_miniproject.git,2021-01-27 00:45:07+00:00,,0,zachchanak/ece554_miniproject,333258997,SystemVerilog,ece554_miniproject,537,0,2021-02-15 22:15:57+00:00,[],None
460,https://github.com/MrIvor/RegModel.git,2021-01-18 02:01:43+00:00,Using Perl to generate register model,0,MrIvor/RegModel,330529346,,RegModel,44,0,2022-07-16 09:44:51+00:00,[],None
461,https://github.com/AmmaarIftikhar/Processor.git,2021-01-19 17:24:30+00:00,6 instruction processor,0,AmmaarIftikhar/Processor,331056306,SystemVerilog,Processor,209,0,2021-02-27 06:24:03+00:00,[],None
462,https://github.com/ryaanluke/ARC4-Decryption-Circuit.git,2021-02-08 19:43:36+00:00,,0,ryaanluke/ARC4-Decryption-Circuit,337190056,SystemVerilog,ARC4-Decryption-Circuit,498,0,2021-06-21 11:08:34+00:00,[],None
463,https://github.com/JorgePerC/Quartus.git,2021-02-22 22:45:26+00:00,Repo para la clase de Diseño de chips con Lógica programable. ,0,JorgePerC/Quartus,341359081,SystemVerilog,Quartus,38903,0,2021-03-15 05:11:48+00:00,[],None
464,https://github.com/victor4700/EE273_uvm_Verification.git,2021-02-24 13:17:43+00:00," Topics in verification with the full System Verilog language. Majortopics include classes and objects, random constrained test generation, and system-level verification.",0,victor4700/EE273_uvm_Verification,341906508,SystemVerilog,EE273_uvm_Verification,172,0,2021-02-24 13:32:33+00:00,[],None
465,https://github.com/amaltaha67/Pipelined_MIPS_Project.git,2021-01-10 03:26:49+00:00,5 stages Pipelined MIPS using Verilog programming,1,amaltaha67/Pipelined_MIPS_Project,328295004,SystemVerilog,Pipelined_MIPS_Project,757,0,2021-01-30 01:14:10+00:00,[],None
466,https://github.com/ismetalp98/MIPS_PIPELINE-SINGLECYCLE.git,2021-01-10 13:16:20+00:00,,0,ismetalp98/MIPS_PIPELINE-SINGLECYCLE,328387013,SystemVerilog,MIPS_PIPELINE-SINGLECYCLE,162,0,2021-01-29 08:23:15+00:00,[],None
467,https://github.com/Asra-sudo/verilog-code.git,2021-02-15 19:31:56+00:00,,0,Asra-sudo/verilog-code,339185172,SystemVerilog,verilog-code,0,0,2021-02-15 19:39:40+00:00,[],None
468,https://github.com/nicholasrighi/pipelined_arm_cpu.git,2021-02-15 22:00:57+00:00,,0,nicholasrighi/pipelined_arm_cpu,339218741,SystemVerilog,pipelined_arm_cpu,112344,0,2021-03-20 04:39:15+00:00,[],None
469,https://github.com/asucato2/snake_basys3.git,2020-12-08 22:16:14+00:00,,0,asucato2/snake_basys3,319774498,SystemVerilog,snake_basys3,86,0,2020-12-10 14:12:43+00:00,[],None
470,https://github.com/FranZk9/4rk1t3ctUr4.git,2020-12-08 02:01:02+00:00,,0,FranZk9/4rk1t3ctUr4,319497356,SystemVerilog,4rk1t3ctUr4,373,0,2023-02-06 20:58:43+00:00,[],None
471,https://github.com/hamidsalemi77/CAL_ARM_forwarding.git,2020-12-18 03:48:52+00:00,,0,hamidsalemi77/CAL_ARM_forwarding,322481769,SystemVerilog,CAL_ARM_forwarding,22,0,2021-01-04 21:35:40+00:00,[],None
472,https://github.com/alex96295/fullstack_ip_pulptraining.git,2020-12-18 14:11:32+00:00,,0,alex96295/fullstack_ip_pulptraining,322613480,SystemVerilog,fullstack_ip_pulptraining,19,0,2020-12-21 07:19:05+00:00,[],None
473,https://github.com/nhancaheo/otto-glicher.git,2020-12-25 13:55:51+00:00,,0,nhancaheo/otto-glicher,324372250,SystemVerilog,otto-glicher,196,0,2020-12-25 13:57:41+00:00,[],None
474,https://github.com/gradle-hdvl-tests/direct-dependency.git,2020-12-28 12:34:43+00:00,,0,gradle-hdvl-tests/direct-dependency,325008185,SystemVerilog,direct-dependency,57,0,2020-12-28 22:30:49+00:00,[],None
475,https://github.com/leifu00/FPGA-acceleration-of-epidemic-simulation.git,2020-11-29 14:08:22+00:00,,0,leifu00/FPGA-acceleration-of-epidemic-simulation,316965170,SystemVerilog,FPGA-acceleration-of-epidemic-simulation,10662,0,2021-06-17 22:53:06+00:00,[],None
476,https://github.com/hungbk99/AHB_GEN_201.git,2020-11-30 03:31:29+00:00,An AHP Bus Generator From my Thesis Proposal in HCMUT,0,hungbk99/AHB_GEN_201,317101091,SystemVerilog,AHB_GEN_201,51306,0,2021-10-05 11:02:24+00:00,[],None
477,https://github.com/Art-007/FIFO-Buffer.git,2020-12-24 08:14:48+00:00,,0,Art-007/FIFO-Buffer,324103577,SystemVerilog,FIFO-Buffer,19310,0,2021-01-08 05:57:34+00:00,[],None
478,https://github.com/ritik11ritik/CPU-Using-Verilog-HDL.git,2021-01-03 12:09:09+00:00,,0,ritik11ritik/CPU-Using-Verilog-HDL,326398334,SystemVerilog,CPU-Using-Verilog-HDL,30,0,2021-01-03 16:37:44+00:00,[],None
479,https://github.com/iulian098/TSC.git,2021-03-10 09:31:07+00:00,,0,iulian098/TSC,346301804,SystemVerilog,TSC,8212,0,2021-04-08 16:32:02+00:00,[],None
480,https://github.com/DenizOzal/CS223-Digital-Design.git,2021-03-27 20:47:46+00:00,CS223 Lab Assignments,0,DenizOzal/CS223-Digital-Design,352174004,SystemVerilog,CS223-Digital-Design,3598,0,2023-10-15 17:35:34+00:00,[],None
481,https://github.com/T-Venkatesh/Verification-of-SRAM.git,2021-02-26 08:07:05+00:00,,0,T-Venkatesh/Verification-of-SRAM,342505755,SystemVerilog,Verification-of-SRAM,7,0,2021-02-26 08:10:02+00:00,[],https://api.github.com/licenses/mit
482,https://github.com/mattsini1/vip.git,2021-03-22 16:11:58+00:00,,0,mattsini1/vip,350408253,SystemVerilog,vip,716,0,2021-03-22 16:12:29+00:00,[],None
483,https://github.com/mandebi/SystemVerilog_Examples.git,2021-03-23 01:17:39+00:00,,0,mandebi/SystemVerilog_Examples,350540003,SystemVerilog,SystemVerilog_Examples,35,0,2021-03-23 01:37:23+00:00,[],None
484,https://github.com/RiccardoGandolfi/wide_alu_ip.git,2021-02-23 13:13:16+00:00,Fullstack AXI ip integration from pulp training,4,RiccardoGandolfi/wide_alu_ip,341559532,SystemVerilog,wide_alu_ip,18,0,2021-02-23 13:20:02+00:00,[],None
485,https://github.com/SabinSJ/TSCLab.git,2021-02-25 14:29:14+00:00,,0,SabinSJ/TSCLab,342271248,SystemVerilog,TSCLab,14109,0,2021-04-15 14:43:55+00:00,[],None
486,https://github.com/andreiz98/TSCLab.git,2021-02-25 14:29:43+00:00,,0,andreiz98/TSCLab,342271370,SystemVerilog,TSCLab,14108,0,2021-04-15 19:32:16+00:00,[],None
487,https://github.com/yolanda10202/Pipeline_Adder.git,2021-03-09 07:10:54+00:00,IEEE Student Branch at UCLA Digital Audio Visualizer (DAV) Project Lab 3 Part D,0,yolanda10202/Pipeline_Adder,345915241,SystemVerilog,Pipeline_Adder,8,0,2021-03-15 02:22:44+00:00,[],None
488,https://github.com/diakovd/2WD-Chassis-controlled-by-IBEX-RISC-V.git,2021-03-08 20:21:55+00:00,,1,diakovd/2WD-Chassis-controlled-by-IBEX-RISC-V,345784255,SystemVerilog,2WD-Chassis-controlled-by-IBEX-RISC-V,3985,0,2021-03-08 20:35:44+00:00,[],https://api.github.com/licenses/apache-2.0
489,https://github.com/singhabhi986/CodeBlock_Verification_Work.git,2021-03-12 17:30:31+00:00,,0,singhabhi986/CodeBlock_Verification_Work,347145579,SystemVerilog,CodeBlock_Verification_Work,25808,0,2021-03-12 17:35:02+00:00,[],None
490,https://github.com/felixoberhansl/verilog-race-testing.git,2020-12-20 13:30:08+00:00,SystemVerilog example that produces correct simulation and synthesis results for pipelined hardware architectures.,0,felixoberhansl/verilog-race-testing,323078578,SystemVerilog,verilog-race-testing,1,0,2020-12-20 13:33:21+00:00,[],None
491,https://github.com/rendaletaas/EE277Project.git,2020-11-15 07:00:19+00:00,"Project for EE277A, Fall 2020",0,rendaletaas/EE277Project,312976296,SystemVerilog,EE277Project,2,0,2020-11-15 07:30:04+00:00,[],None
492,https://github.com/saifjamsheer/vga-pong.git,2020-12-09 17:55:36+00:00,Programming an FPGA to play the game of pong on a VGA display.,0,saifjamsheer/vga-pong,320036944,SystemVerilog,vga-pong,367,0,2020-12-09 18:02:54+00:00,[],None
493,https://github.com/f20170227/memory-allocator-and-garbage-collector.git,2020-12-09 13:17:47+00:00,,0,f20170227/memory-allocator-and-garbage-collector,319962144,SystemVerilog,memory-allocator-and-garbage-collector,87,0,2022-10-05 15:34:39+00:00,[],None
494,https://github.com/gyx3598/uvmprimer.git,2021-01-27 06:09:04+00:00,,0,gyx3598/uvmprimer,333321644,SystemVerilog,uvmprimer,6019,0,2021-01-27 06:09:23+00:00,[],None
495,https://github.com/CPA872/CS_3220.git,2021-02-04 02:13:05+00:00,,0,CPA872/CS_3220,335812374,SystemVerilog,CS_3220,81837,0,2023-03-06 10:56:03+00:00,[],None
496,https://github.com/rag1404/uvm_wait_for_nba_region.svh.git,2021-01-23 07:24:47+00:00,A program to demonstrate the race condition in TB and solve it !!,0,rag1404/uvm_wait_for_nba_region.svh,332152471,SystemVerilog,uvm_wait_for_nba_region.svh,3,0,2021-01-23 07:32:22+00:00,[],None
497,https://github.com/niv1991/RISCV_MT.git,2021-03-07 10:40:13+00:00,RISCV Project,1,niv1991/RISCV_MT,345319267,SystemVerilog,RISCV_MT,231,0,2021-03-07 10:44:40+00:00,[],None
498,https://github.com/ggrigorev/U96.git,2021-03-11 18:38:24+00:00,,0,ggrigorev/U96,346801836,SystemVerilog,U96,14253,0,2021-04-14 18:27:09+00:00,[],None
499,https://github.com/Debagnik/VLSID-Lab.git,2021-01-11 11:34:58+00:00,,0,Debagnik/VLSID-Lab,328643654,SystemVerilog,VLSID-Lab,35843,0,2023-01-28 08:38:18+00:00,[],None
500,https://github.com/mattsini1/tb_pulp.git,2021-03-22 16:12:44+00:00,,0,mattsini1/tb_pulp,350408491,SystemVerilog,tb_pulp,9,0,2021-03-22 16:13:15+00:00,[],None
501,https://github.com/degas91/UART_Controller.git,2021-03-26 01:23:39+00:00,A UART controller coded in Systemverilog,0,degas91/UART_Controller,351624869,SystemVerilog,UART_Controller,15,0,2021-05-24 01:52:27+00:00,[],https://api.github.com/licenses/mit
502,https://github.com/amirhossein-alizad/MIPS-PipeLine-Implementation.git,2021-02-08 18:46:37+00:00,"PipeLine Implementation of MIPS processor, a project for Computer Architecture course in University of Tehran",0,amirhossein-alizad/MIPS-PipeLine-Implementation,337175447,SystemVerilog,MIPS-PipeLine-Implementation,27,0,2021-02-13 10:56:12+00:00,[],https://api.github.com/licenses/gpl-3.0
503,https://github.com/bansil-vaghasiya/UVM_Verification_of_SPI_peripheral_Bus.git,2020-12-23 08:32:52+00:00,,0,bansil-vaghasiya/UVM_Verification_of_SPI_peripheral_Bus,323846767,SystemVerilog,UVM_Verification_of_SPI_peripheral_Bus,349,0,2020-12-23 08:45:42+00:00,[],None
504,https://github.com/spotter0226/ECEN4243_Labs.git,2021-01-24 19:13:49+00:00,A place for our lab files to call home.,0,spotter0226/ECEN4243_Labs,332533963,SystemVerilog,ECEN4243_Labs,16289,0,2021-05-01 21:16:18+00:00,[],None
505,https://github.com/rag1404/user_defined_type_in_function.git,2021-01-12 03:24:05+00:00,Return type of a function to be user_defined,0,rag1404/user_defined_type_in_function,328860104,SystemVerilog,user_defined_type_in_function,1,0,2021-01-12 03:27:12+00:00,[],None
506,https://github.com/pragya77/Memory-module-using-UVM-with-configuration-class.git,2021-01-27 14:34:19+00:00,,0,pragya77/Memory-module-using-UVM-with-configuration-class,333448870,SystemVerilog,Memory-module-using-UVM-with-configuration-class,7,0,2021-02-10 18:49:09+00:00,[],None
507,https://github.com/PaulLee950181/Eight_queens_puzzle.git,2021-01-29 09:53:20+00:00,,0,PaulLee950181/Eight_queens_puzzle,334102799,SystemVerilog,Eight_queens_puzzle,6,0,2021-02-02 04:09:36+00:00,[],None
508,https://github.com/yus252/MyRISC.git,2021-01-18 23:37:56+00:00,,0,yus252/MyRISC,330812788,SystemVerilog,MyRISC,1735,0,2021-03-15 22:59:37+00:00,[],None
509,https://github.com/Jun0951/Multiplier-in-GF-2-3-.git,2021-01-21 13:54:37+00:00,,0,Jun0951/Multiplier-in-GF-2-3-,331643659,SystemVerilog,Multiplier-in-GF-2-3-,3,0,2021-01-21 14:03:06+00:00,[],None
510,https://github.com/isVicjiar/multiplier.git,2021-01-21 22:30:07+00:00,,0,isVicjiar/multiplier,331772116,SystemVerilog,multiplier,0,0,2021-02-04 19:32:14+00:00,[],None
511,https://github.com/ImanHosseini/FPGA_fun.git,2020-11-30 12:57:48+00:00,Playing with my Arty-7 Digilent board,0,ImanHosseini/FPGA_fun,317224271,SystemVerilog,FPGA_fun,6,0,2020-12-01 21:20:36+00:00,"['verilog', 'fpga', 'xilinx', 'uart', 'hdl']",None
512,https://github.com/usluonur/Protocol_Specific_VIPs.git,2020-12-30 14:05:45+00:00,,0,usluonur/Protocol_Specific_VIPs,325565928,SystemVerilog,Protocol_Specific_VIPs,8,0,2021-02-14 19:49:11+00:00,[],None
513,https://github.com/Gagandheep/Digital-Logic-Designs.git,2021-01-07 18:31:26+00:00,Digital logic designs and testbenches written in Verilog/SystemVerilog HDL.,0,Gagandheep/Digital-Logic-Designs,327694388,SystemVerilog,Digital-Logic-Designs,11,0,2021-01-07 18:38:41+00:00,[],None
514,https://github.com/emil151997/Crossbar_implementation.git,2021-03-01 19:22:32+00:00,Test Task Syntacore,0,emil151997/Crossbar_implementation,343531192,SystemVerilog,Crossbar_implementation,115,0,2021-03-02 19:36:58+00:00,[],None
515,https://github.com/apth3hack3r/Beverage-Vending-Machine.git,2021-02-25 12:11:40+00:00,Simple Vending Machine Implementation in Verilog,0,apth3hack3r/Beverage-Vending-Machine,342232981,SystemVerilog,Beverage-Vending-Machine,2,0,2021-02-25 12:13:05+00:00,[],None
516,https://github.com/pbhowmik05/UVM_Practice.git,2021-03-05 07:20:44+00:00,the is the base UVM to apply for different models,0,pbhowmik05/UVM_Practice,344727863,SystemVerilog,UVM_Practice,3,0,2021-03-05 07:24:21+00:00,['verification'],None
517,https://github.com/felipelisboa-ml/RISC-V-competition.git,2021-03-08 21:31:26+00:00,,1,felipelisboa-ml/RISC-V-competition,345800695,SystemVerilog,RISC-V-competition,40453,0,2021-05-18 15:37:17+00:00,[],
518,https://github.com/MarianoIDC/Lab2.git,2021-03-11 15:39:00+00:00,Lab2,0,MarianoIDC/Lab2,346751330,SystemVerilog,Lab2,17,0,2021-03-18 16:04:47+00:00,[],None
519,https://github.com/OwenJaureguiB/Gumnut_Core.git,2021-03-14 18:29:21+00:00,Implementación en HDL de procesador Gumnut,0,OwenJaureguiB/Gumnut_Core,347719747,SystemVerilog,Gumnut_Core,22,0,2021-03-14 19:04:56+00:00,[],None
520,https://github.com/spencer-tb/arm-sv.git,2021-02-21 15:14:47+00:00,Learning to create a 32-bit arm processor using system-verilog.,0,spencer-tb/arm-sv,340931319,SystemVerilog,arm-sv,1,0,2022-08-15 13:02:44+00:00,[],None
521,https://github.com/ritik11ritik/Fully-Associative-Cache.git,2021-03-18 11:15:18+00:00,,0,ritik11ritik/Fully-Associative-Cache,349043884,SystemVerilog,Fully-Associative-Cache,11,0,2021-03-18 11:27:48+00:00,[],None
522,https://github.com/SpaghettiScritps/simple-FPGA-modules.git,2021-03-18 21:04:12+00:00,A few useful modules for SystemVerilog prototyping,0,SpaghettiScritps/simple-FPGA-modules,349216589,,simple-FPGA-modules,12,0,2022-08-19 21:05:16+00:00,[],None
523,https://github.com/zha71186/Systemverilog.git,2021-03-18 18:03:59+00:00,,0,zha71186/Systemverilog,349171897,SystemVerilog,Systemverilog,0,0,2021-03-18 18:29:49+00:00,[],None
524,https://github.com/surendra55555/UVM_Seq_Driver.git,2021-03-26 11:54:30+00:00,,0,surendra55555/UVM_Seq_Driver,351765877,SystemVerilog,UVM_Seq_Driver,4,0,2021-03-26 11:55:06+00:00,[],None
525,https://github.com/emanci/fibonacci.git,2021-02-07 21:47:11+00:00,32-bit fibonacci generator in SystemVerilog with self-checking testbench,0,emanci/fibonacci,336897093,SystemVerilog,fibonacci,2,0,2021-02-07 21:49:22+00:00,[],None
526,https://github.com/mslinklater/verilog.git,2020-11-19 21:41:34+00:00,Various verilog bits n bobs,0,mslinklater/verilog,314376707,SystemVerilog,verilog,3,0,2022-07-19 21:06:04+00:00,[],https://api.github.com/licenses/bsd-2-clause
527,https://github.com/sportydv00/favor-composition-over-inheritance-even-for-constraints.git,2020-11-29 14:00:55+00:00,constraint mixin/pure virtual class concept,0,sportydv00/favor-composition-over-inheritance-even-for-constraints,316963598,SystemVerilog,favor-composition-over-inheritance-even-for-constraints,32,0,2020-11-29 14:06:26+00:00,[],https://api.github.com/licenses/apache-2.0
528,https://github.com/harel147/FPGA_lab_project.git,2020-11-28 19:29:57+00:00,,0,harel147/FPGA_lab_project,316807317,SystemVerilog,FPGA_lab_project,20557,0,2020-11-28 20:02:30+00:00,[],None
529,https://github.com/rhemm23/551-final-project.git,2020-11-30 17:01:23+00:00,,0,rhemm23/551-final-project,317290483,SystemVerilog,551-final-project,8195,0,2020-12-26 02:04:41+00:00,[],None
530,https://github.com/jnestor/sr_pq.git,2020-12-18 15:57:58+00:00,Shift Register Hardware Priority Queue,0,jnestor/sr_pq,322639998,SystemVerilog,sr_pq,4,0,2020-12-21 23:38:10+00:00,[],None
531,https://github.com/Smellnefty/fpga-project.git,2020-12-25 21:10:38+00:00,,0,Smellnefty/fpga-project,324433685,SystemVerilog,fpga-project,7467,0,2020-12-28 11:16:22+00:00,[],None
532,https://github.com/ritik11ritik/Arithmetic-and-Logical-Unit-ALU-using-Verilog-HDL.git,2020-12-26 05:47:29+00:00,,0,ritik11ritik/Arithmetic-and-Logical-Unit-ALU-using-Verilog-HDL,324490638,SystemVerilog,Arithmetic-and-Logical-Unit-ALU-using-Verilog-HDL,9,0,2020-12-27 06:12:18+00:00,[],None
533,https://github.com/amirhnazeri/Pipelined-MIPS.git,2020-12-25 14:12:49+00:00,,0,amirhnazeri/Pipelined-MIPS,324374952,SystemVerilog,Pipelined-MIPS,55,0,2020-12-25 14:14:06+00:00,[],None
534,https://github.com/qpalzmm22/pongGame.git,2020-12-18 12:27:35+00:00,with Verilog,0,qpalzmm22/pongGame,322588948,SystemVerilog,pongGame,114,0,2020-12-18 12:30:45+00:00,[],None
535,https://github.com/aj40/CPE133Project.git,2020-11-16 18:05:33+00:00,A stopwatch using Basys 3 board and System Verilog,0,aj40/CPE133Project,313386465,SystemVerilog,CPE133Project,48,0,2020-11-29 10:10:23+00:00,[],None
536,https://github.com/jomero-hex/FIFO-with-Data-Width-Conversion.git,2020-12-11 08:09:24+00:00,,0,jomero-hex/FIFO-with-Data-Width-Conversion,320508610,SystemVerilog,FIFO-with-Data-Width-Conversion,330,0,2020-12-17 22:42:23+00:00,[],None
537,https://github.com/nuaajc-lab107/PCDemo.git,2020-12-11 08:23:59+00:00,2019FPGA，2020嵌入式上位机程序,0,nuaajc-lab107/PCDemo,320511881,SystemVerilog,PCDemo,112563,0,2020-12-11 08:43:26+00:00,[],None
538,https://github.com/medeirosgabriel/verilog.git,2021-01-04 12:47:23+00:00,,0,medeirosgabriel/verilog,326681545,SystemVerilog,verilog,15,0,2021-05-15 15:37:26+00:00,[],None
539,https://github.com/Rafa350/fpga-uart.git,2021-01-08 20:32:27+00:00,UART implementation for my RISCV project,0,Rafa350/fpga-uart,328006126,SystemVerilog,fpga-uart,9,0,2021-01-10 14:47:48+00:00,"['fpga', 'verilog', 'soc', 'uart']",None
540,https://github.com/Art-007/Early-Debouncer.git,2021-01-10 23:21:30+00:00,,0,Art-007/Early-Debouncer,328499927,SystemVerilog,Early-Debouncer,285,0,2021-01-10 23:33:12+00:00,[],None
541,https://github.com/puti2018/test.git,2020-11-26 09:46:45+00:00,,0,puti2018/test,316186168,SystemVerilog,test,2,0,2021-02-22 08:06:37+00:00,[],None
542,https://github.com/fontans2/vlsi_project4.git,2020-11-22 17:59:08+00:00,,0,fontans2/vlsi_project4,315099618,SystemVerilog,vlsi_project4,18952,0,2020-11-22 18:07:45+00:00,[],None
543,https://github.com/jomero-hex/ROM-Based-Temp.-Conversion.git,2020-12-11 08:05:35+00:00,,0,jomero-hex/ROM-Based-Temp.-Conversion,320507764,SystemVerilog,ROM-Based-Temp.-Conversion,9,0,2020-12-22 19:11:51+00:00,[],None
544,https://github.com/Art-007/Hardware-Chasing-LEDs.git,2021-01-04 02:15:01+00:00,,0,Art-007/Hardware-Chasing-LEDs,326545759,SystemVerilog,Hardware-Chasing-LEDs,353,0,2021-01-04 02:36:53+00:00,[],None
545,https://github.com/adamherrmann-ie/edaPlayground.git,2021-03-06 21:37:29+00:00,,0,adamherrmann-ie/edaPlayground,345200638,SystemVerilog,edaPlayground,3,0,2023-09-15 20:26:57+00:00,[],None
546,https://github.com/apfusco/ECE-551-Digital-Audio-Equalizer.git,2021-03-12 03:06:24+00:00,,0,apfusco/ECE-551-Digital-Audio-Equalizer,346918372,SystemVerilog,ECE-551-Digital-Audio-Equalizer,113,0,2021-03-12 03:06:45+00:00,[],None
547,https://github.com/GeorgeKef-School-Projects/fpga_score_4.git,2021-03-29 18:34:30+00:00,"Course: VLSI. The main objective of this project was the implementation of the well-known score_4 game on FPGA. Also, in this project both the results of each players' moves and the status of the game(win/lose/draw) had to be displayed on a monitor through VGA. In this repository you can find both the module for the gameplay but also a test bench that is mainly created from the director of the course.",0,GeorgeKef-School-Projects/fpga_score_4,352747146,SystemVerilog,fpga_score_4,5,0,2022-05-24 17:07:57+00:00,[],None
548,https://github.com/cturgeon/SystemVerilogProject.git,2021-01-13 19:50:36+00:00,,0,cturgeon/SystemVerilogProject,329415606,SystemVerilog,SystemVerilogProject,17,0,2021-01-13 19:56:48+00:00,[],None
549,https://github.com/JeffG-robot/Image-Decompression.git,2021-01-17 23:24:23+00:00,,0,JeffG-robot/Image-Decompression,330507081,SystemVerilog,Image-Decompression,7,0,2021-01-17 23:30:19+00:00,[],None
550,https://github.com/quangphan2405/yapp_router.git,2021-01-12 05:21:35+00:00,Design and verify a YAPP router using UVM methodology,1,quangphan2405/yapp_router,328880633,SystemVerilog,yapp_router,122,0,2021-01-24 21:59:27+00:00,[],None
551,https://github.com/JelenaVujakovic/esl.git,2021-01-12 16:21:35+00:00,,0,JelenaVujakovic/esl,329044003,SystemVerilog,esl,12483,0,2021-01-12 16:29:31+00:00,[],None
552,https://github.com/raymondx3759/serial-protocols-SV.git,2021-01-26 03:20:43+00:00,,0,raymondx3759/serial-protocols-SV,332958273,SystemVerilog,serial-protocols-SV,336,0,2021-01-26 04:48:18+00:00,[],None
553,https://github.com/Christian-Henke/ece554_miniproject.git,2021-01-27 00:48:16+00:00,"This may be a description, but if it is, it is not a very descriptive one.",0,Christian-Henke/ece554_miniproject,333259524,SystemVerilog,ece554_miniproject,517,0,2021-02-15 21:48:14+00:00,[],None
554,https://github.com/rag1404/uvm_error_quit_simulation.git,2021-02-02 06:00:08+00:00,A program to demonstrate different ways to quit simulation based on UVM_ERROR !,0,rag1404/uvm_error_quit_simulation,335185140,SystemVerilog,uvm_error_quit_simulation,8,0,2021-02-02 06:32:07+00:00,[],None
555,https://github.com/Radiophantom/mem_checker.git,2021-02-06 19:23:35+00:00,,0,Radiophantom/mem_checker,336618081,SystemVerilog,mem_checker,361,0,2021-02-19 07:45:34+00:00,[],None
556,https://github.com/T-Venkatesh/Verification-of-fifo-using-sv.git,2021-02-26 07:56:10+00:00,,0,T-Venkatesh/Verification-of-fifo-using-sv,342503203,SystemVerilog,Verification-of-fifo-using-sv,18,0,2021-02-26 08:05:23+00:00,[],https://api.github.com/licenses/lgpl-2.1
557,https://github.com/aprinjha/ECE385_FinalProject.git,2021-02-27 17:36:39+00:00,,0,aprinjha/ECE385_FinalProject,342917864,SystemVerilog,ECE385_FinalProject,14,0,2021-02-27 19:14:02+00:00,[],None
558,https://github.com/RnkC/SyNC.git,2021-02-28 13:15:29+00:00,,0,RnkC/SyNC,343109489,SystemVerilog,SyNC,8476,0,2021-07-22 11:00:32+00:00,[],https://api.github.com/licenses/gpl-3.0
559,https://github.com/alexandruostafi/TSC_Lab.git,2021-02-24 14:57:11+00:00,,0,alexandruostafi/TSC_Lab,341935259,SystemVerilog,TSC_Lab,351,0,2021-04-20 21:32:52+00:00,[],None
560,https://github.com/SorinMiron/TSC_Lab.git,2021-02-24 16:31:07+00:00,,0,SorinMiron/TSC_Lab,341963360,SystemVerilog,TSC_Lab,8349,0,2021-04-17 19:54:21+00:00,[],None
561,https://github.com/george-hcc/sv-workshop.git,2021-03-04 19:37:32+00:00,A small collection of SystemVerilog blocks built between 2018 and 2019 for learning purposes.,0,george-hcc/sv-workshop,344588639,SystemVerilog,sv-workshop,55,0,2021-03-04 20:23:57+00:00,[],None
562,https://github.com/Tyler1T/Lab-3.git,2021-03-05 21:44:33+00:00,,0,Tyler1T/Lab-3,344941734,SystemVerilog,Lab-3,284,0,2021-03-22 01:28:18+00:00,[],None
563,https://github.com/mowaida/DecisionTrees.git,2021-03-17 15:26:44+00:00,,0,mowaida/DecisionTrees,348758908,SystemVerilog,DecisionTrees,39,0,2021-03-17 15:26:57+00:00,[],https://api.github.com/licenses/gpl-3.0
564,https://github.com/spdy1895/sv_hdl.git,2021-03-19 17:58:39+00:00,,1,spdy1895/sv_hdl,349511961,SystemVerilog,sv_hdl,561,0,2021-05-25 12:20:43+00:00,[],None
565,https://github.com/mfkiwl/MY_RISCV.git,2021-03-25 15:26:25+00:00,,0,mfkiwl/MY_RISCV,351484804,,MY_RISCV,3445,0,2021-03-28 06:00:39+00:00,[],
566,https://github.com/glkclass/rtl_example.git,2021-02-23 09:16:34+00:00,,0,glkclass/rtl_example,341495607,SystemVerilog,rtl_example,538,0,2022-09-14 16:22:41+00:00,[],None
567,https://github.com/davideschiavone/cv32e40davide.git,2021-02-23 09:17:44+00:00,,1,davideschiavone/cv32e40davide,341495904,SystemVerilog,cv32e40davide,5441,0,2021-02-23 09:22:33+00:00,[],
568,https://github.com/clsandoval/cs_21_project.git,2021-03-15 11:45:54+00:00,CS 21 Course Final Project,0,clsandoval/cs_21_project,347947414,SystemVerilog,cs_21_project,315,0,2021-08-17 11:59:38+00:00,[],None
569,https://github.com/rag1404/uvm_set_report_macros.svh.git,2021-01-19 06:01:33+00:00,A Simple program to demonstrate the capabilities of uvm_set_report macros !,0,rag1404/uvm_set_report_macros.svh,330880059,SystemVerilog,uvm_set_report_macros.svh,9,0,2021-01-22 02:29:46+00:00,[],None
570,https://github.com/XuZhang480/HomeAutomation.git,2021-02-20 01:52:05+00:00,The assignment of hardware design course.,0,XuZhang480/HomeAutomation,340536107,SystemVerilog,HomeAutomation,4455,0,2021-04-09 08:28:49+00:00,[],None
571,https://github.com/Engr315/P4_Popcount.git,2021-02-19 15:54:56+00:00,,0,Engr315/P4_Popcount,340417711,SystemVerilog,P4_Popcount,11320,0,2022-09-16 15:50:08+00:00,[],None
572,https://github.com/rtldesignlabs/debouncer.git,2021-02-21 19:09:52+00:00,Debouncer core for FPGA inputs,0,rtldesignlabs/debouncer,340981869,SystemVerilog,debouncer,3622,0,2021-05-09 09:36:25+00:00,[],None
573,https://github.com/LuyangLee/fpga_demo.git,2021-03-01 09:02:03+00:00,,0,LuyangLee/fpga_demo,343351196,SystemVerilog,fpga_demo,1,0,2021-03-01 09:08:19+00:00,[],None
574,https://github.com/mahmoudabdelhadii/Lab4.git,2021-03-18 00:34:18+00:00,,0,mahmoudabdelhadii/Lab4,348892545,SystemVerilog,Lab4,24920,0,2022-02-23 23:40:02+00:00,[],None
575,https://github.com/danjapapajani/computer-hardware.git,2021-01-20 01:07:25+00:00,"Labs for ECE342, Winter 2019",0,danjapapajani/computer-hardware,331153908,SystemVerilog,computer-hardware,307,0,2021-01-20 01:46:52+00:00,[],None
576,https://github.com/alkimonen/Emergency-Elevator-Simulator.git,2021-02-11 11:45:43+00:00,,0,alkimonen/Emergency-Elevator-Simulator,338013451,SystemVerilog,Emergency-Elevator-Simulator,1892,0,2021-04-08 14:04:45+00:00,[],None
577,https://github.com/yvantor/wide_alu_ip.git,2021-03-09 16:39:13+00:00,,0,yvantor/wide_alu_ip,346074122,SystemVerilog,wide_alu_ip,11,0,2021-11-28 17:14:26+00:00,[],None
578,https://github.com/Ytm0316/vsdfinal.git,2021-01-04 17:32:16+00:00,,0,Ytm0316/vsdfinal,326759433,SystemVerilog,vsdfinal,1,0,2021-01-04 17:34:59+00:00,[],None
579,https://github.com/VladislavProzhirko/activecore_cpu_log.git,2020-12-30 17:48:16+00:00,,0,VladislavProzhirko/activecore_cpu_log,325613251,SystemVerilog,activecore_cpu_log,9926,0,2021-01-02 11:52:19+00:00,[],None
580,https://github.com/umutZeren/MIPS-ARCHITECTURE-IN-SV.git,2020-12-29 11:45:17+00:00,Implementing MIPS Arhitecture in System verilog.Can be test with modelsim,0,umutZeren/MIPS-ARCHITECTURE-IN-SV,325271963,SystemVerilog,MIPS-ARCHITECTURE-IN-SV,5,0,2020-12-29 11:46:41+00:00,[],None
581,https://github.com/rag1404/uvm_tlm_ports_part1.git,2021-01-15 05:09:42+00:00,A Simple program to communicate between uvm components ,0,rag1404/uvm_tlm_ports_part1,329814793,SystemVerilog,uvm_tlm_ports_part1,14,0,2021-01-15 08:25:07+00:00,[],None
582,https://github.com/mattsini1/i2s_microphone.git,2021-03-22 16:10:17+00:00,,0,mattsini1/i2s_microphone,350407779,SystemVerilog,i2s_microphone,1,0,2021-03-22 16:10:35+00:00,[],None
583,https://github.com/erik-fox/Cache-Project.git,2021-03-22 18:51:01+00:00,,0,erik-fox/Cache-Project,350454899,SystemVerilog,Cache-Project,252,0,2021-03-22 18:51:56+00:00,[],None
584,https://github.com/jackgronenthal/doodle_jump.git,2021-01-28 17:28:29+00:00,,0,jackgronenthal/doodle_jump,333833423,SystemVerilog,doodle_jump,1456,0,2021-01-28 17:40:59+00:00,[],None
585,https://github.com/alexjmck/elec374.git,2021-01-29 19:41:23+00:00,,0,alexjmck/elec374,334246053,SystemVerilog,elec374,50,0,2021-03-08 14:01:35+00:00,[],None
586,https://github.com/BourgeoisLenin/ece554_miniproject.git,2021-01-26 23:14:41+00:00,,0,BourgeoisLenin/ece554_miniproject,333243112,SystemVerilog,ece554_miniproject,4396,0,2021-02-16 23:30:57+00:00,[],None
587,https://github.com/zachchanak/ece554_miniproject-.git,2021-01-27 00:26:34+00:00,,0,zachchanak/ece554_miniproject-,333255638,SystemVerilog,ece554_miniproject-,4251,0,2021-01-27 00:39:03+00:00,[],None
588,https://github.com/lyftfc/vitis-rtl-kernel-example.git,2021-03-03 10:56:33+00:00,,0,lyftfc/vitis-rtl-kernel-example,344095023,SystemVerilog,vitis-rtl-kernel-example,11,0,2021-03-03 10:57:13+00:00,[],None
589,https://github.com/YirenZzz/ECE342.git,2021-03-03 20:17:42+00:00,Computer Hardware,0,YirenZzz/ECE342,344252676,SystemVerilog,ECE342,4972,0,2021-03-03 20:35:43+00:00,[],None
590,https://github.com/anouar-saliheddine/cva6.git,2021-02-03 23:07:32+00:00,,0,anouar-saliheddine/cva6,335779699,SystemVerilog,cva6,38075,0,2021-02-03 23:10:33+00:00,[],
591,https://github.com/cezaraluca/-cezaraluca-Lab_TSC.git,2021-03-10 15:06:20+00:00,,0,cezaraluca/-cezaraluca-Lab_TSC,346395116,SystemVerilog,-cezaraluca-Lab_TSC,8418,0,2021-04-21 11:06:16+00:00,[],None
592,https://github.com/thao-n/UART.git,2021-03-29 13:50:24+00:00,,0,thao-n/UART,352660352,SystemVerilog,UART,3,0,2021-03-29 13:51:01+00:00,[],None
593,https://github.com/slayterteal/Pipeline-ARM-Implementation.git,2021-03-23 01:00:15+00:00,,0,slayterteal/Pipeline-ARM-Implementation,350536305,SystemVerilog,Pipeline-ARM-Implementation,1168,0,2021-04-09 15:22:41+00:00,[],None
594,https://github.com/CleopatraShao/ALU_32.git,2021-03-24 06:31:38+00:00,Fudan 计算机体系结构实验lab1,0,CleopatraShao/ALU_32,350971054,SystemVerilog,ALU_32,10,0,2022-04-20 01:45:34+00:00,[],https://api.github.com/licenses/apache-2.0
595,https://github.com/y-kim/memtester-sv.git,2021-03-24 01:18:03+00:00,SystemVerilog implementation of memtester 4,1,y-kim/memtester-sv,350907137,SystemVerilog,memtester-sv,16,0,2021-11-04 07:09:57+00:00,[],https://api.github.com/licenses/gpl-2.0
596,https://github.com/ItaruKawakomo/hdl.git,2020-12-08 18:29:01+00:00,,0,ItaruKawakomo/hdl,319726351,SystemVerilog,hdl,8,0,2021-02-15 15:31:00+00:00,[],https://api.github.com/licenses/mit
597,https://github.com/shrutimathurvlsi/test_repo.git,2020-11-16 19:48:22+00:00,,0,shrutimathurvlsi/test_repo,313410337,SystemVerilog,test_repo,2,0,2020-11-16 20:14:52+00:00,[],None
598,https://github.com/nickkochlowski/arm_with_nn_module.git,2020-11-15 03:30:57+00:00,,0,nickkochlowski/arm_with_nn_module,312950478,SystemVerilog,arm_with_nn_module,37,0,2020-12-09 14:36:03+00:00,[],None
599,https://github.com/meetm81193/uvm_env.git,2020-11-29 08:17:25+00:00,"This project includes creation of beginner level verification enviornement using UVM methodolgy. Here a design is simple up down counter. Main aim is to learn use of different UVM consturcts, method and component.",0,meetm81193/uvm_env,316905497,SystemVerilog,uvm_env,147,0,2020-11-29 10:06:50+00:00,[],None
600,https://github.com/husemoller/ECE_551_MazeRunner.git,2020-11-30 16:31:28+00:00,,1,husemoller/ECE_551_MazeRunner,317282789,SystemVerilog,ECE_551_MazeRunner,98,0,2020-12-08 21:52:12+00:00,[],None
601,https://github.com/yufat48/PD.git,2021-01-19 19:21:38+00:00,,0,yufat48/PD,331085284,SystemVerilog,PD,1,0,2021-01-21 05:28:07+00:00,[],None
602,https://github.com/pragya77/Adder-design-SystemVerilog.git,2021-01-17 21:55:21+00:00,,0,pragya77/Adder-design-SystemVerilog,330494386,SystemVerilog,Adder-design-SystemVerilog,6,0,2021-02-26 14:19:24+00:00,[],None
603,https://github.com/beratkizilarmut/ELM234-Projects.git,2021-02-18 10:26:57+00:00,ELM234 - Logic Circuits Lecture Personal Works,0,beratkizilarmut/ELM234-Projects,340013459,SystemVerilog,ELM234-Projects,5017,0,2021-02-18 13:22:47+00:00,[],None
604,https://github.com/CorradoBonfanti/wide_alu.git,2021-02-19 16:39:39+00:00,fullstack_ip_integration_ex,0,CorradoBonfanti/wide_alu,340429549,SystemVerilog,wide_alu,18,0,2021-02-22 01:34:39+00:00,[],None
605,https://github.com/Mohamed-320/AMBA3_APB_Verification-Using-UVM.git,2021-02-14 00:17:03+00:00,,0,Mohamed-320/AMBA3_APB_Verification-Using-UVM,338697752,SystemVerilog,AMBA3_APB_Verification-Using-UVM,689,0,2022-02-21 20:30:41+00:00,[],None
606,https://github.com/irwinfrimpong/ece416_irwin_adam_mithil.git,2021-02-11 18:32:42+00:00,ECE 416 - Advanced Digital Design and Verification Lab files ,0,irwinfrimpong/ece416_irwin_adam_mithil,338117029,SystemVerilog,ece416_irwin_adam_mithil,116654,0,2021-05-28 19:18:09+00:00,[],None
607,https://github.com/tiffanishilts/Rojobot.git,2021-02-15 02:05:12+00:00,ECE 540 project two,0,tiffanishilts/Rojobot,338945553,SystemVerilog,Rojobot,795747,0,2022-10-06 05:25:42+00:00,[],None
608,https://github.com/basilmahmood/EECS4612-Proj2-Verilog.git,2021-03-14 01:47:13+00:00,,0,basilmahmood/EECS4612-Proj2-Verilog,347520786,SystemVerilog,EECS4612-Proj2-Verilog,46,0,2021-03-16 02:07:18+00:00,[],None
609,https://github.com/billythedummy/zhoot.git,2021-03-09 14:24:59+00:00,Arcade style shooter made for the DE1_SoC,0,billythedummy/zhoot,346032798,SystemVerilog,zhoot,342,0,2021-04-12 19:07:34+00:00,[],None
610,https://github.com/eedd778/IC2021.git,2021-03-24 01:56:00+00:00,,0,eedd778/IC2021,350914686,SystemVerilog,IC2021,87,0,2021-03-24 01:57:16+00:00,[],None
611,https://github.com/pro100valeo/Example-.git,2021-03-26 20:34:46+00:00,,0,pro100valeo/Example-,351905577,SystemVerilog,Example-,12,0,2021-03-26 22:20:19+00:00,[],None
612,https://github.com/ritik11ritik/FIFO-design-using-Verilog-HDL.git,2020-12-26 05:30:17+00:00,,0,ritik11ritik/FIFO-design-using-Verilog-HDL,324488418,SystemVerilog,FIFO-design-using-Verilog-HDL,10,0,2021-02-11 05:45:29+00:00,[],None
613,https://github.com/Chlorophytus/leopard.git,2020-12-22 16:38:03+00:00,Arty A7 VGA rendering tests,0,Chlorophytus/leopard,323680173,SystemVerilog,leopard,12,0,2021-01-26 12:09:29+00:00,[],https://api.github.com/licenses/mit
614,https://github.com/jomero-hex/Parameterized-Barrel-Shifter.git,2020-12-11 07:10:00+00:00,,0,jomero-hex/Parameterized-Barrel-Shifter,320495577,SystemVerilog,Parameterized-Barrel-Shifter,56,0,2020-12-17 03:41:52+00:00,[],None
615,https://github.com/Ahmed23Adel/Stop_watch.git,2020-12-25 14:44:55+00:00,,0,Ahmed23Adel/Stop_watch,324380034,SystemVerilog,Stop_watch,12,0,2021-09-29 12:52:11+00:00,[],None
616,https://github.com/ritik11ritik/Car_Parking_System-Using-Verilog.git,2020-12-26 16:49:31+00:00,,0,ritik11ritik/Car_Parking_System-Using-Verilog,324596897,SystemVerilog,Car_Parking_System-Using-Verilog,75,0,2021-02-11 05:44:54+00:00,[],None
617,https://github.com/vthota3/OCPP.git,2021-01-02 03:41:15+00:00,This Project is on OCPP for EV's ,0,vthota3/OCPP,326102320,SystemVerilog,OCPP,2,0,2021-01-02 04:02:29+00:00,[],None
618,https://github.com/Tyler1T/ComputerArchitectureLab.git,2021-01-22 21:51:01+00:00,,0,Tyler1T/ComputerArchitectureLab,332070454,SystemVerilog,ComputerArchitectureLab,3236,0,2021-04-09 21:32:25+00:00,[],None
619,https://github.com/DiKev/554Mini.git,2021-01-29 00:54:33+00:00,,0,DiKev/554Mini,333997307,SystemVerilog,554Mini,504,0,2021-01-29 03:42:45+00:00,[],None
620,https://github.com/zyleei/mini-pro.git,2021-01-28 21:52:12+00:00,,0,zyleei/mini-pro,333965820,SystemVerilog,mini-pro,115,0,2021-09-06 03:18:44+00:00,[],None
621,https://github.com/ErikFanderson/toolbox-xilinx-examples.git,2021-01-29 01:37:20+00:00,Examples using non-project TCL flow with Xilinx Vivado software,0,ErikFanderson/toolbox-xilinx-examples,334005085,SystemVerilog,toolbox-xilinx-examples,97,0,2021-10-11 02:09:23+00:00,[],None
622,https://github.com/abfouts/S20_ECE351.git,2021-02-03 20:31:43+00:00,Portland State University ECE 351 - System Verilog,0,abfouts/S20_ECE351,335746918,SystemVerilog,S20_ECE351,23120,0,2021-02-03 20:43:26+00:00,[],None
623,https://github.com/dahandave/VSCode-Training.git,2020-12-12 10:17:52+00:00,,0,dahandave/VSCode-Training,320802155,SystemVerilog,VSCode-Training,1,0,2020-12-14 23:41:15+00:00,[],None
624,https://github.com/erik-fox/N-bit-divider-and-FP-package.git,2021-02-11 20:20:51+00:00,,0,erik-fox/N-bit-divider-and-FP-package,338142827,SystemVerilog,N-bit-divider-and-FP-package,49,0,2021-02-23 02:23:21+00:00,[],None
625,https://github.com/GCET231/tut3-simulacao-hdl.git,2021-02-19 20:52:08+00:00,Tutoriais de Simulação,0,GCET231/tut3-simulacao-hdl,340486717,SystemVerilog,tut3-simulacao-hdl,4118,0,2022-09-07 20:21:13+00:00,[],None
626,https://github.com/arkhan91/auriga.git,2021-01-15 09:23:45+00:00,,0,arkhan91/auriga,329865406,SystemVerilog,auriga,397,0,2023-08-10 07:15:01+00:00,[],https://api.github.com/licenses/mit
627,https://github.com/rag1404/uvm_tlm_ports_part2.git,2021-01-15 07:44:15+00:00,UVM analysis exports and imp ports,0,rag1404/uvm_tlm_ports_part2,329843069,SystemVerilog,uvm_tlm_ports_part2,4,0,2022-02-08 02:40:23+00:00,[],None
628,https://github.com/shilei-massclouds/msoc.git,2021-01-07 07:24:21+00:00,risc-v soc experiment,0,shilei-massclouds/msoc,327535228,SystemVerilog,msoc,15897,0,2023-04-25 02:00:14+00:00,[],https://api.github.com/licenses/gpl-2.0
629,https://github.com/gitred-e/system_verilog.git,2020-12-13 16:58:58+00:00,Some example environment codes,0,gitred-e/system_verilog,321114901,SystemVerilog,system_verilog,9,0,2020-12-13 17:12:50+00:00,[],None
630,https://github.com/Dharmendradp/System-Verilog.git,2021-02-15 09:52:53+00:00,Basic Programs Related to system Verilog & environments,1,Dharmendradp/System-Verilog,339031807,SystemVerilog,System-Verilog,49,0,2021-02-15 10:26:01+00:00,[],None
631,https://github.com/BourgeoisLenin/Team10Minilab6.git,2021-02-16 16:28:34+00:00,,0,BourgeoisLenin/Team10Minilab6,339459890,SystemVerilog,Team10Minilab6,714,0,2021-02-17 05:31:38+00:00,[],None
632,https://github.com/thomas-lykouras/DVLSI-Perceptron.git,2021-02-14 03:59:02+00:00,,0,thomas-lykouras/DVLSI-Perceptron,338725079,SystemVerilog,DVLSI-Perceptron,20,0,2021-04-12 20:53:56+00:00,[],None
633,https://github.com/MorgalNikita/fifo.git,2021-02-17 20:36:00+00:00,,0,MorgalNikita/fifo,339849178,SystemVerilog,fifo,10,0,2021-02-19 09:14:45+00:00,[],None
634,https://github.com/erik-fox/Pipelined-N-bit-divider-Structs-and-Unions.git,2021-02-17 19:56:01+00:00,,0,erik-fox/Pipelined-N-bit-divider-Structs-and-Unions,339840102,SystemVerilog,Pipelined-N-bit-divider-Structs-and-Unions,43,0,2021-02-23 02:25:44+00:00,[],None
635,https://github.com/ybryan3/ARM-CPU-Diagnostic-Program.git,2020-11-16 07:05:14+00:00,B EE 425 Microprocessor System Design Lab,0,ybryan3/ARM-CPU-Diagnostic-Program,313217234,SystemVerilog,ARM-CPU-Diagnostic-Program,904,0,2020-11-16 07:31:09+00:00,"['arm', 'systemverilog', 'lab', 'quartus-prime']",None
636,https://github.com/risapav/blinky.git,2020-11-17 15:26:15+00:00,FPGA AC608 demo app,0,risapav/blinky,313661133,SystemVerilog,blinky,13281,0,2020-11-25 17:16:46+00:00,[],https://api.github.com/licenses/mit
637,https://github.com/ctrunkett/LogicAnalyzer.git,2020-11-18 21:59:54+00:00,Verilog/SystemVerilog logic analyzer,0,ctrunkett/LogicAnalyzer,314068355,SystemVerilog,LogicAnalyzer,57,0,2020-11-18 22:03:38+00:00,[],None
638,https://github.com/PangTiger/TinyCPULab.git,2020-11-29 09:01:20+00:00,,0,PangTiger/TinyCPULab,316912305,SystemVerilog,TinyCPULab,3055,0,2021-02-03 15:52:56+00:00,[],None
639,https://github.com/ProgrammingVibes/4DM4lab4.git,2020-11-25 14:05:38+00:00,,1,ProgrammingVibes/4DM4lab4,315957510,SystemVerilog,4DM4lab4,27,0,2020-12-07 20:41:24+00:00,[],None
640,https://github.com/chocola-mint/Dance-Invaders.git,2020-12-02 06:23:23+00:00,Final project for the course Logic Design Laboratory (2020 Fall),0,chocola-mint/Dance-Invaders,317769846,SystemVerilog,Dance-Invaders,243658,0,2023-01-28 10:40:24+00:00,[],None
641,https://github.com/varunsax12/single_cycle_mips.git,2021-02-27 10:46:39+00:00,Implementation of 32-bit single cycle MIPS processor,0,varunsax12/single_cycle_mips,342832793,SystemVerilog,single_cycle_mips,11,0,2022-07-17 03:21:13+00:00,[],None
642,https://github.com/quangphan2405/switch.git,2021-01-08 19:48:11+00:00,Create verification components for a simplified 4-port switch design using SystemVerilog,1,quangphan2405/switch,327997689,SystemVerilog,switch,21,0,2022-05-31 07:05:52+00:00,[],None
643,https://github.com/OwenHoffend/sc_sim.git,2021-01-23 05:27:52+00:00,A Python utility for analyzing stochastic circuit designs,0,OwenHoffend/sc_sim,332135041,SystemVerilog,sc_sim,796,0,2023-02-16 20:59:55+00:00,[],https://api.github.com/licenses/mit
644,https://github.com/laula27/Asic_Design.git,2021-01-30 19:42:32+00:00,,0,laula27/Asic_Design,334497039,SystemVerilog,Asic_Design,1801,0,2021-12-19 22:31:19+00:00,[],None
645,https://github.com/jackkot/modelsim_templates.git,2021-02-05 09:26:26+00:00,,0,jackkot/modelsim_templates,336223766,SystemVerilog,modelsim_templates,26,0,2021-02-05 09:28:22+00:00,[],None
646,https://github.com/mattsini1/wide_alu_ip.git,2021-02-08 18:32:57+00:00,,0,mattsini1/wide_alu_ip,337171936,SystemVerilog,wide_alu_ip,10,0,2021-02-08 18:36:16+00:00,[],None
647,https://github.com/rag1404/uvm_messaging_verbosity.git,2021-01-17 23:08:29+00:00,Lets take a look at the uvm_verbosity definitions ,0,rag1404/uvm_messaging_verbosity,330504979,SystemVerilog,uvm_messaging_verbosity,12,0,2021-01-22 02:31:17+00:00,[],None
648,https://github.com/lookout1992/uvm-first-part.git,2021-01-05 08:11:51+00:00,UVM平台第一部分可以使用的验证平台,1,lookout1992/uvm-first-part,326930762,SystemVerilog,uvm-first-part,6,0,2021-01-21 14:24:31+00:00,[],None
649,https://github.com/alina-andreevna/uvm_training.git,2021-01-24 16:22:16+00:00,,0,alina-andreevna/uvm_training,332496172,SystemVerilog,uvm_training,34,0,2022-01-09 14:50:02+00:00,[],None
650,https://github.com/ECE581-2021-WINTER/synth_repo_14nm_bak.git,2021-01-24 17:16:30+00:00,,0,ECE581-2021-WINTER/synth_repo_14nm_bak,332508432,SystemVerilog,synth_repo_14nm_bak,1433,0,2021-01-25 01:25:53+00:00,[],None
651,https://github.com/nickHayden1/ece554_miniproject.git,2021-01-27 01:00:23+00:00,,0,nickHayden1/ece554_miniproject,333261812,SystemVerilog,ece554_miniproject,626,0,2021-01-28 02:34:10+00:00,[],None
652,https://github.com/MolnarSzabolcsGit/TSC_LAB.git,2021-03-03 16:30:41+00:00,,0,MolnarSzabolcsGit/TSC_LAB,344191342,SystemVerilog,TSC_LAB,8008,0,2021-04-20 20:04:28+00:00,[],None
653,https://github.com/Engr315/P6_DMA_Popcount.git,2021-03-22 19:26:19+00:00,,0,Engr315/P6_DMA_Popcount,350464118,SystemVerilog,P6_DMA_Popcount,11348,0,2022-10-13 14:35:41+00:00,[],None
654,https://github.com/EEESocbitmesra/UART-master.git,2021-02-15 10:15:27+00:00,,2,EEESocbitmesra/UART-master,339037574,SystemVerilog,UART-master,33,0,2021-02-26 14:14:27+00:00,[],None
655,https://github.com/haocheng1230/ECE554_Spring2021.git,2021-02-12 12:22:06+00:00,,0,haocheng1230/ECE554_Spring2021,338311552,SystemVerilog,ECE554_Spring2021,244670,0,2021-02-12 13:36:13+00:00,[],None
656,https://github.com/vwsandhya/vw-gitwork.git,2021-02-15 11:07:10+00:00,my first github work,0,vwsandhya/vw-gitwork,339050634,SystemVerilog,vw-gitwork,2,0,2021-02-15 13:24:40+00:00,[],None
657,https://github.com/neiamenase/DAT410_Assignemnt4.git,2021-02-16 04:14:22+00:00,for data source,0,neiamenase/DAT410_Assignemnt4,339282191,SystemVerilog,DAT410_Assignemnt4,2388,0,2021-02-27 09:51:28+00:00,[],None
658,https://github.com/wabrams/riscv-fpga.git,2021-01-21 21:47:00+00:00,,0,wabrams/riscv-fpga,331763540,SystemVerilog,riscv-fpga,412,0,2021-02-23 02:48:54+00:00,[],None
659,https://github.com/haihai-self/chipyard-cache.git,2021-03-03 12:48:11+00:00,,0,haihai-self/chipyard-cache,344124108,SystemVerilog,chipyard-cache,291,0,2021-05-27 07:41:58+00:00,[],None
660,https://github.com/shrutimathurvlsi/project_repo.git,2020-11-17 03:50:20+00:00,,0,shrutimathurvlsi/project_repo,313500401,SystemVerilog,project_repo,2,0,2020-11-17 04:05:41+00:00,[],None
661,https://github.com/ryanktoeung/Shower_Time.git,2020-12-10 20:27:35+00:00,,0,ryanktoeung/Shower_Time,320382091,SystemVerilog,Shower_Time,80,0,2020-12-10 20:34:42+00:00,[],None
662,https://github.com/jomero-hex/Programmable-Square-Wave-Generator.git,2020-12-11 07:29:41+00:00,,0,jomero-hex/Programmable-Square-Wave-Generator,320499824,SystemVerilog,Programmable-Square-Wave-Generator,3,0,2020-12-17 22:19:36+00:00,[],None
663,https://github.com/georgc4/FPGASlotMachine.git,2020-11-22 19:11:56+00:00,A slot machine implemented with SystemVerilog,0,georgc4/FPGASlotMachine,315112827,SystemVerilog,FPGASlotMachine,243,0,2022-03-20 05:57:25+00:00,[],None
664,https://github.com/christinewoo/HammerFPGA.git,2020-12-09 13:43:10+00:00,"FPGA, VGA, SystemVerilog Final Project",0,christinewoo/HammerFPGA,319968840,SystemVerilog,HammerFPGA,19,0,2022-01-13 22:02:59+00:00,[],None
665,https://github.com/eliyahudev/mannix.git,2020-12-08 16:55:34+00:00,final_project,1,eliyahudev/mannix,319703439,SystemVerilog,mannix,180253,0,2021-12-14 21:35:25+00:00,[],None
666,https://github.com/pastchick3/risc-v-processor-sv.git,2020-12-12 09:20:04+00:00,"A simple RISC-V processor for learning, written in SystemVerilog.",1,pastchick3/risc-v-processor-sv,320792327,SystemVerilog,risc-v-processor-sv,1222,0,2021-01-15 01:21:02+00:00,[],https://api.github.com/licenses/mit
667,https://github.com/dacasanovat/ProyectoFinalSDA.git,2020-12-08 00:13:01+00:00,,0,dacasanovat/ProyectoFinalSDA,319477922,SystemVerilog,ProyectoFinalSDA,2277,0,2020-12-08 00:28:13+00:00,[],None
668,https://github.com/RafaelLaya/cpu.git,2020-12-19 06:02:46+00:00,,0,RafaelLaya/cpu,322778952,SystemVerilog,cpu,2244,0,2021-06-29 19:24:14+00:00,[],https://api.github.com/licenses/mit
669,https://github.com/alisultan14/Human-Reaction-Timer.git,2020-12-28 18:03:03+00:00,"Developed an FPGA-based Reaction Timer device that records and displays human reaction time up to 1 millisecond. Coded in System Verilog, established on the theory of Finite State Machines and implemented on Nexys A7 board.",0,alisultan14/Human-Reaction-Timer,325081586,SystemVerilog,Human-Reaction-Timer,419,0,2020-12-28 18:16:16+00:00,[],None
670,https://github.com/evgeniyBolnov/led_interface.git,2020-12-29 05:12:13+00:00,,0,evgeniyBolnov/led_interface,325192161,SystemVerilog,led_interface,0,0,2020-12-29 06:05:31+00:00,[],None
671,https://github.com/Art-007/Weather-Detection-Temperature-Display.git,2020-12-24 07:44:57+00:00,,0,Art-007/Weather-Detection-Temperature-Display,324097988,SystemVerilog,Weather-Detection-Temperature-Display,20058,0,2021-01-11 18:55:31+00:00,[],None
672,https://github.com/crgrace/psd_chip.git,2020-12-03 00:14:56+00:00,UART for configuring the PSD chip.,0,crgrace/psd_chip,318026366,SystemVerilog,psd_chip,68,0,2021-03-05 17:14:55+00:00,[],None
673,https://github.com/anzaryesbit/bcdGame.git,2020-11-25 21:49:10+00:00,,0,anzaryesbit/bcdGame,316060936,SystemVerilog,bcdGame,584,0,2023-02-16 19:34:20+00:00,[],None
674,https://github.com/Dimonij/A3_task.git,2020-11-25 22:13:47+00:00,,0,Dimonij/A3_task,316064948,SystemVerilog,A3_task,5,0,2020-12-01 20:32:54+00:00,[],None
675,https://github.com/sree-sankar/RISC-V.git,2021-01-08 05:22:02+00:00,,0,sree-sankar/RISC-V,327806503,SystemVerilog,RISC-V,56,0,2021-03-25 05:16:53+00:00,[],None
676,https://github.com/mariaizabella14/TSC_Lab.git,2021-02-24 16:26:21+00:00,,0,mariaizabella14/TSC_Lab,341961994,SystemVerilog,TSC_Lab,603,0,2021-04-15 16:38:37+00:00,[],None
677,https://github.com/60alex60/ECE111_SV_FinalProject_Bitcoin.git,2021-01-24 04:04:39+00:00,,0,60alex60/ECE111_SV_FinalProject_Bitcoin,332363680,SystemVerilog,ECE111_SV_FinalProject_Bitcoin,163,0,2021-01-24 04:05:32+00:00,[],None
678,https://github.com/abfouts/W21_ECE582.git,2021-01-29 19:26:30+00:00,Portland State ECE582 ,0,abfouts/W21_ECE582,334242743,SystemVerilog,W21_ECE582,2721,0,2021-03-08 20:33:42+00:00,[],None
679,https://github.com/dnybodan/RISC_V_PROCESSOR.git,2021-02-22 20:05:09+00:00,"This is the source code for a risc-v type processor including all elements of datapath, control and effective pipelining. It is programmed in System-Verilog and simulated on BASYS FPGA board",0,dnybodan/RISC_V_PROCESSOR,341322571,SystemVerilog,RISC_V_PROCESSOR,5,0,2021-02-22 20:07:43+00:00,[],None
680,https://github.com/LaurentiuB97/TSC_Lab.git,2021-02-24 14:53:31+00:00,,0,LaurentiuB97/TSC_Lab,341934176,SystemVerilog,TSC_Lab,45,0,2021-04-21 12:35:31+00:00,[],None
681,https://github.com/niklad/TFE4152-Simple-digital-camera.git,2021-02-18 20:53:20+00:00,,0,niklad/TFE4152-Simple-digital-camera,340174777,SystemVerilog,TFE4152-Simple-digital-camera,957,0,2022-12-08 17:37:41+00:00,"['spice-simulation', 'verilog', 'vhdl']",None
682,https://github.com/samquiring/EE371Lab5.git,2021-02-21 19:33:58+00:00,,1,samquiring/EE371Lab5,340986580,SystemVerilog,EE371Lab5,31,0,2021-02-25 04:46:33+00:00,[],None
683,https://github.com/wcn2018/3220_a3.git,2021-02-21 20:14:07+00:00,assignment 3 for 3220,1,wcn2018/3220_a3,340994379,SystemVerilog,3220_a3,53234,0,2021-05-09 15:05:45+00:00,[],None
684,https://github.com/hassanrwarraich/Elevator-system-System-Verilog-.git,2021-03-11 16:33:50+00:00,,0,hassanrwarraich/Elevator-system-System-Verilog-,346767864,SystemVerilog,Elevator-system-System-Verilog-,3370,0,2021-03-11 16:39:56+00:00,[],None
685,https://github.com/pragya77/memory-module-using-UVM.git,2021-01-19 21:02:55+00:00,,0,pragya77/memory-module-using-UVM,331108739,SystemVerilog,memory-module-using-UVM,26,0,2021-01-28 17:50:27+00:00,[],None
686,https://github.com/RanaHabib/SystemVerlilog-Projects.git,2020-12-24 16:56:24+00:00,SystemVerlilog-Projects,0,RanaHabib/SystemVerlilog-Projects,324200734,SystemVerilog,SystemVerlilog-Projects,7,0,2022-12-29 21:57:39+00:00,"['system-verilog', 'alu', 'floating-point-multiplier']",None
687,https://github.com/MikeWakeland/RISC.git,2021-01-03 22:46:53+00:00,,0,MikeWakeland/RISC,326515496,SystemVerilog,RISC,18,0,2021-01-03 23:08:27+00:00,[],None
688,https://github.com/u1TimeCia/Image-Decompressor-Project.git,2021-01-26 11:47:32+00:00,,0,u1TimeCia/Image-Decompressor-Project,333068016,SystemVerilog,Image-Decompressor-Project,2159,0,2021-01-26 11:52:39+00:00,[],None
689,https://github.com/rag1404/uvm_objects_overrides.git,2021-01-26 05:47:01+00:00,Simple program to demonstrate uvm objects override capabilities !,0,rag1404/uvm_objects_overrides,332985032,SystemVerilog,uvm_objects_overrides,5,0,2021-01-26 06:32:52+00:00,[],None
690,https://github.com/rag1404/uvm_hdl_backdoor_access.git,2021-01-24 08:57:58+00:00,A program to demonstrate the hdl access !,0,rag1404/uvm_hdl_backdoor_access,332405195,SystemVerilog,uvm_hdl_backdoor_access,3,0,2021-01-24 09:01:19+00:00,[],None
691,https://github.com/RimonTawadrous/mips_pipeline.git,2021-01-25 22:32:22+00:00,,0,RimonTawadrous/mips_pipeline,332902778,SystemVerilog,mips_pipeline,885,0,2021-01-25 22:34:13+00:00,[],None
692,https://github.com/kleedtke/ece554groupminiproject.git,2021-02-04 23:35:17+00:00,,2,kleedtke/ece554groupminiproject,336111303,SystemVerilog,ece554groupminiproject,183,0,2021-02-17 02:41:00+00:00,[],None
693,https://github.com/deva0310/VGA-DISPLAY.git,2021-01-07 04:46:18+00:00,,0,deva0310/VGA-DISPLAY,327505546,SystemVerilog,VGA-DISPLAY,58,0,2021-01-07 14:49:36+00:00,[],None
694,https://github.com/valvenya/sv_labs.git,2021-01-10 23:19:46+00:00,,0,valvenya/sv_labs,328499692,SystemVerilog,sv_labs,11,0,2021-01-10 23:41:00+00:00,[],None
695,https://github.com/MusserO/BERT-fused_fi-sv.git,2021-02-09 09:55:58+00:00,,0,MusserO/BERT-fused_fi-sv,337359718,SystemVerilog,BERT-fused_fi-sv,914,0,2021-11-15 23:53:16+00:00,[],https://api.github.com/licenses/mit
696,https://github.com/metro68/FPGA_Intro.git,2021-02-12 19:45:03+00:00,"The project aims to show an understanding of how bidirectional buses work, and how tristate logic is used to avoid contention on a bus shared by multiple data sources (RAM, EPROM and switches) and sinks (RAM, and LEDs). It will also give you an opportunity to develop your skills in SystemVerilog, and provide you with experience of digital systems which use a separate data, address and control bus.",0,metro68/FPGA_Intro,338416942,SystemVerilog,FPGA_Intro,10849,0,2021-02-12 23:29:11+00:00,[],None
697,https://github.com/GabrieleMasciotti/Verilog_Exercises.git,2021-02-18 15:41:59+00:00,Second year university computer architecture course exercises in Verilog.,0,GabrieleMasciotti/Verilog_Exercises,340096769,SystemVerilog,Verilog_Exercises,4,0,2021-02-18 15:47:40+00:00,[],None
698,https://github.com/m1nty/finite-state-machines.git,2021-02-09 20:25:33+00:00,,0,m1nty/finite-state-machines,337527234,SystemVerilog,finite-state-machines,1104,0,2021-02-09 20:29:26+00:00,[],None
699,https://github.com/m1nty/vga-interface.git,2021-02-09 20:27:11+00:00,,0,m1nty/vga-interface,337527605,SystemVerilog,vga-interface,611,0,2021-02-09 20:27:29+00:00,[],None
700,https://github.com/rag1404/Tic_tac_toe.git,2020-12-26 17:52:50+00:00,Tic_tac_toe in System verilog,0,rag1404/Tic_tac_toe,324607244,SystemVerilog,Tic_tac_toe,2,0,2020-12-26 17:54:42+00:00,[],None
701,https://github.com/slayterteal/Single-Cycle-ARM-Implementation.git,2021-02-26 19:04:24+00:00,,0,slayterteal/Single-Cycle-ARM-Implementation,342674102,SystemVerilog,Single-Cycle-ARM-Implementation,3445,0,2021-04-09 17:50:23+00:00,[],None
702,https://github.com/DavidDitu/TSC_LAB.git,2021-02-25 14:53:34+00:00,,0,DavidDitu/TSC_LAB,342278842,SystemVerilog,TSC_LAB,9038,0,2021-04-15 17:19:30+00:00,[],None
703,https://github.com/benmelnick/CS3220-Pipeline.git,2021-03-01 15:24:06+00:00,,0,benmelnick/CS3220-Pipeline,343462697,SystemVerilog,CS3220-Pipeline,58578,0,2021-04-14 18:30:53+00:00,[],None
704,https://github.com/AswinNasiketh/fyp-rca.git,2021-02-28 18:13:59+00:00,,0,AswinNasiketh/fyp-rca,343178453,SystemVerilog,fyp-rca,32875,0,2021-10-14 22:44:45+00:00,[],https://api.github.com/licenses/apache-2.0
705,https://github.com/saipra99/ethernet_switch.git,2021-03-01 17:21:32+00:00,,0,saipra99/ethernet_switch,343498520,SystemVerilog,ethernet_switch,7,0,2021-03-01 17:24:41+00:00,[],None
706,https://github.com/kisung5/CE4302-vector_processor.git,2020-11-15 03:15:23+00:00,,0,kisung5/CE4302-vector_processor,312948539,SystemVerilog,CE4302-vector_processor,8244,0,2021-04-06 00:54:10+00:00,[],None
707,https://github.com/prajshet/SystemVerilog-projects.git,2020-11-16 02:31:52+00:00,,0,prajshet/SystemVerilog-projects,313171472,SystemVerilog,SystemVerilog-projects,433,0,2021-05-11 17:52:00+00:00,[],None
708,https://github.com/heidtn/systemverilog_modules.git,2020-12-05 23:33:51+00:00,My personal repo of systemverilog components for re-use,0,heidtn/systemverilog_modules,318910911,SystemVerilog,systemverilog_modules,22,0,2020-12-10 07:20:51+00:00,[],None
709,https://github.com/Jav909/SistemasDig.git,2020-12-08 01:28:43+00:00,,0,Jav909/SistemasDig,319491165,SystemVerilog,SistemasDig,169,0,2020-12-08 04:57:30+00:00,[],None
710,https://github.com/cjxmao/FPGA_Tamagotchi.git,2020-12-08 06:54:40+00:00,MIT F20 6.111 Final Project,0,cjxmao/FPGA_Tamagotchi,319552784,SystemVerilog,FPGA_Tamagotchi,6873,0,2020-12-11 07:19:21+00:00,[],https://api.github.com/licenses/mit
711,https://github.com/devinmur29/6111_finalproj_git.git,2020-12-09 22:34:29+00:00,,0,devinmur29/6111_finalproj_git,320096367,SystemVerilog,6111_finalproj_git,4529,0,2020-12-12 00:35:36+00:00,[],None
712,https://github.com/mdlopezme/ECE111_Final_Project.git,2020-11-20 01:19:56+00:00,ECE111_Final_Project,0,mdlopezme/ECE111_Final_Project,314412311,SystemVerilog,ECE111_Final_Project,351,0,2022-03-18 07:02:12+00:00,[],None
713,https://github.com/thao-n/ECE-111-Bitcoin-Hashing.git,2021-03-15 06:15:17+00:00,,0,thao-n/ECE-111-Bitcoin-Hashing,347857890,SystemVerilog,ECE-111-Bitcoin-Hashing,1357,0,2021-03-24 22:11:33+00:00,[],None
714,https://github.com/yolanda10202/FPGA_Stopwatch.git,2021-03-09 06:59:15+00:00,IEEE Student Branch at UCLA Digital Audio Visualizer Project Lab 5 Part C,0,yolanda10202/FPGA_Stopwatch,345912569,SystemVerilog,FPGA_Stopwatch,6,0,2021-03-09 07:46:47+00:00,[],None
715,https://github.com/nicholasmatanga/RC4_Decryption_Circuit.git,2021-03-08 22:02:26+00:00,,0,nicholasmatanga/RC4_Decryption_Circuit,345807534,SystemVerilog,RC4_Decryption_Circuit,60,0,2021-03-21 14:20:07+00:00,[],None
716,https://github.com/HermeneanuTeo/gittest.git,2021-03-10 12:45:51+00:00,Este un test,0,HermeneanuTeo/gittest,346353647,SystemVerilog,gittest,15423,0,2021-04-08 16:29:30+00:00,[],None
717,https://github.com/surendra55555/uart_uvm.git,2021-03-26 12:01:52+00:00,,0,surendra55555/uart_uvm,351767903,SystemVerilog,uart_uvm,26,0,2021-03-26 15:27:13+00:00,[],None
718,https://github.com/MengzhuLi821/ECE342-Computer-Hardware.git,2021-01-14 16:50:09+00:00,,0,MengzhuLi821/ECE342-Computer-Hardware,329677343,SystemVerilog,ECE342-Computer-Hardware,15356,0,2023-02-12 15:24:10+00:00,[],None
719,https://github.com/Umair772/Bresenham-s-line-algorithm.git,2021-01-13 00:15:03+00:00,,0,Umair772/Bresenham-s-line-algorithm,329147003,SystemVerilog,Bresenham-s-line-algorithm,5,0,2021-01-13 00:16:44+00:00,[],None
720,https://github.com/ardaicoz/CS223-Digital-Design.git,2021-03-15 22:25:34+00:00,Labs from Bilkent University's CS223 Digital Design - Fall 2020,0,ardaicoz/CS223-Digital-Design,348139987,SystemVerilog,CS223-Digital-Design,4896,0,2023-01-28 09:59:04+00:00,[],None
721,https://github.com/josefigarola/Gumnut.git,2021-03-14 23:39:33+00:00,Gumnut microprocessor in Verilog,0,josefigarola/Gumnut,347781711,SystemVerilog,Gumnut,197,0,2021-04-14 22:50:08+00:00,[],None
722,https://github.com/SARAMAG/simpel_ADDER_with_sv_testbench-.git,2021-03-06 23:57:48+00:00,,0,SARAMAG/simpel_ADDER_with_sv_testbench-,345221053,SystemVerilog,simpel_ADDER_with_sv_testbench-,8,0,2021-03-07 00:20:37+00:00,[],None
723,https://github.com/kwilson33/ECE551_DigitalDesign_and_Synthesis.git,2021-03-11 23:42:33+00:00,,1,kwilson33/ECE551_DigitalDesign_and_Synthesis,346871783,SystemVerilog,ECE551_DigitalDesign_and_Synthesis,203718,0,2021-03-12 00:01:31+00:00,[],None
724,https://github.com/mortenjc/6502sv.git,2021-03-10 06:07:47+00:00,My attempts at implementing a 6502 using SystemVerilog,0,mortenjc/6502sv,346250971,SystemVerilog,6502sv,51,0,2023-01-10 21:12:08+00:00,[],None
725,https://github.com/mattsini1/i2s_dsp_device.git,2021-03-22 16:11:00+00:00,,0,mattsini1/i2s_dsp_device,350407972,SystemVerilog,i2s_dsp_device,1,0,2021-03-22 16:11:14+00:00,[],None
726,https://github.com/rushi0005/Verification-of-Sequence-Detection.git,2021-03-21 20:40:46+00:00,,0,rushi0005/Verification-of-Sequence-Detection,350113658,SystemVerilog,Verification-of-Sequence-Detection,7,0,2021-04-04 00:53:29+00:00,[],None
727,https://github.com/CMUBOB97/18240Lab4.git,2021-03-25 23:39:25+00:00,,0,CMUBOB97/18240Lab4,351605942,SystemVerilog,18240Lab4,12,0,2021-05-06 15:57:45+00:00,[],None
728,https://github.com/denisablajan/TSClab.git,2021-03-02 11:36:37+00:00,,0,denisablajan/TSClab,343752977,SystemVerilog,TSClab,9282,0,2021-04-20 09:31:26+00:00,[],None
729,https://github.com/pbhowmik05/UVM-Verification.git,2021-03-05 07:14:25+00:00,,0,pbhowmik05/UVM-Verification,344726556,SystemVerilog,UVM-Verification,3,0,2021-03-05 19:30:58+00:00,[],None
730,https://github.com/george-jpg/TSC_Lab.git,2021-02-24 16:27:26+00:00,,0,george-jpg/TSC_Lab,341962292,SystemVerilog,TSC_Lab,25407,0,2021-04-20 20:28:42+00:00,[],None
731,https://github.com/aurasgabriel/TSC_Lab.git,2021-02-24 16:25:36+00:00,,0,aurasgabriel/TSC_Lab,341961786,SystemVerilog,TSC_Lab,8520,0,2021-04-21 10:14:04+00:00,[],None
732,https://github.com/andreitrusca/TSC_Lab.git,2021-02-24 14:54:05+00:00,,0,andreitrusca/TSC_Lab,341934374,SystemVerilog,TSC_Lab,8338,0,2021-04-21 14:20:07+00:00,[],None
733,https://github.com/arvindaru2/Matrix-Multiplication.git,2021-02-09 08:32:45+00:00,,0,arvindaru2/Matrix-Multiplication,337339685,SystemVerilog,Matrix-Multiplication,172,0,2021-02-09 08:36:04+00:00,[],None
734,https://github.com/T-Venkatesh/FIFO.git,2021-02-26 07:50:24+00:00,,0,T-Venkatesh/FIFO,342501924,SystemVerilog,FIFO,7,0,2021-02-26 08:00:15+00:00,[],None
735,https://github.com/MoglanAndrei/TSC_lab.git,2021-02-25 14:29:48+00:00,,0,MoglanAndrei/TSC_lab,342271395,SystemVerilog,TSC_lab,9851,0,2021-04-15 18:33:36+00:00,[],None
736,https://github.com/MihaiDinu/TSC_LAB.git,2021-02-25 14:54:16+00:00,,0,MihaiDinu/TSC_LAB,342279050,SystemVerilog,TSC_LAB,9596,0,2021-04-15 14:43:24+00:00,[],None
737,https://github.com/sayleechandavarkar/CompArch.git,2021-02-22 21:51:31+00:00,Some Comp Arch stuff ,0,sayleechandavarkar/CompArch,341347504,SystemVerilog,CompArch,25,0,2021-02-22 22:01:19+00:00,[],None
738,https://github.com/rniwase/midi-rtl.git,2021-03-28 18:45:56+00:00,,0,rniwase/midi-rtl,352410712,SystemVerilog,midi-rtl,8,0,2021-05-20 03:31:15+00:00,[],None
739,https://github.com/Koder2727/Verilog.git,2021-03-28 09:36:26+00:00,,0,Koder2727/Verilog,352289903,SystemVerilog,Verilog,635,0,2021-03-28 09:38:34+00:00,[],None
740,https://github.com/Capstone-UF-FTU/FIFO.git,2021-03-16 18:35:14+00:00,,0,Capstone-UF-FTU/FIFO,348454171,SystemVerilog,FIFO,3,0,2021-05-12 06:17:32+00:00,[],None
741,https://github.com/jiulingz/conFFTi.git,2021-02-19 19:44:09+00:00,CMU Spring 21 ECE Capstone,0,jiulingz/conFFTi,340472693,SystemVerilog,conFFTi,18105,0,2023-01-28 07:04:52+00:00,[],https://api.github.com/licenses/gpl-3.0
742,https://github.com/yolanda10202/Arithmetic_Logic_Unit.git,2021-03-09 07:15:51+00:00,IEEE Student Branch at UCLA Digital Audio Visualizer (DAV) Project Lab 3 Part C,0,yolanda10202/Arithmetic_Logic_Unit,345916349,SystemVerilog,Arithmetic_Logic_Unit,10,0,2021-03-15 07:51:30+00:00,[],None
743,https://github.com/enriquezgaytanj/MIPS-Multicycle-32-bits-HDL.git,2020-12-03 15:15:32+00:00,Read me,0,enriquezgaytanj/MIPS-Multicycle-32-bits-HDL,318233136,SystemVerilog,MIPS-Multicycle-32-bits-HDL,77,0,2020-12-04 22:18:51+00:00,[],None
744,https://github.com/Moein-Karami/Digital-System-Design.git,2020-12-06 18:10:44+00:00,Six projects of Digital System Design course,0,Moein-Karami/Digital-System-Design,319099234,SystemVerilog,Digital-System-Design,46576,0,2021-12-01 01:49:07+00:00,[],None
745,https://github.com/svenka3/code_to_ivl_team.git,2020-12-05 14:42:41+00:00,,0,svenka3/code_to_ivl_team,318811789,SystemVerilog,code_to_ivl_team,14,0,2020-12-06 23:03:56+00:00,[],None
746,https://github.com/Runheng/ECE-551-Digital-System-Design-And-Synthesis.git,2020-12-07 11:40:22+00:00,final project: logic analyzer,0,Runheng/ECE-551-Digital-System-Design-And-Synthesis,319301301,SystemVerilog,ECE-551-Digital-System-Design-And-Synthesis,145,0,2020-12-07 11:43:20+00:00,[],None
747,https://github.com/PaulLee950181/String_match_system.git,2021-01-29 10:32:18+00:00,,0,PaulLee950181/String_match_system,334112147,SystemVerilog,String_match_system,256,0,2021-02-02 06:14:16+00:00,[],None
748,https://github.com/IngTorija/MIPS_datapath.git,2021-01-28 00:00:27+00:00,,0,IngTorija/MIPS_datapath,333594102,SystemVerilog,MIPS_datapath,1167,0,2021-07-20 19:55:03+00:00,[],https://api.github.com/licenses/gpl-3.0
749,https://github.com/Art-007/Thermometer-FPGA.git,2021-01-05 21:03:38+00:00,,0,Art-007/Thermometer-FPGA,327118857,SystemVerilog,Thermometer-FPGA,19122,0,2021-01-08 06:21:16+00:00,[],None
750,https://github.com/vasilydenisenko/dev_cntrl.git,2021-01-05 11:50:38+00:00,"Device controllers (sensors, display, etc)",0,vasilydenisenko/dev_cntrl,326983011,SystemVerilog,dev_cntrl,8,0,2021-02-13 08:08:15+00:00,[],https://api.github.com/licenses/mit
751,https://github.com/fischeti/full_stack_ip_integration.git,2020-12-18 13:45:15+00:00,,0,fischeti/full_stack_ip_integration,322607101,SystemVerilog,full_stack_ip_integration,16,0,2020-12-18 15:17:51+00:00,[],None
752,https://github.com/EEESocbitmesra/FIFO_Mem.git,2021-02-15 10:20:29+00:00,,2,EEESocbitmesra/FIFO_Mem,339038808,SystemVerilog,FIFO_Mem,10,0,2021-03-02 08:11:28+00:00,[],None
753,https://github.com/teekamkhandelwal/uart_System_verilog.git,2021-02-07 06:57:08+00:00,,0,teekamkhandelwal/uart_System_verilog,336722913,SystemVerilog,uart_System_verilog,33,0,2023-03-26 17:25:20+00:00,[],https://api.github.com/licenses/gpl-3.0
754,https://github.com/naftali10/Pipelined-Microcontroller-Processor.git,2021-01-22 11:55:32+00:00,"In-order single-pipeline processor, capable of executing 6 different operations.",0,naftali10/Pipelined-Microcontroller-Processor,331932136,SystemVerilog,Pipelined-Microcontroller-Processor,379,0,2021-01-30 05:40:29+00:00,[],None
755,https://github.com/xiongyumail/riscv.git,2020-12-25 03:57:48+00:00,,0,xiongyumail/riscv,324283688,SystemVerilog,riscv,103997,0,2021-03-12 10:14:05+00:00,[],None
756,https://github.com/meggiman/wide_alu_ip.git,2020-12-18 16:24:26+00:00,,2,meggiman/wide_alu_ip,322646213,SystemVerilog,wide_alu_ip,8,0,2020-12-18 16:46:37+00:00,[],None
757,https://github.com/NadavAshkenazi/FGPA-Bumpy.git,2020-11-17 13:27:01+00:00,,0,NadavAshkenazi/FGPA-Bumpy,313627862,SystemVerilog,FGPA-Bumpy,14986,0,2022-10-12 16:01:09+00:00,[],None
