,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/snbk001/Verilog-Design-Examples.git,2022-01-14 13:18:41+00:00,"Verilog Design Examples with self checking testbenches. Half Adder, Full Adder, Mux, ALU, D Flip Flop, Sequence Detector using Mealy machine and Moore machine, Number of 1s, Binary to Gray Conversion, Up down counter, Clock Divider, PIPO, n bit universal shift register, 4 bit LFSR, Single port RAM, Dual port RAM, Synchronous FIFO, Asynchronous FIFO, 8x8 Sequential Multiplier",10,snbk001/Verilog-Design-Examples,447973979,Verilog,Verilog-Design-Examples,129,56,2024-04-10 03:15:22+00:00,"['verilog', 'testbenches', 'verilog-design', 'verilog-code', 'verilog-hdl', 'verilog-programs', 'verilog-project', 'self-checking']",None
1,https://github.com/va7deo/zerowing.git,2022-01-21 22:27:01+00:00,Toaplan V1 system for MiSTer FPGA,13,va7deo/zerowing,450657407,Verilog,zerowing,172483,45,2024-01-15 09:51:01+00:00,[],https://api.github.com/licenses/gpl-2.0
2,https://github.com/salute-hh/FPGA-Edge-Detection-Project1.git,2022-01-11 10:55:24+00:00,FPGA-Edge-Detection-Project1,8,salute-hh/FPGA-Edge-Detection-Project1,446783609,Verilog,FPGA-Edge-Detection-Project1,35235,43,2024-03-29 09:38:04+00:00,[],None
3,https://github.com/ucsdsysnet/Rosebud.git,2022-01-04 23:21:04+00:00,Framework for FPGA-accelerated Middlebox Development,8,ucsdsysnet/Rosebud,444592157,Verilog,Rosebud,129659,33,2024-04-02 18:12:16+00:00,[],https://api.github.com/licenses/mit
4,https://github.com/Arlet/verilog-65C02-fsm.git,2022-01-22 12:41:12+00:00,,12,Arlet/verilog-65C02-fsm,450814091,Verilog,verilog-65C02-fsm,72,32,2024-02-01 20:38:42+00:00,[],None
5,https://github.com/iic-jku/iic-audiodac-v1.git,2022-01-20 11:37:33+00:00,"Delta-sigma audio DAC (16b, 48kHz), intended for tape-out on MPW-5, SKY130 technology.",4,iic-jku/iic-audiodac-v1,450072296,Verilog,iic-audiodac-v1,679997,30,2024-02-13 21:18:49+00:00,[],https://api.github.com/licenses/apache-2.0
6,https://github.com/abdelazeem201/Design-and-ASIC-Implementation-of-32-Point-FFT-Processor.git,2022-01-06 11:11:42+00:00,"I present a novel pipelined fast Fourier transform (FFT) architecture which is capable of producing the output sequence in normal order. A single-path delay commutator processing element (SDC PE) has been proposed for the first time. It saves a complex adder compared with the typical radix-2 butterfly unit. The new pipelined architecture can be built using the proposed processing element. The proposed architecture can lead to 100% hardware utilization and 50% reduction in the overall number of adders required in the conventional pipelined FFT designs. In order to produce the output sequence in normal order, we also present a bit reverser, which can achieve a 50% reduction in memory usage.",1,abdelazeem201/Design-and-ASIC-Implementation-of-32-Point-FFT-Processor,445140913,Verilog,Design-and-ASIC-Implementation-of-32-Point-FFT-Processor,9631,26,2024-03-08 02:12:44+00:00,"['asic', 'asic-design', 'asic-verification', 'fft', 'fpga', 'rtl', 'soc', 'synthesis', 'verilog', 'vhdl']",https://api.github.com/licenses/mit
7,https://github.com/EECS150/fpga_labs_sp22.git,2022-01-11 22:32:05+00:00,,32,EECS150/fpga_labs_sp22,447001529,Verilog,fpga_labs_sp22,4391,24,2024-03-17 05:19:15+00:00,[],None
8,https://github.com/DCLAB08/Real-Time-Image-Video-Dehazing.git,2022-01-15 07:03:12+00:00,"The Final Project of team 8, NTUEE, Digital Circuits Lab (2021 Fall)",1,DCLAB08/Real-Time-Image-Video-Dehazing,448205989,Verilog,Real-Time-Image-Video-Dehazing,21799,22,2024-02-28 15:41:28+00:00,"['dehaze', 'verilog', 'fpga']",None
9,https://github.com/b-dmitry1/V188.git,2022-01-14 17:09:19+00:00,FPGA 80186 IBM PC compatible system for Altera Cyclone IV (EP4CE15F23/EP4CE55F23),2,b-dmitry1/V188,448046452,Verilog,V188,2366,20,2024-04-08 02:18:00+00:00,"['assembler', 'retrocomputing', 'verilog', 'altera', 'fpga', 'emulator']",None
10,https://github.com/jevinskie/litespih4x.git,2022-01-26 04:26:35+00:00,SPI flash MITM and emulation (QSPI is a WIP),2,jevinskie/litespih4x,452139605,Verilog,litespih4x,2919,19,2023-04-27 13:12:38+00:00,[],None
11,https://github.com/kazkojima/pcm2pdm-example.git,2022-01-07 09:28:09+00:00,A tiny example of PCM to PDM pipeline on FPGA,4,kazkojima/pcm2pdm-example,445466713,Verilog,pcm2pdm-example,583,16,2024-01-22 02:11:47+00:00,[],
12,https://github.com/kazkojima/lunauac2-pdm.git,2022-01-27 03:54:22+00:00,A LiteX module implementing a USB UAC2 module with simple PDM in/out,2,kazkojima/lunauac2-pdm,452531927,Verilog,lunauac2-pdm,231,14,2024-02-26 15:57:04+00:00,[],
13,https://github.com/zlinaf/PowerGear.git,2022-01-23 06:39:00+00:00,[DATE 2022] PowerGear: Early-Stage Power Estimation in FPGA HLS via Heterogeneous Edge-Centric GNNs,7,zlinaf/PowerGear,451024857,Verilog,PowerGear,279172,13,2024-03-14 08:31:04+00:00,"['gnn', 'hls', 'fpga', 'power-modeling', 'dse']",https://api.github.com/licenses/mit
14,https://github.com/PaserTech-Hardware/GowinDDR3_AXI4_SpinalHDL.git,2022-01-21 20:08:00+00:00,Gowin DDR3 Controller with AXI4 Implementation | 高云DDR3内存控制器AXI4接口实现,6,PaserTech-Hardware/GowinDDR3_AXI4_SpinalHDL,450626019,Verilog,GowinDDR3_AXI4_SpinalHDL,42,13,2024-03-27 07:55:41+00:00,[],https://api.github.com/licenses/mit
15,https://github.com/abdelazeem201/SoC-Implementation-of-OpenMSP430-Microcontroller.git,2022-01-28 09:25:46+00:00,"The open- MSP430 is an open-source 16-bit microcontroller core written in Verilog, that is compatible with the Texas Instruments MSP430 microcontroller family. Due to its characteristics, the openMSP430 was selected to integrate the System on Chip (SOC). This open-core, that will be implemented as an Application Specific Integrated Circuit (ASIC), was previously synthesized, for a SAEDCMOS 90nm target technology process.",3,abdelazeem201/SoC-Implementation-of-OpenMSP430-Microcontroller,453008314,Verilog,SoC-Implementation-of-OpenMSP430-Microcontroller,24498,12,2024-01-20 23:59:59+00:00,[],None
16,https://github.com/Geyuhao/FPGA-Based-Implementation-of-Doodle-Jump.git,2022-01-01 15:04:22+00:00,"We built the game ""Doodle Jump"" on the FPGA (UIUC ECE 385)",7,Geyuhao/FPGA-Based-Implementation-of-Doodle-Jump,443561920,Verilog,FPGA-Based-Implementation-of-Doodle-Jump,171046,12,2024-03-26 08:47:02+00:00,[],None
17,https://github.com/zzz-x/mp3player.git,2022-01-18 06:46:47+00:00,同济大学数字逻辑大作业,0,zzz-x/mp3player,449172072,Verilog,mp3player,1844,12,2024-01-13 13:03:03+00:00,[],None
18,https://github.com/albertfan1120/NTU_CVSD_2021.git,2022-01-20 13:39:23+00:00,Computer-Aided VLSI System Design,7,albertfan1120/NTU_CVSD_2021,450112092,Verilog,NTU_CVSD_2021,14529,12,2024-04-01 13:03:34+00:00,[],None
19,https://github.com/mattvenn/zero_to_asic_mpw5.git,2022-01-19 16:55:49+00:00,,1,mattvenn/zero_to_asic_mpw5,449779247,Verilog,zero_to_asic_mpw5,265331,10,2022-07-12 21:31:41+00:00,[],https://api.github.com/licenses/apache-2.0
20,https://github.com/briansune/FFT-R22SDF.git,2022-01-05 03:57:01+00:00,R22SDF FFT VLSI/FPGA investigate and implementation,1,briansune/FFT-R22SDF,444656710,Verilog,FFT-R22SDF,67,9,2024-04-09 07:09:20+00:00,"['fpga', 'fft', 'vlsi', 'verilog', 'xilinx', 'hardware-acceleration']",https://api.github.com/licenses/mit
21,https://github.com/v9938/MSX2SlotExpander.git,2022-02-01 15:51:01+00:00,Simple logic 2Slot Expander unit for MSX,1,v9938/MSX2SlotExpander,454449164,Verilog,MSX2SlotExpander,2214,9,2024-03-16 00:49:36+00:00,[],https://api.github.com/licenses/mit
22,https://github.com/antmicro/video-overlays.git,2022-01-24 13:57:48+00:00,,2,antmicro/video-overlays,451485634,Verilog,video-overlays,1772,8,2023-10-10 07:38:55+00:00,[],https://api.github.com/licenses/apache-2.0
23,https://github.com/nandithaec/fpga_workshop_collaterals.git,2022-01-15 05:48:54+00:00,"Input files and commands needed for the workshop, sorted daywise",11,nandithaec/fpga_workshop_collaterals,448193099,Verilog,fpga_workshop_collaterals,3278,8,2023-04-20 19:19:37+00:00,[],None
24,https://github.com/cquwei-cx/cpu20220108.git,2022-01-08 08:50:02+00:00,MIPS 57条指令五级流水线cpu (verilog实现+详细注释),0,cquwei-cx/cpu20220108,445769087,Verilog,cpu20220108,1420,8,2024-04-09 10:23:52+00:00,[],None
25,https://github.com/eda-lab/CNNAF-CNN-Accelerator.git,2022-01-27 06:55:31+00:00,CNN-Accelerator based on FPGA developed by verilog HDL.,0,eda-lab/CNNAF-CNN-Accelerator,452573042,Verilog,CNNAF-CNN-Accelerator,44877,8,2024-03-29 16:09:21+00:00,[],None
26,https://github.com/openXC7/xc7k325t-picosoc-nextpnr.git,2022-02-02 03:54:24+00:00,Picosoc for the XC7K325T using yosys+nextpnr,1,openXC7/xc7k325t-picosoc-nextpnr,454635862,Verilog,xc7k325t-picosoc-nextpnr,41,8,2023-05-19 18:56:28+00:00,[],https://api.github.com/licenses/bsd-3-clause
27,https://github.com/Zhu-Zixuan/Bitlet-PE.git,2022-01-09 15:31:53+00:00,A bit-level sparsity-awared multiply-accumulate process element.,0,Zhu-Zixuan/Bitlet-PE,446128190,Verilog,Bitlet-PE,32,7,2024-04-07 06:46:37+00:00,[],https://api.github.com/licenses/mit
28,https://github.com/19801201/Ultra_low_power_CNN_Accelerated.git,2022-01-01 15:24:24+00:00,,0,19801201/Ultra_low_power_CNN_Accelerated,443565599,Verilog,Ultra_low_power_CNN_Accelerated,7469,7,2023-11-10 06:23:00+00:00,[],None
29,https://github.com/CHNCZL/MIPS-CQU.git,2022-01-28 06:48:32+00:00,重庆大学の硬件综合设计任务,0,CHNCZL/MIPS-CQU,452967370,Verilog,MIPS-CQU,38,7,2024-01-23 07:33:00+00:00,[],None
30,https://github.com/ThePituLegend/RISC-V_DE10-Nano.git,2022-01-27 18:42:48+00:00,"This project aims to boot Linux on a RocektChip based SoC, synthesised on the DE10-Nano board. Computer Science Bachelor's Thesis at UAB, Spain.",2,ThePituLegend/RISC-V_DE10-Nano,452802706,Verilog,RISC-V_DE10-Nano,6777,7,2023-12-13 00:01:30+00:00,"['riscv', 'risc-v', 'riscv64', 'riscv-asm', 'riscv-assembly', 'de10-nano', 'fpga', 'altera', 'altera-fpga', 'terasic', 'rocketchip', 'chipyard', 'ucberkeley']",None
31,https://github.com/DoniaEsawi/HomeAutomationSystem.git,2022-01-11 15:26:28+00:00,"designed to control the doors, windows, fire alarm and the  temperature. Each process being automated is associated with a sensor. ",4,DoniaEsawi/HomeAutomationSystem,446875401,Verilog,HomeAutomationSystem,4687,6,2022-01-13 18:42:10+00:00,[],None
32,https://github.com/p3da/verilog-ethernet_ptp.git,2022-01-17 11:28:20+00:00,,0,p3da/verilog-ethernet_ptp,448865976,Verilog,verilog-ethernet_ptp,330,5,2024-03-28 01:11:15+00:00,[],None
33,https://github.com/Ashwin-Rajesh/RTL_Notes.git,2022-01-16 07:31:30+00:00,"Notes I made on RTL design and verification. Currently has verilog, system verilog and formal verification notes",2,Ashwin-Rajesh/RTL_Notes,448486895,Verilog,RTL_Notes,2481,5,2024-03-13 09:35:06+00:00,[],https://api.github.com/licenses/mit
34,https://github.com/TranquilRock/RISC-V-PipelineCPU.git,2022-01-13 07:48:33+00:00,"NTU Computer Architecture 2021 - CPU with Single issue, L1-cache",0,TranquilRock/RISC-V-PipelineCPU,447509851,Verilog,RISC-V-PipelineCPU,87,5,2024-03-22 16:12:59+00:00,[],None
35,https://github.com/tdene/adder_networks.git,2022-01-21 16:18:46+00:00,"Store of prefix tree adder HDL, diagrams, and implementation results",1,tdene/adder_networks,450559262,Verilog,adder_networks,4556,5,2023-11-21 15:02:03+00:00,[],https://api.github.com/licenses/apache-2.0
36,https://github.com/LL-Tools/Valkyrie.git,2022-01-24 18:23:30+00:00,,1,LL-Tools/Valkyrie,451583078,Verilog,Valkyrie,108647,5,2023-10-19 13:13:24+00:00,[],None
37,https://github.com/minhna1112/RISC-V-SingleCycle.git,2022-01-19 04:45:08+00:00,Project Digital Design II,0,minhna1112/RISC-V-SingleCycle,449549970,Verilog,RISC-V-SingleCycle,64,4,2023-02-28 21:01:12+00:00,"['verilog', 'risc-v']",None
38,https://github.com/phyzhenli/AM.git,2022-01-25 14:28:01+00:00,,1,phyzhenli/AM,451909702,Verilog,AM,61429,4,2023-08-22 01:49:23+00:00,[],None
39,https://github.com/jogeshsingh/Shift-and-Add-Accumulator-Based-Multiplier-Design.git,2022-02-01 14:59:27+00:00,This project includes 4 bit configuration of Datapath and controller of shift and add sequential multiplier design . It was designed in Xilinx VIVADO using Verilog HDL.,0,jogeshsingh/Shift-and-Add-Accumulator-Based-Multiplier-Design,454430637,Verilog,Shift-and-Add-Accumulator-Based-Multiplier-Design,1297,4,2024-01-09 11:21:03+00:00,[],https://api.github.com/licenses/mit
40,https://github.com/Arjun-Narula/N-bit-Multiplier-in-Verilog.git,2022-01-28 17:11:54+00:00,,2,Arjun-Narula/N-bit-Multiplier-in-Verilog,453152147,Verilog,N-bit-Multiplier-in-Verilog,1122,4,2024-03-10 16:05:10+00:00,[],None
41,https://github.com/wuhanstudio/trivium.git,2022-01-07 10:48:57+00:00,A light-weight hardware oriented synchronous stream cipher.,1,wuhanstudio/trivium,445488268,Verilog,trivium,1339,4,2024-03-30 17:29:40+00:00,[],https://api.github.com/licenses/mit
42,https://github.com/nguyendao-uom/rram_testchip.git,2022-01-01 00:56:21+00:00,,3,nguyendao-uom/rram_testchip,443448909,Verilog,rram_testchip,20174,4,2024-03-12 03:18:16+00:00,[],https://api.github.com/licenses/apache-2.0
43,https://github.com/xiaowuzxc/SAR-ADC-FPGA.git,2022-01-29 02:56:22+00:00,,0,xiaowuzxc/SAR-ADC-FPGA,453280627,Verilog,SAR-ADC-FPGA,317,4,2024-03-31 11:18:27+00:00,[],https://api.github.com/licenses/apache-2.0
44,https://github.com/reliability-research/odometer.git,2022-02-03 02:59:38+00:00,,0,reliability-research/odometer,455011518,Verilog,odometer,59,4,2024-03-21 21:06:10+00:00,[],None
45,https://github.com/Ma-YX/UCAS_CAlab.git,2022-01-17 06:35:29+00:00,,1,Ma-YX/UCAS_CAlab,448780010,Verilog,UCAS_CAlab,10256,4,2023-05-22 08:54:10+00:00,[],https://api.github.com/licenses/mit
46,https://github.com/DreamSkyGL/c101_soc_rv32i.git,2022-01-25 17:14:39+00:00,An open source RISC-V RV32I SoC designed by GanLing,0,DreamSkyGL/c101_soc_rv32i,451970862,Verilog,c101_soc_rv32i,36,4,2023-09-09 02:40:21+00:00,[],https://api.github.com/licenses/apache-2.0
47,https://github.com/yufoo1/BUAA-CO-2021.git,2022-01-28 03:57:26+00:00,,0,yufoo1/BUAA-CO-2021,452932555,Verilog,BUAA-CO-2021,6196,4,2023-01-24 15:17:14+00:00,[],https://api.github.com/licenses/gpl-3.0
48,https://github.com/wyvernSemi/vslzw.git,2022-02-03 15:42:42+00:00,"Verilog Decoder implementing a simple LZW algorithm,",1,wyvernSemi/vslzw,455223995,Verilog,vslzw,90,4,2023-08-13 08:15:04+00:00,[],https://api.github.com/licenses/gpl-3.0
49,https://github.com/su-pernova/Sogang_CSE3016.git,2022-01-21 03:00:01+00:00,서강대학교 컴퓨터공학실험II 프로젝트(2021-2),1,su-pernova/Sogang_CSE3016,450333683,Verilog,Sogang_CSE3016,34278,3,2023-10-09 18:52:26+00:00,[],None
50,https://github.com/tangxifan/micro_benchmark.git,2022-01-24 00:45:06+00:00,Micro Benchmarks for FPGA design verification,1,tangxifan/micro_benchmark,451270484,Verilog,micro_benchmark,452,3,2024-03-01 21:21:09+00:00,[],https://api.github.com/licenses/mit
51,https://github.com/virtualsecureplatform/kvsp-rv32i.git,2022-01-08 10:52:05+00:00,,0,virtualsecureplatform/kvsp-rv32i,445793234,Verilog,kvsp-rv32i,524,3,2022-01-10 11:18:50+00:00,[],
52,https://github.com/ac2-prod/fpga_sort.git,2022-02-04 04:33:12+00:00,A sorting library for FPGA implementation,1,ac2-prod/fpga_sort,455421905,Verilog,fpga_sort,410,3,2023-08-20 14:24:31+00:00,[],https://api.github.com/licenses/apache-2.0
53,https://github.com/mjs19999/AES_in_verilog.git,2022-01-26 22:30:03+00:00,An algorithmic state machine verilog code for AES Encryption/Decryption Algorithm,3,mjs19999/AES_in_verilog,452461941,Verilog,AES_in_verilog,29,3,2024-03-06 05:27:19+00:00,[],https://api.github.com/licenses/apache-2.0
54,https://github.com/Askartos/SPI-Register-Access-Controller.git,2022-01-23 04:23:13+00:00,Here you can find the RTL for a SPI+Register bank controller which can be used to test stand-alone Analog/Digital IP,2,Askartos/SPI-Register-Access-Controller,451002805,Verilog,SPI-Register-Access-Controller,2866,3,2023-10-27 03:40:39+00:00,[],https://api.github.com/licenses/mit
55,https://github.com/ryanrocket/caravel_automatic_gain_control.git,2022-01-20 02:15:35+00:00,An Automatic Gain Control (AGC) feedback-loop oriented towards baseband applications (0-600 MHz) without the need for integrated inductors. ,1,ryanrocket/caravel_automatic_gain_control,449924283,Verilog,caravel_automatic_gain_control,28851,3,2023-03-07 16:11:31+00:00,[],https://api.github.com/licenses/apache-2.0
56,https://github.com/SubZer0811/Computer-Architecture.git,2022-01-08 03:33:12+00:00,,1,SubZer0811/Computer-Architecture,445714640,Verilog,Computer-Architecture,2435,3,2022-05-23 04:09:21+00:00,[],None
57,https://github.com/davidlu1027/kws.git,2022-01-28 13:08:38+00:00,,0,davidlu1027/kws,453071434,Verilog,kws,1019,3,2023-11-30 11:16:17+00:00,[],None
58,https://github.com/JacyCui/NJU-RV32I.git,2022-01-11 09:42:28+00:00,Nanjing University  FPAG Lab - A Computer System with CPU Supporting RV32I Instruction Set and External Device I/O,1,JacyCui/NJU-RV32I,446761070,Verilog,NJU-RV32I,15496,3,2023-12-26 08:50:07+00:00,[],https://api.github.com/licenses/apache-2.0
59,https://github.com/1sand0s-git/FPGABasics.git,2022-01-20 08:31:56+00:00,FPGA Basics Series Code,0,1sand0s-git/FPGABasics,450015131,Verilog,FPGABasics,18,3,2022-11-21 02:27:55+00:00,[],None
60,https://github.com/lpp-coder/FPGA_snake.git,2022-01-28 07:40:49+00:00,基于VGA实现的贪吃蛇（FPGA）,1,lpp-coder/FPGA_snake,452979881,Verilog,FPGA_snake,7988,3,2023-12-10 00:25:08+00:00,[],None
61,https://github.com/Thysrael/BUAA-MIPS-CPU.git,2022-01-20 13:16:00+00:00,这是北航2020级计算机组成课程要求，包括logisim和Verilog实现的CPU，关于代码的详细解读，可以参考我的博客 https://thysrael.github.io/,0,Thysrael/BUAA-MIPS-CPU,450104055,Verilog,BUAA-MIPS-CPU,828,3,2023-07-07 08:35:09+00:00,[],None
62,https://github.com/HUALIxxk/snake_master.git,2022-01-29 01:56:05+00:00,FPGA 贪吃蛇 HDMI,1,HUALIxxk/snake_master,453270832,Verilog,snake_master,4852,3,2023-12-10 00:25:07+00:00,[],None
63,https://github.com/NeuroGenomicsAndInformatics/WXS-Pipelines.git,2022-01-07 20:32:17+00:00,,0,NeuroGenomicsAndInformatics/WXS-Pipelines,445645258,Verilog,WXS-Pipelines,558105,3,2024-01-12 18:25:57+00:00,[],None
64,https://github.com/sadegh-msm/logic_finalProject.git,2022-01-03 16:06:27+00:00,,0,sadegh-msm/logic_finalProject,444120838,Verilog,logic_finalProject,15,2,2023-11-11 14:50:45+00:00,[],None
65,https://github.com/Thancred-Waters/Hardware_Design.git,2022-01-08 05:27:55+00:00,,0,Thancred-Waters/Hardware_Design,445732480,Verilog,Hardware_Design,8375,2,2023-01-02 08:11:06+00:00,[],None
66,https://github.com/mattvenn/mpw5.git,2022-02-03 15:31:56+00:00,,0,mattvenn/mpw5,455220057,Verilog,mpw5,54696,2,2022-03-17 00:17:38+00:00,[],https://api.github.com/licenses/apache-2.0
67,https://github.com/ManasGupta1310/CS220-Assignments.git,2022-01-21 06:59:46+00:00,This repo contains the assignments for CS220 course.,0,ManasGupta1310/CS220-Assignments,450387222,Verilog,CS220-Assignments,327,2,2024-02-19 03:22:57+00:00,[],None
68,https://github.com/zst123/hacknroll2022-project.git,2022-01-07 05:57:42+00:00,Bring your old analog TV back to life! This project uses purely digital logic to emulate analog RF signals without any special circuitry. Using a cheap $15 FPGA board.,0,zst123/hacknroll2022-project,445414724,Verilog,hacknroll2022-project,23,2,2022-09-29 09:33:19+00:00,[],None
69,https://github.com/sempfi/MIPS.git,2022-01-29 12:10:00+00:00,MIPS architecture implemented in Verilog.,0,sempfi/MIPS,453387026,Verilog,MIPS,81,2,2023-11-30 13:38:21+00:00,[],None
70,https://github.com/shino-hinaduki/chisel-nes.git,2022-01-15 14:41:32+00:00,(WIP) NES emulator running on FPGA implemented in scala(w/ chisel),0,shino-hinaduki/chisel-nes,448303411,Verilog,chisel-nes,8542,2,2024-03-05 16:00:00+00:00,"['scala', 'chisel3', 'nes-emulator', 'kicad', 'de0-cv']",https://api.github.com/licenses/gpl-3.0
71,https://github.com/briansune/ADS111x-series-ADC-FPGA.git,2022-02-01 03:46:34+00:00,TI ADS1115 ADC example for FPGA (HDL),0,briansune/ADS111x-series-ADC-FPGA,454252601,Verilog,ADS111x-series-ADC-FPGA,16,2,2022-10-02 12:43:59+00:00,[],https://api.github.com/licenses/mit
72,https://github.com/jogeshsingh/RTL-design-of-Registers-on-the-bus.git,2022-01-30 10:26:50+00:00,This project basically an introduction to Register transfer level design that how the data flow from one register to another over the single bus.,0,jogeshsingh/RTL-design-of-Registers-on-the-bus,453648766,Verilog,RTL-design-of-Registers-on-the-bus,75,2,2022-10-09 20:10:37+00:00,[],https://api.github.com/licenses/apache-2.0
73,https://github.com/quochunglam/mipi_cam_fpga_cycle_v_system_design.git,2022-01-28 19:13:44+00:00,,0,quochunglam/mipi_cam_fpga_cycle_v_system_design,453187825,Verilog,mipi_cam_fpga_cycle_v_system_design,292859,2,2023-12-04 19:56:08+00:00,[],None
74,https://github.com/adityas129/pipelined-processor.git,2022-01-29 03:25:23+00:00,,0,adityas129/pipelined-processor,453285278,Verilog,pipelined-processor,74388,2,2022-01-30 23:46:08+00:00,[],None
75,https://github.com/jogeshsingh/Carry-Save-Adder-on-Xilinx-VIVADO.git,2022-01-30 09:07:21+00:00,This projects incorporates the basic functionality of Carry save addition by feeding the carry output to so the input of next adder logic that we can add more than three numbers simultaneously .This project was designed using Verilog HDL . ,0,jogeshsingh/Carry-Save-Adder-on-Xilinx-VIVADO,453633396,Verilog,Carry-Save-Adder-on-Xilinx-VIVADO,115,2,2023-09-13 02:13:59+00:00,[],https://api.github.com/licenses/mit
76,https://github.com/Eugeo101/Verilog-CPU-DMA.git,2022-01-09 19:03:32+00:00,,0,Eugeo101/Verilog-CPU-DMA,446178118,Verilog,Verilog-CPU-DMA,13,2,2024-03-09 06:04:14+00:00,[],None
77,https://github.com/lucifer9735/RSA-Verilog.git,2022-01-02 17:04:08+00:00,,0,lucifer9735/RSA-Verilog,443822474,Verilog,RSA-Verilog,96,2,2024-03-26 19:26:11+00:00,[],None
78,https://github.com/svsingh68/VerilogScripts.git,2022-01-15 05:44:48+00:00,Scripts used for illustration in youtube channel,0,svsingh68/VerilogScripts,448192472,Verilog,VerilogScripts,24,2,2022-07-12 07:59:33+00:00,[],https://api.github.com/licenses/gpl-3.0
79,https://github.com/ZiyangYE/Super-Scalar-RV32.git,2022-01-16 17:40:22+00:00,Learn to design super scalar processors and use advanced HDLs. Design from scratch.,0,ZiyangYE/Super-Scalar-RV32,448627443,Verilog,Super-Scalar-RV32,35,2,2022-02-11 13:08:53+00:00,[],https://api.github.com/licenses/lgpl-2.1
80,https://github.com/Bright-Hsu/my-ARMv8-CPU.git,2022-01-10 09:05:37+00:00,an ARMv8-based five pipeline CPU,0,Bright-Hsu/my-ARMv8-CPU,446350722,Verilog,my-ARMv8-CPU,405,2,2023-06-07 13:07:30+00:00,[],https://api.github.com/licenses/mit
81,https://github.com/Sara-Rezaeimanesh/FNN-with-Verilog.git,2022-02-02 14:50:20+00:00,MNIST-Classifier-FNN Implementation with Verilog and 8 available neurons  ,0,Sara-Rezaeimanesh/FNN-with-Verilog,454815197,Verilog,FNN-with-Verilog,1133,2,2023-01-31 19:31:01+00:00,[],None
82,https://github.com/tinsir888/computer-architecture.git,2022-01-04 05:18:39+00:00,"NKU CS major compulsory course in 5th semester, taught by Prof. Bai Gang.",0,tinsir888/computer-architecture,444294775,Verilog,computer-architecture,61129,2,2022-06-15 05:08:12+00:00,"['verilog', 'cpu', 'mips-architecture']",None
83,https://github.com/praynext/BUAA-CO-2021.git,2022-01-28 11:25:05+00:00,北航计组2021,0,praynext/BUAA-CO-2021,453041547,Verilog,BUAA-CO-2021,37,2,2023-02-27 14:29:40+00:00,[],None
84,https://github.com/CQU-CS/My_Mips_CPU.git,2022-01-01 14:37:01+00:00,硬件综合设计：设计实现MIPS CPU - 重庆大学 计算机科学与技术2019级,1,CQU-CS/My_Mips_CPU,443556793,Verilog,My_Mips_CPU,13856,2,2024-01-03 03:32:26+00:00,[],https://api.github.com/licenses/mit
85,https://github.com/Dhaval302/Washing_Machine_Automatic_HDL.git,2022-01-11 18:59:08+00:00,,7,Dhaval302/Washing_Machine_Automatic_HDL,446945996,Verilog,Washing_Machine_Automatic_HDL,1305,2,2024-03-26 16:21:07+00:00,[],None
86,https://github.com/ChayCai/Mult.git,2022-01-12 03:27:17+00:00,"A 32bit multiplier with booth2 coding, wallace tree (jump Wallce tree), and 64bit LookAheadAdder",0,ChayCai/Mult,447063348,Verilog,Mult,53,2,2023-03-07 04:34:32+00:00,[],None
87,https://github.com/shotsan/Man-in-middle_4G_5G.git,2022-01-20 20:10:18+00:00,Proof of concept source code for a Man-in-the-middle in 4G/5G,1,shotsan/Man-in-middle_4G_5G,450243024,Verilog,Man-in-middle_4G_5G,34443,2,2023-11-20 21:47:18+00:00,[],
88,https://github.com/morris6/Fnirsi_FPGA.git,2022-02-01 09:01:36+00:00,Recreating FPGA contents,1,morris6/Fnirsi_FPGA,454319531,Verilog,Fnirsi_FPGA,644,2,2023-12-15 20:34:44+00:00,[],None
89,https://github.com/srimanthtenneti/RISC-CPU-Components.git,2022-01-13 15:48:06+00:00,"Components like ALU, Memory, Control Unit, etc to build a RISC Based CPU. ",1,srimanthtenneti/RISC-CPU-Components,447657602,Verilog,RISC-CPU-Components,8,2,2023-12-23 08:00:02+00:00,[],None
90,https://github.com/HsuYuHuang/NCTU-ICLAB-2021-FALL.git,2022-02-01 07:39:48+00:00,,0,HsuYuHuang/NCTU-ICLAB-2021-FALL,454299655,Verilog,NCTU-ICLAB-2021-FALL,22603,2,2023-08-14 07:17:10+00:00,[],None
91,https://github.com/neoaashish/Verilog_ASIC.git,2022-01-27 13:26:32+00:00,"Implementation of ANN to predict Handwritten Digits: Multiplier and Accumulator (MAC), Accumulator(ACC) design, Integrating with sigmoid IP block. Sigmoid is implemented using LUT.",1,neoaashish/Verilog_ASIC,452692681,Verilog,Verilog_ASIC,4,2,2022-06-22 20:41:57+00:00,[],None
92,https://github.com/To-ToRo/FastICA_processor.git,2022-01-15 15:22:22+00:00,Hardware Implementation of FastICA algorithm.,0,To-ToRo/FastICA_processor,448313673,Verilog,FastICA_processor,5073,2,2024-04-06 21:18:43+00:00,[],None
93,https://github.com/Michael-Jiahao-Zhang/SUSTech_CS207_2021F_Digital-Design.git,2022-02-02 04:53:57+00:00,,1,Michael-Jiahao-Zhang/SUSTech_CS207_2021F_Digital-Design,454647362,Verilog,SUSTech_CS207_2021F_Digital-Design,43104,2,2022-11-07 04:52:17+00:00,[],None
94,https://github.com/margatroid214/sv_prj.git,2022-01-15 06:32:21+00:00,SJTU 2021 SystemVerilog course project.,1,margatroid214/sv_prj,448200567,Verilog,sv_prj,70,2,2023-06-09 06:48:12+00:00,[],None
95,https://github.com/Guo-HY/MIPS_CPU.git,2022-01-17 13:37:26+00:00,基于北航计组课设的MIPSCPU仓库,0,Guo-HY/MIPS_CPU,448908047,Verilog,MIPS_CPU,2247,2,2023-12-29 02:13:27+00:00,[],None
96,https://github.com/habibaaali/32-point-Radix-2FFT.git,2022-01-02 16:27:26+00:00,,0,habibaaali/32-point-Radix-2FFT,443813830,Verilog,32-point-Radix-2FFT,4718,2,2023-09-12 06:39:48+00:00,[],None
97,https://github.com/JSalib5/ECE253-Digital-Logic-and-Computer-Systems.git,2022-01-30 07:49:40+00:00,An advanced course delving into Verilog/System Verilog working with Quartus Prime and the Cyclone V FPGA . Beyond that also utilized ARM x64 Assembly Language,0,JSalib5/ECE253-Digital-Logic-and-Computer-Systems,453619277,Verilog,ECE253-Digital-Logic-and-Computer-Systems,17340,2,2023-01-11 00:42:19+00:00,[],None
98,https://github.com/dgarci23/3d-engine.git,2022-01-13 17:12:08+00:00,3D engine using the VGA output on the DE2-115 with the NIOS II embedded processor. It is an exploration on how to implement a graphics controller in hardware and with a processor.,0,dgarci23/3d-engine,447685582,Verilog,3d-engine,4525,2,2023-12-20 03:33:43+00:00,[],None
99,https://github.com/rxyy-yzp/FPGA-subtraction-circuit.git,2022-01-24 05:15:51+00:00,FPGA subtraction circuit(Digital Logic Experiment),0,rxyy-yzp/FPGA-subtraction-circuit,451325609,Verilog,FPGA-subtraction-circuit,1,2,2022-01-24 05:21:11+00:00,[],None
100,https://github.com/betocool-prog/picosoc_step_01.git,2022-01-03 05:46:58+00:00,Getting started with a PicoSoc Risc-V soft core,0,betocool-prog/picosoc_step_01,443954080,Verilog,picosoc_step_01,177,2,2024-03-25 10:28:05+00:00,[],None
101,https://github.com/Manni-MinM/CEIT-LC-Project.git,2022-01-05 16:20:59+00:00,,1,Manni-MinM/CEIT-LC-Project,444870978,Verilog,CEIT-LC-Project,507,2,2022-02-02 11:28:42+00:00,[],None
102,https://github.com/ispras/hls-idct.git,2022-01-10 10:36:36+00:00,Inverse Discrete Cosine Transform (IDCT) algorithm implementations are written in languages for High-Level Synthesis (HLS) and Hardware Construction (HC) tools.,0,ispras/hls-idct,446379642,Verilog,hls-idct,435,2,2022-05-20 08:00:51+00:00,[],None
103,https://github.com/nihargowdakm/BIST-Design.git,2022-02-01 15:21:22+00:00,"Done as a part of the coursework, Design For Testing and Testability. Designed and implemented in Verilog to add Built in Self Test (BIST) capabilities to a given combinational logic. The Test Pattern Generator (TPG), Output Response Analyzer (ORA) and BIST controller were designed. A 1-bit full adder was considered as the circuit under test.",1,nihargowdakm/BIST-Design,454438611,Verilog,BIST-Design,456,2,2023-11-20 08:25:37+00:00,[],None
104,https://github.com/wintermelon008/Study.git,2022-01-21 09:27:24+00:00,,0,wintermelon008/Study,450429489,Verilog,Study,912816,2,2024-01-18 09:13:28+00:00,[],None
105,https://github.com/sidhantp1906/TicTacToe.git,2022-01-23 16:26:07+00:00,TicTacToe game using verilog hdl and implementation in spartan-3 FPGA board,1,sidhantp1906/TicTacToe,451161974,Verilog,TicTacToe,1415,2,2024-02-21 15:11:59+00:00,"['fpga', 'verilog', 'vlsi-design', 'finite-state-machine', 'spartan-3', 'tictactoe-game']",https://api.github.com/licenses/mit
106,https://github.com/palzhj/u4FCPv2.git,2022-01-10 06:38:32+00:00,MicroTCA.4 fast control and process board (version 2),0,palzhj/u4FCPv2,446308044,Verilog,u4FCPv2,13070,2,2024-04-09 03:25:46+00:00,"['fpga', 'verilog']",None
107,https://github.com/Shaoting-Feng/Ultrasonic-Measuring-Distance.git,2022-01-22 08:56:33+00:00,"This experiment requires the design and manufacture of an ultrasonic application circuit to realize ultrasonic ranging, and display the measured distance to a digital tube. ",0,Shaoting-Feng/Ultrasonic-Measuring-Distance,450765583,Verilog,Ultrasonic-Measuring-Distance,1035,2,2024-03-27 08:44:44+00:00,[],https://api.github.com/licenses/mit
108,https://github.com/MichalMachura/LittleNet.git,2022-01-07 13:07:04+00:00,,2,MichalMachura/LittleNet,445524311,Verilog,LittleNet,574082,2,2024-03-15 01:09:42+00:00,[],None
109,https://github.com/Dai-dirk/32-bit-Multiplier.git,2022-01-04 03:48:17+00:00,A 32-bit Baugh-Wooley multiplier with carry-select add. ,0,Dai-dirk/32-bit-Multiplier,444277419,Verilog,32-bit-Multiplier,91,1,2023-07-30 02:04:11+00:00,[],https://api.github.com/licenses/mit
110,https://github.com/mahdikarami0111/Smart-Parking-System.git,2022-01-03 11:51:54+00:00,,0,mahdikarami0111/Smart-Parking-System,444042862,Verilog,Smart-Parking-System,3563,1,2023-03-03 23:25:44+00:00,[],None
111,https://github.com/SultanShadow/APPROX_MULT.git,2022-01-02 18:36:30+00:00,MPW4_APPROX_MULT,1,SultanShadow/APPROX_MULT,443842448,Verilog,APPROX_MULT,5791,1,2022-04-13 23:48:48+00:00,[],https://api.github.com/licenses/apache-2.0
112,https://github.com/PeterMarrone/VehicleBodyControlModule.git,2022-01-09 22:46:23+00:00,,0,PeterMarrone/VehicleBodyControlModule,446220449,Verilog,VehicleBodyControlModule,8,1,2022-01-21 09:22:30+00:00,[],None
113,https://github.com/elesonchuang/CA_final.git,2022-01-12 08:27:30+00:00,,0,elesonchuang/CA_final,447134834,Verilog,CA_final,1103,1,2022-06-02 07:12:07+00:00,[],None
114,https://github.com/liuqasd/Digital-electronics.git,2022-01-12 03:23:45+00:00,SWJTU数字电路实验课代码,0,liuqasd/Digital-electronics,447062566,Verilog,Digital-electronics,15849,1,2024-04-11 18:32:30+00:00,[],None
115,https://github.com/euvm/avmm_sha3.git,2022-01-24 17:14:17+00:00,,1,euvm/avmm_sha3,451559118,Verilog,avmm_sha3,30,1,2022-03-30 23:15:28+00:00,[],
116,https://github.com/mayank-kabra2001/Processors.git,2022-01-29 13:05:45+00:00,,0,mayank-kabra2001/Processors,453399731,Verilog,Processors,578,1,2022-06-26 14:36:13+00:00,[],None
117,https://github.com/ethan-fong/ALU.git,2022-01-25 17:08:30+00:00,Arithmetic and logic unit implemented on a De1-soc board. Uses 6 7-segment hex displays as outputs and 10 switches as inputs,0,ethan-fong/ALU,451968827,Verilog,ALU,14304,1,2022-05-06 23:35:04+00:00,[],https://api.github.com/licenses/mit
118,https://github.com/amirsoleix/Ethernet-frame-validator.git,2022-01-22 08:31:04+00:00,Verilog implementation of an Ethernet frame validator using the conventional IEEE 802.3 standard.,1,amirsoleix/Ethernet-frame-validator,450760589,Verilog,Ethernet-frame-validator,370,1,2023-08-09 15:29:26+00:00,"['ethernet-protocol', 'verilog']",https://api.github.com/licenses/mit
119,https://github.com/yexiaosu/VE370.git,2022-01-02 16:20:09+00:00,Course materials of VE370,0,yexiaosu/VE370,443812102,Verilog,VE370,41397,1,2023-03-06 07:46:16+00:00,[],None
120,https://github.com/MasterPu2020/UART_system.git,2022-01-14 09:28:32+00:00,Sending and receiving data between FPGA and computer through UART port. FPGA board: Arty A7,0,MasterPu2020/UART_system,447911563,Verilog,UART_system,11,1,2022-03-20 08:28:50+00:00,[],None
121,https://github.com/kgokarn/smallscaleaes.git,2022-01-30 08:43:52+00:00,Small Scale AES verilog implementation using 4-bit Sbox!,0,kgokarn/smallscaleaes,453628949,Verilog,smallscaleaes,4,1,2024-02-26 12:32:32+00:00,[],None
122,https://github.com/qweDxz123/ISP-.git,2022-01-10 15:25:37+00:00,,0,qweDxz123/ISP-,446477017,Verilog,ISP-,21,1,2022-06-28 08:12:01+00:00,[],None
123,https://github.com/ozlemcali/CORDIC-Tabanl-HW-SW-CoDesign.git,2022-01-07 09:29:22+00:00,,2,ozlemcali/CORDIC-Tabanl-HW-SW-CoDesign,445467025,Verilog,CORDIC-Tabanl-HW-SW-CoDesign,2467,1,2022-01-07 17:00:45+00:00,[],None
124,https://github.com/girishkumar-1997/Verilog.git,2022-01-17 09:01:25+00:00,Coding Practice,0,girishkumar-1997/Verilog,448821102,Verilog,Verilog,639,1,2022-03-01 11:06:34+00:00,[],None
125,https://github.com/Dishay952/CS220.git,2022-01-18 05:20:17+00:00,A team repo for CS220,0,Dishay952/CS220,449150797,Verilog,CS220,17878,1,2024-02-19 03:34:12+00:00,[],None
126,https://github.com/litex-hub/pythondata-cpu-marocchino.git,2022-01-13 17:00:56+00:00,Python module containing verilog files for marocchino cpu (for use with LiteX).,0,litex-hub/pythondata-cpu-marocchino,447681894,Verilog,pythondata-cpu-marocchino,376,1,2022-05-26 16:54:58+00:00,[],https://api.github.com/licenses/mpl-2.0
127,https://github.com/msaligane/openfasoc_cryo.git,2022-01-10 05:25:32+00:00,,1,msaligane/openfasoc_cryo,446291397,Verilog,openfasoc_cryo,13298,1,2023-01-28 02:26:10+00:00,[],https://api.github.com/licenses/apache-2.0
128,https://github.com/ain1084/audio_echo_effect.git,2022-01-15 16:45:18+00:00,Simple echo effect implementation with digital audio processing.,2,ain1084/audio_echo_effect,448334941,Verilog,audio_echo_effect,61,1,2023-09-23 08:42:34+00:00,"['audio-processing', 'verilog', 'lattice-fpga', 'i2s-audio']",None
129,https://github.com/junttang/ProgrammingFPGA.git,2022-01-11 03:12:08+00:00,,0,junttang/ProgrammingFPGA,446660926,Verilog,ProgrammingFPGA,533,1,2022-01-16 09:25:32+00:00,[],None
130,https://github.com/SultanShadow/MPW4_ICD_FAST.git,2021-12-31 12:40:16+00:00,Repository for MPW4 Submission,1,SultanShadow/MPW4_ICD_FAST,443342868,Verilog,MPW4_ICD_FAST,60902,1,2022-04-13 23:50:12+00:00,[],https://api.github.com/licenses/apache-2.0
131,https://github.com/medAzizLHB/LT24-display-interface-using-verilog.git,2022-01-27 11:38:46+00:00,,0,medAzizLHB/LT24-display-interface-using-verilog,452658647,Verilog,LT24-display-interface-using-verilog,6,1,2022-06-07 03:53:02+00:00,[],None
132,https://github.com/jogeshsingh/Synchronous-RAM-design-in-Quartus-prime-lite.git,2022-01-29 17:13:35+00:00,"Synchronous RAM is basically used in accessing and writing into the memory , this is an important part of any processor architecture that could be used to read and write the data synchronously . The above project is designed using Verilog HDLV",0,jogeshsingh/Synchronous-RAM-design-in-Quartus-prime-lite,453464110,Verilog,Synchronous-RAM-design-in-Quartus-prime-lite,28,1,2022-07-20 19:00:20+00:00,[],https://api.github.com/licenses/bsd-3-clause
133,https://github.com/Raxio-Z/VGA_Game.git,2022-01-29 12:36:00+00:00,数字逻辑大作业,0,Raxio-Z/VGA_Game,453392863,Verilog,VGA_Game,3739,1,2023-08-01 09:46:10+00:00,[],None
134,https://github.com/visionvlsi/ApproximateBoothMultiplier.git,2022-01-31 18:29:28+00:00,,0,visionvlsi/ApproximateBoothMultiplier,454123009,Verilog,ApproximateBoothMultiplier,2979,1,2023-07-13 16:08:56+00:00,[],None
135,https://github.com/jogeshsingh/RTL-level-design-of-ALU-.git,2022-01-30 10:35:52+00:00,"This project has incorporated an ALU unit of addition , though it can be extended by increasing the opcode data width , but I limited it only addition as an introduction of RTL level design.  This project was done in Xilinx VIVADO using Verilog HDL",0,jogeshsingh/RTL-level-design-of-ALU-,453650571,Verilog,RTL-level-design-of-ALU-,68,1,2022-08-30 00:20:57+00:00,[],https://api.github.com/licenses/mit
136,https://github.com/zzzDavid/SystemC-Examples.git,2022-01-26 01:16:44+00:00,Stratus HLS SystemC Examples,0,zzzDavid/SystemC-Examples,452098851,Verilog,SystemC-Examples,39291,1,2023-10-26 08:20:25+00:00,[],https://api.github.com/licenses/mit
137,https://github.com/williamlamjy/Into-the-NintendoVerse.git,2022-01-25 10:37:05+00:00,,0,williamlamjy/Into-the-NintendoVerse,451834820,Verilog,Into-the-NintendoVerse,154,1,2022-01-25 11:01:40+00:00,[],None
138,https://github.com/Baneist/FPGA-DigitalCamera.git,2022-01-01 10:58:03+00:00,"Digital Camera designed for Nexys4 DDR. Final Project for Digitial Logic (CS102109), Tongji Univ.",0,Baneist/FPGA-DigitalCamera,443520440,Verilog,FPGA-DigitalCamera,6336,1,2024-03-05 15:07:57+00:00,[],https://api.github.com/licenses/agpl-3.0
139,https://github.com/alcatrazEscapee/elec-374.git,2022-01-24 18:30:47+00:00,ELEC 374 CPU Design Project,0,alcatrazEscapee/elec-374,451585557,Verilog,elec-374,252,1,2022-04-09 17:28:13+00:00,[],None
140,https://github.com/jogeshsingh/8-bit-bidirectionl-Shift-Register-on-Spartan-6-XC6SLX9-Mimas-V2-FPGA.git,2022-01-30 08:33:03+00:00,"This project incorporates  shift registers which basically defines how data could be shifted in , shifted Right and shifted left in a digital circuit. The project was done in XILINX ISE 14.7 using Verilog HDL",0,jogeshsingh/8-bit-bidirectionl-Shift-Register-on-Spartan-6-XC6SLX9-Mimas-V2-FPGA,453626955,Verilog,8-bit-bidirectionl-Shift-Register-on-Spartan-6-XC6SLX9-Mimas-V2-FPGA,119,1,2022-07-20 19:00:12+00:00,[],https://api.github.com/licenses/apache-2.0
141,https://github.com/Arjun-Narula/Round-Robin-Arbiter.git,2022-01-08 16:02:00+00:00,,3,Arjun-Narula/Round-Robin-Arbiter,445864235,Verilog,Round-Robin-Arbiter,3,1,2024-03-09 13:40:43+00:00,[],None
142,https://github.com/bizkiwi/verilog-fpga-pingpong-game.git,2022-01-01 06:55:42+00:00,Design and implementation of an electronic game using Verilog and the Basys3 Field Programmable Gate Array (FPGA) kit.,0,bizkiwi/verilog-fpga-pingpong-game,443487899,Verilog,verilog-fpga-pingpong-game,4149,1,2023-06-13 13:20:09+00:00,"['verilog', 'fpga-programming', 'basys3-fpga-board']",https://api.github.com/licenses/mit
143,https://github.com/ChristeZeng/5-stages-pipelines-RV32IZ-CPU.git,2022-01-27 13:30:11+00:00,This is a simple RV32IZ pipelines CPU supports forwarding and branch-not-taken. ,0,ChristeZeng/5-stages-pipelines-RV32IZ-CPU,452693968,Verilog,5-stages-pipelines-RV32IZ-CPU,16440,1,2023-05-05 09:44:14+00:00,[],None
144,https://github.com/20Mhz/sky130_adders.git,2022-01-29 05:39:06+00:00,Study on Adders,0,20Mhz/sky130_adders,453307447,Verilog,sky130_adders,30,1,2022-04-29 20:11:53+00:00,[],https://api.github.com/licenses/mit
145,https://github.com/abhay-mohandas/password-doorlock.git,2022-01-22 09:17:00+00:00,A simple hexadecimal digital door lock using Verilog.,0,abhay-mohandas/password-doorlock,450769585,Verilog,password-doorlock,236,1,2022-07-20 02:53:31+00:00,[],https://api.github.com/licenses/bsd-3-clause
146,https://github.com/Timothy023/Mips_CPU_Pipeline50.git,2022-01-13 02:04:40+00:00,,1,Timothy023/Mips_CPU_Pipeline50,447431856,Verilog,Mips_CPU_Pipeline50,69958,1,2022-01-13 02:22:54+00:00,[],None
147,https://github.com/SvizelPritula/riscv-verilog.git,2022-01-27 11:05:17+00:00,,0,SvizelPritula/riscv-verilog,452648646,Verilog,riscv-verilog,50,1,2024-01-21 14:15:33+00:00,[],https://api.github.com/licenses/bsl-1.0
148,https://github.com/Francis3436/Verilog-Quadcopter-Project-ECE-551.git,2022-01-30 21:27:10+00:00,Verilog Codes for Quadcopter Project,0,Francis3436/Verilog-Quadcopter-Project-ECE-551,453806436,Verilog,Verilog-Quadcopter-Project-ECE-551,16911,1,2024-04-04 17:09:03+00:00,[],None
149,https://github.com/SteveLRojas/DragonBoard_ROM_programmer.git,2022-01-17 23:18:52+00:00,Programmer solution for the DragonBoard's I2C EEPROM.,0,SteveLRojas/DragonBoard_ROM_programmer,449076925,Verilog,DragonBoard_ROM_programmer,8157,1,2023-01-01 09:53:50+00:00,[],None
150,https://github.com/MasterQ32/ecp5-quickstart.git,2021-12-31 11:33:02+00:00,"A blinky template for a full ECP5 verilog workflow including simulation, synthesis and programming",0,MasterQ32/ecp5-quickstart,443330894,Verilog,ecp5-quickstart,10,1,2021-12-31 12:27:36+00:00,[],None
151,https://github.com/Tranbach69/VEDIC_8x8.git,2022-01-20 01:44:05+00:00,,0,Tranbach69/VEDIC_8x8,449917067,Verilog,VEDIC_8x8,1452,1,2023-07-21 14:03:59+00:00,[],None
152,https://github.com/aolwyn/CPU-Construction-Zone.git,2022-02-04 18:39:38+00:00,The development of a RISC-style processor / computer in Verilog,0,aolwyn/CPU-Construction-Zone,455657973,Verilog,CPU-Construction-Zone,459,1,2023-03-03 19:39:04+00:00,[],https://api.github.com/licenses/mit
153,https://github.com/california-polytechnic-university/ECE3300_LAB_SPRING_2022_GROUP_A.git,2022-02-02 03:05:50+00:00,,0,california-polytechnic-university/ECE3300_LAB_SPRING_2022_GROUP_A,454626875,Verilog,ECE3300_LAB_SPRING_2022_GROUP_A,44585,1,2024-01-23 21:42:25+00:00,[],https://api.github.com/licenses/gpl-3.0
154,https://github.com/cliche-niche/CS220.git,2022-01-25 09:11:24+00:00,"Contains assignment submissions made for the course CS220 ""Computer Organisation"" at IIT-K in the 2021-22 II Sem.",0,cliche-niche/CS220,451808212,Verilog,CS220,1596,1,2024-02-19 03:38:10+00:00,"['assignments', 'computer-organization', 'cs220', 'iitk']",None
155,https://github.com/cyp0633/ModelComputer.git,2021-12-31 02:42:44+00:00,Model computer of digital circuit course,0,cyp0633/ModelComputer,443235538,Verilog,ModelComputer,390,1,2023-09-24 10:46:44+00:00,[],None
156,https://github.com/neginshirvani/CordicMachine.git,2022-01-18 09:35:21+00:00,implement a cordic machine using python and verilog,0,neginshirvani/CordicMachine,449222276,Verilog,CordicMachine,3,1,2023-04-14 01:59:33+00:00,[],None
157,https://github.com/armleo/armleo_gpio.git,2022-01-22 09:06:05+00:00,HighSpeed LVCMOS IO Cell IP for sky130; GPLv3 licensed. Use at your own risk. MPW5 Tapeout: https://github.com/armleo/armleo_gpio_mpw5,1,armleo/armleo_gpio,450767467,Verilog,armleo_gpio,75149,1,2023-04-13 15:03:42+00:00,[],None
158,https://github.com/hDyat/FPGA_BLDC_controller.git,2022-01-26 02:59:35+00:00,,0,hDyat/FPGA_BLDC_controller,452121767,Verilog,FPGA_BLDC_controller,1749,1,2023-10-02 02:24:12+00:00,[],None
159,https://github.com/dgarci23/rs-232.git,2022-02-02 02:21:44+00:00,,0,dgarci23/rs-232,454618720,Verilog,rs-232,206,1,2022-02-04 16:25:17+00:00,[],None
160,https://github.com/sgp62/ECE5760.git,2022-01-30 18:48:32+00:00,"sgp62, rbm244, hlg66",0,sgp62/ECE5760,453770356,Verilog,ECE5760,83834,1,2023-06-26 06:24:46+00:00,[],None
161,https://github.com/Ma-YX/UCAS_CODlab.git,2022-01-14 06:14:36+00:00,,0,Ma-YX/UCAS_CODlab,447862055,Verilog,UCAS_CODlab,7206,1,2022-09-20 03:06:59+00:00,[],https://api.github.com/licenses/mit
162,https://github.com/jogeshsingh/4-bit-Universal-Shift-Register-.git,2022-01-29 16:18:59+00:00,"This is a design of 4 bit Universal Shift Register , which uses structural level implementation using Hardware Description Language (VERILOG), It is implemented in XILINX VIVADO AND XILINX ISE 14.7 as well to load the same on SPARTAN-6 XC6SLX9 mimas V2 FPGA board",0,jogeshsingh/4-bit-Universal-Shift-Register-,453449880,Verilog,4-bit-Universal-Shift-Register-,132,1,2022-07-20 18:59:57+00:00,[],https://api.github.com/licenses/bsd-3-clause
163,https://github.com/fuyo1622/NTUEE-Computer_Architecture-110-1.git,2022-01-24 13:05:28+00:00,,0,fuyo1622/NTUEE-Computer_Architecture-110-1,451467307,Verilog,NTUEE-Computer_Architecture-110-1,5928,1,2024-02-23 07:54:30+00:00,[],None
164,https://github.com/lgili/xilinx-ip-repo.git,2022-01-05 12:02:50+00:00,,0,lgili/xilinx-ip-repo,444788183,Verilog,xilinx-ip-repo,701,1,2024-03-11 05:41:22+00:00,[],None
165,https://github.com/coherent17/Single-Cycle-MIPS-CPU.git,2022-01-13 08:55:50+00:00,NYCU computer organization final project,0,coherent17/Single-Cycle-MIPS-CPU,447529080,Verilog,Single-Cycle-MIPS-CPU,3313,1,2022-12-19 07:01:31+00:00,['cpu-mips'],https://api.github.com/licenses/mit
166,https://github.com/LeThanhHai-1610/SingleCycleRV32I.git,2022-01-05 07:17:52+00:00,"This is a project to design and implement a single cycle RV32I CPU to execute basic instructions of RISC-V ISA such as R, I, U, S, B type. This project is still being developed.",0,LeThanhHai-1610/SingleCycleRV32I,444702746,Verilog,SingleCycleRV32I,23,1,2023-11-06 09:49:51+00:00,[],None
167,https://github.com/thkim2031/4x4-booth-2-multiplier-signed.git,2022-01-18 10:52:34+00:00,,0,thkim2031/4x4-booth-2-multiplier-signed,449246372,Verilog,4x4-booth-2-multiplier-signed,4,1,2022-10-27 23:41:05+00:00,[],None
168,https://github.com/Akhil-Barad-04/Verilog_sequential_Circuit_Codes.git,2021-12-31 13:40:48+00:00,Sequential_Circuits,0,Akhil-Barad-04/Verilog_sequential_Circuit_Codes,443353898,Verilog,Verilog_sequential_Circuit_Codes,16,1,2021-12-31 14:26:07+00:00,[],None
169,https://github.com/MikeWalrus/mipsel32-cpu.git,2022-02-01 12:39:58+00:00,,0,MikeWalrus/mipsel32-cpu,454382508,Verilog,mipsel32-cpu,385,1,2022-09-01 11:47:41+00:00,[],None
170,https://github.com/MichGedd/Mini-SRC.git,2022-01-24 18:07:18+00:00,Queen's University ELEC 374 Term Project,0,MichGedd/Mini-SRC,451577625,Verilog,Mini-SRC,86,1,2023-03-10 12:11:36+00:00,[],https://api.github.com/licenses/mit
171,https://github.com/ProValarous/Chrome-T-Rex-Game-Using-EMG.git,2022-01-26 06:39:02+00:00,,1,ProValarous/Chrome-T-Rex-Game-Using-EMG,452167432,Verilog,Chrome-T-Rex-Game-Using-EMG,1149,1,2022-05-24 06:36:36+00:00,[],None
172,https://github.com/geotrieu/ezRISC.git,2022-02-03 19:09:51+00:00,Simple RISC Computer built in Verilog,0,geotrieu/ezRISC,455294674,Verilog,ezRISC,515,1,2022-10-05 11:53:10+00:00,[],None
173,https://github.com/WongTampan123/8bit_pwm_verilog.git,2022-01-28 01:38:11+00:00,8-Bit PWM Generator written in Verilog HDL,0,WongTampan123/8bit_pwm_verilog,452903661,Verilog,8bit_pwm_verilog,1,1,2024-01-02 18:08:26+00:00,[],None
174,https://github.com/youssefalarnaouty/PPI_Implementation.git,2022-02-03 16:39:06+00:00,An implementation the 8255 PPI chip (BSR mode - Mode 0) in Verilog,0,youssefalarnaouty/PPI_Implementation,455244946,Verilog,PPI_Implementation,231,1,2022-02-05 17:20:39+00:00,[],None
175,https://github.com/sbaldzenka/random_number_generator.git,2022-01-26 18:27:41+00:00,,1,sbaldzenka/random_number_generator,452392671,Verilog,random_number_generator,2173,1,2022-04-18 13:32:23+00:00,"['fpga-soc', 'altera-fpga', 'verilog', 'questasim', 'linux', 'c']",None
176,https://github.com/lhrodovalho/sky130sbcs.git,2021-12-31 15:56:34+00:00,,0,lhrodovalho/sky130sbcs,443379571,Verilog,sky130sbcs,7446,1,2024-04-10 20:15:53+00:00,[],https://api.github.com/licenses/apache-2.0
177,https://github.com/mwang98/Single-Cycle-RISC-V-CPU.git,2022-01-02 14:55:49+00:00,Single Cycle RISC-V CPU implementation,1,mwang98/Single-Cycle-RISC-V-CPU,443792558,Verilog,Single-Cycle-RISC-V-CPU,2728,1,2022-06-11 17:06:57+00:00,[],
178,https://github.com/kmisimn76/SpartanCalcul.git,2022-01-02 04:10:40+00:00,ece2 project,0,kmisimn76/SpartanCalcul,443678572,Verilog,SpartanCalcul,11087,1,2022-02-15 05:27:47+00:00,[],None
179,https://github.com/jogeshsingh/4-Bit-Arithmetic-Logic-Unit-Design-with-registered-output.git,2022-01-30 04:21:04+00:00,"This project involves basic functions of arithmetic , shift operations , flag overflow detection with registered output . It was done in Xilinx VIVADO tool using HARDWARE DESCRIPTION LANGUAGE (VERILOG).",0,jogeshsingh/4-Bit-Arithmetic-Logic-Unit-Design-with-registered-output,453585833,Verilog,4-Bit-Arithmetic-Logic-Unit-Design-with-registered-output,22,1,2022-07-20 19:00:05+00:00,[],https://api.github.com/licenses/apache-2.0
180,https://github.com/jogeshsingh/8-Bit-Serial-Adder-Design-using-Mealy-machine.git,2022-02-01 04:44:07+00:00,"It incorporates Shift registers , counter and Adder FSM logic Unit which generates the sum output signal based upon the input carry and data from shift registers then computes the result in sum register . it was designed in Quartus Prime Lite using Verilog HDL and verified in Modedlsim. Learnt about the FSM based Design techniques in RTL design FLOW",0,jogeshsingh/8-Bit-Serial-Adder-Design-using-Mealy-machine,454263844,Verilog,8-Bit-Serial-Adder-Design-using-Mealy-machine,82,1,2022-07-20 18:59:50+00:00,[],https://api.github.com/licenses/apache-2.0
181,https://github.com/shawn110285/Cookabarra_Jtag.git,2022-02-03 00:05:24+00:00,debug module was partially supported ,0,shawn110285/Cookabarra_Jtag,454976946,Verilog,Cookabarra_Jtag,3134,1,2022-02-11 08:25:32+00:00,[],None
182,https://github.com/pawlex/BeMicro_MAX10.git,2022-01-04 12:31:40+00:00,BeMicro Max10 FPGA template ,0,pawlex/BeMicro_MAX10,444411683,Verilog,BeMicro_MAX10,3802,1,2022-04-20 11:02:29+00:00,[],None
183,https://github.com/mustafa-khairallah/romulus-ip.git,2022-01-08 01:27:23+00:00,,1,mustafa-khairallah/romulus-ip,445695969,Verilog,romulus-ip,1389,1,2023-10-10 10:13:22+00:00,[],https://api.github.com/licenses/mit
184,https://github.com/RohitRadar/verilog.git,2022-01-11 17:38:20+00:00,Verilog Code for various modules/sensors,0,RohitRadar/verilog,446921309,Verilog,verilog,11,1,2022-11-08 02:56:33+00:00,[],None
185,https://github.com/TheSonders/TestATLAS.git,2022-01-24 17:09:54+00:00,,0,TheSonders/TestATLAS,451557566,Verilog,TestATLAS,15,1,2022-01-28 07:42:13+00:00,[],None
186,https://github.com/SenuraHansaja/AES-128-Bit-Decryptor.git,2022-01-26 16:19:03+00:00,AES decryption implementation in FPGA using Verilog,0,SenuraHansaja/AES-128-Bit-Decryptor,452348433,Verilog,AES-128-Bit-Decryptor,549,1,2022-02-20 17:53:07+00:00,[],None
187,https://github.com/QiuYqnqun/IIR-highpass-Filter-ASIC.git,2022-01-14 08:46:22+00:00,,0,QiuYqnqun/IIR-highpass-Filter-ASIC,447899300,Verilog,IIR-highpass-Filter-ASIC,350,1,2022-03-22 09:20:10+00:00,[],None
188,https://github.com/gyurco/Homelab-FPGA.git,2022-02-03 20:00:00+00:00,FPGA replica of the Hungarian Homelab-3 KIT computer,0,gyurco/Homelab-FPGA,455309311,Verilog,Homelab-FPGA,4268,1,2022-02-22 08:53:01+00:00,[],None
189,https://github.com/synclairy/mips-cpu.git,2022-02-02 09:55:23+00:00,,0,synclairy/mips-cpu,454719651,Verilog,mips-cpu,76,1,2023-10-11 04:50:01+00:00,[],None
190,https://github.com/SR42-dev/digitaldesign-course.git,2022-01-02 13:19:14+00:00,Codes for the UE20CS201 course.,0,SR42-dev/digitaldesign-course,443770883,Verilog,digitaldesign-course,14001,1,2022-11-01 10:09:31+00:00,[],https://api.github.com/licenses/cc0-1.0
191,https://github.com/jogeshsingh/Rising_Edge_Detector.git,2022-01-29 17:29:40+00:00,"This project  basically performs the functionality of detecting rising edge in the circuit . It was carried out using Verilog HDL,",0,jogeshsingh/Rising_Edge_Detector,453468434,Verilog,Rising_Edge_Detector,49,1,2022-07-20 19:00:20+00:00,[],None
192,https://github.com/turag-ev/brain-fpga-camera.git,2022-01-19 16:24:09+00:00,FPGA/Camera-based Object Detection used in TURAG's Roboter Brain,0,turag-ev/brain-fpga-camera,449767923,Verilog,brain-fpga-camera,4700,1,2023-12-03 11:38:23+00:00,[],https://api.github.com/licenses/gpl-3.0
193,https://github.com/alinourian/Floating-Point-Full-Adder.git,2022-01-09 14:20:11+00:00,Logic Circuits & Digital Systems Verilog Project - Sharif University of Technology - Electrical Engineering Department,0,alinourian/Floating-Point-Full-Adder,446109403,Verilog,Floating-Point-Full-Adder,200,1,2024-04-01 12:52:24+00:00,[],None
194,https://github.com/brktnc/SOC-System-on-Chip-Design-CORDIC-Tabanl-HW-SW-Codesign.git,2022-01-06 17:31:45+00:00,,0,brktnc/SOC-System-on-Chip-Design-CORDIC-Tabanl-HW-SW-Codesign,445255511,Verilog,SOC-System-on-Chip-Design-CORDIC-Tabanl-HW-SW-Codesign,1851,1,2022-05-26 17:03:56+00:00,[],None
195,https://github.com/CaT-mindepth/new_fpga_cat.git,2022-01-18 16:40:39+00:00,"This is a ""copy"" from https://github.com/multitenancy-project/corundum-forked-after-sigcomm/tree/xy-version",0,CaT-mindepth/new_fpga_cat,449366060,Verilog,new_fpga_cat,2258,1,2023-03-22 09:21:47+00:00,[],None
196,https://github.com/Computer-103/verify-verilator.git,2022-01-26 09:20:41+00:00,,0,Computer-103/verify-verilator,452211872,Verilog,verify-verilator,51,1,2022-05-26 06:13:38+00:00,[],None
197,https://github.com/SARS-CLASSIFY/FPGA_MODULATOR.git,2022-01-26 13:07:07+00:00,FPGA MODULATOR AND DEMODULATOR,0,SARS-CLASSIFY/FPGA_MODULATOR,452278884,Verilog,FPGA_MODULATOR,147759,1,2023-04-27 07:32:16+00:00,[],None
198,https://github.com/AngeloJacobo/SDCard_Driver_Test.git,2022-01-28 16:00:52+00:00,Vivado files for testing my SD card driver. Implemented on CMOD S7 FPGA.,0,AngeloJacobo/SDCard_Driver_Test,453129229,Verilog,SDCard_Driver_Test,1903,1,2022-06-16 05:33:23+00:00,[],https://api.github.com/licenses/mit
199,https://github.com/TheShifanier/PWM_IP.git,2022-01-29 10:39:33+00:00,Diploma PWM IP-core,0,TheShifanier/PWM_IP,453367830,Verilog,PWM_IP,454,1,2022-01-29 10:41:22+00:00,[],None
200,https://github.com/BondMachineHQ/bondmachine_ebaz4205_buildroot_example.git,2022-02-04 21:49:49+00:00,Buildroot on Ebaz4205. How to create from scratch a complete BondMachine accelerated buildroot image for the Ebaz4205 board,0,BondMachineHQ/bondmachine_ebaz4205_buildroot_example,455706741,Verilog,bondmachine_ebaz4205_buildroot_example,602,1,2023-01-14 18:59:07+00:00,"['buildroot', 'ebaz4205', 'fpga', 'howto', 'bondmachine']",https://api.github.com/licenses/apache-2.0
201,https://github.com/enochliang/COURSE--2021_Fall_NYCU_ICLAB.git,2022-01-28 04:58:19+00:00,,0,enochliang/COURSE--2021_Fall_NYCU_ICLAB,452944264,Verilog,COURSE--2021_Fall_NYCU_ICLAB,17773,1,2024-02-06 05:47:24+00:00,[],None
202,https://github.com/Wuhaotian0117/BUAA_CO_2020Fall.git,2022-01-17 09:45:03+00:00,The projects for buaa_computer_organization,0,Wuhaotian0117/BUAA_CO_2020Fall,448834745,Verilog,BUAA_CO_2020Fall,1603,1,2024-04-01 12:37:34+00:00,[],None
203,https://github.com/makki51x3/Digital-Lock.git,2022-01-29 03:05:32+00:00,,0,makki51x3/Digital-Lock,453282123,Verilog,Digital-Lock,1781,1,2022-05-26 09:38:45+00:00,[],None
204,https://github.com/sakundu/OpenROAD-DPI.git,2022-01-02 00:36:22+00:00,,0,sakundu/OpenROAD-DPI,443651967,Verilog,OpenROAD-DPI,386018,1,2022-03-17 08:18:23+00:00,[],https://api.github.com/licenses/bsd-3-clause
205,https://github.com/Maxwell-Wong/-Muiti-Cycle-CPU-.git,2022-01-27 02:55:04+00:00,多周期CPU设计与实现,0,Maxwell-Wong/-Muiti-Cycle-CPU-,452518623,Verilog,-Muiti-Cycle-CPU-,201,1,2023-08-29 05:45:07+00:00,[],None
206,https://github.com/jogeshsingh/UP-DOWN-COUNTER-ON-SPARTAN-6-XC6SLX9-MIMAS-V2-FPGA-.git,2022-01-29 16:51:57+00:00,"This a UP_DOWN counter project , basically it turns on the right most two seven segment display of FPGA and does it operation of counting up and down.",0,jogeshsingh/UP-DOWN-COUNTER-ON-SPARTAN-6-XC6SLX9-MIMAS-V2-FPGA-,453458462,Verilog,UP-DOWN-COUNTER-ON-SPARTAN-6-XC6SLX9-MIMAS-V2-FPGA-,90,1,2022-07-20 19:00:07+00:00,[],https://api.github.com/licenses/mit
207,https://github.com/jogeshsingh/4-Bit-Carry-Look-Ahead-Adder-Design-in-Xilinx-VIVADO.git,2022-01-30 09:29:07+00:00,"This Project is basically representing the functionality of Carry Look Ahead adder unit which includes propagation and carry generation logic , which is fed back to carry logic unit to process the carry output so that delay could be lightened as in case of ripple carry adder there is a delay due to carry  being added in next adder logic but Look ahead adder mitigates this limitation . the only limitation this design has is enough hardware is required . This project was made using Verilog HDL.",0,jogeshsingh/4-Bit-Carry-Look-Ahead-Adder-Design-in-Xilinx-VIVADO,453637542,Verilog,4-Bit-Carry-Look-Ahead-Adder-Design-in-Xilinx-VIVADO,25,1,2022-07-21 18:58:10+00:00,[],https://api.github.com/licenses/gpl-3.0
208,https://github.com/CHARIOOSHAW/riscv_core.git,2022-01-21 09:29:33+00:00,This is a simplified RISC_V core based on e200 which is permitted for learning use only.,0,CHARIOOSHAW/riscv_core,450430183,Verilog,riscv_core,14988,1,2022-01-28 11:18:55+00:00,[],None
209,https://github.com/CodePurble/fpga-systolic-arrays.git,2022-01-05 13:33:28+00:00,Systolic array implementations and examples,3,CodePurble/fpga-systolic-arrays,444815424,Verilog,fpga-systolic-arrays,3,1,2022-05-26 07:26:21+00:00,[],None
210,https://github.com/shotamishima/td4fpga.git,2022-01-11 11:14:44+00:00,,1,shotamishima/td4fpga,446789618,Verilog,td4fpga,10,1,2022-06-29 21:52:53+00:00,[],None
211,https://github.com/pawlex/uart.git,2022-01-11 01:19:01+00:00,verilog uart model with AXI interface.  No FIFIO,0,pawlex/uart,446635856,Verilog,uart,151,1,2023-01-20 15:53:43+00:00,[],None
212,https://github.com/wyp7788/SoC_Demo.git,2022-01-15 06:53:25+00:00,Step by step to complete the design of the reduced instryction set CPU and FPGA impementation.,0,wyp7788/SoC_Demo,448204225,Verilog,SoC_Demo,59,1,2023-04-25 21:49:32+00:00,[],https://api.github.com/licenses/mit
213,https://github.com/PrajwalYelne/AES_256_Encryption_Algorithm.git,2022-01-04 13:27:53+00:00,"AES is implemented in software and hardware throughout the world to encrypt sensitive data. It is essential for computer security, cybersecurity and electronic data protection.",0,PrajwalYelne/AES_256_Encryption_Algorithm,444429155,Verilog,AES_256_Encryption_Algorithm,331,1,2022-01-27 05:44:22+00:00,[],None
214,https://github.com/Ibrahimrahhal/design-lab.git,2022-01-03 20:53:02+00:00,,0,Ibrahimrahhal/design-lab,444196547,Verilog,design-lab,154,1,2023-03-07 10:28:55+00:00,[],None
215,https://github.com/david20571015/Computer-Organization.git,2022-01-14 03:59:52+00:00,2021 Fall @ NYCU,0,david20571015/Computer-Organization,447836864,Verilog,Computer-Organization,225,1,2023-01-25 17:52:44+00:00,['course'],None
216,https://github.com/steven1lung/riscv_cpu.git,2022-01-28 14:06:26+00:00,,0,steven1lung/riscv_cpu,453090175,Verilog,riscv_cpu,36,1,2022-06-10 12:30:21+00:00,[],None
217,https://github.com/Aditya2487/PWM_Shift_Verilog.git,2022-01-20 15:00:18+00:00,Implementing a 8 bit shift register compatible with PWM Outputs using Verilog HDL,1,Aditya2487/PWM_Shift_Verilog,450141602,Verilog,PWM_Shift_Verilog,3,1,2022-09-21 05:10:28+00:00,[],None
218,https://github.com/JunnanLi/picoTSN.git,2022-01-23 08:42:00+00:00,,0,JunnanLi/picoTSN,451048101,Verilog,picoTSN,38,1,2023-12-04 15:02:29+00:00,"['verilog', 'tsn']",https://api.github.com/licenses/mit
219,https://github.com/mshah12/ece411-fa21.git,2022-01-04 20:50:14+00:00,Computer Organization and Design course taken at the University of Illinois at Urbana-Champaign,1,mshah12/ece411-fa21,444559342,Verilog,ece411-fa21,6178,1,2023-09-28 18:28:56+00:00,[],https://api.github.com/licenses/mit
220,https://github.com/L-Kh-Hovhannisyan/FPGA.git,2021-12-31 12:26:19+00:00,"This repo contains educational projects, connected with FPGA. All program are written for Altera Quartus IV.",0,L-Kh-Hovhannisyan/FPGA,443340424,Verilog,FPGA,13014,1,2023-02-27 02:24:01+00:00,"['fpga', 'verilog', 'vhdl-code', 'excercises', 'study']",None
221,https://github.com/wkxfudan/booth.git,2022-01-02 01:50:32+00:00,,0,wkxfudan/booth,443660594,Verilog,booth,11450,1,2022-02-24 08:13:14+00:00,[],None
222,https://github.com/chubylive/MasterProjSivofE.git,2022-01-09 22:41:44+00:00,Prime number finder accelerator,0,chubylive/MasterProjSivofE,446219700,Verilog,MasterProjSivofE,127505,1,2022-02-20 22:53:05+00:00,[],None
223,https://github.com/divyanshu943/DDCO-LAB.git,2022-01-14 15:38:02+00:00,,0,divyanshu943/DDCO-LAB,448018207,Verilog,DDCO-LAB,1914,1,2022-03-30 18:16:35+00:00,[],None
224,https://github.com/ychuang1234/2D-vector-length-calculation-implemented-in-verilog.git,2022-01-11 16:01:43+00:00,,0,ychuang1234/2D-vector-length-calculation-implemented-in-verilog,446889121,Verilog,2D-vector-length-calculation-implemented-in-verilog,272,1,2022-07-08 10:39:28+00:00,[],None
225,https://github.com/PranitiV/ECE241-Digital-Systems.git,2022-01-12 17:54:37+00:00,,0,PranitiV/ECE241-Digital-Systems,447317892,Verilog,ECE241-Digital-Systems,29,1,2023-02-20 23:12:12+00:00,[],None
226,https://github.com/thomasbiv/CDA4203-Verilog.git,2022-02-02 14:25:45+00:00,Repo for storing all Verilog modules made in CDA4203 Computer Systems Design,0,thomasbiv/CDA4203-Verilog,454806190,Verilog,CDA4203-Verilog,7,1,2023-01-03 18:25:55+00:00,[],None
227,https://github.com/christianreivan/Bits-Detector.git,2022-01-05 15:38:10+00:00,,0,christianreivan/Bits-Detector,444857167,Verilog,Bits-Detector,9,1,2022-01-05 16:12:51+00:00,[],None
228,https://github.com/JStudiner/NotELEC374.git,2022-01-27 19:51:00+00:00,,1,JStudiner/NotELEC374,452822969,Verilog,NotELEC374,78,1,2023-01-23 21:17:33+00:00,[],None
229,https://github.com/shelbyisnothere/VLSIProject.git,2022-01-27 03:39:45+00:00,,0,shelbyisnothere/VLSIProject,452528637,Verilog,VLSIProject,82,1,2022-02-16 15:58:54+00:00,[],None
230,https://github.com/pPetrichor/assignments.git,2022-01-29 08:59:25+00:00,some assignments during my BS,0,pPetrichor/assignments,453346325,Verilog,assignments,385868,1,2022-06-03 19:10:40+00:00,[],None
231,https://github.com/muraguchi/uart_apb.git,2022-01-29 17:01:11+00:00,,0,muraguchi/uart_apb,453460751,Verilog,uart_apb,9,1,2022-08-27 15:59:25+00:00,[],None
232,https://github.com/sgma-svn/CORDIC.git,2022-01-30 21:56:06+00:00,16 stage pipeline verilog implementation for SDR,0,sgma-svn/CORDIC,453812112,Verilog,CORDIC,4,1,2023-05-25 20:49:33+00:00,[],None
233,https://github.com/ararajs/fyp.git,2022-01-24 15:45:17+00:00,Verilog code for FYP Designs,0,ararajs/fyp,451526145,Verilog,fyp,84,1,2022-01-24 17:05:46+00:00,[],None
234,https://github.com/roderick1014/HLS-final-project-FINN.git,2022-01-25 05:25:00+00:00,,0,roderick1014/HLS-final-project-FINN,451746316,Verilog,HLS-final-project-FINN,27273,1,2022-08-30 17:06:43+00:00,[],None
235,https://github.com/GhiathAjam/LFSR_Verilog.git,2022-01-22 01:16:58+00:00,LFSR Randomizer created with Verilog,0,GhiathAjam/LFSR_Verilog,450686070,Verilog,LFSR_Verilog,2,1,2022-01-25 18:12:59+00:00,[],None
236,https://github.com/luke-mckay/cr_bin2gray.git,2022-01-03 01:45:33+00:00,Binary to Gray Code Conversion,1,luke-mckay/cr_bin2gray,443912399,Verilog,cr_bin2gray,7,0,2022-01-10 03:27:04+00:00,[],None
237,https://github.com/MabinMat/DigitalClock.git,2022-01-02 17:44:26+00:00,,0,MabinMat/DigitalClock,443831351,Verilog,DigitalClock,24,0,2022-01-02 17:54:17+00:00,[],None
238,https://github.com/LEE-RUM/sixteen-bit-cpu.git,2022-01-04 00:23:54+00:00,,0,LEE-RUM/sixteen-bit-cpu,444237089,Verilog,sixteen-bit-cpu,6,0,2022-05-16 23:05:53+00:00,[],None
239,https://github.com/derrickzhuyz/Design-of-MIPS-SOC-RTL.git,2022-01-03 17:27:05+00:00,"The RTL code for MIPS SOC. 3rd Year Hardware Design Winter Semester, CQU.",0,derrickzhuyz/Design-of-MIPS-SOC-RTL,444144884,Verilog,Design-of-MIPS-SOC-RTL,35,0,2022-01-10 13:24:51+00:00,[],None
240,https://github.com/Parin2616/Verilog_Codes.git,2022-01-05 18:29:34+00:00,,0,Parin2616/Verilog_Codes,444910301,Verilog,Verilog_Codes,13,0,2022-01-05 18:45:34+00:00,[],None
241,https://github.com/sysu-lyw/CPU.git,2022-01-03 04:06:26+00:00,计算机组成原理——单周期CPU,0,sysu-lyw/CPU,443936111,Verilog,CPU,22268,0,2022-01-03 04:29:55+00:00,[],None
242,https://github.com/luke-mckay/cr_sync.git,2021-12-31 23:18:51+00:00,A simple parameratized flip-flop synchronizer to eliminate basic meta-stability issues.,0,luke-mckay/cr_sync,443439506,Verilog,cr_sync,6,0,2022-11-23 19:15:02+00:00,[],None
243,https://github.com/BlazKor/RISC_V.git,2021-12-31 15:23:57+00:00,,0,BlazKor/RISC_V,443373586,Verilog,RISC_V,49,0,2021-12-31 15:25:40+00:00,[],None
244,https://github.com/guissalustiano/lab-dig-1.git,2022-01-13 15:10:28+00:00,Exercicios de LabDig1 em Verilog,0,guissalustiano/lab-dig-1,447644584,Verilog,lab-dig-1,2,0,2022-01-13 15:10:40+00:00,[],None
245,https://github.com/saurabhsharan/mips-cpu.git,2022-01-10 04:40:10+00:00,,0,saurabhsharan/mips-cpu,446282275,Verilog,mips-cpu,67,0,2023-08-18 00:52:14+00:00,[],None
246,https://github.com/ssadhikari/iS-CUBE-Processor.git,2022-01-10 20:40:06+00:00,8-Core-Processor-to-perform-matrix-multiplication,0,ssadhikari/iS-CUBE-Processor,446574976,Verilog,iS-CUBE-Processor,513,0,2022-01-10 20:41:40+00:00,[],None
247,https://github.com/spi8as7/uart-baud-rate-controller.git,2022-01-11 00:18:24+00:00,"Uart baud rater controller, uart receiver ",0,spi8as7/uart-baud-rate-controller,446623759,Verilog,uart-baud-rate-controller,407,0,2022-01-11 00:24:28+00:00,[],None
248,https://github.com/matth2k/duc_hls.git,2022-01-24 11:58:27+00:00,,0,matth2k/duc_hls,451445966,Verilog,duc_hls,32,0,2022-04-05 04:06:57+00:00,[],None
249,https://github.com/e1810/bitxor.git,2022-01-17 14:49:24+00:00,,0,e1810/bitxor,448934125,Verilog,bitxor,21,0,2022-01-18 13:39:48+00:00,[],None
250,https://github.com/thiagomslv/Cofre-Verilog.git,2022-01-17 06:29:25+00:00,Projeto de um cofre para FPGA feito em verilog no ano de 2018.,0,thiagomslv/Cofre-Verilog,448778505,Verilog,Cofre-Verilog,1038,0,2022-01-17 06:29:33+00:00,[],None
251,https://github.com/Dhruv-Mahajan1/Digital-Design-Labs-EEL2020.git,2022-01-17 18:28:02+00:00,,0,Dhruv-Mahajan1/Digital-Design-Labs-EEL2020,449005300,Verilog,Digital-Design-Labs-EEL2020,1713,0,2022-05-27 10:54:24+00:00,[],None
252,https://github.com/mdzakirhussain/try2.git,2022-01-21 05:37:16+00:00,,0,mdzakirhussain/try2,450366819,Verilog,try2,7854,0,2022-01-21 05:56:05+00:00,[],https://api.github.com/licenses/apache-2.0
253,https://github.com/grantsmith09/Pipelined-Processor.git,2022-01-24 23:44:14+00:00,,0,grantsmith09/Pipelined-Processor,451671840,Verilog,Pipelined-Processor,51,0,2022-01-24 23:49:38+00:00,[],None
254,https://github.com/Zsolt2000/Proiect-FC.git,2022-01-23 19:02:29+00:00,Sumator-scazator pe 8 biti,0,Zsolt2000/Proiect-FC,451202739,Verilog,Proiect-FC,1,0,2022-01-23 19:05:23+00:00,[],None
255,https://github.com/CWalker254/CPSC4210_ALU.git,2022-01-13 00:06:58+00:00,"Final project for CPSC 4210 - VLSI Digital Design and Synthesis, Fall 2021. Circuit implementation of an Arithmetic Logic Unit (ALU) using Verilog HDL.",0,CWalker254/CPSC4210_ALU,447408524,Verilog,CPSC4210_ALU,4,0,2022-01-13 00:14:32+00:00,[],None
256,https://github.com/mschof/ldmac.git,2022-01-14 11:46:16+00:00,,0,mschof/ldmac,447948659,Verilog,ldmac,13,0,2022-01-14 11:47:38+00:00,[],None
257,https://github.com/abhinav0022/QuizGame-FastestFingerFirst.git,2022-01-15 12:40:29+00:00,,0,abhinav0022/QuizGame-FastestFingerFirst,448273644,Verilog,QuizGame-FastestFingerFirst,1520,0,2022-01-15 12:41:07+00:00,[],None
258,https://github.com/joec1368/DDfinal.git,2022-01-08 09:07:38+00:00,,0,joec1368/DDfinal,445772434,Verilog,DDfinal,3,0,2022-01-08 09:07:43+00:00,[],None
259,https://github.com/yungen-lu/snake_game_verilog.git,2022-01-08 06:09:20+00:00,,0,yungen-lu/snake_game_verilog,445739373,Verilog,snake_game_verilog,5,0,2022-01-08 06:11:17+00:00,[],None
260,https://github.com/MeharMishra/Logic-Gates.git,2022-01-18 10:22:32+00:00,,0,MeharMishra/Logic-Gates,449237115,Verilog,Logic-Gates,3,0,2022-01-18 10:25:25+00:00,[],None
261,https://github.com/MeharMishra/Sequence-Detector-101010.git,2022-01-18 10:05:22+00:00,,0,MeharMishra/Sequence-Detector-101010,449231729,Verilog,Sequence-Detector-101010,1,0,2022-01-18 10:06:00+00:00,[],None
262,https://github.com/GrootLiu/VerilogLearning.git,2022-01-26 14:24:58+00:00,,0,GrootLiu/VerilogLearning,452305748,Verilog,VerilogLearning,3316,0,2022-01-26 14:37:54+00:00,[],https://api.github.com/licenses/apache-2.0
263,https://github.com/aokurr/FinalProject-MiniMips.git,2022-01-22 23:46:08+00:00,,0,aokurr/FinalProject-MiniMips,450962776,Verilog,FinalProject-MiniMips,1257,0,2022-01-22 23:47:58+00:00,[],https://api.github.com/licenses/mit
264,https://github.com/llehg/fpga_cpu_debugger.git,2022-01-11 20:19:35+00:00,Show '51 style CPU registers and memory on vga screen of your FPGA.,0,llehg/fpga_cpu_debugger,446968788,Verilog,fpga_cpu_debugger,493,0,2022-01-11 20:21:42+00:00,[],None
265,https://github.com/UsamaAyub-EE/RISC-V-processor-with-5-stage-pipeline-a-hazard-unit-and-CSR-unit-for-GCD-computation.git,2022-01-12 12:00:36+00:00,A RISC-V processor with a 5-stage pipeline with a hazard detection unit and a CSR unit for handling interrupts. This processor computes that GCD by taking user input and displays the result on seven segment displays,0,UsamaAyub-EE/RISC-V-processor-with-5-stage-pipeline-a-hazard-unit-and-CSR-unit-for-GCD-computation,447201037,Verilog,RISC-V-processor-with-5-stage-pipeline-a-hazard-unit-and-CSR-unit-for-GCD-computation,1340,0,2022-01-12 12:05:28+00:00,[],None
266,https://github.com/UsamaAyub-EE/RISC-V-processor-with-5-stage-pipeline-hazard-unit-and-CSR-module.git,2022-01-12 12:06:50+00:00,This processor has a 5-stage pipeline with a hazard unit and a CSR module for handling interrupts,0,UsamaAyub-EE/RISC-V-processor-with-5-stage-pipeline-hazard-unit-and-CSR-module,447202779,Verilog,RISC-V-processor-with-5-stage-pipeline-hazard-unit-and-CSR-module,1340,0,2022-07-29 11:57:36+00:00,[],None
267,https://github.com/c-whitaker00/VLSI_Lab1.git,2022-01-14 19:06:23+00:00,"All written in Verilog, this lab covers an unsigned parallel multiplier, multiplication of signed operands, a conditional sum adder, and a k-1 N bit adder, and a sequential logic circuit.",0,c-whitaker00/VLSI_Lab1,448078839,Verilog,VLSI_Lab1,18,0,2022-01-14 19:11:10+00:00,[],None
268,https://github.com/IancutEusebiu/MTP.git,2022-01-12 08:29:55+00:00,,0,IancutEusebiu/MTP,447135532,Verilog,MTP,632,0,2022-03-31 21:24:47+00:00,[],None
269,https://github.com/yhs1202/DigitalLab_exp9.git,2022-02-04 02:54:41+00:00,Design of Shift Register (IC 74194),0,yhs1202/DigitalLab_exp9,455403266,Verilog,DigitalLab_exp9,1,0,2022-02-05 11:56:35+00:00,[],None
270,https://github.com/dtantalidis2002/davidthings-spokefpga.git,2022-02-03 18:34:45+00:00,,0,dtantalidis2002/davidthings-spokefpga,455283630,Verilog,davidthings-spokefpga,57147,0,2022-02-03 18:35:41+00:00,[],https://api.github.com/licenses/apache-2.0
271,https://github.com/HamzahDweik/ALU.git,2022-02-04 20:52:25+00:00,,2,HamzahDweik/ALU,455693225,Verilog,ALU,1163,0,2022-09-01 05:27:26+00:00,[],None
272,https://github.com/sasankauppuluri/Built-In-Self-Test.git,2022-02-03 06:52:52+00:00,,0,sasankauppuluri/Built-In-Self-Test,455060238,Verilog,Built-In-Self-Test,1328,0,2022-02-03 07:06:22+00:00,[],None
273,https://github.com/Danil1997Dev/Lab24.git,2022-02-04 14:06:02+00:00,,0,Danil1997Dev/Lab24,455569770,Verilog,Lab24,78968,0,2022-02-04 14:15:08+00:00,[],None
274,https://github.com/unal-edigital1-lab/wp01-2021-2-grupo03-2021-2.git,2022-01-19 03:16:13+00:00,wp01-2021-2-grupo03-2021-2 created by GitHub Classroom,0,unal-edigital1-lab/wp01-2021-2-grupo03-2021-2,449530694,Verilog,wp01-2021-2-grupo03-2021-2,39288,0,2022-02-09 14:27:58+00:00,[],None
275,https://github.com/thkim2031/4x4-booth-2-multiplier-unsigned.git,2022-01-19 12:53:20+00:00,,0,thkim2031/4x4-booth-2-multiplier-unsigned,449690484,Verilog,4x4-booth-2-multiplier-unsigned,2,0,2022-01-19 13:00:18+00:00,[],None
276,https://github.com/mohd-khalid/HDLBits.git,2022-01-30 21:44:51+00:00,Verilog 101,0,mohd-khalid/HDLBits,453809870,Verilog,HDLBits,2,0,2022-01-30 22:04:51+00:00,[],None
277,https://github.com/wait-how/miniproc.git,2022-01-30 18:19:35+00:00,,0,wait-how/miniproc,453763315,Verilog,miniproc,4,0,2022-01-30 18:21:54+00:00,[],https://api.github.com/licenses/mit
278,https://github.com/VictorAgarkov/spartan6-multilayer-counter.git,2022-01-27 16:42:27+00:00,"Демонстрация 8-битного 64-""слойного"" счётчка",0,VictorAgarkov/spartan6-multilayer-counter,452762986,Verilog,spartan6-multilayer-counter,12,0,2022-01-27 16:43:34+00:00,[],None
279,https://github.com/foleyb6/CompArchSpring2022.git,2022-01-27 22:33:23+00:00,,0,foleyb6/CompArchSpring2022,452866676,Verilog,CompArchSpring2022,68,0,2022-03-25 15:12:27+00:00,[],None
280,https://github.com/khollbach/coursework.git,2022-01-27 20:43:04+00:00,,0,khollbach/coursework,452837803,Verilog,coursework,98,0,2022-01-27 20:56:47+00:00,[],None
281,https://github.com/brianvlee5/7digit_on_fpga.git,2022-02-01 09:07:05+00:00,testing my fpga,0,brianvlee5/7digit_on_fpga,454321059,Verilog,7digit_on_fpga,1,0,2022-02-01 09:07:29+00:00,[],None
282,https://github.com/twill777/CpuDesignLab.git,2022-01-27 20:55:10+00:00,,0,twill777/CpuDesignLab,452841205,Verilog,CpuDesignLab,3095,0,2024-02-01 22:46:19+00:00,[],None
283,https://github.com/shamalweerasooriya/8-bit-single-cycle-processor.git,2022-01-19 07:42:12+00:00,"Design of a simple 8-bit single-cycle processor which includes an ALU, a register file and control logic, and a a memory sub-system using Verilog HDL",1,shamalweerasooriya/8-bit-single-cycle-processor,449594291,Verilog,8-bit-single-cycle-processor,10,0,2024-01-19 20:05:43+00:00,[],None
284,https://github.com/HarryZ10/simon-verilog.git,2022-01-11 06:12:53+00:00,"Simon, using Xilinix and Verilog, is a memorization game of sequences of LED colored buttons and varied tones.",0,HarryZ10/simon-verilog,446699522,Verilog,simon-verilog,1884,0,2024-03-26 07:01:43+00:00,[],None
285,https://github.com/Danil1997Dev/Lab4.git,2022-01-21 15:13:14+00:00,,0,Danil1997Dev/Lab4,450537764,Verilog,Lab4,27224,0,2022-01-24 14:34:09+00:00,[],None
286,https://github.com/wanghaMAX/bsv-learn.git,2022-01-21 06:34:17+00:00,Learn bsv ...,0,wanghaMAX/bsv-learn,450380413,Verilog,bsv-learn,69,0,2022-01-21 06:44:57+00:00,[],None
287,https://github.com/subrotoece/Verilog.git,2022-01-24 16:50:41+00:00,This repository is the place to store the Verilog projects from beginner to advanced level.,0,subrotoece/Verilog,451550681,Verilog,Verilog,5,0,2022-01-28 13:54:32+00:00,[],None
288,https://github.com/pawlex/am386sx.git,2022-01-25 23:00:41+00:00,,0,pawlex/am386sx,452070363,Verilog,am386sx,37849,0,2022-01-28 08:49:43+00:00,[],None
289,https://github.com/lsammarone/dnn-accelerator-top-rtl.git,2022-01-26 20:18:24+00:00,,0,lsammarone/dnn-accelerator-top-rtl,452426843,Verilog,dnn-accelerator-top-rtl,7806,0,2022-01-26 20:20:16+00:00,[],None
290,https://github.com/Jack24658735/ICLAB_final.git,2022-01-27 21:56:24+00:00,積體電路設計實驗(IC LAB) 黃朝宗 Final Project,1,Jack24658735/ICLAB_final,452858023,Verilog,ICLAB_final,55680,0,2022-04-23 11:50:31+00:00,[],None
291,https://github.com/kwiltsey/Lab-2.git,2022-01-27 22:52:28+00:00,Moore machine that will detect the sequence 1001,0,kwiltsey/Lab-2,452871137,Verilog,Lab-2,4,0,2022-01-27 22:58:22+00:00,[],None
292,https://github.com/Palacios1337/Lab2.git,2022-01-27 23:07:29+00:00,,0,Palacios1337/Lab2,452874915,Verilog,Lab2,1,0,2022-01-27 23:08:00+00:00,[],None
293,https://github.com/vanessa2213/Embedded-Systems.git,2022-01-28 19:27:35+00:00,"Upon completion of this course, students will understand the fundamental principles, specification process and formal methodology in the design, implementation and testing of embedded systems.",0,vanessa2213/Embedded-Systems,453191601,Verilog,Embedded-Systems,31296,0,2022-01-28 20:01:44+00:00,[],None
294,https://github.com/sss08leon/test1.git,2022-01-19 15:07:36+00:00,测试,0,sss08leon/test1,449739712,Verilog,test1,111,0,2022-01-19 15:41:37+00:00,[],None
295,https://github.com/yulimmm/FPGA-Study.git,2022-01-22 13:59:26+00:00,,0,yulimmm/FPGA-Study,450832981,Verilog,FPGA-Study,100,0,2022-01-24 05:50:08+00:00,[],None
296,https://github.com/aaluong/ENGR-378.git,2022-01-23 03:51:51+00:00,FPGA class. Language is Verilog,0,aaluong/ENGR-378,450998152,Verilog,ENGR-378,22973,0,2022-01-23 04:03:43+00:00,[],None
297,https://github.com/ArpitNITC/Verilog_miniprojects.git,2022-01-23 13:41:31+00:00,,0,ArpitNITC/Verilog_miniprojects,451115736,Verilog,Verilog_miniprojects,1250,0,2022-01-23 13:43:23+00:00,[],None
298,https://github.com/zMo0/lessDisastrousButStill.git,2022-01-16 09:29:44+00:00,,0,zMo0/lessDisastrousButStill,448509486,Verilog,lessDisastrousButStill,5,0,2022-01-16 09:30:24+00:00,[],None
299,https://github.com/hphuckhanh/Simple-door-lock-Verilog.git,2022-01-16 13:08:14+00:00,,0,hphuckhanh/Simple-door-lock-Verilog,448557172,Verilog,Simple-door-lock-Verilog,7483,0,2022-01-16 13:08:58+00:00,[],None
300,https://github.com/MeharMishra/D-Flip-Flop.git,2022-01-18 09:54:51+00:00,,0,MeharMishra/D-Flip-Flop,449228327,Verilog,D-Flip-Flop,1,0,2022-01-18 09:55:50+00:00,[],None
301,https://github.com/lsammarone/dnn-accelerator-unit-rtl.git,2022-01-20 03:04:20+00:00,,0,lsammarone/dnn-accelerator-unit-rtl,449935504,Verilog,dnn-accelerator-unit-rtl,7809,0,2022-01-20 04:57:01+00:00,[],None
302,https://github.com/lapnd/RISCV-CXX.git,2022-01-20 08:19:13+00:00,,0,lapnd/RISCV-CXX,450011342,,RISCV-CXX,372,0,2021-10-19 15:01:35+00:00,[],None
303,https://github.com/laurapellizari/Verilog.git,2022-01-19 17:27:18+00:00,System developed in verilog language,0,laurapellizari/Verilog,449790186,Verilog,Verilog,1175,0,2022-01-19 17:38:47+00:00,[],None
304,https://github.com/danedebugs/MIPS-Pipeline-Processor.git,2022-01-21 18:20:19+00:00,5 Stage MIPS Pipeline Processor in Verilog ,0,danedebugs/MIPS-Pipeline-Processor,450597018,Verilog,MIPS-Pipeline-Processor,16,0,2022-01-21 18:48:33+00:00,[],None
305,https://github.com/harry11070723/2022_TSRI_Cell-based-IC-Implementation-and-Verification.git,2022-01-20 05:09:50+00:00,,0,harry11070723/2022_TSRI_Cell-based-IC-Implementation-and-Verification,449962573,Verilog,2022_TSRI_Cell-based-IC-Implementation-and-Verification,1205,0,2022-01-20 05:21:40+00:00,[],None
306,https://github.com/geetanshkaul/MIPS-Processor.git,2022-01-24 12:23:57+00:00,5-stage pipelined 32-bit MIPS microprocessor in Verilog,0,geetanshkaul/MIPS-Processor,451453810,,MIPS-Processor,141,0,2023-06-21 13:20:04+00:00,[],https://api.github.com/licenses/gpl-3.0
307,https://github.com/lorenzocarrano/BIST_Architecture_for_RI5CY_Processor.git,2022-01-06 22:03:32+00:00,,0,lorenzocarrano/BIST_Architecture_for_RI5CY_Processor,445323155,Verilog,BIST_Architecture_for_RI5CY_Processor,877,0,2022-01-08 21:35:00+00:00,[],None
308,https://github.com/sonpro147/ktmt.git,2022-01-03 14:43:14+00:00,Bài tập lớn KTMT cô Huệ 20211,0,sonpro147/ktmt,444095083,Verilog,ktmt,55,0,2022-01-03 15:16:17+00:00,[],None
309,https://github.com/photonPrograms/IEEEFloatingPointDivider.git,2021-12-31 17:20:06+00:00,Verilog module to perform division of two IEEE 4-byte floating point reals,0,photonPrograms/IEEEFloatingPointDivider,443394236,Verilog,IEEEFloatingPointDivider,424,0,2021-12-31 17:23:16+00:00,[],None
310,https://github.com/Akshay-Kaushik/16-bit-LFSR.git,2022-01-08 10:12:14+00:00,,2,Akshay-Kaushik/16-bit-LFSR,445785267,Verilog,16-bit-LFSR,122,0,2022-01-10 06:59:44+00:00,[],None
311,https://github.com/1z2s3e4v/CVSD_GSIM.git,2022-01-08 07:40:51+00:00,CVSD2021_FinalProject_GSIM,0,1z2s3e4v/CVSD_GSIM,445756059,Verilog,CVSD_GSIM,952,0,2022-01-08 09:01:44+00:00,[],None
312,https://github.com/musabhc/fb-cpu.git,2022-01-06 10:42:23+00:00,Simple CPU Design with Vivado,0,musabhc/fb-cpu,445132993,Verilog,fb-cpu,7,0,2022-01-06 11:25:04+00:00,[],None
313,https://github.com/AllenCheng0328/cvsd_final.git,2022-01-06 06:35:03+00:00,,0,AllenCheng0328/cvsd_final,445067000,Verilog,cvsd_final,11,0,2022-01-10 17:22:07+00:00,[],None
314,https://github.com/AccRan950E/Verilog-for-TMAG5170.git,2022-01-06 08:37:31+00:00,Verilog files for TMAG5170 hall sensor,0,AccRan950E/Verilog-for-TMAG5170,445098470,Verilog,Verilog-for-TMAG5170,2,0,2022-01-06 08:48:55+00:00,[],None
315,https://github.com/I-am-VarunM/Multiplication.git,2022-01-06 13:39:22+00:00,,0,I-am-VarunM/Multiplication,445182314,Verilog,Multiplication,43,0,2022-01-07 18:43:26+00:00,[],None
316,https://github.com/tuancoiz4/PHY-controller.git,2022-01-16 07:14:04+00:00,,0,tuancoiz4/PHY-controller,448483588,Verilog,PHY-controller,6,0,2022-01-16 07:18:44+00:00,[],None
317,https://github.com/anjalish05/IPA-2022.git,2022-01-31 21:19:19+00:00,,0,anjalish05/IPA-2022,454173575,Verilog,IPA-2022,4534,0,2022-01-31 21:23:03+00:00,[],None
318,https://github.com/srivatsanrr/EmbeddedSystemsProject.git,2022-02-01 16:53:35+00:00,Project Repository for the Embedded Systems Course Spring 2022. Design of magic curtain (invisible cloak) using system verilog,1,srivatsanrr/EmbeddedSystemsProject,454471665,Verilog,EmbeddedSystemsProject,19068,0,2022-03-01 23:47:36+00:00,[],None
319,https://github.com/jaylenburne/ELEC240.git,2022-01-31 14:13:05+00:00,,0,jaylenburne/ELEC240,454032424,Verilog,ELEC240,1136,0,2022-01-31 14:13:11+00:00,[],https://api.github.com/licenses/cc0-1.0
320,https://github.com/Mohamed-Sharaf/SAP-I-Verilog-Implementation.git,2022-02-04 12:52:22+00:00,,0,Mohamed-Sharaf/SAP-I-Verilog-Implementation,455546271,Verilog,SAP-I-Verilog-Implementation,45,0,2022-03-02 02:24:02+00:00,[],None
321,https://github.com/dongdongdua/fpga.git,2022-02-04 16:46:11+00:00,,0,dongdongdua/fpga,455623951,Verilog,fpga,7,0,2022-02-04 16:48:05+00:00,[],None
322,https://github.com/satyaprakash-ops/Virtual_Channel_Router.git,2022-02-01 22:21:10+00:00,Implemented a Virtual channel(VC) router for 4*4 mesh topology. For Globally asynchronous locally synchronous (GALS) communication among multiple cores (32 bits flit size).,0,satyaprakash-ops/Virtual_Channel_Router,454570239,Verilog,Virtual_Channel_Router,243,0,2022-02-01 22:26:17+00:00,[],None
323,https://github.com/muyishen2040/Bluetooth_RC_Car.git,2022-02-01 08:10:23+00:00,,0,muyishen2040/Bluetooth_RC_Car,454306743,Verilog,Bluetooth_RC_Car,33,0,2022-02-01 08:10:38+00:00,[],None
324,https://github.com/baransolmaz/Cse331-Computer-Organization-Assignments.git,2022-02-02 18:37:05+00:00,,0,baransolmaz/Cse331-Computer-Organization-Assignments,454893782,Verilog,Cse331-Computer-Organization-Assignments,1473,0,2022-02-09 20:12:51+00:00,[],None
325,https://github.com/rdahman/cs552-testbench-tutorial.git,2022-02-03 22:16:28+00:00,,0,rdahman/cs552-testbench-tutorial,455346662,Verilog,cs552-testbench-tutorial,124,0,2022-02-03 22:17:41+00:00,[],None
326,https://github.com/yhs1202/DigitalLab_exp7.git,2022-02-04 02:54:24+00:00,Implementation of D flip-flops (IC 7474),0,yhs1202/DigitalLab_exp7,455403208,Verilog,DigitalLab_exp7,0,0,2022-02-05 11:55:59+00:00,[],None
327,https://github.com/alexspur/Project_Lab_1.git,2022-01-31 18:35:46+00:00,,1,alexspur/Project_Lab_1,454125024,Verilog,Project_Lab_1,138,0,2022-03-21 17:10:31+00:00,[],None
328,https://github.com/DavidFavela/BombermanTeam.git,2022-02-03 05:33:46+00:00,Bomberman logic and basic implementation,0,DavidFavela/BombermanTeam,455042434,Verilog,BombermanTeam,429,0,2022-02-03 05:37:05+00:00,[],None
329,https://github.com/semanurozyilmaz/FB-CPU.git,2022-01-04 17:42:12+00:00,,0,semanurozyilmaz/FB-CPU,444511185,Verilog,FB-CPU,1792,0,2022-01-04 17:52:04+00:00,[],None
330,https://github.com/zakirhussainvlsi/standard_cell_based_dd_using_verilog.git,2022-01-07 10:11:40+00:00,,0,zakirhussainvlsi/standard_cell_based_dd_using_verilog,445478334,Verilog,standard_cell_based_dd_using_verilog,8336,0,2022-01-07 10:23:49+00:00,[],None
331,https://github.com/gybp/IC2019.git,2022-01-07 04:18:58+00:00,,0,gybp/IC2019,445395505,Verilog,IC2019,2298,0,2022-01-07 12:50:53+00:00,[],None
332,https://github.com/architjaiswal/system_on_chip.git,2022-01-02 22:51:42+00:00,Designed and deployed several IP cores on Altera Cyclon V chip using Intel Quartus Suit and Unix ,0,architjaiswal/system_on_chip,443886981,Verilog,system_on_chip,84,0,2023-10-17 14:21:02+00:00,[],None
333,https://github.com/hubmartin/gowin-fpga.git,2022-01-01 21:49:01+00:00,Expermiments with TRENZ TEC0117 LittleBee GW1NR-LV9QN88C6 FPGA,0,hubmartin/gowin-fpga,443630043,Verilog,gowin-fpga,47,0,2022-01-10 21:13:02+00:00,[],None
334,https://github.com/ahmetenesturan/Embedded_Final_Project.git,2022-01-13 12:27:36+00:00,Embedded Project,0,ahmetenesturan/Embedded_Final_Project,447590893,Verilog,Embedded_Final_Project,3658,0,2023-04-19 01:32:26+00:00,[],None
335,https://github.com/Sean-Bradley/FPGA-UART-TX.git,2022-01-04 14:42:20+00:00,Cyclone IV FGPA Serial UART TX,0,Sean-Bradley/FPGA-UART-TX,444454417,Verilog,FPGA-UART-TX,947,0,2022-01-04 23:00:10+00:00,[],https://api.github.com/licenses/mit
336,https://github.com/mshah12/RISCVProcessor.git,2022-01-04 20:35:07+00:00,"A 5-stage pipelined single-core processor with support for M extension prefetching, and 2-level set-associative cache.",0,mshah12/RISCVProcessor,444555755,Verilog,RISCVProcessor,24959,0,2022-01-04 20:47:56+00:00,[],https://api.github.com/licenses/mit
337,https://github.com/Processor-Design-Kryptonite/Matrix-Multiplication.git,2022-01-04 16:38:40+00:00,,0,Processor-Design-Kryptonite/Matrix-Multiplication,444492191,Verilog,Matrix-Multiplication,25,0,2022-01-04 17:53:37+00:00,[],None
338,https://github.com/LeeMyeongbo/Verilog.git,2021-12-31 07:12:44+00:00,,0,LeeMyeongbo/Verilog,443281532,Verilog,Verilog,27,0,2021-12-31 07:16:26+00:00,[],None
339,https://github.com/geffencooper/ECE154B.git,2022-02-02 22:13:57+00:00,,0,geffencooper/ECE154B,454952978,Verilog,ECE154B,253,0,2022-02-02 23:39:25+00:00,[],None
340,https://github.com/pintorem/usb-Verilog.git,2022-02-04 18:47:31+00:00,A Verilog code for interfacing a mouse and a keyboard with FPGA Nexis A7,0,pintorem/usb-Verilog,455660246,Verilog,usb-Verilog,47,0,2022-02-04 18:54:06+00:00,[],None
341,https://github.com/mdzakirhussain/adder_test1.git,2022-01-21 11:14:57+00:00,,0,mdzakirhussain/adder_test1,450461570,Verilog,adder_test1,5669,0,2022-01-21 11:15:09+00:00,[],https://api.github.com/licenses/apache-2.0
342,https://github.com/gvevance/Computer-Organization-EE2003.git,2022-01-07 02:53:44+00:00,Projects / assignments done in EE2003 at IIT Madras.,0,gvevance/Computer-Organization-EE2003,445379100,Verilog,Computer-Organization-EE2003,2914,0,2022-02-24 04:16:51+00:00,[],https://api.github.com/licenses/mit
343,https://github.com/spi8as7/vga-controller.git,2022-01-11 00:25:38+00:00,,0,spi8as7/vga-controller,446625160,Verilog,vga-controller,257,0,2022-01-11 00:25:55+00:00,[],https://api.github.com/licenses/mit
344,https://github.com/KexinZheng5/CS152B-LAB1.git,2022-01-10 21:09:11+00:00,,2,KexinZheng5/CS152B-LAB1,446582344,Verilog,CS152B-LAB1,571,0,2022-01-10 21:14:36+00:00,[],None
345,https://github.com/PietPtr/AOC21.git,2022-01-03 17:17:17+00:00,Advent of Code 2021,0,PietPtr/AOC21,444142019,Verilog,AOC21,76,0,2022-01-08 10:54:47+00:00,[],None
346,https://github.com/KexinZheng5/CS152B-LAB0.git,2022-01-05 23:40:40+00:00,,0,KexinZheng5/CS152B-LAB0,444981839,Verilog,CS152B-LAB0,51,0,2022-01-10 21:11:14+00:00,[],None
347,https://github.com/francescasilvano/Testing.git,2022-01-06 15:33:00+00:00,,0,francescasilvano/Testing,445219339,Verilog,Testing,2964,0,2022-03-29 14:59:38+00:00,[],None
348,https://github.com/mkexc/RISCV-LBIST.git,2022-01-11 21:01:22+00:00,Logic BIST implementation for the cv32e40p (ex RI5CY) processor,0,mkexc/RISCV-LBIST,446979751,Verilog,RISCV-LBIST,37604,0,2022-11-17 11:12:31+00:00,[],None
349,https://github.com/RAKSHITH-JAYANTH/MIPS.git,2022-01-09 16:18:38+00:00,,0,RAKSHITH-JAYANTH/MIPS,446139856,Verilog,MIPS,8,0,2022-01-13 20:32:54+00:00,[],None
350,https://github.com/David-Simonetti-ND/VerilogPong.git,2022-01-10 15:40:47+00:00,A hardware implementation of the game pong using verilog,0,David-Simonetti-ND/VerilogPong,446482337,Verilog,VerilogPong,4817,0,2022-02-10 00:08:31+00:00,[],None
351,https://github.com/minusdong/HIT-Digital-Logic.git,2022-01-14 11:29:53+00:00,,0,minusdong/HIT-Digital-Logic,447944377,Verilog,HIT-Digital-Logic,103734,0,2022-01-14 12:23:11+00:00,[],None
352,https://github.com/SDongmin/Verilog_Timing.git,2022-01-14 10:46:49+00:00,,0,SDongmin/Verilog_Timing,447933027,Verilog,Verilog_Timing,6,0,2022-01-14 10:49:56+00:00,[],None
353,https://github.com/klosvo/vending-machine.git,2022-01-04 02:08:54+00:00,,0,klosvo/vending-machine,444256969,Verilog,vending-machine,3,0,2022-01-04 02:09:52+00:00,[],None
354,https://github.com/Russ44-creator/multi-cpu.git,2022-01-04 14:21:16+00:00,,0,Russ44-creator/multi-cpu,444446757,Verilog,multi-cpu,8,0,2022-01-04 14:21:56+00:00,[],None
355,https://github.com/zettapixels/CICD.git,2022-01-07 16:42:19+00:00,CICD,0,zettapixels/CICD,445587777,Verilog,CICD,1,0,2022-01-07 17:01:23+00:00,[],None
356,https://github.com/muratbektas30/FB-CPU-RTL-Design.git,2022-01-06 13:20:56+00:00,,0,muratbektas30/FB-CPU-RTL-Design,445176723,Verilog,FB-CPU-RTL-Design,5,0,2022-01-06 13:49:55+00:00,[],None
357,https://github.com/seanpai96/verilog.git,2022-01-06 13:21:10+00:00,,0,seanpai96/verilog,445176801,Verilog,verilog,20297,0,2022-01-08 10:14:57+00:00,[],None
358,https://github.com/yuting0412/FPGA_project.git,2022-01-17 11:05:07+00:00,,0,yuting0412/FPGA_project,448859325,Verilog,FPGA_project,3,0,2022-01-17 11:08:18+00:00,[],None
359,https://github.com/Symbolica/iob-cache.git,2022-01-20 11:27:01+00:00,,2,Symbolica/iob-cache,450069022,Verilog,iob-cache,875,0,2022-03-16 16:11:02+00:00,[],https://api.github.com/licenses/mit
360,https://github.com/kpiyush25/cs220a.git,2022-01-18 17:43:30+00:00,Submission of assignments in CS220A,0,kpiyush25/cs220a,449386606,Verilog,cs220a,675,0,2023-07-12 12:22:03+00:00,[],None
361,https://github.com/McHerman/FastFM.git,2022-01-08 14:07:54+00:00,,0,McHerman/FastFM,445836439,Verilog,FastFM,1741,0,2022-04-07 17:42:19+00:00,[],None
362,https://github.com/KRUTOMER/LCD-Driver-FPGA.git,2022-01-13 09:37:41+00:00,"LCD controller, UART controller, FIFO buffer on Verilog (WIP)",0,KRUTOMER/LCD-Driver-FPGA,447541495,Verilog,LCD-Driver-FPGA,13,0,2022-01-13 17:00:37+00:00,[],None
363,https://github.com/irtiq7/irtiq7.github.io.git,2022-01-20 21:36:54+00:00,Research and development,0,irtiq7/irtiq7.github.io,450265577,Verilog,irtiq7.github.io,107,0,2023-10-26 11:10:00+00:00,[],None
364,https://github.com/zhy-jlzx/Verilog-snippet.git,2022-01-20 14:18:10+00:00,,0,zhy-jlzx/Verilog-snippet,450125931,Verilog,Verilog-snippet,7,0,2022-01-20 14:20:05+00:00,[],None
365,https://github.com/hurisson/can_ebu.git,2022-01-20 07:52:09+00:00,simulation of the response to the ELM327 request over the CAN bus using the Cyclone V FPGA,0,hurisson/can_ebu,450003432,Verilog,can_ebu,1718,0,2022-01-20 08:05:59+00:00,[],None
366,https://github.com/B07901087/CA_final.git,2022-01-26 05:14:18+00:00,,0,B07901087/CA_final,452149002,Verilog,CA_final,1948,0,2022-01-26 05:21:24+00:00,[],None
367,https://github.com/iorar/verilog-practice.git,2022-01-19 06:28:53+00:00,practice of verilog-HDL and vivado,0,iorar/verilog-practice,449573813,Verilog,verilog-practice,27,0,2022-06-27 09:44:30+00:00,[],None
368,https://github.com/xiaowuzxc/DC_fifo.git,2022-01-29 02:56:02+00:00,,0,xiaowuzxc/DC_fifo,453280569,Verilog,DC_fifo,104,0,2022-01-29 02:56:29+00:00,[],https://api.github.com/licenses/lgpl-2.1
369,https://github.com/Einthan/Computer-Architecture-and-Design-lab.git,2022-01-27 20:58:48+00:00,Computer architecture and design lab using assemble language and Verilog,0,Einthan/Computer-Architecture-and-Design-lab,452842183,Verilog,Computer-Architecture-and-Design-lab,1893,0,2022-01-27 21:22:06+00:00,[],None
370,https://github.com/surbhika-rastogi/SequenceDetector101-iverilog.git,2022-01-24 08:19:10+00:00,,0,surbhika-rastogi/SequenceDetector101-iverilog,451375386,Verilog,SequenceDetector101-iverilog,5,0,2022-01-24 08:21:16+00:00,[],None
371,https://github.com/MustafaKarakasTr/CSE-331-503-Computer-Organization-Homeworks.git,2022-01-24 14:42:56+00:00,,0,MustafaKarakasTr/CSE-331-503-Computer-Organization-Homeworks,451502787,Verilog,CSE-331-503-Computer-Organization-Homeworks,2099,0,2022-02-07 12:40:27+00:00,[],None
372,https://github.com/coltonstoltz/N-Queens-Bit-Shifting-Algorithm-Hardware-Implementation.git,2022-01-24 16:43:46+00:00,N-Queens Bit-Shifting Algorithm Hardware Implementation,0,coltonstoltz/N-Queens-Bit-Shifting-Algorithm-Hardware-Implementation,451548203,Verilog,N-Queens-Bit-Shifting-Algorithm-Hardware-Implementation,13,0,2022-01-24 16:46:27+00:00,[],None
373,https://github.com/Abhi575k/CS220.git,2022-01-24 06:24:58+00:00,,0,Abhi575k/CS220,451341984,Verilog,CS220,171,0,2022-01-24 06:28:22+00:00,[],None
374,https://github.com/a-white0/FPGA-Calculator.git,2022-01-27 15:19:49+00:00,"A 16-bit Calculator, capable of continuous operation and fully operable on an FPGA board",0,a-white0/FPGA-Calculator,452733766,Verilog,FPGA-Calculator,10713,0,2022-01-27 15:33:06+00:00,[],None
375,https://github.com/mquraish/HDL-projects.git,2022-02-01 12:46:54+00:00,,0,mquraish/HDL-projects,454384641,Verilog,HDL-projects,273,0,2022-07-14 04:21:37+00:00,[],None
376,https://github.com/JANAKIRAMEMANI/PACKER_UNPACKER.git,2022-01-31 05:38:17+00:00,,0,JANAKIRAMEMANI/PACKER_UNPACKER,453892105,Verilog,PACKER_UNPACKER,3,0,2022-01-31 05:38:46+00:00,[],None
377,https://github.com/dgarci23/memory-controller.git,2022-02-04 20:41:26+00:00,,0,dgarci23/memory-controller,455690514,Verilog,memory-controller,109,0,2022-02-05 00:55:36+00:00,[],None
378,https://github.com/Ehsan200/ALU-processor.git,2022-02-04 19:08:36+00:00,,0,Ehsan200/ALU-processor,455666029,Verilog,ALU-processor,2,0,2022-02-04 19:08:54+00:00,[],None
379,https://github.com/pcw1029/data_collection.git,2022-02-03 02:35:23+00:00,,0,pcw1029/data_collection,455006748,Verilog,data_collection,91,0,2022-02-08 05:00:19+00:00,[],None
380,https://github.com/pcw1029/single_bram_controller.git,2022-02-03 08:00:19+00:00,,0,pcw1029/single_bram_controller,455076826,Verilog,single_bram_controller,575,0,2022-02-04 05:18:13+00:00,[],None
381,https://github.com/4tif4nwer/ELL201-Verilog-Simulations.git,2022-02-03 10:13:02+00:00,,0,4tif4nwer/ELL201-Verilog-Simulations,455115744,Verilog,ELL201-Verilog-Simulations,5120,0,2022-04-14 21:46:12+00:00,[],None
382,https://github.com/lphlch/Electronic-Piano.git,2022-01-17 09:28:38+00:00,"A 79 keys electronic piano with auto-play and GUI. Use FPGA and verilog. Also as project of class Digital Logic, Tongji University",0,lphlch/Electronic-Piano,448829543,Verilog,Electronic-Piano,520,0,2023-12-08 10:17:20+00:00,"['fpga', 'verilog']",None
383,https://github.com/RyanHunter-DV/riscv.git,2022-01-15 08:25:24+00:00,all projects related to riscv CPU,0,RyanHunter-DV/riscv,448221485,Verilog,riscv,202,0,2022-03-16 13:51:01+00:00,[],None
384,https://github.com/LouHaina/ECE385.git,2022-01-05 18:19:33+00:00,UIUC ECE385 course,0,LouHaina/ECE385,444907427,Verilog,ECE385,52238,0,2022-01-05 18:37:58+00:00,[],None
385,https://github.com/sashininliyanage/verilog_CPU.git,2022-01-10 09:26:01+00:00,,0,sashininliyanage/verilog_CPU,446357315,Verilog,verilog_CPU,3041,0,2022-02-22 07:48:32+00:00,[],None
386,https://github.com/geekboi777/RISC-V_CPU_Core.git,2022-01-12 21:09:17+00:00,"This repository contains the  working developer code for a RISC-V_CPU_Core made using TL-Verilog , Makerchip IDE, Sandpiper and Verilator. ",0,geekboi777/RISC-V_CPU_Core,447371545,Verilog,RISC-V_CPU_Core,38,0,2022-01-12 22:05:27+00:00,"['tl-verilog', 'makerchip', 'verilator', 'sandpiper']",https://api.github.com/licenses/gpl-3.0
387,https://github.com/mfkiwl/UHD-Owl.git,2022-01-20 11:33:55+00:00,Ettus UHD USRP driver with added support for home-made SDR,1,mfkiwl/UHD-Owl,450071173,,UHD-Owl,34469,0,2022-01-14 13:51:18+00:00,[],
388,https://github.com/tamasjit/Router.git,2022-01-19 07:56:20+00:00,,0,tamasjit/Router,449598284,Verilog,Router,7025,0,2022-01-19 08:00:44+00:00,[],None
389,https://github.com/mayyamal/SAT-LL.git,2022-01-19 13:54:40+00:00,SAT-based attacks on RLL,0,mayyamal/SAT-LL,449712249,Verilog,SAT-LL,2618,0,2022-01-26 17:49:15+00:00,[],None
390,https://github.com/MeharMishra/Arbitrary-Sequence-Detector.git,2022-01-18 10:18:12+00:00,,0,MeharMishra/Arbitrary-Sequence-Detector,449235782,Verilog,Arbitrary-Sequence-Detector,1,0,2022-01-18 10:19:04+00:00,[],None
391,https://github.com/klosvo/574-hw1.git,2022-01-04 01:36:27+00:00,,0,klosvo/574-hw1,444250464,Verilog,574-hw1,235,0,2022-01-04 01:50:44+00:00,[],None
392,https://github.com/khyamling/VexRiscv_with_Axi_custom_interface.git,2022-01-11 09:38:32+00:00,,0,khyamling/VexRiscv_with_Axi_custom_interface,446759937,Verilog,VexRiscv_with_Axi_custom_interface,351,0,2022-01-11 09:58:25+00:00,[],None
393,https://github.com/BobLouis/verilog_final_project_calculator.git,2022-01-02 14:47:06+00:00,,1,BobLouis/verilog_final_project_calculator,443790506,Verilog,verilog_final_project_calculator,93,0,2022-01-08 14:13:52+00:00,[],None
394,https://github.com/ngHi3u/bai_tap.git,2022-01-04 15:16:49+00:00,btl_KTMT2021,0,ngHi3u/bai_tap,444465843,Verilog,bai_tap,5,0,2022-01-04 15:20:11+00:00,[],None
395,https://github.com/lowfifan/def77Clock.git,2022-01-04 15:04:03+00:00,,0,lowfifan/def77Clock,444461694,Verilog,def77Clock,59,0,2022-01-04 15:08:21+00:00,[],None
396,https://github.com/Rumali-Siddiqua/Sequence-Detector.git,2022-01-21 16:12:05+00:00,,0,Rumali-Siddiqua/Sequence-Detector,450557178,Verilog,Sequence-Detector,35,0,2022-02-28 16:13:25+00:00,[],None
397,https://github.com/KentaroToki/computer-engineering.git,2022-01-22 03:31:43+00:00,,0,KentaroToki/computer-engineering,450707150,Verilog,computer-engineering,27024,0,2022-01-22 04:04:22+00:00,[],None
398,https://github.com/charithjanaka/Image-Downsampling-Processor-Design.git,2022-01-24 16:37:52+00:00,,0,charithjanaka/Image-Downsampling-Processor-Design,451546108,Verilog,Image-Downsampling-Processor-Design,705,0,2022-07-12 14:43:23+00:00,[],None
399,https://github.com/coltonstoltz/Pong.git,2022-01-24 16:50:52+00:00,Verilog implementation of the game Pong.,0,coltonstoltz/Pong,451550749,Verilog,Pong,21,0,2022-01-24 16:56:04+00:00,[],None
400,https://github.com/tatusamel/Verilog-Projects.git,2022-01-27 13:44:50+00:00,,0,tatusamel/Verilog-Projects,452699033,Verilog,Verilog-Projects,21,0,2022-01-27 13:47:32+00:00,[],None
401,https://github.com/ErikaKoro/Digital_Hardware_Systems_1.git,2022-01-18 15:11:16+00:00,Simple CPU design using the Xilinx ISE tool,0,ErikaKoro/Digital_Hardware_Systems_1,449333169,Verilog,Digital_Hardware_Systems_1,4027,0,2022-03-21 19:04:52+00:00,[],None
402,https://github.com/visionvlsi/alu.git,2022-01-31 19:05:57+00:00,,0,visionvlsi/alu,454134589,Verilog,alu,3183,0,2022-02-02 07:21:54+00:00,[],None
403,https://github.com/gozdekirbiz/Sayisal-Tasarim.git,2022-01-30 21:37:50+00:00,Sayısal tasarım labında yazdığım kodlar,0,gozdekirbiz/Sayisal-Tasarim,453808501,Verilog,Sayisal-Tasarim,20,0,2022-01-30 21:46:11+00:00,[],None
404,https://github.com/JANAKIRAMEMANI/FIFO_VERILOG.git,2022-01-31 05:35:02+00:00,,0,JANAKIRAMEMANI/FIFO_VERILOG,453891474,Verilog,FIFO_VERILOG,2,0,2022-01-31 05:36:03+00:00,[],None
405,https://github.com/yasamangodarzi/LAB_Logic.git,2022-02-04 10:54:07+00:00," This repository contains projects in verilog language, each of which is a logical project implementation",0,yasamangodarzi/LAB_Logic,455512952,Verilog,LAB_Logic,131,0,2022-02-04 20:03:37+00:00,[],None
406,https://github.com/cin-cout/Whack-A-Mole.git,2022-02-04 03:28:41+00:00,,0,cin-cout/Whack-A-Mole,455409711,Verilog,Whack-A-Mole,3,0,2022-02-04 03:31:56+00:00,[],None
407,https://github.com/chris-poyser/Image-Decompression-Project.git,2022-02-01 19:27:14+00:00,Developed an Image Decompression Specification in SystemVerilog,0,chris-poyser/Image-Decompression-Project,454522174,Verilog,Image-Decompression-Project,546,0,2022-02-01 19:32:12+00:00,[],None
408,https://github.com/nandithamerugu/VLSI_Project.git,2022-01-24 22:29:56+00:00,4 bit CLA Adder,0,nandithamerugu/VLSI_Project,451655021,Verilog,VLSI_Project,716,0,2022-01-24 22:34:52+00:00,[],None
409,https://github.com/Eric-Wxh/RISC-V_ERIC.git,2022-01-29 03:45:39+00:00,Processors based on RISC-V ISA,0,Eric-Wxh/RISC-V_ERIC,453288732,Verilog,RISC-V_ERIC,2172,0,2022-01-29 04:44:00+00:00,[],None
410,https://github.com/The-Endurance/4-Bit-CLA.git,2022-02-03 07:29:39+00:00,"Ground up design and verification of 4-Bit Carry Lookahead Adder. Done in Verilog HDL, NGSpice and MAGIC",0,The-Endurance/4-Bit-CLA,455068977,Verilog,4-Bit-CLA,2919,0,2022-02-03 09:58:42+00:00,[],None
411,https://github.com/SatvirSingh98/Tail-Lamp-Controller.git,2022-01-27 07:56:09+00:00,,0,SatvirSingh98/Tail-Lamp-Controller,452590363,Verilog,Tail-Lamp-Controller,5,0,2022-01-28 05:21:19+00:00,[],None
412,https://github.com/tlding1/ESE571-lab.git,2022-02-03 14:55:49+00:00,Group work repo,0,tlding1/ESE571-lab,455206901,Verilog,ESE571-lab,2943,0,2022-02-03 15:01:25+00:00,[],None
413,https://github.com/Ever-glow/DIC_ALU.git,2022-01-01 18:13:36+00:00,,0,Ever-glow/DIC_ALU,443596629,Verilog,DIC_ALU,2,0,2022-01-02 05:50:40+00:00,[],None
414,https://github.com/Fready1/poco_course_design.git,2022-01-04 13:41:18+00:00,计算机组成原理课程设计——MIPS五级流水CPU,0,Fready1/poco_course_design,444433491,,poco_course_design,109,0,2022-01-04 13:41:19+00:00,[],None
415,https://github.com/gastonsartori/impl_modulo_prediccion.git,2022-01-25 14:47:21+00:00,,0,gastonsartori/impl_modulo_prediccion,451917037,Verilog,impl_modulo_prediccion,326,0,2022-01-25 14:47:27+00:00,[],None
416,https://github.com/hongrui0722/stepfpga-carlight-.git,2022-01-15 02:06:08+00:00,congratulations！U find the reference for digital circuits course design. CARLIGHT,0,hongrui0722/stepfpga-carlight-,448158532,Verilog,stepfpga-carlight-,2335,0,2022-01-15 02:16:52+00:00,[],None
417,https://github.com/sheriff4000/MIPS_CPU.git,2022-01-11 11:08:01+00:00,CPU based on a subset of the MIPS architecture - coded in SystemVerilog,0,sheriff4000/MIPS_CPU,446787711,Verilog,MIPS_CPU,566,0,2022-01-11 11:13:52+00:00,[],None
418,https://github.com/Sekharjala/FPGA2021.git,2022-01-15 07:56:22+00:00,,0,Sekharjala/FPGA2021,448215857,Verilog,FPGA2021,0,0,2023-08-14 06:08:37+00:00,[],None
419,https://github.com/sifferman/verilog_autograder.git,2022-01-19 17:39:00+00:00,,0,sifferman/verilog_autograder,449793751,Verilog,verilog_autograder,3,0,2022-01-19 19:43:37+00:00,[],None
420,https://github.com/verilogic-x/riscv-soc.git,2022-01-11 13:06:06+00:00,,0,verilogic-x/riscv-soc,446824304,Verilog,riscv-soc,2,0,2022-01-11 13:42:38+00:00,[],None
421,https://github.com/pingggg0629/Accelerator-Architectures-for-Machine-Learning.git,2022-01-19 12:51:49+00:00,,0,pingggg0629/Accelerator-Architectures-for-Machine-Learning,449689971,Verilog,Accelerator-Architectures-for-Machine-Learning,3121,0,2022-01-26 08:13:43+00:00,[],https://api.github.com/licenses/mit
422,https://github.com/MeharMishra/Shift-Register-SIPO.git,2022-01-18 10:19:50+00:00,,0,MeharMishra/Shift-Register-SIPO,449236307,Verilog,Shift-Register-SIPO,1,0,2022-01-18 10:20:34+00:00,[],None
423,https://github.com/MeharMishra/Sequence-Detector-using-Shift-Register.git,2022-01-18 10:08:06+00:00,,0,MeharMishra/Sequence-Detector-using-Shift-Register,449232613,Verilog,Sequence-Detector-using-Shift-Register,1,0,2022-01-18 10:12:04+00:00,[],None
424,https://github.com/aabbas02/Verilog-and-PCB-design.git,2022-01-16 02:14:17+00:00,Verilog implementation of the MD5 hash algorithm for FPGA.,0,aabbas02/Verilog-and-PCB-design,448437197,Verilog,Verilog-and-PCB-design,65,0,2022-02-03 19:54:44+00:00,[],None
425,https://github.com/haertling/CE6302.git,2022-01-24 22:40:12+00:00,,0,haertling/CE6302,451657500,Verilog,CE6302,896,0,2022-02-28 22:51:49+00:00,[],None
426,https://github.com/Aryan108/Flitzip.git,2022-01-22 09:07:28+00:00,Verilog implementation of Flitzip data compression module,3,Aryan108/Flitzip,450767733,Verilog,Flitzip,181,0,2022-02-10 06:24:48+00:00,[],None
427,https://github.com/Maxwell-Wong/Single-Cycle-CPU.git,2022-01-27 02:52:27+00:00,,0,Maxwell-Wong/Single-Cycle-CPU,452518044,Verilog,Single-Cycle-CPU,140,0,2022-01-27 02:59:07+00:00,[],None
428,https://github.com/elaynetron/3001-ACOA.git,2022-01-25 19:59:58+00:00,,0,elaynetron/3001-ACOA,452023148,Verilog,3001-ACOA,871,0,2022-01-25 20:01:10+00:00,[],None
429,https://github.com/luke-mckay/cr_fifo_s2_sf.git,2022-01-03 07:08:39+00:00,Synchronous Dual Clock FIFO with Static Flags,0,luke-mckay/cr_fifo_s2_sf,443971290,Verilog,cr_fifo_s2_sf,3,0,2022-01-03 07:10:14+00:00,[],None
430,https://github.com/hayatd400/CORDIC-Tabanl-HW-SW-CoDesign.git,2022-01-07 11:00:20+00:00,,0,hayatd400/CORDIC-Tabanl-HW-SW-CoDesign,445491171,Verilog,CORDIC-Tabanl-HW-SW-CoDesign,9,0,2022-01-07 11:07:37+00:00,[],None
431,https://github.com/hzccn/GCD-in-verilog.git,2022-01-07 02:37:47+00:00,一个实现求最大公约数的verilog代码,0,hzccn/GCD-in-verilog,445375686,Verilog,GCD-in-verilog,6,0,2022-01-09 12:24:46+00:00,[],None
432,https://github.com/CedericN/Flappy-SCREEEM.git,2022-01-03 17:23:07+00:00,,0,CedericN/Flappy-SCREEEM,444143720,Verilog,Flappy-SCREEEM,313102,0,2023-01-28 01:19:45+00:00,[],None
433,https://github.com/lucasacioly/IF675-Microwave-verilog-description.git,2022-01-05 16:05:16+00:00,,0,lucasacioly/IF675-Microwave-verilog-description,444865974,Verilog,IF675-Microwave-verilog-description,845,0,2022-01-05 17:10:09+00:00,[],None
434,https://github.com/talhamasood0000/risc-v.git,2022-01-11 18:35:50+00:00,Pipelined Implmentation of Risc-v,0,talhamasood0000/risc-v,446939020,Verilog,risc-v,8,0,2022-01-11 18:38:50+00:00,[],https://api.github.com/licenses/mit
435,https://github.com/kARTHIKEYA18/FPGA-Based-automatic-washing-machine.git,2022-01-12 04:47:40+00:00,,0,kARTHIKEYA18/FPGA-Based-automatic-washing-machine,447079793,Verilog,FPGA-Based-automatic-washing-machine,6,0,2022-01-12 04:48:45+00:00,[],None
436,https://github.com/rishabhmani/M216A_Project.git,2022-01-08 16:25:42+00:00,Project for cource ECE M216A Design of VLSI Circuits and Systems. Handwritten Digit Classification using an AI Accelerator.,0,rishabhmani/M216A_Project,445869880,Verilog,M216A_Project,14330,0,2022-01-08 16:28:28+00:00,[],None
437,https://github.com/MohammadRezaShafie/Verilog-code-of-Asynchronous-FIFO.git,2022-01-09 13:41:15+00:00,,0,MohammadRezaShafie/Verilog-code-of-Asynchronous-FIFO,446099335,Verilog,Verilog-code-of-Asynchronous-FIFO,13,0,2022-01-09 13:42:51+00:00,[],None
438,https://github.com/Mark-Jing/HDLbtis-my-solutions.git,2022-01-09 15:59:42+00:00,a repository to record my process of practicing verilog,0,Mark-Jing/HDLbtis-my-solutions,446135138,Verilog,HDLbtis-my-solutions,36,0,2022-01-09 16:17:15+00:00,[],None
439,https://github.com/UmerSoftwares/RISC-V.git,2022-01-12 16:07:58+00:00,RISC-V Processor Project,0,UmerSoftwares/RISC-V,447283927,Verilog,RISC-V,10,0,2022-01-12 16:08:45+00:00,[],https://api.github.com/licenses/mit
440,https://github.com/CTSRD-CHERI/de10pro-dram-stats.git,2022-01-20 18:10:41+00:00,,1,CTSRD-CHERI/de10pro-dram-stats,450207252,Verilog,de10pro-dram-stats,933,0,2022-01-31 16:49:47+00:00,[],
441,https://github.com/Ting-Xiao-Miaw/Logic-Design-Final-Project.git,2022-01-16 09:17:09+00:00,,0,Ting-Xiao-Miaw/Logic-Design-Final-Project,448507068,Verilog,Logic-Design-Final-Project,1227,0,2022-01-16 09:19:33+00:00,[],None
442,https://github.com/ghanimmustafa/picoblaze_parallel_serial_communication.git,2022-01-16 18:17:29+00:00,Parallel-Serial-Parallel Bits Communication System with Picoblaze Soft-core Processor on FPGA,0,ghanimmustafa/picoblaze_parallel_serial_communication,448636265,Verilog,picoblaze_parallel_serial_communication,536,0,2022-01-16 18:26:42+00:00,[],None
443,https://github.com/wayne20010212/Play_audio_on_FPGA.git,2022-01-17 07:43:20+00:00,NTHU CS logic design side_project,0,wayne20010212/Play_audio_on_FPGA,448797732,Verilog,Play_audio_on_FPGA,3938,0,2022-01-17 07:52:25+00:00,[],None
444,https://github.com/ntoickhsu/Snake-Game.git,2022-01-17 22:49:28+00:00,"The goal for this project was to implement a version of the classic video game ""snake"" using only the Verilog hardware description language.",0,ntoickhsu/Snake-Game,449071180,Verilog,Snake-Game,67,0,2022-01-17 22:51:08+00:00,[],https://api.github.com/licenses/mit
445,https://github.com/nianrao/hdl-basic-components.git,2022-01-16 23:27:20+00:00,,0,nianrao/hdl-basic-components,448698580,Verilog,hdl-basic-components,27,0,2022-01-17 02:39:47+00:00,[],https://api.github.com/licenses/gpl-3.0
446,https://github.com/YuXuan1216/FPGA_flappybird.git,2022-01-16 19:20:04+00:00,,0,YuXuan1216/FPGA_flappybird,448650620,Verilog,FPGA_flappybird,12731,0,2022-01-17 03:35:45+00:00,[],None
447,https://github.com/jminjares4/Digital-System-2.git,2022-01-18 21:20:26+00:00,Digital System 2 Lab,0,jminjares4/Digital-System-2,449451243,Verilog,Digital-System-2,6178,0,2022-02-18 18:54:46+00:00,"['verilog', 'digital-design']",None
448,https://github.com/c-whitaker00/VLSI_Lab2.git,2022-01-19 01:48:27+00:00,,0,c-whitaker00/VLSI_Lab2,449510450,Verilog,VLSI_Lab2,11,0,2022-01-19 01:50:34+00:00,[],None
449,https://github.com/cly1213/Verilog_labs.git,2022-01-29 04:03:01+00:00,,0,cly1213/Verilog_labs,453291574,Verilog,Verilog_labs,57,0,2022-02-08 03:24:34+00:00,[],None
450,https://github.com/EmmaLitzer/ECE437.git,2022-01-27 15:20:15+00:00,ECE437 Sensors Git Repository,1,EmmaLitzer/ECE437,452733900,Verilog,ECE437,4955,0,2022-01-27 17:46:25+00:00,[],None
451,https://github.com/pcw1029/verilog_uart.git,2022-02-02 19:58:50+00:00,,0,pcw1029/verilog_uart,454916344,Verilog,verilog_uart,43,0,2022-02-03 02:27:30+00:00,[],None
452,https://github.com/Galactic-Outlaw/3-Bit-Vedic-Multiplier-using-Verilog.git,2022-02-01 12:59:52+00:00,"Rapidly evolving technology has increased demand for real-time digital signal processing applications that are both fast and effective. Any application requires multiplication as one of the primary arithmetic operations. To improve their speed, a large number of multiplier designs have been produced. Vedic Multipliers have emerged as one of the quickest and low-power multipliers as a result of decades of study",0,Galactic-Outlaw/3-Bit-Vedic-Multiplier-using-Verilog,454388709,Verilog,3-Bit-Vedic-Multiplier-using-Verilog,1845,0,2022-02-01 13:03:47+00:00,[],None
453,https://github.com/visionvlsi/sha.git,2022-02-01 02:16:34+00:00,,0,visionvlsi/sha,454235875,Verilog,sha,1803,0,2022-02-01 02:19:49+00:00,[],None
454,https://github.com/mvinci12/Single-Cycle-CPU.git,2021-12-31 01:50:10+00:00,"Added to, debugged, and tested new features of a single cycle CPU using Verilog.",0,mvinci12/Single-Cycle-CPU,443227044,Verilog,Single-Cycle-CPU,384,0,2021-12-31 01:53:08+00:00,[],None
455,https://github.com/masoume-pasebani/digital_logic_design_project.git,2022-01-08 18:48:02+00:00,,0,masoume-pasebani/digital_logic_design_project,445901963,Verilog,digital_logic_design_project,1233,0,2022-02-20 13:51:15+00:00,"['verilog', 'traffic-light']",None
456,https://github.com/CrackLewis/FPGA-Sudoku.git,2022-01-10 10:22:55+00:00,a simplified implementation of classic 9x9 sudoku games.,0,CrackLewis/FPGA-Sudoku,446375007,Verilog,FPGA-Sudoku,35,0,2022-01-10 12:22:26+00:00,[],None
457,https://github.com/HIDDEN-IU/SKKU_CNN.git,2022-01-06 12:20:50+00:00,2021 winter URP - Convolutional Accelerator,0,HIDDEN-IU/SKKU_CNN,445159838,Verilog,SKKU_CNN,196,0,2022-06-07 05:18:52+00:00,[],None
458,https://github.com/Yuan-Mao/eth_1g_core.git,2022-02-01 08:20:52+00:00,,0,Yuan-Mao/eth_1g_core,454309314,Verilog,eth_1g_core,162,0,2022-02-01 08:21:30+00:00,[],None
459,https://github.com/mdzakirhussain/caravel_adder_project1.git,2022-01-21 06:42:10+00:00,,0,mdzakirhussain/caravel_adder_project1,450382427,Verilog,caravel_adder_project1,5672,0,2022-01-21 06:42:21+00:00,[],https://api.github.com/licenses/apache-2.0
460,https://github.com/luke-mckay/cr_fifoctl_s2_sf.git,2022-01-03 03:50:18+00:00,Synchronous Dual Clock FIFO Controller with Static Flags,0,luke-mckay/cr_fifoctl_s2_sf,443933344,Verilog,cr_fifoctl_s2_sf,4,0,2022-01-03 03:50:42+00:00,[],None
461,https://github.com/MrWonder323/FPGA.git,2022-01-01 08:47:37+00:00,,0,MrWonder323/FPGA,443502453,Verilog,FPGA,2,0,2022-01-01 08:49:32+00:00,[],None
462,https://github.com/lazriel/rv.git,2022-01-02 10:48:03+00:00,Toy RISC-V model for teaching,0,lazriel/rv,443741085,Verilog,rv,10,0,2022-01-02 11:57:04+00:00,[],https://api.github.com/licenses/apache-2.0
463,https://github.com/nefe1ibatA/Arch-Exp.git,2022-01-04 14:26:24+00:00,,0,nefe1ibatA/Arch-Exp,444448733,Verilog,Arch-Exp,234,0,2022-01-04 14:45:29+00:00,[],None
464,https://github.com/JunaidCBNU/Floating-Point-Division.git,2022-01-28 15:54:46+00:00,32-bit Floating Point Division,0,JunaidCBNU/Floating-Point-Division,453127249,Verilog,Floating-Point-Division,7,0,2022-01-28 15:58:46+00:00,[],None
465,https://github.com/JANAKIRAMEMANI/COMBINATIONAL_CKTS.git,2022-01-31 05:42:45+00:00,,0,JANAKIRAMEMANI/COMBINATIONAL_CKTS,453892941,Verilog,COMBINATIONAL_CKTS,12,0,2022-01-31 05:46:28+00:00,[],None
466,https://github.com/okantorun/16-bit-MIPS-CPU.git,2022-01-25 19:38:33+00:00,Implementation of MIPS architecture using Quartus II and Verilog,0,okantorun/16-bit-MIPS-CPU,452016975,Verilog,16-bit-MIPS-CPU,1532,0,2022-02-08 11:02:05+00:00,"['cpu', 'mip', 'verilog', 'quartus']",https://api.github.com/licenses/mit
467,https://github.com/HocLee/4-bit-Unsigned-Array-Multipiler.git,2022-01-11 04:33:05+00:00,,0,HocLee/4-bit-Unsigned-Array-Multipiler,446677892,Verilog,4-bit-Unsigned-Array-Multipiler,498,0,2022-01-11 04:36:26+00:00,[],None
468,https://github.com/AshkanShakiba/Smart_Parking_System.git,2022-01-05 21:40:29+00:00,Logical Circuits Project,0,AshkanShakiba/Smart_Parking_System,444957817,Verilog,Smart_Parking_System,1122,0,2022-02-04 18:12:47+00:00,[],None
469,https://github.com/Mazalrahbi/Traffic-light-controller.git,2022-01-07 07:35:22+00:00,,0,Mazalrahbi/Traffic-light-controller,445437044,Verilog,Traffic-light-controller,63,0,2022-01-07 07:38:17+00:00,[],https://api.github.com/licenses/mit
470,https://github.com/SeppWill/cpe233_assignment_1.git,2022-01-09 22:51:43+00:00,,0,SeppWill/cpe233_assignment_1,446221266,Verilog,cpe233_assignment_1,2260,0,2022-01-14 06:13:27+00:00,[],None
471,https://github.com/DeveloperBedirhan/FB-CPU-RTL-Design.git,2022-01-07 15:13:06+00:00,,0,DeveloperBedirhan/FB-CPU-RTL-Design,445562084,Verilog,FB-CPU-RTL-Design,563,0,2022-01-08 00:22:04+00:00,[],None
472,https://github.com/Abdul-Vasan/Image-Processing-on-FPGA.git,2022-01-07 13:53:05+00:00,,0,Abdul-Vasan/Image-Processing-on-FPGA,445537593,Verilog,Image-Processing-on-FPGA,2526,0,2022-01-07 14:10:49+00:00,[],None
473,https://github.com/Jim-CTChen/Smith_Waterman_ASIC.git,2022-01-08 16:59:10+00:00,,0,Jim-CTChen/Smith_Waterman_ASIC,445877684,Verilog,Smith_Waterman_ASIC,4821,0,2022-01-08 17:18:31+00:00,[],None
474,https://github.com/cmpengineer/FBU-Processor.git,2022-01-06 20:31:19+00:00,FBU Processor,0,cmpengineer/FBU-Processor,445302457,Verilog,FBU-Processor,3,0,2022-01-06 20:40:01+00:00,[],None
475,https://github.com/gbalaratnaswamy/RISC_V_Model_1.git,2022-01-06 15:23:35+00:00,This repo is implementation of 32 bit RISC -V based processor in verilog with 5 stage pipelining,2,gbalaratnaswamy/RISC_V_Model_1,445216371,Verilog,RISC_V_Model_1,315,0,2022-01-09 07:27:56+00:00,"['verilog', 'risc-v', 'microprocessor']",https://api.github.com/licenses/mit
476,https://github.com/Goshisanniichi/FSM_Sequence_Detector.git,2022-01-27 22:39:11+00:00,,0,Goshisanniichi/FSM_Sequence_Detector,452867889,Verilog,FSM_Sequence_Detector,2,0,2022-01-27 22:41:42+00:00,[],None
477,https://github.com/vanessa2213/DigitalSystemsLab.git,2022-01-27 17:34:40+00:00,"After completing the course, the student will be able to build devices based on microcontrollers to solve specific problems as well as design the programs necessary for their operation.",0,vanessa2213/DigitalSystemsLab,452780785,Verilog,DigitalSystemsLab,704,0,2022-01-27 18:11:35+00:00,[],None
478,https://github.com/Staringlizard/ddr_test.git,2022-02-03 20:44:55+00:00,fpga ddr test with arty S7 25,0,Staringlizard/ddr_test,455322225,Verilog,ddr_test,7307,0,2022-02-03 20:46:48+00:00,[],None
479,https://github.com/JL6666JL/test.git,2022-02-04 03:36:05+00:00,this is a test ,0,JL6666JL/test,455411102,Verilog,test,16,0,2022-02-04 03:38:38+00:00,[],https://api.github.com/licenses/gpl-3.0
480,https://github.com/aro1999/syno_diploma.git,2022-02-01 07:36:20+00:00,,0,aro1999/syno_diploma,454298885,Verilog,syno_diploma,6,0,2022-02-01 07:42:21+00:00,[],None
481,https://github.com/LyLiou/2016_digital_disign_lab5.git,2022-02-03 18:49:13+00:00,"Homework 5 in lecture ""digital design"" in spring 2016",0,LyLiou/2016_digital_disign_lab5,455288266,Verilog,2016_digital_disign_lab5,2974,0,2022-02-03 18:49:45+00:00,[],None
482,https://github.com/shawn110285/Cookabarra_SOC.git,2022-01-31 00:00:12+00:00,a simple soc based on the RV32 CPU (Cookabarra),1,shawn110285/Cookabarra_SOC,453833984,Verilog,Cookabarra_SOC,3062,0,2022-01-31 00:10:12+00:00,[],None
483,https://github.com/shion0825/CLOCK24.git,2022-02-02 13:03:47+00:00,,0,shion0825/CLOCK24,454777137,Verilog,CLOCK24,8,0,2022-02-02 13:05:56+00:00,[],None
484,https://github.com/GXrobot/ENSC_450_Lab_1.git,2022-02-03 02:23:36+00:00,,0,GXrobot/ENSC_450_Lab_1,455004336,Verilog,ENSC_450_Lab_1,3303,0,2022-02-04 07:13:42+00:00,[],None
485,https://github.com/MeharMishra/Mano-Machine.git,2022-01-18 09:59:52+00:00,,0,MeharMishra/Mano-Machine,449229958,Verilog,Mano-Machine,5,0,2022-01-18 10:01:01+00:00,[],None
486,https://github.com/SteveLRojas/NES_DragonBoard.git,2022-01-21 05:19:44+00:00,FPGA implementation of the NES game console for DragonBoard.,0,SteveLRojas/NES_DragonBoard,450363216,Verilog,NES_DragonBoard,9309,0,2022-01-21 05:24:43+00:00,[],None
487,https://github.com/alpgurlee/SOC--System-on-Chip--Design-CORDIC-Tabanl--HW-SW-CoDesign.git,2022-01-20 23:40:23+00:00,,0,alpgurlee/SOC--System-on-Chip--Design-CORDIC-Tabanl--HW-SW-CoDesign,450292694,Verilog,SOC--System-on-Chip--Design-CORDIC-Tabanl--HW-SW-CoDesign,1239,0,2022-01-21 11:57:54+00:00,[],None
488,https://github.com/linh97abc/verilog_matrix.git,2022-01-16 16:26:10+00:00,,0,linh97abc/verilog_matrix,448608691,Verilog,verilog_matrix,3,0,2022-01-16 16:28:57+00:00,[],None
489,https://github.com/a-vinod/PipelinedMIPS.git,2022-01-14 12:03:26+00:00,We implemented four versions of a pipelined MIPS architecture from scratch using Verilog. The implementations were developed and simulated using ModelSim.,0,a-vinod/PipelinedMIPS,447953293,Verilog,PipelinedMIPS,17177,0,2023-06-26 07:59:39+00:00,[],None
490,https://github.com/odaymishael/router3_1.git,2022-01-14 10:40:29+00:00,"The router accepts data packets on a single 8-bit port and routes them to one of the three output channels, channel0, channel1 and channel2",0,odaymishael/router3_1,447931401,Verilog,router3_1,858,0,2022-01-14 11:57:28+00:00,[],None
491,https://github.com/mromer35/Design-of-a-Traffic-Light-Controller.git,2022-01-17 22:05:06+00:00,,0,mromer35/Design-of-a-Traffic-Light-Controller,449061990,Verilog,Design-of-a-Traffic-Light-Controller,486,0,2022-01-17 22:24:55+00:00,[],None
492,https://github.com/mkostandin/fpga-oscilloscope.git,2022-01-17 23:51:19+00:00,,0,mkostandin/fpga-oscilloscope,449082818,Verilog,fpga-oscilloscope,50,0,2022-01-23 11:56:28+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
493,https://github.com/Moksiai/FPGA-keep-talking.git,2022-01-18 02:50:24+00:00,verilog ,0,Moksiai/FPGA-keep-talking,449119120,Verilog,FPGA-keep-talking,238,0,2022-01-18 02:51:49+00:00,[],None
494,https://github.com/ShadyCookies/FPGA-Lab-Project.git,2022-01-18 04:40:39+00:00,Simulating a Railway Handcar on a Zynq-7000 FPGA Development Board in Verilog,0,ShadyCookies/FPGA-Lab-Project,449142214,Verilog,FPGA-Lab-Project,225,0,2022-01-18 04:46:19+00:00,[],https://api.github.com/licenses/mit
495,https://github.com/dhy2000/key_filter.git,2022-01-22 06:43:00+00:00,A simple key filter module in Verilog,0,dhy2000/key_filter,450739268,Verilog,key_filter,1,0,2022-12-06 18:50:04+00:00,[],None
496,https://github.com/CptCrasher/Multiplexor-In-Verilog.git,2022-01-21 23:47:04+00:00,Simple MUX using Verilog,0,CptCrasher/Multiplexor-In-Verilog,450672018,Verilog,Multiplexor-In-Verilog,6,0,2022-01-21 23:47:09+00:00,[],None
497,https://github.com/R0cinant3/UART.git,2022-01-13 10:24:13+00:00,,0,R0cinant3/UART,447555422,Verilog,UART,10,0,2022-01-13 10:34:53+00:00,[],https://api.github.com/licenses/mit
498,https://github.com/grantsmith09/Unpipelined-Single-Cycle-Processor.git,2022-01-24 23:29:43+00:00,,0,grantsmith09/Unpipelined-Single-Cycle-Processor,451668709,Verilog,Unpipelined-Single-Cycle-Processor,29,0,2022-01-24 23:43:48+00:00,[],None
499,https://github.com/BobLouis/verilog_algorithm.git,2022-01-25 08:42:06+00:00,,0,BobLouis/verilog_algorithm,451799226,Verilog,verilog_algorithm,4461,0,2022-01-26 03:01:09+00:00,[],None
500,https://github.com/Kaveesha-98/verilog.git,2022-01-25 08:29:10+00:00,,0,Kaveesha-98/verilog,451795343,Verilog,verilog,6754,0,2022-11-03 08:52:56+00:00,[],None
501,https://github.com/pradumnk/HDLBits-Solutions.git,2022-01-03 13:28:28+00:00,Solutions of HDL Bits Question.,0,pradumnk/HDLBits-Solutions,444070832,Verilog,HDLBits-Solutions,54,0,2022-07-27 07:35:05+00:00,[],None
502,https://github.com/AlexandraVarga/MIPS-32-BIT-MERGE-PIXELS.git,2022-01-13 20:19:29+00:00,,0,AlexandraVarga/MIPS-32-BIT-MERGE-PIXELS,447740247,Verilog,MIPS-32-BIT-MERGE-PIXELS,136,0,2023-12-09 14:43:27+00:00,[],None
503,https://github.com/Ever-glow/DIC_LAVA.git,2022-01-01 18:14:55+00:00,,0,Ever-glow/DIC_LAVA,443596869,Verilog,DIC_LAVA,3,0,2022-01-02 05:59:12+00:00,[],None
504,https://github.com/Ubuintu/DigitalSignalProcessing.git,2022-01-10 19:29:10+00:00,My DSP design class repository for Winter 2022,0,Ubuintu/DigitalSignalProcessing,446555956,Verilog,DigitalSignalProcessing,2258518,0,2024-03-18 15:10:41+00:00,[],None
505,https://github.com/KexinZheng5/CS152B-LAB2.git,2022-01-24 21:05:43+00:00,,1,KexinZheng5/CS152B-LAB2,451632842,Verilog,CS152B-LAB2,8,0,2022-01-28 22:55:43+00:00,[],None
506,https://github.com/sisaphilip/Scrambler.git,2022-01-30 11:15:02+00:00,Multiplicative scrambler in chisel-lang,0,sisaphilip/Scrambler,453658477,Verilog,Scrambler,2,0,2022-01-30 11:15:52+00:00,[],None
507,https://github.com/dekad4n/tel_conv.git,2022-01-30 23:32:11+00:00,,0,dekad4n/tel_conv,453829554,Verilog,tel_conv,94,0,2022-01-30 23:33:27+00:00,[],None
508,https://github.com/KRUTOMER/Auto-scaled-LF-counter.git,2022-01-10 07:09:34+00:00,"Auto-scaled low-frequency counter by ""FPGA prototyping by Verilog examples"" book",0,KRUTOMER/Auto-scaled-LF-counter,446316068,Verilog,Auto-scaled-LF-counter,10,0,2022-01-10 07:49:02+00:00,[],None
509,https://github.com/momocat1102/Logic_FinallProject.git,2022-01-16 09:07:52+00:00,,0,momocat1102/Logic_FinallProject,448505235,Verilog,Logic_FinallProject,1208,0,2022-01-16 09:10:36+00:00,[],None
510,https://github.com/mxchen2001/uarch.git,2022-01-27 01:54:20+00:00,Git Repo for microarchitecture,0,mxchen2001/uarch,452504767,Verilog,uarch,97,0,2022-01-27 02:03:07+00:00,[],None
511,https://github.com/lreyess806/Verilog-Designs.git,2022-01-24 19:03:34+00:00,Basic and General Verilog Designs and Testbenches,0,lreyess806/Verilog-Designs,451596223,Verilog,Verilog-Designs,13,0,2022-01-24 19:04:49+00:00,[],None
512,https://github.com/soroushfathi/MorseDecoder_Verilog.git,2022-01-27 07:15:31+00:00,,0,soroushfathi/MorseDecoder_Verilog,452578757,Verilog,MorseDecoder_Verilog,2,0,2022-01-27 07:18:11+00:00,[],None
513,https://github.com/Gaveroid/ECE09243-Lab2-FSM.git,2022-01-27 22:05:49+00:00,,0,Gaveroid/ECE09243-Lab2-FSM,452860296,Verilog,ECE09243-Lab2-FSM,3,0,2022-01-27 22:06:50+00:00,[],None
514,https://github.com/Plague-Inc/pong.git,2022-01-26 07:15:52+00:00,,0,Plague-Inc/pong,452176331,Verilog,pong,433,0,2022-01-26 07:20:11+00:00,[],https://api.github.com/licenses/mit
515,https://github.com/madmaverickminion/Soil-monitoring-bot.git,2022-01-26 07:47:14+00:00,This repository contains all the work(till task 5) of Soil Monitoring Bot theme(eYRC-2021-22).,0,madmaverickminion/Soil-monitoring-bot,452184879,Verilog,Soil-monitoring-bot,27972,0,2023-05-07 11:29:56+00:00,"['verilog-hdl', 'robotics', 'quartus-prime', 'fpga-programming', 'dijkstra-shortest-path']",None
516,https://github.com/Jim-CTChen/DSPIV_final.git,2022-01-09 03:41:29+00:00,,0,Jim-CTChen/DSPIV_final,445985661,Verilog,DSPIV_final,4777,0,2022-01-10 11:43:44+00:00,[],None
517,https://github.com/Gaojh078/mouxing.git,2022-01-09 07:07:01+00:00,,0,Gaojh078/mouxing,446018396,Verilog,mouxing,502,0,2022-01-09 08:47:27+00:00,[],None
518,https://github.com/lzhj73/fifo.git,2022-01-09 09:00:27+00:00,,0,lzhj73/fifo,446039219,Verilog,fifo,3,0,2022-01-09 12:05:22+00:00,[],None
519,https://github.com/the-pinbo/EC-204_Lab.git,2022-01-06 17:21:06+00:00,,0,the-pinbo/EC-204_Lab,445252388,Verilog,EC-204_Lab,126028,0,2022-01-06 17:23:07+00:00,[],None
520,https://github.com/htfab/ks-guitar-2s.git,2022-01-01 05:44:34+00:00,Two string version of Karplus-Strong Guitar,0,htfab/ks-guitar-2s,443479028,Verilog,ks-guitar-2s,881256,0,2022-01-02 16:30:23+00:00,[],https://api.github.com/licenses/mit
521,https://github.com/luke-mckay/cr_pipe_reg.git,2022-01-03 07:28:19+00:00,Pipeline Registers,0,luke-mckay/cr_pipe_reg,443975597,Verilog,cr_pipe_reg,3,0,2022-01-03 07:29:06+00:00,[],None
522,https://github.com/hongdatchy/riscv-com-ar.git,2022-01-03 11:46:13+00:00,,0,hongdatchy/riscv-com-ar,444041236,Verilog,riscv-com-ar,55,0,2022-01-03 11:51:10+00:00,[],None
523,https://github.com/nyundiii/Logic-circuit-design-and-experiment.git,2022-01-03 08:24:23+00:00,2021 Logic circuit design and experiment,0,nyundiii/Logic-circuit-design-and-experiment,443988616,Verilog,Logic-circuit-design-and-experiment,17985,0,2022-01-03 08:42:58+00:00,[],None
524,https://github.com/sarmentow/riscv.git,2022-01-03 13:50:52+00:00,Computer from the ground up,0,sarmentow/riscv,444077971,Verilog,riscv,2521,0,2022-10-05 00:34:28+00:00,[],None
525,https://github.com/Steven11876/ECE253.git,2022-01-02 02:30:49+00:00,Projects for ECE253 in verilog and ARM,0,Steven11876/ECE253,443665588,Verilog,ECE253,33,0,2022-01-02 03:23:02+00:00,[],None
526,https://github.com/Byron-MN-FRC/4859PublicCAD.git,2022-01-08 01:49:33+00:00,,0,Byron-MN-FRC/4859PublicCAD,445699254,Verilog,4859PublicCAD,39849,0,2022-01-08 01:58:08+00:00,[],None
527,https://github.com/icelin99/single-circle-cpu-with-simple-mips-intruction.git,2022-01-07 09:26:00+00:00,,0,icelin99/single-circle-cpu-with-simple-mips-intruction,445466160,Verilog,single-circle-cpu-with-simple-mips-intruction,2795,0,2022-01-07 09:41:31+00:00,[],None
528,https://github.com/barisubasi/FB-CPU-RTL-DESIGN.git,2022-01-05 10:57:54+00:00,"FB-CPU is an educational processor to explain the basic working principles of processors. Within the scope of this project, RTL design of a processor named FB-CPU with Verilog language and various code snippets written in machine language on the designed processor were written. ",0,barisubasi/FB-CPU-RTL-DESIGN,444769546,Verilog,FB-CPU-RTL-DESIGN,3760,0,2022-01-05 17:55:11+00:00,[],None
529,https://github.com/UA3MQJ/tape-streamer.git,2022-01-11 14:12:48+00:00,Cassette tape streamer with zx format and rs232 port project ,0,UA3MQJ/tape-streamer,446848607,Verilog,tape-streamer,24216,0,2022-04-19 22:29:57+00:00,[],None
530,https://github.com/alymaamoun/DMA.git,2022-01-11 14:39:32+00:00,DMA for MIPS processor ,0,alymaamoun/DMA,446858403,Verilog,DMA,24,0,2022-01-11 14:41:00+00:00,[],None
531,https://github.com/manish257/Pipelined-RISC_V.git,2022-01-12 18:48:43+00:00,,0,manish257/Pipelined-RISC_V,447333978,Verilog,Pipelined-RISC_V,608,0,2022-01-12 18:51:03+00:00,[],None
532,https://github.com/LacasaDepappel/LAB5.git,2021-12-31 07:10:42+00:00,,0,LacasaDepappel/LAB5,443281165,Verilog,LAB5,10,0,2021-12-31 07:30:58+00:00,[],None
533,https://github.com/rohinthram/avsd_opamp_tapeout_mpw3.git,2022-01-18 16:18:43+00:00,,0,rohinthram/avsd_opamp_tapeout_mpw3,449358385,Verilog,avsd_opamp_tapeout_mpw3,897,0,2022-01-18 16:18:58+00:00,[],https://api.github.com/licenses/apache-2.0
534,https://github.com/BrownGrizzl/Digital_ASIC.git,2022-01-11 12:26:34+00:00,,0,BrownGrizzl/Digital_ASIC,446811733,Verilog,Digital_ASIC,51168,0,2022-01-14 08:45:39+00:00,[],None
535,https://github.com/JeremiahJiang/EE2026-Final-Project.git,2022-01-15 02:55:52+00:00,,0,JeremiahJiang/EE2026-Final-Project,448166161,Verilog,EE2026-Final-Project,22,0,2022-01-15 03:05:34+00:00,[],None
536,https://github.com/SaritaB21/Burrows-Wheeler-Transform-.git,2022-01-15 09:28:13+00:00,,0,SaritaB21/Burrows-Wheeler-Transform-,448233901,Verilog,Burrows-Wheeler-Transform-,271,0,2022-01-15 09:30:48+00:00,[],None
537,https://github.com/BRO-TO/FPGA-Development.git,2022-01-13 09:00:07+00:00,All about Verilog and VHDL ,0,BRO-TO/FPGA-Development,447530338,Verilog,FPGA-Development,14,0,2022-01-13 09:04:06+00:00,[],None
538,https://github.com/Sanjana-Srinidhi/Shift-Registers.git,2022-01-13 16:20:09+00:00,,0,Sanjana-Srinidhi/Shift-Registers,447668373,Verilog,Shift-Registers,16,0,2022-01-13 16:27:24+00:00,[],https://api.github.com/licenses/gpl-3.0
539,https://github.com/mohshammasi/KAUST-CS294O.git,2022-01-16 16:49:13+00:00,This repository contains Verilog code developed for a game on an FPGA.,0,mohshammasi/KAUST-CS294O,448614549,Verilog,KAUST-CS294O,7080,0,2022-01-16 16:59:11+00:00,[],None
540,https://github.com/mwbrown/picorv-sandbox.git,2022-01-22 04:38:06+00:00,"FPGA experiments using cocotb, Amaranth HDL + Verilog, and the PicoRV32.",0,mwbrown/picorv-sandbox,450717660,Verilog,picorv-sandbox,79,0,2022-01-22 05:04:37+00:00,[],https://api.github.com/licenses/mit
541,https://github.com/mfkiwl/miranda_fpga_openmpw.git,2022-01-20 18:28:01+00:00,Miranda eFPGA for OpenMPW-5,0,mfkiwl/miranda_fpga_openmpw,450212689,,miranda_fpga_openmpw,48085,0,2022-05-27 07:42:39+00:00,[],https://api.github.com/licenses/apache-2.0
542,https://github.com/Akshada-khele/VerilogProjects.git,2022-01-20 19:02:35+00:00,Basic Digital Circuit Implementations using Verilog HDL,0,Akshada-khele/VerilogProjects,450223300,Verilog,VerilogProjects,6,0,2022-01-20 19:10:28+00:00,[],None
543,https://github.com/AdiPratapSingh/iverilog.git,2022-01-20 17:02:58+00:00,,0,AdiPratapSingh/iverilog,450185086,Verilog,iverilog,1343,0,2022-04-26 05:21:40+00:00,[],None
544,https://github.com/priyam1999/verilogprojects.git,2022-01-20 19:03:56+00:00,Basic Digital Circuit Implementations Using Verilog HDL,0,priyam1999/verilogprojects,450223699,Verilog,verilogprojects,15,0,2022-01-20 19:10:24+00:00,[],https://api.github.com/licenses/gpl-3.0
545,https://github.com/aminb7/ARM-Processor.git,2022-01-18 07:49:23+00:00,,0,aminb7/ARM-Processor,449189410,Verilog,ARM-Processor,36,0,2022-01-18 07:49:37+00:00,[],None
546,https://github.com/unal-edigital1-lab/wp01-2021-2-grupo05-2021-2.git,2022-01-19 04:44:11+00:00,wp01-2021-2-grupo05-2021-2 created by GitHub Classroom,0,unal-edigital1-lab/wp01-2021-2-grupo05-2021-2,449549755,Verilog,wp01-2021-2-grupo05-2021-2,38967,0,2022-02-09 14:40:13+00:00,[],None
547,https://github.com/MeharMishra/Johnson-Counter.git,2022-01-18 09:58:32+00:00,,0,MeharMishra/Johnson-Counter,449229528,Verilog,Johnson-Counter,1,0,2022-01-18 09:59:17+00:00,[],None
548,https://github.com/mdzakirhussain/try1.git,2022-01-21 05:37:03+00:00,,0,mdzakirhussain/try1,450366783,Verilog,try1,7855,0,2022-01-21 06:15:05+00:00,[],https://api.github.com/licenses/apache-2.0
549,https://github.com/rajaatif1/Semester-Project-Stopwatch-.git,2022-02-02 10:47:36+00:00,,0,rajaatif1/Semester-Project-Stopwatch-,454735675,Verilog,Semester-Project-Stopwatch-,10,0,2022-02-02 10:58:31+00:00,[],None
550,https://github.com/elvislzy/prng.git,2022-02-04 20:41:32+00:00,,0,elvislzy/prng,455690543,Verilog,prng,42,0,2022-03-04 19:03:09+00:00,[],None
551,https://github.com/oscarmarmejia/Verilog_DigitalClock.git,2022-02-01 20:39:21+00:00,Verilog Code for a Digital Clock,0,oscarmarmejia/Verilog_DigitalClock,454543585,Verilog,Verilog_DigitalClock,32,0,2022-04-06 18:20:13+00:00,[],None
552,https://github.com/Nana2929/Cached-Pipelined-CPU.git,2022-01-14 03:06:06+00:00,CA lab2: cache+pipelined risc-v cpu ,0,Nana2929/Cached-Pipelined-CPU,447826020,Verilog,Cached-Pipelined-CPU,1886,0,2024-02-01 03:14:32+00:00,"['cpu', 'homework']",None
553,https://github.com/AbdelnabyK/OpenFPGA.git,2022-01-28 20:12:51+00:00,,0,AbdelnabyK/OpenFPGA,453203799,Verilog,OpenFPGA,9793,0,2022-01-28 20:17:06+00:00,[],None
554,https://github.com/sheiny/OpenROAD2.git,2022-01-03 04:30:41+00:00,,0,sheiny/OpenROAD2,443940148,Verilog,OpenROAD2,584334,0,2023-11-10 18:09:27+00:00,[],https://api.github.com/licenses/bsd-3-clause
555,https://github.com/nuretanjim/ALU-Module.git,2022-01-07 18:55:55+00:00,ALU Module in Verilog,0,nuretanjim/ALU-Module,445623261,Verilog,ALU-Module,1,0,2022-01-10 03:28:50+00:00,[],None
556,https://github.com/pawlex/altera_fpga_memory_controllers.git,2022-01-05 23:47:45+00:00,,0,pawlex/altera_fpga_memory_controllers,444983106,Verilog,altera_fpga_memory_controllers,6622,0,2022-01-10 09:28:09+00:00,[],None
557,https://github.com/rnjsskdud/Verilog-Simulation.git,2022-01-10 06:57:51+00:00,,0,rnjsskdud/Verilog-Simulation,446312960,Verilog,Verilog-Simulation,53,0,2022-01-10 10:26:31+00:00,[],https://api.github.com/licenses/mit
558,https://github.com/Shaalan-omar/Verilog-Calculator.git,2022-01-12 23:44:18+00:00,A project on Basys-3 circuit where we use its on/off switches for mathematical operations and the push buttons for number incremntaion,0,Shaalan-omar/Verilog-Calculator,447404462,Verilog,Verilog-Calculator,9,0,2022-01-12 23:55:38+00:00,[],None
559,https://github.com/JackShkifati28/Traffic-Light-Controller.git,2022-01-07 20:17:39+00:00,,0,JackShkifati28/Traffic-Light-Controller,445641978,Verilog,Traffic-Light-Controller,1519,0,2023-06-08 21:10:27+00:00,[],None
560,https://github.com/JamesLuyangJiang/RISC-on-FPGA.git,2022-01-12 01:37:23+00:00,,0,JamesLuyangJiang/RISC-on-FPGA,447038712,Verilog,RISC-on-FPGA,8,0,2022-01-12 01:38:16+00:00,[],None
561,https://github.com/Franzavi/State-Machine-Proyect.git,2022-01-03 16:20:26+00:00,Proyect made from Digital Design class. It consist of a state machine program made in vdhl for a basys3 fpga.,0,Franzavi/State-Machine-Proyect,444124955,Verilog,State-Machine-Proyect,178,0,2022-01-03 16:21:51+00:00,[],None
562,https://github.com/febz012/Pick-and-place-Bot.git,2021-12-31 09:10:17+00:00,A pick-and-place bot powered using an FPGA.,0,febz012/Pick-and-place-Bot,443304586,Verilog,Pick-and-place-Bot,1384,0,2023-08-15 11:47:39+00:00,[],None
563,https://github.com/0BananaBig0/stdcell.git,2022-01-01 06:43:24+00:00,,0,0BananaBig0/stdcell,443486265,Verilog,stdcell,2881,0,2022-04-03 11:06:58+00:00,[],https://api.github.com/licenses/mit
564,https://github.com/Russ44-creator/single-cpu.git,2022-01-04 13:57:22+00:00,,1,Russ44-creator/single-cpu,444438741,Verilog,single-cpu,805,0,2022-01-04 14:20:58+00:00,[],None
565,https://github.com/jangddol/KUCMB_Verilog.git,2021-12-31 06:57:36+00:00,,0,jangddol/KUCMB_Verilog,443278434,Verilog,KUCMB_Verilog,28,0,2022-01-01 06:40:58+00:00,[],None
566,https://github.com/Frogyyy/Digital_Clock.git,2022-01-17 16:33:07+00:00,,0,Frogyyy/Digital_Clock,448969278,Verilog,Digital_Clock,5,0,2022-01-17 16:39:23+00:00,[],None
567,https://github.com/ranaadeelahmad/32-bit-Risc-V-Processor.git,2022-01-17 10:29:22+00:00,,0,ranaadeelahmad/32-bit-Risc-V-Processor,448848343,Verilog,32-bit-Risc-V-Processor,16,0,2022-01-17 10:33:42+00:00,[],None
568,https://github.com/linjw16/utilities.git,2022-01-20 07:27:25+00:00,,0,linjw16/utilities,449996573,Verilog,utilities,459,0,2022-09-19 01:28:53+00:00,[],None
569,https://github.com/harry11070723/2022_TSRI_Verilog.git,2022-01-20 05:13:31+00:00,,0,harry11070723/2022_TSRI_Verilog,449963401,Verilog,2022_TSRI_Verilog,18,0,2022-01-26 03:23:54+00:00,[],None
570,https://github.com/Shetkarl/Adder.git,2022-01-16 13:05:13+00:00,,0,Shetkarl/Adder,448556443,Verilog,Adder,2,0,2022-01-16 13:13:47+00:00,[],None
571,https://github.com/odaymishael/basic-Verilog-rtl-and-tb-codes-.git,2022-01-14 12:06:04+00:00,basic verilog codes (rtl and tb ) for ,0,odaymishael/basic-Verilog-rtl-and-tb-codes-,447954068,Verilog,basic-Verilog-rtl-and-tb-codes-,2824,0,2022-01-14 12:24:20+00:00,[],None
572,https://github.com/andrzejenne/truxton.git,2022-01-26 09:32:02+00:00,MiSTerFPGA Truxton/Tatsujin,0,andrzejenne/truxton,452215364,Verilog,truxton,4195,0,2022-01-26 09:50:45+00:00,[],https://api.github.com/licenses/gpl-2.0
573,https://github.com/jared-p/CPU_Design_Project.git,2022-01-19 18:22:10+00:00,32-bit instruction based CPU that communicates with local RAM to complete fetch cycle. CPU is capable of executing instructions and storing data.,0,jared-p/CPU_Design_Project,449807379,Verilog,CPU_Design_Project,667,0,2022-01-19 21:25:23+00:00,[],https://api.github.com/licenses/mit
574,https://github.com/xiaohanhaowei/openmips.git,2022-01-17 07:14:33+00:00,a cpu designation based on openmips ISA,0,xiaohanhaowei/openmips,448789968,Verilog,openmips,38206,0,2022-01-17 07:27:48+00:00,[],None
575,https://github.com/lphlch/Digital-Logic.git,2022-01-17 08:34:02+00:00,"Class project of Digital Logic, Tongji University",1,lphlch/Digital-Logic,448812587,Verilog,Digital-Logic,519,0,2023-01-25 16:29:10+00:00,"['fpga', 'verilog', 'vivado']",None
576,https://github.com/raipranav384/IPA_project_Y86-64_Processor.git,2022-02-04 14:35:26+00:00,,0,raipranav384/IPA_project_Y86-64_Processor,455579757,Verilog,IPA_project_Y86-64_Processor,4320,0,2022-03-15 12:55:41+00:00,[],None
577,https://github.com/yhs1202/DigitalLab_exp8.git,2022-02-04 02:54:34+00:00,Design of Synchronous Sequential Circuit,0,yhs1202/DigitalLab_exp8,455403245,Verilog,DigitalLab_exp8,1,0,2022-02-05 11:56:23+00:00,[],None
578,https://github.com/zslztms/circuit-experiment.git,2022-01-22 03:01:46+00:00,,0,zslztms/circuit-experiment,450702451,Verilog,circuit-experiment,8262,0,2022-01-22 03:03:56+00:00,[],None
579,https://github.com/hemanthr28/Asynchronous_FIFO.git,2022-01-23 22:30:38+00:00,,0,hemanthr28/Asynchronous_FIFO,451247376,Verilog,Asynchronous_FIFO,4,0,2022-09-17 19:46:56+00:00,[],None
580,https://github.com/jacleveland/tropicalu.git,2022-01-14 18:07:15+00:00,The beginning of a Tropical Geometric Arithmetic Logic Unit (ALU) written in Verilog HDL by Jacob Cleveland and Dev Dabke.,0,jacleveland/tropicalu,448063237,Verilog,tropicalu,4,0,2022-01-14 18:07:52+00:00,[],https://api.github.com/licenses/mit
581,https://github.com/elieloshiokameh/VHDL.git,2022-01-29 13:06:20+00:00,,0,elieloshiokameh/VHDL,453399886,Verilog,VHDL,4,0,2023-10-10 15:29:46+00:00,[],https://api.github.com/licenses/mit
582,https://github.com/mariamosn/CN2.git,2022-01-26 22:43:00+00:00,Calculatoare Numerice 2,1,mariamosn/CN2,452464846,Verilog,CN2,84,0,2022-04-05 22:22:07+00:00,[],None
583,https://github.com/araramya/verilog_bzbz.git,2022-01-27 10:29:29+00:00,"Bzbzuing for learning verilog HDL language, you will not find something helpful here",0,araramya/verilog_bzbz,452637105,Verilog,verilog_bzbz,1,0,2022-01-27 10:32:02+00:00,[],None
584,https://github.com/Leo-i/Cordic.git,2022-01-28 08:59:42+00:00,,0,Leo-i/Cordic,453000757,Verilog,Cordic,3,0,2022-01-28 09:03:06+00:00,[],None
585,https://github.com/hugoasampaio/hueblue-fw.git,2022-01-11 19:19:11+00:00,hueblue's source code. ,0,hugoasampaio/hueblue-fw,446951802,Verilog,hueblue-fw,784,0,2023-05-26 13:25:28+00:00,[],None
586,https://github.com/yiyading/Thesis.git,2022-01-03 09:26:20+00:00,Thesis,0,yiyading/Thesis,444004872,Verilog,Thesis,12,0,2022-01-05 12:11:57+00:00,[],None
587,https://github.com/zzj-eric/RISCV-CPU-design.git,2022-01-09 10:19:39+00:00,This is an easy CPU based on RISCV instruction (32 bits).,0,zzj-eric/RISCV-CPU-design,446054344,Verilog,RISCV-CPU-design,10,0,2022-01-09 10:24:13+00:00,[],None
588,https://github.com/chouguting/mcu-design.git,2022-01-07 11:56:11+00:00,NTOU計算機系統設計-實作pipeline的pic mcu,0,chouguting/mcu-design,445505217,Verilog,mcu-design,22181,0,2022-01-13 14:34:45+00:00,[],None
589,https://github.com/doudou030/Logic-Design-and-Laboratory-Experiments_final_project.git,2022-01-11 04:45:41+00:00,NCNU CSIE 109-1 邏設,0,doudou030/Logic-Design-and-Laboratory-Experiments_final_project,446680428,Verilog,Logic-Design-and-Laboratory-Experiments_final_project,13,0,2023-05-10 04:50:42+00:00,[],None
590,https://github.com/matheusdelimasilva/DinoRunGameVHDL.git,2022-01-13 22:20:53+00:00,This is a game inspired by Chrome's dinosaur game built in an FPGA using VHDL. The game displayed on a monitor using the VGA protocol. The hardware complement consists of a VGA adapter connected to the FPGA and two buttons: reset and jump.,0,matheusdelimasilva/DinoRunGameVHDL,447769497,Verilog,DinoRunGameVHDL,1521,0,2022-01-14 15:39:11+00:00,[],None
591,https://github.com/VaradrajSK/CS2204_Projects.git,2022-01-04 15:32:15+00:00,Verilog Projects for CS2204,0,VaradrajSK/CS2204_Projects,444471001,Verilog,CS2204_Projects,539,0,2022-02-03 03:58:13+00:00,[],None
592,https://github.com/sarath-003/LWdes.git,2022-01-16 15:48:26+00:00,Lightweight-DES,0,sarath-003/LWdes,448599149,Verilog,LWdes,44,0,2022-01-16 15:55:44+00:00,[],None
593,https://github.com/Carlos-Jr/EPFL-Libraries-Test.git,2022-01-09 19:03:30+00:00,,0,Carlos-Jr/EPFL-Libraries-Test,446178105,Verilog,EPFL-Libraries-Test,6851,0,2022-06-27 13:34:15+00:00,[],None
594,https://github.com/anhtu0310/Single-cycle-Risc-V-verilog.git,2022-01-12 16:29:10+00:00,,0,anhtu0310/Single-cycle-Risc-V-verilog,447290840,Verilog,Single-cycle-Risc-V-verilog,6,0,2022-01-12 16:30:48+00:00,[],None
595,https://github.com/Ninjacreepiamus/ece337.git,2022-01-12 22:27:30+00:00,,0,Ninjacreepiamus/ece337,447389133,Verilog,ece337,6134,0,2023-03-08 02:31:03+00:00,[],None
596,https://github.com/aangoorani/Logic-Circuits-Final-Project.git,2022-01-01 15:45:12+00:00,,0,aangoorani/Logic-Circuits-Final-Project,443569438,Verilog,Logic-Circuits-Final-Project,1734,0,2022-01-03 19:41:49+00:00,[],None
597,https://github.com/stephen863256/yahaha.git,2022-01-01 08:36:11+00:00,,0,stephen863256/yahaha,443500967,Verilog,yahaha,83,0,2022-12-08 04:55:08+00:00,[],None
598,https://github.com/ehsanjso/Computer-Architecture-Project4-MIPS-Like.git,2022-01-06 04:04:21+00:00,,0,ehsanjso/Computer-Architecture-Project4-MIPS-Like,445035218,Verilog,Computer-Architecture-Project4-MIPS-Like,10,0,2022-01-06 04:05:14+00:00,[],None
599,https://github.com/eminakcy/digital_desing_with_fpga_final_project.git,2022-01-06 10:37:22+00:00,ultra sonic radar sistemi,0,eminakcy/digital_desing_with_fpga_final_project,445131675,Verilog,digital_desing_with_fpga_final_project,1497,0,2022-01-16 14:40:20+00:00,[],None
600,https://github.com/YunusEmreKurtarici/fb_cpu.git,2022-01-06 11:03:21+00:00,,0,YunusEmreKurtarici/fb_cpu,445138794,Verilog,fb_cpu,4,0,2022-01-06 11:26:48+00:00,[],None
601,https://github.com/BuminK1907/FB-CPU-Islemci-Tasarimi.git,2022-01-05 19:59:44+00:00,,0,BuminK1907/FB-CPU-Islemci-Tasarimi,444933993,Verilog,FB-CPU-Islemci-Tasarimi,3,0,2022-01-05 20:01:07+00:00,[],None
602,https://github.com/alishahanda/MIPS32_processor.git,2022-01-05 18:33:26+00:00,,0,alishahanda/MIPS32_processor,444911406,Verilog,MIPS32_processor,1,0,2022-01-05 18:35:42+00:00,[],None
603,https://github.com/TonyLiu0226/Simple-RISC-Machine.git,2022-01-07 01:08:09+00:00,"A simple RISC machine with 8 registers, 16-bit instruction decoder, datapath controller, memory, 4 operation ALU, shifter, and overflow detection.",0,TonyLiu0226/Simple-RISC-Machine,445357518,Verilog,Simple-RISC-Machine,68,0,2022-01-09 00:29:21+00:00,[],https://api.github.com/licenses/cc0-1.0
604,https://github.com/sartajsw/hardware-modeling.git,2022-01-18 23:41:10+00:00,Learning Verilog through example!,0,sartajsw/hardware-modeling,449483097,Verilog,hardware-modeling,9,0,2022-01-31 15:06:37+00:00,[],None
605,https://github.com/furkansahinz/fssec.git,2022-01-18 09:06:43+00:00,,0,furkansahinz/fssec,449213289,Verilog,fssec,134,0,2022-01-18 23:54:44+00:00,[],None
606,https://github.com/tienanh129902/nios_serial_uart.git,2022-01-17 08:15:05+00:00,,0,tienanh129902/nios_serial_uart,448806876,Verilog,nios_serial_uart,24763,0,2022-01-17 08:18:12+00:00,[],None
607,https://github.com/holmes-inputcheck/SCALE-MAMBA-CIRCUIT-BENCH.git,2022-01-24 07:28:19+00:00,,0,holmes-inputcheck/SCALE-MAMBA-CIRCUIT-BENCH,451359705,Verilog,SCALE-MAMBA-CIRCUIT-BENCH,59899,0,2022-01-24 07:30:00+00:00,[],
608,https://github.com/whrudwns/Mentoring.git,2022-01-21 00:30:57+00:00,UPF(by Fahad),0,whrudwns/Mentoring,450302490,Verilog,Mentoring,20,0,2022-01-21 00:34:42+00:00,[],None
609,https://github.com/uditpd3000/cs220-programming-assignments.git,2022-01-20 20:24:29+00:00,Assignment submissions made in the course CS220 in the 2020-21 Even semester,1,uditpd3000/cs220-programming-assignments,450247004,Verilog,cs220-programming-assignments,3659,0,2022-12-07 10:35:53+00:00,[],None
610,https://github.com/oopsitmelted/matrixledcontroller.git,2022-01-22 01:00:32+00:00,,0,oopsitmelted/matrixledcontroller,450683674,Verilog,matrixledcontroller,55,0,2022-01-22 01:05:02+00:00,[],None
611,https://github.com/mfkiwl/superscalar_processor-1.git,2022-01-20 07:34:11+00:00,,0,mfkiwl/superscalar_processor-1,449998504,Verilog,superscalar_processor-1,105,0,2022-07-07 23:33:12+00:00,[],None
612,https://github.com/WANGHanshuo1220/s7-archi-processor-miniprojet.git,2022-01-19 13:15:21+00:00,,0,WANGHanshuo1220/s7-archi-processor-miniprojet,449698310,Verilog,s7-archi-processor-miniprojet,104797,0,2022-01-19 13:18:02+00:00,[],None
613,https://github.com/JANAKIRAMEMANI/SEQUENTIAL_CKTS.git,2022-01-31 07:47:29+00:00,,0,JANAKIRAMEMANI/SEQUENTIAL_CKTS,453919156,Verilog,SEQUENTIAL_CKTS,17,0,2022-01-31 07:50:05+00:00,[],None
614,https://github.com/KeneOkwoli/ELEC241.git,2022-01-31 10:39:11+00:00,,0,KeneOkwoli/ELEC241,453965349,Verilog,ELEC241,1136,0,2022-01-31 10:39:17+00:00,[],https://api.github.com/licenses/cc0-1.0
615,https://github.com/farjana-aktar/Verilong-HDL.git,2022-01-30 14:29:12+00:00,Only for Digital System and Design Lab.,0,farjana-aktar/Verilong-HDL,453702680,Verilog,Verilong-HDL,5,0,2022-02-04 16:08:11+00:00,[],None
616,https://github.com/donn/caravel_example.git,2022-01-24 10:56:05+00:00,,0,donn/caravel_example,451426917,Verilog,caravel_example,48081,0,2022-01-24 11:04:29+00:00,[],https://api.github.com/licenses/apache-2.0
617,https://github.com/davidtran470/CS152_Lab2.git,2022-01-24 20:55:29+00:00,,0,davidtran470/CS152_Lab2,451629978,Verilog,CS152_Lab2,157,0,2022-02-02 20:40:24+00:00,[],None
618,https://github.com/UnAmigaReloaded-fpga/Spectrum_ZxUno_Spark2k06.git,2022-01-24 18:29:22+00:00,EXP27-141121 Core with Spark2k06 updates,2,UnAmigaReloaded-fpga/Spectrum_ZxUno_Spark2k06,451585059,Verilog,Spectrum_ZxUno_Spark2k06,2781,0,2022-01-24 19:00:02+00:00,[],None
619,https://github.com/HusnuAkcak/CSE331-Computer_Organization.git,2022-01-26 05:36:00+00:00,,0,HusnuAkcak/CSE331-Computer_Organization,452153281,Verilog,CSE331-Computer_Organization,18691,0,2022-02-02 21:01:55+00:00,[],None
620,https://github.com/nanlioniya/Digital-Design.git,2022-01-26 07:43:37+00:00,數位電路設計作業,0,nanlioniya/Digital-Design,452183855,Verilog,Digital-Design,1696,0,2022-05-01 11:14:29+00:00,[],https://api.github.com/licenses/mit
621,https://github.com/Gayathiri18/mux_32x1.git,2022-01-27 09:33:03+00:00,Verilog code for 32 x 1 Multiplexer using two 8 x 1 Multiplexer and one 4 x 1 Multiplexer (Gate level modeling),0,Gayathiri18/mux_32x1,452619883,Verilog,mux_32x1,38,0,2022-01-27 13:48:27+00:00,[],None
622,https://github.com/Torney32/CALab2.git,2022-01-27 22:49:33+00:00,,0,Torney32/CALab2,452870423,Verilog,CALab2,3,0,2022-01-27 23:01:56+00:00,[],None
623,https://github.com/Deepak-Sangle/Verilog-Codes.git,2022-01-25 12:06:11+00:00,CS 220 Verilog HDL Codes along with testbench.,0,Deepak-Sangle/Verilog-Codes,451861474,Verilog,Verilog-Codes,2713,0,2022-02-14 21:29:44+00:00,[],https://api.github.com/licenses/mit
624,https://github.com/zybzzz/RISCVFirebird.git,2022-01-25 14:37:34+00:00,Firebird 是一个 RISC-V 架构的 CPU,0,zybzzz/RISCVFirebird,451913388,Verilog,RISCVFirebird,6511,0,2022-12-14 14:22:26+00:00,[],https://api.github.com/licenses/apache-2.0
625,https://github.com/shrutiprakashgupta/QFlow-for-RTL2GDSII.git,2022-01-28 19:00:13+00:00,Repository contains the details of my attempt to generate GDSII layout from RTL code using QFlow toolchain,0,shrutiprakashgupta/QFlow-for-RTL2GDSII,453184289,Verilog,QFlow-for-RTL2GDSII,3861,0,2022-03-04 15:22:43+00:00,[],None
626,https://github.com/shadman-shahid/hamming_error.git,2022-02-01 18:35:52+00:00,"A simple error correcting scheme, based upon the least Hamming distance principle is implemented in verilog.  There are two modules. Encoder module and decoder module. ",0,shadman-shahid/hamming_error,454506230,Verilog,hamming_error,134,0,2022-02-01 18:58:03+00:00,[],None
627,https://github.com/guptarohan6502/ALU_verilog-Project.git,2022-02-03 07:30:50+00:00,,0,guptarohan6502/ALU_verilog-Project,455069278,Verilog,ALU_verilog-Project,301,0,2022-02-03 07:35:22+00:00,[],None
628,https://github.com/Zach-Bravo/Comp-Arch-Lab2.git,2022-02-03 00:29:07+00:00,,0,Zach-Bravo/Comp-Arch-Lab2,454981724,Verilog,Comp-Arch-Lab2,2,0,2022-02-11 03:14:05+00:00,[],None
629,https://github.com/wilicw/rv32-cpu.git,2022-02-02 11:07:12+00:00,,0,wilicw/rv32-cpu,454741489,Verilog,rv32-cpu,12,0,2022-02-02 11:13:26+00:00,[],None
630,https://github.com/stoned-ape/digital_sorting_device.git,2022-01-05 22:26:22+00:00,,0,stoned-ape/digital_sorting_device,444967407,Verilog,digital_sorting_device,96,0,2022-01-06 01:25:13+00:00,[],None
631,https://github.com/MAK13789/ece253-labs.git,2022-01-04 03:45:13+00:00,,0,MAK13789/ece253-labs,444276861,Verilog,ece253-labs,11,0,2022-05-26 12:09:41+00:00,[],None
632,https://github.com/eladawy1988-va/smart_glass_v0.git,2022-01-04 06:44:18+00:00,Repository contain initial designs for smart glass project,0,eladawy1988-va/smart_glass_v0,444314264,Verilog,smart_glass_v0,67324,0,2022-01-04 12:56:04+00:00,[],None
633,https://github.com/sangjunpark97/Digital-System-Design.git,2022-01-04 07:45:34+00:00,,0,sangjunpark97/Digital-System-Design,444330014,Verilog,Digital-System-Design,186,0,2022-01-04 07:45:53+00:00,[],None
634,https://github.com/1y1c0c8/DDfinal.git,2022-01-07 06:55:00+00:00,,0,1y1c0c8/DDfinal,445427759,Verilog,DDfinal,4,0,2022-01-08 06:08:10+00:00,[],None
635,https://github.com/Akgun-Furkan/FBU-CPU.git,2022-01-06 11:15:19+00:00,Verilog dili ile yazılmış basit bir işlemci.,0,Akgun-Furkan/FBU-CPU,445141876,Verilog,FBU-CPU,5,0,2022-01-06 11:26:55+00:00,[],None
636,https://github.com/kambadur/SoftCores.git,2022-01-18 03:40:52+00:00,All about soft core preocessors,0,kambadur/SoftCores,449129859,Verilog,SoftCores,120,0,2022-01-18 09:31:07+00:00,[],None
637,https://github.com/TimChou-ntu/single-cycle-cpu.git,2022-01-15 03:39:52+00:00,,0,TimChou-ntu/single-cycle-cpu,448172909,Verilog,single-cycle-cpu,1052,0,2022-01-15 03:40:13+00:00,[],None
638,https://github.com/zhang677/MIPS-Processor-Project.git,2022-01-21 11:19:54+00:00,This is the project of Fundamental Experiment of Digital Logic and Processor Summer 2021 in Tsinghua University EE department.,0,zhang677/MIPS-Processor-Project,450462965,Verilog,MIPS-Processor-Project,32,0,2022-01-21 11:22:12+00:00,[],None
639,https://github.com/NewUser2222/Simple-door-lock-Verilog.git,2022-01-16 05:05:34+00:00,,0,NewUser2222/Simple-door-lock-Verilog,448462377,Verilog,Simple-door-lock-Verilog,7484,0,2022-01-16 05:08:25+00:00,[],None
640,https://github.com/mromer35/16-bit-Arithmetic-Logic-Unit.git,2022-01-17 19:58:05+00:00,,0,mromer35/16-bit-Arithmetic-Logic-Unit,449031309,Verilog,16-bit-Arithmetic-Logic-Unit,106,0,2022-01-17 21:31:10+00:00,[],None
641,https://github.com/Aniruddha-cmd/8bit-ALU.git,2022-01-18 04:28:11+00:00,,0,Aniruddha-cmd/8bit-ALU,449139572,Verilog,8bit-ALU,6,0,2022-02-04 17:35:26+00:00,[],None
642,https://github.com/chien172431/elevator_controller_verilog.git,2022-01-01 12:37:27+00:00,,0,chien172431/elevator_controller_verilog,443535655,Verilog,elevator_controller_verilog,1916,0,2022-01-01 12:45:18+00:00,[],None
643,https://github.com/luke-mckay/cr_ram_r_w_2c.git,2021-12-31 23:58:42+00:00,A simple parameterized RAM for things like an asynchronous FIFO.,0,luke-mckay/cr_ram_r_w_2c,443443277,Verilog,cr_ram_r_w_2c,2,0,2021-12-31 23:59:32+00:00,[],None
644,https://github.com/hanle1220/SoC_SPI_IP_Module.git,2021-12-31 05:35:48+00:00,Design of a SPI IP Core and Linux Device Drivers,0,hanle1220/SoC_SPI_IP_Module,443262835,Verilog,SoC_SPI_IP_Module,6,0,2022-03-31 17:07:13+00:00,[],None
645,https://github.com/LavanyaKarthikeyan/SystolicArrayAccelerator.git,2021-12-31 23:06:25+00:00,,0,LavanyaKarthikeyan/SystolicArrayAccelerator,443438379,Verilog,SystolicArrayAccelerator,1957,0,2021-12-31 23:24:07+00:00,[],None
646,https://github.com/gejingquan/AdapTimer.git,2022-01-03 03:43:55+00:00,Hardware/Software Collaborative Timer Resistant to Flush-Based Cache Attacks on ARM-FPGA Embedded SoC,0,gejingquan/AdapTimer,443932291,Verilog,AdapTimer,22,0,2023-05-13 04:24:25+00:00,[],None
647,https://github.com/a7mad-reda/EMG-Controlled-Prosthetic-Hand-.git,2022-02-01 01:18:51+00:00,,0,a7mad-reda/EMG-Controlled-Prosthetic-Hand-,454225311,Verilog,EMG-Controlled-Prosthetic-Hand-,2492,0,2022-02-01 01:21:40+00:00,[],None
648,https://github.com/agcarte4/Digital-Design.git,2022-01-24 04:10:45+00:00,Coursework from my digital design course.,0,agcarte4/Digital-Design,451311956,Verilog,Digital-Design,746,0,2022-01-24 04:16:12+00:00,[],None
649,https://github.com/b08902043/CA_homework.git,2022-01-27 08:25:26+00:00,,0,b08902043/CA_homework,452599132,Verilog,CA_homework,5083,0,2022-01-27 08:34:50+00:00,[],None
650,https://github.com/XiaotongLu/test.git,2022-01-25 02:28:36+00:00,,0,XiaotongLu/test,451707778,Verilog,test,2,0,2022-01-25 02:30:18+00:00,[],None
651,https://github.com/surajbidnur/MIPS_Processors.git,2022-01-25 11:38:48+00:00,"Verilog implementation of the MIPS single cycle, multi cycle and pipeline processor architectures",0,surajbidnur/MIPS_Processors,451853158,Verilog,MIPS_Processors,223,0,2022-01-28 04:43:59+00:00,[],https://api.github.com/licenses/mit
652,https://github.com/gehlotritul01/Parking_Slot_System.git,2022-02-02 17:54:15+00:00,,0,gehlotritul01/Parking_Slot_System,454879675,Verilog,Parking_Slot_System,14,0,2022-02-03 05:05:18+00:00,[],None
653,https://github.com/RiyaChordia/IEClab2_Riya_2021EEN2024.git,2022-02-01 11:22:02+00:00,,0,RiyaChordia/IEClab2_Riya_2021EEN2024,454359522,Verilog,IEClab2_Riya_2021EEN2024,787,0,2022-02-01 11:24:38+00:00,[],None
654,https://github.com/yanxwb/CPU.git,2022-01-04 14:03:51+00:00,,0,yanxwb/CPU,444440932,Verilog,CPU,122,0,2022-01-04 14:37:14+00:00,[],None
655,https://github.com/lwx270901/clock.git,2022-01-05 06:45:19+00:00,,0,lwx270901/clock,444693610,Verilog,clock,288,0,2022-01-05 06:45:55+00:00,[],None
656,https://github.com/IObundle/adpll.git,2022-01-07 17:25:13+00:00,,1,IObundle/adpll,445600085,Verilog,adpll,38269,0,2023-02-12 22:51:30+00:00,[],None
657,https://github.com/mbulucay/CSE-331-Computer-Organization-Course.git,2022-01-13 11:01:59+00:00,,0,mbulucay/CSE-331-Computer-Organization-Course,447566612,Verilog,CSE-331-Computer-Organization-Course,7825,0,2023-03-07 05:09:29+00:00,[],None
658,https://github.com/1-Harshit/CS220-computer-organization.git,2022-01-20 18:04:17+00:00,Assignment submissions of course CS220 in semester 2021-22-II at IIT Kanpur,0,1-Harshit/CS220-computer-organization,450205124,Verilog,CS220-computer-organization,28425,0,2022-07-05 04:44:00+00:00,[],https://api.github.com/licenses/unlicense
659,https://github.com/vijay0095/DSD-HDL.git,2022-01-28 08:20:06+00:00,,0,vijay0095/DSD-HDL,452990226,Verilog,DSD-HDL,425,0,2022-01-28 08:24:54+00:00,[],None
660,https://github.com/bartoszlomiej/ElGamal-Cipher-FPGA-implementation.git,2022-01-08 21:12:58+00:00,The main aim of this project is to create the hardware implemented version of ElGamal cipher for both encryption and decryption.,0,bartoszlomiej/ElGamal-Cipher-FPGA-implementation,445929378,Verilog,ElGamal-Cipher-FPGA-implementation,72,0,2022-01-19 22:46:57+00:00,[],https://api.github.com/licenses/gpl-3.0
661,https://github.com/wiszeto/lab-1.git,2022-01-09 20:50:51+00:00,,0,wiszeto/lab-1,446199844,Verilog,lab-1,63,0,2022-01-11 02:29:37+00:00,[],None
662,https://github.com/1y1c0c8/DDfinal-master.git,2022-01-11 10:51:27+00:00,,0,1y1c0c8/DDfinal-master,446782174,Verilog,DDfinal-master,3,0,2022-01-11 10:53:54+00:00,[],None
663,https://github.com/thecodeweaver/FPGA-Skunk-Works.git,2022-01-25 16:17:16+00:00,Projects to learn Verilog,0,thecodeweaver/FPGA-Skunk-Works,451950479,Verilog,FPGA-Skunk-Works,51,0,2022-09-02 04:16:41+00:00,[],None
664,https://github.com/elaynetron/2003-DSD.git,2022-01-25 19:30:15+00:00,,0,elaynetron/2003-DSD,452014455,Verilog,2003-DSD,12,0,2022-01-25 19:30:49+00:00,[],None
665,https://github.com/Featherweight-IP/fw-rv-comps.git,2022-01-12 00:58:54+00:00,Utility design blocks with ready/valid interfaces,0,Featherweight-IP/fw-rv-comps,447030470,Verilog,fw-rv-comps,7,0,2022-01-12 03:01:53+00:00,[],https://api.github.com/licenses/apache-2.0
666,https://github.com/CarlosChen1126/110-1_CA_final_project.git,2022-01-13 01:05:56+00:00,,0,CarlosChen1126/110-1_CA_final_project,447419659,Verilog,110-1_CA_final_project,1048,0,2023-10-25 17:05:00+00:00,[],None
667,https://github.com/Gayathri-Elan/UART_Verilog.git,2022-01-27 11:50:56+00:00,,0,Gayathri-Elan/UART_Verilog,452662327,Verilog,UART_Verilog,2,0,2023-08-26 06:25:00+00:00,[],None
668,https://github.com/Gabriel-Dolce/CompArchLab2.git,2022-01-27 17:08:19+00:00,,0,Gabriel-Dolce/CompArchLab2,452772179,Verilog,CompArchLab2,25,0,2022-01-27 17:11:32+00:00,[],None
669,https://github.com/AidanKealey/RISCie-Bros.git,2022-01-27 20:46:37+00:00,374 RISC processor design project,0,AidanKealey/RISCie-Bros,452838816,Verilog,RISCie-Bros,5068,0,2022-03-01 15:51:26+00:00,[],None
670,https://github.com/Einthan/Digital-integrated-circuit-design.git,2022-01-27 21:36:34+00:00,"This is the lab of Digital integrated circuit design at Texas A&M university, using Verilog and Cadence",0,Einthan/Digital-integrated-circuit-design,452852961,Verilog,Digital-integrated-circuit-design,5988,0,2022-01-27 22:23:32+00:00,[],None
671,https://github.com/zywbjj/test.git,2022-01-27 11:26:45+00:00,,0,zywbjj/test,452655053,Verilog,test,2,0,2022-01-27 11:29:02+00:00,[],None
672,https://github.com/xhulio11/CPU-Project-in-Verilog.git,2022-02-03 09:30:14+00:00,,0,xhulio11/CPU-Project-in-Verilog,455102901,Verilog,CPU-Project-in-Verilog,6,0,2022-02-03 09:32:48+00:00,[],None
673,https://github.com/mcbottcher/clock.git,2022-02-01 21:14:00+00:00,An digital alarm clock based on my Casio Watch,0,mcbottcher/clock,454553131,Verilog,clock,14,0,2022-02-02 19:33:47+00:00,[],None
674,https://github.com/yhs1202/DigitalLab_exp5.git,2022-02-04 02:53:21+00:00,"Implementation of Gray, BCD and Excess3 Code Converter with MUX",0,yhs1202/DigitalLab_exp5,455403006,Verilog,DigitalLab_exp5,2,0,2022-02-05 11:55:22+00:00,[],None
675,https://github.com/pranavprabhu01/Verilog_projects.git,2022-02-02 10:01:33+00:00,,0,pranavprabhu01/Verilog_projects,454721445,Verilog,Verilog_projects,5,0,2022-02-02 10:39:15+00:00,[],None
676,https://github.com/VELIDIPRADEEPKUMAR/BASIC-RISC_SPM-CPU-.git,2022-01-02 04:35:07+00:00,tHIS IS VERILOG DESCRIPTION OG BASIC RISC SPM MEACHINE ,0,VELIDIPRADEEPKUMAR/BASIC-RISC_SPM-CPU-,443681738,Verilog,BASIC-RISC_SPM-CPU-,166,0,2022-01-02 05:18:48+00:00,[],None
677,https://github.com/OzgurXtream/FB-CPU-RTL.git,2022-01-05 16:19:30+00:00,,0,OzgurXtream/FB-CPU-RTL,444870485,Verilog,FB-CPU-RTL,63,0,2022-01-06 14:10:22+00:00,[],None
678,https://github.com/lmeena081/Basic_systemverilog.git,2022-01-06 20:08:23+00:00,,0,lmeena081/Basic_systemverilog,445297001,Verilog,Basic_systemverilog,13504,0,2022-01-06 20:09:02+00:00,[],None
679,https://github.com/thathcmus/verilog_practice.git,2022-01-11 14:43:08+00:00,,0,thathcmus/verilog_practice,446859675,Verilog,verilog_practice,292,0,2022-01-11 14:50:37+00:00,[],None
680,https://github.com/dentionY/Analysis-and-Design-of-Advanced-Digital-Integrated-Circuits.git,2022-01-09 11:55:06+00:00,Analysis and Design of Advanced Digital Integrated Circuits in UCAS 2021,0,dentionY/Analysis-and-Design-of-Advanced-Digital-Integrated-Circuits,446074510,Verilog,Analysis-and-Design-of-Advanced-Digital-Integrated-Circuits,2950,0,2022-01-09 12:49:16+00:00,[],None
681,https://github.com/xiayuu/SingleCycleRiscv.git,2022-01-10 08:24:41+00:00,,0,xiayuu/SingleCycleRiscv,446337328,Verilog,SingleCycleRiscv,3,0,2022-01-10 08:27:23+00:00,[],None
682,https://github.com/abhisheknayak95/ECE695_SoC_Design_NN_Inference.git,2022-01-02 23:26:08+00:00,"In this project, we explored various architectural/system optimizations and designed a simple neural network accelerator to accelerate the inference on a database of 10000 images. The optimizations explored are HW Accelerators and Custom Instructions.",0,abhisheknayak95/ECE695_SoC_Design_NN_Inference,443891964,Verilog,ECE695_SoC_Design_NN_Inference,441914,0,2022-01-03 00:17:02+00:00,[],None
683,https://github.com/tngkhiem/vlsi_boundflasher.git,2022-01-03 23:15:22+00:00,,0,tngkhiem/vlsi_boundflasher,444225374,Verilog,vlsi_boundflasher,3,0,2022-01-03 23:20:22+00:00,[],None
684,https://github.com/pawlex/BeMicro_Max10_VGA.git,2022-01-08 22:06:27+00:00,HDL example of Ben Eaters simple VGA framebuffer,0,pawlex/BeMicro_Max10_VGA,445938781,Verilog,BeMicro_Max10_VGA,6896,0,2022-01-10 22:45:49+00:00,"['rtl', 'verilog', 'fpga', 'vga']",None
685,https://github.com/AESTheProgrammer/logic-circuits-project2021.git,2022-01-06 17:44:52+00:00,,0,AESTheProgrammer/logic-circuits-project2021,445259196,Verilog,logic-circuits-project2021,12,0,2023-05-26 16:12:48+00:00,[],None
686,https://github.com/melindakhosasih/Sensor-Controlling-Cart.git,2022-01-06 15:31:04+00:00,,1,melindakhosasih/Sensor-Controlling-Cart,445218765,Verilog,Sensor-Controlling-Cart,3827,0,2022-09-14 16:55:55+00:00,[],None
687,https://github.com/umitaltintas/computer-organization.git,2022-01-11 22:15:37+00:00,,0,umitaltintas/computer-organization,446997925,Verilog,computer-organization,728,0,2022-01-11 22:18:37+00:00,[],https://api.github.com/licenses/apache-2.0
688,https://github.com/TsuReX/fpga.git,2022-01-18 06:54:31+00:00,,0,TsuReX/fpga,449174087,Verilog,fpga,125,0,2022-05-31 14:28:36+00:00,[],None
689,https://github.com/dekad4n/verilog-labs-cs303.git,2022-01-18 19:06:19+00:00,,0,dekad4n/verilog-labs-cs303,449412842,Verilog,verilog-labs-cs303,1723,0,2022-01-30 19:20:22+00:00,[],None
690,https://github.com/markus-zzz/max9850-test.git,2022-01-23 09:27:50+00:00,,0,markus-zzz/max9850-test,451057440,Verilog,max9850-test,30,0,2022-01-23 09:29:10+00:00,[],None
691,https://github.com/DAMEK86/ultrasound-doppler-sw.git,2022-01-22 16:49:31+00:00,,0,DAMEK86/ultrasound-doppler-sw,450877465,Verilog,ultrasound-doppler-sw,18,0,2023-08-06 11:12:57+00:00,[],None
692,https://github.com/xanjohns/vtr-ccl.git,2022-01-14 19:26:29+00:00,Temporary workspace for files related to Verilog-to-Routing from BYU's Configurable Computing Lab,0,xanjohns/vtr-ccl,448083934,Verilog,vtr-ccl,30650,0,2023-05-08 19:50:33+00:00,[],None
693,https://github.com/PerugiaOverNetDAQ/daq_msd_dma_pg.git,2022-02-01 09:54:21+00:00,DE10-Nano gateware for the readout of the FOOT MSD detector,0,PerugiaOverNetDAQ/daq_msd_dma_pg,454334117,Verilog,daq_msd_dma_pg,5876,0,2023-04-28 12:58:14+00:00,[],None
694,https://github.com/pjm326/AdvancedMicrocontroller.git,2022-02-01 17:27:10+00:00,ECE 5760,0,pjm326/AdvancedMicrocontroller,454483060,Verilog,AdvancedMicrocontroller,3556,0,2022-02-01 17:55:36+00:00,[],None
695,https://github.com/morassi1973/test2.git,2022-01-24 23:37:26+00:00,,0,morassi1973/test2,451670365,Verilog,test2,1,0,2022-01-25 00:25:48+00:00,[],None
696,https://github.com/yevocama/crossbar.git,2022-01-20 10:42:01+00:00,,0,yevocama/crossbar,450055360,Verilog,crossbar,14,0,2022-01-20 15:22:28+00:00,[],None
697,https://github.com/elw1s/CSE331-ComputerOrganization.git,2022-01-19 16:01:32+00:00,,0,elw1s/CSE331-ComputerOrganization,449759794,Verilog,CSE331-ComputerOrganization,3114,0,2022-01-19 16:09:23+00:00,[],None
698,https://github.com/ChrisLangton/EE2026_FPGA_Project.git,2022-01-11 07:06:16+00:00,,0,ChrisLangton/EE2026_FPGA_Project,446713545,Verilog,EE2026_FPGA_Project,8427,0,2022-01-11 07:12:07+00:00,[],None
699,https://github.com/IAmPattycakes/verilog-learning.git,2022-01-05 17:33:29+00:00,,0,IAmPattycakes/verilog-learning,444893759,Verilog,verilog-learning,8,0,2022-01-13 21:55:50+00:00,[],None
700,https://github.com/jewelben/4-Bit-CLA-Adder.git,2022-01-02 20:50:36+00:00,VLSI Design course project @ IIIT Hyderabad,0,jewelben/4-Bit-CLA-Adder,443867168,Verilog,4-Bit-CLA-Adder,2499,0,2022-05-07 06:29:35+00:00,[],https://api.github.com/licenses/mit
701,https://github.com/niacoder/Verilog-Projects.git,2022-01-04 19:08:28+00:00,Repository for projects involving computer architecture and engineering which utilized Verilog,0,niacoder/Verilog-Projects,444534361,Verilog,Verilog-Projects,55,0,2022-01-09 19:46:44+00:00,[],None
702,https://github.com/supleed2/ELEC60011-DSD-CW.git,2022-01-25 16:49:38+00:00,Coursework for ELEC60011: Digital System Design - a Quartus project containing a NIOS II soft-core and custom instruction hardware accelerators for the target function,0,supleed2/ELEC60011-DSD-CW,451962264,Verilog,ELEC60011-DSD-CW,2128,0,2024-01-19 04:30:41+00:00,"['fpga', 'nios-ii', 'quartus-prime', 'systemverilog']",None
703,https://github.com/XinWang-LeoKing/ECE385-NEW-VERSION.git,2022-01-01 08:24:41+00:00,,0,XinWang-LeoKing/ECE385-NEW-VERSION,443499376,Verilog,ECE385-NEW-VERSION,127694,0,2023-01-28 04:18:50+00:00,[],None
704,https://github.com/lmsantana/my-lang-reference.git,2022-01-06 13:48:45+00:00,,0,lmsantana/my-lang-reference,445185212,Verilog,my-lang-reference,5,0,2022-01-11 12:51:39+00:00,[],None
705,https://github.com/vijayk10/Asynchronous-FIFO.git,2022-01-07 05:31:20+00:00,,0,vijayk10/Asynchronous-FIFO,445409333,Verilog,Asynchronous-FIFO,314,0,2022-01-07 05:33:05+00:00,[],None
706,https://github.com/danielpmarks/SD411_CPU.git,2022-01-07 16:07:46+00:00,"A SystemVerilog project for the SD 411 pipelined-CPU including caching, branch prediction, and data forwarding.",0,danielpmarks/SD411_CPU,445578210,Verilog,SD411_CPU,2602,0,2022-01-07 17:21:17+00:00,[],None
707,https://github.com/Archfx/YosysFlatten.git,2022-01-07 20:35:12+00:00,Flatten RTL hierarchy designs with Yosys,1,Archfx/YosysFlatten,445645885,Verilog,YosysFlatten,3350,0,2022-01-07 20:37:10+00:00,[],None
708,https://github.com/spi8as7/FourDigitLEDdriver.git,2022-01-11 00:15:20+00:00,,0,spi8as7/FourDigitLEDdriver,446623173,Verilog,FourDigitLEDdriver,310,0,2022-01-11 01:02:58+00:00,[],https://api.github.com/licenses/mit
709,https://github.com/2001-SamLiu/CS145_project.git,2022-01-17 08:03:41+00:00,"This is a MIPS-CPU written in verilog as the project of CS145, SJTU.",0,2001-SamLiu/CS145_project,448803543,Verilog,CS145_project,30,0,2022-01-17 08:47:29+00:00,[],None
710,https://github.com/BangGiangk63/AI_20211.git,2022-01-17 15:37:16+00:00,,0,BangGiangk63/AI_20211,448951068,Verilog,AI_20211,25015,0,2022-01-17 16:13:31+00:00,[],None
711,https://github.com/stoveoveoven/circuit-design-with-verilog.git,2022-01-14 05:43:16+00:00,Collection of lab files created over the course of a semester for my hardware course at UBC,0,stoveoveoven/circuit-design-with-verilog,447855656,Verilog,circuit-design-with-verilog,630,0,2022-01-14 19:46:22+00:00,[],None
712,https://github.com/ColkAssaignmentRepos/logical-circuit-r03-assignments.git,2022-01-12 01:27:01+00:00,茨城高専 令和3年度 3年 情報系 後期期末 論理回路Ⅱ の提出課題で使うリポジトリ,0,ColkAssaignmentRepos/logical-circuit-r03-assignments,447036532,Verilog,logical-circuit-r03-assignments,7,0,2022-01-12 01:37:40+00:00,[],None
713,https://github.com/mikecat/rv32c_hardware.git,2022-01-12 13:13:10+00:00,Hardware that can execute RV32C code.,0,mikecat/rv32c_hardware,447223480,Verilog,rv32c_hardware,998,0,2022-01-12 13:13:37+00:00,[],https://api.github.com/licenses/mit
714,https://github.com/haowu007/myProcessor.git,2022-01-14 22:56:41+00:00,,0,haowu007/myProcessor,448129283,Verilog,myProcessor,23,0,2022-01-14 22:58:29+00:00,[],None
715,https://github.com/IkhlasAmgad/Simple_Security_Password_Verilog.git,2022-01-14 22:36:43+00:00,A security system that provides coded access to a secured area is developed.,0,IkhlasAmgad/Simple_Security_Password_Verilog,448125597,Verilog,Simple_Security_Password_Verilog,30,0,2022-01-14 22:41:02+00:00,[],None
716,https://github.com/BobLouis/IC_context_practice.git,2022-01-18 03:54:22+00:00,,0,BobLouis/IC_context_practice,449132641,Verilog,IC_context_practice,211527,0,2023-04-21 10:37:05+00:00,[],None
717,https://github.com/ahmedehabb/Viterbi-Decoder.git,2022-01-01 15:54:54+00:00,,0,ahmedehabb/Viterbi-Decoder,443571330,Verilog,Viterbi-Decoder,19,0,2022-03-11 22:03:55+00:00,[],None
718,https://github.com/QHY1919810/ZJUI-BattleCity-ECE385-final.git,2022-01-06 04:32:17+00:00,"2 players Battle City Game with 10 stages and audio file as well as all the additional tools to convert the maps, image and audios into FPGA readable files. Use codes in IMG converter to process the images and use codes in Total_Audio_File.ipynb to convert audio into .ram file, load the .ram file audio into Flash Memory to play it.",1,QHY1919810/ZJUI-BattleCity-ECE385-final,445040654,Verilog,ZJUI-BattleCity-ECE385-final,71169,0,2022-01-06 16:10:08+00:00,[],None
719,https://github.com/eminakcy/engineer-desing.git,2022-01-06 11:19:50+00:00,,0,eminakcy/engineer-desing,445143123,Verilog,engineer-desing,3737,0,2022-01-06 17:07:27+00:00,[],None
720,https://github.com/tgourav/hw-verification-demo.git,2022-01-07 03:18:23+00:00,For hands-on session of ACM winter school 2022 ,0,tgourav/hw-verification-demo,445384011,Verilog,hw-verification-demo,3574,0,2022-01-07 06:38:53+00:00,[],None
721,https://github.com/jacobjwalters/cpu.git,2022-01-07 18:03:19+00:00,Multi-cycle stack machine CPU,0,jacobjwalters/cpu,445610297,Verilog,cpu,45,0,2022-01-07 18:08:52+00:00,[],None
722,https://github.com/Yonghao-Tan/img_fix.git,2022-01-21 07:45:37+00:00,img fix part,0,Yonghao-Tan/img_fix,450399485,Verilog,img_fix,43,0,2022-08-17 06:25:17+00:00,[],None
723,https://github.com/ZeyuJasonNiu/CIS571.git,2022-01-22 21:28:01+00:00,,0,ZeyuJasonNiu/CIS571,450939891,Verilog,CIS571,83,0,2022-02-11 03:00:44+00:00,[],None
724,https://github.com/PaymanBehnam/Design-with-Verilog.git,2022-01-26 03:53:03+00:00,,0,PaymanBehnam/Design-with-Verilog,452133173,Verilog,Design-with-Verilog,542,0,2022-01-26 03:55:38+00:00,[],None
725,https://github.com/tesl1mat3/SimpleCPU.git,2022-01-20 15:25:19+00:00,,0,tesl1mat3/SimpleCPU,450150721,Verilog,SimpleCPU,5,0,2022-01-21 08:38:25+00:00,[],None
726,https://github.com/sidhantp1906/UART.git,2022-01-23 16:12:50+00:00,UART implementation using Verilog HDL,0,sidhantp1906/UART,451158345,Verilog,UART,423,0,2022-01-23 16:20:37+00:00,"['uart-protocol', 'uart-verilog', 'verilog', 'xilinx-ise', 'xilinx-fpga', 'rtl']",https://api.github.com/licenses/mit
727,https://github.com/grifatron/Lab2CA.git,2022-01-27 15:48:10+00:00,,0,grifatron/Lab2CA,452744083,Verilog,Lab2CA,79,0,2022-01-27 16:24:57+00:00,[],None
728,https://github.com/Quin8989/Quadratic-Equation-Calculator.git,2021-12-31 03:09:44+00:00,,0,Quin8989/Quadratic-Equation-Calculator,443240161,Verilog,Quadratic-Equation-Calculator,382,0,2021-12-31 03:24:33+00:00,[],None
729,https://github.com/photonPrograms/CompArchLabs.git,2021-12-31 17:25:29+00:00,Verilog exercises for the course CS F342 Computer Architecture,0,photonPrograms/CompArchLabs,443395177,Verilog,CompArchLabs,8,0,2021-12-31 17:28:39+00:00,[],None
730,https://github.com/somhi/TEI0026.git,2022-01-24 23:15:50+00:00,# MAX10 Power Sequencer (Trenz TEI0026) ,3,somhi/TEI0026,451665740,Verilog,TEI0026,10541,0,2022-01-24 23:19:00+00:00,[],None
731,https://github.com/momoph46/ICC_91_0128.git,2022-01-25 12:05:09+00:00,,0,momoph46/ICC_91_0128,451861127,Verilog,ICC_91_0128,473,0,2022-01-25 12:12:31+00:00,[],None
732,https://github.com/Galactic-Outlaw/Digital-Logic-Blocks-using-Verilog.git,2022-02-01 13:09:43+00:00,Basic Digital Logic Blocks were implemented using Verilog. Use Readme file to understand file names.,0,Galactic-Outlaw/Digital-Logic-Blocks-using-Verilog,454391943,Verilog,Digital-Logic-Blocks-using-Verilog,11,0,2022-02-01 13:22:17+00:00,[],None
733,https://github.com/anhtu0310/RISC-V-Pipeline-Verilog.git,2022-02-02 10:17:13+00:00,,0,anhtu0310/RISC-V-Pipeline-Verilog,454726344,Verilog,RISC-V-Pipeline-Verilog,16,0,2022-02-02 10:20:20+00:00,[],None
734,https://github.com/veeYceeY/HDMI.git,2022-02-03 18:29:21+00:00,Hdmi using oserdes,0,veeYceeY/HDMI,455281929,Verilog,HDMI,17,0,2022-02-05 12:58:35+00:00,[],https://api.github.com/licenses/gpl-3.0
735,https://github.com/BondMachineHQ/bondmachine_zedboard_buildroot_example.git,2022-02-04 21:49:07+00:00,Buildroot on Zedboard. How to create from scratch a complete BondMachine accelerated buildroot image for the Zedboard,0,BondMachineHQ/bondmachine_zedboard_buildroot_example,455706578,Verilog,bondmachine_zedboard_buildroot_example,3766,0,2022-09-23 11:05:42+00:00,"['bondmachine', 'buildroot', 'fpga', 'howto', 'zedboard']",https://api.github.com/licenses/apache-2.0
736,https://github.com/MaxyZhu75/Elevator-Operation.git,2022-01-03 04:06:26+00:00,"An elevator operation to be simulated in Verilog. There are 4 floors between which the elevator can move and there are buttons on each floor, all external to the elevator.",0,MaxyZhu75/Elevator-Operation,443936112,Verilog,Elevator-Operation,10108,0,2022-01-10 02:18:59+00:00,[],None
737,https://github.com/chieh0613/NCTU-Computer-Organization.git,2022-01-26 01:23:08+00:00,,0,chieh0613/NCTU-Computer-Organization,452100249,Verilog,NCTU-Computer-Organization,13913,0,2022-01-26 01:24:48+00:00,[],None
738,https://github.com/Zeroth-Gate/DL-Project.git,2022-01-31 00:15:50+00:00,,5,Zeroth-Gate/DL-Project,453836474,Verilog,DL-Project,870,0,2022-02-24 17:39:01+00:00,[],None
739,https://github.com/Arysoltani/Hardware-Function-Generator.git,2022-01-31 09:57:33+00:00,"The third project of Digital Logic Design Lab course in University of Tehran which is an implementation of a function generator with Quartus, Verilog HDL, and Modelsim. It has the capability of generating 8 different functions with different frequencies.",0,Arysoltani/Hardware-Function-Generator,453953258,Verilog,Hardware-Function-Generator,7125,0,2022-01-31 10:02:00+00:00,[],None
740,https://github.com/benyu10/Mini-CPU.git,2022-01-04 16:27:01+00:00,,0,benyu10/Mini-CPU,444488457,Verilog,Mini-CPU,1692,0,2022-01-04 16:30:59+00:00,[],None
741,https://github.com/alexmeirels/snopping-architecture.git,2022-01-23 05:14:58+00:00,College work to reproduce the MESI protocol state machine,0,alexmeirels/snopping-architecture,451010819,Verilog,snopping-architecture,315,0,2022-02-25 03:32:49+00:00,[],None
742,https://github.com/tarush-s/FPGA_MAX10.git,2022-01-26 17:20:31+00:00,Verilog codes for MAX10 family of devices ,0,tarush-s/FPGA_MAX10,452370318,Verilog,FPGA_MAX10,3,0,2022-01-26 17:22:00+00:00,[],None
743,https://github.com/sam9939/vivo.git,2022-01-28 10:32:13+00:00,,0,sam9939/vivo,453027006,Verilog,vivo,5,0,2022-01-29 20:01:32+00:00,[],None
744,https://github.com/Zach-Bravo/Comp-Arch-Lab-1.git,2022-01-26 22:15:28+00:00,Comp-Arch Labs,0,Zach-Bravo/Comp-Arch-Lab-1,452458438,Verilog,Comp-Arch-Lab-1,3,0,2022-02-11 03:13:39+00:00,[],None
745,https://github.com/aokurr/32-Bit-ALU.git,2022-01-22 23:25:36+00:00,,0,aokurr/32-Bit-ALU,450959760,Verilog,32-Bit-ALU,1286,0,2022-01-22 23:33:39+00:00,[],https://api.github.com/licenses/mit
746,https://github.com/jason-designer/Platinum.git,2022-02-02 08:41:18+00:00,A CPU designed by myself using Chisel ,0,jason-designer/Platinum,454698810,Verilog,Platinum,12,0,2022-02-07 07:29:31+00:00,[],
747,https://github.com/Ronan-Harkins/Lab2_COMP_ARCH.git,2022-02-01 22:45:48+00:00,,0,Ronan-Harkins/Lab2_COMP_ARCH,454575851,Verilog,Lab2_COMP_ARCH,2,0,2022-02-01 22:47:47+00:00,[],None
748,https://github.com/jnngu/fpga-pedal.git,2022-01-31 18:28:18+00:00,,0,jnngu/fpga-pedal,454122618,Verilog,fpga-pedal,12239,0,2022-02-13 16:53:19+00:00,[],None
749,https://github.com/Sara-Rezaeimanesh/Recursive-Functions-Hardware.git,2022-02-02 10:52:09+00:00,Hardware implemented recursive function with two inputs and an output using stack. ,0,Sara-Rezaeimanesh/Recursive-Functions-Hardware,454737019,Verilog,Recursive-Functions-Hardware,996,0,2022-12-13 07:39:33+00:00,[],None
750,https://github.com/alessiocicero/RISCV-LBIST.git,2022-02-03 21:47:02+00:00,,0,alessiocicero/RISCV-LBIST,455339393,Verilog,RISCV-LBIST,24209,0,2022-02-03 22:09:16+00:00,[],None
751,https://github.com/Gabriel-Dolce/CompArchLab3.git,2022-02-03 16:44:57+00:00,,0,Gabriel-Dolce/CompArchLab3,455247144,Verilog,CompArchLab3,34,0,2022-02-03 16:45:42+00:00,[],None
752,https://github.com/neel-singhania/CS220.git,2022-01-24 09:06:18+00:00,,0,neel-singhania/CS220,451390194,Verilog,CS220,3867,0,2022-01-31 16:20:58+00:00,[],None
753,https://github.com/Galactic-Outlaw/Tetris-in-verilog-simulation.git,2022-01-29 11:04:48+00:00,Tetris is a retro game where the objective for the player is to move blocks of different shapes to form as many lines as possible which then gets cleared. If the player arranges the block in such a way that the blocks touch the roof the game the game is over. Tetris was one of my favourite games as a toddler and recreating it using verilog sparked interest within me.,0,Galactic-Outlaw/Tetris-in-verilog-simulation,453373211,Verilog,Tetris-in-verilog-simulation,515,0,2022-01-29 11:07:32+00:00,[],None
754,https://github.com/nicholassaylor/VerilogProjects.git,2022-01-31 20:30:20+00:00,,0,nicholassaylor/VerilogProjects,454159950,Verilog,VerilogProjects,10256,0,2022-01-31 21:46:23+00:00,[],None
755,https://github.com/crazybolillo/verilog-circuits.git,2022-01-31 20:29:20+00:00,Bunch of circuits described in Verilog I have/had to do for school,0,crazybolillo/verilog-circuits,454159683,Verilog,verilog-circuits,127,0,2022-02-01 01:47:00+00:00,[],https://api.github.com/licenses/gpl-3.0
756,https://github.com/patrikcelko/Simon-says.git,2022-01-31 22:39:59+00:00,Simple Simon game in Verilog,0,patrikcelko/Simon-says,454193373,Verilog,Simon-says,13725,0,2022-04-05 23:09:35+00:00,"['verilog-hdl', 'verilog', 'simon-game']",None
757,https://github.com/gavin-lewis/Function-Generator-Nexys-3.git,2022-01-15 04:54:01+00:00,Function generator code for Xilinx Nexys 3 FPGA Kit,0,gavin-lewis/Function-Generator-Nexys-3,448184187,Verilog,Function-Generator-Nexys-3,10,0,2022-01-15 04:55:10+00:00,[],None
758,https://github.com/laurapellizari/MIPS.git,2022-01-19 17:00:27+00:00,CPUs based on MIPS and RISC architecture implemented on FPGA,0,laurapellizari/MIPS,449780902,Verilog,MIPS,3665,0,2022-02-07 13:19:30+00:00,[],None
759,https://github.com/Kruayd/Digital_clock.git,2022-01-21 22:51:10+00:00,A DCF77 based  digital clock made with Cyclone II FPGA 2C35 chip,0,Kruayd/Digital_clock,450662107,Verilog,Digital_clock,1060,0,2022-01-21 23:08:46+00:00,[],None
760,https://github.com/I-am-VarunM/ConvolutionNeuralNetworkusingVerilog.git,2022-01-22 05:58:55+00:00,,0,I-am-VarunM/ConvolutionNeuralNetworkusingVerilog,450731341,Verilog,ConvolutionNeuralNetworkusingVerilog,4,0,2022-01-22 05:59:42+00:00,[],None
761,https://github.com/Danil1997Dev/Lab2new.git,2022-01-15 14:08:53+00:00,,0,Danil1997Dev/Lab2new,448295242,Verilog,Lab2new,49903,0,2022-01-16 16:47:19+00:00,[],None
762,https://github.com/stevenphan01/Pied-Piper.git,2022-01-15 15:09:14+00:00,RISC-V Pipelined CPU,0,stevenphan01/Pied-Piper,448310320,Verilog,Pied-Piper,49849,0,2022-01-15 15:12:56+00:00,[],https://api.github.com/licenses/mit
763,https://github.com/sandeepb20/CS220-Assignments.git,2022-01-18 05:50:08+00:00,,1,sandeepb20/CS220-Assignments,449157427,Verilog,CS220-Assignments,1237,0,2022-05-05 14:07:11+00:00,[],None
764,https://github.com/tamasjit/full-addar.git,2022-01-17 17:59:03+00:00,,0,tamasjit/full-addar,448996617,Verilog,full-addar,18,0,2022-01-17 18:12:35+00:00,[],None
765,https://github.com/moreElectronicProjects/Parallel_to_UART_Verilog.git,2022-01-19 02:34:21+00:00,,0,moreElectronicProjects/Parallel_to_UART_Verilog,449521261,Verilog,Parallel_to_UART_Verilog,19,0,2022-01-19 02:54:13+00:00,[],https://api.github.com/licenses/lgpl-3.0
766,https://github.com/MShrimp4/ISE_PROJECTS.git,2022-01-20 09:48:04+00:00,,0,MShrimp4/ISE_PROJECTS,450038295,Verilog,ISE_PROJECTS,3154,0,2022-01-20 09:58:47+00:00,[],None
767,https://github.com/yhs1202/DigitalLab_exp6.git,2022-02-04 02:54:13+00:00,Measurement of Gate Delay,0,yhs1202/DigitalLab_exp6,455403176,Verilog,DigitalLab_exp6,0,0,2022-02-05 11:55:47+00:00,[],None
768,https://github.com/thathcmus/verilog_code.git,2022-01-06 12:26:07+00:00,VERILOG FINAL EXAM CODE,0,thathcmus/verilog_code,445161295,Verilog,verilog_code,3,0,2022-01-08 04:31:09+00:00,[],None
769,https://github.com/nuretanjim/Smart-Watch.git,2022-01-10 03:32:14+00:00,,0,nuretanjim/Smart-Watch,446269319,Verilog,Smart-Watch,2,0,2022-01-10 04:34:05+00:00,[],None
770,https://github.com/Akshay-Kaushik/4-bit-ALU.git,2022-01-11 19:08:17+00:00,,0,Akshay-Kaushik/4-bit-ALU,446948649,Verilog,4-bit-ALU,204,0,2022-01-11 19:23:32+00:00,[],None
771,https://github.com/anishmk1/WISC-SP13.git,2022-01-10 15:09:22+00:00,Pipelined RISC Processor,0,anishmk1/WISC-SP13,446471184,Verilog,WISC-SP13,1481,0,2022-01-10 15:36:09+00:00,[],None
772,https://github.com/Void-Brain70/verilog-code.git,2022-01-13 02:23:03+00:00,,0,Void-Brain70/verilog-code,447435999,Verilog,verilog-code,1752,0,2023-01-01 09:05:28+00:00,[],None
773,https://github.com/joaopbicalho/CodingInVerilogHDL.git,2022-01-11 20:26:07+00:00,,0,joaopbicalho/CodingInVerilogHDL,446970449,Verilog,CodingInVerilogHDL,42,0,2022-01-12 17:11:09+00:00,[],https://api.github.com/licenses/mit
774,https://github.com/MrMsM1/Recognition-of-numbers-sequence.git,2022-01-14 12:34:56+00:00,,0,MrMsM1/Recognition-of-numbers-sequence,447961823,Verilog,Recognition-of-numbers-sequence,1,0,2022-01-14 12:35:27+00:00,[],https://api.github.com/licenses/mit
775,https://github.com/UA1ZDC/UHD-Owl.git,2022-01-14 13:26:19+00:00,Ettus UHD USRP driver with added support for home-made SDR,0,UA1ZDC/UHD-Owl,447976230,Verilog,UHD-Owl,34500,0,2023-10-31 14:37:26+00:00,[],https://api.github.com/licenses/mit
776,https://github.com/yhs1202/DigitalLab_exp4.git,2022-02-04 02:09:00+00:00,"Implementation of 4-bit Adder, Subtractor",0,yhs1202/DigitalLab_exp4,455394634,Verilog,DigitalLab_exp4,1,0,2022-02-04 02:10:11+00:00,[],None
777,https://github.com/bespoke-silicon-group/bsg_pearls.git,2022-02-04 19:09:07+00:00,Open source IP blocks for SoCs and testing collateral. Often consists of compound instantiations of BaseJump STL or other blocks.,1,bespoke-silicon-group/bsg_pearls,455666203,Verilog,bsg_pearls,47,0,2023-02-17 04:48:28+00:00,[],https://api.github.com/licenses/bsd-3-clause
778,https://github.com/Plechu/polsl-amsuc-microproject.git,2022-01-05 07:10:54+00:00,Projekt realizowany na Politechnice Śląskiej,0,Plechu/polsl-amsuc-microproject,444700754,Verilog,polsl-amsuc-microproject,7,0,2022-01-05 07:27:50+00:00,[],None
779,https://github.com/kishanp88/MIPS.git,2022-01-04 05:02:35+00:00,,1,kishanp88/MIPS,444291575,Verilog,MIPS,2002,0,2022-02-19 12:14:04+00:00,[],None
780,https://github.com/mdumas2/Arquitetura-MIPS.git,2022-01-10 12:03:16+00:00,,0,mdumas2/Arquitetura-MIPS,446405852,Verilog,Arquitetura-MIPS,643,0,2022-01-10 13:20:21+00:00,[],None
781,https://github.com/AlejandroAMarin/MIRI-processor.git,2022-01-02 11:49:26+00:00,risc V processor in systemverilog,0,AlejandroAMarin/MIRI-processor,443752765,Verilog,MIRI-processor,5982,0,2022-12-14 19:20:42+00:00,[],None
782,https://github.com/erdogankilinc/fb-cpu.git,2022-01-06 11:20:12+00:00,Fenerbahçe Üniversitesi Bilgisayar Mühendisliği COMP-201 Projesi,0,erdogankilinc/fb-cpu,445143243,Verilog,fb-cpu,8,0,2022-01-06 11:53:41+00:00,[],None
783,https://github.com/cuitsj/neck_check.git,2022-01-06 06:45:17+00:00,软件：Quartus2 13.1，语言：Verilog。,0,cuitsj/neck_check,445069583,Verilog,neck_check,20,0,2022-01-06 06:47:18+00:00,[],None
784,https://github.com/dmonkman/32-Bit-Verilog-CPU.git,2022-01-03 07:54:16+00:00,A simple 32 bit CPU designed in Verilog. Runs machine code properly for a short list of instructions. No assembler included!,0,dmonkman/32-Bit-Verilog-CPU,443981463,Verilog,32-Bit-Verilog-CPU,411,0,2022-01-03 07:54:21+00:00,[],None
785,https://github.com/klosvo/274-lab5.git,2022-01-04 02:06:10+00:00,,0,klosvo/274-lab5,444256422,Verilog,274-lab5,83,0,2022-01-04 02:07:12+00:00,[],None
786,https://github.com/locnguyenthanh2001/Logic-Design-Mini-Project.git,2022-01-05 03:20:36+00:00,"Binary search alogrithms project on FPGA, Logic Design course, HCM University of Technology, K19, 2020",0,locnguyenthanh2001/Logic-Design-Mini-Project,444648210,Verilog,Logic-Design-Mini-Project,1145,0,2022-01-05 03:25:37+00:00,[],None
787,https://github.com/CSIE523/verilog-Final-Project.git,2022-01-04 16:47:22+00:00,,0,CSIE523/verilog-Final-Project,444494889,Verilog,verilog-Final-Project,4,0,2022-01-05 16:14:17+00:00,[],None
788,https://github.com/zanXQ/verilog_design.git,2022-01-05 05:45:22+00:00,My simple design for school,1,zanXQ/verilog_design,444679163,Verilog,verilog_design,241,0,2022-01-05 06:17:44+00:00,[],None
789,https://github.com/AugmentiuM/HW_Accelerator.git,2022-01-05 05:54:05+00:00,Design and Implementation of a Hardware Accelerator for Deep Learning applications.,0,AugmentiuM/HW_Accelerator,444681087,Verilog,HW_Accelerator,729,0,2022-02-10 04:11:40+00:00,[],None
790,https://github.com/soy567/Zybo_Z7-20.git,2022-01-02 09:08:58+00:00,Zybo Z7-20 보드 이용한 Verilog 예제 프로젝트 모음,0,soy567/Zybo_Z7-20,443723584,Verilog,Zybo_Z7-20,74334,0,2022-01-02 10:01:04+00:00,[],None
791,https://github.com/abctiger0325/SKL_ZED_Backup.git,2022-01-05 08:15:21+00:00,,0,abctiger0325/SKL_ZED_Backup,444719577,Verilog,SKL_ZED_Backup,329,0,2022-06-14 10:04:43+00:00,[],None
792,https://github.com/KrishnaGopalBajpai/Practice_verilog_new-rep.git,2022-01-04 14:21:58+00:00,,0,KrishnaGopalBajpai/Practice_verilog_new-rep,444447029,Verilog,Practice_verilog_new-rep,55,0,2022-01-10 14:22:48+00:00,[],None
793,https://github.com/TuPM172885/KTMT.git,2022-01-04 08:33:34+00:00,,0,TuPM172885/KTMT,444343072,Verilog,KTMT,12,0,2022-01-04 08:41:07+00:00,[],None
794,https://github.com/Wozii/ECE253F-.git,2022-01-03 19:31:57+00:00,,0,Wozii/ECE253F-,444177363,Verilog,ECE253F-,3061,0,2022-01-03 19:34:13+00:00,[],None
795,https://github.com/ShuvamBose/4-Bit-UP-DOWN-counters-Icarus-Verilog_Project.git,2022-01-08 04:52:46+00:00,This program is used to demonstrate the fashion in which 4Bit UP & DOWN counters function.,0,ShuvamBose/4-Bit-UP-DOWN-counters-Icarus-Verilog_Project,445727036,Verilog,4-Bit-UP-DOWN-counters-Icarus-Verilog_Project,466,0,2023-02-18 05:42:01+00:00,[],https://api.github.com/licenses/mit
796,https://github.com/FPGA-InsideOut/FPGA_InsideOut_Session1.git,2022-01-24 20:38:44+00:00,"Implementation of 1bit and 2bit CRC circuits on FPGA - hands-on session complementary to ""FPGA InsideOut Session1"" video.",0,FPGA-InsideOut/FPGA_InsideOut_Session1,451625335,Verilog,FPGA_InsideOut_Session1,3,0,2022-01-24 20:51:32+00:00,[],https://api.github.com/licenses/mit
797,https://github.com/CSIE523/IC-Contest-2022.git,2022-01-19 08:26:19+00:00,,0,CSIE523/IC-Contest-2022,449607340,Verilog,IC-Contest-2022,744,0,2022-01-19 08:30:52+00:00,[],None
798,https://github.com/Hcque/fpgaEECS151.git,2022-01-25 07:35:11+00:00,eecs151,0,Hcque/fpgaEECS151,451779665,Verilog,fpgaEECS151,14744,0,2022-02-04 02:24:15+00:00,[],None
799,https://github.com/ShichenQiao/ECE552_WISC-SP22_RISC_Processor.git,2022-01-26 21:33:35+00:00,UW-Madison ECE 552 class project by Shichen (Justin) Qiao and Xin (Cassie) Su,1,ShichenQiao/ECE552_WISC-SP22_RISC_Processor,452448029,Verilog,ECE552_WISC-SP22_RISC_Processor,33421,0,2023-01-27 23:23:56+00:00,[],None
800,https://github.com/Crazy2code15/The-Approximate-Median-Filter.git,2022-01-22 06:57:34+00:00,,0,Crazy2code15/The-Approximate-Median-Filter,450742087,Verilog,The-Approximate-Median-Filter,961,0,2022-01-22 07:00:24+00:00,[],None
801,https://github.com/mbirthelmer/f8_emu.git,2022-01-12 03:38:30+00:00,FPGA based F8 emulator/analyzer,0,mbirthelmer/f8_emu,447065770,Verilog,f8_emu,32,0,2022-01-17 20:41:02+00:00,[],None
802,https://github.com/euphgh/CPU_27.git,2022-01-29 01:11:32+00:00,,0,euphgh/CPU_27,453263812,Verilog,CPU_27,1823,0,2022-01-29 01:13:53+00:00,[],None
803,https://github.com/yhs1202/DigitalLab_exp2.git,2022-02-04 01:52:48+00:00,Basic Verilog Experience,0,yhs1202/DigitalLab_exp2,455391569,Verilog,DigitalLab_exp2,1,0,2022-02-04 01:52:54+00:00,[],None
804,https://github.com/karuneshs21/TMB-FW.git,2022-02-01 01:35:55+00:00,,0,karuneshs21/TMB-FW,454228449,Verilog,TMB-FW,1369,0,2022-02-01 01:39:33+00:00,[],None
805,https://github.com/Aniruddha-cmd/Router-1x3-RTL-design.git,2022-02-03 15:05:06+00:00,"Router 1x3 – RTL design-The router accepts data packets on a single 8-bit port and routes them to one of the three output channels, channel0, channel1 and channel2.",0,Aniruddha-cmd/Router-1x3-RTL-design,455210247,Verilog,Router-1x3-RTL-design,22,0,2022-02-03 15:08:22+00:00,[],https://api.github.com/licenses/gpl-3.0
806,https://github.com/fahadmuslim/Low-power-ASIC-designs-based-on-CPF.git,2022-01-28 08:55:58+00:00,This repository contains part of our work done to infer power intent at a higher level of abstraction i.e. at the system-level. The designs span from simpler basic computing blocks to more practical HW acclerators.,0,fahadmuslim/Low-power-ASIC-designs-based-on-CPF,452999763,Verilog,Low-power-ASIC-designs-based-on-CPF,13449,0,2023-08-20 10:12:36+00:00,[],None
807,https://github.com/tspython/COEN21-COURSE-WORK.git,2022-02-04 06:56:12+00:00,,0,tspython/COEN21-COURSE-WORK,455450909,Verilog,COEN21-COURSE-WORK,13672,0,2022-04-16 21:57:49+00:00,[],None
808,https://github.com/AlishaMomin/Snake-Game-Digital-Logic-and-Design.git,2022-01-22 19:27:16+00:00,,0,AlishaMomin/Snake-Game-Digital-Logic-and-Design,450915285,Verilog,Snake-Game-Digital-Logic-and-Design,16,0,2022-01-22 19:38:18+00:00,[],https://api.github.com/licenses/mit
809,https://github.com/momoph46/icc.git,2022-01-22 17:48:32+00:00,,0,momoph46/icc,450892341,Verilog,icc,4831,0,2022-01-23 07:16:14+00:00,[],None
810,https://github.com/Jam-11/Comp-Arch-Lab2.git,2022-01-27 22:21:24+00:00,,0,Jam-11/Comp-Arch-Lab2,452863979,Verilog,Comp-Arch-Lab2,4,0,2022-01-27 22:22:47+00:00,[],None
811,https://github.com/Mkononiuk/Lab-2-Comparch.git,2022-02-01 22:31:17+00:00,Lab 2 for Computer Architecture at Rowan University. ,0,Mkononiuk/Lab-2-Comparch,454572641,Verilog,Lab-2-Comparch,3,0,2022-02-01 22:34:38+00:00,[],None
812,https://github.com/dpenebac/ece337.git,2022-01-11 20:00:40+00:00,,0,dpenebac/ece337,446963707,Verilog,ece337,5033,0,2023-11-16 19:55:31+00:00,[],None
813,https://github.com/EduardoJ123/Aquiles-RV32I.git,2022-01-06 18:52:23+00:00,32-bit RiscV Microprocessor,0,EduardoJ123/Aquiles-RV32I,445277792,Verilog,Aquiles-RV32I,3,0,2024-04-08 02:24:08+00:00,[],None
814,https://github.com/karthik-r-rao/neural-net-chisel.git,2022-01-17 08:40:22+00:00,Implementation of a Neural Network in Chisel.,0,karthik-r-rao/neural-net-chisel,448814540,Verilog,neural-net-chisel,175,0,2023-11-04 15:00:00+00:00,"['chisel3', 'neural-network']",https://api.github.com/licenses/apache-2.0
815,https://github.com/TharukaN17/Processor_Design.git,2022-01-15 06:46:35+00:00,A simple processor for image down-scaling.,0,TharukaN17/Processor_Design,448203026,Verilog,Processor_Design,9073,0,2023-01-27 23:16:38+00:00,[],None
816,https://github.com/tngkhiem/fpga_volleyball_scoreboard.git,2022-01-03 23:24:36+00:00,,0,tngkhiem/fpga_volleyball_scoreboard,444226924,Verilog,fpga_volleyball_scoreboard,3,0,2022-01-03 23:26:09+00:00,[],None
817,https://github.com/MundaneImmortal/ECE385_Final_BOXHEAD3.git,2022-01-05 09:00:44+00:00,This is our ECE385 Final Project (Fall 2022) based on FPGA (DE2-115 development board),0,MundaneImmortal/ECE385_Final_BOXHEAD3,444733289,Verilog,ECE385_Final_BOXHEAD3,115891,0,2022-01-16 13:42:06+00:00,[],None
818,https://github.com/abhishek-pwr/verilog.git,2022-01-10 07:26:19+00:00,This repository contains different logic circuits implemented in Verilog HDL.,0,abhishek-pwr/verilog,446320898,Verilog,verilog,376,0,2022-01-20 07:15:20+00:00,[],None
819,https://github.com/luke-mckay/cr_gray2bin.git,2022-01-01 00:14:02+00:00,Gray Code to Binary Conversion,0,luke-mckay/cr_gray2bin,443444838,Verilog,cr_gray2bin,5,0,2022-01-10 03:18:59+00:00,[],None
820,https://github.com/M10TrungPhan/CPU-RISC-V-One-cycle.git,2022-01-01 03:53:07+00:00,,0,M10TrungPhan/CPU-RISC-V-One-cycle,443466655,Verilog,CPU-RISC-V-One-cycle,4603,0,2023-02-14 08:06:31+00:00,[],None
821,https://github.com/harrisonpham/randsack_b1.git,2022-01-01 00:46:32+00:00,ASIC true random number generator in SKY130 - Rev B1,0,harrisonpham/randsack_b1,443447977,Verilog,randsack_b1,130206,0,2023-01-19 05:57:34+00:00,[],https://api.github.com/licenses/apache-2.0
822,https://github.com/gaurav-rk9/LightWeightDES-decryption.git,2022-01-16 15:19:00+00:00,,0,gaurav-rk9/LightWeightDES-decryption,448591398,Verilog,LightWeightDES-decryption,44,0,2022-01-16 15:20:13+00:00,[],None
823,https://github.com/Aidan-Walsh/Microprocessor.git,2022-01-16 01:30:49+00:00,16 bit instruction Microprocessor that is Turing Complete. It is programmable with the LC3 instruction set and serves up to 15 unique opcodes (instructions). The vmh file is an instruction set that the processor can receive.  ,0,Aidan-Walsh/Microprocessor,448431233,Verilog,Microprocessor,53,0,2022-01-16 01:42:56+00:00,[],None
824,https://github.com/RanjeetSingh3/Verilog-HDL.git,2022-01-18 18:09:53+00:00,,0,RanjeetSingh3/Verilog-HDL,449395170,Verilog,Verilog-HDL,16,0,2022-01-18 18:19:54+00:00,[],None
825,https://github.com/42flyingfish/verilog_practice.git,2022-01-02 10:36:33+00:00,This is a series of mini examples,0,42flyingfish/verilog_practice,443738896,Verilog,verilog_practice,3,0,2022-01-02 10:41:59+00:00,[],None
826,https://github.com/1nkfish/-.git,2022-01-03 08:38:07+00:00,,0,1nkfish/-,443992123,Verilog,-,11,0,2022-01-03 08:53:41+00:00,[],None
827,https://github.com/Russ44-creator/pipeline-cpu.git,2022-01-04 14:22:11+00:00,,0,Russ44-creator/pipeline-cpu,444447111,Verilog,pipeline-cpu,15,0,2022-01-04 14:22:57+00:00,[],None
828,https://github.com/AlfredYoung/MIPS_PipeLine_CPU.git,2022-01-04 15:16:42+00:00,,0,AlfredYoung/MIPS_PipeLine_CPU,444465810,Verilog,MIPS_PipeLine_CPU,32,0,2022-01-04 15:19:13+00:00,[],https://api.github.com/licenses/mit
829,https://github.com/zenith18s/RISCV.git,2022-01-04 04:31:10+00:00,,0,zenith18s/RISCV,444285486,Verilog,RISCV,10,0,2022-01-17 14:44:00+00:00,[],None
830,https://github.com/Abhinav15Agarwal/Moore_FSM.git,2021-12-31 05:41:36+00:00,,0,Abhinav15Agarwal/Moore_FSM,443263921,Verilog,Moore_FSM,0,0,2021-12-31 05:41:40+00:00,[],None
831,https://github.com/Nyaguthii-ai/SystemVerilog.git,2022-01-06 11:39:45+00:00,,0,Nyaguthii-ai/SystemVerilog,445148650,Verilog,SystemVerilog,567,0,2022-02-04 12:56:25+00:00,[],https://api.github.com/licenses/cc0-1.0
832,https://github.com/linjw16/fractcam.git,2022-01-08 10:52:17+00:00,Frac TCAM for MAToC,0,linjw16/fractcam,445793272,Verilog,fractcam,150,0,2022-09-22 01:44:04+00:00,[],None
833,https://github.com/HateHanzo/crc.git,2022-01-08 09:59:22+00:00,,0,HateHanzo/crc,445782640,Verilog,crc,4372,0,2022-05-12 12:54:53+00:00,[],None
834,https://github.com/jass-jass/IMU_OBC.git,2022-01-08 08:05:03+00:00,interfacing of IMU sensor with FPGA,0,jass-jass/IMU_OBC,445760650,Verilog,IMU_OBC,22038,0,2023-03-19 05:05:20+00:00,[],None
835,https://github.com/khyamling/test_cfu.git,2022-01-11 12:29:16+00:00,,0,khyamling/test_cfu,446812574,Verilog,test_cfu,2712,0,2022-01-11 12:31:50+00:00,[],None
836,https://github.com/atabeyaydi/Intel-Verilog-HDL-Basics.git,2022-01-13 19:50:43+00:00,This instructor-led class is taught in a virtual classroom over 2 half days of instruction. You will use a remote computer connected through webex for labs. No setup is needed. The remote computer connection does require that you are logged in using a computer running Windows.,0,atabeyaydi/Intel-Verilog-HDL-Basics,447732637,Verilog,Intel-Verilog-HDL-Basics,5403,0,2022-03-16 19:29:46+00:00,[],None
837,https://github.com/YashNGanji/Verilog_HDL.git,2022-01-14 06:37:07+00:00,,0,YashNGanji/Verilog_HDL,447867090,Verilog,Verilog_HDL,105,0,2022-01-15 13:24:18+00:00,[],None
838,https://github.com/waleed-007-star/RISC_V.git,2022-01-12 18:03:26+00:00,,0,waleed-007-star/RISC_V,447320484,Verilog,RISC_V,11,0,2022-01-12 18:06:06+00:00,[],None
839,https://github.com/Chi-you/minrv32_C.git,2022-01-13 12:32:43+00:00,,0,Chi-you/minrv32_C,447592384,Verilog,minrv32_C,151,0,2022-01-22 04:44:45+00:00,[],https://api.github.com/licenses/mit
840,https://github.com/ngpham17/Image-Processing.git,2022-01-25 00:21:35+00:00,,0,ngpham17/Image-Processing,451679691,Verilog,Image-Processing,2583,0,2022-01-25 00:23:29+00:00,[],None
841,https://github.com/shef4/Digital-Design-Projects.git,2022-01-25 13:51:38+00:00,,0,shef4/Digital-Design-Projects,451896196,Verilog,Digital-Design-Projects,28819,0,2022-01-25 13:59:19+00:00,[],None
842,https://github.com/jayanthvarma134/Verilog-Lessons.git,2022-01-31 11:31:03+00:00,Implement simple circuits in Verilog.,0,jayanthvarma134/Verilog-Lessons,453980391,Verilog,Verilog-Lessons,1,0,2022-01-31 12:35:40+00:00,[],https://api.github.com/licenses/mit
843,https://github.com/Danil1997Dev/MIPS_CPU.git,2022-01-23 15:27:04+00:00,,0,Danil1997Dev/MIPS_CPU,451145794,Verilog,MIPS_CPU,4,0,2022-01-23 15:29:45+00:00,[],None
844,https://github.com/samuelpriyadarshan/MCU_8-bit.git,2022-01-27 07:31:11+00:00,,0,samuelpriyadarshan/MCU_8-bit,452583020,Verilog,MCU_8-bit,8801,0,2022-01-27 07:37:55+00:00,[],None
845,https://github.com/bernie6401/NTUST_Computer_Organization.git,2022-01-26 18:20:25+00:00,To construct a simple CPU in this lecture by verilog.,0,bernie6401/NTUST_Computer_Organization,452390301,Verilog,NTUST_Computer_Organization,1355,0,2022-10-30 16:07:55+00:00,"['ntust', 'computer-organization', 'ntust-ee', 'verilog']",None
846,https://github.com/congxvu/CS3220.git,2022-01-30 23:01:28+00:00,,0,congxvu/CS3220,453824186,Verilog,CS3220,2,0,2022-01-30 23:02:41+00:00,[],None
847,https://github.com/pawlex/AVR.git,2022-01-19 02:52:22+00:00,,0,pawlex/AVR,449525349,Verilog,AVR,481,0,2022-02-17 20:00:24+00:00,[],None
848,https://github.com/yevocama/UART.git,2022-01-27 08:38:49+00:00,,0,yevocama/UART,452602999,Verilog,UART,3,0,2022-01-27 08:51:29+00:00,[],None
849,https://github.com/Rika168/FSM-1001-Sequential-Detector-.git,2022-01-27 23:03:27+00:00,This is FSM that will detect 1001 and went through cycle of S0 till S5 and can be seen in the simulation(Model sim),0,Rika168/FSM-1001-Sequential-Detector-,452874004,Verilog,FSM-1001-Sequential-Detector-,3,0,2022-01-27 23:04:47+00:00,[],None
850,https://github.com/austin2408/NCTU_ICLAB_2021.git,2022-01-26 07:19:29+00:00,,0,austin2408/NCTU_ICLAB_2021,452177248,Verilog,NCTU_ICLAB_2021,2746,0,2022-01-26 07:21:50+00:00,[],None
851,https://github.com/AlinBoghian/RISCV_CPU.git,2022-02-02 12:49:52+00:00,implementation of a simple risc V architecture cpu,0,AlinBoghian/RISCV_CPU,454772573,Verilog,RISCV_CPU,9,0,2022-02-02 13:06:19+00:00,[],None
852,https://github.com/LyLiou/2016_hardware_design_fianl_project.git,2022-02-03 18:08:24+00:00,"Final project of lecture ""Hardware design and Lab"" in autumn 2016",0,LyLiou/2016_hardware_design_fianl_project,455275178,Verilog,2016_hardware_design_fianl_project,390,0,2022-02-03 19:16:09+00:00,[],None
853,https://github.com/conorm110/verilog2tetris.git,2022-01-27 14:46:29+00:00,Nand2Tetris but using Verilog HDL,0,conorm110/verilog2tetris,452721391,Verilog,verilog2tetris,50773,0,2022-09-14 13:11:25+00:00,[],https://api.github.com/licenses/apache-2.0
854,https://github.com/bartcui/CPU-design.git,2022-01-30 18:39:05+00:00,,0,bartcui/CPU-design,453768112,Verilog,CPU-design,1198,0,2022-02-03 19:49:29+00:00,[],None
855,https://github.com/Divay292/374Group18.git,2022-01-27 20:36:55+00:00,,0,Divay292/374Group18,452836140,Verilog,374Group18,14215,0,2024-01-23 18:58:36+00:00,[],None
856,https://github.com/virtualsecureplatform/Tangor.git,2022-01-02 10:58:33+00:00,PoC of StarPU based Iyokan,0,virtualsecureplatform/Tangor,443743083,Verilog,Tangor,216,0,2024-02-27 10:49:10+00:00,[],https://api.github.com/licenses/apache-2.0
857,https://github.com/rameloni/soil-segmentation-zcu102.git,2022-02-01 09:07:01+00:00,A heterogeneous implementation (SW/HW) of an image processing algorithm running on a Yocto-linux OS,1,rameloni/soil-segmentation-zcu102,454321036,Verilog,soil-segmentation-zcu102,433748,0,2024-03-04 13:39:59+00:00,"['fpga', 'fpga-accelerator', 'linux', 'yocto']",None
858,https://github.com/lizelive/minecpu.git,2022-01-11 05:58:17+00:00,,0,lizelive/minecpu,446696062,Verilog,minecpu,3314,0,2024-03-20 06:39:53+00:00,[],None
859,https://github.com/ademcolak/FBU-RTL-TASARIM-PROJESI.git,2022-01-04 19:31:24+00:00,,0,ademcolak/FBU-RTL-TASARIM-PROJESI,444540169,Verilog,FBU-RTL-TASARIM-PROJESI,3213,0,2022-01-04 19:51:34+00:00,[],None
860,https://github.com/badgeteam/mch2022-fpga-test-psram-passthrough.git,2022-01-05 00:01:33+00:00,,0,badgeteam/mch2022-fpga-test-psram-passthrough,444600729,Verilog,mch2022-fpga-test-psram-passthrough,1,0,2022-01-05 00:02:00+00:00,[],https://api.github.com/licenses/mit
861,https://github.com/QinHaoting/MIPS_CPU.git,2022-01-04 07:35:45+00:00,,0,QinHaoting/MIPS_CPU,444327372,Verilog,MIPS_CPU,69,0,2022-02-20 12:41:01+00:00,[],https://api.github.com/licenses/apache-2.0
862,https://github.com/alexdh12/552_proj.git,2022-01-03 02:25:51+00:00,,0,alexdh12/552_proj,443919134,Verilog,552_proj,28,0,2022-01-03 02:27:38+00:00,[],None
863,https://github.com/MYMY-young/computer_2.git,2022-01-02 05:30:15+00:00,,0,MYMY-young/computer_2,443689339,Verilog,computer_2,40814,0,2022-01-04 08:35:37+00:00,[],None
864,https://github.com/nisargabhaskar/randomevensequencegenerator.git,2022-01-05 13:24:24+00:00,,0,nisargabhaskar/randomevensequencegenerator,444812418,Verilog,randomevensequencegenerator,2,0,2022-01-05 13:42:54+00:00,[],None
865,https://github.com/MiSTer-devel/Arcade-Subs_MiSTer.git,2022-01-05 23:10:11+00:00,,2,MiSTer-devel/Arcade-Subs_MiSTer,444976254,Verilog,Arcade-Subs_MiSTer,2175,0,2022-01-05 23:25:33+00:00,[],None
866,https://github.com/ultimatedilip/Conventional-Booth-Multiplier.git,2022-01-04 06:00:33+00:00,,0,ultimatedilip/Conventional-Booth-Multiplier,444303990,Verilog,Conventional-Booth-Multiplier,3,0,2022-01-04 06:11:08+00:00,[],None
867,https://github.com/ucsb/ece154b_project1.git,2022-01-12 00:32:19+00:00,,0,ucsb/ece154b_project1,447025254,Verilog,ece154b_project1,1440,0,2022-02-03 00:02:48+00:00,[],None
868,https://github.com/young-jun-Lim/homeworks-projects.git,2022-01-11 08:24:37+00:00,,0,young-jun-Lim/homeworks-projects,446736640,Verilog,homeworks-projects,2208,0,2022-01-11 08:53:09+00:00,[],None
869,https://github.com/khyamling/Design-of-VexRiscv-DE1-SoC.git,2022-01-11 12:19:23+00:00,,0,khyamling/Design-of-VexRiscv-DE1-SoC,446809254,Verilog,Design-of-VexRiscv-DE1-SoC,149863,0,2022-01-11 12:22:17+00:00,[],None
870,https://github.com/zachlambert/hdl-projects.git,2022-01-09 13:36:12+00:00,A collection of small hdl (verilog) projects,0,zachlambert/hdl-projects,446098144,Verilog,hdl-projects,81562,0,2022-01-09 13:42:34+00:00,[],None
871,https://github.com/aidossatan/Electronic-logic-analysis.git,2022-01-12 16:20:49+00:00,,0,aidossatan/Electronic-logic-analysis,447288092,Verilog,Electronic-logic-analysis,99,0,2022-01-12 16:21:29+00:00,[],None
872,https://github.com/Riitesh777/Edice-using-FPGA.git,2022-01-31 16:19:04+00:00,Config files for my GitHub profile.,0,Riitesh777/Edice-using-FPGA,454078997,Verilog,Edice-using-FPGA,2,0,2022-07-23 10:26:38+00:00,"['config', 'github-config']",None
873,https://github.com/greenlaver/z80_mini_com.git,2022-01-28 05:08:07+00:00,Z80 mini computer using fz80,0,greenlaver/z80_mini_com,452946217,Verilog,z80_mini_com,208,0,2023-03-06 12:36:41+00:00,[],None
874,https://github.com/jdyjjj/CS202.git,2022-01-19 14:16:16+00:00,,0,jdyjjj/CS202,449719946,Verilog,CS202,78248,0,2022-09-29 07:37:38+00:00,[],None
875,https://github.com/mrdiogodias/timer.git,2022-01-19 16:01:40+00:00,,0,mrdiogodias/timer,449759836,Verilog,timer,6,0,2022-01-19 17:05:12+00:00,[],None
876,https://github.com/nsingla20/CS220_iverilog.git,2022-01-20 21:45:00+00:00,,1,nsingla20/CS220_iverilog,450267585,Verilog,CS220_iverilog,3412,0,2022-04-26 07:48:07+00:00,[],None
877,https://github.com/ethan-fong/Morse-Code-Decoder.git,2022-01-25 16:46:43+00:00,Converts binary switch inputs to a 7-segment hex display and Morse code output on the De1-soc board. ,0,ethan-fong/Morse-Code-Decoder,451961217,Verilog,Morse-Code-Decoder,3,0,2022-04-25 02:50:46+00:00,[],https://api.github.com/licenses/mit
878,https://github.com/diananicolae/CN2.git,2022-01-26 19:05:31+00:00,,1,diananicolae/CN2,452404584,Verilog,CN2,101,0,2022-01-26 19:21:21+00:00,[],None
879,https://github.com/kycnb666/onlinetoolbox.git,2022-01-29 05:16:16+00:00,在线工具箱,0,kycnb666/onlinetoolbox,453303594,Verilog,onlinetoolbox,163242,0,2022-01-31 20:17:04+00:00,[],None
880,https://github.com/andrewpeck/rat2005e.git,2022-01-28 00:27:42+00:00,Firmware for the RAT2005e Board,0,andrewpeck/rat2005e,452890383,Verilog,rat2005e,15,0,2022-05-17 00:40:24+00:00,[],None
881,https://github.com/Abhishek-git17/Traffic-controller-system.git,2022-01-05 15:00:10+00:00,In this i have taken two roads like - one is international road and other is country road. I have given more preferrence ,0,Abhishek-git17/Traffic-controller-system,444844742,Verilog,Traffic-controller-system,58,0,2022-01-05 15:05:05+00:00,[],None
882,https://github.com/linuspauling1/LSIC.git,2022-01-05 14:49:47+00:00,,0,linuspauling1/LSIC,444841306,Verilog,LSIC,5313,0,2022-01-22 16:01:38+00:00,[],None
883,https://github.com/spi8as7/lcd-controller.git,2022-01-11 00:27:17+00:00,,0,spi8as7/lcd-controller,446625473,Verilog,lcd-controller,1187,0,2022-01-11 00:28:11+00:00,[],https://api.github.com/licenses/mit
884,https://github.com/amandassa/decodificador-ascii-braille.git,2022-01-10 14:41:11+00:00,Circuito decodificador de ASCII-Braille com matriz de led.,0,amandassa/decodificador-ascii-braille,446460588,Verilog,decodificador-ascii-braille,328,0,2022-04-15 13:31:20+00:00,[],None
885,https://github.com/rschlaikjer/serv-test.git,2022-01-10 16:10:38+00:00,,0,rschlaikjer/serv-test,446493004,Verilog,serv-test,25,0,2022-01-10 16:11:29+00:00,[],None
886,https://github.com/Beenau/MusicToneGenerator.git,2022-01-17 21:53:44+00:00,Implements a switch controlled tone generator on the Basys3 with Verilog,0,Beenau/MusicToneGenerator,449059494,Verilog,MusicToneGenerator,20,0,2022-01-17 21:55:38+00:00,[],None
887,https://github.com/applese233/CPU.git,2022-01-18 14:23:34+00:00,,0,applese233/CPU,449315150,Verilog,CPU,7627,0,2022-01-18 14:23:39+00:00,[],None
888,https://github.com/Garcia1766/ComputerOrganization.git,2022-01-06 13:46:13+00:00,"A 32-digit mips CPU. Computer Organization (40240354) Autumn 2019, Tsinghua University.",0,Garcia1766/ComputerOrganization,445184455,Verilog,ComputerOrganization,1923,0,2022-01-06 14:47:03+00:00,[],None
889,https://github.com/Riyas97/Real-Time-Audio-Visualizer.git,2022-01-24 04:25:54+00:00,Sound & Entertainment System to visualize audio input from a microphone and display the signals interactively in different visualizations,0,Riyas97/Real-Time-Audio-Visualizer,451315179,Verilog,Real-Time-Audio-Visualizer,44825,0,2022-01-28 03:42:37+00:00,"['verilog', 'basys-3']",None
890,https://github.com/PaymanBehnam/MedianFilter_HighSpeed.git,2022-01-25 04:47:41+00:00,,0,PaymanBehnam/MedianFilter_HighSpeed,451738426,Verilog,MedianFilter_HighSpeed,58,0,2022-09-19 08:11:21+00:00,[],None
891,https://github.com/maho666/Reaction-Game.git,2022-01-24 08:25:47+00:00,"A game in Verilog controlling on FPGA with built-in keyboard and monitor of computer. The target of the game is to crush the alphabet which is displaying on the monitor, and there are 2 levels. The easier one is to control on the FPGA and no order of entering, and the harder one is to control on the keyboard and to enter alphabetically.",0,maho666/Reaction-Game,451377457,Verilog,Reaction-Game,12,0,2022-02-09 15:38:38+00:00,[],None
892,https://github.com/AlishaMomin/5-stage-pipelined-RISCV-processor-Computer-Architecture.git,2022-01-22 20:01:36+00:00,,0,AlishaMomin/5-stage-pipelined-RISCV-processor-Computer-Architecture,450922687,Verilog,5-stage-pipelined-RISCV-processor-Computer-Architecture,1062,0,2022-01-22 20:30:04+00:00,[],https://api.github.com/licenses/mit
893,https://github.com/yhs1202/DigitalLab_exp3.git,2022-02-04 02:00:28+00:00,Implementation of Combinational Circuit,0,yhs1202/DigitalLab_exp3,455392977,Verilog,DigitalLab_exp3,2,0,2022-02-04 02:02:28+00:00,[],None
894,https://github.com/iholguin6/Digital-Systems--Design-2.git,2022-02-04 02:05:15+00:00,"Labs for the course will be stored here, Digital Systems 2 will be developed in Verilog and in Vivado environment",0,iholguin6/Digital-Systems--Design-2,455393922,Verilog,Digital-Systems--Design-2,992,0,2022-02-04 03:53:13+00:00,[],None
895,https://github.com/cm3u06/HDL_design.git,2022-02-01 05:54:27+00:00,,0,cm3u06/HDL_design,454277488,Verilog,HDL_design,7,0,2022-02-01 06:01:06+00:00,[],None
896,https://github.com/eneretlis/374Processor.git,2022-02-02 21:31:06+00:00,,0,eneretlis/374Processor,454942169,Verilog,374Processor,171,0,2022-02-03 19:57:11+00:00,[],None
897,https://github.com/iamflinks/ECE583.git,2022-01-13 00:53:11+00:00,,0,iamflinks/ECE583,447417093,Verilog,ECE583,19,0,2022-01-13 01:11:24+00:00,[],https://api.github.com/licenses/gpl-3.0
898,https://github.com/rchalamala/fpga-projects.git,2022-01-17 06:29:10+00:00,me messing around with an Alchitry Au FPGA,0,rchalamala/fpga-projects,448778446,Verilog,fpga-projects,787,0,2023-06-03 02:01:36+00:00,[],None
899,https://github.com/FarahGoachem/ISA_LAB1_ISA.git,2022-01-14 11:35:48+00:00,,0,FarahGoachem/ISA_LAB1_ISA,447945861,Verilog,ISA_LAB1_ISA,3752,0,2022-01-14 11:42:26+00:00,[],None
900,https://github.com/naveen891/Y86-Processor.git,2022-01-16 16:09:42+00:00,Y86 Processor Sequential Design Report,0,naveen891/Y86-Processor,448604552,Verilog,Y86-Processor,903,0,2022-01-16 16:13:27+00:00,[],None
901,https://github.com/AloysioCamposDaPaz/Verilog.git,2022-01-29 19:31:07+00:00,,0,AloysioCamposDaPaz/Verilog,453498480,Verilog,Verilog,34,0,2023-12-27 05:00:16+00:00,[],None
902,https://github.com/Perriex/NN_with_Verilog.git,2022-01-14 15:55:14+00:00,,0,Perriex/NN_with_Verilog,448023509,Verilog,NN_with_Verilog,15016,0,2024-01-10 13:33:36+00:00,[],None
