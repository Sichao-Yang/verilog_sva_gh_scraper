,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/agg23/fpga-tamagotchi.git,2023-01-21 22:07:41+00:00,Tamagotchi P1 for Analogue Pocket and MiSTer,1,agg23/fpga-tamagotchi,591793864,SystemVerilog,fpga-tamagotchi,8790,100,2024-04-12 02:35:17+00:00,[],https://api.github.com/licenses/mit
1,https://github.com/dshekhalev/FEC.git,2023-01-06 09:11:55+00:00,"FEC Codec IP core library for a some famous codes (BCH, RS, LDPC, Turbo)",23,dshekhalev/FEC,585857654,SystemVerilog,FEC,1421,71,2024-04-01 06:21:01+00:00,"['bch-codes', 'dvb', 'dvb-s2', 'fec', 'golay', 'ldpc', 'llr', 'polar', 'reed-solomon-codes', 'turbo', 'viterbi', 'dvb-s2x', 'systemverilog', '3gpp', 'ccsds', 'ctc', 'wimax', 'gsfc-ldpc', 'btc', 'tpc']",https://api.github.com/licenses/mit
2,https://github.com/microsoft/cheriot-ibex.git,2023-01-17 18:28:41+00:00,cheriot-ibex is a RTL implementation of CHERIoT ISA based on LowRISC's Ibex core.,10,microsoft/cheriot-ibex,590136589,SystemVerilog,cheriot-ibex,11004,57,2024-03-27 00:00:54+00:00,[],https://api.github.com/licenses/apache-2.0
3,https://github.com/sifferman/labs-with-cva6.git,2022-12-21 21:27:26+00:00,Advanced Architecture Labs with CVA6,17,sifferman/labs-with-cva6,580945969,SystemVerilog,labs-with-cva6,318,35,2024-04-09 08:05:53+00:00,"['branch-prediction', 'caching', 'cva6', 'education', 'out-of-order', 'risc-v', 'systemverilog', 'virtual-memory']",https://api.github.com/licenses/bsd-3-clause
4,https://github.com/pezy-computing/pzbcm.git,2022-12-19 04:09:50+00:00,Basic Common Modules,3,pezy-computing/pzbcm,579842080,SystemVerilog,pzbcm,448,33,2024-03-14 09:38:44+00:00,"['rtl', 'systemverilog']",https://api.github.com/licenses/apache-2.0
5,https://github.com/KOTHAVANI/100-Days-of-RTL-code.git,2022-12-29 19:55:52+00:00,,14,KOTHAVANI/100-Days-of-RTL-code,583444300,SystemVerilog,100-Days-of-RTL-code,311,32,2024-02-21 10:36:37+00:00,[],None
6,https://github.com/martinKindall/risc-v-single-cycle.git,2022-12-21 23:11:55+00:00,A Single Cycle Risc-V 32 bit CPU,4,martinKindall/risc-v-single-cycle,580967817,SystemVerilog,risc-v-single-cycle,37,20,2024-03-21 09:37:23+00:00,"['basys3', 'basys3-fpga', 'riscv', 'riscv-assembly', 'riscv32', 'rv32i', 'single-cycle-processor', 'systemverilog']",None
7,https://github.com/wenqi-wang20/RISCV-LAB.git,2023-01-27 13:57:08+00:00,清华大学计算机系零字班计算机组成原理大实验作业。,1,wenqi-wang20/RISCV-LAB,594057171,SystemVerilog,RISCV-LAB,2565,18,2024-04-07 16:21:32+00:00,[],None
8,https://github.com/pulp-platform/redmule.git,2022-12-30 09:57:51+00:00,,7,pulp-platform/redmule,583607920,SystemVerilog,redmule,1201,18,2024-04-09 23:14:02+00:00,[],
9,https://github.com/chenshuo/veriloglabs.git,2022-12-24 18:30:50+00:00,Undergraduate digital circuit laboratory,2,chenshuo/veriloglabs,581888855,SystemVerilog,veriloglabs,73,16,2024-03-25 18:37:26+00:00,[],https://api.github.com/licenses/bsd-3-clause
10,https://github.com/karribharathi/100-Days-of-RTL.git,2023-01-02 14:53:00+00:00,,3,karribharathi/100-Days-of-RTL,584432158,SystemVerilog,100-Days-of-RTL,234,16,2024-01-28 15:23:52+00:00,[],None
11,https://github.com/pulp-platform/hyperbus.git,2023-01-24 18:32:04+00:00,,2,pulp-platform/hyperbus,592882035,SystemVerilog,hyperbus,105,14,2024-04-08 10:11:10+00:00,[],
12,https://github.com/pulp-platform/serial_link.git,2023-01-26 14:46:59+00:00,"A simple, scalable, source-synchronous, all-digital DDR link",2,pulp-platform/serial_link,593655809,SystemVerilog,serial_link,838,11,2024-03-22 04:04:17+00:00,[],
13,https://github.com/martinKindall/mips_cpu.git,2022-12-02 23:27:26+00:00,Single Cycle 32 bit MIPS,0,martinKindall/mips_cpu,573624462,SystemVerilog,mips_cpu,287,10,2024-02-25 20:04:03+00:00,"['fpga', 'mips', 'single-cycle', 'systemverilog', 'basys3', 'basys3-fpga', 'mips-cpu', 'single-cycle-processor']",None
14,https://github.com/I-Doctor/gnn-acceleration-framework-with-FPGA.git,2022-12-04 06:20:22+00:00,"including compiler to encode DGL GNN model to instructions, runtime software to transfer data and control the accelerator, and hardware verilog code that can be implemented on FPGA",9,I-Doctor/gnn-acceleration-framework-with-FPGA,574014524,SystemVerilog,gnn-acceleration-framework-with-FPGA,318,9,2024-03-23 16:03:31+00:00,[],https://api.github.com/licenses/apache-2.0
15,https://github.com/andreili/FlexRV32.git,2023-01-01 15:09:34+00:00,"The second implementation of RISC-V architecture, step-by-step.",2,andreili/FlexRV32,584144606,SystemVerilog,FlexRV32,1312,7,2024-01-22 00:27:40+00:00,[],https://api.github.com/licenses/mit
16,https://github.com/haydenbeames/RISCV-SuperScalar--BLAZE-CORE.git,2023-01-31 21:44:33+00:00,A completely configurable RISC-V Out of Order Core with a base model geared towards maximizing performance,2,haydenbeames/RISCV-SuperScalar--BLAZE-CORE,595818102,SystemVerilog,RISCV-SuperScalar--BLAZE-CORE,439,6,2024-04-09 05:02:17+00:00,[],None
17,https://github.com/stellagarden/EE405-Advanced-Digital-Systems-Design.git,2023-01-18 02:17:39+00:00,"Used FPGA board and System Verilog to design controller, DMA, pipelined SIMD processor, and GEMM accelerator",0,stellagarden/EE405-Advanced-Digital-Systems-Design,590265951,SystemVerilog,EE405-Advanced-Digital-Systems-Design,42347,5,2024-03-28 03:02:53+00:00,[],None
18,https://github.com/Dr-TSNG/ComputerArchitectureAssignment.git,2022-12-16 09:24:20+00:00,HIT-CS32201 Computer Organization and Architecture Assignments,5,Dr-TSNG/ComputerArchitectureAssignment,578949017,SystemVerilog,ComputerArchitectureAssignment,150,5,2023-12-18 18:18:24+00:00,[],None
19,https://github.com/MineQihang/MIPS_CPU.git,2023-01-01 03:04:52+00:00,重庆大学硬件综合设计：MIPS组,0,MineQihang/MIPS_CPU,584037610,SystemVerilog,MIPS_CPU,13089,4,2024-03-29 05:49:27+00:00,[],https://api.github.com/licenses/apache-2.0
20,https://github.com/pgimenes/ample.git,2022-12-26 10:38:29+00:00,Graph Neural Network inference accelerator for Ultrascale+ FPGAs designed for multi-precision inference on large graphs.,1,pgimenes/ample,582286136,SystemVerilog,ample,189527,4,2024-04-04 08:44:25+00:00,[],None
21,https://github.com/tom-urkin/SPI.git,2023-01-15 12:45:41+00:00,SPI protocol modules in SystemVerilog,0,tom-urkin/SPI,589208038,SystemVerilog,SPI,499,4,2023-06-22 05:37:11+00:00,[],None
22,https://github.com/AllenHeartcore/ECE385_UIUC23sp.git,2023-02-03 06:00:01+00:00,"Ziyuan Chen, ECE385 @ UIUC 23SP",0,AllenHeartcore/ECE385_UIUC23sp,596881280,SystemVerilog,ECE385_UIUC23sp,137017,4,2024-03-31 14:04:05+00:00,"['ece', 'ece385', 'fpga', 'nios-ii', 'systemverilog', 'uiuc']",https://api.github.com/licenses/gpl-3.0
23,https://github.com/cheyao/Achieve-Core.git,2023-01-01 18:22:29+00:00,RISC-V SoC + OS,0,cheyao/Achieve-Core,584183123,SystemVerilog,Achieve-Core,12997,4,2023-06-20 09:49:41+00:00,"['risc-v', 'soc', 'verilog', 'core']",None
24,https://github.com/okkookkowill/Verification-of-MCDF.git,2022-12-14 11:09:24+00:00,,0,okkookkowill/Verification-of-MCDF,578143998,SystemVerilog,Verification-of-MCDF,448,3,2023-09-21 15:46:35+00:00,[],None
25,https://github.com/LeonardoSanga/TesteDeOperacoesEmAssembly.git,2023-01-24 00:41:12+00:00,O projeto tem por objetivo implementar algumas das principais operações na linguagem de programação de baixo nível Assembly.,0,LeonardoSanga/TesteDeOperacoesEmAssembly,592548389,SystemVerilog,TesteDeOperacoesEmAssembly,4,3,2023-08-21 14:22:32+00:00,[],None
26,https://github.com/pConst/vivado_design_space_explorer_template.git,2022-12-02 11:19:56+00:00,Iterative compilation and reporting scripts for AMD / Xilinx Vivado,2,pConst/vivado_design_space_explorer_template,573398484,SystemVerilog,vivado_design_space_explorer_template,10,3,2023-12-02 13:05:42+00:00,[],None
27,https://github.com/LeonardoSanga/Multiplexador4por1.git,2023-01-23 13:07:07+00:00,"Projeto desenvolvido para aplicar, em Verilog, uma das mais conhecidas linguagens de descrição de hardware da atualidades, os conhecimentos acerca de multiplexadores.",0,LeonardoSanga/Multiplexador4por1,592310261,SystemVerilog,Multiplexador4por1,3,3,2023-08-24 14:05:09+00:00,[],None
28,https://github.com/justinscottlee/Topaz-Geyser-RV32E.git,2023-01-27 00:01:16+00:00,6-Stage Pipelined RV32E core written in SystemVerilog.,0,justinscottlee/Topaz-Geyser-RV32E,593836149,SystemVerilog,Topaz-Geyser-RV32E,368,3,2023-04-03 16:08:34+00:00,[],https://api.github.com/licenses/gpl-3.0
29,https://github.com/LeonardoSanga/AtribuicoesBlocantesENaoBlocantes.git,2023-01-23 13:55:54+00:00,Projeto desenvolvido para aplicar os conhecimentos acerca das atribuições blocantes e não blocantes.,0,LeonardoSanga/AtribuicoesBlocantesENaoBlocantes,592329406,SystemVerilog,AtribuicoesBlocantesENaoBlocantes,2,3,2023-08-21 14:22:39+00:00,[],None
30,https://github.com/yi-chen-hu/DCS.git,2023-02-01 16:08:23+00:00,NCTU Digital Circuits and Systems,0,yi-chen-hu/DCS,596171675,SystemVerilog,DCS,10940,3,2024-03-14 06:53:11+00:00,[],None
31,https://github.com/tom-urkin/UART.git,2022-12-21 15:00:14+00:00,,1,tom-urkin/UART,580830608,SystemVerilog,UART,1343,3,2023-06-05 09:24:30+00:00,[],None
32,https://github.com/LeonardoSanga/ImplementacaoULA.git,2023-01-23 23:47:25+00:00,"O projeto tem como objetivo projetar, implementar e testar uma Unidade Lógica e Aritmética (ULA), dispositivo este que executa operações aritméticas (add, sub, etc) e lógicas (AND, OR, etc).",0,LeonardoSanga/ImplementacaoULA,592536599,SystemVerilog,ImplementacaoULA,3,3,2023-08-21 14:22:34+00:00,[],None
33,https://github.com/LeonardoSanga/MemoriaDeDadosEBancoDeRegistradores.git,2023-01-24 00:08:33+00:00,O projeto desenvolvido tem por objetivo implementar uma memória de dados e um banco de registradores e verificar suas singularidades na realização de operações de leitura e escrita.,0,LeonardoSanga/MemoriaDeDadosEBancoDeRegistradores,592541318,SystemVerilog,MemoriaDeDadosEBancoDeRegistradores,3,3,2023-08-21 14:22:33+00:00,[],None
34,https://github.com/ethan12377/EECS627_GraphPulse.git,2023-01-26 22:16:03+00:00,,0,ethan12377/EECS627_GraphPulse,593811776,SystemVerilog,EECS627_GraphPulse,33691,3,2024-03-18 00:10:54+00:00,[],None
35,https://github.com/AhmadSalehEsfahani/FPEdge.git,2023-01-04 09:46:09+00:00,Field Programmable Edge. Using the Thingsboard Edge and the Terasic DE10-nano FPGA board.,1,AhmadSalehEsfahani/FPEdge,585090878,SystemVerilog,FPEdge,158671,3,2023-12-04 19:36:47+00:00,[],None
36,https://github.com/Sanjit1/VeoPixels.git,2022-12-29 05:17:16+00:00,"Veopixels, a library? package? collection? driver? idk... something for NeoPixels written in Verilog.",0,Sanjit1/VeoPixels,583213382,SystemVerilog,VeoPixels,27569,3,2022-12-31 06:13:19+00:00,[],https://api.github.com/licenses/mit
37,https://github.com/Joas329/SystemVerlilog-VGA-Game.git,2023-01-09 03:22:45+00:00,A simple game using the VGA module from the DE10-lite,1,Joas329/SystemVerlilog-VGA-Game,586713129,SystemVerilog,SystemVerlilog-VGA-Game,39,2,2023-10-21 00:58:42+00:00,[],None
38,https://github.com/irodotos/FPGA-SuperMarioMaze.git,2022-12-18 20:19:35+00:00,,0,irodotos/FPGA-SuperMarioMaze,579757469,SystemVerilog,FPGA-SuperMarioMaze,16,2,2024-03-29 14:49:46+00:00,[],None
39,https://github.com/TUM-DSE/end2end-encr.git,2023-01-23 13:17:33+00:00,End-to-end on-chip encryption,1,TUM-DSE/end2end-encr,592314131,SystemVerilog,end2end-encr,29950,2,2023-03-24 10:08:52+00:00,[],https://api.github.com/licenses/apache-2.0
40,https://github.com/AlphaLyrae0/UVM_DPI_Example.git,2023-01-09 09:47:16+00:00,Example of DPI-C usage in UVM with Vivado simulator (xsim),0,AlphaLyrae0/UVM_DPI_Example,586814750,SystemVerilog,UVM_DPI_Example,34,2,2023-09-19 20:11:28+00:00,[],None
41,https://github.com/cedard234/AcceLeNetor.git,2023-01-18 06:39:46+00:00,FYP project. A VerilogHDL based hardware accelerator.,0,cedard234/AcceLeNetor,590328096,SystemVerilog,AcceLeNetor,209,2,2023-11-08 11:34:07+00:00,"['cnn', 'electronics', 'embedded', 'fpga', 'lenet-5', 'verilog', 'neural-network']",None
42,https://github.com/newaetech/fpga-common.git,2023-01-16 20:02:44+00:00,FPGA design elements used across multiple projects.,0,newaetech/fpga-common,589731843,SystemVerilog,fpga-common,193,2,2023-12-21 12:44:22+00:00,[],None
43,https://github.com/tom-urkin/FIFO_Memory.git,2022-12-28 10:17:03+00:00,,0,tom-urkin/FIFO_Memory,582949100,SystemVerilog,FIFO_Memory,1752,2,2023-06-05 09:24:50+00:00,[],None
44,https://github.com/cristian-slav/uvm_thread_decoupler.git,2023-01-31 07:06:07+00:00,Utility class to decouple a task from its caller process so that a call to kill() method of the parent process does not terminate the targeted task.,0,cristian-slav/uvm_thread_decoupler,595484366,SystemVerilog,uvm_thread_decoupler,13,2,2023-04-20 10:12:29+00:00,[],https://api.github.com/licenses/apache-2.0
45,https://github.com/MarcEftimie/FPGA-textbook-solutions.git,2023-01-22 21:34:12+00:00,"My solutions to exercises in the ""FPGA Prototyping By SystemVerilog Examples"" by Pong P. Chu.",1,MarcEftimie/FPGA-textbook-solutions,592085294,SystemVerilog,FPGA-textbook-solutions,517,2,2024-02-11 04:25:06+00:00,"['fpga', 'systemverilog']",https://api.github.com/licenses/mit
46,https://github.com/mstopyra/FPGA_SIGDEL_DAC.git,2022-12-03 22:37:07+00:00,,1,mstopyra/FPGA_SIGDEL_DAC,573937044,SystemVerilog,FPGA_SIGDEL_DAC,51583,2,2024-03-04 04:10:26+00:00,[],None
47,https://github.com/KaustubhDighe/Vyapaar.git,2022-12-02 19:07:39+00:00,High Frequency Trading on FPGA,3,KaustubhDighe/Vyapaar,573562031,SystemVerilog,Vyapaar,68,2,2024-02-08 11:13:25+00:00,"['eigenvalues', 'fpga', 'hardware', 'hft-trading', 'trading', 'verilog']",https://api.github.com/licenses/mit
48,https://github.com/tms4517/Advance-FPGA-Design.git,2022-12-25 21:32:02+00:00,"Examples discussed in the book: ""Advanced FPGA design: Architecture, Implementation, and Optimization"" by Steve Kilts, in System Verilog.",2,tms4517/Advance-FPGA-Design,582144846,SystemVerilog,Advance-FPGA-Design,1982,2,2024-01-17 07:46:32+00:00,[],None
49,https://github.com/M-Mashreghi/Digital-logic-design-Laboratory.git,2022-12-06 08:14:51+00:00,Digital Logic Design Laboratory course projects with Professor Navabi,1,M-Mashreghi/Digital-logic-design-Laboratory,574855740,SystemVerilog,Digital-logic-design-Laboratory,64876,2,2023-08-17 23:58:29+00:00,[],None
50,https://github.com/nasahlpa/scfi.git,2023-02-06 11:49:44+00:00,,0,nasahlpa/scfi,598096550,SystemVerilog,scfi,20,2,2023-07-18 12:55:12+00:00,[],None
51,https://github.com/yuyuranium/vsd-test-github-flow.git,2022-12-05 09:35:31+00:00,Repo to test and practice GitHub flow for VSD 2022,0,yuyuranium/vsd-test-github-flow,574426237,SystemVerilog,vsd-test-github-flow,7,2,2023-03-02 07:08:55+00:00,[],None
52,https://github.com/javacafe01/bitcoin-hash.git,2023-01-20 00:08:18+00:00,"  A reimplementation of the Bitcoin hash, both in parallel and serial",0,javacafe01/bitcoin-hash,591112540,SystemVerilog,bitcoin-hash,576,2,2024-02-04 08:51:15+00:00,"['bitcoin', 'hashing', 'hdl', 'systemverilog']",https://api.github.com/licenses/gpl-3.0
53,https://github.com/CompuSAR/simple_ddr_ctrl.git,2023-01-07 18:58:54+00:00,A (very) simple DDR3 controller for FPGAs,0,CompuSAR/simple_ddr_ctrl,586332604,SystemVerilog,simple_ddr_ctrl,40,2,2023-09-13 11:53:56+00:00,[],https://api.github.com/licenses/gpl-2.0
54,https://github.com/KartikeyanSubramanyam/CSE141L-Project.git,2023-01-25 04:42:16+00:00,,1,KartikeyanSubramanyam/CSE141L-Project,593042077,SystemVerilog,CSE141L-Project,117,2,2023-06-14 08:06:13+00:00,[],None
55,https://github.com/sts08015/risc-v-lab.git,2023-01-11 08:07:23+00:00,Extended Version of COSE222 Lab,0,sts08015/risc-v-lab,587634696,SystemVerilog,risc-v-lab,61,2,2024-02-11 04:30:24+00:00,"['pipelined-processors', 'risc-v', 'single-cycle-processor', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
56,https://github.com/nella17/NYCU-DCLab-2022-Final.git,2022-12-09 02:58:13+00:00,,0,nella17/NYCU-DCLab-2022-Final,576108955,SystemVerilog,NYCU-DCLab-2022-Final,540,2,2023-03-10 09:27:11+00:00,[],None
57,https://github.com/charkster/tang_nano-trigger_uart.git,2022-12-13 03:33:27+00:00,This is a re-write of my previous trigger project. This time Tang Nano 9k is the target hardware and the USB UART is used to configure and enable triggering.,1,charkster/tang_nano-trigger_uart,577578873,SystemVerilog,tang_nano-trigger_uart,1213,2,2023-05-29 18:20:18+00:00,"['pattern-generator', 'tang-nano-9k', 'trigger', 'uart', 'tang-nano']",https://api.github.com/licenses/mit
58,https://github.com/hossein1387/cva6.git,2022-12-04 04:53:27+00:00,The CORE-V CVA6 is an Application class 6-stage RISC-V CPU capable of booting Linux. Refer to https://github.com/openhwgroup/cva6,0,hossein1387/cva6,573998681,SystemVerilog,cva6,32135,2,2024-04-05 13:33:50+00:00,[],
59,https://github.com/Lalitgangwar9837/System_verilog_testbench.git,2022-12-26 13:39:45+00:00,,0,Lalitgangwar9837/System_verilog_testbench,582331469,SystemVerilog,System_verilog_testbench,71,2,2024-03-07 12:15:08+00:00,[],None
60,https://github.com/michael-lehn/ulm-on-ice.git,2023-01-12 10:42:49+00:00,ULM (Ulm Lecture Machine) on ice40,0,michael-lehn/ulm-on-ice,588106472,SystemVerilog,ulm-on-ice,46377,2,2024-03-30 19:15:46+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/gpl-3.0
61,https://github.com/OscarCMZ/X-RISC.git,2022-12-06 18:54:50+00:00,,1,OscarCMZ/X-RISC,575099365,SystemVerilog,X-RISC,239,2,2023-01-16 12:20:24+00:00,[],None
62,https://github.com/sinandredemption/fir_basys3.git,2023-01-30 20:58:02+00:00,Real-time Audio Processing through FIR filters on Basys-3 FPGA and Pmod I2S2,0,sinandredemption/fir_basys3,595320191,SystemVerilog,fir_basys3,16,2,2024-02-11 16:42:32+00:00,[],None
63,https://github.com/mjhborja/hello_world_uvm.git,2023-01-10 04:22:51+00:00,Welcome! Start your UVM - SystemVerilog learning journey here...,0,mjhborja/hello_world_uvm,587149773,SystemVerilog,hello_world_uvm,64,1,2023-02-26 22:40:16+00:00,"['uvm', 'learn-systemverilog', 'learn-uvm', 'connect-dut-testbench', 'propagate-stimuli']",https://api.github.com/licenses/mit
64,https://github.com/OptimusMars/OptimumFPGAFramework.git,2023-01-28 07:44:22+00:00,Crossplatform FPGA Framework,0,OptimusMars/OptimumFPGAFramework,594330404,SystemVerilog,OptimumFPGAFramework,1234,1,2023-03-02 20:37:12+00:00,[],https://api.github.com/licenses/gpl-3.0
65,https://github.com/whdcks877/AI_SEMICON_2022.git,2022-12-18 11:33:46+00:00,2022 인공지능 반도체 설계 대전,1,whdcks877/AI_SEMICON_2022,579639680,SystemVerilog,AI_SEMICON_2022,2737,1,2023-11-03 13:03:11+00:00,[],None
66,https://github.com/Carl7yan/Verification-Begin.git,2023-01-10 05:12:50+00:00,,0,Carl7yan/Verification-Begin,587161079,SystemVerilog,Verification-Begin,19103,1,2023-11-15 13:40:02+00:00,[],None
67,https://github.com/pietroglyph/pipelined-rv32i.git,2022-12-19 05:16:58+00:00,"A synthesizable, five-stage, pipelined 32-bit RISC-V processor (implements the RV32I base ISA)",0,pietroglyph/pipelined-rv32i,579855610,SystemVerilog,pipelined-rv32i,1500,1,2024-01-22 22:46:01+00:00,[],None
68,https://github.com/darnissan/DigitalSystemsEX1.git,2022-12-21 09:02:54+00:00,,0,darnissan/DigitalSystemsEX1,580713950,SystemVerilog,DigitalSystemsEX1,567,1,2022-12-21 09:10:26+00:00,[],None
69,https://github.com/vborchsh/wt_core.git,2023-01-23 15:36:18+00:00,,0,vborchsh/wt_core,592371253,SystemVerilog,wt_core,88,1,2023-05-12 06:11:06+00:00,[],https://api.github.com/licenses/gpl-3.0
70,https://github.com/ChriCheng/RISC-CPU.git,2022-12-19 03:04:44+00:00,,0,ChriCheng/RISC-CPU,579829498,SystemVerilog,RISC-CPU,15,1,2023-01-03 06:40:26+00:00,[],None
71,https://github.com/rei0515reten/Re_RISCV.git,2023-02-05 12:38:27+00:00,RISC-V based cpu processor,0,rei0515reten/Re_RISCV,597718467,SystemVerilog,Re_RISCV,8,1,2023-02-06 00:11:27+00:00,[],None
72,https://github.com/bmartini/hdl-axi-common.git,2023-01-06 22:39:15+00:00,Common HDL AXI modules,0,bmartini/hdl-axi-common,586084577,SystemVerilog,hdl-axi-common,27,1,2024-02-04 15:15:53+00:00,[],https://api.github.com/licenses/mit
73,https://github.com/guoriyue/EE271-Rasterization.git,2023-01-09 00:53:09+00:00,,0,guoriyue/EE271-Rasterization,586685047,SystemVerilog,EE271-Rasterization,21682,1,2024-02-23 02:03:36+00:00,[],None
74,https://github.com/vlotnik/sv_sdr.git,2023-01-03 06:27:21+00:00,,0,vlotnik/sv_sdr,584645795,SystemVerilog,sv_sdr,117,1,2024-03-04 21:02:53+00:00,[],None
75,https://github.com/Nagarjun444/SRAM-VIP.git,2022-12-07 18:13:48+00:00,Sram with moniter and scoreboard,0,Nagarjun444/SRAM-VIP,575532825,SystemVerilog,SRAM-VIP,15,1,2023-06-21 09:11:07+00:00,[],None
76,https://github.com/uygararas/SimpleMicroProcessor.git,2023-01-05 17:43:23+00:00,A simple microprocessor designed in system-verilog.,0,uygararas/SimpleMicroProcessor,585643973,SystemVerilog,SimpleMicroProcessor,655,1,2023-01-05 18:01:32+00:00,[],None
77,https://github.com/Augusto-Viniciuss/ESC-digital.git,2023-01-14 20:25:20+00:00,Lógica de ativamento das bobinas de um motor brushless implementado em hardware usando um kit de desenvolvimento FPGA para simular,0,Augusto-Viniciuss/ESC-digital,589026886,SystemVerilog,ESC-digital,4,1,2023-03-01 13:56:08+00:00,[],https://api.github.com/licenses/mit
78,https://github.com/1mina1/Counter-verification-uvm.git,2022-12-21 19:38:09+00:00,,0,1mina1/Counter-verification-uvm,580917847,SystemVerilog,Counter-verification-uvm,3,1,2022-12-21 19:44:52+00:00,[],None
79,https://github.com/xudatou-94/AMBA_Demo.git,2023-02-05 02:24:21+00:00,APB协议的一个新手demo,0,xudatou-94/AMBA_Demo,597594826,SystemVerilog,AMBA_Demo,420,1,2023-02-19 12:41:54+00:00,[],None
80,https://github.com/nmamore/PIC24.git,2022-12-29 22:32:26+00:00,FPGA implementation of the PIC24,0,nmamore/PIC24,583476796,SystemVerilog,PIC24,43,1,2023-01-01 01:10:38+00:00,[],None
81,https://github.com/pvip-nitin/cpu.git,2023-01-23 07:06:49+00:00,,0,pvip-nitin/cpu,592196926,SystemVerilog,cpu,39,1,2023-03-20 00:56:46+00:00,[],None
82,https://github.com/Augusto-Viniciuss/Black-Jack-Hardware-.git,2023-01-12 23:11:16+00:00,Lógica do jogo black jack desenvolvida totalmente em hardware utilizando um kit de desenvolvimento de FPGA para simular o jogo.,0,Augusto-Viniciuss/Black-Jack-Hardware-,588353851,SystemVerilog,Black-Jack-Hardware-,4,1,2023-01-15 18:24:46+00:00,[],https://api.github.com/licenses/mit
83,https://github.com/yagnavivek/Layered_Testbench_DFF.git,2022-12-24 16:04:33+00:00,This repository contains all the files required for a layered testbench to verify a d-flip-flop using system verilog,0,yagnavivek/Layered_Testbench_DFF,581858963,SystemVerilog,Layered_Testbench_DFF,5,1,2023-11-25 13:59:42+00:00,[],https://api.github.com/licenses/mit
84,https://github.com/charlesziegenbeinjr/573TermProject-F22.git,2022-12-12 01:05:11+00:00,,0,charlesziegenbeinjr/573TermProject-F22,577106423,SystemVerilog,573TermProject-F22,22453,1,2022-12-16 11:34:47+00:00,[],None
85,https://github.com/Zanatticus/RISC-V-Processor.git,2022-12-14 03:57:17+00:00,A RISC-V processor created from scratch with SystemVerilog with a complimentary assembly instruction converter,0,Zanatticus/RISC-V-Processor,578018351,SystemVerilog,RISC-V-Processor,111,1,2024-01-17 04:05:18+00:00,[],None
86,https://github.com/Carl7yan/2cnn_dla.git,2023-01-10 09:09:26+00:00,,0,Carl7yan/2cnn_dla,587230290,SystemVerilog,2cnn_dla,1776,1,2023-11-06 07:28:01+00:00,[],None
87,https://github.com/dimitris-aspetakis/SwerV-EH1-DC.git,2023-01-27 08:20:57+00:00,Data cache inmplementation for SwerV EH1 core,1,dimitris-aspetakis/SwerV-EH1-DC,593949502,SystemVerilog,SwerV-EH1-DC,15584,1,2023-08-23 17:22:40+00:00,[],https://api.github.com/licenses/apache-2.0
88,https://github.com/arm-out/ARMINx8.git,2023-02-03 10:23:36+00:00,Another RISC Microprocessor Indeed,0,arm-out/ARMINx8,596966116,SystemVerilog,ARMINx8,9904,1,2023-03-27 02:43:19+00:00,[],None
89,https://github.com/Karthikeyan564/h264_bachelor_thesis.git,2023-01-20 20:24:44+00:00,,0,Karthikeyan564/h264_bachelor_thesis,591462972,SystemVerilog,h264_bachelor_thesis,1110,1,2023-04-17 06:12:28+00:00,[],https://api.github.com/licenses/mit
90,https://github.com/Parretto/Risc-V.git,2022-12-30 13:31:50+00:00,RISC-V implementation (r32i),0,Parretto/Risc-V,583659254,SystemVerilog,Risc-V,17,1,2023-11-16 11:31:02+00:00,[],None
91,https://github.com/tmct-web/spi_slave_tmct.git,2022-12-18 02:08:57+00:00,spi_slave_tmct is a basic SPI slave IP core that provides the basic framework for the implementation of custom SPI slave devices.,0,tmct-web/spi_slave_tmct,579534179,SystemVerilog,spi_slave_tmct,101,1,2023-12-11 15:26:20+00:00,"['fpga', 'spi', 'verilog', 'basic-spi-slave', 'spi-slave']",https://api.github.com/licenses/bsd-3-clause
92,https://github.com/ryuz/study_uvm.git,2022-12-03 01:07:16+00:00,uvmの勉強用,1,ryuz/study_uvm,573642479,SystemVerilog,study_uvm,9,1,2024-01-15 16:15:02+00:00,[],None
93,https://github.com/NYU-Processor-Design/nyu-amba.git,2023-01-23 11:16:31+00:00,NYU Processor Design Team's interpretation of ARM's AMBA specifications.,6,NYU-Processor-Design/nyu-amba,592271737,SystemVerilog,nyu-amba,2087,1,2023-03-08 02:23:10+00:00,[],https://api.github.com/licenses/cc0-1.0
94,https://github.com/bfaurestal/Cache_Simulator.git,2023-02-07 05:01:56+00:00,,0,bfaurestal/Cache_Simulator,598432984,SystemVerilog,Cache_Simulator,1516,1,2023-03-25 15:32:21+00:00,[],https://api.github.com/licenses/mit
95,https://github.com/vadimfastos/riscv.git,2023-01-11 17:01:15+00:00,"My RISC-V SoC (core, memory, bus and simple i/o interfaces)",0,vadimfastos/riscv,587820456,SystemVerilog,riscv,3584,1,2023-01-17 14:53:55+00:00,[],None
96,https://github.com/RasmusGOlsen/vip-clock.git,2023-01-02 07:31:28+00:00,,0,RasmusGOlsen/vip-clock,584309868,SystemVerilog,vip-clock,4,1,2023-07-10 09:03:38+00:00,[],None
97,https://github.com/serpest/ALU.git,2022-12-16 21:22:24+00:00,Simple arithmetic logic unit,0,serpest/ALU,579176766,SystemVerilog,ALU,2,1,2023-11-18 23:16:51+00:00,"['alu', 'arithmetic-logic-unit', 'hdl']",None
98,https://github.com/Carl7yan/3AHB_RAM.git,2023-01-11 05:17:33+00:00,,0,Carl7yan/3AHB_RAM,587589150,SystemVerilog,3AHB_RAM,3011,1,2023-11-06 07:28:08+00:00,[],None
99,https://github.com/Chandrusankar7/4-Bit-Address-Line-CPU.git,2023-01-22 13:03:48+00:00,"design of a 4-bit CPU containing 4-bit address bus, 8-bit data bus containing a memory of 24 8 of size. The RAM is of Simple Dual Port type. The opcode is of 4-bit length, so 16 different types of operations can be implemented in the design. The design is made using Verilog HDL",0,Chandrusankar7/4-Bit-Address-Line-CPU,591949233,SystemVerilog,4-Bit-Address-Line-CPU,23,1,2023-01-28 06:52:50+00:00,[],None
100,https://github.com/ep2k/epFC.git,2023-01-12 15:26:46+00:00,Family Computer emulator running on an FPGA,1,ep2k/epFC,588207852,SystemVerilog,epFC,1430,1,2023-08-28 17:44:46+00:00,[],https://api.github.com/licenses/gpl-3.0
101,https://github.com/aMotevallian/multi-cycle-risv-v-processor-.git,2022-12-19 17:48:37+00:00,,1,aMotevallian/multi-cycle-risv-v-processor-,580094123,SystemVerilog,multi-cycle-risv-v-processor-,1013,1,2023-04-25 13:38:44+00:00,[],None
102,https://github.com/Carl7yan/Verify-apb-uart.git,2023-01-10 03:56:13+00:00,,0,Carl7yan/Verify-apb-uart,587143977,SystemVerilog,Verify-apb-uart,1014,1,2023-11-06 07:28:29+00:00,[],None
103,https://github.com/Sardter/simple_cpu.git,2022-12-16 13:17:03+00:00,A simple proccessor written in System Verilog that supports multiple instructions,0,Sardter/simple_cpu,579022529,SystemVerilog,simple_cpu,3172,1,2023-05-23 20:11:34+00:00,[],None
104,https://github.com/npalmer5620/razor_cpu.git,2022-12-23 23:16:45+00:00,RISC-V RV32I CPU core in SystemVerilog,0,npalmer5620/razor_cpu,581676929,SystemVerilog,razor_cpu,17,1,2023-05-13 05:10:39+00:00,"['cpu', 'processor-architecture', 'risc-v']",None
105,https://github.com/Nhan-Tong/RISCV_Floating_point.git,2022-12-18 04:55:12+00:00,,0,Nhan-Tong/RISCV_Floating_point,579560726,SystemVerilog,RISCV_Floating_point,34,1,2023-02-05 01:11:16+00:00,[],None
106,https://github.com/1mina1/ALU-verification-using-cocotb-in-python-and-full-SV-enviroment.git,2022-12-21 15:12:32+00:00,,0,1mina1/ALU-verification-using-cocotb-in-python-and-full-SV-enviroment,580835099,SystemVerilog,ALU-verification-using-cocotb-in-python-and-full-SV-enviroment,18218,1,2022-12-21 19:44:51+00:00,[],None
107,https://github.com/Nutmeg43/Async-FIFO.git,2023-01-31 03:35:00+00:00,Asynchronous FIFO RTL model with corresponding verification,0,Nutmeg43/Async-FIFO,595426852,SystemVerilog,Async-FIFO,45,1,2023-07-12 09:15:59+00:00,[],https://api.github.com/licenses/mit
108,https://github.com/martinKindall/8-bit-multicycle-cpu.git,2022-12-11 22:27:57+00:00,Minimalist 8 bit multicycle RISC CPU,0,martinKindall/8-bit-multicycle-cpu,577078224,SystemVerilog,8-bit-multicycle-cpu,15,1,2023-11-26 18:30:57+00:00,"['8-bit', '8-bit-computer', '8-bit-cpu', 'basys3', 'basys3-fpga', 'cpu', 'fpga', 'multicycle', 'multicycle-processor', 'systemverilog']",None
109,https://github.com/zljuft/verify.git,2022-12-12 02:24:41+00:00,,1,zljuft/verify,577122401,SystemVerilog,verify,23,1,2023-12-04 08:06:18+00:00,[],None
110,https://github.com/guyuxuan9/RISCV-CPU.git,2023-01-18 17:52:44+00:00,"This collaborative coursework entails the construction of a RISC-V CPU using System Verilog. The project encompasses the development of fundamental, pipelined, and one-way cached variations of the CPU architecture.",0,guyuxuan9/RISCV-CPU,590566373,SystemVerilog,RISCV-CPU,183820,1,2024-03-12 21:10:01+00:00,[],None
111,https://github.com/federicorossifr/ibex_ppu_pv1.git,2023-01-05 10:51:54+00:00,IBEX integration with PPU for Pulpino V1,0,federicorossifr/ibex_ppu_pv1,585507178,SystemVerilog,ibex_ppu_pv1,1173,1,2024-04-07 05:55:16+00:00,['paper-code'],
112,https://github.com/GudduKumar0208/FIFO-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY-FIFO-USING-UVM-OR-VERIFICATION-OF-FIFO-.git,2022-12-02 02:59:07+00:00,,0,GudduKumar0208/FIFO-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY-FIFO-USING-UVM-OR-VERIFICATION-OF-FIFO-,573253906,SystemVerilog,FIFO-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY-FIFO-USING-UVM-OR-VERIFICATION-OF-FIFO-,9,1,2023-09-09 09:16:26+00:00,[],None
113,https://github.com/yuri-panchul/fpga-soldering-camp.git,2022-12-17 23:33:18+00:00,,0,yuri-panchul/fpga-soldering-camp,579511386,SystemVerilog,fpga-soldering-camp,312,1,2024-02-01 14:44:48+00:00,[],
114,https://github.com/ep2k/dualshock_driver.git,2023-01-11 15:10:10+00:00,DUALSHOCK and DUALSHOCK2 driver for FPGAs,0,ep2k/dualshock_driver,587778905,SystemVerilog,dualshock_driver,4,1,2023-03-13 08:36:32+00:00,[],https://api.github.com/licenses/mit
115,https://github.com/mjhborja/functional_coverage_sv.git,2023-01-14 02:36:14+00:00,Let's learn SystemVerilog functional coverage using the covergroup construct!,0,mjhborja/functional_coverage_sv,588791142,SystemVerilog,functional_coverage_sv,28,1,2023-12-19 14:50:38+00:00,"['functional-coverage', 'learn-systemverilog', 'systemverilog', 'bins', 'cross', 'covergroup', 'coverpoint', 'collect-functional-coverage']",https://api.github.com/licenses/mit
116,https://github.com/PavlosTzitzos/HDLs-intro.git,2023-01-07 17:25:35+00:00,"SystemVerilog , Verilog , Verilog-A , Verilog-AMS tutorial",0,PavlosTzitzos/HDLs-intro,586310497,SystemVerilog,HDLs-intro,21117,1,2023-11-19 02:33:04+00:00,"['verilog-hdl', 'verilog', 'verilog-testbenches', 'vhdl']",None
117,https://github.com/mahadevaswamy05/hi.git,2023-01-27 06:50:19+00:00,,0,mahadevaswamy05/hi,593925740,SystemVerilog,hi,14304,0,2023-01-27 07:06:12+00:00,[],None
118,https://github.com/salih-atabey/axis-fifo-uvm.git,2022-12-30 07:51:14+00:00,AXIS FIFO UVM Simulation,0,salih-atabey/axis-fifo-uvm,583578222,SystemVerilog,axis-fifo-uvm,5,0,2022-12-30 08:04:55+00:00,[],None
119,https://github.com/rubycmarroquin/ARK.git,2023-01-25 06:11:59+00:00,,0,rubycmarroquin/ARK,593063601,SystemVerilog,ARK,24,0,2023-01-25 06:17:21+00:00,[],None
120,https://github.com/talshamira/SysVerilog_Simulation3.git,2023-01-21 01:30:06+00:00,,0,talshamira/SysVerilog_Simulation3,591527671,SystemVerilog,SysVerilog_Simulation3,1558,0,2023-03-25 14:58:39+00:00,[],None
121,https://github.com/YazanHussnain/RISCV-3-stage-pipeline-processor-core.git,2023-01-12 03:56:43+00:00,,0,YazanHussnain/RISCV-3-stage-pipeline-processor-core,587990634,SystemVerilog,RISCV-3-stage-pipeline-processor-core,16,0,2023-02-05 15:35:22+00:00,[],None
122,https://github.com/ksarper1/Bilkent_CS223_Homeworks.git,2023-01-08 13:04:17+00:00,,0,ksarper1/Bilkent_CS223_Homeworks,586524325,SystemVerilog,Bilkent_CS223_Homeworks,2389,0,2023-01-08 13:31:07+00:00,[],None
123,https://github.com/wuqlan111/ARM_AMBA.git,2023-01-09 13:29:54+00:00,Here are some verilog modules that I write to record my learning of verilog. These modules have some defects. Welcome to learn and communicate with you.,0,wuqlan111/ARM_AMBA,586891393,SystemVerilog,ARM_AMBA,1277,0,2023-02-24 12:45:07+00:00,[],https://api.github.com/licenses/gpl-3.0
124,https://github.com/GuruprasadNK/UVM-Basics.git,2022-12-27 16:01:27+00:00,,0,GuruprasadNK/UVM-Basics,582697397,SystemVerilog,UVM-Basics,1,0,2022-12-27 16:12:59+00:00,[],None
125,https://github.com/Howard-121/Digital-System-Design-with-FPGAs.git,2022-12-27 06:03:11+00:00,,0,Howard-121/Digital-System-Design-with-FPGAs,582533065,SystemVerilog,Digital-System-Design-with-FPGAs,33288,0,2022-12-27 06:36:43+00:00,[],None
126,https://github.com/garrettvt/EE-371-Design-of-Digital-Circuits-and-Systems-.git,2023-01-04 00:41:23+00:00,UW Fall 2021,0,garrettvt/EE-371-Design-of-Digital-Circuits-and-Systems-,584960247,SystemVerilog,EE-371-Design-of-Digital-Circuits-and-Systems-,6326,0,2023-01-09 22:32:51+00:00,[],None
127,https://github.com/tkono17/pcecontrol.git,2022-12-23 01:40:23+00:00,,0,tkono17/pcecontrol,581367916,SystemVerilog,pcecontrol,35,0,2022-12-23 07:38:32+00:00,[],None
128,https://github.com/PouyaMahmoody/hackdac_2019.git,2023-01-24 10:58:12+00:00,The SoC used for the beta phase of Hack@DAC 2019.,0,PouyaMahmoody/hackdac_2019,592705414,SystemVerilog,hackdac_2019,10966,0,2023-01-24 11:48:32+00:00,[],
129,https://github.com/thebenperson/Artix-Wolverine.git,2023-01-24 15:55:47+00:00,,0,thebenperson/Artix-Wolverine,592820011,SystemVerilog,Artix-Wolverine,77186,0,2023-01-25 21:49:23+00:00,[],None
130,https://github.com/pviprushi/rv16_cpu.git,2023-02-07 10:17:37+00:00,RISC-V based 16bit cpu,0,pviprushi/rv16_cpu,598539344,SystemVerilog,rv16_cpu,23,0,2023-02-16 09:07:26+00:00,[],None
131,https://github.com/noemiabril/AtariST_MiSTer-DE1-SoC.git,2022-12-04 15:51:00+00:00,Atari STe Core for MiSTer DE1-SoC,0,noemiabril/AtariST_MiSTer-DE1-SoC,574156784,SystemVerilog,AtariST_MiSTer-DE1-SoC,11585,0,2022-12-04 15:51:09+00:00,[],None
132,https://github.com/phuong27102000/uvm_beginner_lab.git,2022-12-05 15:03:30+00:00,"Labs for UVM beginner, should be familiar with System Verilog first",0,phuong27102000/uvm_beginner_lab,574552636,SystemVerilog,uvm_beginner_lab,25,0,2022-12-05 15:07:20+00:00,[],https://api.github.com/licenses/mit
133,https://github.com/alinecristinapinto/multiplicador-binario-sequencial.git,2022-12-04 18:52:32+00:00,,0,alinecristinapinto/multiplicador-binario-sequencial,574207939,SystemVerilog,multiplicador-binario-sequencial,405,0,2023-05-09 14:50:41+00:00,[],None
134,https://github.com/aritra1911/alu.git,2022-12-03 18:25:30+00:00,Verilog Modules for an ALU,0,aritra1911/alu,573883348,SystemVerilog,alu,10,0,2022-12-03 18:29:33+00:00,[],https://api.github.com/licenses/mit
135,https://github.com/sg05060/SoC_Project2.git,2022-12-08 10:45:35+00:00,,0,sg05060/SoC_Project2,575807443,SystemVerilog,SoC_Project2,17,0,2022-12-09 06:51:10+00:00,[],None
136,https://github.com/augustinjk/fork...join-vs-begin...end.git,2022-12-08 05:37:52+00:00,,0,augustinjk/fork...join-vs-begin...end,575706431,SystemVerilog,fork...join-vs-begin...end,3,0,2022-12-08 06:11:03+00:00,[],None
137,https://github.com/mileskt/SpeedyAR_Final_copy.git,2022-12-14 23:14:24+00:00,,0,mileskt/SpeedyAR_Final_copy,578380193,SystemVerilog,SpeedyAR_Final_copy,4664,0,2022-12-14 23:16:15+00:00,[],None
138,https://github.com/italoaraujooj/loac.git,2022-12-01 23:31:07+00:00,Roteiros da disciplina Laboratório de Organização e Arquitetura de Computadores do curso de CC da UFCG.,0,italoaraujooj/loac,573205760,SystemVerilog,loac,3,0,2022-12-01 23:32:07+00:00,[],None
139,https://github.com/frankych/frameworks.validation.vip.clock-vc.git,2022-12-20 06:29:41+00:00,,0,frankych/frameworks.validation.vip.clock-vc,580272501,SystemVerilog,frameworks.validation.vip.clock-vc,57,0,2023-01-01 04:57:37+00:00,[],None
140,https://github.com/bodashka/CA-project.git,2022-12-12 20:35:40+00:00,,0,bodashka/CA-project,577477443,SystemVerilog,CA-project,13647,0,2022-12-12 20:41:32+00:00,[],None
141,https://github.com/fabio-pecora/verilog-multiplier.git,2022-12-09 20:47:00+00:00,,0,fabio-pecora/verilog-multiplier,576427449,SystemVerilog,verilog-multiplier,1,0,2022-12-09 20:47:16+00:00,[],None
142,https://github.com/es2ilver/ComputerArchitecture.git,2023-01-01 07:57:56+00:00,고려대학교 COSE222 컴퓨터구조 (이중희 교수님) 🐯,0,es2ilver/ComputerArchitecture,584072285,SystemVerilog,ComputerArchitecture,7,0,2023-12-08 16:35:48+00:00,[],None
143,https://github.com/mrowaha/simplified-programmable-processor.git,2022-12-20 10:04:30+00:00,,0,mrowaha/simplified-programmable-processor,580336154,SystemVerilog,simplified-programmable-processor,16,0,2023-12-23 09:46:00+00:00,[],None
144,https://github.com/GudduKumar0208/AHB-TO-APB-BRIDGE-AMBA-.git,2022-12-02 02:50:55+00:00,"The AMBA AHB is for high-performance, high clock frequency system modules. The AHB acts as the highperformance backbone system bus. AHB supports the efficient connection of processors. The AMBA APB is optimized for low power consumption and interface reduced complexity to support peripheral functions",0,GudduKumar0208/AHB-TO-APB-BRIDGE-AMBA-,573251938,SystemVerilog,AHB-TO-APB-BRIDGE-AMBA-,26,0,2022-12-02 02:53:25+00:00,[],None
145,https://github.com/tmct-web/i2c_slave_tmct.git,2022-12-18 02:08:43+00:00,i2c_slave_tmct is a basic I2C slave IP core that provides the basic framework for the implementation of custom I2C slave devices.,0,tmct-web/i2c_slave_tmct,579534147,SystemVerilog,i2c_slave_tmct,209,0,2022-12-18 02:37:07+00:00,"['fpga', 'i2c', 'i2c-slave', 'verilog', 'i2c-basic-slave']",
146,https://github.com/T-Szymk/axi_components.git,2022-12-22 13:14:28+00:00,A mixture of AXI components and tests,0,T-Szymk/axi_components,581172095,SystemVerilog,axi_components,84,0,2022-12-22 13:24:37+00:00,[],None
147,https://github.com/jyk2498/SOC_project.git,2022-12-09 08:54:58+00:00,,0,jyk2498/SOC_project,576203538,SystemVerilog,SOC_project,27,0,2022-12-09 09:00:40+00:00,[],None
148,https://github.com/amiteshkr63/SV_Verification.git,2022-12-09 19:06:13+00:00,,0,amiteshkr63/SV_Verification,576401961,SystemVerilog,SV_Verification,14,0,2023-08-29 05:29:48+00:00,[],None
149,https://github.com/fabio-pecora/verilog-subtractor.git,2022-12-09 19:43:16+00:00,"This is the code for a Subtractor, which subtracts two numbers and generates a difference output and a borrow output",0,fabio-pecora/verilog-subtractor,576412018,SystemVerilog,verilog-subtractor,1,0,2022-12-09 19:46:49+00:00,[],None
150,https://github.com/Xiao1Ma/FPGA-project.git,2022-12-11 08:34:25+00:00,管理FPGA项目代码的仓库,0,Xiao1Ma/FPGA-project,576865850,SystemVerilog,FPGA-project,1617,0,2022-12-11 10:40:50+00:00,[],None
151,https://github.com/cmu-stuco-98154/f22-tt02-ngaertne.git,2022-12-05 19:46:54+00:00,TT02 Student Submission: Tiny 4-bit CPU,0,cmu-stuco-98154/f22-tt02-ngaertne,574657568,SystemVerilog,f22-tt02-ngaertne,5489,0,2022-12-12 01:22:45+00:00,[],https://api.github.com/licenses/apache-2.0
152,https://github.com/ishraqtashdid/axi_memory_system.git,2022-12-05 08:33:41+00:00,,0,ishraqtashdid/axi_memory_system,574404180,SystemVerilog,axi_memory_system,10,0,2022-12-08 17:19:18+00:00,[],None
153,https://github.com/shariethernet/formal_axi_lite_ram.git,2022-12-04 17:47:19+00:00,,0,shariethernet/formal_axi_lite_ram,574189893,SystemVerilog,formal_axi_lite_ram,4,0,2022-12-04 17:48:23+00:00,[],None
154,https://github.com/flaviens/veriskewsmall-ibex.git,2022-12-09 10:25:37+00:00,,0,flaviens/veriskewsmall-ibex,576233194,SystemVerilog,veriskewsmall-ibex,466,0,2022-12-09 10:26:18+00:00,[],None
155,https://github.com/Fall-2022-Classes/fa22-final-project-team-2.git,2022-12-07 22:10:37+00:00,fa22-final-project-team-2 created by GitHub Classroom,0,Fall-2022-Classes/fa22-final-project-team-2,575602643,SystemVerilog,fa22-final-project-team-2,12,0,2022-12-07 22:12:20+00:00,[],None
156,https://github.com/cmu-stuco-98154/f22-tt02-stroucki.git,2022-12-12 01:25:24+00:00,TT02 Student Submission: Horse and Cowboy Game,0,cmu-stuco-98154/f22-tt02-stroucki,577110185,SystemVerilog,f22-tt02-stroucki,2686,0,2022-12-12 01:27:34+00:00,[],https://api.github.com/licenses/apache-2.0
157,https://github.com/Dr-Mirzakuchaki-IUST-TAs/400721019-400721055.git,2022-12-01 14:32:27+00:00,,2,Dr-Mirzakuchaki-IUST-TAs/400721019-400721055,573022167,SystemVerilog,400721019-400721055,4458,0,2023-01-25 20:12:48+00:00,[],None
158,https://github.com/Destinedone12/fault_tolerant_DC_designs.git,2022-12-13 17:56:10+00:00,,0,Destinedone12/fault_tolerant_DC_designs,577868279,SystemVerilog,fault_tolerant_DC_designs,978,0,2022-12-14 04:00:51+00:00,[],None
159,https://github.com/Leonte-Tudor/Verification-Environment-101.git,2022-12-14 09:14:23+00:00,The first System Verilog verification environment I made during my autumn practice at AMD.,0,Leonte-Tudor/Verification-Environment-101,578104754,SystemVerilog,Verification-Environment-101,342,0,2022-12-14 09:18:30+00:00,[],https://api.github.com/licenses/gpl-2.0
160,https://github.com/AlexrAlves/counter_ip.git,2023-01-11 18:44:34+00:00,,0,AlexrAlves/counter_ip,587855952,SystemVerilog,counter_ip,20,0,2023-01-20 15:03:55+00:00,[],None
161,https://github.com/preetambasti97/Pre-Silicon-City.git,2023-01-21 08:36:21+00:00,For pre-silicon validation final project,2,preetambasti97/Pre-Silicon-City,591601764,SystemVerilog,Pre-Silicon-City,1871,0,2023-03-13 20:33:00+00:00,[],None
162,https://github.com/ChillMonk21/uvmTutorial.git,2023-01-21 19:54:37+00:00,,0,ChillMonk21/uvmTutorial,591766934,SystemVerilog,uvmTutorial,17,0,2023-01-22 15:48:25+00:00,[],https://api.github.com/licenses/gpl-3.0
163,https://github.com/tukshetty/SystemVerilog.git,2023-01-22 20:00:36+00:00,Basics for Verilog and SystemVerilog and Digital System Prototyping,0,tukshetty/SystemVerilog,592062539,SystemVerilog,SystemVerilog,6249,0,2023-01-30 01:45:39+00:00,[],None
164,https://github.com/OrenSarShalom/Verilog-coding-.git,2023-01-18 10:53:11+00:00,Here I upload My Verilog coding I do on My free time,0,OrenSarShalom/Verilog-coding-,590408761,SystemVerilog,Verilog-coding-,16,0,2023-05-23 14:33:07+00:00,[],https://api.github.com/licenses/gpl-3.0
165,https://github.com/Nrusinga/100DaysOfRTL.git,2023-01-10 01:58:34+00:00,,0,Nrusinga/100DaysOfRTL,587117591,SystemVerilog,100DaysOfRTL,100,0,2023-01-11 02:30:39+00:00,[],None
166,https://github.com/pgfarley/snow-globe.git,2023-01-10 23:22:43+00:00,,0,pgfarley/snow-globe,587512388,SystemVerilog,snow-globe,525,0,2023-03-12 18:07:05+00:00,[],https://api.github.com/licenses/mit
167,https://github.com/ibrahimhakkicandan/Implementing-Blitter-on-FPGA.git,2023-02-04 20:59:12+00:00,,0,ibrahimhakkicandan/Implementing-Blitter-on-FPGA,597535551,SystemVerilog,Implementing-Blitter-on-FPGA,17,0,2023-05-20 22:22:05+00:00,[],None
168,https://github.com/luanbalbino/UVM_tb_external_model.git,2023-01-17 19:43:44+00:00,Implement a UVM testbench for a DUT with a external model compare.,1,luanbalbino/UVM_tb_external_model,590163566,SystemVerilog,UVM_tb_external_model,133,0,2023-01-23 12:04:32+00:00,[],None
169,https://github.com/Paink64/Pipeline.git,2023-01-27 19:56:54+00:00,RISC-V Computer Architecture,0,Paink64/Pipeline,594185538,SystemVerilog,Pipeline,160,0,2023-01-27 19:57:02+00:00,[],None
170,https://github.com/tannerleise/FullResolutionFrameBuffer.git,2023-01-29 20:50:27+00:00,Project for FPGA class to construct a frame buffer system using the SDRAM on the DE10-Standard board,0,tannerleise/FullResolutionFrameBuffer,594855554,SystemVerilog,FullResolutionFrameBuffer,24228,0,2023-01-29 20:54:59+00:00,[],None
171,https://github.com/lvdund/btl_thong_tin_vo_tuyen.git,2023-01-27 14:18:42+00:00,,0,lvdund/btl_thong_tin_vo_tuyen,594065634,SystemVerilog,btl_thong_tin_vo_tuyen,39,0,2023-02-02 17:12:03+00:00,[],None
172,https://github.com/mohira/cpubook.git,2023-02-05 09:54:21+00:00,,0,mohira/cpubook,597679207,SystemVerilog,cpubook,12,0,2023-02-05 10:01:25+00:00,[],None
173,https://github.com/teobiton/cva6-contest.git,2023-01-27 13:15:11+00:00,,0,teobiton/cva6-contest,594042099,SystemVerilog,cva6-contest,41858,0,2024-02-29 10:30:32+00:00,[],
174,https://github.com/akliluaron/Waveshine.git,2022-12-14 23:57:15+00:00,,0,akliluaron/Waveshine,578388837,SystemVerilog,Waveshine,361,0,2022-12-15 00:00:50+00:00,[],None
175,https://github.com/thomabir/SvLibrary.git,2022-12-15 15:02:32+00:00,A System Verilog library for FPGA development,0,thomabir/SvLibrary,578652026,SystemVerilog,SvLibrary,26,0,2022-12-15 15:34:10+00:00,[],https://api.github.com/licenses/cern-ohl-p-2.0
176,https://github.com/naftali10/UVM-Testbench-for-Microcontroller.git,2022-12-18 09:47:19+00:00,"UVM testbench for an in-order single-pipeline processor, capable of executing 6 different operations.",0,naftali10/UVM-Testbench-for-Microcontroller,579616083,SystemVerilog,UVM-Testbench-for-Microcontroller,470,0,2022-12-18 10:41:56+00:00,[],None
177,https://github.com/talshamira/Simulation_1-SystemVerilog.git,2022-12-17 21:23:07+00:00,,0,talshamira/Simulation_1-SystemVerilog,579487675,SystemVerilog,Simulation_1-SystemVerilog,1953,0,2023-03-25 14:59:04+00:00,[],None
178,https://github.com/arskell/bcd_add.git,2022-12-25 17:48:23+00:00,BCD number adder written on HDL,0,arskell/bcd_add,582106972,SystemVerilog,bcd_add,1,0,2022-12-25 17:58:17+00:00,[],None
179,https://github.com/Lasdnaym/Overall-EE271-EE371.git,2022-12-31 03:51:50+00:00,,0,Lasdnaym/Overall-EE271-EE371,583824496,SystemVerilog,Overall-EE271-EE371,2,0,2022-12-31 03:55:24+00:00,[],None
180,https://github.com/sam10486/TCAS_NWC_implement.git,2022-12-12 13:05:12+00:00,,0,sam10486/TCAS_NWC_implement,577309418,SystemVerilog,TCAS_NWC_implement,227,0,2022-12-12 13:08:18+00:00,[],None
181,https://github.com/augustinjk/ALU---Design-Verification---with-Assertion-checking.git,2022-12-12 09:56:45+00:00,,0,augustinjk/ALU---Design-Verification---with-Assertion-checking,577243002,SystemVerilog,ALU---Design-Verification---with-Assertion-checking,4,0,2022-12-12 10:33:25+00:00,[],None
182,https://github.com/sasatree/exercise.git,2022-12-11 05:47:33+00:00,,0,sasatree/exercise,576832520,SystemVerilog,exercise,638,0,2022-12-11 05:57:04+00:00,[],None
183,https://github.com/usmank11/Pong.git,2023-01-08 21:51:52+00:00,Pong game written in SystemVerilog,0,usmank11/Pong,586654762,SystemVerilog,Pong,10,0,2023-01-08 23:13:24+00:00,[],None
184,https://github.com/Rakesh-Gourani/uvm.git,2023-01-07 02:35:10+00:00,Learn and Practice UVM,0,Rakesh-Gourani/uvm,586122708,SystemVerilog,uvm,4,0,2023-02-03 03:00:44+00:00,[],None
185,https://github.com/gn223/tessaiga.git,2022-12-23 06:13:04+00:00,,0,gn223/tessaiga,581420493,SystemVerilog,tessaiga,4,0,2023-01-05 10:43:31+00:00,[],None
186,https://github.com/blayney/MISC-V.git,2022-12-23 04:38:47+00:00,A very misc CPU,0,blayney/MISC-V,581401633,SystemVerilog,MISC-V,5,0,2022-12-23 04:41:02+00:00,[],None
187,https://github.com/Engghassanali/Three-Stage-Pipeline-with-Uart-configuration-and-verification-with-xilin.git,2022-12-23 14:03:21+00:00,,0,Engghassanali/Three-Stage-Pipeline-with-Uart-configuration-and-verification-with-xilin,581545819,SystemVerilog,Three-Stage-Pipeline-with-Uart-configuration-and-verification-with-xilin,12,0,2022-12-23 14:06:33+00:00,[],None
188,https://github.com/garrettvt/EE-469-Computer-Architecture-I.git,2023-01-09 22:38:52+00:00,UW Fall 2021,0,garrettvt/EE-469-Computer-Architecture-I,587076130,SystemVerilog,EE-469-Computer-Architecture-I,69,0,2023-01-09 23:03:54+00:00,[],None
189,https://github.com/namansehgal95/ECE_111_TA_codes.git,2023-01-23 16:10:41+00:00,Creating this repo to share example verilog codes to students of ECE 111,0,namansehgal95/ECE_111_TA_codes,592385227,SystemVerilog,ECE_111_TA_codes,16,0,2023-01-23 16:55:07+00:00,[],None
190,https://github.com/Anihilat0r/CentralPU.git,2023-01-24 22:07:55+00:00,,0,Anihilat0r/CentralPU,592952973,SystemVerilog,CentralPU,43,0,2023-02-13 18:17:32+00:00,[],None
191,https://github.com/jamesstocktonj1/BitstreamNetwork.git,2023-02-04 11:16:44+00:00,,0,jamesstocktonj1/BitstreamNetwork,597379408,SystemVerilog,BitstreamNetwork,1220,0,2023-11-05 14:16:06+00:00,[],None
192,https://github.com/KLVA1217/CORDIC_Algorithim_Imp_KLVA.git,2023-02-06 03:40:38+00:00,Graduate Project: CORDIC Algorithim Implementation,0,KLVA1217/CORDIC_Algorithim_Imp_KLVA,597945498,SystemVerilog,CORDIC_Algorithim_Imp_KLVA,25,0,2023-03-05 06:52:32+00:00,[],None
193,https://github.com/BrianDxd/Digital_Design.git,2022-12-05 23:54:31+00:00,,0,BrianDxd/Digital_Design,574724053,SystemVerilog,Digital_Design,18,0,2022-12-05 23:56:24+00:00,[],None
194,https://github.com/vborchsh/sv-uart.git,2023-01-23 15:30:53+00:00,,0,vborchsh/sv-uart,592368856,SystemVerilog,sv-uart,24,0,2024-04-04 09:42:02+00:00,[],https://api.github.com/licenses/mit
195,https://github.com/ndhulipala1/comparch_synth.git,2022-12-04 17:12:54+00:00,,1,ndhulipala1/comparch_synth,574180100,SystemVerilog,comparch_synth,2869,0,2022-12-04 17:23:32+00:00,[],None
196,https://github.com/KAMOME-code/Elliptic-curve-cryptography-ECDSA-Secp256k1-signature.git,2022-12-05 06:05:24+00:00,"Input: hash, private key Output: signature ",0,KAMOME-code/Elliptic-curve-cryptography-ECDSA-Secp256k1-signature,574358963,SystemVerilog,Elliptic-curve-cryptography-ECDSA-Secp256k1-signature,19,0,2022-12-05 20:37:44+00:00,[],None
197,https://github.com/Boulder1999/Verification-Using-SystemVerilog-From-Lab09-.git,2022-12-08 07:50:45+00:00,,0,Boulder1999/Verification-Using-SystemVerilog-From-Lab09-,575745919,SystemVerilog,Verification-Using-SystemVerilog-From-Lab09-,2696,0,2022-12-08 07:53:23+00:00,[],None
198,https://github.com/Haz99/param_decoder_demo.git,2022-12-12 11:20:44+00:00,,0,Haz99/param_decoder_demo,577272101,SystemVerilog,param_decoder_demo,6,0,2023-02-17 11:21:28+00:00,[],None
199,https://github.com/Arwa-Ibrahim/Digital_Verification_Course.git,2022-12-10 15:37:42+00:00,,0,Arwa-Ibrahim/Digital_Verification_Course,576668037,SystemVerilog,Digital_Verification_Course,25,0,2022-12-26 05:48:33+00:00,[],None
200,https://github.com/sg05060/Project_2.git,2022-12-09 07:43:56+00:00,,0,sg05060/Project_2,576182176,SystemVerilog,Project_2,23,0,2022-12-09 07:50:22+00:00,[],None
201,https://github.com/lehar303/100daysofrtl.git,2023-01-26 17:44:00+00:00,"Challenging myself to work on RTL Design and Verification everyday, for 100 days!",0,lehar303/100daysofrtl,593724837,SystemVerilog,100daysofrtl,11,0,2023-01-26 18:48:11+00:00,[],None
202,https://github.com/AhmedAsim-69/Three-Stage-Pipeline-RISC-V.git,2023-01-26 11:36:13+00:00,,0,AhmedAsim-69/Three-Stage-Pipeline-RISC-V,593587081,SystemVerilog,Three-Stage-Pipeline-RISC-V,10,0,2023-01-26 14:12:23+00:00,[],None
203,https://github.com/rpatel747/8BitCalc.git,2023-01-26 14:00:30+00:00,An 8 bit calculator built using System Verilog for ECE 479 VLSI Design. Addition is done on a fast multipler and multiplication is done using a fast multiplier.,0,rpatel747/8BitCalc,593636965,SystemVerilog,8BitCalc,364,0,2023-01-26 14:01:36+00:00,[],None
204,https://github.com/diegob94/mini_i_cache.git,2023-01-06 05:15:03+00:00,SVUT testbench example,0,diegob94/mini_i_cache,585797953,SystemVerilog,mini_i_cache,28,0,2023-01-06 05:16:17+00:00,[],https://api.github.com/licenses/gpl-3.0
205,https://github.com/masood4y/PotatoMachine_CPU.git,2022-12-24 22:45:30+00:00,"Unpipelined, Non-Forwarding Basic ""Potato Machine"" CPU ",0,masood4y/PotatoMachine_CPU,581928218,SystemVerilog,PotatoMachine_CPU,170,0,2023-05-12 17:32:41+00:00,[],None
206,https://github.com/anson2191/VSD_final_project.git,2022-12-27 09:09:16+00:00,,0,anson2191/VSD_final_project,582578827,SystemVerilog,VSD_final_project,3,0,2022-12-28 05:06:46+00:00,[],None
207,https://github.com/Argentum11/DE0_mcu.git,2022-12-19 17:32:27+00:00,A simple mcu for DE0,0,Argentum11/DE0_mcu,580088773,SystemVerilog,DE0_mcu,59906,0,2023-04-01 15:03:28+00:00,"['assembly', 'systemverilog', 'de0-board']",None
208,https://github.com/shubhampatel2610/Elevator-system-implementation-in-Verilog-HDL.git,2022-12-13 16:31:06+00:00,,0,shubhampatel2610/Elevator-system-implementation-in-Verilog-HDL,577837368,SystemVerilog,Elevator-system-implementation-in-Verilog-HDL,1743,0,2022-12-13 16:34:48+00:00,[],None
209,https://github.com/Its-Masoom/cheetah_core.git,2022-12-14 21:46:38+00:00,This is a riscv32I five stage pipeline core,0,Its-Masoom/cheetah_core,578359473,SystemVerilog,cheetah_core,1270,0,2023-02-11 20:53:45+00:00,[],None
210,https://github.com/aris134/COMPSCI550.git,2022-12-18 02:26:36+00:00,,0,aris134/COMPSCI550,579537038,SystemVerilog,COMPSCI550,108073,0,2022-12-18 02:34:30+00:00,[],None
211,https://github.com/thiagomslv/veririsc.git,2022-12-13 21:05:12+00:00,,0,thiagomslv/veririsc,577925451,SystemVerilog,veririsc,5,0,2022-12-13 21:12:23+00:00,[],None
212,https://github.com/amiteshkr63/AXI4_design.git,2023-01-23 13:56:43+00:00,AXI4_design,0,amiteshkr63/AXI4_design,592329751,SystemVerilog,AXI4_design,151,0,2023-08-29 05:28:42+00:00,[],None
213,https://github.com/Mahendra-Maddirala/LC3-Micro-Controller-UVM-.git,2023-01-05 15:22:17+00:00,,0,Mahendra-Maddirala/LC3-Micro-Controller-UVM-,585597469,SystemVerilog,LC3-Micro-Controller-UVM-,4060,0,2023-01-05 15:27:36+00:00,[],None
214,https://github.com/Mahendra-Maddirala/LC3-Adding-a-Decode-Environment-B-UVM-.git,2023-01-05 15:10:25+00:00,,0,Mahendra-Maddirala/LC3-Adding-a-Decode-Environment-B-UVM-,585593227,SystemVerilog,LC3-Adding-a-Decode-Environment-B-UVM-,14714,0,2023-01-05 15:23:52+00:00,[],None
215,https://github.com/AbelliSimone/ES.git,2023-01-11 16:24:51+00:00,"Embedded Systems project, consisting in two tests: one for the AXI communication protocol of the Cortex M3 Arm processor and the other for the AHB protocol.",0,AbelliSimone/ES,587807060,SystemVerilog,ES,12,0,2023-01-11 16:25:31+00:00,[],None
216,https://github.com/glkclass/dutb.git,2023-02-03 11:01:13+00:00,UVM-based verification framework,0,glkclass/dutb,596979354,SystemVerilog,dutb,99,0,2023-02-03 11:10:54+00:00,[],https://api.github.com/licenses/apache-2.0
217,https://github.com/cse140l-wi23/Lab2_Starter.git,2023-02-01 06:43:09+00:00,,0,cse140l-wi23/Lab2_Starter,595956974,SystemVerilog,Lab2_Starter,623,0,2023-02-13 19:08:54+00:00,[],None
218,https://github.com/embedded-explorer/UART-Implementation.git,2022-12-29 17:39:08+00:00,Documents implementation of UART Controller using System-Verilog and Testing using Arty-S7 FPGA,0,embedded-explorer/UART-Implementation,583410431,SystemVerilog,UART-Implementation,523,0,2022-12-29 17:48:25+00:00,[],None
219,https://github.com/OmerRastgar/computer-architecture-pipelined-arm-processor.git,2023-01-08 09:01:29+00:00,,0,OmerRastgar/computer-architecture-pipelined-arm-processor,586470981,SystemVerilog,computer-architecture-pipelined-arm-processor,1062,0,2023-01-08 10:21:02+00:00,[],None
220,https://github.com/99swetha/Simulation-of-Last-Level-Cache.git,2023-01-17 20:13:39+00:00,Designed and Simulated the Last Level Cache (LLC) for a processor that can be used with up to three other processors in a shared memory configuration.,0,99swetha/Simulation-of-Last-Level-Cache,590173797,SystemVerilog,Simulation-of-Last-Level-Cache,209,0,2023-01-17 20:15:47+00:00,[],None
221,https://github.com/Lvwings/QAM-16.git,2023-01-19 06:21:08+00:00,QAM-16,0,Lvwings/QAM-16,590762116,SystemVerilog,QAM-16,7139,0,2023-01-19 06:29:25+00:00,[],https://api.github.com/licenses/mit
222,https://github.com/ozguregesire/SimpleProcessor.git,2023-01-16 17:04:26+00:00,"A processor which supports seven instructions which are Load, Store, Add, Subtract, Ascending Sort, Descending Sort and Display.",0,ozguregesire/SimpleProcessor,589673151,SystemVerilog,SimpleProcessor,8,0,2023-01-16 17:11:44+00:00,[],None
223,https://github.com/Ahmed0100/square_wave_display_vga_v1_0_fpga.git,2023-01-21 15:30:39+00:00,square_wave_display_vga_v1_0_fpga,0,Ahmed0100/square_wave_display_vga_v1_0_fpga,591699161,SystemVerilog,square_wave_display_vga_v1_0_fpga,7,0,2023-01-21 15:31:25+00:00,[],None
224,https://github.com/KennethWilke/sv-uart.git,2023-01-21 23:08:26+00:00,My SystemVerilog implementation of a UART,0,KennethWilke/sv-uart,591804387,SystemVerilog,sv-uart,2,0,2023-01-21 23:13:12+00:00,[],https://api.github.com/licenses/mit
225,https://github.com/Iskunion/unisys-soc.git,2023-02-05 05:03:27+00:00,A simple riscv soc for a course work,0,Iskunion/unisys-soc,597620976,SystemVerilog,unisys-soc,175,0,2023-10-21 19:19:19+00:00,[],None
226,https://github.com/Ernest0o/FPGAmaster.git,2022-12-14 03:21:45+00:00,Main SV file for the FPGA master Vivado project,0,Ernest0o/FPGAmaster,578010782,SystemVerilog,FPGAmaster,7,0,2022-12-14 03:37:26+00:00,[],None
227,https://github.com/namansehgal95/ECE-111-HW-Assignments.git,2023-02-06 22:31:33+00:00,,0,namansehgal95/ECE-111-HW-Assignments,598337555,,ECE-111-HW-Assignments,8,0,2023-02-06 19:09:08+00:00,[],None
228,https://github.com/aeshes/fpga-projects.git,2023-01-28 07:10:16+00:00,Мои опыты с FPGA Altera/Xilinx,0,aeshes/fpga-projects,594323052,SystemVerilog,fpga-projects,89,0,2023-01-28 07:12:37+00:00,[],None
229,https://github.com/ruly-rudel/leve.git,2023-01-10 10:34:32+00:00,tiny RISC-V RV64G processor,0,ruly-rudel/leve,587258996,SystemVerilog,leve,747,0,2023-01-31 23:21:10+00:00,[],https://api.github.com/licenses/mit
230,https://github.com/LevyMatan/Synchronous-FIFO-memory.git,2022-12-19 15:27:00+00:00,,0,LevyMatan/Synchronous-FIFO-memory,580045164,SystemVerilog,Synchronous-FIFO-memory,952,0,2023-01-08 13:32:16+00:00,[],None
231,https://github.com/mauriya0202/RISC_V_R_type_RV32.git,2023-01-02 03:40:45+00:00,,0,mauriya0202/RISC_V_R_type_RV32,584266532,SystemVerilog,RISC_V_R_type_RV32,4,0,2023-01-02 04:15:51+00:00,[],None
232,https://github.com/scalable-arch/DRAMController.git,2023-01-04 10:32:13+00:00,,2,scalable-arch/DRAMController,585105613,SystemVerilog,DRAMController,4405,0,2023-01-04 11:13:22+00:00,[],https://api.github.com/licenses/apache-2.0
233,https://github.com/charkster/button_press_uart.git,2023-01-15 22:50:22+00:00,"This FPGA configuration measures the ""round trip"" latency from when the FPGA sends a UART byte to the host and a host response is received by the FPGA.",0,charkster/button_press_uart,589361287,SystemVerilog,button_press_uart,138,0,2023-04-20 06:15:04+00:00,[],https://api.github.com/licenses/mit
234,https://github.com/lichye/TWRK_R10K_Style_Pipeline.git,2022-12-07 02:02:26+00:00,,1,lichye/TWRK_R10K_Style_Pipeline,575211376,SystemVerilog,TWRK_R10K_Style_Pipeline,125,0,2023-03-27 16:59:06+00:00,[],None
235,https://github.com/kairotronix/dual_clk_fifo.git,2022-12-27 03:50:54+00:00,Dual-clock (asynchronous) FIFO written in SystemVerilog.,0,kairotronix/dual_clk_fifo,582507547,SystemVerilog,dual_clk_fifo,3,0,2022-12-27 03:56:46+00:00,[],None
236,https://github.com/HepoH3/SV4DV.git,2022-12-27 12:24:37+00:00,SystemVerilog for Design Verification,2,HepoH3/SV4DV,582632272,SystemVerilog,SV4DV,62,0,2023-01-16 13:01:45+00:00,[],https://api.github.com/licenses/cc-by-sa-4.0
237,https://github.com/An0nym0us-27/Sequential-Tail-Lights-System-Verilog.git,2023-01-12 02:33:46+00:00,This was to replicate the design of the newer generation Mustang sequential tail lights on an FPGA.,0,An0nym0us-27/Sequential-Tail-Lights-System-Verilog,587972349,SystemVerilog,Sequential-Tail-Lights-System-Verilog,2,0,2023-01-12 02:34:28+00:00,[],None
238,https://github.com/inkeliz/verilog-tb-final.git,2023-01-12 09:37:48+00:00,"Trabalho de Sistemas Lógicos, portado para Verilog. Criei com o propósito de testar e relembrar um pouco o Verilog/VHDL. Ultima vez que usei VHDL foi em 2017/2018, para voltage-glitch-attack.",0,inkeliz/verilog-tb-final,588083991,SystemVerilog,verilog-tb-final,2,0,2023-01-12 17:12:57+00:00,[],https://api.github.com/licenses/mit
239,https://github.com/matthew-lowe/cpu.git,2023-01-21 22:58:17+00:00,CPU in systemverilog designed to run AQA assembly,0,matthew-lowe/cpu,591802695,SystemVerilog,cpu,6,0,2023-08-22 21:34:43+00:00,[],None
240,https://github.com/vvgulyaev/uvm.git,2023-01-22 07:16:44+00:00,Examples of the uvm test environments,0,vvgulyaev/uvm,591877464,SystemVerilog,uvm,16,0,2023-01-22 07:23:44+00:00,[],None
241,https://github.com/Nagarjun444/inside-constraint.git,2022-12-18 06:18:09+00:00,inside constarint example in system verilog ,0,Nagarjun444/inside-constraint,579574849,SystemVerilog,inside-constraint,1,0,2022-12-18 06:20:19+00:00,[],None
242,https://github.com/meenalpannase/Ral_model4_T.git,2022-12-20 17:16:21+00:00,,0,meenalpannase/Ral_model4_T,580484603,SystemVerilog,Ral_model4_T,384,0,2023-01-05 05:37:14+00:00,[],None
243,https://github.com/MarcEftimie/pipelined-RISC-V-CPU.git,2022-12-16 04:34:27+00:00,,0,MarcEftimie/pipelined-RISC-V-CPU,578871302,SystemVerilog,pipelined-RISC-V-CPU,367,0,2023-04-16 23:42:29+00:00,[],None
244,https://github.com/Kashyappatel14/Verification_repo.git,2023-01-28 05:47:01+00:00,Imp example in sv and uvm,0,Kashyappatel14/Verification_repo,594306128,SystemVerilog,Verification_repo,4700,0,2023-01-28 06:03:23+00:00,[],https://api.github.com/licenses/apache-2.0
245,https://github.com/Kholoud-Ebrahim/Adder.git,2023-01-25 23:47:01+00:00,implementation and test bench using System Verilog,1,Kholoud-Ebrahim/Adder,593415029,SystemVerilog,Adder,32,0,2023-01-25 23:49:49+00:00,[],None
246,https://github.com/lebro991/user_ip_model.git,2023-01-27 07:35:54+00:00,常用的小模块,0,lebro991/user_ip_model,593937155,SystemVerilog,user_ip_model,4187,0,2023-01-27 07:42:15+00:00,[],None
247,https://github.com/Moonleaves/FPGA-final-project-simeple-dodge-game.git,2023-01-08 15:46:40+00:00,,0,Moonleaves/FPGA-final-project-simeple-dodge-game,586568325,SystemVerilog,FPGA-final-project-simeple-dodge-game,6105,0,2023-01-15 12:25:58+00:00,[],None
248,https://github.com/KrishnaR7626/De10LiteFPGA-Car-Proximity-Sensor.git,2023-01-02 20:03:02+00:00,,0,KrishnaR7626/De10LiteFPGA-Car-Proximity-Sensor,584521087,SystemVerilog,De10LiteFPGA-Car-Proximity-Sensor,5,0,2023-01-02 20:28:20+00:00,[],https://api.github.com/licenses/mit
249,https://github.com/dan-314159/hdl_common.git,2023-01-07 01:34:01+00:00,Reusable code libraries.,0,dan-314159/hdl_common,586113177,SystemVerilog,hdl_common,6,0,2023-01-07 19:32:28+00:00,[],https://api.github.com/licenses/mit
250,https://github.com/SmokyOw1/rz_uart.git,2023-01-19 10:32:36+00:00,,0,SmokyOw1/rz_uart,590837922,SystemVerilog,rz_uart,18,0,2023-01-19 10:33:58+00:00,[],https://api.github.com/licenses/agpl-3.0
251,https://github.com/nahmadi95/test.git,2022-12-01 19:25:12+00:00,,0,nahmadi95/test,573136765,SystemVerilog,test,2,0,2022-12-01 20:31:07+00:00,[],None
252,https://github.com/messes2/ECE-385-Final-project.git,2022-12-12 04:56:02+00:00,I made a motion controlled digital synthesizer known as a puppeteer theremin that uses AI to get motion control data from a server hosted on a phone onto an FPGA.,0,messes2/ECE-385-Final-project,577155108,SystemVerilog,ECE-385-Final-project,9956,0,2023-04-11 15:04:35+00:00,"['ai', 'audio-processing', 'ece385', 'embedded-systems', 'fpga', 'fpga-soc', 'pytesseract', 'python', 'systemverilog', 'tesseract-ocr']",https://api.github.com/licenses/mit
253,https://github.com/laxitshahi/EECS3201_Final_Project.git,2022-12-06 17:10:47+00:00,,0,laxitshahi/EECS3201_Final_Project,575063100,SystemVerilog,EECS3201_Final_Project,7,0,2022-12-06 17:11:08+00:00,[],None
254,https://github.com/mcaveniathor/gol_fpga.git,2022-12-06 19:42:35+00:00,,0,mcaveniathor/gol_fpga,575115604,SystemVerilog,gol_fpga,10787,0,2023-02-03 01:47:39+00:00,[],None
255,https://github.com/kdbr2023/nvc.git,2023-01-29 15:16:36+00:00,Verification Components for Network Processors,0,kdbr2023/nvc,594763149,SystemVerilog,nvc,38,0,2023-02-27 16:19:26+00:00,[],https://api.github.com/licenses/lgpl-3.0
256,https://github.com/NYU-Processor-Design/onboarding-lab-4.git,2023-02-05 18:28:27+00:00,Onboarding Lab for Week 4,17,NYU-Processor-Design/onboarding-lab-4,597820190,SystemVerilog,onboarding-lab-4,10,0,2023-02-05 18:28:48+00:00,[],https://api.github.com/licenses/cc0-1.0
257,https://github.com/ase12345636/1111-LogicDesign-FinalProject.git,2023-01-08 12:21:05+00:00,"Use FPGA(EP3C10E144C8), SystemVerilog and LED...etc to make the guess number game.",1,ase12345636/1111-LogicDesign-FinalProject,586513825,SystemVerilog,1111-LogicDesign-FinalProject,34617,0,2023-12-01 18:46:40+00:00,[],None
258,https://github.com/Ammar-10xe/RISCV-32I-3-Stage-Pipelined-with-CSR-Interrupt-Handling.git,2022-12-28 16:39:29+00:00,This repo contains the 3 stage pipelined processor with CSR interrupt handling ,0,Ammar-10xe/RISCV-32I-3-Stage-Pipelined-with-CSR-Interrupt-Handling,583060704,SystemVerilog,RISCV-32I-3-Stage-Pipelined-with-CSR-Interrupt-Handling,688,0,2022-12-28 16:42:27+00:00,[],None
259,https://github.com/JuledLikalla/Bfloat16-adder.git,2022-12-09 01:42:44+00:00,An implementation of an Bfloat16 adder,1,JuledLikalla/Bfloat16-adder,576091508,SystemVerilog,Bfloat16-adder,11,0,2024-02-05 17:32:38+00:00,[],None
260,https://github.com/KashyapKurella3000/Display_Controller_For_SOC_With_4_Slaves.git,2023-01-11 06:29:49+00:00,,0,KashyapKurella3000/Display_Controller_For_SOC_With_4_Slaves,587606526,SystemVerilog,Display_Controller_For_SOC_With_4_Slaves,1153,0,2023-01-11 06:40:24+00:00,[],None
261,https://github.com/SvetlanaLipatova/SCR1.git,2022-12-18 08:38:02+00:00,,0,SvetlanaLipatova/SCR1,579601565,SystemVerilog,SCR1,4050,0,2022-12-18 08:38:38+00:00,[],
262,https://github.com/pv0164/ASIC-Design.git,2022-12-20 18:50:31+00:00,,0,pv0164/ASIC-Design,580514116,SystemVerilog,ASIC-Design,3869,0,2022-12-20 18:55:45+00:00,[],None
263,https://github.com/AmirHosseinYari2002/Floating_Point_Adder.git,2023-01-05 11:46:02+00:00,,0,AmirHosseinYari2002/Floating_Point_Adder,585523744,SystemVerilog,Floating_Point_Adder,876,0,2023-10-14 18:40:37+00:00,[],None
264,https://github.com/pvip-nitin/cb.git,2023-01-02 04:40:04+00:00,,0,pvip-nitin/cb,584276045,SystemVerilog,cb,2,0,2023-01-02 19:53:17+00:00,[],None
265,https://github.com/skudlur/100DaysOfSV.git,2023-01-02 05:59:54+00:00,,0,skudlur/100DaysOfSV,584290463,SystemVerilog,100DaysOfSV,4,0,2023-01-02 06:57:47+00:00,[],None
266,https://github.com/kevindkim723/PWM_Generator.git,2023-01-06 22:56:25+00:00,AXI4 standard PWM generation unit HDL,0,kevindkim723/PWM_Generator,586087694,SystemVerilog,PWM_Generator,34,0,2023-01-06 22:57:18+00:00,[],None
267,https://github.com/Nitish1371/UVMF_adder.git,2023-01-03 04:33:51+00:00,,0,Nitish1371/UVMF_adder,584620233,SystemVerilog,UVMF_adder,12046,0,2023-01-03 04:58:08+00:00,[],None
268,https://github.com/ShawnMa123/UVM_reference.git,2022-12-03 02:39:57+00:00,,0,ShawnMa123/UVM_reference,573659362,SystemVerilog,UVM_reference,26721,0,2022-12-04 15:28:52+00:00,[],None
269,https://github.com/ParJavadian/MIPS-processor.git,2022-12-02 10:55:18+00:00,,0,ParJavadian/MIPS-processor,573390115,SystemVerilog,MIPS-processor,2452,0,2022-12-02 11:03:05+00:00,[],None
270,https://github.com/Rukshanth-s/Intern.git,2023-01-26 03:12:25+00:00,Intern work,0,Rukshanth-s/Intern,593458689,SystemVerilog,Intern,41,0,2023-01-26 06:26:21+00:00,[],None
271,https://github.com/mohsenkamini/SBU-Digital-Logic-Design-Final-Project.git,2023-01-25 17:21:57+00:00,,0,mohsenkamini/SBU-Digital-Logic-Design-Final-Project,593294367,SystemVerilog,SBU-Digital-Logic-Design-Final-Project,1927,0,2023-01-27 17:33:59+00:00,[],None
272,https://github.com/cyschlueter/Segway_Project-V2.git,2023-01-18 03:24:15+00:00,Verilog code describing hardware that controls a Segway. Uses UART and Spi protocols to communicate with user and segway's physical sensors. Implements a PID algorithm to perpetually balance.,0,cyschlueter/Segway_Project-V2,590281772,SystemVerilog,Segway_Project-V2,50,0,2023-01-18 03:27:04+00:00,[],https://api.github.com/licenses/gpl-3.0
273,https://github.com/An0nym0us-27/Button-Detection-System-Verilog.git,2023-01-11 23:13:53+00:00,A button detection was implemented with and without a debouncer to see the importance of a debouncer.,0,An0nym0us-27/Button-Detection-System-Verilog,587930033,SystemVerilog,Button-Detection-System-Verilog,10,0,2023-01-31 23:25:34+00:00,[],None
274,https://github.com/kkutchava/Digital-Logic-Laboratory-Labs-SDSU-COMPE470L-.git,2023-01-12 21:26:05+00:00,,0,kkutchava/Digital-Logic-Laboratory-Labs-SDSU-COMPE470L-,588326723,SystemVerilog,Digital-Logic-Laboratory-Labs-SDSU-COMPE470L-,395,0,2023-01-12 21:30:22+00:00,[],None
275,https://github.com/GodMeow1204/FPGA-Final_Project.git,2023-01-12 09:42:41+00:00,,0,GodMeow1204/FPGA-Final_Project,588085554,SystemVerilog,FPGA-Final_Project,2368,0,2023-01-12 10:31:24+00:00,[],None
276,https://github.com/ShangolMangol/simulation3_sifratiyot.git,2023-01-16 22:16:08+00:00,,0,ShangolMangol/simulation3_sifratiyot,589767897,SystemVerilog,simulation3_sifratiyot,3461,0,2023-01-16 22:16:16+00:00,[],None
277,https://github.com/s-griffith/SysVerilog_Simulation3.git,2023-01-21 12:09:07+00:00,,0,s-griffith/SysVerilog_Simulation3,591648336,,SysVerilog_Simulation3,82,0,2023-03-25 15:52:41+00:00,[],None
278,https://github.com/AhmedOsama2000/SPI-Slave.git,2023-01-30 19:00:02+00:00,Design and Verification of SPI slave ,0,AhmedOsama2000/SPI-Slave,595277874,SystemVerilog,SPI-Slave,14,0,2023-01-30 19:07:35+00:00,[],None
279,https://github.com/embedded-explorer/System-Verilog-Learning.git,2022-12-24 17:52:59+00:00,System-Verilog Design Examples along with Complete Verification Environment,0,embedded-explorer/System-Verilog-Learning,581881644,SystemVerilog,System-Verilog-Learning,67,0,2022-12-26 19:32:57+00:00,[],None
280,https://github.com/jalundrigan/system.git,2022-12-31 05:10:29+00:00,,0,jalundrigan/system,583835942,SystemVerilog,system,97,0,2024-01-10 17:26:11+00:00,[],None
281,https://github.com/AlphaLyrae0/Easy_UVM_Examples.git,2022-12-23 04:38:07+00:00,Examples to apply UVM to existing test benches at ease,0,AlphaLyrae0/Easy_UVM_Examples,581401509,SystemVerilog,Easy_UVM_Examples,76,0,2022-12-23 07:52:55+00:00,[],None
282,https://github.com/NYU-Processor-Design/onboarding-lab-3.git,2023-01-23 12:32:03+00:00,Onboarding Lab for Week 3,22,NYU-Processor-Design/onboarding-lab-3,592297697,SystemVerilog,onboarding-lab-3,7,0,2023-02-05 18:28:11+00:00,[],None
283,https://github.com/strwdr/MaximatorZXSpectrum.git,2022-12-06 10:16:08+00:00,ZX Spectrum implementation for maximator board,0,strwdr/MaximatorZXSpectrum,574898628,SystemVerilog,MaximatorZXSpectrum,274,0,2022-12-17 23:03:05+00:00,"['board', 'fpga', 'hdl', 'max10', 'nios', 'soc', 'verilog', 'zx', 'zx-spectrum', 'maximator']",https://api.github.com/licenses/apache-2.0
284,https://github.com/wolve265/aurora.git,2023-01-12 19:42:45+00:00,Implementation of the Aurora 8b/10b Simplex Transmitter,1,wolve265/aurora,588296674,SystemVerilog,aurora,855,0,2023-02-12 20:18:09+00:00,"['8b10b', 'aurora', 'hdl', 'simplex', 'systemverilog', 'transmitter']",None
285,https://github.com/wheberth/polar_encoder_core.git,2023-01-04 14:19:03+00:00,,0,wheberth/polar_encoder_core,585179699,SystemVerilog,polar_encoder_core,7,0,2023-01-04 15:15:34+00:00,[],None
286,https://github.com/AustinPEdwards/RISC-V-Single-Cycle-Processor.git,2023-01-17 20:43:16+00:00,RISC-V Single Cycle Processor written with SystemVerilog (Vivado) for an FPGA,0,AustinPEdwards/RISC-V-Single-Cycle-Processor,590183289,SystemVerilog,RISC-V-Single-Cycle-Processor,2,0,2023-01-17 20:54:00+00:00,[],None
287,https://github.com/noemiabril/C64_MiSTer-DE1-SoC.git,2022-12-04 15:34:51+00:00,C64 Core for MiSTer DE1-SoC,0,noemiabril/C64_MiSTer-DE1-SoC,574152215,SystemVerilog,C64_MiSTer-DE1-SoC,2951,0,2022-12-04 15:34:58+00:00,[],None
288,https://github.com/5eyed2k/Home-work-4.git,2022-12-04 19:15:46+00:00,,0,5eyed2k/Home-work-4,574213763,SystemVerilog,Home-work-4,13,0,2022-12-04 19:16:53+00:00,[],None
289,https://github.com/An0nym0us-27/2-Bit-Equality-Detection-System-Verilog.git,2023-01-08 00:18:05+00:00,,0,An0nym0us-27/2-Bit-Equality-Detection-System-Verilog,586389007,SystemVerilog,2-Bit-Equality-Detection-System-Verilog,263,0,2023-01-11 22:05:34+00:00,[],None
290,https://github.com/Ganta-Tharun-Reddy/AXI-3.git,2023-01-07 05:48:25+00:00,,0,Ganta-Tharun-Reddy/AXI-3,586154073,SystemVerilog,AXI-3,10809,0,2023-01-07 06:00:14+00:00,[],None
291,https://github.com/zackerzha/EEC470.git,2023-01-03 15:58:30+00:00,,0,zackerzha/EEC470,584824628,SystemVerilog,EEC470,7120,0,2023-01-03 20:14:26+00:00,[],None
292,https://github.com/ShahidShann/UVMF_adder.git,2023-01-06 11:25:16+00:00,Self checking,0,ShahidShann/UVMF_adder,585895005,SystemVerilog,UVMF_adder,56037,0,2023-01-06 11:45:57+00:00,[],None
293,https://github.com/Mahendra-Maddirala/LC3-Micro-Controller-Decode_out-Interface-UVM-.git,2023-01-05 14:15:12+00:00,,0,Mahendra-Maddirala/LC3-Micro-Controller-Decode_out-Interface-UVM-,585573294,SystemVerilog,LC3-Micro-Controller-Decode_out-Interface-UVM-,26163,0,2023-01-05 15:24:57+00:00,[],None
294,https://github.com/mohammadhasanloo/CA-CA3-Multi-Cycle-MIPS.git,2023-01-21 14:18:06+00:00,,0,mohammadhasanloo/CA-CA3-Multi-Cycle-MIPS,591679898,SystemVerilog,CA-CA3-Multi-Cycle-MIPS,961,0,2023-01-21 14:18:15+00:00,[],None
295,https://github.com/medximun/SystemVerilog-for-Verification-Part-1-Fundamentals.git,2023-01-21 07:29:09+00:00,上課習題,0,medximun/SystemVerilog-for-Verification-Part-1-Fundamentals,591588657,SystemVerilog,SystemVerilog-for-Verification-Part-1-Fundamentals,34,0,2023-01-21 07:37:25+00:00,[],None
296,https://github.com/rchae01/rachel_keilee_finalproject.git,2022-12-14 21:48:36+00:00,FPGA Omnichord Final Code,0,rchae01/rachel_keilee_finalproject,578359990,SystemVerilog,rachel_keilee_finalproject,71,0,2022-12-14 21:52:57+00:00,[],None
297,https://github.com/rportocarrero/CPU20.git,2022-12-16 04:38:29+00:00,This is a small cpu example implementation,0,rportocarrero/CPU20,578872201,SystemVerilog,CPU20,3,0,2022-12-16 04:38:36+00:00,[],https://api.github.com/licenses/mit
298,https://github.com/KaiLun1020/Project_gomoku.git,2022-12-30 17:40:21+00:00,第十組 邏設期末Project 五子棋,0,KaiLun1020/Project_gomoku,583723057,SystemVerilog,Project_gomoku,1197,0,2022-12-30 19:29:44+00:00,[],None
299,https://github.com/charrich97/LC3_Microcontroller_Verification.git,2022-12-22 17:37:59+00:00,"A hierarchical, reusable, veloce emulation compatible testbench including environment, sub-environment, scoreboards, active/passive and/or initiator/responder agents, BFMs, sequencers, and sequences for the respective LC3 VIP of Fetch, Decode, Execute, Memory Access, and Writeback.",0,charrich97/LC3_Microcontroller_Verification,581259598,SystemVerilog,LC3_Microcontroller_Verification,1575,0,2023-08-06 16:16:02+00:00,[],None
300,https://github.com/lagudu-glitch/Carry-Lookahead-Adder.git,2022-12-27 08:52:39+00:00,,0,lagudu-glitch/Carry-Lookahead-Adder,582574321,SystemVerilog,Carry-Lookahead-Adder,45,0,2022-12-27 08:54:41+00:00,[],https://api.github.com/licenses/mit
301,https://github.com/Devil2702/16x9_Multiplier.git,2022-12-27 13:48:26+00:00,Working Code of 16x9 Multiplier using verilog and system_verilog,0,Devil2702/16x9_Multiplier,582656794,SystemVerilog,16x9_Multiplier,2,0,2022-12-27 13:49:30+00:00,[],None
302,https://github.com/Kobzon86/Fixed-point-data-verilog-class.git,2022-12-27 14:33:00+00:00,Solution for OOP part of the FPGA contest. For David. I have no idea where this nonsense can come in hand. ,0,Kobzon86/Fixed-point-data-verilog-class,582670147,SystemVerilog,Fixed-point-data-verilog-class,1,0,2022-12-27 14:56:55+00:00,[],None
303,https://github.com/chetansomana/testing_git.git,2023-02-04 13:03:35+00:00,testing to upload,0,chetansomana/testing_git,597406658,SystemVerilog,testing_git,6559,0,2023-02-04 13:07:15+00:00,[],None
304,https://github.com/soumyaswa/soumya_cpu_design.git,2023-01-31 13:32:57+00:00,,0,soumyaswa/soumya_cpu_design,595626273,SystemVerilog,soumya_cpu_design,31,0,2023-02-08 07:16:43+00:00,[],None
305,https://github.com/sueghosh/RTL_Design.git,2022-12-06 03:21:58+00:00,,0,sueghosh/RTL_Design,574773744,SystemVerilog,RTL_Design,105,0,2023-05-17 04:02:16+00:00,[],None
306,https://github.com/barretklics/ENEL453_Lab_4.git,2022-12-05 03:24:35+00:00,,0,barretklics/ENEL453_Lab_4,574320065,SystemVerilog,ENEL453_Lab_4,386,0,2023-01-05 23:20:07+00:00,[],None
307,https://github.com/czarkos/sparrow-sv.git,2022-12-17 00:20:07+00:00,,0,czarkos/sparrow-sv,579212855,SystemVerilog,sparrow-sv,388,0,2023-01-17 19:05:49+00:00,[],None
308,https://github.com/uniquehuy/ee297b_uart2wifi.git,2023-02-04 19:38:38+00:00,"EE297B Project, by Chris & Huy",0,uniquehuy/ee297b_uart2wifi,597516364,SystemVerilog,ee297b_uart2wifi,37,0,2023-02-25 03:17:46+00:00,[],None
309,https://github.com/dolcehouse/100daysofrtl.git,2023-01-20 03:40:01+00:00,,0,dolcehouse/100daysofrtl,591159800,SystemVerilog,100daysofrtl,10,0,2023-01-20 03:41:49+00:00,[],None
310,https://github.com/nikaemami/Basic-RTL-Packages.git,2023-02-07 08:12:55+00:00,"Building a n-bit barrel shifter, with an n-bit data-input, A[n-1:0], and an i-bit shift-value, N[i- 1:0], where i is: i=log2n",0,nikaemami/Basic-RTL-Packages,598491865,SystemVerilog,Basic-RTL-Packages,62,0,2023-02-10 07:31:13+00:00,[],None
311,https://github.com/MShafin/Traffic-Light-Controller.git,2023-01-20 18:53:38+00:00,Intel FGPA design project that models a real 4-way traffic signal with pedestrian lights and left turn priority signal,0,MShafin/Traffic-Light-Controller,591436498,SystemVerilog,Traffic-Light-Controller,11228,0,2023-01-20 18:55:24+00:00,[],None
312,https://github.com/Chandrusankar7/System-Verilog-Projects.git,2023-01-28 06:28:54+00:00,A repository of all the basic System Verilog codes that I practiced,0,Chandrusankar7/System-Verilog-Projects,594314479,SystemVerilog,System-Verilog-Projects,13,0,2023-01-28 06:30:14+00:00,[],None
313,https://github.com/Spencer-Stice/Digital-Audio-Visualizer.git,2022-12-21 00:50:45+00:00,,0,Spencer-Stice/Digital-Audio-Visualizer,580600700,SystemVerilog,Digital-Audio-Visualizer,11,0,2022-12-21 00:57:18+00:00,[],None
314,https://github.com/Boulder1999/Lab09-Design-and-Verification-Using-SystemVerilog.git,2022-12-01 07:04:41+00:00,,0,Boulder1999/Lab09-Design-and-Verification-Using-SystemVerilog,572853612,SystemVerilog,Lab09-Design-and-Verification-Using-SystemVerilog,2853,0,2022-12-01 07:06:42+00:00,[],None
315,https://github.com/Summondo/BacheloreProject.git,2022-12-01 12:48:49+00:00,The final project for my bachelore thesis,0,Summondo/BacheloreProject,572978315,SystemVerilog,BacheloreProject,538,0,2022-12-05 08:47:15+00:00,[],https://api.github.com/licenses/apache-2.0
316,https://github.com/talshamira/DigitalSystemsSimulation2.git,2023-01-21 12:09:45+00:00,,0,talshamira/DigitalSystemsSimulation2,591648496,,DigitalSystemsSimulation2,1559,0,2023-03-25 15:53:11+00:00,[],None
317,https://github.com/maxaksel/microprocessor.git,2023-01-26 19:04:20+00:00,A simple RISC microprocessor designed in Magic VLSI software.,0,maxaksel/microprocessor,593753054,SystemVerilog,microprocessor,77591,0,2023-02-26 18:46:54+00:00,[],https://api.github.com/licenses/mit
318,https://github.com/code-tangent/arp-responder.git,2023-01-26 19:22:56+00:00,Arp responder code showing coding style and basic simulation,0,code-tangent/arp-responder,593759338,SystemVerilog,arp-responder,17,0,2023-01-26 19:30:51+00:00,[],None
319,https://github.com/quyvan97/ecen468.git,2023-01-24 05:07:07+00:00,,0,quyvan97/ecen468,592604685,SystemVerilog,ecen468,36912,0,2023-09-05 07:10:18+00:00,[],None
320,https://github.com/MatejKafka/risc-v_pipelined_cpu.git,2023-01-25 05:10:06+00:00,"RISC-V CPU with a 5-stage pipeline, written in SystemVerilog",0,MatejKafka/risc-v_pipelined_cpu,593048449,SystemVerilog,risc-v_pipelined_cpu,78,0,2023-01-27 22:53:56+00:00,[],None
321,https://github.com/zz-f-g/RSICV-Pipeline.git,2022-12-16 13:48:31+00:00,Pipeline core in RISC-V ISA with data forwarding.,0,zz-f-g/RSICV-Pipeline,579033638,SystemVerilog,RSICV-Pipeline,1455,0,2022-12-22 07:19:50+00:00,[],None
322,https://github.com/aris134/ECE385.git,2022-12-16 20:14:21+00:00,Class work from ECE385 course offering from the University of Illinois at Urbana-Champaign,0,aris134/ECE385,579158997,SystemVerilog,ECE385,12495,0,2022-12-18 01:17:35+00:00,[],None
323,https://github.com/Hsuan-Chih/ECE574.git,2022-12-14 07:46:27+00:00,VLSI System Design,0,Hsuan-Chih/ECE574,578076737,SystemVerilog,ECE574,1294,0,2022-12-15 08:48:54+00:00,[],None
324,https://github.com/marcoaraz/star-testbench.git,2023-01-12 00:58:24+00:00,,0,marcoaraz/star-testbench,587951405,SystemVerilog,star-testbench,411,0,2023-03-24 18:10:55+00:00,[],None
325,https://github.com/mukesh891/m_cpu.git,2023-01-31 10:16:18+00:00,,0,mukesh891/m_cpu,595552140,SystemVerilog,m_cpu,338,0,2023-01-31 10:24:08+00:00,[],None
326,https://github.com/gbotkin3/FPGA-Adventures-Source-Code.git,2022-12-26 19:19:27+00:00,Host Repository of the Source Code of the digital designs that I have created,0,gbotkin3/FPGA-Adventures-Source-Code,582419695,SystemVerilog,FPGA-Adventures-Source-Code,5471,0,2022-12-28 01:14:17+00:00,[],https://api.github.com/licenses/apache-2.0
327,https://github.com/FilippoNevi/Verification.git,2022-12-29 11:51:20+00:00,"Verification assignment for the ""System Verification & Testing"" course",0,FilippoNevi/Verification,583310009,SystemVerilog,Verification,975,0,2022-12-29 11:54:29+00:00,[],None
328,https://github.com/mhshabani79/MIPS-single-cycle.git,2022-12-27 16:53:45+00:00,MIPS Single cycle Verilog Implementation,0,mhshabani79/MIPS-single-cycle,582713360,SystemVerilog,MIPS-single-cycle,1108,0,2022-12-27 17:45:25+00:00,"['mips', 'mips-assembly', 'mips-instructions', 'mips-processor', 'mips32', 'verilog', 'computer-architecture', 'verilog-hdl']",None
329,https://github.com/mhshabani79/MIPS-multi-cycle.git,2022-12-27 18:26:18+00:00,MIPS multi cycle Verilog Implementation,0,mhshabani79/MIPS-multi-cycle,582739579,SystemVerilog,MIPS-multi-cycle,1636,0,2022-12-27 18:46:47+00:00,"['verilog', 'verilog-hdl', 'mips', 'mips32', 'computer-architecture', 'mips-architecture', 'mips-assembly', 'mips-processor']",None
330,https://github.com/MrLehmann/EE525.git,2023-01-19 01:03:04+00:00,Holds Projects for Embedded Systems,0,MrLehmann/EE525,590690481,SystemVerilog,EE525,9,0,2023-02-13 20:14:59+00:00,[],None
331,https://github.com/naveen0215/avip.git,2022-12-05 05:43:35+00:00,,0,naveen0215/avip,574353217,SystemVerilog,avip,60,0,2022-12-05 05:46:21+00:00,[],None
332,https://github.com/Ahmed0100/ahb_memory_slave_vip.git,2022-12-08 10:15:27+00:00,ahb_memory_slave_vip,0,Ahmed0100/ahb_memory_slave_vip,575797123,SystemVerilog,ahb_memory_slave_vip,27,0,2022-12-08 15:42:48+00:00,[],None
333,https://github.com/topwuther/dm11a88_FPGA.git,2022-12-15 05:50:56+00:00,,0,topwuther/dm11a88_FPGA,578466091,SystemVerilog,dm11a88_FPGA,13,0,2022-12-15 05:51:40+00:00,[],https://api.github.com/licenses/gpl-3.0
334,https://github.com/natArocho/340-project3b.git,2022-12-13 12:10:43+00:00,FPU for Neural Network,0,natArocho/340-project3b,577736309,SystemVerilog,340-project3b,379,0,2023-02-24 11:54:17+00:00,[],None
335,https://github.com/AlphanEker/Pipelined-SystemVerilog-Model.git,2022-12-02 01:01:12+00:00,,0,AlphanEker/Pipelined-SystemVerilog-Model,573225610,SystemVerilog,Pipelined-SystemVerilog-Model,7,0,2023-01-22 22:32:26+00:00,[],None
336,https://github.com/fabio-pecora/verilog-seven-segment-display.git,2022-12-09 19:52:25+00:00,,0,fabio-pecora/verilog-seven-segment-display,576414317,SystemVerilog,verilog-seven-segment-display,1,0,2022-12-09 19:53:05+00:00,[],None
337,https://github.com/ClaytonJPayne/SetAssociativeCache.git,2023-01-30 01:04:17+00:00,RTL design for a parameterized set-associative cache with LRU-eviction and write-back policy,0,ClaytonJPayne/SetAssociativeCache,594908127,SystemVerilog,SetAssociativeCache,16,0,2023-01-30 03:38:20+00:00,[],None
338,https://github.com/carl92xu/ece385_final_project.git,2023-01-30 02:33:39+00:00,,0,carl92xu/ece385_final_project,594927222,SystemVerilog,ece385_final_project,260,0,2023-03-01 06:35:42+00:00,[],None
339,https://github.com/umairahmadh/fir-filter-system-verilog.git,2023-01-31 11:19:51+00:00,,0,umairahmadh/fir-filter-system-verilog,595575607,SystemVerilog,fir-filter-system-verilog,42,0,2023-01-31 13:35:24+00:00,[],None
340,https://github.com/Ragviswa/FYP-ETUNS.git,2023-01-11 14:55:11+00:00,,0,Ragviswa/FYP-ETUNS,587773091,SystemVerilog,FYP-ETUNS,12104,0,2023-06-21 14:09:52+00:00,[],None
341,https://github.com/robfinch/Utility.git,2023-01-22 15:10:51+00:00,Contains utility modules,0,robfinch/Utility,591983160,SystemVerilog,Utility,76,0,2023-01-22 15:10:58+00:00,[],https://api.github.com/licenses/bsd-3-clause
342,https://github.com/RandomActsOfGrammar/extensibella.git,2022-12-17 01:53:45+00:00,A system for reasoning about extensible languages in a modular fashion,0,RandomActsOfGrammar/extensibella,579228438,SystemVerilog,extensibella,908,0,2024-04-10 15:14:48+00:00,[],https://api.github.com/licenses/gpl-3.0
343,https://github.com/ShangolMangol/simulation1_sifratiyot.git,2022-12-19 17:56:37+00:00,,0,ShangolMangol/simulation1_sifratiyot,580096629,SystemVerilog,simulation1_sifratiyot,1760,0,2022-12-19 17:56:48+00:00,[],None
344,https://github.com/naveen0215/uvmf.git,2022-12-16 05:34:25+00:00,cloned,0,naveen0215/uvmf,578884786,SystemVerilog,uvmf,46627,0,2022-12-16 05:39:55+00:00,[],None
345,https://github.com/coderjaspal/git-demo2.git,2022-12-16 11:55:02+00:00,,0,coderjaspal/git-demo2,578995702,SystemVerilog,git-demo2,0,0,2022-12-16 11:59:10+00:00,[],None
346,https://github.com/davoudifatemeh/Pipelined-MIPS-Processor.git,2022-12-22 11:00:04+00:00,,0,davoudifatemeh/Pipelined-MIPS-Processor,581130827,SystemVerilog,Pipelined-MIPS-Processor,254,0,2022-12-22 11:04:10+00:00,[],None
347,https://github.com/frankych/clk_val.git,2022-12-12 06:13:43+00:00,,0,frankych/clk_val,577173437,SystemVerilog,clk_val,26669,0,2022-12-20 04:36:20+00:00,[],None
348,https://github.com/shubaspb/xilinx_template.git,2022-12-15 13:02:47+00:00,,0,shubaspb/xilinx_template,578606033,SystemVerilog,xilinx_template,46,0,2022-12-15 13:13:43+00:00,[],None
349,https://github.com/yagnavivek/RISC4R.git,2022-12-24 15:30:34+00:00,This is a RISC-V processor that is built only for R-Type instructions,0,yagnavivek/RISC4R,581851603,SystemVerilog,RISC4R,5,0,2022-12-24 15:33:07+00:00,[],https://api.github.com/licenses/mit
350,https://github.com/fezaemircelik/Bilkent_CS223_Lab_Assignments.git,2022-12-28 22:53:45+00:00,,0,fezaemircelik/Bilkent_CS223_Lab_Assignments,583146674,SystemVerilog,Bilkent_CS223_Lab_Assignments,14,0,2022-12-28 22:58:43+00:00,[],None
351,https://github.com/MolecularPrism/RISC.git,2022-12-31 05:58:31+00:00,,0,MolecularPrism/RISC,583843331,SystemVerilog,RISC,8717,0,2022-12-31 06:13:04+00:00,[],None
352,https://github.com/Mahendra-Maddirala/LC3-Adding-a-Decode-Environment-A-UVM-.git,2023-01-05 15:03:54+00:00,,0,Mahendra-Maddirala/LC3-Adding-a-Decode-Environment-A-UVM-,585590688,SystemVerilog,LC3-Adding-a-Decode-Environment-A-UVM-,26578,0,2023-01-05 15:24:24+00:00,[],None
353,https://github.com/Haxrox/HaxElevator.git,2023-01-02 04:16:49+00:00,Elevator Controller in SystemVerilog,0,Haxrox/HaxElevator,584272133,SystemVerilog,HaxElevator,4,0,2023-01-02 04:23:40+00:00,[],https://api.github.com/licenses/mit
354,https://github.com/jaeyoon0531/ddr2-controller.git,2023-01-02 04:11:43+00:00,,1,jaeyoon0531/ddr2-controller,584271345,SystemVerilog,ddr2-controller,3047,0,2023-01-04 07:47:13+00:00,[],None
355,https://github.com/Basanthkp21/Hldd_verification_lab2.git,2022-12-26 13:58:01+00:00,Lab sessional2 hldd_verification ,0,Basanthkp21/Hldd_verification_lab2,582336451,SystemVerilog,Hldd_verification_lab2,2,0,2022-12-26 13:59:24+00:00,[],None
356,https://github.com/JackSabine/stonehaven_math_ops.git,2022-12-09 21:08:25+00:00,,0,JackSabine/stonehaven_math_ops,576432475,SystemVerilog,stonehaven_math_ops,11,0,2022-12-09 21:08:47+00:00,[],None
357,https://github.com/Wave7t/THUEE-fall2022-Digital-System-Design-lab2.git,2022-12-02 13:28:21+00:00,,0,Wave7t/THUEE-fall2022-Digital-System-Design-lab2,573442968,SystemVerilog,THUEE-fall2022-Digital-System-Design-lab2,605,0,2022-12-08 10:06:35+00:00,[],None
358,https://github.com/Cognoscan/femto-riscv-demo-rust.git,2022-12-03 05:15:05+00:00,A tutorial on getting Rust to compile for a very very small RISC-V processor.,0,Cognoscan/femto-riscv-demo-rust,573687645,SystemVerilog,femto-riscv-demo-rust,553,0,2022-12-03 05:15:26+00:00,[],None
359,https://github.com/MatthewPat1/StudentCounter.git,2022-12-04 00:42:09+00:00,,0,MatthewPat1/StudentCounter,573957839,SystemVerilog,StudentCounter,5,0,2023-01-27 03:41:56+00:00,[],None
360,https://github.com/rlaguswo/Digital-Logic-Design.git,2022-12-05 08:05:20+00:00,,0,rlaguswo/Digital-Logic-Design,574394658,SystemVerilog,Digital-Logic-Design,138885,0,2022-12-05 08:06:14+00:00,[],None
361,https://github.com/Ramkasetty/SVTB_3To8decoder.git,2023-01-20 05:16:32+00:00,,0,Ramkasetty/SVTB_3To8decoder,591179426,SystemVerilog,SVTB_3To8decoder,3,0,2023-03-08 06:29:30+00:00,[],None
362,https://github.com/kingshrimp007/bist_sandbox.git,2023-01-15 06:38:45+00:00,,0,kingshrimp007/bist_sandbox,589130438,SystemVerilog,bist_sandbox,0,0,2023-01-15 06:39:21+00:00,[],None
363,https://github.com/rimjhim14/rimjhim_CPU_design.git,2023-02-02 06:15:54+00:00,design in verilog ,0,rimjhim14/rimjhim_CPU_design,596419535,SystemVerilog,rimjhim_CPU_design,291,0,2023-02-07 13:18:41+00:00,[],None
364,https://github.com/UCSB-ECE154B-Aaditya-Ayush/ECE154BLabs.git,2023-02-02 07:02:47+00:00,,0,UCSB-ECE154B-Aaditya-Ayush/ECE154BLabs,596433207,SystemVerilog,ECE154BLabs,15,0,2023-02-02 08:08:53+00:00,[],None
365,https://github.com/iskbaga/cache.git,2023-02-04 10:57:47+00:00,,0,iskbaga/cache,597374685,SystemVerilog,cache,11,0,2023-02-04 10:59:40+00:00,[],None
366,https://github.com/DirkDiggler2992/cuddly-octo-parakeet.git,2023-02-04 19:15:28+00:00,,0,DirkDiggler2992/cuddly-octo-parakeet,597510517,SystemVerilog,cuddly-octo-parakeet,1,0,2023-02-04 19:21:09+00:00,[],None
367,https://github.com/mmitri/ECE201.git,2023-01-06 16:53:33+00:00,,0,mmitri/ECE201,585996194,SystemVerilog,ECE201,11365,0,2023-01-06 16:54:25+00:00,[],None
368,https://github.com/LaPriseDeRISC/cva6-softcore-contest-lpdr.git,2023-01-13 14:45:53+00:00,,0,LaPriseDeRISC/cva6-softcore-contest-lpdr,588610071,SystemVerilog,cva6-softcore-contest-lpdr,43668,0,2023-06-28 14:39:10+00:00,[],
369,https://github.com/zedyjy/CS223.git,2023-01-11 20:17:12+00:00,Labs I have done for CS 223,0,zedyjy/CS223,587884672,SystemVerilog,CS223,9,0,2023-01-11 20:23:27+00:00,[],None
370,https://github.com/andythebreaker/chip.git,2023-01-08 15:40:41+00:00,,0,andythebreaker/chip,586566709,SystemVerilog,chip,78170,0,2023-05-27 12:06:29+00:00,[],None
371,https://github.com/Maleeshas/SystemVerilogEx.git,2023-01-25 14:21:36+00:00,Exercises to practice System verilog,0,Maleeshas/SystemVerilogEx,593222494,SystemVerilog,SystemVerilogEx,18,0,2023-01-25 14:30:58+00:00,[],None
372,https://github.com/2019ee25unioni/M-extention-for-riscv.git,2023-01-28 15:06:59+00:00,Multiply and divide for the risc v 32bit,0,2019ee25unioni/M-extention-for-riscv,594440343,SystemVerilog,M-extention-for-riscv,11,0,2023-01-28 15:09:20+00:00,[],None
373,https://github.com/amarquez4498/Risc-v-5stage-Processor.git,2023-01-30 04:37:07+00:00,,0,amarquez4498/Risc-v-5stage-Processor,594955648,SystemVerilog,Risc-v-5stage-Processor,9,0,2023-01-30 04:37:53+00:00,[],None
374,https://github.com/JoaoPi314/AXI4-Lite-VIP.git,2023-02-02 19:06:18+00:00,,0,JoaoPi314/AXI4-Lite-VIP,596706977,SystemVerilog,AXI4-Lite-VIP,194,0,2023-03-16 16:20:09+00:00,[],None
375,https://github.com/crisbour/hw-verif.git,2022-12-16 08:55:09+00:00,Testbenches methods and toolchains that can be used,0,crisbour/hw-verif,578939387,SystemVerilog,hw-verif,22,0,2023-12-06 14:40:54+00:00,[],None
376,https://github.com/msyverw/ecen323_student.git,2023-01-20 19:54:51+00:00,Template repository for student repositories used in ECEN 323,2,msyverw/ecen323_student,591454702,,ecen323_student,2118,0,2022-10-09 03:08:34+00:00,[],None
377,https://github.com/unlim-int-soumya/Design_Verification_Projects.git,2022-12-22 07:18:47+00:00,,0,unlim-int-soumya/Design_Verification_Projects,581065074,SystemVerilog,Design_Verification_Projects,20045,0,2023-10-02 09:15:35+00:00,[],None
378,https://github.com/ChuanlaiZang/riscv_core.git,2023-01-10 02:21:06+00:00,RISC-V core,0,ChuanlaiZang/riscv_core,587122775,SystemVerilog,riscv_core,12996,0,2024-04-08 06:28:09+00:00,[],https://api.github.com/licenses/apache-2.0
379,https://github.com/kato17/GIT_TEST.git,2022-12-12 07:47:42+00:00,,0,kato17/GIT_TEST,577199737,SystemVerilog,GIT_TEST,53,0,2022-12-12 07:53:14+00:00,[],None
380,https://github.com/JustRevolt/JTAG_implementation.git,2023-01-20 14:07:50+00:00,,0,JustRevolt/JTAG_implementation,591336000,SystemVerilog,JTAG_implementation,82,0,2023-01-20 14:15:50+00:00,[],None
381,https://github.com/rjmdhr/fir-uvm.git,2023-01-12 21:16:26+00:00,My attempt at learning UVM and making my own testbench,0,rjmdhr/fir-uvm,588324109,SystemVerilog,fir-uvm,6,0,2023-01-13 22:09:34+00:00,[],None
382,https://github.com/angrammenos97/wide_alu.git,2023-01-19 08:07:14+00:00,,0,angrammenos97/wide_alu,590791600,SystemVerilog,wide_alu,14,0,2023-01-19 08:08:16+00:00,[],None
383,https://github.com/s-griffith/Simulation_1-SystemVerilog.git,2023-01-21 12:09:26+00:00,,0,s-griffith/Simulation_1-SystemVerilog,591648414,,Simulation_1-SystemVerilog,1953,0,2023-03-25 15:53:04+00:00,[],None
384,https://github.com/Ouhznehc/NJU-COE.git,2023-01-30 08:43:18+00:00,NJU RISC-V Architecture Computer Organization Experiments （Spring 2022）,0,Ouhznehc/NJU-COE,595028115,SystemVerilog,NJU-COE,144,0,2023-09-27 16:45:06+00:00,[],None
385,https://github.com/mthimm2/risc_v_single_cycle_cpu.git,2023-01-25 01:48:23+00:00,A single-cycle RISC-V CPU implementing the 32-bit RISC-V integer instruction set.,0,mthimm2/risc_v_single_cycle_cpu,593004184,SystemVerilog,risc_v_single_cycle_cpu,3,0,2023-01-25 02:01:24+00:00,[],None
386,https://github.com/DQL-3264/enigma.git,2023-01-09 20:01:56+00:00,111-1邏輯設計期末專題,0,DQL-3264/enigma,587033023,SystemVerilog,enigma,8,0,2023-01-10 05:17:57+00:00,[],None
387,https://github.com/hanamcvicker/CSE371.git,2023-01-17 23:53:12+00:00,Design of Digital Circuits and Systems,0,hanamcvicker/CSE371,590233471,SystemVerilog,CSE371,6,0,2023-01-18 00:06:18+00:00,[],None
388,https://github.com/KAMOME-code/ECC-Add-test.git,2022-12-02 09:45:48+00:00,"secp256k1, Jacobian projective coordinate, ""Add"" (P+Q) test",0,KAMOME-code/ECC-Add-test,573366937,SystemVerilog,ECC-Add-test,7,0,2022-12-02 09:46:47+00:00,[],https://api.github.com/licenses/mit
389,https://github.com/cmu-stuco-98154/f22-tt02-jrecta.git,2022-12-02 08:34:06+00:00,TT02 Student Submission: Async FIFO,0,cmu-stuco-98154/f22-tt02-jrecta,573342804,SystemVerilog,f22-tt02-jrecta,70,0,2022-12-12 01:21:06+00:00,[],https://api.github.com/licenses/apache-2.0
390,https://github.com/nahmadi95/test1.git,2022-12-01 20:40:45+00:00,,0,nahmadi95/test1,573160528,SystemVerilog,test1,1,0,2022-12-01 20:45:53+00:00,[],None
391,https://github.com/bsilverriverd/mini_computer.git,2022-12-05 11:39:27+00:00,"8 bit computer based on the book ""But How Do It Know""",0,bsilverriverd/mini_computer,574470087,SystemVerilog,mini_computer,76,0,2022-12-17 00:13:52+00:00,[],None
392,https://github.com/kirtan03/Memory-Cache.git,2022-12-25 03:47:25+00:00,,0,kirtan03/Memory-Cache,581959996,SystemVerilog,Memory-Cache,49,0,2023-06-22 12:00:35+00:00,[],None
393,https://github.com/Engghassanali/Three-Stage-Pipeline-with-Uart-configuration.git,2022-12-23 10:32:06+00:00,,0,Engghassanali/Three-Stage-Pipeline-with-Uart-configuration,581487535,SystemVerilog,Three-Stage-Pipeline-with-Uart-configuration,332,0,2022-12-23 10:34:11+00:00,[],None
394,https://github.com/ninec09/float-point-multiplication-sv.git,2022-12-29 21:30:45+00:00,,0,ninec09/float-point-multiplication-sv,583464870,SystemVerilog,float-point-multiplication-sv,17,0,2022-12-29 21:35:36+00:00,[],None
395,https://github.com/G-uit-student/SystemVerilog.git,2023-01-04 21:37:33+00:00,,0,G-uit-student/SystemVerilog,585317518,SystemVerilog,SystemVerilog,2651,0,2023-01-04 21:43:44+00:00,[],None
396,https://github.com/Aakash-Jana/Traffic-Controller.git,2022-12-22 04:54:35+00:00,"It is an Intel Altera based , Traffic Light project designed modelling a 4 way traffic light controller. It involves system verilog and Finite State machine concepts.",0,Aakash-Jana/Traffic-Controller,581030616,SystemVerilog,Traffic-Controller,3257,0,2022-12-22 04:57:21+00:00,[],None
397,https://github.com/augustinjk/Interface-connection-with-modport.git,2022-12-08 05:05:21+00:00,,0,augustinjk/Interface-connection-with-modport,575698440,SystemVerilog,Interface-connection-with-modport,4,0,2022-12-08 05:07:26+00:00,[],None
398,https://github.com/GarrettTP/system-verilog-3d-renderer.git,2022-12-10 01:34:03+00:00,,0,GarrettTP/system-verilog-3d-renderer,576483011,SystemVerilog,system-verilog-3d-renderer,3027,0,2022-12-10 01:34:14+00:00,[],None
399,https://github.com/miyajiro/miyajiro_cpu.git,2022-12-31 16:54:18+00:00,self made 32 bit CPU. (subset of risc-V),0,miyajiro/miyajiro_cpu,583962059,SystemVerilog,miyajiro_cpu,193,0,2023-02-06 05:59:23+00:00,[],None
400,https://github.com/tobias-stadler/risc-core.git,2022-12-25 22:29:07+00:00,,0,tobias-stadler/risc-core,582152880,SystemVerilog,risc-core,67,0,2023-06-07 19:43:35+00:00,[],None
401,https://github.com/Cramos221/Verilog.git,2022-12-08 09:05:44+00:00,design Hardware,0,Cramos221/Verilog,575771917,SystemVerilog,Verilog,6567,0,2024-01-20 17:40:17+00:00,[],None
402,https://github.com/wijapiotr/lift.git,2022-12-01 11:19:14+00:00,,0,wijapiotr/lift,572944944,SystemVerilog,lift,3,0,2022-12-01 11:49:52+00:00,[],None
403,https://github.com/wdevore/RangerRisc-RISC-V.git,2022-12-24 03:16:12+00:00,This is the debug variant of RangerRisc a RISC-V Multicycle RV32I variant.,1,wdevore/RangerRisc-RISC-V,581710774,SystemVerilog,RangerRisc-RISC-V,23120,0,2022-12-26 21:20:40+00:00,[],https://api.github.com/licenses/mit
404,https://github.com/Ego-max/CVA6-PMP.git,2022-12-16 14:53:59+00:00,Physical Memory Protection,0,Ego-max/CVA6-PMP,579057821,SystemVerilog,CVA6-PMP,24,0,2022-12-16 15:00:15+00:00,[],None
405,https://github.com/leksarodic/pnrs2.git,2022-12-16 17:11:11+00:00,Projektovanje namenskih računarskih struktura 2,0,leksarodic/pnrs2,579105035,SystemVerilog,pnrs2,1517,0,2022-12-16 17:11:50+00:00,[],None
406,https://github.com/shiyuan-l/rasterizer_unit.git,2022-12-15 22:25:17+00:00,course project for EE271,0,shiyuan-l/rasterizer_unit,578792025,SystemVerilog,rasterizer_unit,67,0,2022-12-15 22:37:11+00:00,[],None
407,https://github.com/shihjimmy/Digital_Circuit_Labs.git,2022-12-27 16:16:27+00:00,Digital circuit labs,0,shihjimmy/Digital_Circuit_Labs,582702047,SystemVerilog,Digital_Circuit_Labs,52579,0,2023-10-30 18:08:18+00:00,[],None
408,https://github.com/shihjimmy/Real-time_FFT_and_Effctor.git,2022-12-27 16:29:20+00:00,Digital circuit final project,0,shihjimmy/Real-time_FFT_and_Effctor,582705951,SystemVerilog,Real-time_FFT_and_Effctor,9540,0,2023-10-30 18:08:11+00:00,[],None
409,https://github.com/Devil2702/Pipelined_RISC_Processsor_4Stage.git,2022-12-27 13:52:25+00:00,Working Code for RISC Processor,0,Devil2702/Pipelined_RISC_Processsor_4Stage,582657949,SystemVerilog,Pipelined_RISC_Processsor_4Stage,5,0,2022-12-27 13:54:34+00:00,[],None
410,https://github.com/mohamedelshafie/system-verilog.git,2022-12-21 21:26:31+00:00,,0,mohamedelshafie/system-verilog,580945771,SystemVerilog,system-verilog,34,0,2022-12-21 21:28:08+00:00,[],None
411,https://github.com/davoudifatemeh/Multi-Cycle-MIPS-Processor.git,2022-12-22 10:10:03+00:00,,0,davoudifatemeh/Multi-Cycle-MIPS-Processor,581115723,SystemVerilog,Multi-Cycle-MIPS-Processor,235,0,2022-12-22 10:57:54+00:00,[],None
412,https://github.com/JoaoPi314/ral-hands-on-files.git,2022-12-13 13:26:19+00:00,,0,JoaoPi314/ral-hands-on-files,577764749,SystemVerilog,ral-hands-on-files,8,0,2022-12-13 13:28:00+00:00,[],None
413,https://github.com/IlyaChichkov/RISC_V-CPU.git,2022-12-13 21:34:23+00:00,Educational project which goal is realization of processor with RISC-V architecture.,0,IlyaChichkov/RISC_V-CPU,577933430,SystemVerilog,RISC_V-CPU,289,0,2022-12-13 21:57:28+00:00,"['hardware', 'risc-v', 'system-verilog']",None
414,https://github.com/fabio-pecora/verilog-alu.git,2022-12-09 20:24:35+00:00,,0,fabio-pecora/verilog-alu,576422153,SystemVerilog,verilog-alu,2,0,2023-09-13 11:32:19+00:00,[],None
415,https://github.com/William-An/CPU-X.git,2022-12-19 05:00:51+00:00,A RISC-V Core on FPGA,0,William-An/CPU-X,579852133,SystemVerilog,CPU-X,174,0,2023-01-13 16:06:05+00:00,"['cpu', 'fpga', 'risc-v', 'riscv', 'verilog']",None
416,https://github.com/asmwriter/system_verilog.git,2023-01-05 09:18:16+00:00,Repository for maintaining things developed in System verilog ,0,asmwriter/system_verilog,585477936,SystemVerilog,system_verilog,1,0,2023-01-05 09:31:42+00:00,[],None
417,https://github.com/Mahendra-Maddirala/LC3-Micro-Controller-Decode_in-Interface-UVM-.git,2023-01-05 13:59:08+00:00,,0,Mahendra-Maddirala/LC3-Micro-Controller-Decode_in-Interface-UVM-,585567498,SystemVerilog,LC3-Micro-Controller-Decode_in-Interface-UVM-,29038,0,2023-01-05 15:25:16+00:00,[],None
418,https://github.com/s-griffith/DigitalSystemsSimulation2.git,2023-01-04 14:57:11+00:00,Digital Systems and Computer Structure HW2,0,s-griffith/DigitalSystemsSimulation2,585193914,SystemVerilog,DigitalSystemsSimulation2,1559,0,2023-03-25 14:48:33+00:00,[],None
419,https://github.com/ACVenkatesh/AXI.git,2023-01-07 07:39:08+00:00,,0,ACVenkatesh/AXI,586174519,SystemVerilog,AXI,31,0,2023-01-07 07:41:10+00:00,[],None
420,https://github.com/dmquirozc/Serial_Basic_Interfaces.git,2022-12-12 20:46:15+00:00,,0,dmquirozc/Serial_Basic_Interfaces,577480602,SystemVerilog,Serial_Basic_Interfaces,25,0,2022-12-12 20:47:20+00:00,[],None
421,https://github.com/Fall-2022-Classes/fa22-final-project-team-11.git,2022-12-04 10:52:32+00:00,fa22-final-project-team-11 created by GitHub Classroom,0,Fall-2022-Classes/fa22-final-project-team-11,574073621,SystemVerilog,fa22-final-project-team-11,29,0,2022-12-07 19:49:07+00:00,[],None
422,https://github.com/besology512/digital-Stopwatch.git,2022-12-12 11:07:48+00:00,,0,besology512/digital-Stopwatch,577267534,SystemVerilog,digital-Stopwatch,59415,0,2022-12-31 18:35:24+00:00,[],None
423,https://github.com/Kobzon86/Intel-video-switch-analog.git,2022-12-28 08:57:09+00:00,"Analog of Intel IP Switch II. This implementation has same register map, but doesnt have problems when the video input is unstable",0,Kobzon86/Intel-video-switch-analog,582926555,SystemVerilog,Intel-video-switch-analog,4,0,2022-12-28 08:57:49+00:00,[],None
424,https://github.com/bosco0127/TPU.git,2023-01-01 10:11:13+00:00,,0,bosco0127/TPU,584091276,SystemVerilog,TPU,4567,0,2023-10-19 03:06:34+00:00,[],None
425,https://github.com/Qrisno/Engineering-5.git,2022-12-06 11:10:17+00:00,,0,Qrisno/Engineering-5,574918426,SystemVerilog,Engineering-5,8,0,2022-12-06 11:25:31+00:00,[],None
426,https://github.com/Kholoud-Ebrahim/Up_Down_Counter_4bit.git,2023-01-25 23:13:37+00:00,implementation and test bench using System Verilog ,1,Kholoud-Ebrahim/Up_Down_Counter_4bit,593407472,SystemVerilog,Up_Down_Counter_4bit,44,0,2023-01-25 23:34:18+00:00,[],None
427,https://github.com/natelannan-osu/dldFinalProject_Spring23.git,2023-01-22 03:01:10+00:00,Template repository for Final Project,0,natelannan-osu/dldFinalProject_Spring23,591838289,SystemVerilog,dldFinalProject_Spring23,5464,0,2023-03-28 20:34:05+00:00,[],None
428,https://github.com/a7mad-reda/FIR-Filter-Implementation-using-System-Verilog.git,2023-02-01 20:39:46+00:00,,0,a7mad-reda/FIR-Filter-Implementation-using-System-Verilog,596273179,SystemVerilog,FIR-Filter-Implementation-using-System-Verilog,174,0,2023-02-01 20:44:45+00:00,[],None
429,https://github.com/zhouxinyu0723/SystemVerilog_for_verification.git,2023-02-02 09:30:15+00:00,answers to the exercise in book SystemVerilog for verification,0,zhouxinyu0723/SystemVerilog_for_verification,596483450,SystemVerilog,SystemVerilog_for_verification,11,0,2023-02-02 09:31:47+00:00,[],None
430,https://github.com/xwd0418/ece111_2.git,2023-01-23 07:38:11+00:00,,0,xwd0418/ece111_2,592204653,SystemVerilog,ece111_2,2,0,2023-01-23 07:39:38+00:00,[],None
431,https://github.com/sushakam/Cache.git,2023-01-23 01:35:23+00:00,,0,sushakam/Cache,592130865,SystemVerilog,Cache,53,0,2023-01-24 01:48:29+00:00,[],None
432,https://github.com/ldaleyb/Basys3.git,2023-01-23 01:38:27+00:00,,1,ldaleyb/Basys3,592131375,SystemVerilog,Basys3,365,0,2023-01-23 03:49:45+00:00,[],None
433,https://github.com/yishaim/RTL-Designs-and-Verification.git,2023-01-23 20:34:06+00:00,Various RTL designs with full verification,0,yishaim/RTL-Designs-and-Verification,592483848,SystemVerilog,RTL-Designs-and-Verification,26,0,2023-01-24 19:49:22+00:00,[],None
434,https://github.com/onurozdemr/Simple-Microprocessor.git,2023-01-26 11:41:50+00:00,"Simple Microprocessor that can Add-Subtract, Load, Queue and Sort 4-bit data",0,onurozdemr/Simple-Microprocessor,593588754,SystemVerilog,Simple-Microprocessor,1601,0,2023-01-26 12:30:49+00:00,[],None
435,https://github.com/nikaemami/Switch-and-Gate-Structures.git,2023-02-07 05:41:01+00:00,Basic Switch and Gate Structures in System Verilog,0,nikaemami/Switch-and-Gate-Structures,598443327,SystemVerilog,Switch-and-Gate-Structures,4,0,2023-02-07 08:02:53+00:00,[],None
436,https://github.com/Ham-Choi/COMP-541.git,2023-01-18 21:45:04+00:00,UNC-CH Operating Systems,0,Ham-Choi/COMP-541,590642652,SystemVerilog,COMP-541,22497,0,2023-01-30 21:24:26+00:00,[],None
437,https://github.com/irvinglopezcuriel/hdc.git,2023-02-07 00:09:28+00:00,,0,irvinglopezcuriel/hdc,598360743,SystemVerilog,hdc,11,0,2023-02-07 02:10:44+00:00,[],None
438,https://github.com/Ashkanaaa/MISC-Machine.git,2022-12-31 20:52:23+00:00,,0,Ashkanaaa/MISC-Machine,583998651,SystemVerilog,MISC-Machine,51,0,2023-12-11 01:21:30+00:00,[],None
439,https://github.com/akashlevy/ember-digital.git,2023-01-17 23:29:10+00:00,Digital components of EMBER memory macro,0,akashlevy/ember-digital,590228060,SystemVerilog,ember-digital,7501,0,2023-01-18 06:23:59+00:00,[],None
440,https://github.com/AlexrAlves/pulp_soc.git,2023-01-19 05:12:26+00:00,Copy of pulp_soc v2.0.0,0,AlexrAlves/pulp_soc,590746014,SystemVerilog,pulp_soc,143,0,2023-01-19 05:27:49+00:00,[],
441,https://github.com/Ahmed0100/apb_pwm_gen_slave.git,2022-12-11 12:28:24+00:00,apb_pwm_gen_slave,0,Ahmed0100/apb_pwm_gen_slave,576920902,SystemVerilog,apb_pwm_gen_slave,1,0,2022-12-11 12:28:45+00:00,[],None
442,https://github.com/sehes2solve/IEEE-32-bit-Floating-Point-Adder-Circuit-Design-In-Verliog-with-Simulation-Testing.git,2022-12-09 13:29:06+00:00,"Adds Nan, +Inf, -Inf, Zero & outputs Zero value if addition result is Zero (in the IEEE 32 bit floating point representation)",0,sehes2solve/IEEE-32-bit-Floating-Point-Adder-Circuit-Design-In-Verliog-with-Simulation-Testing,576291826,SystemVerilog,IEEE-32-bit-Floating-Point-Adder-Circuit-Design-In-Verliog-with-Simulation-Testing,6621,0,2023-09-13 11:32:06+00:00,[],None
443,https://github.com/fabio-pecora/verilog-incrementer.git,2022-12-09 19:48:57+00:00,,0,fabio-pecora/verilog-incrementer,576413488,SystemVerilog,verilog-incrementer,1,0,2022-12-09 19:49:30+00:00,[],None
444,https://github.com/pranavnreddy/Digital-Systems-Design-Modules.git,2022-12-13 00:24:56+00:00,Cool stuff I made in SystemVerilog,0,pranavnreddy/Digital-Systems-Design-Modules,577534611,SystemVerilog,Digital-Systems-Design-Modules,30,0,2022-12-13 00:25:47+00:00,[],None
445,https://github.com/tempasdfg/ece-385.git,2022-12-13 22:09:34+00:00,,0,tempasdfg/ece-385,577942344,SystemVerilog,ece-385,28,0,2022-12-13 22:12:57+00:00,[],None
446,https://github.com/Mahesh-Jasti/VLIW_Scheduler_and_Processor_Design.git,2022-12-08 23:34:07+00:00,• Designed a Trace driven VLIW scheduler scalable for n-slots in C++ using Topological sort graph algorithm. • Exported the resulting VLIW schedule into a SV testbench for the execution and writeback units designed in Verilog. • Simulated various traces for varying number of execution slots and tabulated IPC values for each configuration.,0,Mahesh-Jasti/VLIW_Scheduler_and_Processor_Design,576064311,SystemVerilog,VLIW_Scheduler_and_Processor_Design,5,0,2022-12-08 23:36:30+00:00,[],None
447,https://github.com/Kobzon86/RGB-produce-modules.git,2022-12-28 07:26:43+00:00,Modules for pruducing RGB stream,0,Kobzon86/RGB-produce-modules,582903162,SystemVerilog,RGB-produce-modules,64,0,2022-12-28 08:18:13+00:00,[],None
448,https://github.com/lcampos-rydev/UVM_chapter_9_resultado.git,2023-01-06 18:45:50+00:00,Ambiente de pruebas para GPIO,0,lcampos-rydev/UVM_chapter_9_resultado,586029260,SystemVerilog,UVM_chapter_9_resultado,66,0,2023-01-06 19:02:00+00:00,[],None
449,https://github.com/Nagarjun444/array_reduction.git,2022-12-18 10:56:08+00:00,array reduction methods in system verilog,0,Nagarjun444/array_reduction,579631150,SystemVerilog,array_reduction,1,0,2022-12-18 10:56:43+00:00,[],None
450,https://github.com/kadomoto/rv32-cyclone10.git,2022-12-22 01:50:30+00:00,,0,kadomoto/rv32-cyclone10,580995389,SystemVerilog,rv32-cyclone10,23,0,2022-12-22 01:53:29+00:00,[],None
451,https://github.com/npatsiatzis/VGA.git,2022-12-23 10:52:54+00:00,,0,npatsiatzis/VGA,581493090,SystemVerilog,VGA,4678,0,2023-08-19 09:19:21+00:00,"['cocotb', 'vhdl', 'systemverilog', 'verilator']",https://api.github.com/licenses/mit
452,https://github.com/SukanyaMore/Traffic_Signal_Controller.git,2023-02-01 17:02:23+00:00,,0,SukanyaMore/Traffic_Signal_Controller,596193441,SystemVerilog,Traffic_Signal_Controller,86,0,2023-02-01 17:04:33+00:00,[],None
453,https://github.com/KAMOME-code/ECC-Double-test.git,2022-12-02 02:04:26+00:00,"secp256k1, Jacobian projective coordinate, ""Double"" (2P) test",0,KAMOME-code/ECC-Double-test,573240609,SystemVerilog,ECC-Double-test,6,0,2022-12-02 02:05:05+00:00,[],https://api.github.com/licenses/mit
454,https://github.com/Laurenx618/Simple-DSP.git,2022-12-02 01:48:06+00:00,,0,Laurenx618/Simple-DSP,573236523,SystemVerilog,Simple-DSP,2478,0,2022-12-08 05:07:56+00:00,[],https://api.github.com/licenses/mit
455,https://github.com/sebascarmar/ARMCicloUnico.git,2023-01-26 16:58:07+00:00,,0,sebascarmar/ARMCicloUnico,593707390,SystemVerilog,ARMCicloUnico,10,0,2023-01-26 17:04:14+00:00,[],None
456,https://github.com/gvillanovanm/svlog-examples.git,2023-01-20 11:41:27+00:00,,0,gvillanovanm/svlog-examples,591286721,SystemVerilog,svlog-examples,189,0,2023-01-29 16:39:54+00:00,[],None
457,https://github.com/yinghuaxia/BFS_maze.git,2023-01-14 13:58:57+00:00,,0,yinghuaxia/BFS_maze,588926082,SystemVerilog,BFS_maze,20,0,2023-02-19 06:00:08+00:00,[],https://api.github.com/licenses/mit
458,https://github.com/jgaztelu/hub75_driver.git,2022-12-06 20:50:49+00:00,HUB75 protocol display driver for Zynq FPGAs,0,jgaztelu/hub75_driver,575135977,SystemVerilog,hub75_driver,255,0,2024-02-18 20:11:00+00:00,[],None
459,https://github.com/CookieDragon16/16-bit-MP.git,2022-12-10 12:37:03+00:00,FIC project,0,CookieDragon16/16-bit-MP,576619650,SystemVerilog,16-bit-MP,550,0,2022-12-12 18:35:58+00:00,[],None
460,https://github.com/KaramSh/120a_Labs.git,2022-12-11 10:49:37+00:00,Assignments done in CS/EE 120A using Verilog,0,KaramSh/120a_Labs,576896371,SystemVerilog,120a_Labs,22,0,2022-12-12 20:00:28+00:00,[],None
461,https://github.com/dtchuink/FPGA_NoC.git,2022-12-03 22:17:36+00:00,This folder contains the sources of the FPGA Network-on-Chip (NoC) used to support hardware elasticity on multi-tenant cloud FPGAs.,0,dtchuink/FPGA_NoC,573933322,SystemVerilog,FPGA_NoC,17,0,2022-12-03 22:21:44+00:00,[],None
462,https://github.com/ken881015/VSD_Hw4.git,2022-12-08 05:59:15+00:00,,0,ken881015/VSD_Hw4,575711992,SystemVerilog,VSD_Hw4,55,0,2022-12-08 06:01:25+00:00,[],None
463,https://github.com/zenon4689/yolo.git,2022-12-24 04:34:41+00:00,,0,zenon4689/yolo,581722583,SystemVerilog,yolo,10,0,2022-12-27 11:36:22+00:00,[],None
464,https://github.com/Ayyappa1911/2D_fft_implementation_in_vivado.git,2022-12-06 06:39:50+00:00,Implementation of 2D fft in RTL using Vivado.,0,Ayyappa1911/2D_fft_implementation_in_vivado,574825557,SystemVerilog,2D_fft_implementation_in_vivado,227,0,2022-12-06 06:41:48+00:00,[],None
465,https://github.com/kedaizuo/ariane.git,2022-12-03 05:03:12+00:00,CS254 project: dual issue of update to date ariane,1,kedaizuo/ariane,573685463,SystemVerilog,ariane,13199,0,2022-12-03 05:52:55+00:00,[],
466,https://github.com/jissjoseph1997/verilog_programs.git,2022-12-22 05:12:31+00:00,verilog programs,0,jissjoseph1997/verilog_programs,581034578,SystemVerilog,verilog_programs,9,0,2022-12-22 08:47:28+00:00,[],None
467,https://github.com/mauriya0202/IEEE_floating_point_single_precision.git,2023-01-05 04:41:52+00:00,,2,mauriya0202/IEEE_floating_point_single_precision,585404355,SystemVerilog,IEEE_floating_point_single_precision,7,0,2023-01-05 04:47:33+00:00,[],https://api.github.com/licenses/mit
468,https://github.com/jesrylcalalang/Collision_Detection_System.git,2023-01-03 20:54:45+00:00,,0,jesrylcalalang/Collision_Detection_System,584913052,SystemVerilog,Collision_Detection_System,7,0,2023-01-03 20:55:52+00:00,[],None
469,https://github.com/ShangolMangol/simulation2_sifratiyot.git,2023-01-06 10:45:25+00:00,,0,ShangolMangol/simulation2_sifratiyot,585884217,SystemVerilog,simulation2_sifratiyot,1923,0,2023-01-06 10:45:35+00:00,[],None
470,https://github.com/slimmsehli/AHBUART.git,2023-02-07 16:54:26+00:00,AHB UART IP ,0,slimmsehli/AHBUART,598709932,SystemVerilog,AHBUART,27,0,2023-03-20 11:46:27+00:00,[],None
471,https://github.com/mohammadhasanloo/CA-CA2-MIPS.git,2023-01-21 10:39:13+00:00,,0,mohammadhasanloo/CA-CA2-MIPS,591627993,SystemVerilog,CA-CA2-MIPS,3215,0,2023-01-21 10:45:20+00:00,[],None
472,https://github.com/mjhborja/apply_stimuli_propagation_apb_part_1_uvm.git,2023-01-19 09:40:25+00:00,"Now, we'll apply stimulus from a UVM test bench to a design - an ARM APB slave",0,mjhborja/apply_stimuli_propagation_apb_part_1_uvm,590820747,SystemVerilog,apply_stimuli_propagation_apb_part_1_uvm,70,0,2023-01-23 05:18:42+00:00,"['learn-uvm', 'uvm', 'adopt-vip', 'learn-interface-protocols', 'view-waveform']",https://api.github.com/licenses/mit
473,https://github.com/Uvin99/RISC-V-32bit-Single-Cycle-Processor-.git,2023-01-28 07:03:17+00:00,RISC-V 32 bit CPU with direct mapping cache that has a victim cache.  ,0,Uvin99/RISC-V-32bit-Single-Cycle-Processor-,594321505,SystemVerilog,RISC-V-32bit-Single-Cycle-Processor-,343,0,2023-02-26 12:08:56+00:00,[],None
474,https://github.com/joaopmarinho/pulp-projectic.git,2023-01-29 16:59:22+00:00,implementação do core CV32E40P da plataforma PULP,1,joaopmarinho/pulp-projectic,594793361,SystemVerilog,pulp-projectic,9042,0,2023-04-12 15:24:11+00:00,[],None
475,https://github.com/Crysta1ightning/Meow-Pong.git,2023-01-15 16:32:55+00:00,Pong game written in system verilog,0,Crysta1ightning/Meow-Pong,589271184,SystemVerilog,Meow-Pong,265,0,2023-01-15 16:36:38+00:00,[],None
476,https://github.com/pierregobin/myibex.git,2023-01-13 20:38:04+00:00,,0,pierregobin/myibex,588722480,SystemVerilog,myibex,11957,0,2023-01-13 20:41:53+00:00,[],https://api.github.com/licenses/apache-2.0
477,https://github.com/An0nym0us-27/Full-Adder-System-Verilog.git,2023-01-11 05:53:46+00:00,,0,An0nym0us-27/Full-Adder-System-Verilog,587597484,SystemVerilog,Full-Adder-System-Verilog,185,0,2023-01-11 05:54:31+00:00,[],None
478,https://github.com/vulo2405/Simon-Says.git,2023-01-17 04:25:01+00:00,Simon Says by Verilog on FPGA,0,vulo2405/Simon-Says,589846468,SystemVerilog,Simon-Says,17,0,2023-01-17 04:42:08+00:00,[],None
479,https://github.com/panther03/ECE-554-MiniProject.git,2023-02-01 01:15:30+00:00,Spring 2023 ECE 554 Mini Project repository.,0,panther03/ECE-554-MiniProject,595871636,SystemVerilog,ECE-554-MiniProject,823,0,2023-05-13 19:29:09+00:00,[],None
480,https://github.com/saswatiscaledge/saswati_cpu.git,2023-01-31 11:23:13+00:00,,0,saswatiscaledge/saswati_cpu,595576827,SystemVerilog,saswati_cpu,66,0,2023-01-31 11:30:41+00:00,[],None
481,https://github.com/kevweldon/Basic_AXI_Sim.git,2023-01-13 15:40:23+00:00,Platform Designer example demonstrating AXI communication from Mentor's AXI BFM to on-chip RAM. (Quartus 23.4),0,kevweldon/Basic_AXI_Sim,588629467,SystemVerilog,Basic_AXI_Sim,515,0,2024-01-31 12:45:55+00:00,[],None
482,https://github.com/muwyse/black-parrot-fpga.git,2023-01-31 04:59:54+00:00,,0,muwyse/black-parrot-fpga,595448114,SystemVerilog,black-parrot-fpga,463,0,2024-03-14 03:49:17+00:00,[],https://api.github.com/licenses/bsd-3-clause
483,https://github.com/APERI11/DR_StateMachineForCDCL.git,2022-12-08 13:21:54+00:00,,0,APERI11/DR_StateMachineForCDCL,575862998,SystemVerilog,DR_StateMachineForCDCL,4,0,2022-12-08 13:22:27+00:00,[],None
484,https://github.com/sumanmallik05/EECS573_microarcitecture.git,2022-12-11 17:08:27+00:00,,0,sumanmallik05/EECS573_microarcitecture,577000938,SystemVerilog,EECS573_microarcitecture,3,0,2022-12-11 17:42:20+00:00,[],None
485,https://github.com/TalisonK/frequencimetro.git,2022-12-14 15:37:15+00:00,projeto da cadeira de projeto de sinais e sistemas,0,TalisonK/frequencimetro,578242509,SystemVerilog,frequencimetro,4,0,2022-12-15 00:38:00+00:00,[],None
486,https://github.com/KelvinChung2000/RISC-V-32IM_processor.git,2022-12-08 16:14:55+00:00,A simple 5-stage pipeline RISC-V 32IM processor in System Verilog  ,0,KelvinChung2000/RISC-V-32IM_processor,575932325,SystemVerilog,RISC-V-32IM_processor,28,0,2023-04-04 14:47:17+00:00,[],None
487,https://github.com/christoschatz/School-Projects.git,2022-12-08 20:24:38+00:00,A repository to organize my school projects during my studies,0,christoschatz/School-Projects,576017476,SystemVerilog,School-Projects,2109,0,2023-08-14 09:31:26+00:00,"['audio-processing', 'dsp', 'integrated-circuits', 'electronic-measurements', 'microprocessors-and-applications']",None
488,https://github.com/jyk2498/SOC_final.git,2022-12-10 15:49:05+00:00,,0,jyk2498/SOC_final,576671182,SystemVerilog,SOC_final,14,0,2022-12-10 15:54:47+00:00,[],None
489,https://github.com/ScottyB55/Verilog-Convolution-Engine.git,2023-01-21 00:37:07+00:00,,0,ScottyB55/Verilog-Convolution-Engine,591518813,SystemVerilog,Verilog-Convolution-Engine,394,0,2023-01-21 00:41:51+00:00,[],None
490,https://github.com/Khoabk/Computer-engineering-project.git,2022-12-22 03:03:57+00:00,,0,Khoabk/Computer-engineering-project,581009621,SystemVerilog,Computer-engineering-project,225649,0,2022-12-22 03:09:02+00:00,[],None
491,https://github.com/I523360726/123.git,2022-12-21 23:42:42+00:00,,0,I523360726/123,580972925,SystemVerilog,123,557,0,2023-02-09 06:29:47+00:00,[],None
492,https://github.com/scalable-arch/URP2022F.git,2023-01-05 01:37:22+00:00,,3,scalable-arch/URP2022F,585365943,SystemVerilog,URP2022F,4384,0,2023-01-05 01:40:41+00:00,[],https://api.github.com/licenses/apache-2.0
493,https://github.com/dimiderv/VLSI_Systems.git,2023-01-05 05:28:39+00:00,,0,dimiderv/VLSI_Systems,585414495,SystemVerilog,VLSI_Systems,27,0,2023-01-05 07:01:40+00:00,[],https://api.github.com/licenses/apache-2.0
494,https://github.com/BlooHoosker/ni-sim-switch-uvm.git,2023-01-26 22:57:43+00:00,NI-SIM - Simple switch RTL implementation and UVM simulation,0,BlooHoosker/ni-sim-switch-uvm,593822056,SystemVerilog,ni-sim-switch-uvm,12252,0,2023-01-26 23:06:32+00:00,[],None
495,https://github.com/SukanyaMore/First-In-First-Out_Memory.git,2023-02-01 16:53:39+00:00,,0,SukanyaMore/First-In-First-Out_Memory,596189982,SystemVerilog,First-In-First-Out_Memory,188,0,2023-02-01 17:01:10+00:00,[],None
496,https://github.com/ShevtsovNikita/Single-cycle-RISC-V.git,2023-01-15 09:02:33+00:00,"Здесь пошагово расписан процесс моей разработки однотактового процессора с набором инструкций RV32I в ходе выполнения лабораторного практикума по дисциплине ""Архитектуры процессорных систем""",0,ShevtsovNikita/Single-cycle-RISC-V,589157754,SystemVerilog,Single-cycle-RISC-V,108,0,2023-01-15 09:38:01+00:00,[],None
497,https://github.com/wfy-yr/wifi_env.git,2023-01-17 02:21:51+00:00,,0,wfy-yr/wifi_env,589819709,SystemVerilog,wifi_env,111,0,2023-01-31 23:38:54+00:00,[],None
498,https://github.com/cam-br0wn/ce495.git,2023-01-17 08:00:47+00:00,,0,cam-br0wn/ce495,589901988,SystemVerilog,ce495,5633,0,2023-01-18 05:36:35+00:00,[],None
499,https://github.com/mitshine/uvm-examples-simple-steps.git,2023-01-27 14:24:29+00:00,uvm examples in easy steps,0,mitshine/uvm-examples-simple-steps,594067890,SystemVerilog,uvm-examples-simple-steps,8,0,2023-01-27 14:41:28+00:00,[],None
500,https://github.com/samhachem99/fipep.git,2022-12-19 04:17:02+00:00,,0,samhachem99/fipep,579843524,SystemVerilog,fipep,85630,0,2022-12-19 05:33:22+00:00,[],None
501,https://github.com/bjon1/vending-machine.git,2022-12-21 01:01:33+00:00,Vending Machine System In Verilog,0,bjon1/vending-machine,580602885,SystemVerilog,vending-machine,1132,0,2022-12-21 01:14:52+00:00,[],None
502,https://github.com/austinkwb/tactile-sensing.git,2022-12-17 00:56:35+00:00,,0,austinkwb/tactile-sensing,579219033,SystemVerilog,tactile-sensing,265,0,2022-12-17 00:57:46+00:00,[],https://api.github.com/licenses/mit
503,https://github.com/xkunD/digital-design.git,2023-01-28 17:23:56+00:00,,0,xkunD/digital-design,594480345,SystemVerilog,digital-design,7171,0,2023-03-30 12:53:15+00:00,[],None
504,https://github.com/joshgalvan/national-instruments-internship.git,2023-02-07 07:38:19+00:00,This is the main project I produced for National Instruments during my internship.,0,joshgalvan/national-instruments-internship,598479809,SystemVerilog,national-instruments-internship,14,0,2023-02-22 02:43:05+00:00,[],None
505,https://github.com/RaviduHM99/EN3030_CSD_SC_RV32I_Processor.git,2023-02-06 07:03:11+00:00,,0,RaviduHM99/EN3030_CSD_SC_RV32I_Processor,597996594,SystemVerilog,EN3030_CSD_SC_RV32I_Processor,26045,0,2023-05-03 04:40:35+00:00,[],None
506,https://github.com/ctrippel/trippel-lab.git,2023-01-01 15:45:50+00:00,,0,ctrippel/trippel-lab,584151808,SystemVerilog,trippel-lab,103818,0,2024-03-17 19:08:13+00:00,[],None
507,https://github.com/andreibelov/fpga_first_steps.git,2023-01-21 19:21:29+00:00,This repository if for education autodidact purposes ,0,andreibelov/fpga_first_steps,591759384,SystemVerilog,fpga_first_steps,407,0,2023-01-23 05:03:28+00:00,[],None
508,https://github.com/mauriya0202/D_flip_flop_layered_testbench.git,2023-01-02 03:24:39+00:00,,0,mauriya0202/D_flip_flop_layered_testbench,584264003,SystemVerilog,D_flip_flop_layered_testbench,11,0,2023-01-02 03:26:41+00:00,[],None
509,https://github.com/anne118193/ECE-111.git,2023-01-12 00:39:15+00:00,,0,anne118193/ECE-111,587947431,SystemVerilog,ECE-111,7121,0,2023-02-04 22:12:35+00:00,[],None
510,https://github.com/YazanHussnain/RISCV-single-cycle-processor-core.git,2023-01-12 03:45:34+00:00,,0,YazanHussnain/RISCV-single-cycle-processor-core,587988078,SystemVerilog,RISCV-single-cycle-processor-core,10,0,2023-02-05 15:35:53+00:00,[],None
511,https://github.com/MichalOz/digitalSystems_sim3.git,2023-01-18 11:50:36+00:00,,0,MichalOz/digitalSystems_sim3,590427751,SystemVerilog,digitalSystems_sim3,63,0,2023-01-18 11:55:49+00:00,[],None
512,https://github.com/Lvwings/SIFT.git,2023-01-19 06:15:01+00:00,SIFT,0,Lvwings/SIFT,590760595,SystemVerilog,SIFT,24,0,2023-01-19 06:19:11+00:00,[],https://api.github.com/licenses/mit
513,https://github.com/iiCFDii/FPGA-ALU.git,2023-01-20 05:52:20+00:00,"Utilizing an Intel FPGA, programmed a fully functioning ALU in System Verilog which included a datapath, control, memory, 6-bit adder, and a 6-bit logic unit. My design makes use of 13 flip flops and 13 registers.",0,iiCFDii/FPGA-ALU,591187519,SystemVerilog,FPGA-ALU,5,0,2023-01-20 05:54:09+00:00,[],None
514,https://github.com/chandani18/mynew2.git,2023-01-23 11:27:36+00:00,,0,chandani18/mynew2,592275289,SystemVerilog,mynew2,8761,0,2023-01-23 11:29:43+00:00,[],None
515,https://github.com/AlfredoPaolino/R8-MBE_Multiplier_with_Dadda_Tree.git,2022-12-03 21:52:43+00:00,,0,AlfredoPaolino/R8-MBE_Multiplier_with_Dadda_Tree,573928633,SystemVerilog,R8-MBE_Multiplier_with_Dadda_Tree,10,0,2022-12-03 22:01:51+00:00,[],None
516,https://github.com/colemarco/RISC-V-Pipelined-CPU.git,2022-12-28 21:04:33+00:00,A system verilog implementation of a full instruction set RISC-V Pipelined CPU,0,colemarco/RISC-V-Pipelined-CPU,583126023,SystemVerilog,RISC-V-Pipelined-CPU,335,0,2023-01-06 19:19:26+00:00,[],None
517,https://github.com/Oxymoronous/VHDL-Programming.git,2022-12-16 09:37:43+00:00,Digital Systems Laboratory Projects - VHDL and C,0,Oxymoronous/VHDL-Programming,578953372,SystemVerilog,VHDL-Programming,3424,0,2023-01-29 09:39:10+00:00,[],None
518,https://github.com/vishwajeet-sinh/100_RTL_days.git,2022-12-19 01:40:32+00:00,Day 1-10 : -------,0,vishwajeet-sinh/100_RTL_days,579813571,SystemVerilog,100_RTL_days,95,0,2023-08-09 13:21:58+00:00,[],None
519,https://github.com/samanvithakatta/100DaysOfRTLPractice.git,2022-12-18 22:25:05+00:00,100 Days of RTL problems,0,samanvithakatta/100DaysOfRTLPractice,579781884,SystemVerilog,100DaysOfRTLPractice,1,0,2022-12-18 23:38:22+00:00,[],None
520,https://github.com/tay679/ASIC-design.git,2022-12-20 18:42:32+00:00,,0,tay679/ASIC-design,580511784,SystemVerilog,ASIC-design,3654,0,2022-12-20 18:45:17+00:00,[],None
521,https://github.com/paul-vangerow/dsd-supplementary.git,2023-01-24 12:38:47+00:00,,0,paul-vangerow/dsd-supplementary,592740365,SystemVerilog,dsd-supplementary,16110,0,2023-08-13 12:59:35+00:00,[],None
522,https://github.com/kuba6543/alu_unit.git,2023-01-25 20:46:09+00:00,,0,kuba6543/alu_unit,593366531,SystemVerilog,alu_unit,214,0,2023-01-25 20:46:53+00:00,[],None
523,https://github.com/jimkim1037/test_github.git,2023-01-06 13:04:19+00:00,,0,jimkim1037/test_github,585922705,SystemVerilog,test_github,1,0,2023-01-06 13:26:35+00:00,[],None
524,https://github.com/ryanchaiyakul/dav.git,2023-01-15 03:45:45+00:00,DAV Projects taught by IEEE at UCLA,0,ryanchaiyakul/dav,589101858,SystemVerilog,dav,13366,0,2023-01-15 03:51:33+00:00,[],None
525,https://github.com/dvsh-n/Verilog-Stuff.git,2023-01-23 21:40:36+00:00,,0,dvsh-n/Verilog-Stuff,592504398,SystemVerilog,Verilog-Stuff,4586,0,2023-01-23 21:49:51+00:00,[],None
526,https://github.com/chandani18/myfiles.git,2023-01-23 07:22:33+00:00,,0,chandani18/myfiles,592200888,SystemVerilog,myfiles,40954,0,2023-01-23 07:28:19+00:00,[],None
527,https://github.com/mariastt/APS.git,2022-12-19 16:31:40+00:00,,0,mariastt/APS,580068330,SystemVerilog,APS,21,0,2022-12-24 15:12:08+00:00,[],None
528,https://github.com/GudduKumar0208/The-Advanced-Peripheral-Bus-APB-.git,2022-12-02 02:26:42+00:00,The Advanced Peripheral Bus (APB) is part of the Advanced Microcontroller Bus Architecture (AMBA) protocol family.,0,GudduKumar0208/The-Advanced-Peripheral-Bus-APB-,573245963,SystemVerilog,The-Advanced-Peripheral-Bus-APB-,13,0,2022-12-02 02:28:38+00:00,[],None
529,https://github.com/GudduKumar0208/RAM-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY.git,2022-12-02 02:40:02+00:00,,0,GudduKumar0208/RAM-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY,573249327,SystemVerilog,RAM-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY,10,0,2022-12-02 02:43:02+00:00,[],None
530,https://github.com/yumiweidemao/ECE-385-Labs.git,2022-12-14 20:08:07+00:00,Labs & Final Project of ECE 385 Fall 2022 UIUC,0,yumiweidemao/ECE-385-Labs,578333594,SystemVerilog,ECE-385-Labs,6336,0,2022-12-14 20:19:39+00:00,[],None
531,https://github.com/VictorIsachi/fifo_with_parity_checker.git,2023-02-06 20:10:43+00:00,,0,VictorIsachi/fifo_with_parity_checker,598295369,SystemVerilog,fifo_with_parity_checker,34,0,2023-02-06 20:12:03+00:00,[],None
532,https://github.com/Sov-trotter/Design-Verification.git,2023-01-06 13:08:39+00:00,,1,Sov-trotter/Design-Verification,585924060,SystemVerilog,Design-Verification,676,0,2024-01-28 15:18:22+00:00,[],None
533,https://github.com/nvchuyen/Verification_of_SPI_memory.git,2022-12-01 04:06:22+00:00,,0,nvchuyen/Verification_of_SPI_memory,572804443,SystemVerilog,Verification_of_SPI_memory,5622,0,2023-11-06 08:54:55+00:00,[],None
534,https://github.com/madellimac/hw-aff3ct.git,2023-01-30 14:01:02+00:00,Hardware in the loop for the AFF3CT library.,0,madellimac/hw-aff3ct,595151418,SystemVerilog,hw-aff3ct,673,0,2023-11-17 13:36:01+00:00,[],None
535,https://github.com/meenalpannase/RAL_Module4.git,2022-12-14 19:04:24+00:00,,1,meenalpannase/RAL_Module4,578315751,SystemVerilog,RAL_Module4,423,0,2022-12-15 08:31:17+00:00,[],None
536,https://github.com/j4ger/cyclops.git,2022-12-19 08:16:43+00:00,A verilog design of a simple VGA graphics card.,0,j4ger/cyclops,579901545,SystemVerilog,cyclops,1360,0,2022-12-20 10:43:00+00:00,[],https://api.github.com/licenses/apache-2.0
537,https://github.com/Basher4/FPGA-Playground.git,2022-12-19 22:41:34+00:00,Playing around with fpgas I have,0,Basher4/FPGA-Playground,580174926,SystemVerilog,FPGA-Playground,776,0,2022-12-19 22:44:39+00:00,[],None
538,https://github.com/nmamore/intel8080.git,2023-01-02 22:29:23+00:00,Recreation of Intel 8080 to learn about CPUs,0,nmamore/intel8080,584551999,SystemVerilog,intel8080,144,0,2023-01-02 22:29:30+00:00,[],None
539,https://github.com/vuhuycan/pmbist.git,2022-12-29 16:21:33+00:00,,0,vuhuycan/pmbist,583388222,SystemVerilog,pmbist,54,0,2023-06-01 08:53:12+00:00,[],None
540,https://github.com/wdevore/MachDyne_FPGAs_SBCs.git,2023-01-01 01:50:41+00:00,"Machdyne series of FPGA boards. Eis, Schoko, Keks, Bon Bon",0,wdevore/MachDyne_FPGAs_SBCs,584030372,SystemVerilog,MachDyne_FPGAs_SBCs,43230,0,2023-01-08 04:38:11+00:00,[],https://api.github.com/licenses/mit
541,https://github.com/Susmitpr/Basic_verilog_code.git,2022-12-28 12:43:27+00:00,,0,Susmitpr/Basic_verilog_code,582989404,SystemVerilog,Basic_verilog_code,297,0,2023-02-25 13:14:36+00:00,[],None
542,https://github.com/justanuman/cpu_lab6.git,2023-01-07 10:40:37+00:00,процессор для 6 лаболаторной,0,justanuman/cpu_lab6,586211677,SystemVerilog,cpu_lab6,86,0,2023-01-07 12:22:52+00:00,[],None
543,https://github.com/DilipKrishnappa/NAND_UVMF.git,2023-01-07 12:36:35+00:00,,0,DilipKrishnappa/NAND_UVMF,586237323,SystemVerilog,NAND_UVMF,54283,0,2023-01-07 12:46:38+00:00,[],None
544,https://github.com/kingshrimp007/sv_sandbox.git,2023-01-12 02:28:19+00:00,,0,kingshrimp007/sv_sandbox,587971113,SystemVerilog,sv_sandbox,0,0,2023-01-12 02:38:13+00:00,[],None
545,https://github.com/mohammadhasanloo/CA-CA4-Pipeline-MIPS.git,2023-01-21 14:25:02+00:00,,0,mohammadhasanloo/CA-CA4-Pipeline-MIPS,591681677,SystemVerilog,CA-CA4-Pipeline-MIPS,970,0,2023-01-21 14:28:06+00:00,[],None
546,https://github.com/iiCFDii/FPGA-Tic-Tac-Toe-Display-Driver.git,2023-01-20 05:57:33+00:00,Utilized an Intel FPGA board to render a TicTacToe game on a monitor via VGA connection. All Game Logic and pixel rendering done via System Verilog Logic. ,0,iiCFDii/FPGA-Tic-Tac-Toe-Display-Driver,591188637,SystemVerilog,FPGA-Tic-Tac-Toe-Display-Driver,329,0,2023-01-20 05:59:58+00:00,[],None
547,https://github.com/glkclass/csi_tb.git,2023-02-03 11:05:08+00:00,CSI TB,0,glkclass/csi_tb,596980608,SystemVerilog,csi_tb,129,0,2023-02-03 11:10:59+00:00,[],https://api.github.com/licenses/apache-2.0
548,https://github.com/joaquimelerebel/riscV.git,2022-12-09 10:07:33+00:00,,0,joaquimelerebel/riscV,576227394,SystemVerilog,riscV,69970,0,2023-05-12 21:31:04+00:00,[],
549,https://github.com/fabio-pecora/four-bit-adder.git,2022-12-09 19:36:29+00:00,,0,fabio-pecora/four-bit-adder,576410351,SystemVerilog,four-bit-adder,3,0,2022-12-09 19:37:06+00:00,[],None
550,https://github.com/coderjaspal/git_demo_repo.git,2022-12-16 09:59:16+00:00,for learning basic of git,0,coderjaspal/git_demo_repo,578959990,SystemVerilog,git_demo_repo,2,0,2022-12-16 10:55:26+00:00,[],None
551,https://github.com/MisbahNaeem/32bit-Single-Cycle-RISC-V-Processor.git,2022-12-12 06:58:01+00:00,,0,MisbahNaeem/32bit-Single-Cycle-RISC-V-Processor,577185303,SystemVerilog,32bit-Single-Cycle-RISC-V-Processor,8,0,2022-12-12 06:59:20+00:00,[],None
552,https://github.com/dyoung223/rasterizer.git,2022-12-03 01:19:09+00:00,,0,dyoung223/rasterizer,573644586,SystemVerilog,rasterizer,17576,0,2022-12-03 04:17:18+00:00,[],None
553,https://github.com/mauriya0202/COO_Matrix.git,2023-01-02 03:15:50+00:00,,0,mauriya0202/COO_Matrix,584262622,SystemVerilog,COO_Matrix,3,0,2023-01-02 03:20:47+00:00,[],None
554,https://github.com/aldendsouza18/PongGame.git,2023-01-05 10:58:49+00:00,,0,aldendsouza18/PongGame,585509320,SystemVerilog,PongGame,8,0,2023-01-05 11:06:22+00:00,[],None
555,https://github.com/etf-tk-sdn/DPPSN.git,2023-01-04 15:56:31+00:00,,0,etf-tk-sdn/DPPSN,585215337,SystemVerilog,DPPSN,2555,0,2023-01-04 15:56:56+00:00,[],https://api.github.com/licenses/mit
556,https://github.com/kapetan-nemo/verification_studies.git,2023-01-04 09:08:03+00:00,Изучение искусства верификации,0,kapetan-nemo/verification_studies,585078983,SystemVerilog,verification_studies,5846,0,2023-02-20 06:36:31+00:00,[],None
557,https://github.com/cameronyap01/Digital-Systems-Design-Project.git,2022-12-23 04:44:02+00:00,This project is a hardware implementation of an image decompressor and is done in collaboration with Arjun Snider,0,cameronyap01/Digital-Systems-Design-Project,581402635,SystemVerilog,Digital-Systems-Design-Project,3517,0,2022-12-23 04:49:49+00:00,[],None
558,https://github.com/trotwuu/Computer-Architecture.git,2023-01-27 03:25:31+00:00,Purdue ECE 43700 CPU Design Lab,0,trotwuu/Computer-Architecture,593879441,SystemVerilog,Computer-Architecture,6991,0,2023-06-26 16:37:08+00:00,[],None
559,https://github.com/satvick16/alu.git,2023-01-25 22:14:58+00:00,A simple CPU control and data path written in SystemVerilog.,0,satvick16/alu,593392574,SystemVerilog,alu,2,0,2023-07-05 11:52:12+00:00,[],None
560,https://github.com/ali-tunahan/Calculator_8-Bit_Basys3.git,2023-01-16 16:30:35+00:00,,0,ali-tunahan/Calculator_8-Bit_Basys3,589660289,SystemVerilog,Calculator_8-Bit_Basys3,13,0,2023-02-02 11:26:43+00:00,[],None
561,https://github.com/yishaim/RTL100.git,2023-01-17 20:32:59+00:00,Implement a RISC-V processor in 100 days (or less),0,yishaim/RTL100,590180059,SystemVerilog,RTL100,14,0,2023-01-29 17:58:50+00:00,[],None
562,https://github.com/Rn86222/sanmoku-narabe-FSM.git,2023-01-23 16:14:21+00:00,,0,Rn86222/sanmoku-narabe-FSM,592386734,SystemVerilog,sanmoku-narabe-FSM,734,0,2023-03-01 15:17:25+00:00,[],None
563,https://github.com/pawanv1997/pawan_cpu.git,2023-01-31 10:30:13+00:00,about cpu desgn,0,pawanv1997/pawan_cpu,595557427,SystemVerilog,pawan_cpu,328,0,2023-02-07 10:53:18+00:00,[],None
564,https://github.com/Btremaine/Basys_3_LFSR.git,2023-01-30 17:50:58+00:00,Project on Baysys 3 board implementing 16-bit LFSR,0,Btremaine/Basys_3_LFSR,595250854,SystemVerilog,Basys_3_LFSR,4017,0,2023-01-30 18:31:32+00:00,[],None
565,https://github.com/DaveMcEwan/student-asvi.git,2023-02-02 10:59:25+00:00,Andrew's SystemVerilog interfaces project,1,DaveMcEwan/student-asvi,596515452,SystemVerilog,student-asvi,357,0,2023-07-03 16:16:41+00:00,[],https://api.github.com/licenses/mit
566,https://github.com/Arseniy16/Yadro_labs.git,2022-12-02 01:50:40+00:00,This is reposiory for FPGA test labs in YADRO,0,Arseniy16/Yadro_labs,573237115,SystemVerilog,Yadro_labs,22,0,2023-03-03 08:23:37+00:00,[],None
567,https://github.com/shrawankumar584/Checking-proj.git,2023-02-07 15:18:12+00:00,Checking our git working,0,shrawankumar584/Checking-proj,598666541,SystemVerilog,Checking-proj,0,0,2023-02-07 15:23:39+00:00,[],None
568,https://github.com/iampragyagupta/Verilog.git,2023-02-07 17:29:30+00:00,,0,iampragyagupta/Verilog,598724965,SystemVerilog,Verilog,14,0,2023-02-07 17:33:26+00:00,[],None
569,https://github.com/yms020615/COSE222.git,2022-12-27 13:12:29+00:00,,0,yms020615/COSE222,582645914,SystemVerilog,COSE222,3388,0,2024-01-17 23:56:01+00:00,[],None
570,https://github.com/rahul7rajdn/ethernet.git,2023-01-04 06:11:45+00:00,Verilog Project to swap source and destination address in ethernet frame and System verilog based verification for the same,0,rahul7rajdn/ethernet,585029084,SystemVerilog,ethernet,568,0,2024-01-31 08:06:23+00:00,[],None
571,https://github.com/DNSalaf/SE204_DE10-Nano.git,2023-01-27 23:52:43+00:00,Different projects in verilog system developed in SE204 discipline (Numerical architectures and FPGA programming).,0,DNSalaf/SE204_DE10-Nano,594242701,SystemVerilog,SE204_DE10-Nano,22542,0,2023-12-30 12:47:09+00:00,[],None
