,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/raulbehl/100DaysOfRTL.git,2022-06-12 06:50:06+00:00,100 Days of RTL,89,raulbehl/100DaysOfRTL,502541091,SystemVerilog,100DaysOfRTL,180,293,2024-04-12 04:04:46+00:00,[],None
1,https://github.com/nand2mario/nestang.git,2022-09-15 03:24:34+00:00,"NESTang is an FPGA Nintendo Entertainment System implemented with Sipeed Tang Primer 25K, Nano 20K and Primer 20K boards",29,nand2mario/nestang,536848750,SystemVerilog,nestang,9983,290,2024-04-07 16:52:18+00:00,"['nes', 'fpga']",https://api.github.com/licenses/gpl-3.0
2,https://github.com/apfelaudio/eurorack-pmod.git,2022-06-18 17:17:54+00:00,Hardware and gateware for getting started in FPGA-based audio synthesis with open source tools.,7,apfelaudio/eurorack-pmod,504905833,SystemVerilog,eurorack-pmod,21829,158,2024-04-01 10:15:26+00:00,"['electronics', 'eurorack', 'fpga', 'hardware', 'modular-synthesizers', 'cocotb', 'kicad', 'synthesizer', 'verilog', 'yosys', 'pmod']",
3,https://github.com/agg23/analogue-pocket-utils.git,2022-09-03 19:29:30+00:00,Collection of IP and information on how to develop for openFPGA and Analogue Pocket,3,agg23/analogue-pocket-utils,532355474,SystemVerilog,analogue-pocket-utils,56,104,2024-04-12 02:35:12+00:00,"['analogue-pocket', 'fpga', 'openfpga', 'hacktoberfest']",https://api.github.com/licenses/mit
4,https://github.com/pulp-platform/cheshire.git,2022-09-01 07:39:26+00:00,A minimal Linux-capable 64-bit RISC-V SoC built around CVA6,27,pulp-platform/cheshire,531413954,SystemVerilog,cheshire,30578,99,2024-04-09 04:45:06+00:00,"['fpga', 'riscv', 'rtl-design', 'simulation', 'systemverilog', 'asic']",
5,https://github.com/mathis-s/SoomRV.git,2022-09-10 22:24:55+00:00,A simple superscalar out of order RISC-V (micro)processor,6,mathis-s/SoomRV,535133158,SystemVerilog,SoomRV,2550,94,2024-04-09 04:50:08+00:00,['risc-v'],https://api.github.com/licenses/mit
6,https://github.com/lizhirui/AXI-SDCard-High-Speed-Controller.git,2022-08-27 10:58:20+00:00,A SDCard Controller Based AXI4 Bus with SDIO 4-wire 50MHz Mode(Max Rate 23MB/s),14,lizhirui/AXI-SDCard-High-Speed-Controller,529559093,SystemVerilog,AXI-SDCard-High-Speed-Controller,234,93,2024-04-12 01:30:34+00:00,[],https://api.github.com/licenses/apache-2.0
7,https://github.com/WangXuan95/FPGA-SATA-HBA.git,2022-08-15 12:59:51+00:00,A SATA host (HBA) core based on Xilinx FPGA with GTH to read/write hard disk. 一个基于Xilinx FPGA中的GTH的SATA host控制器，用来读写硬盘。,19,WangXuan95/FPGA-SATA-HBA,524988427,SystemVerilog,FPGA-SATA-HBA,5304,68,2024-04-03 03:30:25+00:00,"['fpga', 'sata', 'sata-controller', 'systemverilog', 'verilog', 'sata-core', 'sata-hba', 'sata-hba-controller', 'sata-hba-core', 'virtex-7']",https://api.github.com/licenses/gpl-3.0
8,https://github.com/pulp-platform/iDMA.git,2022-07-26 12:25:38+00:00,"A modular, parametrizable, and highly flexible Data Movement Accelerator (DMA)",19,pulp-platform/iDMA,518051260,SystemVerilog,iDMA,6215,60,2024-04-11 11:35:07+00:00,[],
9,https://github.com/lowRISC/muntjac.git,2022-06-10 15:33:30+00:00,64-bit multicore RISC-V processor,4,lowRISC/muntjac,502094220,SystemVerilog,muntjac,963,55,2024-04-09 05:04:09+00:00,[],https://api.github.com/licenses/apache-2.0
10,https://github.com/mbits-mirafra/SystemVerilogCourse.git,2022-06-30 10:39:02+00:00,This is a detailed SystemVerilog course ,23,mbits-mirafra/SystemVerilogCourse,509037539,SystemVerilog,SystemVerilogCourse,18405,54,2024-04-09 05:03:07+00:00,[],None
11,https://github.com/tinyvision-ai-inc/Hands-on-FPGA-class.git,2022-06-02 21:28:02+00:00,,8,tinyvision-ai-inc/Hands-on-FPGA-class,499296047,SystemVerilog,Hands-on-FPGA-class,9107,35,2024-04-04 11:47:29+00:00,[],None
12,https://github.com/Shehab-Naga/ddr5_phy.git,2022-06-30 11:56:20+00:00,DDR5 PHY Graduation project (Verification Team) under supervision of Si-Vision,16,Shehab-Naga/ddr5_phy,509060808,SystemVerilog,ddr5_phy,13593,34,2024-03-15 01:28:15+00:00,"['gp', 'systemverilog', 'uvm']",https://api.github.com/licenses/mit
13,https://github.com/ericlewis/openfpga-spacerace.git,2022-09-09 13:57:29+00:00,"FPGA implementation of Arcade Space Race (Atari, 1973) for Analogue Pocket.",0,ericlewis/openfpga-spacerace,534664989,SystemVerilog,openfpga-spacerace,4866,32,2023-10-14 04:25:52+00:00,"['analogue-pocket', 'fpga', 'mister']",None
14,https://github.com/aignacio/axi_dma.git,2022-06-19 12:53:37+00:00,General Purpose AXI Direct Memory Access,7,aignacio/axi_dma,505109321,SystemVerilog,axi_dma,1118,31,2024-03-20 14:43:28+00:00,[],https://api.github.com/licenses/mit
15,https://github.com/ttchisholm/10g-low-latency-ethernet.git,2022-06-19 10:51:41+00:00,10G Low Latency Ethernet,9,ttchisholm/10g-low-latency-ethernet,505082250,SystemVerilog,10g-low-latency-ethernet,542,25,2024-02-22 10:30:39+00:00,"['cocotb', 'ethernet', 'fpga', 'pyuvm', 'systemverilog', 'xilinx']",https://api.github.com/licenses/mit
16,https://github.com/krikzz/tot6502.git,2022-05-15 09:12:07+00:00,,4,krikzz/tot6502,492438386,SystemVerilog,tot6502,6,25,2022-12-17 04:44:27+00:00,[],None
17,https://github.com/avashist003/SystemVerilog_Design_Verification.git,2022-07-13 01:27:53+00:00,Various RTL design blocks along with verification testbenches with SVAs. Designed using SystemVerilog,3,avashist003/SystemVerilog_Design_Verification,513341931,SystemVerilog,SystemVerilog_Design_Verification,362,23,2024-03-21 03:47:44+00:00,"['rtldesign', 'systemverilog']",https://api.github.com/licenses/mit
18,https://github.com/wenxuan-hu/SSRL_work.git,2022-08-26 18:14:35+00:00,"work in SSRL, SOC/NOC/Chiplet Design, DDR/UCIe/PCIe, UVM Framework",3,wenxuan-hu/SSRL_work,529362201,SystemVerilog,SSRL_work,11574,20,2024-04-09 08:25:01+00:00,[],None
19,https://github.com/abdelrhman-oun/DDR5_PHY_WriteOperation.git,2022-08-29 14:16:51+00:00,,6,abdelrhman-oun/DDR5_PHY_WriteOperation,530251710,SystemVerilog,DDR5_PHY_WriteOperation,17844,20,2024-04-13 03:59:49+00:00,"['ddr5', 'fpga', 'systemverilog', 'ddr5-phy']",None
20,https://github.com/pulp-platform/sne.git,2022-08-19 19:15:42+00:00,,0,pulp-platform/sne,526725531,SystemVerilog,sne,212,14,2024-02-07 09:12:35+00:00,[],
21,https://github.com/WajahatRiaz/QuadSPI.git,2022-05-24 20:02:14+00:00,RTL development of Quad Serial Peripheral Interface (Quad-SPI) on QuestaSim using SystemVerilog.,6,WajahatRiaz/QuadSPI,495970930,SystemVerilog,QuadSPI,1402,14,2024-04-03 01:50:28+00:00,"['quadspi', 'questasim', 'rtl', 'systemverilog', 'quad-spi', 'computerarchitecture', 'digitalsystemdesign']",https://api.github.com/licenses/apache-2.0
22,https://github.com/pulp-platform/axi_llc.git,2022-08-16 11:59:03+00:00,,13,pulp-platform/axi_llc,525359830,SystemVerilog,axi_llc,1130,13,2023-09-28 09:34:38+00:00,[],
23,https://github.com/ved-rivos/iommu-rtl.git,2022-05-21 17:20:50+00:00,RISC-V IOMMU in verilog,3,ved-rivos/iommu-rtl,494849014,SystemVerilog,iommu-rtl,61,13,2024-03-21 03:45:26+00:00,[],https://api.github.com/licenses/bsd-2-clause
24,https://github.com/GabbedT/ApogeoRV.git,2022-08-15 10:05:29+00:00,"A RISC-V 32 bits, Out Of Order, single issue with branch prediction CPU, implementing the B, C, M and Zfinx extensions.",1,GabbedT/ApogeoRV,524937438,SystemVerilog,ApogeoRV,7376,13,2024-04-09 04:47:55+00:00,"['asic', 'cpu', 'fpga', 'hdl', 'systemverilog', 'rv32i', 'rv32c', 'rv32m', 'rv32b', 'rv32zfinx']",https://api.github.com/licenses/mit
25,https://github.com/ZSusskind/BTHOWeN.git,2022-08-04 01:07:18+00:00,"Code to accompany ""Weightless Neural Networks for Efficient Edge Inference"", PACT 2022",4,ZSusskind/BTHOWeN,521079566,SystemVerilog,BTHOWeN,1696,11,2024-04-03 12:03:13+00:00,['weightless-neural-network'],https://api.github.com/licenses/mit
26,https://github.com/muneeb-mbytes/UVMF.git,2022-06-02 11:07:31+00:00,,8,muneeb-mbytes/UVMF,499101616,SystemVerilog,UVMF,196229,11,2024-03-16 08:04:28+00:00,[],None
27,https://github.com/enkerewpo/methane.git,2022-08-04 09:59:50+00:00,A polyphonic synthesizer built on fpga and esp32,1,enkerewpo/methane,521213430,SystemVerilog,methane,70767,10,2024-03-16 12:55:32+00:00,"['fpga', 'music-hardware', 'synthesizer', 'esp32', 'chisel3', 'systemverilog', 'verilog']",https://api.github.com/licenses/bsd-3-clause
28,https://github.com/apriya-ram/AXI_FIFO_BFM.git,2022-06-28 09:00:25+00:00,AXI4 with a FIFO integrated with VIP,81,apriya-ram/AXI_FIFO_BFM,508226520,SystemVerilog,AXI_FIFO_BFM,27565,10,2024-03-31 14:13:52+00:00,[],None
29,https://github.com/cyyself/CDIM-SoC.git,2022-09-15 14:30:13+00:00,SoC for CQU Dual Issue Machine,0,cyyself/CDIM-SoC,537065710,SystemVerilog,CDIM-SoC,19774,10,2023-10-03 10:46:29+00:00,[],None
30,https://github.com/ElectronAsh/sim_3do.git,2022-07-09 17:47:57+00:00,Verilator / Imgui sim for 3DO FPGA core attempt,1,ElectronAsh/sim_3do,512250226,SystemVerilog,sim_3do,2830,9,2024-02-17 22:29:53+00:00,[],None
31,https://github.com/antmicro/verilator-verification-features-tests.git,2022-07-06 08:20:07+00:00,,3,antmicro/verilator-verification-features-tests,511050271,SystemVerilog,verilator-verification-features-tests,29122,9,2024-03-14 09:25:21+00:00,[],https://api.github.com/licenses/apache-2.0
32,https://github.com/FPGA-MAFIA/fpga_mafia.git,2022-08-07 08:46:28+00:00,Designing a Multi-Agent Fabric Integration Architecture to run on de10-lite FPGA. ,4,FPGA-MAFIA/fpga_mafia,522160671,SystemVerilog,fpga_mafia,28485,8,2024-01-12 18:34:36+00:00,"['mesh', 'riscv', 'fpga', 'manycore', 'hardware', 'risc-v']",https://api.github.com/licenses/mit
33,https://github.com/MiSTer-devel/PokemonMini_MiSTer.git,2022-09-04 11:03:35+00:00,Pokemon Mini for MiSTer,4,MiSTer-devel/PokemonMini_MiSTer,532514377,SystemVerilog,PokemonMini_MiSTer,6909,7,2022-11-22 00:04:34+00:00,[],https://api.github.com/licenses/gpl-2.0
34,https://github.com/flashbangout/apb_watchdog-.git,2022-06-13 14:52:26+00:00,apb_watchdog的uvm验证代码,1,flashbangout/apb_watchdog-,502999446,SystemVerilog,apb_watchdog-,43,6,2024-03-12 16:35:51+00:00,[],None
35,https://github.com/suisuisi/SystemVerilog.git,2022-08-06 14:48:29+00:00,SystemVerilog of syntax and Practices,0,suisuisi/SystemVerilog,521973574,SystemVerilog,SystemVerilog,22308,6,2024-01-26 00:14:24+00:00,[],https://api.github.com/licenses/mit
36,https://github.com/SavourySnaX/MiSTer_KonixMultisystem.git,2022-05-14 11:47:44+00:00,MiSTer Implementation of the Konix Multi System - Based on the original Net Lists - And a new 8088 core based on https://www.reenigne.org/blog/8086-microcode-disassembled/,0,SavourySnaX/MiSTer_KonixMultisystem,492200628,SystemVerilog,MiSTer_KonixMultisystem,19770,6,2023-06-07 14:36:01+00:00,[],https://api.github.com/licenses/gpl-2.0
37,https://github.com/robfinch/rfPhoenix.git,2022-08-25 20:41:02+00:00,rfPhoenix CPU / GPGPU core,1,robfinch/rfPhoenix,529011642,SystemVerilog,rfPhoenix,7544,6,2024-03-19 15:49:33+00:00,[],None
38,https://github.com/Raghavi9860/UVM_based_Verification_of_APB_protocol.git,2022-05-15 18:22:28+00:00,APB Protocol is designed and verified using System Verilog based UVM. The tool used in designing and simulation is EDA Playground.,1,Raghavi9860/UVM_based_Verification_of_APB_protocol,492569213,SystemVerilog,UVM_based_Verification_of_APB_protocol,20,5,2024-03-29 06:49:55+00:00,[],None
39,https://github.com/ninglixin98/AHB_GPIO.git,2022-08-08 15:10:22+00:00,,0,ninglixin98/AHB_GPIO,522598915,SystemVerilog,AHB_GPIO,54,5,2024-04-02 12:39:14+00:00,[],None
40,https://github.com/taneroksuz/wolv-z7.git,2022-06-03 13:17:20+00:00,Wolv Z7 is a RISC-V CPU core with floating point unit,3,taneroksuz/wolv-z7,499518333,SystemVerilog,wolv-z7,573,5,2024-04-08 13:30:52+00:00,"['hardware', 'risc-v', 'rv32', 'fpu', 'cpu', 'core', 'fpga']",https://api.github.com/licenses/apache-2.0
41,https://github.com/BrianHGinc/BHG_I2C_init_RS232_debugger.git,2022-08-16 12:51:53+00:00,A Verilog I2C initializer with integrated RS232 debugger. *** New v1.1 Supports I2C CLK stretch and separate IO buffers for driving Efinix's IO primitive.,0,BrianHGinc/BHG_I2C_init_RS232_debugger,525378073,SystemVerilog,BHG_I2C_init_RS232_debugger,52,5,2023-07-25 15:00:34+00:00,"['verilog', 'i2c', 'rs232', 'verilog-hdl']",None
42,https://github.com/LTDS-Capo/ProcessORC.git,2022-07-13 19:06:59+00:00,,1,LTDS-Capo/ProcessORC,513640887,SystemVerilog,ProcessORC,12355,5,2024-01-07 17:08:49+00:00,[],None
43,https://github.com/antmicro/ahb-tl-bridge.git,2022-09-09 07:51:33+00:00,SystemVerilog implementation of the AHB to TileLink UL (Uncached Lightweight) bridge,2,antmicro/ahb-tl-bridge,534550284,SystemVerilog,ahb-tl-bridge,12,5,2023-12-23 19:15:10+00:00,[],https://api.github.com/licenses/apache-2.0
44,https://github.com/Reconfigurable-Computing/flex_BRAM_FPGA.git,2022-09-13 02:07:35+00:00,"Verilog module for flexible instantiation of ROM/RAM of arbitrary depth and bit width. Automatically reduce BRAM usage through depth division, bit width division, and bit width folding.",1,Reconfigurable-Computing/flex_BRAM_FPGA,535922655,SystemVerilog,flex_BRAM_FPGA,7,5,2023-02-10 02:01:22+00:00,[],None
45,https://github.com/pulp-platform/CUTIE.git,2022-05-18 15:50:06+00:00,,2,pulp-platform/CUTIE,493728891,SystemVerilog,CUTIE,93,5,2024-03-20 09:15:46+00:00,[],
46,https://github.com/amiq-consulting/amiq_fifo.git,2022-06-27 04:23:07+00:00,Functional Coverage Patterns for FIFO,1,amiq-consulting/amiq_fifo,507760948,SystemVerilog,amiq_fifo,45,5,2023-11-11 11:10:25+00:00,[],https://api.github.com/licenses/apache-2.0
47,https://github.com/lizhirui/MyRISC-VCore-rtl.git,2022-07-22 08:50:07+00:00,MyRISC-VCore-rtl,0,lizhirui/MyRISC-VCore-rtl,516677790,SystemVerilog,MyRISC-VCore-rtl,420,5,2023-03-14 06:46:11+00:00,[],None
48,https://github.com/andreili/RISC-V-core.git,2022-09-07 19:17:39+00:00,My implementation of a RISC-V architecture,1,andreili/RISC-V-core,533907587,SystemVerilog,RISC-V-core,3294,5,2023-08-18 17:02:00+00:00,[],https://api.github.com/licenses/mit
49,https://github.com/hgoli02/Computer-Architecture-Project.git,2022-07-29 20:14:31+00:00,Computer Architecture Project Spring 2022  4 phase MIPS,1,hgoli02/Computer-Architecture-Project,519338892,SystemVerilog,Computer-Architecture-Project,2032,4,2023-01-31 15:22:29+00:00,[],None
50,https://github.com/avinash-nonholonomy/olin-cafe-f22.git,2022-09-19 19:09:43+00:00,Repository for Olin's ENGR3410 - Fall 2022,27,avinash-nonholonomy/olin-cafe-f22,538658456,SystemVerilog,olin-cafe-f22,5678,4,2023-01-31 20:25:51+00:00,[],https://api.github.com/licenses/mit
51,https://github.com/tinylabs/crypto-rtl-cores.git,2022-06-26 21:23:19+00:00,Fusesoc cores for crypto processing,0,tinylabs/crypto-rtl-cores,507687519,SystemVerilog,crypto-rtl-cores,1792,4,2024-03-14 13:14:27+00:00,[],None
52,https://github.com/vishal1303/Thanos.git,2022-06-11 16:24:08+00:00,Programmable Multi-Dimensional Table Filters for Line Rate Network Functions,1,vishal1303/Thanos,502399131,SystemVerilog,Thanos,10410,4,2023-09-22 07:47:41+00:00,[],None
53,https://github.com/antmicro/tl-ahb-bridge.git,2022-09-09 08:03:53+00:00,This project contains a SystemVerilog implementation of the TileLink UL (Uncached Lightweight) to AHB bridge.,2,antmicro/tl-ahb-bridge,534553835,SystemVerilog,tl-ahb-bridge,14,4,2023-12-23 19:14:53+00:00,[],https://api.github.com/licenses/apache-2.0
54,https://github.com/MuhammadMajiid/MIPS-Processor.git,2022-09-03 20:06:51+00:00,Implementation of 32-bit MIPS-processor using SystemVerilog HDL,0,MuhammadMajiid/MIPS-Processor,532362979,SystemVerilog,MIPS-Processor,537,4,2023-10-23 04:02:39+00:00,[],None
55,https://github.com/chanum/uvm_spi_apb_verification.git,2022-07-12 13:50:18+00:00,,0,chanum/uvm_spi_apb_verification,513161082,SystemVerilog,uvm_spi_apb_verification,258,4,2023-11-18 07:06:28+00:00,[],None
56,https://github.com/supranational/minroot_hardware.git,2022-06-17 19:50:12+00:00,Minroot VDF Hardware Engine,1,supranational/minroot_hardware,504655245,SystemVerilog,minroot_hardware,43,4,2024-01-29 18:09:07+00:00,[],https://api.github.com/licenses/apache-2.0
57,https://github.com/nockieboy/YM2149_PSG_system.git,2022-08-23 15:18:25+00:00,"YM2149 / AY-3-8910 Programmable Sound Generator in SystemVerilog and Verilog. Offers dual PSGs, programmable stereo mixer with bass and treble controls, standard I2S 44.1KHz or 48KHz 16-bit digital audio out, and built-in floating point system clock divider/generator.",2,nockieboy/YM2149_PSG_system,528048675,SystemVerilog,YM2149_PSG_system,188,4,2024-03-13 16:56:39+00:00,"['ay-3-8910', 'psg', 'systemverilog', 'verilog', 'ym2149', 'sound-generator', 'fpga', 'hdl', 'retrocomputing']",None
58,https://github.com/xing-benjamin/risc-v.git,2022-09-17 20:43:13+00:00,Repo for some fun RISC-V projects.,0,xing-benjamin/risc-v,537926063,SystemVerilog,risc-v,6026,4,2023-04-21 21:33:49+00:00,[],None
59,https://github.com/WazaAbdulkadir/Processor_that_can_communicate_with_UART.git,2022-07-21 04:38:37+00:00,A simple processor that have ability to communicate with ysing UART ,0,WazaAbdulkadir/Processor_that_can_communicate_with_UART,516225939,SystemVerilog,Processor_that_can_communicate_with_UART,506,4,2023-12-31 18:09:07+00:00,[],None
60,https://github.com/cggewehr/RISCV-crypto.git,2022-08-15 00:04:22+00:00,Ibex RISC-V core extended with hardware acceleration of cryptography functions ,0,cggewehr/RISCV-crypto,524807763,SystemVerilog,RISCV-crypto,71741,3,2023-12-20 13:00:14+00:00,[],None
61,https://github.com/coverify/axi4reg.git,2022-05-16 09:12:14+00:00,AXI4 VIP for Reg Verifiation,4,coverify/axi4reg,492761940,SystemVerilog,axi4reg,26,3,2023-12-25 13:17:49+00:00,[],None
62,https://github.com/abrahamjdn/Systemverilog-Verification-MIPS-Multicycle.git,2022-07-06 08:45:05+00:00,Scoreboard using Systemverilog for MIPS multicycle verification,0,abrahamjdn/Systemverilog-Verification-MIPS-Multicycle,511058223,SystemVerilog,Systemverilog-Verification-MIPS-Multicycle,17,3,2024-01-16 14:15:43+00:00,[],None
63,https://github.com/CompuSAR/control_cpu.git,2022-09-24 09:49:57+00:00,FPGA setup with memory and Risc V CPU,1,CompuSAR/control_cpu,540781092,SystemVerilog,control_cpu,492,3,2024-04-08 10:39:06+00:00,[],None
64,https://github.com/kashifminhas/IBEX-Design-Verification-Environment.git,2022-06-09 05:40:00+00:00,RISCV-DV based UVM Environment for IBEX Core,0,kashifminhas/IBEX-Design-Verification-Environment,501519142,SystemVerilog,IBEX-Design-Verification-Environment,210,3,2023-10-13 01:30:45+00:00,[],None
65,https://github.com/ninglixin98/SRAM_Verification.git,2022-08-19 18:02:07+00:00,,0,ninglixin98/SRAM_Verification,526706011,SystemVerilog,SRAM_Verification,29,3,2023-06-09 17:41:51+00:00,[],None
66,https://github.com/charkster/tang_nano_9k-uart_block_ram.git,2022-05-17 02:09:38+00:00,"UART interface to a block ram in the Tang Nano 9k FPGA. No pin connections needed, just use the USB UART.",1,charkster/tang_nano_9k-uart_block_ram,493063119,SystemVerilog,tang_nano_9k-uart_block_ram,959,3,2023-02-02 22:53:13+00:00,"['block-ram', 'tang-nano-9k', 'uart']",https://api.github.com/licenses/mit
67,https://github.com/iammituraj/reset_and_cdc_synchronizers.git,2022-08-17 17:22:15+00:00,Reset and CDC synchronizers developed in Verilog/System Verilog.,1,iammituraj/reset_and_cdc_synchronizers,525889628,SystemVerilog,reset_and_cdc_synchronizers,12,3,2024-01-18 22:12:36+00:00,"['cdc', 'reset', 'rtldesign', 'synchronization', 'clock']",None
68,https://github.com/ModestyJ/sv_mon_logic.git,2022-06-02 16:42:11+00:00,Simple monitoring logic to profile memory tarffic and utilizations,0,ModestyJ/sv_mon_logic,499214347,SystemVerilog,sv_mon_logic,149,3,2024-01-12 18:31:24+00:00,[],None
69,https://github.com/Ziboooo/simple_butterfly_FFT.git,2022-05-12 18:10:40+00:00,,1,Ziboooo/simple_butterfly_FFT,491620891,SystemVerilog,simple_butterfly_FFT,10212,3,2024-03-11 21:42:40+00:00,[],None
70,https://github.com/redchenjs/axi_h266enc.git,2022-07-16 13:45:34+00:00,AXI H.266 / VVC Encoder,0,redchenjs/axi_h266enc,514589649,SystemVerilog,axi_h266enc,125,3,2024-01-12 18:33:24+00:00,[],None
71,https://github.com/ddvca/2022-bishkek.git,2022-08-12 17:38:20+00:00,,5,ddvca/2022-bishkek,524174709,SystemVerilog,2022-bishkek,58854,3,2023-02-05 11:44:54+00:00,[],
72,https://github.com/parsanoori/ca-project-mips.git,2022-06-28 20:54:01+00:00,,3,parsanoori/ca-project-mips,508451561,SystemVerilog,ca-project-mips,10,3,2023-05-10 07:08:37+00:00,[],None
73,https://github.com/zhangershuo/system_verilog-labs.git,2022-06-09 01:47:37+00:00,"Digital IC Verification, using system Verilog to verify the functions of preprocessing module and ALU",0,zhangershuo/system_verilog-labs,501468665,SystemVerilog,system_verilog-labs,80,3,2024-03-05 08:05:22+00:00,[],None
74,https://github.com/NishantSahay123/RAM_VERIFICATION_SV.git,2022-06-10 14:56:23+00:00,An environment written in system verilog to verify a dual port RAM module.,0,NishantSahay123/RAM_VERIFICATION_SV,502082299,SystemVerilog,RAM_VERIFICATION_SV,222,3,2024-03-15 08:39:39+00:00,[],None
75,https://github.com/mitshine/AXI_FIFO_BFMs.git,2022-07-27 11:56:54+00:00,to github,1,mitshine/AXI_FIFO_BFMs,518438861,SystemVerilog,AXI_FIFO_BFMs,16735,3,2023-09-18 12:29:30+00:00,[],None
76,https://github.com/pulp-platform/rpc_dram_controller.git,2022-09-01 11:07:08+00:00,,0,pulp-platform/rpc_dram_controller,531481542,SystemVerilog,rpc_dram_controller,193,3,2023-05-31 15:59:18+00:00,[],
77,https://github.com/victor-welter/EC4-ACD-SystemVerilog.git,2022-08-18 22:06:01+00:00,"Algoritmos de descrição de hardware feitos em SystemVerilog durante as aulas de ANÁLISE DE CIRCUITOS DIGITAIS I, do 4° semestre do curso de Engenharia de Computação - SETREM.",0,victor-welter/EC4-ACD-SystemVerilog,526386445,SystemVerilog,EC4-ACD-SystemVerilog,1007,3,2023-10-24 18:33:17+00:00,"['hdl', 'systemverilog']",None
78,https://github.com/imocanu/dvf.git,2022-08-20 07:49:12+00:00,Design verification framework for any hardware IP,0,imocanu/dvf,526861073,SystemVerilog,dvf,18,3,2023-12-16 13:05:42+00:00,[],https://api.github.com/licenses/apache-2.0
79,https://github.com/hdlguy/zuboard.git,2022-08-08 20:52:02+00:00,Some fpga and software logic to test out the new Avnet ZUBoard.,1,hdlguy/zuboard,522703681,SystemVerilog,zuboard,11471,2,2024-03-08 07:54:49+00:00,[],https://api.github.com/licenses/mit
80,https://github.com/anmehta4/ece554_minilab4.git,2022-09-22 20:32:39+00:00,,0,anmehta4/ece554_minilab4,540159873,SystemVerilog,ece554_minilab4,13,2,2023-03-15 14:00:34+00:00,[],None
81,https://github.com/eshanbhatia22/Multi_Core_Caches_Source_Code.git,2022-05-27 17:53:42+00:00,This project demonstrates a comprehensive approach to create a verification environment for verifying caches in a multi-core system.,1,eshanbhatia22/Multi_Core_Caches_Source_Code,497089771,SystemVerilog,Multi_Core_Caches_Source_Code,69,2,2024-03-12 00:59:41+00:00,[],None
82,https://github.com/RedaCB/AES256-IP-Core.git,2022-05-19 11:19:30+00:00,Accelerator H/W AES-256 IP Core run successfully on Xilinx ZC-702 board (Zynq-7000). Works in ECB and CBC modes.,0,RedaCB/AES256-IP-Core,494039926,SystemVerilog,AES256-IP-Core,82,2,2024-04-10 15:57:55+00:00,[],None
83,https://github.com/seanpm2001/Learn-SystemVerilog.git,2022-09-23 21:57:36+00:00,"A repository for showcasing my knowledge of the SystemVerilog programming language, and continuing to learn the language",1,seanpm2001/Learn-SystemVerilog,540629640,SystemVerilog,Learn-SystemVerilog,502,2,2022-11-28 00:18:00+00:00,"['article', 'gpl3', 'gplv3', 'knowledge', 'learn', 'md', 'seanpm2001', 'seanpm2001-education', 'seanpm2001-learn', 'systemverilog', 'txt', 'verilog', 'learn-systemverilog', 'learn-systemverilog-lang', 'learn-systemverilog-language', 'systemverilog-lang', 'systemverilog-language']",https://api.github.com/licenses/gpl-3.0
84,https://github.com/dh73/uninterpreted_functions.git,2022-05-26 15:14:06+00:00,Uninterpreted functions examples,0,dh73/uninterpreted_functions,496668871,SystemVerilog,uninterpreted_functions,4,2,2023-06-28 03:53:05+00:00,"['formal-methods', 'formal-verification', 'model-checking', 'smt', 'systemverilog']",https://api.github.com/licenses/bsd-3-clause
85,https://github.com/jpdoane/6502.git,2022-08-27 21:16:59+00:00,,1,jpdoane/6502,529698737,SystemVerilog,6502,3678,2,2024-02-27 03:59:41+00:00,[],None
86,https://github.com/HarieshAnbalagan/RV32I.git,2022-09-10 19:22:00+00:00,Minimalistic RV32I RISC-V Processor in System Verilog,0,HarieshAnbalagan/RV32I,535097296,SystemVerilog,RV32I,401,2,2024-02-11 04:27:33+00:00,"['processor', 'risc-v', 'rv32i', 'computer-architecture', 'digital-design', 'fpga', 'instruction-set-architecture', 'simulations', 'systemverilog']",https://api.github.com/licenses/mit
87,https://github.com/mitshine/virtual_sequences_and_virtual_sequencer.git,2022-06-29 17:24:53+00:00,,0,mitshine/virtual_sequences_and_virtual_sequencer,508784924,SystemVerilog,virtual_sequences_and_virtual_sequencer,6,2,2024-02-29 07:38:07+00:00,[],None
88,https://github.com/minecraftdixit/spi-.git,2022-08-17 17:06:49+00:00,Serial peripheral interface protocol using verilog and testbench ,0,minecraftdixit/spi-,525885950,SystemVerilog,spi-,8,2,2024-04-07 23:00:25+00:00,[],None
89,https://github.com/Marc43/NES-CPU.git,2022-05-21 15:02:47+00:00,,0,Marc43/NES-CPU,494815089,SystemVerilog,NES-CPU,25,2,2022-05-25 09:25:53+00:00,[],None
90,https://github.com/PaulThomas20002/S4-DIGITAL-LAB.git,2022-07-27 13:28:08+00:00," This course helps the learners to get familiarized with (i) Digital Logic Design through the implementation of Logic Circuits using ICs of basic logic gates & flipflops and (ii) Hardware Description Language based Digital Design. This course helps the learners to design and implement hardware systems in areas such as games, music, digital filters, wireless communications and graphical displays. Prerequisite : Topics covered under the course Logic System Design (CST 203) ",0,PaulThomas20002/S4-DIGITAL-LAB,518469625,SystemVerilog,S4-DIGITAL-LAB,4135,2,2023-01-05 14:20:47+00:00,[],None
91,https://github.com/SkillSurf/a-risc.git,2022-07-31 20:57:18+00:00,A Custom RISC CPU in 99 Lines of SystemVerilog,0,SkillSurf/a-risc,519885576,SystemVerilog,a-risc,516,2,2023-10-14 04:34:27+00:00,[],None
92,https://github.com/wbbbbbb123/UVM-based-Asynchronous-FIFO-verification-platform-design.git,2022-08-08 09:43:42+00:00,,0,wbbbbbb123/UVM-based-Asynchronous-FIFO-verification-platform-design,522488871,SystemVerilog,UVM-based-Asynchronous-FIFO-verification-platform-design,390,2,2023-08-14 07:19:02+00:00,[],None
93,https://github.com/maedehdehghanam/risc-v-Multi-Cycle.git,2022-07-05 20:26:05+00:00,A Multi Cycle implementation of the RISC-V,0,maedehdehghanam/risc-v-Multi-Cycle,510884251,SystemVerilog,risc-v-Multi-Cycle,16,2,2023-09-01 20:32:20+00:00,[],https://api.github.com/licenses/mit
94,https://github.com/gr33nka/LZC.git,2022-08-21 22:36:09+00:00,Leading-Zero Counting (for FPU),0,gr33nka/LZC,527342310,SystemVerilog,LZC,835,2,2023-08-10 17:37:56+00:00,[],https://api.github.com/licenses/gpl-3.0
95,https://github.com/wxiaoyao17/ces_svtb_2016.06.git,2022-09-09 08:22:33+00:00,,0,wxiaoyao17/ces_svtb_2016.06,534559624,SystemVerilog,ces_svtb_2016.06,55,2,2024-04-09 04:44:15+00:00,[],None
96,https://github.com/SiavashShams/ARM-Processor_With_Forwarding_And_SRAM.git,2022-09-18 16:21:56+00:00,"The code for the ARM processor with forwarding and SRAM, and the synthesized code for implementation on EP2C70F672C8N FPGA board programmed through Quartus II.",0,SiavashShams/ARM-Processor_With_Forwarding_And_SRAM,538168013,SystemVerilog,ARM-Processor_With_Forwarding_And_SRAM,2558,2,2022-09-20 08:39:52+00:00,"['arm', 'fpga', 'forwarding', 'sram', 'modelsim', 'quartus']",None
97,https://github.com/ninglixin98/AHB_RAM.git,2022-07-09 01:56:17+00:00,,0,ninglixin98/AHB_RAM,512069749,SystemVerilog,AHB_RAM,803,2,2022-10-24 05:25:30+00:00,[],None
98,https://github.com/dagronlund/reptilia.git,2022-07-11 20:57:04+00:00,"Fun RTL, more to come",0,dagronlund/reptilia,512906688,SystemVerilog,reptilia,10783,2,2023-07-20 21:35:42+00:00,[],None
99,https://github.com/ccbrown/axi-lite-sv.git,2022-05-24 05:58:02+00:00,,0,ccbrown/axi-lite-sv,495688580,SystemVerilog,axi-lite-sv,11,2,2023-09-30 02:39:53+00:00,[],None
100,https://github.com/huihui0717/AXI2APB_bridge-TestBench.git,2022-08-30 08:31:31+00:00,This is a simple testbench for axi2apb_bridge via AXI/APB VIP.,0,huihui0717/AXI2APB_bridge-TestBench,530566175,SystemVerilog,AXI2APB_bridge-TestBench,5,2,2023-10-26 05:41:17+00:00,[],https://api.github.com/licenses/mit
101,https://github.com/imjp2020/UVM_FIFO_TB.git,2022-09-24 11:41:13+00:00,This testbench is based on SV and UVM Class based to verify Verilog HDL Design,0,imjp2020/UVM_FIFO_TB,540809689,SystemVerilog,UVM_FIFO_TB,23,2,2023-11-30 04:50:01+00:00,"['system-verilog', 'uvm', 'verilog-hdl']",https://api.github.com/licenses/mit
102,https://github.com/cc-hook/uvm_easy_printer.git,2022-06-28 13:51:15+00:00,"A hybrid uvm printer, include TABLE_PRINTER，TREE_PRINTER，YAML_PRINTER，JSON_PRINTER.",1,cc-hook/uvm_easy_printer,508319179,SystemVerilog,uvm_easy_printer,4,2,2024-02-04 11:56:31+00:00,[],https://api.github.com/licenses/mit
103,https://github.com/stephancill/msm-hardware-acceleration.git,2022-08-09 21:13:35+00:00,,1,stephancill/msm-hardware-acceleration,523110433,SystemVerilog,msm-hardware-acceleration,868,2,2024-04-10 09:49:22+00:00,[],https://api.github.com/licenses/mit
104,https://github.com/gostbit/watchdog.git,2022-05-31 16:08:32+00:00,,0,gostbit/watchdog,498407276,SystemVerilog,watchdog,1891,2,2022-10-24 05:11:48+00:00,[],None
105,https://github.com/01fe21mve005/Advance-Digital-Logic-Verification.git,2022-09-06 10:31:58+00:00,,0,01fe21mve005/Advance-Digital-Logic-Verification,533274543,SystemVerilog,Advance-Digital-Logic-Verification,396,2,2022-11-07 08:24:45+00:00,[],None
106,https://github.com/jairaj99/Jairaj_Mirashi.git,2022-07-11 14:40:10+00:00,,0,jairaj99/Jairaj_Mirashi,512794287,SystemVerilog,Jairaj_Mirashi,797,2,2023-11-22 14:30:16+00:00,[],None
107,https://github.com/yigityalin/digital-design.git,2022-05-24 20:28:28+00:00,My lab solutions for the CS 223 (Digital Design) course at Bilkent University.,1,yigityalin/digital-design,495978048,SystemVerilog,digital-design,1142,2,2023-02-02 18:11:42+00:00,[],None
108,https://github.com/He-Liu-ooo/Ibex-RISCV-floating-point-instruction-set-extensions.git,2022-05-31 14:26:07+00:00,This is a floating-point instruction set extension based on Ibex RISCV CPU,0,He-Liu-ooo/Ibex-RISCV-floating-point-instruction-set-extensions,498369885,SystemVerilog,Ibex-RISCV-floating-point-instruction-set-extensions,2075,2,2023-08-13 06:45:10+00:00,[],None
109,https://github.com/CaseyZhu/STL.git,2022-06-25 03:11:12+00:00,IC digital design common used module,0,CaseyZhu/STL,507201081,SystemVerilog,STL,6923,2,2023-10-06 14:32:24+00:00,[],None
110,https://github.com/pulp-platform/opentitan_peripherals.git,2022-08-15 15:30:48+00:00,Selected peripherals from OpenTitan with PULP patches,0,pulp-platform/opentitan_peripherals,525040482,SystemVerilog,opentitan_peripherals,291,2,2023-10-15 16:04:53+00:00,[],https://api.github.com/licenses/apache-2.0
111,https://github.com/Zvord/Censor.DV.git,2022-09-19 13:35:41+00:00,,0,Zvord/Censor.DV,538519384,SystemVerilog,Censor.DV,309,2,2023-01-18 13:30:09+00:00,[],None
112,https://github.com/jceee5510/RISC-V-Processor-Design-FPGA-.git,2022-08-13 20:46:37+00:00,,0,jceee5510/RISC-V-Processor-Design-FPGA-,524504470,SystemVerilog,RISC-V-Processor-Design-FPGA-,1974,2,2022-11-18 01:56:31+00:00,[],None
113,https://github.com/Abdul-muheet-ghani/UVM-Practice.git,2022-05-29 08:59:15+00:00,This repository containing the practice code from beginning related to SystemVerilog OOP and UVM,1,Abdul-muheet-ghani/UVM-Practice,497538216,SystemVerilog,UVM-Practice,128,2,2023-01-31 08:46:36+00:00,"['oop', 'systemverilog', 'uvm', 'verification']",https://api.github.com/licenses/unlicense
114,https://github.com/jayeshsuyal/Verification-of-APB_RAM.git,2022-09-09 05:18:00+00:00,,0,jayeshsuyal/Verification-of-APB_RAM,534508008,SystemVerilog,Verification-of-APB_RAM,3,2,2023-02-21 13:06:34+00:00,[],None
115,https://github.com/aliyun/aliyun-faas-agilex.git,2022-09-13 02:29:17+00:00,,1,aliyun/aliyun-faas-agilex,535928184,SystemVerilog,aliyun-faas-agilex,161342,2,2023-03-14 06:06:21+00:00,[],https://api.github.com/licenses/apache-2.0
116,https://github.com/gjm9999/verification_based_modelsim.git,2022-06-08 14:53:34+00:00,A RTL simulation verification platform based on Modelsim,0,gjm9999/verification_based_modelsim,501296016,SystemVerilog,verification_based_modelsim,464,2,2024-01-20 19:30:36+00:00,[],https://api.github.com/licenses/apache-2.0
117,https://github.com/murphi2chisel/murphi2chisel.git,2022-06-04 02:35:58+00:00,,0,murphi2chisel/murphi2chisel,499705266,SystemVerilog,murphi2chisel,178285,1,2023-05-16 11:09:43+00:00,[],None
118,https://github.com/ofernis/ALU-implementation-SV.git,2022-05-13 08:47:15+00:00,,0,ofernis/ALU-implementation-SV,491824183,SystemVerilog,ALU-implementation-SV,1130,1,2022-05-13 10:12:47+00:00,[],None
119,https://github.com/pulp-platform/axi_tlb.git,2022-08-16 12:00:20+00:00,,0,pulp-platform/axi_tlb,525360267,SystemVerilog,axi_tlb,34,1,2023-07-25 15:00:33+00:00,[],
120,https://github.com/XarkLabs/BenEaterSV.git,2022-07-29 01:52:50+00:00,A SystemVerilog CPU inspired by Ben Eater's SAP-1 design,1,XarkLabs/BenEaterSV,519047610,SystemVerilog,BenEaterSV,1952,1,2023-03-07 13:49:33+00:00,[],https://api.github.com/licenses/mit
121,https://github.com/LucasLedouxM/RISC-V-Processor.git,2022-06-17 05:12:03+00:00,,0,LucasLedouxM/RISC-V-Processor,504401874,SystemVerilog,RISC-V-Processor,386,1,2022-11-18 02:08:04+00:00,[],None
122,https://github.com/yamader/test.git,2022-09-12 10:04:20+00:00,もろもろ,0,yamader/test,535607430,SystemVerilog,test,3,1,2023-07-03 16:15:34+00:00,[],None
123,https://github.com/lcbcFoo/cfe-wait-feedback-hw.git,2022-07-25 19:23:31+00:00,Digital module that estimates the number of cycles that the CFE waits before recalculating the carrier frequency offset,0,lcbcFoo/cfe-wait-feedback-hw,517793543,SystemVerilog,cfe-wait-feedback-hw,4,1,2024-03-14 12:32:43+00:00,[],None
124,https://github.com/comsec-group/cellift-cva6.git,2022-06-09 10:43:23+00:00,The CVA6 design frozen and instrumented for the CellIFT paper experiments ,0,comsec-group/cellift-cva6,501610896,SystemVerilog,cellift-cva6,10614,1,2024-03-26 21:09:59+00:00,[],
125,https://github.com/nekrasov-d/gabella.git,2022-07-03 21:52:39+00:00,Guitar processing pedal on FPGA,0,nekrasov-d/gabella,510143194,SystemVerilog,gabella,455,1,2024-04-05 12:30:58+00:00,[],https://api.github.com/licenses/mit
126,https://github.com/Aikiro42/cs-21-project.git,2022-05-22 10:01:40+00:00,Repository of CS 21 project where I am instructed to add features to an incomplete MIPS datapath,0,Aikiro42/cs-21-project,495021276,SystemVerilog,cs-21-project,2976,1,2022-06-07 00:00:50+00:00,[],None
127,https://github.com/Dany2002-hub/5-port_NoC_Router.git,2022-07-22 08:10:29+00:00,,0,Dany2002-hub/5-port_NoC_Router,516665738,SystemVerilog,5-port_NoC_Router,20,1,2022-12-15 00:28:38+00:00,[],None
128,https://github.com/iammituraj/gcd_calculator.git,2022-07-23 14:35:03+00:00,GCD calculator with APB Slave interface.,0,iammituraj/gcd_calculator,517081241,SystemVerilog,gcd_calculator,25,1,2022-08-23 09:54:11+00:00,"['rtl', 'systemverilog', 'verilog', 'apb']",None
129,https://github.com/sfmth/basic-computer.git,2022-05-11 08:14:09+00:00,"Verilog Implementation of the Basic Computer introduced in the book ""Computer System Architecture by M. Morris Mano""",0,sfmth/basic-computer,491017172,SystemVerilog,basic-computer,539,1,2022-07-10 16:15:49+00:00,[],https://api.github.com/licenses/gpl-3.0
130,https://github.com/wedogg/mcdt_uvm.git,2022-06-02 05:51:34+00:00,,1,wedogg/mcdt_uvm,499008493,SystemVerilog,mcdt_uvm,15,1,2022-06-03 22:15:55+00:00,[],None
131,https://github.com/rggen/rggen-sample-plugin.git,2022-07-06 14:37:04+00:00,Sample plugin project,0,rggen/rggen-sample-plugin,511174031,SystemVerilog,rggen-sample-plugin,10,1,2022-07-08 08:25:34+00:00,[],https://api.github.com/licenses/mit
132,https://github.com/avisalmon/VGAstarter_DE10_lite.git,2022-09-19 16:56:41+00:00,Starter Verilog project for VGA games on DE10 lite,2,avisalmon/VGAstarter_DE10_lite,538605769,SystemVerilog,VGAstarter_DE10_lite,12324,1,2022-10-26 21:56:41+00:00,[],None
133,https://github.com/MinhTran0911/DS1302_Interface_DE10.git,2022-07-30 14:33:57+00:00,DS1302 Real-time Clock (RTC) Module Interfacing with Terasic DE-10 Standard FPGA,0,MinhTran0911/DS1302_Interface_DE10,519539397,SystemVerilog,DS1302_Interface_DE10,15351,1,2023-11-28 09:42:51+00:00,"['ds1302', 'hardware-description-language', 'hdl', 'rtc-module', 'systemverilog', 'terasic-de10-standard', 'altera-fpga', 'cyclone-v', 'quartus-prime', 'modelsim']",None
134,https://github.com/aignacio/ethernet_axi.git,2022-07-03 18:41:41+00:00,AXI wrapper around Ethernet module,1,aignacio/ethernet_axi,510107206,SystemVerilog,ethernet_axi,316,1,2024-02-10 14:59:13+00:00,[],None
135,https://github.com/nextDesignd/fpro-impl.git,2022-05-12 14:03:15+00:00,,0,nextDesignd/fpro-impl,491538439,SystemVerilog,fpro-impl,38,1,2022-05-26 18:10:16+00:00,[],None
136,https://github.com/ofernis/Multiplier-FSM-SV.git,2022-05-13 08:54:18+00:00,,0,ofernis/Multiplier-FSM-SV,491826553,SystemVerilog,Multiplier-FSM-SV,1085,1,2022-05-13 10:12:43+00:00,[],None
137,https://github.com/zhichaolin/axi-ram.git,2022-08-09 16:36:37+00:00,My project aims to test a axi-ram module using UVM method.,0,zhichaolin/axi-ram,523029928,SystemVerilog,axi-ram,92,1,2023-09-21 08:42:17+00:00,[],None
138,https://github.com/minghungumich/TestSetup-GF12-OpenTitanSoC.git,2022-08-18 18:52:37+00:00,,0,minghungumich/TestSetup-GF12-OpenTitanSoC,526336872,SystemVerilog,TestSetup-GF12-OpenTitanSoC,198,1,2023-11-29 18:50:48+00:00,[],https://api.github.com/licenses/apache-2.0
139,https://github.com/jstlwy/riscv32i.git,2022-05-27 04:43:00+00:00,RISC-V 32-bit Base ISA Implementation,0,jstlwy/riscv32i,496862668,SystemVerilog,riscv32i,17,1,2024-02-11 04:08:32+00:00,"['risc-v', 'systemverilog']",None
140,https://github.com/kkinos/ktc32.git,2022-07-10 16:28:10+00:00,A hobby 32-bit CPU implemented in SystemVerilog.,0,kkinos/ktc32,512483794,SystemVerilog,ktc32,483,1,2024-04-03 00:56:31+00:00,"['cpu', 'hdl', 'systemverilog', 'fpga']",https://api.github.com/licenses/mit
141,https://github.com/kolosya-tuchka/12-bit-RISC-processor.git,2022-05-21 06:25:01+00:00,Самый крутой процессор в мире!,0,kolosya-tuchka/12-bit-RISC-processor,494699578,SystemVerilog,12-bit-RISC-processor,5388,1,2023-05-12 06:11:23+00:00,[],None
142,https://github.com/zjcymk/RISC-V.git,2022-08-02 11:58:24+00:00,,0,zjcymk/RISC-V,520479571,SystemVerilog,RISC-V,47,1,2022-08-25 14:18:57+00:00,[],None
143,https://github.com/bhushanpatel1999/Multicycle-MIPS-Processor.git,2022-07-25 20:06:47+00:00,"Building a full-scale MIPS-ISA multicycle processor with a datapath, control unit, and memory.",0,bhushanpatel1999/Multicycle-MIPS-Processor,517805379,SystemVerilog,Multicycle-MIPS-Processor,8933,1,2022-07-25 20:18:28+00:00,[],None
144,https://github.com/jefferyxu1/Hardware-SHA256.git,2022-07-22 08:04:17+00:00,Verilog for a hardware SHA-256 calculator,0,jefferyxu1/Hardware-SHA256,516663882,SystemVerilog,Hardware-SHA256,20,1,2023-10-30 10:00:28+00:00,[],None
145,https://github.com/anitharacharla/AXI_BFM.git,2022-09-23 06:28:46+00:00,,0,anitharacharla/AXI_BFM,540308691,SystemVerilog,AXI_BFM,9858,1,2023-03-17 07:36:08+00:00,[],None
146,https://github.com/XarkLabs/upduino-video.git,2022-06-01 23:02:48+00:00,Fairly simple example of 8-color VGA text generation in SystemVerilog for UPduino FPGA,0,XarkLabs/upduino-video,498923131,SystemVerilog,upduino-video,710,1,2023-01-22 16:52:24+00:00,"['fpga', 'systemverilog', 'upduino', 'vga', 'vga-controller']",
147,https://github.com/atmughrabi/GLay.git,2022-08-05 01:54:42+00:00,GLay: A Vertex Centric Re-Configurable Graph Processing Overlay,0,atmughrabi/GLay,521470429,SystemVerilog,GLay,247863,1,2024-03-10 01:53:49+00:00,"['alveo-acceleration-cards', 'bfs-algorithm', 'cgra', 'connected-components', 'fpga', 'graph', 'graph-processing', 'open-graph', 'overlay', 'pagerank', 'xilinx-fpga']",None
148,https://github.com/Sash-github-account/svm_rtl.git,2022-06-03 19:48:24+00:00,RTL implementation of Support Vector Machine in System verilog. Targetted for FPGA: De10-Nano,0,Sash-github-account/svm_rtl,499633148,SystemVerilog,svm_rtl,319,1,2023-04-18 11:51:20+00:00,[],https://api.github.com/licenses/gpl-3.0
149,https://github.com/MidhunNair43/Systolic_3X3_Matrix_Mul.git,2022-06-16 20:32:31+00:00,A simple implementation of a 3X3 Matrix Multiplication using Systolic Array ,0,MidhunNair43/Systolic_3X3_Matrix_Mul,504297848,SystemVerilog,Systolic_3X3_Matrix_Mul,8,1,2022-06-24 19:20:04+00:00,[],None
150,https://github.com/linICsup/virtual-proj.git,2022-05-30 01:17:55+00:00,,0,linICsup/virtual-proj,497749288,SystemVerilog,virtual-proj,31,1,2022-06-08 08:55:35+00:00,[],None
151,https://github.com/sarpuser/SystemVerilog-Projects.git,2022-07-15 23:32:31+00:00,"This repo includes all the SystemVerilog projects I have created in my digital design class, along with RTL and state machine diagrams, and simulation results. All simulations were done on Quartus Prime Lite.",0,sarpuser/SystemVerilog-Projects,514430560,SystemVerilog,SystemVerilog-Projects,3072,1,2023-11-15 18:27:47+00:00,['systemverilog'],None
152,https://github.com/hdlguy/ftdi_sync_fifo.git,2022-07-14 16:34:24+00:00,An attempt to use the synchronous fifo mode of the FTDI FT2232H USB transceiver.,0,hdlguy/ftdi_sync_fifo,513974566,SystemVerilog,ftdi_sync_fifo,64,1,2024-02-02 05:50:12+00:00,[],https://api.github.com/licenses/mit
153,https://github.com/pulp-platform/axi_stream.git,2022-09-01 14:22:30+00:00,,0,pulp-platform/axi_stream,531552773,SystemVerilog,axi_stream,49,1,2024-02-19 18:41:48+00:00,[],
154,https://github.com/Aleksw3/AES-Scalar-Crypto.git,2022-06-10 15:14:48+00:00,,0,Aleksw3/AES-Scalar-Crypto,502088312,SystemVerilog,AES-Scalar-Crypto,14,1,2023-09-20 08:26:17+00:00,[],None
155,https://github.com/BB-Fly/Verilog-CPU.git,2022-08-26 09:44:14+00:00,使用Verilog模拟计算机单周期、多周期、流水线CPU,0,BB-Fly/Verilog-CPU,529200495,SystemVerilog,Verilog-CPU,35,1,2023-03-31 05:13:00+00:00,[],None
156,https://github.com/lebro991/BSIM_SHA1.git,2022-08-19 15:17:01+00:00,a  project  of SHA1 and write by verilog,0,lebro991/BSIM_SHA1,526655356,SystemVerilog,BSIM_SHA1,205,1,2023-01-27 04:18:51+00:00,[],None
157,https://github.com/VolodymyrSemenov/TrafficLightProject.git,2022-08-06 02:32:09+00:00,,0,VolodymyrSemenov/TrafficLightProject,521827072,SystemVerilog,TrafficLightProject,2821,1,2023-11-20 09:17:58+00:00,[],None
158,https://github.com/joachimcao/comparch203.git,2022-07-22 19:05:53+00:00,,1,joachimcao/comparch203,516860101,SystemVerilog,comparch203,1781,1,2022-09-13 06:31:52+00:00,[],https://api.github.com/licenses/apache-2.0
159,https://github.com/ltcptgeneral/cse141L-project.git,2022-08-07 23:18:23+00:00,,1,ltcptgeneral/cse141L-project,522346627,SystemVerilog,cse141L-project,63,1,2023-04-02 02:49:47+00:00,[],None
160,https://github.com/alihaskar/ob.git,2022-05-14 12:08:12+00:00,"A high performance, hardware implementation of a financial Matching Engine (ME).",2,alihaskar/ob,492205273,,ob,464,1,2023-12-11 06:44:27+00:00,[],None
161,https://github.com/yuxiaojia/FPGA-based-Quadcopter-Flight-Controller.git,2022-05-31 22:23:51+00:00,Designed and tested an FPGA chip in to control the quadcopter with another partner. It receives commands wirelessly with a long-range Bluetooth module with a UART interface and gets the data from the inertial sensor with SPI to control the ESC motor. It was designed with the system Verilog and was also synthesized with Synopsis Design Vision. ,0,yuxiaojia/FPGA-based-Quadcopter-Flight-Controller,498515438,SystemVerilog,FPGA-based-Quadcopter-Flight-Controller,40,1,2023-12-15 02:42:47+00:00,[],None
162,https://github.com/litex-hub/pythondata-cpu-cva5.git,2022-05-18 00:37:47+00:00,Python module containing system_verilog files for cva5 cpu (for use with LiteX).,0,litex-hub/pythondata-cpu-cva5,493456793,SystemVerilog,pythondata-cpu-cva5,1324,1,2022-05-26 16:52:24+00:00,[],https://api.github.com/licenses/apache-2.0
163,https://github.com/matin-yousefzade/Hardware-Accelerator-for-Neural-Networks.git,2022-08-13 15:53:47+00:00,"A processing element (PE), that makes two dimensional systolic array for hardware acceleration in neural networks.",0,matin-yousefzade/Hardware-Accelerator-for-Neural-Networks,524442906,SystemVerilog,Hardware-Accelerator-for-Neural-Networks,18,1,2023-10-20 10:17:51+00:00,[],None
164,https://github.com/kenezoer/YetAnotherUART.git,2022-09-15 17:22:34+00:00,Yet Another UART,0,kenezoer/YetAnotherUART,537133808,SystemVerilog,YetAnotherUART,244,1,2023-08-04 10:21:54+00:00,[],https://api.github.com/licenses/apache-2.0
165,https://github.com/mungalched/clk_gen.git,2022-09-19 08:44:30+00:00,testing different clks frequency,1,mungalched/clk_gen,538410098,SystemVerilog,clk_gen,2,1,2023-06-13 02:49:29+00:00,[],None
166,https://github.com/zhudisheng/Study-System-Verilog-Step-By-Step.git,2022-08-15 03:36:07+00:00,Study System Verilog Step By Step,0,zhudisheng/Study-System-Verilog-Step-By-Step,524845179,SystemVerilog,Study-System-Verilog-Step-By-Step,30,1,2023-06-10 06:48:35+00:00,[],None
167,https://github.com/merledu/Quad_SPI.git,2022-06-01 16:17:01+00:00,Quad SPI interface for the micron flash available on arty a7-35t FPGA board,0,merledu/Quad_SPI,498810168,SystemVerilog,Quad_SPI,12,1,2022-06-04 12:18:02+00:00,[],None
168,https://github.com/jeras/TCB.git,2022-05-15 19:09:52+00:00,"Tightly Coupled Bus, low complexity, high performance system bus.",0,jeras/TCB,492579779,SystemVerilog,TCB,362,1,2023-11-08 14:38:37+00:00,"['system-bus', 'systemverilog']",https://api.github.com/licenses/apache-2.0
169,https://github.com/phuvg/sync_fifo.git,2022-05-17 11:59:57+00:00,,0,phuvg/sync_fifo,493231571,SystemVerilog,sync_fifo,147,1,2023-09-07 08:06:35+00:00,[],None
170,https://github.com/HickHackz/WorldsHardestGameSOC.git,2022-07-26 04:32:34+00:00,ECE Project with Worlds Hardest Game built on MAX 10 Intel FPGAA,0,HickHackz/WorldsHardestGameSOC,517913149,SystemVerilog,WorldsHardestGameSOC,492,1,2022-07-26 21:35:33+00:00,[],None
171,https://github.com/AntonyUsoltsev/Clock_on_FPGA.git,2022-06-19 04:50:32+00:00,Clock on verilog for FPGA,0,AntonyUsoltsev/Clock_on_FPGA,505014544,SystemVerilog,Clock_on_FPGA,4,1,2022-12-19 10:53:10+00:00,"['clock', 'fpga', 'verilog']",None
172,https://github.com/GCET231/fpga_labs_22_1.git,2022-08-12 19:45:10+00:00,Lista de roteiros práticos desenvolvidos ao longo do curso GCET231 na UFRB.,1,GCET231/fpga_labs_22_1,524206631,SystemVerilog,fpga_labs_22_1,9767,1,2022-11-29 11:28:23+00:00,[],None
173,https://github.com/HAMZA-AFZAL404/RISC-V-32-bit-Single-Cycle.git,2022-07-18 15:00:45+00:00,This repository contains the verilog code files of Single Cycle RISC-V architecture,0,HAMZA-AFZAL404/RISC-V-32-bit-Single-Cycle,515230547,SystemVerilog,RISC-V-32-bit-Single-Cycle,1181,1,2024-03-26 07:16:17+00:00,[],None
174,https://github.com/ashleyjr/FPGA-Delay-Line.git,2022-08-25 20:52:42+00:00,,0,ashleyjr/FPGA-Delay-Line,529014664,SystemVerilog,FPGA-Delay-Line,1273,1,2023-10-28 04:33:03+00:00,[],None
175,https://github.com/PierreBeurCoursework/cse140l-lab-3.git,2022-07-19 19:43:15+00:00,,0,PierreBeurCoursework/cse140l-lab-3,515720296,SystemVerilog,cse140l-lab-3,98,1,2022-12-19 20:42:38+00:00,[],None
176,https://github.com/JayKaku/100DaysOfRTL-Jay.git,2022-08-17 05:21:29+00:00,"A consistant way to practise the RTL level code, play around with it, explore new way and coding pattern and learn along the way",0,JayKaku/100DaysOfRTL-Jay,525650303,SystemVerilog,100DaysOfRTL-Jay,3,1,2023-03-08 20:18:57+00:00,[],None
177,https://github.com/lchi021497/sv-parser.git,2022-08-12 06:01:47+00:00,Automate cone-of-influence of SV code,0,lchi021497/sv-parser,523973158,SystemVerilog,sv-parser,194,1,2023-04-25 12:42:33+00:00,[],None
178,https://github.com/kostas2370/svquestions.git,2022-05-11 16:14:49+00:00,,0,kostas2370/svquestions,491185836,SystemVerilog,svquestions,2229,1,2023-06-05 18:30:17+00:00,[],None
179,https://github.com/litex-hub/pythondata-cpu-cv32e40s.git,2022-05-30 19:29:17+00:00,Python module containing system_verilog files for cv32e40s cpu (for use with LiteX).,0,litex-hub/pythondata-cpu-cv32e40s,498073075,SystemVerilog,pythondata-cpu-cv32e40s,11241,1,2023-05-09 06:23:45+00:00,[],https://api.github.com/licenses/apache-2.0
180,https://github.com/jofrfu/PowerPC-SV.git,2022-06-05 16:37:26+00:00,PowerPC compliant processor written in SystemVerilog,0,jofrfu/PowerPC-SV,500152852,SystemVerilog,PowerPC-SV,233,1,2022-08-02 14:02:05+00:00,[],https://api.github.com/licenses/apache-2.0
181,https://github.com/fjlic/CodesSystemVerilog.git,2022-06-22 20:37:30+00:00,Presilicon Verification with System Verilog,0,fjlic/CodesSystemVerilog,506398526,SystemVerilog,CodesSystemVerilog,792,1,2023-03-10 13:21:19+00:00,[],https://api.github.com/licenses/mit
182,https://github.com/canbozaci/SystemVerilog.git,2022-08-18 16:54:12+00:00,Designs done in SystemVerilog/Verilog and their Verification (From SystemVerilog Course),0,canbozaci/SystemVerilog,526298611,SystemVerilog,SystemVerilog,9,1,2023-12-06 16:27:40+00:00,[],None
183,https://github.com/woodrowb96/RISCV-core-in-sytemverilog.git,2022-06-21 23:08:45+00:00,A riscv core implemented using systemverilog,0,woodrowb96/RISCV-core-in-sytemverilog,506030519,SystemVerilog,RISCV-core-in-sytemverilog,56,1,2022-09-29 19:46:19+00:00,[],None
184,https://github.com/remisiki/ECE4700J.git,2022-05-20 07:38:06+00:00,,0,remisiki/ECE4700J,494367710,SystemVerilog,ECE4700J,100745,1,2023-07-18 19:05:21+00:00,[],None
185,https://github.com/huabi-01/uvm_template.git,2022-07-19 13:24:57+00:00,The repository consists of uvm testbench template and auto-generate uvm tb script,0,huabi-01/uvm_template,515595477,SystemVerilog,uvm_template,16,1,2023-07-10 07:55:45+00:00,[],None
186,https://github.com/mitshine/OOPs-concept-in-SystemVerilog.git,2022-08-13 17:36:25+00:00,"OOPs concept in SystemVerilog with inheritance, encapsulation, polymorphism, and abstraction",0,mitshine/OOPs-concept-in-SystemVerilog,524466472,SystemVerilog,OOPs-concept-in-SystemVerilog,4,1,2023-09-18 12:32:30+00:00,[],None
187,https://github.com/tallurips91/Verif-CPD.git,2022-09-21 16:44:25+00:00,,0,tallurips91/Verif-CPD,539590076,SystemVerilog,Verif-CPD,15,1,2022-09-22 08:51:27+00:00,[],None
188,https://github.com/vlsi-udec/jacc-fpga.git,2022-08-19 17:07:44+00:00,,1,vlsi-udec/jacc-fpga,526689795,SystemVerilog,jacc-fpga,132,1,2023-12-19 00:47:00+00:00,[],None
189,https://github.com/litex-hub/pythondata-cpu-cva6.git,2022-05-25 18:50:54+00:00,Python module containing system_verilog files for cva6 cpu (for use with LiteX).,4,litex-hub/pythondata-cpu-cva6,496353135,SystemVerilog,pythondata-cpu-cva6,37942,1,2023-08-05 18:59:37+00:00,[],https://api.github.com/licenses/apache-2.0
190,https://github.com/abrahamjdn/MIPS-Single-Cycle-Verification-using-SV..git,2022-06-29 07:27:52+00:00,Verification of the instructions implemented in the Mips Single cycle using the systemverilog model for verification.,0,abrahamjdn/MIPS-Single-Cycle-Verification-using-SV.,508590138,SystemVerilog,MIPS-Single-Cycle-Verification-using-SV.,18,1,2022-07-06 08:52:24+00:00,[],None
191,https://github.com/josephkb87/VerilogBasics.git,2022-06-04 17:57:45+00:00,Basics of Verilog implementation,0,josephkb87/VerilogBasics,499899801,SystemVerilog,VerilogBasics,20,1,2023-03-07 13:05:13+00:00,"['systemverilog', 'verilog', 'verilog-code', 'verilog-components', 'verilog-hdl']",None
192,https://github.com/alishairkhan7385/RISC-V-Single-Cycle-Datapath-in-System-verilog.git,2022-06-16 03:12:02+00:00,rv32i implementing all base instructions.,0,alishairkhan7385/RISC-V-Single-Cycle-Datapath-in-System-verilog,503995169,SystemVerilog,RISC-V-Single-Cycle-Datapath-in-System-verilog,504,1,2022-06-23 13:47:15+00:00,[],None
193,https://github.com/UandersonSilva/multiplicators.git,2022-08-23 13:01:35+00:00,Some hardware descriptions of multipliers and dividers.,0,UandersonSilva/multiplicators,527993207,SystemVerilog,multiplicators,853,1,2023-01-06 14:03:12+00:00,[],None
194,https://github.com/hamza-akhtar-dev/mips-micro-arcitechure.git,2022-07-10 15:17:34+00:00,Verilog Implementation of Single Cycle MIPS Processor.,0,hamza-akhtar-dev/mips-micro-arcitechure,512467763,SystemVerilog,mips-micro-arcitechure,140,1,2023-12-14 07:01:12+00:00,[],None
195,https://github.com/mingo99/uvm_test.git,2022-07-15 08:03:59+00:00,,0,mingo99/uvm_test,514186170,SystemVerilog,uvm_test,1197,1,2024-03-15 03:29:10+00:00,[],None
196,https://github.com/Hotwater17/VectorCore.git,2022-09-15 12:38:28+00:00,,0,Hotwater17/VectorCore,537020078,SystemVerilog,VectorCore,113,1,2023-01-01 18:01:52+00:00,[],None
197,https://github.com/benjamin-havens/AMT_SQUAD.git,2022-05-17 17:47:23+00:00,,2,benjamin-havens/AMT_SQUAD,493355974,SystemVerilog,AMT_SQUAD,435667,1,2022-08-31 23:06:54+00:00,[],None
198,https://github.com/GhulamMustafa9/2-Way_Associative_Cache_Controller-with-testbench.git,2022-05-23 20:25:02+00:00,2-Way Associative Cache Controller,0,GhulamMustafa9/2-Way_Associative_Cache_Controller-with-testbench,495562581,SystemVerilog,2-Way_Associative_Cache_Controller-with-testbench,1528,1,2022-05-26 11:29:12+00:00,[],None
199,https://github.com/saxbophone/factorio-train-balancer.git,2022-07-06 15:36:34+00:00,Using complicated Circuit network logic to use the railway as an anything-to-anything bus in Factorio,0,saxbophone/factorio-train-balancer,511195541,SystemVerilog,factorio-train-balancer,50,1,2023-03-05 03:16:54+00:00,"['circuit-design', 'factorio', 'factorio-blueprints', 'logic-gates']",https://api.github.com/licenses/unlicense
200,https://github.com/nguyenvietthi/KTMT_20212.git,2022-07-05 03:19:17+00:00,,0,nguyenvietthi/KTMT_20212,510572491,SystemVerilog,KTMT_20212,9338,1,2022-08-23 15:07:24+00:00,[],None
201,https://github.com/IskXCr/CS211-Project-Flappy-Bird.git,2022-08-13 16:25:42+00:00,Project Flappy Bird. SUSTech CS207/CS211 Digital Logic Project.,0,IskXCr/CS211-Project-Flappy-Bird,524450387,SystemVerilog,CS211-Project-Flappy-Bird,880,1,2023-05-25 10:22:05+00:00,"['cs207', 'cs211', 'flappy-bird', 'sustech', 'vga-driver', 'digital-logic', 'ego1', 'fpga', 'systemverilog']",None
202,https://github.com/PhenomIIX6/BDcachecompression.git,2022-09-01 03:42:19+00:00,,0,PhenomIIX6/BDcachecompression,531352033,SystemVerilog,BDcachecompression,9,1,2022-09-06 16:53:00+00:00,[],None
203,https://github.com/hallerp/atmt_2022.git,2022-09-02 08:45:20+00:00,"Materials for the first assignment of ""Advanced Techniques of Machine Translation"" @UZH (Autumn 2022).",43,hallerp/atmt_2022,531848952,SystemVerilog,atmt_2022,30050,1,2022-10-04 22:27:05+00:00,[],https://api.github.com/licenses/mit
204,https://github.com/timewh/ddr.git,2022-09-21 05:02:47+00:00,,0,timewh/ddr,539312968,SystemVerilog,ddr,30482,1,2023-09-21 07:31:45+00:00,[],None
205,https://github.com/SerLippo/sl_uart_vip.git,2022-06-06 15:16:55+00:00,"This is a simple uart vip, which supports baud_divisor and line control register.",0,SerLippo/sl_uart_vip,500484770,SystemVerilog,sl_uart_vip,12,1,2024-03-07 14:05:26+00:00,[],None
206,https://github.com/10x-Engineers/Ibex-Core-Verification-Environment.git,2022-05-30 14:14:53+00:00,,0,10x-Engineers/Ibex-Core-Verification-Environment,497972332,SystemVerilog,Ibex-Core-Verification-Environment,20018,1,2023-05-24 14:07:53+00:00,[],None
207,https://github.com/comsec-group/cellift-opentitan.git,2022-06-09 08:18:02+00:00,Opentitan version frozen for the CellIFT paper experiments on Ibex,1,comsec-group/cellift-opentitan,501564685,SystemVerilog,cellift-opentitan,39994,1,2022-06-25 03:46:26+00:00,[],https://api.github.com/licenses/apache-2.0
208,https://github.com/ECE4278/lab1.git,2022-09-05 09:36:25+00:00,,0,ECE4278/lab1,532833568,SystemVerilog,lab1,3,1,2022-09-19 06:50:27+00:00,[],None
209,https://github.com/NishantSahay123/FIFO_VERFICATION_ENVIRONMENT.git,2022-08-01 14:48:34+00:00,,0,NishantSahay123/FIFO_VERFICATION_ENVIRONMENT,520150748,SystemVerilog,FIFO_VERFICATION_ENVIRONMENT,565,1,2023-11-25 07:53:30+00:00,[],None
210,https://github.com/knhitesh/APB_UVM.git,2022-07-27 10:48:16+00:00,,0,knhitesh/APB_UVM,518417861,SystemVerilog,APB_UVM,9,1,2022-08-10 15:46:32+00:00,[],None
211,https://github.com/rubensmz/uvm-cg-driven.git,2022-06-12 15:31:24+00:00,UVM testbench using covergroup to determine when test has to end,0,rubensmz/uvm-cg-driven,502654872,SystemVerilog,uvm-cg-driven,43,1,2022-07-13 08:57:28+00:00,[],https://api.github.com/licenses/apache-2.0
212,https://github.com/ofernis/Multicycle-RISC-V-Extension-SV.git,2022-05-13 08:56:54+00:00,,0,ofernis/Multicycle-RISC-V-Extension-SV,491827317,SystemVerilog,Multicycle-RISC-V-Extension-SV,1243,1,2022-05-13 10:12:40+00:00,[],None
213,https://github.com/edft56/TPUv1_FPGA.git,2022-05-18 20:34:31+00:00,,1,edft56/TPUv1_FPGA,493817250,SystemVerilog,TPUv1_FPGA,1303,1,2022-12-02 22:55:04+00:00,[],None
214,https://github.com/Giovoig/Aggregation-engine.git,2022-06-08 14:52:30+00:00,,0,Giovoig/Aggregation-engine,501295570,SystemVerilog,Aggregation-engine,20,1,2022-07-31 09:02:09+00:00,[],None
215,https://github.com/Karthikeyan564/Idaten.git,2022-09-10 16:26:20+00:00,,0,Karthikeyan564/Idaten,535053791,SystemVerilog,Idaten,2566,1,2022-12-28 11:19:04+00:00,[],https://api.github.com/licenses/mit
216,https://github.com/MFJI/NASBRESNET.git,2022-05-26 13:23:42+00:00,,0,MFJI/NASBRESNET,496629732,SystemVerilog,NASBRESNET,4249,1,2024-03-21 02:29:47+00:00,[],None
217,https://github.com/usman1515/100DaysOfRTL.git,2022-06-21 05:29:44+00:00,,0,usman1515/100DaysOfRTL,505702591,SystemVerilog,100DaysOfRTL,52,1,2023-04-17 06:26:42+00:00,[],None
218,https://github.com/nbdd0121/display_controller.git,2022-06-07 00:49:02+00:00,Open-source Display Controller,0,nbdd0121/display_controller,500639652,SystemVerilog,display_controller,100,1,2023-07-06 12:45:09+00:00,[],None
219,https://github.com/Spaced-Cowboy/gowin-ddr3-phy-seq-only.git,2022-09-14 03:11:49+00:00,,0,Spaced-Cowboy/gowin-ddr3-phy-seq-only,536394887,SystemVerilog,gowin-ddr3-phy-seq-only,141,1,2022-09-14 14:57:10+00:00,[],None
220,https://github.com/liu-hz18/Nontrivial-RISCV.git,2022-09-15 14:14:52+00:00,A light-weighted fully-pipelined RISC-V CPU with BPU and I-Cache.,0,liu-hz18/Nontrivial-RISCV,537058927,SystemVerilog,Nontrivial-RISCV,8992,1,2023-04-03 03:28:52+00:00,[],None
221,https://github.com/Bh0jani/4bit_UpCounter_SV_TestBench.git,2022-08-09 13:45:51+00:00,04 bit UpCounter Design Verification using System Verilog Testbench ,0,Bh0jani/4bit_UpCounter_SV_TestBench,522967876,SystemVerilog,4bit_UpCounter_SV_TestBench,7,1,2023-08-15 04:48:27+00:00,[],None
222,https://github.com/Hikari-HN/risc-v-five-stage-pipeline-cpu.git,2022-09-03 07:22:39+00:00,,0,Hikari-HN/risc-v-five-stage-pipeline-cpu,532187650,SystemVerilog,risc-v-five-stage-pipeline-cpu,4470,1,2022-09-03 07:27:37+00:00,[],None
223,https://github.com/jerry1249756/DCLab.git,2022-09-20 07:39:04+00:00,,0,jerry1249756/DCLab,538865642,SystemVerilog,DCLab,11825,1,2024-01-31 11:49:37+00:00,[],None
224,https://github.com/21st-centuryman/riscy_core.git,2022-07-01 17:56:23+00:00,"WIP: Very much a RISC-V core, written in SystemVerilog",0,21st-centuryman/riscy_core,509545398,SystemVerilog,riscy_core,1233,1,2024-02-11 04:22:06+00:00,"['risc-v', 'systemverilog', 'verilog']",None
225,https://github.com/zombie782/KNN_Hardware.git,2022-09-18 20:00:35+00:00,"SystemVerilog implementation of the KNN algorithm. Not too practical to implement on an FPGA due to memory constraints, but was still fun to research.",0,zombie782/KNN_Hardware,538226241,SystemVerilog,KNN_Hardware,3,1,2024-03-05 05:52:28+00:00,[],None
226,https://github.com/dherdus/PPCU_VLSI_projekt_DH.git,2022-05-24 13:15:43+00:00,,0,dherdus/PPCU_VLSI_projekt_DH,495830501,SystemVerilog,PPCU_VLSI_projekt_DH,2089,0,2022-05-24 13:28:38+00:00,[],None
227,https://github.com/ACoutaux/SE204.git,2022-05-26 10:42:07+00:00,,0,ACoutaux/SE204,496579918,SystemVerilog,SE204,5,0,2022-05-26 10:43:34+00:00,[],None
228,https://github.com/kenzhang82/mux.git,2022-05-29 10:19:22+00:00,,0,kenzhang82/mux,497555538,SystemVerilog,mux,0,0,2022-05-29 10:41:16+00:00,[],None
229,https://github.com/Abdo99-alt/4_5arraymult.git,2022-06-02 20:55:03+00:00,,0,Abdo99-alt/4_5arraymult,499287917,SystemVerilog,4_5arraymult,441,0,2022-06-03 18:01:43+00:00,[],https://api.github.com/licenses/mit
230,https://github.com/wei1105/HW5.git,2022-05-19 11:08:54+00:00,,0,wei1105/HW5,494036623,SystemVerilog,HW5,1,0,2022-05-19 11:09:24+00:00,[],None
231,https://github.com/kelhuynh/MECHTRON-3TB4-Labs.git,2022-06-09 15:51:50+00:00,3TB4-Embedded Systems II,0,kelhuynh/MECHTRON-3TB4-Labs,501717519,SystemVerilog,MECHTRON-3TB4-Labs,94430,0,2022-06-09 16:44:25+00:00,"['fpga', 'fpga-soc', 'quartus', 'verilog']",None
232,https://github.com/Pocketkid2/Edalize-Examples.git,2022-05-13 18:58:38+00:00,,0,Pocketkid2/Edalize-Examples,492009901,SystemVerilog,Edalize-Examples,111,0,2022-05-13 19:02:18+00:00,[],https://api.github.com/licenses/mit
233,https://github.com/KyleKaleClark/EEE333Verilog.git,2022-05-16 04:01:12+00:00,Verilog code for EEE 333 ,0,KyleKaleClark/EEE333Verilog,492677474,SystemVerilog,EEE333Verilog,6431,0,2022-06-07 18:45:03+00:00,[],None
234,https://github.com/miyagi7716/hakaton_2022.git,2022-05-16 12:48:16+00:00,,0,miyagi7716/hakaton_2022,492832474,SystemVerilog,hakaton_2022,287,0,2022-05-16 12:51:03+00:00,[],None
235,https://github.com/ishfaqahmed29/uvma_i2c.git,2022-08-03 03:52:57+00:00,I²C UVM Agent - Moore.io Serial IP,0,ishfaqahmed29/uvma_i2c,520730010,,uvma_i2c,68,0,2022-07-19 04:29:05+00:00,[],
236,https://github.com/DarthHyperion/Adder_UVM.git,2022-08-07 06:14:06+00:00,First foray into verification,0,DarthHyperion/Adder_UVM,522131974,SystemVerilog,Adder_UVM,13,0,2022-08-07 07:03:17+00:00,[],https://api.github.com/licenses/apache-2.0
237,https://github.com/leoschopick/pac-man.git,2022-08-07 18:15:26+00:00,Final Project for ECE 385,0,leoschopick/pac-man,522289982,SystemVerilog,pac-man,1310,0,2022-08-07 18:18:47+00:00,[],None
238,https://github.com/TheDK0309/Logic_Synthesis_Project.git,2022-08-05 10:48:44+00:00,Develop a synthesizer for audio codec with VHDL and implement on PYNQ Z1 board,0,TheDK0309/Logic_Synthesis_Project,521601659,SystemVerilog,Logic_Synthesis_Project,1895,0,2022-08-05 11:28:00+00:00,[],None
239,https://github.com/ArtemBReal/modified-ram-controller.git,2022-08-15 07:33:21+00:00,SystemVerilog RAM memory controller with some embedded functions,0,ArtemBReal/modified-ram-controller,524894844,SystemVerilog,modified-ram-controller,1193,0,2023-01-27 22:17:42+00:00,[],None
240,https://github.com/utkarshsarbahi1998/Intel_Quartus_Prime_SystemVerilog_Files.git,2022-08-14 18:34:45+00:00,Intel Quartus Prime SystemVerilog Files,0,utkarshsarbahi1998/Intel_Quartus_Prime_SystemVerilog_Files,524750677,SystemVerilog,Intel_Quartus_Prime_SystemVerilog_Files,12,0,2022-08-14 18:40:05+00:00,[],None
241,https://github.com/LoesterFranco/axi_cores.git,2022-08-15 16:51:56+00:00,,0,LoesterFranco/axi_cores,525066324,,axi_cores,41,0,2022-08-15 16:51:50+00:00,[],None
242,https://github.com/hp22-ela21/Mikrodator-SystemVerilog.git,2022-07-15 09:00:15+00:00,"Implementering av en 8-bitars mikrodator i SystemVerilog, som kan användas för referens vid CPU-konstruktion i VHDL i kursen Hårdvarunära programmering.",0,hp22-ela21/Mikrodator-SystemVerilog,514202687,SystemVerilog,Mikrodator-SystemVerilog,165,0,2023-05-18 12:55:16+00:00,[],None
243,https://github.com/ErikPihl/Microcontroller-SystemVerilog.git,2022-07-15 08:44:23+00:00,"8-bit microcontroller for FPGA, written in SystemVerilog.",0,ErikPihl/Microcontroller-SystemVerilog,514197941,SystemVerilog,Microcontroller-SystemVerilog,164,0,2022-07-15 08:58:42+00:00,[],None
244,https://github.com/mitshine/top-modules.git,2022-07-25 09:33:52+00:00,,0,mitshine/top-modules,517601692,SystemVerilog,top-modules,2,0,2022-07-25 09:34:15+00:00,[],None
245,https://github.com/UncleZhang13/UVM_NEW_FILE.git,2022-08-13 12:57:03+00:00,UVM_NEW_FILE,0,UncleZhang13/UVM_NEW_FILE,524399784,SystemVerilog,UVM_NEW_FILE,54204,0,2022-08-13 12:58:08+00:00,[],None
246,https://github.com/Wishah-Naseer/SweRV_F.git,2022-08-11 10:08:21+00:00,,0,Wishah-Naseer/SweRV_F,523674055,SystemVerilog,SweRV_F,16306,0,2022-08-11 10:13:13+00:00,[],None
247,https://github.com/pavan-raj-verification/100DaysofRTL_VLSI.git,2022-08-11 15:07:12+00:00,Recreating Rahul Behl Codes from Linkedin,0,pavan-raj-verification/100DaysofRTL_VLSI,523767804,SystemVerilog,100DaysofRTL_VLSI,2,0,2022-08-11 15:45:17+00:00,[],None
248,https://github.com/Dashtocalmdown/uvm_code.git,2022-08-05 07:53:03+00:00,Code of a uvm tutorial.,0,Dashtocalmdown/uvm_code,521551943,SystemVerilog,uvm_code,162,0,2022-08-05 08:13:55+00:00,[],None
249,https://github.com/tjt7a/ultrascan-hls.git,2022-06-16 14:51:35+00:00,HLS + RTL implementation of Ultrascan,0,tjt7a/ultrascan-hls,504195883,SystemVerilog,ultrascan-hls,6754,0,2022-06-24 14:11:10+00:00,[],None
250,https://github.com/pcornier/BasicMasterJr_MiSTer.git,2022-06-17 16:15:18+00:00,Hitachi MB-6885,0,pcornier/BasicMasterJr_MiSTer,504599147,SystemVerilog,BasicMasterJr_MiSTer,359,0,2022-06-17 16:16:24+00:00,[],https://api.github.com/licenses/gpl-2.0
251,https://github.com/Askartos/openPwm.git,2022-07-08 01:36:20+00:00,pwm implementations in systemverilog,0,Askartos/openPwm,511725703,SystemVerilog,openPwm,2,0,2022-07-08 01:39:42+00:00,[],https://api.github.com/licenses/mit
252,https://github.com/YaMsoulm/pratice.git,2022-07-09 07:48:24+00:00,,1,YaMsoulm/pratice,512126317,SystemVerilog,pratice,1,0,2022-07-14 12:31:27+00:00,[],None
253,https://github.com/Faisalawan11/Lab-18-Assertions.git,2022-07-18 17:54:12+00:00,,0,Faisalawan11/Lab-18-Assertions,515287433,SystemVerilog,Lab-18-Assertions,2,0,2022-07-18 17:55:12+00:00,[],None
254,https://github.com/amiteshkr63/SPI_Master_Design_System_Verilog.git,2022-07-18 08:30:07+00:00,,0,amiteshkr63/SPI_Master_Design_System_Verilog,515097673,SystemVerilog,SPI_Master_Design_System_Verilog,51,0,2023-08-29 05:30:13+00:00,[],None
255,https://github.com/jigishaa2/RTL-File-generation.git,2022-07-11 03:06:42+00:00,,0,jigishaa2/RTL-File-generation,512599264,SystemVerilog,RTL-File-generation,66,0,2022-07-11 03:08:39+00:00,[],None
256,https://github.com/JoaoJoaoVF/TP-ISL.git,2022-07-20 16:47:52+00:00,Trabalho Pratico da Disciplina de Introdução aos Sistemas Logicos 2022/1,0,JoaoJoaoVF/TP-ISL,516062393,SystemVerilog,TP-ISL,2,0,2022-09-30 20:37:29+00:00,[],None
257,https://github.com/bismark09/repo_for_trial.git,2022-08-16 20:41:51+00:00,repository for syntacore team,0,bismark09/repo_for_trial,525536444,SystemVerilog,repo_for_trial,70,0,2022-08-17 12:38:57+00:00,[],None
258,https://github.com/MSaqi/ALU.git,2022-06-28 04:55:00+00:00,ALU_system_verilog,0,MSaqi/ALU,508159167,SystemVerilog,ALU,3,0,2022-06-28 05:00:54+00:00,[],None
259,https://github.com/RRemixx/optimization.git,2022-06-27 01:35:02+00:00,470 lab 4 opt code,0,RRemixx/optimization,507727212,SystemVerilog,optimization,376,0,2022-06-27 02:00:11+00:00,[],None
260,https://github.com/pramath-haritz/simple-verilog-applications.git,2022-09-19 16:10:28+00:00,Circuit Implementations with System Verilog,0,pramath-haritz/simple-verilog-applications,538587000,SystemVerilog,simple-verilog-applications,15,0,2023-01-27 18:25:28+00:00,[],None
261,https://github.com/CynthiaLi1018/EE-469.git,2022-08-23 20:08:31+00:00,Computer Architecture I by Professor Scott Hauck,0,CynthiaLi1018/EE-469,528146607,SystemVerilog,EE-469,1512,0,2022-08-23 20:27:31+00:00,[],None
262,https://github.com/dirkarnez/verilog-playground.git,2022-08-18 14:17:59+00:00,,0,dirkarnez/verilog-playground,526241657,SystemVerilog,verilog-playground,6,0,2022-08-18 14:20:54+00:00,[],None
263,https://github.com/dannydang-cp/CPE233-Computer-Design.git,2022-08-18 18:56:15+00:00,,0,dannydang-cp/CPE233-Computer-Design,526338005,SystemVerilog,CPE233-Computer-Design,2307,0,2022-08-18 18:57:18+00:00,[],None
264,https://github.com/asahsieh/ic-design-verification.git,2022-08-26 02:58:11+00:00,Collection of my code for DV,0,asahsieh/ic-design-verification,529093995,SystemVerilog,ic-design-verification,4,0,2022-08-26 03:04:54+00:00,[],https://api.github.com/licenses/mit
265,https://github.com/NayaKim/naya_hpc.git,2022-08-31 09:32:52+00:00,,0,NayaKim/naya_hpc,531017456,SystemVerilog,naya_hpc,48,0,2022-09-01 07:56:22+00:00,[],None
266,https://github.com/shaarawy29/ALU_tb_UVM.git,2022-08-28 09:15:39+00:00,,0,shaarawy29/ALU_tb_UVM,529814026,SystemVerilog,ALU_tb_UVM,22,0,2022-09-04 11:59:41+00:00,[],None
267,https://github.com/Nitish1371/oops.git,2022-08-30 12:11:01+00:00,,0,Nitish1371/oops,530640743,SystemVerilog,oops,280,0,2022-09-05 10:45:28+00:00,[],None
268,https://github.com/FluffyAlligator/ece554_miniproject.git,2022-09-08 21:46:47+00:00,,0,FluffyAlligator/ece554_miniproject,534404022,SystemVerilog,ece554_miniproject,504,0,2022-09-08 22:46:15+00:00,[],None
269,https://github.com/carsonmiiller/ece352.git,2022-09-20 01:06:23+00:00,,0,carsonmiiller/ece352,538756282,SystemVerilog,ece352,11685,0,2022-09-20 01:07:58+00:00,[],None
270,https://github.com/harithaa12/Verilog-HDL.git,2022-09-20 14:20:17+00:00,,0,harithaa12/Verilog-HDL,539028040,SystemVerilog,Verilog-HDL,16,0,2022-09-22 20:08:18+00:00,[],None
271,https://github.com/Danil1997Dev/RSA_Xilinx.git,2022-09-24 17:02:00+00:00,,0,Danil1997Dev/RSA_Xilinx,540903502,SystemVerilog,RSA_Xilinx,2893,0,2022-09-24 17:06:20+00:00,[],None
272,https://github.com/allisonseigler/ece554_miniproject3.git,2022-09-20 20:50:07+00:00,,0,allisonseigler/ece554_miniproject3,539187027,SystemVerilog,ece554_miniproject3,8,0,2022-09-20 20:52:38+00:00,[],None
273,https://github.com/PathakamuriNaresh/AXI_FIFO_BFM.git,2022-09-22 10:32:03+00:00,,0,PathakamuriNaresh/AXI_FIFO_BFM,539925646,SystemVerilog,AXI_FIFO_BFM,9857,0,2022-09-22 10:32:29+00:00,[],None
274,https://github.com/andersontruong/Single-Cycle-ARMv7.git,2022-09-14 00:36:46+00:00,,0,andersontruong/Single-Cycle-ARMv7,536357148,SystemVerilog,Single-Cycle-ARMv7,7,0,2023-09-28 21:50:30+00:00,[],None
275,https://github.com/ic2Atao/Switch.git,2022-08-28 14:12:04+00:00,"This is a simple switch, which can drive the incoming packet to destination ports based on the address constrained in the packet",0,ic2Atao/Switch,529881892,SystemVerilog,Switch,2023,0,2023-03-02 19:11:40+00:00,[],None
276,https://github.com/prajwal0718/Layerd-TestBench-Full-Adder.git,2022-09-06 15:41:21+00:00,,0,prajwal0718/Layerd-TestBench-Full-Adder,533392476,SystemVerilog,Layerd-TestBench-Full-Adder,12,0,2022-09-06 17:02:28+00:00,[],https://api.github.com/licenses/mit
277,https://github.com/ratnabai/01fe21mve009.git,2022-09-06 15:42:19+00:00,ADLV,0,ratnabai/01fe21mve009,533392856,SystemVerilog,01fe21mve009,55,0,2022-09-13 08:08:05+00:00,[],None
278,https://github.com/RehanEjaz/practice.git,2022-09-06 16:08:19+00:00,Repo for Git practice,1,RehanEjaz/practice,533402521,SystemVerilog,practice,2,0,2022-09-06 17:30:39+00:00,[],None
279,https://github.com/chaitraalur/01FE21MVE006.git,2022-09-08 05:46:08+00:00,ADLV,0,chaitraalur/01FE21MVE006,534067825,SystemVerilog,01FE21MVE006,65,0,2022-09-13 06:16:08+00:00,[],None
280,https://github.com/Caoyuanzhi/ZAP_.git,2022-09-17 02:28:31+00:00,,0,Caoyuanzhi/ZAP_,537676735,SystemVerilog,ZAP_,6867,0,2022-09-17 02:31:59+00:00,[],None
281,https://github.com/ECE4278/lab2.git,2022-09-13 07:26:46+00:00,,0,ECE4278/lab2,536008188,SystemVerilog,lab2,6,0,2022-09-13 10:10:59+00:00,[],None
282,https://github.com/mo-hosni/Extended-ARM.git,2022-09-06 10:14:59+00:00,Added a global predictor with index sharing to the ARM pipelined processor rtl from Harris & Harris textbook.,0,mo-hosni/Extended-ARM,533268840,SystemVerilog,Extended-ARM,23,0,2022-09-06 18:22:55+00:00,[],None
283,https://github.com/mo-hosni/uvm_enviroment.git,2022-09-06 10:06:52+00:00,UVM environment for Scrambler module verification ,0,mo-hosni/uvm_enviroment,533266009,SystemVerilog,uvm_enviroment,42,0,2022-09-06 10:09:35+00:00,[],None
284,https://github.com/Raghavi9860/Design_and_Verification_of_ALU_using_System_Verilog.git,2022-08-01 15:33:19+00:00,Verification of ALU is done by systemverilog using Questa sim tool.,0,Raghavi9860/Design_and_Verification_of_ALU_using_System_Verilog,520166518,SystemVerilog,Design_and_Verification_of_ALU_using_System_Verilog,9,0,2023-12-04 10:19:43+00:00,[],None
285,https://github.com/NRJaggers/Computer-Design-and-Assembly-Language-Programming.git,2022-07-24 23:46:23+00:00,CPE-233 - Computer Design & Assembly Language - California Polytechnic State University SLO,0,NRJaggers/Computer-Design-and-Assembly-Language-Programming,517462590,SystemVerilog,Computer-Design-and-Assembly-Language-Programming,106,0,2023-12-20 00:02:23+00:00,[],None
286,https://github.com/NabihaTariq/Verilog_Coding.git,2022-05-22 06:34:03+00:00,,0,NabihaTariq/Verilog_Coding,494979189,SystemVerilog,Verilog_Coding,373,0,2022-05-22 08:48:48+00:00,[],None
287,https://github.com/shakirsultan/UART_Project_private.git,2022-05-24 10:18:29+00:00,Private Repo for UART Project,0,shakirsultan/UART_Project_private,495771420,SystemVerilog,UART_Project_private,3367,0,2022-06-16 12:33:06+00:00,[],None
288,https://github.com/comsec-group/cellift-pulpissimo-hdac-2018.git,2022-06-09 08:56:21+00:00,"The PULPissimo design used in Hack@DAC2018, frozen and instrumented for the CellIFT paper experiments ",0,comsec-group/cellift-pulpissimo-hdac-2018,501577280,SystemVerilog,cellift-pulpissimo-hdac-2018,18043,0,2022-06-09 10:52:35+00:00,[],
289,https://github.com/sharan1421/ALU_UVM.git,2022-06-09 12:13:41+00:00,Basic ALU has been verified with the UVM environment.,0,sharan1421/ALU_UVM,501638750,SystemVerilog,ALU_UVM,76,0,2022-06-09 12:21:04+00:00,[],https://api.github.com/licenses/apache-2.0
290,https://github.com/TatshSiow/HW3.git,2022-06-11 04:36:25+00:00,四人投票機設計(if語法轉換成case語法),0,TatshSiow/HW3,502250370,SystemVerilog,HW3,1,0,2022-06-11 04:38:10+00:00,[],None
291,https://github.com/LyashenkoValeria/SP_MSP430.git,2022-05-20 07:28:26+00:00,,0,LyashenkoValeria/SP_MSP430,494364773,SystemVerilog,SP_MSP430,21,0,2022-05-20 07:37:54+00:00,[],None
292,https://github.com/skudlur/intel-fpga.git,2022-07-17 08:38:18+00:00,This repo contains SV and Sycl code for the FPGA Academy using Intel FPGAs on the oneAPI platform.,0,skudlur/intel-fpga,514789757,SystemVerilog,intel-fpga,9,0,2022-07-17 08:42:01+00:00,[],None
293,https://github.com/Omar-Hisham/Pipelined-ARM-Processor.git,2022-07-22 16:26:55+00:00,Implementation of pipelined ARM processor using system Verilog and ARM assembly.,1,Omar-Hisham/Pipelined-ARM-Processor,516817397,SystemVerilog,Pipelined-ARM-Processor,12,0,2022-07-23 18:22:05+00:00,[],None
294,https://github.com/johnhof3/SHA-256-Hashing-Accelerator.git,2022-07-29 04:06:02+00:00,"This is a simple SHA-256 hashing accelerator ran on a MAX 10 FPGA, written in System Verilog",0,johnhof3/SHA-256-Hashing-Accelerator,519074743,SystemVerilog,SHA-256-Hashing-Accelerator,13,0,2022-07-29 05:06:49+00:00,[],None
295,https://github.com/ademcolak/RISC-V_PROJESI_-_BLM202.git,2022-05-16 17:35:25+00:00,,0,ademcolak/RISC-V_PROJESI_-_BLM202,492937218,SystemVerilog,RISC-V_PROJESI_-_BLM202,8080,0,2022-05-16 17:48:41+00:00,[],None
296,https://github.com/ppurwat/Pre-Si-JTAG-Verification-Project.git,2022-06-25 20:53:48+00:00,,0,ppurwat/Pre-Si-JTAG-Verification-Project,507414983,SystemVerilog,Pre-Si-JTAG-Verification-Project,2309,0,2022-06-25 23:52:19+00:00,[],None
297,https://github.com/a29712049/Pseudo-Random-Pattern-Generator.git,2022-06-27 02:47:11+00:00,,0,a29712049/Pseudo-Random-Pattern-Generator,507741729,SystemVerilog,Pseudo-Random-Pattern-Generator,39,0,2022-06-27 02:47:36+00:00,[],None
298,https://github.com/chen-ian-rong/HW-1.git,2022-06-26 18:47:43+00:00,,0,chen-ian-rong/HW-1,507657705,SystemVerilog,HW-1,6,0,2022-06-26 19:00:05+00:00,[],None
299,https://github.com/RevanthNandamuri1341b0/UART-Verification-Environment.git,2022-06-28 16:54:33+00:00,,0,RevanthNandamuri1341b0/UART-Verification-Environment,508383793,SystemVerilog,UART-Verification-Environment,823,0,2022-06-28 16:56:34+00:00,[],None
300,https://github.com/fpgauniversity/intel_academic_day_2022.git,2022-07-15 16:39:40+00:00,This is a repository containing the public files required for the Hands-on FPGA experience during the 2022 Intel Academic Day.,0,fpgauniversity/intel_academic_day_2022,514338241,SystemVerilog,intel_academic_day_2022,883,0,2022-07-15 16:50:52+00:00,[],None
301,https://github.com/LoesterFranco/common_cores.git,2022-08-15 16:52:13+00:00,,0,LoesterFranco/common_cores,525066392,,common_cores,43,0,2022-08-15 16:52:08+00:00,[],None
302,https://github.com/alvent98/Arduino-Verilog-Alarm-System.git,2022-06-03 17:17:05+00:00,"Basic alarm system (Arduino & Verilog versions) for postgraduate Edge Computing Course, Spring Semester 2022",0,alvent98/Arduino-Verilog-Alarm-System,499592601,SystemVerilog,Arduino-Verilog-Alarm-System,383,0,2023-08-23 21:09:37+00:00,[],None
303,https://github.com/luke-avionics/wide_alu.git,2022-06-01 17:54:06+00:00,,0,luke-avionics/wide_alu,498842479,SystemVerilog,wide_alu,19,0,2022-06-01 20:19:08+00:00,[],None
304,https://github.com/dnoonan08/AIinPixel_TestBenches.git,2022-06-24 00:27:26+00:00,,0,dnoonan08/AIinPixel_TestBenches,506829637,SystemVerilog,AIinPixel_TestBenches,9725,0,2022-06-24 00:31:48+00:00,[],None
305,https://github.com/SinceNight/ICey.git,2022-06-16 06:41:31+00:00,,0,SinceNight/ICey,504041720,SystemVerilog,ICey,46,0,2022-06-16 06:46:42+00:00,[],None
306,https://github.com/retar-kamuy/uvm_verification_example.git,2022-07-03 07:45:13+00:00,,0,retar-kamuy/uvm_verification_example,509956338,SystemVerilog,uvm_verification_example,51,0,2022-07-03 08:46:06+00:00,[],None
307,https://github.com/ytken/Syntacore_RISCV_SCR1.git,2022-07-13 07:43:16+00:00,,0,ytken/Syntacore_RISCV_SCR1,513426924,SystemVerilog,Syntacore_RISCV_SCR1,12727,0,2022-07-13 08:06:37+00:00,[],None
308,https://github.com/aastha0603/Traffic-Light-Controller.git,2022-07-12 14:56:43+00:00,,0,aastha0603/Traffic-Light-Controller,513185035,SystemVerilog,Traffic-Light-Controller,1,0,2022-07-12 14:58:52+00:00,[],None
309,https://github.com/hmarjal/dt2_2022.git,2022-08-21 10:43:20+00:00,,0,hmarjal/dt2_2022,527176339,SystemVerilog,dt2_2022,142,0,2022-11-09 13:05:37+00:00,[],None
310,https://github.com/Antonios-C/Virtual-Lock-Box.git,2022-08-14 23:45:30+00:00,,0,Antonios-C/Virtual-Lock-Box,524804842,SystemVerilog,Virtual-Lock-Box,7,0,2022-08-14 23:48:57+00:00,[],None
311,https://github.com/My-Lock/Test_ssh.git,2022-09-21 13:18:20+00:00,my,0,My-Lock/Test_ssh,539498144,,Test_ssh,2,0,2022-10-06 16:35:41+00:00,[],None
312,https://github.com/kanuar/systemverilog_mux4-1.git,2022-09-18 13:42:01+00:00,,0,kanuar/systemverilog_mux4-1,538121829,SystemVerilog,systemverilog_mux4-1,3,0,2022-09-18 13:47:08+00:00,[],None
313,https://github.com/DilipKrishnappa/Data_lytes.git,2022-08-22 11:55:27+00:00,System verilog data_types,0,DilipKrishnappa/Data_lytes,527543303,SystemVerilog,Data_lytes,7,0,2022-08-27 17:59:53+00:00,[],None
314,https://github.com/golanger1/Billiard_FPGA.git,2022-08-21 20:21:41+00:00,"Lab 1a project. Creating a billiard game running on FPGA with a white ball, multiple hit balls, and circular motion.",0,golanger1/Billiard_FPGA,527317964,SystemVerilog,Billiard_FPGA,109830,0,2023-01-24 14:21:48+00:00,[],None
315,https://github.com/jkennerly/simple-processor-systemverilog.git,2022-08-23 03:39:25+00:00,,0,jkennerly/simple-processor-systemverilog,527821276,SystemVerilog,simple-processor-systemverilog,181,0,2022-08-23 03:59:05+00:00,[],None
316,https://github.com/AlexanderPasso/Digitales-2.git,2022-09-02 00:56:16+00:00,,0,AlexanderPasso/Digitales-2,531734111,SystemVerilog,Digitales-2,4747,0,2022-09-02 01:10:53+00:00,[],None
317,https://github.com/IvanRenison/Practico2_arquitectura_de_computadoras__processor_arm.git,2022-09-04 13:22:59+00:00,,1,IvanRenison/Practico2_arquitectura_de_computadoras__processor_arm,532547346,SystemVerilog,Practico2_arquitectura_de_computadoras__processor_arm,63,0,2022-11-23 13:10:28+00:00,[],None
318,https://github.com/s-hfarooq/ece498hk-RISCV-V-Extension.git,2022-09-23 21:52:15+00:00,UIUC ECE 498HK Fall 2022 ,0,s-hfarooq/ece498hk-RISCV-V-Extension,540628312,SystemVerilog,ece498hk-RISCV-V-Extension,646316,0,2023-01-31 20:27:42+00:00,[],None
319,https://github.com/subhamprasaddash/parking_lot_occupancy_counter.git,2022-08-30 06:49:19+00:00,A Parking Lot Simulator using System Verilog on FPGA DE1_SoC,0,subhamprasaddash/parking_lot_occupancy_counter,530532833,,parking_lot_occupancy_counter,1069,0,2021-02-21 03:56:48+00:00,[],None
320,https://github.com/mm-mehran79/fixed-point-IIR-filter-design-on-FPGA.git,2022-08-30 13:47:09+00:00,-parameterized verilog code to implement FIR filter on FPGA & design the filter using Matlab,0,mm-mehran79/fixed-point-IIR-filter-design-on-FPGA,530677149,SystemVerilog,fixed-point-IIR-filter-design-on-FPGA,39,0,2023-09-02 04:16:22+00:00,[],None
321,https://github.com/allisonseigler/ece554_miniproject.git,2022-09-08 21:46:31+00:00,,0,allisonseigler/ece554_miniproject,534403948,SystemVerilog,ece554_miniproject,672,0,2022-09-08 23:46:22+00:00,[],None
322,https://github.com/Kholoud-Ebrahim/System-Verilog-Tasks.git,2022-09-22 15:16:41+00:00,The third phase tasks in Chipions Program Training.,1,Kholoud-Ebrahim/System-Verilog-Tasks,540042896,SystemVerilog,System-Verilog-Tasks,170,0,2023-08-26 19:22:47+00:00,[],None
323,https://github.com/leogarcia1/minilab4.git,2022-09-22 21:32:48+00:00,,0,leogarcia1/minilab4,540177268,SystemVerilog,minilab4,590,0,2022-09-22 21:33:52+00:00,[],None
324,https://github.com/diegogimenez04/AdC_FAMAF_Practico1.git,2022-09-03 15:01:35+00:00,,0,diegogimenez04/AdC_FAMAF_Practico1,532292210,SystemVerilog,AdC_FAMAF_Practico1,2645,0,2022-09-03 15:04:08+00:00,[],None
325,https://github.com/ArnyminerZ/UPV-ISDIGI-FIFO.git,2022-09-14 16:40:43+00:00,La primera actividad de laboratorio para la asignatura ISDIGI de tercero de Teleco de la UPV.,0,ArnyminerZ/UPV-ISDIGI-FIFO,536672211,SystemVerilog,UPV-ISDIGI-FIFO,190,0,2022-10-05 07:23:29+00:00,[],None
326,https://github.com/karenxli/eece2323.git,2022-09-13 19:26:15+00:00,,0,karenxli/eece2323,536278743,SystemVerilog,eece2323,81542,0,2022-10-10 04:34:30+00:00,[],None
327,https://github.com/allisonseigler/ece554_miniproject2.git,2022-09-15 18:36:12+00:00,,0,allisonseigler/ece554_miniproject2,537160527,SystemVerilog,ece554_miniproject2,5,0,2022-09-15 18:42:13+00:00,[],None
328,https://github.com/mrutunjaynalwad/linux_codes.git,2022-09-15 05:32:28+00:00,coding,0,mrutunjaynalwad/linux_codes,536878131,SystemVerilog,linux_codes,1,0,2022-09-15 05:53:25+00:00,[],None
329,https://github.com/nduCode/ECE554_Minilab2.git,2022-09-15 20:56:42+00:00,Minilab 2 for ECE 554,0,nduCode/ECE554_Minilab2,537203970,SystemVerilog,ECE554_Minilab2,676,0,2022-09-15 21:28:06+00:00,[],None
330,https://github.com/AlbertAgui/sv_projects.git,2022-08-07 12:34:06+00:00,,0,AlbertAgui/sv_projects,522207941,SystemVerilog,sv_projects,363,0,2022-08-07 12:46:39+00:00,[],None
331,https://github.com/anmehta4/ece554_minilab2.git,2022-09-15 19:24:42+00:00,,1,anmehta4/ece554_minilab2,537176493,SystemVerilog,ece554_minilab2,3,0,2022-09-15 19:33:21+00:00,[],None
332,https://github.com/Narinder788/Task4.1.git,2022-09-16 23:43:09+00:00,,0,Narinder788/Task4.1,537649871,SystemVerilog,Task4.1,4,0,2022-09-16 23:47:45+00:00,[],None
333,https://github.com/djoffe/UVM-Framework.git,2022-09-21 22:49:12+00:00,A local copy of [UVM Framework](https://verificationacademy.com/topics/verification-methodology/uvm-framework),1,djoffe/UVM-Framework,539712106,SystemVerilog,UVM-Framework,46554,0,2022-09-21 23:02:32+00:00,[],https://api.github.com/licenses/apache-2.0
334,https://github.com/keenstoat/jimmy-enhanced.git,2022-08-27 21:21:17+00:00,,0,keenstoat/jimmy-enhanced,529699477,SystemVerilog,jimmy-enhanced,367,0,2022-08-27 21:22:09+00:00,[],None
335,https://github.com/minecraftdixit/fifo-.git,2022-08-28 20:30:16+00:00,synchronous  fifo  verification using system verilog ,0,minecraftdixit/fifo-,529972532,SystemVerilog,fifo-,12,0,2022-08-28 20:31:21+00:00,[],None
336,https://github.com/vsheung/ARC4-Cracking-Circuit.git,2022-08-28 16:26:33+00:00,Developed a Verilog-based ARC4 decryption circuit using an encryption key to generate a pseudo-random byte stream.,0,vsheung/ARC4-Cracking-Circuit,529916455,SystemVerilog,ARC4-Cracking-Circuit,100,0,2022-08-28 16:49:56+00:00,[],None
337,https://github.com/MadejSzymon/de0nano_led_uart_rx.git,2022-09-01 08:59:56+00:00,LED control using UART and MATLAB script.,0,MadejSzymon/de0nano_led_uart_rx,531440106,SystemVerilog,de0nano_led_uart_rx,149,0,2022-09-01 09:06:02+00:00,[],None
338,https://github.com/TejaUpanishad/ADLV.git,2022-09-01 07:45:14+00:00,,0,TejaUpanishad/ADLV,531415840,SystemVerilog,ADLV,50,0,2022-09-01 07:46:51+00:00,[],None
339,https://github.com/mackenzieg/risky.git,2022-09-02 01:55:56+00:00,,0,mackenzieg/risky,531747185,SystemVerilog,risky,18,0,2022-09-02 04:08:27+00:00,[],https://api.github.com/licenses/apache-2.0
340,https://github.com/skudlur/verif-lab.git,2022-09-04 06:20:50+00:00,"This repo contains SV, testbench and tcl files for the Verification of Digital Systems elective course.",0,skudlur/verif-lab,532456112,SystemVerilog,verif-lab,2,0,2022-09-04 06:21:18+00:00,[],None
341,https://github.com/wbv/dyse-framework.git,2022-09-12 17:24:36+00:00,Fork of bitbucket.org/biodesignlab/dyse-framework,0,wbv/dyse-framework,535776257,SystemVerilog,dyse-framework,5853,0,2022-11-22 01:18:57+00:00,[],None
342,https://github.com/yuyunchia/DCLAB.git,2022-09-13 07:13:21+00:00,,0,yuyunchia/DCLAB,536003405,SystemVerilog,DCLAB,3290,0,2022-09-13 07:17:10+00:00,[],None
343,https://github.com/bguan2022/HFT.git,2022-08-14 03:54:52+00:00,,1,bguan2022/HFT,524567463,SystemVerilog,HFT,1973,0,2022-08-31 21:10:44+00:00,[],None
344,https://github.com/Mansiss/UVM_TB_FOR_FIFO.git,2022-08-17 18:18:34+00:00,,0,Mansiss/UVM_TB_FOR_FIFO,525907518,SystemVerilog,UVM_TB_FOR_FIFO,6,0,2022-08-17 18:21:52+00:00,[],None
345,https://github.com/KennethWilke/wiz-examples.git,2022-08-23 16:15:56+00:00,,0,KennethWilke/wiz-examples,528070081,SystemVerilog,wiz-examples,1,0,2022-08-23 16:16:12+00:00,[],None
346,https://github.com/ikar298/Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier-using-Verilog-HDL-on-FPG.git,2022-08-25 17:16:13+00:00,,0,ikar298/Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier-using-Verilog-HDL-on-FPG,528948126,SystemVerilog,Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier-using-Verilog-HDL-on-FPG,36,0,2022-08-25 17:56:15+00:00,[],None
347,https://github.com/Jellyyz/ADV-VLSI-Design-.git,2022-08-25 21:56:39+00:00,Ibex RISC Core Tapeout,0,Jellyyz/ADV-VLSI-Design-,529030025,SystemVerilog,ADV-VLSI-Design-,40288,0,2023-01-01 05:00:17+00:00,[],None
348,https://github.com/Musa-Azeem/CSCE611.git,2022-08-30 03:26:37+00:00,,0,Musa-Azeem/CSCE611,530482102,SystemVerilog,CSCE611,38584,0,2023-01-24 20:19:08+00:00,[],None
349,https://github.com/kanuar/systemverilog_mux8-1.git,2022-09-19 04:30:50+00:00,,0,kanuar/systemverilog_mux8-1,538333653,SystemVerilog,systemverilog_mux8-1,3,0,2022-09-20 10:39:29+00:00,[],None
350,https://github.com/jayeshsuyal/Verification-of-I2C-.git,2022-09-09 05:08:26+00:00,,0,jayeshsuyal/Verification-of-I2C-,534505916,SystemVerilog,Verification-of-I2C-,2,0,2022-09-09 05:12:59+00:00,[],None
351,https://github.com/vomar18/LAB_verificaton.git,2022-05-17 15:40:58+00:00,This repo store all the verification lab assignment,0,vomar18/LAB_verificaton,493314372,SystemVerilog,LAB_verificaton,151,0,2022-05-24 10:37:53+00:00,[],None
352,https://github.com/mehhdiii/RISC-V-Single-cycle.git,2022-05-17 15:28:40+00:00,Single cycle implementation of RISC-V processor,0,mehhdiii/RISC-V-Single-cycle,493309812,SystemVerilog,RISC-V-Single-cycle,5,0,2022-05-17 23:39:32+00:00,[],https://api.github.com/licenses/mit
353,https://github.com/MathieuSnd/DLX-processor.git,2022-05-18 14:12:20+00:00,A 2 week pipelined microprocessor core project,0,MathieuSnd/DLX-processor,493692067,SystemVerilog,DLX-processor,1222,0,2022-11-08 11:11:58+00:00,[],None
354,https://github.com/Moebius-Klaus/YODA-2022-Group13.git,2022-05-22 18:06:01+00:00,,0,Moebius-Klaus/YODA-2022-Group13,495138422,SystemVerilog,YODA-2022-Group13,205,0,2022-05-23 21:58:06+00:00,[],None
355,https://github.com/Shwetapatil05/router.git,2022-05-23 07:50:59+00:00,,0,Shwetapatil05/router,495309563,SystemVerilog,router,16,0,2022-05-23 07:56:56+00:00,[],None
356,https://github.com/e10-nguyen/FordTailLight-FPGA.git,2022-06-03 03:41:46+00:00,"Using Verilog and FPGA, made a working tailight",0,e10-nguyen/FordTailLight-FPGA,499369680,SystemVerilog,FordTailLight-FPGA,1657,0,2022-06-03 03:44:41+00:00,[],None
357,https://github.com/shxvxnng/morris_mano_soln_verilog.git,2022-06-02 21:06:05+00:00,,0,shxvxnng/morris_mano_soln_verilog,499290817,SystemVerilog,morris_mano_soln_verilog,4,0,2022-06-02 21:17:05+00:00,[],None
358,https://github.com/gaozheng2001/load_counter.git,2022-06-01 13:21:34+00:00,,0,gaozheng2001/load_counter,498745287,SystemVerilog,load_counter,705,0,2022-06-01 13:33:33+00:00,[],None
359,https://github.com/SokAnn/project-1.git,2022-06-01 15:44:19+00:00,,0,SokAnn/project-1,498798478,SystemVerilog,project-1,55,0,2022-06-07 17:00:25+00:00,[],None
360,https://github.com/Ramdoo/mySCR1.git,2022-05-24 09:58:50+00:00,,0,Ramdoo/mySCR1,495765256,SystemVerilog,mySCR1,6059,0,2022-05-24 09:59:47+00:00,[],
361,https://github.com/rangicut/fpga_jtag.git,2022-05-12 07:28:18+00:00,FPGA based jtag controller,0,rangicut/fpga_jtag,491408512,SystemVerilog,fpga_jtag,18635,0,2022-05-12 10:15:44+00:00,[],None
362,https://github.com/RazaSaleem/Projectpart3_DVE.git,2022-07-30 03:52:46+00:00,The verification Plan for given DUT memory.,0,RazaSaleem/Projectpart3_DVE,519412272,SystemVerilog,Projectpart3_DVE,51,0,2022-08-07 17:15:30+00:00,[],None
363,https://github.com/Xtyll/quadrature_encoder_monitor.git,2022-06-28 19:39:21+00:00,,0,Xtyll/quadrature_encoder_monitor,508432250,SystemVerilog,quadrature_encoder_monitor,8,0,2022-06-28 19:44:12+00:00,[],None
364,https://github.com/lhm7198/DRAM_CACHE.git,2022-06-29 12:06:23+00:00,,0,lhm7198/DRAM_CACHE,508674966,SystemVerilog,DRAM_CACHE,7336,0,2022-10-26 03:49:37+00:00,[],None
365,https://github.com/SayantanMandal2000/VerilogHDL_Udemy.git,2022-06-22 13:13:44+00:00,,0,SayantanMandal2000/VerilogHDL_Udemy,506254093,SystemVerilog,VerilogHDL_Udemy,6,0,2022-06-22 13:16:37+00:00,[],None
366,https://github.com/rajlrn/SV.git,2022-06-22 13:01:18+00:00,,0,rajlrn/SV,506249496,SystemVerilog,SV,1,0,2022-06-22 13:02:47+00:00,[],None
367,https://github.com/c28504693/HW1-Hierarchical-Design-of-3-8-decoder.git,2022-06-11 11:41:49+00:00,,0,c28504693/HW1-Hierarchical-Design-of-3-8-decoder,502332059,SystemVerilog,HW1-Hierarchical-Design-of-3-8-decoder,1,0,2022-06-11 11:43:17+00:00,[],None
368,https://github.com/VictoriaLoseva/CSE141L.git,2022-06-08 10:47:13+00:00,,0,VictoriaLoseva/CSE141L,501208790,SystemVerilog,CSE141L,607,0,2022-06-12 07:19:28+00:00,[],None
369,https://github.com/zhangziqing/Icaurs.git,2022-06-16 01:57:42+00:00,A loongArch processor core,1,zhangziqing/Icaurs,503978700,SystemVerilog,Icaurs,23063,0,2022-11-17 11:16:14+00:00,[],None
370,https://github.com/anushagh/4bit-sreg.git,2022-07-21 04:19:07+00:00,,0,anushagh/4bit-sreg,516221993,SystemVerilog,4bit-sreg,9,0,2022-07-21 08:49:22+00:00,[],https://api.github.com/licenses/bsd-3-clause
371,https://github.com/hugo655/uvm_primer_study.git,2022-07-21 14:24:06+00:00,A repository to host notes and codes of my study of UVM,0,hugo655/uvm_primer_study,516402953,SystemVerilog,uvm_primer_study,6727,0,2022-07-21 14:36:35+00:00,[],None
372,https://github.com/dnam98/Knights-Tour.git,2022-08-01 01:19:23+00:00,,0,dnam98/Knights-Tour,519925817,SystemVerilog,Knights-Tour,34,0,2022-08-30 04:18:02+00:00,[],None
373,https://github.com/Jchastan/Custom-Processor-Project.git,2022-08-04 03:24:17+00:00,,0,Jchastan/Custom-Processor-Project,521109062,SystemVerilog,Custom-Processor-Project,9279,0,2022-08-04 03:49:25+00:00,[],None
374,https://github.com/SAMSONMENG/Module-Track.git,2022-06-08 22:12:23+00:00,,0,SAMSONMENG/Module-Track,501426058,SystemVerilog,Module-Track,75,0,2022-06-08 22:13:40+00:00,[],None
375,https://github.com/Skwoogey/SystemVerilog-GameOfLife.git,2022-07-11 16:21:08+00:00,,0,Skwoogey/SystemVerilog-GameOfLife,512829148,SystemVerilog,SystemVerilog-GameOfLife,1,0,2022-07-11 16:21:21+00:00,[],None
376,https://github.com/LinJ0/2022CS_Digital_IC_Design.git,2022-06-23 09:57:21+00:00,,0,LinJ0/2022CS_Digital_IC_Design,506585626,SystemVerilog,2022CS_Digital_IC_Design,6487,0,2022-06-23 13:20:56+00:00,[],None
377,https://github.com/AmanPrakash09/Bresenham-s-Algorithms.git,2022-07-05 21:26:37+00:00,Learned how Visual Graphics Arrays function and how FSMs can be utilized to draw desired pixels. Converted the Bresenham Circle Algorithm to SystemVerilog to draw circles and reuleaux triangles.,0,AmanPrakash09/Bresenham-s-Algorithms,510898783,SystemVerilog,Bresenham-s-Algorithms,823,0,2023-09-01 22:53:01+00:00,[],None
378,https://github.com/AmanPrakash09/Encrypting-and-Decrypting-Messages-in-Memory.git,2022-07-05 21:57:22+00:00,Created RAM modules through Quartus with initialized memory using memh and mif files. Allows one to send an encrypted message with a key to decrypt it. Decrypted message would write in a separate memory module. Key could be entered using a DE1-SoC board. ,0,AmanPrakash09/Encrypting-and-Decrypting-Messages-in-Memory,510905808,SystemVerilog,Encrypting-and-Decrypting-Messages-in-Memory,38,0,2022-08-02 04:48:28+00:00,[],None
379,https://github.com/krsheshu/tbarchies.git,2022-07-06 08:46:35+00:00,WIP with various Test Bench architectures which can ideally be reused,0,krsheshu/tbarchies,511058724,SystemVerilog,tbarchies,16,0,2022-07-10 11:25:19+00:00,[],None
380,https://github.com/micky-bank/interview_coding_practice.git,2022-07-07 13:27:39+00:00,,0,micky-bank/interview_coding_practice,511538396,SystemVerilog,interview_coding_practice,18,0,2022-08-07 06:55:10+00:00,[],None
381,https://github.com/amiteshkr63/I2C_design_VLSI.git,2022-07-13 08:40:24+00:00,,0,amiteshkr63/I2C_design_VLSI,513444076,SystemVerilog,I2C_design_VLSI,76,0,2023-08-29 05:29:11+00:00,[],None
382,https://github.com/nguyenducquang1212/sync_fifo.git,2022-07-10 08:27:45+00:00,,0,nguyenducquang1212/sync_fifo,512383059,SystemVerilog,sync_fifo,9,0,2022-07-10 08:30:01+00:00,[],None
383,https://github.com/benjamin051000/riscv.git,2022-07-16 03:28:54+00:00,A RISC-V RV32I Core,0,benjamin051000/riscv,514466463,SystemVerilog,riscv,95,0,2022-08-15 13:30:27+00:00,[],None
384,https://github.com/WuzhuangWang/sv_string.git,2022-08-20 05:48:47+00:00,"A systemverilog string extensions package，contains various string operation, such as replace, split.",2,WuzhuangWang/sv_string,526837854,,sv_string,11,0,2022-08-19 08:46:01+00:00,[],https://api.github.com/licenses/mit
385,https://github.com/AlSaqr-platform/ethernet.git,2022-07-28 09:46:36+00:00,Ethernet for Al Saqr platform,0,AlSaqr-platform/ethernet,518787866,SystemVerilog,ethernet,24464,0,2024-03-31 14:13:54+00:00,[],https://api.github.com/licenses/mit
386,https://github.com/Frucks/PURDUE-PROJECTS.git,2022-09-24 19:48:35+00:00,,0,Frucks/PURDUE-PROJECTS,540949243,SystemVerilog,PURDUE-PROJECTS,4143,0,2024-04-01 22:01:03+00:00,[],None
387,https://github.com/AmiltonCabral/LOAC.git,2022-06-01 09:26:26+00:00,Submissões dos arquivos top.sv da disciplina de LOAC na UFCG,0,AmiltonCabral/LOAC,498671072,SystemVerilog,LOAC,671,0,2024-04-06 11:42:26+00:00,[],None
388,https://github.com/GhulamMustafa9/Cache_Controller-_Manual-transaction-testbench.git,2022-05-19 12:52:12+00:00,DirectMapped  Cache Controller,0,GhulamMustafa9/Cache_Controller-_Manual-transaction-testbench,494070289,SystemVerilog,Cache_Controller-_Manual-transaction-testbench,667,0,2022-05-19 21:16:48+00:00,[],None
389,https://github.com/staniewskib/semihalf.git,2022-07-03 20:04:00+00:00,,0,staniewskib/semihalf,510124088,SystemVerilog,semihalf,5,0,2022-07-07 21:31:37+00:00,[],None
390,https://github.com/MinhTran0911/Simple_CPU_DE10.git,2022-07-30 14:37:56+00:00,Simple Central Processing Unit (CPU) Design using Terasic DE-10 Standard FPGA,0,MinhTran0911/Simple_CPU_DE10,519540384,SystemVerilog,Simple_CPU_DE10,20862,0,2022-08-06 08:13:54+00:00,"['altera-fpga', 'cpu', 'cyclone-v', 'fpga', 'hardware-description-language', 'hdl', 'modelsim', 'quartus-prime', 'systemverilog', 'terasic-de10-standard']",None
391,https://github.com/johnnoG/Verilog-Projects.git,2022-06-02 15:58:26+00:00,,0,johnnoG/Verilog-Projects,499200325,SystemVerilog,Verilog-Projects,118,0,2022-06-02 15:59:34+00:00,[],None
392,https://github.com/adwranovsky/quick_uart.git,2022-06-06 00:39:46+00:00,Quickly add UART TX and RX interfaces to an FPGA project,0,adwranovsky/quick_uart,500246719,SystemVerilog,quick_uart,12,0,2022-06-06 00:41:04+00:00,[],
393,https://github.com/SokAnn/project-2.git,2022-07-02 14:28:56+00:00,,0,SokAnn/project-2,509777403,SystemVerilog,project-2,14,0,2022-07-22 11:06:23+00:00,[],None
394,https://github.com/puneeth714/lfsr.git,2022-07-23 10:34:33+00:00,,0,puneeth714/lfsr,517027666,SystemVerilog,lfsr,322,0,2022-07-23 10:34:39+00:00,[],None
395,https://github.com/ppengjiang/ppengjiang.git,2022-05-13 02:45:42+00:00,vcs makefile and uvm ,0,ppengjiang/ppengjiang,491735426,SystemVerilog,ppengjiang,1,0,2022-05-13 02:48:16+00:00,[],None
396,https://github.com/Logan-M-51/TCES-330-Project.git,2022-05-11 01:27:46+00:00,CPU architecture made in Verilog using the Quartus Prime IDE,0,Logan-M-51/TCES-330-Project,490915959,SystemVerilog,TCES-330-Project,21,0,2022-05-11 01:32:45+00:00,[],None
397,https://github.com/Emerald52/HW5.git,2022-05-15 17:30:00+00:00,,0,Emerald52/HW5,492556767,SystemVerilog,HW5,2,0,2022-05-15 17:30:32+00:00,[],None
398,https://github.com/Bianca66/Parallel2Serial.git,2022-07-13 21:35:50+00:00,,0,Bianca66/Parallel2Serial,513677942,SystemVerilog,Parallel2Serial,7317,0,2022-07-13 21:37:49+00:00,[],None
399,https://github.com/napoleon98/Exanet-Switch-With-Virtual-Channels.git,2022-07-06 11:44:27+00:00,,0,napoleon98/Exanet-Switch-With-Virtual-Channels,511113997,SystemVerilog,Exanet-Switch-With-Virtual-Channels,305,0,2022-07-06 12:42:54+00:00,[],None
400,https://github.com/lilianabarbosa15/PRACTICA2_DIGITALES2.git,2022-07-05 19:48:14+00:00,CPU simple ,0,lilianabarbosa15/PRACTICA2_DIGITALES2,510874686,SystemVerilog,PRACTICA2_DIGITALES2,19,0,2022-07-05 19:52:30+00:00,[],None
401,https://github.com/alexc0888/multiFunctionBarrelShifter.git,2022-08-06 07:09:14+00:00,"Multi Function Left-Right Barrel Shifter that supports widths of 8, 16, and 32 bits.",0,alexc0888/multiFunctionBarrelShifter,521874296,SystemVerilog,multiFunctionBarrelShifter,24,0,2022-08-06 07:10:20+00:00,[],None
402,https://github.com/kuchisravani/RTLprojects.git,2022-07-12 05:56:53+00:00,,0,kuchisravani/RTLprojects,513016937,SystemVerilog,RTLprojects,30,0,2022-07-19 10:46:44+00:00,[],None
403,https://github.com/Wishah-Naseer/SweRV-FPU.git,2022-07-13 11:07:54+00:00,SweRV-EL2 Core with Floating Point Support,1,Wishah-Naseer/SweRV-FPU,513488461,SystemVerilog,SweRV-FPU,16325,0,2022-07-13 11:21:46+00:00,[],None
404,https://github.com/crisdmej/snake-game-repo.git,2022-07-11 22:03:51+00:00,,0,crisdmej/snake-game-repo,512920982,SystemVerilog,snake-game-repo,631,0,2022-07-11 22:37:15+00:00,[],None
405,https://github.com/GabrielReira/Digital-Electronics.git,2022-08-01 21:48:11+00:00,Repositório para a disciplina de Eletrônica Digital da Universidade Federal da Bahia (UFBA).,0,GabrielReira/Digital-Electronics,520271032,SystemVerilog,Digital-Electronics,6667,0,2022-08-09 19:44:18+00:00,[],https://api.github.com/licenses/mit
406,https://github.com/lobster128/lobster128.git,2022-08-21 20:32:59+00:00,lobster128 architecture.,0,lobster128/lobster128,527320235,SystemVerilog,lobster128,700,0,2022-08-21 20:57:46+00:00,[],https://api.github.com/licenses/gpl-3.0
407,https://github.com/TDD-II-22/lab02-g03.git,2022-08-20 14:25:48+00:00,lab02-g03 created by GitHub Classroom,0,TDD-II-22/lab02-g03,526949167,SystemVerilog,lab02-g03,56114,0,2022-08-22 05:46:06+00:00,[],None
408,https://github.com/rady121/Projects.git,2022-08-23 14:24:27+00:00,,0,rady121/Projects,528026301,SystemVerilog,Projects,1881,0,2022-08-23 14:28:35+00:00,[],None
409,https://github.com/sherif-omar111/Advanced-Peripheral-Bus-APB-_Protocol.git,2022-09-11 15:25:34+00:00,,0,sherif-omar111/Advanced-Peripheral-Bus-APB-_Protocol,535339362,SystemVerilog,Advanced-Peripheral-Bus-APB-_Protocol,298,0,2022-09-11 15:28:38+00:00,[],None
410,https://github.com/mm-mehran79/networkPacket_stuffOrData.git,2022-08-28 05:39:18+00:00,the module is also known as sigma delta,0,mm-mehran79/networkPacket_stuffOrData,529772817,SystemVerilog,networkPacket_stuffOrData,3191,0,2023-09-02 04:16:40+00:00,"['computer-network', 'fpga', 'systemverilog-hdl', 'xilinx-fpga', 'xilinx-vivado']",None
411,https://github.com/krunalbadlani/systemverilog_projects.git,2022-08-31 05:00:08+00:00,,0,krunalbadlani/systemverilog_projects,530941019,SystemVerilog,systemverilog_projects,11,0,2023-03-22 05:58:26+00:00,[],None
412,https://github.com/DilipKrishnappa/interface.git,2022-09-01 07:01:53+00:00,virtual interface,0,DilipKrishnappa/interface,531402356,SystemVerilog,interface,259,0,2022-09-12 16:37:03+00:00,[],None
413,https://github.com/vinay3991/vedic_adder_uvm_tb.git,2022-09-14 02:50:50+00:00,,0,vinay3991/vedic_adder_uvm_tb,536389827,SystemVerilog,vedic_adder_uvm_tb,4,0,2022-09-14 03:14:16+00:00,[],None
414,https://github.com/dinalg/Tetris-SystemVerilog.git,2022-09-14 16:18:49+00:00,,0,dinalg/Tetris-SystemVerilog,536663719,SystemVerilog,Tetris-SystemVerilog,2090,0,2022-10-14 16:03:29+00:00,[],None
415,https://github.com/zombie782/HMM_Hardware.git,2022-09-18 20:05:28+00:00,SystemVerilog implementation of the forward algorithm on HMMs. Format is Q0.32 (fixed point with 0 integer bits and 32 fractional bits). This will reasonably synthesize but I have not yet looked into how much time this hardware implementation saves over software.,0,zombie782/HMM_Hardware,538227366,SystemVerilog,HMM_Hardware,3,0,2022-09-18 20:06:27+00:00,[],None
416,https://github.com/carsonmiiller/eBike.git,2022-09-19 00:53:03+00:00,,0,carsonmiiller/eBike,538283863,SystemVerilog,eBike,30,0,2022-09-19 01:20:52+00:00,[],None
417,https://github.com/khgeorge45/WaterMelon1000.git,2022-06-25 08:42:46+00:00,,0,khgeorge45/WaterMelon1000,507259138,SystemVerilog,WaterMelon1000,1,0,2022-06-25 08:52:33+00:00,[],None
418,https://github.com/qianlinxyc/rst_uvc.git,2022-06-18 08:01:25+00:00,,0,qianlinxyc/rst_uvc,504781837,SystemVerilog,rst_uvc,1,0,2022-06-18 08:02:24+00:00,[],None
419,https://github.com/dawkrz13/censor-repo.git,2022-06-18 12:08:25+00:00,FPGA dedicated Bloom filter.,0,dawkrz13/censor-repo,504833401,SystemVerilog,censor-repo,17,0,2022-06-18 12:11:45+00:00,[],None
420,https://github.com/Phyteon/data_sniffer.git,2022-06-19 13:50:24+00:00,"Repository containing code for final project for course ""Dedicated Systems in Programmable Logic Devices""",0,Phyteon/data_sniffer,505123180,SystemVerilog,data_sniffer,24,0,2022-06-21 21:09:00+00:00,[],None
421,https://github.com/Leah1115/MIPS-CPU-design.git,2022-05-29 05:43:43+00:00,MIPS CPU design,0,Leah1115/MIPS-CPU-design,497501380,SystemVerilog,MIPS-CPU-design,2318,0,2022-05-29 05:47:58+00:00,[],None
422,https://github.com/ShamsElgohary/MultiMode-Counter.git,2022-05-27 17:45:47+00:00,,0,ShamsElgohary/MultiMode-Counter,497087508,SystemVerilog,MultiMode-Counter,375,0,2022-05-27 17:50:56+00:00,[],None
423,https://github.com/chrislo66/ASIC-Design-Project.git,2022-07-01 07:59:05+00:00,,0,chrislo66/ASIC-Design-Project,509369668,SystemVerilog,ASIC-Design-Project,51,0,2022-07-01 08:06:54+00:00,[],None
424,https://github.com/mariecla/document-fr.git,2022-06-12 12:47:35+00:00,,0,mariecla/document-fr,502614079,SystemVerilog,document-fr,0,0,2022-06-12 12:52:21+00:00,[],None
425,https://github.com/nickelpro/verilog-test.git,2022-06-14 15:06:33+00:00,,0,nickelpro/verilog-test,503408924,SystemVerilog,verilog-test,18,0,2022-06-14 15:09:59+00:00,[],None
426,https://github.com/c28504693/HW4-BCD.git,2022-06-11 12:18:30+00:00,,0,c28504693/HW4-BCD,502340043,SystemVerilog,HW4-BCD,1,0,2022-06-11 12:19:05+00:00,[],None
427,https://github.com/Noman-Nom/SV-paractice.git,2022-09-07 09:14:16+00:00,,0,Noman-Nom/SV-paractice,533691184,SystemVerilog,SV-paractice,2,0,2022-09-07 09:17:25+00:00,[],None
428,https://github.com/talamit999/LAB-1-EE---PINBALL-GAME.git,2022-09-13 09:22:22+00:00,,0,talamit999/LAB-1-EE---PINBALL-GAME,536049729,SystemVerilog,LAB-1-EE---PINBALL-GAME,79,0,2022-09-13 09:26:39+00:00,[],None
429,https://github.com/supleed2/apbDriver.git,2022-07-28 15:51:34+00:00,"Basic APB-compatible module designed for use with Verilator, but should work with any DPI-C compatible simulator.",0,supleed2/apbDriver,518907454,SystemVerilog,apbDriver,11,0,2024-01-19 04:24:47+00:00,"['apb', 'dpi-c', 'systemverilog', 'verilator']",https://api.github.com/licenses/apache-2.0
430,https://github.com/MEEPproject/ariane.git,2022-05-15 15:56:46+00:00,MEEP modifications over ariane,0,MEEPproject/ariane,492533798,SystemVerilog,ariane,31665,0,2022-07-26 01:57:59+00:00,[],
431,https://github.com/amichai-bd/rvc_playground.git,2022-06-07 14:11:13+00:00,RISCV Core - Designing a RISCV Core HW & simulation env.,0,amichai-bd/rvc_playground,500868568,SystemVerilog,rvc_playground,3807,0,2022-06-07 15:49:29+00:00,[],https://api.github.com/licenses/mit
432,https://github.com/zceemja/ucl_project_y3.git,2022-06-05 14:26:36+00:00,Performance characterisation of 8-bit RISC and OISC processor architectures,0,zceemja/ucl_project_y3,500119790,SystemVerilog,ucl_project_y3,15341,0,2022-06-05 14:28:21+00:00,[],None
433,https://github.com/ralfgad/divisor.git,2022-05-25 13:54:39+00:00,,0,ralfgad/divisor,496252832,SystemVerilog,divisor,14389,0,2022-06-07 17:07:26+00:00,[],None
434,https://github.com/Shaista087/Verilog.git,2022-05-27 10:36:02+00:00,,0,Shaista087/Verilog,496956456,SystemVerilog,Verilog,683,0,2022-05-28 00:56:20+00:00,[],None
435,https://github.com/dangalg/VerilogHW1.git,2022-05-29 18:06:08+00:00,,0,dangalg/VerilogHW1,497670244,SystemVerilog,VerilogHW1,573,0,2022-05-29 18:06:15+00:00,[],None
436,https://github.com/nettalee19/YAPP-Router---Cadence-UVM-Course.git,2022-07-05 12:41:45+00:00,,0,nettalee19/YAPP-Router---Cadence-UVM-Course,510731451,SystemVerilog,YAPP-Router---Cadence-UVM-Course,44,0,2022-07-05 12:41:51+00:00,[],None
437,https://github.com/qian-gu/dic_template.git,2022-07-04 09:49:23+00:00,Digital IC template project integrated with common opensource tools,0,qian-gu/dic_template,510300999,SystemVerilog,dic_template,25,0,2022-08-05 12:40:33+00:00,[],https://api.github.com/licenses/mit
438,https://github.com/chen-ian-rong/HW-2.git,2022-06-26 19:00:47+00:00,,0,chen-ian-rong/HW-2,507660423,SystemVerilog,HW-2,3,0,2022-06-26 19:07:15+00:00,[],None
439,https://github.com/a29712049/Four-person-voting-machine.git,2022-06-27 02:45:23+00:00,,0,a29712049/Four-person-voting-machine,507741381,SystemVerilog,Four-person-voting-machine,40,0,2022-06-27 02:45:45+00:00,[],None
440,https://github.com/edoardosignoroni/hftoks-eval.git,2022-06-29 19:09:14+00:00,High Frequency Tokenizer - Evaluation,1,edoardosignoroni/hftoks-eval,508815738,SystemVerilog,hftoks-eval,1108378,0,2022-11-01 13:45:41+00:00,"['nlp', 'tokenizer']",None
441,https://github.com/gary3123/-hw5.git,2022-05-15 11:20:23+00:00,,0,gary3123/-hw5,492465566,SystemVerilog,-hw5,2,0,2022-05-15 11:22:25+00:00,[],None
442,https://github.com/Abdo99-alt/Single-cycle-mips.git,2022-08-12 17:59:54+00:00,,0,Abdo99-alt/Single-cycle-mips,524180349,SystemVerilog,Single-cycle-mips,5,0,2022-08-12 18:02:05+00:00,[],https://api.github.com/licenses/mit
443,https://github.com/AlekssGit/sfp_test.git,2022-08-12 14:10:46+00:00,,1,AlekssGit/sfp_test,524111800,SystemVerilog,sfp_test,53016,0,2022-09-25 18:09:34+00:00,[],None
444,https://github.com/fpgaland/UVM.git,2022-08-13 02:21:43+00:00,,0,fpgaland/UVM,524277690,SystemVerilog,UVM,25,0,2022-08-14 08:28:30+00:00,[],https://api.github.com/licenses/mit
445,https://github.com/denSmashh/multi-cycle-mips-cpu.git,2022-07-29 20:10:18+00:00,"Multi cycle mips cpu from book H&H ""Digital design and computer architecture""",0,denSmashh/multi-cycle-mips-cpu,519337985,SystemVerilog,multi-cycle-mips-cpu,70,0,2022-07-29 23:11:38+00:00,[],None
446,https://github.com/sidhantp1906/FCFS_Arbiter_Design_And_Verification.git,2022-08-10 10:07:05+00:00,Design and verification of first come first serve arbiter,1,sidhantp1906/FCFS_Arbiter_Design_And_Verification,523292670,SystemVerilog,FCFS_Arbiter_Design_And_Verification,2028,0,2022-08-10 10:17:25+00:00,"['arbiter', 'systemverilog', 'uvm', 'verification', 'verilog']",https://api.github.com/licenses/apache-2.0
447,https://github.com/FzFz2000/comparing-multiplexers.git,2022-08-11 18:36:28+00:00,,0,FzFz2000/comparing-multiplexers,523830598,SystemVerilog,comparing-multiplexers,313,0,2022-10-25 14:31:10+00:00,[],None
448,https://github.com/haha12138138/build_a_RV.git,2022-05-22 11:32:47+00:00,,0,haha12138138/build_a_RV,495041133,SystemVerilog,build_a_RV,13,0,2022-05-22 11:41:37+00:00,[],None
449,https://github.com/rvxfahim/viterbi-2-1-4.git,2022-06-20 01:16:52+00:00,,0,rvxfahim/viterbi-2-1-4,505256659,SystemVerilog,viterbi-2-1-4,7766,0,2022-06-24 18:58:01+00:00,[],None
450,https://github.com/gary3123/hw_4.git,2022-06-11 16:38:36+00:00,,0,gary3123/hw_4,502402468,SystemVerilog,hw_4,2,0,2022-06-11 16:42:02+00:00,[],None
451,https://github.com/ClaytonJPayne/CacheRTL.git,2022-06-18 06:01:10+00:00,Repo for different cache-related RTL modules I'm working on,0,ClaytonJPayne/CacheRTL,504758625,SystemVerilog,CacheRTL,5,0,2022-06-18 06:02:51+00:00,[],None
452,https://github.com/jass-jass/System_Verilog.git,2022-06-22 08:46:01+00:00,,0,jass-jass/System_Verilog,506167224,SystemVerilog,System_Verilog,121,0,2022-06-22 09:53:03+00:00,[],None
453,https://github.com/MszBednarski/z0.git,2022-07-23 13:09:08+00:00,,0,MszBednarski/z0,517060877,SystemVerilog,z0,2,0,2022-07-24 10:49:58+00:00,[],None
454,https://github.com/DIPS6114/fifo_bfm_topology_makefile.git,2022-07-22 07:32:31+00:00,,0,DIPS6114/fifo_bfm_topology_makefile,516654601,SystemVerilog,fifo_bfm_topology_makefile,11,0,2022-07-22 07:51:41+00:00,[],None
455,https://github.com/Shwetapatil05/fifo_vip.git,2022-07-22 03:57:35+00:00,verification of fifo bfm,1,Shwetapatil05/fifo_vip,516602926,SystemVerilog,fifo_vip,191,0,2022-07-22 04:23:50+00:00,[],None
456,https://github.com/PRK-innerpeace/9bitProcessor.git,2022-07-20 13:28:18+00:00,,0,PRK-innerpeace/9bitProcessor,515993311,SystemVerilog,9bitProcessor,12276,0,2022-07-20 13:31:14+00:00,[],None
457,https://github.com/PaulManriquez/LW_Instruction_MIPS.git,2022-07-25 20:16:11+00:00,This is a data path of LW instruction based on MIPS architecture,0,PaulManriquez/LW_Instruction_MIPS,517807988,SystemVerilog,LW_Instruction_MIPS,537,0,2022-08-03 02:02:10+00:00,[],None
458,https://github.com/RazaSaleem/Projectpart1_DVE.git,2022-07-19 04:43:56+00:00,This repo contains layered test bench of AMBA AHB bus slave model the using systemverilog project part 1,0,RazaSaleem/Projectpart1_DVE,515437037,SystemVerilog,Projectpart1_DVE,33,0,2022-07-19 04:55:38+00:00,[],None
459,https://github.com/knhitesh/DPRAM---Packet_Generator-USB-.git,2022-07-19 06:10:37+00:00,,0,knhitesh/DPRAM---Packet_Generator-USB-,515457367,SystemVerilog,DPRAM---Packet_Generator-USB-,7,0,2022-07-19 07:32:30+00:00,[],None
460,https://github.com/YaMsoulm/amplifier.git,2022-07-09 07:31:49+00:00,,0,YaMsoulm/amplifier,512123181,SystemVerilog,amplifier,1,0,2022-07-09 13:23:18+00:00,[],None
461,https://github.com/Saadi118/Project_I-SAADI-.git,2022-07-15 14:51:11+00:00,AHB lite project part 1 done on EDA PLAYGROUND,0,Saadi118/Project_I-SAADI-,514306437,SystemVerilog,Project_I-SAADI-,10,0,2022-07-15 14:56:04+00:00,[],None
462,https://github.com/arjavjain21/VHDL-Pattern-Detector.git,2022-07-27 14:49:14+00:00,A pattern detector using VHDL which can be used to detect any given pattern/sequence of 1’s and 0’s and give the output accordingly,0,arjavjain21/VHDL-Pattern-Detector,518499330,SystemVerilog,VHDL-Pattern-Detector,1003,0,2022-07-27 14:50:37+00:00,[],None
463,https://github.com/AhsanAliUet/alu-using-only-one-adder.git,2022-09-12 16:51:40+00:00,"In this repository, an ALU (Arithmetic and logic unit) is made using one full adder which can add as well as subtract using that adder only",0,AhsanAliUet/alu-using-only-one-adder,535763852,SystemVerilog,alu-using-only-one-adder,42,0,2022-09-21 19:49:18+00:00,[],None
464,https://github.com/ECE4278/lab3.git,2022-09-20 10:46:46+00:00,,0,ECE4278/lab3,538937969,SystemVerilog,lab3,10,0,2022-09-20 10:52:16+00:00,[],None
465,https://github.com/kanuar/systemverilog_fulladder_with_ripplecarry.git,2022-09-20 10:22:48+00:00,,0,kanuar/systemverilog_fulladder_with_ripplecarry,538928747,SystemVerilog,systemverilog_fulladder_with_ripplecarry,3,0,2022-09-20 10:37:52+00:00,[],None
466,https://github.com/WazaAbdulkadir/APB-Protocol-Project-.git,2022-08-17 14:21:04+00:00,APB master with two slaves read and write operation,0,WazaAbdulkadir/APB-Protocol-Project-,525825902,SystemVerilog,APB-Protocol-Project-,61,0,2022-08-17 14:24:16+00:00,[],None
467,https://github.com/WEIhabi/habi_master_hw_vsd.git,2022-08-25 04:25:21+00:00,,0,WEIhabi/habi_master_hw_vsd,528692662,SystemVerilog,habi_master_hw_vsd,6980,0,2022-09-20 17:32:13+00:00,[],None
468,https://github.com/sarawiRTLDV/System-Verilog-Projects.git,2022-09-04 10:38:48+00:00,"Verification of Common Peripherals, Memories, and Bus Protocol",0,sarawiRTLDV/System-Verilog-Projects,532509012,SystemVerilog,System-Verilog-Projects,78,0,2022-09-04 10:48:50+00:00,[],None
469,https://github.com/Gopalsuthar2308/My_Github_exp.git,2022-08-03 06:12:28+00:00,First Github experiment ,1,Gopalsuthar2308/My_Github_exp,520759275,SystemVerilog,My_Github_exp,7056,0,2023-01-31 20:09:12+00:00,[],None
470,https://github.com/VenkataPruthviKrishna/test1.git,2022-08-25 13:10:27+00:00,,0,VenkataPruthviKrishna/test1,528856458,SystemVerilog,test1,39,0,2022-08-25 18:15:45+00:00,[],None
471,https://github.com/Heutlett/TEXT_PROCESSOR_ARM.git,2022-08-25 16:48:16+00:00,,0,Heutlett/TEXT_PROCESSOR_ARM,528938742,SystemVerilog,TEXT_PROCESSOR_ARM,280,0,2022-08-25 16:50:52+00:00,[],None
472,https://github.com/Aric5301/LSH-Project.git,2022-08-26 08:34:00+00:00,,0,Aric5301/LSH-Project,529178768,SystemVerilog,LSH-Project,4606,0,2023-01-22 19:45:22+00:00,[],None
473,https://github.com/vj-sananda/msim-python.git,2022-09-01 01:03:31+00:00,,0,vj-sananda/msim-python,531313539,SystemVerilog,msim-python,2,0,2022-09-01 01:47:50+00:00,[],None
474,https://github.com/Aditi-Dhibar/RAM-and-ROM-Design.git,2022-09-01 14:21:16+00:00,"Here I design single port RAM , dual port RAM and ROM",0,Aditi-Dhibar/RAM-and-ROM-Design,531552274,SystemVerilog,RAM-and-ROM-Design,159,0,2022-09-01 14:38:19+00:00,[],None
475,https://github.com/anmehta4/ece554_minilab3.git,2022-09-20 20:51:10+00:00,,0,anmehta4/ece554_minilab3,539187381,SystemVerilog,ece554_minilab3,4,0,2022-09-20 21:09:40+00:00,[],None
476,https://github.com/luophoe/SystemVerilog-projects.git,2022-09-22 21:33:16+00:00,,0,luophoe/SystemVerilog-projects,540177407,SystemVerilog,SystemVerilog-projects,469,0,2022-09-23 01:28:42+00:00,[],None
477,https://github.com/Adeen317/100_DaysofRTL_SystemVerilog.git,2022-09-08 09:34:41+00:00,,0,Adeen317/100_DaysofRTL_SystemVerilog,534142838,SystemVerilog,100_DaysofRTL_SystemVerilog,82,0,2023-07-28 20:51:59+00:00,[],None
478,https://github.com/dfantonio/UFRGS-ENG04461.git,2022-09-13 18:53:39+00:00,,0,dfantonio/UFRGS-ENG04461,536268145,SystemVerilog,UFRGS-ENG04461,4974,0,2022-10-14 16:18:37+00:00,[],None
479,https://github.com/riser44/GNN_Accelerator.git,2022-05-14 18:12:28+00:00,,0,riser44/GNN_Accelerator,492291950,SystemVerilog,GNN_Accelerator,9329,0,2022-05-14 18:16:54+00:00,[],None
480,https://github.com/John0b1000/ece2613_labs_DE10.git,2022-05-30 17:22:16+00:00,ECE 2613 Labs revised for DE10-Lite Hardware,0,John0b1000/ece2613_labs_DE10,498035758,SystemVerilog,ece2613_labs_DE10,28935,0,2022-08-13 15:37:49+00:00,[],None
481,https://github.com/JA-2023/CPE333_final.git,2022-05-21 23:22:13+00:00,Files for implementing a SPI interface for the OTTER MCU,0,JA-2023/CPE333_final,494915404,SystemVerilog,CPE333_final,1295,0,2022-05-24 03:30:54+00:00,[],None
482,https://github.com/abhishekkhare1998/sha-256-project.git,2022-05-22 00:38:49+00:00,,0,abhishekkhare1998/sha-256-project,494925584,SystemVerilog,sha-256-project,139,0,2022-07-20 07:42:57+00:00,[],None
483,https://github.com/hchou4/Casino_slots_game.git,2022-06-05 06:42:03+00:00,,0,hchou4/Casino_slots_game,500020903,SystemVerilog,Casino_slots_game,130,0,2022-06-06 05:32:17+00:00,[],None
484,https://github.com/padung99/Metrotek_LAB1.git,2022-06-14 22:55:59+00:00,,0,padung99/Metrotek_LAB1,503544517,SystemVerilog,Metrotek_LAB1,69,0,2022-06-14 22:57:55+00:00,[],None
485,https://github.com/AmrMohamed226/NLP-and-Machine-Translation-systems.git,2022-06-15 00:05:09+00:00,,0,AmrMohamed226/NLP-and-Machine-Translation-systems,503557704,SystemVerilog,NLP-and-Machine-Translation-systems,2165,0,2022-11-01 01:23:29+00:00,[],None
486,https://github.com/owlxiao/riscv-dataflow.git,2022-06-13 13:08:33+00:00,RISC-V Processor with Dataflow Extension,0,owlxiao/riscv-dataflow,502960998,SystemVerilog,riscv-dataflow,7,0,2022-06-28 13:15:55+00:00,[],None
487,https://github.com/Ivansquark/mca.git,2022-06-14 19:42:45+00:00,materials and sources of work on multichannel analyzer,0,Ivansquark/mca,503498088,SystemVerilog,mca,19702,0,2022-06-16 13:53:59+00:00,[],None
488,https://github.com/HandsomeKid666/HW5.git,2022-07-01 04:51:39+00:00,,0,HandsomeKid666/HW5,509324109,SystemVerilog,HW5,1,0,2022-07-01 05:04:22+00:00,[],None
489,https://github.com/wrblynch/bitcoin-hashing-algorithm.git,2022-06-24 20:57:26+00:00,,0,wrblynch/bitcoin-hashing-algorithm,507142329,SystemVerilog,bitcoin-hashing-algorithm,7,0,2022-06-24 20:58:45+00:00,[],None
490,https://github.com/c28504693/HW3-voter.git,2022-06-11 12:11:15+00:00,,0,c28504693/HW3-voter,502338396,SystemVerilog,HW3-voter,1,0,2022-06-11 12:12:27+00:00,[],None
491,https://github.com/kagani/TinyCore.git,2022-07-04 19:13:24+00:00,A MIPS-like processor written in SystemVerilog,0,kagani/TinyCore,510476848,SystemVerilog,TinyCore,8,0,2022-11-16 09:20:46+00:00,[],None
492,https://github.com/OrigiWang/ahb-ram-project.git,2022-07-07 10:24:45+00:00,ahb ram project,0,OrigiWang/ahb-ram-project,511481645,SystemVerilog,ahb-ram-project,8,0,2022-07-07 10:27:17+00:00,[],None
493,https://github.com/abrahamjdn/UVM-mips-single-cycle.git,2022-07-09 21:08:02+00:00,UVM mips single cycle files ,0,abrahamjdn/UVM-mips-single-cycle,512285953,SystemVerilog,UVM-mips-single-cycle,18,0,2022-07-09 21:13:47+00:00,[],None
494,https://github.com/abrahamjdn/UVM-mips-multicycle.git,2022-07-09 21:14:52+00:00,mips-multicycle verification using UVM ,0,abrahamjdn/UVM-mips-multicycle,512286968,SystemVerilog,UVM-mips-multicycle,15,0,2022-07-09 21:17:49+00:00,[],None
495,https://github.com/VuksaNed/VLSI.git,2022-07-09 15:16:36+00:00,,0,VuksaNed/VLSI,512217257,SystemVerilog,VLSI,131,0,2022-07-09 15:16:41+00:00,[],None
496,https://github.com/andrewbmccullough/ece474-vlsi-system-design.git,2022-07-12 04:24:31+00:00,ECE474 VLSI System Design,0,andrewbmccullough/ece474-vlsi-system-design,512997270,SystemVerilog,ece474-vlsi-system-design,691,0,2022-07-12 04:24:59+00:00,[],None
497,https://github.com/LyashenkoValeria/SPr430.git,2022-06-23 02:26:26+00:00,,0,LyashenkoValeria/SPr430,506471188,SystemVerilog,SPr430,172,0,2022-06-23 02:32:47+00:00,[],None
498,https://github.com/shakirsultan/Single-Cycle-RISC-V-Data-Path-and-Control-Logic.git,2022-06-16 13:08:47+00:00,,0,shakirsultan/Single-Cycle-RISC-V-Data-Path-and-Control-Logic,504160053,SystemVerilog,Single-Cycle-RISC-V-Data-Path-and-Control-Logic,5,0,2022-06-16 16:05:33+00:00,[],None
499,https://github.com/dinasmh/apb.git,2022-09-10 15:38:19+00:00,,0,dinasmh/apb,535041245,SystemVerilog,apb,14,0,2022-09-10 15:39:47+00:00,[],None
500,https://github.com/maxpinheiro/eece2323-lab0.git,2022-09-13 18:00:53+00:00,,0,maxpinheiro/eece2323-lab0,536249963,SystemVerilog,eece2323-lab0,5,0,2022-09-13 19:32:38+00:00,[],None
501,https://github.com/ikar298/Design-of-Error-Detection-and-Correction-Module-using-Hamming-Code-Technique.git,2022-08-25 07:56:21+00:00,,0,ikar298/Design-of-Error-Detection-and-Correction-Module-using-Hamming-Code-Technique,528750399,SystemVerilog,Design-of-Error-Detection-and-Correction-Module-using-Hamming-Code-Technique,32,0,2022-08-25 17:31:17+00:00,[],None
502,https://github.com/amichai-bd/smart_uart_playground.git,2022-08-26 07:38:53+00:00,A System Verilog project - accessing any memory map from Host to device (FPGA) using uart - without a CPU to control the uart traffic,0,amichai-bd/smart_uart_playground,529162433,SystemVerilog,smart_uart_playground,11523,0,2022-08-26 14:46:20+00:00,[],https://api.github.com/licenses/mit
503,https://github.com/Artem-Savin/Circuitry.git,2022-09-15 09:05:13+00:00,,0,Artem-Savin/Circuitry,536946009,SystemVerilog,Circuitry,4,0,2022-09-15 09:31:02+00:00,[],None
504,https://github.com/tharunenamala/kani-kani.git,2022-09-15 05:08:53+00:00,sarada,0,tharunenamala/kani-kani,536872375,SystemVerilog,kani-kani,25,0,2023-04-23 10:27:49+00:00,[],None
505,https://github.com/Heutlett/proyectogrupal1.git,2022-09-19 15:50:09+00:00,,0,Heutlett/proyectogrupal1,538578239,SystemVerilog,proyectogrupal1,200880,0,2023-04-18 19:43:41+00:00,[],None
506,https://github.com/barzamin/ece554_miniproject.git,2022-09-07 18:38:35+00:00,,0,barzamin/ece554_miniproject,533894331,SystemVerilog,ece554_miniproject,3120,0,2022-09-07 18:39:39+00:00,[],None
507,https://github.com/munjoon98/2022-COSE222-Third-Assignment.git,2022-09-03 07:59:18+00:00,Single_Cycle_CPU,0,munjoon98/2022-COSE222-Third-Assignment,532195231,SystemVerilog,2022-COSE222-Third-Assignment,6,0,2022-09-03 08:00:15+00:00,[],None
508,https://github.com/good4Ya/NRZ_CDR.git,2022-09-23 16:46:18+00:00,recorver remote clock form data which flips with remote clock,0,good4Ya/NRZ_CDR,540533682,SystemVerilog,NRZ_CDR,3,0,2022-09-27 15:26:17+00:00,[],None
509,https://github.com/s3722763/GBAEmulator.git,2022-08-31 12:03:51+00:00,,0,s3722763/GBAEmulator,531065618,SystemVerilog,GBAEmulator,212,0,2023-02-27 05:47:19+00:00,[],None
510,https://github.com/vsheung/Bacarrat.git,2022-08-28 22:33:14+00:00,"Programmed Bacarrat on the DE1-SoC, a design board built around an Altera System-on-Chip (SoC) FPGA.",0,vsheung/Bacarrat,529995404,SystemVerilog,Bacarrat,1534,0,2022-08-28 22:41:05+00:00,[],None
511,https://github.com/adinavale/Assertions.git,2022-08-27 19:01:28+00:00,EE 272 homework assignment,0,adinavale/Assertions,529673148,SystemVerilog,Assertions,2,0,2022-10-24 18:39:47+00:00,[],None
512,https://github.com/CynthiaLi1018/EE-371.git,2022-07-27 19:53:46+00:00,,0,CynthiaLi1018/EE-371,518593917,SystemVerilog,EE-371,31389,0,2022-07-27 20:01:03+00:00,[],None
513,https://github.com/JakobVokac/LNS_MAC_design.git,2022-08-08 21:33:25+00:00,,0,JakobVokac/LNS_MAC_design,522713597,SystemVerilog,LNS_MAC_design,3396,0,2022-08-08 21:34:53+00:00,[],https://api.github.com/licenses/mit
514,https://github.com/josuah/fpga-wishbone.git,2022-08-09 10:24:53+00:00,,0,josuah/fpga-wishbone,522901257,SystemVerilog,fpga-wishbone,232,0,2022-10-09 16:25:21+00:00,[],None
515,https://github.com/SunicYosen/sram.git,2022-08-01 08:53:18+00:00,sram model,0,SunicYosen/sram,520034338,SystemVerilog,sram,1,0,2022-08-01 08:59:37+00:00,[],None
516,https://github.com/Atm06/Project_Electronic_Lock-using-verilog.git,2022-08-02 04:06:21+00:00,,0,Atm06/Project_Electronic_Lock-using-verilog,520346133,SystemVerilog,Project_Electronic_Lock-using-verilog,6,0,2022-08-02 04:08:05+00:00,[],https://api.github.com/licenses/mit
517,https://github.com/Parretto/Scaler.git,2022-08-11 13:45:25+00:00,Video scaler,0,Parretto/Scaler,523739505,SystemVerilog,Scaler,45,0,2022-08-11 14:05:03+00:00,[],None
518,https://github.com/Nahla-Mustafa99/Multi-ModeCounter.git,2022-06-28 20:44:43+00:00,,0,Nahla-Mustafa99/Multi-ModeCounter,508448835,SystemVerilog,Multi-ModeCounter,8,0,2022-06-28 20:52:49+00:00,[],None
519,https://github.com/chen-ian-rong/HW-5.git,2022-06-26 19:10:20+00:00,,0,chen-ian-rong/HW-5,507662327,SystemVerilog,HW-5,2,0,2022-06-26 19:10:39+00:00,[],None
520,https://github.com/kmakmichael/ecpe_173.git,2022-07-01 23:34:39+00:00,,0,kmakmichael/ecpe_173,509613306,SystemVerilog,ecpe_173,53,0,2022-07-01 23:36:08+00:00,[],None
521,https://github.com/andrewb1999/calyx-axi-ex.git,2022-07-01 20:43:49+00:00,,0,andrewb1999/calyx-axi-ex,509584332,SystemVerilog,calyx-axi-ex,36,0,2022-07-01 20:44:47+00:00,[],None
522,https://github.com/alainlou/chipdev.git,2022-08-12 21:40:03+00:00,,0,alainlou/chipdev,524230988,SystemVerilog,chipdev,5,0,2022-08-12 21:53:33+00:00,[],None
523,https://github.com/gitoper/learngit.git,2022-08-05 04:01:59+00:00,,0,gitoper/learngit,521496980,SystemVerilog,learngit,5,0,2022-08-05 06:55:58+00:00,[],
524,https://github.com/zjed/SystemVerilog_DMA_Controller_Testbench.git,2022-07-09 01:05:14+00:00,,0,zjed/SystemVerilog_DMA_Controller_Testbench,512062720,,SystemVerilog_DMA_Controller_Testbench,12,0,2022-06-27 05:56:50+00:00,[],None
525,https://github.com/alexc0888/fourToSixteenBinaryDecoder.git,2022-07-30 08:01:08+00:00,Four to Sixteen Binary Decoder in System Verilog at the Gate Level,0,alexc0888/fourToSixteenBinaryDecoder,519455807,SystemVerilog,fourToSixteenBinaryDecoder,19,0,2022-07-30 08:01:28+00:00,[],None
526,https://github.com/mohammedsaber10/async_fifo.git,2022-07-31 23:10:42+00:00,,0,mohammedsaber10/async_fifo,519906592,SystemVerilog,async_fifo,14356,0,2022-08-05 20:44:07+00:00,[],None
527,https://github.com/Bhavanasandrala/try.git,2022-08-06 04:34:04+00:00,,0,Bhavanasandrala/try,521846920,SystemVerilog,try,359,0,2022-09-16 07:28:10+00:00,[],None
528,https://github.com/varghese-rahul/SystemVerilog_DMA_Controller_Testbench.git,2022-06-23 23:17:57+00:00,,0,varghese-rahul/SystemVerilog_DMA_Controller_Testbench,506817915,SystemVerilog,SystemVerilog_DMA_Controller_Testbench,12,0,2023-12-01 05:37:25+00:00,[],None
529,https://github.com/supleed2/axiTest.git,2022-09-12 16:27:42+00:00,AXI4-Lite compatible Driver module for use with Verilator and other DPI-C compatible simulators.,0,supleed2/axiTest,535754748,SystemVerilog,axiTest,9,0,2024-01-19 04:25:37+00:00,"['axi4-lite', 'systemverilog', 'verilator', 'work-in-progress']",https://api.github.com/licenses/apache-2.0
530,https://github.com/LinYuMachi/EncodeDecodeISA.git,2022-05-11 01:31:34+00:00,,0,LinYuMachi/EncodeDecodeISA,490916821,SystemVerilog,EncodeDecodeISA,18,0,2022-05-11 01:34:22+00:00,[],None
531,https://github.com/HieronZhang/project-v-open-beta-For-ECE4700J.git,2022-06-12 20:32:39+00:00,,2,HieronZhang/project-v-open-beta-For-ECE4700J,502721752,SystemVerilog,project-v-open-beta-For-ECE4700J,177,0,2022-06-13 00:00:21+00:00,[],None
532,https://github.com/felpsribeiro/acelerador-raiz-quadrada.git,2022-06-02 20:24:04+00:00,Aceleração de Algoritmo de Calculo de Raiz Quadrada,0,felpsribeiro/acelerador-raiz-quadrada,499279474,SystemVerilog,acelerador-raiz-quadrada,7,0,2022-06-02 20:37:54+00:00,[],None
533,https://github.com/geoneill12/OTTER_Multicycle_STM32_Programmer.git,2022-06-10 23:35:46+00:00,,0,geoneill12/OTTER_Multicycle_STM32_Programmer,502206443,SystemVerilog,OTTER_Multicycle_STM32_Programmer,4875,0,2022-06-10 23:41:41+00:00,[],None
534,https://github.com/ishmemon/EE-469-Computer-Architecture.git,2022-06-12 01:26:02+00:00,These are the projects I created for UW's EE 469 Course. The three labs consisted of implementing a pipelined ARM CPU using System Verilog.,0,ishmemon/EE-469-Computer-Architecture,502492288,SystemVerilog,EE-469-Computer-Architecture,39,0,2022-06-13 01:32:29+00:00,[],None
535,https://github.com/RehanEjaz/peripherals-fpga-design.git,2022-05-30 06:46:15+00:00,,0,RehanEjaz/peripherals-fpga-design,497821922,SystemVerilog,peripherals-fpga-design,70,0,2022-05-30 06:50:17+00:00,[],None
536,https://github.com/romerojhh/TheSnakeGame.git,2022-05-28 09:11:56+00:00,"This is a snake game that is implemented in SystemVerilog, simulated through DE1 board FPGA with GPIO as the led display",0,romerojhh/TheSnakeGame,497268485,SystemVerilog,TheSnakeGame,21,0,2022-05-28 09:16:26+00:00,[],https://api.github.com/licenses/mit
537,https://github.com/roberto967/Projetos_Circuitos_Logicos_2.git,2022-05-26 18:42:31+00:00,,0,roberto967/Projetos_Circuitos_Logicos_2,496734673,SystemVerilog,Projetos_Circuitos_Logicos_2,13764,0,2022-05-26 19:14:20+00:00,[],https://api.github.com/licenses/mit
538,https://github.com/ashleyjr/rv32i_peripheral.git,2022-05-22 22:42:56+00:00,,0,ashleyjr/rv32i_peripheral,495194216,SystemVerilog,rv32i_peripheral,71,0,2022-05-25 20:04:28+00:00,[],None
539,https://github.com/kenzhang82/git-submodule-demo.git,2022-05-29 10:14:32+00:00,,0,kenzhang82/git-submodule-demo,497554506,SystemVerilog,git-submodule-demo,1,0,2022-05-29 10:46:12+00:00,[],None
540,https://github.com/Richard-Voragen/Single-Cycle-ARM.git,2022-05-23 18:56:33+00:00,Code was done for an ECS 150 class and modified by me to add functionality.,0,Richard-Voragen/Single-Cycle-ARM,495537022,SystemVerilog,Single-Cycle-ARM,29,0,2022-05-23 19:00:16+00:00,[],None
541,https://github.com/boga-vidhath/8-bit-Unsigned-Division-Circuit.git,2022-06-07 16:37:00+00:00,,0,boga-vidhath/8-bit-Unsigned-Division-Circuit,500922621,SystemVerilog,8-bit-Unsigned-Division-Circuit,7,0,2022-06-08 16:14:13+00:00,[],None
542,https://github.com/ishfaqahmed29/uvm_xor_tb.git,2022-06-04 01:10:55+00:00,UVCs for an XOR RTL,0,ishfaqahmed29/uvm_xor_tb,499692436,SystemVerilog,uvm_xor_tb,4,0,2022-06-04 01:42:57+00:00,[],None
543,https://github.com/Faisalawan11/Project-1-AHB-LITE-.git,2022-07-19 08:32:14+00:00,,0,Faisalawan11/Project-1-AHB-LITE-,515500420,SystemVerilog,Project-1-AHB-LITE-,15,0,2022-07-19 08:32:58+00:00,[],None
544,https://github.com/Foh-k/AKARIN_RISCV.git,2022-08-07 05:52:03+00:00,akarin core design written by RISC-V,0,Foh-k/AKARIN_RISCV,522128039,SystemVerilog,AKARIN_RISCV,49,0,2022-09-09 12:04:51+00:00,[],None
545,https://github.com/ryan-trampe/verification_proj.git,2022-08-04 04:46:27+00:00,,0,ryan-trampe/verification_proj,521125798,SystemVerilog,verification_proj,123,0,2022-08-04 04:47:59+00:00,[],None
546,https://github.com/Bryukvina/Risc_v.git,2022-08-02 14:05:27+00:00,,0,Bryukvina/Risc_v,520523047,SystemVerilog,Risc_v,11,0,2022-08-02 14:09:17+00:00,[],None
547,https://github.com/PaulManriquez/MIPS_FULL_PROCESSOR_MONOCYCLE.git,2022-08-03 03:07:28+00:00,,0,PaulManriquez/MIPS_FULL_PROCESSOR_MONOCYCLE,520720360,SystemVerilog,MIPS_FULL_PROCESSOR_MONOCYCLE,252,0,2022-08-03 03:09:34+00:00,[],None
548,https://github.com/adnanashraf17501/Systemverilog-Bootcamp.git,2022-08-08 11:45:11+00:00,This a Systemverilog Bootcamp Repo,0,adnanashraf17501/Systemverilog-Bootcamp,522526220,SystemVerilog,Systemverilog-Bootcamp,11,0,2022-08-08 11:50:27+00:00,[],None
549,https://github.com/RazaSaleem/DV-Essentials-Trianing.git,2022-08-07 13:13:57+00:00,,0,RazaSaleem/DV-Essentials-Trianing,522217141,SystemVerilog,DV-Essentials-Trianing,63,0,2022-08-07 13:59:19+00:00,[],None
550,https://github.com/Howard-121/Computer_Architecture_I.git,2022-06-29 16:33:23+00:00,,0,Howard-121/Computer_Architecture_I,508769096,SystemVerilog,Computer_Architecture_I,3606,0,2022-06-29 16:47:23+00:00,[],None
551,https://github.com/vagrant313/HDLpractice.git,2022-07-02 09:34:34+00:00,Prasctice HDL to design efficient modules,0,vagrant313/HDLpractice,509713947,SystemVerilog,HDLpractice,12,0,2022-07-07 07:27:57+00:00,[],None
552,https://github.com/MicroGrit/grm.git,2022-07-02 01:43:58+00:00,Generate UVM Register Model,0,MicroGrit/grm,509631106,SystemVerilog,grm,28,0,2022-07-03 15:20:32+00:00,[],None
553,https://github.com/Me-RajatChaudhary/100DaysOfRTL.git,2022-08-12 13:25:58+00:00,,0,Me-RajatChaudhary/100DaysOfRTL,524097435,SystemVerilog,100DaysOfRTL,141,0,2022-08-18 18:05:08+00:00,[],None
554,https://github.com/visionvlsi/sv1.git,2022-06-14 13:01:57+00:00,,0,visionvlsi/sv1,503362154,SystemVerilog,sv1,39,0,2022-07-03 07:03:38+00:00,[],None
555,https://github.com/CurtisFod/DES.git,2022-06-21 01:55:52+00:00,"This is a working Data Encryption Standard that I designed In SystemVerilog. It include the DES, a DO file to run it in ModelSim, a test bench and a file of test vectors.",0,CurtisFod/DES,505656206,SystemVerilog,DES,13,0,2022-06-21 02:01:13+00:00,[],https://api.github.com/licenses/mit
556,https://github.com/nkjenkin/arm-cpu-5stage.git,2022-08-02 21:28:04+00:00,,0,nkjenkin/arm-cpu-5stage,520654454,SystemVerilog,arm-cpu-5stage,22,0,2022-08-02 21:29:39+00:00,[],None
557,https://github.com/liangcha1980/liangcha1980.git,2022-07-26 04:05:20+00:00,Config files for my GitHub profile.,0,liangcha1980/liangcha1980,517907547,SystemVerilog,liangcha1980,4,0,2022-07-26 04:07:37+00:00,"['config', 'github-config']",None
558,https://github.com/mauer4/Personal-Project-Verilog-CLOCK.git,2022-07-08 06:53:22+00:00,"This project was a nice idea I had to build a digital logic clock on the DE1-SOC FPGA, while practicing System-verilog, Asynchronous design, and advanced debugging techniques",0,mauer4/Personal-Project-Verilog-CLOCK,511793998,SystemVerilog,Personal-Project-Verilog-CLOCK,36642,0,2022-07-20 21:57:48+00:00,"['digital-logic', 'fpga', 'hardware-design', 'modelsim', 'quartus', 'system-verilog', 'verilog', 'verilog-testbenches']",None
559,https://github.com/aastha0603/round_robin_arbiter.git,2022-07-14 08:31:15+00:00,,0,aastha0603/round_robin_arbiter,513820826,SystemVerilog,round_robin_arbiter,2,0,2022-07-14 08:37:24+00:00,[],None
560,https://github.com/krzpch/SDwUP_Projekt.git,2022-06-24 13:14:43+00:00,,0,krzpch/SDwUP_Projekt,507016237,SystemVerilog,SDwUP_Projekt,89,0,2022-06-24 15:09:30+00:00,[],None
561,https://github.com/ZeroMips/zeromips-logic.git,2022-07-11 20:07:46+00:00,,0,ZeroMips/zeromips-logic,512894525,SystemVerilog,zeromips-logic,8,0,2022-07-11 20:11:27+00:00,[],None
562,https://github.com/poorvi01w/Adder-cum-Subtractor.git,2022-07-14 14:43:34+00:00,,0,poorvi01w/Adder-cum-Subtractor,513938379,SystemVerilog,Adder-cum-Subtractor,1,0,2022-07-14 14:44:21+00:00,[],None
563,https://github.com/jayeshsuyal/whishbone-memory.git,2022-09-08 18:24:52+00:00,,0,jayeshsuyal/whishbone-memory,534342457,SystemVerilog,whishbone-memory,3,0,2022-09-08 18:33:40+00:00,[],None
564,https://github.com/prajwal0718/FIFO_Layered_TB.git,2022-09-08 17:32:00+00:00,,0,prajwal0718/FIFO_Layered_TB,534322668,SystemVerilog,FIFO_Layered_TB,7,0,2022-09-08 17:32:23+00:00,[],https://api.github.com/licenses/mit
565,https://github.com/meghnamandava/CS534-Project.git,2022-09-11 15:30:18+00:00,,0,meghnamandava/CS534-Project,535340713,SystemVerilog,CS534-Project,30,0,2022-11-21 01:53:57+00:00,[],None
566,https://github.com/bguan2022/HDL_Templates.git,2022-09-17 22:57:08+00:00,,0,bguan2022/HDL_Templates,537949124,SystemVerilog,HDL_Templates,1,0,2022-09-17 23:15:22+00:00,[],None
567,https://github.com/lazhero/Lab3TallerDigitales.git,2022-08-24 22:03:43+00:00,"Laboratorio Numero 3, curso de diseño digital. ",0,lazhero/Lab3TallerDigitales,528608702,SystemVerilog,Lab3TallerDigitales,77,0,2022-08-24 23:49:36+00:00,[],None
568,https://github.com/rijegaro287/DigitalDesignLab.git,2022-08-24 20:18:07+00:00,,0,rijegaro287/DigitalDesignLab,528580965,SystemVerilog,DigitalDesignLab,19288,0,2023-01-17 02:14:57+00:00,[],None
569,https://github.com/RuihongY/verilog_sample_ex.git,2022-08-27 08:59:50+00:00,,0,RuihongY/verilog_sample_ex,529533437,SystemVerilog,verilog_sample_ex,1,0,2022-08-27 09:01:18+00:00,[],None
570,https://github.com/clarksyd18/ECE551-Project.git,2022-09-05 20:01:24+00:00,,0,clarksyd18/ECE551-Project,533043120,SystemVerilog,ECE551-Project,3848,0,2022-09-05 20:09:37+00:00,[],https://api.github.com/licenses/mit
571,https://github.com/kiheon1116/Compressor.git,2022-09-07 06:37:32+00:00,ready random signal complete,0,kiheon1116/Compressor,533638774,SystemVerilog,Compressor,5663,0,2022-09-07 06:39:33+00:00,[],None
572,https://github.com/bienkuba/Projekt_cvlsi.git,2022-08-22 18:18:08+00:00,,1,bienkuba/Projekt_cvlsi,527683023,SystemVerilog,Projekt_cvlsi,91,0,2022-08-22 18:18:42+00:00,[],None
573,https://github.com/audiocx/labs-inf245.git,2022-09-22 16:45:23+00:00,Laboratorios de la asignatura Arquitectura de computadores,0,audiocx/labs-inf245,540077597,SystemVerilog,labs-inf245,3112,0,2022-09-22 16:45:32+00:00,[],None
574,https://github.com/DylanKennyBoland/mem_block_APB_IF.git,2022-09-03 16:45:01+00:00,,0,DylanKennyBoland/mem_block_APB_IF,532318156,SystemVerilog,mem_block_APB_IF,304,0,2022-09-03 16:51:27+00:00,[],None
575,https://github.com/piyushagrawal4578/control-flow.git,2022-09-02 17:23:39+00:00,,0,piyushagrawal4578/control-flow,532018114,SystemVerilog,control-flow,134,0,2022-09-05 17:34:50+00:00,[],None
576,https://github.com/leyawels/verilog.git,2022-09-16 09:15:03+00:00,practice codes,0,leyawels/verilog,537385909,SystemVerilog,verilog,2,0,2022-09-16 09:17:03+00:00,[],None
577,https://github.com/allisonseigler/ece554_miniproject5.git,2022-09-22 18:10:07+00:00,,1,allisonseigler/ece554_miniproject5,540110600,SystemVerilog,ece554_miniproject5,2703,0,2022-09-27 20:29:38+00:00,[],None
578,https://github.com/JustinCWeiler/Verilog-Playground.git,2022-05-20 07:50:09+00:00,,0,JustinCWeiler/Verilog-Playground,494371241,SystemVerilog,Verilog-Playground,38,0,2022-05-31 07:25:55+00:00,[],https://api.github.com/licenses/gpl-3.0
579,https://github.com/hthanh2712/MasterMind-GuessingGame.git,2022-05-13 03:46:09+00:00,Final academic project using HDL,0,hthanh2712/MasterMind-GuessingGame,491747721,SystemVerilog,MasterMind-GuessingGame,9,0,2023-01-28 00:50:31+00:00,[],None
580,https://github.com/svhum/ltc2308-axi.git,2022-05-13 03:02:14+00:00,,0,svhum/ltc2308-axi,491738871,SystemVerilog,ltc2308-axi,2908,0,2022-05-13 03:17:34+00:00,[],None
581,https://github.com/himanshu5-prog/verif-env-beta-arch.git,2022-05-25 05:29:09+00:00,Verification environment for beta architecture processor,0,himanshu5-prog/verif-env-beta-arch,496094550,SystemVerilog,verif-env-beta-arch,10,0,2022-05-25 05:48:23+00:00,[],None
582,https://github.com/BuminK1907/RISC-V-Tabanli-Islemci-Tasarimi.git,2022-05-18 11:23:08+00:00,,0,BuminK1907/RISC-V-Tabanli-Islemci-Tasarimi,493632231,SystemVerilog,RISC-V-Tabanli-Islemci-Tasarimi,1792,0,2022-05-18 11:24:30+00:00,[],None
583,https://github.com/denSmashh/single-cycle-mips-cpu.git,2022-07-10 09:17:02+00:00,"Single cycle mips cpu from book H&H ""Digital design and computer architecture""",0,denSmashh/single-cycle-mips-cpu,512392098,SystemVerilog,single-cycle-mips-cpu,8,0,2022-07-10 09:19:04+00:00,[],None
584,https://github.com/YehorKrapovnytskyi/envelope_approximation.git,2022-07-09 19:26:52+00:00,Envelope approximation module for SDR projects,0,YehorKrapovnytskyi/envelope_approximation,512268885,SystemVerilog,envelope_approximation,37661,0,2022-07-09 22:26:20+00:00,[],https://api.github.com/licenses/mit
585,https://github.com/dkim1235/EmbeddedJourney.git,2022-06-22 21:17:50+00:00,"This is my Embedded systems Digital Design Journey. After taking machine learning classes, and learning software engineering, I've realized that my heart was always in hardware. Though hardware will always have pieces of ML/SWE, it is a different skillset that bridges the real world and the Meta. ",0,dkim1235/EmbeddedJourney,506408657,SystemVerilog,EmbeddedJourney,1690,0,2022-06-23 20:12:35+00:00,[],None
586,https://github.com/torochashu/jtag-base.git,2022-06-24 20:01:22+00:00,Control and Status Register (CSR) subsystem accessible through JTAG,1,torochashu/jtag-base,507130227,SystemVerilog,jtag-base,17,0,2022-06-24 20:58:16+00:00,"['fpga', 'jtag', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
587,https://github.com/Khaled-Tarek-Abdelfattah/Multimode_Counter.git,2022-07-31 17:16:53+00:00,system Verilog multi mode counter with it's Testbench,0,Khaled-Tarek-Abdelfattah/Multimode_Counter,519840178,SystemVerilog,Multimode_Counter,2,0,2022-07-31 17:38:46+00:00,[],None
588,https://github.com/hxfabc2012/uvm_gen-1.git,2022-08-06 02:06:09+00:00,UVM Generator+Template Suite - Moore.io Core Collection,0,hxfabc2012/uvm_gen-1,521822897,,uvm_gen-1,2336,0,2022-08-03 18:46:15+00:00,[],None
589,https://github.com/FarukTK/Project-SHA-256-Blockchain-Bitcoin-Hashing.git,2022-08-07 04:12:36+00:00,Private Project,0,FarukTK/Project-SHA-256-Blockchain-Bitcoin-Hashing,522113207,SystemVerilog,Project-SHA-256-Blockchain-Bitcoin-Hashing,969,0,2022-12-10 08:23:16+00:00,[],None
590,https://github.com/avishekchoudhary/Hex_keypad.git,2022-07-18 21:41:11+00:00,,0,avishekchoudhary/Hex_keypad,515349489,SystemVerilog,Hex_keypad,49,0,2022-07-18 21:51:12+00:00,[],https://api.github.com/licenses/mit
591,https://github.com/sofiwiwiwi/2022_01-Arqui.git,2022-07-29 00:35:05+00:00,,1,sofiwiwiwi/2022_01-Arqui,519032705,SystemVerilog,2022_01-Arqui,7407,0,2022-07-29 00:39:36+00:00,[],None
592,https://github.com/qasimnaeem364/demos.git,2022-07-26 04:50:51+00:00,it includes systemVerilog code practices.,0,qasimnaeem364/demos,517916931,SystemVerilog,demos,68,0,2022-07-26 04:55:17+00:00,[],https://api.github.com/licenses/gpl-3.0
593,https://github.com/Archit286/UART.git,2022-07-28 17:26:09+00:00,Verilog Design for transmitter and receiver for UART communication,0,Archit286/UART,518936393,SystemVerilog,UART,10,0,2023-07-18 16:45:40+00:00,[],None
594,https://github.com/GPericone/Simple-Asymmetric-Encryption-Algorithm.git,2022-08-17 15:54:29+00:00,"Hardware implementation of an asymmetric encryption algorithm in SystemVerilog, with analysis, synthesis and fitting performed on Cyclon V FPGA.",0,GPericone/Simple-Asymmetric-Encryption-Algorithm,525861574,SystemVerilog,Simple-Asymmetric-Encryption-Algorithm,7853,0,2023-01-12 17:43:24+00:00,[],None
595,https://github.com/NuwanUdara/System-Verilog-examples.git,2022-08-03 18:04:34+00:00,Sample Verilog codes.,0,NuwanUdara/System-Verilog-examples,520984046,SystemVerilog,System-Verilog-examples,4,0,2022-08-03 18:10:10+00:00,[],None
596,https://github.com/PaulManriquez/Register_Transfer.git,2022-08-03 03:01:05+00:00,,0,PaulManriquez/Register_Transfer,520719031,SystemVerilog,Register_Transfer,78,0,2022-08-03 03:03:09+00:00,[],None
597,https://github.com/padung99/Metrotek_LAB3.git,2022-08-02 10:35:01+00:00,,0,padung99/Metrotek_LAB3,520453790,SystemVerilog,Metrotek_LAB3,383,0,2022-08-02 10:37:01+00:00,[],None
598,https://github.com/chen-ian-rong/HW-4.git,2022-06-26 19:09:00+00:00,,0,chen-ian-rong/HW-4,507662065,SystemVerilog,HW-4,1,0,2022-06-26 19:09:29+00:00,[],None
599,https://github.com/taylorkcantalice/Projetos_Quartus.git,2022-06-28 14:57:00+00:00,Exercícios resolvidos durante a disciplina de Circuitos Lógicos II 2021.2,0,taylorkcantalice/Projetos_Quartus,508344227,SystemVerilog,Projetos_Quartus,66281,0,2022-06-28 15:02:14+00:00,[],None
600,https://github.com/ArshMarsh/RISC.git,2022-05-23 15:11:52+00:00,,0,ArshMarsh/RISC,495462179,SystemVerilog,RISC,13,0,2022-05-23 15:18:31+00:00,[],None
601,https://github.com/YassAje/cva6-softcore-contest-Riscetmorty-unistra.git,2022-05-24 19:59:34+00:00,,0,YassAje/cva6-softcore-contest-Riscetmorty-unistra,495970194,SystemVerilog,cva6-softcore-contest-Riscetmorty-unistra,20465,0,2022-05-24 21:09:35+00:00,[],
602,https://github.com/Darcywantloli/PRPG.git,2022-06-11 11:25:39+00:00,,0,Darcywantloli/PRPG,502328626,SystemVerilog,PRPG,3,0,2022-06-11 11:26:28+00:00,[],None
603,https://github.com/TatshSiow/HW5.git,2022-06-11 04:56:49+00:00,,0,TatshSiow/HW5,502253561,SystemVerilog,HW5,2,0,2022-06-11 05:02:16+00:00,[],None
604,https://github.com/nettalee19/Round-Robin-Arbiter.git,2022-06-23 11:27:12+00:00,,0,nettalee19/Round-Robin-Arbiter,506611926,SystemVerilog,Round-Robin-Arbiter,17,0,2022-06-23 11:27:19+00:00,[],None
605,https://github.com/sohanchatterjee06/apbProtocol.git,2022-07-13 16:11:02+00:00,,0,sohanchatterjee06/apbProtocol,513588841,SystemVerilog,apbProtocol,26,0,2022-07-13 17:56:00+00:00,[],None
606,https://github.com/GhulamMustafa9/Cache_Controller_Randomize-transactions-testbench.git,2022-05-19 13:18:18+00:00,DirectMapped Cache Controller,0,GhulamMustafa9/Cache_Controller_Randomize-transactions-testbench,494079413,SystemVerilog,Cache_Controller_Randomize-transactions-testbench,686,0,2022-05-19 21:07:25+00:00,[],None
607,https://github.com/acmpesuecc/aes-128-sysverilog-riscv.git,2022-06-08 05:06:22+00:00,AES-128 block written in SystemVerilog,8,acmpesuecc/aes-128-sysverilog-riscv,501107480,SystemVerilog,aes-128-sysverilog-riscv,8,0,2023-10-13 13:18:49+00:00,['hacktoberfest'],https://api.github.com/licenses/mit
608,https://github.com/HSIAOYEUCHERN/HW5.git,2022-06-13 03:12:56+00:00,,0,HSIAOYEUCHERN/HW5,502789971,SystemVerilog,HW5,3,0,2022-06-13 03:17:37+00:00,[],None
609,https://github.com/KuiHouLiao/HW5.git,2022-06-13 01:56:06+00:00,,0,KuiHouLiao/HW5,502774384,SystemVerilog,HW5,2,0,2022-06-13 01:57:36+00:00,[],None
610,https://github.com/obogevik/approximate_multiplication_for_DNN.git,2022-06-15 21:07:17+00:00,"My work on approximate multiplication, created as part of my master's thesis.",0,obogevik/approximate_multiplication_for_DNN,503922398,SystemVerilog,approximate_multiplication_for_DNN,15,0,2022-06-29 21:00:56+00:00,[],https://api.github.com/licenses/mit
611,https://github.com/gostbit/mianshi_project.git,2022-06-03 12:50:22+00:00,,0,gostbit/mianshi_project,499509891,SystemVerilog,mianshi_project,106,0,2022-06-03 12:57:25+00:00,[],None
612,https://github.com/seongjae20/Security_System.git,2022-06-07 03:57:41+00:00,,0,seongjae20/Security_System,500682365,SystemVerilog,Security_System,404,0,2022-06-07 03:58:16+00:00,[],None
613,https://github.com/31415pi/PSU_ECE586_FinalProject.git,2022-08-13 01:41:26+00:00,,0,31415pi/PSU_ECE586_FinalProject,524270593,SystemVerilog,PSU_ECE586_FinalProject,1063,0,2022-08-13 01:46:12+00:00,[],None
614,https://github.com/NoahHanks/BYU_ECEN323.git,2022-09-20 21:43:36+00:00,BYU ECEN 323,0,NoahHanks/BYU_ECEN323,539202022,SystemVerilog,BYU_ECEN323,43660,0,2022-09-20 21:46:10+00:00,[],None
615,https://github.com/VuGal/arithmetic_codec.git,2022-09-21 00:44:59+00:00,,0,VuGal/arithmetic_codec,539244918,SystemVerilog,arithmetic_codec,3504,0,2022-09-22 00:25:38+00:00,[],None
616,https://github.com/tmct-web/basic_uart_tmct.git,2022-09-19 03:34:39+00:00,Basic UART interface module written in System Verilog (Real FPGA proven),0,tmct-web/basic_uart_tmct,538320752,SystemVerilog,basic_uart_tmct,9,0,2022-10-08 13:29:29+00:00,"['basic-uart', 'fpga', 'simple-uart', 'verilog']",https://api.github.com/licenses/bsd-3-clause
617,https://github.com/07yhxiaxy/ece554_miniprojects.git,2022-09-21 03:28:30+00:00,,0,07yhxiaxy/ece554_miniprojects,539287969,SystemVerilog,ece554_miniprojects,2294,0,2022-09-21 04:15:49+00:00,[],None
618,https://github.com/recepgemalmaz/BLM-202-RISC-V-islemci-main.git,2022-09-03 13:08:38+00:00,,0,recepgemalmaz/BLM-202-RISC-V-islemci-main,532263293,SystemVerilog,BLM-202-RISC-V-islemci-main,3756,0,2022-09-03 13:31:27+00:00,[],None
619,https://github.com/minecraftdixit/protocols.git,2022-09-02 12:36:13+00:00,,0,minecraftdixit/protocols,531919212,SystemVerilog,protocols,16,0,2022-09-02 12:37:22+00:00,[],None
620,https://github.com/nithinbhargav007/SystemVerilog.git,2022-08-15 06:26:35+00:00,,0,nithinbhargav007/SystemVerilog,524877974,SystemVerilog,SystemVerilog,53,0,2022-08-15 06:26:41+00:00,[],None
621,https://github.com/astuaTEC/sastua_computer_architecture_1_2022.git,2022-08-19 21:59:07+00:00,Repository for the Computer Architecture 1 course.,0,astuaTEC/sastua_computer_architecture_1_2022,526762298,SystemVerilog,sastua_computer_architecture_1_2022,466471,0,2023-06-09 02:22:15+00:00,[],None
622,https://github.com/parashur21/Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier..git,2022-08-25 17:16:13+00:00,,0,parashur21/Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier.,528948128,SystemVerilog,Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier.,35,0,2022-08-25 18:10:40+00:00,[],None
623,https://github.com/ikar298/Memory-Controller.git,2022-08-25 07:46:21+00:00,Design of memory controller : Verilog HDL and testbench,0,ikar298/Memory-Controller,528747320,SystemVerilog,Memory-Controller,77,0,2022-08-25 17:32:41+00:00,[],None
624,https://github.com/shwetamutalikdesai/ADLV.git,2022-09-01 11:12:15+00:00,,0,shwetamutalikdesai/ADLV,531483262,SystemVerilog,ADLV,37,0,2022-09-01 11:18:42+00:00,[],None
625,https://github.com/Sam-0403/2022Fall_DCLab.git,2022-09-13 12:23:12+00:00,,0,Sam-0403/2022Fall_DCLab,536113408,SystemVerilog,2022Fall_DCLab,475,0,2022-09-13 13:20:17+00:00,[],None
626,https://github.com/utkarshsarbahi1998/Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD1.git,2022-08-15 16:05:53+00:00,Intel Quartus Prime ModelSim SystemVerilog Text Files ADD1,0,utkarshsarbahi1998/Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD1,525052194,SystemVerilog,Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD1,23,0,2022-08-15 16:15:42+00:00,[],None
627,https://github.com/utkarshsarbahi1998/Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD2.git,2022-08-15 17:32:26+00:00,Intel Quartus Prime ModelSim SystemVerilog Text Files ADD2,0,utkarshsarbahi1998/Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD2,525078877,SystemVerilog,Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD2,32,0,2022-08-15 18:08:55+00:00,[],None
628,https://github.com/masonadams25/Booth_R4_Encoding_Module.git,2022-08-24 02:56:01+00:00,,0,masonadams25/Booth_R4_Encoding_Module,528243201,SystemVerilog,Booth_R4_Encoding_Module,29,0,2022-08-24 02:57:05+00:00,[],None
629,https://github.com/riser44/AXI.git,2022-08-24 20:48:59+00:00,,0,riser44/AXI,528589701,SystemVerilog,AXI,4980,0,2022-08-24 20:51:35+00:00,[],
630,https://github.com/BinaryLust/pipelined-fpu.git,2022-09-24 08:17:33+00:00,,0,BinaryLust/pipelined-fpu,540757820,SystemVerilog,pipelined-fpu,113,0,2022-09-24 08:17:41+00:00,[],None
631,https://github.com/1eethink/KU-Computer_Architecture.git,2022-07-08 07:28:01+00:00,Korea University / Computer Architecture,0,1eethink/KU-Computer_Architecture,511803784,SystemVerilog,KU-Computer_Architecture,929,0,2022-07-08 07:29:00+00:00,[],None
632,https://github.com/Xuchaku/scr1.git,2022-06-09 11:28:55+00:00,,0,Xuchaku/scr1,501624536,SystemVerilog,scr1,5029,0,2022-06-09 11:31:15+00:00,[],
633,https://github.com/Dileon44/Mechatronic-module.git,2022-06-14 13:34:47+00:00,,0,Dileon44/Mechatronic-module,503374162,SystemVerilog,Mechatronic-module,33,0,2022-06-14 13:58:00+00:00,[],None
634,https://github.com/yanlin0526/HW5.git,2022-05-16 03:09:02+00:00,,0,yanlin0526/HW5,492667249,SystemVerilog,HW5,1,0,2022-05-16 03:26:20+00:00,[],None
635,https://github.com/Cagin-karatas/CS223-Single-Cycle-Processor.git,2022-05-12 14:52:12+00:00,,0,Cagin-karatas/CS223-Single-Cycle-Processor,491556841,SystemVerilog,CS223-Single-Cycle-Processor,6,0,2022-05-12 14:53:29+00:00,[],None
636,https://github.com/GhulamMustafa9/Cache_Controller_Environment-test-topTestbench.git,2022-05-19 17:44:04+00:00,DirectMapped Cache Controller,0,GhulamMustafa9/Cache_Controller_Environment-test-topTestbench,494172833,SystemVerilog,Cache_Controller_Environment-test-topTestbench,2236,0,2022-05-23 20:17:38+00:00,[],None
637,https://github.com/MSaqi/System_verilog_coding.git,2022-06-28 13:40:27+00:00,SYSTEM_verilog simple coding styles with testbenches..,0,MSaqi/System_verilog_coding,508315145,SystemVerilog,System_verilog_coding,826,0,2022-06-28 13:50:08+00:00,[],None
638,https://github.com/Johann-Schmid/BCDcounter.git,2022-06-23 15:23:01+00:00,BCD forward and backward counter under Vivado,0,Johann-Schmid/BCDcounter,506692350,SystemVerilog,BCDcounter,98,0,2022-06-23 15:23:46+00:00,[],None
639,https://github.com/kevinpinto98/100_days_of_RTL.git,2022-06-21 15:47:39+00:00,100 days RTL challenge,0,kevinpinto98/100_days_of_RTL,505907579,SystemVerilog,100_days_of_RTL,74,0,2022-12-06 17:38:05+00:00,[],None
640,https://github.com/albingomes/async_fifo.git,2022-06-27 04:14:21+00:00,Asynchronous FIFO (CDC FIFO),0,albingomes/async_fifo,507759203,SystemVerilog,async_fifo,5,0,2022-06-27 04:45:52+00:00,[],None
641,https://github.com/AmanPrakash09/Baccarat-Gambling-Game---Simple-Datapaths-and-FSM.git,2022-07-05 21:13:59+00:00,Two-player gambling game that relies on random cards drawn from a deck. Design consists of simple datapaths and an FSM to control the game. The cards drawn and score of each player are displayed on a DE1-SoC,0,AmanPrakash09/Baccarat-Gambling-Game---Simple-Datapaths-and-FSM,510895817,SystemVerilog,Baccarat-Gambling-Game---Simple-Datapaths-and-FSM,2713,0,2022-07-05 21:16:26+00:00,[],None
642,https://github.com/JJY-99/uvma_apb.git,2022-07-21 02:35:45+00:00,APB UVM Agent - Moore.io AMBA® IP Suite,0,JJY-99/uvma_apb,516199198,,uvma_apb,14861,0,2022-05-30 20:11:09+00:00,[],None
643,https://github.com/AhmedMaagdy/AhmedMaagdy.git,2022-07-21 10:15:31+00:00,Config files for my GitHub profile.,0,AhmedMaagdy/AhmedMaagdy,516321387,SystemVerilog,AhmedMaagdy,37,0,2022-07-21 18:20:15+00:00,"['config', 'github-config']",None
644,https://github.com/merledu/Rev-SoC-FPGA.git,2022-07-29 16:15:01+00:00,FPGA model of SweRV-EL2 based System on chip,1,merledu/Rev-SoC-FPGA,519276638,SystemVerilog,Rev-SoC-FPGA,1126,0,2022-07-29 16:22:52+00:00,[],None
645,https://github.com/lm-chinhtran/uvm_training.git,2022-07-21 02:58:35+00:00,,0,lm-chinhtran/uvm_training,516204278,SystemVerilog,uvm_training,115,0,2022-07-21 03:00:25+00:00,[],None
646,https://github.com/anushagh/ALU-4b.git,2022-07-21 14:36:11+00:00,4 bit ALU with randomized inputs,0,anushagh/ALU-4b,516407392,SystemVerilog,ALU-4b,6,0,2022-07-28 10:45:17+00:00,[],https://api.github.com/licenses/bsd-3-clause
647,https://github.com/Atm06/Project_Vending-Machine_verilog.git,2022-08-02 04:11:24+00:00,,0,Atm06/Project_Vending-Machine_verilog,520347198,SystemVerilog,Project_Vending-Machine_verilog,4,0,2022-08-02 04:12:31+00:00,[],https://api.github.com/licenses/mit
648,https://github.com/PaulManriquez/MIPS_FULL-_PROCESSOR_MULTICYCLE.git,2022-08-03 03:29:55+00:00,,0,PaulManriquez/MIPS_FULL-_PROCESSOR_MULTICYCLE,520725160,SystemVerilog,MIPS_FULL-_PROCESSOR_MULTICYCLE,216,0,2022-08-03 03:33:53+00:00,[],None
649,https://github.com/sarawiRTLDV/SystemVerilog-for-Verification.git,2022-07-16 15:45:55+00:00,"VLSI Industry is divided into two popular branches viz. Design of System and Verification of the System. Verilog, VHDL remain the popular choices for most Design Engineers working in this domain. Although, preliminary functional verification can be carried out with Hardware Description Language. Hardware Description language possesses limited capabilities to perform code coverage analysis, Corner cases testing, etc and in fact sometimes it becomes impossible to perform this check with HDL's.   Hence Specialized Verification languages such as SystemVerilog start to become the primary choice for the verification of the design.  The SystemVerilog Object-oriented nature allows features such as Inheritance, Polymorphism, etc. adds capabilities of finding critical bugs inside design that HDL simply cannot find.   Verification is certainly more tricky and interesting as compared to designing a digital system and hence it consists of a large number of OOP's Constructs as opposed to Verilog. SystemVerilog is one of the most popular choices among Verification Engineer for Digital System Verification. This Journey will take you to the most common techniques used to write SystemVerilog Testbench and perform Verification of the Chips. The course is structured so that anyone who wishes to learn about System Verilog will able to understand everything. Finally, Practice is the key to become an expert.",0,sarawiRTLDV/SystemVerilog-for-Verification,514619681,SystemVerilog,SystemVerilog-for-Verification,66,0,2022-07-16 15:49:10+00:00,[],None
650,https://github.com/Pathfinder-86/IC_design.git,2022-06-22 15:08:20+00:00,Recording Digital Circuits and Systems HW and Lab,0,Pathfinder-86/IC_design,506297088,SystemVerilog,IC_design,144,0,2022-06-22 15:37:24+00:00,[],None
651,https://github.com/nebhrajani-a/sfifo.git,2022-07-13 13:04:04+00:00,Simple synchronous FIFO in SystemVerilog.,0,nebhrajani-a/sfifo,513524161,SystemVerilog,sfifo,496,0,2022-09-27 07:17:53+00:00,[],None
652,https://github.com/jefferyxu1/RV32I-Core.git,2022-07-22 08:17:32+00:00,Verilog for my EE 477 Group Project.,0,jefferyxu1/RV32I-Core,516667849,SystemVerilog,RV32I-Core,20,0,2022-07-22 08:22:23+00:00,[],None
653,https://github.com/nefelimet/SystemVerilog-project.git,2022-07-28 00:08:21+00:00,"Project for the class ""Digital Low-level Hardware Systems II"" in SystemVerilog.",0,nefelimet/SystemVerilog-project,518645945,SystemVerilog,SystemVerilog-project,42,0,2022-10-09 18:56:30+00:00,"['synchronous-fifos', 'systemverilog', 'testbench', 'up-down-counter']",None
654,https://github.com/nguyenvietthi/sync_fifo.git,2022-07-28 03:28:09+00:00,,0,nguyenvietthi/sync_fifo,518687214,SystemVerilog,sync_fifo,4,0,2022-08-09 04:46:00+00:00,[],None
655,https://github.com/MANOJKUMAR-CM/Parallel_Prefix_Adders.git,2022-07-15 10:04:21+00:00,This Repository contains System verilog Code for 4 bit Kogge stone  and Brent Kung Adder .,0,MANOJKUMAR-CM/Parallel_Prefix_Adders,514221459,SystemVerilog,Parallel_Prefix_Adders,468,0,2022-07-15 10:17:31+00:00,[],None
656,https://github.com/01FE21MVE003/ADLV.git,2022-09-01 03:10:37+00:00,,0,01FE21MVE003/ADLV,531344284,SystemVerilog,ADLV,128,0,2022-09-01 03:18:16+00:00,[],None
657,https://github.com/IEncinas10/PA.git,2022-09-18 16:04:44+00:00,MIRI - Processor Architecture,0,IEncinas10/PA,538163310,SystemVerilog,PA,16543,0,2023-02-16 20:11:35+00:00,[],None
658,https://github.com/aditya2812singh/sv_uvm_work.git,2022-08-14 17:15:57+00:00,,0,aditya2812singh/sv_uvm_work,524733822,SystemVerilog,sv_uvm_work,3,0,2022-08-14 17:34:39+00:00,[],None
659,https://github.com/Sireeshakuruba2/RTL_Design_Practice.git,2022-08-08 18:35:59+00:00,Rtl_codes,0,Sireeshakuruba2/RTL_Design_Practice,522665521,SystemVerilog,RTL_Design_Practice,28,0,2023-10-10 15:18:03+00:00,"['systemverilog', 'verilog']",None
660,https://github.com/ZexuanLi0318/UW-EE-371.git,2022-08-12 22:03:19+00:00,Lab Projects for UW EE 371 class,0,ZexuanLi0318/UW-EE-371,524235546,SystemVerilog,UW-EE-371,1078,0,2022-08-12 22:18:24+00:00,[],None
661,https://github.com/RotemShezaf/SIM1.git,2022-08-20 07:25:59+00:00,,0,RotemShezaf/SIM1,526856539,SystemVerilog,SIM1,204,0,2022-08-20 07:45:31+00:00,[],None
662,https://github.com/acoskuner500/CSCE616_Team24.git,2022-09-03 21:00:56+00:00,"Fall 2022, CSCE 616 Team 24 Lab Repository",0,acoskuner500/CSCE616_Team24,532373044,SystemVerilog,CSCE616_Team24,49456,0,2023-06-12 04:56:24+00:00,[],None
663,https://github.com/Anshuman0029/5.1.git,2022-08-28 13:43:23+00:00,,0,Anshuman0029/5.1,529874200,SystemVerilog,5.1,1,0,2022-08-28 13:48:13+00:00,[],None
664,https://github.com/lucasooliveiranh/2022-2-Arquitetura-Sistemas-Digitais.git,2022-09-20 18:36:18+00:00,Arquitetura de Sistemas Digitais,0,lucasooliveiranh/2022-2-Arquitetura-Sistemas-Digitais,539138797,SystemVerilog,2022-2-Arquitetura-Sistemas-Digitais,98,0,2022-12-13 12:42:24+00:00,[],None
665,https://github.com/weichungchen/sv_test.git,2022-09-22 07:40:56+00:00,,0,weichungchen/sv_test,539858332,SystemVerilog,sv_test,15,0,2022-09-22 08:50:15+00:00,[],None
666,https://github.com/timelightup/arbiter-interface.git,2022-09-24 07:07:18+00:00,,0,timelightup/arbiter-interface,540740903,SystemVerilog,arbiter-interface,1,0,2022-09-24 07:08:34+00:00,[],None
667,https://github.com/denSmashh/pipeline-mips-cpu.git,2022-09-06 19:01:53+00:00,"Pipeline mips cpu from book H&H ""Digital design and computer architecture""",0,denSmashh/pipeline-mips-cpu,533465110,SystemVerilog,pipeline-mips-cpu,116,0,2022-09-06 19:07:52+00:00,[],None
668,https://github.com/nulface/KRV32I.git,2022-09-12 08:49:58+00:00,my basic RV32I core,0,nulface/KRV32I,535581525,SystemVerilog,KRV32I,34,0,2022-09-21 01:52:11+00:00,[],None
669,https://github.com/varghese-rahul/UVM_AHB_UVC_Testbench.git,2022-06-23 23:22:10+00:00,,0,varghese-rahul/UVM_AHB_UVC_Testbench,506818613,SystemVerilog,UVM_AHB_UVC_Testbench,15,0,2023-12-01 05:37:10+00:00,[],None
670,https://github.com/marc-off/3-Stage-Caesar-Cypher.git,2022-07-03 15:48:54+00:00,,0,marc-off/3-Stage-Caesar-Cypher,510067009,SystemVerilog,3-Stage-Caesar-Cypher,9346,0,2024-04-13 15:29:09+00:00,[],None
671,https://github.com/djtayag/ISA_Project.git,2022-05-24 01:44:42+00:00,ISA Project for CSE 141L - Spring 2022,0,djtayag/ISA_Project,495631974,SystemVerilog,ISA_Project,2389,0,2024-02-27 03:22:49+00:00,[],None
672,https://github.com/agithubber777/dv.git,2022-08-23 08:44:52+00:00,Design Verification,0,agithubber777/dv,527904745,SystemVerilog,dv,19,0,2022-10-14 06:05:02+00:00,[],None
673,https://github.com/fengyefengye/circuit_lab.git,2022-05-13 02:41:51+00:00,数字逻辑与数字系统课程实验归档,0,fengyefengye/circuit_lab,491734550,,circuit_lab,97,0,2023-05-15 14:14:45+00:00,[],None
674,https://github.com/yunchiaaa/Homework5.git,2022-05-16 03:53:15+00:00,,0,yunchiaaa/Homework5,492675931,SystemVerilog,Homework5,1,0,2022-05-16 03:53:48+00:00,[],None
675,https://github.com/Richard-Voragen/ALU-Design.git,2022-05-16 01:55:06+00:00,This ALU was designed for ModelSim,0,Richard-Voragen/ALU-Design,492652752,SystemVerilog,ALU-Design,3,0,2022-05-16 02:37:03+00:00,[],None
676,https://github.com/SokAnn/project-3.git,2022-08-05 13:48:42+00:00,,0,SokAnn/project-3,521655192,SystemVerilog,project-3,10,0,2022-08-10 12:11:47+00:00,[],None
677,https://github.com/padung99/Lab_handshake_sync.git,2022-07-28 09:28:50+00:00,,0,padung99/Lab_handshake_sync,518782342,SystemVerilog,Lab_handshake_sync,9,0,2022-07-28 09:32:58+00:00,[],None
678,https://github.com/EgemenBaykan/FIR_Filter_Core.git,2022-08-01 08:56:04+00:00,Reconfigurable FIR Filter Core,0,EgemenBaykan/FIR_Filter_Core,520035180,SystemVerilog,FIR_Filter_Core,80,0,2022-08-01 13:23:36+00:00,[],None
679,https://github.com/BrunoHL4/INAOE-Pre-Si-Verification.git,2022-07-20 17:45:15+00:00,Códigos elaborados durante el curso de Verificación Pre-Silicio impartido por el INAOE,0,BrunoHL4/INAOE-Pre-Si-Verification,516080332,SystemVerilog,INAOE-Pre-Si-Verification,8018,0,2022-07-20 17:46:49+00:00,[],None
680,https://github.com/tpacini/simplified-RC4.git,2022-07-01 17:25:05+00:00,"Final project of the course ""Hardware and Embedded Security"", a.y. 2021/22",0,tpacini/simplified-RC4,509536713,SystemVerilog,simplified-RC4,950,0,2022-07-22 19:40:44+00:00,[],None
681,https://github.com/nagavar2/uvm_try_1.git,2022-07-13 22:58:20+00:00,,0,nagavar2/uvm_try_1,513693899,SystemVerilog,uvm_try_1,39,0,2022-07-13 23:01:56+00:00,[],None
682,https://github.com/MSaqi/AHB_lite_protocol.git,2022-07-18 07:29:24+00:00,Project_1,0,MSaqi/AHB_lite_protocol,515078688,SystemVerilog,AHB_lite_protocol,171,0,2022-07-18 07:32:14+00:00,[],None
683,https://github.com/suyash-20/fifo.git,2022-08-13 18:09:26+00:00,,0,suyash-20/fifo,524473880,SystemVerilog,fifo,5,0,2022-08-13 18:09:51+00:00,[],None
684,https://github.com/IsaiahGrace/VerilatorSims.git,2022-08-14 00:28:02+00:00,,0,IsaiahGrace/VerilatorSims,524538163,SystemVerilog,VerilatorSims,44,0,2022-08-25 03:56:08+00:00,[],None
685,https://github.com/lpatel29/VLSI.git,2022-08-26 04:59:35+00:00,Verilog codes.,0,lpatel29/VLSI,529120382,SystemVerilog,VLSI,67,0,2022-08-26 05:19:08+00:00,[],None
686,https://github.com/ikar298/FIFO-Controller.git,2022-08-25 07:53:28+00:00,Designed a FIFO controller using Verilog HDL ,0,ikar298/FIFO-Controller,528749519,SystemVerilog,FIFO-Controller,66,0,2022-08-25 17:32:05+00:00,[],None
687,https://github.com/ptwestmoreland/FPGA-Projects.git,2022-05-25 23:01:02+00:00,This repository holds my digital design projects. The language of choice is system Verilog and it holds various hardware units. ,0,ptwestmoreland/FPGA-Projects,496414463,SystemVerilog,FPGA-Projects,17,0,2023-07-27 04:57:46+00:00,[],None
688,https://github.com/cse140l-sp22/Lab5-Starter-Code.git,2022-05-19 05:33:35+00:00,,2,cse140l-sp22/Lab5-Starter-Code,493933953,SystemVerilog,Lab5-Starter-Code,13,0,2022-05-19 05:41:20+00:00,[],None
689,https://github.com/KuiHouLiao/HW-4.git,2022-06-13 01:34:21+00:00,,0,KuiHouLiao/HW-4,502770257,SystemVerilog,HW-4,2,0,2022-06-13 01:34:54+00:00,[],None
690,https://github.com/adrianmartinez-cg/sv-statemachines.git,2022-07-06 01:46:46+00:00,Using system verilog to design digital circuits.,0,adrianmartinez-cg/sv-statemachines,510951071,SystemVerilog,sv-statemachines,3,0,2022-07-06 01:49:41+00:00,[],None
691,https://github.com/jArnke/CSE-141L-Prog-2.git,2022-08-19 19:47:19+00:00,,0,jArnke/CSE-141L-Prog-2,526733427,SystemVerilog,CSE-141L-Prog-2,321,0,2022-08-19 19:48:19+00:00,[],None
692,https://github.com/phymooc/learn-digital-IC.git,2022-06-29 01:08:36+00:00,,0,phymooc/learn-digital-IC,508502319,SystemVerilog,learn-digital-IC,7,0,2022-07-05 02:53:17+00:00,[],None
693,https://github.com/Redha-Aouadja/HookKaks.git,2022-06-29 08:29:04+00:00,,0,Redha-Aouadja/HookKaks,508608765,SystemVerilog,HookKaks,0,0,2022-06-29 08:33:23+00:00,[],None
694,https://github.com/Antonios-C/8-Bit-Calculator.git,2022-08-14 23:10:33+00:00,,0,Antonios-C/8-Bit-Calculator,524799940,SystemVerilog,8-Bit-Calculator,20,0,2022-08-14 23:53:38+00:00,[],None
695,https://github.com/IamDestruction/100DaysofRTL.git,2022-08-18 09:35:52+00:00,"Starting 100 DAYS of RTL, hope I succeed",0,IamDestruction/100DaysofRTL,526146643,SystemVerilog,100DaysofRTL,16,0,2022-08-18 20:47:44+00:00,[],https://api.github.com/licenses/gpl-3.0
696,https://github.com/shaswat2428/SPI-Protocol-Verification.git,2022-09-22 18:25:28+00:00,SPI Protocol Verification in system verilog with use of layered test bench and its RTL code,0,shaswat2428/SPI-Protocol-Verification,540116315,SystemVerilog,SPI-Protocol-Verification,134,0,2022-09-22 18:30:06+00:00,[],None
697,https://github.com/somayamansourrr/ALU-Verification.git,2022-09-04 16:07:32+00:00,,0,somayamansourrr/ALU-Verification,532589392,SystemVerilog,ALU-Verification,10,0,2022-09-04 16:08:14+00:00,[],None
698,https://github.com/usman1515/UVM_Testbench_ALU.git,2022-09-21 11:47:43+00:00,,0,usman1515/UVM_Testbench_ALU,539460003,SystemVerilog,UVM_Testbench_ALU,26,0,2022-09-22 08:16:09+00:00,[],None
699,https://github.com/Adeen317/System_Verilog.git,2022-09-14 22:00:28+00:00,,0,Adeen317/System_Verilog,536773006,SystemVerilog,System_Verilog,14,0,2023-08-14 12:01:06+00:00,[],None
700,https://github.com/chrystianrbueno/Arquitetura-TGA.git,2022-09-16 21:20:34+00:00,,0,chrystianrbueno/Arquitetura-TGA,537623093,SystemVerilog,Arquitetura-TGA,101,0,2022-09-16 21:25:55+00:00,[],None
701,https://github.com/DIPS6114/apb.git,2022-05-11 10:32:10+00:00,,0,DIPS6114/apb,491063427,SystemVerilog,apb,15,0,2022-05-11 10:35:46+00:00,[],None
702,https://github.com/edward88421/h5.git,2022-05-22 16:26:47+00:00,,0,edward88421/h5,495114337,SystemVerilog,h5,1,0,2022-05-22 16:32:38+00:00,[],None
703,https://github.com/XarkLabs/upduino-gpiotest.git,2022-05-28 04:15:07+00:00,Example to test all UPduino GPIO outputs,0,XarkLabs/upduino-gpiotest,497210148,SystemVerilog,upduino-gpiotest,15214,0,2022-05-28 04:16:46+00:00,"['fpga', 'ice40up5k', 'systemverilog', 'upduino', 'verilog']",
704,https://github.com/ykhodke/ece260c.git,2022-06-08 02:37:04+00:00,,1,ykhodke/ece260c,501074329,SystemVerilog,ece260c,9,0,2022-06-08 02:41:00+00:00,[],None
705,https://github.com/SamuelEbbz07/ibex.git,2022-06-08 10:06:55+00:00,,0,SamuelEbbz07/ibex,501196010,SystemVerilog,ibex,8692,0,2022-06-08 10:07:41+00:00,[],https://api.github.com/licenses/apache-2.0
706,https://github.com/Xuchaku/lab2scr1.git,2022-06-09 11:33:08+00:00,,0,Xuchaku/lab2scr1,501625790,SystemVerilog,lab2scr1,5032,0,2022-06-09 11:35:46+00:00,[],
707,https://github.com/adithi-su/Mixed-signal-RISCV-based-SoC.git,2022-05-30 12:12:03+00:00,,0,adithi-su/Mixed-signal-RISCV-based-SoC,497927910,SystemVerilog,Mixed-signal-RISCV-based-SoC,958,0,2022-05-30 18:34:51+00:00,[],None
708,https://github.com/phymooc/learn-verification.git,2022-06-27 09:44:26+00:00,,0,phymooc/learn-verification,507849359,SystemVerilog,learn-verification,4,0,2022-07-11 10:50:12+00:00,[],None
709,https://github.com/kosmalex/SnakeSV.git,2022-06-02 18:34:50+00:00,snake written in System Verilog for nexys A7,0,kosmalex/SnakeSV,499248585,SystemVerilog,SnakeSV,13,0,2022-06-02 18:38:46+00:00,[],https://api.github.com/licenses/apache-2.0
710,https://github.com/chavanvx/chavanvx.git,2022-06-23 04:20:24+00:00,Config files for my GitHub profile.,0,chavanvx/chavanvx,506494616,SystemVerilog,chavanvx,71,0,2023-10-27 05:06:09+00:00,"['config', 'github-config']",None
711,https://github.com/Jian404/FPGA-Component.git,2022-09-01 05:19:37+00:00,for learning,0,Jian404/FPGA-Component,531373867,SystemVerilog,FPGA-Component,17,0,2022-09-05 05:27:09+00:00,[],None
712,https://github.com/pAuLocordero222/Proyecto1_Verificacion.git,2022-08-27 03:30:39+00:00,,0,pAuLocordero222/Proyecto1_Verificacion,529470984,SystemVerilog,Proyecto1_Verificacion,170,0,2022-09-04 00:33:19+00:00,[],None
713,https://github.com/Pradyumna1312/Simple-Problems-with-Verification.git,2022-09-08 17:51:54+00:00,,0,Pradyumna1312/Simple-Problems-with-Verification,534330145,SystemVerilog,Simple-Problems-with-Verification,81,0,2022-09-22 16:36:33+00:00,[],https://api.github.com/licenses/apache-2.0
714,https://github.com/SA-GPGPU/RISCV-based-debug_unit.git,2022-09-09 13:06:26+00:00,This module is an implementation of a debug unit compliant with the [RISC-V debug specification 0.13.2],1,SA-GPGPU/RISCV-based-debug_unit,534646310,SystemVerilog,RISCV-based-debug_unit,1201,0,2022-09-09 13:11:46+00:00,[],None
715,https://github.com/AllahWasya/System-Verilog-coding.git,2022-05-24 05:41:42+00:00,,0,AllahWasya/System-Verilog-coding,495684579,SystemVerilog,System-Verilog-coding,10,0,2022-05-24 05:46:55+00:00,[],None
716,https://github.com/AndersonLLeite/ULA-em-SystemVerilog.git,2022-06-23 15:17:17+00:00,Criação do circuito lógico combinacional ULA com algumas operações basicas para a discuplina de LOAC,0,AndersonLLeite/ULA-em-SystemVerilog,506690488,SystemVerilog,ULA-em-SystemVerilog,4,0,2022-06-23 15:24:17+00:00,[],None
717,https://github.com/talinham/ECE4305.git,2022-06-22 20:12:43+00:00,,0,talinham/ECE4305,506391957,SystemVerilog,ECE4305,2549,0,2022-06-22 20:17:46+00:00,[],None
718,https://github.com/tdextrous/sha256.git,2022-06-26 06:05:36+00:00,Some fun with SHA-256,0,tdextrous/sha256,507491661,SystemVerilog,sha256,19,0,2022-08-17 04:04:22+00:00,[],None
719,https://github.com/RonanLc/Neuromorphic-system-interface.git,2022-05-17 10:07:20+00:00,,0,RonanLc/Neuromorphic-system-interface,493195354,SystemVerilog,Neuromorphic-system-interface,4109,0,2022-05-19 07:03:05+00:00,[],None
720,https://github.com/cse140l-sp22/Lab4-Starter-Code.git,2022-05-16 17:16:02+00:00,,0,cse140l-sp22/Lab4-Starter-Code,492930845,SystemVerilog,Lab4-Starter-Code,6,0,2022-05-16 17:19:16+00:00,[],None
721,https://github.com/AlfredoAndrade14/LOAC.git,2022-05-31 13:34:06+00:00,,0,AlfredoAndrade14/LOAC,498350067,SystemVerilog,LOAC,164,0,2022-09-14 13:14:05+00:00,[],None
722,https://github.com/Jian-Wuyou/CS21-HDL-Project.git,2022-06-01 15:40:00+00:00,,0,Jian-Wuyou/CS21-HDL-Project,498796904,SystemVerilog,CS21-HDL-Project,13,0,2022-06-05 13:46:15+00:00,[],None
723,https://github.com/shawn110285/opentitan_fpga_a7.git,2022-05-28 06:13:58+00:00,the opentitan implemented on xilinx Artix 7,0,shawn110285/opentitan_fpga_a7,497231123,SystemVerilog,opentitan_fpga_a7,8730,0,2022-05-28 06:20:12+00:00,[],None
724,https://github.com/Granp4sso/bourbon-ristretto-32-riscv.git,2022-05-28 09:50:57+00:00,A 32-bit RISC-V core built just for fun and learning purposes,0,Granp4sso/bourbon-ristretto-32-riscv,497277055,SystemVerilog,bourbon-ristretto-32-riscv,565,0,2022-11-20 10:59:40+00:00,[],None
725,https://github.com/jlazear/stupid_toy_loader.git,2022-05-12 23:46:13+00:00,a stupid toy loader for messing with simulation stuff,0,jlazear/stupid_toy_loader,491699810,SystemVerilog,stupid_toy_loader,132,0,2022-05-12 23:53:50+00:00,[],None
726,https://github.com/ce323/project-IBMinator.git,2022-05-20 03:54:49+00:00,,1,ce323/project-IBMinator,494312885,SystemVerilog,project-IBMinator,557,0,2023-01-27 03:49:50+00:00,[],None
727,https://github.com/SinceNight/IC.git,2022-05-20 05:33:01+00:00,,0,SinceNight/IC,494333678,SystemVerilog,IC,42,0,2022-05-20 05:43:31+00:00,[],None
728,https://github.com/BIueMan/Space-Invaders-in-VHDL.git,2022-05-25 10:57:46+00:00,a Space Invader that was program in VHDL,0,BIueMan/Space-Invaders-in-VHDL,496192479,SystemVerilog,Space-Invaders-in-VHDL,13583,0,2022-06-09 13:19:07+00:00,[],None
729,https://github.com/a29712049/blocking-and-nonblocking.git,2022-06-27 02:39:15+00:00,,0,a29712049/blocking-and-nonblocking,507740247,SystemVerilog,blocking-and-nonblocking,58,0,2022-06-27 02:40:56+00:00,[],None
730,https://github.com/mfkiwl/veriRISCV.git,2022-07-10 22:56:56+00:00,,0,mfkiwl/veriRISCV,512557023,SystemVerilog,veriRISCV,375,0,2022-08-20 05:51:44+00:00,[],https://api.github.com/licenses/mit
731,https://github.com/amiteshkr63/UART_Controller_Design_Verification_VLSI.git,2022-07-07 11:39:05+00:00,,0,amiteshkr63/UART_Controller_Design_Verification_VLSI,511503360,SystemVerilog,UART_Controller_Design_Verification_VLSI,23,0,2023-08-04 07:18:14+00:00,[],None
732,https://github.com/garima090893/uvm.git,2022-05-11 17:07:26+00:00,,0,garima090893/uvm,491203216,SystemVerilog,uvm,2,0,2022-05-11 17:10:27+00:00,[],None
733,https://github.com/asd392229/hw5.git,2022-05-16 03:27:34+00:00,,0,asd392229/hw5,492670930,SystemVerilog,hw5,97,0,2022-05-16 03:28:16+00:00,[],None
734,https://github.com/GReX-Telescope/gateware.git,2022-06-16 17:40:42+00:00,Simulink model for the SNAP Gateware,0,GReX-Telescope/gateware,504250194,SystemVerilog,gateware,129742,0,2023-07-05 22:35:32+00:00,[],None
735,https://github.com/Anshuman0029/Task3_SIT329.git,2022-07-31 09:14:28+00:00,,0,Anshuman0029/Task3_SIT329,519728750,SystemVerilog,Task3_SIT329,11,0,2022-07-31 09:16:25+00:00,[],None
736,https://github.com/ladiasnk/Digital-Low-Level-Hardware-Systems-2-Semester-Assignment.git,2022-07-27 18:15:19+00:00,"This is an assignment in Digital Low Level Hardware Systems 2 in the 8th semester of my studies. It consists of the design and verification of an up/down 16-bit counter, as well as a simple synchronous FIFO in System Verilog. The coursework is in English , and the report of my assignment is in Greek. ",0,ladiasnk/Digital-Low-Level-Hardware-Systems-2-Semester-Assignment,518566732,SystemVerilog,Digital-Low-Level-Hardware-Systems-2-Semester-Assignment,2139,0,2022-07-30 12:11:05+00:00,[],None
737,https://github.com/aastha0603/vending_machine.git,2022-07-12 12:16:19+00:00,,0,aastha0603/vending_machine,513129375,SystemVerilog,vending_machine,2,0,2022-07-12 12:21:23+00:00,[],None
738,https://github.com/sram1619/myriscv.git,2022-08-07 07:45:00+00:00,,0,sram1619/myriscv,522148604,SystemVerilog,myriscv,1,0,2022-08-07 07:47:15+00:00,[],None
739,https://github.com/cleissom/Xnorator.git,2022-07-29 06:16:35+00:00,A Domain Specific Hardware Accelerator for Binary Neural Networks,0,cleissom/Xnorator,519102010,SystemVerilog,Xnorator,35,0,2022-07-29 06:18:52+00:00,[],None
740,https://github.com/Buildyourdreams0816/Training-for-I2C-Verification.git,2022-08-01 10:20:00+00:00,,0,Buildyourdreams0816/Training-for-I2C-Verification,520061703,SystemVerilog,Training-for-I2C-Verification,9683,0,2022-08-01 10:22:35+00:00,[],https://api.github.com/licenses/apache-2.0
741,https://github.com/Aditi-Dhibar/Vending-machine.git,2022-08-15 13:06:01+00:00,I made this project using verilog code,0,Aditi-Dhibar/Vending-machine,524990508,SystemVerilog,Vending-machine,36,0,2022-08-15 13:10:02+00:00,[],None
742,https://github.com/phamngocson1408/NPU1.git,2022-08-17 06:22:08+00:00,,0,phamngocson1408/NPU1,525665501,SystemVerilog,NPU1,214,0,2022-08-17 07:00:10+00:00,[],None
743,https://github.com/Brughy/generic_mulaw_sv.git,2022-08-10 10:51:02+00:00,,0,Brughy/generic_mulaw_sv,523305320,SystemVerilog,generic_mulaw_sv,5,0,2022-12-20 11:09:51+00:00,[],None
744,https://github.com/romantitovmephi/Generic-building-blocks.git,2022-07-14 21:45:12+00:00,,0,romantitovmephi/Generic-building-blocks,514056041,SystemVerilog,Generic-building-blocks,32,0,2022-07-14 21:53:37+00:00,[],None
745,https://github.com/Boccolarg/PULPino_BRAM.git,2022-07-25 16:58:06+00:00,,0,Boccolarg/PULPino_BRAM,517749923,SystemVerilog,PULPino_BRAM,5,0,2022-07-25 17:01:32+00:00,[],None
746,https://github.com/Faisalawan11/Lab-14-SV-using-Virtual-Interface.git,2022-07-18 16:18:39+00:00,,0,Faisalawan11/Lab-14-SV-using-Virtual-Interface,515257750,SystemVerilog,Lab-14-SV-using-Virtual-Interface,5,0,2022-07-18 16:23:33+00:00,[],None
747,https://github.com/Mandrews277/FPGA-HDMI-Project.git,2022-09-08 21:18:34+00:00,Creating an HDMI output using a Cyclone V FPGA to display a rudimentry spectrum analyzer on any HDMI display.,0,Mandrews277/FPGA-HDMI-Project,534396630,SystemVerilog,FPGA-HDMI-Project,12511,0,2022-09-08 21:20:38+00:00,[],None
748,https://github.com/haosenli/fpga-abstract-animations.git,2022-08-31 22:18:38+00:00,A procedurally generated abstract screen saver for Intel DE1-SoC FPGAs.,0,haosenli/fpga-abstract-animations,531277105,SystemVerilog,fpga-abstract-animations,2475,0,2022-08-31 22:21:15+00:00,[],None
749,https://github.com/rednazer/ece554_miniproject.git,2022-09-08 21:48:17+00:00,,0,rednazer/ece554_miniproject,534404387,SystemVerilog,ece554_miniproject,4413,0,2022-09-08 22:49:26+00:00,[],None
750,https://github.com/karthik-kaushik/Image-compression.git,2022-08-14 23:11:33+00:00,Hardware Implementation of image decompressor,0,karthik-kaushik/Image-compression,524800087,SystemVerilog,Image-compression,2009,0,2022-08-14 23:13:03+00:00,[],https://api.github.com/licenses/mit
751,https://github.com/DonMaestro/UART.git,2022-08-23 09:06:34+00:00,,0,DonMaestro/UART,527912251,SystemVerilog,UART,152,0,2022-08-28 06:44:19+00:00,[],None
752,https://github.com/amepila/Practica1_DisenoDigital.git,2022-09-21 23:36:56+00:00,Practica 1 de Diseno de Sistemas Digitales en la Maestria de Diseno Electronico,0,amepila/Practica1_DisenoDigital,539722699,SystemVerilog,Practica1_DisenoDigital,116,0,2022-09-21 23:39:45+00:00,[],None
753,https://github.com/Willysan23/DecGray-Bin-Dec.git,2022-09-21 21:17:38+00:00,,0,Willysan23/DecGray-Bin-Dec,539688148,SystemVerilog,DecGray-Bin-Dec,182,0,2022-10-11 02:44:59+00:00,[],None
754,https://github.com/IasonC/16RISC-CPU.git,2022-09-24 17:04:20+00:00,16-bit RISC Harvard-architecture CPU. Work in progress. Aim to deploy on FPGA.,0,IasonC/16RISC-CPU,540904147,SystemVerilog,16RISC-CPU,48,0,2022-09-24 17:06:58+00:00,[],None
755,https://github.com/manp-git/DynPath.git,2022-09-18 08:50:29+00:00,Non-intrusive hardware based Execution Path Profiling,0,manp-git/DynPath,538051175,SystemVerilog,DynPath,1965,0,2022-09-29 14:37:26+00:00,[],None
756,https://github.com/Yuan-Mao/bsg_fifo_1r1w_rolly.git,2022-09-17 18:14:09+00:00,,0,Yuan-Mao/bsg_fifo_1r1w_rolly,537893465,SystemVerilog,bsg_fifo_1r1w_rolly,46,0,2022-09-17 18:15:03+00:00,[],None
757,https://github.com/Kinox2000/Proyecto1-VFCI.git,2022-09-09 23:10:33+00:00,Proyecto 1-Verificación Funcional de Circuitos Integrados,0,Kinox2000/Proyecto1-VFCI,534832712,SystemVerilog,Proyecto1-VFCI,66,0,2022-09-10 07:05:20+00:00,[],None
758,https://github.com/JoseA4718/Diseno-Digital-HDL.git,2022-09-23 02:07:09+00:00,II Proyecto - Diseño Lógico,0,JoseA4718/Diseno-Digital-HDL,540243749,SystemVerilog,Diseno-Digital-HDL,126,0,2022-10-11 07:26:04+00:00,[],https://api.github.com/licenses/mit
759,https://github.com/MuntasirBabul/rtl.git,2022-07-06 11:46:16+00:00,,0,MuntasirBabul/rtl,511114560,SystemVerilog,rtl,300,0,2023-12-19 19:59:47+00:00,[],None
760,https://github.com/sujankumarMN/MIT.git,2022-09-22 10:49:27+00:00,Repo contains all the exercises/implementations done in lab,0,sujankumarMN/MIT,539932241,SystemVerilog,MIT,6330,0,2024-01-14 11:58:42+00:00,[],None
761,https://github.com/connorjlink/hardware.git,2022-08-12 23:25:13+00:00,A register-transfer level Verilog/SystemVerilog implementation of CL8,0,connorjlink/hardware,524248723,SystemVerilog,hardware,160,0,2024-03-01 16:37:43+00:00,[],https://api.github.com/licenses/mit
762,https://github.com/Alszp/HDLbits.git,2022-05-12 17:09:31+00:00,,0,Alszp/HDLbits,491602593,SystemVerilog,HDLbits,35,0,2022-05-22 16:05:09+00:00,[],None
763,https://github.com/AlexNguyenJJ/ece111-hw7.git,2022-05-28 17:51:37+00:00,,0,AlexNguyenJJ/ece111-hw7,497390873,SystemVerilog,ece111-hw7,551,0,2022-05-28 17:54:30+00:00,[],None
764,https://github.com/EngRaff92/RISCV_MYTH_SV.git,2022-06-02 17:08:11+00:00,Labs from RISCV_MYTH training without TL Verilog but only using SV - COCOTB - YOSYS,0,EngRaff92/RISCV_MYTH_SV,499222494,SystemVerilog,RISCV_MYTH_SV,4372,0,2022-06-02 17:19:12+00:00,[],None
765,https://github.com/tsanyi0119/Hw05.git,2022-05-15 14:49:05+00:00,,0,tsanyi0119/Hw05,492516059,SystemVerilog,Hw05,2,0,2022-05-15 14:49:38+00:00,[],None
766,https://github.com/PierfrancescoBigliazzi/Hardware-and-Embedded-Security-Project.git,2022-05-14 16:29:34+00:00,,0,PierfrancescoBigliazzi/Hardware-and-Embedded-Security-Project,492269008,SystemVerilog,Hardware-and-Embedded-Security-Project,18046,0,2022-06-27 17:04:15+00:00,[],None
767,https://github.com/Ziboooo/32bit_multiplier_IEEEstandard-.git,2022-05-12 18:00:27+00:00,,0,Ziboooo/32bit_multiplier_IEEEstandard-,491617823,SystemVerilog,32bit_multiplier_IEEEstandard-,107,0,2022-08-17 09:10:58+00:00,[],None
768,https://github.com/ICHSU1998/2022_Spring_NCKU_DIC.git,2022-05-27 12:22:36+00:00,,0,ICHSU1998/2022_Spring_NCKU_DIC,496986423,SystemVerilog,2022_Spring_NCKU_DIC,6449,0,2022-06-03 09:07:32+00:00,[],None
769,https://github.com/YazanMPSUT/FPUPipelineArch2.git,2022-05-30 19:29:57+00:00,,0,YazanMPSUT/FPUPipelineArch2,498073240,SystemVerilog,FPUPipelineArch2,123,0,2022-05-30 19:36:56+00:00,[],None
770,https://github.com/Furqan-Lamp/Ibex-Core-Verification-Environment.git,2022-05-30 14:53:36+00:00,,0,Furqan-Lamp/Ibex-Core-Verification-Environment,497986722,SystemVerilog,Ibex-Core-Verification-Environment,13396,0,2022-06-08 06:05:11+00:00,[],None
771,https://github.com/crystal-lptang/Handshake.git,2022-05-29 09:26:23+00:00,ready and valid Handshake,0,crystal-lptang/Handshake,497543920,SystemVerilog,Handshake,246,0,2022-05-30 03:45:13+00:00,[],None
772,https://github.com/subhradip096/UART-Design-using-Verilog.git,2022-07-03 15:48:26+00:00,,0,subhradip096/UART-Design-using-Verilog,510066867,SystemVerilog,UART-Design-using-Verilog,20,0,2022-07-23 07:18:16+00:00,[],None
773,https://github.com/fcaspe/sump_zybo.git,2022-07-01 22:39:38+00:00,The SUMP logic analyzer for Zybo Z7,0,fcaspe/sump_zybo,509605127,SystemVerilog,sump_zybo,697,0,2022-07-01 22:41:13+00:00,[],None
774,https://github.com/jugszy/One_hot-to-Thermometer-in-Verilog-HDL.git,2022-06-10 17:57:11+00:00,This code is a parameterized one_hot to thermometer converter.,0,jugszy/One_hot-to-Thermometer-in-Verilog-HDL,502135072,SystemVerilog,One_hot-to-Thermometer-in-Verilog-HDL,0,0,2022-06-10 17:59:15+00:00,[],None
775,https://github.com/sisaphilip/FIR.git,2022-06-16 14:41:40+00:00,,0,sisaphilip/FIR,504192230,SystemVerilog,FIR,95,0,2022-06-16 14:45:12+00:00,[],None
776,https://github.com/jeras/UHDM-tests.git,2022-07-30 21:54:52+00:00,Test for UHDM SystemVerilog plugin for yosys.,0,jeras/UHDM-tests,519627880,SystemVerilog,UHDM-tests,22,0,2022-07-30 22:47:54+00:00,[],https://api.github.com/licenses/apache-2.0
777,https://github.com/MinhTran0911/Stopwatch_DE10.git,2022-07-30 14:41:56+00:00,Basic Stopwatch Design using Terasic DE-10 Standard FPGA,0,MinhTran0911/Stopwatch_DE10,519541371,SystemVerilog,Stopwatch_DE10,17937,0,2022-08-06 08:14:24+00:00,"['altera-fpga', 'cyclone-v', 'hardware-description-language', 'hdl', 'modelsim', 'quartus-prime', 'systemverilog', 'terasic-de10-standard']",None
778,https://github.com/visionvlsi/sv_by_self.git,2022-08-06 09:01:35+00:00,,0,visionvlsi/sv_by_self,521896766,SystemVerilog,sv_by_self,497,0,2022-08-06 09:05:01+00:00,[],None
779,https://github.com/spunky404/Verilog_Practicals.git,2022-08-04 08:21:48+00:00,Verilog Practicals,0,spunky404/Verilog_Practicals,521183137,SystemVerilog,Verilog_Practicals,40,0,2022-08-04 09:15:04+00:00,[],None
780,https://github.com/Angelaangie-ai/ECE-211-Final-Project.git,2022-08-07 17:13:13+00:00,,0,Angelaangie-ai/ECE-211-Final-Project,522275651,SystemVerilog,ECE-211-Final-Project,768,0,2022-08-07 17:13:56+00:00,[],None
781,https://github.com/carlzhang4/chisel_rps.git,2022-06-29 12:24:51+00:00,,0,carlzhang4/chisel_rps,508680879,SystemVerilog,chisel_rps,148,0,2022-07-14 12:56:02+00:00,[],None
782,https://github.com/sus-ziti-uni-hd/VerilogModules.git,2022-07-01 09:35:38+00:00,"A Collection of Useful, Self-Contained Verilog / SystemVerilog Modules",0,sus-ziti-uni-hd/VerilogModules,509398276,SystemVerilog,VerilogModules,2,0,2022-07-01 09:36:55+00:00,[],https://api.github.com/licenses/mit
783,https://github.com/YehorKrapovnytskyi/verification_ips.git,2022-06-30 15:12:30+00:00,"This repository contains common verification modules, that I use for my DSP design. ",0,YehorKrapovnytskyi/verification_ips,509129386,SystemVerilog,verification_ips,2,0,2022-06-30 23:27:30+00:00,[],None
784,https://github.com/MidhunNair43/counter_dectection_UVM.git,2022-07-25 04:25:45+00:00,,0,MidhunNair43/counter_dectection_UVM,517516093,SystemVerilog,counter_dectection_UVM,9,0,2022-07-25 04:35:20+00:00,[],None
785,https://github.com/mitshine/S-R-Latch---UVM.git,2022-08-11 10:33:01+00:00,Complete explanation of driver to scoreboard and monitor to scoreboard and functional coverage without cg_sample,0,mitshine/S-R-Latch---UVM,523681192,SystemVerilog,S-R-Latch---UVM,76,0,2022-08-11 11:08:32+00:00,[],None
786,https://github.com/szhao2095/pulp_soc.git,2022-07-13 18:17:04+00:00,,0,szhao2095/pulp_soc,513626886,SystemVerilog,pulp_soc,112,0,2022-07-18 18:48:56+00:00,[],
787,https://github.com/rabeea247/AHB_lite-Project-Part_1.git,2022-07-17 15:18:08+00:00,This is the part-1 of the Creating the Design Verification Environment,0,rabeea247/AHB_lite-Project-Part_1,514879014,SystemVerilog,AHB_lite-Project-Part_1,8,0,2022-07-17 15:23:42+00:00,[],None
788,https://github.com/LoesterFranco/ArmleoCPU-1.git,2022-08-15 16:47:58+00:00,"Multicore RISC-V CPU RV32IMA w/ MMU, Cache capable of booting Linux. Work in progress to execute first instruction",0,LoesterFranco/ArmleoCPU-1,525065081,,ArmleoCPU-1,3176,0,2022-08-15 16:47:55+00:00,[],https://api.github.com/licenses/gpl-3.0
789,https://github.com/hadizadeh-ali/UT_Computer_Architecture.git,2022-06-21 07:02:10+00:00,"My Verilog codes for MIPS single-cycle, multi-cycle, and pipelined architectures.",0,hadizadeh-ali/UT_Computer_Architecture,505727465,SystemVerilog,UT_Computer_Architecture,4870,0,2022-06-22 20:33:39+00:00,[],None
790,https://github.com/MelikaMinaei/Digital-Systems-CA-1.git,2022-06-19 00:15:31+00:00,,0,MelikaMinaei/Digital-Systems-CA-1,504977136,SystemVerilog,Digital-Systems-CA-1,1109,0,2023-11-03 02:41:32+00:00,[],None
791,https://github.com/MohamedAhmed412000/Digital-Verification-Codes.git,2022-06-19 13:16:44+00:00,CSE412: Selected Topics in Computer Engineering,0,MohamedAhmed412000/Digital-Verification-Codes,505114888,SystemVerilog,Digital-Verification-Codes,1090,0,2022-06-19 13:29:09+00:00,[],None
792,https://github.com/somayamansourrr/UVM-ALU-Verification.git,2022-08-29 08:07:48+00:00,,0,somayamansourrr/UVM-ALU-Verification,530124302,SystemVerilog,UVM-ALU-Verification,121,0,2022-09-04 19:44:46+00:00,[],None
793,https://github.com/alosktx/irun_test_dpi.git,2022-08-26 15:46:15+00:00,使用irun和c++测试systemverilog dpi,0,alosktx/irun_test_dpi,529316976,SystemVerilog,irun_test_dpi,3,0,2022-08-26 15:51:21+00:00,[],None
794,https://github.com/UandersonSilva/oo_testbenches.git,2022-08-20 20:22:14+00:00,Some oriented testbenches developed to verificate simple hardware descriptions.,0,UandersonSilva/oo_testbenches,527031673,SystemVerilog,oo_testbenches,7,0,2022-08-20 21:37:20+00:00,[],None
795,https://github.com/dansdeor/billiard.git,2022-08-19 10:15:16+00:00,billiard game running inside fpga board,0,dansdeor/billiard,526558601,SystemVerilog,billiard,14618,0,2022-08-22 17:08:31+00:00,[],None
796,https://github.com/hari-haran05/Hi-Five_CPU.git,2022-08-16 20:54:45+00:00,This is an RV32_IM riscv cpu core. Its a non-pipelined core with MULW instruction alone from M extension. ,0,hari-haran05/Hi-Five_CPU,525539682,SystemVerilog,Hi-Five_CPU,56765,0,2022-09-08 16:17:42+00:00,"['cpu', 'risc-v', 'rv32i', 'rv32im']",None
797,https://github.com/kanuar/systemverilog_mux2-1.git,2022-09-16 04:22:31+00:00,,0,kanuar/systemverilog_mux2-1,537303198,SystemVerilog,systemverilog_mux2-1,4,0,2022-09-16 04:33:00+00:00,[],None
798,https://github.com/Narinder788/Task3.1.git,2022-09-16 09:44:40+00:00,,0,Narinder788/Task3.1,537396133,SystemVerilog,Task3.1,1,0,2022-09-16 18:27:40+00:00,[],None
799,https://github.com/naveen0215/linux_course.git,2022-09-14 08:56:39+00:00,code ,0,naveen0215/linux_course,536493366,SystemVerilog,linux_course,8,0,2022-09-14 09:22:30+00:00,[],None
800,https://github.com/symmetryyyyy/pulp-testbench.git,2022-09-08 13:08:30+00:00,,0,symmetryyyyy/pulp-testbench,534216647,SystemVerilog,pulp-testbench,5582,0,2022-09-08 13:11:34+00:00,[],
801,https://github.com/jayeshsuyal/UART.git,2022-09-08 18:40:16+00:00,,0,jayeshsuyal/UART,534347787,SystemVerilog,UART,3,0,2022-09-08 18:40:58+00:00,[],None
802,https://github.com/jayeshsuyal/APB_RAM_AXI3.git,2022-09-08 18:44:05+00:00,,1,jayeshsuyal/APB_RAM_AXI3,534349153,SystemVerilog,APB_RAM_AXI3,4,0,2022-09-08 18:46:12+00:00,[],None
803,https://github.com/brmanuel/sha256-pipelined.git,2022-09-11 15:33:10+00:00,,0,brmanuel/sha256-pipelined,535341481,SystemVerilog,sha256-pipelined,4,0,2022-09-11 15:47:46+00:00,[],None
804,https://github.com/shangfucheng/LFSR_ISA_Design.git,2022-09-04 07:36:15+00:00,,0,shangfucheng/LFSR_ISA_Design,532470335,SystemVerilog,LFSR_ISA_Design,740,0,2022-09-08 02:25:33+00:00,[],None
805,https://github.com/shubham-sai47/Posit_Adder_Multiplier.git,2022-08-30 08:49:04+00:00,Parameterized Adder and Multiplier in Posit Number System,2,shubham-sai47/Posit_Adder_Multiplier,530572299,SystemVerilog,Posit_Adder_Multiplier,8,0,2022-08-30 08:52:50+00:00,[],None
806,https://github.com/brandoonward/Rainman-Game.git,2022-05-19 14:43:14+00:00,"A game made in MIPS using Vivado and Nexys4 boards to play a familiar ""Rainman Game"".",0,brandoonward/Rainman-Game,494111640,SystemVerilog,Rainman-Game,86,0,2022-05-19 14:47:22+00:00,[],None
807,https://github.com/ihatedebug/HSD.git,2022-05-27 07:20:31+00:00,,0,ihatedebug/HSD,496901333,SystemVerilog,HSD,11840,0,2022-05-31 01:53:36+00:00,[],None
808,https://github.com/im-world/SystemVerilog-Exercises.git,2022-06-08 13:17:38+00:00,Solutions to the exercises I completed as part of the Cadence SV course,0,im-world/SystemVerilog-Exercises,501259100,SystemVerilog,SystemVerilog-Exercises,19,0,2022-06-08 13:21:14+00:00,[],https://api.github.com/licenses/gpl-3.0
809,https://github.com/adhyansuri/Pulse-Width-Modulator.git,2022-06-07 19:52:51+00:00,,0,adhyansuri/Pulse-Width-Modulator,500984295,SystemVerilog,Pulse-Width-Modulator,2,0,2022-06-07 19:53:14+00:00,[],None
810,https://github.com/MichalBlk/fiona.git,2022-06-19 09:42:25+00:00,,0,MichalBlk/fiona,505067470,SystemVerilog,fiona,10,0,2022-06-19 09:46:23+00:00,[],None
811,https://github.com/mehhdiii/RISC-V-5-stage-pipeline.git,2022-05-17 23:41:00+00:00,,0,mehhdiii/RISC-V-5-stage-pipeline,493445911,SystemVerilog,RISC-V-5-stage-pipeline,6,0,2022-05-18 02:28:27+00:00,[],https://api.github.com/licenses/mit
812,https://github.com/behcetmuhammed/RISC-V-Tabanli-Islemci-Tasarimi.git,2022-05-16 17:53:42+00:00,,0,behcetmuhammed/RISC-V-Tabanli-Islemci-Tasarimi,492943179,SystemVerilog,RISC-V-Tabanli-Islemci-Tasarimi,8080,0,2022-05-16 17:56:48+00:00,[],None
813,https://github.com/JinsonWu/Digital_Circuit_and_System_Implementation.git,2022-05-20 05:48:28+00:00,,0,JinsonWu/Digital_Circuit_and_System_Implementation,494337065,SystemVerilog,Digital_Circuit_and_System_Implementation,13154,0,2022-05-20 06:08:56+00:00,[],None
814,https://github.com/yasho2249/ece593_project.git,2022-05-21 02:36:36+00:00,,1,yasho2249/ece593_project,494660805,SystemVerilog,ece593_project,1236,0,2022-05-21 02:50:36+00:00,[],None
815,https://github.com/10RE/VE470-repo.git,2022-05-21 20:07:41+00:00,,0,10RE/VE470-repo,494884359,SystemVerilog,VE470-repo,1586,0,2022-05-21 20:17:12+00:00,[],None
816,https://github.com/mio-19/uart.v.git,2022-05-26 02:47:04+00:00,uart for verilog based on https://github.com/pConst/basic_verilog,0,mio-19/uart.v,496459172,SystemVerilog,uart.v,4,0,2022-05-26 02:48:50+00:00,[],None
817,https://github.com/djak1/Verifikacija.git,2022-05-26 12:45:23+00:00,,0,djak1/Verifikacija,496617188,SystemVerilog,Verifikacija,0,0,2022-05-26 12:46:01+00:00,[],None
818,https://github.com/AlExx1022/Pseudo-Random-Pattern.git,2022-05-15 16:17:13+00:00,Pseudo Random Pattern,0,AlExx1022/Pseudo-Random-Pattern,492538923,SystemVerilog,Pseudo-Random-Pattern,2,0,2022-05-15 16:18:01+00:00,[],None
819,https://github.com/a29712049/Hierarchical-Design-of-3-8-decoder.git,2022-06-27 02:37:52+00:00,,0,a29712049/Hierarchical-Design-of-3-8-decoder,507739983,SystemVerilog,Hierarchical-Design-of-3-8-decoder,29,0,2022-06-27 02:38:23+00:00,[],None
820,https://github.com/bolero021/HDLbits.git,2022-07-06 03:51:34+00:00,,0,bolero021/HDLbits,510979489,SystemVerilog,HDLbits,15,0,2022-07-06 03:51:42+00:00,[],None
821,https://github.com/hwcho1/test.git,2022-06-09 05:44:16+00:00,test,0,hwcho1/test,501520058,SystemVerilog,test,7,0,2022-06-10 01:06:14+00:00,[],None
822,https://github.com/TatshSiow/HW4.git,2022-06-11 04:44:18+00:00,BCD碼上數計數器,0,TatshSiow/HW4,502251567,SystemVerilog,HW4,1,0,2022-06-11 04:44:51+00:00,[],None
823,https://github.com/SangTruongTan/Lab3_RMIT.git,2022-05-15 16:41:54+00:00,,0,SangTruongTan/Lab3_RMIT,492544963,SystemVerilog,Lab3_RMIT,21135,0,2022-05-15 16:42:16+00:00,[],None
824,https://github.com/siglabsoss/Daryl-Workspace.git,2022-07-10 21:52:17+00:00,,0,siglabsoss/Daryl-Workspace,512547247,SystemVerilog,Daryl-Workspace,15928,0,2022-07-10 21:52:47+00:00,[],https://api.github.com/licenses/bsd-3-clause
825,https://github.com/marcotulio956/neuron.modelingIC.git,2022-07-28 03:26:41+00:00,,0,marcotulio956/neuron.modelingIC,518686894,SystemVerilog,neuron.modelingIC,12,0,2022-08-10 01:12:28+00:00,"['floating-point', 'izhikevich-model', 'neuromorphic', 'neuron', 'systemverilog']",None
826,https://github.com/xhulio11/HW-2-Project.git,2022-07-29 16:45:17+00:00,,0,xhulio11/HW-2-Project,519285121,SystemVerilog,HW-2-Project,1799,0,2022-07-29 16:47:08+00:00,[],None
827,https://github.com/va1ery/clean_mhrd.git,2022-07-17 04:35:02+00:00,,0,va1ery/clean_mhrd,514747002,SystemVerilog,clean_mhrd,79,0,2022-07-17 04:38:38+00:00,[],None
828,https://github.com/KevinPrakash/carry_save_multiplier.git,2022-07-17 05:03:41+00:00,Carry save multiplier coded in system verilog,0,KevinPrakash/carry_save_multiplier,514751126,SystemVerilog,carry_save_multiplier,104,0,2022-07-17 05:04:16+00:00,[],https://api.github.com/licenses/gpl-3.0
829,https://github.com/DIPS6114/fifo_bfm_topology-.git,2022-07-21 14:35:49+00:00,,0,DIPS6114/fifo_bfm_topology-,516407247,SystemVerilog,fifo_bfm_topology-,10,0,2022-07-21 14:47:28+00:00,[],None
830,https://github.com/QuocVDo/2UCIS-CPU-Architecture.git,2022-07-27 22:28:32+00:00,2UCIS is a compact RISC archictecture CPU with support for a custom instruction set. ,0,QuocVDo/2UCIS-CPU-Architecture,518628518,SystemVerilog,2UCIS-CPU-Architecture,948,0,2022-07-27 22:49:31+00:00,[],None
831,https://github.com/ngrabbs/arm_projects.git,2022-07-28 11:13:14+00:00,ARM single cycle processor on nandland.com go-board,0,ngrabbs/arm_projects,518813875,SystemVerilog,arm_projects,21872,0,2023-10-22 17:03:48+00:00,"['fpga', 'fpga-programming', 'fpga-soc', 'arm', 'assembler', 'assembly', 'embedded', 'hdl', 'ice40', 'system-architecture', 'system-design', 'systemverilog']",None
832,https://github.com/TDD-II-22/lab1-g03.git,2022-08-06 03:15:37+00:00,lab1-g03 created by GitHub Classroom,0,TDD-II-22/lab1-g03,521834183,SystemVerilog,lab1-g03,7507,0,2022-08-22 05:40:26+00:00,[],None
833,https://github.com/paptil9/edge_detector.git,2022-09-18 22:05:09+00:00,,0,paptil9/edge_detector,538253203,SystemVerilog,edge_detector,19,0,2022-09-18 22:06:59+00:00,[],None
834,https://github.com/MadejSzymon/de0nano_led_pwm.git,2022-09-22 15:35:06+00:00,PWM on DE0-Nano LED's,0,MadejSzymon/de0nano_led_pwm,540050627,SystemVerilog,de0nano_led_pwm,80,0,2022-09-22 15:35:50+00:00,[],None
835,https://github.com/MIET-APS-Labs/RISC-V_based_CPU.git,2022-09-24 11:30:04+00:00,"Creating my own 32 bit ALU based on RISC-V architecture, extended with simple SIMD commands",1,MIET-APS-Labs/RISC-V_based_CPU,540806779,SystemVerilog,RISC-V_based_CPU,338,0,2022-10-10 22:29:53+00:00,[],https://api.github.com/licenses/mit
836,https://github.com/dqgarcia/fpga-final.git,2022-07-02 05:11:15+00:00,,0,dqgarcia/fpga-final,509664374,SystemVerilog,fpga-final,6,0,2022-07-02 06:03:21+00:00,[],None
837,https://github.com/zhwren/vcs.git,2022-07-03 02:52:29+00:00,,0,zhwren/vcs,509907803,SystemVerilog,vcs,3,0,2022-07-03 03:03:57+00:00,[],None
838,https://github.com/imjp2020/System-Verilog-Tutorial.git,2022-08-27 09:33:09+00:00,Explorations of System-Verilog for Verification ,0,imjp2020/System-Verilog-Tutorial,529540779,SystemVerilog,System-Verilog-Tutorial,30,0,2022-09-23 08:52:14+00:00,"['clocking', 'constraints', 'inteface', 'oops', 'randomization']",https://api.github.com/licenses/apache-2.0
839,https://github.com/wunonomei/test.git,2022-08-19 07:40:05+00:00,,0,wunonomei/test,526509368,SystemVerilog,test,3,0,2022-09-03 07:18:04+00:00,[],None
840,https://github.com/anmehta4/ece554_minilab1.git,2022-09-08 22:40:00+00:00,,0,anmehta4/ece554_minilab1,534417234,SystemVerilog,ece554_minilab1,692,0,2022-09-15 19:25:11+00:00,[],None
841,https://github.com/AhsanAliUet/simple-ready-valid-handshake-protocol-interface.git,2022-09-09 03:43:09+00:00,"In this repository, a simple ready-valid protocol is implemented in System Verilog and tested carefully according to AMBA specifications.",0,AhsanAliUet/simple-ready-valid-handshake-protocol-interface,534487311,SystemVerilog,simple-ready-valid-handshake-protocol-interface,39,0,2022-09-09 03:53:50+00:00,[],None
842,https://github.com/jayantjaiswal100/Car-Parking-System.git,2022-09-07 19:21:11+00:00,,0,jayantjaiswal100/Car-Parking-System,533908725,SystemVerilog,Car-Parking-System,4,0,2022-09-09 19:09:39+00:00,[],None
843,https://github.com/haseebnadeem/practice-sv.git,2022-09-07 08:03:41+00:00,,0,haseebnadeem/practice-sv,533666841,SystemVerilog,practice-sv,9,0,2022-09-07 08:05:24+00:00,[],None
844,https://github.com/anmehta4/Basic-Hardware-Projects.git,2022-08-26 18:28:12+00:00,,0,anmehta4/Basic-Hardware-Projects,529366048,SystemVerilog,Basic-Hardware-Projects,45,0,2022-08-26 22:31:46+00:00,[],None
845,https://github.com/romantitovmephi/MIPS.git,2022-08-29 11:40:07+00:00,,0,romantitovmephi/MIPS,530193030,SystemVerilog,MIPS,44,0,2022-08-29 12:52:47+00:00,[],None
846,https://github.com/uw-acme/CERN_RD53B_SEE.git,2022-09-01 20:35:47+00:00,Single-event-upset resync for RD53B ASIC serial interface,0,uw-acme/CERN_RD53B_SEE,531678099,SystemVerilog,CERN_RD53B_SEE,74744,0,2022-09-09 21:27:36+00:00,[],None
847,https://github.com/AhsanAliUet/uart-transmitter-Tx-implementation-in-system-verilog.git,2022-09-13 11:07:06+00:00,We have implemented UART (Universal Asynchronous Receiver Transmitter) using System Verilog. ,0,AhsanAliUet/uart-transmitter-Tx-implementation-in-system-verilog,536085633,SystemVerilog,uart-transmitter-Tx-implementation-in-system-verilog,610,0,2022-09-21 19:48:33+00:00,[],None
848,https://github.com/nishtahir/rv32i.git,2022-09-10 23:10:59+00:00,An incomplete rv32i implementation,0,nishtahir/rv32i,535140653,SystemVerilog,rv32i,201,0,2022-11-07 14:49:10+00:00,[],https://api.github.com/licenses/apache-2.0
849,https://github.com/RachelRachelRachelRachel/DigitalDesign-and-ComputerArchitecture-RSIC-V-Edition-Tony-s-example-and-practicing.git,2022-09-16 08:39:53+00:00,,0,RachelRachelRachelRachel/DigitalDesign-and-ComputerArchitecture-RSIC-V-Edition-Tony-s-example-and-practicing,537374590,SystemVerilog,DigitalDesign-and-ComputerArchitecture-RSIC-V-Edition-Tony-s-example-and-practicing,3,0,2022-09-16 08:54:49+00:00,[],None
850,https://github.com/mohammed-nurulhoque/r55.git,2022-08-21 20:10:27+00:00,,0,mohammed-nurulhoque/r55,527315718,SystemVerilog,r55,6,0,2023-12-14 09:43:44+00:00,[],None
851,https://github.com/FPGA-James/common_lib.git,2022-08-08 14:55:44+00:00,A selection of commonly used IP ,0,FPGA-James/common_lib,522593043,SystemVerilog,common_lib,9,0,2022-08-08 20:51:54+00:00,[],None
852,https://github.com/arctic-marmoset/nebula.git,2022-06-16 08:14:06+00:00,A RISC-V RV32I core written in SystemVerilog for learning purposes.,0,arctic-marmoset/nebula,504069824,SystemVerilog,nebula,33,0,2024-01-03 20:23:39+00:00,[],https://api.github.com/licenses/mit
853,https://github.com/taneroksuz/wolv-z4.git,2022-06-03 13:16:27+00:00,Wolv Z4 is a RISC-V CPU core with floating point unit,1,taneroksuz/wolv-z4,499518023,SystemVerilog,wolv-z4,317,0,2024-04-09 21:00:45+00:00,"['fpu', 'hardware', 'risc-v', 'rv32', 'cpu', 'core', 'fpga']",https://api.github.com/licenses/apache-2.0
854,https://github.com/choiyeonwooo/QUIQCL.git,2022-05-24 15:34:16+00:00,,0,choiyeonwooo/QUIQCL,495884555,SystemVerilog,QUIQCL,104,0,2022-05-24 15:49:29+00:00,[],None
855,https://github.com/kareemfarahat/32-bit-pipelined-ARM-processor.git,2022-05-21 20:13:57+00:00,"The processor supports the following instructions:  • Data processing instructions where the second source can be either an immediate value or a source register, with no shifts. The data processing instructions must include ADD, SUB, AND, ORR, BIC, and EOR. The Arithmetic Logic Unit (ALU) must be extended to support all these instructions but try to minimize the number of logic gates in the ALU as much as you can. • The LDR and STR instructions with positive immediate offset (offset mode). • Branch instruction  Also, the processor must handle the following hazards: • Read After Write (RAW) Hazard • LDR Hazard • Control Hazards due to Branch or PC write",0,kareemfarahat/32-bit-pipelined-ARM-processor,494885514,SystemVerilog,32-bit-pipelined-ARM-processor,176,0,2022-05-21 20:19:08+00:00,[],None
856,https://github.com/Portgas97/fpga_full_hash_algorithm_des_sbox.git,2022-05-11 15:49:01+00:00,Simple implementation of an hash module based on the S-box of DES algorithm,0,Portgas97/fpga_full_hash_algorithm_des_sbox,491176641,SystemVerilog,fpga_full_hash_algorithm_des_sbox,1367,0,2022-06-27 17:11:04+00:00,[],None
857,https://github.com/SteveLRojas/NeonFox_DE1.git,2022-05-18 02:21:34+00:00,NeonFox CPU and platform adapted to to the Terasic DE1 board.,0,SteveLRojas/NeonFox_DE1,493479517,SystemVerilog,NeonFox_DE1,383,0,2022-05-18 02:26:19+00:00,[],None
858,https://github.com/pantanag/Convolution-Accelerator-VLSI.git,2022-05-18 14:33:19+00:00,Optional Project for the course VLSI in the 8th semester of University.,1,pantanag/Convolution-Accelerator-VLSI,493700280,SystemVerilog,Convolution-Accelerator-VLSI,6359,0,2022-05-18 15:51:37+00:00,"['accelerator', 'convolution', 'systemverilog', 'vlsi']",None
859,https://github.com/AlexNguyenJJ/ece111-hw6.git,2022-05-21 07:06:14+00:00,,0,AlexNguyenJJ/ece111-hw6,494707603,SystemVerilog,ece111-hw6,7,0,2022-05-21 07:08:46+00:00,[],None
860,https://github.com/yoav-git/HDL.git,2022-05-31 12:58:30+00:00,System Verilog,0,yoav-git/HDL,498336877,SystemVerilog,HDL,136,0,2022-05-31 14:22:02+00:00,[],None
861,https://github.com/muzammil002/Verilog_Lab.git,2022-05-31 09:29:39+00:00,,0,muzammil002/Verilog_Lab,498270014,SystemVerilog,Verilog_Lab,12903,0,2022-05-31 09:33:22+00:00,[],None
862,https://github.com/qianlinxyc/clk_uvc.git,2022-06-18 02:45:27+00:00,,0,qianlinxyc/clk_uvc,504726717,SystemVerilog,clk_uvc,2,0,2022-06-18 02:46:46+00:00,[],None
863,https://github.com/sasonii/digitalsystems_tests_spring2022_ex2.git,2022-06-19 07:16:32+00:00,digitalsystems_tests_spring2022,0,sasonii/digitalsystems_tests_spring2022_ex2,505038771,SystemVerilog,digitalsystems_tests_spring2022_ex2,4,0,2022-06-19 07:17:18+00:00,[],None
864,https://github.com/anhdv0/KTMT_RISCV.git,2022-06-28 17:40:08+00:00,,0,anhdv0/KTMT_RISCV,508398046,SystemVerilog,KTMT_RISCV,3948,0,2022-06-28 17:40:31+00:00,[],None
865,https://github.com/tarun-prakash/PSD_CHIP_V2.git,2022-07-06 20:21:39+00:00,,0,tarun-prakash/PSD_CHIP_V2,511281040,SystemVerilog,PSD_CHIP_V2,56,0,2022-07-06 20:22:53+00:00,[],None
866,https://github.com/JamesEdgeley/FPGA.git,2022-07-26 11:03:31+00:00,,0,JamesEdgeley/FPGA,518025460,SystemVerilog,FPGA,1,0,2022-07-26 11:03:38+00:00,[],None
867,https://github.com/versonforgit/learn-systemverilog.git,2022-07-13 01:31:49+00:00,验证,0,versonforgit/learn-systemverilog,513342791,SystemVerilog,learn-systemverilog,15,0,2022-08-03 11:47:05+00:00,[],None
868,https://github.com/diogoasilveira/LOAC-UFCG.git,2022-06-07 14:40:06+00:00,Repositório para as atividades da disciplina de LOAC do curso de Ciência da Computação da UFCG,0,diogoasilveira/LOAC-UFCG,500879788,SystemVerilog,LOAC-UFCG,90,0,2023-01-11 00:18:19+00:00,[],None
869,https://github.com/millfi/CPU-RV32I.git,2022-06-03 08:59:08+00:00,,0,millfi/CPU-RV32I,499444773,SystemVerilog,CPU-RV32I,483,0,2023-08-18 08:47:58+00:00,[],https://api.github.com/licenses/unlicense
870,https://github.com/orzelAr3k/FPGA-procesor.git,2022-06-03 10:39:53+00:00,,0,orzelAr3k/FPGA-procesor,499472824,SystemVerilog,FPGA-procesor,216,0,2022-06-03 10:48:30+00:00,[],None
871,https://github.com/MrShelDie/Cordic.git,2022-06-07 01:59:40+00:00,"Two implementations of the Cordic algorithm for fast calculation of sine and cosine on FPGAs: the first - by iterative method, the second - using pipelines.",0,MrShelDie/Cordic,500655305,SystemVerilog,Cordic,7,0,2022-06-07 02:01:30+00:00,[],None
872,https://github.com/c28504693/HW5-PRPG.git,2022-06-11 12:24:36+00:00,,0,c28504693/HW5-PRPG,502341479,SystemVerilog,HW5-PRPG,1,0,2022-06-11 12:25:49+00:00,[],None
873,https://github.com/lixing865/FPGA_072.git,2022-06-06 07:14:05+00:00,проект для ПЛИС,0,lixing865/FPGA_072,500329707,,FPGA_072,2033221,0,2022-07-15 13:20:08+00:00,[],None
874,https://github.com/PaulManriquez/MIPS-Monocycle-18-08-22.git,2022-08-18 21:01:23+00:00,,0,PaulManriquez/MIPS-Monocycle-18-08-22,526371709,SystemVerilog,MIPS-Monocycle-18-08-22,1559,0,2022-08-18 21:04:57+00:00,[],None
875,https://github.com/tzchuen/sample-verilog.git,2022-07-21 18:25:04+00:00,,0,tzchuen/sample-verilog,516480217,SystemVerilog,sample-verilog,2717,0,2022-07-21 18:31:21+00:00,[],None
876,https://github.com/silicanet/opentitan.git,2022-07-07 14:23:01+00:00,,0,silicanet/opentitan,511558129,SystemVerilog,opentitan,57644,0,2022-07-07 17:12:08+00:00,[],https://api.github.com/licenses/apache-2.0
877,https://github.com/luizademelo/TP-ISL-2022-1.git,2022-07-21 14:52:22+00:00,Trabalho realizado na disciplina de Introdução aos Sistemas Lógicos em 2022/1,0,luizademelo/TP-ISL-2022-1,516413236,SystemVerilog,TP-ISL-2022-1,0,0,2022-07-21 14:53:51+00:00,[],None
878,https://github.com/AP090/AtomicSoC.git,2022-08-02 19:09:00+00:00,An FPGA-based control system for atomic physics experiments. Principal credit to Will Lunden.,0,AP090/AtomicSoC,520619798,SystemVerilog,AtomicSoC,180132,0,2022-08-03 17:16:08+00:00,[],None
879,https://github.com/ZongzeL/NPU_v2_work.git,2022-08-15 21:07:40+00:00,,0,ZongzeL/NPU_v2_work,525139356,SystemVerilog,NPU_v2_work,87,0,2022-08-27 02:23:34+00:00,[],None
880,https://github.com/merajhasan88/jpegdecoder-systemverilog.git,2022-08-26 15:12:22+00:00,JPEG Decoder in SystemVerilog,0,merajhasan88/jpegdecoder-systemverilog,529305335,SystemVerilog,jpegdecoder-systemverilog,256,0,2022-08-26 15:17:01+00:00,[],None
881,https://github.com/imjp2020/UVM-Learning.git,2022-08-27 09:36:21+00:00,Universal Verification Methodology basics,0,imjp2020/UVM-Learning,529541383,SystemVerilog,UVM-Learning,14,0,2022-09-22 15:32:13+00:00,[],https://api.github.com/licenses/mit
882,https://github.com/Andrew-Makin/Frogger.git,2022-08-25 00:49:33+00:00,Frogger game I built in System Verilog for Intro to Digital Design at the University of Washington,0,Andrew-Makin/Frogger,528643181,SystemVerilog,Frogger,4332,0,2022-08-25 00:51:08+00:00,[],None
883,https://github.com/UandersonSilva/floating_point.git,2022-09-20 13:33:03+00:00,Development of floating point devices in SystemVerilog.,0,UandersonSilva/floating_point,539005488,SystemVerilog,floating_point,997,0,2023-01-07 15:22:24+00:00,[],None
884,https://github.com/dh73/MaskMyBit.git,2022-09-04 19:34:42+00:00,Boolean Masking Implementation Sandbox Examples,0,dh73/MaskMyBit,532638997,SystemVerilog,MaskMyBit,4694,0,2022-09-04 19:36:43+00:00,[],None
885,https://github.com/PhenomIIX6/PhenomIIX6.git,2022-09-01 03:30:52+00:00,Config files for my GitHub profile.,0,PhenomIIX6/PhenomIIX6,531349402,SystemVerilog,PhenomIIX6,10,0,2022-09-01 03:36:11+00:00,"['config', 'github-config']",None
886,https://github.com/Moizali21/100-Days-Of-RTL---SV-.git,2022-09-07 07:32:35+00:00,I am using System Verilog Language  ,0,Moizali21/100-Days-Of-RTL---SV-,533656709,SystemVerilog,100-Days-Of-RTL---SV-,11,0,2022-09-08 09:33:39+00:00,[],None
887,https://github.com/Carlos12001/gray_code_decoder.git,2022-09-22 20:39:35+00:00,"This project contain the source code in Vivado of a decode the Gray coding. This project will be implement in a FPGA, and this will be show the number in bin and in hex value.",0,Carlos12001/gray_code_decoder,540161934,SystemVerilog,gray_code_decoder,396,0,2022-10-13 19:16:21+00:00,[],None
888,https://github.com/nipulkumar-11/ivl_uvm_dir_wise.git,2022-09-23 14:07:06+00:00,,0,nipulkumar-11/ivl_uvm_dir_wise,540470062,SystemVerilog,ivl_uvm_dir_wise,1818,0,2022-09-23 14:07:31+00:00,[],None
889,https://github.com/Montuck/UART-Digital-Circuit.git,2022-09-23 20:28:51+00:00,,0,Montuck/UART-Digital-Circuit,540606941,SystemVerilog,UART-Digital-Circuit,23,0,2022-09-30 20:41:52+00:00,[],None
890,https://github.com/Ckkyo/DPSK.git,2022-09-15 03:10:57+00:00,,0,Ckkyo/DPSK,536845535,SystemVerilog,DPSK,774,0,2022-09-15 03:59:23+00:00,[],
891,https://github.com/01fe21mve004/01FE21MVEOO4-ADLV.git,2022-09-13 06:12:01+00:00,ADLV,0,01fe21mve004/01FE21MVEOO4-ADLV,535983600,SystemVerilog,01FE21MVEOO4-ADLV,50,0,2022-09-13 06:14:30+00:00,[],None
892,https://github.com/IvanRenison/Practico1_arquitectura_de_computadoras__SingleCycleProcessor.git,2022-08-27 21:23:53+00:00,,0,IvanRenison/Practico1_arquitectura_de_computadoras__SingleCycleProcessor,529699906,SystemVerilog,Practico1_arquitectura_de_computadoras__SingleCycleProcessor,111,0,2023-08-30 12:12:39+00:00,[],None
893,https://github.com/MUBEENAUQI/Verilog_programs.git,2022-09-07 19:30:07+00:00,Learning verilog programs,0,MUBEENAUQI/Verilog_programs,533911749,SystemVerilog,Verilog_programs,23,0,2022-09-07 19:32:25+00:00,[],None
894,https://github.com/bwtinplace/bwtinplace.git,2022-08-30 14:02:42+00:00,Hardware implementation for Burrows-Wheeler transform in O(1) space.,0,bwtinplace/bwtinplace,530683530,SystemVerilog,bwtinplace,5,0,2022-09-02 21:31:24+00:00,[],None
895,https://github.com/reigenatk/385-week-5.git,2022-09-18 17:41:47+00:00,week 5 part 1 save point,0,reigenatk/385-week-5,538190025,SystemVerilog,385-week-5,25,0,2023-04-11 22:07:16+00:00,[],None
896,https://github.com/FTBF/ITA-BPM-firmware.git,2022-09-09 16:29:28+00:00,,0,FTBF/ITA-BPM-firmware,534720645,SystemVerilog,ITA-BPM-firmware,167,0,2022-09-16 22:27:46+00:00,[],None
897,https://github.com/ALTair700/SV_For_Design.git,2022-09-12 07:49:45+00:00,Training Book,0,ALTair700/SV_For_Design,535562494,SystemVerilog,SV_For_Design,2,0,2022-09-21 11:55:37+00:00,[],None
898,https://github.com/JelluJane/fpga.git,2022-06-22 22:32:52+00:00,,0,JelluJane/fpga,506424627,SystemVerilog,fpga,17254,0,2022-07-31 16:25:28+00:00,[],None
899,https://github.com/poorvi01w/Car_Parking_system.git,2022-07-14 14:21:59+00:00,,0,poorvi01w/Car_Parking_system,513930891,SystemVerilog,Car_Parking_system,4,0,2022-07-14 14:24:10+00:00,[],None
900,https://github.com/Atm06/Project_Traffic-lights-Simlator.git,2022-08-02 04:29:52+00:00,,0,Atm06/Project_Traffic-lights-Simlator,520351112,SystemVerilog,Project_Traffic-lights-Simlator,4,0,2022-08-02 04:30:51+00:00,[],https://api.github.com/licenses/mit
901,https://github.com/piyushagrawal4578/branching1.git,2022-08-11 06:04:13+00:00,,0,piyushagrawal4578/branching1,523604527,SystemVerilog,branching1,3,0,2022-08-11 10:34:52+00:00,[],None
902,https://github.com/kochaika/verilog-demo.git,2022-09-20 11:47:33+00:00,,0,kochaika/verilog-demo,538961045,SystemVerilog,verilog-demo,4,0,2022-09-20 11:48:31+00:00,[],None
903,https://github.com/Aser-Abdelfatah/Single-Precision-Floating-Point-Multiplier.git,2022-09-03 23:47:28+00:00,"Design, implementation, and testing of a single precision floating point multiplier",0,Aser-Abdelfatah/Single-Precision-Floating-Point-Multiplier,532398157,SystemVerilog,Single-Precision-Floating-Point-Multiplier,157,0,2024-02-29 12:50:31+00:00,[],None
904,https://github.com/HITSZ-NSCSCC22/OpenSource-LA32-CPU.git,2022-08-22 08:27:25+00:00,CPU based on LoongArch32 which was made by 404 not found  from HITSZ ,0,HITSZ-NSCSCC22/OpenSource-LA32-CPU,527475317,SystemVerilog,OpenSource-LA32-CPU,452,0,2024-03-26 06:22:06+00:00,[],None
905,https://github.com/brucexi999/UBC-CPEN-211.git,2022-06-13 17:22:49+00:00,,0,brucexi999/UBC-CPEN-211,503050489,SystemVerilog,UBC-CPEN-211,32714,0,2024-04-03 18:26:05+00:00,[],None
906,https://github.com/ptrvsrg/NSU-digital-design.git,2022-05-26 12:18:24+00:00,"Итоговый проект дисциплины ""Цифровая схемотехника"" 2 семестра ФИТ НГУ",0,ptrvsrg/NSU-digital-design,496608562,SystemVerilog,NSU-digital-design,1363,0,2023-08-16 13:16:44+00:00,[],https://api.github.com/licenses/mit
907,https://github.com/kaz778/CNN_Hardware.git,2022-05-25 06:37:38+00:00,,0,kaz778/CNN_Hardware,496111777,SystemVerilog,CNN_Hardware,70,0,2022-11-09 08:46:08+00:00,[],None
908,https://github.com/andrewboutros/npu-2.0.git,2022-08-03 12:48:35+00:00,,0,andrewboutros/npu-2.0,520878031,SystemVerilog,npu-2.0,11,0,2022-08-03 12:51:46+00:00,[],https://api.github.com/licenses/mit
909,https://github.com/MinhTran0911/UART_DE10.git,2022-07-30 14:44:31+00:00,UART Receiver and Transmitter using Terasic DE-10 Standard FPGA,0,MinhTran0911/UART_DE10,519542037,SystemVerilog,UART_DE10,18599,0,2022-08-06 08:10:36+00:00,"['systemverilog', 'altera-fpga', 'hardware-description-language', 'hdl', 'modelsim', 'quartus-prime', 'uart', 'terasic-de10-standard']",None
910,https://github.com/NermeenMohammed-M/FFT.git,2022-08-04 18:53:11+00:00,,0,NermeenMohammed-M/FFT,521381712,SystemVerilog,FFT,3,0,2022-08-04 18:55:54+00:00,[],None
911,https://github.com/ishmemon/EE-271-Digital-Circuits-and-Systems.git,2022-06-13 01:37:17+00:00,These are the projects I created for UW's EE 271 course.,0,ishmemon/EE-271-Digital-Circuits-and-Systems,502770784,SystemVerilog,EE-271-Digital-Circuits-and-Systems,76,0,2022-06-13 01:43:18+00:00,[],None
912,https://github.com/shaarawy29/ALU_tb.git,2022-08-07 22:54:41+00:00,,0,shaarawy29/ALU_tb,522342878,SystemVerilog,ALU_tb,53,0,2022-08-16 23:27:50+00:00,[],None
913,https://github.com/Anshuman0029/Task.git,2022-08-06 16:11:49+00:00,,0,Anshuman0029/Task,521994068,SystemVerilog,Task,20,0,2022-08-06 16:15:45+00:00,[],None
914,https://github.com/JZJisawesome/vgacpu.git,2022-07-02 14:16:12+00:00,"A small core implementing a custom ISA running on the same clock as a VGA driver. Written in SV, with the purpose of refreshing myself on how to use the HDL (I'm a bit rusty :))",0,JZJisawesome/vgacpu,509774251,SystemVerilog,vgacpu,1157,0,2022-08-14 15:49:57+00:00,[],https://api.github.com/licenses/mit
915,https://github.com/Benisneb/RISC_16b_Proof_Of_Concept.git,2022-07-26 18:32:21+00:00,,0,Benisneb/RISC_16b_Proof_Of_Concept,518175990,SystemVerilog,RISC_16b_Proof_Of_Concept,3791,0,2022-07-26 19:15:47+00:00,[],None
916,https://github.com/alexc0888/fourBitGreaterThanComparator.git,2022-07-29 06:02:51+00:00,Four Bit Greater Than Magnitude Comparator built in System Verilog at the Gate Level,0,alexc0888/fourBitGreaterThanComparator,519098747,SystemVerilog,fourBitGreaterThanComparator,17,0,2022-07-29 06:07:18+00:00,[],None
917,https://github.com/RookieLT/lukeverif.git,2022-07-27 13:43:50+00:00,,0,RookieLT/lukeverif,518475311,SystemVerilog,lukeverif,22892,0,2022-07-27 13:53:14+00:00,[],None
918,https://github.com/supreetgulavani/SystemVerilog_Projects.git,2022-07-10 23:26:09+00:00,,0,supreetgulavani/SystemVerilog_Projects,512561136,SystemVerilog,SystemVerilog_Projects,1815,0,2022-07-10 23:37:40+00:00,[],None
919,https://github.com/SkyWalker0006/AHB-Lite-Slave-VIP.git,2022-07-15 03:46:22+00:00,,0,SkyWalker0006/AHB-Lite-Slave-VIP,514125435,,AHB-Lite-Slave-VIP,20,0,2022-03-06 10:03:28+00:00,[],None
920,https://github.com/Alireza-Zwolf/MIPS-PROCESSOR.git,2022-07-13 11:13:26+00:00,An Implementation of MIPS processor with single/multi-cycle architecture using SystemVerilog language.,0,Alireza-Zwolf/MIPS-PROCESSOR,513489957,SystemVerilog,MIPS-PROCESSOR,1850,0,2022-09-19 16:47:51+00:00,"['hardware-designs', 'hdl', 'mips', 'mips-assembly', 'processor-architecture', 'system-verilog', 'verilog', 'verilog-hdl']",None
921,https://github.com/a29712049/BCD-To-7.git,2022-06-27 02:46:28+00:00,,0,a29712049/BCD-To-7,507741572,SystemVerilog,BCD-To-7,43,0,2022-06-27 02:46:50+00:00,[],None
922,https://github.com/IgDROP/Universal-modulator.git,2022-06-28 18:11:59+00:00,,0,IgDROP/Universal-modulator,508407643,SystemVerilog,Universal-modulator,6,0,2022-11-26 12:33:57+00:00,[],None
923,https://github.com/mk-khalil/pipelined-ARM-processor-using-system-Verilog.git,2022-06-27 10:14:32+00:00,"In this project, pipelined ARM processor is implemented using system Verilog, and it supports data processing, memory, and branch instructions. It also handles all the necessary hazards.",0,mk-khalil/pipelined-ARM-processor-using-system-Verilog,507858928,SystemVerilog,pipelined-ARM-processor-using-system-Verilog,8,0,2022-06-27 10:16:54+00:00,[],None
924,https://github.com/henriqueeraraujo/Projeto_Concepcao_Estruturada_02.git,2022-06-01 13:38:49+00:00,Projeto da Unidade 02 da disciplina Concepção Estruturada de Circuitos Integrados,0,henriqueeraraujo/Projeto_Concepcao_Estruturada_02,498751491,SystemVerilog,Projeto_Concepcao_Estruturada_02,6,0,2022-06-01 14:14:15+00:00,[],None
925,https://github.com/cristian-grecu/ELEC391-mem-tutorial-exercise.git,2022-05-18 21:48:07+00:00,Quartus memory tutorial,0,cristian-grecu/ELEC391-mem-tutorial-exercise,493835090,SystemVerilog,ELEC391-mem-tutorial-exercise,186,0,2022-05-25 18:10:28+00:00,[],None
926,https://github.com/neekoli/pulp_soc_neeko.git,2022-05-17 08:55:09+00:00,,0,neekoli/pulp_soc_neeko,493171186,SystemVerilog,pulp_soc_neeko,111,0,2022-05-17 08:56:42+00:00,[],
927,https://github.com/whitewalker08/AXI_4_STREAM.git,2022-06-09 01:11:49+00:00,,1,whitewalker08/AXI_4_STREAM,501460964,SystemVerilog,AXI_4_STREAM,64,0,2022-06-09 02:08:20+00:00,[],None
928,https://github.com/Darcywantloli/BCD-counter.git,2022-06-06 06:02:05+00:00,,0,Darcywantloli/BCD-counter,500310664,SystemVerilog,BCD-counter,2,0,2022-06-06 06:03:30+00:00,[],None
929,https://github.com/MidhunNair43/Graph_Convolution_Neural_Network.git,2022-06-18 07:12:45+00:00,ASIC Acceleration for Graph Convolutional Neural Networks (GCNs) ,0,MidhunNair43/Graph_Convolution_Neural_Network,504772221,SystemVerilog,Graph_Convolution_Neural_Network,612,0,2022-06-23 16:15:49+00:00,[],None
930,https://github.com/smithtanium/Bitcoin-sha256hash.git,2022-06-19 18:58:33+00:00,,0,smithtanium/Bitcoin-sha256hash,505195266,SystemVerilog,Bitcoin-sha256hash,4882,0,2022-06-19 19:05:54+00:00,[],None
931,https://github.com/agithubber777/terasic_de2_115.git,2022-05-31 07:55:54+00:00,Terasic DE2-115 Board,0,agithubber777/terasic_de2_115,498240017,SystemVerilog,terasic_de2_115,24,0,2022-05-31 09:13:14+00:00,[],https://api.github.com/licenses/gpl-3.0
932,https://github.com/MelikaMinaei/Digital-Systems-CA-2.git,2022-06-19 00:16:25+00:00,,0,MelikaMinaei/Digital-Systems-CA-2,504977241,SystemVerilog,Digital-Systems-CA-2,728,0,2023-11-03 02:41:49+00:00,[],None
933,https://github.com/szhao2095/pulp_FSI.git,2022-07-13 01:20:36+00:00,,0,szhao2095/pulp_FSI,513340383,SystemVerilog,pulp_FSI,25,0,2022-07-22 16:06:50+00:00,[],None
934,https://github.com/MidhunNair43/APB_UVM.git,2022-07-09 16:01:01+00:00,Advanced Peripheral Bus,0,MidhunNair43/APB_UVM,512227365,SystemVerilog,APB_UVM,8,0,2022-07-09 17:52:28+00:00,[],None
935,https://github.com/sam10486/NWC_verilog_backup.git,2022-07-20 06:17:46+00:00,,0,sam10486/NWC_verilog_backup,515857900,SystemVerilog,NWC_verilog_backup,1869,0,2022-08-16 15:44:43+00:00,[],None
936,https://github.com/abhishek-pwr/SystemVerilog.git,2022-07-20 08:57:02+00:00,RTL code for Logic Block IPs in System Verilog  ,0,abhishek-pwr/SystemVerilog,515906552,SystemVerilog,SystemVerilog,1,0,2022-07-20 08:59:41+00:00,[],None
937,https://github.com/10RE/VE470_Superscalar.git,2022-07-04 02:06:03+00:00,,1,10RE/VE470_Superscalar,510182466,SystemVerilog,VE470_Superscalar,900,0,2022-07-12 21:13:00+00:00,[],None
938,https://github.com/zdr1999/AHB2APB.git,2022-07-05 16:33:25+00:00,,0,zdr1999/AHB2APB,510815650,SystemVerilog,AHB2APB,27,0,2022-07-05 16:51:13+00:00,[],None
939,https://github.com/ddsff/Code.git,2022-07-11 15:08:10+00:00,,0,ddsff/Code,512804329,SystemVerilog,Code,794,0,2022-07-11 15:08:37+00:00,[],None
940,https://github.com/mitshine/FIFO_BFM_WITH_MAKEFILE.git,2022-07-21 16:18:28+00:00,,0,mitshine/FIFO_BFM_WITH_MAKEFILE,516442214,SystemVerilog,FIFO_BFM_WITH_MAKEFILE,9,0,2022-07-21 16:23:31+00:00,[],None
941,https://github.com/anmehta4/E-Bike-Simulator.git,2022-08-26 21:19:46+00:00,,0,anmehta4/E-Bike-Simulator,529407769,SystemVerilog,E-Bike-Simulator,31186,0,2022-08-26 22:26:23+00:00,[],None
942,https://github.com/Luckman21/misc-verilog-projects.git,2022-09-03 03:36:32+00:00,,0,Luckman21/misc-verilog-projects,532145665,SystemVerilog,misc-verilog-projects,6,0,2022-09-03 03:49:10+00:00,[],None
943,https://github.com/mitshine/clock-period-assertion-check.git,2022-09-09 08:25:31+00:00,clock period realtime assertion check,0,mitshine/clock-period-assertion-check,534560476,SystemVerilog,clock-period-assertion-check,9,0,2022-09-09 08:27:48+00:00,[],None
944,https://github.com/naveen0215/Array_manipulation.git,2022-09-21 04:16:08+00:00,presentation,0,naveen0215/Array_manipulation,539300653,SystemVerilog,Array_manipulation,1,0,2022-09-21 04:29:54+00:00,[],None
945,https://github.com/shaswat2428/UART-Communication-Protocol.git,2022-09-22 18:46:14+00:00,,0,shaswat2428/UART-Communication-Protocol,540123643,SystemVerilog,UART-Communication-Protocol,8,0,2022-09-23 10:09:04+00:00,[],None
946,https://github.com/luophoe/UVM-projects.git,2022-09-22 21:33:53+00:00,,0,luophoe/UVM-projects,540177588,SystemVerilog,UVM-projects,20365,0,2022-09-22 22:17:28+00:00,[],None
947,https://github.com/Anshuman0029/Task4_Credit.git,2022-08-31 15:24:28+00:00,,0,Anshuman0029/Task4_Credit,531143356,SystemVerilog,Task4_Credit,1,0,2022-08-31 15:25:04+00:00,[],None
948,https://github.com/jhladik/icestick-playground.git,2022-09-04 03:04:01+00:00,,0,jhladik/icestick-playground,532424769,SystemVerilog,icestick-playground,42,0,2022-11-04 15:01:25+00:00,[],https://api.github.com/licenses/gpl-3.0
949,https://github.com/melody16843/dclab.git,2022-09-15 06:17:00+00:00,,0,melody16843/dclab,536889445,SystemVerilog,dclab,12358,0,2023-02-20 13:04:36+00:00,[],None
950,https://github.com/sagarpattar05/new4.git,2022-09-16 04:50:03+00:00,,0,sagarpattar05/new4,537308975,SystemVerilog,new4,1,0,2022-09-16 04:57:59+00:00,[],None
951,https://github.com/Caoyuanzhi/ZAP_learn.git,2022-09-16 14:43:03+00:00,,0,Caoyuanzhi/ZAP_learn,537498898,SystemVerilog,ZAP_learn,160,0,2022-09-16 14:45:01+00:00,[],None
952,https://github.com/AladinF/Sobel-Operator.git,2022-09-10 18:54:46+00:00,Applying a Sobel operator to a black and white OV7670 output,0,AladinF/Sobel-Operator,535090892,SystemVerilog,Sobel-Operator,32,0,2022-09-11 16:45:03+00:00,[],None
953,https://github.com/sg-vlsi-experiment/riscv.git,2022-08-17 05:07:49+00:00,,0,sg-vlsi-experiment/riscv,525647234,SystemVerilog,riscv,11,0,2024-01-27 01:10:01+00:00,[],None
954,https://github.com/DarrenWu42/cse141l-processor.git,2022-06-11 09:24:19+00:00,Full custom processor with custom assembly language,0,DarrenWu42/cse141l-processor,502304038,SystemVerilog,cse141l-processor,21,0,2024-01-31 23:47:54+00:00,[],None
955,https://github.com/padung99/Metrotek_LAB2.git,2022-07-01 19:28:38+00:00,,0,padung99/Metrotek_LAB2,509568015,SystemVerilog,Metrotek_LAB2,431,0,2022-07-08 00:25:42+00:00,[],None
956,https://github.com/Lvwings/axi-udp-protocol.git,2022-06-28 02:44:21+00:00,,0,Lvwings/axi-udp-protocol,508131367,SystemVerilog,axi-udp-protocol,28,0,2022-08-26 08:01:10+00:00,[],None
957,https://github.com/chen-ian-rong/HW-3.git,2022-06-26 19:07:33+00:00,,0,chen-ian-rong/HW-3,507661783,SystemVerilog,HW-3,1,0,2022-06-26 19:08:17+00:00,[],None
958,https://github.com/Karthikeyan564/fantastic-octo-waddle.git,2022-06-28 00:20:22+00:00,,0,Karthikeyan564/fantastic-octo-waddle,508101009,SystemVerilog,fantastic-octo-waddle,7539,0,2022-06-28 00:22:17+00:00,[],
959,https://github.com/chen-ian-rong/logic-.git,2022-06-26 14:05:50+00:00,,0,chen-ian-rong/logic-,507590707,SystemVerilog,logic-,20,0,2022-06-26 18:14:55+00:00,[],None
960,https://github.com/WikkiTang/HDLBits-Verilog-Practice.git,2022-07-07 02:44:49+00:00,Codes and notes for HDLBits,0,WikkiTang/HDLBits-Verilog-Practice,511360555,SystemVerilog,HDLBits-Verilog-Practice,107,0,2022-07-14 16:34:24+00:00,[],None
961,https://github.com/albingomes/crc.git,2022-07-07 03:27:26+00:00,,0,albingomes/crc,511369514,SystemVerilog,crc,8,0,2022-07-07 03:36:55+00:00,[],None
962,https://github.com/kkurenkov/uvm_fifo.git,2022-05-19 19:39:36+00:00,example project with fifo VIP,0,kkurenkov/uvm_fifo,494206955,SystemVerilog,uvm_fifo,15,0,2022-05-19 20:29:48+00:00,[],None
963,https://github.com/marwanharuna/2-stage_Caesar_Cipher.git,2022-07-10 11:16:24+00:00,,0,marwanharuna/2-stage_Caesar_Cipher,512414839,SystemVerilog,2-stage_Caesar_Cipher,2586,0,2022-07-10 11:21:26+00:00,[],None
964,https://github.com/cipressino/244_adcechodac.git,2022-07-04 13:48:15+00:00,,0,cipressino/244_adcechodac,510377404,SystemVerilog,244_adcechodac,10,0,2022-07-04 13:49:23+00:00,[],None
965,https://github.com/palmenros/swervolf-soc.git,2022-06-24 11:17:03+00:00,Swervolf SOC,0,palmenros/swervolf-soc,506982268,SystemVerilog,swervolf-soc,507,0,2022-06-24 11:17:21+00:00,[],None
966,https://github.com/alexander459/FPGA-Maze-Video-Game.git,2022-06-16 14:13:37+00:00,,0,alexander459/FPGA-Maze-Video-Game,504182297,SystemVerilog,FPGA-Maze-Video-Game,9,0,2022-06-16 14:14:47+00:00,[],None
967,https://github.com/eminakgun/axis_vip.git,2022-07-10 11:11:45+00:00,AXI Stream VIP,0,eminakgun/axis_vip,512413929,SystemVerilog,axis_vip,103,0,2023-05-13 08:14:15+00:00,[],https://api.github.com/licenses/gpl-3.0
968,https://github.com/tallerditigales/proyecto_final.git,2022-05-14 03:33:09+00:00,Proyecto Final Procesamiento_de_texto,0,tallerditigales/proyecto_final,492102780,SystemVerilog,proyecto_final,4444,0,2022-11-23 22:56:01+00:00,[],None
969,https://github.com/LiamK-Technion/DigSystems_sim1.git,2022-05-12 18:42:25+00:00,"Digital Systems and Computer Structure, Simulation 1, Spring 2022",0,LiamK-Technion/DigSystems_sim1,491630322,SystemVerilog,DigSystems_sim1,1135,0,2022-05-13 11:48:05+00:00,"['alu-digital-circuit', 'full-adder', 'mux']",None
970,https://github.com/comsec-group/cellift-ibex.git,2022-06-09 08:19:39+00:00,The Ibex design frozen and instrumented for the CellIFT paper experiments,1,comsec-group/cellift-ibex,501565212,SystemVerilog,cellift-ibex,1516,0,2022-06-09 10:52:49+00:00,[],https://api.github.com/licenses/apache-2.0
971,https://github.com/Aleksw3/eXtension-Inteface-Wrapper.git,2022-06-10 22:56:07+00:00,,0,Aleksw3/eXtension-Inteface-Wrapper,502200541,SystemVerilog,eXtension-Inteface-Wrapper,5,0,2022-06-10 23:04:53+00:00,[],None
972,https://github.com/ChrisShakkour/AI-risc-V-Hacakthon.git,2022-06-03 09:50:06+00:00,AI riscv-v hackathon competition development repository,0,ChrisShakkour/AI-risc-V-Hacakthon,499459208,SystemVerilog,AI-risc-V-Hacakthon,121908,0,2022-06-11 13:29:22+00:00,[],
973,https://github.com/Claudio-Costanzo/HARDWARE-AND-EMBEDDED-SECURITY.git,2022-08-21 08:45:21+00:00,,0,Claudio-Costanzo/HARDWARE-AND-EMBEDDED-SECURITY,527151063,SystemVerilog,HARDWARE-AND-EMBEDDED-SECURITY,958,0,2022-08-21 09:48:43+00:00,[],None
974,https://github.com/OnurVural/Digital_Design_Works.git,2022-08-08 14:10:35+00:00,My works in regard to Digital_Design course of Bilkent University.,0,OnurVural/Digital_Design_Works,522576017,SystemVerilog,Digital_Design_Works,3800,0,2022-08-08 14:49:40+00:00,[],None
975,https://github.com/Felukov/HdlSamples.git,2022-08-08 06:30:28+00:00,,0,Felukov/HdlSamples,522431483,SystemVerilog,HdlSamples,18,0,2022-08-08 06:30:34+00:00,[],None
976,https://github.com/hakatu/Lab-5-sample.git,2022-08-10 03:48:57+00:00,,0,hakatu/Lab-5-sample,523191369,SystemVerilog,Lab-5-sample,1030,0,2022-11-11 08:47:16+00:00,[],None
977,https://github.com/Me-RajatChaudhary/Designs.git,2022-08-18 14:14:39+00:00,"Basic Combinational, Sequential Designs in Verilog/System Verilog",0,Me-RajatChaudhary/Designs,526240439,SystemVerilog,Designs,439,0,2022-08-18 14:16:00+00:00,[],None
978,https://github.com/MerciaReginasl/FPGA.sv.git,2022-07-26 14:24:07+00:00,Projeto Multiplexador 8x1 - Construção do Projeto testbench (TB) - Simulação utilizando o TB - Utilizando a plataforma EDAPlayground e Linguagem SystemVerilog para desenvolver o TB e DUV.,0,MerciaReginasl/FPGA.sv,518093330,SystemVerilog,FPGA.sv,8,0,2022-08-11 15:11:51+00:00,[],None
979,https://github.com/Karthikeyan564/pulp_soc.git,2022-07-29 07:48:51+00:00,,2,Karthikeyan564/pulp_soc,519127842,SystemVerilog,pulp_soc,107,0,2022-07-29 07:49:36+00:00,[],
980,https://github.com/ahmadrmirzaei/AES.git,2022-08-04 08:54:41+00:00,,0,ahmadrmirzaei/AES,521193315,SystemVerilog,AES,858,0,2022-08-04 09:04:35+00:00,[],None
981,https://github.com/eacrawford02/lava-lamp.git,2022-08-03 01:06:49+00:00,Simulating a lava lamp in Verilog using metaballs.,0,eacrawford02/lava-lamp,520695407,SystemVerilog,lava-lamp,31459,0,2023-03-10 23:42:20+00:00,[],https://api.github.com/licenses/gpl-3.0
982,https://github.com/RhysM95/SIT329.git,2022-08-02 05:11:25+00:00,,0,RhysM95/SIT329,520360068,SystemVerilog,SIT329,1,0,2022-08-02 05:12:57+00:00,[],None
983,https://github.com/HemanthVeeramalla/dummy.git,2022-08-03 12:25:26+00:00,,7,HemanthVeeramalla/dummy,520870651,SystemVerilog,dummy,37,0,2022-09-16 09:48:05+00:00,[],None
984,https://github.com/17862071195/Watchdog_Verify_UVM.git,2022-09-22 10:50:51+00:00,,0,17862071195/Watchdog_Verify_UVM,539932824,SystemVerilog,Watchdog_Verify_UVM,83,0,2022-09-22 11:13:32+00:00,[],None
985,https://github.com/sina-negarandeh/mips-pipeline-processor.git,2022-09-15 10:35:45+00:00,An implementation of the MIPS pipeline processor.,0,sina-negarandeh/mips-pipeline-processor,536977232,SystemVerilog,mips-pipeline-processor,8,0,2022-09-15 10:45:01+00:00,[],None
986,https://github.com/Sebusa/Arquitectura-de-Computadores.git,2022-09-14 00:07:48+00:00,Laboratorios de desarrollo de un procesador RISC-V para la materia arquitectura de computadores.,0,Sebusa/Arquitectura-de-Computadores,536350683,SystemVerilog,Arquitectura-de-Computadores,27344,0,2022-09-14 00:17:01+00:00,[],None
987,https://github.com/tparng/wide_alu_ip.git,2022-09-14 06:48:57+00:00,wide alu IP for pulpissimo,0,tparng/wide_alu_ip,536449460,SystemVerilog,wide_alu_ip,12,0,2022-09-14 07:13:00+00:00,[],None
988,https://github.com/jahnavivallivedu/Janu.git,2022-09-14 11:01:56+00:00,,0,jahnavivallivedu/Janu,536537299,SystemVerilog,Janu,16,0,2022-10-13 10:28:58+00:00,[],None
989,https://github.com/vineethkumarv/vk.git,2022-09-14 11:30:51+00:00,,0,vineethkumarv/vk,536547251,SystemVerilog,vk,30604,0,2022-12-23 04:58:26+00:00,[],None
990,https://github.com/minecraftdixit/system-verilog-.git,2022-08-27 19:54:56+00:00,sv practice codes,0,minecraftdixit/system-verilog-,529683680,SystemVerilog,system-verilog-,4,0,2022-08-27 19:58:25+00:00,[],None
991,https://github.com/dsepko/single-cycle-risc.git,2022-08-13 02:57:05+00:00,,0,dsepko/single-cycle-risc,524284093,SystemVerilog,single-cycle-risc,6,0,2022-08-13 02:59:24+00:00,[],None
992,https://github.com/mitshine/tutorials-on-UVM-and-RAL.git,2022-09-02 12:01:45+00:00,examples for UVM and RAL model from candy lovers,0,mitshine/tutorials-on-UVM-and-RAL,531908206,SystemVerilog,tutorials-on-UVM-and-RAL,129,0,2022-09-02 12:05:10+00:00,[],None
993,https://github.com/Angelaangie-ai/ece212_angela_laxman.git,2022-08-30 12:10:53+00:00,,0,Angelaangie-ai/ece212_angela_laxman,530640695,SystemVerilog,ece212_angela_laxman,5621,0,2023-08-06 02:35:16+00:00,[],None
994,https://github.com/PaulManriquez/R_Instruction_MIPS.git,2022-08-03 02:05:40+00:00,,0,PaulManriquez/R_Instruction_MIPS,520706960,SystemVerilog,R_Instruction_MIPS,585,0,2022-08-03 02:14:04+00:00,[],None
995,https://github.com/mrutunjaynalwad/MSD.git,2022-09-16 04:29:16+00:00,,3,mrutunjaynalwad/MSD,537304588,SystemVerilog,MSD,118,0,2023-07-03 08:01:16+00:00,[],None
996,https://github.com/tharunenamala/sarada_from_gopal.git,2022-09-16 09:42:23+00:00,for fum,0,tharunenamala/sarada_from_gopal,537395326,SystemVerilog,sarada_from_gopal,15,0,2022-10-03 09:06:01+00:00,[],None
997,https://github.com/DJosueMM/GrayDecoder.git,2022-09-13 14:49:10+00:00,Desarrollo de un circuito decodificador de Gray por medio del HDL SystemVerilog,1,DJosueMM/GrayDecoder,536174840,SystemVerilog,GrayDecoder,512,0,2024-02-18 20:24:50+00:00,"['decoder', 'fpga-board', 'hdl', 'systemverilog', 'testbench']",None
