,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/ekb0412/100DaysofRTL.git,2023-03-26 09:48:29+00:00,"""100 days of RTL"" is a personal project to learn Verilog HDL RTL design in 100 days, using Xilinx Vivado",7,ekb0412/100DaysofRTL,619108844,Verilog,100DaysofRTL,12617,26,2024-04-09 18:43:35+00:00,"['digital-system-design', 'asic', 'fpga', 'xilinx-vivado', 'verilog-hdl', 'vlsi-design']",https://api.github.com/licenses/apache-2.0
1,https://github.com/ChFrenkel/tinyODIN.git,2023-03-30 22:12:07+00:00,tinyODIN digital spiking neural network (SNN) processor - HDL source code and documentation. ,7,ChFrenkel/tinyODIN,621546346,Verilog,tinyODIN,207,25,2024-03-16 00:07:20+00:00,[],
2,https://github.com/XDEv11/ICLAB-2022-FALL.git,2023-04-03 05:49:11+00:00,,1,XDEv11/ICLAB-2022-FALL,622813775,Verilog,ICLAB-2022-FALL,33,20,2024-03-11 13:22:46+00:00,[],None
3,https://github.com/BigPig-Bro/Gowin.git,2023-04-09 07:19:59+00:00,【例程】国产高云FPGA 开发板及其工程,4,BigPig-Bro/Gowin,625463031,Verilog,Gowin,209164,17,2024-03-09 07:10:03+00:00,[],None
4,https://github.com/ashok-g-r/100-Days-of-RTL.git,2023-04-07 05:02:21+00:00,,3,ashok-g-r/100-Days-of-RTL,624716871,Verilog,100-Days-of-RTL,135,15,2023-10-03 17:10:48+00:00,[],None
5,https://github.com/mnasser431998/bfu_dif_fft_rtl.git,2023-04-10 21:40:24+00:00,The verilog code together with cocotb testbench of BFU unit of a DIF FFT processor,0,mnasser431998/bfu_dif_fft_rtl,626133385,Verilog,bfu_dif_fft_rtl,342,10,2023-08-28 05:21:04+00:00,[],None
6,https://github.com/Juanx65/RISC-V.git,2023-04-03 21:53:21+00:00,Tests for the design flow with Synopsys tools for the implementation of a RISC-V processor.,1,Juanx65/RISC-V,623188344,Verilog,RISC-V,120202,9,2024-04-03 11:30:45+00:00,"['mobaxterm', 'risc-v', 'synopsys', 'visual-studio-code']",None
7,https://github.com/tomverbeure/yosys_gatemap.git,2023-03-28 03:29:48+00:00,An example that shows how to map a design to a custom cell library.,0,tomverbeure/yosys_gatemap,620108972,Verilog,yosys_gatemap,3,9,2024-03-03 15:47:15+00:00,[],https://api.github.com/licenses/bsd-2-clause
8,https://github.com/Gemidge/udp_rmii_100MHz.git,2023-03-28 08:00:46+00:00,"Implement 100 MHz Ethernet in Verilog, including ARP and UDP, support UDP fragments",0,Gemidge/udp_rmii_100MHz,620194931,Verilog,udp_rmii_100MHz,17,8,2024-03-30 02:09:45+00:00,[],None
9,https://github.com/mrxYan6/Computer-organization-experiment.git,2023-04-04 06:30:23+00:00,杭电计科计算机组成原理实验,0,mrxYan6/Computer-organization-experiment,623323862,Verilog,Computer-organization-experiment,7054,8,2024-01-18 02:25:48+00:00,[],None
10,https://github.com/bryceyin13/WHU-ComputerOrganizationDesign-lab.git,2023-04-04 15:07:37+00:00,武汉大学计算机学院计算机组成原理课程设计,0,bryceyin13/WHU-ComputerOrganizationDesign-lab,623536776,Verilog,WHU-ComputerOrganizationDesign-lab,377,7,2024-04-07 00:39:37+00:00,[],None
11,https://github.com/Hazuyuki/PIM-HLS.git,2023-04-10 06:46:18+00:00,,0,Hazuyuki/PIM-HLS,625813647,Verilog,PIM-HLS,51,7,2024-01-05 15:29:43+00:00,[],None
12,https://github.com/UESTC-ICSDLab/CortexM0_SoC.git,2023-04-02 08:08:48+00:00,电子科技大学示范性微电子学院微嵌课程配套代码,4,UESTC-ICSDLab/CortexM0_SoC,622473290,Verilog,CortexM0_SoC,8614,6,2024-04-02 08:26:01+00:00,[],None
13,https://github.com/rockyco/LabTraining.git,2023-04-07 12:00:45+00:00,Digital system design: Training lessons and exercise projects for students,1,rockyco/LabTraining,624846316,Verilog,LabTraining,167046,6,2023-12-24 06:40:47+00:00,[],None
14,https://github.com/MichaelBell/nanoV.git,2023-04-08 23:27:58+00:00,RISC-V RV32E core designed for minimal area,0,MichaelBell/nanoV,625378164,Verilog,nanoV,116,6,2024-03-22 09:21:09+00:00,[],https://api.github.com/licenses/apache-2.0
15,https://github.com/lvyangdi/TARMAC.git,2023-04-10 14:13:07+00:00,The TARMAC framework for Trigger Activation,2,lvyangdi/TARMAC,625969491,Verilog,TARMAC,2085,6,2024-03-19 17:22:40+00:00,[],None
16,https://github.com/GuTaoZi/FeatherCPU.git,2023-04-11 15:27:13+00:00,A lightweight CPU core for basic RV32I instructions running on MINISYS. Project for CS214 Computer Organization(H).,1,GuTaoZi/FeatherCPU,626497002,Verilog,FeatherCPU,45328,5,2023-10-07 15:33:54+00:00,[],https://api.github.com/licenses/mit
17,https://github.com/zaun/BasicCPU.git,2023-03-26 01:53:37+00:00,Basic CPU that runs on Tang Nano 9K FPGA,0,zaun/BasicCPU,619011621,Verilog,BasicCPU,12,5,2024-01-03 11:38:49+00:00,[],None
18,https://github.com/dengjingjing/Microsoft-FPGA-Catapult-.git,2023-03-29 13:28:19+00:00,Microsoft FPGA Catapult ,1,dengjingjing/Microsoft-FPGA-Catapult-,620840377,Verilog,Microsoft-FPGA-Catapult-,1594,4,2023-08-03 13:06:19+00:00,[],https://api.github.com/licenses/mit
19,https://github.com/semiDESIgner/Cache-Memory-Controller_project.git,2023-03-30 06:05:42+00:00,This repo consists of my work on designing a simple efficient cache mem controller which can control the data between cache and cpu.,2,semiDESIgner/Cache-Memory-Controller_project,621170450,Verilog,Cache-Memory-Controller_project,3715,4,2023-09-18 17:16:02+00:00,[],None
20,https://github.com/mbaykenar/lattice_icestick_tutorials.git,2023-04-02 20:46:16+00:00,This repo contains tutorials related to Lattice icestick FPGA board,0,mbaykenar/lattice_icestick_tutorials,622688841,Verilog,lattice_icestick_tutorials,6,4,2023-04-03 15:39:45+00:00,[],https://api.github.com/licenses/apache-2.0
21,https://github.com/algofoogle/raybox.git,2023-04-06 13:18:01+00:00,Verilog design for hardware ray-caster game,0,algofoogle/raybox,624437424,Verilog,raybox,6072,4,2024-03-28 12:31:52+00:00,[],https://api.github.com/licenses/apache-2.0
22,https://github.com/pthuang/lfsr.git,2023-04-08 04:54:00+00:00,lfsr verilog module test,1,pthuang/lfsr,625106001,Verilog,lfsr,17903,4,2024-02-11 19:33:02+00:00,[],None
23,https://github.com/LispEngineer/EthernetRepeater.git,2023-03-27 00:17:34+00:00,A SystemVerilog implementation of a Ethernet Repeater targeting a Terasic DE2-115 and Marvell 88E1111 PHY,0,LispEngineer/EthernetRepeater,619344884,Verilog,EthernetRepeater,1253,4,2023-05-31 06:30:40+00:00,[],None
24,https://github.com/bu-icsg/ProcessorFuzz.git,2023-04-06 22:21:29+00:00,,1,bu-icsg/ProcessorFuzz,624625237,Verilog,ProcessorFuzz,11515,4,2024-02-29 08:46:19+00:00,[],https://api.github.com/licenses/apache-2.0
25,https://github.com/yczheng-hit/apb_cordic.git,2023-04-13 12:29:06+00:00,,0,yczheng-hit/apb_cordic,627417303,Verilog,apb_cordic,1306,3,2023-06-15 06:19:32+00:00,[],None
26,https://github.com/leconmat/projet_zigbee.git,2023-04-04 06:50:20+00:00,Repository for Phelma 2AMT projet Zigbee digital,0,leconmat/projet_zigbee,623331042,Verilog,projet_zigbee,6315,3,2024-02-10 10:18:07+00:00,[],None
27,https://github.com/Intelectron6/NTT_Accelerator.git,2023-04-06 19:21:53+00:00,"Number Theoretic Transform helps speeding up integer polynomial multiplication over finite fields, which is useful in Lattice Based Cryptography and other applications.",0,Intelectron6/NTT_Accelerator,624574413,Verilog,NTT_Accelerator,41725,3,2023-12-19 00:46:18+00:00,[],https://api.github.com/licenses/apache-2.0
28,https://github.com/Epsilon10/ooo-processor.git,2023-04-13 02:26:08+00:00,Out-Of-Order Superscalar processor for the ARM instruction set,0,Epsilon10/ooo-processor,627212813,Verilog,ooo-processor,105,3,2023-07-22 16:03:50+00:00,[],None
29,https://github.com/arpit306/5-Stage-Pipelined-MIPS32-RISC-Processor-Design-on-Verilog.git,2023-04-13 12:25:36+00:00,"This repository contains the details and the code for the MIPS32 ISA based RISC Processor, which is implemented in 5 stage pipelined configuration.",2,arpit306/5-Stage-Pipelined-MIPS32-RISC-Processor-Design-on-Verilog,627415908,Verilog,5-Stage-Pipelined-MIPS32-RISC-Processor-Design-on-Verilog,71,3,2024-03-26 16:20:09+00:00,"['microprocessors', 'mips32', 'nptel', 'risc', 'verilog']",https://api.github.com/licenses/mit
30,https://github.com/jht3QAQ/Computer.git,2023-04-06 06:19:01+00:00,模型机设计,0,jht3QAQ/Computer,624285715,Verilog,Computer,60,3,2024-01-04 03:37:28+00:00,['systemverilog'],https://api.github.com/licenses/gpl-3.0
31,https://github.com/Dhruv0Upadhyay/100_Days_of_RTL.git,2023-04-10 09:15:35+00:00,100 Days challenge to improve digital desinging using languages like Verilog & SystemVerilog,0,Dhruv0Upadhyay/100_Days_of_RTL,625863695,Verilog,100_Days_of_RTL,1102,3,2023-11-15 15:21:04+00:00,"['ram', 'verilog', 'verilog-code', 'verilog-hdl', 'verilog-project', 'vivado', 'xilinx-vivado']",None
32,https://github.com/Vincy1230/FPGA-class.git,2023-04-04 19:52:30+00:00,北京工商大学 人工智能学院 数字系统与逻辑设计 (2022-2023-1 | 孙梅) 及 FPGA 技术及应用 (2022-2023-2 | 孙梅) 课程作业,1,Vincy1230/FPGA-class,623649781,Verilog,FPGA-class,47636,3,2023-12-04 09:25:45+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
33,https://github.com/muzhiyun/Tang_4K_HDMI.git,2023-03-28 13:15:23+00:00,HDMI&EMPU for Tang Nano 4K,1,muzhiyun/Tang_4K_HDMI,620326032,Verilog,Tang_4K_HDMI,7553,3,2024-02-18 21:46:43+00:00,"['sipeed-tang-nano4k', 'cortex-m3']",None
34,https://github.com/penggeon/catanddog.git,2023-04-08 06:55:24+00:00,北邮数电实验(数字系统设计实验) - 猫狗过河源代码,0,penggeon/catanddog,625132645,Verilog,catanddog,29,2,2023-11-29 12:55:46+00:00,[],None
35,https://github.com/TianfengChen/ML_ASIC_CNN_LSTM.git,2023-04-04 02:09:46+00:00,,0,TianfengChen/ML_ASIC_CNN_LSTM,623252354,Verilog,ML_ASIC_CNN_LSTM,183108,2,2024-03-04 16:31:27+00:00,[],None
36,https://github.com/Ant4r3z/Projeto2-AOC.git,2023-04-03 14:12:41+00:00,Versão simplificada do núcleo do MIPS monociclo em hardware utilizando uma HDL (hardware description language),1,Ant4r3z/Projeto2-AOC,623012020,Verilog,Projeto2-AOC,53,2,2023-07-20 15:51:25+00:00,[],None
37,https://github.com/machdyne/avdac.git,2023-04-07 10:08:32+00:00,AVDAC Pmod™ Compatible Module,0,machdyne/avdac,624811367,Verilog,avdac,98,2,2023-10-01 11:58:31+00:00,"['audio', 'pmod', 'video']",
38,https://github.com/rxxuzi/iVerilog.git,2023-04-11 05:18:56+00:00,,1,rxxuzi/iVerilog,626253132,Verilog,iVerilog,1145,2,2023-11-09 00:13:50+00:00,[],None
39,https://github.com/Willmac16/fpga-can.git,2023-04-05 08:33:10+00:00,A CAN 2.0B Controller for FPGAs written in Verilog (In Progress),1,Willmac16/fpga-can,623857231,Verilog,fpga-can,104,2,2024-04-03 11:41:05+00:00,[],https://api.github.com/licenses/mit
40,https://github.com/KevlarKanou/squat4_NNI.git,2023-03-27 11:52:29+00:00,,0,KevlarKanou/squat4_NNI,619566311,Verilog,squat4_NNI,33,2,2023-04-14 16:20:12+00:00,[],None
41,https://github.com/wtlllll190812/Till_RISCV_CPU.git,2023-03-28 12:28:34+00:00,,0,wtlllll190812/Till_RISCV_CPU,620305046,Verilog,Till_RISCV_CPU,1137,2,2024-02-15 08:55:45+00:00,[],None
42,https://github.com/sairochan/ca.git,2023-03-28 05:50:42+00:00,,0,sairochan/ca,620146435,Verilog,ca,4,2,2023-09-06 07:44:33+00:00,[],None
43,https://github.com/alaarabie/Graduation_project.git,2023-04-03 17:32:54+00:00,Hybrid Memory Cube Controller,1,alaarabie/Graduation_project,623097968,Verilog,Graduation_project,64070,2,2023-07-17 06:51:04+00:00,[],None
44,https://github.com/Jefferson-Lopes/LASD.git,2023-03-30 11:01:00+00:00,MIPS 8 bit processor,0,Jefferson-Lopes/LASD,621283133,Verilog,LASD,4638,2,2023-05-30 23:06:45+00:00,"['fpga', 'mips']",None
45,https://github.com/embelon/SKY130_OpAmp.git,2023-04-12 08:52:11+00:00,Operational amplifier for Skywater 130nm,1,embelon/SKY130_OpAmp,626834056,Verilog,SKY130_OpAmp,3213,2,2024-03-02 04:56:47+00:00,[],https://api.github.com/licenses/apache-2.0
46,https://github.com/BestDreamy/aricriscv.git,2023-04-08 13:06:42+00:00,,0,BestDreamy/aricriscv,625226560,Verilog,aricriscv,1070,2,2024-03-26 08:10:10+00:00,"['iverilog', 'rtl', 'verilog']",None
47,https://github.com/megalloid/zynq_mini_lessons.git,2023-03-28 16:45:45+00:00,Materials from lessons,1,megalloid/zynq_mini_lessons,620422795,Verilog,zynq_mini_lessons,11,2,2023-09-05 19:12:12+00:00,[],None
48,https://github.com/RIT-CHAOS-SEC/ACFA.git,2023-03-28 17:38:22+00:00,ACFA: Secure Runtime Auditing & Guaranteed Device Healing via Active Control Flow Attestation ,1,RIT-CHAOS-SEC/ACFA,620444910,Verilog,ACFA,33962,2,2024-03-26 07:04:23+00:00,[],None
49,https://github.com/efabless/EF_TCC32.git,2023-04-10 12:22:03+00:00,A 32-bit Timer/Counter/Capture Soft IP (Verilog),2,efabless/EF_TCC32,625926798,Verilog,EF_TCC32,368,2,2023-08-16 10:04:02+00:00,[],https://api.github.com/licenses/mit
50,https://github.com/diqingz/Fruit-ninja-on-FPGA.git,2023-04-13 00:19:50+00:00,,0,diqingz/Fruit-ninja-on-FPGA,627180714,Verilog,Fruit-ninja-on-FPGA,73220,2,2023-04-22 07:22:01+00:00,[],None
51,https://github.com/Shiritai/Verilog-VGA-ChineseChess.git,2023-04-02 23:30:10+00:00,"Chinese chess game implemented using Verilog, controlled with Ps2 keyboard and displayed using VGA.",0,Shiritai/Verilog-VGA-ChineseChess,622723886,Verilog,Verilog-VGA-ChineseChess,36091,2,2024-03-10 23:53:46+00:00,[],None
52,https://github.com/Elrori/common.git,2023-04-08 12:20:58+00:00,common verilog module ,0,Elrori/common,625214768,Verilog,common,169,2,2023-08-31 12:27:47+00:00,[],https://api.github.com/licenses/mit
53,https://github.com/cepdnaclk/e18-co502-RV32IM-pipeline-implementation-group7.git,2023-03-30 08:29:52+00:00,"This Git repository contains the implementation of a RISC32IM processor pipeline using Verilog. The pipeline includes stages for instruction fetch, decode, execute, memory access, and write-back. The implementation includes a testbench for verification.",1,cepdnaclk/e18-co502-RV32IM-pipeline-implementation-group7,621223326,Verilog,e18-co502-RV32IM-pipeline-implementation-group7,127,1,2023-04-05 18:42:54+00:00,[],None
54,https://github.com/kitune-san/KFMMC_V2.git,2023-04-04 13:22:41+00:00,Multi media card access controller written in HDL,0,kitune-san/KFMMC_V2,623487874,Verilog,KFMMC_V2,172,1,2023-10-12 12:11:32+00:00,"['hdl', 'mmc', 'sdc', 'sdcard', 'verilog', 'verilog-hdl', 'multimediacard']",https://api.github.com/licenses/mit
55,https://github.com/Ali-Imangholi/ARM-processor.git,2023-04-08 18:30:28+00:00,,0,Ali-Imangholi/ARM-processor,625317113,Verilog,ARM-processor,35067,1,2023-07-12 17:00:42+00:00,[],None
56,https://github.com/kamalgupta1995/Kotha-Vani.git,2023-04-05 07:22:21+00:00,,0,kamalgupta1995/Kotha-Vani,623832376,Verilog,Kotha-Vani,141,1,2023-07-20 16:08:45+00:00,[],None
57,https://github.com/pxxxl/MIPSCPU.git,2023-03-27 15:36:55+00:00,,0,pxxxl/MIPSCPU,619878540,Verilog,MIPSCPU,213,1,2023-04-04 00:51:21+00:00,[],None
58,https://github.com/Chenwei-user/CPU-toy.git,2023-03-28 11:31:04+00:00,,0,Chenwei-user/CPU-toy,620279853,Verilog,CPU-toy,316,1,2023-05-19 03:10:09+00:00,[],None
59,https://github.com/hanc94/ALU.git,2023-04-06 14:57:59+00:00,"Esta descripción pertence al proyecto del procesador monociclo, se describe la unidad aritmetica lógica del procesador",0,hanc94/ALU,624478828,Verilog,ALU,18,1,2023-04-06 15:12:41+00:00,[],https://api.github.com/licenses/gpl-3.0
60,https://github.com/parthokr/6-bit-cpu.git,2023-04-03 19:23:12+00:00,,0,parthokr/6-bit-cpu,623140236,Verilog,6-bit-cpu,12,1,2023-04-11 15:59:30+00:00,[],None
61,https://github.com/Uref9/processor-design.git,2023-04-08 01:55:19+00:00,"Proccesor Design in CPC lab. , Kyushu Univ.",0,Uref9/processor-design,625072750,Verilog,processor-design,164,1,2023-06-28 06:44:42+00:00,[],None
62,https://github.com/haneena-beevi/VERILOG.git,2023-04-08 18:39:45+00:00,,0,haneena-beevi/VERILOG,625319341,Verilog,VERILOG,809,1,2023-04-09 21:19:05+00:00,[],None
63,https://github.com/snwizard/Verilog-IDE.git,2023-03-27 07:58:20+00:00,"Verilog IDE is an automated Verilog development environment for semiconductor enthusiasts. Once the RTL design is ready a single command generates the simulation waveform dump, synthesized netlist and a circuit schematic.",0,snwizard/Verilog-IDE,619472136,Verilog,Verilog-IDE,2206,1,2023-09-21 20:09:22+00:00,"['verilog', 'vscode', 'ide']",https://api.github.com/licenses/mit
64,https://github.com/xXGunner989Xx/vortex-stuff.git,2023-04-08 17:34:54+00:00,,0,xXGunner989Xx/vortex-stuff,625302610,Verilog,vortex-stuff,359455,1,2024-03-20 00:41:09+00:00,[],https://api.github.com/licenses/bsd-3-clause
65,https://github.com/ganyunhan/CMPEN331-Tiny-MIPS-CPU.git,2023-03-27 05:51:20+00:00,Penn State University - CMPEN 331 Lab3 8bit mips cpu,0,ganyunhan/CMPEN331-Tiny-MIPS-CPU,619426374,Verilog,CMPEN331-Tiny-MIPS-CPU,8,1,2023-08-07 12:57:57+00:00,[],None
66,https://github.com/knaveenkumar19999/Router1X3.git,2023-03-31 04:56:04+00:00,,0,knaveenkumar19999/Router1X3,621645285,Verilog,Router1X3,10,1,2023-09-13 13:05:56+00:00,[],None
67,https://github.com/FayzaHamada/Verilog-codes.git,2023-04-11 20:02:39+00:00,,0,FayzaHamada/Verilog-codes,626605695,Verilog,Verilog-codes,21,1,2023-04-13 12:45:16+00:00,[],None
68,https://github.com/chandyego84/mipstaycore.git,2023-04-11 01:51:16+00:00,MIPS Taycore - Low performance ISA for TSwift-inspired assembly language,0,chandyego84/mipstaycore,626196696,Verilog,mipstaycore,283,1,2023-04-13 18:52:31+00:00,[],None
69,https://github.com/rrtffff/-CPLD-cauc-homework.git,2023-04-02 14:16:31+00:00,CAUC 通信工程cpld课程记录,0,rrtffff/-CPLD-cauc-homework,622574591,Verilog,-CPLD-cauc-homework,17506,1,2023-05-02 11:19:27+00:00,[],None
70,https://github.com/Wloner0809/ustc-codh-2023.git,2023-04-09 08:14:22+00:00,a repo for codh labs,0,Wloner0809/ustc-codh-2023,625475428,Verilog,ustc-codh-2023,43295,1,2023-07-08 17:22:29+00:00,[],None
71,https://github.com/HiggsBose/Five_Stage_Pipelined_RISCV_CPU.git,2023-04-12 06:02:30+00:00,A CPU with 5-stage Pipeline feature based on RISC-V RV32I ISA,0,HiggsBose/Five_Stage_Pipelined_RISCV_CPU,626769498,Verilog,Five_Stage_Pipelined_RISCV_CPU,38,1,2023-11-15 22:28:03+00:00,[],None
72,https://github.com/RoshinEdge/PGNoCv3.git,2023-04-13 11:20:55+00:00,Программно-аппаратный комплекс для прототипирования сети на кристалле на двух ПЛИС,1,RoshinEdge/PGNoCv3,627390874,Verilog,PGNoCv3,11332,1,2023-04-13 12:16:11+00:00,[],None
73,https://github.com/machdyne/led8.git,2023-03-29 16:56:18+00:00,LED8 Pmod™ Compatible Module,0,machdyne/led8,620934758,Verilog,led8,38,1,2023-10-01 11:58:37+00:00,[],
74,https://github.com/hanc94/up_down_counter.git,2023-04-06 14:37:39+00:00,Esta descripción de hardware es un contador para el desarrollo del procesador monociclo,0,hanc94/up_down_counter,624470652,Verilog,up_down_counter,15,1,2023-04-06 14:52:56+00:00,[],https://api.github.com/licenses/gpl-3.0
75,https://github.com/JOYALKUSMOS/Wallace-multiplier.git,2023-04-05 16:30:35+00:00,Wallace Tree Multiplier (WTA) is a parallel multiplier that works on the Wallace Tree algorithm to efficiently multiply two integers.,0,JOYALKUSMOS/Wallace-multiplier,624050316,Verilog,Wallace-multiplier,4,1,2023-11-27 02:03:28+00:00,[],None
76,https://github.com/henriqueedu2001/kamasutra.git,2023-04-10 00:10:38+00:00,karatsuba algorithm,1,henriqueedu2001/kamasutra,625714752,Verilog,kamasutra,35,1,2024-02-24 22:28:52+00:00,[],None
77,https://github.com/enjoy-digital/litex_mister_test.git,2023-04-12 09:59:11+00:00,Simplification test of MiSTer with LiteX to try to help/contribute to MiSTeX project.,1,enjoy-digital/litex_mister_test,626861559,Verilog,litex_mister_test,467,1,2023-04-27 16:32:15+00:00,[],None
78,https://github.com/PRAGATI-0102/Half-Adder-Day-001-.git,2023-04-10 16:09:56+00:00,Half adder is a combinational circuit. It performs the binary addition operation of two 1-bit binary digits.,0,PRAGATI-0102/Half-Adder-Day-001-,626017679,Verilog,Half-Adder-Day-001-,23,1,2023-04-23 04:39:35+00:00,[],None
79,https://github.com/makinbacon21/de0-cv-vga-test.git,2023-04-10 19:55:53+00:00,A (mostly) working Verilog example that loads an image into RAM and displays it via VGA,1,makinbacon21/de0-cv-vga-test,626101562,Verilog,de0-cv-vga-test,15390,1,2023-09-13 03:21:12+00:00,[],None
80,https://github.com/TianfengChen/3-way-R10K.git,2023-04-05 02:14:29+00:00,,0,TianfengChen/3-way-R10K,623748567,Verilog,3-way-R10K,1473,1,2023-12-23 09:25:24+00:00,[],None
81,https://github.com/nova-master/Verilog-Digital-Modules.git,2023-03-29 08:11:37+00:00,Different Digital circuit Modules,0,nova-master/Verilog-Digital-Modules,620709359,Verilog,Verilog-Digital-Modules,49,1,2023-03-29 10:16:22+00:00,[],None
82,https://github.com/RndMnkIII/sn74ls669_verilog.git,2023-04-03 16:39:32+00:00,,0,RndMnkIII/sn74ls669_verilog,623076145,Verilog,sn74ls669_verilog,780,1,2023-10-08 14:48:24+00:00,[],https://api.github.com/licenses/gpl-3.0
83,https://github.com/ahmetalperengungor/CS303_FALL22_PROJECT_Elevator_Verilog.git,2023-03-28 16:03:25+00:00,,0,ahmetalperengungor/CS303_FALL22_PROJECT_Elevator_Verilog,620404619,Verilog,CS303_FALL22_PROJECT_Elevator_Verilog,208,1,2023-03-28 16:14:15+00:00,[],None
84,https://github.com/AnkitGumaste/AHB2APB-Bridge.git,2023-04-11 11:52:07+00:00,,0,AnkitGumaste/AHB2APB-Bridge,626400395,Verilog,AHB2APB-Bridge,4,1,2023-05-15 08:02:43+00:00,[],None
85,https://github.com/Timez-zx/Edf_Switch.git,2023-03-27 05:09:52+00:00,the implementation of Edf Switch,0,Timez-zx/Edf_Switch,619414980,Verilog,Edf_Switch,1586,1,2023-11-18 21:09:16+00:00,[],https://api.github.com/licenses/apache-2.0
86,https://github.com/lnis-uofu/GF12_template.git,2023-04-05 20:32:10+00:00,,0,lnis-uofu/GF12_template,624137660,Verilog,GF12_template,14552,1,2023-04-07 01:19:53+00:00,[],None
87,https://github.com/Ali-Imangholi/SPI-protocol-mode1.git,2023-04-08 20:27:33+00:00,,0,Ali-Imangholi/SPI-protocol-mode1,625344123,Verilog,SPI-protocol-mode1,749,1,2023-07-12 17:00:42+00:00,[],None
88,https://github.com/ucfjimg/NetA.git,2023-03-30 13:31:29+00:00,,0,ucfjimg/NetA,621345676,Verilog,NetA,15988,1,2023-04-03 13:05:56+00:00,[],None
89,https://github.com/PRAGATI-0102/Full-Adder-Day-002-.git,2023-04-11 06:49:29+00:00,"A full adder is a digital circuit that adds two binary numbers together, along with a carry-in bit from a previous stage of addition. It produces a sum and a carry-out bit, which can be passed on to the next stage of addition.",0,PRAGATI-0102/Full-Adder-Day-002-,626283580,Verilog,Full-Adder-Day-002-,54,1,2023-04-23 04:39:36+00:00,[],None
90,https://github.com/sieben-NUAA/Pipeline-CPU-Verilog.git,2023-03-30 07:21:57+00:00,南航计组课设,0,sieben-NUAA/Pipeline-CPU-Verilog,621197256,Verilog,Pipeline-CPU-Verilog,476,1,2023-08-28 02:53:03+00:00,[],None
91,https://github.com/DishanChulawnasa/Sem1_FinalYearProject.git,2023-04-03 06:20:08+00:00,Final Year Group Project,0,DishanChulawnasa/Sem1_FinalYearProject,622823337,Verilog,Sem1_FinalYearProject,460,1,2023-09-30 11:11:33+00:00,[],None
92,https://github.com/Sourav365/UART_Communication_on_Basys3.git,2023-04-07 11:07:28+00:00,,0,Sourav365/UART_Communication_on_Basys3,624830175,Verilog,UART_Communication_on_Basys3,55,1,2023-04-30 07:49:34+00:00,[],None
93,https://github.com/hanc94/mips32.git,2023-04-06 15:14:08+00:00,descripción en verilog del microprocesador de 32 bits,0,hanc94/mips32,624485298,Verilog,mips32,29,1,2023-04-06 15:26:41+00:00,[],https://api.github.com/licenses/gpl-3.0
94,https://github.com/FayzaHamada/FPGA_based-bank-SBqM-system.git,2023-04-11 13:44:01+00:00,the objective of SBqM system is to display various information about status of the queue in bank ,0,FayzaHamada/FPGA_based-bank-SBqM-system,626448398,Verilog,FPGA_based-bank-SBqM-system,606,1,2023-04-13 12:45:11+00:00,[],None
95,https://github.com/ManasaDeviMalla/OnChip_Dual_RAM.git,2023-04-08 16:42:04+00:00,,0,ManasaDeviMalla/OnChip_Dual_RAM,625288485,Verilog,OnChip_Dual_RAM,119,1,2023-04-09 18:59:20+00:00,[],None
96,https://github.com/PRAGATI-0102/4X1_Mux-Day-004-.git,2023-04-13 10:56:37+00:00,A MUX is a digital circuit that selects one of several input signals and forwards the selected input to a single output line based on the control signal.,0,PRAGATI-0102/4X1_Mux-Day-004-,627381971,Verilog,4X1_Mux-Day-004-,46,1,2023-04-23 04:39:39+00:00,[],None
97,https://github.com/nrs14/VLSI-Verilog-code.git,2023-03-28 14:41:40+00:00,verilog,0,nrs14/VLSI-Verilog-code,620367366,Verilog,VLSI-Verilog-code,15,1,2023-07-08 04:13:35+00:00,[],None
98,https://github.com/nova-master/Verilog-Edge_detector.git,2023-03-29 07:07:37+00:00,,0,nova-master/Verilog-Edge_detector,620685061,Verilog,Verilog-Edge_detector,53,1,2023-03-29 07:44:43+00:00,[],None
99,https://github.com/joshuanieh/BNN-chip.git,2023-03-30 12:12:55+00:00,,0,joshuanieh/BNN-chip,621312042,Verilog,BNN-chip,59,1,2024-02-26 22:39:15+00:00,[],None
100,https://github.com/jjyy-Huang/bsv-xilinx-dma.git,2023-03-27 07:43:34+00:00,,1,jjyy-Huang/bsv-xilinx-dma,619466380,Verilog,bsv-xilinx-dma,289,1,2024-03-20 08:49:17+00:00,[],None
101,https://github.com/howsayhao/hj_reg_auto.git,2023-04-08 13:03:51+00:00,,0,howsayhao/hj_reg_auto,625225774,Verilog,hj_reg_auto,8589,1,2024-03-16 10:32:31+00:00,[],None
102,https://github.com/hanc94/SRAM.git,2023-04-06 15:10:41+00:00,Descripción de la SRAM del procesador monociclo.,0,hanc94/SRAM,624484004,Verilog,SRAM,16,1,2023-04-06 15:12:48+00:00,[],https://api.github.com/licenses/gpl-3.0
103,https://github.com/merlionfire/Tetris_SpinalHDL.git,2023-04-06 16:04:55+00:00,Tetris game in SpinalHDL ,0,merlionfire/Tetris_SpinalHDL,624504894,Verilog,Tetris_SpinalHDL,66,1,2023-04-25 15:06:14+00:00,[],https://api.github.com/licenses/gpl-3.0
104,https://github.com/Ishaq-p/16-Bit-RISC-Processor-Icarus-Verilog.git,2023-03-27 20:18:51+00:00,school project repository,0,Ishaq-p/16-Bit-RISC-Processor-Icarus-Verilog,619991792,Verilog,16-Bit-RISC-Processor-Icarus-Verilog,716,1,2023-04-04 20:23:54+00:00,[],None
105,https://github.com/ifbettrer/CPU-minisys31.git,2023-03-28 03:01:19+00:00,minisys31条指令实现,0,ifbettrer/CPU-minisys31,620101465,Verilog,CPU-minisys31,149,1,2023-11-06 11:03:39+00:00,[],None
106,https://github.com/jas1284/MAX10_multimedia.git,2023-04-09 10:50:18+00:00,ASIC playback of WAV and Y4M files from microSD card on DE10-LITE FPGA board,0,jas1284/MAX10_multimedia,625512902,Verilog,MAX10_multimedia,3285,1,2023-08-22 18:44:06+00:00,[],None
107,https://github.com/choukusepurva/Floating_Point_Unit_Hardware_Implementation_Using_SystemVerilog.git,2023-04-10 08:51:54+00:00,"Implemention of a hardware module in SystemVerilog that models a floating-point unit (FPU), and tested it with a verification environment.",0,choukusepurva/Floating_Point_Unit_Hardware_Implementation_Using_SystemVerilog,625855311,Verilog,Floating_Point_Unit_Hardware_Implementation_Using_SystemVerilog,17758,1,2023-10-23 03:26:09+00:00,[],None
108,https://github.com/somhi/jtoutrun_demistify.git,2023-04-09 15:24:07+00:00,,2,somhi/jtoutrun_demistify,625589054,Verilog,jtoutrun_demistify,1381,1,2023-05-01 21:15:46+00:00,[],None
109,https://github.com/Gangadhar-NG/100Days_of_RTL.git,2023-04-01 16:36:42+00:00,,0,Gangadhar-NG/100Days_of_RTL,622279564,Verilog,100Days_of_RTL,59,1,2023-04-28 05:26:34+00:00,[],None
110,https://github.com/hanc94/comparador_signo.git,2023-04-06 15:06:43+00:00,"Esta descripción es parte del desarrollo del procesador monociclo, en este se realiza la comparación de numeros con signo.",0,hanc94/comparador_signo,624482449,Verilog,comparador_signo,16,1,2023-04-06 15:12:45+00:00,[],https://api.github.com/licenses/gpl-3.0
111,https://github.com/nova-master/Verilog-FPGA-programming.git,2023-03-28 11:38:06+00:00,mmm,0,nova-master/Verilog-FPGA-programming,620282729,Verilog,Verilog-FPGA-programming,52,1,2023-03-29 07:44:18+00:00,[],None
112,https://github.com/meosii/AMBA_AHB.git,2023-03-29 11:55:19+00:00,,0,meosii/AMBA_AHB,620799734,Verilog,AMBA_AHB,4,1,2023-04-20 17:20:10+00:00,[],None
113,https://github.com/KevinOConnor/hsoft.git,2023-04-04 16:11:27+00:00,FPGA code for the Haasoscope,0,KevinOConnor/hsoft,623563929,Verilog,hsoft,157,1,2023-04-10 03:11:40+00:00,[],https://api.github.com/licenses/gpl-3.0
114,https://github.com/hanc94/bus_organizer.git,2023-04-06 14:28:46+00:00,Este proyecto es parte del desarrollo de un procesador monociclo en FPGA utilizando Verilog,0,hanc94/bus_organizer,624466971,Verilog,bus_organizer,16,1,2023-04-07 19:23:08+00:00,[],https://api.github.com/licenses/gpl-3.0
115,https://github.com/Baneist/MIPSx89.git,2023-03-31 02:21:11+00:00,"89 MIPS CPU with μC/OS-II OS and GUI program ported. Project for Computer System Experiment (CS 100225), Tongji Univ.",0,Baneist/MIPSx89,621606033,Verilog,MIPSx89,35284,1,2024-04-07 19:47:29+00:00,[],None
116,https://github.com/kchristos4/MicroCPU.git,2023-03-27 11:29:33+00:00,Design of a small cpu using five stage architecture,0,kchristos4/MicroCPU,619556863,Verilog,MicroCPU,4,1,2023-03-27 11:35:31+00:00,[],None
117,https://github.com/saicharan1213/Physical-Design.git,2023-03-27 09:40:29+00:00,,0,saicharan1213/Physical-Design,619513511,Verilog,Physical-Design,2071,1,2023-03-30 15:57:15+00:00,[],None
118,https://github.com/Essenceia/Blake2.git,2023-04-08 05:25:24+00:00,Blake2 RTL implementation,0,Essenceia/Blake2,625112192,Verilog,Blake2,251,1,2023-09-10 05:52:57+00:00,"['blake2', 'blake2b', 'blake2s', 'cryptography', 'hashing', 'rtl', 'asic', 'asic-design', 'fpga', 'fpga-accelerator', 'verilog', 'vhdl']",None
119,https://github.com/MHBrianHsieh/NYCU_2022_FALL_ICLAB.git,2023-04-07 05:15:37+00:00,,0,MHBrianHsieh/NYCU_2022_FALL_ICLAB,624719986,Verilog,NYCU_2022_FALL_ICLAB,320,1,2023-04-07 23:23:21+00:00,[],None
120,https://github.com/midas1214/fpga_tetris.git,2023-04-04 08:41:20+00:00,on dot matrix,0,midas1214/fpga_tetris,623373534,Verilog,fpga_tetris,293,1,2023-11-17 02:16:59+00:00,[],None
121,https://github.com/edimkou/SoC.git,2023-04-11 19:15:10+00:00,Creation of a ASIC that performs computations with vectors. ,0,edimkou/SoC,626589078,Verilog,SoC,466,1,2024-03-10 11:11:27+00:00,[],None
122,https://github.com/FayzaHamada/Partial-32-bit-Pipelined-RISC_V-Processor.git,2023-04-11 15:35:00+00:00,,0,FayzaHamada/Partial-32-bit-Pipelined-RISC_V-Processor,626500383,Verilog,Partial-32-bit-Pipelined-RISC_V-Processor,11,1,2023-04-13 12:45:07+00:00,[],None
123,https://github.com/PRAGATI-0102/Ripple-Carry-Adder-Day-003-.git,2023-04-12 09:18:39+00:00,A ripple carry adder is a type of adder circuit that performs the addition of multiple binary digits by cascading full adders together.,0,PRAGATI-0102/Ripple-Carry-Adder-Day-003-,626845282,Verilog,Ripple-Carry-Adder-Day-003-,123,1,2023-04-23 04:39:38+00:00,[],None
124,https://github.com/alirc0320/ECE_385_SPRING_2023.git,2023-04-12 21:17:52+00:00,"Final Project Repository for ECE 385 Project, The Legend of Zelda ",0,alirc0320/ECE_385_SPRING_2023,627133774,Verilog,ECE_385_SPRING_2023,132340,1,2023-05-09 07:24:06+00:00,[],None
125,https://github.com/kulya97/Verilog_Module.git,2023-03-28 13:34:48+00:00,自己使用到的verilog_module,1,kulya97/Verilog_Module,620335246,Verilog,Verilog_Module,95790,1,2024-02-08 03:20:56+00:00,[],None
126,https://github.com/shereenIbdah/ADVANCED-DIGITAL-.git,2023-03-26 13:17:17+00:00,traffic light design in (Verilog HDL),0,shereenIbdah/ADVANCED-DIGITAL-,619165466,Verilog,ADVANCED-DIGITAL-,827,1,2024-03-29 14:09:40+00:00,[],None
127,https://github.com/GURUSUJAN/VLSI.git,2023-04-03 08:01:25+00:00,,0,GURUSUJAN/VLSI,622860522,Verilog,VLSI,4,1,2023-04-07 14:41:17+00:00,[],None
128,https://github.com/chestnut-Q/SimRISCV.git,2023-03-26 13:54:02+00:00,A simple CPU implementation of 5-stage RISC-V pipeline.,0,chestnut-Q/SimRISCV,619176636,Verilog,SimRISCV,289,1,2023-05-02 09:26:43+00:00,[],None
129,https://github.com/HDU-RISC-V/risc-v.git,2023-04-10 13:23:52+00:00,计组risc-v小组作业,0,HDU-RISC-V/risc-v,625949855,Verilog,risc-v,77,1,2023-12-31 07:21:43+00:00,[],None
130,https://github.com/nova-master/Space_invader-VGA.git,2023-03-29 05:42:59+00:00,VGA,0,nova-master/Space_invader-VGA,620655758,Verilog,Space_invader-VGA,70,1,2023-03-29 07:44:30+00:00,[],None
131,https://github.com/Pratap-Reddy-K/Traffic_control.git,2023-04-07 07:10:49+00:00,,0,Pratap-Reddy-K/Traffic_control,624752500,Verilog,Traffic_control,3,0,2023-04-07 07:19:11+00:00,[],None
132,https://github.com/cowboy35927/Folding-FIR-Filter.git,2023-04-13 17:32:41+00:00,,0,cowboy35927/Folding-FIR-Filter,627545877,Verilog,Folding-FIR-Filter,11882,0,2023-04-13 17:33:41+00:00,[],None
133,https://github.com/Emerald-Bay/EE354_Final_Project.git,2023-04-13 23:25:40+00:00,Recreation of VVVVVV in Verilog,0,Emerald-Bay/EE354_Final_Project,627654863,Verilog,EE354_Final_Project,174,0,2023-04-17 02:10:00+00:00,[],None
134,https://github.com/yashwant4756/CarParkingSystem.git,2023-03-26 14:35:24+00:00,,0,yashwant4756/CarParkingSystem,619189967,Verilog,CarParkingSystem,4,0,2023-03-26 14:37:45+00:00,[],None
135,https://github.com/3ashryy2/Mini-Arithmatic-Circuit-in-verilog.git,2023-03-27 19:25:14+00:00,Arithmatic cuircuit for calculating 4 arithmatic operations,0,3ashryy2/Mini-Arithmatic-Circuit-in-verilog,619972449,Verilog,Mini-Arithmatic-Circuit-in-verilog,5,0,2023-03-27 19:25:21+00:00,[],None
136,https://github.com/d-m-bailey/caravel_test_mpw-9a.git,2023-03-29 17:20:55+00:00,,0,d-m-bailey/caravel_test_mpw-9a,620944853,Verilog,caravel_test_mpw-9a,35353,0,2023-03-30 04:05:22+00:00,[],https://api.github.com/licenses/apache-2.0
137,https://github.com/cepdnaclk/e17-co502-RV32IM-pipeline-implemntation-group1.git,2023-03-30 09:10:10+00:00,,1,cepdnaclk/e17-co502-RV32IM-pipeline-implemntation-group1,621239393,Verilog,e17-co502-RV32IM-pipeline-implemntation-group1,373,0,2023-04-05 12:40:37+00:00,[],None
138,https://github.com/aswaniar/efab_1.git,2023-04-04 09:24:03+00:00,,0,aswaniar/efab_1,623390706,Verilog,efab_1,41725,0,2023-04-04 09:24:40+00:00,[],https://api.github.com/licenses/apache-2.0
139,https://github.com/aswaniar/EFAB.git,2023-04-04 15:27:54+00:00,TEST,0,aswaniar/EFAB,623545626,Verilog,EFAB,134290,0,2023-04-04 15:28:28+00:00,[],https://api.github.com/licenses/apache-2.0
140,https://github.com/ManasaDeviMalla/CarryLookAheadAdder_4bit.git,2023-04-03 09:02:50+00:00,,0,ManasaDeviMalla/CarryLookAheadAdder_4bit,622884961,Verilog,CarryLookAheadAdder_4bit,108,0,2023-04-03 09:34:25+00:00,[],None
141,https://github.com/duyhunguet2001/HDLBitsSolutions.git,2023-03-30 09:53:10+00:00,Solutions for HDLBits Verilog Exercises,0,duyhunguet2001/HDLBitsSolutions,621257099,Verilog,HDLBitsSolutions,38,0,2023-04-19 15:14:18+00:00,[],None
142,https://github.com/TechFrnds/Oled-Inrerface.git,2023-04-10 07:32:02+00:00,I2C protocol has been implemented between OLED display and ZEDBOARD,0,TechFrnds/Oled-Inrerface,625828749,Verilog,Oled-Inrerface,5,0,2023-04-10 07:36:31+00:00,[],None
143,https://github.com/ChangyiYang/5StagePipelinedCPU.git,2023-04-08 04:37:44+00:00,Implement a 5 stage Pipelined CPU for MIPS instruction set with Verilog,0,ChangyiYang/5StagePipelinedCPU,625102900,Verilog,5StagePipelinedCPU,1135,0,2023-04-08 04:41:40+00:00,[],None
144,https://github.com/sinaxs/xilinx-examples.git,2023-04-09 12:15:11+00:00,,0,sinaxs/xilinx-examples,625534078,Verilog,xilinx-examples,8,0,2023-04-09 12:17:56+00:00,[],None
145,https://github.com/NikitaAgeev/little_adder.git,2023-04-09 17:27:56+00:00,A little adder project for the study of verilog.,0,NikitaAgeev/little_adder,625624304,Verilog,little_adder,1,0,2023-04-10 18:51:24+00:00,[],None
146,https://github.com/lizboyer/385fp.git,2023-04-09 19:16:33+00:00,,1,lizboyer/385fp,625652849,Verilog,385fp,23011,0,2023-04-12 08:02:06+00:00,[],None
147,https://github.com/iitdheeraj/FPU_Hardware_Implementation_SystemVerilog.git,2023-04-09 19:38:12+00:00,"Implement a hardware module in SystemVerilog that models a floating-point unit (FPU), and test it with a verification environment.",0,iitdheeraj/FPU_Hardware_Implementation_SystemVerilog,625658199,Verilog,FPU_Hardware_Implementation_SystemVerilog,17402,0,2023-04-11 07:44:01+00:00,[],None
148,https://github.com/smritimangal26/RTL-coding.git,2023-04-11 17:47:28+00:00,,0,smritimangal26/RTL-coding,626555215,Verilog,RTL-coding,1,0,2023-04-11 17:49:07+00:00,[],None
149,https://github.com/sudharaniinti/Designing-RAM-and-ROM-using-Verilog.git,2023-04-11 04:36:59+00:00,,0,sudharaniinti/Designing-RAM-and-ROM-using-Verilog,626241843,Verilog,Designing-RAM-and-ROM-using-Verilog,655,0,2023-04-11 04:40:10+00:00,[],None
150,https://github.com/ArshKedia/Approximate_computing_using_majority_logic.git,2023-04-11 05:34:05+00:00,,1,ArshKedia/Approximate_computing_using_majority_logic,626257401,Verilog,Approximate_computing_using_majority_logic,17263,0,2023-04-11 06:58:32+00:00,[],https://api.github.com/licenses/apache-2.0
151,https://github.com/erwin11115/HAPS_final.git,2023-04-12 05:45:04+00:00,,0,erwin11115/HAPS_final,626763765,Verilog,HAPS_final,24,0,2023-04-12 12:38:52+00:00,[],https://api.github.com/licenses/cern-ohl-w-2.0
152,https://github.com/Mariam-Katamashvili/Veri-Simple.git,2023-03-31 11:53:28+00:00,"🧑‍💻🔍 A collection of Verilog code examples, perfect for beginners or anyone looking to learn Verilog. 📝🎓 These examples are based on my homework assignments from university (KIU) and include comments and explanations to help you understand the code.  📚🤓 Check out the link below for more information about Verilog!! 👇",0,Mariam-Katamashvili/Veri-Simple,621791806,Verilog,Veri-Simple,20,0,2023-04-12 06:39:01+00:00,"['clockdivider', 'cyclone-v', 'decoder', 'fulladder', 'fullsubtractor', 'mux', 'quartus', 'registers', 'rom', 'verilog']",https://api.github.com/licenses/mit
153,https://github.com/pnguyen174/exp1h.git,2023-04-05 21:12:35+00:00,233 lab1h,0,pnguyen174/exp1h,624150023,Verilog,exp1h,29,0,2023-04-05 21:14:18+00:00,[],None
154,https://github.com/rohanraaj2/Computer-Architecture.git,2023-04-05 20:35:14+00:00,,0,rohanraaj2/Computer-Architecture,624138686,Verilog,Computer-Architecture,1270,0,2023-05-18 14:18:09+00:00,[],None
155,https://github.com/yamichanCTL/CNN_FPGA.git,2023-04-05 11:59:39+00:00,,0,yamichanCTL/CNN_FPGA,623935585,Verilog,CNN_FPGA,109348,0,2023-04-10 10:55:38+00:00,[],https://api.github.com/licenses/mit
156,https://github.com/MichaelBell/iceHovalaag.git,2023-03-31 22:49:13+00:00,Testing Tiny Tapeout Hovalaag on ice,0,MichaelBell/iceHovalaag,622019160,Verilog,iceHovalaag,11,0,2023-03-31 22:49:50+00:00,[],https://api.github.com/licenses/apache-2.0
157,https://github.com/maktheus/and_port_Varilog.git,2023-03-31 13:47:58+00:00,and port varilog first project for ed2lab,0,maktheus/and_port_Varilog,621837174,Verilog,and_port_Varilog,4,0,2023-03-31 13:48:22+00:00,[],None
158,https://github.com/menloparkwizard/NABU_MiSTer.git,2023-04-01 06:26:15+00:00,A MiSTer Implementation of the NABU Computer,0,menloparkwizard/NABU_MiSTer,622109263,Verilog,NABU_MiSTer,118,0,2023-04-01 06:26:22+00:00,[],https://api.github.com/licenses/gpl-2.0
159,https://github.com/prova-anika-216474306/PingPongGame.git,2023-04-02 15:18:24+00:00,,0,prova-anika-216474306/PingPongGame,622594758,Verilog,PingPongGame,10926,0,2023-04-02 15:39:50+00:00,[],None
160,https://github.com/CVBhanuPrakash/AVLSI.git,2023-04-04 17:45:59+00:00,"The AVLSI project involved the schematic and layout design of a CPL_Full_Adder using Electric software, followed by simulations in ModelSim INTEL FPGA software using Verilog programming. The project encompassed multiple phases, including error checking and rectification.",0,CVBhanuPrakash/AVLSI,623602359,Verilog,AVLSI,720,0,2023-09-27 19:54:01+00:00,[],None
161,https://github.com/ajaykrishna1878/MIPS-Processor-CompArch-Assignment.git,2023-04-03 16:20:44+00:00,Computer Architecture (CS F342) Assignment.,0,ajaykrishna1878/MIPS-Processor-CompArch-Assignment,623068336,Verilog,MIPS-Processor-CompArch-Assignment,18,0,2023-04-26 10:30:52+00:00,[],None
162,https://github.com/vmeirelle/fpga-door-controller.git,2023-04-05 05:12:37+00:00,,0,vmeirelle/fpga-door-controller,623792006,Verilog,fpga-door-controller,31,0,2023-04-05 05:13:54+00:00,[],None
163,https://github.com/Jeffff212/Button-Tester.git,2023-04-01 14:40:33+00:00,,0,Jeffff212/Button-Tester,622242324,Verilog,Button-Tester,22,0,2023-04-29 19:14:18+00:00,[],None
164,https://github.com/brad2021hk/hb88_nano_9k_8x8_rand.git,2023-04-02 04:03:01+00:00,Tang Nano 9k and Hackerboxes 88.  Generates random numbers and displays on 8x8 LED matrix.,0,brad2021hk/hb88_nano_9k_8x8_rand,622423511,Verilog,hb88_nano_9k_8x8_rand,5,0,2023-04-02 04:03:23+00:00,[],None
165,https://github.com/arandomdev/adi_hdl.git,2023-04-06 17:44:35+00:00,,0,arandomdev/adi_hdl,624540935,Verilog,adi_hdl,22137,0,2023-05-04 01:15:56+00:00,[],
166,https://github.com/heihal1/AES_128.git,2023-03-28 15:19:18+00:00,,0,heihal1/AES_128,620385039,Verilog,AES_128,5,0,2023-03-28 15:38:03+00:00,[],None
167,https://github.com/snowwithdust/Verilog_Project.git,2023-03-29 04:07:37+00:00,,0,snowwithdust/Verilog_Project,620630977,Verilog,Verilog_Project,9,0,2023-03-29 04:57:27+00:00,[],None
168,https://github.com/Woodson-Man/SAP_Computers.git,2023-04-11 18:24:24+00:00,"SAP1-3 from Malvinos ""Digital Computer Electronics""",0,Woodson-Man/SAP_Computers,626569995,Verilog,SAP_Computers,3306,0,2023-04-11 18:27:39+00:00,[],None
169,https://github.com/kamalgupta1995/Ummidi-Chandrika.git,2023-04-11 04:45:41+00:00,,0,kamalgupta1995/Ummidi-Chandrika,626244086,Verilog,Ummidi-Chandrika,232,0,2024-01-28 15:07:36+00:00,[],None
170,https://github.com/DimitrisT1804/Lab2-ECE-333-digital-lab.git,2023-04-03 21:13:11+00:00,"Lab2 of digital lab implements a full working UART transmitter and Receiver and Baud Rate controller, so that it can communicate with every speed.",0,DimitrisT1804/Lab2-ECE-333-digital-lab,623176961,Verilog,Lab2-ECE-333-digital-lab,20415,0,2024-03-09 20:35:06+00:00,[],None
171,https://github.com/wilfredkisku/CHISEL3-TEST-PROJECTS.git,2023-04-13 05:50:23+00:00,Chisel3 test project build template with startup code,0,wilfredkisku/CHISEL3-TEST-PROJECTS,627267210,Verilog,CHISEL3-TEST-PROJECTS,1652,0,2024-03-28 23:08:04+00:00,[],https://api.github.com/licenses/unlicense
172,https://github.com/cyntem/mcp4728verilog.git,2023-04-11 07:17:50+00:00,The module is designed to set the value of the DAC for 4 simultaneously MCP4728 using the common SDA and SCL lines and separate LDAC lines for each IC.,0,cyntem/mcp4728verilog,626294113,Verilog,mcp4728verilog,5,0,2023-04-11 07:54:54+00:00,[],None
173,https://github.com/sivaram-07/MIPS32.git,2023-04-11 07:49:39+00:00,,0,sivaram-07/MIPS32,626306103,Verilog,MIPS32,37,0,2023-07-23 11:39:27+00:00,[],None
174,https://github.com/j0106223/cat_edge_capture.git,2023-04-13 15:38:08+00:00,cat_edge_capture,0,j0106223/cat_edge_capture,627499582,Verilog,cat_edge_capture,3390,0,2023-04-13 15:44:18+00:00,[],None
175,https://github.com/UraniumNutt/ENGR228FinalProject.git,2023-04-13 15:24:26+00:00,A CPU for (4X4) Matrix multiplication,1,UraniumNutt/ENGR228FinalProject,627493782,Verilog,ENGR228FinalProject,91789,0,2023-05-06 16:38:06+00:00,[],None
176,https://github.com/GaryChen886/Dictionary-Based-Compression.git,2023-04-12 07:51:17+00:00,,0,GaryChen886/Dictionary-Based-Compression,626809144,Verilog,Dictionary-Based-Compression,3,0,2023-04-12 07:51:50+00:00,[],None
177,https://github.com/DiogoDSJ/Projeto-2-MI---Circuitos-Digitais.git,2023-04-12 00:44:31+00:00,Projeto 2 da disciplina de MI - Circuitos Digitais.,1,DiogoDSJ/Projeto-2-MI---Circuitos-Digitais,626682120,Verilog,Projeto-2-MI---Circuitos-Digitais,47,0,2023-05-04 00:43:25+00:00,[],None
178,https://github.com/aj-rodrigo/Pipeline-Processor.git,2023-04-11 18:49:44+00:00,,0,aj-rodrigo/Pipeline-Processor,626579674,Verilog,Pipeline-Processor,520,0,2023-04-11 21:55:08+00:00,[],None
179,https://github.com/RuixiangJiang/Computer-Organization-Project-Spring-2023.git,2023-04-12 02:54:19+00:00,,1,RuixiangJiang/Computer-Organization-Project-Spring-2023,626717442,Verilog,Computer-Organization-Project-Spring-2023,7514,0,2023-07-05 09:11:03+00:00,[],None
180,https://github.com/yueyeweiliang/8051.git,2023-03-27 09:46:19+00:00,,0,yueyeweiliang/8051,619515891,Verilog,8051,83,0,2023-03-27 09:50:31+00:00,[],None
181,https://github.com/starin16/prolead.git,2023-03-27 16:01:39+00:00,,0,starin16/prolead,619889550,Verilog,prolead,4,0,2023-03-27 16:16:51+00:00,[],None
182,https://github.com/firstyi1/OpenMIPS2.git,2023-03-29 11:45:43+00:00,,0,firstyi1/OpenMIPS2,620795683,Verilog,OpenMIPS2,21,0,2023-03-29 12:33:10+00:00,[],None
183,https://github.com/lta0316/Fuentes-and-Friends.git,2023-03-29 17:40:34+00:00,,0,lta0316/Fuentes-and-Friends,620952961,Verilog,Fuentes-and-Friends,121290,0,2023-03-29 17:41:11+00:00,[],https://api.github.com/licenses/apache-2.0
184,https://github.com/Ishaq-p/Verilog_proccessor_initials.git,2023-04-01 15:11:05+00:00,,0,Ishaq-p/Verilog_proccessor_initials,622252469,Verilog,Verilog_proccessor_initials,19269,0,2023-04-04 20:23:52+00:00,[],None
185,https://github.com/Ger0r0r/FPGA_modules.git,2023-04-01 22:01:16+00:00,,0,Ger0r0r/FPGA_modules,622361256,Verilog,FPGA_modules,20,0,2023-04-01 22:05:30+00:00,[],None
186,https://github.com/John-Tito/FPGA_HDL_component.git,2023-04-02 15:00:40+00:00,some components for vhdl or verilog,0,John-Tito/FPGA_HDL_component,622589017,Verilog,FPGA_HDL_component,62,0,2023-04-02 16:26:15+00:00,[],None
187,https://github.com/S-E-N-S-O-H-A-M/Car_Washing_System.git,2023-04-06 07:35:30+00:00,,0,S-E-N-S-O-H-A-M/Car_Washing_System,624312126,Verilog,Car_Washing_System,752,0,2023-04-06 07:42:16+00:00,[],https://api.github.com/licenses/apache-2.0
188,https://github.com/m21aie249/eel7210-bonus.git,2023-04-05 10:59:20+00:00,,0,m21aie249/eel7210-bonus,623912960,Verilog,eel7210-bonus,1509,0,2023-04-05 11:02:01+00:00,[],None
189,https://github.com/Sarvepalli53/Smart-store-using-Verilog-HDL.git,2023-04-07 14:15:49+00:00,,0,Sarvepalli53/Smart-store-using-Verilog-HDL,624891851,Verilog,Smart-store-using-Verilog-HDL,380,0,2023-04-07 14:23:55+00:00,[],None
190,https://github.com/3x10e8/caravel_user_project_analog_tutorial.git,2023-03-29 22:19:28+00:00,,0,3x10e8/caravel_user_project_analog_tutorial,621048313,Verilog,caravel_user_project_analog_tutorial,95,0,2023-03-29 22:19:35+00:00,[],https://api.github.com/licenses/apache-2.0
191,https://github.com/ShnapDozer/GOWIN_EXAMPLES.git,2023-03-31 09:16:16+00:00,,0,ShnapDozer/GOWIN_EXAMPLES,621734254,Verilog,GOWIN_EXAMPLES,37609,0,2023-09-13 13:09:59+00:00,[],None
192,https://github.com/MaximKhodchenkov/NN_coprocessor.git,2023-04-02 13:17:24+00:00,,0,MaximKhodchenkov/NN_coprocessor,622555554,Verilog,NN_coprocessor,2116,0,2023-04-02 14:28:53+00:00,[],None
193,https://github.com/mostafa0001-me/RISCV-Processor.git,2023-04-01 12:00:14+00:00,,0,mostafa0001-me/RISCV-Processor,622193920,Verilog,RISCV-Processor,56,0,2023-04-17 06:36:38+00:00,[],None
194,https://github.com/ZainabKhalid111/Hardware-Projects.git,2023-04-01 11:25:28+00:00,,0,ZainabKhalid111/Hardware-Projects,622184796,Verilog,Hardware-Projects,8303,0,2023-04-01 12:23:28+00:00,[],None
195,https://github.com/selva-raja/-100days_of_code.git,2023-04-03 02:23:06+00:00,,0,selva-raja/-100days_of_code,622761301,Verilog,-100days_of_code,4,0,2023-04-03 02:24:18+00:00,[],None
196,https://github.com/levrage76/BPR.git,2023-04-13 03:40:32+00:00,,0,levrage76/BPR,627232727,Verilog,BPR,15,0,2023-04-13 03:43:34+00:00,[],None
197,https://github.com/YouqiXia/v_practice.git,2023-04-05 14:54:35+00:00,practice and env for v and sv,0,YouqiXia/v_practice,624009910,Verilog,v_practice,96,0,2023-05-17 08:05:59+00:00,[],None
198,https://github.com/hejy47/Assignment4V.git,2023-04-06 08:43:33+00:00,,0,hejy47/Assignment4V,624336579,Verilog,Assignment4V,96,0,2023-04-11 00:44:38+00:00,[],None
199,https://github.com/jianlingg/sdram.git,2023-04-06 04:03:59+00:00,一个FPGA控制sdram的项目,0,jianlingg/sdram,624250020,Verilog,sdram,13284,0,2023-08-18 08:19:09+00:00,[],None
200,https://github.com/QArchy/Digital-devices-and-microprocessors-LAB1.git,2023-04-10 15:35:32+00:00,,0,QArchy/Digital-devices-and-microprocessors-LAB1,626003948,Verilog,Digital-devices-and-microprocessors-LAB1,10955,0,2023-04-11 08:58:42+00:00,[],None
201,https://github.com/achyutshegade/UART-Transceiver-on-FPGA.git,2023-04-10 19:13:53+00:00,,0,achyutshegade/UART-Transceiver-on-FPGA,626087176,Verilog,UART-Transceiver-on-FPGA,16044,0,2023-05-12 07:29:39+00:00,[],None
202,https://github.com/CayoPOliveira/FromNAND2Tetris.git,2023-03-30 03:08:33+00:00,From NAND to Tetris: Icarus Verilog project made for Computer System Elements (ESC) Class,0,CayoPOliveira/FromNAND2Tetris,621121817,Verilog,FromNAND2Tetris,29,0,2023-03-30 22:14:39+00:00,[],None
203,https://github.com/liudmcscs/Computer-Organization-CPU.git,2023-03-30 05:15:59+00:00,,0,liudmcscs/Computer-Organization-CPU,621155766,Verilog,Computer-Organization-CPU,799,0,2023-03-31 04:00:11+00:00,[],None
204,https://github.com/wanly13/Arquitectura-de-Computadoras.git,2023-03-31 15:26:38+00:00,"Curso completo del curso, codigo y ejemplos",0,wanly13/Arquitectura-de-Computadoras,621879079,Verilog,Arquitectura-de-Computadoras,2473,0,2023-04-14 11:17:44+00:00,[],None
205,https://github.com/chenhongbing-31/digital_clock.git,2023-03-31 10:30:35+00:00,,0,chenhongbing-31/digital_clock,621762042,Verilog,digital_clock,51170,0,2023-09-13 13:11:18+00:00,[],None
206,https://github.com/Ruccccc/Computer_Orgnization_Lab.git,2023-04-01 14:08:35+00:00,,0,Ruccccc/Computer_Orgnization_Lab,622232022,Verilog,Computer_Orgnization_Lab,10250,0,2023-12-03 06:04:27+00:00,[],None
207,https://github.com/Zufaruu/matlab_simulink_hdl_rsp.git,2023-04-08 12:26:32+00:00,this is about simulating the design in matlab and generating hdl file from simulink,0,Zufaruu/matlab_simulink_hdl_rsp,625216285,Verilog,matlab_simulink_hdl_rsp,251092,0,2023-11-13 04:10:35+00:00,[],None
208,https://github.com/AnnRathes/Verilog-and-System-Verilog-codes.git,2023-03-28 01:36:47+00:00,Contains all the projects and HDL code,0,AnnRathes/Verilog-and-System-Verilog-codes,620077917,Verilog,Verilog-and-System-Verilog-codes,38,0,2023-03-28 02:09:54+00:00,[],None
209,https://github.com/ManasaDeviMalla/Multiplexer_8x1.git,2023-04-02 07:09:10+00:00,,0,ManasaDeviMalla/Multiplexer_8x1,622459791,Verilog,Multiplexer_8x1,44,0,2023-04-02 07:16:10+00:00,[],None
210,https://github.com/axyrai/FPGA.git,2023-04-03 09:46:58+00:00,,1,axyrai/FPGA,622902344,Verilog,FPGA,6,0,2023-04-13 04:19:06+00:00,[],None
211,https://github.com/dhiptmc/maxpooling.git,2023-04-13 02:51:41+00:00,,0,dhiptmc/maxpooling,627219778,Verilog,maxpooling,11384,0,2023-04-13 02:59:29+00:00,[],None
212,https://github.com/aixb666/axi_stream_insert_header.git,2023-04-13 18:42:14+00:00,,0,aixb666/axi_stream_insert_header,627572471,Verilog,axi_stream_insert_header,2,0,2023-04-13 19:06:28+00:00,[],None
213,https://github.com/dzwyl/obsidian.git,2023-04-13 14:27:05+00:00,,0,dzwyl/obsidian,627468483,Verilog,obsidian,10,0,2023-07-16 12:42:52+00:00,[],None
214,https://github.com/arka-jit/Router-1X3-.git,2023-04-12 14:39:14+00:00,--,0,arka-jit/Router-1X3-,626979769,Verilog,Router-1X3-,4,0,2023-04-12 14:40:27+00:00,[],None
215,https://github.com/shikye/rvcore.git,2023-04-12 14:11:53+00:00,,0,shikye/rvcore,626966600,Verilog,rvcore,247,0,2023-04-12 14:17:58+00:00,[],None
216,https://github.com/Junklea/CmpE-240-Prelabs.git,2023-04-13 08:16:42+00:00,,0,Junklea/CmpE-240-Prelabs,627320760,Verilog,CmpE-240-Prelabs,5,0,2023-04-13 08:20:19+00:00,[],None
217,https://github.com/hk08394habib/dldproject.git,2023-03-31 07:51:30+00:00,,1,hk08394habib/dldproject,621701603,Verilog,dldproject,477,0,2023-04-05 08:41:44+00:00,[],None
218,https://github.com/mireavmis/IEEE754-representation.git,2023-03-31 15:06:23+00:00,,1,mireavmis/IEEE754-representation,621870653,Verilog,IEEE754-representation,2798,0,2023-09-13 13:16:06+00:00,[],None
219,https://github.com/Cassieoso/RISC_V_Single_Cycle_UART.git,2023-03-29 01:02:26+00:00,,0,Cassieoso/RISC_V_Single_Cycle_UART,620581743,Verilog,RISC_V_Single_Cycle_UART,4435,0,2023-03-29 02:54:57+00:00,[],None
220,https://github.com/algofoogle/wrapped_solo_squash.git,2023-04-02 03:48:31+00:00,solo_squash (simple VGA game) HDL wrapped for Zero to ASIC group submission (hopefully MPW9),0,algofoogle/wrapped_solo_squash,622420798,Verilog,wrapped_solo_squash,3864,0,2023-04-02 03:48:37+00:00,[],https://api.github.com/licenses/apache-2.0
221,https://github.com/bisheralwan/TrafficLightController.git,2023-04-01 21:41:37+00:00,Moore & Mealy designs for a traffic light controller in Verilog,0,bisheralwan/TrafficLightController,622357260,Verilog,TrafficLightController,3,0,2023-04-01 21:44:30+00:00,[],None
222,https://github.com/mehaksareen20/MIPSProcessor.git,2023-03-29 11:01:04+00:00,,0,mehaksareen20/MIPSProcessor,620777884,Verilog,MIPSProcessor,9,0,2023-03-29 11:22:38+00:00,[],None
223,https://github.com/nishan1281/VerilogHDL.git,2023-04-03 11:48:47+00:00,VerilogHDL,0,nishan1281/VerilogHDL,622948681,Verilog,VerilogHDL,32,0,2023-04-08 19:45:27+00:00,[],None
224,https://github.com/3ab3at/RISC-V-Processor.git,2023-04-09 21:50:23+00:00,A verilog implementation of  a 5-staged pipelied RISC-V Processor.,0,3ab3at/RISC-V-Processor,625688235,Verilog,RISC-V-Processor,1256,0,2023-04-09 22:34:14+00:00,[],None
225,https://github.com/yueyeweiliang/oc8051.git,2023-04-10 08:52:04+00:00,,0,yueyeweiliang/oc8051,625855371,Verilog,oc8051,91,0,2023-04-10 08:55:52+00:00,[],None
226,https://github.com/XhyDds/COD.git,2023-04-05 03:46:20+00:00,,0,XhyDds/COD,623770433,Verilog,COD,25,0,2023-04-05 03:47:50+00:00,[],None
227,https://github.com/SSJ-0/Minature-Proc.git,2023-04-04 17:16:42+00:00,,0,SSJ-0/Minature-Proc,623590568,Verilog,Minature-Proc,5224,0,2023-04-04 17:50:32+00:00,[],None
228,https://github.com/Pratap-Reddy-K/sequence_dete.git,2023-04-05 17:33:09+00:00,,0,Pratap-Reddy-K/sequence_dete,624074340,Verilog,sequence_dete,215,0,2023-04-05 21:16:14+00:00,[],None
229,https://github.com/ShirajulIslamraj/my_verilog_code.git,2023-04-07 17:55:09+00:00,,0,ShirajulIslamraj/my_verilog_code,624965649,Verilog,my_verilog_code,114,0,2023-04-11 18:07:45+00:00,[],None
230,https://github.com/star697/-C-Users-19361-Desktop-nscscc-group-func_test_v0.01-soc_axi_func-run_vivado-mycpu_prj1.git,2023-04-10 13:22:13+00:00,,0,star697/-C-Users-19361-Desktop-nscscc-group-func_test_v0.01-soc_axi_func-run_vivado-mycpu_prj1,625949215,Verilog,-C-Users-19361-Desktop-nscscc-group-func_test_v0.01-soc_axi_func-run_vivado-mycpu_prj1,82,0,2023-04-10 13:22:54+00:00,[],None
231,https://github.com/CaptainZhangge/test.git,2023-04-03 13:56:27+00:00,,0,CaptainZhangge/test,623004106,Verilog,test,6620,0,2023-05-04 12:01:04+00:00,[],None
232,https://github.com/thejosephloy/digital_lib.git,2023-04-07 18:48:26+00:00,,0,thejosephloy/digital_lib,624981665,Verilog,digital_lib,53,0,2023-04-07 18:52:37+00:00,[],None
233,https://github.com/SaranBodduluri/Digital_Electronics.git,2023-04-07 19:46:29+00:00,Verilog Codes used in EED206 course,0,SaranBodduluri/Digital_Electronics,624997779,Verilog,Digital_Electronics,10,0,2023-04-07 19:49:41+00:00,[],None
234,https://github.com/omar1405/Binary-Encoded-Image-Buffer.git,2023-04-08 04:09:49+00:00,"A shift register that receives and stores a part of the image at any time, enough to apply a 3x3 kernel. The design is pipelined and has padding options. This is part of a bigger project, namely my FYP.",0,omar1405/Binary-Encoded-Image-Buffer,625097882,Verilog,Binary-Encoded-Image-Buffer,5,0,2023-08-22 04:01:08+00:00,[],None
235,https://github.com/star697/c.git,2023-04-08 10:12:56+00:00,,0,star697/c,625182545,Verilog,c,30,0,2023-04-08 13:16:39+00:00,[],None
236,https://github.com/kadirkoylu/caravel_first2.git,2023-04-08 15:23:57+00:00,,0,kadirkoylu/caravel_first2,625266366,Verilog,caravel_first2,41725,0,2023-04-08 15:24:30+00:00,[],https://api.github.com/licenses/apache-2.0
237,https://github.com/basak-tepe/Digital-Systems-Lab.git,2023-04-02 13:50:00+00:00,Lab work for CMPE240,0,basak-tepe/Digital-Systems-Lab,622565798,Verilog,Digital-Systems-Lab,31,0,2023-05-08 11:28:32+00:00,[],None
238,https://github.com/soncii/game-of-life.git,2023-03-28 08:17:23+00:00,,0,soncii/game-of-life,620202113,Verilog,game-of-life,111064,0,2023-05-10 04:33:40+00:00,[],None
239,https://github.com/Intelligent-Computing-Research-Group/PIMLC-Simulator.git,2023-03-27 05:26:49+00:00,,0,Intelligent-Computing-Research-Group/PIMLC-Simulator,619419387,Verilog,PIMLC-Simulator,8059,0,2024-03-21 19:27:41+00:00,[],None
240,https://github.com/1icheng9ian/bpsk_hdl.git,2023-04-03 13:26:11+00:00,,0,1icheng9ian/bpsk_hdl,622990228,Verilog,bpsk_hdl,21,0,2023-04-04 05:41:23+00:00,[],None
241,https://github.com/RohanKhatua/DSD-Verilog.git,2023-04-13 07:56:27+00:00,,0,RohanKhatua/DSD-Verilog,627313114,Verilog,DSD-Verilog,81,0,2023-08-16 14:41:28+00:00,[],None
242,https://github.com/chenadmond/axi_stream_insert_header.git,2023-04-12 11:47:39+00:00,,0,chenadmond/axi_stream_insert_header,626903506,Verilog,axi_stream_insert_header,91,0,2023-04-12 11:51:47+00:00,[],None
243,https://github.com/subhradip096/eSim-Internship.git,2023-03-27 17:45:06+00:00,,0,subhradip096/eSim-Internship,619933204,Verilog,eSim-Internship,10933,0,2023-04-01 17:20:06+00:00,[],https://api.github.com/licenses/mit
244,https://github.com/TharinduChamod/Single-Cycle-CPU.git,2023-03-27 07:53:40+00:00,Single cycle CPU that can execute given number of instructions sets. It has all the basic modules which is needed to execute a instruction without any interruptions.,0,TharinduChamod/Single-Cycle-CPU,619470428,Verilog,Single-Cycle-CPU,1145,0,2023-03-27 08:00:10+00:00,[],None
245,https://github.com/liudmcscs/DLAB.git,2023-03-30 03:49:44+00:00,,0,liudmcscs/DLAB,621133328,Verilog,DLAB,6477,0,2023-03-30 03:52:03+00:00,[],None
246,https://github.com/1dNDN/simple-counter.git,2023-04-07 17:18:32+00:00,,0,1dNDN/simple-counter,624954221,Verilog,simple-counter,1444,0,2023-04-08 14:31:36+00:00,[],None
247,https://github.com/codeheng7/ic.git,2023-04-08 04:28:35+00:00,,0,codeheng7/ic,625101275,Verilog,ic,2,0,2023-04-08 04:33:18+00:00,[],None
248,https://github.com/Shaalan-omar/Carry_Select_Adder.git,2023-04-11 12:35:25+00:00,"You will find all the verilog files needed for the creation and testing of the CSA, such as the RCA, Testbench, and the module itself of course",0,Shaalan-omar/Carry_Select_Adder,626418226,Verilog,Carry_Select_Adder,2,0,2023-04-11 12:36:43+00:00,[],None
249,https://github.com/mostafa0001-me/RISC-v-Processor-demo.git,2023-04-11 23:38:11+00:00,"A working processor that applies the concepts proposed in the RISC-V philosophy that works on (ADD, SUB, BEQ, LW, SW, OR, AND).",0,mostafa0001-me/RISC-v-Processor-demo,626666298,Verilog,RISC-v-Processor-demo,10,0,2023-04-11 23:39:42+00:00,[],None
250,https://github.com/sudharaniinti/Synchronous-FIFO-using-Verilog.git,2023-04-06 16:44:35+00:00,,0,sudharaniinti/Synchronous-FIFO-using-Verilog,624519229,Verilog,Synchronous-FIFO-using-Verilog,119,0,2023-04-06 16:46:16+00:00,[],None
251,https://github.com/zhenianqingren/mips_cpu.git,2023-04-10 06:21:45+00:00,,0,zhenianqingren/mips_cpu,625805986,Verilog,mips_cpu,29544,0,2023-04-10 06:29:42+00:00,[],None
252,https://github.com/1035406941/Project-exp2.git,2023-04-10 12:59:05+00:00,软件工程实验二,0,1035406941/Project-exp2,625940245,Verilog,Project-exp2,18,0,2023-04-10 13:49:59+00:00,[],https://api.github.com/licenses/gpl-3.0
253,https://github.com/Jsafraid/long.git,2023-04-10 13:29:26+00:00,,0,Jsafraid/long,625952038,Verilog,long,17616,0,2023-04-10 13:49:33+00:00,[],None
254,https://github.com/CTL0303/haps_project.git,2023-03-26 12:15:13+00:00,final project that used HAPS-100,0,CTL0303/haps_project,619147779,Verilog,haps_project,2662,0,2023-04-13 06:38:31+00:00,[],None
255,https://github.com/h1dk/AXI_STREAM_INSERT_HEADE.git,2023-03-26 13:10:30+00:00,,0,h1dk/AXI_STREAM_INSERT_HEADE,619163474,Verilog,AXI_STREAM_INSERT_HEADE,171,0,2023-03-26 13:40:57+00:00,[],None
256,https://github.com/omgronny/verilog-2.git,2023-03-26 19:47:41+00:00,,0,omgronny/verilog-2,619285505,Verilog,verilog-2,11,0,2023-03-26 19:50:51+00:00,[],None
257,https://github.com/singhDnaveen45/ROUTER_3X1.git,2023-03-26 17:39:16+00:00,Project is based on the TCP/IP protocol.,0,singhDnaveen45/ROUTER_3X1,619247798,Verilog,ROUTER_3X1,324,0,2023-03-26 17:42:58+00:00,[],https://api.github.com/licenses/mit
258,https://github.com/debleena89/briscv_update_27_march.git,2023-03-27 02:48:35+00:00,,0,debleena89/briscv_update_27_march,619379094,Verilog,briscv_update_27_march,75,0,2023-03-27 02:53:08+00:00,[],None
259,https://github.com/aoao2002/MorseCode.git,2023-03-28 15:55:37+00:00,CS207 project about implement Morse Code using Verilog,0,aoao2002/MorseCode,620401170,Verilog,MorseCode,18,0,2023-03-28 15:56:24+00:00,[],None
260,https://github.com/nalostta/fpga101.git,2023-03-28 21:47:34+00:00,,0,nalostta/fpga101,620532940,Verilog,fpga101,10977,0,2023-03-28 21:48:26+00:00,[],None
261,https://github.com/SE-O22-ITESO/p2-single-cycle-edgar_barba_jorge_velazquez.git,2023-04-13 21:42:12+00:00,p2-single-cycle-edgar_barba_jorge_velazquez created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-edgar_barba_jorge_velazquez,627629695,Verilog,p2-single-cycle-edgar_barba_jorge_velazquez,104730,0,2023-04-13 21:51:50+00:00,[],None
262,https://github.com/PotentLoaf/Prime_Generation.git,2023-03-30 21:35:28+00:00,,0,PotentLoaf/Prime_Generation,621536644,Verilog,Prime_Generation,10027,0,2023-03-30 21:36:14+00:00,[],None
263,https://github.com/ManasaDeviMalla/Clock_freq_divider.git,2023-04-01 04:21:40+00:00,#verilog,0,ManasaDeviMalla/Clock_freq_divider,622083174,Verilog,Clock_freq_divider,15,0,2023-04-01 04:50:16+00:00,[],None
264,https://github.com/zww12231/verilog.git,2023-04-04 11:59:18+00:00,,0,zww12231/verilog,623451781,Verilog,verilog,43,0,2023-04-04 12:09:33+00:00,[],None
265,https://github.com/QSHANSSS/axi_stream_header_insert.git,2023-04-04 02:33:11+00:00,,0,QSHANSSS/axi_stream_header_insert,623258655,Verilog,axi_stream_header_insert,297,0,2023-04-04 02:55:14+00:00,[],None
266,https://github.com/RiccardoCuccu/DLX-project.git,2023-04-04 17:36:12+00:00,DLX processor from RTL down to physical design,0,RiccardoCuccu/DLX-project,623598563,Verilog,DLX-project,26320,0,2023-10-11 17:16:27+00:00,"['dlx', 'embedded-systems', 'microelectronic-systems', 'politecnico-di-torino', 'vhdl']",https://api.github.com/licenses/gpl-3.0
267,https://github.com/asyouwishM/circuit.git,2023-04-05 05:13:13+00:00,,0,asyouwishM/circuit,623792168,Verilog,circuit,776,0,2023-04-05 05:19:55+00:00,[],None
268,https://github.com/pratikbhuran/Memories.git,2023-04-08 15:27:25+00:00,Random Access Memories designed in Verilog,0,pratikbhuran/Memories,625267317,Verilog,Memories,6,0,2023-04-08 15:33:24+00:00,[],https://api.github.com/licenses/bsd-2-clause
269,https://github.com/xobs/gf180mcu-cpu-pizza.git,2023-04-10 03:12:49+00:00,Pizza die with multiple CPUs to test density,0,xobs/gf180mcu-cpu-pizza,625756954,Verilog,gf180mcu-cpu-pizza,38,0,2023-04-10 07:49:38+00:00,[],None
270,https://github.com/IshanGProjects/Lab9-ECEN.git,2023-04-11 22:09:30+00:00,,0,IshanGProjects/Lab9-ECEN,626644341,Verilog,Lab9-ECEN,3,0,2023-04-11 22:13:51+00:00,[],None
271,https://github.com/whilelan/mipsCpu.git,2023-04-08 01:42:04+00:00,,0,whilelan/mipsCpu,625070428,Verilog,mipsCpu,405,0,2023-04-08 01:56:36+00:00,[],None
272,https://github.com/Ethan-Greenwald/FPGA-MIDI-Synthesizer.git,2023-04-12 13:30:02+00:00,A synthesizer made using SystemVerilog that interfaces with a MIDI keyboard (via embedded C) and speaker to produce music. ,1,Ethan-Greenwald/FPGA-MIDI-Synthesizer,626947111,Verilog,FPGA-MIDI-Synthesizer,139360,0,2023-04-12 13:34:40+00:00,[],None
273,https://github.com/furkanklvz/Single-Port-Ram.git,2023-04-13 12:20:17+00:00,16x16 memory,0,furkanklvz/Single-Port-Ram,627413775,Verilog,Single-Port-Ram,1,0,2023-04-13 12:20:58+00:00,[],None
274,https://github.com/TimmyPan29/HelloWorld.git,2023-04-11 13:31:18+00:00,,0,TimmyPan29/HelloWorld,626442640,Verilog,HelloWorld,7,0,2023-05-01 01:26:21+00:00,[],None
275,https://github.com/jestes15/CPE324_FInal_Project.git,2023-04-11 19:10:46+00:00,,0,jestes15/CPE324_FInal_Project,626587488,Verilog,CPE324_FInal_Project,8,0,2023-04-11 19:11:12+00:00,[],None
276,https://github.com/MarininNS/GoertzelAlgorithm.git,2023-04-04 20:45:38+00:00,Goertzel algorithm,0,MarininNS/GoertzelAlgorithm,623667082,Verilog,GoertzelAlgorithm,453952,0,2023-09-22 20:17:27+00:00,[],None
277,https://github.com/Ogumo09/FPGA_HiL_ref.git,2023-04-04 16:47:33+00:00,Verilog code,0,Ogumo09/FPGA_HiL_ref,623578395,Verilog,FPGA_HiL_ref,8,0,2023-04-04 16:48:58+00:00,[],None
278,https://github.com/isabellavittori/stopwatch-module_SD_project.git,2023-04-09 17:30:09+00:00,Stopwatch module in Verilog language for Digital Systems project,0,isabellavittori/stopwatch-module_SD_project,625624829,Verilog,stopwatch-module_SD_project,6,0,2023-04-09 17:35:00+00:00,[],None
279,https://github.com/Dmitrryy/RISCV-CPU.git,2023-04-09 20:24:02+00:00,,0,Dmitrryy/RISCV-CPU,625669269,Verilog,RISCV-CPU,224,0,2023-04-16 13:16:13+00:00,[],None
280,https://github.com/ImEngineerDew/verilogFiles.git,2023-04-07 19:26:28+00:00,This is a database for verilog projects,0,ImEngineerDew/verilogFiles,624992293,Verilog,verilogFiles,2,0,2023-04-08 15:23:18+00:00,[],None
281,https://github.com/3mr3c/corg2023.git,2023-04-06 20:03:44+00:00,,0,3mr3c/corg2023,624587518,Verilog,corg2023,85,0,2023-04-06 20:08:16+00:00,[],None
282,https://github.com/SatyajitMondal27/Approximate-8x8-multiplier-designs.git,2023-04-03 00:37:47+00:00,Implementation of approximate 8x8 multipliers using 4x4 multipliers with 4:2 compressor.,1,SatyajitMondal27/Approximate-8x8-multiplier-designs,622737206,Verilog,Approximate-8x8-multiplier-designs,14,0,2023-04-03 18:50:58+00:00,[],None
283,https://github.com/dddarkside/my_Cobra.git,2023-03-29 22:50:22+00:00,,0,dddarkside/my_Cobra,621056239,Verilog,my_Cobra,8,0,2023-03-29 22:56:22+00:00,[],None
284,https://github.com/RimoGuin/class_verilog.git,2023-03-27 07:45:39+00:00,Stored all verilog files from labwork,0,RimoGuin/class_verilog,619467253,Verilog,class_verilog,12,0,2023-03-27 08:21:49+00:00,[],None
285,https://github.com/AshishThakur2408/Adaptive-FIR-Filter-RTL-Design.git,2023-03-28 19:48:39+00:00,An adaptive filter is a filter with non-constant coefficients. The filter coefficients are adjusted based on an criterium which is often defined to optimize the performance of the filter in its ability to estimate an unknown quantity in an input signal.,0,AshishThakur2408/Adaptive-FIR-Filter-RTL-Design,620495134,Verilog,Adaptive-FIR-Filter-RTL-Design,3317,0,2023-03-28 19:52:40+00:00,[],https://api.github.com/licenses/apache-2.0
286,https://github.com/Tyan-0978/IC_con_2023.git,2023-03-29 09:49:02+00:00,,0,Tyan-0978/IC_con_2023,620749534,Verilog,IC_con_2023,6,0,2023-03-29 09:52:47+00:00,[],None
287,https://github.com/IslamElsadek97/SkyWater130.git,2023-03-31 18:15:07+00:00,,0,IslamElsadek97/SkyWater130,621941010,Verilog,SkyWater130,41725,0,2023-04-10 14:17:46+00:00,[],https://api.github.com/licenses/apache-2.0
288,https://github.com/Kskjordal/Caravel_Integration.git,2023-03-31 17:20:45+00:00,,0,Kskjordal/Caravel_Integration,621921598,Verilog,Caravel_Integration,41725,0,2023-03-31 17:21:21+00:00,[],https://api.github.com/licenses/apache-2.0
289,https://github.com/mymermer/Computer_Organization_Project_1.git,2023-03-26 06:14:47+00:00,Computer Organization 1st Project,1,mymermer/Computer_Organization_Project_1,619059052,Verilog,Computer_Organization_Project_1,3393,0,2023-05-25 12:41:54+00:00,"['computer-organization', 'latex', 'verilog', 'arithmetic-logic-unit']",https://api.github.com/licenses/gpl-3.0
290,https://github.com/prajapati93/Round-robin-arbiter.git,2023-03-30 03:52:34+00:00,,0,prajapati93/Round-robin-arbiter,621134066,Verilog,Round-robin-arbiter,2,0,2023-03-30 03:53:40+00:00,[],None
291,https://github.com/Fearse/Traveling-Salesman-Problem.git,2023-03-30 19:26:04+00:00,"Реализация решения задачи коммивояжера. Используется плата Nexys A7. Поддержка интерфейсов PS/2, VGA, UART.",0,Fearse/Traveling-Salesman-Problem,621494846,Verilog,Traveling-Salesman-Problem,3258,0,2023-03-30 19:28:58+00:00,[],None
292,https://github.com/yathin017/CRYSTALS-Dilithium.git,2023-04-02 05:06:04+00:00,,0,yathin017/CRYSTALS-Dilithium,622434831,Verilog,CRYSTALS-Dilithium,3222,0,2023-04-03 08:35:08+00:00,[],None
293,https://github.com/JeffC25/fpga-digital-lock.git,2023-04-03 17:38:28+00:00,,0,JeffC25/fpga-digital-lock,623100284,Verilog,fpga-digital-lock,64,0,2023-04-03 17:39:50+00:00,[],None
294,https://github.com/EthanMatth/Stopwatch.git,2023-04-04 00:50:26+00:00,,0,EthanMatth/Stopwatch,623232031,Verilog,Stopwatch,25,0,2023-04-04 00:50:33+00:00,[],None
295,https://github.com/pwel-logic-design/PWM_MOD.git,2023-04-04 08:12:26+00:00,,0,pwel-logic-design/PWM_MOD,623362436,Verilog,PWM_MOD,3,0,2023-04-04 08:13:34+00:00,[],None
296,https://github.com/Arya-Ayra/Y86-64-Processor.git,2023-04-04 10:45:04+00:00,Built a Y86-64 processor from scratch,0,Arya-Ayra/Y86-64-Processor,623422892,Verilog,Y86-64-Processor,4138,0,2023-04-04 11:02:00+00:00,[],None
297,https://github.com/rohanraaj2/Digital-Logic-and-Design.git,2023-04-05 19:56:31+00:00,,0,rohanraaj2/Digital-Logic-and-Design,624126576,Verilog,Digital-Logic-and-Design,34,0,2023-04-05 20:02:41+00:00,[],None
298,https://github.com/cepdnaclk/e18-co502-RV32IM-Pipeline-Implementation-Group4.git,2023-03-30 07:47:12+00:00,Single-cycle MIPS-like processor with a memory subsystem including a cache.,3,cepdnaclk/e18-co502-RV32IM-Pipeline-Implementation-Group4,621206570,Verilog,e18-co502-RV32IM-Pipeline-Implementation-Group4,27134,0,2023-08-06 23:16:56+00:00,"['computer-architecture', 'risc-v', 'verilog']",None
299,https://github.com/ravirajchilka/HDL_Programs.git,2023-04-05 03:19:58+00:00,,0,ravirajchilka/HDL_Programs,623764231,Verilog,HDL_Programs,62,0,2024-03-28 19:58:41+00:00,[],None
300,https://github.com/Aman-Pani/PROJECTS.git,2023-04-12 11:29:24+00:00,,0,Aman-Pani/PROJECTS,626896152,Verilog,PROJECTS,4964,0,2023-04-12 11:57:44+00:00,[],https://api.github.com/licenses/mit
301,https://github.com/addrices/keyboard-verilog.git,2023-04-10 08:03:54+00:00,,0,addrices/keyboard-verilog,625839161,Verilog,keyboard-verilog,1,0,2023-04-10 08:04:13+00:00,[],None
302,https://github.com/rnibhriain/digital-logic-design.git,2023-04-09 17:31:06+00:00,,0,rnibhriain/digital-logic-design,625625089,Verilog,digital-logic-design,4,0,2023-04-09 17:39:33+00:00,[],None
303,https://github.com/ykykzq/simpleCPU.git,2023-04-10 12:32:21+00:00,,0,ykykzq/simpleCPU,625930659,Verilog,simpleCPU,28,0,2023-04-10 12:33:52+00:00,[],None
304,https://github.com/cepdnaclk/e18-co502-RV32IM-Pipeline-Implementation-Group-06-.git,2023-03-30 07:53:12+00:00,,3,cepdnaclk/e18-co502-RV32IM-Pipeline-Implementation-Group-06-,621208899,Verilog,e18-co502-RV32IM-Pipeline-Implementation-Group-06-,2243,0,2023-04-05 13:39:50+00:00,[],None
305,https://github.com/shiuantsai/Verilog_new.git,2023-04-10 13:41:05+00:00,,0,shiuantsai/Verilog_new,625956706,Verilog,Verilog_new,1922,0,2023-05-01 15:47:56+00:00,[],None
306,https://github.com/ankitrai123/vlsi.git,2023-04-03 19:45:28+00:00,,0,ankitrai123/vlsi,623147910,Verilog,vlsi,3,0,2023-04-03 19:48:47+00:00,[],None
307,https://github.com/SE-O22-ITESO/p2-single-cycle-navarro_lopez.git,2023-04-10 12:21:44+00:00,p2-single-cycle-navarro_lopez created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-navarro_lopez,625926694,Verilog,p2-single-cycle-navarro_lopez,54811,0,2023-04-11 06:22:38+00:00,[],None
308,https://github.com/rakmok/ECE385_FinalProject.git,2023-04-12 01:36:21+00:00,,0,rakmok/ECE385_FinalProject,626695786,Verilog,ECE385_FinalProject,391256,0,2023-04-12 02:50:11+00:00,[],None
309,https://github.com/FalconBreaker49/TugasAkhir_RTL_Implementation.git,2023-04-13 22:26:56+00:00,"Tugas Akhir II, Implementasi algoritma Double Q-Learning dengan HDL di Verilog",0,FalconBreaker49/TugasAkhir_RTL_Implementation,627641053,Verilog,TugasAkhir_RTL_Implementation,54,0,2023-04-13 22:35:10+00:00,[],None
310,https://github.com/MYNAMEHOLO/test.git,2023-04-13 10:36:00+00:00,just for test,0,MYNAMEHOLO/test,627374668,Verilog,test,2,0,2023-04-13 10:39:26+00:00,[],None
311,https://github.com/SamueleGerminiani/gmBenchmark.git,2023-04-05 14:55:16+00:00,,0,SamueleGerminiani/gmBenchmark,624010260,Verilog,gmBenchmark,12705,0,2023-04-05 15:04:23+00:00,[],None
312,https://github.com/Harmony142/RLE-DE1_SoC.git,2023-04-05 15:27:20+00:00,Convert image to OBPP data stream to encode and compress/decompress,0,Harmony142/RLE-DE1_SoC,624024456,Verilog,RLE-DE1_SoC,1828,0,2023-04-05 15:32:41+00:00,[],None
313,https://github.com/SukanyaMore11/Automation-of-Synthesis-process-using-Genus.git,2023-04-07 14:47:38+00:00,,0,SukanyaMore11/Automation-of-Synthesis-process-using-Genus,624903146,Verilog,Automation-of-Synthesis-process-using-Genus,1506,0,2023-04-07 18:09:16+00:00,[],None
314,https://github.com/Patarimi/mpw2304c_mp.git,2023-04-06 07:53:53+00:00,,0,Patarimi/mpw2304c_mp,624318582,Verilog,mpw2304c_mp,152668,0,2023-04-06 07:54:31+00:00,[],https://api.github.com/licenses/apache-2.0
315,https://github.com/RedSpoonPotato/Pipelined-MIPS-Processor.git,2023-03-27 17:19:21+00:00,For EECS 112L Winter 2023,0,RedSpoonPotato/Pipelined-MIPS-Processor,619922630,Verilog,Pipelined-MIPS-Processor,152,0,2023-03-27 17:27:16+00:00,[],None
316,https://github.com/yash-s-parikh/fpga-vga-test.git,2023-03-28 00:38:04+00:00,,0,yash-s-parikh/fpga-vga-test,620062766,Verilog,fpga-vga-test,12,0,2023-03-30 16:33:41+00:00,[],None
317,https://github.com/nuketuna1101/CA-Computer-Architecture.git,2023-03-29 17:03:01+00:00,2019 - 1st semester - Computer Architecture,0,nuketuna1101/CA-Computer-Architecture,620937667,Verilog,CA-Computer-Architecture,9994,0,2023-03-29 17:08:29+00:00,[],None
318,https://github.com/curious-tux/Simple_UART_Verilog.git,2023-04-01 13:45:43+00:00,,0,curious-tux/Simple_UART_Verilog,622224817,Verilog,Simple_UART_Verilog,1,0,2023-04-01 13:46:36+00:00,[],None
319,https://github.com/AlexandraSeceleanu/Transform-The-Number.git,2023-04-01 09:34:33+00:00,The implementation of a finite automaton whose purpose is to transform a number from base 2 to base 3.,0,AlexandraSeceleanu/Transform-The-Number,622155406,Verilog,Transform-The-Number,183,0,2023-04-01 09:35:14+00:00,[],None
320,https://github.com/VirtuContraFurore/SoundPlayer.git,2023-04-01 10:16:13+00:00,Altera DE2 Sound Player project,0,VirtuContraFurore/SoundPlayer,622166484,Verilog,SoundPlayer,8034,0,2023-04-01 13:11:39+00:00,[],https://api.github.com/licenses/gpl-3.0
321,https://github.com/Baungarten-CINVESTAV/vector_accelerator_unit_for_caravel.git,2023-03-29 13:48:53+00:00,This repo contains the Vector Accelerator Unit for Caravel,0,Baungarten-CINVESTAV/vector_accelerator_unit_for_caravel,620849702,Verilog,vector_accelerator_unit_for_caravel,289725,0,2023-03-30 00:28:45+00:00,[],https://api.github.com/licenses/apache-2.0
322,https://github.com/ChubbsBunns/EE2026_FINAL.git,2023-03-31 09:59:11+00:00,,0,ChubbsBunns/EE2026_FINAL,621750647,Verilog,EE2026_FINAL,13585,0,2023-03-31 10:06:43+00:00,[],None
323,https://github.com/andersontruong/CSM152A-Labs.git,2023-04-04 08:12:11+00:00,UCLA Digital Design Lab,0,andersontruong/CSM152A-Labs,623362342,Verilog,CSM152A-Labs,2756,0,2023-12-02 21:36:25+00:00,[],https://api.github.com/licenses/mit
324,https://github.com/Shaalan-omar/8x8-Array-Multiplier.git,2023-04-10 14:53:11+00:00,"All the Verilog files, including the 8x8 array multiplier itself, that are needed for this design (e.g Half adders, Full adders, etc.)",0,Shaalan-omar/8x8-Array-Multiplier,625986171,Verilog,8x8-Array-Multiplier,34,0,2023-11-13 20:49:59+00:00,[],None
325,https://github.com/Ayman-Helal/UART_TO_APB_BRIDGE.git,2023-03-27 19:00:15+00:00,this project is the interface between the UART and APB bus. this system handels 3 different clock frequancies ,0,Ayman-Helal/UART_TO_APB_BRIDGE,619963051,Verilog,UART_TO_APB_BRIDGE,1079,0,2023-03-27 19:15:43+00:00,[],None
326,https://github.com/EE-noob/traineecode.git,2023-03-28 06:22:58+00:00,my intership experience in msilicon,0,EE-noob/traineecode,620157177,Verilog,traineecode,90649,0,2023-04-21 09:32:38+00:00,[],None
327,https://github.com/srock0107/CPU_DESIGN.git,2023-03-30 17:44:13+00:00,使用Quartus II软件工具，通过Verilog语言以及提供程序构建CPU处理器,0,srock0107/CPU_DESIGN,621456310,Verilog,CPU_DESIGN,14993,0,2023-03-30 17:52:56+00:00,[],None
328,https://github.com/prajapati93/Synchronous-FIFO.git,2023-03-30 03:55:35+00:00,Synchronous FIFO RAM,0,prajapati93/Synchronous-FIFO,621134817,Verilog,Synchronous-FIFO,2,0,2023-03-30 03:56:01+00:00,[],None
329,https://github.com/leocs5204/DIC_Assignment.git,2023-03-31 08:13:20+00:00,Assignments for Digital IC Circuit design course.,0,leocs5204/DIC_Assignment,621709900,Verilog,DIC_Assignment,91553,0,2023-03-31 08:34:16+00:00,[],None
330,https://github.com/Shreyasm22/Hackathon.git,2023-04-02 12:04:30+00:00,,0,Shreyasm22/Hackathon,622534259,Verilog,Hackathon,114,0,2023-04-02 12:04:49+00:00,[],
331,https://github.com/w-zhih/Pipeline-MIPS-Processor.git,2023-04-02 13:34:15+00:00,,0,w-zhih/Pipeline-MIPS-Processor,622560793,Verilog,Pipeline-MIPS-Processor,1841,0,2023-04-02 13:35:54+00:00,[],None
332,https://github.com/ChirikaloVA/AT5351_FPGA_Lattice.git,2023-04-03 11:06:06+00:00,,0,ChirikaloVA/AT5351_FPGA_Lattice,622932729,Verilog,AT5351_FPGA_Lattice,409,0,2023-04-03 13:30:18+00:00,[],None
333,https://github.com/ShiriKlein/calculator_verilog.git,2023-04-03 10:56:49+00:00,"This is a Verilog-based FPGA calculator designed to perform four fundamental arithmetic operations: addition, subtraction, multiplication and division.",0,ShiriKlein/calculator_verilog,622929097,Verilog,calculator_verilog,94,0,2023-04-20 08:10:00+00:00,[],None
334,https://github.com/Oliver-Y/OOO_Parcv2.git,2023-04-02 18:39:43+00:00,Out of Order Parcv2 ISA Verilog processor,0,Oliver-Y/OOO_Parcv2,622655802,Verilog,OOO_Parcv2,65175,0,2023-04-02 18:40:53+00:00,[],None
335,https://github.com/kavanachidananda/Verilog.git,2023-04-04 16:36:44+00:00,,0,kavanachidananda/Verilog,623573906,Verilog,Verilog,34,0,2023-05-15 11:08:26+00:00,[],None
336,https://github.com/aswaniar/efab_2.git,2023-04-05 04:17:47+00:00,,0,aswaniar/efab_2,623778079,Verilog,efab_2,41725,0,2023-04-05 04:18:28+00:00,[],https://api.github.com/licenses/apache-2.0
337,https://github.com/santosh2407/FSM-Based-Up-Counter.git,2023-04-08 18:53:15+00:00,,0,santosh2407/FSM-Based-Up-Counter,625322673,Verilog,FSM-Based-Up-Counter,202,0,2023-04-08 18:53:58+00:00,[],None
338,https://github.com/burakardaa/caraveldeneme.git,2023-04-10 21:15:09+00:00,,0,burakardaa/caraveldeneme,626126380,Verilog,caraveldeneme,93685,0,2023-04-10 21:16:08+00:00,[],https://api.github.com/licenses/apache-2.0
339,https://github.com/nipungoyal03/y86_64_pip_seq.git,2023-04-10 09:07:58+00:00,,0,nipungoyal03/y86_64_pip_seq,625861018,Verilog,y86_64_pip_seq,5981,0,2023-04-10 09:19:15+00:00,[],None
340,https://github.com/ShreyasMaitreya/EE4363.git,2023-04-12 03:37:02+00:00,,0,ShreyasMaitreya/EE4363,626729278,Verilog,EE4363,7,0,2023-04-12 03:38:04+00:00,[],None
341,https://github.com/Shivaprasadm02/advanced_verilog.git,2023-04-13 11:13:51+00:00,,0,Shivaprasadm02/advanced_verilog,627388265,Verilog,advanced_verilog,7095,0,2023-04-13 11:19:54+00:00,[],None
342,https://github.com/Paolaaaaaa/RoadFighter.git,2023-04-12 18:42:38+00:00,,0,Paolaaaaaa/RoadFighter,627082201,Verilog,RoadFighter,37598,0,2023-04-13 22:25:48+00:00,[],None
343,https://github.com/deXter969/Eight-Bit-Microcontroller.git,2023-04-11 11:40:05+00:00,This is 8-bit Microcontroller made in Verilog,0,deXter969/Eight-Bit-Microcontroller,626395804,Verilog,Eight-Bit-Microcontroller,3,0,2023-04-11 11:43:57+00:00,[],None
344,https://github.com/FaidonKourounakis/Elidon.git,2023-03-28 14:23:51+00:00,Elidon - 16bit custom RISC processor by ELIot & faIDON,0,FaidonKourounakis/Elidon,620358806,Verilog,Elidon,33001,0,2023-05-11 08:27:07+00:00,[],None
345,https://github.com/JingYang-04/digital_systems_design.git,2023-03-27 21:57:54+00:00,,0,JingYang-04/digital_systems_design,620022921,Verilog,digital_systems_design,388,0,2023-05-07 16:12:59+00:00,[],None
346,https://github.com/CelioRochadaSilva/ProjetoMips.git,2023-03-29 02:33:27+00:00,,0,CelioRochadaSilva/ProjetoMips,620605779,Verilog,ProjetoMips,2,0,2023-03-31 03:08:51+00:00,[],None
347,https://github.com/sudharaniinti/Clock-Divider.git,2023-03-29 09:20:49+00:00,A clock divider divides the input clock frequency bases on a 32-bit input.,0,sudharaniinti/Clock-Divider,620737743,Verilog,Clock-Divider,97,0,2023-03-29 09:23:16+00:00,[],None
348,https://github.com/avyamalhotra/RISCmachine.git,2023-04-03 03:26:45+00:00,A Reduced instruction set computer written in verilog,0,avyamalhotra/RISCmachine,622777712,Verilog,RISCmachine,461,0,2023-04-03 03:42:47+00:00,[],None
349,https://github.com/Build-A-Moat/2023_IC_design.git,2023-04-07 06:16:42+00:00,,0,Build-A-Moat/2023_IC_design,624735895,Verilog,2023_IC_design,8,0,2023-04-08 07:35:05+00:00,[],None
350,https://github.com/jdw102/pet-feeder.git,2023-04-05 17:29:01+00:00,,0,jdw102/pet-feeder,624072804,Verilog,pet-feeder,366,0,2023-09-04 22:58:02+00:00,[],None
351,https://github.com/chloeeeeeeeeeeeeeeeeee/tpIA_chloe_desrue.git,2023-04-06 21:05:48+00:00,,0,chloeeeeeeeeeeeeeeeeee/tpIA_chloe_desrue,624605773,Verilog,tpIA_chloe_desrue,129,0,2023-04-06 21:11:55+00:00,[],None
352,https://github.com/AbhiramPrasanna/Digital_Design.git,2023-04-08 23:55:09+00:00,In this repository we discusss iverilog codes starting from basics such as gates and build it up to a ALU system.,0,AbhiramPrasanna/Digital_Design,625382549,Verilog,Digital_Design,4,0,2023-04-08 23:56:31+00:00,[],None
353,https://github.com/NalavathVamsinaik/ROUTER-.git,2023-04-09 13:01:02+00:00,,0,NalavathVamsinaik/ROUTER-,625546342,Verilog,ROUTER-,1,0,2023-04-09 13:01:37+00:00,[],None
354,https://github.com/Aditya-Chaurasia11/aaaa.git,2023-03-28 09:50:48+00:00,,0,Aditya-Chaurasia11/aaaa,620240283,Verilog,aaaa,4,0,2023-03-28 09:51:42+00:00,[],None
355,https://github.com/DimitrisT1804/SoC-git.git,2023-04-03 03:25:20+00:00,SoC lesson in ECE,0,DimitrisT1804/SoC-git,622777339,Verilog,SoC-git,52907,0,2024-03-09 20:37:09+00:00,[],None
356,https://github.com/htmos6/ARM-Processor-Designs.git,2023-04-06 09:41:21+00:00," Repository with single-cycle, multi-cycle, and pipelined processor designs for architecture labs. Enables study and experimentation to understand processor functionality and performance improvements through different designs.",0,htmos6/ARM-Processor-Designs,624358578,Verilog,ARM-Processor-Designs,530,0,2024-04-01 12:37:00+00:00,"['hdl', 'verilog']",None
357,https://github.com/unolabo/efx-trinita-exa.git,2023-03-31 06:43:15+00:00,Trinita 1 stage Core for Efinix FPGA,0,unolabo/efx-trinita-exa,621676832,Verilog,efx-trinita-exa,17389,0,2024-03-14 15:02:05+00:00,[],
358,https://github.com/addrices/UART-Verilog.git,2023-04-10 07:31:52+00:00,,0,addrices/UART-Verilog,625828692,Verilog,UART-Verilog,6,0,2023-04-10 07:32:23+00:00,[],None
359,https://github.com/ApurvKeer/Digital-Clock.git,2023-04-09 16:10:26+00:00,,0,ApurvKeer/Digital-Clock,625602441,Verilog,Digital-Clock,1046,0,2023-05-25 14:37:28+00:00,[],None
360,https://github.com/kenwaytempler/Digital-IC-design-.git,2023-04-10 09:46:11+00:00,,0,kenwaytempler/Digital-IC-design-,625874158,Verilog,Digital-IC-design-,53916,0,2023-10-01 06:14:06+00:00,[],None
361,https://github.com/umutc24/verilog-circuits.git,2023-04-10 11:25:03+00:00,,0,umutc24/verilog-circuits,625907074,Verilog,verilog-circuits,48,0,2023-04-10 11:28:51+00:00,[],None
362,https://github.com/SE-O22-ITESO/p2-single-cycle-david_michel_ethan_castillo.git,2023-04-04 00:09:20+00:00,p2-single-cycle-david_michel_ethan_castillo created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-david_michel_ethan_castillo,623222192,Verilog,p2-single-cycle-david_michel_ethan_castillo,49334,0,2023-04-13 02:47:47+00:00,[],None
363,https://github.com/Mahmoud-geberty/HOG_fpga.git,2023-04-02 07:08:54+00:00,Verilog implementation of the HOG algorithm for FPGAs.,0,Mahmoud-geberty/HOG_fpga,622459730,Verilog,HOG_fpga,58,0,2023-04-02 07:11:06+00:00,[],None
364,https://github.com/Sebastian-Ramirez1/Architecture_project.git,2023-04-03 03:03:17+00:00,Repository were Verilog code will be stored and shared. ,0,Sebastian-Ramirez1/Architecture_project,622771666,Verilog,Architecture_project,176,0,2023-04-12 00:14:25+00:00,[],None
365,https://github.com/sudharaniinti/Counters-in-Verilog.git,2023-04-02 09:07:41+00:00,,0,sudharaniinti/Counters-in-Verilog,622487532,Verilog,Counters-in-Verilog,115,0,2023-04-02 09:38:22+00:00,[],None
366,https://github.com/felixwil/cse490-project1.git,2023-03-29 02:36:01+00:00,,0,felixwil/cse490-project1,620606561,Verilog,cse490-project1,53,0,2023-03-29 16:18:43+00:00,[],None
367,https://github.com/dwongbound/EE354Project.git,2023-04-07 01:37:48+00:00,,0,dwongbound/EE354Project,624668242,Verilog,EE354Project,2205,0,2023-04-27 11:13:23+00:00,[],None
368,https://github.com/csp2002/design-of-a-CPU-by-gated-circuit.git,2023-04-11 12:47:47+00:00,,0,csp2002/design-of-a-CPU-by-gated-circuit,626423356,Verilog,design-of-a-CPU-by-gated-circuit,22254,0,2023-04-11 12:58:02+00:00,[],None
369,https://github.com/HaikDivanyan/152a.git,2023-04-11 19:45:13+00:00,,0,HaikDivanyan/152a,626599466,Verilog,152a,9748,0,2023-06-08 20:54:26+00:00,[],None
370,https://github.com/santosh2407/UART-Communication-to-Print-a-Single-Character-using-Verilog.git,2023-04-08 18:02:27+00:00,,0,santosh2407/UART-Communication-to-Print-a-Single-Character-using-Verilog,625309997,Verilog,UART-Communication-to-Print-a-Single-Character-using-Verilog,471,0,2023-04-08 18:03:44+00:00,[],None
371,https://github.com/praveenyadav02011995/fpga-based-assignment-VLSI-ciruit-for-signal-processing.git,2023-03-27 19:35:59+00:00,fpga based assignment VLSI ciruit for signal processing,0,praveenyadav02011995/fpga-based-assignment-VLSI-ciruit-for-signal-processing,619976401,Verilog,fpga-based-assignment-VLSI-ciruit-for-signal-processing,2171,0,2023-03-27 19:47:47+00:00,[],None
372,https://github.com/Soupyf/Minisys-CPU.git,2023-03-28 02:56:26+00:00,"Group project at Computer Organization course in SUSTech, 2022 Spring.",0,Soupyf/Minisys-CPU,620100105,Verilog,Minisys-CPU,685,0,2023-09-03 06:39:10+00:00,[],None
373,https://github.com/Rohithgarde/fpga.git,2023-03-28 07:28:40+00:00,,1,Rohithgarde/fpga,620181776,Verilog,fpga,1771,0,2023-05-15 10:55:29+00:00,[],None
374,https://github.com/EmbeddedCamerata/RV32I-RISC-CPU-with-Pipeline.git,2023-03-26 07:07:02+00:00,"Single-cycle RISC CPU with 5-stage pipeline and multiplication & division support based on RV32I, verified & deployed rotating leds on Genesys2.",0,EmbeddedCamerata/RV32I-RISC-CPU-with-Pipeline,619070561,Verilog,RV32I-RISC-CPU-with-Pipeline,470,0,2023-04-05 12:50:15+00:00,"['riscv', 'genesys2', 'iverilog', 'rv32i', 'cpu']",https://api.github.com/licenses/mit
375,https://github.com/shinysw/ece350_drawing_robot.git,2023-03-30 10:05:56+00:00,,0,shinysw/ece350_drawing_robot,621262227,Verilog,ece350_drawing_robot,16564,0,2023-03-30 15:41:07+00:00,[],None
376,https://github.com/StellaVesperi/USTC_23sp_computer-organization-and-design.git,2023-04-03 12:13:03+00:00,2023春卢建良班计算机组成原理实验。,0,StellaVesperi/USTC_23sp_computer-organization-and-design,622958923,Verilog,USTC_23sp_computer-organization-and-design,50293,0,2023-07-08 15:28:41+00:00,[],None
377,https://github.com/turkbayrakalp/LogicLabsHomeworks.git,2023-03-30 16:10:52+00:00,The set of homeworks and their solutions assigned to the students of 2021-2022 Logic Circuits Lab,0,turkbayrakalp/LogicLabsHomeworks,621418523,Verilog,LogicLabsHomeworks,6836,0,2023-03-30 16:11:49+00:00,[],None
378,https://github.com/cha-eiou/git_test.git,2023-03-30 15:34:15+00:00,,0,cha-eiou/git_test,621402612,Verilog,git_test,0,0,2023-03-30 15:40:58+00:00,[],None
379,https://github.com/21fernando/350-Project.git,2023-04-01 20:12:15+00:00,,0,21fernando/350-Project,622337873,Verilog,350-Project,57758,0,2023-04-01 20:18:34+00:00,[],None
380,https://github.com/AnasATaleeb/DigitalProject.git,2023-03-30 21:44:23+00:00,Final project for digital course ,0,AnasATaleeb/DigitalProject,621539069,Verilog,DigitalProject,8,0,2023-03-30 21:45:29+00:00,[],None
381,https://github.com/davcurse/ec413_lab7.git,2023-03-31 06:12:10+00:00,,0,davcurse/ec413_lab7,621666609,Verilog,ec413_lab7,7,0,2023-03-31 06:13:26+00:00,[],None
382,https://github.com/julietarojas/logic.git,2023-04-07 23:42:52+00:00,,0,julietarojas/logic,625050626,Verilog,logic,8,0,2023-04-07 23:44:07+00:00,[],None
383,https://github.com/Akana-kunama/Inserter.git,2023-04-11 13:23:40+00:00,,0,Akana-kunama/Inserter,626439100,Verilog,Inserter,49,0,2023-04-11 13:42:59+00:00,[],None
384,https://github.com/eva-ljj/axi_stream_insert_header.git,2023-04-12 19:11:12+00:00,,0,eva-ljj/axi_stream_insert_header,627092758,Verilog,axi_stream_insert_header,528,0,2023-04-12 19:34:30+00:00,[],None
385,https://github.com/etzhong/ducking-duck.git,2023-04-13 02:33:09+00:00,,1,etzhong/ducking-duck,627214638,Verilog,ducking-duck,164,0,2023-05-08 03:04:54+00:00,[],None
386,https://github.com/FermendjinPatricia/OC-Proiect.git,2023-03-27 09:31:48+00:00,,0,FermendjinPatricia/OC-Proiect,619509913,Verilog,OC-Proiect,13,0,2023-11-20 17:30:25+00:00,[],None
387,https://github.com/IshanMK/8-bit-single-cycle-cpu.git,2023-04-04 15:23:35+00:00,"simple 8-bit single-cycle processor which includes an  ALU, a register file and control logic, using Verilog HDL.",0,IshanMK/8-bit-single-cycle-cpu,623543740,Verilog,8-bit-single-cycle-cpu,3502,0,2024-01-14 14:27:53+00:00,"['control-unit', 'register', 'single-cycle-processor', 'verilog']",None
388,https://github.com/ytmTragodie/DigitalClock-Verilog-.git,2023-04-12 08:20:35+00:00,digital clock verilog code 数字钟verilog代码,0,ytmTragodie/DigitalClock-Verilog-,626820934,Verilog,DigitalClock-Verilog-,7,0,2023-04-12 08:40:19+00:00,[],None
389,https://github.com/Trehan-Mayank/P1_7_Segment_4_Digits_VERILOG.git,2023-04-03 15:26:29+00:00,A 8 Bit Data Output on a 7 Segment Display using 4 Digits,0,Trehan-Mayank/P1_7_Segment_4_Digits_VERILOG,623045526,Verilog,P1_7_Segment_4_Digits_VERILOG,6,0,2023-04-04 12:44:36+00:00,[],None
390,https://github.com/small-han/FIFO.git,2023-04-06 01:20:40+00:00,,0,small-han/FIFO,624208591,Verilog,FIFO,14,0,2023-04-21 07:28:21+00:00,[],None
391,https://github.com/ManasaDeviMalla/Synchronous_FIFO.git,2023-04-10 04:16:46+00:00,,0,ManasaDeviMalla/Synchronous_FIFO,625773056,Verilog,Synchronous_FIFO,121,0,2023-04-10 04:23:33+00:00,[],None
392,https://github.com/prakriti-shahi/Digital-Electronics-project.git,2023-04-09 14:43:39+00:00,,0,prakriti-shahi/Digital-Electronics-project,625576326,Verilog,Digital-Electronics-project,9,0,2023-07-10 06:29:50+00:00,[],None
393,https://github.com/leejunhee3123/comp-org_lab1.git,2023-04-09 01:58:58+00:00,,0,leejunhee3123/comp-org_lab1,625401896,Verilog,comp-org_lab1,2389,0,2023-04-09 05:07:58+00:00,[],None
394,https://github.com/candyguy06/Course_Project.git,2023-03-27 15:07:02+00:00,,0,candyguy06/Course_Project,619863882,Verilog,Course_Project,18605,0,2023-03-27 15:44:48+00:00,[],None
395,https://github.com/jc123488/icc2023.git,2023-03-28 10:12:21+00:00,,0,jc123488/icc2023,620249093,Verilog,icc2023,2163,0,2023-09-07 06:19:59+00:00,[],None
396,https://github.com/namsengi11/EE2026-PI.git,2023-03-28 12:45:25+00:00,,0,namsengi11/EE2026-PI,620312302,Verilog,EE2026-PI,65,0,2023-03-28 12:46:17+00:00,[],None
397,https://github.com/PhilipHep/Open-Source-Hardware.git,2023-03-26 21:21:59+00:00,,0,PhilipHep/Open-Source-Hardware,619309821,Verilog,Open-Source-Hardware,41725,0,2023-03-29 07:13:40+00:00,[],https://api.github.com/licenses/apache-2.0
398,https://github.com/ebkassa/PMTCounter_with_GUI.git,2023-03-28 09:14:45+00:00,,0,ebkassa/PMTCounter_with_GUI,620225628,,PMTCounter_with_GUI,6284,0,2023-02-24 09:12:10+00:00,[],None
399,https://github.com/RyanLeahy/NEORV32-efabless.git,2023-03-27 23:24:56+00:00,,0,RyanLeahy/NEORV32-efabless,620045210,Verilog,NEORV32-efabless,42130,0,2023-03-27 23:25:35+00:00,[],https://api.github.com/licenses/apache-2.0
400,https://github.com/patrick-lin-git/caravel-soc_fpga.git,2023-04-02 05:50:31+00:00,start Caravel SOC porting to PYNQ board,0,patrick-lin-git/caravel-soc_fpga,622443292,,caravel-soc_fpga,187,0,2023-05-25 03:33:53+00:00,[],None
401,https://github.com/sicajc/2023_ICC_Laser.git,2023-04-01 08:06:53+00:00,Revised version of laser,0,sicajc/2023_ICC_Laser,622132916,Verilog,2023_ICC_Laser,35583,0,2023-04-01 08:07:35+00:00,[],None
402,https://github.com/yajashgoplani/RISCV_1.00.git,2023-03-31 11:54:36+00:00,,0,yajashgoplani/RISCV_1.00,621792190,Verilog,RISCV_1.00,608,0,2023-03-31 12:04:23+00:00,[],None
403,https://github.com/haicarrick97/sigma_delta_adc.git,2023-03-30 08:51:49+00:00,,0,haicarrick97/sigma_delta_adc,621231909,Verilog,sigma_delta_adc,41725,0,2023-03-30 08:52:24+00:00,[],https://api.github.com/licenses/apache-2.0
404,https://github.com/ChenHaoHSU/dadda.git,2023-03-30 20:38:09+00:00,"Final Project (High Speed Computer Arithmetic, Spring 2023)",0,ChenHaoHSU/dadda,621519665,Verilog,dadda,104,0,2023-04-16 08:22:14+00:00,[],None
405,https://github.com/khyaatikadam/lane_detection.git,2023-04-02 14:42:28+00:00,Repository for lane detection to be done on both FPGA and Microprocessor.,1,khyaatikadam/lane_detection,622583028,Verilog,lane_detection,97913,0,2023-04-04 16:33:31+00:00,[],None
406,https://github.com/ManasaDeviMalla/Decoder_4x16.git,2023-04-02 15:14:31+00:00,,0,ManasaDeviMalla/Decoder_4x16,622593501,Verilog,Decoder_4x16,36,0,2023-04-02 15:29:16+00:00,[],None
407,https://github.com/xiemengjie-kay/Pipelined_MIPS_Processor.git,2023-04-03 03:46:59+00:00,,0,xiemengjie-kay/Pipelined_MIPS_Processor,622782590,Verilog,Pipelined_MIPS_Processor,10,0,2023-08-19 08:53:11+00:00,[],https://api.github.com/licenses/mit
408,https://github.com/BorisGorelov/lfst_scrambler.git,2023-03-30 15:13:46+00:00,,0,BorisGorelov/lfst_scrambler,621393410,Verilog,lfst_scrambler,0,0,2023-09-13 12:57:12+00:00,[],None
409,https://github.com/EnigmaC0de/Y86-Processor-Architecture-Design.git,2023-04-05 06:36:18+00:00,,0,EnigmaC0de/Y86-Processor-Architecture-Design,623816425,Verilog,Y86-Processor-Architecture-Design,529,0,2023-04-05 06:49:47+00:00,[],None
410,https://github.com/JSCooode/LDD_Posit_Decoder.git,2023-04-05 03:01:52+00:00,,1,JSCooode/LDD_Posit_Decoder,623759828,Verilog,LDD_Posit_Decoder,12,0,2023-04-05 03:03:19+00:00,[],None
411,https://github.com/abartella02/3tb4-lab-5.git,2023-04-12 20:42:34+00:00,Lab 5 code because it was too large to include in the report directly,0,abartella02/3tb4-lab-5,627123369,Verilog,3tb4-lab-5,11,0,2023-04-12 20:46:13+00:00,[],None
412,https://github.com/Nisha-B-Rajput/FPGA-Implementation-of-the-Trigonometric-Functions-Using-the-CORDIC-Algorithm.git,2023-04-12 17:02:40+00:00,,0,Nisha-B-Rajput/FPGA-Implementation-of-the-Trigonometric-Functions-Using-the-CORDIC-Algorithm,627042507,Verilog,FPGA-Implementation-of-the-Trigonometric-Functions-Using-the-CORDIC-Algorithm,2962,0,2023-04-12 17:08:17+00:00,[],https://api.github.com/licenses/mit
413,https://github.com/selenakin/corg.git,2023-04-12 12:59:48+00:00,,1,selenakin/corg,626933646,Verilog,corg,9,0,2023-04-12 13:02:31+00:00,[],None
414,https://github.com/praveenyadav02011995/RTL-basic.git,2023-03-26 19:45:23+00:00,basic concept of verilog,0,praveenyadav02011995/RTL-basic,619284801,Verilog,RTL-basic,9890,0,2023-03-26 19:47:32+00:00,[],None
415,https://github.com/praveenyadav02011995/FPGA-Lab.git,2023-03-27 17:31:17+00:00,"in this lab, we used Edge Artix-7 FPGA board for assignment.",0,praveenyadav02011995/FPGA-Lab,619927645,Verilog,FPGA-Lab,498467,0,2023-06-04 07:59:07+00:00,[],None
416,https://github.com/wxiaoyao17/newcoder_verilog.git,2023-03-27 17:01:07+00:00,,0,wxiaoyao17/newcoder_verilog,619914962,Verilog,newcoder_verilog,1,0,2023-03-27 17:25:21+00:00,[],None
417,https://github.com/RaviKumarKorada217/Adders.git,2023-03-31 10:00:53+00:00,,0,RaviKumarKorada217/Adders,621751364,Verilog,Adders,764,0,2023-03-31 13:41:05+00:00,[],None
418,https://github.com/crgales/uart_vigvic18.git,2023-04-10 15:04:56+00:00,,0,crgales/uart_vigvic18,625991033,Verilog,uart_vigvic18,8569,0,2023-04-10 15:21:16+00:00,[],None
419,https://github.com/Devansh0210/UART_Regs.git,2023-03-26 10:44:10+00:00,Basic Verilog IP for UART based Control Registers,0,Devansh0210/UART_Regs,619123320,Verilog,UART_Regs,88,0,2023-03-26 10:48:29+00:00,[],None
420,https://github.com/AndyWuu1/HW5.git,2023-04-01 06:07:03+00:00,,0,AndyWuu1/HW5,622104705,Verilog,HW5,2,0,2023-04-01 06:08:21+00:00,[],None
421,https://github.com/MichaelBell/tt03-fifo.git,2023-03-28 10:46:40+00:00,,0,MichaelBell/tt03-fifo,620262451,Verilog,tt03-fifo,47,0,2023-03-28 10:54:27+00:00,[],https://api.github.com/licenses/apache-2.0
422,https://github.com/JetKodiak/TAMU-ECEN-248.git,2023-03-29 20:40:34+00:00,,0,JetKodiak/TAMU-ECEN-248,621019270,,TAMU-ECEN-248,2854,0,2023-11-02 17:48:38+00:00,[],None
423,https://github.com/phasza/cellular-automaton-verilog-demo.git,2023-03-29 15:13:33+00:00,"A simple cellular automaton on FPGA, displayed via VGA display, written in Verilog",0,phasza/cellular-automaton-verilog-demo,620890567,Verilog,cellular-automaton-verilog-demo,1663,0,2023-03-29 15:34:27+00:00,[],https://api.github.com/licenses/mit
424,https://github.com/ManasaDeviMalla/RCA_4bit.git,2023-04-02 06:47:32+00:00,,0,ManasaDeviMalla/RCA_4bit,622455051,Verilog,RCA_4bit,57,0,2023-04-02 07:17:17+00:00,[],None
425,https://github.com/kammoh/sparkle.git,2023-04-04 02:55:45+00:00,,0,kammoh/sparkle,623264818,Verilog,sparkle,13764,0,2023-04-04 02:57:35+00:00,[],None
426,https://github.com/meosii/SPI.git,2023-03-29 09:17:13+00:00,,0,meosii/SPI,620736256,Verilog,SPI,17,0,2023-03-29 09:17:21+00:00,[],None
427,https://github.com/Pritam-Das-059/Karatsuba-Multipler_GF163.git,2023-03-28 17:25:33+00:00,"Verilog code for computing,C(x) =A(x)∗B(x) where A(x) and B(x) belong to GF(2^163). Irreducible  polynomial  for  the  Galios field is - x^163+x^80+x^47+x^9+1. The Karatsuba multiplication technique is used for multiplication. This repository contains the source files with proper test benches.",0,Pritam-Das-059/Karatsuba-Multipler_GF163,620439725,Verilog,Karatsuba-Multipler_GF163,50,0,2023-03-28 17:40:06+00:00,[],None
428,https://github.com/stuparu-daniel/Non-Restoring-Division-Verilog.git,2023-03-27 18:26:50+00:00,,0,stuparu-daniel/Non-Restoring-Division-Verilog,619950024,Verilog,Non-Restoring-Division-Verilog,6290,0,2023-03-27 18:31:38+00:00,[],None
429,https://github.com/pera294/PS2-keyboard-protocol.git,2023-04-10 22:26:23+00:00,Implementation of PS2 protocol for keyboard and Altera Cyclone® V FPGA board,0,pera294/PS2-keyboard-protocol,626145505,Verilog,PS2-keyboard-protocol,2298,0,2023-04-10 22:41:14+00:00,[],None
430,https://github.com/kesh1508/ARM7.git,2023-04-09 12:54:31+00:00,,0,kesh1508/ARM7,625544561,Verilog,ARM7,12,0,2023-04-09 12:55:40+00:00,[],None
431,https://github.com/tcrdl-ozaki/openmpw_test2.git,2023-04-06 02:27:33+00:00,,0,tcrdl-ozaki/openmpw_test2,624225429,Verilog,openmpw_test2,41725,0,2023-04-06 02:28:09+00:00,[],https://api.github.com/licenses/apache-2.0
432,https://github.com/furkanklvz/traficLights.git,2023-04-10 12:11:42+00:00,"A verilog file running on the FPGA board with a red light for 20 seconds, a green light for 5 seconds, and a yellow light for 2 seconds.",0,furkanklvz/traficLights,625922953,Verilog,traficLights,2,0,2023-04-10 12:16:15+00:00,[],None
433,https://github.com/Lauritabrenes/Proyecto-II-Introduccion-a-diseno-digital-en-HDL.git,2023-04-10 21:31:50+00:00,,0,Lauritabrenes/Proyecto-II-Introduccion-a-diseno-digital-en-HDL,626131129,Verilog,Proyecto-II-Introduccion-a-diseno-digital-en-HDL,84,0,2023-05-04 10:23:49+00:00,[],https://api.github.com/licenses/mit
434,https://github.com/m21aie249/eel7210-lab6.git,2023-04-05 01:11:27+00:00,,0,m21aie249/eel7210-lab6,623733599,Verilog,eel7210-lab6,372,0,2023-04-05 01:14:54+00:00,[],None
435,https://github.com/mahalsa/experiments.git,2023-04-05 20:50:55+00:00,,0,mahalsa/experiments,624143784,Verilog,experiments,2,0,2023-04-26 10:22:27+00:00,[],None
436,https://github.com/elliotdziemiela1/Tetris-on-FPGA.git,2023-04-13 16:16:20+00:00,An original tetris game written in systemverilog.,0,elliotdziemiela1/Tetris-on-FPGA,627515026,Verilog,Tetris-on-FPGA,524778,0,2023-10-06 15:18:57+00:00,[],None
437,https://github.com/SE-O22-ITESO/p2-single-cycle-dm_cassandra_osobampo_erick_vite_risc_v.git,2023-04-11 20:31:29+00:00,p2-single-cycle-dm_cassandra_osobampo_erick_vite_risc_v created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-dm_cassandra_osobampo_erick_vite_risc_v,626615190,Verilog,p2-single-cycle-dm_cassandra_osobampo_erick_vite_risc_v,4148,0,2023-04-12 03:15:02+00:00,[],None
438,https://github.com/sorict/FPGA.git,2023-04-07 15:53:28+00:00,,0,sorict/FPGA,624926435,Verilog,FPGA,482,0,2023-04-13 21:50:27+00:00,[],None
439,https://github.com/osia0921/Portfolio.git,2023-04-11 01:58:44+00:00,,0,osia0921/Portfolio,626198724,Verilog,Portfolio,48,0,2023-04-11 02:01:15+00:00,[],None
440,https://github.com/ManasaDeviMalla/ROM_DualAddress.git,2023-04-08 10:42:52+00:00,,0,ManasaDeviMalla/ROM_DualAddress,625190154,Verilog,ROM_DualAddress,58,0,2023-04-08 10:54:25+00:00,[],None
441,https://github.com/NikolaosGian/RTL_Blowfish.git,2023-04-11 07:52:01+00:00,Hardware implementation of blowfish algorithm for the secure data  transmission in Internet of Things,0,NikolaosGian/RTL_Blowfish,626306991,Verilog,RTL_Blowfish,127967,0,2023-04-11 09:55:00+00:00,[],https://api.github.com/licenses/mit
442,https://github.com/PaulShand/Intro-Logic-Design.git,2023-04-12 20:54:31+00:00,Lab work done for CSE 100 Logic Design class utilizing Verilog programing on a Basys 3 Artix-7 FPGA Trainer Board,0,PaulShand/Intro-Logic-Design,627126999,Verilog,Intro-Logic-Design,46501,0,2024-01-18 22:21:43+00:00,[],None
443,https://github.com/johnwinans/crc8.git,2023-04-08 13:38:03+00:00,,0,johnwinans/crc8,625235284,Verilog,crc8,21,0,2023-04-08 13:57:37+00:00,[],https://api.github.com/licenses/gpl-3.0
444,https://github.com/MeghanaRBhat/practice.git,2023-03-27 07:28:27+00:00,,0,MeghanaRBhat/practice,619460540,Verilog,practice,9,0,2023-04-06 04:45:20+00:00,[],None
445,https://github.com/proy10/RepVGG_acc.git,2023-04-03 08:13:01+00:00,,0,proy10/RepVGG_acc,622865156,Verilog,RepVGG_acc,1729,0,2023-04-19 06:48:32+00:00,[],None
446,https://github.com/alumpish/CA-Lab-Projects.git,2023-04-01 17:36:10+00:00,Projects of the computer architecture lab (Spring 02) at the University of Tehran.,0,alumpish/CA-Lab-Projects,622297247,Verilog,CA-Lab-Projects,14545,0,2023-10-06 11:23:39+00:00,"['arm', 'cache', 'pipeline', 'processor-architecture', 'sram', 'forwarding-']",https://api.github.com/licenses/mit
447,https://github.com/srikar555/CRC_VERILOG.git,2023-04-09 19:03:22+00:00,,0,srikar555/CRC_VERILOG,625649556,Verilog,CRC_VERILOG,6,0,2023-04-09 19:09:01+00:00,[],None
448,https://github.com/Pritam-Sethuraman/Calc1.git,2023-04-09 21:06:33+00:00,,0,Pritam-Sethuraman/Calc1,625679065,Verilog,Calc1,40,0,2023-04-09 22:52:46+00:00,"['systemverilog', 'verilog', 'functional-verification']",https://api.github.com/licenses/mit
449,https://github.com/DylanKennyBoland/Multiplier.git,2023-04-07 09:09:24+00:00,,0,DylanKennyBoland/Multiplier,624791084,Verilog,Multiplier,38,0,2023-04-08 17:02:42+00:00,[],None
450,https://github.com/tms-byte/lfsr_verilog.git,2023-04-07 12:59:29+00:00,my verilog implementation of lfsr,0,tms-byte/lfsr_verilog,624865455,Verilog,lfsr_verilog,10,0,2023-04-07 13:29:48+00:00,[],None
451,https://github.com/wangbowenhaizi/verilog.git,2023-04-07 09:42:08+00:00,,0,wangbowenhaizi/verilog,624802476,Verilog,verilog,19,0,2023-04-07 09:45:53+00:00,[],None
452,https://github.com/tassyla/PCS3225.git,2023-04-12 12:24:32+00:00,,0,tassyla/PCS3225,626918593,Verilog,PCS3225,16,0,2023-04-12 12:29:49+00:00,[],None
453,https://github.com/WongChaoya/key_debounce.git,2023-04-05 14:05:19+00:00,,0,WongChaoya/key_debounce,623988398,Verilog,key_debounce,1,0,2023-04-05 14:06:14+00:00,[],None
454,https://github.com/NalavathVamsinaik/FIFO.git,2023-04-06 16:12:38+00:00,,0,NalavathVamsinaik/FIFO,624507805,Verilog,FIFO,60,0,2023-04-06 16:13:42+00:00,[],None
455,https://github.com/22aronl/OoOP.git,2023-04-13 04:25:51+00:00,An Out of Order Processor built in Verilog,0,22aronl/OoOP,627243981,Verilog,OoOP,373,0,2023-04-14 04:06:51+00:00,[],None
456,https://github.com/RISCO-5bola/multiplicador-aula-2.git,2023-04-11 02:52:08+00:00,,0,RISCO-5bola/multiplicador-aula-2,626213679,Verilog,multiplicador-aula-2,1,0,2023-04-11 02:53:34+00:00,[],None
457,https://github.com/Shaalan-omar/Ripple_CarrAdder.git,2023-04-11 12:29:46+00:00,"You will find all the Verilog files needed for creating and testing the Ripple Carry Adder module, the Full Adder, the testbench for the RCA and the RCA module itself of course",0,Shaalan-omar/Ripple_CarrAdder,626415883,Verilog,Ripple_CarrAdder,1,0,2023-04-11 12:30:59+00:00,[],None
458,https://github.com/santosh2407/FSM-Based-Edge-Detector.git,2023-04-08 18:25:47+00:00,,0,santosh2407/FSM-Based-Edge-Detector,625315989,Verilog,FSM-Based-Edge-Detector,163,0,2023-04-08 18:52:38+00:00,[],None
459,https://github.com/Barabas5532/crush.git,2023-04-11 21:30:51+00:00,RISC-V processor (RV32I),0,Barabas5532/crush,626633813,Verilog,crush,98,0,2023-09-25 15:35:13+00:00,[],None
460,https://github.com/JunFN888/AXU3EG_TCL.git,2023-04-13 07:58:24+00:00,,0,JunFN888/AXU3EG_TCL,627313862,Verilog,AXU3EG_TCL,8126,0,2023-04-13 07:59:44+00:00,[],None
461,https://github.com/suryarameshkumar/VLSI_DESIGN.git,2023-04-02 03:01:57+00:00,Project Files - VLSI Design ,0,suryarameshkumar/VLSI_DESIGN,622412647,Verilog,VLSI_DESIGN,6522,0,2023-04-03 03:56:38+00:00,[],None
462,https://github.com/ramasatyasai/RTL_Design_verification.git,2023-03-28 17:04:51+00:00,This Github repository is dedicated to RTL (Register Transfer Level) design and verification. RTL is a hardware description language used to model digital circuits at a low-level of abstraction. The repository contains design and verification code and scripts for Digital Circuits.,0,ramasatyasai/RTL_Design_verification,620431024,Verilog,RTL_Design_verification,28,0,2023-03-28 17:13:04+00:00,[],None
463,https://github.com/jiegec/try-firtool.git,2023-04-04 13:05:24+00:00,Experiment with firtool verilog generation,0,jiegec/try-firtool,623479840,Verilog,try-firtool,82,0,2023-10-05 06:41:03+00:00,[],None
464,https://github.com/NouranAbdelaziz/caravel_mgmt_Soc_debug_FPGA.git,2023-04-04 12:44:49+00:00,,0,NouranAbdelaziz/caravel_mgmt_Soc_debug_FPGA,623470831,Verilog,caravel_mgmt_Soc_debug_FPGA,99,0,2023-04-04 12:51:40+00:00,[],None
465,https://github.com/qixiao1224/ee4840project.git,2023-04-04 16:37:54+00:00,EE4840 Course Project,0,qixiao1224/ee4840project,623574421,Verilog,ee4840project,176848,0,2023-06-04 20:20:47+00:00,[],None
466,https://github.com/melisayildirimy/fbu-cpu-rtl-tasarimi.git,2023-04-13 23:50:42+00:00,,0,melisayildirimy/fbu-cpu-rtl-tasarimi,627659946,Verilog,fbu-cpu-rtl-tasarimi,2,0,2023-04-14 00:10:27+00:00,[],None
467,https://github.com/mamedov-ma/RT_lab.git,2023-04-10 07:46:39+00:00,,0,mamedov-ma/RT_lab,625833672,Verilog,RT_lab,5,0,2023-04-10 07:47:29+00:00,[],None
468,https://github.com/fivexxxxx/fpga_prj.git,2023-04-10 06:04:15+00:00,FPGA之 状态机 ，计数器的技巧训练  及串口 ，VGA，信号发生器，DA/AD，FIR滤波例子,0,fivexxxxx/fpga_prj,625800750,Verilog,fpga_prj,36,0,2023-04-10 06:07:35+00:00,[],None
469,https://github.com/Rohit-kademani/UART.git,2023-04-10 17:52:51+00:00,,1,Rohit-kademani/UART,626057795,Verilog,UART,145,0,2023-11-03 06:54:03+00:00,[],None
470,https://github.com/Shreyast27/code1.git,2023-04-10 11:26:53+00:00,,0,Shreyast27/code1,625907687,Verilog,code1,6,0,2023-04-10 11:27:33+00:00,[],None
471,https://github.com/codes0ar/fft2d_rtl.git,2023-03-26 11:55:46+00:00,2dFFT verilog - for 1024x128 2D FFT sysnthsisable RTL ,0,codes0ar/fft2d_rtl,619142249,Verilog,fft2d_rtl,34601,0,2023-03-26 12:06:12+00:00,[],None
472,https://github.com/wel97459/fv1000.git,2023-03-28 04:33:10+00:00,This is a FPGA based Casio PV1000 written in SpinalHDL to be cycle accurate.,0,wel97459/fv1000,620125249,Verilog,fv1000,169,0,2023-03-28 05:51:18+00:00,[],None
473,https://github.com/t4rcisio/AOCII.git,2023-03-28 01:10:41+00:00,,0,t4rcisio/AOCII,620071032,Verilog,AOCII,1082,0,2023-04-08 01:18:56+00:00,[],None
474,https://github.com/AyaAshraf419/Asynchronous-FIFO-.git,2023-03-26 19:32:25+00:00,,0,AyaAshraf419/Asynchronous-FIFO-,619281200,Verilog,Asynchronous-FIFO-,3,0,2023-03-26 19:35:08+00:00,[],None
475,https://github.com/h1dk/axi_stream.git,2023-03-27 02:46:17+00:00,,0,h1dk/axi_stream,619378524,Verilog,axi_stream,174,0,2023-03-27 02:47:28+00:00,[],None
476,https://github.com/Ray-1026/Computer-organization.git,2023-03-27 18:21:59+00:00,NYCU CS Computer Organization,0,Ray-1026/Computer-organization,619948151,Verilog,Computer-organization,2250,0,2023-05-19 13:42:01+00:00,[],None
477,https://github.com/oktememre38/user_proj_uart.git,2023-03-29 19:49:02+00:00,,0,oktememre38/user_proj_uart,621002113,Verilog,user_proj_uart,41725,0,2023-03-29 19:49:41+00:00,[],https://api.github.com/licenses/apache-2.0
478,https://github.com/Anupam-k15/AES.git,2023-03-29 12:27:37+00:00,Advance Encryption Standards,0,Anupam-k15/AES,620813528,Verilog,AES,3,0,2023-03-31 18:12:33+00:00,[],None
479,https://github.com/vaishnavi-parihar/verilog-for-image-enhancement-applications.git,2023-04-03 12:19:40+00:00,,0,vaishnavi-parihar/verilog-for-image-enhancement-applications,622961659,Verilog,verilog-for-image-enhancement-applications,2504,0,2023-12-11 06:39:14+00:00,[],None
480,https://github.com/Chris44442/DE10-Nano.git,2023-04-06 19:59:08+00:00,,0,Chris44442/DE10-Nano,624585997,Verilog,DE10-Nano,31371,0,2023-09-23 22:40:24+00:00,[],https://api.github.com/licenses/mit
481,https://github.com/Kurasavella/lab2.git,2023-04-05 20:54:14+00:00,,0,Kurasavella/lab2,624144730,Verilog,lab2,61460,0,2023-04-05 21:17:07+00:00,[],None
482,https://github.com/D0745867/multi_precision_FLP.git,2023-03-27 17:43:21+00:00,實現可切換之浮點數運算器,0,D0745867/multi_precision_FLP,619932478,Verilog,multi_precision_FLP,21351,0,2023-03-27 17:58:34+00:00,[],None
483,https://github.com/mccnick/CPRE-281.git,2023-03-28 04:25:08+00:00,A repository of programming labs and coursework completed for CPRE 281 (Digital Logic) in the Computer Engineering department at Iowa State University.,0,mccnick/CPRE-281,620123284,Verilog,CPRE-281,16555,0,2023-04-08 11:50:52+00:00,[],None
484,https://github.com/Jams1001/IE0621.git,2023-03-28 04:20:12+00:00,Verificación Funcional del Diseño de Circuitos Integrados,1,Jams1001/IE0621,620122133,Verilog,IE0621,12675,0,2023-05-03 02:25:01+00:00,[],https://api.github.com/licenses/cc0-1.0
485,https://github.com/robinned/RISCV-MCU.git,2023-03-30 18:06:37+00:00,,0,robinned/RISCV-MCU,621464943,Verilog,RISCV-MCU,8543,0,2023-03-30 18:23:25+00:00,[],None
486,https://github.com/imhcyx/axi_id_killer.git,2023-03-30 07:44:22+00:00,AXI ID signal remover,0,imhcyx/axi_id_killer,621205527,Verilog,axi_id_killer,3,0,2023-03-30 07:44:40+00:00,[],None
487,https://github.com/brady-ryan/basys3_fpga.git,2023-03-30 18:02:01+00:00,Sample codes for Basys3 FPGA used in my undergrad research. This repo provides the basis for a primitive FPGA-based Oscilloscope and FPGA-based Arbitrary Waveform Generator.,0,brady-ryan/basys3_fpga,621463116,Verilog,basys3_fpga,48386,0,2023-06-10 00:46:52+00:00,[],None
488,https://github.com/eryko2002/Digital_Systems.git,2023-03-29 19:16:18+00:00,,0,eryko2002/Digital_Systems,620990347,Verilog,Digital_Systems,68806,0,2023-03-29 19:20:44+00:00,[],None
489,https://github.com/Davis-NG/ece243.git,2023-03-30 06:35:26+00:00,,0,Davis-NG/ece243,621180592,Verilog,ece243,10724,0,2023-05-01 02:41:35+00:00,[],None
490,https://github.com/D0745867/2017_ICDC.git,2023-03-27 07:48:48+00:00,2017 IC設計競賽 cell-based 研究所組題目練習,0,D0745867/2017_ICDC,619468592,Verilog,2017_ICDC,190,0,2023-03-27 08:45:06+00:00,[],None
491,https://github.com/AtlasFPGA/ZET_PC_HDMI_ATLAS.git,2023-03-29 17:41:39+00:00,Error de Fallo de las instancias de memoria en Quartus II Lite dado que son asíncronas.,1,AtlasFPGA/ZET_PC_HDMI_ATLAS,620953379,Verilog,ZET_PC_HDMI_ATLAS,21036,0,2023-04-02 12:07:07+00:00,"['atlas', 'cyc1000', 'i8086']",https://api.github.com/licenses/gpl-2.0
492,https://github.com/namratayadav07/verilog.git,2023-04-10 13:52:59+00:00,,0,namratayadav07/verilog,625961322,Verilog,verilog,3,0,2023-04-10 13:55:49+00:00,[],None
493,https://github.com/itvchi/TangNano9K_examples.git,2023-04-10 09:46:23+00:00,,0,itvchi/TangNano9K_examples,625874230,Verilog,TangNano9K_examples,127,0,2023-04-10 09:48:30+00:00,[],None
494,https://github.com/santosh2407/Implementation-of-16-bit-RISC-Processor.git,2023-04-08 19:06:58+00:00,,0,santosh2407/Implementation-of-16-bit-RISC-Processor,625325882,Verilog,Implementation-of-16-bit-RISC-Processor,399,0,2023-04-08 19:22:37+00:00,[],None
495,https://github.com/Sahiti004/digital-electronics-project.git,2023-04-09 13:40:05+00:00,,0,Sahiti004/digital-electronics-project,625557480,Verilog,digital-electronics-project,3,0,2023-04-09 14:42:33+00:00,[],None
496,https://github.com/Deepushah/Verilog-Code.git,2023-04-09 18:42:16+00:00,,0,Deepushah/Verilog-Code,625644218,Verilog,Verilog-Code,1,0,2023-05-16 10:13:14+00:00,[],None
497,https://github.com/Adisfador/Dma.git,2023-04-11 23:15:16+00:00,,0,Adisfador/Dma,626660809,Verilog,Dma,671,0,2023-04-11 23:16:36+00:00,[],None
498,https://github.com/kobe892021/Digital_IC_Design.git,2023-04-12 07:08:32+00:00,,0,kobe892021/Digital_IC_Design,626793091,Verilog,Digital_IC_Design,285,0,2023-04-12 07:19:24+00:00,[],None
499,https://github.com/dlmiles/tt03-dlmiles-spinalhdl-uart.git,2023-04-12 22:20:24+00:00,SpinalHDL UART Rx Example,0,dlmiles/tt03-dlmiles-spinalhdl-uart,627150878,Verilog,tt03-dlmiles-spinalhdl-uart,203,0,2023-04-12 22:21:43+00:00,[],https://api.github.com/licenses/apache-2.0
500,https://github.com/humbertpa/practica2respaldo.git,2023-03-31 21:48:34+00:00,,0,humbertpa/practica2respaldo,622005808,Verilog,practica2respaldo,44,0,2023-03-31 21:49:47+00:00,[],None
501,https://github.com/geekboi777/Single_Cycle_MIPS_Processor.git,2023-04-03 09:56:35+00:00,"This repository contains the Complete implementation of the Single Cycle MIPS processor using Verilog. The processor supports R-type, I-type, and J-type instructions. The working and waveforms  has been shown with the software Scansion. The waveform focusses on the Register File and the Data Memory visualisation. ",0,geekboi777/Single_Cycle_MIPS_Processor,622906369,Verilog,Single_Cycle_MIPS_Processor,2066,0,2023-04-03 09:59:24+00:00,[],https://api.github.com/licenses/gpl-3.0
502,https://github.com/lerntuspel/ZyloZinger.git,2023-03-28 19:40:12+00:00,Xylophone Game performing audio signal processing on a real xylophone to use as a controller. CSEE 4840/Senior design project,1,lerntuspel/ZyloZinger,620492106,Verilog,ZyloZinger,4727,0,2023-05-03 18:23:41+00:00,[],None
503,https://github.com/yashwant4756/Sequence_Detector.git,2023-03-26 15:41:07+00:00,,0,yashwant4756/Sequence_Detector,619211215,Verilog,Sequence_Detector,1,0,2023-06-14 13:45:01+00:00,[],None
504,https://github.com/ualtinbas/CS303_Logic-Digital-System-Design.git,2023-04-04 20:13:24+00:00,,0,ualtinbas/CS303_Logic-Digital-System-Design,623656975,Verilog,CS303_Logic-Digital-System-Design,1911,0,2023-04-04 20:51:02+00:00,[],None
505,https://github.com/SE-O22-ITESO/p2-single-cycle-antonio_rangel.git,2023-04-13 04:56:45+00:00,p2-single-cycle-antonio_rangel created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-antonio_rangel,627252104,Verilog,p2-single-cycle-antonio_rangel,27187,0,2023-04-13 05:10:52+00:00,[],None
506,https://github.com/aswaniar/inverter1.git,2023-04-13 08:18:45+00:00,,0,aswaniar/inverter1,627321535,Verilog,inverter1,41725,0,2023-04-13 08:19:24+00:00,[],https://api.github.com/licenses/apache-2.0
507,https://github.com/alokvishwa10/Synchronous-FIFO.git,2023-04-08 08:31:48+00:00,,0,alokvishwa10/Synchronous-FIFO,625156438,Verilog,Synchronous-FIFO,26,0,2023-04-08 08:34:46+00:00,[],None
508,https://github.com/gitbheeds/EE477-final-project.git,2023-04-03 20:07:30+00:00,Projects from an ASIC design class taken at the UW,0,gitbheeds/EE477-final-project,623155655,Verilog,EE477-final-project,94,0,2023-11-10 21:39:53+00:00,[],None
509,https://github.com/JorgeVelazquez55/p2_single_cycle.git,2023-04-06 18:25:22+00:00,,0,JorgeVelazquez55/p2_single_cycle,624555475,Verilog,p2_single_cycle,146738,0,2023-04-06 18:30:44+00:00,[],None
510,https://github.com/clysto/icesugar-boilerplate.git,2023-04-09 10:19:03+00:00,icesugar-boilerplate,0,clysto/icesugar-boilerplate,625505226,Verilog,icesugar-boilerplate,18,0,2023-04-09 10:40:19+00:00,[],None
511,https://github.com/Esayanubn/Computer-Organization-Lab.git,2023-04-09 14:08:57+00:00,,0,Esayanubn/Computer-Organization-Lab,625566034,Verilog,Computer-Organization-Lab,15231,0,2023-04-09 14:12:41+00:00,[],None
512,https://github.com/Edgar100800/2023-1.git,2023-03-28 03:32:21+00:00,My documentation,0,Edgar100800/2023-1,620109568,Verilog,2023-1,47486,0,2023-04-27 22:58:42+00:00,[],None
513,https://github.com/Diphalder/HDL.git,2023-03-28 16:08:33+00:00,,0,Diphalder/HDL,620406835,Verilog,HDL,25,0,2023-04-22 17:13:51+00:00,[],None
514,https://github.com/SaintAleksei/FPGA-Learning.git,2023-03-27 11:17:37+00:00,This repository contains some verilog code and useful scripts for learning digital design and FPGA with DE2-115 board,0,SaintAleksei/FPGA-Learning,619552099,Verilog,FPGA-Learning,144,0,2023-05-10 14:12:27+00:00,"['fpga', 'verilog']",None
515,https://github.com/ShnapDozer/FPGA_LABS.git,2023-03-27 16:06:58+00:00,,0,ShnapDozer/FPGA_LABS,619891945,Verilog,FPGA_LABS,55663,0,2023-04-28 06:11:18+00:00,[],None
516,https://github.com/RChuIII/ELEC-3500-Egg-Timer.git,2023-03-27 13:42:15+00:00,,0,RChuIII/ELEC-3500-Egg-Timer,619817031,Verilog,ELEC-3500-Egg-Timer,4,0,2023-04-21 16:32:35+00:00,[],None
517,https://github.com/Berea3/Verilog-projects.git,2023-03-28 19:39:36+00:00,Hamming Code & 7 segment display adder,0,Berea3/Verilog-projects,620491888,Verilog,Verilog-projects,7,0,2023-03-29 18:47:07+00:00,[],None
518,https://github.com/swrong2403/test_01.git,2023-03-30 07:30:17+00:00,,0,swrong2403/test_01,621200267,Verilog,test_01,253133,0,2023-03-30 07:44:13+00:00,[],None
519,https://github.com/matialmar7/uart.git,2023-04-01 23:21:17+00:00,Verilog implementation of a UART unit,0,matialmar7/uart,622376211,Verilog,uart,79,0,2023-04-01 23:24:44+00:00,[],https://api.github.com/licenses/gpl-3.0
520,https://github.com/SushGuha/vortex.git,2023-04-02 16:17:47+00:00,,0,SushGuha/vortex,622613543,Verilog,vortex,345496,0,2023-04-29 00:18:53+00:00,[],https://api.github.com/licenses/bsd-3-clause
521,https://github.com/Carter6666/4_1_Interview_question.git,2023-04-02 06:57:13+00:00,4_1_Interview_question,0,Carter6666/4_1_Interview_question,622457196,Verilog,4_1_Interview_question,5670,0,2023-04-02 07:04:42+00:00,[],None
522,https://github.com/ishper08/asic_led_out.git,2023-04-03 05:59:26+00:00,,0,ishper08/asic_led_out,622816712,Verilog,asic_led_out,35882,0,2023-04-03 06:00:38+00:00,[],https://api.github.com/licenses/apache-2.0
523,https://github.com/jiax0105/axi_stream_insert_header.git,2023-04-13 14:49:32+00:00,,0,jiax0105/axi_stream_insert_header,627478698,Verilog,axi_stream_insert_header,94,0,2023-04-13 15:45:23+00:00,[],None
524,https://github.com/pragati21code/Vending-Machine.git,2023-04-13 17:43:59+00:00,,0,pragati21code/Vending-Machine,627550405,Verilog,Vending-Machine,3,0,2023-04-22 13:07:19+00:00,[],None
525,https://github.com/hamasoon/SNUHSD2023Spring.git,2023-04-04 12:24:02+00:00,Seoul National University Hardeware System Design by Prof.sungjoo yoo,0,hamasoon/SNUHSD2023Spring,623462069,Verilog,SNUHSD2023Spring,75745,0,2023-04-04 16:29:10+00:00,[],None
526,https://github.com/GuangshengZhong/CAIC.git,2023-04-07 07:39:56+00:00,CAIClab,0,GuangshengZhong/CAIC,624761976,Verilog,CAIC,39752,0,2023-04-07 07:53:38+00:00,[],None
527,https://github.com/OzanAkgon/CiftYolluRam.git,2023-04-07 10:50:12+00:00,Gömülü Sistemler Projeleri,0,OzanAkgon/CiftYolluRam,624824601,Verilog,CiftYolluRam,1,0,2023-04-14 12:26:15+00:00,[],None
528,https://github.com/tallenintegsys/bidirectional_test.git,2023-04-08 16:23:01+00:00,testing normal way vs Lattice primitives for bidirectionl (Hi-Z) pin,0,tallenintegsys/bidirectional_test,625283197,Verilog,bidirectional_test,146,0,2023-04-08 16:26:33+00:00,[],None
529,https://github.com/RoundShee/PocketLedFPGA.git,2023-04-09 02:58:30+00:00,在JC-EDA_POK上实现对点阵屏的操作,0,RoundShee/PocketLedFPGA,625412029,Verilog,PocketLedFPGA,105,0,2023-06-12 15:00:47+00:00,[],None
530,https://github.com/ManasaDeviMalla/ROM_SingleAddress.git,2023-04-08 10:19:45+00:00,,0,ManasaDeviMalla/ROM_SingleAddress,625184216,Verilog,ROM_SingleAddress,41,0,2023-04-08 10:35:10+00:00,[],None
531,https://github.com/taotao-muscle/axi_stream_insert_header.git,2023-04-08 09:42:55+00:00,,0,taotao-muscle/axi_stream_insert_header,625174945,Verilog,axi_stream_insert_header,722,0,2023-04-08 09:49:04+00:00,[],None
532,https://github.com/Filipgerm/Digital-System-Hardware-Engineering.git,2023-04-04 07:13:48+00:00,This assignment was part of the course Digital System Low Level HW I (7th Semester),0,Filipgerm/Digital-System-Hardware-Engineering,623339744,Verilog,Digital-System-Hardware-Engineering,639,0,2023-04-04 07:17:46+00:00,[],None
533,https://github.com/Shivaprasadm02/verilog.git,2023-04-13 11:07:59+00:00,,0,Shivaprasadm02/verilog,627386093,Verilog,verilog,23,0,2023-04-13 11:09:34+00:00,[],None
534,https://github.com/MiSTer-devel/Arcade-CosmicGuerilla_MiSTer.git,2023-04-04 14:57:23+00:00,Core for Universal Cosmic Guerilla arcade game,1,MiSTer-devel/Arcade-CosmicGuerilla_MiSTer,623531918,Verilog,Arcade-CosmicGuerilla_MiSTer,4055,0,2023-04-04 15:01:31+00:00,[],https://api.github.com/licenses/gpl-3.0
535,https://github.com/BenEf97/ChipChallengeTalBen.git,2023-03-30 08:24:08+00:00,,0,BenEf97/ChipChallengeTalBen,621221122,Verilog,ChipChallengeTalBen,88871,0,2024-03-28 16:15:13+00:00,[],None
536,https://github.com/Patrick941/VerilogLFSR.git,2023-04-07 22:48:13+00:00,,0,Patrick941/VerilogLFSR,625040625,Verilog,VerilogLFSR,21,0,2023-04-07 22:48:43+00:00,[],None
537,https://github.com/Bytewaiser/verilog-projects.git,2023-03-26 17:16:32+00:00,,0,Bytewaiser/verilog-projects,619240814,Verilog,verilog-projects,77,0,2023-03-26 17:16:47+00:00,[],None
538,https://github.com/apurba1911/alu.git,2023-03-26 17:31:42+00:00,,0,apurba1911/alu,619245480,Verilog,alu,204,0,2023-03-26 21:12:57+00:00,[],None
539,https://github.com/Srivathsa2304/full_adder_in_7_segment.git,2023-03-28 09:50:59+00:00,,2,Srivathsa2304/full_adder_in_7_segment,620240354,Verilog,full_adder_in_7_segment,22,0,2023-03-28 10:24:39+00:00,[],None
540,https://github.com/Uviveknarayan/Pipelined-MIPS-Processor-verilog.git,2023-03-28 13:32:56+00:00,,0,Uviveknarayan/Pipelined-MIPS-Processor-verilog,620334342,Verilog,Pipelined-MIPS-Processor-verilog,8,0,2023-03-28 13:39:04+00:00,[],None
541,https://github.com/daquintero/porf.git,2023-03-30 14:47:18+00:00,NOTE THIS PROJECT HAS BEEN SUPERSEDED BY https://github.com/daquintero/piel AND WILL BE DISCONTINUED FROM PYPI,0,daquintero/porf,621380914,Verilog,porf,6110,0,2023-07-09 11:27:48+00:00,[],https://api.github.com/licenses/mit
542,https://github.com/cepdnaclk/e18-co502-RV32IM-pipeline-implementation-group03.git,2023-03-30 08:26:06+00:00,RV32IM Pipeline Processor,3,cepdnaclk/e18-co502-RV32IM-pipeline-implementation-group03,621221941,Verilog,e18-co502-RV32IM-pipeline-implementation-group03,1921,0,2023-04-20 08:11:18+00:00,"['verilog', 'risc-v']",None
543,https://github.com/TonyRangel/DM_Rangel_Avila_RISC_V.git,2023-03-30 05:54:52+00:00,,0,TonyRangel/DM_Rangel_Avila_RISC_V,621166898,Verilog,DM_Rangel_Avila_RISC_V,24639,0,2023-03-30 06:49:59+00:00,[],None
544,https://github.com/dawidogg/ITU-Computer-Organization-Projects.git,2023-03-29 14:17:43+00:00,Simple architecture in Verilog + Assembler,0,dawidogg/ITU-Computer-Organization-Projects,620863979,Verilog,ITU-Computer-Organization-Projects,3813,0,2023-06-11 21:23:10+00:00,[],None
545,https://github.com/Fearse/5-In-a-Row.git,2023-03-30 19:10:16+00:00,Игра 5 в ряд для платы Nexys A7.,0,Fearse/5-In-a-Row,621489379,Verilog,5-In-a-Row,2964,0,2023-10-05 10:19:02+00:00,[],None
546,https://github.com/curious-tux/Simple_Spi_Verilog.git,2023-04-01 13:49:47+00:00,,0,curious-tux/Simple_Spi_Verilog,622226061,Verilog,Simple_Spi_Verilog,0,0,2023-04-01 13:50:23+00:00,[],None
547,https://github.com/eymay/WallaceMultiplier.git,2023-04-01 14:50:14+00:00,Wallace Tree Multiplier for 16 bit inputs,0,eymay/WallaceMultiplier,622245559,Verilog,WallaceMultiplier,4339,0,2023-04-11 15:41:53+00:00,[],None
548,https://github.com/Rishi-T/SCRISC-16.git,2023-04-04 11:17:19+00:00,,0,Rishi-T/SCRISC-16,623435438,Verilog,SCRISC-16,16,0,2023-04-04 12:40:43+00:00,[],https://api.github.com/licenses/mit
549,https://github.com/MYarosLove/FPGA.git,2023-04-08 15:22:00+00:00,,0,MYarosLove/FPGA,625265826,Verilog,FPGA,20241,0,2023-04-08 15:24:45+00:00,[],None
550,https://github.com/WongChaoya/i2c_ctrl.git,2023-04-08 07:55:56+00:00,,0,WongChaoya/i2c_ctrl,625147458,Verilog,i2c_ctrl,2,0,2023-04-08 07:59:03+00:00,[],None
551,https://github.com/MelonLord1009/8_bit_CPU.git,2023-04-08 04:29:19+00:00,,0,MelonLord1009/8_bit_CPU,625101390,Verilog,8_bit_CPU,32,0,2023-04-08 04:43:47+00:00,[],None
552,https://github.com/arefin-abeed-216485435/HateVerilog.git,2023-04-07 07:03:55+00:00,,0,arefin-abeed-216485435/HateVerilog,624750261,Verilog,HateVerilog,7,0,2023-04-07 07:05:41+00:00,[],None
553,https://github.com/asmwriter/18632_lab2_checkpoint1_v1.git,2023-04-07 16:08:43+00:00,AES DPA attack checkpoint 1 (From https://github.com/KevinLikesDringCoffe/FPGA-AES-encryptor),0,asmwriter/18632_lab2_checkpoint1_v1,624931570,Verilog,18632_lab2_checkpoint1_v1,18289,0,2023-04-15 21:30:27+00:00,[],None
554,https://github.com/murattokez/RV32I-CPU.git,2023-04-05 20:41:30+00:00,Single Cycle and Five Stage Pipeline RISCV32I Processor design,0,murattokez/RV32I-CPU,624141009,Verilog,RV32I-CPU,26,0,2023-04-07 06:54:52+00:00,"['cpu', 'riscv', 'verilog']",None
555,https://github.com/Bandaanusha/Scalable-Systolic-Array-Multiplier-Optimized-by-Sparse-Matrix.git,2023-04-12 06:01:12+00:00,,0,Bandaanusha/Scalable-Systolic-Array-Multiplier-Optimized-by-Sparse-Matrix,626769041,Verilog,Scalable-Systolic-Array-Multiplier-Optimized-by-Sparse-Matrix,3635,0,2023-04-13 05:52:33+00:00,[],None
556,https://github.com/Binh-Diep/encrypt-aes.git,2023-04-03 16:05:57+00:00,,0,Binh-Diep/encrypt-aes,623062071,Verilog,encrypt-aes,72755,0,2023-04-30 05:25:30+00:00,[],None
557,https://github.com/malwanaf/half_adder.git,2023-04-04 14:22:59+00:00,,0,malwanaf/half_adder,623515815,Verilog,half_adder,1,0,2023-04-04 14:24:01+00:00,[],None
558,https://github.com/kaushikadit/coa.git,2023-04-04 18:18:24+00:00,,0,kaushikadit/coa,623615180,Verilog,coa,7,0,2023-04-08 10:04:59+00:00,[],None
559,https://github.com/Prakashhh707/IMAGE_PROCESSING_USING_VERILOG.git,2023-04-03 22:03:46+00:00,,0,Prakashhh707/IMAGE_PROCESSING_USING_VERILOG,623191225,Verilog,IMAGE_PROCESSING_USING_VERILOG,715,0,2023-04-03 22:04:23+00:00,[],None
560,https://github.com/WongChaoya/LCD160--.git,2023-04-05 14:11:13+00:00,,0,WongChaoya/LCD160--,623990931,Verilog,LCD160--,1,0,2023-04-05 14:12:24+00:00,[],None
561,https://github.com/iremnuy/EncoderMultiplexer.git,2023-04-13 08:32:47+00:00,,0,iremnuy/EncoderMultiplexer,627326985,Verilog,EncoderMultiplexer,2,0,2024-01-16 08:59:41+00:00,[],None
562,https://github.com/Jawadibrahim98/VerliogCoure.git,2023-04-05 15:02:55+00:00,,0,Jawadibrahim98/VerliogCoure,624013794,Verilog,VerliogCoure,100,0,2023-04-05 15:08:43+00:00,[],None
563,https://github.com/aarushigupta27/Image-Security-with-DES-in-Verilog.git,2023-04-08 10:22:04+00:00,Encryption and Decryption of an image using Data Encryption Standard (DES) algorithm in Electronic Code Block (ECB) mode using Verilog HDL,0,aarushigupta27/Image-Security-with-DES-in-Verilog,625184826,Verilog,Image-Security-with-DES-in-Verilog,342,0,2023-09-24 17:53:36+00:00,[],None
564,https://github.com/LilibetK/MT-3TB4-LAB.git,2023-04-05 23:07:15+00:00,,0,LilibetK/MT-3TB4-LAB,624178978,Verilog,MT-3TB4-LAB,1564,0,2023-04-05 23:23:05+00:00,[],None
565,https://github.com/jianlingg/ad_da.git,2023-04-06 09:56:15+00:00,"关于adc,dac的学习",0,jianlingg/ad_da,624364111,Verilog,ad_da,1169,0,2023-04-06 09:58:52+00:00,[],None
566,https://github.com/TraviPatty03/StopWatch.git,2023-04-11 22:30:54+00:00,"As a student in my Digital Logic Design (DLD) class, I undertook a project to create a stopwatch using Verilog. The project required me to utilize the given functions of the one-bit D flip-flop, clock divider, and T flip-flop as provided by my professor. However, I was responsible for the implementation of all remaining aspects of the project.",0,TraviPatty03/StopWatch,626649928,Verilog,StopWatch,794,0,2023-04-11 22:34:26+00:00,[],None
567,https://github.com/MuhammadMajiid/PIG.git,2023-04-13 15:10:22+00:00,"Smart Pipeline Inspection Pig Control Logic, modelled in Verilog",0,MuhammadMajiid/PIG,627487950,Verilog,PIG,25,0,2023-09-29 14:09:35+00:00,[],None
568,https://github.com/vchinn04/VerilogVendingMachine.git,2023-04-04 18:29:14+00:00,,0,vchinn04/VerilogVendingMachine,623619521,Verilog,VerilogVendingMachine,14360,0,2023-04-05 20:36:14+00:00,[],None
569,https://github.com/MinHsuanYu/1072-Yzu-Digital-Systems-Lab.git,2023-04-13 08:06:00+00:00,,0,MinHsuanYu/1072-Yzu-Digital-Systems-Lab,627316678,Verilog,1072-Yzu-Digital-Systems-Lab,6174,0,2023-04-13 08:15:51+00:00,[],None
570,https://github.com/CIE-PESU/DE10_FPGA.git,2023-04-12 09:25:06+00:00,,0,CIE-PESU/DE10_FPGA,626848198,Verilog,DE10_FPGA,34483,0,2023-05-12 04:11:57+00:00,[],None
571,https://github.com/aryanargupta/COALabArchives.git,2023-04-05 10:19:19+00:00,,0,aryanargupta/COALabArchives,623897504,Verilog,COALabArchives,5,0,2023-09-30 07:21:04+00:00,[],None
572,https://github.com/Inmoresentum/CSE460GroupProject.git,2023-04-05 13:22:47+00:00,Contains CSE460 Group Project Verilog code.,0,Inmoresentum/CSE460GroupProject,623969860,Verilog,CSE460GroupProject,25,0,2023-05-19 16:23:12+00:00,"['bracucse460', 'bracucse460lab', 'verilog-hdl', 'cse460project']",https://api.github.com/licenses/mpl-2.0
573,https://github.com/Airbus5717/COE203-proj.git,2023-04-09 22:14:20+00:00,Only uploaded verilog files,0,Airbus5717/COE203-proj,625693098,Verilog,COE203-proj,4,0,2023-04-09 22:14:36+00:00,[],https://api.github.com/licenses/unlicense
574,https://github.com/linxunxr/VerilogStudy.git,2023-04-12 13:30:59+00:00,,0,linxunxr/VerilogStudy,626947536,Verilog,VerilogStudy,11,0,2023-04-30 13:05:31+00:00,[],https://api.github.com/licenses/apache-2.0
575,https://github.com/BMR0305/g1_computer_architecture_1_2023.git,2023-04-13 03:24:04+00:00,Proyecto grupal #!,1,BMR0305/g1_computer_architecture_1_2023,627228402,Verilog,g1_computer_architecture_1_2023,5242,0,2023-06-13 02:21:00+00:00,[],None
576,https://github.com/lambdaconcept/efx-jtag-spi-flash-loader.git,2023-04-13 14:38:28+00:00,Efinix JTAG SPI Flash loader proxy bitstream,1,lambdaconcept/efx-jtag-spi-flash-loader,627473738,Verilog,efx-jtag-spi-flash-loader,116,0,2023-04-13 14:42:10+00:00,[],None
577,https://github.com/XS-dev/comparasion.git,2023-04-11 01:52:28+00:00,用于激光雷达项目的那啥验证，嗯。,0,XS-dev/comparasion,626197020,Verilog,comparasion,42363,0,2023-04-11 03:28:48+00:00,[],None
578,https://github.com/burhanuddin6/pipelined_riscv_processor.git,2023-04-11 10:17:23+00:00,Pipelined processor design for RISC-V ISA,0,burhanuddin6/pipelined_riscv_processor,626364391,Verilog,pipelined_riscv_processor,776,0,2023-04-18 07:42:50+00:00,"['assembler', 'risc-v', 'verilog']",None
579,https://github.com/arunatkit/guineapig.git,2023-04-08 19:18:43+00:00,,0,arunatkit/guineapig,625328675,Verilog,guineapig,1,0,2023-04-08 19:33:39+00:00,[],None
580,https://github.com/sid-kal/CSE-BUBBLE.git,2023-04-06 17:10:13+00:00,,0,sid-kal/CSE-BUBBLE,624528603,Verilog,CSE-BUBBLE,2490,0,2023-05-21 03:53:35+00:00,[],None
581,https://github.com/cepdnaclk/e17-co502-RV32IM-pipeline-implementation-group2.git,2023-03-30 09:03:37+00:00,This project is about implementing a RISC-V CPU with a RV32IM pipeline implementation using VERILOG_HDL.,0,cepdnaclk/e17-co502-RV32IM-pipeline-implementation-group2,621236675,Verilog,e17-co502-RV32IM-pipeline-implementation-group2,37,0,2023-05-04 07:47:26+00:00,[],None
582,https://github.com/Maani02/adder.git,2023-03-28 10:39:09+00:00,,0,Maani02/adder,620259483,Verilog,adder,1,0,2023-03-28 10:42:34+00:00,[],None
583,https://github.com/Ken10086/STARS-Repository.git,2023-03-27 20:59:31+00:00,Repository for STARS,0,Ken10086/STARS-Repository,620005467,Verilog,STARS-Repository,41725,0,2023-03-27 21:00:12+00:00,[],https://api.github.com/licenses/apache-2.0
584,https://github.com/imhjnju/common_cells.git,2023-03-28 15:50:48+00:00,verilog code for common_cells,0,imhjnju/common_cells,620399010,Verilog,common_cells,1,0,2023-03-28 16:01:18+00:00,[],https://api.github.com/licenses/mit
585,https://github.com/anandbaheti/MIPS.git,2023-03-26 09:11:39+00:00,,0,anandbaheti/MIPS,619099430,Verilog,MIPS,824,0,2023-03-26 09:13:47+00:00,[],None
586,https://github.com/princek12345/Tic-Tac-Toe-XO-game-in-Verilog-using-FPGA.git,2023-03-26 02:57:08+00:00,Tic-Tac-Toe (XO) game in Verilog with display on screen using VGA connector and input using Key-pad has been done at IIST as a part course project.,0,princek12345/Tic-Tac-Toe-XO-game-in-Verilog-using-FPGA,619022688,Verilog,Tic-Tac-Toe-XO-game-in-Verilog-using-FPGA,4137,0,2023-03-26 03:02:40+00:00,[],None
587,https://github.com/Nickysterling/processor_design_project.git,2023-04-01 20:05:03+00:00,"This repository contains the source code for a simple RISC-style processor. The processor includes an ALU, a memory system, and a control unit. The processor will be implemented onto an FPGA board in the future.",0,Nickysterling/processor_design_project,622336166,Verilog,processor_design_project,42,0,2023-04-01 20:45:40+00:00,[],https://api.github.com/licenses/mit
588,https://github.com/SE-O22-ITESO/p2-single-cycle-braulio_martinez.git,2023-04-01 16:37:57+00:00,p2-single-cycle-braulio_martinez created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-braulio_martinez,622279934,Verilog,p2-single-cycle-braulio_martinez,758,0,2023-04-13 06:36:54+00:00,[],None
589,https://github.com/lol0963332320/ESL.git,2023-03-28 05:53:31+00:00,,0,lol0963332320/ESL,620147250,Verilog,ESL,39916,0,2023-03-28 05:56:03+00:00,[],None
590,https://github.com/ifbettrer/verilog-.git,2023-03-28 09:17:07+00:00,大二课设的一些练习,0,ifbettrer/verilog-,620226601,Verilog,verilog-,881,0,2023-03-28 09:25:20+00:00,[],None
591,https://github.com/devadutt-github/async_fifo.git,2023-03-26 23:40:58+00:00,A Verilog RTL of Asynchronous FIFO buffer used in SPI communication ,0,devadutt-github/async_fifo,619337848,Verilog,async_fifo,16,0,2023-07-18 17:21:48+00:00,[],None
592,https://github.com/aswaniar/efab_29.git,2023-03-29 15:36:26+00:00,,0,aswaniar/efab_29,620900729,Verilog,efab_29,41725,0,2023-03-29 15:37:05+00:00,[],https://api.github.com/licenses/apache-2.0
593,https://github.com/8evgeny/FPGA.git,2023-04-02 11:41:39+00:00,,0,8evgeny/FPGA,622527922,Verilog,FPGA,885,0,2023-04-02 11:46:14+00:00,[],None
594,https://github.com/leoleoleelee/fpga_uart.git,2023-04-03 06:58:20+00:00,利用fpga实现串口通信,0,leoleoleelee/fpga_uart,622836424,Verilog,fpga_uart,1,0,2023-04-03 07:29:03+00:00,[],None
595,https://github.com/arsdorintbp2003/EE2026-AY2022-23.git,2023-04-02 13:09:46+00:00,My group project for EE2026 In AY202223 Sem 2,0,arsdorintbp2003/EE2026-AY2022-23,622553119,Verilog,EE2026-AY2022-23,22658,0,2023-04-22 13:57:08+00:00,[],None
596,https://github.com/archnjh/y86-cpu.git,2023-03-27 13:37:43+00:00,y86 seq/pipe cpu implement by Verilog,0,archnjh/y86-cpu,619814175,Verilog,y86-cpu,50,0,2023-04-30 06:51:33+00:00,[],None
597,https://github.com/Intelligent-Computing-Research-Group/PIMLC-Benchmark.git,2023-03-26 10:15:28+00:00,The benchmark of PIMLC - Some EPFL Verilog modules converted by yosys and MIG_project,0,Intelligent-Computing-Research-Group/PIMLC-Benchmark,619115992,Verilog,PIMLC-Benchmark,3467,0,2024-03-21 19:28:04+00:00,[],None
598,https://github.com/barawn/ret_vivado_ip.git,2023-03-30 20:14:21+00:00,RET Vivado custom IP,0,barawn/ret_vivado_ip,621511669,Verilog,ret_vivado_ip,29,0,2023-03-30 20:15:28+00:00,[],None
599,https://github.com/Harshith21k/UVM.git,2023-04-03 07:56:48+00:00,,0,Harshith21k/UVM,622858729,Verilog,UVM,2,0,2023-04-03 07:57:39+00:00,[],None
600,https://github.com/yajashgoplani/RISC_2.0.git,2023-04-03 10:06:24+00:00,,0,yajashgoplani/RISC_2.0,622910248,Verilog,RISC_2.0,657,0,2023-04-03 10:18:01+00:00,[],None
601,https://github.com/cowboy35927/ESL.git,2023-04-11 16:54:42+00:00,,0,cowboy35927/ESL,626533945,Verilog,ESL,38806,0,2023-06-03 12:52:19+00:00,[],None
602,https://github.com/hsuanxc/dic-NCKU-2023.git,2023-04-12 06:57:06+00:00,NCKU Digital IC Design Course,0,hsuanxc/dic-NCKU-2023,626788914,Verilog,dic-NCKU-2023,24654,0,2023-04-12 07:00:14+00:00,[],None
603,https://github.com/AbhinavM71/MAURYAN_NEXRAD.git,2023-04-13 11:22:59+00:00,,0,AbhinavM71/MAURYAN_NEXRAD,627391660,Verilog,MAURYAN_NEXRAD,514,0,2023-05-06 14:29:47+00:00,[],None
604,https://github.com/Bharath5324/AStar-Accelarator.git,2023-04-12 07:54:14+00:00,,0,Bharath5324/AStar-Accelarator,626810248,Verilog,AStar-Accelarator,35116,0,2023-05-24 09:08:55+00:00,[],None
605,https://github.com/wym8224/axi_stream_insert_header.git,2023-04-11 11:02:47+00:00,,0,wym8224/axi_stream_insert_header,626381471,Verilog,axi_stream_insert_header,98,0,2023-04-11 11:07:32+00:00,[],None
606,https://github.com/SDGomez1/Frogger-DigitalesU.git,2023-04-11 21:14:30+00:00,,0,SDGomez1/Frogger-DigitalesU,626629035,Verilog,Frogger-DigitalesU,11529,0,2023-04-19 18:14:01+00:00,[],None
607,https://github.com/aj-rodrigo/Single-Cyle-Processor.git,2023-04-11 21:51:24+00:00,,0,aj-rodrigo/Single-Cyle-Processor,626639554,Verilog,Single-Cyle-Processor,546,0,2023-04-11 21:52:26+00:00,[],None
608,https://github.com/juancamilobonet2/digitales_m06.git,2023-03-31 18:08:02+00:00,,0,juancamilobonet2/digitales_m06,621938578,Verilog,digitales_m06,3668,0,2023-03-31 18:16:56+00:00,[],None
609,https://github.com/JacobisEpic/FPGA-Clock.git,2023-04-11 04:24:36+00:00,,0,JacobisEpic/FPGA-Clock,626238771,Verilog,FPGA-Clock,175,0,2023-04-11 04:25:54+00:00,[],None
610,https://github.com/foxxy777/mycdc.git,2023-04-13 05:31:27+00:00,some commonly used verilog cdc structure,0,foxxy777/mycdc,627261449,Verilog,mycdc,2768,0,2023-04-13 05:31:37+00:00,[],None
611,https://github.com/JieHong-Liu/Synopsys_HAPS_Final.git,2023-03-30 02:39:29+00:00,This is the final project on Synopsys HAPS,0,JieHong-Liu/Synopsys_HAPS_Final,621113520,Verilog,Synopsys_HAPS_Final,313,0,2023-04-13 05:28:30+00:00,[],None
612,https://github.com/davisczh/Computational-Structures.git,2023-03-30 05:29:14+00:00,"Using a FPGA, we created an old-school arcade game! Featuring MistreeBranch, a tree chopper game.",0,davisczh/Computational-Structures,621159501,Verilog,Computational-Structures,10530,0,2023-05-29 15:59:10+00:00,[],None
613,https://github.com/wel97459/Colorlight_v8.0_ECP5_Make.git,2023-03-28 04:20:18+00:00,Basic makefile for running the tool chain,0,wel97459/Colorlight_v8.0_ECP5_Make,620122152,Verilog,Colorlight_v8.0_ECP5_Make,13,0,2023-03-28 04:29:29+00:00,[],https://api.github.com/licenses/apache-2.0
614,https://github.com/SnoopyBUG/ParallelPrefixAdder-BrentKung.git,2023-03-28 14:25:17+00:00,Parallel Prefix Adder - BKA,0,SnoopyBUG/ParallelPrefixAdder-BrentKung,620359453,Verilog,ParallelPrefixAdder-BrentKung,1822,0,2023-03-28 14:26:43+00:00,[],None
615,https://github.com/sgupta2910/Vending-Machine.git,2023-03-28 19:28:18+00:00,This project is typically a digital design project that involves using Verilog to create a digital circuit that simulates the behavior of a vending machine. The goal of the project is to stimulate an ideal vending machine that can accept coins and dispense the product and return the change.,0,sgupta2910/Vending-Machine,620487674,Verilog,Vending-Machine,3,0,2023-03-28 19:31:16+00:00,[],None
616,https://github.com/njcain/study_verilog.git,2023-03-29 03:42:04+00:00,在学习CPU，练习verilog算法中总结的一些模块,0,njcain/study_verilog,620624435,Verilog,study_verilog,2,0,2023-03-29 03:42:11+00:00,[],None
617,https://github.com/Ayman-Helal/-RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System.git,2023-04-08 20:24:50+00:00,It is responsible of receiving commands through UART receiver to do different system functions as register file reading/writing or doing some processing using ALU block and send result as well as CRC bits of result using 4 bytes frame through UART transmitter communication protocol.,0,Ayman-Helal/-RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System,625343527,Verilog,-RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System,50,0,2023-04-08 20:30:18+00:00,[],None
618,https://github.com/Adrenno/password-protected-lock-system.git,2023-04-08 09:31:11+00:00,,0,Adrenno/password-protected-lock-system,625171739,Verilog,password-protected-lock-system,1455,0,2023-04-08 09:34:26+00:00,[],None
619,https://github.com/DaoudAli/EECS3216_Project.git,2023-04-01 22:32:17+00:00,,0,DaoudAli/EECS3216_Project,622367279,Verilog,EECS3216_Project,9,0,2023-04-01 23:07:22+00:00,[],None
620,https://github.com/geitanksha/vlsi-design.git,2023-04-07 20:46:31+00:00,"Created AMD-Am2901 chip clone (4-bit ALU) with Cadence Virtuoso from a transistor level, manually creating datapath and generating control via CAD. Skills employed: Cadence Virtuoso, Logic (VLSI) Design, Verilog",0,geitanksha/vlsi-design,625013298,Verilog,vlsi-design,918,0,2023-07-02 16:45:02+00:00,"['cadence-virtuoso', 'verilog', 'vlsi-design', 'logic-design']",None
621,https://github.com/greyswaysway/Value_Comparer.git,2023-04-08 03:39:46+00:00,This Verilog program would take 2 values and return true if they are equal,0,greyswaysway/Value_Comparer,625092160,Verilog,Value_Comparer,1,0,2023-04-08 05:01:04+00:00,[],None
622,https://github.com/jaycordaro/WES207.git,2023-04-07 06:12:13+00:00,Repo for our final project,0,jaycordaro/WES207,624734571,Verilog,WES207,214527,0,2023-06-02 17:34:16+00:00,[],None
623,https://github.com/Naimehossein77/verilog_cpu.git,2023-04-09 13:30:55+00:00,Verilog_cpu_3200,0,Naimehossein77/verilog_cpu,625554838,Verilog,verilog_cpu,2443,0,2023-04-09 13:32:22+00:00,[],None
624,https://github.com/4n3m4i1/iCE40-UP5k_Micro_Poly_Synth.git,2023-04-09 18:01:11+00:00,,0,4n3m4i1/iCE40-UP5k_Micro_Poly_Synth,625633222,Verilog,iCE40-UP5k_Micro_Poly_Synth,120,0,2023-04-09 20:39:50+00:00,[],https://api.github.com/licenses/bsd-2-clause
625,https://github.com/js4ngu/NTT-study.git,2023-04-07 01:51:24+00:00,NTT를 이용한 Polynomial Mul 검증 및 가속,0,js4ngu/NTT-study,624671749,Verilog,NTT-study,492,0,2023-05-21 10:21:49+00:00,[],None
626,https://github.com/Ahmed0100/multi_clock_digital_system_yosys_opensta.git,2023-04-10 09:20:47+00:00,multi_clock_digital_system_yosys_opensta,0,Ahmed0100/multi_clock_digital_system_yosys_opensta,625865414,Verilog,multi_clock_digital_system_yosys_opensta,1049,0,2023-04-10 09:31:05+00:00,[],None
627,https://github.com/tai-calg/QU-making-processor-tai.git,2023-04-04 03:03:26+00:00,,0,tai-calg/QU-making-processor-tai,623266912,Verilog,QU-making-processor-tai,32825,0,2023-04-04 03:05:54+00:00,[],None
628,https://github.com/u310720/2022-Sping-NCU-CAD.git,2023-04-05 08:56:36+00:00,,0,u310720/2022-Sping-NCU-CAD,623865964,Verilog,2022-Sping-NCU-CAD,26187,0,2023-04-05 09:40:19+00:00,[],None
629,https://github.com/rweic/OoO_Processor.git,2023-04-06 12:09:57+00:00,,0,rweic/OoO_Processor,624411307,Verilog,OoO_Processor,228139,0,2023-06-27 07:31:06+00:00,[],None
630,https://github.com/VasilisMylonas96/assemply.git,2023-04-06 08:18:41+00:00,assemply,0,VasilisMylonas96/assemply,624327659,Verilog,assemply,3579,0,2023-04-06 08:20:35+00:00,[],None
631,https://github.com/MiSTer-devel/Arcade-Freeze_MiSTer.git,2023-03-27 13:23:03+00:00,,3,MiSTer-devel/Arcade-Freeze_MiSTer,619804222,Verilog,Arcade-Freeze_MiSTer,1188,0,2023-03-27 13:25:12+00:00,[],https://api.github.com/licenses/gpl-2.0
632,https://github.com/freexd0m0329/HDLBits.git,2023-03-27 13:18:07+00:00,,0,freexd0m0329/HDLBits,619799206,Verilog,HDLBits,929,0,2023-03-27 13:21:48+00:00,[],None
633,https://github.com/amorless612/Pac-man_Game_Console.git,2023-04-02 14:00:29+00:00,,0,amorless612/Pac-man_Game_Console,622569267,Verilog,Pac-man_Game_Console,234,0,2023-12-13 04:21:44+00:00,[],None
634,https://github.com/gmingyng/tinyCPU.git,2023-04-12 15:24:31+00:00,tinyRISC-V,0,gmingyng/tinyCPU,627000121,Verilog,tinyCPU,2988,0,2023-04-20 14:01:09+00:00,[],https://api.github.com/licenses/gpl-3.0
635,https://github.com/Spartan-6/chukki.git,2023-04-06 05:55:53+00:00,,0,Spartan-6/chukki,624278559,Verilog,chukki,3,0,2023-04-06 06:15:42+00:00,[],None
