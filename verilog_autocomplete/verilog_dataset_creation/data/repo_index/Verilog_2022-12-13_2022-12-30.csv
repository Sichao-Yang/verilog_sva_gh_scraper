,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/KASIRGA-KIZIL/tekno-kizil.git,2022-12-21 23:16:41+00:00,KASIRGA - KIZIL Takımı Teknofest 2023 Çip Tasarımı - KIZIL İşlemci Projesi,10,KASIRGA-KIZIL/tekno-kizil,580968650,Verilog,tekno-kizil,1120470,138,2024-04-01 11:15:38+00:00,"['clang', 'computer-architecture', 'llvm', 'processor', 'risc-v', 'verilog', 'rv32imc', 'openlane', 'rtl', 'asic', 'coremark', 'in-order', 'pipeline-processor', 'verification', 'riscv', 'cpu', 'fpga', 'teknofest']",https://api.github.com/licenses/gpl-3.0
1,https://github.com/Ummidichandrika/100-Days-of-RTL.git,2022-12-24 16:38:37+00:00,,23,Ummidichandrika/100-Days-of-RTL,581866277,Verilog,100-Days-of-RTL,296,93,2024-04-12 16:35:32+00:00,[],None
2,https://github.com/RWeick/REF1329-N64-Gameshark-Clone.git,2022-12-30 22:11:17+00:00,"This implements the original LZ9FC17 GAL on an Altera EPM240. It fully supports all functionality to include: parallel port, 7 segment display, and the GS button",2,RWeick/REF1329-N64-Gameshark-Clone,583777517,Verilog,REF1329-N64-Gameshark-Clone,2661,33,2024-04-11 18:19:48+00:00,[],https://api.github.com/licenses/gpl-3.0
3,https://github.com/Lcrypto/FEC-Archive-Verilog.git,2022-12-14 20:49:16+00:00,"Verilog Forward Error Correction Archive: BOX-Muller for fast AWGN generation, Universal Demapper from BPSK to QAM-512, different Forward Error Correction coders and decoders Hamming code, Golay code (24), 4-dimension 8-ary phase shift keying trellis coded modulation (TCM_4D_8PSK), BCH, CCSDS and recursive systematic convolutional (RSC) Turbo codes",9,Lcrypto/FEC-Archive-Verilog,578344361,Verilog,FEC-Archive-Verilog,4822,32,2024-04-02 01:38:01+00:00,"['5g', 'bch', 'box-muller', 'bpsk', 'demodulator', 'golay', 'gsfc', 'nasa', 'polar', 'qam', 'tcm', 'verilog', 'wimax', 'demmaper', 'rsc', 'recursive-systematic-convolutional-codes', 'rtl', 'rtl-sdr', 'tcm-4d-8psk']",None
4,https://github.com/na103/Dueottosei.git,2022-12-14 16:25:53+00:00,Amiga 500 PC AT 286 emulator board,0,na103/Dueottosei,578260410,Verilog,Dueottosei,154147,26,2024-03-04 13:47:15+00:00,"['amiga', 'atonce', 'vortex', 'atonceplus', 'dueottosei', 'xc2018']",
5,https://github.com/daeyeon22/artificial_netlist_generator.git,2022-12-22 05:01:26+00:00,Artificial Netlist Generator,4,daeyeon22/artificial_netlist_generator,581032055,Verilog,artificial_netlist_generator,4849,23,2024-02-14 13:03:46+00:00,[],https://api.github.com/licenses/gpl-3.0
6,https://github.com/hoseinmrh/FPGA-Home-Works.git,2022-12-17 19:00:55+00:00,,0,hoseinmrh/FPGA-Home-Works,579456976,Verilog,FPGA-Home-Works,1508,16,2024-04-03 14:39:16+00:00,[],None
7,https://github.com/ulixxe/usb_dfu.git,2022-12-17 14:12:19+00:00,Full Speed USB DFU interface for FPGA and ASIC designs ,1,ulixxe/usb_dfu,579383666,Verilog,usb_dfu,4108,13,2024-03-24 21:08:27+00:00,"['asic', 'fpga', 'serial', 'bootloader', 'cdc-acm', 'tinyfpga-bx', 'usb', 'usb-cdc', 'usb-device', 'usb-dfu', 'verilog', 'dfu']",https://api.github.com/licenses/mit
8,https://github.com/kirbyydoge/kasirga_gok_2023.git,2022-12-29 18:58:45+00:00,Kasırga - Gök Sayısal İşlemci Kategorisi RISC-V İşlemci Tasarımı,2,kirbyydoge/kasirga_gok_2023,583431075,Verilog,kasirga_gok_2023,12888,13,2024-03-23 22:40:35+00:00,[],https://api.github.com/licenses/gpl-3.0
9,https://github.com/kirbyydoge/kasirga_2023.git,2022-12-29 19:07:21+00:00,Kasırga Sayısal Görüntü İşleme Kategorisi Hızlandırıcı Tasarımı,0,kirbyydoge/kasirga_2023,583433123,Verilog,kasirga_2023,7860,12,2024-02-27 19:04:14+00:00,[],https://api.github.com/licenses/gpl-3.0
10,https://github.com/TinyTapeout/tt-multiplexer.git,2022-12-21 14:56:45+00:00,,2,TinyTapeout/tt-multiplexer,580829412,Verilog,tt-multiplexer,1811,11,2024-04-10 17:45:09+00:00,[],https://api.github.com/licenses/apache-2.0
11,https://github.com/yusfux/KASIRGA-GUN.git,2022-12-24 18:32:30+00:00,KASIRGA-GUN | RV32IMCX,0,yusfux/KASIRGA-GUN,581889159,Verilog,KASIRGA-GUN,13529,11,2024-02-27 19:04:10+00:00,[],None
12,https://github.com/Dasharo/verilog-lpc-module.git,2022-12-22 15:45:20+00:00,LPC (Low Pin Count) interface peripheral module in pure Verilog,1,Dasharo/verilog-lpc-module,581223032,Verilog,verilog-lpc-module,431,10,2024-03-25 08:08:59+00:00,[],https://api.github.com/licenses/lgpl-2.1
13,https://github.com/chn0318/MIPS-processor-Implementation.git,2022-12-19 08:04:01+00:00,,0,chn0318/MIPS-processor-Implementation,579897853,Verilog,MIPS-processor-Implementation,345,10,2023-03-06 11:17:13+00:00,[],None
14,https://github.com/grant-olson/fpga9685.git,2022-12-13 16:49:29+00:00,"A Verilog implemenation of an FPGA-based PCA-9685 clone. The PCA-9685 allows you to generate up to 16 pwm signals to drive LEDs, Servos, and more.",0,grant-olson/fpga9685,577844168,Verilog,fpga9685,133,8,2023-07-06 08:39:04+00:00,[],https://api.github.com/licenses/bsd-2-clause
15,https://github.com/maazm007/100Daysof_RTL.git,2022-12-24 16:12:16+00:00,The Repository contains the code of various Digital Circuits,1,maazm007/100Daysof_RTL,581860620,Verilog,100Daysof_RTL,21619,8,2024-01-21 18:15:35+00:00,"['hdl', 'rtl-design', 'verilog', 'verilog-hdl', 'vlsi-design', 'xilinx-ise']",None
16,https://github.com/xiachunqiudong/cpu_design.git,2022-12-30 02:09:23+00:00,,0,xiachunqiudong/cpu_design,583513162,Verilog,cpu_design,10520,7,2024-02-28 06:37:29+00:00,[],None
17,https://github.com/RongyeL/easy_axi.git,2022-12-27 10:39:01+00:00,Learn the basics of AXI against the code and protocol,3,RongyeL/easy_axi,582603701,Verilog,easy_axi,68,7,2024-03-04 07:05:30+00:00,[],None
18,https://github.com/GOURAV-CTRL/100daysofrtl.git,2022-12-27 16:11:54+00:00,,1,GOURAV-CTRL/100daysofrtl,582700757,Verilog,100daysofrtl,111,7,2023-11-25 06:14:48+00:00,[],None
19,https://github.com/PranavGovekar/tdcOnFPGA.git,2022-12-27 08:54:48+00:00,Implementation of tappped delay line TDC on FPGA,2,PranavGovekar/tdcOnFPGA,582574876,Verilog,tdcOnFPGA,29,6,2024-04-08 00:00:48+00:00,[],None
20,https://github.com/yes72002/2021_NCTU_ICLAB_Spring.git,2022-12-17 14:50:22+00:00,NCTU 2021 Spring Integrated Circuit Design Laboratory (ICLAB) Record,0,yes72002/2021_NCTU_ICLAB_Spring,579393903,Verilog,2021_NCTU_ICLAB_Spring,16033,6,2024-03-30 08:31:30+00:00,"['systemverilog', 'verilog']",None
21,https://github.com/superboy999/co-processor-Lenet.git,2022-12-29 05:12:42+00:00,LeNet accelerator,0,superboy999/co-processor-Lenet,583212528,Verilog,co-processor-Lenet,51,6,2024-03-07 10:39:13+00:00,[],None
22,https://github.com/ArvinDelavari/RISCV-Core.git,2022-12-29 15:28:01+00:00,RISC-V CPU Design using TL-Verilog in Makerchip IDE - RV32I,1,ArvinDelavari/RISCV-Core,583372438,Verilog,RISCV-Core,105,5,2023-11-26 03:47:16+00:00,"['cpu', 'hdl', 'risc-v', 'verilog', 'rv32i', 'embedded-c', 'embedded-linux', 'embedded-systems', 'fpga', 'linux', 'riscv', 'tl-verilog']",https://api.github.com/licenses/gpl-3.0
23,https://github.com/avikram2/RISCVPipelinedProcessor.git,2022-12-23 22:21:18+00:00,"Pipelined Processor which implements RV32i Instruction Set. Also contains pipelined L1 4-way set-associative Instruction Cache, direct-mapped L1 Data Cache, and a 4-way set-associative L2 Victim Cache with a fully-associative 8-entry Victim Buffer. Also has a tournament branch predictor (global and local predictors) and a set-associative BTB. ",0,avikram2/RISCVPipelinedProcessor,581667737,Verilog,RISCVPipelinedProcessor,2598,5,2024-03-22 15:52:43+00:00,"['cache', 'pipelined-processors', 'pipelined-risc', 'riscv32', 'set-associative-cache', 'victim-cache']",None
24,https://github.com/anandbaheti/-100CODESOFRTL.git,2022-12-23 13:57:40+00:00,This repository contains all the RTL designs i have implemented in Xilinx VIVADO,1,anandbaheti/-100CODESOFRTL,581544201,Verilog,-100CODESOFRTL,3779,5,2023-11-25 06:13:28+00:00,[],None
25,https://github.com/srishtygandhi-kgp/HFT_on_FPGA.git,2022-12-19 07:10:29+00:00,A Low-Latency FPGA-based Infrastructure for HFT Systems,1,srishtygandhi-kgp/HFT_on_FPGA,579883034,Verilog,HFT_on_FPGA,2242,4,2024-03-11 07:23:25+00:00,[],None
26,https://github.com/overjamaya/verilog_designs.git,2022-12-29 17:46:57+00:00,Designs and problems in verilog language with vivado.,1,overjamaya/verilog_designs,583412530,Verilog,verilog_designs,2290,4,2023-02-28 14:54:28+00:00,[],None
27,https://github.com/JoystanBardeskar/RTL-Design.git,2022-12-15 18:20:35+00:00,,0,JoystanBardeskar/RTL-Design,578722854,Verilog,RTL-Design,874,4,2023-11-25 06:20:43+00:00,[],None
28,https://github.com/MiSTer-devel/Arcade-SlapFight_MiSTer.git,2022-12-26 14:00:58+00:00,Slap Fight MiSTer FPGA Core,5,MiSTer-devel/Arcade-SlapFight_MiSTer,582337293,Verilog,Arcade-SlapFight_MiSTer,25447,4,2023-05-02 13:48:22+00:00,[],https://api.github.com/licenses/gpl-3.0
29,https://github.com/Deepak42074/SRAM_IMC_MPW8.git,2022-12-30 08:54:43+00:00,"The project includes SRAM In Memory Computing Accelerator with updates in design/circuits submitted previously in MPW7, by IITD researchers  under the supervision of Prof: Manan Suri (NVM &Neuromorphic Hardware Research Group IIT-Delhi, https://web.iitd.ac.in/~manansuri/).",0,Deepak42074/SRAM_IMC_MPW8,583592655,Verilog,SRAM_IMC_MPW8,21092,3,2023-12-27 11:06:58+00:00,[],https://api.github.com/licenses/apache-2.0
30,https://github.com/Daniyar1239/AES-encryption-in-Verilog.git,2022-12-14 08:55:24+00:00,AES encryption and decryption algorithms implemented in Verilog programming language,0,Daniyar1239/AES-encryption-in-Verilog,578098421,Verilog,AES-encryption-in-Verilog,418,3,2023-04-10 18:39:22+00:00,"['aes', 'aes-128', 'aes-256', 'aes-encryption', 'cryptography', 'decryption-algorithm', 'encryption', 'encryption-algorithm', 'encryption-decryption', 'modelsim', 'verilog', 'verilog-project']",None
31,https://github.com/santosh2407/100-Days-of-RTL.git,2022-12-26 14:42:59+00:00,,0,santosh2407/100-Days-of-RTL,582349504,Verilog,100-Days-of-RTL,3416,3,2023-03-13 14:03:14+00:00,[],None
32,https://github.com/mole99/leosoc-sky130.git,2022-12-22 17:14:51+00:00,A very simple SoC,0,mole99/leosoc-sky130,581252518,Verilog,leosoc-sky130,89392,3,2024-03-06 22:06:52+00:00,[],https://api.github.com/licenses/apache-2.0
33,https://github.com/jevinskie/delta-debug-verilog-test.git,2022-12-16 18:55:42+00:00,Delta Debugging for Verilog/SystemVerilog,1,jevinskie/delta-debug-verilog-test,579137399,Verilog,delta-debug-verilog-test,159,3,2023-03-13 17:16:49+00:00,[],https://api.github.com/licenses/bsd-2-clause
34,https://github.com/Lucky8882/FFT-Processor-using-CORDIC-Algorithms.git,2022-12-17 10:11:49+00:00,FFT Implementation Using CORDIC Algorithm,0,Lucky8882/FFT-Processor-using-CORDIC-Algorithms,579324879,Verilog,FFT-Processor-using-CORDIC-Algorithms,53969,3,2024-01-12 01:21:35+00:00,[],None
35,https://github.com/aesthet1c0der/Verilog-projects.git,2022-12-25 11:22:03+00:00,"ALU (Arithmetic and Logic Unit), Ripple carry adder, Half adder and full adder are designed using all 3 styles (structural, behavioral, dataflow) and tested by generating stimulus using testbench",0,aesthet1c0der/Verilog-projects,582028726,Verilog,Verilog-projects,22,3,2023-06-20 08:59:46+00:00,"['hardware-description-language', 'verilog', 'vlsi-design', 'fpga']",None
36,https://github.com/poname/VexRiscv-verilog.git,2022-12-13 20:18:40+00:00,VexRiscv verilog benchmark,0,poname/VexRiscv-verilog,577913130,Verilog,VexRiscv-verilog,546,2,2023-05-30 09:23:12+00:00,[],https://api.github.com/licenses/mit
37,https://github.com/Rires-hy/32-bits-RISC-V-Full-processor-design.git,2022-12-26 15:07:15+00:00,,0,Rires-hy/32-bits-RISC-V-Full-processor-design,582356281,Verilog,32-bits-RISC-V-Full-processor-design,115,2,2023-02-02 19:49:33+00:00,[],None
38,https://github.com/Jayce-Ping/CPU.git,2022-12-21 06:54:21+00:00,A simple single cycle CPU,0,Jayce-Ping/CPU,580677701,Verilog,CPU,21,2,2023-12-20 03:36:27+00:00,[],None
39,https://github.com/fangyzh26/IIC.git,2022-12-25 13:43:52+00:00,,1,fangyzh26/IIC,582056558,Verilog,IIC,9,2,2024-03-28 15:15:01+00:00,[],None
40,https://github.com/yhkwon6658/Inplace-FFT.git,2022-12-21 00:14:20+00:00,Implementation Conflict Free Addressing for In-Place FFT Architecture,0,yhkwon6658/Inplace-FFT,580593730,Verilog,Inplace-FFT,34580,2,2024-04-08 04:29:26+00:00,[],https://api.github.com/licenses/mit
41,https://github.com/sumeetkvd/RISC-V-Watch-Dog-Timer-.git,2022-12-19 15:13:50+00:00,,1,sumeetkvd/RISC-V-Watch-Dog-Timer-,580040552,Verilog,RISC-V-Watch-Dog-Timer-,10,2,2023-01-29 14:33:41+00:00,[],None
42,https://github.com/Aksh2107/Video-compression-implementation-using-FPGA.git,2022-12-17 15:04:04+00:00,Video compression is important in the new web and fast transmission era. Our project involves connecting the image sensor to an FPGA and then compressing the video for fast and precise compression. The eventual aim of video compression is to reduce video bit rate for both transmission and storage .,0,Aksh2107/Video-compression-implementation-using-FPGA,579397286,Verilog,Video-compression-implementation-using-FPGA,22371,2,2024-01-01 04:15:58+00:00,[],https://api.github.com/licenses/gpl-3.0
43,https://github.com/zwxb/Spinalhdl_SD_Ctrl.git,2022-12-29 10:35:58+00:00,spinalhdl 实现 sd 控制器,1,zwxb/Spinalhdl_SD_Ctrl,583290452,Verilog,Spinalhdl_SD_Ctrl,335,2,2023-02-01 08:05:36+00:00,[],None
44,https://github.com/Marc103/LC-3-Verilog-Implementation.git,2022-12-20 08:51:48+00:00,I will be implementing the LC-3 ISA specifications in verilog.,0,Marc103/LC-3-Verilog-Implementation,580312464,Verilog,LC-3-Verilog-Implementation,14073,2,2024-02-04 04:45:46+00:00,[],None
45,https://github.com/govardhnn/DSD_AHP.git,2022-12-24 05:59:19+00:00,A compilation of Cadence tool commands and AHP Projects(Specifications and Solutions) I provided as the Teaching Assistant for the Digital Systems Design course (UE20EC313) ,0,govardhnn/DSD_AHP,581735967,Verilog,DSD_AHP,2900,2,2023-04-30 10:17:18+00:00,[],None
46,https://github.com/putoze/EC_FINAL.git,2022-12-18 12:29:37+00:00,,0,putoze/EC_FINAL,579652650,Verilog,EC_FINAL,41966,2,2023-03-11 15:42:57+00:00,[],None
47,https://github.com/JacobLevinson/DAV_Repo.git,2022-12-13 08:30:11+00:00,My group repository for the Digital Architecture Verification (DAV) program for IEEE at UCLA.,0,JacobLevinson/DAV_Repo,577658524,Verilog,DAV_Repo,6679,2,2023-05-08 18:21:40+00:00,[],None
48,https://github.com/MarwanMohamed02/Customizable-FP-ALU.git,2022-12-21 18:23:58+00:00,,1,MarwanMohamed02/Customizable-FP-ALU,580897059,Verilog,Customizable-FP-ALU,28,2,2023-01-27 16:57:20+00:00,[],https://api.github.com/licenses/mit
49,https://github.com/ACMClassCourses/RISCV-CPU-ACMOJ-Sample.git,2022-12-20 09:27:40+00:00,,0,ACMClassCourses/RISCV-CPU-ACMOJ-Sample,580323939,Verilog,RISCV-CPU-ACMOJ-Sample,17,2,2023-01-04 12:32:02+00:00,[],None
50,https://github.com/wjwangcrypto/RandomPermutationISA.git,2022-12-23 02:44:59+00:00,,0,wjwangcrypto/RandomPermutationISA,581380049,Verilog,RandomPermutationISA,83,2,2023-12-04 02:27:43+00:00,[],None
51,https://github.com/hsiangchengfun/2021_Fall_Digital_Circuit_Lab.git,2022-12-20 18:33:23+00:00,,0,hsiangchengfun/2021_Fall_Digital_Circuit_Lab,580509196,Verilog,2021_Fall_Digital_Circuit_Lab,331,2,2023-12-29 08:52:05+00:00,[],None
52,https://github.com/thehavva/Verilog.git,2022-12-13 20:30:22+00:00,Digital design implementation with Verilog language is done with vivado program.,0,thehavva/Verilog,577916236,Verilog,Verilog,326,2,2023-07-27 20:14:34+00:00,[],None
53,https://github.com/kerong2002/FPGA_TETRIS.git,2022-12-24 07:36:09+00:00,FPGA_TETRIS,1,kerong2002/FPGA_TETRIS,581753378,Verilog,FPGA_TETRIS,9006,2,2023-09-24 00:45:37+00:00,"['de2-115', 'fpga', 'tetris', 'verilog']",None
54,https://github.com/arlotfi79/MIPS-Processor.git,2022-12-18 08:09:37+00:00,A 32-bit MIPS Processor Implementation in Verilog HDL,0,arlotfi79/MIPS-Processor,579595643,Verilog,MIPS-Processor,25,2,2024-02-02 19:07:50+00:00,"['mips-processor', 'multicycle', 'pipeline', 'verilog-hdl', 'xilinx']",None
55,https://github.com/Aksh2107/Video-scaling-HLS-implementation.git,2022-12-25 12:29:02+00:00,"Video scaling, whether upscaling or downscaling, is the process of generating pixels that did not exist in the original image.  FPGAs with a slew of high-performance DSP structures are ideal for such algorithms, and FPGA vendors are starting to offer user-configurable video-scaling IP blocks that are speedily configured for any application.",0,Aksh2107/Video-scaling-HLS-implementation,582041611,Verilog,Video-scaling-HLS-implementation,5001,2,2023-10-13 11:21:30+00:00,[],https://api.github.com/licenses/gpl-3.0
56,https://github.com/BilalAlpaslan/MITT_Sayisal_islemci_tasarimi_2023.git,2022-12-30 09:53:31+00:00,,0,BilalAlpaslan/MITT_Sayisal_islemci_tasarimi_2023,583606924,Verilog,MITT_Sayisal_islemci_tasarimi_2023,12,2,2023-10-16 19:43:09+00:00,[],None
57,https://github.com/wokwi/simon-verilog.git,2022-12-29 21:56:32+00:00,"Simon Says game, written in Verilog and simulated on Wokwi",0,wokwi/simon-verilog,583470127,Verilog,simon-verilog,6,2,2023-04-07 10:36:23+00:00,[],None
58,https://github.com/cpyhal3515/OpenMIPS.git,2022-12-26 08:00:58+00:00,用来记录学习《自己动手写CPU》的过程。,0,cpyhal3515/OpenMIPS,582248051,Verilog,OpenMIPS,55257,2,2024-01-14 12:48:11+00:00,[],None
59,https://github.com/asankaSovis/Position_Detection.git,2022-12-26 02:32:28+00:00,"📌 The idea of this project is to build a system that uses the existing lights to detect the location of a user within an indoor environment. For this, we can use Visible Light Communication (VLC) technology. The basic concept is to have four LEDs transmitting their IDs one after the other at fixed intervals.",1,asankaSovis/Position_Detection,582185624,Verilog,Position_Detection,5333,2,2024-03-21 07:42:18+00:00,"['altera-fpga', 'arduino', 'c-sharp', 'fpga', 'intel', 'serial-communication', 'uart-protocol', 'visible-light-communication']",https://api.github.com/licenses/gpl-3.0
60,https://github.com/devchadha-jmi/100-Days-of-RTL.git,2022-12-21 16:12:50+00:00,I started off to work on RTL Design for 100 days. Falling short with problems so decided to go ahead solving problems on HDLBits. Would continue here once I start my verification journey.,0,devchadha-jmi/100-Days-of-RTL,580856064,Verilog,100-Days-of-RTL,138,2,2023-06-13 16:55:36+00:00,[],None
61,https://github.com/yueqiZhang-XDU/AER-based-SCNN.git,2022-12-29 09:50:11+00:00,Software and hardware implementation for an AER-based SCNN image classisifation system,0,yueqiZhang-XDU/AER-based-SCNN,583278347,Verilog,AER-based-SCNN,14382,2,2023-02-10 07:05:42+00:00,[],None
62,https://github.com/yasmiinezaki/Floating-Point-Unit.git,2022-12-21 10:52:21+00:00,created a floating point unit using verilog HDL,2,yasmiinezaki/Floating-Point-Unit,580748364,Verilog,Floating-Point-Unit,1300,2,2024-01-26 18:28:36+00:00,[],None
63,https://github.com/mvsharikrishna/asynchronous-FIFO.git,2022-12-15 16:44:48+00:00,,0,mvsharikrishna/asynchronous-FIFO,578689949,Verilog,asynchronous-FIFO,25,1,2023-01-05 12:02:37+00:00,[],None
64,https://github.com/mit41301/PIC10_RISC_Verilog.git,2022-12-21 18:36:13+00:00,PIC10F200 Verilog ,0,mit41301/PIC10_RISC_Verilog,580900550,Verilog,PIC10_RISC_Verilog,1008,1,2023-12-29 08:03:09+00:00,[],None
65,https://github.com/YuHungChen/2022_Spring_NYCU_ICLAB.git,2022-12-14 16:05:59+00:00,,0,YuHungChen/2022_Spring_NYCU_ICLAB,578253294,Verilog,2022_Spring_NYCU_ICLAB,11449,1,2024-04-09 10:44:15+00:00,[],https://api.github.com/licenses/mit
66,https://github.com/Siddhanth09/DICE-Game.git,2022-12-29 12:42:27+00:00,,0,Siddhanth09/DICE-Game,583323804,Verilog,DICE-Game,9,1,2023-01-13 11:32:58+00:00,[],None
67,https://github.com/PashaBarahimi/Computer-Aided-Design-Projects.git,2022-12-24 09:10:29+00:00,Applying encoding functions over a 3D matrix in hardware.,1,PashaBarahimi/Computer-Aided-Design-Projects,581771154,Verilog,Computer-Aided-Design-Projects,25896,1,2023-10-23 09:51:58+00:00,[],https://api.github.com/licenses/mit
68,https://github.com/Ahmed0100/full_pong_game_vga_fpga.git,2022-12-14 08:28:01+00:00,full_ping_pong_game_vga_fpga,0,Ahmed0100/full_pong_game_vga_fpga,578089480,Verilog,full_pong_game_vga_fpga,31,1,2023-12-07 03:27:11+00:00,[],None
69,https://github.com/wangjunjie-lnnf/wangjunjie-lnnf.github.io.git,2022-12-29 04:48:44+00:00,,1,wangjunjie-lnnf/wangjunjie-lnnf.github.io,583208071,Verilog,wangjunjie-lnnf.github.io,51381,1,2024-03-03 14:59:35+00:00,[],None
70,https://github.com/HakaruN/PowerPC.git,2022-12-18 20:50:22+00:00,,0,HakaruN/PowerPC,579763905,Verilog,PowerPC,23298,1,2022-12-28 12:26:17+00:00,[],None
71,https://github.com/Noureldin7/Floating_Point_Unit.git,2022-12-17 07:50:05+00:00,,0,Noureldin7/Floating_Point_Unit,579293976,Verilog,Floating_Point_Unit,49,1,2023-07-06 09:10:38+00:00,[],None
72,https://github.com/goduphi/uart.git,2022-12-25 19:53:30+00:00,,0,goduphi/uart,582129396,Verilog,uart,3,1,2023-03-07 10:13:29+00:00,[],None
73,https://github.com/Priyanshu-1012/HDLBits-Solutions.git,2022-12-25 16:57:49+00:00,verilog practice ,0,Priyanshu-1012/HDLBits-Solutions,582096742,Verilog,HDLBits-Solutions,184,1,2023-08-11 10:22:21+00:00,"['verilog', 'verilog-hdl']",None
74,https://github.com/Dara-O/triple-ported-memory.git,2022-12-28 08:55:45+00:00,A pipelined multi-banked memory module with a dynamic-priority arbitration scheme to resolve bank conflicts. 8KB Total Capacity with Physical Design performed using OpenLane RTL-to-GDS flow on SKY130 PDK.,0,Dara-O/triple-ported-memory,582926198,Verilog,triple-ported-memory,1348,1,2023-06-25 08:10:14+00:00,[],None
75,https://github.com/deepakmk7835/vlsi-projects.git,2022-12-30 17:26:55+00:00,Repo contains all the projects related to VLSI domain.,0,deepakmk7835/vlsi-projects,583719832,Verilog,vlsi-projects,877,1,2023-03-07 10:59:09+00:00,[],None
76,https://github.com/taeyoup/FPGA-High-Speed-Digital-Thermometer.git,2022-12-28 07:55:19+00:00,,0,taeyoup/FPGA-High-Speed-Digital-Thermometer,582910393,Verilog,FPGA-High-Speed-Digital-Thermometer,24,1,2023-01-31 22:46:18+00:00,[],None
77,https://github.com/bsg-external/ee477-designs-final-project.git,2022-12-20 22:12:04+00:00,,0,bsg-external/ee477-designs-final-project,580569662,Verilog,ee477-designs-final-project,96,1,2023-02-25 01:51:52+00:00,[],
78,https://github.com/Stardusten/riscv.git,2022-12-15 12:55:00+00:00,一个 5 阶段流水线 RV32I CPU Verilog 实现,2,Stardusten/riscv,578603174,Verilog,riscv,57,1,2023-05-24 07:48:00+00:00,[],https://api.github.com/licenses/gpl-3.0
79,https://github.com/celine-hsieh/VLSI-Testing-LAB-2.git,2022-12-15 10:44:28+00:00,,0,celine-hsieh/VLSI-Testing-LAB-2,578558412,Verilog,VLSI-Testing-LAB-2,1927,1,2023-08-30 11:34:34+00:00,"['atpg', 'bist', 'memory', 'scan-chain', 'test-coverage']",None
80,https://github.com/VishalS-HK/DDCO-Lab-UE21CS251A.git,2022-12-28 15:47:51+00:00,A Repo that contains the source code for Digital Design and Computer Organisation course.,1,VishalS-HK/DDCO-Lab-UE21CS251A,583045432,Verilog,DDCO-Lab-UE21CS251A,12,1,2023-01-04 06:45:25+00:00,"['verilog', 'icarus-verilog', 'digital-design-and-computer-organization']",None
81,https://github.com/shihjimmy/NTUEE_IC_Design.git,2022-12-14 21:00:36+00:00,IC Design course 2022 Fall ,0,shihjimmy/NTUEE_IC_Design,578347238,Verilog,NTUEE_IC_Design,22010,1,2023-10-30 18:06:57+00:00,[],None
82,https://github.com/DPhongUIT2021/Lane-detection-using-hough-transform.git,2022-12-16 09:32:27+00:00,Using Verilog HDL,0,DPhongUIT2021/Lane-detection-using-hough-transform,578951721,Verilog,Lane-detection-using-hough-transform,68,1,2024-01-07 18:55:20+00:00,[],None
83,https://github.com/sumanthnimmakayala/pro_row_idct_folded.git,2022-12-28 12:00:10+00:00,,0,sumanthnimmakayala/pro_row_idct_folded,582977163,Verilog,pro_row_idct_folded,3372,1,2023-11-11 07:05:59+00:00,[],https://api.github.com/licenses/apache-2.0
84,https://github.com/balister/verilog-hacking.git,2022-12-19 15:44:05+00:00,,0,balister/verilog-hacking,580051325,Verilog,verilog-hacking,17,1,2023-02-02 20:18:49+00:00,[],https://api.github.com/licenses/gpl-2.0
85,https://github.com/DENGRENHAO/Verilog_Handwritten_Digit_Recognition.git,2022-12-24 11:36:35+00:00,,0,DENGRENHAO/Verilog_Handwritten_Digit_Recognition,581800324,Verilog,Verilog_Handwritten_Digit_Recognition,579,1,2022-12-27 10:40:27+00:00,[],None
86,https://github.com/carolxu369/Processor.git,2022-12-27 21:05:37+00:00,A single-cycle 32-bit processor implemented using Verilog,0,carolxu369/Processor,582779431,Verilog,Processor,34,1,2023-01-05 19:50:37+00:00,[],None
87,https://github.com/OguzKaanOselmis/IEEE-754-Calculator.git,2022-12-22 16:40:18+00:00,IEEE-754 Calculator with Pipeline,0,OguzKaanOselmis/IEEE-754-Calculator,581241190,Verilog,IEEE-754-Calculator,11,1,2022-12-22 16:49:07+00:00,[],None
88,https://github.com/lbthomsen/asap-1.git,2022-12-21 23:57:52+00:00,Almost as Simple as Possible CPU implemented in Verilog,0,lbthomsen/asap-1,580975558,Verilog,asap-1,120,1,2023-11-12 07:11:44+00:00,[],https://api.github.com/licenses/mit
89,https://github.com/berrios96sean/Verilog.git,2022-12-30 22:36:33+00:00,Simple Verilog Gates designed and tested with Icarus Verilog and GTKWave as a waveform viewer ,0,berrios96sean/Verilog,583781445,Verilog,Verilog,104,1,2023-01-31 22:53:44+00:00,[],None
90,https://github.com/Ahmed-Khaled24/APB-UART-GPIO.git,2022-12-20 12:38:13+00:00,"Verilog project which is APB bus with UART and GPIO connected to it, fully implemented and synthesizable ",0,Ahmed-Khaled24/APB-UART-GPIO,580385737,Verilog,APB-UART-GPIO,52,1,2023-05-26 07:36:37+00:00,"['abp', 'hardware', 'uart', 'verilog', 'gpio']",None
91,https://github.com/jphomenick/Simple-CPU.git,2022-12-16 20:19:19+00:00,Simple 16-Bit CPU in Verilog,0,jphomenick/Simple-CPU,579160416,Verilog,Simple-CPU,7,1,2023-07-01 11:11:36+00:00,[],None
92,https://github.com/Awesama-T/FPGA-based_FM_Receiver.git,2022-12-22 19:47:27+00:00,"This is a FPGA based FM receiver, designed using Xilinx Vivado and MATLAB on Virtex-7 FPGA. The setup includes 12-bit ADC, analog front-end, arduino GUI and Digilent Nexys A7 FPGA dev kit",1,Awesama-T/FPGA-based_FM_Receiver,581296240,Verilog,FPGA-based_FM_Receiver,55,1,2024-03-29 11:41:40+00:00,[],None
93,https://github.com/AKASHTHER/Newton_Raphson_reciprocal_multiplier_based_on_floating_point_number.git,2022-12-21 07:48:47+00:00,This repository include the verilog code for dividing a numerator by a divisor using the multiplication by reciprocal method.,0,AKASHTHER/Newton_Raphson_reciprocal_multiplier_based_on_floating_point_number,580692152,Verilog,Newton_Raphson_reciprocal_multiplier_based_on_floating_point_number,5,1,2023-04-11 17:53:35+00:00,[],None
94,https://github.com/muhammedTarek001/UART_TX-verilog.git,2022-12-22 12:31:28+00:00,,0,muhammedTarek001/UART_TX-verilog,581158118,Verilog,UART_TX-verilog,5,1,2024-02-28 22:07:44+00:00,[],None
95,https://github.com/Aswin-Raj-K/RV32I-Processor-Design.git,2022-12-30 07:32:30+00:00,Implementation of RV32I Processor on the Basys 3,1,Aswin-Raj-K/RV32I-Processor-Design,583574015,Verilog,RV32I-Processor-Design,5130,1,2024-03-11 19:16:33+00:00,[],None
96,https://github.com/ahmadeladawy2001/ECE-369-Competition.git,2022-12-23 01:30:10+00:00,,0,ahmadeladawy2001/ECE-369-Competition,581366035,Verilog,ECE-369-Competition,41,1,2023-11-12 22:06:31+00:00,[],None
97,https://github.com/Rakson0209/baugh_wooley_8x6.git,2022-12-23 20:00:29+00:00,,0,Rakson0209/baugh_wooley_8x6,581640189,Verilog,baugh_wooley_8x6,2,1,2023-11-13 14:57:28+00:00,[],None
98,https://github.com/kgl2001/Atom_Econet_AtoMMC.git,2022-12-20 14:55:06+00:00,Combined AtoMMC & Econet interface board for Acorn Atom,1,kgl2001/Atom_Econet_AtoMMC,580434748,Verilog,Atom_Econet_AtoMMC,2565,1,2023-10-06 16:45:23+00:00,[],https://api.github.com/licenses/cc-by-sa-4.0
99,https://github.com/ucb-ee290c/SPIglass.git,2022-12-25 10:21:07+00:00,"A fully synthesizable, BRAM backed SPI Flash device",1,ucb-ee290c/SPIglass,582017524,Verilog,SPIglass,12,1,2024-02-22 08:19:11+00:00,[],None
100,https://github.com/junjie1475/digital_logic_and_computer_organization_lab.git,2022-12-30 09:47:42+00:00,,0,junjie1475/digital_logic_and_computer_organization_lab,583605508,Verilog,digital_logic_and_computer_organization_lab,665,1,2022-12-30 10:02:35+00:00,[],None
101,https://github.com/noemiabril/ao486_MiSTer-DE10-Standard.git,2022-12-19 16:30:50+00:00,ao486 Core for MiSTer DE10-Standard,0,noemiabril/ao486_MiSTer-DE10-Standard,580067997,Verilog,ao486_MiSTer-DE10-Standard,1462,1,2023-03-17 14:12:29+00:00,[],
102,https://github.com/ftqtfff/TimingFunctionVerification.git,2022-12-15 06:16:55+00:00,Use invariants as constraints to speed up the verification of timing-related network functions,0,ftqtfff/TimingFunctionVerification,578473004,Verilog,TimingFunctionVerification,65,1,2023-05-12 16:23:40+00:00,[],None
103,https://github.com/chsachinkumar/UART-Half-Duplex-Serial-Port-Module-Design.git,2022-12-17 13:41:31+00:00,This repository contains an UART Half Duplex Serial Port Module Design,0,chsachinkumar/UART-Half-Duplex-Serial-Port-Module-Design,579375684,Verilog,UART-Half-Duplex-Serial-Port-Module-Design,970,1,2023-04-25 02:23:28+00:00,[],None
104,https://github.com/sanjeevskr/eyrc22_SB_2155.git,2022-12-23 19:04:45+00:00,,1,sanjeevskr/eyrc22_SB_2155,581627763,Verilog,eyrc22_SB_2155,19556,1,2024-02-23 17:07:10+00:00,[],None
105,https://github.com/Hiteshiitg123/psudo_8bit_microprocessor.git,2022-12-16 09:25:24+00:00,,0,Hiteshiitg123/psudo_8bit_microprocessor,578949344,Verilog,psudo_8bit_microprocessor,75,1,2022-12-16 09:47:25+00:00,[],None
106,https://github.com/Nidhinchandran47/4-bit-alu.git,2022-12-29 07:41:14+00:00,This is the verilog code for a 4bit arithmetic and logic unit which can do 8 operations,0,Nidhinchandran47/4-bit-alu,583245481,Verilog,4-bit-alu,7,1,2023-03-25 16:26:00+00:00,[],None
107,https://github.com/SnoozeLee/FunctionGeneratorDemo_Verilog.git,2022-12-18 04:26:08+00:00,,0,SnoozeLee/FunctionGeneratorDemo_Verilog,579556049,Verilog,FunctionGeneratorDemo_Verilog,388,1,2022-12-18 12:22:33+00:00,[],None
108,https://github.com/rusunited2/EECS151_FPGA_PROJECT.git,2022-12-13 05:52:29+00:00,,0,rusunited2/EECS151_FPGA_PROJECT,577611118,Verilog,EECS151_FPGA_PROJECT,24801,1,2024-01-28 14:55:30+00:00,[],None
109,https://github.com/MingshanHe/AI-Hardware-System-Design-Project.git,2022-12-22 03:49:43+00:00,"[M3500.001500 001] This course is organized by AI department and opened in winter semester, 2022.",0,MingshanHe/AI-Hardware-System-Design-Project,581018044,Verilog,AI-Hardware-System-Design-Project,81561,1,2023-12-18 10:24:30+00:00,[],https://api.github.com/licenses/gpl-3.0
110,https://github.com/jogeshsingh/Synchronous-FIFO-DESIGN-using-VERILOG-HDL-.git,2022-12-21 07:05:08+00:00,,0,jogeshsingh/Synchronous-FIFO-DESIGN-using-VERILOG-HDL-,580680597,Verilog,Synchronous-FIFO-DESIGN-using-VERILOG-HDL-,28,1,2023-09-29 06:55:55+00:00,[],https://api.github.com/licenses/gpl-3.0
111,https://github.com/mvsharikrishna/Verilog-Codes.git,2022-12-15 16:43:10+00:00,,0,mvsharikrishna/Verilog-Codes,578689366,Verilog,Verilog-Codes,29,1,2023-06-27 09:45:13+00:00,[],None
112,https://github.com/Jimmy01240397/LittleDinosaur.git,2022-12-21 09:01:03+00:00,,0,Jimmy01240397/LittleDinosaur,580713365,Verilog,LittleDinosaur,15541,1,2023-12-19 09:21:17+00:00,[],
113,https://github.com/RoiTang/axi_stream.git,2022-12-15 13:44:18+00:00,,0,RoiTang/axi_stream,578621397,Verilog,axi_stream,318,1,2023-04-09 02:21:58+00:00,[],None
114,https://github.com/XaiverTips/div64.git,2022-12-21 08:00:39+00:00,A Design of 64bit divider with Verilog,0,XaiverTips/div64,580695637,Verilog,div64,17,1,2022-12-21 08:05:27+00:00,[],https://api.github.com/licenses/gpl-3.0
115,https://github.com/MahmoudSublaban/Low-power-Content-Addressable-Memory-CAM-USING-9T-SRAM-Array-for-Mobile-Devices..git,2022-12-21 09:17:53+00:00,VLSI low-power design Using Pspice and Microwind,0,MahmoudSublaban/Low-power-Content-Addressable-Memory-CAM-USING-9T-SRAM-Array-for-Mobile-Devices.,580718600,Verilog,Low-power-Content-Addressable-Memory-CAM-USING-9T-SRAM-Array-for-Mobile-Devices.,1371,1,2023-03-05 09:48:48+00:00,[],None
116,https://github.com/Qingqian-Wang/single-cycle-processor-and-tetrix.git,2022-12-23 11:59:00+00:00,,0,Qingqian-Wang/single-cycle-processor-and-tetrix,581510896,Verilog,single-cycle-processor-and-tetrix,38039,1,2022-12-29 06:59:53+00:00,[],None
117,https://github.com/hansfbaier/analog-asic-playground.git,2022-12-29 23:34:06+00:00,,0,hansfbaier/analog-asic-playground,583487801,Verilog,analog-asic-playground,95,1,2023-09-04 17:47:07+00:00,[],https://api.github.com/licenses/apache-2.0
118,https://github.com/Shawn-McSorley/optical-tf-dissemination-fpga.git,2022-12-27 17:09:53+00:00,,0,Shawn-McSorley/optical-tf-dissemination-fpga,582717877,Verilog,optical-tf-dissemination-fpga,142145,1,2023-03-10 05:50:49+00:00,[],None
119,https://github.com/Mohamed-AbdulRahman5/asyncrounus_fifo_buffer.git,2022-12-26 13:37:22+00:00,,0,Mohamed-AbdulRahman5/asyncrounus_fifo_buffer,582330794,Verilog,asyncrounus_fifo_buffer,1768,1,2023-05-10 21:18:15+00:00,[],None
120,https://github.com/BeijingAB/FPGA_Mario.git,2022-12-13 03:29:11+00:00,FPGA Super Mario Based on Altera Cyclone IV E,0,BeijingAB/FPGA_Mario,577577888,Verilog,FPGA_Mario,7572,1,2023-10-21 15:39:26+00:00,[],None
121,https://github.com/Smallstorm/CYBERcobra3000.git,2022-12-21 21:49:34+00:00,Primitive programmable device,0,Smallstorm/CYBERcobra3000,580950852,Verilog,CYBERcobra3000,5,0,2022-12-21 21:52:52+00:00,[],None
122,https://github.com/AhmedRadwan2000/GCD_Calculator_Datapath.git,2022-12-30 07:55:13+00:00,,0,AhmedRadwan2000/GCD_Calculator_Datapath,583579092,Verilog,GCD_Calculator_Datapath,268,0,2022-12-30 07:58:34+00:00,[],None
123,https://github.com/komalg27/IIT_Indore_Dadda_Multiplier_mpw8.git,2022-12-30 23:17:18+00:00,,0,komalg27/IIT_Indore_Dadda_Multiplier_mpw8,583787742,Verilog,IIT_Indore_Dadda_Multiplier_mpw8,65706,0,2022-12-30 23:31:53+00:00,[],https://api.github.com/licenses/apache-2.0
124,https://github.com/Tanyabit/TanyaFpga.git,2022-12-26 01:24:38+00:00,,0,Tanyabit/TanyaFpga,582175622,Verilog,TanyaFpga,2194,0,2022-12-26 01:44:35+00:00,[],None
125,https://github.com/komalg27/matrix_operation_mpw8.git,2022-12-28 06:16:21+00:00,,0,komalg27/matrix_operation_mpw8,582885771,Verilog,matrix_operation_mpw8,2203,0,2022-12-28 06:16:38+00:00,[],https://api.github.com/licenses/apache-2.0
126,https://github.com/plutonh/Capstone-Design-Digital-Circuits.git,2022-12-24 15:54:07+00:00,,0,plutonh/Capstone-Design-Digital-Circuits,581856722,Verilog,Capstone-Design-Digital-Circuits,23226,0,2022-12-29 14:41:11+00:00,[],None
127,https://github.com/mohammadsaadati80/Matrix-Encoder-function.git,2022-12-24 14:38:45+00:00,"Computer Aided Design Course Projects, University of Tehran",1,mohammadsaadati80/Matrix-Encoder-function,581840171,Verilog,Matrix-Encoder-function,2533,0,2023-02-16 08:06:24+00:00,[],None
128,https://github.com/coolldude/SetAssociativeCache.git,2022-12-21 17:53:28+00:00,,0,coolldude/SetAssociativeCache,580888066,Verilog,SetAssociativeCache,1069,0,2022-12-21 17:54:27+00:00,[],None
129,https://github.com/Thnorty/4_Way_FPGA_Adder.git,2022-12-22 13:17:16+00:00,My wonderful beautiful amazing project that I really worked on and got an AA ,0,Thnorty/4_Way_FPGA_Adder,581172962,Verilog,4_Way_FPGA_Adder,10,0,2023-04-29 17:35:42+00:00,[],None
130,https://github.com/SabrinaBruni28/Cifra_de_Cesar.git,2022-12-26 18:36:19+00:00,,0,SabrinaBruni28/Cifra_de_Cesar,582410163,Verilog,Cifra_de_Cesar,13,0,2022-12-26 18:38:57+00:00,[],None
131,https://github.com/yuchengwang1121/VSD_CNN_accelerator.git,2022-12-25 08:29:32+00:00,,1,yuchengwang1121/VSD_CNN_accelerator,581998753,Verilog,VSD_CNN_accelerator,140735,0,2023-01-05 03:20:55+00:00,[],None
132,https://github.com/evd18i021/wave1d_con_ext.git,2022-12-24 10:09:02+00:00,Conventional convolution based folded DWT using 32-bit Wallace tree multiplier,0,evd18i021/wave1d_con_ext,581782548,Verilog,wave1d_con_ext,3373,0,2022-12-24 10:09:15+00:00,[],https://api.github.com/licenses/apache-2.0
133,https://github.com/ryhnAp/CAlab.git,2022-12-29 20:10:23+00:00,,0,ryhnAp/CAlab,583447613,Verilog,CAlab,55,0,2023-05-29 12:06:17+00:00,[],None
134,https://github.com/uw-acme/HLS4ML-StreetView.git,2022-12-24 23:58:45+00:00,Work with the hls4ml-tutorial street view model -- part6,0,uw-acme/HLS4ML-StreetView,581936431,Verilog,HLS4ML-StreetView,618,0,2022-12-25 00:07:31+00:00,[],None
135,https://github.com/mercurius-rl/RVCORE.git,2022-12-22 16:07:36+00:00,RISC-V Core,0,mercurius-rl/RVCORE,581230431,Verilog,RVCORE,175,0,2022-12-22 16:08:44+00:00,[],None
136,https://github.com/Janavind/mpw8.git,2022-12-21 17:09:47+00:00,,1,Janavind/mpw8,580874504,Verilog,mpw8,29515,0,2022-12-21 17:10:04+00:00,[],https://api.github.com/licenses/apache-2.0
137,https://github.com/sumanthnimmakayala/pro_row_idct_parallel.git,2022-12-28 12:48:07+00:00,,0,sumanthnimmakayala/pro_row_idct_parallel,582990678,Verilog,pro_row_idct_parallel,3366,0,2022-12-28 12:48:23+00:00,[],https://api.github.com/licenses/apache-2.0
138,https://github.com/ParasVekariya/iiitb_sd_mpw8.git,2022-12-16 06:41:18+00:00,,0,ParasVekariya/iiitb_sd_mpw8,578901304,Verilog,iiitb_sd_mpw8,330388,0,2022-12-16 06:41:35+00:00,[],https://api.github.com/licenses/apache-2.0
139,https://github.com/amisha004/4-bit_Wallace_Tree_Multipler.git,2022-12-14 19:20:10+00:00,,0,amisha004/4-bit_Wallace_Tree_Multipler,578320234,Verilog,4-bit_Wallace_Tree_Multipler,193,0,2022-12-14 19:24:37+00:00,[],https://api.github.com/licenses/mit
140,https://github.com/adityan18/BW_mul_foundary.git,2022-12-15 14:07:52+00:00,,0,adityan18/BW_mul_foundary,578630269,Verilog,BW_mul_foundary,287136,0,2022-12-15 14:08:09+00:00,[],https://api.github.com/licenses/apache-2.0
141,https://github.com/yachen0409/Computer_organization.git,2022-12-15 08:15:16+00:00,,0,yachen0409/Computer_organization,578507787,Verilog,Computer_organization,12090,0,2022-12-15 08:23:17+00:00,[],None
142,https://github.com/MDlhhh/AXIS.git,2022-12-17 13:20:44+00:00,,0,MDlhhh/AXIS,579370204,Verilog,AXIS,376,0,2022-12-17 13:32:20+00:00,[],None
143,https://github.com/micr0dust/verilog-tetris.git,2022-12-18 13:00:14+00:00,"Tetris developed using Verilog HDL, running on FPGA - semester final project",1,micr0dust/verilog-tetris,579660461,Verilog,verilog-tetris,347,0,2022-12-31 09:19:24+00:00,[],None
144,https://github.com/GalavilliRambabu/Ripple_Carry_Adder.git,2022-12-19 16:30:40+00:00,,0,GalavilliRambabu/Ripple_Carry_Adder,580067954,Verilog,Ripple_Carry_Adder,1,0,2022-12-19 16:31:39+00:00,[],None
145,https://github.com/Thomas7991/Verilog.git,2022-12-19 22:07:19+00:00,,0,Thomas7991/Verilog,580166671,Verilog,Verilog,6120,0,2022-12-24 22:03:58+00:00,[],None
146,https://github.com/Cnrd2/Dance-Dance-Revolution-Verilog.git,2022-12-19 19:44:18+00:00,,0,Cnrd2/Dance-Dance-Revolution-Verilog,580128895,Verilog,Dance-Dance-Revolution-Verilog,22126,0,2022-12-19 19:51:06+00:00,[],None
147,https://github.com/songchangeun96/my_chip.git,2022-12-20 18:55:46+00:00,,0,songchangeun96/my_chip,580515792,Verilog,my_chip,2206,0,2022-12-20 18:56:02+00:00,[],https://api.github.com/licenses/apache-2.0
148,https://github.com/bsg-external/ee477-designs-module0.git,2022-12-20 22:11:02+00:00,,0,bsg-external/ee477-designs-module0,580569471,Verilog,ee477-designs-module0,16,0,2022-12-29 07:46:33+00:00,[],
149,https://github.com/Heejinee3/Computer-Architecture.git,2022-12-21 13:52:00+00:00,,0,Heejinee3/Computer-Architecture,580805887,Verilog,Computer-Architecture,5805,0,2023-05-01 05:25:19+00:00,[],None
150,https://github.com/swenbao/guess_number.git,2022-12-27 08:29:04+00:00,,0,swenbao/guess_number,582568094,Verilog,guess_number,28884,0,2023-01-31 22:43:23+00:00,[],None
151,https://github.com/mayarim/Processor_on_FPGA.git,2022-12-23 22:38:31+00:00,Wordle project from Spring 2022,0,mayarim/Processor_on_FPGA,581670766,Verilog,Processor_on_FPGA,1267,0,2024-01-08 00:59:35+00:00,[],None
152,https://github.com/arthurfreiman/teste.git,2022-12-20 23:13:55+00:00,,0,arthurfreiman/teste,580582233,Verilog,teste,1,0,2023-08-17 15:24:51+00:00,[],None
153,https://github.com/Naman-Dharmani/DNNAccelerator.git,2022-12-17 07:23:02+00:00,,0,Naman-Dharmani/DNNAccelerator,579288140,Verilog,DNNAccelerator,9,0,2022-12-18 14:43:54+00:00,[],None
154,https://github.com/2020547-cpe/HDL.git,2022-12-19 08:53:57+00:00,,0,2020547-cpe/HDL,579912857,Verilog,HDL,928,0,2022-12-19 08:55:01+00:00,[],None
155,https://github.com/ninQ1703/Pipelined-Processor.git,2022-12-22 07:08:30+00:00,,0,ninQ1703/Pipelined-Processor,581062337,Verilog,Pipelined-Processor,184,0,2022-12-22 07:10:19+00:00,[],None
156,https://github.com/2020474-cpe/HDL-Iverilog-Experiments.git,2022-12-22 11:40:04+00:00,,0,2020474-cpe/HDL-Iverilog-Experiments,581142588,Verilog,HDL-Iverilog-Experiments,1175,0,2022-12-22 11:41:08+00:00,[],None
157,https://github.com/umarcis/neuralNetwork.git,2022-12-20 10:46:23+00:00,I used two input layer neuron three hidden layer neuron andthen goes to output part and also creates a testbench so that we can verify our design.,0,umarcis/neuralNetwork,580349710,Verilog,neuralNetwork,115,0,2022-12-20 10:50:16+00:00,[],None
158,https://github.com/premilar/6111_final.git,2022-12-16 02:05:57+00:00,,0,premilar/6111_final,578839191,Verilog,6111_final,4212,0,2022-12-16 02:18:58+00:00,[],None
159,https://github.com/Ahmed-H300/Verilog-Multipliers.git,2022-12-13 11:49:38+00:00,,0,Ahmed-H300/Verilog-Multipliers,577728930,Verilog,Verilog-Multipliers,68,0,2023-03-25 19:53:45+00:00,[],None
160,https://github.com/WelsonAA/EDA_Proj.git,2022-12-13 13:22:02+00:00,,0,WelsonAA/EDA_Proj,577763125,Verilog,EDA_Proj,0,0,2022-12-13 13:27:01+00:00,[],None
161,https://github.com/archiskhuspe/8-Bit-Multiplier.git,2022-12-16 12:48:04+00:00,,0,archiskhuspe/8-Bit-Multiplier,579012625,Verilog,8-Bit-Multiplier,420,0,2022-12-16 13:12:13+00:00,[],None
162,https://github.com/Liiijiayao/study.git,2022-12-13 03:16:17+00:00,,0,Liiijiayao/study,577574898,Verilog,study,5,0,2022-12-14 05:22:59+00:00,[],None
163,https://github.com/Swagatika-Meher/Mod-8-Up-Down-Synchronous-Counter-using-130nm-CMOS-Technology-.git,2022-12-14 15:55:23+00:00,,0,Swagatika-Meher/Mod-8-Up-Down-Synchronous-Counter-using-130nm-CMOS-Technology-,578249292,Verilog,Mod-8-Up-Down-Synchronous-Counter-using-130nm-CMOS-Technology-,7779,0,2023-01-09 15:26:11+00:00,[],https://api.github.com/licenses/gpl-3.0
164,https://github.com/Sud-ana/caravel_walkthrough.git,2022-12-23 18:23:43+00:00,,0,Sud-ana/caravel_walkthrough,581617958,Verilog,caravel_walkthrough,2206,0,2022-12-23 18:23:56+00:00,[],https://api.github.com/licenses/apache-2.0
165,https://github.com/amruth-sn/multimodal_digital_clock.git,2022-12-22 19:44:36+00:00,,0,amruth-sn/multimodal_digital_clock,581295476,Verilog,multimodal_digital_clock,34,0,2022-12-22 20:05:42+00:00,[],https://api.github.com/licenses/mit
166,https://github.com/ttdet/RISC-V-Multi-Cycle-CPU.git,2022-12-22 23:17:35+00:00,,0,ttdet/RISC-V-Multi-Cycle-CPU,581342753,Verilog,RISC-V-Multi-Cycle-CPU,634,0,2023-03-01 06:21:38+00:00,[],None
167,https://github.com/nikhil9591/Modified_SPI_Protocol_Using_Verilog_HDL.git,2022-12-28 06:38:35+00:00,,0,nikhil9591/Modified_SPI_Protocol_Using_Verilog_HDL,582891219,Verilog,Modified_SPI_Protocol_Using_Verilog_HDL,22672,0,2022-12-28 06:42:04+00:00,[],None
168,https://github.com/sigdox/mpw7-analog.git,2022-12-27 02:42:29+00:00,,0,sigdox/mpw7-analog,582495704,Verilog,mpw7-analog,115,0,2022-12-27 02:42:36+00:00,[],https://api.github.com/licenses/apache-2.0
169,https://github.com/evd18i021/odd_even_parallel_complete.git,2022-12-30 10:33:00+00:00,32-point proposed Integer DCT using parallel architecture ,0,evd18i021/odd_even_parallel_complete,583616423,Verilog,odd_even_parallel_complete,2233,0,2022-12-30 10:33:13+00:00,[],https://api.github.com/licenses/apache-2.0
170,https://github.com/QUATTROSAYISALTASARIM/32-bit-carry-look-ahead-adder-.git,2022-12-30 12:35:22+00:00,32-bit toplayıcı algoritması,0,QUATTROSAYISALTASARIM/32-bit-carry-look-ahead-adder-,583644969,Verilog,32-bit-carry-look-ahead-adder-,75,0,2022-12-30 12:37:37+00:00,[],None
171,https://github.com/Onkar-Joshi/SPI-Controller-using-Verilog.git,2022-12-29 04:54:19+00:00,,0,Onkar-Joshi/SPI-Controller-using-Verilog,583209039,Verilog,SPI-Controller-using-Verilog,9,0,2022-12-29 04:54:52+00:00,[],None
172,https://github.com/namu00/Verilog_Lecture.git,2022-12-24 00:22:17+00:00,,0,namu00/Verilog_Lecture,581686593,Verilog,Verilog_Lecture,303,0,2022-12-24 00:50:27+00:00,[],None
173,https://github.com/JerryGJX/RISCV_CPU_for_OJ.git,2022-12-26 04:35:27+00:00,,0,JerryGJX/RISCV_CPU_for_OJ,582205248,Verilog,RISCV_CPU_for_OJ,38,0,2022-12-26 04:37:26+00:00,[],None
174,https://github.com/Farheen-github/FOIL.git,2022-12-26 23:43:04+00:00,A novel Approximate Floating Point Multiplication technique with stable accuracy curve over different number of bits in the operands. ,0,Farheen-github/FOIL,582467582,Verilog,FOIL,1673,0,2022-12-26 23:54:42+00:00,[],None
175,https://github.com/kavidey/Hmmm-Silicon.git,2022-12-26 11:09:28+00:00,Silicon implementation of the Hmmm processor,0,kavidey/Hmmm-Silicon,582293431,Verilog,Hmmm-Silicon,478056,0,2022-12-26 11:09:46+00:00,[],https://api.github.com/licenses/apache-2.0
176,https://github.com/saicharan0112/config-results.git,2022-12-25 18:15:39+00:00,,0,saicharan0112/config-results,582112077,Verilog,config-results,13965,0,2022-12-25 18:25:08+00:00,[],https://api.github.com/licenses/gpl-2.0
177,https://github.com/melika-aghajanian/cpu_mips.git,2022-12-25 12:08:42+00:00,CPU design with Logisim and Verilog,0,melika-aghajanian/cpu_mips,582037628,Verilog,cpu_mips,196,0,2023-06-01 19:17:53+00:00,[],None
178,https://github.com/GuruprasadNK/Verilog-Projects.git,2022-12-27 15:53:45+00:00,,0,GuruprasadNK/Verilog-Projects,582695076,Verilog,Verilog-Projects,59,0,2022-12-30 13:21:37+00:00,[],None
179,https://github.com/btao732/verilog.git,2022-12-27 02:58:08+00:00,exercises with verilog,0,btao732/verilog,582498499,Verilog,verilog,28,0,2022-12-27 03:20:23+00:00,[],None
180,https://github.com/evd18i021/wave1d_con_ext2.git,2022-12-24 11:59:07+00:00,Conventional convolution based folded DWT using Recurse 35 and 32-bit Wallace tree multiplier,0,evd18i021/wave1d_con_ext2,581804913,Verilog,wave1d_con_ext2,3370,0,2022-12-24 11:59:23+00:00,[],https://api.github.com/licenses/apache-2.0
181,https://github.com/akhilnev/DIGITAL-STOPWATCH.git,2022-12-24 06:05:44+00:00,"• Time Period of Clock is adjusted using down counters to match standard clock frequency. Stopwatch can Count up, Reset, Store multiple lap times using Register Files and dual display between run time and lapped time on the FPGA Board. ",0,akhilnev/DIGITAL-STOPWATCH,581737165,Verilog,DIGITAL-STOPWATCH,18652,0,2023-11-25 20:17:40+00:00,[],None
182,https://github.com/ucsb-ece154a/verilog_best_practices_example.git,2022-12-14 22:14:14+00:00,Verilog Best Practices Example,0,ucsb-ece154a/verilog_best_practices_example,578366397,Verilog,verilog_best_practices_example,4,0,2024-01-18 07:12:36+00:00,[],None
183,https://github.com/ymentawy/Verilog-Calculator-Basys-3-.git,2022-12-25 19:10:09+00:00,It is a calculator using Verilog HDL to be used on a FPGA(Basys 3),0,ymentawy/Verilog-Calculator-Basys-3-,582121886,Verilog,Verilog-Calculator-Basys-3-,9,0,2022-12-25 19:12:39+00:00,[],None
184,https://github.com/iggy14750/learn-verilog.git,2022-12-27 18:24:54+00:00,A collection of some Verilog code I write while learning the language.,0,iggy14750/learn-verilog,582739192,Verilog,learn-verilog,12,0,2022-12-27 18:36:56+00:00,[],None
185,https://github.com/t-sasatani/xls_workshop_tapeout_test_all_branch.git,2022-12-16 03:18:43+00:00,,2,t-sasatani/xls_workshop_tapeout_test_all_branch,578854960,Verilog,xls_workshop_tapeout_test_all_branch,11158,0,2022-12-16 03:19:01+00:00,[],https://api.github.com/licenses/apache-2.0
186,https://github.com/git-shiv/Verilog_projects.git,2022-12-15 14:11:56+00:00,,0,git-shiv/Verilog_projects,578631725,Verilog,Verilog_projects,10,0,2022-12-24 21:18:42+00:00,[],None
187,https://github.com/2020661-cpe/-HDL-.git,2022-12-15 01:53:31+00:00,,0,2020661-cpe/-HDL-,578413043,Verilog,-HDL-,4,0,2022-12-15 01:55:07+00:00,[],None
188,https://github.com/BrandonYU34/Simple-ALU-32bits.git,2022-12-15 08:35:20+00:00,,0,BrandonYU34/Simple-ALU-32bits,578514239,Verilog,Simple-ALU-32bits,11,0,2023-01-31 22:08:43+00:00,[],None
189,https://github.com/Y006/test.git,2022-12-13 11:34:37+00:00,尝试在VScode中使用Git并且上传内容到GitHub,0,Y006/test,577723774,Verilog,test,4,0,2022-12-13 14:00:57+00:00,[],None
190,https://github.com/StreliziaV/MIPS_CPU.git,2022-12-17 04:44:57+00:00,,0,StreliziaV/MIPS_CPU,579257614,Verilog,MIPS_CPU,475,0,2022-12-17 04:46:58+00:00,[],None
191,https://github.com/xodnde3123/DigitalSystemDesign.git,2022-12-18 11:14:48+00:00,,0,xodnde3123/DigitalSystemDesign,579635450,Verilog,DigitalSystemDesign,64105,0,2022-12-18 11:17:59+00:00,[],None
192,https://github.com/srishtygandhi-kgp/kgp_mini_RISC.git,2022-12-19 10:59:15+00:00,The repository contains source code for a 32-bit single-cycle RISC processor based on a simple instruction set (KGP-RISC). An assembler is also provided to assemble the source code into machine code.,0,srishtygandhi-kgp/kgp_mini_RISC,579952567,Verilog,kgp_mini_RISC,281,0,2022-12-20 10:12:44+00:00,[],None
193,https://github.com/kentegrate/test_openlane.git,2022-12-19 02:17:54+00:00,,0,kentegrate/test_openlane,579820270,Verilog,test_openlane,2344,0,2022-12-19 02:18:12+00:00,[],https://api.github.com/licenses/apache-2.0
194,https://github.com/andylithia/Project-Yatsuhashi-Chip2.git,2022-12-18 01:36:51+00:00,,0,andylithia/Project-Yatsuhashi-Chip2,579529800,Verilog,Project-Yatsuhashi-Chip2,276246,0,2022-12-18 01:36:58+00:00,[],https://api.github.com/licenses/apache-2.0
195,https://github.com/ekincanpolat/bil265_grup23_proje.git,2022-12-18 19:29:02+00:00,Tutku Ekin Canpolat- Mustafa Ege Atay -Can Hazırol,0,ekincanpolat/bil265_grup23_proje,579746770,Verilog,bil265_grup23_proje,1033,0,2023-07-28 07:46:07+00:00,[],None
196,https://github.com/somamangai/Verilog.git,2022-12-15 05:19:28+00:00,All about basics of digital electronics and RTL,0,somamangai/Verilog,578458536,Verilog,Verilog,28,0,2023-01-12 07:32:54+00:00,[],None
197,https://github.com/reem010/Verilog-Program.git,2022-12-29 14:44:58+00:00,,0,reem010/Verilog-Program,583359567,Verilog,Verilog-Program,59,0,2023-06-13 18:31:23+00:00,[],https://api.github.com/licenses/apache-2.0
198,https://github.com/Sud-ana/user_proj_mul32.git,2022-12-30 11:45:34+00:00,,0,Sud-ana/user_proj_mul32,583633370,Verilog,user_proj_mul32,2204,0,2022-12-30 11:45:48+00:00,[],https://api.github.com/licenses/apache-2.0
199,https://github.com/Alexey-Kazartsev/Verilog.git,2022-12-29 18:41:01+00:00,,0,Alexey-Kazartsev/Verilog,583426649,Verilog,Verilog,3,0,2022-12-29 18:42:15+00:00,[],None
200,https://github.com/Super-EDA/AQFP-Benchmark.git,2022-12-21 05:54:03+00:00,Benchmark of AQFP circuits,0,Super-EDA/AQFP-Benchmark,580662626,Verilog,AQFP-Benchmark,608,0,2022-12-21 06:04:36+00:00,[],https://api.github.com/licenses/mit
201,https://github.com/Dany2002-hub/SPI_Communication_Protocol_in_Verilog.git,2022-12-20 19:42:00+00:00,,0,Dany2002-hub/SPI_Communication_Protocol_in_Verilog,580529125,Verilog,SPI_Communication_Protocol_in_Verilog,98,0,2023-01-04 09:27:06+00:00,[],None
202,https://github.com/urielcho/decrypt_aes128.git,2022-12-21 19:11:55+00:00,,0,urielcho/decrypt_aes128,580910705,Verilog,decrypt_aes128,117937,0,2022-12-22 15:52:35+00:00,[],https://api.github.com/licenses/apache-2.0
203,https://github.com/Adiboy3112/chStone_HPC.git,2022-12-22 12:38:29+00:00,,0,Adiboy3112/chStone_HPC,581160254,Verilog,chStone_HPC,90015,0,2022-12-23 21:51:06+00:00,[],None
204,https://github.com/Chetan493401/32bitmp.git,2022-12-24 15:27:40+00:00,,0,Chetan493401/32bitmp,581850976,Verilog,32bitmp,2216,0,2022-12-24 15:27:53+00:00,[],https://api.github.com/licenses/apache-2.0
205,https://github.com/GANAPATHYSK007/100_Days_of_Verilog.git,2022-12-25 18:06:57+00:00,,0,GANAPATHYSK007/100_Days_of_Verilog,582110532,Verilog,100_Days_of_Verilog,91,0,2022-12-25 18:10:22+00:00,[],None
206,https://github.com/Asaduzzaman-Seam/3-Cycle-Nonpipelined-Harvard-Structure-Microcontroller.git,2022-12-26 04:26:30+00:00,,0,Asaduzzaman-Seam/3-Cycle-Nonpipelined-Harvard-Structure-Microcontroller,582203887,Verilog,3-Cycle-Nonpipelined-Harvard-Structure-Microcontroller,15686,0,2023-02-07 06:16:42+00:00,[],None
207,https://github.com/zhongzero/RISCV-CPU-forcommit.git,2022-12-26 04:58:16+00:00,,0,zhongzero/RISCV-CPU-forcommit,582209282,Verilog,RISCV-CPU-forcommit,1729,0,2022-12-26 05:03:15+00:00,[],None
208,https://github.com/yhkwon6658/VGA-DEMO.git,2022-12-25 07:53:33+00:00,Demo : How to use DE2's VGA,0,yhkwon6658/VGA-DEMO,581993109,Verilog,VGA-DEMO,41,0,2022-12-25 07:59:39+00:00,[],https://api.github.com/licenses/mit
209,https://github.com/yhkwon6658/UART-DEMO.git,2022-12-25 08:06:11+00:00,Demo code : How to use DE2's Uart,0,yhkwon6658/UART-DEMO,581995158,Verilog,UART-DEMO,6,0,2022-12-25 08:15:14+00:00,[],https://api.github.com/licenses/mit
210,https://github.com/klosskopf/worstcomponents.git,2022-12-30 21:33:15+00:00,Every one of these is probably the single worst wishbone peripheral out there,0,klosskopf/worstcomponents,583770939,Verilog,worstcomponents,26,0,2022-12-30 21:37:02+00:00,[],None
211,https://github.com/songshuqi/FIFO.git,2022-12-14 03:59:02+00:00,,0,songshuqi/FIFO,578018741,Verilog,FIFO,31,0,2022-12-14 05:29:09+00:00,[],https://api.github.com/licenses/gpl-3.0
212,https://github.com/PedroRonzani18/Sistemas-Digitais-Projects.git,2022-12-13 23:11:21+00:00,"Projects developed in ""Digital Sistems"" Class with Verilog on Quartus",0,PedroRonzani18/Sistemas-Digitais-Projects,577956533,Verilog,Sistemas-Digitais-Projects,5675,0,2022-12-19 23:00:38+00:00,[],https://api.github.com/licenses/mit
213,https://github.com/z6zhai1012/AMBA5.git,2022-12-14 02:07:34+00:00,,0,z6zhai1012/AMBA5,577993855,Verilog,AMBA5,3797,0,2022-12-14 06:16:20+00:00,[],None
214,https://github.com/MiSTer-devel/Arcade-MrJong_MiSTer.git,2022-12-22 10:36:04+00:00,Mr.Jong for MiSTer FPGA,3,MiSTer-devel/Arcade-MrJong_MiSTer,581123759,Verilog,Arcade-MrJong_MiSTer,1158,0,2023-01-02 17:10:15+00:00,[],https://api.github.com/licenses/gpl-2.0
215,https://github.com/stamcenter/post-quantum.git,2022-12-26 19:50:00+00:00,,0,stamcenter/post-quantum,582426226,Verilog,post-quantum,75,0,2022-12-26 19:56:35+00:00,[],None
216,https://github.com/933yee/Verilog_Tetris.git,2022-12-27 08:10:31+00:00,,0,933yee/Verilog_Tetris,582563630,Verilog,Verilog_Tetris,7315,0,2023-02-26 06:58:05+00:00,[],None
217,https://github.com/ellen-wood/wrapped_rgb2_mixer.git,2022-12-27 13:16:45+00:00,,0,ellen-wood/wrapped_rgb2_mixer,582647107,Verilog,wrapped_rgb2_mixer,3087,0,2022-12-27 13:16:51+00:00,[],https://api.github.com/licenses/apache-2.0
218,https://github.com/X3nonC0der/Architure-APB-BUS.git,2022-12-27 13:03:33+00:00,,0,X3nonC0der/Architure-APB-BUS,582643337,Verilog,Architure-APB-BUS,210,0,2023-01-05 21:37:58+00:00,[],None
219,https://github.com/mdagois/tiny_user_project_gbcart.git,2022-12-23 08:11:08+00:00,,1,mdagois/tiny_user_project_gbcart,581449930,Verilog,tiny_user_project_gbcart,2898,0,2023-01-31 22:32:44+00:00,[],https://api.github.com/licenses/apache-2.0
220,https://github.com/urielcho/gf180_vs_sky130.git,2022-12-23 19:15:41+00:00,,0,urielcho/gf180_vs_sky130,581630249,Verilog,gf180_vs_sky130,150916,0,2022-12-23 19:30:44+00:00,[],https://api.github.com/licenses/apache-2.0
221,https://github.com/Jams1001/IE0424.git,2022-12-29 04:02:53+00:00,Laboratorio de Circuitos Digitales I,0,Jams1001/IE0424,583199792,Verilog,IE0424,622,0,2023-05-05 13:00:15+00:00,[],None
222,https://github.com/ZVasilii/VerilogStudying.git,2022-12-27 22:58:31+00:00,Some studying projects using Verilog HDL and FPGA Altera Cyclone IV,0,ZVasilii/VerilogStudying,582802733,Verilog,VerilogStudying,3181,0,2023-02-17 16:43:21+00:00,[],https://api.github.com/licenses/mit
223,https://github.com/dinuja9/Simon-Says.git,2022-12-16 16:47:06+00:00,,0,dinuja9/Simon-Says,579097273,Verilog,Simon-Says,6108,0,2022-12-16 16:52:53+00:00,[],None
224,https://github.com/keremcanbali/caravel.git,2022-12-16 11:06:32+00:00,,0,keremcanbali/caravel,578980899,Verilog,caravel,2210,0,2022-12-16 11:06:48+00:00,[],https://api.github.com/licenses/apache-2.0
225,https://github.com/visionvlsi/uart_2022_batch.git,2022-12-16 14:31:52+00:00,,0,visionvlsi/uart_2022_batch,579049965,Verilog,uart_2022_batch,2194,0,2022-12-17 09:45:54+00:00,[],None
226,https://github.com/Adhamfm/ArchProject.git,2022-12-26 21:07:23+00:00,,0,Adhamfm/ArchProject,582441766,Verilog,ArchProject,7,0,2022-12-26 21:10:34+00:00,[],None
227,https://github.com/yspkm/fpga_systolic_array_convolution.git,2022-12-26 06:03:59+00:00,,0,yspkm/fpga_systolic_array_convolution,582221604,Verilog,fpga_systolic_array_convolution,8223,0,2023-01-16 09:38:12+00:00,[],https://api.github.com/licenses/gpl-3.0
228,https://github.com/ellen-wood/wrapped_rgb_mixer.git,2022-12-27 12:45:57+00:00,,0,ellen-wood/wrapped_rgb_mixer,582638278,Verilog,wrapped_rgb_mixer,1415,0,2022-12-27 12:49:30+00:00,[],https://api.github.com/licenses/apache-2.0
229,https://github.com/dlgkdrb2/verilog_clock.git,2022-12-28 06:43:02+00:00,,0,dlgkdrb2/verilog_clock,582892374,Verilog,verilog_clock,3733,0,2022-12-28 06:46:27+00:00,[],None
230,https://github.com/biu9/RISCV-CPU.git,2022-12-23 08:35:43+00:00,浙江大学计算机组成与设计实验2022,0,biu9/RISCV-CPU,581456276,Verilog,RISCV-CPU,6,0,2023-01-19 16:18:04+00:00,"['riscv', 'verilog']",None
231,https://github.com/ToniLommez/Arquitetura_de_Computadores_1.git,2022-12-24 20:38:05+00:00,Repositorio de exercicios resolvidos da materia de Arquitetura de Computadores 1,0,ToniLommez/Arquitetura_de_Computadores_1,581910339,Verilog,Arquitetura_de_Computadores_1,7030,0,2022-12-24 20:43:18+00:00,[],None
232,https://github.com/sumanthnimmakayala/iir2_1multi_ext.git,2022-12-24 20:01:04+00:00,,0,sumanthnimmakayala/iir2_1multi_ext,581904357,Verilog,iir2_1multi_ext,3379,0,2022-12-24 20:01:20+00:00,[],https://api.github.com/licenses/apache-2.0
233,https://github.com/Jason-0902/logical-design-experiment.git,2022-12-23 17:45:17+00:00,,1,Jason-0902/logical-design-experiment,581608000,Verilog,logical-design-experiment,5,0,2022-12-23 17:48:06+00:00,[],None
234,https://github.com/ellen-wood/analog_projects.git,2022-12-21 12:00:42+00:00,,0,ellen-wood/analog_projects,580769126,Verilog,analog_projects,463,0,2022-12-24 08:09:09+00:00,[],None
235,https://github.com/elisong2/ece385tetris.git,2022-12-29 04:02:46+00:00,,0,elisong2/ece385tetris,583199766,Verilog,ece385tetris,25906,0,2022-12-29 04:10:35+00:00,[],None
236,https://github.com/chithambaramoorthii/RRAM_IMC_MPW8.git,2022-12-29 03:03:42+00:00,"The project includes RRAM In Memory Computing Accelerator , designed by our team at IIT Delhi..This is the updated version of our previous submission.",0,chithambaramoorthii/RRAM_IMC_MPW8,583189258,Verilog,RRAM_IMC_MPW8,164612,0,2022-12-29 03:03:59+00:00,[],https://api.github.com/licenses/apache-2.0
237,https://github.com/udaybanala19/VEILOG-RTL-CODING.git,2022-12-16 04:46:34+00:00,,0,udaybanala19/VEILOG-RTL-CODING,578873837,Verilog,VEILOG-RTL-CODING,4295,0,2023-09-13 11:37:10+00:00,[],None
238,https://github.com/phvictorr/alu.git,2022-12-15 19:14:38+00:00,ALU (Arithmetic Logic Unit) para soma e subtração 8 bits,0,phvictorr/alu,578739920,Verilog,alu,5,0,2022-12-15 19:15:38+00:00,[],None
239,https://github.com/gabizon103/nes.git,2022-12-20 01:11:22+00:00,trying to make an nes on fpga,0,gabizon103/nes,580204376,Verilog,nes,3,0,2023-02-20 23:29:31+00:00,[],None
240,https://github.com/suysh-msra/iiitb_ptvm_caravel.git,2022-12-13 11:54:24+00:00,,0,suysh-msra/iiitb_ptvm_caravel,577730548,Verilog,iiitb_ptvm_caravel,2216,0,2022-12-13 11:54:41+00:00,[],https://api.github.com/licenses/apache-2.0
241,https://github.com/xobs/caravel-8051.git,2022-12-13 08:24:02+00:00,An 8051 core inside Caravel,0,xobs/caravel-8051,577656426,Verilog,caravel-8051,2210,0,2022-12-13 08:24:16+00:00,[],https://api.github.com/licenses/apache-2.0
242,https://github.com/delidoktor/caravel_alu_projectt.git,2022-12-14 15:42:49+00:00,,0,delidoktor/caravel_alu_projectt,578244574,Verilog,caravel_alu_projectt,2210,0,2022-12-24 08:43:10+00:00,[],https://api.github.com/licenses/apache-2.0
243,https://github.com/akeboy123/exerice1.git,2022-12-20 14:48:28+00:00,exerice1 sv,0,akeboy123/exerice1,580432306,Verilog,exerice1,7,0,2022-12-20 14:52:54+00:00,[],None
244,https://github.com/1820252-CPE/Bacanto_HDL_Experiment.git,2022-12-19 07:42:36+00:00,,0,1820252-CPE/Bacanto_HDL_Experiment,579891694,Verilog,Bacanto_HDL_Experiment,2635,0,2022-12-19 07:57:04+00:00,[],None
245,https://github.com/2020049-cpe/Verilog-Lab-Experiments.git,2022-12-14 12:31:10+00:00,,0,2020049-cpe/Verilog-Lab-Experiments,578171871,Verilog,Verilog-Lab-Experiments,199,0,2022-12-14 12:32:04+00:00,[],None
246,https://github.com/Qandle/template_verlilog.git,2022-12-13 22:23:37+00:00,,1,Qandle/template_verlilog,577945745,Verilog,template_verlilog,2,0,2022-12-14 01:33:36+00:00,[],None
247,https://github.com/Elif-Yildiz/Verilog-64-bit-Adder-Project.git,2022-12-18 18:34:30+00:00,,0,Elif-Yildiz/Verilog-64-bit-Adder-Project,579735487,Verilog,Verilog-64-bit-Adder-Project,430,0,2023-03-21 07:21:54+00:00,[],None
248,https://github.com/pbucukoglu/Bil264-265-Proje.git,2022-12-18 19:52:38+00:00,,0,pbucukoglu/Bil264-265-Proje,579751814,Verilog,Bil264-265-Proje,292,0,2023-08-29 08:44:00+00:00,[],None
249,https://github.com/tobiaj10/CPU.git,2022-12-23 22:08:53+00:00,"Designed a 32-bit 5 cycle pipelined CPU that can process and execute MIPS assembly instructions. The 5 cycles are: Instruction Fetch, Instruction Decode, Execute, Memory and, Write-Back",0,tobiaj10/CPU,581665558,Verilog,CPU,6,0,2022-12-24 02:24:02+00:00,[],None
250,https://github.com/sumanthnimmakayala/dct8_2d.git,2022-12-24 17:47:31+00:00,,0,sumanthnimmakayala/dct8_2d,581880526,Verilog,dct8_2d,3382,0,2023-09-13 11:43:23+00:00,[],https://api.github.com/licenses/apache-2.0
251,https://github.com/DouerGan/HDLbits_Code.git,2022-12-21 16:40:40+00:00,Verilog practice code repository for HDLbits,0,DouerGan/HDLbits_Code,580864955,Verilog,HDLbits_Code,4,0,2022-12-21 16:41:25+00:00,[],None
252,https://github.com/muhammedTarek001/LFSR-block-with-input.git,2022-12-22 12:40:11+00:00,,0,muhammedTarek001/LFSR-block-with-input,581160833,Verilog,LFSR-block-with-input,3,0,2022-12-22 12:40:41+00:00,[],None
253,https://github.com/SazinSamin/My_Private.git,2022-12-22 12:34:32+00:00,,0,SazinSamin/My_Private,581159031,Verilog,My_Private,636,0,2023-01-21 07:37:49+00:00,[],None
254,https://github.com/EliezerSpace/Bilibili.git,2022-12-22 07:14:12+00:00,分享B站视频中出现的代码,0,EliezerSpace/Bilibili,581063788,Verilog,Bilibili,20,0,2023-02-01 04:17:16+00:00,[],None
255,https://github.com/renato130/polish_notation.git,2022-12-22 09:01:59+00:00,,0,renato130/polish_notation,581094463,Verilog,polish_notation,4,0,2022-12-22 09:58:26+00:00,[],None
256,https://github.com/ilvon/verilog_Function-Generator.git,2022-12-16 09:58:18+00:00,,0,ilvon/verilog_Function-Generator,578959719,Verilog,verilog_Function-Generator,21,0,2023-01-20 11:13:33+00:00,[],None
257,https://github.com/hakan-emre-gedik/single_cycle_computer.git,2022-12-17 22:48:07+00:00,Single cycle computer and instruction set written in Verilog,0,hakan-emre-gedik/single_cycle_computer,579503746,Verilog,single_cycle_computer,16587,0,2022-12-17 22:48:21+00:00,[],None
258,https://github.com/SanthoshVanka/Traffic-Light-Controller-Design-using-Verilog.git,2022-12-29 10:33:34+00:00,,0,SanthoshVanka/Traffic-Light-Controller-Design-using-Verilog,583289821,Verilog,Traffic-Light-Controller-Design-using-Verilog,133,0,2022-12-30 04:38:33+00:00,[],None
259,https://github.com/iamrani/Egg_Timer.git,2022-12-29 20:44:42+00:00,,0,iamrani/Egg_Timer,583455047,Verilog,Egg_Timer,22,0,2022-12-29 21:01:17+00:00,[],None
260,https://github.com/evd18i021/wave2d_53_6blocks_ext.git,2022-12-30 06:10:24+00:00,"13X13 proposed N-parallel (5,3) lifting based 2D DWT",0,evd18i021/wave2d_53_6blocks_ext,583555999,Verilog,wave2d_53_6blocks_ext,3382,0,2022-12-30 06:10:40+00:00,[],https://api.github.com/licenses/apache-2.0
261,https://github.com/middletucker/EECE-235.git,2022-12-30 08:08:25+00:00,,0,middletucker/EECE-235,583582086,Verilog,EECE-235,1999,0,2022-12-30 08:11:23+00:00,[],None
262,https://github.com/Mehul-Kumar-Sahoo/Vending_machine_verilog.git,2022-12-24 05:54:58+00:00,,0,Mehul-Kumar-Sahoo/Vending_machine_verilog,581735299,Verilog,Vending_machine_verilog,3,0,2022-12-24 06:04:34+00:00,[],None
263,https://github.com/Ho97/Floating-MAC-in-verilog.git,2022-12-23 13:45:45+00:00,Floating mac from half precision inputs to single precision output,0,Ho97/Floating-MAC-in-verilog,581540745,Verilog,Floating-MAC-in-verilog,72,0,2022-12-23 15:26:44+00:00,[],None
264,https://github.com/p-ram/HDLbits.git,2022-12-24 01:34:13+00:00,hdlbits solutions,0,p-ram/HDLbits,581696568,Verilog,HDLbits,67,0,2023-01-13 07:01:10+00:00,"['hdl', 'hdlbits', 'verilog', 'hdlbitssolution', 'verilog-answers']",None
265,https://github.com/sumanthnimmakayala/dct4_par_2d.git,2022-12-24 16:04:50+00:00,,0,sumanthnimmakayala/dct4_par_2d,581859027,Verilog,dct4_par_2d,3376,0,2022-12-24 16:05:06+00:00,[],https://api.github.com/licenses/apache-2.0
266,https://github.com/NadeemGulam/VLSI.git,2022-12-24 16:22:17+00:00,VLSI LAB,0,NadeemGulam/VLSI,581862755,Verilog,VLSI,13772,0,2022-12-24 18:53:14+00:00,[],None
267,https://github.com/suprsize/cs151-cpu.git,2022-12-23 18:36:39+00:00,,0,suprsize/cs151-cpu,581621133,Verilog,cs151-cpu,44462,0,2023-08-17 02:55:19+00:00,[],None
268,https://github.com/99june18/-.git,2022-12-26 01:26:01+00:00,,0,99june18/-,582175810,Verilog,-,1370,0,2022-12-26 01:37:45+00:00,[],None
269,https://github.com/sumanthnimmakayala/iir2_multi_delay.git,2022-12-24 20:50:08+00:00,,0,sumanthnimmakayala/iir2_multi_delay,581912232,Verilog,iir2_multi_delay,2203,0,2022-12-24 20:50:24+00:00,[],https://api.github.com/licenses/apache-2.0
270,https://github.com/relyt871/RISCV-CPU-on-oj.git,2022-12-26 06:30:16+00:00,,0,relyt871/RISCV-CPU-on-oj,582227243,Verilog,RISCV-CPU-on-oj,2905,0,2022-12-26 06:46:58+00:00,[],None
271,https://github.com/Chetan493401/mips32.git,2022-12-25 12:16:09+00:00,,0,Chetan493401/mips32,582039078,Verilog,mips32,51036,0,2022-12-25 12:16:25+00:00,[],https://api.github.com/licenses/apache-2.0
272,https://github.com/visionvlsi/git_test_add.git,2022-12-25 12:00:10+00:00,,0,visionvlsi/git_test_add,582035982,Verilog,git_test_add,0,0,2022-12-25 14:11:59+00:00,[],None
273,https://github.com/koust6u/FPGA-Door-lock.git,2022-12-29 00:02:16+00:00,project of FPGA operation,0,koust6u/FPGA-Door-lock,583157593,Verilog,FPGA-Door-lock,10,0,2022-12-29 00:06:53+00:00,[],None
274,https://github.com/sarthak-nik/COA-Lab-2022.git,2022-12-22 14:51:20+00:00,This repository contains assignments from the Computer Organization & Architecture course CS39001,0,sarthak-nik/COA-Lab-2022,581204845,Verilog,COA-Lab-2022,931,0,2022-12-22 17:23:33+00:00,[],None
275,https://github.com/2020547-cpe/Linatoc_HDL.git,2022-12-23 00:14:50+00:00,,0,2020547-cpe/Linatoc_HDL,581353064,Verilog,Linatoc_HDL,939,0,2022-12-23 00:15:47+00:00,[],None
276,https://github.com/jakel2014/ECE385FinalProjectFA2022.git,2022-12-21 22:32:35+00:00,Final Project for ECE 385 for Fall 2022 Semester,1,jakel2014/ECE385FinalProjectFA2022,580960060,Verilog,ECE385FinalProjectFA2022,39007,0,2022-12-21 22:36:08+00:00,[],None
277,https://github.com/Taurus052/E906_FPGA_1.git,2022-12-23 06:21:29+00:00,,0,Taurus052/E906_FPGA_1,581422396,Verilog,E906_FPGA_1,332897,0,2023-07-09 04:07:34+00:00,[],None
278,https://github.com/Celve/cpu-test.git,2022-12-26 07:29:40+00:00,,0,Celve/cpu-test,582240804,Verilog,cpu-test,37,0,2022-12-26 07:29:47+00:00,[],None
279,https://github.com/KashishPrakash/SetAssociativeCache.git,2022-12-23 13:49:26+00:00,,0,KashishPrakash/SetAssociativeCache,581541806,Verilog,SetAssociativeCache,1069,0,2022-12-23 13:49:55+00:00,[],None
280,https://github.com/lj06872/CSJourney_DigitalLogic.git,2022-12-14 01:03:06+00:00,,0,lj06872/CSJourney_DigitalLogic,577980070,Verilog,CSJourney_DigitalLogic,2,0,2023-05-20 15:53:41+00:00,[],None
281,https://github.com/Priyanshu5437/iiitb_pipo_mpw8.git,2022-12-14 06:14:46+00:00,,0,Priyanshu5437/iiitb_pipo_mpw8,578051013,Verilog,iiitb_pipo_mpw8,51027,0,2022-12-14 06:15:02+00:00,[],https://api.github.com/licenses/apache-2.0
282,https://github.com/Ohgram/sync_fifio_counter.git,2022-12-18 12:16:16+00:00,,0,Ohgram/sync_fifio_counter,579649534,Verilog,sync_fifio_counter,5,0,2022-12-18 12:16:24+00:00,[],None
283,https://github.com/HDL-Proj/Car-Parking-System.git,2022-12-19 01:56:53+00:00,,0,HDL-Proj/Car-Parking-System,579816411,Verilog,Car-Parking-System,110,0,2022-12-19 03:09:50+00:00,[],None
284,https://github.com/coolldude/PipelinedProcessor.git,2022-12-21 17:40:47+00:00,,0,coolldude/PipelinedProcessor,580884080,Verilog,PipelinedProcessor,184,0,2022-12-21 17:44:55+00:00,[],None
285,https://github.com/LayzRay/Casework.git,2022-12-16 21:29:35+00:00,"Кейс-задание по дисциплине 2-го курса ИВТ ""Интерфейсы вычислительных систем"" по аппаратной реализации контроллера UART и программной реализации приёма данных, а также их дальнейшей раскодировки по Хэммингу ",0,LayzRay/Casework,579178647,Verilog,Casework,752,0,2023-07-06 01:11:49+00:00,[],None
286,https://github.com/ahmedelsayed968/Arch_Project.git,2022-12-19 16:45:25+00:00,,0,ahmedelsayed968/Arch_Project,580072956,Verilog,Arch_Project,679,0,2023-01-06 13:17:00+00:00,[],None
287,https://github.com/ninQ1703/Set-Associative-Cache.git,2022-12-22 06:51:46+00:00,,0,ninQ1703/Set-Associative-Cache,581057951,Verilog,Set-Associative-Cache,1069,0,2022-12-22 07:02:11+00:00,[],None
288,https://github.com/sivaprashanth/VHDL.git,2022-12-21 21:08:11+00:00,,0,sivaprashanth/VHDL,580941485,Verilog,VHDL,70904,0,2023-01-01 02:12:07+00:00,[],None
289,https://github.com/Ananthvasudev/Testing.git,2022-12-13 04:23:24+00:00,Testing,0,Ananthvasudev/Testing,577590019,Verilog,Testing,1,0,2023-01-03 10:20:27+00:00,[],None
290,https://github.com/DuaeSameen/DLD-Project.git,2022-12-14 02:17:53+00:00,,0,DuaeSameen/DLD-Project,577996133,Verilog,DLD-Project,19,0,2022-12-14 02:19:55+00:00,[],None
291,https://github.com/EhabMostafaa/CLOCK-DIVIDER.git,2022-12-14 21:41:25+00:00,,0,EhabMostafaa/CLOCK-DIVIDER,578358127,Verilog,CLOCK-DIVIDER,2,0,2022-12-14 21:42:21+00:00,[],None
292,https://github.com/sinagh92/MIPS-processor.git,2022-12-13 20:41:08+00:00,This project is a Verilog implementation of pipelined MIPS processor with window-based register file.,0,sinagh92/MIPS-processor,577919270,Verilog,MIPS-processor,565,0,2022-12-13 20:43:06+00:00,[],None
293,https://github.com/CaglarDeniz/fpga_audio_visualizer.git,2022-12-14 11:54:13+00:00,A hardware based audio visualizer written in SystemVerilog for the DE10-Lite FPGA board,0,CaglarDeniz/fpga_audio_visualizer,578158776,Verilog,fpga_audio_visualizer,25720,0,2022-12-14 11:56:09+00:00,[],https://api.github.com/licenses/gpl-3.0
294,https://github.com/Nagarjun444/binary-to-gray-code.git,2022-12-14 17:09:10+00:00,binary to gray code coverter,0,Nagarjun444/binary-to-gray-code,578276476,Verilog,binary-to-gray-code,1,0,2022-12-14 17:11:49+00:00,[],None
295,https://github.com/tensionTaker/Digital-Clock-on-FPGA.git,2022-12-18 08:33:09+00:00,Digital Clock implemented on Xillinx Spartan 6 lx9 board using Verilog,0,tensionTaker/Digital-Clock-on-FPGA,579600537,Verilog,Digital-Clock-on-FPGA,2,0,2022-12-18 08:35:22+00:00,[],None
296,https://github.com/krisY999/i2c_e2prom_rw_master.git,2022-12-16 16:22:34+00:00,I2c驱动模块的RTL实现，并对eeprom进行读写测试,0,krisY999/i2c_e2prom_rw_master,579089200,Verilog,i2c_e2prom_rw_master,8,0,2022-12-16 16:26:20+00:00,[],None
297,https://github.com/kadomoto/tiny_user_project.git,2022-12-16 15:57:26+00:00,tiny_user_project のテスト,0,kadomoto/tiny_user_project,579080433,Verilog,tiny_user_project,3382,0,2022-12-16 15:57:44+00:00,[],https://api.github.com/licenses/apache-2.0
298,https://github.com/TreeOck/Y86-64-Processor.git,2022-12-13 13:32:25+00:00,Pipelined Y86-64 processor made as part of Introduction to Processor Architecture course,0,TreeOck/Y86-64-Processor,577767061,Verilog,Y86-64-Processor,867,0,2022-12-13 13:33:44+00:00,[],None
299,https://github.com/celine-hsieh/VLSI-Testing-LAB-1.git,2022-12-15 08:10:47+00:00,Fault Simulation | Parallel Fault Simulation | Deductive fault Simulation | Test Coverage,0,celine-hsieh/VLSI-Testing-LAB-1,578506396,Verilog,VLSI-Testing-LAB-1,10560,0,2022-12-15 08:18:51+00:00,"['atpg', 'controllability', 'deductive-fault-simulation', 'dft', 'fault-simulation', 'observability', 'parallel-testing', 'test-coverage']",None
300,https://github.com/ElTawab/System.git,2022-12-15 19:28:20+00:00,A system with microcontroller and UART implemented with Verilog files.,0,ElTawab/System,578744030,Verilog,System,840,0,2022-12-15 19:59:13+00:00,[],None
301,https://github.com/AsmaMohsin1507/traffic_controller.git,2022-12-22 05:41:40+00:00,,0,AsmaMohsin1507/traffic_controller,581040817,Verilog,traffic_controller,3499,0,2022-12-22 05:42:00+00:00,[],https://api.github.com/licenses/apache-2.0
302,https://github.com/pranavprabhu01/mk_SEARCH.git,2022-12-19 07:24:14+00:00,,0,pranavprabhu01/mk_SEARCH,579886724,Verilog,mk_SEARCH,102,0,2022-12-19 07:27:41+00:00,[],https://api.github.com/licenses/gpl-3.0
303,https://github.com/guianmon99/verilog_test.git,2022-12-18 02:50:58+00:00,,0,guianmon99/verilog_test,579540760,Verilog,verilog_test,1,0,2022-12-18 03:14:24+00:00,[],None
304,https://github.com/GalavilliRambabu/Half_adder.git,2022-12-17 10:00:53+00:00,,0,GalavilliRambabu/Half_adder,579322396,Verilog,Half_adder,0,0,2022-12-19 16:17:16+00:00,[],None
305,https://github.com/bsg-external/ee477-designs-module1.git,2022-12-20 22:11:19+00:00,,2,bsg-external/ee477-designs-module1,580569523,Verilog,ee477-designs-module1,22,0,2022-12-20 22:52:04+00:00,[],
306,https://github.com/mukullokhande99/MBA_module.git,2022-12-21 13:17:34+00:00,,0,mukullokhande99/MBA_module,580793730,Verilog,MBA_module,2206,0,2022-12-21 13:17:48+00:00,[],https://api.github.com/licenses/apache-2.0
307,https://github.com/GalavilliRambabu/mux2to4.git,2022-12-19 16:22:13+00:00,,0,GalavilliRambabu/mux2to4,580064797,Verilog,mux2to4,1,0,2022-12-19 16:23:22+00:00,[],None
308,https://github.com/sumanthnimmakayala/mcm_resource.git,2022-12-30 09:06:22+00:00,,0,sumanthnimmakayala/mcm_resource,583595375,Verilog,mcm_resource,3365,0,2022-12-30 09:06:38+00:00,[],https://api.github.com/licenses/apache-2.0
309,https://github.com/Nishad9302/SSD_MPW8.git,2022-12-30 14:37:11+00:00,,0,Nishad9302/SSD_MPW8,583676252,Verilog,SSD_MPW8,57713,0,2022-12-30 14:52:06+00:00,[],https://api.github.com/licenses/apache-2.0
310,https://github.com/xinsiyanhuo/-CPU.git,2022-12-30 07:04:08+00:00,个人代码,0,xinsiyanhuo/-CPU,583567590,Verilog,-CPU,105,0,2022-12-30 07:25:50+00:00,[],None
311,https://github.com/mohithharsha/fastmu_32x32.git,2022-12-30 09:54:08+00:00,,0,mohithharsha/fastmu_32x32,583607064,Verilog,fastmu_32x32,3367,0,2022-12-30 09:54:23+00:00,[],https://api.github.com/licenses/apache-2.0
312,https://github.com/Nit89/labs.git,2022-12-28 20:02:52+00:00,,0,Nit89/labs,583112928,Verilog,labs,11943,0,2023-01-03 17:35:12+00:00,[],None
313,https://github.com/klosskopf/worstsoc.git,2022-12-30 21:27:23+00:00,Probably the single worst wishbone SoC out there,0,klosskopf/worstsoc,583769864,Verilog,worstsoc,12,0,2022-12-30 22:21:23+00:00,[],None
314,https://github.com/fatheelamp/JK-flip-flop.git,2022-12-13 05:04:18+00:00,Verilog code and Testbench of JK Flip flop is here. all of you can download and simulate in gtkwave,0,fatheelamp/JK-flip-flop,577599258,Verilog,JK-flip-flop,1,0,2022-12-13 05:04:46+00:00,[],None
315,https://github.com/visionvlsi/fft_2022_batch.git,2022-12-14 00:52:41+00:00,,0,visionvlsi/fft_2022_batch,577977867,Verilog,fft_2022_batch,2744,0,2022-12-14 01:11:30+00:00,[],None
316,https://github.com/harshluffy1996/ECE-552-Intro-to-Comp-Arch.git,2022-12-14 07:10:59+00:00,,0,harshluffy1996/ECE-552-Intro-to-Comp-Arch,578066353,Verilog,ECE-552-Intro-to-Comp-Arch,29561,0,2022-12-14 22:45:56+00:00,[],https://api.github.com/licenses/gpl-3.0
317,https://github.com/panosrb/logic-design.git,2022-12-27 18:55:25+00:00,,0,panosrb/logic-design,582747459,Verilog,logic-design,2695,0,2022-12-27 19:12:37+00:00,[],None
318,https://github.com/sumanthnimmakayala/iir6_direct.git,2022-12-26 12:08:32+00:00,,0,sumanthnimmakayala/iir6_direct,582307651,Verilog,iir6_direct,3376,0,2022-12-26 12:08:48+00:00,[],https://api.github.com/licenses/apache-2.0
319,https://github.com/mattvenn/wrapped_channel.git,2022-12-28 12:24:41+00:00,Single GPS tracking channel wrapped for the Zero to ASIC course,0,mattvenn/wrapped_channel,582984343,Verilog,wrapped_channel,4919,0,2022-12-28 12:24:51+00:00,[],https://api.github.com/licenses/apache-2.0
320,https://github.com/zxc12523/computer_architecture_hw4.git,2022-12-28 13:59:24+00:00,,0,zxc12523/computer_architecture_hw4,583012027,Verilog,computer_architecture_hw4,18753,0,2023-04-06 12:47:01+00:00,[],None
321,https://github.com/KanishR1/fifo.git,2022-12-24 13:39:37+00:00,,0,KanishR1/fifo,581826764,Verilog,fifo,3,0,2022-12-24 13:41:03+00:00,[],None
322,https://github.com/Antonyesk601/MIPS-Processor.git,2022-12-24 09:02:38+00:00,,0,Antonyesk601/MIPS-Processor,581769547,Verilog,MIPS-Processor,1492,0,2022-12-24 09:06:22+00:00,[],None
323,https://github.com/FPGArtktic/FPGA_GPIO_EXPANDER.git,2022-12-27 17:45:23+00:00,,0,FPGArtktic/FPGA_GPIO_EXPANDER,582727820,Verilog,FPGA_GPIO_EXPANDER,4,0,2022-12-27 18:14:20+00:00,[],
324,https://github.com/sumanthnimmakayala/mcm_8outputs.git,2022-12-29 10:06:06+00:00,,0,sumanthnimmakayala/mcm_8outputs,583282606,Verilog,mcm_8outputs,3366,0,2022-12-29 10:06:22+00:00,[],https://api.github.com/licenses/apache-2.0
325,https://github.com/KelvinMYYZJ/RISCV-CPU-Test.git,2022-12-26 06:38:27+00:00,used only for online judge.,0,KelvinMYYZJ/RISCV-CPU-Test,582229008,Verilog,RISCV-CPU-Test,31,0,2022-12-26 06:49:02+00:00,[],None
326,https://github.com/palm9727/ccl_netlist_mapping.git,2022-12-23 18:40:15+00:00,Mapping algorithm used for Conformal Equivalence Checking tool.,0,palm9727/ccl_netlist_mapping,581622014,Verilog,ccl_netlist_mapping,127,0,2022-12-23 19:05:28+00:00,[],None
327,https://github.com/DylanKennyBoland/Accumulator.git,2022-12-29 17:15:01+00:00,,0,DylanKennyBoland/Accumulator,583403786,Verilog,Accumulator,38,0,2023-01-01 15:42:48+00:00,[],None
328,https://github.com/kuanyi0226/Quartus_Verilog_GuessNumber.git,2022-12-29 17:43:01+00:00,The final team-work project for NCKU Course 111-1_Experiment on digital system 上半場第一組,0,kuanyi0226/Quartus_Verilog_GuessNumber,583411409,Verilog,Quartus_Verilog_GuessNumber,46312,0,2023-01-31 22:50:33+00:00,[],None
329,https://github.com/t-sasatani/clock_divide_and_select_tiny_user.git,2022-12-29 11:02:30+00:00,,0,t-sasatani/clock_divide_and_select_tiny_user,583297217,Verilog,clock_divide_and_select_tiny_user,2787,0,2022-12-29 11:03:00+00:00,[],https://api.github.com/licenses/apache-2.0
330,https://github.com/visionvlsi/verification_using_cocotb_2022_batch.git,2022-12-13 07:19:47+00:00,,0,visionvlsi/verification_using_cocotb_2022_batch,577635465,Verilog,verification_using_cocotb_2022_batch,27,0,2022-12-17 07:09:45+00:00,[],None
331,https://github.com/supermingu/efabless.git,2022-12-14 16:58:17+00:00,,0,supermingu/efabless,578272304,Verilog,efabless,2210,0,2022-12-14 16:58:34+00:00,[],https://api.github.com/licenses/apache-2.0
332,https://github.com/abhinavprakash199/FPGA---Fabric-Design-and-Architecture.git,2022-12-14 17:15:47+00:00,,0,abhinavprakash199/FPGA---Fabric-Design-and-Architecture,578278693,Verilog,FPGA---Fabric-Design-and-Architecture,4702,0,2023-02-20 15:07:52+00:00,[],None
333,https://github.com/nabilazahraa/Dld.git,2022-12-13 17:11:28+00:00,,0,nabilazahraa/Dld,577852366,Verilog,Dld,3771,0,2022-12-13 17:19:09+00:00,[],None
334,https://github.com/pradeep3096/Design-and-implementation-of-memory-BIST-on-an-FPGA.git,2022-12-15 19:34:19+00:00,Implemented Memory Built in self test (MBIST) in an FPGA.The design consists of a custom memory block and BIST controller which implements march-c algorithm to detect various faults.,1,pradeep3096/Design-and-implementation-of-memory-BIST-on-an-FPGA,578745854,Verilog,Design-and-implementation-of-memory-BIST-on-an-FPGA,1225,0,2022-12-15 19:37:20+00:00,[],None
335,https://github.com/MarleneJiang/shudianshiyan.git,2022-12-15 10:46:35+00:00,杭电数电实验作业,0,MarleneJiang/shudianshiyan,578559122,Verilog,shudianshiyan,3528,0,2022-12-15 10:51:42+00:00,[],None
336,https://github.com/mathewbushuru/digital-communication-system.git,2022-12-21 06:22:07+00:00,,0,mathewbushuru/digital-communication-system,580669524,Verilog,digital-communication-system,360,0,2022-12-21 19:50:44+00:00,[],None
337,https://github.com/shihatakeyama/bcd_convm.git,2022-12-18 00:20:55+00:00,このモジュールは2進数を入力して、10進数を1桁づつ変換し出力します。,0,shihatakeyama/bcd_convm,579518591,Verilog,bcd_convm,69,0,2022-12-18 00:26:55+00:00,[],None
338,https://github.com/oreorider/hardware-ai.git,2022-12-26 00:31:00+00:00,,0,oreorider/hardware-ai,582168589,Verilog,hardware-ai,44,0,2022-12-26 01:00:11+00:00,[],None
339,https://github.com/sumanthnimmakayala/integer_mcm.git,2022-12-30 09:33:34+00:00,,0,sumanthnimmakayala/integer_mcm,583602033,Verilog,integer_mcm,3364,0,2022-12-30 09:33:49+00:00,[],https://api.github.com/licenses/apache-2.0
340,https://github.com/ellen-wood/wrapped_counter.git,2022-12-28 09:41:08+00:00,,1,ellen-wood/wrapped_counter,582938835,Verilog,wrapped_counter,11335,0,2022-12-28 09:41:15+00:00,[],https://api.github.com/licenses/apache-2.0
341,https://github.com/ms802x/Duck-Hunt-Verilog-Project-.git,2022-12-27 17:36:53+00:00,,0,ms802x/Duck-Hunt-Verilog-Project-,582725447,Verilog,Duck-Hunt-Verilog-Project-,421,0,2022-12-27 17:38:34+00:00,[],None
342,https://github.com/puneeth714/design_aes.git,2022-12-20 16:37:33+00:00,,0,puneeth714/design_aes,580471517,Verilog,design_aes,8628,0,2022-12-21 12:18:09+00:00,[],None
343,https://github.com/manuka03/Cache-Memory-Simulation.git,2022-12-21 14:32:41+00:00,,0,manuka03/Cache-Memory-Simulation,580820598,Verilog,Cache-Memory-Simulation,1029,0,2022-12-21 14:39:34+00:00,[],None
344,https://github.com/hibenj/blueprint_reader.git,2022-12-22 11:45:03+00:00,,0,hibenj/blueprint_reader,581144076,Verilog,blueprint_reader,84762,0,2022-12-29 14:23:47+00:00,[],None
345,https://github.com/ysfxylmz/MPPT_Controller_with_FPGA.git,2022-12-23 20:07:42+00:00,,0,ysfxylmz/MPPT_Controller_with_FPGA,581641767,Verilog,MPPT_Controller_with_FPGA,2,0,2022-12-23 20:08:52+00:00,[],None
346,https://github.com/Pradyumna1312/CNN_Arch.git,2022-12-22 07:05:54+00:00,,0,Pradyumna1312/CNN_Arch,581061651,Verilog,CNN_Arch,2206,0,2022-12-22 07:06:10+00:00,[],https://api.github.com/licenses/apache-2.0
347,https://github.com/Raks-hith/Numerical_method_bisection.git,2022-12-27 09:07:06+00:00,,0,Raks-hith/Numerical_method_bisection,582578174,Verilog,Numerical_method_bisection,286598,0,2022-12-27 09:07:24+00:00,[],https://api.github.com/licenses/apache-2.0
348,https://github.com/Farheen-github/ECE552.git,2022-12-27 01:24:16+00:00,A 16-bit 5-stage in-order pipelined processor in Verilog with Direct Mapped and Set Associative write back Cache. ,0,Farheen-github/ECE552,582482555,Verilog,ECE552,263,0,2022-12-27 01:34:02+00:00,[],None
349,https://github.com/dkbro162/16bitKSA.git,2022-12-27 13:45:07+00:00,Verilog code for 16 bit Kogge Stone Adder,0,dkbro162/16bitKSA,582655757,Verilog,16bitKSA,2,0,2022-12-27 14:09:08+00:00,[],None
350,https://github.com/JimHui0/Timing_Circuit_hw03_-d-e-.git,2022-12-26 14:42:07+00:00,,0,JimHui0/Timing_Circuit_hw03_-d-e-,582349248,Verilog,Timing_Circuit_hw03_-d-e-,223,0,2022-12-26 14:43:05+00:00,[],None
351,https://github.com/yufuskoc/verilog.git,2022-12-19 19:51:24+00:00,,0,yufuskoc/verilog,580130992,Verilog,verilog,8,0,2022-12-19 20:04:46+00:00,[],https://api.github.com/licenses/mit
352,https://github.com/DanielProanoGuevara/VGA.git,2022-12-28 17:47:23+00:00,VGA module for the BASYS-3 development board,0,DanielProanoGuevara/VGA,583079460,Verilog,VGA,12,0,2022-12-28 18:32:07+00:00,[],None
353,https://github.com/KamenRiderV3/TestChip.git,2022-12-30 20:36:46+00:00,,0,KamenRiderV3/TestChip,583760369,Verilog,TestChip,2203,0,2022-12-30 20:37:02+00:00,[],https://api.github.com/licenses/apache-2.0
354,https://github.com/mohamedabedR/FPGA_Workshop.git,2022-12-14 14:09:56+00:00,-------,0,mohamedabedR/FPGA_Workshop,578208693,Verilog,FPGA_Workshop,2437,0,2023-01-31 22:06:03+00:00,[],None
355,https://github.com/GaoqiangIrvine/cara.git,2022-12-14 06:08:24+00:00,caravel-user,0,GaoqiangIrvine/cara,578049441,Verilog,cara,2206,0,2022-12-14 06:08:41+00:00,[],https://api.github.com/licenses/apache-2.0
356,https://github.com/skerr92/oak8m14.git,2022-12-13 00:58:19+00:00,OAK8M14 repository for an 8bit microcontroller with 1kB SRAM and 4kB FLASH,0,skerr92/oak8m14,577542226,Verilog,oak8m14,2206,0,2022-12-13 00:58:36+00:00,[],https://api.github.com/licenses/apache-2.0
357,https://github.com/pruthvisa78/single-cycle-processor-riscv.git,2022-12-17 06:07:19+00:00,"A single cycle risc v processor with minimal instruction support (arithmetic, logical, branch, load, store)",0,pruthvisa78/single-cycle-processor-riscv,579272769,Verilog,single-cycle-processor-riscv,8,0,2022-12-17 06:08:32+00:00,[],None
358,https://github.com/HassanKhaled11/Sequence_detector.git,2022-12-19 00:53:15+00:00,Implementation of two sequence detectos with checker and testbench for the top module,0,HassanKhaled11/Sequence_detector,579805858,Verilog,Sequence_detector,7,0,2022-12-19 01:00:22+00:00,[],None
359,https://github.com/Pradyumna1312/BraunM.git,2022-12-16 09:37:04+00:00,,0,Pradyumna1312/BraunM,578953182,Verilog,BraunM,2210,0,2022-12-16 09:37:20+00:00,[],https://api.github.com/licenses/apache-2.0
360,https://github.com/aki-cast/handoutai.git,2022-12-19 02:35:52+00:00,,0,aki-cast/handoutai,579823779,Verilog,handoutai,2344,0,2022-12-19 02:36:12+00:00,[],https://api.github.com/licenses/apache-2.0
361,https://github.com/tumrabert/Calculator_SoC_Project.git,2022-12-30 15:58:50+00:00,,0,tumrabert/Calculator_SoC_Project,583697614,Verilog,Calculator_SoC_Project,57,0,2024-01-05 16:21:34+00:00,[],None
362,https://github.com/chiro2001/scaleda-sample-project.git,2022-12-16 21:59:35+00:00,,0,chiro2001/scaleda-sample-project,579185753,Verilog,scaleda-sample-project,210,0,2022-12-16 22:05:35+00:00,[],None
363,https://github.com/kazimdalwakil/CSE460-Project.git,2022-12-28 13:20:46+00:00,,0,kazimdalwakil/CSE460-Project,583000222,Verilog,CSE460-Project,2409,0,2022-12-28 13:21:04+00:00,[],None
364,https://github.com/Mohamed-AbdulRahman5/ALU.git,2022-12-22 14:00:22+00:00,ALU with denounce  and 7 segment decoder,0,Mohamed-AbdulRahman5/ALU,581187118,Verilog,ALU,4,0,2022-12-22 14:01:35+00:00,[],None
365,https://github.com/james-tandon-csueb/njproj.git,2022-12-17 05:15:43+00:00,First pass with caravel_user_project_analog from efabless,0,james-tandon-csueb/njproj,579263043,Verilog,njproj,2941,0,2022-12-17 05:28:50+00:00,[],https://api.github.com/licenses/apache-2.0
366,https://github.com/HDL-Proj/Logic-Auth.git,2022-12-20 01:50:52+00:00,8 bit dip switch password encapsulation,0,HDL-Proj/Logic-Auth,580212175,Verilog,Logic-Auth,1104,0,2023-01-10 09:12:21+00:00,[],None
367,https://github.com/bsg-external/ee477-designs-module2.git,2022-12-20 22:11:46+00:00,,1,bsg-external/ee477-designs-module2,580569591,Verilog,ee477-designs-module2,137,0,2022-12-20 23:00:19+00:00,[],
368,https://github.com/LalitMPQS/efab_cad.git,2022-12-19 10:47:48+00:00,,0,LalitMPQS/efab_cad,579949019,Verilog,efab_cad,2210,0,2022-12-19 10:48:04+00:00,[],https://api.github.com/licenses/apache-2.0
369,https://github.com/mattvenn/zero_to_asic_mpw8.git,2022-12-19 16:57:29+00:00,,2,mattvenn/zero_to_asic_mpw8,580077031,Verilog,zero_to_asic_mpw8,71355,0,2022-12-19 17:01:18+00:00,[],https://api.github.com/licenses/apache-2.0
370,https://github.com/andreamifsud/mega4_rram_nom.git,2022-12-22 15:30:19+00:00,,0,andreamifsud/mega4_rram_nom,581217943,Verilog,mega4_rram_nom,4351,0,2022-12-22 15:41:42+00:00,[],
371,https://github.com/Hotwater17/caravel_test.git,2022-12-23 17:15:14+00:00,,0,Hotwater17/caravel_test,581599966,Verilog,caravel_test,2206,0,2022-12-23 17:15:31+00:00,[],https://api.github.com/licenses/apache-2.0
372,https://github.com/1820158cpe/HDL-Experiments.git,2022-12-19 07:34:35+00:00,Experiments 1 to 5,0,1820158cpe/HDL-Experiments,579889455,Verilog,HDL-Experiments,1124,0,2022-12-19 07:37:39+00:00,[],None
373,https://github.com/sumanthnimmakayala/six_iir_ext.git,2022-12-26 12:53:17+00:00,,0,sumanthnimmakayala/six_iir_ext,582319028,Verilog,six_iir_ext,3376,0,2022-12-26 12:53:33+00:00,[],https://api.github.com/licenses/apache-2.0
374,https://github.com/skerr92/oak8m14-src.git,2022-12-26 16:03:53+00:00,source repository for MPW-8 OAK8M14 MCU,0,skerr92/oak8m14-src,582371484,Verilog,oak8m14-src,21,0,2022-12-26 16:05:15+00:00,[],https://api.github.com/licenses/mit
375,https://github.com/evd18i021/accumulator_npar_parallel_complete.git,2022-12-30 10:34:05+00:00,"accumulator based 2D parallel architecture (N-outputs at a time), area and throughput efficient IDCT/IDST architecutre for hevc standard",0,evd18i021/accumulator_npar_parallel_complete,583616691,Verilog,accumulator_npar_parallel_complete,2215,0,2022-12-30 10:34:22+00:00,[],https://api.github.com/licenses/apache-2.0
376,https://github.com/7vik-g/-16bit-pipelined-RISC-processor-mpw8.git,2022-12-30 17:51:27+00:00,,0,7vik-g/-16bit-pipelined-RISC-processor-mpw8,583725653,Verilog,-16bit-pipelined-RISC-processor-mpw8,85905,0,2022-12-30 18:05:08+00:00,[],https://api.github.com/licenses/apache-2.0
377,https://github.com/adityan18/rakshit_efables.git,2022-12-28 15:38:20+00:00,,0,adityan18/rakshit_efables,583042540,Verilog,rakshit_efables,2203,0,2022-12-28 15:38:36+00:00,[],https://api.github.com/licenses/apache-2.0
378,https://github.com/W4xMell/MyCpu.git,2022-12-26 10:43:33+00:00,a simple cpu based on MIPS with pipeline,0,W4xMell/MyCpu,582287304,Verilog,MyCpu,8,0,2022-12-26 11:00:31+00:00,"['mips32', 'verilog']",None
379,https://github.com/taeyoup/image-updown-scaling-using-FPGA.git,2022-12-28 07:21:03+00:00,image resizing [256x256 -> 128x128 -> 256x256] ,1,taeyoup/image-updown-scaling-using-FPGA,582901720,Verilog,image-updown-scaling-using-FPGA,13,0,2022-12-28 07:39:29+00:00,[],None
380,https://github.com/elifatar/BIL264-265_Proje.git,2022-12-18 15:06:48+00:00,,0,elifatar/BIL264-265_Proje,579693151,Verilog,BIL264-265_Proje,2,0,2023-01-31 22:19:00+00:00,[],None
381,https://github.com/LabSprout/google_workshop.git,2022-12-19 02:38:35+00:00,221219 Google Workshop,0,LabSprout/google_workshop,579824275,Verilog,google_workshop,2345,0,2022-12-19 02:38:55+00:00,[],https://api.github.com/licenses/apache-2.0
382,https://github.com/gstei/ASIC_SPI.git,2022-12-15 12:51:48+00:00,,0,gstei/ASIC_SPI,578602056,Verilog,ASIC_SPI,542,0,2023-10-01 11:33:36+00:00,[],None
383,https://github.com/wreeten/PCIe.git,2022-12-19 03:04:07+00:00,"This is the completion of the code for my ECE526 project, PCIe.",0,wreeten/PCIe,579829408,Verilog,PCIe,353,0,2022-12-19 03:13:19+00:00,[],None
384,https://github.com/Nayanamakani1999/Center-of-object-in-an-image.git,2022-12-20 18:11:23+00:00,Center of object in an image,0,Nayanamakani1999/Center-of-object-in-an-image,580502618,Verilog,Center-of-object-in-an-image,1606,0,2022-12-20 18:16:53+00:00,[],None
385,https://github.com/PaulLeeECE/Simple-CPU.git,2022-12-17 06:50:48+00:00,,0,PaulLeeECE/Simple-CPU,579281470,Verilog,Simple-CPU,4,0,2022-12-17 06:52:07+00:00,[],None
386,https://github.com/cjcara036/SUBLEQ_Processor.git,2022-12-18 04:37:10+00:00,This repository contains the Verilog code for a basic SUBLEQ processor,0,cjcara036/SUBLEQ_Processor,579557981,Verilog,SUBLEQ_Processor,17,0,2022-12-18 14:32:53+00:00,"['oisc', 'processor', 'subleq', 'verilog']",None
387,https://github.com/Pradyumna1312/CNN.git,2022-12-18 03:39:25+00:00,,0,Pradyumna1312/CNN,579548469,Verilog,CNN,2206,0,2022-12-18 03:39:40+00:00,[],https://api.github.com/licenses/apache-2.0
388,https://github.com/CSIE523/2023_ICC_Exercise.git,2022-12-17 03:12:28+00:00,,0,CSIE523/2023_ICC_Exercise,579241709,Verilog,2023_ICC_Exercise,73132,0,2022-12-17 11:45:50+00:00,[],None
389,https://github.com/hakan-emre-gedik/multi_cycle_computer.git,2022-12-17 22:42:40+00:00,Multicycle computer and instruction set from scratch written in Verilog,0,hakan-emre-gedik/multi_cycle_computer,579502832,Verilog,multi_cycle_computer,7185,0,2022-12-17 22:42:49+00:00,[],None
390,https://github.com/necrolust666/_verilog.git,2022-12-14 05:01:11+00:00,,0,necrolust666/_verilog,578032741,Verilog,_verilog,7093,0,2022-12-14 05:30:26+00:00,[],None
391,https://github.com/fatheelamp/D-Flip-Flop.git,2022-12-13 04:55:09+00:00,Verilog code and Testbench of D Flip flop is here. all of you can download and simulate in gtkwave,0,fatheelamp/D-Flip-Flop,577597270,Verilog,D-Flip-Flop,1,0,2023-01-31 22:01:27+00:00,[],None
392,https://github.com/Anujjha1031/iiitb_sqd_1010_mpw8.git,2022-12-13 14:07:21+00:00,,1,Anujjha1031/iiitb_sqd_1010_mpw8,577780983,Verilog,iiitb_sqd_1010_mpw8,2213,0,2022-12-13 14:07:38+00:00,[],https://api.github.com/licenses/apache-2.0
393,https://github.com/Basanthkp21/DSVD_HLDD.git,2022-12-22 09:41:37+00:00,one bit adder and its successions,0,Basanthkp21/DSVD_HLDD,581106764,Verilog,DSVD_HLDD,5,0,2022-12-22 09:43:58+00:00,[],None
394,https://github.com/muhammedTarek001/UART_RX.git,2022-12-22 12:53:46+00:00,,0,muhammedTarek001/UART_RX,581165308,Verilog,UART_RX,76,0,2022-12-22 13:46:19+00:00,[],None
395,https://github.com/amora7741/Verilog-Waves.git,2022-12-22 17:42:28+00:00,,0,amora7741/Verilog-Waves,581260877,Verilog,Verilog-Waves,5,0,2022-12-22 17:50:10+00:00,[],None
396,https://github.com/calvinlclee3/riscv_cpu.git,2022-12-15 02:07:50+00:00,"A five-stage RISC-V CPU with branch prediction, pipelined L1, and L2 cache.",0,calvinlclee3/riscv_cpu,578416000,Verilog,riscv_cpu,2008,0,2023-11-06 08:47:28+00:00,[],None
397,https://github.com/toddsharpe/SAP.git,2022-12-15 02:11:56+00:00,"Simple As Possible computer, based off Ben Eater's youtube series.",0,toddsharpe/SAP,578416880,Verilog,SAP,1972,0,2023-01-01 23:32:22+00:00,[],None
398,https://github.com/2020629-cpe/Verilog.git,2022-12-15 08:23:59+00:00,,0,2020629-cpe/Verilog,578510651,Verilog,Verilog,3926,0,2022-12-18 12:02:02+00:00,[],None
399,https://github.com/BrandonYU34/MIPS-Pipeline-CPU.git,2022-12-15 09:08:45+00:00,,0,BrandonYU34/MIPS-Pipeline-CPU,578525629,Verilog,MIPS-Pipeline-CPU,99,0,2022-12-15 09:18:35+00:00,[],None
400,https://github.com/Ohgram/drink_moore.git,2022-12-14 10:43:16+00:00,,0,Ohgram/drink_moore,578135384,Verilog,drink_moore,2,0,2022-12-15 13:06:31+00:00,[],None
401,https://github.com/Aadyot/Verilog-CPU.git,2022-12-14 16:40:47+00:00,,0,Aadyot/Verilog-CPU,578265657,Verilog,Verilog-CPU,163,0,2022-12-14 16:42:42+00:00,[],None
402,https://github.com/MaZeNHeKaL29/Uart-and-GPIO-using-APB.git,2022-12-13 22:08:42+00:00,Verilog code for UART and GPIO connected to APB Bus,0,MaZeNHeKaL29/Uart-and-GPIO-using-APB,577942119,Verilog,Uart-and-GPIO-using-APB,31,0,2023-04-28 02:59:07+00:00,[],None
403,https://github.com/AgamemnonasKyriazis/lab6_microprocessors.git,2022-12-15 17:30:18+00:00,,0,AgamemnonasKyriazis/lab6_microprocessors,578705961,Verilog,lab6_microprocessors,138,0,2023-07-01 21:32:15+00:00,[],None
404,https://github.com/joeliambrown/ECE-385.git,2022-12-15 18:57:29+00:00,Spencer Gallagher's and my code for our systemVerilog projects in ECE 385 Digital Systems Laboratory ,0,joeliambrown/ECE-385,578734653,Verilog,ECE-385,88662,0,2022-12-15 19:10:23+00:00,[],None
405,https://github.com/2020759-CpE/CastilloHDL.git,2022-12-28 18:58:46+00:00,"Castillo, Joaquin Iverson M. - 2020759 - Introduction to HDL",0,2020759-CpE/CastilloHDL,583097764,Verilog,CastilloHDL,5128,0,2022-12-28 19:04:58+00:00,[],None
406,https://github.com/Hadi-loo/Computer-Aided-Design-Course.git,2022-12-30 08:29:48+00:00,,0,Hadi-loo/Computer-Aided-Design-Course,583586859,Verilog,Computer-Aided-Design-Course,9121,0,2023-03-02 19:33:44+00:00,[],https://api.github.com/licenses/mit
407,https://github.com/CricySaray/dedicated-files.git,2022-12-30 11:38:33+00:00,save some files that are useful for future,0,CricySaray/dedicated-files,583631754,Verilog,dedicated-files,7900,0,2022-12-30 13:54:52+00:00,[],None
408,https://github.com/proppy/tiny_user_project_silice.git,2022-12-23 16:30:57+00:00,,0,proppy/tiny_user_project_silice,581588176,Verilog,tiny_user_project_silice,2936,0,2022-12-23 17:14:12+00:00,[],https://api.github.com/licenses/apache-2.0
409,https://github.com/Mohamed-AbdulRahman5/memory_sync.git,2022-12-22 19:43:55+00:00,,0,Mohamed-AbdulRahman5/memory_sync,581295313,Verilog,memory_sync,210,0,2022-12-22 19:44:16+00:00,[],None
410,https://github.com/nair-arjun/Multi-Stage-Neural-Network.git,2022-12-23 19:19:57+00:00,Hardware based design for a multi stage neural network,0,nair-arjun/Multi-Stage-Neural-Network,581631158,Verilog,Multi-Stage-Neural-Network,267,0,2022-12-23 19:23:28+00:00,[],None
411,https://github.com/embelon/sky130-wb-hyperram.git,2022-12-26 21:59:12+00:00,Wishbone connected HyperRAM controller for Skywater 130,0,embelon/sky130-wb-hyperram,582451188,Verilog,sky130-wb-hyperram,60408,0,2022-12-26 22:14:34+00:00,[],https://api.github.com/licenses/apache-2.0
412,https://github.com/evd18i021/lifting97_extdirect.git,2022-12-30 05:15:06+00:00,,0,evd18i021/lifting97_extdirect,583545148,Verilog,lifting97_extdirect,3375,0,2022-12-30 05:15:22+00:00,[],https://api.github.com/licenses/apache-2.0
413,https://github.com/fatheelamp/SR-Flip-Flop.git,2022-12-13 04:48:29+00:00,Here verilog code  and testbench of SR flip flop has been uploaded. All of you can download it and can simulate it in gtkwave.,0,fatheelamp/SR-Flip-Flop,577595730,Verilog,SR-Flip-Flop,0,0,2022-12-13 04:51:16+00:00,[],None
414,https://github.com/2020158-CPE/Iverilog.git,2022-12-21 12:26:05+00:00,,0,2020158-CPE/Iverilog,580777326,Verilog,Iverilog,24,0,2023-01-04 02:30:16+00:00,[],None
415,https://github.com/AKASHTHER/Up_or_down_counter.git,2022-12-21 07:19:30+00:00,,0,AKASHTHER/Up_or_down_counter,580684225,Verilog,Up_or_down_counter,1,0,2022-12-21 07:20:36+00:00,[],None
416,https://github.com/DixantaG/Single-Cycle-Processor.git,2022-12-20 03:07:12+00:00,Integrated a main control unit and data path in Verilog to create a single cycle processor.,0,DixantaG/Single-Cycle-Processor,580228264,Verilog,Single-Cycle-Processor,25,0,2022-12-20 03:13:03+00:00,[],None
417,https://github.com/sumanthnimmakayala/dct_4.git,2022-12-24 14:35:21+00:00,,0,sumanthnimmakayala/dct_4,581839405,Verilog,dct_4,3379,0,2022-12-24 14:35:34+00:00,[],https://api.github.com/licenses/apache-2.0
418,https://github.com/homuch/CA_Final_public.git,2022-12-25 09:32:48+00:00,,0,homuch/CA_Final_public,582009280,Verilog,CA_Final_public,1426,0,2022-12-25 09:34:51+00:00,[],None
419,https://github.com/Pradyumna1312/Dummy.git,2022-12-23 16:42:29+00:00,,0,Pradyumna1312/Dummy,581591217,Verilog,Dummy,2206,0,2022-12-23 16:42:46+00:00,[],https://api.github.com/licenses/apache-2.0
420,https://github.com/tsanjay330/Polynomial-Evaluation-Accelerator.git,2022-12-29 05:23:53+00:00,,0,tsanjay330/Polynomial-Evaluation-Accelerator,583214640,Verilog,Polynomial-Evaluation-Accelerator,8253,0,2022-12-30 13:46:54+00:00,[],None
421,https://github.com/Onkar-Joshi/Interrupt-control-using-Verilog.git,2022-12-29 04:52:20+00:00,,0,Onkar-Joshi/Interrupt-control-using-Verilog,583208692,Verilog,Interrupt-control-using-Verilog,11,0,2022-12-29 04:53:04+00:00,[],None
422,https://github.com/YanbooooH/FPGA-frequency-acquisition-serial-port-output.git,2022-12-23 02:47:30+00:00,在FPGA上实现频率采集方案，频率稳定到HZ的后一位，并通过串口发送到上位机,0,YanbooooH/FPGA-frequency-acquisition-serial-port-output,581380548,Verilog,FPGA-frequency-acquisition-serial-port-output,17,0,2022-12-25 07:20:01+00:00,[],https://api.github.com/licenses/mit
423,https://github.com/nulface/UART_TX.v.git,2022-12-22 23:52:24+00:00,A UART TX module written in verilog,0,nulface/UART_TX.v,581349132,Verilog,UART_TX.v,174,0,2022-12-22 23:56:23+00:00,[],None
424,https://github.com/tobiaj10/Restoring-Divider.git,2022-12-23 22:36:28+00:00,Designed and built a 16-bit restoring divider using Verilog and the resorting division algorithm.,0,tobiaj10/Restoring-Divider,581670438,Verilog,Restoring-Divider,3,0,2022-12-24 02:24:42+00:00,[],None
425,https://github.com/radhe-2022/IIT_Indore_MM.git,2022-12-30 08:44:45+00:00,mpw8 ,0,radhe-2022/IIT_Indore_MM,583590261,Verilog,IIT_Indore_MM,66175,0,2022-12-30 09:10:38+00:00,[],https://api.github.com/licenses/apache-2.0
426,https://github.com/Shashank-06/iit_indore_neuron.git,2022-12-30 17:06:26+00:00,,0,Shashank-06/iit_indore_neuron,583714792,Verilog,iit_indore_neuron,61510,0,2022-12-30 17:19:29+00:00,[],https://api.github.com/licenses/apache-2.0
427,https://github.com/Aakash-Jana/Microprocessor.git,2022-12-17 08:54:41+00:00,"An ARM based simplified microprocessor designed in CME341 , FPGA design and System verilog class. ",0,Aakash-Jana/Microprocessor,579307740,Verilog,Microprocessor,4053,0,2022-12-17 09:36:48+00:00,[],None
428,https://github.com/andylithia/OpenFASOC_MPW8.git,2022-12-17 14:39:03+00:00,,1,andylithia/OpenFASOC_MPW8,579391033,Verilog,OpenFASOC_MPW8,115908,0,2022-12-17 18:33:07+00:00,[],https://api.github.com/licenses/apache-2.0
429,https://github.com/Zeynep-Parlatan/Computer-Organization-CSE331-.git,2022-12-15 22:58:20+00:00,Computer Organization homework (MiniMIPS and ALU Design),0,Zeynep-Parlatan/Computer-Organization-CSE331-,578799457,Verilog,Computer-Organization-CSE331-,4349,0,2022-12-15 23:14:44+00:00,[],None
430,https://github.com/phvictorr/deslocamentocircular.git,2022-12-15 19:21:26+00:00,Deslocamento circular com operando de entrada de 4bits em Verilog,0,phvictorr/deslocamentocircular,578742003,Verilog,deslocamentocircular,5,0,2022-12-15 19:23:20+00:00,[],None
431,https://github.com/Acecoder35/iiitb_gray_counter.git,2022-12-15 17:38:49+00:00,,0,Acecoder35/iiitb_gray_counter,578709129,Verilog,iiitb_gray_counter,9159,0,2022-12-15 17:52:53+00:00,[],None
432,https://github.com/oooyuanooo/a5-1.git,2022-12-22 03:36:50+00:00,,0,oooyuanooo/a5-1,581015680,Verilog,a5-1,14,0,2022-12-22 03:40:14+00:00,[],None
433,https://github.com/Vaishnavidg/Verilog-Code.git,2022-12-21 18:27:39+00:00,,0,Vaishnavidg/Verilog-Code,580898144,Verilog,Verilog-Code,6601,0,2023-01-06 13:09:37+00:00,[],None
434,https://github.com/beomsun5/IcarusVerilog.git,2022-12-24 13:30:20+00:00,,0,beomsun5/IcarusVerilog,581824623,Verilog,IcarusVerilog,10979,0,2022-12-24 13:32:49+00:00,[],None
435,https://github.com/Chetan493401/caravel.git,2022-12-24 14:11:58+00:00,,0,Chetan493401/caravel,581834068,Verilog,caravel,6,0,2022-12-24 14:25:43+00:00,[],None
436,https://github.com/bhim4078652/MIPS_32_PIPELINED.git,2022-12-24 09:19:59+00:00,,0,bhim4078652/MIPS_32_PIPELINED,581772906,Verilog,MIPS_32_PIPELINED,519,0,2023-09-13 11:43:06+00:00,[],https://api.github.com/licenses/mit
437,https://github.com/sigdox/mpw7.git,2022-12-24 21:46:03+00:00,,0,sigdox/mpw7,581920367,Verilog,mpw7,51032,0,2022-12-24 21:46:19+00:00,[],https://api.github.com/licenses/apache-2.0
438,https://github.com/mohanadtalat91/Verilog-HDL.git,2022-12-26 17:00:16+00:00,A Verilog HDL code,0,mohanadtalat91/Verilog-HDL,582386473,Verilog,Verilog-HDL,17,0,2022-12-30 02:03:12+00:00,"['computer-architecture', 'verilog', 'verilog-code', 'verilog-components', 'verilog-hdl', 'verilog-programs']",None
439,https://github.com/Ho97/FP-MAC-frontend.git,2022-12-24 03:42:03+00:00,,0,Ho97/FP-MAC-frontend,581714538,Verilog,FP-MAC-frontend,38222,0,2022-12-24 03:44:15+00:00,[],None
440,https://github.com/sumanthnimmakayala/dct8_par_2d.git,2022-12-24 18:15:37+00:00,,0,sumanthnimmakayala/dct8_par_2d,581886071,Verilog,dct8_par_2d,3381,0,2022-12-24 18:15:53+00:00,[],https://api.github.com/licenses/apache-2.0
441,https://github.com/evd18i021/lifting53_ext.git,2022-12-24 08:24:29+00:00,DWT - Conventional 5/3 lifting based wavelet with 3 octaves.,0,evd18i021/lifting53_ext,581762259,Verilog,lifting53_ext,3380,0,2022-12-24 08:24:46+00:00,[],https://api.github.com/licenses/apache-2.0
442,https://github.com/Ofahmy143/GPIO_APB.git,2022-12-24 22:23:23+00:00,,0,Ofahmy143/GPIO_APB,581925501,Verilog,GPIO_APB,0,0,2022-12-24 22:40:29+00:00,[],None
443,https://github.com/mdw-at-linuxbox/x2821.git,2022-12-25 03:27:21+00:00,"2821 control unit for printer, card read punch",0,mdw-at-linuxbox/x2821,581957746,Verilog,x2821,127,0,2022-12-25 03:27:39+00:00,[],https://api.github.com/licenses/mit
444,https://github.com/mdw-at-linuxbox/x2150.git,2022-12-25 03:20:16+00:00,x2150 control unit,0,mdw-at-linuxbox/x2150,581956949,Verilog,x2150,36,0,2022-12-25 03:23:00+00:00,[],https://api.github.com/licenses/mit
445,https://github.com/mattngaw/hdlbits.git,2022-12-17 00:13:14+00:00,My solutions to HDLBits,0,mattngaw/hdlbits,579211612,Verilog,hdlbits,6,0,2023-04-29 23:19:19+00:00,[],None
446,https://github.com/phvictorr/multiplex.git,2022-12-15 19:17:03+00:00,Multiplexador 4x1,0,phvictorr/multiplex,578740667,Verilog,multiplex,4,0,2022-12-15 19:19:28+00:00,[],None
447,https://github.com/lashhw/DSD-Term-Project.git,2022-12-27 07:35:32+00:00,"NYCU 2022 Fall ""Digital System Design"" Term Project",0,lashhw/DSD-Term-Project,582554859,Verilog,DSD-Term-Project,1110,0,2023-01-09 03:01:33+00:00,[],None
448,https://github.com/sumanthnimmakayala/iir6_multi_delay.git,2022-12-26 12:29:17+00:00,,0,sumanthnimmakayala/iir6_multi_delay,582312687,Verilog,iir6_multi_delay,3376,0,2022-12-26 12:29:30+00:00,[],https://api.github.com/licenses/apache-2.0
449,https://github.com/McLucifer2646/caravel_iiitb_sd_8.git,2022-12-21 10:49:25+00:00,,0,McLucifer2646/caravel_iiitb_sd_8,580747431,Verilog,caravel_iiitb_sd_8,291085,0,2022-12-21 10:49:44+00:00,[],https://api.github.com/licenses/apache-2.0
450,https://github.com/greatdreams/learn-hardware.git,2022-12-23 13:21:50+00:00,learn how to design a hardware,0,greatdreams/learn-hardware,581533916,Verilog,learn-hardware,98,0,2022-12-23 13:51:13+00:00,[],None
451,https://github.com/KashishPrakash/PipelinedProcessor.git,2022-12-23 13:48:17+00:00,,0,KashishPrakash/PipelinedProcessor,581541487,Verilog,PipelinedProcessor,184,0,2022-12-23 13:48:45+00:00,[],None
452,https://github.com/segf00lt/riscy.git,2022-12-22 11:53:59+00:00,A RISC-V processor,0,segf00lt/riscy,581146790,Verilog,riscy,22,0,2022-12-22 11:55:30+00:00,[],https://api.github.com/licenses/mit
453,https://github.com/davoudifatemeh/Accelerator-RTL-design-with-a-simple-wrapper.git,2022-12-22 11:40:36+00:00,,0,davoudifatemeh/Accelerator-RTL-design-with-a-simple-wrapper,581142762,Verilog,Accelerator-RTL-design-with-a-simple-wrapper,72,0,2022-12-22 11:44:21+00:00,[],None
454,https://github.com/magnaza/T-F_PROJECT.git,2022-12-22 10:10:42+00:00,,1,magnaza/T-F_PROJECT,581115941,Verilog,T-F_PROJECT,46647,0,2022-12-22 10:13:50+00:00,[],None
455,https://github.com/umarcis/single_Neuron.git,2022-12-20 10:39:37+00:00,Here i just implement a simple neuron with verilog and also creates a Test bench file so you can test the functionality of a neuron.,0,umarcis/single_Neuron,580347646,Verilog,single_Neuron,8,0,2022-12-20 10:44:06+00:00,[],None
456,https://github.com/Ohgram/sync_fifo.git,2022-12-26 15:16:39+00:00,,0,Ohgram/sync_fifo,582358923,Verilog,sync_fifo,3,0,2023-04-21 09:49:41+00:00,[],None
457,https://github.com/zeinabmoawad/VLSI-Project.git,2022-12-27 00:51:27+00:00,,0,zeinabmoawad/VLSI-Project,582477536,Verilog,VLSI-Project,15326,0,2023-01-30 17:38:17+00:00,[],None
458,https://github.com/feichay10/Practicas-EdC.git,2022-12-22 00:36:00+00:00,,0,feichay10/Practicas-EdC,580982152,Verilog,Practicas-EdC,1976,0,2022-12-22 00:38:33+00:00,[],None
459,https://github.com/NeoLou/Multicycle-Processor-Project.git,2022-12-22 23:26:17+00:00,"This project, done for the course ECE352 (Computer Organization), consists of designing a SIMD (vector) extension for a multicycle processor.",0,NeoLou/Multicycle-Processor-Project,581344403,Verilog,Multicycle-Processor-Project,9513,0,2022-12-22 23:34:29+00:00,[],None
460,https://github.com/ep-infosec/50_google_CFU-Playground.git,2022-12-13 20:07:44+00:00,,0,ep-infosec/50_google_CFU-Playground,577910113,Verilog,50_google_CFU-Playground,11729,0,2022-12-13 20:08:05+00:00,[],https://api.github.com/licenses/apache-2.0
461,https://github.com/1viorel/12-bit-BCD-adder.git,2022-12-17 10:04:29+00:00,"12 bit BCD adder with correction, using FAC and RCA.",0,1viorel/12-bit-BCD-adder,579323203,Verilog,12-bit-BCD-adder,4,0,2023-04-29 21:22:45+00:00,[],None
462,https://github.com/t-sasatani/xls_workshop_tapeout_test.git,2022-12-16 01:09:43+00:00,,1,t-sasatani/xls_workshop_tapeout_test,578827294,Verilog,xls_workshop_tapeout_test,3184,0,2022-12-16 07:07:43+00:00,[],https://api.github.com/licenses/apache-2.0
463,https://github.com/dwisehart/grey_code.git,2022-12-17 13:52:15+00:00,,0,dwisehart/grey_code,579378385,Verilog,grey_code,5539,0,2022-12-17 14:30:29+00:00,[],https://api.github.com/licenses/apache-2.0
464,https://github.com/arianniakan/MipsPipelinedProcessor.git,2022-12-18 07:39:11+00:00,The Pipelined Hardware Description of Mips Muli-Cycle Processor Done in Verilog HDL,0,arianniakan/MipsPipelinedProcessor,579589997,Verilog,MipsPipelinedProcessor,5,0,2022-12-18 07:41:29+00:00,[],None
465,https://github.com/JillianTo/RISCVCPU.git,2022-12-19 04:35:42+00:00,,0,JillianTo/RISCVCPU,579847095,Verilog,RISCVCPU,10009,0,2022-12-19 04:38:37+00:00,[],None
466,https://github.com/afterGlow4ever/fpga_training.git,2022-12-17 14:45:36+00:00,basic training for study fpga & verilog,0,afterGlow4ever/fpga_training,579392693,Verilog,fpga_training,35834,0,2022-12-26 14:51:33+00:00,[],None
467,https://github.com/clysto/ice40-demo.git,2022-12-13 12:26:35+00:00,,0,clysto/ice40-demo,577742261,Verilog,ice40-demo,977,0,2022-12-13 12:27:26+00:00,[],None
468,https://github.com/dozingmoon/FPU.git,2022-12-15 06:44:45+00:00,Floating point unit,0,dozingmoon/FPU,578480701,Verilog,FPU,14,0,2022-12-15 11:49:22+00:00,[],None
469,https://github.com/ashwini0921/Design-of-Delta-sigma-modulator-using-eSim-and-Sky130.git,2022-12-28 18:22:18+00:00,,0,ashwini0921/Design-of-Delta-sigma-modulator-using-eSim-and-Sky130,583088762,Verilog,Design-of-Delta-sigma-modulator-using-eSim-and-Sky130,1759,0,2022-12-29 04:37:48+00:00,[],None
470,https://github.com/sumanthnimmakayala/hada_2d1_3.git,2022-12-29 08:48:11+00:00,,0,sumanthnimmakayala/hada_2d1_3,583261991,Verilog,hada_2d1_3,3367,0,2022-12-29 08:48:26+00:00,[],https://api.github.com/licenses/apache-2.0
471,https://github.com/mbatuhanorak/Alu.git,2022-12-29 23:14:35+00:00,,0,mbatuhanorak/Alu,583484584,Verilog,Alu,52931,0,2023-05-25 22:17:30+00:00,[],https://api.github.com/licenses/apache-2.0
472,https://github.com/ashbir/mpw8.git,2022-12-30 03:07:45+00:00,,1,ashbir/mpw8,583523423,Verilog,mpw8,6356,0,2022-12-30 03:08:58+00:00,[],https://api.github.com/licenses/apache-2.0
473,https://github.com/ashbir/caravel_tutorial.git,2022-12-29 16:48:04+00:00,,0,ashbir/caravel_tutorial,583396055,Verilog,caravel_tutorial,56284,0,2022-12-29 16:54:37+00:00,[],https://api.github.com/licenses/apache-2.0
474,https://github.com/robin3773/UlkaSemi_Intern.git,2022-12-29 22:21:27+00:00,,0,robin3773/UlkaSemi_Intern,583474783,Verilog,UlkaSemi_Intern,16571,0,2023-01-09 21:00:16+00:00,[],None
475,https://github.com/rohankumar-1/Multimodal-Clock-FPGA.git,2022-12-13 05:31:09+00:00,Implementing a Multimodal clock in Verilog using FPGA,0,rohankumar-1/Multimodal-Clock-FPGA,577605688,Verilog,Multimodal-Clock-FPGA,152,0,2024-01-01 19:53:01+00:00,"['hdl', 'verilog', 'vga']",None
476,https://github.com/cyanolupus/venus_processor.git,2022-12-14 18:41:12+00:00,金星プロセッサをつくる．,0,cyanolupus/venus_processor,578308348,Verilog,venus_processor,138,0,2022-12-14 19:06:44+00:00,[],None
477,https://github.com/ZarckYa/ASICS.git,2022-12-14 19:06:46+00:00,,0,ZarckYa/ASICS,578316431,Verilog,ASICS,2637,0,2022-12-14 19:07:56+00:00,[],None
478,https://github.com/ftppz/hackathon.git,2022-12-13 12:19:38+00:00,Bitonal sort,0,ftppz/hackathon,577739664,Verilog,hackathon,1906,0,2022-12-14 03:34:44+00:00,[],None
479,https://github.com/ulysseschaparro/I2C-IP-Module.git,2022-12-13 06:21:36+00:00,CSE 4356 SoC Final Project Fall 2022,0,ulysseschaparro/I2C-IP-Module,577618742,Verilog,I2C-IP-Module,39,0,2023-09-13 11:34:54+00:00,[],None
480,https://github.com/JeremyAkey/ELEN-21-Work.git,2022-12-13 23:19:43+00:00,,0,JeremyAkey/ELEN-21-Work,577958417,Verilog,ELEN-21-Work,2918,0,2022-12-13 23:29:10+00:00,[],None
481,https://github.com/raTrevisan/cci-2.git,2022-12-13 23:37:23+00:00,,0,raTrevisan/cci-2,577962215,Verilog,cci-2,3544,0,2022-12-13 23:42:56+00:00,[],None
482,https://github.com/moein-maleki/computer-architecture-lab.git,2022-12-16 14:11:06+00:00,"Includes developed HDL codes, pictures of waveforms and schematics for the implementation of an ARM processor. Codes were/are developed by moein maleki and ashkan jafari, for Architecture Lab, Fall of 2022. ",0,moein-maleki/computer-architecture-lab,579042209,Verilog,computer-architecture-lab,2535,0,2023-09-23 15:17:18+00:00,[],None
483,https://github.com/msheck/cci2-steelcore.git,2022-12-16 16:13:51+00:00,,1,msheck/cci2-steelcore,579085920,Verilog,cci2-steelcore,8689,0,2023-08-11 01:16:54+00:00,[],None
484,https://github.com/Ohgram/sequencer.git,2022-12-17 04:34:07+00:00,,0,Ohgram/sequencer,579255906,Verilog,sequencer,1,0,2022-12-17 04:34:45+00:00,[],None
485,https://github.com/OmarElayat/32-bit_RISC-V_pipelined_core.git,2022-12-28 18:35:47+00:00,RISC-V processor supporting all forty RV32I user-level instructions. The processor is pipelined with correct hazards handling. The design was tested and verified on the Nexys A7 FPGA using Xilinx Vivado.,1,OmarElayat/32-bit_RISC-V_pipelined_core,583092174,Verilog,32-bit_RISC-V_pipelined_core,17756,0,2022-12-28 19:14:08+00:00,[],https://api.github.com/licenses/mit
486,https://github.com/sumanthnimmakayala/iir6_cascade.git,2022-12-26 11:31:38+00:00,,0,sumanthnimmakayala/iir6_cascade,582298623,Verilog,iir6_cascade,3376,0,2022-12-26 11:31:51+00:00,[],https://api.github.com/licenses/apache-2.0
487,https://github.com/Madhav-Kanda/Two-stage-Processor-Design.git,2022-12-29 09:36:49+00:00,,0,Madhav-Kanda/Two-stage-Processor-Design,583274716,Verilog,Two-stage-Processor-Design,4,0,2023-10-29 11:39:11+00:00,[],None
488,https://github.com/mametarou967/risc_v_sample.git,2022-12-29 13:41:07+00:00,,0,mametarou967/risc_v_sample,583340689,Verilog,risc_v_sample,19,0,2022-12-30 06:44:34+00:00,[],None
489,https://github.com/kodmas/2022NTU_CA.git,2022-12-26 10:10:11+00:00,,0,kodmas/2022NTU_CA,582279138,Verilog,2022NTU_CA,1437,0,2022-12-26 10:11:48+00:00,[],None
490,https://github.com/lironcohen8/Architecture_Lab_Verilog_Processor.git,2022-12-30 14:55:01+00:00,Implementation of Processor in Verilog for TAU architecture lab 5.,0,lironcohen8/Architecture_Lab_Verilog_Processor,583680896,Verilog,Architecture_Lab_Verilog_Processor,1463,0,2023-02-28 17:37:27+00:00,[],None
491,https://github.com/komalg27/IIT_INDORE_Round-Robin-Arbiter.git,2022-12-30 15:42:17+00:00,The Round-robin arbiter mechanism is useful when no starvation of grants is allowed. The arbiter quantizes time shares each requestor is allowed to have. A minimal fairness is guaranteed by granting requestors in Round-robin manner. The requestors can prioritize their time shares by the weight.,0,komalg27/IIT_INDORE_Round-Robin-Arbiter,583693277,Verilog,IIT_INDORE_Round-Robin-Arbiter,56314,0,2022-12-30 15:59:41+00:00,[],https://api.github.com/licenses/apache-2.0
492,https://github.com/2020510-CPE/cpe317llanesj.git,2022-12-24 01:44:38+00:00,,0,2020510-CPE/cpe317llanesj,581697926,Verilog,cpe317llanesj,1168,0,2022-12-24 01:46:06+00:00,[],None
493,https://github.com/sumanthnimmakayala/iir2_direct.git,2022-12-24 20:26:55+00:00,,0,sumanthnimmakayala/iir2_direct,581908618,Verilog,iir2_direct,3378,0,2022-12-24 20:27:11+00:00,[],https://api.github.com/licenses/apache-2.0
494,https://github.com/slbiog3025/Team-2-.git,2022-12-25 13:54:54+00:00,,0,slbiog3025/Team-2-,582058904,Verilog,Team-2-,23308,0,2022-12-25 14:59:40+00:00,[],None
495,https://github.com/kktai1512/FPGA-Timer-Mapper-.git,2022-12-25 20:53:36+00:00,Clap-activated timer and mapper implemented on a basys-3 FPGA board.,0,kktai1512/FPGA-Timer-Mapper-,582138890,Verilog,FPGA-Timer-Mapper-,8865,0,2022-12-25 20:55:18+00:00,[],None
496,https://github.com/kodh49/CPU-Design.git,2022-12-25 22:54:20+00:00,"This project contains the design of the 5-stages pipelined CPU based on MIPS instruction set architecture, written in Verilog HDL",0,kodh49/CPU-Design,582156487,Verilog,CPU-Design,2533,0,2022-12-25 23:07:57+00:00,[],None
497,https://github.com/ReinventTech/signate-ai-edge-6th.git,2022-12-18 00:35:58+00:00,Team ReinventTech's repository for the 6th SIGNATE AI Edge Contest,0,ReinventTech/signate-ai-edge-6th,579520915,Verilog,signate-ai-edge-6th,132306,0,2023-02-18 05:28:41+00:00,[],https://api.github.com/licenses/mit
498,https://github.com/ahmedcs/FairSwitch.git,2022-12-17 23:08:25+00:00,FairSwitch,0,ahmedcs/FairSwitch,579507393,Verilog,FairSwitch,345,0,2022-12-17 23:35:48+00:00,[],
499,https://github.com/m4ury4p/caravel_tapeout.git,2022-12-19 05:18:30+00:00,tapeout,0,m4ury4p/caravel_tapeout,579855935,Verilog,caravel_tapeout,2210,0,2022-12-19 05:18:43+00:00,[],https://api.github.com/licenses/apache-2.0
500,https://github.com/MegaISari/verilog.git,2022-12-19 18:56:27+00:00,,0,MegaISari/verilog,580114988,Verilog,verilog,3,0,2022-12-19 18:59:00+00:00,[],None
501,https://github.com/Shankar18204/Cocotb-tests.git,2022-12-17 09:35:40+00:00,,0,Shankar18204/Cocotb-tests,579316807,Verilog,Cocotb-tests,5,0,2022-12-17 10:15:34+00:00,[],None
502,https://github.com/hliadis/Computer-Organization-and-Design.git,2022-12-15 14:45:36+00:00,Verilog / MIPS / assembly projects,0,hliadis/Computer-Organization-and-Design,578645040,Verilog,Computer-Organization-and-Design,4537,0,2022-12-15 15:47:45+00:00,"['assembly', 'assembly-mips', 'hardware', 'mips-assembly', 'verilog']",None
503,https://github.com/Oczek22/Przykladowe-testbenche.git,2022-12-20 18:24:56+00:00,Przykladowe testbenche napisane w verilogu i VHDL,0,Oczek22/Przykladowe-testbenche,580506616,Verilog,Przykladowe-testbenche,7,0,2022-12-20 18:25:29+00:00,[],None
504,https://github.com/ohmpatel4/ECE-2220.git,2022-12-22 02:23:38+00:00,Digital Logic Systems,0,ohmpatel4/ECE-2220,581001835,Verilog,ECE-2220,9325,0,2022-12-22 02:29:23+00:00,[],None
505,https://github.com/mem000/CS302_Fall2022_Verilog.git,2022-12-18 23:34:22+00:00,,0,mem000/CS302_Fall2022_Verilog,579793422,Verilog,CS302_Fall2022_Verilog,340,0,2022-12-18 23:38:25+00:00,[],None
506,https://github.com/GalavilliRambabu/decoder2to4.git,2022-12-19 16:26:49+00:00,,0,GalavilliRambabu/decoder2to4,580066504,Verilog,decoder2to4,0,0,2022-12-19 16:28:06+00:00,[],None
507,https://github.com/KanishR1/phase_frequency_detector.git,2022-12-24 13:41:42+00:00,,0,KanishR1/phase_frequency_detector,581827214,Verilog,phase_frequency_detector,7619,0,2022-12-24 14:20:32+00:00,[],https://api.github.com/licenses/gpl-3.0
508,https://github.com/sumanthnimmakayala/radix2_parallel.git,2022-12-24 13:21:26+00:00,,0,sumanthnimmakayala/radix2_parallel,581822683,Verilog,radix2_parallel,2238,0,2022-12-24 13:21:42+00:00,[],https://api.github.com/licenses/apache-2.0
509,https://github.com/DongbeomSon/fp16MAC.git,2022-12-25 09:12:40+00:00,,0,DongbeomSon/fp16MAC,582005894,Verilog,fp16MAC,21533,0,2022-12-25 09:12:55+00:00,[],None
510,https://github.com/YoboySahil/Pipelined-Processor-Simulator.git,2022-12-23 11:12:25+00:00,,0,YoboySahil/Pipelined-Processor-Simulator,581498216,Verilog,Pipelined-Processor-Simulator,16,0,2022-12-23 11:13:04+00:00,[],None
511,https://github.com/zhanglyGit/chiselSpace.git,2022-12-27 02:50:32+00:00,,0,zhanglyGit/chiselSpace,582497119,Verilog,chiselSpace,44,0,2023-02-06 02:02:17+00:00,[],None
512,https://github.com/mhshabani79/MIPS-pipeline.git,2022-12-28 13:42:16+00:00,"MIPS Verilog implementation with pipeline , Cache and SRAM",1,mhshabani79/MIPS-pipeline,583006812,Verilog,MIPS-pipeline,1273,0,2024-01-30 17:09:26+00:00,"['mips', 'mips32', 'verilog', 'computer-architecture', 'fpga', 'mips-assembly', 'mips-processor']",None
513,https://github.com/Parth429WOC/RSA_in_verilog.git,2022-12-14 13:04:40+00:00,RSA implemented in verilog,0,Parth429WOC/RSA_in_verilog,578183824,Verilog,RSA_in_verilog,7,0,2024-02-03 13:27:11+00:00,[],None
514,https://github.com/komalg27/mpw8_rerun_matrix_multiply.git,2022-12-26 11:55:05+00:00,,0,komalg27/mpw8_rerun_matrix_multiply,582304340,Verilog,mpw8_rerun_matrix_multiply,2203,0,2022-12-26 11:55:21+00:00,[],https://api.github.com/licenses/apache-2.0
515,https://github.com/RobertJN64/FPGA.git,2022-12-25 19:38:36+00:00,Verilog Code + Tools for Nandland GoBoard FPGA,0,RobertJN64/FPGA,582126882,Verilog,FPGA,25,0,2023-07-25 15:05:41+00:00,[],None
516,https://github.com/howie-zhao/lvds_dma_udp.git,2022-12-18 11:17:49+00:00,,0,howie-zhao/lvds_dma_udp,579636112,Verilog,lvds_dma_udp,5,0,2022-12-18 11:18:05+00:00,[],None
517,https://github.com/enesseyhun/BIL264_Proje.git,2022-12-18 20:27:12+00:00,,0,enesseyhun/BIL264_Proje,579759005,Verilog,BIL264_Proje,428,0,2022-12-18 20:41:25+00:00,[],None
518,https://github.com/2020962-CPE/Experiments_HDL.git,2022-12-21 13:40:36+00:00,,0,2020962-CPE/Experiments_HDL,580801810,Verilog,Experiments_HDL,1357,0,2022-12-21 13:43:03+00:00,[],None
519,https://github.com/sumanthnimmakayala/dct_16.git,2022-12-24 18:58:12+00:00,,0,sumanthnimmakayala/dct_16,581893886,Verilog,dct_16,3379,0,2022-12-24 18:58:25+00:00,[],https://api.github.com/licenses/apache-2.0
520,https://github.com/ppalee1217/RISC-V-pipeline-CPU.git,2022-12-24 04:30:56+00:00,,0,ppalee1217/RISC-V-pipeline-CPU,581722044,Verilog,RISC-V-pipeline-CPU,15884,0,2022-12-24 04:32:50+00:00,[],None
521,https://github.com/MostafaWahiep/ATM-System-using-Verilog.git,2022-12-27 05:07:52+00:00,Design and Verification of FSM system for ATM System using Verilog,2,MostafaWahiep/ATM-System-using-Verilog,582521625,Verilog,ATM-System-using-Verilog,1223,0,2022-12-27 05:10:11+00:00,[],None
522,https://github.com/anvitpatil/IMT2018503_FHE.git,2022-12-26 05:25:28+00:00,,0,anvitpatil/IMT2018503_FHE,582214111,Verilog,IMT2018503_FHE,1,0,2022-12-26 11:30:33+00:00,[],None
523,https://github.com/afshinsh/CAD-CA1.git,2022-12-28 00:04:51+00:00,,0,afshinsh/CAD-CA1,582814111,Verilog,CAD-CA1,269,0,2022-12-28 22:50:36+00:00,[],None
524,https://github.com/frozenthera/COSE222_COMPUTER_ARCHITECTURE.git,2022-12-27 15:22:50+00:00,,0,frozenthera/COSE222_COMPUTER_ARCHITECTURE,582685921,Verilog,COSE222_COMPUTER_ARCHITECTURE,6811,0,2022-12-27 15:41:32+00:00,[],None
525,https://github.com/komalg27/matrix_multiply_mpw8.git,2022-12-15 10:29:49+00:00,,0,komalg27/matrix_multiply_mpw8,578553353,Verilog,matrix_multiply_mpw8,98900,0,2022-12-15 10:30:06+00:00,[],https://api.github.com/licenses/apache-2.0
526,https://github.com/AvalonSemiconductors/mpw-8-as1x00.git,2022-12-16 12:30:14+00:00,,0,AvalonSemiconductors/mpw-8-as1x00,579007054,Verilog,mpw-8-as1x00,306131,0,2022-12-16 12:39:37+00:00,[],https://api.github.com/licenses/apache-2.0
527,https://github.com/Shashank-06/IIT_Indore_MAC_MPW8.git,2022-12-19 09:21:25+00:00,,0,Shashank-06/IIT_Indore_MAC_MPW8,579921701,Verilog,IIT_Indore_MAC_MPW8,62749,0,2022-12-19 09:21:43+00:00,[],https://api.github.com/licenses/apache-2.0
528,https://github.com/creatornicole/basys3-vga.git,2022-12-19 13:20:19+00:00,Displaying Pikachu on Monitor using Verilog.,0,creatornicole/basys3-vga,579998791,Verilog,basys3-vga,8,0,2022-12-19 15:20:02+00:00,[],None
529,https://github.com/Adomnr/Old-Verilog-Files.git,2022-12-19 20:24:44+00:00,,0,Adomnr/Old-Verilog-Files,580140514,Verilog,Old-Verilog-Files,6,0,2022-12-19 20:25:27+00:00,[],None
530,https://github.com/amisha004/Verilog_Designs.git,2022-12-14 18:21:16+00:00,,0,amisha004/Verilog_Designs,578301590,Verilog,Verilog_Designs,69,0,2022-12-14 18:44:03+00:00,[],https://api.github.com/licenses/mit
531,https://github.com/GalavilliRambabu/Tri_State_Buffer.git,2022-12-19 16:40:20+00:00,,0,GalavilliRambabu/Tri_State_Buffer,580071211,Verilog,Tri_State_Buffer,1,0,2022-12-19 16:41:09+00:00,[],None
532,https://github.com/GalavilliRambabu/Buffer.git,2022-12-19 16:32:52+00:00,,0,GalavilliRambabu/Buffer,580068724,Verilog,Buffer,1,0,2022-12-19 16:33:56+00:00,[],None
533,https://github.com/alfredo-machiavelli/design_verification.git,2022-12-13 02:34:21+00:00,,0,alfredo-machiavelli/design_verification,577564661,Verilog,design_verification,52,0,2022-12-13 02:38:29+00:00,[],None
534,https://github.com/KanishR1/Verilog.git,2022-12-20 13:37:08+00:00,,0,KanishR1/Verilog,580405971,Verilog,Verilog,22,0,2022-12-21 03:06:57+00:00,[],None
535,https://github.com/shun7b/motor.git,2022-12-30 11:33:39+00:00,,0,shun7b/motor,583630548,Verilog,motor,22,0,2022-12-30 11:34:33+00:00,[],None
536,https://github.com/wokwi/wrapped_simon_game.git,2022-12-29 21:52:40+00:00,Simon Game Project for Zero to ASIC Group Submission,0,wokwi/wrapped_simon_game,583469410,Verilog,wrapped_simon_game,4825,0,2022-12-29 21:52:44+00:00,[],https://api.github.com/licenses/apache-2.0
537,https://github.com/nic24-rgb/Enigma2.git,2022-12-28 18:55:26+00:00,Enigma2 Arcade Game,0,nic24-rgb/Enigma2,583096944,Verilog,Enigma2,9480,0,2022-12-28 18:57:45+00:00,[],None
538,https://github.com/William-Qu/Personal-Github.git,2022-12-28 22:35:30+00:00,This repository will display my experience as a programmer and specific scripts that I've created.,0,William-Qu/Personal-Github,583143450,Verilog,Personal-Github,167358,0,2023-04-03 20:44:17+00:00,[],None
539,https://github.com/zengls3186428803/riscv-cpu.git,2022-12-28 13:42:45+00:00,,0,zengls3186428803/riscv-cpu,583006989,Verilog,riscv-cpu,34702,0,2023-10-03 12:45:37+00:00,[],None
540,https://github.com/bence98/cbi980.git,2022-12-18 10:31:59+00:00,CBI980 - I2S master IP,0,bence98/cbi980,579625794,Verilog,cbi980,4408,0,2023-01-09 02:16:26+00:00,[],None
541,https://github.com/DimitrisT1804/Lab3-ECE-333-digital-lab.git,2022-12-20 00:23:07+00:00,ECE333 lab3: VGA controller ,0,DimitrisT1804/Lab3-ECE-333-digital-lab,580195433,Verilog,Lab3-ECE-333-digital-lab,12302,0,2024-03-09 20:38:21+00:00,[],None
542,https://github.com/iehdke/cp6.git,2022-12-14 01:35:40+00:00,,0,iehdke/cp6,577986923,Verilog,cp6,844,0,2022-12-14 01:39:22+00:00,[],None
543,https://github.com/guaihaizzz/-VGA-.git,2022-12-14 04:34:23+00:00,包含常用的vga分辨率，可轻松更改,0,guaihaizzz/-VGA-,578026553,Verilog,-VGA-,2,0,2022-12-14 06:09:40+00:00,[],None
544,https://github.com/mukullokhande99/modified_booth.git,2022-12-14 22:28:35+00:00,,0,mukullokhande99/modified_booth,578369877,Verilog,modified_booth,51018,0,2022-12-14 22:28:50+00:00,[],https://api.github.com/licenses/apache-2.0
545,https://github.com/Anderson991288/FPGA_StudyNote_Vivado_Verilog_Xilinx_ZYNQ.git,2022-12-24 02:37:44+00:00,,0,Anderson991288/FPGA_StudyNote_Vivado_Verilog_Xilinx_ZYNQ,581705311,Verilog,FPGA_StudyNote_Vivado_Verilog_Xilinx_ZYNQ,105,0,2023-02-05 03:42:08+00:00,[],None
546,https://github.com/DhamuDynamic/Braun-Multiplier.git,2022-12-26 10:52:27+00:00,It is a unsigned NxN bit multiplier.,0,DhamuDynamic/Braun-Multiplier,582289367,Verilog,Braun-Multiplier,37,0,2022-12-26 10:53:33+00:00,[],None
547,https://github.com/d-mitch-bailey/caravel_test.git,2022-12-24 03:10:43+00:00,Test repo for precheck and tapeout,0,d-mitch-bailey/caravel_test,581709934,Verilog,caravel_test,2206,0,2022-12-24 03:11:00+00:00,[],https://api.github.com/licenses/apache-2.0
548,https://github.com/sumanthnimmakayala/dct4_2d.git,2022-12-24 12:32:11+00:00,,0,sumanthnimmakayala/dct4_2d,581812006,Verilog,dct4_2d,3379,0,2022-12-24 12:32:27+00:00,[],https://api.github.com/licenses/apache-2.0
549,https://github.com/SabrinaBruni28/Urna_Eletronica.git,2022-12-26 18:05:17+00:00,,0,SabrinaBruni28/Urna_Eletronica,582402843,Verilog,Urna_Eletronica,108,0,2022-12-26 18:13:39+00:00,[],None
550,https://github.com/RKhoramian/CA-01-project.git,2022-12-30 07:55:37+00:00,,0,RKhoramian/CA-01-project,583579192,Verilog,CA-01-project,246,0,2022-12-30 09:07:38+00:00,[],None
551,https://github.com/McLucifer2646/Caravel_iiitb_sd_mpw8.git,2022-12-21 08:00:02+00:00,,0,McLucifer2646/Caravel_iiitb_sd_mpw8,580695440,Verilog,Caravel_iiitb_sd_mpw8,288005,0,2022-12-21 08:00:18+00:00,[],https://api.github.com/licenses/apache-2.0
552,https://github.com/krisjans/updruino_z80.git,2022-12-28 17:28:37+00:00,Use Updruino FPGA boarad (iCE40-UP5K-SG48) as bridge between ZX Spectrum and Raspberry Pi,0,krisjans/updruino_z80,583074446,Verilog,updruino_z80,1678,0,2022-12-28 17:49:00+00:00,[],https://api.github.com/licenses/unlicense
553,https://github.com/sumanthnimmakayala/IIR-Filter-using-Baugh-Wooley-Multipler.git,2022-12-24 11:55:28+00:00,,0,sumanthnimmakayala/IIR-Filter-using-Baugh-Wooley-Multipler,581804182,Verilog,IIR-Filter-using-Baugh-Wooley-Multipler,3363,0,2022-12-24 11:55:45+00:00,[],https://api.github.com/licenses/apache-2.0
554,https://github.com/sumanthnimmakayala/biquad_iir_ext.git,2022-12-24 19:38:56+00:00,,0,sumanthnimmakayala/biquad_iir_ext,581900712,Verilog,biquad_iir_ext,3378,0,2022-12-24 19:39:09+00:00,[],https://api.github.com/licenses/apache-2.0
555,https://github.com/sumanthnimmakayala/dct_8.git,2022-12-24 17:20:38+00:00,,0,sumanthnimmakayala/dct_8,581875130,Verilog,dct_8,3379,0,2022-12-24 17:20:53+00:00,[],https://api.github.com/licenses/apache-2.0
556,https://github.com/Sud-ana/user_project_mul32.git,2022-12-30 17:35:32+00:00,,0,Sud-ana/user_project_mul32,583721853,Verilog,user_project_mul32,2203,0,2022-12-30 17:35:49+00:00,[],https://api.github.com/licenses/apache-2.0
557,https://github.com/mdw-at-linuxbox/x2050.git,2022-12-25 03:21:42+00:00,2050 cpu,0,mdw-at-linuxbox/x2050,581957135,Verilog,x2050,122,0,2023-01-31 22:37:17+00:00,[],https://api.github.com/licenses/mit
558,https://github.com/sayo-134/Verilog_Codes.git,2022-12-26 05:49:38+00:00,Introductory codes for Verilog.,0,sayo-134/Verilog_Codes,582218683,Verilog,Verilog_Codes,73,0,2022-12-28 11:47:38+00:00,[],None
559,https://github.com/leolanggeng/verilog0.git,2022-12-19 15:51:34+00:00,,0,leolanggeng/verilog0,580053828,Verilog,verilog0,1160,0,2022-12-19 15:51:57+00:00,[],None
560,https://github.com/GWU-Tzaphqiel/MPW8GWU.git,2022-12-19 16:45:38+00:00,MPW8GWU,0,GWU-Tzaphqiel/MPW8GWU,580073035,Verilog,MPW8GWU,13587,0,2022-12-20 08:16:03+00:00,[],https://api.github.com/licenses/apache-2.0
561,https://github.com/Ali-Sabir2/Caravel.git,2022-12-19 04:17:19+00:00,,0,Ali-Sabir2/Caravel,579843580,Verilog,Caravel,2210,0,2022-12-19 04:17:35+00:00,[],https://api.github.com/licenses/apache-2.0
562,https://github.com/nmalamug-bu/EC311-Final-Project.git,2022-12-23 05:42:42+00:00,,0,nmalamug-bu/EC311-Final-Project,581414000,Verilog,EC311-Final-Project,37,0,2022-12-23 05:48:15+00:00,[],None
563,https://github.com/kerong2002/Tilted_Image_Correction.git,2022-12-23 03:24:04+00:00,Tilted_Image_Correction,0,kerong2002/Tilted_Image_Correction,581387639,Verilog,Tilted_Image_Correction,5944,0,2023-09-24 00:45:34+00:00,[],None
564,https://github.com/Viacheslav-Sadko/Aparatny_priskoryvachi.git,2022-12-17 06:30:17+00:00,,0,Viacheslav-Sadko/Aparatny_priskoryvachi,579277390,Verilog,Aparatny_priskoryvachi,5666,0,2022-12-17 06:32:14+00:00,[],None
565,https://github.com/2020009-CPE/myVerilog.git,2022-12-19 08:27:56+00:00,,0,2020009-CPE/myVerilog,579904782,Verilog,myVerilog,3934,0,2022-12-19 08:30:22+00:00,[],None
566,https://github.com/mukullokhande99/nsdcs_mul.git,2022-12-30 09:25:39+00:00,,0,mukullokhande99/nsdcs_mul,583599926,Verilog,nsdcs_mul,2203,0,2022-12-30 09:25:52+00:00,[],https://api.github.com/licenses/apache-2.0
567,https://github.com/phire/cube.git,2022-12-30 11:42:21+00:00,My attempt at learning how to make out-of-order cpus,0,phire/cube,583632623,Verilog,cube,1801,0,2022-12-30 11:42:57+00:00,[],None
568,https://github.com/exitrip/test-caravel.git,2022-12-28 20:02:56+00:00,testing caravel SoC toolchain,0,exitrip/test-caravel,583112939,Verilog,test-caravel,2204,0,2022-12-28 20:03:10+00:00,[],https://api.github.com/licenses/apache-2.0
569,https://github.com/mstfcaglar/RISC-V_Yonga_Tasarimi.git,2022-12-29 10:13:05+00:00,,0,mstfcaglar/RISC-V_Yonga_Tasarimi,583284431,Verilog,RISC-V_Yonga_Tasarimi,332,0,2022-12-29 10:17:12+00:00,[],None
570,https://github.com/fatemebd/architecture.git,2022-12-29 19:24:13+00:00,,0,fatemebd/architecture,583436955,Verilog,architecture,236,0,2022-12-31 12:17:03+00:00,[],None
571,https://github.com/phvictorr/bitparidade.git,2022-12-15 19:10:15+00:00,Calculadora de bit de paridade par para um número binário de 16  bits em Verilog,0,phvictorr/bitparidade,578738588,Verilog,bitparidade,6,0,2022-12-15 19:11:15+00:00,[],None
572,https://github.com/Ren-Ps/pd_verif_sky130a_ps.git,2022-12-16 07:55:41+00:00,,0,Ren-Ps/pd_verif_sky130a_ps,578921780,Verilog,pd_verif_sky130a_ps,3283,0,2023-07-19 19:19:21+00:00,[],https://api.github.com/licenses/gpl-3.0
573,https://github.com/1820189-CPE/HDL_Experiments.git,2022-12-19 07:49:47+00:00,,0,1820189-CPE/HDL_Experiments,579893782,Verilog,HDL_Experiments,436,0,2022-12-19 07:52:24+00:00,[],None
574,https://github.com/metamong6658/AIIC_PROJECT3.git,2022-12-19 05:50:52+00:00,2022-2 홍상훈 인공지능반도체 플젝3,0,metamong6658/AIIC_PROJECT3,579863033,Verilog,AIIC_PROJECT3,34309,0,2023-02-06 17:20:23+00:00,[],https://api.github.com/licenses/mit
575,https://github.com/GalavilliRambabu/FullAdder.git,2022-12-17 10:19:54+00:00,,0,GalavilliRambabu/FullAdder,579326774,Verilog,FullAdder,1,0,2022-12-19 15:50:32+00:00,[],None
576,https://github.com/1820182cpe/HDL.git,2022-12-17 13:08:00+00:00,,0,1820182cpe/HDL,579366786,Verilog,HDL,5,0,2022-12-17 13:08:31+00:00,[],None
577,https://github.com/Shubham-codebench/verilog.git,2022-12-17 17:25:15+00:00,singleport_ram,0,Shubham-codebench/verilog,579433979,Verilog,verilog,0,0,2022-12-17 17:29:02+00:00,[],None
578,https://github.com/Yusuf-Sari/bil265_project.git,2022-12-18 09:31:23+00:00,,0,Yusuf-Sari/bil265_project,579612785,Verilog,bil265_project,1083,0,2023-03-17 12:37:10+00:00,[],None
579,https://github.com/2120646-CPE/CP317L--HDL-Activities.git,2022-12-18 13:43:16+00:00,,0,2120646-CPE/CP317L--HDL-Activities,579671561,Verilog,CP317L--HDL-Activities,1317,0,2023-02-20 09:52:09+00:00,[],None
580,https://github.com/whutddk/Rift2Go_2300_Sky130_MPW8.git,2022-12-21 12:57:49+00:00,,0,whutddk/Rift2Go_2300_Sky130_MPW8,580787297,Verilog,Rift2Go_2300_Sky130_MPW8,306860,0,2022-12-21 13:03:47+00:00,[],https://api.github.com/licenses/apache-2.0
581,https://github.com/sasankn7/Verilog-mips.git,2022-12-21 11:29:27+00:00,,0,sasankn7/Verilog-mips,580759572,Verilog,Verilog-mips,62,0,2022-12-21 12:20:18+00:00,[],None
582,https://github.com/elifduru/ee241midterm2.git,2022-12-21 16:55:06+00:00,,0,elifduru/ee241midterm2,580869516,Verilog,ee241midterm2,24,0,2022-12-21 16:56:32+00:00,[],None
583,https://github.com/guttatus/hdlbits-solution.git,2022-12-20 14:07:28+00:00,My solution to the verilog exercise on the hdlbits website,0,guttatus/hdlbits-solution,580417121,Verilog,hdlbits-solution,13,0,2022-12-20 14:08:18+00:00,[],None
584,https://github.com/muhammedTarek001/garage-fsm.git,2022-12-22 12:46:29+00:00,,0,muhammedTarek001/garage-fsm,581162958,Verilog,garage-fsm,3,0,2022-12-22 12:46:54+00:00,[],None
585,https://github.com/Lavelliane/HDL-Final.git,2022-12-21 05:39:26+00:00,,0,Lavelliane/HDL-Final,580659394,Verilog,HDL-Final,12049,0,2022-12-21 05:41:17+00:00,[],None
586,https://github.com/WeiCheng14159/systolic_array_hw.git,2022-12-13 09:30:49+00:00,Hardware Design of Systolic Array (Educational),2,WeiCheng14159/systolic_array_hw,577679956,Verilog,systolic_array_hw,194,0,2022-12-13 09:31:13+00:00,[],None
587,https://github.com/xjq817/RISCV-CPU.git,2022-12-13 13:31:31+00:00,,0,xjq817/RISCV-CPU,577766746,Verilog,RISCV-CPU,507,0,2022-12-13 13:31:37+00:00,[],None
588,https://github.com/bytetriper/RISCV_CPU_ForOJ.git,2022-12-22 08:00:44+00:00,A duplicate of my CPU repo for OJ test,0,bytetriper/RISCV_CPU_ForOJ,581076665,Verilog,RISCV_CPU_ForOJ,29,0,2022-12-22 08:30:36+00:00,[],None
589,https://github.com/bchyes/CPU_for_commit.git,2022-12-26 06:49:02+00:00,,0,bchyes/CPU_for_commit,582231399,Verilog,CPU_for_commit,51,0,2022-12-26 06:50:45+00:00,[],None
590,https://github.com/DarianDraught/Memristor-based-CPU.git,2022-12-26 16:39:53+00:00,,0,DarianDraught/Memristor-based-CPU,582381085,Verilog,Memristor-based-CPU,2204,0,2022-12-26 16:40:06+00:00,[],https://api.github.com/licenses/apache-2.0
591,https://github.com/zainbmaged/CA-project.git,2022-12-25 23:50:20+00:00,,0,zainbmaged/CA-project,582163423,Verilog,CA-project,71,0,2023-01-05 20:47:59+00:00,[],None
592,https://github.com/MuhammedEmadd/apbbus.git,2022-12-26 18:13:06+00:00,,0,MuhammedEmadd/apbbus,582404770,Verilog,apbbus,7,0,2022-12-31 10:58:59+00:00,[],None
593,https://github.com/wlfoj/MI-Circuitos-Digitais.git,2022-12-16 21:58:21+00:00,,0,wlfoj/MI-Circuitos-Digitais,579185498,Verilog,MI-Circuitos-Digitais,747,0,2023-08-15 00:28:54+00:00,[],None
594,https://github.com/Xiao1Ma/A.git,2022-12-14 05:54:31+00:00,演示,0,Xiao1Ma/A,578045875,Verilog,A,0,0,2022-12-14 05:55:38+00:00,[],None
595,https://github.com/bhim4078652/MIPS_32_SINGLE_CYCLE.git,2022-12-23 16:58:42+00:00,,0,bhim4078652/MIPS_32_SINGLE_CYCLE,581595530,Verilog,MIPS_32_SINGLE_CYCLE,632,0,2022-12-23 17:01:18+00:00,[],https://api.github.com/licenses/mit
596,https://github.com/SG2505/ATM-FSM-Project.git,2022-12-24 01:01:16+00:00,,0,SG2505/ATM-FSM-Project,581692060,Verilog,ATM-FSM-Project,3,0,2022-12-24 01:01:55+00:00,[],None
597,https://github.com/Ahmed712441/Verilog-ATM-Machine.git,2022-12-25 13:27:24+00:00,,0,Ahmed712441/Verilog-ATM-Machine,582053176,Verilog,Verilog-ATM-Machine,243,0,2023-01-31 11:57:15+00:00,[],None
598,https://github.com/sumanthnimmakayala/iir6_multi_ext.git,2022-12-24 21:15:07+00:00,,0,sumanthnimmakayala/iir6_multi_ext,581915993,Verilog,iir6_multi_ext,3380,0,2022-12-24 21:15:24+00:00,[],https://api.github.com/licenses/apache-2.0
599,https://github.com/andreamifsud/mega4_rram_splits_r2.git,2022-12-24 19:46:23+00:00,,0,andreamifsud/mega4_rram_splits_r2,581901898,Verilog,mega4_rram_splits_r2,3592,0,2022-12-24 19:48:49+00:00,[],
600,https://github.com/alexm610/Exponent_Accelerator.git,2022-12-28 10:54:57+00:00,,0,alexm610/Exponent_Accelerator,582959451,Verilog,Exponent_Accelerator,12926,0,2023-02-13 19:25:09+00:00,[],None
601,https://github.com/ellen-wood/counter.git,2022-12-28 09:57:14+00:00,,0,ellen-wood/counter,582943288,Verilog,counter,1,0,2022-12-28 10:03:04+00:00,[],None
602,https://github.com/chandani18/SPI_CONTROLLER.git,2022-12-16 06:54:08+00:00,,0,chandani18/SPI_CONTROLLER,578904524,Verilog,SPI_CONTROLLER,229,0,2022-12-16 06:55:52+00:00,[],None
603,https://github.com/akash-ambekar/RTLtoGDSII-implementation-of-IEEE754-single-precision-floating-point-unit.git,2022-12-26 08:13:12+00:00,,0,akash-ambekar/RTLtoGDSII-implementation-of-IEEE754-single-precision-floating-point-unit,582250946,Verilog,RTLtoGDSII-implementation-of-IEEE754-single-precision-floating-point-unit,1269,0,2023-01-02 15:34:38+00:00,[],None
604,https://github.com/peter6677/EL467.git,2022-12-13 14:33:59+00:00,,0,peter6677/EL467,577791899,Verilog,EL467,21,0,2022-12-13 14:39:39+00:00,[],None
605,https://github.com/tekinmurat1/Proje_264.git,2022-12-18 19:12:15+00:00,Grup 42* Proje,0,tekinmurat1/Proje_264,579743242,Verilog,Proje_264,9,0,2022-12-18 20:04:22+00:00,[],None
606,https://github.com/anirudhSK/caravel_user_project.git,2022-12-19 21:33:48+00:00,,0,anirudhSK/caravel_user_project,580158716,Verilog,caravel_user_project,2217,0,2022-12-19 21:34:05+00:00,[],https://api.github.com/licenses/apache-2.0
607,https://github.com/jfstepha/my_risc.git,2022-12-23 18:14:26+00:00,,0,jfstepha/my_risc,581615584,Verilog,my_risc,32,0,2023-02-13 21:22:48+00:00,[],None
608,https://github.com/siweinstock/archlab4.git,2022-12-25 15:26:18+00:00,,0,siweinstock/archlab4,582078387,Verilog,archlab4,33,0,2023-05-06 08:03:08+00:00,[],None
609,https://github.com/greyqwilson/CS3650_MIPS32ALU.git,2022-12-22 18:29:22+00:00,This is a bare bones implementation of a MIPS32 ALU with a limited set of operations. ,0,greyqwilson/CS3650_MIPS32ALU,581274613,Verilog,CS3650_MIPS32ALU,6,0,2022-12-22 18:30:38+00:00,[],None
610,https://github.com/VioletteVee/APS.git,2022-12-19 09:55:23+00:00,,0,VioletteVee/APS,579932389,Verilog,APS,9,0,2022-12-19 09:58:00+00:00,[],None
611,https://github.com/arianniakan/MipsMultiCycleProcessor.git,2022-12-18 07:32:57+00:00,The Multi-Cycle hardware description of Mips processor done in Verilog HDL,0,arianniakan/MipsMultiCycleProcessor,579588838,Verilog,MipsMultiCycleProcessor,5,0,2023-09-13 11:38:44+00:00,[],None
612,https://github.com/nazimalagoz/firstrep.git,2022-12-18 18:34:55+00:00,,0,nazimalagoz/firstrep,579735572,Verilog,firstrep,1,0,2022-12-18 18:36:52+00:00,[],None
613,https://github.com/abdoibrahim257/FloatingPoint_Calc_Verilog.git,2022-12-19 18:08:15+00:00,Logic 2 course project,0,abdoibrahim257/FloatingPoint_Calc_Verilog,580100215,Verilog,FloatingPoint_Calc_Verilog,47,0,2023-01-28 13:20:25+00:00,[],None
614,https://github.com/mukullokhande99/jubilant-funicular.git,2022-12-29 15:47:17+00:00,,0,mukullokhande99/jubilant-funicular,583378155,Verilog,jubilant-funicular,329206,0,2022-12-29 15:47:33+00:00,[],https://api.github.com/licenses/apache-2.0
615,https://github.com/taeyoup/FPGA-Digital-Stopwatch.git,2022-12-28 08:12:54+00:00,,0,taeyoup/FPGA-Digital-Stopwatch,582914976,Verilog,FPGA-Digital-Stopwatch,10,0,2022-12-28 08:20:54+00:00,[],None
616,https://github.com/WilberDE/Practice.git,2022-12-16 01:32:47+00:00,,0,WilberDE/Practice,578832223,Verilog,Practice,2210,0,2022-12-16 01:33:01+00:00,[],https://api.github.com/licenses/apache-2.0
617,https://github.com/Anmol-S314/iiitb_sfifo_mpw8.git,2022-12-16 17:54:36+00:00,,0,Anmol-S314/iiitb_sfifo_mpw8,579118954,Verilog,iiitb_sfifo_mpw8,5151,0,2022-12-16 17:54:49+00:00,[],https://api.github.com/licenses/apache-2.0
618,https://github.com/VrushabhDamle/sky130CLA.git,2022-12-30 15:39:19+00:00,,0,VrushabhDamle/sky130CLA,583692552,Verilog,sky130CLA,58508,0,2022-12-30 16:11:44+00:00,[],https://api.github.com/licenses/apache-2.0
619,https://github.com/sajjadahmed677/azadi-v3.git,2022-12-30 16:36:18+00:00,,0,sajjadahmed677/azadi-v3,583707149,Verilog,azadi-v3,51024,0,2022-12-30 16:36:34+00:00,[],https://api.github.com/licenses/apache-2.0
620,https://github.com/Scrawach/spi.git,2022-12-30 09:00:16+00:00,Serial peripheral interface module written in verilog.,0,Scrawach/spi,583593939,Verilog,spi,6,0,2023-01-04 22:48:44+00:00,"['rtl', 'spi', 'tranceiver']",None
621,https://github.com/mohithharsha/fastmul_16x16.git,2022-12-30 09:51:20+00:00,,0,mohithharsha/fastmul_16x16,583606388,Verilog,fastmul_16x16,3361,0,2022-12-30 09:51:38+00:00,[],https://api.github.com/licenses/apache-2.0
622,https://github.com/Appledee/System_Verilog.git,2022-12-23 21:50:34+00:00,,0,Appledee/System_Verilog,581662339,Verilog,System_Verilog,3,0,2022-12-23 22:03:43+00:00,[],None
623,https://github.com/akhilesh911/caravel_prj.git,2022-12-23 08:57:36+00:00,,0,akhilesh911/caravel_prj,581462114,Verilog,caravel_prj,2206,0,2022-12-23 09:02:05+00:00,[],https://api.github.com/licenses/apache-2.0
624,https://github.com/Creperi/VerilogDemos.git,2022-12-23 23:54:00+00:00,,0,Creperi/VerilogDemos,581682503,Verilog,VerilogDemos,208,0,2022-12-23 23:57:08+00:00,[],None
