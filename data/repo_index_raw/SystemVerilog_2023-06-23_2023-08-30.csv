,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/Xilinx/RecoNIC.git,2023-08-09 13:26:42+00:00,RecoNIC is a software/hardware shell used to enable network-attached processing within an RDMA-featured SmartNIC for scale-out computing.,9,Xilinx/RecoNIC,676557566,SystemVerilog,RecoNIC,1344,61,2024-04-03 15:58:33+00:00,[],https://api.github.com/licenses/mit
1,https://github.com/rprimas/ascon-verilog.git,2023-08-29 17:01:10+00:00,Verilog Hardware Design of Ascon v1.2,4,rprimas/ascon-verilog,684695406,SystemVerilog,ascon-verilog,278,17,2024-03-13 14:48:55+00:00,"['authenticated-encryption', 'hardware-designs', 'lightweight-cryptography', 'symmetric-key-cryptography']",https://api.github.com/licenses/cc0-1.0
2,https://github.com/LainChip/complex_loong_cpu.git,2023-08-10 15:02:23+00:00,"complex version of Lain Core, loongarch32r cpu core. THIS IS POWER!!",1,LainChip/complex_loong_cpu,677025126,SystemVerilog,complex_loong_cpu,38616,15,2024-03-31 08:54:40+00:00,[],https://api.github.com/licenses/gpl-3.0
3,https://github.com/nathaliafab/Projeto_IH_RISC-V.git,2023-07-06 17:49:18+00:00,Arquivos base para o projeto da disciplina Infraestrutura de Hardware (IF674) no CIn-UFPE.,25,nathaliafab/Projeto_IH_RISC-V,663167309,SystemVerilog,Projeto_IH_RISC-V,24202,13,2023-11-01 17:08:49+00:00,"['processor', 'risc-v', 'systemverilog', 'ufpe']",https://api.github.com/licenses/mit
4,https://github.com/AliLRS/RISC-V_Microprogrammed.git,2023-06-24 15:36:53+00:00,,1,AliLRS/RISC-V_Microprogrammed,658044322,SystemVerilog,RISC-V_Microprogrammed,481,13,2024-03-29 12:37:18+00:00,"['computer-architecture', 'microarchitecture', 'microprogrammed', 'microprogrammed-control-unit', 'risc-v', 'riscv']",None
5,https://github.com/Artityagi123456789/-100dasofSystemVerilog.git,2023-08-27 10:08:16+00:00,System Verilog using Functional Verification,0,Artityagi123456789/-100dasofSystemVerilog,683665368,SystemVerilog,-100dasofSystemVerilog,7161,9,2024-02-04 00:09:36+00:00,"['arrays-and-strings', 'associative-array', 'constraints', 'mailbox', 'oop-concepts', 'randomization', 'systemverilog', 'systemverilog-test-bench']",None
6,https://github.com/pezy-computing/pztb-core.git,2023-07-31 07:07:13+00:00,,0,pezy-computing/pztb-core,672788828,SystemVerilog,pztb-core,219,7,2024-03-05 15:36:10+00:00,[],https://api.github.com/licenses/apache-2.0
7,https://github.com/LainChip/simple_loong_cpu.git,2023-08-17 05:32:33+00:00,"simple version of Lain Core, loongarch32r cpu core",0,LainChip/simple_loong_cpu,679555589,SystemVerilog,simple_loong_cpu,121413,7,2023-11-17 04:34:01+00:00,[],https://api.github.com/licenses/gpl-3.0
8,https://github.com/Ghonimo/Pre_Silicon-AHB-to_APB-Verification.git,2023-08-03 20:07:32+00:00,"Comprehensive verification suite for the AHB2APB Bridge design, featuring SystemVerilog and UVM-based methodologies. 🌉🚀",2,Ghonimo/Pre_Silicon-AHB-to_APB-Verification,674381490,SystemVerilog,Pre_Silicon-AHB-to_APB-Verification,14108,7,2024-03-24 00:22:06+00:00,"['digital-design', 'questasim', 'semiconductor', 'simulation', 'systemverilog', 'testbench', 'uvm', 'uvm-verification', 'verification', 'verification-methodologies', 'vip', 'ahb2apb']",https://api.github.com/licenses/mit
9,https://github.com/microsoft/cheriot-safe.git,2023-07-07 17:29:26+00:00,Repo for CHERI development system,4,microsoft/cheriot-safe,663606079,SystemVerilog,cheriot-safe,834,6,2024-04-01 09:26:31+00:00,[],https://api.github.com/licenses/apache-2.0
10,https://github.com/asimkhan8107/UVM-30DAYS.git,2023-07-04 05:05:36+00:00,30 days of UVM to cover all-most all concept of UVM ,1,asimkhan8107/UVM-30DAYS,661973616,SystemVerilog,UVM-30DAYS,13606,6,2024-03-24 15:53:40+00:00,[],None
11,https://github.com/renfei147/nscscc2023.git,2023-07-13 15:39:02+00:00,,1,renfei147/nscscc2023,666051607,SystemVerilog,nscscc2023,7846,5,2024-03-21 13:33:03+00:00,[],None
12,https://github.com/hewertonfl/ARM-SingleCycle-Instructions-Implementation.git,2023-07-09 14:39:28+00:00,,0,hewertonfl/ARM-SingleCycle-Instructions-Implementation,664297240,SystemVerilog,ARM-SingleCycle-Instructions-Implementation,2837,5,2024-03-27 13:22:24+00:00,[],None
13,https://github.com/janomach/the-hardisc.git,2023-08-26 11:14:43+00:00,Hardened RISC-V core,1,janomach/the-hardisc,683374608,SystemVerilog,the-hardisc,830,5,2024-02-04 19:00:12+00:00,"['automotive', 'core', 'cpu', 'error-correcting-codes', 'fpga', 'hardware', 'microcontroller', 'reliability', 'risc-v', 'safety', 'space', 'verilog']",https://api.github.com/licenses/apache-2.0
14,https://github.com/Youssefmdany/Design-and-UVM-TB-of-RISC-V-Microprocessor.git,2023-08-24 23:09:36+00:00,Design and UVM-TB of RISC -V Microprocessor,0,Youssefmdany/Design-and-UVM-TB-of-RISC-V-Microprocessor,682782103,SystemVerilog,Design-and-UVM-TB-of-RISC-V-Microprocessor,29,5,2023-12-23 14:51:20+00:00,[],None
15,https://github.com/asimkhan8107/SystemVerilog_30DAYS.git,2023-07-04 03:10:41+00:00,30 days of System Verilog to finish complete System verilog,1,asimkhan8107/SystemVerilog_30DAYS,661945448,SystemVerilog,SystemVerilog_30DAYS,1793,5,2024-03-24 15:53:43+00:00,[],None
16,https://github.com/hamza-akhtar-dev/pak-rv-core.git,2023-08-09 16:38:54+00:00,,1,hamza-akhtar-dev/pak-rv-core,676633234,SystemVerilog,pak-rv-core,1179,5,2023-12-28 11:51:36+00:00,[],None
17,https://github.com/tom-urkin/AMBA.git,2023-07-20 08:15:23+00:00,"AHB-lite, AHB-APB bridge and extended APB side architecture in SystemVerilog",0,tom-urkin/AMBA,668616639,SystemVerilog,AMBA,7426,5,2024-01-12 12:03:09+00:00,[],None
18,https://github.com/scalable-arch/AIDCLite.git,2023-07-05 02:45:47+00:00,,1,scalable-arch/AIDCLite,662382178,SystemVerilog,AIDCLite,5803,3,2023-07-27 08:26:08+00:00,[],https://api.github.com/licenses/cern-ohl-p-2.0
19,https://github.com/jpdoane/nesfpga.git,2023-08-16 02:00:42+00:00,Mario on an FPGA,2,jpdoane/nesfpga,679051393,SystemVerilog,nesfpga,18438,3,2024-02-27 03:57:48+00:00,[],None
20,https://github.com/PRADEEPCHANGAL/APB-Protocol-Verification-using-UVM.git,2023-08-02 16:31:07+00:00,APB verification using UVM ,3,PRADEEPCHANGAL/APB-Protocol-Verification-using-UVM,673882913,SystemVerilog,APB-Protocol-Verification-using-UVM,286,3,2024-02-11 04:39:36+00:00,"['apb', 'systemverilog', 'systemverilog-test-bench', 'verification', 'apb-systemverilog', 'apb-verification', 'apb-verification-using-uvm']",None
21,https://github.com/jpdoane/2c02.git,2023-07-04 23:38:37+00:00,HDL clone of NES picutre processing unit (PPU),1,jpdoane/2c02,662342615,SystemVerilog,2c02,126,3,2024-02-27 03:58:26+00:00,[],None
22,https://github.com/ghz-ws/fpga_sv.git,2023-07-17 00:20:18+00:00,SystemVerilog Sample codes,0,ghz-ws/fpga_sv,667194347,SystemVerilog,fpga_sv,13,3,2024-02-13 01:49:52+00:00,[],https://api.github.com/licenses/mit
23,https://github.com/mfkiwl/Open-HiPU200.git,2023-08-17 16:50:05+00:00,"HiPU200 open-source version is a DNN accelerator, using RISC-V instruction set and customized vector/matrix extension.",2,mfkiwl/Open-HiPU200,679803202,,Open-HiPU200,179,3,2024-04-11 07:53:23+00:00,[],None
24,https://github.com/planvtech/ace.git,2023-06-28 12:47:38+00:00,,3,planvtech/ace,659731865,SystemVerilog,ace,103,3,2024-03-26 11:28:51+00:00,[],
25,https://github.com/oscc-ip/vga.git,2023-08-08 02:22:49+00:00,An AXI4-based VGA Controller,0,oscc-ip/vga,675905891,SystemVerilog,vga,381,3,2023-12-25 13:20:49+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
26,https://github.com/Youssefmdany/Design-and-UVM-Verification-of-an-ALU.git,2023-07-06 20:38:16+00:00,Design and UVM Verification of an ALU,0,Youssefmdany/Design-and-UVM-Verification-of-an-ALU,663223071,SystemVerilog,Design-and-UVM-Verification-of-an-ALU,2954,3,2024-03-09 19:48:32+00:00,[],None
27,https://github.com/thesourcerer8/nand_controller.git,2023-08-01 17:17:37+00:00,"NAND Controller, targeting ONFI and non-compliant flash",0,thesourcerer8/nand_controller,673461788,SystemVerilog,nand_controller,506,3,2024-01-08 21:21:27+00:00,[],https://api.github.com/licenses/lgpl-2.1
28,https://github.com/shapoco/accelbrot.git,2023-07-24 10:55:29+00:00,"A high-speed, high-precision Mandelbrot set accelerator for FPGAs",0,shapoco/accelbrot,670125792,SystemVerilog,accelbrot,1221,3,2024-01-07 06:05:37+00:00,[],None
29,https://github.com/kalai-rajan/Design-Verification-APB-RAM.git,2023-08-15 07:15:31+00:00,,0,kalai-rajan/Design-Verification-APB-RAM,678706779,SystemVerilog,Design-Verification-APB-RAM,9,3,2024-01-30 16:20:21+00:00,[],None
30,https://github.com/Kholoud-Ebrahim/Synchronous_FIFO.git,2023-08-14 00:53:32+00:00,"A simple synch FIFO designed in Verilog and verified in UVM methodology including scoreboards, coverage collector, also code coverage and functional coverage reports etc.",1,Kholoud-Ebrahim/Synchronous_FIFO,678187113,SystemVerilog,Synchronous_FIFO,7463,3,2024-01-26 02:07:55+00:00,[],None
31,https://github.com/taichi-ishitani/rice.git,2023-07-03 13:09:24+00:00,,2,taichi-ishitani/rice,661703799,SystemVerilog,rice,280,3,2024-01-08 01:54:29+00:00,"['risc-v', 'riscv', 'systemverilog', 'uvm']",https://api.github.com/licenses/apache-2.0
32,https://github.com/Karthikeyan564/uEyeriss.git,2023-08-07 02:33:54+00:00,,0,Karthikeyan564/uEyeriss,675474781,SystemVerilog,uEyeriss,1989,2,2024-02-23 03:50:53+00:00,[],None
33,https://github.com/MuhammadAmmarMalik/CSR-Implemented_5StagPipelinedProcessor.git,2023-08-15 15:08:58+00:00,,0,MuhammadAmmarMalik/CSR-Implemented_5StagPipelinedProcessor,678866953,SystemVerilog,CSR-Implemented_5StagPipelinedProcessor,22,2,2023-09-06 17:26:30+00:00,[],None
34,https://github.com/pulp-platform/axi_rt.git,2023-07-07 12:22:35+00:00,,4,pulp-platform/axi_rt,663493155,SystemVerilog,axi_rt,115,2,2024-03-18 02:35:36+00:00,[],
35,https://github.com/uiuc-sigarch/sigarch-rtl-project-template.git,2023-07-22 06:54:52+00:00,SIGARCH RTL Project Template,4,uiuc-sigarch/sigarch-rtl-project-template,669403106,SystemVerilog,sigarch-rtl-project-template,15,2,2023-10-06 06:19:03+00:00,[],None
36,https://github.com/MayaLasheen/SVA-ALU-Verification.git,2023-08-20 19:35:04+00:00,,0,MayaLasheen/SVA-ALU-Verification,680907707,SystemVerilog,SVA-ALU-Verification,29,2,2024-01-15 12:58:23+00:00,[],https://api.github.com/licenses/mit
37,https://github.com/pulp-platform/neureka.git,2023-08-11 13:37:43+00:00,,1,pulp-platform/neureka,677402368,SystemVerilog,neureka,177,2,2024-03-11 19:19:00+00:00,[],
38,https://github.com/meeeeet/UART-DesignAndVerification.git,2023-07-12 15:40:22+00:00,,0,meeeeet/UART-DesignAndVerification,665615886,SystemVerilog,UART-DesignAndVerification,81,2,2024-03-05 03:59:46+00:00,"['rtl-design-and-verification', 'serial-communication', 'systemverilog', 'uart', 'uart-verilog']",https://api.github.com/licenses/gpl-3.0
39,https://github.com/mahdimoeini8102/DigitalSystems_IEEE754-2019.git,2023-08-15 17:16:28+00:00,"This is the last (6th) project of the Digital System course at the university. In this project, I have implemented a complete multiplier base on IEEE 754-2019 using SystemVerilog HDL(Hardware Description Language) and then I have synthesized them. ",0,mahdimoeini8102/DigitalSystems_IEEE754-2019,678914642,SystemVerilog,DigitalSystems_IEEE754-2019,21609,2,2023-11-08 04:54:25+00:00,[],None
40,https://github.com/DhalavaiN/slow-and-fast-division-algorithm.git,2023-06-28 15:20:04+00:00,,0,DhalavaiN/slow-and-fast-division-algorithm,659796488,SystemVerilog,slow-and-fast-division-algorithm,12777,2,2024-01-23 05:49:49+00:00,[],None
41,https://github.com/UCLA-SEAL/HFuzz.git,2023-08-25 16:27:43+00:00,FSE 2023 Leveraging Hardware Probes and Optimizations for Accelerating Fuzz Testing of Heterogeneous Applications,0,UCLA-SEAL/HFuzz,683115090,SystemVerilog,HFuzz,39797,2,2024-03-28 08:19:14+00:00,[],https://api.github.com/licenses/bsd-3-clause
42,https://github.com/zouaghista/Asynchronous_Fifo_Testbench.git,2023-07-29 15:33:12+00:00,A test bench for asynchronous fifos,0,zouaghista/Asynchronous_Fifo_Testbench,672296469,SystemVerilog,Asynchronous_Fifo_Testbench,9,2,2024-01-18 07:27:27+00:00,"['integrated-circuits', 'verification', 'verilog-project']",None
43,https://github.com/snevindsouza/8-Bit-Even-up-Counter-SystemVerilog.git,2023-08-08 12:38:04+00:00,"Counter that counts even numbers is created using a chain of eight D flip-flops. An OOP-based test bench and a package is developed to verify the counter's functionality as a black box and compare its output against the expected even number sequence. The design was implemented in two approaches i.e, asynchronous and synchronous structures.",0,snevindsouza/8-Bit-Even-up-Counter-SystemVerilog,676100787,SystemVerilog,8-Bit-Even-up-Counter-SystemVerilog,18,2,2023-10-21 11:24:17+00:00,"['fpga', 'systemverilog', 'verilog', 'vhdl']",https://api.github.com/licenses/mit
44,https://github.com/Youssefmdany/Design-and-UVM-Verification-of-The-SPI-Master_Controller-.git,2023-08-06 01:11:04+00:00,Design and UVM Verification of The SPI Master Controller ,0,Youssefmdany/Design-and-UVM-Verification-of-The-SPI-Master_Controller-,675155117,SystemVerilog,Design-and-UVM-Verification-of-The-SPI-Master_Controller-,15191,2,2023-12-08 12:14:25+00:00,[],None
45,https://github.com/ateeb02/RISC-V-C-Extension-Module.git,2023-07-03 19:52:34+00:00,,0,ateeb02/RISC-V-C-Extension-Module,661849579,SystemVerilog,RISC-V-C-Extension-Module,8,2,2023-07-11 10:40:19+00:00,[],None
46,https://github.com/Daniyal-Tahsildar/FIFO_TB_UVM.git,2023-08-12 14:23:09+00:00,Implementation of a Synchronous FIFO along with a Testbench developed using UVM,0,Daniyal-Tahsildar/FIFO_TB_UVM,677753113,SystemVerilog,FIFO_TB_UVM,242,2,2023-12-05 08:32:30+00:00,[],None
47,https://github.com/AhmedOsama2000/AES_128.git,2023-08-30 16:31:23+00:00,Advanced Encryption Standard (AES-128bits),0,AhmedOsama2000/AES_128,685158914,SystemVerilog,AES_128,321,2,2024-03-23 06:13:52+00:00,[],None
48,https://github.com/jaketobrien/Sigma-Delta-Modulator.git,2023-08-01 00:24:18+00:00,Sigma-Delta Modulator designed using Verilog,0,jaketobrien/Sigma-Delta-Modulator,673131615,SystemVerilog,Sigma-Delta-Modulator,4,1,2023-08-01 00:34:35+00:00,[],https://api.github.com/licenses/mit
49,https://github.com/sivaram-07/Async-FIFO.git,2023-08-29 15:32:38+00:00,,0,sivaram-07/Async-FIFO,684657231,SystemVerilog,Async-FIFO,26,1,2023-09-12 06:46:43+00:00,[],None
50,https://github.com/Swapnil-Jain1121/System_Verilog.git,2023-08-17 12:42:34+00:00,,0,Swapnil-Jain1121/System_Verilog,679706191,SystemVerilog,System_Verilog,1820,1,2023-11-09 06:07:16+00:00,[],None
51,https://github.com/VLSIProjects/Async_fifo.git,2023-07-12 13:56:34+00:00,,0,VLSIProjects/Async_fifo,665572627,SystemVerilog,Async_fifo,24,1,2023-07-15 12:39:01+00:00,[],None
52,https://github.com/yanateja/axis_maxpool.git,2023-07-04 11:42:55+00:00,packaged maxpool design,0,yanateja/axis_maxpool,662115302,SystemVerilog,axis_maxpool,27,1,2023-12-02 06:55:33+00:00,[],None
53,https://github.com/oga-engineering/codma_uvm.git,2023-08-14 12:57:36+00:00,"UVM style testbench for the CODMA project, used to strengthen my knowledge and skills in UVM. This project is a work in progress.",0,oga-engineering/codma_uvm,678393078,SystemVerilog,codma_uvm,29,1,2023-12-03 09:40:22+00:00,[],None
54,https://github.com/gouthampalem2/32-bit-Single-Precision-Floating-Point-Multiplier.git,2023-07-09 17:39:52+00:00,"System Verilog Project with Design and Verification Using Assertions, Coverage and Randomization",0,gouthampalem2/32-bit-Single-Precision-Floating-Point-Multiplier,664347386,SystemVerilog,32-bit-Single-Precision-Floating-Point-Multiplier,3476,1,2024-02-14 14:29:18+00:00,[],None
55,https://github.com/richardyilin/Superscalar-Processor-with-Tomasulo-Algorithm.git,2023-06-30 03:32:54+00:00,,0,richardyilin/Superscalar-Processor-with-Tomasulo-Algorithm,660452151,SystemVerilog,Superscalar-Processor-with-Tomasulo-Algorithm,43,1,2024-03-21 23:48:50+00:00,[],None
56,https://github.com/yurinvv/cross_bar.git,2023-07-28 14:30:32+00:00,,0,yurinvv/cross_bar,671954000,SystemVerilog,cross_bar,846,1,2023-10-17 13:28:23+00:00,[],None
57,https://github.com/MuhammadAmmarMalik/RV32I-5-Stage-Single-Cycle-Processor.git,2023-08-06 14:50:42+00:00,RV32I Single cycle 5 Stage processor that support Six types of instruction excluding CSR's,0,MuhammadAmmarMalik/RV32I-5-Stage-Single-Cycle-Processor,675324815,SystemVerilog,RV32I-5-Stage-Single-Cycle-Processor,12,1,2023-09-06 17:26:49+00:00,[],None
58,https://github.com/victor-welter/EC6-PVLSI-SystemVerilog.git,2023-08-14 23:37:23+00:00,"Algoritmos de descrição de hardware feitos em SystemVerilog durante as aulas de PROJETO VLSI, do 6° semestre do curso de Engenharia de Computação - SETREM.",0,victor-welter/EC6-PVLSI-SystemVerilog,678596900,SystemVerilog,EC6-PVLSI-SystemVerilog,15362,1,2023-10-13 14:40:29+00:00,"['hdl', 'systemverilog']",None
59,https://github.com/kalai-rajan/Design-and-Verification-of-UART-Protocol.git,2023-06-24 17:07:38+00:00,,0,kalai-rajan/Design-and-Verification-of-UART-Protocol,658069654,SystemVerilog,Design-and-Verification-of-UART-Protocol,39,1,2023-07-07 09:45:38+00:00,[],None
60,https://github.com/vyom-elan/UVM.git,2023-07-04 14:34:20+00:00,,0,vyom-elan/UVM,662184383,SystemVerilog,UVM,49,1,2023-07-09 04:54:04+00:00,[],https://api.github.com/licenses/mit
61,https://github.com/PRAGATI-0102/Edge-Detector-using-SV-Day-077-.git,2023-06-25 18:43:53+00:00,The purpose of this circuit is to identify and generate single-cycle pulses when the incoming input signal experiences a rising or falling edge.,0,PRAGATI-0102/Edge-Detector-using-SV-Day-077-,658440499,SystemVerilog,Edge-Detector-using-SV-Day-077-,28,1,2023-06-29 07:18:27+00:00,[],None
62,https://github.com/subhamball/Verilog_systemVerilog.git,2023-08-18 17:47:17+00:00,,0,subhamball/Verilog_systemVerilog,680245451,SystemVerilog,Verilog_systemVerilog,33,1,2023-11-21 14:25:02+00:00,[],None
63,https://github.com/OpenXiangShan/Penglai-SagittaVerificationPlatform.git,2023-08-17 07:24:40+00:00,Sagitta_verification_platform from Penglai,3,OpenXiangShan/Penglai-SagittaVerificationPlatform,679592906,SystemVerilog,Penglai-SagittaVerificationPlatform,6195,1,2023-08-25 09:47:00+00:00,[],None
64,https://github.com/2Martina/AES-128.git,2023-08-19 17:39:52+00:00,"Advanced encryption standard:  Controlled by 2 finite state machines, it consists of 10 rounds. Modules: key expansion, add round key, sub bytes, shift rows, mix columns",0,2Martina/AES-128,680577429,SystemVerilog,AES-128,647,1,2023-08-20 00:15:37+00:00,[],None
65,https://github.com/cuixuyang615/RNN_HW.git,2023-07-03 17:41:59+00:00,hardware design of rnn network,0,cuixuyang615/RNN_HW,661808738,SystemVerilog,RNN_HW,5638,1,2024-02-29 03:23:05+00:00,[],None
66,https://github.com/PRAGATI-0102/Up-Counter-using-SV-Day-080-.git,2023-06-28 18:22:06+00:00,An up counter is a digital circuit that counts upwards from an initial value to a specified maximum value.,0,PRAGATI-0102/Up-Counter-using-SV-Day-080-,659864377,SystemVerilog,Up-Counter-using-SV-Day-080-,61,1,2023-06-29 07:18:23+00:00,[],None
67,https://github.com/HusniMahdi/APB2SPI.git,2023-07-03 19:36:01+00:00,Verification of a Basic APB2SPI module. ,0,HusniMahdi/APB2SPI,661844859,SystemVerilog,APB2SPI,7376,1,2023-08-09 08:22:07+00:00,[],None
68,https://github.com/ayush-agarwal-0502/Scan-Chain-DFT-System-Verilog.git,2023-07-09 13:23:44+00:00,System Verilog implementation of scan flop for usage in Scan Chain for DFT (Design for testability) ,0,ayush-agarwal-0502/Scan-Chain-DFT-System-Verilog,664276317,SystemVerilog,Scan-Chain-DFT-System-Verilog,2,1,2023-07-09 13:24:49+00:00,[],None
69,https://github.com/MuhammadHammad001/UART-Transmitter-using-SV.git,2023-08-28 09:32:02+00:00,Data path and Controller design in SystemVerilog for UART Transmitter,0,MuhammadHammad001/UART-Transmitter-using-SV,684020661,SystemVerilog,UART-Transmitter-using-SV,3,1,2023-09-08 04:53:06+00:00,[],None
70,https://github.com/KeenanRileyFaulkner/bfasster.git,2023-07-25 18:03:44+00:00,,0,KeenanRileyFaulkner/bfasster,670736117,SystemVerilog,bfasster,85,1,2023-08-07 22:26:55+00:00,[],None
71,https://github.com/look4raghav/DPI-SV.git,2023-06-24 16:51:51+00:00,DPI SystemVerilog,0,look4raghav/DPI-SV,658065283,SystemVerilog,DPI-SV,13,1,2023-11-27 07:32:03+00:00,[],https://api.github.com/licenses/mit
72,https://github.com/Mayank27Vaghela/APB-Protocol.git,2023-08-07 08:22:25+00:00,APB VIP,0,Mayank27Vaghela/APB-Protocol,675570644,SystemVerilog,APB-Protocol,535,1,2023-10-04 02:46:01+00:00,[],None
73,https://github.com/MuhammadAmmarMalik/sequence-detector-11.git,2023-08-06 16:12:50+00:00,Sequence Detector using Mealy Finite State Machine,0,MuhammadAmmarMalik/sequence-detector-11,675348064,SystemVerilog,sequence-detector-11,4,1,2023-09-06 17:26:10+00:00,[],None
74,https://github.com/MuhammadAmmarMalik/RV32I-Pipeline-Processor.git,2023-08-06 15:13:30+00:00,RV32I Pipelined 5 Stage processor that support Six types of instruction excluding CSR's,0,MuhammadAmmarMalik/RV32I-Pipeline-Processor,675331114,SystemVerilog,RV32I-Pipeline-Processor,37,1,2023-09-06 17:26:39+00:00,[],None
75,https://github.com/tvsVLSI/MOD_12_COUNTER_SystemVerilog.git,2023-08-21 05:53:24+00:00,Verification Plan for Mod-12 Up/down Loadable Counter,0,tvsVLSI/MOD_12_COUNTER_SystemVerilog,681032314,SystemVerilog,MOD_12_COUNTER_SystemVerilog,12,1,2024-01-26 07:34:15+00:00,[],None
76,https://github.com/ayush-agarwal-0502/CDC-Synchronizer-System-Verilog.git,2023-06-25 16:28:15+00:00,Implementation of Synchronizer design for Clock Domain Crossing applications in VLSI using System Verilog ,0,ayush-agarwal-0502/CDC-Synchronizer-System-Verilog,658402230,SystemVerilog,CDC-Synchronizer-System-Verilog,8,1,2023-06-25 16:47:20+00:00,[],None
77,https://github.com/MihaiRazvanIonut/BinaryCalculator_Verilog.git,2023-07-04 18:54:57+00:00,,0,MihaiRazvanIonut/BinaryCalculator_Verilog,662276509,SystemVerilog,BinaryCalculator_Verilog,3,1,2023-11-08 06:00:19+00:00,[],None
78,https://github.com/ayush-agarwal-0502/Duplex-UART-System-Verilog.git,2023-07-09 12:59:59+00:00,System Verilog implementation of duplex Universal Asynchronous Receiver Transmitter (UART) for 7 bit data packet,0,ayush-agarwal-0502/Duplex-UART-System-Verilog,664269813,SystemVerilog,Duplex-UART-System-Verilog,6,1,2023-07-09 13:04:36+00:00,[],None
79,https://github.com/Youssefmdany/Design-and-UVM-Verification-of-The-I2C-Master_Controller.git,2023-07-18 23:01:01+00:00,Design and UVM Verification of The I2C Master Controller,0,Youssefmdany/Design-and-UVM-Verification-of-The-I2C-Master_Controller,668050432,SystemVerilog,Design-and-UVM-Verification-of-The-I2C-Master_Controller,22196,1,2023-08-02 01:46:06+00:00,[],None
80,https://github.com/axyrai/singlePortRAM.git,2023-07-31 09:57:11+00:00,,1,axyrai/singlePortRAM,672848681,SystemVerilog,singlePortRAM,1209,1,2023-08-03 04:28:12+00:00,[],None
81,https://github.com/ZixiBenZhang/ml4dv.git,2023-08-01 12:59:52+00:00,LLM4DV,1,ZixiBenZhang/ml4dv,673359219,SystemVerilog,ml4dv,77226,1,2024-01-15 08:38:10+00:00,[],https://api.github.com/licenses/apache-2.0
82,https://github.com/varunram2001/VerliogCodes.git,2023-07-29 04:55:49+00:00,This repository contains all the Verilog codes and their testbenches that I have compiled as a part of my academic journey in Electronics and Communication Engineering. ,0,varunram2001/VerliogCodes,672150074,SystemVerilog,VerliogCodes,1324,1,2024-03-22 21:20:30+00:00,"['verilog', 'verilog-hdl']",None
83,https://github.com/PRAGATI-0102/Binary-to-Gray-using-SV-Day-079-.git,2023-06-27 17:28:25+00:00,The binary to gray converter is a digital circuit that takes a binary input and produces the corresponding gray code output.,0,PRAGATI-0102/Binary-to-Gray-using-SV-Day-079-,659371061,SystemVerilog,Binary-to-Gray-using-SV-Day-079-,85,1,2023-06-29 07:18:24+00:00,[],None
84,https://github.com/FAMAF-resources/3ro_2C-Arquitectura_de_Computadoras-FAMAF.git,2023-07-17 03:02:29+00:00,3ro 2C - Arquitectura de Computadoras - FAMAF,0,FAMAF-resources/3ro_2C-Arquitectura_de_Computadoras-FAMAF,667225482,SystemVerilog,3ro_2C-Arquitectura_de_Computadoras-FAMAF,68444,1,2023-08-08 17:51:57+00:00,"['famaf', 'arqc', 'arqcomp', 'resources']",https://api.github.com/licenses/mit
85,https://github.com/scalable-arch/100kSV.git,2023-08-24 13:24:08+00:00,,9,scalable-arch/100kSV,682577799,SystemVerilog,100kSV,929,1,2023-09-15 06:21:15+00:00,[],None
86,https://github.com/aaronghosh/Hamming-Code-in-System-Verilog-for-Error-Detection-and-Correction.git,2023-08-12 16:50:48+00:00,This project aims to illustrate the practical implementation of Hamming Code encoding and decoding using the SystemVerilog hardware description language.,1,aaronghosh/Hamming-Code-in-System-Verilog-for-Error-Detection-and-Correction,677794779,SystemVerilog,Hamming-Code-in-System-Verilog-for-Error-Detection-and-Correction,31,1,2023-09-06 03:15:14+00:00,[],None
87,https://github.com/kirollos9/mux_uvm.git,2023-08-15 13:00:06+00:00,it uvm verification for mux,0,kirollos9/mux_uvm,678817570,SystemVerilog,mux_uvm,2,1,2023-12-17 12:05:57+00:00,[],None
88,https://github.com/alex-maiorov/Riscv-core-with-verification.git,2023-07-11 02:55:51+00:00,Ideally will at some point be a 5 stage pipeline in-order RISCV-32IAMZicsr core. Possibly with other extensions later,0,alex-maiorov/Riscv-core-with-verification,664908300,SystemVerilog,Riscv-core-with-verification,932,1,2023-09-20 03:44:28+00:00,[],https://api.github.com/licenses/lgpl-2.1
89,https://github.com/kalai-rajan/-Design-and-Verification-of-SPI-Serial-Peripheral-Interface-Protocol.git,2023-07-20 03:24:34+00:00,,0,kalai-rajan/-Design-and-Verification-of-SPI-Serial-Peripheral-Interface-Protocol,668533221,SystemVerilog,-Design-and-Verification-of-SPI-Serial-Peripheral-Interface-Protocol,16,1,2023-08-23 06:28:49+00:00,[],None
90,https://github.com/humna2531/basic_verilog_codes.git,2023-08-10 19:59:58+00:00,,0,humna2531/basic_verilog_codes,677126181,SystemVerilog,basic_verilog_codes,14,1,2023-09-11 10:31:30+00:00,[],None
91,https://github.com/mjcarranza/mcarranza-digital-design-lab-2023.git,2023-08-22 01:08:45+00:00,Taller número 2 del curso Taller de Diseño Digital.,0,mjcarranza/mcarranza-digital-design-lab-2023,681414677,SystemVerilog,mcarranza-digital-design-lab-2023,58836,1,2024-02-20 21:47:54+00:00,[],None
92,https://github.com/MuhammadHammad001/Multiplier-using-Russian-Peasent-algorithm.git,2023-08-28 06:34:55+00:00,Data path and Controller design in SystemVerilog for a multiplier using Russian Peasant algorithm,0,MuhammadHammad001/Multiplier-using-Russian-Peasent-algorithm,683958493,SystemVerilog,Multiplier-using-Russian-Peasent-algorithm,402,1,2023-09-08 04:53:05+00:00,[],None
93,https://github.com/PRAGATI-0102/Odd-Counter-using-SV-Day-078-.git,2023-06-26 18:31:27+00:00,The purpose of the odd counter is to count the number of odd values encountered within a specified range.,0,PRAGATI-0102/Odd-Counter-using-SV-Day-078-,658906511,SystemVerilog,Odd-Counter-using-SV-Day-078-,27,1,2023-06-29 07:18:26+00:00,[],None
94,https://github.com/HACK-EVENT/hackatdac18.git,2023-08-08 00:19:40+00:00,,0,HACK-EVENT/hackatdac18,675878693,SystemVerilog,hackatdac18,22193,1,2023-11-09 04:49:33+00:00,[],
95,https://github.com/Daniyal-Tahsildar/AHB_UVC_DEVELOPMENT.git,2023-08-14 05:18:44+00:00,Development of AHB5 master and Slave UVC,0,Daniyal-Tahsildar/AHB_UVC_DEVELOPMENT,678244713,SystemVerilog,AHB_UVC_DEVELOPMENT,587,1,2023-08-24 17:44:06+00:00,[],None
96,https://github.com/psvishnu1/verilog_vishnups.git,2023-07-14 03:50:54+00:00,Verilog/SystemVerilog programs,0,psvishnu1/verilog_vishnups,666245230,SystemVerilog,verilog_vishnups,21,1,2023-12-21 04:54:51+00:00,[],None
97,https://github.com/soc-hub-fi/AnTiQ.git,2023-07-07 12:50:49+00:00,A hardware priority queue with constant response time written in SystemVerilog.,1,soc-hub-fi/AnTiQ,663502781,SystemVerilog,AnTiQ,66,1,2023-07-10 19:22:42+00:00,[],https://api.github.com/licenses/apache-2.0
98,https://github.com/PRAGATI-0102/Priority-Arbiter-using-SV-Day-083-.git,2023-07-01 17:01:26+00:00,A priority arbiter is a digital circuit that arbitrates between multiple input requests based on their priority and grants access to a shared resource or service.,1,PRAGATI-0102/Priority-Arbiter-using-SV-Day-083-,661060442,SystemVerilog,Priority-Arbiter-using-SV-Day-083-,47,1,2023-07-02 19:54:33+00:00,[],None
99,https://github.com/yayaelbasha/AES-128.git,2023-08-08 09:53:32+00:00,"AES-128 consists of 10 rounds, each round, a number of operations is done on the Plaintext using a round subkey. after the 10th round, the Ciphertext is ready.  This design prioritizes the cost and area, only one instance of each module is used to compute the rounds. I achieved this using an FSM Controller. The Ciphertext is ready after 12 cycles.",0,yayaelbasha/AES-128,676042652,SystemVerilog,AES-128,11,1,2023-11-07 06:57:13+00:00,[],None
100,https://github.com/realrusssobti/CPE133-Final-Project.git,2023-07-04 21:51:32+00:00,"The world's worst GPU/Powerpoint player , on a Basys 3 board + Image pre-processor in Python",0,realrusssobti/CPE133-Final-Project,662321943,SystemVerilog,CPE133-Final-Project,22039,1,2023-07-05 08:28:36+00:00,[],None
101,https://github.com/accelr-net/alveo-memory-tester.git,2023-07-25 06:28:32+00:00,Memory read write tester for Xilinx Alveo cards,1,accelr-net/alveo-memory-tester,670477278,SystemVerilog,alveo-memory-tester,2580,1,2023-08-08 06:03:20+00:00,[],None
102,https://github.com/ivansantiago-b/DSD.git,2023-08-26 19:41:25+00:00,DSD Vivado projects,0,ivansantiago-b/DSD,683507938,SystemVerilog,DSD,172,1,2023-12-10 00:49:19+00:00,[],None
103,https://github.com/Matthew-Otto/Drop-In-JTAG.git,2023-08-26 17:44:09+00:00,Open Source Silicon Development Testing Unit - Senior Design Project,0,Matthew-Otto/Drop-In-JTAG,683478145,SystemVerilog,Drop-In-JTAG,128,1,2023-11-18 17:16:49+00:00,[],
104,https://github.com/Ashwin-Rajesh/fpga_functiongen.git,2023-07-18 11:17:05+00:00,"A simple function generator for square, sine (using CORDIC) and sawtooth waveforms on the basys3 board (with PMOD DAC)",0,Ashwin-Rajesh/fpga_functiongen,667817181,SystemVerilog,fpga_functiongen,4433,1,2024-02-22 14:57:06+00:00,[],None
105,https://github.com/wasid-malik/real-time-audio-processing.git,2023-07-18 19:27:00+00:00,This repository contains the project files for a real-time audio processing system implemented on an FPGA using digital filters. The project focuses on the design and implementation of digital filters for audio signal processing. The main goal of the project is to showcase the efficient and real-time processing of audio signals using FPGA hardware.,0,wasid-malik/real-time-audio-processing,667998109,SystemVerilog,real-time-audio-processing,10,1,2024-03-02 07:13:34+00:00,[],None
106,https://github.com/opencomputeproject/HWMgmt-Module-DCSCM-LTPI.git,2023-08-21 14:26:27+00:00,DC-SCM LTPI Reference Implementation,1,opencomputeproject/HWMgmt-Module-DCSCM-LTPI,681218572,SystemVerilog,HWMgmt-Module-DCSCM-LTPI,1175,1,2024-03-20 18:18:29+00:00,[],https://api.github.com/licenses/mit
107,https://github.com/iianmelo/PipelineProject.git,2023-08-11 15:21:08+00:00,Projeto da disciplina Infraestrutura de Hardware do período 2023.1 no qual consiste na implementação de 21 funções em um processador RISC-V com pipeline simulado em SystemVerilog.,0,iianmelo/PipelineProject,677440141,SystemVerilog,PipelineProject,204,1,2024-03-25 20:27:13+00:00,[],None
108,https://github.com/vyom-elan/Synchronous-FIFO.git,2023-07-02 14:20:09+00:00,,0,vyom-elan/Synchronous-FIFO,661334280,SystemVerilog,Synchronous-FIFO,46,1,2023-07-23 17:41:10+00:00,[],None
109,https://github.com/bakermarcos/laoc.git,2023-06-28 00:34:15+00:00,,1,bakermarcos/laoc,659489029,SystemVerilog,laoc,139,1,2023-06-30 14:46:56+00:00,[],None
110,https://github.com/Chandu4522/Ethernet_MAC_Verification.git,2023-08-27 07:27:48+00:00,A project for the IP level verification of the Ethernet MAC module structured based on MAC 802.3 Communication standard using SystemVerilog and Universal Verification Methodology.,0,Chandu4522/Ethernet_MAC_Verification,683629274,SystemVerilog,Ethernet_MAC_Verification,16,1,2023-09-08 07:56:38+00:00,[],None
111,https://github.com/tranjas/Audio-Visualizer.git,2023-08-02 21:39:09+00:00,,0,tranjas/Audio-Visualizer,673979843,SystemVerilog,Audio-Visualizer,501,1,2023-08-02 21:46:06+00:00,[],None
112,https://github.com/acard6/ECE-385-final-project.git,2023-08-17 22:26:59+00:00,,0,acard6/ECE-385-final-project,679905792,SystemVerilog,ECE-385-final-project,2557,1,2023-08-17 22:35:33+00:00,[],None
113,https://github.com/Itaysht/Digital_Systems.git,2023-08-18 14:48:54+00:00,,0,Itaysht/Digital_Systems,680185905,SystemVerilog,Digital_Systems,17,1,2023-08-18 14:56:04+00:00,[],None
114,https://github.com/Daniyal-Tahsildar/AHB_IC_VERIFICATION.git,2023-08-12 08:19:33+00:00,,0,Daniyal-Tahsildar/AHB_IC_VERIFICATION,677666993,SystemVerilog,AHB_IC_VERIFICATION,607,1,2023-08-24 21:31:39+00:00,[],None
115,https://github.com/Vishwa533/FIFO.git,2023-08-13 11:31:52+00:00,"Verified FIFO functionality using System Verilog by creating a generator , driver , monitor , scoreboard ,  environment class and top module. Developed test scenarios to validate various aspects of FIFO functionality.  • Language : System Verilog",0,Vishwa533/FIFO,678005272,SystemVerilog,FIFO,18,1,2024-01-12 15:46:36+00:00,[],None
116,https://github.com/AlexBolotnikov/hints_systemveriog.git,2023-08-09 20:59:08+00:00,To avoid massive reliance upon memory retention I have decided to create a repository with some hints and tips to use and rely on   ,0,AlexBolotnikov/hints_systemveriog,676715987,SystemVerilog,hints_systemveriog,547,1,2023-12-05 14:08:11+00:00,[],https://api.github.com/licenses/unlicense
117,https://github.com/pmendozap/DL_II_23_ejemplos.git,2023-08-22 17:14:15+00:00,,0,pmendozap/DL_II_23_ejemplos,681748975,SystemVerilog,DL_II_23_ejemplos,10,1,2023-08-29 11:21:11+00:00,[],None
118,https://github.com/rayo17/drayodigital_design-_lab-_2023.git,2023-08-18 19:16:48+00:00,,0,rayo17/drayodigital_design-_lab-_2023,680274171,SystemVerilog,drayodigital_design-_lab-_2023,319547,1,2023-09-13 16:06:14+00:00,[],None
119,https://github.com/PeterHsu25425108/DCS.git,2023-06-30 13:01:08+00:00,Archive for DCS 2023,0,PeterHsu25425108/DCS,660632319,SystemVerilog,DCS,16358,1,2024-03-07 16:03:10+00:00,[],None
120,https://github.com/okenna10/FPGA_exponential_function.git,2023-08-28 17:33:15+00:00,,0,okenna10/FPGA_exponential_function,684217854,SystemVerilog,FPGA_exponential_function,24,1,2024-04-08 14:26:17+00:00,[],None
121,https://github.com/SuchithraM008/100DaysofRTL.git,2023-07-24 16:17:10+00:00,,0,SuchithraM008/100DaysofRTL,670252987,SystemVerilog,100DaysofRTL,2023,1,2023-08-13 12:04:41+00:00,[],None
122,https://github.com/d-lec/d-lev-hdl.git,2023-07-23 22:52:28+00:00,Source mirror of SystemVerilog source code for D-Lev processor.,1,d-lec/d-lev-hdl,669934972,SystemVerilog,d-lev-hdl,242,1,2024-02-01 03:22:04+00:00,[],https://api.github.com/licenses/mit
123,https://github.com/Apostolgs/Multiplier_HW_II.git,2023-06-29 09:12:00+00:00,IEEE 754 Single Precision 32-bit Float Multiplier,0,Apostolgs/Multiplier_HW_II,660110984,SystemVerilog,Multiplier_HW_II,73530,1,2023-07-09 19:35:00+00:00,[],None
124,https://github.com/JuanSync7/SystemVerilog.git,2023-06-29 09:07:57+00:00,Place to put simple SystemVerilog examples for reference ,0,JuanSync7/SystemVerilog,660109648,SystemVerilog,SystemVerilog,16,1,2023-07-03 12:51:27+00:00,[],https://api.github.com/licenses/gpl-3.0
125,https://github.com/1fahadaloufi/Data-Cache.git,2023-07-25 21:48:08+00:00,,0,1fahadaloufi/Data-Cache,670801358,SystemVerilog,Data-Cache,36,1,2023-08-23 17:20:34+00:00,[],None
126,https://github.com/ayush-agarwal-0502/Digital-Schmitt-Trigger-Controller-System-Verilog.git,2023-06-25 16:37:27+00:00,"Implementation of Digital version of Schmitt Trigger invented by me for utilization in Bang Bang Controller , made using System Verilog ",0,ayush-agarwal-0502/Digital-Schmitt-Trigger-Controller-System-Verilog,658404840,SystemVerilog,Digital-Schmitt-Trigger-Controller-System-Verilog,4,1,2023-06-26 13:27:49+00:00,[],None
127,https://github.com/oscc-ip/common.git,2023-08-21 10:58:53+00:00,A SystemVerilog Components Library,0,oscc-ip/common,681139180,SystemVerilog,common,200,1,2023-09-03 14:27:52+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
128,https://github.com/Stelios1908/fifo_verification_SystemVerilog.git,2023-07-23 10:45:11+00:00,fifo verificastion with system verilog,0,Stelios1908/fifo_verification_SystemVerilog,669760660,SystemVerilog,fifo_verification_SystemVerilog,175,1,2024-03-05 08:01:48+00:00,[],None
129,https://github.com/lyxxng/FPGA-Controllable-Sprite.git,2023-08-04 23:50:50+00:00,,0,lyxxng/FPGA-Controllable-Sprite,674841876,SystemVerilog,FPGA-Controllable-Sprite,15276,1,2023-08-06 04:42:26+00:00,[],None
130,https://github.com/ayush-agarwal-0502/CLB-FPGA-in-System-Verilog.git,2023-06-25 16:33:56+00:00,"Configurable Logic Block (CLB) design using Look Up Table (LUT) for utilization in Field Programmable Gate Array (FPGA) , made using System Verilog (SV)",0,ayush-agarwal-0502/CLB-FPGA-in-System-Verilog,658403775,SystemVerilog,CLB-FPGA-in-System-Verilog,6,1,2023-06-25 16:47:21+00:00,[],None
131,https://github.com/sohilnagpal04/Task5.1_SIT329.git,2023-08-19 06:34:35+00:00,,0,sohilnagpal04/Task5.1_SIT329,680409268,SystemVerilog,Task5.1_SIT329,1,1,2023-09-02 03:45:08+00:00,[],None
132,https://github.com/MarshallKnowles/RISC-V-CPU-BASE.git,2023-08-30 17:49:04+00:00,Student project creating a processor implementing the RV32-I instruction set.,0,MarshallKnowles/RISC-V-CPU-BASE,685191692,SystemVerilog,RISC-V-CPU-BASE,430,1,2023-10-13 00:54:29+00:00,[],
133,https://github.com/Nrusinga/Verification-Sequencer.git,2023-07-17 05:46:54+00:00,,0,Nrusinga/Verification-Sequencer,667262949,SystemVerilog,Verification-Sequencer,7,1,2023-07-17 07:30:51+00:00,[],None
134,https://github.com/Barak-Katzir/SHA256_AI-Accelerator.git,2023-07-01 13:18:10+00:00,"AI Hardware Accelerator for the Cryptography algorithm SHA256 on a RISC-V CPU, using a DE-10 Lite FPGA. ",0,Barak-Katzir/SHA256_AI-Accelerator,660998453,SystemVerilog,SHA256_AI-Accelerator,7,1,2023-11-09 11:24:39+00:00,[],None
135,https://github.com/ayush-agarwal-0502/Sort-in-O-N.git,2023-06-27 13:24:30+00:00,"""When you can't optimize the software further, optimize the hardware ..."" . Introducing a hardware design for sorting numbers in O(N) ",0,ayush-agarwal-0502/Sort-in-O-N,659268022,SystemVerilog,Sort-in-O-N,3,1,2023-06-30 13:11:47+00:00,[],None
136,https://github.com/MuhammadAmmarMalik/UART-Transmitter.git,2023-08-06 15:29:03+00:00,UART Transmitter using Data Path and Control Logic,0,MuhammadAmmarMalik/UART-Transmitter,675335488,SystemVerilog,UART-Transmitter,6,1,2023-09-06 17:26:44+00:00,[],None
137,https://github.com/SSJ2085/Router-1x3_UVM_Verification.git,2023-08-29 07:24:26+00:00,,0,SSJ2085/Router-1x3_UVM_Verification,684466706,SystemVerilog,Router-1x3_UVM_Verification,26,1,2023-08-29 07:38:25+00:00,[],https://api.github.com/licenses/mit
138,https://github.com/NicolaLino/Pipelined-Processor.git,2023-08-27 11:18:41+00:00,,0,NicolaLino/Pipelined-Processor,683682176,SystemVerilog,Pipelined-Processor,52,1,2024-01-29 11:04:25+00:00,[],https://api.github.com/licenses/mit
139,https://github.com/Rithik739/Router-1-3.git,2023-08-13 07:22:08+00:00,verification of router 1-3 using uvm system verilog,0,Rithik739/Router-1-3,677950049,SystemVerilog,Router-1-3,33,1,2024-01-14 12:15:13+00:00,[],None
140,https://github.com/erquintana/veriRISC_CPU_SV.git,2023-08-17 02:54:49+00:00,This project was developed based on the labs from a SV Cadence certification. This is the integration lab for different modules to build a RISC CPU,0,erquintana/veriRISC_CPU_SV,679515572,SystemVerilog,veriRISC_CPU_SV,71,1,2023-12-12 16:23:15+00:00,[],https://api.github.com/licenses/gpl-3.0
141,https://github.com/SOMPALLY/apb_uart.git,2023-07-20 05:33:13+00:00,verifying the apb uart by developing uvm tb ,0,SOMPALLY/apb_uart,668563497,SystemVerilog,apb_uart,1,1,2023-07-22 06:05:48+00:00,[],None
142,https://github.com/woodrowb96/systemverilog-fifo-and-uvm-testbench.git,2023-06-28 23:22:55+00:00,,0,woodrowb96/systemverilog-fifo-and-uvm-testbench,659949178,SystemVerilog,systemverilog-fifo-and-uvm-testbench,36,1,2023-09-27 21:45:11+00:00,[],None
143,https://github.com/PRAGATI-0102/D-FF-using-SV-Day-076-.git,2023-06-24 18:15:52+00:00,"The DFF module I created provides variations for three conditions: no reset, synchronous reset, and asynchronous reset.",0,PRAGATI-0102/D-FF-using-SV-Day-076-,658087362,SystemVerilog,D-FF-using-SV-Day-076-,29,1,2023-06-29 07:18:29+00:00,[],None
144,https://github.com/kalai-rajan/Design-and-Verification-of-Synchronous-FIFO.git,2023-06-24 16:59:58+00:00,,0,kalai-rajan/Design-and-Verification-of-Synchronous-FIFO,658067523,SystemVerilog,Design-and-Verification-of-Synchronous-FIFO,9,1,2023-08-23 06:30:07+00:00,[],None
145,https://github.com/jiacpt/consim.git,2023-08-17 20:47:56+00:00,,0,jiacpt/consim,679883199,SystemVerilog,consim,152,1,2023-08-19 15:39:48+00:00,[],None
146,https://github.com/Nabih-Saleh/transformers.git,2023-07-14 08:57:13+00:00,,0,Nabih-Saleh/transformers,666333818,SystemVerilog,transformers,5,1,2024-01-31 17:27:55+00:00,[],None
147,https://github.com/ASOKAN07/UART.git,2023-08-14 17:18:06+00:00,UART Design and Verification - System Verilog ,0,ASOKAN07/UART,678493130,SystemVerilog,UART,87,1,2024-03-05 08:10:28+00:00,[],None
148,https://github.com/ItteRevanth/Verification_of_Synchronous_FIFO.git,2023-06-24 09:14:04+00:00,,0,ItteRevanth/Verification_of_Synchronous_FIFO,657939069,SystemVerilog,Verification_of_Synchronous_FIFO,13,0,2023-06-24 09:31:57+00:00,[],None
149,https://github.com/amisaraaah/mySystemVerilog.git,2023-06-28 05:04:30+00:00,quick silicon,0,amisaraaah/mySystemVerilog,659556790,SystemVerilog,mySystemVerilog,15,0,2023-06-28 05:05:26+00:00,[],None
150,https://github.com/VaishnaviKulkarni007/FFVDD.git,2023-07-31 17:51:35+00:00,,0,VaishnaviKulkarni007/FFVDD,673029429,SystemVerilog,FFVDD,196,0,2023-07-31 17:55:52+00:00,[],None
151,https://github.com/HassanKhaled11/UVM_CASE_STUDY.git,2023-07-31 18:46:53+00:00,,0,HassanKhaled11/UVM_CASE_STUDY,673048371,SystemVerilog,UVM_CASE_STUDY,5,0,2023-07-31 18:50:12+00:00,[],None
152,https://github.com/philiprbrenan/posEdgeNegEdge.git,2023-07-18 13:48:35+00:00,Clocking on positive and negative edges,0,philiprbrenan/posEdgeNegEdge,667873625,SystemVerilog,posEdgeNegEdge,3,0,2023-07-18 13:53:18+00:00,[],None
153,https://github.com/HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-no-delay-SRAM_V1.git,2023-08-01 20:46:17+00:00,RISC-V Pipelined CPU (with no delay SRAM),1,HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-no-delay-SRAM_V1,673527528,SystemVerilog,RV32I-RISC-V-Pipelined-CPU-with-no-delay-SRAM_V1,9061,0,2023-08-03 23:18:39+00:00,[],None
154,https://github.com/nnguyendinh/FFT-Butterfly-Unit.git,2023-08-01 05:00:21+00:00,,0,nnguyendinh/FFT-Butterfly-Unit,673195508,SystemVerilog,FFT-Butterfly-Unit,2,0,2023-08-13 23:43:17+00:00,[],None
155,https://github.com/maxsofar/044252---sim3.git,2023-06-28 19:21:02+00:00,,0,maxsofar/044252---sim3,659884644,SystemVerilog,044252---sim3,7,0,2023-08-08 20:52:48+00:00,[],None
156,https://github.com/sshubhra170/EDA.git,2023-06-29 05:29:08+00:00,,0,sshubhra170/EDA,660036534,SystemVerilog,EDA,27,0,2023-06-29 05:54:01+00:00,[],None
157,https://github.com/lemwill/riscv-cpu.git,2023-07-02 19:42:30+00:00,,0,lemwill/riscv-cpu,661421760,SystemVerilog,riscv-cpu,22,0,2023-07-03 22:24:25+00:00,[],None
158,https://github.com/ana-pgodoy/Verification_Team4.git,2023-06-26 15:27:23+00:00,,0,ana-pgodoy/Verification_Team4,658834341,SystemVerilog,Verification_Team4,472,0,2023-07-02 22:03:21+00:00,[],None
159,https://github.com/siliconbootcamp/setup.git,2023-06-26 22:14:42+00:00,,0,siliconbootcamp/setup,658971812,SystemVerilog,setup,18,0,2023-06-27 02:46:18+00:00,[],https://api.github.com/licenses/gpl-3.0
160,https://github.com/David-41/RISC-V.git,2023-06-26 16:17:46+00:00,RISC-V (RV32I) for control applications,0,David-41/RISC-V,658855409,SystemVerilog,RISC-V,13646,0,2023-06-27 09:14:21+00:00,[],https://api.github.com/licenses/mit
161,https://github.com/DogOleg/additive_scrambler.git,2023-07-16 13:48:15+00:00,,0,DogOleg/additive_scrambler,667054939,SystemVerilog,additive_scrambler,0,0,2023-07-16 13:52:07+00:00,[],None
162,https://github.com/PeterBaggetta/AES-Encryption-Coprocessor-in-CBC-Mode.git,2023-07-24 23:32:36+00:00,Implemented an AWS coprocessor on a DE1-SoC development board which uses an Altera SoC with dual-core Cortex A-9 embedded cores,0,PeterBaggetta/AES-Encryption-Coprocessor-in-CBC-Mode,670377919,SystemVerilog,AES-Encryption-Coprocessor-in-CBC-Mode,160170,0,2023-07-24 23:45:15+00:00,[],None
163,https://github.com/MiraculousTreasure/praveen.git,2023-08-26 08:10:08+00:00,,0,MiraculousTreasure/praveen,683330866,SystemVerilog,praveen,2,0,2023-08-26 08:12:07+00:00,[],None
164,https://github.com/mariosplen/SystemVerilog-UNI-LAB.git,2023-08-24 11:11:44+00:00,This repository contains the exercises assigned during the Advanced Digital Design course,0,mariosplen/SystemVerilog-UNI-LAB,682526402,SystemVerilog,SystemVerilog-UNI-LAB,1154,0,2023-08-24 11:24:13+00:00,[],None
165,https://github.com/2023-Fall-ECE4278/lab1.git,2023-08-29 13:15:13+00:00,,0,2023-Fall-ECE4278/lab1,684597082,SystemVerilog,lab1,2,0,2023-08-31 18:07:25+00:00,[],None
166,https://github.com/alok2802/APB-Bus-Protocol-verification.git,2023-08-17 18:49:46+00:00,,0,alok2802/APB-Bus-Protocol-verification,679847058,SystemVerilog,APB-Bus-Protocol-verification,3,0,2023-08-17 18:54:02+00:00,[],None
167,https://github.com/humayunsiraj123/UART.git,2023-08-19 16:16:46+00:00,uart communication protocaol implementaion using system verilog,0,humayunsiraj123/UART,680555448,SystemVerilog,UART,8,0,2023-08-20 22:41:10+00:00,[],None
168,https://github.com/royb998/044157-project.git,2023-08-21 09:24:01+00:00,,0,royb998/044157-project,681106305,SystemVerilog,044157-project,16278,0,2023-08-25 13:49:01+00:00,[],None
169,https://github.com/oplikos/Encryption-and-Decryption-processes.git,2023-08-18 22:08:44+00:00,,0,oplikos/Encryption-and-Decryption-processes,680315128,SystemVerilog,Encryption-and-Decryption-processes,449,0,2023-08-18 22:11:24+00:00,[],None
170,https://github.com/thinhngo11/Transaction-Level-Assertions.git,2023-08-20 20:05:29+00:00,,0,thinhngo11/Transaction-Level-Assertions,680914331,SystemVerilog,Transaction-Level-Assertions,19,0,2023-08-20 20:08:34+00:00,[],None
171,https://github.com/NJohnsonCR/njohnson_jmarschatz_gconejo_digital_design_lab_2023.git,2023-08-20 21:11:07+00:00,,0,NJohnsonCR/njohnson_jmarschatz_gconejo_digital_design_lab_2023,680927601,SystemVerilog,njohnson_jmarschatz_gconejo_digital_design_lab_2023,487306,0,2023-10-01 00:10:18+00:00,[],None
172,https://github.com/arvalid/uvm-source.git,2023-08-22 06:13:33+00:00,"Mirror of https://www.accellera.org/downloads/standards/uvm, starting from uvm-1.2.",0,arvalid/uvm-source,681489817,SystemVerilog,uvm-source,2792,0,2023-08-23 01:07:49+00:00,['uvm'],https://api.github.com/licenses/apache-2.0
173,https://github.com/Tassany/concepcao_ufpb.git,2023-08-22 12:05:25+00:00,,0,Tassany/concepcao_ufpb,681621576,SystemVerilog,concepcao_ufpb,4,0,2023-08-22 12:09:18+00:00,[],https://api.github.com/licenses/mit
174,https://github.com/RehanQasim-dev/Single-Cycle-RISCV-32I-Processor.git,2023-08-07 21:14:55+00:00,Sytem verilog code for single cycle RISCV-32I processor.It supports all the base level instructions.,0,RehanQasim-dev/Single-Cycle-RISCV-32I-Processor,675839720,SystemVerilog,Single-Cycle-RISCV-32I-Processor,653,0,2023-08-07 21:16:39+00:00,[],None
175,https://github.com/HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V2.git,2023-08-06 19:17:49+00:00,"RISC-V Pipelined CPU(with one cycle delay output SRAM, improved by v1)",0,HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V2,675396461,SystemVerilog,RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V2,4511,0,2023-08-06 19:42:12+00:00,[],None
176,https://github.com/darpanchoudhary/AXI_Project.git,2023-08-13 22:09:23+00:00,,0,darpanchoudhary/AXI_Project,678161369,SystemVerilog,AXI_Project,3,0,2023-08-13 22:14:47+00:00,[],None
177,https://github.com/AbdulrahmanNourEldeen/Computational-Storage.git,2023-08-12 13:52:25+00:00,Designing a Computational Storage and using UVM to verify the functionality.,0,AbdulrahmanNourEldeen/Computational-Storage,677745050,SystemVerilog,Computational-Storage,1386,0,2023-08-12 14:14:23+00:00,[],None
178,https://github.com/TonyHo722/axilite-slave.git,2023-07-10 02:52:55+00:00,,0,TonyHo722/axilite-slave,664457734,SystemVerilog,axilite-slave,34,0,2023-07-10 02:57:30+00:00,[],None
179,https://github.com/LiZhao1998/adder_sv_verifivation.git,2023-07-12 08:25:11+00:00,,0,LiZhao1998/adder_sv_verifivation,665450007,SystemVerilog,adder_sv_verifivation,4,0,2023-07-13 02:01:15+00:00,[],None
180,https://github.com/celaltrk/Traffic-Lights-FSM.git,2023-07-06 07:26:11+00:00,A finite state machine implementation using SystemVerilog to simulate traffic light signals.,0,celaltrk/Traffic-Lights-FSM,662926336,SystemVerilog,Traffic-Lights-FSM,2,0,2023-07-06 07:27:05+00:00,[],None
181,https://github.com/flyingbrids/Fixed-point-matrix-inversion.git,2023-07-31 19:39:42+00:00,matrix inversion using system verilog,0,flyingbrids/Fixed-point-matrix-inversion,673064617,SystemVerilog,Fixed-point-matrix-inversion,66,0,2023-07-31 19:51:09+00:00,[],None
182,https://github.com/yashwant4756/Verification_of_Synchronous_FIFO.git,2023-07-02 05:09:08+00:00,,0,yashwant4756/Verification_of_Synchronous_FIFO,661197423,SystemVerilog,Verification_of_Synchronous_FIFO,9,0,2023-07-02 05:10:09+00:00,[],None
183,https://github.com/Abdullah-Shaaban/RISC-V-M-Extension-Coprocessor-for-PicoRV32-Core.git,2023-08-30 16:48:51+00:00,RISC-V M-Extension Coprocessor for PicoRV32 Core,0,Abdullah-Shaaban/RISC-V-M-Extension-Coprocessor-for-PicoRV32-Core,685166795,SystemVerilog,RISC-V-M-Extension-Coprocessor-for-PicoRV32-Core,100,0,2023-08-30 16:51:36+00:00,[],https://api.github.com/licenses/apache-2.0
184,https://github.com/Taeho-Cho/FPGA.git,2023-08-12 07:09:04+00:00,Vivado and Vitis,0,Taeho-Cho/FPGA,677651529,SystemVerilog,FPGA,27,0,2023-08-12 07:54:11+00:00,[],None
185,https://github.com/MayaLasheen/ALU-Verification.git,2023-07-29 10:33:52+00:00,,0,MayaLasheen/ALU-Verification,672222259,SystemVerilog,ALU-Verification,65,0,2023-08-03 17:48:08+00:00,[],None
186,https://github.com/brnm9801/xournal.git,2023-08-01 16:36:14+00:00,xournal of courses,0,brnm9801/xournal,673447198,SystemVerilog,xournal,37713,0,2024-04-09 16:23:02+00:00,[],None
187,https://github.com/gorkemnisanci96/SystemVerilogForVerificationPart1.git,2023-06-30 20:18:42+00:00,,0,gorkemnisanci96/SystemVerilogForVerificationPart1,660775738,SystemVerilog,SystemVerilogForVerificationPart1,21,0,2023-06-30 20:21:17+00:00,[],None
188,https://github.com/GreyZenki/cse_systemverilog.git,2023-07-01 23:11:53+00:00,various labs that delt with implementing onto an fpga  ,0,GreyZenki/cse_systemverilog,661140576,SystemVerilog,cse_systemverilog,57,0,2023-07-03 19:19:00+00:00,[],None
189,https://github.com/look4raghav/VERIFICATION-Synchronous-FIFO.git,2023-07-02 08:16:50+00:00,Design and Verification project of synchronous fifo...,0,look4raghav/VERIFICATION-Synchronous-FIFO,661239252,SystemVerilog,VERIFICATION-Synchronous-FIFO,16,0,2023-07-03 15:50:47+00:00,[],https://api.github.com/licenses/mit
190,https://github.com/PRAGATI-0102/Binary-to-One-Hot-converter-Day-085-.git,2023-07-03 16:47:14+00:00,"A Binary to One-Hot Converter is a digital circuit that takes a binary input and produces a one-hot output, where only one bit of the output is high (1) corresponding to the binary value.",0,PRAGATI-0102/Binary-to-One-Hot-converter-Day-085-,661789897,SystemVerilog,Binary-to-One-Hot-converter-Day-085-,68,0,2023-07-03 16:48:14+00:00,[],None
191,https://github.com/SemiFront/SystemVerilog_SF.git,2023-07-06 05:10:35+00:00,System Verilog Topic with example codes. ,0,SemiFront/SystemVerilog_SF,662882945,SystemVerilog,SystemVerilog_SF,18,0,2023-07-06 05:22:14+00:00,[],None
192,https://github.com/erquintana/cadence_sv_certif_course.git,2023-07-13 22:12:35+00:00,,0,erquintana/cadence_sv_certif_course,666172449,SystemVerilog,cadence_sv_certif_course,25472,0,2023-07-13 22:15:15+00:00,[],None
193,https://github.com/Purdue-SoCET/vito-uart.git,2023-07-13 17:10:52+00:00,,1,Purdue-SoCET/vito-uart,666084041,SystemVerilog,vito-uart,50,0,2023-07-24 10:40:07+00:00,[],https://api.github.com/licenses/apache-2.0
194,https://github.com/dsandall/RiscVOtter-i2c.git,2023-06-23 00:10:28+00:00,,0,dsandall/RiscVOtter-i2c,657381527,SystemVerilog,RiscVOtter-i2c,264,0,2023-06-23 06:47:22+00:00,[],None
195,https://github.com/ItteRevanth/Design_and_Verification_of_UART_module.git,2023-06-27 16:17:14+00:00,,0,ItteRevanth/Design_and_Verification_of_UART_module,659343650,SystemVerilog,Design_and_Verification_of_UART_module,16,0,2023-06-27 16:29:29+00:00,[],None
196,https://github.com/prernamittal/VerilogAlarmClock.git,2023-06-26 03:34:59+00:00,This project implements a digital clock with alarm functionality in Verilog and SystemVerilog. ,0,prernamittal/VerilogAlarmClock,658557398,SystemVerilog,VerilogAlarmClock,42,0,2023-06-26 04:05:34+00:00,"['systemverilog', 'verilog', 'xcelium']",None
197,https://github.com/Aaargsv/Image-Processing-Using-FPGA.git,2023-06-29 13:16:57+00:00,,0,Aaargsv/Image-Processing-Using-FPGA,660199138,SystemVerilog,Image-Processing-Using-FPGA,11866,0,2023-06-29 13:19:18+00:00,[],None
198,https://github.com/dsmv/2023-lalambda-fpga-labs.git,2023-07-03 05:17:11+00:00,,0,dsmv/2023-lalambda-fpga-labs,661536481,SystemVerilog,2023-lalambda-fpga-labs,13674,0,2023-11-06 23:19:35+00:00,[],None
199,https://github.com/erquintana/hardware_engineer_space.git,2023-07-18 16:07:44+00:00,"This repo is intended to practice and develop different skill for the semiconductor industry, specifically for hardware engineering :)",0,erquintana/hardware_engineer_space,667929370,SystemVerilog,hardware_engineer_space,25844,0,2023-08-17 06:44:14+00:00,[],https://api.github.com/licenses/gpl-3.0
200,https://github.com/nurullahayv/AXI4-Lite_Verification_UVM.git,2023-07-16 11:18:14+00:00,(not completed) AXI4-Lite_Verification_UVM,0,nurullahayv/AXI4-Lite_Verification_UVM,667018047,SystemVerilog,AXI4-Lite_Verification_UVM,7,0,2023-07-16 11:27:27+00:00,[],https://api.github.com/licenses/mit
201,https://github.com/username9896/Task-3.1P-SIT329.git,2023-08-02 16:53:47+00:00,,0,username9896/Task-3.1P-SIT329,673891394,SystemVerilog,Task-3.1P-SIT329,3,0,2023-08-02 16:54:21+00:00,[],None
202,https://github.com/R-Rjn/Uvm_learning.git,2023-08-03 11:54:38+00:00,Trying to learn and implement Uvm Methods in verification ,0,R-Rjn/Uvm_learning,674212475,SystemVerilog,Uvm_learning,22,0,2023-08-03 11:57:08+00:00,[],https://api.github.com/licenses/gpl-2.0
203,https://github.com/AlejoGazagne/ArquitecturaDeComputadorasI.git,2023-08-01 23:33:20+00:00,"Material practica de la materia arquitectura de computadoras I (SystemVerilog, Assembler, y proyecto de la Placa De Desarrollo Cyclone De0nano Deonano Fpga Altera)",0,AlejoGazagne/ArquitecturaDeComputadorasI,673564294,SystemVerilog,ArquitecturaDeComputadorasI,10760,0,2023-08-01 23:41:04+00:00,[],None
204,https://github.com/XiaBin520/TileLink-to-CHI.git,2023-08-10 03:58:08+00:00,,0,XiaBin520/TileLink-to-CHI,676804353,SystemVerilog,TileLink-to-CHI,5,0,2023-08-10 04:06:46+00:00,[],None
205,https://github.com/P-Shreyas-Shetty/d4c.git,2023-08-11 04:03:42+00:00,Command line and config file parser for SystemVerilog,0,P-Shreyas-Shetty/d4c,677230340,SystemVerilog,d4c,35,0,2023-08-11 08:41:34+00:00,[],None
206,https://github.com/sudeepangadi/SV_Projects.git,2023-08-07 08:18:29+00:00,Verification Projects Using Verilog and System Verilog Test bench,0,sudeepangadi/SV_Projects,675569289,SystemVerilog,SV_Projects,11,0,2023-08-07 08:23:24+00:00,[],None
207,https://github.com/Aadi3333/4.1SIT329.git,2023-08-12 05:24:35+00:00,,0,Aadi3333/4.1SIT329,677629901,SystemVerilog,4.1SIT329,2,0,2023-08-12 05:25:17+00:00,[],None
208,https://github.com/nananapo/whitespace_cpu.git,2023-08-12 11:46:40+00:00,,0,nananapo/whitespace_cpu,677714348,SystemVerilog,whitespace_cpu,3,0,2023-08-12 11:47:24+00:00,[],None
209,https://github.com/ZhengYuhe/DRAM-Cache-System-for-Matrix-Calculation.git,2023-08-15 21:07:18+00:00,,0,ZhengYuhe/DRAM-Cache-System-for-Matrix-Calculation,678985170,SystemVerilog,DRAM-Cache-System-for-Matrix-Calculation,14,0,2023-08-15 21:16:58+00:00,[],None
210,https://github.com/maj77/DCFD.git,2023-07-30 11:52:36+00:00,Implementation of digital constant fraction discriminator on FPGA,0,maj77/DCFD,672528928,SystemVerilog,DCFD,140,0,2023-07-30 12:05:34+00:00,[],None
211,https://github.com/Revenant01/ALU_Verification_Environment_SV.git,2023-08-08 07:56:10+00:00,,0,Revenant01/ALU_Verification_Environment_SV,676000777,SystemVerilog,ALU_Verification_Environment_SV,5,0,2023-08-08 07:59:13+00:00,[],None
212,https://github.com/AnthonyHMR/amontero_digital_design_lab_2023.git,2023-08-18 19:24:15+00:00,,0,AnthonyHMR/amontero_digital_design_lab_2023,680276254,SystemVerilog,amontero_digital_design_lab_2023,12112,0,2023-10-20 22:35:25+00:00,[],None
213,https://github.com/kumaraman1408/MIPS_32.git,2023-08-22 06:02:09+00:00,,0,kumaraman1408/MIPS_32,681486556,SystemVerilog,MIPS_32,244,0,2023-08-22 06:06:48+00:00,[],None
214,https://github.com/bishalmondal001/FIFO_Buffer.git,2023-08-25 08:25:08+00:00,,0,bishalmondal001/FIFO_Buffer,682945335,SystemVerilog,FIFO_Buffer,14,0,2023-08-25 10:34:49+00:00,[],None
215,https://github.com/nehagour-lab/Sequential_Circuit_DFF_RTL_VERIFICATION.git,2023-08-25 19:15:59+00:00,,0,nehagour-lab/Sequential_Circuit_DFF_RTL_VERIFICATION,683174095,SystemVerilog,Sequential_Circuit_DFF_RTL_VERIFICATION,9,0,2023-08-25 19:16:43+00:00,[],None
216,https://github.com/wesleyhuhuhu/Microprocessor.git,2023-08-26 04:03:34+00:00,,0,wesleyhuhuhu/Microprocessor,683277416,SystemVerilog,Microprocessor,8337,0,2023-08-28 02:54:08+00:00,[],None
217,https://github.com/stkrknds/SPI-master-SV.git,2023-08-24 22:43:00+00:00,,0,stkrknds/SPI-master-SV,682775412,SystemVerilog,SPI-master-SV,2,0,2023-08-24 22:46:55+00:00,[],None
218,https://github.com/Rohithgarde/sv_task.git,2023-08-21 07:22:20+00:00,,0,Rohithgarde/sv_task,681063548,SystemVerilog,sv_task,2,0,2023-08-21 07:22:53+00:00,[],None
219,https://github.com/HummockHamek/I2C_Protocol_Designing_and_Verification.git,2023-08-22 10:53:44+00:00,,0,HummockHamek/I2C_Protocol_Designing_and_Verification,681594823,SystemVerilog,I2C_Protocol_Designing_and_Verification,72,0,2023-08-22 10:54:36+00:00,[],https://api.github.com/licenses/mit
220,https://github.com/mdrazuahamed/RTL_Design_and_Verification.git,2023-08-02 05:44:33+00:00,RTL design and verification,0,mdrazuahamed/RTL_Design_and_Verification,673649880,SystemVerilog,RTL_Design_and_Verification,30681,0,2023-08-24 04:28:02+00:00,[],None
221,https://github.com/salunke4/RISC-Microprocessor.git,2023-08-18 01:09:37+00:00," Designed the memory, CPU, and I/O interface of the LC-3 microcontroller using SystemVerilog and implemented it on an FPGA board",0,salunke4/RISC-Microprocessor,679938220,SystemVerilog,RISC-Microprocessor,60,0,2024-02-05 20:32:48+00:00,[],None
222,https://github.com/nkulkarni78/SystemVerilog.git,2023-07-13 13:22:53+00:00,,0,nkulkarni78/SystemVerilog,665998544,SystemVerilog,SystemVerilog,217,0,2023-07-20 16:58:07+00:00,[],None
223,https://github.com/Anusha1617/UVM_basics.git,2023-07-07 10:01:09+00:00,,1,Anusha1617/UVM_basics,663445924,,UVM_basics,602,0,2023-07-07 10:01:09+00:00,[],None
224,https://github.com/codebjjung/UVM.git,2023-08-07 02:36:09+00:00,,0,codebjjung/UVM,675475337,SystemVerilog,UVM,33,0,2023-08-10 07:24:31+00:00,[],None
225,https://github.com/vyom-elan/AMBA-APB-protocol.git,2023-08-03 16:17:03+00:00,,0,vyom-elan/AMBA-APB-protocol,674309481,SystemVerilog,AMBA-APB-protocol,41,0,2023-08-05 17:48:45+00:00,[],None
226,https://github.com/MrDoomsday/SHA.git,2023-06-26 18:46:33+00:00,SHA algorithms in SystemVerilog language for AXI-Stream,0,MrDoomsday/SHA,658911774,SystemVerilog,SHA,15,0,2023-07-01 20:05:57+00:00,[],None
227,https://github.com/YusukeSuzuki160/Verimaker.git,2023-07-03 02:17:49+00:00,code runner for verilog,0,YusukeSuzuki160/Verimaker,661495098,SystemVerilog,Verimaker,499,0,2023-07-17 06:41:45+00:00,[],None
228,https://github.com/Arashziyaei/DSD_PROJECT_SPRING2023.git,2023-07-02 16:45:32+00:00,,0,Arashziyaei/DSD_PROJECT_SPRING2023,661376458,SystemVerilog,DSD_PROJECT_SPRING2023,12123,0,2023-07-02 16:49:55+00:00,[],None
229,https://github.com/Yazan-Habash114/UART.git,2023-07-01 07:23:18+00:00,"UART Verilog module, implementing Transmitter and Receiver using ASM.",0,Yazan-Habash114/UART,660908231,SystemVerilog,UART,16,0,2023-07-01 07:26:23+00:00,[],None
230,https://github.com/rdrehmel/prism-sp.git,2023-07-03 10:20:21+00:00,,0,rdrehmel/prism-sp,661641819,SystemVerilog,prism-sp,168,0,2023-07-03 10:22:00+00:00,[],https://api.github.com/licenses/apache-2.0
231,https://github.com/Ulyzses/cs21_scp.git,2023-06-26 10:41:01+00:00,,0,Ulyzses/cs21_scp,658711916,SystemVerilog,cs21_scp,345,0,2023-06-26 10:41:27+00:00,[],None
232,https://github.com/Nikhilaraghuram/SystemVerilog_Test.git,2023-07-01 11:15:23+00:00,,0,Nikhilaraghuram/SystemVerilog_Test,660966969,SystemVerilog,SystemVerilog_Test,0,0,2023-07-01 11:22:45+00:00,[],None
233,https://github.com/yashwant4756/Universal-Verification-Methodology-UVM-.git,2023-07-06 09:41:02+00:00,,0,yashwant4756/Universal-Verification-Methodology-UVM-,662978296,SystemVerilog,Universal-Verification-Methodology-UVM-,17,0,2023-07-06 10:02:13+00:00,[],None
234,https://github.com/aswinsub/Code-Converters-using-Verilog.git,2023-07-22 07:38:22+00:00,,0,aswinsub/Code-Converters-using-Verilog,669413416,SystemVerilog,Code-Converters-using-Verilog,331,0,2023-07-22 07:41:40+00:00,[],None
235,https://github.com/Shivaprasadm02/router-1x3.git,2023-07-23 13:44:28+00:00,router 1x3 verification using UVM TB,0,Shivaprasadm02/router-1x3,669806246,SystemVerilog,router-1x3,29,0,2023-07-23 13:50:44+00:00,[],None
236,https://github.com/moechaker/DAC_SPI_Test_Bench.git,2023-07-24 00:26:48+00:00,This repository contains a SystemVerilog test bench and related files to verify the functionality of a DAC (Digital-to-Analog Converter) interfaced via SPI (Serial Peripheral Interface).,0,moechaker/DAC_SPI_Test_Bench,669949801,SystemVerilog,DAC_SPI_Test_Bench,290,0,2023-07-25 05:37:58+00:00,[],None
237,https://github.com/HassanKhaled11/Phase_Mixer_CDR.git,2023-07-27 11:12:00+00:00,,0,HassanKhaled11/Phase_Mixer_CDR,671458519,SystemVerilog,Phase_Mixer_CDR,6,0,2023-08-01 00:22:39+00:00,[],None
238,https://github.com/rohith2h2/100_days_of_rtl_design.git,2023-07-30 21:53:26+00:00,RTL modelling using systemverilog,0,rohith2h2/100_days_of_rtl_design,672673816,SystemVerilog,100_days_of_rtl_design,49,0,2023-07-31 01:45:24+00:00,[],None
239,https://github.com/3820bilal/SystemVerilog.git,2023-08-06 04:33:27+00:00,SystemVerilog,0,3820bilal/SystemVerilog,675187585,SystemVerilog,SystemVerilog,3,0,2023-08-06 04:40:20+00:00,[],None
240,https://github.com/vishalvp123/Constraints.git,2023-08-08 10:44:33+00:00,,0,vishalvp123/Constraints,676059870,SystemVerilog,Constraints,5,0,2023-08-09 10:22:18+00:00,[],None
241,https://github.com/stevenli518/CuBoulder_ECEN3002_FPGADesign.git,2023-08-09 23:47:12+00:00,,0,stevenli518/CuBoulder_ECEN3002_FPGADesign,676751659,SystemVerilog,CuBoulder_ECEN3002_FPGADesign,11185,0,2023-08-10 16:25:53+00:00,[],None
242,https://github.com/rawnies2/ECE-385-Final-Project.git,2023-08-10 18:56:58+00:00,Update Later,0,rawnies2/ECE-385-Final-Project,677108304,SystemVerilog,ECE-385-Final-Project,41,0,2023-08-10 18:58:48+00:00,[],None
243,https://github.com/eu820120/Asynchronous-FIFO-Verification.git,2023-07-29 04:08:44+00:00,Asynchronous FIFO Verification,0,eu820120/Asynchronous-FIFO-Verification,672142052,SystemVerilog,Asynchronous-FIFO-Verification,9,0,2023-07-29 04:10:29+00:00,[],None
244,https://github.com/SAG0RA/sgomez_digital_design_lab_2023.git,2023-08-20 20:43:06+00:00,Taller de Diseño Digital  CE 3201 | ITCR,1,SAG0RA/sgomez_digital_design_lab_2023,680922037,SystemVerilog,sgomez_digital_design_lab_2023,296418,0,2023-09-13 05:12:35+00:00,[],None
245,https://github.com/alok2802/D-ff-verification.git,2023-08-17 20:26:47+00:00,,0,alok2802/D-ff-verification,679877659,SystemVerilog,D-ff-verification,1,0,2023-08-17 20:27:37+00:00,[],None
246,https://github.com/nehagour-lab/FIFO_RTL_Verification.git,2023-08-24 21:31:17+00:00,,0,nehagour-lab/FIFO_RTL_Verification,682757672,SystemVerilog,FIFO_RTL_Verification,37,0,2023-08-24 21:54:58+00:00,[],None
247,https://github.com/elizabethkooiman/Kooiman_SoC.git,2023-08-25 15:34:54+00:00,,0,elizabethkooiman/Kooiman_SoC,683096708,SystemVerilog,Kooiman_SoC,300611,0,2023-10-20 14:24:14+00:00,[],None
248,https://github.com/mahdimoeini8102/DigitalSystems_Intro.git,2023-08-15 15:31:09+00:00,This is the first project of the Digital System course at the university and it provides an introduction with SystemVerilog HDL(Hardware Description Language).,0,mahdimoeini8102/DigitalSystems_Intro,678875141,SystemVerilog,DigitalSystems_Intro,708,0,2023-08-15 15:33:44+00:00,[],None
249,https://github.com/moechaker/AXI_Memory_Test_Bench.git,2023-08-16 07:50:25+00:00,This repository contains a comprehensive SystemVerilog test bench and related files designed to rigorously verify the functionality and data integrity of an AXI Memory.,0,moechaker/AXI_Memory_Test_Bench,679149379,SystemVerilog,AXI_Memory_Test_Bench,197,0,2023-08-16 08:01:45+00:00,[],None
250,https://github.com/riteish06/FIFO-design-and-verification-using-Verilog-SV.git,2023-08-28 15:28:46+00:00,,0,riteish06/FIFO-design-and-verification-using-Verilog-SV,684163780,SystemVerilog,FIFO-design-and-verification-using-Verilog-SV,23,0,2023-09-02 13:49:47+00:00,[],None
251,https://github.com/harshreddyP/dram_PHY.git,2023-08-27 12:18:25+00:00,,0,harshreddyP/dram_PHY,683696738,SystemVerilog,dram_PHY,8908,0,2023-08-27 12:18:39+00:00,[],None
252,https://github.com/franknguen/RTL_RISV_exam.git,2023-08-28 13:37:37+00:00,,0,franknguen/RTL_RISV_exam,684113832,SystemVerilog,RTL_RISV_exam,34999,0,2023-08-28 14:09:00+00:00,[],None
253,https://github.com/thinhngo11/Transaction-Level-Constraint.git,2023-08-04 00:52:20+00:00,,0,thinhngo11/Transaction-Level-Constraint,674440429,SystemVerilog,Transaction-Level-Constraint,91,0,2023-08-04 00:54:59+00:00,[],None
254,https://github.com/marigmsc/projeto-IH-RISCV.git,2023-08-04 21:19:36+00:00,Projeto da cadeira de InfraEstrutura de Hardware com implementações de instruções do Processador RISC-V em SystemVerilog,1,marigmsc/projeto-IH-RISCV,674815173,SystemVerilog,projeto-IH-RISCV,2707,0,2023-08-30 02:29:08+00:00,[],https://api.github.com/licenses/mit
255,https://github.com/kakash221996/MIPS.git,2023-08-22 15:06:22+00:00,,0,kakash221996/MIPS,681699578,SystemVerilog,MIPS,9,0,2023-08-22 15:14:19+00:00,[],None
256,https://github.com/amarendrapradhan/AXI4-Lite.git,2023-08-22 17:03:56+00:00,,0,amarendrapradhan/AXI4-Lite,681745253,SystemVerilog,AXI4-Lite,8322,0,2023-09-21 00:18:47+00:00,[],None
257,https://github.com/kavanachidananda/UVM.git,2023-08-23 15:15:15+00:00,,0,kavanachidananda/UVM,682161875,SystemVerilog,UVM,2,0,2023-08-23 15:19:02+00:00,[],None
258,https://github.com/shriram616/UVM_learning_series.git,2023-08-18 14:22:56+00:00,All you need to know about UVM ,0,shriram616/UVM_learning_series,680176265,SystemVerilog,UVM_learning_series,16,0,2023-08-19 16:57:39+00:00,[],https://api.github.com/licenses/apache-2.0
259,https://github.com/FernandoWelzel/SV-Template.git,2023-08-18 20:32:35+00:00,Template repository for SystemVerilog based projects.,0,FernandoWelzel/SV-Template,680293674,SystemVerilog,SV-Template,3,0,2023-08-18 21:20:16+00:00,[],None
260,https://github.com/ThreeBridge/AXI_LITE.git,2023-08-19 13:18:16+00:00,,0,ThreeBridge/AXI_LITE,680506361,SystemVerilog,AXI_LITE,5,0,2023-08-19 13:31:12+00:00,[],None
261,https://github.com/Ammar-10xe/AMBA-AHB3-Lite-Slave-Protocol-Verification-.git,2023-06-30 18:58:48+00:00,This repo contains the verification of AMBA AHB3 lite slave protcol verification using system verilog ,0,Ammar-10xe/AMBA-AHB3-Lite-Slave-Protocol-Verification-,660754060,SystemVerilog,AMBA-AHB3-Lite-Slave-Protocol-Verification-,1114,0,2023-06-30 19:03:51+00:00,[],None
262,https://github.com/CapSylar/yarc.git,2023-08-13 14:30:46+00:00,Yet Another RiscV Core,0,CapSylar/yarc,678052857,SystemVerilog,yarc,406,0,2023-08-15 17:51:49+00:00,[],https://api.github.com/licenses/mit
263,https://github.com/Toporas-Tudor-Andrei/MIPS.git,2023-06-26 21:06:24+00:00,,0,Toporas-Tudor-Andrei/MIPS,658954108,SystemVerilog,MIPS,1209,0,2023-07-27 16:23:46+00:00,[],None
264,https://github.com/warrebe/Arbiter-SV-Design.git,2023-06-27 19:15:18+00:00,Design for a general use arbiter (controller),0,warrebe/Arbiter-SV-Design,659408706,SystemVerilog,Arbiter-SV-Design,73,0,2023-06-27 19:16:16+00:00,[],None
265,https://github.com/namiwijeuom/UART-Implementation-Using-FPGA.git,2023-07-03 07:23:04+00:00,"This is a group assignment done under the module EN2111 Electronic Circuit Design, Semester 4, Department of Electronic & Telecommunication Engineering, University of Moratuwa, Sri Lanka.",0,namiwijeuom/UART-Implementation-Using-FPGA,661574992,SystemVerilog,UART-Implementation-Using-FPGA,2391,0,2023-08-02 18:45:09+00:00,[],None
266,https://github.com/anshb24/SV-Examples.git,2023-07-08 04:01:04+00:00,,0,anshb24/SV-Examples,663766496,SystemVerilog,SV-Examples,681,0,2023-07-08 04:11:21+00:00,[],None
267,https://github.com/adrianmc15/SA-CERN-FPGA-Design.git,2023-07-16 22:08:32+00:00,,0,adrianmc15/SA-CERN-FPGA-Design,667174443,SystemVerilog,SA-CERN-FPGA-Design,16,0,2023-07-16 22:09:48+00:00,[],None
268,https://github.com/Sufiyan-Ahmed-khan/intelunnati_Ace.git,2023-07-14 16:19:00+00:00,,0,Sufiyan-Ahmed-khan/intelunnati_Ace,666481333,SystemVerilog,intelunnati_Ace,2816,0,2023-07-19 16:06:58+00:00,[],None
269,https://github.com/pallavikayla59/APB_ram.git,2023-07-18 15:31:55+00:00,,0,pallavikayla59/APB_ram,667915834,SystemVerilog,APB_ram,23,0,2023-07-18 15:56:46+00:00,[],None
270,https://github.com/AnubhavSinghPawar/Automatic-Washing-Machine.git,2023-08-25 17:19:13+00:00,,0,AnubhavSinghPawar/Automatic-Washing-Machine,683133238,SystemVerilog,Automatic-Washing-Machine,6,0,2023-08-25 17:20:10+00:00,[],None
271,https://github.com/mdanilow/fpga_utils.git,2023-08-27 00:41:14+00:00,,0,mdanilow/fpga_utils,683557892,SystemVerilog,fpga_utils,296,0,2023-08-29 14:22:34+00:00,[],None
272,https://github.com/A7med3id10/I2C_Bus.git,2023-08-21 21:23:49+00:00,I2C_Bus Design and Verification,1,A7med3id10/I2C_Bus,681365774,SystemVerilog,I2C_Bus,134,0,2023-08-21 21:45:07+00:00,[],None
273,https://github.com/Amith-Joy/Pipelined_CORDIC.git,2023-08-20 19:29:31+00:00,Designed a pipelined architecture of the CORDIC algorithm to find the sine and cosine of angles and implemented it using Verilog,0,Amith-Joy/Pipelined_CORDIC,680906453,SystemVerilog,Pipelined_CORDIC,152,0,2023-08-20 20:08:14+00:00,[],None
274,https://github.com/tejaskalburgi/MIPS-32-Bit-Pipelined-Processor-Implementation-in-Verilog.git,2023-08-20 18:25:05+00:00,,0,tejaskalburgi/MIPS-32-Bit-Pipelined-Processor-Implementation-in-Verilog,680889425,SystemVerilog,MIPS-32-Bit-Pipelined-Processor-Implementation-in-Verilog,2,0,2023-08-24 15:49:48+00:00,[],None
275,https://github.com/psjsptcoder/Design_and_Simulation_of_32-bit_MIPS_Processor.git,2023-08-25 12:34:55+00:00,"Implemented 32-bit MIPS processor in Verilog,integrating gate-level,dataflow & behavioral modeling techniques – Orchestrated a 5-stage pipeline architecture encompassing stages like Instruction Fetch, Decode, Execute, Memory Access, and Writeback, effectively optimizing processor performance.",0,psjsptcoder/Design_and_Simulation_of_32-bit_MIPS_Processor,683029908,SystemVerilog,Design_and_Simulation_of_32-bit_MIPS_Processor,8,0,2023-08-25 12:37:36+00:00,[],None
276,https://github.com/jagadeeshtummala/UVM_Testbench_Parallel_Load_Counter.git,2023-07-24 00:51:34+00:00,,0,jagadeeshtummala/UVM_Testbench_Parallel_Load_Counter,669953858,SystemVerilog,UVM_Testbench_Parallel_Load_Counter,7,0,2023-07-24 01:02:18+00:00,[],None
277,https://github.com/Daniyal-Tahsildar/FSM_SECURITY_VERIFICAATION.git,2023-08-15 15:47:04+00:00,"Security Verification of an FSM is a project, part of Introduction to Hardware Security course at UF",0,Daniyal-Tahsildar/FSM_SECURITY_VERIFICAATION,678881127,SystemVerilog,FSM_SECURITY_VERIFICAATION,381,0,2023-08-15 15:47:11+00:00,[],None
278,https://github.com/NicBrito/ProjetoIH.git,2023-08-18 12:36:53+00:00,Projeto de Infraestrutura de Hardware,0,NicBrito/ProjetoIH,680137786,SystemVerilog,ProjetoIH,546,0,2023-08-18 12:39:14+00:00,[],None
279,https://github.com/Sondhig/Hardware-Decompressor-.git,2023-08-18 16:57:09+00:00,System Verilog,0,Sondhig/Hardware-Decompressor-,680229488,SystemVerilog,Hardware-Decompressor-,1870,0,2023-08-18 17:02:45+00:00,[],None
280,https://github.com/Bojorge/vsm_digital-design-lab-2023.git,2023-08-18 19:23:29+00:00,,0,Bojorge/vsm_digital-design-lab-2023,680276053,SystemVerilog,vsm_digital-design-lab-2023,695142,0,2023-09-20 19:40:43+00:00,[],None
281,https://github.com/Indifference061/MIPS-PipeLine.git,2023-06-25 02:56:28+00:00,MIPS流水线设计,0,Indifference061/MIPS-PipeLine,658181457,SystemVerilog,MIPS-PipeLine,4383,0,2023-07-10 02:45:53+00:00,[],https://api.github.com/licenses/mit
282,https://github.com/umanggarg96/axiom-vip.git,2023-06-29 19:41:17+00:00,,0,umanggarg96/axiom-vip,660340800,SystemVerilog,axiom-vip,6,0,2023-06-29 20:48:24+00:00,[],None
283,https://github.com/SayakaNabatame/Accelerator.git,2023-07-01 22:47:03+00:00,RTL Accelerator,0,SayakaNabatame/Accelerator,661136256,SystemVerilog,Accelerator,3590,0,2023-07-01 23:06:15+00:00,[],https://api.github.com/licenses/mit
284,https://github.com/MoistReindeer/HDL-Lab.git,2023-07-02 10:30:25+00:00,,0,MoistReindeer/HDL-Lab,661272507,SystemVerilog,HDL-Lab,99,0,2023-07-02 12:50:29+00:00,[],None
285,https://github.com/RakshithaRShettigar/Single_Port_RAM.git,2023-08-01 14:22:22+00:00,Design and verification of single port RAM,0,RakshithaRShettigar/Single_Port_RAM,673394237,SystemVerilog,Single_Port_RAM,9,0,2023-08-01 14:24:27+00:00,[],None
286,https://github.com/PrathammGupta/Task3.1.verilog.git,2023-08-02 16:41:24+00:00,,0,PrathammGupta/Task3.1.verilog,673886610,SystemVerilog,Task3.1.verilog,2,0,2023-08-02 16:42:18+00:00,[],None
287,https://github.com/Nagarjun444/ALU_UVM.git,2023-08-01 09:06:31+00:00,ALU_UVM verification,0,Nagarjun444/ALU_UVM,673274142,SystemVerilog,ALU_UVM,31,0,2023-08-01 09:07:27+00:00,[],None
288,https://github.com/lenguyen8888/VerilogExamples.git,2023-08-08 13:43:39+00:00,,0,lenguyen8888/VerilogExamples,676126294,SystemVerilog,VerilogExamples,33,0,2023-08-08 13:55:08+00:00,[],None
289,https://github.com/galich1/Elastic_buffer.git,2023-08-08 14:50:13+00:00,Elastic buffer for Eridan Pre - screening Test,0,galich1/Elastic_buffer,676154164,SystemVerilog,Elastic_buffer,122,0,2023-08-08 15:16:20+00:00,[],None
290,https://github.com/LucasDamo22/uart-32-bit.git,2023-08-09 14:28:21+00:00,,0,LucasDamo22/uart-32-bit,676582596,SystemVerilog,uart-32-bit,12,0,2023-08-09 14:28:57+00:00,[],None
291,https://github.com/hassanilyas000-10xe/AMBA-AHB-3-LITE-VERIFICATION.git,2023-07-03 12:38:43+00:00,,0,hassanilyas000-10xe/AMBA-AHB-3-LITE-VERIFICATION,661691696,SystemVerilog,AMBA-AHB-3-LITE-VERIFICATION,440,0,2023-07-03 12:44:02+00:00,[],None
292,https://github.com/jpaoad31/9-Bit_CPU.git,2023-08-18 17:13:34+00:00,Design a custom ISA and CPU implementing it using SystemVerilog,0,jpaoad31/9-Bit_CPU,680234887,SystemVerilog,9-Bit_CPU,9396,0,2023-12-18 06:39:31+00:00,[],None
293,https://github.com/ThreadJava800/MetrotekLabs.git,2023-07-14 17:59:11+00:00,My FPGA-configuration internship in Metrotek,0,ThreadJava800/MetrotekLabs,666512465,SystemVerilog,MetrotekLabs,7845,0,2023-07-14 18:02:13+00:00,[],None
294,https://github.com/kcaisley/fastroic.git,2023-07-14 11:51:42+00:00,FastROIC: Procedural design generation of readout integrated circuits for ultrafast imaging  📸,0,kcaisley/fastroic,666390134,SystemVerilog,fastroic,60343,0,2023-11-15 22:40:28+00:00,[],None
295,https://github.com/meghraj1766/me.git,2023-07-08 05:58:33+00:00,,0,meghraj1766/me,663797960,SystemVerilog,me,10,0,2024-03-16 07:39:42+00:00,[],None
296,https://github.com/NikiSP/DSD_PROJECT.git,2023-07-02 18:42:49+00:00,,0,NikiSP/DSD_PROJECT,661407867,SystemVerilog,DSD_PROJECT,37344,0,2023-07-02 18:48:41+00:00,[],None
297,https://github.com/Tahsin2020/LED-Dance-Cube.git,2023-06-23 02:30:55+00:00,An App that can record your movements and project you onto a LED cube as long as you have appropriate hardware.  ,0,Tahsin2020/LED-Dance-Cube,657413761,SystemVerilog,LED-Dance-Cube,92534,0,2023-06-23 02:36:21+00:00,[],None
298,https://github.com/tarsojabbes/loac.git,2023-07-10 02:51:00+00:00,Roteiros desenvolvidos na disciplina de Laboratório de Organização e Arquitetura de Computadores no período 2022.2,0,tarsojabbes/loac,664457238,SystemVerilog,loac,14970,0,2023-07-14 00:43:11+00:00,"['assembly', 'fpga', 'hardware', 'hdl', 'risc-v', 'systemverilog']",None
299,https://github.com/S-E-N-S-O-H-A-M/Design-and-Verification-of-FIFO.git,2023-07-13 02:07:06+00:00,,0,S-E-N-S-O-H-A-M/Design-and-Verification-of-FIFO,665783100,SystemVerilog,Design-and-Verification-of-FIFO,122,0,2023-07-16 02:55:27+00:00,[],https://api.github.com/licenses/apache-2.0
300,https://github.com/philiprbrenan/zeroLowLevel.git,2023-07-08 22:03:56+00:00,Low level version of zero with heap memory as a separate module ,0,philiprbrenan/zeroLowLevel,664088342,SystemVerilog,zeroLowLevel,4299,0,2023-07-08 22:10:03+00:00,[],None
301,https://github.com/dcg3-illinois/ECE-385.git,2023-07-19 05:32:08+00:00,Code written in SystemVerilog and C for ECE385: Digital Systems Laboratory at UIUC,0,dcg3-illinois/ECE-385,668134152,SystemVerilog,ECE-385,142287,0,2023-07-19 05:38:45+00:00,[],None
302,https://github.com/kangjian888/common_ips.git,2023-07-20 02:34:16+00:00,This is some common ips used in digital circuit design,0,kangjian888/common_ips,668521563,SystemVerilog,common_ips,19,0,2023-07-20 02:52:43+00:00,[],None
303,https://github.com/CgKaminski/toy-processors.git,2023-08-01 20:58:37+00:00,"Implements a 5 state pipelined processor, using risc-v architecture.",0,CgKaminski/toy-processors,673530924,SystemVerilog,toy-processors,586,0,2023-08-28 16:10:44+00:00,[],None
304,https://github.com/talhabinazmat21/verif_repo.git,2023-08-02 06:29:06+00:00,UVM veification projects,0,talhabinazmat21/verif_repo,673663001,SystemVerilog,verif_repo,251,0,2023-08-02 06:52:21+00:00,[],https://api.github.com/licenses/gpl-3.0
305,https://github.com/tusharshenoy/4-BIT-Johnson-Counter.git,2023-08-05 10:50:31+00:00,,0,tusharshenoy/4-BIT-Johnson-Counter,674972291,SystemVerilog,4-BIT-Johnson-Counter,29,0,2023-08-05 10:53:56+00:00,[],None
306,https://github.com/thathcmus/IPsec_Core.git,2023-08-06 12:04:46+00:00,,0,thathcmus/IPsec_Core,675282200,SystemVerilog,IPsec_Core,186033,0,2023-08-06 12:14:25+00:00,[],None
307,https://github.com/chanum/uvm-1.2-src.git,2023-07-22 02:27:19+00:00,,0,chanum/uvm-1.2-src,669349895,SystemVerilog,uvm-1.2-src,2049,0,2023-07-22 02:29:33+00:00,[],https://api.github.com/licenses/apache-2.0
308,https://github.com/MikolajSlupski/Projekt_UEC.git,2023-07-21 18:49:01+00:00,,0,MikolajSlupski/Projekt_UEC,669262570,SystemVerilog,Projekt_UEC,20449,0,2023-08-28 20:38:17+00:00,[],None
309,https://github.com/ZeHolyQofPower/verilog_rv32i.git,2023-08-05 19:29:26+00:00,A Verilog implementation of a RISC-V Processor,0,ZeHolyQofPower/verilog_rv32i,675101807,SystemVerilog,verilog_rv32i,1007,0,2023-08-07 18:24:23+00:00,[],https://api.github.com/licenses/gpl-3.0
310,https://github.com/pulp-platform/dyn_spm.git,2023-08-11 13:18:29+00:00,,0,pulp-platform/dyn_spm,677395794,SystemVerilog,dyn_spm,381,0,2023-08-14 09:35:05+00:00,[],
311,https://github.com/jnjnliwenjie0022/uvm_practice.git,2023-07-16 11:15:55+00:00,,0,jnjnliwenjie0022/uvm_practice,667017533,SystemVerilog,uvm_practice,463,0,2023-09-27 06:37:55+00:00,[],None
312,https://github.com/ManosMorf97/Alarm_System_Verilog.git,2023-07-19 20:26:49+00:00,,0,ManosMorf97/Alarm_System_Verilog,668443741,SystemVerilog,Alarm_System_Verilog,3,0,2023-07-19 20:27:18+00:00,[],None
313,https://github.com/wesleywu20/BasedAcc_HE.git,2023-07-27 04:55:47+00:00,,0,wesleywu20/BasedAcc_HE,671334149,SystemVerilog,BasedAcc_HE,5609,0,2023-07-27 04:56:14+00:00,[],None
314,https://github.com/moechaker/I2C_Memory_Test_Bench.git,2023-07-25 05:22:52+00:00,This repository contains a SystemVerilog test bench and related files to verify the functionality of an I2C memory device.,0,moechaker/I2C_Memory_Test_Bench,670457824,SystemVerilog,I2C_Memory_Test_Bench,232,0,2023-07-25 05:38:51+00:00,[],None
315,https://github.com/erquintana/universal-register-SV.git,2023-08-17 02:28:24+00:00,"Design and implement a Universal Register File (URF) module that supports both read and write operations. The URF should have a generic width and depth, making it flexible to use in different designs. It should support read and write operations on multiple clock cycles",0,erquintana/universal-register-SV,679509194,SystemVerilog,universal-register-SV,19,0,2023-08-17 07:34:07+00:00,[],https://api.github.com/licenses/gpl-3.0
316,https://github.com/RedTiger111/Sobel-filter-implementation-in-Verilog.git,2023-08-20 06:10:14+00:00,"This project is a Sobel filter implementation in Verilog, targeting the Vivado 2020.2 development environment. The implementation has been verified on libertron's FPGA Starter Kit Ⅲ.",0,RedTiger111/Sobel-filter-implementation-in-Verilog,680706811,SystemVerilog,Sobel-filter-implementation-in-Verilog,4380,0,2023-08-20 06:13:27+00:00,[],None
317,https://github.com/Amith-Joy/8-Point_FFT.git,2023-08-20 18:51:20+00:00,Designed the architecture for an 8-point radix 2 decimation in time fast Fourier transform. The project also shows how the same architecture used for FFT can be used to compute the IFFT. The FFT/IFFT architecture is then pipelined to get reduce the critical time. The FFT/IFFT and its pipelined version are implemented in Verilog.,0,Amith-Joy/8-Point_FFT,680897482,SystemVerilog,8-Point_FFT,451,0,2023-08-20 19:12:25+00:00,[],None
318,https://github.com/FernandoReneMoran/MIPS_Pipeline.git,2023-08-10 23:17:15+00:00,,0,FernandoReneMoran/MIPS_Pipeline,677170684,SystemVerilog,MIPS_Pipeline,8,0,2023-08-10 23:22:57+00:00,[],None
319,https://github.com/MuhammadAmmarMalik/GCD-Calculator.git,2023-08-06 15:39:17+00:00,GCD Calculator Using Data Path & Control Logic,0,MuhammadAmmarMalik/GCD-Calculator,675338258,SystemVerilog,GCD-Calculator,6,0,2023-08-06 15:39:50+00:00,[],None
320,https://github.com/baymax06in19/ibex_core.git,2023-08-21 09:09:26+00:00,,0,baymax06in19/ibex_core,681100913,SystemVerilog,ibex_core,36,0,2023-08-21 09:10:01+00:00,[],None
321,https://github.com/baymax06in19/ibex-core-changed.git,2023-08-21 08:32:56+00:00,ibex core modifications dvcon,0,baymax06in19/ibex-core-changed,681087811,SystemVerilog,ibex-core-changed,38,0,2023-08-21 09:08:57+00:00,[],None
322,https://github.com/Veda1809/Layered_tb_for_DFF.git,2023-08-24 04:17:59+00:00,,0,Veda1809/Layered_tb_for_DFF,682388146,SystemVerilog,Layered_tb_for_DFF,18,0,2023-08-24 04:19:42+00:00,[],https://api.github.com/licenses/mit
323,https://github.com/surendrayerragorla/UART.git,2023-08-24 06:51:32+00:00,,0,surendrayerragorla/UART,682434168,SystemVerilog,UART,47,0,2023-08-24 06:52:28+00:00,[],https://api.github.com/licenses/mit
324,https://github.com/DeepGb/SP.git,2023-08-25 09:47:08+00:00,Implementation of MIPS-32 RISC Processor,0,DeepGb/SP,682973790,SystemVerilog,SP,9,0,2023-08-25 10:07:22+00:00,[],None
325,https://github.com/ararian/simple_uart.git,2023-06-26 14:09:02+00:00,簡単なuart通信を行うモジュール,0,ararian/simple_uart,658799205,SystemVerilog,simple_uart,89,0,2023-11-21 13:21:35+00:00,[],https://api.github.com/licenses/mit
326,https://github.com/hdlguy/i2c_simple.git,2023-07-26 14:33:50+00:00,An attempt to write a very simple IIC interface for use in fpga designs.,0,hdlguy/i2c_simple,671099019,SystemVerilog,i2c_simple,66,0,2023-07-26 15:50:45+00:00,[],https://api.github.com/licenses/mit
327,https://github.com/irmrz/arquitectura-de-computadoras.git,2023-08-29 22:51:41+00:00,AdC,0,irmrz/arquitectura-de-computadoras,684811833,SystemVerilog,arquitectura-de-computadoras,17880,0,2023-08-29 23:07:54+00:00,[],None
328,https://github.com/Daniyal-Tahsildar/RTL_DESIGN.git,2023-08-15 15:35:46+00:00,Some Design Examples and testbenches,0,Daniyal-Tahsildar/RTL_DESIGN,678876849,SystemVerilog,RTL_DESIGN,4,0,2023-08-15 15:35:53+00:00,[],None
329,https://github.com/ssathish26/SherwinProjects.git,2023-08-01 21:29:27+00:00,,0,ssathish26/SherwinProjects,673538572,SystemVerilog,SherwinProjects,118,0,2024-01-25 06:16:52+00:00,[],None
330,https://github.com/fan19-hub/Microprocessor-lc3.git,2023-08-02 17:29:13+00:00,,0,fan19-hub/Microprocessor-lc3,673903913,SystemVerilog,Microprocessor-lc3,1627,0,2024-01-11 20:02:18+00:00,[],None
331,https://github.com/leduchongan/RISC-V.git,2023-07-24 11:08:13+00:00,,0,leduchongan/RISC-V,670130343,SystemVerilog,RISC-V,6,0,2024-01-14 18:52:50+00:00,[],None
332,https://github.com/emirtuglu/Single-Cycle-Processor.git,2023-06-26 08:42:22+00:00,12-bit Single-cycle processor developed for Basys3 FPGA board.,0,emirtuglu/Single-Cycle-Processor,658661529,SystemVerilog,Single-Cycle-Processor,643,0,2023-06-26 08:51:07+00:00,[],None
333,https://github.com/Basti3700/BCD-converter.git,2023-07-01 13:27:52+00:00,,0,Basti3700/BCD-converter,661001141,SystemVerilog,BCD-converter,3,0,2023-07-01 13:45:36+00:00,[],None
334,https://github.com/valmyr/-SystemVerilog-para-treinamento-de-design-e-verifica-o.git,2023-07-03 20:04:43+00:00,,0,valmyr/-SystemVerilog-para-treinamento-de-design-e-verifica-o,661852945,SystemVerilog,-SystemVerilog-para-treinamento-de-design-e-verifica-o,10,0,2023-07-03 22:28:34+00:00,[],None
335,https://github.com/erquintana/system-Verilog-practice.git,2023-07-04 13:11:52+00:00,"The purpose of the ""system Verilog practice"" repo is to contain some system Verilog sources to practice and that can be executed in https://www.edaplayground.com/ simulator. ",0,erquintana/system-Verilog-practice,662149842,SystemVerilog,system-Verilog-practice,31,0,2023-07-04 15:59:52+00:00,[],https://api.github.com/licenses/gpl-3.0
336,https://github.com/esattok/single-cycle-processor.git,2023-07-09 12:02:25+00:00,Single cycle processor that is implemented with System Verilog and tested on Vivado Basys3 FPGA ,0,esattok/single-cycle-processor,664255304,SystemVerilog,single-cycle-processor,1891,0,2023-07-27 11:32:01+00:00,[],None
337,https://github.com/JonathanPDB/PepinosDigitais.git,2023-08-01 01:49:43+00:00,,0,JonathanPDB/PepinosDigitais,673150589,SystemVerilog,PepinosDigitais,113886,0,2023-08-14 03:59:31+00:00,[],None
338,https://github.com/Ukuma012/Gameboy_on_fpga.git,2023-07-31 04:55:53+00:00,gameboy on fpga,0,Ukuma012/Gameboy_on_fpga,672752309,SystemVerilog,Gameboy_on_fpga,1,0,2023-08-02 12:22:00+00:00,[],None
339,https://github.com/iEDA-Open-Source-Core-Project/cva6.git,2023-07-31 01:59:32+00:00,,0,iEDA-Open-Source-Core-Project/cva6,672713954,SystemVerilog,cva6,38066,0,2023-07-31 02:07:39+00:00,[],
340,https://github.com/EzzAddinKukhun/CRC.git,2023-08-21 18:21:20+00:00,,0,EzzAddinKukhun/CRC,681308387,SystemVerilog,CRC,1,0,2023-08-21 18:22:56+00:00,[],None
341,https://github.com/KushagraYADAV/SPI-Communication-System-Verification-using-System-Verilog.git,2023-08-23 16:16:13+00:00,,0,KushagraYADAV/SPI-Communication-System-Verification-using-System-Verilog,682185753,SystemVerilog,SPI-Communication-System-Verification-using-System-Verilog,4,0,2023-08-23 16:21:22+00:00,[],None
342,https://github.com/ishiaraen/SingleCycleProcessor.git,2023-08-30 12:12:29+00:00,,0,ishiaraen/SingleCycleProcessor,685050865,SystemVerilog,SingleCycleProcessor,153,0,2023-09-07 22:49:56+00:00,[],None
343,https://github.com/kosmokot45/roi-python-verilog.git,2023-07-11 14:27:53+00:00,Creating region of interest using FPGA. Preparing images to and from FPGA using Python.,0,kosmokot45/roi-python-verilog,665143949,SystemVerilog,roi-python-verilog,417,0,2023-07-11 14:50:03+00:00,[],None
344,https://github.com/DancauRares-Andrei/ImplementareMIPS.git,2023-07-03 19:55:09+00:00,Implementare simplă a unui procesor MIPS cu o instrucțiune într-o perioadă de clock. ,0,DancauRares-Andrei/ImplementareMIPS,661850289,SystemVerilog,ImplementareMIPS,31,0,2023-07-10 10:22:39+00:00,[],None
345,https://github.com/josejad42/Infra-de-Hardware.git,2023-07-15 16:00:23+00:00,Repositório criado para a resolução de tarefas/projetos relacionados à disciplina de infraestrutura de hardware 2023.1.,1,josejad42/Infra-de-Hardware,666798662,SystemVerilog,Infra-de-Hardware,448,0,2023-08-10 19:26:15+00:00,[],None
346,https://github.com/wxg-ntu/IC_DV_WARM_UP.git,2023-08-17 03:14:53+00:00,Just a simple and easy lab for IC_Verif practice.,0,wxg-ntu/IC_DV_WARM_UP,679520085,SystemVerilog,IC_DV_WARM_UP,195,0,2023-08-28 02:28:01+00:00,[],None
347,https://github.com/mahdimoeini8102/DigitalSystems_Combinational.git,2023-08-15 17:00:29+00:00,This is the fourth project of the Digital System course at the university and it's about combinational circuit desgin such as latches and flip flops using SystemVerilog HDL(Hardware Description Language).,0,mahdimoeini8102/DigitalSystems_Combinational,678909229,SystemVerilog,DigitalSystems_Combinational,513,0,2023-08-15 17:02:32+00:00,[],None
348,https://github.com/FernandoWelzel/Odyssey.git,2023-08-17 20:32:35+00:00,A RISC-V fault-tollerant processor core.,0,FernandoWelzel/Odyssey,679879175,SystemVerilog,Odyssey,702,0,2023-08-17 20:56:01+00:00,[],None
349,https://github.com/IAMJAI1510/Bubble-Trouble-FPGA.git,2023-08-27 17:00:18+00:00,,0,IAMJAI1510/Bubble-Trouble-FPGA,683776738,SystemVerilog,Bubble-Trouble-FPGA,413,0,2023-08-27 17:03:21+00:00,[],None
350,https://github.com/alexmangushev/RV32IM_CORE.git,2023-08-27 21:54:22+00:00,Open RISC-V core with support RV32IM command set,0,alexmangushev/RV32IM_CORE,683844385,SystemVerilog,RV32IM_CORE,10140,0,2023-08-30 20:06:11+00:00,[],
351,https://github.com/JahnaviB08/fft.git,2023-08-26 10:58:47+00:00,,0,JahnaviB08/fft,683371044,SystemVerilog,fft,7,0,2023-08-26 10:59:44+00:00,[],None
352,https://github.com/Diya-Veerbhan/Verification_Concepts.git,2023-08-07 03:57:05+00:00,Verification concepts,0,Diya-Veerbhan/Verification_Concepts,675493253,SystemVerilog,Verification_Concepts,33020,0,2023-08-20 06:15:52+00:00,[],None
353,https://github.com/rajan003/RRArbiter1.git,2023-08-07 14:24:34+00:00,ROund RObin Arbiter,0,rajan003/RRArbiter1,675702350,SystemVerilog,RRArbiter1,13,0,2023-08-07 14:25:04+00:00,[],None
354,https://github.com/hassanbaroudy/Digital_IC.git,2023-08-11 11:19:30+00:00,,0,hassanbaroudy/Digital_IC,677356892,SystemVerilog,Digital_IC,54,0,2023-08-11 11:50:40+00:00,[],None
355,https://github.com/MiseryBiscuits/Examples.git,2023-07-26 18:49:34+00:00,Examples,0,MiseryBiscuits/Examples,671191946,SystemVerilog,Examples,304,0,2023-07-27 09:10:29+00:00,[],None
356,https://github.com/fedefruttero/UVM_Verification_TB.git,2023-07-17 15:15:11+00:00,,0,fedefruttero/UVM_Verification_TB,667469567,SystemVerilog,UVM_Verification_TB,58710,0,2023-10-03 16:20:37+00:00,[],None
357,https://github.com/HidetaroTanaka/HAJIME_Core.git,2023-07-11 07:52:49+00:00,Small RISC-V Processor,0,HidetaroTanaka/HAJIME_Core,664994031,SystemVerilog,HAJIME_Core,1669,0,2023-12-04 09:08:17+00:00,['risc-v'],https://api.github.com/licenses/unlicense
358,https://github.com/fliibs/EnvSetup.git,2023-08-03 13:15:46+00:00,这个repo记录了一些环境设置方法。,1,fliibs/EnvSetup,674241747,SystemVerilog,EnvSetup,2420,0,2023-08-18 08:31:41+00:00,[],https://api.github.com/licenses/mit
359,https://github.com/K-Rakesh200206/Parity_generator_and_checker_using_verilog.git,2023-07-18 04:51:10+00:00,,0,K-Rakesh200206/Parity_generator_and_checker_using_verilog,667686290,SystemVerilog,Parity_generator_and_checker_using_verilog,53,0,2023-07-18 04:53:54+00:00,[],None
360,https://github.com/axyrai/fullAdder_systemVerilog.git,2023-07-18 06:01:45+00:00,,0,axyrai/fullAdder_systemVerilog,667705057,SystemVerilog,fullAdder_systemVerilog,0,0,2023-07-18 06:05:07+00:00,[],None
361,https://github.com/Elondo11/vga_project_road_fighter.git,2023-07-12 18:23:04+00:00,An arcade game designed in system verilog.,0,Elondo11/vga_project_road_fighter,665672790,SystemVerilog,vga_project_road_fighter,44847,0,2023-07-13 17:59:45+00:00,[],None
362,https://github.com/Mrinal99kumar/SYNCHRONOUS_FIFO.git,2023-07-04 07:27:55+00:00,project of design and verification in system verilog,0,Mrinal99kumar/SYNCHRONOUS_FIFO,662019996,SystemVerilog,SYNCHRONOUS_FIFO,4,0,2023-07-04 07:30:11+00:00,[],https://api.github.com/licenses/mit
363,https://github.com/jakaransingh/CLOCK-Modules.git,2023-07-05 19:14:32+00:00,,0,jakaransingh/CLOCK-Modules,662734850,SystemVerilog,CLOCK-Modules,1,0,2023-07-05 19:17:19+00:00,[],None
364,https://github.com/Foad3107/ProjectA.git,2023-07-13 10:58:08+00:00,Investigating and enhacement of dummy instruction insertion security feature in RISC-V ibex core.,0,Foad3107/ProjectA,665945862,SystemVerilog,ProjectA,4813,0,2023-07-13 11:38:30+00:00,[],https://api.github.com/licenses/apache-2.0
365,https://github.com/erquintana/ALU_Verification_with_UVM.git,2023-07-01 02:52:51+00:00,"Simple UVM Testbench, from Spec to Testbench (ALU Verification with UVM) based on https://www.youtube.com/watch?v=2026Ei1wGTU&list=PLuYB6t6povcLRRoGxsDFai4TRWQMXCx5h",0,erquintana/ALU_Verification_with_UVM,660849980,SystemVerilog,ALU_Verification_with_UVM,224,0,2023-07-03 13:17:26+00:00,[],https://api.github.com/licenses/gpl-3.0
366,https://github.com/look4raghav/UVM-SV.git,2023-07-04 16:10:17+00:00,Practice of UVM-SV,0,look4raghav/UVM-SV,662221742,SystemVerilog,UVM-SV,77,0,2023-07-04 17:37:07+00:00,[],https://api.github.com/licenses/mit
367,https://github.com/warrebe/Functional-Coverage-SV-Design.git,2023-06-27 19:32:53+00:00,Project to collect functional coverage information in System Verilog. UUT is a gcd module that used Euclid's algorithm,0,warrebe/Functional-Coverage-SV-Design,659414480,SystemVerilog,Functional-Coverage-SV-Design,17,0,2023-06-27 19:33:55+00:00,[],None
368,https://github.com/C-YongHeng/apb_rtc.git,2023-07-11 12:01:59+00:00,A RTC(Real Time Clock) with APB Interface,0,C-YongHeng/apb_rtc,665085926,SystemVerilog,apb_rtc,5,0,2023-07-11 12:11:50+00:00,[],None
369,https://github.com/hirensolankiwork/RAM_SV_TB.git,2023-07-26 05:21:50+00:00,RAM testbech environment in systemverilog,0,hirensolankiwork/RAM_SV_TB,670903123,SystemVerilog,RAM_SV_TB,4,0,2023-10-09 08:52:27+00:00,[],None
370,https://github.com/Ukuma012/4_bit_cpu.git,2023-07-26 12:18:43+00:00,4 bit cpu for learn,0,Ukuma012/4_bit_cpu,671045213,SystemVerilog,4_bit_cpu,10,0,2023-07-31 04:48:20+00:00,[],None
371,https://github.com/Levent001/UVM_example.git,2023-08-06 15:14:30+00:00,《UVM实战》书本源代码,0,Levent001/UVM_example,675331416,SystemVerilog,UVM_example,3483,0,2023-08-06 15:27:21+00:00,[],None
372,https://github.com/Deepti-int/verification.git,2023-08-08 07:14:29+00:00,,0,Deepti-int/verification,675986240,SystemVerilog,verification,2,0,2023-08-08 07:57:44+00:00,[],None
373,https://github.com/RohithNagesh/Layered_testbench_for_D-Flipflop.git,2023-08-05 13:38:50+00:00,Objective is to write a layered testbench for D Flip-Flop Asynchronous Reset Low (DFF_ASRL) and to verify the functionality of the DFF_ASRL by generating different types of input stimulus,0,RohithNagesh/Layered_testbench_for_D-Flipflop,675012528,SystemVerilog,Layered_testbench_for_D-Flipflop,20,0,2023-08-05 13:53:07+00:00,[],https://api.github.com/licenses/mit
374,https://github.com/R-Rjn/My_synchronous_fifo.git,2023-08-01 11:03:51+00:00,I am designing and verifying the synchronous fifo so that i can learn so much from it .,0,R-Rjn/My_synchronous_fifo,673316607,SystemVerilog,My_synchronous_fifo,11,0,2023-08-01 16:50:00+00:00,[],https://api.github.com/licenses/unlicense
375,https://github.com/Abeilles14/UVM_testbench.git,2023-08-02 22:02:10+00:00,UVM testbench for an ALU DUT,0,Abeilles14/UVM_testbench,673984996,SystemVerilog,UVM_testbench,2,0,2023-08-07 05:02:49+00:00,[],None
376,https://github.com/SteveYaoLin/catchexceladressbit.git,2023-07-25 04:33:26+00:00,,0,SteveYaoLin/catchexceladressbit,670445562,SystemVerilog,catchexceladressbit,48,0,2023-11-23 14:48:37+00:00,[],None
377,https://github.com/angeelorenaoc/ED2.git,2023-08-14 03:22:08+00:00,Este repositorio contendrá todos los trabajos relacionados con la materia de Electrónica Digital 2,0,angeelorenaoc/ED2,678217139,SystemVerilog,ED2,59313,0,2023-11-17 20:49:49+00:00,[],None
378,https://github.com/Daniyal-Tahsildar/AHB_UVC_LITE_UVM.git,2023-08-14 01:59:28+00:00,AHB Lite is a simpler version of AHB consisting of only one master,0,Daniyal-Tahsildar/AHB_UVC_LITE_UVM,678199546,SystemVerilog,AHB_UVC_LITE_UVM,13,0,2023-12-06 23:07:04+00:00,[],https://api.github.com/licenses/mit
379,https://github.com/Ryusujong/sujongryu.git,2023-07-21 06:47:29+00:00,sujong,0,Ryusujong/sujongryu,669020778,SystemVerilog,sujongryu,13,0,2023-07-22 09:24:40+00:00,[],None
380,https://github.com/carolcordeiro/loac.git,2023-08-14 11:44:25+00:00,Atividades desenvolvidas na disciplina de Laboratório de Organização e Arquitetura de Computadores.,0,carolcordeiro/loac,678366925,SystemVerilog,loac,3655,0,2023-10-28 13:07:44+00:00,[],None
381,https://github.com/RakshithaRShettigar/FIFO_code_with_CRC.git,2023-08-16 05:57:13+00:00,,0,RakshithaRShettigar/FIFO_code_with_CRC,679111682,SystemVerilog,FIFO_code_with_CRC,6,0,2023-08-17 13:44:43+00:00,[],None
382,https://github.com/asburlan01/riscv-cpu.git,2023-08-16 18:39:14+00:00,RISC-V CPU Design,0,asburlan01/riscv-cpu,679397253,SystemVerilog,riscv-cpu,30,0,2023-09-17 22:17:07+00:00,[],None
383,https://github.com/kavanachidananda/fifo.git,2023-08-17 16:54:50+00:00,,0,kavanachidananda/fifo,679804988,SystemVerilog,fifo,9,0,2023-08-17 16:59:29+00:00,[],None
384,https://github.com/wormyrocks/systemverilog-yosys-test.git,2023-08-24 01:00:39+00:00,Minimal example for a SystemVerilog project compiled with Antmicro's yosys plugin. Adapted from https://github.com/wuxx/Colorlight-FPGA-Projects,0,wormyrocks/systemverilog-yosys-test,682340760,SystemVerilog,systemverilog-yosys-test,6,0,2023-08-24 01:02:04+00:00,[],None
385,https://github.com/angusjhwu/RV32I-Pipelined-Processor.git,2023-08-24 02:23:04+00:00,,0,angusjhwu/RV32I-Pipelined-Processor,682360816,SystemVerilog,RV32I-Pipelined-Processor,15,0,2023-09-05 04:25:27+00:00,[],None
386,https://github.com/sharatkirla/UART.git,2023-08-23 17:57:18+00:00,,0,sharatkirla/UART,682223434,SystemVerilog,UART,83,0,2023-08-23 18:01:01+00:00,[],None
387,https://github.com/mralavi20/Digital-Logic-Design-Projects.git,2023-08-24 07:21:46+00:00,,0,mralavi20/Digital-Logic-Design-Projects,682444756,SystemVerilog,Digital-Logic-Design-Projects,170,0,2023-08-24 07:26:08+00:00,[],None
388,https://github.com/basictechlab/uvm-1.2.git,2023-08-26 18:21:08+00:00,,0,basictechlab/uvm-1.2,683487876,SystemVerilog,uvm-1.2,9014,0,2023-08-26 18:27:17+00:00,[],https://api.github.com/licenses/apache-2.0
389,https://github.com/jnjnliwenjie0022/design_pattern.git,2023-08-16 18:17:34+00:00,,0,jnjnliwenjie0022/design_pattern,679389991,SystemVerilog,design_pattern,14,0,2023-08-17 00:55:11+00:00,[],None
390,https://github.com/Avi-Gulati/cpu-datapath.git,2023-08-27 00:06:15+00:00,"I designed, tested, and synthesized a MIPS multicycle processor",0,Avi-Gulati/cpu-datapath,683553205,SystemVerilog,cpu-datapath,4026,0,2023-08-27 00:07:59+00:00,[],None
391,https://github.com/ajanthan-k/Reduced-RISC-V-CPU.git,2023-06-28 10:06:05+00:00,Lab 4 groupwork for ELEC50010 - Autumn IAC,0,ajanthan-k/Reduced-RISC-V-CPU,659670870,SystemVerilog,Reduced-RISC-V-CPU,244,0,2023-06-28 10:09:22+00:00,[],None
392,https://github.com/DPhongUIT2021/Verify_FIFO.git,2023-07-03 12:49:04+00:00,Verify_FIFO,0,DPhongUIT2021/Verify_FIFO,661695702,SystemVerilog,Verify_FIFO,420,0,2023-07-03 12:57:03+00:00,[],None
393,https://github.com/keganpremuda/SystemVerilogMicroprocessor.git,2023-06-28 22:15:32+00:00,,0,keganpremuda/SystemVerilogMicroprocessor,659933081,SystemVerilog,SystemVerilogMicroprocessor,241,0,2023-06-28 22:16:32+00:00,[],None
394,https://github.com/varshach26/Bitcoin-Hashing.git,2023-06-23 06:29:59+00:00,Serial and Parallel Implementation of Bitcoin Hashing using SystemVerilog,0,varshach26/Bitcoin-Hashing,657475565,SystemVerilog,Bitcoin-Hashing,13,0,2023-06-23 06:33:32+00:00,[],None
395,https://github.com/afterCherry/Digital-Integrated-Circuit.git,2023-06-23 17:29:50+00:00,,0,afterCherry/Digital-Integrated-Circuit,657720946,SystemVerilog,Digital-Integrated-Circuit,6115,0,2023-06-27 13:03:08+00:00,[],None
396,https://github.com/an1k3sh/Basic-Multipliers.git,2023-06-24 18:32:33+00:00,,0,an1k3sh/Basic-Multipliers,658091481,SystemVerilog,Basic-Multipliers,5,0,2023-06-24 18:35:22+00:00,[],None
397,https://github.com/VLSIProjects/AXI.git,2023-07-20 11:54:30+00:00,,0,VLSIProjects/AXI,668698299,SystemVerilog,AXI,7,0,2023-07-20 11:57:45+00:00,[],None
398,https://github.com/Temix707/Secondary_projects.git,2023-07-18 15:55:20+00:00,Repository for secondary projects,0,Temix707/Secondary_projects,667924808,SystemVerilog,Secondary_projects,3,0,2023-07-18 16:09:51+00:00,[],None
399,https://github.com/Manimohan05/System-verilog-Max-pool.git,2023-07-16 11:21:39+00:00,Best coding practices Max pooling is an operation used in neural networks (AI) to reduce the size of an image,0,Manimohan05/System-verilog-Max-pool,667018830,SystemVerilog,System-verilog-Max-pool,18672,0,2023-07-16 11:39:40+00:00,[],None
400,https://github.com/hjs99/dma.git,2023-07-22 07:20:01+00:00,,0,hjs99/dma,669409054,SystemVerilog,dma,3,0,2023-07-24 08:43:33+00:00,[],None
401,https://github.com/akibIf/Cell-Design-For-Digital-Integrated-Circuits-CD2IC-.git,2023-07-22 18:17:58+00:00,,0,akibIf/Cell-Design-For-Digital-Integrated-Circuits-CD2IC-,669576870,SystemVerilog,Cell-Design-For-Digital-Integrated-Circuits-CD2IC-,22496,0,2023-07-22 18:19:06+00:00,[],None
402,https://github.com/quintesc/Audio_Equalizer.git,2023-07-11 15:32:28+00:00,Audio Equalizer project from my digital circuit course,0,quintesc/Audio_Equalizer,665169590,SystemVerilog,Audio_Equalizer,377,0,2023-07-11 15:36:57+00:00,[],None
403,https://github.com/Apoorvakaradi/VERILOG.git,2023-07-11 02:50:32+00:00,,0,Apoorvakaradi/VERILOG,664907003,SystemVerilog,VERILOG,0,0,2023-07-11 02:52:14+00:00,[],None
404,https://github.com/elenaledo/cocot-practices.git,2023-08-03 08:09:59+00:00,,0,elenaledo/cocot-practices,674134066,SystemVerilog,cocot-practices,24,0,2023-08-03 08:30:43+00:00,[],None
405,https://github.com/Leo-Cheung-CUHK/AHB_Lite_3.git,2023-06-29 08:35:49+00:00,,0,Leo-Cheung-CUHK/AHB_Lite_3,660097998,SystemVerilog,AHB_Lite_3,235,0,2023-07-26 07:13:23+00:00,[],None
406,https://github.com/lukeag3/Frogger.git,2023-07-13 05:31:30+00:00,,0,lukeag3/Frogger,665832502,SystemVerilog,Frogger,92,0,2023-07-13 06:46:46+00:00,[],https://api.github.com/licenses/mit
407,https://github.com/jundijiujieke/UVM_example_code.git,2023-07-14 01:04:20+00:00,,0,jundijiujieke/UVM_example_code,666206196,SystemVerilog,UVM_example_code,391,0,2023-07-14 01:46:21+00:00,[],None
408,https://github.com/Sameekshapu/hii.git,2023-08-03 04:04:08+00:00,,0,Sameekshapu/hii,674062767,SystemVerilog,hii,223,0,2023-08-03 04:26:35+00:00,[],None
409,https://github.com/amityad33/Vending-Machine-With-Change-System.git,2023-08-08 06:10:50+00:00,"A vending machine is an automated machine that provides items to consumers after cash, or other form of payment is made.",0,amityad33/Vending-Machine-With-Change-System,675965218,SystemVerilog,Vending-Machine-With-Change-System,9,0,2023-08-08 06:16:49+00:00,[],None
410,https://github.com/IgorJoaquimn/2022-LFSR-Fibonacci.git,2023-08-07 00:21:30+00:00,,0,IgorJoaquimn/2022-LFSR-Fibonacci,675449581,SystemVerilog,2022-LFSR-Fibonacci,5629,0,2023-08-07 00:23:07+00:00,[],None
411,https://github.com/CyrilleLeGuerrier/UVM_DV_P1.git,2023-07-26 22:43:43+00:00,UVM for Verification Part 1 : Fundamentals UDEMY Course by Kumar Khandangle,0,CyrilleLeGuerrier/UVM_DV_P1,671252955,SystemVerilog,UVM_DV_P1,18,0,2023-07-26 22:50:27+00:00,[],None
412,https://github.com/Youssefmdany/Verification-of-UART-core-using-UVM.git,2023-07-25 16:01:10+00:00,Verification of UART core using UVM,1,Youssefmdany/Verification-of-UART-core-using-UVM,670691793,SystemVerilog,Verification-of-UART-core-using-UVM,14,0,2023-07-25 16:12:00+00:00,[],None
413,https://github.com/ChuanlaiZang/UVM_Verification.git,2023-07-26 08:01:48+00:00,UVM Verification example,0,ChuanlaiZang/UVM_Verification,670954934,SystemVerilog,UVM_Verification,154,0,2023-12-14 11:29:24+00:00,[],https://api.github.com/licenses/apache-2.0
414,https://github.com/wpi-ece574-f23/ex-arithmetic.git,2023-08-29 17:41:46+00:00,,0,wpi-ece574-f23/ex-arithmetic,684711979,SystemVerilog,ex-arithmetic,108,0,2023-08-29 17:45:07+00:00,[],None
415,https://github.com/RohithNagesh/RISC-V_for_R.git,2023-08-05 12:28:58+00:00,System Verilog code for RISC-V 32bit processor which can execute only R-type instruction,0,RohithNagesh/RISC-V_for_R,674995423,SystemVerilog,RISC-V_for_R,6,0,2023-08-05 13:11:04+00:00,[],https://api.github.com/licenses/mit
416,https://github.com/nabadir/Digital-Design.git,2023-08-09 18:00:50+00:00,,0,nabadir/Digital-Design,676662003,SystemVerilog,Digital-Design,113,0,2023-08-09 18:01:17+00:00,[],None
417,https://github.com/Rahulprakash77/Designing-FIFO-using-Verilog-and-system-Verilog.git,2023-08-23 10:24:49+00:00,,0,Rahulprakash77/Designing-FIFO-using-Verilog-and-system-Verilog,682048373,SystemVerilog,Designing-FIFO-using-Verilog-and-system-Verilog,13,0,2023-08-23 10:43:06+00:00,[],None
418,https://github.com/kernekarina/Verification_ULA_UVM_methodology.git,2023-08-21 13:44:32+00:00,Verification of an Arithmetic Logic Unit (ULA/ALU) capable of performing 7 operations,0,kernekarina/Verification_ULA_UVM_methodology,681200775,SystemVerilog,Verification_ULA_UVM_methodology,7361,0,2023-09-13 15:23:03+00:00,[],None
419,https://github.com/maharnabnath/Pipelined-MIPS32-Processor-Implementation-in-Verilog.git,2023-08-25 12:24:21+00:00,,0,maharnabnath/Pipelined-MIPS32-Processor-Implementation-in-Verilog,683026221,SystemVerilog,Pipelined-MIPS32-Processor-Implementation-in-Verilog,3,0,2023-08-25 12:33:42+00:00,[],None
420,https://github.com/ethanmpeterson/rtl-project.git,2023-08-13 04:27:56+00:00,This repository is an SystemVerilog project template that provides an example VUnit test bench and GitHub Actions job.,0,ethanmpeterson/rtl-project,677916661,SystemVerilog,rtl-project,6,0,2023-08-13 06:37:33+00:00,[],https://api.github.com/licenses/mit
421,https://github.com/Daniyal-Tahsildar/TLM_2.0_SAMPLE_UVM.git,2023-08-12 23:48:11+00:00,A simple implementation of UVM TLM 2.0  ,0,Daniyal-Tahsildar/TLM_2.0_SAMPLE_UVM,677874176,SystemVerilog,TLM_2.0_SAMPLE_UVM,278,0,2023-08-12 23:48:17+00:00,[],None
422,https://github.com/AlejoZapata/Practica0.git,2023-08-17 15:41:27+00:00,,0,AlejoZapata/Practica0,679778369,SystemVerilog,Practica0,5,0,2023-08-17 15:44:26+00:00,[],None
423,https://github.com/CarmelitaBraga/loac-ufcg.git,2023-08-16 23:35:17+00:00,,0,CarmelitaBraga/loac-ufcg,679471857,SystemVerilog,loac-ufcg,1586,0,2023-08-20 01:08:48+00:00,[],None
424,https://github.com/febz012/Verilog-HDL-Projects.git,2023-08-14 17:35:57+00:00,A series of Verilog projects,0,febz012/Verilog-HDL-Projects,678499337,SystemVerilog,Verilog-HDL-Projects,27,0,2023-08-14 18:31:39+00:00,[],None
425,https://github.com/pulp-platform/unbent.git,2023-08-15 16:26:13+00:00,,0,pulp-platform/unbent,678896663,SystemVerilog,unbent,50,0,2023-08-15 16:26:50+00:00,[],
426,https://github.com/wilitp/arqui.git,2023-08-30 19:58:41+00:00,,0,wilitp/arqui,685239077,SystemVerilog,arqui,5971,0,2023-08-30 19:58:51+00:00,[],None
427,https://github.com/namiwijeuom/32-Bit-Non-Pipelined-Single-Cycle-Processor.git,2023-08-25 16:12:20+00:00,"This is a project currently doing under the module EN3021 Digital System Design, Semester 5, Department of Electronic & Telecommunication Engineering, University of Moratuwa, Sri Lanka.",0,namiwijeuom/32-Bit-Non-Pipelined-Single-Cycle-Processor,683109646,SystemVerilog,32-Bit-Non-Pipelined-Single-Cycle-Processor,37462,0,2023-12-03 14:49:54+00:00,"['processor', 'processor-design', 'single-cycle', 'singlecycle-processor']",None
428,https://github.com/sourabhshenoy04/synch_mod12_counter.git,2023-08-05 05:32:09+00:00, Date of Respository Creation: 05/08/2023. This project was undertaken as a part of 4th semester System Verilog Project.,0,sourabhshenoy04/synch_mod12_counter,674901411,SystemVerilog,synch_mod12_counter,20658,0,2023-08-31 14:51:36+00:00,"['digitalsystemdesign', 'systemverilog']",None
429,https://github.com/AthibanNatarajan/half_adder_Sv.git,2023-06-23 10:05:09+00:00,,0,AthibanNatarajan/half_adder_Sv,657551022,SystemVerilog,half_adder_Sv,13,0,2023-06-23 10:06:47+00:00,[],None
430,https://github.com/mayyxeng/cva6-synth-sim.git,2023-06-23 14:52:07+00:00,"A fork of cva6 with a ""synthesizable"" testbench for verilator",0,mayyxeng/cva6-synth-sim,657662864,SystemVerilog,cva6-synth-sim,36516,0,2023-06-23 14:56:33+00:00,[],
431,https://github.com/prashant-pvip/AHB_lite_to_AXI4.git,2023-06-23 12:44:47+00:00,Aim to provide UVM Testbench component for AHB-lite to AXI4,0,prashant-pvip/AHB_lite_to_AXI4,657610703,SystemVerilog,AHB_lite_to_AXI4,6,0,2023-06-23 12:47:04+00:00,[],None
432,https://github.com/stefana17/AMD_PRACTICA.git,2023-06-27 09:40:42+00:00,,0,stefana17/AMD_PRACTICA,659178933,SystemVerilog,AMD_PRACTICA,7358,0,2023-06-27 20:31:23+00:00,[],None
433,https://github.com/lakki0704/Verilog_Project.git,2023-06-27 04:51:51+00:00,Verilog Projects : 1) Vending Machine 2)Traffic Light Controller,0,lakki0704/Verilog_Project,659070973,SystemVerilog,Verilog_Project,266,0,2023-06-30 17:33:10+00:00,['verilog-project'],None
434,https://github.com/vijayakannamaneni/Verilog-Assignments.git,2023-07-27 04:10:57+00:00,,0,vijayakannamaneni/Verilog-Assignments,671323269,SystemVerilog,Verilog-Assignments,782,0,2023-08-24 02:01:16+00:00,[],None
435,https://github.com/HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V1.git,2023-08-03 23:24:45+00:00,RISC-V Pipelined CPU(with one cycle delay output SRAM),0,HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V1,674424324,SystemVerilog,RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V1,7874,0,2023-08-03 23:29:10+00:00,[],None
436,https://github.com/celaltrk/MIPS-Processor.git,2023-07-06 07:22:56+00:00,A simple MIPS processor with limited functionalities implemented using SystemVerilog and Vivado.,0,celaltrk/MIPS-Processor,662925176,SystemVerilog,MIPS-Processor,8,0,2023-07-06 07:23:40+00:00,[],None
437,https://github.com/padmatejamarathu/AHB---lite.git,2023-07-06 21:46:35+00:00,,0,padmatejamarathu/AHB---lite,663240782,SystemVerilog,AHB---lite,17,0,2023-07-06 21:49:10+00:00,[],None
438,https://github.com/gouthampalem2/Design-and-Verification-of-a-I2C-based-memory-subsystem.git,2023-07-09 17:47:42+00:00,System Verilog Project with Design and Verification,0,gouthampalem2/Design-and-Verification-of-a-I2C-based-memory-subsystem,664349306,SystemVerilog,Design-and-Verification-of-a-I2C-based-memory-subsystem,1342,0,2023-07-09 17:48:26+00:00,[],None
439,https://github.com/JuniorBrice/JR-COLLEGE-SingleCycleRISC.git,2023-07-06 17:02:20+00:00,"Basic digital system that implements a single cycle datapath of a modern computer with a RISC architecture. 4 possible operations: lw, sw, add and sub.",0,JuniorBrice/JR-COLLEGE-SingleCycleRISC,663150751,SystemVerilog,JR-COLLEGE-SingleCycleRISC,14,0,2023-07-06 17:24:51+00:00,[],None
440,https://github.com/lucaslimasilvafoligem/Loac-Assembly-System_verilog_Circuitverse.git,2023-06-30 21:05:16+00:00,Loac-Assembly-System_verilog_Circuitverse,0,lucaslimasilvafoligem/Loac-Assembly-System_verilog_Circuitverse,660786571,SystemVerilog,Loac-Assembly-System_verilog_Circuitverse,25032,0,2023-06-30 21:21:13+00:00,[],None
441,https://github.com/noamgalili694/verification_enviroment.git,2023-07-05 07:16:49+00:00,,0,noamgalili694/verification_enviroment,662456376,SystemVerilog,verification_enviroment,9,0,2023-07-05 11:12:08+00:00,[],None
442,https://github.com/mgslobodian/scr1_pipe_ialu_test.git,2023-07-25 19:43:29+00:00,Testbench for addition and subtraction operations of ialu,0,mgslobodian/scr1_pipe_ialu_test,670767832,SystemVerilog,scr1_pipe_ialu_test,13,0,2023-07-25 20:33:35+00:00,[],None
443,https://github.com/jorgenkraghjakobsen/control.git,2023-07-20 12:53:23+00:00,Simple register bank with i2c interface ,0,jorgenkraghjakobsen/control,668721171,SystemVerilog,control,2223,0,2023-07-20 12:55:12+00:00,[],None
444,https://github.com/Temix707/PULPino.git,2023-07-15 12:02:53+00:00,Practical course with APB bus,0,Temix707/PULPino,666735849,SystemVerilog,PULPino,57319,0,2023-07-15 12:07:50+00:00,[],None
445,https://github.com/Ukuma012/4-bit-cpu.git,2023-07-18 13:19:09+00:00,4 bit cpu for learn,0,Ukuma012/4-bit-cpu,667861999,SystemVerilog,4-bit-cpu,12,0,2023-07-24 07:04:26+00:00,[],None
446,https://github.com/kevinHA0623/-.git,2023-07-22 09:49:34+00:00,,0,kevinHA0623/-,669444270,SystemVerilog,-,14,0,2023-07-22 09:58:32+00:00,[],None
447,https://github.com/amityad33/16-bit-Carry-Lookahead-CLA-Adder.git,2023-08-08 06:29:35+00:00,16-bit Carry Look-ahead Adder circuits designed by cascading the 4-bit adder circuit with carry logic.,0,amityad33/16-bit-Carry-Lookahead-CLA-Adder,675971268,SystemVerilog,16-bit-Carry-Lookahead-CLA-Adder,2,0,2023-08-08 06:30:55+00:00,[],None
448,https://github.com/gabrielchin96/utp-hft.git,2023-08-10 13:58:16+00:00,RTL and Testbench for FIX parser ,0,gabrielchin96/utp-hft,676999815,SystemVerilog,utp-hft,11,0,2023-08-10 14:02:24+00:00,[],https://api.github.com/licenses/mit
449,https://github.com/gdl1245105585/test.git,2023-08-10 13:34:22+00:00,,0,gdl1245105585/test,676990445,SystemVerilog,test,35521,0,2023-08-11 03:12:42+00:00,[],None
450,https://github.com/jayant31j/SIT329-4.1P.git,2023-08-11 05:44:14+00:00,VERILOG PART II,0,jayant31j/SIT329-4.1P,677254453,SystemVerilog,SIT329-4.1P,6,0,2023-08-11 05:49:01+00:00,[],None
451,https://github.com/sachinym-git/AXI123.git,2023-08-13 07:08:31+00:00,,0,sachinym-git/AXI123,677947206,SystemVerilog,AXI123,68,0,2023-08-13 07:08:48+00:00,[],https://api.github.com/licenses/mit
452,https://github.com/sebasqr22/squesada_ylopez_mgarro_digital_design_lab_2023.git,2023-08-23 01:40:40+00:00,,0,sebasqr22/squesada_ylopez_mgarro_digital_design_lab_2023,681890167,SystemVerilog,squesada_ylopez_mgarro_digital_design_lab_2023,68628,0,2023-09-27 05:02:18+00:00,[],None
453,https://github.com/RuzannaAleksanyan/digital_design_training.git,2023-08-17 21:37:28+00:00,,0,RuzannaAleksanyan/digital_design_training,679894983,SystemVerilog,digital_design_training,20,0,2023-08-17 21:45:29+00:00,[],None
454,https://github.com/dvsprouts/dvs_clk_rst_vip.git,2023-08-27 17:20:14+00:00,,1,dvsprouts/dvs_clk_rst_vip,683782576,SystemVerilog,dvs_clk_rst_vip,34,0,2023-09-27 15:24:23+00:00,[],None
455,https://github.com/smyy1001/bilkent_cs223.git,2023-07-27 14:15:08+00:00,Bilkent CS223 Spring 2023,0,smyy1001/bilkent_cs223,671525964,SystemVerilog,bilkent_cs223,3140,0,2023-08-10 12:57:10+00:00,[],None
456,https://github.com/Tse3792/UVM_Learning.git,2023-07-27 14:07:17+00:00,Only for learning,0,Tse3792/UVM_Learning,671522845,SystemVerilog,UVM_Learning,581,0,2023-07-27 14:29:00+00:00,[],https://api.github.com/licenses/gpl-3.0
457,https://github.com/anudeepnrao/complex8smul.git,2023-08-03 09:34:05+00:00,Complex Multiplier with 8bit unsigned operand inputs,0,anudeepnrao/complex8smul,674163643,SystemVerilog,complex8smul,5,0,2023-08-26 05:48:19+00:00,[],https://api.github.com/licenses/mit
458,https://github.com/Maani02/fifo_implementation.git,2023-08-18 09:59:09+00:00,,0,Maani02/fifo_implementation,680085894,SystemVerilog,fifo_implementation,48,0,2023-09-19 04:36:48+00:00,[],None
459,https://github.com/tonyalfred/APB-Master-Agent-UVM-VIP.git,2023-08-18 18:53:18+00:00,,0,tonyalfred/APB-Master-Agent-UVM-VIP,680266577,SystemVerilog,APB-Master-Agent-UVM-VIP,14,0,2023-08-18 18:56:06+00:00,[],None
460,https://github.com/thinhngo11/DUT-aware-Scoreboards.git,2023-08-20 20:16:03+00:00,,0,thinhngo11/DUT-aware-Scoreboards,680916525,SystemVerilog,DUT-aware-Scoreboards,18,0,2023-08-20 20:19:48+00:00,[],None
461,https://github.com/KushagraYADAV/Pipelined-MIPS32-Processor-Implementation-in-Verilog.git,2023-08-21 11:33:17+00:00,,0,KushagraYADAV/Pipelined-MIPS32-Processor-Implementation-in-Verilog,681151004,SystemVerilog,Pipelined-MIPS32-Processor-Implementation-in-Verilog,4,0,2023-08-23 12:21:19+00:00,[],None
462,https://github.com/vakshit/cse-bubble.git,2023-08-21 14:04:50+00:00,A basic processor written in MIPS Assembly to support basic operations like arithmatic operations and conditional branching.,0,vakshit/cse-bubble,681209518,SystemVerilog,cse-bubble,275,0,2023-08-21 14:31:10+00:00,[],https://api.github.com/licenses/mit
463,https://github.com/wpi-ece574-f23/ex-expressions.git,2023-08-24 18:31:05+00:00,,0,wpi-ece574-f23/ex-expressions,682701062,SystemVerilog,ex-expressions,30,0,2023-08-24 18:32:40+00:00,[],None
464,https://github.com/raccog/PumpkinComputer.git,2023-08-26 20:34:26+00:00,,0,raccog/PumpkinComputer,683518797,SystemVerilog,PumpkinComputer,82,0,2023-09-12 13:33:52+00:00,[],None
465,https://github.com/yashdabke/Digital-Design-Programs-using-System-Verilog.git,2023-08-20 18:20:26+00:00,System Verilog coding exercises for CADD.,0,yashdabke/Digital-Design-Programs-using-System-Verilog,680887996,SystemVerilog,Digital-Design-Programs-using-System-Verilog,14,0,2023-12-30 13:27:03+00:00,[],None
466,https://github.com/amidthestars/DAV-Outreach-Module-Solutions.git,2023-07-10 01:40:47+00:00,,0,amidthestars/DAV-Outreach-Module-Solutions,664441850,SystemVerilog,DAV-Outreach-Module-Solutions,55,0,2024-01-03 06:30:23+00:00,[],None
467,https://github.com/ShashankOV/noc.git,2023-08-24 02:58:39+00:00,Simple Intel FPGA Optimized NoC,0,ShashankOV/noc,682369577,SystemVerilog,noc,300,0,2023-11-28 17:56:57+00:00,[],https://api.github.com/licenses/mit
468,https://github.com/Sirius1232/ComputerArchitecture-CMU.git,2023-08-17 08:08:14+00:00,Labs of Computer Architecture Course (CMU 18-447),0,Sirius1232/ComputerArchitecture-CMU,679607759,SystemVerilog,ComputerArchitecture-CMU,1188,0,2023-08-19 09:46:22+00:00,[],None
469,https://github.com/mohamedelshafie/Verifying-ALU-using-UVM.git,2023-07-02 22:24:08+00:00,,0,mohamedelshafie/Verifying-ALU-using-UVM,661453530,SystemVerilog,Verifying-ALU-using-UVM,42,0,2023-07-02 23:09:21+00:00,[],None
470,https://github.com/dsellerbrock/SystemVerilog_Prisoners.git,2023-07-02 19:02:35+00:00,,0,dsellerbrock/SystemVerilog_Prisoners,661412736,SystemVerilog,SystemVerilog_Prisoners,4,0,2023-07-02 19:02:41+00:00,[],None
471,https://github.com/maxsofar/044252---sim2.git,2023-06-29 06:17:03+00:00,,0,maxsofar/044252---sim2,660049682,SystemVerilog,044252---sim2,8,0,2023-08-08 20:53:30+00:00,[],None
472,https://github.com/LiZhao1998/UVM_Test.git,2023-07-13 15:44:14+00:00,,0,LiZhao1998/UVM_Test,666053528,SystemVerilog,UVM_Test,6,0,2023-07-13 16:21:43+00:00,[],None
473,https://github.com/yangzeyu1026/CACHE_VICTIM_PREFETECH.git,2023-08-28 01:36:31+00:00,This is the code that implement a write-back directly-mapped cache with victim buffer and hardware prefetch.,0,yangzeyu1026/CACHE_VICTIM_PREFETECH,683883744,SystemVerilog,CACHE_VICTIM_PREFETECH,59,0,2023-08-28 01:39:22+00:00,[],None
474,https://github.com/brunomoraislopes1/alura.site.git,2023-08-07 18:06:01+00:00,,0,brunomoraislopes1/alura.site,675785573,SystemVerilog,alura.site,1204,0,2023-08-07 18:36:44+00:00,[],https://api.github.com/licenses/mit
475,https://github.com/anj501/CS120A.git,2023-08-27 00:32:58+00:00,School Projects for Logic Design,0,anj501/CS120A,683556793,SystemVerilog,CS120A,11,0,2023-08-27 00:34:59+00:00,[],None
476,https://github.com/farbodfld/Computer-Architecture.git,2023-08-14 11:07:10+00:00,You can find my all projects for Computer-Architecture course at Shahid-Beheshti-University (SBU),0,farbodfld/Computer-Architecture,678354438,SystemVerilog,Computer-Architecture,77961,0,2023-08-14 12:42:51+00:00,[],None
477,https://github.com/kirollos9/multi_mode_counter.git,2023-07-27 13:35:30+00:00,,0,kirollos9/multi_mode_counter,671510365,SystemVerilog,multi_mode_counter,2,0,2023-07-27 13:36:57+00:00,[],None
478,https://github.com/GURUNAM97/uvm-core.git,2023-08-03 16:39:12+00:00,,0,GURUNAM97/uvm-core,674316858,SystemVerilog,uvm-core,764,0,2023-08-03 16:39:30+00:00,[],https://api.github.com/licenses/apache-2.0
479,https://github.com/Ishaananish/AHB_Bus_Protocol.git,2023-08-25 05:55:56+00:00,,0,Ishaananish/AHB_Bus_Protocol,682894695,SystemVerilog,AHB_Bus_Protocol,14,0,2023-08-25 05:57:45+00:00,[],https://api.github.com/licenses/mit
480,https://github.com/jayant31j/SIT329-5.1P.git,2023-08-18 08:42:12+00:00,VERILOG PART III,0,jayant31j/SIT329-5.1P,680059001,SystemVerilog,SIT329-5.1P,4,0,2023-08-18 08:48:19+00:00,[],None
481,https://github.com/akashsaraswatt/Latest_code.git,2023-08-22 10:50:41+00:00,,0,akashsaraswatt/Latest_code,681593767,SystemVerilog,Latest_code,13,0,2023-08-22 11:19:09+00:00,[],None
482,https://github.com/zhuding924/uvm-s02-master.git,2023-08-22 11:36:37+00:00,,0,zhuding924/uvm-s02-master,681610274,SystemVerilog,uvm-s02-master,12,0,2023-08-23 14:01:56+00:00,[],None
483,https://github.com/maharnabnath/Pipelined-3-Level-Unsigned-Multiplier-using-Verilog.git,2023-08-25 12:34:45+00:00,,0,maharnabnath/Pipelined-3-Level-Unsigned-Multiplier-using-Verilog,683029852,SystemVerilog,Pipelined-3-Level-Unsigned-Multiplier-using-Verilog,3,0,2023-08-25 12:42:09+00:00,[],None
484,https://github.com/balaji-vbr/Design-and-Verification-of-a-FIFO-with-Circular-Buffer.git,2023-07-31 18:23:24+00:00,,0,balaji-vbr/Design-and-Verification-of-a-FIFO-with-Circular-Buffer,673040365,SystemVerilog,Design-and-Verification-of-a-FIFO-with-Circular-Buffer,154,0,2023-07-31 18:25:31+00:00,[],None
485,https://github.com/KimSeongGyul/lab1.git,2023-07-25 04:07:54+00:00,prj about commento lab1,0,KimSeongGyul/lab1,670439436,SystemVerilog,lab1,285,0,2023-07-25 04:14:42+00:00,[],None
486,https://github.com/EzzAddinKukhun/UART_TX_SV.git,2023-08-19 21:27:00+00:00,,0,EzzAddinKukhun/UART_TX_SV,680627840,SystemVerilog,UART_TX_SV,2,0,2023-08-19 21:29:37+00:00,[],None
487,https://github.com/cepdnaclk/e19-co227-Developing-image-capturing-and-analysing-system-using-FPGA.git,2023-08-23 07:07:58+00:00,Developing a simple FPGA image processing application to high speed image  capturing and analysis. ,2,cepdnaclk/e19-co227-Developing-image-capturing-and-analysing-system-using-FPGA,681978543,SystemVerilog,e19-co227-Developing-image-capturing-and-analysing-system-using-FPGA,11583,0,2023-09-21 00:38:10+00:00,[],None
488,https://github.com/vicg42/ialu_test.git,2023-06-24 16:23:47+00:00,testing work with UVM (Universal Verification Methodology),0,vicg42/ialu_test,658057624,SystemVerilog,ialu_test,723,0,2023-06-26 09:28:33+00:00,[],
489,https://github.com/yurinvv/test_task_1.git,2023-07-07 19:38:08+00:00,,0,yurinvv/test_task_1,663648151,SystemVerilog,test_task_1,61942,0,2023-10-15 18:57:34+00:00,[],None
490,https://github.com/akmsw/adc-tp3.git,2023-07-05 16:04:06+00:00,,0,akmsw/adc-tp3,662665081,SystemVerilog,adc-tp3,28390,0,2023-09-24 00:45:11+00:00,[],None
491,https://github.com/Bipasha02/HighSpeed-CarryLookAhead-Adder.git,2023-07-07 07:10:43+00:00,,0,Bipasha02/HighSpeed-CarryLookAhead-Adder,663384044,SystemVerilog,HighSpeed-CarryLookAhead-Adder,2,0,2023-10-23 07:31:13+00:00,[],None
492,https://github.com/teja-91/OpenPyDV.git,2023-07-09 08:01:52+00:00,A repository of experiments with Open source DV workflows,0,teja-91/OpenPyDV,664198902,SystemVerilog,OpenPyDV,218,0,2023-09-21 15:07:18+00:00,[],https://api.github.com/licenses/apache-2.0
493,https://github.com/humayunsiraj123/RISC_V.git,2023-07-03 21:13:26+00:00,,0,humayunsiraj123/RISC_V,661870684,SystemVerilog,RISC_V,436,0,2023-07-03 21:17:53+00:00,[],None
494,https://github.com/vmartirosyan/cpu_in_verilog.git,2023-07-03 10:32:16+00:00,An 8-bit CPU design in Verilog.,0,vmartirosyan/cpu_in_verilog,661645948,SystemVerilog,cpu_in_verilog,12,0,2023-07-03 10:48:09+00:00,[],None
495,https://github.com/shri1407/uvm_codes.git,2023-06-29 08:51:58+00:00,,0,shri1407/uvm_codes,660103784,SystemVerilog,uvm_codes,20,0,2023-06-29 19:51:45+00:00,[],None
496,https://github.com/ronniegertman/32x32bit-multiplier.git,2023-07-01 15:11:13+00:00,,0,ronniegertman/32x32bit-multiplier,661030121,SystemVerilog,32x32bit-multiplier,34,0,2023-07-01 15:15:50+00:00,[],None
497,https://github.com/axyrai/makefileTest.git,2023-07-18 04:41:12+00:00,,0,axyrai/makefileTest,667683701,SystemVerilog,makefileTest,0,0,2023-07-18 04:43:52+00:00,[],None
498,https://github.com/moechaker/FIFO_Test_Bench.git,2023-07-18 06:08:48+00:00,This repository contains a test bench implemented in SystemVerilog to verify the functionality of a FIFO (First-In-First-Out) design. ,0,moechaker/FIFO_Test_Bench,667707284,SystemVerilog,FIFO_Test_Bench,137,0,2023-07-25 05:38:23+00:00,[],None
499,https://github.com/barawn/firmware-pueo-turf.git,2023-07-18 18:28:47+00:00,Firmware for the PUEO TURF,0,barawn/firmware-pueo-turf,667979597,SystemVerilog,firmware-pueo-turf,235,0,2023-07-18 18:29:17+00:00,[],None
500,https://github.com/MhamedAhmad/Pinball-VGA.git,2023-07-23 05:20:34+00:00,,0,MhamedAhmad/Pinball-VGA,669687021,SystemVerilog,Pinball-VGA,1096,0,2023-07-23 05:30:50+00:00,[],None
501,https://github.com/vicg42/pyuvm-test.git,2023-06-23 13:23:02+00:00,,0,vicg42/pyuvm-test,657626214,SystemVerilog,pyuvm-test,55,0,2023-06-23 17:28:36+00:00,[],None
502,https://github.com/AbhinayOja/ECE-564-Piplined-CNN-.git,2023-07-19 02:42:22+00:00,,0,AbhinayOja/ECE-564-Piplined-CNN-,668094531,SystemVerilog,ECE-564-Piplined-CNN-,872,0,2023-07-20 16:13:20+00:00,[],None
503,https://github.com/Hao-Che-Tsai/VLSI-System-Design.git,2023-07-19 22:21:32+00:00,,0,Hao-Che-Tsai/VLSI-System-Design,668470603,SystemVerilog,VLSI-System-Design,60,0,2023-07-19 23:21:31+00:00,[],None
504,https://github.com/AlPrime2k1/UVM.git,2023-07-28 20:23:19+00:00,Repository containing various UVM based programs.,0,AlPrime2k1/UVM,672061748,SystemVerilog,UVM,431,0,2023-07-28 20:28:59+00:00,[],None
505,https://github.com/Talin-Estiban/chip-design-course.git,2023-08-21 15:27:40+00:00,,0,Talin-Estiban/chip-design-course,681243990,SystemVerilog,chip-design-course,958,0,2023-10-13 14:33:39+00:00,[],None
506,https://github.com/mghgm/DSD-project.git,2023-07-02 18:52:40+00:00,,0,mghgm/DSD-project,661410419,SystemVerilog,DSD-project,496,0,2023-07-03 06:31:55+00:00,[],None
507,https://github.com/CSCE-616-FA23/code.git,2023-08-30 14:56:23+00:00,,1,CSCE-616-FA23/code,685118974,SystemVerilog,code,1097,0,2023-08-30 18:11:10+00:00,[],None
508,https://github.com/MrDoomsday/UART.git,2023-07-24 12:53:24+00:00,AXI-Lite (or Avalon-MM) UART IP-core,0,MrDoomsday/UART,670169873,SystemVerilog,UART,746,0,2024-01-28 18:18:53+00:00,[],None
509,https://github.com/Purdue-SoCET/intro-socet.git,2023-08-10 17:44:58+00:00,,0,Purdue-SoCET/intro-socet,677085487,SystemVerilog,intro-socet,160,0,2023-08-30 01:16:41+00:00,[],None
510,https://github.com/ethanmpeterson/peripherals.git,2023-08-13 23:06:32+00:00,FPGA IO Peripherals with AXI Stream Wrapping,0,ethanmpeterson/peripherals,678170308,SystemVerilog,peripherals,2674,0,2023-12-18 02:47:26+00:00,[],https://api.github.com/licenses/mit
511,https://github.com/Ishaananish/UART.git,2023-08-23 09:53:14+00:00,,0,Ishaananish/UART,682037056,SystemVerilog,UART,85,0,2023-08-23 09:54:05+00:00,[],https://api.github.com/licenses/mit
512,https://github.com/B1mendez/FEGprocessorx.git,2023-08-24 05:55:49+00:00,CSE 141L microprocessor project,0,B1mendez/FEGprocessorx,682413563,SystemVerilog,FEGprocessorx,741,0,2023-09-11 04:31:51+00:00,[],None
513,https://github.com/rookieovo1103/cache.git,2023-08-23 12:34:34+00:00,这是一个本科毕业设计,0,rookieovo1103/cache,682095484,SystemVerilog,cache,20,0,2023-08-23 12:38:24+00:00,[],None
514,https://github.com/surendrayerragorla/Synchronous_FIFO.git,2023-08-22 16:40:16+00:00,,0,surendrayerragorla/Synchronous_FIFO,681736519,SystemVerilog,Synchronous_FIFO,10,0,2023-08-22 16:41:30+00:00,[],https://api.github.com/licenses/mit
515,https://github.com/kakash221996/Synchronous-FIFO.git,2023-08-22 15:15:47+00:00,,0,kakash221996/Synchronous-FIFO,681703502,SystemVerilog,Synchronous-FIFO,7,0,2023-08-22 15:28:39+00:00,[],None
516,https://github.com/surendrayerragorla/MIPS_32_Processor.git,2023-08-22 11:07:01+00:00,,0,surendrayerragorla/MIPS_32_Processor,681599412,SystemVerilog,MIPS_32_Processor,11,0,2023-08-22 11:12:01+00:00,[],https://api.github.com/licenses/mit
517,https://github.com/Jeremy185/VeriQuiz1.git,2023-08-17 22:00:46+00:00,,0,Jeremy185/VeriQuiz1,679900030,SystemVerilog,VeriQuiz1,360,0,2023-08-17 23:28:13+00:00,[],None
518,https://github.com/woodaaron2001/Custom-8-Bit-Computer-FPGA.git,2023-08-24 16:40:00+00:00,,0,woodaaron2001/Custom-8-Bit-Computer-FPGA,682659134,SystemVerilog,Custom-8-Bit-Computer-FPGA,284272,0,2023-08-24 16:44:11+00:00,[],None
519,https://github.com/kavir999/Daniel_J_DV.git,2023-08-25 17:36:28+00:00,,0,kavir999/Daniel_J_DV,683139075,SystemVerilog,Daniel_J_DV,12,0,2023-08-25 17:38:07+00:00,[],https://api.github.com/licenses/apache-2.0
520,https://github.com/tmarmay/AquitecturaComputador.git,2023-08-30 00:02:20+00:00,,0,tmarmay/AquitecturaComputador,684828652,SystemVerilog,AquitecturaComputador,10082,0,2023-09-05 23:50:27+00:00,[],None
521,https://github.com/irfanmao/irfan_hw.git,2023-07-17 19:18:56+00:00,,0,irfanmao/irfan_hw,667554427,SystemVerilog,irfan_hw,88,0,2023-07-17 19:31:11+00:00,[],None
522,https://github.com/bjybs123/fMAC.git,2023-08-09 08:52:36+00:00,fMAC implementation based on the paper 'FAST: DNN Training Under Variable Precision Block Floating Point with Stochastic Rounding.',0,bjybs123/fMAC,676461404,SystemVerilog,fMAC,12,0,2023-08-09 08:53:52+00:00,[],None
523,https://github.com/dbrettcom/threebit_adder.git,2023-08-06 08:08:16+00:00,,1,dbrettcom/threebit_adder,675229237,SystemVerilog,threebit_adder,1,0,2023-08-06 08:09:39+00:00,[],None
524,https://github.com/Rohithgarde/SinglePort_RAM.git,2023-08-06 14:05:26+00:00,,0,Rohithgarde/SinglePort_RAM,675312599,SystemVerilog,SinglePort_RAM,1053,0,2023-08-06 14:07:04+00:00,[],None
525,https://github.com/Heaton15/udemy-uvm.git,2023-06-23 14:14:51+00:00,SystemVerilog UVM Training,0,Heaton15/udemy-uvm,657647446,SystemVerilog,udemy-uvm,647,0,2023-06-29 13:29:42+00:00,[],None
526,https://github.com/ghz-ws/eclypse_z7_adc_dac.git,2023-07-04 13:03:56+00:00,Eclypse Z7 ADC&DAC config.,0,ghz-ws/eclypse_z7_adc_dac,662146668,SystemVerilog,eclypse_z7_adc_dac,14,0,2023-07-04 13:04:32+00:00,[],https://api.github.com/licenses/mit
527,https://github.com/mohamedelshafie/verifying-ALU-using-pyuvm.git,2023-07-02 23:12:31+00:00,,0,mohamedelshafie/verifying-ALU-using-pyuvm,661461534,SystemVerilog,verifying-ALU-using-pyuvm,27,0,2023-07-02 23:13:00+00:00,[],None
528,https://github.com/PRAGATI-0102/RCA-using-SV-Day-084-.git,2023-07-02 18:05:09+00:00,A Ripple Carry Adder is a digital circuit that performs binary addition of two n-bit numbers by cascading full adders.,0,PRAGATI-0102/RCA-using-SV-Day-084-,661398104,SystemVerilog,RCA-using-SV-Day-084-,145,0,2023-07-02 18:06:21+00:00,[],None
529,https://github.com/bkrishna2005/UVM.git,2023-07-06 17:14:19+00:00,,0,bkrishna2005/UVM,663154704,SystemVerilog,UVM,3,0,2023-07-16 20:22:51+00:00,[],None
530,https://github.com/anshb24/SystemVerilog-Fundamentals.git,2023-08-01 06:25:36+00:00,,0,anshb24/SystemVerilog-Fundamentals,673218974,SystemVerilog,SystemVerilog-Fundamentals,28,0,2023-08-01 06:31:49+00:00,[],None
531,https://github.com/yuri-panchul/2023-georgia-armenia-exam.git,2023-07-20 07:05:18+00:00,A repository created based on valid-ready-etc and basics-graphics-music,0,yuri-panchul/2023-georgia-armenia-exam,668592406,SystemVerilog,2023-georgia-armenia-exam,1143,0,2023-07-20 08:37:19+00:00,[],
532,https://github.com/henrw/verilog-2-stage-ex.git,2023-06-27 13:55:41+00:00,,0,henrw/verilog-2-stage-ex,659281712,SystemVerilog,verilog-2-stage-ex,11,0,2023-06-27 13:57:39+00:00,[],None
533,https://github.com/RCTd/AMD_SummerPractice.git,2023-06-26 19:24:43+00:00,,0,RCTd/AMD_SummerPractice,658924252,SystemVerilog,AMD_SummerPractice,3753,0,2023-07-12 21:18:58+00:00,[],None
534,https://github.com/jaycordaro/audio_gain.git,2023-06-27 07:47:06+00:00,SystemVerilog Audio gain block.  Capable of adjusting PCM audio gain from -22dB to +22dB.  SPI register interface,0,jaycordaro/audio_gain,659131406,SystemVerilog,audio_gain,5,0,2023-06-27 07:59:59+00:00,"['audio', 'pcm']",None
535,https://github.com/Mohd-Adib-Khan/Finite-State-Machine-Design-for-Vending-Machine-Behavior.git,2023-08-13 06:11:19+00:00,,0,Mohd-Adib-Khan/Finite-State-Machine-Design-for-Vending-Machine-Behavior,677935489,SystemVerilog,Finite-State-Machine-Design-for-Vending-Machine-Behavior,5,0,2023-08-13 06:22:52+00:00,[],None
536,https://github.com/varshach26/SHA256-Algorithm.git,2023-06-23 06:02:13+00:00,Implementation of SHA256 Algorithm using System Verilog,0,varshach26/SHA256-Algorithm,657466512,SystemVerilog,SHA256-Algorithm,54,0,2023-06-23 06:03:48+00:00,[],None
537,https://github.com/KID-2k-internship/Async_apb_verifiction-.git,2023-06-25 08:51:35+00:00,,0,KID-2k-internship/Async_apb_verifiction-,658263222,SystemVerilog,Async_apb_verifiction-,267,0,2023-06-25 10:17:39+00:00,[],None
538,https://github.com/MarleyLobao/histogram_sv.git,2023-07-13 03:38:32+00:00,"A simple example of how to instantiate more than once the same covergroup, either using embedded covergroups (inside a class) or in another file, like a package.",0,MarleyLobao/histogram_sv,665805264,SystemVerilog,histogram_sv,2,0,2023-07-13 03:46:00+00:00,[],None
539,https://github.com/ItteRevanth/Design_and_Verification_of_APB_RAM_SV.git,2023-07-07 06:59:10+00:00,,0,ItteRevanth/Design_and_Verification_of_APB_RAM_SV,663379941,SystemVerilog,Design_and_Verification_of_APB_RAM_SV,718,0,2023-07-07 07:04:27+00:00,[],None
540,https://github.com/mkmkk798987/adder_sv.git,2023-07-12 19:29:40+00:00,verification of adder,0,mkmkk798987/adder_sv,665694234,SystemVerilog,adder_sv,357,0,2023-07-12 19:33:34+00:00,[],None
541,https://github.com/tamangill/Sneaky-Flappy-Bird.git,2023-07-13 19:08:25+00:00,,0,tamangill/Sneaky-Flappy-Bird,666122575,SystemVerilog,Sneaky-Flappy-Bird,30,0,2023-07-13 19:10:00+00:00,[],None
542,https://github.com/hwangsab/ARM-Pipelined-CPU.git,2023-07-14 04:51:16+00:00,,0,hwangsab/ARM-Pipelined-CPU,666258833,SystemVerilog,ARM-Pipelined-CPU,1219,0,2023-07-14 20:35:03+00:00,[],None
543,https://github.com/Surtr0607/picoMIPS.git,2023-07-09 11:54:32+00:00,,0,Surtr0607/picoMIPS,664253354,SystemVerilog,picoMIPS,18,0,2023-07-09 11:56:02+00:00,[],None
544,https://github.com/NayraSousa/ProjetosSystemVerilog.git,2023-07-07 22:57:37+00:00,,0,NayraSousa/ProjetosSystemVerilog,663701284,SystemVerilog,ProjetosSystemVerilog,18,0,2023-07-07 22:59:15+00:00,[],None
545,https://github.com/Meyvnverif/SPI_verif.git,2023-07-14 18:27:30+00:00,,0,Meyvnverif/SPI_verif,666520838,SystemVerilog,SPI_verif,106,0,2023-07-14 19:10:15+00:00,[],None
546,https://github.com/boga-vidhath/SequentialMultiplier.git,2023-07-16 00:33:54+00:00,,0,boga-vidhath/SequentialMultiplier,666896717,SystemVerilog,SequentialMultiplier,2,0,2023-07-16 00:37:45+00:00,[],None
547,https://github.com/juanpablogt/Arquitectura_de_computadoras.git,2023-08-20 05:33:12+00:00,,0,juanpablogt/Arquitectura_de_computadoras,680699809,SystemVerilog,Arquitectura_de_computadoras,1467,0,2023-08-31 20:44:36+00:00,[],https://api.github.com/licenses/mit
548,https://github.com/RadhaKuruva/SV-Practice.git,2023-07-03 23:57:22+00:00,,0,RadhaKuruva/SV-Practice,661903047,SystemVerilog,SV-Practice,4,0,2023-07-04 00:02:07+00:00,[],None
549,https://github.com/RISCY-Lib/uart_agent.git,2023-07-04 00:29:26+00:00,A UART UVM Agent,0,RISCY-Lib/uart_agent,661909303,SystemVerilog,uart_agent,20,0,2023-07-05 23:32:00+00:00,[],https://api.github.com/licenses/lgpl-2.1
550,https://github.com/shapoco/t120-framebuff.git,2023-07-02 12:41:23+00:00,HDMI output and framebuffer sample for T120F576C-DK,0,shapoco/t120-framebuff,661305665,SystemVerilog,t120-framebuff,2115,0,2023-07-02 12:50:09+00:00,[],None
551,https://github.com/alirezasm0/dsd-proj.git,2023-07-02 19:56:00+00:00,,0,alirezasm0/dsd-proj,661425001,SystemVerilog,dsd-proj,35574,0,2023-07-02 20:11:30+00:00,[],None
552,https://github.com/jakaransingh/CDC-Modules.git,2023-07-04 20:27:08+00:00,,0,jakaransingh/CDC-Modules,662302111,SystemVerilog,CDC-Modules,14,0,2023-07-04 20:54:38+00:00,[],None
553,https://github.com/DmitryZlobec/basics-graphics-music.git,2023-07-04 17:52:05+00:00,,0,DmitryZlobec/basics-graphics-music,662256524,SystemVerilog,basics-graphics-music,1276,0,2023-07-04 17:54:04+00:00,[],
554,https://github.com/ronniegertman/alu64bit.git,2023-06-30 14:40:23+00:00,my first uni project- creating a 64 bit alu using systemverilog,0,ronniegertman/alu64bit,660668997,SystemVerilog,alu64bit,3,0,2023-06-30 15:06:10+00:00,[],None
555,https://github.com/rcardenes/LF-Building-a-RISC-V-CPU-Core.git,2023-06-27 08:29:15+00:00,CPU-building task for the Linux Foundation RISC-V course,0,rcardenes/LF-Building-a-RISC-V-CPU-Core,659148317,SystemVerilog,LF-Building-a-RISC-V-CPU-Core,33,0,2023-07-04 16:42:54+00:00,[],None
556,https://github.com/Kakapio/RISC-V-Computer.git,2023-07-06 07:03:03+00:00,,0,Kakapio/RISC-V-Computer,662917822,SystemVerilog,RISC-V-Computer,3,0,2023-07-06 07:03:31+00:00,[],None
557,https://github.com/ronniegertman/multicycle.git,2023-07-04 15:36:02+00:00,,0,ronniegertman/multicycle,662209184,SystemVerilog,multicycle,64,0,2023-07-04 15:42:50+00:00,[],None
558,https://github.com/lowRISC/ml4dv.git,2023-07-12 11:09:02+00:00,Staging area for ml4dv collateral,0,lowRISC/ml4dv,665509367,SystemVerilog,ml4dv,318,0,2023-11-09 23:36:43+00:00,[],https://api.github.com/licenses/apache-2.0
559,https://github.com/ShevtsovNikita/multipliers.git,2023-07-06 18:32:14+00:00,Сравнение встроенного DSP блока кристалла xilinx и умножителя с деревом Уоллеса ,0,ShevtsovNikita/multipliers,663183008,SystemVerilog,multipliers,111,0,2023-07-15 20:02:40+00:00,[],None
560,https://github.com/dcg3-illinois/Super-ECE-Bros.git,2023-07-19 04:12:24+00:00,Super Mario Bros clone written in SystemVerilog for Terasic DE10-Lite FPGA Development Board. Developed by Cain Gonzalez and Leo Gonzalez,0,dcg3-illinois/Super-ECE-Bros,668114989,SystemVerilog,Super-ECE-Bros,13741,0,2023-07-19 04:49:22+00:00,[],None
561,https://github.com/aguptad/SLC-3.git,2023-07-31 03:27:32+00:00,,0,aguptad/SLC-3,672732548,SystemVerilog,SLC-3,74,0,2023-08-08 01:53:37+00:00,[],None
562,https://github.com/Preetbatavia/System-Verilog.git,2023-08-02 17:09:10+00:00,,0,Preetbatavia/System-Verilog,673896740,SystemVerilog,System-Verilog,52,0,2023-08-03 05:25:31+00:00,[],None
563,https://github.com/kei-seu/APB_watchdog.git,2023-08-02 12:35:31+00:00,UVM verification platform for cmsdk_apb_watchdog IP core,0,kei-seu/APB_watchdog,673790974,SystemVerilog,APB_watchdog,56,0,2023-08-02 12:51:55+00:00,[],None
564,https://github.com/ChiragAumraj/FIRST-IN-FIRST-OUT--ENV.git,2023-07-18 07:07:05+00:00,,0,ChiragAumraj/FIRST-IN-FIRST-OUT--ENV,667727072,SystemVerilog,FIRST-IN-FIRST-OUT--ENV,5,0,2023-07-18 07:13:27+00:00,[],None
565,https://github.com/Wlfc912/First_UVM.git,2023-07-24 23:26:31+00:00,,0,Wlfc912/First_UVM,670376768,SystemVerilog,First_UVM,5,0,2023-08-13 22:04:33+00:00,[],None
566,https://github.com/MarleyLobao/Switch_SV_Testbench.git,2023-07-25 02:15:22+00:00,This repository organizes the ChipVerify website code so that it is executable in a verification environment that uses only the Systemverilog language resources to verify some design as an example.,0,MarleyLobao/Switch_SV_Testbench,670412661,SystemVerilog,Switch_SV_Testbench,6,0,2023-07-25 02:18:52+00:00,[],None
567,https://github.com/alpha-karthik/Verification-Codes.git,2023-07-23 18:03:08+00:00,This repository contains the System Verilog constructs use cases and examples,0,alpha-karthik/Verification-Codes,669876164,SystemVerilog,Verification-Codes,17,0,2023-07-25 05:48:02+00:00,[],https://api.github.com/licenses/gpl-3.0
568,https://github.com/jo0012/8-Bit-CPU-in-SystemVerilog.git,2023-07-23 16:03:24+00:00,,0,jo0012/8-Bit-CPU-in-SystemVerilog,669844880,SystemVerilog,8-Bit-CPU-in-SystemVerilog,600,0,2023-07-23 16:05:25+00:00,[],None
569,https://github.com/SV-Engineer/Hardware-Description-Languages.git,2023-07-27 22:05:13+00:00,,0,SV-Engineer/Hardware-Description-Languages,671676873,SystemVerilog,Hardware-Description-Languages,1252,0,2023-07-28 21:22:58+00:00,[],https://api.github.com/licenses/gpl-3.0
570,https://github.com/MaverickST/Digital_II.git,2023-08-23 21:29:27+00:00,,0,MaverickST/Digital_II,682292842,SystemVerilog,Digital_II,198529,0,2023-08-24 14:12:41+00:00,[],https://api.github.com/licenses/mit
571,https://github.com/psjsptcoder/Automatic_Washing_Machine.git,2023-08-25 12:44:51+00:00,Developed finite state machine (FSM) logic to control washing cycles. Utilized Verilog’s hardware description capabilities to design the washing machine’s logic,0,psjsptcoder/Automatic_Washing_Machine,683033271,SystemVerilog,Automatic_Washing_Machine,5,0,2023-08-25 12:46:18+00:00,[],None
572,https://github.com/GiantDwarfRen/CSE-141L-Project.git,2023-08-28 19:01:31+00:00,,0,GiantDwarfRen/CSE-141L-Project,684252485,SystemVerilog,CSE-141L-Project,17759,0,2023-08-28 19:02:35+00:00,[],None
573,https://github.com/Diya-Veerbhan/COA.git,2023-08-05 08:46:32+00:00,Computer Organization and Architecture,0,Diya-Veerbhan/COA,674943142,SystemVerilog,COA,27,0,2023-08-05 08:49:23+00:00,[],None
574,https://github.com/ravitripathi02/notinline.git,2023-08-10 09:37:46+00:00,,0,ravitripathi02/notinline,676909097,SystemVerilog,notinline,3029,0,2023-08-10 09:40:15+00:00,[],None
575,https://github.com/joriolemos/arm_simgle_final.git,2023-08-12 11:40:09+00:00,Ultima versão para apresentação do trabalho,0,joriolemos/arm_simgle_final,677712859,SystemVerilog,arm_simgle_final,31,0,2023-08-12 11:55:03+00:00,[],None
576,https://github.com/thinhngo11/Coverage-First-Verification.git,2023-08-13 17:12:37+00:00,Coverage First Verification,0,thinhngo11/Coverage-First-Verification,678098832,SystemVerilog,Coverage-First-Verification,48,0,2023-08-13 17:15:07+00:00,[],None
577,https://github.com/KiuQuy/WB2APB.git,2023-08-11 15:00:55+00:00,,0,KiuQuy/WB2APB,677432942,SystemVerilog,WB2APB,27,0,2023-08-11 15:11:15+00:00,[],None
578,https://github.com/bjybs123/fp-adder.git,2023-08-14 01:29:44+00:00,32-bit floating point adder,0,bjybs123/fp-adder,678193980,SystemVerilog,fp-adder,20,0,2023-08-14 01:31:02+00:00,[],None
579,https://github.com/imanand816/Design-and-Verification-of-UART-Communication-Protocol-using-System-Verilog.git,2023-08-22 12:47:37+00:00,,0,imanand816/Design-and-Verification-of-UART-Communication-Protocol-using-System-Verilog,681638173,SystemVerilog,Design-and-Verification-of-UART-Communication-Protocol-using-System-Verilog,82,0,2023-08-25 16:22:07+00:00,[],None
580,https://github.com/sharatkirla/MPIS32.git,2023-08-23 17:36:49+00:00,,0,sharatkirla/MPIS32,682215743,SystemVerilog,MPIS32,10,0,2023-08-23 17:54:33+00:00,[],None
581,https://github.com/apriya-ram/uvm_and_gate.git,2023-08-23 06:32:55+00:00,,0,apriya-ram/uvm_and_gate,681964845,SystemVerilog,uvm_and_gate,6,0,2023-08-23 06:34:31+00:00,[],None
582,https://github.com/walker99999/pango_pcie_dma_alloc.git,2023-08-27 08:00:05+00:00,pango pcie (official design),0,walker99999/pango_pcie_dma_alloc,683636306,SystemVerilog,pango_pcie_dma_alloc,12640,0,2023-08-27 08:03:58+00:00,[],None
583,https://github.com/Sean-Fuhrman/CSE-141L.git,2023-08-27 18:42:55+00:00,,0,Sean-Fuhrman/CSE-141L,683803637,SystemVerilog,CSE-141L,108,0,2023-09-07 02:03:37+00:00,[],None
584,https://github.com/beingstrongerer/remote-repo.git,2023-08-29 13:19:28+00:00,first remote-repo,0,beingstrongerer/remote-repo,684598766,SystemVerilog,remote-repo,9,0,2023-09-07 07:16:06+00:00,[],None
585,https://github.com/Denicsr09/verificacion_IIs_2023.git,2023-08-21 01:19:35+00:00,,0,Denicsr09/verificacion_IIs_2023,680969829,SystemVerilog,verificacion_IIs_2023,34691,0,2023-11-23 07:51:02+00:00,[],None
586,https://github.com/tms4517/VGA_DDCA.git,2023-07-22 18:54:11+00:00,Driving a VGA monitor from an FPGA.,1,tms4517/VGA_DDCA,669585120,SystemVerilog,VGA_DDCA,1,0,2023-07-23 17:17:18+00:00,[],None
587,https://github.com/deepanshuv22/Projects.git,2023-08-19 23:14:21+00:00,VLSI Projects,0,deepanshuv22/Projects,680644168,SystemVerilog,Projects,990,0,2023-08-25 07:06:04+00:00,[],None
588,https://github.com/alok2802/FIFO-VERIFICATION.git,2023-08-17 19:51:41+00:00,,0,alok2802/FIFO-VERIFICATION,679867437,SystemVerilog,FIFO-VERIFICATION,2,0,2023-08-17 19:59:41+00:00,[],None
589,https://github.com/vishalvp123/FIFO-Verification.git,2023-08-04 08:03:56+00:00,Verification of FIFO with UVM,0,vishalvp123/FIFO-Verification,674549604,SystemVerilog,FIFO-Verification,63,0,2023-08-04 08:19:09+00:00,[],None
590,https://github.com/navidraeiszadeh/SBU_ComputerArchitecture_Course.git,2023-07-04 06:12:19+00:00,,0,navidraeiszadeh/SBU_ComputerArchitecture_Course,661993141,SystemVerilog,SBU_ComputerArchitecture_Course,37119,0,2023-07-11 05:03:42+00:00,[],None
591,https://github.com/liu-xueyang/zhw_silicon_compiler.git,2023-07-14 23:27:32+00:00,ZHW verilog repo to check area/power/frequency,0,liu-xueyang/zhw_silicon_compiler,666588745,SystemVerilog,zhw_silicon_compiler,10,0,2023-07-18 22:54:40+00:00,[],None
592,https://github.com/gouthampalem2/Last-Level-Cache.git,2023-07-09 17:33:12+00:00,Microprocessor  System Design Project,0,gouthampalem2/Last-Level-Cache,664345664,SystemVerilog,Last-Level-Cache,264,0,2023-07-09 17:36:57+00:00,[],None
593,https://github.com/ateeb02/3-Stage_RISC-V_Processor_with_CSR_ISR_C-Ext.git,2023-06-26 16:58:01+00:00,"This is a 3-Stage RISC-V based Pipelined Processor with Interrupt Control, Control and Status Registers and RVC Compressed Extension.",0,ateeb02/3-Stage_RISC-V_Processor_with_CSR_ISR_C-Ext,658871447,SystemVerilog,3-Stage_RISC-V_Processor_with_CSR_ISR_C-Ext,23,0,2023-06-28 18:52:05+00:00,[],None
594,https://github.com/malheir0s/circuitos-digitais-II.git,2023-07-12 19:25:53+00:00,,0,malheir0s/circuitos-digitais-II,665693057,SystemVerilog,circuitos-digitais-II,111,0,2023-07-12 19:28:27+00:00,[],None
595,https://github.com/claudioleandro14/arm_single_extended.git,2023-06-30 00:02:23+00:00,,0,claudioleandro14/arm_single_extended,660404689,SystemVerilog,arm_single_extended,4,0,2023-06-30 00:39:27+00:00,[],None
596,https://github.com/HueyVoz/VIP_I2C_SLAVE_with_SVUnittest.git,2023-06-28 03:07:13+00:00,Basic VIP I2C SLAVE using SVUnit test componet,0,HueyVoz/VIP_I2C_SLAVE_with_SVUnittest,659527004,SystemVerilog,VIP_I2C_SLAVE_with_SVUnittest,24,0,2023-06-30 06:50:02+00:00,[],None
597,https://github.com/VlsiDesignVerif/100daysofRTL.git,2023-07-01 18:27:29+00:00,,0,VlsiDesignVerif/100daysofRTL,661083281,SystemVerilog,100daysofRTL,187,0,2023-07-02 07:57:43+00:00,[],None
598,https://github.com/YazanHussnain/AHB_Slave_Verification.git,2023-07-03 09:39:41+00:00,,0,YazanHussnain/AHB_Slave_Verification,661626363,SystemVerilog,AHB_Slave_Verification,1056,0,2023-07-03 09:45:54+00:00,[],None
599,https://github.com/Nutmeg43/AHB_Interconnect.git,2023-07-16 19:36:32+00:00,AHB design based on ARM AMBA protocol ,0,Nutmeg43/AHB_Interconnect,667145390,SystemVerilog,AHB_Interconnect,8,0,2023-07-16 19:37:42+00:00,[],https://api.github.com/licenses/mit
600,https://github.com/tms4517/SPI.git,2023-07-25 13:40:55+00:00,A SPI controller and peripheral is implemented in System Verilog.,1,tms4517/SPI,670634024,SystemVerilog,SPI,2,0,2023-07-25 16:08:17+00:00,[],None
601,https://github.com/jinmanss/fpga.git,2023-07-21 06:39:14+00:00,fpgagood,0,jinmanss/fpga,669017879,SystemVerilog,fpga,178,0,2023-07-22 08:36:29+00:00,[],None
602,https://github.com/sthd/RISC-V-accelerator.git,2023-07-19 16:29:30+00:00,An accelerator for RISC-V running on an FPGA,1,sthd/RISC-V-accelerator,668367789,SystemVerilog,RISC-V-accelerator,1564,0,2023-07-19 17:06:01+00:00,[],None
603,https://github.com/boga-vidhath/Adders.git,2023-07-16 00:39:15+00:00,,0,boga-vidhath/Adders,666897452,SystemVerilog,Adders,5,0,2023-07-16 00:41:50+00:00,[],None
604,https://github.com/RISCY-Lib/uvm_utils.git,2023-07-06 22:56:16+00:00,A collection of utility classes and headers for use in a UVM testbench,0,RISCY-Lib/uvm_utils,663256249,SystemVerilog,uvm_utils,12,0,2023-07-06 23:09:34+00:00,[],https://api.github.com/licenses/lgpl-2.1
605,https://github.com/JasonDhand/FPGA_Geometry_Dash.git,2023-07-07 02:38:49+00:00,Created Geometry dash on an FPGA using System Verilog code. Integrated w a USB keyboard,0,JasonDhand/FPGA_Geometry_Dash,663306468,SystemVerilog,FPGA_Geometry_Dash,17,0,2023-07-08 14:57:55+00:00,[],None
606,https://github.com/odenj/100-days-of-RTL.git,2023-08-01 05:29:24+00:00,,0,odenj/100-days-of-RTL,673202858,SystemVerilog,100-days-of-RTL,16,0,2023-08-05 16:39:01+00:00,[],None
607,https://github.com/HirunaVishwamith/UART_with_FPGA.git,2023-08-06 03:04:58+00:00,,0,HirunaVishwamith/UART_with_FPGA,675171937,SystemVerilog,UART_with_FPGA,5,0,2023-08-06 03:05:46+00:00,[],None
608,https://github.com/Leeo1912/FFT_single_module_test.git,2023-08-07 07:11:29+00:00,,0,Leeo1912/FFT_single_module_test,675546692,SystemVerilog,FFT_single_module_test,16036,0,2023-08-07 08:32:39+00:00,[],https://api.github.com/licenses/mit
609,https://github.com/LYWalker/RTL-Exercises-Public.git,2023-08-21 13:43:37+00:00,,0,LYWalker/RTL-Exercises-Public,681200417,SystemVerilog,RTL-Exercises-Public,102,0,2023-08-22 07:29:03+00:00,[],None
610,https://github.com/Shivaprasadm02/bridge-topology.git,2023-08-21 09:32:56+00:00,,0,Shivaprasadm02/bridge-topology,681109566,SystemVerilog,bridge-topology,11,0,2023-08-21 09:36:06+00:00,[],None
611,https://github.com/pgurve22/Synchronous-FIFO.git,2023-08-22 16:16:43+00:00,,0,pgurve22/Synchronous-FIFO,681727540,SystemVerilog,Synchronous-FIFO,5,0,2023-08-22 16:18:18+00:00,[],None
612,https://github.com/lucaslimacodes/RISC-V-PROJECT.git,2023-08-11 21:06:52+00:00,Projeto RISC-V da disciplina de IH,0,lucaslimacodes/RISC-V-PROJECT,677540972,SystemVerilog,RISC-V-PROJECT,725,0,2023-08-11 21:23:05+00:00,[],https://api.github.com/licenses/mit
613,https://github.com/zmij/bldc-fpga.git,2023-08-01 11:01:30+00:00,,0,zmij/bldc-fpga,673315773,SystemVerilog,bldc-fpga,201,0,2023-08-11 20:02:08+00:00,[],https://api.github.com/licenses/mit
614,https://github.com/laxmankumar3283/Single-Port-Ram-desgin.git,2023-08-03 12:26:33+00:00,,0,laxmankumar3283/Single-Port-Ram-desgin,674223709,SystemVerilog,Single-Port-Ram-desgin,5,0,2023-08-05 05:19:37+00:00,[],None
615,https://github.com/noorelabyad/ALU-Verification.git,2023-08-06 13:41:55+00:00,,0,noorelabyad/ALU-Verification,675306195,SystemVerilog,ALU-Verification,17,0,2023-08-06 14:09:25+00:00,[],https://api.github.com/licenses/mit
616,https://github.com/VipulNeharwal/MIPS32BIT.git,2023-08-25 17:07:47+00:00,,0,VipulNeharwal/MIPS32BIT,683129261,SystemVerilog,MIPS32BIT,7,0,2023-08-25 17:08:34+00:00,[],None
617,https://github.com/amitind6325/MIPS_Project.git,2023-08-25 06:27:25+00:00,Implemented the 5 stages of a Pipeline,0,amitind6325/MIPS_Project,682905390,SystemVerilog,MIPS_Project,9,0,2023-08-25 06:58:41+00:00,[],None
618,https://github.com/mahamdeh0/Verilog_Repeated_Addition_Method.git,2023-08-22 16:56:54+00:00,,0,mahamdeh0/Verilog_Repeated_Addition_Method,681742729,SystemVerilog,Verilog_Repeated_Addition_Method,80,0,2023-08-22 18:11:51+00:00,[],None
619,https://github.com/dungnguyen2610/gcd.git,2023-08-22 10:08:41+00:00,,0,dungnguyen2610/gcd,681578743,SystemVerilog,gcd,92,0,2023-08-22 10:19:40+00:00,[],None
620,https://github.com/cheran96/code.git,2023-08-21 16:20:57+00:00,,0,cheran96/code,681264398,SystemVerilog,code,73,0,2023-08-21 16:23:12+00:00,[],None
621,https://github.com/Ishaananish/MIPS.git,2023-08-23 09:55:12+00:00,,0,Ishaananish/MIPS,682037767,SystemVerilog,MIPS,14,0,2023-08-23 09:56:33+00:00,[],https://api.github.com/licenses/mit
622,https://github.com/Anand2919/VERILOGCODE.git,2023-08-27 18:11:41+00:00,,0,Anand2919/VERILOGCODE,683795854,SystemVerilog,VERILOGCODE,26,0,2023-08-27 18:27:19+00:00,[],None
623,https://github.com/hiimkimchi/Verilog-HDL-Lectures.git,2023-08-30 03:05:31+00:00,Practicing the SystemVerilog Language,0,hiimkimchi/Verilog-HDL-Lectures,684874434,SystemVerilog,Verilog-HDL-Lectures,1892,0,2023-09-04 07:34:10+00:00,[],None
624,https://github.com/Kholoud-Ebrahim/Bitwise.git,2023-08-28 23:22:42+00:00,"UVM based Verification of Bitwise Operations Design. The UVM env includes Configuration Object for each agent and also the env, also it includes Virtual Sequences and Virtual Sequencer. The simulation results contain functional and code coverage reports.",0,Kholoud-Ebrahim/Bitwise,684329955,SystemVerilog,Bitwise,172,0,2023-08-28 23:24:17+00:00,[],None
625,https://github.com/osamaalshu/HighRISC.git,2023-08-16 03:19:18+00:00,9 bit Assembly Language along with its Assembler,0,osamaalshu/HighRISC,679069950,SystemVerilog,HighRISC,1030,0,2023-08-16 03:26:07+00:00,[],None
626,https://github.com/humayunsiraj123/SPI_core.git,2023-08-21 19:43:53+00:00,implementation of serial peripheral interface using system verilog,0,humayunsiraj123/SPI_core,681337655,SystemVerilog,SPI_core,3,0,2023-12-17 19:58:12+00:00,[],None
627,https://github.com/0TulipRose0/DSP_Gold_codes.git,2023-07-22 16:15:02+00:00,"""Gold"" code generation",0,0TulipRose0/DSP_Gold_codes,669544815,SystemVerilog,DSP_Gold_codes,90,0,2023-07-31 21:59:53+00:00,[],None
628,https://github.com/trong420/some-documents.git,2023-08-17 15:05:41+00:00,"Document in VLSI, LINUX and more.",0,trong420/some-documents,679764496,SystemVerilog,some-documents,1990266,0,2023-08-26 04:07:21+00:00,[],None
629,https://github.com/michellavezzo/clock_verilog.git,2023-08-22 13:04:36+00:00,First and Last Project for  STRUCTURED DESIGN OF INTEGRATED CIRCUITS discipline at UFPB. 24h clock with system verilog + Functional verification.,0,michellavezzo/clock_verilog,681645328,SystemVerilog,clock_verilog,62,0,2023-11-09 12:52:34+00:00,"['functional-verification', 'system-verilog', 'systemverilog', 'testbench', 'verilog', '24h-clock']",https://api.github.com/licenses/mit
630,https://github.com/hoangann23/Computer_architecture_project.git,2023-07-22 12:36:53+00:00,,0,hoangann23/Computer_architecture_project,669485039,SystemVerilog,Computer_architecture_project,1357,0,2023-07-22 12:41:10+00:00,[],None
631,https://github.com/mohamedelshafie/verifying-counter-using-UVM.git,2023-08-04 12:28:50+00:00,,0,mohamedelshafie/verifying-counter-using-UVM,674635263,SystemVerilog,verifying-counter-using-UVM,205,0,2023-08-11 20:47:36+00:00,[],None
632,https://github.com/sharathk227/SPI.git,2023-08-07 18:29:13+00:00,Verification of SPI Master-core ,0,sharathk227/SPI,675793137,SystemVerilog,SPI,9896,0,2023-08-21 11:40:36+00:00,[],None
633,https://github.com/IgorJoaquimn/2022-Logical-Minimization.git,2023-08-07 00:19:17+00:00,"use the express minimizer to simplify a 6-bit multiplier system, and implement a 4-bit multiplier in the Verilog hardware description language.",0,IgorJoaquimn/2022-Logical-Minimization,675449213,SystemVerilog,2022-Logical-Minimization,191,0,2023-08-07 00:20:27+00:00,[],None
634,https://github.com/apriya-ram/FIFO_SV_CODE.git,2023-08-10 04:16:08+00:00,,0,apriya-ram/FIFO_SV_CODE,676809348,SystemVerilog,FIFO_SV_CODE,11,0,2023-08-10 04:25:29+00:00,[],None
635,https://github.com/tms4517/Cummings_FIFO.git,2023-07-08 11:00:42+00:00,Simulation and Synthesis Techniques for Asynchronous FIFO Design,1,tms4517/Cummings_FIFO,663886269,SystemVerilog,Cummings_FIFO,52,0,2023-07-08 20:32:49+00:00,[],None
636,https://github.com/warrebe/Coverage-SV-Design.git,2023-06-27 19:22:06+00:00,"Project to test coverage on a design in system verilog, UUT is a gcd computer using Euclidian's algorithm",0,warrebe/Coverage-SV-Design,659410949,SystemVerilog,Coverage-SV-Design,14,0,2023-06-27 19:24:48+00:00,[],None
637,https://github.com/prankurverma/apb_uvm.git,2023-07-12 19:36:10+00:00,apb protocol implementation with uvm,0,prankurverma/apb_uvm,665696156,SystemVerilog,apb_uvm,68,0,2023-07-23 15:30:05+00:00,[],None
638,https://github.com/SamuelCripps/traffic_light_control.git,2023-07-11 09:25:19+00:00,,0,SamuelCripps/traffic_light_control,665028391,SystemVerilog,traffic_light_control,2,0,2023-07-11 09:30:09+00:00,[],None
639,https://github.com/benjamintaitapa/booth_mult.git,2023-07-16 03:01:24+00:00,,0,benjamintaitapa/booth_mult,666917149,SystemVerilog,booth_mult,5,0,2023-07-16 03:05:06+00:00,[],None
640,https://github.com/HUAIJIE0314/RV32I-RISC-V-Single-Cycle-CPU-with-no-delay-SRAM_V1.git,2023-07-19 15:30:48+00:00,RISC-V Single Cycle CPU (with no delay SRAM),0,HUAIJIE0314/RV32I-RISC-V-Single-Cycle-CPU-with-no-delay-SRAM_V1,668346616,SystemVerilog,RV32I-RISC-V-Single-Cycle-CPU-with-no-delay-SRAM_V1,105,0,2023-08-03 23:18:23+00:00,[],None
641,https://github.com/Vishwesh11/Basic_RISC_CPU.git,2023-07-17 16:42:07+00:00,,0,Vishwesh11/Basic_RISC_CPU,667501692,SystemVerilog,Basic_RISC_CPU,26,0,2023-08-01 02:59:49+00:00,[],None
642,https://github.com/mary-k99/debouncer.git,2023-07-26 11:40:45+00:00,lab1 task5,0,mary-k99/debouncer,671032082,SystemVerilog,debouncer,2,0,2023-07-26 15:50:16+00:00,[],None
643,https://github.com/xwhic/xjy.git,2023-07-25 05:39:39+00:00,,0,xwhic/xjy,670462240,SystemVerilog,xjy,43150,0,2023-07-25 06:08:00+00:00,[],None
644,https://github.com/CyrilleLeGuerrier/DV_Analyst_Diploma_by_S.HOSNY.git,2023-07-26 23:15:54+00:00,,0,CyrilleLeGuerrier/DV_Analyst_Diploma_by_S.HOSNY,671259275,SystemVerilog,DV_Analyst_Diploma_by_S.HOSNY,37,0,2023-07-26 23:20:42+00:00,[],None
645,https://github.com/venkata-p2498/test.git,2023-06-28 08:20:02+00:00,GitHub Actions with your C++,0,venkata-p2498/test,659626917,SystemVerilog,test,279,0,2023-08-03 09:43:04+00:00,[],https://api.github.com/licenses/mit
646,https://github.com/UWAros/easy_rte_IEC61499.git,2023-06-27 23:58:27+00:00,,0,UWAros/easy_rte_IEC61499,659481815,SystemVerilog,easy_rte_IEC61499,12027,0,2023-06-28 00:01:06+00:00,[],None
647,https://github.com/irisalmeida/loac.git,2023-07-04 11:18:27+00:00,,0,irisalmeida/loac,662106666,SystemVerilog,loac,4416,0,2023-07-28 00:09:54+00:00,[],None
648,https://github.com/Aperture-Electronic/MorphologyFilterIP.git,2023-07-02 10:03:50+00:00,"A single channel morphology filter IP for ECG signals, etc.",1,Aperture-Electronic/MorphologyFilterIP,661265802,SystemVerilog,MorphologyFilterIP,5,0,2023-07-02 10:07:20+00:00,[],None
649,https://github.com/AtomicAnindya/pipelinedprocessor.git,2023-07-07 20:02:51+00:00,,0,AtomicAnindya/pipelinedprocessor,663656002,SystemVerilog,pipelinedprocessor,19,0,2023-07-07 20:08:21+00:00,[],None
650,https://github.com/Love-Tolstoy/verilator_test.git,2023-07-17 08:57:57+00:00,,0,Love-Tolstoy/verilator_test,667327586,SystemVerilog,verilator_test,415,0,2023-07-17 09:00:31+00:00,[],https://api.github.com/licenses/mit
651,https://github.com/NardenSobhy/ALU_design.git,2023-07-22 16:15:33+00:00,Developing ALU that can perform 8-bit arithmetic operations.,0,NardenSobhy/ALU_design,669544966,SystemVerilog,ALU_design,9,0,2023-08-01 15:14:49+00:00,[],None
652,https://github.com/aqweszxcd/HammingCode_SystemVerilog.git,2023-08-15 09:59:38+00:00,,0,aqweszxcd/HammingCode_SystemVerilog,678758264,SystemVerilog,HammingCode_SystemVerilog,4,0,2023-08-15 10:00:03+00:00,[],https://api.github.com/licenses/unlicense
653,https://github.com/vasantharaju1124/vasantharaju1124.git,2023-06-27 03:02:41+00:00,Config files for my GitHub profile.,0,vasantharaju1124/vasantharaju1124,659040686,SystemVerilog,vasantharaju1124,1,0,2023-06-27 03:05:25+00:00,"['config', 'github-config']",None
654,https://github.com/CristianGorceac/Practica_AMD.git,2023-06-26 17:48:43+00:00,,0,CristianGorceac/Practica_AMD,658891228,SystemVerilog,Practica_AMD,1983,0,2023-06-28 10:56:51+00:00,[],None
655,https://github.com/PRAGATI-0102/LFSR-using-SV-Day-081-.git,2023-06-29 18:16:14+00:00,An LFSR is a digital circuit that generates a pseudo-random sequence of bits based on shifting and feeding back certain bits within the register.,0,PRAGATI-0102/LFSR-using-SV-Day-081-,660312699,SystemVerilog,LFSR-using-SV-Day-081-,95,0,2023-06-29 18:16:53+00:00,[],None
656,https://github.com/ironmanna/xohw23-Hardware-and-Software-Optimization-for-regular-expression.git,2023-06-29 15:58:43+00:00,Hardware and Software Optimization for regular expressions execution exploiting compilation techniques.,0,ironmanna/xohw23-Hardware-and-Software-Optimization-for-regular-expression,660266083,SystemVerilog,xohw23-Hardware-and-Software-Optimization-for-regular-expression,11518,0,2023-06-30 21:28:28+00:00,[],https://api.github.com/licenses/mit
657,https://github.com/scalable-arch/interfaces.git,2023-08-17 09:04:25+00:00,,0,scalable-arch/interfaces,679627804,SystemVerilog,interfaces,87662,0,2023-08-17 10:21:43+00:00,[],None
658,https://github.com/alok2802/Axi-Bus-Protocol-Verification.git,2023-08-17 18:57:16+00:00,,0,alok2802/Axi-Bus-Protocol-Verification,679849750,SystemVerilog,Axi-Bus-Protocol-Verification,8,0,2023-08-17 19:13:09+00:00,[],None
659,https://github.com/alok2802/UART-Communication-protocol-verification.git,2023-08-17 19:26:14+00:00,,0,alok2802/UART-Communication-protocol-verification,679859873,SystemVerilog,UART-Communication-protocol-verification,3,0,2023-08-17 19:28:43+00:00,[],None
660,https://github.com/dree02/8-bit_processor.git,2023-08-10 15:05:28+00:00,Embedded Systems Course Project,0,dree02/8-bit_processor,677026343,SystemVerilog,8-bit_processor,7,0,2023-08-10 15:05:55+00:00,[],None
661,https://github.com/nvchuyen/Verification_of_UART.git,2023-08-16 03:08:56+00:00,,0,nvchuyen/Verification_of_UART,679067672,SystemVerilog,Verification_of_UART,26,0,2023-08-17 03:17:55+00:00,[],None
662,https://github.com/ErickCR12/ebarrantes_digital_design_lab_2023.git,2023-08-17 15:44:18+00:00,Digital Design Repo for System Verilog and FPGA labs.,0,ErickCR12/ebarrantes_digital_design_lab_2023,679779423,SystemVerilog,ebarrantes_digital_design_lab_2023,528900,0,2023-09-25 05:33:57+00:00,[],None
663,https://github.com/Oscar-FZ/Verificacion.git,2023-08-22 00:58:56+00:00,Git de verificacion,1,Oscar-FZ/Verificacion,681412459,SystemVerilog,Verificacion,56,0,2023-08-22 01:02:25+00:00,[],None
664,https://github.com/onkarsm22/Automatic-Washing-Machine.git,2023-08-25 12:10:06+00:00,,0,onkarsm22/Automatic-Washing-Machine,683021244,SystemVerilog,Automatic-Washing-Machine,5,0,2023-08-25 12:11:37+00:00,[],None
665,https://github.com/EzzAddinKukhun/SPI.git,2023-08-21 17:50:52+00:00,,0,EzzAddinKukhun/SPI,681297505,SystemVerilog,SPI,3,0,2023-08-21 17:52:12+00:00,[],None
666,https://github.com/Nikoleta918/Verilog_Projects.git,2023-08-25 14:45:19+00:00,Various Verilog projects from when I studied in DUTH University,0,Nikoleta918/Verilog_Projects,683078442,SystemVerilog,Verilog_Projects,6,0,2023-08-25 14:48:27+00:00,[],None
667,https://github.com/KaetaXpog/tinvrv2.git,2023-08-22 12:03:38+00:00,,0,KaetaXpog/tinvrv2,681620902,SystemVerilog,tinvrv2,24446,0,2023-08-22 12:07:49+00:00,[],https://api.github.com/licenses/gpl-3.0
668,https://github.com/kosmalex/AHB_implemetation.git,2023-08-22 14:06:01+00:00,,0,kosmalex/AHB_implemetation,681673016,SystemVerilog,AHB_implemetation,11,0,2023-08-25 18:16:41+00:00,[],https://api.github.com/licenses/apache-2.0
669,https://github.com/thinhngo11/Beyond-SystemVerilog-Classes.git,2023-08-22 20:02:21+00:00,,0,thinhngo11/Beyond-SystemVerilog-Classes,681810464,SystemVerilog,Beyond-SystemVerilog-Classes,1,0,2023-08-22 20:06:44+00:00,[],None
670,https://github.com/Jorge-Padilla/RISC-V_Arqui.git,2023-08-25 23:13:35+00:00,This is the implementation of a OOO Superscalar RISC V processor,0,Jorge-Padilla/RISC-V_Arqui,683228124,SystemVerilog,RISC-V_Arqui,576621,0,2023-08-26 00:03:02+00:00,[],None
671,https://github.com/edsonpjr/IH.git,2023-08-29 22:41:28+00:00,,0,edsonpjr/IH,684809256,SystemVerilog,IH,7161,0,2023-08-29 22:41:46+00:00,[],https://api.github.com/licenses/mit
672,https://github.com/minhcuong1994/100dayrtl.git,2023-08-11 07:19:00+00:00,,0,minhcuong1994/100dayrtl,677281552,SystemVerilog,100dayrtl,1823,0,2023-08-11 07:51:56+00:00,[],None
673,https://github.com/helcsnewsxd/Arquitectura-del-Computador.git,2023-08-17 11:53:24+00:00,Arquitectura de Computadoras 2023 correspondiente a 3er año - 2do semestre de Computación en FAMAF (UNC),0,helcsnewsxd/Arquitectura-del-Computador,679688376,SystemVerilog,Arquitectura-del-Computador,7157,0,2023-12-21 15:33:26+00:00,[],https://api.github.com/licenses/mit
674,https://github.com/teodor961/async_fifo.git,2023-08-27 14:28:33+00:00,,0,teodor961/async_fifo,683732162,SystemVerilog,async_fifo,24,0,2024-02-04 12:28:30+00:00,[],None
675,https://github.com/ADolbyB/vlsi-spice-pcbs.git,2023-08-25 16:35:50+00:00,"A collection of Schematics, PCBs and VLSI work on various platforms",0,ADolbyB/vlsi-spice-pcbs,683117981,SystemVerilog,vlsi-spice-pcbs,2422,0,2024-03-09 19:07:16+00:00,"['kicad', 'ltspice', 'orcad', 'pspice', 'schematics', 'vlsi', 'vlsi-design', 'cadence', 'eda', 'eda-tools']",None
676,https://github.com/AleksandarLilic/AES-256_UVM.git,2023-08-06 17:19:50+00:00,UVM testbench for AES-256 VHDL design,0,AleksandarLilic/AES-256_UVM,675367342,SystemVerilog,AES-256_UVM,938,0,2023-08-08 07:54:24+00:00,"['aes-256', 'uvm']",https://api.github.com/licenses/gpl-3.0
677,https://github.com/LuisPeMoraRod/lmorales_computer_architecture_1_2023_s2.git,2023-08-17 01:24:40+00:00,,0,LuisPeMoraRod/lmorales_computer_architecture_1_2023_s2,679494258,SystemVerilog,lmorales_computer_architecture_1_2023_s2,40893,0,2024-04-05 03:59:39+00:00,[],None
678,https://github.com/youcan-jpn/RV32I-single-cycle.git,2023-07-24 10:47:47+00:00,,0,youcan-jpn/RV32I-single-cycle,670123073,SystemVerilog,RV32I-single-cycle,379,0,2023-07-30 12:13:59+00:00,[],None
679,https://github.com/rakshitharnayak/plans.git,2023-07-31 09:16:30+00:00,,0,rakshitharnayak/plans,672833786,SystemVerilog,plans,1138,0,2023-08-14 11:31:25+00:00,[],None
680,https://github.com/Brianhhhhhh/Ping-Pong-Game.git,2023-07-06 09:10:41+00:00,This is a ping-pong game created using FPGA programming,0,Brianhhhhhh/Ping-Pong-Game,662965992,SystemVerilog,Ping-Pong-Game,16,0,2023-07-06 09:43:38+00:00,[],None
681,https://github.com/BharamuSK/Data_Shared_Rep.git,2023-07-07 09:20:29+00:00,,0,BharamuSK/Data_Shared_Rep,663431115,SystemVerilog,Data_Shared_Rep,171111,0,2023-07-07 09:31:01+00:00,[],None
682,https://github.com/Mohd-Adib-Khan/8-Bit-Barrel-Shifter.git,2023-07-28 10:06:44+00:00,8 Bit Barrel Shifter Verilog Code,0,Mohd-Adib-Khan/8-Bit-Barrel-Shifter,671862442,SystemVerilog,8-Bit-Barrel-Shifter,3,0,2023-07-28 10:07:23+00:00,[],None
683,https://github.com/SabrinaBruni28/Caminho_de_Dados.git,2023-07-25 20:30:28+00:00,,0,SabrinaBruni28/Caminho_de_Dados,670781432,SystemVerilog,Caminho_de_Dados,5593,0,2023-07-25 20:34:52+00:00,[],None
684,https://github.com/Rajviii-1107/APB-Verification.git,2023-07-26 06:08:16+00:00,,0,Rajviii-1107/APB-Verification,670916445,SystemVerilog,APB-Verification,824,0,2023-07-26 20:05:28+00:00,[],None
685,https://github.com/maxhenderson42/sv_module_lib.git,2023-07-26 07:55:58+00:00,library of generic system verliog modules I have created,0,maxhenderson42/sv_module_lib,670952922,SystemVerilog,sv_module_lib,3,0,2023-07-26 07:59:37+00:00,[],None
686,https://github.com/emilyyeh123/ALU_Comparator_FPGA.git,2023-07-26 00:34:10+00:00,,0,emilyyeh123/ALU_Comparator_FPGA,670835004,SystemVerilog,ALU_Comparator_FPGA,4019,0,2023-07-26 00:54:57+00:00,[],None
687,https://github.com/MahikaGodbole/I2Cprotocol.git,2023-08-05 02:36:31+00:00,Design and verification of the I2C protocol,0,MahikaGodbole/I2Cprotocol,674867536,SystemVerilog,I2Cprotocol,1460,0,2023-08-05 02:37:45+00:00,[],https://api.github.com/licenses/unlicense
688,https://github.com/AlejandroAnguiano/Verilog.git,2023-08-02 20:14:31+00:00,Trabajos que he hecho con verilog y system verilog,0,AlejandroAnguiano/Verilog,673958296,SystemVerilog,Verilog,9,0,2023-08-02 20:16:02+00:00,[],None
689,https://github.com/chaihanlin/SV.git,2023-07-17 02:16:56+00:00,SV exercise ,0,chaihanlin/SV,667215523,SystemVerilog,SV,1,0,2023-07-17 02:18:40+00:00,[],None
690,https://github.com/amanShuklaEC012/IntelATMController.git,2023-07-14 13:14:35+00:00,,0,amanShuklaEC012/IntelATMController,666416998,SystemVerilog,IntelATMController,584,0,2023-09-25 10:28:44+00:00,[],None
691,https://github.com/leonfdo/Carry_Ripple_Adder.git,2023-07-15 00:59:58+00:00,,0,leonfdo/Carry_Ripple_Adder,666602257,SystemVerilog,Carry_Ripple_Adder,2710,0,2023-08-31 17:03:24+00:00,[],None
692,https://github.com/ryan-gits/fpga-lenet5.git,2023-07-13 17:15:58+00:00,FPGA implementation of Lenet-5 CNN,0,ryan-gits/fpga-lenet5,666085864,SystemVerilog,fpga-lenet5,2,0,2023-07-13 17:39:13+00:00,[],None
693,https://github.com/prerna-sarkar/RTL_Design.git,2023-06-30 15:10:51+00:00,,0,prerna-sarkar/RTL_Design,660680591,SystemVerilog,RTL_Design,12,0,2023-06-30 18:39:11+00:00,[],None
694,https://github.com/moliverth/arm_single_extended.git,2023-06-30 00:02:18+00:00,,0,moliverth/arm_single_extended,660404674,SystemVerilog,arm_single_extended,93,0,2023-06-30 00:33:30+00:00,[],None
695,https://github.com/bsc-pm-ompss-at-fpga/ompss-manager-src.git,2023-06-28 16:42:37+00:00,Sources and IP generation scripts of the Picos OmpSs Manager (POM),0,bsc-pm-ompss-at-fpga/ompss-manager-src,659828923,SystemVerilog,ompss-manager-src,508,0,2023-08-03 14:20:56+00:00,[],https://api.github.com/licenses/gpl-3.0
696,https://github.com/alfonso-chacon-rodriguez/curso_sv_ucu.git,2023-06-27 20:38:53+00:00,"Repositorio para laboratorios del curso de SV en la UCU, 2023",0,alfonso-chacon-rodriguez/curso_sv_ucu,659434359,SystemVerilog,curso_sv_ucu,68,0,2023-06-27 21:08:43+00:00,[],None
697,https://github.com/alok2802/SPI-Communication-protocol-Verification.git,2023-08-17 19:41:23+00:00,,0,alok2802/SPI-Communication-protocol-Verification,679864388,SystemVerilog,SPI-Communication-protocol-Verification,2,0,2023-08-17 19:42:33+00:00,[],None
698,https://github.com/OlegPM/alu_uvm.git,2023-08-30 13:28:26+00:00,UVM testbench for 8-bit ALU,0,OlegPM/alu_uvm,685080632,SystemVerilog,alu_uvm,68,0,2023-08-30 13:33:12+00:00,[],None
699,https://github.com/moechaker/APB_RAM_Test_Bench.git,2023-08-12 22:43:47+00:00,"This repository contains a comprehensive SystemVerilog test bench along with relevant files, aimed at verifying the proper operation and data integrity of an Address Bus Protocol (ABP) RAM device.",0,moechaker/APB_RAM_Test_Bench,677865258,SystemVerilog,APB_RAM_Test_Bench,128,0,2023-08-16 08:02:07+00:00,[],None
700,https://github.com/humayunsiraj123/RISC_V_pipeline.git,2023-08-12 20:38:55+00:00,RISC_V pipelined base implementation using systemverilog,0,humayunsiraj123/RISC_V_pipeline,677844997,SystemVerilog,RISC_V_pipeline,237,0,2023-08-15 19:56:06+00:00,[],None
701,https://github.com/edanuff/tn9k_hdmi_demo.git,2023-08-13 20:09:13+00:00,,0,edanuff/tn9k_hdmi_demo,678139339,SystemVerilog,tn9k_hdmi_demo,29,0,2023-08-13 20:09:19+00:00,[],None
702,https://github.com/n43ee7/i386-SDRAM.git,2023-08-17 07:17:02+00:00,SDRAM interface IP/design with for Intel i386 DX CPU and MT48LC8M8A2 Memory Device,0,n43ee7/i386-SDRAM,679590103,SystemVerilog,i386-SDRAM,24628,0,2023-08-17 07:44:09+00:00,[],https://api.github.com/licenses/mit
703,https://github.com/Pradeep-81/8-bit-ALU-using-Logisim-and-Verilog.git,2023-08-21 04:10:00+00:00,,0,Pradeep-81/8-bit-ALU-using-Logisim-and-Verilog,681007257,SystemVerilog,8-bit-ALU-using-Logisim-and-Verilog,68,0,2023-08-21 05:15:27+00:00,[],None
704,https://github.com/haran399/4bitmultiplierverification.git,2023-08-23 05:56:19+00:00,UVM based testbench to verify a 4bit multiplier design,0,haran399/4bitmultiplierverification,681952134,SystemVerilog,4bitmultiplierverification,3,0,2023-08-23 06:08:38+00:00,[],None
705,https://github.com/ly0koS/RV_Single.git,2023-08-25 13:22:32+00:00,,0,ly0koS/RV_Single,683047387,SystemVerilog,RV_Single,2195,0,2023-08-25 13:23:09+00:00,[],https://api.github.com/licenses/cc0-1.0
706,https://github.com/riteish06/AMBA-APB-Protocol-Design-and-Verification-using-SV.git,2023-08-28 15:27:55+00:00,,0,riteish06/AMBA-APB-Protocol-Design-and-Verification-using-SV,684163401,SystemVerilog,AMBA-APB-Protocol-Design-and-Verification-using-SV,21,0,2023-09-11 07:54:02+00:00,[],None
707,https://github.com/mary-k99/serializer.git,2023-08-28 19:04:28+00:00,lab1 task1,0,mary-k99/serializer,684253471,SystemVerilog,serializer,3,0,2023-08-28 19:11:00+00:00,[],None
708,https://github.com/ARUNKUMARKKONDAJJI/priority_encoder_verification_sv.git,2023-08-28 09:32:26+00:00,verification of 4:2 priority encoder using System verilog language.,0,ARUNKUMARKKONDAJJI/priority_encoder_verification_sv,684020796,SystemVerilog,priority_encoder_verification_sv,2,0,2023-08-28 09:40:27+00:00,[],None
709,https://github.com/VipulNeharwal/Automatic-Washing-Machine.git,2023-08-25 17:00:21+00:00,,0,VipulNeharwal/Automatic-Washing-Machine,683126817,SystemVerilog,Automatic-Washing-Machine,5,0,2023-08-25 17:00:58+00:00,[],None
710,https://github.com/tusharshenoy/3-BIT-Gray-Code-Counter.git,2023-08-20 05:55:24+00:00,,0,tusharshenoy/3-BIT-Gray-Code-Counter,680703972,SystemVerilog,3-BIT-Gray-Code-Counter,14,0,2023-08-20 06:22:18+00:00,[],None
711,https://github.com/codebjjung/RTL_DESIGN.git,2023-08-07 02:40:33+00:00,,0,codebjjung/RTL_DESIGN,675476227,SystemVerilog,RTL_DESIGN,18,0,2023-08-10 07:25:38+00:00,[],None
712,https://github.com/Shan-yi-shuai/pipeline-cpu.git,2023-06-23 06:16:42+00:00,,0,Shan-yi-shuai/pipeline-cpu,657471427,SystemVerilog,pipeline-cpu,37,0,2024-03-19 03:21:07+00:00,[],None
713,https://github.com/cleverever/signal_processing.git,2023-07-19 15:45:52+00:00,,0,cleverever/signal_processing,668352291,SystemVerilog,signal_processing,2,0,2023-07-20 14:26:31+00:00,[],None
714,https://github.com/DevGunu03/DigitalDesign-ENGR85A.git,2023-07-19 13:32:17+00:00,Codes for Course Project ENGR85A - Digital Design,0,DevGunu03/DigitalDesign-ENGR85A,668299002,SystemVerilog,DigitalDesign-ENGR85A,2791,0,2023-07-20 13:24:34+00:00,[],None
715,https://github.com/sprsr/common_sv.git,2023-07-24 01:18:02+00:00,Common System Verilog Modules,0,sprsr/common_sv,669958594,SystemVerilog,common_sv,8,0,2023-07-24 01:19:29+00:00,[],None
716,https://github.com/jthayil84/sv.git,2023-07-05 06:41:42+00:00,,0,jthayil84/sv,662443498,SystemVerilog,sv,12,0,2023-07-05 06:41:48+00:00,[],None
717,https://github.com/mvsharikrishna/System-Verilog-Basics.git,2023-06-23 09:43:01+00:00,,0,mvsharikrishna/System-Verilog-Basics,657542738,SystemVerilog,System-Verilog-Basics,22,0,2023-07-05 06:33:42+00:00,[],None
718,https://github.com/Zajcu14/oscilloscope.git,2023-07-04 09:12:04+00:00,Oscilloscope project for UEC2 classes,0,Zajcu14/oscilloscope,662059263,SystemVerilog,oscilloscope,10226,0,2023-09-12 20:40:27+00:00,[],None
719,https://github.com/mira-sweis/MIPS-Single-Cycle-CPU.git,2023-06-30 01:11:04+00:00,,0,mira-sweis/MIPS-Single-Cycle-CPU,660418940,SystemVerilog,MIPS-Single-Cycle-CPU,3,0,2023-06-30 01:12:29+00:00,[],None
720,https://github.com/dbachurski/PONG-FPGA.git,2023-07-12 21:32:45+00:00,,1,dbachurski/PONG-FPGA,665727558,SystemVerilog,PONG-FPGA,711,0,2023-07-30 21:15:29+00:00,[],None
721,https://github.com/bjybs123/BFP-converter.git,2023-08-09 08:50:21+00:00,Floating point to Block floating point converter implementation based on the paper 'FAST: DNN Training Under Variable Precision Block Floating Point with Stochastic Rounding.',0,bjybs123/BFP-converter,676460563,SystemVerilog,BFP-converter,5,0,2023-08-09 08:52:00+00:00,[],None
722,https://github.com/varshanj/AHB-APB-Bridge-Verification.git,2023-08-07 17:43:03+00:00,,0,varshanj/AHB-APB-Bridge-Verification,675778003,SystemVerilog,AHB-APB-Bridge-Verification,29,0,2023-08-07 17:46:01+00:00,[],None
723,https://github.com/moechaker/UART_Test_Bench.git,2023-08-10 04:28:40+00:00,This repository contains a SystemVerilog test bench and related files to verify the functionality of a UART (Universal Asynchronous Receiver-Transmitter).,0,moechaker/UART_Test_Bench,676812787,SystemVerilog,UART_Test_Bench,228,0,2023-08-16 08:01:22+00:00,[],None
724,https://github.com/DaniilIgnatev/FPGA.git,2023-08-10 21:58:53+00:00,My FPGA playground,0,DaniilIgnatev/FPGA,677154320,SystemVerilog,FPGA,50820,0,2023-08-10 21:59:38+00:00,[],https://api.github.com/licenses/gpl-3.0
725,https://github.com/Arkade2807/Audio-Equalizer.git,2023-06-27 23:08:41+00:00,This was a project me and our group did for our ece 551 final project,0,Arkade2807/Audio-Equalizer,659471644,SystemVerilog,Audio-Equalizer,1858,0,2023-06-27 23:19:08+00:00,[],None
726,https://github.com/CojocaruRares/AMD-Summer-Practice.git,2023-06-27 09:30:34+00:00,,0,CojocaruRares/AMD-Summer-Practice,659174761,SystemVerilog,AMD-Summer-Practice,19,0,2023-07-24 11:37:31+00:00,[],None
727,https://github.com/Maheswarsau230/PCIV_SV.git,2023-06-27 11:17:56+00:00,,0,Maheswarsau230/PCIV_SV,659217545,SystemVerilog,PCIV_SV,0,0,2023-06-27 11:18:55+00:00,[],None
728,https://github.com/warrebe/Formal-Property-Verification-SV-Design.git,2023-06-27 19:38:36+00:00,"Formal Property Verification of UUT (gcd module using Euclid's algorithm). Note, setup.csh must be ran before testbench is usable, must be ran in C'Shell.",0,warrebe/Formal-Property-Verification-SV-Design,659416407,SystemVerilog,Formal-Property-Verification-SV-Design,5,0,2023-06-27 19:39:35+00:00,[],None
729,https://github.com/Pconst167/i2c.git,2023-07-26 11:45:56+00:00,,0,Pconst167/i2c,671033818,SystemVerilog,i2c,176,0,2023-07-26 11:48:00+00:00,[],None
730,https://github.com/moechaker/DFF_Test_Bench.git,2023-07-30 20:47:38+00:00,This repository contains a SystemVerilog test bench and related files to verify the functionality of a D flip-flop.,0,moechaker/DFF_Test_Bench,672661847,SystemVerilog,DFF_Test_Bench,106,0,2023-07-30 21:02:05+00:00,[],None
731,https://github.com/SyamSundar-projects/mlir_tensor_dialects.git,2023-07-30 18:15:01+00:00,,0,SyamSundar-projects/mlir_tensor_dialects,672628972,SystemVerilog,mlir_tensor_dialects,9,0,2023-07-30 18:34:40+00:00,[],None
732,https://github.com/sunanda-kommi/Random_Access_Memory.git,2023-08-01 07:02:17+00:00,Verification of Single Port RAM using System Verilog Testbench,0,sunanda-kommi/Random_Access_Memory,673231372,SystemVerilog,Random_Access_Memory,8,0,2023-08-01 12:38:00+00:00,[],None
733,https://github.com/MouVen/SystemVerilog.git,2023-08-12 15:22:51+00:00,,0,MouVen/SystemVerilog,677769141,SystemVerilog,SystemVerilog,11,0,2023-08-13 00:00:00+00:00,[],None
734,https://github.com/GhanayemMuh/EXP-94.git,2023-07-21 13:31:49+00:00,,0,GhanayemMuh/EXP-94,669156223,SystemVerilog,EXP-94,2601,0,2023-07-21 13:34:47+00:00,[],None
735,https://github.com/parveenduhan/RTLs.git,2023-07-26 06:48:03+00:00,This repo contains RTL desings for various commonly used algorithms,0,parveenduhan/RTLs,670929535,SystemVerilog,RTLs,803,0,2023-07-26 06:49:29+00:00,[],None
736,https://github.com/hirensolankiwork/AXI_VIP.git,2023-07-26 04:59:52+00:00,,0,hirensolankiwork/AXI_VIP,670897427,SystemVerilog,AXI_VIP,4165,0,2023-07-27 05:45:52+00:00,[],None
737,https://github.com/HummockHamek/Efficient_Pipelined_MIPS32_Processor.git,2023-08-22 10:49:02+00:00,,0,HummockHamek/Efficient_Pipelined_MIPS32_Processor,681593195,SystemVerilog,Efficient_Pipelined_MIPS32_Processor,9,0,2023-08-22 10:51:31+00:00,[],https://api.github.com/licenses/mit
738,https://github.com/juliaabre/circuitos-digitais.git,2023-08-18 00:32:18+00:00,,0,juliaabre/circuitos-digitais,679930810,SystemVerilog,circuitos-digitais,1,0,2023-08-18 00:41:28+00:00,[],None
739,https://github.com/Kholoud-Ebrahim/Add_Sub.git,2023-08-25 18:28:31+00:00,"Functional Verification of Add_Sub Design using UVM methodology with Various Versions such as a Basic UVM Tb, adding a Configuration Object to the Tb, Using the Virtual Sequence and Virtual Sequencer Concept, etc.",0,Kholoud-Ebrahim/Add_Sub,683157751,SystemVerilog,Add_Sub,310,0,2023-08-26 17:27:16+00:00,[],None
740,https://github.com/armica-quejado/vending-machine-FSM.git,2023-08-25 17:31:55+00:00,vending machine FSM,0,armica-quejado/vending-machine-FSM,683137437,SystemVerilog,vending-machine-FSM,27,0,2023-08-25 18:13:58+00:00,[],None
741,https://github.com/AbdulSami-07/challenge.git,2023-08-25 06:13:36+00:00,,0,AbdulSami-07/challenge,682899996,SystemVerilog,challenge,1,0,2023-08-25 06:20:33+00:00,[],None
742,https://github.com/rajan003/RightMost_LeftMost_Bit_calculater-.git,2023-08-08 12:39:20+00:00,Calculating a RightMost and Leftmost Set bit in a pattern,0,rajan003/RightMost_LeftMost_Bit_calculater-,676101212,SystemVerilog,RightMost_LeftMost_Bit_calculater-,5,0,2023-08-08 12:46:45+00:00,[],None
743,https://github.com/vagrant313/ascii2bin_task.git,2023-08-11 16:55:25+00:00,,0,vagrant313/ascii2bin_task,677473443,SystemVerilog,ascii2bin_task,582,0,2023-08-11 17:04:48+00:00,[],None
744,https://github.com/FernandoReneMoran/ClockSystemVerilog.git,2023-08-11 18:40:51+00:00,,0,FernandoReneMoran/ClockSystemVerilog,677505040,SystemVerilog,ClockSystemVerilog,5,0,2023-08-11 18:52:06+00:00,[],None
745,https://github.com/malaaeldinaly/FPGA-Traffic-Light-Controller.git,2023-08-04 20:11:42+00:00,"Verilog modules for a traffic light controller, implemented in several variations. Each variation adds more features and complexity to the basic traffic light controller.",0,malaaeldinaly/FPGA-Traffic-Light-Controller,674799593,SystemVerilog,FPGA-Traffic-Light-Controller,1857,0,2023-08-04 20:34:53+00:00,"['fpga', 'verilog', 'finite-state-machine']",None
746,https://github.com/LuanThiers/ProjetoPipeline.git,2023-08-06 21:29:14+00:00,Implementação de instruções em pipeline de processador RISC-V,2,LuanThiers/ProjetoPipeline,675422824,SystemVerilog,ProjetoPipeline,674,0,2023-08-06 21:31:13+00:00,[],None
747,https://github.com/andreza-vilar/LOAC.git,2023-08-16 13:33:43+00:00,,0,andreza-vilar/LOAC,679276556,SystemVerilog,LOAC,36,0,2023-08-16 13:35:18+00:00,[],None
748,https://github.com/Ukuma012/verilog_examples.git,2023-07-11 12:59:53+00:00,verilog for fun,0,Ukuma012/verilog_examples,665107786,SystemVerilog,verilog_examples,23,0,2023-07-12 00:29:52+00:00,[],None
749,https://github.com/flowlikee/rw_function.git,2023-07-14 12:13:27+00:00,write/read a array to/from file.txt ,0,flowlikee/rw_function,666397048,SystemVerilog,rw_function,10,0,2023-10-24 11:37:41+00:00,[],None
750,https://github.com/nathom/cse141l_project.git,2023-08-16 01:42:42+00:00,,0,nathom/cse141l_project,679047172,SystemVerilog,cse141l_project,1200,0,2024-02-14 02:53:28+00:00,[],None
751,https://github.com/Mario1159/RVSCC.git,2023-08-28 04:10:34+00:00,,0,Mario1159/RVSCC,683918090,SystemVerilog,RVSCC,199,0,2023-08-28 04:10:59+00:00,[],https://api.github.com/licenses/lgpl-3.0
