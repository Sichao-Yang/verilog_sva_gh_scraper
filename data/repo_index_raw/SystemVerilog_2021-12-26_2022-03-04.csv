,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/hughperkins/VeriGPU.git,2022-03-01 10:49:57+00:00,"OpenSource GPU, in Verilog, loosely based on RISC-V ISA",60,hughperkins/VeriGPU,464853976,SystemVerilog,VeriGPU,7074,516,2024-04-12 14:27:16+00:00,"['verilog', 'risc-v', 'risc-v-assembly', 'hardware-designs', 'asic-design', 'gpu', 'gpu-acceleration', 'machine-learning', 'verification']",https://api.github.com/licenses/mit
1,https://github.com/Siddhi-95/AHB-to-APB-Bridge-Verification.git,2022-03-01 15:11:35+00:00,Maven Silicon project - AHB-to-APB Bridge Verification using UVM Methodology.,11,Siddhi-95/AHB-to-APB-Bridge-Verification,464943029,SystemVerilog,AHB-to-APB-Bridge-Verification,89,52,2024-03-12 11:41:12+00:00,"['systemverilog', 'verilog', 'uvm']",None
2,https://github.com/hanysalah/Design-Pattern-in-SV.git,2022-02-21 21:10:31+00:00,This repo is created to include illustrative examples on object oriented design pattern in SV,3,hanysalah/Design-Pattern-in-SV,462032860,SystemVerilog,Design-Pattern-in-SV,40,50,2024-03-26 21:07:52+00:00,"['design-patterns', 'hardware-verification', 'systemverilog']",None
3,https://github.com/openhwgroup/cva5.git,2022-02-08 19:12:27+00:00,The CORE-V CVA5 is an Application class 5-stage RISC-V CPU specifically targetting FPGA implementations.,11,openhwgroup/cva5,457069453,SystemVerilog,cva5,1469,49,2024-03-05 22:39:28+00:00,[],https://api.github.com/licenses/apache-2.0
4,https://github.com/davemuscle/sigma_delta_converters.git,2022-01-24 02:00:32+00:00,Implementation and test of reusable sigma-delta A/D converters written in SystemVerilog on a MAX10 FPGA with minimal external components,6,davemuscle/sigma_delta_converters,451284823,SystemVerilog,sigma_delta_converters,2683,35,2024-04-01 05:49:16+00:00,"['fpga', 'max10', 'adc', 'dac', 'sigma-delta-modulation', 'sigma-delta', 'systemverilog', 'quarkus', 'comb-filter', 'decimation', 'pwm']",None
5,https://github.com/Open-Source-Hardware-Initiative/AES.git,2022-01-24 20:11:52+00:00,Open Source AES,3,Open-Source-Hardware-Initiative/AES,451617149,SystemVerilog,AES,55694,30,2023-03-18 16:46:22+00:00,[],https://api.github.com/licenses/apache-2.0
6,https://github.com/YosysHQ-GmbH/SVA-AXI4-FVIP.git,2022-02-14 16:35:54+00:00,YosysHQ SVA AXI Properties,5,YosysHQ-GmbH/SVA-AXI4-FVIP,459240580,SystemVerilog,SVA-AXI4-FVIP,5004,23,2024-03-12 05:25:43+00:00,[],https://api.github.com/licenses/isc
7,https://github.com/muneeb-mbytes/axi4_avip.git,2021-12-27 13:10:01+00:00,Development of AXI4 Accelerated VIP,10,muneeb-mbytes/axi4_avip,442163711,SystemVerilog,axi4_avip,8182,23,2024-03-19 08:55:43+00:00,[],None
8,https://github.com/muneeb-mbytes/pulpino__spi_master__ip_verification.git,2022-01-22 07:06:47+00:00,To verify the SPI Master IP using the APB and SPI AVIPs,7,muneeb-mbytes/pulpino__spi_master__ip_verification,450743816,SystemVerilog,pulpino__spi_master__ip_verification,479,17,2024-01-17 15:04:33+00:00,[],None
9,https://github.com/CompuSAR/sar6502.git,2022-02-23 13:50:45+00:00,6502 FPGA implementation,1,CompuSAR/sar6502,462754657,SystemVerilog,sar6502,817,16,2024-02-07 18:43:34+00:00,[],None
10,https://github.com/pulp-platform/clic.git,2022-01-29 16:11:53+00:00,RISC-V fast interrupt controller,3,pulp-platform/clic,453448013,SystemVerilog,clic,231,15,2024-02-20 17:02:30+00:00,"['risc-v', 'clic', 'interrupt']",https://api.github.com/licenses/apache-2.0
11,https://github.com/eisl-nctu/falco.git,2022-01-05 08:07:18+00:00,A 32-bit out-of-order RISC-V superscalar for Xilinx FPGAs.,2,eisl-nctu/falco,444717228,SystemVerilog,falco,624,12,2023-12-29 18:08:10+00:00,[],https://api.github.com/licenses/bsd-3-clause
12,https://github.com/openhwgroup/core-v-mcu-uvm.git,2022-02-09 22:26:48+00:00,CORE-V MCU UVM Environment and Test Bench,6,openhwgroup/core-v-mcu-uvm,457548978,SystemVerilog,core-v-mcu-uvm,9928,12,2023-11-16 01:06:05+00:00,[],None
13,https://github.com/muhammedkocaoglu/SystemVerilog-Tutorials.git,2022-02-01 19:56:58+00:00,SystemVerilog derslerinde yazdığım kodları içermektedir.,1,muhammedkocaoglu/SystemVerilog-Tutorials,454531155,SystemVerilog,SystemVerilog-Tutorials,19676,11,2024-01-18 15:32:00+00:00,[],None
14,https://github.com/semify-eda/waveform-generator.git,2022-02-16 16:27:12+00:00,Waveform Generator,0,semify-eda/waveform-generator,460085188,SystemVerilog,waveform-generator,5189,10,2023-06-12 07:44:49+00:00,[],https://api.github.com/licenses/apache-2.0
15,https://github.com/ecilasun/e32e.git,2022-02-27 02:59:24+00:00,Latest in the line of the E32 processors with better/generic cache placement,2,ecilasun/e32e,464022439,SystemVerilog,e32e,183558,10,2024-03-04 05:47:30+00:00,[],None
16,https://github.com/Ashwin-Rajesh/RiSC-16.git,2022-01-06 08:30:41+00:00,"RiSC 16 is a simple 16 bit instruction set with 8 instructions and 3 instruction formats. This is an RTL implementation in verilog, instruction set simulator and a random instruction generator in system verilog and a rudimetary assembler in python",1,Ashwin-Rajesh/RiSC-16,445096580,SystemVerilog,RiSC-16,868,9,2024-01-16 16:27:21+00:00,"['verilog', 'fpga', 'computer-architecture']",https://api.github.com/licenses/mit
17,https://github.com/ucsbieee/mapache64.git,2022-01-10 06:28:43+00:00,Custom 6502 Video Game Console,1,ucsbieee/mapache64,446305577,SystemVerilog,mapache64,13343,9,2024-01-19 03:10:47+00:00,"['fpga', 'verilog', 'cmod-a7', 'fusesoc', 'ben-eater-6502', '65c02', 'cc65']",https://api.github.com/licenses/mit
18,https://github.com/kang-0909/mips-cpu.git,2022-02-23 07:37:03+00:00,MIPS CPU in verilog,1,kang-0909/mips-cpu,462629168,SystemVerilog,mips-cpu,16,8,2023-01-10 07:31:10+00:00,"['verilog', 'mips', 'risc', 'mips32cpu', 'systemverilog']",https://api.github.com/licenses/mit
19,https://github.com/GregAC/ibex_super_system.git,2022-03-03 17:16:37+00:00,"Ibex Super System is DEPRECATED, and has become the Ibex Demo System: https://github.com/lowRISC/ibex-demo-system which is maintained by lowRISC.",8,GregAC/ibex_super_system,465815319,SystemVerilog,ibex_super_system,2238,8,2023-03-22 04:24:09+00:00,[],https://api.github.com/licenses/apache-2.0
20,https://github.com/pulp-platform/fpu_ss.git,2022-02-27 13:48:06+00:00,CORE-V eXtension Interface compliant RISC-V [F|Zfinx] Coprocessor,6,pulp-platform/fpu_ss,464149264,SystemVerilog,fpu_ss,85,8,2023-10-04 12:33:53+00:00,[],
21,https://github.com/andmiele/uCodedRiscV.git,2022-01-02 05:28:08+00:00,A simple micro-coded (micro-programmed control unit) multi-cycle 32-bit RISC-V CPU written in System Verilog,1,andmiele/uCodedRiscV,443689020,SystemVerilog,uCodedRiscV,133,7,2023-09-02 15:27:34+00:00,[],https://api.github.com/licenses/apache-2.0
22,https://github.com/krz-max/Digital-Circuits-and-Systems.git,2022-03-01 15:36:00+00:00,[NYCU 2021 Spring] Digital Circuits and Systems,0,krz-max/Digital-Circuits-and-Systems,464952288,SystemVerilog,Digital-Circuits-and-Systems,10971,7,2024-04-02 08:06:21+00:00,"['digitalcircuit', 'nycu-course', 'systemverilog']",None
23,https://github.com/esnet/esnet-fpga-library.git,2022-03-04 17:46:13+00:00,ESnet general-purpose FPGA design library.,1,esnet/esnet-fpga-library,466218285,SystemVerilog,esnet-fpga-library,1348,7,2024-03-15 02:27:48+00:00,['high-touch'],
24,https://github.com/AI-Vector-Accelerator/x-ava-core.git,2022-01-03 22:49:05+00:00,,4,AI-Vector-Accelerator/x-ava-core,444220680,SystemVerilog,x-ava-core,131,6,2023-09-20 02:15:52+00:00,[],
25,https://github.com/Grieverheart/pokemon_mini.git,2021-12-30 09:34:45+00:00,Attempt to implement Pokemon Mini in Verilog,0,Grieverheart/pokemon_mini,443029373,SystemVerilog,pokemon_mini,3088,6,2022-10-12 01:12:32+00:00,[],https://api.github.com/licenses/gpl-2.0
26,https://github.com/pulp-platform/axi-io-pmp.git,2022-01-11 12:38:41+00:00,Input / Output Physical Memory Protection Unit for RISC-V,2,pulp-platform/axi-io-pmp,446815678,SystemVerilog,axi-io-pmp,31,6,2024-01-29 05:41:21+00:00,[],
27,https://github.com/erickahmed/iceberg.git,2022-02-14 23:07:32+00:00,Iceberg is a virtual FPGA computer built from scratch using Systemverilog,2,erickahmed/iceberg,459354970,SystemVerilog,iceberg,87,5,2023-06-19 08:21:24+00:00,"['cpu', 'verilog', 'logic-gates', 'assembly', 'fpga']",https://api.github.com/licenses/gpl-3.0
28,https://github.com/sifferman/fpga_screensaver.git,2022-01-31 17:51:50+00:00,This project implements the VGA protocol and allows custom images to be displayed to the screen using the Sipeed Tang Nano FPGA dev board.,1,sifferman/fpga_screensaver,454110719,SystemVerilog,fpga_screensaver,67,5,2024-03-15 22:20:48+00:00,"['fpga', 'fusesoc']",https://api.github.com/licenses/unlicense
29,https://github.com/muneeb-mbytes/pulpino__spi_master__subsystem_verification.git,2022-03-01 08:39:02+00:00,Verification of pulpino subsystem consisting of AXI input interface and SPI as output interface,3,muneeb-mbytes/pulpino__spi_master__subsystem_verification,464810093,SystemVerilog,pulpino__spi_master__subsystem_verification,3216,5,2023-05-23 04:08:17+00:00,[],None
30,https://github.com/hejy47/HDLParser.git,2022-01-10 13:16:10+00:00,,2,hejy47/HDLParser,446430434,SystemVerilog,HDLParser,62894,5,2024-01-09 08:38:27+00:00,[],None
31,https://github.com/skudlur/cayde.git,2022-02-23 14:55:36+00:00,cayde is 32-bit RISC-V core written in SystemVerilog,2,skudlur/cayde,462780602,SystemVerilog,cayde,43,5,2023-08-25 01:43:21+00:00,[],https://api.github.com/licenses/mit
32,https://github.com/robfinch/Float.git,2022-02-22 02:48:50+00:00,Floating point code in System Verilog,2,robfinch/Float,462112672,SystemVerilog,Float,12687,5,2023-12-20 12:38:22+00:00,[],None
33,https://github.com/YosysHQ/scy.git,2022-02-26 12:22:23+00:00,Sequence of Covers with Yosys,1,YosysHQ/scy,463845228,SystemVerilog,scy,2206,5,2024-03-29 02:51:10+00:00,[],
34,https://github.com/guanrenyang/Tiny-TPU.git,2022-02-22 05:58:25+00:00,,0,guanrenyang/Tiny-TPU,462159361,SystemVerilog,Tiny-TPU,7858,5,2024-04-02 16:59:56+00:00,[],https://api.github.com/licenses/mit
35,https://github.com/shivanandgsr/AHB-Lite_verification-UVM.git,2022-01-04 22:26:00+00:00,,0,shivanandgsr/AHB-Lite_verification-UVM,444581435,SystemVerilog,AHB-Lite_verification-UVM,8399,5,2024-01-23 12:05:26+00:00,[],None
36,https://github.com/shin-yamashita/5th-AI-Edge-Contest.git,2022-03-03 12:47:14+00:00,RTL implementation of TFlite FPGA accelerator and RISC-V controller.,0,shin-yamashita/5th-AI-Edge-Contest,465715744,SystemVerilog,5th-AI-Edge-Contest,185373,4,2022-10-04 04:08:00+00:00,"['tflite', 'tflite-delegate', 'risc-v', 'systemverilog']",https://api.github.com/licenses/apache-2.0
37,https://github.com/NoBizz/Coffie-Machine.git,2022-01-16 10:57:15+00:00,,0,NoBizz/Coffie-Machine,448527453,SystemVerilog,Coffie-Machine,5114,4,2024-01-20 00:59:26+00:00,[],None
38,https://github.com/dharmilshah99/NuttyNios-Hardware.git,2022-02-18 15:51:05+00:00,,0,dharmilshah99/NuttyNios-Hardware,460912741,SystemVerilog,NuttyNios-Hardware,7141,4,2022-10-17 13:30:22+00:00,[],None
39,https://github.com/ZZJ34/sv_final_project.git,2022-01-15 13:56:37+00:00,systemverilog课程大作业；对一个APB总线模块进行验证,0,ZZJ34/sv_final_project,448292211,SystemVerilog,sv_final_project,6098,4,2024-01-16 13:04:27+00:00,[],None
40,https://github.com/dineshannayya/fpu.git,2022-01-09 06:43:52+00:00,IEEE 754 floating point unit in Verilog ,1,dineshannayya/fpu,446014390,SystemVerilog,fpu,171,4,2024-04-12 19:08:54+00:00,[],https://api.github.com/licenses/apache-2.0
41,https://github.com/acmpesuecc/zavala.git,2022-02-13 13:53:15+00:00,AIEP Guideline — Zavala FPGA Miner,4,acmpesuecc/zavala,458823774,SystemVerilog,zavala,16,4,2024-01-14 07:36:17+00:00,['aiep-2022'],https://api.github.com/licenses/mit
42,https://github.com/GabbedT/UART-Controller.git,2022-02-26 16:56:03+00:00,"UART controller that uses a master-slave architecture to enstablish a communication with the other device during the configuration process. This repository provides RTL code and testbench for the device synthesis and simulation, as well as a simple driver to use it in your system.",0,GabbedT/UART-Controller,463912608,SystemVerilog,UART-Controller,2940,4,2024-02-11 04:41:51+00:00,"['uart', 'systemverilog', 'rtl', 'asic', 'fpga', 'driver']",https://api.github.com/licenses/mit
43,https://github.com/georgeyhere/fpga-hcsr04.git,2022-02-19 22:37:38+00:00,HCSR04 Ultrasonic Sensor AXI IP + Drivers ,0,georgeyhere/fpga-hcsr04,461330063,SystemVerilog,fpga-hcsr04,3,3,2022-05-31 22:25:56+00:00,[],None
44,https://github.com/merledu/common_peripheral_vips.git,2022-01-11 14:42:03+00:00,,3,merledu/common_peripheral_vips,446859309,SystemVerilog,common_peripheral_vips,896,3,2022-09-30 15:35:00+00:00,[],https://api.github.com/licenses/apache-2.0
45,https://github.com/techvinodreddy/async_fifo_uvm.git,2022-02-21 09:06:16+00:00,,1,techvinodreddy/async_fifo_uvm,461782047,SystemVerilog,async_fifo_uvm,14,3,2024-03-12 13:49:06+00:00,[],None
46,https://github.com/CyanGuo/Asynchronous-NoC-Based-CNN-Accelerator.git,2022-02-17 08:00:49+00:00, Asynchronous Network-On-Chip Based CNN Accelerator,0,CyanGuo/Asynchronous-NoC-Based-CNN-Accelerator,460336334,SystemVerilog,Asynchronous-NoC-Based-CNN-Accelerator,54,3,2023-06-27 02:52:20+00:00,[],https://api.github.com/licenses/mit
47,https://github.com/Electronic-and-Computer-Engineering/mic-1-hdl.git,2022-02-17 07:32:34+00:00,A hardware implementation of the MIC-1 processor architecture invented by Andrew S. Tanenbaum.,1,Electronic-and-Computer-Engineering/mic-1-hdl,460327849,SystemVerilog,mic-1-hdl,11843,3,2023-03-09 07:15:10+00:00,"['systemverilog', 'mic-1']",https://api.github.com/licenses/gpl-3.0
48,https://github.com/ZZJ34/AHB2APB.git,2022-03-02 08:43:27+00:00,AHB转APB的总线桥以及APB总线设计,1,ZZJ34/AHB2APB,465223662,SystemVerilog,AHB2APB,1041,3,2023-11-07 08:10:47+00:00,[],None
49,https://github.com/Open-Source-Hardware-Initiative/hdlbasics.git,2022-01-14 17:51:34+00:00,This repository contains some basic digital logic and hdl knowledge that is useful when beginning to learn HDL.,0,Open-Source-Hardware-Initiative/hdlbasics,448058775,SystemVerilog,hdlbasics,7,3,2022-08-26 05:21:30+00:00,[],None
50,https://github.com/fpgacademy/Tutorials.git,2022-02-26 21:18:47+00:00,,1,fpgacademy/Tutorials,463969066,SystemVerilog,Tutorials,57698,3,2023-12-15 14:52:39+00:00,[],https://api.github.com/licenses/mit
51,https://github.com/NicolaZomer/SoundWaveDistortionViaFPGA.git,2022-02-19 22:55:43+00:00," Implementation on FPGA of a distortion effect in sound waves called ""Overdrive"" or ""Clipping"" as a final project of the couse Management and Analysis of Physics Dataset (mod.A).",1,NicolaZomer/SoundWaveDistortionViaFPGA,461332986,SystemVerilog,SoundWaveDistortionViaFPGA,32001,3,2023-06-13 13:02:13+00:00,"['clipping', 'audio-effects', 'xilinx-fpga', 'pmod-i2s2', 'pyaudio']",None
52,https://github.com/AuringzaibSabir/uvm_sample.git,2022-01-10 10:40:15+00:00,This repository contains a sample code of the UVM environment. Use this code as a reference for writing a complex UVM framework.,2,AuringzaibSabir/uvm_sample,446380779,SystemVerilog,uvm_sample,35,3,2023-04-01 06:16:51+00:00,[],https://api.github.com/licenses/apache-2.0
53,https://github.com/ykqiu/ethernet-udp.git,2022-02-23 03:33:48+00:00,Hign-Speed Data Transmission with Gigabits Ethernet in UDP Protocol,1,ykqiu/ethernet-udp,462568193,SystemVerilog,ethernet-udp,86,3,2023-09-11 07:32:47+00:00,[],None
54,https://github.com/nguyenquanicd/AXI4VIP.git,2022-01-02 09:21:35+00:00,AXI4 VIP supports both AXI master and slave.,1,nguyenquanicd/AXI4VIP,443725638,SystemVerilog,AXI4VIP,17934,3,2023-04-16 20:22:07+00:00,[],None
55,https://github.com/cole-maxwell/n_tap_fir_filter_arm.git,2022-01-18 16:11:50+00:00,"Modular design of an N-tap FIR filter on the DE1-SoC’s FPGA; synthesis in Quartus Prime, code in Verilog, VHDL & C. ",0,cole-maxwell/n_tap_fir_filter_arm,449355879,SystemVerilog,n_tap_fir_filter_arm,30029,3,2024-01-26 16:00:33+00:00,[],https://api.github.com/licenses/mit
56,https://github.com/fhideous/UVM-SimpleCache.git,2022-02-10 14:13:41+00:00,,0,fhideous/UVM-SimpleCache,457807985,SystemVerilog,UVM-SimpleCache,41,2,2024-04-05 08:22:35+00:00,[],None
57,https://github.com/bciip/kmac.git,2022-01-18 10:31:27+00:00,,0,bciip/kmac,449239926,SystemVerilog,kmac,402,2,2023-06-28 06:17:22+00:00,[],None
58,https://github.com/Divyank33/Xilinx-Based-Elevator-Controller.git,2022-01-16 10:55:37+00:00,"Designed an Eight floor Elevator Controller on Xilinx VIVADO using System Verilog, including the design code and the testbench code to implement the controller.",0,Divyank33/Xilinx-Based-Elevator-Controller,448527121,SystemVerilog,Xilinx-Based-Elevator-Controller,30,2,2023-12-27 10:39:34+00:00,[],None
59,https://github.com/ESCA-RISC-V/RISCV_CPU.git,2022-01-14 08:38:32+00:00,,0,ESCA-RISC-V/RISCV_CPU,447897254,SystemVerilog,RISCV_CPU,25541,2,2023-02-01 04:16:02+00:00,[],None
60,https://github.com/ayengec/Bresenham_Line_Algorithm_VGA__BASYS3.git,2022-01-04 20:39:18+00:00,Bresenham's line algorithm is a line drawing algorithm that determines the points of an n-dimensional raster that should be selected in order to form a close approximation to a straight line between two points. It is commonly used to draw line primitives.,0,ayengec/Bresenham_Line_Algorithm_VGA__BASYS3,444556708,SystemVerilog,Bresenham_Line_Algorithm_VGA__BASYS3,4480,2,2023-01-27 08:01:23+00:00,[],https://api.github.com/licenses/gpl-3.0
61,https://github.com/dpretet/chacha20.git,2021-12-29 19:13:45+00:00,Chacha20 Implementation in SystemVerilog for FPGA and ASIC,0,dpretet/chacha20,442867934,SystemVerilog,chacha20,67,2,2023-09-07 05:42:24+00:00,[],https://api.github.com/licenses/mit
62,https://github.com/ecilasun/e32c.git,2022-01-28 18:17:11+00:00,Pipelined version of the E32 RISC-V system,2,ecilasun/e32c,453171875,SystemVerilog,e32c,270,2,2023-09-30 05:49:19+00:00,[],None
63,https://github.com/andreevanse/noise-canceller.git,2022-01-12 10:29:29+00:00,,0,andreevanse/noise-canceller,447173532,SystemVerilog,noise-canceller,7120,2,2024-03-08 18:15:32+00:00,[],None
64,https://github.com/Barkhausen-Institut/M3-hardware.git,2022-02-24 15:42:48+00:00,Hardware RTL code for the M³ operating system,1,Barkhausen-Institut/M3-hardware,463204869,SystemVerilog,M3-hardware,12561,2,2024-03-22 15:07:07+00:00,"['fpga', 'hardware', 'rtl', 'verilog']",https://api.github.com/licenses/gpl-3.0
65,https://github.com/RootCubed/nes-fpga.git,2022-02-21 18:41:22+00:00,A NES on an FPGA,0,RootCubed/nes-fpga,461988268,SystemVerilog,nes-fpga,47,2,2023-02-21 14:46:31+00:00,[],None
66,https://github.com/Ziboooo/picoMIPS-for-affine-transformation.git,2022-02-05 15:00:45+00:00,try to built a simple cpu ,0,Ziboooo/picoMIPS-for-affine-transformation,455900163,SystemVerilog,picoMIPS-for-affine-transformation,1150,2,2024-02-27 04:01:08+00:00,[],None
67,https://github.com/dineshannayya/ycr1c.git,2022-01-20 03:44:30+00:00,YIFIVE 32 Bit Single Core Risc V core with icache and dcache,0,dineshannayya/ycr1c,449944555,SystemVerilog,ycr1c,686,2,2023-03-08 04:55:18+00:00,"['riscv32', 'cache']",https://api.github.com/licenses/apache-2.0
68,https://github.com/steanmeemr/RoundRobin-4bitGrant.git,2022-01-21 05:48:39+00:00,System verilog code for Round-Robin arbiter ,0,steanmeemr/RoundRobin-4bitGrant,450369727,SystemVerilog,RoundRobin-4bitGrant,7986,2,2023-06-20 03:13:24+00:00,[],None
69,https://github.com/z4fang/Processor-FASA.git,2022-02-16 05:20:39+00:00,,0,z4fang/Processor-FASA,459862993,SystemVerilog,Processor-FASA,540,2,2022-05-10 16:57:43+00:00,[],None
70,https://github.com/kang-0909/digital-clock.git,2022-02-23 08:12:32+00:00,A digital clock in verilog,0,kang-0909/digital-clock,462640232,SystemVerilog,digital-clock,5,2,2022-06-23 02:41:58+00:00,"['verilog', 'systemverilog']",https://api.github.com/licenses/mit
71,https://github.com/dineshannayya/ycr1cr.git,2022-02-15 10:09:54+00:00,,0,dineshannayya/ycr1cr,459524485,SystemVerilog,ycr1cr,998,2,2024-03-06 08:18:52+00:00,[],https://api.github.com/licenses/apache-2.0
72,https://github.com/JANAKIRAMEMANI/FIFO_SV.git,2022-01-27 12:15:45+00:00,FIFO SV TESTBENCH,0,JANAKIRAMEMANI/FIFO_SV,452669998,SystemVerilog,FIFO_SV,14,2,2023-06-21 03:57:31+00:00,[],None
73,https://github.com/DigitalRabbit85/SvLibDR.git,2022-02-21 10:27:42+00:00,SystemVerilog Library from Digital Rabbit,1,DigitalRabbit85/SvLibDR,461810326,SystemVerilog,SvLibDR,213,2,2022-06-18 22:28:22+00:00,[],None
74,https://github.com/aniketb005/rtl-implementation-1x3-router.git,2021-12-30 21:29:59+00:00,verilog design,0,aniketb005/rtl-implementation-1x3-router,443188630,SystemVerilog,rtl-implementation-1x3-router,88,2,2022-05-31 02:21:59+00:00,[],None
75,https://github.com/LispEngineer/systemverilog-hdmi.git,2022-02-20 20:33:00+00:00,Implement HDMI output using only SystemVerilog and an Analog Devices ADV7513,0,LispEngineer/systemverilog-hdmi,461609125,SystemVerilog,systemverilog-hdmi,64,2,2024-01-09 00:27:50+00:00,"['systemverilog', 'hdmi', 'fpga', 'cyclone-v', 'terasic', 'terasic-c5g', 'rtl', 'verilog', 'hdl']",None
76,https://github.com/AlSaqr-platform/riscv_nn.git,2022-01-25 10:09:15+00:00,,1,AlSaqr-platform/riscv_nn,451826381,SystemVerilog,riscv_nn,1154,2,2024-03-31 14:13:41+00:00,[],
77,https://github.com/lild4d4/uart_get_32bit_word.git,2022-01-31 19:14:54+00:00,Get an 32 bit word for a determined 32 bit adress,0,lild4d4/uart_get_32bit_word,454137444,SystemVerilog,uart_get_32bit_word,20,2,2022-03-16 00:29:43+00:00,[],None
78,https://github.com/AuringzaibSabir/timer_verification_ip.git,2022-02-07 08:07:10+00:00,"This repository contains a Verification IP for the timer. This VIP tests the timer by applying constrained random stimulus. Sequences of transactions reset, configure the timer, and perform read & write operations on the respective registers of the timer.",1,AuringzaibSabir/timer_verification_ip,456411944,SystemVerilog,timer_verification_ip,160,2,2022-04-06 03:31:06+00:00,[],https://api.github.com/licenses/apache-2.0
79,https://github.com/joseljim/MIPS.git,2022-02-07 21:16:06+00:00,MIPS with Interlocked Pipeline Stage developed in SystemVerilog and tested on Modelsim. ,1,joseljim/MIPS,456679768,SystemVerilog,MIPS,126,1,2022-10-17 02:55:50+00:00,[],https://api.github.com/licenses/mit
80,https://github.com/bciip/clkmgr.git,2022-01-18 10:32:57+00:00,,0,bciip/clkmgr,449240494,SystemVerilog,clkmgr,181,1,2022-09-27 03:11:45+00:00,[],None
81,https://github.com/pierregobin/my_ibex.git,2022-01-30 19:22:51+00:00,,0,pierregobin/my_ibex,453778617,SystemVerilog,my_ibex,9963,1,2022-06-08 13:35:41+00:00,[],https://api.github.com/licenses/apache-2.0
82,https://github.com/charkster/tang_nano-scarf_pat_gen_edge_counter.git,2022-01-22 21:38:27+00:00,"FPGA design for Tang Nano board. SCARF SPI slave with block ram slave, pattern generator slave and two edge counter slaves.",1,charkster/tang_nano-scarf_pat_gen_edge_counter,450941883,SystemVerilog,tang_nano-scarf_pat_gen_edge_counter,164,1,2023-10-30 19:46:59+00:00,"['fpga', 'tang-nano', 'pattern-generator', 'pulse-detection']",https://api.github.com/licenses/mit
83,https://github.com/0xbadcoffe/fpga-miner.git,2022-01-06 12:21:48+00:00,Reference miner for FPGA,5,0xbadcoffe/fpga-miner,445160128,,fpga-miner,606,1,2022-04-16 19:14:22+00:00,[],https://api.github.com/licenses/lgpl-3.0
84,https://github.com/Saitharunjami/EDA_Playground-codes.git,2022-02-21 03:32:32+00:00,,0,Saitharunjami/EDA_Playground-codes,461692454,SystemVerilog,EDA_Playground-codes,75,1,2022-03-19 04:25:42+00:00,[],None
85,https://github.com/dpavlin/trilby-hat-fpga.git,2021-12-28 16:31:10+00:00,Trilby HAT ECP5 FPGA SDR for Raspberry Pi with open source tools,1,dpavlin/trilby-hat-fpga,442521270,SystemVerilog,trilby-hat-fpga,1667,1,2022-01-06 12:26:43+00:00,"['fpga', 'sdr', 'raspberry-pi']",None
86,https://github.com/ecilasun/e32b.git,2022-01-05 22:38:18+00:00,Port of E32 to Digilent Nexsys Video board with additional features,0,ecilasun/e32b,444969784,SystemVerilog,e32b,887,1,2022-01-11 03:35:51+00:00,[],None
87,https://github.com/LongStudy/RI5CY_workshop.git,2022-01-18 06:01:54+00:00,Workshop for Customising a RISC-V Core (v1.1) Originally presented at OSHCamp 2019,1,LongStudy/RI5CY_workshop,449160376,SystemVerilog,RI5CY_workshop,2125,1,2023-03-06 11:25:35+00:00,[],
88,https://github.com/RehanEjaz/Pwm-FPGA-motor-speed-ctrl.git,2022-01-24 16:47:42+00:00,Speed controller for DC motor to implement on FPGA,0,RehanEjaz/Pwm-FPGA-motor-speed-ctrl,451549623,SystemVerilog,Pwm-FPGA-motor-speed-ctrl,32840,1,2022-05-01 08:01:55+00:00,[],None
89,https://github.com/KameronJonasson1/verilog-traffic-controller.git,2021-12-30 00:01:33+00:00,Verilog design for intersection traffic controller with walk lights and single left turn light,0,KameronJonasson1/verilog-traffic-controller,442920231,SystemVerilog,verilog-traffic-controller,1729,1,2021-12-30 18:03:34+00:00,[],None
90,https://github.com/nadavzach/Erasure-coding-accelerator.git,2021-12-28 17:33:26+00:00,"Erasure coding ASIC accelerator, implemented in system verilog.",2,nadavzach/Erasure-coding-accelerator,442537443,SystemVerilog,Erasure-coding-accelerator,1361,1,2022-06-22 20:21:09+00:00,[],None
91,https://github.com/mdodovic/VLSI-Verification.git,2022-02-07 19:55:57+00:00,Verification of Design Under the Testing,0,mdodovic/VLSI-Verification,456655908,SystemVerilog,VLSI-Verification,228,1,2022-06-29 11:53:23+00:00,"['verification', 'system-verilog', 'verilog']",None
92,https://github.com/AnastasiaMCunningham/SV-UVM-Sandbox.git,2022-02-19 13:45:03+00:00,A space for developing test projects to get familiar with the SystemVerilog syntax and Universal Verification Method,0,AnastasiaMCunningham/SV-UVM-Sandbox,461204173,SystemVerilog,SV-UVM-Sandbox,32,1,2022-02-21 02:10:37+00:00,[],https://api.github.com/licenses/gpl-3.0
93,https://github.com/redchenjs/hdl_utils.git,2022-02-08 14:09:27+00:00,HDL Utils,0,redchenjs/hdl_utils,456959445,SystemVerilog,hdl_utils,285,1,2023-09-07 05:42:27+00:00,[],None
94,https://github.com/dineshannayya/cache.git,2022-01-16 11:09:33+00:00,Memory Mapped Cache,0,dineshannayya/cache,448530009,SystemVerilog,cache,129,1,2022-02-16 11:10:34+00:00,[],https://api.github.com/licenses/apache-2.0
95,https://github.com/Staringlizard/amiv4.git,2022-01-08 22:08:29+00:00,HDMI RGB to HDMI converter,0,Staringlizard/amiv4,445939054,SystemVerilog,amiv4,564,1,2022-01-09 23:32:27+00:00,[],None
96,https://github.com/litex-hub/pythondata-cpu-cv32e41p.git,2022-01-27 17:18:05+00:00,Python module containing system_verilog files for cv32e41p cpu (for use with LiteX).,1,litex-hub/pythondata-cpu-cv32e41p,452775358,SystemVerilog,pythondata-cpu-cv32e41p,5651,1,2022-05-26 16:52:19+00:00,[],https://api.github.com/licenses/apache-2.0
97,https://github.com/JongSeob/Project-UVM.git,2022-01-13 06:33:56+00:00,,0,JongSeob/Project-UVM,447490219,SystemVerilog,Project-UVM,1523,1,2022-02-08 03:17:16+00:00,[],https://api.github.com/licenses/apache-2.0
98,https://github.com/davejackenport101/space_invaders.git,2022-01-03 15:05:24+00:00,Implementation of Space Invaders written in System Verilog and C to be implemented onto a DE10-Lite FPGA,0,davejackenport101/space_invaders,444102234,SystemVerilog,space_invaders,9,1,2022-04-26 20:04:15+00:00,[],None
99,https://github.com/KiranaGowda/https-github.com-lowRISC-opentitan.git,2022-02-02 06:11:29+00:00,,0,KiranaGowda/https-github.com-lowRISC-opentitan,454663004,SystemVerilog,https-github.com-lowRISC-opentitan,51308,1,2023-02-06 16:14:54+00:00,[],https://api.github.com/licenses/apache-2.0
100,https://github.com/syedarafia13/RISCV-CORE-FPGA.git,2022-02-22 07:50:59+00:00,This repository contains RISCV (RV32I) Single Cycle Processor RTL design in SystemVerilog and Testbench in C++ for fpga.,0,syedarafia13/RISCV-CORE-FPGA,462192443,SystemVerilog,RISCV-CORE-FPGA,7403,1,2022-05-02 21:27:56+00:00,[],None
101,https://github.com/avashist003/Generic_syncFIFO.git,2022-02-25 17:09:46+00:00,Generic synchronous FIFO where the depth may or may not be power of 2,0,avashist003/Generic_syncFIFO,463614291,SystemVerilog,Generic_syncFIFO,9,1,2023-12-05 14:21:28+00:00,[],None
102,https://github.com/dineshannayya/ycr1.git,2022-01-10 05:46:05+00:00,Open Source Single RISCV 32 bit core,0,dineshannayya/ycr1,446295547,SystemVerilog,ycr1,270,1,2022-02-16 11:10:36+00:00,[],https://api.github.com/licenses/apache-2.0
103,https://github.com/davejackenport101/sLC-3.git,2022-01-03 20:39:13+00:00,An implementation of a simple LC-3 processor in System Verilog.,0,davejackenport101/sLC-3,444193356,SystemVerilog,sLC-3,18,1,2022-04-26 20:04:40+00:00,[],None
104,https://github.com/bciip/csrng.git,2022-01-18 10:29:23+00:00,,0,bciip/csrng,449239252,SystemVerilog,csrng,213,1,2023-02-02 12:23:48+00:00,[],None
105,https://github.com/s1yoshid/UART-tx.git,2022-01-31 21:59:13+00:00,,0,s1yoshid/UART-tx,454183761,SystemVerilog,UART-tx,7,1,2022-01-31 22:14:01+00:00,[],None
106,https://github.com/Judit1992/TechnionEeFinalProjectVLSI.git,2022-02-25 17:35:23+00:00,Hardware Implementation of a Real-time Genetic Algorithm for Adaptive Filtering Applications,0,Judit1992/TechnionEeFinalProjectVLSI,463621930,SystemVerilog,TechnionEeFinalProjectVLSI,10588,1,2024-03-13 05:37:25+00:00,[],None
107,https://github.com/sld-columbia/riscv-dift.git,2022-02-07 01:38:11+00:00,,1,sld-columbia/riscv-dift,456322365,SystemVerilog,riscv-dift,2908,1,2022-04-19 22:51:24+00:00,[],
108,https://github.com/andreevanse/spi-master.git,2022-01-13 10:36:33+00:00,The SPI master partially compatible with the Cyclone V HPS SPI master.,0,andreevanse/spi-master,447559108,SystemVerilog,spi-master,11,1,2023-05-01 14:35:49+00:00,[],None
109,https://github.com/varunsax12/SAR-ADC-Digital.git,2022-02-21 00:22:58+00:00,Digital Components for SAR ADC,0,varunsax12/SAR-ADC-Digital,461653599,SystemVerilog,SAR-ADC-Digital,2,1,2023-03-16 09:08:40+00:00,[],None
110,https://github.com/pranav-nb/APB_BFM.git,2021-12-30 15:51:32+00:00,This is a bus functional model of Advanced Peripheral Bus.,0,pranav-nb/APB_BFM,443119085,SystemVerilog,APB_BFM,6,1,2024-02-11 04:10:34+00:00,"['verilog', 'systemverilog', 'apb', 'arm']",https://api.github.com/licenses/mit
111,https://github.com/sama18-meet/sifratiot02.git,2022-01-10 19:10:19+00:00,,0,sama18-meet/sifratiot02,446550535,SystemVerilog,sifratiot02,24,1,2022-05-06 14:14:47+00:00,[],None
112,https://github.com/ozlemcali/FB-CPU-SystemVerilog-Testbench.git,2022-01-05 13:07:44+00:00,,0,ozlemcali/FB-CPU-SystemVerilog-Testbench,444807239,SystemVerilog,FB-CPU-SystemVerilog-Testbench,2590,1,2022-01-07 14:59:52+00:00,[],None
113,https://github.com/Alex-Sensin/Neural_Network_Hardware_Implementation.git,2022-02-15 16:51:08+00:00,Project for Digital Integrated Circuit Design. Using a given neural network I had to extract weights and bias. From the weights and bias I created a hardware implementation of the neural network.,0,Alex-Sensin/Neural_Network_Hardware_Implementation,459667727,SystemVerilog,Neural_Network_Hardware_Implementation,2307,1,2022-11-23 03:23:17+00:00,[],None
114,https://github.com/LPF9000/reconfigurable-computing-2.git,2022-02-16 00:58:49+00:00,,1,LPF9000/reconfigurable-computing-2,459803679,SystemVerilog,reconfigurable-computing-2,23697,1,2022-04-26 02:27:01+00:00,[],None
115,https://github.com/AuringzaibSabir/uart_verification_ip.git,2022-02-21 12:11:47+00:00,This verification IP is in progress,0,AuringzaibSabir/uart_verification_ip,461845678,SystemVerilog,uart_verification_ip,26,1,2022-03-02 01:45:29+00:00,[],https://api.github.com/licenses/apache-2.0
116,https://github.com/mission-deny-the-mission/PIPNP.git,2022-02-22 15:16:54+00:00,Team project to emulate a GameBoy on a Zynq-7000 SoC with a ZedBoard,0,mission-deny-the-mission/PIPNP,462353981,SystemVerilog,PIPNP,13245,1,2022-06-09 05:58:16+00:00,[],None
117,https://github.com/NateFree/memory_model_tb.git,2022-01-09 06:16:18+00:00,UVM TB For Verifying Simple Memory Model,0,NateFree/memory_model_tb,446009709,SystemVerilog,memory_model_tb,10,1,2022-02-16 09:19:47+00:00,[],None
118,https://github.com/tildachoi/memmem.git,2022-01-20 05:48:51+00:00,,0,tildachoi/memmem,449971307,SystemVerilog,memmem,23,1,2022-04-18 12:55:02+00:00,[],None
119,https://github.com/davidlacayo12/davidlacayo12.git,2022-02-01 00:20:17+00:00,Config files for my GitHub profile.,0,davidlacayo12/davidlacayo12,454214180,SystemVerilog,davidlacayo12,31294,1,2023-08-30 15:05:14+00:00,"['config', 'github-config']",None
120,https://github.com/unironically/silver-scope-graphs.git,2022-02-11 01:01:19+00:00,,1,unironically/silver-scope-graphs,457999470,SystemVerilog,silver-scope-graphs,4826,1,2022-07-27 05:20:26+00:00,[],None
121,https://github.com/hbelatikar/gnn-accelerator.git,2022-02-14 18:39:12+00:00,Repo for the GNN accelerator for ECE 755 Project,0,hbelatikar/gnn-accelerator,459282554,SystemVerilog,gnn-accelerator,74526,1,2022-03-13 06:03:56+00:00,[],None
122,https://github.com/avl-bsuir/csa-2022.git,2022-02-14 07:29:56+00:00,,10,avl-bsuir/csa-2022,459058358,SystemVerilog,csa-2022,43816,1,2023-12-18 08:58:14+00:00,[],None
123,https://github.com/Markshilong/THU_ComputerOrganization_CPU.git,2022-01-15 05:06:43+00:00,Coursework of Computer Organization of Tsinghua University,0,Markshilong/THU_ComputerOrganization_CPU,448186344,SystemVerilog,THU_ComputerOrganization_CPU,23,1,2023-09-26 08:15:16+00:00,[],None
124,https://github.com/ninja3011/SPI.git,2022-02-07 18:54:49+00:00,,0,ninja3011/SPI,456636231,SystemVerilog,SPI,7,1,2022-02-10 17:11:34+00:00,[],None
125,https://github.com/usman1515/SystemVerilog-for-Design-and-Verification.git,2022-02-24 18:58:20+00:00,,0,usman1515/SystemVerilog-for-Design-and-Verification,463267555,SystemVerilog,SystemVerilog-for-Design-and-Verification,22,1,2023-03-08 13:31:44+00:00,[],None
126,https://github.com/WasabiFan/my-first-cpu.git,2022-03-01 02:29:02+00:00,"Archive of the first CPU core (and, generally, first significant digital logic design) I built. Published only for historical reference.",0,WasabiFan/my-first-cpu,464716330,SystemVerilog,my-first-cpu,58,1,2022-03-01 04:29:58+00:00,[],None
127,https://github.com/JANAKIRAMEMANI/FIFO_UVM.git,2022-01-31 05:04:47+00:00,,0,JANAKIRAMEMANI/FIFO_UVM,453885473,SystemVerilog,FIFO_UVM,21,1,2022-04-08 15:59:08+00:00,[],None
128,https://github.com/Moorvan/fifoBuffer.git,2022-02-10 02:55:15+00:00,Implementation and verification of two FIFO buffers in Chisel,0,Moorvan/fifoBuffer,457608420,SystemVerilog,fifoBuffer,140,1,2024-01-16 01:57:55+00:00,[],https://api.github.com/licenses/unlicense
129,https://github.com/imocanu/uvm_4_dv.git,2022-01-01 17:17:38+00:00,UVM library for Design Validation,0,imocanu/uvm_4_dv,443586622,SystemVerilog,uvm_4_dv,5107,1,2024-02-19 14:10:15+00:00,[],https://api.github.com/licenses/apache-2.0
130,https://github.com/royb998/044252-sim2.git,2022-01-03 09:39:51+00:00,,0,royb998/044252-sim2,444008424,SystemVerilog,044252-sim2,9,0,2022-01-17 09:10:10+00:00,[],None
131,https://github.com/VELIDIPRADEEPKUMAR/PIPELINED_FIR_FILTER.git,2022-01-02 11:31:07+00:00,,0,VELIDIPRADEEPKUMAR/PIPELINED_FIR_FILTER,443749280,SystemVerilog,PIPELINED_FIR_FILTER,140,0,2022-01-14 09:51:20+00:00,[],None
132,https://github.com/free1ze/cpu.git,2021-12-28 13:31:36+00:00,"cpu implements MIPS, with single cycle and Multi-cycle dual bus",0,free1ze/cpu,442472953,SystemVerilog,cpu,10,0,2021-12-28 13:43:24+00:00,[],None
133,https://github.com/cloudcalvin/qSVS.git,2022-01-17 10:01:28+00:00,,0,cloudcalvin/qSVS,448839838,SystemVerilog,qSVS,21,0,2022-01-17 10:01:43+00:00,[],
134,https://github.com/rjridle/Divider_Radix1.git,2022-01-18 16:21:49+00:00,Implementation of a synthesizable radix-1 integer divider in System Verilog ,0,rjridle/Divider_Radix1,449359443,SystemVerilog,Divider_Radix1,12,0,2022-01-18 16:50:27+00:00,[],https://api.github.com/licenses/mit
135,https://github.com/justinabate/memory_components.git,2022-01-11 22:23:12+00:00,HDL for memory components,0,justinabate/memory_components,446999624,SystemVerilog,memory_components,14,0,2022-01-12 05:17:36+00:00,[],None
136,https://github.com/Danil1997Dev/Lab34.git,2022-02-10 13:37:43+00:00,,0,Danil1997Dev/Lab34,457794698,SystemVerilog,Lab34,4851,0,2022-02-10 13:40:18+00:00,[],None
137,https://github.com/RehanEjaz/GPIO-on-FPGA.git,2022-02-11 16:58:56+00:00,GPIO peripheral with controller on FPGA and also a tb by which it can also be simulated,0,RehanEjaz/GPIO-on-FPGA,458270582,SystemVerilog,GPIO-on-FPGA,764,0,2022-05-01 08:02:01+00:00,[],None
138,https://github.com/IanTayler/culebra.git,2022-02-23 02:57:04+00:00,Toy CPU for the Basys3 FPGA board,0,IanTayler/culebra,462559001,SystemVerilog,culebra,87,0,2022-03-03 22:23:03+00:00,[],
139,https://github.com/Basher4/FYP-SimpleNN.git,2022-03-02 12:49:07+00:00,Simple Neural Network on an FPGA,0,Basher4/FYP-SimpleNN,465303429,SystemVerilog,FYP-SimpleNN,6,0,2022-03-02 12:51:27+00:00,[],None
140,https://github.com/bciip/gpio.git,2022-01-18 10:31:12+00:00,,0,bciip/gpio,449239834,SystemVerilog,gpio,159,0,2022-01-18 10:37:01+00:00,[],None
141,https://github.com/suzizecat/Hamster.git,2022-03-04 06:28:53+00:00,Dumb HW solar car driver,0,suzizecat/Hamster,466009118,SystemVerilog,Hamster,1558,0,2022-03-04 06:29:48+00:00,[],None
142,https://github.com/leozlt0112/computer-hardware-lab-works.git,2022-02-13 06:58:46+00:00,,0,leozlt0112/computer-hardware-lab-works,458734908,SystemVerilog,computer-hardware-lab-works,5869,0,2023-10-14 19:19:43+00:00,[],None
143,https://github.com/mmichilot/OTTER-Multicycle-Core.git,2022-02-10 19:47:02+00:00,OTTER is a multicycle RISC-V core developed by Dr. Callenes-Sloan at Cal Poly. This repository contains the OTTER core re-implemented using open-source FPGA tools,0,mmichilot/OTTER-Multicycle-Core,457924557,SystemVerilog,OTTER-Multicycle-Core,13,0,2022-03-25 03:04:18+00:00,[],None
144,https://github.com/davidlu1027/FPGA-voice-recorder.git,2022-02-23 10:36:19+00:00,,0,davidlu1027/FPGA-voice-recorder,462689143,SystemVerilog,FPGA-voice-recorder,2205,0,2022-02-23 10:43:25+00:00,[],None
145,https://github.com/Thombrom/fpga_ethernet.git,2022-01-21 17:26:33+00:00,,0,Thombrom/fpga_ethernet,450580597,SystemVerilog,fpga_ethernet,24,0,2022-01-28 21:40:48+00:00,[],https://api.github.com/licenses/mit
146,https://github.com/AlperMumcular/CS223.git,2022-01-27 22:17:25+00:00,,0,AlperMumcular/CS223,452863076,SystemVerilog,CS223,5870,0,2022-01-27 22:24:31+00:00,[],None
147,https://github.com/Danil1997Dev/Lab3new_.git,2022-01-28 15:52:12+00:00,,0,Danil1997Dev/Lab3new_,453126360,SystemVerilog,Lab3new_,3821,0,2022-01-28 15:54:34+00:00,[],None
148,https://github.com/p3da/udma_ptp_ts.git,2022-01-18 14:09:39+00:00,pulpissimo udma peripheral for ptp timestamps,0,p3da/udma_ptp_ts,449310046,SystemVerilog,udma_ptp_ts,4,0,2022-01-18 14:09:44+00:00,[],None
149,https://github.com/liel-blum/Task2_numerical.git,2022-01-03 17:39:50+00:00,,0,liel-blum/Task2_numerical,444148325,,Task2_numerical,466,0,2022-01-03 17:39:51+00:00,[],None
150,https://github.com/huynam1802/riscv_pipeline.git,2022-01-04 09:50:55+00:00,,0,huynam1802/riscv_pipeline,444365980,SystemVerilog,riscv_pipeline,7,0,2022-01-04 10:10:52+00:00,[],None
151,https://github.com/Milanotang/SV.git,2022-01-02 03:24:04+00:00,,0,Milanotang/SV,443672545,SystemVerilog,SV,9,0,2022-01-02 05:42:24+00:00,[],None
152,https://github.com/Wder4/DIFO.git,2022-01-31 09:57:24+00:00,LIFO & FIFO,0,Wder4/DIFO,453953208,SystemVerilog,DIFO,1,0,2022-02-02 09:50:33+00:00,[],None
153,https://github.com/Danil1997Dev/Lab3.git,2022-01-07 14:27:58+00:00,,0,Danil1997Dev/Lab3,445548022,SystemVerilog,Lab3,5931,0,2022-01-07 14:31:17+00:00,[],None
154,https://github.com/damlasu/FB-CPU-SystemVerilog-Testbench.git,2022-01-07 10:20:36+00:00,FB-CPU SystemVerilog Testbench,0,damlasu/FB-CPU-SystemVerilog-Testbench,445480758,SystemVerilog,FB-CPU-SystemVerilog-Testbench,7573,0,2022-01-07 10:22:27+00:00,[],None
155,https://github.com/jkk004/bitcoinhashproject.git,2021-12-29 01:19:02+00:00,,0,jkk004/bitcoinhashproject,442625911,SystemVerilog,bitcoinhashproject,11,0,2021-12-29 01:22:08+00:00,[],None
156,https://github.com/taoistmiao/intel_digital_logic_labs.git,2021-12-30 22:05:10+00:00,,0,taoistmiao/intel_digital_logic_labs,443194275,SystemVerilog,intel_digital_logic_labs,10367,0,2021-12-30 22:20:56+00:00,[],None
157,https://github.com/tharinduSamare/RISCV_processor_design.git,2022-02-09 04:20:03+00:00,This is a RISC-V 32I processor which also supports the M extension.,0,tharinduSamare/RISCV_processor_design,457205956,SystemVerilog,RISCV_processor_design,988,0,2023-05-10 17:19:54+00:00,[],None
158,https://github.com/Andrew-LTC/ECE4305Lab2.git,2022-02-08 19:07:20+00:00,,0,Andrew-LTC/ECE4305Lab2,457067834,SystemVerilog,ECE4305Lab2,501,0,2023-01-26 21:07:54+00:00,[],None
159,https://github.com/UniversityOfPlymouth-Electronics/ELEC241-C1-2022.git,2022-02-08 17:21:11+00:00,Coursework Template,8,UniversityOfPlymouth-Electronics/ELEC241-C1-2022,457032220,SystemVerilog,ELEC241-C1-2022,31,0,2022-02-09 10:54:34+00:00,[],None
160,https://github.com/baimengwei/5pS-5Yiw566A5Y6G5LiK55qE56ys5LiA5Liq.git,2022-02-08 13:06:24+00:00,我的,0,baimengwei/5pS-5Yiw566A5Y6G5LiK55qE56ys5LiA5Liq,456936164,SystemVerilog,5pS-5Yiw566A5Y6G5LiK55qE56ys5LiA5Liq,60,0,2022-02-08 13:13:04+00:00,[],None
161,https://github.com/standardloop/dualcore-mips-cpu.git,2022-02-17 23:46:34+00:00,,0,standardloop/dualcore-mips-cpu,460646227,SystemVerilog,dualcore-mips-cpu,693,0,2023-01-27 23:10:45+00:00,[],None
162,https://github.com/AyaNageh1111/PipeLine-Implementation.git,2022-02-15 16:23:51+00:00,,0,AyaNageh1111/PipeLine-Implementation,459657810,SystemVerilog,PipeLine-Implementation,9,0,2022-02-15 16:31:05+00:00,[],None
163,https://github.com/halferty/n64_dev_cart.git,2022-03-03 09:31:40+00:00,,0,halferty/n64_dev_cart,465652331,SystemVerilog,n64_dev_cart,335,0,2022-03-12 23:02:41+00:00,[],None
164,https://github.com/mahmoudabdelhadii/QuadCore-RC4-Decryption.git,2022-02-24 03:36:23+00:00,,0,mahmoudabdelhadii/QuadCore-RC4-Decryption,462996581,SystemVerilog,QuadCore-RC4-Decryption,22475,0,2022-02-24 03:38:06+00:00,[],None
165,https://github.com/Dy-Zhang39/ECE342-Computer-Hardware-Lab.git,2022-02-21 14:05:53+00:00,ECE342 lab,0,Dy-Zhang39/ECE342-Computer-Hardware-Lab,461888026,SystemVerilog,ECE342-Computer-Hardware-Lab,5992,0,2024-03-11 03:30:28+00:00,[],None
166,https://github.com/baohongzhang/System-verilog-syntax-study_minder.git,2021-12-29 02:04:47+00:00,,0,baohongzhang/System-verilog-syntax-study_minder,442634044,SystemVerilog,System-verilog-syntax-study_minder,4,0,2022-01-14 04:25:04+00:00,[],None
167,https://github.com/pabloreyesrobles/ipd432-tarea3.git,2022-01-10 04:00:31+00:00,,0,pabloreyesrobles/ipd432-tarea3,446274710,SystemVerilog,ipd432-tarea3,69,0,2022-01-11 03:08:02+00:00,[],None
168,https://github.com/Tal-Ko/Digital-Systems-Simulation3.git,2022-01-13 20:48:08+00:00,,0,Tal-Ko/Digital-Systems-Simulation3,447747768,SystemVerilog,Digital-Systems-Simulation3,9,0,2022-01-13 20:57:54+00:00,[],None
169,https://github.com/prajwaltr/Major_Project.git,2021-12-29 17:52:47+00:00,,0,prajwaltr/Major_Project,442849630,SystemVerilog,Major_Project,165,0,2022-05-08 06:22:13+00:00,[],None
170,https://github.com/belmontcomputing/rom-ctrl.git,2021-12-28 18:38:27+00:00,,0,belmontcomputing/rom-ctrl,442552893,SystemVerilog,rom-ctrl,119,0,2021-12-29 04:00:50+00:00,[],None
171,https://github.com/fhideous/verification_uing_uvm.git,2022-01-20 13:12:22+00:00,Заметки по прохождению курса,0,fhideous/verification_uing_uvm,450102912,SystemVerilog,verification_uing_uvm,48,0,2022-01-24 09:50:37+00:00,[],None
172,https://github.com/lishangqiu/WS2812BLightFPGA.git,2022-01-13 05:26:32+00:00,This is an upload of a project I did for fun back in winter of 2020. ,0,lishangqiu/WS2812BLightFPGA,447474401,SystemVerilog,WS2812BLightFPGA,64,0,2022-01-13 05:27:01+00:00,[],None
173,https://github.com/bciip/entropy_src.git,2022-01-18 10:33:09+00:00,,0,bciip/entropy_src,449240565,SystemVerilog,entropy_src,157,0,2022-01-18 10:38:54+00:00,[],None
174,https://github.com/bciip/hello_world.git,2022-01-18 10:33:20+00:00,,0,bciip/hello_world,449240631,SystemVerilog,hello_world,4,0,2022-01-18 10:39:05+00:00,[],None
175,https://github.com/IasonC/SystemVerilogCircuitDesign.git,2022-01-24 19:55:57+00:00,Digital Circuit Design with the SystemVerilog Hardware Description Language (HDL). Digital Circuits will then be synthesised on an FPGA.,0,IasonC/SystemVerilogCircuitDesign,451612211,SystemVerilog,SystemVerilogCircuitDesign,24,0,2023-01-27 10:17:45+00:00,"['systemverilog', 'hdl', 'fpga']",None
176,https://github.com/cup0noodles/CPE233.git,2022-01-26 02:30:02+00:00,Cal Poly CPE 233 OTTER MCU - Winter 2022,0,cup0noodles/CPE233,452114808,SystemVerilog,CPE233,300,0,2022-02-11 03:24:38+00:00,[],None
177,https://github.com/jvijaymahesh45/jvijaymahesh45.git,2022-02-08 00:19:55+00:00,Config files for my GitHub profile.,0,jvijaymahesh45/jvijaymahesh45,456724937,SystemVerilog,jvijaymahesh45,8,0,2023-03-30 06:57:00+00:00,"['config', 'github-config']",None
178,https://github.com/ritikaratnu111/system-verilog-examples.git,2022-02-01 01:37:51+00:00,,0,ritikaratnu111/system-verilog-examples,454228807,SystemVerilog,system-verilog-examples,3,0,2022-02-01 01:45:41+00:00,[],None
179,https://github.com/XoTaBuCh/ACS.git,2022-02-24 15:51:40+00:00,,0,XoTaBuCh/ACS,463207821,SystemVerilog,ACS,43881,0,2023-03-31 21:37:31+00:00,[],None
180,https://github.com/RialonV/Tools.git,2022-02-23 16:16:31+00:00,Different customizable tools to speed up FPGA development,0,RialonV/Tools,462812462,SystemVerilog,Tools,3,0,2022-02-23 17:43:57+00:00,[],None
181,https://github.com/jayhusemi/Cores-SweRV.git,2022-03-04 01:31:25+00:00,,0,jayhusemi/Cores-SweRV,465941977,SystemVerilog,Cores-SweRV,16123,0,2022-03-04 01:31:52+00:00,[],https://api.github.com/licenses/apache-2.0
182,https://github.com/wliu0219/UVM_FSM.git,2022-02-11 14:45:24+00:00,,0,wliu0219/UVM_FSM,458225218,SystemVerilog,UVM_FSM,6,0,2022-02-11 15:27:01+00:00,[],None
183,https://github.com/nickmaster2222/IPImport.git,2022-02-15 14:00:52+00:00,The HDL IP I've made that I regularly import,0,nickmaster2222/IPImport,459602759,SystemVerilog,IPImport,50,0,2022-02-16 22:00:03+00:00,[],None
184,https://github.com/sumedhkr95/16-bit-FIR-filter-in-SystemVerilog.git,2022-02-13 19:25:19+00:00,,0,sumedhkr95/16-bit-FIR-filter-in-SystemVerilog,458908960,SystemVerilog,16-bit-FIR-filter-in-SystemVerilog,6,0,2022-02-13 19:37:02+00:00,[],https://api.github.com/licenses/mit
185,https://github.com/Phzera/desafio_embarcados.git,2022-02-13 20:58:56+00:00,"""Projetos para começar com HDL"" propostos no Portal Embarcados ",0,Phzera/desafio_embarcados,458930142,SystemVerilog,desafio_embarcados,2216,0,2022-07-27 02:58:42+00:00,[],None
186,https://github.com/nwkrix/UVM-TLM.git,2022-01-15 03:26:24+00:00,,0,nwkrix/UVM-TLM,448170853,SystemVerilog,UVM-TLM,5,0,2022-01-15 03:27:50+00:00,[],None
187,https://github.com/ZotievaDE/prg_cdc_learning.git,2022-01-15 17:03:06+00:00,,0,ZotievaDE/prg_cdc_learning,448339403,SystemVerilog,prg_cdc_learning,3,0,2022-01-16 19:23:57+00:00,[],None
188,https://github.com/VELIDIPRADEEPKUMAR/VGA.git,2022-01-14 09:33:27+00:00,This is a vga controller acessing data from a SRAM,0,VELIDIPRADEEPKUMAR/VGA,447912972,SystemVerilog,VGA,1,0,2022-01-14 09:38:42+00:00,[],None
189,https://github.com/bciip/sysrst_ctrl.git,2022-01-18 10:32:31+00:00,,0,bciip/sysrst_ctrl,449240345,SystemVerilog,sysrst_ctrl,51,0,2022-01-18 10:38:16+00:00,[],None
190,https://github.com/timChase98/ECE6502.git,2022-01-22 16:02:54+00:00,,0,timChase98/ECE6502,450865376,SystemVerilog,ECE6502,339,0,2022-01-23 15:29:18+00:00,[],None
191,https://github.com/alxcode-x/aFIFO_UVM.git,2022-01-09 18:48:16+00:00,,0,alxcode-x/aFIFO_UVM,446174841,SystemVerilog,aFIFO_UVM,9,0,2022-01-09 22:49:08+00:00,[],None
192,https://github.com/Andreu-Lechuga/SystemVerilog-HDL.git,2022-01-01 23:27:56+00:00,AOC Tarea 4 - Ramo Aquitectura y Organizacion de Computadores,0,Andreu-Lechuga/SystemVerilog-HDL,443643466,SystemVerilog,SystemVerilog-HDL,533,0,2022-01-01 23:30:49+00:00,[],None
193,https://github.com/ashaki345/16_Bit_CPU_SV.git,2022-02-27 00:50:57+00:00,System Verilog 16-Bit CPU ,0,ashaki345/16_Bit_CPU_SV,464003277,SystemVerilog,16_Bit_CPU_SV,164,0,2022-02-27 00:56:24+00:00,[],None
194,https://github.com/alena532/AVS.git,2022-02-27 12:46:32+00:00,,0,alena532/AVS,464134419,SystemVerilog,AVS,59128,0,2022-06-19 21:09:31+00:00,[],None
195,https://github.com/Patrickshiny/systemVerilogFiles.git,2022-01-30 06:30:57+00:00,,0,Patrickshiny/systemVerilogFiles,453605868,SystemVerilog,systemVerilogFiles,108,0,2022-01-30 15:07:06+00:00,[],None
196,https://github.com/duongnghiephuy/processor1.git,2022-02-05 08:38:09+00:00,First processor in SystemVerilog,0,duongnghiephuy/processor1,455817605,SystemVerilog,processor1,35,0,2022-02-05 09:01:40+00:00,[],None
197,https://github.com/noahbean33/ECE_271_Final_Project.git,2022-02-10 00:40:26+00:00,,0,noahbean33/ECE_271_Final_Project,457577697,SystemVerilog,ECE_271_Final_Project,22610,0,2023-07-28 04:13:53+00:00,[],None
198,https://github.com/Andrew-LTC/ECE4305Lab4.git,2022-02-20 01:56:59+00:00,,0,Andrew-LTC/ECE4305Lab4,461359783,SystemVerilog,ECE4305Lab4,912,0,2023-01-26 21:09:03+00:00,[],None
199,https://github.com/sam2468sam/VLSI.git,2022-02-14 04:14:38+00:00,,0,sam2468sam/VLSI,459012418,SystemVerilog,VLSI,1814,0,2022-02-14 04:28:03+00:00,[],None
200,https://github.com/CarlosChen1126/NTUEE_DCLAB.git,2022-02-22 06:10:12+00:00,,0,CarlosChen1126/NTUEE_DCLAB,462162741,SystemVerilog,NTUEE_DCLAB,26,0,2022-03-22 02:16:19+00:00,[],None
201,https://github.com/mahdi-moradmand/Logic.git,2022-02-23 18:26:54+00:00,,0,mahdi-moradmand/Logic,462858071,SystemVerilog,Logic,690,0,2022-02-23 18:27:12+00:00,[],https://api.github.com/licenses/apache-2.0
202,https://github.com/skudlur/sysverilog.git,2022-02-23 14:49:24+00:00,Just a compilation of all the SystemVerilog code I have written in the past year.,0,skudlur/sysverilog,462778079,SystemVerilog,sysverilog,13,0,2022-02-23 14:50:40+00:00,[],None
203,https://github.com/phamquanganhBKSET/edabk_uart_transceiver.git,2022-02-23 16:30:48+00:00,UART transceiver,0,phamquanganhBKSET/edabk_uart_transceiver,462817751,SystemVerilog,edabk_uart_transceiver,475,0,2022-08-15 07:41:18+00:00,[],None
204,https://github.com/kenezoer/soc_programming.git,2022-02-03 08:03:03+00:00,"Lab. course ""Development of a SoC with programming architecture""",0,kenezoer/soc_programming,455077588,SystemVerilog,soc_programming,28853,0,2023-09-14 14:18:38+00:00,[],https://api.github.com/licenses/mit
205,https://github.com/alihusain01/lab5-week2-ECE385.git,2022-02-25 03:02:57+00:00,,0,alihusain01/lab5-week2-ECE385,463377973,SystemVerilog,lab5-week2-ECE385,11862,0,2022-02-25 04:59:55+00:00,[],None
206,https://github.com/swisstackle/alucontrol.git,2022-01-04 09:24:36+00:00,"Implements instruction split, opcode and alucontrol codes generation.",0,swisstackle/alucontrol,444358234,SystemVerilog,alucontrol,6,0,2023-03-12 21:45:01+00:00,"['systemverilog', 'vhdl', 'mips', 'architecture', 'cpu']",https://api.github.com/licenses/unlicense
207,https://github.com/gsingla21/systemverilog.git,2022-01-23 05:10:14+00:00,,0,gsingla21/systemverilog,451010084,SystemVerilog,systemverilog,22,0,2022-01-23 07:25:41+00:00,[],None
208,https://github.com/bciip/prim_generic.git,2022-01-20 11:57:49+00:00,,0,bciip/prim_generic,450078538,SystemVerilog,prim_generic,22,0,2022-01-20 12:00:49+00:00,[],None
209,https://github.com/itayt23/Sifratiyot_3.git,2022-01-19 21:00:10+00:00,simulation 3 in DIgital and computer structures,0,itayt23/Sifratiyot_3,449853703,SystemVerilog,Sifratiyot_3,6,0,2022-01-19 21:01:53+00:00,[],None
210,https://github.com/Amagicman/uvm_verify_exercise.git,2022-01-17 15:44:08+00:00,Function verification of interrupt managment module using UVM method.,0,Amagicman/uvm_verify_exercise,448953475,,uvm_verify_exercise,86,0,2021-07-25 00:54:11+00:00,[],https://api.github.com/licenses/apache-2.0
211,https://github.com/bciip/pwrmgr.git,2022-01-18 10:33:47+00:00,,0,bciip/pwrmgr,449240767,SystemVerilog,pwrmgr,93,0,2022-01-18 10:39:30+00:00,[],None
212,https://github.com/bciip/tlul.git,2022-01-18 10:34:11+00:00,,0,bciip/tlul,449240904,SystemVerilog,tlul,142,0,2022-01-18 10:39:58+00:00,[],None
213,https://github.com/bciip/rv_core_ibex.git,2022-01-18 10:41:59+00:00,,0,bciip/rv_core_ibex,449243271,SystemVerilog,rv_core_ibex,17,0,2022-01-18 10:42:34+00:00,[],None
214,https://github.com/lconti9/Snake.git,2022-02-01 04:56:00+00:00,Snake Game made in Xilinx for Basys 3 Board,0,lconti9/Snake,454266294,SystemVerilog,Snake,10438,0,2022-02-01 04:56:58+00:00,[],None
215,https://github.com/allab17/ece212_labell_borek.git,2022-02-14 02:34:06+00:00,This repo consists of ECE 212 labs.,0,allab17/ece212_labell_borek,458991394,SystemVerilog,ece212_labell_borek,2835,0,2022-04-06 22:02:24+00:00,[],None
216,https://github.com/Willian-Nunes/Async-RISCV.git,2022-01-31 17:05:16+00:00,,1,Willian-Nunes/Async-RISCV,454095314,SystemVerilog,Async-RISCV,45,0,2022-01-31 17:23:19+00:00,[],None
217,https://github.com/feiyuy/Chip_Verify.git,2022-02-09 05:32:57+00:00,,0,feiyuy/Chip_Verify,457222345,SystemVerilog,Chip_Verify,10,0,2022-02-09 07:16:49+00:00,[],None
218,https://github.com/ThunderChief33/remote_control_car_project.git,2022-02-15 00:47:31+00:00,,0,ThunderChief33/remote_control_car_project,459376356,SystemVerilog,remote_control_car_project,22611,0,2022-02-15 00:51:39+00:00,[],None
219,https://github.com/Ninjacreepiamus/Interview-Questions.git,2022-02-15 03:34:26+00:00,Practice for technical interview questions that may be asked on an interview for Firmware Engineering roles.,0,Ninjacreepiamus/Interview-Questions,459414782,SystemVerilog,Interview-Questions,23,0,2022-02-15 03:40:16+00:00,[],None
220,https://github.com/TimothyJC7/FPGA-Projects.git,2022-02-22 05:00:19+00:00,My FPGA Projects written in verilog/system verilog,0,TimothyJC7/FPGA-Projects,462145012,SystemVerilog,FPGA-Projects,3739,0,2022-02-22 05:19:49+00:00,[],None
221,https://github.com/map32/ece251-final.git,2022-03-03 19:53:15+00:00,,0,map32/ece251-final,465864276,SystemVerilog,ece251-final,32,0,2022-04-24 21:41:08+00:00,[],None
222,https://github.com/belmontcomputing/uart.git,2021-12-29 06:00:37+00:00,,0,belmontcomputing/uart,442675626,SystemVerilog,uart,158,0,2021-12-29 06:02:21+00:00,[],None
223,https://github.com/aryatyagi14/FPGA-Multiplier.git,2022-02-18 23:40:12+00:00,I created an 8 bit multiplier on Quartus using SystemVerilog. The output is displayed in HEX on the LEDs of the FPGA. ,0,aryatyagi14/FPGA-Multiplier,461038235,SystemVerilog,FPGA-Multiplier,4,0,2022-02-18 23:42:42+00:00,[],None
224,https://github.com/kosmalex/OLED_controller.git,2022-02-17 12:34:35+00:00,Write compile and run psudo instructions to draw with pmodOLED,0,kosmalex/OLED_controller,460428192,SystemVerilog,OLED_controller,79,0,2022-02-17 12:34:41+00:00,[],https://api.github.com/licenses/apache-2.0
225,https://github.com/c3bo/uvm_quick_tips.git,2022-01-11 02:38:49+00:00,,0,c3bo/uvm_quick_tips,446653560,SystemVerilog,uvm_quick_tips,0,0,2022-01-11 03:51:13+00:00,[],None
226,https://github.com/mmalinowsky/risc-v.git,2022-01-04 21:08:25+00:00,Opensource RISC-V implementation of one stage and multistage piplined RV32I processor,0,mmalinowsky/risc-v,444563780,SystemVerilog,risc-v,8,0,2022-01-05 01:09:53+00:00,[],None
227,https://github.com/bloodyrun/arbiter.git,2022-02-10 05:25:22+00:00,Round-robin Arbiter,0,bloodyrun/arbiter,457642292,SystemVerilog,arbiter,13,0,2022-02-10 05:30:26+00:00,[],None
228,https://github.com/jbates35/elex7660_lab5.git,2022-02-06 07:50:29+00:00,,0,jbates35/elex7660_lab5,456088373,SystemVerilog,elex7660_lab5,5,0,2022-02-06 07:51:45+00:00,[],None
229,https://github.com/westonMS/array_test.git,2022-02-09 02:14:13+00:00,,0,westonMS/array_test,457176109,SystemVerilog,array_test,0,0,2022-02-09 02:16:42+00:00,[],None
230,https://github.com/tomkuzma/7660_Assign2.git,2022-02-11 17:21:39+00:00,ELEX 7660 - Assignment 2: Sequence Detector and Vending Machine SystemVerilog,0,tomkuzma/7660_Assign2,458277673,SystemVerilog,7660_Assign2,2,0,2022-02-12 19:03:17+00:00,[],None
231,https://github.com/ishraqtashdid/UART.git,2022-02-05 06:07:16+00:00,A basic UART module design using systemverilog which sends 8 bit data from a master transmitter to a slave receiver.,0,ishraqtashdid/UART,455790557,SystemVerilog,UART,1218,0,2022-02-05 06:09:40+00:00,[],None
232,https://github.com/bltblt/hw4.git,2022-02-02 15:15:38+00:00,,0,bltblt/hw4,454824642,SystemVerilog,hw4,7,0,2022-02-02 15:16:01+00:00,[],None
233,https://github.com/el17ak/fetal_ecg.git,2022-02-03 02:27:45+00:00,SystemVerilog code for Fetal ECG MEng project developed for a DE0-Nano development board.,0,el17ak/fetal_ecg,455005173,SystemVerilog,fetal_ecg,662,0,2022-05-10 19:22:50+00:00,[],None
234,https://github.com/XiaoqingShi22/Some-UVM-components-testcases.git,2022-02-26 09:54:45+00:00,,0,XiaoqingShi22/Some-UVM-components-testcases,463814427,SystemVerilog,Some-UVM-components-testcases,6,0,2022-02-26 12:47:28+00:00,[],None
235,https://github.com/mfkiwl/SweRV_FPGA.git,2022-01-20 18:22:56+00:00,SweRV FPGA design of Vivado,0,mfkiwl/SweRV_FPGA,450211120,,SweRV_FPGA,53146,0,2022-11-11 20:00:12+00:00,[],None
236,https://github.com/danielmergy/AsyncFIFO.git,2022-01-15 20:27:13+00:00,Asynchronous FIFO,0,danielmergy/AsyncFIFO,448383463,SystemVerilog,AsyncFIFO,4,0,2022-01-15 20:36:55+00:00,[],None
237,https://github.com/TurinSadia/EEE-Projects.git,2022-01-23 15:39:09+00:00,,0,TurinSadia/EEE-Projects,451149116,SystemVerilog,EEE-Projects,13960,0,2024-03-05 17:09:34+00:00,[],None
238,https://github.com/jerryWaldorfIII/Traffic-Light-Hardware-Design.git,2021-12-27 02:04:22+00:00,Hardware Implementation of a Traffic Light System using SystemVerilog,0,jerryWaldorfIII/Traffic-Light-Hardware-Design,442025235,SystemVerilog,Traffic-Light-Hardware-Design,1766,0,2021-12-27 02:32:04+00:00,[],None
239,https://github.com/Areebkhan02/Designing-Adder-Subtractor.git,2022-01-07 10:23:55+00:00,"A system that is capable of adding and subtracting two 3-bit binary numbers, A and B. The system accepts A, B, and an operator bit, O, which can either be 0 or 1, as input. If the bit O is 0 then the system adds A and B, and when O is 1 it subtracts B from A. In either case, the circuit generates the appropriate signals for seven-segment display to show the result of addition or subtraction as a hexadecimal digit. If the result is negative then the dp light of seven segment display is used to indicate that the displayed number is a negative number.",0,Areebkhan02/Designing-Adder-Subtractor,445481631,SystemVerilog,Designing-Adder-Subtractor,7,0,2022-01-07 10:45:07+00:00,[],None
240,https://github.com/jessepalomera/uart_design.git,2022-01-17 06:54:46+00:00,,0,jessepalomera/uart_design,448784835,SystemVerilog,uart_design,230,0,2022-01-17 06:58:58+00:00,[],None
241,https://github.com/crlarsen/cvtdw.git,2022-01-27 17:12:51+00:00,Implement MIPS cvt.d.w instruction.,0,crlarsen/cvtdw,452773648,SystemVerilog,cvtdw,3,0,2022-01-27 17:48:43+00:00,[],None
242,https://github.com/xuan-415/verilog.git,2022-01-24 10:50:39+00:00,,0,xuan-415/verilog,451425232,SystemVerilog,verilog,1962,0,2022-01-24 10:54:49+00:00,[],https://api.github.com/licenses/mit
243,https://github.com/KameronJonasson1/modified-Harvard-architecture-verilog-microprocessor.git,2021-12-30 20:15:16+00:00,"Modified Harvard architecture microprocessor with 4-bit data path and 8-bit instruction, ISA included.",0,KameronJonasson1/modified-Harvard-architecture-verilog-microprocessor,443175777,SystemVerilog,modified-Harvard-architecture-verilog-microprocessor,14,0,2021-12-31 00:00:10+00:00,[],None
244,https://github.com/briandallaire/portfolio.git,2021-12-30 09:42:05+00:00,My Coding Portfolio,0,briandallaire/portfolio,443031062,SystemVerilog,portfolio,7120,0,2022-05-03 10:06:19+00:00,"['c', 'cpp', 'embedded-c', 'java', 'python', 'systemverilog-hdl', 'verilog-hdl']",None
245,https://github.com/JessmanJhutty/RC4.git,2022-01-03 22:50:55+00:00,,0,JessmanJhutty/RC4,444221027,SystemVerilog,RC4,13,0,2022-01-05 22:14:32+00:00,[],None
246,https://github.com/tfiwm/uvm_snippets.git,2022-01-03 00:42:39+00:00,Various UVM examples,0,tfiwm/uvm_snippets,443902952,SystemVerilog,uvm_snippets,1,0,2022-01-03 00:47:28+00:00,[],None
247,https://github.com/soukalin96/SystemVerilog.git,2022-01-13 13:45:43+00:00,Drive for my verilog practice files,0,soukalin96/SystemVerilog,447615420,SystemVerilog,SystemVerilog,638,0,2022-02-22 05:18:18+00:00,"['config', 'github-config']",None
248,https://github.com/VSHEV92/Linear_Downsampler.git,2022-02-09 14:42:37+00:00,Дробный понижающий передискретизатор с линейной интерполяцией,0,VSHEV92/Linear_Downsampler,457398192,SystemVerilog,Linear_Downsampler,17,0,2022-02-11 11:50:16+00:00,[],None
249,https://github.com/jared12222/eecs570_final.git,2022-02-24 15:03:28+00:00,,1,jared12222/eecs570_final,463191389,SystemVerilog,eecs570_final,11221,0,2022-03-24 00:43:45+00:00,[],None
250,https://github.com/DilayYigit/Computer_Architecture.git,2022-02-06 20:59:59+00:00,,0,DilayYigit/Computer_Architecture,456271082,SystemVerilog,Computer_Architecture,21,0,2022-02-06 21:02:36+00:00,[],None
251,https://github.com/cwarv/basic_designs.git,2022-02-05 10:08:55+00:00,Basic digital circuit designs for learning/teaching.,0,cwarv/basic_designs,455834963,SystemVerilog,basic_designs,6,0,2022-02-05 10:11:30+00:00,[],https://api.github.com/licenses/cc0-1.0
252,https://github.com/absolutezeroooo/TEST.git,2022-01-31 08:17:46+00:00,,0,absolutezeroooo/TEST,453926410,SystemVerilog,TEST,14890,0,2022-01-31 08:20:28+00:00,[],None
253,https://github.com/ago-cs/fpga-zero-stopwatch-game.git,2022-02-19 16:37:25+00:00,FPGA ZeroStopwatch game written for learning (for DE10-Lite board),0,ago-cs/fpga-zero-stopwatch-game,461250216,SystemVerilog,fpga-zero-stopwatch-game,442,0,2022-03-21 06:46:26+00:00,[],None
254,https://github.com/yang-fubing/Asafarr-MIPSCPU-design.git,2022-02-23 03:26:01+00:00,2021“龙芯杯”全国优胜奖,0,yang-fubing/Asafarr-MIPSCPU-design,462566321,SystemVerilog,Asafarr-MIPSCPU-design,379,0,2022-02-24 10:27:03+00:00,[],None
255,https://github.com/VSHEV92/QAM_PLL_Model.git,2022-02-21 08:22:48+00:00,Демонстрация трансляции Simulink модели с помощью MATLAB HDL Verifier и DPI в эталонную модель для HDL верификации на примере системы частотной синхронизации для QAM-16 сигналов.,0,VSHEV92/QAM_PLL_Model,461767134,SystemVerilog,QAM_PLL_Model,185,0,2022-02-21 08:24:23+00:00,[],None
256,https://github.com/Dhatsme/all_projects.git,2022-02-21 11:40:31+00:00,,0,Dhatsme/all_projects,461834711,SystemVerilog,all_projects,102,0,2022-02-22 04:00:51+00:00,[],None
257,https://github.com/florylsk/opentitanTFG.git,2022-02-15 06:09:21+00:00,,0,florylsk/opentitanTFG,459450272,SystemVerilog,opentitanTFG,77001,0,2022-09-07 17:21:04+00:00,[],https://api.github.com/licenses/apache-2.0
258,https://github.com/NikolaosGian/hardware_digital_systems_II.git,2022-03-03 12:58:56+00:00,An application using Qeusta FPGA student version of Intel,0,NikolaosGian/hardware_digital_systems_II,465719823,SystemVerilog,hardware_digital_systems_II,3810,0,2022-08-03 06:11:40+00:00,"['lite', 'intel', 'questa']",None
259,https://github.com/JoyceLCH/VGA_ROM.git,2022-03-03 13:27:07+00:00,,0,JoyceLCH/VGA_ROM,465729860,SystemVerilog,VGA_ROM,64,0,2022-03-03 13:51:09+00:00,[],None
260,https://github.com/krasus00/trail_task.git,2022-02-28 01:26:48+00:00,,0,krasus00/trail_task,464299834,SystemVerilog,trail_task,410,0,2022-02-28 01:29:09+00:00,[],None
261,https://github.com/bciip/otp_ctrl.git,2022-01-18 10:29:50+00:00,,0,bciip/otp_ctrl,449239383,SystemVerilog,otp_ctrl,475,0,2022-01-18 10:35:46+00:00,[],None
262,https://github.com/abhjha1997/PLL_RVMYTH-Interface-.git,2022-01-16 13:14:35+00:00,,0,abhjha1997/PLL_RVMYTH-Interface-,448558751,SystemVerilog,PLL_RVMYTH-Interface-,66,0,2022-03-23 06:19:53+00:00,[],None
263,https://github.com/BowmanChow/NeuralNetworkAccelerator.git,2022-01-16 13:55:27+00:00,,0,BowmanChow/NeuralNetworkAccelerator,448569162,SystemVerilog,NeuralNetworkAccelerator,22,0,2022-04-06 08:30:13+00:00,[],None
264,https://github.com/jas-soh/EE469Lab.git,2022-02-04 20:01:27+00:00,,0,jas-soh/EE469Lab,455680231,SystemVerilog,EE469Lab,40427,0,2022-03-01 21:31:39+00:00,[],None
265,https://github.com/wei-tianyu/five-stage-pipeline.git,2022-02-04 20:31:41+00:00,,0,wei-tianyu/five-stage-pipeline,455688090,SystemVerilog,five-stage-pipeline,200,0,2022-10-11 18:14:00+00:00,[],None
266,https://github.com/ondanieldev/ufmg-isl.git,2022-02-14 05:27:16+00:00,,0,ondanieldev/ufmg-isl,459027872,SystemVerilog,ufmg-isl,68,0,2022-02-21 18:08:37+00:00,[],None
267,https://github.com/FreshVerifier/myproject.git,2022-02-13 11:01:54+00:00,个人代码,0,FreshVerifier/myproject,458783447,SystemVerilog,myproject,78,0,2022-02-13 11:05:15+00:00,[],None
268,https://github.com/22anushka/Hardware-based-locking-system.git,2022-02-20 11:38:05+00:00,,0,22anushka/Hardware-based-locking-system,461468783,SystemVerilog,Hardware-based-locking-system,3,0,2022-02-20 12:08:26+00:00,[],None
269,https://github.com/charkster/cmod_a7-uart_block_ram.git,2022-02-10 01:54:48+00:00,The FT2232H on the CMOD-A7 is used to drive UART data to read/write to a register map implemented in block ram.,0,charkster/cmod_a7-uart_block_ram,457594141,SystemVerilog,cmod_a7-uart_block_ram,20,0,2022-02-10 02:08:42+00:00,"['uart', 'ft2232h', 'cmod-a7']",https://api.github.com/licenses/mit
270,https://github.com/wiszeto/lab-5.git,2022-02-09 23:50:53+00:00,,1,wiszeto/lab-5,457567191,SystemVerilog,lab-5,62,0,2022-02-11 22:17:29+00:00,[],None
271,https://github.com/aromaproject05/aromaproject05.git,2022-02-16 13:24:53+00:00,Config files for my GitHub profile.,1,aromaproject05/aromaproject05,460014529,SystemVerilog,aromaproject05,31,0,2022-02-18 15:31:21+00:00,"['config', 'github-config']",None
272,https://github.com/rondarchik/csa-2022.git,2022-02-22 16:52:47+00:00,,0,rondarchik/csa-2022,462390858,SystemVerilog,csa-2022,73122,0,2022-12-05 23:58:18+00:00,[],None
273,https://github.com/Jenkins047/SPI_PROJECT.git,2022-01-29 13:20:42+00:00,,0,Jenkins047/SPI_PROJECT,453403695,SystemVerilog,SPI_PROJECT,2909,0,2022-01-29 13:22:21+00:00,[],None
274,https://github.com/vinocastello/CS-21-2021-2022-Proj2.git,2022-01-31 01:37:18+00:00,MIPS Single Cycle Processor Extension with SystemVerilog,0,vinocastello/CS-21-2021-2022-Proj2,453849379,SystemVerilog,CS-21-2021-2022-Proj2,658,0,2022-01-31 01:39:03+00:00,[],None
275,https://github.com/Arnav-M/Verilog-Projects.git,2022-02-07 19:09:00+00:00,"CSE 271, CSE 371, CSE 469 Projects programmed using Verilog",0,Arnav-M/Verilog-Projects,456640938,SystemVerilog,Verilog-Projects,51,0,2023-01-31 19:31:58+00:00,[],None
276,https://github.com/wuruochen9/FPGA-Game-WHACK-A-MOLE-PRO.git,2022-01-05 11:58:19+00:00,A SPECIAL WHACK A MOLE WRITTEN IN FPGA,0,wuruochen9/FPGA-Game-WHACK-A-MOLE-PRO,444786870,SystemVerilog,FPGA-Game-WHACK-A-MOLE-PRO,197,0,2024-03-19 01:37:58+00:00,[],None
277,https://github.com/erfanbsoula/32b-MC-Processor.git,2022-01-15 21:07:43+00:00,32-bit Multi Cycle Processor (Computer Architecture Course),0,erfanbsoula/32b-MC-Processor,448391267,SystemVerilog,32b-MC-Processor,7,0,2022-01-15 21:09:20+00:00,[],None
278,https://github.com/carvalhosamuel/LibGE-Experiments.git,2022-01-10 13:43:32+00:00,,0,carvalhosamuel/LibGE-Experiments,446439657,SystemVerilog,LibGE-Experiments,26783,0,2022-01-10 15:01:03+00:00,[],None
279,https://github.com/natesherman01/Fidget-Toy.git,2021-12-30 19:35:22+00:00,"This was the final project for CPE 133 Digital Design in which my partner and I designed a visual fidget toy on a Basys 3 Board. An extensive user manual can be found in the files under the name ""Visual Fidget Toy.pdf""",0,natesherman01/Fidget-Toy,443168354,SystemVerilog,Fidget-Toy,9778,0,2022-01-03 01:08:57+00:00,[],None
280,https://github.com/ZRookk/computerArch.git,2022-01-17 20:20:34+00:00,Computer Architecture Lab 1 ,0,ZRookk/computerArch,449037244,SystemVerilog,computerArch,10,0,2022-01-17 20:25:28+00:00,[],None
281,https://github.com/shiranDapht/sim2.git,2022-01-14 12:58:27+00:00,,0,shiranDapht/sim2,447968255,SystemVerilog,sim2,3503,0,2022-01-15 12:09:21+00:00,[],None
282,https://github.com/ZZZggy/verif.clipper.git,2022-01-21 08:19:52+00:00,,0,ZZZggy/verif.clipper,450409148,,verif.clipper,532,0,2022-01-21 15:50:49+00:00,[],None
283,https://github.com/yonib98/Sim3.git,2022-01-18 11:40:03+00:00,,0,yonib98/Sim3,449260760,SystemVerilog,Sim3,594,0,2022-01-18 11:43:32+00:00,[],None
284,https://github.com/ArtemBaben/demo.git,2022-01-29 20:47:25+00:00,GitHub Desktop tutorial repository,0,ArtemBaben/demo,453514774,SystemVerilog,demo,36,0,2022-07-19 08:09:59+00:00,[],None
285,https://github.com/danodus/xglib.git,2022-01-27 21:22:42+00:00,,0,danodus/xglib,452849221,SystemVerilog,xglib,117,0,2022-05-19 11:22:44+00:00,[],https://api.github.com/licenses/mit
286,https://github.com/jbates35/elex7660_asgn2.git,2022-02-13 02:57:28+00:00,Assignment 2 for ELEX7660,0,jbates35/elex7660_asgn2,458694109,SystemVerilog,elex7660_asgn2,7,0,2022-02-13 02:58:26+00:00,[],None
287,https://github.com/SeanFu777/Trivial.git,2022-02-12 08:13:52+00:00,,0,SeanFu777/Trivial,458461099,,Trivial,548,0,2022-05-18 06:15:50+00:00,[],None
288,https://github.com/litex-hub/pythondata-cpu-cv32e40x.git,2022-02-12 19:05:11+00:00,Python module containing system_verilog files for cv32e40x cpu (for use with LiteX).,0,litex-hub/pythondata-cpu-cv32e40x,458614274,SystemVerilog,pythondata-cpu-cv32e40x,9227,0,2022-05-26 16:52:13+00:00,[],https://api.github.com/licenses/apache-2.0
289,https://github.com/GuFangYi/VLSI.git,2022-02-15 07:01:10+00:00,,0,GuFangYi/VLSI,459464496,SystemVerilog,VLSI,3853,0,2022-02-15 09:20:16+00:00,[],None
290,https://github.com/Andrew-LTC/ECE4305Lab5.git,2022-02-26 01:00:28+00:00,,0,Andrew-LTC/ECE4305Lab5,463718626,SystemVerilog,ECE4305Lab5,62,0,2023-01-26 21:09:55+00:00,[],None
291,https://github.com/lazarvulic99/SystemVerilog-Verification---Register-functionalities.git,2022-02-15 22:44:57+00:00,Simple register realisation for SystemVerilog Verification,0,lazarvulic99/SystemVerilog-Verification---Register-functionalities,459774539,SystemVerilog,SystemVerilog-Verification---Register-functionalities,1729,0,2022-02-16 16:12:35+00:00,"['systemverilog', 'vscode', 'quartus', 'altera', 'modelsim', 'questasim']",None
292,https://github.com/albingomes/aes.git,2022-02-16 04:26:49+00:00,,0,albingomes/aes,459851401,SystemVerilog,aes,14,0,2022-03-11 03:42:50+00:00,[],None
293,https://github.com/anhhao135/ECE-111.git,2022-02-16 06:27:01+00:00,,0,anhhao135/ECE-111,459879687,SystemVerilog,ECE-111,55911,0,2022-02-16 06:31:50+00:00,[],None
294,https://github.com/AntonyGeorgiadis/SystemVerilog.git,2022-02-19 07:01:53+00:00,Random sum of projects from University in System Verilog ,0,AntonyGeorgiadis/SystemVerilog,461113613,SystemVerilog,SystemVerilog,4,0,2022-02-19 07:02:51+00:00,[],None
295,https://github.com/retrorepair/NES_MiSTer_YC.git,2022-02-05 16:47:46+00:00,MiSTerFPGA - NTSC Encoder - S-Video / Composite Output,0,retrorepair/NES_MiSTer_YC,455927371,,NES_MiSTer_YC,63584,0,2022-02-05 16:46:24+00:00,[],https://api.github.com/licenses/mit
296,https://github.com/RehanEjaz/Quiz-show-logic.git,2022-02-03 19:48:37+00:00,Verilog logic for Quiz show scenario,0,RehanEjaz/Quiz-show-logic,455305998,SystemVerilog,Quiz-show-logic,118,0,2022-05-01 07:59:20+00:00,[],None
297,https://github.com/de1ukc/System_verilog_university_projects.git,2022-02-27 09:27:05+00:00,,0,de1ukc/System_verilog_university_projects,464091348,SystemVerilog,System_verilog_university_projects,62196,0,2022-11-23 20:32:49+00:00,[],None
298,https://github.com/DilayYigit/Digital_Design.git,2022-02-06 20:19:49+00:00,,0,DilayYigit/Digital_Design,456262245,SystemVerilog,Digital_Design,14,0,2022-02-06 20:24:34+00:00,[],None
299,https://github.com/smmzhang/vector_chip_1000.git,2022-01-18 03:15:04+00:00,A vector architecture project enhanced by custom operating system for parallel processing.,0,smmzhang/vector_chip_1000,449124569,,vector_chip_1000,11795,0,2023-11-12 13:11:14+00:00,[],None
300,https://github.com/leavesinenglish/Digital-Circuitry-and-Computer-System-Architecture.git,2022-02-16 09:09:09+00:00,"Курс ""Цифровая схемотехника"", 2 курс ФФ НГУ, отделение физической информатики",0,leavesinenglish/Digital-Circuitry-and-Computer-System-Architecture,459928365,SystemVerilog,Digital-Circuitry-and-Computer-System-Architecture,2,0,2023-07-09 13:13:30+00:00,[],None
301,https://github.com/vadinamo/csa-2022.git,2022-02-20 08:35:40+00:00,,0,vadinamo/csa-2022,461428834,SystemVerilog,csa-2022,55485,0,2022-10-30 18:52:36+00:00,[],None
302,https://github.com/bciip/flash_ctrl.git,2022-01-18 10:29:37+00:00,,0,bciip/flash_ctrl,449239314,SystemVerilog,flash_ctrl,309,0,2022-01-18 10:35:31+00:00,[],None
303,https://github.com/stavrospc/swerv-app.git,2022-01-16 21:28:37+00:00,,0,stavrospc/swerv-app,448677498,SystemVerilog,swerv-app,25,0,2022-10-03 12:33:41+00:00,['hacktoberfest'],None
304,https://github.com/Mindar/AS2201.git,2022-01-22 22:29:07+00:00,ASIC submission for the Google/Skywater OpenMPW-5 shuttle,0,Mindar/AS2201,450950674,SystemVerilog,AS2201,199,0,2022-01-22 22:29:51+00:00,[],
305,https://github.com/Coding-Virus/School.git,2022-01-14 19:34:01+00:00,4243,0,Coding-Virus/School,448085805,SystemVerilog,School,1436,0,2022-04-01 18:41:07+00:00,[],None
306,https://github.com/vickyfyq/ece437.git,2022-01-14 18:38:00+00:00,,0,vickyfyq/ece437,448071566,SystemVerilog,ece437,8777,0,2022-09-21 16:32:40+00:00,[],None
307,https://github.com/ZerunYin/asic_design_module.git,2022-02-24 16:59:46+00:00,,0,ZerunYin/asic_design_module,463230036,SystemVerilog,asic_design_module,10,0,2022-02-24 17:13:34+00:00,[],None
308,https://github.com/sivajeet/NLP-Swedish-English.git,2022-02-23 22:30:47+00:00,Implementation of IBM Model 1 to translate from Swedish to English. The dataset contains a number of sentence-aligned parallel texts taken from the European Parliament proceedings. ,0,sivajeet/NLP-Swedish-English,462927456,SystemVerilog,NLP-Swedish-English,3811,0,2022-02-23 22:31:44+00:00,[],None
309,https://github.com/zhewen404/util.git,2022-02-25 21:03:49+00:00,,0,zhewen404/util,463674992,SystemVerilog,util,0,0,2022-02-25 21:11:44+00:00,[],None
310,https://github.com/Rodina222/Stopwatch-Project.git,2022-02-13 10:41:41+00:00,"Create a stopwatch that can count (up and down) within the range of one hour, i.e., from 00:00 [min:sec] to 59:59 [min:sec]. It has four tactile switches as follows: One switch for starting and stopping the count operation.One for toggling between the count up and count down modes.One  for resetting the count.One  for setting the time for countdown",0,Rodina222/Stopwatch-Project,458778971,SystemVerilog,Stopwatch-Project,3388,0,2022-10-08 11:49:34+00:00,[],None
311,https://github.com/XuMinglei1221/dv_learning.git,2022-01-20 15:25:51+00:00,dv learning process record of myself,0,XuMinglei1221/dv_learning,450150911,SystemVerilog,dv_learning,8,0,2022-01-20 15:32:29+00:00,[],None
312,https://github.com/bciip/prim_xilinx.git,2022-01-20 11:57:32+00:00,,0,bciip/prim_xilinx,450078436,SystemVerilog,prim_xilinx,6,0,2022-01-20 12:00:40+00:00,[],None
313,https://github.com/Danil1997Dev/Lab3new.git,2022-01-29 14:04:08+00:00,,0,Danil1997Dev/Lab3new,453414792,SystemVerilog,Lab3new,4064,0,2022-01-29 14:06:45+00:00,[],None
314,https://github.com/kotatsuyaki/fpga-gomoku-ui.git,2022-01-06 07:15:09+00:00,,0,kotatsuyaki/fpga-gomoku-ui,445076848,SystemVerilog,fpga-gomoku-ui,26,0,2023-01-28 02:06:37+00:00,[],None
315,https://github.com/berksaltuk/CS223_Lab_Solutions.git,2022-02-12 13:54:13+00:00,CS223 - Digital Design Lab Solutions - Bilkent Fall 2020,0,berksaltuk/CS223_Lab_Solutions,458535929,SystemVerilog,CS223_Lab_Solutions,2566,0,2022-02-23 19:12:17+00:00,[],None
316,https://github.com/vanessa2213/ComputerArchitecture.git,2022-01-25 19:22:01+00:00,"Upon completion of this course, I am able to design the components of a processor, including concepts such as CISC, RISC, pipeline, performance metrics, memory subsystem design and input/output subsystem design.",0,vanessa2213/ComputerArchitecture,452012018,SystemVerilog,ComputerArchitecture,837,0,2022-01-25 21:33:52+00:00,[],None
317,https://github.com/crgrace/psd_chip_v2.git,2022-02-09 21:50:17+00:00,,0,crgrace/psd_chip_v2,457540113,SystemVerilog,psd_chip_v2,47,0,2022-02-10 18:57:37+00:00,[],None
318,https://github.com/sinadarbouy/NLP-Swedish-English.git,2022-02-10 12:28:01+00:00,,0,sinadarbouy/NLP-Swedish-English,457771097,SystemVerilog,NLP-Swedish-English,2720,0,2022-02-13 20:54:35+00:00,[],None
319,https://github.com/jc123488/E_ICC2020_prelimily_univ_cell-based.git,2022-03-03 07:47:17+00:00,,0,jc123488/E_ICC2020_prelimily_univ_cell-based,465618834,SystemVerilog,E_ICC2020_prelimily_univ_cell-based,50,0,2023-09-07 06:21:10+00:00,[],None
320,https://github.com/AlejandroM2000/CPU.git,2022-02-04 07:44:35+00:00,,1,AlejandroM2000/CPU,455461748,SystemVerilog,CPU,525,0,2022-02-09 07:32:41+00:00,[],None
321,https://github.com/dovuthanhhien1609/RiscV32.git,2022-01-04 09:56:10+00:00,,0,dovuthanhhien1609/RiscV32,444367473,SystemVerilog,RiscV32,4564,0,2022-01-04 17:30:59+00:00,[],None
322,https://github.com/EzraCharles/FIFO_verification_env.git,2022-01-04 01:06:41+00:00,Enviroment to test a FIFO implementation of Verification class of the Bootcamp Pre-silicon at ITESO with INTEL,0,EzraCharles/FIFO_verification_env,444244709,SystemVerilog,FIFO_verification_env,10,0,2022-01-11 02:48:40+00:00,[],https://api.github.com/licenses/mit
323,https://github.com/Areebkhan02/4-common-anode-seven-segment-displays-.git,2022-01-07 11:36:08+00:00,,0,Areebkhan02/4-common-anode-seven-segment-displays-,445500244,SystemVerilog,4-common-anode-seven-segment-displays-,7,0,2022-01-07 11:53:18+00:00,[],None
324,https://github.com/hiverniaa/RVS9-2.git,2022-01-07 08:58:03+00:00,,0,hiverniaa/RVS9-2,445458272,SystemVerilog,RVS9-2,33,0,2022-01-10 11:15:23+00:00,[],None
325,https://github.com/royb998/044252-sim3.git,2022-01-17 08:55:32+00:00,,0,royb998/044252-sim3,448819216,SystemVerilog,044252-sim3,14,0,2022-01-17 09:18:33+00:00,[],None
326,https://github.com/jupiter204/verilog.git,2022-01-19 11:05:56+00:00,,0,jupiter204/verilog,449657107,SystemVerilog,verilog,1647,0,2022-01-19 11:11:51+00:00,[],None
327,https://github.com/bciip/rv_plic.git,2022-01-18 10:33:59+00:00,,0,bciip/rv_plic,449240845,SystemVerilog,rv_plic,56,0,2022-01-18 10:39:46+00:00,[],None
328,https://github.com/bciip/rstmgr.git,2022-01-18 10:32:07+00:00,,0,bciip/rstmgr,449240196,SystemVerilog,rstmgr,61,0,2022-01-18 10:37:52+00:00,[],None
329,https://github.com/bciip/edn.git,2022-01-18 10:30:58+00:00,,0,bciip/edn,449239771,SystemVerilog,edn,225,0,2022-01-18 10:36:49+00:00,[],None
330,https://github.com/jkuschner/processor_go_brr.git,2022-01-23 23:33:23+00:00,,0,jkuschner/processor_go_brr,451258406,SystemVerilog,processor_go_brr,3010,0,2022-04-05 23:09:18+00:00,[],None
331,https://github.com/salimkhan21/UVM_ADDER_Verification.git,2022-01-28 04:58:28+00:00,4 bit adder verification environment,0,salimkhan21/UVM_ADDER_Verification,452944301,SystemVerilog,UVM_ADDER_Verification,4,0,2022-01-28 05:01:48+00:00,[],None
332,https://github.com/alihusain01/lab5-ECE385.git,2022-02-21 22:37:04+00:00,,0,alihusain01/lab5-ECE385,462053978,SystemVerilog,lab5-ECE385,6109,0,2022-02-23 22:55:50+00:00,[],None
333,https://github.com/bciip/alert_handler.git,2022-01-18 10:29:06+00:00,,0,bciip/alert_handler,449239177,SystemVerilog,alert_handler,251,0,2022-01-18 10:35:07+00:00,[],None
334,https://github.com/aj-funari/Vivado.git,2022-02-19 15:02:12+00:00,ENGR-E210 & ENGR-E315,0,aj-funari/Vivado,461224612,SystemVerilog,Vivado,10,0,2022-02-19 15:04:08+00:00,[],None
335,https://github.com/Fizz-Trickster/BMP_File.git,2022-02-23 02:30:08+00:00,,0,Fizz-Trickster/BMP_File,462552439,SystemVerilog,BMP_File,2484,0,2022-02-23 02:33:02+00:00,[],None
336,https://github.com/wxbbuaa2011/FPGA-MISC-IP.git,2022-02-13 07:24:07+00:00,Miscellaneous IPs for FPGA project,0,wxbbuaa2011/FPGA-MISC-IP,458739593,,FPGA-MISC-IP,4,0,2022-02-13 07:24:06+00:00,[],https://api.github.com/licenses/apache-2.0
337,https://github.com/FelixH316/UVM_Basics_2021.git,2021-12-27 10:54:39+00:00,This repository has some examples using UVM,0,FelixH316/UVM_Basics_2021,442132775,SystemVerilog,UVM_Basics_2021,1,0,2021-12-27 10:54:43+00:00,[],None
338,https://github.com/aryatyagi14/FPGA-Adder.git,2022-02-18 23:44:21+00:00,I created 3 different types of adders using different methods to obtain the same results. This showed how tradeoffs affect timing and complexity.,0,aryatyagi14/FPGA-Adder,461039012,SystemVerilog,FPGA-Adder,2,0,2022-02-18 23:45:21+00:00,[],None
339,https://github.com/AlSaqr-platform/common_pads.git,2022-02-21 17:00:43+00:00,,0,AlSaqr-platform/common_pads,461955007,SystemVerilog,common_pads,6,0,2024-03-31 14:13:43+00:00,[],None
340,https://github.com/GeorgeLiu98/fpga-image-decompression.git,2022-01-14 16:00:12+00:00,,0,GeorgeLiu98/fpga-image-decompression,448025046,SystemVerilog,fpga-image-decompression,615344,0,2022-01-14 16:08:28+00:00,[],None
341,https://github.com/parkerg44/System_Verilog.git,2022-01-17 05:35:36+00:00,Notes and demos using system verilog,0,parkerg44/System_Verilog,448766310,SystemVerilog,System_Verilog,8,0,2022-01-17 05:38:06+00:00,[],None
342,https://github.com/seco-lorem/SchoolWork.git,2022-01-15 14:30:01+00:00,,0,seco-lorem/SchoolWork,448300558,SystemVerilog,SchoolWork,1435,0,2022-01-15 14:31:41+00:00,[],None
343,https://github.com/bciip/pwm.git,2022-01-18 10:31:55+00:00,,0,bciip/pwm,449240090,SystemVerilog,pwm,117,0,2022-01-18 10:37:42+00:00,[],None
344,https://github.com/bciip/rv_dm.git,2022-01-18 10:32:20+00:00,,0,bciip/rv_dm,449240281,SystemVerilog,rv_dm,26,0,2022-01-18 10:38:04+00:00,[],None
345,https://github.com/ATariq1/router.git,2022-01-02 22:22:53+00:00,"ASIC design, verification, and layout of a simple router",0,ATariq1/router,443882653,SystemVerilog,router,4936,0,2022-01-07 03:35:53+00:00,[],None
346,https://github.com/yoav-es/System_Verilog.git,2022-01-27 10:04:11+00:00,,0,yoav-es/System_Verilog,452629378,SystemVerilog,System_Verilog,65,0,2022-01-27 10:04:46+00:00,[],None
347,https://github.com/maharshisoma1996/FIFO_verification-.git,2022-02-27 05:17:56+00:00,fifo verification IP using system verilog,1,maharshisoma1996/FIFO_verification-,464044781,SystemVerilog,FIFO_verification-,7,0,2022-02-27 05:30:17+00:00,[],None
348,https://github.com/zhewen404/syn_script.git,2022-03-03 01:43:19+00:00,,0,zhewen404/syn_script,465529377,SystemVerilog,syn_script,6,0,2022-03-03 02:03:29+00:00,[],None
349,https://github.com/jesselee1/18240-Lab-3.git,2022-03-02 19:14:08+00:00,,0,jesselee1/18240-Lab-3,465438024,SystemVerilog,18240-Lab-3,33,0,2022-03-02 19:15:30+00:00,[],None
350,https://github.com/RehanEjaz/TImer-on-FPGA.git,2022-02-10 01:14:11+00:00,Timer peripheral its APB wrapper and its FPGA controller,0,RehanEjaz/TImer-on-FPGA,457584889,SystemVerilog,TImer-on-FPGA,57,0,2022-05-01 08:02:00+00:00,[],None
351,https://github.com/BlackJackTone/50ins_mips_cpu.git,2022-02-10 07:14:53+00:00,"A MIPS CPU supporting 50 instructions, accelerated with 5-stage pipline and full forward.",0,BlackJackTone/50ins_mips_cpu,457670232,SystemVerilog,50ins_mips_cpu,161,0,2022-02-10 07:28:57+00:00,[],None
352,https://github.com/mohammadsaadati80/MIPS-PipeLine.git,2022-02-10 11:05:11+00:00,"Computer Assignment #3, Computer Architecture Course, University of Tehran",0,mohammadsaadati80/MIPS-PipeLine,457744672,SystemVerilog,MIPS-PipeLine,294,0,2022-02-14 18:20:02+00:00,[],None
353,https://github.com/Joptis/Tarea4_parte1.git,2022-02-08 17:49:36+00:00,Tarea de HLS,0,Joptis/Tarea4_parte1,457042179,SystemVerilog,Tarea4_parte1,1287,0,2022-04-21 22:35:45+00:00,[],None
354,https://github.com/AlSaqr-platform/cluster-dma.git,2022-02-09 17:46:06+00:00,Temporary DMA controller for AlSaqr platform,0,AlSaqr-platform/cluster-dma,457466686,SystemVerilog,cluster-dma,19,0,2022-02-11 21:38:56+00:00,[],None
355,https://github.com/haitianzhishang/common_module.git,2022-02-23 02:51:17+00:00,,0,haitianzhishang/common_module,462557631,SystemVerilog,common_module,10,0,2022-02-23 03:21:09+00:00,[],None
356,https://github.com/FAAMT/MIPS-Uniprocessor.git,2022-01-31 20:10:05+00:00,This repo contains all the source code and relevant files for my MIPS Uniprocessor project. I worked on this for a computer architecture lab at Purdue University in Spring 2022.  The processor was developed using SystemVerilog (HDL).,0,FAAMT/MIPS-Uniprocessor,454154007,SystemVerilog,MIPS-Uniprocessor,146,0,2024-02-26 15:39:29+00:00,[],None
357,https://github.com/burakyuslu/CS223-Project.git,2022-01-25 08:47:45+00:00,"CS 223 Digital Design course project. An implementation of Conway's Game Of Life, based on the instructions given in the assignment.",0,burakyuslu/CS223-Project,451800902,SystemVerilog,CS223-Project,11,0,2022-01-25 08:54:02+00:00,[],None
358,https://github.com/Andrew-LTC/ECE4305Lab1.git,2022-01-28 19:40:27+00:00,,0,Andrew-LTC/ECE4305Lab1,453195126,SystemVerilog,ECE4305Lab1,1864,0,2023-01-26 21:09:33+00:00,[],None
359,https://github.com/shivanandgsr/DMA-Controller.git,2022-01-05 02:34:03+00:00,,0,shivanandgsr/DMA-Controller,444636078,SystemVerilog,DMA-Controller,617,0,2022-08-10 01:19:39+00:00,[],None
360,https://github.com/bciip/rom_ctrl.git,2022-01-18 10:30:03+00:00,,0,bciip/rom_ctrl,449239444,SystemVerilog,rom_ctrl,127,0,2022-01-18 10:35:56+00:00,[],None
361,https://github.com/bciip/rv_timer.git,2022-01-18 10:30:34+00:00,,0,bciip/rv_timer,449239614,SystemVerilog,rv_timer,111,0,2022-01-18 10:36:17+00:00,[],None
362,https://github.com/pChaniotis/Small-School-Projects.git,2022-01-16 18:56:39+00:00,,0,pChaniotis/Small-School-Projects,448645226,SystemVerilog,Small-School-Projects,9863,0,2022-01-16 20:03:55+00:00,[],None
363,https://github.com/cbrl/svMIPS.git,2022-02-16 21:17:04+00:00,A single-cycle MIPS processor,0,cbrl/svMIPS,460180749,SystemVerilog,svMIPS,907,0,2022-02-18 19:50:14+00:00,[],None
364,https://github.com/randyma01/CE4202-Proyecto-3.git,2022-01-14 14:16:40+00:00,Proyecto Corto 3: Osciloscopio y Filtrado Digital,0,randyma01/CE4202-Proyecto-3,447991861,SystemVerilog,CE4202-Proyecto-3,3200,0,2022-01-24 06:08:29+00:00,[],None
365,https://github.com/bloodyrun/filters.git,2022-02-10 05:36:54+00:00,,0,bloodyrun/filters,457644914,SystemVerilog,filters,3,0,2022-02-10 05:36:59+00:00,[],None
366,https://github.com/ngpham17/ECE_540_Final-Project_Snake_game.git,2022-02-14 23:05:34+00:00,,0,ngpham17/ECE_540_Final-Project_Snake_game,459354582,SystemVerilog,ECE_540_Final-Project_Snake_game,7388,0,2022-02-14 23:10:07+00:00,[],None
367,https://github.com/jzeiselmusic/CLA.git,2022-02-14 18:08:43+00:00,carry look-ahead adder,0,jzeiselmusic/CLA,459272601,SystemVerilog,CLA,4,0,2022-02-14 18:08:48+00:00,[],None
368,https://github.com/hchou3/SVproject1hchou.git,2022-02-11 21:10:25+00:00,Makeup Project 2,0,hchou3/SVproject1hchou,458341096,SystemVerilog,SVproject1hchou,16,0,2023-01-13 23:20:18+00:00,[],None
369,https://github.com/siddhpant/verilog-practice.git,2022-02-27 19:22:27+00:00,Practicing stuff (Incomplete; Will keep adding when I get time. Also ignore commit messages),0,siddhpant/verilog-practice,464231601,SystemVerilog,verilog-practice,912,0,2022-08-24 09:03:14+00:00,"['verilog', 'hdl', 'practice', 'quartus-prime', 'systemverilog']",None
370,https://github.com/pulala17/Green-Book.git,2022-02-23 01:42:05+00:00,,0,pulala17/Green-Book,462540937,SystemVerilog,Green-Book,7591,0,2022-03-22 09:15:18+00:00,[],None
371,https://github.com/os-fpga/axi_i2c_bridge.git,2021-12-30 12:45:49+00:00,,1,os-fpga/axi_i2c_bridge,443072483,SystemVerilog,axi_i2c_bridge,9032,0,2024-01-23 09:54:44+00:00,['hw'],
372,https://github.com/dineshannayya/ycr2c.git,2022-02-20 14:11:14+00:00,,0,dineshannayya/ycr2c,461507827,SystemVerilog,ycr2c,1394,0,2022-02-20 14:11:28+00:00,[],https://api.github.com/licenses/apache-2.0
373,https://github.com/AbdelnabyK/ARM_pipeline_processor.git,2022-02-03 16:31:57+00:00,,0,AbdelnabyK/ARM_pipeline_processor,455242431,SystemVerilog,ARM_pipeline_processor,53,0,2024-03-17 19:04:12+00:00,[],None
374,https://github.com/Areebkhan02/Seven-Segment-Decoder-using-verilog-HDL.git,2022-01-07 09:54:42+00:00,,0,Areebkhan02/Seven-Segment-Decoder-using-verilog-HDL,445473750,SystemVerilog,Seven-Segment-Decoder-using-verilog-HDL,3,0,2022-01-07 10:00:37+00:00,[],None
375,https://github.com/senceck/Pipelined-Median-Filter.git,2022-01-13 13:01:09+00:00,An algorithm to increase processing time of a pipelined parallel median filter using Verilog.,0,senceck/Pipelined-Median-Filter,447600870,SystemVerilog,Pipelined-Median-Filter,11,0,2022-01-13 13:05:11+00:00,[],None
376,https://github.com/bciip/aon_timer.git,2022-01-18 10:30:46+00:00,,0,bciip/aon_timer,449239698,SystemVerilog,aon_timer,51,0,2022-01-18 10:36:37+00:00,[],None
377,https://github.com/bciip/prim.git,2022-01-18 10:31:39+00:00,,0,bciip/prim,449239992,SystemVerilog,prim,183,0,2022-01-18 10:37:32+00:00,[],None
378,https://github.com/alihusain01/lab3-ECE385.git,2022-02-08 05:13:25+00:00,,0,alihusain01/lab3-ECE385,456792024,SystemVerilog,lab3-ECE385,10116,0,2022-02-09 06:53:52+00:00,[],None
379,https://github.com/ZerunYin/learn_uvm.git,2021-12-30 13:16:38+00:00,,0,ZerunYin/learn_uvm,443080137,SystemVerilog,learn_uvm,6383,0,2021-12-30 17:37:17+00:00,[],https://api.github.com/licenses/apache-2.0
380,https://github.com/jbates35/lab3.git,2022-01-30 19:54:43+00:00,Verilog Lab 3 for ELEX7660,0,jbates35/lab3,453786073,SystemVerilog,lab3,15,0,2022-01-30 19:55:45+00:00,[],None
381,https://github.com/ShivaniPalkar/System-Verilog-Assignments.git,2022-02-09 04:28:17+00:00,,0,ShivaniPalkar/System-Verilog-Assignments,457207797,SystemVerilog,System-Verilog-Assignments,30,0,2022-02-09 04:37:11+00:00,[],None
382,https://github.com/achyutray/DDS2_group03.git,2022-02-24 14:08:55+00:00,,0,achyutray/DDS2_group03,463172418,SystemVerilog,DDS2_group03,321,0,2022-02-24 14:15:12+00:00,[],None
383,https://github.com/AndreaLazzari/SoundWaveDistortionViaFPGA.git,2022-02-25 15:24:34+00:00,Final Project Of Management and Analysis of Physical Dataset,0,AndreaLazzari/SoundWaveDistortionViaFPGA,463581534,SystemVerilog,SoundWaveDistortionViaFPGA,23375,0,2022-02-25 15:27:24+00:00,[],None
384,https://github.com/donev-stan/SystemVerilog.git,2022-02-15 09:42:33+00:00,FIFO Verification Environment + Coverage & Assertions (OOP),0,donev-stan/SystemVerilog,459515396,SystemVerilog,SystemVerilog,9,0,2022-03-21 12:07:44+00:00,[],None
385,https://github.com/6Kotnk/GPUv1.git,2022-02-16 00:40:55+00:00,Sphere shading GPU for ZedBoard,0,6Kotnk/GPUv1,459799700,SystemVerilog,GPUv1,728,0,2022-02-16 00:41:40+00:00,[],None
386,https://github.com/AnatoliyMartynyuk/YARR-rx-recovery.git,2022-02-23 23:50:50+00:00,Meant to benchmark and improve the desync behavior of the YARR rx DAQ.,1,AnatoliyMartynyuk/YARR-rx-recovery,462945113,SystemVerilog,YARR-rx-recovery,89571,0,2022-06-21 17:16:15+00:00,[],None
387,https://github.com/sasha7886/Syntacore-test-exercise.git,2022-02-24 20:49:21+00:00,Syntacore test exercise for internship,0,sasha7886/Syntacore-test-exercise,463297242,SystemVerilog,Syntacore-test-exercise,6679,0,2022-02-24 20:56:33+00:00,[],None
388,https://github.com/alihusain01/lab4-ECE385.git,2022-02-14 22:04:03+00:00,,0,alihusain01/lab4-ECE385,459340131,SystemVerilog,lab4-ECE385,8597,0,2022-02-17 10:05:19+00:00,[],None
389,https://github.com/GCET231/final_project_2021.1.git,2022-02-20 15:17:09+00:00,Arquivos base para o projeto final,0,GCET231/final_project_2021.1,461526417,SystemVerilog,final_project_2021.1,87,0,2022-02-24 21:06:18+00:00,[],None
390,https://github.com/UandersonSilva/TCC.git,2022-02-21 17:45:21+00:00,Desenvolvimento de um ambiente para visualização do funcionamento de um processador descrito em SystemVerilog,0,UandersonSilva/TCC,461970663,SystemVerilog,TCC,15802,0,2022-02-21 17:46:59+00:00,[],None
391,https://github.com/usmanali-rs/Design-Verifcation-Environment-for-AHBlite-Slave.git,2022-02-22 16:54:03+00:00,"Design Verification Environment is used to check the functional correctness of the Design Under Test (DUT) by generating and driving a predefined input sequence to a design, capturing the design output and comparing with-respect-to expected output. Verification environment is a group of classes or components. where each component is performing a specific operation. i.e, generating stimulus, driving, monitoring, etc. and those classes will be named based on the operation.",0,usmanali-rs/Design-Verifcation-Environment-for-AHBlite-Slave,462391331,SystemVerilog,Design-Verifcation-Environment-for-AHBlite-Slave,51,0,2023-10-02 07:41:43+00:00,[],None
392,https://github.com/romio-krvtsky/CSA-labs.git,2022-03-03 16:43:17+00:00,,0,romio-krvtsky/CSA-labs,465803564,SystemVerilog,CSA-labs,43840,0,2022-05-16 06:52:26+00:00,[],None
393,https://github.com/yuyichao/digitaljs_test.git,2021-12-30 22:33:13+00:00,,0,yuyichao/digitaljs_test,443198585,SystemVerilog,digitaljs_test,9,0,2022-01-05 20:26:07+00:00,[],None
394,https://github.com/LiamMullen8/Ripple-Carry-Adder.git,2022-01-16 20:59:12+00:00,32-bit Ripple Carry Adder with gate/time delays to account for critical path delays. Project for CSE341: Computer Organization (Fall 21),0,LiamMullen8/Ripple-Carry-Adder,448671643,SystemVerilog,Ripple-Carry-Adder,35,0,2022-01-16 22:22:36+00:00,[],None
395,https://github.com/bciip/uart.git,2022-01-18 10:32:43+00:00,,0,bciip/uart,449240411,SystemVerilog,uart,158,0,2022-01-18 10:38:33+00:00,[],None
396,https://github.com/bciip/lc_ctrl.git,2022-01-18 10:33:35+00:00,,0,bciip/lc_ctrl,449240706,SystemVerilog,lc_ctrl,254,0,2022-01-18 10:39:18+00:00,[],None
397,https://github.com/youmin1017/sv-tetris.git,2022-01-18 07:15:53+00:00,systemverilog tetris,1,youmin1017/sv-tetris,449179833,SystemVerilog,sv-tetris,1680,0,2022-01-18 07:16:30+00:00,[],None
398,https://github.com/riazcseiu/RV32.git,2021-12-28 01:47:07+00:00,RISC-V Processor,0,riazcseiu/RV32,442319566,,RV32,5,0,2021-12-28 01:47:08+00:00,[],None
399,https://github.com/Hang-XX/tests_2022.git,2022-01-08 05:57:26+00:00,,0,Hang-XX/tests_2022,445737310,SystemVerilog,tests_2022,2,0,2022-01-08 06:00:54+00:00,[],None
400,https://github.com/swisstackle/alu.git,2022-01-04 09:10:14+00:00,An ALU implementation in System Verilog. Course project: Code upon request.,0,swisstackle/alu,444353948,SystemVerilog,alu,7,0,2023-03-12 21:45:29+00:00,"['alu', 'cpu', 'systemverilog', 'verilog', 'eda']",https://api.github.com/licenses/unlicense
401,https://github.com/ENGR210/P9_SPI.git,2022-01-31 15:56:33+00:00,,0,ENGR210/P9_SPI,454070760,SystemVerilog,P9_SPI,23,0,2022-03-16 14:19:56+00:00,[],None
402,https://github.com/afsantosb/DAT410.git,2022-01-27 09:44:27+00:00,,0,afsantosb/DAT410,452623166,SystemVerilog,DAT410,4251,0,2022-11-08 18:53:38+00:00,[],None
403,https://github.com/RootCubed/fpga_nsmbw_hash.git,2022-03-01 23:06:09+00:00,FPGA design that cracks NSMBW symbol hashes,0,RootCubed/fpga_nsmbw_hash,465085303,SystemVerilog,fpga_nsmbw_hash,18,0,2022-05-31 19:16:42+00:00,[],https://api.github.com/licenses/mit
404,https://github.com/4DV4NC3M3N7/RV32i_custom_core.git,2022-02-18 06:40:30+00:00,"Custom RV32i Multicycle core that cover 39 instructions except ""ecall"" and ""fence""",0,4DV4NC3M3N7/RV32i_custom_core,460739551,SystemVerilog,RV32i_custom_core,33,0,2022-08-10 07:13:45+00:00,[],https://api.github.com/licenses/cc0-1.0
405,https://github.com/SreenivasanJJ/IEEE-P1500-std-components-MTECH-project.git,2022-02-17 04:11:41+00:00,,0,SreenivasanJJ/IEEE-P1500-std-components-MTECH-project,460277364,SystemVerilog,IEEE-P1500-std-components-MTECH-project,5,0,2022-02-17 16:32:14+00:00,[],None
406,https://github.com/Danil1997Dev/Lab35.git,2022-02-10 13:41:49+00:00,,0,Danil1997Dev/Lab35,457796177,SystemVerilog,Lab35,3868,0,2022-02-10 13:44:23+00:00,[],None
407,https://github.com/ReaperOknowledge/Interview_Code.git,2022-02-11 19:14:06+00:00,directory for possible career/internship applications,0,ReaperOknowledge/Interview_Code,458311205,SystemVerilog,Interview_Code,1493,0,2022-09-21 18:09:38+00:00,[],None
408,https://github.com/Andrew-LTC/ECE4305Lab3.git,2022-02-11 19:38:35+00:00,,0,Andrew-LTC/ECE4305Lab3,458318122,SystemVerilog,ECE4305Lab3,685,0,2023-01-26 21:08:42+00:00,[],None
409,https://github.com/jzeiselmusic/APM.git,2022-02-14 18:11:43+00:00,Approximate Pattern Matching,0,jzeiselmusic/APM,459273615,SystemVerilog,APM,3,0,2022-02-14 18:11:49+00:00,[],None
410,https://github.com/JoyceLCH/CPU.VGA_ROM.git,2022-03-03 15:10:32+00:00,,0,JoyceLCH/CPU.VGA_ROM,465769232,SystemVerilog,CPU.VGA_ROM,111,0,2022-03-03 15:15:29+00:00,[],None
411,https://github.com/RuiyanGuo/Image-Decompressor.git,2022-02-23 19:49:56+00:00,,0,RuiyanGuo/Image-Decompressor,462884197,SystemVerilog,Image-Decompressor,3540,0,2024-01-15 15:49:10+00:00,[],None
412,https://github.com/yonib98/Sim2.git,2022-01-04 14:49:49+00:00,,0,yonib98/Sim2,444456884,SystemVerilog,Sim2,1042,0,2022-01-05 10:12:50+00:00,[],None
413,https://github.com/p3da/udma_eth_frame.git,2022-01-03 19:41:21+00:00,,0,p3da/udma_eth_frame,444179652,SystemVerilog,udma_eth_frame,13,0,2022-01-10 15:45:27+00:00,[],None
414,https://github.com/AntonovAlexander/syn_opt_test.git,2021-12-28 19:42:25+00:00,Test project for synthesis optimizations exploration,0,AntonovAlexander/syn_opt_test,442566821,SystemVerilog,syn_opt_test,102,0,2021-12-30 11:58:56+00:00,[],None
415,https://github.com/tfiwm/systemverilog_snippets.git,2022-01-01 21:59:57+00:00,All sorts of systemverilog constructs with examples,0,tfiwm/systemverilog_snippets,443631668,SystemVerilog,systemverilog_snippets,38,0,2022-04-27 15:16:47+00:00,[],None
416,https://github.com/aspcompiler/digital_design.git,2022-01-11 07:03:15+00:00,,0,aspcompiler/digital_design,446712734,SystemVerilog,digital_design,15,0,2022-01-11 07:36:46+00:00,[],None
417,https://github.com/fangqingxiao/Riscv.git,2022-01-10 09:37:24+00:00,,0,fangqingxiao/Riscv,446360872,SystemVerilog,Riscv,66,0,2022-04-07 14:49:41+00:00,[],None
418,https://github.com/brktnc/FBU-CPU-System-Verilog-Testbench.git,2022-01-06 09:42:53+00:00,,0,brktnc/FBU-CPU-System-Verilog-Testbench,445116810,SystemVerilog,FBU-CPU-System-Verilog-Testbench,2243,0,2022-01-06 17:28:25+00:00,[],None
419,https://github.com/adaneshp/Digital-Logic-Design.git,2022-01-24 17:02:23+00:00,,0,adaneshp/Digital-Logic-Design,451554781,SystemVerilog,Digital-Logic-Design,21,0,2022-06-01 22:43:17+00:00,[],https://api.github.com/licenses/gpl-3.0
420,https://github.com/danielmergy/SyncFIFO.git,2022-01-17 16:42:11+00:00,,0,danielmergy/SyncFIFO,448972182,SystemVerilog,SyncFIFO,4,0,2022-01-17 17:07:54+00:00,[],None
421,https://github.com/mayyamal/SMART-V.git,2022-01-19 13:55:52+00:00,RI5CY with Security Extensions,0,mayyamal/SMART-V,449712678,SystemVerilog,SMART-V,2364,0,2023-02-03 08:17:40+00:00,[],None
422,https://github.com/sharbellkhell/Dig_Elec_Sim3.git,2022-01-19 20:57:55+00:00,,0,sharbellkhell/Dig_Elec_Sim3,449853074,SystemVerilog,Dig_Elec_Sim3,25,0,2022-01-19 21:03:41+00:00,[],None
423,https://github.com/vijayshankarr/VSDMiniSoC.git,2022-01-09 12:20:00+00:00,,0,vijayshankarr/VSDMiniSoC,446079893,SystemVerilog,VSDMiniSoC,39,0,2022-01-09 13:27:24+00:00,[],None
424,https://github.com/BowmanChow/AlinxAX7035.git,2022-01-19 15:12:50+00:00,,0,BowmanChow/AlinxAX7035,449741628,SystemVerilog,AlinxAX7035,4,0,2022-01-19 15:13:16+00:00,[],None
425,https://github.com/oliverdwang/flex-uart.git,2022-02-22 16:49:59+00:00,Highly configurable UART module with a simple interface,0,oliverdwang/flex-uart,462389818,SystemVerilog,flex-uart,33171,0,2022-03-31 21:35:22+00:00,[],None
426,https://github.com/Danil1997Dev/Lab33.git,2022-02-08 05:28:07+00:00,,0,Danil1997Dev/Lab33,456795381,SystemVerilog,Lab33,4471,0,2022-02-08 05:30:28+00:00,[],None
427,https://github.com/tomkuzma/7660_Lab4.git,2022-02-04 16:55:04+00:00,ELEX 7660 Lab 4,0,tomkuzma/7660_Lab4,455626669,SystemVerilog,7660_Lab4,62,0,2022-02-07 06:14:57+00:00,[],None
428,https://github.com/dsrasheed/ece437.git,2022-02-08 18:45:30+00:00,,0,dsrasheed/ece437,457060604,SystemVerilog,ece437,7283,0,2023-04-24 06:20:09+00:00,[],None
429,https://github.com/nickmaster2222/CHIP-8.git,2022-02-15 14:04:25+00:00,A CHIP-8 based CPU,0,nickmaster2222/CHIP-8,459604149,SystemVerilog,CHIP-8,26,0,2022-02-15 14:29:47+00:00,[],None
430,https://github.com/Alex-Sensin/High_Speed_Computer_Arithmetic.git,2022-02-15 17:38:36+00:00,Homework assignments from ECEN 4233 high speed computer arithmetic.,0,Alex-Sensin/High_Speed_Computer_Arithmetic,459684450,SystemVerilog,High_Speed_Computer_Arithmetic,10,0,2022-02-15 17:41:15+00:00,[],None
431,https://github.com/Beenau/TimeMultiplexedFilter.git,2022-01-14 02:59:59+00:00,Creates a time multiplexed FIR filter.,0,Beenau/TimeMultiplexedFilter,447824660,SystemVerilog,TimeMultiplexedFilter,29,0,2022-01-24 23:04:41+00:00,[],None
432,https://github.com/grantsmith09/KnightsTour.git,2022-01-14 18:34:58+00:00,,0,grantsmith09/KnightsTour,448070794,SystemVerilog,KnightsTour,49,0,2022-01-14 18:45:29+00:00,[],None
433,https://github.com/armeenm/greenstream.git,2022-02-11 22:30:07+00:00,FPGA EEPROM programmer,0,armeenm/greenstream,458358686,SystemVerilog,greenstream,21,0,2024-01-14 23:20:01+00:00,"['fpga', 'eeprom-programmer', 'eeprom', 'systemverilog', 'haskell', 'clash-lang']",https://api.github.com/licenses/isc
