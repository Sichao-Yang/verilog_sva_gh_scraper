,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/phoeniX-Digital-Design/phoeniX.git,2023-08-12 06:33:11+00:00,phoeniX RISC-V Processor,5,phoeniX-Digital-Design/phoeniX,677643796,Verilog,phoeniX,151663,41,2024-03-21 16:14:39+00:00,"['cpu-design', 'computer-architecture', 'fpga', 'vlsi', 'microprocessor', 'riscv', 'risc-v', 'cpu', 'embedded-systems', 'approximate-computing']",https://api.github.com/licenses/gpl-3.0
1,https://github.com/algofoogle/raybox-zero.git,2023-08-08 10:44:08+00:00,Minimal implementation of Raybox HDL ray caster concept,1,algofoogle/raybox-zero,676059736,Verilog,raybox-zero,1458,22,2024-04-01 13:26:37+00:00,[],None
2,https://github.com/fangyzh26/AHB_SRAM.git,2023-08-09 12:35:59+00:00,,7,fangyzh26/AHB_SRAM,676538705,Verilog,AHB_SRAM,9,15,2024-03-22 06:12:42+00:00,[],None
3,https://github.com/v9938/MSX4SlotExpander.git,2023-08-03 17:30:02+00:00,MSX simple 4Slot Expander unit,1,v9938/MSX4SlotExpander,674333727,Verilog,MSX4SlotExpander,1969,11,2024-03-21 08:24:44+00:00,[],https://api.github.com/licenses/mit
4,https://github.com/ciniml/seccamp_riscv_cpu.git,2023-08-06 05:59:29+00:00,セキュリティ・キャンプ 2022-2023 RISC-V CPU自作ゼミ 資料置き場,0,ciniml/seccamp_riscv_cpu,675202977,Verilog,seccamp_riscv_cpu,30449,11,2024-03-25 08:18:16+00:00,[],None
5,https://github.com/gl9544/vit_transformer_fpga.git,2023-08-10 10:57:51+00:00,,0,gl9544/vit_transformer_fpga,676935455,Verilog,vit_transformer_fpga,9007,10,2024-03-14 08:48:01+00:00,[],None
6,https://github.com/JiunJung/GEMM_accelerator.git,2023-07-28 04:23:12+00:00,GEMM accelerator using FPGA,0,JiunJung/GEMM_accelerator,671758120,Verilog,GEMM_accelerator,229,7,2024-04-04 10:03:13+00:00,[],None
7,https://github.com/olofk/qerv.git,2023-08-11 13:09:47+00:00,,1,olofk/qerv,677392738,Verilog,qerv,9440,6,2024-03-01 10:22:23+00:00,[],https://api.github.com/licenses/isc
8,https://github.com/fangyzh26/APB_SRAM.git,2023-08-09 12:31:26+00:00,,1,fangyzh26/APB_SRAM,676537111,Verilog,APB_SRAM,44,6,2024-03-18 07:47:18+00:00,[],None
9,https://github.com/arsalanjabbari/RISCV-CPU-Design.git,2023-08-11 19:22:00+00:00,"In this project, you will be tasked with implementing pipeline registers and connecting all the modules you've created so far to build a complete RISC-V processor. The successful completion of this project will result in a functional MIPS processor, and you'll have the opportunity to gain bonus points by handling hazards.",0,arsalanjabbari/RISCV-CPU-Design,677516019,Verilog,RISCV-CPU-Design,9,5,2023-12-09 11:33:22+00:00,"['cpu-design', 'multicycle-processor', 'risc-v']",None
10,https://github.com/arsalanjabbari/MIPS-CPU-Design.git,2023-08-11 19:17:49+00:00,"This project involves the creation of a single-cycle MIPS CPU design using Verilog. The single-cycle microarchitecture is characterized by executing an entire instruction in one clock cycle. The project delves into the intricacies of designing and implementing a simplified MIPS CPU, providing insights into its fundamental components.",0,arsalanjabbari/MIPS-CPU-Design,677514886,Verilog,MIPS-CPU-Design,9,5,2024-03-09 10:48:46+00:00,"['cpu-design', 'mips', 'single-cycle-processor']",None
11,https://github.com/VladimirMeshcheriakov/Le-FauxrjePGA-CPU.git,2023-08-12 17:00:06+00:00,RISCV-32 based CPU made by the Fauxrje,0,VladimirMeshcheriakov/Le-FauxrjePGA-CPU,677797150,Verilog,Le-FauxrjePGA-CPU,355,4,2023-09-05 17:32:52+00:00,[],https://api.github.com/licenses/mit
12,https://github.com/meeeeet/RTL-to-GDS-Implementation-of-SerDes.git,2023-08-04 10:56:46+00:00,,1,meeeeet/RTL-to-GDS-Implementation-of-SerDes,674606511,Verilog,RTL-to-GDS-Implementation-of-SerDes,5144,4,2024-04-09 09:47:31+00:00,"['asic-design', 'openroad', 'rtl2gds', 'verilog', 'vlsi-physical-design']",https://api.github.com/licenses/gpl-3.0
13,https://github.com/Biggestapple/2023-H-Signal_Separator.git,2023-08-07 07:28:16+00:00,2023_电赛H题_信号分离装置,0,Biggestapple/2023-H-Signal_Separator,675552384,Verilog,2023-H-Signal_Separator,26,4,2024-03-25 05:53:54+00:00,[],https://api.github.com/licenses/apache-2.0
14,https://github.com/OmarMongy/Clock.git,2023-07-29 21:48:24+00:00,"Verilog HDL implementation of a 12-hour clock module. The module generates outputs for hours, minutes, seconds, and the period indicator (AM or PM) based on the provided clock signal. Omar Mongy",0,OmarMongy/Clock,672378185,Verilog,Clock,395,4,2023-11-29 13:14:10+00:00,"['fpga', 'verilog']",None
15,https://github.com/tinyvision-ai-inc/tinyCLUNX33.git,2023-08-08 18:26:50+00:00,Documentation for the tinyNX33U SoM and related boards,2,tinyvision-ai-inc/tinyCLUNX33,676234459,Verilog,tinyCLUNX33,114934,4,2024-03-26 20:29:48+00:00,[],None
16,https://github.com/koushikkalyani/FPGASpeaks.git,2023-08-05 16:01:18+00:00,"FPGAspeaks is a community, created to exchange knowledge in some of the basic domains of VLSI i.e Digital System Design, Verilog HDL, Hardware implementation on FPGA board specifically  Zynq ZC706. Aim is to help people gain Hands-on-experience .",6,koushikkalyani/FPGASpeaks,675051029,Verilog,FPGASpeaks,35023,3,2023-09-20 05:43:03+00:00,[],None
17,https://github.com/OmarMongy/PWM.git,2023-07-29 07:30:41+00:00,Omar Mongy,0,OmarMongy/PWM,672181201,Verilog,PWM,138,3,2023-08-10 22:01:16+00:00,[],None
18,https://github.com/afterGlow4ever/cm3_ahbmtx_mcu.git,2023-08-06 07:14:15+00:00,mcu with cm3 ahbmtx,1,afterGlow4ever/cm3_ahbmtx_mcu,675217686,Verilog,cm3_ahbmtx_mcu,381955,3,2024-01-07 12:58:45+00:00,[],None
19,https://github.com/jongsh/2022-BUAA-CO.git,2023-08-02 03:52:23+00:00,,0,jongsh/2022-BUAA-CO,673622032,Verilog,2022-BUAA-CO,102,3,2024-03-16 02:40:29+00:00,[],None
20,https://github.com/zxtres/zxspectrum.git,2023-07-30 13:49:11+00:00,ZX Spectrum core,4,zxtres/zxspectrum,672558158,Verilog,zxspectrum,1190,3,2024-03-04 13:40:12+00:00,[],https://api.github.com/licenses/gpl-3.0
21,https://github.com/HiggsBose/RiscV_CPU_with_Accelerator.git,2023-08-08 11:11:46+00:00,A RiscV CPU with an accelerator for accelerating neural networks attached to it,2,HiggsBose/RiscV_CPU_with_Accelerator,676069021,Verilog,RiscV_CPU_with_Accelerator,56,3,2024-03-24 10:23:14+00:00,[],None
22,https://github.com/Shahiraosama/Electronic_Locker.git,2023-08-06 23:17:59+00:00,"it was required to build an electronic combination lock with a reset button, button for input 1 and button for input 2 and an unlock output and in order to open the lock the combination should be 01011 (starting from the right)",0,Shahiraosama/Electronic_Locker,675439968,Verilog,Electronic_Locker,56,2,2023-09-28 22:24:28+00:00,[],None
23,https://github.com/HocLee/RISCV-with-branch-prediction-single-precision-FPU-and-cache.git,2023-08-08 13:19:35+00:00,,0,HocLee/RISCV-with-branch-prediction-single-precision-FPU-and-cache,676116876,Verilog,RISCV-with-branch-prediction-single-precision-FPU-and-cache,1753,2,2024-04-07 13:05:45+00:00,[],None
24,https://github.com/OmarMongy/BCD_Counter.git,2023-07-26 14:18:17+00:00,Omar Mongy,0,OmarMongy/BCD_Counter,671092657,Verilog,BCD_Counter,210,2,2023-08-10 22:01:16+00:00,[],None
25,https://github.com/MayurKumar-git/Ahbtoapb.git,2023-08-09 16:10:02+00:00,A Verilog HDL based project to build a bridge between AHB and APB buses in the AMBA architecture,0,MayurKumar-git/Ahbtoapb,676621873,Verilog,Ahbtoapb,6,2,2024-03-11 02:19:43+00:00,[],None
26,https://github.com/STARS-Design-Track-2023/Caravel_STARS_2023.git,2023-07-27 14:39:05+00:00,,0,STARS-Design-Track-2023/Caravel_STARS_2023,671535375,Verilog,Caravel_STARS_2023,1041324,2,2023-10-18 21:22:01+00:00,[],https://api.github.com/licenses/apache-2.0
27,https://github.com/OmarMongy/Moore_Seq_Detector.git,2023-08-06 12:01:55+00:00,Omar Mongy,1,OmarMongy/Moore_Seq_Detector,675281549,Verilog,Moore_Seq_Detector,30,2,2023-08-10 22:01:10+00:00,[],None
28,https://github.com/VishwajithVPai/VishwajithVPai-A-_-_User_Interface_for_Yosys_and_OpenTimer_A_TCL_Automation_Project.git,2023-07-31 06:18:10+00:00,VishwajithVPai/A-_-Graphical_User_Interface_for_Yosys_and_OpenTimer_A_TCL_Automation_Project,0,VishwajithVPai/VishwajithVPai-A-_-_User_Interface_for_Yosys_and_OpenTimer_A_TCL_Automation_Project,672773159,Verilog,VishwajithVPai-A-_-_User_Interface_for_Yosys_and_OpenTimer_A_TCL_Automation_Project,395,2,2024-03-10 09:02:18+00:00,[],None
29,https://github.com/walker99999/fpga_video_pcie_ethernet_soc.git,2023-07-31 15:11:59+00:00,两路摄像头，pcie上位机传输,1,walker99999/fpga_video_pcie_ethernet_soc,672969640,Verilog,fpga_video_pcie_ethernet_soc,12517,2,2024-03-27 17:02:29+00:00,[],None
30,https://github.com/Shahriar-0/Computer-Architecture-Lab-Experiments-F2023.git,2023-08-09 15:56:20+00:00,"ARM processor pipeline implementation, hazard unit, forwarding unit, SRAM & cache memory.",1,Shahriar-0/Computer-Architecture-Lab-Experiments-F2023,676616392,Verilog,Computer-Architecture-Lab-Experiments-F2023,43086,2,2024-04-05 16:27:41+00:00,"['arm', 'cache', 'forwarding-unit', 'hazard', 'pipeline', 'processor-architecture', 'sram']",https://api.github.com/licenses/mit
31,https://github.com/lutayyy/openplush.git,2023-08-12 16:50:23+00:00,An open virtual pc.,0,lutayyy/openplush,677794651,Verilog,openplush,46,2,2023-10-07 08:38:42+00:00,[],None
32,https://github.com/OmarMongy/Mealy_Seq_Detector.git,2023-08-06 11:56:14+00:00,Omar Mongy,0,OmarMongy/Mealy_Seq_Detector,675280192,Verilog,Mealy_Seq_Detector,33,2,2023-08-10 22:01:10+00:00,[],None
33,https://github.com/OmarMongy/UDL_Counter.git,2023-07-26 13:39:44+00:00,Omar Mongy,0,OmarMongy/UDL_Counter,671076559,Verilog,UDL_Counter,130,2,2023-08-10 22:01:18+00:00,[],None
34,https://github.com/wickerwaka/MiSTerLaggy_MiSTer.git,2023-08-01 14:18:27+00:00,A display latency tester for the MiSTer FPGA system.,0,wickerwaka/MiSTerLaggy_MiSTer,673392540,Verilog,MiSTerLaggy_MiSTer,15218,2,2023-12-13 08:37:58+00:00,[],https://api.github.com/licenses/gpl-2.0
35,https://github.com/OmarMongy/Sync_and_Ayunc_counters.git,2023-07-26 13:05:08+00:00,Omar Mongy,0,OmarMongy/Sync_and_Ayunc_counters,671062622,Verilog,Sync_and_Ayunc_counters,131,2,2023-08-10 22:01:22+00:00,[],None
36,https://github.com/OmarMongy/Timer_Counter.git,2023-07-26 16:26:14+00:00,Omar Mongy,0,OmarMongy/Timer_Counter,671142690,Verilog,Timer_Counter,103,2,2023-08-10 22:01:17+00:00,[],None
37,https://github.com/OmarMongy/Dice_Game.git,2023-08-03 00:06:44+00:00,Omar Mongy,0,OmarMongy/Dice_Game,674009930,Verilog,Dice_Game,88,2,2023-08-10 22:01:12+00:00,[],None
38,https://github.com/OmarMongy/Traffic_Light_Controller.git,2023-08-03 10:26:49+00:00,Omar Mongy,0,OmarMongy/Traffic_Light_Controller,674182127,Verilog,Traffic_Light_Controller,184,2,2023-08-10 22:01:03+00:00,[],None
39,https://github.com/lnis-uofu/ECE_5710_6710_F23.git,2023-08-08 17:42:20+00:00,University of Utah ECE 6710/5710 Lab Material,0,lnis-uofu/ECE_5710_6710_F23,676219337,Verilog,ECE_5710_6710_F23,94,2,2023-09-21 02:52:47+00:00,[],None
40,https://github.com/AKhaled47/MIPS-SingleCycle.git,2023-07-29 18:35:48+00:00,,0,AKhaled47/MIPS-SingleCycle,672341317,Verilog,MIPS-SingleCycle,129,1,2023-07-30 17:10:24+00:00,[],None
41,https://github.com/Divya-i/100daysofRTL.git,2023-08-03 09:28:40+00:00,"Starting the ""100 Days of RTL Challenge"" has been an exciting adventure. Each day, I'm diving into Verilog-based RTL design, exploring the world of digital circuits. From understanding basic gates to tackling complex sequential circuits, these 100 days are helping me become a proficient RTL designer. ",0,Divya-i/100daysofRTL,674161748,Verilog,100daysofRTL,1961,1,2023-09-26 00:35:29+00:00,"['assertions', 'coverage-reports', 'eda', 'systemverilog', 'uvm-verification', 'verilog']",None
42,https://github.com/irajPatel/NIOS_II_SoftCoreProcessor.git,2023-08-10 13:21:41+00:00,Welcome to the CORES Softcore Processor repository! This repository showcases the development and integration of a powerful softcore processor into FPGA-based designs using Quartus Prime Lite (version 18.1) and Platform Designer (formerly known as Qsys).,0,irajPatel/NIOS_II_SoftCoreProcessor,676985602,Verilog,NIOS_II_SoftCoreProcessor,6023,1,2023-11-06 16:37:27+00:00,[],None
43,https://github.com/SantaCRC/verilog-template.git,2023-08-05 06:07:40+00:00,,5,SantaCRC/verilog-template,674908416,Verilog,verilog-template,16,1,2023-08-07 22:02:31+00:00,[],https://api.github.com/licenses/apache-2.0
44,https://github.com/saikumargadde2807/AES_encrption_and_decrption_using_Verilog.git,2023-08-08 12:07:17+00:00,"Advanced encryption standard (AES128, AES192, AES256) Encryption and Decryption Implementation in Verilog HDL",0,saikumargadde2807/AES_encrption_and_decrption_using_Verilog,676088912,Verilog,AES_encrption_and_decrption_using_Verilog,14,1,2023-08-17 10:12:48+00:00,"['aes-encryption', 'encryption-decryption', 'verilog-hdl']",None
45,https://github.com/NCUST-IC/Drivers-for-some-modules.git,2023-08-09 13:55:36+00:00,,0,NCUST-IC/Drivers-for-some-modules,676569138,Verilog,Drivers-for-some-modules,24151,1,2023-08-15 17:42:50+00:00,[],None
46,https://github.com/mohamedyakoub/RSA.git,2023-08-09 15:25:34+00:00,"Implementation of RSA encryption and decryption algorithm using: multiplier, BRAM, and a modulo on FGPA using Verilog",0,mohamedyakoub/RSA,676605097,Verilog,RSA,137,1,2023-08-12 23:00:03+00:00,[],None
47,https://github.com/mhamdy2712/Traffic-Light-Controller.git,2023-08-09 20:36:37+00:00,,0,mhamdy2712/Traffic-Light-Controller,676710138,Verilog,Traffic-Light-Controller,5,1,2023-08-12 13:23:28+00:00,[],None
48,https://github.com/DOUGIE2111/verilog.git,2023-08-10 09:23:22+00:00,,0,DOUGIE2111/verilog,676903801,Verilog,verilog,11,1,2023-12-01 08:16:22+00:00,[],None
49,https://github.com/GeetikaTP/100DaysofRTL.git,2023-08-07 16:27:51+00:00,The Verilog Codes for various circuits are implemented in Quartus Prime.,0,GeetikaTP/100DaysofRTL,675751217,Verilog,100DaysofRTL,1371,1,2023-08-15 04:29:21+00:00,"['digitalcircuit', 'verilog', 'waveform']",None
50,https://github.com/snehith-namgiri/FPGA-Controlled-Robotic-Arm-with-Six-Degree-of-Freedom.git,2023-08-05 05:11:04+00:00,,0,snehith-namgiri/FPGA-Controlled-Robotic-Arm-with-Six-Degree-of-Freedom,674897232,Verilog,FPGA-Controlled-Robotic-Arm-with-Six-Degree-of-Freedom,134,1,2024-01-17 15:01:11+00:00,[],None
51,https://github.com/Prajna-Ramamurthy/Pseudo-Random-Binary-Sequence-Generator.git,2023-08-07 11:33:20+00:00,Digital Design and Computer Organisation Mini-project,0,Prajna-Ramamurthy/Pseudo-Random-Binary-Sequence-Generator,675637588,Verilog,Pseudo-Random-Binary-Sequence-Generator,52,1,2024-03-07 15:40:34+00:00,"['college-project', 'computer-organization', 'ddco', 'digital-design', 'digital-design-and-computer-organization', 'field-programmable-gate-arrays', 'fpga', 'mini-project', 'prbs', 'prbs-generator', 'project', 'pseudo-random-generator', 'sequence-generation', 'sequence-generator', 'binary-sequence-generator', 'arm', 'arm7tdmi', 'verilog', 'verilog-project']",None
52,https://github.com/mohos455/Single-Cycle-MIPS-Processor.git,2023-07-28 02:07:41+00:00,,0,mohos455/Single-Cycle-MIPS-Processor,671726193,Verilog,Single-Cycle-MIPS-Processor,49,1,2023-09-05 05:06:39+00:00,[],None
53,https://github.com/YoussefAyman11/AES.git,2023-08-12 11:58:51+00:00,Verilog implementation of the symmetrical cipher AES-128,0,YoussefAyman11/AES,677717140,Verilog,AES,21,1,2023-08-13 23:22:50+00:00,[],None
54,https://github.com/androny1012/axi_stream_insert_header.git,2023-08-09 09:30:23+00:00,,1,androny1012/axi_stream_insert_header,676475264,Verilog,axi_stream_insert_header,69,1,2023-09-24 10:02:05+00:00,[],None
55,https://github.com/Damilola-Yinusa/Controller-FSM.git,2023-07-28 00:27:28+00:00,"The FSM have four external inputs START, ZERO_FLAG, CLK and RST and one output DONE to indicate that the calculation is completed. This component performs all the required control operations, providing three outputs: opcode, operand1 and operand2. ",0,Damilola-Yinusa/Controller-FSM,671704617,Verilog,Controller-FSM,5521,1,2023-07-28 02:12:03+00:00,[],None
56,https://github.com/mohamedyakoub/smart_tfl.git,2023-07-29 19:53:10+00:00,A smart traffic light that detects the presence of cars on two roads A (main road)and B and controls the lights depending on the sensors implemented with verilog on FPGA  ,0,mohamedyakoub/smart_tfl,672357693,Verilog,smart_tfl,3,1,2023-08-12 23:00:07+00:00,[],None
57,https://github.com/yasin-peker/Verilog-Implementation-of-D-Flip-Flops.git,2023-08-08 15:30:12+00:00,"In this project, 8 distinct Verilog HDL implementations of D flip-flops (DFFs), encompassing rising and falling edge triggers, synchronous and asynchronous resets are designed. ",0,yasin-peker/Verilog-Implementation-of-D-Flip-Flops,676170144,Verilog,Verilog-Implementation-of-D-Flip-Flops,18678,1,2023-08-10 08:10:49+00:00,[],https://api.github.com/licenses/mit
58,https://github.com/Vanderleicio/ProjetoSD01.git,2023-08-09 00:42:03+00:00,Projeto de Sensor digital em FPGA utilizando Comunicação Serial,0,Vanderleicio/ProjetoSD01,676327155,Verilog,ProjetoSD01,30847,1,2023-09-25 14:57:23+00:00,[],None
59,https://github.com/mhamdy2712/MIPS.git,2023-08-09 20:24:41+00:00,Single cycle MIPS processor,0,mhamdy2712/MIPS,676706922,Verilog,MIPS,9,1,2023-08-12 13:23:23+00:00,[],None
60,https://github.com/mhamdy2712/AES.git,2023-08-12 12:36:40+00:00,Encryption and Decryption 128bit using The Advanced Encryption Standard (AES) ,0,mhamdy2712/AES,677726187,Verilog,AES,16,1,2023-08-12 13:23:16+00:00,[],None
61,https://github.com/tonyalfred/Synchronous-FIFO-Design-and-Verification-using-Verilog-and-UVM.git,2023-08-04 14:36:13+00:00,"Build a UVM Environment for an a Synchronous FIFO. Concepts like virtual sequencer, reset agents, assertions were used.",0,tonyalfred/Synchronous-FIFO-Design-and-Verification-using-Verilog-and-UVM,674692326,Verilog,Synchronous-FIFO-Design-and-Verification-using-Verilog-and-UVM,18,1,2023-08-29 04:10:22+00:00,[],None
62,https://github.com/arRISCado/arRISCado.git,2023-08-04 18:22:29+00:00,Um sistema computacional RISC-V,0,arRISCado/arRISCado,674770152,Verilog,arRISCado,4533,1,2023-09-15 15:49:54+00:00,"['processor', 'risc-v', 'verilog']",https://api.github.com/licenses/gpl-3.0
63,https://github.com/weiliang822/MIPS-multicycle-54-instruction-CPU.git,2023-08-08 08:46:59+00:00,同济大学计科计算机组成原理课程设计 54条MIPS指令多周期CPU,0,weiliang822/MIPS-multicycle-54-instruction-CPU,676018761,Verilog,MIPS-multicycle-54-instruction-CPU,8645,1,2023-12-05 14:35:55+00:00,[],None
64,https://github.com/ronaldofreitas41/Trabalho_OAC_II.git,2023-07-27 21:19:13+00:00,Repositorio destinado ao trabalho realizado na disciplina de Organização e Arquitetura de Computadores 2,0,ronaldofreitas41/Trabalho_OAC_II,671666626,Verilog,Trabalho_OAC_II,470,1,2023-08-16 14:05:56+00:00,[],None
65,https://github.com/Mowent85/BUCT2023-ProductionPractice.git,2023-07-29 10:22:01+00:00,北京化工大学2023年通信工程生产实习,0,Mowent85/BUCT2023-ProductionPractice,672219499,Verilog,BUCT2023-ProductionPractice,2260,1,2023-07-29 10:24:09+00:00,[],None
66,https://github.com/zulisses/processador-uniciclo.git,2023-08-05 11:00:46+00:00,O projeto de um processador uniciclo feito com a linguagem de descrição de Hardware Verilog HDL como requisito da matéria de Arquitetura e Organização de Computadores II,0,zulisses/processador-uniciclo,674974633,Verilog,processador-uniciclo,16,1,2023-08-25 03:07:16+00:00,[],https://api.github.com/licenses/mit
67,https://github.com/3820bilal/Verilog.git,2023-08-05 05:09:23+00:00,This GitHub repository hosts a collection of straightforward Verilog examples and compact mini projects. These resources serve as a practical reference for learning Verilog programming and exploring its application in small-scale projects.,1,3820bilal/Verilog,674896904,Verilog,Verilog,16,1,2023-12-11 06:39:05+00:00,[],None
68,https://github.com/vaishnavi-parihar/100-days-of-rtl.git,2023-07-29 15:16:45+00:00,,0,vaishnavi-parihar/100-days-of-rtl,672292087,Verilog,100-days-of-rtl,35,1,2023-08-07 13:26:21+00:00,[],None
69,https://github.com/adityasingh6256/Lemming_game.git,2023-07-26 08:52:21+00:00,"Designing Lemming game using verilog and doing simultation ,Functional verification,RTL to GDS flow",0,adityasingh6256/Lemming_game,670972709,Verilog,Lemming_game,23,1,2023-07-31 15:54:48+00:00,[],https://api.github.com/licenses/apache-2.0
70,https://github.com/chiwei0828/2023_ICCAD_contest_problemA.git,2023-07-28 08:01:03+00:00,,0,chiwei0828/2023_ICCAD_contest_problemA,671820866,Verilog,2023_ICCAD_contest_problemA,60089,1,2023-11-28 00:33:48+00:00,[],None
71,https://github.com/mcleod-ideafix/mmu_z80.git,2023-07-30 21:27:53+00:00,"A simple MMu chip for Z80 and possibly, other CPUs.",0,mcleod-ideafix/mmu_z80,672669454,Verilog,mmu_z80,66,1,2023-07-30 22:34:44+00:00,[],https://api.github.com/licenses/gpl-3.0
72,https://github.com/Damilola-Yinusa/Synchronous-Logic-Implementation-using-Verilog-HDL.git,2023-07-28 00:53:22+00:00,"This repository contains the design and simulation of synchronous logic components such as D-Latch, D Flip-Flop, 4-Bit Shift Register, and a 4-Bit Synchronous Parallel Load Shift Register with Counter, all implemented using Verilog HDL.",0,Damilola-Yinusa/Synchronous-Logic-Implementation-using-Verilog-HDL,671709564,Verilog,Synchronous-Logic-Implementation-using-Verilog-HDL,15,1,2023-07-28 02:23:39+00:00,[],https://api.github.com/licenses/unlicense
73,https://github.com/MayurKumar-git/Pulse-Width-Modulation.git,2023-08-09 17:33:12+00:00,A Verilog HDL project to create a pwm with the use of counters,0,MayurKumar-git/Pulse-Width-Modulation,676652725,Verilog,Pulse-Width-Modulation,2,1,2023-08-09 17:36:39+00:00,[],None
74,https://github.com/Rodyker/MEH16.git,2023-08-06 23:56:17+00:00,,0,Rodyker/MEH16,675445698,Verilog,MEH16,342,1,2023-11-26 18:30:00+00:00,[],None
75,https://github.com/SonYujeong0327/8-Bits-CISC-MCU.git,2023-08-04 18:37:16+00:00,8-bits CISC MCU in verilog,0,SonYujeong0327/8-Bits-CISC-MCU,674774305,Verilog,8-Bits-CISC-MCU,5,1,2024-01-02 05:20:06+00:00,[],None
76,https://github.com/calebeden/CS429H-Verilog-notes.git,2023-08-02 03:12:46+00:00,Notes of single cycle CPU design from lecture,0,calebeden/CS429H-Verilog-notes,673612604,Verilog,CS429H-Verilog-notes,10,1,2024-03-22 00:26:22+00:00,[],None
77,https://github.com/samsam779/5G_MIMO_Demodulation.git,2023-08-01 14:15:08+00:00,CVSD (111-2) ,0,samsam779/5G_MIMO_Demodulation,673391243,Verilog,5G_MIMO_Demodulation,14912,1,2023-12-23 15:28:58+00:00,[],None
78,https://github.com/YoussefAyman11/MIPS.git,2023-08-02 18:42:47+00:00,Single Cycle MIPS Processor,0,YoussefAyman11/MIPS,673930558,Verilog,MIPS,36,1,2023-08-13 23:22:44+00:00,[],None
79,https://github.com/mhamdy2712/UART-Communication-Link.git,2023-08-09 19:56:50+00:00,,0,mhamdy2712/UART-Communication-Link,676698326,Verilog,UART-Communication-Link,18,1,2023-08-12 13:23:29+00:00,[],None
80,https://github.com/mhamdy2712/RSA-Algorithm.git,2023-08-09 20:11:38+00:00,,0,mhamdy2712/RSA-Algorithm,676702965,Verilog,RSA-Algorithm,275,1,2023-08-12 13:23:27+00:00,[],None
81,https://github.com/darshan-kr/Day-016-8bit-async_d_flip_flop.git,2023-08-05 13:53:40+00:00,"D flip flop is positive edge-triggered and asynchronous active high reset D flip flop. As soon as reset is triggered, the output gets reset to zero.",0,darshan-kr/Day-016-8bit-async_d_flip_flop,675016426,Verilog,Day-016-8bit-async_d_flip_flop,2,1,2023-08-06 12:25:18+00:00,[],None
82,https://github.com/Venky-26/AHB2APB_BRIDGE.git,2023-07-26 06:29:54+00:00,,0,Venky-26/AHB2APB_BRIDGE,670923582,Verilog,AHB2APB_BRIDGE,745,1,2023-07-30 06:23:05+00:00,[],None
83,https://github.com/Aziz-Ru/Digital-System-Design-verilog-.git,2023-08-12 09:38:52+00:00,Here I write code in verilog for DSD.,0,Aziz-Ru/Digital-System-Design-verilog-,677684837,Verilog,Digital-System-Design-verilog-,43503,1,2023-08-21 08:32:05+00:00,[],None
84,https://github.com/HU-Xu-yang/CNN-accelerator-circuit.git,2023-07-26 08:58:46+00:00,THU-Integreted Circuit Design and Methodology-lab assignment @2021 autumn ,0,HU-Xu-yang/CNN-accelerator-circuit,670975179,Verilog,CNN-accelerator-circuit,24029,1,2024-01-01 13:17:40+00:00,[],https://api.github.com/licenses/mit
85,https://github.com/Y006/Single_Cycle_RV32I_CPU.git,2023-07-26 03:33:17+00:00,单周期RV32I指令集CPU实现,0,Y006/Single_Cycle_RV32I_CPU,670876687,Verilog,Single_Cycle_RV32I_CPU,86,1,2024-03-14 06:01:28+00:00,[],None
86,https://github.com/laksh-ms/PhysicalDesign_using_OpenLane_Sky130.git,2023-08-10 12:11:50+00:00,,0,laksh-ms/PhysicalDesign_using_OpenLane_Sky130,676960002,Verilog,PhysicalDesign_using_OpenLane_Sky130,40428,1,2023-08-21 08:17:10+00:00,[],None
87,https://github.com/PJDissanayake/Debouncing_push_buttons.git,2023-08-12 17:43:27+00:00,"This repository features a Verilog design for a push-button circuit that effectively eliminates the bouncing effect. Our solution generates clean step signals on both button press and release, ensuring reliable signal generation in the presence of noise.",0,PJDissanayake/Debouncing_push_buttons,677807582,Verilog,Debouncing_push_buttons,2,1,2023-08-17 15:24:16+00:00,[],None
88,https://github.com/kylekim00/DE1_Verilog_Demo.git,2023-08-11 01:16:16+00:00,Verilog Demo on DE1 Board calculating one number at a time. Conclude hand-made Binary to Decimal module,0,kylekim00/DE1_Verilog_Demo,677193984,Verilog,DE1_Verilog_Demo,4,1,2024-02-17 17:41:18+00:00,[],None
89,https://github.com/arhamhashmi01/verilog_practice.git,2023-08-10 18:18:45+00:00,,0,arhamhashmi01/verilog_practice,677096510,Verilog,verilog_practice,12,1,2024-03-19 06:38:43+00:00,[],None
90,https://github.com/purveshthummar/RAM_and_ROM.git,2023-08-09 04:36:48+00:00,Design 64x4 bit RAM and 16x4 bit ROM using verilog.,0,purveshthummar/RAM_and_ROM,676382331,Verilog,RAM_and_ROM,15,1,2024-03-23 07:11:15+00:00,[],None
91,https://github.com/Shahiraosama/CRC.git,2023-08-06 09:49:02+00:00,Cyclic Redundancy Check ,0,Shahiraosama/CRC,675251082,Verilog,CRC,26,1,2023-09-06 17:26:16+00:00,[],None
92,https://github.com/Utkarsh-S-1110/behavioral_lvl_design_chess_clock.git,2023-07-30 19:28:36+00:00,,0,Utkarsh-S-1110/behavioral_lvl_design_chess_clock,672645742,Verilog,behavioral_lvl_design_chess_clock,236,1,2023-08-17 19:37:41+00:00,[],https://api.github.com/licenses/mit
93,https://github.com/pesadaum/cademics-digital-ic-design.git,2023-08-08 20:13:01+00:00,Repository with verilog modules developed in the CADEMICS digital IC design course by SBMicro and Cadence Design Systems,0,pesadaum/cademics-digital-ic-design,676267368,Verilog,cademics-digital-ic-design,193,1,2023-09-04 18:36:56+00:00,[],None
94,https://github.com/Ibrahim131313/ALU_16bits.git,2023-08-08 14:52:37+00:00,,0,Ibrahim131313/ALU_16bits,676155191,Verilog,ALU_16bits,138,1,2023-08-08 20:48:24+00:00,[],None
95,https://github.com/Ragineeiitb/4-bit-signed-number-multiplication-using-Booth-Multiplier-Algorithm.git,2023-08-09 14:11:43+00:00,,0,Ragineeiitb/4-bit-signed-number-multiplication-using-Booth-Multiplier-Algorithm,676575610,Verilog,4-bit-signed-number-multiplication-using-Booth-Multiplier-Algorithm,14,1,2023-08-09 14:13:25+00:00,[],None
96,https://github.com/Ragineeiitb/8-bit-Wallace-Multiplier.git,2023-08-09 14:04:44+00:00,,0,Ragineeiitb/8-bit-Wallace-Multiplier,676572843,Verilog,8-bit-Wallace-Multiplier,5,1,2023-08-09 14:13:26+00:00,[],None
97,https://github.com/Yunshui-Bai/RISC-V-CPU.git,2023-08-12 13:57:05+00:00,,0,Yunshui-Bai/RISC-V-CPU,677746250,Verilog,RISC-V-CPU,1323,1,2024-01-11 07:39:05+00:00,[],None
98,https://github.com/linux1299/oscpu.git,2023-08-05 01:36:44+00:00,,0,linux1299/oscpu,674857929,Verilog,oscpu,7656,1,2023-11-02 15:23:37+00:00,[],None
99,https://github.com/saiprasanna12345/Digital_PID_controller.git,2023-07-30 14:19:59+00:00,implemented PID control loop using Verilog HDL,0,saiprasanna12345/Digital_PID_controller,672566540,Verilog,Digital_PID_controller,5,1,2024-03-15 07:10:30+00:00,[],None
100,https://github.com/Nbddyy/FPGA-ChineseMedicine.git,2023-08-09 13:16:51+00:00,The Study On ChineseMedicine,0,Nbddyy/FPGA-ChineseMedicine,676553714,Verilog,FPGA-ChineseMedicine,6451,1,2024-03-13 09:45:12+00:00,[],None
101,https://github.com/YoussefAyman11/UART.git,2023-07-31 13:23:41+00:00,UART Communication Link Implementation on FPGA using Verilog.,0,YoussefAyman11/UART,672923757,Verilog,UART,9,1,2023-08-13 23:23:12+00:00,[],None
102,https://github.com/mohamedyakoub/MIPS.git,2023-08-05 20:34:29+00:00,A single cycle 32 MIPS Processor,0,mohamedyakoub/MIPS,675114193,Verilog,MIPS,28,1,2023-08-12 23:00:06+00:00,[],None
103,https://github.com/wabc943143699/Rotary-Encoder-MK991-Driver.git,2023-08-07 11:09:29+00:00,（Verilog）旋转编码器MK991的驱动程序/Rotary Encoder MK991 Driver,0,wabc943143699/Rotary-Encoder-MK991-Driver,675629329,Verilog,Rotary-Encoder-MK991-Driver,5,1,2023-08-07 11:22:20+00:00,[],None
104,https://github.com/MohabAmged/Mips_MultiCycle.git,2023-07-31 18:01:50+00:00,,0,MohabAmged/Mips_MultiCycle,673032952,Verilog,Mips_MultiCycle,16,1,2023-07-31 20:09:58+00:00,[],None
105,https://github.com/eong0/neuromorphic_system.git,2023-08-10 07:20:32+00:00,,0,eong0/neuromorphic_system,676861642,Verilog,neuromorphic_system,1,1,2023-12-27 11:10:11+00:00,[],None
106,https://github.com/atfox272/RF_Transceiver.git,2023-07-28 10:29:40+00:00,Clone behavior of E32 (RF transceiver) ,0,atfox272/RF_Transceiver,671870390,Verilog,RF_Transceiver,49271,1,2023-11-19 18:51:51+00:00,[],None
107,https://github.com/AnkithaTalagapu/Router_1X3_Verilog.git,2023-08-05 09:56:10+00:00,Routing is the process of moving a packet of data from source to destination and enables messages to pass from one computer to another and eventually reach the target machine. A router is a networking device that forwards data packets between computer networks.,0,AnkithaTalagapu/Router_1X3_Verilog,674959324,Verilog,Router_1X3_Verilog,2304,1,2023-09-06 08:49:34+00:00,[],None
108,https://github.com/amrkhalid-star902/FPGA_based_AES_Core.git,2023-08-10 13:20:01+00:00,"This project presents an Advanced Encryption Standard (AES) core implemented in Verilog. The AES core provides a hardware-accelerated solution for encrypting and decrypting data using the AES algorithm. AES is a widely adopted symmetric encryption algorithm, offering a high level of security and efficiency.",0,amrkhalid-star902/FPGA_based_AES_Core,676984975,Verilog,FPGA_based_AES_Core,21,1,2024-01-29 12:24:00+00:00,[],None
109,https://github.com/Chengwu0203/ICDC_LASER.git,2023-08-06 14:46:08+00:00,,0,Chengwu0203/ICDC_LASER,675323583,Verilog,ICDC_LASER,957,1,2023-12-17 09:58:18+00:00,[],None
110,https://github.com/moonjayden/430.315a.git,2023-07-26 02:11:11+00:00,SNU 430.315A : Design UART Communication considering Metastability Issues / Design Fully Connected Layer in CNN for Image Classification / Design CNN(Conv2d Layers) Image Classifier Accerlerator,0,moonjayden/430.315a,670856434,Verilog,430.315a,17472,1,2023-07-31 02:42:02+00:00,[],None
111,https://github.com/YoussefAyman11/sequence_detector.git,2023-07-30 10:45:00+00:00,An overlapping two patterns sequence detector,0,YoussefAyman11/sequence_detector,672512732,Verilog,sequence_detector,2,1,2023-08-13 23:23:13+00:00,[],None
112,https://github.com/yuuuuuuan/trafficlight.git,2023-07-30 13:44:54+00:00,,0,yuuuuuuan/trafficlight,672556997,Verilog,trafficlight,2,1,2023-08-02 13:43:11+00:00,[],None
113,https://github.com/Hoai-Baoo/CNC_pulse_gen.git,2023-08-03 11:24:28+00:00,An exercise in Embedded Control Systems Course at HCMUT.,0,Hoai-Baoo/CNC_pulse_gen,674201794,Verilog,CNC_pulse_gen,1193,1,2023-09-13 07:59:31+00:00,[],None
114,https://github.com/MikukuOvO/PipelineCPU.git,2023-08-10 16:18:08+00:00,A pipelined CPU implemented by Verilog,0,MikukuOvO/PipelineCPU,677053974,Verilog,PipelineCPU,152,1,2024-01-12 15:58:49+00:00,[],None
115,https://github.com/NMeghaShree/Verilog-Modeling-of-MIPS-32-bit-processor.git,2023-08-04 17:50:47+00:00,,0,NMeghaShree/Verilog-Modeling-of-MIPS-32-bit-processor,674760677,Verilog,Verilog-Modeling-of-MIPS-32-bit-processor,5,1,2023-08-04 18:14:55+00:00,[],None
116,https://github.com/jemo07/MyFPGA_FORTH.git,2023-07-30 20:40:58+00:00,FPGA FORTH CPU,0,jemo07/MyFPGA_FORTH,672660624,Verilog,MyFPGA_FORTH,36,1,2023-10-26 18:14:59+00:00,[],None
117,https://github.com/weizema/vcu_verify.git,2023-07-29 03:45:34+00:00,,0,weizema/vcu_verify,672137932,Verilog,vcu_verify,8999,1,2023-09-04 04:23:39+00:00,[],None
118,https://github.com/mhamdy2712/Washing-Machine-Controller.git,2023-08-12 12:39:32+00:00,Washing machine controller with ability to pause spinning and double wash,0,mhamdy2712/Washing-Machine-Controller,677726839,Verilog,Washing-Machine-Controller,3,1,2023-08-12 13:23:30+00:00,[],None
119,https://github.com/PebPeb/BEAN-2.git,2023-08-11 20:34:38+00:00,From the creator of the BEAN-1 comes the BEAN-2.... ,0,PebPeb/BEAN-2,677533880,Verilog,BEAN-2,617,1,2023-08-24 03:46:16+00:00,[],None
120,https://github.com/greatxrider/fpga-vhdl-verilog-programming-lab-projects.git,2023-08-07 07:14:28+00:00,Projects using Intel Quartus for FPGA-VHDL-VERILOG ,0,greatxrider/fpga-vhdl-verilog-programming-lab-projects,675547695,Verilog,fpga-vhdl-verilog-programming-lab-projects,17884,1,2024-04-08 06:37:37+00:00,[],None
121,https://github.com/walker99999/CMSDK-CM0.git,2023-08-01 09:48:28+00:00,,0,walker99999/CMSDK-CM0,673289874,Verilog,CMSDK-CM0,8345,1,2023-09-16 02:34:38+00:00,[],None
122,https://github.com/yuuuuuuan/FPGA_VGA.git,2023-08-02 13:08:15+00:00,,0,yuuuuuuan/FPGA_VGA,673803301,Verilog,FPGA_VGA,7,1,2023-08-02 13:43:06+00:00,[],None
123,https://github.com/carson-m/PipelineCPU.git,2023-08-11 17:01:21+00:00,THU EE 2023-Summer Coursework,0,carson-m/PipelineCPU,677475415,Verilog,PipelineCPU,21417,1,2023-11-06 08:37:55+00:00,[],https://api.github.com/licenses/gpl-3.0
124,https://github.com/abrarzuhaer/VERILOG_VLSI.git,2023-08-01 20:38:33+00:00,"Shift Register, Multiplexer, Flipflop, Arithmetic Logic Unit, Comparator, Counter, Finite State Machine",0,abrarzuhaer/VERILOG_VLSI,673525427,Verilog,VERILOG_VLSI,15,1,2023-08-01 20:59:36+00:00,[],None
125,https://github.com/GentlemanAMS/SHA256-Accelerator-Hardware.git,2023-08-09 12:47:45+00:00,This project aims at implementing an hardware accelerator peripheral in verilog for SHA256 hashing algorithm with AXI4 interfacing with PicoRV32 CPU. The project focuses on multiple implementations of the accelerator with gradual improvements through spatial pre-computation techniques and pipelining. ,0,GentlemanAMS/SHA256-Accelerator-Hardware,676542902,Verilog,SHA256-Accelerator-Hardware,2189,1,2023-09-30 13:55:45+00:00,[],None
126,https://github.com/Naresh1682/100daysofRTL.git,2023-07-30 16:54:57+00:00,,0,Naresh1682/100daysofRTL,672608426,Verilog,100daysofRTL,46,1,2023-07-31 09:58:50+00:00,[],None
127,https://github.com/h-kaushik/scalable-cordic.git,2023-08-08 16:30:10+00:00,Self-project on describing CORDIC algorithm for calculation of arctan(y/x) using Verilog.,0,h-kaushik/scalable-cordic,676193510,Verilog,scalable-cordic,3,1,2023-10-16 09:40:36+00:00,"['cordic-algorithm', 'verilog', 'verilog-hdl']",None
128,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-26.git,2023-08-08 14:38:32+00:00,"T FLIPFLOP USING SR,JK,D FLIPFLOPS",0,rajitha0119/100-DAYS-OF-RTL-DAY-26,676149469,Verilog,100-DAYS-OF-RTL-DAY-26,646,1,2023-10-10 00:12:31+00:00,[],None
129,https://github.com/siddhant23tomar/Dual-Clock-Asynchronous-FIFO.git,2023-08-07 18:06:42+00:00,Verilog Code of the FIFO based on work of clifford cummings and its simulation specification.,0,siddhant23tomar/Dual-Clock-Asynchronous-FIFO,675785804,Verilog,Dual-Clock-Asynchronous-FIFO,172,1,2024-01-02 18:37:40+00:00,[],None
130,https://github.com/Juansuarezc/Basys3-Keyboard.git,2023-07-31 06:20:46+00:00,Sistemas Digitales | Universidad Industrial de Santander,0,Juansuarezc/Basys3-Keyboard,672773917,Verilog,Basys3-Keyboard,693,0,2023-07-31 06:49:50+00:00,[],None
131,https://github.com/AfifehGhaemnia/DMuX_VSDVersion.git,2023-07-29 19:42:41+00:00,,0,AfifehGhaemnia/DMuX_VSDVersion,672355529,Verilog,DMuX_VSDVersion,11912,0,2023-07-29 19:44:10+00:00,[],https://api.github.com/licenses/apache-2.0
132,https://github.com/RonKrakovsky/FIR_Filter_FPGA.git,2023-07-27 10:50:40+00:00,,0,RonKrakovsky/FIR_Filter_FPGA,671451428,Verilog,FIR_Filter_FPGA,72385,0,2023-07-30 13:58:47+00:00,[],None
133,https://github.com/failaip12/digsys-Projekat.git,2023-07-27 18:23:13+00:00,Verilog project for measuring the reaction time,0,failaip12/digsys-Projekat,671616517,Verilog,digsys-Projekat,21,0,2023-08-24 05:09:52+00:00,[],None
134,https://github.com/Rishabhjain33/UART-using-Verilog.git,2023-07-28 17:53:24+00:00,,0,Rishabhjain33/UART-using-Verilog,672021103,Verilog,UART-using-Verilog,11,0,2023-07-28 18:03:34+00:00,[],None
135,https://github.com/Ashton43/VENDING_MACHINE.git,2023-07-26 10:47:42+00:00,,0,Ashton43/VENDING_MACHINE,671014253,Verilog,VENDING_MACHINE,221,0,2023-07-26 10:54:57+00:00,[],None
136,https://github.com/HarineeRathod/Testbench.git,2023-07-30 09:45:29+00:00,,0,HarineeRathod/Testbench,672498968,Verilog,Testbench,298,0,2023-08-13 05:29:50+00:00,[],None
137,https://github.com/00853029/IC_Contest_91.git,2023-07-29 07:57:02+00:00,,0,00853029/IC_Contest_91,672186925,Verilog,IC_Contest_91,873,0,2023-07-29 08:19:52+00:00,[],None
138,https://github.com/Subham8166/VLSI_PROJECT.git,2023-07-29 18:49:06+00:00,AHB to APB Bridge Controller using Verilog ,0,Subham8166/VLSI_PROJECT,672344261,Verilog,VLSI_PROJECT,591,0,2023-07-29 19:00:45+00:00,[],None
139,https://github.com/Revati29/4-bit-Binary-Calculator-using-FPGA.git,2023-07-29 10:07:45+00:00,"This project fulfills the aim of creating a basic calculator which takes decimal base  numbers up to 15 as inputs and can perform unsigned addition, subtraction, multiplication and division (only quotient) based on user selection and display the  output decimal number to the user, sign is displayed for subtraction only. ",0,Revati29/4-bit-Binary-Calculator-using-FPGA,672216219,Verilog,4-bit-Binary-Calculator-using-FPGA,1,0,2023-07-29 10:10:09+00:00,[],None
140,https://github.com/Waynelwb/single_cycle_cpu.git,2023-07-30 07:44:12+00:00,Single cycle CPU using MIPS instruction set,0,Waynelwb/single_cycle_cpu,672471744,Verilog,single_cycle_cpu,12113,0,2023-07-30 11:38:08+00:00,[],None
141,https://github.com/ccapen/Verilog-UART.git,2023-07-30 20:37:33+00:00,UART transceiver using Verilog HDL,0,ccapen/Verilog-UART,672659964,Verilog,Verilog-UART,19,0,2023-07-30 20:46:08+00:00,[],https://api.github.com/licenses/gpl-3.0
142,https://github.com/MostafaEssamAbdelhameed/CRC.git,2023-08-01 18:21:43+00:00,,0,MostafaEssamAbdelhameed/CRC,673484463,Verilog,CRC,500,0,2023-08-01 18:23:20+00:00,[],None
143,https://github.com/msaideroglu/caravel_efpga.git,2023-08-01 22:47:09+00:00,,0,msaideroglu/caravel_efpga,673555229,Verilog,caravel_efpga,11911,0,2023-08-01 22:48:34+00:00,[],https://api.github.com/licenses/apache-2.0
144,https://github.com/gunavant-s/D_Flip_Flop_-Day-009.git,2023-07-28 02:52:01+00:00,A D Flip-Flop is a basic building block in digital circuit design that stores a single bit of data. The flip flop in verilog can be created by using always @ posedge clk.,0,gunavant-s/D_Flip_Flop_-Day-009,671736871,Verilog,D_Flip_Flop_-Day-009,57,0,2023-07-28 02:52:31+00:00,[],None
145,https://github.com/Eduard0Castro/Verilog-Project.git,2023-07-28 02:37:39+00:00,Projeto de uma unidade lógica e aritmética baseada em uma sequência de operações para a placa DE10 - LITE,0,Eduard0Castro/Verilog-Project,671733383,Verilog,Verilog-Project,5118,0,2023-07-28 02:50:41+00:00,[],None
146,https://github.com/guiinow/processador-mips.git,2023-07-28 01:17:31+00:00,"Implementação em linguagem de descrição de hardware da ULA, Unidade de controle da ULA e datapath do processador MIPS",0,guiinow/processador-mips,671714744,Verilog,processador-mips,6,0,2023-07-28 01:18:40+00:00,[],None
147,https://github.com/kaustubhdex/soda_dispenser_machine.git,2023-08-02 15:56:41+00:00,Soda dispenser machine based on rtl design. programmed in quartus prime software.,0,kaustubhdex/soda_dispenser_machine,673870276,Verilog,soda_dispenser_machine,127,0,2023-08-02 15:58:15+00:00,[],None
148,https://github.com/BHa2R00/pdm_modulation.git,2023-08-11 08:22:59+00:00,"verilog implement of pdm modulator and demodulator for pwm, audio and infrared remote",1,BHa2R00/pdm_modulation,677301481,Verilog,pdm_modulation,1692,0,2023-08-28 12:09:23+00:00,[],https://api.github.com/licenses/bsd-2-clause
149,https://github.com/YunJoongChul/Verilog-layer-08.03-2DEND.git,2023-08-03 03:22:15+00:00,,0,YunJoongChul/Verilog-layer-08.03-2DEND,674052975,Verilog,Verilog-layer-08.03-2DEND,25,0,2023-08-03 03:22:42+00:00,[],None
150,https://github.com/morenes/aes.git,2023-08-05 20:15:28+00:00,Github version of AES accelerator from opencores.org/projects/aes-128_pipelined_encryption,0,morenes/aes,675110732,Verilog,aes,11,0,2023-08-05 20:16:19+00:00,[],None
151,https://github.com/grachale/microarchitecture_RISC-V_ISA.git,2023-08-06 17:40:43+00:00,Design of a Processor Microarchitecture Supporting a Chosen Subset of RISC-V ISA Instructions.,0,grachale/microarchitecture_RISC-V_ISA,675372632,Verilog,microarchitecture_RISC-V_ISA,89,0,2023-08-06 18:20:33+00:00,"['assembly', 'isa', 'microarchitecture', 'risc-v', 'verilog']",None
152,https://github.com/Akshor/mwscas.git,2023-08-06 17:59:13+00:00,,0,Akshor/mwscas,675377401,Verilog,mwscas,11911,0,2023-08-06 18:00:40+00:00,[],https://api.github.com/licenses/apache-2.0
153,https://github.com/amoee-5272/Image_Processing_Engine.git,2023-08-07 12:55:09+00:00,,0,amoee-5272/Image_Processing_Engine,675667237,Verilog,Image_Processing_Engine,7070,0,2023-08-07 13:09:36+00:00,[],None
154,https://github.com/cebherrera/Cache.git,2023-08-08 17:54:59+00:00,Laboratorio 6 del Curso Laboratorio de Digitales 2 - Cache con Politicas de Remplazo,0,cebherrera/Cache,676223753,Verilog,Cache,240,0,2023-08-09 23:37:10+00:00,[],https://api.github.com/licenses/mit
155,https://github.com/CroosJJSE/basic-switch-and-Led.git,2023-08-08 08:22:46+00:00,basic fpga implantation ,0,CroosJJSE/basic-switch-and-Led,676010167,Verilog,basic-switch-and-Led,0,0,2023-08-08 08:24:11+00:00,[],None
156,https://github.com/CroosJJSE/basic-blinking-LED.git,2023-08-08 08:26:02+00:00,basic fpga implantation ,0,CroosJJSE/basic-blinking-LED,676011349,Verilog,basic-blinking-LED,1,0,2023-08-08 08:27:23+00:00,[],None
157,https://github.com/YunJoongChul/Verilog-layer1-08-04-end.git,2023-08-04 05:16:06+00:00,,0,YunJoongChul/Verilog-layer1-08-04-end,674499975,Verilog,Verilog-layer1-08-04-end,28,0,2023-08-04 05:17:02+00:00,[],None
158,https://github.com/ram2k1/8BIT-CPU.git,2023-08-05 06:34:34+00:00,Simple 8-bit CPU,0,ram2k1/8BIT-CPU,674913873,Verilog,8BIT-CPU,8,0,2023-08-05 07:44:03+00:00,[],None
159,https://github.com/kaze-mio/riscv-cpu.git,2023-08-06 13:27:39+00:00,A simple implementation of a pipelined RISC-V CPU.,0,kaze-mio/riscv-cpu,675302736,Verilog,riscv-cpu,6,0,2023-08-06 13:37:31+00:00,[],None
160,https://github.com/ibrahim0moakkit/pair_detection.git,2023-08-05 21:41:06+00:00,moore machine,0,ibrahim0moakkit/pair_detection,675125797,Verilog,pair_detection,1,0,2023-08-05 21:42:13+00:00,[],None
161,https://github.com/dsheffie/des_cracker.git,2023-08-08 14:28:48+00:00,,0,dsheffie/des_cracker,676145393,Verilog,des_cracker,9,0,2023-08-08 14:38:54+00:00,[],None
162,https://github.com/kaustubhdex/laser_based_distance_measure.git,2023-08-07 16:14:20+00:00,laser based distance measuring system using verilog rtl programmed on quartus prime software,0,kaustubhdex/laser_based_distance_measure,675745790,Verilog,laser_based_distance_measure,143,0,2023-08-07 16:18:34+00:00,[],https://api.github.com/licenses/gpl-3.0
163,https://github.com/JavidChaji/FUM-Computer-Architecture-Single-Cycle-MIPS-Processor.git,2023-08-04 08:43:03+00:00,"Single Cycle MIPS Processor implementation, Computer Assignment for Computer Architecture course in Ferdowsi University of Mashhad",0,JavidChaji/FUM-Computer-Architecture-Single-Cycle-MIPS-Processor,674562457,Verilog,FUM-Computer-Architecture-Single-Cycle-MIPS-Processor,745,0,2023-10-30 04:36:36+00:00,"['computer-architecture', 'ferdowsi-university-of-mashhad', 'mips', 'mips-architecture', 'mips-processor', 'processor', 'verilog', 'single-cycle', 'single-cycle-processor', 'fum']",https://api.github.com/licenses/mit
164,https://github.com/yiocean/NYCU-2023-Spring_Digital-Circuit-Design.git,2023-08-08 14:31:49+00:00,,0,yiocean/NYCU-2023-Spring_Digital-Circuit-Design,676146617,Verilog,NYCU-2023-Spring_Digital-Circuit-Design,2572,0,2023-12-02 14:39:03+00:00,[],None
165,https://github.com/andyhandsome666/EECS101001.git,2023-08-07 02:20:55+00:00,Logic Design - Verilog Project,0,andyhandsome666/EECS101001,675472051,Verilog,EECS101001,1586,0,2024-02-07 13:31:49+00:00,[],None
166,https://github.com/djkabutar/cl2verilog.git,2023-08-06 08:55:31+00:00,OpenCL kernel to verilog,0,djkabutar/cl2verilog,675239324,Verilog,cl2verilog,20,0,2023-08-07 13:11:58+00:00,"['communication', 'opencl', 'verilog']",https://api.github.com/licenses/mit
167,https://github.com/AbdelrahmanKhaled826/diffrent_type_of_shift_register.git,2023-08-08 05:29:17+00:00,,0,AbdelrahmanKhaled826/diffrent_type_of_shift_register,675953463,Verilog,diffrent_type_of_shift_register,357,0,2023-12-18 15:35:38+00:00,[],None
168,https://github.com/ivbakula/simple-cpu-implementation.git,2023-07-28 20:48:12+00:00,,0,ivbakula/simple-cpu-implementation,672067392,Verilog,simple-cpu-implementation,45,0,2024-01-01 16:15:37+00:00,[],None
169,https://github.com/deilt/code_training.git,2023-08-10 07:09:10+00:00,,0,deilt/code_training,676858034,Verilog,code_training,2,0,2023-08-10 07:16:49+00:00,[],None
170,https://github.com/MuhammadWamiq003/verilog-practice.git,2023-08-07 10:53:07+00:00,,0,MuhammadWamiq003/verilog-practice,675623731,Verilog,verilog-practice,23,0,2023-08-08 07:51:38+00:00,[],None
171,https://github.com/qyw-clara/ECE243_labs.git,2023-08-02 00:53:01+00:00,ECE243 labs ,0,qyw-clara/ECE243_labs,673579835,Verilog,ECE243_labs,371,0,2023-08-02 02:38:13+00:00,[],None
172,https://github.com/yqin7/CPU-Design.git,2023-08-02 01:22:59+00:00,,0,yqin7/CPU-Design,673586193,Verilog,CPU-Design,133,0,2023-08-02 01:23:54+00:00,[],None
173,https://github.com/Manikanta-IITB/Implementation_of_256_bit_AES_Encryption_and_Decryption_Standard.git,2023-08-01 11:39:41+00:00,This project shows the design of 256-bit AES Encryption and Decryption Algorithms,0,Manikanta-IITB/Implementation_of_256_bit_AES_Encryption_and_Decryption_Standard,673329388,Verilog,Implementation_of_256_bit_AES_Encryption_and_Decryption_Standard,95,0,2023-08-07 20:00:43+00:00,[],None
174,https://github.com/atharvshimpi/Multicycle-MIPS.git,2023-07-28 09:22:53+00:00,,0,atharvshimpi/Multicycle-MIPS,671847799,Verilog,Multicycle-MIPS,7709,0,2023-07-29 20:52:45+00:00,[],None
175,https://github.com/Deviloper007/CLA_Multiplier.git,2023-07-28 10:52:48+00:00,,0,Deviloper007/CLA_Multiplier,671877867,Verilog,CLA_Multiplier,3,0,2023-07-29 10:49:56+00:00,[],None
176,https://github.com/XorTrue/LoongArch_32limited_CPU_new.git,2023-08-03 11:03:38+00:00,,0,XorTrue/LoongArch_32limited_CPU_new,674194559,Verilog,LoongArch_32limited_CPU_new,50,0,2023-08-03 11:18:06+00:00,[],None
177,https://github.com/HarshitMongre/25daysVLSIchallange.git,2023-08-01 06:57:27+00:00,this is a series of 25 days where I try to implement Verilog codes ,0,HarshitMongre/25daysVLSIchallange,673229719,Verilog,25daysVLSIchallange,1,0,2023-08-01 07:01:25+00:00,[],None
178,https://github.com/chhsiao121/A-16-bit-RISC-CPU.git,2023-08-01 07:36:55+00:00,,0,chhsiao121/A-16-bit-RISC-CPU,673243087,Verilog,A-16-bit-RISC-CPU,3915,0,2023-08-01 07:39:31+00:00,[],None
179,https://github.com/Aryanarc232/Image-Processing-using-Verilog.git,2023-08-03 17:48:23+00:00," To perform various image processing actions such as brightness control, threshold control and blurring of the image,.",0,Aryanarc232/Image-Processing-using-Verilog,674339623,Verilog,Image-Processing-using-Verilog,2648,0,2023-08-03 17:51:33+00:00,[],None
180,https://github.com/notlongbottom/Digital_Dice.git,2023-08-03 16:37:56+00:00,,0,notlongbottom/Digital_Dice,674316430,Verilog,Digital_Dice,3,0,2023-08-03 18:12:45+00:00,[],None
181,https://github.com/YunJoongChul/Verilog-layer1-MPtest.git,2023-08-04 10:22:13+00:00,,0,YunJoongChul/Verilog-layer1-MPtest,674596158,Verilog,Verilog-layer1-MPtest,12,0,2023-08-04 10:22:39+00:00,[],None
182,https://github.com/ctbram/sseg_display_controller.git,2023-08-05 21:53:42+00:00,Verilog code to implement 7-seg controller based on simply embedded tutorial.  nexsys II FPGA Board was used,0,ctbram/sseg_display_controller,675127799,Verilog,sseg_display_controller,3,0,2023-08-05 22:03:02+00:00,[],None
183,https://github.com/roman-butsenko/Blinking-LED-on-basys-3.git,2023-08-05 14:00:40+00:00,Blinking LED on basys 3,0,roman-butsenko/Blinking-LED-on-basys-3,675018250,Verilog,Blinking-LED-on-basys-3,383,0,2023-08-05 15:09:58+00:00,[],None
184,https://github.com/xpww/Eyeriss.git,2023-08-07 12:00:40+00:00,,0,xpww/Eyeriss,675647322,Verilog,Eyeriss,56,0,2023-08-07 12:00:47+00:00,[],None
185,https://github.com/amirtha-2002/HDLBits_Problem_set_solution.git,2023-08-07 05:44:39+00:00,,0,amirtha-2002/HDLBits_Problem_set_solution,675520214,Verilog,HDLBits_Problem_set_solution,18,0,2023-08-07 05:46:44+00:00,[],None
186,https://github.com/mhamdy2712/Pattern_Detector.git,2023-07-30 02:43:19+00:00,,0,mhamdy2712/Pattern_Detector,672418514,Verilog,Pattern_Detector,1,0,2023-07-30 02:43:59+00:00,[],None
187,https://github.com/aadeesh06/Verilog.git,2023-08-08 17:21:55+00:00,This repo contains different types of models and their testbenches in Verilog. It can be used for learing and practicing verilog.,0,aadeesh06/Verilog,676212436,Verilog,Verilog,366,0,2023-08-28 16:08:09+00:00,[],None
188,https://github.com/kaustubhdex/serial_fir_filter.git,2023-07-27 17:16:25+00:00,RTL level verilog sources for serial fir filter designed on quartus prime.,0,kaustubhdex/serial_fir_filter,671594146,Verilog,serial_fir_filter,1668,0,2023-07-28 15:09:11+00:00,[],https://api.github.com/licenses/gpl-3.0
189,https://github.com/00853029/IC_Contest_103.git,2023-07-29 08:20:49+00:00,,0,00853029/IC_Contest_103,672192226,Verilog,IC_Contest_103,12454,0,2023-07-29 08:30:06+00:00,[],None
190,https://github.com/pmendozap/testingcaravel.git,2023-08-04 17:25:42+00:00,,0,pmendozap/testingcaravel,674753121,Verilog,testingcaravel,90514,0,2023-08-04 17:27:31+00:00,[],https://api.github.com/licenses/apache-2.0
191,https://github.com/snehith-namgiri/RTL-to-GDS-flow-of-16-bit-Parity-generator-and-checker.git,2023-08-05 05:14:12+00:00,,0,snehith-namgiri/RTL-to-GDS-flow-of-16-bit-Parity-generator-and-checker,674897814,Verilog,RTL-to-GDS-flow-of-16-bit-Parity-generator-and-checker,1159,0,2023-08-05 05:15:41+00:00,[],None
192,https://github.com/ravivarmagsi/googleshuttle_demo.git,2023-08-08 11:13:12+00:00,,0,ravivarmagsi/googleshuttle_demo,676069515,Verilog,googleshuttle_demo,11913,0,2023-08-08 11:14:40+00:00,[],https://api.github.com/licenses/apache-2.0
193,https://github.com/isomoye/reram_test.git,2023-08-07 00:04:55+00:00,,0,isomoye/reram_test,675446993,Verilog,reram_test,11912,0,2023-08-07 00:06:23+00:00,[],https://api.github.com/licenses/apache-2.0
194,https://github.com/sharma-archit/Verilog-Projects.git,2023-08-01 20:59:17+00:00,VHDL projects converted into Verilog,0,sharma-archit/Verilog-Projects,673531091,Verilog,Verilog-Projects,52,0,2023-08-28 19:44:58+00:00,[],None
195,https://github.com/gareththomasnz/RISCV_Single_Cycle_Core.git,2023-08-07 20:54:08+00:00,This repository contains the design files of RISC-V Single Cycle Core,3,gareththomasnz/RISCV_Single_Cycle_Core,675834641,,RISCV_Single_Cycle_Core,736,0,2023-08-07 20:54:08+00:00,[],https://api.github.com/licenses/apache-2.0
196,https://github.com/bhendi-boi/ECG.git,2023-08-03 01:32:49+00:00,,0,bhendi-boi/ECG,674027734,Verilog,ECG,201,0,2023-10-11 11:30:33+00:00,[],None
197,https://github.com/EsraaHemdan24/RSA.git,2023-08-11 05:13:45+00:00,RSA (Rivest-Shamir-Adleman encryption) is a public-key cryptosystem that is widely used for secure data transmission.,0,EsraaHemdan24/RSA,677247365,Verilog,RSA,14,0,2023-08-11 05:15:32+00:00,[],None
198,https://github.com/mingzheli012/FPGAs.git,2023-08-04 16:57:35+00:00,Just some fun FPGA Projects,0,mingzheli012/FPGAs,674744586,Verilog,FPGAs,23101,0,2023-12-21 04:08:00+00:00,[],None
199,https://github.com/Stelios1908/VLSI_LAB.git,2023-08-03 12:31:03+00:00,,0,Stelios1908/VLSI_LAB,674225264,Verilog,VLSI_LAB,3250,0,2023-08-03 12:34:16+00:00,[],None
200,https://github.com/YunJoongChul/Block-Memory.git,2023-07-27 03:33:06+00:00,,0,YunJoongChul/Block-Memory,671314409,Verilog,Block-Memory,33,0,2023-07-28 02:11:28+00:00,[],None
201,https://github.com/kaustubhdex/parellel_fir_filter.git,2023-07-28 15:01:48+00:00,,0,kaustubhdex/parellel_fir_filter,671965552,Verilog,parellel_fir_filter,173,0,2023-07-28 15:06:17+00:00,[],None
202,https://github.com/Deviloper007/UART.git,2023-07-28 10:52:23+00:00,,0,Deviloper007/UART,671877725,Verilog,UART,3,0,2023-07-29 10:22:03+00:00,[],None
203,https://github.com/androny1012/MCDF_Design_Verification.git,2023-08-07 11:09:43+00:00,,0,androny1012/MCDF_Design_Verification,675629421,Verilog,MCDF_Design_Verification,15,0,2023-08-08 01:37:46+00:00,[],None
204,https://github.com/haraqu/verilog_practice.git,2023-08-07 11:43:38+00:00,,0,haraqu/verilog_practice,675641176,Verilog,verilog_practice,204,0,2023-08-08 07:29:42+00:00,[],None
205,https://github.com/bushzhong/test.git,2023-08-06 10:52:20+00:00,test for git,0,bushzhong/test,675265360,Verilog,test,1,0,2023-08-06 14:11:47+00:00,[],None
206,https://github.com/yogeshk0126/Asynchronous_FIFO.git,2023-08-05 10:25:50+00:00,"An asynchronous FIFO, also known as a clock domain crossing (CDC) FIFO, is a type of FIFO (First-In-First-Out) memory that operates across different clock domains.",0,yogeshk0126/Asynchronous_FIFO,674966425,Verilog,Asynchronous_FIFO,677,0,2023-08-05 10:31:26+00:00,[],None
207,https://github.com/amaani90/COLOURED-BALL-SEQUENCE.git,2023-08-07 12:58:24+00:00,,0,amaani90/COLOURED-BALL-SEQUENCE,675668476,Verilog,COLOURED-BALL-SEQUENCE,129,0,2023-09-05 18:55:53+00:00,[],None
208,https://github.com/PratMaha/CompArchBits.git,2023-08-08 18:39:55+00:00,,0,PratMaha/CompArchBits,676238650,Verilog,CompArchBits,664,0,2023-08-08 18:49:57+00:00,[],None
209,https://github.com/bhim4078652/Cryptographic-Processors.git,2023-08-10 13:15:18+00:00,,0,bhim4078652/Cryptographic-Processors,676983263,Verilog,Cryptographic-Processors,7759,0,2023-08-10 14:15:13+00:00,[],https://api.github.com/licenses/mit
210,https://github.com/gunavant-s/Single_Port_RAM-Day023.git,2023-08-11 01:57:05+00:00,A Single Port RAM can be accessed by a single input/output port.,0,gunavant-s/Single_Port_RAM-Day023,677202432,Verilog,Single_Port_RAM-Day023,93,0,2023-08-11 01:57:29+00:00,[],None
211,https://github.com/souhardyadey2001/single-port-ram-using-verilog.git,2023-08-09 17:51:27+00:00,,0,souhardyadey2001/single-port-ram-using-verilog,676658775,Verilog,single-port-ram-using-verilog,3,0,2023-08-09 18:01:31+00:00,[],None
212,https://github.com/YunJoongChul/Verilog-FC84to10-07.28.final.git,2023-07-28 10:12:10+00:00,,0,YunJoongChul/Verilog-FC84to10-07.28.final,671864335,Verilog,Verilog-FC84to10-07.28.final,39,0,2023-07-28 10:12:54+00:00,[],None
213,https://github.com/Manikgar/Alarm_Clock.git,2023-07-29 06:11:54+00:00,,0,Manikgar/Alarm_Clock,672164546,Verilog,Alarm_Clock,6,0,2023-07-29 06:12:00+00:00,[],None
214,https://github.com/Deap-pandit/verilog_lab.git,2023-08-02 15:46:42+00:00,,0,Deap-pandit/verilog_lab,673866466,Verilog,verilog_lab,1,0,2023-08-02 15:51:28+00:00,[],None
215,https://github.com/adharsh10/Hardware_accelerator_colour_space_conversion.git,2023-08-02 16:40:34+00:00,"Verilog modules for dynamic/real time colour space conversion for image processing applications, implementable and synthesizable on FPGA ",0,adharsh10/Hardware_accelerator_colour_space_conversion,673886328,Verilog,Hardware_accelerator_colour_space_conversion,6,0,2023-08-02 16:43:35+00:00,[],None
216,https://github.com/vishnu-05-03/Guessing-Game.git,2023-08-02 18:35:59+00:00,,0,vishnu-05-03/Guessing-Game,673928313,Verilog,Guessing-Game,3,0,2023-08-02 18:36:14+00:00,[],None
217,https://github.com/gunavant-s/PIPO_using_D_FF_Day-015.git,2023-08-02 01:57:41+00:00,Here I have implemented the PIPO using D Flip Flop. The 4 D flip flops have been used for 4 bits.,0,gunavant-s/PIPO_using_D_FF_Day-015,673594175,Verilog,PIPO_using_D_FF_Day-015,50,0,2023-08-02 01:58:08+00:00,[],None
218,https://github.com/ErenYagar/CLA4_clk.git,2023-08-11 09:42:02+00:00,4位元的超前進位加法器,0,ErenYagar/CLA4_clk,677326699,Verilog,CLA4_clk,1,0,2023-08-11 09:46:22+00:00,[],None
219,https://github.com/HarshPatel1503/fourbit_full_add.git,2023-08-11 11:09:17+00:00,,0,HarshPatel1503/fourbit_full_add,677353761,Verilog,fourbit_full_add,0,0,2023-08-11 11:10:20+00:00,[],None
220,https://github.com/ttang007/full_adder.git,2023-08-12 16:20:13+00:00,,0,ttang007/full_adder,677785616,Verilog,full_adder,10,0,2023-08-12 16:22:24+00:00,[],None
221,https://github.com/PaulaPistrila/Booth-Radix-4.git,2023-08-12 13:36:41+00:00,,0,PaulaPistrila/Booth-Radix-4,677741038,Verilog,Booth-Radix-4,658,0,2023-08-13 10:50:24+00:00,[],None
222,https://github.com/gautamdeo0/LD.git,2023-08-01 10:28:44+00:00,,0,gautamdeo0/LD,673304351,Verilog,LD,21,0,2023-08-01 10:31:43+00:00,[],None
223,https://github.com/gagana-05/test.git,2023-08-02 05:20:02+00:00,Trying out caravel flow,0,gagana-05/test,673643618,Verilog,test,11911,0,2023-08-02 05:21:30+00:00,[],https://api.github.com/licenses/apache-2.0
224,https://github.com/nouramr-ic-d/ALU-32bits.git,2023-08-04 16:50:31+00:00,"The objective of this design problem is to create an Arithmetic Logic Unit (ALU) capable of  performing various arithmetic and logical operations on two 16-bit inputs, based on a third input  known as the ""opcode."" The ALU should produce a 32-bit output representing the result of the  selected operation.",0,nouramr-ic-d/ALU-32bits,674742534,Verilog,ALU-32bits,171,0,2023-08-04 16:53:01+00:00,[],None
225,https://github.com/MSinare/Full_adder.git,2023-08-04 13:58:03+00:00,,0,MSinare/Full_adder,674674779,Verilog,Full_adder,3,0,2023-08-04 14:01:09+00:00,[],None
226,https://github.com/nghiahlh2002/FIFO.git,2023-08-04 03:20:51+00:00,,0,nghiahlh2002/FIFO,674472430,Verilog,FIFO,4,0,2023-08-04 03:22:05+00:00,[],None
227,https://github.com/jotape04/projeto-infrahard.git,2023-08-04 23:47:09+00:00,,1,jotape04/projeto-infrahard,674841272,Verilog,projeto-infrahard,277,0,2023-08-13 01:14:29+00:00,[],None
228,https://github.com/BernJul/ALU-simulator.git,2023-08-03 15:32:28+00:00,A C++ program that simulates how ALU works using Verilog.,0,BernJul/ALU-simulator,674294042,Verilog,ALU-simulator,3,0,2023-08-03 15:32:57+00:00,[],None
229,https://github.com/notlongbottom/Car-Parking-System.git,2023-08-03 15:58:31+00:00,This simple project is to implement a car parking system in Verilog.,0,notlongbottom/Car-Parking-System,674303139,Verilog,Car-Parking-System,6,0,2023-08-03 18:43:35+00:00,[],None
230,https://github.com/snehith-namgiri/Design-and-Analysis-of-SPI-Master-Salve-using-18nm-in-Qflow.git,2023-08-05 05:13:05+00:00,,0,snehith-namgiri/Design-and-Analysis-of-SPI-Master-Salve-using-18nm-in-Qflow,674897616,Verilog,Design-and-Analysis-of-SPI-Master-Salve-using-18nm-in-Qflow,3183,0,2023-08-05 05:13:57+00:00,[],None
231,https://github.com/ardhiesta/learn-verilog.git,2023-08-08 04:02:28+00:00,contoh source code verilog,0,ardhiesta/learn-verilog,675929804,Verilog,learn-verilog,1,0,2023-08-08 04:15:14+00:00,[],None
232,https://github.com/lx071/transaction-pysim-example.git,2023-08-02 15:02:10+00:00,,0,lx071/transaction-pysim-example,673849444,Verilog,transaction-pysim-example,1511,0,2023-08-02 15:16:26+00:00,[],None
233,https://github.com/mebukibu/cpu_riscv.git,2023-08-01 08:05:17+00:00,RISC-Vベースの自作CPUに自作OSを実装,0,mebukibu/cpu_riscv,673252650,Verilog,cpu_riscv,207,0,2024-03-28 02:14:36+00:00,[],None
234,https://github.com/SudulaBharadwaj/8-bit-processor-learning0to1.git,2023-07-27 13:56:36+00:00,,0,SudulaBharadwaj/8-bit-processor-learning0to1,671518560,Verilog,8-bit-processor-learning0to1,2673,0,2023-07-27 14:00:30+00:00,[],None
235,https://github.com/ctbram/bin_to_4digit_bcd_counter.git,2023-08-06 06:42:40+00:00,Verilog code implementing Double-Dabble algorithm to display 0-9999 on four sseg displays on nexsys2 fpga dev board. credit to Grady at simply embedded for the tutorial this is based upon,0,ctbram/bin_to_4digit_bcd_counter,675211306,Verilog,bin_to_4digit_bcd_counter,7,0,2023-11-14 07:26:32+00:00,[],None
236,https://github.com/JavidChaji/FUM-Computer-Architecture-Pipelined-MIPS-Processor.git,2023-08-04 08:45:46+00:00,"Pipelined MIPS Processor implementation, Computer Assignment for Computer Architecture course in Ferdowsi University of Mashhad",0,JavidChaji/FUM-Computer-Architecture-Pipelined-MIPS-Processor,674563410,Verilog,FUM-Computer-Architecture-Pipelined-MIPS-Processor,982,0,2023-10-30 04:41:44+00:00,"['computer-architecture', 'ferdowsi-university-of-mashhad', 'mips', 'mips-architecture', 'pipeline', 'processor', 'processor-design', 'verilog', 'fum']",https://api.github.com/licenses/mit
237,https://github.com/mohamedsalah64792/ASIC-implementation-of-PULPINO.git,2023-07-26 20:42:28+00:00,,0,mohamedsalah64792/ASIC-implementation-of-PULPINO,671225210,Verilog,ASIC-implementation-of-PULPINO,3189,0,2023-07-26 20:46:17+00:00,[],None
238,https://github.com/gdimitrak/Bulls-and-Cows.git,2023-07-26 15:00:09+00:00,,0,gdimitrak/Bulls-and-Cows,671109858,Verilog,Bulls-and-Cows,260,0,2023-07-26 15:03:14+00:00,[],https://api.github.com/licenses/apache-2.0
239,https://github.com/DouglasWWolf/sidewinder_udpgen.git,2023-07-26 06:30:50+00:00,UDP Packet Generator for Sidewinder,0,DouglasWWolf/sidewinder_udpgen,670923884,Verilog,sidewinder_udpgen,26584,0,2023-07-30 00:33:29+00:00,[],None
240,https://github.com/HarshPatel1503/fsm.git,2023-07-31 16:47:29+00:00,,0,HarshPatel1503/fsm,673006011,Verilog,fsm,0,0,2023-07-31 16:48:06+00:00,[],None
241,https://github.com/mibrahim76112/Basic-Implementation-of-Risc-V-Verilog-Code.git,2023-08-03 06:30:30+00:00,,0,mibrahim76112/Basic-Implementation-of-Risc-V-Verilog-Code,674101116,Verilog,Basic-Implementation-of-Risc-V-Verilog-Code,8,0,2023-08-03 06:36:37+00:00,[],None
242,https://github.com/Microchip-Vectorblox/VectorBlox-Video-Kit-Demo.git,2023-08-03 17:39:08+00:00,,0,Microchip-Vectorblox/VectorBlox-Video-Kit-Demo,674336693,Verilog,VectorBlox-Video-Kit-Demo,9899,0,2023-09-01 16:55:49+00:00,[],None
243,https://github.com/acam4890/Block-Invaders.git,2023-07-28 22:40:53+00:00,,0,acam4890/Block-Invaders,672089266,Verilog,Block-Invaders,14,0,2023-07-28 22:53:33+00:00,[],None
244,https://github.com/darshan-kr/Day-012_8bit_ALU.git,2023-07-29 14:16:31+00:00,An arithmetic logic unit (ALU) is a key component of a computer's central processor unit. The ALU performs all arithmetic and logic operations that must be performed on instruction words.,0,darshan-kr/Day-012_8bit_ALU,672276166,Verilog,Day-012_8bit_ALU,2,0,2023-07-29 14:21:55+00:00,[],None
245,https://github.com/alvin0323/FPGA.git,2023-07-31 05:54:59+00:00,,0,alvin0323/FPGA,672766650,Verilog,FPGA,65286,0,2023-07-31 06:06:33+00:00,[],None
246,https://github.com/anhnt060901/digital_test.git,2023-07-31 10:20:57+00:00,,0,anhnt060901/digital_test,672857104,Verilog,digital_test,11912,0,2023-07-31 10:22:24+00:00,[],https://api.github.com/licenses/apache-2.0
247,https://github.com/frosalesoffic/RippleCarryAdder-Verilog.git,2023-07-28 23:38:11+00:00,,0,frosalesoffic/RippleCarryAdder-Verilog,672098706,Verilog,RippleCarryAdder-Verilog,74,0,2023-07-28 23:38:26+00:00,[],None
248,https://github.com/YunJoongChul/Verilog-sigmoid-floatingIP.git,2023-07-31 07:52:17+00:00,,0,YunJoongChul/Verilog-sigmoid-floatingIP,672804447,Verilog,Verilog-sigmoid-floatingIP,25,0,2023-07-31 07:54:33+00:00,[],None
249,https://github.com/gunavant-s/SIPO_Day-016.git,2023-08-04 01:28:11+00:00,"Serial-In Parallel-Out Shift Register (SIPO). The shift register, which allows serial input (one bit after the other through a single data line) and produces a parallel output is known as the Serial-In Parallel-Out shift register. The schematic can be observed in this repository.",0,gunavant-s/SIPO_Day-016,674447471,Verilog,SIPO_Day-016,42,0,2023-08-04 01:28:50+00:00,[],None
250,https://github.com/SidhaantThakker/SixStagePipelinedProcessor.git,2023-08-06 16:59:20+00:00,A 32-bit six-stage pipelined processor which supports six instructions and implements forwarding to resolve data hazards implemented in Verilog on Xilinx Vivado,0,SidhaantThakker/SixStagePipelinedProcessor,675361924,Verilog,SixStagePipelinedProcessor,68,0,2023-08-06 17:12:19+00:00,[],None
251,https://github.com/saeedmosaffer/SimpleSecuritySystem.git,2023-08-08 14:29:00+00:00,,0,saeedmosaffer/SimpleSecuritySystem,676145462,Verilog,SimpleSecuritySystem,1348,0,2023-08-08 14:30:12+00:00,[],None
252,https://github.com/Praneshss/HWdataset.git,2023-08-04 10:55:09+00:00,HW dataset,0,Praneshss/HWdataset,674606013,Verilog,HWdataset,831,0,2023-08-04 10:59:22+00:00,[],None
253,https://github.com/Naveen8754/VLSI_CODE.git,2023-07-28 08:56:09+00:00,,0,Naveen8754/VLSI_CODE,671838726,Verilog,VLSI_CODE,250,0,2023-07-28 09:04:16+00:00,[],None
254,https://github.com/Anshul380/Synchronous_Asynchronous_FIFO.git,2023-07-28 09:39:55+00:00,A 32 x 16 asynchronous FIFO is designed in Verilog HDL for the exchange of data values between different clock domains. − Gray code encoding used for inter-clock domain control data transfer to avoid multi-bit signal transition . −Implemented Two Flip-Flop Synchronizer to avoid meta-stability issue in Cross Domain Clocking(CDC).,0,Anshul380/Synchronous_Asynchronous_FIFO,671853517,Verilog,Synchronous_Asynchronous_FIFO,29,0,2023-08-02 07:15:29+00:00,[],None
255,https://github.com/jackaugustyn/RNG_SHA3.git,2023-07-28 13:09:00+00:00,,0,jackaugustyn/RNG_SHA3,671924729,Verilog,RNG_SHA3,74,0,2023-07-28 13:10:20+00:00,[],None
256,https://github.com/bat52/aisynth.git,2023-07-27 06:41:51+00:00,a midi to audio hardware synthesizer designed by language models,0,bat52/aisynth,671364101,Verilog,aisynth,41,0,2023-07-27 06:43:06+00:00,[],https://api.github.com/licenses/apache-2.0
257,https://github.com/kayrameral/simple-processor.git,2023-07-28 10:59:15+00:00,,0,kayrameral/simple-processor,671879826,Verilog,simple-processor,574,0,2023-07-28 11:17:44+00:00,[],None
258,https://github.com/Pavanija/Design_of_Dual_Clock_Asynchronous_FIFO.git,2023-08-07 07:35:23+00:00,,0,Pavanija/Design_of_Dual_Clock_Asynchronous_FIFO,675554653,Verilog,Design_of_Dual_Clock_Asynchronous_FIFO,1384,0,2023-08-07 18:20:14+00:00,[],None
259,https://github.com/soy3563/gitUbuntu.git,2023-08-06 07:12:48+00:00,,0,soy3563/gitUbuntu,675217376,Verilog,gitUbuntu,89,0,2023-08-06 10:28:56+00:00,[],None
260,https://github.com/BaraaFatony/Computer_Architecture_simple_RISC_processor.git,2023-08-06 12:00:50+00:00,In this project a multicycle 32-bit processor was designed and tested with HDL language (Verilog).,0,BaraaFatony/Computer_Architecture_simple_RISC_processor,675281287,Verilog,Computer_Architecture_simple_RISC_processor,2473,0,2023-08-06 12:06:50+00:00,[],None
261,https://github.com/Khalid-Hesham/CRC.git,2023-08-07 12:06:57+00:00,,0,Khalid-Hesham/CRC,675649536,Verilog,CRC,175,0,2023-09-04 09:48:10+00:00,[],None
262,https://github.com/HarshPatel1503/Priority_encoder.git,2023-08-11 11:17:12+00:00,,0,HarshPatel1503/Priority_encoder,677356176,Verilog,Priority_encoder,0,0,2023-08-11 11:18:23+00:00,[],None
263,https://github.com/EsraaHemdan24/Traffic_Light_Controller.git,2023-08-11 03:06:54+00:00,Traffic light controllwr using FSM,0,EsraaHemdan24/Traffic_Light_Controller,677217505,Verilog,Traffic_Light_Controller,2,0,2023-08-11 03:07:33+00:00,[],None
264,https://github.com/AdityaGupta9168/FULLADDER.git,2023-08-11 04:53:42+00:00,,0,AdityaGupta9168/FULLADDER,677242870,Verilog,FULLADDER,15,0,2023-08-23 09:56:45+00:00,[],None
265,https://github.com/Conqave/kernel_module_linux.git,2023-07-31 12:32:40+00:00,,0,Conqave/kernel_module_linux,672903722,Verilog,kernel_module_linux,16,0,2024-02-25 13:08:20+00:00,[],None
266,https://github.com/SXP12345/HDLBits.git,2023-08-05 00:53:51+00:00,Verilog HDLBits Codes,0,SXP12345/HDLBits,674851327,Verilog,HDLBits,68,0,2023-08-05 00:58:53+00:00,[],None
267,https://github.com/YunJoongChul/Verilog-layer1-08-04-simpledualport.git,2023-08-04 06:16:23+00:00,,0,YunJoongChul/Verilog-layer1-08-04-simpledualport,674515828,Verilog,Verilog-layer1-08-04-simpledualport,27,0,2023-08-04 06:16:44+00:00,[],None
268,https://github.com/ertugrulkoksal/CORG-Processor-Verilog.git,2023-08-04 06:45:24+00:00,,0,ertugrulkoksal/CORG-Processor-Verilog,674524429,Verilog,CORG-Processor-Verilog,8,0,2023-08-04 06:49:02+00:00,[],None
269,https://github.com/YoussefMekawy/Stack.git,2023-08-03 15:28:09+00:00,Implemented a stack project using verilog HDL. The module is parameterized for variable data size and variable stack size. Also made a testbench and tested the whole module with the corner cases ,0,YoussefMekawy/Stack,674292435,Verilog,Stack,4,0,2023-08-03 15:50:41+00:00,[],None
270,https://github.com/mhamdy2712/Greatest-Common-Divisor.git,2023-07-30 02:41:26+00:00,,0,mhamdy2712/Greatest-Common-Divisor,672418234,Verilog,Greatest-Common-Divisor,1,0,2023-07-30 02:42:28+00:00,[],None
271,https://github.com/cojawdvgyj18/cpld_16keyscaner.git,2023-07-26 15:11:59+00:00,"just a cpld 16 key keyboard scaner , using epm3064.",0,cojawdvgyj18/cpld_16keyscaner,671114554,Verilog,cpld_16keyscaner,187,0,2023-07-26 15:15:21+00:00,[],None
272,https://github.com/nrs14/FPGA_PROGRAM-labsland.git,2023-08-03 08:15:45+00:00,verilog,0,nrs14/FPGA_PROGRAM-labsland,674136012,Verilog,FPGA_PROGRAM-labsland,6545,0,2023-08-03 09:01:00+00:00,[],None
273,https://github.com/axyrai/andGate.git,2023-08-03 04:23:16+00:00,,1,axyrai/andGate,674067369,Verilog,andGate,2,0,2023-08-03 04:26:00+00:00,[],None
274,https://github.com/YunJoongChul/Verilog-layer1-08.03.git,2023-08-03 08:54:00+00:00,,0,YunJoongChul/Verilog-layer1-08.03,674149675,Verilog,Verilog-layer1-08.03,33,0,2023-08-03 08:54:33+00:00,[],None
275,https://github.com/Lygram/FPGA_Lab_1.git,2023-08-02 09:18:23+00:00,FPGA Lab with Danielle,0,Lygram/FPGA_Lab_1,673721390,Verilog,FPGA_Lab_1,40,0,2023-08-02 09:25:43+00:00,[],None
276,https://github.com/ahmed-kabil/ALU.git,2023-08-05 22:16:59+00:00,,0,ahmed-kabil/ALU,675131393,Verilog,ALU,86,0,2023-08-06 14:13:08+00:00,[],None
277,https://github.com/jaypshah27/RISC-V.git,2023-08-06 13:09:27+00:00,,0,jaypshah27/RISC-V,675297982,Verilog,RISC-V,14,0,2023-08-06 13:16:46+00:00,[],None
278,https://github.com/Rabiyabasari/Single_cycle_RISC-V.git,2023-08-05 12:32:03+00:00,,0,Rabiyabasari/Single_cycle_RISC-V,674996176,Verilog,Single_cycle_RISC-V,150,0,2023-08-05 12:36:01+00:00,[],None
279,https://github.com/reasonJinn/AnomalyDetectionEwha_HW-.git,2023-08-04 05:26:15+00:00,,0,reasonJinn/AnomalyDetectionEwha_HW-,674502319,Verilog,AnomalyDetectionEwha_HW-,7,0,2023-08-04 05:33:30+00:00,[],None
280,https://github.com/umberto98/demo_project.git,2023-08-05 18:19:47+00:00,,0,umberto98/demo_project,675086920,Verilog,demo_project,11911,0,2023-08-05 18:21:18+00:00,[],https://api.github.com/licenses/apache-2.0
281,https://github.com/jimmy-adams/caravel.git,2023-08-04 11:59:47+00:00,,0,jimmy-adams/caravel,674626095,Verilog,caravel,11912,0,2023-08-04 12:01:15+00:00,[],https://api.github.com/licenses/apache-2.0
282,https://github.com/Titanic007/nios-ii.git,2023-08-04 13:36:18+00:00,NIOS II 固化程序上电不运行、复位能运行的解决思路,0,Titanic007/nios-ii,674664853,Verilog,nios-ii,2,0,2023-08-04 13:41:42+00:00,[],None
283,https://github.com/YunJoongChul/Verilog-FC84to10-End.git,2023-07-31 05:29:04+00:00,,0,YunJoongChul/Verilog-FC84to10-End,672760118,Verilog,Verilog-FC84to10-End,1007,0,2023-07-31 05:33:08+00:00,[],None
284,https://github.com/Harshithranga/Inventory-Management.git,2023-07-31 11:08:26+00:00,,0,Harshithranga/Inventory-Management,672873103,Verilog,Inventory-Management,1491,0,2023-07-31 11:21:46+00:00,[],None
285,https://github.com/darshan-kr/Day-011-Nbit_gray_to_binary_converter.git,2023-07-28 09:42:14+00:00,The Gray Code to Binary Converter is used to convert gray code value to a binary number.,0,darshan-kr/Day-011-Nbit_gray_to_binary_converter,671854292,Verilog,Day-011-Nbit_gray_to_binary_converter,2,0,2023-07-28 09:51:32+00:00,[],None
286,https://github.com/vinisha2709/VLSI.git,2023-07-26 07:44:36+00:00,,0,vinisha2709/VLSI,670949027,Verilog,VLSI,151,0,2023-07-26 07:45:43+00:00,[],None
287,https://github.com/gunavant-s/SR_Flip_Flop.git,2023-07-31 01:29:19+00:00,"The SR flip flop is a 1-bit memory bistable device having two inputs, i.e., SET and RESET. The SET input 'S' set the device or produce the output 1, and the RESET input 'R' reset the device or produce the output 0. The SET and RESET inputs are labeled as S and R, respectively.",0,gunavant-s/SR_Flip_Flop,672708316,Verilog,SR_Flip_Flop,51,0,2023-07-31 01:29:47+00:00,[],None
288,https://github.com/ithinuel/hdlbits.git,2023-07-31 07:39:27+00:00,,0,ithinuel/hdlbits,672800017,Verilog,hdlbits,50,0,2023-07-31 07:39:45+00:00,[],https://api.github.com/licenses/mit
289,https://github.com/202121375/2023_summer.git,2023-07-31 08:21:17+00:00,,0,202121375/2023_summer,672814457,Verilog,2023_summer,138,0,2023-08-22 04:25:18+00:00,[],None
290,https://github.com/zxtres/jupiter_ace.git,2023-08-06 01:49:33+00:00,Jupiter Cantab Jupiter ACE clone. Includes info on how to use the ZXTRES wrapper,1,zxtres/jupiter_ace,675160621,Verilog,jupiter_ace,192,0,2023-08-28 19:17:31+00:00,[],https://api.github.com/licenses/gpl-3.0
291,https://github.com/shayan-taheri/Parser_Verilog_Netlists.git,2023-08-09 13:26:12+00:00,,0,shayan-taheri/Parser_Verilog_Netlists,676557349,Verilog,Parser_Verilog_Netlists,1273,0,2023-08-09 13:27:16+00:00,[],None
292,https://github.com/Meteorite258/stat_analyse.git,2023-08-07 14:44:21+00:00,,0,Meteorite258/stat_analyse,675710351,Verilog,stat_analyse,641,0,2023-08-08 22:37:20+00:00,[],None
293,https://github.com/BIGBunane/FPGA_Learn.git,2023-08-07 17:52:46+00:00,"202307 learning of FPGA, Quartus II, ModelSim",0,BIGBunane/FPGA_Learn,675781261,Verilog,FPGA_Learn,1024,0,2023-08-07 17:56:13+00:00,[],None
294,https://github.com/Pavan2280/pes_asic_class.git,2023-08-12 11:58:04+00:00,,0,Pavan2280/pes_asic_class,677716970,Verilog,pes_asic_class,2987,0,2023-09-12 14:25:23+00:00,[],https://api.github.com/licenses/mit
295,https://github.com/moh53n/messriscv.git,2023-08-10 14:46:06+00:00,Messy RISV-V core in verilog,0,moh53n/messriscv,677018985,Verilog,messriscv,2,0,2023-08-10 22:30:41+00:00,[],https://api.github.com/licenses/mit
296,https://github.com/IsaacViolette/RISC-V.git,2023-08-10 15:34:21+00:00,5 stage pipelined CPU designed in Computer Architecture class using Altera Cyclone V FPGA and Quartus. Only major .v files are included,0,IsaacViolette/RISC-V,677037181,Verilog,RISC-V,523,0,2023-08-10 17:11:45+00:00,[],None
297,https://github.com/AhmedBakrXI/Arithmetic-and-Logical-Unit-Design-Project.git,2023-08-11 19:39:33+00:00,,0,AhmedBakrXI/Arithmetic-and-Logical-Unit-Design-Project,677520494,Verilog,Arithmetic-and-Logical-Unit-Design-Project,4088,0,2023-08-11 19:54:07+00:00,[],https://api.github.com/licenses/mit
298,https://github.com/JASWANTvemulapalli/FloatCraft.git,2023-08-11 18:47:30+00:00,,0,JASWANTvemulapalli/FloatCraft,677506960,Verilog,FloatCraft,122,0,2023-08-11 19:09:45+00:00,[],None
299,https://github.com/Jgilbert18/Independent-Study-SAP-1-2023.git,2023-08-10 23:49:30+00:00,,0,Jgilbert18/Independent-Study-SAP-1-2023,677177155,Verilog,Independent-Study-SAP-1-2023,24,0,2023-08-13 09:47:01+00:00,[],None
300,https://github.com/manavshah-28/FPGA_robo.git,2023-08-11 10:33:52+00:00,Designed and developed a line following robot for E yantra robotics competetion,0,manavshah-28/FPGA_robo,677343174,Verilog,FPGA_robo,234,0,2023-08-11 11:02:23+00:00,[],None
301,https://github.com/gunavant-s/Dual_Port_RAM-Day-024.git,2023-08-12 06:35:50+00:00,A dual port RAM has two independent ports that can read and write data simultaneously.,0,gunavant-s/Dual_Port_RAM-Day-024,677644333,Verilog,Dual_Port_RAM-Day-024,123,0,2023-08-12 06:37:29+00:00,[],None
302,https://github.com/JaeggerJose/ComputerOrganizationExperiment.git,2023-08-08 10:38:50+00:00,,0,JaeggerJose/ComputerOrganizationExperiment,676057909,Verilog,ComputerOrganizationExperiment,178660,0,2023-08-08 10:46:39+00:00,[],None
303,https://github.com/EricWuS/code_training.git,2023-08-08 14:44:50+00:00,a folder for recording code training in IC learning.,0,EricWuS/code_training,676151941,Verilog,code_training,241,0,2023-08-10 14:42:25+00:00,[],None
304,https://github.com/yogggoy/verilog_tmpl.git,2023-08-08 08:42:26+00:00,,0,yogggoy/verilog_tmpl,676017078,Verilog,verilog_tmpl,2265,0,2023-08-08 08:42:54+00:00,[],None
305,https://github.com/djkabutar/mipi_loopback.git,2023-08-10 13:32:18+00:00,Complete MIPI CSI loopback for efinix trion FPGAs,1,djkabutar/mipi_loopback,676989629,Verilog,mipi_loopback,9,0,2023-08-10 13:35:58+00:00,[],None
306,https://github.com/ap-sharma/Asynchronous_FIFO.git,2023-08-12 16:52:25+00:00,,0,ap-sharma/Asynchronous_FIFO,677795229,Verilog,Asynchronous_FIFO,57,0,2023-08-12 16:54:55+00:00,[],None
307,https://github.com/rajnirmal2604/RISC-32-bits.git,2023-08-12 16:45:18+00:00,This project involves designing and implementing a 32-bit MIPS RISC processor with a 5-stage pipeline. It offers a valuable opportunity to gain knowledge in hardware design and computer architecture concepts. Implemented the processor in a hardware description language Verilog.,0,rajnirmal2604/RISC-32-bits,677793250,Verilog,RISC-32-bits,1067,0,2023-08-12 16:51:31+00:00,[],None
308,https://github.com/AbdulrahmanNourEldeen/Washing-Machine-Controller.git,2023-08-12 13:51:03+00:00,Design and Verification of Washing Machine Controller.,0,AbdulrahmanNourEldeen/Washing-Machine-Controller,677744672,Verilog,Washing-Machine-Controller,2038,0,2023-08-12 14:24:53+00:00,[],None
309,https://github.com/Manasa-36/Physical-design-using-openlane-sky_130.git,2023-08-11 03:38:32+00:00,,0,Manasa-36/Physical-design-using-openlane-sky_130,677224467,Verilog,Physical-design-using-openlane-sky_130,8458,0,2023-08-14 07:25:11+00:00,[],https://api.github.com/licenses/apache-2.0
310,https://github.com/mohamedkhaledalahmady/Multicycle-MIPS-Processor.git,2023-08-09 21:03:12+00:00,,0,mohamedkhaledalahmady/Multicycle-MIPS-Processor,676717015,Verilog,Multicycle-MIPS-Processor,1509,0,2023-08-10 19:27:10+00:00,[],None
311,https://github.com/Pavanija/Implementation_of_256-bit_AES_Encryption_and_Decryption_Algorithm.git,2023-08-07 19:16:58+00:00,,0,Pavanija/Implementation_of_256-bit_AES_Encryption_and_Decryption_Algorithm,675807942,Verilog,Implementation_of_256-bit_AES_Encryption_and_Decryption_Algorithm,35,0,2023-08-07 22:25:24+00:00,[],None
312,https://github.com/BHa2R00/i2s_interface.git,2023-08-11 12:04:26+00:00,i2s standard interface,1,BHa2R00/i2s_interface,677370978,Verilog,i2s_interface,371,0,2023-09-27 12:33:56+00:00,[],https://api.github.com/licenses/bsd-2-clause
313,https://github.com/JavidChaji/FUM-Logic-Circuit-Lock.git,2023-08-04 08:06:51+00:00,Semi-mechanical Lock with verilog language,0,JavidChaji/FUM-Logic-Circuit-Lock,674550607,Verilog,FUM-Logic-Circuit-Lock,44,0,2023-11-18 08:49:04+00:00,"['ferdowsi-university-of-mashhad', 'logic-circuit', 'verilog', 'fum', 'lock']",https://api.github.com/licenses/mit
314,https://github.com/androny1012/Bus_Handshakes.git,2023-07-31 03:44:16+00:00,,0,androny1012/Bus_Handshakes,672736214,Verilog,Bus_Handshakes,478,0,2023-08-09 06:54:56+00:00,[],None
315,https://github.com/darshan-kr/Day-014_freq_divider.git,2023-07-31 17:58:54+00:00,"For frequency division, toggle mode flip-flops are used in a chain as a divide by two counter to divide clock pulse by required number of times.",0,darshan-kr/Day-014_freq_divider,673031929,Verilog,Day-014_freq_divider,3,0,2023-08-05 08:25:12+00:00,[],None
316,https://github.com/VaishnaviKulkarni007/Full-width-adder-tree.git,2023-07-31 12:44:00+00:00,,0,VaishnaviKulkarni007/Full-width-adder-tree,672908067,Verilog,Full-width-adder-tree,556,0,2023-07-31 17:26:15+00:00,[],None
317,https://github.com/VinkeshBansal/IPA_project.git,2023-07-31 13:35:00+00:00,,0,VinkeshBansal/IPA_project,672928432,Verilog,IPA_project,235,0,2023-07-31 13:38:43+00:00,[],None
318,https://github.com/Samiksha-0710/32Bit_floatingpoint_ALU.git,2023-08-01 10:49:40+00:00,,0,Samiksha-0710/32Bit_floatingpoint_ALU,673311698,Verilog,32Bit_floatingpoint_ALU,9,0,2023-08-03 14:04:01+00:00,[],None
319,https://github.com/Jopei/Projetos_Finais_Rec.git,2023-08-01 13:00:46+00:00,,0,Jopei/Projetos_Finais_Rec,673359612,Verilog,Projetos_Finais_Rec,1253,0,2023-08-01 13:08:20+00:00,[],None
320,https://github.com/NourMamdouh/CRC_Design.git,2023-08-02 10:19:37+00:00,parameterized CRC circuit design in verilog,0,NourMamdouh/CRC_Design,673743775,Verilog,CRC_Design,138,0,2023-08-02 10:31:16+00:00,"['crc', 'electrical-engineering', 'digital-design']",None
321,https://github.com/hwlabnitc/Intro-to-Verilog.git,2023-08-11 17:10:15+00:00,,0,hwlabnitc/Intro-to-Verilog,677478105,Verilog,Intro-to-Verilog,9,0,2023-08-11 17:13:52+00:00,[],None
322,https://github.com/chhsiao121/Digital-Engineer.git,2023-08-07 15:01:58+00:00,,0,chhsiao121/Digital-Engineer,675717588,Verilog,Digital-Engineer,784,0,2023-08-13 14:14:05+00:00,[],None
323,https://github.com/amoee-5272/RISC-V_based_CPU.git,2023-08-07 12:35:41+00:00,111-2 Computer Architecture Final project:,0,amoee-5272/RISC-V_based_CPU,675660140,Verilog,RISC-V_based_CPU,2238,0,2023-08-07 12:38:28+00:00,[],None
324,https://github.com/YongukSim/RRAM_based_memory.git,2023-08-08 06:20:33+00:00,Design  of RRAM memory ,0,YongukSim/RRAM_based_memory,675968387,Verilog,RRAM_based_memory,97,0,2023-08-08 06:20:41+00:00,[],https://api.github.com/licenses/apache-2.0
325,https://github.com/armcortex/practice-archive.git,2023-08-08 04:34:25+00:00,Old Practice,0,armcortex/practice-archive,675939165,Verilog,practice-archive,622,0,2023-08-08 04:52:10+00:00,[],None
326,https://github.com/YunJoongChul/Verilog-layer1to6-08.08.git,2023-08-08 05:19:37+00:00,,0,YunJoongChul/Verilog-layer1to6-08.08,675950813,Verilog,Verilog-layer1to6-08.08,183,0,2023-08-08 05:20:42+00:00,[],None
327,https://github.com/Raymond0429/Digital_CPICIC_6th.git,2023-08-09 02:20:36+00:00,"As a contestant, I will replicate the digital track programming challenge of the 6th CPICIC.",0,Raymond0429/Digital_CPICIC_6th,676348507,Verilog,Digital_CPICIC_6th,1552,0,2023-08-09 02:30:14+00:00,[],None
328,https://github.com/agamani22/Implementation-of-MUX-based-Logic-JK-Synchronous-Counter.git,2023-08-08 10:44:10+00:00,,0,agamani22/Implementation-of-MUX-based-Logic-JK-Synchronous-Counter,676059751,Verilog,Implementation-of-MUX-based-Logic-JK-Synchronous-Counter,841,0,2023-08-22 18:45:01+00:00,[],None
329,https://github.com/Co1dmountain/Sdram_Controller_pro_fifo_axi_plus.git,2023-07-26 07:19:48+00:00,,0,Co1dmountain/Sdram_Controller_pro_fifo_axi_plus,670940360,Verilog,Sdram_Controller_pro_fifo_axi_plus,11535,0,2023-07-26 07:35:26+00:00,[],None
330,https://github.com/YunJoongChul/Verilog-FC84to10-test.git,2023-07-28 06:46:25+00:00,,0,YunJoongChul/Verilog-FC84to10-test,671796034,Verilog,Verilog-FC84to10-test,17,0,2023-07-28 06:47:02+00:00,[],None
331,https://github.com/johnnyzaet08/CE4303-Operating_Systems.git,2023-07-29 02:08:04+00:00,,0,johnnyzaet08/CE4303-Operating_Systems,672122113,Verilog,CE4303-Operating_Systems,133192,0,2023-09-25 21:30:44+00:00,[],None
332,https://github.com/Mohamedaboelnaga/-32-bit-Single-Cycle-Risc--V-Processor-.git,2023-08-04 16:58:44+00:00,,0,Mohamedaboelnaga/-32-bit-Single-Cycle-Risc--V-Processor-,674744920,Verilog,-32-bit-Single-Cycle-Risc--V-Processor-,4,0,2023-08-04 17:34:46+00:00,[],None
333,https://github.com/radic2682/16_bit_Kogge_Stone_Adder.git,2023-08-03 15:19:50+00:00,,0,radic2682/16_bit_Kogge_Stone_Adder,674289300,Verilog,16_bit_Kogge_Stone_Adder,5,0,2023-08-14 07:16:42+00:00,[],None
334,https://github.com/eunsujo/eunsuuu.git,2023-08-05 13:41:20+00:00,,0,eunsujo/eunsuuu,675013125,Verilog,eunsuuu,3,0,2023-08-05 13:46:20+00:00,[],None
335,https://github.com/gunavant-s/PISO_Day-017.git,2023-08-05 02:02:57+00:00,"The shift register, which allows parallel input (data is given separately to each flip flop and in a simultaneous manner) and produces a serial output is known as a Parallel-In Serial-Out shift register",0,gunavant-s/PISO_Day-017,674862155,Verilog,PISO_Day-017,43,0,2023-08-05 02:03:18+00:00,[],None
336,https://github.com/vijay-nayeka/VLSI.git,2023-08-10 19:57:10+00:00,,0,vijay-nayeka/VLSI,677125422,Verilog,VLSI,109,0,2023-09-11 20:01:02+00:00,[],None
337,https://github.com/I-am-VarunM/ZCU102_src.git,2023-08-09 13:01:16+00:00,On Chip Tampering Detection on ZCU102,0,I-am-VarunM/ZCU102_src,676547902,Verilog,ZCU102_src,315464,0,2023-08-09 13:05:01+00:00,[],None
338,https://github.com/songqiuyu/HDLBits.git,2023-08-09 07:10:38+00:00,,0,songqiuyu/HDLBits,676426057,Verilog,HDLBits,61,0,2023-10-10 12:19:49+00:00,[],None
339,https://github.com/saiashishanshuman/single_port_ram.git,2023-07-26 14:58:49+00:00,Verilog Code for Single Port Ram.,0,saiashishanshuman/single_port_ram,671109295,Verilog,single_port_ram,41,0,2023-07-26 15:01:30+00:00,[],None
340,https://github.com/TahaTabatabaei/mips-verilog.git,2023-07-26 20:32:48+00:00,Single-cycle and multi-cycle verilog implementation of a subset of MIPS instruction set ,0,TahaTabatabaei/mips-verilog,671222696,Verilog,mips-verilog,1315,0,2023-07-26 20:34:53+00:00,"['mips', 'mips-architecture', 'multi-cycle', 'single-cycle', 'verilog']",None
341,https://github.com/gunavant-s/Decade_Counter_Day-008.git,2023-07-27 03:01:12+00:00,A decade counter is a synchronous counter that counts from 0 to 9 in decimal form and resets to 0 after reaching 9.,0,gunavant-s/Decade_Counter_Day-008,671306949,Verilog,Decade_Counter_Day-008,42,0,2023-07-27 03:16:33+00:00,[],None
342,https://github.com/SaulGarciaR/aes256_impl.git,2023-07-27 08:05:45+00:00,,0,SaulGarciaR/aes256_impl,671392895,Verilog,aes256_impl,96,0,2023-07-27 08:07:27+00:00,[],None
343,https://github.com/metolone-xyz/HDL.git,2023-08-03 01:38:44+00:00,,0,metolone-xyz/HDL,674028974,Verilog,HDL,7,0,2023-08-03 01:45:43+00:00,[],None
344,https://github.com/longnt1241/CDC-Handshake-Synchronizer.git,2023-08-09 14:38:39+00:00,,1,longnt1241/CDC-Handshake-Synchronizer,676586671,Verilog,CDC-Handshake-Synchronizer,21,0,2023-08-10 07:48:40+00:00,[],None
345,https://github.com/Chiruradiant/verif.git,2023-08-10 12:03:42+00:00,,0,Chiruradiant/verif,676957266,Verilog,verif,4,0,2023-08-10 12:27:29+00:00,[],None
346,https://github.com/Foxlisic/M8088.git,2023-08-12 05:45:02+00:00,Микроскоп,0,Foxlisic/M8088,677633762,Verilog,M8088,170,0,2023-08-12 18:54:48+00:00,[],https://api.github.com/licenses/mit
347,https://github.com/Sarthak14082003/Dual_port_asy_RAM.git,2023-08-11 14:35:18+00:00,,0,Sarthak14082003/Dual_port_asy_RAM,677423265,Verilog,Dual_port_asy_RAM,8,0,2023-08-18 14:13:29+00:00,[],None
348,https://github.com/AndersonHsieh0330/softcore_cpu.git,2023-08-03 04:05:11+00:00,8 bit accumulator based softcore cpu with custom ISA,0,AndersonHsieh0330/softcore_cpu,674063040,Verilog,softcore_cpu,679,0,2023-09-12 07:16:48+00:00,[],None
349,https://github.com/guilhermedebrites/Arq-I.git,2023-08-05 16:46:56+00:00,Arquitetura de Computadores ,0,guilhermedebrites/Arq-I,675064383,Verilog,Arq-I,220,0,2023-08-20 22:40:27+00:00,[],None
350,https://github.com/gg407/projects_verilog.git,2023-08-03 07:24:53+00:00,,0,gg407/projects_verilog,674119219,Verilog,projects_verilog,2464,0,2023-08-03 07:45:10+00:00,[],None
351,https://github.com/Mr-MOB/Verilog-Traffic-Light-Controller.git,2023-08-03 18:50:49+00:00,,0,Mr-MOB/Verilog-Traffic-Light-Controller,674358907,Verilog,Verilog-Traffic-Light-Controller,1,0,2023-08-03 18:53:22+00:00,[],None
352,https://github.com/saisreenivasareddy/APB_Protocol.git,2023-08-04 05:30:06+00:00,In this a top module is designed for  which inputs are given by a procesoror or TB.,0,saisreenivasareddy/APB_Protocol,674503288,Verilog,APB_Protocol,5,0,2023-08-04 05:33:38+00:00,[],None
353,https://github.com/fleb72/FPGA-WS2812B-RGB12leds-ring.git,2023-08-04 09:34:45+00:00,"WS2812B 12 Leds ring, FPGA controller",0,fleb72/FPGA-WS2812B-RGB12leds-ring,674580470,Verilog,FPGA-WS2812B-RGB12leds-ring,674,0,2023-08-04 10:44:14+00:00,[],None
354,https://github.com/avaneeshreddy20/functional_verification_calc1.git,2023-08-05 00:12:19+00:00,,0,avaneeshreddy20/functional_verification_calc1,674845205,Verilog,functional_verification_calc1,28,0,2023-08-05 00:16:06+00:00,[],None
355,https://github.com/nithishselva47/Verilog-code.git,2023-07-26 08:09:26+00:00,,0,nithishselva47/Verilog-code,670957456,Verilog,Verilog-code,402,0,2023-07-26 08:21:08+00:00,[],None
356,https://github.com/HU-Xu-yang/5-stage-static-superscalar-MIPS32v2-CPU-with-AES128-FPGA-verified.git,2023-07-26 09:08:28+00:00,THU Micro-Processor-Design lab assignment @2022 summer,0,HU-Xu-yang/5-stage-static-superscalar-MIPS32v2-CPU-with-AES128-FPGA-verified,670978655,Verilog,5-stage-static-superscalar-MIPS32v2-CPU-with-AES128-FPGA-verified,4252,0,2023-08-07 15:30:31+00:00,[],https://api.github.com/licenses/mit
357,https://github.com/YunJoongChul/Verilog-layer1-08.02.git,2023-08-02 06:50:38+00:00,,0,YunJoongChul/Verilog-layer1-08.02,673669675,Verilog,Verilog-layer1-08.02,22,0,2023-08-02 06:51:33+00:00,[],None
358,https://github.com/celiltosun/10x10_Tic_Tac_Toe-FPGA.git,2023-08-04 00:04:20+00:00,Verilog Implementation of 10x10 Tic Tac Toe for FPGA on VGA Display. ,0,celiltosun/10x10_Tic_Tac_Toe-FPGA,674431338,Verilog,10x10_Tic_Tac_Toe-FPGA,10,0,2023-08-04 00:24:43+00:00,[],None
359,https://github.com/HarshPatel1503/Traffic-Light-Controller-using-FSM.git,2023-08-02 16:55:00+00:00,,0,HarshPatel1503/Traffic-Light-Controller-using-FSM,673891744,Verilog,Traffic-Light-Controller-using-FSM,809,0,2023-08-02 17:10:43+00:00,[],None
360,https://github.com/ege-turan/ask_v0.git,2023-08-03 20:58:39+00:00,,0,ege-turan/ask_v0,674394345,Verilog,ask_v0,12,0,2023-08-03 20:59:55+00:00,[],None
361,https://github.com/hanyifansuda/Hierarchical-Sketch.git,2023-08-04 02:54:53+00:00,,0,hanyifansuda/Hierarchical-Sketch,674466615,Verilog,Hierarchical-Sketch,30,0,2023-08-04 03:04:25+00:00,[],None
362,https://github.com/YunJoongChul/Verilog-LeNet5-END-08.09.git,2023-08-09 00:41:43+00:00,,0,YunJoongChul/Verilog-LeNet5-END-08.09,676327087,Verilog,Verilog-LeNet5-END-08.09,100,0,2023-08-09 00:43:11+00:00,[],None
363,https://github.com/WeiChiaKung/Logic_Design_Lab.git,2023-08-09 03:49:12+00:00,邏輯設計實驗,0,WeiChiaKung/Logic_Design_Lab,676369358,Verilog,Logic_Design_Lab,8274,0,2023-08-09 03:51:23+00:00,[],None
364,https://github.com/yogeshk0126/LUT-Optimization.git,2023-08-06 15:15:16+00:00,Optimization of Look-Up Tables (LUTs) : LUTs are essentially small memory elements that store precomputed values to accelerate calculations or implement complex functions efficiently.,0,yogeshk0126/LUT-Optimization,675331626,Verilog,LUT-Optimization,522,0,2023-08-06 15:18:05+00:00,[],None
365,https://github.com/MoustafaDarsh/Softmax_And_Exponential.git,2023-08-08 03:03:24+00:00,,0,MoustafaDarsh/Softmax_And_Exponential,675915434,Verilog,Softmax_And_Exponential,91,0,2023-08-08 03:11:14+00:00,[],None
366,https://github.com/ssshah389/Sahil_MWSCAS2023.git,2023-08-06 17:58:31+00:00,MWSCAS2023_tutorial,0,ssshah389/Sahil_MWSCAS2023,675377223,Verilog,Sahil_MWSCAS2023,11911,0,2023-08-06 17:59:56+00:00,[],https://api.github.com/licenses/apache-2.0
367,https://github.com/abaggarwal27/Dynamic-Traffic-Light-Controller-using-verilog.git,2023-07-31 12:56:41+00:00,"There is a project called traffic light controller using Verilog hdl & FSM, This is the four way traffic signal which will change according to the density of the traffic",0,abaggarwal27/Dynamic-Traffic-Light-Controller-using-verilog,672912993,Verilog,Dynamic-Traffic-Light-Controller-using-verilog,1,0,2023-07-31 13:05:46+00:00,[],None
368,https://github.com/disneyyy/NCKUCSIE-CO-2022.git,2023-07-26 09:26:11+00:00,,0,disneyyy/NCKUCSIE-CO-2022,670985390,Verilog,NCKUCSIE-CO-2022,2470,0,2023-07-26 09:38:31+00:00,[],None
369,https://github.com/amirtha-2002/verilog_code.git,2023-07-26 07:35:33+00:00,,0,amirtha-2002/verilog_code,670945907,Verilog,verilog_code,256,0,2023-07-26 07:36:59+00:00,[],None
370,https://github.com/vivekkar88/VERILOG-MODULES.git,2023-07-26 11:02:30+00:00,,0,vivekkar88/VERILOG-MODULES,671019161,Verilog,VERILOG-MODULES,3,0,2023-08-02 20:49:34+00:00,[],None
371,https://github.com/bcdduffy/hdl-projects-main.git,2023-07-30 20:28:25+00:00,"Various HDL projects using Verilog, VHDL, and Qar",0,bcdduffy/hdl-projects-main,672658080,Verilog,hdl-projects-main,220,0,2023-07-30 20:28:30+00:00,[],None
372,https://github.com/SenthilMurugan-03/Verilog_HDL.git,2023-07-29 10:29:27+00:00,,0,SenthilMurugan-03/Verilog_HDL,672221257,Verilog,Verilog_HDL,407,0,2023-07-29 10:32:10+00:00,[],None
373,https://github.com/YunJoongChul/Verilog-layer1-08.02-night.git,2023-08-02 08:48:15+00:00,,0,YunJoongChul/Verilog-layer1-08.02-night,673710369,Verilog,Verilog-layer1-08.02-night,22,0,2023-08-02 08:48:39+00:00,[],None
374,https://github.com/ParvChandola09/RTL.git,2023-08-01 07:50:23+00:00,,0,ParvChandola09/RTL,673247753,Verilog,RTL,41,0,2023-08-01 09:00:21+00:00,[],None
375,https://github.com/MSinare/LogicGates_Verilog.git,2023-08-01 10:43:45+00:00,"Includes Verilog implementation of NOT, AND, OR and XOR gates",0,MSinare/LogicGates_Verilog,673309288,Verilog,LogicGates_Verilog,4,0,2023-08-01 10:55:37+00:00,[],None
376,https://github.com/ErenYagar/cnt4.git,2023-08-11 09:44:09+00:00,四位元的計數器,0,ErenYagar/cnt4,677327398,Verilog,cnt4,1,0,2023-08-11 09:44:36+00:00,[],None
377,https://github.com/KAZIcodes/Vending-Machine-using-Verilog.git,2023-08-10 10:52:43+00:00,Verilog code for a Vending Machine,0,KAZIcodes/Vending-Machine-using-Verilog,676933835,Verilog,Vending-Machine-using-Verilog,16,0,2023-08-10 10:54:40+00:00,[],https://api.github.com/licenses/mit
378,https://github.com/mole99/interconnect-tests.git,2023-08-10 11:29:35+00:00,Tests for SDF interconnect support in Icarus Verilog.,0,mole99/interconnect-tests,676945978,Verilog,interconnect-tests,735,0,2023-08-10 12:12:58+00:00,[],https://api.github.com/licenses/apache-2.0
379,https://github.com/GohYuJin/MojoLucidWAM.git,2023-08-10 14:56:36+00:00,Archive of 50.002 Computation Structures Project,0,GohYuJin/MojoLucidWAM,677023024,Verilog,MojoLucidWAM,609,0,2023-08-10 15:33:28+00:00,[],None
380,https://github.com/deepkanhai/12_hour_clock.git,2023-08-11 11:27:21+00:00,,0,deepkanhai/12_hour_clock,677359307,Verilog,12_hour_clock,1,0,2023-08-11 11:27:58+00:00,[],None
381,https://github.com/AbdelrahmanKhaled826/clocks_generator.git,2023-08-06 01:26:03+00:00,,0,AbdelrahmanKhaled826/clocks_generator,675157196,Verilog,clocks_generator,1778,0,2023-12-18 15:35:42+00:00,[],None
382,https://github.com/Niiui/HDLBits_solution.git,2023-07-26 07:39:01+00:00,HDLBits Verilog practice solutions,0,Niiui/HDLBits_solution,670947067,Verilog,HDLBits_solution,141,0,2023-07-26 07:42:13+00:00,[],https://api.github.com/licenses/gpl-3.0
383,https://github.com/SolankiPratikkumar/IIITB_PRATIKKUMAR_ASIC.git,2023-07-31 04:35:17+00:00,,0,SolankiPratikkumar/IIITB_PRATIKKUMAR_ASIC,672747425,Verilog,IIITB_PRATIKKUMAR_ASIC,8028,0,2023-11-02 13:27:26+00:00,[],None
384,https://github.com/trong420/CPU-structural.git,2023-08-11 12:38:29+00:00,CPU With Structural Modeling In Verilog,0,trong420/CPU-structural,677382322,Verilog,CPU-structural,1897,0,2024-02-18 13:18:08+00:00,[],None
385,https://github.com/gunavant-s/Mod-N_Counter-Day-022.git,2023-08-10 00:37:38+00:00,The Mod-N Counter is a digital circuit that counts from 0 to N-1 and then sets to 0 and repeats.,0,gunavant-s/Mod-N_Counter-Day-022,676761177,Verilog,Mod-N_Counter-Day-022,83,0,2023-08-10 00:38:04+00:00,[],None
386,https://github.com/Foxlisic/Z80CORE.git,2023-08-08 07:13:29+00:00,Просто спектрумы мои,0,Foxlisic/Z80CORE,675985849,Verilog,Z80CORE,1226,0,2023-08-11 06:06:13+00:00,[],https://api.github.com/licenses/mit
387,https://github.com/AfifehGhaemnia/Frac_VSDVersion.git,2023-07-28 13:06:39+00:00,,0,AfifehGhaemnia/Frac_VSDVersion,671923955,Verilog,Frac_VSDVersion,11912,0,2023-07-28 13:08:04+00:00,[],https://api.github.com/licenses/apache-2.0
388,https://github.com/Shreyash420024/Computer_Architecture.git,2023-07-28 07:23:07+00:00,,0,Shreyash420024/Computer_Architecture,671808647,Verilog,Computer_Architecture,1787,0,2023-07-28 07:25:17+00:00,[],None
389,https://github.com/gunavant-s/JK_Flip_Flop.git,2023-07-30 02:10:31+00:00,"JK Flip Flop is a flip flop which consists of a few logic gates in front of a D-flip flop. A JK flip-flop is also called a universal flip-flop because it can be configured to work as an SR flip-flop, D flip-flop or T flip-flop.",0,gunavant-s/JK_Flip_Flop,672413720,Verilog,JK_Flip_Flop,35,0,2023-07-30 02:10:55+00:00,[],None
390,https://github.com/Mendandukka/efabless_mpw7h.git,2023-07-30 18:15:07+00:00,,0,Mendandukka/efabless_mpw7h,672628994,Verilog,efabless_mpw7h,11911,0,2023-07-30 18:16:38+00:00,[],https://api.github.com/licenses/apache-2.0
391,https://github.com/ege-turan/dpsk_v0.git,2023-08-03 21:01:37+00:00,,0,ege-turan/dpsk_v0,674395066,Verilog,dpsk_v0,16,0,2023-08-03 21:01:50+00:00,[],None
392,https://github.com/Sln-19/Arbiter_Implimentation.git,2023-08-01 09:52:35+00:00,Verilog code to implement car parking.,0,Sln-19/Arbiter_Implimentation,673291411,Verilog,Arbiter_Implimentation,6,0,2023-08-01 17:24:21+00:00,[],None
393,https://github.com/FreitasFPGASolutions/PYNQ.git,2023-07-27 16:33:34+00:00,,0,FreitasFPGASolutions/PYNQ,671579236,Verilog,PYNQ,509,0,2023-07-27 16:43:07+00:00,[],None
394,https://github.com/SenthilMurugan-03/Verilog-HDL.git,2023-07-26 10:10:49+00:00,,0,SenthilMurugan-03/Verilog-HDL,671001762,Verilog,Verilog-HDL,239,0,2023-07-26 10:50:48+00:00,[],None
395,https://github.com/YunJoongChul/Verilog-FC84to10.git,2023-07-27 08:12:20+00:00,,0,YunJoongChul/Verilog-FC84to10,671395146,Verilog,Verilog-FC84to10,40,0,2023-07-28 02:11:51+00:00,[],None
396,https://github.com/saiprasanna12345/MIPS32-RSIC-processor-implementation-in-verilog.git,2023-07-31 08:32:38+00:00,,0,saiprasanna12345/MIPS32-RSIC-processor-implementation-in-verilog,672818293,Verilog,MIPS32-RSIC-processor-implementation-in-verilog,3,0,2023-07-31 08:34:21+00:00,[],None
397,https://github.com/ayaahmed20018414/Pipelined-RISCV-processor-with-full-hazard-handling.git,2023-08-06 14:44:11+00:00,,0,ayaahmed20018414/Pipelined-RISCV-processor-with-full-hazard-handling,675323042,Verilog,Pipelined-RISCV-processor-with-full-hazard-handling,20,0,2023-08-06 14:52:54+00:00,[],None
398,https://github.com/Kulsoomgit/verilog_practice.git,2023-08-07 10:55:05+00:00,,0,Kulsoomgit/verilog_practice,675624404,Verilog,verilog_practice,7,0,2023-08-08 08:17:06+00:00,[],None
399,https://github.com/wjh888666/wjh.git,2023-08-06 18:08:44+00:00,,0,wjh888666/wjh,675379788,Verilog,wjh,11911,0,2023-08-06 18:10:16+00:00,[],https://api.github.com/licenses/apache-2.0
400,https://github.com/mohamedsalah64792/washing-machine-.git,2023-07-26 20:33:32+00:00,,0,mohamedsalah64792/washing-machine-,671222880,Verilog,washing-machine-,4415,0,2023-07-26 20:41:31+00:00,[],None
401,https://github.com/darshan-kr/Day-009-Comparator.git,2023-07-26 15:08:42+00:00,"A digital comparator or magnitude comparator is a hardware electronic device that takes two numbers as input in binary form and determines whether one number is greater than, less than or equal to the other number. ",0,darshan-kr/Day-009-Comparator,671113239,Verilog,Day-009-Comparator,2,0,2023-07-26 15:10:14+00:00,[],None
402,https://github.com/ErenYagar/Adder32.git,2023-07-26 12:39:12+00:00,,0,ErenYagar/Adder32,671052717,Verilog,Adder32,4,0,2023-08-06 07:20:11+00:00,[],None
403,https://github.com/h-kaushik/single-precision-complex-arithmetic.git,2023-08-08 16:17:01+00:00,Self-project on describing hardware for complex addition and multiplication based on IEEE-754 single precision arithmetic.,0,h-kaushik/single-precision-complex-arithmetic,676188233,Verilog,single-precision-complex-arithmetic,5,0,2023-08-17 10:21:44+00:00,"['verilog', 'verilog-hdl']",None
404,https://github.com/gunavant-s/Ring_Counter-Day021.git,2023-08-09 01:10:41+00:00,"A Ring Counter is a type of digital counter that consists of a series of flip-flops connected in a circular configuration, where the output of each flip-flop is connected to the input of the next flip-flop.",0,gunavant-s/Ring_Counter-Day021,676332864,Verilog,Ring_Counter-Day021,55,0,2023-08-10 08:07:26+00:00,[],None
405,https://github.com/ErenYagar/RCA_clk.git,2023-08-11 09:43:03+00:00,4位元的漣波進位加法器,0,ErenYagar/RCA_clk,677327040,Verilog,RCA_clk,1,0,2023-08-11 09:47:41+00:00,[],None
406,https://github.com/IITG-SRC/AES.git,2023-08-05 01:52:19+00:00,,0,IITG-SRC/AES,674860437,Verilog,AES,3,0,2023-08-05 01:57:50+00:00,[],None
407,https://github.com/bratin03/5TH-SEMESTER-CSE.git,2023-08-02 03:46:07+00:00,,0,bratin03/5TH-SEMESTER-CSE,673620435,Verilog,5TH-SEMESTER-CSE,546996,0,2023-11-20 03:14:58+00:00,[],None
408,https://github.com/Steffi-Roy/Verilog-Code.git,2023-08-06 01:19:17+00:00,"part of #100DaysOfCode, I am going to focus on digital design and design verification.",0,Steffi-Roy/Verilog-Code,675156271,Verilog,Verilog-Code,2,0,2023-08-06 02:32:25+00:00,[],None
409,https://github.com/Pizbo1/SideChannelDisassemblyIP.git,2023-08-05 19:27:07+00:00,The custom AXI IP I made for my dissertation,0,Pizbo1/SideChannelDisassemblyIP,675101360,Verilog,SideChannelDisassemblyIP,44,0,2023-08-05 19:36:21+00:00,[],https://api.github.com/licenses/gpl-3.0
410,https://github.com/Af-Oaks/Processador8bits.git,2023-08-08 21:19:50+00:00,,0,Af-Oaks/Processador8bits,676284550,Verilog,Processador8bits,113,0,2023-08-08 21:22:52+00:00,[],https://api.github.com/licenses/mit
411,https://github.com/MoamenSAlkady/UART.git,2023-08-12 05:36:19+00:00,,0,MoamenSAlkady/UART,677632099,Verilog,UART,4,0,2023-08-12 06:18:45+00:00,[],https://api.github.com/licenses/mit
412,https://github.com/yuvi15158/Digital-Clock.git,2023-08-12 05:06:03+00:00,,0,yuvi15158/Digital-Clock,677626479,Verilog,Digital-Clock,3,0,2023-08-12 05:17:33+00:00,[],None
413,https://github.com/Tawfeeq2507/pes_asic_class.git,2023-08-12 13:14:48+00:00,,0,Tawfeeq2507/pes_asic_class,677735483,Verilog,pes_asic_class,5601,0,2023-08-29 14:45:24+00:00,[],None
414,https://github.com/AITT000/CPU-design.git,2023-08-12 15:16:48+00:00,Design a CPU for calculator programmed by Verilog.,0,AITT000/CPU-design,677767487,Verilog,CPU-design,19,0,2023-08-12 15:31:13+00:00,[],None
415,https://github.com/YunJoongChul/Verilog-LeNet5-6Mult-END-08.09.git,2023-08-11 07:40:05+00:00,,0,YunJoongChul/Verilog-LeNet5-6Mult-END-08.09,677288486,Verilog,Verilog-LeNet5-6Mult-END-08.09,101,0,2023-08-11 07:41:30+00:00,[],None
416,https://github.com/framazzaa/HDMI-Controller-ES.git,2023-07-29 08:58:08+00:00,,0,framazzaa/HDMI-Controller-ES,672200444,Verilog,HDMI-Controller-ES,121895,0,2023-07-29 09:11:28+00:00,[],None
417,https://github.com/zeroleaked/hdlLPC.git,2023-08-04 12:59:17+00:00,,0,zeroleaked/hdlLPC,674648002,Verilog,hdlLPC,61,0,2023-08-04 13:04:30+00:00,[],None
418,https://github.com/m7md5303/Single-cycle-Risk-v.git,2023-07-28 23:20:12+00:00,A single cycle risk-v processor ALU implemented using Verilog HDL,0,m7md5303/Single-cycle-Risk-v,672095886,Verilog,Single-cycle-Risk-v,69,0,2023-07-28 23:42:25+00:00,[],None
419,https://github.com/MapleDSP/VBuilder.git,2023-07-29 17:36:41+00:00,,0,MapleDSP/VBuilder,672327459,Verilog,VBuilder,1068,0,2023-07-29 17:45:59+00:00,[],None
420,https://github.com/siliconised/single_cycle_processor.git,2023-07-30 03:57:22+00:00,,0,siliconised/single_cycle_processor,672429752,Verilog,single_cycle_processor,5,0,2023-07-30 03:58:35+00:00,[],None
421,https://github.com/richardhkbrown/BldcDriver.git,2023-08-05 00:33:19+00:00,,0,richardhkbrown/BldcDriver,674848378,Verilog,BldcDriver,63867,0,2023-08-05 00:42:27+00:00,[],None
422,https://github.com/arishsatheesan/Xoodoo-NC.git,2023-08-06 13:51:38+00:00,,0,arishsatheesan/Xoodoo-NC,675308825,Verilog,Xoodoo-NC,3,0,2023-08-06 13:54:06+00:00,[],None
423,https://github.com/Mendandukka/efabless_mpw8c.git,2023-07-30 14:19:32+00:00,,0,Mendandukka/efabless_mpw8c,672566398,Verilog,efabless_mpw8c,11913,0,2023-07-30 14:21:24+00:00,[],https://api.github.com/licenses/apache-2.0
424,https://github.com/zxtres/testplaca.git,2023-07-30 13:36:23+00:00,,0,zxtres/testplaca,672554777,Verilog,testplaca,206,0,2023-07-30 13:41:47+00:00,[],None
425,https://github.com/Vinayaka2k/DDCO_Proj.git,2023-07-30 02:52:43+00:00,Implementing shift left and shift right operations for the existing ALU and register using verilog,0,Vinayaka2k/DDCO_Proj,672419994,Verilog,DDCO_Proj,1086,0,2023-07-30 02:53:19+00:00,[],None
426,https://github.com/AfifehGhaemnia/Test_Design.git,2023-07-30 06:51:04+00:00,,0,AfifehGhaemnia/Test_Design,672460540,Verilog,Test_Design,11912,0,2023-07-30 06:53:33+00:00,[],https://api.github.com/licenses/apache-2.0
427,https://github.com/Aryanarc232/CORDIC-Processor.git,2023-08-03 17:53:27+00:00,– It is used to implement CORDIC algorithm which is a highly iterative algorithm used for efficient calculation of trigonometric and hyperbolic functions. – It employs simple shift and add operations to iteratively approximate rotations. – It is widely used in hardware implementations for efficient computation,0,Aryanarc232/CORDIC-Processor,674341249,Verilog,CORDIC-Processor,4,0,2023-08-03 17:54:11+00:00,[],None
428,https://github.com/Rabiyabasari/AHB_TO_APB_BRIDGE.git,2023-08-05 13:11:14+00:00,,0,Rabiyabasari/AHB_TO_APB_BRIDGE,675005652,Verilog,AHB_TO_APB_BRIDGE,9218,0,2023-09-08 17:58:18+00:00,[],None
429,https://github.com/Amineul/testam.git,2023-08-06 18:03:24+00:00,,0,Amineul/testam,675378491,Verilog,testam,11912,0,2023-08-06 18:05:08+00:00,[],https://api.github.com/licenses/apache-2.0
430,https://github.com/Trevlabz/efabless_demo.git,2023-08-06 18:03:42+00:00,,0,Trevlabz/efabless_demo,675378573,Verilog,efabless_demo,11911,0,2023-08-06 18:05:15+00:00,[],https://api.github.com/licenses/apache-2.0
431,https://github.com/nekocharm/lichee_tang_nano_demo.git,2023-08-07 09:15:45+00:00,,0,nekocharm/lichee_tang_nano_demo,675589840,Verilog,lichee_tang_nano_demo,1303,0,2023-08-22 13:46:18+00:00,[],https://api.github.com/licenses/gpl-3.0
432,https://github.com/lucasdinnouti/MC851.git,2023-08-04 17:34:05+00:00,Popullacho,1,lucasdinnouti/MC851,674755533,Verilog,MC851,559,0,2023-08-18 00:03:53+00:00,[],None
433,https://github.com/rajitha0119/100-DAYS-OF-RTL--DAY-24.git,2023-08-07 13:43:43+00:00,"JK FLIPFLOP USING SR,D,T FLIPFLOPS",0,rajitha0119/100-DAYS-OF-RTL--DAY-24,675686161,Verilog,100-DAYS-OF-RTL--DAY-24,530,0,2023-08-07 13:47:25+00:00,[],None
434,https://github.com/stevenli518/CuBoulder_ECEN2350_DigitalLogic.git,2023-08-10 16:28:21+00:00,,0,stevenli518/CuBoulder_ECEN2350_DigitalLogic,677058048,Verilog,CuBoulder_ECEN2350_DigitalLogic,9574,0,2023-08-10 16:41:50+00:00,[],None
435,https://github.com/vishwasbhansali/vishwasbhansali.git,2023-08-10 02:00:51+00:00,Config files for my GitHub profile.,0,vishwasbhansali/vishwasbhansali,676778200,Verilog,vishwasbhansali,414,0,2023-08-10 02:05:59+00:00,"['config', 'github-config']",None
436,https://github.com/manglamayank/Design-and-Verification-of-Sequential-Logic-Block---D-Flip-Flop.git,2023-08-11 15:17:32+00:00,Designed the class based verification environment using System Verilog. Implemented Testbench methodology.,0,manglamayank/Design-and-Verification-of-Sequential-Logic-Block---D-Flip-Flop,677438788,Verilog,Design-and-Verification-of-Sequential-Logic-Block---D-Flip-Flop,3,0,2023-10-08 06:18:31+00:00,[],None
437,https://github.com/KeerthiBhushanM/caravel_user_project.git,2023-08-11 19:10:41+00:00,,0,KeerthiBhushanM/caravel_user_project,677513096,Verilog,caravel_user_project,11912,0,2023-08-11 19:12:37+00:00,[],https://api.github.com/licenses/apache-2.0
438,https://github.com/HarshPatel1503/JK_ff.git,2023-08-11 11:15:19+00:00,,0,HarshPatel1503/JK_ff,677355574,Verilog,JK_ff,0,0,2023-08-11 11:15:42+00:00,[],None
439,https://github.com/OverflowCat/hdlbits.git,2023-07-27 23:24:09+00:00,My HDLBits solutions ,0,OverflowCat/hdlbits,671692408,Verilog,hdlbits,3,0,2023-07-27 23:25:57+00:00,[],None
440,https://github.com/HarineeRathod/Computer-Architecture.git,2023-07-30 05:10:37+00:00,,0,HarineeRathod/Computer-Architecture,672441510,Verilog,Computer-Architecture,994,0,2023-07-30 05:54:12+00:00,[],None
441,https://github.com/luiscarlos63/AES_testing.git,2023-08-02 15:08:51+00:00,,0,luiscarlos63/AES_testing,673852106,Verilog,AES_testing,62,0,2023-08-02 21:20:30+00:00,[],None
442,https://github.com/mlg556/femtoriscv.git,2023-08-01 18:26:48+00:00,,0,mlg556/femtoriscv,673486142,Verilog,femtoriscv,3701,0,2023-08-01 19:22:47+00:00,[],None
443,https://github.com/2jyun/stopwatch_project.git,2023-08-01 01:38:08+00:00,본 파일은 Xilinx Vivado 2022.2 프로그램 버전으로 제작되었으며 Vivado Project File을 클릭하시면 열 수 있습니다. 혹은 .v파일이 있으니  코드만 바로 확인 가능합니다. 부족하거나 미흡한 부분 있어도 양해 부탁드립니다. 감사합니다.,0,2jyun/stopwatch_project,673147872,Verilog,stopwatch_project,1020,0,2023-08-01 02:06:45+00:00,[],None
444,https://github.com/Jimmoty-Proton/tang-nano-9k-vga-test.git,2023-07-28 04:11:54+00:00,Tang Nano 9k VGA interface example,0,Jimmoty-Proton/tang-nano-9k-vga-test,671755535,Verilog,tang-nano-9k-vga-test,17,0,2023-07-28 05:13:13+00:00,[],https://api.github.com/licenses/gpl-3.0
445,https://github.com/ahmetserdar/sfp0_zcu102.git,2023-08-03 06:51:48+00:00,zcu102 sfp0 verilog ethernet project is created by alexforencich,0,ahmetserdar/sfp0_zcu102,674107874,Verilog,sfp0_zcu102,9,0,2023-08-03 06:52:40+00:00,[],None
446,https://github.com/darphee1025/jwq40260.git,2023-07-31 02:02:40+00:00,,0,darphee1025/jwq40260,672714636,Verilog,jwq40260,315959,0,2023-11-01 01:22:37+00:00,[],None
447,https://github.com/unoyan/efables.git,2023-08-06 18:05:17+00:00,,0,unoyan/efables,675378929,Verilog,efables,11912,0,2023-08-06 18:07:05+00:00,[],https://api.github.com/licenses/apache-2.0
448,https://github.com/MarimoElectronics/Yonaguni-FPGA.git,2023-07-26 23:45:54+00:00,,0,MarimoElectronics/Yonaguni-FPGA,671264834,Verilog,Yonaguni-FPGA,2349,0,2023-09-15 05:52:24+00:00,[],None
449,https://github.com/YousefArnaaut/ALU.git,2023-08-09 02:29:56+00:00,,0,YousefArnaaut/ALU,676350748,Verilog,ALU,299,0,2024-02-17 21:43:56+00:00,[],None
450,https://github.com/JorisPellereau/RTL_Testbench.git,2023-07-28 14:42:05+00:00,This is the repository of my Generic RTL Testbench,0,JorisPellereau/RTL_Testbench,671958275,Verilog,RTL_Testbench,415,0,2023-07-28 14:53:55+00:00,[],None
451,https://github.com/Abhinav412/DDCO.git,2023-08-07 17:38:51+00:00,,0,Abhinav412/DDCO,675776618,Verilog,DDCO,16,0,2024-03-26 09:46:59+00:00,[],None
452,https://github.com/dxlnr/fromthetransistor.git,2023-07-30 17:41:32+00:00,From the Transistor to the Web Browser.,0,dxlnr/fromthetransistor,672620567,Verilog,fromthetransistor,9739,0,2024-03-01 16:01:40+00:00,"['c', 'python', 'verilog', 'fpga']",None
453,https://github.com/efabless/openlane2-ci-designs.git,2023-07-30 18:23:07+00:00,Continuous Integration Designs for OpenLane 2.0.0 or higher,0,efabless/openlane2-ci-designs,672630932,Verilog,openlane2-ci-designs,51549,0,2023-07-30 18:27:28+00:00,[],None
454,https://github.com/BlueTuna42/Eclipse_spectrometer.git,2023-08-08 10:24:04+00:00,DIY spectrograph for astronomy ,0,BlueTuna42/Eclipse_spectrometer,676052928,Verilog,Eclipse_spectrometer,538,0,2023-08-15 10:36:35+00:00,[],https://api.github.com/licenses/mit
455,https://github.com/HarshPatel1503/Array_mult.git,2023-08-11 11:14:08+00:00,,0,HarshPatel1503/Array_mult,677355206,Verilog,Array_mult,1,0,2023-08-11 11:14:26+00:00,[],None
456,https://github.com/FatmaAli99/UP_DOWN_COUNTER.git,2023-08-08 18:20:56+00:00,,0,FatmaAli99/UP_DOWN_COUNTER,676232489,Verilog,UP_DOWN_COUNTER,71,0,2023-08-08 18:21:34+00:00,[],None
457,https://github.com/animeshmaiti/verilog_HDL.git,2023-08-09 15:24:02+00:00,,0,animeshmaiti/verilog_HDL,676604496,Verilog,verilog_HDL,347,0,2023-08-09 15:26:20+00:00,[],None
458,https://github.com/sasi-kiran123/cordic_architecture.git,2023-07-30 06:33:23+00:00,,0,sasi-kiran123/cordic_architecture,672456990,Verilog,cordic_architecture,502,0,2023-08-13 05:10:11+00:00,[],https://api.github.com/licenses/mit
459,https://github.com/gunavant-s/Down_counter_Day19.git,2023-08-07 01:18:23+00:00,"A down counter is a digital circuit that counts down from a given value to zero, and then resets itself to the original value to repeat the process.",0,gunavant-s/Down_counter_Day19,675459245,Verilog,Down_counter_Day19,60,0,2023-08-07 01:19:26+00:00,[],None
460,https://github.com/huifuhao/OV5640_MIPI.git,2023-08-06 11:45:01+00:00,,0,huifuhao/OV5640_MIPI,675277510,Verilog,OV5640_MIPI,5,0,2023-08-06 11:49:34+00:00,[],None
461,https://github.com/snehith-namgiri/Semi-Custom-Design-of-a-CLA-with-90nm-Using-Cadence-main.git,2023-08-01 18:54:36+00:00,,0,snehith-namgiri/Semi-Custom-Design-of-a-CLA-with-90nm-Using-Cadence-main,673495084,Verilog,Semi-Custom-Design-of-a-CLA-with-90nm-Using-Cadence-main,1544,0,2023-08-01 18:57:28+00:00,[],None
462,https://github.com/MohamedKhaleeed/Greatest_common_Divisor.git,2023-07-28 20:48:52+00:00,,0,MohamedKhaleeed/Greatest_common_Divisor,672067528,Verilog,Greatest_common_Divisor,3,0,2023-07-28 20:51:21+00:00,[],None
463,https://github.com/MohamedKhaleeed/RSA.git,2023-07-28 21:10:00+00:00,RSA algorithm Implementation on FPGA using Verilog.,0,MohamedKhaleeed/RSA,672072136,Verilog,RSA,292,0,2023-07-28 21:29:24+00:00,[],None
464,https://github.com/MohamedKhaleeed/Traffic_light_controller.git,2023-07-28 20:56:35+00:00,,0,MohamedKhaleeed/Traffic_light_controller,672069222,Verilog,Traffic_light_controller,13,0,2023-07-28 20:56:57+00:00,[],None
465,https://github.com/duyhieubui/caravel_uniccass_example.git,2023-07-31 10:56:51+00:00,,0,duyhieubui/caravel_uniccass_example,672869179,Verilog,caravel_uniccass_example,171126,0,2023-08-17 08:54:17+00:00,[],https://api.github.com/licenses/apache-2.0
466,https://github.com/NamrathaCTR/8-bit-Wallace-Multipier.git,2023-08-09 13:53:20+00:00,,0,NamrathaCTR/8-bit-Wallace-Multipier,676568241,Verilog,8-bit-Wallace-Multipier,6,0,2023-08-09 13:57:25+00:00,[],None
467,https://github.com/YunJoongChul/Verilog-LeNet5-UART-END-08.09.git,2023-08-09 03:50:20+00:00,,0,YunJoongChul/Verilog-LeNet5-UART-END-08.09,676369673,Verilog,Verilog-LeNet5-UART-END-08.09,449,0,2023-08-09 03:53:39+00:00,[],None
468,https://github.com/avaj4/processor.git,2023-08-09 20:27:02+00:00,,0,avaj4/processor,676707586,Verilog,processor,5,0,2023-08-09 20:29:39+00:00,[],None
469,https://github.com/Anshul380/Design-Comparison-of-8x8-bit-Dadda-Wallace-Multiplier.git,2023-08-12 19:54:18+00:00,,0,Anshul380/Design-Comparison-of-8x8-bit-Dadda-Wallace-Multiplier,677836488,Verilog,Design-Comparison-of-8x8-bit-Dadda-Wallace-Multiplier,806,0,2023-08-16 18:25:24+00:00,[],None
470,https://github.com/Rueicinglin/Verilog-Project.git,2023-08-02 05:49:38+00:00,Implementing verilog projects,0,Rueicinglin/Verilog-Project,673651291,Verilog,Verilog-Project,5114,0,2023-08-02 06:30:32+00:00,[],None
471,https://github.com/vishnu-05-03/digital-lottery-system.git,2023-08-02 18:29:10+00:00,,0,vishnu-05-03/digital-lottery-system,673926214,Verilog,digital-lottery-system,7,0,2023-08-02 18:29:30+00:00,[],None
472,https://github.com/k20057/LBP.git,2023-08-02 14:19:49+00:00,,0,k20057/LBP,673831721,Verilog,LBP,210,0,2023-08-02 14:21:47+00:00,[],None
473,https://github.com/HASAN-49/Digital-System-Design-Lab.git,2023-08-04 15:21:32+00:00,,0,HASAN-49/Digital-System-Design-Lab,674711112,Verilog,Digital-System-Design-Lab,24,0,2023-08-04 15:25:24+00:00,[],None
474,https://github.com/Saidul-1/CSE2112-Digital_System_Design_Lab.git,2023-08-04 18:56:33+00:00,"This repository contains Verilog HDL code solutions for the lab tasks of the course 'CSE2112 - Digital System Design Lab', which were simulated using ModelSim.",0,Saidul-1/CSE2112-Digital_System_Design_Lab,674779527,Verilog,CSE2112-Digital_System_Design_Lab,11,0,2023-08-06 07:27:30+00:00,[],None
475,https://github.com/BhaweshMishra/SPI-Master-Core-Module.git,2023-08-04 18:09:19+00:00,,0,BhaweshMishra/SPI-Master-Core-Module,674766191,Verilog,SPI-Master-Core-Module,9,0,2023-08-04 18:19:38+00:00,[],None
476,https://github.com/NHGrizzly/Display7Seg.git,2023-07-26 20:08:13+00:00,Converts binary switch input to 7 segment display output on the Cyclone V GX Starter development board,0,NHGrizzly/Display7Seg,671215646,Verilog,Display7Seg,3,0,2023-07-26 20:08:18+00:00,[],None
477,https://github.com/HiteshKumarTyro/Asynchrounous_FIFO_Hitesh.git,2023-08-02 13:41:44+00:00,,0,HiteshKumarTyro/Asynchrounous_FIFO_Hitesh,673816388,Verilog,Asynchrounous_FIFO_Hitesh,5,0,2023-08-02 13:42:53+00:00,[],None
478,https://github.com/DuBirdFly/ASIC_PRJ.git,2023-08-02 15:53:20+00:00,上班培训要做的一个小project,0,DuBirdFly/ASIC_PRJ,673868995,Verilog,ASIC_PRJ,277,0,2023-08-02 15:55:31+00:00,[],None
479,https://github.com/ChrysovalantisPsilos/Arithmetic-Circuits.git,2023-08-03 16:14:33+00:00,,0,ChrysovalantisPsilos/Arithmetic-Circuits,674308564,Verilog,Arithmetic-Circuits,9180,0,2023-08-03 17:03:03+00:00,[],None
480,https://github.com/radic2682/radix-8_Booth_Multiplier.git,2023-08-03 14:55:20+00:00,,0,radic2682/radix-8_Booth_Multiplier,674280168,Verilog,radix-8_Booth_Multiplier,7,0,2023-08-14 07:17:18+00:00,[],None
481,https://github.com/Shahiraosama/Automatic_Garage_Door_Controller.git,2023-08-03 18:45:11+00:00,,0,Shahiraosama/Automatic_Garage_Door_Controller,674357238,Verilog,Automatic_Garage_Door_Controller,35,0,2023-08-03 18:47:38+00:00,[],None
482,https://github.com/Mohamed-Nasser620/Cyclic-Redundancy-Check.git,2023-08-03 15:34:06+00:00,,0,Mohamed-Nasser620/Cyclic-Redundancy-Check,674294645,Verilog,Cyclic-Redundancy-Check,207,0,2023-08-03 15:34:16+00:00,[],None
483,https://github.com/minrhmn/tetlog.git,2023-08-03 19:09:14+00:00,,0,minrhmn/tetlog,674364453,Verilog,tetlog,2084,0,2023-08-03 19:19:16+00:00,[],None
484,https://github.com/Ian-M-M/MIPS_Processor.git,2023-08-03 10:38:12+00:00,A past project that I want to expand,0,Ian-M-M/MIPS_Processor,674186230,Verilog,MIPS_Processor,2411,0,2023-08-03 10:50:20+00:00,[],None
485,https://github.com/gunavant-s/T_Flip_Flop_Day-010.git,2023-07-29 02:11:27+00:00,"T Flip-Flop: When the clock rises from 0 to 1, the value remembered by the flip-flop either toggles or remains the same depending on whether the T input (Toggle) is 1 or 0.",0,gunavant-s/T_Flip_Flop_Day-010,672122583,Verilog,T_Flip_Flop_Day-010,34,0,2023-07-29 02:12:32+00:00,[],None
486,https://github.com/00853029/IC_Contest_104.git,2023-07-29 08:34:59+00:00,,0,00853029/IC_Contest_104,672195233,Verilog,IC_Contest_104,7984,0,2023-07-29 09:07:52+00:00,[],None
487,https://github.com/YunJoongChul/Verilog.git,2023-07-26 08:28:21+00:00,,0,YunJoongChul/Verilog,670964073,Verilog,Verilog,6,0,2023-07-28 02:10:45+00:00,[],None
488,https://github.com/akshayanr/traffic_signal_simulator.git,2023-07-31 02:21:00+00:00,This is a sequential traffic signal simulator built in Verilog,0,akshayanr/traffic_signal_simulator,672718425,Verilog,traffic_signal_simulator,2,0,2023-08-02 23:42:45+00:00,[],None
489,https://github.com/Shinhyundo/VGA.git,2023-07-31 17:37:48+00:00,,0,Shinhyundo/VGA,673024403,Verilog,VGA,13,0,2023-07-31 17:47:28+00:00,[],None
490,https://github.com/YunJoongChul/Verilog-MaxPooling-08.01.git,2023-08-01 04:42:37+00:00,,0,YunJoongChul/Verilog-MaxPooling-08.01,673191104,Verilog,Verilog-MaxPooling-08.01,16,0,2023-08-01 04:43:07+00:00,[],None
491,https://github.com/Promethees/EE2026-project-final.git,2023-07-30 15:23:56+00:00,,0,Promethees/EE2026-project-final,672584170,Verilog,EE2026-project-final,1197,0,2023-07-30 15:33:55+00:00,[],None
492,https://github.com/Sweet-Nemesis/efab.git,2023-08-06 18:18:23+00:00,,0,Sweet-Nemesis/efab,675382215,Verilog,efab,11912,0,2023-08-06 18:20:07+00:00,[],https://api.github.com/licenses/apache-2.0
493,https://github.com/Failorc/testfailorc.git,2023-08-06 17:57:24+00:00,,0,Failorc/testfailorc,675376943,Verilog,testfailorc,11911,0,2023-08-06 17:58:50+00:00,[],https://api.github.com/licenses/apache-2.0
494,https://github.com/midolls/goss_test.git,2023-08-06 06:55:01+00:00,test element,0,midolls/goss_test,675213786,Verilog,goss_test,283,0,2023-08-17 06:37:46+00:00,[],None
495,https://github.com/mavi62/IIITB_VLSI.git,2023-07-31 04:08:15+00:00,,0,mavi62/IIITB_VLSI,672741663,Verilog,IIITB_VLSI,408,0,2023-11-25 17:10:26+00:00,[],None
496,https://github.com/BhaskarBhatt/SP.git,2023-08-08 16:08:31+00:00,,0,BhaskarBhatt/SP,676184784,Verilog,SP,96,0,2024-02-20 13:07:46+00:00,[],None
497,https://github.com/n0nsense-404/verilog.git,2023-08-07 09:18:31+00:00,,0,n0nsense-404/verilog,675590876,Verilog,verilog,6,0,2023-08-16 17:33:22+00:00,[],None
498,https://github.com/2lambda123/SiliconRE.git,2023-08-12 15:13:48+00:00,,0,2lambda123/SiliconRE,677766652,Verilog,SiliconRE,135170,0,2023-08-12 15:16:03+00:00,[],https://api.github.com/licenses/gpl-2.0
499,https://github.com/ModasirQuayum/verilog_code.git,2023-08-01 11:34:04+00:00,,0,ModasirQuayum/verilog_code,673327344,Verilog,verilog_code,9,0,2023-08-01 11:41:32+00:00,[],None
500,https://github.com/PoojithaBachu/Simple-Processor.git,2023-08-02 05:54:06+00:00,,0,PoojithaBachu/Simple-Processor,673652592,Verilog,Simple-Processor,4,0,2023-08-02 05:59:14+00:00,[],None
501,https://github.com/k2ran/FIFO-ALU.git,2023-08-02 10:07:16+00:00,,0,k2ran/FIFO-ALU,673739444,Verilog,FIFO-ALU,2,0,2023-08-04 12:25:56+00:00,[],None
502,https://github.com/YOTALTEAM/HUAWEI_FIR.git,2023-08-05 08:13:49+00:00,The Huawei contest for applied mathematics project: low dissipation & self-adapting FIR algorithms,0,YOTALTEAM/HUAWEI_FIR,674935932,Verilog,HUAWEI_FIR,128,0,2023-08-20 13:17:09+00:00,[],https://api.github.com/licenses/mit
503,https://github.com/ibrahim0moakkit/mealy_det_110101.git,2023-08-05 18:15:07+00:00,mealy machine for 110101 detection,0,ibrahim0moakkit/mealy_det_110101,675085792,Verilog,mealy_det_110101,1,0,2023-08-05 18:15:38+00:00,[],None
504,https://github.com/shenjiangqiu/chisel-yifu.git,2023-08-04 14:25:44+00:00,,0,shenjiangqiu/chisel-yifu,674687588,Verilog,chisel-yifu,42,0,2023-08-04 18:39:13+00:00,[],https://api.github.com/licenses/unlicense
505,https://github.com/CoditaV22/Infineon-Summer-School-2023.git,2023-08-08 15:46:07+00:00,,0,CoditaV22/Infineon-Summer-School-2023,676176015,Verilog,Infineon-Summer-School-2023,6,0,2023-08-08 15:48:03+00:00,[],None
506,https://github.com/MaximKatkov/FPGA.git,2023-08-08 08:27:01+00:00,,0,MaximKatkov/FPGA,676011689,Verilog,FPGA,14,0,2023-08-08 08:33:00+00:00,[],None
507,https://github.com/gunavant-s/Gray_Counter-Day-020.git,2023-08-08 02:04:07+00:00,"A Gray counter is a type of counter in which the output changes only one bit at a time, and adjacent numbers have only a one-bit difference. The xor operation is used here.",0,gunavant-s/Gray_Counter-Day-020,675901540,Verilog,Gray_Counter-Day-020,86,0,2023-08-08 02:06:19+00:00,[],None
508,https://github.com/adij125/Digital-Design-Project.git,2023-08-07 09:37:50+00:00,My Digital Design project files for the optimisation of a NIOS II processor performance,0,adij125/Digital-Design-Project,675598017,Verilog,Digital-Design-Project,754,0,2023-08-07 09:59:50+00:00,[],None
509,https://github.com/gmejia16/verilog-template.git,2023-08-07 20:34:45+00:00,,0,gmejia16/verilog-template,675829677,Verilog,verilog-template,14,0,2023-08-07 20:35:03+00:00,[],https://api.github.com/licenses/apache-2.0
510,https://github.com/mmgshash/efabless_test.git,2023-08-06 17:58:58+00:00,,0,mmgshash/efabless_test,675377341,Verilog,efabless_test,11912,0,2023-08-06 18:10:15+00:00,[],https://api.github.com/licenses/apache-2.0
511,https://github.com/a-folabi/efabless_tutorial.git,2023-08-06 18:38:00+00:00,,0,a-folabi/efabless_tutorial,675387156,Verilog,efabless_tutorial,11912,0,2023-08-06 18:39:27+00:00,[],https://api.github.com/licenses/apache-2.0
512,https://github.com/char0815/IC-contest.git,2023-08-08 05:53:30+00:00,,0,char0815/IC-contest,675960081,Verilog,IC-contest,79930,0,2023-08-08 06:34:06+00:00,[],None
513,https://github.com/Archfx/PhiOS.git,2023-08-03 23:54:45+00:00,(∅) PhiOS s a minimal operating system kernel 🌽 for RISC-V ,0,Archfx/PhiOS,674429616,Verilog,PhiOS,23093,0,2023-08-10 14:40:25+00:00,[],None
514,https://github.com/ege-turan/ask_v1.git,2023-08-03 21:06:07+00:00,,0,ege-turan/ask_v1,674396162,Verilog,ask_v1,13,0,2023-08-03 21:06:20+00:00,[],None
515,https://github.com/likewise/MoldUPD64.git,2023-08-04 13:14:15+00:00,RTL implementation of a MoldUPD 64 receiver. ,0,likewise/MoldUPD64,674654839,,MoldUPD64,2858,0,2023-08-04 13:14:15+00:00,[],
516,https://github.com/mo-hosni/timer.git,2023-08-06 18:03:16+00:00,,0,mo-hosni/timer,675378448,Verilog,timer,11912,0,2023-08-06 18:04:45+00:00,[],https://api.github.com/licenses/apache-2.0
517,https://github.com/Ryuuba/verilog-dataflow.git,2023-08-09 19:37:51+00:00,,0,Ryuuba/verilog-dataflow,676692883,Verilog,verilog-dataflow,3,0,2023-08-10 00:12:56+00:00,[],None
518,https://github.com/ahmedmaher198/16_Bit_ALU.git,2023-08-07 18:05:47+00:00,design 16_Bit_ALU using Verilog and write its testbench code ,0,ahmedmaher198/16_Bit_ALU,675785491,Verilog,16_Bit_ALU,813,0,2023-08-07 18:13:42+00:00,[],None
519,https://github.com/rowdyic/Verilog-AES_128-Encryptor.git,2023-07-31 23:28:50+00:00,Verilog implementation of an AES-128 encryption hardware accelerator,0,rowdyic/Verilog-AES_128-Encryptor,673120955,Verilog,Verilog-AES_128-Encryptor,6,0,2023-07-31 23:35:47+00:00,[],https://api.github.com/licenses/mit
520,https://github.com/gunavant-s/PIPO_Day-013.git,2023-08-01 02:03:02+00:00,A PIPO is a shift register that can be used to tranferring and storing data. Simplest of all shift registers. The inputs and outputs are presented in a parallel format.,0,gunavant-s/PIPO_Day-013,673153820,Verilog,PIPO_Day-013,87,0,2023-08-01 02:03:31+00:00,[],None
521,https://github.com/zxtres/zxtres_wrapper.git,2023-07-31 21:34:50+00:00,Wrapper module to provide cores for ZXTRES specific features. Should make core porting a bit easier (I hope),0,zxtres/zxtres_wrapper,673095978,Verilog,zxtres_wrapper,214,0,2023-07-31 22:53:02+00:00,[],https://api.github.com/licenses/gpl-3.0
522,https://github.com/rohinthram/ctb_hackathon_2k22.git,2023-07-29 10:24:53+00:00,"Capture the Bug Hackathon 2022 Organized by NIELIT Calicut and technically facilitated by Vyoma Systems , VLSI System Design and mentored by IIT Madras & IEEE Robotics and Automation Society, Kerala Chapter",0,rohinthram/ctb_hackathon_2k22,672220201,Verilog,ctb_hackathon_2k22,2402,0,2023-07-29 10:26:13+00:00,[],None
523,https://github.com/Bismay27/Asyynchronous-FIFO.git,2023-07-29 05:29:40+00:00,,0,Bismay27/Asyynchronous-FIFO,672156226,Verilog,Asyynchronous-FIFO,11,0,2023-07-29 05:30:27+00:00,[],None
524,https://github.com/PSR0001/100DaysOfRTL.git,2023-07-31 11:23:52+00:00,100 days of RTL,0,PSR0001/100DaysOfRTL,672878590,Verilog,100DaysOfRTL,744,0,2023-08-03 06:54:42+00:00,"['verilog', 'vivado']",None
525,https://github.com/Sidrameshwer/Approx_mul8bit.git,2023-07-30 16:01:09+00:00,,2,Sidrameshwer/Approx_mul8bit,672594209,Verilog,Approx_mul8bit,9,0,2023-07-30 16:20:12+00:00,[],None
526,https://github.com/guilp03/Projeto-IH.git,2023-07-30 16:13:39+00:00,,0,guilp03/Projeto-IH,672597481,Verilog,Projeto-IH,109,0,2023-08-12 07:31:22+00:00,[],None
527,https://github.com/darshan-kr/Day-013-SR_flipflop.git,2023-07-30 13:53:20+00:00,"SR flip-flop is a gated set-reset flip-flop. The S and R inputs control the state of the flip-flop when the clock pulse goes from LOW to HIGH. The flip-flop will not change until the clock pulse is on a rising edge. When both S and R are simultaneously HIGH, it is uncertain whether the outputs will be HIGH or LOW.",0,darshan-kr/Day-013-SR_flipflop,672559292,Verilog,Day-013-SR_flipflop,3,0,2023-07-30 13:54:35+00:00,[],None
528,https://github.com/Passionfruitx/timetable_ref.git,2023-07-30 23:54:21+00:00,,0,Passionfruitx/timetable_ref,672692513,Verilog,timetable_ref,385,0,2023-07-30 23:55:28+00:00,[],None
529,https://github.com/bcdduffy/fpga-prog-projs-main.git,2023-07-30 21:40:19+00:00,Various digital design and fpga programming projects for practice,0,bcdduffy/fpga-prog-projs-main,672671669,Verilog,fpga-prog-projs-main,118,0,2023-07-30 21:40:24+00:00,[],None
530,https://github.com/YunJoongChul/Verilog-FC84to10-07.28.git,2023-07-28 01:46:20+00:00,,0,YunJoongChul/Verilog-FC84to10-07.28,671720781,Verilog,Verilog-FC84to10-07.28,39,0,2023-07-28 02:12:20+00:00,[],None
531,https://github.com/LoveJu1y/pipeline.git,2023-07-28 09:08:39+00:00,,0,LoveJu1y/pipeline,671843004,Verilog,pipeline,45662,0,2023-07-28 09:11:08+00:00,[],https://api.github.com/licenses/mit
532,https://github.com/djkabutar/test_mipi_encoder_decoder.git,2023-07-27 06:08:39+00:00,"MIPI to multiple peripheral (UART, I2C, SPI, 1-Wire)",0,djkabutar/test_mipi_encoder_decoder,671353166,Verilog,test_mipi_encoder_decoder,24,0,2023-08-04 06:29:14+00:00,"['mipi', 'uart-verilog', 'verilog']",None
533,https://github.com/ksungkeun84/chip-design.git,2023-07-26 03:43:28+00:00,,0,ksungkeun84/chip-design,670879052,Verilog,chip-design,106109,0,2023-07-26 04:20:24+00:00,[],None
534,https://github.com/kayrameral/verilog-works.git,2023-07-28 11:15:57+00:00,,0,kayrameral/verilog-works,671885196,Verilog,verilog-works,1664,0,2023-07-28 11:16:40+00:00,[],None
535,https://github.com/Tech-mohankrishna/pes_asic_class.git,2023-08-12 03:12:17+00:00,,0,Tech-mohankrishna/pes_asic_class,677604374,Verilog,pes_asic_class,609,0,2023-08-24 02:28:42+00:00,[],None
536,https://github.com/aadeesh06/5_bit_Array_Multiplier.git,2023-08-10 16:36:23+00:00,Implementation of an array multiplier in Verilog capable of multiplying two 5-bit numbers. ,0,aadeesh06/5_bit_Array_Multiplier,677061123,Verilog,5_bit_Array_Multiplier,3,0,2023-08-26 06:44:43+00:00,[],None
537,https://github.com/Sarthak14082003/voting-machine.git,2023-08-11 17:03:50+00:00,,0,Sarthak14082003/voting-machine,677476155,Verilog,voting-machine,1,0,2023-08-11 17:09:35+00:00,[],None
538,https://github.com/Sarthak14082003/DDR.git,2023-08-11 13:37:59+00:00,,0,Sarthak14082003/DDR,677402448,Verilog,DDR,9,0,2023-08-11 13:58:26+00:00,[],None
539,https://github.com/Dai-dirk/HETA.git,2023-07-31 13:25:24+00:00,HETA: A Heterogeneous Temporal CGRA Modeling and Bayesian-based Optimization,0,Dai-dirk/HETA,672924434,Verilog,HETA,744,0,2023-08-08 06:19:30+00:00,[],None
540,https://github.com/HendrikMennen/OneWareTestProj.git,2023-08-07 08:38:03+00:00,,0,HendrikMennen/OneWareTestProj,675576133,Verilog,OneWareTestProj,62,0,2023-08-07 08:43:07+00:00,[],None
541,https://github.com/no1jiangjiang/HDMI.git,2023-07-30 04:33:50+00:00,,0,no1jiangjiang/HDMI,672435438,Verilog,HDMI,3886,0,2023-07-30 04:53:15+00:00,[],None
542,https://github.com/siliconised/image_processing_using_verilog.git,2023-07-30 04:03:12+00:00,,0,siliconised/image_processing_using_verilog,672430674,Verilog,image_processing_using_verilog,291,0,2023-07-30 04:05:38+00:00,[],None
543,https://github.com/purveshthummar/4-bit_ALU_Verilog.git,2023-07-30 11:35:39+00:00,4-bit ALU(Arithmatic Logical Unit) using verilog code,0,purveshthummar/4-bit_ALU_Verilog,672524723,Verilog,4-bit_ALU_Verilog,3,0,2023-07-30 11:51:23+00:00,[],None
544,https://github.com/ccapen/Verilog-IIC.git,2023-07-30 20:57:03+00:00,IIC Master using Verilog HDL,0,ccapen/Verilog-IIC,672663589,Verilog,Verilog-IIC,19,0,2023-07-30 20:59:50+00:00,[],https://api.github.com/licenses/gpl-3.0
545,https://github.com/purveshthummar/edge-detector.git,2023-07-31 04:40:23+00:00,Positive and Negative edge detector using verilog in xilinx.,0,purveshthummar/edge-detector,672748565,Verilog,edge-detector,7,0,2023-07-31 04:42:18+00:00,[],None
546,https://github.com/ThomasMJosline/AHB_to_APB_Bridgeproject.git,2023-07-28 14:20:29+00:00,,0,ThomasMJosline/AHB_to_APB_Bridgeproject,671950192,Verilog,AHB_to_APB_Bridgeproject,334,0,2023-08-16 16:35:24+00:00,[],None
547,https://github.com/gunavant-s/SISO_Day-014.git,2023-08-02 01:29:18+00:00,"SISO register is a type of shift register that takes a single bit of input data and shifts it in serial manner, one bit at a time, while also shifting out the previously stored bits.",0,gunavant-s/SISO_Day-014,673587673,Verilog,SISO_Day-014,34,0,2023-08-02 01:36:03+00:00,[],None
548,https://github.com/sparkdragon586/6.004-computer-structures.git,2023-08-03 02:09:16+00:00,basic repo for mit opencourseware 6.004,0,sparkdragon586/6.004-computer-structures,674035844,Verilog,6.004-computer-structures,3135,0,2023-09-07 20:00:35+00:00,[],None
549,https://github.com/2jyun/FSM_project.git,2023-08-03 06:38:51+00:00,FSM RTL Code,0,2jyun/FSM_project,674103654,Verilog,FSM_project,3,0,2023-08-03 06:40:27+00:00,[],None
550,https://github.com/Manikanta-IITB/Design_of_Synchronous_and_Asynchronous_FIFO.git,2023-08-01 11:40:58+00:00,This project shows the design of Synchronous FIFO and Asynchronous FIFO,0,Manikanta-IITB/Design_of_Synchronous_and_Asynchronous_FIFO,673329900,Verilog,Design_of_Synchronous_and_Asynchronous_FIFO,479,0,2023-08-07 18:07:05+00:00,[],None
551,https://github.com/nishudit/UART.git,2023-07-28 10:58:18+00:00,,0,nishudit/UART,671879538,Verilog,UART,139,0,2023-07-28 10:58:39+00:00,[],None
552,https://github.com/Deviloper007/BIST_fast_6_3_counter.git,2023-07-28 10:43:35+00:00,"the fast 6:3 binary counter is a 6  bit 1s counter which give a 3  bit output, the built in self test contains test patter generator, output response analyzer and controller.",0,Deviloper007/BIST_fast_6_3_counter,671874870,Verilog,BIST_fast_6_3_counter,10,0,2023-07-29 10:19:37+00:00,[],None
553,https://github.com/hariharanrr01/VLSI_CODE.git,2023-07-28 08:00:09+00:00,,0,hariharanrr01/VLSI_CODE,671820527,Verilog,VLSI_CODE,222,0,2023-07-28 08:05:47+00:00,[],None
554,https://github.com/frosalesoffic/SingleCycleDatapath-Verilog.git,2023-07-28 23:51:54+00:00,,0,frosalesoffic/SingleCycleDatapath-Verilog,672100912,Verilog,SingleCycleDatapath-Verilog,74,0,2023-07-28 23:52:09+00:00,[],None
555,https://github.com/ayumsh/Computerarch.git,2023-07-27 20:43:06+00:00,,0,ayumsh/Computerarch,671657641,Verilog,Computerarch,1682,0,2023-07-27 20:50:07+00:00,[],None
556,https://github.com/MJ-zrz/HeFAMDesignFlow.git,2023-07-28 02:10:27+00:00,,0,MJ-zrz/HeFAMDesignFlow,671726892,Verilog,HeFAMDesignFlow,502,0,2023-08-11 13:05:09+00:00,[],None
557,https://github.com/YotamElharar/Verilog-mini-projects.git,2023-08-07 18:04:06+00:00,Logic design of different systems using Verilog.,0,YotamElharar/Verilog-mini-projects,675785003,Verilog,Verilog-mini-projects,7748,0,2023-08-07 18:09:36+00:00,[],None
558,https://github.com/ridhamharsora12/Projects.git,2023-08-03 07:33:39+00:00,,0,ridhamharsora12/Projects,674122085,Verilog,Projects,170,0,2023-08-03 08:14:54+00:00,[],None
559,https://github.com/dzwyl/wen-cpu.git,2023-08-03 11:06:42+00:00,CPU,0,dzwyl/wen-cpu,674195627,Verilog,wen-cpu,18665,0,2023-08-06 03:25:03+00:00,[],None
560,https://github.com/hubertchoo/FiveStagePipelinedMips.git,2023-08-06 03:57:23+00:00,,0,hubertchoo/FiveStagePipelinedMips,675180244,Verilog,FiveStagePipelinedMips,13,0,2023-08-15 18:48:26+00:00,[],None
561,https://github.com/twsky79/timer_test.git,2023-08-06 18:32:06+00:00,,0,twsky79/timer_test,675385737,Verilog,timer_test,11911,0,2023-08-06 18:33:37+00:00,[],https://api.github.com/licenses/apache-2.0
562,https://github.com/SwagatBhattacharyya/Caravel.git,2023-08-06 18:17:43+00:00,Swagat's Caravel,0,SwagatBhattacharyya/Caravel,675382059,Verilog,Caravel,11912,0,2023-08-06 18:19:11+00:00,[],https://api.github.com/licenses/apache-2.0
563,https://github.com/CroosJJSE/basic-gates.git,2023-08-08 08:28:47+00:00,according to input it will work as AND OR NOR XNOR gates.,0,CroosJJSE/basic-gates,676012301,Verilog,basic-gates,0,0,2023-08-08 08:29:32+00:00,[],None
564,https://github.com/aa389393/risc_v.git,2023-08-09 09:34:05+00:00,,0,aa389393/risc_v,676476502,Verilog,risc_v,32,0,2023-08-09 09:39:34+00:00,[],None
565,https://github.com/AnisHamadouche/FPGAI2023-BSNN.git,2023-08-04 11:28:05+00:00,FPGAI2023 Hackathon Heidelberg,0,AnisHamadouche/FPGAI2023-BSNN,674616502,Verilog,FPGAI2023-BSNN,21,0,2023-08-04 11:30:26+00:00,[],None
566,https://github.com/saquibahmad01/mwscas_test.git,2023-08-06 18:05:52+00:00,,0,saquibahmad01/mwscas_test,675379089,Verilog,mwscas_test,11911,0,2023-08-06 18:07:24+00:00,[],https://api.github.com/licenses/apache-2.0
567,https://github.com/arshahtsham/MWSCAS.git,2023-08-06 17:56:56+00:00,,0,arshahtsham/MWSCAS,675376827,Verilog,MWSCAS,11912,0,2023-08-06 17:58:24+00:00,[],https://api.github.com/licenses/apache-2.0
568,https://github.com/aadeesh06/Multiplication_By_Repeated_Addition.git,2023-08-11 15:48:22+00:00,This repo is based Datapath and controller modeling using the example of Multiplication by repeated addition.,0,aadeesh06/Multiplication_By_Repeated_Addition,677449493,Verilog,Multiplication_By_Repeated_Addition,196,0,2023-08-26 06:45:59+00:00,"['verilog', 'datapathandcontroller']",None
569,https://github.com/ege-turan/ask_transmit_v1.git,2023-08-12 02:31:57+00:00,,0,ege-turan/ask_transmit_v1,677597235,Verilog,ask_transmit_v1,21,0,2023-08-12 02:34:20+00:00,[],None
570,https://github.com/bozkuya/Pipeline_Arm_Processor.git,2023-08-11 08:56:58+00:00,Arm 32 bit Pipeline Processor,0,bozkuya/Pipeline_Arm_Processor,677311780,Verilog,Pipeline_Arm_Processor,7344,0,2023-08-11 08:57:19+00:00,[],None
571,https://github.com/EsraaHemdan24/GCD.git,2023-08-11 03:08:55+00:00,Finite state machine to calculate the Greatest Common Divisor (GCD) of 2 numbers.,0,EsraaHemdan24/GCD,677217950,Verilog,GCD,2,0,2023-08-11 03:09:19+00:00,[],None
572,https://github.com/deepkanhai/Wallace_multiplier.git,2023-08-11 11:06:23+00:00,,0,deepkanhai/Wallace_multiplier,677352919,Verilog,Wallace_multiplier,4,0,2023-08-11 11:12:44+00:00,[],None
573,https://github.com/AlexApps99/chip8-verilog.git,2023-08-11 13:22:52+00:00,A jumbled attempt at learning Verilog,0,AlexApps99/chip8-verilog,677397332,Verilog,chip8-verilog,41,0,2023-08-11 13:24:03+00:00,[],None
574,https://github.com/Vakon84/divtiesus.git,2023-08-12 09:31:06+00:00,,0,Vakon84/divtiesus,677683018,Verilog,divtiesus,1783,0,2023-08-12 09:34:09+00:00,[],https://api.github.com/licenses/gpl-3.0
575,https://github.com/aadeesh06/Greatest_Common_Divisor.git,2023-08-12 10:13:44+00:00,A program to calculate the Greatest Common Divisor(also called HCF) of two 16 bit numbers utilizing the datapath and controller design.,0,aadeesh06/Greatest_Common_Divisor,677693151,Verilog,Greatest_Common_Divisor,579,0,2023-08-12 10:14:03+00:00,[],None
576,https://github.com/siddhant23tomar/Dual-issue-Out-of-Order-execution-engine.git,2023-08-07 18:07:49+00:00,,0,siddhant23tomar/Dual-issue-Out-of-Order-execution-engine,675786187,Verilog,Dual-issue-Out-of-Order-execution-engine,197,0,2023-08-14 14:17:38+00:00,[],None
577,https://github.com/Galapple/Image-processing---Verilog.git,2023-08-09 11:26:18+00:00,,0,Galapple/Image-processing---Verilog,676515027,Verilog,Image-processing---Verilog,401,0,2023-08-09 13:19:50+00:00,[],None
578,https://github.com/divya-1408/vlsi.git,2023-07-26 08:25:37+00:00,,0,divya-1408/vlsi,670963073,Verilog,vlsi,9,0,2023-07-26 08:29:00+00:00,[],None
579,https://github.com/maverick-sp/Traffic-Light-Controller.git,2023-07-26 14:31:36+00:00,An Algorithmic State Machine (ASM) based traffic light controller for a road crossing of ExpressWay and LocalWay,0,maverick-sp/Traffic-Light-Controller,671098116,Verilog,Traffic-Light-Controller,4,0,2023-07-26 14:35:29+00:00,[],None
580,https://github.com/gunavant-s/3X8_Decoder_Day-007.git,2023-07-26 00:04:54+00:00,A decoder is a combinational circuit that converts a coded input into a set of outputs. The implementation is different from that of my implemtation of Encoder.,0,gunavant-s/3X8_Decoder_Day-007,670829292,Verilog,3X8_Decoder_Day-007,34,0,2023-07-26 00:05:24+00:00,[],None
581,https://github.com/darshan-kr/Nbit_binary2gray.git,2023-07-27 11:58:51+00:00,The Binary to Gray code converter is a logical circuit that is used to convert the binary code into its equivalent Gray code.,0,darshan-kr/Nbit_binary2gray,671474368,Verilog,Nbit_binary2gray,2,0,2023-07-27 12:01:06+00:00,[],None
582,https://github.com/ChandraLekha559/RISC-6-stage-pipelined-processor.git,2023-07-26 11:03:49+00:00,,0,ChandraLekha559/RISC-6-stage-pipelined-processor,671019613,Verilog,RISC-6-stage-pipelined-processor,5,0,2023-07-26 11:04:40+00:00,[],None
583,https://github.com/deepika1242/VERILOG-CODE.git,2023-07-26 07:41:08+00:00,,0,deepika1242/VERILOG-CODE,670947802,Verilog,VERILOG-CODE,237,0,2023-07-26 07:42:50+00:00,[],None
584,https://github.com/Vanshika971/Traffic_Light_Controller_Project.git,2023-07-30 07:58:29+00:00,,0,Vanshika971/Traffic_Light_Controller_Project,672474795,Verilog,Traffic_Light_Controller_Project,10,0,2023-08-23 14:08:15+00:00,[],None
585,https://github.com/Andp-25/Verilog-codes.git,2023-07-29 10:58:08+00:00,,0,Andp-25/Verilog-codes,672227857,Verilog,Verilog-codes,73,0,2023-07-29 11:01:58+00:00,[],None
586,https://github.com/GorleSaratSai/AHB_to_APB_bridge.git,2023-07-30 06:14:14+00:00,,0,GorleSaratSai/AHB_to_APB_bridge,672453127,Verilog,AHB_to_APB_bridge,317,0,2023-07-30 06:21:30+00:00,[],None
587,https://github.com/NivedK-S/Traffic-Light-Controller.git,2023-07-30 16:12:51+00:00,,0,NivedK-S/Traffic-Light-Controller,672597266,Verilog,Traffic-Light-Controller,12,0,2023-07-30 16:13:51+00:00,[],None
588,https://github.com/Waynelwb/multicycle_cpu.git,2023-07-30 11:02:36+00:00,multicycle CPU using MIPS instruction set,0,Waynelwb/multicycle_cpu,672516835,Verilog,multicycle_cpu,5115,0,2023-07-30 11:47:29+00:00,[],None
589,https://github.com/Mariam-Amin12/AES.git,2023-08-02 12:15:00+00:00,,0,Mariam-Amin12/AES,673783722,Verilog,AES,28,0,2023-08-02 12:19:51+00:00,[],None
590,https://github.com/k2ran/Counters-Detectors.git,2023-08-02 10:14:44+00:00,,0,k2ran/Counters-Detectors,673742071,Verilog,Counters-Detectors,1,0,2023-08-02 10:15:45+00:00,[],None
591,https://github.com/rajitha0119/100-DAYS-OF-RTL--DAY-25.git,2023-08-08 13:01:30+00:00,"D FLIPFLOP USING SR,JK,T FLIPFLOPS",0,rajitha0119/100-DAYS-OF-RTL--DAY-25,676109811,Verilog,100-DAYS-OF-RTL--DAY-25,665,0,2023-08-08 13:05:37+00:00,[],None
592,https://github.com/mtdsousa/landauer-benchmark.git,2023-08-07 21:56:56+00:00,AIGs and entropy databases generated from different benchmarks,0,mtdsousa/landauer-benchmark,675849500,Verilog,landauer-benchmark,19224,0,2023-09-22 18:40:56+00:00,[],https://api.github.com/licenses/mit
593,https://github.com/rbostandoust/MIPS-Processor.git,2023-08-08 19:20:29+00:00,MIPS processor that executes various kinds of instructions in pipelined way,0,rbostandoust/MIPS-Processor,676251740,Verilog,MIPS-Processor,28,0,2023-08-08 19:45:20+00:00,"['computer-architecture', 'mips-architecture', 'verilog']",None
594,https://github.com/huifuhao/CNN.git,2023-08-06 08:44:52+00:00,FPGA 部署在ZYNQ7020上的熔接机程序,1,huifuhao/CNN,675236920,Verilog,CNN,11,0,2023-08-06 12:36:51+00:00,[],None
595,https://github.com/gunavant-s/UP_COUNTER_Day-018.git,2023-08-06 01:45:42+00:00,"An up counter is a sequential digital circuit that counts upward from a given starting point, and is commonly used in applications such as timing, control, and measurement systems.",0,gunavant-s/UP_COUNTER_Day-018,675160028,Verilog,UP_COUNTER_Day-018,86,0,2023-08-06 01:55:23+00:00,[],None
596,https://github.com/HarshPatel1503/mux8_1.git,2023-08-11 11:44:32+00:00,,0,HarshPatel1503/mux8_1,677364656,Verilog,mux8_1,0,0,2023-08-11 11:44:55+00:00,[],None
597,https://github.com/HarshPatel1503/Booth_mult.git,2023-08-11 11:13:19+00:00,,0,HarshPatel1503/Booth_mult,677354968,Verilog,Booth_mult,0,0,2023-08-11 11:13:51+00:00,[],None
598,https://github.com/Muhammed-Hamzaa/verilog_practice.git,2023-08-07 10:54:34+00:00,,0,Muhammed-Hamzaa/verilog_practice,675624238,Verilog,verilog_practice,12,0,2023-08-08 08:29:02+00:00,[],None
599,https://github.com/Muhammadussain/verilog_practice.git,2023-08-07 10:53:14+00:00,,0,Muhammadussain/verilog_practice,675623777,Verilog,verilog_practice,6,0,2023-08-08 08:08:03+00:00,[],None
600,https://github.com/MohamedKhaledMohamedAli/CRC.git,2023-08-04 12:59:52+00:00,,0,MohamedKhaledMohamedAli/CRC,674648283,Verilog,CRC,8,0,2023-08-04 13:07:54+00:00,[],None
601,https://github.com/TKAles/DividerFPGA.git,2023-08-03 18:38:19+00:00,,0,TKAles/DividerFPGA,674355269,Verilog,DividerFPGA,1140,0,2023-08-03 18:40:55+00:00,[],None
602,https://github.com/himanshu-gaurav/2D_Ping_Pong_Game.git,2023-08-05 10:02:03+00:00,A 2D Ping Pong Game in Verilog language ,0,himanshu-gaurav/2D_Ping_Pong_Game,674960746,Verilog,2D_Ping_Pong_Game,7,0,2023-08-05 10:04:01+00:00,[],None
603,https://github.com/ibrahim0moakkit/moore_det_110101.git,2023-08-05 17:55:39+00:00,moore machine to detect a sequence of bits,0,ibrahim0moakkit/moore_det_110101,675081247,Verilog,moore_det_110101,2,0,2023-08-05 17:56:26+00:00,[],None
604,https://github.com/RahimullahShaik/AsyncFifo.git,2023-08-11 03:37:15+00:00,,0,RahimullahShaik/AsyncFifo,677224185,Verilog,AsyncFifo,580,0,2023-08-11 03:37:21+00:00,[],None
605,https://github.com/rishavraj1515/Traffic-Light-Controller.git,2023-08-09 08:42:36+00:00," Developed a traffic light controller using Verilog, demonstrating expertise in digital design and hardware description languages. Successfully validated the design through simulation, showcasing proficiency in Verilog programming.",0,rishavraj1515/Traffic-Light-Controller,676457826,Verilog,Traffic-Light-Controller,1,0,2023-08-09 08:43:33+00:00,[],None
606,https://github.com/matil99/PRESENT.git,2023-08-09 14:29:24+00:00,,0,matil99/PRESENT,676583007,Verilog,PRESENT,7,0,2023-08-09 14:36:11+00:00,[],None
607,https://github.com/NamrathaCTR/32bit-Brent-Kung.git,2023-08-09 13:03:34+00:00,A 32 bit brent kung Adder using verilog HDL,0,NamrathaCTR/32bit-Brent-Kung,676548670,Verilog,32bit-Brent-Kung,7,0,2023-08-09 13:11:26+00:00,[],None
608,https://github.com/deepsita/testcase.git,2023-08-10 11:23:04+00:00,,0,deepsita/testcase,676943879,Verilog,testcase,21022,0,2023-08-10 11:25:51+00:00,[],None
609,https://github.com/vansharya/32-bit-Floating-Point-ALU.git,2023-08-03 14:06:18+00:00,,0,vansharya/32-bit-Floating-Point-ALU,674261289,Verilog,32-bit-Floating-Point-ALU,19,0,2023-08-03 14:10:50+00:00,[],None
610,https://github.com/massout/test7seg.git,2023-08-03 09:18:11+00:00,Test of 7-segment display,0,massout/test7seg,674158101,Verilog,test7seg,3,0,2023-08-03 09:18:58+00:00,[],https://api.github.com/licenses/mit
611,https://github.com/gcourchinoux/gaspardsoc.git,2023-08-11 21:09:47+00:00,a simply template of efabless design,0,gcourchinoux/gaspardsoc,677541600,Verilog,gaspardsoc,11912,0,2023-08-11 21:11:20+00:00,[],https://api.github.com/licenses/apache-2.0
612,https://github.com/Mohamedaboelnaga/Cordic-Alogrithm-using-Verilog.git,2023-08-04 17:25:00+00:00,,0,Mohamedaboelnaga/Cordic-Alogrithm-using-Verilog,674752875,Verilog,Cordic-Alogrithm-using-Verilog,3,0,2023-09-01 17:59:44+00:00,[],None
613,https://github.com/Mohamedaboelnaga/-SPI-Interface-with-a-Single-Port-RAM.git,2023-08-04 17:23:20+00:00,"          The project is composed of 2 modules, the SPI module, and the RAM module. The data is received serially through the MOSI pin and then they must be stored as parallel data in the RAM, then read the parallel data from the RAM to be converted to serial bits through the MISO pin. The SPI is the one which handles this operation.",0,Mohamedaboelnaga/-SPI-Interface-with-a-Single-Port-RAM,674752378,Verilog,-SPI-Interface-with-a-Single-Port-RAM,3,0,2023-08-04 17:24:33+00:00,[],None
614,https://github.com/MohamedhaysamECE/ALU_16bit.git,2023-08-06 15:02:08+00:00,,0,MohamedhaysamECE/ALU_16bit,675327963,Verilog,ALU_16bit,984,0,2023-08-06 15:04:57+00:00,[],None
615,https://github.com/wjh888666/new_design.git,2023-08-06 18:20:37+00:00,,0,wjh888666/new_design,675382794,Verilog,new_design,11911,0,2023-08-06 18:22:05+00:00,[],https://api.github.com/licenses/apache-2.0
616,https://github.com/UsefulDemigod/EE2003-Computer-Organization.git,2023-08-10 19:13:59+00:00,"EE2003 Computer Organization is a course from the Electrical Engineering Department at IIT Madras, July-Nov 2022",0,UsefulDemigod/EE2003-Computer-Organization,677113318,Verilog,EE2003-Computer-Organization,294,0,2023-08-10 19:14:45+00:00,[],None
617,https://github.com/marsohod4you/MCY316.git,2023-07-27 14:29:21+00:00,FPGA developer kit based on Altera Cyclone III,0,marsohod4you/MCY316,671531538,Verilog,MCY316,4441,0,2023-07-27 15:21:42+00:00,[],https://api.github.com/licenses/isc
618,https://github.com/FPaddle007/LogicDesign.git,2023-08-12 23:05:58+00:00,,0,FPaddle007/LogicDesign,677868442,Verilog,LogicDesign,3315,0,2023-11-06 22:41:38+00:00,[],None
619,https://github.com/EsraaHemdan24/AES-128.git,2023-08-10 20:31:54+00:00,"AES is short for Advanced Encryption Standard, it is a symmetrical cipher that is used in a lot of encryption systems, applications that rely on AES have other algorithms and protocols in place for the key exchange,AES comes in different variations regarding data and key size and number of rounds executed by the algorithm.",0,EsraaHemdan24/AES-128,677134437,Verilog,AES-128,12,0,2023-08-10 20:32:51+00:00,[],None
620,https://github.com/MateusGomix/labAOC.git,2023-08-06 22:45:54+00:00,,0,MateusGomix/labAOC,675435237,Verilog,labAOC,45090,0,2024-02-15 20:38:07+00:00,[],None
621,https://github.com/AdamMooers/upsilon.git,2023-07-29 23:02:26+00:00,,1,AdamMooers/upsilon,672388705,Verilog,upsilon,563,0,2024-01-18 04:40:36+00:00,[],None
622,https://github.com/julisaverdejo/proyecto_ubolometro.git,2023-08-04 21:50:04+00:00,Documentación ubolometro,0,julisaverdejo/proyecto_ubolometro,674821028,Verilog,proyecto_ubolometro,22567,0,2023-08-09 17:30:12+00:00,[],None
623,https://github.com/PROJECT-SLASIC/SL-ASIC-NOSE.git,2023-08-07 15:27:37+00:00,,0,PROJECT-SLASIC/SL-ASIC-NOSE,675727443,Verilog,SL-ASIC-NOSE,54119,0,2024-03-24 17:36:52+00:00,[],None
624,https://github.com/ricardofss1/ProcessadorRISC-V.git,2023-08-04 01:00:26+00:00,Macro projeto da disciplina de Laboratório de Arquitetura de Sistemas Digitais,0,ricardofss1/ProcessadorRISC-V,674441983,Verilog,ProcessadorRISC-V,14,0,2023-10-07 18:14:34+00:00,[],None
625,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-22.git,2023-08-03 14:15:53+00:00,MASTERSLAVE FLIPFLOP,0,rajitha0119/100-DAYS-OF-RTL-DAY-22,674265069,Verilog,100-DAYS-OF-RTL-DAY-22,211,0,2023-08-03 14:18:29+00:00,[],None
626,https://github.com/Microchip-Vectorblox/VectorBlox-SoC-Video-Kit-Demo.git,2023-08-03 17:40:09+00:00,,0,Microchip-Vectorblox/VectorBlox-SoC-Video-Kit-Demo,674337020,Verilog,VectorBlox-SoC-Video-Kit-Demo,8301,0,2023-09-01 16:55:19+00:00,[],None
627,https://github.com/xixiyu5/HDLBITS_Answers.git,2023-08-03 22:56:56+00:00,My answers about Hdlbits。（我对于HDLBITS的自己的答案）,0,xixiyu5/HDLBITS_Answers,674419196,Verilog,HDLBITS_Answers,1,0,2023-08-03 23:06:36+00:00,[],None
628,https://github.com/MoustafaDarsh/UART.git,2023-08-07 06:01:04+00:00,,0,MoustafaDarsh/UART,675524759,Verilog,UART,17,0,2023-08-07 06:03:49+00:00,[],None
629,https://github.com/stef2805/RISC-V.git,2023-07-31 09:01:13+00:00,"Implementation of RISC-V processor with pipeline, data forwarding and hazar detection according to the model described by Hennessy and Patterson in the book Computer Organization and Design RISC-V Edition: The Hardware Software Interface",0,stef2805/RISC-V,672828258,Verilog,RISC-V,3,0,2023-07-31 09:02:34+00:00,[],None
630,https://github.com/nzaupa/FPGA_resonant_converter.git,2023-07-31 14:28:23+00:00,Project concerning the development of a prototype of a resonant converter. In particular the HDL code used for the control.,0,nzaupa/FPGA_resonant_converter,672950907,Verilog,FPGA_resonant_converter,118818,0,2023-07-31 16:15:58+00:00,[],None
631,https://github.com/waghsagar2016/verilog.git,2023-08-02 09:47:08+00:00,Verilog programming and project works.,0,waghsagar2016/verilog,673732035,Verilog,verilog,4,0,2023-08-02 11:16:57+00:00,[],None
632,https://github.com/CDurbala/mazesolving.git,2023-08-06 18:53:21+00:00,,0,CDurbala/mazesolving,675390864,Verilog,mazesolving,242,0,2023-08-06 22:14:22+00:00,[],https://api.github.com/licenses/mit
633,https://github.com/12562/caravel_project.git,2023-08-06 18:14:56+00:00,,0,12562/caravel_project,675381328,Verilog,caravel_project,11911,0,2023-08-06 18:16:26+00:00,[],https://api.github.com/licenses/apache-2.0
634,https://github.com/Mahmoud1172/VeryRISC_CPU.git,2023-08-06 18:37:49+00:00,,0,Mahmoud1172/VeryRISC_CPU,675387121,Verilog,VeryRISC_CPU,18,0,2023-08-06 18:50:01+00:00,[],None
635,https://github.com/PumkTbt/FPGA_8LED_FSM.git,2023-08-06 05:49:04+00:00,"cyclone ii fpga, verilog",0,PumkTbt/FPGA_8LED_FSM,675200988,Verilog,FPGA_8LED_FSM,420,0,2023-08-06 05:50:24+00:00,[],None
636,https://github.com/YunJoongChul/Verilog-layer1to4-08.06-END.git,2023-08-06 08:19:13+00:00,,0,YunJoongChul/Verilog-layer1to4-08.06-END,675231518,Verilog,Verilog-layer1to4-08.06-END,21,0,2023-08-06 08:20:06+00:00,[],None
637,https://github.com/princemahi2001/VERILOG.git,2023-08-05 09:49:04+00:00,,0,princemahi2001/VERILOG,674957653,Verilog,VERILOG,5,0,2023-08-27 05:34:29+00:00,[],None
638,https://github.com/Syedhasan7/Cordic-algorithm-rotation.git,2023-08-08 17:26:01+00:00,,0,Syedhasan7/Cordic-algorithm-rotation,676213784,Verilog,Cordic-algorithm-rotation,4,0,2023-08-08 17:27:09+00:00,[],None
639,https://github.com/smergeolacx/VGA_Controller.git,2023-07-31 14:56:35+00:00,,0,smergeolacx/VGA_Controller,672963323,Verilog,VGA_Controller,5,0,2023-07-31 14:59:14+00:00,[],None
640,https://github.com/SanjanaHoskote/Internship_IERY.git,2023-08-10 06:44:13+00:00,,4,SanjanaHoskote/Internship_IERY,676849568,Verilog,Internship_IERY,212,0,2023-08-11 06:26:11+00:00,[],None
641,https://github.com/Manikgar/Vending_Machine.git,2023-07-29 06:18:40+00:00,,0,Manikgar/Vending_Machine,672165899,Verilog,Vending_Machine,181,0,2023-07-29 06:18:48+00:00,[],None
642,https://github.com/ahmed23shaf/GuessWhichHand.git,2023-07-29 00:08:07+00:00,"A digital version of the classic ""Guess Which Hand Game,"" implemented with sequential and combinational logic. Players take turns guessing which hand conceals a hidden object. The game then uses LEDs to display the results, and D flip-flops capture the game's state.",0,ahmed23shaf/GuessWhichHand,672103500,Verilog,GuessWhichHand,1030,0,2023-07-29 01:45:15+00:00,[],None
643,https://github.com/stcastell/verilog.git,2023-07-26 01:40:47+00:00,Programas de descripción de hardware desarrollados a lo largo de mis estudios de diseño de sistemas lógicos,0,stcastell/verilog,670849220,Verilog,verilog,1319,0,2023-08-13 03:32:23+00:00,[],None
644,https://github.com/ThomasMJosline/CTBhackthon.git,2023-07-28 14:18:22+00:00,,0,ThomasMJosline/CTBhackthon,671949430,Verilog,CTBhackthon,185,0,2023-07-28 14:23:39+00:00,[],
645,https://github.com/AfifehGhaemnia/myVSD_Version.git,2023-07-26 21:05:52+00:00,,0,AfifehGhaemnia/myVSD_Version,671231297,Verilog,myVSD_Version,11911,0,2023-07-26 21:07:25+00:00,[],https://api.github.com/licenses/apache-2.0
646,https://github.com/ahmedqamesh/uart-core-interface-fw.git,2023-07-27 12:56:16+00:00,,0,ahmedqamesh/uart-core-interface-fw,671495241,Verilog,uart-core-interface-fw,102,0,2023-07-27 14:26:46+00:00,[],None
647,https://github.com/aadeesh06/4_bit_Array_Multiplier.git,2023-08-11 06:16:44+00:00,An Array multiplier which multiplies two 4-bit numbers implemented on ZedBoard Zynq Evaluation and Development Kit using Vivado Design Suite (version 2023.1). ,0,aadeesh06/4_bit_Array_Multiplier,677263307,Verilog,4_bit_Array_Multiplier,8371,0,2023-08-11 06:25:45+00:00,[],None
648,https://github.com/YongukSim/RRAM_mem.git,2023-08-10 15:47:03+00:00,,0,YongukSim/RRAM_mem,677041835,Verilog,RRAM_mem,96,0,2023-08-10 15:49:20+00:00,[],https://api.github.com/licenses/apache-2.0
649,https://github.com/Sarthak14082003/vending-machine.git,2023-08-11 14:03:34+00:00,,0,Sarthak14082003/vending-machine,677411561,Verilog,vending-machine,8,0,2023-08-11 14:09:09+00:00,[],None
650,https://github.com/Talin-Estiban/chip-design.git,2023-08-02 17:16:25+00:00,Projects in Verilog and system Verilog ,0,Talin-Estiban/chip-design,673899323,Verilog,chip-design,11,0,2024-01-12 18:01:32+00:00,[],None
651,https://github.com/tipsharsha/Verilog.git,2023-08-07 08:04:10+00:00,,0,tipsharsha/Verilog,675564402,Verilog,Verilog,9,0,2024-02-14 16:03:43+00:00,[],None
652,https://github.com/Jonathan684/AC_TPF.git,2023-07-28 22:09:52+00:00,,0,Jonathan684/AC_TPF,672084080,Verilog,AC_TPF,725,0,2023-07-28 22:13:29+00:00,[],None
653,https://github.com/HajraKamran/verilog_practice.git,2023-08-07 10:55:03+00:00,,0,HajraKamran/verilog_practice,675624386,Verilog,verilog_practice,15,0,2023-08-08 08:07:24+00:00,[],None
654,https://github.com/trong420/icc.git,2023-08-12 00:23:20+00:00,,0,trong420/icc,677576997,Verilog,icc,115800,0,2024-03-02 08:21:56+00:00,[],None
655,https://github.com/muhammadtalhasami/verilog_practice.git,2023-08-07 10:04:14+00:00,Verilog is a hardware description language. This repo is basically a learning journey of verilog ,0,muhammadtalhasami/verilog_practice,675607476,Verilog,verilog_practice,6,0,2024-03-27 23:48:28+00:00,"['design', 'gtkwave', 'hardware-designs', 'testbench', 'vhdl', 'verilog-']",None
656,https://github.com/Raunak445/CompArch-Projects.git,2023-07-30 12:44:12+00:00,,0,Raunak445/CompArch-Projects,672541398,Verilog,CompArch-Projects,2130,0,2023-07-30 12:45:41+00:00,[],None
657,https://github.com/sasi-kiran123/asyn_fifo.git,2023-07-30 06:40:23+00:00,,0,sasi-kiran123/asyn_fifo,672458385,Verilog,asyn_fifo,596,0,2023-08-13 04:45:05+00:00,[],https://api.github.com/licenses/mit
658,https://github.com/akshayanr/rtl_calculator.git,2023-07-31 01:55:13+00:00,This is a 4-function RTL sequential calculator built following a diagram.,0,akshayanr/rtl_calculator,672713170,Verilog,rtl_calculator,9,0,2023-08-14 23:11:50+00:00,[],None
659,https://github.com/yannickreiss/tt04-riscv-alu.git,2023-07-31 07:08:50+00:00,,0,yannickreiss/tt04-riscv-alu,672789411,Verilog,tt04-riscv-alu,12,0,2023-07-31 07:08:55+00:00,[],https://api.github.com/licenses/apache-2.0
660,https://github.com/liruixianglrx/all-in-one.git,2023-07-31 15:40:54+00:00,,0,liruixianglrx/all-in-one,672980986,Verilog,all-in-one,15429,0,2023-08-01 15:26:26+00:00,[],None
661,https://github.com/Feng573795502/cyclone-source.git,2023-07-31 11:06:40+00:00,,0,Feng573795502/cyclone-source,672872482,Verilog,cyclone-source,77730,0,2023-07-31 11:06:55+00:00,[],None
662,https://github.com/zxtres/test_carta_ajuste.git,2023-07-31 15:54:10+00:00,Displays a test card for testing/debugging purposes,0,zxtres/test_carta_ajuste,672986244,Verilog,test_carta_ajuste,244,0,2023-07-31 15:57:07+00:00,[],https://api.github.com/licenses/gpl-3.0
663,https://github.com/oguzhanvtnsvr/caravel-tutorial.git,2023-08-02 05:18:10+00:00,,0,oguzhanvtnsvr/caravel-tutorial,673643172,Verilog,caravel-tutorial,11911,0,2023-08-02 05:19:39+00:00,[],https://api.github.com/licenses/apache-2.0
664,https://github.com/2jyun/HD74HC165_Project.git,2023-08-01 06:54:03+00:00,본 파일은 Xilinx Vivado 2022.2 프로그램 버전으로 제작되었으며 Vivado Project File을 클릭하시면 열 수 있습니다. 혹은 .v파일이 있으니  코드만 바로 확인 가능합니다. 부족하거나 미흡한 부분 있어도 양해 부탁드립니다. 감사합니다.,0,2jyun/HD74HC165_Project,673228529,Verilog,HD74HC165_Project,873,0,2023-08-01 11:18:37+00:00,[],None
665,https://github.com/Strateago/IF817_InterfaceHardware-Software.git,2023-08-01 19:55:12+00:00,Repositório dedicado à disciplina Interface Hardware-Software,0,Strateago/IF817_InterfaceHardware-Software,673513220,Verilog,IF817_InterfaceHardware-Software,127329,0,2023-09-22 18:11:57+00:00,[],None
666,https://github.com/jtss9/Computer-Organization.git,2023-07-27 05:55:18+00:00,2022 Fall Computer Organization,0,jtss9/Computer-Organization,671349298,Verilog,Computer-Organization,22667,0,2023-07-27 06:35:07+00:00,[],None
667,https://github.com/PrathammGupta/task1.1p.git,2023-07-27 06:52:09+00:00,,0,PrathammGupta/task1.1p,671367591,Verilog,task1.1p,0,0,2023-07-27 06:52:44+00:00,[],None
668,https://github.com/MohamedKhaleeed/UART.git,2023-07-28 21:07:06+00:00,UART Communication protocol using verilog,0,MohamedKhaleeed/UART,672071507,Verilog,UART,25,0,2023-07-28 21:41:04+00:00,[],None
669,https://github.com/OrsuVenkataKrishnaiah1235/Router1-3-using-verilog.git,2023-07-26 08:52:16+00:00,Router design using Verilog ,1,OrsuVenkataKrishnaiah1235/Router1-3-using-verilog,670972678,Verilog,Router1-3-using-verilog,3347,0,2023-08-04 05:40:46+00:00,[],None
670,https://github.com/OmarMahmoudElsherif/CRC-using-Verilog.git,2023-08-04 15:59:29+00:00,CRC,0,OmarMahmoudElsherif/CRC-using-Verilog,674724425,Verilog,CRC-using-Verilog,504,0,2023-08-04 16:01:54+00:00,[],None
671,https://github.com/MJoergen/ChipChatData.git,2023-08-01 11:38:04+00:00,,1,MJoergen/ChipChatData,673328823,Verilog,ChipChatData,622,0,2023-08-01 11:41:17+00:00,[],None
672,https://github.com/YunJoongChul/Verilog-layer1-08.02-final.git,2023-08-02 10:58:13+00:00,,0,YunJoongChul/Verilog-layer1-08.02-final,673757204,Verilog,Verilog-layer1-08.02-final,34,0,2023-08-02 10:58:50+00:00,[],None
673,https://github.com/YunJoongChul/Verilog-layer1nlayer2-08.04-END.git,2023-08-04 10:59:49+00:00,,0,YunJoongChul/Verilog-layer1nlayer2-08.04-END,674607474,Verilog,Verilog-layer1nlayer2-08.04-END,43,0,2023-08-04 11:06:35+00:00,[],None
674,https://github.com/Mohamedaboelnaga/CRC-Using-Verilog.git,2023-08-04 16:55:43+00:00,CRC is an error detection and correction Protocol and can be implemented using several ways. One of these ways is using LFSR (Linear Feedback Shift Register) which is:  A shift register that has some of its outputs together in exclusive-OR or exclusive-NOR configurations to form a feedback path. ,0,Mohamedaboelnaga/CRC-Using-Verilog,674744075,Verilog,CRC-Using-Verilog,2,0,2023-08-04 16:57:11+00:00,[],None
675,https://github.com/mo-hosni/caravel_ram.git,2023-08-03 09:40:58+00:00,,0,mo-hosni/caravel_ram,674166175,Verilog,caravel_ram,11912,0,2023-08-03 09:42:51+00:00,[],https://api.github.com/licenses/apache-2.0
676,https://github.com/2jyun/RISC-V.git,2023-08-04 03:03:31+00:00,RISC-V RTL Code and Simulation,0,2jyun/RISC-V,674468579,Verilog,RISC-V,14,0,2023-08-09 12:59:03+00:00,[],None
677,https://github.com/kayak44/Test_Caravel.git,2023-08-02 22:49:03+00:00,,0,kayak44/Test_Caravel,673994740,Verilog,Test_Caravel,11912,0,2023-08-02 22:50:31+00:00,[],https://api.github.com/licenses/apache-2.0
678,https://github.com/hyunjunekim02/CSED273.git,2023-08-03 08:39:44+00:00,POSTECH CSED273 Digital System Design Lab Assignments & Final Project (2022 Spring),0,hyunjunekim02/CSED273,674144594,Verilog,CSED273,5690,0,2023-10-06 10:50:14+00:00,[],None
679,https://github.com/PratMaha/VerilogExpFunction.git,2023-08-08 18:53:25+00:00,This repo contains a verilog implementation of the exp function using the Taylor series assuming that x is between -1.2 to +1.2,0,PratMaha/VerilogExpFunction,676243035,Verilog,VerilogExpFunction,23,0,2023-08-08 18:54:04+00:00,[],None
680,https://github.com/AARONKOSHY22/intelunnati_Incognito.git,2023-08-09 12:17:58+00:00,,0,AARONKOSHY22/intelunnati_Incognito,676532349,Verilog,intelunnati_Incognito,956,0,2023-08-09 12:19:15+00:00,[],None
681,https://github.com/Africanuncle/210.git,2023-08-09 14:00:51+00:00,,0,Africanuncle/210,676571257,Verilog,210,44,0,2023-08-11 06:04:55+00:00,[],None
682,https://github.com/hasibulhasanjoy/HDL_Verilog.git,2023-08-06 06:34:35+00:00,,0,hasibulhasanjoy/HDL_Verilog,675209759,Verilog,HDL_Verilog,9,0,2023-08-24 03:29:20+00:00,[],None
683,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-23.git,2023-08-06 10:17:35+00:00,"SR FLIFLOP USING JK,D,T FLIPFLOPS",0,rajitha0119/100-DAYS-OF-RTL-DAY-23,675257607,Verilog,100-DAYS-OF-RTL-DAY-23,658,0,2023-08-06 10:23:39+00:00,[],None
684,https://github.com/amirmuallim/ALU-8-bit.git,2023-08-06 09:48:54+00:00,,0,amirmuallim/ALU-8-bit,675251053,Verilog,ALU-8-bit,159,0,2023-08-06 10:03:29+00:00,[],None
685,https://github.com/farhanaafrin12/FarhanaAfrin.git,2023-08-06 17:56:29+00:00,,0,farhanaafrin12/FarhanaAfrin,675376726,Verilog,FarhanaAfrin,11912,0,2023-08-06 17:57:57+00:00,[],https://api.github.com/licenses/apache-2.0
686,https://github.com/jollyfello/mwscas.git,2023-08-06 17:57:38+00:00,,0,jollyfello/mwscas,675376997,Verilog,mwscas,11912,0,2023-08-06 18:35:16+00:00,[],https://api.github.com/licenses/apache-2.0
687,https://github.com/Foxlisic/C6502M25.git,2023-08-07 10:09:41+00:00,25 MHZ C6502 ДЛЯ ПРИКОЛА,0,Foxlisic/C6502M25,675609286,Verilog,C6502M25,21,0,2023-08-07 10:11:20+00:00,[],https://api.github.com/licenses/mit
688,https://github.com/I-am-VarunM/ZCU104_src_EMA.git,2023-08-09 12:45:45+00:00,,0,I-am-VarunM/ZCU104_src_EMA,676542149,Verilog,ZCU104_src_EMA,303319,0,2023-08-09 12:55:38+00:00,[],None
689,https://github.com/hanqian1997/gitstudy.git,2023-08-08 03:09:27+00:00,,0,hanqian1997/gitstudy,675916859,Verilog,gitstudy,88,0,2023-08-08 03:22:42+00:00,[],None
690,https://github.com/Buteau17/Computer-organization.git,2023-08-09 19:03:17+00:00,,0,Buteau17/Computer-organization,676682564,Verilog,Computer-organization,2451,0,2023-10-12 18:33:09+00:00,[],https://api.github.com/licenses/mit
691,https://github.com/mhamdy2712/Debouncer-Button.git,2023-08-09 20:42:48+00:00,,0,mhamdy2712/Debouncer-Button,676711739,Verilog,Debouncer-Button,2,0,2023-08-09 20:44:02+00:00,[],None
692,https://github.com/HarshPatel1503/Sync_down_counter.git,2023-08-11 11:21:44+00:00,,0,HarshPatel1503/Sync_down_counter,677357667,Verilog,Sync_down_counter,0,0,2023-08-11 11:22:03+00:00,[],None
693,https://github.com/rajitha0119/100-DAYS-OF-RTL-DAY-27.git,2023-08-12 13:24:30+00:00,asynchronous counters,0,rajitha0119/100-DAYS-OF-RTL-DAY-27,677737940,Verilog,100-DAYS-OF-RTL-DAY-27,797,0,2023-08-12 13:31:16+00:00,[],None
694,https://github.com/manglamayank/High-Performance-Adders.git,2023-08-12 12:15:34+00:00,"Implemented CLA, Ripple-Carry, Brent Kung and Kogge Stone adder using Verilog on Xilinx Vivado. Also compared then on the grounds of Power and Time Delay.",0,manglamayank/High-Performance-Adders,677721128,Verilog,High-Performance-Adders,5,0,2023-10-08 06:17:43+00:00,[],None
695,https://github.com/kabyadeb/CSE2112-Digital_System_Design_Lab_work.git,2023-08-11 10:17:29+00:00,Some problem are solved here based on VLSI design (verilog ),0,kabyadeb/CSE2112-Digital_System_Design_Lab_work,677338413,Verilog,CSE2112-Digital_System_Design_Lab_work,2,0,2023-08-13 14:54:52+00:00,[],None
696,https://github.com/Chengwu0203/ICDC_JAM.git,2023-08-06 14:19:33+00:00,,0,Chengwu0203/ICDC_JAM,675316395,Verilog,ICDC_JAM,733,0,2023-08-06 14:44:33+00:00,[],None
697,https://github.com/SanaNavaei/Digital-Logic-Design-Lab.git,2023-08-06 10:16:59+00:00,,0,SanaNavaei/Digital-Logic-Design-Lab,675257486,Verilog,Digital-Logic-Design-Lab,5719,0,2023-08-18 11:47:33+00:00,[],None
698,https://github.com/fhayes1/Sandbox.git,2023-08-07 18:03:36+00:00,,0,fhayes1/Sandbox,675784830,Verilog,Sandbox,5,0,2023-08-07 20:57:04+00:00,[],None
699,https://github.com/francielekreff/picorv32-sha256-coprocessor.git,2023-08-03 17:12:33+00:00,PicoRV32 SHA-256 Coprocessor,0,francielekreff/picorv32-sha256-coprocessor,674327919,Verilog,picorv32-sha256-coprocessor,85,0,2023-11-13 04:43:23+00:00,[],None
700,https://github.com/y4asse/hdl.git,2023-07-31 16:08:16+00:00,hdlでcpuを作る,0,y4asse/hdl,672991617,Verilog,hdl,7,0,2023-07-31 16:10:41+00:00,[],None
701,https://github.com/I-am-VarunM/ZCU104_src_power.git,2023-08-09 12:24:39+00:00,,0,I-am-VarunM/ZCU104_src_power,676534670,Verilog,ZCU104_src_power,296411,0,2023-08-09 12:44:08+00:00,[],None
702,https://github.com/YongukSim/rram_memory_.git,2023-08-09 05:33:20+00:00,.,0,YongukSim/rram_memory_,676396215,Verilog,rram_memory_,97,0,2023-08-09 05:33:41+00:00,[],https://api.github.com/licenses/apache-2.0
703,https://github.com/Iosaias/VLSI_Bootcamp.git,2023-08-07 20:55:27+00:00,,2,Iosaias/VLSI_Bootcamp,675834974,Verilog,VLSI_Bootcamp,93,0,2023-08-26 16:11:06+00:00,[],https://api.github.com/licenses/apache-2.0
704,https://github.com/darshan-kr/Day-015-sync_d_flip_flop.git,2023-08-05 09:36:51+00:00,"D flip flop is positive edge-triggered and synchronous active high reset D flip flop. As soon as reset is triggered, the output gets reset on the next posedge of a clock.",0,darshan-kr/Day-015-sync_d_flip_flop,674954779,Verilog,Day-015-sync_d_flip_flop,2,0,2023-08-05 09:38:08+00:00,[],None
705,https://github.com/Kevin1729/chess-in-verilog.git,2023-08-10 05:45:41+00:00,"Chess in Verilog, to be flashed on Nexys3 FPGA board.",0,Kevin1729/chess-in-verilog,676831907,Verilog,chess-in-verilog,98,0,2023-08-10 05:46:00+00:00,[],None
706,https://github.com/HarshPatel1503/Wallace_mult.git,2023-08-11 11:42:34+00:00,,0,HarshPatel1503/Wallace_mult,677364081,Verilog,Wallace_mult,1,0,2023-08-11 11:42:53+00:00,[],None
707,https://github.com/Wei-Cheng881221/NTU_CVSD_2023_Spring.git,2023-07-26 10:04:46+00:00,,0,Wei-Cheng881221/NTU_CVSD_2023_Spring,670999579,Verilog,NTU_CVSD_2023_Spring,5586,0,2023-07-26 10:41:45+00:00,[],None
708,https://github.com/ChandraLekha559/ASIC-for-Image-Compression-using-2D-DWT.git,2023-07-26 17:36:47+00:00,,0,ChandraLekha559/ASIC-for-Image-Compression-using-2D-DWT,671167824,Verilog,ASIC-for-Image-Compression-using-2D-DWT,301,0,2023-07-26 17:39:51+00:00,[],None
709,https://github.com/GOKULSP027/VLSI.git,2023-07-28 07:52:11+00:00,,0,GOKULSP027/VLSI,671817938,Verilog,VLSI,99,0,2023-07-28 07:54:53+00:00,[],None
710,https://github.com/Randomguywithamoustache/Asynchronous_Fifo.git,2023-07-28 09:31:11+00:00,,0,Randomguywithamoustache/Asynchronous_Fifo,671850699,Verilog,Asynchronous_Fifo,198,0,2023-07-28 09:34:10+00:00,[],None
711,https://github.com/YunJoongChul/Verilog-FC84to10-07.28.night.git,2023-07-28 09:23:28+00:00,,0,YunJoongChul/Verilog-FC84to10-07.28.night,671847979,Verilog,Verilog-FC84to10-07.28.night,40,0,2023-07-28 09:24:14+00:00,[],None
712,https://github.com/0MultiplyN/synthesizable_sqrt_circuit_implementation.git,2023-08-04 05:10:33+00:00,design a square root circuit using Verilog behavior-level HDL,0,0MultiplyN/synthesizable_sqrt_circuit_implementation,674498747,Verilog,synthesizable_sqrt_circuit_implementation,1,0,2023-08-04 05:27:39+00:00,[],None
713,https://github.com/YunJoongChul/Verilog-FC84to10-07.30.git,2023-07-30 04:51:51+00:00,,0,YunJoongChul/Verilog-FC84to10-07.30,672438136,Verilog,Verilog-FC84to10-07.30,38,0,2023-07-30 04:53:29+00:00,[],None
714,https://github.com/burakcaki/caravel_openlane.git,2023-07-31 08:01:25+00:00,,0,burakcaki/caravel_openlane,672807623,Verilog,caravel_openlane,11911,0,2023-07-31 08:03:02+00:00,[],https://api.github.com/licenses/apache-2.0
715,https://github.com/purveshthummar/Sequence_detector.git,2023-07-31 13:11:04+00:00,Sequence detector in verilog with two FSM Moore and Mealy state machine.,0,purveshthummar/Sequence_detector,672918615,Verilog,Sequence_detector,11,0,2023-07-31 13:13:08+00:00,[],None
716,https://github.com/vayur/y86-64.git,2023-07-30 13:38:55+00:00,,0,vayur/y86-64,672555420,Verilog,y86-64,650,0,2023-07-30 13:42:07+00:00,[],None
717,https://github.com/SujayHL/Ticket-Vending-Machine.git,2023-08-02 14:33:36+00:00,,0,SujayHL/Ticket-Vending-Machine,673837663,Verilog,Ticket-Vending-Machine,2,0,2023-08-02 14:35:16+00:00,[],None
718,https://github.com/sangamanathpuncham/picorv32.git,2023-08-03 09:49:44+00:00,,0,sangamanathpuncham/picorv32,674169209,Verilog,picorv32,11912,0,2023-08-03 09:51:36+00:00,[],https://api.github.com/licenses/apache-2.0
719,https://github.com/tonyalfred/Computation-Storage-Design-and-Verification-using-Verilog-and-UVM.git,2023-08-04 12:41:41+00:00,"Build a UVM Environment for an a computation storage module, that does arithmetic operations where memory resides. Concepts like virtual sequencer, reset agents were used.",0,tonyalfred/Computation-Storage-Design-and-Verification-using-Verilog-and-UVM,674640330,Verilog,Computation-Storage-Design-and-Verification-using-Verilog-and-UVM,21,0,2023-08-04 15:54:31+00:00,[],None
720,https://github.com/ishansingh07/Medium_Sized_Projects_Verilog.git,2023-07-27 18:43:29+00:00,Contains medium sized Verilog Projects,0,ishansingh07/Medium_Sized_Projects_Verilog,671623084,Verilog,Medium_Sized_Projects_Verilog,151,0,2023-07-27 20:18:08+00:00,[],None
721,https://github.com/Embedded-Tinkerer/Dev.git,2023-07-28 13:45:58+00:00,,0,Embedded-Tinkerer/Dev,671937868,Verilog,Dev,4,0,2023-07-28 13:46:03+00:00,[],None
722,https://github.com/sabarense/AC-I.git,2023-08-05 11:55:52+00:00,Repositório de códigos da disciplina de Arquitetura de Computadores I,0,sabarense/AC-I,674987520,Verilog,AC-I,204,0,2023-08-05 17:27:48+00:00,[],https://api.github.com/licenses/mit
723,https://github.com/KeerthiBhushanM/braille-to-ascii.git,2023-08-03 19:03:46+00:00,,0,KeerthiBhushanM/braille-to-ascii,674362818,Verilog,braille-to-ascii,2587,0,2023-08-03 19:04:01+00:00,[],None
724,https://github.com/Ashwin4514/Verilog-Coding.git,2023-08-03 20:12:30+00:00,,0,Ashwin4514/Verilog-Coding,674382778,Verilog,Verilog-Coding,304,0,2023-09-12 02:37:06+00:00,[],None
725,https://github.com/Mohamed-Ayman27/CRC.git,2023-08-04 10:25:50+00:00,,0,Mohamed-Ayman27/CRC,674597262,Verilog,CRC,4,0,2023-08-28 15:45:31+00:00,[],None
726,https://github.com/PumkTbt/FSM_detection_bin.git,2023-08-06 05:55:52+00:00,"cyclone ii fpga, verilog, quartus ii",0,PumkTbt/FSM_detection_bin,675202289,Verilog,FSM_detection_bin,379,0,2023-08-06 05:57:19+00:00,[],None
727,https://github.com/AakashR13/Y86-ISA-Processor.git,2023-08-08 14:11:06+00:00,,0,AakashR13/Y86-ISA-Processor,676137935,Verilog,Y86-ISA-Processor,1256,0,2023-08-08 14:11:15+00:00,[],None
728,https://github.com/yogggoy/gmii_mac_filter_loopback.git,2023-08-08 11:08:45+00:00,Just probe gmii interface/ NOT production ready,0,yogggoy/gmii_mac_filter_loopback,676068023,Verilog,gmii_mac_filter_loopback,9,0,2023-08-08 11:14:42+00:00,[],None
729,https://github.com/MohamedKhaleeed/Pattern_detector.git,2023-07-28 21:00:23+00:00,,0,MohamedKhaleeed/Pattern_detector,672070011,Verilog,Pattern_detector,2,0,2023-07-28 21:00:48+00:00,[],None
730,https://github.com/00853029/IC_Contest_108_v1.git,2023-07-29 09:08:39+00:00,,0,00853029/IC_Contest_108_v1,672202845,Verilog,IC_Contest_108_v1,3213,0,2023-07-29 09:10:14+00:00,[],None
731,https://github.com/KMORaza/Digital_Logic_Design_ECE1003.git,2023-08-04 17:49:45+00:00,,0,KMORaza/Digital_Logic_Design_ECE1003,674760306,Verilog,Digital_Logic_Design_ECE1003,6629,0,2023-08-04 17:53:53+00:00,[],None
732,https://github.com/marmikbhatt/Caravel_Pro_Max.git,2023-08-06 06:11:16+00:00,,0,marmikbhatt/Caravel_Pro_Max,675205267,Verilog,Caravel_Pro_Max,1406,0,2023-08-06 06:11:55+00:00,[],https://api.github.com/licenses/apache-2.0
733,https://github.com/sifferman/tt_asic_screensaver.git,2023-08-12 07:11:52+00:00,,0,sifferman/tt_asic_screensaver,677652119,Verilog,tt_asic_screensaver,77,0,2023-08-22 18:35:27+00:00,[],https://api.github.com/licenses/apache-2.0
734,https://github.com/AbdelrahmanKhaled826/floating_point_addition.git,2023-08-02 01:49:55+00:00,,0,AbdelrahmanKhaled826/floating_point_addition,673592402,Verilog,floating_point_addition,236,0,2023-12-18 15:35:37+00:00,[],None
735,https://github.com/slwang00/IC_Contest.git,2023-08-07 00:34:01+00:00,,1,slwang00/IC_Contest,675451665,Verilog,IC_Contest,35716,0,2024-01-11 05:10:23+00:00,[],None
736,https://github.com/Hoponga/arch.git,2023-07-26 19:17:32+00:00,(work in progress) pipelined MIPS ISA in verilog,0,Hoponga/arch,671200701,Verilog,arch,1522,0,2023-11-09 11:06:11+00:00,[],None
737,https://github.com/viniguim4/Inter-Integrated-Circuit-Interface.git,2023-08-07 21:09:15+00:00,,0,viniguim4/Inter-Integrated-Circuit-Interface,675838298,Verilog,Inter-Integrated-Circuit-Interface,198283,0,2024-01-17 22:08:54+00:00,[],https://api.github.com/licenses/mit
738,https://github.com/shreyastelkar/Similar-to-Geometry-Dash-Platform-Game.git,2023-08-11 22:53:03+00:00,,0,shreyastelkar/Similar-to-Geometry-Dash-Platform-Game,677562485,Verilog,Similar-to-Geometry-Dash-Platform-Game,1281,0,2023-08-12 00:38:40+00:00,[],None
739,https://github.com/serega-drakon/MCST_Lab_DSP_GPU.git,2023-07-26 18:01:12+00:00,Project DSP GPU ,1,serega-drakon/MCST_Lab_DSP_GPU,671175991,Verilog,MCST_Lab_DSP_GPU,10152,0,2024-04-11 11:43:47+00:00,"['assembler', 'c', 'gpu', 'verilog']",None
