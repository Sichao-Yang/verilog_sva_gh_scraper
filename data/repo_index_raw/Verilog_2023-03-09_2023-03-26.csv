,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/hankshyu/ICLab-2023.git,2023-03-18 14:13:39+00:00,Spring 2023 NYCU (prev. NCTU) Integrated Circuit Design Laboratory (ICLab),4,hankshyu/ICLab-2023,615730581,Verilog,ICLab-2023,199087,49,2024-04-09 04:49:07+00:00,"['ic-design', 'verilog', 'integrated-circuits']",None
1,https://github.com/mcleod-ideafix/divtiesus.git,2023-03-19 15:27:17+00:00,"DivTIESUS is a SD/MMC interface for the ZX Spectrum, compatible with ESXDOS. It is not a clone of Mario Pratto's DivMMC.",8,mcleod-ideafix/divtiesus,616089488,Verilog,divtiesus,1819,27,2024-03-08 18:15:13+00:00,[],https://api.github.com/licenses/gpl-3.0
2,https://github.com/ekb0412/100DaysofRTL.git,2023-03-26 09:48:29+00:00,"""100 days of RTL"" is a personal project to learn Verilog HDL RTL design in 100 days, using Xilinx Vivado",7,ekb0412/100DaysofRTL,619108844,Verilog,100DaysofRTL,12617,26,2024-04-09 18:43:35+00:00,"['digital-system-design', 'asic', 'fpga', 'xilinx-vivado', 'verilog-hdl', 'vlsi-design']",https://api.github.com/licenses/apache-2.0
3,https://github.com/openasic-org/xk264.git,2023-03-22 04:32:57+00:00,xk264：AVC/H.264 Video Encoder IP Core (RTL),7,openasic-org/xk264,617290988,Verilog,xk264,891,22,2024-04-09 06:19:43+00:00,"['encoder', 'ip', 'rtl', 'video']",None
4,https://github.com/fivexxxxx/image_processing.git,2023-03-16 06:22:15+00:00,FPGA图像处理-- 车牌定位，包括二值化，腐蚀，膨胀，sobel边缘检测，水平投影和垂直投影等,2,fivexxxxx/image_processing,614703657,Verilog,image_processing,19075,21,2024-04-02 06:19:52+00:00,[],None
5,https://github.com/merldsu/SAP_FPU.git,2023-03-15 05:39:30+00:00,This repository contains the Simple As Possible Floating Point Unit design based on the IEEE-754 Standard.,4,merldsu/SAP_FPU,614207440,Verilog,SAP_FPU,4296,15,2024-03-11 08:48:42+00:00,[],https://api.github.com/licenses/apache-2.0
6,https://github.com/OlegMishin/A500_8MB_ide2.git,2023-03-12 15:21:39+00:00,8MB FastRAM and  BSC-AT-Bus IDE controller for Amiga 500,0,OlegMishin/A500_8MB_ide2,612988751,Verilog,A500_8MB_ide2,2469,14,2024-03-18 09:47:03+00:00,[],https://api.github.com/licenses/gpl-3.0
7,https://github.com/TinyTapeout/tinytapeout-03.git,2023-03-14 19:04:23+00:00,,5,TinyTapeout/tinytapeout-03,614036932,Verilog,tinytapeout-03,616284,12,2024-03-23 15:29:54+00:00,[],https://api.github.com/licenses/apache-2.0
8,https://github.com/jhdjames37/RISC-V-CPU-simple.git,2023-03-11 06:19:06+00:00,清华大学《计算机组成原理》大实验——五级流水线 RISC-V 处理器。「奋战三星期，造台计算机」,1,jhdjames37/RISC-V-CPU-simple,612505188,Verilog,RISC-V-CPU-simple,1027,11,2024-03-15 06:32:34+00:00,[],None
9,https://github.com/mbaykenar/computer-architecture.git,2023-03-21 10:34:34+00:00,"This course is given in ERCIYES UNIVERSITY for Spring 2022-2023 semester as a fourth grade lecture. You can find lecture notes, RISC-V assembly codes and Verilog codes related to the course",3,mbaykenar/computer-architecture,616910774,Verilog,computer-architecture,27631,10,2024-04-09 04:43:57+00:00,[],https://api.github.com/licenses/apache-2.0
10,https://github.com/mostafa-elgendy22/PrUcess.git,2023-03-22 17:18:00+00:00,"PrUcess is a low-power multi-clock configurable digital processing system that executes commands (unsigned arithmetic operations, logical operations, register file read & write operations) which are received from an external source through UART receiver module and it transmits the commands' results through the UART transmitter module.",0,mostafa-elgendy22/PrUcess,617578699,Verilog,PrUcess,63983,8,2024-01-20 19:41:53+00:00,"['asic-design', 'verilog', 'dft', 'formal-verification', 'physical-design', 'synchronizer', 'synthesis', 'uart-protocol']",https://api.github.com/licenses/mit
11,https://github.com/lightside-instruments/gpib4pi.git,2023-03-09 22:15:30+00:00,,0,lightside-instruments/gpib4pi,611954038,Verilog,gpib4pi,330,8,2024-04-11 02:22:26+00:00,[],
12,https://github.com/ZipCPU/wbsata.git,2023-03-20 12:08:00+00:00,Wishbone SATA Controller,0,ZipCPU/wbsata,616446696,Verilog,wbsata,219,7,2023-06-27 01:50:03+00:00,[],https://api.github.com/licenses/gpl-3.0
13,https://github.com/merldsu/RISCV_Single_Cycle_Core.git,2023-03-25 04:27:48+00:00,This repository contains the design files of RISC-V Single Cycle Core,2,merldsu/RISCV_Single_Cycle_Core,618695027,Verilog,RISCV_Single_Cycle_Core,731,6,2024-03-25 17:21:03+00:00,[],https://api.github.com/licenses/apache-2.0
14,https://github.com/antongale/arcade-exerion.git,2023-03-17 13:13:09+00:00,,0,antongale/arcade-exerion,615334344,Verilog,arcade-exerion,7957,6,2023-09-29 22:05:38+00:00,[],https://api.github.com/licenses/gpl-3.0
15,https://github.com/simoasnaghi/FPGA_PUF.git,2023-03-17 09:06:36+00:00,"This is a simple implementation of an Arbiter PUF made for an FPGA Artix-7. Project part of the course Embedded Systems, part of the Electronics Engineering Master course at Politecnico di Milano.",1,simoasnaghi/FPGA_PUF,615242674,Verilog,FPGA_PUF,1659,6,2024-03-27 01:58:25+00:00,[],https://api.github.com/licenses/gpl-3.0
16,https://github.com/ashok8367/verilog-mini_projects.git,2023-03-09 17:29:23+00:00,,1,ashok8367/verilog-mini_projects,611858307,Verilog,verilog-mini_projects,302,5,2024-04-04 04:26:14+00:00,[],None
17,https://github.com/DmitryZlobec/yrv-omdazz.git,2023-03-17 14:52:41+00:00,,2,DmitryZlobec/yrv-omdazz,615375945,Verilog,yrv-omdazz,123181,5,2023-12-11 09:39:08+00:00,[],https://api.github.com/licenses/apache-2.0
18,https://github.com/jyuwaaw/Digital_IC_Design.git,2023-03-24 16:22:13+00:00,"高级数字IC设计 For HUST IC major by Benji, Class of 2019",0,jyuwaaw/Digital_IC_Design,618513393,Verilog,Digital_IC_Design,170361,5,2024-02-22 12:50:32+00:00,[],None
19,https://github.com/zaun/BasicCPU.git,2023-03-26 01:53:37+00:00,Basic CPU that runs on Tang Nano 9K FPGA,0,zaun/BasicCPU,619011621,Verilog,BasicCPU,12,5,2024-01-03 11:38:49+00:00,[],None
20,https://github.com/ArvinDelavari/Digital-Circuits-Verilog.git,2023-03-15 18:01:43+00:00,Sample Verilog codes for digital circuits,1,ArvinDelavari/Digital-Circuits-Verilog,614502127,Verilog,Digital-Circuits-Verilog,24207,4,2023-09-29 06:39:55+00:00,"['computer-architecture', 'cpu', 'cpu-design', 'digital-design', 'digital-design-and-computer-organization', 'hardware-description-language', 'hdl', 'iverilog', 'risc-v', 'verilog', 'vscode']",https://api.github.com/licenses/gpl-3.0
21,https://github.com/santosh2407/Design-and-Analysis-of-SPI-Master-Salve-using-18nm-in-Qflow.git,2023-03-10 10:58:47+00:00,,0,santosh2407/Design-and-Analysis-of-SPI-Master-Salve-using-18nm-in-Qflow,612171608,Verilog,Design-and-Analysis-of-SPI-Master-Salve-using-18nm-in-Qflow,3232,4,2023-07-20 06:39:17+00:00,[],None
22,https://github.com/thuCGRA/2D-MeshNoC.git,2023-03-17 08:28:33+00:00,2D-Mesh NoC implementation developed by SpinalHDL,1,thuCGRA/2D-MeshNoC,615229300,Verilog,2D-MeshNoC,4359,4,2023-12-13 02:01:56+00:00,[],None
23,https://github.com/abdelazeem201/Microcontrollers-based-on-the-Arm-Cortex-M0.git,2023-03-19 14:09:30+00:00,This example design is based on the Arm Cortex-M System Design Kit (CMSDK) reference design.,1,abdelazeem201/Microcontrollers-based-on-the-Arm-Cortex-M0,616064004,Verilog,Microcontrollers-based-on-the-Arm-Cortex-M0,12249,3,2023-06-14 19:25:10+00:00,[],https://api.github.com/licenses/mit
24,https://github.com/wang-hanmo/SuBolt-CPU.git,2023-03-13 09:28:35+00:00,"2021年第五届""龙芯杯""全国大学生计算机系统能力大赛CPU设计赛西北工业大学一队参赛作品",1,wang-hanmo/SuBolt-CPU,613288816,Verilog,SuBolt-CPU,31532,3,2024-03-13 08:46:14+00:00,[],None
25,https://github.com/Weichi-Zhang/FPU.git,2023-03-22 13:55:10+00:00,集成Berkeley hardfloat的，可以直接用于RISC-V处理器单精度FPU实现的小模块,1,Weichi-Zhang/FPU,617488773,,FPU,96,3,2024-02-28 12:11:42+00:00,[],None
26,https://github.com/AmberHeart/Serial-debug-unit.git,2023-03-16 13:38:38+00:00,CPU算法竞赛班Lab2,0,AmberHeart/Serial-debug-unit,614869197,Verilog,Serial-debug-unit,2358,3,2024-04-01 04:55:07+00:00,[],None
27,https://github.com/Kaed3mi/2022-BUAA-CO.git,2023-03-21 08:51:53+00:00,北航计算机学院计算机组成原理实验,0,Kaed3mi/2022-BUAA-CO,616868752,Verilog,2022-BUAA-CO,19952,3,2023-11-30 00:03:27+00:00,[],None
28,https://github.com/djordje200179/Niski.git,2023-03-18 08:43:57+00:00,"System for Cyclone IV FPGA dev board that consist of RISC-V CPU, custom OS, DMA, controllers and drivers for peripherals.",0,djordje200179/Niski,615642174,Verilog,Niski,14384,3,2024-02-05 22:16:51+00:00,"['cyclone-iv', 'fpga', 'quartus', 'verification', 'verilog', 'systemverilog', 'kernel', 'os', 'risc-v', 'dma', 'watchdog']",None
29,https://github.com/abarajithan11/systolic-transformer.git,2023-03-10 05:29:29+00:00,,0,abarajithan11/systolic-transformer,612059462,Verilog,systolic-transformer,588033,2,2023-08-23 00:31:23+00:00,[],None
30,https://github.com/RaviKumarKorada217/Sequence-detectors.git,2023-03-12 09:33:06+00:00,,0,RaviKumarKorada217/Sequence-detectors,612888417,Verilog,Sequence-detectors,1294,2,2023-11-05 10:23:42+00:00,[],None
31,https://github.com/FaresAtef1/AES-Advanced-Encryption-Standard.git,2023-03-24 22:53:25+00:00,256-bit Advanced Encryption Standard Implemented with Verilog HDL.,2,FaresAtef1/AES-Advanced-Encryption-Standard,618632535,Verilog,AES-Advanced-Encryption-Standard,27,2,2023-12-30 19:46:27+00:00,"['aes-128', 'aes-256', 'aes-encryption', 'hardware-description-language', 'aes-de', 'quartus-prime', 'fpga']",None
32,https://github.com/marsohod4you/MCY112.git,2023-03-25 05:23:25+00:00,MCY112 FPGA board,1,marsohod4you/MCY112,618705767,Verilog,MCY112,7548,2,2024-01-14 17:36:43+00:00,[],https://api.github.com/licenses/isc
33,https://github.com/Steven-Ysm/NUAA-Principles-of-computer-composition.git,2023-03-13 03:33:00+00:00,NUAA-计算机组成原理实验,0,Steven-Ysm/NUAA-Principles-of-computer-composition,613175620,Verilog,NUAA-Principles-of-computer-composition,1973,2,2024-01-27 11:02:44+00:00,[],None
34,https://github.com/RayJinStudio/Ray_RISC-V.git,2023-03-15 10:41:25+00:00,,1,RayJinStudio/Ray_RISC-V,614314449,Verilog,Ray_RISC-V,106492,2,2023-06-13 04:22:19+00:00,[],https://api.github.com/licenses/mit
35,https://github.com/nancyjlau/CSE125-Final-Project.git,2023-03-19 06:14:43+00:00,This project implements a simple tapped delay line TDC.,0,nancyjlau/CSE125-Final-Project,615943840,Verilog,CSE125-Final-Project,26,2,2024-04-09 11:51:31+00:00,[],https://api.github.com/licenses/bsd-3-clause
36,https://github.com/polprog/colorlight_hello.git,2023-03-25 12:14:41+00:00,Hello World program for Colorlight 5A-75B (Lattice ECP5 FPGA) with yosys,0,polprog/colorlight_hello,618807902,Verilog,colorlight_hello,35,2,2023-11-21 23:18:22+00:00,[],None
37,https://github.com/OccupyMars2025/Computer-Organization-and-Design-The-Hardware-Software-Interface-RISC-V-Edition.git,2023-03-09 08:15:39+00:00,"RISC-V Edition, 5th Edition",0,OccupyMars2025/Computer-Organization-and-Design-The-Hardware-Software-Interface-RISC-V-Edition,611631067,Verilog,Computer-Organization-and-Design-The-Hardware-Software-Interface-RISC-V-Edition,26984,2,2024-02-28 02:38:24+00:00,[],None
38,https://github.com/lenixlobo/HoughTransformFPGA.git,2023-03-22 18:20:36+00:00,,1,lenixlobo/HoughTransformFPGA,617603654,Verilog,HoughTransformFPGA,18938,2,2023-06-09 02:04:31+00:00,[],None
39,https://github.com/joaocarvalho00/RISC-V.git,2023-03-13 22:59:48+00:00,,0,joaocarvalho00/RISC-V,613608973,Verilog,RISC-V,17,2,2023-03-13 23:10:39+00:00,[],None
40,https://github.com/ozlemkayikcii/VerilogCourse.git,2023-03-22 21:23:54+00:00,What I learned in the Verilog course includes the assignments I completed and laboratory files.,0,ozlemkayikcii/VerilogCourse,617666918,Verilog,VerilogCourse,3487,2,2024-04-07 11:54:24+00:00,"['verilog', 'verilog-code', 'verilog-project']",None
41,https://github.com/MortezaRezaalipour/ErrorEval.git,2023-03-10 06:16:39+00:00,"This is the open source code for our paper titled ""ErrorEval: an Open-Source Worst-Case-Error Evaluation Framework for Approximate Computing""",0,MortezaRezaalipour/ErrorEval,612072444,Verilog,ErrorEval,147295,2,2023-07-04 11:27:46+00:00,[],None
42,https://github.com/chris-william0829/bit-mini-mips-single-cycle-cpu.git,2023-03-21 07:00:18+00:00,,0,chris-william0829/bit-mini-mips-single-cycle-cpu,616828899,Verilog,bit-mini-mips-single-cycle-cpu,1075,2,2023-12-05 08:59:58+00:00,[],https://api.github.com/licenses/apache-2.0
43,https://github.com/AliHamzeh2002/Computer-Architecture.git,2023-03-18 13:48:11+00:00,This repository contains computer assignments from Computer Architecture course in University of Tehran.,0,AliHamzeh2002/Computer-Architecture,615722960,Verilog,Computer-Architecture,2140,2,2024-02-05 00:06:44+00:00,[],None
44,https://github.com/ha-zhuzhu/wujian100_basys3.git,2023-03-12 04:31:07+00:00,在 Basys3 上运行平头哥 Wujian100 SoC，并添加简单外设,0,ha-zhuzhu/wujian100_basys3,612823365,Verilog,wujian100_basys3,10434,2,2023-07-16 11:19:25+00:00,[],None
45,https://github.com/hsieh672/MIMO-Detection-Using-QR-Based-Detector.git,2023-03-20 06:51:39+00:00,Designing a 2x2 and 4x4 MIMO detector using a QR-based approach and implementing the hardware architecture using FPGA synthesis.,1,hsieh672/MIMO-Detection-Using-QR-Based-Detector,616324106,Verilog,MIMO-Detection-Using-QR-Based-Detector,23,2,2024-04-06 15:51:19+00:00,[],None
46,https://github.com/rkdgmlqja/simple_game_with_VGA_and_FPGA.git,2023-03-21 07:06:10+00:00,This project includes code for running a simple game with FPGA's VGA pmod port,0,rkdgmlqja/simple_game_with_VGA_and_FPGA,616830958,Verilog,simple_game_with_VGA_and_FPGA,12,1,2023-03-21 07:19:31+00:00,"['fpga-board', 'fpga-programming', 'vga']",None
47,https://github.com/verilking/AES-algorithm.git,2023-03-25 12:34:39+00:00,veril burger king,0,verilking/AES-algorithm,618813476,Verilog,AES-algorithm,164,1,2024-03-08 08:39:07+00:00,[],None
48,https://github.com/shirishavissom/Design-and-synthesis-of-Cruise-control-logic.git,2023-03-24 03:47:21+00:00,"Synthesized the RTL Design with a specific library for 180nm technology to build gate-level netlist, performed Pre-layout STA and also designed the SDC constraint. Generated SPEF Files to determine the Parasitic RC of the nets for crosstalk and signoff STA analysis.",0,shirishavissom/Design-and-synthesis-of-Cruise-control-logic,618247115,Verilog,Design-and-synthesis-of-Cruise-control-logic,601,1,2023-06-12 16:37:48+00:00,[],None
49,https://github.com/mrscaletto/jtag.git,2023-03-14 12:58:16+00:00,JTAG - is an industry standard for verifying designs and testing printed circuit boards after manufacture.,0,mrscaletto/jtag,613876517,Verilog,jtag,341,1,2023-03-16 14:35:25+00:00,[],None
50,https://github.com/daksith/ADS_Bus_project.git,2023-03-12 15:07:28+00:00,,0,daksith/ADS_Bus_project,612983856,Verilog,ADS_Bus_project,1153,1,2023-03-12 15:36:11+00:00,[],None
51,https://github.com/nsemenoff/SONAR-by-MAX10.git,2023-03-20 12:16:57+00:00,SONAR by MAX10 FPGA,0,nsemenoff/SONAR-by-MAX10,616450409,Verilog,SONAR-by-MAX10,3193,1,2023-11-13 17:36:09+00:00,[],https://api.github.com/licenses/gpl-3.0
52,https://github.com/ygrayne/oberon-rts-hw.git,2023-03-25 12:24:48+00:00,,1,ygrayne/oberon-rts-hw,618810771,Verilog,oberon-rts-hw,524,1,2023-03-28 15:05:10+00:00,[],
53,https://github.com/Wei-Cheng881221/NCU_DSD_2022.git,2023-03-15 08:22:44+00:00,,0,Wei-Cheng881221/NCU_DSD_2022,614260388,Verilog,NCU_DSD_2022,7716,1,2023-03-25 04:22:46+00:00,[],None
54,https://github.com/wmz-max/RainbowRio.git,2023-03-22 04:23:04+00:00,,0,wmz-max/RainbowRio,617288826,Verilog,RainbowRio,130663,1,2023-10-23 11:57:04+00:00,[],None
55,https://github.com/xzippyzachx/EECS3216Project.git,2023-03-15 15:24:56+00:00,"Home security system, which includes the ability to detect a person entering a home, and the ability to enter a passcode to turn off an ongoing alarm",0,xzippyzachx/EECS3216Project,614436672,Verilog,EECS3216Project,220,1,2023-04-03 14:43:09+00:00,[],https://api.github.com/licenses/mit
56,https://github.com/spockman66/IC_AdvanceLearning.git,2023-03-18 13:20:51+00:00,Some notes and small RTL projects for leaning advanced digital design and hunting jobs!,0,spockman66/IC_AdvanceLearning,615714888,Verilog,IC_AdvanceLearning,88557,1,2023-12-08 09:34:11+00:00,[],None
57,https://github.com/NayanaRajeev/fulladder.git,2023-03-10 17:57:20+00:00,Verilog code for a fulladder,0,NayanaRajeev/fulladder,612334094,Verilog,fulladder,7,1,2023-04-29 19:16:05+00:00,[],None
58,https://github.com/greenjtee/sdmay23-28.git,2023-03-21 00:47:19+00:00,ISU sdmay23-28 caravel repository,0,greenjtee/sdmay23-28,616729238,Verilog,sdmay23-28,108323,1,2023-05-03 15:09:50+00:00,[],https://api.github.com/licenses/apache-2.0
59,https://github.com/AlPrime2k1/APB-implementation-for-FPGA.git,2023-03-21 10:51:57+00:00,This repository consists of all the related files for my B.Tech major project.,0,AlPrime2k1/APB-implementation-for-FPGA,616917641,Verilog,APB-implementation-for-FPGA,4179,1,2023-08-18 08:46:00+00:00,[],None
60,https://github.com/JavierD501/MIPS-Pipelined-Processor---Verilog.git,2023-03-22 17:46:40+00:00,"MIPS Pipelined Processor project, created using Verilog - Advanced Computer Architecture",0,JavierD501/MIPS-Pipelined-Processor---Verilog,617590062,Verilog,MIPS-Pipelined-Processor---Verilog,39,1,2023-03-22 22:05:28+00:00,[],None
61,https://github.com/JavierD501/Booths-Multiplier---Verilog.git,2023-03-22 19:43:07+00:00,Simulation of Booth's Multiplication Algorithm done in Verilog,0,JavierD501/Booths-Multiplier---Verilog,617633821,Verilog,Booths-Multiplier---Verilog,3,1,2023-11-30 06:32:49+00:00,[],None
62,https://github.com/milkygraph/blg222E-project-1.git,2023-03-24 20:01:51+00:00,,0,milkygraph/blg222E-project-1,618588982,Verilog,blg222E-project-1,307,1,2024-03-26 17:30:07+00:00,[],None
63,https://github.com/Amelia2675/Polar-Decoder.git,2023-03-15 09:15:32+00:00,Final Project for Computer-Aided VLSI System Design,0,Amelia2675/Polar-Decoder,614280632,Verilog,Polar-Decoder,8980,1,2023-04-14 06:48:34+00:00,[],None
64,https://github.com/al719/ALSU_project.git,2023-03-11 14:51:07+00:00,,0,al719/ALSU_project,612639923,Verilog,ALSU_project,560,1,2023-09-22 10:54:06+00:00,[],None
65,https://github.com/coastalwhite/pulpino-top-level-cw305.git,2023-03-11 11:47:34+00:00,The top-level Verilog files for the CW305 to run and communicate with the RISC-V PULPINO core,1,coastalwhite/pulpino-top-level-cw305,612585868,Verilog,pulpino-top-level-cw305,310,1,2024-03-19 10:30:56+00:00,"['chipwhisperer', 'pulpino', 'riscv']",https://api.github.com/licenses/gpl-3.0
66,https://github.com/iEDA-Open-Source-Core-Project/iEDA-data-set.git,2023-03-12 11:15:47+00:00,,3,iEDA-Open-Source-Core-Project/iEDA-data-set,612914618,Verilog,iEDA-data-set,2930,1,2024-03-06 09:58:33+00:00,[],None
67,https://github.com/sheepycat/2022_nycu_CO_LAB.git,2023-03-25 20:29:07+00:00,2022 NYCU Computer Organization - Labs,0,sheepycat/2022_nycu_CO_LAB,618952041,Verilog,2022_nycu_CO_LAB,4708,1,2023-06-10 20:17:48+00:00,['verilog'],None
68,https://github.com/vsoqlod/Vivado_Verilog_Labs.git,2023-03-14 06:41:29+00:00,,1,vsoqlod/Vivado_Verilog_Labs,613729750,Verilog,Vivado_Verilog_Labs,1265,1,2023-03-14 23:22:15+00:00,[],None
69,https://github.com/mercury-5/Verilog-HDL.git,2023-03-18 15:36:43+00:00,Some basic hardware and logic designs and their respective testbenches written in Verilog HDL,0,mercury-5/Verilog-HDL,615756500,Verilog,Verilog-HDL,19,1,2023-12-04 09:27:05+00:00,"['hardware-description-language', 'hardware-designs', 'icarus-verilog', 'verilog']",None
70,https://github.com/Byter64/Hans.git,2023-03-14 20:55:27+00:00,Das coolste Projekt der Welt (es funktioniert nicht),0,Byter64/Hans,614075248,Verilog,Hans,73697,1,2023-10-26 18:21:56+00:00,[],None
71,https://github.com/garyhuangatgithub/caravel_user_project-mpw-8c-circuit.git,2023-03-19 04:27:23+00:00,,0,garyhuangatgithub/caravel_user_project-mpw-8c-circuit,615924024,Verilog,caravel_user_project-mpw-8c-circuit,57438,1,2023-10-24 02:41:50+00:00,[],https://api.github.com/licenses/apache-2.0
72,https://github.com/rogerksho/acousticlevitator.git,2023-03-17 17:18:09+00:00,holographic acoustic levitator,0,rogerksho/acousticlevitator,615431680,Verilog,acousticlevitator,18315,1,2023-08-02 17:59:44+00:00,[],None
73,https://github.com/Jacob-Chappell/mersenne-twister-prng.git,2023-03-20 19:17:20+00:00,"C implementation of the Mersenne Twister pseudo random number generator algorithm. While it is initially intended for the PolyLogic project, I may end up using it in other instances where I need a good RNG.",0,Jacob-Chappell/mersenne-twister-prng,616633950,Verilog,mersenne-twister-prng,15794,1,2023-10-26 01:39:25+00:00,[],None
74,https://github.com/EE2026-Project-AY22-23-S2/MAD-2026.git,2023-03-22 08:54:16+00:00,EE2026 Group Project,2,EE2026-Project-AY22-23-S2/MAD-2026,617371733,Verilog,MAD-2026,37074,1,2023-08-21 21:59:11+00:00,[],None
75,https://github.com/Twinkzzzzz/cpu-design-and-code.git,2023-03-10 06:25:31+00:00,计算机组成原理-做一个cpu,0,Twinkzzzzz/cpu-design-and-code,612075266,Verilog,cpu-design-and-code,9891,1,2023-03-10 06:26:24+00:00,[],None
76,https://github.com/QUICKLY0000/FPGA-Engineering-Interview-Project.git,2023-03-24 13:34:31+00:00,Complete axi_stream _insert_header module simulation verification,0,QUICKLY0000/FPGA-Engineering-Interview-Project,618443817,Verilog,FPGA-Engineering-Interview-Project,173,1,2024-02-15 00:31:48+00:00,[],None
77,https://github.com/Shanmukh-C/Karatsuba-Multiplier.git,2023-03-20 15:32:44+00:00,,0,Shanmukh-C/Karatsuba-Multiplier,616541215,Verilog,Karatsuba-Multiplier,6,1,2023-11-10 12:44:35+00:00,[],None
78,https://github.com/ennzudev/RISC-V-Single-Cycle-Equipo-10.git,2023-03-21 00:23:47+00:00,,0,ennzudev/RISC-V-Single-Cycle-Equipo-10,616723905,Verilog,RISC-V-Single-Cycle-Equipo-10,21,1,2023-03-21 01:08:21+00:00,[],None
79,https://github.com/2Martina/RiscV-SingleCycle.git,2023-03-09 21:38:30+00:00,,0,2Martina/RiscV-SingleCycle,611944045,Verilog,RiscV-SingleCycle,9,1,2023-07-04 14:22:42+00:00,[],None
80,https://github.com/caslab-code/cshake-core.git,2023-03-09 16:55:07+00:00,"Verilog code for cSHAKE, a customizable variant of the secure hash algorithm and KECCAK.",0,caslab-code/cshake-core,611844048,Verilog,cshake-core,98,1,2023-09-27 18:54:54+00:00,[],https://api.github.com/licenses/gpl-3.0
81,https://github.com/rkdgmlqja/FPGA_DoorLock.git,2023-03-09 11:11:03+00:00,simple project using zybo z7 20 which goal is to design fully functioning doorlock,0,rkdgmlqja/FPGA_DoorLock,611698176,Verilog,FPGA_DoorLock,9,1,2023-03-21 07:21:47+00:00,"['fpga', 'fpga-programming', 'verilog']",None
82,https://github.com/yayaelbasha/Single-Cycle-RISC-V-32I-Processor.git,2023-03-10 12:43:42+00:00,,0,yayaelbasha/Single-Cycle-RISC-V-32I-Processor,612210027,Verilog,Single-Cycle-RISC-V-32I-Processor,154,1,2023-03-12 18:39:32+00:00,[],None
83,https://github.com/misomochi/ECE594BB-Neuromorphic-Computing.git,2023-03-21 23:16:40+00:00,UCSB ECE594BB Instructed by Prof. Peng Li in Winter 2023,0,misomochi/ECE594BB-Neuromorphic-Computing,617213340,Verilog,ECE594BB-Neuromorphic-Computing,782,1,2023-12-27 11:10:24+00:00,[],None
84,https://github.com/muneeb-mbytes/FPGABoard_edgeSpartan6.git,2023-03-15 14:19:57+00:00,This project aims at learning Digital Design and Verilog using FPGA board - Edge Spartan6,19,muneeb-mbytes/FPGABoard_edgeSpartan6,614405866,Verilog,FPGABoard_edgeSpartan6,1311,1,2024-04-12 14:25:33+00:00,[],None
85,https://github.com/vnay01/NeuralNetworks.git,2023-03-18 06:55:25+00:00,,0,vnay01/NeuralNetworks,615617234,Verilog,NeuralNetworks,116,1,2023-03-21 05:08:45+00:00,[],None
86,https://github.com/rithiksachdeva/EEC180-Verilog.git,2023-03-16 18:39:40+00:00,"This repository contains Verilog modules designed for signal processing and matrix operations. 'task1' performs Multiply-Accumulate (MAC) operations key for filters and transforms. 'task2' and 'task3' utilize MAC units, digital logic components, and RAM for operations on 8-bit signed integer matrices. ",0,rithiksachdeva/EEC180-Verilog,614999245,Verilog,EEC180-Verilog,112,1,2023-07-31 00:57:10+00:00,"['multiply-accumulate', 'verilog']",https://api.github.com/licenses/gpl-3.0
87,https://github.com/amsacks/OV7670-Video-Processing.git,2023-03-20 20:24:38+00:00,Pipelined a real-time edge detection system with a OV7670 camera and Nexys A7 100T FPGA Trainer Board,0,amsacks/OV7670-Video-Processing,616657598,Verilog,OV7670-Video-Processing,215,1,2023-05-11 04:03:54+00:00,"['fifo', 'handshake-protocol', 'nexys-a7', 'ov7670', 'pipeline', 'sobel-edge-detector', 'systemverilog', 'verilog']",None
88,https://github.com/WanShuan/Digital-IC-Design-HW3_LZ77-Encoder-and-Decoder.git,2023-03-21 14:05:43+00:00,,0,WanShuan/Digital-IC-Design-HW3_LZ77-Encoder-and-Decoder,617001597,Verilog,Digital-IC-Design-HW3_LZ77-Encoder-and-Decoder,417,1,2024-01-15 16:13:25+00:00,[],None
89,https://github.com/brahad316/Y86-64bit-processor.git,2023-03-14 06:05:13+00:00,A functional processor in Verilog which supports the Y86-64 ISA with pipelining with hazard control.,0,brahad316/Y86-64bit-processor,613717647,Verilog,Y86-64bit-processor,23,1,2024-01-16 11:29:53+00:00,"['pipelining', 'processor-architecture', 'testing', 'verilog']",None
90,https://github.com/iandes0uza/CPU-Design.git,2023-03-14 18:54:36+00:00,Simple RISC Computer (Mini SRC) Development,0,iandes0uza/CPU-Design,614033328,Verilog,CPU-Design,30889,1,2024-02-05 01:18:39+00:00,[],None
91,https://github.com/talidab/Hiding-Secrets-Verilog.git,2023-03-10 08:59:29+00:00,,0,talidab/Hiding-Secrets-Verilog,612127249,Verilog,Hiding-Secrets-Verilog,522,1,2023-06-28 04:49:05+00:00,[],None
92,https://github.com/Yash-Ganji/100DaysofRTL.git,2023-03-14 18:59:21+00:00,,0,Yash-Ganji/100DaysofRTL,614035087,Verilog,100DaysofRTL,2341,1,2023-04-02 06:36:30+00:00,[],None
93,https://github.com/Systems-ShiftLab/NearPMHW.git,2023-03-22 14:10:09+00:00,,1,Systems-ShiftLab/NearPMHW,617495909,Verilog,NearPMHW,301,1,2023-04-12 05:28:25+00:00,[],None
94,https://github.com/aretrosen/Implementation-of-AES-SBOX.git,2023-03-21 21:37:12+00:00,Implementation of AES Sbox using the Canright algorithm and Lookup Tables.,0,aretrosen/Implementation-of-AES-SBOX,617186046,Verilog,Implementation-of-AES-SBOX,4,1,2024-04-11 08:54:24+00:00,[],https://api.github.com/licenses/mit
95,https://github.com/amirHosseinEz/MIPS-architecture.git,2023-03-17 10:03:48+00:00,MIPS architecture implemented in Verilog.,0,amirHosseinEz/MIPS-architecture,615264553,Verilog,MIPS-architecture,19,1,2023-11-11 21:28:38+00:00,"['hardware', 'mips', 'mips-architecture', 'verilog']",None
96,https://github.com/HUSTerCH/digital_clock.git,2023-03-22 04:10:31+00:00,,0,HUSTerCH/digital_clock,617286008,Verilog,digital_clock,4148,1,2023-11-13 03:03:28+00:00,[],None
97,https://github.com/putoze/VLSI_DSP.git,2023-03-14 05:51:07+00:00,,0,putoze/VLSI_DSP,613713200,Verilog,VLSI_DSP,141130,1,2023-07-21 04:55:59+00:00,[],None
98,https://github.com/redders7/EE2026.git,2023-03-24 14:52:53+00:00,Multi-application FPGA project built with Verilog,1,redders7/EE2026,618477065,Verilog,EE2026,7701,1,2023-10-30 19:05:57+00:00,"['basys3', 'fpga', 'verilog-project']",None
99,https://github.com/DavidBordeianu/Hiding-Secrets_Verilog-Project.git,2023-03-10 08:51:24+00:00,,0,DavidBordeianu/Hiding-Secrets_Verilog-Project,612124313,Verilog,Hiding-Secrets_Verilog-Project,108,1,2023-06-28 04:49:38+00:00,[],None
100,https://github.com/DOUDIU/Chaotic-Carrier-Wave-System-Based-on-FPGA.git,2023-03-11 02:42:05+00:00,"The frequency of the goal wave is dictated by the value of the logistic value in this chaotic carrier wave system, which is based on fpga design.",0,DOUDIU/Chaotic-Carrier-Wave-System-Based-on-FPGA,612463448,Verilog,Chaotic-Carrier-Wave-System-Based-on-FPGA,9641,1,2023-03-23 12:21:06+00:00,"['chaotic', 'fpga', 'dds']",None
101,https://github.com/mj3622/DIgitalClock_Design.git,2023-03-18 12:59:11+00:00,This is a digital clock project based on Nexys4 DDR platform using Verilog design,0,mj3622/DIgitalClock_Design,615708645,Verilog,DIgitalClock_Design,24,1,2023-11-04 15:16:44+00:00,[],None
102,https://github.com/Wissance/QuickRS232.git,2023-03-20 18:29:52+00:00,A versatile full-duplex RS232 FPGA module with interfnal FIFO bufer ,0,Wissance/QuickRS232,616615922,Verilog,QuickRS232,749,1,2023-09-12 05:44:40+00:00,"['fpga', 'fpga-programming', 'rs232', 'verilog-library', 'serial-communication', 'fpga-rs232', 'serial-communication-fpga', 'verilog-rs232', 'verilog-serial-port', 'altera-uart']",https://api.github.com/licenses/apache-2.0
103,https://github.com/yungtaisun/Digital-Systems-Testing-Testable-Design.git,2023-03-10 03:07:01+00:00,"The objective of this project is to take an existing sequential circuit design, namely the ISCAS89 benchmark circuit s9234, and make it “testable” using various DFT techniques that may include scan, BIST, test/control points, and JTAG (i.e., boundary scan).",0,yungtaisun/Digital-Systems-Testing-Testable-Design,612024375,Verilog,Digital-Systems-Testing-Testable-Design,808,1,2023-03-17 02:24:29+00:00,[],None
104,https://github.com/santosh2407/Implementation-and-Analysis-of-Sine-Wave-Generator-using-Cadence.git,2023-03-19 06:57:08+00:00,,0,santosh2407/Implementation-and-Analysis-of-Sine-Wave-Generator-using-Cadence,615952122,Verilog,Implementation-and-Analysis-of-Sine-Wave-Generator-using-Cadence,1010,1,2023-04-08 19:43:30+00:00,[],None
105,https://github.com/rkdgmlqja/FPGA_Basic_VGA.git,2023-03-17 02:44:39+00:00,Basic VGA control project on FPGA board,0,rkdgmlqja/FPGA_Basic_VGA,615133886,Verilog,FPGA_Basic_VGA,6,1,2023-03-21 07:20:04+00:00,"['fpga', 'fpga-programming', 'vga']",None
106,https://github.com/asreed666/VGAFriday-main.git,2023-03-23 09:39:15+00:00,City2077-23,0,asreed666/VGAFriday-main,617872137,Verilog,VGAFriday-main,87,1,2023-03-24 09:21:29+00:00,[],None
107,https://github.com/jorgenkraghjakobsen/vlsi_open_source.git,2023-03-20 23:41:39+00:00,,1,jorgenkraghjakobsen/vlsi_open_source,616713517,Verilog,vlsi_open_source,2234,1,2023-03-21 22:03:21+00:00,[],None
108,https://github.com/gdnmhr/contractgen.git,2023-03-23 11:30:54+00:00,Automatic Inference of Hardware-Software Contracts for RISC-V Processors,0,gdnmhr/contractgen,617914914,Verilog,contractgen,19920,1,2024-01-11 10:07:13+00:00,[],https://api.github.com/licenses/apache-2.0
109,https://github.com/indu-77/100dayofRTL.git,2023-03-17 17:28:41+00:00,here I'm going to take a challenge of 100 days for RTL .,0,indu-77/100dayofRTL,615435312,Verilog,100dayofRTL,21,1,2023-05-11 18:10:47+00:00,[],None
110,https://github.com/x123y123/CCU-DIC-class.git,2023-03-22 04:01:36+00:00,,0,x123y123/CCU-DIC-class,617283895,Verilog,CCU-DIC-class,353,1,2023-05-21 18:18:37+00:00,[],None
111,https://github.com/WanShuan/Digital-IC-Design-HW4_Edge-Based-Line-Average-interpolation.git,2023-03-21 14:09:14+00:00,,0,WanShuan/Digital-IC-Design-HW4_Edge-Based-Line-Average-interpolation,617003333,Verilog,Digital-IC-Design-HW4_Edge-Based-Line-Average-interpolation,476,1,2023-08-24 20:10:15+00:00,[],None
112,https://github.com/rkdgmlqja/FPGA_Stop_watch.git,2023-03-16 06:48:06+00:00,design a fully functioning stop watch using zybo z7 20 FPGA board,0,rkdgmlqja/FPGA_Stop_watch,614711406,Verilog,FPGA_Stop_watch,14,1,2023-03-21 07:20:51+00:00,"['fpga', 'fpga-programming', 'verilog']",None
113,https://github.com/OldTomCrazyCode/uart_test.git,2023-03-13 03:42:59+00:00,This a simple study project,0,OldTomCrazyCode/uart_test,613178102,Verilog,uart_test,2,1,2023-03-13 05:47:42+00:00,[],None
114,https://github.com/shereenIbdah/ADVANCED-DIGITAL-.git,2023-03-26 13:17:17+00:00,traffic light design in (Verilog HDL),0,shereenIbdah/ADVANCED-DIGITAL-,619165466,Verilog,ADVANCED-DIGITAL-,827,1,2024-03-29 14:09:40+00:00,[],None
115,https://github.com/AaronFengZY/MIPS32-design.git,2023-03-09 11:59:17+00:00,MIPS32 单周期和多周期设计 采用比较新的数据通路 支持28条MIPS指令,0,AaronFengZY/MIPS32-design,611716683,Verilog,MIPS32-design,2951,1,2023-03-09 12:45:07+00:00,[],None
116,https://github.com/chestnut-Q/SimRISCV.git,2023-03-26 13:54:02+00:00,A simple CPU implementation of 5-stage RISC-V pipeline.,0,chestnut-Q/SimRISCV,619176636,Verilog,SimRISCV,289,1,2023-05-02 09:26:43+00:00,[],None
117,https://github.com/WenbinTeng/t4000.git,2023-03-25 08:03:21+00:00,A computing system based on Intel MCS-4 (in memory of Gordon Moore on 2023-03-24).,0,WenbinTeng/t4000,618742409,Verilog,t4000,11790,1,2023-04-14 06:47:14+00:00,['mcs-4'],None
118,https://github.com/desword/axi4_full_demo.git,2023-03-17 09:49:09+00:00,axi4_full_demo ,0,desword/axi4_full_demo,615258915,Verilog,axi4_full_demo,159,1,2023-10-20 09:56:05+00:00,[],https://api.github.com/licenses/apache-2.0
119,https://github.com/sohnryang/csed273.git,2023-03-15 13:59:00+00:00,CSED273: Digital System Design,0,sohnryang/csed273,614395775,Verilog,csed273,132531,1,2023-12-18 06:14:46+00:00,[],None
120,https://github.com/M7mdOdeh1/ENCS2340-Digital_Systems.git,2023-03-17 15:45:03+00:00,,0,M7mdOdeh1/ENCS2340-Digital_Systems,615397157,Verilog,ENCS2340-Digital_Systems,1362,1,2024-01-14 17:18:52+00:00,[],None
121,https://github.com/Convergent-Capstone-Design-team1/Capstone_project.git,2023-03-20 12:18:23+00:00,RISC-V 5stage pipeline CPU including branch prediction,1,Convergent-Capstone-Design-team1/Capstone_project,616450956,Verilog,Capstone_project,44315,1,2024-01-23 08:53:42+00:00,[],None
122,https://github.com/patokav/verilogProject.git,2023-03-24 14:24:56+00:00,,0,patokav/verilogProject,618465498,Verilog,verilogProject,518,0,2023-03-24 14:41:37+00:00,[],None
123,https://github.com/yashwant4756/CarParkingSystem.git,2023-03-26 14:35:24+00:00,,0,yashwant4756/CarParkingSystem,619189967,Verilog,CarParkingSystem,4,0,2023-03-26 14:37:45+00:00,[],None
124,https://github.com/ttffer/IC-Contest.git,2023-03-24 15:15:10+00:00,,0,ttffer/IC-Contest,618486237,Verilog,IC-Contest,14364,0,2023-04-27 02:18:44+00:00,[],None
125,https://github.com/Shaka-wang/hzw.git,2023-03-21 07:56:16+00:00,浙江恒志微电子科技有限公司,0,Shaka-wang/hzw,616848232,Verilog,hzw,4,0,2023-03-21 09:18:00+00:00,[],None
126,https://github.com/mipalgu/zybo_pl_base.git,2023-03-21 05:23:12+00:00,,0,mipalgu/zybo_pl_base,616800333,Verilog,zybo_pl_base,37779,0,2023-05-23 08:08:41+00:00,[],None
127,https://github.com/NourMamdouh/SEQUENCE_DETECTOR.git,2023-03-16 20:05:55+00:00,11010 sequence detector FSM (overlapping technique),0,NourMamdouh/SEQUENCE_DETECTOR,615029476,Verilog,SEQUENCE_DETECTOR,1,0,2023-03-16 20:09:27+00:00,[],None
128,https://github.com/Anupriya-Dey/n-way-set-assosciative-cache-memory.git,2023-03-22 06:20:29+00:00,CSN-221 Course Project,0,Anupriya-Dey/n-way-set-assosciative-cache-memory,617319549,Verilog,n-way-set-assosciative-cache-memory,59,0,2023-03-22 19:07:50+00:00,[],None
129,https://github.com/Shiwani725/up_down_counter_verilog.git,2023-03-21 08:06:22+00:00,Verilog for up-down counter,0,Shiwani725/up_down_counter_verilog,616852012,Verilog,up_down_counter_verilog,2,0,2023-03-21 08:16:43+00:00,[],None
130,https://github.com/kirushnamurthy/VERILOG.git,2023-03-22 16:01:09+00:00,HDL - verilog,0,kirushnamurthy/VERILOG,617546652,Verilog,VERILOG,8,0,2023-03-22 16:03:07+00:00,[],None
131,https://github.com/Bodhi14/VLSI-LAB.git,2023-03-23 09:29:14+00:00,,0,Bodhi14/VLSI-LAB,617868183,Verilog,VLSI-LAB,111,0,2023-04-02 12:32:04+00:00,[],None
132,https://github.com/castoria/upw.git,2023-03-20 20:12:37+00:00,,0,castoria/upw,616653430,Verilog,upw,41724,0,2023-03-20 20:13:15+00:00,[],https://api.github.com/licenses/apache-2.0
133,https://github.com/Satish-Kumar-L/Energy-Efficient-Filter-Bank-Design-for-Hearing-Aid-Application.git,2023-03-21 11:23:05+00:00,,0,Satish-Kumar-L/Energy-Efficient-Filter-Bank-Design-for-Hearing-Aid-Application,616929534,Verilog,Energy-Efficient-Filter-Bank-Design-for-Hearing-Aid-Application,4479,0,2023-03-21 11:24:42+00:00,[],None
134,https://github.com/M-Aizaz/AES-128-FPGA.git,2023-03-25 12:04:55+00:00,,0,M-Aizaz/AES-128-FPGA,618805241,Verilog,AES-128-FPGA,383,0,2023-03-25 12:08:38+00:00,[],None
135,https://github.com/NELEwb/Breathing_lights4ArtyA7.git,2023-03-19 13:39:45+00:00,RGB LED Light control via PWM on FPGA XC7A100TCSG324,0,NELEwb/Breathing_lights4ArtyA7,616054298,Verilog,Breathing_lights4ArtyA7,10,0,2023-03-19 17:51:08+00:00,[],None
136,https://github.com/srinivasf1/Silicon_exp2.git,2023-03-19 01:36:03+00:00,,0,srinivasf1/Silicon_exp2,615895115,Verilog,Silicon_exp2,121290,0,2023-03-19 01:36:40+00:00,[],https://api.github.com/licenses/apache-2.0
137,https://github.com/Lucifer-Menon/-AC620-DS18B20-.git,2023-03-17 02:41:37+00:00,Verilog ，Quartus II，DS18B20，单总线连接,0,Lucifer-Menon/-AC620-DS18B20-,615133113,Verilog,-AC620-DS18B20-,7,0,2023-03-17 02:44:08+00:00,[],None
138,https://github.com/angelruizp/Digital_ii.git,2023-03-18 12:24:53+00:00,,0,angelruizp/Digital_ii,615699158,Verilog,Digital_ii,2164,0,2023-03-18 12:26:41+00:00,[],None
139,https://github.com/Stone749990226/CPU.git,2023-03-18 09:51:27+00:00,,0,Stone749990226/CPU,615658903,Verilog,CPU,57,0,2023-03-27 15:34:54+00:00,[],None
140,https://github.com/bpeng216/custom-6502-processor.git,2023-03-18 05:58:12+00:00,A simplified version of the 6502 processor with a custom instruction set. FSM based and uses a two phase clock.,0,bpeng216/custom-6502-processor,615604503,Verilog,custom-6502-processor,14,0,2023-03-18 05:59:06+00:00,[],None
141,https://github.com/tejashwar27/hdl_verilog.git,2023-03-18 08:14:16+00:00,Verilog example codes,0,tejashwar27/hdl_verilog,615635195,Verilog,hdl_verilog,14,0,2023-03-18 08:36:02+00:00,[],https://api.github.com/licenses/epl-2.0
142,https://github.com/cuikaixiang/axi_stream_insert_header_ckx.git,2023-03-15 02:08:31+00:00,,0,cuikaixiang/axi_stream_insert_header_ckx,614154191,Verilog,axi_stream_insert_header_ckx,211,0,2023-03-15 02:53:35+00:00,[],None
143,https://github.com/harshmhta/CPU-Pipeline-Forwarding.git,2023-03-15 07:39:46+00:00,,0,harshmhta/CPU-Pipeline-Forwarding,614245232,Verilog,CPU-Pipeline-Forwarding,444,0,2023-03-15 07:42:07+00:00,[],None
144,https://github.com/InternetUnexplorer/abc9-example.git,2023-03-14 22:52:45+00:00,Code for reproducing a bug with synth_ecp5 -abc9,0,InternetUnexplorer/abc9-example,614107204,Verilog,abc9-example,12,0,2023-03-14 23:08:36+00:00,[],None
145,https://github.com/yasarkerem/Eggtimer.git,2023-03-14 19:33:56+00:00,CS303 Course Project - Eggtimer,0,yasarkerem/Eggtimer,614047440,Verilog,Eggtimer,1292,0,2023-03-14 19:34:36+00:00,[],None
146,https://github.com/asreed666/VGAFriday.git,2023-03-10 09:06:45+00:00,City2077 - Friday,0,asreed666/VGAFriday,612130036,Verilog,VGAFriday,46,0,2023-03-10 09:20:24+00:00,[],None
147,https://github.com/OptimalKnight/VendingMachine.git,2023-03-12 12:07:29+00:00,"Verilog HDL-based automated vending machine that accepts three different coin denominations and dispenses four products with varying prices. The vending machine's inputs would be the coins of varying denominations, and its outputs would be the dispensed products. ",0,OptimalKnight/VendingMachine,612928169,Verilog,VendingMachine,3,0,2023-09-22 10:48:53+00:00,[],None
148,https://github.com/ChiaN-Yang/Digital-IC-Design.git,2023-03-10 07:22:28+00:00,,0,ChiaN-Yang/Digital-IC-Design,612093333,Verilog,Digital-IC-Design,2,0,2023-03-10 07:23:23+00:00,[],None
149,https://github.com/kongyinkongyinkongyin/test.git,2023-03-10 08:38:43+00:00,,0,kongyinkongyinkongyin/test,612119579,Verilog,test,872,0,2023-03-20 04:05:26+00:00,[],None
150,https://github.com/twed4692/FPGA_line-follower.git,2023-03-12 12:39:04+00:00,,0,twed4692/FPGA_line-follower,612936887,Verilog,FPGA_line-follower,39635,0,2023-03-12 12:48:16+00:00,[],None
151,https://github.com/NSabharwal-27/EECS4612_Proj2.git,2023-03-19 17:02:27+00:00,Project 2 System Verilog code,0,NSabharwal-27/EECS4612_Proj2,616119075,Verilog,EECS4612_Proj2,10,0,2023-03-30 03:15:26+00:00,[],None
152,https://github.com/ausar47/Computer_Architecture.git,2023-03-20 13:09:08+00:00,,0,ausar47/Computer_Architecture,616473261,Verilog,Computer_Architecture,215,0,2023-03-20 13:34:12+00:00,[],None
153,https://github.com/djmcarthur/cs552-sp23.git,2023-03-20 01:44:15+00:00,,0,djmcarthur/cs552-sp23,616243144,Verilog,cs552-sp23,1918,0,2023-03-21 15:03:40+00:00,[],https://api.github.com/licenses/gpl-3.0
154,https://github.com/mireavmis/ssi.git,2023-03-19 09:47:35+00:00,seven segment indication,0,mireavmis/ssi,615990998,Verilog,ssi,11,0,2023-03-19 11:38:26+00:00,[],None
155,https://github.com/TUAT-Denno/mips2riscv.git,2023-03-20 09:18:49+00:00,,0,TUAT-Denno/mips2riscv,616378188,Verilog,mips2riscv,192,0,2023-03-27 03:08:19+00:00,[],None
156,https://github.com/chenwei0129/cordic.git,2023-03-09 06:29:01+00:00,,0,chenwei0129/cordic,611596174,Verilog,cordic,4,0,2023-03-09 06:31:14+00:00,[],None
157,https://github.com/sriharib128/Y86-64_ISA.git,2023-03-09 05:52:16+00:00,,0,sriharib128/Y86-64_ISA,611584917,Verilog,Y86-64_ISA,2079,0,2023-03-09 06:00:48+00:00,[],None
158,https://github.com/chenwei0129/MIPS_CPU.git,2023-03-09 02:21:37+00:00,,0,chenwei0129/MIPS_CPU,611530971,Verilog,MIPS_CPU,396,0,2023-03-09 02:38:34+00:00,[],None
159,https://github.com/Edmond1218/absolute-encoder.git,2023-03-09 08:56:17+00:00,,0,Edmond1218/absolute-encoder,611646243,Verilog,absolute-encoder,3,0,2023-03-09 08:56:42+00:00,[],None
160,https://github.com/namu00/verilog_uart_module.git,2023-03-24 06:39:03+00:00,verilog uart module,0,namu00/verilog_uart_module,618291049,Verilog,verilog_uart_module,74,0,2023-03-25 07:10:25+00:00,[],None
161,https://github.com/Jackray94/Example.git,2023-03-16 01:16:48+00:00,,0,Jackray94/Example,614625628,Verilog,Example,137,0,2023-03-16 01:36:55+00:00,[],None
162,https://github.com/ShaolunWang/MicroprocessorVerilog.git,2023-03-14 11:54:07+00:00,,0,ShaolunWang/MicroprocessorVerilog,613849769,Verilog,MicroprocessorVerilog,25,0,2023-03-14 11:55:01+00:00,[],None
163,https://github.com/leonghuenweng/MouseAudioDisplay.git,2023-03-16 03:31:37+00:00,,2,leonghuenweng/MouseAudioDisplay,614659724,Verilog,MouseAudioDisplay,25,0,2023-03-20 01:21:17+00:00,[],None
164,https://github.com/AarnavNagariya/64-bit-x86-Processor.git,2023-03-24 08:50:00+00:00,,0,AarnavNagariya/64-bit-x86-Processor,618335240,Verilog,64-bit-x86-Processor,100,0,2023-03-24 08:51:17+00:00,[],None
165,https://github.com/Risto97/verilator_cmake_issue.git,2023-03-25 12:52:32+00:00,,0,Risto97/verilator_cmake_issue,618818410,Verilog,verilator_cmake_issue,6,0,2023-03-25 12:53:44+00:00,[],None
166,https://github.com/FIUSCIS-CDA/OneBitAdderHalf.git,2023-03-21 14:33:37+00:00,Half adder,0,FIUSCIS-CDA/OneBitAdderHalf,617015022,Verilog,OneBitAdderHalf,13,0,2023-03-21 15:06:28+00:00,[],https://api.github.com/licenses/mit
167,https://github.com/hsieh672/Pipeline-FIR-Filter-Hardware-Design.git,2023-03-20 06:38:59+00:00,"In order to reduce the critical path delay, add pipeline to the FIR low-pass filter and used  the minimum number of taps to achieve an allowed deviation < -40 dB",0,hsieh672/Pipeline-FIR-Filter-Hardware-Design,616319878,Verilog,Pipeline-FIR-Filter-Hardware-Design,2654,0,2023-08-26 04:31:02+00:00,[],None
168,https://github.com/andrei-lazarov/FPGA-Timer.git,2023-03-21 21:44:31+00:00,Large Scale Integrated Circuits project,0,andrei-lazarov/FPGA-Timer,617188228,Verilog,FPGA-Timer,1373,0,2023-03-22 19:18:03+00:00,[],None
169,https://github.com/rportocarrero/caravel_tutorial.git,2023-03-09 22:30:00+00:00,,0,rportocarrero/caravel_tutorial,611957819,Verilog,caravel_tutorial,41724,0,2023-03-09 22:30:30+00:00,[],https://api.github.com/licenses/apache-2.0
170,https://github.com/ShadowBOB12345/nes_mappers.git,2023-03-10 08:13:44+00:00,NES mappers,0,ShadowBOB12345/nes_mappers,612110846,Verilog,nes_mappers,9,0,2023-04-05 05:42:06+00:00,[],None
171,https://github.com/msuadOf/arm-m0.git,2023-03-12 12:59:56+00:00,arm-m0 for arm-cup,0,msuadOf/arm-m0,612943072,Verilog,arm-m0,826,0,2023-03-12 13:12:11+00:00,[],None
172,https://github.com/ViktoriaEmets/Std_rep.git,2023-03-14 06:16:15+00:00,,0,ViktoriaEmets/Std_rep,613721199,Verilog,Std_rep,4,0,2023-03-15 06:36:55+00:00,[],None
173,https://github.com/sbasu3/miniature-bassoon.git,2023-03-15 16:11:13+00:00,Skywater 130MPW shuttle test mixed signal project,0,sbasu3/miniature-bassoon,614457423,Verilog,miniature-bassoon,95,0,2023-03-15 16:11:20+00:00,[],https://api.github.com/licenses/apache-2.0
174,https://github.com/belongtothenight/FPGAA_Code.git,2023-03-18 11:11:07+00:00,Verilog implementation on FPGA,0,belongtothenight/FPGAA_Code,615679736,Verilog,FPGAA_Code,13234,0,2023-06-25 17:21:02+00:00,[],https://api.github.com/licenses/apache-2.0
175,https://github.com/MauricioGGCatellan/MonteCarlo-Hawkes.git,2023-03-18 16:40:18+00:00,,0,MauricioGGCatellan/MonteCarlo-Hawkes,615775727,Verilog,MonteCarlo-Hawkes,4399,0,2023-04-20 19:37:44+00:00,[],None
176,https://github.com/KarthikL1729/4-bit-CLA-Design.git,2023-03-10 09:04:35+00:00,VLSI Design course final project. Complete design of a 4-bit carry look ahead adder from HDL to Layout.,0,KarthikL1729/4-bit-CLA-Design,612129245,Verilog,4-bit-CLA-Design,3464,0,2023-09-27 10:38:08+00:00,[],None
177,https://github.com/homaung/linear-search-circuit-for-practice.git,2023-03-13 00:35:43+00:00,,0,homaung/linear-search-circuit-for-practice,613134285,Verilog,linear-search-circuit-for-practice,57,0,2023-03-13 06:20:17+00:00,[],None
178,https://github.com/LakshmiNeha-03/Multiplier.git,2023-03-11 07:20:30+00:00,The multiplier is designed by repeated addition method and style followed while designing is datapath and controller design.,0,LakshmiNeha-03/Multiplier,612519062,Verilog,Multiplier,4,0,2023-03-11 07:22:11+00:00,[],None
179,https://github.com/MrShaTr/deneme.git,2023-03-13 17:42:50+00:00,,0,MrShaTr/deneme,613503914,Verilog,deneme,41724,0,2023-03-13 17:43:25+00:00,[],https://api.github.com/licenses/apache-2.0
180,https://github.com/Gogireddyravikiran/pipelined-vector-processor.git,2023-03-12 05:37:37+00:00,Implementing a pipelined vector processor for cnn appilcations,0,Gogireddyravikiran/pipelined-vector-processor,612835689,Verilog,pipelined-vector-processor,8,0,2023-03-12 05:38:19+00:00,[],https://api.github.com/licenses/mit
181,https://github.com/vpspepe/SD2.git,2023-03-24 17:07:34+00:00,,0,vpspepe/SD2,618530332,Verilog,SD2,12267,0,2023-05-07 02:48:18+00:00,[],None
182,https://github.com/yrc40/ico_23.git,2023-03-22 02:28:13+00:00,computer organization,0,yrc40/ico_23,617260428,Verilog,ico_23,1297,0,2024-04-03 16:23:43+00:00,[],None
183,https://github.com/yannickreiss/TT3_dot_op.git,2023-03-24 14:54:42+00:00,,0,yannickreiss/TT3_dot_op,618477832,Verilog,TT3_dot_op,30,0,2023-03-24 14:54:57+00:00,[],https://api.github.com/licenses/apache-2.0
184,https://github.com/ChaminduS/64bitBoothMultiplier.git,2023-03-25 04:00:41+00:00,,0,ChaminduS/64bitBoothMultiplier,618690138,Verilog,64bitBoothMultiplier,206,0,2023-03-25 04:03:17+00:00,[],None
185,https://github.com/Mehmet-Emre-Topdal/Comp-Org-Proj-VHDL.git,2023-03-24 16:35:30+00:00,,0,Mehmet-Emre-Topdal/Comp-Org-Proj-VHDL,618518269,Verilog,Comp-Org-Proj-VHDL,92,0,2023-03-24 16:37:04+00:00,[],None
186,https://github.com/Pizmuh/fpga_random_stuff.git,2023-03-24 13:24:33+00:00,vse kr hočš,0,Pizmuh/fpga_random_stuff,618439848,Verilog,fpga_random_stuff,159,0,2023-03-24 21:15:00+00:00,[],None
187,https://github.com/GavinKnudsen/HackUSU.git,2023-03-25 21:57:31+00:00,,0,GavinKnudsen/HackUSU,618971675,Verilog,HackUSU,2,0,2023-03-25 21:59:09+00:00,[],None
188,https://github.com/Sumith001/Spi_slave.git,2023-03-10 12:14:20+00:00,,0,Sumith001/Spi_slave,612199229,Verilog,Spi_slave,39,0,2023-03-10 12:14:34+00:00,[],None
189,https://github.com/apurvparsodia/A-Low-Power-Radix-4-Booth-Multiplier-With-Pre-Encoded-Mechanism.git,2023-03-13 13:17:17+00:00,,0,apurvparsodia/A-Low-Power-Radix-4-Booth-Multiplier-With-Pre-Encoded-Mechanism,613382422,Verilog,A-Low-Power-Radix-4-Booth-Multiplier-With-Pre-Encoded-Mechanism,6,0,2023-03-13 13:33:17+00:00,[],None
190,https://github.com/bdmyakan/FPGA-Implementation-of-Simple-Quality-of-Service-QoS-based-Queuing.git,2023-03-12 21:07:26+00:00,,0,bdmyakan/FPGA-Implementation-of-Simple-Quality-of-Service-QoS-based-Queuing,613090877,Verilog,FPGA-Implementation-of-Simple-Quality-of-Service-QoS-based-Queuing,2061,0,2023-03-12 21:08:37+00:00,[],None
191,https://github.com/calculusfkyou/logic-design.git,2023-03-14 06:06:25+00:00,,0,calculusfkyou/logic-design,613718071,Verilog,logic-design,54187,0,2023-04-18 08:42:31+00:00,[],None
192,https://github.com/Benjamin-Teng/HDLbits_Output_Zero.git,2023-03-14 12:23:51+00:00,Problem set from https://hdlbits.01xz.net/wiki/Problem_sets#Getting_Started,0,Benjamin-Teng/HDLbits_Output_Zero,613862131,Verilog,HDLbits_Output_Zero,2,0,2023-03-14 12:34:46+00:00,[],None
193,https://github.com/ked-source/MIPS-Processor-Forwarding.git,2023-03-14 14:27:45+00:00,The MIPS Processor with Forwarding repository is a collection of code and documentation that demonstrates the implementation of a MIPS processor with forwarding techniques to solve data hazards.,0,ked-source/MIPS-Processor-Forwarding,613918084,Verilog,MIPS-Processor-Forwarding,29,0,2023-03-14 14:29:10+00:00,[],None
194,https://github.com/kudu-G/Alu-with-flags.git,2023-03-13 00:13:43+00:00,verilog impelementation of 8-bits alu with 16 different operations with 4 flags,0,kudu-G/Alu-with-flags,613129958,Verilog,Alu-with-flags,2,0,2023-03-13 00:15:20+00:00,[],https://api.github.com/licenses/mit
195,https://github.com/Vineethjaisal/Questa-Sim.git,2023-03-12 16:12:38+00:00,QuestaSim is the latest tool in Mentor Graphics tool suite for Functional Verification . I'm currenty working on this tool and hoping this basic verilog codes will be helpful for someone .,0,Vineethjaisal/Questa-Sim,613005578,Verilog,Questa-Sim,3,0,2023-03-12 16:29:41+00:00,[],None
196,https://github.com/singleApo/BUAA_CO_2022.git,2023-03-17 01:29:39+00:00,Computer Organization course design of Beihang University,0,singleApo/BUAA_CO_2022,615115335,Verilog,BUAA_CO_2022,910,0,2023-10-28 07:45:25+00:00,[],https://api.github.com/licenses/gpl-3.0
197,https://github.com/CityPlymElecEng/vgaPong-Thursday.git,2023-03-09 09:29:21+00:00,City2077Assignment 2,0,CityPlymElecEng/vgaPong-Thursday,611659509,Verilog,vgaPong-Thursday,106,0,2023-03-09 09:51:52+00:00,[],None
198,https://github.com/nguynnhoang/Bound-Flasher-VLSI-Design.git,2023-03-11 15:28:07+00:00,,0,nguynnhoang/Bound-Flasher-VLSI-Design,612651632,Verilog,Bound-Flasher-VLSI-Design,331,0,2023-03-11 15:30:11+00:00,[],None
199,https://github.com/dongvanduy/RISC-V.git,2023-03-10 17:16:36+00:00,,0,dongvanduy/RISC-V,612319873,Verilog,RISC-V,19,0,2023-03-10 17:18:00+00:00,[],None
200,https://github.com/youwei0505/M_2016_LBP.git,2023-03-22 12:02:44+00:00,,0,youwei0505/M_2016_LBP,617441933,Verilog,M_2016_LBP,14049,0,2023-03-25 11:26:10+00:00,[],None
201,https://github.com/Chuliu12345/verilog_lock.git,2023-03-22 05:21:54+00:00,,0,Chuliu12345/verilog_lock,617302909,Verilog,verilog_lock,1547,0,2023-03-22 15:56:18+00:00,[],None
202,https://github.com/RaviKumarKorada217/Registers.git,2023-03-23 17:30:57+00:00,,0,RaviKumarKorada217/Registers,618069949,Verilog,Registers,132,0,2023-03-23 17:44:43+00:00,[],None
203,https://github.com/ArianaStanescu/OC-booth-clk.git,2023-03-23 20:13:03+00:00,,0,ArianaStanescu/OC-booth-clk,618128826,Verilog,OC-booth-clk,775,0,2023-10-17 12:29:47+00:00,[],None
204,https://github.com/FlynnHHH/DigitalCircuits.git,2023-03-24 12:07:10+00:00,UCAS-DigitalCircuits projects,0,FlynnHHH/DigitalCircuits,618409403,Verilog,DigitalCircuits,3975,0,2023-06-07 14:54:22+00:00,[],None
205,https://github.com/heyeger/FPGA.git,2023-03-13 02:27:56+00:00,Record the learn in FPGA.,0,heyeger/FPGA,613159327,Verilog,FPGA,24,0,2023-03-13 02:30:50+00:00,[],None
206,https://github.com/Rebabit/Digital-Logic-Experiment.git,2023-03-21 05:31:14+00:00,"Experiments for Digital Logic class (BIT北理工, 数字逻辑)",0,Rebabit/Digital-Logic-Experiment,616802314,Verilog,Digital-Logic-Experiment,4544,0,2023-03-21 06:09:27+00:00,[],https://api.github.com/licenses/mit
207,https://github.com/Willy0921/NYCU_2022_Computer_Organization.git,2023-03-20 11:44:36+00:00,Cource of computer organization,0,Willy0921/NYCU_2022_Computer_Organization,616436916,Verilog,NYCU_2022_Computer_Organization,1822,0,2023-03-20 11:44:45+00:00,[],None
208,https://github.com/anmol109/RISC-V-core.git,2023-03-20 17:20:32+00:00,RV32IM with branch predictor design,0,anmol109/RISC-V-core,616587950,Verilog,RISC-V-core,38,0,2023-03-20 17:21:58+00:00,[],https://api.github.com/licenses/mit
209,https://github.com/pfe-rs/zk-s-2023-fpga.git,2023-03-20 20:40:19+00:00,Materijali i projekti sa FPGA radionice za stare polaznike održane od 20. do 25. marta 2023. godine.,0,pfe-rs/zk-s-2023-fpga,616662657,Verilog,zk-s-2023-fpga,29935,0,2023-08-09 15:29:34+00:00,[],https://api.github.com/licenses/mit
210,https://github.com/2wodms/8x8mult.git,2023-03-21 03:41:08+00:00,,0,2wodms/8x8mult,616774399,Verilog,8x8mult,6,0,2023-03-21 11:18:18+00:00,[],None
211,https://github.com/Hetsoni2002/MIPS_single_cycle_design_verilog.git,2023-03-18 08:43:37+00:00,A mips processor design is aheived using design in verilog.,0,Hetsoni2002/MIPS_single_cycle_design_verilog,615642102,Verilog,MIPS_single_cycle_design_verilog,10,0,2023-03-18 08:52:42+00:00,[],None
212,https://github.com/miloszAlejster/EmbeddedSystemsDemo.git,2023-03-18 22:59:58+00:00,,0,miloszAlejster/EmbeddedSystemsDemo,615869641,Verilog,EmbeddedSystemsDemo,11822,0,2023-03-18 23:09:24+00:00,[],None
213,https://github.com/MGalaxy1984/verilog.git,2023-03-22 22:27:44+00:00,,0,MGalaxy1984/verilog,617684388,Verilog,verilog,75,0,2023-03-23 08:22:16+00:00,[],None
214,https://github.com/kaiqueso/Slot-Machine-Simulator.git,2023-03-22 16:11:50+00:00,Simulador de caça-níquel feito em Verilog.,0,kaiqueso/Slot-Machine-Simulator,617551384,Verilog,Slot-Machine-Simulator,5,0,2023-03-22 16:13:35+00:00,[],None
215,https://github.com/IsPabin/Pabin_module.git,2023-03-22 08:12:37+00:00,,0,IsPabin/Pabin_module,617356221,Verilog,Pabin_module,17,0,2023-03-22 08:13:04+00:00,[],None
216,https://github.com/t-montes/FPGA-Frogger.git,2023-03-09 03:29:02+00:00,,0,t-montes/FPGA-Frogger,611549057,Verilog,FPGA-Frogger,159277,0,2023-05-17 02:36:49+00:00,[],None
217,https://github.com/diferential/sc-rv-tt03-block4.git,2023-03-25 16:50:06+00:00,Public TinyTapeout03 Scan chain based Risc V processor -- block 4 ALU,0,diferential/sc-rv-tt03-block4,618892525,Verilog,sc-rv-tt03-block4,33,0,2023-03-25 19:31:29+00:00,[],https://api.github.com/licenses/apache-2.0
218,https://github.com/NikoScher/B31DE-Assignment-2.git,2023-03-18 14:32:42+00:00,,0,NikoScher/B31DE-Assignment-2,615736381,Verilog,B31DE-Assignment-2,219,0,2023-03-18 14:42:49+00:00,[],None
219,https://github.com/retar-kamuy/systemc-examples.git,2023-03-19 13:46:10+00:00,,0,retar-kamuy/systemc-examples,616056373,Verilog,systemc-examples,224,0,2023-03-19 14:03:02+00:00,[],https://api.github.com/licenses/isc
220,https://github.com/RaviKumarKorada217/RAM-and-ROM.git,2023-03-11 13:43:51+00:00,,0,RaviKumarKorada217/RAM-and-ROM,612619186,Verilog,RAM-and-ROM,917,0,2023-03-11 13:45:46+00:00,[],None
221,https://github.com/Rufaida-Kassem/SPI-Implementation.git,2023-03-13 08:02:46+00:00,,1,Rufaida-Kassem/SPI-Implementation,613254121,Verilog,SPI-Implementation,645,0,2023-03-25 00:42:20+00:00,[],https://api.github.com/licenses/mit
222,https://github.com/EE2026-AY2023/EE2026-FPGA-Project.git,2023-03-13 05:39:12+00:00,,4,EE2026-AY2023/EE2026-FPGA-Project,613206205,Verilog,EE2026-FPGA-Project,314,0,2023-03-21 01:47:36+00:00,[],None
223,https://github.com/LakshmiNeha-03/gcd-computation.git,2023-03-12 09:43:49+00:00,"Using datapath and controller  method , GCD computator is designed.",0,LakshmiNeha-03/gcd-computation,612891188,Verilog,gcd-computation,4,0,2023-03-12 09:44:26+00:00,[],None
224,https://github.com/Herren-Hsing/Fundamentals-of-Computer-Organization.git,2023-03-16 05:41:02+00:00,Labs of the course in 23Spring,0,Herren-Hsing/Fundamentals-of-Computer-Organization,614691717,Verilog,Fundamentals-of-Computer-Organization,20106,0,2023-06-26 13:38:46+00:00,[],None
225,https://github.com/SuryaTeja770/Wireless-data-transfer-SPI.git,2023-03-16 06:09:36+00:00,,0,SuryaTeja770/Wireless-data-transfer-SPI,614699857,Verilog,Wireless-data-transfer-SPI,10,0,2023-05-11 14:55:06+00:00,[],None
226,https://github.com/bgatusch/firstASIC.git,2023-03-17 13:32:37+00:00,,0,bgatusch/firstASIC,615342043,Verilog,firstASIC,121292,0,2023-03-17 13:37:05+00:00,[],https://api.github.com/licenses/apache-2.0
227,https://github.com/awmiller/efab_carv.git,2023-03-21 01:09:18+00:00,,0,awmiller/efab_carv,616734569,Verilog,efab_carv,41724,0,2023-03-21 01:09:52+00:00,[],https://api.github.com/licenses/apache-2.0
228,https://github.com/fishop0304/institute_preliminary.git,2023-03-21 01:21:03+00:00,,0,fishop0304/institute_preliminary,616737499,Verilog,institute_preliminary,9635,0,2023-03-21 01:25:44+00:00,[],None
229,https://github.com/Tori0802/VLSI_222_Group9.git,2023-03-20 15:42:44+00:00,,0,Tori0802/VLSI_222_Group9,616545792,Verilog,VLSI_222_Group9,1633,0,2023-03-20 16:49:50+00:00,[],None
230,https://github.com/iTunSpF/NetlistExtractor.git,2023-03-20 10:54:42+00:00,Tool for extracting instantiated netlist with TAU15/19-benchmark-format verilog.,0,iTunSpF/NetlistExtractor,616417041,Verilog,NetlistExtractor,20926,0,2023-03-20 11:01:52+00:00,[],https://api.github.com/licenses/gpl-2.0
231,https://github.com/JunhaoGoo/self_ip.git,2023-03-21 04:54:11+00:00,common verilog ip,0,JunhaoGoo/self_ip,616792830,Verilog,self_ip,1,0,2023-03-21 04:56:09+00:00,[],None
232,https://github.com/algofoogle/solo-squash-caravel.git,2023-03-19 20:21:56+00:00,Caravel wrapper for solo_squash game repo (simple single-player VGA video game like Pong),0,algofoogle/solo-squash-caravel,616175021,Verilog,solo-squash-caravel,60787,0,2023-03-19 20:38:30+00:00,[],https://api.github.com/licenses/apache-2.0
233,https://github.com/cooper103/SerialDataFPGAGame.git,2023-03-15 17:26:52+00:00,A basic game created using a Basys3 FPGA and WS2812B LED strip,0,cooper103/SerialDataFPGAGame,614488490,Verilog,SerialDataFPGAGame,187,0,2023-03-15 18:03:08+00:00,[],None
234,https://github.com/travislgrice/Quartus_Prime_Intro.git,2023-03-15 20:09:41+00:00,A tutorial from Intel Corporation that presents an introduction to the Quartus Prime CAD system. It gives a general overview of a typical CAD flow for designing circuits that are implemented by using FPGA devices and shows how this flow is realized in the Quartus Prime Software.,0,travislgrice/Quartus_Prime_Intro,614546919,Verilog,Quartus_Prime_Intro,218,0,2023-03-16 19:11:25+00:00,[],None
235,https://github.com/Johann-Schmid/flySimulation.git,2023-03-13 15:12:25+00:00,flySimulation for nexysVideo HDMI,0,Johann-Schmid/flySimulation,613438558,Verilog,flySimulation,188040,0,2023-03-13 15:12:43+00:00,[],None
236,https://github.com/cornell-c2s2/C2S2-PacketRoutingInterconnect.git,2023-03-13 21:52:03+00:00,,0,cornell-c2s2/C2S2-PacketRoutingInterconnect,613591210,Verilog,C2S2-PacketRoutingInterconnect,501,0,2023-05-14 16:37:06+00:00,[],None
237,https://github.com/Karthikeya1409/smart-parking-system-.git,2023-03-18 12:28:25+00:00,,0,Karthikeya1409/smart-parking-system-,615700095,Verilog,smart-parking-system-,4,0,2023-03-18 12:35:15+00:00,[],None
238,https://github.com/Stan-future/top_to_verification.git,2023-03-22 11:25:51+00:00,,0,Stan-future/top_to_verification,617428324,Verilog,top_to_verification,13,0,2023-03-22 11:26:55+00:00,[],None
239,https://github.com/namu00/most_used_modules.git,2023-03-22 11:40:24+00:00,most used verilog modules,0,namu00/most_used_modules,617433461,Verilog,most_used_modules,15,0,2023-03-22 11:44:48+00:00,['verilog-code'],None
240,https://github.com/AndresOrionte/Arqui2022-TP3.git,2023-03-24 02:03:21+00:00,,2,AndresOrionte/Arqui2022-TP3,618220996,Verilog,Arqui2022-TP3,1422,0,2023-09-13 12:50:03+00:00,[],None
241,https://github.com/VietTran8611/quartus-Automobile-Tail-Light-Control-Unit.git,2023-03-25 01:43:27+00:00,,0,VietTran8611/quartus-Automobile-Tail-Light-Control-Unit,618664696,Verilog,quartus-Automobile-Tail-Light-Control-Unit,8641,0,2023-03-25 02:07:45+00:00,[],None
242,https://github.com/nghiahlh2002/Floating-Point-IEEE-754-Multiplixer.git,2023-03-25 17:47:45+00:00,,0,nghiahlh2002/Floating-Point-IEEE-754-Multiplixer,618910033,Verilog,Floating-Point-IEEE-754-Multiplixer,44,0,2023-03-25 17:48:29+00:00,[],None
243,https://github.com/AkshatShah72/Digital-Electronics-and-CO-Lab.git,2023-03-25 16:51:20+00:00,,0,AkshatShah72/Digital-Electronics-and-CO-Lab,618892905,Verilog,Digital-Electronics-and-CO-Lab,5556,0,2023-03-26 12:31:37+00:00,[],None
244,https://github.com/nghiahlh2002/Hough-Transform.git,2023-03-25 16:25:48+00:00,,0,nghiahlh2002/Hough-Transform,618885228,Verilog,Hough-Transform,490,0,2023-03-25 17:25:15+00:00,[],None
245,https://github.com/CTL0303/haps_project.git,2023-03-26 12:15:13+00:00,final project that used HAPS-100,0,CTL0303/haps_project,619147779,Verilog,haps_project,2662,0,2023-04-13 06:38:31+00:00,[],None
246,https://github.com/Sourav158/Multimode-Clock---EC311-Final-Project.git,2023-03-22 18:37:40+00:00,Verilog HDL for a multimodal clock implemented on an FPGA board,0,Sourav158/Multimode-Clock---EC311-Final-Project,617609934,Verilog,Multimode-Clock---EC311-Final-Project,26,0,2023-03-22 18:38:07+00:00,[],None
247,https://github.com/xunthi2710/Traffic-Light-System.git,2023-03-22 18:40:05+00:00,,0,xunthi2710/Traffic-Light-System,617610831,Verilog,Traffic-Light-System,2,0,2023-03-23 02:32:40+00:00,[],None
248,https://github.com/h1dk/AXI_STREAM_INSERT_HEADE.git,2023-03-26 13:10:30+00:00,,0,h1dk/AXI_STREAM_INSERT_HEADE,619163474,Verilog,AXI_STREAM_INSERT_HEADE,171,0,2023-03-26 13:40:57+00:00,[],None
249,https://github.com/omgronny/verilog-2.git,2023-03-26 19:47:41+00:00,,0,omgronny/verilog-2,619285505,Verilog,verilog-2,11,0,2023-03-26 19:50:51+00:00,[],None
250,https://github.com/singhDnaveen45/ROUTER_3X1.git,2023-03-26 17:39:16+00:00,Project is based on the TCP/IP protocol.,0,singhDnaveen45/ROUTER_3X1,619247798,Verilog,ROUTER_3X1,324,0,2023-03-26 17:42:58+00:00,[],https://api.github.com/licenses/mit
251,https://github.com/Birger99/freq_to_dig.git,2023-03-24 12:28:52+00:00,A frequency to digital converter to convert a frequency to a digital value that represents temperature in a sensor.,1,Birger99/freq_to_dig,618417837,Verilog,freq_to_dig,243133,0,2023-03-24 12:29:32+00:00,[],https://api.github.com/licenses/apache-2.0
252,https://github.com/PrinceOfPuppers/icestick-bench.git,2023-03-11 04:58:46+00:00,a test bench for various icestick fpga projects and ideas,0,PrinceOfPuppers/icestick-bench,612489090,Verilog,icestick-bench,7,0,2023-03-11 04:59:45+00:00,[],None
253,https://github.com/Ting011/5_stages_CPU.git,2023-03-15 06:55:31+00:00,This is a review of CSC3050 computer architecture.,0,Ting011/5_stages_CPU,614230570,Verilog,5_stages_CPU,7202,0,2023-03-15 08:27:47+00:00,[],None
254,https://github.com/Kihyun11/MARS-ROVER.git,2023-03-12 15:23:58+00:00,Imperial College London 2nd Year Computer Engineering Design Project,0,Kihyun11/MARS-ROVER,612989518,Verilog,MARS-ROVER,54591,0,2023-03-12 16:00:17+00:00,[],None
255,https://github.com/Btremaine/Baysys3_Project3.git,2023-03-15 01:30:54+00:00,"Add UART to project #2, to include a FIFO and several FSM",0,Btremaine/Baysys3_Project3,614144653,Verilog,Baysys3_Project3,17177,0,2023-03-15 02:02:14+00:00,[],None
256,https://github.com/dido/fpga-video.git,2023-03-09 20:25:09+00:00,Simple experiments generating video with the Sipeed Tang Nano 9k FPGA,0,dido/fpga-video,611922284,Verilog,fpga-video,1746,0,2023-03-09 20:26:39+00:00,[],https://api.github.com/licenses/mit
257,https://github.com/BasselYD/APB-with-GPIO-UART.git,2023-03-09 12:59:30+00:00,,0,BasselYD/APB-with-GPIO-UART,611740784,Verilog,APB-with-GPIO-UART,17,0,2023-03-09 13:09:48+00:00,[],None
258,https://github.com/Jarvisea/FPGA.git,2023-03-09 16:09:07+00:00,,0,Jarvisea/FPGA,611823993,Verilog,FPGA,0,0,2023-03-10 16:26:08+00:00,[],None
259,https://github.com/alexanderjhughes/FPGA-Board-Lab.git,2023-03-15 16:32:42+00:00,"Project at Pace University to create a program to make a small processor and run a basic program using an FPGA Board, Quartus, and Verilog.",1,alexanderjhughes/FPGA-Board-Lab,614466466,Verilog,FPGA-Board-Lab,1725,0,2023-04-06 14:05:02+00:00,[],None
260,https://github.com/nikhil-vasi/Verilog_codes.git,2023-03-19 16:22:45+00:00,Here the list of Verilogs code written by me.,0,nikhil-vasi/Verilog_codes,616107124,Verilog,Verilog_codes,7,0,2024-03-20 10:41:19+00:00,[],None
261,https://github.com/alpha-karthik/RISCV.git,2023-03-15 12:18:05+00:00,This Repository contains the source files and test files for the design of RISC-V RV32I Core and It's Implementation using Verilog.,0,alpha-karthik/RISCV,614352286,Verilog,RISCV,2561,0,2023-03-25 09:32:41+00:00,[],https://api.github.com/licenses/gpl-3.0
262,https://github.com/q1317540161/Computer-Organization.git,2023-03-15 09:31:00+00:00,,0,q1317540161/Computer-Organization,614286848,Verilog,Computer-Organization,3066,0,2023-03-15 09:58:44+00:00,[],None
263,https://github.com/bixuligelo/riscv.git,2023-03-15 15:54:02+00:00,,0,bixuligelo/riscv,614449737,Verilog,riscv,9,0,2023-03-15 16:24:20+00:00,[],None
264,https://github.com/ScriptNewbie/procesor_studia.git,2023-03-14 08:57:40+00:00,,0,ScriptNewbie/procesor_studia,613779073,Verilog,procesor_studia,29,0,2023-04-11 12:32:09+00:00,[],None
265,https://github.com/0marAmr/Digital_Blocks.git,2023-03-14 15:09:30+00:00,"small digital blocks along with their TBs, written in verilog :).",0,0marAmr/Digital_Blocks,613937985,Verilog,Digital_Blocks,33,0,2023-03-14 16:04:15+00:00,[],None
266,https://github.com/Pharmakilo/Verilog_Cyborg.git,2023-03-14 20:35:18+00:00,,0,Pharmakilo/Verilog_Cyborg,614068664,Verilog,Verilog_Cyborg,411,0,2023-03-14 20:35:34+00:00,[],None
267,https://github.com/MujahidBilalOrakzai/Adder_piplining.git,2023-03-16 14:00:28+00:00,,0,MujahidBilalOrakzai/Adder_piplining,614879255,Verilog,Adder_piplining,11,0,2023-09-23 19:09:47+00:00,[],https://api.github.com/licenses/apache-2.0
268,https://github.com/Karthikeya1409/washing-machine.git,2023-03-18 19:24:48+00:00,,0,Karthikeya1409/washing-machine,615822674,Verilog,washing-machine,4,0,2023-03-18 19:25:38+00:00,[],None
269,https://github.com/AkshayD13/Verilog_codes.git,2023-03-19 14:14:57+00:00,,0,AkshayD13/Verilog_codes,616065805,Verilog,Verilog_codes,248,0,2023-03-19 14:18:39+00:00,[],None
270,https://github.com/gwbeip/PCADCS0.git,2023-03-17 02:15:49+00:00,Processor S0 of the PCADC series,0,gwbeip/PCADCS0,615126757,Verilog,PCADCS0,23,0,2023-03-17 02:46:32+00:00,[],https://api.github.com/licenses/gpl-3.0
271,https://github.com/OmarMahmoudElsherif/4-bit-Overlapping-Pattern-Detector-using-FSM-Digital-Design.git,2023-03-18 00:14:20+00:00,,0,OmarMahmoudElsherif/4-bit-Overlapping-Pattern-Detector-using-FSM-Digital-Design,615542360,Verilog,4-bit-Overlapping-Pattern-Detector-using-FSM-Digital-Design,75,0,2023-03-18 00:18:51+00:00,[],None
272,https://github.com/MahmoudHanno/SPI-Slave-Design-and-Verification.git,2023-03-23 09:22:17+00:00,,0,MahmoudHanno/SPI-Slave-Design-and-Verification,617865499,Verilog,SPI-Slave-Design-and-Verification,3,0,2023-03-23 09:29:33+00:00,[],None
273,https://github.com/sness23/cello-sequential.git,2023-03-23 15:48:38+00:00,A sequential circuit using cello-v2,0,sness23/cello-sequential,618027293,Verilog,cello-sequential,5187,0,2023-03-23 15:50:33+00:00,[],https://api.github.com/licenses/gpl-3.0
274,https://github.com/nazrul0/Verilog-Project.git,2023-03-22 15:38:27+00:00,,0,nazrul0/Verilog-Project,617536713,Verilog,Verilog-Project,247526,0,2023-09-20 15:34:09+00:00,[],None
275,https://github.com/aberica/3-1.git,2023-03-25 17:57:36+00:00,,1,aberica/3-1,618912905,Verilog,3-1,50392,0,2023-04-10 16:48:27+00:00,[],None
276,https://github.com/DaniR1337/IE0523-Circuitos-Digitales-II.git,2023-03-24 15:01:01+00:00,,0,DaniR1337/IE0523-Circuitos-Digitales-II,618480448,Verilog,IE0523-Circuitos-Digitales-II,1648,0,2023-03-24 15:11:03+00:00,[],None
277,https://github.com/HazorTremz/Swatchhta_BOT.git,2023-03-24 21:05:46+00:00,"A FPGA based robot whose function is to autonomously visit, gather and segregate the respective garbage bins throughout different cities",0,HazorTremz/Swatchhta_BOT,618606894,Verilog,Swatchhta_BOT,433703,0,2023-03-24 21:27:45+00:00,[],None
278,https://github.com/mymermer/Computer_Organization_Project_1.git,2023-03-26 06:14:47+00:00,Computer Organization 1st Project,1,mymermer/Computer_Organization_Project_1,619059052,Verilog,Computer_Organization_Project_1,3393,0,2023-05-25 12:41:54+00:00,"['computer-organization', 'latex', 'verilog', 'arithmetic-logic-unit']",https://api.github.com/licenses/gpl-3.0
279,https://github.com/AAboulsaad/fir-cnn-rtl.git,2023-03-22 03:07:39+00:00,SystemVerilog for implementing MATLAB neural net onto Xilinx RFSoC.,0,AAboulsaad/fir-cnn-rtl,617270809,Verilog,fir-cnn-rtl,653,0,2023-03-22 22:42:45+00:00,[],https://api.github.com/licenses/mit
280,https://github.com/ausef-collab/pipelined-processor.git,2023-03-23 02:42:46+00:00,CPU pipelined processor ,0,ausef-collab/pipelined-processor,617746707,Verilog,pipelined-processor,1805,0,2023-03-23 03:09:07+00:00,[],None
281,https://github.com/include-jacopo/OpenTimer-CaseStudy.git,2023-03-22 16:59:33+00:00,OpenTimer GPU accelerated using OpenACC directives for study and research purposes.,0,include-jacopo/OpenTimer-CaseStudy,617571150,Verilog,OpenTimer-CaseStudy,103275,0,2023-03-22 17:01:00+00:00,[],
282,https://github.com/DineshVenkatG/Floating-Point-Adder-For-16Bit-DL-Floats.git,2023-03-23 04:25:46+00:00,,0,DineshVenkatG/Floating-Point-Adder-For-16Bit-DL-Floats,617772889,Verilog,Floating-Point-Adder-For-16Bit-DL-Floats,4,0,2023-03-23 04:32:57+00:00,[],None
283,https://github.com/FIUSCIS-CDA/Multiplier_32.git,2023-03-21 14:45:44+00:00,32-bit multiplier,0,FIUSCIS-CDA/Multiplier_32,617020673,Verilog,Multiplier_32,246,0,2023-03-24 21:09:41+00:00,[],https://api.github.com/licenses/mit
284,https://github.com/chenwei0129/IC_contest.git,2023-03-09 01:50:38+00:00,,0,chenwei0129/IC_contest,611522488,Verilog,IC_contest,6617,0,2023-08-29 02:22:30+00:00,[],None
285,https://github.com/VSMuley/Verilog_Codes.git,2023-03-13 03:56:30+00:00,,0,VSMuley/Verilog_Codes,613181390,Verilog,Verilog_Codes,4,0,2023-03-13 08:12:41+00:00,[],None
286,https://github.com/carolinejjohnson/encoderHLS4ML.git,2023-03-10 19:07:58+00:00,,0,carolinejjohnson/encoderHLS4ML,612358130,Verilog,encoderHLS4ML,216,0,2023-03-10 19:08:43+00:00,[],None
287,https://github.com/chiangkd/dic-2023.git,2023-03-13 17:20:37+00:00,,0,chiangkd/dic-2023,613494985,Verilog,dic-2023,28122,0,2023-03-15 19:27:42+00:00,[],None
288,https://github.com/sikeclown/rtl.git,2023-03-12 13:34:09+00:00,,0,sikeclown/rtl,612953707,Verilog,rtl,41724,0,2023-03-12 13:34:42+00:00,[],https://api.github.com/licenses/apache-2.0
289,https://github.com/Tom-McDermott/TSDR-Dev-1B.git,2023-03-11 16:31:28+00:00,UIpdates for Test Plan Phase 1B. See README.md for description.,0,Tom-McDermott/TSDR-Dev-1B,612671403,Verilog,TSDR-Dev-1B,43254,0,2023-03-11 16:45:28+00:00,[],None
290,https://github.com/VitorGuedes22/Calculadora_LCL_2022-2.git,2023-03-19 20:34:16+00:00,,0,VitorGuedes22/Calculadora_LCL_2022-2,616177979,Verilog,Calculadora_LCL_2022-2,985,0,2023-11-23 11:38:19+00:00,[],None
291,https://github.com/iloudaros/VLSI-Systems-Lab.git,2023-03-24 14:18:06+00:00,Lab exercises on VLSI Systems ,1,iloudaros/VLSI-Systems-Lab,618462066,Verilog,VLSI-Systems-Lab,6292,0,2023-12-01 23:56:20+00:00,[],https://api.github.com/licenses/mit
292,https://github.com/MaiAnh871/cla-adder.git,2023-03-21 03:37:06+00:00,,0,MaiAnh871/cla-adder,616773303,Verilog,cla-adder,1,0,2024-03-15 15:06:06+00:00,[],None
293,https://github.com/srikar555/Cyclic-Redundancy-Check.git,2023-03-09 01:14:52+00:00,,0,srikar555/Cyclic-Redundancy-Check,611513201,Verilog,Cyclic-Redundancy-Check,10,0,2023-04-09 19:07:39+00:00,[],None
294,https://github.com/kudu-G/Single-Cycle-Processor.git,2023-03-09 00:07:32+00:00,,0,kudu-G/Single-Cycle-Processor,611496756,Verilog,Single-Cycle-Processor,902,0,2023-03-09 00:09:54+00:00,[],https://api.github.com/licenses/mit
295,https://github.com/PrasadGandikota7/test_project.git,2023-03-14 10:36:59+00:00,,0,PrasadGandikota7/test_project,613820017,Verilog,test_project,41724,0,2023-03-14 10:37:31+00:00,[],https://api.github.com/licenses/apache-2.0
296,https://github.com/BourgeoisLenin/NOC-Ring.git,2023-03-13 21:09:50+00:00,,0,BourgeoisLenin/NOC-Ring,613579015,Verilog,NOC-Ring,104,0,2023-03-13 21:11:30+00:00,[],None
297,https://github.com/ClaudioGlez21/Programmable-logic.git,2023-03-14 21:37:18+00:00,Verilog,0,ClaudioGlez21/Programmable-logic,614087558,Verilog,Programmable-logic,2,0,2023-03-15 21:55:42+00:00,[],None
298,https://github.com/Darshil-2002/arbiter.git,2023-03-24 09:56:15+00:00,,0,Darshil-2002/arbiter,618361041,Verilog,arbiter,8,0,2023-03-27 08:45:03+00:00,[],None
299,https://github.com/samjohnduke/4bitCPU-vivado.git,2023-03-22 19:42:59+00:00,,0,samjohnduke/4bitCPU-vivado,617633780,Verilog,4bitCPU-vivado,90,0,2023-03-22 19:43:48+00:00,[],None
300,https://github.com/SelahattinAbakay/RAM-Unit-Implementation.git,2023-03-22 20:34:24+00:00,,0,SelahattinAbakay/RAM-Unit-Implementation,617651312,Verilog,RAM-Unit-Implementation,37,0,2023-03-22 20:41:26+00:00,[],None
301,https://github.com/hyunmila/SR.git,2023-03-22 21:08:07+00:00,,0,hyunmila/SR,617662129,Verilog,SR,132,0,2023-03-22 21:13:57+00:00,[],None
302,https://github.com/SelahattinAbakay/ALU-Arithmetic-Logic-Unit--Implementation.git,2023-03-22 21:00:23+00:00,,0,SelahattinAbakay/ALU-Arithmetic-Logic-Unit--Implementation,617659655,Verilog,ALU-Arithmetic-Logic-Unit--Implementation,99,0,2023-03-22 21:07:38+00:00,[],None
303,https://github.com/shengtang87/logicdesign_final.git,2023-03-17 13:48:15+00:00,baseball machine,0,shengtang87/logicdesign_final,615348596,Verilog,logicdesign_final,12971,0,2023-03-17 13:49:10+00:00,[],None
304,https://github.com/miket6000/tinytapeout03.git,2023-03-23 05:32:01+00:00,First Tinytapeout design.,0,miket6000/tinytapeout03,617788794,Verilog,tinytapeout03,5,0,2023-03-23 05:34:31+00:00,[],https://api.github.com/licenses/cc0-1.0
305,https://github.com/AlvaroGS03/Arbitrary_Counter_COMPI_22-23.git,2023-03-23 10:18:31+00:00,,0,AlvaroGS03/Arbitrary_Counter_COMPI_22-23,617887541,Verilog,Arbitrary_Counter_COMPI_22-23,2,0,2023-03-23 10:19:52+00:00,[],None
306,https://github.com/joyjason/MIPS-5-stage-Pipeline.git,2023-03-22 16:50:06+00:00,,0,joyjason/MIPS-5-stage-Pipeline,617567339,Verilog,MIPS-5-stage-Pipeline,5665,0,2023-03-22 17:04:53+00:00,[],None
307,https://github.com/AryanAhadinia/DigitalSystemsDesignCodes.git,2023-03-25 08:09:02+00:00,My Verilog Codes for Digital Systems Design Course,0,AryanAhadinia/DigitalSystemsDesignCodes,618743871,Verilog,DigitalSystemsDesignCodes,4544,0,2023-03-25 13:55:18+00:00,"['coursework', 'digital-systems-design', 'sharif-university-of-technology']",None
308,https://github.com/MauleshGandhi/Intro-to-Processor-Architecture-IIITH.git,2023-03-24 21:54:08+00:00,Codes written for assignments and project for course Intro to Processor Architecture,0,MauleshGandhi/Intro-to-Processor-Architecture-IIITH,618618905,Verilog,Intro-to-Processor-Architecture-IIITH,3732,0,2023-03-24 21:55:44+00:00,[],https://api.github.com/licenses/mit
309,https://github.com/mathai-rg/tn9k_breathing_led.git,2023-03-12 05:02:46+00:00,breathing led using pwm controller module,0,mathai-rg/tn9k_breathing_led,612829026,Verilog,tn9k_breathing_led,1,0,2023-06-04 08:17:24+00:00,[],None
310,https://github.com/chenwei0129/AES_128_Circuit_Design.git,2023-03-11 07:19:09+00:00,,0,chenwei0129/AES_128_Circuit_Design,612518747,Verilog,AES_128_Circuit_Design,157,0,2023-03-11 08:09:31+00:00,[],None
311,https://github.com/juan-728/photon-beetle-chisel.git,2023-03-11 03:12:20+00:00,Project PHOTON BEETLE Hash using CHISEL,0,juan-728/photon-beetle-chisel,612469132,Verilog,photon-beetle-chisel,443,0,2023-05-03 08:14:26+00:00,[],https://api.github.com/licenses/unlicense
312,https://github.com/NathanAW24/demo-checkoff1-FPGA.git,2023-03-12 09:54:13+00:00,,0,NathanAW24/demo-checkoff1-FPGA,612893819,Verilog,demo-checkoff1-FPGA,57920,0,2023-03-12 10:03:16+00:00,[],None
313,https://github.com/homaung/basis.git,2023-03-13 06:20:52+00:00,,0,homaung/basis,613218769,Verilog,basis,20,0,2023-03-13 06:25:00+00:00,[],None
314,https://github.com/biwa1400/rtl.git,2023-03-21 13:28:56+00:00,,0,biwa1400/rtl,616984496,Verilog,rtl,9,0,2023-03-21 16:35:55+00:00,[],None
315,https://github.com/YongDaSu/DIC2023.git,2023-03-20 07:34:49+00:00,,0,YongDaSu/DIC2023,616338853,Verilog,DIC2023,8371,0,2023-04-07 07:26:21+00:00,[],None
316,https://github.com/MinaaSobhy/UART-Transmitter-Based-on-Verilog.git,2023-03-18 14:27:10+00:00,"Utilized a counter module to generate the necessary clock cycles for data transmission. Employed a multiplexer module to switch between transmitting start/stop bits and data bits. Modules: Counter, Multiplexer",0,MinaaSobhy/UART-Transmitter-Based-on-Verilog,615734756,Verilog,UART-Transmitter-Based-on-Verilog,0,0,2023-03-18 14:28:16+00:00,[],None
317,https://github.com/Karthikeya1409/Vending-machine.git,2023-03-18 19:28:56+00:00,,0,Karthikeya1409/Vending-machine,615823680,Verilog,Vending-machine,4,0,2023-03-18 19:32:15+00:00,[],None
318,https://github.com/PenguinX7/FP16_FPU.git,2023-03-21 14:59:23+00:00,,0,PenguinX7/FP16_FPU,617027204,Verilog,FP16_FPU,238,0,2023-03-21 15:09:06+00:00,[],None
319,https://github.com/fishop0304/MIPS_CPU.git,2023-03-21 03:46:55+00:00,,0,fishop0304/MIPS_CPU,616775845,Verilog,MIPS_CPU,84,0,2023-03-21 03:47:37+00:00,[],None
320,https://github.com/thenishudixit/Automatic_washing_machine_using_HDL_VERILOG.git,2023-03-17 06:49:21+00:00,,0,thenishudixit/Automatic_washing_machine_using_HDL_VERILOG,615196538,Verilog,Automatic_washing_machine_using_HDL_VERILOG,1504,0,2023-03-17 07:04:43+00:00,[],None
321,https://github.com/alok-karn/VerilogLabPrograms.git,2023-03-17 05:50:15+00:00,,0,alok-karn/VerilogLabPrograms,615178635,Verilog,VerilogLabPrograms,13,0,2023-06-07 16:26:27+00:00,[],None
322,https://github.com/minhtritran2308/LSI.git,2023-03-19 08:57:01+00:00,,0,minhtritran2308/LSI,615978707,Verilog,LSI,2233,0,2023-03-19 08:58:17+00:00,[],None
323,https://github.com/FrontmanDylan/7segReg.git,2023-03-20 00:10:32+00:00,seven segment display register architecture,0,FrontmanDylan/7segReg,616223415,Verilog,7segReg,5,0,2023-03-20 00:14:01+00:00,[],None
324,https://github.com/robin7g/rg-iceFUN.git,2023-03-18 02:10:16+00:00,FPGA code examples for the iceFUN board ,0,robin7g/rg-iceFUN,615563019,Verilog,rg-iceFUN,23834,0,2023-03-18 02:11:54+00:00,[],https://api.github.com/licenses/mit
325,https://github.com/redEddie/knu_verilog.git,2023-03-11 04:08:40+00:00,,0,redEddie/knu_verilog,612479632,Verilog,knu_verilog,34140,0,2023-11-28 10:42:19+00:00,[],None
326,https://github.com/NoNounknow/Code-Test.git,2023-03-11 13:18:04+00:00,包含大量练手代码练习，存在大量错误和不规矩，不适合任何水平选手的参考。,0,NoNounknow/Code-Test,612611555,Verilog,Code-Test,30,0,2024-03-06 13:23:17+00:00,[],None
327,https://github.com/C0L/Homa-NIC.git,2023-03-21 19:32:45+00:00,,0,C0L/Homa-NIC,617143288,Verilog,Homa-NIC,24514,0,2024-01-21 21:16:41+00:00,[],None
328,https://github.com/GongGuangyu/FPGAjingsai.git,2023-03-23 12:09:14+00:00,,0,GongGuangyu/FPGAjingsai,617929944,Verilog,FPGAjingsai,14,0,2023-03-23 12:09:49+00:00,[],None
329,https://github.com/TheSonders/XERA4_DRAM.git,2023-03-25 00:46:43+00:00,Yet another 8bits computer but using old DRAM modules.,0,TheSonders/XERA4_DRAM,618654578,Verilog,XERA4_DRAM,2,0,2023-03-25 00:48:45+00:00,[],None
330,https://github.com/SriKrishna74/Digital-System-Design-Using-verilog-Hdl.git,2023-03-25 15:07:02+00:00,"Hi, In this you can find the basic logic gates , sequential, combinational circuits using verilog hdl.",1,SriKrishna74/Digital-System-Design-Using-verilog-Hdl,618860046,Verilog,Digital-System-Design-Using-verilog-Hdl,50,0,2023-03-28 10:00:58+00:00,[],None
331,https://github.com/dc-base/soc_projects.git,2023-03-19 23:05:33+00:00,,0,dc-base/soc_projects,616211130,Verilog,soc_projects,41,0,2023-03-19 23:16:26+00:00,[],None
332,https://github.com/erendrcnn/32-bit-RISC-V-Cpu-Design-Verilog.git,2023-03-19 15:16:12+00:00,"This RISCV CPU Architecture is designed on the efficient and effective operation of all instructions. However, for simulation purposes, a processor that can work with 15 instructions has been designed. The designed processor produces the correct output for all the specified instructions in a single cycle.",0,erendrcnn/32-bit-RISC-V-Cpu-Design-Verilog,616085833,Verilog,32-bit-RISC-V-Cpu-Design-Verilog,7,0,2023-03-25 22:29:06+00:00,[],https://api.github.com/licenses/mit
333,https://github.com/SURA-SAI-SWAROOP/COUNTERS.git,2023-03-20 07:25:02+00:00,,0,SURA-SAI-SWAROOP/COUNTERS,616335476,Verilog,COUNTERS,408,0,2023-03-20 10:25:10+00:00,[],None
334,https://github.com/Phoebe-www/LC4_PROCESSOR_DESIGN_AND_IMPLEMENTATION.git,2023-03-24 01:44:01+00:00,,0,Phoebe-www/LC4_PROCESSOR_DESIGN_AND_IMPLEMENTATION,618215816,Verilog,LC4_PROCESSOR_DESIGN_AND_IMPLEMENTATION,25,0,2023-03-24 01:46:18+00:00,[],None
335,https://github.com/matheusalsi/miniMIPS.git,2023-03-14 16:40:47+00:00,INF01194 - Concepção de Circuitos Integrados II discipline miniMIPS project at INF/UFRGS. The project was developed using Cadence Design Systems tools for VLSI design.,0,matheusalsi/miniMIPS,613978456,Verilog,miniMIPS,106501,0,2023-05-25 16:57:29+00:00,[],None
336,https://github.com/ked-source/MIPS-Processor-Stalling.git,2023-03-14 14:20:03+00:00,The MIPS Processor with Stalling repository is a collection of code and documentation that demonstrates the implementation of a MIPS processor with stalling techniques to solve data hazards.,0,ked-source/MIPS-Processor-Stalling,613914240,Verilog,MIPS-Processor-Stalling,27,0,2023-03-14 14:25:43+00:00,[],None
337,https://github.com/BreazuLaura/Image-Encryption.git,2023-03-14 17:37:11+00:00,,0,BreazuLaura/Image-Encryption,614002442,Verilog,Image-Encryption,7,0,2023-09-13 12:42:59+00:00,[],None
338,https://github.com/NDTU676/fengniao.git,2023-03-14 01:59:17+00:00,,0,NDTU676/fengniao,613652847,Verilog,fengniao,122812,0,2023-03-14 02:04:33+00:00,[],https://api.github.com/licenses/apache-2.0
339,https://github.com/qiu-p/learn.git,2023-03-10 06:40:59+00:00,a repository for myself to learn,0,qiu-p/learn,612079909,Verilog,learn,5053,0,2023-04-18 09:59:09+00:00,[],
340,https://github.com/tien2032002/lab1_LSI.git,2023-03-10 09:56:22+00:00,,0,tien2032002/lab1_LSI,612148456,Verilog,lab1_LSI,1,0,2023-03-10 09:57:06+00:00,[],None
341,https://github.com/Yahia-EL-Alfy/verilog-HDL-project.git,2023-03-10 13:30:41+00:00,,0,Yahia-EL-Alfy/verilog-HDL-project,612228863,Verilog,verilog-HDL-project,6,0,2023-03-10 13:30:49+00:00,[],None
342,https://github.com/Hiep-20192834/kien-truc-may-tinh-risc-v.git,2023-03-10 12:26:06+00:00,,0,Hiep-20192834/kien-truc-may-tinh-risc-v,612203667,Verilog,kien-truc-may-tinh-risc-v,10,0,2023-03-10 12:33:41+00:00,[],None
343,https://github.com/Karan345/caravel_new.git,2023-03-10 13:14:45+00:00,,0,Karan345/caravel_new,612222222,Verilog,caravel_new,53036,0,2023-03-14 12:43:11+00:00,[],https://api.github.com/licenses/apache-2.0
344,https://github.com/Omkar-vichare/4-bit-Carry-Lookahead-Adder.git,2023-03-12 08:37:10+00:00,,0,Omkar-vichare/4-bit-Carry-Lookahead-Adder,612874877,Verilog,4-bit-Carry-Lookahead-Adder,75,0,2023-03-12 08:38:11+00:00,[],None
345,https://github.com/slopezruben/EC_PRAC1_2023.git,2023-03-15 10:19:18+00:00,,0,slopezruben/EC_PRAC1_2023,614305786,Verilog,EC_PRAC1_2023,954,0,2023-03-15 10:21:26+00:00,[],None
346,https://github.com/Eqehan/Verilog_Exercises.git,2023-03-15 06:16:27+00:00,Verilog/VHDL exercises for Digital Design,0,Eqehan/Verilog_Exercises,614218338,Verilog,Verilog_Exercises,3,0,2023-03-18 09:56:46+00:00,[],None
347,https://github.com/gacu068/Electric-Piano.git,2023-03-21 16:45:18+00:00,,0,gacu068/Electric-Piano,617074737,Verilog,Electric-Piano,14,0,2023-03-21 16:45:37+00:00,[],None
348,https://github.com/Shubham-codebench/ahb-to-apb-bridge.git,2023-03-09 06:34:15+00:00,,0,Shubham-codebench/ahb-to-apb-bridge,611597704,Verilog,ahb-to-apb-bridge,71,0,2023-03-09 06:35:17+00:00,[],None
349,https://github.com/MetinErenOktay/Designing-a-Controller-Module-For-A-Virtual-Cyborg-Using-Verilog-And-Behavioral-Design..git,2023-03-11 21:25:58+00:00,,0,MetinErenOktay/Designing-a-Controller-Module-For-A-Virtual-Cyborg-Using-Verilog-And-Behavioral-Design.,612749050,Verilog,Designing-a-Controller-Module-For-A-Virtual-Cyborg-Using-Verilog-And-Behavioral-Design.,412,0,2023-03-14 17:37:30+00:00,[],None
350,https://github.com/TJURoll/piano.git,2023-03-12 13:51:48+00:00,,0,TJURoll/piano,612959389,Verilog,piano,8,0,2023-03-12 13:52:22+00:00,[],None
351,https://github.com/matthewuhthoff/temp.git,2023-03-10 21:05:37+00:00,,0,matthewuhthoff/temp,612392225,Verilog,temp,13,0,2023-03-10 21:07:03+00:00,[],None
352,https://github.com/Yahia785/7-segment-display.git,2023-03-12 19:53:46+00:00,Displaying a character set through three screens continuously. The character set should be appearing to move to the left.,0,Yahia785/7-segment-display,613072167,Verilog,7-segment-display,37,0,2023-03-12 19:56:18+00:00,[],None
353,https://github.com/youssefnashaatt/GPIO_UART_APB-BUS.git,2023-03-16 13:25:34+00:00,,0,youssefnashaatt/GPIO_UART_APB-BUS,614862762,Verilog,GPIO_UART_APB-BUS,57,0,2023-03-19 11:05:13+00:00,[],None
354,https://github.com/kalkidan-hub/microprocessorDesign.git,2023-03-16 19:16:53+00:00,,0,kalkidan-hub/microprocessorDesign,615012933,Verilog,microprocessorDesign,33,0,2023-07-22 07:09:01+00:00,[],None
355,https://github.com/Krtng/EmbeddedAI_TP_Kevin_Rtng.git,2023-03-15 21:59:59+00:00,Voici le repository associé à mon travail sur les TP du module d'IA et systèmes embarqués.,0,Krtng/EmbeddedAI_TP_Kevin_Rtng,614578625,Verilog,EmbeddedAI_TP_Kevin_Rtng,188,0,2023-04-01 13:00:48+00:00,[],None
356,https://github.com/brhinman20/SkeeballFinal.git,2023-03-15 17:08:18+00:00,Skeeball Final,0,brhinman20/SkeeballFinal,614481049,Verilog,SkeeballFinal,28073,0,2023-03-29 20:36:06+00:00,[],https://api.github.com/licenses/mit
357,https://github.com/zestww/ARRAY1.git,2023-03-16 05:31:06+00:00,,0,zestww/ARRAY1,614689109,Verilog,ARRAY1,62,0,2023-03-16 06:02:15+00:00,[],None
358,https://github.com/Coder2357/Computer-Organize.git,2023-03-19 12:39:34+00:00,,0,Coder2357/Computer-Organize,616036517,Verilog,Computer-Organize,206,0,2023-03-20 07:04:10+00:00,[],None
359,https://github.com/clairehopfensperger/RISC_V_Architecture.git,2023-03-18 01:32:03+00:00,ECE 289 Intermediate+ Badge: Architecture Hardware Implementation,0,clairehopfensperger/RISC_V_Architecture,615556274,Verilog,RISC_V_Architecture,490,0,2024-03-01 19:44:19+00:00,[],None
360,https://github.com/diferential/sc-rv-tt03-block1.git,2023-03-25 16:10:09+00:00,TinyTapeout03 Scan chain based Risc V processor -- block 1 clocking,0,diferential/sc-rv-tt03-block1,618880356,Verilog,sc-rv-tt03-block1,45,0,2023-03-25 16:44:06+00:00,[],https://api.github.com/licenses/apache-2.0
361,https://github.com/eric5170/CS552.git,2023-03-24 23:52:49+00:00,CS552 projects repo,0,eric5170/CS552,618644251,Verilog,CS552,18035,0,2024-04-11 05:19:49+00:00,[],None
362,https://github.com/zipkaw/S1F0.git,2023-03-12 17:05:24+00:00,Course project spring term,0,zipkaw/S1F0,613022436,Verilog,S1F0,2812,0,2023-03-12 17:07:12+00:00,[],None
363,https://github.com/sherry182474/BTL-Kien-truc-may-tinh.git,2023-03-10 04:08:26+00:00,BTL Kiến trúc máy tính - Nguyễn Hoàng Hà - 20182474,0,sherry182474/BTL-Kien-truc-may-tinh,612039697,Verilog,BTL-Kien-truc-may-tinh,9,0,2023-03-10 15:19:58+00:00,[],None
364,https://github.com/ed-schwarz/Verilog_Tutorial.git,2023-03-13 08:46:48+00:00,,0,ed-schwarz/Verilog_Tutorial,613270827,Verilog,Verilog_Tutorial,1,0,2023-03-13 12:51:38+00:00,[],None
365,https://github.com/SageScroll18144/basic-code-embedded-system.git,2023-03-14 01:46:27+00:00,Some basic codes for embedded system.,0,SageScroll18144/basic-code-embedded-system,613649603,Verilog,basic-code-embedded-system,2,0,2023-03-14 01:55:01+00:00,[],None
366,https://github.com/1vicvis7/MIPS-Processor-8-Bit.git,2023-03-13 17:35:52+00:00,,0,1vicvis7/MIPS-Processor-8-Bit,613501190,Verilog,MIPS-Processor-8-Bit,6,0,2023-03-13 17:41:30+00:00,[],None
367,https://github.com/RuchiraTharaka/MicroProcessor.git,2023-03-14 02:41:34+00:00,This is done as the lab exercises in CO224 course. This includes a simple processor and the memory hierachy.,0,RuchiraTharaka/MicroProcessor,613663848,Verilog,MicroProcessor,10052,0,2023-03-14 02:46:22+00:00,[],None
368,https://github.com/MetinErenOktay/Creating-a-Sequential-Cct-Recognizes-At-Least-Two-1-s-And-Odd-Number-Of-0s-Using-D-AND-JK-Flip-Flops.git,2023-03-11 21:21:56+00:00,,0,MetinErenOktay/Creating-a-Sequential-Cct-Recognizes-At-Least-Two-1-s-And-Odd-Number-Of-0s-Using-D-AND-JK-Flip-Flops,612748231,Verilog,Creating-a-Sequential-Cct-Recognizes-At-Least-Two-1-s-And-Odd-Number-Of-0s-Using-D-AND-JK-Flip-Flops,718,0,2023-03-11 21:22:46+00:00,[],None
369,https://github.com/malikshanaah1999/WIFI_TX.git,2023-03-18 21:13:44+00:00,,0,malikshanaah1999/WIFI_TX,615848459,Verilog,WIFI_TX,18,0,2023-03-18 21:16:01+00:00,[],None
370,https://github.com/spockman66/axis_header.git,2023-03-18 13:12:06+00:00,,0,spockman66/axis_header,615712367,Verilog,axis_header,686,0,2023-03-18 13:13:18+00:00,[],None
371,https://github.com/Perinze/taxi.git,2023-03-16 04:35:32+00:00,,0,Perinze/taxi,614675215,Verilog,taxi,1616,0,2023-03-16 04:45:37+00:00,[],None
372,https://github.com/S3dMJ/CountNoX.git,2023-03-15 07:44:25+00:00,,0,S3dMJ/CountNoX,614246815,Verilog,CountNoX,344,0,2023-07-13 07:21:47+00:00,[],None
373,https://github.com/umutc24/Digital-Assignment.git,2023-03-16 10:26:18+00:00,,0,umutc24/Digital-Assignment,614790876,Verilog,Digital-Assignment,8,0,2023-04-01 10:11:28+00:00,[],None
374,https://github.com/pudding-art/verilog_code_slices.git,2023-03-16 02:51:13+00:00,verilog常用功能代码片段，熟悉技术体系，熟悉框架中的每一种技术，了解领域内的开源技术方案。,0,pudding-art/verilog_code_slices,614649611,Verilog,verilog_code_slices,4,0,2023-03-16 08:59:01+00:00,[],None
375,https://github.com/ip-playground/DDR2-Controller.git,2023-03-16 06:57:38+00:00,,0,ip-playground/DDR2-Controller,614714428,Verilog,DDR2-Controller,218,0,2023-03-26 07:52:00+00:00,[],None
376,https://github.com/Arsenii2013/fpga.git,2023-03-15 11:21:06+00:00,,0,Arsenii2013/fpga,614329687,Verilog,fpga,164309,0,2023-03-15 11:27:30+00:00,[],None
377,https://github.com/Pernapati-Akhil/DDR.git,2023-03-17 04:46:26+00:00,,0,Pernapati-Akhil/DDR,615162733,Verilog,DDR,49,0,2023-03-17 04:47:18+00:00,[],None
378,https://github.com/ManavGandhi-github/Pong_Game.git,2023-03-17 02:19:01+00:00,Verilog Implementation of Single Player Pong on a Nexys-3 Board,0,ManavGandhi-github/Pong_Game,615127587,Verilog,Pong_Game,11,0,2023-03-17 02:22:30+00:00,[],None
379,https://github.com/ahmadirtisam/Mips.git,2023-03-19 10:35:17+00:00,Designing and Simulation of MIPS 32-bit Single Cycle Architecture,0,ahmadirtisam/Mips,616003069,Verilog,Mips,264,0,2023-03-19 10:38:34+00:00,[],None
380,https://github.com/mwael2002/RISC-V.git,2023-03-09 15:40:51+00:00,Implementation of a 32-bit single-cycle microarchitecture RISC-V processor,0,mwael2002/RISC-V,611811548,Verilog,RISC-V,28,0,2023-03-09 20:22:16+00:00,[],None
381,https://github.com/Marcox385/ARQ_Tarea_RISC_V_Equipo_2.git,2023-03-20 20:14:29+00:00,Tarea RISC V para Arquitectura Computacional (P2023),0,Marcox385/ARQ_Tarea_RISC_V_Equipo_2,616654161,Verilog,ARQ_Tarea_RISC_V_Equipo_2,538,0,2023-03-21 04:35:29+00:00,[],None
382,https://github.com/TristanJeferson/MI---Projeto-de-Circuitos-Digitais.git,2023-03-21 11:25:28+00:00,,0,TristanJeferson/MI---Projeto-de-Circuitos-Digitais,616930400,Verilog,MI---Projeto-de-Circuitos-Digitais,155,0,2023-03-29 16:24:35+00:00,[],https://api.github.com/licenses/mit
383,https://github.com/omikami747/sfifo.git,2023-03-23 04:31:39+00:00,,0,omikami747/sfifo,617774179,Verilog,sfifo,214,0,2023-03-23 04:35:44+00:00,[],None
384,https://github.com/23-cpu/Parking-Lot-Lab-Verilog.git,2023-03-24 21:03:52+00:00,,0,23-cpu/Parking-Lot-Lab-Verilog,618606333,Verilog,Parking-Lot-Lab-Verilog,3,0,2023-04-10 05:05:16+00:00,[],None
385,https://github.com/EmbeddedCamerata/RV32I-RISC-CPU-with-Pipeline.git,2023-03-26 07:07:02+00:00,"Single-cycle RISC CPU with 5-stage pipeline and multiplication & division support based on RV32I, verified & deployed rotating leds on Genesys2.",0,EmbeddedCamerata/RV32I-RISC-CPU-with-Pipeline,619070561,Verilog,RV32I-RISC-CPU-with-Pipeline,470,0,2023-04-05 12:50:15+00:00,"['riscv', 'genesys2', 'iverilog', 'rv32i', 'cpu']",https://api.github.com/licenses/mit
386,https://github.com/bgatusch/caravel_test.git,2023-03-21 15:04:57+00:00,,0,bgatusch/caravel_test,617029894,Verilog,caravel_test,41724,0,2023-03-21 15:05:38+00:00,[],https://api.github.com/licenses/apache-2.0
387,https://github.com/Sanmml/trifunc_mp.git,2023-03-22 18:46:02+00:00,,0,Sanmml/trifunc_mp,617613106,Verilog,trifunc_mp,41724,0,2023-03-22 18:46:34+00:00,[],https://api.github.com/licenses/apache-2.0
388,https://github.com/GaneshSai720/SDLX_processor.git,2023-03-13 06:36:34+00:00,,0,GaneshSai720/SDLX_processor,613223748,Verilog,SDLX_processor,18,0,2023-11-22 14:24:55+00:00,[],None
389,https://github.com/algofoogle/solo_squash.git,2023-03-09 10:57:16+00:00,"Simple Pong-like game for 1 player, in Verilog, intended for zerotoasiccourse.com",0,algofoogle/solo_squash,611693003,Verilog,solo_squash,1304,0,2023-03-16 11:10:11+00:00,[],https://api.github.com/licenses/apache-2.0
390,https://github.com/wysjixiang/FPGA_CNN_functional_verify.git,2023-03-25 19:22:12+00:00,CNN implemented and simulation on FPGA,0,wysjixiang/FPGA_CNN_functional_verify,618935914,Verilog,FPGA_CNN_functional_verify,22158,0,2023-12-04 12:58:04+00:00,[],None
391,https://github.com/Kristen012/logic_design_lab.git,2023-03-17 11:35:11+00:00,,0,Kristen012/logic_design_lab,615297274,,logic_design_lab,23733,0,2023-12-12 05:16:28+00:00,[],None
392,https://github.com/diferential/sc-rv-tt03-block2.git,2023-03-25 16:50:12+00:00, Public TinyTapeout03 Scan chain based Risc V processor -- block 2 instructions,0,diferential/sc-rv-tt03-block2,618892550,Verilog,sc-rv-tt03-block2,36,0,2023-03-25 19:00:21+00:00,[],https://api.github.com/licenses/apache-2.0
393,https://github.com/Toni-Graphics/HardWareLib.git,2023-03-19 16:22:04+00:00,A libary to create asics in short time,0,Toni-Graphics/HardWareLib,616106924,Verilog,HardWareLib,129,0,2023-03-21 17:40:13+00:00,"['asic', 'hardware', 'verilog']",https://api.github.com/licenses/gpl-2.0
394,https://github.com/Danishnoor5/Verilog-VHDL-Basics.git,2023-03-19 14:03:41+00:00,On Quartus Prime Intel,0,Danishnoor5/Verilog-VHDL-Basics,616062030,Verilog,Verilog-VHDL-Basics,60,0,2023-03-19 16:24:47+00:00,[],None
395,https://github.com/Shaka-wang/Shaka.git,2023-03-20 07:14:38+00:00,,0,Shaka-wang/Shaka,616331888,Verilog,Shaka,3665,0,2023-03-20 08:33:49+00:00,[],None
396,https://github.com/igronin47/Dual-PORT-RAM.git,2023-03-20 20:30:57+00:00,Dual PORT RAM implementation on FPGA,0,igronin47/Dual-PORT-RAM,616659654,Verilog,Dual-PORT-RAM,4771,0,2023-03-20 20:47:20+00:00,[],None
397,https://github.com/JYK89/axi4_rw_test_v1_0_M00_AXI.git,2023-03-24 04:56:17+00:00,VHDL,0,JYK89/axi4_rw_test_v1_0_M00_AXI,618262756,Verilog,axi4_rw_test_v1_0_M00_AXI,24,0,2023-03-24 04:57:04+00:00,[],None
398,https://github.com/arjunsahajan/Eight-bit-two-function-calculator.git,2023-03-25 22:20:40+00:00,Academic project using Terasic’s DE-10 lite FPG; an 8-bit calculator using Verilog that can perform addition and subtraction.,0,arjunsahajan/Eight-bit-two-function-calculator,618976324,Verilog,Eight-bit-two-function-calculator,10,0,2023-03-25 22:45:41+00:00,[],None
399,https://github.com/Sin-kider/verilog_learn.git,2023-03-22 12:12:21+00:00,,0,Sin-kider/verilog_learn,617445730,Verilog,verilog_learn,8,0,2023-03-22 12:13:52+00:00,[],None
400,https://github.com/kevin21018212/SorterCalulator.git,2023-03-21 17:02:03+00:00,this quartus program composed of circut diagrams and vba code choses the highest 2 input values and multiplies them together outputted as 3 4 bit numbers,0,kevin21018212/SorterCalulator,617081971,Verilog,SorterCalulator,3778,0,2023-03-21 17:14:53+00:00,[],None
401,https://github.com/PhilipHep/Open-Source-Hardware.git,2023-03-26 21:21:59+00:00,,0,PhilipHep/Open-Source-Hardware,619309821,Verilog,Open-Source-Hardware,41725,0,2023-03-29 07:13:40+00:00,[],https://api.github.com/licenses/apache-2.0
402,https://github.com/fishop0304/UART.git,2023-03-21 03:44:55+00:00,UART hardwave,0,fishop0304/UART,616775358,Verilog,UART,279,0,2023-03-21 03:45:50+00:00,[],None
403,https://github.com/2ndBlossom/ece552.git,2023-03-23 02:34:19+00:00,,0,2ndBlossom/ece552,617744549,Verilog,ece552,5715,0,2023-03-23 02:54:26+00:00,[],None
404,https://github.com/praveenyadav02011995/RTL-basic.git,2023-03-26 19:45:23+00:00,basic concept of verilog,0,praveenyadav02011995/RTL-basic,619284801,Verilog,RTL-basic,9890,0,2023-03-26 19:47:32+00:00,[],None
405,https://github.com/Gunasaikiran/100-Days-OF-RTL.git,2023-03-10 16:23:10+00:00,,0,Gunasaikiran/100-Days-OF-RTL,612299787,Verilog,100-Days-OF-RTL,71,0,2023-04-02 13:21:34+00:00,[],None
406,https://github.com/locnd182644/Single_Cycle_RISC_V.git,2023-03-10 17:52:44+00:00,Single-cycle microprocessor design using verilog,0,locnd182644/Single_Cycle_RISC_V,612332528,Verilog,Single_Cycle_RISC_V,15,0,2023-03-10 18:01:16+00:00,[],None
407,https://github.com/Shazarulislam/Random_Practise.git,2023-03-13 06:16:34+00:00,System Verilog Code,0,Shazarulislam/Random_Practise,613217378,Verilog,Random_Practise,0,0,2023-03-13 06:38:00+00:00,[],None
408,https://github.com/lyfne123/e200_learning.git,2023-03-13 03:09:58+00:00,,0,lyfne123/e200_learning,613170058,Verilog,e200_learning,68,0,2023-03-13 10:57:15+00:00,[],None
409,https://github.com/ayaahmed20018414/Single-Cycle-RV-32I-Processor.git,2023-03-15 09:38:56+00:00,"In this project, I implemented a 32-bit single-cycle microarchitecture RISC-V processor based on Harvard Architecture. The single cycle microarchitecture executes an entire instruction in one cycle. In other words, instruction fetch, instruction decode, execute, write back, and program counter update occurs within a single clock cycle.",1,ayaahmed20018414/Single-Cycle-RV-32I-Processor,614289935,Verilog,Single-Cycle-RV-32I-Processor,24,0,2023-03-15 15:17:59+00:00,[],None
410,https://github.com/abeyene/eecs4612-proj2.git,2023-03-09 21:36:51+00:00,,0,abeyene/eecs4612-proj2,611943616,Verilog,eecs4612-proj2,157,0,2023-03-09 22:24:37+00:00,[],https://api.github.com/licenses/mit
411,https://github.com/Mahmoud1172/SPI-Verification-Using-Golden-Model-method-SystemVerilog-.git,2023-03-11 12:14:42+00:00,"For this Verification project I verified an SPI as an encrypted black box(obviously not my SPI, but it is the same as my SPI project. Moreover, the dual port memory is in another file), I used the golden model technique, ""SPISLAVE.v"" is the golden model.",0,Mahmoud1172/SPI-Verification-Using-Golden-Model-method-SystemVerilog-,612593482,Verilog,SPI-Verification-Using-Golden-Model-method-SystemVerilog-,972,0,2023-03-11 12:22:20+00:00,[],None
412,https://github.com/JF-Tan/Xray3D.git,2023-03-09 05:29:38+00:00,,0,JF-Tan/Xray3D,611579050,Verilog,Xray3D,23772,0,2023-07-01 01:53:45+00:00,[],None
413,https://github.com/NalavathVamsinaik/VERILOG-CODE-IN-NPTEL-COURSE.git,2023-03-11 13:02:57+00:00,,0,NalavathVamsinaik/VERILOG-CODE-IN-NPTEL-COURSE,612607049,Verilog,VERILOG-CODE-IN-NPTEL-COURSE,4,0,2023-03-11 14:55:10+00:00,[],None
414,https://github.com/DDDSSSTTT/260b_proj_step1.git,2023-03-12 22:18:01+00:00,Step1 of ece260b,0,DDDSSSTTT/260b_proj_step1,613107135,Verilog,260b_proj_step1,188587,0,2023-03-12 22:22:52+00:00,[],None
415,https://github.com/alwjgd/alwjgd.git,2023-03-16 04:43:15+00:00,,0,alwjgd/alwjgd,614677113,Verilog,alwjgd,6,0,2023-03-16 04:52:21+00:00,[],None
416,https://github.com/canaancc/PolyEval.git,2023-03-19 04:03:32+00:00,PolyEval code,0,canaancc/PolyEval,615919949,Verilog,PolyEval,4,0,2023-03-19 04:48:53+00:00,[],None
417,https://github.com/deeplathiya/Hardware-Security.git,2023-03-19 06:55:39+00:00,Assignments,0,deeplathiya/Hardware-Security,615951833,Verilog,Hardware-Security,5,0,2023-03-19 06:58:33+00:00,[],None
418,https://github.com/igronin47/RTL-CODES.git,2023-03-19 07:17:49+00:00,Verilog codes,0,igronin47/RTL-CODES,615956451,Verilog,RTL-CODES,2637,0,2023-03-19 07:31:25+00:00,[],None
419,https://github.com/aswaniar/efab_test1.git,2023-03-16 13:25:24+00:00,,0,aswaniar/efab_test1,614862672,Verilog,efab_test1,41724,0,2023-03-16 13:26:04+00:00,[],https://api.github.com/licenses/apache-2.0
420,https://github.com/yashbg/cs220-computer-organization.git,2023-03-16 17:42:18+00:00,,0,yashbg/cs220-computer-organization,614977602,Verilog,cs220-computer-organization,999,0,2023-04-25 16:31:30+00:00,[],None
421,https://github.com/ajinwon1212/MIPS_MEMORY.git,2023-03-09 06:49:51+00:00,,0,ajinwon1212/MIPS_MEMORY,611602491,Verilog,MIPS_MEMORY,413,0,2023-04-30 07:23:35+00:00,[],None
422,https://github.com/carpenterjaeden/DynamicBranchPrediction.git,2023-03-23 02:45:55+00:00,Implementation of 2-bit dynamic branch prediction in a RISC-V processor,1,carpenterjaeden/DynamicBranchPrediction,617747501,Verilog,DynamicBranchPrediction,64791,0,2023-09-19 22:20:43+00:00,[],None
423,https://github.com/SCP-11/CS552-Project.git,2023-03-24 05:54:13+00:00,,0,SCP-11/CS552-Project,618277634,Verilog,CS552-Project,30441,0,2024-03-27 01:36:20+00:00,[],None
424,https://github.com/DhamuDynamic/File_Operations.git,2023-03-09 06:26:06+00:00,This repository basically deals with file handling using Verilog,0,DhamuDynamic/File_Operations,611595277,Verilog,File_Operations,31,0,2023-03-09 06:27:31+00:00,[],None
425,https://github.com/Omkar-vichare/4-bit-Carry-Select-Adder.git,2023-03-09 18:32:06+00:00,,0,Omkar-vichare/4-bit-Carry-Select-Adder,611883253,Verilog,4-bit-Carry-Select-Adder,79,0,2023-03-09 18:32:48+00:00,[],None
426,https://github.com/learn-cocotb/assignment-1-xor-verification-rakshagithub.git,2023-03-11 05:44:11+00:00,assignment-1-xor-verification-rakshagithub created by GitHub Classroom,0,learn-cocotb/assignment-1-xor-verification-rakshagithub,612497725,Verilog,assignment-1-xor-verification-rakshagithub,17,0,2023-03-19 07:35:29+00:00,[],https://api.github.com/licenses/bsd-2-clause
427,https://github.com/emanaymanmm/RISCV-32-Processor.git,2023-03-11 17:41:14+00:00,,0,emanaymanmm/RISCV-32-Processor,612692288,Verilog,RISCV-32-Processor,23,0,2023-03-11 18:43:31+00:00,[],None
428,https://github.com/iansseijelly/InterlakenLatencyMeasure.git,2023-03-10 23:35:04+00:00,,0,iansseijelly/InterlakenLatencyMeasure,612427670,Verilog,InterlakenLatencyMeasure,82,0,2023-03-10 23:35:41+00:00,[],None
429,https://github.com/ChaminduS/N-bit-Mult-Div-in-Chisel.git,2023-03-11 00:33:55+00:00,,0,ChaminduS/N-bit-Mult-Div-in-Chisel,612439410,Verilog,N-bit-Mult-Div-in-Chisel,38967,0,2023-04-05 17:57:55+00:00,[],None
430,https://github.com/Sam1215Lee/IC-CONTEST.git,2023-03-14 06:45:57+00:00,,0,Sam1215Lee/IC-CONTEST,613731238,Verilog,IC-CONTEST,8885,0,2023-10-01 15:43:02+00:00,[],None
431,https://github.com/HUANG-YI-HSUN/Pipelined-CPU.git,2023-03-23 10:01:25+00:00,,0,HUANG-YI-HSUN/Pipelined-CPU,617880895,Verilog,Pipelined-CPU,19,0,2023-03-23 10:15:24+00:00,[],None
432,https://github.com/SageScroll18144/stopwatch-calculator.git,2023-03-24 02:07:19+00:00,Implementação de uma calculadora e um cronometro em Verilog por meio da Interface de um Keypad.,0,SageScroll18144/stopwatch-calculator,618222028,Verilog,stopwatch-calculator,25817,0,2023-03-24 02:13:39+00:00,[],None
433,https://github.com/ctbram/nexys2-ripple-adder.git,2023-03-23 21:26:41+00:00,working version of my 4-bit ripple adder on the nexys2 fpga board,0,ctbram/nexys2-ripple-adder,618151927,Verilog,nexys2-ripple-adder,5,0,2023-03-23 21:37:01+00:00,[],None
434,https://github.com/w4lly0/SystemVerilog.git,2023-03-18 14:26:55+00:00,,0,w4lly0/SystemVerilog,615734678,Verilog,SystemVerilog,8,0,2023-03-18 14:44:05+00:00,[],None
435,https://github.com/nokitoi/FPGA_votMachine.git,2023-03-18 08:44:00+00:00,This is for a voting machine supporting 4 candidates. The design is completely hardware based coded in Verilog. The design ported into any FPGA evaluation board as long as they have buttons (or GPIOs to interface buttons) and LEDs.,0,nokitoi/FPGA_votMachine,615642187,Verilog,FPGA_votMachine,12,0,2023-03-18 08:55:01+00:00,[],None
436,https://github.com/shourovrm/caravel.git,2023-03-18 15:24:33+00:00,,0,shourovrm/caravel,615752686,Verilog,caravel,41724,0,2023-03-18 15:25:07+00:00,[],https://api.github.com/licenses/apache-2.0
437,https://github.com/Devansh0210/UART_Regs.git,2023-03-26 10:44:10+00:00,Basic Verilog IP for UART based Control Registers,0,Devansh0210/UART_Regs,619123320,Verilog,UART_Regs,88,0,2023-03-26 10:48:29+00:00,[],None
438,https://github.com/yenescaliskan/FPGA_Based_POS_Device.git,2023-03-25 19:38:26+00:00,,0,yenescaliskan/FPGA_Based_POS_Device,618939734,Verilog,FPGA_Based_POS_Device,13,0,2023-03-25 19:38:40+00:00,[],None
439,https://github.com/HiggsBose/Single-Cycle-RISC-V-CPU.git,2023-03-23 08:47:05+00:00,A single cycle RISC-V CPU based on RV32I Instruction Set,0,HiggsBose/Single-Cycle-RISC-V-CPU,617851969,Verilog,Single-Cycle-RISC-V-CPU,135,0,2023-04-04 00:32:02+00:00,[],https://api.github.com/licenses/mit
440,https://github.com/Mallikacnms/y86_64_pip_seq.git,2023-03-24 17:30:37+00:00,,0,Mallikacnms/y86_64_pip_seq,618539024,Verilog,y86_64_pip_seq,6007,0,2023-03-24 17:37:41+00:00,[],None
441,https://github.com/X-matly/Digital-Logic-and-Computer-Composition-Experiment.git,2023-03-09 02:55:37+00:00,南京大学计组实验,0,X-matly/Digital-Logic-and-Computer-Composition-Experiment,611540096,Verilog,Digital-Logic-and-Computer-Composition-Experiment,20,0,2023-03-09 02:58:30+00:00,[],None
442,https://github.com/NourMamdouh/simple_mcu.git,2023-03-16 19:59:57+00:00,mcu that consists of a simple ALU and a memory,0,NourMamdouh/simple_mcu,615027395,Verilog,simple_mcu,2,0,2023-03-16 20:04:31+00:00,[],None
443,https://github.com/srinivasf1/Project3.git,2023-03-19 01:49:06+00:00,,0,srinivasf1/Project3,615897244,Verilog,Project3,41724,0,2023-03-19 01:49:39+00:00,[],https://api.github.com/licenses/apache-2.0
444,https://github.com/panshijie303/FPGA-Tetris.git,2023-03-18 22:08:06+00:00,Designed on Xilinx Nexys A7-100T (XC7A100T-1CSG324C).,0,panshijie303/FPGA-Tetris,615859970,Verilog,FPGA-Tetris,201,0,2023-04-03 10:49:22+00:00,[],None
445,https://github.com/newaetech/cw340-luna-board.git,2023-03-21 15:07:50+00:00,,1,newaetech/cw340-luna-board,617031244,Verilog,cw340-luna-board,41008,0,2023-07-21 13:49:57+00:00,[],None
446,https://github.com/J0shuaLeong/EE2026.git,2023-03-22 01:22:26+00:00,Project,0,J0shuaLeong/EE2026,617243653,Verilog,EE2026,109668,0,2023-04-26 15:32:54+00:00,[],None
447,https://github.com/valmyr/LASD-2022.2.git,2023-03-21 20:42:47+00:00,Repositório dedicado ao laboratório de Arquitetura de Sistemas Digitais,0,valmyr/LASD-2022.2,617169148,Verilog,LASD-2022.2,99042,0,2023-06-01 16:45:44+00:00,[],None
448,https://github.com/Tung-lab/1.git,2023-03-20 02:02:29+00:00,,0,Tung-lab/1,616247565,Verilog,1,14,0,2023-03-20 02:10:32+00:00,[],None
449,https://github.com/brsf11/inflate-core.git,2023-03-19 15:24:21+00:00,,0,brsf11/inflate-core,616088548,Verilog,inflate-core,44,0,2023-08-31 22:16:11+00:00,[],None
450,https://github.com/chris-william0829/bit-mini-5-level-pipline-mips-cpu.git,2023-03-21 06:59:21+00:00,,0,chris-william0829/bit-mini-5-level-pipline-mips-cpu,616828605,Verilog,bit-mini-5-level-pipline-mips-cpu,2653,0,2023-12-05 09:00:15+00:00,[],https://api.github.com/licenses/gpl-3.0
451,https://github.com/linjim2235/IC_Contest.git,2023-03-25 08:16:20+00:00,,0,linjim2235/IC_Contest,618745696,Verilog,IC_Contest,629,0,2023-03-25 08:18:22+00:00,[],None
452,https://github.com/A7med3id10/UART_Digital_Communication_System.git,2023-03-11 09:49:54+00:00,UART Verilog Project,0,A7med3id10/UART_Digital_Communication_System,612554898,Verilog,UART_Digital_Communication_System,153,0,2023-05-05 05:20:28+00:00,"['communication-protocol', 'digital', 'rtl', 'verilog', 'vlsi']",None
453,https://github.com/vaishaliyadav06/A-digital-Alarm-Clock-using-Verilog-HDL-.git,2023-03-09 12:57:04+00:00,- The alarm clock outputs a real-time clock with a 24-hour format and also provides an alarm feature. Users also can set the clock time through switches. ▪ Tools Used: Xilinx Vivado,0,vaishaliyadav06/A-digital-Alarm-Clock-using-Verilog-HDL-,611739810,Verilog,A-digital-Alarm-Clock-using-Verilog-HDL-,111,0,2023-03-09 12:58:45+00:00,[],None
454,https://github.com/Varun23952/TimedMultiplexer.git,2023-03-09 04:31:08+00:00,,0,Varun23952/TimedMultiplexer,611564545,Verilog,TimedMultiplexer,42,0,2023-03-09 04:33:12+00:00,[],None
455,https://github.com/DmitryMustk/Decoder-CircuitDesignProgect-.git,2023-03-15 13:27:57+00:00,,0,DmitryMustk/Decoder-CircuitDesignProgect-,614381660,Verilog,Decoder-CircuitDesignProgect-,3,0,2023-03-15 13:33:26+00:00,[],https://api.github.com/licenses/mit
456,https://github.com/AMITS424/DSP-in-FPGA.git,2023-03-15 14:26:47+00:00,Signal processing algorithm like FFT can be easily implemented in FPGA as I did in Xilinx 14.7 ISE. The main advantage of FPGA lies in its flexibility but its cost is its main disadvantage which is recently coming down. In future we can expect FPGA will have major role not only in academia and industry as well as in all parts of life. ,0,AMITS424/DSP-in-FPGA,614409247,Verilog,DSP-in-FPGA,25,0,2023-03-15 14:27:59+00:00,[],None
457,https://github.com/Mesopeer365/VerilogRPNCalculator.git,2023-03-15 04:59:19+00:00,,0,Mesopeer365/VerilogRPNCalculator,614196814,Verilog,VerilogRPNCalculator,14905,0,2023-03-15 05:31:10+00:00,[],None
458,https://github.com/yesinali/ButtonDebouncing.git,2023-03-18 15:35:50+00:00,"Pushbuttons often generate spurious open/close transitions when pressed, due to mechanical and physical issues. This Verilog code aims to prevent that happens.",0,yesinali/ButtonDebouncing,615756213,Verilog,ButtonDebouncing,0,0,2023-03-18 15:43:24+00:00,[],None
459,https://github.com/KarimBassel/ATM-Finite-State-Machine.git,2023-03-13 10:58:17+00:00,this projects represent the hardware verilog description and test bench of the ATM that does multiple ATM operations like withdrawal and Deposit and other operations,1,KarimBassel/ATM-Finite-State-Machine,613324915,Verilog,ATM-Finite-State-Machine,1239,0,2023-03-13 11:00:25+00:00,[],None
460,https://github.com/Berkant-Simsek/Vivado_Verilog-Projects.git,2023-03-20 09:04:03+00:00,,0,Berkant-Simsek/Vivado_Verilog-Projects,616372190,Verilog,Vivado_Verilog-Projects,29,0,2023-03-20 09:08:56+00:00,[],None
461,https://github.com/coder-zhangming/MD5.git,2023-03-20 11:21:02+00:00,,0,coder-zhangming/MD5,616427637,Verilog,MD5,8,0,2023-03-20 11:34:44+00:00,[],None
462,https://github.com/lukemcneil/stack-processor.git,2023-03-20 20:06:34+00:00,,0,lukemcneil/stack-processor,616651366,Verilog,stack-processor,11888,0,2023-03-20 20:07:39+00:00,[],None
463,https://github.com/Quinton-Mincy/FPGA-Development.git,2023-03-09 14:48:43+00:00,FPGA projects inspired by the lectures and labs of the ECE 5760 course at Cornell,0,Quinton-Mincy/FPGA-Development,611788256,Verilog,FPGA-Development,35,0,2023-03-09 15:09:02+00:00,[],None
464,https://github.com/zzlt2000/ns.git,2023-03-12 01:12:54+00:00,,0,zzlt2000/ns,612789787,Verilog,ns,7,0,2023-03-12 01:16:54+00:00,[],None
465,https://github.com/MetinErenOktay/By-Using-Verilog-HDL-Implementing-a-Boolean-function-Using-a-2x4-decoder-and-a-4x1-MUX..git,2023-03-11 21:11:14+00:00,,0,MetinErenOktay/By-Using-Verilog-HDL-Implementing-a-Boolean-function-Using-a-2x4-decoder-and-a-4x1-MUX.,612745990,Verilog,By-Using-Verilog-HDL-Implementing-a-Boolean-function-Using-a-2x4-decoder-and-a-4x1-MUX.,199,0,2023-03-11 21:12:13+00:00,[],None
466,https://github.com/bertanbee/grupo3-aula2-pcs.git,2023-03-22 17:58:06+00:00,,0,bertanbee/grupo3-aula2-pcs,617594551,Verilog,grupo3-aula2-pcs,6,0,2023-03-22 17:58:36+00:00,[],None
467,https://github.com/NalavathVamsinaik/Verilog-Language.git,2023-03-25 09:05:11+00:00,,0,NalavathVamsinaik/Verilog-Language,618757961,Verilog,Verilog-Language,9,0,2023-03-25 09:07:42+00:00,[],None
468,https://github.com/Vineethjaisal/AMD-XILINX-VIVADO-2020.1.git,2023-03-25 07:02:46+00:00,,0,Vineethjaisal/AMD-XILINX-VIVADO-2020.1,618727652,Verilog,AMD-XILINX-VIVADO-2020.1,14,0,2023-03-26 12:59:48+00:00,[],None
469,https://github.com/codes0ar/fft2d_rtl.git,2023-03-26 11:55:46+00:00,2dFFT verilog - for 1024x128 2D FFT sysnthsisable RTL ,0,codes0ar/fft2d_rtl,619142249,Verilog,fft2d_rtl,34601,0,2023-03-26 12:06:12+00:00,[],None
470,https://github.com/AyaAshraf419/Asynchronous-FIFO-.git,2023-03-26 19:32:25+00:00,,0,AyaAshraf419/Asynchronous-FIFO-,619281200,Verilog,Asynchronous-FIFO-,3,0,2023-03-26 19:35:08+00:00,[],None
471,https://github.com/sslerose/RedPitaya-DSP.git,2023-03-14 20:16:30+00:00,Collection of references for my Red Pitaya research project funded by the University of Kentucky.,0,sslerose/RedPitaya-DSP,614062378,Verilog,RedPitaya-DSP,44699,0,2023-07-21 20:03:38+00:00,[],None
472,https://github.com/meetbhatt2113/verilog-code-for-placement.git,2023-03-14 19:51:31+00:00,,0,meetbhatt2113/verilog-code-for-placement,614053751,Verilog,verilog-code-for-placement,16,0,2023-08-22 05:53:18+00:00,[],None
473,https://github.com/YoungSTM32/LMS.git,2023-03-14 01:35:27+00:00,,0,YoungSTM32/LMS,613646678,Verilog,LMS,417,0,2023-03-14 01:40:14+00:00,[],None
474,https://github.com/fivexxxxx/fpga_warehouse.git,2023-03-16 11:11:03+00:00,FPGA ,0,fivexxxxx/fpga_warehouse,614807677,Verilog,fpga_warehouse,76,0,2023-03-16 11:16:51+00:00,[],None
475,https://github.com/xytyz/PWMVerilog.git,2023-03-16 17:13:50+00:00,Implemted Pulse Width Modulation on Verilog,0,xytyz/PWMVerilog,614966471,Verilog,PWMVerilog,5,0,2023-03-16 17:14:16+00:00,[],None
476,https://github.com/LizhuChen/Serial-Peripheral-Interface.git,2023-03-23 17:11:46+00:00,Verilog實現 Serial Peripheral Interface,0,LizhuChen/Serial-Peripheral-Interface,618062078,Verilog,Serial-Peripheral-Interface,703,0,2023-03-23 17:14:12+00:00,[],None
477,https://github.com/gsburmaster/Tricodor.git,2023-03-23 15:50:45+00:00,Hardware Security final project - programmatic adversarial detection in HDL code,0,gsburmaster/Tricodor,618028213,Verilog,Tricodor,1470,0,2023-04-11 19:14:56+00:00,[],None
478,https://github.com/NadaHassona/Bank-system-by-verilog--FPJA-.git,2023-03-24 13:19:10+00:00,,0,NadaHassona/Bank-system-by-verilog--FPJA-,618437576,Verilog,Bank-system-by-verilog--FPJA-,7,0,2023-03-24 13:20:23+00:00,[],None
479,https://github.com/MaiAnh871/Learn-Verilog.git,2023-03-17 16:39:38+00:00,,0,MaiAnh871/Learn-Verilog,615417574,Verilog,Learn-Verilog,45,0,2023-03-17 17:03:35+00:00,[],None
480,https://github.com/Frosa009/Lab05.git,2023-03-18 00:48:43+00:00,,0,Frosa009/Lab05,615548671,Verilog,Lab05,418,0,2023-07-28 23:51:23+00:00,[],None
481,https://github.com/fm4dd/gm-study-max.git,2023-03-19 09:42:20+00:00,EE education board for the GateMate FPGA evaluation board E1,0,fm4dd/gm-study-max,615989686,Verilog,gm-study-max,31354,0,2023-04-03 14:31:37+00:00,"['education', 'fpga', 'gatemate', 'pcb-design']",
482,https://github.com/felipneiva/cpu-infrahw.git,2023-03-19 17:28:53+00:00,Processador feito em verilog para a disciplina Infraestrutura de Hardware(if674cc) do terceiro período da UFPE,1,felipneiva/cpu-infrahw,616127021,Verilog,cpu-infrahw,162,0,2023-03-19 22:46:40+00:00,[],None
483,https://github.com/ctbram/xiling-verilog-nexys2-4bit-ripple-adder.git,2023-03-21 18:02:00+00:00,"trying to make 4bit ripple adder that displays a, b, sum, anc co on the four sseg displays.",0,ctbram/xiling-verilog-nexys2-4bit-ripple-adder,617107476,Verilog,xiling-verilog-nexys2-4bit-ripple-adder,6,0,2023-03-21 18:03:45+00:00,[],None
484,https://github.com/BaduguSwamy/Verilog-codes-.git,2023-03-11 07:57:57+00:00,,0,BaduguSwamy/Verilog-codes-,612527971,Verilog,Verilog-codes-,2974,0,2023-12-11 18:36:43+00:00,[],None
485,https://github.com/RudranshKi/SPI_basedTempSensor.git,2023-03-25 04:41:42+00:00,,0,RudranshKi/SPI_basedTempSensor,618697679,Verilog,SPI_basedTempSensor,71,0,2023-03-25 04:47:58+00:00,[],None
486,https://github.com/omarhusseinn/Low-Power-Configurable-Multi-Clock-Digital-System.git,2023-03-12 11:34:11+00:00,It is responsible of receiving commands through UART receiver to do different system functions as register file reading/writing or doing some processing using ALU block and send result as well as CRC bits of result using 4 bytes frame through UART transmitter communication protocol.,0,omarhusseinn/Low-Power-Configurable-Multi-Clock-Digital-System,612919306,Verilog,Low-Power-Configurable-Multi-Clock-Digital-System,18,0,2023-03-12 11:41:29+00:00,[],None
487,https://github.com/LadyNick/Lab6CS161LCaches.git,2023-03-23 05:39:56+00:00,,0,LadyNick/Lab6CS161LCaches,617790887,Verilog,Lab6CS161LCaches,2255,0,2023-08-09 06:32:52+00:00,[],None
488,https://github.com/SURA-SAI-SWAROOP/FIFO.git,2023-03-25 14:24:13+00:00,,0,SURA-SAI-SWAROOP/FIFO,618846125,Verilog,FIFO,102,0,2023-03-25 14:28:24+00:00,[],None
489,https://github.com/yashwant4756/Sequence_Detector.git,2023-03-26 15:41:07+00:00,,0,yashwant4756/Sequence_Detector,619211215,Verilog,Sequence_Detector,1,0,2023-06-14 13:45:01+00:00,[],None
490,https://github.com/kubaswiebocki/Fast_inverse_square_root.git,2023-03-25 20:24:49+00:00,,0,kubaswiebocki/Fast_inverse_square_root,618951011,Verilog,Fast_inverse_square_root,33445,0,2023-05-14 21:59:22+00:00,[],None
491,https://github.com/mbradshaw02/firstTry.git,2023-03-10 11:56:51+00:00,,0,mbradshaw02/firstTry,612192717,Verilog,firstTry,41724,0,2023-03-10 11:57:23+00:00,[],https://api.github.com/licenses/apache-2.0
492,https://github.com/Ashu3208/assignment.git,2023-03-17 03:11:37+00:00,,0,Ashu3208/assignment,615140436,,assignment,20979,0,2023-04-15 09:26:17+00:00,[],None
493,https://github.com/ChrisElash/12nm_testing_programs.git,2023-03-16 22:41:40+00:00,,0,ChrisElash/12nm_testing_programs,615074224,Verilog,12nm_testing_programs,103,0,2023-04-12 21:34:27+00:00,[],None
494,https://github.com/kiba6563/Spartan-3E_LCD.git,2023-03-20 11:30:55+00:00,LCD Controller implementation in Verilog,0,kiba6563/Spartan-3E_LCD,616431596,Verilog,Spartan-3E_LCD,12,0,2023-04-01 06:41:46+00:00,[],None
495,https://github.com/JoshL11/Logic-design.git,2023-03-20 13:12:14+00:00,,0,JoshL11/Logic-design,616474718,Verilog,Logic-design,6838,0,2023-03-20 13:15:10+00:00,[],None
496,https://github.com/alexmangushev/serial_full_duplex_module.git,2023-03-20 20:40:21+00:00,Full-duplex serial exchange module on Verilog,0,alexmangushev/serial_full_duplex_module,616662672,Verilog,serial_full_duplex_module,16,0,2023-03-20 22:16:24+00:00,[],None
497,https://github.com/marinvanessa/Computer-Architecture.git,2023-03-21 13:31:39+00:00,"This repository contains all the projects for my Computer Architecture class. Projects were developed in my third year, Faculty of Automatic Control and Computer Science, Politehnica University of Bucharest.",0,marinvanessa/Computer-Architecture,616985828,Verilog,Computer-Architecture,378,0,2023-03-21 22:15:58+00:00,[],None
498,https://github.com/sapramupendra/-ENERGY-EFFICIENCY-LOW-LATENCY-SIGNED-MULTIPLIER-FOR-FPGA-BASED-HARDWARE-ACCELERATOR.git,2023-03-21 16:48:19+00:00,,0,sapramupendra/-ENERGY-EFFICIENCY-LOW-LATENCY-SIGNED-MULTIPLIER-FOR-FPGA-BASED-HARDWARE-ACCELERATOR,617076104,Verilog,-ENERGY-EFFICIENCY-LOW-LATENCY-SIGNED-MULTIPLIER-FOR-FPGA-BASED-HARDWARE-ACCELERATOR,2,0,2023-03-21 16:49:11+00:00,[],None
499,https://github.com/OmarMahmoudElsherif/-First-In-First-Out-FIFO-digital-circuit-using-Verilog.git,2023-03-18 00:04:42+00:00,,0,OmarMahmoudElsherif/-First-In-First-Out-FIFO-digital-circuit-using-Verilog,615540587,Verilog,-First-In-First-Out-FIFO-digital-circuit-using-Verilog,4,0,2023-03-18 00:06:12+00:00,[],None
500,https://github.com/bpeng216/ELEC326-16-bit-processor.git,2023-03-17 22:25:39+00:00,Verilog code for a non-FSM based 16-bit processor,0,bpeng216/ELEC326-16-bit-processor,615520892,Verilog,ELEC326-16-bit-processor,9,0,2023-03-18 05:55:10+00:00,[],None
501,https://github.com/wkflyk/privacy-amplification-code.git,2023-03-15 04:21:06+00:00,"a FPGA implementation of a privacy amplification based on Cellular Automata, writing with verilog.",0,wkflyk/privacy-amplification-code,614187487,Verilog,privacy-amplification-code,16,0,2023-03-15 04:34:09+00:00,[],None
502,https://github.com/Naiera-Seifeldin/32-bit-single-cycle-RISC-V-processor.git,2023-03-16 21:22:19+00:00,,0,Naiera-Seifeldin/32-bit-single-cycle-RISC-V-processor,615053115,Verilog,32-bit-single-cycle-RISC-V-processor,14,0,2023-03-16 21:26:34+00:00,[],None
503,https://github.com/visionvlsi/modelsim_prac.git,2023-03-17 10:14:43+00:00,,0,visionvlsi/modelsim_prac,615268651,Verilog,modelsim_prac,12,0,2023-03-17 10:15:27+00:00,[],None
504,https://github.com/koprime23/EE5331-DSP-Architectures-Embedded-Systems.git,2023-03-11 20:50:44+00:00,,0,koprime23/EE5331-DSP-Architectures-Embedded-Systems,612741337,Verilog,EE5331-DSP-Architectures-Embedded-Systems,1430,0,2023-03-12 07:56:21+00:00,[],None
505,https://github.com/daniel29348679/electronic-experiment.git,2023-03-14 04:28:44+00:00,,0,daniel29348679/electronic-experiment,613691707,Verilog,electronic-experiment,3530,0,2024-01-29 09:27:27+00:00,[],None
506,https://github.com/khaledmermah/RISC-V32I-Processor.git,2023-03-10 13:32:28+00:00,RISC-V32I Processor Design and Implementation using Verilog HDL ,0,khaledmermah/RISC-V32I-Processor,612229628,Verilog,RISC-V32I-Processor,15,0,2023-03-10 13:53:40+00:00,[],None
507,https://github.com/BenzeneAlcohol/Password-Cracker.git,2023-03-13 20:03:31+00:00,P/W Cracker ,0,BenzeneAlcohol/Password-Cracker,613557223,Verilog,Password-Cracker,48204,0,2023-03-23 21:50:14+00:00,[],None
508,https://github.com/praveenyadav02011995/simple-ALU-operations.git,2023-03-14 11:38:40+00:00,"making adder, substractor, divisor and maximum no ",0,praveenyadav02011995/simple-ALU-operations,613843880,Verilog,simple-ALU-operations,5,0,2023-03-14 20:39:35+00:00,[],None
509,https://github.com/youwei0505/HDL.git,2023-03-14 08:59:28+00:00,HDLBits Code,0,youwei0505/HDL,613779755,Verilog,HDL,2,0,2023-03-14 09:02:42+00:00,[],None
510,https://github.com/NourMamdouh/gcd_FSMD.git,2023-03-16 19:48:56+00:00,an fsm controlling a dedicated datapath to generate gcd of two inputs,0,NourMamdouh/gcd_FSMD,615023589,Verilog,gcd_FSMD,2,0,2023-03-16 20:18:09+00:00,[],None
511,https://github.com/neiltauro/Router_1x3.git,2023-03-17 07:30:11+00:00,"• This project aims to transfer data from a single source to three destinations. The methodology uses 3 FIFO modules to buffer the incoming data, a Register, FSM and Synchronizers to manipulate the internal signals to carry out the necessary tasks. • Language - Verilog • Tools - Modelsim, Quartus Prime",0,neiltauro/Router_1x3,615209567,Verilog,Router_1x3,171,0,2023-03-17 07:36:23+00:00,[],None
512,https://github.com/MinaaSobhy/Single-Cycle-32-bit-RISC-V-Processor-Based-on-Verilog.git,2023-03-18 14:41:07+00:00,"Developed an instruction set consisting of 12 instructions to execute a code that computes Fibonacci Series Summation. Developed a top module to integrate all modules into the processor. Modules: ALU, Register File, Program Counter, Instruction Memory, Data Memory, Control Unit, Sign Extend, MUX",0,MinaaSobhy/Single-Cycle-32-bit-RISC-V-Processor-Based-on-Verilog,615738996,Verilog,Single-Cycle-32-bit-RISC-V-Processor-Based-on-Verilog,204,0,2023-03-18 14:42:32+00:00,[],None
513,https://github.com/erendrcnn/Cache-Controller-and-Branch-Prediction-Verilog.git,2023-03-19 15:25:13+00:00,The main memory module implements the memory behavior with a data chunk size of 32 bytes and a 100 cycles operation delay. the cache module contains a state machine that allows 4-byte aligned read/write operations and does not do any caching (all requests are handled).,0,erendrcnn/Cache-Controller-and-Branch-Prediction-Verilog,616088832,Verilog,Cache-Controller-and-Branch-Prediction-Verilog,12,0,2023-03-19 15:27:35+00:00,[],None
514,https://github.com/erendrcnn/FPGA-Arithmetic-Calculator-Verilog.git,2023-03-19 15:42:24+00:00,It is a project design that can work on an FPGA that takes input from the keyboard using the UART protocol and can perform 4 arithmetic operations.,0,erendrcnn/FPGA-Arithmetic-Calculator-Verilog,616094347,Verilog,FPGA-Arithmetic-Calculator-Verilog,888,0,2023-03-19 15:43:30+00:00,[],https://api.github.com/licenses/mit
515,https://github.com/RaviKumarKorada217/Exercise-on-Verilog.git,2023-03-25 07:24:14+00:00,,0,RaviKumarKorada217/Exercise-on-Verilog,618732988,Verilog,Exercise-on-Verilog,36,0,2023-03-25 07:26:09+00:00,[],None
516,https://github.com/ZPNMiaoHeng/e203.git,2023-03-21 13:57:51+00:00,Study,0,ZPNMiaoHeng/e203,616998043,Verilog,e203,79121,0,2023-03-21 14:04:23+00:00,[],https://api.github.com/licenses/apache-2.0
517,https://github.com/Shivangp4/CSE-BUBBLE.git,2023-03-21 22:42:01+00:00,This repository contains the course project of CS220A. We have made an Instruction Set Architecture with 25 Instructions and run it to implement the bubble sort. The VHDL is programmed in verilog.,0,Shivangp4/CSE-BUBBLE,617204583,Verilog,CSE-BUBBLE,373,0,2023-05-20 23:50:28+00:00,[],https://api.github.com/licenses/mit
518,https://github.com/williamstoy/opalkelly-frontpanel-axi4lite-interface.git,2023-03-15 17:18:38+00:00,Bidirectional AXI4-Lite communication via Opal Kelly FrontPanel IP,0,williamstoy/opalkelly-frontpanel-axi4lite-interface,614485281,Verilog,opalkelly-frontpanel-axi4lite-interface,6,0,2023-03-15 17:18:44+00:00,[],None
519,https://github.com/notbingsu/ee2026-.git,2023-03-16 09:13:10+00:00,we love basys,1,notbingsu/ee2026-,614762435,Verilog,ee2026-,806,0,2023-03-16 10:39:46+00:00,[],None
520,https://github.com/rhowlett/efabless.git,2023-03-10 16:34:23+00:00,sandbox for efabless shuttle ,0,rhowlett/efabless,612304207,Verilog,efabless,121290,0,2023-03-10 16:34:52+00:00,[],https://api.github.com/licenses/apache-2.0
521,https://github.com/jxyang777/IC-Contest.git,2023-03-09 17:23:37+00:00,,0,jxyang777/IC-Contest,611855994,Verilog,IC-Contest,1535,0,2023-03-09 17:27:12+00:00,[],None
522,https://github.com/sicajc/iot_data_final2019.git,2023-03-12 05:57:45+00:00,,0,sicajc/iot_data_final2019,612839572,Verilog,iot_data_final2019,887,0,2023-03-12 05:58:48+00:00,[],None
523,https://github.com/kirollos9/digital-design-course.git,2023-03-10 00:24:13+00:00,,0,kirollos9/digital-design-course,611984788,Verilog,digital-design-course,7,0,2023-03-10 00:25:37+00:00,[],None
524,https://github.com/cattooth/128pointFFT.git,2023-03-22 20:00:35+00:00,ASIC,0,cattooth/128pointFFT,617640149,Verilog,128pointFFT,99,0,2023-03-24 15:33:21+00:00,[],None
525,https://github.com/SreekanthBillupati/Verilog-Practise.git,2023-03-23 05:02:57+00:00,codes that i wrote ,0,SreekanthBillupati/Verilog-Practise,617781643,Verilog,Verilog-Practise,2,0,2023-03-23 05:05:09+00:00,[],None
526,https://github.com/BasselYD/RISC-V-Microcontroller.git,2023-03-09 11:56:40+00:00,,0,BasselYD/RISC-V-Microcontroller,611715641,Verilog,RISC-V-Microcontroller,109,0,2023-03-09 12:00:45+00:00,[],None
527,https://github.com/diferential/sc-rv-tt03-block3.git,2023-03-25 16:46:50+00:00, Public TinyTapeout03 Scan chain based Risc V processor -- block 3 register file,0,diferential/sc-rv-tt03-block3,618891480,Verilog,sc-rv-tt03-block3,37,0,2023-03-25 19:16:24+00:00,[],https://api.github.com/licenses/apache-2.0
528,https://github.com/StevenChou499/2023Digital_IC_Design.git,2023-03-09 05:23:19+00:00,Repository of digital IC desgin homework,0,StevenChou499/2023Digital_IC_Design,611577517,Verilog,2023Digital_IC_Design,114,0,2023-03-09 16:15:37+00:00,[],None
529,https://github.com/OmarMahmoudElsherif/RISC-V_processor.git,2023-03-15 14:59:25+00:00,,0,OmarMahmoudElsherif/RISC-V_processor,614424660,Verilog,RISC-V_processor,78,0,2023-03-15 15:00:57+00:00,[],None
530,https://github.com/fivexxxxx/verilog_uart_decode.git,2023-03-15 06:31:31+00:00,Verilog 实现串口解析自定义协议的命令包,0,fivexxxxx/verilog_uart_decode,614223030,Verilog,verilog_uart_decode,27,0,2023-03-15 06:35:19+00:00,[],None
531,https://github.com/alpha-karthik/UART.git,2023-03-15 12:25:21+00:00,Design and Implementation of Off-Chip Protocol - UART (Universal Asynchronous Receiver Transmitter) using Verilog HDL.,0,alpha-karthik/UART,614355258,Verilog,UART,206,0,2023-07-31 13:42:54+00:00,[],https://api.github.com/licenses/gpl-3.0
532,https://github.com/gitEricDu/tsnp.git,2023-03-16 23:33:38+00:00,,0,gitEricDu/tsnp,615087193,Verilog,tsnp,838,0,2023-03-16 23:42:07+00:00,[],https://api.github.com/licenses/cc-by-4.0
533,https://github.com/rickathe/caravel_test.git,2023-03-17 03:00:20+00:00,,0,rickathe/caravel_test,615137701,Verilog,caravel_test,41724,0,2023-03-17 03:00:57+00:00,[],https://api.github.com/licenses/apache-2.0
534,https://github.com/pablohfny/ESC-2023-UFU.git,2023-03-16 19:54:48+00:00,,0,pablohfny/ESC-2023-UFU,615025696,Verilog,ESC-2023-UFU,4,0,2023-03-16 20:44:02+00:00,[],None
535,https://github.com/Kskjordal/Caravan.git,2023-03-14 09:45:35+00:00,,0,Kskjordal/Caravan,613798788,Verilog,Caravan,95,0,2023-03-14 09:45:42+00:00,[],https://api.github.com/licenses/apache-2.0
536,https://github.com/srinivasf1/Silicon_exp1.git,2023-03-12 03:29:20+00:00,,0,srinivasf1/Silicon_exp1,612812519,Verilog,Silicon_exp1,41724,0,2023-03-12 03:29:53+00:00,[],https://api.github.com/licenses/apache-2.0
537,https://github.com/Zashino/CCU_Computer_Organization-2020.git,2023-03-12 03:06:30+00:00,,0,Zashino/CCU_Computer_Organization-2020,612808601,Verilog,CCU_Computer_Organization-2020,4030,0,2023-03-12 03:30:37+00:00,[],None
538,https://github.com/Shalambala/CustomFpArithmetic.git,2023-03-14 10:09:29+00:00,,0,Shalambala/CustomFpArithmetic,613808454,Verilog,CustomFpArithmetic,4,0,2023-03-14 10:13:55+00:00,[],None
539,https://github.com/elecclubiitg/Simon_Says.git,2023-03-14 14:21:45+00:00,,1,elecclubiitg/Simon_Says,613915135,Verilog,Simon_Says,416,0,2023-04-23 04:04:36+00:00,[],None
540,https://github.com/castoria/EeroqCaravel.git,2023-03-13 14:56:26+00:00,,0,castoria/EeroqCaravel,613430624,Verilog,EeroqCaravel,41754,0,2023-03-13 15:23:01+00:00,[],https://api.github.com/licenses/apache-2.0
541,https://github.com/homaung/unsuccessful-work.git,2023-03-13 06:27:25+00:00,,0,homaung/unsuccessful-work,613220801,Verilog,unsuccessful-work,3,0,2023-03-13 06:28:01+00:00,[],None
542,https://github.com/edgars-ozols/AlchitryCuExperiments.git,2023-03-12 10:26:47+00:00,,0,edgars-ozols/AlchitryCuExperiments,612902226,Verilog,AlchitryCuExperiments,5,0,2023-03-12 11:05:06+00:00,[],https://api.github.com/licenses/mit
543,https://github.com/PierceCCH/darth-invaders.git,2023-03-17 20:31:06+00:00,Final project for UCLA M152A: Introductory Digital Design Lab,0,PierceCCH/darth-invaders,615492229,Verilog,darth-invaders,21,0,2023-03-19 05:20:31+00:00,[],None
544,https://github.com/MinaaSobhy/UART-Receiver-Based-on-Verilog.git,2023-03-18 14:31:17+00:00,"Modules used: Edge Bit Counter, UART RX FSM, Data Sampling, Deserializer",0,MinaaSobhy/UART-Receiver-Based-on-Verilog,615735921,Verilog,UART-Receiver-Based-on-Verilog,10,0,2023-03-18 14:38:21+00:00,[],None
545,https://github.com/ChiYuan9/HDLBits.git,2023-03-24 19:11:28+00:00,,0,ChiYuan9/HDLBits,618573587,Verilog,HDLBits,51,0,2023-03-24 19:13:38+00:00,[],None
546,https://github.com/nsidhu11/VGA-Controller.git,2023-03-24 07:20:01+00:00,,0,nsidhu11/VGA-Controller,618304231,Verilog,VGA-Controller,14,0,2023-03-24 07:22:37+00:00,[],None
547,https://github.com/Bytewaiser/verilog-projects.git,2023-03-26 17:16:32+00:00,,0,Bytewaiser/verilog-projects,619240814,Verilog,verilog-projects,77,0,2023-03-26 17:16:47+00:00,[],None
548,https://github.com/apurba1911/alu.git,2023-03-26 17:31:42+00:00,,0,apurba1911/alu,619245480,Verilog,alu,204,0,2023-03-26 21:12:57+00:00,[],None
549,https://github.com/DC22091999/part_2.git,2023-03-24 05:57:13+00:00,,0,DC22091999/part_2,618278492,Verilog,part_2,663,0,2023-03-24 06:06:56+00:00,[],None
550,https://github.com/NalavathVamsinaik/RAM-and-ROM.git,2023-03-23 14:14:00+00:00,,0,NalavathVamsinaik/RAM-and-ROM,617983639,Verilog,RAM-and-ROM,320,0,2023-03-24 10:38:21+00:00,[],None
551,https://github.com/ThilankaMORA/RISCV-32-bit-Processor.git,2023-03-24 17:26:15+00:00,,1,ThilankaMORA/RISCV-32-bit-Processor,618537314,Verilog,RISCV-32-bit-Processor,1046,0,2023-03-24 17:30:48+00:00,[],None
552,https://github.com/maiomar88/RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System-.git,2023-03-25 15:35:27+00:00,RTL to GDS Implementation of Low Power Configurable Multi Clock Digital System”,0,maiomar88/RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System-,618869208,Verilog,RTL-to-GDS-Implementation-of-Low-Power-Configurable-Multi-Clock-Digital-System-,143,0,2023-03-25 15:44:09+00:00,[],None
553,https://github.com/Hitesh2598/Verilog-Workshop.git,2023-03-09 08:12:49+00:00,4 day Verilog Workshop Organized by vlsideepdive,0,Hitesh2598/Verilog-Workshop,611630041,Verilog,Verilog-Workshop,2,0,2023-03-09 08:19:29+00:00,[],None
554,https://github.com/Luudinhvietan1123/RISC-V-32I-implement.git,2023-03-10 16:09:30+00:00,,0,Luudinhvietan1123/RISC-V-32I-implement,612294367,Verilog,RISC-V-32I-implement,8572,0,2023-03-10 16:17:05+00:00,[],None
555,https://github.com/AsifHasanOpi/myAES.git,2023-03-10 08:25:41+00:00,This is a quick and simple AES Encryption implementation using Verilog Programming Language. The code takes in a 128 bit data and 128 bit Key from the user and encrypts it according to AES algorithms and standards. As of now only 128 - bit level encryption is supported.,0,AsifHasanOpi/myAES,612115113,Verilog,myAES,8,0,2023-03-10 08:34:38+00:00,[],https://api.github.com/licenses/mit
556,https://github.com/saumya2102/verilog_Saumya_100days.git,2023-03-11 08:01:19+00:00,,0,saumya2102/verilog_Saumya_100days,612528770,Verilog,verilog_Saumya_100days,8,0,2023-03-11 08:05:25+00:00,[],None
557,https://github.com/RGD2/uspectrogen.git,2023-03-21 05:35:45+00:00,Simple CLK / ST pulse train generator for C12880MA for readout with oscilloscope,0,RGD2/uspectrogen,616803535,Verilog,uspectrogen,20,0,2023-03-21 05:40:06+00:00,[],https://api.github.com/licenses/cc0-1.0
558,https://github.com/anjaliabr/MIPSSingleCycleProcessor.git,2023-03-20 07:20:22+00:00,,0,anjaliabr/MIPSSingleCycleProcessor,616333830,Verilog,MIPSSingleCycleProcessor,10,0,2023-03-20 20:17:50+00:00,"['mips', 'mips-assembly']",None
559,https://github.com/ishper08/caravel_walkthrough.git,2023-03-22 03:14:25+00:00,,0,ishper08/caravel_walkthrough,617272590,Verilog,caravel_walkthrough,42272,0,2023-03-22 03:15:01+00:00,[],https://api.github.com/licenses/apache-2.0
560,https://github.com/danster44/FPGA-Projects.git,2023-03-22 14:59:10+00:00,,0,danster44/FPGA-Projects,617519024,Verilog,FPGA-Projects,6,0,2023-03-22 15:23:05+00:00,[],None
561,https://github.com/kido2k3/CA_Assignment.git,2023-03-19 22:32:13+00:00,Verilog code to implement processor,0,kido2k3/CA_Assignment,616204540,Verilog,CA_Assignment,3196,0,2023-11-23 09:28:05+00:00,[],None
562,https://github.com/KartikSingh8168/Verilog-Code.git,2023-03-13 16:09:50+00:00,,1,KartikSingh8168/Verilog-Code,613465205,Verilog,Verilog-Code,9,0,2023-03-13 16:25:06+00:00,[],None
563,https://github.com/sness23/cello.git,2023-03-12 14:15:50+00:00,cello,0,sness23/cello,612967022,Verilog,cello,5656,0,2023-05-13 03:00:19+00:00,[],https://api.github.com/licenses/gpl-3.0
564,https://github.com/Edmond1218/ad9238-cic-udp-send.git,2023-03-09 08:44:04+00:00,,0,Edmond1218/ad9238-cic-udp-send,611641579,Verilog,ad9238-cic-udp-send,509,0,2023-03-09 08:48:59+00:00,[],None
565,https://github.com/CatalinPoata/RISC-V.git,2023-03-13 13:30:00+00:00,RISC-V processor made using Verilog,0,CatalinPoata/RISC-V,613388438,Verilog,RISC-V,616,0,2023-03-13 13:35:13+00:00,[],None
566,https://github.com/takeokas/tang_primer.git,2023-03-16 21:32:27+00:00,,0,takeokas/tang_primer,615055874,Verilog,tang_primer,410,0,2023-03-16 21:42:38+00:00,[],None
567,https://github.com/BharathKumar-Dannana/VLSI.git,2023-03-24 05:55:27+00:00,,0,BharathKumar-Dannana/VLSI,618278005,Verilog,VLSI,4,0,2023-03-24 07:06:28+00:00,[],None
568,https://github.com/akshatg20/CS220A-Microprocesser-Implementation.git,2023-03-24 08:17:31+00:00,"Implementation of Processer ""CSE-BUBBLE"" using Verilog HDL",0,akshatg20/CS220A-Microprocesser-Implementation,618323340,Verilog,CS220A-Microprocesser-Implementation,323,0,2023-07-11 17:01:28+00:00,[],None
569,https://github.com/kyw6416/i2s.git,2023-03-22 00:46:16+00:00,,0,kyw6416/i2s,617234857,Verilog,i2s,3,0,2023-03-22 07:42:42+00:00,[],None
570,https://github.com/joyjason/Logic-Design.git,2023-03-22 16:58:33+00:00,,0,joyjason/Logic-Design,617570714,Verilog,Logic-Design,110,0,2023-03-22 16:59:21+00:00,[],None
571,https://github.com/hellojor/icdc_exercise.git,2023-03-23 13:53:02+00:00,IC Design Contest Cell-Based,0,hellojor/icdc_exercise,617973934,Verilog,icdc_exercise,24419,0,2023-03-23 13:54:02+00:00,[],None
572,https://github.com/LizhuChen/ALU-Design.git,2023-03-23 16:07:10+00:00,設計ALU與乘法器,0,LizhuChen/ALU-Design,618035423,Verilog,ALU-Design,202,0,2023-03-24 08:22:26+00:00,[],None
573,https://github.com/LizhuChen/Pipelined-CPU-Design.git,2023-03-23 16:19:52+00:00,模擬CPU Pipelined,0,LizhuChen/Pipelined-CPU-Design,618040713,Verilog,Pipelined-CPU-Design,497,0,2023-03-23 16:21:56+00:00,[],None
574,https://github.com/priyadarshini-silpa/verilog.git,2023-03-21 13:56:10+00:00,,0,priyadarshini-silpa/verilog,616997236,Verilog,verilog,7,0,2023-03-28 06:56:56+00:00,[],None
575,https://github.com/ChrisElash/22nm_ECC_wrapper.git,2023-03-21 16:58:49+00:00,,0,ChrisElash/22nm_ECC_wrapper,617080615,Verilog,22nm_ECC_wrapper,2,0,2023-03-21 17:01:38+00:00,[],None
576,https://github.com/sudharaniinti/Frequency-Divider-by-3.git,2023-03-22 10:07:54+00:00,,0,sudharaniinti/Frequency-Divider-by-3,617399741,Verilog,Frequency-Divider-by-3,82,0,2023-03-22 10:11:19+00:00,[],None
577,https://github.com/Ostolaus/Matrixmul.git,2023-03-24 09:51:56+00:00,,0,Ostolaus/Matrixmul,618359443,Verilog,Matrixmul,41724,0,2023-03-24 09:52:43+00:00,[],https://api.github.com/licenses/apache-2.0
578,https://github.com/Arthur2303/LASD.git,2023-03-24 19:23:29+00:00,Repositório dedicado ao Laboratório de Arquitetura de Sistemas Digitais,0,Arthur2303/LASD,618577297,Verilog,LASD,39805,0,2023-06-24 10:49:27+00:00,[],None
579,https://github.com/anandbaheti/MIPS.git,2023-03-26 09:11:39+00:00,,0,anandbaheti/MIPS,619099430,Verilog,MIPS,824,0,2023-03-26 09:13:47+00:00,[],None
580,https://github.com/princek12345/Tic-Tac-Toe-XO-game-in-Verilog-using-FPGA.git,2023-03-26 02:57:08+00:00,Tic-Tac-Toe (XO) game in Verilog with display on screen using VGA connector and input using Key-pad has been done at IIST as a part course project.,0,princek12345/Tic-Tac-Toe-XO-game-in-Verilog-using-FPGA,619022688,Verilog,Tic-Tac-Toe-XO-game-in-Verilog-using-FPGA,4137,0,2023-03-26 03:02:40+00:00,[],None
581,https://github.com/marjoca/vlsi-system-ps-2_protocol.git,2023-03-16 13:56:23+00:00,,0,marjoca/vlsi-system-ps-2_protocol,614877415,Verilog,vlsi-system-ps-2_protocol,6,0,2023-09-04 19:27:06+00:00,[],None
582,https://github.com/Lexi-M/32bitIEEE754ALU.git,2023-03-16 17:37:43+00:00,32bit ALU with 16 instructions and some built in memory. Created as a school project. The adder module has an error.,0,Lexi-M/32bitIEEE754ALU,614975887,Verilog,32bitIEEE754ALU,5,0,2023-03-16 17:38:40+00:00,[],https://api.github.com/licenses/mit
583,https://github.com/Joviray/Engr--378--Lab.git,2023-03-13 20:47:26+00:00,To share the lab for Verilog in this file. ,0,Joviray/Engr--378--Lab,613572017,Verilog,Engr--378--Lab,53917,0,2023-05-24 20:28:27+00:00,[],None
584,https://github.com/dlmiles/tt03-dlmiles-multiplier.git,2023-03-15 05:42:19+00:00,TinyTapeout Multiplier,0,dlmiles/tt03-dlmiles-multiplier,614208184,Verilog,tt03-dlmiles-multiplier,231,0,2023-03-15 06:05:24+00:00,[],https://api.github.com/licenses/apache-2.0
585,https://github.com/nsemenoff/MAX10_Modem.git,2023-03-20 12:14:14+00:00,Hydroacoustic modem,0,nsemenoff/MAX10_Modem,616449261,Verilog,MAX10_Modem,401,0,2023-03-20 12:16:04+00:00,[],https://api.github.com/licenses/gpl-3.0
586,https://github.com/OmarMahmoudElsherif/Greatest-common-divisor-GCD-of-two-numbers-using-FSM-with-datapath-using-verilog..git,2023-03-18 00:27:48+00:00,,0,OmarMahmoudElsherif/Greatest-common-divisor-GCD-of-two-numbers-using-FSM-with-datapath-using-verilog.,615544940,Verilog,Greatest-common-divisor-GCD-of-two-numbers-using-FSM-with-datapath-using-verilog.,61,0,2023-03-18 00:29:16+00:00,[],None
587,https://github.com/PeterMonsson/verilator-github-action.git,2023-03-19 19:45:23+00:00,Run a verilator testbench as a github action,0,PeterMonsson/verilator-github-action,616165605,Verilog,verilator-github-action,17,0,2023-03-19 19:50:59+00:00,[],https://api.github.com/licenses/apache-2.0
588,https://github.com/devadutt-github/async_fifo.git,2023-03-26 23:40:58+00:00,A Verilog RTL of Asynchronous FIFO buffer used in SPI communication ,0,devadutt-github/async_fifo,619337848,Verilog,async_fifo,16,0,2023-07-18 17:21:48+00:00,[],None
589,https://github.com/Shahiraosama/32-bit-single-cycle-RISC-V-processor.git,2023-03-14 18:40:04+00:00,verilog,0,Shahiraosama/32-bit-single-cycle-RISC-V-processor,614028005,Verilog,32-bit-single-cycle-RISC-V-processor,184,0,2023-03-14 19:28:46+00:00,[],None
590,https://github.com/ThanforeHarich/lcd4384_driver.git,2023-03-15 03:36:06+00:00,,0,ThanforeHarich/lcd4384_driver,614176466,Verilog,lcd4384_driver,3,0,2023-03-15 03:36:59+00:00,[],None
591,https://github.com/chang2eee/ModelSim.git,2023-03-15 17:42:43+00:00,,0,chang2eee/ModelSim,614494549,Verilog,ModelSim,20,0,2023-09-06 15:05:43+00:00,[],None
592,https://github.com/BeckBusch/Compsys701-Work.git,2023-03-15 02:37:43+00:00,Repo for CS701 lab work version control,0,BeckBusch/Compsys701-Work,614161650,Verilog,Compsys701-Work,118014,0,2023-12-19 08:54:59+00:00,[],None
593,https://github.com/Intelligent-Computing-Research-Group/PIMLC-Benchmark.git,2023-03-26 10:15:28+00:00,The benchmark of PIMLC - Some EPFL Verilog modules converted by yosys and MIG_project,0,Intelligent-Computing-Research-Group/PIMLC-Benchmark,619115992,Verilog,PIMLC-Benchmark,3467,0,2024-03-21 19:28:04+00:00,[],None
594,https://github.com/zyrrron/Oriole_old.git,2023-03-11 01:10:53+00:00,,1,zyrrron/Oriole_old,612446632,Verilog,Oriole_old,53852,0,2023-09-13 17:09:48+00:00,[],None
595,https://github.com/mozerj2001/fp_accel.git,2023-03-14 05:23:19+00:00, Hardware accelerator for comparing molecule fingerprints.,0,mozerj2001/fp_accel,613705798,Verilog,fp_accel,283,0,2023-03-14 05:30:17+00:00,[],None
596,https://github.com/BasselYD/UART-System.git,2023-03-09 12:23:08+00:00,,0,BasselYD/UART-System,611726345,Verilog,UART-System,21,0,2023-03-09 12:53:56+00:00,[],None
597,https://github.com/JasonLrh/GoWin_FPGA_Prj.git,2023-03-09 07:56:15+00:00,self joy,0,JasonLrh/GoWin_FPGA_Prj,611624199,Verilog,GoWin_FPGA_Prj,78,0,2023-03-09 07:58:43+00:00,[],None
598,https://github.com/Divyajyotipatra10/rail_Verilog_lock_system.git,2023-03-09 19:47:41+00:00,An idea to bring  a lock system in your railway travel to provide security storage for valuables. Based on System Verilog. Very easy to handle. More tests to be done at FPGA level.,1,Divyajyotipatra10/rail_Verilog_lock_system,611910004,Verilog,rail_Verilog_lock_system,135,0,2023-03-09 20:30:56+00:00,[],None
599,https://github.com/jinjung21/ECE241.git,2023-03-23 23:22:17+00:00,,0,jinjung21/ECE241,618182058,Verilog,ECE241,182,0,2023-03-23 23:53:01+00:00,[],None
600,https://github.com/maiomar88/Vedic-Multplier.git,2023-03-25 15:22:23+00:00,# Implementation of High Speed 16x16 Vedic Multiplier using Verilog HDL Coding Technique,0,maiomar88/Vedic-Multplier,618865099,Verilog,Vedic-Multplier,321,0,2023-03-25 15:23:58+00:00,[],None
601,https://github.com/SelahattinAbakay/LIFO_Unit.git,2023-03-22 21:35:34+00:00,,0,SelahattinAbakay/LIFO_Unit,617670285,Verilog,LIFO_Unit,147,0,2023-03-22 21:40:20+00:00,[],None
602,https://github.com/muratizm/SIGANFU.git,2023-03-22 23:13:17+00:00,MK-LMC SIGANFU Tactical Power Armor - Final Verilog Project of Logic Design,0,muratizm/SIGANFU,617695609,Verilog,SIGANFU,1852,0,2023-03-22 23:24:13+00:00,"['logic-design', 'verilog']",None
603,https://github.com/DanX069/VEDA-Verilog-Memory.git,2023-03-21 21:44:10+00:00,,0,DanX069/VEDA-Verilog-Memory,617188117,Verilog,VEDA-Verilog-Memory,7,0,2023-03-21 21:44:56+00:00,[],None
604,https://github.com/kaushalsureshkr/8-bit-parallel-prefix-adder.git,2023-03-20 05:26:05+00:00,A repository containing the mini-project files done as part of the  Digital Design & Computer Organization (UE20CS201) course at PES University.,0,kaushalsureshkr/8-bit-parallel-prefix-adder,616297818,Verilog,8-bit-parallel-prefix-adder,248,0,2023-03-20 05:26:43+00:00,[],None
605,https://github.com/praveenyadav02011995/UART-TX-And-RX-through-FPGA-and-PC.git,2023-03-12 18:17:49+00:00,Implement UART Transmitter and UART Receiver through FPGA to PC and PC to FPGA respectively,0,praveenyadav02011995/UART-TX-And-RX-through-FPGA-and-PC,613045193,Verilog,UART-TX-And-RX-through-FPGA-and-PC,5,0,2023-03-12 18:55:23+00:00,[],None
606,https://github.com/Laleet-KunaiCoder/assingment.git,2023-03-12 07:18:11+00:00,,0,Laleet-KunaiCoder/assingment,612856965,Verilog,assingment,3909,0,2023-03-16 15:54:24+00:00,[],None
607,https://github.com/lyx-GitH/PiplinedCPU.git,2023-03-10 15:05:50+00:00,A pipelined CPU for ZJU Computer Organization,0,lyx-GitH/PiplinedCPU,612268528,Verilog,PiplinedCPU,218,0,2023-03-10 15:07:13+00:00,[],None
608,https://github.com/TaylorDOS/16-bit_ALU.git,2023-03-10 15:57:22+00:00,16-bit ALU with manual and automatic testing,0,TaylorDOS/16-bit_ALU,612289628,Verilog,16-bit_ALU,998,0,2023-03-30 13:32:34+00:00,[],None
609,https://github.com/IshanGProjects/lab6-ECEN.git,2023-03-09 22:49:55+00:00,Using Seven Segment Hex Display,0,IshanGProjects/lab6-ECEN,611962853,Verilog,lab6-ECEN,4,0,2023-03-09 22:52:23+00:00,[],https://api.github.com/licenses/mit
610,https://github.com/IObundle/iob-soc-pong.git,2023-03-14 22:47:19+00:00,,1,IObundle/iob-soc-pong,614105827,Verilog,iob-soc-pong,192024,0,2023-06-29 12:23:24+00:00,[],https://api.github.com/licenses/mit
611,https://github.com/SKT-CPUOS/VGA.git,2023-03-16 04:11:34+00:00,,0,SKT-CPUOS/VGA,614669635,Verilog,VGA,3316,0,2023-05-16 09:22:25+00:00,[],None
612,https://github.com/Kskjordal/caravel_test.git,2023-03-16 18:26:03+00:00,,0,Kskjordal/caravel_test,614994156,Verilog,caravel_test,41724,0,2023-03-16 18:26:39+00:00,[],https://api.github.com/licenses/apache-2.0
613,https://github.com/bobo90/VidorFPGA_example_project.git,2023-03-18 21:48:50+00:00,,0,bobo90/VidorFPGA_example_project,615855943,Verilog,VidorFPGA_example_project,56,0,2023-03-18 21:51:55+00:00,[],
614,https://github.com/DC22091999/part_4.git,2023-03-19 07:16:58+00:00,,0,DC22091999/part_4,615956275,Verilog,part_4,20,0,2023-03-19 07:38:33+00:00,[],None
615,https://github.com/MetinErenOktay/Implementing-1-Bit-Full-Adder-by-Behavioral-Design-and-4-Bit-Ripple-Carry-Adder-by-Structural-Design.git,2023-03-11 20:55:22+00:00,,1,MetinErenOktay/Implementing-1-Bit-Full-Adder-by-Behavioral-Design-and-4-Bit-Ripple-Carry-Adder-by-Structural-Design,612742394,Verilog,Implementing-1-Bit-Full-Adder-by-Behavioral-Design-and-4-Bit-Ripple-Carry-Adder-by-Structural-Design,160,0,2023-03-11 20:56:17+00:00,[],None
616,https://github.com/Mahmoud1172/SPI-SLAVE-With-Dual-Port-Memory-Using-Verilog-HDL.git,2023-03-11 11:50:59+00:00,,0,Mahmoud1172/SPI-SLAVE-With-Dual-Port-Memory-Using-Verilog-HDL,612586854,Verilog,SPI-SLAVE-With-Dual-Port-Memory-Using-Verilog-HDL,2,0,2023-03-11 11:51:20+00:00,[],None
617,https://github.com/ayushsoni2709/Verilog-Projects.git,2023-03-11 04:32:49+00:00,"""Veriolg Projects"" is a repository on Github created by [insert your name here] that contains a collection of personal projects related to various programming concepts and technologies. These projects demonstrate your skills and experience in programming and showcase your ability to solve real-world problems through code.",0,ayushsoni2709/Verilog-Projects,612484223,Verilog,Verilog-Projects,4,0,2023-03-11 05:31:50+00:00,[],None
618,https://github.com/kiciuakme/verilog_arm.git,2023-03-14 15:51:24+00:00,Vivado project for implementing simple processor architecture into fpga. Scheme is lost media,0,kiciuakme/verilog_arm,613957042,Verilog,verilog_arm,22,0,2023-03-14 15:52:24+00:00,[],None
619,https://github.com/kirollos9/spi_slave_with_single_ram_port.git,2023-03-10 00:17:12+00:00,,0,kirollos9/spi_slave_with_single_ram_port,611983177,Verilog,spi_slave_with_single_ram_port,2,0,2023-03-10 00:18:56+00:00,[],None
620,https://github.com/NetherPortalIntern/Color_Show.git,2023-03-10 08:53:10+00:00,,0,NetherPortalIntern/Color_Show,612124956,Verilog,Color_Show,503,0,2023-03-13 22:46:55+00:00,[],None
621,https://github.com/Raviteja654321/Y-86-Processor.git,2023-03-13 12:24:28+00:00,,0,Raviteja654321/Y-86-Processor,613359318,Verilog,Y-86-Processor,2308,0,2023-03-13 12:24:51+00:00,[],None
622,https://github.com/dahu9049/ECEN2350.git,2023-03-13 15:19:05+00:00,,0,dahu9049/ECEN2350,613441755,Verilog,ECEN2350,1825,0,2023-03-13 15:28:00+00:00,[],None
623,https://github.com/saufik-ramadhan/counte_4bit_zybo_z7.git,2023-03-19 12:30:59+00:00,,0,saufik-ramadhan/counte_4bit_zybo_z7,616034144,Verilog,counte_4bit_zybo_z7,1,0,2023-03-19 12:39:42+00:00,[],None
624,https://github.com/FlorianFrank/Verilog-UART-Custom-IP.git,2023-03-17 08:59:33+00:00,A custom UART IP core. Wrting to bare metal I/O pins independent of the FPGA model.,0,FlorianFrank/Verilog-UART-Custom-IP,615240039,Verilog,Verilog-UART-Custom-IP,97,0,2023-12-25 19:31:49+00:00,"['fpga', 'ip-core', 'verilog', 'vivado', 'xilinx', 'uart', 'serial']",https://api.github.com/licenses/mit
625,https://github.com/kookhh0827/CSED311_Computer_Achitecture.git,2023-03-18 12:01:46+00:00,,0,kookhh0827/CSED311_Computer_Achitecture,615692667,Verilog,CSED311_Computer_Achitecture,7118,0,2024-02-28 14:16:23+00:00,[],https://api.github.com/licenses/mit
