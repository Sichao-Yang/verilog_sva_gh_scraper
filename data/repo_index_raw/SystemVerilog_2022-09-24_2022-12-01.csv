,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/agg23/openfpga-NES.git,2022-09-26 00:20:07+00:00,NES for the Analogue Pocket,7,agg23/openfpga-NES,541348592,SystemVerilog,openfpga-NES,5733,184,2024-04-13 00:53:14+00:00,"['analogue-pocket', 'fpga', 'nes', 'openfpga']",https://api.github.com/licenses/gpl-3.0
1,https://github.com/agg23/openfpga-pokemonmini.git,2022-10-13 23:53:41+00:00,,1,agg23/openfpga-pokemonmini,551161523,SystemVerilog,openfpga-pokemonmini,465,33,2024-02-04 22:06:54+00:00,[],https://api.github.com/licenses/gpl-2.0
2,https://github.com/qleenju/PDPU.git,2022-11-13 05:28:18+00:00,PDPU: An Open-Source Posit Dot-Product Unit for Deep Learning Applications,7,qleenju/PDPU,565351027,SystemVerilog,PDPU,1562,30,2024-02-13 05:29:46+00:00,"['dot-product', 'posit', 'posit-arithmetic', 'posit-arithmetic-generator', 'unum', 'arithmetic-units', 'mixed-precision', 'systemverilog']",https://api.github.com/licenses/apache-2.0
3,https://github.com/snbk001/100DaysofRTL.git,2022-09-28 14:45:41+00:00,"100DaysofRTL & System Verilog design: basic logic gates, mux, half/full subtractor, Encoder, D flipflop, 8 bit counter, LFSR, Custom Counter, Mux using case, JK flip flop, T flip flop, positive edge detection, Priority encoder, Barrel shifter, Signed Magnitude adder, Free Running Counter, Mod-m Counter, Edge Detector mealy Moore",3,snbk001/100DaysofRTL,542641001,SystemVerilog,100DaysofRTL,123,25,2024-02-16 18:22:56+00:00,"['makefile', 'systemverilog', 'testbench', 'rtl-design', 'verilog', 'synthesis', 'hdl', 'systemverilog-hdl', 'systemverilog-simulation', 'systemverilog-test-bench', 'edge-detector-with-mealy']",None
4,https://github.com/mbits-mirafra/UVMCourse.git,2022-10-25 09:51:49+00:00,Structured UVM Course,7,mbits-mirafra/UVMCourse,557223896,SystemVerilog,UVMCourse,23769,24,2024-03-07 14:54:25+00:00,[],None
5,https://github.com/riscv-verification/riscvISACOV.git,2022-11-05 12:33:23+00:00,SystemVerilog Functional Coverage for RISC-V ISA,5,riscv-verification/riscvISACOV,562138106,SystemVerilog,riscvISACOV,489,16,2024-03-21 21:19:12+00:00,[],
6,https://github.com/antoinemadec/uvm_code_gen.git,2022-10-17 13:08:02+00:00,Simple template-based UVM code generator,3,antoinemadec/uvm_code_gen,552936244,SystemVerilog,uvm_code_gen,127,15,2024-04-03 07:00:57+00:00,"['systemverilog', 'uvm']",https://api.github.com/licenses/mit
7,https://github.com/KafCoppelia/uvm-mcdf.git,2022-11-30 12:21:57+00:00,Mirror of william_william/uvm-mcdf on Gitee,0,KafCoppelia/uvm-mcdf,572504702,SystemVerilog,uvm-mcdf,947,14,2023-11-03 01:22:02+00:00,"['systemverilog', 'uvm', 'mcdf']",None
8,https://github.com/mbits-mirafra/i3c_avip.git,2022-11-07 06:18:34+00:00,Verification IP project for I3C protocol ,3,mbits-mirafra/i3c_avip,562733325,SystemVerilog,i3c_avip,92028,11,2024-01-06 13:39:42+00:00,[],None
9,https://github.com/SarahElzayat/RISC-pipelined-processor.git,2022-11-07 15:20:22+00:00,"5 stages RISC pipelined processor with multiple instructions implemented in verilog including ALU Operations, Interrupts as a state machine, Jumps and branching instructions, Memory operations and more.. following Harvard architecture.",1,SarahElzayat/RISC-pipelined-processor,562940859,SystemVerilog,RISC-pipelined-processor,11335,7,2024-01-03 16:45:06+00:00,[],https://api.github.com/licenses/mit
10,https://github.com/Srisrijakka1/UART-Design-simulation-using-verilog.git,2022-10-30 06:39:08+00:00,,0,Srisrijakka1/UART-Design-simulation-using-verilog,559452754,SystemVerilog,UART-Design-simulation-using-verilog,37104,7,2023-12-15 09:18:50+00:00,[],None
11,https://github.com/chiselverify/otherverify.git,2022-10-04 11:00:29+00:00," Examples of verification solutions (e.g., UVM, cocotb,...)",0,chiselverify/otherverify,545428923,SystemVerilog,otherverify,63,6,2024-02-15 00:11:53+00:00,[],https://api.github.com/licenses/bsd-2-clause
12,https://github.com/KafCoppelia/uvm-mcdf_v2.git,2022-11-30 12:26:25+00:00,Mirror of william_william/uvm-mcdf_v2 on Gitee,0,KafCoppelia/uvm-mcdf_v2,572506427,SystemVerilog,uvm-mcdf_v2,125,6,2024-03-10 16:01:45+00:00,"['mcdf', 'systemverilog', 'uvm']",None
13,https://github.com/openhwgroup/advanced-riscv-verification-methodologies.git,2022-10-20 17:38:57+00:00,Advanced Verification Methodologies for RISC-V and related IP,4,openhwgroup/advanced-riscv-verification-methodologies,554955626,SystemVerilog,advanced-riscv-verification-methodologies,489,6,2024-02-26 07:04:54+00:00,[],
14,https://github.com/Ammar-10xe/RISCV-32I-Single-Cycle-Processor.git,2022-10-23 16:38:16+00:00,"Implementation of RISCV32I Single Cycle Architecture consisting of six base instructions (R, I, B, S, J, U).",2,Ammar-10xe/RISCV-32I-Single-Cycle-Processor,556345610,SystemVerilog,RISCV-32I-Single-Cycle-Processor,321,6,2023-07-15 18:08:07+00:00,[],None
15,https://github.com/MasterPu2020/DigitalSystemDesignUoS.git,2022-10-05 14:02:30+00:00,Some maybe helpful personal notes to the course digital system design in University of Southampton,0,MasterPu2020/DigitalSystemDesignUoS,546090458,SystemVerilog,DigitalSystemDesignUoS,848,5,2023-11-06 16:55:24+00:00,[],None
16,https://github.com/Psichico/Universal_Verification_Methodology.git,2022-11-30 23:26:19+00:00,,2,Psichico/Universal_Verification_Methodology,572737768,SystemVerilog,Universal_Verification_Methodology,21,5,2024-03-16 07:24:58+00:00,[],None
17,https://github.com/Valen1402/Castlab-Systolic-Array-for-CNN.git,2022-11-02 11:50:26+00:00,Hardware accelerator for CNN computation using weight-stationary systolic array,0,Valen1402/Castlab-Systolic-Array-for-CNN,560843222,SystemVerilog,Castlab-Systolic-Array-for-CNN,3213,5,2023-09-20 16:17:10+00:00,[],None
18,https://github.com/fpgasystems/Coyote-CIRCT.git,2022-10-10 15:41:53+00:00,Deploy CIRCT generated circuits with a streaming abstraction (circt-stream) effortlessly through Coyote.,1,fpgasystems/Coyote-CIRCT,549050612,SystemVerilog,Coyote-CIRCT,57,5,2024-03-27 12:28:09+00:00,"['circt', 'coyote', 'fpga', 'hls', 'mlir', 'circt-stream']",None
19,https://github.com/swabianinstruments/TimeTagger-FPGALink-Reference.git,2022-11-07 12:50:19+00:00,TimeTagger FPGALink Reference,1,swabianinstruments/TimeTagger-FPGALink-Reference,562875115,SystemVerilog,TimeTagger-FPGALink-Reference,1402,4,2024-04-09 20:20:46+00:00,[],https://api.github.com/licenses/bsd-3-clause
20,https://github.com/TooyamaYuuouji/UVM_example-amplifier.git,2022-09-27 03:33:35+00:00,A simple UVM project. The DUT(RTL) is a simple amplifier.,0,TooyamaYuuouji/UVM_example-amplifier,541887966,SystemVerilog,UVM_example-amplifier,30,4,2024-04-04 14:07:46+00:00,[],https://api.github.com/licenses/gpl-3.0
21,https://github.com/midimaster21b/spi-bfm.git,2022-11-06 00:08:18+00:00,A quick SPI BFM to assist in SPI device testing and development,1,midimaster21b/spi-bfm,562313994,SystemVerilog,spi-bfm,11,4,2024-03-06 06:18:01+00:00,"['systemverilog', 'fusesoc', 'bfm', 'spi']",None
22,https://github.com/AnthonyAS15/AlgoritmodeBooth-MultiplicadorconSigno.git,2022-10-16 07:36:03+00:00,Tercer proyecto del curso de Diseño Lógico.,0,AnthonyAS15/AlgoritmodeBooth-MultiplicadorconSigno,552268536,SystemVerilog,AlgoritmodeBooth-MultiplicadorconSigno,62,4,2022-11-15 03:25:20+00:00,[],https://api.github.com/licenses/mit
23,https://github.com/ciniml/if202212_gowin.git,2022-10-24 15:45:14+00:00,インターフェース2022年12月号 別冊付録1 ソースコード,2,ciniml/if202212_gowin,556832960,SystemVerilog,if202212_gowin,192,4,2024-03-31 06:16:50+00:00,[],https://api.github.com/licenses/bsl-1.0
24,https://github.com/OFS/ofs-fim-common.git,2022-11-07 20:25:30+00:00,,3,OFS/ofs-fim-common,563058593,SystemVerilog,ofs-fim-common,3301,3,2023-11-10 02:10:08+00:00,[],https://api.github.com/licenses/mit
25,https://github.com/scjacklin/SNNs-with-Asynchronous-NoC_USC_EE552_Spring2022_Project.git,2022-09-30 18:05:02+00:00,"EE552 Asynchronous VLSI Design, Prof Peter A. Beerel, Co-Author Daya Chou",0,scjacklin/SNNs-with-Asynchronous-NoC_USC_EE552_Spring2022_Project,543727900,SystemVerilog,SNNs-with-Asynchronous-NoC_USC_EE552_Spring2022_Project,92,3,2024-04-01 02:33:46+00:00,[],None
26,https://github.com/ks-vandana/Layered-Testbench-For-JK-FlipFlop.git,2022-11-28 14:03:11+00:00,"Layered Testbench using randomized inputs with the help of virtual interfaces, mailboxes, clocking blocks and modports.",0,ks-vandana/Layered-Testbench-For-JK-FlipFlop,571611493,SystemVerilog,Layered-Testbench-For-JK-FlipFlop,11,3,2024-02-22 03:22:28+00:00,[],https://api.github.com/licenses/mit
27,https://github.com/MZMurad/CPE133_Final-Project.git,2022-11-17 21:57:27+00:00,Ballin Fr Fr,1,MZMurad/CPE133_Final-Project,567478004,SystemVerilog,CPE133_Final-Project,17,3,2022-11-24 23:49:39+00:00,[],None
28,https://github.com/charlesziegenbeinjr/573TermProject.git,2022-10-31 02:58:16+00:00,,0,charlesziegenbeinjr/573TermProject,559758395,SystemVerilog,573TermProject,34835,3,2023-05-07 09:01:24+00:00,[],None
29,https://github.com/arthurnamz/Image-Accellerator.git,2022-11-27 12:00:43+00:00,This project involve the CNN but it is done through designing the chip which will handle everything during the time of the image capturing,0,arthurnamz/Image-Accellerator,571170652,SystemVerilog,Image-Accellerator,334,3,2024-03-11 12:52:47+00:00,[],None
30,https://github.com/CompuSAR/control_cpu.git,2022-09-24 09:49:57+00:00,FPGA setup with memory and Risc V CPU,1,CompuSAR/control_cpu,540781092,SystemVerilog,control_cpu,492,3,2024-04-08 10:39:06+00:00,[],None
31,https://github.com/Darksecond/TimeWave.git,2022-10-20 18:37:07+00:00,An FPGA Fantasy Console,0,Darksecond/TimeWave,554981471,SystemVerilog,TimeWave,2261,3,2022-11-27 13:30:36+00:00,"['fpga', 'riscv', 'rust', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
32,https://github.com/microdynamics-cpu/tree-core-ip.git,2022-10-06 01:27:39+00:00,"A series of IP which has cycle-accurate, event-driven simulation models.",0,microdynamics-cpu/tree-core-ip,546373066,SystemVerilog,tree-core-ip,71,3,2023-09-02 11:29:52+00:00,[],https://api.github.com/licenses/gpl-3.0
33,https://github.com/briansune/ZYNQ-HDMI-IP-with-Audio.git,2022-10-07 14:33:55+00:00,ZYNQ HDMI IP with Audio,2,briansune/ZYNQ-HDMI-IP-with-Audio,547349132,SystemVerilog,ZYNQ-HDMI-IP-with-Audio,48,3,2024-01-24 15:39:24+00:00,"['audio', 'fpga', 'hdmi', 'xilinx', 'zynq']",https://api.github.com/licenses/mit
34,https://github.com/Dofingert/matrix_muler.git,2022-11-14 13:16:17+00:00,,0,Dofingert/matrix_muler,565852269,SystemVerilog,matrix_muler,471,2,2024-01-15 03:08:18+00:00,[],None
35,https://github.com/verification-gentleman-blog/creating-uvm-tests-dynamically.git,2022-11-20 15:40:33+00:00,,0,verification-gentleman-blog/creating-uvm-tests-dynamically,568457126,SystemVerilog,creating-uvm-tests-dynamically,33,2,2024-02-27 10:34:20+00:00,[],https://api.github.com/licenses/apache-2.0
36,https://github.com/midimaster21b/i2c-bfm.git,2022-11-05 10:35:15+00:00,A simple I2C BFM,1,midimaster21b/i2c-bfm,562107354,SystemVerilog,i2c-bfm,8,2,2024-02-11 04:29:22+00:00,"['bfm', 'fusesoc', 'i2c', 'systemverilog']",None
37,https://github.com/pulp-platform/axi_vga.git,2022-11-02 11:00:14+00:00,,0,pulp-platform/axi_vga,560825809,SystemVerilog,axi_vga,625,2,2023-07-25 15:03:32+00:00,[],
38,https://github.com/aignacio/soc_components.git,2022-10-31 19:41:47+00:00,,0,aignacio/soc_components,560125651,SystemVerilog,soc_components,48,2,2024-03-12 09:53:14+00:00,[],None
39,https://github.com/akifejaz/HWConv2D.git,2022-11-27 20:40:18+00:00,This repo contains the code for 2D Convolution written in System Verilog. It is based on 64 * 64 matrix & 3 * 3 kernel dimentions constrainsts. ,0,akifejaz/HWConv2D,571315202,SystemVerilog,HWConv2D,7369,2,2023-10-26 16:18:31+00:00,"['2d-convolution-hardware', 'convolution', 'fpga', 'hardware', 'systemverilog']",None
40,https://github.com/charkster/tang_nano-uart_block_ram.git,2022-10-14 04:12:08+00:00,"UART interface to a block ram in the Tang Nano FPGA. No pin connections needed, just use the USB UART.",0,charkster/tang_nano-uart_block_ram,551247234,SystemVerilog,tang_nano-uart_block_ram,2582,2,2023-10-30 19:47:14+00:00,"['block-ram', 'fpga', 'tang-nano', 'uart']",https://api.github.com/licenses/mit
41,https://github.com/patcha2000/MSD-FINAL-PROJECT-GROUP-9.git,2022-11-04 01:38:39+00:00,,0,patcha2000/MSD-FINAL-PROJECT-GROUP-9,561573466,SystemVerilog,MSD-FINAL-PROJECT-GROUP-9,23,2,2023-01-27 08:55:34+00:00,[],None
42,https://github.com/JZJisawesome/Zacore.git,2022-11-20 04:37:10+00:00,Performant RISC-V Processing (Mirror of git.jekel.ca/JZJ/Zacore),0,JZJisawesome/Zacore,568302152,SystemVerilog,Zacore,20,2,2022-11-25 16:09:49+00:00,[],https://api.github.com/licenses/mit
43,https://github.com/LTPhat/DigitalDesignsLab-EE1010.git,2022-10-10 15:01:59+00:00,Verilog code for Digital Circuit Design LAB Course (EE1010) ,0,LTPhat/DigitalDesignsLab-EE1010,549028176,SystemVerilog,DigitalDesignsLab-EE1010,28141,2,2024-01-12 18:40:59+00:00,"['fpga', 'hardware', 'rtl', 'verilog']",https://api.github.com/licenses/gpl-3.0
44,https://github.com/Abbywpy/improving-low-resource-NMT-system.git,2022-10-26 10:11:49+00:00,,0,Abbywpy/improving-low-resource-NMT-system,557794451,SystemVerilog,improving-low-resource-NMT-system,239768,2,2023-01-08 19:15:25+00:00,[],https://api.github.com/licenses/mit
45,https://github.com/Valen1402/Castlab-DMA.git,2022-11-02 11:40:02+00:00,A systhesiable DMA unit on Xilinx FPGA VCU118,0,Valen1402/Castlab-DMA,560839466,SystemVerilog,Castlab-DMA,384,2,2023-10-18 16:08:27+00:00,[],None
46,https://github.com/Pummelo65/Nano4kAudio.git,2022-09-25 14:37:38+00:00,This is a brute-force attempt to port  https://github.com/hdl-util to the Tang Nano 4k FPGA board including the audio feature.  The original code makes use of several system verilog features not fully supported by the Gowin IDE.  Clock generation and IO serialization require device specific handling. The final goal is a pull request to the original project with conditional defines to support the Gowin FPGA and the Tang Nano 4k board.,0,Pummelo65/Nano4kAudio,541201196,SystemVerilog,Nano4kAudio,32,2,2023-12-29 23:20:35+00:00,[],
47,https://github.com/JZJisawesome/JZJCoreF.git,2022-11-20 11:39:48+00:00,"A fast RV32IZifencei soft core implementation with a 2 stage pipeline(ish), written in SystemVerilog! (Mirror of git.jekel.ca/JZJ/jzjcoref)",0,JZJisawesome/JZJCoreF,568388863,SystemVerilog,JZJCoreF,126,2,2023-04-01 03:43:43+00:00,[],https://api.github.com/licenses/mit
48,https://github.com/imjp2020/UVM_FIFO_TB.git,2022-09-24 11:41:13+00:00,This testbench is based on SV and UVM Class based to verify Verilog HDL Design,0,imjp2020/UVM_FIFO_TB,540809689,SystemVerilog,UVM_FIFO_TB,23,2,2023-11-30 04:50:01+00:00,"['system-verilog', 'uvm', 'verilog-hdl']",https://api.github.com/licenses/mit
49,https://github.com/dayzGoBy/I-LOVE-CACHE.git,2022-11-13 10:13:12+00:00,"Implementation of one-level cache memory for CPU, written on SystemVerilog",0,dayzGoBy/I-LOVE-CACHE,565408543,SystemVerilog,I-LOVE-CACHE,2202,2,2024-02-11 04:33:33+00:00,"['systemverilog', 'hdl']",None
50,https://github.com/kyori19/verilog-otp.git,2022-10-29 22:08:46+00:00,VerilogHDL implementation of One-Time Password Algorithm (HOTP),1,kyori19/verilog-otp,559365032,SystemVerilog,verilog-otp,7,2,2023-11-13 09:42:28+00:00,"['verilog', 'hotp', 'onetimepassword', 'systemverilog', 'verilog-hdl']",https://api.github.com/licenses/mit
51,https://github.com/OFS/examples-afu.git,2022-10-26 22:27:07+00:00,OFS Examples,8,OFS/examples-afu,558098141,SystemVerilog,examples-afu,556,2,2024-03-06 00:45:33+00:00,[],https://api.github.com/licenses/mit
52,https://github.com/Yaochenger/openhw-.git,2022-11-15 05:57:32+00:00,,0,Yaochenger/openhw-,566179903,SystemVerilog,openhw-,408374,2,2023-01-16 03:27:03+00:00,[],None
53,https://github.com/Ammar-10xe/RISCV-32I-5-Stage-Pipelined-Processor.git,2022-10-25 13:58:02+00:00,RISC-V-32I-5-stage-Pipelined-Processor,2,Ammar-10xe/RISCV-32I-5-Stage-Pipelined-Processor,557335307,SystemVerilog,RISCV-32I-5-Stage-Pipelined-Processor,77,2,2023-12-17 00:01:03+00:00,[],None
54,https://github.com/MarcoRuta/Light-Hash-Function.git,2022-10-22 08:38:20+00:00,"Project developed for the course ""Hardware and Embedded Security""",0,MarcoRuta/Light-Hash-Function,555752453,SystemVerilog,Light-Hash-Function,675,2,2022-10-22 12:14:37+00:00,[],None
55,https://github.com/paulinog/fpga_training.git,2022-10-19 21:37:05+00:00,FPGA Design workshop (2022),0,paulinog/fpga_training,554468450,SystemVerilog,fpga_training,20933,2,2023-07-26 00:41:36+00:00,[],None
56,https://github.com/shaswat2428/I2C-Protocol-Verification-.git,2022-10-02 08:31:45+00:00,,0,shaswat2428/I2C-Protocol-Verification-,544343689,SystemVerilog,I2C-Protocol-Verification-,5,2,2024-01-31 14:38:52+00:00,[],None
57,https://github.com/kkurenkov/uvm-empty-project.git,2022-10-20 12:37:00+00:00,generator for verification environment,0,kkurenkov/uvm-empty-project,554808280,SystemVerilog,uvm-empty-project,28,2,2023-09-21 08:59:18+00:00,[],None
58,https://github.com/SanketVinchurkar/ECE585_Group19.git,2022-11-04 19:52:45+00:00,,0,SanketVinchurkar/ECE585_Group19,561919569,SystemVerilog,ECE585_Group19,2004,1,2023-03-02 19:26:45+00:00,[],None
59,https://github.com/somewhatdistracted/EE274-Project.git,2022-11-05 06:23:42+00:00,"Hardware implementation of Huffman, rANS coding",0,somewhatdistracted/EE274-Project,562049905,SystemVerilog,EE274-Project,270,1,2022-12-17 06:44:29+00:00,[],https://api.github.com/licenses/mit
60,https://github.com/ECE4278/project2.git,2022-11-28 03:45:19+00:00,,0,ECE4278/project2,571405921,SystemVerilog,project2,15,1,2023-02-17 04:00:41+00:00,[],None
61,https://github.com/shuckc/fpgachess.git,2022-10-27 14:12:18+00:00,This is a stupid idea - pure hardware FPGA chess engine,1,shuckc/fpgachess,558420916,SystemVerilog,fpgachess,135,1,2024-01-22 17:25:39+00:00,[],None
62,https://github.com/XiaoanHe/Posit.git,2022-11-17 19:54:34+00:00,"COMP3200 Individual Project, making a posit adder and multiplier",0,XiaoanHe/Posit,567441022,SystemVerilog,Posit,33236,1,2023-10-14 16:01:00+00:00,[],None
63,https://github.com/SathvikSat/verilog_code.git,2022-11-28 11:10:57+00:00,Verilog code practice/learning 2022,0,SathvikSat/verilog_code,571543297,SystemVerilog,verilog_code,13,1,2022-11-28 12:51:17+00:00,[],None
64,https://github.com/madhu2000u/FCNN-Hardware-Generation-Tool.git,2022-11-11 02:21:02+00:00,Hardware Generation Tool to generate custom Fully-Connected Neural Networks,0,madhu2000u/FCNN-Hardware-Generation-Tool,564577212,SystemVerilog,FCNN-Hardware-Generation-Tool,38,1,2024-04-12 03:52:39+00:00,[],None
65,https://github.com/wilke0818/6111_final_project.git,2022-11-03 03:05:12+00:00,,0,wilke0818/6111_final_project,561138966,SystemVerilog,6111_final_project,1150,1,2022-12-15 01:00:46+00:00,[],None
66,https://github.com/yv19/HardwareVerification.git,2022-11-12 18:12:38+00:00,,0,yv19/HardwareVerification,565224452,SystemVerilog,HardwareVerification,5248,1,2023-02-08 13:22:07+00:00,[],None
67,https://github.com/rabenold/6.111FinalProject.git,2022-11-07 23:48:53+00:00,,1,rabenold/6.111FinalProject,563114467,SystemVerilog,6.111FinalProject,8609,1,2024-01-12 18:45:28+00:00,[],None
68,https://github.com/Kimss0/nand-flash-controller.git,2022-10-12 04:49:44+00:00,,0,Kimss0/nand-flash-controller,550021044,SystemVerilog,nand-flash-controller,772,1,2023-11-06 09:33:14+00:00,[],None
69,https://github.com/zhuxianji007/pwr_prj.git,2022-11-06 04:52:17+00:00,pwr_project,0,zhuxianji007/pwr_prj,562359381,SystemVerilog,pwr_prj,432,1,2022-12-19 02:32:07+00:00,[],None
70,https://github.com/kobakvantrishvili/Processor_Design.git,2022-11-04 14:49:01+00:00,system verilog code for Designing processor.,0,kobakvantrishvili/Processor_Design,561813177,SystemVerilog,Processor_Design,7527,1,2023-09-16 18:46:29+00:00,[],None
71,https://github.com/yovanycunha/LOAC.git,2022-10-21 00:54:23+00:00,meu deus meu senhor me ajuda por favor ,0,yovanycunha/LOAC,555108765,SystemVerilog,LOAC,5,1,2023-03-07 05:48:28+00:00,[],None
72,https://github.com/joshual777/ComputerArchitecture2_VectorCPU.git,2022-10-20 05:33:20+00:00,A Single Instruction Multiple Data (SIMD) type vector. An Application Specific Instruction Set Processor (ASIP) will be carried out to apply a composition of the alpha channel.,0,joshual777/ComputerArchitecture2_VectorCPU,554622624,SystemVerilog,ComputerArchitecture2_VectorCPU,47823,1,2023-09-13 00:58:17+00:00,[],None
73,https://github.com/midimaster21b/uart-bfm.git,2022-11-05 03:48:25+00:00,A simple UART BFM,1,midimaster21b/uart-bfm,562019468,SystemVerilog,uart-bfm,3,1,2024-02-11 03:55:58+00:00,"['bfm', 'fusesoc', 'systemverilog', 'uart']",None
74,https://github.com/nan3037/sit329-task6.1.git,2022-10-13 14:25:54+00:00,,0,nan3037/sit329-task6.1,550912023,SystemVerilog,sit329-task6.1,2,1,2023-09-02 03:45:24+00:00,[],None
75,https://github.com/adithyakashyap95/MSD.git,2022-11-04 20:01:07+00:00,Cache,0,adithyakashyap95/MSD,561921967,SystemVerilog,MSD,2956,1,2024-01-12 18:44:56+00:00,[],None
76,https://github.com/derekhua777/out_of_order_cpu.git,2022-11-07 06:52:17+00:00,,0,derekhua777/out_of_order_cpu,562742965,SystemVerilog,out_of_order_cpu,54,1,2023-10-12 19:21:52+00:00,[],None
77,https://github.com/Pandulc/Arquitectura-I.git,2022-10-28 22:23:00+00:00,,1,Pandulc/Arquitectura-I,559040132,SystemVerilog,Arquitectura-I,851,1,2023-11-17 11:51:42+00:00,[],None
78,https://github.com/kirtan03/Pipelined-Processor.git,2022-10-23 08:38:25+00:00,CSN-221 core project,4,kirtan03/Pipelined-Processor,556178459,SystemVerilog,Pipelined-Processor,9,1,2022-12-23 07:22:01+00:00,[],None
79,https://github.com/PrathammGupta/sit329-5.1.git,2022-10-10 05:36:43+00:00,,0,PrathammGupta/sit329-5.1,548742269,SystemVerilog,sit329-5.1,1,1,2023-09-02 03:45:11+00:00,[],None
80,https://github.com/patel-soham/system-verilog-practice.git,2022-11-24 01:52:49+00:00,Practice codes and assignments in system verilog.,0,patel-soham/system-verilog-practice,569950899,SystemVerilog,system-verilog-practice,602,1,2023-09-12 12:35:58+00:00,[],None
81,https://github.com/lbreyer/Segway.git,2022-11-30 17:03:28+00:00,ECE 551 Final Design Project,0,lbreyer/Segway,572620911,SystemVerilog,Segway,1845,1,2022-12-15 01:25:36+00:00,[],None
82,https://github.com/edgarigl/rvee.git,2022-11-06 20:14:46+00:00,,0,edgarigl/rvee,562592995,SystemVerilog,rvee,48,1,2022-11-07 00:20:19+00:00,[],None
83,https://github.com/TeoOrt/RISC-CPU-.git,2022-10-15 23:16:05+00:00,This project contains one risc processor that can check for ECU parameters.,0,TeoOrt/RISC-CPU-,552142871,SystemVerilog,RISC-CPU-,4,1,2024-03-02 17:49:37+00:00,[],None
84,https://github.com/temilolafaith/EE271-rasterizer.git,2022-11-08 05:28:11+00:00,,0,temilolafaith/EE271-rasterizer,563199306,SystemVerilog,EE271-rasterizer,8088,1,2022-12-19 07:48:21+00:00,[],None
85,https://github.com/renaturation/DNN_PUF_FPGA.git,2022-11-18 06:31:09+00:00,,0,renaturation/DNN_PUF_FPGA,567604625,SystemVerilog,DNN_PUF_FPGA,5400,1,2024-03-18 12:48:52+00:00,[],None
86,https://github.com/wanguowu/wanguowu-wanguowu-eecs470_f22_project3_wanguo.git,2022-10-31 04:00:46+00:00,,0,wanguowu/wanguowu-wanguowu-eecs470_f22_project3_wanguo,559774009,SystemVerilog,wanguowu-wanguowu-eecs470_f22_project3_wanguo,211,1,2024-04-05 08:39:27+00:00,[],None
87,https://github.com/mt-class/jhu-multilingual.git,2022-11-26 19:27:30+00:00,This is a Multilingual Natural Language Processing Course. The goal is to be a compliment to the mt-class/,1,mt-class/jhu-multilingual,570986249,SystemVerilog,jhu-multilingual,189717,1,2024-01-23 18:00:51+00:00,[],https://api.github.com/licenses/mit
88,https://github.com/Ahsan-Toufiq/100DaysofRTL.git,2022-10-22 09:23:03+00:00,System-Verilog,0,Ahsan-Toufiq/100DaysofRTL,555766402,SystemVerilog,100DaysofRTL,19,1,2023-02-11 13:59:16+00:00,[],None
89,https://github.com/Maxpicca-Li/colab-rv64.git,2022-10-22 16:53:55+00:00,"rv64-ima, for using in the course of  computer composition (hardware design) of Chongqing University",0,Maxpicca-Li/colab-rv64,555924241,SystemVerilog,colab-rv64,19,1,2022-10-23 12:27:08+00:00,[],None
90,https://github.com/ALittleBitFour/msgpack_sv.git,2022-10-17 20:05:05+00:00,MsgPack_SV is a UVM compatible SystemVerilog implementation of an encoder and decoder for the MessagePack serialization format.,1,ALittleBitFour/msgpack_sv,553156918,SystemVerilog,msgpack_sv,85,1,2023-09-09 11:04:31+00:00,"['msgpack', 'serialization', 'systemverilog']",https://api.github.com/licenses/mit
91,https://github.com/su-elena/h264.git,2022-11-07 19:58:24+00:00,,0,su-elena/h264,563049271,SystemVerilog,h264,95,1,2023-04-17 06:12:22+00:00,[],None
92,https://github.com/Jfadi/VerilogPong.git,2022-10-18 22:08:22+00:00,Pong game using Verilog. ,2,Jfadi/VerilogPong,553856661,SystemVerilog,VerilogPong,19915,1,2023-12-20 12:37:03+00:00,[],None
93,https://github.com/flyskywalker/CAM.git,2022-11-26 12:16:48+00:00,CAM with systemverilog,0,flyskywalker/CAM,570874926,SystemVerilog,CAM,16,1,2022-12-22 06:21:44+00:00,[],https://api.github.com/licenses/gpl-2.0
94,https://github.com/mitshine/APB-Protocol-with-scoreboard.git,2022-11-25 13:37:43+00:00,APB protocol for revision,0,mitshine/APB-Protocol-with-scoreboard,570559621,SystemVerilog,APB-Protocol-with-scoreboard,38,1,2023-09-18 12:31:25+00:00,[],None
95,https://github.com/anirudh-arunkumar/Pipelined-Processor.git,2022-10-04 16:07:44+00:00,"Stalling, Forwarding, and Flushing capabilities made in Verilog",0,anirudh-arunkumar/Pipelined-Processor,545578538,SystemVerilog,Pipelined-Processor,18,1,2022-10-20 21:00:48+00:00,[],None
96,https://github.com/Kilby-tech/Nepa.git,2022-11-06 23:38:58+00:00,Neural Processing Architecture,0,Kilby-tech/Nepa,562638714,SystemVerilog,Nepa,2,1,2022-12-27 07:43:18+00:00,[],None
97,https://github.com/pinjala31/Team_MSD_PROJECT.git,2022-11-04 00:40:31+00:00,,0,pinjala31/Team_MSD_PROJECT,561559987,SystemVerilog,Team_MSD_PROJECT,20,1,2023-01-31 20:49:23+00:00,[],None
98,https://github.com/Danster67/ece437.git,2022-10-25 15:39:41+00:00,,0,Danster67/ece437,557386630,SystemVerilog,ece437,157,1,2023-01-31 20:43:38+00:00,[],None
99,https://github.com/AhsanAliUet/riscv-3-stage-pipelined-processor-core.git,2022-10-17 10:59:08+00:00,Fully implemented 3 staged pipelined RISC-V processor with hazard detection unit. Hazard detection unit solves the hazards by stalling and forwarding technique. CSR and MRET Instructions are also supported as they can configure and manage all the interrupt/exceptions.,0,AhsanAliUet/riscv-3-stage-pipelined-processor-core,552868166,SystemVerilog,riscv-3-stage-pipelined-processor-core,42365,1,2023-12-07 16:59:38+00:00,"['csr', 'interrupts', 'pipelined-processors', 'riscv', '3-stage-pipelined-riscv']",None
100,https://github.com/Linger0/sv.git,2022-10-19 07:26:59+00:00,The SystemVerilog design examples.,0,Linger0/sv,554060567,SystemVerilog,sv,31,1,2023-05-18 06:13:20+00:00,[],None
101,https://github.com/PathakamuriNaresh/AXI_AVIP.git,2022-09-27 03:45:36+00:00,,0,PathakamuriNaresh/AXI_AVIP,541890883,SystemVerilog,AXI_AVIP,40149,1,2023-04-10 17:21:38+00:00,[],https://api.github.com/licenses/mit
102,https://github.com/NEUCSLAB/RV32_sram_func_2022.git,2022-11-20 06:41:15+00:00,2022 NEU CS LAB - RV32I function tests on sram,0,NEUCSLAB/RV32_sram_func_2022,568323988,SystemVerilog,RV32_sram_func_2022,31444,1,2022-11-20 09:24:51+00:00,[],None
103,https://github.com/charrich97/Decode_Verification.git,2022-10-31 04:03:17+00:00,Decoder UVM Testbench,0,charrich97/Decode_Verification,559774625,SystemVerilog,Decode_Verification,84,1,2023-04-05 11:18:24+00:00,[],None
104,https://github.com/SamarthBonthala/MIPS32_Hazard_Handling_BP.git,2022-10-23 20:24:04+00:00,VLSI-I Course Project,0,SamarthBonthala/MIPS32_Hazard_Handling_BP,556424518,SystemVerilog,MIPS32_Hazard_Handling_BP,17,1,2023-07-04 18:52:18+00:00,[],None
105,https://github.com/HAMZA-AFZAL404/RISC-V-3-Staged-pipelined.git,2022-11-20 19:34:04+00:00,,0,HAMZA-AFZAL404/RISC-V-3-Staged-pipelined,568520677,SystemVerilog,RISC-V-3-Staged-pipelined,10,1,2022-11-21 10:05:44+00:00,[],None
106,https://github.com/AadityaSuri/Mandelbrot_VGA.git,2022-11-20 02:19:12+00:00,,0,AadityaSuri/Mandelbrot_VGA,568279389,SystemVerilog,Mandelbrot_VGA,1403,1,2022-12-07 00:40:06+00:00,[],None
107,https://github.com/UBC-CPEN311-Classrooms/2022w1-lab4-update1.git,2022-11-24 14:28:15+00:00,,9,UBC-CPEN311-Classrooms/2022w1-lab4-update1,570184265,SystemVerilog,2022w1-lab4-update1,31682,1,2022-11-25 22:46:50+00:00,[],None
108,https://github.com/npalmer5620/matrix_unit_int8.git,2022-11-22 17:28:54+00:00,8x8 Systolic Array performing matrix operations,0,npalmer5620/matrix_unit_int8,569376838,SystemVerilog,matrix_unit_int8,114,1,2023-02-02 19:11:59+00:00,[],None
109,https://github.com/Datum-Technology-Corporation/mio_demo.git,2022-11-03 22:06:50+00:00,Moore.io Demo Project,0,Datum-Technology-Corporation/mio_demo,561525502,SystemVerilog,mio_demo,1075,1,2023-03-28 02:42:11+00:00,"['asic', 'asic-design', 'asic-verification', 'design-verification', 'digital-design', 'fpga', 'uvm', 'uvm-verification']",None
110,https://github.com/Kilby-tech/Capablanca.git,2022-11-06 23:51:24+00:00,RISC-V processor developed for portable high performance computing,0,Kilby-tech/Capablanca,562641055,SystemVerilog,Capablanca,3,1,2022-12-27 07:43:21+00:00,[],None
111,https://github.com/noemiabril/C64_MiSTer-DE10-Standard.git,2022-11-27 14:55:22+00:00,C64 Core for MiSTer DE10-Standard,0,noemiabril/C64_MiSTer-DE10-Standard,571220577,SystemVerilog,C64_MiSTer-DE10-Standard,884,1,2023-03-17 14:13:07+00:00,[],None
112,https://github.com/KAMOME-code/Modular-Inverse-in-Verilog.git,2022-11-11 05:12:09+00:00,"Montgomery Inverse with Binary Extended Euclidean Algorithm, Easily expandable",1,KAMOME-code/Modular-Inverse-in-Verilog,564618677,SystemVerilog,Modular-Inverse-in-Verilog,166,1,2024-01-17 21:52:15+00:00,[],https://api.github.com/licenses/mit
113,https://github.com/TaviEz/MIPS-Verilog.git,2022-10-01 07:20:20+00:00,,0,TaviEz/MIPS-Verilog,543931197,SystemVerilog,MIPS-Verilog,3034,1,2022-10-16 14:39:32+00:00,[],None
114,https://github.com/shuyuan-liu/iac_lab_4_group_34.git,2022-11-18 10:26:03+00:00,2nd year EIE IAC lab 4 — simplified RISC-V implementation,0,shuyuan-liu/iac_lab_4_group_34,567681224,SystemVerilog,iac_lab_4_group_34,2610,1,2023-01-31 21:00:56+00:00,[],None
115,https://github.com/LongStudy/tinyriscv_arty_100t.git,2022-11-14 13:41:35+00:00,tinyriscv for arty a7 100t,1,LongStudy/tinyriscv_arty_100t,565862833,SystemVerilog,tinyriscv_arty_100t,31877,1,2022-12-05 13:43:29+00:00,[],None
116,https://github.com/Ravikumar0110/G2UVM_sig_access_UVM_verification.git,2022-11-25 12:46:19+00:00,,1,Ravikumar0110/G2UVM_sig_access_UVM_verification,570541770,SystemVerilog,G2UVM_sig_access_UVM_verification,23,1,2023-04-05 11:22:04+00:00,[],None
117,https://github.com/Chlience/BUAA-CO-2022.git,2022-11-12 11:19:45+00:00,北京航空航天大学 CO 课程作业,0,Chlience/BUAA-CO-2022,565108982,SystemVerilog,BUAA-CO-2022,140,1,2023-02-21 07:22:48+00:00,[],https://api.github.com/licenses/mit
118,https://github.com/EmbeddedCamerata/32bits-CLA-and-ALU-Verification.git,2022-10-22 12:27:56+00:00,32 bits CLA(Carry Lookahead Adder) and ALU RTL and verification. 32位块间超前的超前进位加法器及ALU设计与验证,0,EmbeddedCamerata/32bits-CLA-and-ALU-Verification,555827252,SystemVerilog,32bits-CLA-and-ALU-Verification,185,1,2023-12-18 12:29:29+00:00,"['alu', 'carry-look-ahead-adder', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
119,https://github.com/einmpei/course_vlsidesign.git,2022-10-10 10:15:49+00:00,,0,einmpei/course_vlsidesign,548874220,SystemVerilog,course_vlsidesign,12892,1,2023-11-17 07:20:41+00:00,[],None
120,https://github.com/dtzSiFive/circt-pp-results.git,2022-11-02 17:39:06+00:00,Results of circt-test-flake .,0,dtzSiFive/circt-pp-results,560988333,SystemVerilog,circt-pp-results,4729,0,2022-11-02 17:44:50+00:00,[],None
121,https://github.com/CODE-REFINARY/Ziggomatic.git,2022-11-03 00:20:28+00:00,The Ziggomatic is a single cycle processor design I created in system verilog for a university course on computer architecture. ,0,CODE-REFINARY/Ziggomatic,561101125,SystemVerilog,Ziggomatic,123,0,2022-11-03 00:38:03+00:00,[],None
122,https://github.com/SerdarUnal132/deneme_training.git,2022-10-15 07:27:56+00:00,,0,SerdarUnal132/deneme_training,551833720,SystemVerilog,deneme_training,5,0,2022-10-15 07:59:53+00:00,[],None
123,https://github.com/miguel100398/matrix_multiplier_SV.git,2022-10-28 03:33:20+00:00,,0,miguel100398/matrix_multiplier_SV,558678196,SystemVerilog,matrix_multiplier_SV,36,0,2022-10-28 05:03:59+00:00,[],None
124,https://github.com/chibaf/FPGA_Tang_Nano_9K_blink.git,2022-11-05 10:05:31+00:00,,0,chibaf/FPGA_Tang_Nano_9K_blink,562099738,SystemVerilog,FPGA_Tang_Nano_9K_blink,11,0,2022-11-06 07:12:58+00:00,[],None
125,https://github.com/satvick16/ece253.git,2022-11-06 19:02:23+00:00,Digital Logic and Computer Systems (SystemVerilog and RISC-V Assembly),0,satvick16/ece253,562573613,SystemVerilog,ece253,38,0,2022-11-23 23:20:07+00:00,[],None
126,https://github.com/VINUTHNA-SRI/UVM.git,2022-10-25 17:54:04+00:00,,0,VINUTHNA-SRI/UVM,557447713,SystemVerilog,UVM,14,0,2022-10-25 21:41:08+00:00,[],None
127,https://github.com/sagarpattar05/uvm.git,2022-10-25 16:51:13+00:00,,0,sagarpattar05/uvm,557419899,SystemVerilog,uvm,13099,0,2022-11-09 06:24:55+00:00,[],None
128,https://github.com/misaellopezg/MIPS.git,2022-11-03 16:03:51+00:00,,0,misaellopezg/MIPS,561403639,SystemVerilog,MIPS,53758,0,2023-02-08 02:59:29+00:00,[],None
129,https://github.com/valmyr/Desafios-Microeletronica-Digital.git,2022-10-02 21:25:41+00:00,,0,valmyr/Desafios-Microeletronica-Digital,544594129,SystemVerilog,Desafios-Microeletronica-Digital,379,0,2022-10-17 11:58:30+00:00,[],None
130,https://github.com/PE-611/Sensor_reader.git,2022-10-08 17:49:47+00:00,X-RAY sensor reader with UART transmit data ,0,PE-611/Sensor_reader,547985806,SystemVerilog,Sensor_reader,4322,0,2022-10-08 17:51:25+00:00,[],None
131,https://github.com/nan3037/SIT329--TASK5.1.git,2022-10-10 13:13:12+00:00,,0,nan3037/SIT329--TASK5.1,548964546,SystemVerilog,SIT329--TASK5.1,2,0,2022-10-10 13:13:37+00:00,[],None
132,https://github.com/meenalpannase/Module2_apb_uvm.git,2022-10-11 07:19:02+00:00,,0,meenalpannase/Module2_apb_uvm,549433310,SystemVerilog,Module2_apb_uvm,309,0,2022-10-11 07:19:20+00:00,[],None
133,https://github.com/nowicki-yari/ChipDesignAndVerification.git,2022-09-29 07:13:00+00:00,,0,nowicki-yari/ChipDesignAndVerification,542973725,SystemVerilog,ChipDesignAndVerification,844,0,2023-07-28 07:29:35+00:00,[],None
134,https://github.com/Danil1997Dev/RSA_Xilinx.git,2022-09-24 17:02:00+00:00,,0,Danil1997Dev/RSA_Xilinx,540903502,SystemVerilog,RSA_Xilinx,2893,0,2022-09-24 17:06:20+00:00,[],None
135,https://github.com/padung99/Metrotek_LAB4.git,2022-10-04 09:16:04+00:00,,0,padung99/Metrotek_LAB4,545384567,SystemVerilog,Metrotek_LAB4,69,0,2023-08-28 04:24:23+00:00,[],None
136,https://github.com/MasterPlayer/axi-timer-averager.git,2022-10-04 12:37:34+00:00,AXI controlled timer for measurement average time of performance,0,MasterPlayer/axi-timer-averager,545472469,SystemVerilog,axi-timer-averager,7,0,2022-10-04 15:42:12+00:00,[],https://api.github.com/licenses/mit
137,https://github.com/Jerry-03/Syncfifo.git,2022-10-07 05:35:48+00:00,同步fifo设计，counter记录读满状态,0,Jerry-03/Syncfifo,547085661,SystemVerilog,Syncfifo,916,0,2022-10-07 05:37:16+00:00,[],None
138,https://github.com/ECE4278/lab5.git,2022-10-11 15:10:45+00:00,,0,ECE4278/lab5,549682164,SystemVerilog,lab5,12,0,2022-10-11 16:35:49+00:00,[],None
139,https://github.com/caleb-ad/TRNG.git,2022-10-20 20:49:14+00:00,CPE426,0,caleb-ad/TRNG,555035111,SystemVerilog,TRNG,44,0,2022-10-20 20:49:58+00:00,[],None
140,https://github.com/Bardisk/dlcce-labs.git,2022-10-13 20:41:52+00:00,labs of DLCCE course of Nanjing University,0,Bardisk/dlcce-labs,551094565,SystemVerilog,dlcce-labs,11014,0,2023-09-27 10:03:55+00:00,[],None
141,https://github.com/halab1t/Combination-Lock---Verilog.git,2022-10-23 16:36:05+00:00,Lab 3 of CPEN 211,0,halab1t/Combination-Lock---Verilog,556344777,SystemVerilog,Combination-Lock---Verilog,8221,0,2022-10-23 16:39:36+00:00,[],None
142,https://github.com/kailasbk/fpga-360.git,2022-10-26 04:04:53+00:00,A 3D OBJ model viewer to be deployed on a Nexys A7 FPGA board,0,kailasbk/fpga-360,557659942,SystemVerilog,fpga-360,228,0,2023-01-19 19:22:23+00:00,[],None
143,https://github.com/shuny42657/6.205_final_project.git,2022-11-02 21:17:20+00:00,,0,shuny42657/6.205_final_project,561058757,SystemVerilog,6.205_final_project,3404,0,2022-11-17 17:04:03+00:00,[],None
144,https://github.com/zieglershai/Digger.git,2022-11-11 18:21:32+00:00,systemverylog version to the Digger game,0,zieglershai/Digger,564883847,SystemVerilog,Digger,8268,0,2022-11-13 20:34:31+00:00,[],None
145,https://github.com/alishahanda/551.git,2022-11-16 16:47:57+00:00,,0,alishahanda/551,566900777,SystemVerilog,551,8010,0,2022-11-16 16:51:45+00:00,[],None
146,https://github.com/RyanHunter-DV/rhVM.git,2022-11-17 07:47:34+00:00,ryanhunter verification methodology,0,RyanHunter-DV/rhVM,567162234,SystemVerilog,rhVM,156,0,2022-12-19 13:31:32+00:00,[],None
147,https://github.com/italoaraujooj/loac.git,2022-12-01 23:31:07+00:00,Roteiros da disciplina Laboratório de Organização e Arquitetura de Computadores do curso de CC da UFCG.,0,italoaraujooj/loac,573205760,SystemVerilog,loac,3,0,2022-12-01 23:32:07+00:00,[],None
148,https://github.com/shireen1512/captronic_formation_fpga_img_proc.git,2022-11-24 15:07:07+00:00,,0,shireen1512/captronic_formation_fpga_img_proc,570199067,,captronic_formation_fpga_img_proc,261320,0,2022-11-23 08:41:12+00:00,[],None
149,https://github.com/PathakamuriNaresh/LearGit.git,2022-11-12 13:20:04+00:00,LearnGit_Youtube,0,PathakamuriNaresh/LearGit,565140885,SystemVerilog,LearGit,2,0,2022-11-12 13:21:35+00:00,[],None
150,https://github.com/alizademhdi/MIPS-Processor.git,2022-10-28 09:15:23+00:00,we design a mips processor with cace and multicycle memory and floating-point coprocessor,0,alizademhdi/MIPS-Processor,558776540,SystemVerilog,MIPS-Processor,2036,0,2022-10-28 09:24:34+00:00,[],None
151,https://github.com/rijdmc419/ECE_272_Final_Project.git,2022-11-09 02:21:34+00:00,PS/2 Micro-Tonal keyboard using FPGA,0,rijdmc419/ECE_272_Final_Project,563635761,SystemVerilog,ECE_272_Final_Project,20127,0,2022-11-21 04:46:58+00:00,[],None
152,https://github.com/lisneygit/-Sequence_Detector_SV.git,2022-11-19 21:06:43+00:00,,0,lisneygit/-Sequence_Detector_SV,568227230,SystemVerilog,-Sequence_Detector_SV,1,0,2022-11-19 22:36:18+00:00,[],None
153,https://github.com/Sharmi-Rajakumaran/Dual_Port_RAM.git,2022-11-18 10:18:39+00:00,,0,Sharmi-Rajakumaran/Dual_Port_RAM,567678744,SystemVerilog,Dual_Port_RAM,18,0,2022-11-18 10:28:03+00:00,[],None
154,https://github.com/MendelWells/final_project_hack_computer.git,2022-10-27 09:47:50+00:00,,0,MendelWells/final_project_hack_computer,558311702,SystemVerilog,final_project_hack_computer,718,0,2022-10-27 09:53:31+00:00,[],None
155,https://github.com/bguan2022/Scripting.git,2022-09-28 17:11:56+00:00,,0,bguan2022/Scripting,542705201,SystemVerilog,Scripting,25,0,2022-12-15 23:47:18+00:00,[],None
156,https://github.com/kavyas18/verilog_tutorial_edge_count.git,2022-09-30 15:42:24+00:00,,0,kavyas18/verilog_tutorial_edge_count,543671711,SystemVerilog,verilog_tutorial_edge_count,14,0,2023-01-26 21:52:30+00:00,[],None
157,https://github.com/PopovArtS/Check_unit.git,2022-10-06 16:40:39+00:00,Проверка узла с организацией общения с PC по протоколу Ethernet через микросхему DP83848I (нет поломка после ответа на типе фрейма),0,PopovArtS/Check_unit,546788302,SystemVerilog,Check_unit,27,0,2022-10-06 16:52:29+00:00,[],None
158,https://github.com/ECE4278/project1.git,2022-10-18 16:31:50+00:00,,0,ECE4278/project1,553708555,SystemVerilog,project1,13,0,2022-10-19 01:29:31+00:00,[],None
159,https://github.com/fightforit/systemverilog-tutorial.git,2022-10-09 03:24:27+00:00,SystemVerilog,0,fightforit/systemverilog-tutorial,548171368,SystemVerilog,systemverilog-tutorial,34,0,2023-01-10 02:59:12+00:00,[],None
160,https://github.com/riyabhat2002/EBike.git,2022-10-17 22:21:42+00:00,,0,riyabhat2002/EBike,553210704,SystemVerilog,EBike,36,0,2022-10-17 22:35:25+00:00,[],None
161,https://github.com/Jutenbezbuten/VDIC.git,2022-10-13 14:51:11+00:00,VDIC MTM 22/23,0,Jutenbezbuten/VDIC,550926844,SystemVerilog,VDIC,761,0,2022-11-03 11:44:45+00:00,[],None
162,https://github.com/MJurczak-PMarchut/VDIC.git,2022-10-13 14:11:11+00:00,,0,MJurczak-PMarchut/VDIC,550903475,SystemVerilog,VDIC,689,0,2022-10-20 15:18:49+00:00,[],None
163,https://github.com/ArslaanShamim/50_programs-of-RTL_systemverilog.git,2022-10-08 09:37:40+00:00,Making 50 programs of RTL using System Verilog language with the help of EDAPLAYGROUND ,0,ArslaanShamim/50_programs-of-RTL_systemverilog,547786506,SystemVerilog,50_programs-of-RTL_systemverilog,18,0,2022-10-20 18:12:48+00:00,[],None
164,https://github.com/SeamusFinlayson/Digital-Hardware-Based-Spectrum-Analyzer.git,2022-10-23 23:41:14+00:00,This repository is an implementation of a spectrum analyzer using System Verilog.,0,SeamusFinlayson/Digital-Hardware-Based-Spectrum-Analyzer,556477251,SystemVerilog,Digital-Hardware-Based-Spectrum-Analyzer,16,0,2023-09-24 19:34:35+00:00,"['fpga', 'verilog']",None
165,https://github.com/rpeters54/Snake-in-RISC-V.git,2022-10-23 05:26:08+00:00,,0,rpeters54/Snake-in-RISC-V,556125233,SystemVerilog,Snake-in-RISC-V,1012,0,2022-10-23 05:39:56+00:00,[],None
166,https://github.com/T-Szymk/sync_fifo.git,2022-11-06 12:46:44+00:00,Synchronous FIFO implemented in VHDL,0,T-Szymk/sync_fifo,562461845,SystemVerilog,sync_fifo,5,0,2022-11-06 13:27:11+00:00,[],None
167,https://github.com/skipfie/CPEN211.git,2022-10-24 23:08:49+00:00,CPEN 211: Introduction to Microcomputers 2022W1 with Prof. Lis,0,skipfie/CPEN211,557003112,SystemVerilog,CPEN211,29362,0,2023-10-11 07:16:23+00:00,"['systemverilog', 'university-course', 'asic-design', 'datapath-design', 'finite-state-machine', 'ubc', 'ubc-engineering']",None
168,https://github.com/PathakamuriNaresh/first_git.git,2022-11-13 16:56:11+00:00,,0,PathakamuriNaresh/first_git,565517632,SystemVerilog,first_git,2,0,2022-11-13 16:59:17+00:00,[],None
169,https://github.com/NakajoLab/Accelerator_for_Convolution.git,2022-11-14 09:24:16+00:00,,0,NakajoLab/Accelerator_for_Convolution,565763042,SystemVerilog,Accelerator_for_Convolution,33,0,2022-11-14 09:32:41+00:00,[],None
170,https://github.com/inigo-selwood/ickenham.git,2022-11-14 21:34:38+00:00,A 32-bit soft-core CPU,0,inigo-selwood/ickenham,566049080,SystemVerilog,ickenham,169,0,2022-11-14 21:36:41+00:00,[],None
171,https://github.com/rskumar-49/fpgario_kart.git,2022-11-11 15:47:31+00:00,,0,rskumar-49/fpgario_kart,564830732,SystemVerilog,fpgario_kart,6583,0,2022-12-15 00:59:11+00:00,[],None
172,https://github.com/flaviens/verisegf2.git,2022-10-28 14:23:52+00:00,,0,flaviens/verisegf2,558888559,SystemVerilog,verisegf2,1410,0,2022-10-28 14:26:26+00:00,[],None
173,https://github.com/mysticlong/FPGA.git,2022-11-01 19:23:29+00:00,,0,mysticlong/FPGA,560565679,SystemVerilog,FPGA,107,0,2022-11-01 19:29:46+00:00,[],None
174,https://github.com/Marwa2019uet/riscv.git,2022-11-07 18:04:23+00:00,riscv single cycle implementation in system verilog,0,Marwa2019uet/riscv,563007906,SystemVerilog,riscv,6,0,2023-01-27 19:09:13+00:00,[],None
175,https://github.com/Indifference061/Decode38.git,2022-11-08 06:24:50+00:00,38译码器,0,Indifference061/Decode38,563215182,SystemVerilog,Decode38,5,0,2022-11-08 06:30:28+00:00,[],https://api.github.com/licenses/mit
176,https://github.com/Sourishs500/DAV2022.git,2022-11-07 22:48:44+00:00,"code for DAV project, 2022. Sourish Saswade, George Zhou, Marvin",0,Sourishs500/DAV2022,563100458,SystemVerilog,DAV2022,19,0,2022-11-09 01:51:26+00:00,[],None
177,https://github.com/Dr-Mirzakuchaki-IUST-TAs/400721019-400721055.git,2022-12-01 14:32:27+00:00,,2,Dr-Mirzakuchaki-IUST-TAs/400721019-400721055,573022167,SystemVerilog,400721019-400721055,4458,0,2023-01-25 20:12:48+00:00,[],None
178,https://github.com/wshenyi/Design-Verification-Examples.git,2022-11-25 05:35:03+00:00,,0,wshenyi/Design-Verification-Examples,570407036,SystemVerilog,Design-Verification-Examples,22,0,2022-12-09 02:32:06+00:00,[],None
179,https://github.com/tsotnep/COMPE475_project.git,2022-11-05 06:02:59+00:00,,0,tsotnep/COMPE475_project,562045619,,COMPE475_project,2,0,2022-11-04 17:16:24+00:00,[],None
180,https://github.com/mmoldsvor/risc-v-cpu.git,2022-11-19 10:11:07+00:00,A Risc-V RV32I implementation in SystemVerilog,0,mmoldsvor/risc-v-cpu,568057094,SystemVerilog,risc-v-cpu,18,0,2022-11-19 10:15:29+00:00,[],None
181,https://github.com/vanessaguzmann/kylie-i-owe-you-guys-my-organs.git,2022-11-19 04:01:06+00:00,cpe133 mult controller,0,vanessaguzmann/kylie-i-owe-you-guys-my-organs,567978691,SystemVerilog,kylie-i-owe-you-guys-my-organs,1,0,2022-11-19 04:34:38+00:00,[],None
182,https://github.com/SweeetPotato/lab3b.git,2022-11-29 19:43:57+00:00,ENEL453,1,SweeetPotato/lab3b,572213435,SystemVerilog,lab3b,21,0,2022-11-29 19:45:45+00:00,[],None
183,https://github.com/distractedlambda/khdl.git,2022-10-08 22:53:02+00:00,Experiments in generating Verilog using a Kotlin DSL,0,distractedlambda/khdl,548090517,SystemVerilog,khdl,189,0,2023-11-26 19:36:11+00:00,[],https://api.github.com/licenses/unlicense
184,https://github.com/jacob-waskowic/cme433-lr.git,2022-11-09 18:48:38+00:00,Literature review for cme433,0,jacob-waskowic/cme433-lr,563986031,SystemVerilog,cme433-lr,19,0,2022-11-09 21:20:54+00:00,[],None
185,https://github.com/vishwajeet-sinh/Uart_to_I2C.git,2022-11-25 20:04:42+00:00,UART_TO_I2C_BUS_BRIDGE : Design,0,vishwajeet-sinh/Uart_to_I2C,570681115,SystemVerilog,Uart_to_I2C,41,0,2024-02-21 09:19:55+00:00,[],None
186,https://github.com/MGalaxy1984/OTAccelerator.git,2022-11-18 04:12:18+00:00,,0,MGalaxy1984/OTAccelerator,567570796,SystemVerilog,OTAccelerator,17,0,2023-04-11 18:54:16+00:00,[],None
187,https://github.com/rajabatra/multicycleprocessorverilog.git,2022-11-30 19:07:50+00:00,A multicycle processor written in Verilog. Includes a test bench ,0,rajabatra/multicycleprocessorverilog,572666251,SystemVerilog,multicycleprocessorverilog,5,0,2022-11-30 19:08:28+00:00,[],None
188,https://github.com/Mohamed0x3/AES.git,2022-10-02 15:53:54+00:00,Advanced Encryption Standard,0,Mohamed0x3/AES,544487087,SystemVerilog,AES,18359,0,2022-10-02 16:05:14+00:00,[],None
189,https://github.com/piggy0622/01-rtl_kernel_workflow.git,2022-10-14 02:41:47+00:00,,0,piggy0622/01-rtl_kernel_workflow,551216711,SystemVerilog,01-rtl_kernel_workflow,4225,0,2022-10-14 02:42:05+00:00,[],None
190,https://github.com/charles-bezerra/loac.git,2022-10-25 01:55:59+00:00,,0,charles-bezerra/loac,557052838,SystemVerilog,loac,5,0,2022-10-25 01:57:00+00:00,[],None
191,https://github.com/liloheinrich/HammingCode.git,2022-11-17 01:57:25+00:00,Computer Architecture Project Hamming Code,1,liloheinrich/HammingCode,567067403,SystemVerilog,HammingCode,1158,0,2022-11-17 03:23:04+00:00,[],None
192,https://github.com/infinitymdm/cu-fpga.git,2022-11-15 03:38:55+00:00,Fun with the Alchitry Cu FPGA board,0,infinitymdm/cu-fpga,566143602,SystemVerilog,cu-fpga,238,0,2023-06-07 23:48:57+00:00,[],None
193,https://github.com/Palavelli-Naidu/UVM_SPI.git,2022-11-11 05:28:04+00:00,,0,Palavelli-Naidu/UVM_SPI,564622897,SystemVerilog,UVM_SPI,3,0,2022-11-11 05:34:05+00:00,[],None
194,https://github.com/JoaoVboa/trabalho.git,2022-11-25 22:13:04+00:00,,0,JoaoVboa/trabalho,570708325,SystemVerilog,trabalho,3,0,2022-11-25 22:18:09+00:00,[],None
195,https://github.com/Fall-2022-Classes/fa21-final-project-two-rats.git,2022-11-28 20:29:45+00:00,fa21-final-project-two-rats created by GitHub Classroom,0,Fall-2022-Classes/fa21-final-project-two-rats,571758319,SystemVerilog,fa21-final-project-two-rats,267,0,2022-12-07 19:49:04+00:00,[],None
196,https://github.com/RussellChen1228/LZ77_Encoder_and_Decoder.git,2022-11-15 13:37:46+00:00,,0,RussellChen1228/LZ77_Encoder_and_Decoder,566346668,SystemVerilog,LZ77_Encoder_and_Decoder,1483,0,2022-11-15 13:56:52+00:00,[],None
197,https://github.com/RoloVega/proyecto-3.git,2022-10-21 05:26:22+00:00,Algoritmo de Booth - Multiplicador con signo,0,RoloVega/proyecto-3,555190398,SystemVerilog,proyecto-3,3065,0,2022-11-17 13:32:35+00:00,[],None
198,https://github.com/VictorClements/Water_Reminder_CPE302Final.git,2022-10-18 15:53:24+00:00,,0,VictorClements/Water_Reminder_CPE302Final,553688042,SystemVerilog,Water_Reminder_CPE302Final,78,0,2023-08-09 01:41:52+00:00,[],None
199,https://github.com/TarasovV/APS.git,2022-09-29 19:59:42+00:00,AMPS&S(APS) Labs,0,TarasovV/APS,543297981,SystemVerilog,APS,17,0,2022-09-29 20:12:24+00:00,[],None
200,https://github.com/BROsandr/risc_v.git,2022-09-30 20:08:12+00:00,,0,BROsandr/risc_v,543772151,SystemVerilog,risc_v,166,0,2023-05-18 21:30:42+00:00,[],None
201,https://github.com/Dbhatt5/CSE_320_HW4.git,2022-11-06 04:59:36+00:00,,0,Dbhatt5/CSE_320_HW4,562360549,SystemVerilog,CSE_320_HW4,15,0,2022-11-06 05:04:42+00:00,[],None
202,https://github.com/Ammar-10xe/Compliance-Testing-RV32I.git,2022-11-26 20:18:40+00:00,This Repo contains the complianced testing of RV32I,0,Ammar-10xe/Compliance-Testing-RV32I,570996790,SystemVerilog,Compliance-Testing-RV32I,15,0,2022-11-30 15:11:00+00:00,[],None
203,https://github.com/dineshannayya/security_core.git,2022-11-01 08:47:20+00:00,Hold All the security IP AES and HASH Algirithms,0,dineshannayya/security_core,560330312,SystemVerilog,security_core,239,0,2022-11-08 06:43:49+00:00,[],https://api.github.com/licenses/apache-2.0
204,https://github.com/Frucks/PURDUE-PROJECTS.git,2022-09-24 19:48:35+00:00,,0,Frucks/PURDUE-PROJECTS,540949243,SystemVerilog,PURDUE-PROJECTS,4143,0,2024-04-01 22:01:03+00:00,[],None
205,https://github.com/AMAV26/-SystemVerilog-projects.git,2022-10-08 05:10:54+00:00,"This is a recompilatory to system verilog projects, made in the digital design workshop, taught at the ITCR",0,AMAV26/-SystemVerilog-projects,547685908,SystemVerilog,-SystemVerilog-projects,169,0,2022-10-08 05:25:01+00:00,[],None
206,https://github.com/prantaneel/smvm-fpga-project.git,2022-10-09 09:31:28+00:00,,0,prantaneel/smvm-fpga-project,548299569,SystemVerilog,smvm-fpga-project,1,0,2022-10-09 09:31:37+00:00,[],None
207,https://github.com/BrianEE07/course-lab_A_mixing_c-_rtl_kernel.git,2022-10-13 17:04:48+00:00,AAHLS_LabA,0,BrianEE07/course-lab_A_mixing_c-_rtl_kernel,550996065,SystemVerilog,course-lab_A_mixing_c-_rtl_kernel,77781,0,2022-10-13 17:08:35+00:00,[],None
208,https://github.com/renanbcunderline/roteiros_loac.git,2022-10-14 12:23:36+00:00,,0,renanbcunderline/roteiros_loac,551448978,SystemVerilog,roteiros_loac,18431,0,2023-03-24 21:02:50+00:00,[],None
209,https://github.com/danielvahos/FPGA-project.git,2022-10-13 09:32:47+00:00,,0,danielvahos/FPGA-project,550762010,SystemVerilog,FPGA-project,8632,0,2022-10-13 09:56:56+00:00,[],None
210,https://github.com/Erkin-Aydin/cs223_labs.git,2022-10-17 06:53:20+00:00,,0,Erkin-Aydin/cs223_labs,552742950,SystemVerilog,cs223_labs,5070,0,2022-12-22 07:26:39+00:00,[],https://api.github.com/licenses/gpl-3.0
211,https://github.com/Cnh1116/Verilog-Modules.git,2022-11-02 23:31:52+00:00,A collection of various Verilog Modules!,0,Cnh1116/Verilog-Modules,561090646,SystemVerilog,Verilog-Modules,9,0,2023-04-17 20:31:56+00:00,[],None
212,https://github.com/marisolcastellanos/RISCV-Pipeline-Processor.git,2022-11-02 17:47:17+00:00,,0,marisolcastellanos/RISCV-Pipeline-Processor,560991410,SystemVerilog,RISCV-Pipeline-Processor,18,0,2022-11-07 22:43:45+00:00,[],None
213,https://github.com/Fatima2508/FV-Hardware.git,2022-11-05 02:07:54+00:00,,0,Fatima2508/FV-Hardware,562000233,SystemVerilog,FV-Hardware,9981,0,2022-12-23 23:12:06+00:00,[],None
214,https://github.com/SalKikal/HW2---multiplexers-in-architecture.git,2022-11-04 19:28:02+00:00,,1,SalKikal/HW2---multiplexers-in-architecture,561912581,SystemVerilog,HW2---multiplexers-in-architecture,15,0,2022-11-04 19:30:01+00:00,[],None
215,https://github.com/Sohamsingh2002/Memoryproject221.git,2022-11-05 17:43:59+00:00,,0,Sohamsingh2002/Memoryproject221,562230468,SystemVerilog,Memoryproject221,2,0,2022-11-05 17:46:27+00:00,[],None
216,https://github.com/Superstite/task_mapping_Rivu.git,2022-11-10 18:48:21+00:00,task_mapping design code and TB,0,Superstite/task_mapping_Rivu,564452664,,task_mapping_Rivu,769,0,2022-09-16 14:31:25+00:00,[],None
217,https://github.com/Keio-CSG/cpu-experiment-2022.git,2022-11-16 03:41:52+00:00,,0,Keio-CSG/cpu-experiment-2022,566619722,SystemVerilog,cpu-experiment-2022,10178,0,2022-11-16 03:46:32+00:00,[],https://api.github.com/licenses/mit
218,https://github.com/Its-Masoom/single-cycle.git,2022-11-13 15:14:20+00:00,This is my single cycle ,0,Its-Masoom/single-cycle,565487767,SystemVerilog,single-cycle,16,0,2022-11-13 15:15:39+00:00,[],None
219,https://github.com/c-coh/verilog_counter.git,2022-11-29 00:58:54+00:00,,0,c-coh/verilog_counter,571827755,SystemVerilog,verilog_counter,5,0,2023-01-20 02:23:19+00:00,[],None
220,https://github.com/belalalala/ECE385-final-project.git,2022-11-24 20:47:21+00:00,,0,belalalala/ECE385-final-project,570300193,SystemVerilog,ECE385-final-project,98,0,2022-11-24 20:51:09+00:00,[],None
221,https://github.com/nshcat/risc-v-wb2.git,2022-11-11 15:28:50+00:00,,0,nshcat/risc-v-wb2,564824009,SystemVerilog,risc-v-wb2,54,0,2023-01-22 17:58:17+00:00,[],https://api.github.com/licenses/mit
222,https://github.com/adity97/UVM_P3..git,2022-11-13 01:28:03+00:00,LC3 VER. ,0,adity97/UVM_P3.,565311515,SystemVerilog,UVM_P3.,79,0,2022-11-13 02:03:00+00:00,[],None
223,https://github.com/RusanovskiyBV/crc_calc.git,2022-10-09 19:54:29+00:00,,0,RusanovskiyBV/crc_calc,548550785,SystemVerilog,crc_calc,17,0,2022-10-09 19:54:42+00:00,[],https://api.github.com/licenses/gpl-3.0
224,https://github.com/PopovArtS/demultiplexer.git,2022-10-10 13:29:51+00:00,data 1 to 16,0,PopovArtS/demultiplexer,548973710,SystemVerilog,demultiplexer,2,0,2022-10-10 13:30:58+00:00,[],None
225,https://github.com/espi3000/TFE4152-Memory-Array.git,2022-10-19 12:35:25+00:00,,0,espi3000/TFE4152-Memory-Array,554208808,SystemVerilog,TFE4152-Memory-Array,5322,0,2023-01-16 13:02:13+00:00,[],None
226,https://github.com/gvilums/snitch-onnx.git,2022-10-19 10:34:33+00:00,,0,gvilums/snitch-onnx,554151000,SystemVerilog,snitch-onnx,9873,0,2022-10-19 10:36:48+00:00,[],https://api.github.com/licenses/apache-2.0
227,https://github.com/tornupnegatives/floating-point-unit.git,2022-10-20 19:06:07+00:00,IEEE754 Floating Point Unit in SystemVerilog,0,tornupnegatives/floating-point-unit,554994142,SystemVerilog,floating-point-unit,41,0,2022-10-20 19:15:25+00:00,[],None
228,https://github.com/mfkiwl/osdr-q10.git,2022-10-21 13:27:44+00:00,"Orion anchor design files, firmware, and FPGA code.",0,mfkiwl/osdr-q10,555384996,,osdr-q10,108757,0,2022-07-06 17:55:02+00:00,[],None
229,https://github.com/Kinox2000/Proyecto2_VFCI.git,2022-10-17 22:16:46+00:00,,0,Kinox2000/Proyecto2_VFCI,553208787,SystemVerilog,Proyecto2_VFCI,65274,0,2022-11-20 02:38:35+00:00,[],None
230,https://github.com/pAuLocordero222/Proyecto2_VFCI.git,2022-10-26 01:55:43+00:00,,0,pAuLocordero222/Proyecto2_VFCI,557618911,SystemVerilog,Proyecto2_VFCI,113,0,2022-10-26 03:22:13+00:00,[],None
231,https://github.com/patel-soham/SRAM-memory.git,2022-10-26 18:14:34+00:00,A project to implement and test simple SRAM synchronous positive edge memory.,0,patel-soham/SRAM-memory,558009487,SystemVerilog,SRAM-memory,39,0,2022-12-31 02:19:57+00:00,"['memory', 'verilog', 'system-verilog']",None
232,https://github.com/chien172431/SNNForSleepPosture.git,2022-10-27 08:58:17+00:00,Spiking Neural Networks (SNN) chip for sleeping posture classification,0,chien172431/SNNForSleepPosture,558291146,SystemVerilog,SNNForSleepPosture,60,0,2022-10-27 09:10:03+00:00,[],None
233,https://github.com/MathieuSnd/NoRISC.git,2022-10-27 09:54:31+00:00,,0,MathieuSnd/NoRISC,558314352,SystemVerilog,NoRISC,551,0,2022-11-16 09:23:09+00:00,[],None
234,https://github.com/justinhuang666666/RISC-V-CPU.git,2022-10-04 15:33:21+00:00,,0,justinhuang666666/RISC-V-CPU,545562428,SystemVerilog,RISC-V-CPU,1051,0,2023-01-10 18:29:39+00:00,[],None
235,https://github.com/anonymous-submission002/cv32e40p_rtl.git,2022-09-28 09:27:44+00:00,cv32e40p RTL description: each branch is a version of a protected cv32e40p core,0,anonymous-submission002/cv32e40p_rtl,542509228,SystemVerilog,cv32e40p_rtl,1086,0,2022-09-28 09:47:17+00:00,[],
236,https://github.com/kinshuk9449/Smart-Bike.git,2022-10-03 07:36:43+00:00,,0,kinshuk9449/Smart-Bike,544770371,SystemVerilog,Smart-Bike,9780,0,2022-10-06 14:56:10+00:00,[],None
237,https://github.com/LongHoGit/test_vm_sv.git,2022-10-02 10:05:40+00:00,vending machine project,0,LongHoGit/test_vm_sv,544371935,SystemVerilog,test_vm_sv,2,0,2022-10-03 13:06:58+00:00,[],None
238,https://github.com/Vini-ara/zeptoProcessor.git,2022-09-27 20:24:17+00:00,16bit processor with 11 instructions ,0,Vini-ara/zeptoProcessor,542275524,SystemVerilog,zeptoProcessor,3515,0,2022-09-27 23:44:59+00:00,[],None
239,https://github.com/Qrisno/Engineering-HW.git,2022-11-18 20:01:50+00:00,,0,Qrisno/Engineering-HW,567879859,SystemVerilog,Engineering-HW,1,0,2022-11-24 09:16:11+00:00,[],None
240,https://github.com/Nagarjun444/SRAM.git,2022-11-16 14:34:55+00:00,sram verification using system verilog,1,Nagarjun444/SRAM,566841541,SystemVerilog,SRAM,4,0,2022-11-16 14:41:31+00:00,[],None
241,https://github.com/ACWright256/MicroPsFinalProject.git,2022-11-26 00:19:16+00:00,Oscilloscope Project,1,ACWright256/MicroPsFinalProject,570730448,SystemVerilog,MicroPsFinalProject,44,0,2023-12-23 20:15:24+00:00,[],None
242,https://github.com/ashutoshkr129/CSN221-Memory-Project.git,2022-11-13 17:01:11+00:00,Fully configurable cache simulation.,3,ashutoshkr129/CSN221-Memory-Project,565518898,SystemVerilog,CSN221-Memory-Project,49,0,2023-06-22 08:26:04+00:00,[],None
243,https://github.com/mungalched/SVA_with_UVM_env.git,2022-11-25 13:44:55+00:00,,0,mungalched/SVA_with_UVM_env,570562345,SystemVerilog,SVA_with_UVM_env,6,0,2022-11-25 13:58:29+00:00,[],None
244,https://github.com/Ahmad-HK/Arbiter-Verification.git,2022-11-23 14:45:25+00:00,,0,Ahmad-HK/Arbiter-Verification,569757167,SystemVerilog,Arbiter-Verification,7,0,2022-11-23 14:58:57+00:00,[],None
245,https://github.com/antoinemadec/uvm_vips.git,2022-11-23 10:39:05+00:00,collection of UVM Verication IPs,0,antoinemadec/uvm_vips,569662699,SystemVerilog,uvm_vips,1312,0,2022-11-23 16:25:00+00:00,[],None
246,https://github.com/madhur19171/Cache.git,2022-11-24 06:34:20+00:00,,0,madhur19171/Cache,570018246,SystemVerilog,Cache,497,0,2022-12-04 13:22:44+00:00,[],None
247,https://github.com/knhitesh/AXI4_FIFO.git,2022-09-26 07:42:54+00:00,,4,knhitesh/AXI4_FIFO,541465260,SystemVerilog,AXI4_FIFO,1605,0,2022-09-26 07:52:27+00:00,[],None
248,https://github.com/AlphanEker/SingleCycle-SystemVerilog-Model.git,2022-10-04 20:33:41+00:00,,0,AlphanEker/SingleCycle-SystemVerilog-Model,545696942,SystemVerilog,SingleCycle-SystemVerilog-Model,243,0,2023-01-22 22:33:08+00:00,[],None
249,https://github.com/PopovArtS/Check_16_channel.git,2022-10-06 16:59:34+00:00,Проверка последовательно всех 16 каналов на КЗ и ХХ,0,PopovArtS/Check_16_channel,546797955,SystemVerilog,Check_16_channel,4,0,2022-10-06 17:03:18+00:00,[],None
250,https://github.com/gpkumar97/Team11_Repository.git,2022-11-04 21:44:11+00:00,MSD Project Team 11 Repository,0,gpkumar97/Team11_Repository,561948633,SystemVerilog,Team11_Repository,19,0,2022-12-09 20:59:46+00:00,[],None
251,https://github.com/shreyka/huah_cubed.git,2022-11-11 21:14:03+00:00,,0,shreyka/huah_cubed,564933100,SystemVerilog,huah_cubed,26614,0,2022-12-14 05:32:04+00:00,[],None
252,https://github.com/JtmVillan/cse141-customISA.git,2022-09-25 19:06:53+00:00,,0,JtmVillan/cse141-customISA,541280246,SystemVerilog,cse141-customISA,257,0,2022-09-25 19:40:59+00:00,[],None
253,https://github.com/shahzaibk23/ibex-jigsaw.git,2022-09-28 18:17:48+00:00,Test enviroment to connect jigsaw devices w/ Ibex core in CHISEL & compile the design w/ CIRCT IR to analyze the dumped SV,0,shahzaibk23/ibex-jigsaw,542731852,SystemVerilog,ibex-jigsaw,355,0,2023-04-18 02:04:36+00:00,"['chisel', 'chisel3', 'ibex']",None
254,https://github.com/audieaudie/flappy-bird.git,2022-09-29 05:00:04+00:00,Final Project for CSE 369,0,audieaudie/flappy-bird,542926901,SystemVerilog,flappy-bird,2583,0,2022-09-29 05:37:30+00:00,[],None
255,https://github.com/mmragmac/single_cycle_proc.git,2022-09-28 09:30:47+00:00,,0,mmragmac/single_cycle_proc,542510721,SystemVerilog,single_cycle_proc,11,0,2022-11-21 02:39:18+00:00,[],None
256,https://github.com/hamidkhd/Booth-Multiplier-CA.git,2022-09-29 10:48:52+00:00,,0,hamidkhd/Booth-Multiplier-CA,543067942,SystemVerilog,Booth-Multiplier-CA,696,0,2022-09-29 10:50:02+00:00,[],None
257,https://github.com/nahmadi95/test.git,2022-12-01 19:25:12+00:00,,0,nahmadi95/test,573136765,SystemVerilog,test,2,0,2022-12-01 20:31:07+00:00,[],None
258,https://github.com/blion-yuan/v2_pro_svlabs.git,2022-11-16 06:50:55+00:00,,0,blion-yuan/v2_pro_svlabs,566669119,SystemVerilog,v2_pro_svlabs,2238,0,2022-11-16 10:41:07+00:00,[],None
259,https://github.com/halab1t/CPU-Datapath.git,2022-11-16 04:57:28+00:00,Implementation for the datapath of a bare bones CPU done for Lab5 of CPEN 211,0,halab1t/CPU-Datapath,566638275,SystemVerilog,CPU-Datapath,71,0,2022-11-16 04:58:57+00:00,[],None
260,https://github.com/MiraculousTreasure/miraculous_treasure.git,2022-10-20 13:43:10+00:00,,3,MiraculousTreasure/miraculous_treasure,554841253,SystemVerilog,miraculous_treasure,1,0,2022-10-27 10:57:17+00:00,[],None
261,https://github.com/meenalpannase/Module1_usb_packet_gen.git,2022-10-11 07:40:03+00:00,,0,meenalpannase/Module1_usb_packet_gen,549443293,SystemVerilog,Module1_usb_packet_gen,15,0,2022-10-11 07:40:16+00:00,[],None
262,https://github.com/tonyfettes/riscv-poc.git,2022-11-12 14:58:45+00:00,,0,tonyfettes/riscv-poc,565169112,SystemVerilog,riscv-poc,49,0,2023-11-30 17:34:17+00:00,[],None
263,https://github.com/supleed2/ELEC70056-HSV-CW2.git,2022-11-07 12:40:06+00:00,"About Coursework 2 for ELEC70056: Hardware and Software Verification, Hardware Component - Verification of SystemVerilog designs using assertions and timing statements",0,supleed2/ELEC70056-HSV-CW2,562870973,SystemVerilog,ELEC70056-HSV-CW2,3841,0,2024-01-19 04:31:50+00:00,"['hardware-verification', 'systemverilog']",None
264,https://github.com/Mohammed-Abzal-Ali/Team-27---RISC-V-Coursework.git,2022-11-18 10:35:43+00:00,The repository of the reduced RISC-V processor IAC coursework,0,Mohammed-Abzal-Ali/Team-27---RISC-V-Coursework,567684361,SystemVerilog,Team-27---RISC-V-Coursework,8,0,2022-11-25 12:18:49+00:00,[],None
265,https://github.com/wakuto/rvcore.git,2022-09-27 14:28:57+00:00,2命令同時発行 & Our-of-Order 実行ができる（予定の） RISC-V CPU,0,wakuto/rvcore,542128948,SystemVerilog,rvcore,1213,0,2024-01-10 08:56:00+00:00,[],None
266,https://github.com/midimaster21b/fpga-io-primitives.git,2022-11-12 05:02:21+00:00,,0,midimaster21b/fpga-io-primitives,565023721,SystemVerilog,fpga-io-primitives,4,0,2022-11-12 05:02:40+00:00,[],None
267,https://github.com/timbarrera/RISCV-5-Stage-Pipeline-Processor-with-Hazard-Handling.git,2022-11-16 03:10:48+00:00,,0,timbarrera/RISCV-5-Stage-Pipeline-Processor-with-Hazard-Handling,566611920,SystemVerilog,RISCV-5-Stage-Pipeline-Processor-with-Hazard-Handling,29,0,2022-11-16 03:18:51+00:00,[],None
268,https://github.com/3mmac/6205_Project.git,2022-11-15 21:20:00+00:00,Final Project Files,0,3mmac/6205_Project,566524650,SystemVerilog,6205_Project,12886,0,2022-12-14 19:15:03+00:00,[],None
269,https://github.com/yamhokim/Digital-Systems.git,2022-10-28 04:52:51+00:00,,0,yamhokim/Digital-Systems,558696755,SystemVerilog,Digital-Systems,184,0,2023-09-21 03:05:01+00:00,[],None
270,https://github.com/Palavelli-Naidu/UVM_fifo.git,2022-11-11 05:20:05+00:00,,0,Palavelli-Naidu/UVM_fifo,564620817,SystemVerilog,UVM_fifo,8,0,2022-11-11 05:21:02+00:00,[],None
271,https://github.com/alpgurlee/FB-CPU-SystemVerilog-Testbench.git,2022-11-03 18:18:44+00:00,Bu proje kapsamında dijital tasarım dersinde tamamlanan FB-CPU işlemcisinin SystemVerilog dili ile otonom kontrolünü yapan bir doğrulama ortamı geliştirilecektir.,0,alpgurlee/FB-CPU-SystemVerilog-Testbench,561455182,SystemVerilog,FB-CPU-SystemVerilog-Testbench,7573,0,2022-11-03 18:18:53+00:00,[],None
272,https://github.com/Ahmad-HK/sequenceFSM.git,2022-11-03 10:54:57+00:00,,0,Ahmad-HK/sequenceFSM,561279040,SystemVerilog,sequenceFSM,180,0,2022-11-03 11:47:00+00:00,[],None
273,https://github.com/saicharanbehara/AHB-to-APB-Bridge.git,2022-11-14 10:16:06+00:00,,0,saicharanbehara/AHB-to-APB-Bridge,565783726,SystemVerilog,AHB-to-APB-Bridge,10,0,2022-11-14 11:16:48+00:00,[],None
274,https://github.com/madhu2000u/Matrix-Vector-Multiplier.git,2022-10-05 01:37:37+00:00,Matrix-Vector multiplier in SystemVerilog,0,madhu2000u/Matrix-Vector-Multiplier,545792972,SystemVerilog,Matrix-Vector-Multiplier,35,0,2022-11-07 04:38:41+00:00,[],None
275,https://github.com/usman1515/UVM_Testbench_YAPP_Packet_Router.git,2022-10-03 13:51:29+00:00,,0,usman1515/UVM_Testbench_YAPP_Packet_Router,544936652,SystemVerilog,UVM_Testbench_YAPP_Packet_Router,40,0,2022-10-03 14:14:26+00:00,[],None
276,https://github.com/VictorHerbert/DigitalCores.git,2022-10-02 11:47:49+00:00,Systemverilog reusable modules,0,VictorHerbert/DigitalCores,544404070,SystemVerilog,DigitalCores,7,0,2022-10-02 14:27:26+00:00,[],None
277,https://github.com/JiHoonSong-1994/Undergraduate_Project_CNN_Accelerator.git,2022-10-30 01:12:03+00:00,,0,JiHoonSong-1994/Undergraduate_Project_CNN_Accelerator,559394659,SystemVerilog,Undergraduate_Project_CNN_Accelerator,119,0,2022-10-30 01:19:03+00:00,[],None
278,https://github.com/dleiferives/fpga-raytracer.git,2022-11-09 11:31:20+00:00,,0,dleiferives/fpga-raytracer,563806745,SystemVerilog,fpga-raytracer,3,0,2022-11-09 11:32:41+00:00,[],None
279,https://github.com/JonathanYin/CSE-140-L.git,2022-09-28 00:02:18+00:00,UwU verilog UwU,0,JonathanYin/CSE-140-L,542335162,SystemVerilog,CSE-140-L,6,0,2022-10-02 22:00:00+00:00,[],None
280,https://github.com/juanignava/ComputerArchitecture2.Project2.git,2022-10-13 03:55:37+00:00,Alpha composition vectorial ASIP design and implementation,0,juanignava/ComputerArchitecture2.Project2,550619884,SystemVerilog,ComputerArchitecture2.Project2,1599,0,2022-11-04 16:38:54+00:00,[],None
281,https://github.com/depsztyczek/VDIC.git,2022-10-13 14:13:22+00:00,Repository for laboratories regarding ,0,depsztyczek/VDIC,550904676,SystemVerilog,VDIC,651,0,2022-11-03 14:21:37+00:00,[],None
282,https://github.com/kkurenkov/ci_example.git,2022-10-15 10:47:25+00:00,Example for run ci using github-hosted runner,0,kkurenkov/ci_example,551899001,SystemVerilog,ci_example,8,0,2023-08-22 19:23:21+00:00,[],None
283,https://github.com/SerdarUnal132/training.git,2022-10-15 11:34:23+00:00,,0,SerdarUnal132/training,551914435,SystemVerilog,training,3,0,2022-10-15 12:17:42+00:00,[],None
284,https://github.com/FTBF/UtilityIP.git,2022-09-30 20:51:12+00:00,,0,FTBF/UtilityIP,543785732,SystemVerilog,UtilityIP,369,0,2022-09-30 20:52:47+00:00,[],None
285,https://github.com/athira123nair/System-Verilog-OOPS-concept.git,2022-10-18 12:46:42+00:00,"This repository gives various examples of System Verilog OOPs concepts like Inheritance, Encapsulation, Polymorphism and Abstraction.",0,athira123nair/System-Verilog-OOPS-concept,553583524,SystemVerilog,System-Verilog-OOPS-concept,8,0,2022-10-18 12:53:56+00:00,[],None
286,https://github.com/nickrallison/matrix_multiplier_architecture.git,2022-10-12 16:42:23+00:00,,0,nickrallison/matrix_multiplier_architecture,550370493,SystemVerilog,matrix_multiplier_architecture,15,0,2023-02-24 02:28:07+00:00,[],None
287,https://github.com/Heineken97/Algoritmo-de-Booth.git,2022-10-16 20:43:35+00:00,"En este proyecto busca introducir la implementación de algoritmos, por medio del diseño de una unidad de cálculo de multiplicación. Y de la misma forma, esta unidad deberá respetar un protocolo de bus para su correcto funcionamiento.",0,Heineken97/Algoritmo-de-Booth,552547678,SystemVerilog,Algoritmo-de-Booth,1037,0,2022-11-03 05:45:53+00:00,[],None
288,https://github.com/WarMachine0502/dsdl-sem3-verilog.git,2022-10-27 05:09:57+00:00,DSD Lab Verilog programs for ECE Semester-3,0,WarMachine0502/dsdl-sem3-verilog,558209441,SystemVerilog,dsdl-sem3-verilog,594,0,2022-10-27 05:16:09+00:00,[],None
289,https://github.com/hsndmr15/FB-CPU-System-Verilog-Test-Bench-Project.git,2022-11-29 18:25:37+00:00,,0,hsndmr15/FB-CPU-System-Verilog-Test-Bench-Project,572185561,SystemVerilog,FB-CPU-System-Verilog-Test-Bench-Project,2,0,2022-11-29 18:31:35+00:00,[],None
290,https://github.com/houhuawei23/DDCA_2022.git,2022-11-30 09:01:51+00:00,repository for the course Digital Design and Computer Archtecture at NUDT,0,houhuawei23/DDCA_2022,572430832,SystemVerilog,DDCA_2022,35613,0,2023-08-20 05:14:17+00:00,[],None
291,https://github.com/juhip880/uarttoi2c.git,2022-11-20 18:42:54+00:00,,0,juhip880/uarttoi2c,568507251,SystemVerilog,uarttoi2c,8,0,2022-11-20 20:09:50+00:00,[],None
292,https://github.com/Nagarjun444/SV-SRAM.git,2022-11-03 16:06:04+00:00,,0,Nagarjun444/SV-SRAM,561404661,SystemVerilog,SV-SRAM,3,0,2022-11-03 16:18:12+00:00,[],None
293,https://github.com/midimaster21b/axis-bfm.git,2022-11-06 06:09:39+00:00,A simple AXIS BFM,0,midimaster21b/axis-bfm,562372348,SystemVerilog,axis-bfm,12,0,2022-11-06 18:57:47+00:00,"['axis', 'bfm', 'fusesoc']",None
294,https://github.com/adinavale/bt.git,2022-11-07 15:01:13+00:00,,0,adinavale/bt,562932003,SystemVerilog,bt,9,0,2022-11-07 15:01:21+00:00,[],None
295,https://github.com/LongHoGit/Registers-file.git,2022-11-02 02:22:25+00:00,Hardware design of Registers file in Lab3 Computer Architecture Course,0,LongHoGit/Registers-file,560675147,SystemVerilog,Registers-file,0,0,2022-11-02 02:27:35+00:00,[],None
296,https://github.com/Abbywpy/improving-NMT-decoding.git,2022-11-30 23:18:08+00:00,,0,Abbywpy/improving-NMT-decoding,572735826,SystemVerilog,improving-NMT-decoding,30673,0,2023-01-08 19:13:43+00:00,[],https://api.github.com/licenses/mit
297,https://github.com/Vishwesh11/Circuits.git,2022-11-29 17:54:40+00:00,,0,Vishwesh11/Circuits,572174029,SystemVerilog,Circuits,5,0,2024-01-26 16:31:28+00:00,[],None
298,https://github.com/mfaizan-10xe/Single_cycle_risc-v_microprocessor.git,2022-11-02 13:48:51+00:00,"Single Cycle RISC-V Microprocessor for I,R and B type instructions ",0,mfaizan-10xe/Single_cycle_risc-v_microprocessor,560889478,SystemVerilog,Single_cycle_risc-v_microprocessor,7,0,2022-11-02 13:51:08+00:00,[],None
299,https://github.com/mykale-y/CPE133.git,2022-10-30 20:30:22+00:00,,0,mykale-y/CPE133,559672581,SystemVerilog,CPE133,2,0,2022-10-30 20:48:03+00:00,[],None
300,https://github.com/njwsh001/Alveo_U200.git,2022-10-28 15:09:52+00:00,xilinx alveo u200 board,0,njwsh001/Alveo_U200,558907558,SystemVerilog,Alveo_U200,20,0,2022-10-28 15:51:33+00:00,[],https://api.github.com/licenses/apache-2.0
301,https://github.com/KashyapKurella3000/100_Days_Of_RTL.git,2022-10-26 20:21:13+00:00,Daywise RTL programming,0,KashyapKurella3000/100_Days_Of_RTL,558058281,SystemVerilog,100_Days_Of_RTL,66,0,2023-01-11 06:48:26+00:00,[],None
302,https://github.com/aishwaryapatil26/ADLV.git,2022-10-12 09:36:54+00:00,,0,aishwaryapatil26/ADLV,550153451,SystemVerilog,ADLV,63,0,2022-10-12 09:38:00+00:00,[],None
303,https://github.com/daisycoder6/superdot.git,2022-10-12 20:12:25+00:00,,0,daisycoder6/superdot,550463248,SystemVerilog,superdot,1,0,2022-10-12 20:13:24+00:00,[],None
304,https://github.com/fabianchs/booth-algorithm.git,2022-10-13 14:54:57+00:00,,0,fabianchs/booth-algorithm,550929049,SystemVerilog,booth-algorithm,264,0,2022-11-03 02:00:18+00:00,[],None
305,https://github.com/ZZJ34/chisel_sv_lab.git,2022-10-16 01:45:00+00:00,,0,ZZJ34/chisel_sv_lab,552174541,SystemVerilog,chisel_sv_lab,81,0,2022-12-06 11:55:24+00:00,[],None
306,https://github.com/flaviens/mortyincludes.git,2022-10-14 09:16:10+00:00,,0,flaviens/mortyincludes,551368851,SystemVerilog,mortyincludes,1,0,2022-10-14 09:25:50+00:00,[],None
307,https://github.com/AllahWasya/My_Project-Single_Cycle_RISC_V_Processor.git,2022-10-25 14:00:05+00:00,AQL,0,AllahWasya/My_Project-Single_Cycle_RISC_V_Processor,557336411,SystemVerilog,My_Project-Single_Cycle_RISC_V_Processor,44,0,2022-12-14 09:18:43+00:00,[],None
308,https://github.com/shahul-vw/FIFO_UVM.git,2022-11-28 08:10:11+00:00,,0,shahul-vw/FIFO_UVM,571476676,SystemVerilog,FIFO_UVM,8,0,2022-11-28 09:04:50+00:00,[],None
309,https://github.com/VictorClements/RISC_Processor_CPE300Final.git,2022-11-29 17:08:14+00:00,,0,VictorClements/RISC_Processor_CPE300Final,572155666,SystemVerilog,RISC_Processor_CPE300Final,8065,0,2023-08-09 01:41:17+00:00,[],None
310,https://github.com/DeeSIZme/GPU.git,2022-11-29 13:58:04+00:00,,0,DeeSIZme/GPU,572074807,SystemVerilog,GPU,2689,0,2022-12-08 10:30:29+00:00,[],None
311,https://github.com/SteveF42/CSE-4010-Pipeline-w-Hazard-Forward-unit.git,2022-11-25 06:09:13+00:00,,0,SteveF42/CSE-4010-Pipeline-w-Hazard-Forward-unit,570415349,SystemVerilog,CSE-4010-Pipeline-w-Hazard-Forward-unit,16,0,2022-11-25 06:10:58+00:00,[],None
312,https://github.com/liloheinrich/Etch_a_sketch.git,2022-11-03 14:13:52+00:00,Computer Architecture Lab 2 Etch-a-Sketch,1,liloheinrich/Etch_a_sketch,561357048,SystemVerilog,Etch_a_sketch,18859,0,2022-11-17 03:21:58+00:00,[],None
313,https://github.com/ECE4278/lab8.git,2022-11-08 07:14:37+00:00,,0,ECE4278/lab8,563230385,SystemVerilog,lab8,15,0,2022-11-09 01:12:43+00:00,[],None
314,https://github.com/DarthRevan07/SetAssociativeCache.git,2022-11-13 13:44:38+00:00,,0,DarthRevan07/SetAssociativeCache,565461620,SystemVerilog,SetAssociativeCache,626,0,2022-11-13 18:03:29+00:00,[],None
315,https://github.com/SAIPRASADSTARK/Verilog-Code.git,2022-09-28 01:21:11+00:00,My work on syetem verilog,0,SAIPRASADSTARK/Verilog-Code,542355176,SystemVerilog,Verilog-Code,219,0,2022-09-28 01:27:36+00:00,[],None
316,https://github.com/kaminto-1999/ComputerArchitectureNCKU111.git,2022-09-29 09:26:36+00:00,,0,kaminto-1999/ComputerArchitectureNCKU111,543032134,SystemVerilog,ComputerArchitectureNCKU111,477,0,2023-01-08 06:59:37+00:00,[],None
317,https://github.com/djak1/Calc_verif.git,2022-11-20 16:54:07+00:00,,0,djak1/Calc_verif,568477742,SystemVerilog,Calc_verif,10,0,2022-11-20 16:56:37+00:00,[],None
318,https://github.com/GudduKumar0208/RAM-verification-via-System-verilog.git,2022-11-27 14:08:55+00:00,#verification of RAM #verification #vlsi #ram #verification of RAM #Random access memory #Random access memory verification #vsi verification #questasim #questa #verification via questa,0,GudduKumar0208/RAM-verification-via-System-verilog,571206949,SystemVerilog,RAM-verification-via-System-verilog,7,0,2022-12-02 02:37:03+00:00,[],None
319,https://github.com/sarah-blazic/tic_tac_toe.git,2022-11-28 00:19:19+00:00,Working tic tac toe game on a Zybo Z7-10 with the use of a VGA pmod,0,sarah-blazic/tic_tac_toe,571361756,SystemVerilog,tic_tac_toe,71,0,2022-11-28 00:32:26+00:00,[],None
320,https://github.com/flaviens/veriskew.git,2022-11-21 14:25:44+00:00,Suspecting a bug in Verilator 5.003,0,flaviens/veriskew,568842647,SystemVerilog,veriskew,2204,0,2022-12-03 14:25:13+00:00,[],None
321,https://github.com/karthikv6/CSE140L-Lab3.git,2022-11-13 21:30:11+00:00,,0,karthikv6/CSE140L-Lab3,565586963,SystemVerilog,CSE140L-Lab3,2855,0,2022-11-13 21:37:42+00:00,[],None
322,https://github.com/lisneygit/Adder_Subtractor_SV.git,2022-11-21 01:52:45+00:00,,0,lisneygit/Adder_Subtractor_SV,568598802,SystemVerilog,Adder_Subtractor_SV,1,0,2022-11-21 03:14:30+00:00,[],None
323,https://github.com/pAuLocordero222/Candy.git,2022-11-06 02:06:00+00:00,,0,pAuLocordero222/Candy,562332812,SystemVerilog,Candy,6,0,2022-11-06 02:14:15+00:00,[],None
324,https://github.com/syedmouaazfarrukh/RISC_V-ALU.git,2022-11-18 18:12:53+00:00,,0,syedmouaazfarrukh/RISC_V-ALU,567847326,SystemVerilog,RISC_V-ALU,2,0,2022-11-18 18:13:29+00:00,[],None
325,https://github.com/vele-mrs/fpga-tutorial-1a.git,2022-11-19 02:27:34+00:00,,0,vele-mrs/fpga-tutorial-1a,567961615,SystemVerilog,fpga-tutorial-1a,0,0,2022-11-19 02:28:30+00:00,[],None
326,https://github.com/tejedof/RiscV_Grupo3.git,2022-11-15 09:34:37+00:00,,0,tejedof/RiscV_Grupo3,566253099,SystemVerilog,RiscV_Grupo3,77,0,2022-12-13 10:17:35+00:00,[],None
327,https://github.com/satyaprakashakula/Matrix-Vector-Multiplier-with-AXI4-Stream-Interface.git,2022-11-02 05:04:00+00:00,RTL Design,0,satyaprakashakula/Matrix-Vector-Multiplier-with-AXI4-Stream-Interface,560713348,SystemVerilog,Matrix-Vector-Multiplier-with-AXI4-Stream-Interface,52,0,2024-02-11 05:19:59+00:00,[],None
328,https://github.com/MohammadMoshtagh/MIPS-Processor.git,2022-11-20 22:37:50+00:00,,0,MohammadMoshtagh/MIPS-Processor,568561934,SystemVerilog,MIPS-Processor,1537,0,2023-12-03 11:44:30+00:00,[],None
329,https://github.com/mfkiwl/astra.git,2022-11-30 21:17:10+00:00,,0,mfkiwl/astra,572704577,,astra,156,0,2023-07-19 23:03:00+00:00,[],None
330,https://github.com/JZJisawesome/jzjpipelinedcorec.git,2022-11-20 12:06:21+00:00,Mirror of git.jekel.ca/JZJ/jzjpipelinedcorec,0,JZJisawesome/jzjpipelinedcorec,568395768,SystemVerilog,jzjpipelinedcorec,210,0,2022-11-20 12:07:00+00:00,[],None
331,https://github.com/actions-marketplace-validations/dalance_svlint-action.git,2022-11-29 12:44:35+00:00,,0,actions-marketplace-validations/dalance_svlint-action,572044121,SystemVerilog,dalance_svlint-action,13,0,2022-11-29 12:45:03+00:00,[],https://api.github.com/licenses/mit
332,https://github.com/wei-tianyu/SLAC-scalable-lowpower-accelerator-convolution.git,2022-11-26 14:49:58+00:00,,0,wei-tianyu/SLAC-scalable-lowpower-accelerator-convolution,570916041,SystemVerilog,SLAC-scalable-lowpower-accelerator-convolution,46708,0,2022-12-11 17:45:56+00:00,[],None
333,https://github.com/Boulder1999/Lab09-Design-and-Verification-Using-SystemVerilog.git,2022-12-01 07:04:41+00:00,,0,Boulder1999/Lab09-Design-and-Verification-Using-SystemVerilog,572853612,SystemVerilog,Lab09-Design-and-Verification-Using-SystemVerilog,2853,0,2022-12-01 07:06:42+00:00,[],None
334,https://github.com/weasleydf/SME.git,2022-11-30 03:35:42+00:00,,0,weasleydf/SME,572336184,SystemVerilog,SME,7,0,2022-11-30 03:36:35+00:00,[],None
335,https://github.com/Summondo/BacheloreProject.git,2022-12-01 12:48:49+00:00,The final project for my bachelore thesis,0,Summondo/BacheloreProject,572978315,SystemVerilog,BacheloreProject,538,0,2022-12-05 08:47:15+00:00,[],https://api.github.com/licenses/apache-2.0
336,https://github.com/liloheinrich/RISC-V-CPU.git,2022-11-16 22:56:48+00:00,Computer Architecture Lab 3 RISC-V CPU,1,liloheinrich/RISC-V-CPU,567024365,SystemVerilog,RISC-V-CPU,4369,0,2022-11-17 03:22:21+00:00,[],None
337,https://github.com/meshack199/tug_of_war.git,2022-11-15 19:08:22+00:00,FPGA Simulation of Tug of War on DE1_SoC,0,meshack199/tug_of_war,566481542,,tug_of_war,847,0,2018-11-11 15:34:34+00:00,[],None
338,https://github.com/noemiabril/C64_MiSTer-Arrow_SoCKit.git,2022-10-20 17:34:08+00:00,C64 MiSTer Arrow SoCKit,0,noemiabril/C64_MiSTer-Arrow_SoCKit,554953585,SystemVerilog,C64_MiSTer-Arrow_SoCKit,2952,0,2022-10-20 17:34:17+00:00,[],None
339,https://github.com/raiyansiddique/comparchClass.git,2022-10-19 17:55:45+00:00,,0,raiyansiddique/comparchClass,554375506,SystemVerilog,comparchClass,8748,0,2022-10-19 18:00:41+00:00,[],https://api.github.com/licenses/mit
340,https://github.com/weilong0512/AXI-bus-protocal-main.git,2022-10-19 04:56:47+00:00,,0,weilong0512/AXI-bus-protocal-main,553999585,SystemVerilog,AXI-bus-protocal-main,161,0,2022-10-19 04:57:12+00:00,[],None
341,https://github.com/hhuynh000/ARM-LEGv8-cpu.git,2022-10-16 00:12:18+00:00,Computer Architecture Final Project: implemented a cpu with a simplified version ARM LEGv8 instruction set using SystemVerilog. Simulated the cpu to run assembly code (Benchmarks folder) using ModelSim.,0,hhuynh000/ARM-LEGv8-cpu,552155108,SystemVerilog,ARM-LEGv8-cpu,45,0,2022-10-16 00:22:55+00:00,[],None
342,https://github.com/ishevche/MC14500B.git,2022-10-31 20:24:36+00:00,,0,ishevche/MC14500B,560139977,SystemVerilog,MC14500B,73,0,2022-12-10 16:04:04+00:00,[],None
343,https://github.com/XuanhaoZhao/digital-logic-A-simple-virtual-traffic-light.git,2022-11-10 06:26:21+00:00,"Project for the course ""digital logic"", 2022 spring",0,XuanhaoZhao/digital-logic-A-simple-virtual-traffic-light,564173472,SystemVerilog,digital-logic-A-simple-virtual-traffic-light,429,0,2022-11-10 06:28:18+00:00,[],None
344,https://github.com/Aditi-Dhibar/Traffic-Controller.git,2022-11-11 18:37:07+00:00,,0,Aditi-Dhibar/Traffic-Controller,564888810,SystemVerilog,Traffic-Controller,1,0,2022-11-11 18:43:50+00:00,[],None
345,https://github.com/KAMOME-code/Fast-modular-reduction-for-secp256k1.git,2022-11-15 23:28:48+00:00,with random test,0,KAMOME-code/Fast-modular-reduction-for-secp256k1,566558086,SystemVerilog,Fast-modular-reduction-for-secp256k1,3,0,2022-12-02 02:01:45+00:00,[],https://api.github.com/licenses/mit
346,https://github.com/pateltanmayp/ece253_labs.git,2022-10-08 00:29:03+00:00,,0,pateltanmayp/ece253_labs,547596314,SystemVerilog,ece253_labs,16,0,2022-11-09 15:16:43+00:00,[],None
347,https://github.com/BinaryLust/pipelined-fpu.git,2022-09-24 08:17:33+00:00,,0,BinaryLust/pipelined-fpu,540757820,SystemVerilog,pipelined-fpu,113,0,2022-09-24 08:17:41+00:00,[],None
348,https://github.com/mohamedeedoo/64-Bit-ARM-ALU-Implementation.git,2022-10-29 19:35:57+00:00,A 64 Bit alu implementation based off of ARM op codes.,0,mohamedeedoo/64-Bit-ARM-ALU-Implementation,559333212,SystemVerilog,64-Bit-ARM-ALU-Implementation,8,0,2022-10-29 19:38:19+00:00,[],None
349,https://github.com/mohamedeedoo/ARM-Register-File.git,2022-10-29 19:42:36+00:00,Register File based off of ARM ISA,0,mohamedeedoo/ARM-Register-File,559334795,SystemVerilog,ARM-Register-File,8,0,2022-10-29 19:45:35+00:00,[],None
350,https://github.com/aelshahed1/Low-area-cache-coherence-protocol.git,2022-10-29 09:27:13+00:00,Design files for my MSc Dissertation,0,aelshahed1/Low-area-cache-coherence-protocol,559171400,SystemVerilog,Low-area-cache-coherence-protocol,908,0,2022-10-29 10:33:22+00:00,[],None
351,https://github.com/ALTair700/mailbox.git,2022-11-07 19:06:41+00:00,,0,ALTair700/mailbox,563030613,SystemVerilog,mailbox,195,0,2022-11-07 19:08:55+00:00,[],None
352,https://github.com/stefanct/riscv.git,2022-10-14 11:58:31+00:00,,1,stefanct/riscv,551437718,SystemVerilog,riscv,2527,0,2022-10-14 12:00:32+00:00,[],
353,https://github.com/stefanct/minissimo.git,2022-10-14 15:02:04+00:00,,0,stefanct/minissimo,551522997,SystemVerilog,minissimo,27606,0,2022-10-25 21:48:24+00:00,[],
354,https://github.com/DandyForever/VerilogPractice.git,2022-10-26 06:42:11+00:00,Simple tasks for Verilog Practice,0,DandyForever/VerilogPractice,557708002,SystemVerilog,VerilogPractice,21,0,2022-10-28 07:10:32+00:00,[],None
355,https://github.com/kkutchava/COMPE475G1-Microprocessors.git,2022-11-03 21:16:49+00:00,,0,kkutchava/COMPE475G1-Microprocessors,561512275,SystemVerilog,COMPE475G1-Microprocessors,906,0,2023-01-12 21:00:29+00:00,[],None
356,https://github.com/kamble7/Final_Project_18.git,2022-11-04 20:34:54+00:00,The simulation of the last level cache (LLC) for a new processor that can be used with up to three other processors in a shared memory configuration. ,0,kamble7/Final_Project_18,561931408,SystemVerilog,Final_Project_18,662,0,2022-12-06 20:01:13+00:00,[],None
357,https://github.com/Gkupa/compe475.git,2022-11-04 18:42:58+00:00,,1,Gkupa/compe475,561898583,SystemVerilog,compe475,1,0,2022-11-04 19:00:08+00:00,[],None
358,https://github.com/humayunsiraj123/RTL-LEARNING.git,2022-11-19 11:51:44+00:00,The repo is dedicated for my practice and learning related Verilog and System Verilog  ,0,humayunsiraj123/RTL-LEARNING,568081882,SystemVerilog,RTL-LEARNING,51,0,2023-12-18 12:12:59+00:00,[],None
359,https://github.com/dylanzflores/FPGA-Obstacle-Game.git,2022-11-09 08:40:40+00:00,PossibleGame,0,dylanzflores/FPGA-Obstacle-Game,563743908,SystemVerilog,FPGA-Obstacle-Game,73,0,2023-05-27 04:13:12+00:00,[],None
360,https://github.com/Rizo11/chip_design_course.git,2022-10-22 07:17:46+00:00,,0,Rizo11/chip_design_course,555728266,SystemVerilog,chip_design_course,17,0,2022-10-22 07:23:38+00:00,[],None
361,https://github.com/ZongzeL/RTL_design_research.git,2022-10-07 01:34:01+00:00,,0,ZongzeL/RTL_design_research,546997576,SystemVerilog,RTL_design_research,71,0,2023-03-13 20:15:00+00:00,[],None
362,https://github.com/nan3037/SIT-329-Task4.1.git,2022-10-10 11:32:37+00:00,,0,nan3037/SIT-329-Task4.1,548911562,SystemVerilog,SIT-329-Task4.1,3,0,2022-10-10 11:33:43+00:00,[],None
363,https://github.com/isinghsukh/DE1_SoC_Verilog.git,2022-10-30 16:08:50+00:00,,0,isinghsukh/DE1_SoC_Verilog,559600445,SystemVerilog,DE1_SoC_Verilog,14436,0,2022-10-30 16:44:18+00:00,[],None
364,https://github.com/peterzhangzm/UVM-chapter01.git,2022-11-07 16:39:19+00:00,,0,peterzhangzm/UVM-chapter01,562974360,SystemVerilog,UVM-chapter01,3,0,2022-11-08 14:42:21+00:00,[],None
365,https://github.com/midimaster21b/amba-interfaces.git,2022-11-06 01:30:01+00:00,A few quick interfaces for AMBA standards,0,midimaster21b/amba-interfaces,562327034,SystemVerilog,amba-interfaces,9,0,2022-11-06 03:05:50+00:00,"['systemverilog', 'fusesoc']",None
366,https://github.com/taichi-ishitani/hdl-advent-calender-2022.git,2022-11-14 14:20:02+00:00,HD Advent Calender 2022,0,taichi-ishitani/hdl-advent-calender-2022,565880037,SystemVerilog,hdl-advent-calender-2022,8,0,2022-11-14 15:57:41+00:00,[],https://api.github.com/licenses/mit
367,https://github.com/rrios19/ADDER_UVM.git,2022-10-18 21:16:55+00:00,Ambiente de verificacion para un adder usando UVM,0,rrios19/ADDER_UVM,553838233,SystemVerilog,ADDER_UVM,6,0,2022-10-19 06:15:25+00:00,[],None
368,https://github.com/percentwei/IC_Project.git,2022-10-03 15:23:25+00:00,,0,percentwei/IC_Project,544983422,SystemVerilog,IC_Project,1707,0,2022-10-03 15:33:19+00:00,[],None
369,https://github.com/AzofeifaJ/Proyecto-3-Dise-o-L-gico.git,2022-10-18 01:54:43+00:00,En este repositorio se lleva a cabo el proceso de diseño del tercer proyecto del curso diseño lógico,0,AzofeifaJ/Proyecto-3-Dise-o-L-gico,553286253,SystemVerilog,Proyecto-3-Dise-o-L-gico,54,0,2022-11-17 08:59:34+00:00,[],https://api.github.com/licenses/mit
370,https://github.com/Lombeelo/APB-BCD-Summator.git,2022-10-19 16:22:50+00:00,,0,Lombeelo/APB-BCD-Summator,554329989,SystemVerilog,APB-BCD-Summator,7,0,2022-10-19 16:22:58+00:00,[],None
371,https://github.com/shuny42657/pset5.git,2022-09-26 14:05:01+00:00,,0,shuny42657/pset5,541617812,SystemVerilog,pset5,1,0,2022-09-26 14:06:21+00:00,[],None
372,https://github.com/01fe21mve007/ADLV.git,2022-09-26 08:37:40+00:00,,0,01fe21mve007/ADLV,541486198,SystemVerilog,ADLV,390,0,2022-09-26 08:47:38+00:00,[],None
373,https://github.com/timelightup/arbiter-interface.git,2022-09-24 07:07:18+00:00,,0,timelightup/arbiter-interface,540740903,SystemVerilog,arbiter-interface,1,0,2022-09-24 07:08:34+00:00,[],None
374,https://github.com/shaswat2428/AXI-BUS-Protocol-Verification.git,2022-10-02 08:59:07+00:00,,0,shaswat2428/AXI-BUS-Protocol-Verification,544351533,SystemVerilog,AXI-BUS-Protocol-Verification,12,0,2022-10-02 09:02:31+00:00,[],None
375,https://github.com/PrathammGupta/verilog.4.1.git,2022-09-29 12:21:55+00:00,,0,PrathammGupta/verilog.4.1,543107683,SystemVerilog,verilog.4.1,2,0,2022-09-29 12:23:02+00:00,[],None
376,https://github.com/ishwarya-debug/LC3_Verification.git,2022-11-19 02:58:03+00:00,,1,ishwarya-debug/LC3_Verification,567967143,SystemVerilog,LC3_Verification,12325,0,2022-11-19 03:28:47+00:00,[],None
377,https://github.com/ALI11-2000/riscof_plugin.git,2022-11-24 13:38:29+00:00,,0,ALI11-2000/riscof_plugin,570165326,SystemVerilog,riscof_plugin,12,0,2022-11-24 14:47:40+00:00,[],None
378,https://github.com/elianne-sacher/MIPS.git,2022-11-23 01:52:38+00:00,asfdfad,0,elianne-sacher/MIPS,569512563,SystemVerilog,MIPS,7634,0,2022-11-23 01:57:07+00:00,[],None
379,https://github.com/antoniocruz23/3002-MIPS-Processor-cw.git,2022-11-25 03:08:23+00:00,,0,antoniocruz23/3002-MIPS-Processor-cw,570375887,SystemVerilog,3002-MIPS-Processor-cw,4,0,2022-11-25 03:09:32+00:00,[],None
380,https://github.com/jatinp101/verilog-code.git,2022-10-09 23:37:06+00:00,System Verilog and Verilog code done in class ,0,jatinp101/verilog-code,548623291,SystemVerilog,verilog-code,94,0,2022-10-09 23:45:30+00:00,[],None
381,https://github.com/VINUTHNA-SRI/SV_Codes.git,2022-10-06 06:28:24+00:00,Codes written for different concepts to mention in the wiki,0,VINUTHNA-SRI/SV_Codes,546480673,SystemVerilog,SV_Codes,3,0,2022-10-06 06:53:51+00:00,[],None
382,https://github.com/AhsanAliUet/single-cycle-risc-v-implementation-in-system-verilog-with-verification.git,2022-10-07 14:30:06+00:00,"Fully implemented single cycle RISC-V with support of R, I, J, S, B and U type instructions. Also, formal verification test benches are written.",0,AhsanAliUet/single-cycle-risc-v-implementation-in-system-verilog-with-verification,547346816,SystemVerilog,single-cycle-risc-v-implementation-in-system-verilog-with-verification,6017,0,2023-01-09 20:16:58+00:00,[],None
383,https://github.com/Engghassanali/Three-Stage-Pipeline-with-CSR-Support.git,2022-11-30 10:24:38+00:00,,0,Engghassanali/Three-Stage-Pipeline-with-CSR-Support,572461308,SystemVerilog,Three-Stage-Pipeline-with-CSR-Support,26,0,2022-11-30 10:29:17+00:00,[],None
384,https://github.com/Engghassanali/Three-Stage-Pipeline.git,2022-11-29 11:25:31+00:00,Three Stage Pipeline,0,Engghassanali/Three-Stage-Pipeline,572013818,SystemVerilog,Three-Stage-Pipeline,12,0,2022-11-29 11:29:45+00:00,[],None
385,https://github.com/Fall-2022-Classes/fa22-final-project-team-1.git,2022-11-30 19:33:12+00:00,fa22-final-project-team-1 created by GitHub Classroom,0,Fall-2022-Classes/fa22-final-project-team-1,572674303,SystemVerilog,fa22-final-project-team-1,98,0,2022-12-07 19:49:06+00:00,[],None
386,https://github.com/konnpaku-youmu/CPAEP_lab.git,2022-11-09 09:30:35+00:00,,1,konnpaku-youmu/CPAEP_lab,563762664,SystemVerilog,CPAEP_lab,100931,0,2022-11-09 09:31:09+00:00,[],None
387,https://github.com/RobertoPSF/LOAC.git,2022-11-03 20:25:13+00:00,Laboratórios da cadeira de LOAC,0,RobertoPSF/LOAC,561496604,SystemVerilog,LOAC,15690,0,2022-12-28 20:27:31+00:00,[],None
388,https://github.com/GarrettTP/fpga-game-of-life.git,2022-11-10 08:07:02+00:00,Game of life written in HDL using SystemVerilog,0,GarrettTP/fpga-game-of-life,564204254,SystemVerilog,fpga-game-of-life,3553,0,2022-11-10 08:40:22+00:00,[],None
389,https://github.com/barawn/firmware-pueo-turfio.git,2022-11-10 15:05:19+00:00,Firmware for the PUEO TURFIO,0,barawn/firmware-pueo-turfio,564365817,SystemVerilog,firmware-pueo-turfio,441,0,2023-06-27 01:38:34+00:00,[],None
390,https://github.com/waterRK9/Virtual_Lightboard.git,2022-10-31 01:32:26+00:00,,0,waterRK9/Virtual_Lightboard,559736498,SystemVerilog,Virtual_Lightboard,5652,0,2023-11-09 03:46:07+00:00,[],None
391,https://github.com/ECE4278/lab6.git,2022-10-25 17:44:09+00:00,,0,ECE4278/lab6,557443258,SystemVerilog,lab6,11,0,2022-10-25 17:46:02+00:00,[],None
392,https://github.com/georgec7/Hardware-Generation-Tool-for-Neural-Network.git,2022-11-02 11:55:13+00:00,,0,georgec7/Hardware-Generation-Tool-for-Neural-Network,560844860,SystemVerilog,Hardware-Generation-Tool-for-Neural-Network,1513,0,2023-01-16 09:22:51+00:00,[],None
393,https://github.com/DavidGogia/hw2.git,2022-11-04 18:48:39+00:00,cope475 hw-ები,0,DavidGogia/hw2,561900539,SystemVerilog,hw2,5,0,2022-11-04 19:06:42+00:00,[],None
394,https://github.com/ece554fall22/rtl.git,2022-10-27 21:25:36+00:00,,0,ece554fall22/rtl,558588417,SystemVerilog,rtl,2545,0,2022-10-27 22:22:29+00:00,[],None
395,https://github.com/marisolcastellanos/RISCV.git,2022-10-26 06:58:57+00:00,,0,marisolcastellanos/RISCV,557714199,SystemVerilog,RISCV,50,0,2022-10-26 07:02:43+00:00,[],None
396,https://github.com/Jorpty/fpgasynth.git,2022-11-23 23:25:46+00:00,ECE 385 Final Project Code,0,Jorpty/fpgasynth,569920213,SystemVerilog,fpgasynth,9,0,2022-11-28 19:49:27+00:00,[],None
397,https://github.com/jaysunl/SHA256-Bitcoin-Hasher.git,2022-11-21 02:40:48+00:00,,0,jaysunl/SHA256-Bitcoin-Hasher,568609911,SystemVerilog,SHA256-Bitcoin-Hasher,4064,0,2022-12-19 06:21:39+00:00,[],None
398,https://github.com/EthanL929/ELEC6236.git,2022-10-08 22:21:54+00:00,,0,EthanL929/ELEC6236,548081683,SystemVerilog,ELEC6236,21,0,2023-11-27 09:59:37+00:00,[],None
399,https://github.com/laurentiuduca/rlsoc2.git,2022-11-30 10:16:26+00:00,,0,laurentiuduca/rlsoc2,572458413,SystemVerilog,rlsoc2,703,0,2024-03-09 14:17:04+00:00,[],https://api.github.com/licenses/mit
400,https://github.com/aignacio/bus_arch_sv_pkg.git,2022-10-14 17:30:39+00:00,AMBA SystemVerilog structs,0,aignacio/bus_arch_sv_pkg,551586562,SystemVerilog,bus_arch_sv_pkg,5,0,2023-01-05 16:08:58+00:00,[],None
401,https://github.com/LenkaBrest/formal_verification.git,2022-09-26 18:03:50+00:00,,0,LenkaBrest/formal_verification,541718649,SystemVerilog,formal_verification,2,0,2022-09-26 18:10:12+00:00,[],None
402,https://github.com/huynkhai0505/Group8.git,2022-10-01 12:28:42+00:00,,0,huynkhai0505/Group8,544019345,SystemVerilog,Group8,2,0,2022-10-01 12:31:32+00:00,[],None
403,https://github.com/flaviens/verisegf.git,2022-10-10 12:12:02+00:00,,1,flaviens/verisegf,548931582,SystemVerilog,verisegf,412,0,2022-10-10 12:17:10+00:00,[],None
404,https://github.com/flaviens/verilator_internal_err_undriven.git,2022-10-17 11:38:00+00:00,,0,flaviens/verilator_internal_err_undriven,552887415,SystemVerilog,verilator_internal_err_undriven,1665,0,2022-10-17 11:54:00+00:00,[],None
405,https://github.com/noemiabril/Saturn.git,2022-10-16 20:37:35+00:00, Sega Saturn Compatible IP Core for FPGA ,0,noemiabril/Saturn,552545771,SystemVerilog,Saturn,11564,0,2022-10-16 20:37:52+00:00,[],None
406,https://github.com/adinavale/hw2_cursor.git,2022-10-21 05:53:38+00:00,,0,adinavale/hw2_cursor,555199203,SystemVerilog,hw2_cursor,156,0,2022-10-21 05:54:44+00:00,[],None
407,https://github.com/jdcasanasr/dragonfang.git,2022-10-31 23:06:54+00:00,"Dragonfang: An Embedded, General Purpose, RISC-V Based Vector Extension for the Lagarto Hun Processor",0,jdcasanasr/dragonfang,560182962,SystemVerilog,dragonfang,44176,0,2022-10-31 23:23:18+00:00,[],None
408,https://github.com/TimofeyAlexandrov/rv32i.git,2022-11-18 18:20:36+00:00,Harris,0,TimofeyAlexandrov/rv32i,567849823,SystemVerilog,rv32i,5,0,2022-11-18 18:22:38+00:00,[],None
409,https://github.com/nhanlo/Memory_1.git,2022-11-05 15:02:21+00:00,,0,nhanlo/Memory_1,562182220,SystemVerilog,Memory_1,2,0,2022-11-05 15:15:25+00:00,[],None
410,https://github.com/bmsully/peoplewatching.git,2022-11-01 12:55:33+00:00,,0,bmsully/peoplewatching,560412219,SystemVerilog,peoplewatching,1243,0,2023-02-23 14:14:54+00:00,[],None
411,https://github.com/Charis02/fpga-daw.git,2022-11-05 01:51:39+00:00,,1,Charis02/fpga-daw,561997353,SystemVerilog,fpga-daw,125,0,2022-12-02 17:13:23+00:00,[],None
412,https://github.com/adityab82/simple_risc_machine.git,2022-11-22 00:38:34+00:00,Designed a Simple RISC Machine ISA in System Verilog,0,adityab82/simple_risc_machine,569044214,SystemVerilog,simple_risc_machine,41,0,2022-11-22 00:39:46+00:00,[],None
413,https://github.com/UandersonSilva/MIPS.git,2022-11-10 12:42:14+00:00,,0,UandersonSilva/MIPS,564306601,SystemVerilog,MIPS,328,0,2022-11-15 15:05:17+00:00,[],None
414,https://github.com/barawn/surf_test.git,2022-11-22 21:27:04+00:00,Testing firmware for the SURFv6,0,barawn/surf_test,569452120,SystemVerilog,surf_test,1122,0,2022-11-22 21:27:37+00:00,[],None
415,https://github.com/firemountain154B/HSV.git,2022-11-26 17:26:26+00:00,,0,firemountain154B/HSV,570957733,SystemVerilog,HSV,33,0,2022-11-26 20:25:04+00:00,[],None
416,https://github.com/Krishnakiran1217/-100daysofRTLcoding.git,2022-10-05 13:36:45+00:00,Idea is to do RTL coding for 100 days and create something Good.,0,Krishnakiran1217/-100daysofRTLcoding,546076540,SystemVerilog,-100daysofRTLcoding,2,0,2022-10-06 13:22:31+00:00,[],None
417,https://github.com/Xiao215/ECE253.git,2022-10-14 16:33:02+00:00,,0,Xiao215/ECE253,551562587,SystemVerilog,ECE253,34,0,2022-10-14 16:33:55+00:00,[],None
418,https://github.com/Roderick-Wu/test.git,2022-11-09 03:57:10+00:00,,0,Roderick-Wu/test,563660790,SystemVerilog,test,5,0,2022-11-09 03:58:01+00:00,[],None
419,https://github.com/bryceberger/337-project.git,2022-11-10 20:35:52+00:00,,0,bryceberger/337-project,564488253,SystemVerilog,337-project,191,0,2022-12-20 02:08:39+00:00,[],None
420,https://github.com/madhu2000u/Multiply-Accumulate-Unit.git,2022-11-02 01:49:09+00:00,A multiply and accumulate hardware unit in SystemVerilog,0,madhu2000u/Multiply-Accumulate-Unit,560666749,SystemVerilog,Multiply-Accumulate-Unit,6,0,2022-11-02 01:56:22+00:00,[],None
421,https://github.com/luca-valente/sv_exercise.git,2022-11-18 16:47:51+00:00,,0,luca-valente/sv_exercise,567818615,SystemVerilog,sv_exercise,8,0,2022-11-18 17:36:47+00:00,[],None
422,https://github.com/edoardo-casapieri1/Design-of-a-digital-circuit-performing-the-Vigen-re-Cipher-decryption.git,2022-11-23 18:35:45+00:00,,0,edoardo-casapieri1/Design-of-a-digital-circuit-performing-the-Vigen-re-Cipher-decryption,569843255,SystemVerilog,Design-of-a-digital-circuit-performing-the-Vigen-re-Cipher-decryption,1078,0,2022-11-23 18:40:32+00:00,[],None
423,https://github.com/angryflyer/urv32-async.git,2022-11-24 03:43:51+00:00,,0,angryflyer/urv32-async,569976677,SystemVerilog,urv32-async,740,0,2022-12-06 10:48:53+00:00,[],None
424,https://github.com/jishengli65110114/small-tools.git,2022-11-28 01:04:01+00:00,,0,jishengli65110114/small-tools,571370564,SystemVerilog,small-tools,761,0,2022-12-16 11:32:40+00:00,[],None
425,https://github.com/Engghassanali/Single-Cycle-Processor.git,2022-11-29 11:01:21+00:00,Single Cycle Processor,0,Engghassanali/Single-Cycle-Processor,572004711,SystemVerilog,Single-Cycle-Processor,251,0,2022-11-29 11:21:16+00:00,[],None
426,https://github.com/Engghassanali/UART.git,2022-11-29 10:49:01+00:00,Universal Asynchronous Receiver Transmitter (UART),0,Engghassanali/UART,572000058,SystemVerilog,UART,1,0,2022-11-29 10:51:27+00:00,[],None
427,https://github.com/nahmadi95/test1.git,2022-12-01 20:40:45+00:00,,0,nahmadi95/test1,573160528,SystemVerilog,test1,1,0,2022-12-01 20:45:53+00:00,[],None
428,https://github.com/anbtrfl/skkv_lab2.git,2022-11-12 16:00:55+00:00,Лабораторная №2 по Архитектуре ЭВМ,0,anbtrfl/skkv_lab2,565187397,SystemVerilog,skkv_lab2,2667,0,2022-11-22 17:17:06+00:00,[],None
429,https://github.com/dineshannayya/rtc.git,2022-11-16 06:53:33+00:00,Real Time Core,0,dineshannayya/rtc,566669926,SystemVerilog,rtc,37,0,2022-11-18 16:43:38+00:00,[],https://api.github.com/licenses/apache-2.0
430,https://github.com/JunnanLi/FL-M32.git,2022-11-13 15:19:29+00:00,,0,JunnanLi/FL-M32,565489197,SystemVerilog,FL-M32,293,0,2023-12-14 02:12:45+00:00,[],None
431,https://github.com/deniz-sun/cs224_lab4.git,2022-11-08 19:10:15+00:00,,0,deniz-sun/cs224_lab4,563511617,SystemVerilog,cs224_lab4,3,0,2024-02-21 20:57:04+00:00,[],None
432,https://github.com/martinKindall/basys3_fpga_sandbox.git,2022-11-18 23:29:04+00:00,"Learning the basics of Systemverilog, testbench and more.",0,martinKindall/basys3_fpga_sandbox,567929479,SystemVerilog,basys3_fpga_sandbox,14,0,2022-11-18 23:29:44+00:00,"['basys3', 'fpga', 'systemverilog']",None
433,https://github.com/wijapiotr/lift.git,2022-12-01 11:19:14+00:00,,0,wijapiotr/lift,572944944,SystemVerilog,lift,3,0,2022-12-01 11:49:52+00:00,[],None
434,https://github.com/sapross/Streaming-Trace-Buffer.git,2022-11-30 09:59:39+00:00,,0,sapross/Streaming-Trace-Buffer,572452358,SystemVerilog,Streaming-Trace-Buffer,214,0,2023-06-20 17:37:07+00:00,[],None
435,https://github.com/bryan-kwan/UART-Tx-Rx.git,2022-11-10 17:16:06+00:00,Verilog UART Transmitter/Receiver FSM design based on https://nandland.com/project-7-uart-part-1-receive-data-from-computer/,0,bryan-kwan/UART-Tx-Rx,564418989,SystemVerilog,UART-Tx-Rx,2,0,2022-11-10 17:17:46+00:00,[],None
436,https://github.com/AhibAlghazali/ESE545-CELL-SPU.git,2022-11-22 03:29:45+00:00,ESE 545 Final Submission - Dual-Issue Cell SPU-Lite Multimedia Processor,1,AhibAlghazali/ESE545-CELL-SPU,569085604,,ESE545-CELL-SPU,1320,0,2022-06-16 03:46:49+00:00,[],None
437,https://github.com/LxsaChn/lab6.git,2022-11-20 06:37:34+00:00,,0,LxsaChn/lab6,568323267,SystemVerilog,lab6,27,0,2022-11-20 06:39:01+00:00,[],None
438,https://github.com/s0321011/ibex_super_system.git,2022-10-11 14:14:18+00:00,,0,s0321011/ibex_super_system,549648760,SystemVerilog,ibex_super_system,2234,0,2022-10-11 15:53:12+00:00,[],https://api.github.com/licenses/apache-2.0
439,https://github.com/rrios19/FPM-VFCI.git,2022-10-14 19:38:29+00:00,Segundo proyecto del curso verificación funcional de circuitos integrados,0,rrios19/FPM-VFCI,551634981,SystemVerilog,FPM-VFCI,1598,0,2022-11-22 05:31:33+00:00,[],None
440,https://github.com/timbarrera/Single-Cycle-RISCV-Processor.git,2022-10-08 07:52:59+00:00,,0,timbarrera/Single-Cycle-RISCV-Processor,547744577,SystemVerilog,Single-Cycle-RISCV-Processor,12,0,2022-11-18 10:57:36+00:00,[],None
441,https://github.com/alankuo04/AAHLS_LabA.git,2022-10-10 07:34:02+00:00,,0,alankuo04/AAHLS_LabA,548794042,SystemVerilog,AAHLS_LabA,91,0,2022-10-10 07:35:21+00:00,[],None
442,https://github.com/ArnyminerZ/UPV-ISDIGI-DIVISORBINARIO.git,2022-10-13 11:41:22+00:00,La segunda tarea de la asignatura ISDIGI. Diseño y verificación de un divisor binario.,1,ArnyminerZ/UPV-ISDIGI-DIVISORBINARIO,550823487,SystemVerilog,UPV-ISDIGI-DIVISORBINARIO,6378,0,2022-10-13 11:49:16+00:00,[],None
443,https://github.com/jovigob/Tarea2_ISDIGI_design.git,2022-10-11 10:03:57+00:00,,0,jovigob/Tarea2_ISDIGI_design,549520628,SystemVerilog,Tarea2_ISDIGI_design,311,0,2022-10-25 09:14:52+00:00,[],None
444,https://github.com/jdm2962/Verilog.git,2022-11-02 23:47:51+00:00,,0,jdm2962/Verilog,561094108,SystemVerilog,Verilog,2,0,2022-11-03 01:16:07+00:00,[],None
445,https://github.com/FasnaJF/product-list-processor.git,2022-11-07 07:40:23+00:00,,0,FasnaJF/product-list-processor,562757907,SystemVerilog,product-list-processor,2037,0,2022-11-07 19:41:38+00:00,[],None
446,https://github.com/HardGraphite/SystemVerilogPlayground.git,2022-10-06 01:28:53+00:00,SystemVerilog coding practices,0,HardGraphite/SystemVerilogPlayground,546373478,SystemVerilog,SystemVerilogPlayground,11,0,2022-10-17 19:16:12+00:00,[],None
447,https://github.com/vayne1125/Computer-System-Design_HW.git,2022-10-02 17:34:01+00:00,,0,vayne1125/Computer-System-Design_HW,544522112,SystemVerilog,Computer-System-Design_HW,63094,0,2022-10-04 02:30:54+00:00,[],None
448,https://github.com/ryanbelmont/School_Fall2022.git,2022-09-30 17:51:52+00:00,,0,ryanbelmont/School_Fall2022,543723138,SystemVerilog,School_Fall2022,448,0,2022-11-22 03:04:33+00:00,[],None
449,https://github.com/viceol/Lightelligence-Coding-Challenge-2022.git,2022-10-03 03:11:43+00:00,,0,viceol/Lightelligence-Coding-Challenge-2022,544681227,SystemVerilog,Lightelligence-Coding-Challenge-2022,49,0,2022-10-03 03:17:24+00:00,[],None
450,https://github.com/Kowareta993/riscv-processor-verilog.git,2022-10-08 15:41:00+00:00,Verilog description of riscv processor ,0,Kowareta993/riscv-processor-verilog,547933165,SystemVerilog,riscv-processor-verilog,20,0,2022-10-08 15:52:09+00:00,[],None
451,https://github.com/hamidkhd/MIPS-SingleCycle.git,2022-09-29 10:50:34+00:00,,0,hamidkhd/MIPS-SingleCycle,543068629,SystemVerilog,MIPS-SingleCycle,960,0,2022-09-29 10:55:26+00:00,[],None
452,https://github.com/aaarazm/FPGA_CA1.git,2022-10-09 09:18:13+00:00,Computer Assignment 1,0,aaarazm/FPGA_CA1,548294083,SystemVerilog,FPGA_CA1,5296,0,2022-10-11 16:09:22+00:00,[],None
453,https://github.com/dinhviethoa/dinhviethoa.git,2022-11-06 02:54:38+00:00,Config files for my GitHub profile.,0,dinhviethoa/dinhviethoa,562340654,SystemVerilog,dinhviethoa,6210,0,2022-11-06 02:55:49+00:00,"['config', 'github-config']",None
454,https://github.com/IasonC/16RISC-CPU.git,2022-09-24 17:04:20+00:00,16-bit RISC Harvard-architecture CPU. Work in progress. Aim to deploy on FPGA.,0,IasonC/16RISC-CPU,540904147,SystemVerilog,16RISC-CPU,48,0,2022-09-24 17:06:58+00:00,[],None
455,https://github.com/anmehta4/ece554_minilab5.git,2022-09-27 20:52:27+00:00,,0,anmehta4/ece554_minilab5,542284590,SystemVerilog,ece554_minilab5,1,0,2022-09-27 20:53:04+00:00,[],None
456,https://github.com/grantnedwards/ece748_projects.git,2022-09-28 04:33:46+00:00,,0,grantnedwards/ece748_projects,542407799,SystemVerilog,ece748_projects,30978,0,2022-12-15 03:01:14+00:00,[],None
457,https://github.com/shaswat2428/AHB-BUS-Protocol-Verification.git,2022-10-02 08:51:16+00:00,,0,shaswat2428/AHB-BUS-Protocol-Verification,544349356,SystemVerilog,AHB-BUS-Protocol-Verification,8,0,2022-10-02 08:52:45+00:00,[],None
458,https://github.com/lindaazhao/ECE253-Labs.git,2022-10-15 00:42:29+00:00,,0,lindaazhao/ECE253-Labs,551720010,SystemVerilog,ECE253-Labs,18,0,2023-10-10 16:48:19+00:00,[],None
459,https://github.com/BhavikJoshi/RISC-V-Simulator.git,2022-10-21 06:45:30+00:00,Verilog Simulation of a RISC-V Processor,0,BhavikJoshi/RISC-V-Simulator,555217561,SystemVerilog,RISC-V-Simulator,444,0,2023-10-12 20:37:23+00:00,[],None
460,https://github.com/arquitectura-de-computadores-1/ASIP_alpha.git,2022-10-25 09:28:57+00:00,,0,arquitectura-de-computadores-1/ASIP_alpha,557214169,SystemVerilog,ASIP_alpha,1788,0,2022-11-02 21:47:36+00:00,[],None
461,https://github.com/123orrin/Digital-Logic.git,2022-10-23 02:41:07+00:00,Digital Logic and Computer Architecture Modules. These projects were mainly created for an intermediate level university logic/computer course,0,123orrin/Digital-Logic,556083965,SystemVerilog,Digital-Logic,24,0,2022-10-23 18:23:23+00:00,[],None
462,https://github.com/Conquerix/dlx.git,2022-10-27 10:04:33+00:00,DLX ISA Implementation - 2 weeks project,0,Conquerix/dlx,558318286,SystemVerilog,dlx,1222,0,2024-02-03 18:32:56+00:00,[],None
463,https://github.com/PacoReinaCampo/OSVVM.git,2022-10-13 17:50:03+00:00,Open Source VHDL Verification Methodology,0,PacoReinaCampo/OSVVM,551017367,SystemVerilog,OSVVM,15111,0,2024-03-09 10:58:38+00:00,"['osvvm', 'validation']",
464,https://github.com/FETup/LLC_Cache_Simulator.git,2022-11-04 18:39:32+00:00,This project aims to develop a comprehensive simulation tool for the Last Level Cache (LLC) in a multi-processor system. The LLC is an integral component that plays a crucial role in enhancing overall system performance by efficiently managing data access for up to four processors in a shared memory configuration.,0,FETup/LLC_Cache_Simulator,561897403,SystemVerilog,LLC_Cache_Simulator,340,0,2023-11-13 03:44:59+00:00,[],None
465,https://github.com/RehanQasim-dev/RISC-V-Single-Cycle-Non-pipelined-Processor-Core.git,2022-10-09 06:13:29+00:00,This is Single cycle RISC_V processor code written in System Verilog to run on FPGAs. ,0,RehanQasim-dev/RISC-V-Single-Cycle-Non-pipelined-Processor-Core,548225103,SystemVerilog,RISC-V-Single-Cycle-Non-pipelined-Processor-Core,6,0,2023-11-13 11:10:54+00:00,[],None
466,https://github.com/tvd0405/SVA.git,2022-10-09 13:24:45+00:00,,0,tvd0405/SVA,548390353,SystemVerilog,SVA,1,0,2022-10-09 13:25:03+00:00,[],None
467,https://github.com/Marwa2019uet/Risc_V.git,2022-11-07 18:14:20+00:00,Single cycle implementation of riscv in system verilog,0,Marwa2019uet/Risc_V,563011729,SystemVerilog,Risc_V,701,0,2022-11-07 18:15:58+00:00,[],None
468,https://github.com/ece554fall22/toolchain.git,2022-10-20 21:14:48+00:00,"morpheus assembler, linker (?), and simulator",0,ece554fall22/toolchain,555044240,SystemVerilog,toolchain,1108,0,2022-12-13 00:12:34+00:00,[],None
469,https://github.com/w-tess/isa-labs.git,2022-10-16 09:47:45+00:00,,0,w-tess/isa-labs,552309903,SystemVerilog,isa-labs,63584,0,2023-03-21 20:09:12+00:00,[],None
470,https://github.com/adityab82/digital-lock.git,2022-10-25 21:01:27+00:00,Designed a digital lock in System Verilog. Used a finite state machine combined with output combinational logic to create a mealy machine.,0,adityab82/digital-lock,557525158,SystemVerilog,digital-lock,2,0,2022-10-25 21:02:55+00:00,[],None
471,https://github.com/AMaldonadoLiu/ECE-485-Project.git,2022-11-01 03:07:49+00:00,this is a project repository for ECE 485 PSU,0,AMaldonadoLiu/ECE-485-Project,560239786,SystemVerilog,ECE-485-Project,2009,0,2022-11-18 00:16:38+00:00,[],None
472,https://github.com/alex210-1/VgaTerminal.git,2022-10-27 23:42:59+00:00,,0,alex210-1/VgaTerminal,558622916,SystemVerilog,VgaTerminal,358,0,2023-01-26 17:51:24+00:00,[],None
473,https://github.com/bryan-kwan/enel453lab3.git,2022-11-02 15:26:45+00:00,,0,bryan-kwan/enel453lab3,560934517,SystemVerilog,enel453lab3,17579,0,2022-11-02 16:01:25+00:00,[],None
474,https://github.com/IrenePBGH/UVM_PRUEBA.git,2022-10-06 07:26:13+00:00,Diseño de una prueba simple en UVM,0,IrenePBGH/UVM_PRUEBA,546506852,SystemVerilog,UVM_PRUEBA,2,0,2022-10-06 21:34:24+00:00,[],None
475,https://github.com/P-coryan/SystemVerilogModules.git,2022-10-01 20:21:47+00:00,"Diferentes módulos que voy desarrollando en SystemVerilog, que van sirviendo para otros proyectos reciclando ",0,P-coryan/SystemVerilogModules,544165825,SystemVerilog,SystemVerilogModules,5,0,2022-10-01 22:16:15+00:00,[],None
476,https://github.com/shaswat2428/APB-BUS-Protocol-Verification.git,2022-10-02 08:40:11+00:00,,0,shaswat2428/APB-BUS-Protocol-Verification,544346123,SystemVerilog,APB-BUS-Protocol-Verification,4,0,2022-10-02 08:41:43+00:00,[],None
477,https://github.com/N-Rolf/CSC244-Project1.git,2022-10-03 14:20:02+00:00,15 Cent Vending Machine,0,N-Rolf/CSC244-Project1,544951051,SystemVerilog,CSC244-Project1,22308,0,2022-10-03 15:59:58+00:00,[],None
478,https://github.com/hamidkhd/MIPS-MultiCycle.git,2022-09-29 10:57:43+00:00,,0,hamidkhd/MIPS-MultiCycle,543071615,SystemVerilog,MIPS-MultiCycle,1341,0,2022-09-29 11:04:25+00:00,[],None
479,https://github.com/JtmVillan/cse140-decryption.git,2022-09-25 19:02:03+00:00,,0,JtmVillan/cse140-decryption,541278981,SystemVerilog,cse140-decryption,101,0,2022-09-25 19:02:23+00:00,[],None
480,https://github.com/JtmVillan/cse140-trafficLights.git,2022-09-25 19:06:05+00:00,,0,JtmVillan/cse140-trafficLights,541280017,SystemVerilog,cse140-trafficLights,1313,0,2022-09-25 19:06:37+00:00,[],None
481,https://github.com/syuredEw/lifegame.git,2022-09-28 05:05:59+00:00,FPGA上にlifegameを実装しました．,0,syuredEw/lifegame,542416148,SystemVerilog,lifegame,10,0,2022-09-28 05:16:22+00:00,[],None
482,https://github.com/Qrisno/Engineering.git,2022-11-04 17:27:19+00:00,,0,Qrisno/Engineering,561873507,SystemVerilog,Engineering,1,0,2022-11-04 17:29:20+00:00,[],None
483,https://github.com/jonathan2503/Sverilog_IEEE_1800_2012.git,2022-10-29 21:44:51+00:00,"I use this repository to publish my results on the  Standard 1800-2012 for SystemVerilog, Unified Hardware Design, Specification, and Verification Language ",0,jonathan2503/Sverilog_IEEE_1800_2012,559360645,SystemVerilog,Sverilog_IEEE_1800_2012,3,0,2022-11-12 20:29:56+00:00,[],None
484,https://github.com/sv8194/uvm_accumulator.git,2022-10-30 19:08:38+00:00,,0,sv8194/uvm_accumulator,559651294,SystemVerilog,uvm_accumulator,262,0,2022-10-31 15:30:12+00:00,[],None
485,https://github.com/2019ajn/Veggie-Samurai.git,2022-11-01 17:28:11+00:00,,0,2019ajn/Veggie-Samurai,560522712,SystemVerilog,Veggie-Samurai,1181,0,2022-12-14 04:05:08+00:00,[],None
486,https://github.com/VolkodavValera/-atom.git,2022-11-01 07:06:06+00:00,,0,VolkodavValera/-atom,560300109,SystemVerilog,-atom,1539,0,2022-11-02 12:43:39+00:00,[],None
487,https://github.com/harshluffy1996/ECE-551.git,2022-10-15 00:33:52+00:00,,0,harshluffy1996/ECE-551,551718165,SystemVerilog,ECE-551,9325,0,2022-12-14 07:09:10+00:00,[],None
488,https://github.com/flaviens/prepbp.git,2022-11-15 08:49:26+00:00,,0,flaviens/prepbp,566236004,SystemVerilog,prepbp,1754,0,2022-11-15 08:49:57+00:00,[],
489,https://github.com/likkaz/HW3.git,2022-11-18 20:06:38+00:00,,0,likkaz/HW3,567881204,SystemVerilog,HW3,0,0,2022-12-07 19:58:27+00:00,[],None
490,https://github.com/RaviSingh700/Fifo.git,2022-11-26 11:34:46+00:00,,0,RaviSingh700/Fifo,570864638,SystemVerilog,Fifo,7,0,2022-11-26 11:43:39+00:00,[],None
491,https://github.com/flaviens/veriskewsmall.git,2022-11-22 16:56:22+00:00,,0,flaviens/veriskewsmall,569364627,SystemVerilog,veriskewsmall,2215,0,2022-11-22 16:56:48+00:00,[],None
492,https://github.com/BoranSwaid/LSH-minhash-accelerator-project.git,2022-10-29 07:31:11+00:00,,0,BoranSwaid/LSH-minhash-accelerator-project,559143386,SystemVerilog,LSH-minhash-accelerator-project,6040,0,2023-12-03 13:28:11+00:00,[],None
493,https://github.com/oalsafi8/timed_fsms.git,2022-11-26 21:39:48+00:00,,0,oalsafi8/timed_fsms,571012602,SystemVerilog,timed_fsms,0,0,2022-11-27 04:31:19+00:00,[],None
494,https://github.com/MarceloRocha98/Controle-agricultura.git,2022-11-22 19:49:56+00:00,,0,MarceloRocha98/Controle-agricultura,569424269,SystemVerilog,Controle-agricultura,10,0,2022-11-23 14:14:42+00:00,[],None
495,https://github.com/elenaledo/test101.git,2022-10-11 04:15:59+00:00,,0,elenaledo/test101,549360194,SystemVerilog,test101,4,0,2022-10-11 04:20:14+00:00,[],None
496,https://github.com/Fall-2022-Classes/fa22-final-project-team-8.git,2022-11-28 23:15:34+00:00,fa22-final-project-team-8 created by GitHub Classroom,0,Fall-2022-Classes/fa22-final-project-team-8,571804327,SystemVerilog,fa22-final-project-team-8,1403,0,2022-12-07 20:57:39+00:00,[],None
497,https://github.com/bhanusahithya/my_projects.git,2022-11-26 09:31:37+00:00,This particular repository has the codes of some of my projects I have done till now,0,bhanusahithya/my_projects,570835021,SystemVerilog,my_projects,23,0,2023-10-27 20:38:36+00:00,[],None
498,https://github.com/RaviSingh700/fifo_V.git,2022-11-26 11:48:48+00:00,,0,RaviSingh700/fifo_V,570868111,SystemVerilog,fifo_V,17,0,2022-11-26 11:49:34+00:00,[],None
499,https://github.com/KAMOME-code/256bit-Unsigned-Sequential-Multiplier.git,2022-11-16 04:41:37+00:00,Unsigned binary 256 bit Sequential Multiplier with a 128 bit or 64 bit combinational Multiplier.,0,KAMOME-code/256bit-Unsigned-Sequential-Multiplier,566634391,SystemVerilog,256bit-Unsigned-Sequential-Multiplier,3,0,2022-11-19 09:12:07+00:00,[],None
500,https://github.com/Zandacrus/Computer-Architecture-and-Microprocessor-Memory-Project.git,2022-11-14 16:42:05+00:00,,0,Zandacrus/Computer-Architecture-and-Microprocessor-Memory-Project,565942519,SystemVerilog,Computer-Architecture-and-Microprocessor-Memory-Project,246,0,2022-11-22 18:20:25+00:00,[],None
501,https://github.com/m3aldabb/riscv-processor.git,2022-11-17 05:33:33+00:00,,0,m3aldabb/riscv-processor,567120857,SystemVerilog,riscv-processor,182,0,2023-07-04 23:30:12+00:00,[],None
502,https://github.com/samuelkravitz/6.111_Final-Project.git,2022-11-19 16:05:55+00:00,,0,samuelkravitz/6.111_Final-Project,568152635,SystemVerilog,6.111_Final-Project,8657,0,2022-12-04 17:18:54+00:00,[],None
503,https://github.com/MathieuSnd/paf-riscv.git,2022-11-24 13:14:13+00:00,,0,MathieuSnd/paf-riscv,570156240,SystemVerilog,paf-riscv,200,0,2022-12-28 12:30:42+00:00,[],None
504,https://github.com/Qnixx/Qx1.git,2022-11-25 02:52:51+00:00,Offical repo for the Qx1 CPU architecture.,0,Qnixx/Qx1,570372673,SystemVerilog,Qx1,6,0,2022-11-25 05:48:20+00:00,[],https://api.github.com/licenses/mit
505,https://github.com/noemiabril/AtariST_MiSTer-Arrow_SoCKit.git,2022-10-30 16:21:56+00:00,AtariST for MiSTer Arrow SoCKit,0,noemiabril/AtariST_MiSTer-Arrow_SoCKit,559604359,SystemVerilog,AtariST_MiSTer-Arrow_SoCKit,12839,0,2022-10-30 16:22:06+00:00,[],None
506,https://github.com/iamazizhaider/singlecycle_riscv_processor.git,2022-11-03 17:57:09+00:00,"This project was designed to run on Nexys A7 Artix-7 FPGA Trainer Board. This processor written in System Verilog can run I-Type, R-Type, B-Type, S-Type RISC-V commands. The current instruction set that has been uploaded here finds the greatest common divisor of two numbers.",0,iamazizhaider/singlecycle_riscv_processor,561447434,SystemVerilog,singlecycle_riscv_processor,19,0,2022-12-25 08:36:25+00:00,"['risc-v', 'single-cycle-processor']",None
507,https://github.com/nnguyendinh/M116C-Honors.git,2022-10-31 00:11:58+00:00,,0,nnguyendinh/M116C-Honors,559719542,SystemVerilog,M116C-Honors,80,0,2022-10-31 00:13:14+00:00,[],None
508,https://github.com/Seema510126/miraculous_treasure.git,2022-10-27 10:42:08+00:00,,0,Seema510126/miraculous_treasure,558332778,,miraculous_treasure,2,0,2022-10-20 13:44:24+00:00,[],None
509,https://github.com/MIET-APS-Labs/RISC-V_based_CPU.git,2022-09-24 11:30:04+00:00,"Creating my own 32 bit ALU based on RISC-V architecture, extended with simple SIMD commands",1,MIET-APS-Labs/RISC-V_based_CPU,540806779,SystemVerilog,RISC-V_based_CPU,338,0,2022-10-10 22:29:53+00:00,[],https://api.github.com/licenses/mit
510,https://github.com/Seyviour/riscv_pipelined.git,2022-09-25 21:54:01+00:00,A pipelined (partial) implementation of the RV32I specification,0,Seyviour/riscv_pipelined,541319668,SystemVerilog,riscv_pipelined,257,0,2022-10-17 14:29:58+00:00,"['computer-architecture', 'risc-v', 'systemverilog']",None
511,https://github.com/za1nrkhan/awesome-dv.git,2022-11-09 12:10:32+00:00,,0,za1nrkhan/awesome-dv,563821349,SystemVerilog,awesome-dv,5059,0,2023-02-06 17:27:19+00:00,[],https://api.github.com/licenses/apache-2.0
512,https://github.com/Rupesh1510/UART-sim-in-Verilog-DD-CP.git,2022-11-09 03:09:55+00:00,This is the repo of my course project of the subject digital design,0,Rupesh1510/UART-sim-in-Verilog-DD-CP,563648586,SystemVerilog,UART-sim-in-Verilog-DD-CP,52,0,2022-11-18 05:57:47+00:00,[],None
513,https://github.com/bryan-kwan/ENEL453Lab5.git,2022-11-11 21:17:51+00:00,,0,bryan-kwan/ENEL453Lab5,564934048,SystemVerilog,ENEL453Lab5,175,0,2022-11-11 21:18:26+00:00,[],None
514,https://github.com/Benjamin-Anderson-II/day-counter.git,2022-11-12 07:09:51+00:00,"SystemVerilog code that, when simulated create the circuit necessary to design a clock.",0,Benjamin-Anderson-II/day-counter,565050009,SystemVerilog,day-counter,4,0,2022-11-12 07:11:04+00:00,[],None
515,https://github.com/Palavelli-Naidu/UVM_dff.git,2022-11-10 18:30:28+00:00,,0,Palavelli-Naidu/UVM_dff,564446345,SystemVerilog,UVM_dff,3,0,2022-11-11 05:09:28+00:00,[],None
516,https://github.com/Jachm11/TallerDigitalesLab4.git,2022-09-28 23:26:51+00:00,Juego TIC TAC TOE en SystemVerilog,0,Jachm11/TallerDigitalesLab4,542832238,,TallerDigitalesLab4,237,0,2022-09-18 19:54:45+00:00,[],None
517,https://github.com/DarylFSN/Custom-ISA.git,2022-10-03 22:53:07+00:00,Computer Architecture Project,0,DarylFSN/Custom-ISA,545170891,SystemVerilog,Custom-ISA,721,0,2022-10-03 22:55:54+00:00,[],None
518,https://github.com/KasperHesse/riscv-core.git,2022-09-27 12:48:39+00:00,,0,KasperHesse/riscv-core,542081599,SystemVerilog,riscv-core,178,0,2023-10-30 15:37:52+00:00,[],https://api.github.com/licenses/unlicense
519,https://github.com/Nitish1371/UVM.git,2022-10-04 04:42:19+00:00,,0,Nitish1371/UVM,545276952,SystemVerilog,UVM,20,0,2022-10-24 05:30:11+00:00,[],None
520,https://github.com/MiraculousTreasure/B5C1.git,2022-10-13 05:40:01+00:00,,0,MiraculousTreasure/B5C1,550655872,SystemVerilog,B5C1,1,0,2022-10-13 05:40:32+00:00,[],None
521,https://github.com/anaelenaBC/EL3307ProyectoIII.git,2022-10-18 21:57:41+00:00,,0,anaelenaBC/EL3307ProyectoIII,553852806,SystemVerilog,EL3307ProyectoIII,218,0,2022-11-17 09:52:34+00:00,[],None
522,https://github.com/dmezh/mips.git,2022-11-08 17:56:04+00:00,,0,dmezh/mips,563483954,SystemVerilog,mips,11,0,2022-11-08 17:59:03+00:00,[],None
523,https://github.com/naveen0215/uvm_sequence_library.git,2022-10-28 01:15:06+00:00,Just for wiki creation,0,naveen0215/uvm_sequence_library,558644049,SystemVerilog,uvm_sequence_library,202,0,2023-01-23 06:07:53+00:00,[],None
524,https://github.com/tjthejuggler/sva-tests.git,2022-11-08 07:51:10+00:00,,0,tjthejuggler/sva-tests,563242303,SystemVerilog,sva-tests,17,0,2022-11-08 07:51:19+00:00,[],None
525,https://github.com/VELIDIPRADEEPKUMAR/FPGA-implementation-of-AdEx-Neuron-model.git,2022-10-23 05:40:37+00:00,This repo consists of verilog neuron model of AdEx neuron with our custum approximations,0,VELIDIPRADEEPKUMAR/FPGA-implementation-of-AdEx-Neuron-model,556128985,SystemVerilog,FPGA-implementation-of-AdEx-Neuron-model,395,0,2022-10-23 05:42:45+00:00,[],None
526,https://github.com/retar-kamuy/verilator.git,2022-10-15 06:20:27+00:00,,0,retar-kamuy/verilator,551811954,SystemVerilog,verilator,6976,0,2023-06-17 12:42:14+00:00,[],None
527,https://github.com/weilong0512/AXI-bus-protocal.git,2022-10-15 14:25:58+00:00,,0,weilong0512/AXI-bus-protocal,551976074,SystemVerilog,AXI-bus-protocal,12,0,2022-10-16 09:28:03+00:00,[],None
528,https://github.com/N-Rolf/Project_2.git,2022-11-08 20:18:44+00:00,ARM Processor for FPGA Board,0,N-Rolf/Project_2,563535375,SystemVerilog,Project_2,9287,0,2023-12-05 04:32:10+00:00,[],None
529,https://github.com/cliffordkchan/Reduced-RISC-V-CPU.git,2022-11-17 10:15:36+00:00,Lab 4 groupwork,0,cliffordkchan/Reduced-RISC-V-CPU,567215092,SystemVerilog,Reduced-RISC-V-CPU,348,0,2022-11-24 13:20:59+00:00,[],None
530,https://github.com/abhishekvarma827/UVM.git,2022-09-26 19:58:21+00:00,,0,abhishekvarma827/UVM,541762075,SystemVerilog,UVM,215,0,2024-02-17 01:59:35+00:00,[],None
531,https://github.com/ff1211/fpga-lite.git,2022-11-28 02:56:24+00:00,,0,ff1211/fpga-lite,571394769,SystemVerilog,fpga-lite,90,0,2022-11-28 08:04:01+00:00,[],https://api.github.com/licenses/mit
532,https://github.com/DandyForever/PipelinedRiscV-RTL.git,2022-10-26 06:44:12+00:00,RTL for Pipelined RISC-V processor,0,DandyForever/PipelinedRiscV-RTL,557708731,SystemVerilog,PipelinedRiscV-RTL,67,0,2022-12-07 14:02:13+00:00,[],None
533,https://github.com/KevinZhuGit/ECE253.git,2022-11-11 19:50:43+00:00,Digital and Computer Systems Course,0,KevinZhuGit/ECE253,564910790,SystemVerilog,ECE253,192,0,2022-11-11 19:51:30+00:00,[],None
534,https://github.com/Sharmi-Rajakumaran/System_Verilog_L.git,2022-11-18 09:11:37+00:00,,0,Sharmi-Rajakumaran/System_Verilog_L,567654639,SystemVerilog,System_Verilog_L,53,0,2022-11-18 10:07:07+00:00,[],None
535,https://github.com/ulissesmaffa/game-snake.git,2022-11-20 21:59:56+00:00,,0,ulissesmaffa/game-snake,568554324,SystemVerilog,game-snake,398,0,2022-12-06 19:11:42+00:00,[],None
536,https://github.com/syedmouaazfarrukh/RISCV-Single_Cycle_Processor_-R-S-U-I-.git,2022-11-20 17:02:53+00:00,"This repo contains the single cycle architecture for RISC V involving R, I, U and S type instructions",0,syedmouaazfarrukh/RISCV-Single_Cycle_Processor_-R-S-U-I-,568480188,SystemVerilog,RISCV-Single_Cycle_Processor_-R-S-U-I-,6,0,2022-11-20 17:04:31+00:00,[],None
537,https://github.com/vedadehhc/rend3r.git,2022-11-19 23:35:17+00:00,,0,vedadehhc/rend3r,568254812,SystemVerilog,rend3r,5937,0,2022-11-19 23:41:09+00:00,[],None
538,https://github.com/worstanimu/riscv_project.git,2022-11-19 20:17:40+00:00,"32-bit, 5-stage pipelined RISC-V SystemVerilog Model",0,worstanimu/riscv_project,568216632,SystemVerilog,riscv_project,17,0,2022-11-26 23:15:30+00:00,[],https://api.github.com/licenses/gpl-3.0
539,https://github.com/ezrakang/Xilinx_FPGA_Augmented_Reality_Card.git,2022-11-27 19:37:27+00:00,,0,ezrakang/Xilinx_FPGA_Augmented_Reality_Card,571299956,SystemVerilog,Xilinx_FPGA_Augmented_Reality_Card,584,0,2022-12-06 01:05:47+00:00,[],None
540,https://github.com/nickhoug/6205-fp.git,2022-11-30 22:40:21+00:00,,0,nickhoug/6205-fp,572726998,SystemVerilog,6205-fp,118385,0,2022-11-30 22:46:09+00:00,[],https://api.github.com/licenses/mit
541,https://github.com/nmi-sc/riscv-dv.git,2022-10-21 11:17:54+00:00,,0,nmi-sc/riscv-dv,555329718,SystemVerilog,riscv-dv,10891,0,2022-10-21 11:20:02+00:00,[],https://api.github.com/licenses/apache-2.0
542,https://github.com/echen352/Number-Guessing.git,2022-11-15 23:13:44+00:00,Advanced Digital Final Project,0,echen352/Number-Guessing,566554695,SystemVerilog,Number-Guessing,2261,0,2022-11-16 00:33:37+00:00,[],None
543,https://github.com/HazeSystem/snake-fpga.git,2022-11-15 16:47:27+00:00,A Snake clone made using the Verilog simulator on 8bitworkshop.com,0,HazeSystem/snake-fpga,566428141,SystemVerilog,snake-fpga,7,0,2022-11-21 20:13:08+00:00,[],None
544,https://github.com/ECE4278/lab9.git,2022-11-15 16:23:49+00:00,,0,ECE4278/lab9,566418563,SystemVerilog,lab9,18,0,2022-11-16 01:39:56+00:00,[],None
545,https://github.com/ShahidShann/uvm_object_print.git,2022-11-15 10:43:25+00:00,,0,ShahidShann/uvm_object_print,566279796,SystemVerilog,uvm_object_print,6082,0,2022-11-15 12:06:06+00:00,[],None
546,https://github.com/junhwanlee2316/32bit_ArithmeticLogicUnit.git,2022-10-04 06:01:40+00:00,,0,junhwanlee2316/32bit_ArithmeticLogicUnit,545302476,SystemVerilog,32bit_ArithmeticLogicUnit,9,0,2022-10-28 06:36:20+00:00,[],None
547,https://github.com/great-park/Computer-Architecture-Lab.git,2022-10-04 15:19:31+00:00,"MIPS Single_Cycle Datapath Implementation The final result will be stored in ""Lab10"", which will be implemented sequentially according to the Lab's number.",0,great-park/Computer-Architecture-Lab,545555840,SystemVerilog,Computer-Architecture-Lab,32,0,2022-12-06 04:28:31+00:00,[],None
548,https://github.com/XuJiaWen1998/Victim-Cache-and-Combining-Branch-Predictor-on-32-bit-MIPS-processor-.git,2022-10-02 23:28:28+00:00,,0,XuJiaWen1998/Victim-Cache-and-Combining-Branch-Predictor-on-32-bit-MIPS-processor-,544623992,SystemVerilog,Victim-Cache-and-Combining-Branch-Predictor-on-32-bit-MIPS-processor-,4891,0,2023-09-18 01:48:03+00:00,[],None
549,https://github.com/Jettypanini/ChipDesignandVerification.git,2022-10-01 18:28:03+00:00,,0,Jettypanini/ChipDesignandVerification,544133627,SystemVerilog,ChipDesignandVerification,1375,0,2022-11-08 13:37:24+00:00,[],None
550,https://github.com/tobyProctor/100daysOfRTL.git,2022-10-12 06:59:18+00:00,100 days of RTL,0,tobyProctor/100daysOfRTL,550074405,SystemVerilog,100daysOfRTL,13,0,2022-10-13 18:36:27+00:00,[],None
551,https://github.com/ajwm8103/verilog-music.git,2022-10-16 20:23:29+00:00,,0,ajwm8103/verilog-music,552541220,SystemVerilog,verilog-music,26435,0,2022-10-16 20:24:13+00:00,[],None
552,https://github.com/Desrep/Proyectos_functional_verification.git,2022-10-17 05:51:35+00:00,,0,Desrep/Proyectos_functional_verification,552717806,SystemVerilog,Proyectos_functional_verification,4291,0,2023-03-21 01:50:38+00:00,[],
553,https://github.com/aaronlio/ECE253.git,2022-09-26 03:12:42+00:00,,0,aaronlio/ECE253,541388851,SystemVerilog,ECE253,60,0,2022-11-02 20:15:35+00:00,[],None
554,https://github.com/VishwaRiscVPowerModeling/riscv_power_modeling.git,2022-10-10 09:32:17+00:00,,0,VishwaRiscVPowerModeling/riscv_power_modeling,548852760,SystemVerilog,riscv_power_modeling,131,0,2022-10-11 07:13:30+00:00,[],None
555,https://github.com/ThrudTheBarbarian/xio.git,2022-10-20 23:52:59+00:00,XL io subsystem using Gowin GW2A-18,0,ThrudTheBarbarian/xio,555091216,SystemVerilog,xio,29,0,2022-10-21 00:14:14+00:00,[],https://api.github.com/licenses/gpl-3.0
556,https://github.com/jhladik/zybo-playground.git,2022-11-07 01:54:03+00:00,,0,jhladik/zybo-playground,562667712,SystemVerilog,zybo-playground,64,0,2022-11-07 01:59:21+00:00,[],https://api.github.com/licenses/gpl-3.0
557,https://github.com/AkshatDhavala/SpandexCode.git,2022-11-07 03:05:58+00:00,,0,AkshatDhavala/SpandexCode,562685382,SystemVerilog,SpandexCode,11,0,2022-11-07 03:40:08+00:00,[],None
558,https://github.com/Ammar-10xe/RISCV-32I-3-Stage-Pipelined-Processor.git,2022-11-30 15:13:39+00:00,This repo contains the three stage pipelined processor of RV32I,0,Ammar-10xe/RISCV-32I-3-Stage-Pipelined-Processor,572576291,SystemVerilog,RISCV-32I-3-Stage-Pipelined-Processor,1036,0,2022-12-02 21:49:21+00:00,[],None
559,https://github.com/mahadevaswamy05/MIT_Code.git,2022-11-08 18:19:43+00:00,,0,mahadevaswamy05/MIT_Code,563492931,SystemVerilog,MIT_Code,19512,0,2023-05-20 09:44:30+00:00,[],None
560,https://github.com/LeviJunior21/Lab.-Organizacao-Arquitetura-de-Computadores.git,2022-10-16 17:34:12+00:00,,0,LeviJunior21/Lab.-Organizacao-Arquitetura-de-Computadores,552480837,SystemVerilog,Lab.-Organizacao-Arquitetura-de-Computadores,10726,0,2023-11-11 15:52:47+00:00,[],None
561,https://github.com/dlyixue/pipCpu.git,2022-10-11 11:41:01+00:00,,0,dlyixue/pipCpu,549567558,SystemVerilog,pipCpu,8,0,2022-10-11 11:48:10+00:00,[],None
562,https://github.com/sapross/risc_dbg_uart.git,2022-10-07 12:00:26+00:00,,0,sapross/risc_dbg_uart,547266445,SystemVerilog,risc_dbg_uart,834,0,2023-10-08 12:20:50+00:00,[],
563,https://github.com/pmajtas/VDIC.git,2022-10-13 14:43:38+00:00,,0,pmajtas/VDIC,550922144,SystemVerilog,VDIC,4826,0,2022-11-03 14:31:40+00:00,[],None
564,https://github.com/rrios19/PATTERN-VFCI.git,2022-10-06 03:50:28+00:00,Ejemplo para DUT simple usando UVM,0,rrios19/PATTERN-VFCI,546422530,SystemVerilog,PATTERN-VFCI,10,0,2022-10-20 19:51:49+00:00,[],None
565,https://github.com/ishraqtashdid/Automated-Washing-Machine.git,2022-11-12 14:24:04+00:00,,0,ishraqtashdid/Automated-Washing-Machine,565159119,SystemVerilog,Automated-Washing-Machine,3,0,2022-11-12 14:25:25+00:00,[],None
566,https://github.com/shuny42657/6.205_lab05.git,2022-10-24 13:50:10+00:00,lab05,0,shuny42657/6.205_lab05,556777436,SystemVerilog,6.205_lab05,107,0,2022-10-24 13:51:50+00:00,[],None
567,https://github.com/mohammedabdulhaq/Synchronous-fifo.git,2022-10-19 06:55:08+00:00,In this i and my friend kaushik have designed a Synchronous fifo.,0,mohammedabdulhaq/Synchronous-fifo,554046067,SystemVerilog,Synchronous-fifo,1,0,2022-10-19 07:03:00+00:00,[],None
568,https://github.com/UlkeiSzabolcs/Large-Scale-Integrated-Circuits.git,2022-10-20 13:34:54+00:00,,0,UlkeiSzabolcs/Large-Scale-Integrated-Circuits,554837205,SystemVerilog,Large-Scale-Integrated-Circuits,3035,0,2022-10-20 13:36:20+00:00,[],None
569,https://github.com/2nina2/Nonogram-Solver.git,2022-10-23 20:58:15+00:00,nonogram solver built on FPGA,0,2nina2/Nonogram-Solver,556435155,SystemVerilog,Nonogram-Solver,1110,0,2023-01-28 16:44:04+00:00,[],None
570,https://github.com/erasskazov/axi-lite-apb-converter.git,2022-10-28 09:47:26+00:00,,0,erasskazov/axi-lite-apb-converter,558788065,SystemVerilog,axi-lite-apb-converter,41,0,2022-10-28 09:57:20+00:00,[],None
571,https://github.com/lukasibashvili/compe457.git,2022-11-04 19:07:04+00:00,,1,lukasibashvili/compe457,561906383,SystemVerilog,compe457,2,0,2022-11-04 19:13:30+00:00,[],None
572,https://github.com/glovermart/Design-of-Digital-Systems-2.git,2022-11-16 18:58:12+00:00,Project Work in the course DDS 2,0,glovermart/Design-of-Digital-Systems-2,566950895,SystemVerilog,Design-of-Digital-Systems-2,413,0,2022-11-24 20:54:50+00:00,[],None
573,https://github.com/joeya20/ENEL592-FinalProject.git,2022-11-21 20:33:06+00:00,,0,joeya20/ENEL592-FinalProject,568980911,SystemVerilog,ENEL592-FinalProject,39674,0,2022-12-11 00:27:57+00:00,[],None
574,https://github.com/asimahsan1990/cadence_system_verilog_labs.git,2022-10-10 11:33:54+00:00,,0,asimahsan1990/cadence_system_verilog_labs,548912199,SystemVerilog,cadence_system_verilog_labs,8,0,2022-10-10 11:47:19+00:00,[],None
575,https://github.com/yacremann/electron_event_generator.git,2022-10-03 13:11:09+00:00,Device and firmware to simulate electron events on a delayline detector,0,yacremann/electron_event_generator,544916226,SystemVerilog,electron_event_generator,1889,0,2022-10-03 13:25:36+00:00,[],
576,https://github.com/pAuLocordero222/Quiz_VFCI.git,2022-10-13 04:39:33+00:00,,0,pAuLocordero222/Quiz_VFCI,550634601,SystemVerilog,Quiz_VFCI,4154,0,2022-10-13 04:45:49+00:00,[],None
577,https://github.com/bryan-kwan/enel453lab3b.git,2022-11-06 01:33:20+00:00,,0,bryan-kwan/enel453lab3b,562327547,SystemVerilog,enel453lab3b,50,0,2022-11-06 01:34:04+00:00,[],None
578,https://github.com/jrchakalo/VHDL.git,2022-11-05 13:58:52+00:00,Repositório de códigos em VHDL,0,jrchakalo/VHDL,562162619,SystemVerilog,VHDL,3,0,2022-11-05 14:07:40+00:00,[],None
579,https://github.com/ahnhy1324/altera.git,2022-10-08 06:13:52+00:00,verilog,0,ahnhy1324/altera,547707635,SystemVerilog,altera,32614,0,2022-10-08 06:14:35+00:00,[],None
580,https://github.com/ChenJianJun520/AXI.git,2022-11-25 02:05:38+00:00,Using systemverilog write AXI,0,ChenJianJun520/AXI,570363050,SystemVerilog,AXI,7,0,2022-11-25 02:10:46+00:00,[],None
581,https://github.com/ONQLin/Segway_551.git,2022-11-30 16:01:44+00:00,Sim and Syn RTL design for Segway prj,0,ONQLin/Segway_551,572596445,SystemVerilog,Segway_551,300,0,2022-12-20 05:10:13+00:00,[],None
582,https://github.com/noemiabril/AtariST_MiSTer-DE10-Standard.git,2022-11-27 15:02:44+00:00,AtariST Core for MiSTer DE10-Standard,0,noemiabril/AtariST_MiSTer-DE10-Standard,571222778,SystemVerilog,AtariST_MiSTer-DE10-Standard,12839,0,2022-11-27 15:02:53+00:00,[],None
583,https://github.com/rhit-bryantlj/VerilogPongGame.git,2022-10-31 13:05:50+00:00,Repository containing the code for implementing the classic game Pong on a Nexys A7 Digilent FPGA development board.,1,rhit-bryantlj/VerilogPongGame,559958458,SystemVerilog,VerilogPongGame,6762,0,2024-03-01 12:59:29+00:00,"['digitaldesign', 'systemverilog', 'verilog', 'vhdl']",None
584,https://github.com/mingfeii/script.git,2022-11-12 06:36:59+00:00,有用的脚本,0,mingfeii/script,565042973,SystemVerilog,script,2280,0,2023-05-11 15:03:12+00:00,[],None
585,https://github.com/nvchuyen/Verification_of_SPI_memory.git,2022-12-01 04:06:22+00:00,,0,nvchuyen/Verification_of_SPI_memory,572804443,SystemVerilog,Verification_of_SPI_memory,5622,0,2023-11-06 08:54:55+00:00,[],None
586,https://github.com/HipEx15/MIPS_Processor.git,2022-09-30 18:57:23+00:00,,0,HipEx15/MIPS_Processor,543747885,SystemVerilog,MIPS_Processor,2805,0,2023-07-31 11:44:20+00:00,[],None
587,https://github.com/suti333/PipelinedProcessor.git,2022-10-23 13:54:01+00:00,"Simulation of a 5-stage Pipelined Processor with static branch prediction in SystemVerilog, based on a custom MIPS instruction set and benchmarked the processor for a given set of tasks.",1,suti333/PipelinedProcessor,556282696,SystemVerilog,PipelinedProcessor,99,0,2023-11-03 17:09:35+00:00,[],None
588,https://github.com/HongjianZz/FPGA-Projects-HJ.git,2022-10-30 23:17:24+00:00,In class FPGA related projects,0,HongjianZz/FPGA-Projects-HJ,559709654,SystemVerilog,FPGA-Projects-HJ,5,0,2022-10-30 23:19:04+00:00,[],None
589,https://github.com/LongHoGit/Memory.git,2022-11-02 02:28:30+00:00,Include data memory and instruction memory,0,LongHoGit/Memory,560676572,SystemVerilog,Memory,4,0,2022-11-02 02:32:43+00:00,[],None
590,https://github.com/LongHoGit/lsu.git,2022-11-02 02:35:15+00:00,"The Load-Store Unit include Data memory, Input peripheral memory and Output peripheral memory",0,LongHoGit/lsu,560678197,SystemVerilog,lsu,6,0,2022-11-02 02:35:45+00:00,[],None
591,https://github.com/architjaiswal/GPIO_IP.git,2022-10-06 22:38:00+00:00,,0,architjaiswal/GPIO_IP,546940500,SystemVerilog,GPIO_IP,37873,0,2022-10-06 22:39:10+00:00,[],None
592,https://github.com/faysal04/uvm_practice_v1.git,2022-10-14 07:48:08+00:00,,0,faysal04/uvm_practice_v1,551330758,SystemVerilog,uvm_practice_v1,11,0,2022-10-14 08:03:01+00:00,[],None
593,https://github.com/liloheinrich/ConwaysGameOfLife.git,2022-10-03 21:14:41+00:00,Computer Architecture Lab 1 Conway's Game of Life,1,liloheinrich/ConwaysGameOfLife,545139586,SystemVerilog,ConwaysGameOfLife,1344,0,2022-11-17 03:22:04+00:00,[],None
594,https://github.com/ECE4278/lab4.git,2022-10-04 10:49:26+00:00,,0,ECE4278/lab4,545424359,SystemVerilog,lab4,11,0,2022-10-04 10:52:57+00:00,[],None
595,https://github.com/ShahidShann/events.git,2022-11-16 06:18:41+00:00,,0,ShahidShann/events,566659744,SystemVerilog,events,33,0,2022-11-16 06:43:34+00:00,[],None
596,https://github.com/davidrm3/FinalProject.git,2022-11-16 20:12:05+00:00,ECE385 final project,0,davidrm3/FinalProject,566976232,SystemVerilog,FinalProject,6628,0,2022-11-16 23:29:04+00:00,[],None
597,https://github.com/marisolcastellanos/RISCV-5-stage-Pipeline.git,2022-11-22 15:40:34+00:00,,0,marisolcastellanos/RISCV-5-stage-Pipeline,569335717,SystemVerilog,RISCV-5-stage-Pipeline,54,0,2022-11-22 16:16:05+00:00,[],None
598,https://github.com/MANOJKUMAR-CM/RISC_V.git,2022-11-29 17:22:52+00:00,A Prototype of RISC_V Processor which implements I Type Instructions.,0,MANOJKUMAR-CM/RISC_V,572161421,SystemVerilog,RISC_V,83,0,2022-11-29 17:27:22+00:00,[],None
599,https://github.com/justinscottlee/Ruby-Geyser-RV32I.git,2022-11-24 17:02:39+00:00,"Basic RV32I core implemented in SystemVerilog supporting all instructions except EBREAK and ECALL. The included instruction_memory.mem program calculates 11! * sin(2), and should read 36296192 if functioning properly.",0,justinscottlee/Ruby-Geyser-RV32I,570239513,SystemVerilog,Ruby-Geyser-RV32I,1040,0,2023-05-13 05:10:45+00:00,[],https://api.github.com/licenses/gpl-3.0
600,https://github.com/dillionnason/ECE-275-Final.git,2022-11-24 01:29:12+00:00,Pong implemented in System Verilog on DE0 board,1,dillionnason/ECE-275-Final,569945415,SystemVerilog,ECE-275-Final,2126,0,2022-11-30 22:38:19+00:00,[],None
601,https://github.com/billLeeTheScienceGuy/ECE551_RIP_RUDY.git,2022-11-30 16:07:32+00:00,Final project 10/10,0,billLeeTheScienceGuy/ECE551_RIP_RUDY,572598880,SystemVerilog,ECE551_RIP_RUDY,128,0,2022-12-02 18:03:16+00:00,[],None
602,https://github.com/thugiang1308/verify_qspi.git,2022-10-16 16:35:18+00:00,,0,thugiang1308/verify_qspi,552457888,SystemVerilog,verify_qspi,1,0,2022-10-28 11:14:01+00:00,[],None
603,https://github.com/noemiabril/NES_MiSTer-SoCKit.git,2022-10-20 12:01:13+00:00,NES/Famicom MiSTer Arrow SoCKit,0,noemiabril/NES_MiSTer-SoCKit,554791457,SystemVerilog,NES_MiSTer-SoCKit,2173,0,2022-10-20 12:01:31+00:00,[],None
604,https://github.com/mvcrk/g2uvm_Sig_access.git,2022-11-27 17:27:57+00:00,,0,mvcrk/g2uvm_Sig_access,571265337,SystemVerilog,g2uvm_Sig_access,10,0,2022-11-27 17:40:41+00:00,[],None
605,https://github.com/Jordan-Mariah/final-project-CPE133.git,2022-11-15 21:29:31+00:00,bits and stuff,0,Jordan-Mariah/final-project-CPE133,566527450,SystemVerilog,final-project-CPE133,17,0,2022-11-17 22:22:08+00:00,[],None
606,https://github.com/smorsua/risc-v-isdigi.git,2022-11-16 07:27:42+00:00,,0,smorsua/risc-v-isdigi,566680287,SystemVerilog,risc-v-isdigi,42506,0,2023-02-21 17:00:51+00:00,[],None
607,https://github.com/Leticiagc/LOAC.git,2022-11-03 18:17:26+00:00,,0,Leticiagc/LOAC,561454760,SystemVerilog,LOAC,2,0,2022-11-17 17:59:32+00:00,[],None
608,https://github.com/adinavale/cover_groups.git,2022-11-09 23:27:42+00:00,,0,adinavale/cover_groups,564069101,SystemVerilog,cover_groups,5,0,2022-11-09 23:34:48+00:00,[],None
609,https://github.com/noemiabril/S32X_MiSTer-Arrow_SoCKit.git,2022-10-27 13:10:10+00:00,"Sega ""Megadrive"" 32X for Arrow SoCKit",0,noemiabril/S32X_MiSTer-Arrow_SoCKit,558392304,SystemVerilog,S32X_MiSTer-Arrow_SoCKit,3801,0,2022-10-27 13:10:20+00:00,[],None
610,https://github.com/PathakamuriNaresh/AXI_FIFO_BFM_N.git,2022-09-26 09:55:01+00:00,,0,PathakamuriNaresh/AXI_FIFO_BFM_N,541515860,SystemVerilog,AXI_FIFO_BFM_N,1596,0,2022-09-26 09:55:23+00:00,[],None
611,https://github.com/JtmVillan/cse140-multiply.git,2022-09-25 19:04:56+00:00,,0,JtmVillan/cse140-multiply,541279666,SystemVerilog,cse140-multiply,153,0,2022-09-25 19:05:27+00:00,[],None
612,https://github.com/JtmVillan/cse140-encryption.git,2022-09-25 19:03:17+00:00,,0,JtmVillan/cse140-encryption,541279275,SystemVerilog,cse140-encryption,80,0,2022-09-25 19:13:02+00:00,[],None
613,https://github.com/JtmVillan/cse140-alarm.git,2022-09-25 19:01:09+00:00,,0,JtmVillan/cse140-alarm,541278753,SystemVerilog,cse140-alarm,117,0,2022-09-25 19:01:48+00:00,[],None
614,https://github.com/gnodipac886/Hardware-Project-Template.git,2022-11-07 04:39:03+00:00,Project Template for Hardware Projects ,0,gnodipac886/Hardware-Project-Template,562707335,SystemVerilog,Hardware-Project-Template,26,0,2022-11-07 04:40:12+00:00,[],None
615,https://github.com/hrishit007/memoryproject.git,2022-11-05 14:31:11+00:00,,1,hrishit007/memoryproject,562172588,SystemVerilog,memoryproject,115,0,2022-11-13 14:24:03+00:00,[],None
616,https://github.com/jstalex/RISC-V_CPU.git,2022-11-02 12:29:41+00:00,Simple single-cycle processor based on RISC-V architecture,0,jstalex/RISC-V_CPU,560857697,SystemVerilog,RISC-V_CPU,185,0,2022-11-17 16:31:56+00:00,[],https://api.github.com/licenses/mit
617,https://github.com/ziqiangt/systemverilog-design_patterns.git,2022-11-02 13:33:16+00:00,This is a systemverilog version design patterns. All examples are followed by Alexander Shvets. (Please view https://refactoringguru.cn/design-patterns/catalog),0,ziqiangt/systemverilog-design_patterns,560882848,SystemVerilog,systemverilog-design_patterns,28,0,2022-11-02 13:58:35+00:00,[],None
618,https://github.com/smckee99/CPE426.git,2022-11-01 21:12:32+00:00,Hardware Security Labs,0,smckee99/CPE426,560600412,SystemVerilog,CPE426,3,0,2022-11-01 21:16:14+00:00,[],None
619,https://github.com/PathakamuriNaresh/Practice_Git.git,2022-11-12 14:10:55+00:00,Just for practice,0,PathakamuriNaresh/Practice_Git,565155128,SystemVerilog,Practice_Git,7,0,2022-11-12 14:17:16+00:00,[],None
620,https://github.com/lemon-gith/citrus_pressing_unit.git,2022-11-29 20:29:00+00:00,,0,lemon-gith/citrus_pressing_unit,572227993,SystemVerilog,citrus_pressing_unit,24,0,2023-07-28 19:56:52+00:00,[],https://api.github.com/licenses/agpl-3.0
