,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/lowRISC/opentitan.git,2019-08-26 16:30:16+00:00,OpenTitan: Open source silicon root of trust,690,lowRISC/opentitan,204516692,SystemVerilog,opentitan,136162,2340,2024-04-12 04:58:27+00:00,[],https://api.github.com/licenses/apache-2.0
1,https://github.com/hdl-util/hdmi.git,2019-08-17 00:13:07+00:00,Send video/audio over HDMI on an FPGA,106,hdl-util/hdmi,202815014,SystemVerilog,hdmi,4327,1002,2024-04-09 23:48:47+00:00,"['hdmi', 'fpga', 'dvi', 'audio', 'video', 'systemverilog', 'hdlmake', 'quartus', 'altera', 'xilinx', 'intel', 'vivado']",
2,https://github.com/chipsalliance/Cores-VeeR-EH1.git,2019-06-02 06:32:38+00:00,VeeR EH1 core,205,chipsalliance/Cores-VeeR-EH1,189812971,SystemVerilog,Cores-VeeR-EH1,18465,771,2024-04-10 08:36:19+00:00,"['processor', 'risc', 'riscv', 'risc-v', 'fusesoc', 'verilator', 'western-digital', 'open-source-hardware', 'rtl', 'fpga', 'asic-design', 'riscv32', 'ahb-lite', 'axi4', 'veer']",https://api.github.com/licenses/apache-2.0
3,https://github.com/chipsalliance/sv-tests.git,2019-08-08 16:45:56+00:00,Test suite designed to check compliance with the SystemVerilog standard.,67,chipsalliance/sv-tests,201299456,SystemVerilog,sv-tests,11553,257,2024-03-20 17:15:01+00:00,"['systemverilog', 'symbiflow', 'verilog', 'hdl', 'rtl', 'compliance-testing']",https://api.github.com/licenses/isc
4,https://github.com/risclite/SuperScalar-RISCV-CPU.git,2019-05-23 06:16:10+00:00,"SSRV(Super-Scalar RISC-V) --- Super-scalar out-of-order RV32IMC CPU core, 6.4 CoreMark/MHz.",37,risclite/SuperScalar-RISCV-CPU,188172879,SystemVerilog,SuperScalar-RISCV-CPU,5935,176,2024-04-12 21:09:06+00:00,[],None
5,https://github.com/courageheart/AMBA_APB_SRAM.git,2019-05-21 02:54:35+00:00,AMBA v.3 APB v.1 Specification Complaint Slave SRAM Core design and testbench. The testbench is developed using System Verilog and UVM and can be used as standalone Verification IP (VIP). ,54,courageheart/AMBA_APB_SRAM,187750665,SystemVerilog,AMBA_APB_SRAM,503,134,2024-04-11 18:21:31+00:00,[],https://api.github.com/licenses/mit
6,https://github.com/loykylewong/FPGA-Application-Development-and-Simulation.git,2019-05-31 09:33:45+00:00,《FPGA应用开发和仿真》（机械工业出版社2018年第1版 ISBN:9787111582786）的源码。Source Code of the book FPGA Application Development and Simulation(CHS).,27,loykylewong/FPGA-Application-Development-and-Simulation,189568063,SystemVerilog,FPGA-Application-Development-and-Simulation,8796,112,2024-04-01 09:45:38+00:00,"['fpga', 'verilog', 'systemverilog', 'digital-signal-processing', 'dsp', 'modelsim', 'axi4', 'uart', 'spi', 'i2c', 'i2s', 'dds', 'cordic', 'fft', 'fir', 'iir', 'cic', 'modulation', 'qam', 'adpll']",https://api.github.com/licenses/mit
7,https://github.com/chipfail/chipfail-glitcher.git,2019-08-21 11:50:47+00:00,,17,chipfail/chipfail-glitcher,203573456,SystemVerilog,chipfail-glitcher,68,66,2024-04-02 11:49:17+00:00,[],None
8,https://github.com/grayresearch/CX.git,2019-08-02 15:31:22+00:00,Proposed RISC-V Composable Custom Extensions Specification,11,grayresearch/CX,200258460,SystemVerilog,CX,36448,59,2024-04-11 16:29:25+00:00,[],https://api.github.com/licenses/apache-2.0
9,https://github.com/fpgasystems/davos.git,2019-09-17 10:33:58+00:00,Distributed Accelerator OS,23,fpgasystems/davos,209025898,SystemVerilog,davos,8277,58,2024-03-29 05:34:19+00:00,[],None
10,https://github.com/supranational/vdf-fpga.git,2019-06-21 20:19:38+00:00,Implementation of an RSA VDF evaluator targeting FPGAs.,12,supranational/vdf-fpga,193155630,SystemVerilog,vdf-fpga,625,46,2023-07-27 02:26:07+00:00,[],
11,https://github.com/microsoft/DUA.git,2019-06-18 08:48:32+00:00,"DUA, is a communication architecture that provides uniform access for FPGA to data center resources. Without being limited by machine boundaries, DUA provides global names and a common interface for communicating across various resources, the underlying network automatically routing traffic and managing resource multiplexing.",11,microsoft/DUA,192502002,SystemVerilog,DUA,68,37,2023-11-16 00:40:16+00:00,[],https://api.github.com/licenses/mit
12,https://github.com/diwu1990/UnarySim.git,2019-08-18 19:23:09+00:00,"This is a general-purpose simulator for unary computing based on PyTorch, with the paper accepted to ISCA 2020 and awarded IEEE Micro Top Pick for 2020.",8,diwu1990/UnarySim,203047077,SystemVerilog,UnarySim,17893,36,2024-03-24 06:08:59+00:00,"['simulation', 'stochastic-computing', 'temporal-computing', 'rate-coding', 'temporal-coding']",https://api.github.com/licenses/mit
13,https://github.com/name1e5s/Sirius.git,2019-06-12 13:18:13+00:00,Asymmetric dual issue in-order microprocessor.,12,name1e5s/Sirius,191574673,SystemVerilog,Sirius,220,34,2023-09-18 03:08:51+00:00,[],https://api.github.com/licenses/gpl-3.0
14,https://github.com/vishal1303/PIEO-Scheduler.git,2019-06-24 23:41:30+00:00,"A Fast, Scalable and Programmable Packet Scheduler in Hardware",9,vishal1303/PIEO-Scheduler,193596948,SystemVerilog,PIEO-Scheduler,25,33,2023-11-08 03:26:34+00:00,[],None
15,https://github.com/kvablack/fpga-flight-controller.git,2019-07-15 23:55:15+00:00,"Final project for CS 429H (computer architecture), fall freshman year. Built over the course of 2 weeks.",4,kvablack/fpga-flight-controller,197087676,SystemVerilog,fpga-flight-controller,8756,31,2024-03-27 10:42:02+00:00,[],None
16,https://github.com/seabeam/yuu_apb.git,2019-06-26 14:59:00+00:00,"UVM APB VIP, part of AMBA3&AMBA4 feature supported",8,seabeam/yuu_apb,193926527,SystemVerilog,yuu_apb,67,25,2024-03-19 05:34:35+00:00,[],https://api.github.com/licenses/mit
17,https://github.com/avashist003/UVM_Verification.git,2019-05-19 00:37:34+00:00,"Advance UVM testbench with DPI integration, Assertions, Functional Coverage andHierarchical Sequence",6,avashist003/UVM_Verification,187418171,SystemVerilog,UVM_Verification,25,23,2024-03-26 18:46:28+00:00,[],None
18,https://github.com/PacoReinaCampo/MPSoC-NoC.git,2019-09-30 04:39:44+00:00,Network on Chip for MPSoC,7,PacoReinaCampo/MPSoC-NoC,211776467,SystemVerilog,MPSoC-NoC,26073,21,2024-04-12 02:44:02+00:00,"['noc', 'mesh-2d', 'mesh-3d']",https://api.github.com/licenses/mit
19,https://github.com/jiegec/verilog-format.git,2019-09-19 00:57:43+00:00,A naive verilog/systemverilog formatter,2,jiegec/verilog-format,209431485,SystemVerilog,verilog-format,63,20,2023-06-19 08:14:06+00:00,[],https://api.github.com/licenses/mit
20,https://github.com/hossein1387/pito_riscv.git,2019-07-17 17:47:26+00:00,A Barrel design of RV32I,5,hossein1387/pito_riscv,197436646,SystemVerilog,pito_riscv,1258,19,2024-03-24 05:56:08+00:00,"['risc-v', 'riscv', 'fpga', 'systemverilog', 'machine-learning']",https://api.github.com/licenses/mit
21,https://github.com/nguyenquanicd/UvmEnvUartApb.git,2019-08-03 02:24:20+00:00,This is the UVM environment for UART-APB IP core. This environment contains full UVM components. It is only used for studing and invetigating the UVM env.,4,nguyenquanicd/UvmEnvUartApb,200321840,SystemVerilog,UvmEnvUartApb,9078,17,2024-03-30 14:57:11+00:00,[],None
22,https://github.com/PacoReinaCampo/PU-RISCV.git,2019-09-30 04:39:04+00:00,Processing Unit with RISCV-32 / RISCV-64 / RISCV-128,7,PacoReinaCampo/PU-RISCV,211776391,SystemVerilog,PU-RISCV,59770,16,2024-01-08 22:37:10+00:00,"['risc-v', '32-bit', '64-bit', 'harvard-architecture', 'pu']",https://api.github.com/licenses/mit
23,https://github.com/OFS/ofs-platform-afu-bbb.git,2019-06-07 18:05:27+00:00,OFS Platform Components,9,OFS/ofs-platform-afu-bbb,190788088,SystemVerilog,ofs-platform-afu-bbb,2031,13,2024-01-24 19:22:57+00:00,[],https://api.github.com/licenses/mit
24,https://github.com/sld-columbia/esp-caches.git,2019-09-21 19:41:24+00:00,SystemVerilog overhaul of ESP L2 and LLC caches with directory based protocol,4,sld-columbia/esp-caches,210043764,SystemVerilog,esp-caches,676,13,2024-03-23 00:06:42+00:00,[],https://api.github.com/licenses/apache-2.0
25,https://github.com/hackdac/hackdac_2018_beta.git,2019-08-07 17:40:03+00:00,The SoC used for the beta phase of Hack@DAC 2018.,6,hackdac/hackdac_2018_beta,201098413,SystemVerilog,hackdac_2018_beta,23144,13,2023-11-16 03:02:11+00:00,[],
26,https://github.com/verilator/verilator_ext_tests.git,2019-06-15 12:34:26+00:00,Extended and external tests for Verilator testing,9,verilator/verilator_ext_tests,192076618,SystemVerilog,verilator_ext_tests,140,12,2022-12-04 14:24:38+00:00,['verilator'],https://api.github.com/licenses/lgpl-3.0
27,https://github.com/PacoReinaCampo/MPSoC-DMA.git,2019-09-30 04:40:44+00:00,Direct Access Memory for MPSoC,5,PacoReinaCampo/MPSoC-DMA,211776557,SystemVerilog,MPSoC-DMA,19697,12,2024-03-27 02:13:53+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
28,https://github.com/A-T-Kristensen/simple-alu-uvm.git,2019-07-23 11:23:07+00:00,This is full tutorial of UVM (Universal Verification Methodology) for a simple ALU unit,9,A-T-Kristensen/simple-alu-uvm,198416030,SystemVerilog,simple-alu-uvm,3590,10,2023-10-07 11:23:04+00:00,[],None
29,https://github.com/PacoReinaCampo/verilog2vhdl.git,2019-09-30 04:38:30+00:00,Hardware Description Language Translator,3,PacoReinaCampo/verilog2vhdl,211776328,SystemVerilog,verilog2vhdl,12406,10,2024-03-09 10:58:29+00:00,['eda'],https://api.github.com/licenses/mit
30,https://github.com/rggen/rggen-sv-rtl.git,2019-07-17 14:59:41+00:00,Common SystemVerilog RTL modules for RgGen,3,rggen/rggen-sv-rtl,197411172,SystemVerilog,rggen-sv-rtl,92,10,2024-01-18 02:15:19+00:00,"['systemverilog', 'rtl', 'apb', 'axi4', 'axi']",https://api.github.com/licenses/mit
31,https://github.com/AbhishekTaur/System-Verilog-Practice.git,2019-09-27 05:51:54+00:00,Repository for system verilog labs from cadence,5,AbhishekTaur/System-Verilog-Practice,211245567,SystemVerilog,System-Verilog-Practice,89,10,2024-03-29 06:55:49+00:00,"['systemverilog', 'cadence', 'cadence-incisive', 'verilog']",None
32,https://github.com/adibis/uvmBasics.git,2019-07-02 03:45:53+00:00,Basics of UVM via an APB slave,2,adibis/uvmBasics,194783997,SystemVerilog,uvmBasics,28,9,2024-02-07 10:51:56+00:00,"['uvm', 'systemverilog', 'verification', 'verification-methodologies', 'vlsi']",None
33,https://github.com/pulp-platform/hier-icache.git,2019-09-23 12:11:00+00:00,,9,pulp-platform/hier-icache,210346175,SystemVerilog,hier-icache,2838,9,2024-01-24 02:26:04+00:00,[],
34,https://github.com/chandanpalai/SystemVerilog-Assertions.git,2019-09-25 13:43:43+00:00,Examples of assertions used in SystemVerilog. Made for udemy course by M. Ramdas,1,chandanpalai/SystemVerilog-Assertions,210855541,SystemVerilog,SystemVerilog-Assertions,3,8,2024-01-28 16:18:12+00:00,[],None
35,https://github.com/seabeam/yuu_common.git,2019-06-09 14:35:50+00:00,Common SV utils library,5,seabeam/yuu_common,191017202,SystemVerilog,yuu_common,22,8,2024-01-15 03:57:28+00:00,[],https://api.github.com/licenses/mit
36,https://github.com/GeorgeSangillo/ARM-Single-Cycle-Processor.git,2019-05-22 21:01:41+00:00,Design and simulate a simplified ARM single-cycle processor using SystemVerilog.,1,GeorgeSangillo/ARM-Single-Cycle-Processor,188113189,SystemVerilog,ARM-Single-Cycle-Processor,13,7,2023-12-05 20:49:46+00:00,[],None
37,https://github.com/PacoReinaCampo/MPSoC-RISCV.git,2019-09-30 04:41:33+00:00,Multi-Processor System on Chip with RISCV-32 / RISCV-64 / RISCV-128,5,PacoReinaCampo/MPSoC-RISCV,211776655,SystemVerilog,MPSoC-RISCV,29910,7,2024-03-21 21:18:21+00:00,"['risc-v', 'mimd', 'mpsoc']",https://api.github.com/licenses/mit
38,https://github.com/PedroHSCavalcante/uvm-phase-jumping.git,2019-09-20 18:28:31+00:00,Simple UVM phase jumping,4,PedroHSCavalcante/uvm-phase-jumping,209856317,SystemVerilog,uvm-phase-jumping,97,7,2023-04-04 03:08:18+00:00,"['uvm', 'systemverilog', 'verification', 'microelectronics', 'on-the-fly', 'reset', 'phase-jump']",None
39,https://github.com/scp10086/FPGA_UNDERWAY_SALES_MACHINE.git,2019-08-26 06:53:29+00:00,这是东南大学信息科学与工程学院大三短学期的FPGA开发，我们要做一个南京地铁售票机,2,scp10086/FPGA_UNDERWAY_SALES_MACHINE,204414658,SystemVerilog,FPGA_UNDERWAY_SALES_MACHINE,6899,7,2023-11-04 10:37:07+00:00,[],https://api.github.com/licenses/mit
40,https://github.com/AlessandroCilardo/NaplesPU.git,2019-06-26 13:57:28+00:00,The official NaplesPU hardware code repository,3,AlessandroCilardo/NaplesPU,193915270,SystemVerilog,NaplesPU,579,7,2024-02-18 15:03:37+00:00,[],https://api.github.com/licenses/bsd-3-clause
41,https://github.com/kennych418/FPGA_AudioVisualizer.git,2019-08-23 01:20:00+00:00,Using an Altera DE10-Lite FPGA development board to simulate an FFT processor. Audio input frequencies will be visualized onto a VGA display.,1,kennych418/FPGA_AudioVisualizer,203899926,SystemVerilog,FPGA_AudioVisualizer,232059,6,2024-03-22 10:19:49+00:00,[],None
42,https://github.com/david-fong/Sudoku-SV.git,2019-09-21 02:23:29+00:00,Goal: Write an even higher performing solution generator,1,david-fong/Sudoku-SV,209912211,SystemVerilog,Sudoku-SV,466,6,2024-02-11 04:42:22+00:00,"['sudoku', 'sudoku-generator', 'systemverilog']",https://api.github.com/licenses/mit
43,https://github.com/mrLSD/riscv-cpu.git,2019-07-26 20:40:23+00:00,RISC-V five stage pipline CPU,0,mrLSD/riscv-cpu,199077438,SystemVerilog,riscv-cpu,7,5,2023-03-24 05:13:55+00:00,"['cpu', 'risc-v', 'risc-processor', 'system-verilog', 'pipline']",https://api.github.com/licenses/apache-2.0
44,https://github.com/rggen/rggen-sv-ral.git,2019-07-19 07:51:09+00:00,UVM RAL class package for RgGen,1,rggen/rggen-sv-ral,197727903,SystemVerilog,rggen-sv-ral,49,5,2023-11-17 14:33:09+00:00,"['systemverilog', 'uvm', 'ral', 'uvm-ral-model', 'uvm-register-model']",https://api.github.com/licenses/mit
45,https://github.com/matandalmeida/gcd_uvm.git,2019-08-16 11:42:50+00:00,Basic UVM environment for GCD IP,1,matandalmeida/gcd_uvm,202717730,SystemVerilog,gcd_uvm,242,5,2022-06-08 15:51:31+00:00,[],None
46,https://github.com/supranational/lcs35.git,2019-05-18 19:04:13+00:00,Code related to solving the LCS35 timelock puzzle. ,0,supranational/lcs35,187395424,SystemVerilog,lcs35,36,5,2020-07-04 18:26:20+00:00,[],https://api.github.com/licenses/apache-2.0
47,https://github.com/CASR-HKU/ftdnn.git,2019-08-11 06:48:35+00:00,FPGA-tailored DNN,1,CASR-HKU/ftdnn,201728702,SystemVerilog,ftdnn,995,5,2024-03-15 12:02:24+00:00,[],None
48,https://github.com/seabeam/yuu_amba.git,2019-06-13 16:03:40+00:00,UVM amba infrastructure,3,seabeam/yuu_amba,191794203,SystemVerilog,yuu_amba,14,5,2024-01-15 03:57:37+00:00,[],https://api.github.com/licenses/mit
49,https://github.com/RobertBaruch/vz80core.git,2019-08-02 21:36:16+00:00,,2,RobertBaruch/vz80core,200300638,SystemVerilog,vz80core,583,4,2023-04-29 22:38:29+00:00,[],None
50,https://github.com/zhouzaixin/Documents_for_ic.git,2019-05-31 02:04:36+00:00,,2,zhouzaixin/Documents_for_ic,189510662,SystemVerilog,Documents_for_ic,215562,4,2024-01-30 07:09:30+00:00,[],None
51,https://github.com/cpuex2019-7th/core.git,2019-09-24 07:10:28+00:00,RISC-V (rv32imf) CPU implemented in System Verilog for cpuex2019@UTokyo,2,cpuex2019-7th/core,210535865,SystemVerilog,core,892,4,2024-04-08 21:59:21+00:00,[],None
52,https://github.com/Luke7412/IpLibrary.git,2019-06-13 18:33:50+00:00,Library containing various VHDL IPs,0,Luke7412/IpLibrary,191814785,SystemVerilog,IpLibrary,514,4,2024-01-06 17:37:45+00:00,"['ip-xact', 'vivado', 'xilinx', 'arty-a7', 'ipxact', 'ip', 'rtl', 'systemverilog', 'packaged-ip']",https://api.github.com/licenses/mit
53,https://github.com/PacoReinaCampo/SoC-MSP430.git,2019-09-30 04:36:14+00:00,System on Chip with MSP430-16,3,PacoReinaCampo/SoC-MSP430,211776100,SystemVerilog,SoC-MSP430,15485,4,2023-10-16 16:23:55+00:00,"['msp430', 'misd', 'simd', 'soc']",https://api.github.com/licenses/mit
54,https://github.com/bsdevlin/vdf-fpga.git,2019-08-14 14:48:15+00:00,"A low latency modulo squaring algorithm using Montgomery multiplication, submitted to the VDF FPGA design competition, targeting AWS FPGAs. Was awarded first prize for lowest latency in alternative approaches category.",5,bsdevlin/vdf-fpga,202370755,SystemVerilog,vdf-fpga,906,4,2023-07-16 12:39:21+00:00,[],
55,https://github.com/Kayannsoarez/NoCs-SoCs.git,2019-09-09 13:20:08+00:00,Networks-on-Chip(NoCs) and Systems-on-Chip(SoCs).,1,Kayannsoarez/NoCs-SoCs,207313854,SystemVerilog,NoCs-SoCs,877,4,2023-06-17 09:01:45+00:00,[],None
56,https://github.com/mustafabbas/lid_for_fpgas.git,2019-09-26 10:56:26+00:00,Parameterizable latency insensitive Design Styles for FPGAs,2,mustafabbas/lid_for_fpgas,211067651,SystemVerilog,lid_for_fpgas,279,4,2023-09-28 11:06:36+00:00,[],https://api.github.com/licenses/mit
57,https://github.com/kitsuneh/SVGameBoy.git,2019-08-12 18:16:02+00:00,A systemVerilog implementation of Game Boy on DE1-SoC,16,kitsuneh/SVGameBoy,201984962,SystemVerilog,SVGameBoy,5469,4,2023-11-06 03:47:18+00:00,[],None
58,https://github.com/smartsystemslab-uf/SES-Lab-tutorials.git,2019-08-27 19:31:41+00:00,,2,smartsystemslab-uf/SES-Lab-tutorials,204776031,SystemVerilog,SES-Lab-tutorials,30686,3,2024-01-18 03:38:29+00:00,[],None
59,https://github.com/deslib/xriscv.git,2019-08-28 05:27:58+00:00,A systemveriog implemented risc-v. Including a emulator written with C,1,deslib/xriscv,204854875,SystemVerilog,xriscv,216,3,2020-08-12 06:42:09+00:00,[],https://api.github.com/licenses/mit
60,https://github.com/larrtang/RISC-V-processor.git,2019-08-04 20:22:24+00:00,"Processor written in System Verilog. 5 staged piplining, L1 and L2 cache with EWB, tournament branch predictor and BTB",0,larrtang/RISC-V-processor,200538013,SystemVerilog,RISC-V-processor,41,3,2022-11-18 01:50:39+00:00,[],None
61,https://github.com/abdo1819/fpu.git,2019-06-12 14:45:00+00:00,design of floating point arithmetic unit with verlog,1,abdo1819/fpu,191590115,SystemVerilog,fpu,2015,3,2021-01-01 13:20:16+00:00,[],None
62,https://github.com/zion-group/ZionBasicCircuitLib.git,2019-07-24 08:52:30+00:00,This is a library for basic circuit element.,0,zion-group/ZionBasicCircuitLib,198596227,SystemVerilog,ZionBasicCircuitLib,99,3,2019-12-19 02:45:25+00:00,[],https://api.github.com/licenses/mit
63,https://github.com/10611anil/functional-hardware-verification-of-8-bit-calculator.git,2019-07-03 15:36:36+00:00,Implemented verification environment in system verilog by using UVM(Universal Verification Methodology).,0,10611anil/functional-hardware-verification-of-8-bit-calculator,195082844,SystemVerilog,functional-hardware-verification-of-8-bit-calculator,7,3,2023-07-12 10:37:20+00:00,[],None
64,https://github.com/alanswx/Arcade-BattleZone_MiSTer.git,2019-06-17 20:38:33+00:00,,1,alanswx/Arcade-BattleZone_MiSTer,192415479,SystemVerilog,Arcade-BattleZone_MiSTer,11755,3,2023-03-18 07:19:23+00:00,[],None
65,https://github.com/NickSica/RISC-V-CPU.git,2019-06-25 21:22:55+00:00,A RISC-V CPU built in SystemVerilog for use in the DISCO Lab,0,NickSica/RISC-V-CPU,193785213,SystemVerilog,RISC-V-CPU,26637,3,2024-02-11 04:38:46+00:00,['systemverilog'],https://api.github.com/licenses/gpl-3.0
66,https://github.com/zbnt/hardware.git,2019-08-24 23:25:15+00:00,"Hardware cores for generating, capturing and modifying network traffic using Xilinx FPGAs/SoCs",1,zbnt/hardware,204223426,SystemVerilog,hardware,1277,3,2024-03-28 16:27:16+00:00,"['systemverilog', 'hdl', 'networking', 'xilinx-fpga']",https://api.github.com/licenses/mpl-2.0
67,https://github.com/um-chips/poc_chip.git,2019-06-07 04:42:26+00:00,Proof-of-concept chiplet with AIB interface,1,um-chips/poc_chip,190688949,SystemVerilog,poc_chip,94,3,2022-10-28 05:42:15+00:00,[],https://api.github.com/licenses/apache-2.0
68,https://github.com/PedroHSCavalcante/env-mult-clk-domain.git,2019-09-19 16:13:49+00:00,Environment for multiple clock domains,2,PedroHSCavalcante/env-mult-clk-domain,209597514,SystemVerilog,env-mult-clk-domain,13,3,2024-03-15 21:40:52+00:00,"['uvm', 'systemverilog', 'verification']",None
69,https://github.com/UofT-HPRC/fpga_virtualization.git,2019-09-10 04:06:06+00:00,FPGA Virtualization and NMU Source,4,UofT-HPRC/fpga_virtualization,207462611,SystemVerilog,fpga_virtualization,704,3,2023-08-02 06:52:05+00:00,[],https://api.github.com/licenses/mit
70,https://github.com/vegaluisjose/tvm-tsim-accelerators.git,2019-09-09 01:43:11+00:00,,1,vegaluisjose/tvm-tsim-accelerators,207200914,SystemVerilog,tvm-tsim-accelerators,139,3,2022-08-08 04:50:19+00:00,[],None
71,https://github.com/3vm/dsn_verif.git,2019-06-26 04:39:21+00:00,Open source design and verification for chipping,1,3vm/dsn_verif,193830488,SystemVerilog,dsn_verif,5868,3,2022-12-01 03:01:03+00:00,[],None
72,https://github.com/jsagoe1/Verilog-SystemVerilog.git,2019-09-25 22:31:29+00:00,Personal Verilog Codes,0,jsagoe1/Verilog-SystemVerilog,210952349,SystemVerilog,Verilog-SystemVerilog,159,3,2023-12-16 10:59:27+00:00,[],None
73,https://github.com/mateuspinto/de2115-simple-mips-without-pipeline.git,2019-05-24 22:54:52+00:00,A complete hardware description of a non-pipeline MIPS processor in SystemVerilog that can execute integer assembly code implemented on the Altera DE2-115 FPGA.,0,mateuspinto/de2115-simple-mips-without-pipeline,188496462,SystemVerilog,de2115-simple-mips-without-pipeline,76090,3,2023-10-12 07:33:34+00:00,"['fpga', 'de2-115', 'mips', 'systemverilog']",None
74,https://github.com/sh-vlad/FPGA_real_time_depth_estimation_based_on_neural_network.git,2019-06-07 18:34:41+00:00,,1,sh-vlad/FPGA_real_time_depth_estimation_based_on_neural_network,190791750,SystemVerilog,FPGA_real_time_depth_estimation_based_on_neural_network,64281,3,2019-11-01 03:07:03+00:00,[],None
75,https://github.com/kruegz/cpu.git,2019-09-08 21:00:31+00:00,CPU design with SystemVerilog/UVM verification,2,kruegz/cpu,207172942,SystemVerilog,cpu,14,3,2023-04-05 11:04:11+00:00,[],None
76,https://github.com/appledore22/ALU_Verification_IP.git,2019-08-02 06:02:00+00:00,Verification IP for ALU written using SystemVerilog (UVM),2,appledore22/ALU_Verification_IP,200174771,SystemVerilog,ALU_Verification_IP,241,3,2023-06-02 06:44:55+00:00,[],https://api.github.com/licenses/mit
77,https://github.com/anea-11/apb2spi-module-verification.git,2019-08-06 00:32:36+00:00,Complete verification environment. APB UVC. SPI UVC. RTL design not included,3,anea-11/apb2spi-module-verification,200747924,SystemVerilog,apb2spi-module-verification,54,3,2024-03-17 01:07:08+00:00,[],None
78,https://github.com/Lian0123/HardFuzzyCtl.git,2019-08-12 16:36:11+00:00,硬體模糊控制器基本測試案例(測試用專案上傳),0,Lian0123/HardFuzzyCtl,201969442,SystemVerilog,HardFuzzyCtl,20250,2,2023-08-04 08:02:00+00:00,[],None
79,https://github.com/CLDXiang/multi-cycle-MIPS.git,2019-05-21 13:58:18+00:00,体系结构实验：多周期MIPS处理器,0,CLDXiang/multi-cycle-MIPS,187848417,SystemVerilog,multi-cycle-MIPS,22,2,2023-05-07 07:40:07+00:00,[],None
80,https://github.com/PedroHSCavalcante/mult-dut-parl-stim.git,2019-08-19 12:45:29+00:00,Multiple DUT with parallel stimulus,2,PedroHSCavalcante/mult-dut-parl-stim,203171213,SystemVerilog,mult-dut-parl-stim,47,2,2022-05-06 03:36:55+00:00,"['uvm', 'verification', 'system-verilog']",None
81,https://github.com/kohutw1/rtl_design_samples.git,2019-09-13 21:16:56+00:00,A repository to store RTL design samples that I've developed.,0,kohutw1/rtl_design_samples,208348049,SystemVerilog,rtl_design_samples,3268,2,2022-03-24 00:16:49+00:00,[],None
82,https://github.com/AlAlves/mriscvcore-Yosysbundle.git,2019-06-25 08:12:57+00:00,Formal proof of mriscvcore using riscv-formal,0,AlAlves/mriscvcore-Yosysbundle,193664304,SystemVerilog,mriscvcore-Yosysbundle,5,2,2024-01-16 01:54:52+00:00,[],None
83,https://github.com/Dmitriy0111/verification_examples.git,2019-06-27 14:35:37+00:00,,0,Dmitriy0111/verification_examples,194111653,SystemVerilog,verification_examples,404,2,2022-11-27 10:34:28+00:00,[],https://api.github.com/licenses/apache-2.0
84,https://github.com/matheusvtna/Infraestrutura-de-Hardware.git,2019-05-24 18:00:17+00:00,Infraestrutura de Hardware - CIn UFPE,0,matheusvtna/Infraestrutura-de-Hardware,188466355,SystemVerilog,Infraestrutura-de-Hardware,1327,2,2023-08-09 14:39:18+00:00,[],None
85,https://github.com/ganesh-ps/UVM_verification.git,2019-05-24 19:11:17+00:00,,0,ganesh-ps/UVM_verification,188474753,SystemVerilog,UVM_verification,472,2,2020-08-04 07:54:28+00:00,[],None
86,https://github.com/digital-design-hq/Example-Peripheral.git,2019-07-13 22:48:59+00:00,,0,digital-design-hq/Example-Peripheral,196772810,SystemVerilog,Example-Peripheral,43,2,2019-09-24 04:53:52+00:00,[],None
87,https://github.com/digital-design-hq/SPI-Master-Peripheral.git,2019-07-20 11:26:18+00:00,,0,digital-design-hq/SPI-Master-Peripheral,197921007,SystemVerilog,SPI-Master-Peripheral,1,2,2020-01-10 16:55:29+00:00,[],None
88,https://github.com/kangjian888/PAM4-RGB-FPGA.git,2019-07-22 10:04:32+00:00,,0,kangjian888/PAM4-RGB-FPGA,198197190,SystemVerilog,PAM4-RGB-FPGA,46863,2,2023-07-03 03:33:36+00:00,[],None
89,https://github.com/shubhv26/UVM_ALU.git,2019-07-16 23:34:59+00:00,ALU implementation and its testbench verification using UVM.,1,shubhv26/UVM_ALU,197281810,SystemVerilog,UVM_ALU,41,2,2022-03-01 13:39:58+00:00,[],None
90,https://github.com/shubhv26/Special-processor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities-PRPG.git,2019-06-13 00:15:34+00:00,"Built RTL design for single/multicycle 8-bit one-to-many XOR-based Linear Feedback Shift Register (LFSR), seeded with any 8-bit pattern for producing pseudo-random pattern sequences. Included a Hamming Distance (HD) and Average HD count design between neighboring patterns to measure the “similarity” of neighboring patterns for LFSR. Designed a “batch memory storage” to support running and storing the patterns continuously into the data memory. Designed Cellular Automata-3, an alternative PRPG to the LFSR and included this module in the processor for creating . Used systemverilog for RTL design and verification and, performed Static-Timing Analysis.",0,shubhv26/Special-processor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities-PRPG,191661601,SystemVerilog,Special-processor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities-PRPG,25,2,2021-05-07 01:36:51+00:00,[],None
91,https://github.com/ypyp3/uart-axi.git,2019-09-16 12:30:23+00:00,"AXI4 bus master, controlled by UART",2,ypyp3/uart-axi,208794577,SystemVerilog,uart-axi,18,2,2023-02-07 08:32:48+00:00,[],https://api.github.com/licenses/mit
92,https://github.com/vidor-libraries/QRCODE_FINDER.git,2019-06-26 09:59:46+00:00,,0,vidor-libraries/QRCODE_FINDER,193878563,SystemVerilog,QRCODE_FINDER,10,2,2022-06-21 19:09:26+00:00,[],None
93,https://github.com/taiyoslime/RSA_on_FPGA.git,2019-08-02 06:55:20+00:00,"Hardware implementation of RSA Encryption/Decryption, tested on FPGA",0,taiyoslime/RSA_on_FPGA,200182323,SystemVerilog,RSA_on_FPGA,6,2,2023-07-04 12:19:15+00:00,[],None
94,https://github.com/PedroHSCavalcante/basic-uvm-env.git,2019-07-25 18:08:39+00:00,Basic UVM Environment,1,PedroHSCavalcante/basic-uvm-env,198880049,SystemVerilog,basic-uvm-env,28,2,2023-10-19 14:16:56+00:00,"['uvm', 'verification', 'system-verilog']",None
95,https://github.com/PacoReinaCampo/MPSoC-MSI.git,2019-09-30 04:41:13+00:00,Master Slave Interface for MPSoC,2,PacoReinaCampo/MPSoC-MSI,211776622,SystemVerilog,MPSoC-MSI,20052,2,2023-03-31 16:26:15+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
96,https://github.com/vasschrys/Health_Monitor.git,2019-09-19 00:29:11+00:00,Implemented a health monitor which includes the functions of a reaction timer and pulse sensor. Both of these functions are implemented on one FPGA board. The reaction timer demonstrates the user's ability to react quickly to an LED. The pulse monitor displays a user’s pulse on the FPGA board in beats per minute. ,0,vasschrys/Health_Monitor,209428055,SystemVerilog,Health_Monitor,515,2,2021-09-23 02:12:50+00:00,[],None
97,https://github.com/um-chips/fishnchiplets_chip.git,2019-06-15 01:55:29+00:00,,0,um-chips/fishnchiplets_chip,192025302,SystemVerilog,fishnchiplets_chip,67,2,2022-06-22 19:29:51+00:00,[],https://api.github.com/licenses/apache-2.0
98,https://github.com/rajdasadia/Ethernet-Switch-with-Verification-Environment-SystemVerilog.git,2019-07-10 22:47:35+00:00,Ethernet Switch with 2 input and 2 output port and a variable length FIFO with overflow stall signals. Test bench Environment using random constrains ,1,rajdasadia/Ethernet-Switch-with-Verification-Environment-SystemVerilog,196284504,SystemVerilog,Ethernet-Switch-with-Verification-Environment-SystemVerilog,27,2,2023-04-24 11:39:54+00:00,[],None
99,https://github.com/sotot0/riviera-riscv.git,2019-06-17 15:11:50+00:00,Another riscv implementation,0,sotot0/riviera-riscv,192370023,SystemVerilog,riviera-riscv,793,2,2022-11-25 20:55:25+00:00,[],None
100,https://github.com/mrRedSun/Simple-MIPS-Processor.git,2019-05-26 19:07:52+00:00,Simple MIPS processor developed using SystemVerilog HDL and C++. Project requires Verilator and GTKWave tools in order to be simulated and debuged. ,0,mrRedSun/Simple-MIPS-Processor,188721523,SystemVerilog,Simple-MIPS-Processor,6,2,2019-05-29 07:55:39+00:00,[],None
101,https://github.com/igmora/PacketDispatcher.git,2019-08-02 02:14:35+00:00,,0,igmora/PacketDispatcher,200148823,SystemVerilog,PacketDispatcher,49,2,2019-09-06 17:50:38+00:00,[],None
102,https://github.com/vinifarias/loac.git,2019-06-22 00:14:13+00:00,Repositório com códigos referentes à disciplina LOAC do curso de Ciência da Computação da UFCG,0,vinifarias/loac,193173297,SystemVerilog,loac,16,2,2021-04-16 13:29:21+00:00,[],None
103,https://github.com/futureoceanlab/Radiometer.git,2019-07-12 15:22:36+00:00,,0,futureoceanlab/Radiometer,196602059,SystemVerilog,Radiometer,12772,2,2021-07-12 20:15:25+00:00,[],None
104,https://github.com/sidlathar/assertions-project-slathar.git,2019-08-19 16:14:16+00:00,,0,sidlathar/assertions-project-slathar,203207547,SystemVerilog,assertions-project-slathar,285,1,2022-01-12 22:42:44+00:00,[],None
105,https://github.com/sidlathar/memorycontroller-slathar.git,2019-08-19 16:23:39+00:00,,0,sidlathar/memorycontroller-slathar,203209078,SystemVerilog,memorycontroller-slathar,3067,1,2022-01-12 22:42:42+00:00,[],None
106,https://github.com/ameetgohil/riscv-sv.git,2019-07-23 19:00:42+00:00,RISC-V implementation,0,ameetgohil/riscv-sv,198491515,SystemVerilog,riscv-sv,63,1,2022-07-02 23:26:42+00:00,[],https://api.github.com/licenses/mit
107,https://github.com/kevinku0101/uvm_ref.git,2019-08-02 07:44:13+00:00,,0,kevinku0101/uvm_ref,200189808,SystemVerilog,uvm_ref,962,1,2021-06-18 06:00:59+00:00,[],https://api.github.com/licenses/mit
108,https://github.com/tucanae47/VDF-RSA.git,2019-08-24 13:03:24+00:00,,0,tucanae47/VDF-RSA,204157985,SystemVerilog,VDF-RSA,505,1,2019-12-19 16:51:42+00:00,[],None
109,https://github.com/vtollmarkod/apb_to_uart.git,2019-09-13 14:12:29+00:00,Projekat,0,vtollmarkod/apb_to_uart,208278214,SystemVerilog,apb_to_uart,7564,1,2022-08-27 16:12:25+00:00,[],None
110,https://github.com/cevataykans/emergency-elevator.git,2019-09-02 05:51:43+00:00,Simulation of a high level state machine elevator to extract people from a building in the shortest amount of time. Applied system verilog to design hardware while using Vivado design portal and a BASYS3.,1,cevataykans/emergency-elevator,205785737,SystemVerilog,emergency-elevator,1748,1,2023-09-28 11:05:45+00:00,[],https://api.github.com/licenses/mit
111,https://github.com/jiegec/DigitalLogicExperiments.git,2019-06-30 17:44:23+00:00,Source code of digital logic experiments.,0,jiegec/DigitalLogicExperiments,194544411,SystemVerilog,DigitalLogicExperiments,16,1,2019-06-30 17:58:42+00:00,[],None
112,https://github.com/s-augustine/sv-buildingblocks.git,2019-05-18 14:26:46+00:00,System verilog modules as building blocks,0,s-augustine/sv-buildingblocks,187367496,SystemVerilog,sv-buildingblocks,18,1,2023-02-01 15:09:17+00:00,[],https://api.github.com/licenses/gpl-3.0
113,https://github.com/melt-umn/silver-ide.git,2019-05-23 22:12:11+00:00,A collection of tools built to provide IDE support for languages built using Silver.,0,melt-umn/silver-ide,188313574,SystemVerilog,silver-ide,224,1,2020-02-07 23:43:56+00:00,[],https://api.github.com/licenses/lgpl-3.0
114,https://github.com/ALinP98/Ultra-Low-Power-32Bit-Core.git,2019-06-10 12:03:37+00:00,ARCINO is a 32bit ultra low power core based on RISC-V RV 32IMC,1,ALinP98/Ultra-Low-Power-32Bit-Core,191160196,SystemVerilog,Ultra-Low-Power-32Bit-Core,65,1,2021-05-10 06:43:25+00:00,[],None
115,https://github.com/nnikolov3/sequence_detector.git,2019-07-23 02:25:05+00:00,A simple sequence detector using System Verilog,0,nnikolov3/sequence_detector,198335831,SystemVerilog,sequence_detector,2,1,2022-11-21 14:03:32+00:00,[],None
116,https://github.com/dpimley/riscv.git,2019-09-21 09:52:41+00:00,RISC-V based processor,0,dpimley/riscv,209961257,SystemVerilog,riscv,36,1,2019-11-24 01:23:33+00:00,[],https://api.github.com/licenses/mit
117,https://github.com/dhairyaagrawal/Custom-Cryptographic-Module.git,2019-09-09 16:34:36+00:00,The CCM is a custom ASIC written in Verilog. It is capable of computing a pipelined version of AES-128.,1,dhairyaagrawal/Custom-Cryptographic-Module,207355492,,Custom-Cryptographic-Module,5432,1,2023-06-23 09:07:46+00:00,[],None
118,https://github.com/icdesign2018/icstudyroom_pub.git,2019-09-08 13:49:38+00:00,icstudyroom public,1,icdesign2018/icstudyroom_pub,207119533,SystemVerilog,icstudyroom_pub,4,1,2019-09-11 05:49:55+00:00,[],None
119,https://github.com/geaninne/utopia_uvm.git,2019-06-01 00:42:42+00:00,,0,geaninne/utopia_uvm,189674236,SystemVerilog,utopia_uvm,42,1,2019-09-22 18:43:33+00:00,[],None
120,https://github.com/CLDXiang/piplined-MIPS.git,2019-05-21 01:12:02+00:00,体系结构实验：流水线MIPS处理器,0,CLDXiang/piplined-MIPS,187737045,SystemVerilog,piplined-MIPS,22,1,2021-07-18 13:37:12+00:00,[],None
121,https://github.com/alferbra/sa_cache.git,2019-07-18 17:39:38+00:00,Set-associative cache,0,alferbra/sa_cache,197631447,SystemVerilog,sa_cache,21,1,2020-11-05 12:55:58+00:00,[],None
122,https://github.com/lalalal83/script.git,2019-08-07 10:13:26+00:00,python，perl,0,lalalal83/script,201025617,SystemVerilog,script,63,1,2020-06-16 03:30:46+00:00,[],None
123,https://github.com/sidlathar/router-slathar.git,2019-08-19 16:09:56+00:00,,0,sidlathar/router-slathar,203206779,SystemVerilog,router-slathar,399,1,2022-01-12 22:42:46+00:00,[],https://api.github.com/licenses/mit
124,https://github.com/zion-group/ZionRiscvIsaLib.git,2019-08-03 07:18:29+00:00,"Reusable circuit library for Risc-V ISA, including struct definition, execute module, etc.",2,zion-group/ZionRiscvIsaLib,200345274,SystemVerilog,ZionRiscvIsaLib,137,1,2024-02-16 13:55:11+00:00,[],https://api.github.com/licenses/mit
125,https://github.com/farshad112/AES_crypto_processor.git,2019-09-10 14:24:04+00:00,A very simple AES crypto processor for my M.Sc thesis.,0,farshad112/AES_crypto_processor,207580578,SystemVerilog,AES_crypto_processor,61,1,2021-03-21 17:38:07+00:00,[],https://api.github.com/licenses/bsd-3-clause
126,https://github.com/akki0084/AES-Rijndael-Algorithm-for-Encryption.git,2019-05-29 02:23:19+00:00,Performed and debugged the algorithm using SystemVerilog and implemented on Altera MAX 10 FPGA board. 128-bit input and 128-bit secret key used for the encryption.,0,akki0084/AES-Rijndael-Algorithm-for-Encryption,189135335,SystemVerilog,AES-Rijndael-Algorithm-for-Encryption,6,1,2023-08-15 12:35:45+00:00,[],None
127,https://github.com/aakshjn/Environment-monitor-with-vlsi.git,2019-06-10 04:46:04+00:00,"To prove parallel computing is much better,fast and reliable at IOT/Environment Monitoring/Disaster detection when compared to microcontrollers. This method to be demonstrated on FPGA boards implemented via VLSI technique.",0,aakshjn/Environment-monitor-with-vlsi,191098261,SystemVerilog,Environment-monitor-with-vlsi,24834,1,2022-06-10 10:29:44+00:00,[],None
128,https://github.com/vidor-libraries/MAILBOX.git,2019-06-26 08:32:11+00:00,,0,vidor-libraries/MAILBOX,193863690,SystemVerilog,MAILBOX,8,1,2022-06-21 19:16:40+00:00,[],None
129,https://github.com/ErickOF/CE3201-Taller-de-Dise-o-Digital.git,2019-08-05 01:42:37+00:00,,0,ErickOF/CE3201-Taller-de-Dise-o-Digital,200562967,SystemVerilog,CE3201-Taller-de-Dise-o-Digital,38976,1,2023-12-26 00:08:50+00:00,[],None
130,https://github.com/shubhv26/Digital-Clock.git,2019-09-09 06:12:38+00:00,Digital clock using systemverilog HDL and implementation on Terasic DE10-Lite FPGA board.,0,shubhv26/Digital-Clock,207236929,SystemVerilog,Digital-Clock,89,1,2019-11-30 23:31:58+00:00,[],None
131,https://github.com/yateszi/pic2wave.git,2019-08-25 08:27:05+00:00,using verilog/systemverilog simulation result(a vcd wave) to display some image. the image will be clustered(using color quant) to no more than 4 color(wave only support 0/1/x/z) ,0,yateszi/pic2wave,204266956,SystemVerilog,pic2wave,141,1,2019-09-19 14:43:41+00:00,[],https://api.github.com/licenses/gpl-3.0
132,https://github.com/digital-design-hq/Ethernet-Mac.git,2019-08-28 05:11:08+00:00,,0,digital-design-hq/Ethernet-Mac,204852870,SystemVerilog,Ethernet-Mac,10,1,2022-02-17 06:25:20+00:00,[],None
133,https://github.com/zssl/uvm_crc_test.git,2019-07-19 00:51:11+00:00,,0,zssl/uvm_crc_test,197676259,SystemVerilog,uvm_crc_test,5,1,2019-09-22 18:49:30+00:00,[],None
134,https://github.com/tmilkovic51/hwpe-vfpu.git,2019-06-08 20:49:29+00:00,,0,tmilkovic51/hwpe-vfpu,190933633,SystemVerilog,hwpe-vfpu,38,1,2022-03-01 01:43:07+00:00,[],None
135,https://github.com/jakesanggulee/ROP-Attack-Detector.git,2019-09-16 13:57:37+00:00,(Seoul National University Intern Project/ Verilog-SystemVerilog Code ),0,jakesanggulee/ROP-Attack-Detector,208813419,SystemVerilog,ROP-Attack-Detector,443,1,2019-09-17 01:17:38+00:00,[],None
136,https://github.com/paulr92/VGA-controller-Verilog.git,2019-07-08 22:44:40+00:00,"VGA Controller generates timing signals used by a vga monitor, outputs also the next pixel address ",0,paulr92/VGA-controller-Verilog,195895668,SystemVerilog,VGA-controller-Verilog,8,1,2022-04-26 21:54:09+00:00,[],None
137,https://github.com/qz-lab/tortoise.git,2019-09-09 04:00:41+00:00,"'tortoise' is a 64-bit RISC-V SOC, with dynamic schedule for instruction execution.",0,qz-lab/tortoise,207220718,SystemVerilog,tortoise,55,1,2021-03-31 02:52:21+00:00,[],https://api.github.com/licenses/mit
138,https://github.com/mateuspinto/FPGA_SystemVerilog_MIPS_Pipeline-TP1-OC2-UFV.git,2019-05-31 09:07:07+00:00,A complete hardware description of a pipeline MIPS processor in SystemVerilog that can execute integer assembly code implemented on the Altera DE2-115 FPGA. It also has the ALMa Mips Mounter built-in.,0,mateuspinto/FPGA_SystemVerilog_MIPS_Pipeline-TP1-OC2-UFV,189563860,SystemVerilog,FPGA_SystemVerilog_MIPS_Pipeline-TP1-OC2-UFV,2914,1,2022-05-11 22:27:25+00:00,"['mips', 'mips-assembly', 'mips32', 'mips-processor', 'mips32cpu', 'mounter', 'verilog', 'systemverilog', 'systemverilog-hdl', 'python', 'python3']",None
139,https://github.com/minjiexm/simpleTb.git,2019-07-16 15:42:55+00:00,A Very Simple Testbench,0,minjiexm/simpleTb,197222600,SystemVerilog,simpleTb,389,1,2019-08-22 19:34:19+00:00,[],None
140,https://github.com/shubhv26/Traffic-light-controller.git,2019-06-13 20:44:03+00:00,A basic traffic light controller in systemverilog HDL.,0,shubhv26/Traffic-light-controller,191830675,SystemVerilog,Traffic-light-controller,4,1,2019-07-16 23:38:40+00:00,[],None
141,https://github.com/shubhv26/Simple-Sloth-Game.git,2019-09-12 18:03:09+00:00,This module consist of a self-made game using systemverilog HDL.,0,shubhv26/Simple-Sloth-Game,208113781,SystemVerilog,Simple-Sloth-Game,7,1,2019-11-30 23:32:05+00:00,[],None
142,https://github.com/jurevreca12/riscv-jedro-1.git,2019-09-12 21:48:26+00:00,Preprosto jedro za RISC-V.,0,jurevreca12/riscv-jedro-1,208152082,SystemVerilog,riscv-jedro-1,9252,1,2022-09-04 18:07:41+00:00,[],None
143,https://github.com/shubhv26/MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design.git,2019-06-13 00:36:18+00:00,"Designed controller and Datapath (consisting of 32-bit ALU, register file, sign extension logic and multiplexers) functional blocks.  Synthesized the RTL design of a “Special 8/4-bit” ALU with customized arithmetic functionalities. Verification with testbench using systemverilog and the Gate-level netlist extraction using Quartus-2.",0,shubhv26/MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design,191663342,SystemVerilog,MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design,166,1,2022-06-13 18:56:18+00:00,[],None
144,https://github.com/sidlathar/usb-controller.git,2019-08-19 16:18:23+00:00,,0,sidlathar/usb-controller,203208264,SystemVerilog,usb-controller,18329,1,2022-01-12 22:36:55+00:00,[],None
145,https://github.com/pavankrissh/Fucntional-Verification-using-UVM.git,2019-09-30 15:38:20+00:00,Verification of the RAM Module using the UVM and System Verilog test benches,0,pavankrissh/Fucntional-Verification-using-UVM,211894475,SystemVerilog,Fucntional-Verification-using-UVM,7,1,2023-11-25 07:54:39+00:00,[],None
146,https://github.com/PacoReinaCampo/MPSoC-DBG.git,2019-09-30 04:40:18+00:00,Debugger on Chip for MPSoC,5,PacoReinaCampo/MPSoC-DBG,211776520,SystemVerilog,MPSoC-DBG,26225,1,2024-01-12 18:10:30+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
147,https://github.com/vrezhsargsyan89/round_robin_arb.git,2019-08-16 07:03:06+00:00,Round-robin (RR) is one of the most  popular scheduling/arbitration algorithms. It guarantees fairness across different requests. This project contains Verilog implantation of RR.,0,vrezhsargsyan89/round_robin_arb,202676371,SystemVerilog,round_robin_arb,4,1,2023-07-22 16:27:36+00:00,[],None
148,https://github.com/apurv2304/Frogger.git,2019-06-15 01:12:15+00:00,"The repository contains all the files made for Frogger game on an FPGA. There is report attached below for the detailed view of the project involving the design process, game functionality and all the manner of tests done for the project to get working ",0,apurv2304/Frogger,192022372,SystemVerilog,Frogger,4071,1,2021-03-09 18:49:12+00:00,[],None
149,https://github.com/rejoymathews32/System_Verilog_SDRAM.git,2019-06-16 20:51:21+00:00,SDRAM Memory Controller Development and Verification in System Verilog,0,rejoymathews32/System_Verilog_SDRAM,192235742,SystemVerilog,System_Verilog_SDRAM,5,1,2022-01-11 05:54:44+00:00,[],None
150,https://github.com/GBlankers/VHDL-Pong.git,2019-05-21 15:48:18+00:00,"Simple Pong game, written in VHDL for the nexys 4 ddr",0,GBlankers/VHDL-Pong,187868941,SystemVerilog,VHDL-Pong,15862,1,2023-03-06 21:59:10+00:00,[],None
151,https://github.com/akki0084/MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design.git,2019-05-29 02:32:37+00:00,"Synthesized the RTL design of modified MIPS processor by adding ore and bne instructions & S84 ALU design in Modelsim. Special 8/4-bit (S84) ALU designed with SQM, Cellular Automata 2, Output analysis, etc. Analyzed the design using SystemVerilog, verified with testbench in Modelsim and extracted the Gate-level netlist using Quartus.",0,akki0084/MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design,189136591,SystemVerilog,MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design,37,1,2019-06-24 14:01:31+00:00,[],None
152,https://github.com/lucasanthony/Maquinas-de-estados.git,2019-06-24 22:35:40+00:00,Máquinas de estados - LOAC,1,lucasanthony/Maquinas-de-estados,193590158,SystemVerilog,Maquinas-de-estados,16,1,2021-10-15 17:04:11+00:00,"['verilog', 'state-machine']",None
153,https://github.com/sagar5258/google.git,2019-08-20 04:18:09+00:00,,0,sagar5258/google,203298577,SystemVerilog,google,2,1,2020-08-26 12:20:37+00:00,[],None
154,https://github.com/Bynaryman/POF.git,2019-05-18 12:39:06+00:00,The Posit Operators Framework (POF) is a comprehensive library designed to facilitate arithmetic computations and neural network operations using the Posit numerical format on FPGAs.,0,Bynaryman/POF,187356331,SystemVerilog,POF,6770,1,2024-03-15 02:54:38+00:00,"['architecture', 'arithmetic', 'computer', 'ieee754', 'posit']",None
155,https://github.com/nguyensinhton9x/uvm_uart_apb_env.git,2019-07-19 14:55:06+00:00,uvm_ver_3,1,nguyensinhton9x/uvm_uart_apb_env,197792028,SystemVerilog,uvm_uart_apb_env,47,1,2019-08-14 15:53:01+00:00,[],None
156,https://github.com/mcagriaksoy/spi-vip.git,2019-06-04 00:21:41+00:00,,0,mcagriaksoy/spi-vip,190100505,SystemVerilog,spi-vip,568,1,2019-09-04 06:25:56+00:00,[],https://api.github.com/licenses/gpl-3.0
157,https://github.com/jiegec/GuGuMIPS.git,2019-07-03 02:27:02+00:00,A naive MIPS cpu implementation for NSCSCC2019,1,jiegec/GuGuMIPS,194965176,SystemVerilog,GuGuMIPS,42126,1,2023-12-19 04:00:16+00:00,[],None
158,https://github.com/chriskiefer/Iceyntese.git,2019-09-13 16:38:19+00:00,Sound synthesis on the ICE40 FPGA,0,chriskiefer/Iceyntese,208305354,SystemVerilog,Iceyntese,42,1,2019-09-30 12:13:09+00:00,[],None
159,https://github.com/devangKhamar/CORDIC-core.git,2019-06-08 01:16:52+00:00,CORDIC IP and verification modules.,0,devangKhamar/CORDIC-core,190831395,SystemVerilog,CORDIC-core,73,1,2022-03-02 01:42:52+00:00,[],None
160,https://github.com/flasonil/intel8085.git,2019-06-12 14:53:55+00:00,,0,flasonil/intel8085,191591732,SystemVerilog,intel8085,279,1,2021-02-09 00:53:24+00:00,[],None
161,https://github.com/chandanpalai/UVM-sample-codes.git,2019-09-25 13:46:38+00:00,This contains UVM basic example codes,0,chandanpalai/UVM-sample-codes,210856103,SystemVerilog,UVM-sample-codes,17,1,2022-03-29 05:43:31+00:00,[],None
162,https://github.com/lcskl/cryptographyIP.git,2019-08-17 21:05:06+00:00,Hardware cryptography IP for IOT applications,0,lcskl/cryptographyIP,202931301,SystemVerilog,cryptographyIP,25,1,2019-10-24 19:56:26+00:00,[],None
163,https://github.com/zan-pu/vga-driver.git,2019-09-09 15:09:35+00:00,VGA driver.,1,zan-pu/vga-driver,207337955,SystemVerilog,vga-driver,79,1,2024-03-31 06:24:33+00:00,[],https://api.github.com/licenses/mit
164,https://github.com/sanjeevs/sva_work.git,2019-09-01 18:34:58+00:00,Playing around with sva,0,sanjeevs/sva_work,205717096,SystemVerilog,sva_work,765,1,2024-03-01 11:41:27+00:00,[],None
165,https://github.com/mbstrange2/verilog_tutorial_edge_count.git,2019-09-30 16:26:40+00:00,Intro Module for getting a feel for verilog,2,mbstrange2/verilog_tutorial_edge_count,211904211,SystemVerilog,verilog_tutorial_edge_count,11,1,2022-03-11 14:34:43+00:00,[],None
166,https://github.com/hellgate202/video_stream_to_window.git,2019-09-27 20:48:19+00:00,,1,hellgate202/video_stream_to_window,211399400,SystemVerilog,video_stream_to_window,1288,1,2020-03-07 02:13:53+00:00,[],https://api.github.com/licenses/gpl-3.0
167,https://github.com/jakesanggulee/PTM-Packet-Decoder.git,2019-09-16 13:59:00+00:00,Seoul National University Intern Project ( Branch Address Packet Decoder ),0,jakesanggulee/PTM-Packet-Decoder,208813673,SystemVerilog,PTM-Packet-Decoder,41,1,2019-09-17 01:17:38+00:00,[],None
168,https://github.com/GilSherman/Gil-Sherman.git,2019-08-14 12:35:01+00:00,,1,GilSherman/Gil-Sherman,202347347,SystemVerilog,Gil-Sherman,14533,1,2019-08-20 22:01:39+00:00,[],None
169,https://github.com/CristianG89/Design_Digital_Systems_2.git,2019-09-06 15:57:24+00:00,Verification of RTL modules by using SystemVerilog,0,CristianG89/Design_Digital_Systems_2,206828529,SystemVerilog,Design_Digital_Systems_2,2139,1,2021-05-17 20:16:10+00:00,[],None
170,https://github.com/Dmitriy0111/vcv_sv.git,2019-06-01 10:04:38+00:00,,0,Dmitriy0111/vcv_sv,189717628,SystemVerilog,vcv_sv,9232,1,2022-09-14 13:17:26+00:00,[],None
171,https://github.com/ameetgohil/sva_examples.git,2019-06-19 05:42:17+00:00,symbiyosys sva exaples,0,ameetgohil/sva_examples,192665943,SystemVerilog,sva_examples,5,1,2022-07-02 23:27:06+00:00,[],https://api.github.com/licenses/mit
172,https://github.com/curoles/dark-circuit.git,2019-07-01 04:42:30+00:00,,0,curoles/dark-circuit,194600894,SystemVerilog,dark-circuit,454,1,2021-03-05 19:42:39+00:00,[],None
173,https://github.com/ManuelonGithub/xmakina_multi_cycle.git,2019-07-22 02:38:58+00:00,,0,ManuelonGithub/xmakina_multi_cycle,198133493,SystemVerilog,xmakina_multi_cycle,666,1,2022-04-30 23:33:10+00:00,[],https://api.github.com/licenses/gpl-3.0
174,https://github.com/dhaivat7/Verilog_CalC.git,2019-07-03 19:22:56+00:00,FSM design and Verification of Calculator using Verilog ,0,dhaivat7/Verilog_CalC,195114522,SystemVerilog,Verilog_CalC,10,1,2020-09-26 04:34:27+00:00,"['verilog', 'verification', 'calculator']",None
175,https://github.com/jotingen/RISCV-DE10-Nano.git,2019-08-03 20:05:05+00:00,RISCV implemented on DE10-Nano with a display attached,0,jotingen/RISCV-DE10-Nano,200416402,SystemVerilog,RISCV-DE10-Nano,130830,1,2021-10-04 02:14:52+00:00,[],https://api.github.com/licenses/mit
176,https://github.com/abdo1819/mips_single_cycle.git,2019-09-29 18:04:16+00:00,single cycle mips implementation with systemverilog,5,abdo1819/mips_single_cycle,211704394,SystemVerilog,mips_single_cycle,3956,1,2022-08-12 11:58:40+00:00,[],None
177,https://github.com/ilya-dementev/crossbar-switch.git,2019-05-29 22:18:52+00:00,Verilog crossbar-switch,1,ilya-dementev/crossbar-switch,189306670,SystemVerilog,crossbar-switch,7,1,2020-06-04 08:25:29+00:00,[],None
178,https://github.com/AlAlves/darkriscv-Yosysbundle.git,2019-06-20 20:20:58+00:00,Bundle to prove darkRISCV with formal-riscv of Clifford Wolf (using Yosys),0,AlAlves/darkriscv-Yosysbundle,192982645,SystemVerilog,darkriscv-Yosysbundle,3,1,2020-01-02 09:36:19+00:00,[],None
179,https://github.com/name1e5s/MIPS-Edu.git,2019-09-02 08:56:59+00:00,Educational MIPS Processor,0,name1e5s/MIPS-Edu,205816610,SystemVerilog,MIPS-Edu,8108,1,2020-11-02 01:04:53+00:00,[],https://api.github.com/licenses/bsd-3-clause
180,https://github.com/jadavs/FPGA_FlappyBird.git,2019-07-25 16:38:23+00:00,"Developed Flappy Bird with SystemVerilog, ModelSIM on the Altera DE1SoC Cyclone V FPGA using ASMD and FSM design methodologies",0,jadavs/FPGA_FlappyBird,198867631,SystemVerilog,FPGA_FlappyBird,362,1,2020-11-04 01:10:58+00:00,[],None
181,https://github.com/vidor-libraries/ST_MIXER.git,2019-06-26 10:08:35+00:00,,0,vidor-libraries/ST_MIXER,193879961,SystemVerilog,ST_MIXER,2,1,2022-06-21 19:14:08+00:00,[],None
182,https://github.com/hypernyan/runge-kutta-vlg.git,2019-05-28 00:31:54+00:00,Very simple 4th order Runge-Kutta based RLC circuit simulator,0,hypernyan/runge-kutta-vlg,188925859,SystemVerilog,runge-kutta-vlg,8,1,2022-02-17 21:49:05+00:00,[],None
183,https://github.com/sadhanrudresh/My-experiment-with-SystemVerilog-.git,2019-09-01 06:36:21+00:00,,0,sadhanrudresh/My-experiment-with-SystemVerilog-,205639076,SystemVerilog,My-experiment-with-SystemVerilog-,576,1,2021-08-01 18:55:02+00:00,[],None
184,https://github.com/JacobLondon/tea-encryption.git,2019-08-29 00:18:18+00:00,Tea Encryption for ECE 4304 VHDL Design Project,1,JacobLondon/tea-encryption,205046341,SystemVerilog,tea-encryption,25214,1,2021-07-24 23:43:28+00:00,"['vhdl', 'vivado', 'vga', 'uart', 'blockcipher', 'tea', 'school']",None
185,https://github.com/mcagriaksoy/simple-spi-vip.git,2019-06-08 22:54:56+00:00,,0,mcagriaksoy/simple-spi-vip,190942736,SystemVerilog,simple-spi-vip,3,1,2019-09-04 06:26:24+00:00,[],None
186,https://github.com/edwildson/MotorDePasso.git,2019-07-22 11:02:43+00:00,Controle de motor de passo com HDL Systemverilog,0,edwildson/MotorDePasso,198205845,SystemVerilog,MotorDePasso,6,1,2019-12-02 05:38:03+00:00,[],None
187,https://github.com/MichaelNguyenz229/FPGA.git,2019-06-26 03:28:22+00:00,EECS 31L,0,MichaelNguyenz229/FPGA,193822966,SystemVerilog,FPGA,32,0,2019-07-10 15:28:13+00:00,[],None
188,https://github.com/dngkphm/cpp.git,2019-06-20 22:30:18+00:00,Cycle Pipelined Processor,0,dngkphm/cpp,192994782,SystemVerilog,cpp,7983,0,2019-06-20 22:31:00+00:00,[],None
189,https://github.com/xxxbano/Hardware_Calculator.git,2019-08-17 15:43:17+00:00,"This calculator accepts a serial of numbers and push onto a stack. When it receives an algebraic command (+, -, *, /), two values will be poped out from stack and used as operand to do the correspond calculation. The result will be pushed back to stack and shown as the result output",0,xxxbano/Hardware_Calculator,202900149,SystemVerilog,Hardware_Calculator,628,0,2019-08-19 15:38:37+00:00,[],None
190,https://github.com/tal-aya/proyect.git,2019-08-15 06:54:09+00:00,,0,tal-aya/proyect,202489893,SystemVerilog,proyect,1640,0,2019-08-15 06:54:29+00:00,[],None
191,https://github.com/Dane-Horn/HLDA-Final-Assignment.git,2019-09-24 13:00:58+00:00,Final assignment for Rhodes 2019 Hardware Logic Analysis and Design in VHDL,0,Dane-Horn/HLDA-Final-Assignment,210604214,SystemVerilog,HLDA-Final-Assignment,6077,0,2019-09-27 06:48:27+00:00,[],None
192,https://github.com/calonso88/iir_csa_sum.git,2019-09-22 18:11:12+00:00,Initial experiences with IIR filters using Carry Save Adders and storing filter results with Carry Save Format - Simple Addition,0,calonso88/iir_csa_sum,210192698,SystemVerilog,iir_csa_sum,7,0,2019-09-22 18:28:35+00:00,[],None
193,https://github.com/haniehm26/Architecture-Microprocessor.git,2019-07-16 17:50:28+00:00,A microprocessor contained two basic parts: Data path and Controller,0,haniehm26/Architecture-Microprocessor,197241848,SystemVerilog,Architecture-Microprocessor,12,0,2021-03-02 14:51:47+00:00,[],None
194,https://github.com/alferbra/dm_cache.git,2019-07-20 09:46:59+00:00,Direct mapped cache,0,alferbra/dm_cache,197910822,SystemVerilog,dm_cache,16,0,2019-10-01 20:34:58+00:00,[],None
195,https://github.com/mrdhindsa/SystemVerilog.git,2019-09-11 20:58:43+00:00,Modules designed using SystemVerilog,0,mrdhindsa/SystemVerilog,207905657,SystemVerilog,SystemVerilog,1079,0,2019-09-11 21:44:40+00:00,[],None
196,https://github.com/jonnxpr/part3---v2-LAOC-II.git,2019-09-14 23:27:16+00:00,DESGRAÇA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!,0,jonnxpr/part3---v2-LAOC-II,208516127,SystemVerilog,part3---v2-LAOC-II,34,0,2019-09-15 20:27:14+00:00,[],None
197,https://github.com/Jaquelineds/Verilog-CPU-Peripheral.git,2019-09-06 22:25:30+00:00,,0,Jaquelineds/Verilog-CPU-Peripheral,206882724,,Verilog-CPU-Peripheral,2,0,2020-12-03 14:19:09+00:00,[],None
198,https://github.com/tallerdigitales2019s2/laboratorio3.git,2019-09-03 23:48:03+00:00,,0,tallerdigitales2019s2/laboratorio3,206191535,SystemVerilog,laboratorio3,20763,0,2019-09-17 04:52:55+00:00,[],None
199,https://github.com/iagotito/FPGASomadorMultiplicador.git,2019-09-05 12:29:14+00:00,LOAC eh peso,0,iagotito/FPGASomadorMultiplicador,206558677,SystemVerilog,FPGASomadorMultiplicador,1,0,2023-01-28 09:25:10+00:00,[],None
200,https://github.com/fumimaker/Pynq_FPGA.git,2019-06-28 05:04:43+00:00,,0,fumimaker/Pynq_FPGA,194209449,SystemVerilog,Pynq_FPGA,2310,0,2019-06-28 05:04:54+00:00,[],None
201,https://github.com/Chepelash/fpga_lab_C1.git,2019-06-29 12:55:21+00:00,,0,Chepelash/fpga_lab_C1,194405734,SystemVerilog,fpga_lab_C1,138,0,2019-11-07 08:08:08+00:00,[],None
202,https://github.com/slothfamily/A2RT.git,2019-06-29 11:47:04+00:00,FPGA based design with the PYNQ board that does Video to ascii processing in real time,0,slothfamily/A2RT,194399570,SystemVerilog,A2RT,11550,0,2020-02-17 13:47:09+00:00,[],None
203,https://github.com/RadhikaF/ELEC3720.git,2019-07-01 01:55:03+00:00,Programmable Logic Design,0,RadhikaF/ELEC3720,194582439,SystemVerilog,ELEC3720,1045,0,2019-07-01 02:02:53+00:00,[],None
204,https://github.com/victormanu/LabTallerDigitales3.git,2019-08-30 22:37:07+00:00,Taller de diseño digital - Laboratorio #3,0,victormanu/LabTallerDigitales3,205465478,SystemVerilog,LabTallerDigitales3,23,0,2019-08-31 03:34:59+00:00,[],https://api.github.com/licenses/gpl-3.0
205,https://github.com/kkgithub4/prj7.git,2019-05-24 06:21:04+00:00,eth prototype like prj,0,kkgithub4/prj7,188364071,SystemVerilog,prj7,22,0,2019-05-24 09:01:08+00:00,[],None
206,https://github.com/joaosoaresaalm/SystemVerilog.git,2019-05-19 16:01:10+00:00,,0,joaosoaresaalm/SystemVerilog,187498333,SystemVerilog,SystemVerilog,8,0,2019-07-02 01:05:52+00:00,[],None
207,https://github.com/austin-lee117/ece385_spring2019.git,2019-06-12 03:54:40+00:00,Digital Systems Lab,0,austin-lee117/ece385_spring2019,191494102,SystemVerilog,ece385_spring2019,8032,0,2019-06-12 04:10:04+00:00,[],None
208,https://github.com/Artem1199/ECE581-P2P3-Sequencer.git,2019-07-19 05:26:42+00:00,,0,Artem1199/ECE581-P2P3-Sequencer,197707412,SystemVerilog,ECE581-P2P3-Sequencer,5,0,2019-07-21 19:18:23+00:00,[],None
209,https://github.com/yoshi-ki/3S-thu34.git,2019-07-25 04:35:54+00:00,,0,yoshi-ki/3S-thu34,198757958,SystemVerilog,3S-thu34,7,0,2020-09-20 13:03:24+00:00,[],None
210,https://github.com/jyao-10/RISCV-processor.git,2019-08-03 18:49:25+00:00,RISC-V Pipelined Processor,0,jyao-10/RISCV-processor,200410174,SystemVerilog,RISCV-processor,35,0,2020-03-17 07:34:56+00:00,[],None
211,https://github.com/nnikolov3/GreyAdder.git,2019-07-29 19:06:02+00:00,A 4-bit Grey Adder,0,nnikolov3/GreyAdder,199511784,SystemVerilog,GreyAdder,1,0,2019-07-29 19:08:30+00:00,[],None
212,https://github.com/BalajSaleem/Pipelined-Mips-Processor.git,2019-10-01 16:56:41+00:00,"An implementation of Pipelined MIPS processor, for parallel instruction execution. Using 32 registers and multiple components for computation.",0,BalajSaleem/Pipelined-Mips-Processor,212151018,SystemVerilog,Pipelined-Mips-Processor,375,0,2020-03-09 20:24:26+00:00,[],None
213,https://github.com/abishekvenkit/FPGA-Super-Hexagon.git,2019-07-25 03:49:19+00:00,"This Repository holds the Final Project for ECE 385, an implementation of the game Super Hexagon",0,abishekvenkit/FPGA-Super-Hexagon,198753074,SystemVerilog,FPGA-Super-Hexagon,1154,0,2019-07-25 03:54:40+00:00,[],None
214,https://github.com/psaikishna444/krishna-mirafra.git,2019-07-01 02:52:07+00:00,sample,0,psaikishna444/krishna-mirafra,194589242,SystemVerilog,krishna-mirafra,27,0,2019-07-01 02:54:26+00:00,[],None
215,https://github.com/pwgardipee/Segway-Controller-FPGA.git,2019-06-19 19:36:02+00:00,Verilog project used to by synthesized and pushed to an FPGA board to control a self-made Segway.,0,pwgardipee/Segway-Controller-FPGA,192793344,SystemVerilog,Segway-Controller-FPGA,47,0,2019-06-19 19:37:15+00:00,[],None
216,https://github.com/blcxgreat/Hazard-light.git,2019-05-20 00:27:03+00:00,Intro to embedded system lab3,0,blcxgreat/Hazard-light,187542694,SystemVerilog,Hazard-light,7669,0,2019-05-20 00:47:58+00:00,[],None
217,https://github.com/abs-tudelft/fletcher-aws.git,2019-07-04 10:01:00+00:00,Fletcher AWS EC2 F1 platform support,2,abs-tudelft/fletcher-aws,195216986,SystemVerilog,fletcher-aws,333,0,2021-04-02 12:00:57+00:00,[],https://api.github.com/licenses/apache-2.0
218,https://github.com/name1e5s/fiveCPU.git,2019-05-21 08:08:04+00:00,FIVE stage pipeline CPU.,0,name1e5s/fiveCPU,187791180,SystemVerilog,fiveCPU,174,0,2023-01-28 17:32:10+00:00,[],None
219,https://github.com/absn2/cpu_hardware.git,2019-09-08 15:41:50+00:00,,2,absn2/cpu_hardware,207134552,SystemVerilog,cpu_hardware,260753,0,2021-03-02 13:20:01+00:00,[],https://api.github.com/licenses/mit
220,https://github.com/atomichighfive/tolkai.git,2019-08-30 17:36:38+00:00,Playing around with sequence to sequence modeling,0,atomichighfive/tolkai,205429214,SystemVerilog,tolkai,956,0,2019-09-01 21:12:19+00:00,[],None
221,https://github.com/silenceluo/Verilog_Module.git,2019-08-12 19:02:33+00:00,Some Verilog modules,0,silenceluo/Verilog_Module,201991888,SystemVerilog,Verilog_Module,538,0,2021-11-18 23:50:53+00:00,[],None
222,https://github.com/gcdagis97/verification-MIPS-instructions-with-Questa.git,2019-09-09 17:42:35+00:00,Verified various types of MIPS instructions using Questa,0,gcdagis97/verification-MIPS-instructions-with-Questa,207368378,SystemVerilog,verification-MIPS-instructions-with-Questa,852,0,2019-09-09 21:00:44+00:00,[],None
223,https://github.com/jimmyorourke/MIPS-Processor.git,2019-09-10 03:21:11+00:00,5 stage MIPS processor model in Verilog,0,jimmyorourke/MIPS-Processor,207456183,SystemVerilog,MIPS-Processor,1126,0,2021-12-09 02:23:52+00:00,[],None
224,https://github.com/melt-umn/ableC-parallel.git,2019-09-20 23:51:11+00:00,"An extensible, implementation-agnostic, parallel programming framework for ableC.",0,melt-umn/ableC-parallel,209898798,SystemVerilog,ableC-parallel,392,0,2021-10-13 01:32:19+00:00,[],https://api.github.com/licenses/lgpl-3.0
225,https://github.com/ravik0/ECE3829_Lab2.git,2019-09-10 21:20:06+00:00,Light Sensor and VGA Monitor Display ,0,ravik0/ECE3829_Lab2,207665227,SystemVerilog,ECE3829_Lab2,76,0,2019-09-10 21:31:17+00:00,[],None
226,https://github.com/dogacankaynak/Evacuation-Elevator.git,2019-09-08 12:44:14+00:00,Smart Elevator design implemented with System Verilog.,0,dogacankaynak/Evacuation-Elevator,207111159,SystemVerilog,Evacuation-Elevator,16,0,2019-09-15 20:23:20+00:00,[],None
227,https://github.com/10611anil/Calculator_functional_hardware_verification_systemverilog.git,2019-07-03 17:27:08+00:00,Implementation of verification environment of parallel calculator ,0,10611anil/Calculator_functional_hardware_verification_systemverilog,195099434,SystemVerilog,Calculator_functional_hardware_verification_systemverilog,3753,0,2019-07-03 17:38:36+00:00,[],None
228,https://github.com/Hazlinda/Multiplexer.git,2019-07-01 03:24:41+00:00,"Multiplexer also know as Mux is a device that selects between several analog or digital input signals and forwards it to a single output line. A multiplexer of inputs has select lines, which are used to select which input line to send to the output.",0,Hazlinda/Multiplexer,194593169,SystemVerilog,Multiplexer,3,0,2019-07-01 03:33:54+00:00,[],None
229,https://github.com/Rincedent/CycloneVSoC.git,2019-07-01 09:09:31+00:00,Simple project implementing an HPS in a top level VHDL design for the Cyclone V SoC Dev Kit board by Altera,0,Rincedent/CycloneVSoC,194639002,SystemVerilog,CycloneVSoC,7250,0,2019-08-30 07:34:32+00:00,[],None
230,https://github.com/iprabhat29/Wishbone_Slave_with_memory.git,2019-07-11 08:25:05+00:00,Design of wishbone slave with memory implementation,0,iprabhat29/Wishbone_Slave_with_memory,196352101,SystemVerilog,Wishbone_Slave_with_memory,296,0,2019-07-12 10:05:28+00:00,[],None
231,https://github.com/Hecravi-Sali/ECCR0010.git,2019-07-12 08:13:56+00:00,并行/串行输入的序列检测,0,Hecravi-Sali/ECCR0010,196538035,SystemVerilog,ECCR0010,4652,0,2019-07-15 03:49:21+00:00,[],https://api.github.com/licenses/bsd-3-clause
232,https://github.com/nicolasukd/ELO-212-Grupo3.git,2019-07-17 22:42:15+00:00,,1,nicolasukd/ELO-212-Grupo3,197473084,SystemVerilog,ELO-212-Grupo3,807,0,2019-09-04 18:56:30+00:00,[],None
233,https://github.com/AugureZenn/TestGit.git,2019-08-22 08:04:08+00:00,test de git ,0,AugureZenn/TestGit,203744892,SystemVerilog,TestGit,3,0,2019-08-22 13:12:47+00:00,[],None
234,https://github.com/yuh328/ISA-MMP.git,2019-08-23 20:39:45+00:00,,0,yuh328/ISA-MMP,204066977,SystemVerilog,ISA-MMP,438,0,2019-08-23 20:42:58+00:00,[],None
235,https://github.com/east1203/sv.git,2019-08-23 09:41:22+00:00,,0,east1203/sv,203969946,SystemVerilog,sv,11,0,2019-08-23 14:18:38+00:00,[],None
236,https://github.com/taller-de-diseno-de-sistemas-digitales/Laboratorio-3.git,2019-08-27 00:10:01+00:00,,0,taller-de-diseno-de-sistemas-digitales/Laboratorio-3,204583322,SystemVerilog,Laboratorio-3,184,0,2019-09-16 23:25:43+00:00,[],None
237,https://github.com/cagrigungor/Basys3-FPGA-Beti-Board-Elevator-Simulation.git,2019-08-17 13:47:17+00:00,The project was created in CS-223 Digital Design course project at Bilkent University. Project grade was 9.7/10.,0,cagrigungor/Basys3-FPGA-Beti-Board-Elevator-Simulation,202886328,SystemVerilog,Basys3-FPGA-Beti-Board-Elevator-Simulation,17,0,2019-08-18 11:24:28+00:00,[],None
238,https://github.com/AlterFritz88/computer_learn.git,2019-08-05 18:07:30+00:00,,0,AlterFritz88/computer_learn,200705284,SystemVerilog,computer_learn,39,0,2019-08-24 16:05:38+00:00,[],None
239,https://github.com/AminiAria/CPE133Final.git,2019-06-21 01:35:17+00:00,"Created a FPGA calculator. Could perform signed and unsigned addition and subtraction, multiplication, and squaring based on user input. ",0,AminiAria/CPE133Final,193010174,SystemVerilog,CPE133Final,13,0,2019-06-21 01:49:20+00:00,[],None
240,https://github.com/Hazlinda/Priority-Encoder.git,2019-07-03 06:26:26+00:00,This is encoder,0,Hazlinda/Priority-Encoder,194992596,SystemVerilog,Priority-Encoder,3,0,2019-07-04 02:07:18+00:00,[],None
241,https://github.com/kleinkuang/HDL_Template.git,2019-07-08 17:20:31+00:00,HDL Template for Quick Development,0,kleinkuang/HDL_Template,195856432,SystemVerilog,HDL_Template,184,0,2019-11-13 12:08:27+00:00,[],None
242,https://github.com/slab-project-audio-synth/HW_Digital_Audio_Project.git,2019-08-07 11:17:02+00:00,,0,slab-project-audio-synth/HW_Digital_Audio_Project,201035018,SystemVerilog,HW_Digital_Audio_Project,300,0,2019-08-07 11:49:04+00:00,[],None
243,https://github.com/AdrianRamosDS/DVVSD2019_OTONO.git,2019-08-29 16:37:47+00:00,Repo for Design Verification and Validation of Digital Systems. SystemVerilog,0,AdrianRamosDS/DVVSD2019_OTONO,205207351,SystemVerilog,DVVSD2019_OTONO,1923,0,2023-01-28 06:53:44+00:00,[],None
244,https://github.com/ezchi/uvm.git,2019-09-06 12:10:22+00:00,,0,ezchi/uvm,206786138,SystemVerilog,uvm,680,0,2019-09-06 12:13:48+00:00,[],None
245,https://github.com/alecmatthews/G8FinalProject.git,2019-05-27 04:14:41+00:00,Group 8 ECE271 final term project. NES controller deconder with PS/2 keyboard decoder.,0,alecmatthews/G8FinalProject,188769496,SystemVerilog,G8FinalProject,598,0,2019-06-06 05:03:44+00:00,"['hdl', 'keyboard', 'systemverilog', 'nintendo-entertainment-system']",None
246,https://github.com/harishg1996/FIFO.git,2019-05-25 08:50:16+00:00,A memory which is used to store and read data as required,0,harishg1996/FIFO,188542914,SystemVerilog,FIFO,20,0,2019-07-01 04:15:43+00:00,[],https://api.github.com/licenses/apache-2.0
247,https://github.com/WenhMa/zion-research.git,2019-05-25 11:09:18+00:00,,0,WenhMa/zion-research,188556143,SystemVerilog,zion-research,15,0,2019-05-30 11:59:30+00:00,[],None
248,https://github.com/yanxu97/cpu-cache.git,2019-06-13 19:18:26+00:00,using riscv architecture to implement a cpu and cache,0,yanxu97/cpu-cache,191820306,SystemVerilog,cpu-cache,85609,0,2019-06-13 20:29:22+00:00,[],None
249,https://github.com/gbruner7607/Mini-Risc-V-Uart-Srcs.git,2019-06-19 16:12:18+00:00,Source files for my modified version of Mini Risc-V,4,gbruner7607/Mini-Risc-V-Uart-Srcs,192765885,SystemVerilog,Mini-Risc-V-Uart-Srcs,4106,0,2021-04-12 03:45:13+00:00,[],None
250,https://github.com/RonnyZF/MESI_protocol_testbench.git,2019-06-17 19:59:44+00:00,,0,RonnyZF/MESI_protocol_testbench,192410531,SystemVerilog,MESI_protocol_testbench,8,0,2019-06-17 20:03:24+00:00,[],None
251,https://github.com/PSS1998/CPU-pipeline.git,2019-07-07 18:00:02+00:00,CPU pipeline design with system verilog,0,PSS1998/CPU-pipeline,195681800,SystemVerilog,CPU-pipeline,9,0,2019-07-20 08:51:59+00:00,[],None
252,https://github.com/github-4o/PeripheralTemplate.git,2019-07-13 04:26:30+00:00,,0,github-4o/PeripheralTemplate,196677819,SystemVerilog,PeripheralTemplate,5,0,2019-07-14 16:02:13+00:00,[],https://api.github.com/licenses/bsd-2-clause
253,https://github.com/nnikolov3/FIFO_Control.git,2019-07-21 22:32:29+00:00,FIFO controller implemented using System Verilog with a test bench,0,nnikolov3/FIFO_Control,198111468,SystemVerilog,FIFO_Control,3,0,2019-07-21 22:36:01+00:00,[],None
254,https://github.com/lapnd/uvm-1.1d.git,2019-08-22 07:27:21+00:00,,0,lapnd/uvm-1.1d,203738491,SystemVerilog,uvm-1.1d,2976,0,2020-03-03 11:29:48+00:00,[],https://api.github.com/licenses/apache-2.0
255,https://github.com/JoseK21/ALU_SystemVerilog.git,2019-08-29 04:57:55+00:00,Taller de Diseño Digital - II Semestre 2019,0,JoseK21/ALU_SystemVerilog,205083665,SystemVerilog,ALU_SystemVerilog,6,0,2019-08-29 16:48:31+00:00,[],None
256,https://github.com/digital-design-hq/Part-Library.git,2019-08-27 05:30:12+00:00,,0,digital-design-hq/Part-Library,204626524,SystemVerilog,Part-Library,2,0,2019-08-28 04:32:20+00:00,[],None
257,https://github.com/curbsy/ece_474.git,2019-09-14 08:04:26+00:00,Spring 2017 Code for VLSI Sytem Design at Oregon State University. Uses System Verilog.,0,curbsy/ece_474,208409029,SystemVerilog,ece_474,1076,0,2019-09-14 09:15:43+00:00,[],https://api.github.com/licenses/gpl-3.0
258,https://github.com/rgliu/SystemVerilog-Samples.git,2019-09-18 23:28:14+00:00,,0,rgliu/SystemVerilog-Samples,209421493,SystemVerilog,SystemVerilog-Samples,3,0,2019-09-18 23:30:50+00:00,[],None
259,https://github.com/hamidhandid/ArchFinal.git,2019-07-27 11:57:06+00:00,Final Architecture Project - Spring 2019 - Dr. Attarzadeh,0,hamidhandid/ArchFinal,199158940,SystemVerilog,ArchFinal,4,0,2019-07-28 08:32:12+00:00,[],None
260,https://github.com/nnikolov3/Moore_FSM.git,2019-07-29 04:13:38+00:00,A simple vending machine using Moore FSM,0,nnikolov3/Moore_FSM,199376762,SystemVerilog,Moore_FSM,2,0,2019-07-29 04:14:07+00:00,[],None
261,https://github.com/michalz500/uec2-mistrz-klawiatury.git,2019-09-11 22:31:01+00:00,,0,michalz500/uec2-mistrz-klawiatury,207917960,SystemVerilog,uec2-mistrz-klawiatury,56,0,2019-09-11 22:39:09+00:00,[],None
262,https://github.com/Hazlinda/Comparator.git,2019-07-01 03:30:48+00:00,"Binary comparators, also called digital comparators or logic comparators, are combinational logic circuits that are used for testing whether the value represented by one binary word is greater than, less than, or equal to the value represented by another binary word. Two basic types of comparator can be used.",0,Hazlinda/Comparator,194593853,SystemVerilog,Comparator,2,0,2019-07-01 03:32:12+00:00,[],None
263,https://github.com/GabrielOlem/ProjetoHardware.git,2019-09-12 15:33:19+00:00,Project of implementation of a cpu in System Verilog ,0,GabrielOlem/ProjetoHardware,208084562,SystemVerilog,ProjetoHardware,12654,0,2019-10-12 19:31:28+00:00,[],None
264,https://github.com/lukamac/hwpe-color-converter.git,2019-06-09 11:54:33+00:00,HWPE RGB to YCbCr color converting processing engine.,0,lukamac/hwpe-color-converter,191000477,SystemVerilog,hwpe-color-converter,2437,0,2019-06-18 07:56:36+00:00,[],https://api.github.com/licenses/mit
265,https://github.com/Sawaphob/ponggame_finalproject.git,2019-05-19 02:31:09+00:00,,0,Sawaphob/ponggame_finalproject,187425430,SystemVerilog,ponggame_finalproject,121262,0,2019-05-21 02:05:38+00:00,[],None
266,https://github.com/wasim92007/systemverilog.git,2019-06-19 13:01:56+00:00,System Verilog code,0,wasim92007/systemverilog,192733213,SystemVerilog,systemverilog,1,0,2019-06-25 12:34:41+00:00,[],None
267,https://github.com/islom247/Random-Control.git,2019-07-22 12:35:24+00:00,,0,islom247/Random-Control,198220148,SystemVerilog,Random-Control,16,0,2019-07-22 12:38:55+00:00,[],None
268,https://github.com/jasperhaward/MISC-Verilog.git,2019-07-23 00:14:22+00:00,"Multiple system-verilog files to emulate a arithmetic logic unit, and creation of an FPGA implemented Pong game.",0,jasperhaward/MISC-Verilog,198320130,SystemVerilog,MISC-Verilog,453,0,2021-11-26 21:14:58+00:00,[],None
269,https://github.com/braamBeresford/32bitMipsSingleCycle.git,2019-09-02 20:16:22+00:00,,1,braamBeresford/32bitMipsSingleCycle,205930024,SystemVerilog,32bitMipsSingleCycle,222,0,2019-10-10 23:18:33+00:00,[],None
270,https://github.com/BillNace/18341_P3_NOC.git,2019-09-19 21:40:53+00:00,Starter code for project 3,3,BillNace/18341_P3_NOC,209653306,SystemVerilog,18341_P3_NOC,157,0,2024-02-06 15:32:49+00:00,[],None
271,https://github.com/jcontrerasf/Modulos-ELO212.git,2019-09-01 20:50:06+00:00,,0,jcontrerasf/Modulos-ELO212,205730768,SystemVerilog,Modulos-ELO212,18,0,2020-10-24 00:29:28+00:00,[],None
272,https://github.com/xulan008/merge.git,2019-08-16 09:31:58+00:00,,0,xulan008/merge,202699982,SystemVerilog,merge,20,0,2019-10-28 02:57:16+00:00,[],None
273,https://github.com/halegchen/University-Projects.git,2019-09-23 21:05:28+00:00,"Course projects, capstone and individual studies.",0,halegchen/University-Projects,210452522,SystemVerilog,University-Projects,68,0,2019-10-05 02:38:00+00:00,"['wallace-method', 'gaussian-noise', 'system-verilog', 'matlab']",None
274,https://github.com/AjiteshGupta/LC3-testbench.git,2019-07-23 09:40:06+00:00,Layered Testbench for LC3,0,AjiteshGupta/LC3-testbench,198400020,SystemVerilog,LC3-testbench,37,0,2019-07-24 18:14:39+00:00,[],None
275,https://github.com/RCL-lab/NU_MASSIF.git,2019-09-03 22:17:31+00:00,,0,RCL-lab/NU_MASSIF,206181637,SystemVerilog,NU_MASSIF,23881,0,2019-09-04 20:58:10+00:00,[],https://api.github.com/licenses/mit
276,https://github.com/avrg-riscv/core.git,2019-09-13 13:22:15+00:00,,0,avrg-riscv/core,208269214,SystemVerilog,core,17,0,2019-10-11 16:02:02+00:00,[],https://api.github.com/licenses/apache-2.0
277,https://github.com/amirhbv/UT-CA-S98-CA4.git,2019-05-27 09:59:28+00:00,UT Computer Architecture Spring 98 CA3,0,amirhbv/UT-CA-S98-CA4,188818328,SystemVerilog,UT-CA-S98-CA4,39,0,2021-08-30 16:15:17+00:00,[],None
278,https://github.com/nkami/billiard.git,2019-06-24 15:44:05+00:00,,0,nkami/billiard,193534129,SystemVerilog,billiard,1423,0,2019-06-24 16:42:16+00:00,[],None
279,https://github.com/rastadayon/MIPS-Pipeline-Architecture.git,2019-05-21 10:52:54+00:00,,0,rastadayon/MIPS-Pipeline-Architecture,187818915,SystemVerilog,MIPS-Pipeline-Architecture,7058,0,2021-09-01 11:20:24+00:00,[],None
280,https://github.com/kagg123/FPGA_Guitar_Hero.git,2019-05-24 00:11:37+00:00,,0,kagg123/FPGA_Guitar_Hero,188323759,SystemVerilog,FPGA_Guitar_Hero,47,0,2019-11-10 00:56:29+00:00,[],None
281,https://github.com/usman-kakakhel/PipelinedProcessor.git,2019-05-27 20:43:35+00:00,Simulation of a 32 bit mips Pipelined Processor,0,usman-kakakhel/PipelinedProcessor,188906878,SystemVerilog,PipelinedProcessor,11,0,2019-05-27 20:44:43+00:00,[],None
282,https://github.com/arnfol/jpeg_mod.git,2019-06-13 12:18:19+00:00,,2,arnfol/jpeg_mod,191757256,SystemVerilog,jpeg_mod,2029,0,2019-07-23 20:07:21+00:00,[],https://api.github.com/licenses/mit
283,https://github.com/smgl9/Muise_seminar.git,2019-06-16 22:57:56+00:00,,1,smgl9/Muise_seminar,192244328,SystemVerilog,Muise_seminar,773,0,2021-07-05 18:32:33+00:00,[],None
284,https://github.com/Jeremy9249/FIFO.git,2019-06-29 00:03:37+00:00,Takes burst of data at one frequency and outputs it at another frequency while avoiding data loss.,0,Jeremy9249/FIFO,194346029,SystemVerilog,FIFO,21,0,2019-06-29 00:05:36+00:00,[],None
285,https://github.com/Hazlinda/Full-Adder.git,2019-07-01 02:49:44+00:00,Verilog Design and Testbench,0,Hazlinda/Full-Adder,194588937,SystemVerilog,Full-Adder,16,0,2019-08-23 06:23:15+00:00,[],None
286,https://github.com/LeaFZ96/System-Verilog-Format-Compiler.git,2019-07-02 16:23:58+00:00,,0,LeaFZ96/System-Verilog-Format-Compiler,194898306,SystemVerilog,System-Verilog-Format-Compiler,5458,0,2022-02-03 21:50:05+00:00,[],None
287,https://github.com/curbsy/ece_272.git,2019-09-14 08:49:00+00:00,Fall 2015 Code for Digital Logic Design course at Oregon State University. Uses System Verilog.,0,curbsy/ece_272,208413771,SystemVerilog,ece_272,429,0,2019-09-14 08:55:06+00:00,[],https://api.github.com/licenses/gpl-3.0
288,https://github.com/Mop-u/CDC-FIFO.git,2019-08-27 00:31:46+00:00,,0,Mop-u/CDC-FIFO,204585696,SystemVerilog,CDC-FIFO,14,0,2021-01-16 15:19:28+00:00,[],None
289,https://github.com/Anand-Rao745/UpDownCounter.git,2019-08-24 00:04:07+00:00,A program to model a sequential circuit.,0,Anand-Rao745/UpDownCounter,204086054,SystemVerilog,UpDownCounter,1,0,2019-10-02 04:26:10+00:00,[],None
290,https://github.com/karimitani/ECE-437.git,2019-09-01 19:58:52+00:00,Computer Architecture,5,karimitani/ECE-437,205725873,SystemVerilog,ECE-437,3487,0,2023-10-28 15:29:47+00:00,[],None
291,https://github.com/jerry-jho/udma_uart_lsu.git,2019-09-02 15:25:53+00:00,,0,jerry-jho/udma_uart_lsu,205885397,SystemVerilog,udma_uart_lsu,18,0,2019-09-02 15:27:51+00:00,[],https://api.github.com/licenses/gpl-3.0
292,https://github.com/calonso88/iir_csa_sub.git,2019-09-22 18:12:01+00:00,Initial experiences with IIR filters using Carry Save Adders and storing filter results with Carry Save Format - Simple Subtraction,0,calonso88/iir_csa_sub,210192809,SystemVerilog,iir_csa_sub,4,0,2019-09-22 18:29:08+00:00,[],None
293,https://github.com/rothej/riscyverilog.git,2019-08-14 17:11:33+00:00,A RISC-Y processor written in verilog,0,rothej/riscyverilog,202393853,SystemVerilog,riscyverilog,37,0,2020-10-21 22:31:01+00:00,[],https://api.github.com/licenses/mit
294,https://github.com/Guelomon/Sesion-7-ELO212.git,2019-08-10 21:26:30+00:00,,0,Guelomon/Sesion-7-ELO212,201684645,SystemVerilog,Sesion-7-ELO212,8,0,2019-08-10 21:29:24+00:00,[],None
295,https://github.com/kedaizuo/learngit.git,2019-09-23 13:02:19+00:00,,0,kedaizuo/learngit,210356542,SystemVerilog,learngit,54,0,2022-12-04 23:37:44+00:00,[],None
296,https://github.com/at-haa/Arm-Multicycle-Processor.git,2019-07-07 15:00:25+00:00,,0,at-haa/Arm-Multicycle-Processor,195664391,SystemVerilog,Arm-Multicycle-Processor,7,0,2019-07-07 15:02:15+00:00,[],None
297,https://github.com/JoseIuri/Aproximated-UVM.git,2019-08-07 15:34:09+00:00,This repository contains a proposal UVM testbench for aproximated circuits.,4,JoseIuri/Aproximated-UVM,201078327,SystemVerilog,Aproximated-UVM,7380,0,2019-10-24 14:33:42+00:00,"['proposal-uvm-testbench', 'aproximated-circuits', 'uvm']",https://api.github.com/licenses/mit
298,https://github.com/tienshuoc/2D-maze-with-system-verilog.git,2019-05-24 01:27:12+00:00,a system verilog project solving a dynamic two dimensional maze,0,tienshuoc/2D-maze-with-system-verilog,188331150,SystemVerilog,2D-maze-with-system-verilog,20477,0,2020-03-02 02:09:37+00:00,[],None
299,https://github.com/charlzmerth/bomberman.git,2019-05-24 21:17:24+00:00,FPGA implementation of Bomberman,0,charlzmerth/bomberman,188488503,SystemVerilog,bomberman,69819,0,2020-09-28 08:38:05+00:00,[],None
300,https://github.com/neoH/examples.git,2019-05-31 16:41:30+00:00,,0,neoH/examples,189627424,SystemVerilog,examples,1,0,2019-06-28 07:01:31+00:00,[],None
301,https://github.com/MarkleyO/DesignProject271.git,2019-05-28 22:29:24+00:00,,1,MarkleyO/DesignProject271,189111887,SystemVerilog,DesignProject271,3030,0,2019-06-07 18:09:05+00:00,[],None
302,https://github.com/daniel-dmitrzak/Duck-Hunt-FPGA.git,2019-07-29 17:50:03+00:00,FPGA port of Duck Hunt game,0,daniel-dmitrzak/Duck-Hunt-FPGA,199501166,SystemVerilog,Duck-Hunt-FPGA,2457,0,2019-07-29 17:53:18+00:00,[],None
303,https://github.com/gustcar/uvm-systemverilog.git,2019-08-01 20:12:46+00:00,,0,gustcar/uvm-systemverilog,200113226,SystemVerilog,uvm-systemverilog,27,0,2020-04-27 18:46:51+00:00,[],None
304,https://github.com/gpersyn/hackdac2018_soc.git,2019-08-02 03:34:43+00:00,,0,gpersyn/hackdac2018_soc,200159213,SystemVerilog,hackdac2018_soc,19050,0,2019-08-02 04:04:31+00:00,[],
305,https://github.com/playbinary/hbm.git,2019-07-22 01:00:11+00:00,,0,playbinary/hbm,198121700,SystemVerilog,hbm,11,0,2019-07-28 16:55:47+00:00,[],https://api.github.com/licenses/apache-2.0
306,https://github.com/cychotic/FPGA_Verilog_Examples.git,2019-05-29 15:57:51+00:00,,1,cychotic/FPGA_Verilog_Examples,189256955,SystemVerilog,FPGA_Verilog_Examples,606,0,2021-04-15 17:11:26+00:00,[],None
307,https://github.com/pranithbottu/SuperMario_SystemVerilog.git,2019-05-20 15:32:43+00:00,Final project done with partner in Digital Systems Laboratory,0,pranithbottu/SuperMario_SystemVerilog,187668226,SystemVerilog,SuperMario_SystemVerilog,785,0,2019-05-24 16:40:28+00:00,[],None
308,https://github.com/victormanu/ControladorVGA.git,2019-10-01 03:58:25+00:00,Controlador de VGA,0,victormanu/ControladorVGA,212008990,SystemVerilog,ControladorVGA,12889,0,2019-11-13 03:06:41+00:00,[],None
309,https://github.com/aaronferrucci/wwvbtx.git,2019-07-27 00:58:01+00:00,Digital logic to transmit WWVB time code,0,aaronferrucci/wwvbtx,199098138,SystemVerilog,wwvbtx,11,0,2019-07-30 02:47:07+00:00,[],None
310,https://github.com/digital-design-hq/I2C-master-peripheral.git,2019-08-15 07:46:34+00:00,,0,digital-design-hq/I2C-master-peripheral,202497396,SystemVerilog,I2C-master-peripheral,86,0,2019-09-27 21:14:33+00:00,[],None
311,https://github.com/Guelomon/Sesion-Lab-7.git,2019-08-12 22:34:00+00:00,,0,Guelomon/Sesion-Lab-7,202019032,SystemVerilog,Sesion-Lab-7,26,0,2019-08-12 22:36:56+00:00,[],None
312,https://github.com/MarioPonce2910/verificacion.git,2019-08-23 21:48:32+00:00,,0,MarioPonce2910/verificacion,204074259,SystemVerilog,verificacion,1161,0,2019-11-28 05:03:02+00:00,[],None
313,https://github.com/melt-umn/Oberon0LSP.git,2019-08-23 15:59:03+00:00,Oberon0 Language Server Protocol implementation in Silver.,0,melt-umn/Oberon0LSP,204029913,SystemVerilog,Oberon0LSP,9439,0,2019-08-30 18:55:06+00:00,[],None
314,https://github.com/kobo8924/RISCV_Pipline.git,2019-09-08 05:06:50+00:00,,0,kobo8924/RISCV_Pipline,207064537,SystemVerilog,RISCV_Pipline,47,0,2020-01-07 03:05:24+00:00,[],None
315,https://github.com/izzul023/Izzul-.git,2019-09-09 19:39:25+00:00,,0,izzul023/Izzul-,207390213,SystemVerilog,Izzul-,1,0,2019-09-19 18:45:28+00:00,[],None
316,https://github.com/long-recruit2/safe.git,2019-07-19 12:42:05+00:00,,0,long-recruit2/safe,197770923,SystemVerilog,safe,1089,0,2019-07-24 13:26:52+00:00,[],None
317,https://github.com/monurcan/sageintern.git,2019-07-16 22:24:23+00:00,TÜBİTAK SAGE internship report and source files.,0,monurcan/sageintern,197275806,SystemVerilog,sageintern,25569,0,2021-01-16 12:54:22+00:00,[],None
318,https://github.com/A13X0150N/matrixMult.git,2019-06-18 06:41:44+00:00,matrix operations,0,A13X0150N/matrixMult,192481264,SystemVerilog,matrixMult,909,0,2020-02-01 13:57:34+00:00,[],None
319,https://github.com/arvindaru2/Maze-Processor.git,2019-06-25 03:59:24+00:00,,0,arvindaru2/Maze-Processor,193631707,SystemVerilog,Maze-Processor,333747,0,2019-06-25 04:27:20+00:00,[],None
320,https://github.com/0xD503/I2C-Interface.git,2019-05-21 21:39:54+00:00,I2C Interface RTL description,0,0xD503/I2C-Interface,187917338,SystemVerilog,I2C-Interface,4,0,2019-05-30 19:14:35+00:00,"['i2c', 'serial-communication', 'serial-interface', 'fpga-soc']",None
321,https://github.com/haichuanxuken/Computer-Organization-and-Design--RISC-V-Pipelined-Processor.git,2019-05-26 04:05:41+00:00,,0,haichuanxuken/Computer-Organization-and-Design--RISC-V-Pipelined-Processor,188638305,SystemVerilog,Computer-Organization-and-Design--RISC-V-Pipelined-Processor,49423,0,2019-05-26 04:08:44+00:00,[],None
322,https://github.com/nimamg/Direct-Mapped-Cache-Memory.git,2019-06-05 08:29:02+00:00,,0,nimamg/Direct-Mapped-Cache-Memory,190356416,SystemVerilog,Direct-Mapped-Cache-Memory,8,0,2019-06-18 17:26:36+00:00,[],None
323,https://github.com/hArtig4n/dynamic-cast-with-SystemVerilog.git,2019-08-18 13:30:32+00:00,Dynamic cast when source expression is null,0,hArtig4n/dynamic-cast-with-SystemVerilog,203006796,SystemVerilog,dynamic-cast-with-SystemVerilog,4,0,2019-08-18 15:28:52+00:00,[],https://api.github.com/licenses/mit
324,https://github.com/syloog/pipelineProcessor.git,2019-07-08 17:30:56+00:00,Pipeline processor written in SystemVerilog with support of Stall and Flush functions,0,syloog/pipelineProcessor,195857800,SystemVerilog,pipelineProcessor,13,0,2019-07-08 17:40:52+00:00,[],None
325,https://github.com/vasschrys/MIPS_Multicycle.git,2019-09-16 22:56:00+00:00,"Multicycle processor that had to handle the following instructions: add, sub, and, or, slt, lw, sw, beq, addi, and j. Registers, multiplexers, and internal logic had to be set up. The multicycle processor is divided into three units: the controller, datapath, and mem (memory) units.",0,vasschrys/MIPS_Multicycle,208912694,SystemVerilog,MIPS_Multicycle,16,0,2019-09-16 22:59:39+00:00,[],None
326,https://github.com/jaquerinte/RISCV_RTCS_Core.git,2019-09-17 10:06:44+00:00,AGGGGGGGGGGG!!!!!!!!!!!,0,jaquerinte/RISCV_RTCS_Core,209021136,SystemVerilog,RISCV_RTCS_Core,29633,0,2020-09-29 06:12:43+00:00,[],https://api.github.com/licenses/apache-2.0
327,https://github.com/TinaHsing/Quantaser_RP_FPGA.git,2019-09-26 09:00:32+00:00,,0,TinaHsing/Quantaser_RP_FPGA,211045707,SystemVerilog,Quantaser_RP_FPGA,690738,0,2020-10-14 04:40:00+00:00,[],None
328,https://github.com/syloog/nimgame.git,2019-07-08 17:21:24+00:00,CS223 Nim - Mathematical Strategy Game,0,syloog/nimgame,195856545,SystemVerilog,nimgame,14,0,2019-07-08 17:24:53+00:00,[],None
329,https://github.com/vmmc2/Jupiter.git,2019-07-21 19:53:45+00:00,"A RISC-V processor simulator made using SystemVerilog, Verilog, VHDL and Python",0,vmmc2/Jupiter,198099065,SystemVerilog,Jupiter,1485,0,2019-07-21 20:18:00+00:00,[],None
330,https://github.com/PurdueSoCet/SoCET_OpenSource.git,2019-07-18 17:53:06+00:00,This repository contains the IP generated by the Purdue SoCET design team that has been approved for open source publication.,0,PurdueSoCet/SoCET_OpenSource,197633162,SystemVerilog,SoCET_OpenSource,119,0,2019-08-27 20:11:18+00:00,[],
331,https://github.com/amiteee78/RTL_design.git,2019-09-07 13:56:40+00:00,,0,amiteee78/RTL_design,206975633,SystemVerilog,RTL_design,5375,0,2023-07-22 18:25:05+00:00,[],None
332,https://github.com/konghongxin0/Neural_network-Interface-FPGA.git,2019-09-13 22:59:41+00:00,,0,konghongxin0/Neural_network-Interface-FPGA,208359517,SystemVerilog,Neural_network-Interface-FPGA,105964,0,2019-09-16 18:28:34+00:00,[],None
333,https://github.com/ebertn/eece437processor.git,2019-09-13 21:13:20+00:00,"A MIPS CPU developed for ECE 437 by Nick Ebert and Chris Jovanovic. The CPU implements pipelining, caching, and is dual core with cache coherency. ",0,ebertn/eece437processor,208347512,SystemVerilog,eece437processor,1862,0,2020-06-17 03:17:16+00:00,[],None
334,https://github.com/ElectronicBatman/Generic-Mat-Mult.git,2019-08-24 18:14:41+00:00,Systemverilog matrix multiplier,0,ElectronicBatman/Generic-Mat-Mult,204195237,SystemVerilog,Generic-Mat-Mult,6,0,2019-08-24 18:21:55+00:00,[],None
335,https://github.com/sensille/flipper.git,2019-07-10 04:58:15+00:00,Klipper slave implementation in FPGA,0,sensille/flipper,196134165,SystemVerilog,flipper,83,0,2020-02-21 06:12:27+00:00,[],None
336,https://github.com/kangjian888/color_filter_testing.git,2019-06-14 05:03:31+00:00,,0,kangjian888/color_filter_testing,191878623,SystemVerilog,color_filter_testing,7842,0,2019-08-23 09:14:32+00:00,[],None
337,https://github.com/brimstone-/RISC-V_CPU.git,2019-08-28 21:18:18+00:00,12th place submission for ECE 411's design competition in Spring 2019,0,brimstone-/RISC-V_CPU,205025108,SystemVerilog,RISC-V_CPU,107,0,2019-09-09 22:16:26+00:00,[],None
338,https://github.com/MoltenKhor/RetiLogiche_Verilog.git,2019-06-15 12:35:42+00:00,Sintesi e descrizioni dele tracce d'esame di Reti Logiche @UNIPI,0,MoltenKhor/RetiLogiche_Verilog,192076722,SystemVerilog,RetiLogiche_Verilog,11,0,2019-12-23 22:25:09+00:00,[],None
339,https://github.com/fyazici/max1000-template.git,2019-07-07 18:12:57+00:00,Quartus project template with generic pin assignments and clock constraints for Arrow's MAX1000 board,0,fyazici/max1000-template,195682919,SystemVerilog,max1000-template,7,0,2019-07-07 21:56:15+00:00,[],None
340,https://github.com/anson-tanglu/HelloWorld.git,2019-07-18 01:06:19+00:00,repository for python and uvm,0,anson-tanglu/HelloWorld,197485830,SystemVerilog,HelloWorld,0,0,2019-07-18 01:22:25+00:00,[],None
341,https://github.com/osamaadam/polymorphSV.git,2019-07-23 16:00:40+00:00,,0,osamaadam/polymorphSV,198463984,SystemVerilog,polymorphSV,5,0,2023-01-28 10:20:56+00:00,[],None
342,https://github.com/XiFanHeNai/SweRV_Studying.git,2019-05-21 14:53:38+00:00,,0,XiFanHeNai/SweRV_Studying,187859107,SystemVerilog,SweRV_Studying,10984,0,2019-09-24 17:48:28+00:00,[],https://api.github.com/licenses/apache-2.0
343,https://github.com/wonseobshin/402Project1-Simple-SkyTrain-Gate-FSM.git,2019-09-22 06:07:36+00:00,,0,wonseobshin/402Project1-Simple-SkyTrain-Gate-FSM,210099176,SystemVerilog,402Project1-Simple-SkyTrain-Gate-FSM,2642,0,2019-10-02 06:19:45+00:00,[],None
344,https://github.com/karino2/DDCA_exercise.git,2019-09-19 12:06:06+00:00,,0,karino2/DDCA_exercise,209543358,SystemVerilog,DDCA_exercise,320,0,2019-10-25 08:32:17+00:00,[],None
345,https://github.com/shenyaming/swerv_eh1.git,2019-09-17 11:47:35+00:00,,0,shenyaming/swerv_eh1,209039243,SystemVerilog,swerv_eh1,4381,0,2019-09-17 11:48:17+00:00,[],https://api.github.com/licenses/apache-2.0
346,https://github.com/NicolasCanales/Nexys-4ddr_VGA.git,2019-09-03 00:21:10+00:00,,0,NicolasCanales/Nexys-4ddr_VGA,205955928,SystemVerilog,Nexys-4ddr_VGA,32,0,2022-05-21 20:23:41+00:00,[],None
347,https://github.com/jigneshrs/uvm-vendingMachine.git,2019-09-28 18:56:23+00:00,Vending Machine test using UVM,0,jigneshrs/uvm-vendingMachine,211547951,SystemVerilog,uvm-vendingMachine,75,0,2019-09-29 03:09:51+00:00,[],None
348,https://github.com/ryan-gits/fpga-fp.git,2019-06-07 00:44:52+00:00,Floating point modules,0,ryan-gits/fpga-fp,190668955,SystemVerilog,fpga-fp,6,0,2019-06-09 03:28:25+00:00,[],None
349,https://github.com/JoeBlanchard/Oberon0LSP.git,2019-08-23 15:54:47+00:00,A Language Server Protocol implementation of Oberon0 in Silver.,0,JoeBlanchard/Oberon0LSP,204029260,SystemVerilog,Oberon0LSP,9432,0,2019-08-23 15:57:03+00:00,[],None
350,https://github.com/toddstrader/dpi-compile.git,2019-08-07 01:47:16+00:00,DPI protected Verilog proof of concept,0,toddstrader/dpi-compile,200951534,SystemVerilog,dpi-compile,38,0,2019-09-09 09:40:45+00:00,[],https://api.github.com/licenses/mit
351,https://github.com/ryan-gits/fpga-arbiter.git,2019-07-03 05:55:22+00:00,Round robin arbiter,0,ryan-gits/fpga-arbiter,194988423,SystemVerilog,fpga-arbiter,1,0,2019-07-03 06:04:57+00:00,[],None
352,https://github.com/peterltn2015/CSE-371.git,2019-05-31 06:23:06+00:00,Design Of Digital Circuits And Systems,0,peterltn2015/CSE-371,189539330,SystemVerilog,CSE-371,21,0,2019-05-31 06:29:26+00:00,[],None
353,https://github.com/Jackwin/xc7z035.git,2019-07-28 08:33:48+00:00,,0,Jackwin/xc7z035,199262300,SystemVerilog,xc7z035,4388,0,2022-01-24 13:39:02+00:00,[],None
354,https://github.com/Tongxins/MP3-Experiment.git,2019-07-29 08:39:12+00:00,five-stage flow experiment,0,Tongxins/MP3-Experiment,199413053,SystemVerilog,MP3-Experiment,33527,0,2019-07-29 08:44:26+00:00,[],https://api.github.com/licenses/gpl-3.0
355,https://github.com/aranha96/MIPS-CECI.git,2019-08-20 22:49:29+00:00,,0,aranha96/MIPS-CECI,203465907,SystemVerilog,MIPS-CECI,14,0,2019-09-24 19:43:25+00:00,[],None
356,https://github.com/y0sshi/p_WFF.git,2019-08-19 11:33:32+00:00,pipelined Wave-Front-Fetch graphcut algorithm using FPGA,0,y0sshi/p_WFF,203159953,SystemVerilog,p_WFF,28,0,2022-01-25 11:23:22+00:00,[],None
357,https://github.com/markquimpo/DigitalCircuit-Design.git,2019-09-01 23:13:51+00:00,,0,markquimpo/DigitalCircuit-Design,205743004,SystemVerilog,DigitalCircuit-Design,2518,0,2019-09-01 23:17:46+00:00,[],None
358,https://github.com/rnigam04/Ethernet-2X2-Switch-Box.git,2019-09-05 07:46:53+00:00,Repo will contain the Code of Ethernet 2X2 Ethernet Switch Box in SV and SV/UVM,0,rnigam04/Ethernet-2X2-Switch-Box,206505613,SystemVerilog,Ethernet-2X2-Switch-Box,1,0,2019-09-05 08:02:02+00:00,[],None
359,https://github.com/rojomaldit/ArquitecturaFPGA.git,2019-08-21 14:49:02+00:00,,0,rojomaldit/ArquitecturaFPGA,203605354,SystemVerilog,ArquitecturaFPGA,96135,0,2019-11-14 15:44:36+00:00,[],None
360,https://github.com/digital-design-hq/Avalon-Adapter.git,2019-08-27 05:30:35+00:00,,0,digital-design-hq/Avalon-Adapter,204626575,SystemVerilog,Avalon-Adapter,3,0,2019-08-28 04:32:43+00:00,[],None
361,https://github.com/tallerdigitales2019s2/laboratorio2.git,2019-08-26 20:37:53+00:00,,1,tallerdigitales2019s2/laboratorio2,204557398,SystemVerilog,laboratorio2,7365,0,2019-08-26 20:41:25+00:00,[],None
362,https://github.com/rusito-23/arki.git,2019-09-18 03:39:37+00:00,Quartus II Pipelined Processor,0,rusito-23/arki,209210882,SystemVerilog,arki,455,0,2020-07-14 23:23:37+00:00,"['quartus2', 'system-verilog', 'pipeline-processor']",None
363,https://github.com/nekoteoj/HWSynLab-final-project.git,2019-05-19 09:51:06+00:00,The 3 days miracle implementation of pong game using Xillinx Basys 3 FPGA Board,0,nekoteoj/HWSynLab-final-project,187459331,SystemVerilog,HWSynLab-final-project,13537,0,2022-01-11 13:31:06+00:00,[],None
364,https://github.com/nimamg/MIPS-Pipeline.git,2019-05-23 08:14:55+00:00,A pipeline implementation of the MIPS processor,0,nimamg/MIPS-Pipeline,188190973,SystemVerilog,MIPS-Pipeline,128,0,2019-06-05 08:23:03+00:00,"['mips', 'cpu', 'processor', 'systemverilog', 'verilog', 'pipeline']",None
365,https://github.com/AndersonNguyen1/RISCV-Processor.git,2019-06-20 00:01:55+00:00,,0,AndersonNguyen1/RISCV-Processor,192819724,SystemVerilog,RISCV-Processor,222,0,2019-06-20 00:20:42+00:00,[],None
366,https://github.com/deandalo/Digital-Systems-Engineering.git,2019-07-01 17:34:24+00:00,SystemVerilog code developed for the Digital Systems Engineering class during spring 2019 semester in University of Idaho.  This code was developed for the projects of the class.  The instructor for this class is Dr. James Frenzel.,0,deandalo/Digital-Systems-Engineering,194716528,SystemVerilog,Digital-Systems-Engineering,21,0,2019-07-01 19:11:04+00:00,[],None
367,https://github.com/jinzh97/ISA.git,2019-07-02 19:28:32+00:00,,0,jinzh97/ISA,194923081,SystemVerilog,ISA,17699,0,2019-07-02 19:32:33+00:00,[],None
368,https://github.com/ph504/Computer-Architecture.git,2019-07-06 13:06:39+00:00,CA course 's final project,0,ph504/Computer-Architecture,195540467,SystemVerilog,Computer-Architecture,1486,0,2019-10-28 10:07:12+00:00,[],None
369,https://github.com/PSS1998/Cache-design.git,2019-07-07 18:01:22+00:00,Cache design with verilog,0,PSS1998/Cache-design,195681898,SystemVerilog,Cache-design,1,0,2019-07-20 08:51:59+00:00,[],None
370,https://github.com/yanglei091991/VlogData2C.git,2019-09-02 06:33:10+00:00,Convert serveral vlog data files into C/ASM so that compiler could generate the data into elf's sections.,0,yanglei091991/VlogData2C,205791612,SystemVerilog,VlogData2C,130,0,2019-09-02 09:39:47+00:00,[],None
371,https://github.com/sru-b/CNN-accelerator.git,2019-08-24 21:33:48+00:00,An attempt at speeding the process of using CNN for image detection using the FPGA,1,sru-b/CNN-accelerator,204215106,SystemVerilog,CNN-accelerator,546,0,2019-08-24 22:03:18+00:00,[],None
372,https://github.com/xakstreet/gmii_switch.git,2019-09-02 12:17:22+00:00,2x2 gmii switch,0,xakstreet/gmii_switch,205850418,SystemVerilog,gmii_switch,75,0,2019-11-30 14:50:43+00:00,[],None
373,https://github.com/iremural/cs223-Digital-Design-Project.git,2019-09-12 21:54:00+00:00,Digital Design Course Term Project ,0,iremural/cs223-Digital-Design-Project,208152741,SystemVerilog,cs223-Digital-Design-Project,521,0,2019-09-12 22:27:01+00:00,[],None
374,https://github.com/mjd001/Sandbox12.git,2019-06-18 18:43:41+00:00,Sample working,0,mjd001/Sandbox12,192594871,SystemVerilog,Sandbox12,85,0,2019-06-18 19:05:14+00:00,[],None
375,https://github.com/Insper/DE10-Standard-v.1.3.0-SystemCD.git,2019-07-29 20:30:35+00:00,Copy of: https://www.terasic.com.tw/cgi-bin/page/archive.pl?Language=English&No=1081,0,Insper/DE10-Standard-v.1.3.0-SystemCD,199522763,SystemVerilog,DE10-Standard-v.1.3.0-SystemCD,233668,0,2023-06-22 03:23:18+00:00,"['de10-standard', 'terasic']",None
376,https://github.com/emelrad12/FPGA_Project1.git,2019-07-18 19:47:43+00:00,Preso look at me,0,emelrad12/FPGA_Project1,197647644,SystemVerilog,FPGA_Project1,20,0,2019-07-24 20:42:39+00:00,[],None
377,https://github.com/Artem1199/ECE581-P2P2-Traffic.git,2019-07-19 05:26:16+00:00,Traffic Light controller SV,0,Artem1199/ECE581-P2P2-Traffic,197707377,SystemVerilog,ECE581-P2P2-Traffic,5,0,2019-07-21 17:59:47+00:00,[],None
378,https://github.com/mstrdm/RTL_projects.git,2019-07-09 05:33:37+00:00,"Various RTL practice projects, lessons, and useful FPGA modules",1,mstrdm/RTL_projects,195939112,SystemVerilog,RTL_projects,33,0,2019-08-05 08:20:44+00:00,[],None
379,https://github.com/marshray/svl_stuff.git,2019-07-23 16:05:59+00:00,Experiments in SystemVerilog,0,marshray/svl_stuff,198464858,SystemVerilog,svl_stuff,12,0,2019-07-23 16:06:06+00:00,[],https://api.github.com/licenses/apache-2.0
380,https://github.com/Aya-Amin/Verilog-Projects.git,2019-07-14 22:46:20+00:00,,0,Aya-Amin/Verilog-Projects,196890576,SystemVerilog,Verilog-Projects,438,0,2019-07-14 22:51:38+00:00,"['computer-architecture', 'verilog', 'system-verilog']",None
381,https://github.com/benjaminvf/ELO212-sources.git,2019-09-13 17:54:30+00:00,Diseños en SystemVerilog para laboratorio de sistemas digitales (2019).,0,benjaminvf/ELO212-sources,208317838,SystemVerilog,ELO212-sources,47,0,2021-09-22 12:01:36+00:00,[],None
382,https://github.com/appledore22/Wrap_Boundary_Calculation.git,2019-08-13 11:48:25+00:00,Calculation of wrap boundary and subsequent addresses using SystemVeriog,0,appledore22/Wrap_Boundary_Calculation,202132828,SystemVerilog,Wrap_Boundary_Calculation,6,0,2019-08-15 06:50:54+00:00,[],None
383,https://github.com/VinNikVla/A6.git,2019-08-13 13:38:46+00:00,bit_population_counter,0,VinNikVla/A6,202152520,SystemVerilog,A6,201,0,2019-08-13 14:18:38+00:00,[],None
384,https://github.com/sruthysusan/Monitoring.git,2019-08-19 07:02:11+00:00,VerilogHdl,0,sruthysusan/Monitoring,203116773,SystemVerilog,Monitoring,5,0,2019-08-19 07:06:58+00:00,[],None
385,https://github.com/braamBeresford/NESDecoderFinalProject.git,2019-05-23 20:36:32+00:00,NES controller decoder for Digital Logic Design (ECE 271) final project. ,0,braamBeresford/NESDecoderFinalProject,188302871,SystemVerilog,NESDecoderFinalProject,28,0,2020-01-15 20:08:30+00:00,[],https://api.github.com/licenses/agpl-3.0
386,https://github.com/lit26/CSE-371.git,2019-05-31 06:38:43+00:00,University of Washington Design Of Digital Circuits And Systems,0,lit26/CSE-371,189541496,SystemVerilog,CSE-371,38,0,2019-06-05 22:58:39+00:00,[],None
387,https://github.com/ravik0/ECE3829_Lab3.git,2019-09-16 18:12:56+00:00,DAC Waveform and Moving Block,0,ravik0/ECE3829_Lab3,208866602,SystemVerilog,ECE3829_Lab3,89,0,2019-09-22 18:17:35+00:00,[],None
388,https://github.com/Gvascons/HARDWARE-2.git,2019-09-13 17:32:01+00:00,,0,Gvascons/HARDWARE-2,208314161,SystemVerilog,HARDWARE-2,4457,0,2019-10-11 20:43:27+00:00,[],None
389,https://github.com/lucasgrisiq/procRISCV.git,2019-09-06 16:46:11+00:00,,0,lucasgrisiq/procRISCV,206836548,SystemVerilog,procRISCV,25665,0,2019-11-11 19:20:08+00:00,[],None
390,https://github.com/east1203/uvm_codes.git,2019-08-22 01:55:30+00:00,,1,east1203/uvm_codes,203694864,SystemVerilog,uvm_codes,302,0,2019-09-28 14:55:16+00:00,[],None
391,https://github.com/ybtsao/VLSI_Lab.git,2019-07-08 14:57:24+00:00,,0,ybtsao/VLSI_Lab,195834627,SystemVerilog,VLSI_Lab,165,0,2019-07-10 14:25:46+00:00,[],None
392,https://github.com/ThreeBridge/UDP_Image_ips.git,2019-07-23 06:53:43+00:00,,0,ThreeBridge/UDP_Image_ips,198370613,SystemVerilog,UDP_Image_ips,340,0,2019-07-23 07:12:27+00:00,[],None
393,https://github.com/AlbertoFelix/Processador8b.git,2019-08-06 18:34:23+00:00,,0,AlbertoFelix/Processador8b,200904828,SystemVerilog,Processador8b,8,0,2019-08-20 18:34:40+00:00,[],None
394,https://github.com/Ciju94/Master_OpenAMP_De1SoC.git,2019-08-03 19:56:10+00:00,,0,Ciju94/Master_OpenAMP_De1SoC,200415730,SystemVerilog,Master_OpenAMP_De1SoC,12191,0,2019-08-22 07:07:26+00:00,[],None
395,https://github.com/heogih/ETRI-SW-SoC-GihyeonHeo.git,2019-08-18 12:06:40+00:00,,0,heogih/ETRI-SW-SoC-GihyeonHeo,202998100,SystemVerilog,ETRI-SW-SoC-GihyeonHeo,3937,0,2019-08-18 12:20:40+00:00,[],None
396,https://github.com/zif015/cse140hw1.git,2019-08-14 06:59:12+00:00,,0,zif015/cse140hw1,202293217,SystemVerilog,cse140hw1,15,0,2019-08-15 00:47:58+00:00,[],None
397,https://github.com/Bamdres16/Laboratorio2-ALU.git,2019-09-04 02:09:45+00:00,,0,Bamdres16/Laboratorio2-ALU,206210541,SystemVerilog,Laboratorio2-ALU,16454,0,2021-07-21 15:09:29+00:00,[],None
398,https://github.com/Alex-Wolf-7/ISA.git,2019-06-14 00:43:13+00:00,,0,Alex-Wolf-7/ISA,191851812,SystemVerilog,ISA,566,0,2019-06-14 00:45:53+00:00,[],None
399,https://github.com/honey-kingdom/sw_arch.git,2019-06-17 12:38:51+00:00,,0,honey-kingdom/sw_arch,192344347,SystemVerilog,sw_arch,46,0,2019-07-13 16:27:03+00:00,[],None
400,https://github.com/usman-kakakhel/SingeCycleProcessor.git,2019-05-27 20:38:45+00:00,Simulation of a 32 bit mips SimpleCycleProcessor,0,usman-kakakhel/SingeCycleProcessor,188906379,SystemVerilog,SingeCycleProcessor,9,0,2020-05-27 23:36:16+00:00,[],None
401,https://github.com/vinithabaddam/ECE593_MESI_ISC.git,2019-05-25 20:09:31+00:00,,0,vinithabaddam/ECE593_MESI_ISC,188607928,SystemVerilog,ECE593_MESI_ISC,1007,0,2019-06-06 04:57:37+00:00,[],None
402,https://github.com/AminiAria/CPE133Labs.git,2019-06-21 01:08:45+00:00,,0,AminiAria/CPE133Labs,193007410,SystemVerilog,CPE133Labs,13,0,2019-06-21 01:33:47+00:00,[],None
403,https://github.com/codamin/Computer_Architecture_CA_4.git,2019-05-21 13:50:56+00:00,PipeLine CPU project Spring 2019,0,codamin/Computer_Architecture_CA_4,187847060,SystemVerilog,Computer_Architecture_CA_4,1020,0,2019-08-01 06:50:27+00:00,[],None
404,https://github.com/mjd001/shatest.git,2019-05-21 17:17:47+00:00,,0,mjd001/shatest,187882710,SystemVerilog,shatest,3959,0,2019-05-21 17:48:40+00:00,[],None
405,https://github.com/ishto7/SharifNotes.git,2019-07-02 11:56:06+00:00,دانلود جزوات درس‌های مهندسی برق دانشگاه صنعتی شریف,1,ishto7/SharifNotes,194854157,SystemVerilog,SharifNotes,2687032,0,2022-08-04 18:32:40+00:00,[],None
406,https://github.com/haosong830/ECE551.git,2019-07-18 04:59:10+00:00,,0,haosong830/ECE551,197514426,SystemVerilog,ECE551,22,0,2019-07-18 05:11:20+00:00,[],None
407,https://github.com/cpuex2019-7th/fpu.git,2019-09-27 05:47:36+00:00,,0,cpuex2019-7th/fpu,211244987,SystemVerilog,fpu,9541,0,2019-11-13 15:09:21+00:00,[],None
408,https://github.com/AlexM117/FPGA_Processor.git,2019-07-03 03:14:10+00:00,,0,AlexM117/FPGA_Processor,194971207,SystemVerilog,FPGA_Processor,12,0,2019-07-03 03:24:23+00:00,[],None
409,https://github.com/Guelomon/vga.git,2019-08-19 00:22:55+00:00,,0,Guelomon/vga,203070633,SystemVerilog,vga,2,0,2019-08-19 00:23:45+00:00,[],None
410,https://github.com/jan-gebauer/SystemVerilogStudy.git,2019-09-02 08:18:10+00:00,,0,jan-gebauer/SystemVerilogStudy,205809399,SystemVerilog,SystemVerilogStudy,8,0,2019-09-07 10:22:29+00:00,[],https://api.github.com/licenses/mit
411,https://github.com/khuang38/RISC-V-PROCESSOR.git,2019-09-03 18:49:37+00:00,,0,khuang38/RISC-V-PROCESSOR,206149514,SystemVerilog,RISC-V-PROCESSOR,270,0,2019-09-03 18:57:30+00:00,[],None
412,https://github.com/hanhha/Nand2Tetris.git,2019-08-24 10:41:55+00:00,Another Nand2Tetris course's implementation,0,hanhha/Nand2Tetris,204143816,SystemVerilog,Nand2Tetris,4892,0,2022-08-06 14:51:47+00:00,[],https://api.github.com/licenses/unlicense
413,https://github.com/aranha96/ADDAC-Completo.git,2019-07-30 23:26:41+00:00,,0,aranha96/ADDAC-Completo,199741973,SystemVerilog,ADDAC-Completo,9,0,2019-07-30 23:31:09+00:00,[],None
414,https://github.com/nnikolov3/gray_to_binary.git,2019-07-15 01:52:38+00:00,Gray to binary converter,0,nnikolov3/gray_to_binary,196905191,SystemVerilog,gray_to_binary,1,0,2019-07-15 01:52:56+00:00,[],None
415,https://github.com/barua-anik/System-Verification.git,2019-09-19 16:55:00+00:00,,0,barua-anik/System-Verification,209605595,SystemVerilog,System-Verification,647,0,2019-09-19 17:01:40+00:00,[],None
416,https://github.com/sandeep-lingambhotla/Simple_buffer.git,2019-06-10 00:50:20+00:00,,0,sandeep-lingambhotla/Simple_buffer,191071650,SystemVerilog,Simple_buffer,13,0,2019-06-10 00:59:43+00:00,[],None
417,https://github.com/akki0084/Special-microprocessor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities..git,2019-05-29 03:01:17+00:00,"RTL design built with 8-bit XOR based LFSR Processor supporting Hamming Distance count, Cellular Automata 3, etc. Implemented and verified the design using SystemVerilog in ModelSim and performed Static-Timing Analysis with Quartus.",0,akki0084/Special-microprocessor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities.,189140516,SystemVerilog,Special-microprocessor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities.,34,0,2019-05-29 03:02:10+00:00,[],None
418,https://github.com/nguyensinhton9x/uvm_env_ver3.git,2019-06-16 15:17:08+00:00,uvm_env_ver3,1,nguyensinhton9x/uvm_env_ver3,192205896,SystemVerilog,uvm_env_ver3,9210,0,2019-07-19 18:46:50+00:00,[],None
419,https://github.com/Hazlinda/D-Flip-Flop.git,2019-07-01 06:04:04+00:00,"The D flip-flop tracks the input, making transitions with match those of the input D. The D stands for ""data""; this flip-flop stores the value that is on the data line. It can be thought of as a basic memory cell. A D flip-flop can be made from a set/reset flip-flop by tying the set to the reset through an inverter.",0,Hazlinda/D-Flip-Flop,194609568,SystemVerilog,D-Flip-Flop,3,0,2019-07-02 01:49:55+00:00,[],None
420,https://github.com/AndersonNobrega/CircuitosIntegrados.git,2019-05-26 00:49:10+00:00,Circuitos integrados implementados utilizando SystemVerilog,0,AndersonNobrega/CircuitosIntegrados,188625893,SystemVerilog,CircuitosIntegrados,159,0,2019-05-26 19:14:16+00:00,[],None
421,https://github.com/andrefqms/LOAC.git,2019-07-06 20:38:56+00:00,Exercicios sobre maquina de estados,0,andrefqms/LOAC,195581262,SystemVerilog,LOAC,877,0,2021-01-05 14:01:18+00:00,[],None
422,https://github.com/Lucas-Pino/grupo_309_digilab.git,2019-08-09 19:19:34+00:00,duh,0,Lucas-Pino/grupo_309_digilab,201527663,SystemVerilog,grupo_309_digilab,33200,0,2019-08-31 06:24:11+00:00,[],None
423,https://github.com/dmishins/PTB_Emulator.git,2019-08-01 15:06:03+00:00,,0,dmishins/PTB_Emulator,200072078,SystemVerilog,PTB_Emulator,746,0,2019-08-01 15:06:40+00:00,[],None
424,https://github.com/xxxbano/Str_Parser.git,2019-08-30 20:28:48+00:00,string parser,0,xxxbano/Str_Parser,205452549,SystemVerilog,Str_Parser,7987,0,2019-09-05 19:11:58+00:00,[],None
425,https://github.com/ak-seyam/lhlb-mips.git,2019-09-30 18:19:59+00:00,,1,ak-seyam/lhlb-mips,211925742,SystemVerilog,lhlb-mips,213,0,2019-10-02 15:40:49+00:00,[],None
426,https://github.com/ak-seyam/fpuGUI.git,2019-06-12 17:43:41+00:00,design of floating point arithmetic unit with verlog,0,ak-seyam/fpuGUI,191618200,SystemVerilog,fpuGUI,14,0,2019-09-03 06:30:04+00:00,[],None
427,https://github.com/MahmoudEwaisha/Cramers-rule-using-Verilog.git,2019-07-24 16:04:21+00:00,,0,MahmoudEwaisha/Cramers-rule-using-Verilog,198668371,SystemVerilog,Cramers-rule-using-Verilog,926,0,2019-07-24 16:08:48+00:00,[],None
428,https://github.com/Dmitriy0111/enano.git,2019-07-18 12:00:22+00:00,,0,Dmitriy0111/enano,197578517,SystemVerilog,enano,156,0,2019-08-19 14:53:57+00:00,[],None
429,https://github.com/jeesonk/fpga_projects.git,2019-07-18 04:47:26+00:00,SystemVerilog,1,jeesonk/fpga_projects,197513233,SystemVerilog,fpga_projects,87539,0,2021-02-04 10:19:19+00:00,[],None
430,https://github.com/Hazlinda/Fork-Join.git,2019-07-02 01:57:15+00:00,"A Verilog fork...join block always causes the process executing the fork statement to block until the termination of all forked processes. With the addition of the join_any and join_none keywords, SystemVerilog provides three choices for specifying when the parent (forking) process resumes execution. ",0,Hazlinda/Fork-Join,194769715,SystemVerilog,Fork-Join,7,0,2019-07-02 02:05:48+00:00,[],None
431,https://github.com/timchen0618/DCLAB2019_Final_Bomb.git,2019-06-26 09:11:26+00:00,,0,timchen0618/DCLAB2019_Final_Bomb,193870439,SystemVerilog,DCLAB2019_Final_Bomb,2501,0,2020-11-02 14:16:28+00:00,[],None
432,https://github.com/saizhang0218/Maestro.git,2019-06-26 00:43:39+00:00,Initial Maestro Implementation,0,saizhang0218/Maestro,193802951,SystemVerilog,Maestro,3286,0,2019-07-14 09:46:38+00:00,[],None
433,https://github.com/mmahdim77/microprogrammed-control-unit.git,2019-07-02 06:08:13+00:00,,0,mmahdim77/microprogrammed-control-unit,194798805,SystemVerilog,microprogrammed-control-unit,7048,0,2019-07-09 13:34:57+00:00,[],None
434,https://github.com/wofanqiang/VDF_FPGA_Competition_xjtu.git,2019-09-19 09:49:04+00:00,VDF_FPGA_Competition,0,wofanqiang/VDF_FPGA_Competition_xjtu,209518425,SystemVerilog,VDF_FPGA_Competition_xjtu,10703,0,2019-12-30 13:24:29+00:00,[],
435,https://github.com/braamBeresford/32bitMipsMultiCycle.git,2019-09-19 22:06:21+00:00,,0,braamBeresford/32bitMipsMultiCycle,209656446,SystemVerilog,32bitMipsMultiCycle,12,0,2019-10-10 23:26:13+00:00,[],None
436,https://github.com/duhjesus/sample.git,2019-08-07 09:54:07+00:00,sample,0,duhjesus/sample,201022427,SystemVerilog,sample,11,0,2019-08-07 10:17:35+00:00,[],None
437,https://github.com/iprabhat29/Asynchronous-FIFO.git,2019-08-02 05:09:35+00:00,Design and Verification of Asynchronous FIFO using System Verilog/UVM,1,iprabhat29/Asynchronous-FIFO,200168954,SystemVerilog,Asynchronous-FIFO,5,0,2019-08-02 05:17:35+00:00,[],None
438,https://github.com/fpt2019-slab-team/Control_Team_MNZ.git,2019-08-08 11:09:28+00:00,,0,fpt2019-slab-team/Control_Team_MNZ,201241358,SystemVerilog,Control_Team_MNZ,46415,0,2019-08-28 13:05:08+00:00,[],None
439,https://github.com/ChangminYe/FPGA.git,2019-09-26 04:15:27+00:00,,0,ChangminYe/FPGA,210998089,SystemVerilog,FPGA,84,0,2020-02-13 10:04:11+00:00,[],None
440,https://github.com/blcxgreat/FPGA-elevator.git,2019-05-20 00:55:52+00:00,Final project for intro to digital circuits and systems,0,blcxgreat/FPGA-elevator,187544979,SystemVerilog,FPGA-elevator,7912,0,2019-05-20 02:22:31+00:00,[],None
441,https://github.com/0xD503/ARM_Pipelined-Processor.git,2019-06-01 12:19:44+00:00,ARM armv4 pipelined CPU,0,0xD503/ARM_Pipelined-Processor,189729416,SystemVerilog,ARM_Pipelined-Processor,32,0,2019-07-08 20:32:41+00:00,"['processor-architecture', 'processor', 'core', 'pocessor-design', 'system-on-crystal']",None
442,https://github.com/amandascm/Infraestrutura-de-Hardware.git,2019-06-05 01:16:19+00:00,Projeto de um subconjunto de instruções do processador RISC-V desenvolvido ao longo da disciplina Infraestrutura de Hardware - CIn UFPE - 2019.1,2,amandascm/Infraestrutura-de-Hardware,190303635,SystemVerilog,Infraestrutura-de-Hardware,6781,0,2020-08-14 15:23:30+00:00,[],None
443,https://github.com/ryan-gits/fpga-uart.git,2019-06-06 04:36:03+00:00,,0,ryan-gits/fpga-uart,190514708,SystemVerilog,fpga-uart,40,0,2022-06-11 21:21:03+00:00,[],https://api.github.com/licenses/gpl-3.0
444,https://github.com/0xD503/SPI-Interface.git,2019-05-21 21:53:27+00:00,SPI Interface RTL Description,0,0xD503/SPI-Interface,187918739,SystemVerilog,SPI-Interface,1,0,2019-05-21 22:21:19+00:00,"['fpga', 'soc', 'fpga-soc', 'ip', 'serial-communication', 'serial-communications', 'spi']",None
445,https://github.com/clin-dev/3D-Graphics-Accelerator.git,2019-05-24 22:57:06+00:00,,0,clin-dev/3D-Graphics-Accelerator,188496593,SystemVerilog,3D-Graphics-Accelerator,106,0,2019-05-24 23:02:22+00:00,[],None
446,https://github.com/jonzo97/bitstream_mem_reinit.git,2019-06-19 16:47:36+00:00,Using tools from Symbiflow's Project X-Ray to manipulate memories within generated Xilinx Artix-7 FPGA Bitstreams. Done in conjunction with research by the BYU Configurable Computing Lab.,2,jonzo97/bitstream_mem_reinit,192770977,SystemVerilog,bitstream_mem_reinit,12773,0,2019-09-20 16:50:34+00:00,[],None
447,https://github.com/van-namdinh/digital_design_ComArch.git,2019-06-23 13:16:52+00:00,Where I can store the source code of the best book that I have never known before,0,van-namdinh/digital_design_ComArch,193350248,SystemVerilog,digital_design_ComArch,149,0,2019-07-07 03:26:43+00:00,[],None
448,https://github.com/AminiAria/CPE233Final.git,2019-06-21 01:39:41+00:00,"Created a drawing program in assembly on a FPGA with VGA output to a monitor and keyboard input. User could draw on the screen, change the color of the cursor or background, move around freely, and erase pen marks. ",0,AminiAria/CPE233Final,193010672,SystemVerilog,CPE233Final,25,0,2019-06-21 01:50:55+00:00,[],None
449,https://github.com/PeterVanNostrand/EE478.git,2019-09-09 14:17:05+00:00,EE 478: Introduction to VHDL,0,PeterVanNostrand/EE478,207326468,SystemVerilog,EE478,14136,0,2019-12-20 16:37:48+00:00,[],https://api.github.com/licenses/gpl-3.0
450,https://github.com/BinaryLust/PeripheralTemplate.git,2019-07-12 05:45:01+00:00,,0,BinaryLust/PeripheralTemplate,196515931,SystemVerilog,PeripheralTemplate,10,0,2019-07-13 19:28:47+00:00,[],None
451,https://github.com/cevero/sanity-test-core.git,2019-07-14 18:44:34+00:00,"A repository that holds an unchanged zero-riscy core in order to execute sanity tests with other cores, and verify that our changes have not broken the core",1,cevero/sanity-test-core,196871423,SystemVerilog,sanity-test-core,9,0,2019-07-22 02:02:44+00:00,[],None
452,https://github.com/1toguchi/Nand2tetris.git,2019-07-29 05:48:40+00:00,nand2tetris,0,1toguchi/Nand2tetris,199386575,SystemVerilog,Nand2tetris,2,0,2019-07-29 06:51:24+00:00,[],None
453,https://github.com/taller-de-diseno-de-sistemas-digitales/Laboratorio-2.git,2019-08-23 09:28:15+00:00,Repositorio para el laboratorio 2,0,taller-de-diseno-de-sistemas-digitales/Laboratorio-2,203967643,SystemVerilog,Laboratorio-2,3,0,2019-08-24 22:57:27+00:00,[],None
454,https://github.com/eliasalak/ECE-111.git,2019-08-02 10:50:11+00:00,"SystemVerilog codes for my ""Advanced Digital Design Proj"" course. The coding assignments involve the use of state machines, sequential and nonsequential circuit design, an FIR filter, and more. ",0,eliasalak/ECE-111,200218593,SystemVerilog,ECE-111,1207,0,2019-10-26 03:48:39+00:00,[],None
455,https://github.com/tristanluther28/VGAdriver.git,2019-07-25 18:52:56+00:00,VGA driver in SystemVerilog for DE-10 MAX,0,tristanluther28/VGAdriver,198885563,SystemVerilog,VGAdriver,2,0,2019-07-25 18:56:49+00:00,[],None
456,https://github.com/nnikolov3/full_adder.git,2019-07-08 01:37:11+00:00,Full adder as a netlist of AND and OR gates and inverters,0,nnikolov3/full_adder,195716563,SystemVerilog,full_adder,2,0,2019-07-08 01:42:26+00:00,[],None
457,https://github.com/Artem1199/ECE581-P2P1-FIFO.git,2019-07-19 05:26:30+00:00,FIFO Controller,0,Artem1199/ECE581-P2P1-FIFO,197707396,SystemVerilog,ECE581-P2P1-FIFO,1,0,2019-07-19 07:10:52+00:00,[],None
458,https://github.com/Cpow96/Froge.git,2019-07-16 01:06:40+00:00,A final project for a class where we tried to recreate the popular arcade game,0,Cpow96/Froge,197095410,SystemVerilog,Froge,68704,0,2019-07-16 01:21:02+00:00,[],None
459,https://github.com/osamaadam/arrayHandles.git,2019-07-17 11:30:58+00:00,,0,osamaadam/arrayHandles,197376593,SystemVerilog,arrayHandles,3,0,2023-01-28 10:20:56+00:00,[],None
460,https://github.com/jigneshrs/uvm-alu.git,2019-10-01 23:47:18+00:00,ALU verification using UVM,2,jigneshrs/uvm-alu,212220456,SystemVerilog,uvm-alu,42,0,2019-11-27 02:59:09+00:00,[],None
461,https://github.com/Ashwinidv/UVM-TOPOLOGY.git,2019-08-24 08:41:46+00:00, uvm topology,0,Ashwinidv/UVM-TOPOLOGY,204131689,SystemVerilog,UVM-TOPOLOGY,601,0,2019-08-24 08:44:38+00:00,[],None
462,https://github.com/onesmallskipforman/AES-Accel.git,2019-09-13 11:04:39+00:00,,0,onesmallskipforman/AES-Accel,208247752,SystemVerilog,AES-Accel,1071,0,2020-02-27 22:42:49+00:00,[],None
463,https://github.com/sltm-14/PYNQ-ili9341.git,2019-06-24 15:13:28+00:00,,0,sltm-14/PYNQ-ili9341,193529083,SystemVerilog,PYNQ-ili9341,47923,0,2019-09-24 20:11:46+00:00,[],None
464,https://github.com/nguyensinhton9x/uvm_env_ver4.git,2019-06-29 09:59:34+00:00,Pass compile,0,nguyensinhton9x/uvm_env_ver4,194390762,SystemVerilog,uvm_env_ver4,1845,0,2019-11-30 03:54:22+00:00,[],None
465,https://github.com/akki0084/FPGA-Programmable-digital-delay-timer.git,2019-07-11 15:10:23+00:00,1. Implemented a synthesizable RTL design and checked the functionality on Altera MAX 10 FPGA board.  2. Developed the SystemVerilog (OOPS) Testbench architecture to verify the design with constraint randomization,0,akki0084/FPGA-Programmable-digital-delay-timer,196417606,SystemVerilog,FPGA-Programmable-digital-delay-timer,55,0,2019-09-21 00:14:05+00:00,[],None
466,https://github.com/Pepe2295/hola.git,2019-05-29 04:50:19+00:00,,0,Pepe2295/hola,189152565,SystemVerilog,hola,745,0,2019-05-29 05:05:01+00:00,[],None
467,https://github.com/iamjerrchen/ece411_multi_cycle_processor.git,2019-05-25 22:18:15+00:00,Multi cycle processor for the Computer Organization and Design course ECE 411 at University of Illinois at Urbana Champaign. Designed as a team of 3.,0,iamjerrchen/ece411_multi_cycle_processor,188617251,SystemVerilog,ece411_multi_cycle_processor,2036,0,2019-07-16 14:18:00+00:00,[],None
468,https://github.com/Chepelash/fpga_lab_B3.git,2019-06-07 16:37:15+00:00,,0,Chepelash/fpga_lab_B3,190777084,SystemVerilog,fpga_lab_B3,33,0,2019-06-23 13:55:24+00:00,[],None
469,https://github.com/braamBeresford/systemVerilogPong.git,2019-06-02 22:40:36+00:00,,0,braamBeresford/systemVerilogPong,189902254,SystemVerilog,systemVerilogPong,37,0,2020-01-15 20:12:08+00:00,[],None
470,https://github.com/doliver-ventana/ciao-a-tutti.git,2019-06-28 16:58:13+00:00,learning github,0,doliver-ventana/ciao-a-tutti,194307112,SystemVerilog,ciao-a-tutti,0,0,2019-06-28 20:43:03+00:00,[],None
471,https://github.com/khangp0000/De1SoCTetris.git,2019-06-25 13:58:08+00:00,A basic Tetris game built with System Verilog on De1_SoC Board,0,khangp0000/De1SoCTetris,193718380,SystemVerilog,De1SoCTetris,11580,0,2019-06-25 14:52:30+00:00,[],None
472,https://github.com/Nkyoku/QsysIPs.git,2019-09-28 15:15:41+00:00,,0,Nkyoku/QsysIPs,211519448,SystemVerilog,QsysIPs,8,0,2019-09-28 15:15:49+00:00,[],https://api.github.com/licenses/mit
473,https://github.com/tienyao710/ARTY_A7_LED.git,2019-09-23 09:49:12+00:00,LED function test,0,tienyao710/ARTY_A7_LED,210320126,SystemVerilog,ARTY_A7_LED,702,0,2019-12-11 07:28:20+00:00,[],None
474,https://github.com/chandanpalai/SystemVerilog-Basics.git,2019-09-25 13:45:47+00:00,Contains basic sample codes for SystemVerilog. ,0,chandanpalai/SystemVerilog-Basics,210855944,SystemVerilog,SystemVerilog-Basics,27,0,2019-09-25 13:48:51+00:00,[],None
475,https://github.com/Dmitriy0111/schoolMIPS_ctb.git,2019-08-28 14:53:43+00:00,,0,Dmitriy0111/schoolMIPS_ctb,204956988,SystemVerilog,schoolMIPS_ctb,21,0,2019-08-29 15:16:22+00:00,[],https://api.github.com/licenses/apache-2.0
476,https://github.com/lukamac/hwpe_test.git,2019-05-28 09:03:08+00:00,Testiranje hwpe,0,lukamac/hwpe_test,188993157,SystemVerilog,hwpe_test,29,0,2019-06-02 12:27:42+00:00,[],None
477,https://github.com/0xD503/Digital-music-project.git,2019-05-21 21:14:52+00:00,Laboratory work project,0,0xD503/Digital-music-project,187914564,SystemVerilog,Digital-music-project,201,0,2023-07-26 20:35:28+00:00,"['embedded', 'fpga', 'fpga-soc', 'systemverilog-hdl', 'hobby-project', 'audio-player', 'audio-codec', 'laboratory-exercises']",https://api.github.com/licenses/gpl-3.0
478,https://github.com/0xD503/ARM-Multy-Cycle_Processor.git,2019-05-21 19:52:03+00:00,ARM Multi Cycle Processor Core HDL Description,0,0xD503/ARM-Multy-Cycle_Processor,187903988,SystemVerilog,ARM-Multy-Cycle_Processor,38,0,2019-06-01 11:50:25+00:00,"['processor-architecture', 'verilog-hdl', 'systemverilog-hdl', 'arm']",None
479,https://github.com/nq-quan/adopting-uvm.git,2019-06-14 01:50:22+00:00,"All code for use with the text ""Adopting UVM"".",0,nq-quan/adopting-uvm,191858593,SystemVerilog,adopting-uvm,8992,0,2021-08-23 12:10:03+00:00,[],https://api.github.com/licenses/mit
480,https://github.com/ferdiakdogan/basic-computer.git,2019-06-09 23:32:22+00:00,Mano's Basic Computer Implementation,0,ferdiakdogan/basic-computer,191066008,SystemVerilog,basic-computer,4,0,2019-06-09 23:32:51+00:00,[],None
481,https://github.com/huynhy1/ERICK.git,2019-06-06 15:07:47+00:00,141L Final Project,0,huynhy1/ERICK,190602023,SystemVerilog,ERICK,3347,0,2019-06-12 05:00:12+00:00,[],None
482,https://github.com/olbapd/Arqui1.git,2019-06-25 23:27:27+00:00,,0,olbapd/Arqui1,193796650,SystemVerilog,Arqui1,116193,0,2020-06-08 00:17:02+00:00,[],None
483,https://github.com/kaytlinm/CSE369.git,2019-07-17 00:05:07+00:00,,0,kaytlinm/CSE369,197284036,SystemVerilog,CSE369,3,0,2023-01-28 16:44:16+00:00,[],None
484,https://github.com/rgsouza/TelecomParistech-Reconfigurable-architectures-and-HDL-language-course.git,2019-07-18 15:54:12+00:00,Homework assignments implemented in SystemVerilog,0,rgsouza/TelecomParistech-Reconfigurable-architectures-and-HDL-language-course,197617043,SystemVerilog,TelecomParistech-Reconfigurable-architectures-and-HDL-language-course,56199,0,2019-07-18 16:03:27+00:00,[],None
485,https://github.com/BinaryLust/PeripheralTemplate2.git,2019-07-13 07:01:51+00:00,,0,BinaryLust/PeripheralTemplate2,196689874,SystemVerilog,PeripheralTemplate2,5,0,2019-07-19 09:16:59+00:00,[],None
486,https://github.com/zongnanc/ECE-385.git,2019-09-17 23:34:37+00:00,,0,zongnanc/ECE-385,209175622,SystemVerilog,ECE-385,2541,0,2019-09-18 09:00:39+00:00,[],None
487,https://github.com/onesmallskipforman/SV-Toolbox.git,2019-09-12 18:00:23+00:00,,0,onesmallskipforman/SV-Toolbox,208113171,SystemVerilog,SV-Toolbox,10,0,2019-10-05 14:30:32+00:00,[],None
488,https://github.com/isururathnayaka/DM_cache.git,2019-09-13 08:23:04+00:00,,0,isururathnayaka/DM_cache,208224145,SystemVerilog,DM_cache,10,0,2019-10-20 03:54:14+00:00,[],None
489,https://github.com/lemuelmpranoto/System-with-an-Embedded-Softcore-CPU.git,2019-09-18 08:37:59+00:00,,0,lemuelmpranoto/System-with-an-Embedded-Softcore-CPU,209259640,SystemVerilog,System-with-an-Embedded-Softcore-CPU,572,0,2019-09-18 08:50:13+00:00,[],None
490,https://github.com/848LWjrh/848.github.io.git,2019-09-21 03:11:23+00:00,LW的博客,0,848LWjrh/848.github.io,209916978,SystemVerilog,848.github.io,18,0,2019-09-24 11:49:50+00:00,[],None
491,https://github.com/tamannarupani/System-Verilog-Projects.git,2019-07-24 21:50:17+00:00,,0,tamannarupani/System-Verilog-Projects,198714311,SystemVerilog,System-Verilog-Projects,8951,0,2019-07-24 21:51:11+00:00,[],None
492,https://github.com/soleiyu/hdmi.git,2019-07-28 09:32:04+00:00,,0,soleiyu/hdmi,199267746,SystemVerilog,hdmi,1,0,2019-07-28 10:33:42+00:00,[],None
493,https://github.com/Nofenigma/MT_lab_UU.git,2019-09-25 11:04:03+00:00,files for the Machine Translation lab class,0,Nofenigma/MT_lab_UU,210824024,SystemVerilog,MT_lab_UU,315,0,2019-10-10 22:28:40+00:00,[],None
494,https://github.com/jadsonluan/loac.git,2019-06-24 19:17:57+00:00,Repositório de códigos desenvolvidos na disciplina de Laboratório de Organização e Arquitetura de Computadores em Computação@UFCG - 2019.1,0,jadsonluan/loac,193565023,SystemVerilog,loac,3,0,2019-06-26 01:33:13+00:00,[],None
495,https://github.com/sagnik26/verilog.git,2019-09-15 09:10:23+00:00,Designing of various digital circuits(Combinational and Sequential) using hardware description language Verilog,1,sagnik26/verilog,208568658,SystemVerilog,verilog,25,0,2019-10-02 19:36:31+00:00,[],None
496,https://github.com/bLahmann/xs_to_sv.git,2019-09-12 15:16:45+00:00,Simple MC Integrator. Converts cross sections to fusion reactivities.,0,bLahmann/xs_to_sv,208081154,SystemVerilog,xs_to_sv,10553,0,2019-09-12 16:54:33+00:00,[],None
497,https://github.com/Artem1199/ECE581-SV-Projects.git,2019-07-19 01:05:14+00:00,SV Projects,0,Artem1199/ECE581-SV-Projects,197677598,SystemVerilog,ECE581-SV-Projects,1,0,2019-07-19 01:07:59+00:00,[],None
498,https://github.com/nnikolov3/3_to_8_decoder.git,2019-07-08 05:02:47+00:00,SystemVerilog 3 to 8 decoder using conditional operator,0,nnikolov3/3_to_8_decoder,195739656,SystemVerilog,3_to_8_decoder,2,0,2019-07-08 05:39:00+00:00,[],None
499,https://github.com/Guelomon/calculadora.git,2019-08-13 18:09:55+00:00,,0,Guelomon/calculadora,202199504,SystemVerilog,calculadora,6,0,2019-08-13 18:10:39+00:00,[],None
500,https://github.com/BinaryLust/Int-To-Float.git,2019-08-13 10:22:02+00:00,,0,BinaryLust/Int-To-Float,202119550,SystemVerilog,Int-To-Float,3,0,2020-05-31 09:35:10+00:00,[],None
