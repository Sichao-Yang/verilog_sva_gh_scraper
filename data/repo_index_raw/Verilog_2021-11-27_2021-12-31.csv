,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/suisuisi/FPGAandCNN.git,2021-12-11 18:22:43+00:00,基于FPGA的数字识别-实时视频处理的定点卷积神经网络实现,58,suisuisi/FPGAandCNN,437357853,Verilog,FPGAandCNN,61550,244,2024-04-10 18:46:06+00:00,[],None
1,https://github.com/Fraunhofer-IMS/airisc_core_complex.git,2021-12-13 13:47:44+00:00,Fraunhofer IMS processor core. RISC-V ISA (RV32IM) with additional peripherals for embedded AI applications and smart sensors.,16,Fraunhofer-IMS/airisc_core_complex,437890229,Verilog,airisc_core_complex,82882,70,2024-03-06 13:43:55+00:00,"['risc-v', 'riscv', 'fpga', 'verilog', 'embedded-systems', 'ai', 'asic', 'smart-sensors', 'asil', 'functional-safety', 'safety', 'security']",
2,https://github.com/Dazhuzhu-github/systolic-array.git,2021-12-16 13:50:03+00:00,verilog实现TPU中的脉动阵列计算卷积的module,5,Dazhuzhu-github/systolic-array,439005975,Verilog,systolic-array,1188,53,2024-04-11 20:36:32+00:00,[],None
3,https://github.com/shawn110285/Cookabarra.git,2021-12-12 01:14:23+00:00,"a training-target implementation of rv32im, designed to be simple and easy to understand",14,shawn110285/Cookabarra,437425017,Verilog,Cookabarra,3133,53,2024-03-23 12:43:47+00:00,[],None
4,https://github.com/Hank0626/FPGA-Game-Design.git,2021-12-21 20:30:07+00:00,Fireboy & Water Girl in the Forest Temple implemented on an FPGA board for UIUC's ECE385 Digital Systems Laboratory.,0,Hank0626/FPGA-Game-Design,440642686,Verilog,FPGA-Game-Design,407285,24,2023-11-03 13:17:54+00:00,"['fpga', 'system-on-chip', 'systemverilog']",https://api.github.com/licenses/gpl-3.0
5,https://github.com/Wren6991/ChristmasSoC.git,2021-12-20 18:11:12+00:00,"Dual-core RISC-V SoC with JTAG, atomics, SDRAM",2,Wren6991/ChristmasSoC,440264724,Verilog,ChristmasSoC,166,19,2023-12-31 09:12:54+00:00,[],https://api.github.com/licenses/apache-2.0
6,https://github.com/jessepalomera/10G_EthernetMAC_SystemVerilog_OOP.git,2021-12-12 23:12:28+00:00,Final Project for my course in Advanced Verification with SystemVerilog OOP,3,jessepalomera/10G_EthernetMAC_SystemVerilog_OOP,437677776,Verilog,10G_EthernetMAC_SystemVerilog_OOP,1219,16,2024-04-10 08:44:20+00:00,[],https://api.github.com/licenses/gpl-3.0
7,https://github.com/8krisv/CNN-ACCELERATOR.git,2021-12-08 13:16:21+00:00,Hardware accelerator for convolutional neural networks,5,8krisv/CNN-ACCELERATOR,436253691,Verilog,CNN-ACCELERATOR,136876,16,2024-02-05 06:28:39+00:00,"['cnn', 'convolutional-neural-networks', 'verilog', 'computer-architecture', 'hardware-acceleration']",https://api.github.com/licenses/gpl-3.0
8,https://github.com/antonson-j1/SHA256-Accelerator-Hardware.git,2021-12-12 16:16:10+00:00,"This project aims at implementing an hardware accelerator peripheral for SHA256 hashing algorithm with AXI4 interfacing with PicoRV32 CPU. The project focuses on multiple implementations of the accelerator with gradual improvements through spatial pre-computation techniques and pipelining. The SHA256 accelerators are implemented using Verilog and synthesized using Yosys Open Synthesis Suite. The optimized designs are then compared with a base-line C implementation in software. Hash functions are used to securely store passwords, to quickly store and retrive data, and also to check if a file/message is corrupted.",1,antonson-j1/SHA256-Accelerator-Hardware,437594352,Verilog,SHA256-Accelerator-Hardware,3843,15,2024-03-29 18:00:01+00:00,"['sha256', 'sha256-hash', 'verilog', 'picorv32', 'risc-v']",None
9,https://github.com/TheSonders/USBKeyboard.git,2021-12-07 12:59:41+00:00,Interfaz directa con teclados USB en Verilog con control de los Leds de teclado y conversión a PS/2.,5,TheSonders/USBKeyboard,435881362,Verilog,USBKeyboard,152,15,2024-02-02 00:30:34+00:00,"['usb', 'keyboard', 'verilog', 'fpga', 'ps2-keyboard', 'usb-keyboard', 'ulpi']",None
10,https://github.com/spark2k06/next186lite_graphics_gremlin.git,2021-11-28 08:44:24+00:00,Next186 PC-XT with Graphics Gremlin,1,spark2k06/next186lite_graphics_gremlin,432661124,Verilog,next186lite_graphics_gremlin,26293,15,2023-02-17 11:44:34+00:00,[],https://api.github.com/licenses/gpl-3.0
11,https://github.com/mattvenn/zero_to_asic_mpw4.git,2021-12-19 18:17:57+00:00,,1,mattvenn/zero_to_asic_mpw4,439936255,Verilog,zero_to_asic_mpw4,337036,13,2024-03-19 13:26:47+00:00,[],https://api.github.com/licenses/apache-2.0
12,https://github.com/phthinh/soric_project.git,2021-12-21 12:02:05+00:00,Source-Opened RISCV for Crypto,4,phthinh/soric_project,440502068,Verilog,soric_project,639543,13,2023-10-12 02:59:36+00:00,[],https://api.github.com/licenses/apache-2.0
13,https://github.com/rumengshanhe/ADPLL_base_Verilog.git,2021-12-06 03:08:56+00:00,基于Verilog实现的全数字锁相环,4,rumengshanhe/ADPLL_base_Verilog,435344254,Verilog,ADPLL_base_Verilog,3655,12,2024-03-12 01:25:22+00:00,[],None
14,https://github.com/CustomizableComputingLab/Nexysvideo_wujian100.git,2021-12-02 01:06:19+00:00,,2,CustomizableComputingLab/Nexysvideo_wujian100,434037801,Verilog,Nexysvideo_wujian100,15208,12,2023-12-18 03:08:17+00:00,[],None
15,https://github.com/parnabghosh1004/8-point-2D-DCT.git,2021-12-17 09:07:31+00:00,2D discrete cosine transform (DCT) of an 8x8 image in verilog HDL ,2,parnabghosh1004/8-point-2D-DCT,439272659,Verilog,8-point-2D-DCT,85,11,2024-04-02 08:17:49+00:00,[],None
16,https://github.com/Teddy-van-Jerry/ARM_Lite.git,2021-12-17 07:30:40+00:00,A lite version of ARM CPU that extends ARM LEGv8,2,Teddy-van-Jerry/ARM_Lite,439247652,Verilog,ARM_Lite,2963,10,2024-03-27 02:17:35+00:00,"['arm', 'armv8', 'verilog', 'verilog-hdl', 'cpu', 'pipeline', 'forwarding']",https://api.github.com/licenses/mit
17,https://github.com/ytliu74/RISCV_Verilog.git,2021-12-26 16:14:30+00:00,RISC-V SOC (both single and pipeline) implemented in Verilog. Passed all test codes provided by TA.,3,ytliu74/RISCV_Verilog,441932706,Verilog,RISCV_Verilog,1497,10,2024-01-07 04:08:41+00:00,"['verilog', 'risc-v', 'sjtu']",https://api.github.com/licenses/mit
18,https://github.com/bluesceada/iscas89_hl_verilog.git,2021-12-03 13:20:08+00:00,"Re-host of ISCAS89 sequential benchmark circuits in higher level verilog (without ""DFF"")",1,bluesceada/iscas89_hl_verilog,434603560,Verilog,iscas89_hl_verilog,369,9,2024-04-02 07:05:01+00:00,[],None
19,https://github.com/mrcaidev/computer-architecture-and-organization.git,2021-12-27 10:23:11+00:00,电子科技大学 2020 级《计算机组成与结构》课程代码。,0,mrcaidev/computer-architecture-and-organization,442125635,Verilog,computer-architecture-and-organization,26,8,2024-02-22 15:09:16+00:00,"['uestc', 'verilog', 'cpu']",
20,https://github.com/Robin-WZQ/32bit-ALU.git,2021-12-23 15:10:26+00:00,32位ALU加法器（verilog），支持加法并行方式和真串行方式，6种运算（算术运算和逻辑运算），能够输出结果和4个标志位。,1,Robin-WZQ/32bit-ALU,441216763,Verilog,32bit-ALU,574,8,2024-01-15 04:49:29+00:00,"['alu', 'verilog', 'vivado']",https://api.github.com/licenses/mit
21,https://github.com/mostafa-elgendy22/Home-Automation-System.git,2021-12-13 15:53:13+00:00,"System Design, RTL implementation using VHDL, logic synthesis using Oasys tool, and physical design (floor planning, power planning, placement, and routing) using Nitro SoC tool of a home automation system.",1,mostafa-elgendy22/Home-Automation-System,437933635,Verilog,Home-Automation-System,64838,7,2024-04-09 18:50:29+00:00,[],None
22,https://github.com/fluctlight001/Nova132A.git,2021-12-07 01:58:22+00:00,基于Nova132优化的七级流水线处理器,0,fluctlight001/Nova132A,435710407,Verilog,Nova132A,28,7,2024-03-13 10:28:03+00:00,[],None
23,https://github.com/kazkojima/pdmmic-example.git,2021-12-28 03:55:05+00:00,A simple PDM microphone interface on FPGA,3,kazkojima/pdmmic-example,442342677,Verilog,pdmmic-example,111,7,2023-11-06 03:02:19+00:00,[],
24,https://github.com/nic24-rgb/TankBatt.git,2021-12-15 23:20:14+00:00,,1,nic24-rgb/TankBatt,438800627,Verilog,TankBatt,21309,6,2023-11-11 07:28:33+00:00,[],None
25,https://github.com/forem1/FPGA.git,2021-12-06 19:46:05+00:00,"Examples, projects and free modules for Cyclone IV (Omdazz)",1,forem1/FPGA,435626360,Verilog,FPGA,65924,6,2024-03-27 10:20:43+00:00,"['cyclone-iv', 'fpga']",None
26,https://github.com/kasirgalabs/kasirga-k0.git,2021-12-30 15:23:41+00:00,riscv-soc,0,kasirgalabs/kasirga-k0,443112106,Verilog,kasirga-k0,99831,6,2024-03-27 08:16:24+00:00,[],https://api.github.com/licenses/apache-2.0
27,https://github.com/garmeniakos/Ax-Printed-ML-Classifiers.git,2021-12-13 16:43:28+00:00,Approximate Printed Machine Learning Classifiers,2,garmeniakos/Ax-Printed-ML-Classifiers,437949903,Verilog,Ax-Printed-ML-Classifiers,12021,6,2024-04-10 16:24:13+00:00,"['approximate-computing', 'machine-learning', 'printed-electronics', 'design-automation', 'design-space-exploration', 'cross-layer', 'cross-layer-approximation']",None
28,https://github.com/dualvim/KitEasyFPGA_EP4CE6.git,2021-12-07 00:34:25+00:00,Repositório com material de referência para o kit RZ-EasyFPGA A2.2,1,dualvim/KitEasyFPGA_EP4CE6,435693244,Verilog,KitEasyFPGA_EP4CE6,307408,5,2024-01-31 23:33:29+00:00,[],None
29,https://github.com/ntpt7921/Verilog_UDP_TCP.git,2021-11-29 23:14:16+00:00,Module giải mã và đóng gói cho các giao thức IP/TCP+UDP. Viết bằng Verilog. Đề tài thực hiện cho Đồ án thiết kế luận lý.,5,ntpt7921/Verilog_UDP_TCP,433225833,Verilog,Verilog_UDP_TCP,335,5,2024-03-27 12:00:36+00:00,[],https://api.github.com/licenses/mit
30,https://github.com/Milo-F/mcu_core_verify.git,2021-12-01 11:50:42+00:00,基于8051指令集的mcu内核验证环境,0,Milo-F/mcu_core_verify,433806053,Verilog,mcu_core_verify,45988,5,2024-02-27 08:45:27+00:00,[],None
31,https://github.com/spinsirr/FPGA_Clock.git,2021-12-22 12:22:31+00:00,A Multi-function digital clock,1,spinsirr/FPGA_Clock,440849015,Verilog,FPGA_Clock,8608,5,2021-12-22 15:59:29+00:00,[],None
32,https://github.com/rogerpease/AXIMasterStreamTutorial.git,2021-12-04 16:49:54+00:00,,1,rogerpease/AXIMasterStreamTutorial,434957059,Verilog,AXIMasterStreamTutorial,608,5,2023-12-09 08:11:26+00:00,[],None
33,https://github.com/aap/fpga11.git,2021-12-17 15:37:16+00:00,FPGA PDP-11 for the PiDP-11 panel,2,aap/fpga11,439379810,Verilog,fpga11,88,5,2024-01-01 21:33:21+00:00,[],https://api.github.com/licenses/mit
34,https://github.com/AdamWu1999/AdamRiscv.git,2021-12-25 17:04:10+00:00,five-stage-pipeline riscv processor,1,AdamWu1999/AdamRiscv,441722770,Verilog,AdamRiscv,1632,5,2024-01-11 08:35:38+00:00,[],None
35,https://github.com/Kobe972/FPGA-VR.git,2021-12-28 15:07:26+00:00,,0,Kobe972/FPGA-VR,442499203,Verilog,FPGA-VR,2381,4,2024-02-28 18:28:04+00:00,[],None
36,https://github.com/ibraheemalayan/Simple_Computer_Verilog_Part_2.git,2021-12-02 20:31:08+00:00,A simple Von Neumann Computer written in Verilog HDL,0,ibraheemalayan/Simple_Computer_Verilog_Part_2,434365940,Verilog,Simple_Computer_Verilog_Part_2,3972,4,2023-12-28 09:18:44+00:00,"['verilog', 'simulation', 'hdl', 'von-neumann', 'ram', 'memory', 'waveform']",None
37,https://github.com/dk-min/verilog_study.git,2021-12-16 09:47:09+00:00,,1,dk-min/verilog_study,438937240,Verilog,verilog_study,301,4,2024-03-23 14:06:26+00:00,[],None
38,https://github.com/fan19-hub/ECE385-Dad-n-Me-on-FPGA.git,2021-12-09 14:08:19+00:00,Recreate the Dad'n Me on FPGA using System Verilog,2,fan19-hub/ECE385-Dad-n-Me-on-FPGA,436640125,Verilog,ECE385-Dad-n-Me-on-FPGA,6440,4,2024-01-11 20:06:32+00:00,[],None
39,https://github.com/Ahmed-Emad10/Home-Automation-System.git,2021-12-27 19:51:16+00:00,"VLSI Project which close doors, handle fires, close windows and also start heater or cooler.",0,Ahmed-Emad10/Home-Automation-System,442258867,Verilog,Home-Automation-System,2512,4,2024-03-07 14:51:56+00:00,[],https://api.github.com/licenses/mit
40,https://github.com/acsl-technion/flexdriver-zuc.git,2021-11-28 08:15:50+00:00,FlexDriver ZUC cipher example AFU.,1,acsl-technion/flexdriver-zuc,432655949,Verilog,flexdriver-zuc,221,4,2023-04-18 02:55:21+00:00,"['fpga', 'hardware-acceleration', 'zuc', 'eia3', 'eea3', 'crypto']",https://api.github.com/licenses/bsd-2-clause
41,https://github.com/SueHeck/EE272A_DNN_Accelerator.git,2021-12-30 05:46:53+00:00,Implementation of a DNN accelerator Hardware using Resnet_18 architecture,0,SueHeck/EE272A_DNN_Accelerator,442978771,,EE272A_DNN_Accelerator,7297,4,2024-03-22 02:51:23+00:00,[],None
42,https://github.com/manili/AVSDADC_Sky130.git,2021-12-11 14:24:14+00:00,"10-bit ADC 3.3v analog voltage, 1.8v digital voltage and 1 off-chip external voltage reference.",0,manili/AVSDADC_Sky130,437303189,Verilog,AVSDADC_Sky130,1203,4,2023-05-18 02:06:38+00:00,[],https://api.github.com/licenses/apache-2.0
43,https://github.com/cocodery/SampleCPU.git,2021-12-03 16:24:16+00:00,Computer Organization,1,cocodery/SampleCPU,434661422,Verilog,SampleCPU,48,4,2023-04-12 12:35:56+00:00,[],None
44,https://github.com/jaquerinte/space_controller.git,2021-11-30 09:08:00+00:00,,2,jaquerinte/space_controller,433362717,Verilog,space_controller,187370,4,2023-01-31 15:41:11+00:00,[],https://api.github.com/licenses/mit
45,https://github.com/Sswjm/NEU-CPUdesign.git,2021-12-12 05:20:59+00:00,"Computer Architecture Experiment, Northeastern University(CN)",2,Sswjm/NEU-CPUdesign,437459812,Verilog,NEU-CPUdesign,526,4,2023-11-02 07:17:36+00:00,[],None
46,https://github.com/retrhelo/HikelChip.git,2021-12-21 01:59:27+00:00,A simple RISC-V core written in Chisel.,0,retrhelo/HikelChip,440360557,Verilog,HikelChip,4281,4,2024-01-07 07:45:26+00:00,[],https://api.github.com/licenses/mit
47,https://github.com/hyf3513OneGO/EGO1-air-combat-game.git,2021-12-20 13:28:24+00:00,FPGA大作业:FPGA上的竖版飞行游戏-XILINX EGO1,1,hyf3513OneGO/EGO1-air-combat-game,440179826,Verilog,EGO1-air-combat-game,1905,4,2024-03-05 12:47:53+00:00,[],None
48,https://github.com/rabbitdeng/neural_network_fpga.git,2021-12-06 09:58:12+00:00,using verilog to implement an ANN based on FPGA.,1,rabbitdeng/neural_network_fpga,435443871,Verilog,neural_network_fpga,6,4,2023-12-14 01:21:01+00:00,[],None
49,https://github.com/fahimahammed/verilog-with-model-sim.git,2021-12-15 21:07:12+00:00,This repository contains codes of Verilog which is a Hardware Definition Language. These code can be easily compiled and simulate with a software called ModelSim.,0,fahimahammed/verilog-with-model-sim,438773230,Verilog,verilog-with-model-sim,5,4,2022-04-19 05:41:03+00:00,[],None
50,https://github.com/Rzfly/simple_riscv_soft_core.git,2021-11-30 12:15:17+00:00,This is a simple Risc-v core for software simulation on FPGA.,0,Rzfly/simple_riscv_soft_core,433418369,Verilog,simple_riscv_soft_core,4231,4,2023-11-20 13:15:04+00:00,[],None
51,https://github.com/2080fresh/RISC-V-32bit.git,2021-12-29 06:05:48+00:00,동계 URP Project,0,2080fresh/RISC-V-32bit,442676675,Verilog,RISC-V-32bit,542,3,2022-03-15 01:19:24+00:00,[],None
52,https://github.com/GnosGnas/AES-accelerator-with-PICOrv32.git,2021-12-23 02:18:02+00:00,EE2003-Final Project: Hardware Accelerator for AES,0,GnosGnas/AES-accelerator-with-PICOrv32,441037638,Verilog,AES-accelerator-with-PICOrv32,5089,3,2021-12-24 01:52:00+00:00,[],None
53,https://github.com/Hakureirm/USTC-Verilog-OJ-Solved.git,2021-12-29 14:06:40+00:00,中科大的Verilog OJ个人题解（更新）,0,Hakureirm/USTC-Verilog-OJ-Solved,442791821,Verilog,USTC-Verilog-OJ-Solved,25,3,2022-11-25 19:42:25+00:00,[],
54,https://github.com/nguyendao-uom/ICESOC.git,2021-12-28 02:38:07+00:00,,1,nguyendao-uom/ICESOC,442328907,Verilog,ICESOC,121330,3,2024-02-27 19:48:07+00:00,[],https://api.github.com/licenses/apache-2.0
55,https://github.com/leo4048111/DigitalPiano.git,2021-11-29 00:51:33+00:00,"A digital piano/synthesizer implemented with FPGA, supports chords & tone adjustment & wide octave",0,leo4048111/DigitalPiano,432862802,Verilog,DigitalPiano,76876,3,2022-07-24 10:13:14+00:00,"['digital', 'fpga', 'chords', 'piano', 'synthesizer', 'homework']",https://api.github.com/licenses/mit
56,https://github.com/NadineAshraf/Hamming-Code-using-Verilog-HDL.git,2021-11-30 20:12:37+00:00,,2,NadineAshraf/Hamming-Code-using-Verilog-HDL,433572045,Verilog,Hamming-Code-using-Verilog-HDL,70,3,2024-04-12 06:28:37+00:00,[],None
57,https://github.com/alessandrolandra/RISCV_LBIST.git,2021-12-15 17:19:41+00:00,HW assignment of Testing and Fault Tolerance course,1,alessandrolandra/RISCV_LBIST,438713458,Verilog,RISCV_LBIST,61238,3,2022-06-22 09:48:27+00:00,[],None
58,https://github.com/dzx-dzx/RISCV_NO_PIPELINE.git,2021-12-27 16:10:26+00:00,,0,dzx-dzx/RISCV_NO_PIPELINE,442207454,Verilog,RISCV_NO_PIPELINE,94,3,2023-03-10 07:15:09+00:00,[],None
59,https://github.com/AlexLee1999/Single-Cycle-RISCV-CPU.git,2021-12-25 15:27:15+00:00,A Single Cycle RISCV written in Verilog,0,AlexLee1999/Single-Cycle-RISCV-CPU,441706308,Verilog,Single-Cycle-RISCV-CPU,9,3,2023-12-01 01:08:55+00:00,[],None
60,https://github.com/We2Am-BaSsem/Home-Automation-System.git,2021-12-20 03:53:09+00:00,,0,We2Am-BaSsem/Home-Automation-System,440035951,Verilog,Home-Automation-System,21110,3,2022-03-28 15:31:24+00:00,[],None
61,https://github.com/dineshannayya/logic_bist.git,2021-11-27 06:14:49+00:00,,2,dineshannayya/logic_bist,432384243,Verilog,logic_bist,455330,3,2023-02-06 03:18:18+00:00,[],https://api.github.com/licenses/apache-2.0
62,https://github.com/evansm7/ArcDVI.git,2021-12-04 16:48:37+00:00,****DEPRECATED PROTOTYPE**** FPGA design and firmware for Acorn Archimedes DVI output adapter,0,evansm7/ArcDVI,434956749,Verilog,ArcDVI,89,3,2022-07-25 23:45:17+00:00,[],None
63,https://github.com/nbstrong/nand_avalon.git,2021-12-04 08:41:21+00:00,NAND Controller (ONFI compliant),0,nbstrong/nand_avalon,434849574,Verilog,nand_avalon,92581,3,2023-07-19 12:11:25+00:00,[],https://api.github.com/licenses/lgpl-2.1
64,https://github.com/sgjzfzzf/IS316.git,2021-12-16 10:22:44+00:00,,1,sgjzfzzf/IS316,438947304,Verilog,IS316,10,3,2022-01-10 12:00:24+00:00,[],None
65,https://github.com/AntonioDrusin/tang-nano-psram.git,2021-12-30 00:15:42+00:00,A test of the PSRAM on the Sipeed Tang Nano,1,AntonioDrusin/tang-nano-psram,442922511,Verilog,tang-nano-psram,27,3,2022-05-29 18:05:35+00:00,[],None
66,https://github.com/lnis-uofu/testchip_4t1r.git,2021-12-08 22:48:23+00:00,RRAM testchip designed to evaluate 4t1r configuration. Official submission repository for google MPW4 tapeout program.,3,lnis-uofu/testchip_4t1r,436414470,Verilog,testchip_4t1r,185,3,2024-03-27 05:23:20+00:00,[],https://api.github.com/licenses/mit
67,https://github.com/mattvenn/wrapped_function_generator.git,2021-12-10 14:35:00+00:00,,1,mattvenn/wrapped_function_generator,437009264,Verilog,wrapped_function_generator,9847,2,2023-11-19 23:07:35+00:00,[],https://api.github.com/licenses/apache-2.0
68,https://github.com/chamchiking/cifar10verilogSystolicArray.git,2021-12-22 07:47:24+00:00,,0,chamchiking/cifar10verilogSystolicArray,440776338,Verilog,cifar10verilogSystolicArray,49,2,2023-12-06 02:44:22+00:00,[],None
69,https://github.com/RamAIbot/Binary-Convolution-RTL.git,2021-12-22 23:55:38+00:00,The project focusses developing a synthesizable RTL module for performing binary convolution of  the input image. The project was done as a part of (ECE 564) ASIC and FPGA design course offered by North Carolina State University.,0,RamAIbot/Binary-Convolution-RTL,441013152,Verilog,Binary-Convolution-RTL,1295,2,2022-06-22 20:06:17+00:00,[],None
70,https://github.com/saturn77/monitorX.git,2021-12-01 21:04:03+00:00,An example of using Nios to monitor FPGA operations in VHDL. ,0,saturn77/monitorX,433984388,Verilog,monitorX,70596,2,2022-04-18 04:00:51+00:00,"['nios', 'quartus', 'vhdl']",https://api.github.com/licenses/gpl-3.0
71,https://github.com/AdCalleja/PipelinedCoreSoC.git,2021-12-10 11:48:01+00:00,Modification fo the Pipelined core to work as a SoC. Inlcude Data memory and Leds as example modules,0,AdCalleja/PipelinedCoreSoC,436959962,Verilog,PipelinedCoreSoC,3672,2,2022-08-03 16:21:16+00:00,[],None
72,https://github.com/dzx-dzx/RISCV_PIPELINE.git,2021-12-29 19:26:07+00:00,,0,dzx-dzx/RISCV_PIPELINE,442870488,Verilog,RISCV_PIPELINE,390,2,2023-03-10 07:15:09+00:00,[],None
73,https://github.com/Nalinkumar2002/caravel_vco_tapeout_mpw4.git,2021-12-24 15:17:51+00:00,,0,Nalinkumar2002/caravel_vco_tapeout_mpw4,441496713,Verilog,caravel_vco_tapeout_mpw4,4174,2,2022-10-14 15:27:56+00:00,[],https://api.github.com/licenses/apache-2.0
74,https://github.com/nlwmode/ifpga-mapper.git,2021-12-24 03:54:31+00:00,iFPGA mapper for technology mapping in logic synthesis.,0,nlwmode/ifpga-mapper,441359809,Verilog,ifpga-mapper,110364,2,2023-12-18 10:34:58+00:00,[],https://api.github.com/licenses/mit
75,https://github.com/apurbaanik/Traffic-Light-Controller.git,2021-12-30 15:23:03+00:00,"Today’s lab is about a traffic light controller where we will be designing a finite state machine that is capable of controlling traffic lights at a street intersection. There are two orthogonal streets A and B, where A is the primary state and has a higher precedence over street B. There is a sensor at street B that detects if there are any car waiting on street B. If the sensor detects a car, it will have a output 1 with value “High” or a value “Low” if there is no car on street B. If we have a green signal at street A, it must be green for at least 60 seconds. If there is no car on street B i.e. if the sensor doesn’t detect any car then signal A stays green always. If the sensor detects a car on street B, then signal A turns orange for 10 seconds and then signal B turns Green with signal A turning Red. Now when street B has green signal, it stays green for duration of 30 seconds before turning orange for 10 seconds and then to red. Once signal B turns red, signal A turns to green again. So based on the above specs about Traffic Light Controller, we have to write a source file and a test bench using Verilog.",0,apurbaanik/Traffic-Light-Controller,443111936,Verilog,Traffic-Light-Controller,2,2,2023-12-26 02:41:56+00:00,[],None
76,https://github.com/shipherd/UART_WITH_FIFO.git,2021-12-24 09:16:57+00:00,UART with FIFO in Verilog (AXI4 Lite),0,shipherd/UART_WITH_FIFO,441421144,Verilog,UART_WITH_FIFO,10,2,2024-01-29 08:11:16+00:00,[],None
77,https://github.com/a7mad-reda/async_fifo.git,2021-12-04 07:10:56+00:00,,1,a7mad-reda/async_fifo,434833342,Verilog,async_fifo,20533,2,2023-02-02 19:57:20+00:00,[],None
78,https://github.com/wokwi/wrapped_skullfet.git,2021-12-23 21:33:15+00:00,"Skull MOSFET, wrapped for Caravel",1,wokwi/wrapped_skullfet,441300397,Verilog,wrapped_skullfet,1481,2,2022-02-15 00:32:44+00:00,[],https://api.github.com/licenses/apache-2.0
79,https://github.com/NaphtholMizuha/MIPSCPU.git,2021-12-09 15:29:59+00:00,,0,NaphtholMizuha/MIPSCPU,436667096,Verilog,MIPSCPU,6,2,2022-11-01 08:35:22+00:00,[],None
80,https://github.com/aruiplex/EEE339-Assignment2.git,2021-12-09 16:37:03+00:00,This is a personal implement of XJTLU EEE339 HDL assignemt2.,1,aruiplex/EEE339-Assignment2,436687999,Verilog,EEE339-Assignment2,8938,2,2023-12-07 04:52:33+00:00,[],None
81,https://github.com/brenmor24/DES_encr_decr_verilog.git,2021-12-01 00:26:30+00:00,Implementation of the 64-bit DES encryption and decryption algorithm on an FPGA.,0,brenmor24/DES_encr_decr_verilog,433630690,Verilog,DES_encr_decr_verilog,48431,2,2024-02-06 15:51:34+00:00,[],None
82,https://github.com/q77190858/Rv32iMulticycleCPU.git,2021-12-18 07:03:27+00:00,基于RV32I指令集的多周期处理器,1,q77190858/Rv32iMulticycleCPU,439550683,Verilog,Rv32iMulticycleCPU,112,2,2023-08-28 00:16:12+00:00,[],None
83,https://github.com/shanmukh2607/NanoJPEG.git,2021-12-19 13:10:27+00:00,"This is a course project in EE2003 Computer Organization, EE Department, IIT Madras",1,shanmukh2607/NanoJPEG,439866762,Verilog,NanoJPEG,2631,2,2022-11-18 17:28:09+00:00,[],None
84,https://github.com/tommy73594/EE457_LAB.git,2021-12-14 08:05:57+00:00,This repository include four project done in course EE457 - Computer Systems Organization.,0,tommy73594/EE457_LAB,438167918,Verilog,EE457_LAB,78,2,2024-01-26 20:05:19+00:00,[],None
85,https://github.com/WeiCheng14159/VSD_CNN_accelerator.git,2021-12-30 10:03:18+00:00,A complete SW/HW co-design system for mask detection,0,WeiCheng14159/VSD_CNN_accelerator,443036002,Verilog,VSD_CNN_accelerator,165793,2,2024-03-14 13:20:50+00:00,[],None
86,https://github.com/andersesbensen/c64hdl.git,2021-12-13 19:20:04+00:00,FPGA C64 emualtor ,1,andersesbensen/c64hdl,437996764,Verilog,c64hdl,1868,2,2023-01-02 21:11:59+00:00,[],https://api.github.com/licenses/bsd-3-clause
87,https://github.com/grassking100/VLSI.git,2021-12-02 15:37:17+00:00,This repository holds the VHDL codes and Verilog codes of the course named VLSI.,0,grassking100/VLSI,434277590,Verilog,VLSI,5994,2,2022-04-16 21:37:11+00:00,"['vlsi', 'vhdl', 'verilog', 'fpga']",None
88,https://github.com/gregdavill/luna-usb-serial-acm.git,2021-12-05 10:57:41+00:00,,0,gregdavill/luna-usb-serial-acm,435140994,Verilog,luna-usb-serial-acm,54,2,2024-02-15 02:21:28+00:00,[],https://api.github.com/licenses/bsd-2-clause
89,https://github.com/junyang-zh/HeliumCPUv2-MIPS32.git,2021-12-11 06:17:36+00:00,Computer orgnization courseworks,1,junyang-zh/HeliumCPUv2-MIPS32,437204475,Verilog,HeliumCPUv2-MIPS32,2508,2,2024-04-11 00:53:55+00:00,[],https://api.github.com/licenses/mit
90,https://github.com/Engineer-mostafa/Automation_System.git,2021-12-26 09:48:48+00:00,,0,Engineer-mostafa/Automation_System,441857008,Verilog,Automation_System,58248,2,2022-03-29 00:46:21+00:00,[],None
91,https://github.com/infini8-13/riscv-tlv-core.git,2021-12-13 16:58:08+00:00,A simple implementation of a RISC-V core (RV32I) written in TL Verilog.,0,infini8-13/riscv-tlv-core,437954669,Verilog,riscv-tlv-core,1307,2,2023-12-11 23:37:01+00:00,"['riscv32', 'tlv', 'cpu']",None
92,https://github.com/TKNopro/mmm_nlp_multi.git,2021-11-30 07:14:24+00:00,The design for description,0,TKNopro/mmm_nlp_multi,433330904,Verilog,mmm_nlp_multi,82,2,2024-03-29 13:52:33+00:00,[],None
93,https://github.com/coleblackman/16-bit-booths-multiplier.git,2021-12-05 04:20:58+00:00,"Based on https://github.com/aekanshd/booths-multiplier-using-verilog, which is an 8-bit booths multiplier",1,coleblackman/16-bit-booths-multiplier,435071829,Verilog,16-bit-booths-multiplier,22,2,2023-11-07 21:25:28+00:00,[],None
94,https://github.com/1009qjm/Ethernet-MDIO-Implementation.git,2021-12-26 05:52:17+00:00,,0,1009qjm/Ethernet-MDIO-Implementation,441819794,Verilog,Ethernet-MDIO-Implementation,10,2,2023-06-26 08:40:27+00:00,[],None
95,https://github.com/Maveru/Maquina_Expendedora_VHDL.git,2021-12-11 17:23:50+00:00,Maquina expendedora de refrescos realizada mediante VHDL para funcionamiento en Nexys DDR4,2,Maveru/Maquina_Expendedora_VHDL,437345133,Verilog,Maquina_Expendedora_VHDL,28041,2,2024-01-05 06:15:29+00:00,[],None
96,https://github.com/oscar-shih/ICD2021fall.git,2021-12-02 09:05:13+00:00,"IC Design 2021 fall @ NTUEE prof. Tzi-Dar, Chiueh",0,oscar-shih/ICD2021fall,434150858,Verilog,ICD2021fall,12615,2,2023-02-23 04:06:24+00:00,[],None
97,https://github.com/redchenjs/h265enc.git,2021-12-02 11:17:37+00:00,,0,redchenjs/h265enc,434190393,Verilog,h265enc,3197,2,2022-09-08 14:35:06+00:00,[],None
98,https://github.com/mahajan-aadi/Speech-Recognition.git,2021-12-05 19:53:06+00:00,The FPGA Project for Speech Recognition,0,mahajan-aadi/Speech-Recognition,435264209,Verilog,Speech-Recognition,10,2,2022-06-28 17:58:56+00:00,[],None
99,https://github.com/tom01h/DPI-Python.git,2021-12-11 07:49:32+00:00,,0,tom01h/DPI-Python,437220640,Verilog,DPI-Python,10,2,2023-09-28 02:45:21+00:00,[],None
100,https://github.com/klasnordmark/caravel_user_project.git,2021-12-30 20:25:23+00:00,,0,klasnordmark/caravel_user_project,443177669,Verilog,caravel_user_project,104303,2,2023-09-07 05:42:24+00:00,[],https://api.github.com/licenses/apache-2.0
101,https://github.com/MOULIK-RAZDAN/2D-DCT-using-Verilog-.git,2021-12-27 16:41:46+00:00,,0,MOULIK-RAZDAN/2D-DCT-using-Verilog-,442216026,Verilog,2D-DCT-using-Verilog-,22,2,2023-06-14 05:47:08+00:00,[],None
102,https://github.com/7Hemanth/AHB2APB_Bridge.git,2021-12-11 20:30:15+00:00,AHB2APB Bridge RTL Design using Verilog HDL ,0,7Hemanth/AHB2APB_Bridge,437382357,Verilog,AHB2APB_Bridge,647,2,2023-08-31 10:58:04+00:00,[],
103,https://github.com/yeyedude/FPGA-2Cars-Game.git,2021-12-11 09:13:44+00:00,Done on the Nexys 4 DDR Board Artix 7,0,yeyedude/FPGA-2Cars-Game,437236243,Verilog,FPGA-2Cars-Game,13,2,2022-06-08 15:14:14+00:00,[],None
104,https://github.com/mattvenn/wrapped_ppm_decoder.git,2021-12-16 12:08:47+00:00,,0,mattvenn/wrapped_ppm_decoder,438975853,Verilog,wrapped_ppm_decoder,370,2,2022-03-17 00:18:00+00:00,[],https://api.github.com/licenses/apache-2.0
105,https://github.com/bit0fun/spraid.git,2021-12-22 13:04:40+00:00,SPI RAID Controller,0,bit0fun/spraid,440860290,Verilog,spraid,121,2,2022-03-06 18:31:26+00:00,[],None
106,https://github.com/sinamazaheri1379/Digital-System-Design-Projects.git,2021-11-29 09:45:16+00:00,,0,sinamazaheri1379/Digital-System-Design-Projects,432984608,Verilog,Digital-System-Design-Projects,33885,2,2022-01-16 20:00:10+00:00,[],None
107,https://github.com/Cc-123789/TINYCPU.git,2021-12-24 11:27:10+00:00,Five Stage Pipeline CPU Based MIPS,0,Cc-123789/TINYCPU,441448159,Verilog,TINYCPU,177,2,2023-12-29 05:59:14+00:00,[],None
108,https://github.com/mattvenn/zero_to_asic_MPW2_rerun.git,2021-12-08 14:13:34+00:00,,0,mattvenn/zero_to_asic_MPW2_rerun,436272127,Verilog,zero_to_asic_MPW2_rerun,107426,2,2022-04-25 13:37:31+00:00,[],https://api.github.com/licenses/apache-2.0
109,https://github.com/kavehshamsi/scadec.git,2021-12-21 06:25:56+00:00,,0,kavehshamsi/scadec,440413331,Verilog,scadec,24431,2,2023-10-19 17:30:42+00:00,[],
110,https://github.com/ppyanjsyan/niceCore.git,2021-12-22 08:50:52+00:00,"The goal is to implement an out-of-order superscalar processor called ""niceCore"".",1,ppyanjsyan/niceCore,440792992,Verilog,niceCore,93,2,2022-07-03 12:23:17+00:00,[],https://api.github.com/licenses/gpl-3.0
111,https://github.com/mattvenn/openram_z2a.git,2021-12-22 15:40:35+00:00,,0,mattvenn/openram_z2a,440906005,Verilog,openram_z2a,1627,2,2022-03-17 00:17:20+00:00,[],None
112,https://github.com/sidhantp1906/RTC-Real-Time-Clock-.git,2021-12-05 10:02:29+00:00,Design of real time clock(RTC) using Verilog HDL,0,sidhantp1906/RTC-Real-Time-Clock-,435130148,Verilog,RTC-Real-Time-Clock-,90,2,2024-02-21 15:11:55+00:00,"['verilog', 'hdl', 'rtc', 'real-time-clock', 'rtl', 'vlsi-design']",https://api.github.com/licenses/apache-2.0
113,https://github.com/UsamaAyub-EE/Sorter-in-Verilog.git,2021-12-01 05:49:03+00:00,This Verilog code sorts 4 numbers.,0,UsamaAyub-EE/Sorter-in-Verilog,433700100,Verilog,Sorter-in-Verilog,3,1,2021-12-14 08:49:16+00:00,[],None
114,https://github.com/Perriex/Fibonacci-with-fgpa-verilog.git,2021-11-28 13:51:44+00:00,,0,Perriex/Fibonacci-with-fgpa-verilog,432725636,Verilog,Fibonacci-with-fgpa-verilog,239,1,2022-08-30 16:32:08+00:00,[],None
115,https://github.com/SHINJUNGWOO/SoC_peripheral.git,2021-12-02 05:49:27+00:00,Matrix Multiplication and Add Peripheral,0,SHINJUNGWOO/SoC_peripheral,434098278,Verilog,SoC_peripheral,3,1,2022-01-20 14:44:37+00:00,[],None
116,https://github.com/hoshimiyaadrian/DQN.git,2021-12-29 10:57:34+00:00,Verilog code for DQN,0,hoshimiyaadrian/DQN,442744312,Verilog,DQN,44,1,2022-03-31 08:29:52+00:00,[],None
117,https://github.com/ggu1012/convolution_filter.git,2021-12-08 15:10:25+00:00,verilog convolution,0,ggu1012/convolution_filter,436291191,Verilog,convolution_filter,345,1,2023-01-17 09:14:44+00:00,[],None
118,https://github.com/akikisai/FPGA.git,2021-12-08 13:09:12+00:00,,0,akikisai/FPGA,436251514,Verilog,FPGA,7,1,2022-04-26 08:39:38+00:00,[],None
119,https://github.com/bilievski/C6288Trojan.git,2021-12-10 23:48:31+00:00,This capstone project demonstrates that side-channel power analysis using the ChipWhisperer toolkit is unable to differentiate the changes in power consumption between a non-infected and infected ISCAS-85 benchmark circuit implemented on a Spartan-6 FPGA. The current design is constrained to infecting a 16x16-bit multiplier with a half-adder trojan and measuring AC power consumption during active multiplication. Subsequent analysis determined that power consumption of the infected circuit was negligibly impacted and no significant differences could be measured.,0,bilievski/C6288Trojan,437143957,Verilog,C6288Trojan,29111,1,2023-10-17 01:01:03+00:00,[],None
120,https://github.com/abdelrhman-oun/SPI_salve.git,2021-12-13 14:31:58+00:00,,0,abdelrhman-oun/SPI_salve,437905971,Verilog,SPI_salve,13,1,2023-01-31 08:06:03+00:00,[],None
121,https://github.com/venkatrao1/terrainrendering.git,2021-12-09 00:09:22+00:00,ECE 385 Final Project - Real-Time Terrain Rendering in SystemVerilog,0,venkatrao1/terrainrendering,436429928,Verilog,terrainrendering,17634,1,2023-11-19 17:57:40+00:00,[],None
122,https://github.com/DigitalLabIIESTS/DigitalDesignUsingVerilogHDL.git,2021-12-17 08:57:40+00:00,A Verilog HDL Guide for Beginners.,1,DigitalLabIIESTS/DigitalDesignUsingVerilogHDL,439269857,Verilog,DigitalDesignUsingVerilogHDL,51714,1,2023-05-25 09:47:40+00:00,"['fpga', 'verilog', 'adders', 'vlsi']",None
123,https://github.com/shacharCaduri/SystolicArrayForRiscVinVerilog.git,2021-11-29 18:45:22+00:00,Adding Systolic Array For Risc-V written in verilog.,0,shacharCaduri/SystolicArrayForRiscVinVerilog,433158813,Verilog,SystolicArrayForRiscVinVerilog,225,1,2022-04-17 21:59:56+00:00,[],None
124,https://github.com/BrianEE07/CVSD_final.git,2021-12-22 14:57:58+00:00,Computer-Aided VLSI System Design Final Project Gauss-Seidel Iteration Machine,0,BrianEE07/CVSD_final,440893559,Verilog,CVSD_final,69755,1,2022-11-09 03:27:39+00:00,[],None
125,https://github.com/Tentou-Reikie/Sipeed_Lichee_Tang_Examples_UnOfficial.git,2021-11-29 09:01:23+00:00,,0,Tentou-Reikie/Sipeed_Lichee_Tang_Examples_UnOfficial,432971153,Verilog,Sipeed_Lichee_Tang_Examples_UnOfficial,30,1,2021-12-03 08:51:57+00:00,[],https://api.github.com/licenses/bsd-3-clause
126,https://github.com/Amir-Shamsi/Multicycle-MIPS-in-Verilog.git,2021-12-06 13:55:28+00:00,MIPS Multicycle CPU design in Verilog,0,Amir-Shamsi/Multicycle-MIPS-in-Verilog,435516446,Verilog,Multicycle-MIPS-in-Verilog,3071,1,2022-06-24 04:07:20+00:00,"['mips', 'verilog', 'multicycle-processor', 'cpu', 'processor-design', 'datapath']",https://api.github.com/licenses/mit
127,https://github.com/FlexEasy/multiplayer-2d-soccer-game-analog.git,2021-12-15 15:20:33+00:00,Configurable 2D Soccer Game Using FPGA Board and Computer Keyboard,0,FlexEasy/multiplayer-2d-soccer-game-analog,438676521,Verilog,multiplayer-2d-soccer-game-analog,1568,1,2021-12-15 16:30:27+00:00,[],None
128,https://github.com/kanndil/DD2_DPower_reduction.git,2021-12-01 19:58:13+00:00,A utility to reduce the dynamic power consumption by performing automatic clock gating for registers.,0,kanndil/DD2_DPower_reduction,433966643,Verilog,DD2_DPower_reduction,5538,1,2023-12-11 21:09:36+00:00,[],None
129,https://github.com/LarryKwon/Computer-Organization-and-Design.git,2021-12-06 11:43:10+00:00,,0,LarryKwon/Computer-Organization-and-Design,435474703,Verilog,Computer-Organization-and-Design,13947,1,2022-06-26 17:57:50+00:00,[],None
130,https://github.com/xyx0610/FPGA_OLED.git,2021-12-04 09:40:58+00:00,使用FPGA驱动OLED,0,xyx0610/FPGA_OLED,434860913,Verilog,FPGA_OLED,39485,1,2023-07-26 10:13:48+00:00,[],None
131,https://github.com/Zyy438/Jahangir_demo.git,2021-12-01 15:32:51+00:00,"a processor utilizing MIPS32 instruction set, can be mounted on FPGA chips as a soft core processor",0,Zyy438/Jahangir_demo,433883222,Verilog,Jahangir_demo,5063,1,2021-12-12 13:31:23+00:00,[],None
132,https://github.com/mattvenn/function_generator.git,2021-12-10 13:47:26+00:00,,1,mattvenn/function_generator,436994195,Verilog,function_generator,14,1,2022-03-17 00:18:01+00:00,[],None
133,https://github.com/newaetech/phywhisperer-common.git,2021-12-14 15:53:22+00:00,Files common to phywhisperer projects.,1,newaetech/phywhisperer-common,438312466,Verilog,phywhisperer-common,294832,1,2023-05-16 00:09:04+00:00,[],None
134,https://github.com/manwu1994/8-bits-LFSR.git,2021-12-26 19:53:42+00:00,,0,manwu1994/8-bits-LFSR,441972351,Verilog,8-bits-LFSR,3,1,2022-03-01 06:49:55+00:00,[],https://api.github.com/licenses/mit
135,https://github.com/whipbaek/Sha1-cpp-Verilog.git,2021-12-24 14:13:17+00:00,"knu 2021 digital design & lab Project, Sha-1 Algorithm (without padding, only input 512 bits)",0,whipbaek/Sha1-cpp-Verilog,441482648,Verilog,Sha1-cpp-Verilog,696,1,2022-06-08 14:03:52+00:00,[],None
136,https://github.com/TannerHollis/WS2812-Controller.git,2021-12-06 16:56:39+00:00,FPGA-based WS2812 Controller,0,TannerHollis/WS2812-Controller,435577039,Verilog,WS2812-Controller,5029,1,2023-11-24 20:09:03+00:00,[],None
137,https://github.com/baraba6u/Convolution_Layer_for_CNN_Accelerator.git,2021-12-27 14:56:02+00:00,Convolution layer for CNN accelerator written in Verilog HDL,0,baraba6u/Convolution_Layer_for_CNN_Accelerator,442189265,Verilog,Convolution_Layer_for_CNN_Accelerator,3079,1,2024-03-11 09:48:15+00:00,[],https://api.github.com/licenses/gpl-3.0
138,https://github.com/unal-edigital1-lab/lab04-2021-2-grupo01-2021-2.git,2021-12-01 14:36:46+00:00,lab04-2021-2-grupo01-2021-2 created by GitHub Classroom,2,unal-edigital1-lab/lab04-2021-2-grupo01-2021-2,433862611,Verilog,lab04-2021-2-grupo01-2021-2,7678,1,2022-06-22 12:50:02+00:00,[],None
139,https://github.com/ashwingopinath/MIPS-Processor.git,2021-12-01 13:20:50+00:00,32 Bits 2-stage pipeline MIPS processor,0,ashwingopinath/MIPS-Processor,433835428,Verilog,MIPS-Processor,126,1,2021-12-03 06:50:22+00:00,[],None
140,https://github.com/Nettimi-Satya-Sai-Srinivas/ethernet-packet-generator-hardware-prototype.git,2021-12-29 04:26:07+00:00,A basic ethernet packet generator hardware prototype description in Verilog-HDL,0,Nettimi-Satya-Sai-Srinivas/ethernet-packet-generator-hardware-prototype,442659000,Verilog,ethernet-packet-generator-hardware-prototype,83,1,2023-07-12 17:31:34+00:00,[],https://api.github.com/licenses/gpl-3.0
141,https://github.com/SultanShadow/MPW4_ICD_FAST.git,2021-12-31 12:40:16+00:00,Repository for MPW4 Submission,1,SultanShadow/MPW4_ICD_FAST,443342868,Verilog,MPW4_ICD_FAST,60902,1,2022-04-13 23:50:12+00:00,[],https://api.github.com/licenses/apache-2.0
142,https://github.com/LuigiGalasso/RISCV-Lite.git,2021-12-13 10:48:33+00:00,RISCV-Lite,0,LuigiGalasso/RISCV-Lite,437835038,Verilog,RISCV-Lite,8765,1,2021-12-14 15:06:14+00:00,[],https://api.github.com/licenses/unlicense
143,https://github.com/yuex1994/ILA_AES.git,2021-12-13 16:46:19+00:00,,0,yuex1994/ILA_AES,437950845,Verilog,ILA_AES,34,1,2022-08-05 15:18:12+00:00,[],None
144,https://github.com/christoph-weiser/mpw4.git,2021-12-30 22:13:15+00:00,Efabless MPW4 submission repository,0,christoph-weiser/mpw4,443195493,Verilog,mpw4,6000,1,2023-07-08 17:23:36+00:00,[],https://api.github.com/licenses/apache-2.0
145,https://github.com/minke041/wwx_cpu.git,2021-12-25 12:31:36+00:00,按照汪文祥书写的cpu,0,minke041/wwx_cpu,441675251,Verilog,wwx_cpu,82027,1,2023-12-20 11:33:54+00:00,[],None
146,https://github.com/drewhb/pipelined_cpu.git,2021-12-02 15:54:48+00:00,A piplelined cpu with included support for hazard detection and avoidance,0,drewhb/pipelined_cpu,434283776,Verilog,pipelined_cpu,12,1,2021-12-02 16:02:16+00:00,[],None
147,https://github.com/tarunaygr/Vending-Machine-Facial-Recognition.git,2021-12-09 18:18:58+00:00,A vending machine which dispenses drink after authenticating with facial recognition,0,tarunaygr/Vending-Machine-Facial-Recognition,436718295,Verilog,Vending-Machine-Facial-Recognition,33,1,2023-03-27 05:28:23+00:00,[],None
148,https://github.com/hhping/PCIE_ref.git,2021-12-07 11:47:07+00:00,,0,hhping/PCIE_ref,435859062,Verilog,PCIE_ref,112728,1,2022-04-16 22:07:54+00:00,[],
149,https://github.com/ziad-atef/CMP-core-i1.git,2021-12-17 19:41:54+00:00,Computer archeticture pipelined processor,2,ziad-atef/CMP-core-i1,439442367,Verilog,CMP-core-i1,3129,1,2022-02-21 12:19:38+00:00,[],None
150,https://github.com/drewhb/pipelined-datapath.git,2021-12-02 15:35:38+00:00,"Verilog 4-stage, 32 bit pipelined datapath",0,drewhb/pipelined-datapath,434277006,Verilog,pipelined-datapath,8,1,2021-12-02 15:43:17+00:00,[],None
151,https://github.com/bby0616/ofdm.git,2021-12-18 09:09:03+00:00,,0,bby0616/ofdm,439571955,Verilog,ofdm,27880,1,2022-01-14 15:31:11+00:00,[],https://api.github.com/licenses/apache-2.0
152,https://github.com/iandailis/NES-FPGA.git,2021-12-19 07:55:38+00:00,NES (Nintendo Entertainment System) emulator in SystemVerilog for a Terasic DE-10 Lite.,0,iandailis/NES-FPGA,439806579,Verilog,NES-FPGA,6326,1,2023-04-19 15:47:12+00:00,[],None
153,https://github.com/BaturayCaglasin/verilog-ceng.git,2021-12-18 12:30:48+00:00,,0,BaturayCaglasin/verilog-ceng,439609803,Verilog,verilog-ceng,24,1,2022-02-20 11:57:22+00:00,[],None
154,https://github.com/KimiaMontazeri/Smart-Parking-System.git,2021-12-28 20:43:50+00:00,My logic circuits course project at AUT,0,KimiaMontazeri/Smart-Parking-System,442579243,Verilog,Smart-Parking-System,4800,1,2022-08-08 09:17:58+00:00,"['logic-circuits', 'verilog']",None
155,https://github.com/riser44/ECE552_intro_to_computer_architecture.git,2021-12-25 03:54:07+00:00,ECE 552 course was taken by Swamit Tannu in the Fall 2021 at UW-Madison,0,riser44/ECE552_intro_to_computer_architecture,441599448,Verilog,ECE552_intro_to_computer_architecture,47363,1,2022-03-24 23:41:27+00:00,[],None
156,https://github.com/rohinthram/opamp_tapeout_mpw4.git,2021-12-25 05:23:06+00:00,Efabless Open MPW4 Shuttle OPAMP Submission,0,rohinthram/opamp_tapeout_mpw4,441610098,Verilog,opamp_tapeout_mpw4,950,1,2022-08-25 07:17:33+00:00,[],https://api.github.com/licenses/apache-2.0
157,https://github.com/MasterQ32/ecp5-quickstart.git,2021-12-31 11:33:02+00:00,"A blinky template for a full ECP5 verilog workflow including simulation, synthesis and programming",0,MasterQ32/ecp5-quickstart,443330894,Verilog,ecp5-quickstart,10,1,2021-12-31 12:27:36+00:00,[],None
158,https://github.com/keioNishi/lec-compsys.git,2021-12-14 02:40:41+00:00,,3,keioNishi/lec-compsys,438093790,Verilog,lec-compsys,53555,1,2023-11-23 05:55:33+00:00,[],None
159,https://github.com/mahsaama/PipelineCORDICAlgorithmInVectoringMode.git,2021-12-10 17:54:27+00:00,,0,mahsaama/PipelineCORDICAlgorithmInVectoringMode,437068220,Verilog,PipelineCORDICAlgorithmInVectoringMode,308,1,2024-03-28 08:42:54+00:00,[],None
160,https://github.com/have-no-name-0/hitsz-2021-diglogic.git,2021-12-22 08:46:25+00:00,2021秋的数逻实验，在当助教的期间自己重新写了一下,0,have-no-name-0/hitsz-2021-diglogic,440791792,Verilog,hitsz-2021-diglogic,8,1,2023-02-08 09:09:03+00:00,[],None
161,https://github.com/HALIP192/labs-1.git,2021-12-21 10:11:18+00:00,,0,HALIP192/labs-1,440472718,,labs-1,48,1,2021-12-21 10:11:39+00:00,[],None
162,https://github.com/cpantel/CESE-MAySC-2021.git,2021-12-13 16:26:22+00:00,Trabajo práctico de la materia Microarquitecturas y Softcores CESE 2021,0,cpantel/CESE-MAySC-2021,437944514,Verilog,CESE-MAySC-2021,39,1,2022-05-25 06:27:50+00:00,[],None
163,https://github.com/kelu124/short_papers.git,2021-12-19 20:55:16+00:00,Short papers for Zenodo,0,kelu124/short_papers,439966019,Verilog,short_papers,58436,1,2022-03-17 20:47:53+00:00,"['zenodo', 'ultrasound', 'hardware', 'open', 'open-source', 'open-source-hardware']",None
164,https://github.com/eddiedingle97/FIR-filter.git,2021-12-21 19:26:10+00:00,A synthesizable FIR filter made in verilog,0,eddiedingle97/FIR-filter,440628465,Verilog,FIR-filter,938,1,2022-04-10 20:29:03+00:00,[],None
165,https://github.com/cyp0633/ModelComputer.git,2021-12-31 02:42:44+00:00,Model computer of digital circuit course,0,cyp0633/ModelComputer,443235538,Verilog,ModelComputer,390,1,2023-09-24 10:46:44+00:00,[],None
166,https://github.com/muskbuster/verilog-beginner.git,2021-12-08 04:25:49+00:00,these are some of the basic verilog projects to start with,0,muskbuster/verilog-beginner,436115306,Verilog,verilog-beginner,18090,1,2021-12-18 08:04:55+00:00,[],None
167,https://github.com/SuryaXOX/Computer-Architecture-Projects.git,2021-12-03 11:57:57+00:00,,0,SuryaXOX/Computer-Architecture-Projects,434579880,Verilog,Computer-Architecture-Projects,1988,1,2023-07-29 18:38:00+00:00,[],None
168,https://github.com/arunjeevaraj/onfi_controller.git,2021-12-03 07:34:12+00:00,ONFI COMPLIANT controller repo. ,0,arunjeevaraj/onfi_controller,434506068,Verilog,onfi_controller,117,1,2023-06-18 06:29:23+00:00,[],None
169,https://github.com/mrapi00/PUnC-LC3ISA_Computer.git,2021-11-27 17:22:51+00:00,"COS306 Final Project: Princeton University Computer (PuNC) is a microprocessor that implements the LC3 instruction set, which is 16-bit processor with a simple but versatile instruction set. This processor is Turing complete and is a full-fledged stored program computer.",0,mrapi00/PUnC-LC3ISA_Computer,432523265,Verilog,PUnC-LC3ISA_Computer,97,1,2023-11-29 15:36:06+00:00,[],None
170,https://github.com/Deys2000/Conways-Game-of-Life-Simulation-on-de10Lite-FPGA.git,2021-12-06 17:39:19+00:00,,1,Deys2000/Conways-Game-of-Life-Simulation-on-de10Lite-FPGA,435590140,Verilog,Conways-Game-of-Life-Simulation-on-de10Lite-FPGA,72561,1,2022-04-12 01:15:30+00:00,[],None
171,https://github.com/kayak4665664/NCUT_MiniSys.git,2021-12-07 13:10:51+00:00,A simple MIPS five-stage pipeline CPU implements 31 MIPS instructions.一个简单的MIPS五级流水CPU，实现了31条指令。,0,kayak4665664/NCUT_MiniSys,435885222,Verilog,NCUT_MiniSys,1756,1,2023-06-05 11:39:44+00:00,"['mips', 'cpu', 'verilog']",https://api.github.com/licenses/gpl-3.0
172,https://github.com/Baki-0/4bitCPU.git,2021-12-17 05:40:09+00:00,大学の実験で作った4bitCPUをFPGAで実装,0,Baki-0/4bitCPU,439222804,Verilog,4bitCPU,18,1,2022-10-11 10:18:24+00:00,[],None
173,https://github.com/HieuNT91/FPGA_DynaQ.git,2021-12-14 06:42:54+00:00,a FPGA design of Dyna-Q Algorithm. LSI design Contest 2021,1,HieuNT91/FPGA_DynaQ,438145944,Verilog,FPGA_DynaQ,61249,1,2021-12-14 12:33:52+00:00,[],None
174,https://github.com/danielpoochai/RISCV-Processor.git,2021-12-16 05:22:58+00:00,5-pipeline RISCV with Caches,0,danielpoochai/RISCV-Processor,438869607,Verilog,RISCV-Processor,2261,1,2022-11-29 12:49:36+00:00,[],None
175,https://github.com/brsf11/ACArithmeticUnits.git,2021-12-11 12:18:32+00:00,Some approximate computing arithmetic units,2,brsf11/ACArithmeticUnits,437273939,Verilog,ACArithmeticUnits,6,1,2023-02-17 10:42:17+00:00,[],None
176,https://github.com/He-Sui/CS207-2021Fall-project.git,2021-12-16 08:01:35+00:00,,0,He-Sui/CS207-2021Fall-project,438907346,Verilog,CS207-2021Fall-project,39,1,2022-01-03 08:30:09+00:00,[],None
177,https://github.com/mattvenn/wrapped_ppm_coder.git,2021-12-16 11:45:08+00:00,,0,mattvenn/wrapped_ppm_coder,438969452,Verilog,wrapped_ppm_coder,2028,1,2022-03-17 00:17:45+00:00,[],https://api.github.com/licenses/apache-2.0
178,https://github.com/JunnanLi/picoSoC.git,2021-12-03 04:31:10+00:00,SoC of PicoRV32i,0,JunnanLi/picoSoC,434466197,Verilog,picoSoC,571,1,2022-10-23 11:51:15+00:00,"['verilog', 'fpga', 'picorv32', 'uart']",None
179,https://github.com/alerner-6502/MobileNet_on_DE1SOC_with_VGA_support.git,2021-12-01 07:26:31+00:00,MobileNet on DE1SOC with VGA_support,0,alerner-6502/MobileNet_on_DE1SOC_with_VGA_support,433725554,Verilog,MobileNet_on_DE1SOC_with_VGA_support,902,1,2022-04-29 07:35:10+00:00,[],None
180,https://github.com/Akhil-Barad-04/Verilog_sequential_Circuit_Codes.git,2021-12-31 13:40:48+00:00,Sequential_Circuits,0,Akhil-Barad-04/Verilog_sequential_Circuit_Codes,443353898,Verilog,Verilog_sequential_Circuit_Codes,16,1,2021-12-31 14:26:07+00:00,[],None
181,https://github.com/lhrodovalho/sky130sbcs.git,2021-12-31 15:56:34+00:00,,0,lhrodovalho/sky130sbcs,443379571,Verilog,sky130sbcs,7446,1,2024-04-10 20:15:53+00:00,[],https://api.github.com/licenses/apache-2.0
182,https://github.com/Ranking666/IC_Design.git,2021-12-23 07:46:55+00:00,"A repository that implements CLA, ALU, FIFO, clock_alarm,etc design using Verilog",0,Ranking666/IC_Design,441103242,Verilog,IC_Design,17,1,2022-01-07 08:06:50+00:00,[],None
183,https://github.com/rebsfalcao15/Very-Large-Scale-Integration.git,2021-12-12 04:22:40+00:00,Repository with all my Verilog and VHDL Programs,0,rebsfalcao15/Very-Large-Scale-Integration,437451386,Verilog,Very-Large-Scale-Integration,66,1,2023-09-13 23:01:23+00:00,[],None
184,https://github.com/Steveletsgo/quartus-project.git,2021-12-14 16:05:33+00:00,This is the project of digital electronics from NBU,0,Steveletsgo/quartus-project,438316462,Verilog,quartus-project,15713,1,2023-05-29 06:08:36+00:00,[],https://api.github.com/licenses/gpl-3.0
185,https://github.com/xuruifan/hls_project.git,2021-12-14 03:39:51+00:00,,0,xuruifan/hls_project,438106929,Verilog,hls_project,60,1,2023-06-29 08:43:08+00:00,[],None
186,https://github.com/ShahdElmahallawy/Digital-Clock.git,2021-12-09 23:21:13+00:00,A Simple Digital Clock implemented using Verilog. ,0,ShahdElmahallawy/Digital-Clock,436789389,Verilog,Digital-Clock,3,1,2021-12-11 19:09:55+00:00,[],None
187,https://github.com/yuxiao-ww/FPGA-MIPS.git,2021-12-04 10:10:56+00:00,,0,yuxiao-ww/FPGA-MIPS,434867083,Verilog,FPGA-MIPS,299,1,2021-12-25 02:21:25+00:00,[],None
188,https://github.com/lipervol/verilog_learning.git,2021-12-08 09:05:58+00:00,Verilog Learning,0,lipervol/verilog_learning,436182510,Verilog,verilog_learning,5554,1,2021-12-10 01:25:15+00:00,[],None
189,https://github.com/hhj1107/junga_soc_mpw4.git,2021-12-25 08:02:11+00:00,,1,hhj1107/junga_soc_mpw4,441632546,Verilog,junga_soc_mpw4,1616646,1,2022-02-10 13:19:52+00:00,[],https://api.github.com/licenses/apache-2.0
190,https://github.com/aryan57/coa-lab.git,2021-11-30 15:23:11+00:00,CS39001 - COMPUTER ORGANIZATION LABORATORY - IIT Kgp Autumn 2021,1,aryan57/coa-lab,433481571,Verilog,coa-lab,4173,1,2023-03-04 10:09:57+00:00,[],None
191,https://github.com/GVictorsd/simpleComputerWeb.git,2021-12-02 17:59:09+00:00,Web app for the simple-computer.,0,GVictorsd/simpleComputerWeb,434322998,Verilog,simpleComputerWeb,122,1,2022-07-25 11:24:46+00:00,[],None
192,https://github.com/dautal/Whack-a-Mole-on-FPGA.git,2021-12-06 21:11:24+00:00,,0,dautal/Whack-a-Mole-on-FPGA,435648767,Verilog,Whack-a-Mole-on-FPGA,4978,1,2023-01-22 16:10:31+00:00,[],None
193,https://github.com/aniketb005/riscv-processor.git,2021-12-30 21:48:51+00:00,,0,aniketb005/riscv-processor,443191666,Verilog,riscv-processor,191,1,2022-05-31 02:22:58+00:00,[],None
194,https://github.com/bit0fun/spraid_mpw4.git,2021-12-28 22:45:49+00:00,,1,bit0fun/spraid_mpw4,442601891,Verilog,spraid_mpw4,15929,1,2022-03-06 18:31:29+00:00,[],https://api.github.com/licenses/apache-2.0
195,https://github.com/JeffreyWong20/Avalon-Memory-Mapped_MIPS_CPU.git,2021-12-18 11:25:52+00:00,"Develop a synthesisable MIPS-compatible CPU that could run on any FPGA or ASIC. This CPU interfaces with the world using a memory-mapped bus, which gives it access to memory and other peripherals.",0,JeffreyWong20/Avalon-Memory-Mapped_MIPS_CPU,439597284,Verilog,Avalon-Memory-Mapped_MIPS_CPU,2072,1,2022-11-01 23:28:30+00:00,[],https://api.github.com/licenses/mit
196,https://github.com/TheRainstorm/FPGA-lightcube8.git,2021-12-20 12:55:47+00:00,一个基于FPGA的8x8x8光立方,0,TheRainstorm/FPGA-lightcube8,440170309,Verilog,FPGA-lightcube8,2355,1,2022-09-17 17:18:39+00:00,[],https://api.github.com/licenses/mit
197,https://github.com/JhoanLeon/RoadFighter.git,2021-12-19 16:41:48+00:00,Hardware implementation in FPGA of an arcade game (RoadFighter) in 8x8 matrix.,0,JhoanLeon/RoadFighter,439915700,Verilog,RoadFighter,4510,1,2022-03-13 22:07:17+00:00,[],None
198,https://github.com/rtl-modeler/HDL_CODES.git,2021-12-05 11:12:44+00:00,HDL Codes by my ideas,0,rtl-modeler/HDL_CODES,435144173,Verilog,HDL_CODES,0,1,2022-06-16 06:14:29+00:00,[],None
199,https://github.com/Nxiso/USTB_digital_logic_homework.git,2021-12-21 16:35:35+00:00,北京科技大学，数字逻辑作业，计通学院/自动化学院可用,0,Nxiso/USTB_digital_logic_homework,440583793,,USTB_digital_logic_homework,21,1,2023-12-10 07:58:18+00:00,[],None
200,https://github.com/sgauthamr2001/MNIST_picoRV32.git,2021-12-03 20:28:17+00:00,Hardware Acceleration of a 2-layer integer quantised Neural Network trained on MNIST dataset. ,2,sgauthamr2001/MNIST_picoRV32,434725193,Verilog,MNIST_picoRV32,3124,1,2023-10-29 22:30:27+00:00,[],None
201,https://github.com/drewhb/MIPS_single_cycle_CPU.git,2021-12-02 15:43:58+00:00,,0,drewhb/MIPS_single_cycle_CPU,434280059,Verilog,MIPS_single_cycle_CPU,7,1,2021-12-02 15:52:12+00:00,[],None
202,https://github.com/siyuanluo/Computer-Organization-HW.git,2021-12-27 17:28:17+00:00,Combine Nand2tetris with this XJTU Experiment Course,0,siyuanluo/Computer-Organization-HW,442227467,Verilog,Computer-Organization-HW,6,1,2021-12-28 03:10:10+00:00,[],https://api.github.com/licenses/mit
203,https://github.com/NafisulKhondaker1025/EightCoreProcessor.git,2021-12-07 04:31:38+00:00,"This is an 8-Core processor created for ECE 369 course final project. Each core contains a six stage pipeline. It is based on 32-bit MIPS architecture and has been designed, implemented and validated on the Xilinx Artix-7 FPGA .",0,NafisulKhondaker1025/EightCoreProcessor,435742859,Verilog,EightCoreProcessor,112,1,2024-01-15 02:05:55+00:00,[],None
204,https://github.com/Darren221/NTU-Computer-Architecture.git,2021-12-15 21:37:02+00:00,A project implementing single-cycle RISC-V architecture using verilog,0,Darren221/NTU-Computer-Architecture,438779947,Verilog,NTU-Computer-Architecture,2522,1,2024-02-23 07:54:47+00:00,[],None
205,https://github.com/lightyLi/EDA-301FPGA-.git,2021-11-29 16:45:41+00:00,EDA基础编程练习，用黑金301板子来实现正弦波、方波、线性调频信号、2FSK、2ASK、2PSK的调幅和调相,0,lightyLi/EDA-301FPGA-,433122322,Verilog,EDA-301FPGA-,547,1,2022-01-03 16:38:18+00:00,[],https://api.github.com/licenses/mpl-2.0
206,https://github.com/JunnanLi/tetris.git,2021-12-03 15:28:52+00:00,俄罗斯方块,0,JunnanLi/tetris,434644200,Verilog,tetris,26,1,2023-10-05 04:19:42+00:00,[],https://api.github.com/licenses/mit
207,https://github.com/caneerguul/fbu-cpu-rtl-tasar-m-.git,2021-12-29 17:30:11+00:00,,0,caneerguul/fbu-cpu-rtl-tasar-m-,442844122,Verilog,fbu-cpu-rtl-tasar-m-,3,1,2023-04-14 01:37:42+00:00,[],None
208,https://github.com/rishabh-panda/VLSI-Laboratory.git,2021-12-23 15:38:46+00:00,Design and Testbench codes.,0,rishabh-panda/VLSI-Laboratory,441224290,Verilog,VLSI-Laboratory,406,1,2023-02-14 20:15:22+00:00,"['electronics', 'vlsi', 'circuit-design', 'simulation', 'hardware-description-language', 'logic-gates', 'programming']",None
209,https://github.com/hodiepanh/Viterbi_Decoder.git,2021-12-03 11:51:29+00:00,,1,hodiepanh/Viterbi_Decoder,434578077,Verilog,Viterbi_Decoder,75,1,2024-01-14 09:59:26+00:00,[],None
210,https://github.com/L-Kh-Hovhannisyan/FPGA.git,2021-12-31 12:26:19+00:00,"This repo contains educational projects, connected with FPGA. All program are written for Altera Quartus IV.",0,L-Kh-Hovhannisyan/FPGA,443340424,Verilog,FPGA,13014,1,2023-02-27 02:24:01+00:00,"['fpga', 'verilog', 'vhdl-code', 'excercises', 'study']",None
211,https://github.com/domikal792/amsuc_proj.git,2021-12-17 10:33:40+00:00,,0,domikal792/amsuc_proj,439295954,Verilog,amsuc_proj,20767,1,2022-09-04 18:53:18+00:00,[],None
212,https://github.com/kycnb666/softwarerelease.git,2021-12-04 11:11:17+00:00,自制软件发布页,0,kycnb666/softwarerelease,434879177,Verilog,softwarerelease,4811,1,2022-04-08 22:50:58+00:00,[],None
213,https://github.com/DylanR594/Multifunctional-Digital-Clock.git,2021-12-10 19:37:00+00:00,"The purpose of this project was to implement a 24-hour digital clock to the Nexys A7-100 board with various functions using the seven-segment display, LEDs, switches, and buttons on the board. The clock will use hours, minutes, and seconds in order to maintain an accurate count of the time. The program will allow for alternate functions between several functions such as an alarm, military time, and a stopwatch. The module uses the constraint file for the Nexys A7-100 board to display the time and other functions of the program. ",0,DylanR594/Multifunctional-Digital-Clock,437094087,Verilog,Multifunctional-Digital-Clock,17,1,2021-12-10 19:40:20+00:00,[],None
214,https://github.com/apurbaanik/Finite-State-Machine.git,2021-12-30 14:16:02+00:00,"About building a simple Finite State Machine that will detect 4b patterns as its input from a stream of 4b packets. Here at every positive edge of the clock CLK, it samples a 4b input vector from the input port x [3:0] into the machine. Before we talk about the detector, we need to understand how a simple finite state machine works. A Finite State Machine are most widely used sequential logic circuit that contains a predefined number of states. The machine can exist in one and only one state at a time, and the circuit makes transition between states based on a triggering event, for example the positive edge of the clock with the values of any inputs of the machine. Using the states and predefined sequence of transitions, the circuit is able to make decisions on the next state to transition based on the history of past states. So in this lab we try to create a simple Finite State Machine that can detect a 4b pattern from its input. First we will try to write Verilog module that has an input vector ‘x [3:0]’ and an input ‘CLK’ and an output ‘z’ that sets to ‘1’ if it detects the pattern ‘1011’ in each 4b packet it receives at the input ‘x’.",0,apurbaanik/Finite-State-Machine,443094969,Verilog,Finite-State-Machine,567,1,2021-12-30 15:24:08+00:00,[],None
215,https://github.com/Jazzel/HU-DLD-Project.git,2021-12-17 14:13:19+00:00,,0,Jazzel/HU-DLD-Project,439355141,Verilog,HU-DLD-Project,591,1,2021-12-21 15:36:35+00:00,[],None
216,https://github.com/YAMY1234/carset-fpga.git,2021-12-07 03:14:19+00:00,,0,YAMY1234/carset-fpga,435727192,Verilog,carset-fpga,19345,1,2023-10-15 15:33:59+00:00,[],None
217,https://github.com/AidanJohnston/SingleCycleProcessor.git,2021-12-07 21:58:30+00:00,Final project for EELE-0651.  Simple single Cycle processor in verlog.,0,AidanJohnston/SingleCycleProcessor,436037353,Verilog,SingleCycleProcessor,1309,1,2021-12-09 19:32:56+00:00,[],https://api.github.com/licenses/gpl-3.0
218,https://github.com/nikohill/NEU-SampleCPU.git,2021-11-29 12:04:19+00:00,Experiment of CA class,0,nikohill/NEU-SampleCPU,433026411,Verilog,NEU-SampleCPU,49,1,2023-12-13 06:16:25+00:00,[],None
219,https://github.com/markovav-official/Game2048_FPGA.git,2021-12-01 18:36:14+00:00,,0,markovav-official/Game2048_FPGA,433943153,Verilog,Game2048_FPGA,49249,1,2023-06-02 16:46:25+00:00,[],None
220,https://github.com/MingXii/Ready-Valid-Handshakes.git,2021-12-12 05:18:33+00:00,,1,MingXii/Ready-Valid-Handshakes,437459405,Verilog,Ready-Valid-Handshakes,123,1,2022-09-28 03:32:53+00:00,[],None
221,https://github.com/ShahdElmahallawy/Calculator.git,2021-12-25 20:52:21+00:00,Implemented a simple Calculator using Verilog,0,ShahdElmahallawy/Calculator,441756635,Verilog,Calculator,439,1,2021-12-25 21:53:36+00:00,[],None
222,https://github.com/nomanker/CPUDesign.git,2021-12-04 06:01:47+00:00,,0,nomanker/CPUDesign,434821595,Verilog,CPUDesign,51,1,2021-12-17 01:50:50+00:00,[],None
223,https://github.com/Memorywzd/CPU.git,2021-12-08 05:58:47+00:00,Course Design of Principles of Computer Organization,0,Memorywzd/CPU,436133895,Verilog,CPU,52751,1,2023-01-28 04:37:06+00:00,[],None
224,https://github.com/ChamRun/LogicCircuitsFP.git,2021-12-29 13:26:33+00:00,,0,ChamRun/LogicCircuitsFP,442780694,Verilog,LogicCircuitsFP,2066,1,2023-03-04 01:36:20+00:00,[],None
225,https://github.com/AbdulBari8455/Voting_Machine_to_count_votes.git,2021-12-27 15:22:03+00:00,,0,AbdulBari8455/Voting_Machine_to_count_votes,442195419,Verilog,Voting_Machine_to_count_votes,5,1,2022-01-02 14:17:40+00:00,[],None
226,https://github.com/apurbaanik/4b-adder-using-a-simple-half-adder.git,2021-12-30 15:20:46+00:00,"About developing Verilog modules for a 4b adder using a simple half-adder cell as building block. First we will write a Verilog module for a half adder and verify its functionality with test bench simulations. Then using that half-adder module, we will write the full-adder cell and verify its functionality with test bench simulations. Finally using that full adder module, we write the Verilog module for a 4b adder and verify its functionality. Before we write the modules, we need to understand how half adder and full adder works. When creating an adder, we have to design the incremental sub-systems in way that it can be re-used like using half adder to create full adder. This technique reduces the design effort, cost and minimizes the difficulty of troubleshooting. Half Adder computes the sum, S and carry out, C from its two input A and B. It is different from a Full adder because it doesn’t take the carry-in bit into account. So for half adder the possible inputs are - 0+0 = 0 (0 is sum), 0+1 = 1, 1+0 = 1, and 1+1 = 10 (1 is Carry). As we can see, it only takes 2 inputs A, B so 2^2 = 4 possible combinations.",0,apurbaanik/4b-adder-using-a-simple-half-adder,443111401,Verilog,4b-adder-using-a-simple-half-adder,447,1,2021-12-30 15:24:00+00:00,[],None
227,https://github.com/apurbaanik/Demultiplexer.git,2021-12-30 14:12:09+00:00,About building a simple combinational logic component: A 1 -> 4 Demultiplexer using the ‘always’ construct on Verilog and simulating a testbench to verify the operation. Demultiplexer is a circuit that has one input routed to one of its multiple output and the output that is active is determined by a select input. A demultiplexer has n select lines that chooses to route the input to one of its 2n outputs. So if it has 2 select lines then the output will be 2^2 = 4.,0,apurbaanik/Demultiplexer,443094050,Verilog,Demultiplexer,397,1,2021-12-30 15:24:02+00:00,[],None
228,https://github.com/raghibsibtain98/VLSI-Project-Alarm-Clock-Design.git,2021-12-06 16:13:47+00:00,Here I have implemented Alarm Clock using Verilog and synthesized the RTL in Quartus Prime.,0,raghibsibtain98/VLSI-Project-Alarm-Clock-Design,435563540,Verilog,VLSI-Project-Alarm-Clock-Design,21,1,2022-01-29 05:59:05+00:00,[],None
229,https://github.com/FlexEasy/advanced-encryption-standard.git,2021-12-15 16:05:32+00:00,Implementation of AES system using FPGA and NIOS ,0,FlexEasy/advanced-encryption-standard,438690794,Verilog,advanced-encryption-standard,18588,1,2021-12-15 16:30:14+00:00,[],None
230,https://github.com/JD-14/RISC_SPM_Project.git,2021-12-17 02:34:14+00:00,This repo contains the RTL to GDSII files for a Reduce Instruction Set Computer Stored Program Machine (RISC SPM) project.),0,JD-14/RISC_SPM_Project,439188101,Verilog,RISC_SPM_Project,30238,1,2022-06-20 17:55:42+00:00,[],None
231,https://github.com/olivamadrigal/Booth_Multiplier.git,2021-12-04 21:26:54+00:00,Booth-2 Multiplier,0,olivamadrigal/Booth_Multiplier,435012493,Verilog,Booth_Multiplier,328,0,2021-12-04 21:27:30+00:00,[],https://api.github.com/licenses/mit
232,https://github.com/JordanUFlores/Sistema_Mem_Ulloa_Jordan.git,2021-12-01 03:22:48+00:00,Sistema de memoria,0,JordanUFlores/Sistema_Mem_Ulloa_Jordan,433668468,Verilog,Sistema_Mem_Ulloa_Jordan,852,0,2021-12-01 03:45:48+00:00,[],None
233,https://github.com/rommelsabang/468Project.git,2021-11-27 19:59:24+00:00,,0,rommelsabang/468Project,432554233,Verilog,468Project,103,0,2021-12-06 06:25:37+00:00,[],None
234,https://github.com/cosmolabs-ru/RZ-EasyFPGA-A2.2.git,2021-11-30 15:04:42+00:00,"A library of snippets for beginners, to interact with EasyFPGA's on-board devices",0,cosmolabs-ru/RZ-EasyFPGA-A2.2,433474915,Verilog,RZ-EasyFPGA-A2.2,3282,0,2021-11-30 15:52:40+00:00,[],None
235,https://github.com/tallenintegsys/mii2mii.git,2021-12-01 15:00:10+00:00,MII to MII without all that annoying Cat5 ,0,tallenintegsys/mii2mii,433871205,Verilog,mii2mii,7,0,2021-12-21 20:38:18+00:00,[],None
236,https://github.com/yuxiao-ww/MIPSP.git,2021-12-04 10:10:01+00:00,,0,yuxiao-ww/MIPSP,434866916,Verilog,MIPSP,10,0,2021-12-04 10:10:40+00:00,[],None
237,https://github.com/canacar7/VERILOG_COMPUTER_ARCH.git,2021-12-04 11:05:09+00:00,,0,canacar7/VERILOG_COMPUTER_ARCH,434877849,Verilog,VERILOG_COMPUTER_ARCH,4825,0,2022-01-09 10:32:54+00:00,[],None
238,https://github.com/serenitygoyh/APS_LAB_5.git,2021-12-04 12:16:27+00:00,Completed APS Lab 5 (LSU),0,serenitygoyh/APS_LAB_5,434892620,Verilog,APS_LAB_5,313,0,2021-12-06 11:08:48+00:00,[],None
239,https://github.com/tuancoiz4/I2C-core.git,2021-12-16 02:21:21+00:00,,0,tuancoiz4/I2C-core,438834008,Verilog,I2C-core,2,0,2021-12-16 02:22:50+00:00,[],None
240,https://github.com/dong-xt/study.git,2021-12-16 11:00:49+00:00,a few study materials...seriously,0,dong-xt/study,438957963,Verilog,study,8993,0,2023-01-04 05:36:18+00:00,[],None
241,https://github.com/idpp1237/verilog_homework.git,2021-12-16 17:30:38+00:00,,0,idpp1237/verilog_homework,439074232,Verilog,verilog_homework,2917,0,2021-12-21 15:01:13+00:00,[],None
242,https://github.com/Bynaryman/wrapped_asic_watch.git,2021-12-30 11:04:44+00:00,A 7 segments style watch targeting asic sky130 process node,1,Bynaryman/wrapped_asic_watch,443049795,Verilog,wrapped_asic_watch,1150,0,2021-12-30 17:27:05+00:00,[],https://api.github.com/licenses/apache-2.0
243,https://github.com/MahmoudAbdelmawgoed/FIFO.git,2021-12-24 00:58:28+00:00,,0,MahmoudAbdelmawgoed/FIFO,441330923,Verilog,FIFO,13,0,2021-12-26 23:53:27+00:00,[],None
244,https://github.com/neko-cc/hdlbits_solution.git,2021-12-25 01:18:11+00:00,,0,neko-cc/hdlbits_solution,441582189,Verilog,hdlbits_solution,3,0,2021-12-25 02:22:18+00:00,[],None
245,https://github.com/chuyihuo/RCEFK.git,2021-12-24 08:02:09+00:00,RTL CODE EXTRACT FROM KISS,0,chuyihuo/RCEFK,441405282,Verilog,RCEFK,1071,0,2021-12-24 08:57:34+00:00,[],None
246,https://github.com/luke-mckay/cr_sync.git,2021-12-31 23:18:51+00:00,A simple parameratized flip-flop synchronizer to eliminate basic meta-stability issues.,0,luke-mckay/cr_sync,443439506,Verilog,cr_sync,6,0,2022-11-23 19:15:02+00:00,[],None
247,https://github.com/BlazKor/RISC_V.git,2021-12-31 15:23:57+00:00,,0,BlazKor/RISC_V,443373586,Verilog,RISC_V,49,0,2021-12-31 15:25:40+00:00,[],None
248,https://github.com/ASuresh21/Floating-point-ALU.git,2021-11-29 16:14:29+00:00,,0,ASuresh21/Floating-point-ALU,433111929,Verilog,Floating-point-ALU,19,0,2021-11-29 16:55:41+00:00,[],https://api.github.com/licenses/gpl-3.0
249,https://github.com/Zaduk/Pixel-Drawing-via-VGA.git,2021-12-22 08:44:15+00:00,,0,Zaduk/Pixel-Drawing-via-VGA,440791216,Verilog,Pixel-Drawing-via-VGA,16,0,2022-01-20 03:36:08+00:00,[],None
250,https://github.com/wokwi/wrapped_silife.git,2021-12-20 18:04:58+00:00,"Game of Life in Silicon, wrapped for OpenMPW group submission",2,wokwi/wrapped_silife,440263190,Verilog,wrapped_silife,80001,0,2021-12-30 22:51:02+00:00,[],https://api.github.com/licenses/apache-2.0
251,https://github.com/JoGoh/FPGA_2CARS.git,2021-12-15 11:48:54+00:00,,0,JoGoh/FPGA_2CARS,438610167,Verilog,FPGA_2CARS,20,0,2021-12-15 14:31:30+00:00,[],None
252,https://github.com/justincavalli/Up-Down-Timer.git,2021-12-03 20:23:50+00:00,,0,justincavalli/Up-Down-Timer,434724163,Verilog,Up-Down-Timer,42,0,2023-05-21 05:03:15+00:00,[],None
253,https://github.com/qweasd676/Verliog.git,2021-12-09 07:49:17+00:00,,0,qweasd676/Verliog,436527299,Verilog,Verliog,7518,0,2021-12-09 07:58:02+00:00,[],None
254,https://github.com/yuzeng2333/ILA_Piccolo.git,2021-12-13 19:29:25+00:00,,0,yuzeng2333/ILA_Piccolo,437999423,Verilog,ILA_Piccolo,312,0,2021-12-15 00:43:39+00:00,[],https://api.github.com/licenses/mit
255,https://github.com/Tony-Tseng/IC_lab.git,2021-12-14 17:00:07+00:00,This is the homework for NTHU IC LAB.,0,Tony-Tseng/IC_lab,438333393,Verilog,IC_lab,220,0,2021-12-29 03:28:57+00:00,[],None
256,https://github.com/WageeNanta/MorseDecoder.git,2021-12-12 09:52:27+00:00,translation from Morse code to English Alphabets and numbers,0,WageeNanta/MorseDecoder,437506839,Verilog,MorseDecoder,1311,0,2021-12-13 17:35:39+00:00,[],None
257,https://github.com/nyuriumuri/Automatic-Clock-Gating.git,2021-12-12 10:03:52+00:00,,0,nyuriumuri/Automatic-Clock-Gating,437509181,Verilog,Automatic-Clock-Gating,3275,0,2021-12-13 11:15:56+00:00,[],None
258,https://github.com/RolandoAraujo/Sistema_Mem_Araujo_Rolando.git,2021-12-06 00:57:45+00:00,T4- Sistema de memoria,0,RolandoAraujo/Sistema_Mem_Araujo_Rolando,435318191,Verilog,Sistema_Mem_Araujo_Rolando,3,0,2021-12-06 01:01:53+00:00,[],None
259,https://github.com/jimchan932/MIPS_SingleCycleCPU_on_FPGA.git,2021-12-08 05:05:25+00:00,An implementation of MIPS CPU on FPGA and an experiment that runs bubble sort algorithm.,0,jimchan932/MIPS_SingleCycleCPU_on_FPGA,436123010,Verilog,MIPS_SingleCycleCPU_on_FPGA,23,0,2021-12-08 06:03:06+00:00,[],https://api.github.com/licenses/apache-2.0
260,https://github.com/Iareafishes/bath_heater.git,2021-12-06 14:36:26+00:00,,0,Iareafishes/bath_heater,435530778,Verilog,bath_heater,6,0,2023-09-27 02:38:30+00:00,[],None
261,https://github.com/rogerpease/AXISlaveStreamTutorial.git,2021-12-06 22:14:52+00:00,,0,rogerpease/AXISlaveStreamTutorial,435664161,Verilog,AXISlaveStreamTutorial,1211,0,2021-12-07 13:50:34+00:00,[],None
262,https://github.com/EzraCharles/Equipo_6.git,2021-12-11 01:17:42+00:00,MIPS implementation of pre-silicon bootcamp computer architecture class by ITESO and INTEL,1,EzraCharles/Equipo_6,437157208,Verilog,Equipo_6,85,0,2021-12-19 04:38:20+00:00,[],https://api.github.com/licenses/mit
263,https://github.com/DanielSimone/ECE206-Lab-0.git,2021-12-12 23:38:44+00:00,Install and Verify Capabilities of Tools,0,DanielSimone/ECE206-Lab-0,437681730,Verilog,ECE206-Lab-0,198,0,2021-12-12 23:43:15+00:00,[],None
264,https://github.com/123swk123/Tang4k_M3_EMPU_apb3_SPIController.git,2021-12-12 23:55:44+00:00,,0,123swk123/Tang4k_M3_EMPU_apb3_SPIController,437684209,Verilog,Tang4k_M3_EMPU_apb3_SPIController,103,0,2021-12-12 23:55:57+00:00,[],None
265,https://github.com/mc1017/MIPS-Harvard.git,2021-11-28 14:40:25+00:00,IAC Coursework,0,mc1017/MIPS-Harvard,432737858,Verilog,MIPS-Harvard,1170,0,2022-05-01 11:31:24+00:00,[],None
266,https://github.com/NithinBabuEE/EE2003.git,2021-11-28 19:17:34+00:00,EE2003 - Computer Organization,0,NithinBabuEE/EE2003,432803083,Verilog,EE2003,90,0,2021-11-28 19:24:24+00:00,[],None
267,https://github.com/mustafa7755/RISC-V-Processor.git,2021-11-30 12:33:43+00:00,,0,mustafa7755/RISC-V-Processor,433423960,Verilog,RISC-V-Processor,18,0,2022-01-03 07:19:20+00:00,[],None
268,https://github.com/ae2079/CAD_midterm.git,2021-11-29 20:42:56+00:00,,0,ae2079/CAD_midterm,433191050,Verilog,CAD_midterm,6270,0,2022-01-30 14:14:02+00:00,[],None
269,https://github.com/MtyldZ/CENG311-P3-Verilog.git,2021-12-25 18:08:28+00:00,,0,MtyldZ/CENG311-P3-Verilog,441733183,Verilog,CENG311-P3-Verilog,37,0,2022-01-15 19:10:42+00:00,[],None
270,https://github.com/fmm170/cpu_experiment.git,2021-12-12 14:49:26+00:00,,0,fmm170/cpu_experiment,437572989,Verilog,cpu_experiment,36,0,2021-12-20 04:31:24+00:00,[],None
271,https://github.com/Breiztiger/AMSTRAD.git,2021-12-12 08:32:56+00:00,,0,Breiztiger/AMSTRAD,437492275,Verilog,AMSTRAD,29887,0,2021-12-12 11:43:42+00:00,[],None
272,https://github.com/arka84/Verilog-I2S-for-INMP441.git,2021-12-13 06:18:04+00:00,,0,arka84/Verilog-I2S-for-INMP441,437758251,Verilog,Verilog-I2S-for-INMP441,33,0,2023-01-16 03:26:31+00:00,[],None
273,https://github.com/DanielSimone/ECE206-Lab-5.git,2021-12-12 23:46:50+00:00,Simon - RTL Design Project,0,DanielSimone/ECE206-Lab-5,437682933,Verilog,ECE206-Lab-5,1655,0,2021-12-12 23:47:08+00:00,[],None
274,https://github.com/DanielSimone/ECE206-Lab-3.git,2021-12-12 23:43:46+00:00,Sequential Logic,0,DanielSimone/ECE206-Lab-3,437682465,Verilog,ECE206-Lab-3,278,0,2022-10-21 19:23:24+00:00,[],None
275,https://github.com/LuigiGalasso/Digital-FIR-Filter.git,2021-12-13 10:01:23+00:00,Design and Implementation of a Digital Filter,0,LuigiGalasso/Digital-FIR-Filter,437821107,Verilog,Digital-FIR-Filter,13245,0,2021-12-13 10:34:55+00:00,[],https://api.github.com/licenses/unlicense
276,https://github.com/YousefYGhanem/Low-Power-Comparator-Logic-circuit.git,2021-12-20 15:52:47+00:00,In this Project we introduce new design and implementations of a comparator as shown in the attached file and compare your results to what is implemented in the paper. The target to accurately speed up computation. ,0,YousefYGhanem/Low-Power-Comparator-Logic-circuit,440225468,Verilog,Low-Power-Comparator-Logic-circuit,910,0,2021-12-20 15:56:38+00:00,[],None
277,https://github.com/void7920/Verilog_OnBoard.git,2021-12-22 12:36:29+00:00,,0,void7920/Verilog_OnBoard,440852720,Verilog,Verilog_OnBoard,78,0,2022-01-09 15:18:34+00:00,[],None
278,https://github.com/Hoaru/FPGA-VGA-Retro-Snake.git,2021-12-23 03:56:36+00:00,,0,Hoaru/FPGA-VGA-Retro-Snake,441055852,Verilog,FPGA-VGA-Retro-Snake,2436,0,2023-02-07 00:38:32+00:00,[],None
279,https://github.com/Che-Kwanga-11/Digital-Logic-Verilog.git,2021-12-24 23:09:08+00:00,Sections of a digital logic project to implement a Tiny Reduced Instruction Set Computer on a FPGA board,0,Che-Kwanga-11/Digital-Logic-Verilog,441569231,Verilog,Digital-Logic-Verilog,21291,0,2022-01-23 01:53:22+00:00,[],None
280,https://github.com/Iman-7/8-bit-signed-sequential-multiplier-divider-using-verilog.git,2021-12-28 21:00:53+00:00,,1,Iman-7/8-bit-signed-sequential-multiplier-divider-using-verilog,442582975,Verilog,8-bit-signed-sequential-multiplier-divider-using-verilog,1552,0,2021-12-28 21:36:24+00:00,[],None
281,https://github.com/Tun-wq/simple_CPU.git,2021-12-29 06:58:34+00:00,The final project of HNU digital circuits course,0,Tun-wq/simple_CPU,442687924,Verilog,simple_CPU,3645,0,2021-12-29 08:21:03+00:00,[],None
282,https://github.com/eruiz04/Sistema_Mem_Ruiz_Eugenio.git,2021-11-29 03:07:07+00:00,T4: Sistema de Memoria,0,eruiz04/Sistema_Mem_Ruiz_Eugenio,432888643,Verilog,Sistema_Mem_Ruiz_Eugenio,8,0,2021-11-30 21:11:30+00:00,[],None
283,https://github.com/floriafz23/CodingInVerilog.git,2021-12-01 01:18:03+00:00,,0,floriafz23/CodingInVerilog,433640910,Verilog,CodingInVerilog,24,0,2022-01-07 01:20:52+00:00,[],https://api.github.com/licenses/mit
284,https://github.com/GusSolorio/Sistema_Mem_Solorio_Gustavo.git,2021-12-01 05:40:43+00:00,,0,GusSolorio/Sistema_Mem_Solorio_Gustavo,433698103,Verilog,Sistema_Mem_Solorio_Gustavo,3,0,2021-12-01 05:47:06+00:00,[],None
285,https://github.com/sworup-bhattarai/trisc.git,2021-12-04 21:01:00+00:00,trisc  modeled and created for the DE10 lite ,0,sworup-bhattarai/trisc,435008139,Verilog,trisc,51155,0,2023-01-27 20:56:50+00:00,[],None
286,https://github.com/bhyou/digital_scan.git,2021-12-06 02:54:25+00:00,,0,bhyou/digital_scan,435341100,Verilog,digital_scan,5,0,2021-12-06 04:22:29+00:00,[],None
287,https://github.com/alxcode-x/Sistema_Mem_Lopez_Francisco.git,2021-12-01 00:37:49+00:00,,0,alxcode-x/Sistema_Mem_Lopez_Francisco,433632848,Verilog,Sistema_Mem_Lopez_Francisco,184,0,2021-12-03 06:33:30+00:00,[],None
288,https://github.com/mpsis-2021/miriscv_ci_templ.git,2021-12-02 07:09:09+00:00,Шаблонный репозиторий для проверки лабороторных работ по ядру RISC-V,2,mpsis-2021/miriscv_ci_templ,434117701,Verilog,miriscv_ci_templ,8,0,2022-07-04 12:33:43+00:00,[],None
289,https://github.com/ttrsato/TangPrimer_ADC.git,2021-12-04 11:47:20+00:00,,0,ttrsato/TangPrimer_ADC,434886680,Verilog,TangPrimer_ADC,36,0,2021-12-04 12:53:51+00:00,[],https://api.github.com/licenses/mit
290,https://github.com/horiondreher/integrated-systems-classes.git,2021-12-05 17:38:55+00:00,Codes in verilog for Integraded System classes made in UTFPR - Campo Mourão,0,horiondreher/integrated-systems-classes,435235622,Verilog,integrated-systems-classes,2314,0,2021-12-05 17:42:01+00:00,[],None
291,https://github.com/AlexeyAbramov93/test_module.git,2021-12-14 09:48:03+00:00,Проект включает в себя рабочий тестбенч,0,AlexeyAbramov93/test_module,438198091,Verilog,test_module,4530,0,2023-11-09 15:05:36+00:00,[],None
292,https://github.com/bezhkodi/FGPA_hw.git,2021-12-17 15:04:31+00:00,,0,bezhkodi/FGPA_hw,439370492,Verilog,FGPA_hw,187,0,2021-12-21 20:53:46+00:00,[],None
293,https://github.com/Stressvogel/hardware.git,2021-12-17 09:37:40+00:00,Quartus Prime project files,0,Stressvogel/hardware,439280743,Verilog,hardware,251403,0,2022-01-11 12:28:44+00:00,[],None
294,https://github.com/sai-shi/Hardware-Acceleration-of-Neural-Networks.git,2021-12-17 05:37:16+00:00,,0,sai-shi/Hardware-Acceleration-of-Neural-Networks,439222243,Verilog,Hardware-Acceleration-of-Neural-Networks,6586,0,2021-12-17 05:46:25+00:00,[],None
295,https://github.com/satya123bora/riscv-iitg.git,2021-12-09 08:38:30+00:00,4-stage pipeline microarchitecture for RISC-V ISA,3,satya123bora/riscv-iitg,436540885,Verilog,riscv-iitg,570,0,2021-12-13 10:44:22+00:00,[],None
296,https://github.com/Jiovana/booth_multiplier.git,2021-12-09 19:38:12+00:00,Implementation in verilog of the Booth algorithm for 6-bit inputs,0,Jiovana/booth_multiplier,436739537,Verilog,booth_multiplier,93,0,2021-12-13 16:27:07+00:00,[],None
297,https://github.com/AlmazShai/spi_module_FPGA.git,2021-12-12 14:02:49+00:00,,0,AlmazShai/spi_module_FPGA,437561526,Verilog,spi_module_FPGA,50,0,2021-12-12 14:49:52+00:00,[],None
298,https://github.com/IAmDylanDennison/Advance-Digital-Design.git,2021-12-13 19:45:56+00:00,Dr. Sambas CS-43305: ADVANCED DIGITAL DESIGN. Coding digital circuits in Verilog ,0,IAmDylanDennison/Advance-Digital-Design,438004054,Verilog,Advance-Digital-Design,24,0,2021-12-13 19:47:05+00:00,[],None
299,https://github.com/daniasalman63/T-Rex-Runner-.git,2021-12-19 05:13:24+00:00,,0,daniasalman63/T-Rex-Runner-,439780945,Verilog,T-Rex-Runner-,14,0,2021-12-19 05:16:24+00:00,[],None
300,https://github.com/zeynepoztekin/Aes-encryption.git,2021-12-19 12:02:38+00:00,Verilog implementation of the symmetric block cipher AES,0,zeynepoztekin/Aes-encryption,439852251,Verilog,Aes-encryption,433,0,2022-11-17 15:09:01+00:00,[],None
301,https://github.com/photonPrograms/IEEEFloatingPointDivider.git,2021-12-31 17:20:06+00:00,Verilog module to perform division of two IEEE 4-byte floating point reals,0,photonPrograms/IEEEFloatingPointDivider,443394236,Verilog,IEEEFloatingPointDivider,424,0,2021-12-31 17:23:16+00:00,[],None
302,https://github.com/TimoThans33/fpga-development.git,2021-12-03 11:05:35+00:00,some cool function on the DE1_SoC fpga,0,TimoThans33/fpga-development,434565516,Verilog,fpga-development,14290,0,2021-12-03 11:09:10+00:00,[],None
303,https://github.com/jrmoulton/Simple-ALU.git,2021-12-10 02:36:58+00:00,A calculator in Verilog for the Basys3 FPGA,0,jrmoulton/Simple-ALU,436827343,Verilog,Simple-ALU,9,0,2021-12-10 02:50:51+00:00,[],None
304,https://github.com/KIKS1797/Equipo_8.git,2021-12-11 05:11:09+00:00,MIPS Single_Cycle,0,KIKS1797/Equipo_8,437193695,Verilog,Equipo_8,2609,0,2022-01-07 06:34:21+00:00,[],None
305,https://github.com/calvar122/Equipo_5.git,2021-12-11 01:16:59+00:00,"Daniela Najar and Cesar Alvarado repository for the multicycle MIPS processor, Computer architecture.",0,calvar122/Equipo_5,437157089,Verilog,Equipo_5,42,0,2021-12-28 04:30:56+00:00,[],None
306,https://github.com/mid2sick/CA_CPU_Pipeline.git,2021-12-29 15:37:17+00:00,,0,mid2sick/CA_CPU_Pipeline,442816168,Verilog,CA_CPU_Pipeline,1000,0,2021-12-29 15:49:36+00:00,[],None
307,https://github.com/apurbaanik/3-Bit-Ripple-Counter.git,2021-12-30 14:14:23+00:00,"About building a 3-Bit Ripple Counter using D Flip Flop with a reset input and we will verify the correct operation by simulating a testbench. Before we talk about ripple counter, we need to understand the function of a D Flip Flop. D Flip Flop is one of the most widely used storage device in a sequential logic. D Flip Flop is basically a Flip Flop with one data input that stores the value of that input signal in its memory at the clock edges. It is similar to the D-Latch except that the store mode is triggered by a transition or the edge on the clock signal. With D Flip Flop, we can implement higher frequency system because the outputs are updated in a short amount of time and it restricts all the noises from corrupting the data stored by excluding all the input transitions at all other times.",0,apurbaanik/3-Bit-Ripple-Counter,443094612,Verilog,3-Bit-Ripple-Counter,477,0,2022-08-19 05:22:33+00:00,[],None
308,https://github.com/AnvithPabba/Test.git,2021-12-30 08:14:17+00:00,,0,AnvithPabba/Test,443010694,Verilog,Test,264,0,2021-12-30 08:46:48+00:00,[],None
309,https://github.com/LeeMyeongbo/Verilog.git,2021-12-31 07:12:44+00:00,,0,LeeMyeongbo/Verilog,443281532,Verilog,Verilog,27,0,2021-12-31 07:16:26+00:00,[],None
310,https://github.com/astonastonaston/MIPS_Assembler_Simulator_and_CPU_implementations.git,2021-12-28 08:20:20+00:00,,0,astonastonaston/MIPS_Assembler_Simulator_and_CPU_implementations,442397090,Verilog,MIPS_Assembler_Simulator_and_CPU_implementations,429,0,2023-12-21 08:40:06+00:00,[],None
311,https://github.com/ChipFlow/caravel_user_project_mpw4.git,2021-12-21 12:58:32+00:00,Submission repo with GDS for MPW4,0,ChipFlow/caravel_user_project_mpw4,440517687,Verilog,caravel_user_project_mpw4,172805,0,2022-01-11 00:08:52+00:00,[],https://api.github.com/licenses/apache-2.0
312,https://github.com/WLLEGit/VerilogCPU-CKernel.git,2021-11-30 03:25:24+00:00,verilog+C语言实现riscv架构cpu与简易操作系统。DE10 FPGA开发板。,0,WLLEGit/VerilogCPU-CKernel,433278998,Verilog,VerilogCPU-CKernel,16840,0,2024-01-12 04:32:57+00:00,[],None
313,https://github.com/Lighti67/verilog-.git,2021-12-29 14:40:28+00:00,华中科技大学数字钟verilog代码,0,Lighti67/verilog-,442800826,Verilog,verilog-,7,0,2021-12-30 01:36:17+00:00,[],None
314,https://github.com/Andy245Liu/ECE253-Digital-Logic-and-Computer-Organization-Labs.git,2021-12-29 05:00:57+00:00,,0,Andy245Liu/ECE253-Digital-Logic-and-Computer-Organization-Labs,442664842,Verilog,ECE253-Digital-Logic-and-Computer-Organization-Labs,22,0,2021-12-30 16:37:23+00:00,[],None
315,https://github.com/faede/OpenMIPS.git,2021-12-30 14:05:33+00:00,,0,faede/OpenMIPS,443092408,Verilog,OpenMIPS,22,0,2021-12-30 18:51:32+00:00,[],https://api.github.com/licenses/mit
316,https://github.com/hyemmie/2021f-logic-design.git,2021-12-08 13:26:59+00:00,2021년 2학기 논리설계 과제 아카이빙 레포,0,hyemmie/2021f-logic-design,436256982,Verilog,2021f-logic-design,37,0,2021-12-24 08:43:33+00:00,[],None
317,https://github.com/shcho1904/digital_system_experiment.git,2021-12-08 16:24:10+00:00,last project,0,shcho1904/digital_system_experiment,436314838,Verilog,digital_system_experiment,16,0,2022-05-07 13:19:45+00:00,[],None
318,https://github.com/kamran-yousafzai/RISC-V-Single-Cycle.git,2021-12-03 10:48:21+00:00,,0,kamran-yousafzai/RISC-V-Single-Cycle,434560963,Verilog,RISC-V-Single-Cycle,9,0,2023-01-03 10:30:15+00:00,[],https://api.github.com/licenses/mit
319,https://github.com/Equationzhao/USTB_digital_logic.git,2021-12-04 07:53:40+00:00,,0,Equationzhao/USTB_digital_logic,434840709,Verilog,USTB_digital_logic,128337,0,2022-01-06 05:00:49+00:00,[],https://api.github.com/licenses/gpl-3.0
320,https://github.com/NicolasRochaPacheco/verilog_self.git,2021-12-14 01:12:23+00:00,,0,NicolasRochaPacheco/verilog_self,438074823,Verilog,verilog_self,64,0,2021-12-16 19:19:21+00:00,[],None
321,https://github.com/hugodiasg/vahid6i-microprocessor.git,2021-12-03 00:32:02+00:00,"16 bits and 6 instructions microprocessor in VHDL with Quartus II, FPGA Cyclone IV - DE0-Nano kit and TimeQuest.",0,hugodiasg/vahid6i-microprocessor,434417806,Verilog,vahid6i-microprocessor,47743,0,2023-03-28 01:14:33+00:00,[],None
322,https://github.com/DanielSimone/ECE206-Lab-2.git,2021-12-12 23:40:51+00:00,"Combinational Logic, Modules, and Testing",0,DanielSimone/ECE206-Lab-2,437682023,Verilog,ECE206-Lab-2,428,0,2021-12-12 23:41:03+00:00,[],None
323,https://github.com/DanielSimone/ECE206-Lab-6.git,2021-12-12 23:48:04+00:00,PUnC (Princeton University Computer),0,DanielSimone/ECE206-Lab-6,437683110,Verilog,ECE206-Lab-6,3872,0,2021-12-12 23:48:48+00:00,[],None
324,https://github.com/TreeOck/VLSI_Project.git,2021-12-04 15:10:15+00:00,VLSI Project done by Aditya Nair,0,TreeOck/VLSI_Project,434933606,Verilog,VLSI_Project,3127,0,2022-04-23 14:25:25+00:00,[],None
325,https://github.com/rocketproplab/AtMotion.git,2021-12-04 20:18:45+00:00,RPL's GPS Microcontroller,3,rocketproplab/AtMotion,435000545,Verilog,AtMotion,58,0,2022-05-28 22:52:41+00:00,[],None
326,https://github.com/rf-andrey/reaction-tester-nios.git,2021-12-07 21:32:13+00:00,,0,rf-andrey/reaction-tester-nios,436031842,Verilog,reaction-tester-nios,519,0,2022-01-10 12:18:39+00:00,[],None
327,https://github.com/Chaiinito/ATM_Verilog.git,2021-12-11 22:14:30+00:00,Simulation of an ATM implemented in a Nexys4,0,Chaiinito/ATM_Verilog,437399780,Verilog,ATM_Verilog,3,0,2023-01-08 21:13:20+00:00,[],None
328,https://github.com/TonyJekyll/QuartusSortingModule.git,2021-11-28 21:28:59+00:00,,0,TonyJekyll/QuartusSortingModule,432829367,Verilog,QuartusSortingModule,11157,0,2021-11-28 21:29:46+00:00,[],None
329,https://github.com/Demid65/cyclone4_musicbox.git,2021-12-02 10:34:38+00:00,Music box for Cyclone IV E,0,Demid65/cyclone4_musicbox,434177894,Verilog,cyclone4_musicbox,15,0,2021-12-02 10:35:34+00:00,[],https://api.github.com/licenses/gpl-3.0
330,https://github.com/dovuthanhhien1609/elevator_system.git,2021-12-29 17:00:00+00:00,,0,dovuthanhhien1609/elevator_system,442836631,Verilog,elevator_system,1463,0,2021-12-29 17:11:58+00:00,[],None
331,https://github.com/jeffrey8373/riscv.git,2021-12-29 02:01:08+00:00,,0,jeffrey8373/riscv,442633432,Verilog,riscv,8,0,2021-12-29 02:28:54+00:00,[],None
332,https://github.com/PJunyeong/Computer-Architecture.git,2021-12-23 14:37:26+00:00,FALL 2020,0,PJunyeong/Computer-Architecture,441207670,Verilog,Computer-Architecture,7329,0,2021-12-23 15:12:37+00:00,[],None
333,https://github.com/Vishal2020Raja/lift.git,2021-12-10 11:18:40+00:00,parameterized algo for a lift,0,Vishal2020Raja/lift,436952177,Verilog,lift,1,0,2021-12-10 11:20:40+00:00,[],None
334,https://github.com/H-Vlad-Montes/MIPS_MULTI_MONTES_HUGO.git,2021-12-06 04:42:02+00:00,,0,H-Vlad-Montes/MIPS_MULTI_MONTES_HUGO,435362210,Verilog,MIPS_MULTI_MONTES_HUGO,15,0,2021-12-06 05:00:08+00:00,[],None
335,https://github.com/olivamadrigal/MIPs-Pipelined-Processor.git,2021-12-10 23:33:20+00:00,MIPs pipelined processor in Verilog,0,olivamadrigal/MIPs-Pipelined-Processor,437141606,Verilog,MIPs-Pipelined-Processor,13,0,2021-12-13 18:11:21+00:00,[],https://api.github.com/licenses/mit
336,https://github.com/gyaanantia/pipeline_proc.git,2021-11-29 20:30:53+00:00,,0,gyaanantia/pipeline_proc,433187821,Verilog,pipeline_proc,12613,0,2022-03-12 23:46:57+00:00,[],None
337,https://github.com/trunghieu-99/vexRiscv_demo.git,2021-11-29 04:19:45+00:00,,0,trunghieu-99/vexRiscv_demo,432903057,Verilog,vexRiscv_demo,19,0,2021-11-29 08:52:40+00:00,[],None
338,https://github.com/andrew76214/FPGA_Final_Project.git,2021-12-18 14:26:55+00:00,Implement RSA in verilog,0,andrew76214/FPGA_Final_Project,439635488,Verilog,FPGA_Final_Project,15,0,2022-01-26 03:39:48+00:00,[],https://api.github.com/licenses/mit
339,https://github.com/yomna-gamal/Y.G.git,2021-12-15 11:41:16+00:00,FPGA_PROJECT,0,yomna-gamal/Y.G,438607869,Verilog,Y.G,13,0,2021-12-18 15:22:41+00:00,[],None
340,https://github.com/embelon/wb_bridge.git,2021-12-16 21:56:31+00:00,Simple Wishbone bridge for splitting incoming transactions into few buses based on address,1,embelon/wb_bridge,439137466,Verilog,wb_bridge,2925,0,2021-12-31 08:37:03+00:00,[],https://api.github.com/licenses/apache-2.0
341,https://github.com/seyyedAlirezaGhazanfari/uart_verilog.git,2021-12-14 11:29:47+00:00,,0,seyyedAlirezaGhazanfari/uart_verilog,438227673,Verilog,uart_verilog,1,0,2021-12-14 11:32:27+00:00,[],None
342,https://github.com/usman747/Processor-Architecture.git,2021-12-17 14:37:55+00:00,MCA's project. Architecture of processor with several commands and routines ,0,usman747/Processor-Architecture,439362390,Verilog,Processor-Architecture,3148,0,2021-12-24 15:51:50+00:00,[],None
343,https://github.com/G-Motivation/frontend-design.git,2021-12-17 15:19:57+00:00,,0,G-Motivation/frontend-design,439374837,Verilog,frontend-design,1,0,2021-12-17 16:23:00+00:00,[],None
344,https://github.com/alvinpane/Multicycle-Processor-Implementation-ECE352-.git,2021-12-17 17:20:12+00:00,Multicycle Processor Implementation for ECE352 - University of Toronto,0,alvinpane/Multicycle-Processor-Implementation-ECE352-,439408767,Verilog,Multicycle-Processor-Implementation-ECE352-,2277,0,2021-12-17 17:26:30+00:00,[],None
345,https://github.com/SwingM/BIT_CS_-_Assembly.git,2021-12-15 08:21:42+00:00,北理工计科汇编/体系小学期,0,SwingM/BIT_CS_-_Assembly,438549936,Verilog,BIT_CS_-_Assembly,4333,0,2021-12-15 08:22:30+00:00,[],None
346,https://github.com/AntonioDrusin/fpga_playground.git,2021-12-26 18:21:21+00:00,,0,AntonioDrusin/fpga_playground,441956866,Verilog,fpga_playground,46,0,2022-01-02 12:27:14+00:00,[],None
347,https://github.com/arciellabrience/Simplified-SLEX-Southwoods-Toll-Matrix-System.git,2021-12-24 16:38:28+00:00,Introduction to HDL Laboratory (LBYCPF2) course using the Verilog programming language in the Vivado software.,0,arciellabrience/Simplified-SLEX-Southwoods-Toll-Matrix-System,441512511,Verilog,Simplified-SLEX-Southwoods-Toll-Matrix-System,36,0,2021-12-24 18:03:27+00:00,[],None
348,https://github.com/Ever-glow/DIC_TermProject.git,2021-12-29 05:16:25+00:00,,0,Ever-glow/DIC_TermProject,442667400,Verilog,DIC_TermProject,5,0,2022-01-01 18:17:50+00:00,[],None
349,https://github.com/min4604/Verliog_RV32I.git,2021-12-19 13:03:08+00:00,,0,min4604/Verliog_RV32I,439865166,Verilog,Verliog_RV32I,1972,0,2024-03-27 01:29:56+00:00,[],None
350,https://github.com/russ-klein/platforms.git,2021-12-30 19:42:01+00:00,,0,russ-klein/platforms,443169561,Verilog,platforms,31529,0,2022-01-07 02:19:33+00:00,[],None
351,https://github.com/raramsden/PHYS332_labs.git,2021-12-02 16:47:00+00:00,,0,raramsden/PHYS332_labs,434301092,Verilog,PHYS332_labs,15,0,2021-12-13 23:49:00+00:00,[],None
352,https://github.com/elkinn/tetris.git,2021-12-03 02:08:59+00:00,,0,elkinn/tetris,434437150,Verilog,tetris,89196,0,2021-12-06 01:22:04+00:00,[],None
353,https://github.com/oiramS/ProyectoVGA.git,2021-12-14 02:36:19+00:00,lol no,0,oiramS/ProyectoVGA,438092820,Verilog,ProyectoVGA,44372,0,2021-12-19 00:46:08+00:00,[],None
354,https://github.com/davenakasone/verilogHDL_examples.git,2021-12-14 03:15:22+00:00,selected hardware models using verilog and systemVerilog,0,davenakasone/verilogHDL_examples,438101648,Verilog,verilogHDL_examples,34,0,2021-12-14 03:41:59+00:00,[],None
355,https://github.com/LucasVanLume/Microwave_Project.git,2021-12-19 16:37:52+00:00,Final project of the subject of Digital Systems (2nd Period) of the Computer Science Course at the Universidade Federal of Pernambuco (Cin-UFPE),0,LucasVanLume/Microwave_Project,439914874,,Microwave_Project,9,0,2021-12-19 16:37:53+00:00,[],None
356,https://github.com/ayliniremkara/VSCPU.git,2021-12-20 23:50:37+00:00,Very Simple CPU Design,0,ayliniremkara/VSCPU,440337282,Verilog,VSCPU,5,0,2022-02-10 06:47:00+00:00,[],None
357,https://github.com/pedromiguelcp/VotingConvolution.git,2021-12-22 15:02:47+00:00,Hardware implementation of the Voting scheme-based convolution.,0,pedromiguelcp/VotingConvolution,440894977,Verilog,VotingConvolution,942,0,2021-12-22 16:32:37+00:00,[],None
358,https://github.com/KarmaD7/cod-ind-lab.git,2021-12-23 12:59:22+00:00,"Individual Programming Assignment for Computer Organization Course, Tsinghua University, 2021 Autumn.",0,KarmaD7/cod-ind-lab,441181350,Verilog,cod-ind-lab,42401,0,2021-12-23 13:00:29+00:00,[],None
359,https://github.com/lulu9312/caravel_user_project_updown.git,2021-12-23 17:15:53+00:00,,0,lulu9312/caravel_user_project_updown,441248555,Verilog,caravel_user_project_updown,6109,0,2021-12-23 17:30:02+00:00,[],https://api.github.com/licenses/apache-2.0
360,https://github.com/nmpluta/uP_FPGA.git,2021-12-16 09:00:40+00:00,Microprocessor implementation in FPGA using VHDL. ,0,nmpluta/uP_FPGA,438923993,Verilog,uP_FPGA,16818,0,2022-01-22 20:50:02+00:00,[],None
361,https://github.com/IPTNzoa/basics.git,2021-12-15 20:22:03+00:00,elementary components,0,IPTNzoa/basics,438762136,Verilog,basics,4,0,2021-12-15 20:43:42+00:00,[],None
362,https://github.com/irshad2503/LED-Interface-using-FPGA.git,2021-12-23 09:31:32+00:00,,0,irshad2503/LED-Interface-using-FPGA,441129511,Verilog,LED-Interface-using-FPGA,172,0,2021-12-23 11:07:42+00:00,[],None
363,https://github.com/nicolabattaglino/SBST_RISCY.git,2021-12-23 08:23:42+00:00,,0,nicolabattaglino/SBST_RISCY,441112316,Verilog,SBST_RISCY,29719,0,2022-07-13 20:41:55+00:00,[],None
364,https://github.com/dayyan-hashmi/Verilog-Basic-Logic-Models.git,2021-12-22 20:40:14+00:00,Modelling various types of combination logic in Verilog.,0,dayyan-hashmi/Verilog-Basic-Logic-Models,440979019,Verilog,Verilog-Basic-Logic-Models,1,0,2022-06-15 19:12:17+00:00,[],None
365,https://github.com/infvg/PingPongVerilog.git,2021-12-05 17:22:03+00:00,Pingpong game made in verilog,0,infvg/PingPongVerilog,435231820,Verilog,PingPongVerilog,845,0,2021-12-19 11:35:08+00:00,[],None
366,https://github.com/MoisesPerez2305/MIPS_Multi_Perez_Moises.git,2021-12-06 04:51:51+00:00,,0,MoisesPerez2305/MIPS_Multi_Perez_Moises,435364069,Verilog,MIPS_Multi_Perez_Moises,127,0,2021-12-06 05:50:06+00:00,[],None
367,https://github.com/eAlmonte21/MIPS_Multi_Almonte_Luis.git,2021-12-06 04:42:35+00:00,,0,eAlmonte21/MIPS_Multi_Almonte_Luis,435362331,Verilog,MIPS_Multi_Almonte_Luis,14,0,2021-12-06 05:01:07+00:00,[],None
368,https://github.com/Khal1dA/Pr4.git,2021-12-07 23:53:01+00:00,Pr4 dec 7,0,Khal1dA/Pr4,436059869,Verilog,Pr4,13,0,2021-12-07 23:53:55+00:00,[],None
369,https://github.com/Super-Awesome-Organization/expt11.git,2021-12-01 20:23:03+00:00,,0,Super-Awesome-Organization/expt11,433973418,Verilog,expt11,62,0,2021-12-06 20:41:08+00:00,[],None
370,https://github.com/liing0228/Verilog-final-project.git,2021-12-08 17:00:45+00:00,Frequency analysis system in verilog,1,liing0228/Verilog-final-project,436325906,Verilog,Verilog-final-project,1452,0,2021-12-08 17:47:50+00:00,[],None
371,https://github.com/Arima9/Equipo_11.git,2021-12-08 16:33:26+00:00,MIPS microprocessor with UC-FSM,0,Arima9/Equipo_11,436317751,Verilog,Equipo_11,225,0,2021-12-23 20:43:11+00:00,[],None
372,https://github.com/Abhiyanta-Community/PWM-Generator-with-Variable-Duty-Cycle-Using-FPGA.git,2021-12-29 11:40:25+00:00,,0,Abhiyanta-Community/PWM-Generator-with-Variable-Duty-Cycle-Using-FPGA,442754496,Verilog,PWM-Generator-with-Variable-Duty-Cycle-Using-FPGA,1338,0,2022-02-16 05:57:36+00:00,[],https://api.github.com/licenses/gpl-3.0
373,https://github.com/EGRazo/Filters.git,2021-12-29 08:44:31+00:00,,0,EGRazo/Filters,442712774,Verilog,Filters,20,0,2022-03-14 18:26:08+00:00,[],None
374,https://github.com/haechan1101/Digital-System-Design.git,2021-12-14 16:04:27+00:00,2019-2 Digital System Design TermProject,0,haechan1101/Digital-System-Design,438316092,Verilog,Digital-System-Design,190,0,2021-12-14 16:31:14+00:00,[],None
375,https://github.com/mbalestrini/caravel_timing_analysis-old-caravel-version.git,2021-12-05 20:20:34+00:00,,0,mbalestrini/caravel_timing_analysis-old-caravel-version,435269839,Verilog,caravel_timing_analysis-old-caravel-version,2692,0,2021-12-20 19:52:09+00:00,[],None
376,https://github.com/mcardleg/DigitalSystemsDesign.git,2021-12-05 13:33:29+00:00,College assignments using verilog and Vivado.,0,mcardleg/DigitalSystemsDesign,435175745,Verilog,DigitalSystemsDesign,875,0,2022-11-25 20:42:55+00:00,[],None
377,https://github.com/MahmoudAbdelmawgoed/Clock-Divider.git,2021-12-05 20:39:15+00:00,,0,MahmoudAbdelmawgoed/Clock-Divider,435273618,Verilog,Clock-Divider,2,0,2021-12-05 20:41:05+00:00,[],None
378,https://github.com/vadimpy/rv32i_cpu.git,2021-12-24 06:09:55+00:00,RISC-V 32i CPU,1,vadimpy/rv32i_cpu,441382206,Verilog,rv32i_cpu,59501,0,2021-12-28 15:21:58+00:00,[],None
379,https://github.com/gettsu/riscv-cpu.git,2021-12-26 18:47:03+00:00,,0,gettsu/riscv-cpu,441961334,Verilog,riscv-cpu,150,0,2022-09-24 12:20:17+00:00,[],None
380,https://github.com/prvbharadwaj1731/AES_encryption_module.git,2021-11-29 07:23:14+00:00,Implementation of AES encryption in Verilog. Targeted board : Microsemi SmartFusion2 ,0,prvbharadwaj1731/AES_encryption_module,432942440,Verilog,AES_encryption_module,26909,0,2021-12-14 05:50:50+00:00,[],None
381,https://github.com/usmanali-rs/RISCV_Processor.git,2021-11-30 12:33:47+00:00,,1,usmanali-rs/RISCV_Processor,433423980,Verilog,RISCV_Processor,33,0,2022-01-06 08:11:15+00:00,[],https://api.github.com/licenses/mit
382,https://github.com/ethanj0hn/pipelined_processor-ECE_411.git,2021-11-30 19:29:21+00:00,,0,ethanj0hn/pipelined_processor-ECE_411,433559804,Verilog,pipelined_processor-ECE_411,10796,0,2021-12-07 21:16:46+00:00,[],None
383,https://github.com/hmiranda-queiros/Embedded_Sys.git,2021-12-24 00:14:27+00:00,,0,hmiranda-queiros/Embedded_Sys,441324571,Verilog,Embedded_Sys,606666,0,2022-06-23 17:30:59+00:00,[],None
384,https://github.com/PengyangZhou/ece411-mp4.git,2021-12-26 01:36:14+00:00,,0,PengyangZhou/ece411-mp4,441788809,Verilog,ece411-mp4,1943,0,2021-12-26 01:54:52+00:00,[],None
385,https://github.com/Jeacy/cpu2022.git,2021-12-29 07:12:14+00:00,homework,0,Jeacy/cpu2022,442691044,Verilog,cpu2022,153751,0,2022-01-13 13:12:02+00:00,[],None
386,https://github.com/Zz-dong/MyCPU.git,2021-11-27 09:26:18+00:00,,0,Zz-dong/MyCPU,432418341,Verilog,MyCPU,631,0,2022-09-15 14:31:50+00:00,[],None
387,https://github.com/Arjun-Narula/Clock-with-Alarm.git,2021-12-26 01:04:45+00:00,A clock in verilog with Alarm,3,Arjun-Narula/Clock-with-Alarm,441785451,Verilog,Clock-with-Alarm,1048,0,2023-12-22 11:22:05+00:00,[],None
388,https://github.com/yongatek/caravel_yonga-turbo-encoder.git,2021-12-28 09:44:17+00:00,,0,yongatek/caravel_yonga-turbo-encoder,442417510,Verilog,caravel_yonga-turbo-encoder,46276,0,2022-01-11 01:10:35+00:00,[],https://api.github.com/licenses/apache-2.0
389,https://github.com/Xornotor/ENGG56.git,2021-11-28 16:35:55+00:00,"Projetos feitos para a matéria ENGG56 - Projeto de Circuitos Integrados Digitais, cursada na UFBA no semestre 2021.2. Todos os arquivos de design e testbenches foram feitos em Verilog. Arquivos VHDL de memória RAM e PLL foram gerados pelo Quartus.",0,Xornotor/ENGG56,432766609,Verilog,ENGG56,26619,0,2021-12-06 09:21:18+00:00,[],None
390,https://github.com/verilogcodesarchive/verilogutils.git,2021-11-28 18:29:21+00:00,,0,verilogcodesarchive/verilogutils,432792852,Verilog,verilogutils,76,0,2021-11-28 22:26:14+00:00,"['verilog', 'verilog-components', 'verilog-hdl', 'verilog-codes', 'button-debounce', 'comprator', 'comprator-3bit', 'comprator-8bit', 'cordic-cir', 'cordic-hyp', 'pipeline', 'div-pipelined', 'pipeline-registers', 'ram-infer', 'sign-extender', 'verilog-modules']",None
391,https://github.com/Danny731/EC-311-Peoject.git,2021-11-29 16:06:11+00:00,,0,Danny731/EC-311-Peoject,433109217,Verilog,EC-311-Peoject,35,0,2021-12-05 22:53:59+00:00,[],None
392,https://github.com/95anantsingh/NYU-RISCV-32I-Processor.git,2021-11-29 19:42:35+00:00,,0,95anantsingh/NYU-RISCV-32I-Processor,433174928,Verilog,NYU-RISCV-32I-Processor,16004,0,2022-06-02 02:11:05+00:00,[],https://api.github.com/licenses/gpl-3.0
393,https://github.com/AlexManka/ce493ErrorResilient.git,2021-12-10 07:10:24+00:00,,0,AlexManka/ce493ErrorResilient,436884728,Verilog,ce493ErrorResilient,6743,0,2021-12-10 11:06:10+00:00,[],None
394,https://github.com/saengowp/yah-riscv.git,2021-12-16 07:50:38+00:00,Yet Another Homebrewed RISC-V,0,saengowp/yah-riscv,438904456,Verilog,yah-riscv,314,0,2022-12-02 17:57:53+00:00,[],None
395,https://github.com/MexLinker/FPGAproc.git,2021-12-10 07:47:53+00:00,,0,MexLinker/FPGAproc,436894342,Verilog,FPGAproc,3486,0,2021-12-11 04:18:10+00:00,[],None
396,https://github.com/ShahdElmahallawy/Digital_Lock.git,2021-12-12 18:21:18+00:00,A digital Lock implemented using Verilog and simulated the output on FPGA. ,0,ShahdElmahallawy/Digital_Lock,437623093,Verilog,Digital_Lock,3,0,2021-12-12 18:22:24+00:00,[],None
397,https://github.com/jinyaoguo/Verilog-SJTU.git,2021-12-16 13:56:51+00:00,SJTU IS316 DSDlab,0,jinyaoguo/Verilog-SJTU,439008218,Verilog,Verilog-SJTU,8038,0,2021-12-16 14:05:58+00:00,[],None
398,https://github.com/CrzC/MIPS.git,2021-12-03 18:57:23+00:00,Modules in verilog for MIPS architecture (single cycle and multicycle,0,CrzC/MIPS,434702866,Verilog,MIPS,7,0,2022-02-11 01:00:07+00:00,[],None
399,https://github.com/kaipederson/PACT_HW_Code.git,2021-12-03 20:14:36+00:00,,0,kaipederson/PACT_HW_Code,434722063,Verilog,PACT_HW_Code,1683,0,2022-04-17 17:04:16+00:00,[],None
400,https://github.com/yuxiao-ww/Verilog_MyCPU.git,2021-12-04 10:09:19+00:00,,0,yuxiao-ww/Verilog_MyCPU,434866778,Verilog,Verilog_MyCPU,14,0,2021-12-04 10:09:49+00:00,[],None
401,https://github.com/harshil-patel11/RISC-Microcontroller.git,2021-12-23 01:38:11+00:00,A Simple RISC Machine Microcontroller / CPU,0,harshil-patel11/RISC-Microcontroller,441030311,Verilog,RISC-Microcontroller,13636,0,2021-12-25 03:40:10+00:00,[],None
402,https://github.com/radhikamathuria25/SNOW-2.0-Cipher.git,2021-12-23 15:48:13+00:00,Implementation of the sub-blocks of the SNOW 2.0 Cipher generation,0,radhikamathuria25/SNOW-2.0-Cipher,441226760,Verilog,SNOW-2.0-Cipher,8,0,2021-12-23 19:39:01+00:00,[],None
403,https://github.com/egislev/osmoBTS-umtrx.git,2021-12-16 23:26:12+00:00,,0,egislev/osmoBTS-umtrx,439153795,Verilog,osmoBTS-umtrx,159689,0,2021-12-17 18:59:50+00:00,[],None
404,https://github.com/GLORYFeonix/VGA_Display.git,2021-12-27 08:30:37+00:00,Display char on a screen with VGA port,0,GLORYFeonix/VGA_Display,442098765,Verilog,VGA_Display,8176,0,2021-12-27 12:00:15+00:00,[],None
405,https://github.com/Noisyboy-9/automated-parking-hardware-description.git,2021-12-28 16:50:41+00:00,,0,Noisyboy-9/automated-parking-hardware-description,442526248,Verilog,automated-parking-hardware-description,4823,0,2022-02-03 20:08:20+00:00,[],None
406,https://github.com/li-daokun/ldk_HDLbits.git,2021-12-27 06:00:12+00:00,HDLbits codes,0,li-daokun/ldk_HDLbits,442065348,Verilog,ldk_HDLbits,4,0,2021-12-28 03:48:57+00:00,[],None
407,https://github.com/rohinthram/nalin_csvco_tapeout_mpw4.git,2021-12-25 04:21:01+00:00,,0,rohinthram/nalin_csvco_tapeout_mpw4,441602665,Verilog,nalin_csvco_tapeout_mpw4,758,0,2021-12-25 05:05:16+00:00,[],https://api.github.com/licenses/apache-2.0
408,https://github.com/ngocnhi030402/adder.git,2021-12-27 15:52:31+00:00,,0,ngocnhi030402/adder,442202307,Verilog,adder,84,0,2021-12-30 15:29:51+00:00,[],None
409,https://github.com/HALIP192/RISC-V.git,2021-12-16 12:24:56+00:00,,0,HALIP192/RISC-V,438980435,Verilog,RISC-V,17,0,2021-12-16 12:33:55+00:00,[],None
410,https://github.com/H-Vlad-Montes/Equipo_2.git,2021-12-15 23:29:32+00:00,,0,H-Vlad-Montes/Equipo_2,438802235,Verilog,Equipo_2,314,0,2021-12-21 03:37:33+00:00,[],None
411,https://github.com/Shehryar-Amin-sa06442/WHACK-A-MOLE.git,2021-12-16 22:24:39+00:00,,0,Shehryar-Amin-sa06442/WHACK-A-MOLE,439142837,Verilog,WHACK-A-MOLE,22,0,2021-12-16 22:27:16+00:00,[],None
412,https://github.com/welguisz/aoc2021d16fpga.git,2021-12-18 03:03:01+00:00,"Advent of Code 2021, Day 16 done in work to be synthesizable and placed in a FPGA.",0,welguisz/aoc2021d16fpga,439514885,Verilog,aoc2021d16fpga,621,0,2022-01-05 20:57:06+00:00,[],https://api.github.com/licenses/gpl-3.0
413,https://github.com/umang-garg21/ECE-Algo-HW-CoDesign-Project.git,2021-12-11 23:31:35+00:00,Accelerating Audio Recognition on Edge-FPGA,0,umang-garg21/ECE-Algo-HW-CoDesign-Project,437411201,Verilog,ECE-Algo-HW-CoDesign-Project,1481,0,2021-12-11 23:32:37+00:00,[],None
414,https://github.com/MNienaber831/SD-Card-Photo-Library-Displayed-on-VGA.git,2021-12-11 23:48:22+00:00,ECE 178 Embedded Systems final project with Alex Her,0,MNienaber831/SD-Card-Photo-Library-Displayed-on-VGA,437413383,Verilog,SD-Card-Photo-Library-Displayed-on-VGA,1542,0,2021-12-12 00:06:41+00:00,[],None
415,https://github.com/vstgeorg/VendingMachine_Public.git,2021-12-19 17:51:04+00:00,Vending machine implemented in Verilog for Basys3 Board,0,vstgeorg/VendingMachine_Public,439930771,Verilog,VendingMachine_Public,5,0,2021-12-19 17:51:27+00:00,[],None
416,https://github.com/xavier-shaw/CS207-Digital-Design-Project.git,2021-12-17 05:52:41+00:00,Implementation of a Morse Code encoder and decoder,1,xavier-shaw/CS207-Digital-Design-Project,439225284,Verilog,CS207-Digital-Design-Project,2682,0,2022-01-02 14:59:38+00:00,[],None
417,https://github.com/AkshitGureja/VLSI_project.git,2021-12-07 04:02:12+00:00,,0,AkshitGureja/VLSI_project,435737044,Verilog,VLSI_project,42,0,2021-12-07 06:07:50+00:00,[],None
418,https://github.com/grobereiner/Lab6.git,2021-12-01 23:28:53+00:00,,0,grobereiner/Lab6,434018288,Verilog,Lab6,4,0,2021-12-01 23:28:58+00:00,[],None
419,https://github.com/Manaswini1832/EE2003-Final-project.git,2021-12-02 08:56:04+00:00,,0,Manaswini1832/EE2003-Final-project,434147740,Verilog,EE2003-Final-project,375,0,2022-08-21 11:27:48+00:00,[],None
420,https://github.com/JoseRicardoR/Resafeve.git,2021-12-09 17:06:50+00:00,"Poyecto de detección y clasificación de sonidos para la protección de reservas naturales de la tala ilegal. Con el uso de ESP32, Raspberry, Containers, Grafana, MQTT, IA, Servidores y FPGA. Proyecto final de la asignatura Sistemas Embebidos de la Universidad Nacional de Colombia.",0,JoseRicardoR/Resafeve,436696978,Verilog,Resafeve,40263,0,2022-02-10 19:05:28+00:00,[],None
421,https://github.com/dj0b/Corse_work_morse.git,2021-12-09 20:00:12+00:00,morse transmitter/receiver on Verilog ,0,dj0b/Corse_work_morse,436745290,Verilog,Corse_work_morse,404,0,2021-12-23 08:54:55+00:00,[],None
422,https://github.com/nagariajheel/ee581-hacking-sanscrypt.git,2021-12-09 04:12:20+00:00,,0,nagariajheel/ee581-hacking-sanscrypt,436478796,Verilog,ee581-hacking-sanscrypt,20647,0,2021-12-09 05:27:43+00:00,[],None
423,https://github.com/DECAfpga/Demistify_example.git,2021-12-06 10:24:53+00:00,Demistify example and tutorial on how to demistify,1,DECAfpga/Demistify_example,435452045,Verilog,Demistify_example,8383,0,2022-07-15 17:40:49+00:00,"['fpga', 'demistify', 'bram', 'others']",None
424,https://github.com/Vaishnavi1627/wrapper.git,2021-12-06 07:27:40+00:00,,0,Vaishnavi1627/wrapper,435399802,Verilog,wrapper,19,0,2021-12-06 10:08:28+00:00,[],None
425,https://github.com/B07902068/computer_architecture.git,2021-12-06 02:56:14+00:00,,0,B07902068/computer_architecture,435341493,Verilog,computer_architecture,3831,0,2021-12-06 04:31:44+00:00,[],None
426,https://github.com/sethr07/Digital_System_Design.git,2021-12-03 03:19:42+00:00,,1,sethr07/Digital_System_Design,434452189,Verilog,Digital_System_Design,27,0,2021-12-03 03:27:29+00:00,[],None
427,https://github.com/wokwi/wrapped_spell.git,2021-12-03 17:10:23+00:00,"SPELL CPU, wrapped for Caravel",1,wokwi/wrapped_spell,434674643,Verilog,wrapped_spell,3720,0,2021-12-23 21:39:22+00:00,[],https://api.github.com/licenses/apache-2.0
428,https://github.com/Shroubovak/ADC_DAC_LCD_OLED_MAX10_sample.git,2021-11-30 16:08:22+00:00,,0,Shroubovak/ADC_DAC_LCD_OLED_MAX10_sample,433497044,Verilog,ADC_DAC_LCD_OLED_MAX10_sample,3258,0,2021-11-30 16:46:02+00:00,[],None
429,https://github.com/roque11/pr4.git,2021-11-30 21:01:02+00:00,,0,roque11/pr4,433584800,Verilog,pr4,9380,0,2021-12-08 19:04:39+00:00,[],None
430,https://github.com/Alex-Lin5/AHBLite-learning.git,2021-12-30 20:46:31+00:00,It is hardware and software co-designed ARM AHB-Lite Bus protocol learning project,0,Alex-Lin5/AHBLite-learning,443181401,Verilog,AHBLite-learning,2918,0,2021-12-30 21:00:54+00:00,[],https://api.github.com/licenses/unlicense
431,https://github.com/mvinci12/Single-Cycle-CPU.git,2021-12-31 01:50:10+00:00,"Added to, debugged, and tested new features of a single cycle CPU using Verilog.",0,mvinci12/Single-Cycle-CPU,443227044,Verilog,Single-Cycle-CPU,384,0,2021-12-31 01:53:08+00:00,[],None
432,https://github.com/Yusei-SHIRAISHI/computer_logic.git,2021-12-18 19:49:12+00:00,,0,Yusei-SHIRAISHI/computer_logic,439701944,Verilog,computer_logic,8,0,2021-12-18 19:53:43+00:00,[],None
433,https://github.com/zyk101177/TriLock.git,2021-11-29 22:44:18+00:00,,0,zyk101177/TriLock,433219676,Verilog,TriLock,14542,0,2024-01-03 17:54:14+00:00,[],None
434,https://github.com/russellfriesenhahn/alpha.git,2021-12-29 06:50:12+00:00,,0,russellfriesenhahn/alpha,442686093,Verilog,alpha,47007,0,2022-01-11 00:25:32+00:00,[],https://api.github.com/licenses/apache-2.0
435,https://github.com/wcvanvan/MorseCode.git,2021-11-27 13:27:44+00:00,,0,wcvanvan/MorseCode,432468364,Verilog,MorseCode,454,0,2022-02-02 05:10:49+00:00,[],None
436,https://github.com/mrapi00/Stoplight_FSM.git,2021-11-27 17:33:16+00:00,Designing a finite state machine (FSM) implement a controller for the traffic light at the intersection of two roads.,0,mrapi00/Stoplight_FSM,432525515,Verilog,Stoplight_FSM,8,0,2021-11-27 17:38:05+00:00,[],None
437,https://github.com/acsl-technion/flexdriver-iot-auth.git,2021-11-28 07:45:20+00:00,FlexDriver IoT authentication offload example AFU.,1,acsl-technion/flexdriver-iot-auth,432650104,Verilog,flexdriver-iot-auth,175,0,2022-01-04 07:41:34+00:00,"['fpga', 'hardware-acceleration', 'coap', 'json-web-token', 'hmac-sha256']",https://api.github.com/licenses/bsd-2-clause
438,https://github.com/Abdob/de10-sobel.git,2021-12-04 05:42:51+00:00,,0,Abdob/de10-sobel,434818275,Verilog,de10-sobel,869,0,2021-12-16 23:47:25+00:00,[],None
439,https://github.com/MohammadEshtehardian/verilog-codes.git,2021-11-28 13:04:32+00:00,These are some of my codes with verilog.,0,MohammadEshtehardian/verilog-codes,432714375,Verilog,verilog-codes,9,0,2021-11-28 13:07:25+00:00,[],None
440,https://github.com/EmJunaid/CSRs_Implementation.git,2021-12-11 09:12:23+00:00,,0,EmJunaid/CSRs_Implementation,437235991,Verilog,CSRs_Implementation,119,0,2021-12-11 09:33:46+00:00,[],None
441,https://github.com/ufukyill/Graduation-project-version-follow.git,2021-12-09 10:32:14+00:00,,0,ufukyill/Graduation-project-version-follow,436575447,Verilog,Graduation-project-version-follow,136,0,2021-12-10 09:17:27+00:00,[],https://api.github.com/licenses/mit
442,https://github.com/arunjeevaraj/sl_preceptron.git,2021-12-10 00:04:07+00:00,,0,arunjeevaraj/sl_preceptron,436796816,Verilog,sl_preceptron,2863,0,2021-12-14 20:34:26+00:00,[],None
443,https://github.com/javiidiazglez/EC.git,2021-12-01 22:56:49+00:00,Estructuras de Computadores,0,javiidiazglez/EC,434011386,Verilog,EC,1252,0,2021-12-15 17:22:32+00:00,['verilog'],None
444,https://github.com/alxcode-x/Data_Path_Lopez_Francisco.git,2021-12-06 04:58:00+00:00,"Data Path, Verilog project for Computer Architecture course.",0,alxcode-x/Data_Path_Lopez_Francisco,435365287,Verilog,Data_Path_Lopez_Francisco,17,0,2021-12-26 22:50:08+00:00,[],None
445,https://github.com/rdmeneze/verilog_studies.git,2021-12-05 17:24:16+00:00,,1,rdmeneze/verilog_studies,435232295,Verilog,verilog_studies,64,0,2021-12-14 11:45:01+00:00,[],None
446,https://github.com/lilei87/test.git,2021-12-06 02:39:21+00:00,test_20211206,0,lilei87/test,435338006,Verilog,test,11,0,2021-12-06 06:47:43+00:00,[],None
447,https://github.com/kayak4665664/Hardware-experiments.git,2021-12-07 12:46:54+00:00,These programs are Hardware experiments of the Computer Department of North China University of Technology.这些程序是北方工业大学计算机系硬件课程设计实验。,0,kayak4665664/Hardware-experiments,435877241,Verilog,Hardware-experiments,16,0,2022-01-07 09:56:30+00:00,"['verilog', 'hardware']",https://api.github.com/licenses/gpl-3.0
448,https://github.com/BrendanSherman/Vending-Controller.git,2021-12-09 08:11:52+00:00,Vending machine controller circuit and Altera FGPA implementation https://www.youtube.com/watch?v=jyxaF6LsS3g,0,BrendanSherman/Vending-Controller,436533526,Verilog,Vending-Controller,10709,0,2022-09-29 09:09:41+00:00,[],None
449,https://github.com/AlbaCM98/Equipo_9.git,2021-12-11 01:25:28+00:00,MIPS implementation of Alba Castro and Miguel Benavides' team,1,AlbaCM98/Equipo_9,437158281,Verilog,Equipo_9,13,0,2022-01-10 19:12:10+00:00,[],None
450,https://github.com/jplace111/Final-project.git,2021-12-17 23:25:32+00:00,,0,jplace111/Final-project,439484360,Verilog,Final-project,6,0,2021-12-17 23:26:54+00:00,[],None
451,https://github.com/PascalHacks/Aginstaller.git,2021-12-17 15:05:04+00:00,,0,PascalHacks/Aginstaller,439370634,Verilog,Aginstaller,8,0,2021-12-19 03:28:35+00:00,[],None
452,https://github.com/ryanpasculano/riscv_pipeline.git,2021-12-13 17:38:11+00:00,Implementation of the 3-stage Sodor Processor using Verilog.,0,ryanpasculano/riscv_pipeline,437966891,Verilog,riscv_pipeline,148,0,2021-12-13 20:14:29+00:00,"['verilog', 'computer-architecture', 'riscv']",None
453,https://github.com/yuex1994/ILA_8051.git,2021-12-13 17:02:59+00:00,,0,yuex1994/ILA_8051,437956314,Verilog,ILA_8051,576,0,2022-09-30 23:21:20+00:00,[],None
454,https://github.com/saenyakorn/2110363-HW-SYN-LAB-I.git,2021-12-14 07:05:59+00:00,,0,saenyakorn/2110363-HW-SYN-LAB-I,438151761,Verilog,2110363-HW-SYN-LAB-I,4182,0,2021-12-29 09:34:14+00:00,[],None
455,https://github.com/ufukyill/Issue-submit.git,2021-12-27 18:58:53+00:00,,0,ufukyill/Issue-submit,442247902,Verilog,Issue-submit,33447,0,2022-01-10 10:10:24+00:00,[],None
456,https://github.com/suk05112/AlarmWithHBECombo.git,2021-12-29 05:22:36+00:00,,0,suk05112/AlarmWithHBECombo,442668484,Verilog,AlarmWithHBECombo,10701,0,2021-12-29 05:37:09+00:00,[],None
457,https://github.com/Alex-Lin5/microcontroller.git,2021-12-30 19:14:55+00:00,An 8-bit microcontroller,0,Alex-Lin5/microcontroller,443164291,Verilog,microcontroller,3693,0,2021-12-30 22:07:12+00:00,[],https://api.github.com/licenses/mit
458,https://github.com/GuillemCabo/asic_watch_mpw4.git,2021-12-30 12:43:10+00:00,,0,GuillemCabo/asic_watch_mpw4,443071821,Verilog,asic_watch_mpw4,3198,0,2021-12-30 12:43:33+00:00,[],None
459,https://github.com/james-fulton/ECE369_Final_Project.git,2021-12-28 01:57:07+00:00,,0,james-fulton/ECE369_Final_Project,442321352,Verilog,ECE369_Final_Project,57,0,2021-12-30 03:09:21+00:00,[],None
460,https://github.com/kowshikveduruparthi/kowshikveduruparthi.git,2021-12-28 13:28:20+00:00,Config files for my GitHub profile.,0,kowshikveduruparthi/kowshikveduruparthi,442472031,Verilog,kowshikveduruparthi,3,0,2022-07-11 17:48:08+00:00,"['config', 'github-config']",None
461,https://github.com/Minture/xiedong.git,2021-11-29 12:08:45+00:00,,0,Minture/xiedong,433027796,Verilog,xiedong,1653,0,2021-11-29 12:09:36+00:00,[],None
462,https://github.com/KireGarciaM/verislots.git,2021-11-30 19:32:52+00:00,,0,KireGarciaM/verislots,433560743,Verilog,verislots,12,0,2021-11-30 20:14:09+00:00,[],None
463,https://github.com/amithgopi/Pipelined-MIPS.git,2021-11-30 07:10:48+00:00,Fully pipelined implementation of a basic MIPS processor in Verilog,0,amithgopi/Pipelined-MIPS,433329976,Verilog,Pipelined-MIPS,11,0,2022-02-04 01:54:51+00:00,[],None
464,https://github.com/Cl0udi/smoothen_image_hardware.git,2021-11-27 04:08:32+00:00,,0,Cl0udi/smoothen_image_hardware,432364608,Verilog,smoothen_image_hardware,1035,0,2021-11-27 04:12:09+00:00,[],https://api.github.com/licenses/mit
465,https://github.com/unal-edigital1-lab/lab04-2021-2-grupo06-2021-2.git,2021-12-01 13:36:48+00:00,lab04-2021-2-grupo06-2021-2 created by GitHub Classroom,0,unal-edigital1-lab/lab04-2021-2-grupo06-2021-2,433841044,Verilog,lab04-2021-2-grupo06-2021-2,8042,0,2022-01-10 22:57:15+00:00,[],None
466,https://github.com/LucasLobo7/Projeto-logico-elevador.git,2021-11-29 20:42:58+00:00,projeto de circuito puramente logico para controle de um elevador ,0,LucasLobo7/Projeto-logico-elevador,433191062,Verilog,Projeto-logico-elevador,693,0,2021-11-29 20:43:06+00:00,[],None
467,https://github.com/NickBishop97/Verilog-VGA-Pong-Game.git,2021-11-29 20:01:57+00:00,A VGA Pong game for the Nexus A7 board,0,NickBishop97/Verilog-VGA-Pong-Game,433180265,Verilog,Verilog-VGA-Pong-Game,9,0,2022-12-08 00:36:32+00:00,"['fpga', 'game', 'verilog']",None
468,https://github.com/AaranP/Lab_6.git,2021-11-29 23:50:21+00:00,,0,AaranP/Lab_6,433232870,Verilog,Lab_6,4,0,2021-12-31 03:28:33+00:00,[],None
469,https://github.com/Vaishnavi1627/axi_async.fifo_axi.git,2021-11-30 06:03:08+00:00,,0,Vaishnavi1627/axi_async.fifo_axi,433313344,Verilog,axi_async.fifo_axi,11,0,2021-11-30 06:15:54+00:00,[],None
470,https://github.com/t-c-huang/varilog-prepare.git,2021-12-02 01:01:34+00:00,,0,t-c-huang/varilog-prepare,434036897,Verilog,varilog-prepare,10711,0,2021-12-02 11:20:08+00:00,[],None
471,https://github.com/DangMinhTam382/CPU_SINGLE_CYCLE.git,2021-12-16 16:09:27+00:00,,0,DangMinhTam382/CPU_SINGLE_CYCLE,439051115,Verilog,CPU_SINGLE_CYCLE,467,0,2021-12-16 16:42:53+00:00,[],None
472,https://github.com/novaELLIAS/mediKitVerilog.git,2021-12-26 11:37:45+00:00,"Code for course de Digital System Design Experiment, BUPT 2021.",0,novaELLIAS/mediKitVerilog,441875827,Verilog,mediKitVerilog,3763,0,2021-12-30 19:14:04+00:00,[],https://api.github.com/licenses/gpl-3.0
473,https://github.com/AlexLassooij/RISC_Machine.git,2021-12-27 07:00:19+00:00,,0,AlexLassooij/RISC_Machine,442078137,Verilog,RISC_Machine,161,0,2021-12-27 07:08:14+00:00,[],None
474,https://github.com/FCHXWH/DRiLLS-Stable-Baselines3.git,2021-12-04 11:20:56+00:00,Implement a customized Gym environment 'LogicSynEnv',0,FCHXWH/DRiLLS-Stable-Baselines3,434881194,Verilog,DRiLLS-Stable-Baselines3,9120,0,2021-12-04 16:10:11+00:00,[],None
475,https://github.com/JoeyxSalazar/RISC-Processor.git,2021-12-12 19:53:36+00:00,,0,JoeyxSalazar/RISC-Processor,437642356,Verilog,RISC-Processor,14,0,2021-12-12 19:56:19+00:00,[],None
476,https://github.com/donn/Pathfinder.git,2021-12-20 21:19:57+00:00,Proof-of-concept RL for achieving timing closure,1,donn/Pathfinder,440309542,Verilog,Pathfinder,55,0,2022-03-04 14:54:42+00:00,[],https://api.github.com/licenses/apache-2.0
477,https://github.com/godoyfelix132/FFT.git,2021-12-19 06:02:26+00:00,FFT FPGA,0,godoyfelix132/FFT,439788415,Verilog,FFT,3762,0,2021-12-19 06:24:20+00:00,[],None
478,https://github.com/roman3017/caravel_mpw.git,2021-12-05 08:08:20+00:00,,0,roman3017/caravel_mpw,435108851,Verilog,caravel_mpw,2029968,0,2022-01-16 21:38:28+00:00,[],https://api.github.com/licenses/apache-2.0
479,https://github.com/hfrk/aes128.git,2021-12-08 23:18:20+00:00,Verilog implementation of 128-bit Advanced Encryption Standard (AES) algorithm,0,hfrk/aes128,436420415,Verilog,aes128,4,0,2021-12-08 23:21:48+00:00,['verilog'],None
480,https://github.com/Flawlesse/SIMD_256bit_ALU_Flawlesse.git,2021-12-08 18:04:30+00:00,Course project of synthesizable 256-bit SIMD ALU written in Verilog code.,0,Flawlesse/SIMD_256bit_ALU_Flawlesse,436344914,Verilog,SIMD_256bit_ALU_Flawlesse,4256,0,2022-10-07 15:21:54+00:00,[],None
481,https://github.com/waarrk/FPGA_CoraZ7-07S.git,2021-12-08 12:51:48+00:00,FPGAプログラミング大全 Xilinx編 2版 練習用,0,waarrk/FPGA_CoraZ7-07S,436246278,Verilog,FPGA_CoraZ7-07S,9,0,2021-12-08 14:00:10+00:00,[],None
482,https://github.com/unal-edigital1-lab/lab04-2021-2-grupo04-2021-2.git,2021-11-30 19:13:07+00:00,lab04-2021-2-grupo04-2021-2 created by GitHub Classroom,0,unal-edigital1-lab/lab04-2021-2-grupo04-2021-2,433555272,Verilog,lab04-2021-2-grupo04-2021-2,724,0,2022-01-10 08:59:54+00:00,[],None
483,https://github.com/DmitryZlobec/problems_012_019.git,2021-12-01 05:42:14+00:00,,0,DmitryZlobec/problems_012_019,433698466,Verilog,problems_012_019,9,0,2021-12-15 16:35:52+00:00,[],None
484,https://github.com/unal-edigital1-lab/lab04-2021-2-grupo09-2021-2.git,2021-11-28 19:05:51+00:00,,0,unal-edigital1-lab/lab04-2021-2-grupo09-2021-2,432800625,Verilog,lab04-2021-2-grupo09-2021-2,6674,0,2022-01-06 13:52:19+00:00,[],None
485,https://github.com/123swk123/some_examples.git,2021-11-28 03:35:35+00:00,,0,123swk123/some_examples,432610429,Verilog,some_examples,18,0,2021-12-09 06:30:01+00:00,[],None
486,https://github.com/TangentSplash/Advent-Of-Code-2021.git,2021-12-01 23:05:26+00:00,My solutions to the 2021 Advent of Code Problems,0,TangentSplash/Advent-Of-Code-2021,434013277,Verilog,Advent-Of-Code-2021,14,0,2021-12-09 21:34:25+00:00,[],None
487,https://github.com/hxt516/RTL-verilog.git,2021-12-08 09:43:21+00:00,A simple DFF,0,hxt516/RTL-verilog,436193193,Verilog,RTL-verilog,3,0,2021-12-08 13:26:37+00:00,[],None
488,https://github.com/qianchen-123/ptech.git,2021-12-03 21:14:16+00:00,polytech nantes 2021 etn5 project technique,0,qianchen-123/ptech,434735363,Verilog,ptech,59472,0,2021-12-03 22:04:35+00:00,[],None
489,https://github.com/r-vazquez/Equipo_4.git,2021-12-10 18:10:03+00:00,,0,r-vazquez/Equipo_4,437072391,Verilog,Equipo_4,222,0,2022-11-09 23:51:59+00:00,[],None
490,https://github.com/cwhaat/ECE260a_Lab3.git,2021-12-10 18:59:11+00:00,This repository contains the codes of all the FIR filters (and adders) implemented for Lab3 of ECE260a UCSD.,0,cwhaat/ECE260a_Lab3,437085007,Verilog,ECE260a_Lab3,198,0,2021-12-10 20:43:40+00:00,[],None
491,https://github.com/wickerwaka/ThickLines.git,2021-12-13 01:39:16+00:00,,0,wickerwaka/ThickLines,437701438,Verilog,ThickLines,90,0,2021-12-13 01:39:21+00:00,[],https://api.github.com/licenses/gpl-2.0
492,https://github.com/xiongdawei/MorseCodeReader.git,2021-12-05 03:31:17+00:00,CS233FP,0,xiongdawei/MorseCodeReader,435064654,Verilog,MorseCodeReader,15,0,2021-12-09 06:57:23+00:00,[],None
493,https://github.com/om-campbell/ECE287-Final-Project.git,2021-12-08 20:16:48+00:00,Simon Says light sequence game implemented on FPGA,0,om-campbell/ECE287-Final-Project,436380287,Verilog,ECE287-Final-Project,4009,0,2021-12-08 21:31:26+00:00,[],None
494,https://github.com/wzq1999/MIPS_PipelineCPU.git,2021-12-07 06:00:44+00:00,A simple multi-CPU written by verilog. Homework for CA.,0,wzq1999/MIPS_PipelineCPU,435761815,Verilog,MIPS_PipelineCPU,44,0,2021-12-07 06:18:16+00:00,[],None
495,https://github.com/floAfentaki/VGA-controller-for-FPGA.git,2021-12-07 14:36:50+00:00,Full synthesizable VGA controller using Verilog developed for XSA-3S1000 FPGA,0,floAfentaki/VGA-controller-for-FPGA,435914753,Verilog,VGA-controller-for-FPGA,8,0,2021-12-07 14:39:32+00:00,[],https://api.github.com/licenses/mit
496,https://github.com/amarjeet-saini/Blocks2-Design-Computer.git,2021-12-02 17:06:02+00:00,Contains some common modules written in Verilog for computer system design,0,amarjeet-saini/Blocks2-Design-Computer,434307100,Verilog,Blocks2-Design-Computer,7,0,2021-12-02 18:20:59+00:00,[],None
497,https://github.com/floAfentaki/DecryptionMessageSystem.git,2021-12-06 20:31:39+00:00,A simulated Decryption Message System using Verilog,0,floAfentaki/DecryptionMessageSystem,435638697,Verilog,DecryptionMessageSystem,90,0,2021-12-06 20:31:47+00:00,[],https://api.github.com/licenses/apache-2.0
498,https://github.com/wzawza123/my_digital_logic_project.git,2021-12-28 01:11:22+00:00,,0,wzawza123/my_digital_logic_project,442313308,Verilog,my_digital_logic_project,27190,0,2022-01-06 09:41:05+00:00,[],None
499,https://github.com/SXK96/learngit.git,2021-12-16 14:07:14+00:00,,0,SXK96/learngit,439011618,Verilog,learngit,1,0,2021-12-30 12:43:32+00:00,[],None
500,https://github.com/mathu-shiva/ECE241-Digital-Systems.git,2021-12-20 04:17:13+00:00,"First year digital logic course in the hardware language Verilog, consists of all the labs I completed for the course.",0,mathu-shiva/ECE241-Digital-Systems,440040162,Verilog,ECE241-Digital-Systems,35,0,2022-01-07 00:27:57+00:00,[],None
501,https://github.com/NimaSamadi007/fp_adder.git,2021-12-02 06:46:19+00:00,,0,NimaSamadi007/fp_adder,434111976,Verilog,fp_adder,252,0,2021-12-02 07:09:17+00:00,[],None
502,https://github.com/xw1216/MIPS40-CPUDynamicPipe.git,2021-12-06 08:35:11+00:00,A simple MIPS pipeline CPU implemented 40 instructions and Co-proceessor 0 . ,0,xw1216/MIPS40-CPUDynamicPipe,435418388,Verilog,MIPS40-CPUDynamicPipe,50,0,2022-02-26 11:07:54+00:00,"['mips', 'cpu', 'pipeline']",None
503,https://github.com/wokwi/silife.git,2021-12-02 17:58:06+00:00,"Game of Life, in Silicon",1,wokwi/silife,434322678,Verilog,silife,205,0,2022-01-02 16:58:30+00:00,[],None
504,https://github.com/RolandoAraujo/MIPS_MULTI_ARAUJO_ROLANDO.git,2021-12-05 23:46:42+00:00,T5- Data Path ,0,RolandoAraujo/MIPS_MULTI_ARAUJO_ROLANDO,435306717,Verilog,MIPS_MULTI_ARAUJO_ROLANDO,24,0,2021-12-06 06:06:22+00:00,[],None
505,https://github.com/Joyonclear/Systolic_array.git,2021-12-03 15:31:16+00:00,systolic array design based on chisel,0,Joyonclear/Systolic_array,434644981,Verilog,Systolic_array,291,0,2021-12-12 17:06:07+00:00,[],None
506,https://github.com/Mo-DuQian/Sample-CPU-main.git,2021-12-19 03:58:01+00:00,,0,Mo-DuQian/Sample-CPU-main,439770530,Verilog,Sample-CPU-main,510,0,2021-12-19 08:38:01+00:00,[],None
507,https://github.com/dukmu/verilog_ln.git,2021-12-18 13:20:17+00:00,,0,dukmu/verilog_ln,439620301,Verilog,verilog_ln,84,0,2021-12-18 13:56:20+00:00,[],None
508,https://github.com/Dhyey-Thummar/NoC-implementation-using-Verilog.git,2021-12-18 14:47:26+00:00,A simple parameterized implementation of the NoC Router using System Verilog,0,Dhyey-Thummar/NoC-implementation-using-Verilog,439640162,Verilog,NoC-implementation-using-Verilog,3,0,2021-12-19 16:12:43+00:00,[],None
509,https://github.com/andres-alcala-gtz/mips.git,2021-12-27 16:59:40+00:00,Simplified MIPS Architecture,0,andres-alcala-gtz/mips,442220490,Verilog,mips,10,0,2021-12-27 17:00:45+00:00,[],None
510,https://github.com/codefair114/UFCache.git,2021-12-25 10:31:58+00:00,Verilog Code for the UFCache project,0,codefair114/UFCache,441656199,Verilog,UFCache,382,0,2021-12-25 11:10:57+00:00,[],None
511,https://github.com/elvislzy/4-stage-rv32i.git,2021-12-28 20:20:13+00:00,single cycle,0,elvislzy/4-stage-rv32i,442574416,Verilog,4-stage-rv32i,6488,0,2022-03-04 19:02:29+00:00,[],None
512,https://github.com/vinniegnsb/rv32i-softcore.git,2021-12-30 23:43:35+00:00,RV32I softcore project for practice implementing computer architecture concepts with RISC-V,0,vinniegnsb/rv32i-softcore,443208540,Verilog,rv32i-softcore,7,0,2021-12-31 01:12:14+00:00,[],None
513,https://github.com/LacasaDepappel/LAB5.git,2021-12-31 07:10:42+00:00,,0,LacasaDepappel/LAB5,443281165,Verilog,LAB5,10,0,2021-12-31 07:30:58+00:00,[],None
514,https://github.com/yuhanqin/out-of-order-processor-for-riscv.git,2021-12-23 06:23:42+00:00,"This is a two-issue out-of-order processor for TinyRV2. It contains eight stages, as descripted as follow:uses unified physical register file for register renaming.",0,yuhanqin/out-of-order-processor-for-riscv,441083708,Verilog,out-of-order-processor-for-riscv,193,0,2021-12-23 07:49:49+00:00,[],None
515,https://github.com/Siri227/major_project_GRU.git,2021-12-17 07:07:58+00:00,,0,Siri227/major_project_GRU,439242338,Verilog,major_project_GRU,23,0,2022-01-01 11:06:08+00:00,[],None
516,https://github.com/Cooksen/simple-32bit-alu.git,2021-12-20 08:07:11+00:00,Simple 32bit alu created by verilog,0,Cooksen/simple-32bit-alu,440089761,Verilog,simple-32bit-alu,1,0,2021-12-20 08:11:07+00:00,[],None
517,https://github.com/SebastianLievano/morseEncoder.git,2021-12-20 08:30:58+00:00,A verilog program that outputs morse code for a letter with a single signal output.,0,SebastianLievano/morseEncoder,440096078,Verilog,morseEncoder,1,0,2021-12-20 08:31:52+00:00,[],None
518,https://github.com/mbalestrini/caravel_timing_analysis.git,2021-12-20 19:53:14+00:00,,0,mbalestrini/caravel_timing_analysis,440290407,Verilog,caravel_timing_analysis,23611,0,2021-12-23 22:23:43+00:00,[],None
519,https://github.com/Niveddita/Fire-Alarm-System.git,2021-12-23 09:57:33+00:00,Fire Alarm System using Basys-3 FPGA board,0,Niveddita/Fire-Alarm-System,441136228,Verilog,Fire-Alarm-System,2527,0,2021-12-23 10:02:01+00:00,[],None
520,https://github.com/lulu9312/updown_caravel.git,2021-12-26 09:58:10+00:00,updown counter for efabless MPW-4,0,lulu9312/updown_caravel,441858591,Verilog,updown_caravel,4119,0,2022-01-11 00:58:17+00:00,[],https://api.github.com/licenses/apache-2.0
521,https://github.com/mbinte/Avalon_Slave_interface.git,2021-12-07 17:30:34+00:00,Prototype of a single Avalon Slave Interafec,0,mbinte/Avalon_Slave_interface,435970626,Verilog,Avalon_Slave_interface,171,0,2024-03-01 01:24:11+00:00,[],None
522,https://github.com/victormanuel7/MIPS_Multi_Sandoval_Victor.git,2021-12-06 05:34:22+00:00,,0,victormanuel7/MIPS_Multi_Sandoval_Victor,435372613,Verilog,MIPS_Multi_Sandoval_Victor,22,0,2023-11-10 16:34:47+00:00,[],None
523,https://github.com/adhilartz/my_fgpa.git,2021-12-16 10:40:46+00:00,,0,adhilartz/my_fgpa,438952319,Verilog,my_fgpa,7,0,2021-12-16 11:22:14+00:00,[],None
524,https://github.com/dlleonardo/verilog.git,2021-12-15 15:50:18+00:00,"Logical networks assignments/exams (A.Y. 2021-2022), Verilog HDL",0,dlleonardo/verilog,438686030,Verilog,verilog,754,0,2022-07-07 05:42:12+00:00,['verilog'],None
525,https://github.com/yuzeng2333/ILA_Pico.git,2021-12-13 19:21:54+00:00,,0,yuzeng2333/ILA_Pico,437997237,Verilog,ILA_Pico,734,0,2021-12-15 00:46:11+00:00,[],https://api.github.com/licenses/mit
526,https://github.com/Kerryzhaotheman/ELEC4320_Proj.git,2021-12-14 20:29:39+00:00,,0,Kerryzhaotheman/ELEC4320_Proj,438390915,Verilog,ELEC4320_Proj,82,0,2021-12-16 08:24:09+00:00,[],None
527,https://github.com/Wankanda-143/Hardware-Implementation-of-AES-in-Verilog.git,2021-12-18 08:34:25+00:00,AES Project,0,Wankanda-143/Hardware-Implementation-of-AES-in-Verilog,439565880,Verilog,Hardware-Implementation-of-AES-in-Verilog,1433,0,2021-12-18 08:56:38+00:00,[],None
528,https://github.com/nicoladilillo/Testing-Assignment.git,2021-12-18 08:00:55+00:00,,0,nicoladilillo/Testing-Assignment,439560269,Verilog,Testing-Assignment,157812,0,2022-01-16 11:16:03+00:00,[],
529,https://github.com/jplace111/Lab-8.git,2021-12-17 17:10:27+00:00,,0,jplace111/Lab-8,439405997,Verilog,Lab-8,6,0,2021-12-17 22:04:58+00:00,[],None
530,https://github.com/gb6612/risc4b.git,2021-12-18 10:13:00+00:00,4 bits RISC architecture,0,gb6612/risc4b,439583675,Verilog,risc4b,5209,0,2021-12-20 07:32:21+00:00,[],
531,https://github.com/godoyfelix132/Verilog_Codes_2.git,2021-12-19 07:04:17+00:00,,0,godoyfelix132/Verilog_Codes_2,439798086,Verilog,Verilog_Codes_2,129910,0,2021-12-19 07:07:27+00:00,[],None
532,https://github.com/SeungjaeLim/EE303_Digital_System_Design.git,2021-12-26 05:00:20+00:00,EE303_Digital_System_Design,0,SeungjaeLim/EE303_Digital_System_Design,441812907,Verilog,EE303_Digital_System_Design,8,0,2021-12-26 05:10:29+00:00,[],None
533,https://github.com/unal-edigital1-lab/lab04-2021-2-grupo09-2021-2-1.git,2021-12-27 02:59:43+00:00,lab04-2021-2-grupo09-2021-2-1 created by GitHub Classroom,0,unal-edigital1-lab/lab04-2021-2-grupo09-2021-2-1,442034724,Verilog,lab04-2021-2-grupo09-2021-2-1,1,0,2021-12-27 02:59:47+00:00,[],None
534,https://github.com/Billkyriaf/Digital_Hardware_Systems_1.git,2021-12-26 18:28:30+00:00,Simple CPU design using the Xilinx ISE tool,0,Billkyriaf/Digital_Hardware_Systems_1,441958197,Verilog,Digital_Hardware_Systems_1,4027,0,2022-01-20 16:20:11+00:00,"['verilog', 'hdl', 'hardware-designs']",None
535,https://github.com/Hafeezizaz/Smart-car-parking-management-system.git,2021-12-29 09:39:01+00:00,,0,Hafeezizaz/Smart-car-parking-management-system,442725696,Verilog,Smart-car-parking-management-system,678,0,2021-12-29 09:43:41+00:00,[],None
536,https://github.com/yuvalbraun/LIVIPS.git,2021-12-28 11:33:33+00:00,,1,yuvalbraun/LIVIPS,442443356,Verilog,LIVIPS,610520,0,2022-05-08 13:24:38+00:00,[],None
537,https://github.com/febz012/Pick-and-place-Bot.git,2021-12-31 09:10:17+00:00,A pick-and-place bot powered using an FPGA.,0,febz012/Pick-and-place-Bot,443304586,Verilog,Pick-and-place-Bot,1384,0,2023-08-15 11:47:39+00:00,[],None
538,https://github.com/jangddol/KUCMB_Verilog.git,2021-12-31 06:57:36+00:00,,0,jangddol/KUCMB_Verilog,443278434,Verilog,KUCMB_Verilog,28,0,2022-01-01 06:40:58+00:00,[],None
539,https://github.com/Diyarmo/ARM.git,2021-12-03 19:49:36+00:00,,0,Diyarmo/ARM,434716099,Verilog,ARM,74,0,2022-01-05 18:14:56+00:00,[],None
540,https://github.com/VARZero/cpu-2wayOoO.git,2021-12-04 00:37:11+00:00,,0,VARZero/cpu-2wayOoO,434771129,Verilog,cpu-2wayOoO,1,0,2021-12-26 11:52:43+00:00,[],None
541,https://github.com/JordanUFlores/MIPS_MULTI_Ulloa_Jordan.git,2021-12-03 18:43:48+00:00,,0,JordanUFlores/MIPS_MULTI_Ulloa_Jordan,434699616,Verilog,MIPS_MULTI_Ulloa_Jordan,14,0,2021-12-06 03:04:04+00:00,[],None
542,https://github.com/maxregg01/Circuits-Labs.git,2021-12-03 18:30:15+00:00,,0,maxregg01/Circuits-Labs,434696280,Verilog,Circuits-Labs,1,0,2021-12-03 18:40:04+00:00,[],None
543,https://github.com/maruAYA/TX_FPGA_verilog.git,2021-12-09 01:51:41+00:00,发射版开发所使用的FPGA工程,0,maruAYA/TX_FPGA_verilog,436449717,Verilog,TX_FPGA_verilog,19,0,2021-12-09 05:39:16+00:00,[],None
544,https://github.com/deepbooks/make-verilog-tb-rtl.git,2021-12-05 13:13:36+00:00,Make verilog descripted hardware module with testbench and generate RTL Diagram.,0,deepbooks/make-verilog-tb-rtl,435170935,Verilog,make-verilog-tb-rtl,38,0,2021-12-06 07:27:38+00:00,[],https://api.github.com/licenses/gpl-3.0
545,https://github.com/linkingmon/ICC_practice.git,2021-12-06 10:25:15+00:00,,0,linkingmon/ICC_practice,435452163,Verilog,ICC_practice,4640,0,2022-09-09 11:34:31+00:00,[],None
546,https://github.com/usd-cs/comp3-fa21-p5.git,2021-12-06 18:34:27+00:00,Final Group projec. Building a stop watch,0,usd-cs/comp3-fa21-p5,435606360,Verilog,comp3-fa21-p5,51,0,2021-12-06 18:37:15+00:00,[],None
547,https://github.com/ECSAlab/Enocoro-128v2.git,2021-12-06 19:34:11+00:00,Enocoro-128v2 Stream Cipher verilog code,0,ECSAlab/Enocoro-128v2,435623149,Verilog,Enocoro-128v2,8,0,2021-12-06 19:51:32+00:00,[],None
548,https://github.com/Ozratzon/UART-Project-Verilog.git,2021-12-06 11:39:58+00:00,,0,Ozratzon/UART-Project-Verilog,435473831,Verilog,UART-Project-Verilog,1166,0,2021-12-14 01:12:11+00:00,[],None
549,https://github.com/KashifInayat/HA_FSA_ML_IEEE_TVLSI.git,2021-12-07 07:28:30+00:00,,0,KashifInayat/HA_FSA_ML_IEEE_TVLSI,435783717,Verilog,HA_FSA_ML_IEEE_TVLSI,49200,0,2022-11-25 02:14:31+00:00,[],https://api.github.com/licenses/apache-2.0
550,https://github.com/kenwoof4/Pipelined_processor.git,2021-12-06 03:27:46+00:00,,0,kenwoof4/Pipelined_processor,435348154,Verilog,Pipelined_processor,834,0,2022-01-31 17:29:35+00:00,[],None
551,https://github.com/xuleeyoung/VE370_memory.git,2021-12-08 01:37:45+00:00,,0,xuleeyoung/VE370_memory,436080116,Verilog,VE370_memory,10,0,2022-01-27 14:49:16+00:00,[],None
552,https://github.com/Talha771/dld.git,2021-11-27 09:00:29+00:00,,0,Talha771/dld,432413474,Verilog,dld,1,0,2021-11-27 09:05:59+00:00,[],None
553,https://github.com/Fangt-ing/Study_reports.git,2021-11-29 01:11:38+00:00,This is a study report for Materials Characterisation and Testing,0,Fangt-ing/Study_reports,432866319,Verilog,Study_reports,14302,0,2022-05-14 17:08:14+00:00,[],None
554,https://github.com/adithyasunil26/TAP-Controller.git,2021-11-29 04:21:35+00:00,,0,adithyasunil26/TAP-Controller,432903415,Verilog,TAP-Controller,98,0,2022-10-29 12:31:06+00:00,[],https://api.github.com/licenses/mit
555,https://github.com/AposKonti/Simple-DES-Verilog.git,2021-11-30 17:07:57+00:00,A hardware implementation of the S-DES algorithm using Verilog HDL,0,AposKonti/Simple-DES-Verilog,433516858,Verilog,Simple-DES-Verilog,1237,0,2021-12-21 16:09:49+00:00,[],None
556,https://github.com/Furqan-Lamp/Risc-V-Processor.git,2021-11-30 12:33:34+00:00,,0,Furqan-Lamp/Risc-V-Processor,433423916,Verilog,Risc-V-Processor,226,0,2021-12-31 07:08:03+00:00,[],None
557,https://github.com/hjnauman/low-power-array-multipliers.git,2021-11-30 23:42:35+00:00,This project displays a generic nxn implementation of three array multipliers. A standard nxn array multiplier is given as a starting point for the following two low power array multipliers. Column bypassed and row bypassed array multipliers were implemented during this project to display the benefits of both implementations. All testing was performed in Vivado's HLS tools. ,0,hjnauman/low-power-array-multipliers,433621701,Verilog,low-power-array-multipliers,22,0,2021-11-30 23:45:09+00:00,[],https://api.github.com/licenses/gpl-3.0
558,https://github.com/ducphuongbk01/CPU-RISC-V.git,2021-12-01 01:19:40+00:00,,0,ducphuongbk01/CPU-RISC-V,433641266,Verilog,CPU-RISC-V,1367,0,2022-04-25 14:47:10+00:00,[],None
559,https://github.com/okantorun/CSE-331.git,2021-12-01 08:18:39+00:00,Computer Organization Course Assignments.,0,okantorun/CSE-331,433740353,Verilog,CSE-331,1685,0,2022-01-25 17:43:43+00:00,[],None
560,https://github.com/jquinonezb/Sistema_Mem_Quinonez_Jose.git,2021-12-01 02:40:38+00:00,Repository to update the System Memory of MIPS microprocessor,0,jquinonezb/Sistema_Mem_Quinonez_Jose,433658943,Verilog,Sistema_Mem_Quinonez_Jose,4,0,2021-12-01 02:43:25+00:00,[],None
561,https://github.com/SVVladislav/sarych-prmd4x-cpld.git,2021-11-28 13:15:14+00:00,PRMD4-X CPLD Firmware,0,SVVladislav/sarych-prmd4x-cpld,432716929,Verilog,sarych-prmd4x-cpld,12,0,2021-11-28 13:33:42+00:00,[],None
562,https://github.com/urish/uri2asic.git,2021-11-29 10:53:37+00:00,,0,urish/uri2asic,433005768,Verilog,uri2asic,7,0,2021-11-29 14:34:40+00:00,[],None
563,https://github.com/MarinosGkizas/Special-Topics-in-Digital-Systems-Design.git,2021-11-28 18:40:59+00:00,,0,MarinosGkizas/Special-Topics-in-Digital-Systems-Design,432795309,Verilog,Special-Topics-in-Digital-Systems-Design,9105,0,2023-12-12 21:40:05+00:00,[],None
564,https://github.com/984705/computer-system-exp.git,2021-11-27 12:36:51+00:00,,1,984705/computer-system-exp,432456886,Verilog,computer-system-exp,5535,0,2021-12-21 07:36:44+00:00,[],None
565,https://github.com/C8620/MU0-Design.git,2021-12-25 18:48:03+00:00,MU0 (Manchester University 0) is a very simple processor that is commonly used for education purposes.,0,C8620/MU0-Design,441739339,Verilog,MU0-Design,11,0,2023-02-19 01:02:34+00:00,[],None
566,https://github.com/zhangseammm/ConvolutionDecode.git,2021-12-15 05:11:08+00:00,Convolution encode and decode，turbo code,0,zhangseammm/ConvolutionDecode,438502401,Verilog,ConvolutionDecode,563,0,2023-10-08 16:35:43+00:00,[],None
567,https://github.com/wwwce01/uhd.git,2021-11-27 11:04:41+00:00,,0,wwwce01/uhd,432437474,Verilog,uhd,124861,0,2021-11-27 11:17:18+00:00,[],
568,https://github.com/zelose19/PHYS-332-Digital-Circuits-Labs.git,2021-12-03 18:58:18+00:00,,0,zelose19/PHYS-332-Digital-Circuits-Labs,434703080,,PHYS-332-Digital-Circuits-Labs,5292,0,2021-12-03 18:58:20+00:00,[],None
569,https://github.com/justincavalli/Software-Multiplexed-Display.git,2021-12-03 19:59:35+00:00,,0,justincavalli/Software-Multiplexed-Display,434718419,Verilog,Software-Multiplexed-Display,45,0,2023-05-21 05:03:36+00:00,[],None
570,https://github.com/MukthipradaGM/DDCO.git,2021-12-07 06:31:45+00:00,,0,MukthipradaGM/DDCO,435769398,Verilog,DDCO,637,0,2021-12-08 10:31:38+00:00,[],None
571,https://github.com/leonardods2007/SDC.git,2021-12-17 19:39:31+00:00,Implementación de filtro polifásico en HDL,0,leonardods2007/SDC,439441878,Verilog,SDC,65,0,2021-12-17 20:33:32+00:00,[],None
572,https://github.com/HappyNimbus/ShimpGame.git,2021-12-20 00:56:43+00:00,,0,HappyNimbus/ShimpGame,440003932,Verilog,ShimpGame,8,0,2021-12-22 07:43:39+00:00,[],None
573,https://github.com/Ibru1729/AES_RTL.git,2021-12-20 11:05:51+00:00,,0,Ibru1729/AES_RTL,440139665,Verilog,AES_RTL,21,0,2022-02-05 19:28:55+00:00,[],https://api.github.com/licenses/gpl-3.0
574,https://github.com/0xjmux/MIPS32.git,2021-12-17 18:33:22+00:00,Pipelined MIPS32 Processor Built in Verilog ,0,0xjmux/MIPS32,439427454,Verilog,MIPS32,195,0,2021-12-17 18:59:57+00:00,[],None
575,https://github.com/duyang92/STMS.git,2021-12-21 13:06:40+00:00,,3,duyang92/STMS,440519927,Verilog,STMS,15,0,2022-01-07 02:23:01+00:00,[],None
576,https://github.com/LakyG/RISCV_CPU.git,2021-12-23 18:24:32+00:00,,0,LakyG/RISCV_CPU,441264058,Verilog,RISCV_CPU,1282,0,2021-12-23 18:25:57+00:00,[],None
577,https://github.com/AnasIbrahim1/Digital_Calculator.git,2021-12-13 10:25:00+00:00,,0,AnasIbrahim1/Digital_Calculator,437828163,Verilog,Digital_Calculator,2,0,2021-12-13 10:30:21+00:00,[],None
578,https://github.com/AnasIbrahim1/Digital_Lock.git,2021-12-13 11:36:25+00:00,,0,AnasIbrahim1/Digital_Lock,437848990,Verilog,Digital_Lock,2,0,2021-12-13 11:41:24+00:00,[],None
579,https://github.com/AnasIbrahim1/Digital_Clock.git,2021-12-13 11:42:45+00:00,,0,AnasIbrahim1/Digital_Clock,437850787,Verilog,Digital_Clock,1,0,2021-12-13 11:45:29+00:00,[],None
580,https://github.com/apond308/VPR-Benchmarking.git,2021-12-14 16:12:23+00:00,,0,apond308/VPR-Benchmarking,438318616,Verilog,VPR-Benchmarking,1786,0,2022-02-07 19:29:11+00:00,[],None
581,https://github.com/Arima9/Sistema_Mem_Rivera_Andres.git,2021-11-27 04:51:34+00:00,,0,Arima9/Sistema_Mem_Rivera_Andres,432370909,Verilog,Sistema_Mem_Rivera_Andres,4,0,2021-12-17 01:40:18+00:00,[],None
582,https://github.com/AnuragDhungel/Hardware_AES_ENCRYPTION_DECRYPTION_Circuit.git,2021-11-27 00:39:24+00:00,,0,AnuragDhungel/Hardware_AES_ENCRYPTION_DECRYPTION_Circuit,432333689,Verilog,Hardware_AES_ENCRYPTION_DECRYPTION_Circuit,9711,0,2021-11-27 00:55:15+00:00,[],https://api.github.com/licenses/mit
583,https://github.com/Aray-S/FPGA_course.git,2021-11-30 07:34:22+00:00,University FPGA course: Fibonacci,0,Aray-S/FPGA_course,433336136,Verilog,FPGA_course,109,0,2022-09-10 12:24:51+00:00,[],https://api.github.com/licenses/mit
584,https://github.com/lemmeristan/serial_flash_quad_output_cached_hexdump_serial.git,2021-11-28 15:51:39+00:00,,0,lemmeristan/serial_flash_quad_output_cached_hexdump_serial,432755722,Verilog,serial_flash_quad_output_cached_hexdump_serial,19,0,2021-12-03 22:19:40+00:00,[],None
585,https://github.com/briankwu2/CE4304-MultiCycleComputer-Verilog.git,2021-12-27 21:37:54+00:00,"A multi-cycle computer designed in verilog. Runs simple pseudocode with assembly language, and has fully functional assembly language. Made for CE 4304 Final Project.",0,briankwu2/CE4304-MultiCycleComputer-Verilog,442279092,Verilog,CE4304-MultiCycleComputer-Verilog,4485,0,2022-09-12 23:25:41+00:00,[],None
586,https://github.com/haha12138138/RHBD_faultInjection.git,2021-12-28 04:17:10+00:00,,0,haha12138138/RHBD_faultInjection,442346472,Verilog,RHBD_faultInjection,422,0,2021-12-28 04:31:33+00:00,[],None
587,https://github.com/asimahsan1990/riscv_single_cycle.git,2021-11-30 12:33:23+00:00,,0,asimahsan1990/riscv_single_cycle,433423868,Verilog,riscv_single_cycle,9,0,2021-12-06 11:48:47+00:00,[],None
588,https://github.com/huaixil/ILA_composition.git,2021-12-12 19:05:07+00:00,Case studies for ILA composition model and verification,0,huaixil/ILA_composition,437632408,Verilog,ILA_composition,3870,0,2022-05-27 14:46:17+00:00,[],https://api.github.com/licenses/mit
589,https://github.com/OVGN/Generic.git,2021-12-12 20:54:01+00:00,,0,OVGN/Generic,437654144,Verilog,Generic,8,0,2021-12-12 22:45:30+00:00,[],https://api.github.com/licenses/apache-2.0
590,https://github.com/DanielSimone/ECE206-Lab-1.git,2021-12-12 23:39:32+00:00,Simple Combinational Logic,0,DanielSimone/ECE206-Lab-1,437681842,Verilog,ECE206-Lab-1,816,0,2021-12-12 23:39:49+00:00,[],None
591,https://github.com/K10SHI/CPE_113_Finals_CODE.git,2021-12-11 01:21:33+00:00,CPE FINALS _ CODE,0,K10SHI/CPE_113_Finals_CODE,437157729,Verilog,CPE_113_Finals_CODE,3,0,2021-12-11 01:25:04+00:00,[],None
592,https://github.com/EmbeddedDojo/ULX3S_Examples.git,2021-12-25 19:46:11+00:00,ULX3S Lattice board examples,0,EmbeddedDojo/ULX3S_Examples,441747650,Verilog,ULX3S_Examples,35,0,2022-01-04 17:01:45+00:00,[],https://api.github.com/licenses/apache-2.0
593,https://github.com/AnvithPabba/CompOrg-IITM.git,2021-12-30 07:16:09+00:00,,0,AnvithPabba/CompOrg-IITM,442997741,Verilog,CompOrg-IITM,4979,0,2021-12-30 07:18:27+00:00,[],None
594,https://github.com/gin31259461/FPGA_Final_Project.git,2021-12-30 15:56:07+00:00,,0,gin31259461/FPGA_Final_Project,443120195,Verilog,FPGA_Final_Project,10588,0,2023-11-05 07:19:09+00:00,[],None
595,https://github.com/fanzhixiang/CLOCK.git,2021-12-09 14:46:42+00:00,纯数字元器件搭建的倍频电路,0,fanzhixiang/CLOCK,436652636,,CLOCK,6398,0,2023-11-16 05:57:06+00:00,[],https://api.github.com/licenses/gpl-3.0
596,https://github.com/J-CharanSai/Computer-organization.git,2021-12-02 08:23:33+00:00,COA lab of IIT KGP,0,J-CharanSai/Computer-organization,434138426,Verilog,Computer-organization,2800,0,2021-12-02 08:26:52+00:00,[],None
597,https://github.com/DevilSmith/RISCV-SingleCycle-Processor.git,2021-11-30 09:24:18+00:00,Verilog RISC-V Single Cycle processor,0,DevilSmith/RISCV-SingleCycle-Processor,433367655,Verilog,RISCV-SingleCycle-Processor,1186,0,2023-02-19 20:52:45+00:00,[],https://api.github.com/licenses/mit
598,https://github.com/pbeltram/hdl-analog.git,2021-12-05 18:16:37+00:00,Fork of Analog HDL (https://github.com/analogdevicesinc/hdl).,0,pbeltram/hdl-analog,435243972,Verilog,hdl-analog,21587,0,2022-12-29 09:38:13+00:00,[],
599,https://github.com/josefabio1127/Contador_Pulsos.git,2021-12-19 21:18:46+00:00,"Este proyecto consiste en un contador de pulsos, el cual solo toma como válidos, los pulsos que tienen una duración mínima de 4 ciclos de reloj (para evitar conteos erróneos debido al ruido en la señal de entrada). La salida del sistema corresponde a 2 señales de 4 bits cada una, codificada en BCD (una para mostrar las unidades, y otra para las decenas del conteo). ",0,josefabio1127/Contador_Pulsos,439970050,Verilog,Contador_Pulsos,1202,0,2021-12-19 21:23:02+00:00,[],None
600,https://github.com/XYxiyang/dynamicPipeline.git,2021-12-18 02:18:13+00:00,,0,XYxiyang/dynamicPipeline,439508485,Verilog,dynamicPipeline,16,0,2022-02-27 06:52:09+00:00,[],None
601,https://github.com/AbhnerAdriel/Microwave_Project.git,2021-12-18 21:53:05+00:00,Final project of the subject of Digital Systems (2nd Period) of the Computer Science Course at the Universidade Federal of Pernambuco (Cin-UFPE),1,AbhnerAdriel/Microwave_Project,439722146,Verilog,Microwave_Project,245,0,2022-03-27 03:31:14+00:00,[],None
602,https://github.com/Horachan22/Logic-Circuit.git,2021-12-18 17:53:38+00:00,,0,Horachan22/Logic-Circuit,439680410,Verilog,Logic-Circuit,17,0,2021-12-18 17:57:12+00:00,[],None
603,https://github.com/Samaksh36/RISC-V-Implementation.git,2021-12-16 21:10:38+00:00,RTL Implementation of 5 Stage RV32I ISA,0,Samaksh36/RISC-V-Implementation,439127872,,RISC-V-Implementation,3149,0,2022-05-21 09:02:53+00:00,[],None
604,https://github.com/SankHyan24/greedy-snake.git,2021-12-21 10:41:47+00:00,,0,SankHyan24/greedy-snake,440481128,Verilog,greedy-snake,670,0,2023-07-28 06:29:11+00:00,[],None
605,https://github.com/weslley-batista/CPU_Project.git,2021-12-24 17:46:31+00:00,Processador de arquitetura MIPS desenvolvido em Verilog,0,weslley-batista/CPU_Project,441524800,Verilog,CPU_Project,259,0,2022-01-18 03:57:35+00:00,[],None
606,https://github.com/2267413596/CO_2021_Multicycle-Processor.git,2021-12-21 07:27:50+00:00,Pxt's personal CO work,0,2267413596/CO_2021_Multicycle-Processor,440428174,Verilog,CO_2021_Multicycle-Processor,2490,0,2021-12-24 00:40:03+00:00,[],None
607,https://github.com/c-w-m/ece5745-tut8-sram.git,2021-12-28 19:00:40+00:00,,0,c-w-m/ece5745-tut8-sram,442557804,Verilog,ece5745-tut8-sram,10913,0,2021-12-28 19:06:54+00:00,[],None
608,https://github.com/Sean-Bradley/Seven-Segment-Display-Example.git,2021-12-30 22:24:58+00:00,Cyclone IV FPGA Seven Segment Display Example,0,Sean-Bradley/Seven-Segment-Display-Example,443197294,Verilog,Seven-Segment-Display-Example,7937,0,2021-12-30 22:59:20+00:00,[],https://api.github.com/licenses/mit
609,https://github.com/luke-mckay/cr_ram_r_w_2c.git,2021-12-31 23:58:42+00:00,A simple parameterized RAM for things like an asynchronous FIFO.,0,luke-mckay/cr_ram_r_w_2c,443443277,Verilog,cr_ram_r_w_2c,2,0,2021-12-31 23:59:32+00:00,[],None
610,https://github.com/hanle1220/SoC_SPI_IP_Module.git,2021-12-31 05:35:48+00:00,Design of a SPI IP Core and Linux Device Drivers,0,hanle1220/SoC_SPI_IP_Module,443262835,Verilog,SoC_SPI_IP_Module,6,0,2022-03-31 17:07:13+00:00,[],None
611,https://github.com/LavanyaKarthikeyan/SystolicArrayAccelerator.git,2021-12-31 23:06:25+00:00,,0,LavanyaKarthikeyan/SystolicArrayAccelerator,443438379,Verilog,SystolicArrayAccelerator,1957,0,2021-12-31 23:24:07+00:00,[],None
612,https://github.com/Archit286/Verilog_Practice.git,2021-12-17 10:04:39+00:00,,0,Archit286/Verilog_Practice,439288470,Verilog,Verilog_Practice,8,0,2021-12-30 18:50:29+00:00,[],None
613,https://github.com/Tachikoma42/8-bit-microprocessor.git,2021-12-20 17:21:31+00:00,8-bit microprocessor running in ModelSim.,0,Tachikoma42/8-bit-microprocessor,440251615,Verilog,8-bit-microprocessor,1620,0,2022-09-15 03:54:03+00:00,[],None
614,https://github.com/harshmishraiiit/Harsh_Projects.git,2021-12-15 08:26:47+00:00,,0,harshmishraiiit/Harsh_Projects,438551348,Verilog,Harsh_Projects,1323,0,2021-12-15 08:30:00+00:00,[],None
615,https://github.com/luyaohan1001/5-stage-MIPS.git,2021-12-03 18:15:47+00:00,,0,luyaohan1001/5-stage-MIPS,434692513,Verilog,5-stage-MIPS,29825,0,2021-12-03 18:34:37+00:00,[],None
616,https://github.com/Khal1dA/pr4done.git,2021-12-08 19:46:32+00:00,done,0,Khal1dA/pr4done,436372634,Verilog,pr4done,13,0,2021-12-08 19:46:50+00:00,[],None
617,https://github.com/shirokooma/CECS361-Final-GameOfLife.git,2021-12-07 22:41:42+00:00,,0,shirokooma/CECS361-Final-GameOfLife,436046248,,CECS361-Final-GameOfLife,205,0,2021-12-07 22:41:44+00:00,[],None
618,https://github.com/kinlead/Haasoscope.git,2021-12-10 07:11:29+00:00,,0,kinlead/Haasoscope,436884973,Verilog,Haasoscope,80914,0,2021-12-10 10:14:10+00:00,[],https://api.github.com/licenses/mit
619,https://github.com/vvelfii/test1.git,2021-11-27 14:31:18+00:00,,0,vvelfii/test1,432483456,Verilog,test1,32,0,2021-12-01 09:07:35+00:00,[],None
620,https://github.com/unal-edigital1-lab/lab04-2021-2-grupo08-2021-2.git,2021-12-01 03:26:29+00:00,lab04-2021-2-grupo08-2021-2 created by GitHub Classroom,0,unal-edigital1-lab/lab04-2021-2-grupo08-2021-2,433669300,Verilog,lab04-2021-2-grupo08-2021-2,177,0,2021-12-01 03:26:33+00:00,[],None
621,https://github.com/hjnauman/narrow-width-array-multiplier.git,2021-11-30 23:56:53+00:00,Verilog implementation of a narrow width array multiplier.,0,hjnauman/narrow-width-array-multiplier,433624543,Verilog,narrow-width-array-multiplier,86,0,2021-12-01 00:35:14+00:00,[],https://api.github.com/licenses/gpl-3.0
622,https://github.com/wokwi/verispell.git,2021-12-01 20:12:21+00:00,SPELL implementation in Verilog,1,wokwi/verispell,433970655,Verilog,verispell,85,0,2023-01-31 19:20:06+00:00,[],None
623,https://github.com/Floppies/tpfinal-arqcomp.git,2021-12-01 21:59:36+00:00,Desarrollo del TP Final de Arquitectura de Computadoras,0,Floppies/tpfinal-arqcomp,433998505,Verilog,tpfinal-arqcomp,837,0,2022-02-21 16:37:38+00:00,[],None
624,https://github.com/ReuelReuben/Verilog-Code.git,2021-12-01 04:31:27+00:00,,0,ReuelReuben/Verilog-Code,433682937,Verilog,Verilog-Code,27,0,2021-12-01 05:14:51+00:00,[],None
625,https://github.com/Manaswini1832/blink-led-verilog.git,2021-12-01 08:48:46+00:00,,0,Manaswini1832/blink-led-verilog,433749590,Verilog,blink-led-verilog,1,0,2021-12-01 08:52:33+00:00,[],None
626,https://github.com/suvashsumon/Digital-System_Design-Lab.git,2021-12-01 15:05:35+00:00,,0,suvashsumon/Digital-System_Design-Lab,433873224,Verilog,Digital-System_Design-Lab,22,0,2021-12-01 15:07:39+00:00,[],None
627,https://github.com/xietao02/Sorting_Module.git,2021-12-01 16:23:05+00:00,基于Vivado的32位无符号数排序模块（16路输入 + 结构化描述方式 + 双调排序 Bitonic Sort）,0,xietao02/Sorting_Module,433900635,Verilog,Sorting_Module,29230,0,2021-12-22 13:42:43+00:00,[],None
628,https://github.com/Susmith-das/final_yr-project.git,2021-12-03 13:03:19+00:00,Repo for docs,0,Susmith-das/final_yr-project,434598542,Verilog,final_yr-project,3618,0,2022-05-02 16:16:47+00:00,[],None
629,https://github.com/Dheerajmane8803/thesis.git,2021-12-10 22:27:35+00:00,,0,Dheerajmane8803/thesis,437130131,Verilog,thesis,217,0,2021-12-10 22:50:00+00:00,[],None
630,https://github.com/nihargowdakm/16bit-ALU-design.git,2021-12-05 13:08:31+00:00,Design of a 16-bit ALU using Verilog HDL. Done as a part of the coursework advanced digital system design using Verilog HDL.,0,nihargowdakm/16bit-ALU-design,435169658,Verilog,16bit-ALU-design,147,0,2022-02-04 08:14:29+00:00,[],None
631,https://github.com/subha-ratno/Verilog-codes.git,2021-12-05 14:03:33+00:00,A repository containing new Verilog codes which I learn.,0,subha-ratno/Verilog-codes,435183230,Verilog,Verilog-codes,168,0,2022-07-27 20:07:44+00:00,['verilog-programs'],None
632,https://github.com/disuarezr/lab02-2021-2-grupo09-2021-2.git,2021-11-28 17:28:42+00:00,,0,disuarezr/lab02-2021-2-grupo09-2021-2,432779040,Verilog,lab02-2021-2-grupo09-2021-2,84,0,2021-11-28 17:28:46+00:00,[],https://api.github.com/licenses/gpl-3.0
633,https://github.com/eduardoYan/Maquina_de_Estados_Refrigerant.git,2021-11-29 14:01:21+00:00,"descrição de uma maquina de estados, simulando uma maquina de refrigerante. Escrito em Verilog",0,eduardoYan/Maquina_de_Estados_Refrigerant,433064842,Verilog,Maquina_de_Estados_Refrigerant,2856,0,2021-11-29 14:04:20+00:00,[],None
634,https://github.com/H-Vlad-Montes/Sistema_Mem_Montes_Hugo.git,2021-11-30 15:08:06+00:00,"Description on Verilog about Memory System, MIPS",0,H-Vlad-Montes/Sistema_Mem_Montes_Hugo,433476166,Verilog,Sistema_Mem_Montes_Hugo,5,0,2021-11-30 20:28:57+00:00,[],None
635,https://github.com/ArthurLacet/Projeto-1-Sistemas-Digitais.git,2021-12-28 03:43:15+00:00,Projeto feito para a cadeira de Sistemas Digitais,0,ArthurLacet/Projeto-1-Sistemas-Digitais,442340603,Verilog,Projeto-1-Sistemas-Digitais,1185,0,2021-12-28 03:47:26+00:00,[],None
636,https://github.com/Aishwaryavpkadam/Configurable-Logic-and-Processor-design.git,2021-12-27 10:46:03+00:00,,0,Aishwaryavpkadam/Configurable-Logic-and-Processor-design,442130870,Verilog,Configurable-Logic-and-Processor-design,7,0,2021-12-27 10:50:40+00:00,[],None
637,https://github.com/asker-qiao/difftest-notes.git,2021-12-23 13:34:39+00:00,some notes of xiangshan difftest source code,0,asker-qiao/difftest-notes,441190713,Verilog,difftest-notes,232,0,2022-01-19 08:35:10+00:00,[],None
638,https://github.com/SanskarJhajharia25/CompArch-.git,2021-12-27 16:00:47+00:00,,0,SanskarJhajharia25/CompArch-,442204784,Verilog,CompArch-,11247,0,2021-12-27 16:05:03+00:00,[],None
639,https://github.com/htfab/ks-guitar.git,2021-12-30 00:48:38+00:00,Physically modeled guitar strings using the Karplus-Strong algorithm with some extensions by Jaffe & Smith.,0,htfab/ks-guitar,442927718,Verilog,ks-guitar,307670,0,2022-01-01 06:09:11+00:00,[],https://api.github.com/licenses/mit
640,https://github.com/apurbaanik/Decoder.git,2021-12-30 14:09:11+00:00,"Verilog Module for a 3-input decoder using primitive instantiations, Continuous assignment statements and Conditional statements. Then we will write a testbench to simulate the 3 modules and verify using the waveforms. Verilog is a hardware description language for describing hardware from transistor level to behavioral. Verilog description consist of modules which is basic unit of hierarchy that describes boundaries (module to endmodule), input and output and behavioral codes (conditional statements, continuous assignments) etc.",0,apurbaanik/Decoder,443093322,Verilog,Decoder,943,0,2021-12-30 15:19:07+00:00,[],None
641,https://github.com/void7920/FIFO_COMP.git,2021-12-30 13:37:37+00:00,,0,void7920/FIFO_COMP,443085374,Verilog,FIFO_COMP,20,0,2022-01-09 15:19:11+00:00,[],None
642,https://github.com/GrayBeeYak/arp_response.git,2021-12-27 04:35:35+00:00,,0,GrayBeeYak/arp_response,442050547,Verilog,arp_response,38,0,2022-02-15 18:41:23+00:00,[],None
643,https://github.com/Devheun/COSE222_Computer-Architecture.git,2021-12-27 03:18:27+00:00,Making risc-v cpu with pipeline,0,Devheun/COSE222_Computer-Architecture,442037942,Verilog,COSE222_Computer-Architecture,470,0,2021-12-27 03:20:31+00:00,[],None
644,https://github.com/umeshnani05/Cache-Compression.git,2021-12-05 17:08:53+00:00,,0,umeshnani05/Cache-Compression,435228891,Verilog,Cache-Compression,128,0,2021-12-05 17:21:10+00:00,[],https://api.github.com/licenses/gpl-3.0
645,https://github.com/JimmyWu-812/mode-finder-verilog.git,2021-12-06 05:01:16+00:00,,0,JimmyWu-812/mode-finder-verilog,435365949,Verilog,mode-finder-verilog,5772,0,2021-12-06 05:01:59+00:00,[],None
646,https://github.com/Vikhyath-Shankargari/Verilog-Projects.git,2021-12-04 12:53:03+00:00,,0,Vikhyath-Shankargari/Verilog-Projects,434900378,Verilog,Verilog-Projects,68,0,2021-12-04 13:21:39+00:00,[],None
647,https://github.com/timwa0669/fpga_clock.git,2021-12-02 11:08:28+00:00,,0,timwa0669/fpga_clock,434187796,Verilog,fpga_clock,31,0,2023-01-27 23:10:52+00:00,[],https://api.github.com/licenses/mit
648,https://github.com/huaixil/ILA_Offchip_Protocol.git,2021-12-12 19:34:51+00:00,,0,huaixil/ILA_Offchip_Protocol,437638463,Verilog,ILA_Offchip_Protocol,88,0,2021-12-12 19:43:22+00:00,[],None
649,https://github.com/MNienaber831/32-Bit-MIPS-Processor.git,2021-12-11 23:41:51+00:00,ECE 174 Advanced Computer Architecture final project with Nicholas Kumar,0,MNienaber831/32-Bit-MIPS-Processor,437412557,Verilog,32-Bit-MIPS-Processor,27,0,2021-12-11 23:41:58+00:00,[],None
650,https://github.com/fuanruisu/Sistema_Mem_Magana_Juan.git,2021-12-01 04:29:56+00:00,,0,fuanruisu/Sistema_Mem_Magana_Juan,433682593,Verilog,Sistema_Mem_Magana_Juan,5,0,2021-12-03 04:57:50+00:00,[],None
651,https://github.com/saaroomaan/verilog.git,2021-11-29 03:27:05+00:00,verilog codes,0,saaroomaan/verilog,432892849,Verilog,verilog,11,0,2021-11-30 06:50:45+00:00,[],None
652,https://github.com/alphawolf9999/ECE-150-178-Project.git,2021-11-28 21:42:30+00:00,,0,alphawolf9999/ECE-150-178-Project,432831953,Verilog,ECE-150-178-Project,86628,0,2021-12-02 00:07:04+00:00,[],None
653,https://github.com/akifislam/Simulation-on-ModelSim-with-Verilog-HDL.git,2021-11-29 18:58:15+00:00,This repository contains codes of Verilog which is a Hardware Definition Language. These code can be easily compiled and simulate with a software called ModelSim.,2,akifislam/Simulation-on-ModelSim-with-Verilog-HDL,433162476,Verilog,Simulation-on-ModelSim-with-Verilog-HDL,6,0,2022-10-27 17:46:50+00:00,"['circuit-simulator', 'digital-electronics', 'verilog', 'verilog-hdl']",None
654,https://github.com/vogma/arty7-sdram.git,2021-11-27 11:39:03+00:00,,0,vogma/arty7-sdram,432444421,Verilog,arty7-sdram,2325,0,2021-11-29 11:40:35+00:00,[],None
655,https://github.com/AfteRRaIN-Sys/hw_syn_lab_finalProject.git,2021-12-14 08:22:17+00:00,,0,AfteRRaIN-Sys/hw_syn_lab_finalProject,438172584,Verilog,hw_syn_lab_finalProject,17364,0,2021-12-19 02:17:14+00:00,[],None
656,https://github.com/6lleek/MPSiS.git,2021-12-21 11:15:51+00:00,,0,6lleek/MPSiS,440490017,Verilog,MPSiS,12,0,2021-12-21 11:38:09+00:00,[],None
657,https://github.com/ThomasJagielski/Lab04-CompArch-MIPS_single_cycle_cpu.git,2021-12-15 19:41:29+00:00,,0,ThomasJagielski/Lab04-CompArch-MIPS_single_cycle_cpu,438752008,Verilog,Lab04-CompArch-MIPS_single_cycle_cpu,3992,0,2021-12-15 19:48:07+00:00,[],None
658,https://github.com/Manwi23/Squares.git,2021-12-22 12:48:03+00:00,University project for FPGA course,0,Manwi23/Squares,440855822,Verilog,Squares,12169,0,2022-02-12 16:34:43+00:00,[],None
659,https://github.com/chaitusvk/VERILOG-Lab.git,2021-12-23 14:44:23+00:00,EEE Year 2 Lab Book,0,chaitusvk/VERILOG-Lab,441209512,,VERILOG-Lab,38280,0,2021-12-23 14:44:24+00:00,[],None
660,https://github.com/cbwang-dev/DDP_lab.git,2021-12-02 00:10:15+00:00,Code for Lab Session: Design of Digital Platform,0,cbwang-dev/DDP_lab,434026644,Verilog,DDP_lab,161,0,2022-10-29 19:28:31+00:00,[],None
661,https://github.com/chirayupd/CMOS-VLSI-Design.git,2021-12-08 05:03:10+00:00,,0,chirayupd/CMOS-VLSI-Design,436122533,Verilog,CMOS-VLSI-Design,7,0,2021-12-08 13:11:10+00:00,[],https://api.github.com/licenses/mit
662,https://github.com/donlon/xge_mac.git,2021-12-05 13:23:40+00:00,The 10GE MAC Core implements the Media Access Control functions for 10Gbps operation as defined in IEEE Std 802.3ae.,0,donlon/xge_mac,435173361,Verilog,xge_mac,2924,0,2023-09-13 11:14:51+00:00,[],None
663,https://github.com/abbasalit987/Router-1x3.git,2021-12-07 15:11:48+00:00,Router 1x3 Design using Verilog HDL,0,abbasalit987/Router-1x3,435926930,Verilog,Router-1x3,14,0,2021-12-07 15:15:31+00:00,[],None
664,https://github.com/cfcfty/verilog_test.git,2021-12-10 17:23:26+00:00,verilog_sample,0,cfcfty/verilog_test,437059637,Verilog,verilog_test,2,0,2021-12-23 08:33:56+00:00,[],None
665,https://github.com/perfect-porfect/zcu104-default_example.git,2021-12-19 13:24:53+00:00,,0,perfect-porfect/zcu104-default_example,439869983,Verilog,zcu104-default_example,64830,0,2021-12-23 10:37:50+00:00,[],None
666,https://github.com/montpelllier/CS207_Digital-Logic.git,2021-12-20 09:43:53+00:00,The SUSTech course CS207 Digital Logic,0,montpelllier/CS207_Digital-Logic,440116484,Verilog,CS207_Digital-Logic,1523,0,2023-10-02 11:18:58+00:00,[],None
667,https://github.com/brunosampaio08/acc_processor.git,2021-12-19 21:21:17+00:00,,0,brunosampaio08/acc_processor,439970460,Verilog,acc_processor,23,0,2021-12-19 21:21:52+00:00,[],None
668,https://github.com/AdityaGurjar141/RISCV.git,2021-12-30 07:01:35+00:00,,0,AdityaGurjar141/RISCV,442994566,Verilog,RISCV,14,0,2021-12-30 07:06:35+00:00,[],None
669,https://github.com/4ndl23y/rotary-encoder-FPGA.git,2021-12-27 16:27:06+00:00,Verilog rotary encoder interface,0,4ndl23y/rotary-encoder-FPGA,442212167,Verilog,rotary-encoder-FPGA,527,0,2021-12-27 17:09:30+00:00,[],None
670,https://github.com/ArthurLacet/CPU-MIPS.git,2021-12-28 17:15:32+00:00,Desenvolvimento de uma CPU do MIPS em Verilog e testes feitos pelo ModelSim da Intel para a disciplina de Infraestrutura de Hardware CIn-UFPE,1,ArthurLacet/CPU-MIPS,442532796,Verilog,CPU-MIPS,124,0,2021-12-28 17:17:29+00:00,[],None
671,https://github.com/DanielMcGovern139/Digital-Design.git,2021-12-29 12:33:59+00:00,This repository contains projects completed in a Digital systems Design module (3C7) in TCD.,0,DanielMcGovern139/Digital-Design,442767389,Verilog,Digital-Design,35,0,2021-12-30 19:09:52+00:00,[],None
672,https://github.com/tzyLee/verilog-highlight.git,2021-12-04 07:31:45+00:00,Syntax highlighter for Verilog,1,tzyLee/verilog-highlight,434837003,Verilog,verilog-highlight,560,0,2023-12-04 14:24:59+00:00,"['vscode', 'vscode-extension', 'vscode-language', 'textmate-grammar', 'verilog']",https://api.github.com/licenses/mit
673,https://github.com/Nighttell/Signal.git,2021-11-29 02:27:00+00:00,基于FPGA的信号分析仪,0,Nighttell/Signal,432880511,Verilog,Signal,10475,0,2021-11-29 03:10:02+00:00,[],https://api.github.com/licenses/agpl-3.0
674,https://github.com/ssxucpu/cpu.git,2021-12-13 03:21:21+00:00,the fking amazing cpu,0,ssxucpu/cpu,437722624,Verilog,cpu,496,0,2021-12-26 09:10:47+00:00,[],None
675,https://github.com/PAN-YI-HSUAN/2021_AES_analysis.git,2021-12-13 14:18:49+00:00,,0,PAN-YI-HSUAN/2021_AES_analysis,437901456,Verilog,2021_AES_analysis,7412,0,2021-12-13 15:01:53+00:00,[],None
676,https://github.com/juliakotelenets/Vending-Machine.git,2021-12-06 13:50:52+00:00,"Course work in the discipline of ""Automation of digital device design""",0,juliakotelenets/Vending-Machine,435514815,Verilog,Vending-Machine,606,0,2021-12-18 12:11:48+00:00,[],None
677,https://github.com/hsl6180/CPU.git,2021-12-06 08:29:38+00:00,韩世龙、张有成、刘璐,2,hsl6180/CPU,435416854,Verilog,CPU,970,0,2021-12-20 12:16:55+00:00,[],None
678,https://github.com/sassmander/Frogger-using-VGA-Display.git,2021-12-10 01:52:54+00:00,,0,sassmander/Frogger-using-VGA-Display,436817815,Verilog,Frogger-using-VGA-Display,19,0,2023-04-13 22:40:38+00:00,[],None
679,https://github.com/BrandTruong/Verilog-Obstacle-Game.git,2021-12-11 05:23:47+00:00,Fall Quarter 2021,0,BrandTruong/Verilog-Obstacle-Game,437195605,Verilog,Verilog-Obstacle-Game,17,0,2023-01-28 04:49:48+00:00,[],None
680,https://github.com/platunus/noam-nisan-system.git,2021-12-17 13:41:19+00:00,Implementation of Noam Nisan System by FPGA (Altera Cyclone IV),0,platunus/noam-nisan-system,439345921,Verilog,noam-nisan-system,148,0,2021-12-17 14:53:38+00:00,['fpga'],https://api.github.com/licenses/mit
681,https://github.com/mdodovic/VLSI-synthesis.git,2021-12-18 11:20:44+00:00,Simulation of Design Under the Testing,0,mdodovic/VLSI-synthesis,439596315,Verilog,VLSI-synthesis,200,0,2022-03-16 18:02:06+00:00,"['verilog', 'synthesis']",None
682,https://github.com/karensamara/Digital-systems-project.git,2021-12-18 19:31:24+00:00,Microwave controller,0,karensamara/Digital-systems-project,439698775,Verilog,Digital-systems-project,271,0,2021-12-18 19:38:42+00:00,[],None
683,https://github.com/yuzeng2333/ILA_RBM.git,2021-12-13 19:15:00+00:00,,0,yuzeng2333/ILA_RBM,437995305,Verilog,ILA_RBM,146,0,2021-12-15 00:47:42+00:00,[],https://api.github.com/licenses/mit
684,https://github.com/josefabio1127/Contador_Milisegundos.git,2021-12-19 18:43:58+00:00,"Este proyecto describe el diseño y la implementación de un contador de milisegundos mediante el uso de la lógica digital secuencial. Se controla mediante señales de start y reset (asíncrono), y muestra su salida en BCD, utilizando un vector de 8 bits (4 para las unidades y 4 para las decenas). El contador se reinicia cuando alcanza el valor de 99, y se detiene en este valor hasta que se recibe una señal de start.",0,josefabio1127/Contador_Milisegundos,439941448,Verilog,Contador_Milisegundos,791,0,2021-12-19 20:43:34+00:00,[],None
685,https://github.com/JhoanLeon/SpaceInvaders.git,2021-12-19 16:30:24+00:00,Hardware implementation in FPGA of an arcade game (SpaceInvaders) in 8x8 matrix.,0,JhoanLeon/SpaceInvaders,439913152,Verilog,SpaceInvaders,6022,0,2021-12-19 16:46:26+00:00,[],None
686,https://github.com/manas-modi100/RTL-Verilog.git,2021-12-12 09:27:41+00:00,Basic Digital Circuits Using Verilog,0,manas-modi100/RTL-Verilog,437502320,Verilog,RTL-Verilog,15,0,2021-12-12 09:34:53+00:00,[],None
687,https://github.com/Arman5592/FPGA-PC-Connection-UART.git,2021-12-12 16:26:47+00:00,,0,Arman5592/FPGA-PC-Connection-UART,437596907,Verilog,FPGA-PC-Connection-UART,3,0,2021-12-14 00:14:09+00:00,[],None
688,https://github.com/KLVA1217/SAD-Circuit.git,2021-12-12 22:13:10+00:00,For my ECE 526  Final Project I designed and implemented a circuit that would calculated the Sum of Absolute Differrences of 16 Data Sets,0,KLVA1217/SAD-Circuit,437668069,Verilog,SAD-Circuit,13,0,2022-02-17 07:57:52+00:00,[],None
689,https://github.com/j30393/2021_NTHU_LOGIC_DESIGN_FINAL_PROJECT.git,2021-12-22 01:07:22+00:00,for CT's hardware language design class,0,j30393/2021_NTHU_LOGIC_DESIGN_FINAL_PROJECT,440694099,Verilog,2021_NTHU_LOGIC_DESIGN_FINAL_PROJECT,262827,0,2022-03-04 11:26:56+00:00,[],None
690,https://github.com/allen0871/multi_slope_converter.git,2021-12-24 07:33:24+00:00,,0,allen0871/multi_slope_converter,441399329,Verilog,multi_slope_converter,23,0,2022-01-04 09:24:45+00:00,[],https://api.github.com/licenses/gpl-3.0
691,https://github.com/IliyaShofman/Multicycle-Processor.git,2021-12-27 03:25:07+00:00,"Multicycle Processor in Verilog, class project for Computer Organization",1,IliyaShofman/Multicycle-Processor,442039079,Verilog,Multicycle-Processor,11295,0,2021-12-27 03:44:42+00:00,[],None
692,https://github.com/LAMPA23/Morse-code.git,2021-12-25 17:40:28+00:00,,0,LAMPA23/Morse-code,441728701,Verilog,Morse-code,713,0,2021-12-26 19:17:10+00:00,[],None
693,https://github.com/Josem9718/Sistema_Mem_Benavides_Miguel.git,2021-11-28 00:28:28+00:00,Implementación del sistema de memoria del procesador multiciclo MIPS,0,Josem9718/Sistema_Mem_Benavides_Miguel,432585049,Verilog,Sistema_Mem_Benavides_Miguel,2,0,2021-12-01 04:03:16+00:00,[],None
694,https://github.com/YassAje/Systeme-numerique-embarque.git,2021-11-28 18:53:47+00:00,Conception de systèmes numériques embarqués sur cible  FPGA (System on a Programmable Chip - SOPC),0,YassAje/Systeme-numerique-embarque,432797987,Verilog,Systeme-numerique-embarque,1031,0,2021-12-03 11:30:07+00:00,[],None
695,https://github.com/unal-edigital1-lab/lab02-2021-2-grupo09-2021-2-.git,2021-11-28 17:32:30+00:00,,0,unal-edigital1-lab/lab02-2021-2-grupo09-2021-2-,432779928,Verilog,lab02-2021-2-grupo09-2021-2-,10976,0,2021-12-31 15:08:16+00:00,[],https://api.github.com/licenses/gpl-3.0
696,https://github.com/digitlogic-project/ddproject.git,2021-12-03 14:37:39+00:00,,0,digitlogic-project/ddproject,434627706,Verilog,ddproject,4613,0,2021-12-10 04:12:39+00:00,[],None
697,https://github.com/Xnxiao/CPU.git,2021-12-03 08:31:26+00:00,,0,Xnxiao/CPU,434521684,Verilog,CPU,10,0,2021-12-11 08:20:52+00:00,[],None
698,https://github.com/apeterson-BFI/Advent2021V.git,2021-11-30 13:42:41+00:00,2021 Advent of Code in Coq theorem prover.,0,apeterson-BFI/Advent2021V,433446041,Verilog,Advent2021V,110,0,2021-11-30 20:38:28+00:00,[],None
699,https://github.com/unal-edigital1-lab/lab04-2021-2-grupo7-2021-2.git,2021-11-30 22:27:56+00:00,lab04-2021-2-grupo7-2021-2 created by GitHub Classroom,1,unal-edigital1-lab/lab04-2021-2-grupo7-2021-2,433605963,Verilog,lab04-2021-2-grupo7-2021-2,18565,0,2022-01-10 07:22:08+00:00,[],None
700,https://github.com/poodlenoodle42/MIPS_Core_Backup.git,2021-12-29 14:05:16+00:00,Backup of the source code for the MIPS Core I designed for my BLL. Copyed out of Vivado Project,0,poodlenoodle42/MIPS_Core_Backup,442791453,Verilog,MIPS_Core_Backup,101,0,2021-12-29 14:12:28+00:00,[],None
701,https://github.com/BradleyHo/ee178.git,2021-12-28 07:12:03+00:00,Projects for EE 178 laboratory experiments.,0,BradleyHo/ee178,442381207,Verilog,ee178,89,0,2022-02-03 05:14:22+00:00,[],https://api.github.com/licenses/mit
702,https://github.com/SpaceBod/MIPS-CPU.git,2021-12-27 21:01:22+00:00,2021 EIE Coursework,0,SpaceBod/MIPS-CPU,442272626,Verilog,MIPS-CPU,772,0,2021-12-27 21:32:29+00:00,[],None
703,https://github.com/dbadjei/vgoBGR_trim.git,2021-12-27 22:08:02+00:00,Verilog code for generating trimming codes for Nanqi's Banba-based Vgo extraction circuit.,0,dbadjei/vgoBGR_trim,442284289,Verilog,vgoBGR_trim,20,0,2022-01-10 05:02:33+00:00,[],https://api.github.com/licenses/cc0-1.0
704,https://github.com/huien77/EE2026_Project.git,2021-12-21 10:39:32+00:00,,0,huien77/EE2026_Project,440480494,Verilog,EE2026_Project,22216,0,2021-12-21 10:39:43+00:00,[],None
705,https://github.com/marcolau68/Verilog---MIPS-CPU.git,2021-12-30 13:07:15+00:00,,0,marcolau68/Verilog---MIPS-CPU,443077930,Verilog,Verilog---MIPS-CPU,624,0,2022-01-10 15:37:39+00:00,[],None
706,https://github.com/Quin8989/Quadratic-Equation-Calculator.git,2021-12-31 03:09:44+00:00,,0,Quin8989/Quadratic-Equation-Calculator,443240161,Verilog,Quadratic-Equation-Calculator,382,0,2021-12-31 03:24:33+00:00,[],None
707,https://github.com/photonPrograms/CompArchLabs.git,2021-12-31 17:25:29+00:00,Verilog exercises for the course CS F342 Computer Architecture,0,photonPrograms/CompArchLabs,443395177,Verilog,CompArchLabs,8,0,2021-12-31 17:28:39+00:00,[],None
708,https://github.com/qqq1212341/2048_verilog_by8x2.git,2021-11-30 03:53:03+00:00,디지털시스템 실험 기말 프로젝트,0,qqq1212341/2048_verilog_by8x2,433284962,Verilog,2048_verilog_by8x2,5,0,2021-12-28 05:31:30+00:00,[],None
709,https://github.com/hjnauman/7to1-mux.git,2021-11-30 23:31:15+00:00,"Simple implementation of a 7to1 multiplexor in Verilog, with associated test bench.",0,hjnauman/7to1-mux,433619616,Verilog,7to1-mux,15,0,2021-11-30 23:32:43+00:00,[],https://api.github.com/licenses/gpl-3.0
710,https://github.com/Minture/-.git,2021-11-29 12:04:02+00:00,study,0,Minture/-,433026307,Verilog,-,1653,0,2021-11-29 12:04:47+00:00,[],None
711,https://github.com/comgeek/MIPS_32bit.git,2021-12-04 11:36:03+00:00,,0,comgeek/MIPS_32bit,434884407,Verilog,MIPS_32bit,30,0,2021-12-08 21:38:50+00:00,[],None
712,https://github.com/fuanruisu/MIPS_MultiCycle.git,2021-12-03 19:31:36+00:00,MIPS processor implementation,0,fuanruisu/MIPS_MultiCycle,434711767,Verilog,MIPS_MultiCycle,34,0,2021-12-13 15:01:47+00:00,[],None
713,https://github.com/jquinonezb/MIPS_Multi_Quinonez_Jose.git,2021-12-06 01:04:38+00:00,,0,jquinonezb/MIPS_Multi_Quinonez_Jose,435319456,Verilog,MIPS_Multi_Quinonez_Jose,10,0,2021-12-06 01:40:32+00:00,[],None
714,https://github.com/cfcfty/verilog_sample.git,2021-12-27 09:00:16+00:00,Easy Verilog samples,0,cfcfty/verilog_sample,442105932,Verilog,verilog_sample,22,0,2021-12-28 15:16:57+00:00,[],https://api.github.com/licenses/gpl-3.0
715,https://github.com/AnvithPabba/CompOrg-IITM-All.git,2021-12-30 07:27:01+00:00,,0,AnvithPabba/CompOrg-IITM-All,443000130,Verilog,CompOrg-IITM-All,107,0,2021-12-30 08:12:45+00:00,[],None
716,https://github.com/FlorentCLMichel/verilog_examples.git,2021-12-18 22:55:53+00:00,A few simple examples in verilog ,0,FlorentCLMichel/verilog_examples,439731184,Verilog,verilog_examples,28,0,2022-05-13 08:24:57+00:00,"['simple-examples', 'verilog']",https://api.github.com/licenses/mit
717,https://github.com/godoyfelix132/Verilog_Codes.git,2021-12-19 06:31:34+00:00,,0,godoyfelix132/Verilog_Codes,439792825,Verilog,Verilog_Codes,22151,0,2021-12-19 06:33:24+00:00,[],None
718,https://github.com/Aki2001ankit/ALU-PROJECT-2021.git,2021-12-20 06:32:01+00:00,this project is about alu . this project done in verilog under prof Bishnu das(ECN-104),0,Aki2001ankit/ALU-PROJECT-2021,440066109,Verilog,ALU-PROJECT-2021,19799,0,2021-12-20 06:34:48+00:00,[],None
719,https://github.com/Preetika764/Computer-Architecture-Labs.git,2021-11-28 03:13:00+00:00,,0,Preetika764/Computer-Architecture-Labs,432607155,Verilog,Computer-Architecture-Labs,510,0,2022-05-29 12:31:34+00:00,[],None
720,https://github.com/TheJacobSales/piano-keys-DE2-115-FPGA.git,2021-11-27 20:39:20+00:00,"This projects implements a mock of a piano sythesiser using the DE2-115 FPGA board. Software used for implementation is Quatus Prime, Eclypse, and Qsys.",0,TheJacobSales/piano-keys-DE2-115-FPGA,432560762,Verilog,piano-keys-DE2-115-FPGA,31145,0,2022-08-10 02:27:50+00:00,[],None
721,https://github.com/jschulbach/verilog.git,2021-11-29 01:22:22+00:00,simple verilog examples,0,jschulbach/verilog,432868168,Verilog,verilog,1,0,2021-11-29 01:22:38+00:00,[],None
722,https://github.com/guropolice/BlackJack.git,2021-11-28 06:48:17+00:00,,0,guropolice/BlackJack,432640100,Verilog,BlackJack,8,0,2021-12-01 14:35:47+00:00,[],None
723,https://github.com/jrs154/Cache_Controller_Model.git,2021-12-07 16:22:26+00:00,,0,jrs154/Cache_Controller_Model,435950213,Verilog,Cache_Controller_Model,7531,0,2021-12-07 16:31:19+00:00,[],None
724,https://github.com/Origin101/Finals.git,2021-12-11 03:20:24+00:00,,0,Origin101/Finals,437176373,Verilog,Finals,7,0,2021-12-11 03:20:59+00:00,[],None
725,https://github.com/kinling9/riscv_cpu.git,2021-12-07 13:25:50+00:00,homework for SV,0,kinling9/riscv_cpu,435890256,Verilog,riscv_cpu,30310,0,2022-01-10 15:00:01+00:00,[],https://api.github.com/licenses/agpl-3.0
726,https://github.com/git-jh-moon/dld.git,2021-12-13 08:58:06+00:00,,1,git-jh-moon/dld,437801510,Verilog,dld,46,0,2021-12-15 08:04:06+00:00,[],None
727,https://github.com/Arq-Trabajos/P.git,2021-12-11 16:47:18+00:00,,0,Arq-Trabajos/P,437336777,Verilog,P,111,0,2021-12-15 21:57:54+00:00,[],None
728,https://github.com/morris-wang/Distance-Transform.git,2021-12-06 08:47:42+00:00,ic design contest,0,morris-wang/Distance-Transform,435421905,Verilog,Distance-Transform,851,0,2021-12-06 08:49:25+00:00,[],None
729,https://github.com/shan2501/RISC-V-INTERNSHIP.git,2021-12-09 03:25:48+00:00,RISC-V RTL DESIGN USING VERILOG PROJECT,0,shan2501/RISC-V-INTERNSHIP,436469703,Verilog,RISC-V-INTERNSHIP,11,0,2021-12-09 03:28:33+00:00,[],None
730,https://github.com/efabless/caravel_openframe-lite.git,2021-12-16 04:20:19+00:00,,1,efabless/caravel_openframe-lite,438857909,Verilog,caravel_openframe-lite,1844,0,2021-12-16 21:58:08+00:00,[],https://api.github.com/licenses/apache-2.0
731,https://github.com/tucanae47/wrapped_bin_mult.git,2021-12-23 18:02:08+00:00,,1,tucanae47/wrapped_bin_mult,441259215,Verilog,wrapped_bin_mult,2383,0,2021-12-31 12:41:43+00:00,[],https://api.github.com/licenses/apache-2.0
732,https://github.com/b07901049/1101_DSP_Final.git,2021-12-22 06:32:41+00:00,,0,b07901049/1101_DSP_Final,440757632,Verilog,1101_DSP_Final,2607,0,2022-12-22 13:14:42+00:00,[],None
733,https://github.com/giljerard/quantum_tia_1_1.git,2021-12-20 23:43:07+00:00,,0,giljerard/quantum_tia_1_1,440336038,Verilog,quantum_tia_1_1,12206,0,2022-01-01 03:45:47+00:00,[],https://api.github.com/licenses/apache-2.0
734,https://github.com/melindakhosasih/Self-driving-Car.git,2021-12-24 07:07:07+00:00,,1,melindakhosasih/Self-driving-Car,441393783,Verilog,Self-driving-Car,4055,0,2022-09-14 13:04:06+00:00,[],None
735,https://github.com/leonardods2007/SDC_filtro_polifasico.git,2021-12-17 20:29:11+00:00,,0,leonardods2007/SDC_filtro_polifasico,439452434,Verilog,SDC_filtro_polifasico,60,0,2021-12-17 20:32:24+00:00,[],None
736,https://github.com/tyko-everest/stack-project.git,2021-12-21 22:27:35+00:00,A stack-based cpu design and associated toolchain for programming with it,0,tyko-everest/stack-project,440666665,Verilog,stack-project,29,0,2021-12-27 17:56:47+00:00,[],None
737,https://github.com/proto777/practice-project.git,2021-12-20 22:51:48+00:00,,0,proto777/practice-project,440327300,Verilog,practice-project,0,0,2021-12-24 09:41:53+00:00,[],None
738,https://github.com/cVladu/CordiArchitecture.git,2021-12-16 18:20:14+00:00,,0,cVladu/CordiArchitecture,439087417,Verilog,CordiArchitecture,6,0,2021-12-16 18:28:40+00:00,[],https://api.github.com/licenses/mit
739,https://github.com/FastFoof/USB.git,2021-12-28 09:53:52+00:00,,0,FastFoof/USB,442419824,Verilog,USB,164936,0,2022-02-04 08:32:25+00:00,[],None
740,https://github.com/Shridhar19110101/Digital-watermarking.git,2021-12-30 12:09:11+00:00,,0,Shridhar19110101/Digital-watermarking,443064028,Verilog,Digital-watermarking,4264,0,2021-12-30 12:27:06+00:00,[],None
741,https://github.com/koty08/Quartus_logicCircuit.git,2021-12-30 04:03:54+00:00,LOGIC CIRCUIT DESIGN & LAB,0,koty08/Quartus_logicCircuit,442961332,Verilog,Quartus_logicCircuit,17883,0,2022-01-04 10:53:27+00:00,[],https://api.github.com/licenses/mit
742,https://github.com/LukeJYK/Pipelined-Processor-Design.git,2021-12-05 04:14:18+00:00,,0,LukeJYK/Pipelined-Processor-Design,435070899,Verilog,Pipelined-Processor-Design,2593,0,2021-12-07 18:31:27+00:00,[],None
743,https://github.com/RicardoAlan/ATmega328p.git,2021-12-05 07:10:09+00:00,Código en verilog para un ATmega382p,0,RicardoAlan/ATmega328p,435098669,Verilog,ATmega328p,20,0,2021-12-05 07:31:34+00:00,[],None
744,https://github.com/qaz159qaz159/HW4.git,2021-12-06 01:44:59+00:00,,0,qaz159qaz159/HW4,435326906,Verilog,HW4,5495,0,2021-12-06 01:55:35+00:00,[],None
745,https://github.com/DanielSimone/ECE206-Lab-4.git,2021-12-12 23:45:15+00:00,Introduction to Finite State Machines,0,DanielSimone/ECE206-Lab-4,437682681,Verilog,ECE206-Lab-4,125,0,2021-12-12 23:45:26+00:00,[],None
746,https://github.com/123swk123/spicontroller_apb3.git,2021-12-14 01:49:14+00:00,,0,123swk123/spicontroller_apb3,438082403,Verilog,spicontroller_apb3,8,0,2021-12-14 07:16:41+00:00,[],None
747,https://github.com/JDaniielC/SD-project-2020.2.git,2021-12-14 04:12:43+00:00,Projeto de Sistemas digitais em Verilog.,0,JDaniielC/SD-project-2020.2,438113495,Verilog,SD-project-2020.2,113,0,2022-03-06 02:08:37+00:00,[],None
748,https://github.com/grorge123/NTHU_CS_LogicDesign_2021.git,2021-12-14 05:33:47+00:00,,0,grorge123/NTHU_CS_LogicDesign_2021,438129974,Verilog,NTHU_CS_LogicDesign_2021,35268,0,2022-01-20 03:06:27+00:00,[],https://api.github.com/licenses/mit
749,https://github.com/mpmadhavig/isom.git,2021-12-04 13:22:45+00:00,,0,mpmadhavig/isom,434907349,Verilog,isom,83,0,2021-12-04 13:24:45+00:00,[],None
750,https://github.com/gdpande97/ECE260aLab3.git,2021-12-12 19:42:30+00:00,,0,gdpande97/ECE260aLab3,437640017,Verilog,ECE260aLab3,23778,0,2021-12-12 19:58:54+00:00,[],None
751,https://github.com/Shubhayu-Das/UART-basys3.git,2021-11-30 08:14:25+00:00,My UART cores for the Basys 3 board,0,Shubhayu-Das/UART-basys3,433347111,Verilog,UART-basys3,1308,0,2021-12-06 20:07:01+00:00,[],None
752,https://github.com/AposKonti/Decryption-Module.git,2021-11-28 18:33:55+00:00,Decryption Module v1.0,0,AposKonti/Decryption-Module,432793896,Verilog,Decryption-Module,36,0,2021-11-28 18:51:53+00:00,[],https://api.github.com/licenses/apache-2.0
753,https://github.com/ancamariac/wall-follower.git,2021-11-30 13:37:45+00:00,Synchronous sequential circuit that runs through a 64 × 64 maze using the Wall Follower algorithm.,0,ancamariac/wall-follower,433444400,Verilog,wall-follower,2779,0,2021-12-20 19:55:30+00:00,[],https://api.github.com/licenses/mit
754,https://github.com/YYHsiang/Simple_Single_CPU.git,2021-12-22 06:44:49+00:00,,0,YYHsiang/Simple_Single_CPU,440760606,Verilog,Simple_Single_CPU,11,0,2021-12-22 06:57:22+00:00,[],None
755,https://github.com/wj0074/2cm.git,2021-12-22 09:56:18+00:00,,0,wj0074/2cm,440811152,Verilog,2cm,18,0,2021-12-22 10:07:29+00:00,[],None
756,https://github.com/FredericJiang/MY_RISCV_CPU.git,2021-12-03 03:03:21+00:00,,1,FredericJiang/MY_RISCV_CPU,434448650,Verilog,MY_RISCV_CPU,4715,0,2021-12-21 12:52:17+00:00,[],None
757,https://github.com/MoisesPerez2305/Sistema_Mem_Perez_Moises.git,2021-12-01 00:50:54+00:00,T4 Sistema de memoria,0,MoisesPerez2305/Sistema_Mem_Perez_Moises,433635465,Verilog,Sistema_Mem_Perez_Moises,6,0,2021-12-01 05:47:08+00:00,[],None
758,https://github.com/SamAgarwal20/LeastSqaureEstimation.git,2021-12-02 07:10:07+00:00,A 2 variable least square estimator for 4 constraint lines,0,SamAgarwal20/LeastSqaureEstimation,434117982,Verilog,LeastSqaureEstimation,4,0,2021-12-02 07:11:39+00:00,[],None
759,https://github.com/kimjh3437/Phys234_Project1_Verilog-.git,2021-12-03 16:02:46+00:00,,0,kimjh3437/Phys234_Project1_Verilog-,434655098,Verilog,Phys234_Project1_Verilog-,4,0,2021-12-03 16:02:51+00:00,[],None
760,https://github.com/LeviThaicho/lvt-verilog.git,2021-12-02 10:36:13+00:00,,0,LeviThaicho/lvt-verilog,434178368,Verilog,lvt-verilog,10,0,2021-12-02 10:41:47+00:00,[],None
761,https://github.com/apurbaanik/Up-Down-Counter-using-Verilog.git,2021-12-30 14:19:45+00:00,"About developing Verilog modules for three up/down counters - binary (3 bit), Gray Code (3 bit) and One-Hot (8 bit). Counter is a special type of finite state machine that traverses through states within a state diagram circling around all states. This circling around allows a special type of output topology called state-encoded-outputs and states can be associated with the counter output value because each state in the counter represents a unique counter. In addition, the current state code can be used as the output of the entire system. In this lab we will focus on binary, gray code and one-hot counter. In a binary counter, the input determines if the counter increments or decrements by changing its states. ",0,apurbaanik/Up-Down-Counter-using-Verilog,443095913,Verilog,Up-Down-Counter-using-Verilog,417,0,2021-12-30 14:26:42+00:00,[],None
762,https://github.com/mia2583/logic-circuit2021.git,2021-12-26 13:54:42+00:00,논리회로 설계 및 실험 2021,0,mia2583/logic-circuit2021,441902876,Verilog,logic-circuit2021,13646,0,2021-12-28 05:31:26+00:00,[],None
763,https://github.com/Weedmastercrucifer/Automatic-Billing-System-For-Shopping-Cart.git,2021-12-29 05:04:09+00:00,"In this project, we provide three inputs corresponding to three different items that need to be billed for a shopping cart. The items can be added any number of times by the user. When the user presses Pay, the amount is paid, and the cost is reset to zero. A reset function is provided, which resets the cost to zero for a new transaction cycle.",0,Weedmastercrucifer/Automatic-Billing-System-For-Shopping-Cart,442665360,Verilog,Automatic-Billing-System-For-Shopping-Cart,4,0,2021-12-29 05:11:15+00:00,[],None
764,https://github.com/rushill2/SystemVerilog.git,2021-12-29 08:20:48+00:00,System Verilog Projects to run on a DE-10 LITE FPGA,0,rushill2/SystemVerilog,442706899,Verilog,SystemVerilog,110944,0,2021-12-29 08:34:43+00:00,[],None
765,https://github.com/Piravin/mini_project.git,2021-12-30 04:44:45+00:00,,0,Piravin/mini_project,442967778,Verilog,mini_project,32252,0,2021-12-30 04:48:14+00:00,[],None
766,https://github.com/Li-Ping-Chen/Verilog.git,2021-12-23 04:36:38+00:00,,0,Li-Ping-Chen/Verilog,441062757,Verilog,Verilog,80369,0,2021-12-24 06:02:01+00:00,[],None
767,https://github.com/kev1nCh1u/fpga_practice.git,2021-12-23 09:42:38+00:00,,0,kev1nCh1u/fpga_practice,441132349,Verilog,fpga_practice,12587,0,2022-01-09 03:17:36+00:00,[],None
768,https://github.com/tamas-zsiros/MIkrorendszerekHF.git,2021-12-28 12:31:54+00:00,,0,tamas-zsiros/MIkrorendszerekHF,442457473,Verilog,MIkrorendszerekHF,19,0,2021-12-31 10:03:43+00:00,[],None
769,https://github.com/void7920/FIFO_CDC.git,2021-12-27 15:29:19+00:00,,0,void7920/FIFO_CDC,442197002,Verilog,FIFO_CDC,18,0,2021-12-29 03:33:39+00:00,[],None
770,https://github.com/utsavm9/VerilogMaze.git,2021-12-28 19:50:02+00:00,Maze in Verilog,0,utsavm9/VerilogMaze,442568454,Verilog,VerilogMaze,6237,0,2022-01-03 04:31:54+00:00,[],None
771,https://github.com/yuzeng2333/ILA_garnet.git,2021-12-20 18:46:59+00:00,,0,yuzeng2333/ILA_garnet,440273947,Verilog,ILA_garnet,22,0,2021-12-20 18:52:08+00:00,[],https://api.github.com/licenses/mit
772,https://github.com/npuwth/SimpleCPUs.git,2021-12-25 07:14:40+00:00,My CPU exercises in 2020/2021 winter vacation,0,npuwth/SimpleCPUs,441625731,Verilog,SimpleCPUs,4517,0,2022-04-22 09:28:57+00:00,[],None
773,https://github.com/natTP/2110363-hw-syn-lab.git,2021-12-27 08:51:32+00:00,"Code written during 2110363 HW SYN LAB I course, Academic Year 2021, Chulalongkorn University.",0,natTP/2110363-hw-syn-lab,442103782,Verilog,2110363-hw-syn-lab,24414,0,2022-05-22 09:58:37+00:00,"['fpga', 'hardware-synthesis', 'verilog']",None
774,https://github.com/bala122/EE2003-assignments.git,2021-12-11 06:04:00+00:00,Computer organization course repositories,0,bala122/EE2003-assignments,437202179,Verilog,EE2003-assignments,3158,0,2021-12-11 06:19:37+00:00,[],None
775,https://github.com/Gabbyyy420/4-to-1-Multiplexer-.git,2021-12-11 03:08:20+00:00,,0,Gabbyyy420/4-to-1-Multiplexer-,437174350,Verilog,4-to-1-Multiplexer-,8,0,2021-12-11 03:27:40+00:00,[],None
776,https://github.com/14010007517/HD_IMG_RESIZE.git,2021-12-11 12:04:34+00:00,resize img using HD,0,14010007517/HD_IMG_RESIZE,437270881,Verilog,HD_IMG_RESIZE,10901,0,2021-12-11 12:05:47+00:00,[],None
777,https://github.com/redwiretechnologies/hdl-rwt.git,2021-12-03 16:04:55+00:00,hdl code to support Red Wire Technologies LLC software defined radios ,0,redwiretechnologies/hdl-rwt,434655719,Verilog,hdl-rwt,8247,0,2021-12-03 21:07:59+00:00,[],
778,https://github.com/Sanyamwalia147/CS203-Project-New.git,2021-12-02 06:45:35+00:00,,0,Sanyamwalia147/CS203-Project-New,434111760,Verilog,CS203-Project-New,483,0,2022-07-21 06:27:12+00:00,[],None
779,https://github.com/patelr124/compenglab1.git,2021-12-06 21:35:21+00:00,,0,patelr124/compenglab1,435654901,Verilog,compenglab1,90,0,2021-12-06 22:12:19+00:00,[],None
780,https://github.com/yukaii2019/ICLAB_Final_Project.git,2021-12-28 18:15:51+00:00,,0,yukaii2019/ICLAB_Final_Project,442547580,Verilog,ICLAB_Final_Project,158,0,2022-01-09 03:13:49+00:00,[],None
781,https://github.com/fuanruisu/Equipo_10.git,2021-12-16 18:18:47+00:00,,1,fuanruisu/Equipo_10,439087064,Verilog,Equipo_10,353,0,2022-01-10 15:50:34+00:00,[],None
782,https://github.com/Milanotang/Verilog.git,2021-12-16 12:33:51+00:00,This is a repository of Verilog HDL practices on HDLbits.,0,Milanotang/Verilog,438982994,Verilog,Verilog,44,0,2022-06-13 03:06:25+00:00,[],None
783,https://github.com/hua0x522/BUAA-CO-Lab.git,2021-12-23 11:30:02+00:00,,0,hua0x522/BUAA-CO-Lab,441159218,Verilog,BUAA-CO-Lab,7422,0,2021-12-23 12:08:10+00:00,[],None
784,https://github.com/kostascc/Digital-ASIC-VLSI-Design-Lab.git,2021-12-27 19:26:52+00:00,,0,kostascc/Digital-ASIC-VLSI-Design-Lab,442253820,Verilog,Digital-ASIC-VLSI-Design-Lab,35,0,2022-06-29 19:31:35+00:00,[],None
785,https://github.com/michaeldbarela/Pong.git,2021-12-25 21:03:16+00:00,Pong,0,michaeldbarela/Pong,441758146,Verilog,Pong,68,0,2022-01-18 02:44:08+00:00,[],None
786,https://github.com/2267413596/CO_2021_Single-cycle-CPU.git,2021-12-24 00:37:53+00:00,,0,2267413596/CO_2021_Single-cycle-CPU,441328018,Verilog,CO_2021_Single-cycle-CPU,9,0,2021-12-24 00:39:24+00:00,[],None
787,https://github.com/yoeelingBin/Design-Hw.git,2021-12-07 15:25:15+00:00,SJTU IS DSD 2021 Fall Coding Homework,0,yoeelingBin/Design-Hw,435931459,Verilog,Design-Hw,23122,0,2021-12-13 12:00:27+00:00,[],None
788,https://github.com/taleman1997/MC-control.git,2021-12-09 07:18:28+00:00,MC control （Verilog）,0,taleman1997/MC-control,436519433,Verilog,MC-control,563,0,2021-12-13 02:47:53+00:00,[],None
789,https://github.com/davidcalard/CADHW2.git,2021-12-12 20:22:13+00:00,,0,davidcalard/CADHW2,437648197,Verilog,CADHW2,803,0,2022-01-03 19:38:23+00:00,[],None
790,https://github.com/toobusyboy/verilog_test.git,2021-12-10 10:27:08+00:00,verilog practice,0,toobusyboy/verilog_test,436938305,Verilog,verilog_test,1,0,2021-12-10 12:32:34+00:00,[],None
791,https://github.com/mistletoeshadow/my-verilog.git,2021-12-09 08:42:13+00:00,,0,mistletoeshadow/my-verilog,436541959,Verilog,my-verilog,10104,0,2021-12-20 01:54:33+00:00,[],None
792,https://github.com/yasaminesmati/mealy-moor-verilog.git,2021-12-30 19:21:19+00:00,Mealy and Moore implementations of an n-bit comparator in verilog,0,yasaminesmati/mealy-moor-verilog,443165521,Verilog,mealy-moor-verilog,6,0,2022-08-30 10:25:50+00:00,"['comparator', 'verilog', 'modelsim']",None
793,https://github.com/nefelimet/mips-verilog.git,2021-12-30 22:12:29+00:00,A simple MIPS processor in Verilog.,0,nefelimet/mips-verilog,443195367,Verilog,mips-verilog,245,0,2022-10-09 18:57:38+00:00,"['verilog', 'mips', 'processor-architecture', 'testbench']",None
794,https://github.com/Abhinav15Agarwal/Moore_FSM.git,2021-12-31 05:41:36+00:00,,0,Abhinav15Agarwal/Moore_FSM,443263921,Verilog,Moore_FSM,0,0,2021-12-31 05:41:40+00:00,[],None
795,https://github.com/megloudOmar/Orientation-tracking-with-ADXL345-sensor-Nios_II.git,2021-12-22 00:50:02+00:00,,0,megloudOmar/Orientation-tracking-with-ADXL345-sensor-Nios_II,440691001,Verilog,Orientation-tracking-with-ADXL345-sensor-Nios_II,214,0,2021-12-22 00:52:33+00:00,[],None
796,https://github.com/JimmyWu-812/divider-verilog.git,2021-12-17 15:29:16+00:00,,0,JimmyWu-812/divider-verilog,439377534,Verilog,divider-verilog,3053,0,2021-12-27 18:13:03+00:00,[],None
797,https://github.com/meritesh/5-Stage-Piplined-Processor.git,2021-12-22 12:24:58+00:00,,0,meritesh/5-Stage-Piplined-Processor,440849654,Verilog,5-Stage-Piplined-Processor,13,0,2021-12-22 12:31:00+00:00,[],None
798,https://github.com/Arq-Trabajos/Lab5.git,2021-11-29 17:12:53+00:00,,0,Arq-Trabajos/Lab5,433131055,Verilog,Lab5,1358,0,2021-11-30 00:17:15+00:00,[],None
799,https://github.com/prova-anika-216474306/ReactionTimerGame.git,2021-12-07 09:31:25+00:00,,0,prova-anika-216474306/ReactionTimerGame,435818910,Verilog,ReactionTimerGame,6849,0,2021-12-07 09:39:00+00:00,[],None
800,https://github.com/Josem9718/MIPS_MULTI_Benavides_Miguel.git,2021-12-01 23:38:43+00:00,Implemenatción del Data Path del procesador Multiciclo MIPS ,0,Josem9718/MIPS_MULTI_Benavides_Miguel,434020307,Verilog,MIPS_MULTI_Benavides_Miguel,10,0,2021-12-29 04:19:12+00:00,[],None
801,https://github.com/pedrospoljaric/processor.git,2021-11-29 01:06:43+00:00,"Implementation of a processor based on the designed architecture using Verilog, a hardware description language.",0,pedrospoljaric/processor,432865496,Verilog,processor,3567,0,2021-11-29 01:54:58+00:00,[],None
802,https://github.com/C-INIT/OurCPU.git,2021-11-30 10:33:32+00:00,CPU homework,0,C-INIT/OurCPU,433389019,Verilog,OurCPU,1420,0,2021-12-20 14:01:07+00:00,[],https://api.github.com/licenses/gpl-3.0
803,https://github.com/VinceNguyen35/Full_UART.git,2021-12-01 02:17:04+00:00,This is a SOPC design for a 32-bit UART communications system.  A chip specification document has been created to guide users through the system's design.,0,VinceNguyen35/Full_UART,433653661,Verilog,Full_UART,3979,0,2021-12-01 02:21:00+00:00,[],None
804,https://github.com/aleksStajic/CPEN_211_Lab7.git,2021-11-28 00:38:03+00:00,,0,aleksStajic/CPEN_211_Lab7,432586379,Verilog,CPEN_211_Lab7,783,0,2023-05-22 16:16:51+00:00,[],None
805,https://github.com/ZiaulChoudhury/SCALEBuffer.git,2021-11-27 07:17:33+00:00,,0,ZiaulChoudhury/SCALEBuffer,432394879,Verilog,SCALEBuffer,4162,0,2023-05-08 13:52:20+00:00,[],None
806,https://github.com/mubinui/VLSI.git,2021-11-27 15:18:18+00:00,VLSL lab projects .,0,mubinui/VLSI,432494645,Verilog,VLSI,6,0,2021-11-27 16:14:35+00:00,[],None
807,https://github.com/mehul253/CompArch.git,2021-11-27 17:21:54+00:00,,0,mehul253/CompArch,432523076,Verilog,CompArch,12,0,2021-11-27 17:55:00+00:00,[],None
808,https://github.com/JungleX/MEGATRON.git,2021-11-30 04:16:40+00:00,,0,JungleX/MEGATRON,433290090,Verilog,MEGATRON,4908,0,2021-11-30 08:52:25+00:00,[],None
809,https://github.com/babar-rasool-10xe/riscvprocessor.git,2021-11-30 12:34:25+00:00,,0,babar-rasool-10xe/riscvprocessor,433424181,Verilog,riscvprocessor,4,0,2021-11-30 13:11:59+00:00,[],None
810,https://github.com/arya-araban/Mealy-Moore-Comparator-Verilog.git,2021-11-30 18:27:27+00:00,,0,arya-araban/Mealy-Moore-Comparator-Verilog,433541842,Verilog,Mealy-Moore-Comparator-Verilog,3,0,2021-12-22 17:35:35+00:00,[],None
811,https://github.com/eAlmonte21/Sistema_Mem_Almonte_Luis.git,2021-11-30 19:38:28+00:00,Memory System_Verilog,0,eAlmonte21/Sistema_Mem_Almonte_Luis,433562257,Verilog,Sistema_Mem_Almonte_Luis,15,0,2021-11-30 20:59:24+00:00,[],None
812,https://github.com/eruiz04/Reg_File_Ruiz_Eugenio.git,2021-12-02 19:36:19+00:00,"Iteso Arquitectura de computadoras, Bootcamp Presilicio. T5: Data Path",0,eruiz04/Reg_File_Ruiz_Eugenio,434351213,Verilog,Reg_File_Ruiz_Eugenio,12,0,2021-12-05 09:49:44+00:00,[],None
813,https://github.com/Mavioux/Verilog-HW2.git,2021-12-02 21:33:11+00:00,"Three Verilog projects are included in this file. The first one is a Finite-State Machine, the second a BCD Counter and the third is a Hamming Coder and Decoder",0,Mavioux/Verilog-HW2,434381268,Verilog,Verilog-HW2,649,0,2021-12-02 21:35:12+00:00,[],None
814,https://github.com/shreysambhwani/FSMLamp.git,2021-12-02 21:20:56+00:00,,0,shreysambhwani/FSMLamp,434378400,Verilog,FSMLamp,8,0,2021-12-02 21:41:42+00:00,[],None
815,https://github.com/tgduran7/FPGA-Projects-Fall-2021.git,2021-12-10 12:54:41+00:00,FPGA Projects,0,tgduran7/FPGA-Projects-Fall-2021,436978797,Verilog,FPGA-Projects-Fall-2021,146,0,2021-12-10 14:25:03+00:00,[],None
816,https://github.com/fernandabsm/processador-16bits-mips.git,2021-12-12 17:16:27+00:00,,0,fernandabsm/processador-16bits-mips,437608541,Verilog,processador-16bits-mips,28,0,2021-12-12 19:20:00+00:00,[],None
817,https://github.com/Vishwas1451/Traffic-Light.git,2021-12-08 11:03:07+00:00,,0,Vishwas1451/Traffic-Light,436215420,Verilog,Traffic-Light,8,0,2021-12-08 11:16:16+00:00,[],None
818,https://github.com/mhdahab/CLKGating_DD2Project3.git,2021-12-12 20:33:24+00:00,,0,mhdahab/CLKGating_DD2Project3,437650297,Verilog,CLKGating_DD2Project3,2884,0,2021-12-13 14:36:28+00:00,[],None
819,https://github.com/swarshri/AHD_MC_MS2.git,2021-12-10 18:54:20+00:00,Milestone 2 final submission,0,swarshri/AHD_MC_MS2,437083797,Verilog,AHD_MC_MS2,594,0,2021-12-10 19:00:37+00:00,[],None
820,https://github.com/nambhine1/AXI-Passthrough.git,2021-12-09 13:41:59+00:00,AXI Passthrough,0,nambhine1/AXI-Passthrough,436631406,Verilog,AXI-Passthrough,1,0,2021-12-09 13:42:28+00:00,[],None
821,https://github.com/ArthurLacet/Microwave---Sistemas-Digitais.git,2021-12-28 03:53:33+00:00,Projeto de um microondas em verilog desenvolvido para a disciplina de Sistemas Digitais.,1,ArthurLacet/Microwave---Sistemas-Digitais,442342421,Verilog,Microwave---Sistemas-Digitais,3880,0,2021-12-28 03:59:43+00:00,[],None
822,https://github.com/khaledsaadeh/MIPS-Processor-Project.git,2021-12-28 09:14:21+00:00,Ahmad & Khaled's project. computer architecture II 20/21,0,khaledsaadeh/MIPS-Processor-Project,442410437,,MIPS-Processor-Project,31091,0,2023-07-25 18:18:32+00:00,[],None
823,https://github.com/Arq-Trabajos/Lab6.git,2021-12-01 23:26:40+00:00,,0,Arq-Trabajos/Lab6,434017810,Verilog,Lab6,2216,0,2021-12-09 22:25:57+00:00,[],None
824,https://github.com/ayanchak1508/KRSSG.git,2021-12-07 18:46:56+00:00,"Personal copy of KRSSG code base, containing my own modifications",0,ayanchak1508/KRSSG,435991594,Verilog,KRSSG,1188,0,2021-12-07 19:08:42+00:00,[],None
825,https://github.com/21-cpu-group2/fpu.git,2021-12-07 19:05:02+00:00,,0,21-cpu-group2/fpu,435996323,Verilog,fpu,2824,0,2023-07-18 06:31:16+00:00,[],None
826,https://github.com/aakash30jan/shakti-soc.git,2021-12-07 19:08:58+00:00,SHAKTI (microprocessor) RISC-V ISA / FPGA - the first indigenous Indian industrial-grade processor,0,aakash30jan/shakti-soc,435997396,Verilog,shakti-soc,39594,0,2023-06-10 00:50:42+00:00,[],https://api.github.com/licenses/bsd-3-clause
827,https://github.com/aswathsr101/CPU_VLSI_DESIGN_.git,2021-12-08 00:17:35+00:00,,0,aswathsr101/CPU_VLSI_DESIGN_,436064619,Verilog,CPU_VLSI_DESIGN_,24416,0,2021-12-08 00:27:39+00:00,[],https://api.github.com/licenses/mit
828,https://github.com/morning11pumpkin/altera_fpga_sim.git,2021-12-07 22:56:12+00:00,,0,morning11pumpkin/altera_fpga_sim,436049254,Verilog,altera_fpga_sim,970,0,2021-12-19 17:16:24+00:00,[],None
829,https://github.com/Khaliddxx/Automatic_Clock_Gating.git,2021-12-04 19:09:37+00:00,,0,Khaliddxx/Automatic_Clock_Gating,434987278,Verilog,Automatic_Clock_Gating,2482,0,2021-12-13 10:00:13+00:00,[],None
830,https://github.com/niharikavij/lab7-Creating-a-risc-machine.git,2021-11-29 23:14:03+00:00,,0,niharikavij/lab7-Creating-a-risc-machine,433225785,Verilog,lab7-Creating-a-risc-machine,133,0,2022-01-18 02:55:27+00:00,[],None
831,https://github.com/Caesar-s1mple/32bit_ALU.git,2021-12-08 16:18:44+00:00,,0,Caesar-s1mple/32bit_ALU,436313174,Verilog,32bit_ALU,20,0,2021-12-08 16:22:22+00:00,[],None
832,https://github.com/arctic-cheetah/FPGA_learning.git,2021-12-07 02:06:25+00:00,,0,arctic-cheetah/FPGA_learning,435712118,Verilog,FPGA_learning,39788,0,2022-01-10 02:04:33+00:00,[],None
833,https://github.com/glaciercoder/2021_digital_circuit_FPGA.git,2021-12-07 08:15:03+00:00,Curriculum_project,0,glaciercoder/2021_digital_circuit_FPGA,435796298,Verilog,2021_digital_circuit_FPGA,29575,0,2022-04-22 12:21:10+00:00,[],None
834,https://github.com/taylanu/CMPEN331.git,2021-11-27 22:05:46+00:00,CMPEN 331-Computer Organization and Design. Taylan Unal Fall 2019,0,taylanu/CMPEN331,432564927,Verilog,CMPEN331,18375,0,2022-05-12 20:25:19+00:00,[],https://api.github.com/licenses/mit
835,https://github.com/GitHub970705/yuzhiqiang.git,2021-11-29 12:37:06+00:00,,0,GitHub970705/yuzhiqiang,433036498,Verilog,yuzhiqiang,1653,0,2021-11-29 12:37:32+00:00,[],None
836,https://github.com/markus-zzz/hyperram-test.git,2021-12-29 17:19:49+00:00,Testbench for my HyperRAM board,0,markus-zzz/hyperram-test,442841538,Verilog,hyperram-test,45,0,2021-12-30 15:49:29+00:00,[],None
837,https://github.com/itshahid/Fault-Tolerant_ALU.git,2021-12-30 12:37:09+00:00,MPW4 Tape-out Project ,0,itshahid/Fault-Tolerant_ALU,443070537,Verilog,Fault-Tolerant_ALU,10204,0,2021-12-30 14:21:53+00:00,[],https://api.github.com/licenses/apache-2.0
838,https://github.com/dqiu5/417_Final_Project.git,2021-12-14 16:54:12+00:00,Fall 2021 Group 12 Final Project,0,dqiu5/417_Final_Project,438331624,Verilog,417_Final_Project,5759,0,2021-12-14 23:35:14+00:00,[],None
839,https://github.com/Mohit1352/C_VLSI_HLS_Code.git,2021-12-18 16:19:59+00:00,Code for HLS of C Code from Vivado HLS,0,Mohit1352/C_VLSI_HLS_Code,439660741,Verilog,C_VLSI_HLS_Code,3,0,2021-12-18 16:26:25+00:00,[],None
840,https://github.com/HuangYuantong/CPU.git,2021-12-04 11:40:32+00:00,这是存放计算机系统实验的repository,1,HuangYuantong/CPU,434885298,Verilog,CPU,2423,0,2021-12-20 11:46:28+00:00,[],None
841,https://github.com/anhhui/Multiplier.git,2021-12-05 02:50:52+00:00,,0,anhhui/Multiplier,435058657,Verilog,Multiplier,61,0,2021-12-06 05:50:47+00:00,[],None
842,https://github.com/Dragenskiy/Mpsis.git,2021-12-02 12:25:40+00:00,,0,Dragenskiy/Mpsis,434211415,Verilog,Mpsis,4,0,2021-12-02 12:29:50+00:00,[],None
843,https://github.com/Snake266/miet_risc-v.git,2021-12-21 16:06:52+00:00,Verilog implementation of RISC-V processor. MIET-edition,0,Snake266/miet_risc-v,440575220,Verilog,miet_risc-v,32,0,2021-12-27 11:31:41+00:00,[],https://api.github.com/licenses/bsd-3-clause
844,https://github.com/xuao1/Digital_Circuits_Labs.git,2021-12-19 01:23:58+00:00,,0,xuao1/Digital_Circuits_Labs,439750057,Verilog,Digital_Circuits_Labs,40091,0,2023-10-30 01:45:13+00:00,[],None
845,https://github.com/WijesooriyaHD/Designing-a-simple-processor.git,2021-12-24 12:30:34+00:00,"Designing and implementation of an 8-bit single cycle CPU to support a custom ISA. This processor includes an ALU, 8x8 register file , control logic and a memory sub-system which contains caching techniques.",0,WijesooriyaHD/Designing-a-simple-processor,441460935,Verilog,Designing-a-simple-processor,1295,0,2024-01-14 14:23:52+00:00,[],None
