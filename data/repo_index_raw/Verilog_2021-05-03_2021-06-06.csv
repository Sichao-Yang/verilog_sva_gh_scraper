,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/schlae/graphics-gremlin.git,2021-05-14 16:45:09+00:00,Open source retro ISA video card,22,schlae/graphics-gremlin,367424771,Verilog,graphics-gremlin,1389,483,2024-04-11 04:47:37+00:00,[],None
1,https://github.com/eminfedar/fedar-f1-rv64im.git,2021-05-04 22:39:21+00:00,5-Stage Pipelined RV64IM RISC-V CPU design in Verilog.,16,eminfedar/fedar-f1-rv64im,364403964,Verilog,fedar-f1-rv64im,2907,172,2024-04-04 08:58:28+00:00,"['riscv64', 'riscv', 'riscv64im', 'core']",https://api.github.com/licenses/mit
2,https://github.com/WangXuan95/FPGA-CAN.git,2021-05-08 06:40:35+00:00,An FPGA-based lightweight CAN bus controller. 基于FPGA的轻量级CAN总线控制器。,52,WangXuan95/FPGA-CAN,365439563,Verilog,FPGA-CAN,426,167,2024-04-12 06:26:18+00:00,"['can', 'can-bus', 'fpga', 'verilog', 'systemverilog', 'rtl', 'controller', 'control-area-network']",https://api.github.com/licenses/gpl-3.0
3,https://github.com/rj45/rj32.git,2021-05-29 00:02:16+00:00,A 16-bit RISC CPU with 32 instructions built with Digital for running on an FPGA.,14,rj45/rj32,371843749,Verilog,rj32,8936,74,2024-04-09 14:06:09+00:00,"['cpu', 'verilog', 'fpga', 'vga', 'dvi', 'simulator', 'simulation', 'processor']",https://api.github.com/licenses/mit
4,https://github.com/Wren6991/Hazard3.git,2021-05-22 09:20:12+00:00,3-stage RV32IMACZb* processor with debug,8,Wren6991/Hazard3,369765988,Verilog,Hazard3,3377,69,2024-03-13 12:56:31+00:00,"['riscv', 'risc-v', 'jtag']",https://api.github.com/licenses/apache-2.0
5,https://github.com/aignacio/mpsoc_example.git,2021-05-24 19:25:11+00:00,,11,aignacio/mpsoc_example,370462770,Verilog,mpsoc_example,39499,53,2024-03-26 07:19:51+00:00,[],None
6,https://github.com/ultraembedded/core_uriscv.git,2021-05-10 18:40:27+00:00,Another tiny RISC-V implementation,12,ultraembedded/core_uriscv,366142849,Verilog,core_uriscv,67,50,2024-02-28 03:49:27+00:00,[],https://api.github.com/licenses/apache-2.0
7,https://github.com/asicsforthemasses/LunaPnR.git,2021-05-19 10:44:44+00:00,LunaPnR is a place and router for integrated circuits,1,asicsforthemasses/LunaPnR,368834334,Verilog,LunaPnR,3548,37,2024-01-16 17:24:14+00:00,[],None
8,https://github.com/gatecat/hrt.git,2021-05-21 11:50:26+00:00,Hot Reconfiguration Technology demo,0,gatecat/hrt,369518328,Verilog,hrt,20,36,2023-09-08 18:22:31+00:00,[],None
9,https://github.com/no2fpga/no2muacm.git,2021-05-27 17:52:00+00:00,Drop In USB CDC ACM core for iCE40 FPGA,3,no2fpga/no2muacm,371459125,Verilog,no2muacm,82,30,2024-02-25 02:22:20+00:00,"['ice40', 'fpga', 'usb', 'cdc-acm']",
10,https://github.com/furrtek/Arcade-TMNT_MiSTer.git,2021-05-14 02:51:10+00:00,Konami's Teenage Mutant Ninja Turtles for the MiSTer FPGA platform,8,furrtek/Arcade-TMNT_MiSTer,367232143,Verilog,Arcade-TMNT_MiSTer,3187,29,2024-04-08 08:35:28+00:00,"['arcade', 'fpga', 'konami', 'tmnt', 'verilog']",https://api.github.com/licenses/gpl-2.0
11,https://github.com/embedded-explorer/Open-Source-RTL-Design.git,2021-05-26 15:36:05+00:00,"This repository documents the learning from VSD ""RTL Design Using Verilog With SKY130 Technology"" workshop",7,embedded-explorer/Open-Source-RTL-Design,371085563,Verilog,Open-Source-RTL-Design,11354,27,2024-02-08 18:49:21+00:00,"['gate-level-simulation', 'yosys', 'vsd', 'open-source-rtl']",None
12,https://github.com/ultraembedded/core_axi_cache.git,2021-05-10 19:35:39+00:00,"128KB AXI cache (32-bit in, 256-bit out)",5,ultraembedded/core_axi_cache,366155826,Verilog,core_axi_cache,19,26,2024-04-03 09:04:36+00:00,[],https://api.github.com/licenses/bsd-3-clause
13,https://github.com/tastynoob/FPGA_network.git,2021-05-29 09:53:42+00:00,,6,tastynoob/FPGA_network,371936715,Verilog,FPGA_network,4,24,2024-03-15 08:51:08+00:00,[],None
14,https://github.com/LIV2/GottaGoFastRAM2000.git,2021-05-13 10:47:21+00:00,8MB autoconfig fast memory for the Amiga 2000,2,LIV2/GottaGoFastRAM2000,367017984,Verilog,GottaGoFastRAM2000,935,23,2024-04-02 12:25:42+00:00,[],
15,https://github.com/yang-le/riscv_cpu.git,2021-05-05 02:51:26+00:00,a simple riscv cpu,3,yang-le/riscv_cpu,364444884,Verilog,riscv_cpu,166,20,2024-01-08 16:58:21+00:00,[],None
16,https://github.com/PS-FPGA/ps-fpga.git,2021-05-10 19:47:40+00:00,The PS-FPGA project (top level),7,PS-FPGA/ps-fpga,366158493,Verilog,ps-fpga,275,20,2022-04-19 05:47:39+00:00,[],None
17,https://github.com/mballance/clusterv-soc.git,2021-05-26 23:57:26+00:00,Quad cluster of RISC-V cores with peripherals and local memory,8,mballance/clusterv-soc,371197251,Verilog,clusterv-soc,789,20,2024-02-04 21:39:09+00:00,[],https://api.github.com/licenses/apache-2.0
18,https://github.com/Starrynightzyq/Delta-Sigma-Modulator.git,2021-05-15 14:41:41+00:00,Delta-Sigma modulator (DSM) for fractional phase locked loop.,3,Starrynightzyq/Delta-Sigma-Modulator,367655460,Verilog,Delta-Sigma-Modulator,21008,20,2024-02-28 12:46:03+00:00,[],https://api.github.com/licenses/mit
19,https://github.com/esden/icekeeb.git,2021-05-18 04:15:44+00:00,iCEBreaker FPGA Keyboard Gateware and Firmware.,2,esden/icekeeb,368398095,Verilog,icekeeb,144,18,2024-01-10 17:48:27+00:00,[],None
20,https://github.com/Opatusos/SNES_TST.git,2021-05-27 07:34:30+00:00,SNES TST RGB,3,Opatusos/SNES_TST,371286127,Verilog,SNES_TST,184296,18,2024-03-07 13:58:20+00:00,[],https://api.github.com/licenses/gpl-3.0
21,https://github.com/Anthon1e/JESD204B-Transport-and-Data-Link-Layer.git,2021-05-19 06:59:03+00:00,Implementation of JESD204B Transport Layer & part of Data Link Layer,15,Anthon1e/JESD204B-Transport-and-Data-Link-Layer,368773591,Verilog,JESD204B-Transport-and-Data-Link-Layer,181,16,2024-04-03 10:15:20+00:00,[],None
22,https://github.com/zianglei/LittleChip.git,2021-05-19 02:36:52+00:00,Little RISC-V 3-stage Pipeline CPU,5,zianglei/LittleChip,368723556,Verilog,LittleChip,10308,15,2023-02-28 12:40:29+00:00,[],None
23,https://github.com/techvinodreddy/UART-IP-CORE16550A-Verification-UVM.git,2021-06-05 04:49:14+00:00,"The UART (Universal Asynchronous Receiver/Transmitter) core provides serial communication capabilities, which allow communication with a modem or other external devices, like another computer using a serial cable and RS232 protocol. This core is designed to be maximally compatible with the industry-standard National  Semiconductors’ 16550A device. ",2,techvinodreddy/UART-IP-CORE16550A-Verification-UVM,374022732,Verilog,UART-IP-CORE16550A-Verification-UVM,11830,14,2024-04-09 23:40:22+00:00,[],None
24,https://github.com/andrewattwood/fuserisc.git,2021-06-02 08:48:07+00:00,Dual RISC-V DISC with integrated eFPGA,4,andrewattwood/fuserisc,373096457,Verilog,fuserisc,409351,14,2023-08-31 17:18:55+00:00,[],https://api.github.com/licenses/apache-2.0
25,https://github.com/KULeuven-COSIC/NTRU_NTT_HW.git,2021-06-03 12:45:49+00:00,,3,KULeuven-COSIC/NTRU_NTT_HW,373504304,Verilog,NTRU_NTT_HW,1325,13,2023-12-24 01:32:54+00:00,[],
26,https://github.com/splinedrive/fpga_rtc_alarm_clock.git,2021-05-14 18:15:13+00:00,fpga i2c rtc oled based clock with alarm supports buzzer,2,splinedrive/fpga_rtc_alarm_clock,367445775,Verilog,fpga_rtc_alarm_clock,117,11,2024-02-21 23:36:46+00:00,"['fpga', 'ds3231', 'oled', 'ssd1306-oled', 'rtc', 'verilog', 'alarm', 'buzzer', 'ice40', 'sdd1306']",https://api.github.com/licenses/isc
27,https://github.com/parnabghosh1004/Floating-Point-ALU.git,2021-05-17 05:59:02+00:00,Verilog Gate level Implementation of floating point arithmetic as per IEEE 754,3,parnabghosh1004/Floating-Point-ALU,368072228,Verilog,Floating-Point-ALU,12,10,2023-11-18 15:02:22+00:00,[],None
28,https://github.com/splinedrive/i2c_oled_fpga_bresenham.git,2021-05-16 10:24:14+00:00,i2c fpga oled sdd1306 bresenham implementation,0,splinedrive/i2c_oled_fpga_bresenham,367847743,Verilog,i2c_oled_fpga_bresenham,112,10,2024-03-04 01:19:17+00:00,"['bresenham', 'fpga', 'ice40', 'icebreaker', 'blackicemx', 'oled', 'i2c', 'oled-display-ssd1306', 'verilog', 'icesugar', 'icesugar-nano']",https://api.github.com/licenses/isc
29,https://github.com/hsiehong/tpu.git,2021-05-06 13:53:28+00:00,"AIChip 2021 project, NCKU",0,hsiehong/tpu,364927675,Verilog,tpu,10,10,2024-02-23 10:09:13+00:00,[],None
30,https://github.com/Ni-ChiTing/IC_contest_cell_based_design.git,2021-05-30 19:25:33+00:00,,3,Ni-ChiTing/IC_contest_cell_based_design,372298382,Verilog,IC_contest_cell_based_design,8701,9,2024-03-15 05:30:30+00:00,[],None
31,https://github.com/edwindj/rvee.git,2021-05-31 07:23:18+00:00,Recreational V programming for R,0,edwindj/rvee,372418525,Verilog,rvee,1891,8,2023-05-02 19:50:40+00:00,"['r-package', 'r', 'vlang']",
32,https://github.com/kbeckmann/wrapped_gfxdemo.git,2021-05-07 11:15:12+00:00,,2,kbeckmann/wrapped_gfxdemo,365208499,Verilog,wrapped_gfxdemo,6609,7,2023-03-01 09:18:12+00:00,[],https://api.github.com/licenses/apache-2.0
33,https://github.com/saikat27/riscvofdm.git,2021-05-03 17:41:46+00:00,An OFDM Accelerator for RISC-V based Processors,3,saikat27/riscvofdm,364012036,Verilog,riscvofdm,231,7,2024-03-08 11:09:09+00:00,[],https://api.github.com/licenses/gpl-3.0
34,https://github.com/xolod79/MC1201.git,2021-06-06 19:12:28+00:00,,1,xolod79/MC1201,374443626,Verilog,MC1201,37305,7,2024-01-07 19:56:33+00:00,[],https://api.github.com/licenses/gpl-2.0
35,https://github.com/kuopinghsu/biriscv.git,2021-05-20 12:02:33+00:00,biRISC-V - 32-bit dual issue RISC-V CPU Software Environment,4,kuopinghsu/biriscv,369193407,Verilog,biriscv,2356,7,2024-02-19 08:30:56+00:00,[],None
36,https://github.com/acoimbramendes/uart_RTL_to_GDSII.git,2021-05-28 00:00:55+00:00,"Project of an integrated UART: RTL, Verification, Physical Implementation (Innovus) and GDSII.",0,acoimbramendes/uart_RTL_to_GDSII,371532694,Verilog,uart_RTL_to_GDSII,311,7,2024-03-04 11:43:29+00:00,[],None
37,https://github.com/nmk456/fpga-sdr.git,2021-05-31 17:37:30+00:00,Verilog code for Deca SDR,1,nmk456/fpga-sdr,372584876,Verilog,fpga-sdr,341,7,2024-02-23 04:01:12+00:00,[],https://api.github.com/licenses/mit
38,https://github.com/vsdip/rvmyth_avsdpll_interface.git,2021-05-21 04:59:49+00:00,,1,vsdip/rvmyth_avsdpll_interface,369418216,Verilog,rvmyth_avsdpll_interface,3925,7,2023-12-11 23:37:15+00:00,[],None
39,https://github.com/icgrp/rosetta_vitis.git,2021-05-16 23:32:34+00:00,,1,icgrp/rosetta_vitis,368006186,Verilog,rosetta_vitis,3485146,6,2023-02-13 07:35:23+00:00,[],https://api.github.com/licenses/bsd-3-clause
40,https://github.com/gatecat/mistral-test.git,2021-05-11 20:18:33+00:00,,0,gatecat/mistral-test,366502997,Verilog,mistral-test,35,6,2022-05-30 08:42:31+00:00,[],None
41,https://github.com/arjunrajasekharan/Tomasulo-Architecture.git,2021-05-14 07:00:59+00:00,Simulation of the Tomasulo algorithm using python and verilog.Python code has been included to simulate dynamic instruction scheduling.This project was done as the part of Computer Architecture course.,2,arjunrajasekharan/Tomasulo-Architecture,367277632,Verilog,Tomasulo-Architecture,72,6,2022-12-09 17:28:52+00:00,"['tomasulo-algorithm', 'computer-architecture', 'processor', 'verilog', 'dynamic-scheduling']",None
42,https://github.com/JagrutJadhav/32_bit_MIPS_Pipeline_Datapath_Simulation.git,2021-05-17 07:04:17+00:00,Computer Architecture Project - Understand how the process of execution of the machine code in the MIPS pipelined data path takes place.,1,JagrutJadhav/32_bit_MIPS_Pipeline_Datapath_Simulation,368088154,Verilog,32_bit_MIPS_Pipeline_Datapath_Simulation,2619,6,2023-09-09 10:46:30+00:00,[],None
43,https://github.com/ayaadelhassan/DCNN_Accelerator.git,2021-05-16 13:26:15+00:00,,1,ayaadelhassan/DCNN_Accelerator,367887524,Verilog,DCNN_Accelerator,3732,6,2021-12-09 22:32:36+00:00,[],https://api.github.com/licenses/mit
44,https://github.com/MiskaMoska/Multi-NoC.git,2021-05-07 09:17:02+00:00,RTL and UVM test code of a Multi-NoC system,3,MiskaMoska/Multi-NoC,365179410,Verilog,Multi-NoC,3839,6,2024-03-12 03:12:38+00:00,[],https://api.github.com/licenses/gpl-3.0
45,https://github.com/lingbai-kong/MIPS54-multicycle-CPU.git,2021-05-04 10:37:21+00:00,同济大学CS《计算机组成原理课程设计》暑期作业TongJi University CS computer organization assignment,1,lingbai-kong/MIPS54-multicycle-CPU,364221109,Verilog,MIPS54-multicycle-CPU,24882,6,2023-08-09 13:38:24+00:00,"['mips', 'multcycle', 'tongji-university', 'fpga', 'computer-organization']",None
46,https://github.com/MarkMLl/tang_nano_as_shipped.git,2021-05-06 18:40:31+00:00,A close approximation of the demo code on Sipeed Tang Nano boards as shipped.,0,MarkMLl/tang_nano_as_shipped,365005407,Verilog,tang_nano_as_shipped,46,5,2023-09-05 05:33:04+00:00,"['fpga', 'verilog', 'vhdl']",https://api.github.com/licenses/gpl-3.0
47,https://github.com/Cameltr/WHU-CPUwork.git,2021-05-15 17:14:13+00:00,,0,Cameltr/WHU-CPUwork,367689116,Verilog,WHU-CPUwork,35127,5,2023-04-06 07:17:58+00:00,[],None
48,https://github.com/tharunchitipolu/Parallel-Cordic.git,2021-05-31 12:58:36+00:00,,2,tharunchitipolu/Parallel-Cordic,372507517,Verilog,Parallel-Cordic,2,5,2024-02-21 15:11:42+00:00,"['vlsi', 'digital', 'cordic-algorithm', 'parallel-processing', 'cordic']",None
49,https://github.com/eda-rs/netlist.git,2021-05-15 04:25:05+00:00,generic NetList data structure for  VLSI,2,eda-rs/netlist,367538502,Verilog,netlist,18639,5,2023-09-13 15:56:05+00:00,"['vlsi', 'verilog', 'physical-design', 'eda', 'verification']",https://api.github.com/licenses/apache-2.0
50,https://github.com/suisuisi/oldcpu.git,2021-05-05 11:26:42+00:00,Ancient CPU Revelation,2,suisuisi/oldcpu,364553572,Verilog,oldcpu,42711,5,2024-03-16 04:58:07+00:00,[],None
51,https://github.com/fontamsoc/hw.git,2021-05-26 01:16:32+00:00,,1,fontamsoc/hw,370870188,Verilog,hw,5263,5,2023-04-04 23:05:40+00:00,[],https://api.github.com/licenses/gpl-2.0
52,https://github.com/mindstation/DE2_115_Genesis.git,2021-05-08 11:37:14+00:00,FPGA Genesis core,1,mindstation/DE2_115_Genesis,365498825,Verilog,DE2_115_Genesis,13023,5,2023-11-25 16:05:59+00:00,[],https://api.github.com/licenses/gpl-3.0
53,https://github.com/arjunrajasekharan/16-bit-DADDA-Multiplier.git,2021-05-14 11:50:44+00:00,16-bit DADDA Multiplier design using using 5:2 compressor as the major reduction compressor and 4:2 compressor; and FullAdder and HalfAdder to simulate 3:2 and 2:2 compressors respectively.,0,arjunrajasekharan/16-bit-DADDA-Multiplier,367346753,Verilog,16-bit-DADDA-Multiplier,28,5,2024-02-21 15:11:41+00:00,"['dadda-tree-multiplier', 'compressor', 'vlsi', 'iverilog', 'gtkwave', 'testbench']",https://api.github.com/licenses/mit
54,https://github.com/Waxpple/Sparse_cnn_verilog.git,2021-05-30 02:54:33+00:00,,0,Waxpple/Sparse_cnn_verilog,372110427,Verilog,Sparse_cnn_verilog,60064,4,2024-01-10 08:38:34+00:00,[],None
55,https://github.com/mfkiwl/ad936x_lvds_if.git,2021-05-06 06:04:11+00:00,ad936x lvds interface,1,mfkiwl/ad936x_lvds_if,364801865,,ad936x_lvds_if,7,4,2024-03-12 15:54:11+00:00,[],None
56,https://github.com/sks9691901/32bit-Floating-Point-ALU-using-Verilog.git,2021-05-04 15:51:44+00:00,32bit Floating Point Arithmetical Logical Unit ,3,sks9691901/32bit-Floating-Point-ALU-using-Verilog,364308847,Verilog,32bit-Floating-Point-ALU-using-Verilog,109,4,2024-03-18 17:46:45+00:00,[],None
57,https://github.com/prajwal1999/4x4-Swittch---Verilog.git,2021-05-16 07:27:01+00:00,4x4 Crossbar switch implemented in verilog,1,prajwal1999/4x4-Swittch---Verilog,367812581,Verilog,4x4-Swittch---Verilog,38,4,2024-03-13 08:22:40+00:00,[],None
58,https://github.com/ElectronAsh/Sega32_MiSTer.git,2021-06-05 16:16:58+00:00,,0,ElectronAsh/Sega32_MiSTer,374159517,Verilog,Sega32_MiSTer,70689,4,2022-04-12 07:10:12+00:00,[],https://api.github.com/licenses/gpl-3.0
59,https://github.com/KashifInayat/CPAF-Gemmini-ML-Electronics.git,2021-05-29 15:18:43+00:00,,0,KashifInayat/CPAF-Gemmini-ML-Electronics,372005356,Verilog,CPAF-Gemmini-ML-Electronics,25171,4,2024-02-07 08:42:16+00:00,[],None
60,https://github.com/Lampro-Mellon/Caravel_FPU.git,2021-05-21 05:01:09+00:00,,4,Lampro-Mellon/Caravel_FPU,369418435,Verilog,Caravel_FPU,78322,4,2023-04-20 06:06:45+00:00,[],https://api.github.com/licenses/apache-2.0
61,https://github.com/LewisChLiu/Tsinghua-MultiCycleCPU.git,2021-05-17 06:52:24+00:00,,0,LewisChLiu/Tsinghua-MultiCycleCPU,368085092,Verilog,Tsinghua-MultiCycleCPU,35,4,2022-12-27 17:09:26+00:00,[],None
62,https://github.com/Adrofier/HDLBits-Verilog-Solutions.git,2021-05-20 15:12:34+00:00,Solutions to HDLBits Verilog Problem Set,1,Adrofier/HDLBits-Verilog-Solutions,369250227,Verilog,HDLBits-Verilog-Solutions,189,4,2024-03-25 11:36:18+00:00,"['hdlbits', 'verilog', 'practice', 'solution', 'problem', 'codes']",https://api.github.com/licenses/mit
63,https://github.com/fluctlight001/April_CPU.git,2021-05-27 01:19:03+00:00,A cpu plan in April,2,fluctlight001/April_CPU,371210623,Verilog,April_CPU,11806,4,2022-07-25 07:30:40+00:00,[],https://api.github.com/licenses/gpl-3.0
64,https://github.com/Anthon1e/8B-10B-Encoder-Decoder.git,2021-05-05 07:29:02+00:00,"8b/10b is a line code that maps 8-bit words to 10-bit symbols to achieve DC-balance and bounded disparity, which is used for telecommunications",4,Anthon1e/8B-10B-Encoder-Decoder,364495010,Verilog,8B-10B-Encoder-Decoder,225,4,2024-03-01 02:25:20+00:00,[],None
65,https://github.com/schang412/verilog-spi.git,2021-05-23 04:25:17+00:00,,1,schang412/verilog-spi,369959718,Verilog,verilog-spi,86,3,2022-11-11 01:28:22+00:00,[],https://api.github.com/licenses/mit
66,https://github.com/null-a/ice40-breakout-pcb.git,2021-05-22 10:16:02+00:00,A development board for the Lattice iCE40 FPGA,1,null-a/ice40-breakout-pcb,369776605,Verilog,ice40-breakout-pcb,157,3,2023-06-04 20:23:24+00:00,[],None
67,https://github.com/JTFPGA/jts16.git,2021-05-31 05:56:11+00:00,Accurate FPGA core compatible with SEGA System 16 arcades,1,JTFPGA/jts16,372397512,Verilog,jts16,47730,3,2024-04-08 08:34:33+00:00,[],https://api.github.com/licenses/gpl-3.0
68,https://github.com/tastynoob/FPGA_verilog_R8051.git,2021-06-04 03:38:12+00:00,,1,tastynoob/FPGA_verilog_R8051,373710911,Verilog,FPGA_verilog_R8051,14,3,2022-12-19 08:00:48+00:00,[],None
69,https://github.com/kenneth96yd/gemm.git,2021-05-26 08:41:08+00:00,,0,kenneth96yd/gemm,370964939,Verilog,gemm,3,3,2023-10-18 07:48:35+00:00,[],None
70,https://github.com/bardakcib/VerySimpleCPU.git,2021-06-02 11:49:07+00:00,,0,bardakcib/VerySimpleCPU,373148803,Verilog,VerySimpleCPU,5,3,2021-06-04 08:42:29+00:00,[],None
71,https://github.com/18520460/3x3-filter-size-line-buffer-convolution.git,2021-05-21 14:30:39+00:00,,0,18520460/3x3-filter-size-line-buffer-convolution,369562036,Verilog,3x3-filter-size-line-buffer-convolution,4,3,2024-01-24 03:40:33+00:00,[],None
72,https://github.com/Moorvan/riscv-mini-formal.git,2021-05-14 01:57:23+00:00,通过使用 riscv-formal 框架验证 riscv-mini,1,Moorvan/riscv-mini-formal,367222411,Verilog,riscv-mini-formal,1193,3,2024-01-16 01:53:39+00:00,[],None
73,https://github.com/spdy1895/RTL_synthesis_using_sky130.git,2021-05-26 18:12:47+00:00,,3,spdy1895/RTL_synthesis_using_sky130,371129016,Verilog,RTL_synthesis_using_sky130,120,3,2024-02-21 13:04:20+00:00,[],None
74,https://github.com/litex-hub/pythondata-misc-usb_ohci.git,2021-05-27 10:15:16+00:00,Python module containing verilog files for the Spinal-HDL USB OHCI core (for use with LiteX).,0,litex-hub/pythondata-misc-usb_ohci,371330732,Verilog,pythondata-misc-usb_ohci,43,3,2022-05-30 14:31:27+00:00,[],None
75,https://github.com/ashkan-khd/conways-game-of-life-verilog.git,2021-05-26 05:09:51+00:00,An easy approach for Conway's Game Of Life with Verilog HDL,0,ashkan-khd/conways-game-of-life-verilog,370913175,Verilog,conways-game-of-life-verilog,7,3,2023-09-21 12:50:32+00:00,"['game-of-life', 'verilog', 'verilog-hdl', 'testbench', 'game-of-life-verilog', 'verilog-game-of-life', 'conways-game-of-life', 'conways-game-of-life-verilog']",None
76,https://github.com/manikajain11/Traffic-Signal-Controller.git,2021-05-22 17:17:11+00:00,Designing and Modelling of an Intelligent Traffic Signal Controller using FSM in Verilog HDL,1,manikajain11/Traffic-Signal-Controller,369865956,Verilog,Traffic-Signal-Controller,1192,3,2023-11-13 02:11:37+00:00,"['verilog', 'verilog-hdl', 'verilog-project', 'traffic-signal-control', 'finite-state-machine', 'sensors', 'timers', 'highway']",https://api.github.com/licenses/mit
77,https://github.com/kervias/mips-cpu.git,2021-06-02 15:37:28+00:00,系统硬件综合设计,0,kervias/mips-cpu,373219712,Verilog,mips-cpu,79,3,2023-10-16 05:43:43+00:00,[],None
78,https://github.com/Adithya-S-Bhat/Pattern-Matching-Using-FPGA.git,2021-05-24 08:34:23+00:00,Pattern matching is the process of checking whether a specific sequence of characters/tokens/data exists among the given data.,2,Adithya-S-Bhat/Pattern-Matching-Using-FPGA,370282530,Verilog,Pattern-Matching-Using-FPGA,16585,3,2023-03-23 12:51:15+00:00,[],None
79,https://github.com/pyadav1992/RTL-FixedPoint-Arithmetics-MathematicalFunctions.git,2021-05-27 19:29:52+00:00,RTL design and implementation of fixed-point parametric arithmetic operators and mathematical functions using Verilog HDL,1,pyadav1992/RTL-FixedPoint-Arithmetics-MathematicalFunctions,371483232,Verilog,RTL-FixedPoint-Arithmetics-MathematicalFunctions,98,3,2024-01-16 14:34:51+00:00,[],https://api.github.com/licenses/gpl-3.0
80,https://github.com/Chen-yu-Zheng/2021SpringCOE-WHU.git,2021-06-03 06:48:22+00:00,武汉大学2021年春季学期，计算机组成原理实验代码，包括modelsim和vivado工程文件,0,Chen-yu-Zheng/2021SpringCOE-WHU,373408900,Verilog,2021SpringCOE-WHU,17635,3,2023-06-26 07:38:39+00:00,[],https://api.github.com/licenses/mit
81,https://github.com/mohadesehazari98/DLD.git,2021-05-18 18:38:28+00:00,all codes about digital logic design projects ,0,mohadesehazari98/DLD,368632887,Verilog,DLD,13684,3,2021-10-07 15:12:17+00:00,[],None
82,https://github.com/Ellen7ions/Gemini.git,2021-05-28 12:39:21+00:00,,0,Ellen7ions/Gemini,371696289,Verilog,Gemini,3288,3,2024-01-02 14:14:32+00:00,"['mips', 'cache', 'dual-issue', 'pipeline']",https://api.github.com/licenses/gpl-3.0
83,https://github.com/tharunchitipolu/SHA-256-Verilog-HDL.git,2021-05-22 04:59:16+00:00,"SHA-2 (Secure Hash Algorithm 2), of which SHA-256 is a part, is one of the most popular hashing algorithms out there.",1,tharunchitipolu/SHA-256-Verilog-HDL,369718575,Verilog,SHA-256-Verilog-HDL,13,3,2024-02-21 15:11:42+00:00,"['sha256-hash', 'verilog-hdl', 'security', 'hardware', 'cryptography', 'vlsi', 'vlsi-project']",None
84,https://github.com/reticenceji/toy-riscv-cpu.git,2021-05-04 14:04:34+00:00,用FPGA写的简单的RISCV单周期CPU，支持少数指令,0,reticenceji/toy-riscv-cpu,364276053,Verilog,toy-riscv-cpu,265,3,2022-04-06 09:40:48+00:00,[],None
85,https://github.com/thebesttv/blog.git,2021-05-18 09:29:48+00:00,"blog, of EServer",0,thebesttv/blog,368473216,Verilog,blog,30290,3,2023-01-26 12:49:38+00:00,[],None
86,https://github.com/jamon/jspcpu.git,2021-05-05 04:45:54+00:00,,0,jamon/jspcpu,364463678,Verilog,jspcpu,200,3,2021-11-23 14:43:53+00:00,[],None
87,https://github.com/zhangbaozhe/mips-five-stage-cpu.git,2021-05-06 05:51:57+00:00,Course project at  CUHK-Shenzhen,0,zhangbaozhe/mips-five-stage-cpu,364799445,Verilog,mips-five-stage-cpu,1174,2,2023-08-17 02:29:19+00:00,[],None
88,https://github.com/adz0612/medianFilter-Verilog.git,2021-05-28 15:50:15+00:00,,0,adz0612/medianFilter-Verilog,371750045,Verilog,medianFilter-Verilog,10,2,2023-09-15 01:12:16+00:00,[],None
89,https://github.com/eslam2xm/digital-design-of-32-point-FFT.git,2021-06-03 21:48:22+00:00,digital design of a 32-point FFT in RTL using The Cooley-Tukey algorithm. our FFT is broken down into 2-point FFT  (butterfly method),0,eslam2xm/digital-design-of-32-point-FFT,373649693,Verilog,digital-design-of-32-point-FFT,56,2,2022-03-26 15:43:45+00:00,[],None
90,https://github.com/david-oswald/giant-revB.git,2021-05-26 12:30:16+00:00,The GIAnT fault injection board in the new revision,0,david-oswald/giant-revB,371026464,Verilog,giant-revB,21236,2,2023-10-09 12:27:41+00:00,[],
91,https://github.com/wandergithub/Google_T-rex_Game.git,2021-05-04 00:06:51+00:00,This proyect is a game made with Verilog. Implementing a copy of the T-rex google game using an FPGA in a Spartan 6 with the use of VGA.,0,wandergithub/Google_T-rex_Game,364093825,Verilog,Google_T-rex_Game,4256,2,2023-05-13 15:42:43+00:00,"['fpga', 'game', 'spartan6', 'verilog-hdl', 'vga']",None
92,https://github.com/konradwilk/fibonacci.git,2021-05-19 03:16:54+00:00,,1,konradwilk/fibonacci,368731224,Verilog,fibonacci,37722,2,2023-08-05 09:50:45+00:00,[],https://api.github.com/licenses/apache-2.0
93,https://github.com/Melody0321/CS202_ComputerOrganization-2021Spring.git,2021-05-21 06:44:59+00:00,,0,Melody0321/CS202_ComputerOrganization-2021Spring,369439675,Verilog,CS202_ComputerOrganization-2021Spring,269,2,2022-12-31 06:14:21+00:00,[],https://api.github.com/licenses/agpl-3.0
94,https://github.com/Aminsaveh/ComputerArchitectureLab.git,2021-05-24 16:37:34+00:00,Projects of SBU Architecture Laboratory Course - Spring 2021 ,0,Aminsaveh/ComputerArchitectureLab,370419668,Verilog,ComputerArchitectureLab,22966,2,2023-01-01 13:46:49+00:00,[],None
95,https://github.com/Kammann123/ev21g1.git,2021-05-11 20:24:09+00:00,"General purpose processor with a RISC architecture and a five stage pipeline, implemented on a Cyclone IV FPGA using a development board",2,Kammann123/ev21g1,366504198,Verilog,ev21g1,8858,2,2022-02-09 19:13:41+00:00,"['fpga', 'de0-nano', 'cpu-architecture', 'architecture', 'cpu', 'verilog', 'hdl']",None
96,https://github.com/pyadav1992/RTL-FIR-IIR-FILTERS.git,2021-06-05 00:31:38+00:00,RTL design and implementation of a fixed-point parametric FIR and IIR filters using Verilog HDL.,0,pyadav1992/RTL-FIR-IIR-FILTERS,373988496,Verilog,RTL-FIR-IIR-FILTERS,51,2,2023-02-03 09:09:23+00:00,[],https://api.github.com/licenses/gpl-3.0
97,https://github.com/bahaaEldeen1999/DCNN-IO-module.git,2021-05-11 04:19:03+00:00,,2,bahaaEldeen1999/DCNN-IO-module,366253062,Verilog,DCNN-IO-module,22692,2,2021-08-23 11:48:04+00:00,[],None
98,https://github.com/microxblue/riscv_mx.git,2021-05-30 15:18:58+00:00,A PicoRV32 based system with many interface extension.,0,microxblue/riscv_mx,372247786,Verilog,riscv_mx,3055,2,2023-12-16 08:22:03+00:00,"['risc-v', 'vga', 'fpga', 'cyclone10lp']",None
99,https://github.com/farhan-tallman/pwm_verilog.git,2021-05-11 10:30:19+00:00,basic pwm controller led dimmer based on coolrunner 2,0,farhan-tallman/pwm_verilog,366343234,Verilog,pwm_verilog,3,2,2022-05-19 08:52:31+00:00,[],None
100,https://github.com/abcgeneraion/CPU-based-RISC-V.git,2021-05-27 07:01:13+00:00,基于RISC-V架构CPU模型机的设计过程,0,abcgeneraion/CPU-based-RISC-V,371277403,Verilog,CPU-based-RISC-V,3151,2,2023-09-26 08:11:08+00:00,[],None
101,https://github.com/shgabr/RISC-V-Processor.git,2021-06-01 14:21:24+00:00,Implementation of entire RISC-V ISA using Verilog to run on FPGA,1,shgabr/RISC-V-Processor,372856617,Verilog,RISC-V-Processor,2938,2,2022-01-31 08:16:43+00:00,[],None
102,https://github.com/tian-y-x/CS202_computer_organization_project_CPU.git,2021-05-24 09:49:30+00:00,,0,tian-y-x/CS202_computer_organization_project_CPU,370303155,Verilog,CS202_computer_organization_project_CPU,47479,2,2022-07-06 13:14:34+00:00,[],None
103,https://github.com/abdelazeem201/Hardware-Ethernet-Implementation.git,2021-05-09 03:36:59+00:00,A hardware implementation of Ethernet communication on a on the DE2 development board,0,abdelazeem201/Hardware-Ethernet-Implementation,365659935,Verilog,Hardware-Ethernet-Implementation,3593,2,2022-04-05 01:17:37+00:00,[],https://api.github.com/licenses/mit
104,https://github.com/aignacio/deca_board_demo.git,2021-05-18 12:31:01+00:00,,0,aignacio/deca_board_demo,368522292,Verilog,deca_board_demo,135,2,2022-05-26 01:34:05+00:00,[],None
105,https://github.com/KamalaVennelaVasireddy/HDL-based-projects.git,2021-05-19 10:50:30+00:00,Projects that can be simulated on Xilinx ISE. The language used is Verilog.,0,KamalaVennelaVasireddy/HDL-based-projects,368835771,Verilog,HDL-based-projects,2441,2,2021-05-22 14:35:07+00:00,[],None
106,https://github.com/PXVI/ip_vga_ctlr_v.git,2021-05-15 18:52:00+00:00,VGA controller RTL ( soft ip ) in Verilog,0,PXVI/ip_vga_ctlr_v,367708134,Verilog,ip_vga_ctlr_v,23,2,2022-10-25 19:21:28+00:00,[],https://api.github.com/licenses/mit
107,https://github.com/My-UIT-Students/VIPUsingFPGA.git,2021-05-28 10:06:38+00:00,Video And Image Processing Using FPGA,0,My-UIT-Students/VIPUsingFPGA,371659003,Verilog,VIPUsingFPGA,14372,2,2021-08-30 12:58:09+00:00,"['fpga-programming', 'fpga-soc', 'video-processing']",https://api.github.com/licenses/mit
108,https://github.com/yoshiki9636/my-riscv-rv32i.git,2021-05-03 06:16:02+00:00,RISC-V RV32I instruction set CPU for study,0,yoshiki9636/my-riscv-rv32i,363834693,Verilog,my-riscv-rv32i,205,2,2024-02-29 09:13:08+00:00,[],None
109,https://github.com/sks9691901/Image-Processing-with-VERILOG.git,2021-05-17 13:47:09+00:00,"Operations involved => Red-filter, Green filter,  Blue-filter , Inversion, Grayscale, Brightness variation, Thresholding",0,sks9691901/Image-Processing-with-VERILOG,368201722,Verilog,Image-Processing-with-VERILOG,8267,2,2023-09-15 01:10:44+00:00,[],None
110,https://github.com/smridhiseth/Costas_Loop.git,2021-05-31 21:14:47+00:00,,0,smridhiseth/Costas_Loop,372630273,Verilog,Costas_Loop,9,2,2024-01-10 17:07:04+00:00,[],https://api.github.com/licenses/apache-2.0
111,https://github.com/yxgi5/i2c_slave.git,2021-05-19 05:08:26+00:00,a i2c slave module on FPGA,1,yxgi5/i2c_slave,368750473,Verilog,i2c_slave,3132,2,2023-05-18 06:49:28+00:00,"['fpga', 'i2c', 'slave']",None
112,https://github.com/tomgwozdz/fbless-graphics-core.git,2021-05-17 21:58:43+00:00,Framebufferless Graphics Core,0,tomgwozdz/fbless-graphics-core,368331822,Verilog,fbless-graphics-core,123,2,2023-04-07 12:23:36+00:00,[],None
113,https://github.com/FadyGamilM/PCI-Target-Device.git,2021-05-25 15:00:12+00:00,,0,FadyGamilM/PCI-Target-Device,370732057,Verilog,PCI-Target-Device,2,2,2023-05-17 05:16:55+00:00,[],None
114,https://github.com/jackphj/FPGA_Homework.git,2021-05-14 01:17:37+00:00,自动电梯控制系统,2,jackphj/FPGA_Homework,367215580,Verilog,FPGA_Homework,10,2,2023-11-24 04:14:52+00:00,[],None
115,https://github.com/banxia-hnu/hnu_luyou_and_jiaohuanji.git,2021-06-04 07:19:11+00:00,,2,banxia-hnu/hnu_luyou_and_jiaohuanji,373755515,Verilog,hnu_luyou_and_jiaohuanji,484564,2,2023-03-31 09:44:37+00:00,[],None
116,https://github.com/ChristopherMoralesA/Arquitectura-RISCV.git,2021-05-17 02:43:05+00:00,Proyecto de Microprocesadores y Microcontroladores,1,ChristopherMoralesA/Arquitectura-RISCV,368035333,Verilog,Arquitectura-RISCV,37,2,2021-06-09 21:34:22+00:00,[],None
117,https://github.com/Talha-Ahmed-1/SPI-Chisel.git,2021-05-15 11:29:13+00:00,,1,Talha-Ahmed-1/SPI-Chisel,367614091,Verilog,SPI-Chisel,145,2,2023-06-25 06:10:55+00:00,[],None
118,https://github.com/shariethernet/RTL-design-using-Verilog-with-SKY130-Technology.git,2021-06-02 18:29:56+00:00,"This repository has a quick documentation covering the basics of RTL Design using verilog using the open source Skywater 130nm PDK. This covers the basics of RTL Design using Verilog and simulation, Logic synthesis and optimisations",0,shariethernet/RTL-design-using-Verilog-with-SKY130-Technology,373267014,Verilog,RTL-design-using-Verilog-with-SKY130-Technology,18302,2,2021-08-27 06:11:20+00:00,"['verilog', 'fpga', 'rtl', 'hardware']",None
119,https://github.com/teekamkhandelwal/Uart_tx_main.git,2021-05-18 18:36:37+00:00,"Uart=Stands for Universal Asynchronous Reception and Transmission (UART).A simple serial communication protocol that allows the host communicates with the auxiliary device.UART supports bi-directional, asynchronous and serial data transmission.It has two data lines, one to transmit (TX) and another to receive (RX) which is used to communicate through digital pin 0, digital pin 1.",0,teekamkhandelwal/Uart_tx_main,368632451,Verilog,Uart_tx_main,18,2,2023-11-30 10:30:06+00:00,"['verilog-hdl', 'verilog-project', 'fpga', 'xilinx-ise', 'questasim', 'uart-protocol']",https://api.github.com/licenses/apache-2.0
120,https://github.com/chiplicity/openlane.git,2021-05-12 15:29:41+00:00,,0,chiplicity/openlane,366763820,Verilog,openlane,648468,2,2022-07-27 13:41:45+00:00,[],https://api.github.com/licenses/apache-2.0
121,https://github.com/vbrange/verilog_qarma.git,2021-05-31 20:59:43+00:00,,0,vbrange/verilog_qarma,372627649,Verilog,verilog_qarma,8,2,2023-12-15 08:19:09+00:00,[],None
122,https://github.com/fanzfan/FPGA-Verilog.git,2021-06-02 04:49:06+00:00,FPGA课程实验代码,0,fanzfan/FPGA-Verilog,373042562,Verilog,FPGA-Verilog,1006,2,2022-11-11 12:43:56+00:00,[],https://api.github.com/licenses/mit
123,https://github.com/BerkeleyLab/LBNL-Cell-controller.git,2021-05-24 23:50:58+00:00,LBNL Fast Orbit Feedback (FOB) Cell controller firmware and software,1,BerkeleyLab/LBNL-Cell-controller,370513684,Verilog,LBNL-Cell-controller,5592,2,2023-03-30 08:19:47+00:00,[],
124,https://github.com/GaloisInc/BESSPIN-BSC.git,2021-05-27 19:59:37+00:00,,1,GaloisInc/BESSPIN-BSC,371490076,Verilog,BESSPIN-BSC,22965,2,2024-04-11 01:03:44+00:00,[],
125,https://github.com/cjearls/Open-Source-Parameterized-Low-Latency-Aggressive-Hardware-Compressors-and-Decompressors.git,2021-05-28 16:07:01+00:00,,0,cjearls/Open-Source-Parameterized-Low-Latency-Aggressive-Hardware-Compressors-and-Decompressors,371754266,Verilog,Open-Source-Parameterized-Low-Latency-Aggressive-Hardware-Compressors-and-Decompressors,3031,2,2023-11-06 23:31:01+00:00,[],https://api.github.com/licenses/mit
126,https://github.com/YC-Vertex/DTW-ASIC.git,2021-05-17 11:22:15+00:00,动态时间规整（DTW）算法的硬件加速器，清华大学2021春集成电路课程设计大作业,0,YC-Vertex/DTW-ASIC,368159105,Verilog,DTW-ASIC,1161,2,2023-05-05 02:37:51+00:00,[],https://api.github.com/licenses/mit
127,https://github.com/trietvh/FPGA_vision_processing.git,2021-05-06 04:41:08+00:00,Final Year Project at Monash University working on FPGA Real Time Vision Processing Acceleration,0,trietvh/FPGA_vision_processing,364786458,Verilog,FPGA_vision_processing,349,2,2024-01-21 02:34:25+00:00,[],None
128,https://github.com/gendy-98/Perl_CNN_gen.git,2021-05-03 08:04:03+00:00,,1,gendy-98/Perl_CNN_gen,363858492,Verilog,Perl_CNN_gen,891,2,2021-07-22 21:53:24+00:00,[],None
129,https://github.com/prabuddha1/SAIL_GSC.git,2021-05-13 20:16:21+00:00,,1,prabuddha1/SAIL_GSC,367164255,Verilog,SAIL_GSC,453,2,2023-02-02 00:49:43+00:00,[],None
130,https://github.com/ZeyadTarekk/Combinational-Multiplier.git,2021-05-14 21:55:17+00:00,Combinational Multiplier Using verilog,0,ZeyadTarekk/Combinational-Multiplier,367487714,Verilog,Combinational-Multiplier,846,2,2022-08-22 16:30:01+00:00,"['verilog', 'logic-design', 'digital-design', 'combinational-multiplier']",None
131,https://github.com/PauloHJ/ProyectoFinal_SistemasEmbebidosFJ21.git,2021-05-17 20:45:50+00:00,,0,PauloHJ/ProyectoFinal_SistemasEmbebidosFJ21,368317730,Verilog,ProyectoFinal_SistemasEmbebidosFJ21,16229,2,2021-06-11 01:31:50+00:00,[],https://api.github.com/licenses/cc0-1.0
132,https://github.com/A-Sathvik/JPEG-compression.git,2021-06-01 07:30:25+00:00,Applying SDLC for JPEG compression project,1,A-Sathvik/JPEG-compression,372740441,Verilog,JPEG-compression,1628,2,2023-02-07 12:02:18+00:00,"['dct', 'huffman-coding', 'quantisation', 'verilog']",None
133,https://github.com/lam-n-ha/dual_core_w_lock_memory.git,2021-05-22 23:15:16+00:00,Dual core RISC-V processor with shared memory with locking functionality,0,lam-n-ha/dual_core_w_lock_memory,369922814,Verilog,dual_core_w_lock_memory,14959,2,2023-12-31 12:39:02+00:00,[],None
134,https://github.com/archisman-dey/mips.git,2021-05-08 16:40:20+00:00,Verilog implementation of 32-bit MIPS processor,0,archisman-dey/mips,365563871,Verilog,mips,156,2,2024-04-11 00:14:44+00:00,[],None
135,https://github.com/BLG242E/codes.git,2021-05-21 08:26:15+00:00,,2,BLG242E/codes,369466766,Verilog,codes,3206,2,2021-05-21 08:57:59+00:00,[],https://api.github.com/licenses/gpl-3.0
136,https://github.com/navneet-kour/Tomasulo_Verilog.git,2021-05-03 14:04:09+00:00,Implemented a 4 staged pipelined out of order RISC-V processor which uses tomasulo algorithm with reservation stations and reorder buffers. This was a course assignment in Processor Architecture course.,0,navneet-kour/Tomasulo_Verilog,363949487,Verilog,Tomasulo_Verilog,10,2,2023-05-31 11:43:04+00:00,[],None
137,https://github.com/UniversityOfPlymouth-Electronics/DigitalSystems.git,2021-05-27 16:50:43+00:00,Digital Electronic Systems at the University of Plymouth,74,UniversityOfPlymouth-Electronics/DigitalSystems,371443654,Verilog,DigitalSystems,8994,2,2023-11-20 14:44:06+00:00,[],https://api.github.com/licenses/cc0-1.0
138,https://github.com/ShiV-0312/MIPS_PROCESSOR.git,2021-05-16 15:33:20+00:00,32-bits MIPS Processor with 5-stage pipeline,0,ShiV-0312/MIPS_PROCESSOR,367919916,Verilog,MIPS_PROCESSOR,16,1,2023-03-25 16:23:10+00:00,"['verilog', 'verilog-project', 'verilog-code', 'mips', 'mips-processor', 'mips32', 'verilog-simulator']",None
139,https://github.com/F3L1X07/Seccion_D12_Equipo_1.git,2021-05-20 21:09:06+00:00,,0,F3L1X07/Seccion_D12_Equipo_1,369338620,Verilog,Seccion_D12_Equipo_1,15644,1,2021-06-23 01:58:26+00:00,[],None
140,https://github.com/AtaberkOKLU/SaleTerminal.git,2021-06-04 19:15:05+00:00,FPGA Based Point of Sale Project using Verilog,1,AtaberkOKLU/SaleTerminal,373938461,Verilog,SaleTerminal,516538,1,2023-04-16 09:25:19+00:00,"['fpga', 'point-of-sale', 'pos', 'verilog', 'vga', 'cyclone-v', 'de1-soc']",https://api.github.com/licenses/lgpl-3.0
141,https://github.com/ZiadMansourM/SPI.git,2021-06-05 08:05:30+00:00,"Serial Peripheral Interface - SPI, using Verilog",1,ZiadMansourM/SPI,374056903,Verilog,SPI,31,1,2022-07-03 15:33:28+00:00,[],None
142,https://github.com/bunnyverma29/digital-hardware.git,2021-05-28 07:24:21+00:00,,0,bunnyverma29/digital-hardware,371616339,Verilog,digital-hardware,747,1,2022-06-21 19:52:10+00:00,[],None
143,https://github.com/JayMoghariya/Verilog-Assignment.git,2021-05-25 13:24:33+00:00,,0,JayMoghariya/Verilog-Assignment,370701546,Verilog,Verilog-Assignment,13,1,2023-03-04 08:44:07+00:00,[],None
144,https://github.com/electronica-5/TP2.git,2021-05-19 20:33:17+00:00,Trabajo Practico 2 - Electrónica 5,1,electronica-5/TP2,368994470,Verilog,TP2,10628,1,2024-02-05 22:20:06+00:00,[],https://api.github.com/licenses/mit
145,https://github.com/bhatiamanav/Final_Processor_Project.git,2021-05-04 13:32:44+00:00,"Implemented a 32 bit, 2 stage Pipelined MIPS Instruction Processor",0,bhatiamanav/Final_Processor_Project,364266597,Verilog,Final_Processor_Project,164,1,2022-06-23 19:23:45+00:00,[],None
146,https://github.com/Qiaofanxing/tinyCPU.git,2021-05-31 15:03:48+00:00,利用verilog实现一个简单的8位CPU,0,Qiaofanxing/tinyCPU,372545121,Verilog,tinyCPU,730,1,2023-09-04 09:25:52+00:00,[],None
147,https://github.com/Moaminseop/RTL_Design.git,2021-05-22 15:59:25+00:00,,0,Moaminseop/RTL_Design,369849688,Verilog,RTL_Design,33,1,2021-06-17 04:15:40+00:00,[],None
148,https://github.com/whaoney/SingleCycle_CPU_RISCV32I.git,2021-05-24 15:17:22+00:00,,0,whaoney/SingleCycle_CPU_RISCV32I,370396328,Verilog,SingleCycle_CPU_RISCV32I,16,1,2023-03-20 03:01:34+00:00,[],None
149,https://github.com/Russ420/Digital_Systems_Design_IR.git,2021-05-09 13:54:32+00:00,,0,Russ420/Digital_Systems_Design_IR,365765042,Verilog,Digital_Systems_Design_IR,11,1,2021-05-09 16:09:34+00:00,[],None
150,https://github.com/ryanwolters/vga-color-clock.git,2021-05-20 02:56:34+00:00,VGA color generator using an FPGA.,0,ryanwolters/vga-color-clock,369061918,Verilog,vga-color-clock,3,1,2022-11-30 20:42:18+00:00,[],None
151,https://github.com/venkatkumar1810/Digital_Clock_Design_24hrs_12hrs.git,2021-05-06 08:40:54+00:00,Problem Statement: Given If the time is set in 24hrs format while running it must run in 12 hrs format ,0,venkatkumar1810/Digital_Clock_Design_24hrs_12hrs,364842298,Verilog,Digital_Clock_Design_24hrs_12hrs,2438,1,2023-03-25 12:27:41+00:00,[],None
152,https://github.com/Riflecake1699/Equipo-5-SSPAC-D13.git,2021-05-24 22:05:42+00:00,,0,Riflecake1699/Equipo-5-SSPAC-D13,370496126,Verilog,Equipo-5-SSPAC-D13,958,1,2021-06-15 04:04:33+00:00,[],None
153,https://github.com/fernandamariscal/Equipo_2_D14.git,2021-05-20 05:59:06+00:00,proyecto final,0,fernandamariscal/Equipo_2_D14,369095745,Verilog,Equipo_2_D14,1116,1,2021-06-25 01:11:49+00:00,[],None
154,https://github.com/balister/hdl.git,2021-05-26 17:35:39+00:00,Fork of pluto hdl code from ADI for pluto experiments,0,balister/hdl,371119432,Verilog,hdl,15008,1,2022-04-28 00:16:19+00:00,[],
155,https://github.com/hyu-nani/Verilog_watch_second.git,2021-05-28 08:28:05+00:00,베릴로그팀,1,hyu-nani/Verilog_watch_second,371632970,Verilog,Verilog_watch_second,218249,1,2022-04-08 04:33:20+00:00,[],None
156,https://github.com/HaripraveenS/fft-256-image-processing.git,2021-05-09 15:19:09+00:00,"A 256-point pipelined Fast Fourier Transform processor, using single path delay architecture. Design is based on radix2-DIF(decimation-in-frequency) algorithm.",0,HaripraveenS/fft-256-image-processing,365783451,Verilog,fft-256-image-processing,4910,1,2022-08-02 06:59:08+00:00,[],None
157,https://github.com/ZeyadTarekk/Carry-Select-Adder.git,2021-05-14 21:49:20+00:00,Carry Select Adder Using verilog,0,ZeyadTarekk/Carry-Select-Adder,367486816,Verilog,Carry-Select-Adder,199,1,2022-08-22 16:30:02+00:00,"['verilog', 'logic-design', 'csa', 'carry-select-adder']",None
158,https://github.com/jjjaaafff/Computer-Organization.git,2021-05-07 09:06:13+00:00,SJTU EI332 计算机组成 lecture summary textbook lab,0,jjjaaafff/Computer-Organization,365176301,Verilog,Computer-Organization,229147,1,2021-06-27 13:51:21+00:00,[],None
159,https://github.com/Ammar-Bin-Amir/Verilog_Practice.git,2021-05-05 20:48:45+00:00,Practice Codes of Verilog Language,0,Ammar-Bin-Amir/Verilog_Practice,364702218,Verilog,Verilog_Practice,1469,1,2023-12-12 14:00:14+00:00,"['gtkwave', 'icarus-verilog', 'verilog', 'vscode']",None
160,https://github.com/XiGua-cooler/Serial_to_parallel.git,2021-05-04 14:45:16+00:00,基于Verilog的串并转换和并串转换,0,XiGua-cooler/Serial_to_parallel,364288773,Verilog,Serial_to_parallel,5,1,2022-04-21 11:49:59+00:00,[],None
161,https://github.com/hsiehong/IC-Contest.git,2021-05-06 13:40:17+00:00,"practice of IC Contest, 2021, NCKU",0,hsiehong/IC-Contest,364923644,Verilog,IC-Contest,3135,1,2022-04-29 16:54:17+00:00,[],None
162,https://github.com/dev-board-tech/arduFPGA-game-console-simple-tank-demo.git,2021-05-21 13:10:57+00:00,A simple micro tank controller using arduFPGA-game-console,1,dev-board-tech/arduFPGA-game-console-simple-tank-demo,369539486,Verilog,arduFPGA-game-console-simple-tank-demo,325,1,2022-05-02 21:52:45+00:00,[],https://api.github.com/licenses/gpl-2.0
163,https://github.com/ncicek/riscv-core.git,2021-05-30 00:47:51+00:00,,0,ncicek/riscv-core,372095564,Verilog,riscv-core,25,1,2021-05-30 00:58:30+00:00,[],https://api.github.com/licenses/mit
164,https://github.com/pravinism-007/router_1x3.git,2021-06-05 10:47:13+00:00,Design of FSM based 1x3 router using verilog,0,pravinism-007/router_1x3,374088473,Verilog,router_1x3,7,1,2021-06-24 15:12:09+00:00,[],None
165,https://github.com/Andy-Buka/Cache.git,2021-05-24 01:45:05+00:00,CPU cache part,0,Andy-Buka/Cache,370197511,Verilog,Cache,139,1,2023-04-21 03:50:32+00:00,[],None
166,https://github.com/ilthraim/pheap.git,2021-05-15 19:20:37+00:00,,0,ilthraim/pheap,367712981,Verilog,pheap,8595,1,2022-08-10 19:38:49+00:00,[],None
167,https://github.com/EdBloodedge/MIPS_microprocessor_simulator.git,2021-05-17 13:03:00+00:00,,0,EdBloodedge/MIPS_microprocessor_simulator,368187635,Verilog,MIPS_microprocessor_simulator,14,1,2024-02-13 05:51:36+00:00,[],None
168,https://github.com/isaac-fs/Proyecto-Digitales-II-G3.git,2021-05-24 20:07:59+00:00,,0,isaac-fs/Proyecto-Digitales-II-G3,370472289,Verilog,Proyecto-Digitales-II-G3,24052,1,2021-07-20 05:21:57+00:00,[],None
169,https://github.com/renas-ercan-384/FPGA_Signal_Processing_Development.git,2021-05-06 19:15:52+00:00,The complete Verilog RTL code used within the FPGA Signal Processing Development Final Year Project,0,renas-ercan-384/FPGA_Signal_Processing_Development,365013404,Verilog,FPGA_Signal_Processing_Development,21143,1,2023-10-23 08:01:49+00:00,[],None
170,https://github.com/artiomtz/RISC-V.git,2021-05-10 02:11:52+00:00,5-stage pipeline RISC-V implementation with forwarding and static branch prediction,0,artiomtz/RISC-V,365892700,Verilog,RISC-V,192,1,2023-05-17 11:08:43+00:00,[],None
171,https://github.com/lilyof97/lab01.git,2021-05-08 13:40:26+00:00,,0,lilyof97/lab01,365523935,Verilog,lab01,7,1,2021-05-12 18:45:21+00:00,[],None
172,https://github.com/Arman5592/Matrix-Block-Multiplier-Verilog.git,2021-05-28 17:12:28+00:00,,0,Arman5592/Matrix-Block-Multiplier-Verilog,371770100,Verilog,Matrix-Block-Multiplier-Verilog,6766,1,2023-07-30 15:00:03+00:00,[],None
173,https://github.com/CW-B-W/DIC-MedianFilter.git,2021-05-28 10:38:20+00:00,,0,CW-B-W/DIC-MedianFilter,371666716,Verilog,DIC-MedianFilter,2545,1,2023-02-03 08:09:11+00:00,[],None
174,https://github.com/abhishek2002228/Floating-Point-ALU.git,2021-05-29 05:16:37+00:00,,0,abhishek2002228/Floating-Point-ALU,371886522,Verilog,Floating-Point-ALU,16,1,2021-06-10 19:10:38+00:00,[],None
175,https://github.com/samlam723/median_filter.git,2021-06-03 18:01:26+00:00,"A chip that functions as an efficient 1-D median filter is implemented in this project. The ASIC design flow, from high level specification definition down to final layout extraction and simulation are completed.",0,samlam723/median_filter,373598299,Verilog,median_filter,1404,1,2022-04-23 11:42:29+00:00,[],None
176,https://github.com/ajayjha5899/enhanced_aes.git,2021-06-02 04:35:47+00:00,Verilog implementation of various modules required for implementation of PN sequence based AES block cipher.,0,ajayjha5899/enhanced_aes,373040270,Verilog,enhanced_aes,464,1,2021-11-15 07:30:31+00:00,[],None
177,https://github.com/mballance/coremesh.git,2021-05-09 18:40:13+00:00,SoC composed of 2d mesh of cores with chip-to-chip connectivity,0,mballance/coremesh,365823725,Verilog,coremesh,515,1,2024-03-01 18:21:04+00:00,[],https://api.github.com/licenses/apache-2.0
178,https://github.com/currylover-gokul/summer-project2021.git,2021-05-26 16:43:12+00:00,"Summer Project of our team consisting of Ashish, Anjanesh and Gokul",1,currylover-gokul/summer-project2021,371105075,Verilog,summer-project2021,576,1,2021-07-29 17:03:57+00:00,[],None
179,https://github.com/racerxdl/fpga-spi.git,2021-05-10 00:45:37+00:00,SPI Controller for FPGA,0,racerxdl/fpga-spi,365878253,Verilog,fpga-spi,17,1,2021-05-26 22:29:00+00:00,[],https://api.github.com/licenses/apache-2.0
180,https://github.com/KeenanRobinson/DSP_Home_Kit.git,2021-05-03 09:37:29+00:00,"This is the code repository for the EEE4022F Final Research project. This contains the FPGA code and the Python control aspects. Created By: Keenan Robinson, Supervised: Dr Simon Winberg",0,KeenanRobinson/DSP_Home_Kit,363881059,Verilog,DSP_Home_Kit,72283,1,2022-01-31 11:00:56+00:00,[],None
181,https://github.com/maimaixiong/pdl.git,2021-05-07 13:21:50+00:00,,0,maimaixiong/pdl,365240450,Verilog,pdl,14,1,2023-07-16 21:32:57+00:00,[],https://api.github.com/licenses/mit
182,https://github.com/farhan-tallman/uart-Verilog.git,2021-05-17 05:11:25+00:00,uart rx and tx,0,farhan-tallman/uart-Verilog,368062619,Verilog,uart-Verilog,25,1,2022-04-28 10:44:54+00:00,[],None
183,https://github.com/SnrNotHere16/ALUMatrixReduced.git,2021-05-22 21:16:06+00:00,An ALU for Matrices that uses reduced ios ,0,SnrNotHere16/ALUMatrixReduced,369907211,Verilog,ALUMatrixReduced,131,1,2022-06-15 23:44:43+00:00,[],None
184,https://github.com/jmstein7/65c02_errata.git,2021-06-04 18:57:27+00:00,"A very, very preliminary experiment with a soft 65c02 core. ",1,jmstein7/65c02_errata,373934842,Verilog,65c02_errata,15632,1,2021-07-03 14:16:21+00:00,[],None
185,https://github.com/IceShip423/5-stage-pipelined-CPU.git,2021-05-08 13:16:38+00:00,CSC3050 ,2,IceShip423/5-stage-pipelined-CPU,365518776,Verilog,5-stage-pipelined-CPU,99,1,2023-12-07 01:40:23+00:00,[],None
186,https://github.com/bhatmahadev6/openMSP430-on-Zynq.git,2021-05-23 13:53:09+00:00,openMSP430 implemented on Zynq using Vivado,0,bhatmahadev6/openMSP430-on-Zynq,370066045,Verilog,openMSP430-on-Zynq,25972,1,2024-03-28 07:52:05+00:00,[],None
187,https://github.com/alex-t-nguyen/Multicycle_Processor_ISA.git,2021-05-08 00:58:36+00:00,Multicycle processor that implements a specific ISA,0,alex-t-nguyen/Multicycle_Processor_ISA,365387475,Verilog,Multicycle_Processor_ISA,50,1,2021-07-09 02:39:52+00:00,[],None
188,https://github.com/Mine268/MiaoBiao.git,2021-05-25 01:13:47+00:00,,0,Mine268/MiaoBiao,370527116,Verilog,MiaoBiao,8,1,2021-06-03 05:35:32+00:00,[],None
189,https://github.com/leus8/proyecto1-estructurasII.git,2021-05-04 00:30:37+00:00,Proyecto 1 del curso estructuras de computadores II,0,leus8/proyecto1-estructurasII,364097911,Verilog,proyecto1-estructurasII,270,1,2021-05-20 23:19:13+00:00,[],None
190,https://github.com/Anubhav3084/FPGA-work.git,2021-05-22 11:27:18+00:00,,0,Anubhav3084/FPGA-work,369790357,Verilog,FPGA-work,8,1,2021-08-04 20:04:01+00:00,[],None
191,https://github.com/Buglik/AK2-projekt.git,2021-05-28 14:09:58+00:00,,1,Buglik/AK2-projekt,371721546,Verilog,AK2-projekt,3392,1,2023-10-22 16:33:12+00:00,"['q-flow', 'yosys']",None
192,https://github.com/AlexanderKeithGreer/simpleArray.git,2021-05-21 08:47:17+00:00,This is meant to contain some VHDL/Verilog fragments so I can better understand how to implement DSP in FPGA.,0,AlexanderKeithGreer/simpleArray,369472496,Verilog,simpleArray,24,1,2022-03-29 22:23:08+00:00,[],None
193,https://github.com/letitbe0201/Costas.git,2021-05-07 04:05:44+00:00,,0,letitbe0201/Costas,365109985,Verilog,Costas,26,1,2023-10-09 17:44:46+00:00,[],None
194,https://github.com/Danny-xyy/AES_FPGA_new.git,2021-05-19 03:07:27+00:00,,0,Danny-xyy/AES_FPGA_new,368729497,Verilog,AES_FPGA_new,7220,1,2023-02-07 13:41:50+00:00,[],None
195,https://github.com/jgesc/riscv-cores.git,2021-05-18 07:57:46+00:00,Repository of RISC-V architecture soft-cores written while practicing computer architecture and Verilog,0,jgesc/riscv-cores,368447385,Verilog,riscv-cores,652,1,2022-05-23 03:30:46+00:00,"['riscv', 'core']",None
196,https://github.com/ashvah/cpu-pipelining.git,2021-05-22 04:23:20+00:00,Implement a MIPS 5-stage pipelined CPU using Vivado,1,ashvah/cpu-pipelining,369713354,Verilog,cpu-pipelining,519,1,2023-08-30 15:00:41+00:00,"['vivado', 'mips-cpu', 'pipeline']",https://api.github.com/licenses/mit
197,https://github.com/Featherweight-IP/fw-wishbone-sram-ctrl.git,2021-05-10 20:42:22+00:00,"Wishbone SRAM controllers, including support for atomic operations",0,Featherweight-IP/fw-wishbone-sram-ctrl,366170656,Verilog,fw-wishbone-sram-ctrl,20,1,2021-12-15 02:12:20+00:00,[],https://api.github.com/licenses/apache-2.0
198,https://github.com/dgarci23/8b-Computer.git,2021-05-31 16:37:00+00:00,"8 bit Computer design based on Ben Eater's 8 Bit Computer Youtube series. Hardware implementation of the design, KiCad schematics and Verilog implementation.",0,dgarci23/8b-Computer,372570241,Verilog,8b-Computer,38874,1,2022-02-08 02:38:07+00:00,[],None
199,https://github.com/thunderzips/MLCB.git,2021-05-06 10:11:03+00:00,A basic ML circuit. The circuit initially predicts the value of an unknown bit (0 or 1). The user tells it if it's right or not. The circuit keeps updating the information and starts predicting the value more certainly.,0,thunderzips/MLCB,364867325,Verilog,MLCB,597,1,2023-03-01 06:05:18+00:00,[],None
200,https://github.com/AtlasFPGA/Next186_SoC.git,2021-05-05 08:20:09+00:00,Next186 SoC port for the CYC1000,1,AtlasFPGA/Next186_SoC,364507559,Verilog,Next186_SoC,1440,1,2022-11-09 14:40:39+00:00,[],None
201,https://github.com/VARZero/verilog.git,2021-05-26 02:15:02+00:00,베릴로그 연습,0,VARZero/verilog,370880980,Verilog,verilog,630,1,2023-06-11 14:42:33+00:00,[],None
202,https://github.com/tanvir-jewel/Synthesis_PnR_VLSI-II.git,2021-05-03 10:47:24+00:00,This repository contains the project report of and verilog file of VLSI-II lab course project. ,0,tanvir-jewel/Synthesis_PnR_VLSI-II,363897547,Verilog,Synthesis_PnR_VLSI-II,1442,1,2022-01-03 17:48:38+00:00,[],None
203,https://github.com/Thorns-H/mips-architecture.git,2021-05-21 18:33:47+00:00,[S. Arquitectura de Computadoras - Jorge Ernesto López Arce] - This is a representation and a working code from a 32 bits mips architecture using Verilog.,1,Thorns-H/mips-architecture,369623391,Verilog,mips-architecture,4476,1,2023-11-13 16:36:52+00:00,"['mips', 'mips-architecture', 'mips32', 'computer-architecture', 'verilog', 'university', 'university-assignment']",None
204,https://github.com/jihoon1125/Digital-Logic-Circuit_term-project.git,2021-05-14 08:48:19+00:00,"Factorial , RAM hardware 그리고 direct memory access controller (DMAC)를 설계하고, bus를 통해 이들을 연결하여 검증과정까지 수행한다.",0,jihoon1125/Digital-Logic-Circuit_term-project,367303875,Verilog,Digital-Logic-Circuit_term-project,2748,1,2023-11-16 06:37:04+00:00,[],None
205,https://github.com/NicoThls/StepperMotor_Control_VHDL.git,2021-05-14 09:39:43+00:00,"This project allows to control a stepper motor from a C code. The file includes the definition of the entity in VHDL as well as a test bench to test it but also the driver to make it work on a FPGA board and finally, the control code in C.",0,NicoThls/StepperMotor_Control_VHDL,367316866,Verilog,StepperMotor_Control_VHDL,3132,1,2021-11-01 13:26:41+00:00,[],None
206,https://github.com/HarishKMurali/Computer_Architecture_Codes.git,2021-05-16 05:45:24+00:00,Codes done as a part of Computer Architecture course,0,HarishKMurali/Computer_Architecture_Codes,367795127,Verilog,Computer_Architecture_Codes,6017,1,2021-05-16 10:13:50+00:00,[],https://api.github.com/licenses/mit
207,https://github.com/siddharthoo7/Pipelined-fir-filter.git,2021-05-24 04:58:52+00:00,,0,siddharthoo7/Pipelined-fir-filter,370232169,Verilog,Pipelined-fir-filter,889,1,2021-09-10 14:38:47+00:00,[],None
208,https://github.com/ishfaqahmed29/16-bit_RISC_Processor.git,2021-05-24 22:35:30+00:00,Verilog RTL Design,1,ishfaqahmed29/16-bit_RISC_Processor,370501362,Verilog,16-bit_RISC_Processor,25,1,2022-03-05 17:17:21+00:00,[],https://api.github.com/licenses/mit
209,https://github.com/samlam723/fir_filter.git,2021-06-04 15:15:45+00:00,A 16-tap FIR filter is implemented using adder and multiplier at frequency 5MHz.,0,samlam723/fir_filter,373881287,Verilog,fir_filter,954,1,2022-04-29 16:32:11+00:00,[],None
210,https://github.com/HITSZ-COMP2008/Lab-Tilelink-Handout.git,2021-05-21 17:21:28+00:00,,0,HITSZ-COMP2008/Lab-Tilelink-Handout,369606663,Verilog,Lab-Tilelink-Handout,9,1,2024-01-02 14:04:20+00:00,[],None
211,https://github.com/oasm95/RV32I.git,2021-05-17 09:26:21+00:00,Implementación ISA RV32I como trabajo de graduación,0,oasm95/RV32I,368128201,Verilog,RV32I,206832,1,2024-03-08 02:15:05+00:00,[],https://api.github.com/licenses/apache-2.0
212,https://github.com/fuboki10/DCNN-Accelerator-IO.git,2021-05-26 08:50:21+00:00,,0,fuboki10/DCNN-Accelerator-IO,370967583,Verilog,DCNN-Accelerator-IO,1999,1,2021-07-01 15:20:59+00:00,[],https://api.github.com/licenses/mit
213,https://github.com/ncicek/IQmodulator.git,2021-05-29 23:56:16+00:00,,0,ncicek/IQmodulator,372089891,Verilog,IQmodulator,46031,1,2023-04-05 04:36:30+00:00,[],https://api.github.com/licenses/mit
214,https://github.com/santhosh-raghul/tomasulo.git,2021-05-07 12:22:26+00:00,,1,santhosh-raghul/tomasulo,365224810,Verilog,tomasulo,1126,1,2021-05-07 16:13:03+00:00,[],None
215,https://github.com/Dennis34png/EstructurasII.git,2021-05-14 21:14:05+00:00,,0,Dennis34png/EstructurasII,367480829,Verilog,EstructurasII,127,1,2021-05-18 16:38:07+00:00,[],None
216,https://github.com/ic-cad/plode.git,2021-05-10 04:45:00+00:00,,0,ic-cad/plode,365920132,Verilog,plode,693,1,2023-11-17 09:38:36+00:00,[],https://api.github.com/licenses/gpl-3.0
217,https://github.com/Gaukm01/CS220.git,2021-05-29 10:32:26+00:00,This contains all the assignments for CS220,0,Gaukm01/CS220,371944252,Verilog,CS220,114,1,2024-02-19 03:32:28+00:00,[],None
218,https://github.com/arpitkumar1412/Multi-cycle-datapath.git,2021-06-05 21:11:37+00:00,,0,arpitkumar1412/Multi-cycle-datapath,374213094,Verilog,Multi-cycle-datapath,714,1,2021-06-17 21:48:01+00:00,[],https://api.github.com/licenses/mit
219,https://github.com/CYF0823/kws-accelerator.git,2021-05-05 06:45:23+00:00,,0,CYF0823/kws-accelerator,364485035,Verilog,kws-accelerator,1390,1,2021-08-08 11:59:24+00:00,[],https://api.github.com/licenses/unlicense
220,https://github.com/tarun-singla/Configurable-Fabric.git,2021-05-22 11:11:16+00:00,,0,tarun-singla/Configurable-Fabric,369787245,Verilog,Configurable-Fabric,395,1,2021-07-30 09:41:01+00:00,[],https://api.github.com/licenses/mit
221,https://github.com/Nzarite/crypto-FPGA.git,2021-05-26 17:08:02+00:00,,5,Nzarite/crypto-FPGA,371112091,Verilog,crypto-FPGA,50,1,2023-02-12 05:09:07+00:00,"['fpga', 'verilog']",None
222,https://github.com/kzwrime/priscv.git,2021-05-28 10:19:08+00:00,,0,kzwrime/priscv,371662116,Verilog,priscv,2941,1,2021-07-07 08:07:30+00:00,[],None
223,https://github.com/spdy1895/Systolic_Array.git,2021-05-13 16:21:04+00:00,a matrix multiplication hardware consisting of processing elements and mac unit.,1,spdy1895/Systolic_Array,367107038,Verilog,Systolic_Array,8014,1,2021-11-23 03:36:51+00:00,[],None
224,https://github.com/TinyRetroWarehouse/vga-driver-fpga.git,2021-05-19 04:02:21+00:00,A VGA driver written in Verilog. 💻,0,TinyRetroWarehouse/vga-driver-fpga,368739378,,vga-driver-fpga,29,1,2022-05-25 23:09:46+00:00,[],None
225,https://github.com/Tecu23/decryption-verilog-program.git,2021-05-11 06:53:36+00:00,,0,Tecu23/decryption-verilog-program,366284893,Verilog,decryption-verilog-program,19,1,2024-02-16 20:05:06+00:00,[],None
226,https://github.com/li123718/iu.git,2021-05-18 05:07:18+00:00,记忆库,0,li123718/iu,368407073,Verilog,iu,0,1,2021-05-19 04:30:52+00:00,[],None
227,https://github.com/I4N4P/Basys3_13_channels_voltage_displaying_instrument.git,2021-05-08 19:05:13+00:00,Project based on FPGA-Basys 3 development board and usage of Verilog language skill,0,I4N4P/Basys3_13_channels_voltage_displaying_instrument,365591496,Verilog,Basys3_13_channels_voltage_displaying_instrument,377,1,2023-05-03 18:44:40+00:00,[],None
228,https://github.com/MarcosSevert/VerilogGalileoX.git,2021-06-06 22:23:34+00:00,All codes created during the development of the GalileoX-CElectronica002x course.,0,MarcosSevert/VerilogGalileoX,374475717,Verilog,VerilogGalileoX,15,1,2021-07-03 20:07:04+00:00,[],None
229,https://github.com/EricTtTtT/RISCV-Pipeline-Project.git,2021-06-02 15:46:05+00:00,,1,EricTtTtT/RISCV-Pipeline-Project,373222339,Verilog,RISCV-Pipeline-Project,35363,1,2021-12-20 16:32:32+00:00,[],None
230,https://github.com/mriosrivas/pynq.git,2021-05-19 23:59:17+00:00,Respository with some examples using PYNQ-Z1 board.,0,mriosrivas/pynq,369030675,Verilog,pynq,4730,1,2022-03-24 23:00:40+00:00,[],https://api.github.com/licenses/gpl-3.0
231,https://github.com/antonyaraujo/PBL3-maquinadevendas.git,2021-05-16 15:51:35+00:00,,0,antonyaraujo/PBL3-maquinadevendas,367924374,Verilog,PBL3-maquinadevendas,1324,1,2023-11-20 08:19:05+00:00,[],None
232,https://github.com/PiChampion/VerilogBitFusion.git,2021-05-24 22:41:48+00:00,,0,PiChampion/VerilogBitFusion,370502370,Verilog,VerilogBitFusion,526,1,2024-04-02 12:43:30+00:00,[],None
233,https://github.com/muskan89/DLD_Assignments.git,2021-05-06 17:20:20+00:00,The assignments of our Digital logic Design course.,0,muskan89/DLD_Assignments,364985615,Verilog,DLD_Assignments,15,1,2021-12-16 15:03:03+00:00,[],None
234,https://github.com/Daydreamer97/FPGA_Verilog_Learning.git,2021-05-18 13:35:36+00:00,FPGA_Verilog_Learning,0,Daydreamer97/FPGA_Verilog_Learning,368542735,Verilog,FPGA_Verilog_Learning,3030,1,2023-09-02 14:02:20+00:00,[],None
235,https://github.com/Space-Odie/Zybo_Projects.git,2021-05-19 02:43:04+00:00,Lab Projects done in ECE520,0,Space-Odie/Zybo_Projects,368724711,Verilog,Zybo_Projects,1276,1,2022-06-10 02:27:15+00:00,[],None
236,https://github.com/tonyjoo974/RISC-V-Pipelined.git,2021-05-16 04:42:57+00:00,,0,tonyjoo974/RISC-V-Pipelined,367786378,Verilog,RISC-V-Pipelined,72806,1,2022-09-28 06:36:02+00:00,[],None
237,https://github.com/syedarafia13/verilog-practice.git,2021-05-04 16:14:49+00:00,,0,syedarafia13/verilog-practice,364315321,Verilog,verilog-practice,43,1,2022-05-02 21:30:21+00:00,[],None
238,https://github.com/Osama-Nadeem/Practice-verilog.git,2021-05-05 21:34:50+00:00,,0,Osama-Nadeem/Practice-verilog,364711411,Verilog,Practice-verilog,4,1,2021-09-10 15:11:54+00:00,[],None
239,https://github.com/wacky199/MIPS32.git,2021-05-14 06:46:46+00:00,A pipelined implementation of MIPS32 processor using Verilog HDL,0,wacky199/MIPS32,367274261,Verilog,MIPS32,771,1,2021-05-18 09:32:52+00:00,"['mips', 'verilog-hdl']",None
240,https://github.com/andykitchen/astra6502.git,2021-05-29 12:29:32+00:00,A small but mighty 6502 core,1,andykitchen/astra6502,371967938,Verilog,astra6502,15,1,2021-06-04 02:58:37+00:00,[],None
241,https://github.com/AlishKanani/ACA-CSU_Approximate-Adders.git,2021-05-16 13:44:02+00:00,MATLAB and HDL models of ACA-CSU approximate adders,2,AlishKanani/ACA-CSU_Approximate-Adders,367891916,Verilog,ACA-CSU_Approximate-Adders,1571,1,2023-10-20 18:33:16+00:00,"['approximate-computing', 'approximate-circuits', 'verilog', 'logic-synthesis']",https://api.github.com/licenses/mit
242,https://github.com/vvsosed/verilog_examples.git,2021-05-17 13:33:51+00:00,Simple verilog examples,0,vvsosed/verilog_examples,368197508,Verilog,verilog_examples,78,1,2021-09-30 08:35:10+00:00,[],https://api.github.com/licenses/gpl-3.0
243,https://github.com/tnguyen-tx/AHB_lite.git,2021-05-09 18:44:04+00:00,,0,tnguyen-tx/AHB_lite,365824319,Verilog,AHB_lite,1142,1,2022-11-07 11:48:30+00:00,[],None
244,https://github.com/afrodriguezfl/Implementation-of-an-alarm-system-in-Verilog.git,2021-05-09 23:56:13+00:00,,0,afrodriguezfl/Implementation-of-an-alarm-system-in-Verilog,365871698,Verilog,Implementation-of-an-alarm-system-in-Verilog,53,1,2023-10-18 22:07:07+00:00,[],None
245,https://github.com/sudhamshu091/FPGA-Academic-Digital-Logic-Lab.git,2021-05-08 04:36:53+00:00,,0,sudhamshu091/FPGA-Academic-Digital-Logic-Lab,365419499,Verilog,FPGA-Academic-Digital-Logic-Lab,3070,1,2022-07-15 13:37:36+00:00,[],None
246,https://github.com/lastweek/vcu118_fmcp_qsfp.git,2021-06-03 18:43:17+00:00,VCU118 + http://www.hitechglobal.com/FMCModules/x6QSFP28.htm,4,lastweek/vcu118_fmcp_qsfp,373608526,Verilog,vcu118_fmcp_qsfp,121,1,2022-02-20 07:17:36+00:00,[],None
247,https://github.com/y38y38/floor_log2.git,2021-06-06 04:37:59+00:00,,0,y38y38/floor_log2,374268478,Verilog,floor_log2,1,1,2023-11-27 08:11:36+00:00,[],None
248,https://github.com/Ajay-Sai-Reddy/Vedic-Multiplier.git,2021-05-16 12:02:49+00:00,An 4-bit multiplier is synthesized and simulated in Xilinx ISE using Verilog HDL. The multiplication is performed using Vedic Mathematics which is proved to consume less power and faster than conventional multipliers.,0,Ajay-Sai-Reddy/Vedic-Multiplier,367868338,Verilog,Vedic-Multiplier,2,1,2024-02-21 01:08:48+00:00,"['vedic-mathematics', 'multiplier', 'verilog-hdl', 'ripple-carry-adder']",None
249,https://github.com/UnnamedOrange/Vivado-Term-Project.git,2021-05-27 15:19:51+00:00,Vivado Term Project PKU 2021.,0,UnnamedOrange/Vivado-Term-Project,371418615,Verilog,Vivado-Term-Project,2643,1,2023-01-28 07:48:52+00:00,[],https://api.github.com/licenses/mit
250,https://github.com/Vishal1128/Implementation_of_32_bit_Multipliers_on_FPGA.git,2021-06-06 03:44:35+00:00,,0,Vishal1128/Implementation_of_32_bit_Multipliers_on_FPGA,374261240,Verilog,Implementation_of_32_bit_Multipliers_on_FPGA,463,1,2023-10-14 14:35:26+00:00,[],None
251,https://github.com/matt-beach/memLCDdriver.git,2021-05-11 23:10:59+00:00,,0,matt-beach/memLCDdriver,366534910,Verilog,memLCDdriver,3877,1,2022-03-13 13:07:25+00:00,[],None
252,https://github.com/evgenii-lezhnev/HDLNoCGen.git,2021-05-29 11:44:06+00:00,Verilog Code Generator of Communication Subsystem for Networks-on-Chip,1,evgenii-lezhnev/HDLNoCGen,371958585,Verilog,HDLNoCGen,792,1,2023-07-22 09:18:40+00:00,[],None
253,https://github.com/pratiksolav/Edge_Detection_in_Verilog.git,2021-05-31 11:50:21+00:00,The project aims to implement Edge Detection for an image using Sobel Operator on a Field Programmable Gate Array(FPGA) device. ,0,pratiksolav/Edge_Detection_in_Verilog,372488522,Verilog,Edge_Detection_in_Verilog,712,1,2023-07-24 02:06:35+00:00,[],None
254,https://github.com/mateusxxlima/hardware-description.git,2021-05-30 11:53:58+00:00,Hardware description project in verilog language implemented in the area of Digital Systems in the third semester of the Computer Science course at UFFS,0,mateusxxlima/hardware-description,372201640,Verilog,hardware-description,2,1,2022-04-16 21:38:10+00:00,"['hardware-description-language', 'verilog', 'vhdl']",None
255,https://github.com/ib619/Group7_design_project.git,2021-05-11 12:25:46+00:00,,0,ib619/Group7_design_project,366373364,Verilog,Group7_design_project,203122,1,2021-11-07 00:36:27+00:00,[],None
256,https://github.com/nima-ab/cad.git,2021-05-03 15:10:24+00:00,Computer Aided Design Course Spring 2021,0,nima-ab/cad,363970161,Verilog,cad,266,1,2024-04-01 13:18:32+00:00,[],None
257,https://github.com/ValentinAdam/LDH-Tema2.git,2021-05-27 19:44:31+00:00,,0,ValentinAdam/LDH-Tema2,371486597,Verilog,LDH-Tema2,2,1,2024-04-11 05:20:54+00:00,[],None
258,https://github.com/peterzhong2001/EE371_Labs.git,2021-05-13 22:55:27+00:00,,0,peterzhong2001/EE371_Labs,367193466,Verilog,EE371_Labs,23388,1,2023-04-25 18:11:09+00:00,[],None
259,https://github.com/IanArko/Player-Piano.git,2021-05-04 15:50:50+00:00,A verilog player piano.,0,IanArko/Player-Piano,364308607,Verilog,Player-Piano,891,1,2023-03-07 03:33:54+00:00,[],None
260,https://github.com/sshhaawwnn111/Computer_Organization_hw4.git,2021-05-06 13:43:29+00:00,,0,sshhaawwnn111/Computer_Organization_hw4,364924638,Verilog,Computer_Organization_hw4,365,1,2023-08-23 15:05:53+00:00,[],None
261,https://github.com/LichunMeng/DE0-nano-photon-count.git,2021-05-07 16:32:20+00:00,,0,LichunMeng/DE0-nano-photon-count,365293748,Verilog,DE0-nano-photon-count,101519,0,2021-05-15 07:23:52+00:00,[],None
262,https://github.com/leo-Ne/FPGA-example-for-TUNERL-succesors.git,2021-05-08 02:22:38+00:00,This repository is built for successor in my lab. I would upload some disrelated Verilog Codes and documents. Hope it will be helpful. ,0,leo-Ne/FPGA-example-for-TUNERL-succesors,365399586,Verilog,FPGA-example-for-TUNERL-succesors,176,0,2021-05-12 08:24:17+00:00,[],None
263,https://github.com/Heroyuan203/Filters.git,2021-05-09 06:58:32+00:00,my verilog code and summary of the proceeding.,0,Heroyuan203/Filters,365688358,Verilog,Filters,15,0,2021-05-09 07:01:06+00:00,[],https://api.github.com/licenses/gpl-3.0
264,https://github.com/gowthamgowthamp/restoring-divider.git,2021-05-10 03:10:33+00:00,,0,gowthamgowthamp/restoring-divider,365903593,Verilog,restoring-divider,113,0,2021-07-31 14:51:58+00:00,[],https://api.github.com/licenses/mit
265,https://github.com/eduardoadf21/MIC-project.git,2021-05-10 15:34:18+00:00,build mic01 of tanenbaum's computer architeture,0,eduardoadf21/MIC-project,366092012,Verilog,MIC-project,80,0,2021-05-10 16:05:51+00:00,[],None
266,https://github.com/dathoanh/Simple-Verilog-Processor.git,2021-05-11 04:55:04+00:00,,0,dathoanh/Simple-Verilog-Processor,366259455,Verilog,Simple-Verilog-Processor,400,0,2021-05-11 07:52:46+00:00,[],None
267,https://github.com/aktastunahan/Arithmetic-Logic-Processor.git,2021-05-06 20:53:49+00:00,,0,aktastunahan/Arithmetic-Logic-Processor,365034899,Verilog,Arithmetic-Logic-Processor,2932,0,2021-05-06 21:20:40+00:00,[],None
268,https://github.com/lackofdream/32bit-multicycle-mips-verilog.git,2021-05-08 12:57:49+00:00,,0,lackofdream/32bit-multicycle-mips-verilog,365514789,Verilog,32bit-multicycle-mips-verilog,37,0,2021-05-08 12:58:06+00:00,[],None
269,https://github.com/AndresSanchez117/MIPS-CPU.git,2021-05-08 09:34:05+00:00,A simple MIPS CPU developed with the Verilog hardware description language and Intel Quartus.,0,AndresSanchez117/MIPS-CPU,365474213,Verilog,MIPS-CPU,10,0,2021-05-08 09:41:35+00:00,[],None
270,https://github.com/x8BADF00D/CMPE125.git,2021-05-06 04:30:16+00:00,,0,x8BADF00D/CMPE125,364784578,Verilog,CMPE125,25,0,2021-05-06 05:05:58+00:00,[],None
271,https://github.com/x8BADF00D/CMPE140.git,2021-05-06 04:14:04+00:00,"Computer Architecture, Verilog",0,x8BADF00D/CMPE140,364781617,Verilog,CMPE140,106,0,2021-05-06 05:52:46+00:00,[],None
272,https://github.com/victor4700/MSEE_project.git,2021-05-19 04:29:06+00:00,,0,victor4700/MSEE_project,368743788,Verilog,MSEE_project,2431,0,2021-05-19 05:27:55+00:00,[],None
273,https://github.com/e-Erdem/VSCPU.git,2021-05-19 00:02:54+00:00,VerySimpleCPU,0,e-Erdem/VSCPU,368696589,Verilog,VSCPU,7,0,2021-08-20 09:15:39+00:00,[],https://api.github.com/licenses/mit
274,https://github.com/indhrajith1199/Votingmachine.git,2021-05-16 15:22:52+00:00,Design of a simple voting machine using Verilog in Xilinx Vivado tool,0,indhrajith1199/Votingmachine,367917387,Verilog,Votingmachine,5,0,2021-05-16 15:26:59+00:00,[],None
275,https://github.com/jonathanschroeter/CS-4341-ALU-Verilog.git,2021-05-13 19:00:37+00:00,,0,jonathanschroeter/CS-4341-ALU-Verilog,367147383,Verilog,CS-4341-ALU-Verilog,1007,0,2021-05-13 19:05:40+00:00,[],None
276,https://github.com/Firestarter97/micro-processor.git,2021-05-21 04:34:16+00:00,micro-processor,0,Firestarter97/micro-processor,369413934,Verilog,micro-processor,3,0,2021-05-21 04:47:09+00:00,[],None
277,https://github.com/ber-mun02/SemArq_ProyectoFinal_D12E4.git,2021-05-19 13:53:29+00:00,,0,ber-mun02/SemArq_ProyectoFinal_D12E4,368886580,Verilog,SemArq_ProyectoFinal_D12E4,148,0,2021-06-22 18:39:24+00:00,[],None
278,https://github.com/kamahori/mips-processor.git,2021-05-15 07:25:52+00:00,A pipelined MIPS processor,0,kamahori/mips-processor,367567470,Verilog,mips-processor,19,0,2021-05-15 07:45:35+00:00,[],None
279,https://github.com/AhmadGon/Advanced-Digital-Oscilloscope.git,2021-05-11 09:54:58+00:00,"A new version of digital oscilloscope project that contains denouncers on all buttons and switches, also the ability to make a screenshot and stream it to PC, 2 Channels scope, ability to measure frequencies and amplitudes, pause button and more ",0,AhmadGon/Advanced-Digital-Oscilloscope,366334142,Verilog,Advanced-Digital-Oscilloscope,69775,0,2022-03-26 21:08:02+00:00,[],None
280,https://github.com/afaringhazal/CEIT-LC.git,2021-05-07 17:53:41+00:00,Logic Circuits,0,afaringhazal/CEIT-LC,365312896,,CEIT-LC,153543,0,2021-05-07 17:53:42+00:00,[],None
281,https://github.com/preston-Glenn/CE4304_CPU_Project.git,2021-05-12 06:41:56+00:00,,0,preston-Glenn/CE4304_CPU_Project,366618052,Verilog,CE4304_CPU_Project,49,0,2021-09-22 05:17:32+00:00,[],None
282,https://github.com/LinyueWang/AD7693_fpga.git,2021-05-12 08:39:26+00:00,,0,LinyueWang/AD7693_fpga,366648522,Verilog,AD7693_fpga,2,0,2021-05-12 08:39:45+00:00,[],None
283,https://github.com/Ghcrghcr/boothmul256_64.git,2021-05-12 09:43:44+00:00,This repo refer to the code of zhishangtanxin https://blog.csdn.net/zhouxuanyuye/article/details/106366316?utm_source=app&app_version=4.7.1,0,Ghcrghcr/boothmul256_64,366666199,Verilog,boothmul256_64,8,0,2021-07-21 14:34:20+00:00,[],https://api.github.com/licenses/mit
284,https://github.com/Nexusoft/nexus-hash-fpga-verilog.git,2021-05-12 20:25:35+00:00,Skein-Keccak hash algorithm for fpga and asic mining nexus in verilog,1,Nexusoft/nexus-hash-fpga-verilog,366844681,Verilog,nexus-hash-fpga-verilog,110,0,2022-04-08 18:30:09+00:00,[],https://api.github.com/licenses/mit
285,https://github.com/jongai/Chips.git,2021-05-13 03:17:44+00:00,These are a bunch of chips,0,jongai/Chips,366921275,Verilog,Chips,10,0,2021-05-13 04:19:20+00:00,[],None
286,https://github.com/esteban11519/SistemasEmbebidos.git,2021-05-13 03:02:48+00:00,,0,esteban11519/SistemasEmbebidos,366918257,Verilog,SistemasEmbebidos,40887,0,2021-09-06 05:45:19+00:00,[],None
287,https://github.com/suuzen/mycpu.git,2021-06-06 09:44:06+00:00,,0,suuzen/mycpu,374322054,Verilog,mycpu,15,0,2022-05-10 07:18:25+00:00,[],None
288,https://github.com/lylechan42/DDS.git,2021-06-06 14:19:47+00:00,综合课程设计,0,lylechan42/DDS,374379132,Verilog,DDS,3894,0,2023-06-06 13:19:10+00:00,[],None
289,https://github.com/hsntrq/TwoPlayerTankGame.git,2021-06-05 21:07:13+00:00,,0,hsntrq/TwoPlayerTankGame,374212378,Verilog,TwoPlayerTankGame,3100,0,2021-11-19 18:54:59+00:00,[],None
290,https://github.com/adhilartz/fpgacam.git,2021-06-03 02:42:42+00:00,,0,adhilartz/fpgacam,373360989,Verilog,fpgacam,8,0,2021-06-03 03:05:12+00:00,[],None
291,https://github.com/eerielocus/system_architecture.git,2021-06-03 18:50:10+00:00,Term project to create a basic CPU from the ground up using ModelSim. ,0,eerielocus/system_architecture,373610167,Verilog,system_architecture,165,0,2021-06-03 19:02:33+00:00,[],None
292,https://github.com/SidhartheneeNayak/1011-Sequence-Detector-.git,2021-06-05 07:27:38+00:00,Verilog code for Moore finite state machine to detect the sequence '1011',0,SidhartheneeNayak/1011-Sequence-Detector-,374049455,Verilog,1011-Sequence-Detector-,182,0,2021-06-07 09:51:23+00:00,[],None
293,https://github.com/SaiAshwith/Crypto-FPGA.git,2021-05-27 11:02:14+00:00,,1,SaiAshwith/Crypto-FPGA,371342772,Verilog,Crypto-FPGA,36,0,2021-06-27 13:37:28+00:00,[],None
294,https://github.com/Advait13/sky130RTLDesignAndSynthesisWorkshop.git,2021-05-27 16:35:11+00:00,,0,Advait13/sky130RTLDesignAndSynthesisWorkshop,371439675,Verilog,sky130RTLDesignAndSynthesisWorkshop,2325,0,2021-05-27 16:35:27+00:00,[],None
295,https://github.com/Atulgupta251/team03.git,2021-05-27 02:35:03+00:00,work,0,Atulgupta251/team03,371224833,Verilog,team03,12,0,2021-06-18 18:11:46+00:00,[],None
296,https://github.com/alvin870203/ntu_CA20F.git,2021-05-27 19:32:11+00:00,,0,alvin870203/ntu_CA20F,371483773,Verilog,ntu_CA20F,40991,0,2021-05-27 19:42:08+00:00,[],None
297,https://github.com/qinfen1127/IP_design.git,2021-06-01 11:05:08+00:00,Config files for my GitHub profile.,0,qinfen1127/IP_design,372799175,Verilog,IP_design,97,0,2023-07-14 10:07:52+00:00,"['config', 'github-config']",None
298,https://github.com/sgurkirpal/FPGA-Verilog.git,2021-05-23 10:08:32+00:00,,0,sgurkirpal/FPGA-Verilog,370018303,Verilog,FPGA-Verilog,171,0,2021-05-23 10:19:56+00:00,[],https://api.github.com/licenses/mit
299,https://github.com/AmnesiacGarden/MIPS_System.git,2021-05-23 14:23:15+00:00,,0,AmnesiacGarden/MIPS_System,370073079,Verilog,MIPS_System,9,0,2021-05-23 14:29:04+00:00,[],None
300,https://github.com/Nafis-Mustakim-Taskin/Carry-Select-Adder.git,2021-05-22 18:15:56+00:00,implementation of a 4 bit carry select adder with testbench,0,Nafis-Mustakim-Taskin/Carry-Select-Adder,369877628,Verilog,Carry-Select-Adder,8,0,2021-05-22 18:39:49+00:00,[],None
301,https://github.com/ne-egor/qflow_diff.git,2021-05-20 12:31:22+00:00,,0,ne-egor/qflow_diff,369201373,Verilog,qflow_diff,55,0,2021-05-20 12:53:49+00:00,[],None
302,https://github.com/mrazimi99/Pipelined-ARM-Processor.git,2021-05-24 11:52:18+00:00,,0,mrazimi99/Pipelined-ARM-Processor,370334580,Verilog,Pipelined-ARM-Processor,1437,0,2021-05-24 11:54:11+00:00,[],None
303,https://github.com/soulrrrrr/NCTU-Computer-Organization-2021-Spring.git,2021-05-26 03:59:57+00:00,,0,soulrrrrr/NCTU-Computer-Organization-2021-Spring,370900479,Verilog,NCTU-Computer-Organization-2021-Spring,7059,0,2022-01-06 06:35:26+00:00,[],None
304,https://github.com/rajveer111-maker/Aes_algo.git,2021-05-31 16:04:17+00:00,Advance Encryption Standard,0,rajveer111-maker/Aes_algo,372562042,Verilog,Aes_algo,5,0,2021-06-01 10:24:49+00:00,[],None
305,https://github.com/madorskya/alct.git,2021-05-25 21:50:27+00:00,,0,madorskya/alct,370836382,Verilog,alct,459997,0,2022-01-10 21:33:03+00:00,[],None
306,https://github.com/klokaj/FLASH_ADC.git,2021-05-29 20:50:29+00:00,,0,klokaj/FLASH_ADC,372067292,Verilog,FLASH_ADC,6,0,2021-05-29 21:41:03+00:00,[],None
307,https://github.com/fleb72/FPGA-Alchitry-Verilog-Si7021-temperature.git,2021-05-26 16:28:26+00:00,Verilog driver for the Si7021 temperature sensor,0,fleb72/FPGA-Alchitry-Verilog-Si7021-temperature,371100948,Verilog,FPGA-Alchitry-Verilog-Si7021-temperature,439,0,2021-06-19 17:29:53+00:00,[],None
308,https://github.com/romulusae/romulus-hardware.git,2021-05-26 12:18:49+00:00,Hardware implementations for the Romulus lightweight cryptography family,1,romulusae/romulus-hardware,371023005,Verilog,romulus-hardware,3698,0,2021-08-16 03:27:22+00:00,[],https://api.github.com/licenses/mit
309,https://github.com/Timothysthomas4316/AES.git,2021-05-04 12:02:19+00:00,,0,Timothysthomas4316/AES,364241661,Verilog,AES,13,0,2021-05-04 12:08:29+00:00,[],None
310,https://github.com/onagbonoga/onagbonoga.github.io.git,2021-06-03 17:15:44+00:00,portfolio for Nurudeen ,0,onagbonoga/onagbonoga.github.io,373586632,Verilog,onagbonoga.github.io,16410,0,2021-12-21 21:34:11+00:00,[],None
311,https://github.com/YC-Vertex/mips.git,2021-05-29 10:13:45+00:00,五级流水线MIPS核，清华大学2021春计算机原理与设计大作业,0,YC-Vertex/mips,371940507,Verilog,mips,41,0,2021-07-10 16:40:39+00:00,[],https://api.github.com/licenses/mit
312,https://github.com/gitzhangzhao/toy.git,2021-06-01 10:35:28+00:00,simple code,0,gitzhangzhao/toy,372791877,Verilog,toy,45,0,2022-03-31 09:01:26+00:00,[],None
313,https://github.com/AtlasFPGA/Radio-86RK.git,2021-06-02 16:00:16+00:00,,1,AtlasFPGA/Radio-86RK,373226696,Verilog,Radio-86RK,131,0,2022-11-09 14:40:38+00:00,[],None
314,https://github.com/standanley/oscillator_model.git,2021-06-02 23:30:53+00:00,"Quick verilog functional model of a ring oscillator, compatable with iverilog.",0,standanley/oscillator_model,373328510,Verilog,oscillator_model,9,0,2021-06-02 23:42:30+00:00,[],None
315,https://github.com/yovikas1730/Verilog-Codes.git,2021-05-28 17:40:17+00:00,,0,yovikas1730/Verilog-Codes,371776550,Verilog,Verilog-Codes,5,0,2021-05-28 19:01:50+00:00,[],None
316,https://github.com/raae7742/study-verilog.git,2021-05-27 13:07:45+00:00,베릴로그(Verilog) - 임베디드 시스템,0,raae7742/study-verilog,371376892,Verilog,study-verilog,13346,0,2021-09-01 14:14:58+00:00,"['verilog', 'fpga']",None
317,https://github.com/PrashantMata/Pico_compressed_cache.git,2021-06-03 11:05:59+00:00,,0,PrashantMata/Pico_compressed_cache,373477990,Verilog,Pico_compressed_cache,31,0,2021-06-03 11:07:32+00:00,[],None
318,https://github.com/tecbarry/git_study.git,2021-06-06 03:42:14+00:00,,0,tecbarry/git_study,374260909,Verilog,git_study,6,0,2021-06-26 07:57:23+00:00,[],None
319,https://github.com/martinribelotta/apio-test.git,2021-06-05 20:45:21+00:00,,0,martinribelotta/apio-test,374209054,Verilog,apio-test,4,0,2021-06-06 16:51:53+00:00,[],None
320,https://github.com/rogerpease/PYNQSubtractBranchNegative.git,2021-06-06 21:56:21+00:00,,0,rogerpease/PYNQSubtractBranchNegative,374471518,Verilog,PYNQSubtractBranchNegative,32,0,2021-06-08 02:03:02+00:00,[],None
321,https://github.com/russellfiras12/Verilog.git,2021-05-10 22:53:04+00:00,Verilog Code,0,russellfiras12/Verilog,366195314,Verilog,Verilog,5,0,2021-05-11 20:22:28+00:00,[],None
322,https://github.com/neovasudeva/Nanium.git,2021-05-14 19:04:12+00:00,:desktop_computer: A 32-bit 5-stage scalar pipelined RISC-V processor that follows the RV32I ISA specification (ECE 411 Final Project).,0,neovasudeva/Nanium,367456293,Verilog,Nanium,1686,0,2022-01-15 20:06:40+00:00,"['systemverilog', 'risc-v']",None
323,https://github.com/amar-singh-wisesciencewise/verilog.git,2021-05-15 11:23:29+00:00,verilog code and testbench code,0,amar-singh-wisesciencewise/verilog,367612953,Verilog,verilog,22,0,2022-08-27 16:18:54+00:00,[],https://api.github.com/licenses/gpl-3.0
324,https://github.com/vonmon2/RISC-V-Processor.git,2021-05-26 01:20:10+00:00,,0,vonmon2/RISC-V-Processor,370870783,Verilog,RISC-V-Processor,4221,0,2021-05-26 01:24:14+00:00,[],None
325,https://github.com/mohamedayman15069/Pipelined-RISC-V-Processor-.git,2021-05-31 18:33:49+00:00,Implementing the 40 instructions of a pipelined RISC-V processor with taking into consideration the flushing and stalling using Verilog. ,0,mohamedayman15069/Pipelined-RISC-V-Processor-,372597682,Verilog,Pipelined-RISC-V-Processor-,21633,0,2021-05-31 18:44:16+00:00,[],None
326,https://github.com/longshiine/COSE222_Computer_Architecture.git,2021-05-31 02:28:28+00:00,"COSE222: This course covers the computer organization details, mainly focusing on CPU internal and memory hierarchy (cache, memory and storage)",0,longshiine/COSE222_Computer_Architecture,372360853,Verilog,COSE222_Computer_Architecture,2386,0,2023-01-31 06:22:12+00:00,[],None
327,https://github.com/MohammadAliKazmi/TLC-Project.git,2021-05-22 17:29:59+00:00,"This project develops a real-time density based dynamic Traffic Light Controller(TLC) using a Field Programmable Gate Array(FPGA) with Verilod HDL hardware description language inside Quartus II simulation software. We implement a low-cost and efficient alternative to traditional fixed time traffic light controllers which change light states after fixed time delays resulting into traffic congestion and unnecessary vehicle wait times. In our system we detect real time traffic density using an array of three IR sensors placed on each road of a four-road junction. The traffic signal of the road with highest traffic density(most active sensors) is set to green, and the other roads are set to red. When the traffic density in another road exceeds that of the current active road, the current road is set to red, and the new road is set to green. To mitigate the effects of too frequent switching of traffic signal between roads resulting in inefficiency, we set the signal to always stay active for a minimum delay period once a switching has taken place. In case two roads have the same number of active sensors, we set the roads with an inherent priority sequence. We also use sound sensors to detect emergency vehicles on a road and have designed our algorithm to assign highest priority to that road. Finally, we also use sensors to detect traffic infringements and deploy a camera module to take a picture of the license plate of the vehicle causing the infringement and send the picture to the relevant authorities.",0,MohammadAliKazmi/TLC-Project,369868619,Verilog,TLC-Project,58,0,2021-05-22 17:35:08+00:00,[],None
328,https://github.com/Yangxuhao/verilog_lessons.git,2021-05-19 13:35:45+00:00,,0,Yangxuhao/verilog_lessons,368881217,Verilog,verilog_lessons,140,0,2021-05-19 13:42:15+00:00,[],None
329,https://github.com/arjun1995237/interesting-.git,2021-05-20 09:23:31+00:00,,1,arjun1995237/interesting-,369151597,Verilog,interesting-,29319,0,2021-05-21 18:53:47+00:00,[],None
330,https://github.com/lipijain2/CS220.git,2021-05-23 09:24:55+00:00,"CS220A: Computer organization course's assignments,2021 spring",0,lipijain2/CS220,370009950,Verilog,CS220,477,0,2021-06-19 17:25:20+00:00,[],None
331,https://github.com/manig1729/verilog-practice.git,2021-05-19 17:50:25+00:00,Random pieces of verilog code,0,manig1729/verilog-practice,368955348,Verilog,verilog-practice,19,0,2021-06-15 13:30:14+00:00,[],None
332,https://github.com/ponpon1980/N26091607_ponpon.git,2021-05-05 03:16:03+00:00,,0,ponpon1980/N26091607_ponpon,364448995,Verilog,N26091607_ponpon,159,0,2021-05-05 03:16:06+00:00,[],None
333,https://github.com/MaxMorning/Seme4CPU.git,2021-05-13 08:23:41+00:00,大二下计算机组成原理课程大作业——CPU设计,0,MaxMorning/Seme4CPU,366982753,Verilog,Seme4CPU,26,0,2022-06-04 07:30:51+00:00,[],https://api.github.com/licenses/mit
334,https://github.com/hudongyue1/myCPU.git,2021-05-13 08:18:17+00:00,,0,hudongyue1/myCPU,366981391,Verilog,myCPU,729,0,2022-12-31 03:38:06+00:00,[],None
335,https://github.com/NTUEE-DSD-G1/Pipelined-RISCV.git,2021-05-21 09:18:46+00:00,,0,NTUEE-DSD-G1/Pipelined-RISCV,369480888,Verilog,Pipelined-RISCV,47033,0,2022-02-26 08:54:48+00:00,[],None
336,https://github.com/MuhmmtKara-zz/Verilog.git,2021-05-25 11:44:20+00:00,,0,MuhmmtKara-zz/Verilog,370673078,Verilog,Verilog,0,0,2021-05-25 11:46:16+00:00,[],None
337,https://github.com/cyanvestige/verilog.git,2021-05-07 02:29:21+00:00,,0,cyanvestige/verilog,365092411,Verilog,verilog,3,0,2021-05-07 02:31:15+00:00,[],None
338,https://github.com/CansWang/skywater-130nm-adk.git,2021-05-09 06:45:59+00:00,Design Compiler Compatible SKY130 ADK,0,CansWang/skywater-130nm-adk,365686332,Verilog,skywater-130nm-adk,38659,0,2024-02-27 13:40:51+00:00,[],None
339,https://github.com/yangyang0611/Raiden.git,2021-05-12 17:33:24+00:00,This is a game where user can shoot down the enemy with button control. Witten in Verlilog,0,yangyang0611/Raiden,366798399,Verilog,Raiden,10,0,2021-05-13 19:12:57+00:00,[],None
340,https://github.com/korey-corkscrew/5-Stage_Pipeline_CPU.git,2021-05-30 00:36:09+00:00,Verilog HDL implementation of data forwarding in a 5-stage pipeline CPU,0,korey-corkscrew/5-Stage_Pipeline_CPU,372094249,Verilog,5-Stage_Pipeline_CPU,339,0,2022-08-09 15:27:44+00:00,[],None
341,https://github.com/3bdlslam/FFT_32_cooly_tukey_verilog.git,2021-05-29 18:02:41+00:00,,0,3bdlslam/FFT_32_cooly_tukey_verilog,372039670,Verilog,FFT_32_cooly_tukey_verilog,27349,0,2021-06-17 23:14:50+00:00,[],None
342,https://github.com/calinbucur/Computer-Architecture.git,2021-05-20 16:41:40+00:00,,0,calinbucur/Computer-Architecture,369275311,Verilog,Computer-Architecture,1231,0,2021-05-20 16:45:25+00:00,[],None
343,https://github.com/Sevzera/aoc2-cefet.git,2021-05-27 19:30:46+00:00,"Projetos desenvolvidos durante nossa graduação, na disciplina de Arquitetura e Organização de Computadores II",0,Sevzera/aoc2-cefet,371483438,Verilog,aoc2-cefet,21459,0,2021-09-10 23:51:44+00:00,[],None
344,https://github.com/njomzaismailii/CPU16bit.git,2021-06-03 21:02:54+00:00,Created a single-cycle CPU 16bit in Vivado,0,njomzaismailii/CPU16bit,373640489,Verilog,CPU16bit,8,0,2022-02-24 11:46:59+00:00,[],None
345,https://github.com/craciunoiuc/vlsi.git,2021-06-03 10:17:53+00:00,VLSI course project,0,craciunoiuc/vlsi,373465855,Verilog,vlsi,242,0,2023-01-28 08:30:35+00:00,[],None
346,https://github.com/habeebasakr/riscvprocessor.git,2021-05-08 02:48:39+00:00,,0,habeebasakr/riscvprocessor,365403677,Verilog,riscvprocessor,14,0,2021-05-08 02:50:09+00:00,[],None
347,https://github.com/ShervinAmbrose/FloatingPointAddition.git,2021-05-17 18:39:44+00:00,,1,ShervinAmbrose/FloatingPointAddition,368287932,Verilog,FloatingPointAddition,8826,0,2021-05-27 07:48:55+00:00,[],None
348,https://github.com/williamtien23/HDL-SDRAM_Pt2.git,2021-05-18 23:05:15+00:00,,0,williamtien23/HDL-SDRAM_Pt2,368687541,Verilog,HDL-SDRAM_Pt2,3,0,2021-05-18 23:05:20+00:00,[],None
349,https://github.com/williamtien23/HDL-Carry_Select_Adder.git,2021-05-03 23:10:42+00:00,,0,williamtien23/HDL-Carry_Select_Adder,364084658,Verilog,HDL-Carry_Select_Adder,1,0,2021-05-03 23:10:47+00:00,[],None
350,https://github.com/caerus-timing/CANTimingAnalysis.git,2021-05-03 20:47:50+00:00,,1,caerus-timing/CANTimingAnalysis,364057178,Verilog,CANTimingAnalysis,12271,0,2021-05-26 17:53:11+00:00,[],https://api.github.com/licenses/bsd-2-clause
351,https://github.com/kovagoz/fpga-blink.git,2021-05-04 21:16:59+00:00,Let's blink the LEDs!,0,kovagoz/fpga-blink,364388260,Verilog,fpga-blink,5,0,2021-12-31 09:29:03+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
352,https://github.com/KeithLin724/Verilog-Lib.git,2021-05-05 18:09:01+00:00,,0,KeithLin724/Verilog-Lib,364666122,Verilog,Verilog-Lib,333,0,2021-06-09 11:46:40+00:00,[],None
353,https://github.com/SujayAmbekar/Sequence-Generator-Even-Number-Generator.git,2021-05-05 02:31:19+00:00,,0,SujayAmbekar/Sequence-Generator-Even-Number-Generator,364441431,Verilog,Sequence-Generator-Even-Number-Generator,276,0,2021-05-05 02:40:41+00:00,[],https://api.github.com/licenses/mit
354,https://github.com/faberc/ece544_final_project.git,2021-05-14 22:10:57+00:00,,1,faberc/ece544_final_project,367490323,Verilog,ece544_final_project,687610,0,2021-06-08 04:19:16+00:00,[],None
355,https://github.com/ajithkreddy/MDCLCG.git,2021-05-03 09:55:57+00:00,,0,ajithkreddy/MDCLCG,363885513,Verilog,MDCLCG,68,0,2021-05-10 03:46:46+00:00,[],None
356,https://github.com/dvarshney1/PACMAN.git,2021-05-15 06:15:20+00:00,Replica of the classic arcade game PACMAN on the Intel DE10-Lite FPGA,0,dvarshney1/PACMAN,367555154,Verilog,PACMAN,1323,0,2021-05-15 06:31:50+00:00,[],None
357,https://github.com/karentp/Validation-bits-Management-Verilog.git,2021-05-15 04:50:57+00:00,Muxes integration and addition of validation bits to the conductual model. Estructural model synthethized through Yosys.,0,karentp/Validation-bits-Management-Verilog,367542115,Verilog,Validation-bits-Management-Verilog,91,0,2021-05-20 05:41:02+00:00,[],None
358,https://github.com/PE-611/I2C-Master.git,2021-05-13 07:06:25+00:00,,0,PE-611/I2C-Master,366964164,Verilog,I2C-Master,8139,0,2021-05-19 07:10:42+00:00,[],None
359,https://github.com/zappos23/uart.git,2021-05-14 07:26:14+00:00,,0,zappos23/uart,367283568,Verilog,uart,4,0,2021-05-14 07:32:58+00:00,[],None
360,https://github.com/pixel-debug/Processador.git,2021-05-24 23:36:14+00:00,Projeto final da disciplina de Arquitetura e Organização de Computadores I,0,pixel-debug/Processador,370511389,Verilog,Processador,8961,0,2023-01-16 20:08:31+00:00,[],None
361,https://github.com/BeatrizMartinsA/Processador-.git,2021-05-24 01:32:05+00:00,Processador baseado no MIPS 32 bits,0,BeatrizMartinsA/Processador-,370195409,Verilog,Processador-,18313,0,2021-05-24 01:45:09+00:00,[],None
362,https://github.com/pingzhili/Greedy_Snake-Verilog.git,2021-05-29 05:46:37+00:00,A Greedy Snake game on Nexys 4 DDR with Verilog.,1,pingzhili/Greedy_Snake-Verilog,371891168,Verilog,Greedy_Snake-Verilog,3977,0,2021-05-29 05:56:28+00:00,[],None
363,https://github.com/bmcswee/cpu-fpga.git,2021-05-29 17:00:43+00:00,A simple 8-bit CPU developed in Verilog for use on the Mojo FPGA development board.,0,bmcswee/cpu-fpga,372027106,Verilog,cpu-fpga,37,0,2021-05-29 17:01:59+00:00,[],None
364,https://github.com/Zebio/ALU-Assincrona.git,2021-05-26 19:22:47+00:00,,0,Zebio/ALU-Assincrona,371146115,Verilog,ALU-Assincrona,51,0,2021-08-04 18:54:05+00:00,[],None
365,https://github.com/bmsce-vlsi-projects/32-bit-microprocessor.git,2021-05-31 11:08:53+00:00,,0,bmsce-vlsi-projects/32-bit-microprocessor,372477668,Verilog,32-bit-microprocessor,5,0,2021-05-31 11:32:25+00:00,[],None
366,https://github.com/haowoo0112/verilog_DW8051_IR_LCM.git,2021-05-18 09:56:19+00:00,,0,haowoo0112/verilog_DW8051_IR_LCM,368480583,Verilog,verilog_DW8051_IR_LCM,20337,0,2022-04-20 14:13:59+00:00,[],None
367,https://github.com/nishitnathwani/FIR-FILTER.git,2021-05-18 12:20:51+00:00,This repository contains complete implementation of the 4 Tap FIR filter Using Verilog HDL for implementation algorithms and Python script for printing input and the output samples.,0,nishitnathwani/FIR-FILTER,368518973,Verilog,FIR-FILTER,3,0,2021-05-18 13:02:00+00:00,[],None
368,https://github.com/Brubzick/perfect.git,2021-05-25 14:47:07+00:00,,0,Brubzick/perfect,370727858,Verilog,perfect,14,0,2021-05-25 16:18:26+00:00,[],None
369,https://github.com/Pigdrum/Digital-Answering-Machine.git,2021-05-13 14:28:10+00:00,,0,Pigdrum/Digital-Answering-Machine,367074430,Verilog,Digital-Answering-Machine,10461,0,2021-05-13 14:47:00+00:00,[],None
370,https://github.com/UnnamedOrange/Vivado-Easy-Lab.git,2021-05-14 03:24:01+00:00,,0,UnnamedOrange/Vivado-Easy-Lab,367238079,Verilog,Vivado-Easy-Lab,41,0,2023-01-28 07:48:52+00:00,[],None
371,https://github.com/andy1309mhp/Local-Binary-Pattern.git,2021-05-07 09:22:49+00:00,,0,andy1309mhp/Local-Binary-Pattern,365180913,Verilog,Local-Binary-Pattern,721,0,2021-05-07 15:21:46+00:00,[],None
372,https://github.com/skuro96/FPGA_Animation.git,2021-06-06 11:08:56+00:00,,0,skuro96/FPGA_Animation,374338865,Verilog,FPGA_Animation,6,0,2021-06-12 15:40:35+00:00,[],None
373,https://github.com/MinHanLiWesley/Pipelined-RiscV-Preprocessor.git,2021-06-02 15:27:25+00:00,,0,MinHanLiWesley/Pipelined-RiscV-Preprocessor,373216597,Verilog,Pipelined-RiscV-Preprocessor,14,0,2021-06-02 15:31:15+00:00,[],None
374,https://github.com/ceasergarcia/ECEN676.git,2021-05-09 00:27:20+00:00,ECEN 676 code,0,ceasergarcia/ECEN676,365636730,Verilog,ECEN676,5,0,2021-05-09 00:34:46+00:00,[],None
375,https://github.com/OMGwitness/CPU-Course-Design.git,2021-05-10 07:57:34+00:00,Course Design of Computer Organization and Design for Sophomores in Wuhan University,0,OMGwitness/CPU-Course-Design,365963027,Verilog,CPU-Course-Design,5213,0,2021-08-23 08:54:28+00:00,[],None
376,https://github.com/kiever1962/TestTM1637---FPGA-Altera.git,2021-05-07 18:46:24+00:00,,0,kiever1962/TestTM1637---FPGA-Altera,365324956,Verilog,TestTM1637---FPGA-Altera,42602,0,2021-05-07 19:07:16+00:00,[],None
377,https://github.com/alirezasalamat/ARM.git,2021-05-07 19:31:51+00:00,,0,alirezasalamat/ARM,365334790,Verilog,ARM,80,0,2022-01-17 20:13:14+00:00,[],None
378,https://github.com/WinterSoldier-2021/EE705-Bellman-Ford.git,2021-05-11 09:02:10+00:00,EE705-Bellman-Ford,0,WinterSoldier-2021/EE705-Bellman-Ford,366319477,Verilog,EE705-Bellman-Ford,58374,0,2021-05-14 04:39:45+00:00,[],None
379,https://github.com/apilashh/FPGA-Snake-Game.git,2021-05-05 20:08:30+00:00,,0,apilashh/FPGA-Snake-Game,364693674,Verilog,FPGA-Snake-Game,393,0,2021-05-05 20:13:21+00:00,[],None
380,https://github.com/khanhdang1012/8b-10b-encoder-verification.git,2021-05-06 00:39:54+00:00,,1,khanhdang1012/8b-10b-encoder-verification,364742399,Verilog,8b-10b-encoder-verification,6,0,2021-05-06 00:44:28+00:00,[],None
381,https://github.com/bmsce-vlsi-projects/Floating-point-alu.git,2021-05-05 11:51:30+00:00,,0,bmsce-vlsi-projects/Floating-point-alu,364559616,Verilog,Floating-point-alu,6,0,2021-05-05 12:02:36+00:00,[],None
382,https://github.com/skuro96/FPGA_tutorial.git,2021-05-03 15:15:12+00:00,,0,skuro96/FPGA_tutorial,363971546,Verilog,FPGA_tutorial,25,0,2021-05-18 09:11:38+00:00,[],None
383,https://github.com/petertsai1998/109_Spring_Computer-Organization.git,2021-05-12 14:13:46+00:00,,0,petertsai1998/109_Spring_Computer-Organization,366739323,Verilog,109_Spring_Computer-Organization,360,0,2021-05-12 14:15:11+00:00,[],None
384,https://github.com/Raziel-had-a-bad-day/fpga-synthdev.git,2021-05-12 15:32:51+00:00,"fpga project with synth features , old",0,Raziel-had-a-bad-day/fpga-synthdev,366764741,Verilog,fpga-synthdev,21,0,2023-02-14 19:01:02+00:00,[],None
385,https://github.com/AmoghLonkar/control_logic.git,2021-05-18 04:10:52+00:00,,0,AmoghLonkar/control_logic,368397307,Verilog,control_logic,22,0,2021-06-03 15:38:37+00:00,[],None
386,https://github.com/Warthog710/Computer-Organization.git,2021-05-17 23:05:35+00:00,"Introduction to computer organization and architecture. Combinational devices, sequential and synchronized circuits, memory organization, CPU architecture and organization, bus structures, input/output, interrupts, DMA, memory hierarchy, introduction to instruction level parallelism, multithreading, and multiprocessing.",0,Warthog710/Computer-Organization,368343213,Verilog,Computer-Organization,2496,0,2021-05-19 20:46:07+00:00,[],None
387,https://github.com/18520460/IEEE-754-multiplication-and-addition.git,2021-05-21 14:18:29+00:00,,0,18520460/IEEE-754-multiplication-and-addition,369558635,Verilog,IEEE-754-multiplication-and-addition,4,0,2021-05-21 14:38:05+00:00,[],None
388,https://github.com/ikle/test-fpga.git,2021-05-15 06:42:27+00:00,FPGA tests and sample IPs,0,ikle/test-fpga,367559708,Verilog,test-fpga,126,0,2022-05-17 07:46:35+00:00,[],https://api.github.com/licenses/bsd-2-clause
389,https://github.com/SevcanDogramaci/Processor-Verilog-Simulation.git,2021-05-15 13:10:24+00:00,The project aiming to simulate a custom designed architecture in Verilog in the extent of CENG 3010 Computer Organization course.,0,SevcanDogramaci/Processor-Verilog-Simulation,367634788,Verilog,Processor-Verilog-Simulation,72,0,2021-05-15 13:33:43+00:00,[],None
390,https://github.com/Faduma-Ahmed/RISC-V-Processor.git,2021-05-11 23:27:34+00:00,Implemented a RISC-V processor in verilog,0,Faduma-Ahmed/RISC-V-Processor,366537453,Verilog,RISC-V-Processor,258,0,2021-05-15 23:19:06+00:00,[],None
391,https://github.com/OikawaLab/NexysVideo_helloworld.git,2021-05-13 06:46:08+00:00,,0,OikawaLab/NexysVideo_helloworld,366959515,Verilog,NexysVideo_helloworld,174,0,2021-05-13 06:46:44+00:00,[],None
392,https://github.com/Kokainym/FRAM-with-FPGA.git,2021-05-28 09:43:06+00:00,,0,Kokainym/FRAM-with-FPGA,371653030,Verilog,FRAM-with-FPGA,13,0,2021-05-28 09:50:28+00:00,[],None
393,https://github.com/reedas/vgabase.git,2021-05-30 20:56:58+00:00,,0,reedas/vgabase,372313759,Verilog,vgabase,1287,0,2021-05-30 20:57:47+00:00,[],None
394,https://github.com/VadimCurca/OC_Proiect.git,2021-05-27 07:20:55+00:00,,0,VadimCurca/OC_Proiect,371282464,Verilog,OC_Proiect,1553,0,2021-05-27 10:39:24+00:00,[],None
395,https://github.com/opiuclv/Computer-organization-CPU-design.git,2021-05-24 12:44:09+00:00,Design simple CPU (Verilog).,0,opiuclv/Computer-organization-CPU-design,370348664,Verilog,Computer-organization-CPU-design,2234,0,2021-05-24 12:50:15+00:00,[],None
396,https://github.com/huai0216/Verilog.git,2021-05-19 07:51:52+00:00,Homework for Computer Organization and Design,0,huai0216/Verilog,368787033,Verilog,Verilog,19,0,2021-07-12 12:54:04+00:00,[],None
397,https://github.com/MasoudHeidary/FPGA-Verilog-Simple-FIFO.git,2021-06-02 18:30:11+00:00,Advance Logic Circuit Course Exercises,1,MasoudHeidary/FPGA-Verilog-Simple-FIFO,373267058,Verilog,FPGA-Verilog-Simple-FIFO,3,0,2022-02-27 10:58:39+00:00,"['fifo', 'verilog', 'fpga']",https://api.github.com/licenses/mit
398,https://github.com/nadatamerr/RISC-V-processor.git,2021-06-05 12:52:06+00:00,"Implementation of pipelined RISC-V processor, which support all 40 instructions in the RV32I ISA. Includes early branch outcome computation (in the instruction decode stage) and the handling of all hazards. ",0,nadatamerr/RISC-V-processor,374113470,Verilog,RISC-V-processor,14,0,2021-06-05 12:54:53+00:00,[],None
399,https://github.com/samlam723/rca_64bit.git,2021-06-05 14:52:11+00:00,A 64-bit Ripple-Carry adder (RCA) is implemented.,0,samlam723/rca_64bit,374140141,Verilog,rca_64bit,61,0,2021-06-05 14:59:41+00:00,[],None
400,https://github.com/teja963/LD-LAB.git,2021-05-23 05:12:56+00:00,All about the hardware lab,0,teja963/LD-LAB,369966350,Verilog,LD-LAB,598,0,2021-05-23 05:15:17+00:00,[],None
401,https://github.com/shubhi704/Lemmings-2D.git,2021-05-24 05:58:55+00:00,,0,shubhi704/Lemmings-2D,370243907,Verilog,Lemmings-2D,3,0,2021-06-19 17:21:18+00:00,[],None
402,https://github.com/dairin007/PipelineProcessor.git,2021-05-23 14:16:23+00:00,,0,dairin007/PipelineProcessor,370071459,Verilog,PipelineProcessor,20,0,2021-06-28 05:14:00+00:00,[],None
403,https://github.com/Sahil-001/Avmm_sha3-uvm-testbench.git,2021-06-03 09:51:16+00:00,,0,Sahil-001/Avmm_sha3-uvm-testbench,373458332,Verilog,Avmm_sha3-uvm-testbench,6477,0,2021-07-14 03:16:42+00:00,[],
404,https://github.com/yichi170/5-stage_Pipeline_CPU.git,2021-05-16 09:36:43+00:00,Implement RISC-V Pipeline CPU by Verilog,0,yichi170/5-stage_Pipeline_CPU,367837967,Verilog,5-stage_Pipeline_CPU,4471,0,2022-05-02 14:51:18+00:00,[],None
405,https://github.com/an3ol/PV-Workshop.git,2021-05-28 15:27:53+00:00,,0,an3ol/PV-Workshop,371744099,Verilog,PV-Workshop,25,0,2021-07-13 21:33:39+00:00,[],None
406,https://github.com/Iris-Song/54-single-cycle-cpu.git,2021-05-29 04:47:48+00:00,,0,Iris-Song/54-single-cycle-cpu,371882319,Verilog,54-single-cycle-cpu,17369,0,2023-09-13 14:38:37+00:00,[],None
407,https://github.com/hareshnayak/RISC-Processor.git,2021-05-25 17:01:56+00:00,,0,hareshnayak/RISC-Processor,370768559,Verilog,RISC-Processor,7,0,2021-05-29 18:23:31+00:00,[],None
408,https://github.com/18520591/Use_the_CORDIC_algorithm_calculate_sinx.git,2021-05-12 13:29:54+00:00,,0,18520591/Use_the_CORDIC_algorithm_calculate_sinx,366725639,Verilog,Use_the_CORDIC_algorithm_calculate_sinx,14,0,2021-05-12 14:38:21+00:00,[],None
409,https://github.com/harithmanoj/Verilog-Samples.git,2021-05-13 05:55:03+00:00,Sample chips and project,0,harithmanoj/Verilog-Samples,366948630,Verilog,Verilog-Samples,2696,0,2021-05-29 14:12:57+00:00,[],https://api.github.com/licenses/gpl-3.0
410,https://github.com/Cosmo991119/TheReal_sustc_cs202_singleCPU.git,2021-05-22 18:45:17+00:00,,0,Cosmo991119/TheReal_sustc_cs202_singleCPU,369882916,Verilog,TheReal_sustc_cs202_singleCPU,209,0,2021-09-11 07:04:20+00:00,[],None
411,https://github.com/Gabb97/PGE.git,2021-05-22 12:05:37+00:00,,0,Gabb97/PGE,369797925,Verilog,PGE,500870,0,2021-08-31 15:29:11+00:00,[],None
412,https://github.com/agkaminski/Brainfuck-CPU.git,2021-05-24 23:44:39+00:00,Verilog implementation of native Brainfuck CPU,0,agkaminski/Brainfuck-CPU,370512672,Verilog,Brainfuck-CPU,26,0,2021-10-19 20:02:59+00:00,"['brainfuck', 'brainfuck-language', 'brainfuck-cpu', 'cpu', 'verilog', 'hdl']",https://api.github.com/licenses/gpl-3.0
413,https://github.com/leahlt/DigitalCommunicationsProject.git,2021-06-02 15:47:59+00:00,FPGA and Simulink Digital Communications System,0,leahlt/DigitalCommunicationsProject,373222906,Verilog,DigitalCommunicationsProject,93018,0,2021-07-05 23:35:01+00:00,[],None
414,https://github.com/LeeHub09/seven-segment-counter.git,2021-05-23 14:09:11+00:00,Verilog project to count to 9 on a seven segment display,0,LeeHub09/seven-segment-counter,370069812,Verilog,seven-segment-counter,25,0,2021-05-23 14:29:47+00:00,[],https://api.github.com/licenses/gpl-3.0
415,https://github.com/Wenky1996/FpgaCourse2021.git,2021-05-17 03:51:25+00:00,,0,Wenky1996/FpgaCourse2021,368047607,Verilog,FpgaCourse2021,1401,0,2021-05-17 03:58:52+00:00,[],None
416,https://github.com/zyd2001/ECE552.git,2021-05-25 07:05:01+00:00,,0,zyd2001/ECE552,370597313,Verilog,ECE552,4767,0,2021-05-25 08:04:28+00:00,[],None
417,https://github.com/psujith1804/Router-1x3.git,2021-05-25 07:15:05+00:00,,0,psujith1804/Router-1x3,370599977,Verilog,Router-1x3,1,0,2021-05-25 07:23:55+00:00,[],None
418,https://github.com/andy1309mhp/IoT-Data-Filtering.git,2021-05-25 05:15:11+00:00,,0,andy1309mhp/IoT-Data-Filtering,370572236,Verilog,IoT-Data-Filtering,888,0,2021-05-25 05:18:15+00:00,[],None
419,https://github.com/hgalocy/pinball_basys3.git,2021-05-21 19:04:27+00:00,"This holds my verilog code and constraints file to be used in synthesizing, implementing, and generating a bitstream via Vivado to program a Basys3 FPGA board.",0,hgalocy/pinball_basys3,369630073,Verilog,pinball_basys3,732,0,2021-05-21 19:14:25+00:00,[],None
420,https://github.com/paulb-nl/jtcontra.git,2021-05-21 20:12:57+00:00,"FPGA conversion of KONAMI's K007121-based games: Contra, Combat School, Labyrinth Runner...",4,paulb-nl/jtcontra,369644268,,jtcontra,30836,0,2021-05-21 20:12:58+00:00,[],https://api.github.com/licenses/gpl-3.0
421,https://github.com/techeraj-osh/opencores.git,2021-05-22 06:21:47+00:00,Projects downloaded from opencores.org,1,techeraj-osh/opencores,369732275,Verilog,opencores,500,0,2021-05-27 03:21:30+00:00,[],None
422,https://github.com/AmanVerma-21/Verilog_Basics.git,2021-05-23 19:11:27+00:00,Some basic digital electronics design,0,AmanVerma-21/Verilog_Basics,370137039,Verilog,Verilog_Basics,55,0,2021-10-17 07:27:27+00:00,[],None
423,https://github.com/Jsaltin95/Johan_Saltin_Public_Projects.git,2021-05-25 17:27:55+00:00,Public Projects for job applications,0,Jsaltin95/Johan_Saltin_Public_Projects,370775580,Verilog,Johan_Saltin_Public_Projects,20726,0,2021-06-18 23:04:43+00:00,[],None
424,https://github.com/Test-OpenROAD-webhook/OpenROAD.git,2021-05-06 20:39:37+00:00,,0,Test-OpenROAD-webhook/OpenROAD,365032050,Verilog,OpenROAD,346355,0,2021-05-06 20:55:38+00:00,[],
425,https://github.com/Wenlong-Qi/ECG_FINN.git,2021-05-12 14:39:18+00:00,,0,Wenlong-Qi/ECG_FINN,366747697,Verilog,ECG_FINN,13579,0,2021-06-07 22:12:38+00:00,[],None
426,https://github.com/HaoYuan-Hu/Digital-system-design.git,2021-05-11 07:37:09+00:00,2021年大三下春季学期《数字系统设计》课程,0,HaoYuan-Hu/Digital-system-design,366296105,Verilog,Digital-system-design,7184,0,2021-05-19 08:13:04+00:00,[],https://api.github.com/licenses/mit
427,https://github.com/AshmaTabasshumNoshin/Verilog.git,2021-05-05 17:59:43+00:00,,0,AshmaTabasshumNoshin/Verilog,364663790,Verilog,Verilog,23,0,2021-05-25 19:55:57+00:00,[],None
428,https://github.com/DucNguyen008/CNNProject.git,2021-05-10 14:58:37+00:00,Project of courses,0,DucNguyen008/CNNProject,366080900,Verilog,CNNProject,86,0,2021-07-22 15:06:53+00:00,[],None
429,https://github.com/Iris-Song/comic-book-reader.git,2021-05-09 09:40:19+00:00,take Vater und Sohn as an example,0,Iris-Song/comic-book-reader,365716803,Verilog,comic-book-reader,1442,0,2023-09-13 14:31:05+00:00,['fpga'],None
430,https://github.com/ang3ltorres/D13E04_sspac_proyecto_final.git,2021-05-19 13:55:13+00:00,Poyecto final del final D:,0,ang3ltorres/D13E04_sspac_proyecto_final,368887110,Verilog,D13E04_sspac_proyecto_final,81,0,2022-08-23 18:40:20+00:00,[],None
431,https://github.com/SYJINTW/EECS101001_Logic_Design.git,2021-05-19 14:52:17+00:00,,0,SYJINTW/EECS101001_Logic_Design,368905250,Verilog,EECS101001_Logic_Design,24305,0,2021-05-19 14:54:05+00:00,[],None
432,https://github.com/oalpaslan/A-Simple-ATM.git,2021-05-15 14:12:18+00:00,CS303 Term Project: A Simple Automated Teller Machine (ATM),0,oalpaslan/A-Simple-ATM,367648715,Verilog,A-Simple-ATM,52,0,2021-05-15 14:25:14+00:00,[],None
433,https://github.com/0bMERLIN/Stack-FPGA-Processor.git,2021-06-02 21:36:19+00:00,"A processor, that uses a tiny stack based instruction set",0,0bMERLIN/Stack-FPGA-Processor,373309042,Verilog,Stack-FPGA-Processor,4,0,2021-06-03 07:41:42+00:00,[],None
434,https://github.com/amirhbv/CA-Lab.git,2021-05-27 15:29:30+00:00,,0,amirhbv/CA-Lab,371421543,Verilog,CA-Lab,36,0,2021-07-01 18:49:18+00:00,[],None
435,https://github.com/brendan-callas/RISC-V-Processor.git,2021-05-26 01:31:59+00:00,,0,brendan-callas/RISC-V-Processor,370872881,Verilog,RISC-V-Processor,4221,0,2021-05-26 01:34:23+00:00,[],None
436,https://github.com/fernandez-oria-sieber/Arquitectura2018.git,2021-05-26 00:37:48+00:00,,0,fernandez-oria-sieber/Arquitectura2018,370863747,Verilog,Arquitectura2018,82941,0,2022-12-28 20:46:13+00:00,[],None
437,https://github.com/endeneer/CPLD_UART_Datapath_and_Control_Unit.git,2021-05-31 13:29:05+00:00,UART receiver and transmitter project using the concept of datapath and control unit.,0,endeneer/CPLD_UART_Datapath_and_Control_Unit,372516340,Verilog,CPLD_UART_Datapath_and_Control_Unit,5376,0,2021-07-07 23:52:13+00:00,[],https://api.github.com/licenses/mit
438,https://github.com/18521449/Q-Learning_Algorithm.git,2021-06-05 14:02:12+00:00,,0,18521449/Q-Learning_Algorithm,374128579,Verilog,Q-Learning_Algorithm,70,0,2021-08-17 15:20:20+00:00,[],None
439,https://github.com/HakaruN/Power_ISACPU.git,2021-06-03 12:12:46+00:00,"This project is for my Masters Dissertation. Documentation will be provided in the form of my Dissertation report (essentially a report describing the design, development and operations of the processor) NOTE this project is not going to be in a functional state for a couple of months",0,HakaruN/Power_ISACPU,373494782,Verilog,Power_ISACPU,689,0,2021-08-05 20:53:22+00:00,[],None
440,https://github.com/Javi-Garci/ObjectDetect_OV7670.git,2021-06-02 22:33:18+00:00,,0,Javi-Garci/ObjectDetect_OV7670,373319497,Verilog,ObjectDetect_OV7670,20197,0,2021-06-21 07:18:17+00:00,[],None
441,https://github.com/quangloc99/electric-engineering-lab2.git,2021-06-01 08:48:24+00:00,My 2nd lab work for the subject electric engineering,0,quangloc99/electric-engineering-lab2,372762293,Verilog,electric-engineering-lab2,842,0,2021-06-01 08:49:03+00:00,[],None
442,https://github.com/avinashavi20/full-adder.git,2021-06-01 15:41:41+00:00,the following repository contain the verilog code of full adder .,0,avinashavi20/full-adder,372881888,Verilog,full-adder,1,0,2021-06-01 15:43:03+00:00,[],None
443,https://github.com/dener-ufv/tp1-oc2-verilog.git,2021-06-01 18:47:08+00:00,,0,dener-ufv/tp1-oc2-verilog,372930660,Verilog,tp1-oc2-verilog,962,0,2022-07-17 17:43:07+00:00,[],None
444,https://github.com/1234-jahanvi/Verilog-Programming.git,2021-05-26 15:51:10+00:00,"Verilog-implementation of all the basic circuit elements (part of Digital Design), basic C programs, and caches ( as part of Computer Architecture).",0,1234-jahanvi/Verilog-Programming,371090041,Verilog,Verilog-Programming,553,0,2021-06-22 17:23:53+00:00,[],None
445,https://github.com/philipzhux/pipeline.git,2021-05-04 07:45:28+00:00,,0,philipzhux/pipeline,364178840,Verilog,pipeline,215,0,2022-07-25 23:02:05+00:00,[],None
446,https://github.com/AGH-BlobbyVolley/BlobbyVolleyBasys3.git,2021-05-05 21:15:18+00:00,,0,AGH-BlobbyVolley/BlobbyVolleyBasys3,364707688,Verilog,BlobbyVolleyBasys3,593,0,2021-09-17 17:41:26+00:00,[],None
447,https://github.com/eason1009/NCKUEEverilog.git,2021-05-06 12:08:14+00:00,,0,eason1009/NCKUEEverilog,364897017,Verilog,NCKUEEverilog,9,0,2021-05-06 13:34:01+00:00,[],None
448,https://github.com/ecruda/SERDES_KC705.git,2021-06-04 21:35:29+00:00,,0,ecruda/SERDES_KC705,373964294,Verilog,SERDES_KC705,20377,0,2021-07-08 16:48:33+00:00,[],None
449,https://github.com/0Augusto/ArquiteturaDeComputadores1.git,2021-06-02 00:09:17+00:00,Exercícios de arquitetura de computadores 1 PUC-MINAS,0,0Augusto/ArquiteturaDeComputadores1,372991666,Verilog,ArquiteturaDeComputadores1,175,0,2024-03-10 19:29:44+00:00,[],https://api.github.com/licenses/apache-2.0
450,https://github.com/NooryA/PongGameFGPA.git,2021-05-30 19:00:38+00:00,pong game in fgpa,0,NooryA/PongGameFGPA,372293968,Verilog,PongGameFGPA,17934,0,2022-02-18 23:42:16+00:00,[],None
451,https://github.com/subhiksha-maker/DE1-Soc.git,2021-05-18 17:02:30+00:00,game,0,subhiksha-maker/DE1-Soc,368607243,Verilog,DE1-Soc,4,0,2021-05-18 17:05:18+00:00,[],None
452,https://github.com/3book/prjTemplate.git,2021-05-18 15:33:04+00:00,,0,3book/prjTemplate,368581810,Verilog,prjTemplate,46,0,2021-05-18 15:35:19+00:00,[],None
453,https://github.com/Jason-Du/DIC_HW4.git,2021-05-21 11:49:42+00:00,,0,Jason-Du/DIC_HW4,369518137,Verilog,DIC_HW4,1791,0,2021-05-26 15:35:56+00:00,[],None
454,https://github.com/ysh1776/embadded_hw.git,2021-05-23 11:06:58+00:00,embadded_hw,0,ysh1776/embadded_hw,370030252,Verilog,embadded_hw,18314,0,2021-05-23 11:08:14+00:00,[],None
455,https://github.com/haowoo0112/verilog_uart_tx.git,2021-05-17 16:08:07+00:00,,0,haowoo0112/verilog_uart_tx,368247067,Verilog,verilog_uart_tx,6486,0,2022-04-20 14:13:02+00:00,[],None
456,https://github.com/matt-beach/caravel_wrapped_memLCDdriver.git,2021-05-26 14:34:41+00:00,,0,matt-beach/caravel_wrapped_memLCDdriver,371065404,Verilog,caravel_wrapped_memLCDdriver,20341,0,2021-05-28 20:18:59+00:00,[],https://api.github.com/licenses/apache-2.0
457,https://github.com/regalmoix/Computer-Architecture-Labs.git,2021-05-26 16:13:32+00:00,"These are Labs (with Solution in Verilog) of CS F342 - BITS Pilani, Goa Campus. The Labs mainly deal with MIPS processors.",0,regalmoix/Computer-Architecture-Labs,371096517,Verilog,Computer-Architecture-Labs,5165,0,2021-05-26 16:15:25+00:00,[],https://api.github.com/licenses/gpl-3.0
458,https://github.com/ali-rnik/VerilogHub.git,2021-05-27 15:28:02+00:00,MIPS architecture tried with Logisim and Verilog,0,ali-rnik/VerilogHub,371421094,Verilog,VerilogHub,2967,0,2021-05-27 15:37:31+00:00,[],None
459,https://github.com/dsfkl/Aker.git,2021-05-28 15:53:39+00:00,The Aker anonymous repo for revision process,0,dsfkl/Aker,371750892,Verilog,Aker,89,0,2021-05-28 23:54:21+00:00,[],None
460,https://github.com/ELJuanP/ProyectoFinal_E6_D13.git,2021-05-27 06:48:32+00:00,Proyecto Final,0,ELJuanP/ProyectoFinal_E6_D13,371274404,Verilog,ProyectoFinal_E6_D13,58,0,2021-06-24 04:33:26+00:00,[],None
461,https://github.com/tarunkr72/single-precision-adder.git,2021-05-27 09:42:02+00:00,,0,tarunkr72/single-precision-adder,371321873,Verilog,single-precision-adder,1,0,2021-05-27 09:58:06+00:00,[],None
462,https://github.com/shrubbroom/CHORD.git,2021-05-31 06:03:38+00:00,CORDIC Hardware of RISC-V Devices,0,shrubbroom/CHORD,372399098,Verilog,CHORD,1758,0,2021-06-26 14:34:01+00:00,[],https://api.github.com/licenses/gpl-3.0
463,https://github.com/sumukhbhat2701/pattern_matching_ccbd.git,2021-05-08 19:29:44+00:00,Regex matching using NFA logic,0,sumukhbhat2701/pattern_matching_ccbd,365595732,Verilog,pattern_matching_ccbd,1045,0,2021-05-15 16:34:38+00:00,[],None
464,https://github.com/Sustrak/MSI.git,2021-05-10 16:38:54+00:00,,0,Sustrak/MSI,366110139,Verilog,MSI,18,0,2021-06-03 16:12:25+00:00,[],None
465,https://github.com/Feng-Yan-528/Miniproject-TEST.git,2021-05-11 00:55:59+00:00,,0,Feng-Yan-528/Miniproject-TEST,366215558,Verilog,Miniproject-TEST,40808,0,2021-06-08 16:09:39+00:00,[],None
466,https://github.com/barzamin/cray.git,2021-05-03 04:28:55+00:00,,0,barzamin/cray,363815864,Verilog,cray,74,0,2021-05-03 04:33:45+00:00,[],None
467,https://github.com/rishabhj007/Comp_Arch_Assignment.git,2021-05-03 09:46:10+00:00,"Implementation of 8-bit Single Cycle and Pipelined RISC-V Processor for ADDI, SLL (shift left logical) and J (unconditional jump) ",0,rishabhj007/Comp_Arch_Assignment,363883152,Verilog,Comp_Arch_Assignment,10,0,2021-05-03 09:47:49+00:00,[],None
468,https://github.com/Leiliu99/ECE342_lab_repo.git,2021-05-09 01:34:26+00:00,This is the backup for labs in ECE342. Please reference the code when you directly use it.,0,Leiliu99/ECE342_lab_repo,365644477,Verilog,ECE342_lab_repo,20959,0,2021-05-09 01:37:49+00:00,[],None
469,https://github.com/alexismurari/Digital_Systems-Memory_Game.git,2021-05-07 15:45:47+00:00,"Designed display, randomizer and finite state machine modules on FPGA board for the memory game",0,alexismurari/Digital_Systems-Memory_Game,365281785,Verilog,Digital_Systems-Memory_Game,136,0,2021-12-26 03:23:32+00:00,[],None
470,https://github.com/ssiahpoushan/first-mojo-project.git,2021-05-11 04:56:15+00:00,,0,ssiahpoushan/first-mojo-project,366259669,Verilog,first-mojo-project,33,0,2021-05-11 05:05:44+00:00,[],https://api.github.com/licenses/mit
471,https://github.com/Firefox2100/Digital-Logic-and-Verilog.git,2021-05-11 14:20:38+00:00,This repository holds the Verilog code designed for the course Digital Logic and Verilog,0,Firefox2100/Digital-Logic-and-Verilog,366407891,Verilog,Digital-Logic-and-Verilog,30,0,2021-05-11 14:32:04+00:00,[],https://api.github.com/licenses/gpl-3.0
472,https://github.com/sb1434/ece583FinalProject.git,2021-05-12 18:02:31+00:00,Keyboard to BASYS-3 to 7-Segment display,0,sb1434/ece583FinalProject,366806312,Verilog,ece583FinalProject,1440,0,2021-05-12 18:45:57+00:00,[],None
473,https://github.com/sush24een/Matrix_Multiplier.git,2021-05-12 08:19:34+00:00,,0,sush24een/Matrix_Multiplier,366643255,Verilog,Matrix_Multiplier,4865,0,2021-11-15 12:21:56+00:00,[],None
474,https://github.com/dinhhuong26/present80_verylog.git,2021-05-07 08:38:55+00:00,,0,dinhhuong26/present80_verylog,365168924,Verilog,present80_verylog,6,0,2021-05-07 08:43:55+00:00,[],None
475,https://github.com/wfjlulu/5G-LDPC-Partially-Sto-Decode.git,2021-05-07 12:55:38+00:00,,0,wfjlulu/5G-LDPC-Partially-Sto-Decode,365233393,Verilog,5G-LDPC-Partially-Sto-Decode,5,0,2021-11-09 02:52:50+00:00,[],None
476,https://github.com/maaz-siddiqui/verilog-work.git,2021-05-05 17:23:37+00:00,Learning Verilog.,0,maaz-siddiqui/verilog-work,364654683,Verilog,verilog-work,5,0,2021-05-05 20:15:05+00:00,[],None
477,https://github.com/konradwilk/asic-frequency_counter.git,2021-05-06 01:33:47+00:00,,1,konradwilk/asic-frequency_counter,364751529,Verilog,asic-frequency_counter,50,0,2021-05-06 03:57:51+00:00,[],https://api.github.com/licenses/apache-2.0
478,https://github.com/xooxit/matmul.git,2021-05-19 18:32:09+00:00,,0,xooxit/matmul,368966474,Verilog,matmul,16,0,2021-05-26 02:31:39+00:00,[],None
479,https://github.com/juneisheng/Verilog_practice.git,2021-05-15 05:09:52+00:00,,0,juneisheng/Verilog_practice,367544789,Verilog,Verilog_practice,80,0,2021-09-17 04:52:19+00:00,[],None
480,https://github.com/Pockylee/Verilog_Practice.git,2021-05-17 03:05:52+00:00,,0,Pockylee/Verilog_Practice,368039639,Verilog,Verilog_Practice,3,0,2021-05-19 08:36:50+00:00,[],None
481,https://github.com/klimiashvilig/boomFlow.git,2021-05-21 21:08:03+00:00,,0,klimiashvilig/boomFlow,369654497,Verilog,boomFlow,28966,0,2021-05-27 01:27:52+00:00,[],None
482,https://github.com/Maxpicca-Li/cqu_ddca_lab.git,2021-05-21 15:43:56+00:00,前有学长种树，后有学弟乘凉。实验参考B占up主cqu弟中弟（lvf学长yyds）的视频,0,Maxpicca-Li/cqu_ddca_lab,369582643,Verilog,cqu_ddca_lab,43670,0,2023-07-12 14:48:05+00:00,[],None
483,https://github.com/99swetha/verilog_MIPS.git,2021-05-19 15:36:11+00:00,MIPS processor,0,99swetha/verilog_MIPS,368918733,Verilog,verilog_MIPS,93,0,2021-08-05 18:07:52+00:00,[],None
484,https://github.com/arta-crypt/ZyboTraining.git,2021-05-20 11:19:26+00:00,ZYBO Zynq-7010評価ボード Z7-10 練習用リポジトリ,0,arta-crypt/ZyboTraining,369182276,Verilog,ZyboTraining,10,0,2021-05-27 13:20:17+00:00,[],None
485,https://github.com/LizLeonLawliet/D12_SSPAC_Equipo3.git,2021-05-20 17:41:09+00:00,Seminario De Solución De Problemas de Arquitectura De Computadoras: Proyecto Final,0,LizLeonLawliet/D12_SSPAC_Equipo3,369290980,Verilog,D12_SSPAC_Equipo3,400,0,2021-06-23 01:27:15+00:00,[],None
486,https://github.com/PiChampion/VerilogEncryptionDecryption.git,2021-05-24 18:38:06+00:00,,0,PiChampion/VerilogEncryptionDecryption,370451464,Verilog,VerilogEncryptionDecryption,4,0,2021-05-24 18:56:15+00:00,[],None
487,https://github.com/tianao97/371final_lab6.git,2021-06-06 19:37:10+00:00,,0,tianao97/371final_lab6,374448201,Verilog,371final_lab6,12783,0,2021-06-16 03:37:29+00:00,[],None
488,https://github.com/Ramy34/Diseno-Digital-VLSI.git,2021-06-05 19:30:37+00:00,Repositorio de la clase de Diseño Digital VLSI,0,Ramy34/Diseno-Digital-VLSI,374197002,Verilog,Diseno-Digital-VLSI,95459,0,2021-06-05 19:44:45+00:00,[],None
489,https://github.com/YeeHsun/digital-IC-design.git,2021-06-03 01:36:24+00:00,,0,YeeHsun/digital-IC-design,373348846,Verilog,digital-IC-design,2095,0,2021-06-07 10:13:36+00:00,[],None
490,https://github.com/PrashantMata/Pico_uncompressed_cache.git,2021-06-03 11:17:38+00:00,,0,PrashantMata/Pico_uncompressed_cache,373480715,Verilog,Pico_uncompressed_cache,28,0,2021-06-03 11:27:32+00:00,[],None
491,https://github.com/pranjal-mittal0/lm32.git,2021-06-03 11:45:31+00:00,,0,pranjal-mittal0/lm32,373487740,Verilog,lm32,188,0,2021-06-03 11:45:48+00:00,[],
492,https://github.com/phnb/5-staged-pipelined-CPU-in-verilog.git,2021-06-01 06:23:51+00:00,3050 project,0,phnb/5-staged-pipelined-CPU-in-verilog,372723004,Verilog,5-staged-pipelined-CPU-in-verilog,902,0,2021-06-01 06:23:59+00:00,[],None
493,https://github.com/how861025ard/AES_FOR_TAPE_OUT.git,2021-06-04 04:30:22+00:00,,0,how861025ard/AES_FOR_TAPE_OUT,373720092,Verilog,AES_FOR_TAPE_OUT,4,0,2021-07-19 12:31:23+00:00,[],None
494,https://github.com/sowmya-gunji/Distributed_arithmetic_-DA-.git,2021-06-04 07:05:54+00:00,,1,sowmya-gunji/Distributed_arithmetic_-DA-,373752209,Verilog,Distributed_arithmetic_-DA-,1,0,2021-06-06 13:16:47+00:00,[],None
495,https://github.com/AbdallahHussien4/DCNN-Accelerator.git,2021-05-14 22:13:45+00:00,VLSI project ,0,AbdallahHussien4/DCNN-Accelerator,367490752,Verilog,DCNN-Accelerator,107556,0,2021-10-22 13:44:00+00:00,[],None
496,https://github.com/TrungNhanNguyenHuu/VLSI-BoundFlasher.git,2021-05-15 10:33:31+00:00,This is my VLSI design for a bound flasher.,0,TrungNhanNguyenHuu/VLSI-BoundFlasher,367603385,Verilog,VLSI-BoundFlasher,379,0,2023-05-30 20:19:48+00:00,[],None
497,https://github.com/jestemfresh/Verilog-FPGA.git,2021-05-14 17:09:30+00:00,,0,jestemfresh/Verilog-FPGA,367430789,Verilog,Verilog-FPGA,2,0,2021-05-14 17:10:10+00:00,[],None
498,https://github.com/twyayaya/ee6470_mid.git,2021-05-08 11:30:21+00:00,,0,twyayaya/ee6470_mid,365497432,Verilog,ee6470_mid,27212,0,2021-05-08 11:39:42+00:00,[],None
499,https://github.com/Ji-Peng/LAC_SPM_Code.git,2021-05-08 02:35:22+00:00,,0,Ji-Peng/LAC_SPM_Code,365401567,Verilog,LAC_SPM_Code,33,0,2021-11-17 02:37:30+00:00,[],None
500,https://github.com/phuc-to/Projects.git,2021-05-18 01:11:48+00:00,,0,phuc-to/Projects,368363458,Verilog,Projects,27894,0,2021-10-13 22:24:06+00:00,[],None
501,https://github.com/TimSlanschek/verilog_processor.git,2021-05-16 09:10:59+00:00,,0,TimSlanschek/verilog_processor,367832800,Verilog,verilog_processor,75,0,2021-05-16 09:12:10+00:00,[],None
502,https://github.com/BinFench/MISC64.git,2021-05-16 18:30:18+00:00,A new RISC-like ISA which aims to capitalize on superscalar processing,0,BinFench/MISC64,367957493,Verilog,MISC64,5,0,2021-05-16 18:32:02+00:00,[],None
503,https://github.com/TonyAMO/Vivado-Projects.git,2021-06-05 21:19:50+00:00,Vivado Projects from CECS 341 @CSULB,0,TonyAMO/Vivado-Projects,374214253,Verilog,Vivado-Projects,9117,0,2021-06-06 03:17:21+00:00,[],None
504,https://github.com/FTGStudio/basys3.git,2021-06-05 16:20:13+00:00,FPGA projects in verilog,0,FTGStudio/basys3,374160208,Verilog,basys3,3854,0,2021-06-05 16:25:48+00:00,[],None
505,https://github.com/EricTtTtT/RISCV-SingleCycle-Simple-CPU.git,2021-06-05 13:57:39+00:00,,0,EricTtTtT/RISCV-SingleCycle-Simple-CPU,374127442,Verilog,RISCV-SingleCycle-Simple-CPU,1123,0,2021-06-16 17:01:44+00:00,[],None
506,https://github.com/hwanggiju/watch.git,2021-05-26 06:56:10+00:00,VHDL 디지털 시계,0,hwanggiju/watch,370936292,Verilog,watch,6185,0,2022-08-09 00:48:29+00:00,[],None
507,https://github.com/AlekssGit/audio_codec.git,2021-05-25 14:50:07+00:00,,0,AlekssGit/audio_codec,370728890,Verilog,audio_codec,93151,0,2021-06-02 21:20:30+00:00,[],None
508,https://github.com/buiminhquang188/hw-sw-project.git,2021-06-01 11:15:53+00:00,,0,buiminhquang188/hw-sw-project,372802047,Verilog,hw-sw-project,28,0,2021-06-01 11:17:42+00:00,[],None
509,https://github.com/amitle2/FourBitAdder.git,2021-05-03 21:16:07+00:00,,0,amitle2/FourBitAdder,364063184,Verilog,FourBitAdder,11,0,2021-05-03 21:17:50+00:00,[],None
510,https://github.com/quang3103/Verilog-202.git,2021-05-03 07:56:50+00:00,,0,quang3103/Verilog-202,363856846,Verilog,Verilog-202,11163,0,2021-05-06 11:24:07+00:00,[],None
511,https://github.com/dixilo/fft_quad.git,2021-05-20 07:10:34+00:00,,0,dixilo/fft_quad,369114981,Verilog,fft_quad,10,0,2021-05-20 07:11:28+00:00,[],None
512,https://github.com/nghik62hust/AES_VLSI.git,2021-05-22 16:48:15+00:00,,0,nghik62hust/AES_VLSI,369859935,Verilog,AES_VLSI,4942,0,2021-05-22 16:55:28+00:00,[],None
513,https://github.com/suvm1998/DualPortRAM.git,2021-05-25 07:57:48+00:00,,0,suvm1998/DualPortRAM,370611488,Verilog,DualPortRAM,1,0,2021-05-25 08:02:37+00:00,[],None
514,https://github.com/FlyingCetacean/Computer-Architecture-Experiment.git,2021-05-28 05:41:47+00:00,【2019-2020 Spring】Computer Architecture experiment,0,FlyingCetacean/Computer-Architecture-Experiment,371592251,Verilog,Computer-Architecture-Experiment,6195,0,2021-05-28 06:02:05+00:00,[],None
515,https://github.com/NoncreativeUsername/8bitSwitch.git,2021-05-28 04:13:45+00:00,Verilog 8 bit switch with rotate option,0,NoncreativeUsername/8bitSwitch,371576938,Verilog,8bitSwitch,9,0,2021-06-08 14:45:47+00:00,[],None
516,https://github.com/y38y38/myip_start.git,2021-05-29 04:46:09+00:00,,0,y38y38/myip_start,371882066,Verilog,myip_start,17,0,2021-05-30 04:06:04+00:00,[],None
517,https://github.com/dorianverna17/CN1.git,2021-05-26 08:37:47+00:00,Laboratoare CN1 An2 Sem 2,0,dorianverna17/CN1,370964092,Verilog,CN1,37,0,2021-05-26 18:31:09+00:00,[],None
518,https://github.com/bird1and1fish/Garbage-Sorting-Network-.git,2021-05-27 01:52:52+00:00,Realize a convolution net for garbage sorting,0,bird1and1fish/Garbage-Sorting-Network-,371216876,Verilog,Garbage-Sorting-Network-,373,0,2022-04-12 08:28:29+00:00,[],None
519,https://github.com/hishamelreedy/Butterfly_FFT.git,2021-05-30 20:11:29+00:00,,1,hishamelreedy/Butterfly_FFT,372306454,Verilog,Butterfly_FFT,67535,0,2022-05-20 15:44:18+00:00,[],https://api.github.com/licenses/mit
520,https://github.com/RavenJF361/470L-Battleship.git,2021-05-29 07:35:59+00:00,,0,RavenJF361/470L-Battleship,371910770,Verilog,470L-Battleship,13,0,2021-05-29 07:43:18+00:00,[],None
521,https://github.com/VictoriaKarpova/Differentiator.git,2021-05-31 07:36:33+00:00,,1,VictoriaKarpova/Differentiator,372422061,Verilog,Differentiator,25,0,2021-05-31 09:38:03+00:00,[],None
522,https://github.com/ujjawal61/Verilog-Programs.git,2021-06-01 10:38:53+00:00,Programs coded in Verilog ,0,ujjawal61/Verilog-Programs,372792721,Verilog,Verilog-Programs,6909,0,2021-06-01 11:18:35+00:00,[],None
523,https://github.com/TheSonders/VIN_9340.git,2021-06-01 10:33:01+00:00,EF9340 & EF9341 chips in Verilog,0,TheSonders/VIN_9340,372791252,Verilog,VIN_9340,209,0,2022-02-17 22:28:09+00:00,"['videopac', 'vin', 'gen', 'ef9340', 'ef9341']",None
524,https://github.com/samratalamshanto/Digital-Systems-Design-Lab-Work-using-Modelsim-Simulation.git,2021-06-01 14:30:16+00:00,,0,samratalamshanto/Digital-Systems-Design-Lab-Work-using-Modelsim-Simulation,372859570,Verilog,Digital-Systems-Design-Lab-Work-using-Modelsim-Simulation,16176,0,2022-02-04 11:53:15+00:00,[],None
525,https://github.com/minhlang102/Snake_game_testing.git,2021-06-04 16:09:48+00:00,,1,minhlang102/Snake_game_testing,373896112,Verilog,Snake_game_testing,3516,0,2021-06-11 15:54:58+00:00,[],None
526,https://github.com/Nereo1996/SemiAutomatic-fault-injection.git,2021-05-11 14:26:03+00:00,,0,Nereo1996/SemiAutomatic-fault-injection,366409692,Verilog,SemiAutomatic-fault-injection,2147,0,2021-06-04 15:34:07+00:00,[],None
527,https://github.com/murderH/test.git,2021-05-10 02:03:59+00:00,learn vscode and github,0,murderH/test,365891237,Verilog,test,5,0,2021-05-10 02:07:03+00:00,[],None
528,https://github.com/zchen665/Uniprocessor-design.git,2021-05-09 18:52:46+00:00,HDL (verilog) uniprocessor design. Computer Architecture intro class project,0,zchen665/Uniprocessor-design,365825908,Verilog,Uniprocessor-design,23114,0,2021-05-10 04:36:34+00:00,[],None
529,https://github.com/RashmikaDeSilva/CPU-Implementation-Verilog-HDL.git,2021-05-09 10:43:59+00:00,,0,RashmikaDeSilva/CPU-Implementation-Verilog-HDL,365728167,Verilog,CPU-Implementation-Verilog-HDL,664,0,2021-06-10 18:33:14+00:00,[],None
530,https://github.com/yiyeluoshang/fpga_snake.git,2021-05-13 12:14:49+00:00,,0,yiyeluoshang/fpga_snake,367038362,Verilog,fpga_snake,0,0,2022-03-19 04:04:00+00:00,[],None
531,https://github.com/kanybekov66/MIPS.git,2021-05-06 18:40:54+00:00,,0,kanybekov66/MIPS,365005484,Verilog,MIPS,126,0,2021-05-06 18:42:58+00:00,[],https://api.github.com/licenses/gpl-3.0
532,https://github.com/shubhi704/32-Bit-ALU.git,2021-05-24 05:55:17+00:00,,2,shubhi704/32-Bit-ALU,370243153,Verilog,32-Bit-ALU,7,0,2021-06-28 11:22:36+00:00,[],None
533,https://github.com/kzwrime/sriscv.git,2021-05-24 05:00:05+00:00,,0,kzwrime/sriscv,370232356,Verilog,sriscv,33,0,2021-05-27 01:47:27+00:00,[],None
534,https://github.com/ritvikgupta199/Verilog-Simulations.git,2021-05-18 07:43:06+00:00,"Simulation of Gray-Code Counter, Ring Counter, and Sequence Generator FSM",1,ritvikgupta199/Verilog-Simulations,368443273,Verilog,Verilog-Simulations,1014,0,2021-09-13 10:56:48+00:00,[],None
535,https://github.com/Riflecake1699/Equipo-5-aruqitectura.git,2021-05-22 18:30:52+00:00,Proyecto del equipo 5,0,Riflecake1699/Equipo-5-aruqitectura,369880358,Verilog,Equipo-5-aruqitectura,5,0,2021-08-30 22:53:26+00:00,[],None
536,https://github.com/sudhamshu091/labsland.git,2021-06-05 16:29:54+00:00,,0,sudhamshu091/labsland,374162199,Verilog,labsland,495,0,2023-11-25 17:45:58+00:00,[],None
537,https://github.com/dhanu200118/floating_point.git,2021-05-03 14:52:38+00:00,,0,dhanu200118/floating_point,363964791,Verilog,floating_point,7,0,2021-05-03 14:54:46+00:00,[],None
538,https://github.com/AhmedAlaa2024/Serial-peripheral-interface.git,2021-05-13 01:48:34+00:00,About The educational project for advanced logic design course,2,AhmedAlaa2024/Serial-peripheral-interface,366903452,Verilog,Serial-peripheral-interface,7505,0,2021-09-07 15:18:16+00:00,[],None
539,https://github.com/jason1234309/psychic-couscous.git,2021-05-13 02:26:34+00:00,This Repository is being created to test the limitaitons of and differences between git clone and git fork,0,jason1234309/psychic-couscous,366911116,Verilog,psychic-couscous,144178,0,2021-07-29 22:54:46+00:00,[],None
540,https://github.com/hrutik016/Verilog-SystemVerilog.git,2021-05-11 17:12:06+00:00,This Repo contains some of my Verilog & SystemVerilog Programs.,0,hrutik016/Verilog-SystemVerilog,366459207,Verilog,Verilog-SystemVerilog,711,0,2021-08-05 19:44:41+00:00,"['verilog', 'system-verilog']",None
541,https://github.com/Sanya-123/Lib_myFFT.git,2021-05-10 07:43:56+00:00,FPGA FFT recursive_on_FPGA,0,Sanya-123/Lib_myFFT,365959360,Verilog,Lib_myFFT,47,0,2021-05-10 07:44:44+00:00,[],None
542,https://github.com/kedlab/publoc.git,2021-05-10 09:04:22+00:00,,0,kedlab/publoc,365981019,Verilog,publoc,3,0,2021-05-10 11:20:57+00:00,[],None
543,https://github.com/areyes309/fpgaproject.git,2021-05-17 00:51:55+00:00,VGA Controller in Verilog,0,areyes309/fpgaproject,368016645,Verilog,fpgaproject,827,0,2021-05-17 00:58:04+00:00,[],None
544,https://github.com/talzhao/Accelerator.git,2021-05-18 03:14:28+00:00,,0,talzhao/Accelerator,368387004,Verilog,Accelerator,316,0,2021-05-18 08:45:17+00:00,[],None
545,https://github.com/elifnebioglu/Digital-Design-Laboratory.git,2021-05-31 12:35:30+00:00,,0,elifnebioglu/Digital-Design-Laboratory,372500994,Verilog,Digital-Design-Laboratory,15,0,2021-05-31 12:43:00+00:00,[],None
546,https://github.com/pwang7/spinal-net.git,2021-05-30 14:28:34+00:00,,0,pwang7/spinal-net,372236001,Verilog,spinal-net,85,0,2021-09-20 17:44:23+00:00,[],https://api.github.com/licenses/lgpl-2.1
547,https://github.com/valmyr/verilog_HDL.git,2021-06-05 20:21:18+00:00,,0,valmyr/verilog_HDL,374205322,Verilog,verilog_HDL,18381,0,2022-05-16 20:40:47+00:00,[],None
548,https://github.com/alxelr2014/dsd_project.git,2021-06-05 14:28:59+00:00,,0,alxelr2014/dsd_project,374134858,Verilog,dsd_project,44466,0,2021-07-14 19:18:44+00:00,[],None
549,https://github.com/umutsuluhan/Simple-CPU-Design.git,2021-06-04 22:20:39+00:00,,0,umutsuluhan/Simple-CPU-Design,373971357,Verilog,Simple-CPU-Design,18,0,2021-07-23 08:36:10+00:00,[],https://api.github.com/licenses/gpl-3.0
550,https://github.com/Creampanda/verilog_labs.git,2021-05-07 13:45:28+00:00,,0,Creampanda/verilog_labs,365247388,Verilog,verilog_labs,22,0,2021-06-03 14:38:04+00:00,[],None
551,https://github.com/CWHer/Arch_labs.git,2021-05-05 08:49:40+00:00,,0,CWHer/Arch_labs,364515072,Verilog,Arch_labs,10766,0,2021-08-11 12:59:32+00:00,[],None
552,https://github.com/lelerer/EE2026FinalProject_AY20-21_FPGA.git,2021-05-08 12:50:10+00:00,,0,lelerer/EE2026FinalProject_AY20-21_FPGA,365513218,Verilog,EE2026FinalProject_AY20-21_FPGA,19285,0,2023-03-13 11:09:04+00:00,[],None
553,https://github.com/sebaspalacino/ProyectoMicroelectronica_I_2021.git,2021-05-30 01:55:56+00:00,,0,sebaspalacino/ProyectoMicroelectronica_I_2021,372103298,Verilog,ProyectoMicroelectronica_I_2021,1686,0,2021-07-29 01:17:24+00:00,[],None
554,https://github.com/LordRafa/BusBlasterV4_Template.git,2021-05-30 00:43:16+00:00, BusBlasterV4 ISE Template ,0,LordRafa/BusBlasterV4_Template,372095004,Verilog,BusBlasterV4_Template,17,0,2021-05-30 03:14:50+00:00,[],https://api.github.com/licenses/gpl-3.0
555,https://github.com/skandaprasad/Vedic-Architectures.git,2021-06-03 03:27:00+00:00,A collection of Verilog HDL programs of various Vedic Adders & Multipliers.,0,skandaprasad/Vedic-Architectures,373369327,Verilog,Vedic-Architectures,3,0,2021-06-03 03:41:42+00:00,[],None
556,https://github.com/ashkan-khd/verilog-cpu.git,2021-06-01 17:06:06+00:00,,0,ashkan-khd/verilog-cpu,372905606,Verilog,verilog-cpu,7,0,2021-06-01 20:25:45+00:00,[],None
557,https://github.com/MirasCarlo934/CoE113.git,2021-05-28 16:57:26+00:00,VHDL files for CoE 113: Advanced Computer Organization,0,MirasCarlo934/CoE113,371766465,Verilog,CoE113,33236,0,2021-06-22 09:30:31+00:00,[],None
558,https://github.com/SametSisartenep/fpgatoys.git,2021-06-05 12:05:24+00:00,FPGA development projects,0,SametSisartenep/fpgatoys,374103943,Verilog,fpgatoys,8096,0,2021-06-05 12:05:51+00:00,[],None
559,https://github.com/kovagoz/fpga-vga.git,2021-05-15 11:08:49+00:00,,0,kovagoz/fpga-vga,367610055,Verilog,fpga-vga,9,0,2021-12-31 09:28:49+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
560,https://github.com/charchit99/Processor-Architecture-Design-implementation-based-on-the-Y-86-ISA.git,2021-05-14 16:49:11+00:00,Implemented a full-fledged processor architecture implementation with 5 stage pipeline along with a sequential model in Verilog.,0,charchit99/Processor-Architecture-Design-implementation-based-on-the-Y-86-ISA,367425678,Verilog,Processor-Architecture-Design-implementation-based-on-the-Y-86-ISA,856,0,2021-08-29 21:08:08+00:00,[],None
561,https://github.com/ChrisDLC-V/Tutorial-V.git,2021-05-14 15:15:26+00:00,//NA,0,ChrisDLC-V/Tutorial-V,367401096,Verilog,Tutorial-V,2,0,2021-06-19 16:51:11+00:00,[],None
562,https://github.com/raps500/Classic.git,2021-05-15 05:17:24+00:00,,0,raps500/Classic,367545851,Verilog,Classic,468,0,2021-06-03 07:14:37+00:00,[],https://api.github.com/licenses/mit
563,https://github.com/lrojasz/ProyectoMicroelectronica.git,2021-05-27 16:28:13+00:00,Repositorio de git para el proyecto de microelectrónica.,1,lrojasz/ProyectoMicroelectronica,371437864,Verilog,ProyectoMicroelectronica,2905,0,2021-07-26 03:21:09+00:00,[],None
564,https://github.com/slashs71/usd.git,2021-05-27 14:34:28+00:00,us filter,0,slashs71/usd,371404233,Verilog,usd,55,0,2021-05-31 11:17:22+00:00,[],None
565,https://github.com/yapatta/vlsi.git,2021-05-21 17:00:30+00:00,verilogを書く(VLSI設計演習),0,yapatta/vlsi,369601822,Verilog,vlsi,22,0,2021-06-03 09:12:41+00:00,[],None
566,https://github.com/EmilsVeveris/Concolution_filter_VHDL.git,2021-05-21 07:19:54+00:00,,0,EmilsVeveris/Concolution_filter_VHDL,369448729,Verilog,Concolution_filter_VHDL,233017,0,2022-02-10 16:15:20+00:00,[],None
567,https://github.com/Shikhar-Soni/FPGA.git,2021-05-22 13:58:49+00:00,,0,Shikhar-Soni/FPGA,369821724,Verilog,FPGA,8,0,2021-12-09 23:52:45+00:00,[],None
568,https://github.com/brsf11/BuzzerMusicSoC.git,2021-05-19 09:55:22+00:00,A Cortex-M0 based SoC,0,brsf11/BuzzerMusicSoC,368821430,Verilog,BuzzerMusicSoC,60,0,2021-06-02 12:19:21+00:00,[],https://api.github.com/licenses/gpl-3.0
569,https://github.com/suvm1998/RoundRobinArbiterPipeline.git,2021-05-24 10:06:50+00:00,,0,suvm1998/RoundRobinArbiterPipeline,370307863,Verilog,RoundRobinArbiterPipeline,94,0,2021-05-24 14:55:10+00:00,[],None
570,https://github.com/amundgr/square_generator.git,2021-05-13 23:32:04+00:00,Verilog implementation of a square wave generator,0,amundgr/square_generator,367198890,Verilog,square_generator,4,0,2021-05-13 23:46:52+00:00,[],None
571,https://github.com/jontrossbach/naive-ntt-accelerator.git,2021-05-14 03:48:39+00:00,,0,jontrossbach/naive-ntt-accelerator,367242178,Verilog,naive-ntt-accelerator,86,0,2021-05-14 03:54:38+00:00,[],https://api.github.com/licenses/gpl-3.0
572,https://github.com/hyu-nani/Verilog_watch.git,2021-05-26 06:02:52+00:00,베릴로그 팀 ,0,hyu-nani/Verilog_watch,370923520,Verilog,Verilog_watch,20718,0,2021-05-27 17:31:44+00:00,[],None
573,https://github.com/Bell2U/elec2602_project.git,2021-05-22 09:49:29+00:00,A simple processor written in Verilog,0,Bell2U/elec2602_project,369771484,Verilog,elec2602_project,2197,0,2023-05-16 11:40:14+00:00,[],None
574,https://github.com/Rishabh-Baranwal45/SPI-Module.git,2021-05-22 18:41:43+00:00,"This is SPI Master Module. It has 4 interface signals as MOSI, MISO, SPI_clock, chip_select.",0,Rishabh-Baranwal45/SPI-Module,369882255,Verilog,SPI-Module,2,0,2021-05-22 19:17:02+00:00,[],None
575,https://github.com/jbomi/DigitalSystemDesign.git,2021-05-23 07:36:31+00:00,2020-2,0,jbomi/DigitalSystemDesign,369989884,Verilog,DigitalSystemDesign,49,0,2021-05-23 13:02:57+00:00,[],None
576,https://github.com/kemalpoyraz/fpga-cpu.git,2021-05-29 07:27:18+00:00,A Simple CPU Design,0,kemalpoyraz/fpga-cpu,371908624,Verilog,fpga-cpu,9,0,2021-05-29 07:34:35+00:00,[],None
577,https://github.com/houchuanhao/project_1.git,2021-05-29 07:17:28+00:00,VLSI,0,houchuanhao/project_1,371906754,Verilog,project_1,1660,0,2021-06-20 14:22:00+00:00,[],None
578,https://github.com/Khallil973/Full_Adder-verilog.git,2021-05-10 18:07:05+00:00,,0,Khallil973/Full_Adder-verilog,366134400,Verilog,Full_Adder-verilog,308,0,2023-12-03 06:04:33+00:00,[],None
579,https://github.com/Zacharyat19/VGA-Driver.git,2021-05-18 00:11:15+00:00,A collection of SystemVerilog code for ECE 271,1,Zacharyat19/VGA-Driver,368353502,Verilog,VGA-Driver,6220,0,2023-12-03 18:12:38+00:00,[],None
580,https://github.com/andersonlima7/Maquina_de_vendas.git,2021-05-18 17:26:20+00:00,Problema 3 da Disciplina MI - Circuitos Digitais. Problema baseado em máquina de estados.,0,andersonlima7/Maquina_de_vendas,368613795,Verilog,Maquina_de_vendas,1804,0,2023-12-09 17:55:31+00:00,[],None
581,https://github.com/matthew-alexander-love/Newton_Raphson.git,2021-05-11 04:30:26+00:00,Personal Project using Newton-Raphsons method to solve an over-determined multivariate system using Verilog.,0,matthew-alexander-love/Newton_Raphson,366255062,Verilog,Newton_Raphson,22,0,2024-01-04 19:58:27+00:00,[],None
582,https://github.com/tiffinyk/My_Sobel_Based_FPGA.git,2021-05-16 00:10:59+00:00,,0,tiffinyk/My_Sobel_Based_FPGA,367753017,,My_Sobel_Based_FPGA,1682,0,2023-11-12 13:56:35+00:00,[],None
583,https://github.com/ckyriakos/HW-Design.git,2021-05-03 09:02:19+00:00,Exercises and solution for the Computer Organization and Design course of UTH(2019-2020),0,ckyriakos/HW-Design,363872655,Verilog,HW-Design,2172,0,2022-02-25 10:37:13+00:00,"['assembly', 'verilog', 'mips', '8086', 'virtual-memory']",None
584,https://github.com/moxeed/MIPSCPU.git,2021-05-05 15:41:50+00:00,,0,moxeed/MIPSCPU,364627100,Verilog,MIPSCPU,201,0,2021-05-20 08:58:18+00:00,[],None
585,https://github.com/aktastunahan/Single-Cycle-ARM-Based-CPU.git,2021-05-05 09:47:42+00:00,,0,aktastunahan/Single-Cycle-ARM-Based-CPU,364529558,Verilog,Single-Cycle-ARM-Based-CPU,2039,0,2021-05-06 21:00:31+00:00,[],None
586,https://github.com/YuichanNoKareshi/junior-2nd-semester-DigitalSystemDesign.git,2021-05-07 05:33:43+00:00,Digital System(Component) Design in 2nd semester of junior year,0,YuichanNoKareshi/junior-2nd-semester-DigitalSystemDesign,365124718,Verilog,junior-2nd-semester-DigitalSystemDesign,161401,0,2021-07-01 08:37:02+00:00,[],None
587,https://github.com/Udi-FPGA/NiosSoCCourse.git,2021-05-07 12:34:52+00:00,,1,Udi-FPGA/NiosSoCCourse,365227957,Verilog,NiosSoCCourse,31,0,2023-04-26 18:08:57+00:00,[],None
588,https://github.com/zhzhqian/riscv.git,2021-05-10 06:01:09+00:00,,0,zhzhqian/riscv,365934195,Verilog,riscv,59,0,2021-06-06 13:19:33+00:00,[],None
589,https://github.com/karentp/Automatic-EstructuralSynthesis-Yosys.git,2021-05-12 04:17:27+00:00,"Estructural Synthesis using Yosys for a Flip flop with memory, based on the conductual model.",0,karentp/Automatic-EstructuralSynthesis-Yosys,366589973,Verilog,Automatic-EstructuralSynthesis-Yosys,19,0,2021-05-15 04:49:34+00:00,[],None
590,https://github.com/Performance-Embedded/uhd.git,2021-05-14 15:02:39+00:00,,0,Performance-Embedded/uhd,367397465,Verilog,uhd,119340,0,2021-05-14 15:14:41+00:00,[],
591,https://github.com/thejefflarson/simple-pipeline.git,2021-05-11 03:02:10+00:00,Playing around with a simple pipeline in verilog (WIP),0,thejefflarson/simple-pipeline,366239233,Verilog,simple-pipeline,16,0,2021-05-15 20:52:17+00:00,[],https://api.github.com/licenses/gpl-3.0
592,https://github.com/NAVNEET2399/TWO-WAY-TRAFFIC-LIGHT-CONTROLLER.git,2021-05-15 10:01:44+00:00,This repository contains the Verilog code for two-way traffic controller.,0,NAVNEET2399/TWO-WAY-TRAFFIC-LIGHT-CONTROLLER,367596953,Verilog,TWO-WAY-TRAFFIC-LIGHT-CONTROLLER,3,0,2021-07-21 17:20:09+00:00,[],None
593,https://github.com/lebronjames-cpu/lebronjames-cpu.git,2021-05-13 11:09:28+00:00,Config files for my GitHub profile.,0,lebronjames-cpu/lebronjames-cpu,367023121,Verilog,lebronjames-cpu,4,0,2021-05-13 11:32:26+00:00,"['config', 'github-config']",None
594,https://github.com/bhatharshabhat/ALU_RAM_Interfacing.git,2021-05-14 12:20:36+00:00,,0,bhatharshabhat/ALU_RAM_Interfacing,367353665,Verilog,ALU_RAM_Interfacing,62,0,2021-06-09 06:17:47+00:00,[],None
595,https://github.com/davdleet/verilog_applications.git,2021-05-15 04:11:23+00:00,simple programs using verilog,0,davdleet/verilog_applications,367536656,Verilog,verilog_applications,3,0,2021-05-15 04:17:06+00:00,[],None
596,https://github.com/karentp/Simple-Conductual-Synthesis-Verilog.git,2021-05-12 03:59:34+00:00,Conductual synthesis for a basic flip flop d with memory that uses a multiplexor 2x1. Both modules are described in a conductual way using always blocks.,0,karentp/Simple-Conductual-Synthesis-Verilog,366586903,Verilog,Simple-Conductual-Synthesis-Verilog,5,0,2021-05-12 04:06:56+00:00,[],None
597,https://github.com/karentp/Simple-ManualEstructuralSynthesis-Verilog.git,2021-05-12 04:09:44+00:00,"Estructural Synthesis made manually, creating logic gates with delay times and instanciating them in the main module. Flip flop  with memory, designed with two 2bit-Muxes 2x1 and two 1bit- Flip Flp D, which are designed with logic gates AND, NOT, OR.",0,karentp/Simple-ManualEstructuralSynthesis-Verilog,366588663,Verilog,Simple-ManualEstructuralSynthesis-Verilog,8,0,2021-05-12 04:15:02+00:00,[],None
598,https://github.com/ELINGAP-7545/labj1soc_display.git,2021-05-19 02:14:32+00:00,,0,ELINGAP-7545/labj1soc_display,368719357,Verilog,labj1soc_display,109,0,2023-10-26 23:20:43+00:00,[],None
599,https://github.com/opiol/phpix.git,2021-05-19 04:26:25+00:00,phpix scale demo for RedPitaya,0,opiol/phpix,368743370,Verilog,phpix,65816,0,2021-05-19 04:45:53+00:00,[],None
600,https://github.com/justinstaines/verilogledtest.git,2021-05-21 10:45:23+00:00,"Very simple Verilog VHDL program to test an LED connected to a switch on an FPGA. Pretty much a ""Hello World"" equivalent for first time FPGA programming. Using Xilinx Artix 7 FPGA and Vivado IDE",0,justinstaines/verilogledtest,369502701,Verilog,verilogledtest,1,0,2021-05-21 10:48:45+00:00,[],None
601,https://github.com/18520460/RGB-to-GRAY.git,2021-05-21 14:26:29+00:00,,0,18520460/RGB-to-GRAY,369560912,Verilog,RGB-to-GRAY,300516,0,2021-05-21 15:03:35+00:00,[],None
602,https://github.com/karentp/Physical-design-for-PCIe-interface.git,2021-05-20 07:28:41+00:00,Proyecto#1 para el curso Circuitos Digitales II de la Universidad de Costa Rica. ,0,karentp/Physical-design-for-PCIe-interface,369120082,Verilog,Physical-design-for-PCIe-interface,3400,0,2021-06-12 06:46:15+00:00,[],None
603,https://github.com/iavalen1/Verilog_Adders_Projects.git,2021-05-20 18:55:37+00:00,,0,iavalen1/Verilog_Adders_Projects,369309337,Verilog,Verilog_Adders_Projects,13,0,2021-05-20 18:59:43+00:00,[],None
604,https://github.com/oscherler/mister-scratch.git,2021-05-27 16:12:31+00:00,,0,oscherler/mister-scratch,371433577,Verilog,mister-scratch,20,0,2021-05-27 16:46:15+00:00,[],None
605,https://github.com/GokselOnal/VSCPU.git,2021-05-28 00:32:45+00:00,Design of Very Simple CPU that is used in CS 240-Computer Architecture course at Özyeğin University,0,GokselOnal/VSCPU,371537609,Verilog,VSCPU,8,0,2022-05-28 09:18:49+00:00,[],None
606,https://github.com/ShenTengTu/v-i18n.git,2021-06-06 13:23:45+00:00,Internationalization services for V Programming Language,0,ShenTengTu/v-i18n,374366393,Verilog,v-i18n,36,0,2021-06-15 10:47:22+00:00,"['vlang', 'v-module', 'v']",https://api.github.com/licenses/mit
607,https://github.com/brsf11/sprite-decompressor.git,2021-06-05 08:30:22+00:00,An inflate-like algorithm hardware decompressor,0,brsf11/sprite-decompressor,374061615,Verilog,sprite-decompressor,12,0,2023-03-13 10:05:54+00:00,[],https://api.github.com/licenses/zlib
608,https://github.com/GeoKrom/UoI-Testing-and-Reilability-of-Electronic-Systems-course.git,2021-06-01 12:19:10+00:00,Testing methodologies on circuits for reliability,0,GeoKrom/UoI-Testing-and-Reilability-of-Electronic-Systems-course,372819357,Verilog,UoI-Testing-and-Reilability-of-Electronic-Systems-course,11250,0,2022-04-30 20:06:16+00:00,"['verilog', 'reliability', 'testing', 'integrated-circuits', 'digital-electronics', 'bist', 'jtag']",None
609,https://github.com/OnlyAoiKunie/PIC16f1826.git,2021-06-02 03:14:16+00:00,Using verilog implement a MCU(PIC16f1826),0,OnlyAoiKunie/PIC16f1826,373025525,Verilog,PIC16f1826,3,0,2021-06-02 03:36:29+00:00,[],None
610,https://github.com/vtkhatri/i2c.git,2021-05-30 10:06:03+00:00,I2C implementation in verilog,0,vtkhatri/i2c,372180447,Verilog,i2c,396,0,2021-09-08 18:14:37+00:00,[],None
611,https://github.com/erikvanzijst/wrapped_pong.git,2021-05-25 17:19:48+00:00,An ASIC running Pong.,1,erikvanzijst/wrapped_pong,370773457,Verilog,wrapped_pong,20469,0,2021-06-16 09:06:57+00:00,"['asic', 'caravel', 'silicon', 'ic', 'fpga', 'electronics', 'verilog']",https://api.github.com/licenses/apache-2.0
612,https://github.com/stevenjmaev/FPGA-Verilog.git,2021-05-27 18:04:01+00:00,These are some of my favorite projects that I worked on while taking a course in Digital Logic Design using Verilog at Cal Poly Pomona (ECE 3300L),0,stevenjmaev/FPGA-Verilog,371462082,Verilog,FPGA-Verilog,34879,0,2021-06-05 23:36:47+00:00,[],None
613,https://github.com/PrashantMata/Pico_compressed_cache_clock_variation.git,2021-06-03 09:48:10+00:00,,0,PrashantMata/Pico_compressed_cache_clock_variation,373457560,Verilog,Pico_compressed_cache_clock_variation,33,0,2021-06-03 10:06:26+00:00,[],None
614,https://github.com/lukebenn/trafficLightController.git,2021-06-04 02:12:18+00:00,A Traffic Light Controller based around a FSM built on an Altera DEII FPGA development board.,0,lukebenn/trafficLightController,373695043,Verilog,trafficLightController,7,0,2021-06-04 02:16:21+00:00,[],None
615,https://github.com/daniel-kozlovsky/EECS-3201.git,2021-06-04 13:59:00+00:00,"Course work for 3201, Digital Logic Design",0,daniel-kozlovsky/EECS-3201,373859167,Verilog,EECS-3201,7,0,2021-06-04 14:05:32+00:00,[],None
616,https://github.com/sriramsaranp/Verilog-coding.git,2021-05-18 10:39:59+00:00,Hardware modeling using verilog,0,sriramsaranp/Verilog-coding,368491871,Verilog,Verilog-coding,47,0,2021-08-24 02:00:04+00:00,[],None
617,https://github.com/UrbiGhosh/CS220A-Computer-Organization.git,2021-05-20 08:11:47+00:00,Design Assignments,0,UrbiGhosh/CS220A-Computer-Organization,369131731,Verilog,CS220A-Computer-Organization,534,0,2021-05-25 06:17:42+00:00,[],None
618,https://github.com/18520597-DiemNgoc/FIFO.git,2021-05-20 08:42:58+00:00,,0,18520597-DiemNgoc/FIFO,369140324,Verilog,FIFO,68,0,2021-05-20 08:49:46+00:00,[],None
619,https://github.com/gcgeng/Pipeline_CPU.git,2021-05-24 07:28:13+00:00,,0,gcgeng/Pipeline_CPU,370265317,Verilog,Pipeline_CPU,8,0,2023-01-28 05:06:30+00:00,[],None
620,https://github.com/jmapjp/CET4811-Project.git,2021-05-23 23:03:49+00:00,,0,jmapjp/CET4811-Project,370174452,Verilog,CET4811-Project,7,0,2021-05-23 23:05:27+00:00,[],https://api.github.com/licenses/apache-2.0
621,https://github.com/FoxCode-JF/FPGA_odd_even_merge_sort.git,2021-06-05 19:25:31+00:00,Implementation of parallel Batcher's odd-even merge sort,0,FoxCode-JF/FPGA_odd_even_merge_sort,374196144,Verilog,FPGA_odd_even_merge_sort,4,0,2021-06-09 18:22:10+00:00,[],None
622,https://github.com/CodingChimpanzee/Digital_Design_Enigma.git,2021-06-02 06:32:19+00:00,"Cooperation with 김선규, 이재헌",0,CodingChimpanzee/Digital_Design_Enigma,373064040,Verilog,Digital_Design_Enigma,4866,0,2022-08-19 07:49:54+00:00,[],None
623,https://github.com/justarter/EI332-Computer-Organization.git,2021-05-26 07:24:34+00:00,,0,justarter/EI332-Computer-Organization,370943929,Verilog,EI332-Computer-Organization,33167,0,2022-01-20 15:38:07+00:00,[],None
624,https://github.com/bhoomi2611/summer-project-2021.git,2021-05-26 16:14:13+00:00,Crypto FGPA basically with verilog ,2,bhoomi2611/summer-project-2021,371096712,Verilog,summer-project-2021,25,0,2022-01-31 03:30:17+00:00,[],None
625,https://github.com/rpls/wrapped_chacha_uart_accel.git,2021-05-31 23:41:33+00:00,Chacha20 Accelerator with UART interface,0,rpls/wrapped_chacha_uart_accel,372652730,Verilog,wrapped_chacha_uart_accel,8356,0,2021-06-02 07:17:11+00:00,[],https://api.github.com/licenses/apache-2.0
626,https://github.com/Ahmed-Hany-F/Serial-Peripheral-Interface.git,2021-05-26 19:15:31+00:00,,0,Ahmed-Hany-F/Serial-Peripheral-Interface,371144324,Verilog,Serial-Peripheral-Interface,298,0,2021-06-01 13:08:57+00:00,[],None
627,https://github.com/anonymousRepo10/ACW.git,2021-05-28 21:27:35+00:00,,0,anonymousRepo10/ACW,371821950,Verilog,ACW,11,0,2021-05-28 22:27:30+00:00,[],None
628,https://github.com/Soham-Das-2021/Tomasulo-Machine.git,2021-05-28 16:11:30+00:00,,1,Soham-Das-2021/Tomasulo-Machine,371755340,Verilog,Tomasulo-Machine,9,0,2021-05-28 16:21:01+00:00,[],None
629,https://github.com/my1795/verySimpleCPU-CS240.git,2021-05-20 17:44:26+00:00,verySimpleCPU is a simple cpu written on verilog ,0,my1795/verySimpleCPU-CS240,369291763,Verilog,verySimpleCPU-CS240,6,0,2021-05-20 17:51:32+00:00,[],https://api.github.com/licenses/mit
630,https://github.com/18520460/Exponential-Function.git,2021-05-21 13:58:05+00:00,,0,18520460/Exponential-Function,369552685,Verilog,Exponential-Function,15784,0,2021-10-19 17:12:30+00:00,[],None
631,https://github.com/gouyepeng/Myproject.git,2021-05-31 03:28:50+00:00,Repo,0,gouyepeng/Myproject,372371713,Verilog,Myproject,3,0,2021-05-31 06:31:40+00:00,[],None
632,https://github.com/Kreator69/Verilog.git,2021-05-31 09:18:59+00:00,,0,Kreator69/Verilog,372449461,Verilog,Verilog,511,0,2021-05-31 09:21:14+00:00,[],None
633,https://github.com/MasoudHeidary/FPGA-Verilog-Simple-RAM.git,2021-06-02 18:28:59+00:00,Advance Logic Circuit Course Exercises,0,MasoudHeidary/FPGA-Verilog-Simple-RAM,373266765,Verilog,FPGA-Verilog-Simple-RAM,3,0,2022-02-27 10:58:50+00:00,"['verilog', 'ram', 'fpga']",https://api.github.com/licenses/mit
634,https://github.com/LungHuiWu/Cache-in-verilog.git,2021-05-19 13:46:11+00:00,,0,LungHuiWu/Cache-in-verilog,368884402,Verilog,Cache-in-verilog,2755,0,2021-05-19 13:48:39+00:00,[],None
635,https://github.com/goeluddhav30/Synchronous-Circuit-Simulations.git,2021-05-26 17:53:25+00:00,ELP201 Verilog assignments,0,goeluddhav30/Synchronous-Circuit-Simulations,371124119,Verilog,Synchronous-Circuit-Simulations,5312,0,2021-05-28 10:48:35+00:00,[],None
636,https://github.com/pep0/picorv32_icebraker_playground.git,2021-05-26 18:25:25+00:00,picorv32 softcore on icebraker board,0,pep0/picorv32_icebraker_playground,371132201,Verilog,picorv32_icebraker_playground,73,0,2021-09-16 14:35:13+00:00,[],None
637,https://github.com/anjaneshr20/hello-world.git,2021-05-26 17:41:09+00:00,,1,anjaneshr20/hello-world,371120925,Verilog,hello-world,2,0,2021-05-31 06:55:03+00:00,[],None
638,https://github.com/siquanwa/8-Bit-Processor.git,2021-05-25 17:01:20+00:00,8-bit Processor design with Verilog,0,siquanwa/8-Bit-Processor,370768384,Verilog,8-Bit-Processor,340,0,2021-06-01 18:11:26+00:00,[],None
639,https://github.com/zyp-git01/VLSI.git,2021-05-26 06:42:52+00:00,The SJTU's VLSI project for yi_peng,0,zyp-git01/VLSI,370932895,Verilog,VLSI,2165,0,2021-06-12 09:50:14+00:00,[],None
640,https://github.com/sowmya-gunji/2.Distributed-Arithmetic-for-large-sizes-.git,2021-06-06 13:21:14+00:00,,0,sowmya-gunji/2.Distributed-Arithmetic-for-large-sizes-,374365840,Verilog,2.Distributed-Arithmetic-for-large-sizes-,1,0,2021-06-06 13:27:18+00:00,[],None
641,https://github.com/cookienc/verilog.git,2021-05-05 11:19:12+00:00,,0,cookienc/verilog,364551662,Verilog,verilog,113,0,2021-06-06 00:57:45+00:00,[],None
642,https://github.com/parsa-hn/CAL-ARM.git,2021-05-03 12:24:37+00:00,Computer architecture lab ARM processor with Verilog. ,0,parsa-hn/CAL-ARM,363921186,Verilog,CAL-ARM,335,0,2022-10-05 13:33:55+00:00,"['cache', 'pipeline', 'sram', 'verilog']",None
643,https://github.com/navneet-kour/2_level_cache_with_prefetcher.git,2021-05-03 14:15:03+00:00,Implemented a 2 level cache along with two different types of prefetchers (Nextline prefetcher \& Stride prefetcher) on top of a pipelined in-order processor,0,navneet-kour/2_level_cache_with_prefetcher,363952872,Verilog,2_level_cache_with_prefetcher,3,0,2021-05-03 14:18:47+00:00,[],None
644,https://github.com/FulvioPirazzi/Logic-clock.git,2021-05-05 21:30:43+00:00,a simple led  time keeper,0,FulvioPirazzi/Logic-clock,364710625,Verilog,Logic-clock,466,0,2021-05-05 21:45:08+00:00,[],None
645,https://github.com/RajBasnet/Ten_Bit_CPU_with_Pipeline.git,2021-05-12 03:15:52+00:00,,0,RajBasnet/Ten_Bit_CPU_with_Pipeline,366578708,Verilog,Ten_Bit_CPU_with_Pipeline,1193,0,2021-05-12 03:31:51+00:00,[],None
646,https://github.com/Hoanhtai123/Traffic-Light-HDL.git,2021-05-09 19:27:24+00:00,,0,Hoanhtai123/Traffic-Light-HDL,365831851,Verilog,Traffic-Light-HDL,2,0,2021-05-17 08:43:54+00:00,[],None
647,https://github.com/BenAndrew310/CO-2021.git,2021-05-13 09:11:29+00:00,,0,BenAndrew310/CO-2021,366994783,Verilog,CO-2021,982,0,2021-06-29 18:48:12+00:00,[],None
648,https://github.com/williamtien23/HDL-Carry_Ripple_Adder.git,2021-05-03 23:08:46+00:00,,0,williamtien23/HDL-Carry_Ripple_Adder,364084362,Verilog,HDL-Carry_Ripple_Adder,3,0,2021-05-03 23:08:52+00:00,[],None
649,https://github.com/Pockylee/Verilog_Project.git,2021-05-17 02:42:30+00:00,,0,Pockylee/Verilog_Project,368035214,Verilog,Verilog_Project,608,0,2021-05-17 03:02:55+00:00,[],None
650,https://github.com/Featherweight-IP/fw-local-intc.git,2021-05-16 16:18:49+00:00,Implements a simple local-interrupt controller for up to 30 external and 1 software source,0,Featherweight-IP/fw-local-intc,367930696,Verilog,fw-local-intc,17,0,2021-11-23 00:54:09+00:00,[],https://api.github.com/licenses/apache-2.0
651,https://github.com/134ARG/piplined-processor-with-forward.git,2021-05-15 05:10:06+00:00,,0,134ARG/piplined-processor-with-forward,367544816,Verilog,piplined-processor-with-forward,1505,0,2021-05-16 10:35:04+00:00,[],None
652,https://github.com/olivia0524/Smart-Lock.git,2021-05-17 03:36:41+00:00,,0,olivia0524/Smart-Lock,368045093,Verilog,Smart-Lock,119,0,2021-05-17 03:43:04+00:00,[],None
653,https://github.com/IObundle/iob-ila.git,2021-05-07 16:51:36+00:00,,2,IObundle/iob-ila,365298557,Verilog,iob-ila,1412,0,2023-06-27 18:18:06+00:00,[],https://api.github.com/licenses/mit
654,https://github.com/PrashantMata/processor_comparison.git,2021-06-05 13:50:03+00:00,,0,PrashantMata/processor_comparison,374125764,Verilog,processor_comparison,68,0,2021-06-05 13:51:05+00:00,[],None
655,https://github.com/Pablopabota/Verilog_projects.git,2021-05-06 02:35:40+00:00,,0,Pablopabota/Verilog_projects,364763199,Verilog,Verilog_projects,45353,0,2022-03-08 20:32:22+00:00,[],None
656,https://github.com/m4akshay1/alu.git,2021-05-07 06:55:44+00:00,,0,m4akshay1/alu,365142472,Verilog,alu,28,0,2021-05-07 22:45:00+00:00,[],None
657,https://github.com/athareMTU/UAM_bit_synch.git,2021-05-06 17:44:32+00:00,The Bit Synchronizer method of the Underwater Acoustic Modem project for senior design,0,athareMTU/UAM_bit_synch,364991639,Verilog,UAM_bit_synch,15,0,2021-05-06 17:45:44+00:00,[],None
658,https://github.com/kshitiz-arora/FPGA.git,2021-05-24 12:30:50+00:00,"FPGA for BCD adder, Universal Shift Register, and 3 to 8 decoder",0,kshitiz-arora/FPGA,370344949,Verilog,FPGA,16,0,2021-05-24 12:36:36+00:00,[],None
659,https://github.com/zerokfy/ramen_timer.git,2021-05-24 14:37:32+00:00,,0,zerokfy/ramen_timer,370383534,Verilog,ramen_timer,63,0,2021-10-19 15:06:18+00:00,[],None
660,https://github.com/thanhnguyen210299/CSULB-CECS-341-_-COMPUTER-ARCHITECTURE-ORGANIZATING.git,2021-05-30 02:47:22+00:00,Professor: Maryam Seyyedhosseini - Semester: Fall 2020,0,thanhnguyen210299/CSULB-CECS-341-_-COMPUTER-ARCHITECTURE-ORGANIZATING,372109493,Verilog,CSULB-CECS-341-_-COMPUTER-ARCHITECTURE-ORGANIZATING,5034,0,2021-05-30 02:58:33+00:00,[],None
661,https://github.com/PabloEP/Proyecto-Atom.git,2021-05-30 20:22:14+00:00,,0,PabloEP/Proyecto-Atom,372308188,Verilog,Proyecto-Atom,7,0,2021-05-30 21:29:00+00:00,[],None
662,https://github.com/y38y38/bitmask.git,2021-06-06 10:14:32+00:00,,0,y38y38/bitmask,374328034,Verilog,bitmask,1,0,2021-06-06 10:22:27+00:00,[],None
663,https://github.com/mario1D240/test5.git,2021-06-06 07:16:21+00:00,,0,mario1D240/test5,374293825,Verilog,test5,79651,0,2021-06-06 07:18:36+00:00,[],https://api.github.com/licenses/gpl-2.0
664,https://github.com/icykip/EE180_Lab3.git,2021-05-10 06:27:36+00:00,5 Stage Pipeline Mips Processor,0,icykip/EE180_Lab3,365940009,Verilog,EE180_Lab3,22,0,2021-05-12 06:39:39+00:00,[],None
665,https://github.com/williamtien23/HDL-Skip_Adder.git,2021-05-03 23:09:54+00:00,,0,williamtien23/HDL-Skip_Adder,364084534,Verilog,HDL-Skip_Adder,1,0,2021-05-03 23:15:39+00:00,[],None
666,https://github.com/ZiaulChoudhury/ComputeEngine.git,2021-05-08 15:13:29+00:00,,0,ZiaulChoudhury/ComputeEngine,365545070,Verilog,ComputeEngine,2235,0,2023-01-17 11:21:16+00:00,[],None
667,https://github.com/djacuinde/Custom-CPU-with-Verilog.git,2021-05-16 19:24:20+00:00,,0,djacuinde/Custom-CPU-with-Verilog,367967466,Verilog,Custom-CPU-with-Verilog,19,0,2021-05-16 19:31:44+00:00,[],None
668,https://github.com/juliosaracol/migortho.git,2021-05-17 13:34:21+00:00,,0,juliosaracol/migortho,368197657,Verilog,migortho,57530,0,2022-01-18 20:00:44+00:00,[],
669,https://github.com/shaliniros/Tomasulo-32-bit-processor.git,2021-05-15 11:36:31+00:00,,0,shaliniros/Tomasulo-32-bit-processor,367615531,Verilog,Tomasulo-32-bit-processor,177,0,2021-05-16 03:29:15+00:00,[],None
670,https://github.com/Rishabh-Baranwal45/Rishabh-Baranwal45.git,2021-05-16 19:08:56+00:00,Config files for my GitHub profile.,0,Rishabh-Baranwal45/Rishabh-Baranwal45,367964678,Verilog,Rishabh-Baranwal45,14,0,2021-05-22 19:41:50+00:00,"['config', 'github-config']",None
671,https://github.com/kovagoz/fpga-pong.git,2021-05-23 07:53:44+00:00,The classic Pong game implemented on FPGA,0,kovagoz/fpga-pong,369992890,Verilog,fpga-pong,24,0,2021-12-30 23:33:10+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
672,https://github.com/TimTam725/Music_game.git,2021-05-22 08:08:22+00:00,,0,TimTam725/Music_game,369752236,Verilog,Music_game,23,0,2021-05-22 08:39:58+00:00,[],None
673,https://github.com/pybfms/pybfms-trace-msg.git,2021-05-19 14:07:01+00:00,Allows short messages to be included in the trace log,0,pybfms/pybfms-trace-msg,368890702,Verilog,pybfms-trace-msg,9,0,2021-06-28 01:47:25+00:00,[],https://api.github.com/licenses/apache-2.0
674,https://github.com/willy5986/proyecto-digitales-2.git,2021-05-25 00:05:52+00:00,Proyecto grupal del curso Digitales 2,0,willy5986/proyecto-digitales-2,370515979,Verilog,proyecto-digitales-2,2279,0,2021-07-16 05:24:12+00:00,[],None
675,https://github.com/PiChampion/VerilogCPU.git,2021-05-24 18:17:11+00:00,,0,PiChampion/VerilogCPU,370445948,Verilog,VerilogCPU,7,0,2021-05-24 18:23:26+00:00,[],None
676,https://github.com/erikarn/verilog-projects.git,2021-05-26 01:03:39+00:00,Verilog dev hacks,0,erikarn/verilog-projects,370868001,Verilog,verilog-projects,30,0,2022-02-26 02:51:39+00:00,[],None
677,https://github.com/sjidea/EE303A.git,2021-05-28 04:19:59+00:00,,0,sjidea/EE303A,371577908,Verilog,EE303A,922,0,2022-06-14 08:20:54+00:00,[],None
678,https://github.com/Haoyu1004/simpleriscv.git,2021-05-27 07:57:59+00:00,,0,Haoyu1004/simpleriscv,371292483,Verilog,simpleriscv,385,0,2021-06-16 13:01:52+00:00,[],https://api.github.com/licenses/mit
679,https://github.com/brianworts/VerilogCacheImplementation.git,2021-05-27 18:04:47+00:00,,0,brianworts/VerilogCacheImplementation,371462293,Verilog,VerilogCacheImplementation,17004,0,2021-05-27 18:44:14+00:00,[],None
680,https://github.com/hsndmr15/RISCV_FBU.git,2021-05-27 22:00:40+00:00,RISC-V Tabanlı İşlemci Tasarımı,1,hsndmr15/RISCV_FBU,371514118,Verilog,RISCV_FBU,464,0,2021-05-27 22:17:43+00:00,[],None
681,https://github.com/nikaw525/data_sniffer.git,2021-05-26 17:10:48+00:00,,0,nikaw525/data_sniffer,371112788,Verilog,data_sniffer,2558,0,2021-06-09 11:22:30+00:00,[],None
682,https://github.com/pratyush48/Project_Edge_Detection.git,2021-05-28 12:58:55+00:00,IMPLEMENTING EDGE DETECTION ON FPGA USING SOBEL FILTER,0,pratyush48/Project_Edge_Detection,371701535,Verilog,Project_Edge_Detection,518,0,2021-05-28 13:15:57+00:00,[],None
683,https://github.com/timeo-schmidt/Mars-Rover-Vision-Processing.git,2021-05-28 09:40:22+00:00,,0,timeo-schmidt/Mars-Rover-Vision-Processing,371652361,Verilog,Mars-Rover-Vision-Processing,56,0,2021-06-04 06:02:52+00:00,[],None
684,https://github.com/nambhine1/Sequence-Detecter.git,2021-05-29 07:18:01+00:00,This state machine is 110 sequence detecter using Verilog ,0,nambhine1/Sequence-Detecter,371906840,Verilog,Sequence-Detecter,2,0,2021-05-29 07:19:27+00:00,[],None
685,https://github.com/sjkelly/verilog-cosine-gen.git,2021-05-07 01:36:41+00:00,,0,sjkelly/verilog-cosine-gen,365082736,Verilog,verilog-cosine-gen,1,0,2021-05-07 01:37:22+00:00,[],None
686,https://github.com/Dev4085/Single-Cycle-datapath.git,2021-05-10 09:24:46+00:00,,0,Dev4085/Single-Cycle-datapath,365986860,Verilog,Single-Cycle-datapath,3689,0,2022-04-15 05:04:38+00:00,[],None
687,https://github.com/tharaka-w/Verilog-HDL-to-Traffic-Light-System.git,2021-05-11 15:30:55+00:00,,0,tharaka-w/Verilog-HDL-to-Traffic-Light-System,366431410,Verilog,Verilog-HDL-to-Traffic-Light-System,7,0,2021-05-26 20:49:44+00:00,[],None
688,https://github.com/ANNAmiuz/MIPS_5-Stage_Pipeline_CPU.git,2021-05-12 01:44:44+00:00,Five-stage pipeline CPU implementation for MIPS in verilog. Full hazards solved.,0,ANNAmiuz/MIPS_5-Stage_Pipeline_CPU,366560917,Verilog,MIPS_5-Stage_Pipeline_CPU,425,0,2024-03-29 06:31:08+00:00,[],https://api.github.com/licenses/mit
689,https://github.com/alieken/Verilog.git,2021-05-20 08:09:52+00:00,Verilog dili ile tasarlanmış şoför alarm uyarı sistemi.,0,alieken/Verilog,369131200,Verilog,Verilog,18,0,2021-05-20 08:14:36+00:00,[],None
690,https://github.com/Alexies-he/My_Digitalworks.git,2021-05-21 12:42:54+00:00,"There are some parts of my projects when I am learning the VerilogHDL during my period time of postgraduate. Welcome anybody come and view, or discuss them with me(这是我在研究生阶段学习Verilog代码时的一些项目，欢迎大家就这些项目跟我交流讨论～)",0,Alexies-he/My_Digitalworks,369532001,Verilog,My_Digitalworks,1870,0,2021-07-28 11:38:36+00:00,[],None
691,https://github.com/nkaranam178/General-Purpose-CPU.git,2021-05-21 03:59:45+00:00,,0,nkaranam178/General-Purpose-CPU,369408339,Verilog,General-Purpose-CPU,47,0,2021-05-21 04:01:06+00:00,[],None
692,https://github.com/Firestarter97/datapath.git,2021-05-18 21:14:13+00:00,A 16-bit 5-stage pipelined datapath design,0,Firestarter97/datapath,368667885,Verilog,datapath,16,0,2021-05-21 02:34:23+00:00,[],None
693,https://github.com/Sam-0403/CA_Final_Project.git,2021-05-20 13:51:53+00:00,Nope~~XD,0,Sam-0403/CA_Final_Project,369224915,Verilog,CA_Final_Project,942,0,2021-06-13 05:02:46+00:00,[],None
694,https://github.com/PanAMD/SSPA_D12_E5_MIPS.git,2021-05-20 14:54:44+00:00,Simple MIPS implementation using verilog,0,PanAMD/SSPA_D12_E5_MIPS,369244626,Verilog,SSPA_D12_E5_MIPS,153,0,2021-06-23 04:01:13+00:00,[],None
695,https://github.com/AndreeaTrailescu/OcProject.git,2021-05-22 12:11:26+00:00,,0,AndreeaTrailescu/OcProject,369799174,Verilog,OcProject,596,0,2021-05-31 17:24:05+00:00,[],None
696,https://github.com/eb-thatsme/Adv-Processors_SingleCycleProcessorDesign.git,2021-05-21 23:36:14+00:00,"This Verilog project implements a single-cycle processor design based on the block diagram seen in 'blockDiagram.jpg'. The processor is able to execute load, store, R-type (addition, subtraction, division, multiplication, SLT, AND, OR), branch, and jump instructions. A sample of the ALU module is shown in the main branch of this repo, named 'ALU.v'. All project modules can be downloaded from the zip. This code also includes testbenches which were designed to test functionality for each module in the processor. For a full report on the funtionality of each module in the processor, please see 'Advanced_Processors_Final_Paper.docx'. This project was a collborative effort between myself and 3 classmates.",0,eb-thatsme/Adv-Processors_SingleCycleProcessorDesign,369676086,Verilog,Adv-Processors_SingleCycleProcessorDesign,12808,0,2021-05-23 15:24:20+00:00,[],None
697,https://github.com/archit16/FIFO.git,2021-05-21 22:42:53+00:00,Simple FIFO with depth always a power of 2.,0,archit16/FIFO,369669243,Verilog,FIFO,1,0,2021-05-21 22:43:46+00:00,[],None
698,https://github.com/kuantuna/CS240-project-cpu-2021.git,2021-05-22 17:31:01+00:00,,0,kuantuna/CS240-project-cpu-2021,369868815,Verilog,CS240-project-cpu-2021,16,0,2021-08-24 21:47:40+00:00,[],None
699,https://github.com/TimTam725/SCP.git,2021-05-22 08:33:12+00:00,,0,TimTam725/SCP,369757046,Verilog,SCP,10,0,2021-05-22 08:34:33+00:00,[],None
700,https://github.com/stefancocioran/CN1.git,2021-05-17 12:48:57+00:00,Calculatoare numerice I - UPB 2021,0,stefancocioran/CN1,368183339,Verilog,CN1,34,0,2021-06-13 11:49:47+00:00,[],None
701,https://github.com/gurusha01/EE1.git,2021-05-18 08:21:18+00:00,,0,gurusha01/EE1,368454107,Verilog,EE1,24,0,2021-05-18 08:26:18+00:00,[],None
702,https://github.com/Pragyajhala/Control-unit-design-for-mini-MIPS-using-verilog-HDL.git,2021-05-25 12:05:14+00:00,,0,Pragyajhala/Control-unit-design-for-mini-MIPS-using-verilog-HDL,370678703,Verilog,Control-unit-design-for-mini-MIPS-using-verilog-HDL,0,0,2021-05-25 12:11:49+00:00,[],None
703,https://github.com/natefrisch01/ece583_final.git,2021-05-11 20:22:12+00:00,,0,natefrisch01/ece583_final,366503802,Verilog,ece583_final,6156,0,2021-05-11 20:28:29+00:00,[],None
704,https://github.com/Nadeem0410khan/Traffic-signal-control.git,2021-05-12 04:37:40+00:00,,1,Nadeem0410khan/Traffic-signal-control,366593407,Verilog,Traffic-signal-control,5,0,2021-05-15 08:59:47+00:00,[],None
705,https://github.com/ttpaik/Computer_Organization.git,2021-05-11 09:10:20+00:00,,0,ttpaik/Computer_Organization,366321845,Verilog,Computer_Organization,43,0,2021-05-11 09:22:21+00:00,[],None
706,https://github.com/windowsair/Archive.git,2021-05-04 03:47:19+00:00,,0,windowsair/Archive,364131823,Verilog,Archive,241,0,2021-11-14 08:57:42+00:00,[],https://api.github.com/licenses/mit
707,https://github.com/huktonfonix/LWC_PE.git,2021-05-04 00:10:25+00:00,,1,huktonfonix/LWC_PE,364094479,Verilog,LWC_PE,31,0,2021-05-07 23:42:36+00:00,[],https://api.github.com/licenses/gpl-3.0
708,https://github.com/Yen-Lung-Huang/FPGA.git,2021-05-03 18:03:20+00:00,FPGA learning,0,Yen-Lung-Huang/FPGA,364017712,Verilog,FPGA,23707,0,2021-06-26 14:00:21+00:00,[],None
709,https://github.com/spirit-of-belong/learninggit.git,2021-05-13 08:37:24+00:00,,0,spirit-of-belong/learninggit,366986173,Verilog,learninggit,6,0,2021-05-20 03:23:15+00:00,[],None
710,https://github.com/Patavix/ALU.git,2021-05-12 14:02:19+00:00,,0,Patavix/ALU,366735766,Verilog,ALU,689,0,2021-05-12 14:06:14+00:00,[],None
711,https://github.com/tnguyen-tx/LEGv8_pipelined_CPU.git,2021-05-07 23:06:50+00:00,,0,tnguyen-tx/LEGv8_pipelined_CPU,365372585,Verilog,LEGv8_pipelined_CPU,2630,0,2022-01-03 04:32:46+00:00,[],None
712,https://github.com/Louis-Feng/CZ3001.git,2021-05-08 07:25:09+00:00,My CZ3001 lab implementations (Advanced Computer Architecture),0,Louis-Feng/CZ3001,365448300,Verilog,CZ3001,37,0,2021-05-08 07:51:08+00:00,[],None
713,https://github.com/dishant2801/128bit-AES-encryption-using-Verilog.git,2021-05-10 07:54:31+00:00,Config files for my GitHub profile.,0,dishant2801/128bit-AES-encryption-using-Verilog,365962192,Verilog,128bit-AES-encryption-using-Verilog,6,0,2022-05-21 08:02:43+00:00,"['config', 'github-config']",None
714,https://github.com/s3722763/ATmega32AEmulator.git,2021-05-11 06:38:40+00:00,,0,s3722763/ATmega32AEmulator,366281170,Verilog,ATmega32AEmulator,842,0,2021-05-11 06:39:37+00:00,[],None
715,https://github.com/chenguokai/verelation.git,2021-05-11 16:50:34+00:00,,0,chenguokai/verelation,366453549,Verilog,verelation,29,0,2023-03-12 14:51:00+00:00,[],https://api.github.com/licenses/bsd-3-clause
716,https://github.com/RajBasnet/Cache.git,2021-05-12 03:12:37+00:00,,0,RajBasnet/Cache,366578062,Verilog,Cache,718,0,2021-05-12 03:14:07+00:00,[],None
717,https://github.com/sidowic/CS203-project.git,2021-05-14 07:45:23+00:00,Basic ALU unit in verilog,0,sidowic/CS203-project,367288181,Verilog,CS203-project,10,0,2021-05-14 07:48:23+00:00,[],None
718,https://github.com/venkatkumar1810/RISC_V_Pipelined_CPU.git,2021-05-06 08:16:56+00:00,,0,venkatkumar1810/RISC_V_Pipelined_CPU,364835353,Verilog,RISC_V_Pipelined_CPU,10677,0,2021-05-06 08:34:33+00:00,[],None
719,https://github.com/searsm8/verilog_modules.git,2021-05-06 19:08:25+00:00,A collection of useful verilog modules,0,searsm8/verilog_modules,365011749,Verilog,verilog_modules,7283,0,2022-04-19 16:23:46+00:00,[],None
720,https://github.com/WangXiaoEric/solvercnf.git,2021-05-07 06:18:35+00:00,,0,WangXiaoEric/solvercnf,365133891,Verilog,solvercnf,15006,0,2021-06-01 17:04:35+00:00,[],https://api.github.com/licenses/apache-2.0
721,https://github.com/ShreyMaru/crypto-fgpa-Team3.git,2021-05-27 03:46:11+00:00,,0,ShreyMaru/crypto-fgpa-Team3,371238479,Verilog,crypto-fgpa-Team3,2,0,2021-06-02 10:07:16+00:00,[],None
722,https://github.com/akyola/AE-01_RISC-V_Core.git,2021-06-01 11:27:34+00:00,A 32-bit RISC-V microprocessor core implementation with Verilog HDL on Vivado Design Suite,0,akyola/AE-01_RISC-V_Core,372805218,Verilog,AE-01_RISC-V_Core,15,0,2021-06-01 13:11:38+00:00,[],https://api.github.com/licenses/mit
723,https://github.com/gjrb0324/2021_Spring_Verilog_HDL.git,2021-06-02 21:02:10+00:00,Implement ALU using Verilog HDL,0,gjrb0324/2021_Spring_Verilog_HDL,373302177,Verilog,2021_Spring_Verilog_HDL,1309,0,2021-06-02 21:58:14+00:00,[],None
724,https://github.com/amar-singh-wisesciencewise/RISC-V.git,2021-05-16 06:15:47+00:00,RISC-V CPU design in verilog,1,amar-singh-wisesciencewise/RISC-V,367799821,Verilog,RISC-V,65,0,2022-03-06 05:56:23+00:00,[],https://api.github.com/licenses/gpl-3.0
725,https://github.com/shubhi704/RAM-Based-001-Sequence-Detector.git,2021-05-24 05:52:37+00:00,,0,shubhi704/RAM-Based-001-Sequence-Detector,370242571,Verilog,RAM-Based-001-Sequence-Detector,9,0,2021-06-19 18:02:16+00:00,[],None
726,https://github.com/dungnguyenvan2494/AES_verilog_128_bit.git,2021-05-22 03:23:15+00:00,Bài tập lớn VLSI Bách Khoa ,0,dungnguyenvan2494/AES_verilog_128_bit,369705295,Verilog,AES_verilog_128_bit,6,0,2021-05-22 03:30:16+00:00,[],None
727,https://github.com/avinashsaroj/verilog.git,2021-05-30 16:43:07+00:00,designs with testbench and output,0,avinashsaroj/verilog,372266731,Verilog,verilog,64,0,2021-09-26 16:25:58+00:00,[],None
728,https://github.com/amitle2/ALU.git,2021-05-30 18:54:36+00:00,my first alu design,0,amitle2/ALU,372292853,Verilog,ALU,51,0,2021-08-16 21:19:05+00:00,[],None
729,https://github.com/Robert-e1/Booth_Multiplier_VHDL.git,2021-05-30 19:32:09+00:00,,0,Robert-e1/Booth_Multiplier_VHDL,372299610,Verilog,Booth_Multiplier_VHDL,540,0,2021-06-04 09:19:16+00:00,[],None
730,https://github.com/LordRafa/BusBlasterV3_Playstation_2_UART.git,2021-05-30 00:27:00+00:00,Buffer to connect to the Playstation 2 UART (1.6 volt level),0,LordRafa/BusBlasterV3_Playstation_2_UART,372093239,Verilog,BusBlasterV3_Playstation_2_UART,24,0,2021-05-30 00:40:29+00:00,[],https://api.github.com/licenses/gpl-3.0
731,https://github.com/y38y38/pixel_8x8_process.git,2021-05-29 04:53:06+00:00,,0,y38y38/pixel_8x8_process,371883047,Verilog,pixel_8x8_process,141006,0,2021-05-29 05:51:38+00:00,[],None
732,https://github.com/thanhnguyen210299/CSULB-CECS-225-_-DIGITAL-LOGIC-AND-ASSEMBLY-PROGRAMMING.git,2021-05-30 02:11:54+00:00,Professor: Xiaolong Wu - Semester: Spring 2021,0,thanhnguyen210299/CSULB-CECS-225-_-DIGITAL-LOGIC-AND-ASSEMBLY-PROGRAMMING,372105242,Verilog,CSULB-CECS-225-_-DIGITAL-LOGIC-AND-ASSEMBLY-PROGRAMMING,5036,0,2021-05-30 02:18:48+00:00,[],None
733,https://github.com/samlam723/csla_64bit.git,2021-06-05 11:46:00+00:00,A Square Root 64-bit Carry-Select (CSL) adder is implemented.,0,samlam723/csla_64bit,374100142,Verilog,csla_64bit,437,0,2021-06-05 14:50:45+00:00,[],None
734,https://github.com/ANWESH009/TIBURON_FPGA.git,2021-06-06 03:24:29+00:00,,0,ANWESH009/TIBURON_FPGA,374258440,Verilog,TIBURON_FPGA,25,0,2021-07-23 05:10:24+00:00,[],None
735,https://github.com/sjidea/EE312.git,2021-05-28 03:10:24+00:00,,0,sjidea/EE312,371565629,Verilog,EE312,33,0,2022-06-14 08:18:51+00:00,[],None
736,https://github.com/Advait13/vsdflow.git,2021-05-27 16:34:07+00:00,,0,Advait13/vsdflow,371439377,Verilog,vsdflow,13695,0,2021-05-27 16:34:26+00:00,[],https://api.github.com/licenses/apache-2.0
737,https://github.com/sweatySpaghett1/sweatySpaghett1.git,2021-05-03 23:24:11+00:00,Config files for my GitHub profile.,0,sweatySpaghett1/sweatySpaghett1,364086826,Verilog,sweatySpaghett1,22,0,2023-12-11 06:33:58+00:00,"['config', 'github-config']",None
738,https://github.com/Feng-Yan-528/Construction-of-countdown.git,2021-05-06 17:08:25+00:00,Construction of countdown module,0,Feng-Yan-528/Construction-of-countdown,364982684,Verilog,Construction-of-countdown,39474,0,2021-06-08 16:08:56+00:00,[],None
739,https://github.com/ammrat13/fpga-playground.git,2021-05-08 19:07:31+00:00,An FPGA-based RISC-V SoC to mess around with,0,ammrat13/fpga-playground,365591910,Verilog,fpga-playground,40,0,2021-05-12 21:00:09+00:00,"['fpga', 'riscv', 'riscv32', 'system-on-chip']",https://api.github.com/licenses/mit
740,https://github.com/jelly99709/DE5a-Riffa-Setup.git,2021-05-08 07:22:50+00:00,,0,jelly99709/DE5a-Riffa-Setup,365447826,Verilog,DE5a-Riffa-Setup,550,0,2021-05-08 07:27:02+00:00,[],None
741,https://github.com/lhn3149/Sequential-and-pipeline-Arithmetic-Logic-Unit.git,2021-05-06 04:23:13+00:00,"Design and implement multiplication block in sequence and pipeline methods. Written in Verilog, run on Intel Quartus.",0,lhn3149/Sequential-and-pipeline-Arithmetic-Logic-Unit,364783349,Verilog,Sequential-and-pipeline-Arithmetic-Logic-Unit,22,0,2021-05-06 04:24:16+00:00,[],None
742,https://github.com/gk2000/SHA256-Verilog.git,2021-05-12 01:37:39+00:00,Verilog code for SHA-256 hashing,0,gk2000/SHA256-Verilog,366559558,Verilog,SHA256-Verilog,26,0,2022-01-09 13:56:23+00:00,"['sha256', 'cryptography']",https://api.github.com/licenses/gpl-3.0
743,https://github.com/vbrange/verilog_aes.git,2021-05-12 02:57:36+00:00,Various ventures in verilog,0,vbrange/verilog_aes,366575094,Verilog,verilog_aes,9,0,2021-05-30 18:38:09+00:00,[],None
744,https://github.com/ducall/sobel.git,2021-05-12 03:59:50+00:00,,1,ducall/sobel,366586949,Verilog,sobel,5,0,2021-05-13 07:01:37+00:00,[],None
745,https://github.com/kmallari/Hardware-Description-Language.git,2021-05-12 04:00:54+00:00,"In this repository, I will be uploading my Verilog codes for my ENGG 125.03 class.",0,kmallari/Hardware-Description-Language,366587131,Verilog,Hardware-Description-Language,6989,0,2021-05-27 04:03:56+00:00,[],None
746,https://github.com/kavalcio/fpga-maze-game.git,2021-05-10 12:22:00+00:00,A maze traversal game in Verilog,0,kavalcio/fpga-maze-game,366033265,Verilog,fpga-maze-game,926,0,2022-11-22 20:06:46+00:00,[],None
747,https://github.com/flanxice/FPGA-Project.git,2021-05-10 15:54:03+00:00,,0,flanxice/FPGA-Project,366097828,Verilog,FPGA-Project,214718,0,2021-12-06 13:18:13+00:00,[],None
748,https://github.com/CadenZheng/whac-a-mole-verilog.git,2021-05-10 17:56:02+00:00,,0,CadenZheng/whac-a-mole-verilog,366131611,Verilog,whac-a-mole-verilog,11,0,2022-03-09 02:39:52+00:00,[],None
749,https://github.com/abhi0291/32-bit-MIPS-Architecture.git,2021-05-07 08:05:23+00:00,,0,abhi0291/32-bit-MIPS-Architecture,365159933,Verilog,32-bit-MIPS-Architecture,207,0,2021-05-07 08:16:53+00:00,[],None
750,https://github.com/bushra-rafia/Design-and-Testing-of-VLSI-DSCH-Mircrowind-Verilog.git,2021-05-05 18:26:46+00:00,,0,bushra-rafia/Design-and-Testing-of-VLSI-DSCH-Mircrowind-Verilog,364670601,Verilog,Design-and-Testing-of-VLSI-DSCH-Mircrowind-Verilog,7,0,2021-05-05 18:49:31+00:00,[],None
751,https://github.com/petraratkai/ISA_MIPS_coursework.git,2021-05-18 13:06:09+00:00,,0,petraratkai/ISA_MIPS_coursework,368533198,Verilog,ISA_MIPS_coursework,67,0,2021-05-18 13:08:39+00:00,[],None
752,https://github.com/azzarello/coen122finalproject.srcs.git,2021-05-19 00:13:32+00:00,,0,azzarello/coen122finalproject.srcs,368698333,Verilog,coen122finalproject.srcs,170,0,2021-06-05 06:50:53+00:00,[],None
753,https://github.com/johnli25/FPGA-Tank-Wars.git,2021-05-18 14:48:29+00:00,Final project for ECE 385,0,johnli25/FPGA-Tank-Wars,368567323,Verilog,FPGA-Tank-Wars,65147,0,2022-09-24 19:59:59+00:00,[],None
754,https://github.com/ManuelGR-22/Proyecto_Arquitectura_de_computadoras.git,2021-05-14 15:13:23+00:00,,0,ManuelGR-22/Proyecto_Arquitectura_de_computadoras,367400532,Verilog,Proyecto_Arquitectura_de_computadoras,12151,0,2021-06-30 00:37:02+00:00,[],None
755,https://github.com/Gualix/proyecto_digitales_II.git,2021-05-23 17:26:05+00:00,"This is the repository for the digital 2 course project: ""Design of the PHY layer of the PCIe interface"".",1,Gualix/proyecto_digitales_II,370114691,Verilog,proyecto_digitales_II,785,0,2021-06-16 22:03:47+00:00,[],None
756,https://github.com/mohamed-naeim/Hight.git,2021-05-22 14:41:09+00:00,,0,mohamed-naeim/Hight,369831430,Verilog,Hight,2286,0,2021-05-24 16:17:34+00:00,[],None
757,https://github.com/Khaiduy/PCB.git,2021-05-26 06:57:44+00:00,PCB for Open8 and TEE demo,0,Khaiduy/PCB,370936650,Verilog,PCB,24413,0,2022-01-07 07:58:27+00:00,[],None
758,https://github.com/priyansh-j97/Learning-Verilog.git,2021-05-26 21:58:15+00:00,This repository is for learning Verilog programming from scratch.,0,priyansh-j97/Learning-Verilog,371178270,Verilog,Learning-Verilog,13,0,2021-05-29 19:35:39+00:00,[],None
759,https://github.com/Saverio976/translator.git,2021-05-31 17:36:32+00:00,"v module to translate string (uses https://translate.google.com, https://mymemory.translated.net, https://www.linguee.com/)",0,Saverio976/translator,372584614,Verilog,translator,68,0,2022-06-29 13:11:00+00:00,"['v', 'translation', 'vlang']",https://api.github.com/licenses/mit
760,https://github.com/rajveer111-maker/SHA_2.git,2021-06-01 10:26:23+00:00,Secure Hash Algorithm 2,0,rajveer111-maker/SHA_2,372789527,Verilog,SHA_2,57,0,2021-06-01 10:32:37+00:00,[],None
761,https://github.com/EternalEdward/prcatise.git,2021-05-25 15:29:15+00:00,,0,EternalEdward/prcatise,370741762,Verilog,prcatise,8,0,2021-05-26 04:54:31+00:00,[],None
762,https://github.com/dairin007/SingleCycleProcessor.git,2021-05-23 14:15:07+00:00,,0,dairin007/SingleCycleProcessor,370071151,Verilog,SingleCycleProcessor,9,0,2021-05-23 14:15:30+00:00,[],None
763,https://github.com/spdy1895/clock_multiplexed_FIFO.git,2021-05-19 09:36:47+00:00,,1,spdy1895/clock_multiplexed_FIFO,368816363,Verilog,clock_multiplexed_FIFO,386,0,2021-05-19 09:37:47+00:00,[],None
764,https://github.com/sketsbook1/C.S.CHEN.git,2021-05-19 13:22:16+00:00,Config files for my GitHub profile.,0,sketsbook1/C.S.CHEN,368877145,Verilog,C.S.CHEN,32,0,2023-08-25 00:34:26+00:00,"['config', 'github-config']",None
765,https://github.com/hana0412/demo2.git,2021-05-20 05:11:23+00:00,,0,hana0412/demo2,369086454,Verilog,demo2,2,0,2021-05-20 05:18:54+00:00,[],None
766,https://github.com/zd819/Mars-Rover.git,2021-05-20 11:18:02+00:00,,0,zd819/Mars-Rover,369181902,Verilog,Mars-Rover,12424,0,2021-09-19 21:06:00+00:00,[],None
767,https://github.com/santoshkrishna4138/MATRIX_1120.git,2021-05-13 06:45:56+00:00,,0,santoshkrishna4138/MATRIX_1120,366959474,Verilog,MATRIX_1120,2414,0,2021-07-24 08:36:39+00:00,[],None
768,https://github.com/hakanbytunc/very-simple-cpu.git,2021-05-25 19:42:52+00:00,"Very Simple CPU designed by verilog code from the sketch using the binary coding. By using this VSCPU, implemented a simple memory-mapped system which has access to switches, push buttons, LED’s on board and also monitor over VGA port of the board.",0,hakanbytunc/very-simple-cpu,370809584,Verilog,very-simple-cpu,4,0,2021-05-25 19:49:10+00:00,[],None
769,https://github.com/Shrutijoshi699/ShrutiJoshi_Projects.git,2021-05-19 12:27:32+00:00,Contains the projects done so far,0,Shrutijoshi699/ShrutiJoshi_Projects,368861088,Verilog,ShrutiJoshi_Projects,269,0,2021-10-02 15:36:23+00:00,[],None
770,https://github.com/avinashavi20/half-adder.git,2021-05-31 15:37:02+00:00,"the repository contains the rtl code of half adder ,used to perform the arithmetic addition of two bits.",0,avinashavi20/half-adder,372554660,Verilog,half-adder,1,0,2021-05-31 15:38:48+00:00,[],None
771,https://github.com/BryantSuen/multi-cycle-CPU.git,2021-06-01 16:56:33+00:00,,0,BryantSuen/multi-cycle-CPU,372903071,Verilog,multi-cycle-CPU,2692,0,2023-01-28 08:28:31+00:00,[],https://api.github.com/licenses/mit
772,https://github.com/avinashavi20/arithmetic-logic-unit.git,2021-06-05 09:43:38+00:00,the repository contains the rtl code of ALU which performs 8 different arithmetic and 8 different logic operation based on the control signal.,0,avinashavi20/arithmetic-logic-unit,374076230,Verilog,arithmetic-logic-unit,2,0,2021-06-05 09:44:52+00:00,[],None
773,https://github.com/skmelwani/Pipeline-Processor.git,2021-05-30 14:35:58+00:00,Complete pipeline processor in RISC V,0,skmelwani/Pipeline-Processor,372237753,Verilog,Pipeline-Processor,347,0,2021-05-30 14:48:38+00:00,[],None
774,https://github.com/AhmedAlaa2024/Verilog-Projects.git,2021-05-31 14:33:49+00:00,Small Educational projects in order to practicing Verilog which is Hardware Descriptive Language,0,AhmedAlaa2024/Verilog-Projects,372535963,Verilog,Verilog-Projects,684,0,2021-05-31 14:35:16+00:00,[],https://api.github.com/licenses/mit
775,https://github.com/shubhi704/Booth-Algorithm.git,2021-05-24 05:56:55+00:00,,1,shubhi704/Booth-Algorithm,370243467,Verilog,Booth-Algorithm,3,0,2021-06-19 17:26:51+00:00,[],None
776,https://github.com/rpls/wrapped_chacha_wb_accel.git,2021-06-01 22:04:37+00:00,Wishbone ChaCha Accelerator for MPW2-C,1,rpls/wrapped_chacha_wb_accel,372972106,Verilog,wrapped_chacha_wb_accel,28066,0,2021-12-08 13:52:05+00:00,[],https://api.github.com/licenses/apache-2.0
777,https://github.com/AtlasFPGA/Apple-One.git,2021-06-02 15:48:16+00:00,,1,AtlasFPGA/Apple-One,373222988,Verilog,Apple-One,2407,0,2022-11-09 14:40:45+00:00,[],https://api.github.com/licenses/apache-2.0
778,https://github.com/vah5121/Finite-Impulse-Response-Filter.git,2021-06-01 19:54:15+00:00,,0,vah5121/Finite-Impulse-Response-Filter,372946424,Verilog,Finite-Impulse-Response-Filter,10,0,2021-06-14 18:01:23+00:00,[],None
779,https://github.com/IgnacioCarazo/MaquinaDeCafe.git,2021-06-01 19:59:08+00:00,,0,IgnacioCarazo/MaquinaDeCafe,372947526,Verilog,MaquinaDeCafe,10,0,2021-06-10 21:20:02+00:00,[],None
780,https://github.com/anthony8912310/verilog.git,2021-05-06 06:39:15+00:00,,1,anthony8912310/verilog,364809883,Verilog,verilog,1,0,2021-05-06 06:43:35+00:00,[],None
781,https://github.com/ne-egor/openlane_test.git,2021-05-19 18:07:45+00:00,,1,ne-egor/openlane_test,368960192,Verilog,openlane_test,59234,0,2021-05-21 10:06:23+00:00,[],None
782,https://github.com/rmera1026/FPGA-Clock.git,2021-05-19 19:41:48+00:00,,0,rmera1026/FPGA-Clock,368983042,Verilog,FPGA-Clock,6,0,2021-05-19 20:14:03+00:00,[],None
783,https://github.com/Darkgambler/PROYECTO1_DIGITALESII.git,2021-05-25 21:29:15+00:00,Proyecto 1 de Circuitos Digitales II UCR I Semestre 2021,0,Darkgambler/PROYECTO1_DIGITALESII,370832274,Verilog,PROYECTO1_DIGITALESII,1852,0,2021-06-13 03:14:43+00:00,[],None
784,https://github.com/TimTam725/MINI_PRO.git,2021-05-22 08:16:31+00:00,,0,TimTam725/MINI_PRO,369753824,Verilog,MINI_PRO,2,0,2021-05-22 08:28:37+00:00,[],None
785,https://github.com/TimTam725/PIPELINING.git,2021-05-22 08:30:17+00:00,,0,TimTam725/PIPELINING,369756452,Verilog,PIPELINING,13,0,2021-05-22 08:32:06+00:00,[],None
786,https://github.com/Firestarter97/sram.git,2021-05-21 04:51:57+00:00,,0,Firestarter97/sram,369416849,Verilog,sram,1,0,2021-05-21 04:53:11+00:00,[],None
787,https://github.com/teekamkhandelwal/Verilog_based_some_application_projects.git,2021-05-24 11:44:02+00:00,1)8-bit ALU with all flags 2) synchronous fifo,0,teekamkhandelwal/Verilog_based_some_application_projects,370332387,Verilog,Verilog_based_some_application_projects,13,0,2021-05-26 12:46:18+00:00,[],https://api.github.com/licenses/apache-2.0
788,https://github.com/Aadreesh/ALU_Verilog.git,2021-06-05 12:52:52+00:00,,0,Aadreesh/ALU_Verilog,374113602,Verilog,ALU_Verilog,31,0,2021-07-01 08:54:27+00:00,[],None
789,https://github.com/liuxiao-guan/CPU.git,2021-06-06 10:45:50+00:00,,0,liuxiao-guan/CPU,374334290,Verilog,CPU,268,0,2021-06-07 02:06:47+00:00,[],None
790,https://github.com/jinyier/CAD4EM.git,2021-06-03 18:30:36+00:00,We present our automatic RTL EM side channel toolset.,2,jinyier/CAD4EM,373605649,Verilog,CAD4EM,2865,0,2021-06-09 20:49:41+00:00,[],https://api.github.com/licenses/apache-2.0
791,https://github.com/mfkiwl/riscv_sopc.git,2021-06-05 08:59:53+00:00,This is a RISC-V CPU based SOC Design.,0,mfkiwl/riscv_sopc,374067307,,riscv_sopc,458,0,2021-10-07 14:19:13+00:00,[],None
792,https://github.com/Mishkaten/VerilogDump.git,2021-06-04 19:31:34+00:00,,0,Mishkaten/VerilogDump,373941740,Verilog,VerilogDump,1360,0,2023-10-30 14:34:00+00:00,[],None
793,https://github.com/picknick-/dsdplayer_MiSTer.git,2021-06-06 14:40:50+00:00,,0,picknick-/dsdplayer_MiSTer,374384074,Verilog,dsdplayer_MiSTer,91,0,2021-06-06 14:43:50+00:00,[],https://api.github.com/licenses/gpl-2.0
794,https://github.com/LungHuiWu/MIPS-Pipeline-Processor.git,2021-05-31 07:46:00+00:00,,0,LungHuiWu/MIPS-Pipeline-Processor,372424591,Verilog,MIPS-Pipeline-Processor,9353,0,2021-06-29 11:20:04+00:00,[],None
795,https://github.com/pahanmendis/BCD-to-7-SEGMENT-using-Verilog-.git,2021-06-01 14:57:19+00:00,This repository contains verilog code used to implment a BCD to 7 segment display. This implementation is done using gate level modeling as well as behavioral modelling.,0,pahanmendis/BCD-to-7-SEGMENT-using-Verilog-,372868168,Verilog,BCD-to-7-SEGMENT-using-Verilog-,7,0,2023-05-14 17:25:19+00:00,[],None
796,https://github.com/sidhantp1906/pipeline_codes.git,2021-05-27 20:39:19+00:00,designed simple digital circuits using pipeline,0,sidhantp1906/pipeline_codes,371498519,Verilog,pipeline_codes,1110,0,2021-07-23 09:19:56+00:00,"['verilog', 'mips32', 'register-swapping', 'alu', 'pipeline']",https://api.github.com/licenses/mit
797,https://github.com/y38y38/pixel_8x8_process_dct.git,2021-05-30 03:56:18+00:00,,0,y38y38/pixel_8x8_process_dct,372118463,Verilog,pixel_8x8_process_dct,263839,0,2021-05-30 04:03:56+00:00,[],None
798,https://github.com/uygarkaya/ProjectCPU.git,2021-06-06 17:19:20+00:00,Design of Simple CPU,0,uygarkaya/ProjectCPU,374420708,Verilog,ProjectCPU,16,0,2021-06-28 16:16:49+00:00,[],None
799,https://github.com/ElihuIzanami/Sparte3e_lcd.git,2021-05-08 01:59:24+00:00,,0,ElihuIzanami/Sparte3e_lcd,365396008,Verilog,Sparte3e_lcd,9,0,2021-05-08 02:01:16+00:00,[],https://api.github.com/licenses/apache-2.0
800,https://github.com/lampn0/RISC-V---Datapath-and-Control-Logic.git,2021-05-15 03:01:42+00:00,RISC V - Datapath and Control Logic,0,lampn0/RISC-V---Datapath-and-Control-Logic,367527504,Verilog,RISC-V---Datapath-and-Control-Logic,320,0,2022-01-13 15:41:05+00:00,[],https://api.github.com/licenses/gpl-3.0
801,https://github.com/Tha-Davong/CS202CPUsubmodule.git,2021-05-17 04:40:33+00:00,,0,Tha-Davong/CS202CPUsubmodule,368056604,Verilog,CS202CPUsubmodule,6,0,2021-07-07 08:19:37+00:00,[],None
802,https://github.com/LinesKing/Digital-System-Design-ELEN30010_2021_SM1.git,2021-05-16 01:34:03+00:00,DSD_Project_2021,0,LinesKing/Digital-System-Design-ELEN30010_2021_SM1,367762389,Verilog,Digital-System-Design-ELEN30010_2021_SM1,113725,0,2021-05-27 11:08:23+00:00,[],None
803,https://github.com/HarunaIppai/ECE_385_Final.git,2021-05-12 03:13:47+00:00,,0,HarunaIppai/ECE_385_Final,366578291,Verilog,ECE_385_Final,747,0,2021-05-12 03:23:41+00:00,[],None
804,https://github.com/GavinSit/EECS-2021-Computer-Organization.git,2021-05-17 17:06:47+00:00,Programming with Verilog,0,GavinSit/EECS-2021-Computer-Organization,368263042,Verilog,EECS-2021-Computer-Organization,9399,0,2021-05-17 17:09:13+00:00,[],None
805,https://github.com/Radu3121/CSZ-Decryption.git,2021-05-17 14:05:35+00:00,"A sequential circuit developed to decrypt Caesar cipher, Scytale cipher and ZigZag cipher, hence the name CSZ.  It receives as input encrypted data, the decryption key and what decryption algorithm to use. It's output is the input's decryption.",0,Radu3121/CSZ-Decryption,368207874,Verilog,CSZ-Decryption,8,0,2021-05-17 14:06:13+00:00,[],None
806,https://github.com/iissakov/fpga_project.git,2021-05-17 23:31:50+00:00,,0,iissakov/fpga_project,368347411,Verilog,fpga_project,6,0,2021-05-20 21:49:46+00:00,[],None
807,https://github.com/yuanyangwangTJ/cpu.git,2021-05-18 15:32:50+00:00,,0,yuanyangwangTJ/cpu,368581729,Verilog,cpu,9734,0,2022-09-30 03:16:12+00:00,[],https://api.github.com/licenses/mit
808,https://github.com/IUST-CAD/MIPS-Processor.git,2021-05-22 20:41:57+00:00,,1,IUST-CAD/MIPS-Processor,369902162,Verilog,MIPS-Processor,325,0,2023-01-14 10:21:42+00:00,[],None
809,https://github.com/alpha0879/Pipelined-RISC-EE739.git,2021-05-06 10:55:19+00:00,,0,alpha0879/Pipelined-RISC-EE739,364878211,Verilog,Pipelined-RISC-EE739,4532,0,2021-06-02 05:39:22+00:00,[],None
810,https://github.com/ekaratzaferis/fpga_clould_client.git,2021-05-07 13:53:51+00:00,Remote cloud control using a thin FPGA client,0,ekaratzaferis/fpga_clould_client,365249871,Verilog,fpga_clould_client,115685,0,2021-05-07 14:26:15+00:00,"['fpga', 'streaming', 'thin', 'client', 'remote-control', 'screen-share', 'cloud', 'remote-desktop']",https://api.github.com/licenses/gpl-3.0
811,https://github.com/PrashantP2k/Porsche-Anti-Theft-System.git,2021-05-10 16:36:52+00:00,"A project done by me under the Electronics Club of Indian Institute of Technology, Guwahati",0,PrashantP2k/Porsche-Anti-Theft-System,366109564,Verilog,Porsche-Anti-Theft-System,1894,0,2021-07-05 18:03:48+00:00,[],None
812,https://github.com/rickyacosta/tutorial.git,2021-05-10 16:16:49+00:00,,0,rickyacosta/tutorial,366104239,Verilog,tutorial,2,0,2021-05-10 16:59:01+00:00,[],None
813,https://github.com/PrashantMata/Compressed-Uncompressed-Cache-Comparison-codes.git,2021-06-03 16:52:43+00:00,,0,PrashantMata/Compressed-Uncompressed-Cache-Comparison-codes,373580233,Verilog,Compressed-Uncompressed-Cache-Comparison-codes,70,0,2021-07-06 18:10:50+00:00,[],None
814,https://github.com/uygarkaya/VSCPU.git,2021-06-04 21:25:54+00:00,Design of Very Simple CPU,0,uygarkaya/VSCPU,373962709,Verilog,VSCPU,12,0,2021-06-08 22:41:16+00:00,[],None
815,https://github.com/gpl10921986/lerning_VS.git,2021-05-04 03:37:00+00:00,"no description, just for test",0,gpl10921986/lerning_VS,364130081,Verilog,lerning_VS,2,0,2021-06-05 09:21:34+00:00,[],None
816,https://github.com/gimme1dollar/toy_pipelined_cpu.git,2021-06-03 16:01:26+00:00,Pipelined CPU simulation wiht Verilog,0,gimme1dollar/toy_pipelined_cpu,373565725,Verilog,toy_pipelined_cpu,14,0,2022-06-07 03:57:00+00:00,[],None
817,https://github.com/sree-sankar/VLSI.git,2021-06-05 09:53:39+00:00,,0,sree-sankar/VLSI,374078121,Verilog,VLSI,20,0,2021-06-06 15:26:10+00:00,[],None
818,https://github.com/BillZou123/ELEC_391_A_Verilog_Simulation_of_a_Communication_System.git,2021-06-05 20:55:36+00:00,Group 1 it is,0,BillZou123/ELEC_391_A_Verilog_Simulation_of_a_Communication_System,374210564,Verilog,ELEC_391_A_Verilog_Simulation_of_a_Communication_System,158,0,2023-11-08 01:13:13+00:00,[],None
819,https://github.com/IzzyEhnes/memory-bitcells.git,2021-05-06 20:40:09+00:00,,0,IzzyEhnes/memory-bitcells,365032136,Verilog,memory-bitcells,2,0,2021-05-06 21:40:24+00:00,[],None
820,https://github.com/PrasannaKumarKottakota/Programming-Langwages.git,2021-06-05 04:57:33+00:00,,0,PrasannaKumarKottakota/Programming-Langwages,374023830,Verilog,Programming-Langwages,678,0,2023-04-10 16:28:13+00:00,[],None
821,https://github.com/Charley337/Computer-Organization-and-Design-Experiments.git,2021-06-04 07:21:32+00:00,Computer-Organization-and-Design-Experiments,0,Charley337/Computer-Organization-and-Design-Experiments,373756072,Verilog,Computer-Organization-and-Design-Experiments,24442,0,2023-04-13 04:08:05+00:00,[],None
822,https://github.com/bird1and1fish/ConvolutionRTL.git,2021-05-22 02:33:16+00:00,,0,bird1and1fish/ConvolutionRTL,369698621,Verilog,ConvolutionRTL,10,0,2021-05-22 04:18:36+00:00,[],None
823,https://github.com/Mohamed-Elesaily/packet-identifier.git,2021-05-08 15:30:35+00:00,,0,Mohamed-Elesaily/packet-identifier,365548975,Verilog,packet-identifier,4896,0,2021-06-15 13:37:55+00:00,[],None
824,https://github.com/anthonyzhub/Verilog-Introductory-Projects.git,2021-05-19 15:42:39+00:00,,0,anthonyzhub/Verilog-Introductory-Projects,368920721,Verilog,Verilog-Introductory-Projects,3,0,2021-05-19 15:44:57+00:00,[],None
825,https://github.com/dixilo/freq_selector.git,2021-05-20 05:59:14+00:00,,0,dixilo/freq_selector,369095779,Verilog,freq_selector,36,0,2021-05-20 06:05:14+00:00,[],None
826,https://github.com/duonghong0201/aes_128bit.git,2021-05-22 08:53:37+00:00,,0,duonghong0201/aes_128bit,369760871,Verilog,aes_128bit,4,0,2021-05-22 09:02:42+00:00,[],None
827,https://github.com/Nafis-Mustakim-Taskin/Carry-Look-Ahead-Adder.git,2021-05-22 18:34:20+00:00,,0,Nafis-Mustakim-Taskin/Carry-Look-Ahead-Adder,369880953,Verilog,Carry-Look-Ahead-Adder,3,0,2021-05-24 18:32:17+00:00,[],None
828,https://github.com/Osiris350/Proyecto_PCIE.git,2021-05-22 23:43:45+00:00,,1,Osiris350/Proyecto_PCIE,369926209,Verilog,Proyecto_PCIE,2099,0,2021-06-13 02:00:39+00:00,[],None
829,https://github.com/Ellen7ions/vga_controller.git,2021-05-22 15:24:39+00:00,,0,Ellen7ions/vga_controller,369841929,Verilog,vga_controller,3600,0,2021-05-23 11:55:12+00:00,[],None
830,https://github.com/ronak-7228/Traffic-light-controller-in-verilog.git,2021-05-24 11:14:15+00:00,,0,ronak-7228/Traffic-light-controller-in-verilog,370324831,Verilog,Traffic-light-controller-in-verilog,2,0,2021-05-24 11:15:23+00:00,[],None
831,https://github.com/deval1812/risc.git,2021-05-21 11:49:58+00:00,A repository for pipelined risc processor,0,deval1812/risc,369518210,Verilog,risc,8,0,2021-05-21 18:21:10+00:00,[],None
832,https://github.com/Diksha-Mittal/FPGA.git,2021-05-23 14:43:48+00:00,Verilog modelling of FPGA,0,Diksha-Mittal/FPGA,370078034,Verilog,FPGA,137,0,2021-05-23 14:48:33+00:00,[],None
833,https://github.com/williamtien23/HDL-SDRAM_Pt1.git,2021-05-07 16:01:56+00:00,Code for initialization state machine,0,williamtien23/HDL-SDRAM_Pt1,365286000,Verilog,HDL-SDRAM_Pt1,2,0,2021-05-07 16:02:02+00:00,[],None
834,https://github.com/Fenteale/riscv-rocket-chip-nexys-a7.git,2021-05-07 04:19:30+00:00,CECS 460 Final Project,2,Fenteale/riscv-rocket-chip-nexys-a7,365112246,Verilog,riscv-rocket-chip-nexys-a7,4944,0,2022-01-29 07:33:25+00:00,[],https://api.github.com/licenses/gpl-3.0
835,https://github.com/lucy9696/fpgaMiner.git,2021-05-07 12:58:11+00:00,,0,lucy9696/fpgaMiner,365234093,Verilog,fpgaMiner,4853,0,2021-05-07 13:07:22+00:00,[],None
836,https://github.com/jaycosper/fpga.git,2021-05-18 04:37:32+00:00,,0,jaycosper/fpga,368401838,Verilog,fpga,145,0,2021-11-07 04:30:23+00:00,[],None
837,https://github.com/wellytung/tatung_rtl.git,2021-05-14 15:26:08+00:00,,0,wellytung/tatung_rtl,367404153,Verilog,tatung_rtl,8,0,2021-05-17 15:29:44+00:00,[],None
838,https://github.com/erikvanzijst/wrapped_pong_3_2.git,2021-05-15 22:19:47+00:00,,0,erikvanzijst/wrapped_pong_3_2,367740046,Verilog,wrapped_pong_3_2,8,0,2021-05-24 23:42:59+00:00,[],None
839,https://github.com/haowoo0112/verilog_spi_M25AA010A.git,2021-05-18 09:27:57+00:00,,0,haowoo0112/verilog_spi_M25AA010A,368472655,Verilog,verilog_spi_M25AA010A,79,0,2022-04-20 14:13:42+00:00,[],None
840,https://github.com/denso666/simple-32b-mips-architecture.git,2021-05-18 23:01:06+00:00,,0,denso666/simple-32b-mips-architecture,368686814,Verilog,simple-32b-mips-architecture,733,0,2022-01-20 03:36:22+00:00,"['verilog', 'mips-architecture', 'minify']",None
841,https://github.com/vedantmathur/115C-Absolute-Value-Detector.git,2021-05-26 16:36:11+00:00,,0,vedantmathur/115C-Absolute-Value-Detector,371103015,Verilog,115C-Absolute-Value-Detector,1193,0,2021-06-01 04:28:30+00:00,[],None
842,https://github.com/ysc0327/AFIFO.git,2021-05-30 07:08:46+00:00,Asynchronous FIFO implementation,0,ysc0327/AFIFO,372147507,Verilog,AFIFO,8,0,2021-05-30 07:15:39+00:00,[],None
843,https://github.com/skmelwani/Single-Cycle-Processor.git,2021-05-30 14:53:12+00:00,Implemented bubble sort algorithm on Single cycle processor in RISC V,0,skmelwani/Single-Cycle-Processor,372241758,Verilog,Single-Cycle-Processor,322,0,2021-05-30 14:56:01+00:00,[],None
844,https://github.com/Arj-01/Verilog-Digital-Electronics.git,2021-05-31 06:45:33+00:00,,0,Arj-01/Verilog-Digital-Electronics,372408785,Verilog,Verilog-Digital-Electronics,25,0,2021-08-11 17:53:32+00:00,[],None
845,https://github.com/kzwrime/ssriscv.git,2021-05-30 12:21:11+00:00,,0,kzwrime/ssriscv,372207162,Verilog,ssriscv,3206,0,2021-05-30 12:27:13+00:00,[],None
846,https://github.com/AdwaithM/Multicycle-Computer.git,2021-05-30 23:58:28+00:00,I created my own Instruction Set Architecture and a multicycle computer that implemented it. This is my version of a Von Neumann Architecture. This performs simple Arithmetic operations and simple loop operations and makes use of Interrupts. I used Verilog to create the Instruction Set Architecture and a multicycle computer.,0,AdwaithM/Multicycle-Computer,372338229,Verilog,Multicycle-Computer,12,0,2021-05-31 00:01:05+00:00,[],None
847,https://github.com/rajveer111-maker/pseudo-random-sequence-generator.git,2021-06-01 10:33:57+00:00,random number generated using LFSR and counter,0,rajveer111-maker/pseudo-random-sequence-generator,372791487,Verilog,pseudo-random-sequence-generator,6,0,2021-06-01 10:34:59+00:00,[],https://api.github.com/licenses/apache-2.0
848,https://github.com/rajveer111-maker/Aes_Des_project.git,2021-06-01 10:51:35+00:00,My work related to DST done here.,0,rajveer111-maker/Aes_Des_project,372795844,Verilog,Aes_Des_project,8,0,2022-06-21 06:56:56+00:00,[],None
849,https://github.com/skuro96/fpga_vga.git,2021-06-01 08:23:28+00:00,,0,skuro96/fpga_vga,372755122,Verilog,fpga_vga,5,0,2021-06-06 09:38:16+00:00,[],None
850,https://github.com/theo-brown/cpu-simulation.git,2021-05-26 22:37:45+00:00,Files for simulating the GB3 RISC processor,0,theo-brown/cpu-simulation,371184946,Verilog,cpu-simulation,6,0,2021-05-27 18:24:29+00:00,[],None
851,https://github.com/Andrew-LTC/Lab12.git,2021-05-10 17:37:10+00:00,,0,Andrew-LTC/Lab12,366126748,Verilog,Lab12,12,0,2023-01-26 21:07:26+00:00,[],None
852,https://github.com/lplp9312/ee6470_mid_project.git,2021-05-05 08:32:31+00:00,,0,lplp9312/ee6470_mid_project,364510704,Verilog,ee6470_mid_project,29846,0,2021-05-08 18:17:18+00:00,[],None
853,https://github.com/jamesheavey/ELEC5566M-MiniProject.git,2021-05-10 15:15:39+00:00,,0,jamesheavey/ELEC5566M-MiniProject,366086231,Verilog,ELEC5566M-MiniProject,1134253,0,2021-08-04 23:20:00+00:00,[],None
854,https://github.com/Kimsunghyunny/CPU-Velilog.git,2021-05-11 07:35:41+00:00,,0,Kimsunghyunny/CPU-Velilog,366295692,Verilog,CPU-Velilog,172,0,2021-05-11 07:41:26+00:00,[],None
855,https://github.com/hopexp/xpfile.git,2021-05-11 12:02:26+00:00,,0,hopexp/xpfile,366366887,Verilog,xpfile,24,0,2021-05-11 12:21:33+00:00,[],None
856,https://github.com/mmsalehid/Arm-Pipeline.git,2021-05-11 13:43:14+00:00,,0,mmsalehid/Arm-Pipeline,366396012,Verilog,Arm-Pipeline,3,0,2021-05-11 13:55:19+00:00,[],None
857,https://github.com/jelly99709/FPGA-DRAM-Tutorial.git,2021-05-10 07:06:49+00:00,,0,jelly99709/FPGA-DRAM-Tutorial,365949700,Verilog,FPGA-DRAM-Tutorial,11029,0,2021-05-17 06:40:18+00:00,[],None
858,https://github.com/uestc-panda/Cortex_M0_LCD.git,2021-05-10 07:48:48+00:00,,0,uestc-panda/Cortex_M0_LCD,365960724,Verilog,Cortex_M0_LCD,10908,0,2021-09-09 08:38:10+00:00,[],None
859,https://github.com/BamCurti/fsd-21p.git,2021-05-11 16:44:29+00:00,,0,BamCurti/fsd-21p,366451997,,fsd-21p,49,0,2021-09-06 05:04:36+00:00,[],None
860,https://github.com/prajwal1999/IITB-Risc.git,2021-05-10 10:59:00+00:00,,0,prajwal1999/IITB-Risc,366011778,Verilog,IITB-Risc,18,0,2021-05-20 14:20:51+00:00,[],https://api.github.com/licenses/mit
861,https://github.com/unal-edigital1/lab05.git,2021-05-12 17:12:05+00:00,,0,unal-edigital1/lab05,366792705,Verilog,lab05,7,0,2021-05-12 17:33:48+00:00,[],None
862,https://github.com/vermontolympian/ECE2029.git,2021-05-11 02:04:36+00:00,,0,vermontolympian/ECE2029,366228200,Verilog,ECE2029,6748,0,2021-05-11 02:05:43+00:00,[],None
863,https://github.com/HansamalDharmananda/ALU-shift-unit-multiplexer-and-registers.git,2021-05-17 17:28:32+00:00,Designing a simple digital circuit using Verilog HDL,0,HansamalDharmananda/ALU-shift-unit-multiplexer-and-registers,368269114,Verilog,ALU-shift-unit-multiplexer-and-registers,1,0,2021-05-17 17:30:22+00:00,[],None
864,https://github.com/Yangxuhao/my_verilog_prj.git,2021-05-14 09:09:34+00:00,,0,Yangxuhao/my_verilog_prj,367309305,Verilog,my_verilog_prj,26,0,2021-05-19 13:32:23+00:00,[],None
865,https://github.com/spirit-of-belong/gitskills.git,2021-05-13 09:14:04+00:00,,0,spirit-of-belong/gitskills,366995429,Verilog,gitskills,1,0,2021-05-14 02:46:36+00:00,[],None
866,https://github.com/aw13422/Morse-code-translator.git,2021-05-20 04:05:13+00:00,,0,aw13422/Morse-code-translator,369074582,Verilog,Morse-code-translator,1021,0,2021-06-11 03:35:04+00:00,[],None
867,https://github.com/Alec-Battisti/ProjectC-D.git,2021-05-22 02:09:21+00:00,Verilog files for part C and D,0,Alec-Battisti/ProjectC-D,369695483,Verilog,ProjectC-D,15,0,2022-01-11 08:25:27+00:00,[],None
868,https://github.com/olgi9911/Logic-Design.git,2021-05-22 09:41:25+00:00,10920EECS101001,0,olgi9911/Logic-Design,369769963,Verilog,Logic-Design,1466,0,2021-05-22 13:04:56+00:00,[],None
869,https://github.com/mohamed-naeim/RECTANGLE.git,2021-05-22 14:42:07+00:00,,0,mohamed-naeim/RECTANGLE,369831652,Verilog,RECTANGLE,4,0,2021-05-22 14:43:43+00:00,[],None
870,https://github.com/goldrian10/Estructuras2---2021.git,2021-05-21 03:25:26+00:00,,0,goldrian10/Estructuras2---2021,369402234,Verilog,Estructuras2---2021,14,0,2021-05-21 03:27:13+00:00,[],https://api.github.com/licenses/mit
871,https://github.com/cgruda/alu4.git,2021-05-21 17:22:30+00:00,,0,cgruda/alu4,369606916,Verilog,alu4,7762,0,2021-05-21 17:32:56+00:00,[],None
872,https://github.com/vadimpy/comp.git,2021-05-21 04:23:45+00:00,Verilog implementation of simple programmable computer,0,vadimpy/comp,369412232,Verilog,comp,706,0,2021-05-26 16:21:09+00:00,[],None
873,https://github.com/shubhi704/RoboAnt-.git,2021-05-24 05:54:12+00:00,,0,shubhi704/RoboAnt-,370242894,Verilog,RoboAnt-,2,0,2022-08-24 11:26:21+00:00,[],None
874,https://github.com/susansun1999/nonuniform_fb.git,2021-05-06 00:06:47+00:00,,0,susansun1999/nonuniform_fb,364737236,Verilog,nonuniform_fb,42019,0,2021-06-07 16:33:37+00:00,[],None
875,https://github.com/Khallil973/half-adder-verilog.git,2021-05-06 12:58:44+00:00,,0,Khallil973/half-adder-verilog,364911388,Verilog,half-adder-verilog,2,0,2021-05-06 13:10:26+00:00,[],None
876,https://github.com/ray-qwer/ICD_HW2.git,2021-05-04 06:35:23+00:00,counting num of united vertex covers,0,ray-qwer/ICD_HW2,364162304,Verilog,ICD_HW2,4,0,2021-05-05 12:33:25+00:00,[],None
877,https://github.com/houchuanhao/Project_test.git,2021-05-03 14:31:20+00:00,,0,houchuanhao/Project_test,363957868,Verilog,Project_test,8249,0,2021-05-04 07:28:14+00:00,[],None
878,https://github.com/Nada-Askar/RISC-V-FPGA-Implementation-and-Testing.git,2021-05-12 02:40:56+00:00,,0,Nada-Askar/RISC-V-FPGA-Implementation-and-Testing,366571739,Verilog,RISC-V-FPGA-Implementation-and-Testing,916,0,2021-05-12 02:41:13+00:00,[],None
879,https://github.com/Hoanhtai123/Verilog-HDL.git,2021-05-09 13:28:53+00:00,,0,Hoanhtai123/Verilog-HDL,365759575,Verilog,Verilog-HDL,2270,0,2021-05-17 08:42:32+00:00,[],None
880,https://github.com/PrashantMata/BDI-Dynamic-base-compression.git,2021-06-03 10:45:45+00:00,,1,PrashantMata/BDI-Dynamic-base-compression,373472978,Verilog,BDI-Dynamic-base-compression,11651,0,2021-07-06 18:05:22+00:00,[],None
881,https://github.com/yousha806/CCBD_Bootcamp.git,2021-05-18 08:25:00+00:00,,0,yousha806/CCBD_Bootcamp,368455110,Verilog,CCBD_Bootcamp,1139,0,2021-05-18 08:44:51+00:00,[],None
882,https://github.com/kkh831/Convolution_Layer_Hardware.git,2021-05-16 08:14:41+00:00,filtering(weight) input image,0,kkh831/Convolution_Layer_Hardware,367821471,Verilog,Convolution_Layer_Hardware,11,0,2021-05-16 08:17:49+00:00,[],None
883,https://github.com/kkh831/Serial_Adder_Subtractor.git,2021-05-16 08:20:03+00:00,,0,kkh831/Serial_Adder_Subtractor,367822516,Verilog,Serial_Adder_Subtractor,6,0,2021-05-16 08:26:32+00:00,[],None
884,https://github.com/k3shavkish0re/Btech-Project.git,2021-05-19 13:12:31+00:00,,0,k3shavkish0re/Btech-Project,368874215,Verilog,Btech-Project,1269,0,2021-05-19 13:13:16+00:00,[],None
885,https://github.com/konradwilk/sha1.git,2021-06-03 01:19:15+00:00,,0,konradwilk/sha1,373345665,Verilog,sha1,194648,0,2021-07-23 17:54:36+00:00,[],https://api.github.com/licenses/apache-2.0
886,https://github.com/MasoudHeidary/FPGA-Verilog-Simple-ALU.git,2021-06-02 18:32:12+00:00,Advance Logic Circuit Course Exercises,0,MasoudHeidary/FPGA-Verilog-Simple-ALU,373267543,Verilog,FPGA-Verilog-Simple-ALU,3,0,2022-02-27 11:00:50+00:00,"['verilog', 'fpga', 'alu']",https://api.github.com/licenses/mit
887,https://github.com/X-mei/Tetris-Game.git,2021-06-06 02:06:59+00:00,"A Teris Game written in Verilog with self-written CPU(ALU, regfile...)",0,X-mei/Tetris-Game,374248561,Verilog,Tetris-Game,840,0,2021-06-06 02:09:24+00:00,[],None
888,https://github.com/aaron-ev/digital-modules-in-verilog.git,2021-05-29 23:52:21+00:00,Useful digital blocks.,0,aaron-ev/digital-modules-in-verilog,372089496,Verilog,digital-modules-in-verilog,23196,0,2023-08-28 03:13:18+00:00,[],None
889,https://github.com/DonaldHersam/EE271_Project.git,2021-05-06 13:48:21+00:00,,0,DonaldHersam/EE271_Project,364926144,Verilog,EE271_Project,27767,0,2021-05-15 01:18:23+00:00,[],None
890,https://github.com/navaneethM1/Queue-Implementation-on-Hardware.git,2021-05-06 16:54:04+00:00,A FIFO implemented on hardware that supports enqueue and dequeue operations efficiently on hardware,0,navaneethM1/Queue-Implementation-on-Hardware,364979182,Verilog,Queue-Implementation-on-Hardware,75,0,2021-05-06 16:58:32+00:00,[],None
891,https://github.com/Exfruit/Computer_Organization_2021_Spring.git,2021-05-05 09:38:43+00:00,,0,Exfruit/Computer_Organization_2021_Spring,364527177,Verilog,Computer_Organization_2021_Spring,34843,0,2021-07-03 09:31:16+00:00,[],None
892,https://github.com/JAPS01/FPGA-digital-systems-with-verilog.git,2021-05-23 04:26:29+00:00,,0,JAPS01/FPGA-digital-systems-with-verilog,369959902,Verilog,FPGA-digital-systems-with-verilog,524,0,2021-05-23 05:03:08+00:00,[],None
893,https://github.com/pranjal-mittal0/lisnoc.git,2021-05-27 18:34:44+00:00,,0,pranjal-mittal0/lisnoc,371469895,Verilog,lisnoc,505,0,2021-05-27 18:35:02+00:00,[],None
894,https://github.com/ConorChristensen-RMIT/AlarmSystem_Verilog.git,2021-05-25 05:20:01+00:00,"An alarm system developed using Verilog HDL, deployed on a DE10_Nano board. Completed during an FPGA unit - ""Advanced Digital Design""",0,ConorChristensen-RMIT/AlarmSystem_Verilog,370573164,Verilog,AlarmSystem_Verilog,1580,0,2021-05-25 05:22:39+00:00,[],None
895,https://github.com/ray-qwer/DSD_Final.git,2021-05-29 10:09:50+00:00,DSD final project- pipeline RISCV,1,ray-qwer/DSD_Final,371939748,Verilog,DSD_Final,6666,0,2021-06-18 09:01:28+00:00,[],None
896,https://github.com/HariSK20/AsynchronousDecadeCounter.git,2021-05-30 15:09:46+00:00,,0,HariSK20/AsynchronousDecadeCounter,372245647,Verilog,AsynchronousDecadeCounter,9,0,2021-05-30 15:42:38+00:00,[],None
897,https://github.com/Ddiimmaann/RSx15.git,2021-05-28 12:51:13+00:00,15 UART interfaces imitating devices,0,Ddiimmaann/RSx15,371699467,Verilog,RSx15,43,0,2021-05-28 19:00:22+00:00,[],None
898,https://github.com/NoncreativeUsername/combined_Mux_Demux.git,2021-05-28 20:06:22+00:00,practicing using wrappers to connect different modules.,0,NoncreativeUsername/combined_Mux_Demux,371807656,Verilog,combined_Mux_Demux,10,0,2021-06-08 14:47:36+00:00,[],None
899,https://github.com/NoncreativeUsername/7segDecoder.git,2021-05-29 02:42:29+00:00,Verilog 7 segment decoder,0,NoncreativeUsername/7segDecoder,371864379,Verilog,7segDecoder,10,0,2021-06-09 20:06:57+00:00,[],None
900,https://github.com/gokcenacak/PLODE-Backup.git,2021-06-06 20:22:57+00:00,Updated version of PLODE focusing on sequential circuit support,1,gokcenacak/PLODE-Backup,374456514,Verilog,PLODE-Backup,458,0,2021-06-07 16:13:46+00:00,[],None
