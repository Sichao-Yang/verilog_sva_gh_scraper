,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/mirkat1206/2021_Spring_NCTU_ICLAB.git,2021-07-15 03:37:18+00:00,NCTU 2021 Spring Integrated Circuit Design Laboratory,31,mirkat1206/2021_Spring_NCTU_ICLAB,386151757,Verilog,2021_Spring_NCTU_ICLAB,77748,142,2024-03-30 05:46:57+00:00,[],None
1,https://github.com/cucapra/filament.git,2021-08-11 05:59:28+00:00,Fearless hardware design,7,cucapra/filament,394879267,Verilog,filament,4534,125,2024-04-11 09:08:56+00:00,"['fpga', 'hardware-accelerator', 'hardware-description-language', 'type-system']",https://api.github.com/licenses/mit
2,https://github.com/AngeloJacobo/FPGA_Book_Experiments.git,2021-07-17 08:09:25+00:00,"My completed projects from ""FPGA Prototyping by Verilog Examples""  book by Pong P. Chu",15,AngeloJacobo/FPGA_Book_Experiments,386877573,Verilog,FPGA_Book_Experiments,498,67,2024-04-09 04:25:13+00:00,"['fpga', 'verilog', 'projects']",https://api.github.com/licenses/mit
3,https://github.com/HDLForBeginners/Examples.git,2021-07-23 19:54:54+00:00,,20,HDLForBeginners/Examples,388911836,Verilog,Examples,639,55,2024-04-01 02:12:31+00:00,[],https://api.github.com/licenses/mit
4,https://github.com/bit-hack/icesid.git,2021-07-29 22:02:32+00:00,A C64 SID Chip recreation in FPGA,6,bit-hack/icesid,390860603,Verilog,icesid,1019,31,2024-03-18 19:25:18+00:00,"['commodore64', 'emulation', 'fpga', 'gateware', 'ice40up5k', 'lattice-fpga', 'mos6581', 'mos8580']",
5,https://github.com/manili/VSDBabySoC.git,2021-08-05 06:50:59+00:00,"VSDBabySoC is a small mixed-signal SoC including PLL, DAC, and a RISCV-based processor named RVMYTH.",10,manili/VSDBabySoC,392935370,Verilog,VSDBabySoC,12081,29,2024-04-07 06:47:06+00:00,"['system-on-chip', 'mixed-signal', 'digital-to-analog-converter', 'rvmyth', 'risc-v', 'phase-locked-loop']",https://api.github.com/licenses/apache-2.0
6,https://github.com/jgrip/c128-verilog.git,2021-07-11 18:04:40+00:00,Verilog code for C128 custom chips,1,jgrip/c128-verilog,385019616,Verilog,c128-verilog,61900,28,2024-02-26 04:21:22+00:00,[],https://api.github.com/licenses/cc-by-4.0
7,https://github.com/alexforencich/dma-bench.git,2021-08-13 21:49:41+00:00,,11,alexforencich/dma-bench,395806403,Verilog,dma-bench,7712,24,2024-02-04 06:26:10+00:00,[],https://api.github.com/licenses/mit
8,https://github.com/kudelskisecurity/Verilaptor.git,2021-08-10 13:25:14+00:00,,1,kudelskisecurity/Verilaptor,394663735,Verilog,Verilaptor,73,20,2023-07-13 17:31:40+00:00,[],https://api.github.com/licenses/gpl-3.0
9,https://github.com/eminfedar/fedar-e1-rv32i.git,2021-08-03 18:25:33+00:00,5-Stage Pipelined RV32I RISC-V Core design in Verilog-2005. It has 32 GPIO pins and it is FPGA synthesible.,2,eminfedar/fedar-e1-rv32i,392415812,Verilog,fedar-e1-rv32i,40,19,2024-03-31 15:54:16+00:00,[],https://api.github.com/licenses/mit
10,https://github.com/xyfJASON/HITSZ-miniRV-1.git,2021-07-23 11:51:08+00:00,HITSZ 2020春 计算机设计与实践课程，实现基于 miniRV-1 的单周期和流水线CPU,2,xyfJASON/HITSZ-miniRV-1,388784527,Verilog,HITSZ-miniRV-1,3931,17,2024-03-13 06:09:07+00:00,[],None
11,https://github.com/AhmedAalaaa/32-point-FFT-Verilog-design-based-DIT-butterfly-algorithm.git,2021-07-30 14:41:29+00:00,This project aims to design an 32-point FFT (Fast Fourier Transform) based DIT (decimation in time) Butterfly Algorithm with multiple clock domains and time-shared design,3,AhmedAalaaa/32-point-FFT-Verilog-design-based-DIT-butterfly-algorithm,391096744,Verilog,32-point-FFT-Verilog-design-based-DIT-butterfly-algorithm,80,17,2024-04-07 04:22:03+00:00,"['matlab', 'fpga', 'verilog', 'cpp', 'tcl']",None
12,https://github.com/lingbai-kong/computer-system.git,2021-07-25 14:32:30+00:00,同济大学CS《计算机系统实验》实验二TongJi University CS computer system experiment assignment 2《自己动手写 CPU》SOPC实现与操作系统移植,0,lingbai-kong/computer-system,389367544,Verilog,computer-system,114303,14,2024-04-12 02:15:56+00:00,"['fpga', 'big-endian', 'cpu', 'dynamic-pipelines', 'uart', 'wishbone', 'gpio', 'sdcard', 'ddr2', 'tongji-university', 'ucosii', 'sopc', 'openmips']",https://api.github.com/licenses/mit
13,https://github.com/osresearch/psionpi.git,2021-07-15 21:28:46+00:00,Raspberry Pi board to fit in a Psion PDA,0,osresearch/psionpi,386428324,Verilog,psionpi,3863,13,2023-07-01 07:40:48+00:00,[],None
14,https://github.com/WF-2021/BTC_FPGA_MINER.git,2021-07-29 13:41:30+00:00,,5,WF-2021/BTC_FPGA_MINER,390736835,Verilog,BTC_FPGA_MINER,1341,12,2024-04-10 23:33:36+00:00,[],
15,https://github.com/AngeloJacobo/FPGA_Asynchronous_FIFO.git,2021-08-15 03:37:10+00:00,FIFO implementation with different clock domains for read and write.,3,AngeloJacobo/FPGA_Asynchronous_FIFO,396204360,Verilog,FPGA_Asynchronous_FIFO,10,12,2024-02-27 12:07:57+00:00,"['fpga', 'verilog', 'fifo', 'clock-domain-crossing', 'asynchronous']",https://api.github.com/licenses/mit
16,https://github.com/Khalique13/dvsd_pe_sky130.git,2021-08-13 16:33:39+00:00,"This project produces a clean GDSII Layout with all its details that are used to print photomasks used in the fabrication of a behavioral RTL of an 8-bit Priority Encoder, using SkyWater 130 nm PDK.",3,Khalique13/dvsd_pe_sky130,395722378,Verilog,dvsd_pe_sky130,33397,12,2023-07-11 15:00:59+00:00,"['rtl', 'gds', 'openlane']",https://api.github.com/licenses/apache-2.0
17,https://github.com/shalan/AD_SAR_ADC.git,2021-07-13 11:04:51+00:00,Digital Standard Cells based SAR ADC,1,shalan/AD_SAR_ADC,385573925,Verilog,AD_SAR_ADC,30426,11,2024-04-09 01:29:35+00:00,[],https://api.github.com/licenses/apache-2.0
18,https://github.com/Devipriya1921/vsdserializer_v1.git,2021-08-13 14:53:16+00:00,,4,Devipriya1921/vsdserializer_v1,395692112,Verilog,vsdserializer_v1,6827,10,2023-04-25 10:56:43+00:00,[],https://api.github.com/licenses/apache-2.0
19,https://github.com/sally20921/LogicDesignFinalProject.git,2021-08-07 01:18:25+00:00,Logic Design Final Project SNUCSE,10,sally20921/LogicDesignFinalProject,393545401,Verilog,LogicDesignFinalProject,44,10,2021-11-14 19:50:23+00:00,[],None
20,https://github.com/charley871103/TPU.git,2021-07-14 06:21:35+00:00,AI Chip project,4,charley871103/TPU,385835577,Verilog,TPU,1041,9,2024-04-03 10:25:43+00:00,[],None
21,https://github.com/malapatipoojitha/AHB2APB-Bridge.git,2021-08-12 13:09:10+00:00,,3,malapatipoojitha/AHB2APB-Bridge,395322708,Verilog,AHB2APB-Bridge,1620,9,2023-05-26 08:12:07+00:00,[],None
22,https://github.com/paxbun/float-matmul.git,2021-07-13 07:42:22+00:00,Floating-point matrix multiplication implementation (arbitrary precision),3,paxbun/float-matmul,385519834,Verilog,float-matmul,38,8,2023-12-07 12:21:37+00:00,"['verilog', 'floating-point', 'matmul', 'fpga']",https://api.github.com/licenses/mit
23,https://github.com/ConstHall/Computer-Composition-Principle-Experiment.git,2021-07-25 12:39:18+00:00,2020中山大学计算机组成原理实验,1,ConstHall/Computer-Composition-Principle-Experiment,389344270,Verilog,Computer-Composition-Principle-Experiment,61751,8,2024-01-19 11:23:40+00:00,[],None
24,https://github.com/King-ty/PlaneWarGame.git,2021-07-17 15:58:15+00:00,数字逻辑课程设计，飞机大战游戏。使用Verilog开发的基于FPGA的小游戏，代码比较垃圾，仅以此记录那段奋斗的日子~,1,King-ty/PlaneWarGame,386980950,Verilog,PlaneWarGame,11709,8,2024-03-19 03:08:04+00:00,[],https://api.github.com/licenses/mit
25,https://github.com/dineshannayya/usb1_host.git,2021-08-02 07:15:09+00:00,USB1.1 Host Controller + PHY,3,dineshannayya/usb1_host,391849971,Verilog,usb1_host,275,8,2023-08-16 02:43:36+00:00,['usb-host'],https://api.github.com/licenses/apache-2.0
26,https://github.com/shuiki/CPU54.git,2021-07-13 03:01:36+00:00,多周期54条MIPS指令CPU，通过前后仿真及下板验证,1,shuiki/CPU54,385455665,Verilog,CPU54,53291,8,2023-12-26 08:25:12+00:00,[],None
27,https://github.com/merledu/OpenLane_Workshop.git,2021-07-24 21:04:06+00:00,This repository contains the training material for Tapeout Pakistan OpenLane workshop conducted by MERL-UIT.,7,merledu/OpenLane_Workshop,389201025,Verilog,OpenLane_Workshop,59742,7,2023-08-03 11:53:33+00:00,[],None
28,https://github.com/lhrodovalho/AFEBioPICO.git,2021-07-31 00:59:54+00:00,Analog Front End for Bio-Signals - IEEE SSCS PICO,2,lhrodovalho/AFEBioPICO,391222483,Verilog,AFEBioPICO,12688,7,2024-02-17 23:29:07+00:00,[],https://api.github.com/licenses/agpl-3.0
29,https://github.com/RogerDTZ/EGO1-Piano.git,2021-08-04 11:30:53+00:00,,0,RogerDTZ/EGO1-Piano,392663366,Verilog,EGO1-Piano,6433,7,2024-01-01 15:22:19+00:00,[],https://api.github.com/licenses/gpl-2.0
30,https://github.com/Yikai-coder/HITsz_CPU_design.git,2021-07-28 07:32:21+00:00,哈尔滨工业大学（深圳）2021年夏季学期计算机设计与实践课程代码资料。,0,Yikai-coder/HITsz_CPU_design,390257336,Verilog,HITsz_CPU_design,53,7,2023-06-15 14:32:02+00:00,[],None
31,https://github.com/PrashanthHC16/Approximate-Multiplier.git,2021-08-04 08:55:09+00:00,"Approximate Multipliers of 8bit and 16bit operands, built with approximate compressors.",1,PrashanthHC16/Approximate-Multiplier,392617697,Verilog,Approximate-Multiplier,782,7,2024-03-12 07:08:35+00:00,"['approximate', 'multipliers', 'verilog']",https://api.github.com/licenses/mit
32,https://github.com/RTimothyEdwards/chaos_automaton.git,2021-08-08 19:30:57+00:00,Chaos Automaton (efabless Caravel harness digital project),4,RTimothyEdwards/chaos_automaton,394053542,Verilog,chaos_automaton,632782,6,2023-06-26 08:15:48+00:00,[],https://api.github.com/licenses/apache-2.0
33,https://github.com/Lukeli0425/Verilog-Simulation-on-MacOS.git,2021-07-16 08:35:57+00:00,,0,Lukeli0425/Verilog-Simulation-on-MacOS,386567707,Verilog,Verilog-Simulation-on-MacOS,481,6,2023-10-16 05:57:53+00:00,[],None
34,https://github.com/AnLingzhi/h264enc.git,2021-07-26 12:16:38+00:00,,3,AnLingzhi/h264enc,389621539,Verilog,h264enc,61341,6,2023-09-12 15:00:11+00:00,[],None
35,https://github.com/seyfkutluk/ITU_CE_LECTURES.git,2021-07-17 17:49:37+00:00,ITU_CE_LECTURES,0,seyfkutluk/ITU_CE_LECTURES,387004481,Verilog,ITU_CE_LECTURES,392159,6,2024-01-05 17:40:19+00:00,[],None
36,https://github.com/ehsansajadi/SBU-DSD.git,2021-07-12 09:00:07+00:00,Projects of Digital System Design Course,0,ehsansajadi/SBU-DSD,385185821,Verilog,SBU-DSD,5356,5,2022-01-18 06:20:02+00:00,[],None
37,https://github.com/NimaSamadi007/cordic_tanh.git,2021-07-17 05:55:05+00:00,"Tanh function implementation on hardware (FPGA), based on CORDIC algorithms",0,NimaSamadi007/cordic_tanh,386850672,Verilog,cordic_tanh,7,5,2023-07-26 01:37:27+00:00,"['fpga', 'matlab', 'verilog']",https://api.github.com/licenses/mit
38,https://github.com/FDU-ME-ARC/HEAM.git,2021-07-28 02:33:27+00:00,HEAM: High-Efficiency Approximate Multiplier Optimization for Deep Neural Networks,2,FDU-ME-ARC/HEAM,390187881,Verilog,HEAM,53,5,2023-08-23 02:26:44+00:00,[],None
39,https://github.com/xunqianxun/jichuangsai-robei-guosan.git,2021-07-22 03:14:48+00:00,第五届集成电路创新创业大赛robei杯全国三等奖,1,xunqianxun/jichuangsai-robei-guosan,388312926,Verilog,jichuangsai-robei-guosan,9400,5,2023-12-06 02:59:11+00:00,"['verilog', 'fpga', 'image-processing']",None
40,https://github.com/AngeloJacobo/FPGA_I2C_Implementation.git,2021-08-15 03:21:20+00:00,Bit-bang i2c protocol for interfacing with DS1307 RTC,0,AngeloJacobo/FPGA_I2C_Implementation,396201134,Verilog,FPGA_I2C_Implementation,9,5,2023-11-10 07:37:36+00:00,"['fpga', 'verilog', 'i2c', 'ds1307']",https://api.github.com/licenses/mit
41,https://github.com/cospan/ip-cores.git,2021-08-01 01:49:18+00:00,,3,cospan/ip-cores,391499162,Verilog,ip-cores,576,5,2024-03-14 03:50:59+00:00,[],https://api.github.com/licenses/mit
42,https://github.com/georgeyhere/hdmi-core.git,2021-08-11 17:42:02+00:00,A barebones HDMI IP.,0,georgeyhere/hdmi-core,395071276,Verilog,hdmi-core,22,5,2024-04-05 10:01:51+00:00,[],None
43,https://github.com/King-ty/CPU31.git,2021-07-17 16:14:50+00:00,计算机组成原理课程设计，CPU31,0,King-ty/CPU31,386984975,Verilog,CPU31,6717,5,2024-03-19 03:13:00+00:00,[],https://api.github.com/licenses/mit
44,https://github.com/ae-96/DMA.git,2021-08-07 22:09:05+00:00,digital design using Verilog for 8237A HIGH PERFORMANCE PROGRAMMABLE DMA CONTROLLER,0,ae-96/DMA,393802957,Verilog,DMA,6,4,2022-06-09 06:50:24+00:00,[],None
45,https://github.com/CPUchildren/cpu.git,2021-07-19 09:51:38+00:00,,0,CPUchildren/cpu,387415640,Verilog,cpu,285,4,2022-01-04 02:37:56+00:00,[],None
46,https://github.com/usmanaslam712/Convolution-Neural-Network-Using-FPGA.git,2021-08-09 09:38:32+00:00,This project focuses on the implementation of the deep learning method CNN using FPGA as a hardware accelerator.,1,usmanaslam712/Convolution-Neural-Network-Using-FPGA,394232731,Verilog,Convolution-Neural-Network-Using-FPGA,6,4,2024-03-22 07:01:17+00:00,[],https://api.github.com/licenses/mit
47,https://github.com/ycx122/RISC-V-cpu.git,2021-07-13 13:43:09+00:00,一个使用risc-指令集的cpu，五级流水线,1,ycx122/RISC-V-cpu,385618147,Verilog,RISC-V-cpu,39,4,2023-05-26 08:48:54+00:00,[],None
48,https://github.com/GauravSingh789/Customizing_RISC_V.git,2021-07-13 09:39:52+00:00,Implementing ORB Feature detection algorithm on RISC-V Core,2,GauravSingh789/Customizing_RISC_V,385551874,Verilog,Customizing_RISC_V,1618,4,2024-03-12 13:44:28+00:00,[],None
49,https://github.com/sudhamshu091/25-VLSI-Miniprojects.git,2021-07-15 14:07:19+00:00,Implementing all aat topics given to students by college,1,sudhamshu091/25-VLSI-Miniprojects,386312401,Verilog,25-VLSI-Miniprojects,9485,4,2023-11-16 17:22:59+00:00,[],None
50,https://github.com/mnmhdanas/Universal-Shift-Register.git,2021-07-24 14:27:17+00:00,"Universal Shift Register is a register which can be configured to load and/or retrieve the data in any mode (either serial or parallel) by shifting it either towards right or towards left. In other words, a combined design of unidirectional (either right- or left-shift of data bits as in case of SISO, SIPO, PISO, PIPO) and bidirectional shift register along with parallel load provision is referred to as universal shift register.",0,mnmhdanas/Universal-Shift-Register,389117828,Verilog,Universal-Shift-Register,121,3,2023-08-31 15:41:56+00:00,"['digital-electronics', 'shift-register', 'universal-shift-register', 'vlsi-design', 'verilog']",None
51,https://github.com/mocapapa/SpaceInvaders_BSV_Ultra96v2.git,2021-07-23 08:30:56+00:00,,1,mocapapa/SpaceInvaders_BSV_Ultra96v2,388732344,Verilog,SpaceInvaders_BSV_Ultra96v2,3510,3,2023-11-08 03:29:09+00:00,[],None
52,https://github.com/darklyght/darKLYght-SoC.git,2021-07-24 21:33:52+00:00,,1,darklyght/darKLYght-SoC,389206088,Verilog,darKLYght-SoC,301,3,2023-10-11 14:01:27+00:00,[],None
53,https://github.com/Avocadrew/Tic-Tac-Toe.git,2021-08-06 11:57:14+00:00,A Tic-Tac-Toe written in Verilog for implementation in FPGA,0,Avocadrew/Tic-Tac-Toe,393362760,Verilog,Tic-Tac-Toe,21,3,2024-03-09 21:18:12+00:00,"['verilog', 'fpga', 'game']",None
54,https://github.com/EslamAsHhraf/Serial-Peripheral-Interface.git,2021-07-30 21:49:50+00:00,"📡 In this project, we only focus on the Multi-Slave Regular Mode. We design and implement the following components of the SPI modules using Verilog such that they match the requirements of the development testbench and match the SPI specifications (Master - Slave - Self-Checking Testbenches for the Master and Slave)",2,EslamAsHhraf/Serial-Peripheral-Interface,391194412,Verilog,Serial-Peripheral-Interface,2317,3,2023-11-08 06:16:12+00:00,"['verilog', 'cufe-2024', 'master-slave', 'modelsim']",https://api.github.com/licenses/mit
55,https://github.com/InfinitelyAsymptotic/AMBA-APB4-Bridge-Interface.git,2021-07-30 06:57:59+00:00,Designed for Blueberry Semiconductors as a part of Project Deliverable. ,1,InfinitelyAsymptotic/AMBA-APB4-Bridge-Interface,390964449,Verilog,AMBA-APB4-Bridge-Interface,78,3,2023-10-21 08:29:44+00:00,[],None
56,https://github.com/Darvock2640/ArquitecturaProcesadores.git,2021-08-12 22:58:02+00:00,Este es el repositorio de la clase de Arquitectura de Procesadores,0,Darvock2640/ArquitecturaProcesadores,395463067,Verilog,ArquitecturaProcesadores,2751,3,2022-11-01 14:00:32+00:00,[],None
57,https://github.com/embedded-explorer/Verilog-Learning.git,2021-07-11 09:17:35+00:00,This repo documents the learning of verilog HDL from various resources,0,embedded-explorer/Verilog-Learning,384905286,Verilog,Verilog-Learning,469,3,2022-07-19 15:51:27+00:00,[],None
58,https://github.com/FilippoCheein/Runge_Kutta_FPGA.git,2021-08-13 18:31:44+00:00,,1,FilippoCheein/Runge_Kutta_FPGA,395755764,Verilog,Runge_Kutta_FPGA,24187,3,2023-12-10 10:48:40+00:00,[],None
59,https://github.com/OhGodAPet/NXS-FPGA.git,2021-07-31 19:50:39+00:00,NXS FPGA Verilog,4,OhGodAPet/NXS-FPGA,391451015,Verilog,NXS-FPGA,5028,3,2022-11-18 06:11:02+00:00,[],None
60,https://github.com/shariethernet/Infiresv0.1-RV32IC-Core.git,2021-07-27 07:26:02+00:00,"""Infires"" is a series of RISC-V Cores developed using TL-Verilog. Infiresv0.1.x consists of different pipelined variants RV32I/C Cores. ",1,shariethernet/Infiresv0.1-RV32IC-Core,389887533,Verilog,Infiresv0.1-RV32IC-Core,5394,3,2022-01-11 19:09:20+00:00,"['tl-verilog', 'systemverilog', 'risc-v', 'riscv32']",None
61,https://github.com/hwiiiii/sky130A.git,2021-08-09 06:37:19+00:00,,0,hwiiiii/sky130A,394178447,Verilog,sky130A,132267,3,2023-02-28 16:50:09+00:00,[],https://api.github.com/licenses/apache-2.0
62,https://github.com/Ikarthikmb/dvsd_wt8216m.git,2021-08-01 13:57:33+00:00,IP layout design of a 8-bit binary multiplier using sky130 pdk with OpenLane,2,Ikarthikmb/dvsd_wt8216m,391641794,Verilog,dvsd_wt8216m,39687,3,2023-11-06 02:33:34+00:00,[],None
63,https://github.com/XinyiYuan/Computer_Architecture.git,2021-07-19 15:45:05+00:00,大三上计算机体系结构研讨课 源代码,1,XinyiYuan/Computer_Architecture,387516141,Verilog,Computer_Architecture,6831,3,2023-10-23 10:06:11+00:00,[],None
64,https://github.com/1211562881/RV64I-CPU.git,2021-07-18 13:08:42+00:00,RV64I CPU,0,1211562881/RV64I-CPU,387178427,Verilog,RV64I-CPU,13,3,2021-10-02 04:58:31+00:00,[],None
65,https://github.com/aditya1746/Gaussian-Filter-Verilog-Implementation-.git,2021-08-05 10:07:30+00:00,,0,aditya1746/Gaussian-Filter-Verilog-Implementation-,392994235,Verilog,Gaussian-Filter-Verilog-Implementation-,3123,3,2022-11-14 08:45:40+00:00,[],None
66,https://github.com/shivanishah269/Encryption_Algorithm_RSA_on_FPGA.git,2021-07-19 07:53:47+00:00,This project is done as a part of System Design with FPGA course.,0,shivanishah269/Encryption_Algorithm_RSA_on_FPGA,387383511,Verilog,Encryption_Algorithm_RSA_on_FPGA,150,3,2023-07-04 12:15:41+00:00,"['rsa-algorithm', 'fpga', 'verilog']",None
67,https://github.com/regymm/ymmepm.git,2021-08-07 01:34:15+00:00,Altera MAX II EPM1270 development board and more,1,regymm/ymmepm,393547860,Verilog,ymmepm,1058,3,2022-02-24 22:00:07+00:00,[],https://api.github.com/licenses/gpl-3.0
68,https://github.com/ad9933/FPGA_AcceleratorWrapper.git,2021-07-29 17:21:03+00:00,Accelerator wrapper with AXI3 DMA and AXI Lite for control,2,ad9933/FPGA_AcceleratorWrapper,390800627,Verilog,FPGA_AcceleratorWrapper,23,3,2024-02-06 08:55:46+00:00,[],None
69,https://github.com/DaimonG/128bitEncryptionCorePlaceAndRoute.git,2021-07-20 02:45:09+00:00,A project detailing the steps required to perform a full place and route using Cadence Innovus of a 128-bit core. ,0,DaimonG/128bitEncryptionCorePlaceAndRoute,387652178,Verilog,128bitEncryptionCorePlaceAndRoute,45073,3,2024-02-28 03:57:29+00:00,[],None
70,https://github.com/naoki9911/seccamp2021-l3.git,2021-08-04 08:05:28+00:00,,0,naoki9911/seccamp2021-l3,392603217,Verilog,seccamp2021-l3,34,3,2021-09-12 09:03:36+00:00,[],None
71,https://github.com/Xuyang-FD/FSRCNN_Acc.git,2021-07-27 07:46:41+00:00,The hardware accelerator of FSRCNN for SR,0,Xuyang-FD/FSRCNN_Acc,389893304,Verilog,FSRCNN_Acc,1650,3,2023-10-14 03:20:36+00:00,[],https://api.github.com/licenses/mit
72,https://github.com/Banben07/clock.git,2021-07-15 13:02:28+00:00,用de2-115实现简易时钟,0,Banben07/clock,386292039,Verilog,clock,138,3,2023-10-24 14:51:01+00:00,[],None
73,https://github.com/abdelazeem201/Implementation-of-High-Speed-Microcontroller-for-Display-Applications..git,2021-07-17 20:39:53+00:00,"The System on Chip (SoC) prototyped in 180-nm CMOS occupies a chip area of 7.84 mm2 and dissipates 96.24uW from a 1.8 V supply at 100 MHz. Next, the design was synthesized with SMIC 180nm CMOS technology at Design Compiler platform, and the synthesis results show that the design fully met the design requirement. Subsequently, the design was physically implemented using the Place and Route flow, including the normal steps like Floorplanning, placement, optimization, clock tree synthesis (CTS) and routing. Finally, the design was verified by a series of verification and performance evaluation tests to guarantee its functionality and performance, using Encounter.",0,abdelazeem201/Implementation-of-High-Speed-Microcontroller-for-Display-Applications.,387033062,Verilog,Implementation-of-High-Speed-Microcontroller-for-Display-Applications.,6619,3,2024-01-13 11:09:57+00:00,[],None
74,https://github.com/LexTran/Demo-CPU_using-FPGA.git,2021-07-17 10:53:56+00:00,A noobie prj using FPGA to realize a cpu,0,LexTran/Demo-CPU_using-FPGA,386912508,Verilog,Demo-CPU_using-FPGA,22,2,2021-08-01 09:14:59+00:00,[],https://api.github.com/licenses/mit
75,https://github.com/yvesemmanuel/introduction_verilog.git,2021-08-11 04:11:57+00:00,digital systems,0,yvesemmanuel/introduction_verilog,394858711,Verilog,introduction_verilog,207,2,2023-08-10 18:02:01+00:00,"['verilog-project', 'verilog-components', 'verilog', 'digital-systems']",None
76,https://github.com/dngtuankiet/aes-gcm_128-256.git,2021-07-13 02:26:54+00:00,,0,dngtuankiet/aes-gcm_128-256,385448019,Verilog,aes-gcm_128-256,16432,2,2023-06-23 09:05:05+00:00,[],None
77,https://github.com/horrhamid/noise-detection.git,2021-07-13 14:07:51+00:00,salt and pepper noise detection using verilog,0,horrhamid/noise-detection,385625918,Verilog,noise-detection,1025,2,2022-10-19 22:17:17+00:00,[],https://api.github.com/licenses/mit
78,https://github.com/revaldinho/cpc_cpucard.git,2021-08-01 16:40:46+00:00,External Z80 Card for Amstrad CPC Computers,0,revaldinho/cpc_cpucard,391682494,Verilog,cpc_cpucard,452,2,2022-04-12 04:36:03+00:00,[],https://api.github.com/licenses/gpl-3.0
79,https://github.com/mnmhdanas/JK-Flipflop.git,2021-07-25 06:46:02+00:00,"The J-K flip-flop is the most versatile of the basic flip-flops. It has the input- following character of the clocked D flip-flop but has two inputs,traditionally labeled J and K. If J and K are different then the output Q takes the value of J at the next clock edge.If J and K are both low then no change occurs. If J and K are both high at the clock edge then the output will toggle from one state to the other. It can perform the functions of the set/reset flip-flop and has the advantage that there are no ambiguous states. It can also act as a T flip-flop to accomplish toggling action if J and K are tied together.",0,mnmhdanas/JK-Flipflop,389280892,Verilog,JK-Flipflop,45,2,2023-02-14 20:07:58+00:00,[],None
80,https://github.com/escapefreeg/tiny-cpu.git,2021-07-18 11:36:57+00:00,多周期多流水带冲突处理的CPU,0,escapefreeg/tiny-cpu,387160828,Verilog,tiny-cpu,12,2,2023-12-05 14:33:59+00:00,[],None
81,https://github.com/AdamLee23/simple_uart.git,2021-08-11 02:56:25+00:00,,1,AdamLee23/simple_uart,394843498,Verilog,simple_uart,713,2,2024-02-01 02:47:47+00:00,[],None
82,https://github.com/tanvirarafin/vlsi-cad.git,2021-07-28 16:47:14+00:00,,6,tanvirarafin/vlsi-cad,390428322,Verilog,vlsi-cad,309303,2,2024-02-27 20:54:05+00:00,[],None
83,https://github.com/pr-mittal/beta-risc.git,2021-07-19 07:38:29+00:00,Implementation of Beta Architecture with Reduced Instruction Set Architecture in Verilog,1,pr-mittal/beta-risc,387379547,Verilog,beta-risc,205,2,2023-09-07 05:42:15+00:00,[],https://api.github.com/licenses/mit
84,https://github.com/ray33ee/BitcoinHash-Verilog.git,2021-08-05 12:18:20+00:00,A Verilog implementation of the Bitcoin hashing algorithm,0,ray33ee/BitcoinHash-Verilog,393031003,Verilog,BitcoinHash-Verilog,9837,2,2023-06-10 05:57:25+00:00,[],None
85,https://github.com/SparcLab/Syn-STELLAR.git,2021-07-26 18:47:21+00:00,,0,SparcLab/Syn-STELLAR,389736593,Verilog,Syn-STELLAR,1355,2,2024-02-01 14:06:26+00:00,[],https://api.github.com/licenses/gpl-3.0
86,https://github.com/DownRangeDave/Bitcoin-Verilog.git,2021-07-15 02:33:48+00:00,Making a Bitcoin miner in verilog.,0,DownRangeDave/Bitcoin-Verilog,386138160,Verilog,Bitcoin-Verilog,70,2,2023-02-18 14:12:17+00:00,[],None
87,https://github.com/sa9978/Logic-Circuits-Final-Project.git,2021-07-19 14:53:44+00:00,,0,sa9978/Logic-Circuits-Final-Project,387500821,Verilog,Logic-Circuits-Final-Project,1960,2,2024-02-06 18:11:20+00:00,[],None
88,https://github.com/CYOUNG-19/RISC_V-singlecycle-CPU.git,2021-07-13 07:46:59+00:00,鉴于网上RISC v版单周期CPU完整资料较少，基本无能够直接运行版本，上传代码，仅供大家参考。相关问题可以联系作者sunshinesheep9@gmail.com。,0,CYOUNG-19/RISC_V-singlecycle-CPU,385521076,Verilog,RISC_V-singlecycle-CPU,14,2,2023-04-05 01:25:40+00:00,"['cpu', 'risc-v', 'riscv']",None
89,https://github.com/mayank-kabra2001/WARPV-TSMC.git,2021-08-04 12:39:38+00:00,,0,mayank-kabra2001/WARPV-TSMC,392683583,Verilog,WARPV-TSMC,4814,2,2023-10-24 00:36:06+00:00,[],None
90,https://github.com/Rajlee3107/HDLBits_Solution_Rajlee.git,2021-07-11 02:11:22+00:00,,0,Rajlee3107/HDLBits_Solution_Rajlee,384842340,Verilog,HDLBits_Solution_Rajlee,38,2,2021-08-14 16:23:53+00:00,[],None
91,https://github.com/mnmhdanas/Parallel-IN-Parallel-OUT.git,2021-07-24 15:56:28+00:00,"In this type of register, there are no interconnections between the individual flip-flops since no serial shifting of the data is required. Data is given as input separately for each flip flop and in the same way, output also collected individually from each flip flop.",0,mnmhdanas/Parallel-IN-Parallel-OUT,389139104,Verilog,Parallel-IN-Parallel-OUT,51,2,2023-02-14 20:08:00+00:00,"['digital-electronics', 'verilog', 'shift-register', 'pipo']",None
92,https://github.com/HorseC/FPGA-Verilog.git,2021-07-29 02:28:48+00:00,Verilog 的各个常用模块,0,HorseC/FPGA-Verilog,390574819,Verilog,FPGA-Verilog,8,2,2021-07-30 13:41:20+00:00,[],None
93,https://github.com/zhu849/FPGA-based-TCAM.git,2021-07-19 13:33:08+00:00,Implementation TCAM use distruted RAM by virtex-7 FPGA.,0,zhu849/FPGA-based-TCAM,387475387,Verilog,FPGA-based-TCAM,5339,2,2023-11-21 03:17:54+00:00,[],None
94,https://github.com/yatharthsaxena17/AHBtoAPB-Bridge.git,2021-07-22 16:31:39+00:00,,0,yatharthsaxena17/AHBtoAPB-Bridge,388529391,Verilog,AHBtoAPB-Bridge,30978,2,2023-05-15 08:00:19+00:00,[],None
95,https://github.com/yaohsiaopid/multicore_vscale_rtl2uspec_ae.git,2021-07-28 19:06:02+00:00,,0,yaohsiaopid/multicore_vscale_rtl2uspec_ae,390472239,Verilog,multicore_vscale_rtl2uspec_ae,68,2,2021-10-29 03:52:49+00:00,[],
96,https://github.com/18521449/Image-Classification-use-VGG16.git,2021-07-18 11:23:28+00:00,,0,18521449/Image-Classification-use-VGG16,387158432,Verilog,Image-Classification-use-VGG16,1280,2,2023-12-04 16:20:57+00:00,[],None
97,https://github.com/tastynoob/RITTER-RISCV-CORE.git,2021-07-25 06:22:00+00:00,Five-stage pipeline riscv kernel designed with verilog,0,tastynoob/RITTER-RISCV-CORE,389277349,Verilog,RITTER-RISCV-CORE,620,2,2022-05-16 08:16:17+00:00,[],None
98,https://github.com/mnmhdanas/8-3-Priority-encoder.git,2021-08-02 13:34:19+00:00,"A 4 to 2 priority encoder has 4 inputs : Y3, Y2, Y1 & Y0 and 2 outputs : A1 & A0. Here, the input, Y3 has the highest priority, whereas the input, Y0 has the lowest priority. In this case, even if more than one input is ‘1’ at the same time, the output will be the (binary) code corresponding to the input, which is having higher priority.",0,mnmhdanas/8-3-Priority-encoder,391961497,Verilog,8-3-Priority-encoder,2,2,2023-02-14 20:07:50+00:00,[],None
99,https://github.com/dxmake/SipeedLicheeTangNano.git,2021-08-06 02:23:32+00:00,Sipeed Lichee Tang Nano simple FPGA Projects.,0,dxmake/SipeedLicheeTangNano,393224024,Verilog,SipeedLicheeTangNano,23,2,2023-09-05 15:42:01+00:00,[],https://api.github.com/licenses/gpl-3.0
100,https://github.com/Wolf-Tungsten/chisel-bitonic-sort.git,2021-07-20 04:36:40+00:00,Bitonic Sort Implementation in Chisel,1,Wolf-Tungsten/chisel-bitonic-sort,387672886,Verilog,chisel-bitonic-sort,107,2,2023-11-28 07:20:39+00:00,[],None
101,https://github.com/mnmhdanas/D-flipflop.git,2021-07-25 04:07:52+00:00,The D flip-flop is an edge triggered device which transfers input data to Q on clock rising or falling edge.,0,mnmhdanas/D-flipflop,389257825,Verilog,D-flipflop,89,2,2023-02-14 20:07:59+00:00,[],None
102,https://github.com/yuchangyuan/run_c_snippet_on_picorv32.git,2021-07-18 11:12:25+00:00,A step by step guide to run trival C snippet on picorv32 core with simulator,0,yuchangyuan/run_c_snippet_on_picorv32,387156402,Verilog,run_c_snippet_on_picorv32,237,2,2023-11-12 07:53:34+00:00,[],https://api.github.com/licenses/gpl-3.0
103,https://github.com/imocanu/pe_fpu.git,2021-08-08 19:17:28+00:00,Chisel project,0,imocanu/pe_fpu,394050748,Verilog,pe_fpu,92839,2,2023-05-24 14:58:45+00:00,[],https://api.github.com/licenses/apache-2.0
104,https://github.com/kazuki-hr/rv-pc.git,2021-08-01 06:17:52+00:00,,4,kazuki-hr/rv-pc,391544365,Verilog,rv-pc,275,2,2023-04-01 10:05:33+00:00,[],https://api.github.com/licenses/mit
105,https://github.com/AnLingzhi/OSenLogic264decoder.git,2021-07-26 12:24:05+00:00,,1,AnLingzhi/OSenLogic264decoder,389623444,Verilog,OSenLogic264decoder,5442,2,2022-12-14 03:55:09+00:00,[],None
106,https://github.com/alpgurlee/FBU-CPU-RTL.git,2021-07-13 08:13:42+00:00,Fbu işlemcisi,0,alpgurlee/FBU-CPU-RTL,385528409,Verilog,FBU-CPU-RTL,2089,1,2021-07-26 08:51:35+00:00,[],None
107,https://github.com/8G6/basics-of-verilog.git,2021-07-20 12:46:36+00:00,,0,8G6/basics-of-verilog,387789562,Verilog,basics-of-verilog,4,1,2022-03-13 07:34:00+00:00,[],None
108,https://github.com/asiagodtonegg3beo/FPGA-Flappy-bird.git,2021-07-24 11:06:32+00:00,,0,asiagodtonegg3beo/FPGA-Flappy-bird,389076333,Verilog,FPGA-Flappy-bird,24542,1,2021-08-10 07:05:49+00:00,[],None
109,https://github.com/mnmhdanas/UP-DOWN-Counter.git,2021-07-25 02:55:20+00:00,"4 bit up down counter counts from 0000 to 1111 if control input is set HIGH ,else it would count from 1111 to 0000. it can be build by cascading 4 nos of D flipflops with a mux at the input node to choose between UP/DOWN",0,mnmhdanas/UP-DOWN-Counter,389246052,Verilog,UP-DOWN-Counter,62,1,2023-02-14 20:08:08+00:00,"['digital-electronics', 'verilog', 'counter', 'updown-counter']",None
110,https://github.com/DylanDing54/OSCPU.git,2021-08-10 09:02:11+00:00,,0,DylanDing54/OSCPU,394588775,Verilog,OSCPU,274,1,2021-08-10 21:53:20+00:00,[],None
111,https://github.com/vjabarca/Floating-Point-Adder-Multiplier.git,2021-08-10 03:32:53+00:00,This is a synthesizable block that adds six floating point numbers (in groups of two) and multiplies the results,0,vjabarca/Floating-Point-Adder-Multiplier,394514027,Verilog,Floating-Point-Adder-Multiplier,8404,1,2021-08-10 04:42:58+00:00,[],None
112,https://github.com/ErickHDdS/Tomasulo.git,2021-08-14 17:37:23+00:00,,0,ErickHDdS/Tomasulo,396081714,,Tomasulo,7083,1,2021-08-24 20:43:50+00:00,[],None
113,https://github.com/xolod79/hp300_MiSTer.git,2021-08-02 10:33:48+00:00,HP9000/300 core for MiSTer,1,xolod79/hp300_MiSTer,391907085,Verilog,hp300_MiSTer,2682,1,2024-01-23 16:33:19+00:00,[],https://api.github.com/licenses/gpl-2.0
114,https://github.com/SuhailAhamed2000/full-adder.git,2021-07-24 15:04:53+00:00,"A full adder circuit is central to most digital circuits that perform addition or subtraction. It is so called because it adds together two binary digits, plus a carry-in digit to produce a sum and carry-out digit.1 It therefore has three inputs and two outputs.",0,SuhailAhamed2000/full-adder,389127063,Verilog,full-adder,3,1,2024-02-21 15:11:47+00:00,"['verilog', 'vlsi', 'vlsi-design', 'digital']",None
115,https://github.com/thummala-sathvika/Adders_using_verilog.git,2021-07-19 15:02:38+00:00,,0,thummala-sathvika/Adders_using_verilog,387503530,Verilog,Adders_using_verilog,28,1,2021-08-06 07:23:53+00:00,[],None
116,https://github.com/vatsalya-gupta/8-bit-Microcontroller-Verilog.git,2021-07-28 18:20:49+00:00,8-bit Microcontroller Design simulated and verified using Icarus Verilog.,0,vatsalya-gupta/8-bit-Microcontroller-Verilog,390458973,Verilog,8-bit-Microcontroller-Verilog,500,1,2022-01-09 22:38:57+00:00,[],https://api.github.com/licenses/mit
117,https://github.com/hao0527/fpga-freq_measure_uart.git,2021-08-14 09:12:54+00:00,等精度频率计，串口打印,1,hao0527/fpga-freq_measure_uart,395954280,Verilog,fpga-freq_measure_uart,3,1,2022-07-24 15:18:05+00:00,[],None
118,https://github.com/mehrangoli/RISC-V-RV32I-Single-Cycle.git,2021-07-23 14:49:06+00:00,,0,mehrangoli/RISC-V-RV32I-Single-Cycle,388834556,Verilog,RISC-V-RV32I-Single-Cycle,12,1,2023-11-05 15:25:31+00:00,[],None
119,https://github.com/YUZehuiIC/Full-Adder.git,2021-07-26 16:25:50+00:00,Full Adder and Testbench in Verilog.,0,YUZehuiIC/Full-Adder,389698316,Verilog,Full-Adder,673,1,2021-07-26 17:22:24+00:00,[],None
120,https://github.com/Nallinikanth18/Vending_Machine.git,2021-07-27 07:50:51+00:00,Vending Machine implementation on Verilog,0,Nallinikanth18/Vending_Machine,389894480,Verilog,Vending_Machine,21,1,2022-10-12 17:08:22+00:00,[],None
121,https://github.com/Soma-B/ProyectoF_Digitales.git,2021-07-21 17:15:59+00:00,Inserte hablada aqui,0,Soma-B/ProyectoF_Digitales,388192569,Verilog,ProyectoF_Digitales,78,1,2021-07-26 21:22:08+00:00,[],None
122,https://github.com/a20815579/Whack_A_Mole_on_FPGA.git,2021-08-04 13:16:44+00:00,基於FPGA的打地鼠遊戲,0,a20815579/Whack_A_Mole_on_FPGA,392695035,Verilog,Whack_A_Mole_on_FPGA,4,1,2022-06-20 15:33:42+00:00,[],None
123,https://github.com/huygovap1711/FLOATING_POINT-_ALU_32BIT.git,2021-07-21 08:06:14+00:00,Design a floating point ALU 32 bit ,0,huygovap1711/FLOATING_POINT-_ALU_32BIT,388042355,Verilog,FLOATING_POINT-_ALU_32BIT,3086,1,2022-07-01 16:23:25+00:00,[],
124,https://github.com/mnmhdanas/SPI-protocol.git,2021-07-27 15:08:14+00:00,"SPI is a synchronous, full duplex master-slave-based interface. The data from the master or the slave is synchronized on the rising or falling clock edge based on mode .Both master and slave can transmit data at the same time. The SPI interface got 4 wires.",1,mnmhdanas/SPI-protocol,390028173,Verilog,SPI-protocol,15,1,2023-02-14 20:07:13+00:00,"['verilog', 'spi', 'spi-protocol', 'spi-interface', 'digital-design', 'vlsi']",None
125,https://github.com/Penchal9959/DUAL-PORT-RAM.git,2021-08-12 01:40:02+00:00,"Dual-ported RAM (DPRAM) is a type of random-access memory that allows multiple reads or writes to occur at the same time, or nearly the same time, unlike single-ported RAM which allows only one access at a time.",0,Penchal9959/DUAL-PORT-RAM,395162183,Verilog,DUAL-PORT-RAM,33,1,2022-01-07 14:49:12+00:00,[],None
126,https://github.com/LuciferDarkStar/USTC_2021_CA_RISC-V.git,2021-07-14 11:29:05+00:00,,0,LuciferDarkStar/USTC_2021_CA_RISC-V,385916123,Verilog,USTC_2021_CA_RISC-V,71498,1,2023-05-05 09:32:05+00:00,[],https://api.github.com/licenses/mit
127,https://github.com/Rohit-Mundada/Approximate-Circuits.git,2021-08-04 06:39:04+00:00,,0,Rohit-Mundada/Approximate-Circuits,392578608,Verilog,Approximate-Circuits,47624,1,2022-06-11 09:36:59+00:00,[],None
128,https://github.com/nadeenay/SPI.git,2021-08-12 16:39:05+00:00," Full SPI Module protocol ( Master ,Slave ,Test benches )",0,nadeenay/SPI,395383556,Verilog,SPI,4,1,2023-07-19 09:40:54+00:00,[],None
129,https://github.com/LRandall76/Verilog_Schoolwork.git,2021-07-26 20:26:30+00:00,,0,LRandall76/Verilog_Schoolwork,389759649,Verilog,Verilog_Schoolwork,5088,1,2021-07-26 20:54:32+00:00,[],None
130,https://github.com/advaith-aduri/UTMI.git,2021-07-31 17:58:00+00:00,,0,advaith-aduri/UTMI,391428309,Verilog,UTMI,193,1,2023-09-21 10:26:05+00:00,[],None
131,https://github.com/jsmendaros/riscv-pipelined.git,2021-07-12 15:54:40+00:00,Pipelined RISC-V 64-bit processor implementation in Verilog,1,jsmendaros/riscv-pipelined,385302517,Verilog,riscv-pipelined,14,1,2022-09-26 04:42:32+00:00,[],https://api.github.com/licenses/mit
132,https://github.com/AryaCherukuri/fpga_project.git,2021-07-13 01:56:07+00:00,,0,AryaCherukuri/fpga_project,385441008,Verilog,fpga_project,14,1,2021-12-20 20:09:10+00:00,[],None
133,https://github.com/XDH-233/Risc-V.git,2021-07-15 02:27:36+00:00,,0,XDH-233/Risc-V,386136911,Verilog,Risc-V,817,1,2023-10-07 08:47:00+00:00,[],None
134,https://github.com/Papu-RTL-Work/I2C_Master.git,2021-07-22 05:24:21+00:00,This is my i2c master controller project,0,Papu-RTL-Work/I2C_Master,388337381,Verilog,I2C_Master,198,1,2023-06-11 14:13:50+00:00,[],None
135,https://github.com/SuhailAhamed2000/SIPO.git,2021-07-25 14:03:03+00:00,"The shift register, which allows serial input (one bit after the other through a single data line) and produces a parallel output is known as Serial-In Parallel-Out shift register.",0,SuhailAhamed2000/SIPO,389361050,Verilog,SIPO,1,1,2022-10-07 11:10:45+00:00,"['verilog', 'shift-register', 'sipo']",None
136,https://github.com/contemplated/32-cpu.git,2021-08-06 17:44:54+00:00,计算机组成原理大作业,0,contemplated/32-cpu,393456071,Verilog,32-cpu,12,1,2022-05-30 16:17:29+00:00,[],None
137,https://github.com/ChetanPrakash057/Implementation-of-Traffic-Light-Controller.git,2021-08-02 06:12:19+00:00,Designed Traffic Light Controller for detecting the density of vehicles at city road and allow them to cross the highway in an organized manner.,0,ChetanPrakash057/Implementation-of-Traffic-Light-Controller,391834692,Verilog,Implementation-of-Traffic-Light-Controller,523,1,2021-08-03 13:09:49+00:00,[],https://api.github.com/licenses/gpl-3.0
138,https://github.com/ayush129/FPGA_BOT.git,2021-08-02 11:07:49+00:00,"Developed a line follower bot with colour sensing and wireless communication capabilities with the help of  DEO nano, Altera CYCLONE IV FPGA.",0,ayush129/FPGA_BOT,391917100,Verilog,FPGA_BOT,55,1,2023-02-21 10:01:09+00:00,[],None
139,https://github.com/SamAgarwal20/Combinatorial_Circuits.git,2021-07-23 13:48:07+00:00,"This repository contains some elementary combinatorial circuits with their test benches, vcd files and original code",0,SamAgarwal20/Combinatorial_Circuits,388816390,Verilog,Combinatorial_Circuits,34,1,2022-02-26 11:41:20+00:00,[],None
140,https://github.com/Dhanraj98/16-bit-brent-Kung-adder.git,2021-07-26 17:10:17+00:00,,0,Dhanraj98/16-bit-brent-Kung-adder,389710756,Verilog,16-bit-brent-Kung-adder,1000,1,2021-08-15 18:22:51+00:00,[],None
141,https://github.com/Zylanx/SIT329_Week_2.git,2021-07-26 16:48:21+00:00,,0,Zylanx/SIT329_Week_2,389704583,Verilog,SIT329_Week_2,17587,1,2023-09-02 03:44:28+00:00,[],None
142,https://github.com/pradeep448/zynq-FPGA-projects.git,2021-07-19 05:03:40+00:00,,0,pradeep448/zynq-FPGA-projects,387344795,Verilog,zynq-FPGA-projects,142,1,2022-01-02 14:00:05+00:00,[],None
143,https://github.com/akashjha25/aes-decryption.git,2021-07-23 08:42:28+00:00,Verilog code for decryption part of 128-aes.,0,akashjha25/aes-decryption,388735467,Verilog,aes-decryption,7,1,2023-09-13 18:16:44+00:00,"['aes-decryption', 'verilog']",None
144,https://github.com/parnabghosh1004/FIFO-memory.git,2021-08-03 07:15:05+00:00,Behavioral implementation of basic FIFO ( First In First Out ) memory in verilog,0,parnabghosh1004/FIFO-memory,392226109,Verilog,FIFO-memory,7,1,2022-05-20 07:50:18+00:00,[],None
145,https://github.com/faizaan22/IITB-RISC-processor.git,2021-07-21 10:31:22+00:00,This project is a part of processor design (EE-739) course at IIT-Bombay,0,faizaan22/IITB-RISC-processor,388080847,Verilog,IITB-RISC-processor,1642,1,2022-06-23 07:56:44+00:00,[],None
146,https://github.com/Ivan-Zhong/MIPS_SingleCycle_CPU54.git,2021-07-12 09:47:38+00:00,,0,Ivan-Zhong/MIPS_SingleCycle_CPU54,385198719,Verilog,MIPS_SingleCycle_CPU54,5553,1,2022-12-22 03:26:17+00:00,[],None
147,https://github.com/santoshkrishna4138/LDPC_CheckNode_GF16.git,2021-07-24 07:26:05+00:00,This repository contains the code for the check node processing block of a non-binary LDPC Decoder (GF-16).,1,santoshkrishna4138/LDPC_CheckNode_GF16,389030720,Verilog,LDPC_CheckNode_GF16,985,1,2022-08-04 12:55:03+00:00,[],None
148,https://github.com/texelec/ResoundNewWaveMCA.git,2021-07-25 00:33:43+00:00,Resound New Wave MCA Derived from Snark Barker MCA,0,texelec/ResoundNewWaveMCA,389227027,Verilog,ResoundNewWaveMCA,1138,1,2021-11-10 18:11:26+00:00,[],None
149,https://github.com/YUZehuiIC/State-Machine.git,2021-07-26 16:39:02+00:00,State Machine and Testbench in Verilog.,0,YUZehuiIC/State-Machine,389702008,Verilog,State-Machine,656,1,2021-07-26 17:22:21+00:00,[],None
150,https://github.com/mihirvora04/MIPS-Single_Cycle_Datapath.git,2021-07-30 06:40:44+00:00,"Single Cycle Datapath implementation of MIPS architecture. This implementation can execute R-type (and, or, add, subtract, slt, nor, floating point addition), lw, sw and beq instructions.",0,mihirvora04/MIPS-Single_Cycle_Datapath,390959933,Verilog,MIPS-Single_Cycle_Datapath,477,1,2022-12-06 04:05:43+00:00,[],None
151,https://github.com/DenizRumet/Direction_Detection.git,2021-07-27 09:34:49+00:00,Direction detection for signals with phase difference.,0,DenizRumet/Direction_Detection,389925428,Verilog,Direction_Detection,3,1,2021-07-30 10:49:06+00:00,[],None
152,https://github.com/adam-wills/fpgaFM_matrix.git,2021-08-06 01:45:55+00:00,Ground-up reimplementation of the DE10-Lite synthesizer,0,adam-wills/fpgaFM_matrix,393216217,Verilog,fpgaFM_matrix,913,1,2023-11-28 05:37:14+00:00,[],None
153,https://github.com/merledu/briscv-merl.git,2021-07-23 12:15:13+00:00,"This repo holds the BRISC-V cores, used for the MERL APR training.",1,merledu/briscv-merl,388790795,Verilog,briscv-merl,158,1,2024-03-27 14:09:08+00:00,[],https://api.github.com/licenses/apache-2.0
154,https://github.com/pathces-gone/study-snuriscv-seq.git,2021-08-02 08:02:34+00:00,RISC-V RTL 설계 연습,0,pathces-gone/study-snuriscv-seq,391862219,Verilog,study-snuriscv-seq,182,1,2023-05-23 01:05:00+00:00,[],None
155,https://github.com/Jerryliang123/sv_uvm_exercise.git,2021-07-31 07:03:26+00:00,"this repository is for gathering some basic sv and uvm projects from github, mainly for beginners training.",0,Jerryliang123/sv_uvm_exercise,391280330,Verilog,sv_uvm_exercise,2071,1,2021-11-22 13:16:28+00:00,[],None
156,https://github.com/legkih/CrossbarSwitch_dim4.git,2021-07-12 14:57:32+00:00,,0,legkih/CrossbarSwitch_dim4,385284966,Verilog,CrossbarSwitch_dim4,4094,1,2023-02-09 19:03:57+00:00,[],None
157,https://github.com/SoujanyaSR/Approximate-Multiplier-6x6.git,2021-07-20 15:26:02+00:00,Dadda 6x6 is used as the benchmark multiplier,0,SoujanyaSR/Approximate-Multiplier-6x6,387834922,Verilog,Approximate-Multiplier-6x6,108,1,2024-03-01 03:46:01+00:00,[],None
158,https://github.com/mnmhdanas/Mod-N-Counter.git,2021-07-25 07:53:12+00:00,"Counters are sequential logic devices that follow a predetermined sequence of counting states triggered by an external clock (CLK) signal. Modulus Counters, or MOD counters, are defined based on the number of states that the counter will sequence before returning to its original value.",0,mnmhdanas/Mod-N-Counter,389292422,Verilog,Mod-N-Counter,70,1,2023-02-14 20:07:57+00:00,[],None
159,https://github.com/tim8557/HC-SR04__FPGA.git,2021-07-15 05:07:33+00:00,,0,tim8557/HC-SR04__FPGA,386170387,Verilog,HC-SR04__FPGA,1851,1,2023-02-28 14:16:55+00:00,[],https://api.github.com/licenses/apache-2.0
160,https://github.com/us03145/Bit-Plane-Compression.git,2021-07-15 09:04:35+00:00,,1,us03145/Bit-Plane-Compression,386228393,Verilog,Bit-Plane-Compression,7919,1,2023-10-07 12:44:04+00:00,[],None
161,https://github.com/mahaboobtech/vhdl.git,2021-08-11 08:17:47+00:00,,0,mahaboobtech/vhdl,394915801,Verilog,vhdl,10,1,2021-08-12 04:20:33+00:00,[],None
162,https://github.com/realtimeradio/htg_usplus_10g.git,2021-08-14 12:42:13+00:00,,0,realtimeradio/htg_usplus_10g,396005753,Verilog,htg_usplus_10g,722,1,2022-03-23 13:33:20+00:00,[],None
163,https://github.com/nimniorel/AES256-side-cahnnel-attack-countermeasures.git,2021-08-14 16:10:45+00:00,,0,nimniorel/AES256-side-cahnnel-attack-countermeasures,396060422,Verilog,AES256-side-cahnnel-attack-countermeasures,29,1,2023-04-30 05:18:15+00:00,[],None
164,https://github.com/hamzahassan-dot/axi_apb_bridge.git,2021-08-09 07:57:59+00:00,,1,hamzahassan-dot/axi_apb_bridge,394202057,Verilog,axi_apb_bridge,9758,1,2023-08-30 02:35:23+00:00,[],None
165,https://github.com/lixuf/gptp.git,2021-07-13 13:35:31+00:00,,0,lixuf/gptp,385615798,Verilog,gptp,110,1,2023-11-24 06:13:32+00:00,[],None
166,https://github.com/Pooya448/ComputerAidedDesign.git,2021-07-14 10:42:22+00:00,My solutions to CAD course.,0,Pooya448/ComputerAidedDesign,385904270,Verilog,ComputerAidedDesign,9231,1,2024-04-01 13:06:43+00:00,[],None
167,https://github.com/MrNextor/MPU_6050.git,2021-08-04 16:34:28+00:00,Sensor control module MPU_6050,0,MrNextor/MPU_6050,392759165,Verilog,MPU_6050,5441,1,2023-04-17 06:34:24+00:00,[],https://api.github.com/licenses/mit
168,https://github.com/vjabarca/Box-Muller-Transform-Floating-Point-Random-Number-Distributions.git,2021-08-10 02:33:41+00:00,This is a synthesizable block that implements the Box-Muller transform to convert two random number to an approximation of a Gaussian random number distribution.,0,vjabarca/Box-Muller-Transform-Floating-Point-Random-Number-Distributions,394502658,Verilog,Box-Muller-Transform-Floating-Point-Random-Number-Distributions,130,1,2021-08-10 04:42:59+00:00,[],None
169,https://github.com/salsina/ARM-processor.git,2021-07-16 09:37:06+00:00,"implementing the ARM processor in 4 versions (pipeline, forwarding, cache, SRAM)",0,salsina/ARM-processor,386584415,Verilog,ARM-processor,1842,1,2022-02-25 11:33:10+00:00,[],None
170,https://github.com/lakshita14/Digital-Communication-System.git,2021-07-18 06:43:19+00:00,Implementing the Transmitter Part of a Digital Communication System using Verilog.,0,lakshita14/Digital-Communication-System,387109281,Verilog,Digital-Communication-System,280,1,2023-10-09 17:40:23+00:00,[],None
171,https://github.com/JoshTheAggie/gba_verilog.git,2021-08-02 22:36:24+00:00,Implementation of Game Boy Advance hardware on Virtex 5 FPGA,0,JoshTheAggie/gba_verilog,392113524,Verilog,gba_verilog,5683,1,2022-01-24 07:43:48+00:00,[],None
172,https://github.com/sifferman/find_first_set.git,2021-07-29 23:23:31+00:00,Find first set operation in Verilog-2001 with logarithmic complexity.,0,sifferman/find_first_set,390873643,Verilog,find_first_set,93,1,2021-11-01 08:55:13+00:00,"['verilog', 'fusesoc', 'find-first-set']",None
173,https://github.com/warpmatrix/CPU-Design.git,2021-08-09 03:41:02+00:00,Single Cycle CPU Design written in Verilog,0,warpmatrix/CPU-Design,394138289,Verilog,CPU-Design,979,1,2023-05-21 06:29:28+00:00,[],None
174,https://github.com/brennanmk/OvenSimulator.git,2021-07-23 16:10:01+00:00,,1,brennanmk/OvenSimulator,388857140,Verilog,OvenSimulator,32002,1,2021-08-18 01:07:10+00:00,[],None
175,https://github.com/AryaCherukuri/fpga_camera_processing.git,2021-07-13 05:02:12+00:00,"FPGA camera proccesing in verilog that anyone can use, feel free to use it for yourself.",0,AryaCherukuri/fpga_camera_processing,385481824,Verilog,fpga_camera_processing,9,1,2021-12-20 20:08:49+00:00,[],None
176,https://github.com/General-debug/Flappy-Bird-on-FPGA.git,2021-07-20 16:00:01+00:00,"Flappy Bird On EGO1. verilog, vivado.",0,General-debug/Flappy-Bird-on-FPGA,387844255,Verilog,Flappy-Bird-on-FPGA,14,1,2023-11-24 00:52:06+00:00,[],None
177,https://github.com/leilibrk/Smart-Home-Management-System.git,2021-07-30 15:41:13+00:00,This is my final project in the Logical Circuits course. In this project we designed a Smart Home Management System.,0,leilibrk/Smart-Home-Management-System,391115112,Verilog,Smart-Home-Management-System,20,1,2024-01-20 13:55:45+00:00,"['logical-circuits', 'verilog']",None
178,https://github.com/crazytycoon/ftdi-engine.git,2021-07-18 01:34:05+00:00,245 fifo design in verilog,1,crazytycoon/ftdi-engine,387067704,Verilog,ftdi-engine,106,1,2021-09-20 18:47:16+00:00,[],None
179,https://github.com/HKpro2090/Basic-Calculator-implementation-using-Verilog.git,2021-07-11 12:36:08+00:00,"The aim of the project is to create a basic calculator which takes two single-digit numbers (each is a single-digit decimal base number entered by user via switches)as input and can perform unsigned addition, subtraction, multiplication and division (only quotient) based on user selection and display the output decimal number (two digits) to the user (sign is displayed for subtraction only).",2,HKpro2090/Basic-Calculator-implementation-using-Verilog,384943950,Verilog,Basic-Calculator-implementation-using-Verilog,3362,1,2023-11-13 05:44:33+00:00,[],None
180,https://github.com/FPGAsm/fpgasm-xc3s200.git,2021-07-22 22:21:56+00:00,,1,FPGAsm/fpgasm-xc3s200,388612680,Verilog,fpgasm-xc3s200,111,1,2022-03-27 19:50:36+00:00,[],None
181,https://github.com/Mati1976/MojoStopWatch.git,2021-07-22 13:39:40+00:00,Mojo V3 Stop watch (up to 9 minutes 59 sec and 9 tenths ) . updated from the original project . ,0,Mati1976/MojoStopWatch,388475489,Verilog,MojoStopWatch,513,1,2022-08-20 21:29:41+00:00,[],None
182,https://github.com/Penchal9959/FSM-SEQUENCE-DETECTOR.git,2021-08-12 01:51:48+00:00,A sequence detector is a sequential state machine that takes an input string of bits and generates an output 1 whenever the target sequence has been detected.,0,Penchal9959/FSM-SEQUENCE-DETECTOR,395164329,Verilog,FSM-SEQUENCE-DETECTOR,34,1,2022-01-07 14:49:07+00:00,[],None
183,https://github.com/mfkiwl/verilog-advanced-synthesis-cookbook.git,2021-08-06 20:31:42+00:00,,0,mfkiwl/verilog-advanced-synthesis-cookbook,393495954,,verilog-advanced-synthesis-cookbook,0,1,2023-04-17 22:46:20+00:00,[],https://api.github.com/licenses/mit
184,https://github.com/lingbai-kong/FPGA-lathe-simulation-system.git,2021-07-25 07:18:44+00:00,同济大学CS《数字逻辑》大作业: 车床仿真系统TongJi University CS digital logic assignment: lathe simulation system,0,lingbai-kong/FPGA-lathe-simulation-system,389286621,Verilog,FPGA-lathe-simulation-system,82202,1,2023-04-21 13:26:18+00:00,"['vga', 'mouse', 'sound-sensor', 'fpga', 'tongji-university', 'digital-logic']",None
185,https://github.com/gopessoa/project-CPUx32.git,2021-07-22 01:35:57+00:00,InfraHardware prject to make a 32 bits CPU,0,gopessoa/project-CPUx32,388293918,Verilog,project-CPUx32,1035,1,2021-08-01 21:04:18+00:00,[],None
186,https://github.com/MiSTer-devel/Arcade-Jackal_MiSTer.git,2021-07-26 02:05:15+00:00,Jackal (arcade version) for MiSTer,3,MiSTer-devel/Arcade-Jackal_MiSTer,389482430,Verilog,Arcade-Jackal_MiSTer,5444,1,2021-12-26 02:49:31+00:00,[],None
187,https://github.com/ShaheerSajid/RV32_with_MAC.git,2021-07-30 16:33:39+00:00,,0,ShaheerSajid/RV32_with_MAC,391129834,Verilog,RV32_with_MAC,568,1,2022-05-02 21:25:54+00:00,[],https://api.github.com/licenses/gpl-3.0
188,https://github.com/DenizRumet/BCDcounter.git,2021-07-30 08:52:41+00:00,One counter to rule them all,0,DenizRumet/BCDcounter,390996737,Verilog,BCDcounter,1,1,2023-04-12 19:39:12+00:00,[],None
189,https://github.com/thanh-cnguyen/N-bit-rotator.git,2021-07-12 03:56:31+00:00,"The rotator can perform 0-3 bits rotations on an N-bit number by changing the parameter N. A test bench to test the module is also provided. By default, it works with 4-bit input.",0,thanh-cnguyen/N-bit-rotator,385118780,Verilog,N-bit-rotator,4,1,2023-01-25 15:15:40+00:00,"['alu', 'rotation', 'verilog']",None
190,https://github.com/Prashant43226/Verilog.git,2021-07-17 17:29:47+00:00,,0,Prashant43226/Verilog,387000422,Verilog,Verilog,5,1,2023-05-14 19:26:45+00:00,[],None
191,https://github.com/mnmhdanas/Serial-IN-Parallel-OUT.git,2021-07-24 15:50:04+00:00,"In this shift register, we can send the bits serially from the input of left most D flip-flop. Hence, this input is also called as serial input. For every positive edge triggering of clock signal, the data shifts from one stage to the next. In this case, we can access the outputs of each D flip-flop in parallel. So, we will get parallel outputs from this shift register.",0,mnmhdanas/Serial-IN-Parallel-OUT,389137533,Verilog,Serial-IN-Parallel-OUT,47,1,2023-02-14 20:08:03+00:00,"['digital-electronics', 'verilog', 'shift-register', 'sipo']",None
192,https://github.com/vrajpatel001/Mathematical-Series-Generation.git,2021-08-02 13:57:34+00:00,Generating various mathematical series using Verilog and 8051 Micro-controller Assembly,0,vrajpatel001/Mathematical-Series-Generation,391969032,Verilog,Mathematical-Series-Generation,2061,1,2021-12-26 12:05:35+00:00,[],https://api.github.com/licenses/apache-2.0
193,https://github.com/ksooryakrishna1/eSIM_Marathon_Stage3_12bit_Adder_Design_Using_CLA_Logic.git,2021-08-13 08:59:02+00:00,12 Bit Adder Design using 4 Bit CLA in Openlane,0,ksooryakrishna1/eSIM_Marathon_Stage3_12bit_Adder_Design_Using_CLA_Logic,395584307,Verilog,eSIM_Marathon_Stage3_12bit_Adder_Design_Using_CLA_Logic,1051,1,2021-09-15 07:27:08+00:00,[],None
194,https://github.com/tim8557/ADC__MCP3008__SPI__FPGA.git,2021-07-13 15:17:53+00:00,,0,tim8557/ADC__MCP3008__SPI__FPGA,385648400,Verilog,ADC__MCP3008__SPI__FPGA,5324,1,2022-09-15 11:48:20+00:00,[],https://api.github.com/licenses/apache-2.0
195,https://github.com/AbdelrahmanKassem/PCI_Slave_Device.git,2021-07-19 01:27:06+00:00,The slave receives commands from master and starts acting according to it.,0,AbdelrahmanKassem/PCI_Slave_Device,387305239,Verilog,PCI_Slave_Device,669,1,2023-05-17 06:21:36+00:00,[],None
196,https://github.com/zixuanweeei/fpga-vga-controller.git,2021-07-18 14:49:49+00:00,A homework of making a VGA controller via Verilog/VHDL,1,zixuanweeei/fpga-vga-controller,387199932,Verilog,fpga-vga-controller,5688,1,2023-01-28 07:45:02+00:00,[],None
197,https://github.com/Niveddita/Array-Multiplier.git,2021-07-22 10:02:03+00:00,This is the Verilog code for Array Multiplier,0,Niveddita/Array-Multiplier,388414683,Verilog,Array-Multiplier,3,1,2021-11-30 13:30:05+00:00,[],None
198,https://github.com/ThreeCatsLoveFish/VE370.git,2021-08-07 08:52:51+00:00,Projects for 2021 SUMMER VE370 Intro to Computer Organization.,0,ThreeCatsLoveFish/VE370,393630826,Verilog,VE370,530,1,2023-01-28 07:21:45+00:00,"['assembly', 'verilog']",None
199,https://github.com/krithik1008/FPGA_BOT.git,2021-08-13 16:57:01+00:00,,0,krithik1008/FPGA_BOT,395728923,Verilog,FPGA_BOT,24826,1,2023-01-17 18:12:15+00:00,[],None
200,https://github.com/debtanu09/ee705-floating-point-multiplier.git,2021-08-15 09:33:31+00:00,This is a repository containing all the Quartus and NIOS II simulation files and the testcases for EE705 course,0,debtanu09/ee705-floating-point-multiplier,396296767,Verilog,ee705-floating-point-multiplier,450,1,2022-04-17 21:44:38+00:00,[],None
201,https://github.com/12562/ECS-812.git,2021-07-24 19:51:34+00:00,Triple port RAM in verilog and synthesized and implemented on FPGA,0,12562/ECS-812,389188447,Verilog,ECS-812,50683,1,2023-11-29 08:21:16+00:00,[],None
202,https://github.com/thummala-sathvika/Multiplexer.git,2021-07-20 15:58:30+00:00,,0,thummala-sathvika/Multiplexer,387843882,Verilog,Multiplexer,2,1,2021-08-06 07:23:52+00:00,[],None
203,https://github.com/bimal-parajuli/dld.git,2021-07-13 18:14:43+00:00,,0,bimal-parajuli/dld,385696513,Verilog,dld,81294,1,2021-07-30 03:41:34+00:00,[],None
204,https://github.com/thummala-sathvika/FSM_state.git,2021-07-20 17:04:04+00:00,,0,thummala-sathvika/FSM_state,387860479,Verilog,FSM_state,3,1,2021-08-06 07:23:49+00:00,[],None
205,https://github.com/mtootoonchi/Morse-Code-Terminal.git,2021-07-30 07:36:51+00:00,,0,mtootoonchi/Morse-Code-Terminal,390975229,Verilog,Morse-Code-Terminal,28,1,2023-03-04 00:17:11+00:00,[],None
206,https://github.com/sven0601/ddr3_ip_sim.git,2021-08-07 09:59:38+00:00,MIG ip simulation of Xilinx K7,0,sven0601/ddr3_ip_sim,393645319,Verilog,ddr3_ip_sim,542,1,2022-11-07 07:43:37+00:00,[],None
207,https://github.com/YUZehuiIC/Flip-Flops.git,2021-07-26 16:37:45+00:00,Flip-Flops and Testbench in Verilog.,0,YUZehuiIC/Flip-Flops,389701671,Verilog,Flip-Flops,707,1,2021-07-26 17:22:22+00:00,[],None
208,https://github.com/SuhailAhamed2000/MUX.git,2021-07-24 14:56:42+00:00,"In electronics, a multiplexer (or mux; spelled sometimes as multiplexer, also known as a data selector, is a device that selects between several analog or digital input signals and forwards the selected input to a single output line.",0,SuhailAhamed2000/MUX,389124939,Verilog,MUX,3,1,2023-02-14 20:06:59+00:00,"['vlsi', 'vlsi-physical-design', 'verilog', 'verilog-hdl', 'digital']",None
209,https://github.com/mnmhdanas/Serial-IN-Serial-OUT.git,2021-07-24 15:45:13+00:00,"In this shift register, we can send the bits serially from the input of left most D flip-flop. Hence, this input is also called as serial input. For every positive edge triggering of clock signal, the data shifts from one stage to the next. So, we can receive the bits serially from the output of right most D flip-flop. Hence, this output is also called as serial output.",0,mnmhdanas/Serial-IN-Serial-OUT,389136436,Verilog,Serial-IN-Serial-OUT,42,1,2023-02-14 20:08:04+00:00,"['digital-electronics', 'verilog', 'shift-register', 'siso']",None
210,https://github.com/mnmhdanas/Parallel-IN-Serial-OUT.git,2021-07-24 15:52:51+00:00,"In this shift register, we can apply the parallel inputs to each D flip-flop by making Preset Enable to 1. For every positive edge triggering of clock signal, the data shifts from one stage to the next. So, we will get the serial output from the right most D flip-flop.",0,mnmhdanas/Parallel-IN-Serial-OUT,389138201,Verilog,Parallel-IN-Serial-OUT,40,1,2023-02-14 20:08:02+00:00,"['digital-electronics', 'verilog', 'shift-register', 'piso']",None
211,https://github.com/YUZehuiIC/Game-Connect-4.git,2021-07-26 16:42:34+00:00,Game-Connect 4 and Testbench in Verilog,0,YUZehuiIC/Game-Connect-4,389702955,Verilog,Game-Connect-4,2792,1,2021-07-26 17:22:29+00:00,[],None
212,https://github.com/andy155224/PIC16F1826.git,2021-07-13 17:18:27+00:00,This is PIC16F1826,0,andy155224/PIC16F1826,385681782,Verilog,PIC16F1826,194,1,2023-12-29 08:14:51+00:00,[],None
213,https://github.com/HITsz-ZirconMIPS/CPU-_2021_7_19.git,2021-07-19 06:34:52+00:00,功能测试,0,HITsz-ZirconMIPS/CPU-_2021_7_19,387363241,Verilog,CPU-_2021_7_19,155,1,2022-08-31 06:23:43+00:00,[],None
214,https://github.com/thummala-sathvika/d_flipflop.git,2021-07-20 16:21:13+00:00,,0,thummala-sathvika/d_flipflop,387849891,Verilog,d_flipflop,1,1,2021-08-06 07:23:51+00:00,[],None
215,https://github.com/K-Suneel-kumar/BrentKung-Adder-16bit.git,2021-08-13 16:13:33+00:00,logarithmic adder implemented in brentkung architecture,0,K-Suneel-kumar/BrentKung-Adder-16bit,395716693,Verilog,BrentKung-Adder-16bit,218,1,2021-11-06 13:28:49+00:00,[],None
216,https://github.com/Penchal9959/DATAPATH-CONTROLPATH.git,2021-08-12 02:04:31+00:00,"A datapath is a collection of functional units such as arithmetic logic units or multipliers that perform data processing operations, registers, and buses. ",0,Penchal9959/DATAPATH-CONTROLPATH,395166740,Verilog,DATAPATH-CONTROLPATH,38,1,2022-01-07 14:48:52+00:00,[],None
217,https://github.com/tim8557/TOF10210__UART__FPGA.git,2021-07-24 06:56:06+00:00,,0,tim8557/TOF10210__UART__FPGA,389024663,Verilog,TOF10210__UART__FPGA,1996,1,2023-08-01 09:58:01+00:00,[],https://api.github.com/licenses/apache-2.0
218,https://github.com/YUZehuiIC/Matrix-Multiplier.git,2021-07-26 16:40:36+00:00,Matrix Multiplier and Testbench in Verilog,0,YUZehuiIC/Matrix-Multiplier,389702417,Verilog,Matrix-Multiplier,1016,1,2021-07-26 17:22:27+00:00,[],None
219,https://github.com/TCopcutt/ELEC5552-Team-2.git,2021-07-27 03:36:56+00:00,,1,TCopcutt/ELEC5552-Team-2,389838084,Verilog,ELEC5552-Team-2,45638,1,2021-10-17 04:59:09+00:00,[],None
220,https://github.com/omiya2106/SABiNN.git,2021-07-30 18:07:43+00:00,Config files for my GitHub profile.,1,omiya2106/SABiNN,391154179,Verilog,SABiNN,43014,1,2022-10-21 16:20:18+00:00,"['config', 'github-config']",None
221,https://github.com/pathces-gone/16bit-processor.git,2021-08-02 04:26:41+00:00,16bit processor ,0,pathces-gone/16bit-processor,391814767,Verilog,16bit-processor,1117,1,2023-05-23 01:06:49+00:00,[],None
222,https://github.com/RodolfoPAraujo/First-Project.git,2021-08-06 13:07:23+00:00,Project Verilog,0,RodolfoPAraujo/First-Project,393379881,Verilog,First-Project,3,1,2021-08-06 16:02:57+00:00,[],None
223,https://github.com/DrYanPhD/ADC-Interface.git,2021-07-22 19:08:41+00:00,Currently not working properly,1,DrYanPhD/ADC-Interface,388570392,Verilog,ADC-Interface,3091,1,2022-05-27 07:53:37+00:00,[],None
224,https://github.com/josephjeevan/Brent-Kung-adder.git,2021-07-25 13:57:02+00:00,,0,josephjeevan/Brent-Kung-adder,389359718,Verilog,Brent-Kung-adder,553,1,2021-08-10 11:27:08+00:00,[],None
225,https://github.com/shubhi704/RISC-V-Processor.git,2021-07-13 19:13:30+00:00,,2,shubhi704/RISC-V-Processor,385710342,Verilog,RISC-V-Processor,2300,1,2023-12-11 06:37:52+00:00,[],None
226,https://github.com/ethan12377/Pipelined_MIPS_Design.git,2021-08-04 02:49:39+00:00,Final project of the course Digital System Design (DSD),0,ethan12377/Pipelined_MIPS_Design,392525994,Verilog,Pipelined_MIPS_Design,12492,1,2024-03-18 00:12:33+00:00,[],None
227,https://github.com/MiSTer-devel/Arcade-IronHorse_MiSTer.git,2021-07-26 02:04:55+00:00,Iron Horse for MiSTer,3,MiSTer-devel/Arcade-IronHorse_MiSTer,389482359,Verilog,Arcade-IronHorse_MiSTer,5138,1,2021-12-26 02:49:25+00:00,[],None
228,https://github.com/mnmhdanas/Parallel-Adder-subtractor.git,2021-08-02 13:29:25+00:00,4 bit parallel adder/ subtractor circuit does both addition and subtraction by using 2 ripple carry adders and some xor gates,0,mnmhdanas/Parallel-Adder-subtractor,391959901,Verilog,Parallel-Adder-subtractor,3,1,2023-02-14 20:07:54+00:00,[],None
229,https://github.com/RishabhAdiga/Computer-Organisation-Assignments-EE2003.git,2021-08-02 05:10:28+00:00,,0,RishabhAdiga/Computer-Organisation-Assignments-EE2003,391822388,Verilog,Computer-Organisation-Assignments-EE2003,86,1,2022-06-14 03:59:38+00:00,[],None
230,https://github.com/8G6/HDL-Full_Adder.git,2021-07-16 13:55:43+00:00,,0,8G6/HDL-Full_Adder,386654708,Verilog,HDL-Full_Adder,0,1,2021-07-24 14:32:44+00:00,[],None
231,https://github.com/jagrat7/Verilog-and-VHDL-projects.git,2021-07-16 06:00:00+00:00,,0,jagrat7/Verilog-and-VHDL-projects,386526864,Verilog,Verilog-and-VHDL-projects,253,1,2022-04-27 18:31:16+00:00,[],None
232,https://github.com/DaimonG/StandardCellManualLayout.git,2021-07-20 02:54:13+00:00,"A standard cell library consisting of AND, NAND, NOR, and INV cells designed at the silicon-level using Cadence Virtuoso.",0,DaimonG/StandardCellManualLayout,387654004,Verilog,StandardCellManualLayout,4679,1,2023-12-21 03:44:34+00:00,[],None
233,https://github.com/jamesbowman/xpc.git,2021-07-24 18:10:29+00:00,,0,jamesbowman/xpc,389169018,Verilog,xpc,40,1,2021-10-15 14:33:35+00:00,[],None
234,https://github.com/raghuttamh/fourierTransform_verilog.git,2021-08-07 06:29:55+00:00,,0,raghuttamh/fourierTransform_verilog,393600580,Verilog,fourierTransform_verilog,1015,1,2022-05-20 08:14:58+00:00,[],None
235,https://github.com/chenxl03/A-MOA.git,2021-08-02 18:45:19+00:00,Approximate multi-operand adder,1,chenxl03/A-MOA,392058796,Verilog,A-MOA,3906,1,2023-02-23 03:01:47+00:00,[],None
236,https://github.com/sventhijssen/compact.git,2021-08-09 01:37:45+00:00,,3,sventhijssen/compact,394111788,Verilog,compact,34742,1,2022-05-27 12:31:26+00:00,[],None
237,https://github.com/lewzs97/milestone6.git,2021-07-18 11:43:01+00:00,A simple music box on FPGA,0,lewzs97/milestone6,387161922,Verilog,milestone6,23589,1,2021-07-18 13:35:32+00:00,[],None
238,https://github.com/thummala-sathvika/ram_memory.git,2021-07-20 16:52:27+00:00,,0,thummala-sathvika/ram_memory,387857536,Verilog,ram_memory,2,1,2021-08-06 07:23:50+00:00,[],None
239,https://github.com/deepsita/mythcore_synth.git,2021-07-31 13:51:00+00:00,,2,deepsita/mythcore_synth,391369546,Verilog,mythcore_synth,4957,1,2021-08-18 21:19:04+00:00,[],None
240,https://github.com/dorbs35/Computer-Architectures-Systolic-Array-Verilog-Altera.git,2021-08-02 16:01:55+00:00,,0,dorbs35/Computer-Architectures-Systolic-Array-Verilog-Altera,392011837,Verilog,Computer-Architectures-Systolic-Array-Verilog-Altera,135,1,2022-04-17 22:20:03+00:00,[],None
241,https://github.com/siglabsoss/expresso.git,2021-07-12 00:22:10+00:00,,0,siglabsoss/expresso,385080408,Verilog,expresso,68680,1,2022-06-01 04:35:26+00:00,[],https://api.github.com/licenses/bsd-3-clause
242,https://github.com/MidlaneBro/2019Spring_NTUEE_Computer_Architecture.git,2021-07-19 12:23:39+00:00,,0,MidlaneBro/2019Spring_NTUEE_Computer_Architecture,387455077,Verilog,2019Spring_NTUEE_Computer_Architecture,48998,1,2024-02-23 07:55:39+00:00,[],None
243,https://github.com/a200556220407/0847.git,2021-07-12 06:33:08+00:00,,0,a200556220407/0847,385147667,Verilog,0847,560,0,2021-07-12 06:55:25+00:00,[],None
244,https://github.com/mishkat29/Digital_Circuit_Design.git,2021-07-13 06:37:25+00:00,VLSI System on Chip Design using Verilog ,0,mishkat29/Digital_Circuit_Design,385501313,Verilog,Digital_Circuit_Design,2319,0,2023-10-08 13:03:31+00:00,"['verilog', 'rtl']",None
245,https://github.com/cjh980402/Verilog-Rhythm-Game.git,2021-07-13 14:29:57+00:00,베릴로그와 콤보박스를 이용한 리듬게임 제작,0,cjh980402/Verilog-Rhythm-Game,385632945,Verilog,Verilog-Rhythm-Game,9,0,2021-07-13 14:31:26+00:00,[],None
246,https://github.com/NobleTomas/Simulation-Clock-with-alarm.git,2021-07-13 19:34:56+00:00,Working with FPGA (HDL),0,NobleTomas/Simulation-Clock-with-alarm,385715895,Verilog,Simulation-Clock-with-alarm,5,0,2021-07-13 19:36:10+00:00,[],None
247,https://github.com/dngtuankiet/aes_core.git,2021-07-14 09:04:31+00:00,,0,dngtuankiet/aes_core,385877920,Verilog,aes_core,11,0,2021-08-02 09:40:27+00:00,[],None
248,https://github.com/mrdiogodias/zipcpu_axi_slave.git,2021-07-12 16:15:38+00:00,,0,mrdiogodias/zipcpu_axi_slave,385308973,Verilog,zipcpu_axi_slave,2,0,2021-07-12 16:17:48+00:00,[],None
249,https://github.com/smmzhang/FPGA-4st-A-0318.git,2021-07-14 03:15:23+00:00,Intelligent camera processing based on multi-frame merging/基于多帧融合的智能相机处理系统,0,smmzhang/FPGA-4st-A-0318,385799868,,FPGA-4st-A-0318,68,0,2021-10-28 03:19:15+00:00,[],None
250,https://github.com/mihirvora04/MIPS-Pipelined_Datapath.git,2021-07-30 06:46:54+00:00,"Implementation of a 5 stage Pipelined Datapath of MIPS Architecture with a hazard detection and forwarding unit. It can execute R-type, load, store and branch instructions.  ",0,mihirvora04/MIPS-Pipelined_Datapath,390961494,Verilog,MIPS-Pipelined_Datapath,504,0,2021-09-08 14:07:32+00:00,[],None
251,https://github.com/asqwased/super-couscous.git,2021-07-29 07:45:21+00:00,,0,asqwased/super-couscous,390643384,Verilog,super-couscous,2,0,2021-07-30 06:27:54+00:00,[],None
252,https://github.com/DenizRumet/UART_parity.git,2021-08-02 06:01:57+00:00,,0,DenizRumet/UART_parity,391832333,Verilog,UART_parity,3,0,2021-08-02 06:02:26+00:00,[],None
253,https://github.com/finn1y/StopWatch.git,2021-08-05 16:56:25+00:00,A stopwatch designed for programming on the MAX10 DE-lite board,0,finn1y/StopWatch,393115956,Verilog,StopWatch,14,0,2021-10-08 15:06:51+00:00,"['stopwatch', 'hdl', 'fpga']",None
254,https://github.com/MasterNomi/Verilog_Labs.git,2021-07-28 04:14:01+00:00,,0,MasterNomi/Verilog_Labs,390209857,Verilog,Verilog_Labs,2,0,2021-07-29 10:23:43+00:00,[],None
255,https://github.com/Mayb11/Full-Adder.git,2021-07-29 10:25:33+00:00,,0,Mayb11/Full-Adder,390685840,Verilog,Full-Adder,145,0,2021-07-29 10:40:20+00:00,[],None
256,https://github.com/flockeyrocks/morse-code-terminal.git,2021-08-04 23:19:00+00:00,,0,flockeyrocks/morse-code-terminal,392847463,Verilog,morse-code-terminal,14,0,2021-08-04 23:19:28+00:00,[],None
257,https://github.com/snyder-verilog/morse-code-terminal.git,2021-08-04 23:37:37+00:00,,0,snyder-verilog/morse-code-terminal,392850183,Verilog,morse-code-terminal,14,0,2021-08-04 23:43:43+00:00,[],None
258,https://github.com/andrewstadams/mips.git,2021-07-17 22:47:08+00:00,Simplified MIPS Architecture,0,andrewstadams/mips,387049517,Verilog,mips,7,0,2021-07-19 17:54:57+00:00,[],None
259,https://github.com/mfkiwl/MimasA7-RISC-V-Processor.git,2021-07-19 14:37:53+00:00,,0,mfkiwl/MimasA7-RISC-V-Processor,387495704,,MimasA7-RISC-V-Processor,33,0,2021-10-30 22:16:47+00:00,[],https://api.github.com/licenses/mit
260,https://github.com/PiotrChmura2/SP-21-ECE3300-SystemVerilog.git,2021-07-20 12:07:39+00:00,,0,PiotrChmura2/SP-21-ECE3300-SystemVerilog,387779169,Verilog,SP-21-ECE3300-SystemVerilog,9,0,2021-07-21 18:56:10+00:00,[],None
261,https://github.com/naidutangi7/Asynchrounous-fifo.git,2021-08-09 13:53:33+00:00,,0,naidutangi7/Asynchrounous-fifo,394309964,Verilog,Asynchrounous-fifo,818,0,2021-08-15 09:13:02+00:00,[],None
262,https://github.com/kshitijandmojo/SoP_Kshitij.git,2021-08-11 09:23:57+00:00,,1,kshitijandmojo/SoP_Kshitij,394933448,Verilog,SoP_Kshitij,19,0,2021-09-21 11:29:47+00:00,[],None
263,https://github.com/Khalique13/test.git,2021-08-08 15:33:38+00:00,,0,Khalique13/test,393999632,Verilog,test,58,0,2021-08-11 15:17:03+00:00,[],None
264,https://github.com/SkyRain97/sobel_FPGA.git,2021-08-08 03:08:10+00:00,Play around FPGA and verilog with a simple sobel module that takes a RGB picture and run it with sobel operator to detect the edge. ,0,SkyRain97/sobel_FPGA,393843024,Verilog,sobel_FPGA,32,0,2021-08-08 03:22:58+00:00,[],None
265,https://github.com/mio-19/miniAnn.sv.git,2021-08-13 09:31:57+00:00,miniAnn,0,mio-19/miniAnn.sv,395594799,Verilog,miniAnn.sv,145,0,2021-08-15 08:33:39+00:00,[],https://api.github.com/licenses/agpl-3.0
266,https://github.com/kankanas25/Processor-Design_RISC-5.git,2021-08-14 09:15:55+00:00,,0,kankanas25/Processor-Design_RISC-5,395955027,Verilog,Processor-Design_RISC-5,12,0,2021-08-14 09:20:57+00:00,[],None
267,https://github.com/SanjeevaKola/APB-Protocol.git,2021-08-14 17:30:05+00:00,,0,SanjeevaKola/APB-Protocol,396079960,Verilog,APB-Protocol,937,0,2021-08-20 11:23:01+00:00,[],None
268,https://github.com/monuo2021/noteFuxi.git,2021-07-30 07:19:20+00:00,,0,monuo2021/noteFuxi,390970367,Verilog,noteFuxi,2053,0,2021-08-18 02:23:50+00:00,[],https://api.github.com/licenses/gpl-3.0
269,https://github.com/GauravRanjan1/GCD-computation.git,2021-07-30 19:36:21+00:00,GCD Computation using Verilog,0,GauravRanjan1/GCD-computation,391171899,Verilog,GCD-computation,3,0,2021-07-30 19:40:32+00:00,[],None
270,https://github.com/CleanerNo7/Sun_OSCPU.git,2021-08-03 07:11:14+00:00,First step out on  Open Source Chip Project by University (OSCPU),1,CleanerNo7/Sun_OSCPU,392225118,Verilog,Sun_OSCPU,28,0,2021-08-28 01:01:46+00:00,"['riscv64', 'pipelines', 'cpu']",None
271,https://github.com/duytrangiale/MorseCodeRecognition.git,2021-08-03 14:53:36+00:00,This project implements the Morse code recognition device using the FPGA development board,0,duytrangiale/MorseCodeRecognition,392352858,Verilog,MorseCodeRecognition,19950,0,2021-08-03 15:10:03+00:00,[],https://api.github.com/licenses/mit
272,https://github.com/changchun-zhou/Sagitta_test.git,2021-07-30 14:16:58+00:00,Simulation scripts for Sagitta chip; FPGA.v for test,0,changchun-zhou/Sagitta_test,391089174,Verilog,Sagitta_test,1285,0,2022-07-27 02:01:04+00:00,"['hardware', 'own']",None
273,https://github.com/a20815579/IC_contest.git,2021-08-04 10:37:22+00:00,歷年IC競賽考古題練習,1,a20815579/IC_contest,392648341,Verilog,IC_contest,13,0,2022-01-23 18:48:51+00:00,[],None
274,https://github.com/xiaoqiangshijie/oscpu-framework.git,2021-07-22 06:32:14+00:00,单周期riscv,0,xiaoqiangshijie/oscpu-framework,388353623,Verilog,oscpu-framework,280,0,2023-06-12 10:33:17+00:00,[],None
275,https://github.com/jzhoujg/hdlbits_code.git,2021-07-23 08:04:20+00:00,HDL,0,jzhoujg/hdlbits_code,388725121,Verilog,hdlbits_code,1,0,2021-07-23 08:10:22+00:00,[],None
276,https://github.com/pramod-alamuri/Test.git,2021-07-24 09:34:42+00:00,,0,pramod-alamuri/Test,389057136,Verilog,Test,1,0,2021-07-24 09:38:14+00:00,[],None
277,https://github.com/Dhanraj98/Dadda-Multiplier.git,2021-08-15 18:10:16+00:00,,0,Dhanraj98/Dadda-Multiplier,396445433,Verilog,Dadda-Multiplier,9,0,2021-08-23 15:58:32+00:00,[],None
278,https://github.com/NullReale/16bit_avalon_cmp_ddr2.git,2021-07-15 02:35:20+00:00,,0,NullReale/16bit_avalon_cmp_ddr2,386138461,Verilog,16bit_avalon_cmp_ddr2,14,0,2021-07-15 03:00:27+00:00,[],https://api.github.com/licenses/apache-2.0
279,https://github.com/nirneeth/nirneeth.git,2021-07-31 15:58:42+00:00,Config files for my GitHub profile.,0,nirneeth/nirneeth,391401214,Verilog,nirneeth,2,0,2021-08-08 04:20:06+00:00,"['config', 'github-config']",None
280,https://github.com/mfkiwl/QiXiaShan.git,2021-08-08 20:11:20+00:00,Open-source RISC-V processor.,0,mfkiwl/QiXiaShan,394061199,,QiXiaShan,454,0,2021-12-06 04:35:47+00:00,[],None
281,https://github.com/DominusSaltus/MusicBox.git,2021-08-08 14:01:46+00:00,A simple Piano on Arty 7,0,DominusSaltus/MusicBox,393976436,Verilog,MusicBox,3,0,2021-08-08 14:24:34+00:00,[],None
282,https://github.com/WonHoYoo/simpleVectorMachine.git,2021-08-13 12:20:46+00:00,,0,WonHoYoo/simpleVectorMachine,395644460,Verilog,simpleVectorMachine,2,0,2021-08-13 12:22:30+00:00,[],None
283,https://github.com/SamarpitKarar/GIPEDI_codes_Samarpit.git,2021-08-13 15:49:15+00:00,This repository contains all the design sources and testbenches used in the project.,0,SamarpitKarar/GIPEDI_codes_Samarpit,395709421,Verilog,GIPEDI_codes_Samarpit,5,0,2021-08-13 16:30:07+00:00,[],None
284,https://github.com/pradhi331/APC-OMS-memory-optimization.git,2021-08-14 13:46:33+00:00,based on IEEE paper by Pramod Kumar Meher on LUT Optimization for Memory-Based Computation,0,pradhi331/APC-OMS-memory-optimization,396021922,Verilog,APC-OMS-memory-optimization,194,0,2021-08-14 14:54:58+00:00,[],None
285,https://github.com/HasinduKariyawasam/ADSBusDesign.git,2021-08-15 20:08:17+00:00,Custom Bus design project,0,HasinduKariyawasam/ADSBusDesign,396479620,Verilog,ADSBusDesign,1125,0,2022-03-01 19:10:28+00:00,[],None
286,https://github.com/Anvesh98/Asynchronous-fifo.git,2021-08-14 20:02:00+00:00,,0,Anvesh98/Asynchronous-fifo,396116023,Verilog,Asynchronous-fifo,386,0,2021-08-14 20:07:16+00:00,[],None
287,https://github.com/ninarao09/ECEN350.git,2021-08-14 19:30:36+00:00,,0,ninarao09/ECEN350,396108810,Verilog,ECEN350,3343,0,2021-08-14 19:32:31+00:00,[],None
288,https://github.com/radii-dev/verilog_tutorial.git,2021-07-23 05:17:24+00:00,Gate and Logic Circuit implementation of Verilog for beginners using Arty-S7-50,0,radii-dev/verilog_tutorial,388685709,Verilog,verilog_tutorial,4359,0,2021-07-23 05:20:12+00:00,[],https://api.github.com/licenses/mit
289,https://github.com/gms4/hardwareproject.git,2021-07-19 21:36:36+00:00,,0,gms4/hardwareproject,387599916,Verilog,hardwareproject,225,0,2021-08-01 21:51:35+00:00,[],None
290,https://github.com/ddribin/go-board-vg-hw.git,2021-07-20 04:44:16+00:00,"""Designing Video Game Hardware in Verilog"" on the Go Board",0,ddribin/go-board-vg-hw,387674142,Verilog,go-board-vg-hw,1118,0,2021-08-07 20:25:31+00:00,[],https://api.github.com/licenses/mit
291,https://github.com/vulkanbets/fpga_projects.git,2021-07-25 23:50:23+00:00,,0,vulkanbets/fpga_projects,389462441,Verilog,fpga_projects,53,0,2021-09-02 16:57:29+00:00,[],None
292,https://github.com/pin-chen/Single-Cycle-CPU.git,2021-08-02 16:44:56+00:00,,0,pin-chen/Single-Cycle-CPU,392024636,Verilog,Single-Cycle-CPU,1798,0,2022-01-18 00:01:32+00:00,[],None
293,https://github.com/varun-rajesh/8BitComputer.git,2021-07-29 22:20:57+00:00,,0,varun-rajesh/8BitComputer,390863903,Verilog,8BitComputer,390,0,2021-08-19 01:30:17+00:00,[],None
294,https://github.com/a-niane/Single-Cycle-Processor.git,2021-07-30 20:51:23+00:00,Implemented Verilog on Vivado 2019 (Created Winter 2021),0,a-niane/Single-Cycle-Processor,391185305,Verilog,Single-Cycle-Processor,17,0,2023-01-05 01:55:22+00:00,[],None
295,https://github.com/MrNextor/I2C-master.git,2021-08-06 17:52:03+00:00,I2C master,0,MrNextor/I2C-master,393457885,Verilog,I2C-master,540,0,2021-08-09 17:06:33+00:00,[],https://api.github.com/licenses/mit
296,https://github.com/shl0mo/Clock-Verilog.git,2021-07-27 14:43:45+00:00,Clock system implmented in Verilog as a project to college. Made to work on Altera Cyclone II 2C20 FPGA (with 20000 LEs) board,0,shl0mo/Clock-Verilog,390019470,Verilog,Clock-Verilog,1,0,2022-01-05 02:49:29+00:00,"['clock-system', 'verilog']",None
297,https://github.com/dngtuankiet/RSA.git,2021-07-23 00:14:31+00:00,,0,dngtuankiet/RSA,388631554,Verilog,RSA,1789,0,2021-08-25 02:33:08+00:00,[],None
298,https://github.com/Thilini-Deshika/ARM-Processor-Implementation.git,2021-07-20 18:35:10+00:00,,0,Thilini-Deshika/ARM-Processor-Implementation,387882366,Verilog,ARM-Processor-Implementation,2213,0,2021-07-20 19:14:54+00:00,[],None
299,https://github.com/Nagasaigoud/Asynchronous-FIFO.git,2021-07-28 13:46:15+00:00,Asynchronous FIFO,0,Nagasaigoud/Asynchronous-FIFO,390366904,Verilog,Asynchronous-FIFO,510,0,2021-08-10 05:01:11+00:00,[],None
300,https://github.com/matthlud/HDLBits.git,2021-07-13 17:27:04+00:00,Solutions from: https://hdlbits.01xz.net/wiki/Main_Page,0,matthlud/HDLBits,385684041,Verilog,HDLBits,17,0,2021-07-19 21:48:02+00:00,[],https://api.github.com/licenses/apache-2.0
301,https://github.com/datdonguyen99/DOAN.git,2021-07-14 01:33:11+00:00,,0,datdonguyen99/DOAN,385780054,Verilog,DOAN,1054,0,2021-07-14 01:37:00+00:00,[],None
302,https://github.com/clover-forever/COMPUTER-ORGANIZATION.git,2021-07-11 02:38:13+00:00,,0,clover-forever/COMPUTER-ORGANIZATION,384845510,Verilog,COMPUTER-ORGANIZATION,6324,0,2021-12-15 14:49:57+00:00,[],None
303,https://github.com/thanh-cnguyen/N-bit-ALU-with-zero.git,2021-07-12 18:23:18+00:00,The ALU can perform 7 logics and detect empty outputs. This works for the N-bit numbers. The test bench is designed to check 32-bit numbers.,0,thanh-cnguyen/N-bit-ALU-with-zero,385344210,Verilog,N-bit-ALU-with-zero,8,0,2023-01-25 15:15:22+00:00,"['n-bit-alu', 'verilog']",None
304,https://github.com/Anvesh98/daddamultiplier.git,2021-08-14 17:02:43+00:00,,0,Anvesh98/daddamultiplier,396073284,Verilog,daddamultiplier,771,0,2021-08-15 12:47:12+00:00,[],None
305,https://github.com/LimKienLiang/CAD-Newbie.git,2021-07-15 07:51:38+00:00,,0,LimKienLiang/CAD-Newbie,386209242,Verilog,CAD-Newbie,37,0,2021-07-17 06:01:40+00:00,[],None
306,https://github.com/SethuMadhavM/Dadda_16bit.git,2021-07-17 08:12:52+00:00,,0,SethuMadhavM/Dadda_16bit,386878272,Verilog,Dadda_16bit,1607,0,2021-07-17 15:34:47+00:00,[],None
307,https://github.com/RndMnkIII/aliens_io_mapper.git,2021-07-19 16:12:21+00:00,,0,RndMnkIII/aliens_io_mapper,387523875,Verilog,aliens_io_mapper,47164,0,2021-07-24 11:20:14+00:00,[],None
308,https://github.com/siriusBl4ck/Single-Cycle-RISC-V.git,2021-07-19 16:58:16+00:00,a single cycle RISC-V CPU using the RV32I instruction set in Verilog,0,siriusBl4ck/Single-Cycle-RISC-V,387536486,Verilog,Single-Cycle-RISC-V,74,0,2022-03-03 02:54:16+00:00,[],None
309,https://github.com/Ben1152000/verilog-experiments.git,2021-07-19 19:56:03+00:00,A number of random verilog projects,1,Ben1152000/verilog-experiments,387579094,Verilog,verilog-experiments,99,0,2021-08-14 01:44:03+00:00,[],None
310,https://github.com/khushia2/RISC-y-Business.git,2021-07-15 20:05:08+00:00,A 5-stage pipelined RV32I processor built in SystemVerilog. Won 2nd place (out of 50 teams) in the design competition.,0,khushia2/RISC-y-Business,386410466,Verilog,RISC-y-Business,208,0,2021-08-25 07:29:44+00:00,[],None
311,https://github.com/dismastoo/Multiplexer-verilog-project.git,2021-08-05 05:21:25+00:00,,0,dismastoo/Multiplexer-verilog-project,392912392,Verilog,Multiplexer-verilog-project,18,0,2021-08-05 05:23:33+00:00,[],None
312,https://github.com/LamprosGrammatikopoulos/Logical-Design.git,2021-08-11 12:18:27+00:00,Completed code of circuits for SynaptiCAD Verilog Simulator.,0,LamprosGrammatikopoulos/Logical-Design,394978376,Verilog,Logical-Design,949,0,2022-03-31 06:24:31+00:00,[],https://api.github.com/licenses/agpl-3.0
313,https://github.com/jainraunak/Synchronous-Counters.git,2021-08-11 12:29:55+00:00,,0,jainraunak/Synchronous-Counters,394981595,Verilog,Synchronous-Counters,540,0,2021-08-11 12:31:17+00:00,[],https://api.github.com/licenses/apache-2.0
314,https://github.com/RISHABH-IIT/testing.git,2021-08-11 13:54:59+00:00,,0,RISHABH-IIT/testing,395006919,Verilog,testing,6,0,2021-08-11 14:01:22+00:00,[],None
315,https://github.com/ayesha-ishaq/ALU-RegisterFile.git,2021-08-11 18:54:50+00:00,Verilog code for MIPs architecture based 4 with ALU and Register file,0,ayesha-ishaq/ALU-RegisterFile,395088739,Verilog,ALU-RegisterFile,4,0,2021-08-11 18:58:03+00:00,[],None
316,https://github.com/ddacot/Asynchronous-Fifo.git,2021-07-21 00:02:49+00:00,,0,ddacot/Asynchronous-Fifo,387942408,Verilog,Asynchronous-Fifo,27,0,2021-07-21 00:43:25+00:00,[],None
317,https://github.com/imchristina/risky.git,2021-07-26 17:59:03+00:00,,0,imchristina/risky,389724018,Verilog,risky,6,0,2021-10-12 16:09:50+00:00,[],https://api.github.com/licenses/mit
318,https://github.com/jedhelmers/fpga-coursera.git,2021-07-26 22:59:12+00:00,,0,jedhelmers/fpga-coursera,389789784,Verilog,fpga-coursera,308,0,2022-03-27 19:43:58+00:00,[],None
319,https://github.com/JorgeNava/Arq_Comp_P2.git,2021-07-28 04:40:08+00:00,,0,JorgeNava/Arq_Comp_P2,390214986,Verilog,Arq_Comp_P2,5709,0,2021-07-28 04:42:06+00:00,[],None
320,https://github.com/JesusAlfred/Practice1-ArithmeticLogicUnit.git,2021-07-29 01:59:02+00:00,Desarrollo de una unidad aritmética lógica en verilog,0,JesusAlfred/Practice1-ArithmeticLogicUnit,390567644,Verilog,Practice1-ArithmeticLogicUnit,1,0,2021-07-29 02:01:02+00:00,[],None
321,https://github.com/praneeth-github/nPower-Pipeline-in-Verilog.git,2021-07-29 06:40:58+00:00,,0,praneeth-github/nPower-Pipeline-in-Verilog,390627131,Verilog,nPower-Pipeline-in-Verilog,754,0,2021-07-29 06:45:15+00:00,[],None
322,https://github.com/nishantsaurabh706/6-stage-Pipelined-Processor.git,2021-07-25 07:11:36+00:00,"6 stage pipelined processor, instruction sets are in pdf attached, code language Verilog",0,nishantsaurabh706/6-stage-Pipelined-Processor,389285377,Verilog,6-stage-Pipelined-Processor,2206,0,2021-08-06 19:45:18+00:00,[],None
323,https://github.com/saimineesh786/Pentavium_Cipher.git,2021-07-23 06:14:29+00:00,Cipher Based On The Increased Radii Of Cellular Automata,0,saimineesh786/Pentavium_Cipher,388696513,Verilog,Pentavium_Cipher,4,0,2021-10-01 03:47:52+00:00,[],None
324,https://github.com/mkmuis/MAS_MULTIPLIER.git,2021-07-23 13:24:01+00:00,,0,mkmuis/MAS_MULTIPLIER,388809500,Verilog,MAS_MULTIPLIER,577,0,2021-07-28 05:01:06+00:00,[],https://api.github.com/licenses/apache-2.0
325,https://github.com/toodury/ARMprocessor.git,2021-07-23 07:00:31+00:00,5-stage Pipelined ARM-reduced Processor Design,0,toodury/ARMprocessor,388707964,Verilog,ARMprocessor,7283,0,2021-07-26 06:16:38+00:00,[],None
326,https://github.com/Tizyee/0723.git,2021-07-23 11:19:47+00:00,,0,Tizyee/0723,388776752,Verilog,0723,50,0,2021-07-23 11:22:08+00:00,[],None
327,https://github.com/SuhailAhamed2000/PISO.git,2021-07-25 14:11:00+00:00,"The shift register, which allows parallel input (data is given separately to each flip flop and in a simultaneous manner) and produces a serial output is known as Parallel-In Serial-Out shift register.",0,SuhailAhamed2000/PISO,389362798,Verilog,PISO,1,0,2021-07-25 14:13:35+00:00,"['verilog', 'shift-register', 'piso']",None
328,https://github.com/Noconfiesenmiscodigos/IOE-Computer-Organization-Architecture-Lab-Code-Solutions.git,2021-08-05 12:00:25+00:00,B.E. III-I,0,Noconfiesenmiscodigos/IOE-Computer-Organization-Architecture-Lab-Code-Solutions,393025523,Verilog,IOE-Computer-Organization-Architecture-Lab-Code-Solutions,17833,0,2021-10-30 02:50:19+00:00,[],None
329,https://github.com/flockeyrocks/combination-circuits-building-blocks.git,2021-08-04 22:53:50+00:00,,0,flockeyrocks/combination-circuits-building-blocks,392843477,Verilog,combination-circuits-building-blocks,92,0,2021-08-04 22:54:58+00:00,[],None
330,https://github.com/rsharanesh/PSRV32-Code-Base.git,2021-08-02 10:44:02+00:00,The Private Code base that has been used for PSRV32 Processor.,0,rsharanesh/PSRV32-Code-Base,391910148,Verilog,PSRV32-Code-Base,291,0,2023-12-09 17:06:26+00:00,[],None
331,https://github.com/MatheusAlvesAlmeida/Projeto-Infra-HW-2020.2.git,2021-07-14 22:19:51+00:00,"Esse repositório contém os arquivos do projeto da disciplina de Infraestrutura de Hardware, ministrada pelo professor Adriano Sarmento.",0,MatheusAlvesAlmeida/Projeto-Infra-HW-2020.2,386090071,Verilog,Projeto-Infra-HW-2020.2,196,0,2023-09-26 21:57:53+00:00,[],None
332,https://github.com/wxwgit/-CPU.git,2021-07-17 01:36:49+00:00,,0,wxwgit/-CPU,386807655,Verilog,-CPU,14,0,2021-07-17 01:45:39+00:00,[],None
333,https://github.com/harisk2000/EE2003_CompOrg_RISC_V.git,2021-07-13 17:53:54+00:00,,0,harisk2000/EE2003_CompOrg_RISC_V,385691031,Verilog,EE2003_CompOrg_RISC_V,92,0,2021-07-13 18:28:49+00:00,[],None
334,https://github.com/utkjainiitk/CS220.git,2021-07-14 19:58:10+00:00,,0,utkjainiitk/CS220,386061273,Verilog,CS220,0,0,2021-07-14 20:03:45+00:00,[],None
335,https://github.com/TehWengWah/Number_Guessing_Game.git,2021-07-11 20:31:05+00:00,The purpose of this project is to design and develop a simple number guessing game. ,0,TehWengWah/Number_Guessing_Game,385046578,Verilog,Number_Guessing_Game,70,0,2021-07-13 12:22:27+00:00,['verilog'],None
336,https://github.com/SanchD/connect6-ai.git,2021-07-12 13:09:01+00:00,FPGA based Connect6 Game Solver AI,0,SanchD/connect6-ai,385251619,Verilog,connect6-ai,15,0,2021-07-12 15:08:59+00:00,[],https://api.github.com/licenses/mit
337,https://github.com/MorriganR/DE10-Nano-JTAG.git,2021-07-22 13:28:12+00:00,,0,MorriganR/DE10-Nano-JTAG,388471913,Verilog,DE10-Nano-JTAG,124,0,2022-01-10 15:05:02+00:00,[],https://api.github.com/licenses/unlicense
338,https://github.com/hypercurious/fpga-projects.git,2021-07-22 15:57:12+00:00,University projects on FPGA including the implementation of a digital clock on a seven segment and a calculator getting inputs from a ps2 keyboard and showing the result on the seven segment,0,hypercurious/fpga-projects,388519248,Verilog,fpga-projects,1366,0,2021-11-23 09:21:54+00:00,"['fpga', 'ps2-keyboard', '7-segment', 'led', 'xilinx-fpga']",None
339,https://github.com/snyder-verilog/seven-segment-display-driver.git,2021-08-04 23:46:57+00:00,,0,snyder-verilog/seven-segment-display-driver,392851565,Verilog,seven-segment-display-driver,6,0,2021-08-04 23:47:17+00:00,[],None
340,https://github.com/DenizRumet/Lab_7.git,2021-08-05 07:31:07+00:00,,0,DenizRumet/Lab_7,392947810,Verilog,Lab_7,2,0,2021-08-05 07:31:30+00:00,[],None
341,https://github.com/flockeyrocks/fsms.git,2021-08-04 22:44:07+00:00,,0,flockeyrocks/fsms,392841947,Verilog,fsms,267,0,2021-08-04 22:45:46+00:00,[],None
342,https://github.com/TanmayJoshi1354/SSP_learning_repository.git,2021-08-04 14:45:58+00:00,,0,TanmayJoshi1354/SSP_learning_repository,392725166,Verilog,SSP_learning_repository,316,0,2021-08-21 14:58:43+00:00,[],None
343,https://github.com/vonndutched/Binary-Image-Converter-Using-Verilog.git,2021-08-06 18:41:25+00:00,,0,vonndutched/Binary-Image-Converter-Using-Verilog,393470338,Verilog,Binary-Image-Converter-Using-Verilog,2208,0,2021-08-06 18:43:31+00:00,[],None
344,https://github.com/yehia2000000/Huffman-Decoding-Reciever.git,2021-08-06 15:56:46+00:00,,0,yehia2000000/Huffman-Decoding-Reciever,393427518,Verilog,Huffman-Decoding-Reciever,37,0,2021-08-10 17:07:20+00:00,[],None
345,https://github.com/FilippoCheein/FPGA_Design.git,2021-08-05 22:31:45+00:00,,0,FilippoCheein/FPGA_Design,393185138,Verilog,FPGA_Design,2532,0,2021-08-16 00:59:05+00:00,[],None
346,https://github.com/Ashutosh-Rao/Digital-Circuits-Verilog.git,2021-08-11 07:44:06+00:00,,0,Ashutosh-Rao/Digital-Circuits-Verilog,394906625,Verilog,Digital-Circuits-Verilog,21,0,2021-08-11 09:02:16+00:00,[],None
347,https://github.com/three-bee/manav33.git,2021-08-02 17:52:33+00:00,METU EE314 Digital Electronics Laboratory term project: FPGA based point-of-sale terminal. ,0,three-bee/manav33,392044281,Verilog,manav33,19,0,2021-08-02 18:30:45+00:00,[],None
348,https://github.com/MandarBapat/IITK-CSE-Course-Materials.git,2021-08-02 19:43:45+00:00,,0,MandarBapat/IITK-CSE-Course-Materials,392074242,Verilog,IITK-CSE-Course-Materials,1873454,0,2021-11-27 11:31:57+00:00,[],None
349,https://github.com/alperenkalay98/computer_architecture.git,2021-07-24 17:09:42+00:00,Some basic processor designs for computer architecture course,0,alperenkalay98/computer_architecture,389156147,Verilog,computer_architecture,730,0,2022-04-03 15:56:55+00:00,[],None
350,https://github.com/josephjeevan/Asynchronous-FIFO.git,2021-07-26 13:31:59+00:00,Asynchronous FIFO,0,josephjeevan/Asynchronous-FIFO,389643648,Verilog,Asynchronous-FIFO,689,0,2021-08-10 11:28:40+00:00,[],None
351,https://github.com/luoshui9/VentingMachine.git,2021-08-03 04:06:19+00:00,,0,luoshui9/VentingMachine,392183613,Verilog,VentingMachine,759,0,2021-08-03 04:07:17+00:00,[],None
352,https://github.com/Glaciens/Galaga.git,2021-07-30 07:47:45+00:00,FPGA (Verilog),0,Glaciens/Galaga,390978283,Verilog,Galaga,11230,0,2021-08-06 12:34:13+00:00,[],None
353,https://github.com/antonson-j1/Verilog-Projects.git,2021-07-19 11:41:22+00:00,,0,antonson-j1/Verilog-Projects,387443807,Verilog,Verilog-Projects,1,0,2021-07-19 11:42:23+00:00,[],None
354,https://github.com/Prajyoth-4657/EE2003_Project.git,2021-07-19 14:33:07+00:00,,0,Prajyoth-4657/EE2003_Project,387494106,Verilog,EE2003_Project,757,0,2021-07-19 14:34:50+00:00,[],None
355,https://github.com/solitarynew/DigitalCircuitExperiment.git,2021-08-09 10:46:18+00:00,My digital circuit experiment course related experiments,0,solitarynew/DigitalCircuitExperiment,394252412,Verilog,DigitalCircuitExperiment,415318,0,2021-08-09 10:57:57+00:00,[],None
356,https://github.com/HieronZhang/trivial_FSM.git,2021-07-29 06:31:01+00:00,,0,HieronZhang/trivial_FSM,390624700,Verilog,trivial_FSM,1,0,2021-07-29 07:40:02+00:00,[],None
357,https://github.com/venkateshknpl/5-Stage-Pipelined-RISC-Processor.git,2021-07-29 08:14:02+00:00,6 State Pipelined RISC Processor,0,venkateshknpl/5-Stage-Pipelined-RISC-Processor,390650820,Verilog,5-Stage-Pipelined-RISC-Processor,3923,0,2021-08-20 09:00:01+00:00,[],None
358,https://github.com/cuixuyang615/16-bits-MIPS-CPU-design.git,2021-07-28 13:34:59+00:00,A rudimentary design of classic MIPS instruction set CPU using Verilog,0,cuixuyang615/16-bits-MIPS-CPU-design,390363224,Verilog,16-bits-MIPS-CPU-design,2507,0,2021-07-29 13:17:53+00:00,"['verilog', 'mips', 'cpu']",None
359,https://github.com/Nallinikanth18/Digital_Clock.git,2021-07-27 08:21:30+00:00,Digital Clock implementation on Verilog,0,Nallinikanth18/Digital_Clock,389903620,Verilog,Digital_Clock,27,0,2021-08-10 17:37:14+00:00,[],None
360,https://github.com/SihanGunarathne/Elevator_Controller_Systems.git,2021-08-06 06:19:25+00:00,,0,SihanGunarathne/Elevator_Controller_Systems,393273980,Verilog,Elevator_Controller_Systems,7240,0,2021-08-06 06:31:16+00:00,[],https://api.github.com/licenses/mit
361,https://github.com/infini8-13/des-aes-128bit-verilog.git,2021-08-10 14:59:35+00:00,,0,infini8-13/des-aes-128bit-verilog,394694810,Verilog,des-aes-128bit-verilog,8230,0,2022-05-15 11:09:49+00:00,[],https://api.github.com/licenses/gpl-3.0
362,https://github.com/atahanakar/Digital-Design-2.git,2021-07-19 03:45:03+00:00,,0,atahanakar/Digital-Design-2,387330879,Verilog,Digital-Design-2,175021,0,2021-09-01 03:41:42+00:00,[],None
363,https://github.com/makhalid1999/Algorithms.git,2021-07-22 16:44:04+00:00,"A repository of the algorithms that I implement Verilog, MATLAB, etc.",0,makhalid1999/Algorithms,388532827,Verilog,Algorithms,10,0,2021-11-14 07:38:44+00:00,[],None
364,https://github.com/gagandeep25/EE2001-Digital-Systems-Lab.git,2021-07-19 13:49:39+00:00,,0,gagandeep25/EE2001-Digital-Systems-Lab,387480504,Verilog,EE2001-Digital-Systems-Lab,1527,0,2021-07-19 13:57:57+00:00,[],None
365,https://github.com/praneeth-github/RISC-V-ALU-Design.git,2021-07-29 06:16:38+00:00,,0,praneeth-github/RISC-V-ALU-Design,390621294,Verilog,RISC-V-ALU-Design,2346,0,2021-07-29 06:20:15+00:00,[],None
366,https://github.com/Saisri677/USR-USING-GDI-TECH.git,2021-07-29 06:51:51+00:00,,0,Saisri677/USR-USING-GDI-TECH,390629819,Verilog,USR-USING-GDI-TECH,2,0,2021-07-29 07:17:11+00:00,[],None
367,https://github.com/CJH8668/accelerator.git,2021-08-13 02:48:48+00:00,The design of an accelerator for DRAM based on E203.,0,CJH8668/accelerator,395502250,Verilog,accelerator,625,0,2021-08-26 03:10:57+00:00,[],None
368,https://github.com/vanishka-tanwar/4bit_magnitude_comparator.git,2021-08-13 16:03:03+00:00,Design of 4 bit Magnitude Comparator using Openlane and sky130,0,vanishka-tanwar/4bit_magnitude_comparator,395713552,Verilog,4bit_magnitude_comparator,14593,0,2021-08-28 13:38:45+00:00,[],None
369,https://github.com/mranky97/hardwareaccelerator.git,2021-08-08 16:52:49+00:00,,0,mranky97/hardwareaccelerator,394018605,Verilog,hardwareaccelerator,7,0,2021-08-08 16:57:24+00:00,[],None
370,https://github.com/MS-Tsai/CCUEE_FPGA_Digital_Design_Laboratory.git,2021-08-08 07:56:11+00:00,,0,MS-Tsai/CCUEE_FPGA_Digital_Design_Laboratory,393896405,Verilog,CCUEE_FPGA_Digital_Design_Laboratory,25157,0,2021-08-08 11:12:01+00:00,[],None
371,https://github.com/zhu849/routing-algo_on_FPGA.git,2021-08-10 05:41:53+00:00,,0,zhu849/routing-algo_on_FPGA,394538203,Verilog,routing-algo_on_FPGA,318,0,2021-08-11 10:19:29+00:00,[],None
372,https://github.com/Moebius-Klaus/EEE3096S_GRNMAT017_MCKLAU003.git,2021-08-13 22:00:08+00:00,,0,Moebius-Klaus/EEE3096S_GRNMAT017_MCKLAU003,395808686,Verilog,EEE3096S_GRNMAT017_MCKLAU003,48,0,2021-11-03 22:14:02+00:00,[],None
373,https://github.com/jneirar/ProyectoArch.git,2021-07-20 22:50:01+00:00,,0,jneirar/ProyectoArch,387931399,Verilog,ProyectoArch,1471,0,2021-07-30 15:02:11+00:00,[],None
374,https://github.com/ashekajikumar/32-BIT-custom-pipelined-microprocessor.git,2021-07-21 17:09:02+00:00,,0,ashekajikumar/32-BIT-custom-pipelined-microprocessor,388190830,Verilog,32-BIT-custom-pipelined-microprocessor,9,0,2021-07-21 17:12:27+00:00,[],None
375,https://github.com/PAPERUSED/DoubleFrequency-LIA.git,2021-07-21 19:43:36+00:00,,0,PAPERUSED/DoubleFrequency-LIA,388228176,Verilog,DoubleFrequency-LIA,10,0,2021-07-27 10:11:13+00:00,[],None
376,https://github.com/Darkgambler/FALLOS.git,2021-07-16 23:37:05+00:00,,0,Darkgambler/FALLOS,386789502,Verilog,FALLOS,3125,0,2021-07-16 23:42:13+00:00,[],None
377,https://github.com/Z3FR3N/Progetto-Reti-Logiche.git,2021-07-15 13:22:19+00:00,Creazione di una rete combinatoria tramite porte in logica NAND,0,Z3FR3N/Progetto-Reti-Logiche,386298135,Verilog,Progetto-Reti-Logiche,4108,0,2022-01-28 20:51:31+00:00,[],None
378,https://github.com/howiejayz/Intel-Altera-FPGA-Development.git,2021-07-15 21:25:29+00:00,,0,howiejayz/Intel-Altera-FPGA-Development,386427640,Verilog,Intel-Altera-FPGA-Development,30995,0,2021-07-15 21:36:58+00:00,[],None
379,https://github.com/ganeshaaraj97/Matrix-Multiplication-Using-MultiCore-Processor.git,2021-07-15 16:19:04+00:00,,0,ganeshaaraj97/Matrix-Multiplication-Using-MultiCore-Processor,386353642,Verilog,Matrix-Multiplication-Using-MultiCore-Processor,1039,0,2022-01-08 05:44:39+00:00,[],None
380,https://github.com/AnLingzhi/h265enc.git,2021-07-26 12:20:31+00:00,,0,AnLingzhi/h265enc,389622489,Verilog,h265enc,3193,0,2021-07-26 12:22:54+00:00,[],None
381,https://github.com/Badboy1307/PWM_DAC.git,2021-07-27 05:05:49+00:00,PWM based DAC implementation in Verilog,0,Badboy1307/PWM_DAC,389855210,,PWM_DAC,4,0,2022-02-09 17:13:59+00:00,[],None
382,https://github.com/Gabriel-Jaramillo/Verilog-HW.git,2021-07-30 02:46:36+00:00,Verilog modules with corresponding TBs,0,Gabriel-Jaramillo/Verilog-HW,390908378,Verilog,Verilog-HW,5,0,2021-07-30 02:52:01+00:00,[],None
383,https://github.com/balwantuladi13/Project_Triple_DES.git,2021-07-30 17:30:12+00:00,,0,balwantuladi13/Project_Triple_DES,391145295,Verilog,Project_Triple_DES,14,0,2021-07-30 17:33:57+00:00,[],None
384,https://github.com/BoomNZoom/MIPS.git,2021-07-28 12:07:38+00:00,A verilog representation of a MIPS processor and a system verilog implementation of testbenches for various parts of this CPU.It is all about seeing if it works as intended.Work in progress.,0,BoomNZoom/MIPS,390337798,Verilog,MIPS,22,0,2021-08-02 07:30:28+00:00,[],None
385,https://github.com/Qitianxiaosheng/che_verilog.git,2021-08-01 12:46:35+00:00,jus,0,Qitianxiaosheng/che_verilog,391624980,Verilog,che_verilog,17,0,2022-04-12 03:38:05+00:00,[],None
386,https://github.com/DenizRumet/CountCar.git,2021-08-04 06:59:34+00:00,"FSM, count cars",0,DenizRumet/CountCar,392584107,Verilog,CountCar,1,0,2021-08-04 07:00:34+00:00,[],None
387,https://github.com/qingyli/Flappy-Bird.git,2021-08-04 16:08:53+00:00,,0,qingyli/Flappy-Bird,392751691,Verilog,Flappy-Bird,6,0,2021-08-04 16:10:01+00:00,[],None
388,https://github.com/codingUniv/iob-soc-knn.git,2021-08-04 19:26:31+00:00,Based on iob-soc and integrates a new peripheral that implements K Nearest Neighbors algorithm. ,0,codingUniv/iob-soc-knn,392804344,Verilog,iob-soc-knn,179800,0,2021-08-23 14:50:23+00:00,[],https://api.github.com/licenses/mit
389,https://github.com/jamesheavey/ELEC5566M-Assignment2.git,2021-08-04 23:33:30+00:00,,0,jamesheavey/ELEC5566M-Assignment2,392849552,Verilog,ELEC5566M-Assignment2,76871,0,2021-08-04 23:34:03+00:00,[],None
390,https://github.com/snyder-verilog/stopwatch.git,2021-08-04 23:45:51+00:00,,0,snyder-verilog/stopwatch,392851374,Verilog,stopwatch,10,0,2021-08-04 23:46:38+00:00,[],None
391,https://github.com/snyder-verilog/morse-decoder.git,2021-08-04 23:38:58+00:00,,0,snyder-verilog/morse-decoder,392850393,Verilog,morse-decoder,12,0,2021-08-04 23:42:32+00:00,[],None
392,https://github.com/JunzWu/ECE-437-Sensors-and-Instrumentation.git,2021-08-06 00:45:27+00:00,,0,JunzWu/ECE-437-Sensors-and-Instrumentation,393205735,Verilog,ECE-437-Sensors-and-Instrumentation,10741,0,2021-08-24 18:40:35+00:00,[],None
393,https://github.com/rogerpease/PYNQRandomNumberGenerator.git,2021-07-26 23:33:33+00:00,,0,rogerpease/PYNQRandomNumberGenerator,389795533,Verilog,PYNQRandomNumberGenerator,48,0,2021-09-08 11:48:02+00:00,[],None
394,https://github.com/asmaasameh99/8bit_DADDA_Multiplier.git,2021-08-01 16:17:03+00:00,DADDA multiplier  uses a selection of full and half adders to sum the partial products in stages until two numbers are left,0,asmaasameh99/8bit_DADDA_Multiplier,391676905,Verilog,8bit_DADDA_Multiplier,104,0,2021-08-03 12:06:26+00:00,[],None
395,https://github.com/longvietchu/Pipelined-RISC-V.git,2021-08-15 15:31:50+00:00,🔌 Project for Computer Architecture course,0,longvietchu/Pipelined-RISC-V,396397956,Verilog,Pipelined-RISC-V,5,0,2021-08-15 15:58:16+00:00,[],None
396,https://github.com/CapacitorA10/deeperent_NPU.git,2021-08-10 05:28:19+00:00,for deperent NPU study group,0,CapacitorA10/deeperent_NPU,394535612,Verilog,deeperent_NPU,2,0,2021-08-10 05:29:37+00:00,[],None
397,https://github.com/jerry9055/axi4_singleCycle.git,2021-08-10 07:34:56+00:00,,0,jerry9055/axi4_singleCycle,394564926,Verilog,axi4_singleCycle,26,0,2021-08-10 07:51:10+00:00,[],None
398,https://github.com/Mr-Time1/PongGame.git,2021-07-19 05:46:16+00:00,,0,Mr-Time1/PongGame,387352819,Verilog,PongGame,5159,0,2021-07-19 05:51:33+00:00,[],None
399,https://github.com/prathampathak/Tic-Tac-Tao.git,2021-07-19 18:17:46+00:00,,0,prathampathak/Tic-Tac-Tao,387556694,Verilog,Tic-Tac-Tao,9,0,2021-07-20 14:39:24+00:00,[],None
400,https://github.com/SuhailAhamed2000/PIPO.git,2021-07-25 14:13:49+00:00,"The shift register, which allows parallel input (data is given separately to each flip flop and in a simultaneous manner) and also produces a parallel output is known as Parallel-In parallel-Out shift register.",0,SuhailAhamed2000/PIPO,389363428,Verilog,PIPO,1,0,2021-07-25 14:16:08+00:00,"['verilog', 'shift-register', 'pipo']",None
401,https://github.com/KyleeeChiu/CO_Pipelined.git,2021-07-21 12:58:51+00:00,,0,KyleeeChiu/CO_Pipelined,388117549,Verilog,CO_Pipelined,14,0,2021-07-21 13:40:46+00:00,[],None
402,https://github.com/tuxey/pwm_gen_fpga.git,2021-07-21 22:54:12+00:00,PWM generator for LEDs with Altera Cyclone IV FPGA,0,tuxey/pwm_gen_fpga,388265371,Verilog,pwm_gen_fpga,898,0,2021-10-06 18:06:44+00:00,[],None
403,https://github.com/JHuadong/ManchesterDetect.git,2021-07-13 16:27:41+00:00,These are VerilogHDL .v files which include the basic function of detecting manchester signal and test example.,1,JHuadong/ManchesterDetect,385668098,Verilog,ManchesterDetect,2,0,2021-07-13 16:28:36+00:00,[],None
404,https://github.com/QianpengLi577/multiplication-on-Galois-Field.git,2021-07-23 11:55:23+00:00,,0,QianpengLi577/multiplication-on-Galois-Field,388785567,Verilog,multiplication-on-Galois-Field,2,0,2021-07-23 12:02:48+00:00,[],None
405,https://github.com/SakthiExplorer/Pedestrian_traffic_control.git,2021-07-25 11:38:08+00:00,"There are three colour signals: Green, Yellow and Red. The processes are: Red signal - the vehicles are moving on the road; Yellow signal - the vehicles as well as pedestrians need to wait; Red signal - pedestrians cross the road and vehicles wait until red signal arrives. Initially, green signal glows which is followed by yellow, red, yellow, green, yellow, red....   ",0,SakthiExplorer/Pedestrian_traffic_control,389332932,Verilog,Pedestrian_traffic_control,43,0,2021-07-25 11:42:16+00:00,[],None
406,https://github.com/JorgeNava/Arq_Comp_P1.git,2021-07-28 03:18:26+00:00,Practica #1 de Arquitectura de Computadoras ,0,JorgeNava/Arq_Comp_P1,390197827,Verilog,Arq_Comp_P1,1,0,2021-07-28 04:50:47+00:00,[],None
407,https://github.com/huangchink/CNN_imageprocessing.git,2021-07-27 09:34:48+00:00,,0,huangchink/CNN_imageprocessing,389925417,Verilog,CNN_imageprocessing,1036,0,2021-07-27 09:41:03+00:00,[],None
408,https://github.com/flockeyrocks/morse-code-to-ascii.git,2021-08-04 23:17:55+00:00,,0,flockeyrocks/morse-code-to-ascii,392847304,Verilog,morse-code-to-ascii,12,0,2021-08-04 23:18:25+00:00,[],None
409,https://github.com/BurievSardor/wrapped_rgb_mixer.git,2021-07-31 19:57:59+00:00,,0,BurievSardor/wrapped_rgb_mixer,391452369,Verilog,wrapped_rgb_mixer,2780,0,2021-07-31 21:04:00+00:00,[],https://api.github.com/licenses/apache-2.0
410,https://github.com/alizindari/FPGA-project.git,2021-07-31 19:00:32+00:00,An implementation of mips architecture on FPGA using verilog,0,alizindari/FPGA-project,391441291,Verilog,FPGA-project,1036,0,2021-08-01 07:17:37+00:00,"['mips-architecture', 'mips32', 'fpga', 'verilog', 'computer-architecture', 'hardware-description-language', 'hardware-designs']",None
411,https://github.com/theEngMansour/Digital_System_Design_with_Verilog_HDL.git,2021-07-31 09:37:22+00:00,Mansour Ahmed - Digital System Design with Verilog HDL,0,theEngMansour/Digital_System_Design_with_Verilog_HDL,391312599,Verilog,Digital_System_Design_with_Verilog_HDL,58,0,2021-07-31 15:19:16+00:00,[],None
412,https://github.com/sherinkk/VLSI-and-ComputerArchitecture.git,2021-08-06 19:09:47+00:00,,0,sherinkk/VLSI-and-ComputerArchitecture,393477338,Verilog,VLSI-and-ComputerArchitecture,6117,0,2021-08-06 19:14:32+00:00,[],None
413,https://github.com/Bun-chan/qsys_control_de10Lite.git,2021-07-12 20:45:22+00:00,,0,Bun-chan/qsys_control_de10Lite,385378781,Verilog,qsys_control_de10Lite,18,0,2021-07-12 20:47:02+00:00,[],None
414,https://github.com/varunmadhavam/openpower_ppt.git,2021-07-19 06:10:38+00:00,,0,varunmadhavam/openpower_ppt,387357947,Verilog,openpower_ppt,2890,0,2021-07-19 06:12:46+00:00,[],https://api.github.com/licenses/mit
415,https://github.com/1042976/TETRIS.git,2021-07-19 06:28:07+00:00,A Tetris game that includes I/O for the players to control the movement of falling pieces using the buttons/switches on the FPGA,0,1042976/TETRIS,387361732,Verilog,TETRIS,45823,0,2022-08-07 16:49:50+00:00,[],None
416,https://github.com/Aniket-AL/Computer-Organization.git,2021-07-19 13:44:18+00:00,,0,Aniket-AL/Computer-Organization,387478733,Verilog,Computer-Organization,892,0,2021-07-19 13:46:35+00:00,[],None
417,https://github.com/ayaatef223/PCI-Project.git,2021-07-20 16:12:44+00:00,,0,ayaatef223/PCI-Project,387847740,Verilog,PCI-Project,4,0,2021-07-20 16:13:38+00:00,[],None
418,https://github.com/CWRuo/mcpu_LED.git,2021-07-15 08:43:00+00:00,"Two LEDs blank on a Altera Demo Board, based on mcpu and verilog.",0,CWRuo/mcpu_LED,386222553,Verilog,mcpu_LED,208,0,2021-11-16 03:43:04+00:00,[],https://api.github.com/licenses/gpl-3.0
419,https://github.com/ChenWendi2001/MIPS-CPU.git,2021-07-11 04:08:49+00:00,"A 5-stage pipelined MIPS processor 💻, which supports stall, forwarding, branch-not-taken and cache.",0,ChenWendi2001/MIPS-CPU,384856992,Verilog,MIPS-CPU,2376,0,2021-07-11 04:13:08+00:00,[],None
420,https://github.com/cs980407/Digital_Thermometer.git,2021-07-11 08:59:07+00:00,,0,cs980407/Digital_Thermometer,384901700,Verilog,Digital_Thermometer,6586,0,2021-07-11 10:37:41+00:00,[],None
421,https://github.com/egegonul/32-bit-ARM-single-cycle-processor.git,2021-07-13 19:43:16+00:00,,0,egegonul/32-bit-ARM-single-cycle-processor,385717821,Verilog,32-bit-ARM-single-cycle-processor,122,0,2021-07-13 20:11:23+00:00,[],None
422,https://github.com/snyder-verilog/registers.git,2021-08-04 23:47:32+00:00,,0,snyder-verilog/registers,392851645,Verilog,registers,816,0,2021-08-04 23:47:51+00:00,[],None
423,https://github.com/yashwanthgadde/AESEncryptionFSMD.git,2021-08-03 12:03:03+00:00,,0,yashwanthgadde/AESEncryptionFSMD,392302936,Verilog,AESEncryptionFSMD,288,0,2021-08-03 13:07:58+00:00,[],None
424,https://github.com/BoomNZoom/FSM.git,2021-08-02 12:41:13+00:00,"Verilog program that describes a FSM,testbench to follow soon",0,BoomNZoom/FSM,391944306,Verilog,FSM,1,0,2021-08-02 12:45:16+00:00,[],None
425,https://github.com/MrNextor/DHT11.git,2021-08-02 17:22:26+00:00,1-wire bus interface (master) for interrogating the DHT11 digital sensor,1,MrNextor/DHT11,392035603,Verilog,DHT11,5565,0,2021-08-09 17:04:38+00:00,[],https://api.github.com/licenses/mit
426,https://github.com/flockeyrocks/parking-lot-occupancy-counter.git,2021-08-04 23:05:59+00:00,,0,flockeyrocks/parking-lot-occupancy-counter,392845445,Verilog,parking-lot-occupancy-counter,526,0,2021-08-04 23:09:15+00:00,[],None
427,https://github.com/snyder-verilog/fsms.git,2021-08-04 23:50:02+00:00,,0,snyder-verilog/fsms,392852011,Verilog,fsms,267,0,2021-08-04 23:50:21+00:00,[],None
428,https://github.com/TanmayD23/Car-alarm-system.git,2021-07-11 11:46:09+00:00,,0,TanmayD23/Car-alarm-system,384934405,Verilog,Car-alarm-system,3,0,2021-07-20 10:38:00+00:00,[],None
429,https://github.com/majeedullah/Stop_watch.git,2021-07-11 20:40:42+00:00,,0,majeedullah/Stop_watch,385048154,Verilog,Stop_watch,10,0,2021-07-11 20:44:51+00:00,[],None
430,https://github.com/jirayupeetakul-jay/fpgaMEMC_forCVS.git,2021-07-11 01:15:10+00:00,,0,jirayupeetakul-jay/fpgaMEMC_forCVS,384836050,Verilog,fpgaMEMC_forCVS,36,0,2021-07-11 01:16:10+00:00,[],None
431,https://github.com/25Aditya25/Floating_Point_Adder.git,2021-07-19 11:01:04+00:00,Verilog implementation of half precision adder on DE2 115 FPGA,0,25Aditya25/Floating_Point_Adder,387433451,Verilog,Floating_Point_Adder,31490,0,2021-07-19 11:07:27+00:00,[],None
432,https://github.com/samhita-97/VLSI-.git,2021-07-19 20:36:48+00:00,,0,samhita-97/VLSI-,387587954,Verilog,VLSI-,16148,0,2021-07-19 20:40:23+00:00,[],None
433,https://github.com/DaimonG/32bitSystemOnChip.git,2021-07-20 02:31:05+00:00,"A project detailing amendments to a 128-bit AES encryption core to work within a 32-bit SoC including functional verification, synthesis, place and route, and integration. ",0,DaimonG/32bitSystemOnChip,387649496,Verilog,32bitSystemOnChip,57976,0,2021-07-20 02:57:28+00:00,[],None
434,https://github.com/ryunchang/Mu0_Processor_Design.git,2021-07-22 10:42:05+00:00,디지털 시스템 설계 텀 프로젝트,0,ryunchang/Mu0_Processor_Design,388425642,Verilog,Mu0_Processor_Design,1609,0,2021-07-22 10:45:33+00:00,[],None
435,https://github.com/pritindra/Verilog_codes.git,2021-07-17 04:11:26+00:00,My ongoing  practice verilog hdl codes.,0,pritindra/Verilog_codes,386832970,Verilog,Verilog_codes,6965,0,2021-09-20 03:52:40+00:00,"['verilog', 'verilog-programs', 'verilog-code']",None
436,https://github.com/riya047/CRC.git,2021-07-21 19:03:22+00:00,Cyclic Redundancy Check (CRC) is an error-detecting code commonly used in digital networks and storage devices to detect accidental changes to raw data. ,0,riya047/CRC,388218796,Verilog,CRC,2,0,2021-07-21 19:28:02+00:00,[],None
437,https://github.com/a-niane/Pipeline-Processor.git,2021-07-30 21:00:00+00:00,Implemented Verilog on Vivado 2019 (Create Winter 2019),0,a-niane/Pipeline-Processor,391186726,Verilog,Pipeline-Processor,16,0,2023-01-05 01:54:55+00:00,[],None
438,https://github.com/hyunjunyeop/test_seminar.git,2021-07-30 14:35:06+00:00,test git ggg,0,hyunjunyeop/test_seminar,391094714,Verilog,test_seminar,5,0,2021-07-30 15:49:10+00:00,[],https://api.github.com/licenses/mit
439,https://github.com/apurba-pp/AES-Decryption.git,2021-08-04 03:18:21+00:00,Course Project for ECN-104: Digital Logic Design at IIT Roorkee,4,apurba-pp/AES-Decryption,392532611,Verilog,AES-Decryption,30201,0,2022-11-14 14:21:48+00:00,[],None
440,https://github.com/changchun-zhou/TS3D_tapeout.git,2021-07-24 07:22:10+00:00,,0,changchun-zhou/TS3D_tapeout,389029905,Verilog,TS3D_tapeout,6388,0,2022-07-14 11:40:01+00:00,"['hardware', 'own']",None
441,https://github.com/priti07/Cordic-Algorithm.git,2021-07-24 12:45:19+00:00,Implemented and simulated fully pipelined sine and cosine generator based on CORDIC Algorithm using Verilog HDL on Xilinx 14.7 ISE Design Suite,0,priti07/Cordic-Algorithm,389097224,Verilog,Cordic-Algorithm,2,0,2021-07-24 12:47:26+00:00,[],None
442,https://github.com/aishikrana/Project_Triple_DES.git,2021-07-30 17:27:42+00:00,,0,aishikrana/Project_Triple_DES,391144613,Verilog,Project_Triple_DES,45506,0,2021-07-30 17:49:50+00:00,[],None
443,https://github.com/saiganesh1228/saiganesh1228.git,2021-07-31 05:12:15+00:00,Config files for my GitHub profile.,0,saiganesh1228/saiganesh1228,391261369,Verilog,saiganesh1228,5,0,2021-08-05 12:38:26+00:00,"['config', 'github-config']",None
444,https://github.com/ChaminieDesilva/Building-a-Simple-Processor.git,2021-08-03 13:55:57+00:00,"A simple 8-bit single-cycle processor which includes an  ALU, a register file and control logic, using Verilog HDL.",0,ChaminieDesilva/Building-a-Simple-Processor,392335460,Verilog,Building-a-Simple-Processor,1218,0,2021-08-03 14:04:11+00:00,[],None
445,https://github.com/snyder-verilog/binary-to-bcd.git,2021-08-04 23:48:01+00:00,,0,snyder-verilog/binary-to-bcd,392851720,Verilog,binary-to-bcd,92,0,2021-08-04 23:48:20+00:00,[],None
446,https://github.com/snyder-verilog/combination-circuits-building-blocks.git,2021-08-04 23:48:40+00:00,,0,snyder-verilog/combination-circuits-building-blocks,392851812,Verilog,combination-circuits-building-blocks,92,0,2021-08-04 23:48:58+00:00,[],None
447,https://github.com/flockeyrocks/registers.git,2021-08-04 22:58:47+00:00,,0,flockeyrocks/registers,392844222,Verilog,registers,816,0,2021-08-04 22:59:28+00:00,[],None
448,https://github.com/NYU-Hardware-Security/FPGA-Fabrics-for-Redaction-ICCAD.git,2021-08-05 20:03:39+00:00,,4,NYU-Hardware-Security/FPGA-Fabrics-for-Redaction-ICCAD,393158384,Verilog,FPGA-Fabrics-for-Redaction-ICCAD,14641,0,2021-08-06 17:51:18+00:00,[],None
449,https://github.com/Virajanidh/CPU-implementation.git,2021-07-14 12:34:02+00:00,"Design of 32 bit verilog based CPU with ALU, CU, Register files and caching which supports simple instructions.",0,Virajanidh/CPU-implementation,385933959,Verilog,CPU-implementation,184,0,2021-07-14 12:47:24+00:00,[],None
450,https://github.com/braeden-muller/HPLP-UHF-RFID-SKY130.git,2021-07-15 18:20:21+00:00,,0,braeden-muller/HPLP-UHF-RFID-SKY130,386386435,Verilog,HPLP-UHF-RFID-SKY130,1809,0,2021-08-13 19:24:00+00:00,[],None
451,https://github.com/SanjeevaKola/BrentKung16bit-Adder.git,2021-08-13 06:56:42+00:00,,0,SanjeevaKola/BrentKung16bit-Adder,395549749,Verilog,BrentKung16bit-Adder,475,0,2021-08-20 11:13:57+00:00,[],None
452,https://github.com/pin-chen/Pipeline-CPU.git,2021-08-13 07:12:34+00:00,,0,pin-chen/Pipeline-CPU,395553729,Verilog,Pipeline-CPU,355,0,2022-01-18 00:04:41+00:00,[],None
453,https://github.com/dismastoo/4BITCOUNTER_VERILOG.git,2021-08-14 06:08:19+00:00,,0,dismastoo/4BITCOUNTER_VERILOG,395909932,Verilog,4BITCOUNTER_VERILOG,26,0,2021-08-14 06:12:06+00:00,[],None
454,https://github.com/BALAKRISHNA-EPPILI/4bit_binary_counter.git,2021-08-13 16:16:00+00:00,,1,BALAKRISHNA-EPPILI/4bit_binary_counter,395717396,Verilog,4bit_binary_counter,11733,0,2021-08-28 14:24:18+00:00,[],None
455,https://github.com/NeelTa1lor/Digital_communication_system.git,2021-07-29 10:52:28+00:00,,0,NeelTa1lor/Digital_communication_system,390692486,Verilog,Digital_communication_system,414,0,2021-07-29 11:00:48+00:00,[],None
456,https://github.com/Errno1024/MIPS-CPU.git,2021-07-28 05:29:58+00:00,BUAA 2019 Computer Composition course,0,Errno1024/MIPS-CPU,390225579,Verilog,MIPS-CPU,21,0,2021-07-28 05:30:11+00:00,[],https://api.github.com/licenses/mit
457,https://github.com/emailbsuv/led_EPM240T100C5N.git,2021-08-11 19:36:48+00:00,,0,emailbsuv/led_EPM240T100C5N,395098160,Verilog,led_EPM240T100C5N,11,0,2021-08-11 19:39:31+00:00,[],None
458,https://github.com/Leo-i/test_task.git,2021-08-09 07:05:42+00:00,,0,Leo-i/test_task,394186651,Verilog,test_task,8,0,2021-08-09 07:09:36+00:00,[],None
459,https://github.com/harris-chris/xilinx.git,2021-08-15 01:34:29+00:00,Xilinx configuration,0,harris-chris/xilinx,396181591,Verilog,xilinx,6232,0,2021-10-09 03:20:25+00:00,[],None
460,https://github.com/Sapffire/sankat_mochan.git,2021-08-15 09:29:47+00:00,,1,Sapffire/sankat_mochan,396295788,Verilog,sankat_mochan,8,0,2021-08-15 10:08:37+00:00,[],None
461,https://github.com/Rad6/Computer-Architecture-Course-Projects.git,2021-07-16 13:44:55+00:00,A series of 5 assignments for Computer Architecture Course,0,Rad6/Computer-Architecture-Course-Projects,386651567,Verilog,Computer-Architecture-Course-Projects,1074,0,2021-07-16 14:00:46+00:00,[],None
462,https://github.com/vaibhav132/Implementation-of-128-bit-AES-algorithm.git,2021-07-16 04:34:25+00:00,Project for the implementation of Advanced Encryption Standard algorithm,0,vaibhav132/Implementation-of-128-bit-AES-algorithm,386509685,Verilog,Implementation-of-128-bit-AES-algorithm,1575,0,2021-07-16 06:18:46+00:00,[],None
463,https://github.com/MasoudHeidary/FPGA-Verilog-PDLZW-mini.git,2021-07-15 08:19:58+00:00,super simple PDLZW algorithm with just 1layer compresion,0,MasoudHeidary/FPGA-Verilog-PDLZW-mini,386216623,Verilog,FPGA-Verilog-PDLZW-mini,4,0,2021-07-15 08:31:35+00:00,[],https://api.github.com/licenses/mit
464,https://github.com/erfanshayegani/wlan802.11a_interleaver_deinterleaver_V.git,2021-07-15 12:22:03+00:00,serial input/output interleaver and deinterleaver wifi wlan802.11a,1,erfanshayegani/wlan802.11a_interleaver_deinterleaver_V,386279950,Verilog,wlan802.11a_interleaver_deinterleaver_V,291,0,2023-04-22 00:03:17+00:00,[],None
465,https://github.com/olesbober/mips-superscalar-processor.git,2021-08-03 21:04:53+00:00,A dual-issue superscalar MIPS processor that can handle two instructions at once. Written in Verilog for ECE 154B at UCSB.,0,olesbober/mips-superscalar-processor,392455648,Verilog,mips-superscalar-processor,3718,0,2023-03-27 03:18:57+00:00,[],None
466,https://github.com/SR3u/pong.git,2021-08-03 17:19:01+00:00,My clone of a classig PONG game on Terasic DE0 board (Altera Cyclone III),0,SR3u/pong,392396884,Verilog,pong,19506,0,2021-08-03 17:29:50+00:00,[],None
467,https://github.com/asmaasameh99/Digital_Alarm_Clock.git,2021-08-03 17:53:54+00:00,An alarm clock has a real time output with 24-hours format and also have an alarm feature using verilog and Xilinx ISE tool to test outputs,0,asmaasameh99/Digital_Alarm_Clock,392406865,Verilog,Digital_Alarm_Clock,2,0,2021-08-03 17:55:34+00:00,[],None
468,https://github.com/xwang8998/025.git,2021-08-04 03:46:52+00:00,,0,xwang8998/025,392539009,Verilog,025,276482,0,2021-08-05 05:15:10+00:00,[],None
469,https://github.com/jcarrerog/ProyectoDigital_II.git,2021-08-02 23:30:33+00:00,,0,jcarrerog/ProyectoDigital_II,392124035,Verilog,ProyectoDigital_II,37,0,2021-08-04 05:17:53+00:00,[],None
470,https://github.com/snyder-verilog/morse-code-to-ascii.git,2021-08-04 23:38:27+00:00,,0,snyder-verilog/morse-code-to-ascii,392850314,Verilog,morse-code-to-ascii,12,0,2021-08-04 23:43:17+00:00,[],None
471,https://github.com/snyder-verilog/vending-machine.git,2021-08-04 23:39:25+00:00,,0,snyder-verilog/vending-machine,392850467,Verilog,vending-machine,704,0,2021-08-04 23:40:59+00:00,[],None
472,https://github.com/pixel-debug/Tomasulo.git,2021-08-10 20:47:42+00:00,Pratica III da disciplina prática de Arquitetura e Organização de Computadores II,0,pixel-debug/Tomasulo,394777593,Verilog,Tomasulo,13784,0,2023-04-09 21:28:35+00:00,[],None
473,https://github.com/hjkoskel/fatpuppyverilog.git,2021-08-09 22:24:28+00:00,Verilog code for fatpuppy project release,0,hjkoskel/fatpuppyverilog,394455430,Verilog,fatpuppyverilog,14,0,2021-08-09 22:41:58+00:00,[],https://api.github.com/licenses/mit
474,https://github.com/ryan10day/FPGA_SuperMarioBros.git,2021-08-09 16:21:50+00:00,,0,ryan10day/FPGA_SuperMarioBros,394362128,Verilog,FPGA_SuperMarioBros,516,0,2021-08-09 16:31:38+00:00,[],None
475,https://github.com/DECAfpga/ZX48.git,2021-08-09 15:51:26+00:00,ZX48 Spectrum core - DECA port,1,DECAfpga/ZX48,394352090,Verilog,ZX48,2849,0,2022-07-14 17:04:07+00:00,"['fpga', 'computers', 'cape']",None
476,https://github.com/ExcitingYi/FPGA_Calendar.git,2021-08-06 23:04:49+00:00,,0,ExcitingYi/FPGA_Calendar,393524511,Verilog,FPGA_Calendar,5423,0,2021-08-06 23:20:47+00:00,[],None
477,https://github.com/Heyan-Lanan/COD.git,2021-08-09 03:12:59+00:00,,0,Heyan-Lanan/COD,394132065,Verilog,COD,11569,0,2022-04-17 15:32:57+00:00,[],None
478,https://github.com/jirayupeetakul-jay/fpgaIntraPrediction_forCVS.git,2021-07-11 01:11:16+00:00,,0,jirayupeetakul-jay/fpgaIntraPrediction_forCVS,384835402,Verilog,fpgaIntraPrediction_forCVS,1223,0,2021-07-11 01:14:25+00:00,[],None
479,https://github.com/ahmadSultan-12/Computer-Architecture.git,2021-07-23 16:02:16+00:00,RISC-V Processor Implementation ,0,ahmadSultan-12/Computer-Architecture,388854892,Verilog,Computer-Architecture,15,0,2021-07-23 16:40:48+00:00,[],None
480,https://github.com/JohnsonYuanTW/CO_Lab2.git,2021-07-25 06:59:23+00:00,,0,JohnsonYuanTW/CO_Lab2,389283128,Verilog,CO_Lab2,922,0,2021-08-25 06:29:52+00:00,[],None
481,https://github.com/CODERGU7/Traffic_Controller.git,2021-07-26 14:37:35+00:00,,0,CODERGU7/Traffic_Controller,389664584,Verilog,Traffic_Controller,439,0,2021-07-26 15:30:50+00:00,[],None
482,https://github.com/DeilerSIlva/Proyecto_Verilog_Tamers.git,2021-07-27 04:49:23+00:00,,0,DeilerSIlva/Proyecto_Verilog_Tamers,389851902,Verilog,Proyecto_Verilog_Tamers,4,0,2021-07-27 04:51:57+00:00,[],None
483,https://github.com/BhargavDodla/EE2003-Computer-organization.git,2021-07-19 05:36:40+00:00,,0,BhargavDodla/EE2003-Computer-organization,387350900,Verilog,EE2003-Computer-organization,3274,0,2021-07-19 06:03:52+00:00,[],None
484,https://github.com/apetridis/Hardware2.git,2021-07-22 15:19:16+00:00,Projects for ECE cource Digital Hardware systems at low levels of logic,0,apetridis/Hardware2,388507727,Verilog,Hardware2,1464,0,2023-03-31 15:24:04+00:00,[],None
485,https://github.com/adarmaori/SUP-1-computer.git,2021-07-22 07:50:53+00:00,this is a Verilog replica of Ben Eater's 8 bit computer,0,adarmaori/SUP-1-computer,388374807,Verilog,SUP-1-computer,5,0,2021-07-22 07:58:44+00:00,[],None
486,https://github.com/bhaskarsinha30/CRC.git,2021-07-21 19:09:04+00:00,UFTF4ED,0,bhaskarsinha30/CRC,388220189,Verilog,CRC,3,0,2021-07-21 19:23:50+00:00,[],None
487,https://github.com/MidlaneBro/2019Fall_NTUEE_DCLab.git,2021-07-19 13:31:37+00:00,,0,MidlaneBro/2019Fall_NTUEE_DCLab,387474929,Verilog,2019Fall_NTUEE_DCLab,116956,0,2021-07-19 13:48:30+00:00,[],None
488,https://github.com/MidlaneBro/2019Fall_NTUEE_Integrated_Circuit_Design.git,2021-07-19 14:16:43+00:00,,0,MidlaneBro/2019Fall_NTUEE_Integrated_Circuit_Design,387488911,Verilog,2019Fall_NTUEE_Integrated_Circuit_Design,40736,0,2023-11-10 07:29:16+00:00,[],None
489,https://github.com/icb-platform/apb_uart_v.git,2021-07-22 06:13:41+00:00,,1,icb-platform/apb_uart_v,388348927,Verilog,apb_uart_v,20,0,2021-07-22 06:17:49+00:00,[],None
490,https://github.com/tanweili/FPGA-Dungeon-Game.git,2021-07-22 07:07:30+00:00,This repository archives the project jointly done by Tze Yeong (github.com/tantzeyeong) and me. ,1,tanweili/FPGA-Dungeon-Game,388363001,Verilog,FPGA-Dungeon-Game,2811,0,2021-09-25 02:16:43+00:00,[],None
491,https://github.com/jayshah8100/EE2003-Computer-Organization-Architecture.git,2021-07-13 05:35:59+00:00,,0,jayshah8100/EE2003-Computer-Organization-Architecture,385488237,Verilog,EE2003-Computer-Organization-Architecture,729,0,2021-07-13 05:59:40+00:00,[],None
492,https://github.com/jkaszowski/BASYS3_VGA_DEMO.git,2021-07-12 11:34:01+00:00,,0,jkaszowski/BASYS3_VGA_DEMO,385225394,Verilog,BASYS3_VGA_DEMO,3,0,2022-02-21 11:30:42+00:00,[],None
493,https://github.com/pthanhtung98ag/RISC-V.git,2021-07-13 08:08:55+00:00,,0,pthanhtung98ag/RISC-V,385527057,Verilog,RISC-V,55,0,2021-07-13 08:20:19+00:00,[],None
494,https://github.com/junneng-my/24points-game.git,2021-07-21 08:52:11+00:00,"Implemented a classic number game in verilog, 24 points. Given 4 numbers from 0 to 9, by adding, subtracting, multiplying and dividing to get 24, there are 10 questions.",0,junneng-my/24points-game,388054786,Verilog,24points-game,8,0,2021-07-21 10:00:47+00:00,[],None
495,https://github.com/praneeth-github/RISC-V---IF.git,2021-07-29 06:21:07+00:00,,0,praneeth-github/RISC-V---IF,390622371,Verilog,RISC-V---IF,97,0,2021-07-29 06:22:17+00:00,[],None
496,https://github.com/DenizRumet/FunctionSelect_And_Xor.git,2021-07-28 06:55:37+00:00,"Function Select between and&xor, 3bit counter modules",0,DenizRumet/FunctionSelect_And_Xor,390246784,Verilog,FunctionSelect_And_Xor,2,0,2021-07-28 06:56:59+00:00,[],None
497,https://github.com/sidhantp1906/RV32I.git,2021-07-11 09:49:01+00:00,"I  worked personally on designing rv32i processor for some of the instructions like add,addi,sub,etc..",0,sidhantp1906/RV32I,384911296,Verilog,RV32I,2291,0,2022-09-15 09:43:47+00:00,"['verilog', 'riscv32', 'rv32i', 'core', 'cocotb', 'python3', 'systemverilog']",https://api.github.com/licenses/mit
498,https://github.com/Artsadthavud/Code.git,2021-07-11 16:31:02+00:00,,0,Artsadthavud/Code,384999096,Verilog,Code,1,0,2021-07-11 16:31:10+00:00,[],None
499,https://github.com/TheSonders/Tests.git,2021-07-13 17:35:54+00:00,,0,TheSonders/Tests,385686360,Verilog,Tests,1,0,2021-07-13 17:37:09+00:00,[],None
500,https://github.com/jneirar/ArchLab06.git,2021-07-17 12:29:16+00:00,,0,jneirar/ArchLab06,386932052,Verilog,ArchLab06,79,0,2021-07-18 20:34:43+00:00,[],None
501,https://github.com/Prashant43226/MIPS-Processor.git,2021-07-17 17:16:01+00:00,,0,Prashant43226/MIPS-Processor,386997518,Verilog,MIPS-Processor,127,0,2021-07-22 18:41:54+00:00,[],https://api.github.com/licenses/gpl-3.0
502,https://github.com/hjung35/CompE.git,2021-07-12 09:15:39+00:00,,0,hjung35/CompE,385190227,Verilog,CompE,14453,0,2021-07-12 14:43:16+00:00,[],None
503,https://github.com/aurthurtang/verilog_pattern_match.git,2021-07-11 05:40:18+00:00,,0,aurthurtang/verilog_pattern_match,384869015,Verilog,verilog_pattern_match,1,0,2021-07-11 05:44:59+00:00,[],None
504,https://github.com/baremetal-systems/spi-core.git,2021-07-16 08:15:34+00:00,,0,baremetal-systems/spi-core,386562257,Verilog,spi-core,34,0,2021-11-22 21:42:13+00:00,[],https://api.github.com/licenses/mpl-2.0
505,https://github.com/thebestexotic98/dht11.git,2021-07-20 15:11:17+00:00,,0,thebestexotic98/dht11,387830786,Verilog,dht11,38,0,2021-07-20 16:41:00+00:00,[],None
506,https://github.com/Mayb11/Pick-apple.git,2021-07-29 10:32:56+00:00,,0,Mayb11/Pick-apple,390687757,Verilog,Pick-apple,5511,0,2021-07-29 10:41:38+00:00,[],None
507,https://github.com/andy1309mhp/IC-contest-2014.git,2021-07-30 13:29:01+00:00,,0,andy1309mhp/IC-contest-2014,391074541,Verilog,IC-contest-2014,55,0,2021-07-30 13:31:42+00:00,[],None
508,https://github.com/MalizzyVL/MD5-Algorithm-.git,2021-07-21 07:27:18+00:00,,0,MalizzyVL/MD5-Algorithm-,388031883,Verilog,MD5-Algorithm-,7,0,2021-07-21 07:29:36+00:00,[],None
509,https://github.com/gh-BumsooKim/Increasing-Computational-efficiency-using-FPGA.git,2021-07-27 11:11:32+00:00,Solve Bottlenecks through Parallelism with FPGA using Verilog,0,gh-BumsooKim/Increasing-Computational-efficiency-using-FPGA,389951993,Verilog,Increasing-Computational-efficiency-using-FPGA,202,0,2021-08-08 12:20:38+00:00,"['fpga', 'verilog', 'modelsim']",None
510,https://github.com/CompuSAR/EEPROM_programmer_FPGA.git,2021-07-31 11:45:46+00:00,Turning a Spartan-7 FPGA into a programmer for the AT28C256 EEPROM,0,CompuSAR/EEPROM_programmer_FPGA,391340689,Verilog,EEPROM_programmer_FPGA,16,0,2021-07-31 17:38:42+00:00,[],None
511,https://github.com/emrii/FIFO-Asynchronous.git,2021-08-02 17:45:59+00:00,,0,emrii/FIFO-Asynchronous,392042429,Verilog,FIFO-Asynchronous,1,0,2021-08-02 17:47:00+00:00,[],None
512,https://github.com/e2iteja/testing.git,2021-08-10 10:37:23+00:00,,0,e2iteja/testing,394614148,Verilog,testing,0,0,2021-08-10 11:41:02+00:00,[],None
513,https://github.com/PatelVatsalB21/Transmission_Gate_130nm.git,2021-08-03 15:59:26+00:00,"Transmission Gate designed with Skywater 130nm, Ngspice and Esim",0,PatelVatsalB21/Transmission_Gate_130nm,392372276,Verilog,Transmission_Gate_130nm,885,0,2021-08-03 16:50:19+00:00,[],None
514,https://github.com/Marlon-Lazo-Coronado/Microeletr-nica.git,2021-08-04 00:05:41+00:00,,0,Marlon-Lazo-Coronado/Microeletr-nica,392491266,Verilog,Microeletr-nica,2496,0,2021-08-04 00:17:43+00:00,[],None
515,https://github.com/samt12589/Verilog-CPU.git,2021-08-06 23:00:38+00:00,,0,samt12589/Verilog-CPU,393523708,Verilog,Verilog-CPU,3,0,2021-08-06 23:06:18+00:00,[],None
516,https://github.com/RuntimeErrorGr/Assembly-Pipeline.git,2021-08-07 10:29:46+00:00,,0,RuntimeErrorGr/Assembly-Pipeline,393652079,Verilog,Assembly-Pipeline,2,0,2022-02-27 19:30:18+00:00,[],None
517,https://github.com/sidhantp1906/PulseWidthModulation.git,2021-07-26 07:26:03+00:00,PWM module using verilig HDL in XILINX ISE,0,sidhantp1906/PulseWidthModulation,389545818,Verilog,PulseWidthModulation,720,0,2021-07-27 10:21:50+00:00,"['pwm', 'pulsewidthmodulation', 'verilog', 'digitaldesign', 'timer', 'counter']",https://api.github.com/licenses/apache-2.0
518,https://github.com/Vibhav-RVasist/ALU.git,2021-08-06 02:56:38+00:00,"8 bit ALU with operations including Add, subtract etc...",0,Vibhav-RVasist/ALU,393230073,Verilog,ALU,389,0,2021-08-06 03:06:05+00:00,[],None
519,https://github.com/Italo-Donato/nRisk-8bits.git,2021-08-12 21:15:41+00:00,,0,Italo-Donato/nRisk-8bits,395445662,Verilog,nRisk-8bits,79,0,2023-09-12 08:38:18+00:00,[],None
520,https://github.com/godkero/lenet5.git,2021-08-13 15:26:18+00:00,,0,godkero/lenet5,395702712,Verilog,lenet5,225,0,2022-01-19 15:15:30+00:00,[],None
521,https://github.com/franGuindon/taller_digital.git,2021-08-09 23:06:22+00:00,,0,franGuindon/taller_digital,394463487,Verilog,taller_digital,94,0,2021-08-24 05:41:45+00:00,[],None
522,https://github.com/EternalEdward/for_contest.git,2021-08-13 03:57:56+00:00,打龙芯比赛的半成品,0,EternalEdward/for_contest,395515161,Verilog,for_contest,119,0,2021-08-20 05:20:01+00:00,[],None
523,https://github.com/RapidSilicon/FPGA_Perf_Check.git,2021-07-12 04:28:26+00:00,,0,RapidSilicon/FPGA_Perf_Check,385124352,Verilog,FPGA_Perf_Check,6357,0,2024-01-15 11:28:02+00:00,[],None
524,https://github.com/Sheelu-98/RISC-Processor.git,2021-07-11 10:54:07+00:00,,0,Sheelu-98/RISC-Processor,384924657,Verilog,RISC-Processor,13,0,2021-07-11 10:57:04+00:00,[],None
525,https://github.com/WeLoveCAD/Tic-Tac-Toe.git,2021-07-11 12:32:52+00:00,Design of Tic Tac Toe game implemented on CPLD,0,WeLoveCAD/Tic-Tac-Toe,384943333,Verilog,Tic-Tac-Toe,1073,0,2021-07-22 15:11:26+00:00,[],None
526,https://github.com/raviverma2/-FIFO.git,2021-08-13 13:50:40+00:00,DIGITAL ELECTRONICS PROJECT,0,raviverma2/-FIFO,395671992,Verilog,-FIFO,1,0,2021-08-13 13:51:21+00:00,[],None
527,https://github.com/yash1112/Pipelined_Processor.git,2021-08-14 09:13:40+00:00,,0,yash1112/Pipelined_Processor,395954470,Verilog,Pipelined_Processor,8,0,2021-08-14 09:23:21+00:00,[],None
528,https://github.com/aliassar/pipeline-design.git,2021-08-13 16:06:15+00:00,,0,aliassar/pipeline-design,395714541,Verilog,pipeline-design,57,0,2021-08-13 17:01:02+00:00,[],None
529,https://github.com/emailbsuv/blinker.git,2021-08-11 19:17:23+00:00,,0,emailbsuv/blinker,395093930,Verilog,blinker,9136,0,2021-08-11 19:48:14+00:00,[],None
530,https://github.com/mehul-k5/RISC_16bit_verilog.git,2021-07-14 14:29:42+00:00,,0,mehul-k5/RISC_16bit_verilog,385969699,Verilog,RISC_16bit_verilog,554,0,2021-07-14 14:53:47+00:00,[],None
531,https://github.com/harikrishna-goli/verilog.git,2021-07-15 04:09:38+00:00,,0,harikrishna-goli/verilog,386158754,Verilog,verilog,17,0,2021-07-18 08:47:16+00:00,[],None
532,https://github.com/AndyChan366/Computer-Organization.git,2021-07-15 10:58:24+00:00,This is the homework of Computer Organization in SYSU,0,AndyChan366/Computer-Organization,386257175,Verilog,Computer-Organization,15721,0,2022-04-25 09:23:57+00:00,[],None
533,https://github.com/mustafa-khairallah/skinny_128_384_plus_sca.git,2021-07-23 09:04:33+00:00,"A collection of my implementations of different countermeasures against the SKINNY-128-384+ tweakable block cipher, part of the the NIST lightweight cryptography standardazation finalist: Romulus.",0,mustafa-khairallah/skinny_128_384_plus_sca,388741428,Verilog,skinny_128_384_plus_sca,116,0,2021-11-11 04:52:57+00:00,[],https://api.github.com/licenses/mit
534,https://github.com/mavdranathunga/Lab01.git,2021-07-30 11:50:01+00:00,,0,mavdranathunga/Lab01,391045870,Verilog,Lab01,6,0,2021-07-31 15:11:34+00:00,[],None
535,https://github.com/Hola39e/HDLBits.git,2021-07-30 08:53:54+00:00,,0,Hola39e/HDLBits,390997063,Verilog,HDLBits,715,0,2021-11-25 14:15:16+00:00,[],None
536,https://github.com/tarun744/Stepper-motor-controll.git,2021-07-31 03:29:38+00:00,,0,tarun744/Stepper-motor-controll,391245521,Verilog,Stepper-motor-controll,1,0,2021-07-31 03:30:07+00:00,[],None
537,https://github.com/Banben07/pong_game.git,2021-07-15 14:37:43+00:00,基于DE2-115用Verilog实现PONG_GAME,0,Banben07/pong_game,386322163,Verilog,pong_game,15899,0,2021-07-17 08:50:11+00:00,[],None
538,https://github.com/MinjaeLee94/nvdla.git,2021-07-21 13:03:41+00:00,,0,MinjaeLee94/nvdla,388118863,Verilog,nvdla,19047,0,2021-07-21 13:08:39+00:00,[],
539,https://github.com/KyleeeChiu/Finite_State_Machine.git,2021-07-21 14:08:02+00:00,,0,KyleeeChiu/Finite_State_Machine,388137350,Verilog,Finite_State_Machine,1,0,2021-07-21 14:09:54+00:00,[],None
540,https://github.com/Franscous/VE270.git,2021-07-13 01:52:19+00:00,,0,Franscous/VE270,385440019,Verilog,VE270,6145,0,2021-10-13 05:41:53+00:00,[],None
541,https://github.com/lucascdornelas/LAOC2.git,2021-07-22 01:16:23+00:00,,0,lucascdornelas/LAOC2,388290186,Verilog,LAOC2,10739,0,2021-10-13 12:03:27+00:00,[],None
542,https://github.com/JSaillok/CAD.git,2021-07-20 11:24:05+00:00,,0,JSaillok/CAD,387768376,Verilog,CAD,3,0,2023-08-06 09:48:11+00:00,[],None
543,https://github.com/mohamedwael131/MIPS-Processor.git,2021-07-13 15:39:55+00:00,Implementation of the MIPS processor in verilog,0,mohamedwael131/MIPS-Processor,385654873,Verilog,MIPS-Processor,6,0,2021-07-13 15:45:08+00:00,[],None
544,https://github.com/Rony0508/Verilog.git,2021-07-14 08:52:28+00:00,,0,Rony0508/Verilog,385874556,Verilog,Verilog,26192,0,2021-09-10 08:23:09+00:00,[],None
545,https://github.com/tomeh2/RISC-V-Processor-2.git,2021-07-19 10:56:38+00:00,,0,tomeh2/RISC-V-Processor-2,387432388,Verilog,RISC-V-Processor-2,38565,0,2023-02-24 11:28:56+00:00,[],https://api.github.com/licenses/mit
546,https://github.com/tmontanaUNAL/Proyecto-Digital-I.git,2021-07-18 14:08:04+00:00,"Proyecto curso Digital I, camara VGA",0,tmontanaUNAL/Proyecto-Digital-I,387190967,Verilog,Proyecto-Digital-I,39177,0,2021-08-25 14:31:26+00:00,[],None
547,https://github.com/MuthuSubramanian00/16-Bit-Processor.git,2021-07-23 13:36:59+00:00,16 Bit RISC Based Processor,0,MuthuSubramanian00/16-Bit-Processor,388813265,Verilog,16-Bit-Processor,370,0,2023-02-18 12:18:24+00:00,[],None
548,https://github.com/zenith-1st/gate.git,2021-07-28 08:09:43+00:00,,0,zenith-1st/gate,390268218,Verilog,gate,2,0,2021-07-28 19:54:23+00:00,[],None
549,https://github.com/Bun-chan/qsys_control.git,2021-07-12 20:39:20+00:00,,0,Bun-chan/qsys_control,385377395,Verilog,qsys_control,23225,0,2021-07-13 23:05:16+00:00,[],None
550,https://github.com/ERENEJ/AES_128_encryption_VerilogProject.git,2021-07-17 22:54:58+00:00,ERENEJ/AES_128_encryption_VerilogProject,0,ERENEJ/AES_128_encryption_VerilogProject,387050405,Verilog,AES_128_encryption_VerilogProject,565,0,2021-10-14 07:35:11+00:00,[],None
551,https://github.com/hyj542682306/VerilogPractice.git,2021-07-20 15:30:36+00:00,SJTU ACM2020 编程综合实践 小作业 Verilog,0,hyj542682306/VerilogPractice,387836193,Verilog,VerilogPractice,1,0,2021-07-21 03:50:32+00:00,[],None
552,https://github.com/GustavoGarciaDeAlba/P02-MachineCode.git,2021-07-25 02:39:05+00:00,ALU and Control Unit implementation in Verilog,0,GustavoGarciaDeAlba/P02-MachineCode,389243573,Verilog,P02-MachineCode,5709,0,2021-07-25 02:45:15+00:00,[],None
553,https://github.com/hacksparr0w/hack.v.git,2021-07-23 08:33:38+00:00,A reference implementation of Hack — the 16-bit von Neumann computing system that is described in the excellent From Nand to Tetris course — built from scratch in Verilog.,0,hacksparr0w/hack.v,388733084,Verilog,hack.v,31,0,2023-06-01 17:11:35+00:00,[],https://api.github.com/licenses/mit
554,https://github.com/DenizRumet/Debouncer.git,2021-07-31 14:52:11+00:00,For mechanical switches,0,DenizRumet/Debouncer,391384689,Verilog,Debouncer,1,0,2021-07-31 14:52:32+00:00,[],None
555,https://github.com/bienkuba/uec2_projekt.git,2021-08-02 18:50:22+00:00,,0,bienkuba/uec2_projekt,392060177,Verilog,uec2_projekt,21701,0,2021-09-10 17:00:40+00:00,[],None
556,https://github.com/DenizRumet/UART_Rx_Tx_2.git,2021-08-03 11:08:24+00:00,,0,DenizRumet/UART_Rx_Tx_2,392288086,Verilog,UART_Rx_Tx_2,3,0,2021-08-03 11:10:44+00:00,[],None
557,https://github.com/tiacsys/ghrd-socfpga.git,2021-08-01 09:46:02+00:00,Golden Hardware Reference Designs (GHRD) for System On Chips in FPGA (SOCFPGA) ,0,tiacsys/ghrd-socfpga,391587030,Verilog,ghrd-socfpga,1630,0,2021-11-07 17:33:48+00:00,"['altera', 'intel', 'ghrd', 'socfpga', 'max10', 'quartus-prime']",
558,https://github.com/Xiaoyaozh/rvcpu.git,2021-08-02 02:41:29+00:00,single cycle riscv64 cpu,0,Xiaoyaozh/rvcpu,391796154,Verilog,rvcpu,7,0,2022-02-22 09:38:37+00:00,[],None
559,https://github.com/justinabate/edalize_hello_world.git,2021-08-01 18:27:00+00:00,edalize verilog example ,0,justinabate/edalize_hello_world,391706600,Verilog,edalize_hello_world,3,0,2021-08-01 18:32:57+00:00,[],None
560,https://github.com/mohammadmusawer/CPU-Design.git,2021-08-05 19:01:15+00:00,,0,mohammadmusawer/CPU-Design,393145160,Verilog,CPU-Design,2,0,2021-08-05 20:17:50+00:00,[],None
561,https://github.com/Lemorra/Verilog.git,2021-08-06 15:09:09+00:00,This repository contains verilog codes that I wrote to brush up my verilog skill.,0,Lemorra/Verilog,393413586,Verilog,Verilog,13,0,2021-08-08 13:39:21+00:00,[],None
562,https://github.com/badgeteam/mch2021-fpga-lcd-driver-test.git,2021-08-09 23:27:52+00:00,,1,badgeteam/mch2021-fpga-lcd-driver-test,394467562,Verilog,mch2021-fpga-lcd-driver-test,34,0,2022-05-16 23:01:33+00:00,[],https://api.github.com/licenses/mit
563,https://github.com/Nivant11/SingleCycleProcessor.git,2021-08-14 21:44:46+00:00,This is all of the parts of a standard single cycle processor.,0,Nivant11/SingleCycleProcessor,396138445,Verilog,SingleCycleProcessor,27,0,2021-09-16 20:36:14+00:00,[],None
564,https://github.com/RAYogeshwaran/verilog_practice.git,2021-08-06 17:43:48+00:00,This repository is made for the purpose of learning and practising Verilog programming.,0,RAYogeshwaran/verilog_practice,393455768,Verilog,verilog_practice,58,0,2022-10-08 08:19:31+00:00,[],None
565,https://github.com/deepanjali-mishra/HDL-Bits.git,2021-08-12 13:44:17+00:00,,0,deepanjali-mishra/HDL-Bits,395332860,Verilog,HDL-Bits,132,0,2021-10-20 11:56:57+00:00,[],None
566,https://github.com/threefeetdeep/Natalius.git,2021-07-15 08:41:39+00:00,"A fork of the OpenCores  ""Natalius"" 8-bit embedded CPU in Verilog",0,threefeetdeep/Natalius,386222199,Verilog,Natalius,916,0,2021-07-16 18:15:24+00:00,[],None
567,https://github.com/yasitha18243/Verilog-CPU-Implementation.git,2021-07-14 07:33:22+00:00,,0,yasitha18243/Verilog-CPU-Implementation,385853478,Verilog,Verilog-CPU-Implementation,24,0,2021-07-14 16:42:47+00:00,[],None
568,https://github.com/UltraRiscV/RiscV.git,2021-08-01 05:34:11+00:00,,0,UltraRiscV/RiscV,391536327,Verilog,RiscV,3,0,2021-08-01 09:39:48+00:00,[],https://api.github.com/licenses/bsd-2-clause
569,https://github.com/vn218/2d_dwt.git,2021-07-30 19:35:10+00:00,,0,vn218/2d_dwt,391171664,Verilog,2d_dwt,385,0,2021-08-15 17:12:50+00:00,[],None
570,https://github.com/kkqqqqqq/ysyx.git,2021-08-02 11:24:22+00:00,2021 summer ysyx-3rd,0,kkqqqqqq/ysyx,391921819,Verilog,ysyx,10,0,2021-08-02 11:35:33+00:00,[],None
571,https://github.com/chiragchinvar/inmovidu_verilog.git,2021-07-23 17:30:08+00:00,,0,chiragchinvar/inmovidu_verilog,388877871,Verilog,inmovidu_verilog,33,0,2021-08-17 14:51:56+00:00,[],None
572,https://github.com/HarshVardhanSingh261/DCS.git,2021-07-20 09:12:06+00:00,,0,HarshVardhanSingh261/DCS,387736078,Verilog,DCS,418,0,2021-07-20 14:18:04+00:00,[],None
573,https://github.com/saikia-bhargav/DCS.git,2021-07-20 09:09:00+00:00,,0,saikia-bhargav/DCS,387735305,Verilog,DCS,423,0,2021-07-22 13:36:31+00:00,[],None
574,https://github.com/Devilnb/Verilog_clk.git,2021-08-01 03:56:19+00:00,,0,Devilnb/Verilog_clk,391519234,Verilog,Verilog_clk,2476,0,2021-08-01 03:56:33+00:00,[],None
575,https://github.com/kareefardi/spm.git,2021-08-01 23:55:44+00:00,,0,kareefardi/spm,391766949,Verilog,spm,1,0,2021-08-02 00:03:06+00:00,[],None
576,https://github.com/csn3rd/UIUCTFGatekeepingWriteup.git,2021-08-03 23:44:21+00:00,"Writeup for Gatekeeping, a miscellaneous/hardware challenge from UIUCTF. Visualization included!",0,csn3rd/UIUCTFGatekeepingWriteup,392487361,Verilog,UIUCTFGatekeepingWriteup,10939,0,2023-11-08 05:10:48+00:00,[],None
577,https://github.com/flockeyrocks/binary-to-bcd.git,2021-08-04 22:56:21+00:00,,0,flockeyrocks/binary-to-bcd,392843865,Verilog,binary-to-bcd,92,0,2021-08-04 22:57:21+00:00,[],None
578,https://github.com/Varsha3006/EE2026-Project.git,2021-08-06 11:12:44+00:00,,0,Varsha3006/EE2026-Project,393352787,Verilog,EE2026-Project,1995,0,2021-08-06 11:16:00+00:00,[],None
579,https://github.com/anshuman-ritam/CSF342-processor-implementation.git,2021-08-05 13:34:21+00:00,,0,anshuman-ritam/CSF342-processor-implementation,393054445,Verilog,CSF342-processor-implementation,325,0,2021-08-05 13:57:46+00:00,[],None
580,https://github.com/AbrahamAlidadi/Vivado-FPGA-Codes.git,2021-08-09 21:06:19+00:00,A collection of codes I made for coding projects for the Nexys A7 FPGA board,0,AbrahamAlidadi/Vivado-FPGA-Codes,394438754,Verilog,Vivado-FPGA-Codes,81,0,2021-08-14 21:56:46+00:00,[],None
581,https://github.com/AltTether/mips.git,2021-08-11 14:26:39+00:00,,0,AltTether/mips,395016729,Verilog,mips,29291,0,2021-08-23 20:27:41+00:00,[],None
582,https://github.com/MikaVaananen/BinaryCounter.git,2021-08-12 18:04:59+00:00,A simple FPGA binary counter in Verilog. Counts up at a configurable speed and outputs the number in binary to a few LEDs on the evaluation board.,0,MikaVaananen/BinaryCounter,395404913,Verilog,BinaryCounter,10,0,2021-08-12 18:08:12+00:00,[],None
583,https://github.com/NoncreativeUsername/DFR0520_verilog.git,2021-08-12 19:57:28+00:00,module for interfacing with the 0520 duel digital potentiometer with SPI for FPGAs,0,NoncreativeUsername/DFR0520_verilog,395430006,Verilog,DFR0520_verilog,8,0,2021-08-12 21:17:22+00:00,[],None
584,https://github.com/ericwang994/cse141l_lab2.git,2021-07-13 13:28:02+00:00,,0,ericwang994/cse141l_lab2,385613475,Verilog,cse141l_lab2,66,0,2021-08-02 05:46:20+00:00,[],None
585,https://github.com/nightlanding/why_ysyx.git,2021-07-18 12:25:25+00:00,,0,nightlanding/why_ysyx,387169833,Verilog,why_ysyx,11,0,2021-09-14 08:48:10+00:00,[],None
586,https://github.com/bobere/bobere-i2c_verilog.git,2021-07-19 08:10:05+00:00,i2c_verilog,0,bobere/bobere-i2c_verilog,387388389,Verilog,bobere-i2c_verilog,2,0,2021-07-19 08:12:46+00:00,[],None
587,https://github.com/MeysamAmirsardari/Mips_Pipelined.git,2021-07-19 18:35:49+00:00,Pipelined MIPS Processor with full hazard handling + Single-Cycle adjunct,0,MeysamAmirsardari/Mips_Pipelined,387560923,Verilog,Mips_Pipelined,394,0,2021-07-19 18:57:01+00:00,[],https://api.github.com/licenses/mit
588,https://github.com/zenith-1st/IEEE-754-adder.git,2021-07-19 20:19:52+00:00,,0,zenith-1st/IEEE-754-adder,387584435,Verilog,IEEE-754-adder,26,0,2021-07-19 20:25:37+00:00,[],None
589,https://github.com/Niveddita/Carry-Bypass-Adder.git,2021-07-22 10:13:02+00:00,,0,Niveddita/Carry-Bypass-Adder,388417863,Verilog,Carry-Bypass-Adder,3,0,2021-07-22 10:14:51+00:00,[],None
590,https://github.com/rahul130500/Digital-Communication-System.git,2021-07-20 09:54:36+00:00,,0,rahul130500/Digital-Communication-System,387746955,Verilog,Digital-Communication-System,417,0,2021-07-21 14:54:30+00:00,[],None
591,https://github.com/khcsce/Nexys3FPGAProjects.git,2021-07-25 21:29:56+00:00,,0,khcsce/Nexys3FPGAProjects,389444282,Verilog,Nexys3FPGAProjects,1712,0,2021-07-25 21:39:49+00:00,[],None
592,https://github.com/soy567/Verilog_HDL.git,2021-07-23 09:21:50+00:00,"Verilog HDL- A Guide to Digital Design and Synthesis 예제, 문제",0,soy567/Verilog_HDL,388746178,Verilog,Verilog_HDL,4,0,2021-08-17 07:11:14+00:00,[],None
593,https://github.com/abhishekpatil07/Verilog-Programming.git,2021-07-25 05:43:32+00:00,Digital system design using Verilog,0,abhishekpatil07/Verilog-Programming,389271601,Verilog,Verilog-Programming,35,0,2021-07-25 06:10:31+00:00,[],None
594,https://github.com/JesusAlfred/Practice2-MACHINECODE.git,2021-07-29 04:15:58+00:00,,0,JesusAlfred/Practice2-MACHINECODE,390597712,Verilog,Practice2-MACHINECODE,4907,0,2021-07-29 04:20:19+00:00,[],None
595,https://github.com/myeletech/xc7k325t.git,2021-08-07 12:09:49+00:00,,1,myeletech/xc7k325t,393673665,Verilog,xc7k325t,3,0,2021-08-07 12:21:13+00:00,[],None
596,https://github.com/MikeMillard/EEE3096S-Tutorials-Pracs.git,2021-08-15 20:26:38+00:00,This git repository contains the tutorial and practical files of Michael Millard (Std. No. MLLMIC055) and Nicholas Rogers (Std. No. RGRNIC007) for Embedded Systems II (CC: EEE3096S),0,MikeMillard/EEE3096S-Tutorials-Pracs,396484766,Verilog,EEE3096S-Tutorials-Pracs,934,0,2021-11-01 20:24:42+00:00,[],None
597,https://github.com/bharath19-gs/Basys3_FPGA.git,2021-08-15 17:43:20+00:00,"Basys3 is a FPGA development kit, with a Artix - 7 FPGA ",0,bharath19-gs/Basys3_FPGA,396437537,Verilog,Basys3_FPGA,164,0,2021-12-08 02:26:09+00:00,[],https://api.github.com/licenses/gpl-3.0
598,https://github.com/Anvesh98/Brentkung-Adder.git,2021-08-15 12:34:16+00:00,,0,Anvesh98/Brentkung-Adder,396345120,Verilog,Brentkung-Adder,324,0,2021-08-15 13:21:39+00:00,[],None
599,https://github.com/fookseng/verilog.git,2021-07-25 17:21:51+00:00,Verilog code ,0,fookseng/verilog,389402952,Verilog,verilog,15644,0,2022-07-11 08:32:24+00:00,[],None
600,https://github.com/prism-pro/myRV.git,2021-07-21 08:33:32+00:00,,0,prism-pro/myRV,388049552,Verilog,myRV,294,0,2023-07-21 13:14:25+00:00,[],None
601,https://github.com/dgucik/Drag-Racing.git,2021-07-20 21:17:02+00:00,A game implemented on Basys3 board using Verilog HDL.,0,dgucik/Drag-Racing,387916024,Verilog,Drag-Racing,15877,0,2023-07-08 21:25:25+00:00,[],None
602,https://github.com/florinradulescu41/Pipeline.git,2021-07-14 05:00:22+00:00,Simulates a simple RISC cycle,0,florinradulescu41/Pipeline,385818747,Verilog,Pipeline,2215,0,2022-06-19 12:54:47+00:00,"['risc', 'verilog', 'icarus-verilog', 'pipeline']",None
603,https://github.com/kyo24111/Verilog_HDL.git,2021-07-16 15:21:04+00:00,the introduction of verilog HDL via vivado,0,kyo24111/Verilog_HDL,386680937,Verilog,Verilog_HDL,5,0,2021-07-20 04:26:49+00:00,[],None
604,https://github.com/ngllandry/VLSIProj.git,2021-07-16 20:08:35+00:00,semester final for vlsi class,0,ngllandry/VLSIProj,386752375,Verilog,VLSIProj,11,0,2021-07-22 21:16:40+00:00,[],None
605,https://github.com/SakthiExplorer/FSM_010_Verilog.git,2021-07-25 10:57:49+00:00,non-overlapping 010 sequence detector ,0,SakthiExplorer/FSM_010_Verilog,389325480,Verilog,FSM_010_Verilog,2,0,2021-07-25 11:03:42+00:00,[],None
606,https://github.com/mjneri/coe111-dump.git,2021-08-07 14:33:34+00:00,Verilog codes made for CoE 111 (Advanced Digital Design) AY18-19,0,mjneri/coe111-dump,393706936,Verilog,coe111-dump,47,0,2021-08-07 14:43:18+00:00,[],None
607,https://github.com/Tea-intelligent/flashADC_decoder.git,2021-08-06 12:25:07+00:00,,0,Tea-intelligent/flashADC_decoder,393369498,Verilog,flashADC_decoder,1141,0,2021-08-06 12:39:18+00:00,[],None
608,https://github.com/adam-wills/FPRO_implementation.git,2021-08-06 01:41:42+00:00,Implementation of the FPRO bare metal system from Pong P. Chu's 'FPGA Prototyping by SystemVerilog Example',0,adam-wills/FPRO_implementation,393215367,Verilog,FPRO_implementation,18202,0,2021-08-15 01:05:58+00:00,[],None
609,https://github.com/alanswx/Arcade-Subs_MiSTer.git,2021-08-01 21:09:51+00:00,,0,alanswx/Arcade-Subs_MiSTer,391739276,Verilog,Arcade-Subs_MiSTer,617,0,2022-01-05 22:50:10+00:00,[],None
610,https://github.com/Andy-Buka/compare.git,2021-08-02 08:45:17+00:00,,0,Andy-Buka/compare,391874928,Verilog,compare,114,0,2021-08-04 12:02:23+00:00,[],None
611,https://github.com/ayoubouali/AES-based-Video-Encryption.git,2021-08-02 14:39:22+00:00,Our Master's graduation project,0,ayoubouali/AES-based-Video-Encryption,391984241,Verilog,AES-based-Video-Encryption,157005,0,2021-08-07 23:29:14+00:00,[],None
612,https://github.com/snyder-verilog/parking-lot-occupancy-counter.git,2021-08-04 23:44:09+00:00,,0,snyder-verilog/parking-lot-occupancy-counter,392851113,Verilog,parking-lot-occupancy-counter,526,0,2021-08-04 23:45:25+00:00,[],None
613,https://github.com/flockeyrocks/switches-leds.git,2021-08-04 22:52:50+00:00,,0,flockeyrocks/switches-leds,392843317,Verilog,switches-leds,5,0,2021-08-04 22:53:20+00:00,[],None
614,https://github.com/flockeyrocks/stopwatch.git,2021-08-04 23:04:41+00:00,,0,flockeyrocks/stopwatch,392845245,Verilog,stopwatch,10,0,2021-08-04 23:05:03+00:00,[],None
615,https://github.com/flockeyrocks/seven-segment-display-driver.git,2021-08-04 22:59:52+00:00,,0,flockeyrocks/seven-segment-display-driver,392844398,Verilog,seven-segment-display-driver,6,0,2021-08-04 23:00:34+00:00,[],None
616,https://github.com/BenardoTang/EE2026-FPGA-Project.git,2021-08-08 05:42:59+00:00,Sound & Entertainment System built using Verilog,0,BenardoTang/EE2026-FPGA-Project,393869668,Verilog,EE2026-FPGA-Project,233,0,2021-08-08 05:50:21+00:00,[],None
617,https://github.com/leru-sama/mcu.git,2021-08-08 09:46:59+00:00,a micro processor,0,leru-sama/mcu,393920388,Verilog,mcu,99,0,2021-08-08 09:48:49+00:00,[],None
618,https://github.com/singds/riscv-core.git,2021-08-10 20:34:27+00:00,,0,singds/riscv-core,394774975,Verilog,riscv-core,93,0,2021-09-12 10:18:46+00:00,[],https://api.github.com/licenses/mit
619,https://github.com/hunga0922/slm_sim.git,2021-08-10 12:15:07+00:00,Main file for SLM simulation,0,hunga0922/slm_sim,394641459,Verilog,slm_sim,734,0,2021-08-10 12:29:47+00:00,[],None
620,https://github.com/linh97abc/verilog-coverage.git,2021-08-10 11:12:34+00:00,,0,linh97abc/verilog-coverage,394622903,Verilog,verilog-coverage,7,0,2021-08-10 11:27:33+00:00,[],None
621,https://github.com/ZemelZhao/test_verilog.git,2021-08-09 11:18:59+00:00,,0,ZemelZhao/test_verilog,394262056,Verilog,test_verilog,245,0,2021-09-23 12:17:13+00:00,[],None
622,https://github.com/xwang8998/u8sdiodac.git,2021-08-12 08:08:15+00:00,,0,xwang8998/u8sdiodac,395243624,Verilog,u8sdiodac,61835,0,2021-08-12 08:12:48+00:00,[],None
623,https://github.com/gc-na/rtl_stop_watch.git,2021-08-12 06:43:04+00:00,STOP WATCH Verilog HDL RTL Coding,0,gc-na/rtl_stop_watch,395221731,Verilog,rtl_stop_watch,5,0,2021-10-15 11:35:28+00:00,[],None
624,https://github.com/KarimWahid/Verilog-Projects.git,2021-08-12 18:03:27+00:00,Sample Projects for the purpose of self-study and practice. ,0,KarimWahid/Verilog-Projects,395404532,Verilog,Verilog-Projects,21,0,2021-08-12 19:34:35+00:00,[],None
625,https://github.com/bala9501/4bit_binary_counter.git,2021-08-13 15:28:56+00:00,,1,bala9501/4bit_binary_counter,395703513,Verilog,4bit_binary_counter,5,0,2021-08-13 15:47:39+00:00,[],None
626,https://github.com/pradhi331/brent-kung-adder-.git,2021-08-15 10:14:27+00:00,,0,pradhi331/brent-kung-adder-,396308618,Verilog,brent-kung-adder-,88,0,2021-08-19 17:00:41+00:00,[],None
627,https://github.com/jithendra1798/Assignments.git,2021-07-29 04:02:53+00:00,,0,jithendra1798/Assignments,390595357,Verilog,Assignments,4283,0,2021-07-29 05:06:52+00:00,[],None
628,https://github.com/Mayb11/Digital-lock.git,2021-07-29 10:28:11+00:00,,0,Mayb11/Digital-lock,390686498,Verilog,Digital-lock,1243,0,2021-07-29 10:40:01+00:00,[],None
629,https://github.com/primitives-2011/Counter.git,2021-07-30 09:51:10+00:00,,0,primitives-2011/Counter,391014310,Verilog,Counter,37387,0,2021-08-01 17:19:23+00:00,[],None
630,https://github.com/praneeth-github/RISC-V---Datapath-and-Control.git,2021-07-29 06:31:35+00:00,,0,praneeth-github/RISC-V---Datapath-and-Control,390624829,Verilog,RISC-V---Datapath-and-Control,589,0,2021-07-29 06:32:40+00:00,[],None
631,https://github.com/Marlon-Lazo-Coronado/Circuitos_Digitales_2_Verilog.git,2021-08-03 22:12:29+00:00,,0,Marlon-Lazo-Coronado/Circuitos_Digitales_2_Verilog,392470183,Verilog,Circuitos_Digitales_2_Verilog,3006,0,2021-08-03 22:27:29+00:00,[],None
632,https://github.com/tornupnegatives/uart.git,2021-07-12 18:11:11+00:00,Configurable UART module,0,tornupnegatives/uart,385341198,Verilog,uart,23,0,2022-05-25 20:23:40+00:00,[],https://api.github.com/licenses/mit
633,https://github.com/SouravB97/BasicCPU.git,2021-07-17 12:09:07+00:00,Structural Verilog code and testbench for an ongoing project for Basic CPU.,0,SouravB97/BasicCPU,386928018,Verilog,BasicCPU,22,0,2021-09-10 07:20:52+00:00,[],None
634,https://github.com/tim8557/FPGA__ESP8266__Car__Control.git,2021-07-15 12:29:31+00:00,,0,tim8557/FPGA__ESP8266__Car__Control,386282132,Verilog,FPGA__ESP8266__Car__Control,2058,0,2021-07-20 08:04:00+00:00,[],https://api.github.com/licenses/apache-2.0
635,https://github.com/mitulty/NxM_Switch.git,2021-07-15 11:33:42+00:00,A simple NXM Switch which routes the packets of fixed length.,0,mitulty/NxM_Switch,386266315,Verilog,NxM_Switch,1200,0,2021-07-15 12:01:04+00:00,[],None
636,https://github.com/manishburle/DataEncryptionStandard.git,2021-07-16 15:47:12+00:00,This is source code for VLSID Course Project.,0,manishburle/DataEncryptionStandard,386688605,Verilog,DataEncryptionStandard,7,0,2021-07-16 15:49:21+00:00,[],None
637,https://github.com/TanmayD23/Shortest-path-algorithm.git,2021-07-18 05:13:46+00:00,,0,TanmayD23/Shortest-path-algorithm,387095928,Verilog,Shortest-path-algorithm,3,0,2021-07-20 10:39:40+00:00,[],None
638,https://github.com/pravin-sethi/Digital-Communication-System.git,2021-07-18 15:12:31+00:00,,0,pravin-sethi/Digital-Communication-System,387204846,Verilog,Digital-Communication-System,2,0,2021-07-19 13:58:58+00:00,[],None
639,https://github.com/youhurt/test.git,2021-07-19 09:22:49+00:00,,0,youhurt/test,387408046,Verilog,test,3,0,2023-03-19 08:03:43+00:00,[],None
640,https://github.com/paggeo/Learning_Verilog.git,2021-07-19 00:43:56+00:00,Try to do fun stuff inorder to be familiar with verilog,0,paggeo/Learning_Verilog,387298427,Verilog,Learning_Verilog,77,0,2023-08-17 21:37:10+00:00,[],None
641,https://github.com/aTTiny73/LineFollower-PID-DistanceControl.git,2021-07-19 06:51:16+00:00,,1,aTTiny73/LineFollower-PID-DistanceControl,387367072,Verilog,LineFollower-PID-DistanceControl,1730,0,2021-07-19 07:09:20+00:00,[],None
642,https://github.com/daksh08/CompOrg.git,2021-07-19 13:44:13+00:00,,0,daksh08/CompOrg,387478711,Verilog,CompOrg,876,0,2021-07-19 13:46:03+00:00,[],None
643,https://github.com/HarshVardhanSingh261/UART_HDL.git,2021-07-20 15:02:38+00:00,,0,HarshVardhanSingh261/UART_HDL,387828269,Verilog,UART_HDL,6,0,2021-07-21 03:59:32+00:00,[],None
644,https://github.com/trasterlabs/CPLD-EPM240-Learning01.git,2021-07-20 21:53:44+00:00,,0,trasterlabs/CPLD-EPM240-Learning01,387922380,Verilog,CPLD-EPM240-Learning01,0,0,2021-07-20 21:54:34+00:00,[],None
645,https://github.com/junneng-my/stopwatch.git,2021-07-21 06:19:28+00:00,"an one hour stopwatch, count every one second, write in verilog and tested by a testbench in modelsim.",0,junneng-my/stopwatch,388014996,Verilog,stopwatch,154,0,2021-07-22 02:28:35+00:00,[],None
646,https://github.com/naidutangi7/Brentkung-adder.git,2021-08-11 05:01:33+00:00,,0,naidutangi7/Brentkung-adder,394867821,Verilog,Brentkung-adder,2,0,2021-08-11 05:15:51+00:00,[],None
647,https://github.com/paranlee/guarded_unsigned_counter.git,2021-08-13 03:36:57+00:00,Counter with two guardians who count each bit either even or odd.,0,paranlee/guarded_unsigned_counter,395511344,Verilog,guarded_unsigned_counter,20,0,2021-09-17 00:25:47+00:00,"['verilog', 'counter', 'bit', 'iverilog', 'icarus-verilog', 'netlists', 'rtl', 'fpga']",None
648,https://github.com/K-Suneel-kumar/Asynchronous-FIFO.git,2021-08-13 17:12:38+00:00,"An asynchronous FIFO refers to a FIFO design where data values are written to a FIFO buffer from one clock domain and the data values are read from the same FIFO buffer from another clock domain, where the two clock domains are asynchronous to each other.",0,K-Suneel-kumar/Asynchronous-FIFO,395733483,Verilog,Asynchronous-FIFO,450,0,2021-08-15 17:40:30+00:00,[],None
649,https://github.com/nankachiisai/tp_tutorial.git,2021-08-14 09:57:18+00:00,The tutorial code of Tang Primer.,0,nankachiisai/tp_tutorial,395965309,Verilog,tp_tutorial,5,0,2021-11-14 02:14:29+00:00,[],None
650,https://github.com/J-StrawHat/octal-and-decimal-counter.git,2021-07-20 15:15:52+00:00,基于FPGA实现的可控进制的计数器（8进制或15进制）,0,J-StrawHat/octal-and-decimal-counter,387832046,Verilog,octal-and-decimal-counter,8,0,2021-07-20 17:11:13+00:00,"['verilog-hdl', 'nexy4']",https://api.github.com/licenses/mit
651,https://github.com/im-world/FIFO-Shift-Register-parametrised.git,2021-07-28 16:21:02+00:00,,2,im-world/FIFO-Shift-Register-parametrised,390418837,Verilog,FIFO-Shift-Register-parametrised,256,0,2022-01-13 07:30:42+00:00,[],None
652,https://github.com/erdem-simsek/FPGA_Based_Point_of_Sale_Terminal.git,2021-07-14 11:05:51+00:00,The project is given at METU EE314 Digital Electronic Circuitry Lab for Verilog HDL implementations on FPGA Board. Project-based on an online market enables selecting items in different modes and creating a shopping list on the screen. VGA implementations are used for displaying on the screen,0,erdem-simsek/FPGA_Based_Point_of_Sale_Terminal,385910264,Verilog,FPGA_Based_Point_of_Sale_Terminal,46990,0,2021-07-14 19:06:35+00:00,[],None
653,https://github.com/Zylanx/SIT239-Week-3.git,2021-07-29 18:19:48+00:00,,0,Zylanx/SIT239-Week-3,390814643,Verilog,SIT239-Week-3,27474,0,2021-08-19 06:51:08+00:00,[],None
654,https://github.com/lauravmorenoc/ProyectoDigitalII.git,2021-07-29 22:17:23+00:00,"Diseño de un sistema capaz de recorrer un laberinto, enviar información de su trayectoria a un dispositvo en el cual se puede visualizar, y captar información del color de las paredes de su entorno.",0,lauravmorenoc/ProyectoDigitalII,390863355,Verilog,ProyectoDigitalII,9577,0,2021-08-04 05:02:13+00:00,[],None
655,https://github.com/Komalika-minkstas/Verilog.git,2021-07-29 16:30:25+00:00,,0,Komalika-minkstas/Verilog,390786755,Verilog,Verilog,10,0,2021-07-30 05:43:55+00:00,[],None
656,https://github.com/surajs15/MIPS-SINGLE-CYCLE.git,2021-07-29 08:33:29+00:00,,0,surajs15/MIPS-SINGLE-CYCLE,390656144,Verilog,MIPS-SINGLE-CYCLE,2799,0,2021-07-29 08:35:04+00:00,[],None
657,https://github.com/praneeth-github/RISC-V---Datapath.git,2021-07-29 06:22:48+00:00,,0,praneeth-github/RISC-V---Datapath,390622782,Verilog,RISC-V---Datapath,970,0,2021-07-29 06:31:13+00:00,[],None
658,https://github.com/andrewchandlerramirez/Mips-Single-Cycle-in-Verilog.git,2021-08-03 20:45:04+00:00,,0,andrewchandlerramirez/Mips-Single-Cycle-in-Verilog,392450994,Verilog,Mips-Single-Cycle-in-Verilog,28,0,2022-05-12 01:36:47+00:00,[],None
659,https://github.com/apurvaaddula/Traffic-lightcontrol-using-verilog.git,2021-08-04 06:05:23+00:00,,0,apurvaaddula/Traffic-lightcontrol-using-verilog,392569741,Verilog,Traffic-lightcontrol-using-verilog,1534,0,2023-05-23 10:29:12+00:00,[],None
660,https://github.com/Juanpa1312/PRBS.git,2021-08-04 07:28:03+00:00,PRBS with variable seed and feedback,0,Juanpa1312/PRBS,392592359,Verilog,PRBS,39,0,2021-12-07 01:31:57+00:00,[],https://api.github.com/licenses/mit
661,https://github.com/gvillanovanm/msc-sohard-pvs.git,2021-08-06 17:10:57+00:00,,0,gvillanovanm/msc-sohard-pvs,393447262,Verilog,msc-sohard-pvs,858,0,2023-01-20 11:33:47+00:00,[],None
662,https://github.com/DenizRumet/UART_Rx_Tx.git,2021-08-01 12:11:21+00:00,,0,DenizRumet/UART_Rx_Tx,391617391,Verilog,UART_Rx_Tx,2,0,2021-08-01 12:11:50+00:00,[],None
663,https://github.com/IonToncu/Radical-de-ordinul-3.git,2021-08-02 19:50:15+00:00,Radical de ordinul 3 in verilog (floating point (IEEE 754)),0,IonToncu/Radical-de-ordinul-3,392075858,Verilog,Radical-de-ordinul-3,1807,0,2021-08-02 19:53:09+00:00,[],None
664,https://github.com/gugaguga24678/vector.git,2021-07-30 16:11:39+00:00,,0,gugaguga24678/vector,391123737,Verilog,vector,7508,0,2021-08-16 14:42:45+00:00,[],None
665,https://github.com/Mojojojooo/Verilog_Codes.git,2021-08-10 08:13:29+00:00,All the codes for the concepts studied in verilog.,0,Mojojojooo/Verilog_Codes,394575675,Verilog,Verilog_Codes,54,0,2021-09-16 09:20:13+00:00,[],None
666,https://github.com/Niveddita/Carry-Look-Ahead-Adder.git,2021-07-22 10:23:49+00:00,,0,Niveddita/Carry-Look-Ahead-Adder,388420805,Verilog,Carry-Look-Ahead-Adder,2,0,2021-07-22 10:25:13+00:00,[],None
667,https://github.com/Niveddita/8-bit-ALU.git,2021-07-22 10:08:54+00:00,,0,Niveddita/8-bit-ALU,388416694,Verilog,8-bit-ALU,2,0,2021-07-22 10:10:37+00:00,[],None
668,https://github.com/Nagasaigoud/Brent-Kung-16bit-adder.git,2021-07-25 10:40:40+00:00,,0,Nagasaigoud/Brent-Kung-16bit-adder,389322329,Verilog,Brent-Kung-16bit-adder,757,0,2021-08-10 04:51:33+00:00,[],None
669,https://github.com/shezwad/Traffic-light-verilog.git,2021-07-24 18:58:25+00:00,,0,shezwad/Traffic-light-verilog,389178467,Verilog,Traffic-light-verilog,1011,0,2021-07-24 19:06:29+00:00,[],None
670,https://github.com/ae-96/MIPS.git,2021-08-07 22:17:28+00:00, MIPS processor using Verilog with Synthesizable implementation,0,ae-96/MIPS,393804267,Verilog,MIPS,3,0,2021-08-07 22:17:47+00:00,[],None
671,https://github.com/SouravB97/testing.git,2021-08-03 13:24:46+00:00,Basic CPU design testing,0,SouravB97/testing,392326229,Verilog,testing,10827,0,2021-10-21 07:17:57+00:00,[],None
672,https://github.com/CycloneIV/si.git,2021-08-15 17:05:19+00:00,,0,CycloneIV/si,396426262,Verilog,si,7,0,2021-08-25 16:19:30+00:00,[],None
673,https://github.com/Dhanraj98/Asynchronous-FIFO.git,2021-08-15 17:50:06+00:00,,0,Dhanraj98/Asynchronous-FIFO,396439508,Verilog,Asynchronous-FIFO,222,0,2021-08-20 17:20:51+00:00,[],None
674,https://github.com/Simon-Carballo/Logic-Design.git,2021-08-12 19:49:10+00:00,,0,Simon-Carballo/Logic-Design,395428251,Verilog,Logic-Design,15885,0,2022-03-09 19:28:40+00:00,[],None
675,https://github.com/yeyunchao/anlogic_fan.git,2021-08-02 05:40:12+00:00,,0,yeyunchao/anlogic_fan,391827934,Verilog,anlogic_fan,1705,0,2021-08-13 10:44:32+00:00,[],None
676,https://github.com/serpret/i2c_passthru.git,2021-08-14 15:52:16+00:00,,0,serpret/i2c_passthru,396055386,Verilog,i2c_passthru,279,0,2022-01-15 16:35:08+00:00,[],https://api.github.com/licenses/mit
677,https://github.com/iuming/Verilog_Learning.git,2021-07-24 01:28:28+00:00,Record the Verilog language learning notes and the source code of the questions on the HDLBits website!,0,iuming/Verilog_Learning,388969133,Verilog,Verilog_Learning,42804,0,2022-10-10 10:19:23+00:00,[],https://api.github.com/licenses/mit
678,https://github.com/Artsadthavud/testVGA.git,2021-07-23 16:00:47+00:00,project,0,Artsadthavud/testVGA,388854446,Verilog,testVGA,25056,0,2022-01-17 11:42:56+00:00,[],None
679,https://github.com/adithyasunil26/basejump_stl_alu.git,2021-07-20 21:29:30+00:00,Core created as a proof of concept for BaseJump STL integration into FuseSoC. Simple ALU with an SRAM generated by bsg_fakeram.,0,adithyasunil26/basejump_stl_alu,387918250,Verilog,basejump_stl_alu,26,0,2021-08-30 17:18:29+00:00,[],None
680,https://github.com/hemachandra10/VerilogCodeGeneration.git,2021-07-20 18:47:37+00:00,,0,hemachandra10/VerilogCodeGeneration,387885157,Verilog,VerilogCodeGeneration,33,0,2021-07-20 18:48:37+00:00,[],None
681,https://github.com/J-StrawHat/74LS191-counter.git,2021-07-20 18:06:33+00:00,基于FPGA实现的74LS191（同步16进制加/减计数器）,0,J-StrawHat/74LS191-counter,387875628,Verilog,74LS191-counter,5,0,2021-07-20 18:37:08+00:00,"['verilog-hdl', 'nexy4', '74ls191']",None
682,https://github.com/ebahtiyar/EYE-CHART-VGA_Proje-with-Verilog.git,2021-07-25 08:43:41+00:00,Eye Chart using VGA ,0,ebahtiyar/EYE-CHART-VGA_Proje-with-Verilog,389301291,Verilog,EYE-CHART-VGA_Proje-with-Verilog,5021,0,2021-07-25 08:47:45+00:00,[],None
683,https://github.com/snyder-verilog/switches-leds.git,2021-08-04 23:49:32+00:00,,0,snyder-verilog/switches-leds,392851939,Verilog,switches-leds,5,0,2021-08-04 23:49:51+00:00,[],None
684,https://github.com/flockeyrocks/morse-decode.git,2021-08-04 23:16:50+00:00,,0,flockeyrocks/morse-decode,392847129,Verilog,morse-decode,1506,0,2021-08-04 23:17:14+00:00,[],None
685,https://github.com/BillDior/MIPS_PIPELINE_CPU.git,2021-08-04 20:52:51+00:00,,0,BillDior/MIPS_PIPELINE_CPU,392821922,Verilog,MIPS_PIPELINE_CPU,14,0,2021-08-06 10:21:05+00:00,[],None
686,https://github.com/Puqiyuan/light_cpu.git,2021-08-01 14:37:41+00:00,my own simple cpu,0,Puqiyuan/light_cpu,391652136,Verilog,light_cpu,1,0,2021-08-08 11:39:06+00:00,[],None
687,https://github.com/praneeth-github/Tic-Tac-Toe-Game-win-predictor.git,2021-07-29 05:57:41+00:00,,0,praneeth-github/Tic-Tac-Toe-Game-win-predictor,390616781,Verilog,Tic-Tac-Toe-Game-win-predictor,5431,0,2021-07-29 06:06:24+00:00,[],None
688,https://github.com/Manasa369/vedic-multiplier.git,2021-07-29 15:21:35+00:00,,0,Manasa369/vedic-multiplier,390767125,Verilog,vedic-multiplier,6,0,2021-07-29 15:26:47+00:00,[],None
689,https://github.com/MariaAceves/Practica-1.git,2021-07-29 01:13:44+00:00,,0,MariaAceves/Practica-1,390557713,Verilog,Practica-1,1,0,2021-07-29 01:15:15+00:00,[],None
690,https://github.com/zenith-1st/Counter.git,2021-07-28 20:14:16+00:00,,0,zenith-1st/Counter,390491765,Verilog,Counter,1,0,2021-07-28 20:20:34+00:00,[],None
691,https://github.com/jakdurider/verilog_cpu.git,2021-08-08 15:45:31+00:00,,0,jakdurider/verilog_cpu,394002516,Verilog,verilog_cpu,50,0,2022-02-02 04:35:05+00:00,[],None
692,https://github.com/satish-reddy-vattigunta/16_bit_dadda_multiplier.git,2021-07-31 20:03:30+00:00,,0,satish-reddy-vattigunta/16_bit_dadda_multiplier,391453468,Verilog,16_bit_dadda_multiplier,2071,0,2021-08-20 16:13:10+00:00,[],None
693,https://github.com/amanda-ariyaratne/fpga-som.git,2021-07-31 04:23:38+00:00,,0,amanda-ariyaratne/fpga-som,391253280,Verilog,fpga-som,1432,0,2021-12-20 15:52:00+00:00,[],None
694,https://github.com/surendra-del/Braille-Translator.git,2021-07-14 16:02:45+00:00,A verilog module which converts 6-digit Braille input to its corresponding ASCII Value,0,surendra-del/Braille-Translator,385997949,Verilog,Braille-Translator,12472,0,2021-07-14 16:07:44+00:00,[],https://api.github.com/licenses/apache-2.0
695,https://github.com/quangtran2796/Traffic_light_testbench.git,2021-07-12 12:32:48+00:00,A testbench of traffic light system used for electronic lab.,0,quangtran2796/Traffic_light_testbench,385241331,Verilog,Traffic_light_testbench,2233,0,2021-07-12 12:54:05+00:00,[],None
696,https://github.com/Vaceee/ElectronicKeyboard-FPGA.git,2021-07-14 13:47:53+00:00,A simulative electronic keyboard implemented on FPGA,0,Vaceee/ElectronicKeyboard-FPGA,385956485,Verilog,ElectronicKeyboard-FPGA,525,0,2021-07-18 04:30:58+00:00,['tongji-university'],None
697,https://github.com/erictsai1224tw/2017_ic_contest.git,2021-07-15 04:57:14+00:00,2017 IC contest 初賽,0,erictsai1224tw/2017_ic_contest,386168254,Verilog,2017_ic_contest,2313,0,2023-11-01 05:14:33+00:00,[],None
698,https://github.com/mark81806/heartattackandmolebuster.git,2021-07-18 08:45:04+00:00,a verilog 2in1 game project,0,mark81806/heartattackandmolebuster,387130069,Verilog,heartattackandmolebuster,12054,0,2021-07-18 08:47:13+00:00,[],None
699,https://github.com/srikanishk/UART_Verilog.git,2021-07-18 14:19:01+00:00,UART Verilog Proj,0,srikanishk/UART_Verilog,387193348,Verilog,UART_Verilog,3,0,2022-08-10 03:05:10+00:00,[],None
700,https://github.com/zenith-1st/FIFFO-Verilg.git,2021-07-18 18:36:25+00:00,,0,zenith-1st/FIFFO-Verilg,387245068,Verilog,FIFFO-Verilg,3,0,2021-07-18 18:38:31+00:00,[],None
701,https://github.com/AnandMaha/CS120ALogic-Design.git,2021-08-14 04:17:44+00:00,"Boolean algebra, Karnaugh map minimization, state/output table, multifunction registers, register transfer level design",0,AnandMaha/CS120ALogic-Design,395886432,Verilog,CS120ALogic-Design,265,0,2021-08-14 04:19:17+00:00,[],None
702,https://github.com/CuongLuVan/des_lcd.git,2021-08-09 02:40:08+00:00,,0,CuongLuVan/des_lcd,394124700,Verilog,des_lcd,14,0,2021-08-09 05:37:46+00:00,[],None
703,https://github.com/gbsf/MC030-code.git,2021-08-07 07:47:35+00:00,,0,gbsf/MC030-code,393616948,Verilog,MC030-code,4152,0,2021-08-12 00:42:21+00:00,[],None
704,https://github.com/RuntimeErrorGr/Timer.git,2021-08-07 10:31:55+00:00,,0,RuntimeErrorGr/Timer,393652556,Verilog,Timer,2,0,2021-08-07 10:32:12+00:00,[],None
705,https://github.com/RishabhAdiga/Computer-Organisation-EE2003-Project.git,2021-08-04 16:02:41+00:00,,0,RishabhAdiga/Computer-Organisation-EE2003-Project,392749812,Verilog,Computer-Organisation-EE2003-Project,2467,0,2022-01-29 04:31:49+00:00,[],None
706,https://github.com/SachiniW/System_BUS_Design.git,2021-08-15 04:53:02+00:00,A point to point multiplexed serial bus design,1,SachiniW/System_BUS_Design,396219552,Verilog,System_BUS_Design,276113,0,2022-01-10 04:05:21+00:00,[],None
707,https://github.com/andrewchandlerramirez/MIPS-Pipelined-Verilog.git,2021-08-09 07:39:40+00:00,,0,andrewchandlerramirez/MIPS-Pipelined-Verilog,394196804,Verilog,MIPS-Pipelined-Verilog,56,0,2022-05-12 01:49:31+00:00,[],None
708,https://github.com/benjunzh/ecc.git,2021-07-12 14:42:53+00:00,,0,benjunzh/ecc,385280442,Verilog,ecc,37,0,2021-07-12 14:55:36+00:00,[],None
709,https://github.com/satyaprakash-ops/Voting_machine_verilog.git,2021-07-25 21:06:35+00:00,,0,satyaprakash-ops/Voting_machine_verilog,389441040,Verilog,Voting_machine_verilog,1,0,2021-07-26 15:14:32+00:00,[],None
710,https://github.com/Papu-RTL-Work/I2C_Slave.git,2021-07-25 05:23:53+00:00,,0,Papu-RTL-Work/I2C_Slave,389268937,Verilog,I2C_Slave,166,0,2021-08-17 10:05:03+00:00,[],None
711,https://github.com/RookieLT/FTDL.git,2021-07-21 21:35:12+00:00,,0,RookieLT/FTDL,388251350,Verilog,FTDL,246,0,2021-08-16 14:46:28+00:00,[],None
712,https://github.com/zwmurray/adler32.git,2021-07-22 14:24:14+00:00,Adler 32 Checksum Generator,0,zwmurray/adler32,388489933,Verilog,adler32,771,0,2021-07-22 14:27:49+00:00,[],None
713,https://github.com/huangchink/pipelined_CPU.git,2021-07-22 10:01:21+00:00,,0,huangchink/pipelined_CPU,388414443,Verilog,pipelined_CPU,2067,0,2021-07-22 10:03:45+00:00,[],None
714,https://github.com/Thomas-Overmeire/Team-3-Design-Project.git,2021-07-26 11:34:23+00:00,"ELEC5552 Electrical and Electronic Engineering Design Project 2 - Team 3, Project 4",0,Thomas-Overmeire/Team-3-Design-Project,389610679,Verilog,Team-3-Design-Project,24051,0,2021-10-15 15:24:48+00:00,[],None
715,https://github.com/surajs15/IEEE-754-Floating-Adder.git,2021-07-29 08:39:40+00:00,,0,surajs15/IEEE-754-Floating-Adder,390657970,Verilog,IEEE-754-Floating-Adder,526,0,2021-07-29 08:41:16+00:00,[],None
716,https://github.com/armleo/ArmleoPC_sky130.git,2021-07-27 13:28:23+00:00,Skywater 130nm Tapeout using Open-MPW,1,armleo/ArmleoPC_sky130,389993972,Verilog,ArmleoPC_sky130,2295,0,2021-11-11 01:05:56+00:00,[],https://api.github.com/licenses/apache-2.0
717,https://github.com/InvincibleJuggernaut/ALU.git,2021-07-27 11:51:31+00:00,Design for 4 bit ALU with essential logical and arithmetic modules.,0,InvincibleJuggernaut/ALU,389963444,Verilog,ALU,1165,0,2021-10-29 13:36:33+00:00,"['verilog', 'arithmetic-logic-unit', 'hardware-designs', 'hardware-synthesis', 'hardware-description-language']",None
718,https://github.com/Manav2003/four_bit_adder.git,2021-07-31 10:32:11+00:00,,0,Manav2003/four_bit_adder,391324705,Verilog,four_bit_adder,3,0,2021-07-31 10:33:01+00:00,[],None
719,https://github.com/MrNextor/HC-SR04.git,2021-08-01 15:04:37+00:00,Измерение расстояния до объекта с помощью ультразвукового датчика HC-SR04 и отображение измеренного расстояния в сантиметрах на семи сегментном дисплее,0,MrNextor/HC-SR04,391659111,Verilog,HC-SR04,696,0,2021-08-06 20:32:48+00:00,[],https://api.github.com/licenses/mit
720,https://github.com/luoshui9/Frequency-Meter.git,2021-08-03 03:11:52+00:00,,1,luoshui9/Frequency-Meter,392171290,Verilog,Frequency-Meter,682,0,2021-08-03 03:12:55+00:00,[],None
721,https://github.com/HKhademian/UniArchLab.git,2021-08-03 07:26:13+00:00,Computer Architecture Lab Projects,0,HKhademian/UniArchLab,392229015,Verilog,UniArchLab,13,0,2022-04-01 08:46:54+00:00,"['university', 'architecture', 'verilog', 'lab']",None
722,https://github.com/SarahElzayat/CombinationalMultiplier.git,2021-07-14 20:49:10+00:00,A a 4x4 multiplier for unsigned numbers using combinational logic that displays the results on a 7-segment display.,1,SarahElzayat/CombinationalMultiplier,386072905,Verilog,CombinationalMultiplier,303,0,2021-07-14 20:52:01+00:00,[],None
723,https://github.com/jsmendaros/riscv-singlecycle.git,2021-07-12 15:14:52+00:00,Single-cycle RISC-V 64-bit processor implementation in Verilog,1,jsmendaros/riscv-singlecycle,385290361,Verilog,riscv-singlecycle,14,0,2021-07-12 15:54:58+00:00,[],https://api.github.com/licenses/mit
724,https://github.com/makhalid1999/Processor.git,2021-07-12 17:28:25+00:00,"A small processor (Verilog hardware description) that can execute basic instructions like add, subtract and move. ",0,makhalid1999/Processor,385329527,Verilog,Processor,4,0,2021-07-12 18:00:20+00:00,[],None
725,https://github.com/egegonul/16-bit-basic-computer.git,2021-07-13 14:49:48+00:00,,0,egegonul/16-bit-basic-computer,385639407,Verilog,16-bit-basic-computer,2,0,2021-07-13 14:50:25+00:00,[],None
726,https://github.com/zenith-1st/vending.git,2021-07-18 18:43:49+00:00,,0,zenith-1st/vending,387246336,Verilog,vending,0,0,2021-07-18 18:51:53+00:00,[],None
727,https://github.com/zl2cco/ecp5_playground.git,2021-07-17 18:28:56+00:00,,1,zl2cco/ecp5_playground,387012565,Verilog,ecp5_playground,395,0,2021-11-06 17:38:23+00:00,[],None
728,https://github.com/daksh08/Assignment-6.git,2021-07-17 07:33:33+00:00,,0,daksh08/Assignment-6,386870125,Verilog,Assignment-6,35,0,2021-07-17 07:34:30+00:00,[],None
729,https://github.com/Mo740ed/CAD_mini_project.git,2021-07-20 13:46:39+00:00,"This is my mini project for CAD subject, where I simulate a Tic Tac Toe game in Quartus ii.",0,Mo740ed/CAD_mini_project,387806048,Verilog,CAD_mini_project,7,0,2021-07-25 08:13:09+00:00,[],None
730,https://github.com/AyushLall5/CLA_Layout.git,2021-07-11 12:00:47+00:00,,0,AyushLall5/CLA_Layout,384937053,Verilog,CLA_Layout,14120,0,2021-07-11 15:30:55+00:00,[],None
731,https://github.com/GustavoGarciaDeAlba/P01-AritmethicLogicUnit.git,2021-07-25 02:26:47+00:00,Aritmethic Logic Unit implementation in verilog,0,GustavoGarciaDeAlba/P01-AritmethicLogicUnit,389241730,Verilog,P01-AritmethicLogicUnit,1,0,2021-07-25 02:36:47+00:00,[],None
732,https://github.com/satish-reddy-vattigunta/Brent-kung-adder.git,2021-07-27 03:06:52+00:00,,0,satish-reddy-vattigunta/Brent-kung-adder,389832352,Verilog,Brent-kung-adder,2706,0,2021-08-20 16:12:37+00:00,[],None
733,https://github.com/RuntimeErrorGr/Soda-Machine.git,2021-08-07 10:28:39+00:00,,0,RuntimeErrorGr/Soda-Machine,393651851,Verilog,Soda-Machine,1,0,2022-02-27 19:29:54+00:00,[],None
734,https://github.com/BZBZZBZB/B_TO_D.git,2021-08-05 09:33:20+00:00,verilog implements binary to decimal,0,BZBZZBZB/B_TO_D,392984314,Verilog,B_TO_D,1,0,2021-08-05 09:35:59+00:00,[],None
735,https://github.com/infphyny/wb_avalon_bridge.git,2021-08-06 11:57:28+00:00,,1,infphyny/wb_avalon_bridge,393362823,Verilog,wb_avalon_bridge,9,0,2021-12-01 20:31:11+00:00,[],None
736,https://github.com/dheeru-karanam/HDL-BITS.git,2021-08-06 17:44:18+00:00,Solutions to programs on HDLBITS Website,0,dheeru-karanam/HDL-BITS,393455903,Verilog,HDL-BITS,94,0,2021-08-15 16:03:58+00:00,[],None
737,https://github.com/ccc110a/co.git,2021-08-03 11:10:28+00:00,計算機結構 -- 陳鍾誠 110 上學期,0,ccc110a/co,392288592,Verilog,co,8392,0,2021-08-03 12:55:38+00:00,[],None
738,https://github.com/dismastoo/My_Verilog_Projects.git,2021-08-05 04:27:19+00:00,,0,dismastoo/My_Verilog_Projects,392901200,Verilog,My_Verilog_Projects,15,0,2021-08-05 04:31:34+00:00,[],None
739,https://github.com/pritindra/ARM7-cpu.git,2021-08-09 12:31:24+00:00,,0,pritindra/ARM7-cpu,394283687,Verilog,ARM7-cpu,72,0,2021-08-24 04:51:43+00:00,[],None
740,https://github.com/470486104/j1_32.git,2021-08-10 04:43:05+00:00,32位多核堆栈j1处理器,0,470486104/j1_32,394526457,Verilog,j1_32,331,0,2023-07-06 15:18:38+00:00,[],None
741,https://github.com/Caoyvming/Verilog_Tranining.git,2021-08-10 03:02:01+00:00,Record some excercises of Verilog Design,0,Caoyvming/Verilog_Tranining,394508138,Verilog,Verilog_Tranining,645,0,2021-08-10 03:40:59+00:00,[],None
742,https://github.com/KB-Q/EE2003-A8-RISC-V-CPU.git,2021-07-20 08:51:54+00:00,,0,KB-Q/EE2003-A8-RISC-V-CPU,387730713,Verilog,EE2003-A8-RISC-V-CPU,39,0,2021-07-20 08:52:59+00:00,[],None
743,https://github.com/pin-chen/ALU-Shifter.git,2021-07-20 14:46:34+00:00,,0,pin-chen/ALU-Shifter,387823480,Verilog,ALU-Shifter,70488,0,2022-01-18 00:02:53+00:00,[],None
744,https://github.com/paradox0510/Digital_Comm._System.git,2021-07-20 10:16:48+00:00,,0,paradox0510/Digital_Comm._System,387752495,Verilog,Digital_Comm._System,414,0,2021-07-22 17:33:45+00:00,[],None
745,https://github.com/kiwi2293/university.git,2021-07-20 10:31:44+00:00,,0,kiwi2293/university,387755985,Verilog,university,2,0,2021-07-20 10:33:30+00:00,[],None
746,https://github.com/Shravan-3501/Logic-Circuit-Counters.git,2021-07-18 10:32:08+00:00,,0,Shravan-3501/Logic-Circuit-Counters,387149089,Verilog,Logic-Circuit-Counters,6,0,2021-07-18 10:37:22+00:00,[],None
747,https://github.com/danielgusvt/lm75a_verilog.git,2021-07-20 03:16:29+00:00,Verilog code for retrieving temperature on I2C bus from LM75A sensor and to show to 7 segment displays,0,danielgusvt/lm75a_verilog,387658457,Verilog,lm75a_verilog,1439,0,2021-07-20 05:07:20+00:00,[],https://api.github.com/licenses/apache-2.0
748,https://github.com/Mati1976/SevenSegSwitch.git,2021-07-21 11:26:22+00:00,A small project on my MOJO v3  FPGA  with the IO Shield . operating the 7 segement display with an input from the DIP switch ,0,Mati1976/SevenSegSwitch,388094072,Verilog,SevenSegSwitch,248,0,2021-07-21 11:38:49+00:00,[],None
749,https://github.com/josephjeevan/Dadda-multiplier.git,2021-08-11 14:05:02+00:00,,0,josephjeevan/Dadda-multiplier,395010053,Verilog,Dadda-multiplier,86,0,2021-08-11 14:07:16+00:00,[],None
750,https://github.com/Xingzhi-Zhou/XDMA.git,2021-08-11 04:03:52+00:00,,0,Xingzhi-Zhou/XDMA,394856930,Verilog,XDMA,11,0,2021-08-11 04:22:21+00:00,[],None
751,https://github.com/sinsin1324/EEE3096S-Tutorials.git,2021-08-15 12:56:35+00:00,Tutorials for EEE3096S,0,sinsin1324/EEE3096S-Tutorials,396350546,Verilog,EEE3096S-Tutorials,7,0,2021-10-22 18:52:39+00:00,[],None
752,https://github.com/varun26khan/BrentKungAdder.git,2021-08-15 10:30:38+00:00,Designed a N bit parametrised logarithmic adder using Brent Kung architecture. Implemented the design in Verilog and verified its operation using Modelsim with appropriate test vectors. Identified the critical path of the design to determine the worst case delay of the adder,0,varun26khan/BrentKungAdder,396313009,Verilog,BrentKungAdder,3,0,2021-08-19 04:39:33+00:00,[],None
753,https://github.com/deshmukhshrihari67/RISC_processor.git,2021-08-15 08:55:08+00:00,,0,deshmukhshrihari67/RISC_processor,396285901,Verilog,RISC_processor,19949,0,2021-08-16 19:26:26+00:00,[],None
754,https://github.com/shl0mo/Blackjack-Verilog.git,2021-07-27 15:05:19+00:00,BlackJack game written in Verilog. Made to work on Altera Cyclone II 2C20 FPGA (with 20000 LEs) board,0,shl0mo/Blackjack-Verilog,390027100,Verilog,Blackjack-Verilog,2,0,2022-01-05 15:42:11+00:00,[],None
755,https://github.com/rafetkavak/termprojects.git,2021-07-25 18:43:18+00:00,The projects that I did during my undergraduate years,0,rafetkavak/termprojects,389418074,Verilog,termprojects,52538,0,2021-07-28 17:47:57+00:00,[],None
756,https://github.com/NeelTa1lor/UART_verilog.git,2021-07-29 11:04:02+00:00,,0,NeelTa1lor/UART_verilog,390695348,Verilog,UART_verilog,4,0,2021-07-29 11:06:31+00:00,[],None
757,https://github.com/surajs15/MIPS-Pipelined-Architecture.git,2021-07-29 08:29:48+00:00,,0,surajs15/MIPS-Pipelined-Architecture,390654881,Verilog,MIPS-Pipelined-Architecture,1040,0,2021-07-29 08:33:00+00:00,[],None
758,https://github.com/ali79hm/mrf_denoise.git,2021-07-26 15:22:57+00:00,,0,ali79hm/mrf_denoise,389679391,Verilog,mrf_denoise,941,0,2021-09-11 07:20:17+00:00,[],None
759,https://github.com/MrNextor/BMP180.git,2021-07-29 12:49:51+00:00,Вычисление температуры окружающей среды и атмосферного давления с помощью датчика BMP180,0,MrNextor/BMP180,390722406,Verilog,BMP180,1161,0,2021-08-09 17:57:34+00:00,[],https://api.github.com/licenses/mit
760,https://github.com/elizabeth1234556/Practice-2---Machine-Language.git,2021-07-29 22:52:00+00:00,,0,elizabeth1234556/Practice-2---Machine-Language,390868632,Verilog,Practice-2---Machine-Language,2,0,2021-07-29 22:56:04+00:00,[],None
761,https://github.com/flockeyrocks/vending-machine.git,2021-08-04 23:10:48+00:00,,0,flockeyrocks/vending-machine,392846167,Verilog,vending-machine,704,0,2021-08-04 23:11:11+00:00,[],None
762,https://github.com/SanjeevaKola/Asynchronous-FIFO.git,2021-08-14 07:39:41+00:00,,0,SanjeevaKola/Asynchronous-FIFO,395931192,Verilog,Asynchronous-FIFO,476,0,2021-08-20 11:23:32+00:00,[],None
763,https://github.com/kulp/tappy.git,2021-07-11 22:03:25+00:00,"tappy is a tiny Verilog driver for PS/2 keyboards, for use in FPGAs",0,kulp/tappy,385060345,Verilog,tappy,17,0,2021-07-18 23:45:52+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/mit
764,https://github.com/Sasisekhar/RV32I.git,2021-07-12 13:16:05+00:00,,0,Sasisekhar/RV32I,385253735,Verilog,RV32I,7,0,2021-07-12 13:26:43+00:00,[],None
765,https://github.com/naidutangi7/DADDA-MULTIPLIER.git,2021-08-11 05:47:13+00:00,,0,naidutangi7/DADDA-MULTIPLIER,394876789,Verilog,DADDA-MULTIPLIER,7,0,2021-08-11 07:03:53+00:00,[],None
766,https://github.com/raviverma2/fifo.git,2021-08-13 13:53:31+00:00,project on fido,0,raviverma2/fifo,395672852,Verilog,fifo,1,0,2021-08-13 14:06:12+00:00,[],None
767,https://github.com/MahishaBM/Design-and-implementation-of-8-bit-Parity-generator-using-sky130nm--technology.git,2021-08-13 15:46:56+00:00,,0,MahishaBM/Design-and-implementation-of-8-bit-Parity-generator-using-sky130nm--technology,395708788,Verilog,Design-and-implementation-of-8-bit-Parity-generator-using-sky130nm--technology,62,0,2021-10-31 03:21:50+00:00,[],None
