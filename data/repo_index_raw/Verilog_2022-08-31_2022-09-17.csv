,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/ika-musume/IKAOPM.git,2022-09-02 07:54:20+00:00,A BSD-licensed YM2151 cycle-accurate Verilog core based on the die shot from siliconpr0n,5,ika-musume/IKAOPM,531833545,Verilog,IKAOPM,22879,61,2024-04-04 12:10:02+00:00,[],https://api.github.com/licenses/bsd-2-clause
1,https://github.com/b224hisl/rioschip.git,2022-09-13 05:55:46+00:00,,4,b224hisl/rioschip,535979089,Verilog,rioschip,844822,29,2023-08-29 22:15:28+00:00,[],https://api.github.com/licenses/apache-2.0
2,https://github.com/ericlewis/openfpga-dominos.git,2022-09-12 17:55:26+00:00,"FPGA implementation of Arcade Dominos (Atari, 1977) for Analogue Pocket.",0,ericlewis/openfpga-dominos,535787522,Verilog,openfpga-dominos,670,25,2024-02-26 16:45:06+00:00,"['analogue-pocket', 'openfpga']",None
3,https://github.com/emu-russia/dmgcpu.git,2022-09-14 10:54:21+00:00,DMG CPU Core Reverse Engineering,4,emu-russia/dmgcpu,536534699,Verilog,dmgcpu,447743,21,2024-02-14 03:35:33+00:00,"['core', 'cpu', 'gameboy', 'reverse-engineering', 'dmg', 'dmg-cpu', 'sm83']",https://api.github.com/licenses/cc0-1.0
4,https://github.com/Giftwen/CourseDigitalIC.git,2022-09-07 16:14:51+00:00,国科大高等数字集成电路分析与设计课程2022fall,0,Giftwen/CourseDigitalIC,533843976,Verilog,CourseDigitalIC,111377,20,2024-04-04 06:45:40+00:00,[],None
5,https://github.com/va7deo/SNK68.git,2022-09-08 19:01:50+00:00,SNK 68K ,2,va7deo/SNK68,534355239,Verilog,SNK68,139476,13,2024-04-05 23:38:03+00:00,[],https://api.github.com/licenses/gpl-2.0
6,https://github.com/fangyzh26/FIFO.git,2022-09-04 11:44:14+00:00,包括同步FIFO（输入输出位宽相同），异步FIFO（输入输出位宽相同），异步FIFO（能实现输出数据位宽是输入数据位宽的1/2或2倍）,4,fangyzh26/FIFO,532523339,Verilog,FIFO,276,13,2024-03-11 12:32:47+00:00,[],None
7,https://github.com/ericlewis/openfpga-qbert.git,2022-09-13 20:27:30+00:00,An FPGA implementation of Q*Bert for Analogue Pocket,1,ericlewis/openfpga-qbert,536298103,Verilog,openfpga-qbert,5159,12,2023-10-14 04:25:16+00:00,"['analogue-pocket', 'openfpga']",None
8,https://github.com/briansune/USB-PD-Verilog.git,2022-08-31 22:29:26+00:00,USB Type-C Power Delivery FPGA,1,briansune/USB-PD-Verilog,531279620,Verilog,USB-PD-Verilog,17789,11,2024-03-03 15:33:38+00:00,"['fpga', 'usb-pd', 'usb-type-c', 'voltage-trigger']",https://api.github.com/licenses/mit
9,https://github.com/balanx/SpinalHDLDemo.git,2022-09-16 14:33:06+00:00,Demo Sources for Learning Spinal HDL,2,balanx/SpinalHDLDemo,537495138,Verilog,SpinalHDLDemo,91,11,2023-12-15 01:19:13+00:00,[],https://api.github.com/licenses/apache-2.0
10,https://github.com/muhammedkocaoglu/mystic_riscv64.git,2022-09-11 18:38:29+00:00,64-bit RISC-V processor,1,muhammedkocaoglu/mystic_riscv64,535391501,Verilog,mystic_riscv64,1088,11,2024-01-25 23:58:00+00:00,[],https://api.github.com/licenses/mit
11,https://github.com/vinayrayapati/iiitb_rv32i.git,2022-09-06 08:42:05+00:00,,2,vinayrayapati/iiitb_rv32i,533235367,Verilog,iiitb_rv32i,213526,10,2024-02-29 15:53:31+00:00,[],https://api.github.com/licenses/apache-2.0
12,https://github.com/ensariskin/5-Stage-Pipeline-RV32I.git,2022-09-15 18:35:03+00:00,5 Stage Pipelined RISC V Processor Design for RV32I Instruction Set,1,ensariskin/5-Stage-Pipeline-RV32I,537160123,Verilog,5-Stage-Pipeline-RV32I,142,10,2023-12-10 06:01:11+00:00,[],None
13,https://github.com/proppy/tiny_user_project.git,2022-09-06 01:57:06+00:00,,8,proppy/tiny_user_project,533123705,Verilog,tiny_user_project,18183,10,2023-11-01 14:49:41+00:00,[],https://api.github.com/licenses/apache-2.0
14,https://github.com/idea-fasoc/openfasoc-tapeouts.git,2022-09-16 22:01:17+00:00,Tapeouts done using OpenFASOC,11,idea-fasoc/openfasoc-tapeouts,537631823,Verilog,openfasoc-tapeouts,264584,9,2024-02-29 16:26:29+00:00,[],https://api.github.com/licenses/apache-2.0
15,https://github.com/antongale/EXERION.git,2022-09-08 23:11:32+00:00,Exerion Core,1,antongale/EXERION,534424594,Verilog,EXERION,128738,9,2023-11-20 20:17:57+00:00,[],https://api.github.com/licenses/gpl-3.0
16,https://github.com/Dudestin/tinyEther.git,2022-09-06 20:58:55+00:00,技術書展13(2022/9/10 ~ 9/25) にて頒布した『FPGAによるネットワーク機器完全自作実践』のサポートリポジトリです,0,Dudestin/tinyEther,533500257,Verilog,tinyEther,165,7,2023-05-20 06:44:53+00:00,"['ethernet', 'fpga']",None
17,https://github.com/The8BitEnthusiast/vga-on-fpga.git,2022-09-14 21:25:04+00:00,A direct port of Ben Eater's VGA circuit to FPGA,0,The8BitEnthusiast/vga-on-fpga,536764361,Verilog,vga-on-fpga,8089,6,2024-03-13 16:53:18+00:00,[],None
18,https://github.com/AkhilDotG/Floating-point-MAC.git,2022-09-17 08:26:35+00:00,Half Precision Floating point Multiplier Accumulator,1,AkhilDotG/Floating-point-MAC,537745353,Verilog,Floating-point-MAC,4,5,2023-12-27 21:44:49+00:00,[],None
19,https://github.com/sts08015/HDLBits_solution.git,2022-09-01 22:43:48+00:00,My own HDLBits solution :),0,sts08015/HDLBits_solution,531707935,Verilog,HDLBits_solution,79,5,2023-09-04 09:55:48+00:00,"['verilog', 'verilog-code', 'verilog-hdl', 'hdlbits', 'hdlbitssolution']",https://api.github.com/licenses/gpl-3.0
20,https://github.com/imihajlow/74xx-verilog.git,2022-09-04 11:05:04+00:00,Verilog models of 74xx chips,0,imihajlow/74xx-verilog,532514692,Verilog,74xx-verilog,22,5,2023-11-17 20:22:27+00:00,[],https://api.github.com/licenses/gpl-3.0
21,https://github.com/agg23/openfpga-template.git,2022-09-09 16:25:25+00:00,,2,agg23/openfpga-template,534719369,Verilog,openfpga-template,253,5,2023-07-03 14:33:04+00:00,[],None
22,https://github.com/mikeakohn/intel_8008.git,2022-09-15 22:28:45+00:00,Intel 8008 implemented in Verilog.,0,mikeakohn/intel_8008,537225713,Verilog,intel_8008,72,5,2023-12-25 12:54:00+00:00,[],None
23,https://github.com/xiaoyuehai/DITES.git,2022-09-16 06:55:29+00:00,,0,xiaoyuehai/DITES,537341483,Verilog,DITES,571,5,2024-01-16 03:09:24+00:00,[],None
24,https://github.com/fm4dd/gm-proto-e1.git,2022-09-05 05:40:47+00:00,prototyping board for the GateMate FPGA evaluation board E1,0,fm4dd/gm-proto-e1,532758745,Verilog,gm-proto-e1,28024,5,2023-06-29 07:24:53+00:00,"['fpga', 'pcb-design', 'prototyping', 'gatemate']",
25,https://github.com/mdhasnainali/CSE2112-Digital_System_Design_Lab.git,2022-09-05 11:18:07+00:00,,1,mdhasnainali/CSE2112-Digital_System_Design_Lab,532867022,Verilog,CSE2112-Digital_System_Design_Lab,11,4,2023-07-21 12:54:21+00:00,[],None
26,https://github.com/ericlewis/analogue-life.git,2022-09-02 13:20:30+00:00,,0,ericlewis/analogue-life,531933897,Verilog,analogue-life,31557,4,2022-09-18 05:46:09+00:00,[],None
27,https://github.com/am2mcu/ATM.git,2022-09-13 04:51:05+00:00,An ATM project written in verilog,1,am2mcu/ATM,535963034,Verilog,ATM,3,4,2023-10-16 15:47:34+00:00,"['project', 'university-project', 'verilog-project']",None
28,https://github.com/Anvadya/Pipelined-Processor.git,2022-09-10 04:31:53+00:00,,0,Anvadya/Pipelined-Processor,534890984,Verilog,Pipelined-Processor,156,4,2023-10-05 11:03:14+00:00,[],None
29,https://github.com/AladinF/HDMI-Video-Interfacing-with-ZCU102-.git,2022-09-11 18:57:11+00:00,HDMI Video Interfacing with ZCU102 using Xilinx IPs,0,AladinF/HDMI-Video-Interfacing-with-ZCU102-,535396206,Verilog,HDMI-Video-Interfacing-with-ZCU102-,160,4,2024-02-29 00:56:36+00:00,[],None
30,https://github.com/EricJin2002/booth-multiplier.git,2022-09-11 07:05:20+00:00,一个32位输入宽度的定点补码乘法器，采用Booth两位一乘和华莱士树,1,EricJin2002/booth-multiplier,535217789,Verilog,booth-multiplier,662,4,2023-11-26 23:54:16+00:00,[],https://api.github.com/licenses/mit
31,https://github.com/Deepak42074/SRAM_IMC.git,2022-09-12 09:58:48+00:00,,1,Deepak42074/SRAM_IMC,535605558,Verilog,SRAM_IMC,6883,4,2024-02-26 02:24:12+00:00,[],https://api.github.com/licenses/apache-2.0
32,https://github.com/CastoHu/SprintRV.git,2022-09-02 11:57:58+00:00,A traditional 5-level pipelined RISCVIMZicsr instruction set core based on System Verilog.,0,CastoHu/SprintRV,531907015,Verilog,SprintRV,828,4,2023-10-27 00:03:01+00:00,[],https://api.github.com/licenses/gpl-3.0
33,https://github.com/devchadha-jmi/Implementation-of-Quantum-Key-Distribution-protocol-BB84-on-FPGA.git,2022-09-09 07:13:35+00:00,This project presents the implementation of Quantum Key Distribution (QKD) Protocol:BB84 on FPGA. Quantum Communication Methodology has been designed using cryptographic protocol along with parallel processing power of FPGAs. The multiple module hierarchy has been used to ease the realization of Algorithm. Details in README file,1,devchadha-jmi/Implementation-of-Quantum-Key-Distribution-protocol-BB84-on-FPGA,534538728,Verilog,Implementation-of-Quantum-Key-Distribution-protocol-BB84-on-FPGA,930,4,2024-01-09 04:55:48+00:00,[],https://api.github.com/licenses/mit
34,https://github.com/YousefSherif/APB-Master-Bridge.git,2022-09-15 01:08:21+00:00,"The master of APB bus is the bridge between the previous system bus and APB bus. This bridge is also a slave to the previous system bus. So, it has two interfaces, previous bus slave interface and APB master interface. Its functionality is to convert complex transfer of the previous system bus to simpler one of APB bus.",1,YousefSherif/APB-Master-Bridge,536814779,Verilog,APB-Master-Bridge,664,4,2024-03-20 05:24:39+00:00,[],None
35,https://github.com/pengzhouzp/wrapped_snn_network.git,2022-08-31 09:48:23+00:00,,1,pengzhouzp/wrapped_snn_network,531022334,Verilog,wrapped_snn_network,3332,3,2023-07-24 08:21:29+00:00,[],https://api.github.com/licenses/apache-2.0
36,https://github.com/IvanXiang/FPGA_IIC_EEPROM.git,2022-09-14 08:11:11+00:00,,1,IvanXiang/FPGA_IIC_EEPROM,536476916,Verilog,FPGA_IIC_EEPROM,57,3,2024-03-08 07:57:32+00:00,[],None
37,https://github.com/rj45/rjvdp.git,2022-09-17 16:17:39+00:00,A retro-inspired VDP -- Video Display Processor -- built with Digital running on an FPGA.,0,rj45/rjvdp,537863416,Verilog,rjvdp,494,3,2023-04-10 22:43:04+00:00,[],https://api.github.com/licenses/mit
38,https://github.com/AustinMcDonald/Q-Pix-Sky130-Caravel.git,2022-09-08 17:27:35+00:00,,0,AustinMcDonald/Q-Pix-Sky130-Caravel,534320960,Verilog,Q-Pix-Sky130-Caravel,29664,3,2023-12-05 22:53:51+00:00,[],https://api.github.com/licenses/apache-2.0
39,https://github.com/whiteknight-WJN/CNN-FPGA.git,2022-09-08 08:22:08+00:00,基于FPGA的cifar-10二维卷积识别任务,1,whiteknight-WJN/CNN-FPGA,534117441,Verilog,CNN-FPGA,3427,3,2023-12-06 02:44:31+00:00,[],https://api.github.com/licenses/mit
40,https://github.com/HaochengBillYang/ece385.git,2022-09-15 22:09:54+00:00,ECE385 @ UIUC FA22,0,HaochengBillYang/ece385,537221478,Verilog,ece385,209006,3,2023-11-03 20:30:33+00:00,"['systemverilog', 'altera-fpga', 'uiuc-ece']",None
41,https://github.com/wang-bocheng/LTC2324.git,2022-09-16 11:29:46+00:00,,1,wang-bocheng/LTC2324,537428793,Verilog,LTC2324,51,3,2023-10-31 13:30:09+00:00,[],None
42,https://github.com/dave-roo/ddcomparatorandro.git,2022-08-31 11:01:13+00:00,,1,dave-roo/ddcomparatorandro,531044916,Verilog,ddcomparatorandro,12,3,2023-03-10 07:14:38+00:00,[],https://api.github.com/licenses/apache-2.0
43,https://github.com/RayCorleone/MipsOS.git,2022-09-10 17:08:11+00:00,TJ 计算机系统实验: OS系统移植,0,RayCorleone/MipsOS,535064860,Verilog,MipsOS,54137,3,2024-03-25 06:03:09+00:00,[],https://api.github.com/licenses/mit
44,https://github.com/TheSonders/MouseConversion.git,2022-09-04 02:12:02+00:00,,3,TheSonders/MouseConversion,532417151,Verilog,MouseConversion,28,3,2022-10-02 16:43:12+00:00,"['mouse', 'ps2', 'serial']",None
45,https://github.com/liu-hz18/MipsGreatAgain-Soc.git,2022-09-15 14:08:42+00:00,A light-weighted synthesizable 9-stage-pipelined MIPS processor with branch prediction and CP1(FPU) support.,1,liu-hz18/MipsGreatAgain-Soc,537056452,Verilog,MipsGreatAgain-Soc,2528,3,2023-06-25 12:38:56+00:00,[],None
46,https://github.com/jamesrosssharp/1_bit_AM.git,2022-09-17 05:14:41+00:00,1 bit AM Radio for ULX3S,0,jamesrosssharp/1_bit_AM,537705807,Verilog,1_bit_AM,1928,2,2022-10-24 10:35:15+00:00,[],https://api.github.com/licenses/mit
47,https://github.com/MeysamBavi/arch-project.git,2022-09-04 22:48:21+00:00,MIPS Pipeline for Computer Architecture Course Final Project in Verilog,0,MeysamBavi/arch-project,532676581,Verilog,arch-project,14,2,2024-01-27 05:51:41+00:00,"['architecture', 'verilog']",None
48,https://github.com/IvanXiang/FPGA_COMS_SDRAM_VGA.git,2022-09-14 08:23:42+00:00,,0,IvanXiang/FPGA_COMS_SDRAM_VGA,536481327,Verilog,FPGA_COMS_SDRAM_VGA,4598,2,2023-03-07 10:03:29+00:00,[],None
49,https://github.com/alsrbok/Programmable_Accelerator.git,2022-09-14 09:01:51+00:00,It can support any spatial/temporal mapping of DNN computation.,0,alsrbok/Programmable_Accelerator,536495280,Verilog,Programmable_Accelerator,2763,2,2023-04-10 08:51:09+00:00,[],https://api.github.com/licenses/mit
50,https://github.com/asankaSovis/eight_bit_computer.git,2022-09-05 17:05:07+00:00,"🎛️ FPGAs are an interesting invention that is expected to revolutionize the digital industry. This series will focus on building the 8-bit computer that Ben Eater built on his youtube channel. However, it will be done not with actual chips and hardware, but with Verilog code and FPGA simulations.",1,asankaSovis/eight_bit_computer,532989814,Verilog,eight_bit_computer,22,2,2024-02-13 12:30:12+00:00,"['fpga', '8bit', 'beneater', 'computer', 'fpga-programming', 'verilog']",https://api.github.com/licenses/cc0-1.0
51,https://github.com/jnaraujo/tec498_projeto_01.git,2022-09-13 22:10:42+00:00,📚 Projeto da desciplina de TEC 498 MI - Projeto de Circuitos Digitais,0,jnaraujo/tec498_projeto_01,536324829,Verilog,tec498_projeto_01,287,2,2023-03-07 04:51:18+00:00,[],None
52,https://github.com/cornell-ece4750/ece4750-sec02-verilog.git,2022-09-02 13:09:45+00:00,ECE 4750 Section 2: RTL Design with Verilog,11,cornell-ece4750/ece4750-sec02-verilog,531930293,Verilog,ece4750-sec02-verilog,1563,2,2023-05-19 03:29:13+00:00,[],None
53,https://github.com/benevpi/test-asic.git,2022-09-16 18:28:00+00:00,a tinytapeout test,0,benevpi/test-asic,537576026,Verilog,test-asic,9,2,2023-01-31 13:49:58+00:00,[],https://api.github.com/licenses/apache-2.0
54,https://github.com/CRTejaswi/floatpt-sqrt.git,2022-09-13 10:49:28+00:00,,0,CRTejaswi/floatpt-sqrt,536079885,Verilog,floatpt-sqrt,2021,2,2023-11-27 08:49:10+00:00,[],None
55,https://github.com/yaojh18/cod-cpu.git,2022-09-15 07:50:26+00:00,This is five-stage pipeline CPU developed on RISC-V Instruction Set. TLB supported.,0,yaojh18/cod-cpu,536919966,Verilog,cod-cpu,82237,2,2024-02-14 14:08:18+00:00,[],None
56,https://github.com/sami154/Ring_Oscillator_PUF_in_Verilog.git,2022-09-03 16:19:48+00:00,,0,sami154/Ring_Oscillator_PUF_in_Verilog,532312260,Verilog,Ring_Oscillator_PUF_in_Verilog,2018,2,2024-03-27 07:28:19+00:00,[],None
57,https://github.com/Wave7t/THUEE-MIPS-CPU.git,2022-09-02 11:15:40+00:00,清华大学电子系数逻小学期,0,Wave7t/THUEE-MIPS-CPU,531894297,Verilog,THUEE-MIPS-CPU,325,2,2023-11-07 05:48:06+00:00,[],None
58,https://github.com/goEricBi/VTR.git,2022-09-09 18:15:48+00:00,,0,goEricBi/VTR,534757290,Verilog,VTR,48,2,2023-02-21 22:37:28+00:00,[],None
59,https://github.com/microdynamics-cpu/tree-core-soc.git,2022-09-09 01:17:29+00:00,A verilator based SoC simulation framework for TreeCore CPU.,0,microdynamics-cpu/tree-core-soc,534452635,Verilog,tree-core-soc,18638,2,2023-09-02 11:29:52+00:00,[],
60,https://github.com/s100projects/T35seg7.git,2022-09-12 13:26:02+00:00,T35 Seven Segment Counter,0,s100projects/T35seg7,535678952,Verilog,T35seg7,7189,2,2023-01-03 22:19:43+00:00,[],None
61,https://github.com/vijayank88/graphics_controller.git,2022-08-31 13:20:55+00:00,,0,vijayank88/graphics_controller,531094269,Verilog,graphics_controller,74133,2,2022-09-20 16:43:25+00:00,[],https://api.github.com/licenses/apache-2.0
62,https://github.com/ahmed-elhoseiny/a-Pipelined-32-bit-MIPS-processor-based-on-Harvard-Architecture.-.git,2022-09-04 11:41:14+00:00,A Pipelined 32-bit microarchitecture MIPS processor based on Harvard Architecture with hazard handling both data and control hazards.,0,ahmed-elhoseiny/a-Pipelined-32-bit-MIPS-processor-based-on-Harvard-Architecture.-,532522666,Verilog,a-Pipelined-32-bit-MIPS-processor-based-on-Harvard-Architecture.-,20244,2,2023-05-09 07:49:14+00:00,[],None
63,https://github.com/seanpm2001/MetroTechno_TrafficLight.git,2022-09-07 20:39:46+00:00,The Traffic Light control system for the MetroTechno systems set.,1,seanpm2001/MetroTechno_TrafficLight,533934544,Verilog,MetroTechno_TrafficLight,1614,2,2022-11-21 23:32:31+00:00,"['c', 'embedded', 'embedded-systems', 'gpl3', 'gplv3', 'infrastructure', 'md', 'metro-techno', 'metrotechno', 'traffic', 'traffic-lights', 'trafficlight', 'txt', 'verilog', 'metrotechno-trafficlight']",https://api.github.com/licenses/gpl-3.0
64,https://github.com/VLSIDA/openram_testchip2.git,2022-09-06 18:33:11+00:00,,0,VLSIDA/openram_testchip2,533455416,Verilog,openram_testchip2,785483,2,2024-03-27 05:03:47+00:00,[],https://api.github.com/licenses/apache-2.0
65,https://github.com/pkumar4197/Flaoting-pt.-square-root.git,2022-09-13 19:37:45+00:00,Implementation of 32 bit floating point square root using verilog,0,pkumar4197/Flaoting-pt.-square-root,536282511,Verilog,Flaoting-pt.-square-root,478,2,2023-04-12 07:02:05+00:00,[],https://api.github.com/licenses/gpl-3.0
66,https://github.com/WN373/buaa-co-2022.git,2022-09-08 13:22:38+00:00,BUAA 计算机组成 2022,0,WN373/buaa-co-2022,534222525,Verilog,buaa-co-2022,29155,2,2023-12-08 17:56:23+00:00,[],https://api.github.com/licenses/mit
67,https://github.com/stamcenter/Trireme_Platform.git,2022-09-04 00:53:28+00:00,,0,stamcenter/Trireme_Platform,532406784,Verilog,Trireme_Platform,3658,2,2023-07-14 19:12:51+00:00,[],https://api.github.com/licenses/mit
68,https://github.com/revaldinho/sys6809.git,2022-09-01 20:08:05+00:00,This is a small backplane based M6809/HD6809 system reusing many of the boards originally created for the Amstrad CPC computer.,0,revaldinho/sys6809,531670442,Verilog,sys6809,220,2,2023-10-27 07:02:31+00:00,[],https://api.github.com/licenses/gpl-3.0
69,https://github.com/Swarupadhyay/Motion-Estimation-using-Phase-Correlation.git,2022-09-09 19:31:04+00:00,,0,Swarupadhyay/Motion-Estimation-using-Phase-Correlation,534779882,Verilog,Motion-Estimation-using-Phase-Correlation,17,2,2022-09-30 14:54:50+00:00,[],None
70,https://github.com/PrincetonUniversity/opensip.git,2022-09-12 12:26:47+00:00,,0,PrincetonUniversity/opensip,535655320,Verilog,opensip,169,2,2022-09-13 02:14:21+00:00,[],None
71,https://github.com/ChairImpSec/Low_Random_Second_Order_AES.git,2022-09-05 13:25:42+00:00,Designs of second-order SCA-secure hardware implementations of AES,0,ChairImpSec/Low_Random_Second_Order_AES,532912134,Verilog,Low_Random_Second_Order_AES,33,2,2023-09-25 09:02:21+00:00,[],
72,https://github.com/Luckman21/verilog-car-dashboard.git,2022-09-01 19:56:24+00:00,"The goal of this project was to design a car dashboard interface that allows us to spin a car tire.  The dashboard would have all of the basic functions of a car dashboard, allowing the user to test the car tire in different situations.  Taking my design and applying it to a real world application, companies could use my car dashboard to test different tire and rim combinations to see which set gives them the best performance.  They could also add weather and road conditions in testing, since the dashboard simulates one car tire.  This style of testing is a lot cheaper and would save companies money.  Rather than testing entire vehicles for road performance, some tests can be isolated to the singular tire test.",0,Luckman21/verilog-car-dashboard,531667175,Verilog,verilog-car-dashboard,10,1,2022-09-03 04:03:05+00:00,[],None
73,https://github.com/ireneann713/VSDBABYSoC_ICC2.git,2022-09-09 08:40:40+00:00,,0,ireneann713/VSDBABYSoC_ICC2,534565259,Verilog,VSDBABYSoC_ICC2,526,1,2022-10-15 14:28:12+00:00,[],None
74,https://github.com/FaithGriffin/CSARCH1_HDLProject3.git,2022-09-04 09:04:26+00:00,Verilog structural model HDL program,0,FaithGriffin/CSARCH1_HDLProject3,532488371,Verilog,CSARCH1_HDLProject3,112,1,2023-03-25 16:23:08+00:00,"['hardware-description-language', 'hdl', 'verilog', 'verilog-hdl', 'verilog-project']",None
75,https://github.com/chithambaramoorthii/RRAM_IMC.git,2022-09-12 11:13:11+00:00,,0,chithambaramoorthii/RRAM_IMC,535630249,Verilog,RRAM_IMC,79691,1,2022-09-18 15:37:33+00:00,[],https://api.github.com/licenses/apache-2.0
76,https://github.com/prashantt001/FULL-ADDER.git,2022-09-15 17:51:18+00:00,FULL ADDER USING INTEL QUARTUS PRIME AND MODELSIM ALTERA,0,prashantt001/FULL-ADDER,537144725,Verilog,FULL-ADDER,4,1,2022-09-15 17:59:00+00:00,[],None
77,https://github.com/eajayreddy/LMS-Adaptive-Filter.git,2022-09-15 17:14:23+00:00,Design of LMS adaptive filter without using direct multiplications and updating the filter coeffiicients based on the inputs,0,eajayreddy/LMS-Adaptive-Filter,537130790,Verilog,LMS-Adaptive-Filter,16,1,2022-12-03 07:32:30+00:00,[],https://api.github.com/licenses/gpl-3.0
78,https://github.com/hyoretsu/circuitos-logicos.git,2022-09-02 17:10:12+00:00,"Repositório da cadeira de Circuitos Lógicos da UFPB, lecionada por Jose Antonio Gomes de Lima.",0,hyoretsu/circuitos-logicos,532013983,Verilog,circuitos-logicos,21,1,2022-12-14 15:44:22+00:00,[],None
79,https://github.com/amrkhalid-star902/I2C_PROTOCOL.git,2022-09-04 09:04:55+00:00,,0,amrkhalid-star902/I2C_PROTOCOL,532488466,Verilog,I2C_PROTOCOL,1,1,2024-01-29 12:23:52+00:00,[],None
80,https://github.com/scxppppppp/EE533.git,2022-09-06 06:13:30+00:00,,0,scxppppppp/EE533,533185960,Verilog,EE533,7420,1,2024-01-11 08:02:26+00:00,[],None
81,https://github.com/IvanXiang/FPGA_SPI_FLASH.git,2022-09-14 08:13:48+00:00,,0,IvanXiang/FPGA_SPI_FLASH,536477850,Verilog,FPGA_SPI_FLASH,18,1,2024-03-23 16:26:17+00:00,[],None
82,https://github.com/BarsMonster/MicroAsicV.git,2022-09-01 19:40:56+00:00,Tiny tapeout on Verilog,1,BarsMonster/MicroAsicV,531662693,Verilog,MicroAsicV,39,1,2023-04-01 06:37:00+00:00,[],https://api.github.com/licenses/apache-2.0
83,https://github.com/AkhilDotG/Floating-Point-Adder.git,2022-09-17 08:10:36+00:00,4 stage - Half Precision Floating point adder,0,AkhilDotG/Floating-Point-Adder,537741895,Verilog,Floating-Point-Adder,94,1,2022-09-17 08:46:44+00:00,[],None
84,https://github.com/wpi-ece574-f22/ho-gcd.git,2022-08-31 01:04:51+00:00,,1,wpi-ece574-f22/ho-gcd,530887620,Verilog,ho-gcd,3,1,2023-09-14 00:09:13+00:00,[],None
85,https://github.com/shalan/mpc.git,2022-09-05 17:22:07+00:00,Multi-Project Support for Caravel,3,shalan/mpc,532995239,Verilog,mpc,453873,1,2023-06-12 13:20:45+00:00,[],https://api.github.com/licenses/apache-2.0
86,https://github.com/samuelmuniz/verilog_Machine_State.git,2022-09-15 19:58:43+00:00,"Machine state discribed in Verilog to search the ""1011"" in a input signal",0,samuelmuniz/verilog_Machine_State,537187042,Verilog,verilog_Machine_State,0,1,2022-11-02 06:24:23+00:00,[],None
87,https://github.com/kareemelsaed/Low-Power-Configurable-Multi-Clock-Digital-System.git,2022-09-01 21:08:06+00:00,,0,kareemelsaed/Low-Power-Configurable-Multi-Clock-Digital-System,531686590,Verilog,Low-Power-Configurable-Multi-Clock-Digital-System,37489,1,2023-02-11 21:56:05+00:00,[],None
88,https://github.com/Soumya2754/Modified-booth-algorithm.git,2022-08-31 13:02:20+00:00,,0,Soumya2754/Modified-booth-algorithm,531086926,Verilog,Modified-booth-algorithm,5,1,2022-09-08 05:02:30+00:00,[],None
89,https://github.com/mahmoudkira/Pipelined_MIPS_Processor.git,2022-09-13 17:01:58+00:00,,0,mahmoudkira/Pipelined_MIPS_Processor,536227226,Verilog,Pipelined_MIPS_Processor,405,1,2022-09-13 19:51:55+00:00,[],None
90,https://github.com/ieee1076/P8X32A.git,2022-09-11 09:33:26+00:00,"P8X32A Emulation on DE2-115, DE0-Nano and BeMicroCV",1,ieee1076/P8X32A,535250079,Verilog,P8X32A,4195,1,2024-03-20 06:13:13+00:00,"['32bit', 'bemicro-cv', 'de0-nano', 'de2-115', 'p8x32a', 'parallax', 'softcore', 'verilog']",None
91,https://github.com/huangjintaoa/huangjintaoa.git,2022-09-02 11:10:58+00:00,Config files for my GitHub profile.,0,huangjintaoa/huangjintaoa,531892919,Verilog,huangjintaoa,69,1,2024-03-30 12:51:01+00:00,"['config', 'github-config']",None
92,https://github.com/nguyendao-uom/FABulous_eFPGA_wb.git,2022-09-09 13:35:58+00:00,FABulous eFPGA with wishbone interface (gg-mpw7-2022),1,nguyendao-uom/FABulous_eFPGA_wb,534656999,Verilog,FABulous_eFPGA_wb,113755,1,2023-06-28 13:55:28+00:00,[],https://api.github.com/licenses/apache-2.0
93,https://github.com/elecclubiitg/FruitNinja.git,2022-08-31 15:04:13+00:00,"This is the official repository of Fruit Ninja project of Electronics Club IITG for the autumn sem 2022. Implementation of fruit ninja game, completely on reprogrammable chip called FPGA",5,elecclubiitg/FruitNinja,531135537,Verilog,FruitNinja,9374,1,2023-07-11 11:26:29+00:00,[],None
94,https://github.com/JamesYuuu/ucas-calab-2022.git,2022-09-07 10:06:17+00:00,,1,JamesYuuu/ucas-calab-2022,533708910,Verilog,ucas-calab-2022,222,1,2023-09-19 17:42:02+00:00,[],None
95,https://github.com/amrith-am/FPGA-LAB-Practicals.git,2022-09-07 13:52:51+00:00,This repository contain multiple projects based on fpga programming and simulation,0,amrith-am/FPGA-LAB-Practicals,533788011,Verilog,FPGA-LAB-Practicals,7195,1,2023-05-01 02:56:16+00:00,[],None
96,https://github.com/prashantt001/MULTIPLIER_2BIT.git,2022-09-15 18:00:16+00:00,MULTIPLIER_2BIT USING INTEL QUARTUS PRIME AND MODELSIM ALTERA,0,prashantt001/MULTIPLIER_2BIT,537148021,Verilog,MULTIPLIER_2BIT,6,1,2022-09-15 18:11:41+00:00,[],None
97,https://github.com/peterwu-1031/de2-115-fpga.git,2022-09-03 15:00:47+00:00,Digital circuit design on the Altera DE2-115 FPGA,0,peterwu-1031/de2-115-fpga,532292022,Verilog,de2-115-fpga,11877,1,2023-11-30 07:53:39+00:00,[],None
98,https://github.com/winsight/Introduction-to-Computer-Architecture-Exercises-UCAS.git,2022-09-07 14:48:44+00:00,计算机体系结构 2020秋季 UCAS 《计算机体系结构基础》第 2 版课后习题,0,winsight/Introduction-to-Computer-Architecture-Exercises-UCAS,533810854,Verilog,Introduction-to-Computer-Architecture-Exercises-UCAS,2252,1,2023-09-21 11:29:58+00:00,[],None
99,https://github.com/Elon-J/OpenFASOC_NIST_MPW7.git,2022-09-06 20:49:59+00:00,,3,Elon-J/OpenFASOC_NIST_MPW7,533497965,Verilog,OpenFASOC_NIST_MPW7,92438,1,2022-09-12 09:16:32+00:00,[],https://api.github.com/licenses/apache-2.0
100,https://github.com/RayCorleone/MipsCPU54.git,2022-09-10 14:34:33+00:00,TJ 计算机组成原理课程设计: 54条指令CPU,0,RayCorleone/MipsCPU54,535024003,Verilog,MipsCPU54,14291,1,2023-05-10 05:59:19+00:00,[],https://api.github.com/licenses/mit
101,https://github.com/amrkhalid-star902/LCD_Interface_with_FPGA.git,2022-08-31 07:11:33+00:00,,0,amrkhalid-star902/LCD_Interface_with_FPGA,530972982,Verilog,LCD_Interface_with_FPGA,0,1,2024-01-29 12:23:49+00:00,[],None
102,https://github.com/filippocarastro/SigmaDelta_ADC.git,2022-09-15 16:17:35+00:00,Sigma delta ADC implemented in caravel SoC.,0,filippocarastro/SigmaDelta_ADC,537109383,Verilog,SigmaDelta_ADC,84581,1,2024-01-12 18:38:00+00:00,[],https://api.github.com/licenses/apache-2.0
103,https://github.com/IvanXiang/FPGA_COMS_DDR3_HDMI.git,2022-09-14 08:30:39+00:00,,0,IvanXiang/FPGA_COMS_DDR3_HDMI,536484013,Verilog,FPGA_COMS_DDR3_HDMI,22732,1,2023-05-27 20:41:17+00:00,[],None
104,https://github.com/nella17/NYCU-DCLab-2022.git,2022-09-17 10:45:36+00:00,,0,nella17/NYCU-DCLab-2022,537777468,Verilog,NYCU-DCLab-2022,317,1,2023-03-10 09:27:11+00:00,[],None
105,https://github.com/kisek/rvcore_chip1.git,2022-08-31 09:17:09+00:00,,0,kisek/rvcore_chip1,531012469,Verilog,rvcore_chip1,16251,1,2023-12-09 04:53:24+00:00,[],https://api.github.com/licenses/apache-2.0
106,https://github.com/smsraj2001/RING-AND-JOHNSONS-COUNTER.git,2022-09-06 11:06:33+00:00,An iverilog program displaying the working of RING and JOHNSONS counter with the Timing diagram in GTK wave.,0,smsraj2001/RING-AND-JOHNSONS-COUNTER,533285966,Verilog,RING-AND-JOHNSONS-COUNTER,9,1,2023-03-25 16:38:56+00:00,"['gtkwave', 'gui', 'iverilog']",None
107,https://github.com/mfkiwl/8_bit_processor.git,2022-09-03 08:50:08+00:00,this repository gives an overview and step by step description on how to make an 8 bit processor using verilog HDL on an FPGA.,0,mfkiwl/8_bit_processor,532205701,,8_bit_processor,38,1,2023-04-17 22:45:56+00:00,[],None
108,https://github.com/RayCorleone/MusicLooper.git,2022-09-10 14:19:31+00:00,TJ 数字逻辑实验: 循环混音器,0,RayCorleone/MusicLooper,535019951,Verilog,MusicLooper,14753,1,2023-12-06 12:35:28+00:00,[],https://api.github.com/licenses/mit
109,https://github.com/juanma-gil/FPGA-ALU.git,2022-09-04 18:59:31+00:00,Una ALU implementada sobre una FPGA (BASYS 3),0,juanma-gil/FPGA-ALU,532630919,Verilog,FPGA-ALU,2800,1,2022-09-14 02:41:19+00:00,[],None
110,https://github.com/ronaldo26rodrigues/verilog-MIPS.git,2022-09-15 01:11:30+00:00,Processador MIPS implementado em verilog,1,ronaldo26rodrigues/verilog-MIPS,536815502,Verilog,verilog-MIPS,4663,1,2022-09-18 20:28:52+00:00,[],None
111,https://github.com/OmarAlshatti/pipeline-mips-verilog.git,2022-09-16 23:25:57+00:00,,0,OmarAlshatti/pipeline-mips-verilog,537646950,Verilog,pipeline-mips-verilog,14,1,2022-09-16 23:53:00+00:00,[],None
112,https://github.com/YoniP31/Microcontroller-verilog.git,2022-09-01 07:57:35+00:00,This is a three step microcontroller,0,YoniP31/Microcontroller-verilog,531419764,Verilog,Microcontroller-verilog,428,1,2022-09-01 08:18:29+00:00,[],None
113,https://github.com/OmarAlshatti/MulticycleProcessor-Verilog.git,2022-09-16 23:03:48+00:00,A multicycle processor with MIPS instruction set architecture simulated in Verilog,0,OmarAlshatti/MulticycleProcessor-Verilog,537643262,Verilog,MulticycleProcessor-Verilog,9,1,2022-09-17 00:26:36+00:00,[],None
114,https://github.com/TDT4295AForEffort/fpga.git,2022-09-16 13:52:49+00:00,main repo for fpga!,0,TDT4295AForEffort/fpga,537479063,Verilog,fpga,37251,1,2022-11-26 01:59:54+00:00,[],None
115,https://github.com/XiaogegeChen/sha256.git,2022-09-14 08:10:19+00:00,Block Hashing Algorithm (Verilog Implementation).,0,XiaogegeChen/sha256,536476657,Verilog,sha256,269,1,2023-01-16 08:10:18+00:00,[],None
116,https://github.com/MiSTer-devel/Arcade-Galivan_MiSTer.git,2022-08-31 10:50:40+00:00,,4,MiSTer-devel/Arcade-Galivan_MiSTer,531041697,Verilog,Arcade-Galivan_MiSTer,7034,1,2023-11-20 20:18:17+00:00,[],https://api.github.com/licenses/gpl-2.0
117,https://github.com/AhsanAliUet/duty-cycle-and-frequency-controlled-signal-using-verilog.git,2022-09-15 01:04:56+00:00,We will make a signal in Verilog which will be a variable duty cycle as well as variable frequency signal which is named as pulse. We can refer this signal pulse as a square wave also with variable duty cycle. ,0,AhsanAliUet/duty-cycle-and-frequency-controlled-signal-using-verilog,536814005,Verilog,duty-cycle-and-frequency-controlled-signal-using-verilog,36367,1,2024-03-14 01:44:26+00:00,[],None
118,https://github.com/nayanesh-reddy/2-Bit_Add_Mul_Comp.git,2022-08-31 17:12:41+00:00,,1,nayanesh-reddy/2-Bit_Add_Mul_Comp,531183436,Verilog,2-Bit_Add_Mul_Comp,15,1,2022-10-30 12:03:37+00:00,[],https://api.github.com/licenses/apache-2.0
119,https://github.com/s100projects/T35_GPIO_TEST.git,2022-08-31 17:43:56+00:00,S100Computers T35 FPGA Module GPIO Test Code,0,s100projects/T35_GPIO_TEST,531194570,Verilog,T35_GPIO_TEST,63,1,2023-01-03 22:19:52+00:00,[],None
120,https://github.com/ayaahmed20018414/32-bit-Single-Cycle-MIPS-Processor.git,2022-09-01 16:36:55+00:00,"In this project, I implement a 32-bit single-cycle microarchitecture MIPS processor based on Harvard Architect.  In other words instruction fetch, instruction decode, execute, write back, and program counter update occurs within a single clock cycle. I write the RTL Verilog files for all sub-modules of the MIPS processor (e.g. Register File, Instruction Memory, etc.). Then, implementing the top module of the MIPS processor. The single-cycle microarchitecture executes an entire instruction in one cycle.",0,ayaahmed20018414/32-bit-Single-Cycle-MIPS-Processor,531602859,Verilog,32-bit-Single-Cycle-MIPS-Processor,32,1,2022-09-05 18:35:37+00:00,[],None
121,https://github.com/maehw/wokwi-verilog-gds-lowspeed-tiny-uart.git,2022-09-01 21:02:55+00:00,300 baud 8N1 UART transmitter with limited character set (0x40..0x5F) loading as ASIC design,1,maehw/wokwi-verilog-gds-lowspeed-tiny-uart,531685253,Verilog,wokwi-verilog-gds-lowspeed-tiny-uart,142,1,2023-01-22 20:10:32+00:00,"['tinytapeout', 'uart', 'uart-interface', 'uart-protocol', 'uart-transmitter', 'uart-tx', 'asic-design', 'wokwi']",https://api.github.com/licenses/apache-2.0
122,https://github.com/amacgillivray/rv32_core.git,2022-09-05 01:00:12+00:00,"KU EECS 581 / 582 senior design project. This is project an attempt to study / explore CPU implementations, with an original goal of implementing the RISCV ""V"" extension. Code currently incomplete.",2,amacgillivray/rv32_core,532698451,Verilog,rv32_core,14316,1,2023-03-12 23:08:20+00:00,[],https://api.github.com/licenses/mit
123,https://github.com/piotro888/ppcpu_caravel.git,2022-09-13 06:52:08+00:00,ppcpu for openMPW,0,piotro888/ppcpu_caravel,535996319,Verilog,ppcpu_caravel,1394459,1,2023-11-16 13:16:37+00:00,[],https://api.github.com/licenses/apache-2.0
124,https://github.com/MongooseOrion/FPGA_atoms.git,2022-09-03 03:43:25+00:00,This repository is used to store transferable Verilog modules and IP core.,0,MongooseOrion/FPGA_atoms,532146962,Verilog,FPGA_atoms,771,1,2023-12-06 09:36:12+00:00,[],https://api.github.com/licenses/mit
125,https://github.com/cyril0124/i2c_slave.git,2022-09-10 06:39:10+00:00,,0,cyril0124/i2c_slave,534915037,Verilog,i2c_slave,15,1,2022-11-10 01:22:21+00:00,[],None
126,https://github.com/ThorKn/tinytapeout_pattern_player.git,2022-09-01 16:55:38+00:00,8x8 Bit Pattern Player: A mikrochip design for tapeout with SKY130 MPW via tinytapeouts.,1,ThorKn/tinytapeout_pattern_player,531609314,Verilog,tinytapeout_pattern_player,3025,1,2023-03-31 03:03:48+00:00,[],https://api.github.com/licenses/apache-2.0
127,https://github.com/Eng-Mahmoud2000/Mips_Processor_Single-Cycle-Design_Verilog.git,2022-09-04 12:22:11+00:00,,1,Eng-Mahmoud2000/Mips_Processor_Single-Cycle-Design_Verilog,532532431,Verilog,Mips_Processor_Single-Cycle-Design_Verilog,68,1,2022-09-04 20:12:25+00:00,[],None
128,https://github.com/weidingliu/Lite_dual-CPU.git,2022-09-17 14:41:26+00:00,顺序双发射CPU,0,weidingliu/Lite_dual-CPU,537836888,Verilog,Lite_dual-CPU,136357,1,2024-01-12 18:38:11+00:00,['cpu'],None
129,https://github.com/eymay/RV32I_Core.git,2022-09-16 13:27:29+00:00,,0,eymay/RV32I_Core,537469601,Verilog,RV32I_Core,162073,1,2023-05-26 20:33:55+00:00,[],None
130,https://github.com/yuzdoge/digital-circuit-lab-skeleton.git,2022-09-13 05:19:53+00:00,FSM Tiny CPU,2,yuzdoge/digital-circuit-lab-skeleton,535969908,Verilog,digital-circuit-lab-skeleton,18,1,2023-05-17 13:16:43+00:00,[],None
131,https://github.com/RayCorleone/MipsAPP.git,2022-09-10 17:12:57+00:00,TJ 计算机系统实验: 应用程序开发(石头剪刀布),0,RayCorleone/MipsAPP,535066023,Verilog,MipsAPP,54295,1,2023-06-21 12:30:38+00:00,[],https://api.github.com/licenses/mit
132,https://github.com/ThorKn/tinytapeout_shiftregister_challenge.git,2022-08-31 15:46:24+00:00,Shiftregister challenge: A mikrochip design for tapeout with SKY130 MPW via tinytapeouts.,1,ThorKn/tinytapeout_shiftregister_challenge,531151827,Verilog,tinytapeout_shiftregister_challenge,331,1,2023-01-14 14:37:25+00:00,[],https://api.github.com/licenses/apache-2.0
133,https://github.com/e-trees/fpga_virtio_devices.git,2022-09-07 05:54:21+00:00,,1,e-trees/fpga_virtio_devices,533626026,Verilog,fpga_virtio_devices,73,1,2023-01-24 05:28:48+00:00,[],None
134,https://github.com/rajarshiroy/tinytapout0_rajarshi.git,2022-09-01 18:19:49+00:00,snaking shiftreg for tinytapout,1,rajarshiroy/tinytapout0_rajarshi,531637514,Verilog,tinytapout0_rajarshi,15,1,2022-09-25 07:28:55+00:00,[],https://api.github.com/licenses/apache-2.0
135,https://github.com/pkumar4197/2-Folded-Architecture.git,2022-09-13 19:45:25+00:00,Implementation of 2 folded architecture of IIR filter using verilog.,0,pkumar4197/2-Folded-Architecture,536284861,Verilog,2-Folded-Architecture,486,1,2023-02-03 09:10:49+00:00,[],https://api.github.com/licenses/gpl-3.0
136,https://github.com/prashantt001/MULTIPLIER_3BIT.git,2022-09-15 18:06:51+00:00,3*3 BIT MULTIPLIER USING SINGLE BIT ADDERS USING INTEL QUARTUS PRIME AND MODELSIM ALTERA,0,prashantt001/MULTIPLIER_3BIT,537150516,Verilog,MULTIPLIER_3BIT,5,1,2022-09-15 18:13:21+00:00,[],None
137,https://github.com/caoqh/-fifo-.git,2022-09-07 07:37:58+00:00,该异步FIFO存储器可以被配置成一个能实现输出数据位宽是输入数据位宽的1/2或2倍的读写时钟独立的简单双口RAM，并且可以同时进行读写操作。,0,caoqh/-fifo-,533658428,Verilog,-fifo-,12,1,2023-11-25 05:52:38+00:00,[],None
138,https://github.com/tomek-szczesny/ice40_lib.git,2022-09-11 08:17:43+00:00,,1,tomek-szczesny/ice40_lib,535233085,Verilog,ice40_lib,98,1,2023-12-17 13:28:11+00:00,[],None
139,https://github.com/jix/tinytapeout_scan.git,2022-09-02 19:24:26+00:00,,1,jix/tinytapeout_scan,532053287,Verilog,tinytapeout_scan,86,1,2022-09-02 20:01:06+00:00,[],None
140,https://github.com/Mostafa-Hassanien/Advanced-Encryption-Standard-AES-.git,2022-09-11 17:59:56+00:00,,0,Mostafa-Hassanien/Advanced-Encryption-Standard-AES-,535381785,Verilog,Advanced-Encryption-Standard-AES-,32,1,2022-10-29 14:38:58+00:00,[],None
141,https://github.com/1mina1/MIPS_PIPELINED-verilog-hdl.git,2022-09-01 12:46:09+00:00,,0,1mina1/MIPS_PIPELINED-verilog-hdl,531515471,Verilog,MIPS_PIPELINED-verilog-hdl,21,1,2022-09-11 15:25:13+00:00,[],None
142,https://github.com/DouglasWWolf/aurora_axi_bridge.git,2022-09-09 23:25:19+00:00,Demonstration of AXI memory-mapped read/write transactions over a pair of AXI streams,0,DouglasWWolf/aurora_axi_bridge,534835351,Verilog,aurora_axi_bridge,1740,1,2023-12-12 00:44:14+00:00,[],None
143,https://github.com/roozbehghazavi/cad.git,2022-09-02 10:12:55+00:00,Computer-aided design course / Spring 2022 ,0,roozbehghazavi/cad,531876228,Verilog,cad,5560,1,2024-04-01 13:18:43+00:00,[],None
144,https://github.com/ccw1999/LZ77-Encoder-and-Decoder.git,2022-09-01 09:40:22+00:00,LZ77 is a lossless data compression algorithm.,0,ccw1999/LZ77-Encoder-and-Decoder,531453544,Verilog,LZ77-Encoder-and-Decoder,1,1,2022-10-17 18:07:08+00:00,[],None
145,https://github.com/Arthuring/BUAA-CO-2021.git,2022-09-01 03:13:44+00:00,北航6系2021计组课设,0,Arthuring/BUAA-CO-2021,531344987,Verilog,BUAA-CO-2021,37,1,2023-04-04 04:51:38+00:00,[],None
146,https://github.com/FaithGriffin/CSARCH1_HDLProject2.git,2022-09-04 09:26:30+00:00,Verilog structural model HDL program,0,FaithGriffin/CSARCH1_HDLProject2,532493193,Verilog,CSARCH1_HDLProject2,122,1,2023-03-25 16:24:15+00:00,"['hardware-description-language', 'hdl', 'verilog', 'verilog-hdl', 'verilog-project']",None
147,https://github.com/deanm1278/zynq_led_controller_hw.git,2022-09-15 19:03:50+00:00,,1,deanm1278/zynq_led_controller_hw,537169952,Verilog,zynq_led_controller_hw,156904,1,2023-07-29 12:59:16+00:00,[],None
148,https://github.com/OmarAlshatti/Single-Cycle-In-Verilog.git,2022-09-16 23:16:26+00:00,A single cycle processor simulated in Verilog using MIPS instruction set architecture.,0,OmarAlshatti/Single-Cycle-In-Verilog,537645413,Verilog,Single-Cycle-In-Verilog,7,1,2022-09-16 23:25:20+00:00,[],None
149,https://github.com/cornell-ece4750/ece4750-tut3-verilog.git,2022-08-31 04:58:11+00:00,ECE 4750 Tutorial 3: Verilog Hardware Description Language,82,cornell-ece4750/ece4750-tut3-verilog,530940598,Verilog,ece4750-tut3-verilog,36,1,2023-11-07 18:07:45+00:00,[],None
150,https://github.com/siriusm46/tinytapeout_calculator.git,2022-08-31 02:54:52+00:00,,0,siriusm46/tinytapeout_calculator,530914068,Verilog,tinytapeout_calculator,7,1,2024-03-01 07:42:48+00:00,[],https://api.github.com/licenses/apache-2.0
151,https://github.com/htfab/trainable-nn.git,2022-09-11 23:33:14+00:00,,0,htfab/trainable-nn,535452652,Verilog,trainable-nn,1946563,1,2022-12-01 02:52:36+00:00,[],https://api.github.com/licenses/mit
152,https://github.com/cornell-ece4750/ece4750-sec04-proc.git,2022-09-16 12:55:31+00:00,ECE 4750 Section 4: Lab 2 Head Start,3,cornell-ece4750/ece4750-sec04-proc,537457994,Verilog,ece4750-sec04-proc,450,1,2023-04-18 08:45:48+00:00,[],None
153,https://github.com/IsaacDanielngnr/Approximate-Full-Adders.git,2022-09-05 06:46:37+00:00,Parameterized versions of popular approximate adders designed with Verilog HDL or System Verilog.,1,IsaacDanielngnr/Approximate-Full-Adders,532776538,Verilog,Approximate-Full-Adders,12,1,2024-03-07 15:41:01+00:00,[],None
154,https://github.com/kenryu621/SP-22-CECS-341-Lab-3.git,2022-09-17 07:26:26+00:00,Lab 3 assignment from Spring 2022 CECS 341 Computer Architecture of CSULB,0,kenryu621/SP-22-CECS-341-Lab-3,537732231,Verilog,SP-22-CECS-341-Lab-3,1768,0,2022-09-17 10:13:50+00:00,[],None
155,https://github.com/mattvenn/tinytapeout-test-invert.git,2022-08-31 18:56:42+00:00,,0,mattvenn/tinytapeout-test-invert,531219196,Verilog,tinytapeout-test-invert,9,0,2022-08-31 18:56:48+00:00,[],https://api.github.com/licenses/apache-2.0
156,https://github.com/mguthaus/caravel_test_project.git,2022-08-31 18:27:24+00:00,,0,mguthaus/caravel_test_project,531209488,Verilog,caravel_test_project,2230,0,2022-08-31 18:27:40+00:00,[],https://api.github.com/licenses/apache-2.0
157,https://github.com/mattvenn/tinytapeout-marc.git,2022-08-31 13:20:50+00:00,,0,mattvenn/tinytapeout-marc,531094221,Verilog,tinytapeout-marc,12,0,2022-08-31 17:38:34+00:00,[],https://api.github.com/licenses/apache-2.0
158,https://github.com/kum-wh/FPGA-Digital-Design.git,2022-09-01 15:51:27+00:00,,0,kum-wh/FPGA-Digital-Design,531586710,Verilog,FPGA-Digital-Design,62,0,2022-09-05 17:26:34+00:00,[],None
159,https://github.com/wty5/sec02.git,2022-09-02 19:37:19+00:00,,0,wty5/sec02,532056782,Verilog,sec02,1024,0,2022-09-02 19:39:39+00:00,[],None
160,https://github.com/mattvenn/tinytapeout-all-zero.git,2022-09-02 18:34:23+00:00,,0,mattvenn/tinytapeout-all-zero,532039341,Verilog,tinytapeout-all-zero,9,0,2022-09-02 18:34:27+00:00,[],https://api.github.com/licenses/apache-2.0
161,https://github.com/bluelove8939/Systolic-Array.git,2022-09-03 12:27:37+00:00,Systolic Array Implementation,0,bluelove8939/Systolic-Array,532253518,Verilog,Systolic-Array,841,0,2022-09-03 12:28:32+00:00,[],None
162,https://github.com/DantuNandiniDevi/iiitb_freqdiv_caravel.git,2022-09-03 12:59:30+00:00,,0,DantuNandiniDevi/iiitb_freqdiv_caravel,532261093,Verilog,iiitb_freqdiv_caravel,6974,0,2022-09-03 12:59:42+00:00,[],https://api.github.com/licenses/apache-2.0
163,https://github.com/MiSTer-devel/Casio_PV-1000_MiSTer.git,2022-09-03 22:25:57+00:00,Casio PV-1000 Console core for the MiSTer,1,MiSTer-devel/Casio_PV-1000_MiSTer,532386986,Verilog,Casio_PV-1000_MiSTer,1843,0,2022-09-03 22:29:12+00:00,[],https://api.github.com/licenses/gpl-2.0
164,https://github.com/JK-hammer/distribution-asynchronous-two-port-SRAM.git,2022-09-04 04:24:28+00:00,distribution asynchronous two port SRAM,0,JK-hammer/distribution-asynchronous-two-port-SRAM,532437169,Verilog,distribution-asynchronous-two-port-SRAM,2,0,2022-09-04 04:28:12+00:00,[],None
165,https://github.com/Gogireddyravikiran/caravel_iiitb_sd_fsm.git,2022-09-08 09:43:52+00:00,,0,Gogireddyravikiran/caravel_iiitb_sd_fsm,534145991,Verilog,caravel_iiitb_sd_fsm,189006,0,2022-09-08 09:44:08+00:00,[],https://api.github.com/licenses/apache-2.0
166,https://github.com/antaeseong/ECE_exp2.git,2022-09-09 11:38:51+00:00,서울시립대학교 전자전기컴퓨터공학부 전전설2 과목,0,antaeseong/ECE_exp2,534618165,Verilog,ECE_exp2,46,0,2022-09-11 02:34:27+00:00,[],None
167,https://github.com/ZeyadZaki/spm_ip.git,2022-09-11 09:00:44+00:00,A template IP to be used by ipm,1,ZeyadZaki/spm_ip,535242416,Verilog,spm_ip,3091,0,2022-09-11 09:01:54+00:00,[],None
168,https://github.com/mohamedibrahem399/UVM-Primer-Projects-in-Verilog.git,2022-09-12 01:23:08+00:00,"There is some projects in UVM Primer reference, they are for learning UVM and Verification methodologies, So I made those projects but using Verilog and System Verilog ",0,mohamedibrahem399/UVM-Primer-Projects-in-Verilog,535472088,Verilog,UVM-Primer-Projects-in-Verilog,652,0,2022-12-04 05:54:36+00:00,[],None
169,https://github.com/eliaskountouris/simpleCPU.git,2022-09-14 13:47:07+00:00,,0,eliaskountouris/simpleCPU,536598794,Verilog,simpleCPU,1667,0,2022-09-16 22:36:50+00:00,[],None
170,https://github.com/tharunenamala/trial.git,2022-09-14 11:05:32+00:00,,0,tharunenamala/trial,536538404,Verilog,trial,26,0,2023-01-15 05:35:06+00:00,[],None
171,https://github.com/M-I-Dx/UCS614-Embedded-Systems-Design.git,2022-09-14 20:17:48+00:00,Lab work of the course: UCS614 Embedded Systems Design,0,M-I-Dx/UCS614-Embedded-Systems-Design,536745846,Verilog,UCS614-Embedded-Systems-Design,6,0,2022-09-14 20:20:11+00:00,[],None
172,https://github.com/shubhrajit-santra/vga_game.git,2022-09-14 19:05:12+00:00,,0,shubhrajit-santra/vga_game,536723138,Verilog,vga_game,3783,0,2022-09-14 19:35:31+00:00,[],None
173,https://github.com/Devipriya1921/VSDBabySoC_ICC2.git,2022-09-15 07:37:17+00:00,,0,Devipriya1921/VSDBabySoC_ICC2,536915603,Verilog,VSDBabySoC_ICC2,10525,0,2022-09-15 09:10:32+00:00,[],https://api.github.com/licenses/apache-2.0
174,https://github.com/wpi-ece574-f22/ho-hgcd.git,2022-08-31 01:05:12+00:00,,0,wpi-ece574-f22/ho-hgcd,530887691,Verilog,ho-hgcd,2,0,2022-08-31 01:12:52+00:00,[],None
175,https://github.com/Axel-Fonseca/Microcontroladores.git,2022-09-07 06:41:28+00:00,,0,Axel-Fonseca/Microcontroladores,533639939,Verilog,Microcontroladores,23706,0,2022-09-12 06:47:25+00:00,[],None
176,https://github.com/mo2men3la2/Single-Cycle-MIPS-Processor.git,2022-09-16 13:00:41+00:00,"In this project, I have implemented a 32-bit single-cycle microarchitecture  MIPS processor based on Harvard Architecture. The single-cycle microarchitecture executes an  entire instruction in one cycle. In other words instruction fetch, instruction decode, execute,  write back, and program counter update occurs within a single clock cycle.",0,mo2men3la2/Single-Cycle-MIPS-Processor,537459827,Verilog,Single-Cycle-MIPS-Processor,67,0,2022-09-16 17:29:33+00:00,[],None
177,https://github.com/CRTejaswi/sp-bus.git,2022-09-13 11:09:41+00:00,,0,CRTejaswi/sp-bus,536086544,Verilog,sp-bus,4,0,2022-10-05 00:24:10+00:00,[],None
178,https://github.com/lukestock/ELEC5566M-Mini_Project-el17ls-main.git,2022-09-12 12:39:29+00:00,,0,lukestock/ELEC5566M-Mini_Project-el17ls-main,535660232,Verilog,ELEC5566M-Mini_Project-el17ls-main,500,0,2022-09-12 12:39:57+00:00,[],None
179,https://github.com/shreyanshgupta42/simon_3TI.git,2022-09-13 13:05:21+00:00,,1,shreyanshgupta42/simon_3TI,536130254,Verilog,simon_3TI,7,0,2022-09-13 13:11:06+00:00,[],None
180,https://github.com/arfanghani/ag.git,2022-09-13 18:08:49+00:00,,0,arfanghani/ag,536252741,Verilog,ag,7,0,2022-09-13 18:08:54+00:00,[],https://api.github.com/licenses/apache-2.0
181,https://github.com/AdamCassie/Classic-Snake-Game.git,2022-09-13 20:01:36+00:00,Classic Snake arcade game implemented on DE1-SOC FPGA board using Verilog,0,AdamCassie/Classic-Snake-Game,536290152,Verilog,Classic-Snake-Game,58,0,2022-09-13 20:02:21+00:00,[],None
182,https://github.com/akmsw/adc-tp1.git,2022-09-05 03:43:26+00:00,Basic ALU built in Verilog for FPGA.,0,akmsw/adc-tp1,532733016,Verilog,adc-tp1,12,0,2023-09-24 00:44:49+00:00,[],None
183,https://github.com/agarwal-kavya/iiitb_rc_caravel.git,2022-09-05 17:17:27+00:00,,0,agarwal-kavya/iiitb_rc_caravel,532993775,Verilog,iiitb_rc_caravel,2235,0,2022-09-05 17:17:43+00:00,[],https://api.github.com/licenses/apache-2.0
184,https://github.com/herbertnicolas/verilog-mips-cpu.git,2022-09-05 21:46:45+00:00,Implementação de um processador MIPS multi-ciclo em Verilog,0,herbertnicolas/verilog-mips-cpu,533069670,,verilog-mips-cpu,142,0,2022-12-03 01:25:27+00:00,[],None
185,https://github.com/aniketh-g/CompOrg.git,2022-09-05 10:00:08+00:00,,0,aniketh-g/CompOrg,532841891,Verilog,CompOrg,9139,0,2022-09-21 17:55:37+00:00,[],None
186,https://github.com/seungjoyea/Generic_FIR_Filter-generic-CPS-TAP-parallel.git,2022-08-31 06:20:53+00:00,,0,seungjoyea/Generic_FIR_Filter-generic-CPS-TAP-parallel,530958989,Verilog,Generic_FIR_Filter-generic-CPS-TAP-parallel,289,0,2022-09-05 07:58:17+00:00,[],None
187,https://github.com/ArslanNustian116/Timing-Characterization.git,2022-09-16 10:36:42+00:00,,0,ArslanNustian116/Timing-Characterization,537412653,Verilog,Timing-Characterization,273,0,2022-09-16 17:27:16+00:00,[],None
188,https://github.com/PauloDavi/single_cycle_processor_acc.git,2022-09-15 23:45:47+00:00,,0,PauloDavi/single_cycle_processor_acc,537241679,Verilog,single_cycle_processor_acc,7967,0,2022-10-06 00:29:27+00:00,[],None
189,https://github.com/ManiVenkat3/Uare.git,2022-09-15 17:25:26+00:00,,0,ManiVenkat3/Uare,537134854,Verilog,Uare,70,0,2022-09-15 17:28:49+00:00,[],None
190,https://github.com/yangdachui/handshake-pipline.git,2022-09-17 01:16:48+00:00,,0,yangdachui/handshake-pipline,537665038,Verilog,handshake-pipline,2,0,2022-09-17 01:18:09+00:00,[],None
191,https://github.com/beckjames/test_caravel_user_project.git,2022-09-02 16:35:40+00:00,,0,beckjames/test_caravel_user_project,532003191,Verilog,test_caravel_user_project,2229,0,2022-09-02 16:35:53+00:00,[],https://api.github.com/licenses/apache-2.0
192,https://github.com/ccw1999/Traffic-Light-System.git,2022-09-01 08:43:28+00:00," The  TLS circuit will receive Gin, Yin, Rin signals representing the duration time of green  light, yellow light and red light respectively, and output traffic light signal by Gout,  Yout, and Rout according to the state of the system. The specification and the main  functions of TLS circuit will be described in detail in the following section.",0,ccw1999/Traffic-Light-System,531434375,Verilog,Traffic-Light-System,1,0,2022-09-01 09:29:50+00:00,[],None
193,https://github.com/anhdv251196/Embedded.git,2022-09-05 07:08:00+00:00,,0,anhdv251196/Embedded,532783311,Verilog,Embedded,13670,0,2022-09-05 07:19:15+00:00,[],None
194,https://github.com/emreissever/ddApp-10.git,2022-09-02 13:02:28+00:00,Beti Elektronik - ddApp -10 FPGA Uygulamaları (Eğitim) Seti,2,emreissever/ddApp-10,531927921,Verilog,ddApp-10,1649,0,2023-08-09 18:07:40+00:00,[],None
195,https://github.com/Roy-Ayalon/Counter.git,2022-09-02 13:22:04+00:00,,0,Roy-Ayalon/Counter,531934488,Verilog,Counter,8,0,2022-09-02 13:27:56+00:00,[],None
196,https://github.com/punithnayak/digitalsystemlab.git,2022-09-07 05:17:52+00:00,,0,punithnayak/digitalsystemlab,533616386,Verilog,digitalsystemlab,2655,0,2022-09-07 05:18:49+00:00,[],None
197,https://github.com/basyooo20/Single-Cycle-MIPS.git,2022-09-04 16:19:42+00:00,,0,basyooo20/Single-Cycle-MIPS,532592456,Verilog,Single-Cycle-MIPS,360,0,2022-09-04 16:21:05+00:00,[],None
198,https://github.com/jeremybirch/tinytapeout.git,2022-09-16 18:30:45+00:00,,0,jeremybirch/tinytapeout,537576861,Verilog,tinytapeout,7,0,2022-09-16 18:30:50+00:00,[],https://api.github.com/licenses/apache-2.0
199,https://github.com/mattvenn/tinytapeout-test-straight.git,2022-08-31 18:51:37+00:00,,0,mattvenn/tinytapeout-test-straight,531217519,Verilog,tinytapeout-test-straight,10,0,2022-08-31 18:51:42+00:00,[],https://api.github.com/licenses/apache-2.0
200,https://github.com/JK-hammer/AD7888-ADC-driver.git,2022-09-04 04:28:43+00:00,AD7888 ADC driver,0,JK-hammer/AD7888-ADC-driver,532437899,Verilog,AD7888-ADC-driver,3,0,2022-09-04 04:28:57+00:00,[],None
201,https://github.com/YASHWANT98/Caravel_iiitb_r2_4bit_bm.git,2022-09-05 12:59:02+00:00,,0,YASHWANT98/Caravel_iiitb_r2_4bit_bm,532902163,Verilog,Caravel_iiitb_r2_4bit_bm,8368,0,2022-09-12 20:48:42+00:00,[],https://api.github.com/licenses/apache-2.0
202,https://github.com/WilliamKSIida/Testeee-para-p-blico.git,2022-09-10 20:01:05+00:00,Pratica,0,WilliamKSIida/Testeee-para-p-blico,535105808,Verilog,Testeee-para-p-blico,45,0,2022-09-10 20:13:24+00:00,[],None
203,https://github.com/aafmj/digital-logic-lab.git,2022-09-09 18:35:06+00:00,,0,aafmj/digital-logic-lab,534763279,Verilog,digital-logic-lab,157,0,2022-09-09 18:35:20+00:00,[],None
204,https://github.com/RWB02/ChipDesignTest.git,2022-09-09 13:24:34+00:00,This is a repo to test installation for later projects,0,RWB02/ChipDesignTest,534652807,Verilog,ChipDesignTest,2229,0,2022-09-09 13:24:50+00:00,[],https://api.github.com/licenses/apache-2.0
205,https://github.com/JinchengHeRyan/ECE_550_Computer_Systems_Intro.git,2022-09-09 21:50:33+00:00,,0,JinchengHeRyan/ECE_550_Computer_Systems_Intro,534816247,Verilog,ECE_550_Computer_Systems_Intro,987,0,2023-01-31 05:44:37+00:00,[],None
206,https://github.com/cheblankenshipUTD/digital_logic_1.git,2022-09-09 17:17:22+00:00,CS 4341 Group Project,1,cheblankenshipUTD/digital_logic_1,534737813,Verilog,digital_logic_1,405,0,2022-12-03 23:44:46+00:00,['verilog'],None
207,https://github.com/vishagithub/caravel_user_project-.git,2022-09-10 11:30:43+00:00,,0,vishagithub/caravel_user_project-,534977860,Verilog,caravel_user_project-,2230,0,2022-09-10 11:30:58+00:00,[],https://api.github.com/licenses/apache-2.0
208,https://github.com/t-sasatani/caraval_test_project.git,2022-09-12 00:27:48+00:00,,0,t-sasatani/caraval_test_project,535461922,Verilog,caraval_test_project,2230,0,2022-09-12 00:28:02+00:00,[],https://api.github.com/licenses/apache-2.0
209,https://github.com/robinyangyanfeng/cdma.git,2022-09-12 01:23:57+00:00,,0,robinyangyanfeng/cdma,535472237,Verilog,cdma,905,0,2023-02-06 12:15:40+00:00,[],https://api.github.com/licenses/gpl-3.0
210,https://github.com/lcwd1119/computer-system-design.git,2022-09-12 03:38:24+00:00,計算機系統設計lab,0,lcwd1119/computer-system-design,535499986,Verilog,computer-system-design,25315,0,2022-09-12 03:39:42+00:00,[],None
211,https://github.com/AdamCassie/Xilinx-Take-Home-Assignment.git,2022-09-13 20:15:35+00:00,Take Home Assignment completed for Xilinx in April 2021,0,AdamCassie/Xilinx-Take-Home-Assignment,536294414,Verilog,Xilinx-Take-Home-Assignment,90,0,2022-09-13 20:16:21+00:00,[],None
212,https://github.com/sdacosta13/COMP12111_p11469sd.git,2022-09-13 14:11:46+00:00,,1,sdacosta13/COMP12111_p11469sd,536158182,Verilog,COMP12111_p11469sd,837,0,2022-09-13 14:12:53+00:00,[],None
213,https://github.com/Janavind/MPW_7_Updated.git,2022-09-13 14:14:00+00:00,,0,Janavind/MPW_7_Updated,536159225,Verilog,MPW_7_Updated,2230,0,2022-09-13 14:14:13+00:00,[],https://api.github.com/licenses/apache-2.0
214,https://github.com/pint4520/basic.git,2022-09-07 04:34:02+00:00,""" codes for basic verilog""",0,pint4520/basic,533605678,Verilog,basic,0,0,2022-09-07 04:39:53+00:00,[],None
215,https://github.com/Einthan/FPGA-Information-Processing.git,2022-09-06 18:59:02+00:00,,0,Einthan/FPGA-Information-Processing,533464191,Verilog,FPGA-Information-Processing,3849,0,2022-09-06 19:14:43+00:00,[],None
216,https://github.com/johs2969/ECE_exp1.git,2022-09-07 04:55:13+00:00,서울시립대학교 전자전기컴퓨터공학부 전전설2 과목,0,johs2969/ECE_exp1,533610683,Verilog,ECE_exp1,7,0,2022-09-07 05:31:45+00:00,[],None
217,https://github.com/GeorgieYan/UART_RT.git,2022-09-08 03:20:53+00:00,,0,GeorgieYan/UART_RT,534033549,Verilog,UART_RT,14,0,2022-09-28 06:55:17+00:00,[],None
218,https://github.com/aimehta/otainfo_user_project.git,2022-09-08 02:18:21+00:00,,1,aimehta/otainfo_user_project,534017403,Verilog,otainfo_user_project,24561,0,2022-09-08 02:18:37+00:00,[],https://api.github.com/licenses/apache-2.0
219,https://github.com/superboy999/HSEM.git,2022-09-09 07:16:59+00:00,"Hardware semaphore for dual core communication, the whole architecture is designed by Ti's databook.  ",0,superboy999/HSEM,534539742,Verilog,HSEM,512,0,2023-02-01 13:06:12+00:00,[],None
220,https://github.com/AttackYeti/SuperDuperFastComputer.git,2022-09-08 07:54:01+00:00,This repo hosts design files related to the development of a custom purpose-built CPU and supporting architecture.,0,AttackYeti/SuperDuperFastComputer,534108109,Verilog,SuperDuperFastComputer,17,0,2022-09-08 08:01:06+00:00,[],https://api.github.com/licenses/gpl-3.0
221,https://github.com/mateenfaisal/Mytest.git,2022-09-08 20:05:07+00:00,,0,mateenfaisal/Mytest,534375605,Verilog,Mytest,0,0,2022-09-09 18:14:32+00:00,[],None
222,https://github.com/skyp0714/HDLBits.git,2022-09-10 17:35:09+00:00,Solutions for HDLBits ,0,skyp0714/HDLBits,535071467,Verilog,HDLBits,5,0,2022-09-10 17:35:27+00:00,[],None
223,https://github.com/OlegMishin/A500-FastRAM-8Mb.git,2022-09-10 12:30:08+00:00,8MB FastRAM memory expansion for Amiga 500 ,0,OlegMishin/A500-FastRAM-8Mb,534991923,Verilog,A500-FastRAM-8Mb,940,0,2022-09-10 13:23:06+00:00,[],https://api.github.com/licenses/gpl-3.0
224,https://github.com/navyasri02/32-Bit-Floating-Point-Arithmetic-Logic-Unit.git,2022-09-10 05:17:02+00:00,,0,navyasri02/32-Bit-Floating-Point-Arithmetic-Logic-Unit,534899318,Verilog,32-Bit-Floating-Point-Arithmetic-Logic-Unit,19,0,2022-09-10 05:20:21+00:00,[],None
225,https://github.com/binoy01/design_ann.git,2022-09-13 08:25:04+00:00,,0,binoy01/design_ann,536028929,Verilog,design_ann,2230,0,2022-09-13 08:25:20+00:00,[],https://api.github.com/licenses/apache-2.0
226,https://github.com/ChiRuiChen/Face_detect_RTL_22913.git,2022-09-13 06:57:39+00:00,,0,ChiRuiChen/Face_detect_RTL_22913,535998170,Verilog,Face_detect_RTL_22913,473,0,2022-09-13 07:04:23+00:00,[],None
227,https://github.com/yashashjain/DVLSI_ASIC_Project.git,2022-09-15 17:05:40+00:00,,0,yashashjain/DVLSI_ASIC_Project,537127583,Verilog,DVLSI_ASIC_Project,5121,0,2022-09-15 17:13:24+00:00,[],None
228,https://github.com/sami154/Equivalence_Check_with_Synopsys_Formality.git,2022-09-14 03:48:33+00:00,,0,sami154/Equivalence_Check_with_Synopsys_Formality,536403507,Verilog,Equivalence_Check_with_Synopsys_Formality,2821,0,2024-03-27 07:31:22+00:00,[],None
229,https://github.com/Celao3-0/grupo-cessar.git,2022-09-14 23:11:01+00:00,,0,Celao3-0/grupo-cessar,536788863,Verilog,grupo-cessar,3339,0,2022-11-24 20:40:05+00:00,[],None
230,https://github.com/Abhinav-B-19/Caravel.git,2022-09-15 12:10:13+00:00,,0,Abhinav-B-19/Caravel,537009472,Verilog,Caravel,5551,0,2022-09-21 10:22:18+00:00,[],https://api.github.com/licenses/apache-2.0
231,https://github.com/prabaldutta/tinytapeout_adi.git,2022-09-01 13:32:42+00:00,,1,prabaldutta/tinytapeout_adi,531533542,Verilog,tinytapeout_adi,9,0,2022-09-01 13:32:46+00:00,[],https://api.github.com/licenses/apache-2.0
232,https://github.com/cpldcpu/TinyTapeout_TrainLED.git,2022-09-01 20:28:18+00:00,,1,cpldcpu/TinyTapeout_TrainLED,531676153,Verilog,TinyTapeout_TrainLED,20,0,2022-09-01 20:28:23+00:00,[],https://api.github.com/licenses/apache-2.0
233,https://github.com/mark64/tinytapeout.git,2022-08-31 09:49:21+00:00,Template repository for my loadswitch ASIC!,1,mark64/tinytapeout,531022619,Verilog,tinytapeout,14,0,2022-08-31 09:49:26+00:00,[],https://api.github.com/licenses/apache-2.0
234,https://github.com/regymm/tinytapeout-mcpi.git,2022-08-31 11:59:02+00:00,,1,regymm/tinytapeout-mcpi,531063930,Verilog,tinytapeout-mcpi,84,0,2022-08-31 16:19:26+00:00,[],https://api.github.com/licenses/apache-2.0
235,https://github.com/ad143142/university_project.git,2022-09-01 08:10:10+00:00,,0,ad143142/university_project,531423614,Verilog,university_project,464334,0,2023-08-06 06:00:06+00:00,[],None
236,https://github.com/pav-code/FPGA-Image-Decompressor.git,2022-09-03 02:26:27+00:00,Hardware decompressor of an .mic5 -> .bmp uncompressed format. Language: SystemVerilog ,0,pav-code/FPGA-Image-Decompressor,532133780,Verilog,FPGA-Image-Decompressor,14891,0,2022-09-03 02:33:07+00:00,[],https://api.github.com/licenses/gpl-3.0
237,https://github.com/wpi-ece574-f22/solve-ho-hgcd.git,2022-08-31 01:42:31+00:00,,0,wpi-ece574-f22/solve-ho-hgcd,530896420,Verilog,solve-ho-hgcd,3,0,2022-09-08 12:17:49+00:00,[],None
238,https://github.com/jeongjiseung/amba-bus-study.git,2022-09-04 14:22:42+00:00,for harman study,0,jeongjiseung/amba-bus-study,532562624,Verilog,amba-bus-study,2768,0,2022-09-04 14:47:35+00:00,[],None
239,https://github.com/kayoooooo/FOPL-Verilog.git,2022-09-03 20:29:05+00:00,,0,kayoooooo/FOPL-Verilog,532367227,Verilog,FOPL-Verilog,7,0,2022-09-03 20:34:26+00:00,[],None
240,https://github.com/thanavignesh/FSM.git,2022-09-04 05:33:47+00:00,,0,thanavignesh/FSM,532448006,Verilog,FSM,68,0,2022-09-04 05:37:42+00:00,[],None
241,https://github.com/KKMOfficial/logic_circuits_shiftAndAdd_Multiplier.git,2022-09-11 01:52:43+00:00,gate level description of a simple 8bit shift and add multiplier.,0,KKMOfficial/logic_circuits_shiftAndAdd_Multiplier,535164921,Verilog,logic_circuits_shiftAndAdd_Multiplier,138,0,2022-09-11 01:55:18+00:00,[],None
242,https://github.com/Qarqamel/sqrt_project.git,2022-09-12 11:29:06+00:00,,0,Qarqamel/sqrt_project,535635570,Verilog,sqrt_project,1,0,2022-09-12 11:33:32+00:00,[],None
243,https://github.com/lukestock/ELEC5566M-Unit3-el17ls-main.git,2022-09-12 12:34:25+00:00,,0,lukestock/ELEC5566M-Unit3-el17ls-main,535658311,Verilog,ELEC5566M-Unit3-el17ls-main,12,0,2022-09-12 12:35:17+00:00,[],None
244,https://github.com/mohammadsaadati80/ARM-Processor.git,2022-09-02 09:27:22+00:00,"Computer Architecture Laboratory Course Projects, University of Tehran",0,mohammadsaadati80/ARM-Processor,531862185,Verilog,ARM-Processor,1356,0,2022-09-02 09:29:07+00:00,[],None
245,https://github.com/skerr92/tinytapeout-4-bit-alu.git,2022-09-09 00:12:51+00:00,4 bit alu,0,skerr92/tinytapeout-4-bit-alu,534437969,Verilog,tinytapeout-4-bit-alu,8,0,2022-09-09 00:12:57+00:00,[],https://api.github.com/licenses/apache-2.0
246,https://github.com/GovardhanLR/CNN-ON-FPGA.git,2022-09-07 16:27:10+00:00,,0,GovardhanLR/CNN-ON-FPGA,533848440,Verilog,CNN-ON-FPGA,1494,0,2022-09-07 16:32:11+00:00,[],None
247,https://github.com/DouglasWWolf/sidewinder_msi.git,2022-09-07 06:57:53+00:00,Sidewinder PCIe reference design with MSI-based interrupt generation,0,DouglasWWolf/sidewinder_msi,533645226,Verilog,sidewinder_msi,887,0,2022-09-07 07:37:11+00:00,[],None
248,https://github.com/keshav12roy/MIPS32.git,2022-09-13 14:30:12+00:00,,0,keshav12roy/MIPS32,536166556,Verilog,MIPS32,6,0,2022-09-13 14:58:47+00:00,[],None
249,https://github.com/ma7moud80/Pipelined-MIPS-Processor.git,2022-09-13 17:03:43+00:00,,0,ma7moud80/Pipelined-MIPS-Processor,536227890,Verilog,Pipelined-MIPS-Processor,67,0,2022-09-13 17:08:37+00:00,[],None
250,https://github.com/Mohsinjabbar/Git.git,2022-09-13 07:34:40+00:00,Basics understanding of code,0,Mohsinjabbar/Git,536011196,Verilog,Git,2,0,2022-09-13 07:42:08+00:00,[],None
251,https://github.com/matsu0731/caravel_test.git,2022-09-12 00:21:27+00:00,,0,matsu0731/caravel_test,535460781,Verilog,caravel_test,2229,0,2022-09-12 00:21:42+00:00,[],https://api.github.com/licenses/apache-2.0
252,https://github.com/WaleedAly2006/delete.git,2022-09-12 10:10:27+00:00,,0,WaleedAly2006/delete,535609444,Verilog,delete,164,0,2022-09-12 10:12:53+00:00,[],None
253,https://github.com/Mohammed-afnan/BINARY2BCD.git,2022-09-11 14:41:07+00:00,It is an FPGA based project where I dumped the generated bit files from the RTL code of converting the binary to BCD,0,Mohammed-afnan/BINARY2BCD,535326791,Verilog,BINARY2BCD,4,0,2022-09-11 14:43:29+00:00,[],None
254,https://github.com/gandhisiripuram/16-BIT-SINGLE-CYCLE-MICROPROCESSOR.git,2022-09-14 17:50:17+00:00,,0,gandhisiripuram/16-BIT-SINGLE-CYCLE-MICROPROCESSOR,536697405,Verilog,16-BIT-SINGLE-CYCLE-MICROPROCESSOR,5,0,2022-09-14 17:56:54+00:00,[],None
255,https://github.com/msaligane/tinyopenfasoc.git,2022-09-06 13:46:40+00:00,,0,msaligane/tinyopenfasoc,533344637,Verilog,tinyopenfasoc,1408,0,2022-09-06 13:46:51+00:00,[],https://api.github.com/licenses/apache-2.0
256,https://github.com/jainsoumil2/caravel_reram_crossbar.git,2022-09-07 05:02:09+00:00,,1,jainsoumil2/caravel_reram_crossbar,533612436,Verilog,caravel_reram_crossbar,2235,0,2022-11-24 22:22:57+00:00,[],https://api.github.com/licenses/apache-2.0
257,https://github.com/ClaudioBarros/zepto-processor-v.git,2022-09-08 18:36:31+00:00,,0,ClaudioBarros/zepto-processor-v,534346543,Verilog,zepto-processor-v,40,0,2022-09-08 18:36:42+00:00,[],None
258,https://github.com/YejialiangTHU/comMod.git,2022-09-09 08:45:26+00:00,"include common circuits modules in Verikog, no simulation verified",0,YejialiangTHU/comMod,534566744,Verilog,comMod,2,0,2022-09-09 08:49:10+00:00,[],None
259,https://github.com/q550530/Verilog-train.git,2022-09-17 14:14:43+00:00,,0,q550530/Verilog-train,537829428,Verilog,Verilog-train,1725,0,2022-09-17 14:15:39+00:00,[],None
260,https://github.com/HayLahav/FPGA--I-O-interfaces-verilog--Vivado-.git,2022-09-17 18:13:36+00:00,implementation of  PS2 interface the design and test,0,HayLahav/FPGA--I-O-interfaces-verilog--Vivado-,537893333,Verilog,FPGA--I-O-interfaces-verilog--Vivado-,8256,0,2022-09-18 14:03:51+00:00,[],None
261,https://github.com/kenryu621/SP-22-CECS-341-Lab-5.git,2022-09-17 07:32:54+00:00,Lab 5 assignment from Spring 2022 CECS 341 Computer Architecture of CSULB,0,kenryu621/SP-22-CECS-341-Lab-5,537733760,Verilog,SP-22-CECS-341-Lab-5,9729,0,2022-09-17 10:19:14+00:00,[],None
262,https://github.com/BarbarosInak/Digital-System-Design-Labs.git,2022-09-01 12:23:10+00:00,"This repository shows the codes that I wrote for the DSD course's labs, which I have taken at IZTECH Electronics and Communication Engineering. The codes are written in Quartus II as VHDL files.",0,BarbarosInak/Digital-System-Design-Labs,531507260,Verilog,Digital-System-Design-Labs,28,0,2022-09-01 12:56:19+00:00,[],None
263,https://github.com/omarzalah/MIPS-single-cycle.git,2022-09-01 12:58:18+00:00,"Introduction In this project, you are required to implement a 32-bit single-cycle microarchitecture MIPS processor based on Harvard Architecture. The single-cycle microarchitecture executes an entire instruction in one cycle. In other words instruction fetch, instruction decode, execute, write back, and program counter update occurs within a single clock cycle",0,omarzalah/MIPS-single-cycle,531520136,Verilog,MIPS-single-cycle,75,0,2022-09-01 12:59:38+00:00,[],None
264,https://github.com/mehmetsakiraslan/Matrix-Multiplication.git,2022-09-03 11:36:11+00:00,,0,mehmetsakiraslan/Matrix-Multiplication,532241731,Verilog,Matrix-Multiplication,8,0,2022-09-03 11:37:58+00:00,[],None
265,https://github.com/MertBuyulu/Digital-Logic-Team-Project-FA-22.git,2022-09-02 20:16:21+00:00,A simple implementation of a calculator using 32-bit ALU ,0,MertBuyulu/Digital-Logic-Team-Project-FA-22,532066840,Verilog,Digital-Logic-Team-Project-FA-22,228,0,2023-02-07 18:05:13+00:00,[],None
266,https://github.com/Final-year-project-23-QCA/fyp_23_qca.git,2022-09-05 15:37:51+00:00,,1,Final-year-project-23-QCA/fyp_23_qca,532961595,Verilog,fyp_23_qca,34257,0,2022-09-05 15:49:06+00:00,[],None
267,https://github.com/aitesam961/16-Bit-Memory-TinyTapeout.git,2022-09-05 06:30:28+00:00,"16-Bit memory with 4-Bit address & 4-Bit Data Bus for TinyTapeout.com, @efabless Program",0,aitesam961/16-Bit-Memory-TinyTapeout,532771735,Verilog,16-Bit-Memory-TinyTapeout,14,0,2022-09-05 06:30:33+00:00,[],https://api.github.com/licenses/apache-2.0
268,https://github.com/KKMOfficial/logic_circuits_8bit_processor.git,2022-09-11 01:59:40+00:00,description of a simple 8bit processor.,0,KKMOfficial/logic_circuits_8bit_processor,535165955,Verilog,logic_circuits_8bit_processor,137,0,2022-09-11 02:01:08+00:00,[],None
269,https://github.com/Wren6991/Hazard1.git,2022-09-10 16:00:55+00:00,Minimal RV32I processor with register file in RAM,0,Wren6991/Hazard1,535047203,Verilog,Hazard1,11,0,2022-09-10 16:01:15+00:00,[],None
270,https://github.com/mun777/Single-Cycle-Processor.git,2022-09-08 06:19:02+00:00,Implementation of Single Cycle Processor In Verilog,0,mun777/Single-Cycle-Processor,534076984,Verilog,Single-Cycle-Processor,10921,0,2022-09-12 14:49:49+00:00,[],None
271,https://github.com/chithambaramoorthii/test_mpw7_digital.git,2022-09-08 19:43:20+00:00,,0,chithambaramoorthii/test_mpw7_digital,534368765,Verilog,test_mpw7_digital,8977,0,2022-09-08 19:43:33+00:00,[],https://api.github.com/licenses/apache-2.0
272,https://github.com/benturakash/alarmClockDesign.git,2022-09-10 03:36:32+00:00,,0,benturakash/alarmClockDesign,534880796,Verilog,alarmClockDesign,3,0,2022-09-10 03:37:25+00:00,[],None
273,https://github.com/ppeyso/fhi.git,2022-09-11 07:04:48+00:00,,0,ppeyso/fhi,535217678,Verilog,fhi,6,0,2022-09-11 07:04:52+00:00,[],https://api.github.com/licenses/apache-2.0
274,https://github.com/youngpines/r2rdac_tinytapeout_demo.git,2022-09-01 05:17:54+00:00,,1,youngpines/r2rdac_tinytapeout_demo,531373508,Verilog,r2rdac_tinytapeout_demo,7,0,2022-09-01 05:18:00+00:00,[],https://api.github.com/licenses/apache-2.0
275,https://github.com/supersat/infinite-tape.git,2022-08-31 06:29:13+00:00,,0,supersat/infinite-tape,530961278,Verilog,infinite-tape,6,0,2022-08-31 06:29:17+00:00,[],https://api.github.com/licenses/apache-2.0
276,https://github.com/anm/nyasic-wokwi.git,2022-08-31 15:06:16+00:00,A nya nya ASIC,0,anm/nyasic-wokwi,531136364,Verilog,nyasic-wokwi,7,0,2022-08-31 15:39:44+00:00,[],https://api.github.com/licenses/apache-2.0
277,https://github.com/harryxni/test.git,2022-09-01 22:29:04+00:00,,0,harryxni/test,531704763,Verilog,test,94,0,2022-09-01 22:29:11+00:00,[],https://api.github.com/licenses/apache-2.0
278,https://github.com/luiz-lvj/EEA25-lab.git,2022-09-01 16:59:23+00:00,Labs da Disciplina EEA25 do ITA,0,luiz-lvj/EEA25-lab,531610520,Verilog,EEA25-lab,4,0,2022-09-01 17:52:05+00:00,[],None
279,https://github.com/DuaneSand/primefact2.git,2022-09-01 19:09:50+00:00,"TinyTapeout example: Test odd input for primeness, output largest factor",0,DuaneSand/primefact2,531653188,Verilog,primefact2,7,0,2022-09-01 19:09:54+00:00,[],https://api.github.com/licenses/apache-2.0
280,https://github.com/sirejdua/6bit-cellular-automata-tinytapeout.git,2022-09-01 21:27:54+00:00,,1,sirejdua/6bit-cellular-automata-tinytapeout,531691619,Verilog,6bit-cellular-automata-tinytapeout,7,0,2022-09-01 21:27:59+00:00,[],https://api.github.com/licenses/apache-2.0
281,https://github.com/ffrsser/Intelligent-Computing-System.git,2022-09-01 11:54:28+00:00,,0,ffrsser/Intelligent-Computing-System,531497085,Verilog,Intelligent-Computing-System,2388,0,2022-09-01 12:41:15+00:00,[],None
282,https://github.com/ollyoid/tiny-tapeout.git,2022-09-16 17:55:52+00:00,,0,ollyoid/tiny-tapeout,537566163,Verilog,tiny-tapeout,10,0,2022-09-16 18:32:52+00:00,[],https://api.github.com/licenses/apache-2.0
283,https://github.com/DarshanDattaNaik/Capture_the_Bug_Hackathon.git,2022-09-14 12:13:03+00:00,,0,DarshanDattaNaik/Capture_the_Bug_Hackathon,536561740,Verilog,Capture_the_Bug_Hackathon,2789,0,2022-09-14 12:13:24+00:00,[],
284,https://github.com/Pradyumna1312/Verilog_Practice.git,2022-09-14 04:35:11+00:00,,0,Pradyumna1312/Verilog_Practice,536414240,Verilog,Verilog_Practice,42,0,2022-09-14 06:41:50+00:00,[],None
285,https://github.com/iuliairm5/FPGA_Stopwatch.git,2022-09-14 18:33:21+00:00,,0,iuliairm5/FPGA_Stopwatch,536712686,Verilog,FPGA_Stopwatch,12,0,2022-09-14 18:57:39+00:00,[],None
286,https://github.com/tabrown3/fake-psx.git,2022-09-05 01:31:19+00:00,,0,tabrown3/fake-psx,532704349,Verilog,fake-psx,235,0,2022-09-05 01:32:59+00:00,[],None
287,https://github.com/omar21hossam/MIPS.git,2022-09-05 20:05:27+00:00,32-bit single-cycle microarchitecture MIPS processor based on Harvard Architecture. The single-cycle microarchitecture executes an entire instruction in one cycle.,0,omar21hossam/MIPS,533044226,Verilog,MIPS,34,0,2022-09-05 20:06:45+00:00,[],None
288,https://github.com/lhn3149/EE-621-Design-of-Computer-System.git,2022-09-16 05:54:34+00:00,Labs and Homework for Design of Computer System (Fall 2022),0,lhn3149/EE-621-Design-of-Computer-System,537323781,Verilog,EE-621-Design-of-Computer-System,47285,0,2022-09-21 14:00:25+00:00,[],None
289,https://github.com/johs2969/ECE_exp3.git,2022-09-14 23:39:46+00:00,서울시립대학교 전자전기컴퓨터공학부 전전설2 과목,0,johs2969/ECE_exp3,536795087,Verilog,ECE_exp3,3,0,2022-09-15 12:24:03+00:00,[],None
290,https://github.com/BruhMadev/16-bit-microprocessor.git,2022-09-15 14:28:14+00:00,,0,BruhMadev/16-bit-microprocessor,537064674,Verilog,16-bit-microprocessor,6,0,2022-09-16 06:25:03+00:00,[],None
291,https://github.com/YousefSherif/LFSR.git,2022-09-15 01:14:33+00:00,A linear-feedback shift register is a shift register whose input bit is a linear function of its previous state.,0,YousefSherif/LFSR,536816225,Verilog,LFSR,5,0,2022-09-15 01:15:13+00:00,[],None
292,https://github.com/chen-rz/Multiple-cycle-MIPS-CPU.git,2022-09-15 09:44:05+00:00,"A simplified multiple-cycle MIPS CPU implemented by Verilog, can be simulated by Vivado.",0,chen-rz/Multiple-cycle-MIPS-CPU,536959884,Verilog,Multiple-cycle-MIPS-CPU,5756,0,2022-09-15 09:48:40+00:00,[],None
293,https://github.com/pranav-sirnapalli/3bit_up_down_counter.git,2022-09-16 08:25:41+00:00,,0,pranav-sirnapalli/3bit_up_down_counter,537370101,Verilog,3bit_up_down_counter,2,0,2022-09-16 08:28:47+00:00,[],None
294,https://github.com/sami154/Test_Coverage_with_SystemVerilog_Testbench.git,2022-09-14 03:23:59+00:00,,0,sami154/Test_Coverage_with_SystemVerilog_Testbench,536397669,Verilog,Test_Coverage_with_SystemVerilog_Testbench,13,0,2024-03-27 07:30:57+00:00,[],None
295,https://github.com/ParasVekariya/caravel_iiitb_sd.git,2022-09-12 18:25:03+00:00,,0,ParasVekariya/caravel_iiitb_sd,535798221,Verilog,caravel_iiitb_sd,2229,0,2022-09-12 18:25:16+00:00,[],https://api.github.com/licenses/apache-2.0
296,https://github.com/nstimpso/m3_lab.git,2022-09-13 21:42:51+00:00,,0,nstimpso/m3_lab,536317979,Verilog,m3_lab,51886,0,2022-09-13 21:58:48+00:00,[],https://api.github.com/licenses/apache-2.0
297,https://github.com/ECEahnbin/ECE_exp3.git,2022-09-13 02:23:41+00:00,서울시립대 전전설2,0,ECEahnbin/ECE_exp3,535926773,Verilog,ECE_exp3,4,0,2022-09-17 12:21:59+00:00,[],None
298,https://github.com/Mohamed5620/synchronizers.git,2022-09-14 10:19:24+00:00,,0,Mohamed5620/synchronizers,536523547,Verilog,synchronizers,3,0,2022-09-14 10:20:59+00:00,[],None
299,https://github.com/AiratNazmiev/DREC-fpga.git,2022-09-14 11:21:18+00:00,,0,AiratNazmiev/DREC-fpga,536543883,Verilog,DREC-fpga,160345,0,2022-12-08 22:49:38+00:00,[],None
300,https://github.com/BhavikJoshi/FPGuitarHero.git,2022-09-14 18:28:43+00:00,Guitar Hero Game on the Xilinx Nexys3 FPGA for UCLA CS M152A,0,BhavikJoshi/FPGuitarHero,536711060,Verilog,FPGuitarHero,5,0,2022-09-14 18:29:26+00:00,[],None
301,https://github.com/binoy01/chipignite.git,2022-09-16 14:09:51+00:00,,0,binoy01/chipignite,537485800,Verilog,chipignite,2233,0,2022-09-16 14:10:08+00:00,[],https://api.github.com/licenses/apache-2.0
302,https://github.com/Perumaltuty/Task-and-Function.git,2022-09-17 05:28:08+00:00,,0,Perumaltuty/Task-and-Function,537708323,Verilog,Task-and-Function,1,0,2022-09-17 05:33:51+00:00,[],None
303,https://github.com/shefketbylykbashi/16bit-CPU-Verilog.git,2022-09-02 10:28:54+00:00,,0,shefketbylykbashi/16bit-CPU-Verilog,531880655,Verilog,16bit-CPU-Verilog,327,0,2022-09-21 19:42:43+00:00,[],None
304,https://github.com/eusanchez/Digitales-II.git,2022-08-31 02:38:33+00:00,Aqui adjunto mis tareas de digitales II,0,eusanchez/Digitales-II,530910161,Verilog,Digitales-II,327,0,2023-08-07 22:21:04+00:00,[],None
305,https://github.com/jorden3502/eMemory_intern.git,2022-08-31 05:41:00+00:00,,0,jorden3502/eMemory_intern,530949386,Verilog,eMemory_intern,15,0,2022-08-31 07:18:22+00:00,[],None
306,https://github.com/FranciscoDias98/hw_alfa_pc.git,2022-09-05 10:25:24+00:00,,0,FranciscoDias98/hw_alfa_pc,532850100,Verilog,hw_alfa_pc,114,0,2022-09-05 12:32:02+00:00,[],None
307,https://github.com/Ahmed-nour1/Temsah-Diploma.git,2022-09-07 16:27:07+00:00,digital summer course assignments ,0,Ahmed-nour1/Temsah-Diploma,533848423,Verilog,Temsah-Diploma,309,0,2022-09-07 16:32:20+00:00,[],None
308,https://github.com/Adil8442/tiny_tapeout_test.git,2022-09-01 15:08:28+00:00,,1,Adil8442/tiny_tapeout_test,531571024,Verilog,tiny_tapeout_test,7,0,2022-09-01 15:08:34+00:00,[],https://api.github.com/licenses/apache-2.0
309,https://github.com/ParkDongho/BNA.git,2022-09-01 02:58:57+00:00,,0,ParkDongho/BNA,531341619,Verilog,BNA,130,0,2022-09-17 08:14:24+00:00,[],https://api.github.com/licenses/gpl-3.0
310,https://github.com/mazczc/FPGAProject.git,2022-09-01 10:05:41+00:00,,0,mazczc/FPGAProject,531462221,Verilog,FPGAProject,58,0,2022-09-01 10:09:33+00:00,[],None
311,https://github.com/vkvasan/My_Projects.git,2022-09-01 09:26:59+00:00,,0,vkvasan/My_Projects,531449111,Verilog,My_Projects,7853,0,2022-09-01 12:53:41+00:00,[],None
312,https://github.com/5hayanB/tinytapeout-bcd-counter.git,2022-08-31 16:49:55+00:00,A BCD Counter implemented with TinyTapeout,1,5hayanB/tinytapeout-bcd-counter,531175289,Verilog,tinytapeout-bcd-counter,13,0,2022-08-31 16:49:59+00:00,[],https://api.github.com/licenses/apache-2.0
313,https://github.com/cornell-ece4750/ece4750-sec03-pymtl.git,2022-09-09 13:45:44+00:00,ECE 4750 Section 3: RTL Testing with Python,3,cornell-ece4750/ece4750-sec03-pymtl,534660461,Verilog,ece4750-sec03-pymtl,1533,0,2022-09-09 13:48:58+00:00,[],None
314,https://github.com/YimingLi-Billy/SoCET-Formal-Verification-Tutorial.git,2022-09-15 20:50:30+00:00,,0,YimingLi-Billy/SoCET-Formal-Verification-Tutorial,537202185,Verilog,SoCET-Formal-Verification-Tutorial,3279,0,2022-09-15 20:51:34+00:00,[],None
315,https://github.com/V-19/verilog.git,2022-09-13 15:36:32+00:00,,0,V-19/verilog,536194498,Verilog,verilog,4070,0,2022-12-16 17:54:05+00:00,[],None
316,https://github.com/aitesam961/32-Bit-RAM-ASIC.git,2022-09-13 15:56:18+00:00,A 32-Bit storage size memory ASIC with 4-Bit address and 4-Bit Wide Data Bus.,0,aitesam961/32-Bit-RAM-ASIC,536202079,Verilog,32-Bit-RAM-ASIC,7,0,2022-09-13 15:56:23+00:00,[],https://api.github.com/licenses/apache-2.0
317,https://github.com/sanampudig/caravel_iiitb_pwm_gen.git,2022-09-08 09:44:05+00:00,,0,sanampudig/caravel_iiitb_pwm_gen,534146066,Verilog,caravel_iiitb_pwm_gen,191481,0,2022-09-08 09:44:22+00:00,[],https://api.github.com/licenses/apache-2.0
318,https://github.com/675658/8bitcpu.git,2022-09-16 02:03:03+00:00,,0,675658/8bitcpu,537271696,Verilog,8bitcpu,1511,0,2022-09-16 02:04:34+00:00,[],None
319,https://github.com/ppeyso/df_rom.git,2022-09-11 05:54:22+00:00,,0,ppeyso/df_rom,535204357,Verilog,df_rom,13,0,2022-09-11 05:54:26+00:00,[],https://api.github.com/licenses/apache-2.0
320,https://github.com/pleyria/DE2-115_TecladoPS2_LCD.git,2022-09-12 22:03:34+00:00,,0,pleyria/DE2-115_TecladoPS2_LCD,535866058,Verilog,DE2-115_TecladoPS2_LCD,97266,0,2022-11-06 13:16:02+00:00,[],None
321,https://github.com/kirkding1/caravel_kirk.git,2022-09-16 21:05:22+00:00,,0,kirkding1/caravel_kirk,537619610,Verilog,caravel_kirk,2229,0,2022-09-16 21:05:34+00:00,[],https://api.github.com/licenses/apache-2.0
322,https://github.com/CHARAN-27/RIGHT-SHIFT-REGISTER.git,2022-09-10 22:14:28+00:00,,0,CHARAN-27/RIGHT-SHIFT-REGISTER,535131415,Verilog,RIGHT-SHIFT-REGISTER,1,0,2022-09-10 22:15:06+00:00,[],None
323,https://github.com/VisaDlw/MPW.git,2022-09-09 02:11:28+00:00,,0,VisaDlw/MPW,534465609,Verilog,MPW,2230,0,2022-09-09 02:11:44+00:00,[],https://api.github.com/licenses/apache-2.0
324,https://github.com/TharunsaiBestha/Systolic-Array.git,2022-09-14 06:34:30+00:00,,0,TharunsaiBestha/Systolic-Array,536444872,Verilog,Systolic-Array,304,0,2022-09-14 06:49:34+00:00,[],None
325,https://github.com/kshitizt/dig_chip.git,2022-09-03 19:29:47+00:00,,0,kshitizt/dig_chip,532355527,Verilog,dig_chip,2241,0,2022-09-03 19:29:59+00:00,[],https://api.github.com/licenses/apache-2.0
326,https://github.com/Akansh-Agrawal/CS220A-Code.git,2022-09-03 21:06:03+00:00,,0,Akansh-Agrawal/CS220A-Code,532373908,Verilog,CS220A-Code,81,0,2022-09-03 21:12:13+00:00,[],None
327,https://github.com/ma7moud80/single-cycle-MIPS.git,2022-09-04 16:30:30+00:00,,0,ma7moud80/single-cycle-MIPS,532595144,Verilog,single-cycle-MIPS,353,0,2022-09-08 13:40:06+00:00,[],None
328,https://github.com/KiuQuy/Image-process.git,2022-09-04 09:58:33+00:00,,0,KiuQuy/Image-process,532500210,Verilog,Image-process,26941,0,2023-03-18 17:29:02+00:00,[],None
329,https://github.com/ShapePolygon/DESimConfig.git,2022-09-04 13:59:21+00:00,Contains the required folders to allow simulation of FPGA projects to DESim.,0,ShapePolygon/DESimConfig,532556579,Verilog,DESimConfig,3356,0,2022-09-04 15:25:44+00:00,[],https://api.github.com/licenses/mit
330,https://github.com/recepgemalmaz/SOC-System-on-Chip-Design-CORDIC-Tabanl-HW-SW-Codesign-main.git,2022-09-03 13:32:37+00:00,,0,recepgemalmaz/SOC-System-on-Chip-Design-CORDIC-Tabanl-HW-SW-Codesign-main,532269381,Verilog,SOC-System-on-Chip-Design-CORDIC-Tabanl-HW-SW-Codesign-main,1851,0,2022-09-03 13:34:12+00:00,[],None
331,https://github.com/gandhisiripuram/32-Bit-Floating-Point-Arithmetic-Logic-Unit.git,2022-09-02 15:25:29+00:00,,0,gandhisiripuram/32-Bit-Floating-Point-Arithmetic-Logic-Unit,531979666,Verilog,32-Bit-Floating-Point-Arithmetic-Logic-Unit,1165,0,2022-09-07 13:10:36+00:00,[],None
332,https://github.com/Marcolino5/ZeptoProcessador.git,2022-09-01 22:03:54+00:00,"ZeptoProcessador descrito em Verilog, projeto final da disciplina Laboratório de Circuitos Lógicos.",0,Marcolino5/ZeptoProcessador,531699477,Verilog,ZeptoProcessador,14635,0,2023-08-10 23:51:27+00:00,[],None
333,https://github.com/markuslyq/EE2026.git,2022-09-02 04:59:03+00:00,,0,markuslyq/EE2026,531786996,Verilog,EE2026,244517,0,2022-09-02 05:49:56+00:00,[],None
334,https://github.com/1397981186/HDLBitsSht.git,2022-09-12 12:34:38+00:00,HDLBits codes of Shts,0,1397981186/HDLBitsSht,535658379,Verilog,HDLBitsSht,1717,0,2022-09-17 14:50:24+00:00,[],None
335,https://github.com/RayCorleone/MipsCPU31.git,2022-09-10 14:29:50+00:00,TJ 计算机组成原理课程设计: 31条指令CPU,0,RayCorleone/MipsCPU31,535022701,Verilog,MipsCPU31,5665,0,2023-06-26 14:45:37+00:00,[],https://api.github.com/licenses/mit
336,https://github.com/ahmed-elhoseiny/Generic-Clock-Divider.git,2022-09-07 10:28:18+00:00,"A clock divider is a circuit that takes an input signal of a frequency fin and generates an output signal of a frequency fout, where fout = fin / n and ''n'' is an integer",0,ahmed-elhoseiny/Generic-Clock-Divider,533716247,Verilog,Generic-Clock-Divider,156,0,2022-09-07 13:52:55+00:00,[],None
337,https://github.com/mayank-kabra2001/iiitb_riscv32im5.git,2022-09-12 15:42:57+00:00,,0,mayank-kabra2001/iiitb_riscv32im5,535737539,Verilog,iiitb_riscv32im5,11415,0,2022-09-12 15:46:24+00:00,[],None
338,https://github.com/vinayak24/aesmodel1.git,2022-09-09 11:58:56+00:00,,0,vinayak24/aesmodel1,534624270,Verilog,aesmodel1,7,0,2022-09-09 12:04:30+00:00,[],None
339,https://github.com/keeenjii/lab_integrado_template.git,2022-09-15 00:55:50+00:00,,0,keeenjii/lab_integrado_template,536811979,Verilog,lab_integrado_template,2,0,2022-09-15 01:01:45+00:00,[],None
340,https://github.com/CShield22/Digital.git,2022-09-13 10:11:13+00:00,,0,CShield22/Digital,536066993,Verilog,Digital,2,0,2022-09-18 14:45:02+00:00,[],None
341,https://github.com/WaleedAly2006/Repo_from_HDS.git,2022-09-11 23:34:38+00:00,,0,WaleedAly2006/Repo_from_HDS,535452877,Verilog,Repo_from_HDS,146,0,2022-09-11 23:37:11+00:00,[],None
342,https://github.com/matsu0731/tiny_test.git,2022-09-12 01:17:14+00:00,,0,matsu0731/tiny_test,535470861,Verilog,tiny_test,1424,0,2022-09-12 01:17:24+00:00,[],https://api.github.com/licenses/apache-2.0
343,https://github.com/omarzalah/DATA_Synchronization.git,2022-09-14 17:49:16+00:00,"Clock Domain Crossing (CDC) in digital domain is defined as the process of passing a signal or vector (multi bit signal) from one clock domain to another clock domain which introduce many issues as metastability, data incoherence and data loss. There are many techniques to synchronize asynchronous signals to avoid CDC issues as: -  Synchronized MUX-Select Synchronization Scheme: Used to synchronize multiple bits.",0,omarzalah/DATA_Synchronization,536697061,Verilog,DATA_Synchronization,3,0,2022-09-14 17:50:21+00:00,[],None
344,https://github.com/Bandaanusha/iiitb_rtc_caravel.git,2022-09-05 17:14:42+00:00,,0,Bandaanusha/iiitb_rtc_caravel,532992872,Verilog,iiitb_rtc_caravel,2235,0,2022-09-05 17:14:57+00:00,[],https://api.github.com/licenses/apache-2.0
345,https://github.com/LakshmiNeha-03/RTL-Designs.git,2022-09-06 16:07:41+00:00,Implementation of RTL-Designs using verilog,0,LakshmiNeha-03/RTL-Designs,533402283,Verilog,RTL-Designs,46,0,2023-08-31 10:56:53+00:00,[],None
346,https://github.com/TinyTapeout/tt001.git,2022-09-08 09:59:03+00:00,,0,TinyTapeout/tt001,534151133,Verilog,tt001,81,0,2022-09-08 09:59:10+00:00,[],https://api.github.com/licenses/apache-2.0
347,https://github.com/mohamedhossam184/MIPS.git,2022-09-08 11:57:35+00:00,MIPS_Architecture_32_bits_pipelined_design,0,mohamedhossam184/MIPS,534190442,Verilog,MIPS,103,0,2022-09-08 12:47:14+00:00,[],None
348,https://github.com/OllyMcB/TinyTapeout_workshop.git,2022-09-16 18:31:35+00:00,,0,OllyMcB/TinyTapeout_workshop,537577159,Verilog,TinyTapeout_workshop,7,0,2022-09-16 18:31:42+00:00,[],https://api.github.com/licenses/apache-2.0
349,https://github.com/TomFinet/risky-cpu.git,2022-08-31 10:10:27+00:00,A verilog RISC-V softcore CPU,0,TomFinet/risky-cpu,531029126,Verilog,risky-cpu,666,0,2023-09-14 21:35:50+00:00,[],None
350,https://github.com/michael-christen/wokwi-verilog-asic-experiment.git,2022-09-01 03:34:18+00:00,Make an asic,1,michael-christen/wokwi-verilog-asic-experiment,531350182,Verilog,wokwi-verilog-asic-experiment,18,0,2022-09-01 03:34:22+00:00,[],https://api.github.com/licenses/apache-2.0
351,https://github.com/ccw1999/Edge-Based-Line-Average-interpolation.git,2022-09-01 09:48:07+00:00,"The interlaced video comprises two types of fields in the sequence, one is the  odd and another is the even field.",0,ccw1999/Edge-Based-Line-Average-interpolation,531456241,Verilog,Edge-Based-Line-Average-interpolation,1,0,2022-09-12 15:36:43+00:00,[],None
352,https://github.com/jdrosent/wrapped_mbsFSK.git,2022-08-31 21:02:31+00:00,ZeroToASIC Submission,0,jdrosent/wrapped_mbsFSK,531257706,Verilog,wrapped_mbsFSK,3933,0,2022-08-31 21:02:36+00:00,[],https://api.github.com/licenses/apache-2.0
353,https://github.com/ElectricPotato/tinytapeout-picture-printer-b.git,2022-08-31 21:21:24+00:00,,1,ElectricPotato/tinytapeout-picture-printer-b,531263030,Verilog,tinytapeout-picture-printer-b,72,0,2022-08-31 21:22:36+00:00,[],https://api.github.com/licenses/apache-2.0
354,https://github.com/HunterGeitz2/CompArch.git,2022-09-13 13:18:05+00:00,,0,HunterGeitz2/CompArch,536135377,Verilog,CompArch,49,0,2022-09-13 13:37:55+00:00,[],None
355,https://github.com/marwan-ramzi/MIPS_single_cycle.git,2022-09-07 13:39:40+00:00,,0,marwan-ramzi/MIPS_single_cycle,533782462,Verilog,MIPS_single_cycle,165,0,2023-02-10 12:10:41+00:00,[],None
356,https://github.com/KashifInayat/ai-chip4in1core.git,2022-09-07 04:08:47+00:00,,0,KashifInayat/ai-chip4in1core,533599912,Verilog,ai-chip4in1core,15373,0,2022-09-07 04:09:00+00:00,[],https://api.github.com/licenses/apache-2.0
357,https://github.com/Fermuto/385-FA2022.git,2022-09-07 01:06:39+00:00,Intel MAX10,0,Fermuto/385-FA2022,533553626,Verilog,385-FA2022,392150,0,2022-10-14 18:02:15+00:00,[],None
358,https://github.com/chithambaramoorthii/test_mpw7.git,2022-09-08 16:24:50+00:00,testing the design for online prechecks. ,0,chithambaramoorthii/test_mpw7,534297615,Verilog,test_mpw7,5064,0,2022-09-08 16:42:58+00:00,[],https://api.github.com/licenses/apache-2.0
359,https://github.com/k1000la/mmm_lab.git,2022-09-09 18:05:26+00:00,,0,k1000la/mmm_lab,534754089,Verilog,mmm_lab,51886,0,2022-09-09 18:18:51+00:00,[],https://api.github.com/licenses/apache-2.0
360,https://github.com/chithambaramoorthii/test_analog.git,2022-09-11 23:38:56+00:00,,0,chithambaramoorthii/test_analog,535453554,Verilog,test_analog,18714,0,2022-09-12 09:14:41+00:00,[],https://api.github.com/licenses/apache-2.0
361,https://github.com/jaswanth-cjk/COA_LAb2.git,2022-09-14 18:03:46+00:00,,0,jaswanth-cjk/COA_LAb2,536702217,Verilog,COA_LAb2,5,0,2022-09-14 18:06:33+00:00,[],None
362,https://github.com/Savyasachi-Abhijith/UART.git,2022-09-15 18:04:23+00:00,,0,Savyasachi-Abhijith/UART,537149596,Verilog,UART,70,0,2022-09-15 18:06:00+00:00,[],None
363,https://github.com/SyamSribalaji/Computer-Organisation-EE2003-Syam-SriBalaji-IITM.git,2022-09-17 13:31:13+00:00,,0,SyamSribalaji/Computer-Organisation-EE2003-Syam-SriBalaji-IITM,537817599,Verilog,Computer-Organisation-EE2003-Syam-SriBalaji-IITM,1056,0,2022-11-06 07:03:38+00:00,[],None
364,https://github.com/kmrinal19/CSN-221-Project.git,2022-09-17 17:21:06+00:00,,0,kmrinal19/CSN-221-Project,537880070,Verilog,CSN-221-Project,800,0,2022-10-23 16:59:23+00:00,[],None
365,https://github.com/mmolteni-secpat/tinytapeout_chi3shares.git,2022-09-01 14:28:57+00:00,,1,mmolteni-secpat/tinytapeout_chi3shares,531555307,Verilog,tinytapeout_chi3shares,13,0,2022-09-01 14:29:05+00:00,[],https://api.github.com/licenses/apache-2.0
366,https://github.com/binoy01/ANN.git,2022-09-12 06:36:16+00:00,,0,binoy01/ANN,535540429,Verilog,ANN,3,0,2022-09-12 17:14:21+00:00,[],None
367,https://github.com/AjayKumar-Gandi/Caravel_iiitbsd.git,2022-09-12 06:04:12+00:00,Sequence detector,0,AjayKumar-Gandi/Caravel_iiitbsd,535532184,Verilog,Caravel_iiitbsd,191567,0,2022-09-12 06:04:28+00:00,[],https://api.github.com/licenses/apache-2.0
368,https://github.com/sanampudig/efabless.git,2022-09-12 15:37:17+00:00,,0,sanampudig/efabless,535735221,Verilog,efabless,2229,0,2022-09-12 15:37:33+00:00,[],https://api.github.com/licenses/apache-2.0
369,https://github.com/Ayyappa1911/iiitb_sysarray_caravel.git,2022-09-12 15:32:07+00:00,,0,Ayyappa1911/iiitb_sysarray_caravel,535733052,Verilog,iiitb_sysarray_caravel,2229,0,2022-09-12 15:32:21+00:00,[],https://api.github.com/licenses/apache-2.0
370,https://github.com/bhaavanaa/VLSI.git,2022-09-12 16:31:41+00:00,,0,bhaavanaa/VLSI,535756260,Verilog,VLSI,396,0,2022-09-12 17:25:12+00:00,[],None
371,https://github.com/DebanganaMukherjee/caravel_iiitb_usr.git,2022-09-06 09:47:10+00:00,,0,DebanganaMukherjee/caravel_iiitb_usr,533258910,Verilog,caravel_iiitb_usr,2232,0,2022-09-06 09:47:25+00:00,[],https://api.github.com/licenses/apache-2.0
372,https://github.com/BinhHo351/Basic_IP_Core.git,2022-09-06 15:08:45+00:00,,0,BinhHo351/Basic_IP_Core,533379380,Verilog,Basic_IP_Core,15,0,2022-09-06 15:24:55+00:00,[],None
373,https://github.com/Rahma-Aly/Verilog-Projects.git,2022-09-07 09:09:12+00:00,,0,Rahma-Aly/Verilog-Projects,533689421,Verilog,Verilog-Projects,25,0,2022-09-07 09:10:00+00:00,[],None
374,https://github.com/eajayreddy/quicksort.git,2022-09-13 15:57:52+00:00,Verilog implementation of quicksort.,0,eajayreddy/quicksort,536202746,Verilog,quicksort,16,0,2022-09-20 14:43:16+00:00,[],https://api.github.com/licenses/gpl-3.0
375,https://github.com/utn-ba-rf-lab/pf-2019-hdl.git,2022-08-31 23:03:49+00:00,Repositorio para los desarrollos de software para la FPGA del PCB PF-2019 (Mercurial),1,utn-ba-rf-lab/pf-2019-hdl,531287294,Verilog,pf-2019-hdl,343,0,2022-09-01 10:44:36+00:00,['mercurial'],None
376,https://github.com/Samyuktha2805/types-of-adders.git,2022-09-01 11:58:13+00:00,,0,Samyuktha2805/types-of-adders,531498400,Verilog,types-of-adders,415,0,2022-09-01 12:49:32+00:00,[],None
377,https://github.com/mattvenn/tinytapeout-341802655228625490.git,2022-09-03 17:48:05+00:00,,1,mattvenn/tinytapeout-341802655228625490,532333579,Verilog,tinytapeout-341802655228625490,10,0,2022-09-03 17:48:11+00:00,[],https://api.github.com/licenses/apache-2.0
378,https://github.com/rakib3903/verilogLearning.git,2022-09-05 07:30:31+00:00,,0,rakib3903/verilogLearning,532790635,Verilog,verilogLearning,1,0,2023-02-14 17:34:28+00:00,[],None
379,https://github.com/Thenicolaibulow/InterVox.git,2022-09-14 20:06:51+00:00,"Intervox is a signal protocol for onewire transmission digital audio and signal processing commands, between speakers. ",0,Thenicolaibulow/InterVox,536742553,Verilog,InterVox,8671,0,2023-01-06 15:46:47+00:00,[],None
380,https://github.com/Priyanshu5437/caravel_walkthrough.git,2022-09-16 15:09:10+00:00,,0,Priyanshu5437/caravel_walkthrough,537508734,Verilog,caravel_walkthrough,2229,0,2022-09-16 15:09:26+00:00,[],https://api.github.com/licenses/apache-2.0
381,https://github.com/mooniean/wokwi-workshop.git,2022-09-16 18:24:20+00:00,,0,mooniean/wokwi-workshop,537574805,Verilog,wokwi-workshop,7,0,2022-09-16 18:37:56+00:00,[],https://api.github.com/licenses/apache-2.0
382,https://github.com/ghaworth/wokwi.git,2022-09-16 18:28:36+00:00,,0,ghaworth/wokwi,537576192,Verilog,wokwi,7,0,2022-09-16 18:28:42+00:00,[],https://api.github.com/licenses/apache-2.0
383,https://github.com/yuri117/projetoCPUFPGA.git,2022-09-13 22:30:32+00:00,Um circuito simples que emula uma CPU numa FPGA (Cyclone IV E) para o curso de BCC (USP/ICMC),0,yuri117/projetoCPUFPGA,536329489,Verilog,projetoCPUFPGA,8793,0,2022-09-14 00:37:50+00:00,[],None
384,https://github.com/TDD-II-22/lab03spi-g03.git,2022-09-14 14:02:04+00:00,lab03spi-g03 created by GitHub Classroom,0,TDD-II-22/lab03spi-g03,536605545,Verilog,lab03spi-g03,62981,0,2022-09-22 04:28:20+00:00,[],None
385,https://github.com/konsougiou/SpaceSurfer-project.git,2022-09-14 22:56:00+00:00,SpaceSurfer server and game code,0,konsougiou/SpaceSurfer-project,536785499,Verilog,SpaceSurfer-project,15729,0,2022-09-14 23:10:55+00:00,[],None
386,https://github.com/iaakash47/VSDBabySoC_PD.git,2022-09-15 11:22:44+00:00,,0,iaakash47/VSDBabySoC_PD,536992892,Verilog,VSDBabySoC_PD,3055,0,2022-09-15 11:39:43+00:00,[],https://api.github.com/licenses/apache-2.0
387,https://github.com/keerthanaen/N-Bit-Multiplier.git,2022-09-16 02:13:20+00:00,,0,keerthanaen/N-Bit-Multiplier,537274009,Verilog,N-Bit-Multiplier,1,0,2022-09-25 10:42:38+00:00,[],None
388,https://github.com/jmuse13/LDMX_Ecal_Hcal_Firmware_testbench.git,2022-09-07 14:42:44+00:00,,0,jmuse13/LDMX_Ecal_Hcal_Firmware_testbench,533808357,Verilog,LDMX_Ecal_Hcal_Firmware_testbench,10,0,2022-09-07 19:19:54+00:00,[],None
389,https://github.com/phukon/Verilog.git,2022-09-06 12:00:41+00:00,,0,phukon/Verilog,533302440,Verilog,Verilog,100,0,2023-02-22 17:00:51+00:00,[],None
390,https://github.com/Mohamed5620/SPI-interface.git,2022-09-01 12:28:10+00:00,,0,Mohamed5620/SPI-interface,531509035,Verilog,SPI-interface,15,0,2022-09-01 12:29:50+00:00,[],None
391,https://github.com/teomerino1/Arq-Comp-TP1.git,2022-09-12 16:01:29+00:00,Trabajo práctico numero 1. Desarrollo de ALU en Verilog usando Vivado,0,teomerino1/Arq-Comp-TP1,535744808,Verilog,Arq-Comp-TP1,16,0,2023-09-12 00:55:10+00:00,[],None
392,https://github.com/s7023369667/verilog_traininig.git,2022-09-12 15:43:02+00:00,,0,s7023369667/verilog_traininig,535737578,Verilog,verilog_traininig,21,0,2022-09-12 15:46:05+00:00,[],None
393,https://github.com/mpai17/Single-Cycle-Processor.git,2022-09-13 17:26:18+00:00,Verilog description of a single cycle processor,0,mpai17/Single-Cycle-Processor,536236413,Verilog,Single-Cycle-Processor,22,0,2022-09-13 17:27:50+00:00,[],None
394,https://github.com/omarzalah/MIPS_PIPLINE.git,2022-09-14 19:54:39+00:00,"Pipelining, introduced in Section 3.6, is a powerful way to improve the throughput of a digital system. We design a pipelined processor by subdividing the single-cycle processor into five pipeline stages. Thus, five instructions can execute simultaneously, one in each stage. Because each stage has only one-fifth of the entire logic, the clock frequency is almost five times faster. Hence, the latency of each instruction is ideally unchanged, but the throughput is ideally five times better. Microprocessors execute millions or billions of instructions per second, so throughput is more important than latency. Pipelining introduces some overhead, so the throughput will not be quite as high as we might ideally desire, but pipelining nevertheless gives such great advantage for so little cost that all modern high-performance microprocessors are pipelined. Reading and writing the memory and register file and using the ALU typically constitute the biggest delays in the processor. We choose five pipeline stages so that each stage involves exactly one of these slow steps. Specifically, we call the five stages Fetch, Decode, Execute, Memory, and Writeback. They are similar to the five steps that the multicycle processor used to perform lw. In the Fetch stage, the processor reads the instruction from instruction memory. In the Decode stage, the processor reads the source operands from the register file and decodes the instruction to produce the control signals. In the Execute stage, the processor performs a computation with the ALU. In the Memory stage, the processor reads or writes data memory. Finally, in the Writeback stage, the processor writes the result to the register file, when applicable.",0,omarzalah/MIPS_PIPLINE,536738614,Verilog,MIPS_PIPLINE,266,0,2022-09-14 19:57:18+00:00,[],None
395,https://github.com/vlade1998/FPGA-multieffect-pedal.git,2022-09-15 03:29:32+00:00,FPGA implementation of a multieffect pedal,0,vlade1998/FPGA-multieffect-pedal,536849956,Verilog,FPGA-multieffect-pedal,8,0,2022-09-15 03:33:09+00:00,[],None
396,https://github.com/simo-zz/fifo_sync.git,2022-09-15 08:39:13+00:00,,0,simo-zz/fifo_sync,536936609,Verilog,fifo_sync,1385,0,2022-09-15 09:41:35+00:00,[],None
397,https://github.com/codealpha9/dsdlab.git,2022-09-05 09:56:23+00:00,,0,codealpha9/dsdlab,532840602,Verilog,dsdlab,3812,0,2022-09-05 10:00:00+00:00,[],None
398,https://github.com/mattvenn/tinytapeout_m_segments.git,2022-09-03 13:52:02+00:00,,2,mattvenn/tinytapeout_m_segments,532274276,Verilog,tinytapeout_m_segments,80,0,2022-09-03 13:52:07+00:00,[],https://api.github.com/licenses/apache-2.0
399,https://github.com/rlokesh2002/Basic_MicroProcessor_Implementation.git,2022-09-03 12:56:20+00:00,"Write a Verilog code to construct a basic microprocessor which takes 8 bit instructions to implement 4 operations on the processor - Input, Output, Move and Add",0,rlokesh2002/Basic_MicroProcessor_Implementation,532260320,Verilog,Basic_MicroProcessor_Implementation,2345,0,2022-09-03 12:57:18+00:00,[],None
400,https://github.com/sachinbhat2001/Verilog-Projects.git,2022-09-02 19:02:23+00:00,,0,sachinbhat2001/Verilog-Projects,532047173,Verilog,Verilog-Projects,8,0,2022-09-02 19:03:27+00:00,[],None
401,https://github.com/cyril0124/i2c_master.git,2022-09-07 15:18:32+00:00,,0,cyril0124/i2c_master,533822758,Verilog,i2c_master,991,0,2022-09-07 15:29:53+00:00,[],None
402,https://github.com/marwan-ramzi/Low-Power-Configurable-Multi-Clock-Digital-System.git,2022-09-07 13:57:30+00:00,,0,marwan-ramzi/Low-Power-Configurable-Multi-Clock-Digital-System,533789945,Verilog,Low-Power-Configurable-Multi-Clock-Digital-System,17,0,2023-02-10 12:10:39+00:00,[],None
403,https://github.com/Abdo99-alt/MAC_unit.git,2022-09-05 18:01:43+00:00,,0,Abdo99-alt/MAC_unit,533007718,Verilog,MAC_unit,88,0,2022-09-05 18:03:40+00:00,[],https://api.github.com/licenses/mit
404,https://github.com/TinyTapeout/tt002.git,2022-09-08 12:22:47+00:00,,0,TinyTapeout/tt002,534199688,Verilog,tt002,13,0,2022-09-08 12:22:54+00:00,[],https://api.github.com/licenses/apache-2.0
405,https://github.com/Tito047/NIR_PLL.git,2022-09-05 15:32:43+00:00,,0,Tito047/NIR_PLL,532959845,Verilog,NIR_PLL,43,0,2022-09-05 15:36:35+00:00,[],None
406,https://github.com/clarksyd18/ECE552-Project.git,2022-09-05 16:45:41+00:00,,0,clarksyd18/ECE552-Project,532983812,Verilog,ECE552-Project,1606,0,2022-09-05 16:53:51+00:00,[],https://api.github.com/licenses/mit
407,https://github.com/mattvenn/tinytapeout-all-one.git,2022-09-02 18:36:37+00:00,,1,mattvenn/tinytapeout-all-one,532039937,Verilog,tinytapeout-all-one,9,0,2022-09-02 18:36:43+00:00,[],https://api.github.com/licenses/apache-2.0
408,https://github.com/kalebhui/OFF.git,2022-09-02 03:07:26+00:00,Two player online platform game where the objective is to beat the level as fast as possible!,0,kalebhui/OFF,531763717,Verilog,OFF,905,0,2022-09-24 00:33:05+00:00,[],None
409,https://github.com/eggsactly/tinytapeout_demo.git,2022-09-01 07:26:38+00:00,,1,eggsactly/tinytapeout_demo,531409970,Verilog,tinytapeout_demo,12,0,2022-09-01 07:26:44+00:00,[],https://api.github.com/licenses/apache-2.0
410,https://github.com/ccw1999/Arithmetic-logic-unit.git,2022-09-01 03:54:40+00:00,"Arithmetic logic unit is a combinational digital circuit that performs different  operations according to different control signal lines. In this homework, you are  required to design a 1-bit ALU circuit which can perform the basic calculation  operations. The 1-bit ALU module is then used to constitute an 8-bit ALU circuit. The operation of the ALU is listed in Table I, and the specifications and function of  the 1-bit ALU and the 8-bit ALU are detailed in the following sections.",0,ccw1999/Arithmetic-logic-unit,531354858,Verilog,Arithmetic-logic-unit,3,0,2022-09-01 08:39:46+00:00,[],None
411,https://github.com/BugMakerTHU/job_test.git,2022-09-01 19:48:34+00:00,,0,BugMakerTHU/job_test,531665011,Verilog,job_test,326,0,2022-09-01 19:58:19+00:00,[],https://api.github.com/licenses/agpl-3.0
412,https://github.com/Vaishnavinara7/ECE369ASomewhatWorking.git,2022-09-01 19:03:05+00:00,,0,Vaishnavinara7/ECE369ASomewhatWorking,531651103,Verilog,ECE369ASomewhatWorking,10,0,2022-09-02 22:55:18+00:00,[],None
413,https://github.com/matteocordray/verilog_encryption_project.git,2022-09-01 14:10:13+00:00,FPGA learning journey on creating a verilog implementation of encryption standards,0,matteocordray/verilog_encryption_project,531547917,Verilog,verilog_encryption_project,48425,0,2022-09-01 14:57:48+00:00,[],https://api.github.com/licenses/mit
414,https://github.com/EriccWuu/HDLBitsAnswers.git,2022-09-09 11:45:42+00:00,Answers to HDLBits,0,EriccWuu/HDLBitsAnswers,534620313,Verilog,HDLBitsAnswers,26,0,2022-09-09 13:12:44+00:00,[],None
415,https://github.com/franciscolimacf/Keyboard-Verilog.git,2022-09-09 16:35:45+00:00,Utilizando um FPGA para criar um teclado musical,0,franciscolimacf/Keyboard-Verilog,534722984,Verilog,Keyboard-Verilog,3,0,2022-09-09 16:38:51+00:00,[],None
416,https://github.com/binoy01/new_design.git,2022-09-13 06:02:02+00:00,,0,binoy01/new_design,535980726,Verilog,new_design,2229,0,2022-09-13 06:02:17+00:00,[],https://api.github.com/licenses/apache-2.0
417,https://github.com/raysun0729/Computer-Organization-Homework-32-bit-ALU-.git,2022-09-12 15:15:08+00:00,,0,raysun0729/Computer-Organization-Homework-32-bit-ALU-,535726074,Verilog,Computer-Organization-Homework-32-bit-ALU-,5,0,2022-09-12 15:21:32+00:00,[],None
418,https://github.com/jennifer1012086/CPU_pipeline.git,2022-09-10 08:53:54+00:00,,0,jennifer1012086/CPU_pipeline,534943210,Verilog,CPU_pipeline,9644,0,2023-03-03 10:12:18+00:00,[],None
419,https://github.com/YathinKumar11/IIITB_RISCV32IM.git,2022-09-01 10:05:34+00:00,"This repository is a created as part of the ASIC course, and will contain the tasks that are covered in the class ",0,YathinKumar11/IIITB_RISCV32IM,531462182,Verilog,IIITB_RISCV32IM,11903,0,2022-09-01 10:15:08+00:00,[],None
420,https://github.com/toybuilder/learn-tinytapeout.git,2022-08-31 16:03:04+00:00,Learning about Tiny Tapeout,1,toybuilder/learn-tinytapeout,531157924,Verilog,learn-tinytapeout,15,0,2022-08-31 16:03:08+00:00,[],https://api.github.com/licenses/apache-2.0
421,https://github.com/drvasanthi/caravel_iiitb_icg.git,2022-09-01 16:39:42+00:00,,0,drvasanthi/caravel_iiitb_icg,531603863,Verilog,caravel_iiitb_icg,5865,0,2022-09-02 13:40:13+00:00,[],https://api.github.com/licenses/apache-2.0
422,https://github.com/Shahreenhusne/460-LABS-.git,2022-09-15 14:11:12+00:00,,0,Shahreenhusne/460-LABS-,537057456,Verilog,460-LABS-,38,0,2022-09-15 14:22:46+00:00,[],None
423,https://github.com/OmarAlshatti/Morse-Decoder-using-Basys3.git,2022-09-16 23:54:36+00:00,,0,OmarAlshatti/Morse-Decoder-using-Basys3,537651753,Verilog,Morse-Decoder-using-Basys3,4,0,2022-09-16 23:58:08+00:00,[],None
424,https://github.com/Jerry0708/ICC_2018_grad_cell.git,2022-09-16 16:41:47+00:00,,0,Jerry0708/ICC_2018_grad_cell,537541096,Verilog,ICC_2018_grad_cell,42,0,2022-09-16 16:46:49+00:00,[],None
425,https://github.com/Intuity/wokwi-verilog-gds.git,2022-09-16 18:27:44+00:00,,0,Intuity/wokwi-verilog-gds,537575931,Verilog,wokwi-verilog-gds,7,0,2022-09-16 18:27:50+00:00,[],https://api.github.com/licenses/apache-2.0
426,https://github.com/bharath19-gs/VSDBabySoC_ICC2.git,2022-09-15 13:51:17+00:00,,1,bharath19-gs/VSDBabySoC_ICC2,537049260,Verilog,VSDBabySoC_ICC2,4094,0,2022-09-15 17:30:27+00:00,[],https://api.github.com/licenses/mit
427,https://github.com/bernabeu-a/Au_fpga_blink_led.git,2022-09-15 20:46:34+00:00,,0,bernabeu-a/Au_fpga_blink_led,537201162,Verilog,Au_fpga_blink_led,265,0,2022-09-15 20:48:26+00:00,[],None
428,https://github.com/Eng-Mahmoud2000/Mips_Processor_Piplined-Design_Verilog.git,2022-09-07 15:37:15+00:00,,0,Eng-Mahmoud2000/Mips_Processor_Piplined-Design_Verilog,533829719,Verilog,Mips_Processor_Piplined-Design_Verilog,69,0,2022-09-07 15:41:38+00:00,[],None
429,https://github.com/Alfred94-dev/Digital-Harware-desgin-Verilog-.git,2022-09-04 03:29:10+00:00,,0,Alfred94-dev/Digital-Harware-desgin-Verilog-,532428619,Verilog,Digital-Harware-desgin-Verilog-,89,0,2022-09-11 18:35:07+00:00,[],None
430,https://github.com/JoyKarmoker/Verilog-Codes.git,2022-09-03 18:17:20+00:00,This repo follows the bachelors course CSE2112 Digital System Design Lab,0,JoyKarmoker/Verilog-Codes,532340191,Verilog,Verilog-Codes,1100,0,2022-09-03 18:17:53+00:00,[],None
431,https://github.com/1004ssc/Computer-Architecture.git,2022-09-02 18:38:10+00:00,,0,1004ssc/Computer-Architecture,532040340,Verilog,Computer-Architecture,2,0,2022-09-02 18:40:53+00:00,[],None
432,https://github.com/AndalibN/test_project.git,2022-09-02 13:40:08+00:00,,0,AndalibN/test_project,531940873,Verilog,test_project,2261,0,2022-09-02 13:40:21+00:00,[],https://api.github.com/licenses/apache-2.0
433,https://github.com/mito200/Bachelors_with_working_simulation_rtl.git,2022-09-04 18:02:33+00:00,,0,mito200/Bachelors_with_working_simulation_rtl,532617297,Verilog,Bachelors_with_working_simulation_rtl,1103,0,2023-06-23 14:42:24+00:00,[],None
434,https://github.com/ColinE0/Traffic-Light.git,2022-09-03 05:51:07+00:00,A fully functioning traffic light created in Verilog.,0,ColinE0/Traffic-Light,532169418,Verilog,Traffic-Light,5,0,2022-09-03 06:08:41+00:00,[],None
435,https://github.com/inmys/C10_BAIKAL.git,2022-09-05 11:42:44+00:00,,0,inmys/C10_BAIKAL,532875140,Verilog,C10_BAIKAL,37106,0,2022-09-19 12:08:37+00:00,[],None
436,https://github.com/Mavioux/caravel_user_project.git,2022-09-06 14:00:22+00:00,My Caravel User Project,0,Mavioux/caravel_user_project,533350491,Verilog,caravel_user_project,2229,0,2022-09-06 14:00:39+00:00,[],https://api.github.com/licenses/apache-2.0
437,https://github.com/Wu-Haitao/CG3207_Labs.git,2022-09-12 11:01:27+00:00,,0,Wu-Haitao/CG3207_Labs,535626307,Verilog,CG3207_Labs,202,0,2022-12-01 06:35:20+00:00,[],None
438,https://github.com/lukestock/ELEC5566M-Unit1-el17ls-main.git,2022-09-12 09:17:38+00:00,,1,lukestock/ELEC5566M-Unit1-el17ls-main,535591250,Verilog,ELEC5566M-Unit1-el17ls-main,21,0,2022-09-12 11:55:24+00:00,[],None
439,https://github.com/basyooo20/Piplined-MIPS.git,2022-09-13 16:59:17+00:00,,0,basyooo20/Piplined-MIPS,536226216,Verilog,Piplined-MIPS,157,0,2022-09-13 17:00:12+00:00,[],None
440,https://github.com/loboronan07/DSD-Lab.git,2022-09-08 10:21:16+00:00,,0,loboronan07/DSD-Lab,534158386,Verilog,DSD-Lab,2367,0,2023-09-04 05:46:33+00:00,[],None
441,https://github.com/Chaitanya27111/Capture-the-Bug-Hackatthon.git,2022-09-11 07:07:05+00:00,,0,Chaitanya27111/Capture-the-Bug-Hackatthon,535218145,Verilog,Capture-the-Bug-Hackatthon,216,0,2022-09-11 07:09:36+00:00,[],
442,https://github.com/vinayak24/AESmodel2.git,2022-09-09 12:00:42+00:00,,0,vinayak24/AESmodel2,534624787,Verilog,AESmodel2,2269,0,2022-09-09 12:02:02+00:00,[],None
443,https://github.com/donghua100/riscv-cpu-verilog.git,2022-09-09 14:17:25+00:00,,0,donghua100/riscv-cpu-verilog,534672472,Verilog,riscv-cpu-verilog,104,0,2022-09-09 14:18:09+00:00,[],None
444,https://github.com/rrossi94/ring-oscillator-tiny-tapeout.git,2022-09-11 14:50:42+00:00,Ring Oscillator test chip using tiny tapeout template and SKY130 PDK,0,rrossi94/ring-oscillator-tiny-tapeout,535329507,Verilog,ring-oscillator-tiny-tapeout,8,0,2022-09-11 14:50:48+00:00,[],https://api.github.com/licenses/apache-2.0
445,https://github.com/wpi-ece574-f22/ex-handshake.git,2022-09-11 18:42:31+00:00,,0,wpi-ece574-f22/ex-handshake,535392484,Verilog,ex-handshake,2,0,2022-09-11 18:44:43+00:00,[],None
446,https://github.com/gaurav07kumar/-Restoring_Square_Root-calculator.git,2022-09-02 06:47:03+00:00,It does find square root of 32-bit binary number.,0,gaurav07kumar/-Restoring_Square_Root-calculator,531813266,Verilog,-Restoring_Square_Root-calculator,4,0,2022-09-02 06:49:10+00:00,[],None
447,https://github.com/sami154/Finding_Bug_using_Simulation.git,2022-09-14 04:05:03+00:00,,0,sami154/Finding_Bug_using_Simulation,536407326,Verilog,Finding_Bug_using_Simulation,2815,0,2024-03-27 07:33:05+00:00,[],None
448,https://github.com/cy384/seven-segment-with-adder.git,2022-08-31 22:12:53+00:00,a little four bit adder with seven segment decoder,1,cy384/seven-segment-with-adder,531275798,Verilog,seven-segment-with-adder,12,0,2022-08-31 22:12:59+00:00,[],https://api.github.com/licenses/apache-2.0
449,https://github.com/jihwanlee99/ECE_exp2.git,2022-09-07 08:32:58+00:00,서울시립대학교 전자전기컴퓨터공학부 전전설2 과목,0,jihwanlee99/ECE_exp2,533676679,Verilog,ECE_exp2,3,0,2022-09-13 14:34:41+00:00,[],None
450,https://github.com/sushmithapopuri/academic-projects.git,2022-09-04 11:18:57+00:00,,0,sushmithapopuri/academic-projects,532517787,Verilog,academic-projects,4411,0,2022-09-04 11:26:08+00:00,[],https://api.github.com/licenses/mit
451,https://github.com/heyitsraman/verilogbasics.git,2022-09-04 15:10:50+00:00,"This project covers the basic codes followed by some adavanced level codes which may prove to be helpful to the viewers, trying to learn Verilog and kickstart their journey in Digital design.",0,heyitsraman/verilogbasics,532574984,Verilog,verilogbasics,11389,0,2022-10-14 06:39:28+00:00,[],https://api.github.com/licenses/cc0-1.0
452,https://github.com/wpi-ece574-f22/ho-addtree.git,2022-09-04 16:10:52+00:00,,0,wpi-ece574-f22/ho-addtree,532590256,Verilog,ho-addtree,2,0,2022-09-04 16:11:50+00:00,[],None
453,https://github.com/mattvenn/tinytapeout-laura.git,2022-09-03 13:49:12+00:00,,0,mattvenn/tinytapeout-laura,532273554,Verilog,tinytapeout-laura,10,0,2022-09-03 13:49:16+00:00,[],https://api.github.com/licenses/apache-2.0
454,https://github.com/thanavignesh/practice.git,2022-09-15 17:42:59+00:00,,0,thanavignesh/practice,537141699,Verilog,practice,5,0,2022-09-15 17:43:50+00:00,[],None
455,https://github.com/Lychee-acaca/codes-fix-for-Advanced-Fpga-Design.git,2022-09-14 07:35:22+00:00,Fix wrong codes on the book Advanced Fpga Design,0,Lychee-acaca/codes-fix-for-Advanced-Fpga-Design,536464717,Verilog,codes-fix-for-Advanced-Fpga-Design,9,0,2022-09-14 07:37:52+00:00,[],None
456,https://github.com/mengstr/TinyTapeout1.git,2022-08-31 08:13:37+00:00,Playground/Tests for TinyTapeout,0,mengstr/TinyTapeout1,530992098,Verilog,TinyTapeout1,7,0,2022-08-31 08:13:41+00:00,[],https://api.github.com/licenses/apache-2.0
457,https://github.com/abf149/fbna_like.git,2022-09-01 07:33:52+00:00,"An open-source DNN accelerator based on FBNA: A Fully Binarized Neural Network Accelerator (Guo, Ma, et. al.) ",0,abf149/fbna_like,531412231,Verilog,fbna_like,12,0,2022-09-01 07:33:57+00:00,[],https://api.github.com/licenses/apache-2.0
458,https://github.com/k-daisuke/tiny_user_project.git,2022-09-12 02:34:44+00:00,,0,k-daisuke/tiny_user_project,535486641,Verilog,tiny_user_project,1409,0,2022-09-12 02:34:55+00:00,[],https://api.github.com/licenses/apache-2.0
459,https://github.com/pkumar4197/32-bit-HDL-based-processor.git,2022-09-13 19:56:22+00:00,"Design an HDL-based 32-bit processor, which executes the following 10 instructions: ADD SUB SLL SLT SLTU XOR SRL SRA OR AND",0,pkumar4197/32-bit-HDL-based-processor,536288434,Verilog,32-bit-HDL-based-processor,999,0,2022-09-13 19:57:22+00:00,[],https://api.github.com/licenses/gpl-3.0
460,https://github.com/YousefSherif/Sequence-Detector.git,2022-09-16 02:11:45+00:00,,0,YousefSherif/Sequence-Detector,537273656,Verilog,Sequence-Detector,76,0,2022-09-16 02:14:03+00:00,[],None
461,https://github.com/Rishabh-zhcet/CTB-Hackathon.git,2022-09-11 10:46:43+00:00,,0,Rishabh-zhcet/CTB-Hackathon,535266960,Verilog,CTB-Hackathon,67,0,2022-09-11 10:46:58+00:00,[],
462,https://github.com/mattvenn/tt001.git,2022-09-08 09:48:40+00:00,,0,mattvenn/tt001,534147714,Verilog,tt001,12,0,2022-09-08 09:48:47+00:00,[],https://api.github.com/licenses/apache-2.0
463,https://github.com/claraabk/cpu-mips.git,2022-09-02 10:12:43+00:00,,2,claraabk/cpu-mips,531876166,Verilog,cpu-mips,1747,0,2022-09-13 21:58:48+00:00,[],None
464,https://github.com/Ahmed1AlAmri/Whack-a-mole-game-verilog.git,2022-09-02 13:32:35+00:00,design and implement Whack A Mole Game by using The Altera DE1 board (FPGA) written in Verilog,0,Ahmed1AlAmri/Whack-a-mole-game-verilog,531938169,Verilog,Whack-a-mole-game-verilog,1458,0,2022-09-02 13:49:18+00:00,[],None
465,https://github.com/dlimyh98/ProjectTwo.git,2022-09-12 10:28:56+00:00,,0,dlimyh98/ProjectTwo,535615428,Verilog,ProjectTwo,769,0,2023-09-09 03:25:06+00:00,[],None
466,https://github.com/lukestock/ELEC5566M-Assignment2-el17ls-main.git,2022-09-12 12:24:51+00:00,,0,lukestock/ELEC5566M-Assignment2-el17ls-main,535654525,Verilog,ELEC5566M-Assignment2-el17ls-main,11,0,2022-09-12 12:26:23+00:00,[],None
467,https://github.com/bhaavanaa/Computer-Architecture.git,2022-09-12 17:27:51+00:00,,0,bhaavanaa/Computer-Architecture,535777473,Verilog,Computer-Architecture,301,0,2022-09-12 17:30:19+00:00,[],None
468,https://github.com/DevAakarsh/Fast-Binary-Counters-and-Compressors-Generated-by-Sorting-Network.git,2022-09-12 11:40:56+00:00,,0,DevAakarsh/Fast-Binary-Counters-and-Compressors-Generated-by-Sorting-Network,535639511,Verilog,Fast-Binary-Counters-and-Compressors-Generated-by-Sorting-Network,1035,0,2022-10-03 09:28:15+00:00,[],None
469,https://github.com/lukestock/ELEC5566M-Unit2-el17ls-main.git,2022-09-12 12:07:20+00:00,,0,lukestock/ELEC5566M-Unit2-el17ls-main,535648140,Verilog,ELEC5566M-Unit2-el17ls-main,19,0,2022-09-12 12:09:12+00:00,[],None
470,https://github.com/Kanghyeop/templates_axi4_myip.git,2022-09-10 11:42:10+00:00,"lite, full, stream ver of axi named of myip.",0,Kanghyeop/templates_axi4_myip,534980463,Verilog,templates_axi4_myip,9,0,2022-09-10 11:43:06+00:00,[],None
471,https://github.com/sina-negarandeh/mips-multi-cycle-processor.git,2022-09-15 10:33:15+00:00,An implementation of the MIPS multi-cycle processor.,0,sina-negarandeh/mips-multi-cycle-processor,536976397,Verilog,mips-multi-cycle-processor,5,0,2022-09-15 10:43:22+00:00,[],None
472,https://github.com/BenAns/TTL16.git,2022-09-12 18:41:03+00:00,Designs for a 16-bit computer to be build (almost) entirely from the 7400 series of TTL logic chips,0,BenAns/TTL16,535803788,Verilog,TTL16,40,0,2022-09-29 22:59:24+00:00,[],None
473,https://github.com/AyushJam/Floating-Point-Adder.git,2022-09-11 11:24:16+00:00,To build a floating point adder used to add two 32-bit numbers stored in the IEEE 754 format in the memory. ,0,AyushJam/Floating-Point-Adder,535275766,Verilog,Floating-Point-Adder,727,0,2023-11-29 03:21:02+00:00,[],None
474,https://github.com/jix/tinytapeout-from-template.git,2022-09-08 15:29:08+00:00,,1,jix/tinytapeout-from-template,534275855,Verilog,tinytapeout-from-template,6,0,2022-09-08 15:29:18+00:00,[],https://api.github.com/licenses/apache-2.0
475,https://github.com/wulffern/to_sun_sar9b_sky130.git,2022-09-06 08:21:52+00:00,,0,wulffern/to_sun_sar9b_sky130,533228363,Verilog,to_sun_sar9b_sky130,94,0,2022-09-06 08:21:58+00:00,[],https://api.github.com/licenses/apache-2.0
476,https://github.com/luiscar2001/nuevo.git,2022-09-08 15:17:32+00:00,,0,luiscar2001/nuevo,534271264,Verilog,nuevo,8,0,2022-09-08 15:17:50+00:00,[],https://api.github.com/licenses/apache-2.0
477,https://github.com/jasshanK/ee2026_archive.git,2022-09-05 08:48:19+00:00,,0,jasshanK/ee2026_archive,532816961,Verilog,ee2026_archive,40883,0,2022-09-16 13:22:13+00:00,[],None
478,https://github.com/EngMostafaKhaled/Pipelined_MIPS_32-bit_harvard-arch.git,2022-09-07 15:12:00+00:00,,0,EngMostafaKhaled/Pipelined_MIPS_32-bit_harvard-arch,533820128,Verilog,Pipelined_MIPS_32-bit_harvard-arch,288,0,2022-09-07 15:30:42+00:00,[],None
479,https://github.com/nuzuichifan/verilog_learning.git,2022-09-09 13:44:33+00:00,,0,nuzuichifan/verilog_learning,534659985,Verilog,verilog_learning,1,0,2022-09-09 13:47:05+00:00,[],None
480,https://github.com/caiovpsilveira/Simple-Cache-Hierarchy.git,2022-09-08 23:18:23+00:00,"Implementation, in Verilog HDL, of a simple cache hierarchy, containing L1 and L2 caches with a non-inclusive non-exclusive policy.",0,caiovpsilveira/Simple-Cache-Hierarchy,534426108,Verilog,Simple-Cache-Hierarchy,670,0,2022-09-09 04:15:33+00:00,[],None
481,https://github.com/SnowCharmQ/2022-Fall-Digital-Logic-Lab.git,2022-09-16 06:07:32+00:00,The lab codes for Digital Logic in 2022 fall,0,SnowCharmQ/2022-Fall-Digital-Logic-Lab,537327268,Verilog,2022-Fall-Digital-Logic-Lab,14,0,2022-09-16 06:14:57+00:00,[],None
482,https://github.com/deanm1278/ledstream.git,2022-09-15 18:54:19+00:00,AXI Stream compatible multi-output WS2812 controller,0,deanm1278/ledstream,537166736,Verilog,ledstream,11,0,2023-06-06 21:49:23+00:00,[],None
483,https://github.com/Jerry0708/ICC_2020_grad_cell.git,2022-09-16 16:35:46+00:00,,0,Jerry0708/ICC_2020_grad_cell,537538978,Verilog,ICC_2020_grad_cell,95,0,2022-09-16 16:40:32+00:00,[],None
484,https://github.com/CRTejaswi/16x16_multiplier.git,2022-09-12 08:43:54+00:00,,0,CRTejaswi/16x16_multiplier,535579540,Verilog,16x16_multiplier,27,0,2022-09-12 08:45:55+00:00,[],None
485,https://github.com/ximenaAp002/VerilogCore.git,2022-09-13 01:45:05+00:00,,0,ximenaAp002/VerilogCore,535916784,Verilog,VerilogCore,4,0,2022-09-13 01:47:41+00:00,[],None
486,https://github.com/lukestock/ELC5566M-Assignment1-el17ls-main.git,2022-09-12 12:19:32+00:00,,0,lukestock/ELC5566M-Assignment1-el17ls-main,535652535,Verilog,ELC5566M-Assignment1-el17ls-main,696,0,2022-09-12 12:22:58+00:00,[],None
487,https://github.com/wpi-ece574-f22/solve-ho-addtree.git,2022-09-15 02:24:50+00:00,,0,wpi-ece574-f22/solve-ho-addtree,536833781,Verilog,solve-ho-addtree,2,0,2022-09-15 02:25:42+00:00,[],None
488,https://github.com/sajializ/ARM.git,2022-09-15 07:15:05+00:00,,0,sajializ/ARM,536908129,Verilog,ARM,14,0,2022-09-15 07:17:53+00:00,[],None
489,https://github.com/sina-negarandeh/mips-single-cycle-processor.git,2022-09-15 10:32:19+00:00,An implementation of the MIPS single-cycle processor.,0,sina-negarandeh/mips-single-cycle-processor,536976126,Verilog,mips-single-cycle-processor,4,0,2022-09-15 10:42:17+00:00,[],None
490,https://github.com/roman3017/caravel_mpw7_analog.git,2022-09-03 20:39:50+00:00,,0,roman3017/caravel_mpw7_analog,532369181,Verilog,caravel_mpw7_analog,94,0,2022-09-03 20:44:02+00:00,[],https://api.github.com/licenses/apache-2.0
491,https://github.com/roman3017/caravel_mpw7.git,2022-09-03 20:46:03+00:00,,0,roman3017/caravel_mpw7,532370362,Verilog,caravel_mpw7,71326,0,2022-09-03 20:46:16+00:00,[],https://api.github.com/licenses/apache-2.0
492,https://github.com/aiunderstand/tinytapeout_bintristateloadablecounter.git,2022-08-31 15:41:13+00:00,"This IP block simulates a binary synchronous (parallel) MOD-4 counter. Applications are CPU's, PWM signal generators, etc. It features:  - tri-direction (pause, count up, count down)  - loadable (use data[3:1], eg. for jump instruction) - synchronous output(at rising edge) with async (ripple) setup of next count)  - easy to control, fast and scalable (each 1 bit counter only depends on previous counter)",1,aiunderstand/tinytapeout_bintristateloadablecounter,531149828,Verilog,tinytapeout_bintristateloadablecounter,191,0,2022-08-31 15:41:18+00:00,[],https://api.github.com/licenses/apache-2.0
493,https://github.com/wpi-ece574-f22/solve-ho-gcd.git,2022-08-31 01:41:55+00:00,,0,wpi-ece574-f22/solve-ho-gcd,530896285,Verilog,solve-ho-gcd,3,0,2022-09-07 00:53:06+00:00,[],None
494,https://github.com/theFestest/tinytapeout-4x4-ram.git,2022-09-01 02:25:08+00:00,,1,theFestest/tinytapeout-4x4-ram,531333145,Verilog,tinytapeout-4x4-ram,12,0,2022-09-01 02:26:09+00:00,[],https://api.github.com/licenses/apache-2.0
495,https://github.com/keerthanaen/Vending-Machine.git,2022-09-01 16:14:43+00:00,,0,keerthanaen/Vending-Machine,531595089,Verilog,Vending-Machine,1,0,2022-09-25 10:41:05+00:00,[],None
496,https://github.com/AvaCharon/CPU_Design.git,2022-09-01 08:46:14+00:00,,0,AvaCharon/CPU_Design,531435338,Verilog,CPU_Design,1086,0,2022-09-01 08:48:14+00:00,[],None
497,https://github.com/krenehan/MOANA3_Rigid_2by1_XEM7010_Verilog.git,2022-09-02 00:25:12+00:00,,0,krenehan/MOANA3_Rigid_2by1_XEM7010_Verilog,531727605,Verilog,MOANA3_Rigid_2by1_XEM7010_Verilog,17279,0,2022-09-30 12:46:09+00:00,[],None
498,https://github.com/iaakash47/Design_Files.git,2022-09-04 08:16:26+00:00,,0,iaakash47/Design_Files,532478452,Verilog,Design_Files,1489,0,2022-09-04 08:59:47+00:00,[],https://api.github.com/licenses/apache-2.0
499,https://github.com/DoubiZhizun/Chainsaw2.git,2022-09-04 06:18:46+00:00,,0,DoubiZhizun/Chainsaw2,532455780,Verilog,Chainsaw2,67792,0,2022-09-04 06:21:05+00:00,[],None
500,https://github.com/linuxjbl/DE1_VGA.git,2022-09-04 06:57:42+00:00,DE1 SOC for VGA Verilog,0,linuxjbl/DE1_VGA,532462955,Verilog,DE1_VGA,11,0,2022-09-04 20:07:32+00:00,[],None
501,https://github.com/Jigyanshu26/Frequency-Divider.git,2022-09-16 04:17:18+00:00,,0,Jigyanshu26/Frequency-Divider,537302127,Verilog,Frequency-Divider,74,0,2022-09-16 04:18:15+00:00,[],None
502,https://github.com/eminbustun/CS303.git,2022-09-16 07:14:03+00:00,Logic and Digital System Design,0,eminbustun/CS303,537347126,Verilog,CS303,246,0,2023-10-08 11:46:35+00:00,"['countdown', 'verilog']",None
503,https://github.com/mohammadsayeemsadathossain/Vending-Machine-Using-Verilog-HDL-with-RTL-Diagram.git,2022-09-17 16:15:24+00:00,,0,mohammadsayeemsadathossain/Vending-Machine-Using-Verilog-HDL-with-RTL-Diagram,537862818,Verilog,Vending-Machine-Using-Verilog-HDL-with-RTL-Diagram,129,0,2022-09-17 16:26:49+00:00,[],None
504,https://github.com/keshav12roy/stopwatch.git,2022-09-13 14:10:16+00:00,,0,keshav12roy/stopwatch,536157516,Verilog,stopwatch,4,0,2022-09-13 14:18:18+00:00,[],None
505,https://github.com/Jerry0708/ICC_2022_grad_cell.git,2022-09-16 15:53:00+00:00,,0,Jerry0708/ICC_2022_grad_cell,537524036,Verilog,ICC_2022_grad_cell,33,0,2022-09-17 08:02:33+00:00,[],None
506,https://github.com/Jerry0708/ICC_2021_grad_cell.git,2022-09-16 16:27:30+00:00,,0,Jerry0708/ICC_2021_grad_cell,537535917,Verilog,ICC_2021_grad_cell,128,0,2022-09-16 16:34:07+00:00,[],None
507,https://github.com/omarzalah/Reset_SYNC.git,2022-09-14 17:52:00+00:00,,0,omarzalah/Reset_SYNC,536698019,Verilog,Reset_SYNC,6,0,2022-09-14 17:52:49+00:00,[],None
508,https://github.com/cynthiaagbekodo/uP-VerilogDesign.git,2022-09-14 23:48:04+00:00,This is a MIPS architecture design done in Verilog.,0,cynthiaagbekodo/uP-VerilogDesign,536796801,Verilog,uP-VerilogDesign,1040,0,2022-09-19 00:38:22+00:00,[],None
509,https://github.com/robinyangyanfeng/ahb_sram.git,2022-09-13 02:41:56+00:00,,1,robinyangyanfeng/ahb_sram,535931398,Verilog,ahb_sram,1479,0,2022-09-13 02:47:31+00:00,[],https://api.github.com/licenses/gpl-3.0
510,https://github.com/BowenKwan/finnTech.git,2022-09-13 12:24:48+00:00,Low Latency Neural Network for Financial trading Sytems,0,BowenKwan/finnTech,536113979,Verilog,finnTech,128432,0,2023-01-23 11:59:48+00:00,[],None
511,https://github.com/SSNRobot/Spiking-Neural-Network.git,2022-09-13 18:35:02+00:00,,0,SSNRobot/Spiking-Neural-Network,536261969,Verilog,Spiking-Neural-Network,75,0,2023-01-31 20:50:58+00:00,[],None
512,https://github.com/IvanXiang/FPGA_UART.git,2022-09-14 08:06:41+00:00,,0,IvanXiang/FPGA_UART,536475439,Verilog,FPGA_UART,11,0,2022-09-14 08:09:29+00:00,[],None
513,https://github.com/SuperMB/ArcticFoxGCD.git,2022-09-17 00:14:16+00:00,,0,SuperMB/ArcticFoxGCD,537655088,Verilog,ArcticFoxGCD,13,0,2022-09-17 00:26:52+00:00,[],https://api.github.com/licenses/bsd-3-clause
514,https://github.com/AshCoder232/Lift-Controller-Using-FPGA.git,2022-09-17 12:41:14+00:00,Lift controller implemention using FPGA,0,AshCoder232/Lift-Controller-Using-FPGA,537804842,Verilog,Lift-Controller-Using-FPGA,2,0,2022-09-17 12:42:41+00:00,[],None
515,https://github.com/BocchiChen/ECE550-CPU-Construction.git,2022-09-17 22:19:31+00:00,,0,BocchiChen/ECE550-CPU-Construction,537943240,Verilog,ECE550-CPU-Construction,55,0,2023-02-06 21:03:09+00:00,[],None
516,https://github.com/Martin-Enghoy/LBYCPC4-Repo.git,2022-09-09 01:51:47+00:00,This repository stores the course files created in our LBYCPC4 laboratory class.,1,Martin-Enghoy/LBYCPC4-Repo,534460860,Verilog,LBYCPC4-Repo,118,0,2022-09-09 01:53:36+00:00,[],None
517,https://github.com/JulieCowley/Basys3-VGA.git,2022-09-08 17:26:15+00:00,Testing out the VGA connector on the Basys3 FPGA. Wrote a little state machine to cycle through some colors whenever the center button is pressed.,0,JulieCowley/Basys3-VGA,534320508,Verilog,Basys3-VGA,7,0,2022-09-08 18:36:35+00:00,[],None
518,https://github.com/JatinKhare/verification-of-digital-systems.git,2022-09-06 02:34:18+00:00,,0,JatinKhare/verification-of-digital-systems,533133351,Verilog,verification-of-digital-systems,19959,0,2022-09-09 02:37:17+00:00,[],None
519,https://github.com/gNogr/MemControler.git,2022-09-01 13:01:42+00:00,Projeto TCC para Controlador de Memmória,0,gNogr/MemControler,531521390,Verilog,MemControler,8149,0,2023-05-19 00:46:44+00:00,[],None
520,https://github.com/ccw1999/2022DIC_Final_Project.git,2022-09-01 09:52:18+00:00,"In digital TV technology, videos or images will be compressed before  transmission to transmit a huge amount of image data efficiently. The compressed  data are then transmitted via satellite, terrestrial radio, or cable. After the Digital  TV at the end-user side receives the compressed image data, it will decompress  them with the built-in digital IC. Finally, the decompressed images are interpolated  to provide different resolutions according to the specifications of the monitors.",1,ccw1999/2022DIC_Final_Project,531457764,Verilog,2022DIC_Final_Project,3,0,2022-09-01 09:53:00+00:00,[],None
521,https://github.com/Vaishnavinara7/ECE369A.git,2022-09-01 18:13:18+00:00,,1,Vaishnavinara7/ECE369A,531635414,Verilog,ECE369A,7,0,2022-09-01 18:14:28+00:00,[],None
522,https://github.com/BBScholar/ECSE318.git,2022-09-11 06:02:14+00:00,,0,BBScholar/ECSE318,535205738,Verilog,ECSE318,19918,0,2023-02-10 08:14:40+00:00,[],None
523,https://github.com/MontMor4/projetoMemoriaCache.git,2022-09-10 23:07:28+00:00,Memória cache com hierarquia para memória principal criada utilizando a linguagem de descrição de hardware VerilogHDL,0,MontMor4/projetoMemoriaCache,535140111,Verilog,projetoMemoriaCache,7326,0,2022-09-10 23:13:29+00:00,[],None
524,https://github.com/ErenYagar/B_bro_YT_vivado.git,2022-09-11 14:29:16+00:00,YT的範例教學,0,ErenYagar/B_bro_YT_vivado,535323478,Verilog,B_bro_YT_vivado,11,0,2022-09-11 14:33:45+00:00,[],None
525,https://github.com/Mohammed-afnan/DEBOUNCE-CKT.git,2022-09-11 14:53:26+00:00,RTL code for DEBOUNCE circuit which when a bit file is created and is dumped in FPGA board to check it's functionality.,0,Mohammed-afnan/DEBOUNCE-CKT,535330319,Verilog,DEBOUNCE-CKT,4,0,2022-09-11 14:54:07+00:00,[],None
526,https://github.com/13arn/tinytapeout_counter_steamdeck.git,2022-08-31 20:31:41+00:00,Built entirely on a Steamdeck! Tinytapeout with some combinational logic and a counter based on this utexas presentation https://www.cs.utexas.edu/users/fussell/courses/cs310/lectures/cs310-lecture7.pdf,1,13arn/tinytapeout_counter_steamdeck,531249011,Verilog,tinytapeout_counter_steamdeck,12,0,2022-08-31 20:34:51+00:00,[],https://api.github.com/licenses/apache-2.0
527,https://github.com/marcusmueller/xoroshiro128-tapeout.git,2022-08-31 21:32:34+00:00,,0,marcusmueller/xoroshiro128-tapeout,531265992,Verilog,xoroshiro128-tapeout,10,0,2022-08-31 21:32:41+00:00,[],https://api.github.com/licenses/apache-2.0
528,https://github.com/anishasharma99/Booth-Multiplier.git,2022-09-02 14:19:13+00:00,,0,anishasharma99/Booth-Multiplier,531955104,Verilog,Booth-Multiplier,119,0,2022-09-02 14:21:19+00:00,[],None
529,https://github.com/barbeque/mioc-verilog.git,2022-09-02 23:17:14+00:00,Verilog repo of the MIOC asic for the ADAM computer system,0,barbeque/mioc-verilog,532103897,Verilog,mioc-verilog,10823,0,2022-09-02 23:17:48+00:00,[],None
530,https://github.com/keshav12roy/voting.git,2022-09-05 20:58:22+00:00,,0,keshav12roy/voting,533058174,Verilog,voting,20,0,2022-09-05 21:00:15+00:00,[],None
531,https://github.com/Ashraful-89/VerilogCode.git,2022-09-07 14:01:07+00:00,,0,Ashraful-89/VerilogCode,533791354,Verilog,VerilogCode,1015,0,2022-09-07 14:28:50+00:00,[],None
532,https://github.com/GeorgieYan/FPGA_accelerator.git,2022-09-08 03:23:28+00:00,,0,GeorgieYan/FPGA_accelerator,534034187,Verilog,FPGA_accelerator,20,0,2022-09-28 06:52:35+00:00,[],None
533,https://github.com/MyGithubAccount01/wrapped_rgb_mixer.git,2022-09-02 11:46:27+00:00,,0,MyGithubAccount01/wrapped_rgb_mixer,531903500,Verilog,wrapped_rgb_mixer,1370,0,2022-09-02 11:46:33+00:00,[],https://api.github.com/licenses/apache-2.0
534,https://github.com/nishantwill/MIPS32.git,2022-09-03 08:55:27+00:00,,0,nishantwill/MIPS32,532206786,Verilog,MIPS32,2,0,2022-09-03 09:01:13+00:00,[],None
535,https://github.com/peterwu-1031/smith-waterman.git,2022-09-03 07:04:00+00:00,Smith-Waterman algorithm for short-read mapping,0,peterwu-1031/smith-waterman,532183805,Verilog,smith-waterman,4305,0,2023-11-30 07:57:02+00:00,[],None
536,https://github.com/MarleyLobao/Single-Cycle_MIPS_Processor.git,2022-09-14 14:30:45+00:00,This repository holds files related to the development of a Single-Cycle Processor developed during the Digital Systems Architecture course.,0,MarleyLobao/Single-Cycle_MIPS_Processor,536618666,Verilog,Single-Cycle_MIPS_Processor,29,0,2023-03-21 03:03:57+00:00,"['hardware-designs', 'mips-assembly', 'single-cycle-processor']",https://api.github.com/licenses/mit
537,https://github.com/sebas0163/decodificador_Grey.git,2022-09-17 22:25:08+00:00,,0,sebas0163/decodificador_Grey,537944153,Verilog,decodificador_Grey,325,0,2022-10-03 23:21:05+00:00,[],None
538,https://github.com/snapdensing/tutorial.git,2022-09-17 12:44:48+00:00,Various tool tutorials,0,snapdensing/tutorial,537805689,Verilog,tutorial,521,0,2022-09-17 12:46:53+00:00,[],None
539,https://github.com/peterjose/LME_micro_electronics_lab.git,2022-09-17 10:21:47+00:00,Micro Electronics Lab 2022,0,peterjose/LME_micro_electronics_lab,537771917,Verilog,LME_micro_electronics_lab,60,0,2022-09-19 10:41:16+00:00,"['fpga', 'artix-7', 'basys2', 'matlab', 'lme', 'saarland-university', 'hdmi', 'displays', 'hardware', 'image-processing']",None
540,https://github.com/JBuos2017/ECE_exp2_JB.git,2022-09-16 12:31:37+00:00,서울시립대학교 전자전기컴퓨터공학부 전전설2 과목,0,JBuos2017/ECE_exp2_JB,537449422,Verilog,ECE_exp2_JB,32,0,2022-09-16 12:41:02+00:00,[],None
541,https://github.com/MeaquaZZ/aes_core_syn.git,2022-08-31 12:49:30+00:00,open core aes_core,0,MeaquaZZ/aes_core_syn,531082044,Verilog,aes_core_syn,3261,0,2022-09-01 02:08:34+00:00,[],None
542,https://github.com/zacyangs/i2c_master.git,2022-08-31 06:45:35+00:00,,0,zacyangs/i2c_master,530965587,Verilog,i2c_master,1532,0,2022-08-31 06:58:05+00:00,[],None
543,https://github.com/YuanJennySui/ISML_ChipDriver.git,2022-09-01 02:45:22+00:00,,0,YuanJennySui/ISML_ChipDriver,531338222,Verilog,ISML_ChipDriver,3,0,2022-09-01 02:46:23+00:00,[],None
544,https://github.com/thedhruvrawat/comparch.git,2022-09-03 06:34:59+00:00,"This repository contains all the laboratory coursework for the course CS F342: Computer Architechture at BITS Pilani, Pilani Campus (Fall '22)",0,thedhruvrawat/comparch,532178086,Verilog,comparch,1976,0,2023-01-01 11:57:20+00:00,"['computer-architecture', 'verilog']",None
545,https://github.com/mattvenn/tinytapeout-341802448429515346.git,2022-09-03 17:44:42+00:00,,1,mattvenn/tinytapeout-341802448429515346,532332835,Verilog,tinytapeout-341802448429515346,10,0,2022-09-03 17:44:47+00:00,[],https://api.github.com/licenses/apache-2.0
546,https://github.com/srm1071/CS666.git,2022-09-03 04:35:01+00:00,,0,srm1071/CS666,532155585,Verilog,CS666,255,0,2022-09-03 04:36:38+00:00,[],None
547,https://github.com/Hemashree2002/Processor.git,2022-09-04 16:24:27+00:00,,0,Hemashree2002/Processor,532593592,Verilog,Processor,2082,0,2022-09-04 16:28:41+00:00,[],None
548,https://github.com/KnowAashish/Verilog.git,2022-09-04 17:00:41+00:00,This repository contains conceptual codes of Verilog.,0,KnowAashish/Verilog,532602607,Verilog,Verilog,47,0,2023-10-11 21:36:23+00:00,[],None
549,https://github.com/MertKulte/deneme.git,2022-09-04 03:22:58+00:00,Deneme,0,MertKulte/deneme,532427689,Verilog,deneme,297,0,2022-12-09 10:25:06+00:00,[],https://api.github.com/licenses/gpl-3.0
550,https://github.com/cyril0124/iverilog_template.git,2022-09-08 03:06:18+00:00,,0,cyril0124/iverilog_template,534029954,Verilog,iverilog_template,6,0,2022-09-08 08:59:36+00:00,[],None
551,https://github.com/TharunsaiBestha/OBC_DCT.git,2022-09-08 18:12:49+00:00,,0,TharunsaiBestha/OBC_DCT,534338063,Verilog,OBC_DCT,108,0,2022-09-08 18:20:02+00:00,[],None
552,https://github.com/ratul619/OPENLANE.git,2022-09-09 06:31:50+00:00,,0,ratul619/OPENLANE,534526421,Verilog,OPENLANE,633,0,2022-09-09 06:33:44+00:00,[],https://api.github.com/licenses/apache-2.0
553,https://github.com/mehtayash1947/EE2003.git,2022-09-06 11:29:33+00:00,"Computer Organization Course, Autumn 2022",0,mehtayash1947/EE2003,533293738,Verilog,EE2003,2,0,2022-09-06 11:31:44+00:00,[],None
554,https://github.com/ECEahnbin/ECE_exp2.git,2022-09-07 07:27:39+00:00,서울시립대학교 전자전기컴퓨터공학부 전전설2과목,0,ECEahnbin/ECE_exp2,533655110,Verilog,ECE_exp2,3,0,2022-09-12 08:58:07+00:00,[],None
555,https://github.com/arfanghani/ag_tinytapeout.git,2022-09-05 18:25:36+00:00,,0,arfanghani/ag_tinytapeout,533015086,Verilog,ag_tinytapeout,9,0,2023-09-20 02:29:47+00:00,[],https://api.github.com/licenses/apache-2.0
556,https://github.com/filippocarastro/Project1.git,2022-09-06 05:16:02+00:00,,0,filippocarastro/Project1,533171222,Verilog,Project1,6124,0,2022-09-06 05:16:18+00:00,[],https://api.github.com/licenses/apache-2.0
557,https://github.com/AidanMedcalf/sky130_sonos_array.git,2022-09-09 13:39:07+00:00,Sky130 SONOS array for testing,0,AidanMedcalf/sky130_sonos_array,534658128,Verilog,sky130_sonos_array,87090,0,2022-09-09 13:39:13+00:00,[],https://api.github.com/licenses/apache-2.0
558,https://github.com/abdullahkhalids/TinyTapeout-hamming-code.git,2022-08-31 01:27:14+00:00,"My TinyTapeout 2022 submission, the design of a chip that implements the Hamming code ",1,abdullahkhalids/TinyTapeout-hamming-code,530892766,Verilog,TinyTapeout-hamming-code,12,0,2022-08-31 01:27:18+00:00,[],https://api.github.com/licenses/apache-2.0
559,https://github.com/JackLee65535/FPGA.git,2022-08-31 14:04:02+00:00,,0,JackLee65535/FPGA,531110916,Verilog,FPGA,20,0,2022-08-31 14:10:22+00:00,[],None
560,https://github.com/sfmth/caravel-test-ibnalhaytham.git,2022-09-01 07:43:02+00:00,test,0,sfmth/caravel-test-ibnalhaytham,531415164,Verilog,caravel-test-ibnalhaytham,22,0,2022-09-01 07:46:33+00:00,[],None
561,https://github.com/tzachari/tinytapeout-lab11.git,2022-09-02 05:51:16+00:00,TinyTapeout Project that spells out LAB11,1,tzachari/tinytapeout-lab11,531798487,Verilog,tinytapeout-lab11,84,0,2022-09-02 06:21:22+00:00,[],https://api.github.com/licenses/apache-2.0
562,https://github.com/DuaneSand/TinyTapeout-Hello.git,2022-09-01 22:57:28+00:00,Tiny Tapeout example which continually writes HELLO to the 7 segment display,1,DuaneSand/TinyTapeout-Hello,531710700,Verilog,TinyTapeout-Hello,7,0,2022-09-01 22:57:34+00:00,[],https://api.github.com/licenses/apache-2.0
563,https://github.com/Shalu-cod/Memory.git,2022-09-01 05:49:35+00:00,Code for memory design ,0,Shalu-cod/Memory,531381361,Verilog,Memory,3,0,2022-09-01 06:10:20+00:00,[],None
564,https://github.com/mmolteni-secpat/tinytapeout_chiDOM.git,2022-09-01 15:55:32+00:00,,0,mmolteni-secpat/tinytapeout_chiDOM,531588158,Verilog,tinytapeout_chiDOM,9,0,2022-09-01 15:55:39+00:00,[],https://api.github.com/licenses/apache-2.0
565,https://github.com/muhammadvip123/Single-Cycle-32-bits-MIPS-Processor-.git,2022-09-14 09:14:25+00:00,,0,muhammadvip123/Single-Cycle-32-bits-MIPS-Processor-,536499719,Verilog,Single-Cycle-32-bits-MIPS-Processor-,6,0,2022-09-14 09:27:29+00:00,[],None
566,https://github.com/jotagenazar/CPU_FPGA.git,2022-09-13 18:56:33+00:00,"Implementação e documentação correspondentes à atividade de elaboração de uma CPU para a FPGA CycloneV da disciplina de Prática em Sistemas Digitais, cursada em 2022 no ICMC da USP São Carlos ",0,jotagenazar/CPU_FPGA,536269155,Verilog,CPU_FPGA,19059,0,2022-10-18 19:43:26+00:00,[],None
567,https://github.com/omarzalah/Bit_Sync_with_parameterized_bus.git,2022-09-13 18:38:59+00:00,"Clock Domain Crossing (CDC) in digital domain is defined as the process of passing a signal or vector (multi bit signal) from one clock domain to another clock domain which introduce many issues as metastability, data incoherence and data loss. There are many techniques to synchronize asynchronous signals to avoid CDC issues as: -  Multi-Flop Synchronization Scheme: Used to synchronize single bit or multiple bits encoded in gray code.",0,omarzalah/Bit_Sync_with_parameterized_bus,536263328,Verilog,Bit_Sync_with_parameterized_bus,133,0,2022-09-13 18:40:01+00:00,[],None
568,https://github.com/GeoffreyBetts/mimasV2-clock.git,2022-09-13 11:57:14+00:00,12 hour clock project,0,GeoffreyBetts/mimasV2-clock,536103717,Verilog,mimasV2-clock,839,0,2022-09-30 12:03:20+00:00,"['fpga', 'verilog']",None
569,https://github.com/TharunsaiBestha/Quick_Sort.git,2022-09-12 17:27:48+00:00,,0,TharunsaiBestha/Quick_Sort,535777454,Verilog,Quick_Sort,19,0,2022-09-13 10:30:37+00:00,[],None
570,https://github.com/CRTejaswi/cpu-design.git,2022-09-12 06:23:41+00:00,,0,CRTejaswi/cpu-design,535537075,Verilog,cpu-design,1505,0,2022-09-12 06:23:52+00:00,[],None
571,https://github.com/Mohammed-afnan/7segment-display.git,2022-09-11 14:57:54+00:00,RTL code for 7 segment display with simulation code in .sv,0,Mohammed-afnan/7segment-display,535331610,Verilog,7segment-display,0,0,2022-09-11 14:59:12+00:00,[],None
572,https://github.com/lauchinyuan/log.git,2022-09-12 13:28:52+00:00,temporary log repository,0,lauchinyuan/log,535680167,Verilog,log,3,0,2022-09-12 14:54:36+00:00,[],None
573,https://github.com/RayCorleone/RRArbitor.git,2022-09-10 15:33:18+00:00,TJ 电子设计与自动化: 轮转仲裁器,0,RayCorleone/RRArbitor,535039962,Verilog,RRArbitor,239,0,2022-09-10 15:33:26+00:00,[],https://api.github.com/licenses/mit
574,https://github.com/jack-laverty/HDL.git,2022-09-11 01:54:49+00:00,Exploring Verilator 4.226 and GTKWave on Windows 11 / WSL,0,jack-laverty/HDL,535165216,Verilog,HDL,5587,0,2023-10-19 11:36:04+00:00,[],https://api.github.com/licenses/mit
575,https://github.com/MrShelDie/RISC-V-CPU.git,2022-09-11 17:52:02+00:00,The project is dedicated to the development of a processor with a RISC architecture that can be programmed in a high-level C language. The project is carried out for educational purposes and is based on a course of lectures and laboratory work on the architecture of microprocessor systems of the Moscow University of Electronic Technologies.,1,MrShelDie/RISC-V-CPU,535379823,Verilog,RISC-V-CPU,43219,0,2023-01-16 00:34:20+00:00,[],None
576,https://github.com/YousefSherif/Register_File.git,2022-09-14 17:26:57+00:00,This is the Verilog code and synthesis output of my parameterized register file that operates at 10 MHz.,0,YousefSherif/Register_File,536689311,Verilog,Register_File,643,0,2022-09-14 17:28:45+00:00,[],None
577,https://github.com/avidadearthur/DDC-Lab.git,2022-09-15 12:59:25+00:00,Verilog-FPGA Text Editor ,0,avidadearthur/DDC-Lab,537028324,Verilog,DDC-Lab,2714,0,2022-09-15 13:23:40+00:00,[],None
578,https://github.com/daheeeing/sogang.git,2022-09-05 06:16:28+00:00,,0,daheeeing/sogang,532767870,Verilog,sogang,24596,0,2023-12-15 09:28:42+00:00,[],None
579,https://github.com/kuku000/LOGIC-DESIGN.git,2022-09-02 12:55:58+00:00,,0,kuku000/LOGIC-DESIGN,531925760,Verilog,LOGIC-DESIGN,820,0,2024-03-01 16:22:37+00:00,[],None
580,https://github.com/Karthikeyan564/fantasy.git,2022-09-06 04:00:11+00:00,,0,Karthikeyan564/fantasy,533154184,Verilog,fantasy,2229,0,2022-09-06 04:00:27+00:00,[],https://api.github.com/licenses/apache-2.0
581,https://github.com/mgargano/tinytapeout_alu_with_4bit_7segmetdisplay_decoder.git,2022-09-01 01:55:35+00:00,,1,mgargano/tinytapeout_alu_with_4bit_7segmetdisplay_decoder,531325964,Verilog,tinytapeout_alu_with_4bit_7segmetdisplay_decoder,15,0,2022-09-01 01:55:39+00:00,[],https://api.github.com/licenses/apache-2.0
582,https://github.com/BarsMonster/MicroASIC.git,2022-09-01 02:13:44+00:00,Test ASIC for TinyTapeout #1,1,BarsMonster/MicroASIC,531330372,Verilog,MicroASIC,13,0,2022-09-01 02:13:49+00:00,[],https://api.github.com/licenses/apache-2.0
583,https://github.com/drvasanthi/caravel_test.git,2022-09-02 14:14:38+00:00,,0,drvasanthi/caravel_test,531953475,Verilog,caravel_test,56021,0,2022-09-02 15:09:34+00:00,[],https://api.github.com/licenses/apache-2.0
584,https://github.com/wrs225/caravel_user_project.git,2022-09-04 21:32:05+00:00,,0,wrs225/caravel_user_project,532663399,Verilog,caravel_user_project,2229,0,2022-09-04 21:32:17+00:00,[],https://api.github.com/licenses/apache-2.0
585,https://github.com/DanielLoeffeler/Simple-Binary-Calculator-for-Basysy3.git,2022-09-03 20:41:34+00:00,A simple on board binary calculator which will display its result input with the 16 switches on the 4 digit 7-segment display.,0,DanielLoeffeler/Simple-Binary-Calculator-for-Basysy3,532369530,Verilog,Simple-Binary-Calculator-for-Basysy3,8,0,2022-09-03 20:42:52+00:00,[],None
586,https://github.com/kshitizt/analog_chip.git,2022-09-07 05:44:55+00:00,,0,kshitizt/analog_chip,533623433,Verilog,analog_chip,108,0,2022-09-07 05:45:02+00:00,[],https://api.github.com/licenses/apache-2.0
587,https://github.com/mikecat/ihex4fpga.git,2022-09-15 10:38:54+00:00,,0,mikecat/ihex4fpga,536978225,Verilog,ihex4fpga,10,0,2022-09-15 13:47:32+00:00,[],https://api.github.com/licenses/mit
588,https://github.com/ShashankSirohiya/team_rrasna.git,2022-09-15 12:02:00+00:00,,0,ShashankSirohiya/team_rrasna,537006538,Verilog,team_rrasna,5,0,2023-01-17 09:59:50+00:00,[],None
589,https://github.com/AliceDu2002/Digital-Circuit.git,2022-09-15 15:07:42+00:00,,0,AliceDu2002/Digital-Circuit,537081918,Verilog,Digital-Circuit,60081,0,2022-12-28 17:46:39+00:00,[],None
590,https://github.com/niceguy135/APS.git,2022-09-12 08:40:16+00:00,,0,niceguy135/APS,535578398,Verilog,APS,2325,0,2022-10-08 20:29:11+00:00,[],None
591,https://github.com/RamyaIIIT/Caravel_4bitrc.git,2022-09-12 16:00:43+00:00,,0,RamyaIIIT/Caravel_4bitrc,535744536,Verilog,Caravel_4bitrc,2235,0,2022-09-12 16:00:58+00:00,[],https://api.github.com/licenses/apache-2.0
592,https://github.com/anishasharma99/Vending-Machine.git,2022-09-02 14:11:47+00:00,Made using verilog code and also made an ASM chart,0,anishasharma99/Vending-Machine,531952438,Verilog,Vending-Machine,1335,0,2022-09-02 14:52:11+00:00,[],None
593,https://github.com/Shalu-cod/Barrel_shifter.git,2022-09-01 05:54:21+00:00,,0,Shalu-cod/Barrel_shifter,531382668,Verilog,Barrel_shifter,1,0,2022-09-01 05:55:21+00:00,[],None
594,https://github.com/paller/tiny-tapeout.git,2022-09-01 18:50:30+00:00,,0,paller/tiny-tapeout,531647405,Verilog,tiny-tapeout,10,0,2022-09-01 19:52:11+00:00,[],https://api.github.com/licenses/apache-2.0
595,https://github.com/jerbo2/COMPUTER-ARCHITECTURE-PROCESSOR-BOES.git,2022-09-10 18:07:41+00:00,A fully functional 16-bit Harvard Architecture processor in Verilog using Intel’s Quartus.,0,jerbo2/COMPUTER-ARCHITECTURE-PROCESSOR-BOES,535079522,Verilog,COMPUTER-ARCHITECTURE-PROCESSOR-BOES,4175,0,2022-09-10 18:30:38+00:00,[],https://api.github.com/licenses/mit
596,https://github.com/ahmadirtisam/Single-Clock-FIFO-64X8.git,2022-09-11 08:02:45+00:00,,0,ahmadirtisam/Single-Clock-FIFO-64X8,535229856,Verilog,Single-Clock-FIFO-64X8,68,0,2022-11-26 13:10:50+00:00,[],None
597,https://github.com/ddm2000/Booths_Multiplier.git,2022-09-11 11:49:17+00:00,"In this project, we have designed the data path and the control path for a 5-bit multiplier, that uses the Booth’s algorithm to multiply the contents of two 5-bit registers to generate a 10-bit result.",0,ddm2000/Booths_Multiplier,535281941,Verilog,Booths_Multiplier,748,0,2022-09-17 12:14:44+00:00,[],None
598,https://github.com/VET4/MiniIntern.git,2022-09-11 12:28:50+00:00,,0,VET4/MiniIntern,535291622,Verilog,MiniIntern,2113,0,2022-09-21 06:02:52+00:00,[],None
599,https://github.com/zhuchi76/Computer_organization.git,2022-09-11 14:51:59+00:00,,0,zhuchi76/Computer_organization,535329917,Verilog,Computer_organization,13327,0,2022-09-11 14:55:19+00:00,[],None
600,https://github.com/SakethGajawada/iiitb_riscv32im.git,2022-08-31 21:16:41+00:00,,0,SakethGajawada/iiitb_riscv32im,531261757,Verilog,iiitb_riscv32im,13328,0,2022-09-08 08:53:15+00:00,[],None
601,https://github.com/Lixxxymaster/MIPS_kernel.git,2022-08-31 12:50:28+00:00,,0,Lixxxymaster/MIPS_kernel,531082438,Verilog,MIPS_kernel,593,0,2022-08-31 13:25:58+00:00,[],None
602,https://github.com/theFestest/tinytapeout-simple-invert8.git,2022-09-01 00:32:00+00:00,Simple 8-bit bitwise inverter to learn wokwi.,1,theFestest/tinytapeout-simple-invert8,531306557,Verilog,tinytapeout-simple-invert8,12,0,2022-09-01 00:32:05+00:00,[],https://api.github.com/licenses/apache-2.0
603,https://github.com/vlsimin2022/dma_cores.git,2022-09-09 16:36:34+00:00,,0,vlsimin2022/dma_cores,534723283,Verilog,dma_cores,532,0,2022-09-09 16:36:49+00:00,[],None
604,https://github.com/3321lilyth/Computer-Organization-2022-spring-NYCU.git,2022-09-16 07:53:13+00:00,,0,3321lilyth/Computer-Organization-2022-spring-NYCU,537359606,Verilog,Computer-Organization-2022-spring-NYCU,12248,0,2022-09-16 08:21:55+00:00,[],None
605,https://github.com/Luis0922/AOC-II---HierarquiaMemoriaInclusiva.git,2022-09-16 19:24:20+00:00,,0,Luis0922/AOC-II---HierarquiaMemoriaInclusiva,537592533,Verilog,AOC-II---HierarquiaMemoriaInclusiva,2123,0,2023-03-20 18:52:05+00:00,[],None
606,https://github.com/k-daisuke/caravel.git,2022-09-12 00:23:19+00:00,,0,k-daisuke/caravel,535461126,Verilog,caravel,2229,0,2022-09-12 00:23:34+00:00,[],https://api.github.com/licenses/apache-2.0
607,https://github.com/UofUECE3710/FSM_Example.git,2022-09-12 22:25:52+00:00,An example FSM with clock divider and latched enable signal,0,UofUECE3710/FSM_Example,535871213,Verilog,FSM_Example,4,0,2022-09-12 22:49:43+00:00,[],None
608,https://github.com/ashhhi/multicycle-cpu.git,2022-09-09 16:58:25+00:00,,0,ashhhi/multicycle-cpu,534731172,Verilog,multicycle-cpu,8,0,2022-09-09 17:10:49+00:00,[],None
609,https://github.com/malkam03/tinytapeout-game-of-life.git,2022-09-01 20:48:12+00:00,Based on https://github.com/wokwi/tt-game-of-life-cell-popcnt,1,malkam03/tinytapeout-game-of-life,531681517,Verilog,tinytapeout-game-of-life,7,0,2022-09-01 20:48:18+00:00,[],https://api.github.com/licenses/apache-2.0
610,https://github.com/sheganinans/fpga-ex.git,2022-09-02 02:26:29+00:00,A simple frequency divider in Clash,0,sheganinans/fpga-ex,531754256,Verilog,fpga-ex,35,0,2022-09-04 18:54:46+00:00,[],None
611,https://github.com/Samyuktha2805/sequence-detector.git,2022-09-01 11:07:27+00:00,,0,Samyuktha2805/sequence-detector,531481640,Verilog,sequence-detector,370,0,2022-09-01 11:16:54+00:00,[],None
612,https://github.com/mmolteni-secpat/tinytapeout_chi2shares.git,2022-09-01 13:53:00+00:00,,1,mmolteni-secpat/tinytapeout_chi2shares,531541439,Verilog,tinytapeout_chi2shares,13,0,2022-09-01 13:53:08+00:00,[],https://api.github.com/licenses/apache-2.0
613,https://github.com/Oishi-Seth/iiitb_riscv32im5.git,2022-09-01 10:18:02+00:00,,0,Oishi-Seth/iiitb_riscv32im5,531466163,Verilog,iiitb_riscv32im5,16448,0,2022-09-01 10:25:51+00:00,[],None
614,https://github.com/atharvathavale/Fan-Regulator---DDCO-Project.git,2022-09-05 16:04:40+00:00,This Project was a part of UE20CS201-Digital Design and Computer Organization coursework,0,atharvathavale/Fan-Regulator---DDCO-Project,532970527,Verilog,Fan-Regulator---DDCO-Project,1,0,2022-09-05 16:05:27+00:00,[],None
615,https://github.com/edith2k2/KGP_RISC.git,2022-09-06 13:41:14+00:00,,0,edith2k2/KGP_RISC,533342345,Verilog,KGP_RISC,1410,0,2022-09-06 13:42:31+00:00,[],None
616,https://github.com/cornell-c2s2/verif_tut.git,2022-09-07 03:00:05+00:00,A tutorial for using SymbiYosys for verification,0,cornell-c2s2/verif_tut,533582616,Verilog,verif_tut,20,0,2022-09-07 03:57:42+00:00,[],None
617,https://github.com/mahati-basavaraju/caravel_iiitb_piso.git,2022-09-06 05:54:01+00:00,,0,mahati-basavaraju/caravel_iiitb_piso,533180566,Verilog,caravel_iiitb_piso,2235,0,2022-09-06 05:54:13+00:00,[],https://api.github.com/licenses/apache-2.0
618,https://github.com/arbreshaejupi/CPU-16bit.git,2022-09-06 08:20:33+00:00,,1,arbreshaejupi/CPU-16bit,533227867,Verilog,CPU-16bit,665,0,2022-09-06 08:52:42+00:00,[],None
619,https://github.com/xiaowang2019/computer-architecture-lab.git,2022-09-08 01:33:42+00:00,computer architecture lab sources,0,xiaowang2019/computer-architecture-lab,534005267,Verilog,computer-architecture-lab,4,0,2022-09-08 01:36:19+00:00,[],None
620,https://github.com/rhit-davidsjt/deca-openmpw.git,2022-09-08 20:53:59+00:00,,0,rhit-davidsjt/deca-openmpw,534389871,Verilog,deca-openmpw,2404,0,2022-09-08 20:54:15+00:00,[],https://api.github.com/licenses/apache-2.0
621,https://github.com/sage-arts/VLIW-Processor.git,2022-09-09 15:50:59+00:00,,0,sage-arts/VLIW-Processor,534707496,Verilog,VLIW-Processor,13,0,2022-09-09 15:52:05+00:00,[],None
622,https://github.com/chithambaramoorthii/sram_test.git,2022-09-10 17:41:51+00:00,,0,chithambaramoorthii/sram_test,535073092,Verilog,sram_test,12686,0,2022-09-10 17:42:04+00:00,[],https://api.github.com/licenses/apache-2.0
623,https://github.com/MarcosPauloRamos/AOC.git,2022-09-10 10:30:38+00:00,,0,MarcosPauloRamos/AOC,534964410,Verilog,AOC,24,0,2022-09-10 11:42:25+00:00,[],None
624,https://github.com/YinChian/VSCode-Wave-Show.git,2022-08-31 20:57:46+00:00,Demo code of the article.,0,YinChian/VSCode-Wave-Show,531256431,Verilog,VSCode-Wave-Show,48,0,2022-08-31 21:02:51+00:00,[],None
625,https://github.com/craigcc-frii/tinytapeout_craig.git,2022-09-01 05:10:32+00:00,,1,craigcc-frii/tinytapeout_craig,531371685,Verilog,tinytapeout_craig,9,0,2022-09-01 05:10:36+00:00,[],https://api.github.com/licenses/apache-2.0
626,https://github.com/ritikmakhija/369Lab1.git,2022-08-31 22:53:14+00:00,,0,ritikmakhija/369Lab1,531284997,Verilog,369Lab1,8,0,2022-08-31 22:57:35+00:00,[],None
627,https://github.com/mahmoudkira/Single_Cycle_MIPS_Processor.git,2022-09-04 16:18:55+00:00,,0,mahmoudkira/Single_Cycle_MIPS_Processor,532592273,Verilog,Single_Cycle_MIPS_Processor,359,0,2022-09-04 16:24:17+00:00,[],None
628,https://github.com/jix/gh-create-test.git,2022-09-03 16:15:41+00:00,,0,jix/gh-create-test,532311225,Verilog,gh-create-test,1515,0,2022-09-03 16:15:51+00:00,[],None
629,https://github.com/sherif-omar111/Single-cycle-MIPS-processor-based-on-Harvard-architecture-using-Verilog-HDL.git,2022-09-03 16:35:10+00:00,,0,sherif-omar111/Single-cycle-MIPS-processor-based-on-Harvard-architecture-using-Verilog-HDL,532316072,Verilog,Single-cycle-MIPS-processor-based-on-Harvard-architecture-using-Verilog-HDL,102,0,2022-09-03 16:59:28+00:00,[],None
630,https://github.com/anishasharma99/Sequence-Detector.git,2022-09-02 14:23:10+00:00,Write a full Verilog code for Sequence Detector using Moore FSM. A Verilog Testbench for the Moore FSM sequence detector is also provided for simulation.,0,anishasharma99/Sequence-Detector,531956534,Verilog,Sequence-Detector,692,0,2022-09-02 14:24:32+00:00,[],None
631,https://github.com/prajwal0718/Functional-Coverage.git,2022-09-05 11:35:45+00:00,,0,prajwal0718/Functional-Coverage,532872769,Verilog,Functional-Coverage,5,0,2022-09-05 11:36:17+00:00,[],https://api.github.com/licenses/mit
632,https://github.com/snorbson/cip.git,2022-09-16 18:54:28+00:00,,0,snorbson/cip,537583981,Verilog,cip,7,0,2022-09-16 18:54:34+00:00,[],https://api.github.com/licenses/apache-2.0
633,https://github.com/binoy01/ANN_design_submission.git,2022-09-14 04:44:28+00:00,,0,binoy01/ANN_design_submission,536416302,Verilog,ANN_design_submission,2230,0,2022-09-14 04:44:43+00:00,[],https://api.github.com/licenses/apache-2.0
634,https://github.com/trevortaulien/FPGA_Programming_by_Verilog_Examples_by_Pong_Chu.git,2022-09-16 21:55:17+00:00,,0,trevortaulien/FPGA_Programming_by_Verilog_Examples_by_Pong_Chu,537630373,Verilog,FPGA_Programming_by_Verilog_Examples_by_Pong_Chu,34,0,2022-09-16 22:57:32+00:00,[],None
635,https://github.com/drvasanthi/sta.git,2022-09-17 13:04:00+00:00,,0,drvasanthi/sta,537810715,Verilog,sta,384,0,2022-09-19 17:57:02+00:00,[],None
636,https://github.com/Scienfreak/verilog-projects.git,2022-09-17 13:47:19+00:00,,0,Scienfreak/verilog-projects,537821867,Verilog,verilog-projects,9,0,2022-09-17 13:49:24+00:00,[],None
637,https://github.com/andars/tiny-tapeout-module-2.git,2022-08-31 01:45:46+00:00,,0,andars/tiny-tapeout-module-2,530897156,Verilog,tiny-tapeout-module-2,62,0,2022-08-31 01:46:03+00:00,[],https://api.github.com/licenses/apache-2.0
638,https://github.com/djsaye/fpga_tank_trouble.git,2022-08-31 03:52:47+00:00,The mini-game TankTrouble implemented on a NIOS-II based SoC on Altera FPGA,0,djsaye/fpga_tank_trouble,530927436,Verilog,fpga_tank_trouble,39132,0,2023-07-02 04:40:59+00:00,[],None
639,https://github.com/Azeem-M/Processor-Project.git,2022-08-31 02:27:42+00:00,This project is for a 16-bit processor written in Verilog. The processor supports many different instructions.,0,Azeem-M/Processor-Project,530907554,Verilog,Processor-Project,17,0,2022-08-31 02:43:40+00:00,[],None
640,https://github.com/sfmth/seperate-submit-debug.git,2022-09-10 19:57:39+00:00,asdasd,0,sfmth/seperate-submit-debug,535105096,Verilog,seperate-submit-debug,30797,0,2022-09-10 20:10:26+00:00,[],https://api.github.com/licenses/apache-2.0
641,https://github.com/zhengxuan-luan/verify_soc.git,2022-09-10 14:46:16+00:00,,0,zhengxuan-luan/verify_soc,535027186,Verilog,verify_soc,245743,0,2022-09-10 14:57:59+00:00,[],https://api.github.com/licenses/apache-2.0
642,https://github.com/PaulDetterer/bc_aercounter.git,2022-09-10 09:07:52+00:00,Design of AER Counter in Bluespec,0,PaulDetterer/bc_aercounter,534946219,Verilog,bc_aercounter,4,0,2022-09-10 09:25:46+00:00,[],None
643,https://github.com/KKMOfficial/computer_architecture_project.git,2022-09-11 02:04:54+00:00,exmine and modify cache structure.,0,KKMOfficial/computer_architecture_project,535166846,Verilog,computer_architecture_project,521,0,2022-09-11 02:10:20+00:00,[],None
644,https://github.com/jerry0129/GCD.git,2022-09-10 03:01:08+00:00,,0,jerry0129/GCD,534874246,Verilog,GCD,140,0,2022-09-13 11:26:15+00:00,[],None
645,https://github.com/YukunXue/Genesys2_E203.git,2022-09-10 15:44:01+00:00,把E203移植到Genesys2,0,YukunXue/Genesys2_E203,535042670,Verilog,Genesys2_E203,398,0,2022-09-10 15:50:21+00:00,[],None
646,https://github.com/chiencheng890909/little-dinosaur.git,2022-09-13 09:02:22+00:00,1092 數位系統實驗（二）finalproject,1,chiencheng890909/little-dinosaur,536042308,Verilog,little-dinosaur,485,0,2022-09-13 09:06:23+00:00,[],None
647,https://github.com/yennergonzalez/Respaldo_Array_Multiplier.git,2022-09-14 15:44:14+00:00,,0,yennergonzalez/Respaldo_Array_Multiplier,536650559,Verilog,Respaldo_Array_Multiplier,492,0,2022-09-14 15:48:32+00:00,[],None
648,https://github.com/Sukki11/linux_commands.git,2022-09-14 10:41:43+00:00,Codes,0,Sukki11/linux_commands,536530713,Verilog,linux_commands,3,0,2022-09-15 05:11:27+00:00,[],None
649,https://github.com/nebhrajani-a/hamming.git,2022-09-13 15:33:01+00:00,Parametrizable Hamming code implementation in Verilog.,0,nebhrajani-a/hamming,536193087,Verilog,hamming,147,0,2022-09-27 07:17:09+00:00,[],None
650,https://github.com/YuanJennySui/ISML_SineStimDriver.git,2022-09-01 21:01:09+00:00,,0,YuanJennySui/ISML_SineStimDriver,531684834,Verilog,ISML_SineStimDriver,6,0,2024-02-26 01:35:03+00:00,[],None
651,https://github.com/EmbeddedCamerata/genesys2_e203_hbirdv2.git,2022-09-11 07:37:37+00:00,The E203 Hbirdv2 RISC-V Core transplanted on Genesys2,1,EmbeddedCamerata/genesys2_e203_hbirdv2,535224606,Verilog,genesys2_e203_hbirdv2,60371,0,2024-04-09 03:36:27+00:00,[],https://api.github.com/licenses/apache-2.0
652,https://github.com/grussdorian/verilog-playground.git,2022-09-11 21:55:03+00:00,NPTEL Verilog playground,0,grussdorian/verilog-playground,535435690,Verilog,verilog-playground,33,0,2022-10-18 06:07:36+00:00,[],None
653,https://github.com/brookliu888/SystemVerilogPractice.git,2022-09-11 12:05:44+00:00,,0,brookliu888/SystemVerilogPractice,535285925,Verilog,SystemVerilogPractice,4,0,2022-09-12 12:46:45+00:00,[],None
654,https://github.com/Kyorge/fpga.git,2022-09-13 14:55:56+00:00,Курс осень 2022,0,Kyorge/fpga,536177757,Verilog,fpga,4300,0,2022-11-01 17:52:52+00:00,[],None
655,https://github.com/jainpranav1/kid_icarus.git,2022-09-04 06:09:10+00:00,,0,jainpranav1/kid_icarus,532454054,Verilog,kid_icarus,3,0,2022-09-04 06:11:20+00:00,[],None
656,https://github.com/coolhou/github_first_day.git,2022-09-05 13:14:36+00:00,new start,0,coolhou/github_first_day,532907959,Verilog,github_first_day,4,0,2022-09-05 13:35:49+00:00,[],None
657,https://github.com/prajwal0718/Processor.git,2022-09-02 12:38:10+00:00,Simple Processor is created in verilog and tested ,0,prajwal0718/Processor,531919826,Verilog,Processor,6,0,2022-09-02 12:38:55+00:00,[],None
658,https://github.com/IvanXiang/FPGA_SDRAM.git,2022-09-14 08:15:24+00:00,,0,IvanXiang/FPGA_SDRAM,536478419,Verilog,FPGA_SDRAM,29,0,2022-09-14 08:17:00+00:00,[],None
659,https://github.com/rephos35/Verilog.git,2022-09-14 21:03:11+00:00,CPU,0,rephos35/Verilog,536758731,Verilog,Verilog,11052,0,2022-09-14 21:09:26+00:00,[],None
660,https://github.com/JeanDaBleaque/cse4117_fpga_examples.git,2022-09-14 23:51:18+00:00,Some conceptual FPGA examples which i did for Microprocessors (CSE4117) summer school while i was laboratory assistant.,0,JeanDaBleaque/cse4117_fpga_examples,536797526,Verilog,cse4117_fpga_examples,5,0,2022-09-14 23:55:22+00:00,[],None
661,https://github.com/CRTejaswi/neural-nets.git,2022-09-12 04:29:46+00:00,,0,CRTejaswi/neural-nets,535510938,Verilog,neural-nets,2,0,2022-12-01 12:21:00+00:00,[],None
662,https://github.com/cmfbook/PRGA-test.git,2022-09-11 02:29:03+00:00,,0,cmfbook/PRGA-test,535170597,Verilog,PRGA-test,473620,0,2022-09-11 03:13:23+00:00,[],https://api.github.com/licenses/apache-2.0
663,https://github.com/yuchengwang1121/VLSI-System-Design.git,2022-09-14 06:18:36+00:00,,0,yuchengwang1121/VLSI-System-Design,536439986,Verilog,VLSI-System-Design,313188,0,2023-06-07 15:48:32+00:00,[],None
664,https://github.com/m4ury4p/caravel_iiitb_tlc.git,2022-09-15 18:56:34+00:00,caravel repo,0,m4ury4p/caravel_iiitb_tlc,537167529,Verilog,caravel_iiitb_tlc,2230,0,2022-09-15 18:56:47+00:00,[],https://api.github.com/licenses/apache-2.0
665,https://github.com/burakelhaman/FPGA-Verilog-Projects.git,2022-09-15 21:33:49+00:00,,0,burakelhaman/FPGA-Verilog-Projects,537213159,Verilog,FPGA-Verilog-Projects,12529,0,2022-09-15 21:37:17+00:00,[],None
666,https://github.com/DrowningFishHappyStill/FPGA_IP.git,2022-09-02 04:36:06+00:00,,0,DrowningFishHappyStill/FPGA_IP,531782208,Verilog,FPGA_IP,7,0,2022-09-02 04:39:42+00:00,[],None
667,https://github.com/dominic-meads/CAN_2.0.git,2022-08-31 03:08:12+00:00,CAN_2.0,0,dominic-meads/CAN_2.0,530917306,Verilog,CAN_2.0,366,0,2022-12-08 21:17:07+00:00,[],None
668,https://github.com/ThorKn/tinytapeout_shiftregister_8bit.git,2022-08-31 11:18:35+00:00,Shiftregister 8-bit: A mikrochip design for tapeout with SKY130 MPW via tinytapeouts.,1,ThorKn/tinytapeout_shiftregister_8bit,531050423,Verilog,tinytapeout_shiftregister_8bit,318,0,2022-10-03 18:03:12+00:00,[],https://api.github.com/licenses/apache-2.0
669,https://github.com/Shalu-cod/Booth_multiplier.git,2022-09-01 10:50:51+00:00,,0,Shalu-cod/Booth_multiplier,531476359,Verilog,Booth_multiplier,2,0,2022-09-01 10:54:41+00:00,[],None
670,https://github.com/andars/universal-turing-machine-aw7s8.git,2022-08-31 19:40:01+00:00,,1,andars/universal-turing-machine-aw7s8,531233322,Verilog,universal-turing-machine-aw7s8,44,0,2022-08-31 19:40:23+00:00,[],https://api.github.com/licenses/apache-2.0
671,https://github.com/azzeloof/FunPGAs.git,2022-08-31 20:29:33+00:00,,0,azzeloof/FunPGAs,531248401,Verilog,FunPGAs,22,0,2022-08-31 20:45:43+00:00,[],https://api.github.com/licenses/gpl-3.0
672,https://github.com/todd1251/tinytapeout-figure8.git,2022-08-31 16:05:56+00:00,Figure 8 pattern generator,1,todd1251/tinytapeout-figure8,531159062,Verilog,tinytapeout-figure8,48,0,2022-09-23 22:43:29+00:00,['tinytapeout'],https://api.github.com/licenses/apache-2.0
673,https://github.com/OmarMiniesy/FPGA-Calculator.git,2022-09-09 13:20:03+00:00,"FPGA calculator that operates using switches and buttons to add, subtract, multiply, and divide.",0,OmarMiniesy/FPGA-Calculator,534651146,Verilog,FPGA-Calculator,7,0,2022-09-09 13:21:01+00:00,[],None
674,https://github.com/benturakash/doorSecuritySystem.git,2022-09-10 03:38:36+00:00,,0,benturakash/doorSecuritySystem,534881136,Verilog,doorSecuritySystem,2,0,2022-09-10 03:39:07+00:00,[],None
675,https://github.com/mo2men3la2/Pipelined-MIPS-Processor.git,2022-09-16 18:13:17+00:00,"In this project, I have implemented a 32-bit Pipelined microarchitecture MIPS processor based on Harvard Architecture. My design provides early branch prediction and it has a hazard control unit that handles both data and control hazards by Forwarding, Stalling or Flushing), the design is simulated on ModelSim tool.",0,mo2men3la2/Pipelined-MIPS-Processor,537571421,Verilog,Pipelined-MIPS-Processor,86,0,2022-09-16 19:23:11+00:00,[],None
676,https://github.com/christianeaton/wokwi-verilog-gds-test..git,2022-09-16 18:30:50+00:00,,0,christianeaton/wokwi-verilog-gds-test.,537576891,Verilog,wokwi-verilog-gds-test.,7,0,2022-09-16 19:14:32+00:00,[],https://api.github.com/licenses/apache-2.0
677,https://github.com/kenryu621/SP-22-CECS-341-Lab-6.git,2022-09-17 07:36:31+00:00,Lab 6 assignment from Spring 2022 CECS 341 Computer Architecture of CSULB,0,kenryu621/SP-22-CECS-341-Lab-6,537734530,Verilog,SP-22-CECS-341-Lab-6,1028,0,2022-09-17 10:19:47+00:00,[],None
678,https://github.com/Perumaltuty/Pratice-Code.git,2022-09-17 07:06:15+00:00,,0,Perumaltuty/Pratice-Code,537727933,Verilog,Pratice-Code,75,0,2022-09-17 07:08:16+00:00,[],None
679,https://github.com/kenryu621/SP-22-CECS-341-Lab-4.git,2022-09-17 07:28:39+00:00,Lab 4 assignment from Spring 2022 CECS 341 Computer Architecture of CSULB,0,kenryu621/SP-22-CECS-341-Lab-4,537732745,Verilog,SP-22-CECS-341-Lab-4,16532,0,2022-09-17 10:17:53+00:00,[],None
680,https://github.com/MahmoudH2000/Low_Power_Communacation_System.git,2022-09-17 10:55:46+00:00,,0,MahmoudH2000/Low_Power_Communacation_System,537779864,Verilog,Low_Power_Communacation_System,2248,0,2022-09-17 11:05:24+00:00,[],None
681,https://github.com/marwan-ramzi/MIPS_pipelined.git,2022-09-07 13:44:52+00:00,,0,marwan-ramzi/MIPS_pipelined,533784667,Verilog,MIPS_pipelined,1581,0,2023-02-10 12:10:41+00:00,[],None
682,https://github.com/ceceliabeyers/EE4292-ICLAB.git,2022-09-05 19:51:17+00:00,,0,ceceliabeyers/EE4292-ICLAB,533040288,,EE4292-ICLAB,45645,0,2022-07-24 15:41:16+00:00,[],None
683,https://github.com/educhielle/MessageExtractor.git,2022-09-17 19:24:24+00:00,,0,educhielle/MessageExtractor,537909762,Verilog,MessageExtractor,820,0,2022-09-19 23:16:08+00:00,[],https://api.github.com/licenses/gpl-3.0
684,https://github.com/felixcamer/AI-based-FPGA-on-vivado.git,2022-09-16 14:47:10+00:00,,0,felixcamer/AI-based-FPGA-on-vivado,537500437,Verilog,AI-based-FPGA-on-vivado,11351,0,2022-09-19 21:58:05+00:00,[],None
