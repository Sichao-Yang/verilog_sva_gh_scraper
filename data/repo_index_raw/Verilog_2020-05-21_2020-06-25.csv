,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/vortexgpgpu/vortex.git,2020-06-18 17:24:17+00:00,,215,vortexgpgpu/vortex,273299204,Verilog,vortex,376724,1017,2024-04-12 12:31:11+00:00,[],https://api.github.com/licenses/apache-2.0
1,https://github.com/vipinkmenon/neuralNetwork.git,2020-06-01 18:39:14+00:00,,63,vipinkmenon/neuralNetwork,268603183,Verilog,neuralNetwork,22902,204,2024-04-12 02:34:22+00:00,[],https://api.github.com/licenses/mit
2,https://github.com/WangXuan95/FPGA-JPEG-LS-encoder.git,2020-06-16 12:03:48+00:00,"An FPGA-based JPEG-LS encoder, which provides lossless and near-lossless image compression with high compression ratios. 基于FPGA的JPEG-LS编码器，可实现高压缩率的无损/近无损图像压缩。",33,WangXuan95/FPGA-JPEG-LS-encoder,272697006,Verilog,FPGA-JPEG-LS-encoder,3283,167,2024-04-10 01:17:47+00:00,"['fpga', 'verilog', 'systemverilog', 'jpeg-ls', 'jpegls', 'jls', 'rtl', 'image-compression', 'image-encoder']",https://api.github.com/licenses/gpl-3.0
3,https://github.com/IObundle/iob-cache.git,2020-05-28 18:38:08+00:00,Verilog Configurable Cache,30,IObundle/iob-cache,267667881,Verilog,iob-cache,3089,142,2024-04-07 06:56:37+00:00,[],https://api.github.com/licenses/mit
4,https://github.com/MasLiang/CNN-On-FPGA.git,2020-05-26 07:24:26+00:00,FPGA,32,MasLiang/CNN-On-FPGA,266973287,Verilog,CNN-On-FPGA,2299,123,2024-03-30 09:07:24+00:00,[],None
5,https://github.com/ultraembedded/core_dvi_framebuffer.git,2020-06-20 11:52:20+00:00,Minimal DVI / HDMI Framebuffer,9,ultraembedded/core_dvi_framebuffer,273698307,Verilog,core_dvi_framebuffer,79,68,2024-03-03 16:17:47+00:00,"['hdmi', 'dvi', 'verilog', 'fpga', 'xilinx-fpga', 'video', 'framebuffer', 'axi4']",https://api.github.com/licenses/mit
6,https://github.com/Xilinx/XilinxUnisimLibrary.git,2020-06-25 21:56:30+00:00,Xilinx Unisim Library in Verilog,20,Xilinx/XilinxUnisimLibrary,275022713,Verilog,XilinxUnisimLibrary,1991,64,2024-02-02 08:07:44+00:00,[],https://api.github.com/licenses/apache-2.0
7,https://github.com/Kenji-Ishimaru/polyphony.git,2020-06-22 08:05:47+00:00,"3D graphics rendering system for FPGA, the project contains hardware rasterizer, software geometry engine, and application middleware.",15,Kenji-Ishimaru/polyphony,274077170,Verilog,polyphony,25421,60,2024-04-04 10:05:18+00:00,"['3d-graphics-rendering', 'verilog', 'fpga', 'zedboard', 'gpu', 'realtime-rendering']",https://api.github.com/licenses/mit
8,https://github.com/pwn2winctf/challenges-2020.git,2020-05-31 10:55:02+00:00,Pwn2Win 2020 Challenges,13,pwn2winctf/challenges-2020,268260853,Verilog,challenges-2020,13722,54,2024-03-19 04:28:59+00:00,[],None
9,https://github.com/ultraembedded/usb2sniffer.git,2020-05-25 13:58:52+00:00,USB2Sniffer: High Speed USB 2.0 capture (for LambdaConcept USB2Sniffer hardware),10,ultraembedded/usb2sniffer,266793246,Verilog,usb2sniffer,1263,46,2024-02-28 01:44:10+00:00,"['usb-scanning', 'usb-debugging', 'usb', 'usb2', 'fpga', 'xilinx-vivado', 'rtl', 'verilog', 'usb-analyzer', 'usb-sniffer', 'artix-7', 'lambdaconcept-usb2sniffer-hardware', 'wireshark']",None
10,https://github.com/acmert/parametric-ntt.git,2020-05-30 12:22:39+00:00,Parametric NTT/INTT Hardware Generator,6,acmert/parametric-ntt,268074237,Verilog,parametric-ntt,32,43,2024-03-31 15:54:50+00:00,[],None
11,https://github.com/IA-C-Lab-Fudan/KWS-SoC.git,2020-05-23 03:31:58+00:00,This is an SoC design dedicated to Keyword Spotting (KWS) based on a neural-network accelerator and the wujian100 platform.,17,IA-C-Lab-Fudan/KWS-SoC,266255956,Verilog,KWS-SoC,1232388,42,2024-04-01 13:48:01+00:00,[],None
12,https://github.com/jotego/jtopl.git,2020-06-10 13:58:41+00:00,Verilog module compatible with Yamaha OPL chips,9,jotego/jtopl,271291705,Verilog,jtopl,28631,41,2024-04-10 14:13:34+00:00,"['fm', 'retro', 'fpga', 'verilog']",https://api.github.com/licenses/gpl-3.0
13,https://github.com/GraphSAINT/GNN-ARCH.git,2020-06-15 02:44:39+00:00,[ASAP 2020; FPGA 2020] Hardware architecture to accelerate GNNs (common IP modules for minibatch training and full batch inference),10,GraphSAINT/GNN-ARCH,272326374,Verilog,GNN-ARCH,761,38,2024-03-13 08:20:52+00:00,"['gcn', 'fpga', 'accelerator', 'hardware-acceleration', 'graphsage']",None
14,https://github.com/citrus3000psi/3DORGB.git,2020-06-02 15:49:39+00:00,RGB Project for most 3DO consoles.,3,citrus3000psi/3DORGB,268843415,Verilog,3DORGB,732,31,2024-03-15 19:21:26+00:00,[],None
15,https://github.com/IObundle/iob-mem.git,2020-05-28 18:30:29+00:00,Verilog behavioral description of various memories,18,IObundle/iob-mem,267666301,Verilog,iob-mem,525,30,2023-12-26 14:27:24+00:00,[],https://api.github.com/licenses/mit
16,https://github.com/zengkaipeng/EI332.git,2020-06-07 11:56:04+00:00,SJTU EI332 CPU完整实验代码及报告,3,zengkaipeng/EI332,270291197,Verilog,EI332,28921,24,2024-01-16 15:35:32+00:00,[],None
17,https://github.com/mehrdadh/lora-modulator.git,2020-06-15 06:01:38+00:00,LoRa modulator implementation on Lattice ECP5 FPGA to interface with AT86RF215 I/Q Radio,8,mehrdadh/lora-modulator,272354901,Verilog,lora-modulator,10624,23,2024-04-10 14:04:06+00:00,"['lattice', 'ecp5', 'at86rf215', 'fpga', 'lora', 'modulator', 'iq', 'sdr']",https://api.github.com/licenses/mit
18,https://github.com/WayneGong/pwm_motor_system.git,2020-06-17 06:34:00+00:00,基于FPGA的PWM电机控制,8,WayneGong/pwm_motor_system,272896543,Verilog,pwm_motor_system,1234,19,2024-03-25 22:40:41+00:00,[],None
19,https://github.com/nicolaswilde/UCAS-Advanced-Computer-Architecture-OpenROAD-flow.git,2020-05-24 14:10:01+00:00,中国科学院大学高级计算机体系结构课程作业：使用OpenROAD-flow完成RTL到GDS全流程,5,nicolaswilde/UCAS-Advanced-Computer-Architecture-OpenROAD-flow,266554427,Verilog,UCAS-Advanced-Computer-Architecture-OpenROAD-flow,17124,18,2024-04-12 10:34:26+00:00,[],None
20,https://github.com/ultraembedded/core_usb_sniffer.git,2020-05-25 14:25:27+00:00,USB capture IP,8,ultraembedded/core_usb_sniffer,266799610,Verilog,core_usb_sniffer,24,18,2023-09-13 19:27:44+00:00,"['usb-debugging', 'usb2', 'verilog']",None
21,https://github.com/uw-x/lora-modulator.git,2020-06-24 15:24:58+00:00,,5,uw-x/lora-modulator,274703061,Verilog,lora-modulator,244,17,2024-01-02 12:01:10+00:00,[],https://api.github.com/licenses/mit
22,https://github.com/b1f6c1c4/Deep-DarkFantasy.git,2020-06-02 10:57:31+00:00,Global Dark Mode for ALL apps on ANY platforms.,0,b1f6c1c4/Deep-DarkFantasy,268776471,Verilog,Deep-DarkFantasy,4137,16,2022-11-10 17:19:08+00:00,"['dark-mode', 'dark-theme', 'dark-mode-toggle', 'fpga', 'verilog', 'verilog-hdl', 'vivado', 'xilinx', 'zynq', 'zynq-7000']",None
23,https://github.com/Speccery/icy99.git,2020-06-15 18:57:34+00:00,TI-99/4A FPGA implementation for the Icestorm toolchain,4,Speccery/icy99,272520166,Verilog,icy99,883,14,2024-02-28 14:45:03+00:00,[],None
24,https://github.com/dominic-meads/HDMI_FPGA.git,2020-06-12 04:22:24+00:00,HDMI with Verilog and an FPGA. ,3,dominic-meads/HDMI_FPGA,271707382,Verilog,HDMI_FPGA,1807,13,2024-02-27 02:19:54+00:00,[],https://api.github.com/licenses/mit
25,https://github.com/srpoyrek/RISC-V.git,2020-05-28 16:47:51+00:00,"Implementing a five-stage pipeline RSIC-V architecture (RV32I Core instruction set) using Verilog HDL. All the functional modules required including the Hazard detection unit, Forwarding Unit, Branch Prediction, and the Five pipeline stages are simulated and verified the functional testing with test benches on ModelSim.",1,srpoyrek/RISC-V,267644166,Verilog,RISC-V,15249,13,2024-03-06 01:23:40+00:00,[],https://api.github.com/licenses/gpl-3.0
26,https://github.com/IObundle/iob-picorv32.git,2020-05-28 21:28:38+00:00,IOb_SoC version of the Picorv32 RISC-V Verilog IP core,12,IObundle/iob-picorv32,267700470,Verilog,iob-picorv32,150,12,2024-01-05 04:41:22+00:00,[],None
27,https://github.com/Saanlima/RISC5Verilog_lpddr.git,2020-05-27 21:23:22+00:00,RISC5Verilog for Pipistrello using lpddr memory,1,Saanlima/RISC5Verilog_lpddr,267429192,Verilog,RISC5Verilog_lpddr,629,12,2023-11-07 12:54:44+00:00,[],None
28,https://github.com/mattvenn/fpga-fft.git,2020-05-27 17:11:59+00:00,,1,mattvenn/fpga-fft,267380299,Verilog,fpga-fft,20,11,2023-06-26 06:58:01+00:00,[],None
29,https://github.com/lesc-ufv/cgra-routing.git,2020-06-03 14:35:46+00:00,"SForum 2020 : ""A Run-time Hardware Routing Implementation for CGRA Overlays"" code and data.",1,lesc-ufv/cgra-routing,269112004,Verilog,cgra-routing,9962,11,2024-03-09 07:40:01+00:00,"['sforum', 'cgra', 'fpga', 'routing', 'verilog', 'hardware', 'legup']",None
30,https://github.com/RedFlag2017/rs-codec.git,2020-06-14 06:55:56+00:00,Reed Solomon Encoder and Decoder Digital IP,2,RedFlag2017/rs-codec,272149564,Verilog,rs-codec,270,11,2024-02-14 00:45:59+00:00,"['reedsolomon', 'rs', 'codec']",None
31,https://github.com/MiSTer-devel/EDSAC_MiSTer.git,2020-05-30 09:21:43+00:00,"FPGA Verilog implementation of 1949 EDSAC Computer with animated tape reader, panel, teleprinter and CRT scope",2,MiSTer-devel/EDSAC_MiSTer,268047365,Verilog,EDSAC_MiSTer,3612,11,2023-09-11 11:51:19+00:00,[],https://api.github.com/licenses/mit
32,https://github.com/mnnuahg/StamicCGRA.git,2020-06-21 13:31:20+00:00,A static dataflow CGRA with dynamic dataflow execution capability,1,mnnuahg/StamicCGRA,273910271,Verilog,StamicCGRA,461,10,2024-01-04 10:29:13+00:00,"['cgra', 'dataflow-computer-architecture']",https://api.github.com/licenses/mit
33,https://github.com/keyonhome/AXI4_LiteIP.git,2020-06-14 14:50:35+00:00,A verilog  FPGA Interface for AXI4_Lite from Slave side ,1,keyonhome/AXI4_LiteIP,272222613,Verilog,AXI4_LiteIP,186,10,2024-04-08 14:50:09+00:00,[],None
34,https://github.com/DaveBerkeley/fpga.git,2020-06-22 11:36:34+00:00,Verilog FPGA code : including experimental DSP audio processor,0,DaveBerkeley/fpga,274120325,Verilog,fpga,893,10,2023-04-02 15:41:44+00:00,[],None
35,https://github.com/lijiaxun-sgms/w25q128jvxim_v_sim.git,2020-06-07 04:50:26+00:00,Verilog Model for W25Q128JVxIM Serial Flash Memory,4,lijiaxun-sgms/w25q128jvxim_v_sim,270195782,Verilog,w25q128jvxim_v_sim,170,10,2024-03-21 05:34:15+00:00,[],https://api.github.com/licenses/unlicense
36,https://github.com/yifanlu0227/EI332-SJTU-2020.git,2020-06-11 02:43:59+00:00,SJTU-EI332 计算机组成实验 pipelined cpu,0,yifanlu0227/EI332-SJTU-2020,271435358,Verilog,EI332-SJTU-2020,12182,10,2024-03-10 08:40:40+00:00,[],None
37,https://github.com/marlls1989/pulsar.git,2020-06-10 14:07:53+00:00,Pulsar asynchronous synthesis framework,0,marlls1989/pulsar,271293893,Verilog,pulsar,12500,9,2022-11-13 21:45:51+00:00,[],None
38,https://github.com/pgroupATusc/GraphACT.git,2020-06-05 19:06:28+00:00,"Implementation of paper ""GraphACT: Accelerating GCN Training on CPU-FPGA Heterogeneous Platform"".",0,pgroupATusc/GraphACT,269747031,Verilog,GraphACT,66,9,2024-01-11 02:27:20+00:00,[],None
39,https://github.com/hi631/FPGA_DOS.git,2020-06-01 04:25:19+00:00,Run DOS with 8086 on FPGA,2,hi631/FPGA_DOS,268424521,Verilog,FPGA_DOS,2969,9,2023-12-17 21:17:13+00:00,[],None
40,https://github.com/mehrdadh/fsk-modulator.git,2020-06-15 06:02:54+00:00,FSK modulator implementation  Lattice ECP5 FPGA to interface with AT86RF215 I/Q Radio,7,mehrdadh/fsk-modulator,272355095,Verilog,fsk-modulator,5271,8,2023-09-12 10:50:25+00:00,"['lattice', 'ecp5', 'at86rf215', 'fpga', 'fsk', 'modulator', 'sdr', 'iq']",https://api.github.com/licenses/mit
41,https://github.com/alireza-shirzad/Cordic_tanh.git,2020-06-05 05:19:31+00:00,Verilog and matlab implementation of tanh using Cordic algorithm,2,alireza-shirzad/Cordic_tanh,269537423,Verilog,Cordic_tanh,76,8,2024-02-13 14:22:23+00:00,[],None
42,https://github.com/pgroupATusc/HitGraph.git,2020-06-08 18:29:02+00:00,"Source code for ""HitGraph: High-throughput Graph Processing""",2,pgroupATusc/HitGraph,270780730,Verilog,HitGraph,196,8,2023-10-31 03:40:23+00:00,[],None
43,https://github.com/defconfurs/dc28-fur-fpga.git,2020-06-18 18:34:21+00:00,FPGA Bitstreams for Furry DEF CON Shenanigans,0,defconfurs/dc28-fur-fpga,273312836,Verilog,dc28-fur-fpga,296,8,2023-08-22 22:20:34+00:00,[],https://api.github.com/licenses/mit
44,https://github.com/LeeCue/OpenMIPS.git,2020-06-24 11:49:37+00:00,计算机组成原理课程设计内容，设计一个兼容MIPS32指令集架构的处理器——OpenMIPS（五级流水结构），并增加IO模块（人机交互式），解决数据依赖问题,2,LeeCue/OpenMIPS,274655862,Verilog,OpenMIPS,2548,8,2024-04-09 02:47:46+00:00,[],None
45,https://github.com/louislxw/pe_array.git,2020-05-31 07:31:19+00:00,"A linear array of PEs with RISC-V ISA targeting extreme high frequency on Xilinx ZYNQ Ultrascale+, specificially for applications such as SCD and CNNs.",2,louislxw/pe_array,268231031,Verilog,pe_array,16675,8,2023-09-11 02:28:41+00:00,[],None
46,https://github.com/RedFlag2017/rocket-soc-tb.git,2020-06-13 02:37:17+00:00,A systemverilog/UVM/Makefile  testbench  for Rocket RISC-V SoCs,3,RedFlag2017/rocket-soc-tb,271927462,Verilog,rocket-soc-tb,1641,7,2023-09-28 10:46:07+00:00,"['risc-v', 'chipyard', 'testbech', 'soc', 'verifcation']",None
47,https://github.com/Embedfire-altera/ebf_ep4ce10_pro_tutorial_code.git,2020-06-09 11:10:03+00:00,配套代码《FPGA Verilog开发实战指南——基于Altera EP4CE10》,4,Embedfire-altera/ebf_ep4ce10_pro_tutorial_code,270980277,Verilog,ebf_ep4ce10_pro_tutorial_code,89970,7,2024-01-05 06:48:42+00:00,[],None
48,https://github.com/pengchengwei54610/Digital-Logic-BIG-HW.git,2020-05-27 14:11:42+00:00,同济大学2018级数字逻辑大作业：基于键盘与VGA显示屏实现的小游戏,0,pengchengwei54610/Digital-Logic-BIG-HW,267337184,Verilog,Digital-Logic-BIG-HW,10,7,2023-12-30 12:14:27+00:00,[],None
49,https://github.com/debtanu09/my8085.git,2020-06-08 06:46:48+00:00,This is the Verilog code for 8085 microprocessor with limited (18) number of instructions,4,debtanu09/my8085,270560583,Verilog,my8085,16851,6,2023-12-18 18:21:50+00:00,[],https://api.github.com/licenses/mit
50,https://github.com/wswslzp/SpinalFFT.git,2020-05-24 14:03:54+00:00,A FFT hardware generator in SpinalHDL,0,wswslzp/SpinalFFT,266553235,Verilog,SpinalFFT,368,6,2024-03-08 03:05:43+00:00,[],None
51,https://github.com/elllusion/cpu_gs232.git,2020-06-14 19:50:57+00:00,,7,elllusion/cpu_gs232,272272772,Verilog,cpu_gs232,220,6,2024-03-14 13:02:57+00:00,[],None
52,https://github.com/racerxdl/fpga-serial-hello.git,2020-06-14 05:55:22+00:00,FPGA Verilog Serial Hello World + Led Blink,4,racerxdl/fpga-serial-hello,272142184,Verilog,fpga-serial-hello,5,6,2023-09-28 11:16:40+00:00,"['fpga', 'verilog', 'hello-world', 'led-blink', 'arduino', 'yosis', 'lattice']",None
53,https://github.com/arashsm79/Verilog-HDL-FSM-ATM.git,2020-06-25 08:33:35+00:00,Verilog HDL code and Finite State Machine (FSM) for a simple ATM,2,arashsm79/Verilog-HDL-FSM-ATM,274866649,Verilog,Verilog-HDL-FSM-ATM,80,6,2023-10-31 07:12:00+00:00,[],https://api.github.com/licenses/apache-2.0
54,https://github.com/adityatripathiiit/RISCV_Three_Stage.git,2020-06-15 17:36:35+00:00,RISC-V 3 stage in-order pipeline in verilog,6,adityatripathiiit/RISCV_Three_Stage,272503985,Verilog,RISCV_Three_Stage,1207,6,2024-04-09 06:57:06+00:00,"['riscv', 'rv32i', '3-stagepipeline', 'inorder', 'risc-v', 'verilog']",None
55,https://github.com/gabrielganzer/DLX-Microprocessor.git,2020-06-09 15:26:20+00:00,"Fully pipelined DLX Microprocessor optimized for energy efficiency and testing purposes developed in VHDL. Simulation with Intel® ModelSim®, synthesis under Synopsys® DC Ultra™, and physical layout using Cadence® Innovus™ Implementation System.",0,gabrielganzer/DLX-Microprocessor,271039626,Verilog,DLX-Microprocessor,93032,6,2024-01-01 16:00:11+00:00,"['dlx', 'synthesis', 'microprocessor', 'physical-design', 'digital-design', 'optimization', 'polito', 'dlx-microprocessor', 'synopsys', 'cadence']",https://api.github.com/licenses/bsd-2-clause
56,https://github.com/zqy1018/project_EI332.git,2020-05-25 16:52:13+00:00,"Implementations of labs & quizzes in EI332, SJTU, 2020 Spring",0,zqy1018/project_EI332,266832702,Verilog,project_EI332,10061,6,2023-01-28 05:25:24+00:00,[],None
57,https://github.com/isuckatdrifting/verilog-fx3slvfifo.git,2020-05-31 14:10:50+00:00,Control Cypress FX3 Slave FIFO with FPGA,2,isuckatdrifting/verilog-fx3slvfifo,268293648,Verilog,verilog-fx3slvfifo,28,5,2023-10-23 06:22:33+00:00,"['verilog', 'fpga', 'usb']",https://api.github.com/licenses/apache-2.0
58,https://github.com/mist-devel/gameboy.git,2020-05-29 19:48:10+00:00,Nintendo Gameboy core,8,mist-devel/gameboy,267942186,Verilog,gameboy,179,5,2024-03-27 22:20:11+00:00,[],None
59,https://github.com/Hassan313/Approximate-Multiplier.git,2020-06-17 19:01:17+00:00,This repository contains approximate 8-bit multiplier Verilog code.,3,Hassan313/Approximate-Multiplier,273056406,Verilog,Approximate-Multiplier,49231,5,2023-08-25 18:06:16+00:00,"['multiplier', 'approximate-computing', 'low-power', 'runtime-configuration', 'verilog']",None
60,https://github.com/FilipRegenczuk/RNS_converter.git,2020-06-11 07:48:27+00:00,Converter from RNS representation (residue number system) to binary/decimal. Written in Verilog.,0,FilipRegenczuk/RNS_converter,271484628,Verilog,RNS_converter,3,5,2023-09-04 09:08:38+00:00,[],None
61,https://github.com/YujiaZhao/mipsCPU.git,2020-06-04 07:53:10+00:00,USTB-计算机组成原理实验,0,YujiaZhao/mipsCPU,269295328,Verilog,mipsCPU,53864,5,2023-05-30 09:13:26+00:00,[],None
62,https://github.com/ARF1939261764/ov5640_hdmi.git,2020-06-23 09:13:41+00:00,,1,ARF1939261764/ov5640_hdmi,274361285,Verilog,ov5640_hdmi,18719,5,2024-02-18 02:25:30+00:00,[],None
63,https://github.com/RuidongWu/FPGA-based-accelerator-for-CNN.git,2020-06-24 03:23:42+00:00,,0,RuidongWu/FPGA-based-accelerator-for-CNN,274565084,Verilog,FPGA-based-accelerator-for-CNN,16341,5,2024-03-14 13:03:27+00:00,[],None
64,https://github.com/bespoke-silicon-group/bsg_motherboards.git,2020-06-19 23:18:56+00:00,BaseJump Open-Source Hardware Accelerator Motherboards,0,bespoke-silicon-group/bsg_motherboards,273603324,Verilog,bsg_motherboards,49211,5,2023-09-08 17:59:30+00:00,[],None
65,https://github.com/Jefferson-Lopes/FPGA.git,2020-05-21 11:35:26+00:00, Projects with FPGA,0,Jefferson-Lopes/FPGA,265832508,Verilog,FPGA,131065,5,2023-07-28 20:57:05+00:00,[],https://api.github.com/licenses/mit
66,https://github.com/mist-devel/c16.git,2020-05-29 18:47:58+00:00,C16/Plus4 core,6,mist-devel/c16,267931426,Verilog,c16,522,5,2023-09-23 09:51:25+00:00,[],None
67,https://github.com/isuckatdrifting/verilog-rmii.git,2020-06-10 08:20:45+00:00,"Example platform for Xilinx MII_to_RMII IP on Arty A7-35T, including ethernet RX and TX",0,isuckatdrifting/verilog-rmii,271220253,Verilog,verilog-rmii,589,4,2024-01-15 06:08:27+00:00,"['verilog', 'fpga', 'ethernet']",https://api.github.com/licenses/apache-2.0
68,https://github.com/a-vegetable-dog/QIAN-Kun.git,2020-06-12 01:25:19+00:00,SIMD processor based on verilog,1,a-vegetable-dog/QIAN-Kun,271680789,Verilog,QIAN-Kun,1231,4,2024-03-20 16:50:11+00:00,['verilog'],None
69,https://github.com/tanzelin430/USTC-COD-LAB.git,2020-05-25 15:05:13+00:00,,1,tanzelin430/USTC-COD-LAB,266809351,Verilog,USTC-COD-LAB,728,4,2023-04-04 02:13:34+00:00,['multicycle-mips-cpu'],None
70,https://github.com/acmert/mcm-on-fpga.git,2020-05-31 13:28:57+00:00,Efficient Multiple Constant Multiplication Using DSP Blocks in Xilinx FPGAs,2,acmert/mcm-on-fpga,268286015,Verilog,mcm-on-fpga,19,4,2022-10-14 15:22:43+00:00,[],None
71,https://github.com/mostafaaboseif/DMA-8237-Verilog-.git,2020-06-16 21:58:01+00:00,"Verilog code for DMA 8327 with PCI arbitrer, associated with a GUI using Qt and we uploaded it on an FPGA; communicating with CPU through UART (USB-TTL).",0,mostafaaboseif/DMA-8237-Verilog-,272820319,Verilog,DMA-8237-Verilog-,316,4,2023-05-17 06:25:35+00:00,[],None
72,https://github.com/IObundle/iob-eth.git,2020-05-31 18:10:57+00:00,Basic Verilog Ethernet core and C driver functions,3,IObundle/iob-eth,268336665,Verilog,iob-eth,3256,4,2023-08-26 14:35:53+00:00,[],https://api.github.com/licenses/mit
73,https://github.com/MrX-8B/MiSTer-Arcade-PenguinKunWars.git,2020-05-27 18:25:29+00:00,FPGA implementation of Penguin-Kun Wars arcade game,0,MrX-8B/MiSTer-Arcade-PenguinKunWars,267395712,Verilog,MiSTer-Arcade-PenguinKunWars,986,4,2022-07-31 14:08:48+00:00,[],https://api.github.com/licenses/gpl-2.0
74,https://github.com/kunalg123/sta_workshop.git,2020-06-18 08:00:09+00:00,This repository has all collateral for STA workshop ,1,kunalg123/sta_workshop,273177405,Verilog,sta_workshop,8297,4,2023-12-06 15:15:14+00:00,[],None
75,https://github.com/kevinchang73/108-2DSD_Final_Project.git,2020-06-10 01:34:21+00:00,Final project of 108-2 NTUEE Digital System Design Course,1,kevinchang73/108-2DSD_Final_Project,271148163,Verilog,108-2DSD_Final_Project,18607,4,2021-06-12 07:10:08+00:00,[],None
76,https://github.com/charmerkai/perceptron.git,2020-06-04 05:55:43+00:00,verilog design for perceptron algorithm,1,charmerkai/perceptron,269272870,Verilog,perceptron,231,4,2023-10-26 18:04:37+00:00,[],https://api.github.com/licenses/apache-2.0
77,https://github.com/qazwsxedcrfvtg14/RNN-verilog-model.git,2020-05-29 08:20:54+00:00,,0,qazwsxedcrfvtg14/RNN-verilog-model,267804793,Verilog,RNN-verilog-model,79946,4,2023-07-05 10:03:22+00:00,[],None
78,https://github.com/jasonpilbrough/LEIA.git,2020-06-25 09:06:13+00:00,Real-time lane detection on an FPGA,1,jasonpilbrough/LEIA,274872617,Verilog,LEIA,652,4,2022-07-10 06:10:00+00:00,[],None
79,https://github.com/Dj-Polyester/CENG232Midterm2Tester.git,2020-05-24 09:12:48+00:00,A tester for CENG232 Midterm 2 of the second semester 2020,1,Dj-Polyester/CENG232Midterm2Tester,266506450,Verilog,CENG232Midterm2Tester,2625,4,2023-03-08 23:48:17+00:00,[],None
80,https://github.com/melodychn/CS-M152A.git,2020-06-17 05:13:55+00:00,My work for CS M152A (Introduction to Digital Design Lab) taken at UCLA in the Spring of 2020.,2,melodychn/CS-M152A,272883842,Verilog,CS-M152A,13456,4,2023-11-21 18:40:25+00:00,[],None
81,https://github.com/growly/fpga_benchmarks.git,2020-06-18 22:07:25+00:00,,2,growly/fpga_benchmarks,273349209,Verilog,fpga_benchmarks,53654,4,2023-11-25 11:32:29+00:00,[],https://api.github.com/licenses/bsd-2-clause
82,https://github.com/IObundle/iob-div.git,2020-06-01 08:58:43+00:00,Verilog Divider Cores,3,IObundle/iob-div,268472563,Verilog,iob-div,115,3,2023-09-25 03:07:08+00:00,[],https://api.github.com/licenses/mit
83,https://github.com/osamamagdy/SPI-Verilog-Protocol.git,2020-05-30 11:14:29+00:00,,1,osamamagdy/SPI-Verilog-Protocol,268064016,Verilog,SPI-Verilog-Protocol,348,3,2022-05-26 13:03:22+00:00,[],None
84,https://github.com/isuckatdrifting/verilog-mii.git,2020-06-01 11:56:10+00:00,"Example platform for Xilinx AXI_EthernetLite (MII) on Arty A7-35T, including active TX driven by AXI Traffic Generator and dummy RX",1,isuckatdrifting/verilog-mii,268509004,Verilog,verilog-mii,221,3,2021-05-12 20:59:01+00:00,"['verilog', 'fpga', 'ethernet']",https://api.github.com/licenses/apache-2.0
85,https://github.com/josh-macfie/Verilog_Servo_Control.git,2020-06-01 01:14:39+00:00,Verilog module to drive a servo based on a control input.,3,josh-macfie/Verilog_Servo_Control,268395065,Verilog,Verilog_Servo_Control,3,3,2023-03-12 04:15:26+00:00,[],None
86,https://github.com/ranjan-yadav/I2C-protocol.git,2020-06-02 04:52:36+00:00,,0,ranjan-yadav/I2C-protocol,268704045,Verilog,I2C-protocol,2889,3,2023-05-16 13:40:02+00:00,[],None
87,https://github.com/hexuustc/ustccoder.git,2020-06-17 13:52:35+00:00,we are in ustc,3,hexuustc/ustccoder,272987079,Verilog,ustccoder,3123,3,2021-03-21 12:06:20+00:00,[],None
88,https://github.com/GregorKonzett/MIPS.git,2020-06-20 15:08:54+00:00,Multicycle MIPS Processor written in Verilog,0,GregorKonzett/MIPS,273730909,Verilog,MIPS,16,3,2022-06-27 19:23:44+00:00,[],None
89,https://github.com/amaslov86/openofdm.git,2020-06-08 06:48:34+00:00,,0,amaslov86/openofdm,270561129,Verilog,openofdm,26085,3,2024-03-21 12:54:03+00:00,[],https://api.github.com/licenses/apache-2.0
90,https://github.com/doctormin/MIPS-simulator.git,2020-05-23 10:37:51+00:00,Single Cycle & 5-stage Pipelined MIPS Simulator in Verilog,0,doctormin/MIPS-simulator,266314662,Verilog,MIPS-simulator,1474,3,2023-03-11 23:37:44+00:00,[],None
91,https://github.com/ashmanskas/mcu.git,2020-06-25 19:59:37+00:00,Master Coincidence Unit for BPET system,1,ashmanskas/mcu,275004007,Verilog,mcu,2062,3,2022-10-16 00:24:45+00:00,[],None
92,https://github.com/mshah12/GraphicsProcessingUnit.git,2020-05-28 18:31:54+00:00,"A graphics processing unit created using FPGA and NIOS II SOC, and coded in SystemVerilog and C++. The GPU is able to read .obj files and produce 3D objects on screen, consisting of triangles, which can be rotated and translated.",1,mshah12/GraphicsProcessingUnit,267666591,Verilog,GraphicsProcessingUnit,200189,3,2022-03-08 15:09:50+00:00,[],https://api.github.com/licenses/mit
93,https://github.com/Giako68/TiledScreen.git,2020-06-01 15:42:22+00:00,Video Controller Library for Arduino MKR Vidor 4000 -- Tiled Mode,0,Giako68/TiledScreen,268563466,Verilog,TiledScreen,205,3,2023-01-27 16:20:40+00:00,[],None
94,https://github.com/dev-board-tech/arduFPGA-game-console-arduboy-emulator.git,2020-06-18 19:16:29+00:00,arduFPGA game console arduino emulator design,0,dev-board-tech/arduFPGA-game-console-arduboy-emulator,273320878,Verilog,arduFPGA-game-console-arduboy-emulator,64,3,2022-09-07 18:32:53+00:00,[],https://api.github.com/licenses/gpl-2.0
95,https://github.com/gargdoppler/ALU.git,2020-06-12 15:46:17+00:00,ECN-104 Digital Logic Design Project,3,gargdoppler/ALU,271834891,Verilog,ALU,27991,3,2023-12-01 15:39:24+00:00,[],None
96,https://github.com/LittleQili/MIPS_CPU.git,2020-05-21 15:16:23+00:00,A naive MIPS simulator for 31 instructions. ,0,LittleQili/MIPS_CPU,265881316,Verilog,MIPS_CPU,6500,3,2024-02-20 11:54:46+00:00,[],None
97,https://github.com/hoglet67/HDLTutorial.git,2020-06-05 14:57:03+00:00,A basic Verilog and VHDL tutorial,0,hoglet67/HDLTutorial,269674174,Verilog,HDLTutorial,29,3,2022-05-26 02:38:08+00:00,[],None
98,https://github.com/ben-marshall/aes-sboxes.git,2020-06-08 10:55:52+00:00,Somewhere to put different implementations of the AES SBox,0,ben-marshall/aes-sboxes,270633349,Verilog,aes-sboxes,7,3,2021-09-27 08:43:32+00:00,[],None
99,https://github.com/vaithak/LDPC-Code-Decoder.git,2020-06-14 11:18:05+00:00,Implementation of partly parallel LDPC code decoder in Verilog.  ,3,vaithak/LDPC-Code-Decoder,272186831,Verilog,LDPC-Code-Decoder,1424,3,2022-11-26 06:02:07+00:00,[],https://api.github.com/licenses/gpl-3.0
100,https://github.com/yanggui19891007/CNN-On-FPGA.git,2020-06-15 00:36:38+00:00,FPGA,9,yanggui19891007/CNN-On-FPGA,272308039,,CNN-On-FPGA,26,3,2023-04-27 18:10:38+00:00,[],None
101,https://github.com/furrtek/ChannelF.git,2020-06-20 18:53:21+00:00,Fairchild Channel F,0,furrtek/ChannelF,273766674,Verilog,ChannelF,155,3,2022-03-25 01:34:27+00:00,[],https://api.github.com/licenses/gpl-2.0
102,https://github.com/ept221/tinySoC.git,2020-06-03 16:16:57+00:00,An 8-bit SoC for implementation on an iCE40 FPGA.,1,ept221/tinySoC,269136588,Verilog,tinySoC,20069,3,2023-05-17 17:10:22+00:00,[],https://api.github.com/licenses/mit
103,https://github.com/mist-devel/archimedes.git,2020-05-29 19:14:24+00:00,Acorn Archimedes core,6,mist-devel/archimedes,267936236,Verilog,archimedes,30169,3,2024-01-03 12:08:01+00:00,[],None
104,https://github.com/harpArk614/LDPC-Code-Decoder.git,2020-06-15 08:03:18+00:00,Implementation of partly parallel LDPC code decoder in Verilog.  ,0,harpArk614/LDPC-Code-Decoder,272377901,Verilog,LDPC-Code-Decoder,177,3,2022-08-04 15:30:57+00:00,[],https://api.github.com/licenses/gpl-3.0
105,https://github.com/SunicYosen/soc-labs.git,2020-05-24 01:17:59+00:00,Labs projects for SoC,0,SunicYosen/soc-labs,266447716,Verilog,soc-labs,3066,2,2020-07-13 08:16:04+00:00,[],None
106,https://github.com/alireza-shirzad/Scrambler.git,2020-06-17 09:10:03+00:00,Scrambler and Descrambler implementation using verilog HDL,2,alireza-shirzad/Scrambler,272928665,Verilog,Scrambler,161,2,2023-07-03 08:02:45+00:00,[],None
107,https://github.com/vikas7268/integrated_round_robin_arbiter.git,2020-05-23 00:02:38+00:00,,0,vikas7268/integrated_round_robin_arbiter,266230782,Verilog,integrated_round_robin_arbiter,79,2,2024-03-21 08:40:35+00:00,[],None
108,https://github.com/amaslov86/adi-hdl.git,2020-06-08 06:54:42+00:00,,1,amaslov86/adi-hdl,270562842,Verilog,adi-hdl,11307,2,2022-04-27 03:16:58+00:00,[],
109,https://github.com/mhhai/HDLBits.git,2020-05-31 11:51:55+00:00,这里一个Verilog习题网站中的练习题，链接为https://hdlbits.01xz.net/wiki/Main_Page。 主要可以分为组合逻辑电路、时序逻辑电路设计两部分。对使用Verilog进行电路设计有很大的帮助。 由于该网站中需要先答对题目才能看答案，使用时并不方便，因此这里贴出自己写的代码。 也可以参看https://zhuanlan.zhihu.com/c_1131528588117385216，这里有详细的解释。,1,mhhai/HDLBits,268269531,Verilog,HDLBits,31,2,2023-06-24 10:25:28+00:00,[],None
110,https://github.com/VasanthSadhasivan/Feed-Forward-Neural-Network-Hardware-Accelerator.git,2020-05-25 02:35:54+00:00,Hardware implementation written in SystemVerilog for a parameterizable FF-NN. Depth and Neurons per layer are parameters. Learning using SGD back propagation algorithm.,0,VasanthSadhasivan/Feed-Forward-Neural-Network-Hardware-Accelerator,266666324,Verilog,Feed-Forward-Neural-Network-Hardware-Accelerator,16,2,2023-09-28 22:39:22+00:00,[],None
111,https://github.com/jai1215/verilog-utils.git,2020-06-01 13:53:50+00:00,verilog utility functions for vscode,0,jai1215/verilog-utils,268536346,Verilog,verilog-utils,531,2,2023-01-12 14:49:51+00:00,[],None
112,https://github.com/ahmedgamal77/DMA.git,2020-06-22 17:35:22+00:00,direct memory access unit work with MIPS instructions (verilog),1,ahmedgamal77/DMA,274202790,Verilog,DMA,1249,2,2022-06-03 13:41:29+00:00,[],None
113,https://github.com/megora/emmc_plugin_firmware.git,2020-06-16 14:29:42+00:00,,1,megora/emmc_plugin_firmware,272730327,Verilog,emmc_plugin_firmware,20,2,2022-07-23 17:39:12+00:00,[],https://api.github.com/licenses/gpl-3.0
114,https://github.com/BugenZhao/MIPS.git,2020-05-23 14:48:33+00:00,👨🏻‍💻 Pipelined MIPS I CPU with 49 instructions & multiplication & direct-mapped cache in Verilog.,0,BugenZhao/MIPS,266357003,Verilog,MIPS,2714,2,2020-07-03 09:53:28+00:00,"['mips', 'verilog', 'simulator']",None
115,https://github.com/nieyanshuo/verilog-ip.git,2020-06-01 14:18:24+00:00,"Because of insufficient virtual machine space and reluctance to expand the virtual machine, some simple IP cores have been established to support vcs simulation, but these IPs do not have too much consideration for synthesizable and timing characteristics.now ,the realized ip includes UART,RAM and FIFO(syn and asyn) .",0,nieyanshuo/verilog-ip,268542480,Verilog,verilog-ip,29,2,2023-11-17 00:13:02+00:00,[],https://api.github.com/licenses/gpl-3.0
116,https://github.com/losfair/mips-x.git,2020-05-22 12:18:16+00:00,"Another MIPS32 CPU. My course design for Computer Organization @ NUAA, 2020 Spring.",1,losfair/mips-x,266103093,Verilog,mips-x,59,2,2020-07-07 07:42:53+00:00,[],None
117,https://github.com/KAIST-ITC/beamforming.git,2020-06-08 08:43:23+00:00,,0,KAIST-ITC/beamforming,270594302,Verilog,beamforming,141,2,2024-03-13 00:51:22+00:00,[],None
118,https://github.com/bhagyam2000/BP-mode-encoder-for-an-ECG.git,2020-05-27 10:21:13+00:00,Encoder design in verilog used for display compression in BP mode.,0,bhagyam2000/BP-mode-encoder-for-an-ECG,267287883,Verilog,BP-mode-encoder-for-an-ECG,161,2,2022-01-09 17:49:37+00:00,[],None
119,https://github.com/The-OpenROAD-Project-Attic/PartClusManager.git,2020-05-25 18:34:38+00:00,,1,The-OpenROAD-Project-Attic/PartClusManager,266853413,Verilog,PartClusManager,101596,2,2021-03-18 02:54:07+00:00,[],https://api.github.com/licenses/gpl-3.0
120,https://github.com/Campo87/Matrix-Engine.git,2020-06-03 03:23:48+00:00,"This matrix unit performs matrix multiplication, scalar multiplication, subtraction, addition, and transposition on 4x4 by 16 bit matrices. This was my HDL final project, see the PDF for the instructions.",0,Campo87/Matrix-Engine,268979240,Verilog,Matrix-Engine,331,2,2023-02-14 23:32:12+00:00,[],None
121,https://github.com/reggiehsu111/RISC-V-Single-Cycle-Processor.git,2020-06-02 11:17:07+00:00,RISC-V Single Cycle Processor for Computer Architecture Final,0,reggiehsu111/RISC-V-Single-Cycle-Processor,268780261,Verilog,RISC-V-Single-Cycle-Processor,1507,2,2023-02-06 14:18:47+00:00,[],None
122,https://github.com/amaslov86/openwifi-hw.git,2020-06-08 06:28:18+00:00,,0,amaslov86/openwifi-hw,270556013,Verilog,openwifi-hw,108204,2,2021-09-26 08:21:27+00:00,[],https://api.github.com/licenses/agpl-3.0
123,https://github.com/Evolutionior/CoreBench.git,2020-06-04 16:46:37+00:00,,0,Evolutionior/CoreBench,269413735,Verilog,CoreBench,25,2,2020-06-14 02:23:49+00:00,[],None
124,https://github.com/SLAM-Lab/LACPo.git,2020-06-02 16:36:25+00:00,Learning-based Architecture-level CPU Power modeling,1,SLAM-Lab/LACPo,268854215,Verilog,LACPo,62957,2,2023-10-02 18:40:45+00:00,[],None
125,https://github.com/myl7/COD-2020-labs.git,2020-06-18 14:06:48+00:00,Sources of experiments in USTC COD 2020,0,myl7/COD-2020-labs,273254888,Verilog,COD-2020-labs,255,2,2024-03-05 12:14:06+00:00,[],https://api.github.com/licenses/lgpl-3.0
126,https://github.com/DevMajed/Digital-Logic_and-Design.git,2020-06-13 10:21:46+00:00,"Digital Logic Design using pen and paper to design with Analog discovery 2, and using Verilog for synthesizing.  these are some of my junior year labs for Digital Electronics",0,DevMajed/Digital-Logic_and-Design,271986219,Verilog,Digital-Logic_and-Design,32,2,2023-01-28 14:03:49+00:00,"['counters', 'fulladder', 'flipflop', 'mux', 'gates']",None
127,https://github.com/bhupeshnihal/Instruction-Cache.git,2020-06-22 09:26:57+00:00,"Verilog Implementation of an instruction memory subsystem comprising of main memory, cache memory and cache controller",0,bhupeshnihal/Instruction-Cache,274094587,Verilog,Instruction-Cache,464,1,2022-10-25 13:28:34+00:00,[],None
128,https://github.com/giorgosvyronos/gcv-cpu.git,2020-05-22 21:56:21+00:00,Project Team GCV 2020: Central Processing Unit,0,giorgosvyronos/gcv-cpu,266215177,Verilog,gcv-cpu,21419,1,2022-09-22 16:30:04+00:00,[],None
129,https://github.com/WANGSSSSSSS/mips.git,2020-06-07 00:59:53+00:00,five stage pipeline,0,WANGSSSSSSS/mips,270150699,Verilog,mips,57,1,2020-08-25 06:40:37+00:00,[],None
130,https://github.com/dhaivat7/CLA_4_bit_addr.git,2020-06-17 04:05:28+00:00,4 bit CLA,0,dhaivat7/CLA_4_bit_addr,272874648,Verilog,CLA_4_bit_addr,409,1,2021-01-31 22:54:15+00:00,[],None
131,https://github.com/smaslovski/verilog-bk.git,2020-06-12 19:01:59+00:00,Small project to emulate a few behavioral aspects of the 1801BM1 CPU and the Soviet computers BK-0010/0011M.,0,smaslovski/verilog-bk,271870805,Verilog,verilog-bk,244,1,2021-06-18 08:34:30+00:00,[],
132,https://github.com/Mekrab/Sobel-X.git,2020-06-06 20:11:02+00:00,Sobel-X Filter in Verilog ,0,Mekrab/Sobel-X,270092150,Verilog,Sobel-X,8865,1,2024-03-07 15:38:51+00:00,[],None
133,https://github.com/VanThanhDuong/RISCV_32_PIPELINE.git,2020-06-18 12:52:52+00:00,This project code for pipeline register riscv,0,VanThanhDuong/RISCV_32_PIPELINE,273237347,Verilog,RISCV_32_PIPELINE,784,1,2021-09-22 12:40:54+00:00,[],None
134,https://github.com/DBasoco/HDL-Intro.git,2020-06-16 20:55:53+00:00,"Learning verilog, in theory, as I only have microprocessors and no FPGAs currently.",0,DBasoco/HDL-Intro,272810436,Verilog,HDL-Intro,5,1,2020-08-14 18:26:09+00:00,[],None
135,https://github.com/AhmedMostafa98/pipeline_dadda_8x8multiplier.git,2020-06-22 17:11:45+00:00,Pipelined 8x8 Multiplier that uses Dadda architecture,0,AhmedMostafa98/pipeline_dadda_8x8multiplier,274198072,Verilog,pipeline_dadda_8x8multiplier,6,1,2023-10-17 14:54:27+00:00,[],None
136,https://github.com/NavidAG/Logic-Circuits-Projects.git,2020-05-28 11:28:23+00:00,,0,NavidAG/Logic-Circuits-Projects,267571685,Verilog,Logic-Circuits-Projects,1268,1,2020-09-06 17:31:09+00:00,"['verilog', 'proteus', 'logic-circuit']",None
137,https://github.com/jiayu1011/CPU_Design.git,2020-06-18 04:58:41+00:00,,0,jiayu1011/CPU_Design,273145372,Verilog,CPU_Design,61115,1,2020-06-24 15:53:19+00:00,[],None
138,https://github.com/Rapidnack/Fx2DeviceServer3.git,2020-06-04 20:53:14+00:00,,0,Rapidnack/Fx2DeviceServer3,269463128,Verilog,Fx2DeviceServer3,2078,1,2021-08-28 04:41:31+00:00,[],None
139,https://github.com/XuetongZhou/RISC-V.git,2020-06-08 14:22:20+00:00,一个四级流水线RISC-V CPU,0,XuetongZhou/RISC-V,270697302,Verilog,RISC-V,26,1,2021-08-02 09:40:11+00:00,[],None
140,https://github.com/krishna-beemanapalli/rv32i-CPU.git,2020-05-24 21:10:00+00:00,Implementation of rv32i datapath in quartus tool,0,krishna-beemanapalli/rv32i-CPU,266625350,Verilog,rv32i-CPU,91,1,2023-05-17 08:57:24+00:00,[],None
141,https://github.com/SiciliaLeco/Step_intoMIPS.git,2020-06-01 13:30:55+00:00,"2020 Spring, Computer Composition Principle, notes for the lecture and 4 lab assignments. ",0,SiciliaLeco/Step_intoMIPS,268530783,Verilog,Step_intoMIPS,29473,1,2021-07-25 04:02:25+00:00,[],None
142,https://github.com/CharlotteGore/hello-world-fpga.git,2020-06-19 11:59:20+00:00,"Hello world, on an fpga",0,CharlotteGore/hello-world-fpga,273482980,Verilog,hello-world-fpga,13,1,2020-06-19 14:14:43+00:00,[],None
143,https://github.com/Kiran760043/Frequency-Divider-by-Even-Number.git,2020-06-19 16:26:42+00:00,FPGA Programs,1,Kiran760043/Frequency-Divider-by-Even-Number,273539184,Verilog,Frequency-Divider-by-Even-Number,46,1,2021-01-05 17:09:12+00:00,[],None
144,https://github.com/ishaan40/Graphics-Renderer.git,2020-05-21 18:09:59+00:00,Wire-frame graphics renderer that uses an FPGA and SOC (ECE385 Final Project SP'20),0,ishaan40/Graphics-Renderer,265919162,Verilog,Graphics-Renderer,198027,1,2023-03-04 06:42:11+00:00,[],https://api.github.com/licenses/mit
145,https://github.com/lyhsieh/NTHU_EE223000.git,2020-05-25 07:53:49+00:00,邏輯設計實驗,0,lyhsieh/NTHU_EE223000,266717991,Verilog,NTHU_EE223000,5183,1,2022-10-13 17:23:40+00:00,[],None
146,https://github.com/Ayushsrivastava2/Verilog.git,2020-06-10 06:33:27+00:00,,0,Ayushsrivastava2/Verilog,271197923,Verilog,Verilog,48,1,2020-07-24 08:55:58+00:00,[],None
147,https://github.com/LDMDS/FPGA-Saxo-Xylo-SerialRxTx.git,2020-06-23 16:02:34+00:00,Serial RX and TX for rapid communication with Saxo Xylo FPGA. ,0,LDMDS/FPGA-Saxo-Xylo-SerialRxTx,274449845,Verilog,FPGA-Saxo-Xylo-SerialRxTx,7,1,2023-03-25 16:22:58+00:00,"['verilog', 'verilog-project']",https://api.github.com/licenses/mit
148,https://github.com/JagrutJadhav/Verilog-_i2c_simulation.git,2020-05-24 13:55:06+00:00,,0,JagrutJadhav/Verilog-_i2c_simulation,266551574,Verilog,Verilog-_i2c_simulation,9,1,2021-05-31 18:42:45+00:00,[],None
149,https://github.com/icekang/UndertaleBasys3.git,2020-06-01 20:25:18+00:00,,0,icekang/UndertaleBasys3,268624661,Verilog,UndertaleBasys3,3026,1,2023-01-29 23:55:53+00:00,[],None
150,https://github.com/LinusWangg/pipeline.git,2020-06-08 15:11:53+00:00,homework,0,LinusWangg/pipeline,270714736,Verilog,pipeline,42359,1,2020-07-07 04:46:54+00:00,[],None
151,https://github.com/chenzhicun/SJTU-CS145-Arch-labs.git,2020-05-29 11:58:43+00:00,"This repo is for SJTU CS145's course work. To be specific, I'll use verilog to implement a single circle CPU and a pipeline CPU.",0,chenzhicun/SJTU-CS145-Arch-labs,267846754,Verilog,SJTU-CS145-Arch-labs,975,1,2021-04-14 15:58:09+00:00,[],None
152,https://github.com/wshahbaz/FPGA_Pipelined_MIPS_Processor.git,2020-05-25 04:54:43+00:00,"32-bit, 5-stage pipelined MIPS processor using DE10-Lite FPGA development board",0,wshahbaz/FPGA_Pipelined_MIPS_Processor,266686302,Verilog,FPGA_Pipelined_MIPS_Processor,124,1,2023-06-21 13:08:07+00:00,[],None
153,https://github.com/mjneri/coe113-dump.git,2020-06-19 11:06:17+00:00,Codes made for CoE 113 (2SAY18-19),0,mjneri/coe113-dump,273473508,Verilog,coe113-dump,10286,1,2020-11-27 07:19:12+00:00,[],None
154,https://github.com/dantrim/htt_tp_fw.git,2020-06-17 14:15:58+00:00,Firmware testbench infrastructure for the ATLAS Hardware Track Trigger (HTT) ,0,dantrim/htt_tp_fw,272992840,Verilog,htt_tp_fw,1273,1,2022-04-08 18:16:25+00:00,[],None
155,https://github.com/Winters123/FECON.git,2020-06-24 18:32:08+00:00,support FAST on corundum,0,Winters123/FECON,274742118,Verilog,FECON,16208,1,2023-09-21 12:21:25+00:00,[],
156,https://github.com/nobotro/fpga_mandelbrot_fractal.git,2020-06-20 17:51:42+00:00,Mandelbrot fractal generator in verilog,0,nobotro/fpga_mandelbrot_fractal,273757764,Verilog,fpga_mandelbrot_fractal,23,1,2023-12-01 20:53:38+00:00,"['fpga', 'mandelbrot-fractal', 'mig7', 'verilog', 'xilinx']",None
157,https://github.com/mokumus/NumberAnalyzerFSM.git,2020-06-07 11:37:40+00:00,"FSM in verilog for determining if a number is odd or even, palindrome and Fibonacci number.",0,mokumus/NumberAnalyzerFSM,270287031,Verilog,NumberAnalyzerFSM,507,1,2022-08-30 18:38:47+00:00,[],None
158,https://github.com/Embedfire-altera/ebf_ep4ce10_mini_tutorial_code.git,2020-06-11 01:25:58+00:00,野火EP4CE10 MINI开发板配套代码,0,Embedfire-altera/ebf_ep4ce10_mini_tutorial_code,271422414,Verilog,ebf_ep4ce10_mini_tutorial_code,24134,1,2021-07-23 23:26:02+00:00,[],None
159,https://github.com/Joshua-401/Formal_Verification.git,2020-05-25 08:37:38+00:00,Coverage Closure and Bug Hunt Project,2,Joshua-401/Formal_Verification,266727302,Verilog,Formal_Verification,16665,1,2022-05-24 09:38:58+00:00,[],None
160,https://github.com/OpenROAD-Cloud/gcd.git,2020-06-24 00:05:22+00:00,OpenROAD Cloud example,1,OpenROAD-Cloud/gcd,274534088,Verilog,gcd,7,1,2021-05-13 23:15:31+00:00,[],https://api.github.com/licenses/bsd-3-clause
161,https://github.com/n0nuser/Contador-Arbitrario.git,2020-06-14 11:53:47+00:00,Contador Arbitrario - Computadores I USAL,0,n0nuser/Contador-Arbitrario,272192262,Verilog,Contador-Arbitrario,436,1,2023-01-28 14:09:08+00:00,"['contador-arbitrario', 'computadores', 'usal']",None
162,https://github.com/Campo87/8-bit-Power-ALU.git,2020-06-04 04:48:56+00:00,The goal of this project is to design an 8-bit ALU which implements 16 operations.,0,Campo87/8-bit-Power-ALU,269263054,Verilog,8-bit-Power-ALU,434,1,2022-04-11 18:26:21+00:00,[],None
163,https://github.com/Rapidnack/Fx2DeviceServer5.git,2020-06-09 08:17:10+00:00,,0,Rapidnack/Fx2DeviceServer5,270943246,Verilog,Fx2DeviceServer5,1452,1,2021-08-28 04:41:25+00:00,[],None
164,https://github.com/magpie70/FindMaxNumber.git,2020-05-26 14:20:09+00:00,,0,magpie70/FindMaxNumber,267063412,Verilog,FindMaxNumber,200,1,2021-05-13 10:48:50+00:00,[],None
165,https://github.com/ajaykatoch1/Single-Cycle-Matrix-Multiplication-Processor.git,2020-06-23 23:47:51+00:00,In this project me and my partner created a single cycle processor in Verilog that can compute matrix multiplication on different sized matrices. To create the project make a new Verilog project and import the files.,0,ajaykatoch1/Single-Cycle-Matrix-Multiplication-Processor,274531828,Verilog,Single-Cycle-Matrix-Multiplication-Processor,170,1,2023-01-10 05:09:38+00:00,[],None
166,https://github.com/luoqiaofa/fpga.git,2020-06-21 13:54:02+00:00,fpga source code for study,0,luoqiaofa/fpga,273914251,Verilog,fpga,6428,1,2023-07-27 08:05:36+00:00,[],https://api.github.com/licenses/gpl-2.0
167,https://github.com/ineganov/pnetlist.git,2020-06-07 22:53:18+00:00,Verilog netlist parser,0,ineganov/pnetlist,270454765,Verilog,pnetlist,2117,1,2022-03-15 23:15:35+00:00,[],None
168,https://github.com/kimchange/8-bit-CPU-Verilog.git,2020-05-23 13:24:55+00:00,8-bit CPU iverilog,0,kimchange/8-bit-CPU-Verilog,266341582,Verilog,8-bit-CPU-Verilog,3241,1,2021-12-09 03:25:01+00:00,[],None
169,https://github.com/tim1207/3bit-counter.git,2020-06-08 11:05:34+00:00,3 bit 計數器,0,tim1207/3bit-counter,270636050,Verilog,3bit-counter,1,1,2021-11-25 11:57:20+00:00,[],None
170,https://github.com/a-vegetable-dog/QIAN_KUN.git,2020-06-16 12:23:26+00:00,FIR based on verilog,0,a-vegetable-dog/QIAN_KUN,272701040,Verilog,QIAN_KUN,3,1,2022-04-10 20:10:16+00:00,['verilog'],None
171,https://github.com/jpt13653903/FPGA_Tools.git,2020-06-21 18:50:39+00:00,Library of various useful firmware modules,0,jpt13653903/FPGA_Tools,273964873,Verilog,FPGA_Tools,494,1,2023-02-24 12:51:06+00:00,[],None
172,https://github.com/Abhay-Rj/RV_SingleCycle.git,2020-06-25 05:50:35+00:00,Single Cycle RV32I Implementation,1,Abhay-Rj/RV_SingleCycle,274839473,Verilog,RV_SingleCycle,34,1,2020-06-28 14:46:01+00:00,[],https://api.github.com/licenses/gpl-3.0
173,https://github.com/lootr5858/EECE490_embedded-soc.git,2020-05-24 05:27:52+00:00,Embedded SOC course with Cortex M0 & Verilog HDL,2,lootr5858/EECE490_embedded-soc,266476044,Verilog,EECE490_embedded-soc,179340,1,2023-03-02 06:03:06+00:00,[],None
174,https://github.com/vinitpulstya/booth-s-multiplier.git,2020-05-26 15:53:53+00:00,"This is an multiplier for multiplying binary integers in signed 2's complement representation in efficient way, less additions/substraction is used.",0,vinitpulstya/booth-s-multiplier,267086982,Verilog,booth-s-multiplier,4,1,2022-10-27 23:44:35+00:00,[],None
175,https://github.com/ADEPT-Group/GPU-Accelerated-Logic-Re-simulation.git,2020-06-01 03:33:41+00:00,"Accelerating logic re-simulation tasks utilizing GPU paralellizing feature considering 4 (0, 1, x, Z) value logic.",1,ADEPT-Group/GPU-Accelerated-Logic-Re-simulation,268416994,Verilog,GPU-Accelerated-Logic-Re-simulation,1752,1,2023-02-09 02:36:02+00:00,[],None
176,https://github.com/deep6000/Magical-Pug-Verilog-FPGA.git,2020-06-18 22:13:01+00:00,"The basic idea that I plan to implement is a game based on the Altera DE-1 SoC. The objective is to create a game called “Magical Pug”, where the movement of the pug will be controlled by the player. The pushbuttons on the development boards can be configured to enable movements of the pug in different directions. The pug has to be moved from the starting point to its destination by dodging the obstacles along the way. The duration for which the player is able to control the pug by dodging the obstacles, the harder it will get as the game progresses. The game will be displayed on the monitor (connected via a VGA connector). Bringing this game into hardware distinguishes our project from previous implementations as such games have been mainly implemented in software.",0,deep6000/Magical-Pug-Verilog-FPGA,273349975,Verilog,Magical-Pug-Verilog-FPGA,12430,1,2023-08-25 10:05:35+00:00,[],None
177,https://github.com/OpenROAD-Cloud/aes.git,2020-06-25 23:59:46+00:00,Running AES on OpenROAD Cloud,7,OpenROAD-Cloud/aes,275038622,Verilog,aes,11,1,2021-05-13 23:15:09+00:00,[],https://api.github.com/licenses/bsd-3-clause
178,https://github.com/trustworthy-systems-iitk/bsim.git,2020-06-23 17:35:59+00:00,bsim is an algorithmic inference tool that processes gate-level netlists.,1,trustworthy-systems-iitk/bsim,274469618,Verilog,bsim,4731,1,2022-12-14 17:43:42+00:00,[],None
179,https://github.com/RobertoBeltran7/ECE270.git,2020-06-13 21:23:02+00:00,Completed Verilog lab assignments for ECE 270-Fall 2018 taught by Dr. Shreyas Sen at Purdue University,2,RobertoBeltran7/ECE270,272087874,Verilog,ECE270,14,1,2023-04-16 14:51:29+00:00,[],None
180,https://github.com/nadaelsayed11/Randomizer.git,2020-06-04 18:41:48+00:00,Generating random number by providing an initial seed,0,nadaelsayed11/Randomizer,269437603,Verilog,Randomizer,1,1,2022-06-12 19:42:16+00:00,[],None
181,https://github.com/rikosellic/Pipeline.git,2020-06-10 07:51:05+00:00,"Verilog Code for the 5-stage pipeline CPU project in the course EI332, SJTU, 2020 Spring",0,rikosellic/Pipeline,271213889,Verilog,Pipeline,76,1,2020-07-04 12:51:40+00:00,[],None
182,https://github.com/Vaccinated/Matrix_Engine.git,2020-06-03 16:53:36+00:00,HDL Project: Create a simplistic Matrix engine in Verilog with an ISA that performs some basic functions on 4x4 matrices.,1,Vaccinated/Matrix_Engine,269144406,Verilog,Matrix_Engine,8,1,2021-03-01 00:48:27+00:00,[],None
183,https://github.com/yuhei1horibe/verilog_adder.git,2020-05-23 17:54:01+00:00,Basic calculation circuit (verilog).,0,yuhei1horibe/verilog_adder,266390334,Verilog,verilog_adder,0,1,2022-04-30 00:25:59+00:00,[],None
184,https://github.com/rs3319/EE1-CPU-Project.git,2020-06-02 03:38:33+00:00,,1,rs3319/EE1-CPU-Project,268693574,Verilog,EE1-CPU-Project,483,1,2020-11-24 04:25:58+00:00,[],None
185,https://github.com/enewen0324/CO_lab3.git,2020-06-02 03:06:31+00:00,,0,enewen0324/CO_lab3,268688350,Verilog,CO_lab3,1741,1,2020-06-02 03:08:14+00:00,[],None
186,https://github.com/reelbeelveel/binary_clock.git,2020-05-26 22:51:02+00:00,,0,reelbeelveel/binary_clock,267168389,Verilog,binary_clock,5982,1,2020-06-23 00:54:57+00:00,[],None
187,https://github.com/zhangzek/SDRAM_controller.git,2020-05-22 05:34:18+00:00,SDRAM_controller,1,zhangzek/SDRAM_controller,266026892,Verilog,SDRAM_controller,6962,1,2020-05-23 04:27:37+00:00,[],None
188,https://github.com/DarkenedOrigins/5stageCPU.git,2020-05-30 01:59:47+00:00,"5 stage pipelined cpu implementation with advanced features like jump prediction, return address stack, and 1 cycle multiplier. ",0,DarkenedOrigins/5stageCPU,267991372,Verilog,5stageCPU,229,1,2020-11-09 01:56:00+00:00,[],None
189,https://github.com/aqjol21/FPGA-Bubble-Sort.git,2020-06-06 12:35:47+00:00,,0,aqjol21/FPGA-Bubble-Sort,269976889,Verilog,FPGA-Bubble-Sort,509,1,2020-10-25 17:43:40+00:00,[],None
190,https://github.com/hucader95016/ALU-Design.git,2020-05-21 14:55:47+00:00,,0,hucader95016/ALU-Design,265876376,Verilog,ALU-Design,41,1,2023-07-01 14:51:34+00:00,[],None
191,https://github.com/jeceljr/pong-fpga.git,2020-05-22 00:41:06+00:00,a simple example of a pure hardware implementation of the Pong videogame for FPGAs,1,jeceljr/pong-fpga,265983046,Verilog,pong-fpga,231,1,2024-03-21 18:40:20+00:00,[],https://api.github.com/licenses/mit
192,https://github.com/bansil-vaghasiya/Floating-point-single-precision-adder-and-multiplier-.git,2020-06-12 06:30:38+00:00,Verilog code for Floating point single precision adder and multiplier,0,bansil-vaghasiya/Floating-point-single-precision-adder-and-multiplier-,271725925,Verilog,Floating-point-single-precision-adder-and-multiplier-,204,1,2020-09-25 06:02:38+00:00,[],None
193,https://github.com/SergiuBabin/Laboratoare-CN1.git,2020-06-04 17:42:17+00:00,Calculatoare Numerice,1,SergiuBabin/Laboratoare-CN1,269425544,Verilog,Laboratoare-CN1,8791,1,2021-05-10 11:28:11+00:00,[],None
194,https://github.com/BG5CPU/ASRTU_InterfaceBoard.git,2020-06-04 08:01:54+00:00,Interface Circuit Board based on FPGA,0,BG5CPU/ASRTU_InterfaceBoard,269297163,Verilog,ASRTU_InterfaceBoard,36916,1,2020-06-04 08:48:03+00:00,[],None
195,https://github.com/PackerO/AX301_audio_play.git,2020-06-10 03:42:12+00:00,,1,PackerO/AX301_audio_play,271172082,Verilog,AX301_audio_play,17820,1,2020-07-18 13:18:31+00:00,[],None
196,https://github.com/CapriciousRebel/ALU.git,2020-06-11 08:26:04+00:00,Second Sem ECE Project ,0,CapriciousRebel/ALU,271492383,Verilog,ALU,33,1,2023-03-04 04:03:50+00:00,[],None
197,https://github.com/cyberfantom2000/pcma_detector.git,2020-06-02 16:46:06+00:00,,0,cyberfantom2000/pcma_detector,268856470,Verilog,pcma_detector,17,1,2022-06-29 23:25:21+00:00,[],None
198,https://github.com/yth98/DSD_processor.git,2020-06-11 06:40:28+00:00,"A synthesizable pipelined RISC-V processor. (Digital System Design, Spring 2020, NTUEE)",0,yth98/DSD_processor,271471398,Verilog,DSD_processor,23696,1,2023-12-15 08:07:46+00:00,"['processor-design', 'risc-v']",None
199,https://github.com/m-sabihul-hasan/CS330L-RISC-V-Pipelined-Processor.git,2020-06-22 18:52:57+00:00,A 5-stage pipelined processor capable of executing a bubble sort program,0,m-sabihul-hasan/CS330L-RISC-V-Pipelined-Processor,274218322,Verilog,CS330L-RISC-V-Pipelined-Processor,244,1,2023-05-17 11:15:37+00:00,[],None
200,https://github.com/Jettypile/Proc_MIPS.git,2020-06-03 02:24:27+00:00,ECE 552 Proc for MIPS ISA,0,Jettypile/Proc_MIPS,268969059,Verilog,Proc_MIPS,10295,1,2020-06-03 03:10:48+00:00,[],None
201,https://github.com/keshav23garg/Samir-Palnitkar.git,2020-06-03 06:34:01+00:00,Solution to book VERILOG HDL BY SAMIR PALNITKAR,0,keshav23garg/Samir-Palnitkar,269008555,Verilog,Samir-Palnitkar,46,1,2021-05-02 05:54:36+00:00,[],https://api.github.com/licenses/mit
202,https://github.com/offox/guitar-effects.git,2020-05-31 14:04:23+00:00,It implements guitar effects in Verilo / IP Core Intel,1,offox/guitar-effects,268292464,Verilog,guitar-effects,89,1,2021-03-03 17:07:28+00:00,[],None
203,https://github.com/AmirAbaskohi/MultiCycleMIPS.git,2020-05-31 19:01:21+00:00,,0,AmirAbaskohi/MultiCycleMIPS,268344832,Verilog,MultiCycleMIPS,9,1,2020-09-21 13:45:40+00:00,[],None
204,https://github.com/sharondevs/RISC.git,2020-06-17 12:50:17+00:00,RISC architecture CPU verilog design,0,sharondevs/RISC,272972740,Verilog,RISC,1926,1,2022-06-23 18:36:10+00:00,[],https://api.github.com/licenses/mit
205,https://github.com/wzz91225/EDA_Experiment.git,2020-06-04 18:13:00+00:00,EDA Experiment Course; Altera Cyclone V; Terasic DE1-SoC; Report in Chinese,0,wzz91225/EDA_Experiment,269431808,Verilog,EDA_Experiment,673,1,2020-07-27 07:29:56+00:00,[],None
206,https://github.com/kaustuvsahu/UART.git,2020-06-07 06:28:31+00:00,Implementation of UART using Verilog HDL,0,kaustuvsahu/UART,270215545,Verilog,UART,9,1,2021-05-13 20:35:38+00:00,[],None
207,https://github.com/Rapidnack/Fx2DeviceServer4.git,2020-06-09 00:03:39+00:00,,0,Rapidnack/Fx2DeviceServer4,270860109,Verilog,Fx2DeviceServer4,2075,1,2021-08-28 04:41:29+00:00,[],None
208,https://github.com/Rapidnack/Fx2DeviceServer6.git,2020-06-07 12:33:52+00:00,,0,Rapidnack/Fx2DeviceServer6,270301114,Verilog,Fx2DeviceServer6,2395,1,2021-08-28 04:41:28+00:00,[],None
209,https://github.com/AmirAbaskohi/BoothMultiplierInVerilog6bit.git,2020-05-31 18:57:39+00:00,,0,AmirAbaskohi/BoothMultiplierInVerilog6bit,268344280,Verilog,BoothMultiplierInVerilog6bit,1,1,2020-09-21 13:45:42+00:00,[],None
210,https://github.com/Satjpatel/Programmable-Logic-Block-for-Peripheral-Device-.git,2020-05-30 11:08:41+00:00,A Verilog Code to mimic the functionality of the 8255 Interfacing Integrated Circuit ,0,Satjpatel/Programmable-Logic-Block-for-Peripheral-Device-,268063113,Verilog,Programmable-Logic-Block-for-Peripheral-Device-,17790,1,2022-06-16 06:37:31+00:00,[],None
211,https://github.com/Woodrowswork/CNN-Verilog.git,2020-06-22 22:16:22+00:00,,0,Woodrowswork/CNN-Verilog,274253505,Verilog,CNN-Verilog,4,1,2020-12-11 09:08:24+00:00,[],None
212,https://github.com/ho-ri1991/cpu.git,2020-06-21 14:18:31+00:00,,0,ho-ri1991/cpu,273918678,Verilog,cpu,19681,1,2021-06-07 03:48:47+00:00,[],None
213,https://github.com/arshynzhanbolatov/neuroNOC.git,2020-05-24 22:24:44+00:00,,0,arshynzhanbolatov/neuroNOC,266634871,Verilog,neuroNOC,629,1,2023-03-28 12:02:15+00:00,[],None
214,https://github.com/jasonlin316/two-piece-affine-gap.git,2020-05-29 11:49:03+00:00,,0,jasonlin316/two-piece-affine-gap,267844764,Verilog,two-piece-affine-gap,1636,1,2022-04-17 21:32:43+00:00,[],None
215,https://github.com/alpsalps/CPU_MIPS-C3.git,2020-06-20 02:53:26+00:00,,0,alpsalps/CPU_MIPS-C3,273627162,Verilog,CPU_MIPS-C3,521,1,2020-07-09 15:04:42+00:00,[],None
216,https://github.com/x0pr4nt3s/Proyecto_arquitectura_2020.git,2020-06-23 13:24:54+00:00,,0,x0pr4nt3s/Proyecto_arquitectura_2020,274412225,Verilog,Proyecto_arquitectura_2020,137,1,2021-04-28 13:36:19+00:00,[],None
217,https://github.com/shayan-taheri/VLSI_Testing_TetraMAX.git,2020-06-01 16:57:40+00:00,,0,shayan-taheri/VLSI_Testing_TetraMAX,268580961,Verilog,VLSI_Testing_TetraMAX,12477,1,2024-01-26 04:48:40+00:00,[],None
218,https://github.com/Mostafa-wael/SPI-Protocol.git,2020-05-29 15:31:45+00:00,"A digital design for the SPI protocol, delivered as a project for the logic design course",1,Mostafa-wael/SPI-Protocol,267892414,Verilog,SPI-Protocol,2630,1,2021-05-14 17:53:24+00:00,"['spi-protocol', 'digital-design', 'logic-design']",https://api.github.com/licenses/gpl-3.0
219,https://github.com/yrsltn/Integrated-Circuit-Desing-in-Verilog.git,2020-05-28 20:47:43+00:00,"To design a circuit to find the maximum number among a given set of numbers, simulate it and finally implement.",0,yrsltn/Integrated-Circuit-Desing-in-Verilog,267693345,Verilog,Integrated-Circuit-Desing-in-Verilog,142,1,2021-08-11 18:10:41+00:00,[],None
220,https://github.com/AmirAbaskohi/SingleCycleMIPS.git,2020-05-31 18:58:58+00:00,,0,AmirAbaskohi/SingleCycleMIPS,268344474,Verilog,SingleCycleMIPS,6,1,2020-09-21 13:45:41+00:00,[],None
221,https://github.com/tommythorn/verilog-sim-bench.git,2020-06-12 00:31:26+00:00,Verilog simulation workload extracted from Reduceron,0,tommythorn/verilog-sim-bench,271673461,Verilog,verilog-sim-bench,236,1,2022-03-17 00:25:11+00:00,[],None
222,https://github.com/pelusodan/MIPS-MulitCycle-Processor.git,2020-06-03 02:38:30+00:00,A final implementation of a 5-stage CPU using Verilog,1,pelusodan/MIPS-MulitCycle-Processor,268971569,Verilog,MIPS-MulitCycle-Processor,7,1,2021-09-29 16:28:28+00:00,[],None
223,https://github.com/ebrargomer/Logic-design--Verilog.git,2020-06-12 12:59:59+00:00,"Using vivado, designing latches, counters,decoders,mux,ALU and CPU examples.",0,ebrargomer/Logic-design--Verilog,271799216,Verilog,Logic-design--Verilog,1151,1,2021-09-30 08:42:51+00:00,[],None
224,https://github.com/savolla/xkarna.git,2020-06-22 20:52:36+00:00,16-bit custom computer from scratch,0,savolla/xkarna,274239826,Verilog,xkarna,1093,1,2022-05-19 19:54:48+00:00,[],None
225,https://github.com/av-shek/Processor-Designing-in-Verilog.git,2020-06-10 10:09:19+00:00,,1,av-shek/Processor-Designing-in-Verilog,271243558,Verilog,Processor-Designing-in-Verilog,1771,1,2020-06-10 14:46:13+00:00,[],None
226,https://github.com/pelusodan/ARMv8MultiCycleProcessor.git,2020-06-09 03:52:51+00:00,A verilog implementation of my design for a final computer architecture project,1,pelusodan/ARMv8MultiCycleProcessor,270897583,Verilog,ARMv8MultiCycleProcessor,6,1,2021-09-29 16:28:22+00:00,[],None
227,https://github.com/Satjpatel/Automatic-Food-Counter-using-Verilog-HDL-.git,2020-05-22 19:32:46+00:00,A Verilog HDL Code for an automatic food cooker,0,Satjpatel/Automatic-Food-Counter-using-Verilog-HDL-,266192429,Verilog,Automatic-Food-Counter-using-Verilog-HDL-,11,1,2022-06-16 06:37:27+00:00,[],None
228,https://github.com/hucader95016/Pipeline_CPU.git,2020-06-15 16:06:29+00:00,,0,hucader95016/Pipeline_CPU,272484545,Verilog,Pipeline_CPU,15,1,2023-07-01 14:51:32+00:00,[],None
229,https://github.com/BrandonMFong/FPGAClock.git,2020-06-18 23:10:46+00:00,Basys 3's SSD as Digital Clock,1,BrandonMFong/FPGAClock,273357708,Verilog,FPGAClock,288,1,2021-01-08 14:40:01+00:00,[],None
230,https://github.com/dhaivat7/FIFO.git,2020-06-18 02:47:21+00:00,A FIFO is an array of memory commonly used in hardware to transfer transfer data between two circuits with different clocks.,0,dhaivat7/FIFO,273126255,Verilog,FIFO,226,1,2021-01-31 22:53:59+00:00,[],None
231,https://github.com/Caspar21/mac.git,2020-06-05 08:23:13+00:00,mac for Ethernet package,0,Caspar21/mac,269572175,Verilog,mac,17,1,2020-06-06 02:03:09+00:00,[],None
232,https://github.com/Blinkinlabs/upduino_micromatrix.git,2020-06-25 19:17:51+00:00,,0,Blinkinlabs/upduino_micromatrix,274996794,Verilog,upduino_micromatrix,1702,1,2021-01-22 18:44:41+00:00,[],None
233,https://github.com/novi/i2s_to_lj16.git,2020-06-19 10:03:22+00:00,"Converting from I2S audio to Left Justified 16bit format with 2xWCK, suitable for early SONY' DAC such as CX20017.",0,novi/i2s_to_lj16,273461830,Verilog,i2s_to_lj16,77,1,2024-01-01 04:14:37+00:00,[],https://api.github.com/licenses/apache-2.0
234,https://github.com/imbrem/rapids.git,2020-06-24 05:24:36+00:00,,0,imbrem/rapids,274582403,Verilog,rapids,96,0,2020-06-24 05:25:22+00:00,[],None
235,https://github.com/unal-edigital1-2020-1/wp2-simulacion-captura-grupo-03.git,2020-06-24 17:00:06+00:00,wp2-simulacion-captura-grupo-03 created by GitHub Classroom,3,unal-edigital1-2020-1/wp2-simulacion-captura-grupo-03,274723511,Verilog,wp2-simulacion-captura-grupo-03,352397,0,2020-07-31 00:42:58+00:00,[],None
236,https://github.com/yunusdawji/roccverilogaccelerator.git,2020-06-21 20:30:24+00:00,,0,yunusdawji/roccverilogaccelerator,273979009,Verilog,roccverilogaccelerator,139,0,2020-06-21 20:33:00+00:00,[],None
237,https://github.com/ajaykatoch1/32_Bit_MIPS_Processor.git,2020-06-22 18:29:50+00:00,"This project was for me and my partner's ECE369 course. We created a 32 Bit Processor which interprets and processes MIPS instructions utilizing pipelining, data forwarding, and data hazards. This was created using Verilog, to setup the processor create a Verilog project and import the files, add the MIPS instruction in data memory to be processed. ",0,ajaykatoch1/32_Bit_MIPS_Processor,274213752,Verilog,32_Bit_MIPS_Processor,33,0,2020-06-22 18:46:39+00:00,[],None
238,https://github.com/robmacl/ilemt_fpga.git,2020-05-29 14:43:06+00:00,Verilog code and Vivado definitions for the ILEMT FPGA firmware,0,robmacl/ilemt_fpga,267881627,Verilog,ilemt_fpga,25129,0,2021-03-15 21:31:38+00:00,[],None
239,https://github.com/likelion-hyeonjun/DMA.git,2020-06-10 06:11:20+00:00,last lab!,0,likelion-hyeonjun/DMA,271193863,Verilog,DMA,14,0,2020-06-10 06:15:39+00:00,[],None
240,https://github.com/Rizwan-S/VerilogProgress.git,2020-06-05 10:19:22+00:00,Contains my progress of Verilog HDL,0,Rizwan-S/VerilogProgress,269598846,Verilog,VerilogProgress,1619,0,2020-06-05 10:24:54+00:00,[],None
241,https://github.com/cadenmr/datatape.git,2020-06-05 09:37:42+00:00,This project aims to use a FPGA to store high-speed data on a S-VHS tape using an unmodified VCR,0,cadenmr/datatape,269588721,Verilog,datatape,102087,0,2020-08-19 01:35:32+00:00,[],None
242,https://github.com/Anudeepreddynarala/Stepper_motor_control_verilog.git,2020-06-18 14:41:49+00:00,,0,Anudeepreddynarala/Stepper_motor_control_verilog,273263307,Verilog,Stepper_motor_control_verilog,2,0,2020-06-18 14:43:54+00:00,[],None
243,https://github.com/MuhanadAtef/16-bit-fixed-point-divisor.git,2020-06-19 13:50:27+00:00,Hardware circuit to perform the division of two 16-bit fixed point digits,1,MuhanadAtef/16-bit-fixed-point-divisor,273505217,Verilog,16-bit-fixed-point-divisor,190,0,2020-06-19 14:25:52+00:00,[],https://api.github.com/licenses/apache-2.0
244,https://github.com/RTae/CPE224-Project.git,2020-05-26 19:05:18+00:00,Home Automation. This is the project that part of CPE224 KMUTT,0,RTae/CPE224-Project,267128748,Verilog,CPE224-Project,11,0,2020-05-26 19:07:39+00:00,[],None
245,https://github.com/232322336666/de2---115-FPGA-lab-and-nios-ii-lab-opensouce.git,2020-06-03 03:14:33+00:00,"This experimental package is based on de2-115 development boardIn lab_Verilog_offical, there are 10 FPGA experiments and 5 niosii experiments based on this development version.FPGA experiment: lab1, lab2, lab3, lab4, lab7, lab8 was stored in the labEmbedded system experiment: qrs_lab1, qrs_lab2, qrs_lab3In the report, the experimental reports are stored in PDF format.@ Copyrights It is only for open source for learning the developer of the DE2-115, in order to promote the FPGA to study.All forms of commercial communication are prohibited.",0,232322336666/de2---115-FPGA-lab-and-nios-ii-lab-opensouce,268977829,Verilog,de2---115-FPGA-lab-and-nios-ii-lab-opensouce,127932,0,2020-06-03 03:22:12+00:00,[],None
246,https://github.com/Beaker73/Verilog8Bit.git,2020-06-03 14:51:35+00:00,8 Bit Machine using Verilog on 8BitWorkshop,0,Beaker73/Verilog8Bit,269115846,Verilog,Verilog8Bit,74,0,2021-07-29 16:35:33+00:00,[],https://api.github.com/licenses/mit
247,https://github.com/tasuka98/SPI_Master.git,2020-05-23 03:46:36+00:00,SPI Master implemented in Verilog HDL,1,tasuka98/SPI_Master,266257627,Verilog,SPI_Master,1,0,2020-05-23 03:48:11+00:00,[],None
248,https://github.com/iremkilinc99/Bil264-dev1.git,2020-05-22 18:44:17+00:00,,0,iremkilinc99/Bil264-dev1,266183590,Verilog,Bil264-dev1,2,0,2020-05-22 18:45:11+00:00,[],None
249,https://github.com/JDLopes/iob-mul.git,2020-06-01 14:18:05+00:00,,2,JDLopes/iob-mul,268542406,Verilog,iob-mul,10,0,2022-01-06 22:55:13+00:00,[],https://api.github.com/licenses/bsd-3-clause
250,https://github.com/Yaswant-kowtha/State-Machine-Based-Digital-Lock.git,2020-06-01 13:49:14+00:00,,0,Yaswant-kowtha/State-Machine-Based-Digital-Lock,268535200,Verilog,State-Machine-Based-Digital-Lock,4,0,2020-07-27 15:57:00+00:00,[],None
251,https://github.com/Alpha-UCAS/OpenRoad-flow.git,2020-06-01 15:56:20+00:00,,0,Alpha-UCAS/OpenRoad-flow,268566906,Verilog,OpenRoad-flow,92780,0,2020-07-08 07:40:50+00:00,[],https://api.github.com/licenses/bsd-2-clause
252,https://github.com/phucnamjose/robot_CPLD.git,2020-06-01 05:39:57+00:00,CPLD MAX II 570,0,phucnamjose/robot_CPLD,268434759,Verilog,robot_CPLD,3678,0,2020-06-17 13:17:19+00:00,[],None
253,https://github.com/Matthew-Cooke289/CWM-ECAD.git,2020-06-01 02:49:44+00:00,EngSci A5 CWM ECAD Repository,48,Matthew-Cooke289/CWM-ECAD,268409993,Verilog,CWM-ECAD,25,0,2021-05-11 19:06:47+00:00,[],None
254,https://github.com/thesmallstar/Processor-in-Verilog.git,2020-06-10 11:36:02+00:00,,0,thesmallstar/Processor-in-Verilog,271260022,Verilog,Processor-in-Verilog,1769,0,2020-06-10 11:37:11+00:00,[],None
255,https://github.com/s3660898/EEET2612_ADD_Audio_Capture.git,2020-06-09 07:30:19+00:00,Audio capture project for EEET2612 Advanced Digital Design.,0,s3660898/EEET2612_ADD_Audio_Capture,270933514,Verilog,EEET2612_ADD_Audio_Capture,61,0,2020-07-09 06:38:11+00:00,[],None
256,https://github.com/JasmineMadonna/SuperScalar_Verilog.git,2020-06-09 06:25:57+00:00,An implementation of super scalar processor for MIPS ISA in Verilog. ,2,JasmineMadonna/SuperScalar_Verilog,270920865,Verilog,SuperScalar_Verilog,64,0,2021-06-17 13:47:31+00:00,[],None
257,https://github.com/KhaledAmgad/ODE-Solver.git,2020-06-09 05:01:25+00:00,VLSI Project 3rd year 2nd semester ,0,KhaledAmgad/ODE-Solver,270906940,Verilog,ODE-Solver,6776,0,2020-06-09 05:07:58+00:00,[],None
258,https://github.com/jackchen03/CA_Final_Project.git,2020-06-10 09:54:59+00:00,Implementation of a RISC-V CPU,0,jackchen03/CA_Final_Project,271240627,Verilog,CA_Final_Project,2706,0,2021-08-03 13:25:54+00:00,"['assembly', 'risc-v', 'verilog', 'simulation']",None
259,https://github.com/molnara/helloworld_MiSTer.git,2020-05-21 20:07:05+00:00,,0,molnara/helloworld_MiSTer,265941406,Verilog,helloworld_MiSTer,746,0,2020-05-21 20:53:03+00:00,[],https://api.github.com/licenses/gpl-2.0
260,https://github.com/thehanriver/VGA-Board-Lock.git,2020-05-24 09:43:10+00:00,,0,thehanriver/VGA-Board-Lock,266510998,Verilog,VGA-Board-Lock,82,0,2020-05-24 09:49:52+00:00,[],None
261,https://github.com/nucfive/xilinx_ip_sim.git,2020-06-20 13:25:15+00:00,xilinx ip sim,0,nucfive/xilinx_ip_sim,273712823,Verilog,xilinx_ip_sim,86,0,2020-06-26 12:56:31+00:00,[],None
262,https://github.com/vien20010/Verilog.git,2020-06-20 07:29:22+00:00,,0,vien20010/Verilog,273660276,Verilog,Verilog,5,0,2020-06-20 16:26:25+00:00,[],None
263,https://github.com/andrescortes/ARMv-8Processor.git,2020-06-20 15:33:21+00:00,Arquitecture of Computer(Processor MonoCicle),0,andrescortes/ARMv-8Processor,273735066,Verilog,ARMv-8Processor,915,0,2020-06-20 15:37:54+00:00,[],None
264,https://github.com/wylieza/revenge_of_the_synth.git,2020-05-21 06:46:24+00:00,This is the YODA (Your own digital accelerator) project from UCT's EEE4020 course,0,wylieza/revenge_of_the_synth,265775578,Verilog,revenge_of_the_synth,291,0,2020-06-26 15:27:52+00:00,[],None
265,https://github.com/tim1207/adder.git,2020-06-08 11:01:24+00:00,加法器,0,tim1207/adder,270634830,Verilog,adder,1,0,2020-06-08 11:02:11+00:00,[],None
266,https://github.com/tim1207/Seven-Segment.git,2020-06-08 11:23:37+00:00,7段顯示器,0,tim1207/Seven-Segment,270641272,Verilog,Seven-Segment,2,0,2020-06-08 11:24:34+00:00,[],None
267,https://github.com/tim1207/FML.git,2020-06-08 11:07:24+00:00,行人號誌,0,tim1207/FML,270636581,Verilog,FML,2,0,2020-06-08 11:08:16+00:00,[],None
268,https://github.com/gj-entertain/Pipeline-CPU.git,2020-06-10 12:00:48+00:00,Course project for Computer Organization,0,gj-entertain/Pipeline-CPU,271265171,Verilog,Pipeline-CPU,63,0,2020-06-10 12:38:16+00:00,[],None
269,https://github.com/tomchean/risc-v_cpu_implement.git,2020-06-05 14:10:47+00:00,,0,tomchean/risc-v_cpu_implement,269659231,Verilog,risc-v_cpu_implement,22522,0,2021-09-23 08:23:12+00:00,[],None
270,https://github.com/cuongloveyou/paraller.git,2020-06-08 03:33:51+00:00,,1,cuongloveyou/paraller,270515734,Verilog,paraller,245,0,2020-06-28 16:00:06+00:00,[],None
271,https://github.com/RenJunsong/Verilog_learning.git,2020-06-07 02:54:42+00:00,Some learning codes of Verilog and SystemVerilog,0,RenJunsong/Verilog_learning,270172903,Verilog,Verilog_learning,701,0,2021-07-20 09:06:12+00:00,[],None
272,https://github.com/vkrao100/modelsim_test.git,2020-06-07 23:00:42+00:00,Sample files to compile and run RTL design files on modelsim,0,vkrao100/modelsim_test,270456271,Verilog,modelsim_test,2867,0,2020-06-07 23:03:07+00:00,[],None
273,https://github.com/prasadreddy86/coco-86.git,2020-06-06 16:30:50+00:00,,0,prasadreddy86/coco-86,270038436,Verilog,coco-86,1,0,2020-06-06 16:39:22+00:00,[],None
274,https://github.com/AndrewCraddick/XADC_demo.git,2020-06-22 18:39:53+00:00,Displays analog input to 7 segment display on Basys 3 using DRP (Dynamic Reconfiguration Port),1,AndrewCraddick/XADC_demo,274215743,Verilog,XADC_demo,2757,0,2021-06-01 01:28:28+00:00,[],None
275,https://github.com/DicardoX/CS145-Lab-for-Computer-Architecture.git,2020-05-27 15:52:23+00:00,,0,DicardoX/CS145-Lab-for-Computer-Architecture,267362602,Verilog,CS145-Lab-for-Computer-Architecture,78,0,2020-07-01 04:31:57+00:00,[],None
276,https://github.com/vishruthys/VerilogProjects.git,2020-05-26 04:36:32+00:00,,0,vishruthys/VerilogProjects,266945353,Verilog,VerilogProjects,190,0,2020-12-27 23:36:55+00:00,[],https://api.github.com/licenses/gpl-2.0
277,https://github.com/Kiran760043/Parallel-In-Serial-Out.git,2020-06-01 00:16:23+00:00,FPGA Programs,0,Kiran760043/Parallel-In-Serial-Out,268387223,Verilog,Parallel-In-Serial-Out,89,0,2020-06-01 01:00:47+00:00,[],None
278,https://github.com/TahirT/Detyra_AOK.git,2020-05-26 23:05:31+00:00,,0,TahirT/Detyra_AOK,267170396,Verilog,Detyra_AOK,124,0,2020-05-31 15:51:43+00:00,[],None
279,https://github.com/hongxutian/DES_verilog-.git,2020-05-29 09:42:51+00:00,Implementation of DES algorithm with verilog,0,hongxutian/DES_verilog-,267821506,Verilog,DES_verilog-,23,0,2020-05-29 11:38:58+00:00,[],None
280,https://github.com/wxhhw/Pipeline_CPU.git,2020-06-04 11:29:14+00:00,MIPS architecture,0,wxhhw/Pipeline_CPU,269341556,,Pipeline_CPU,35,0,2021-07-27 02:18:21+00:00,[],None
281,https://github.com/Liuyangfeixiao/MIPS_CPU.git,2020-05-25 04:32:04+00:00,存放MIPS_CPU代码,0,Liuyangfeixiao/MIPS_CPU,266683228,Verilog,MIPS_CPU,40236,0,2020-08-24 02:16:48+00:00,[],None
282,https://github.com/sreesai1412/A1-A3-A4.git,2020-06-10 09:51:25+00:00,"CS250 Computer Organisation and Architecture Assignment A1,A3,A4",0,sreesai1412/A1-A3-A4,271239892,Verilog,A1-A3-A4,7449,0,2020-06-14 18:28:29+00:00,[],None
283,https://github.com/Nanaick/FPGA_CODE.git,2020-06-14 12:48:46+00:00,仿真开发,0,Nanaick/FPGA_CODE,272201131,Verilog,FPGA_CODE,6160,0,2020-06-14 13:38:59+00:00,[],None
284,https://github.com/pbucukoglu/aes.git,2020-06-17 10:58:39+00:00,,0,pbucukoglu/aes,272950671,Verilog,aes,2650,0,2020-06-17 10:59:08+00:00,[],None
285,https://github.com/dc-base/fpga-7_segment.git,2020-06-05 06:19:22+00:00,,0,dc-base/fpga-7_segment,269546613,Verilog,fpga-7_segment,5,0,2020-08-30 07:53:45+00:00,[],None
286,https://github.com/NadeenAhmad/Pipelined-MIPS-datapath-simulator.git,2020-06-12 16:28:36+00:00,,0,NadeenAhmad/Pipelined-MIPS-datapath-simulator,271843176,Verilog,Pipelined-MIPS-datapath-simulator,18,0,2020-06-13 09:23:59+00:00,[],None
287,https://github.com/aroshanineshat/SAP1-CPU.git,2020-05-25 08:29:51+00:00,"A prototype of SAP1 CPU based on ""Digital Computer Electronics"" written by Albert Paul Malvino",0,aroshanineshat/SAP1-CPU,266725609,Verilog,SAP1-CPU,4,0,2020-08-09 21:01:37+00:00,[],https://api.github.com/licenses/mit
288,https://github.com/moefh/fpga-vga-driver.git,2020-05-21 09:38:41+00:00,Simple VGA driver using an FPGA,0,moefh/fpga-vga-driver,265809744,Verilog,fpga-vga-driver,45,0,2020-05-21 10:23:36+00:00,[],https://api.github.com/licenses/mit
289,https://github.com/rykit-five/15bit-cpu.git,2020-05-23 00:13:04+00:00,,0,rykit-five/15bit-cpu,266231952,Verilog,15bit-cpu,114,0,2021-11-06 08:22:42+00:00,[],None
290,https://github.com/YushchenkoAndrew/FPGA_Projects.git,2020-06-07 20:54:54+00:00,,0,YushchenkoAndrew/FPGA_Projects,270429906,Verilog,FPGA_Projects,1482,0,2020-06-07 21:09:11+00:00,[],None
291,https://github.com/hizircanbayram/NumberAnalyzer.git,2020-06-07 02:56:03+00:00,"Number-Analyzer is a single-purpose processor that queries if a given 32-bit number is even number, fibonacci number and palindrome number programmed via Verilog during my 8th semester",0,hizircanbayram/NumberAnalyzer,270173195,Verilog,NumberAnalyzer,3098,0,2020-07-16 22:12:14+00:00,[],None
292,https://github.com/iremkilinc99/Bil264L-dev2.git,2020-05-22 18:49:15+00:00,,0,iremkilinc99/Bil264L-dev2,266184518,Verilog,Bil264L-dev2,1,0,2020-05-22 18:49:53+00:00,[],None
293,https://github.com/mevlydehoxha/SingleCycle-CPU.git,2020-05-26 14:29:42+00:00,,0,mevlydehoxha/SingleCycle-CPU,267066038,,SingleCycle-CPU,9,0,2020-06-24 09:56:57+00:00,[],https://api.github.com/licenses/apache-2.0
294,https://github.com/atarayozuki/verilog_fp.git,2020-06-04 08:49:57+00:00,,0,atarayozuki/verilog_fp,269307498,Verilog,verilog_fp,4527,0,2020-06-04 09:46:27+00:00,[],None
295,https://github.com/phule0604/Volleyballcounter-useVerilog_Language_on_DE2i-150-.git,2020-06-09 03:36:56+00:00,,0,phule0604/Volleyballcounter-useVerilog_Language_on_DE2i-150-,270895190,Verilog,Volleyballcounter-useVerilog_Language_on_DE2i-150-,4,0,2020-06-09 03:37:44+00:00,[],None
296,https://github.com/Kyp069/sdram-test.git,2020-06-11 15:47:10+00:00,SDRAM test for LX16-2 board,1,Kyp069/sdram-test,271586051,Verilog,sdram-test,26,0,2020-06-12 15:05:28+00:00,[],None
297,https://github.com/jeanbrag/digitalelectronic-coffee-maker.git,2020-05-24 03:32:55+00:00,Desenvolvimento de uma Máquina de Café em verilog para embarcar em um FPGA. ,0,jeanbrag/digitalelectronic-coffee-maker,266463215,Verilog,digitalelectronic-coffee-maker,2199,0,2020-05-24 03:38:24+00:00,[],https://api.github.com/licenses/mit
298,https://github.com/benx45h/SincereMicro.git,2020-05-28 12:18:46+00:00,A synthesizable verilog design for SHENZHEN IO's MCxxxx family of microcontrollers.,0,benx45h/SincereMicro,267581993,Verilog,SincereMicro,94,0,2021-03-12 22:50:38+00:00,[],https://api.github.com/licenses/mit
299,https://github.com/Williamrjw/Yinger.git,2020-05-30 11:17:03+00:00,A CPU,0,Williamrjw/Yinger,268064381,Verilog,Yinger,20,0,2020-06-05 05:28:52+00:00,[],https://api.github.com/licenses/gpl-3.0
300,https://github.com/JCloete/YODA-Project.git,2020-06-02 18:51:01+00:00,Repository to hold all files related to VADER Yoda Project,0,JCloete/YODA-Project,268882918,Verilog,YODA-Project,422,0,2020-06-26 21:47:10+00:00,[],None
301,https://github.com/SakuLaQAQ/verilog_TEST.git,2020-05-25 11:11:51+00:00,,0,SakuLaQAQ/verilog_TEST,266758529,Verilog,verilog_TEST,1,0,2020-05-25 12:08:18+00:00,[],None
302,https://github.com/Chang-213/Computer-Organization-and-Design.git,2020-06-24 18:27:47+00:00,All the work that I have done for ECE 411 - Computer Organization and Design. The MPs were a buildup for a final MP which consisted of making a fully functional processor in the RISC-V architecture .,0,Chang-213/Computer-Organization-and-Design,274741282,Verilog,Computer-Organization-and-Design,3511,0,2020-06-24 21:13:37+00:00,[],None
303,https://github.com/Caspar21/CRC32.git,2020-06-05 08:27:00+00:00,cyclic redundancy check (CRC) is an error-detecting code commonly used in digital networks and storage devices to detect accidental changes to raw data.,0,Caspar21/CRC32,269573015,Verilog,CRC32,7,0,2020-06-05 08:28:19+00:00,[],None
304,https://github.com/imbrem/flow.git,2020-06-24 05:26:37+00:00,,0,imbrem/flow,274582680,Verilog,flow,255,0,2020-06-24 05:27:24+00:00,[],None
305,https://github.com/LDMDS/FPGA-Xilinx-Virtex-TestTEMAC.git,2020-06-19 21:08:25+00:00,Test TEMAC,0,LDMDS/FPGA-Xilinx-Virtex-TestTEMAC,273586792,Verilog,FPGA-Xilinx-Virtex-TestTEMAC,149,0,2020-06-23 16:01:50+00:00,[],https://api.github.com/licenses/mit
306,https://github.com/dimamironov/lab2.git,2020-06-20 11:56:24+00:00,,0,dimamironov/lab2,273698926,Verilog,lab2,747,0,2020-06-20 12:42:39+00:00,[],None
307,https://github.com/sivsnkr/ca_lab.git,2020-06-01 13:46:01+00:00,,0,sivsnkr/ca_lab,268534418,Verilog,ca_lab,812,0,2020-06-02 16:19:10+00:00,[],None
308,https://github.com/austinhart61/bluberry-cpu.git,2020-05-30 01:48:29+00:00,A simple 8 bit homebrew CPU ,0,austinhart61/bluberry-cpu,267990064,Verilog,bluberry-cpu,6,0,2020-05-30 01:54:20+00:00,[],None
309,https://github.com/nicomesa20/ARMV_8Proccessor.git,2020-05-22 23:34:20+00:00,,0,nicomesa20/ARMV_8Proccessor,266227496,Verilog,ARMV_8Proccessor,494,0,2020-05-25 19:49:45+00:00,[],None
310,https://github.com/ymizushi/quartus-prjs.git,2020-05-24 09:40:24+00:00,FPGA projects repository,0,ymizushi/quartus-prjs,266510602,Verilog,quartus-prjs,13,0,2020-05-24 18:02:13+00:00,[],None
311,https://github.com/loboda4450/Infix_to_postfix.git,2020-05-24 18:31:08+00:00,Nice version of infix to postfix notation converter written in System Verilog. Calculator sucks.,0,loboda4450/Infix_to_postfix,266601240,Verilog,Infix_to_postfix,18,0,2020-06-18 16:31:47+00:00,[],None
312,https://github.com/manasdtrivedi/MIPS-Datapath-Components-and-ALU-Design.git,2020-05-21 11:48:53+00:00,COA Assignment 3 ,0,manasdtrivedi/MIPS-Datapath-Components-and-ALU-Design,265835025,Verilog,MIPS-Datapath-Components-and-ALU-Design,5293,0,2020-06-16 08:22:49+00:00,[],None
313,https://github.com/yehia2000000/sbqm.git,2020-06-03 08:34:07+00:00,,0,yehia2000000/sbqm,269033666,Verilog,sbqm,1,0,2020-06-03 08:59:40+00:00,[],None
314,https://github.com/Sakthi-Sairaj/4-bit-ALU-Design.git,2020-06-03 04:52:07+00:00,4-bit ALU Design in Verilog HDL,0,Sakthi-Sairaj/4-bit-ALU-Design,268992408,Verilog,4-bit-ALU-Design,1154,0,2020-06-03 05:03:05+00:00,[],None
315,https://github.com/CEduardoSQUTEC/CA-Microprocessor.git,2020-06-02 02:03:01+00:00,,0,CEduardoSQUTEC/CA-Microprocessor,268677827,Verilog,CA-Microprocessor,7918,0,2020-07-06 20:28:13+00:00,[],None
316,https://github.com/sankalpgambhir/petris.git,2020-06-04 16:45:57+00:00,"An FPGA based Tetris clone, with an emulated VGA output running on SDL.",0,sankalpgambhir/petris,269413583,Verilog,petris,779,0,2021-10-13 16:57:22+00:00,"['fpga', 'fpga-programming', 'verilog', 'tetris-clone']",https://api.github.com/licenses/mpl-2.0
317,https://github.com/ahmeddibrahim/FULL-PIPELINED-RISCV-PROCESSOR.git,2020-06-06 00:01:16+00:00,,0,ahmeddibrahim/FULL-PIPELINED-RISCV-PROCESSOR,269813921,Verilog,FULL-PIPELINED-RISCV-PROCESSOR,22,0,2020-06-06 00:02:59+00:00,[],None
318,https://github.com/Dhiraj03/MIPS-uPOWER_ALU.git,2020-05-31 18:01:47+00:00,ALU Design in Verilog for MIPS and uPower ISA.,0,Dhiraj03/MIPS-uPOWER_ALU,268335147,Verilog,MIPS-uPOWER_ALU,193,0,2020-05-31 18:03:58+00:00,[],None
319,https://github.com/divya-sri7v/HDLC-Framer.git,2020-06-06 10:43:11+00:00,"The High Level Link Control (HDLC) protocol defined by the International Standards Organisation (ISO) provides a transparent transmission service at the data link layer of the OSI reference model. Many protocol suites use an HDLC (or HDLC-based) link layer, including X.25, the IP point-to-point protocol (PPP) and SNA.  The users of the HDLC service provides PDUs which are encapsulated to form data link layer frames. These frames are separated by HDLC ""flags"" and are modified by ""zero bit insertion"" to guarantee transparency. ",0,divya-sri7v/HDLC-Framer,269949605,Verilog,HDLC-Framer,2,0,2020-12-08 04:06:42+00:00,[],None
320,https://github.com/Priyanthat/Digital_Revolution.git,2020-06-09 15:47:32+00:00,"The Digital Revolution, An Introduction to FPGA Design using Verilog",0,Priyanthat/Digital_Revolution,271044418,Verilog,Digital_Revolution,7530,0,2020-06-25 16:36:12+00:00,[],None
321,https://github.com/a-msy/jikken-a2.git,2020-06-07 08:17:46+00:00,岡山大学　情報工学実験A　ハードウェア　　プロセッサの設計,0,a-msy/jikken-a2,270239792,Verilog,jikken-a2,33374,0,2020-06-14 12:31:33+00:00,[],None
322,https://github.com/realtiansu/Aruba.git,2020-06-15 07:04:07+00:00,,0,realtiansu/Aruba,272365991,Verilog,Aruba,0,0,2020-06-15 07:04:28+00:00,[],None
323,https://github.com/Learning-Jench2103/LSDLab_FinalProject_PedestrianTrafficLight.git,2020-06-11 07:50:32+00:00,"Final Project of Logic System Design Lab in NCKU EE, Spring 2020.",0,Learning-Jench2103/LSDLab_FinalProject_PedestrianTrafficLight,271485034,Verilog,LSDLab_FinalProject_PedestrianTrafficLight,6,0,2020-07-04 06:28:44+00:00,[],None
324,https://github.com/ALGCDG/smallCPU.git,2020-06-08 18:23:43+00:00,a very small CPU,0,ALGCDG/smallCPU,270779054,Verilog,smallCPU,59,0,2020-09-19 14:33:30+00:00,[],None
325,https://github.com/zamanimatin/Computer-ArchitectureCA4.git,2020-06-23 08:24:10+00:00,,0,zamanimatin/Computer-ArchitectureCA4,274350756,Verilog,Computer-ArchitectureCA4,133,0,2020-08-05 07:42:40+00:00,[],None
326,https://github.com/v1c7or20/MIPS-Implementation.git,2020-06-21 16:47:15+00:00,,0,v1c7or20/MIPS-Implementation,273945903,Verilog,MIPS-Implementation,486,0,2020-07-15 05:16:14+00:00,[],None
327,https://github.com/adhamosama/uart.git,2020-06-22 18:02:54+00:00,Uart Receiver and Transmitter verilog implementation. Supplied with test bench.,0,adhamosama/uart,274208324,Verilog,uart,3,0,2020-07-19 16:35:16+00:00,[],None
328,https://github.com/Adnan-Shahid/Tron-Game-Hardware.git,2020-06-25 20:29:59+00:00,,0,Adnan-Shahid/Tron-Game-Hardware,275009150,Verilog,Tron-Game-Hardware,17308,0,2020-06-25 20:34:57+00:00,[],None
329,https://github.com/xclwt/MIPS-20.git,2020-06-25 12:01:31+00:00,A CPU supporting 20 MIPS instructions,0,xclwt/MIPS-20,274905329,Verilog,MIPS-20,128,0,2020-09-02 13:18:40+00:00,[],https://api.github.com/licenses/gpl-3.0
330,https://github.com/HeuMindFusion/FPGA-CODE.git,2020-06-24 02:59:45+00:00,,0,HeuMindFusion/FPGA-CODE,274561075,Verilog,FPGA-CODE,190,0,2020-06-24 03:02:07+00:00,[],None
331,https://github.com/ECEN499-NASA/Libero.git,2020-06-24 04:38:53+00:00,,1,ECEN499-NASA/Libero,274576084,Verilog,Libero,393873,0,2023-01-27 21:20:31+00:00,[],None
332,https://github.com/tintinmaster/sysarch.git,2020-06-17 06:39:28+00:00,Projekt für die Systemarchitektur Vorlesung,0,tintinmaster/sysarch,272897579,Verilog,sysarch,364,0,2021-02-28 22:39:09+00:00,[],None
333,https://github.com/austinsbrown/UART.git,2020-06-10 14:50:24+00:00,,0,austinsbrown/UART,271304638,Verilog,UART,4,0,2020-06-12 16:53:54+00:00,[],None
334,https://github.com/Anudeepreddynarala/verilog-code-for-ultrasonic-sensor-interface.git,2020-06-18 15:32:49+00:00,,0,Anudeepreddynarala/verilog-code-for-ultrasonic-sensor-interface,273275410,Verilog,verilog-code-for-ultrasonic-sensor-interface,2,0,2020-06-18 15:34:18+00:00,[],None
335,https://github.com/emn1249/Verilog_Calculator.git,2020-06-18 07:41:53+00:00,this project is from my Digital Programmable Circuits course which ı used verilog with Reverse Polish Notation.,0,emn1249/Verilog_Calculator,273173636,Verilog,Verilog_Calculator,59,0,2020-06-18 07:43:38+00:00,[],None
336,https://github.com/raghulravichandran98/VerilogDump.git,2020-05-27 15:22:05+00:00,Dumping up my practice verilog miniprojects,0,raghulravichandran98/VerilogDump,267355139,Verilog,VerilogDump,12,0,2020-05-27 17:56:06+00:00,[],None
337,https://github.com/dong-yf/singleCycleCPU_hw.git,2020-05-26 02:53:36+00:00,N/A,0,dong-yf/singleCycleCPU_hw,266930085,Verilog,singleCycleCPU_hw,74,0,2020-05-26 03:04:11+00:00,[],None
338,https://github.com/yukaii2019/LogicDesignLab_Final.git,2020-05-22 06:54:50+00:00,,0,yukaii2019/LogicDesignLab_Final,266040418,Verilog,LogicDesignLab_Final,159,0,2020-06-06 05:42:03+00:00,[],None
339,https://github.com/keltah2/DigitalSystemsDesign-AddersMultiplier.git,2020-05-29 02:28:48+00:00,"ECE 465 (Digital Systems Design) Project involving 32-bit RCA, 4-bit CLA, 32-bit CLA, and 32-bit Multiplier through Verilog.",1,keltah2/DigitalSystemsDesign-AddersMultiplier,267746548,Verilog,DigitalSystemsDesign-AddersMultiplier,497,0,2020-11-19 19:18:56+00:00,[],None
340,https://github.com/hurryingauto3/CS330-Pipelined-RISC-V-Processor.git,2020-06-25 14:55:13+00:00,Final project for Computer Architecture. ,0,hurryingauto3/CS330-Pipelined-RISC-V-Processor,274943795,Verilog,CS330-Pipelined-RISC-V-Processor,298,0,2022-12-04 20:19:08+00:00,[],None
341,https://github.com/luishg/jtdd.git,2020-05-29 08:34:33+00:00,Double Dragon FPGA core,7,luishg/jtdd,267807603,,jtdd,12567,0,2020-05-29 08:34:35+00:00,[],https://api.github.com/licenses/agpl-3.0
342,https://github.com/xxmlala/Music-elves.git,2020-05-29 14:27:10+00:00,This is my Digital-logic-course's final work.,0,xxmlala/Music-elves,267877970,Verilog,Music-elves,3,0,2020-05-29 14:45:30+00:00,[],None
343,https://github.com/ylber-gashi/MIPS_16bit_CPU-Verilog.git,2020-06-01 23:14:13+00:00,,0,ylber-gashi/MIPS_16bit_CPU-Verilog,268652755,Verilog,MIPS_16bit_CPU-Verilog,3,0,2020-11-21 18:24:03+00:00,[],None
344,https://github.com/alvinox/myRiscv.git,2020-06-02 02:20:15+00:00,exercise for RISC-V,0,alvinox/myRiscv,268680635,Verilog,myRiscv,2369,0,2020-06-02 02:21:32+00:00,[],None
345,https://github.com/karthikgre273/256PointFFTDesignUsingJava.git,2020-05-26 09:15:56+00:00,A quick way to generate 256 point FFT verilog design using Java,0,karthikgre273/256PointFFTDesignUsingJava,266997628,Verilog,256PointFFTDesignUsingJava,78,0,2020-05-26 09:16:38+00:00,[],None
346,https://github.com/swarnika12/Digital_swar.git,2020-06-07 13:57:44+00:00,,0,swarnika12/Digital_swar,270322769,Verilog,Digital_swar,14,0,2020-06-07 14:16:31+00:00,[],None
347,https://github.com/Shaurya140894/Booth-Multiplier.git,2020-06-07 18:54:16+00:00,,0,Shaurya140894/Booth-Multiplier,270401558,Verilog,Booth-Multiplier,2,0,2020-06-07 19:06:38+00:00,[],None
348,https://github.com/pbucukoglu/264-aes.git,2020-06-17 10:45:43+00:00,264 aes veri sifreleme projesi,1,pbucukoglu/264-aes,272948122,Verilog,264-aes,867,0,2020-06-17 10:53:04+00:00,[],https://api.github.com/licenses/bsd-2-clause
349,https://github.com/Anudeepreddynarala/UART_verilog.git,2020-06-18 14:48:56+00:00,Verilog implementation of UART,0,Anudeepreddynarala/UART_verilog,273265042,Verilog,UART_verilog,5,0,2020-06-18 16:10:19+00:00,[],None
350,https://github.com/umairahmadh/RTL-projects.git,2020-06-04 07:23:17+00:00,,0,umairahmadh/RTL-projects,269288977,Verilog,RTL-projects,3940,0,2022-12-04 17:12:07+00:00,[],None
351,https://github.com/tangchuanchuan/helloworld.git,2020-06-05 03:51:33+00:00,a,0,tangchuanchuan/helloworld,269525655,Verilog,helloworld,1,0,2020-06-05 05:25:13+00:00,[],None
352,https://github.com/robincs07/computer_organization.git,2020-06-05 04:33:12+00:00,,0,robincs07/computer_organization,269531288,Verilog,computer_organization,3576,0,2020-06-05 04:41:29+00:00,[],None
353,https://github.com/elischmitter/FPGA-WS2812B.git,2020-06-10 19:11:16+00:00,attempt to make a WS2812B driver using verlog and FPGA ,0,elischmitter/FPGA-WS2812B,271363507,Verilog,FPGA-WS2812B,2,0,2020-06-25 00:38:39+00:00,[],None
354,https://github.com/amit-ro/basic-naive-multicycle-cpu.git,2020-06-10 15:20:00+00:00,very basic multi cycle CPU that was implemented on an FPGA,0,amit-ro/basic-naive-multicycle-cpu,271312310,Verilog,basic-naive-multicycle-cpu,51,0,2020-09-12 12:43:07+00:00,[],None
355,https://github.com/sourabhsingh76/DLD_Project.git,2020-06-13 08:24:58+00:00,,0,sourabhsingh76/DLD_Project,271969552,Verilog,DLD_Project,141,0,2020-06-14 06:11:53+00:00,[],None
356,https://github.com/burnerlee/ECN-104--Project-2020.git,2020-06-14 11:30:27+00:00,,0,burnerlee/ECN-104--Project-2020,272188617,Verilog,ECN-104--Project-2020,6,0,2020-06-14 11:31:13+00:00,[],None
357,https://github.com/npdoan1996/Full-UART.git,2020-06-03 04:46:31+00:00,This project implements the Universal Asynchronous Receiver Transmit for the 16-bit softcore processor,0,npdoan1996/Full-UART,268991670,Verilog,Full-UART,2747,0,2020-06-03 04:50:05+00:00,[],None
358,https://github.com/nyc1893/Verilog-HDL.git,2020-06-19 07:01:42+00:00,some modelsim used test bench,0,nyc1893/Verilog-HDL,273427031,Verilog,Verilog-HDL,6,0,2020-06-19 07:05:02+00:00,[],None
359,https://github.com/ssankana/modelsim_test.git,2020-06-19 20:17:24+00:00,,0,ssankana/modelsim_test,273579146,Verilog,modelsim_test,2786,0,2020-06-19 20:17:38+00:00,[],None
360,https://github.com/hilaltrfllu/VerySimpleCPU.git,2020-06-09 12:51:58+00:00,,0,hilaltrfllu/VerySimpleCPU,271001634,Verilog,VerySimpleCPU,8,0,2021-02-01 14:05:13+00:00,[],https://api.github.com/licenses/mit
361,https://github.com/tcal-x/tcal-yosys-vivado.git,2020-06-09 21:19:04+00:00,Examples using Yosys-Vivado flow,0,tcal-x/tcal-yosys-vivado,271112021,Verilog,tcal-yosys-vivado,22,0,2023-02-13 17:54:32+00:00,[],None
362,https://github.com/GeorgJanowski/EEE4120F_YODA_Project.git,2020-06-24 08:12:16+00:00,Binary coded decimal converter implemented on an FPGA.,0,GeorgJanowski/EEE4120F_YODA_Project,274613031,Verilog,EEE4120F_YODA_Project,19,0,2020-06-25 09:51:40+00:00,[],None
363,https://github.com/Awanit512/MIPS-UPOWER_DATAPATH.git,2020-06-24 07:03:26+00:00,MIPS AND UPOWER USING VERILOG,0,Awanit512/MIPS-UPOWER_DATAPATH,274598920,Verilog,MIPS-UPOWER_DATAPATH,4522,0,2020-06-24 07:15:05+00:00,[],None
364,https://github.com/RithikNambiar/ray_tracing.git,2020-06-06 08:38:02+00:00,,1,RithikNambiar/ray_tracing,269920698,Verilog,ray_tracing,8839,0,2021-06-02 15:59:21+00:00,[],None
365,https://github.com/JamieWonderchild/CAM_YODA.git,2020-06-11 13:10:42+00:00,,0,JamieWonderchild/CAM_YODA,271549289,Verilog,CAM_YODA,183,0,2020-06-26 16:16:42+00:00,[],None
366,https://github.com/djtorch26/CPU-CompArch.git,2020-06-11 16:30:20+00:00,"A CPU using Verilog, and DE0 board, with extension board.",0,djtorch26/CPU-CompArch,271595324,Verilog,CPU-CompArch,44,0,2020-06-11 16:48:43+00:00,[],https://api.github.com/licenses/mit
367,https://github.com/itumeleng96/VADER-EEE4120f.git,2020-06-09 10:22:32+00:00,This project aims to create an add-on device which will speed up recovery of passwords for forensic purposes while being computationally inexpensive. The recovery of the password will require a hashing function and a hashed password.,0,itumeleng96/VADER-EEE4120f,270971022,Verilog,VADER-EEE4120f,74,0,2020-06-27 08:43:19+00:00,[],None
368,https://github.com/elire-r/Detyra-2-ne-AOK.git,2020-06-10 08:24:42+00:00,,0,elire-r/Detyra-2-ne-AOK,271221053,Verilog,Detyra-2-ne-AOK,143,0,2024-01-07 23:39:52+00:00,[],None
369,https://github.com/Mekrab/Single-Cycle-MIPS-Processor.git,2020-06-06 22:49:18+00:00,"MIPS single cycle processor system using Verilog code. Instruction Memory, Data Memory, Control Unit, Datapath Unit. Where Control Unit and Datapath Unit are sub-modules of “MIPS”.",0,Mekrab/Single-Cycle-MIPS-Processor,270125765,Verilog,Single-Cycle-MIPS-Processor,153,0,2020-12-14 14:14:30+00:00,[],None
370,https://github.com/samin-mehdizadeh/computer-architecture-projects.git,2020-06-07 13:53:37+00:00,,0,samin-mehdizadeh/computer-architecture-projects,270321519,Verilog,computer-architecture-projects,66,0,2020-06-07 14:23:58+00:00,[],None
371,https://github.com/swarnika12/Pipeline_new.git,2020-06-07 14:24:37+00:00,,0,swarnika12/Pipeline_new,270330209,Verilog,Pipeline_new,3,0,2020-06-07 14:26:30+00:00,[],None
372,https://github.com/kamlesh349/xge.git,2020-06-05 05:35:50+00:00,10 GE Ethernet,0,kamlesh349/xge,269539730,,xge,64,0,2020-11-16 07:25:07+00:00,[],None
373,https://github.com/weilaidb/fpga.git,2020-06-18 16:22:36+00:00,eg of fpga,0,weilaidb/fpga,273286272,Verilog,fpga,6,0,2020-06-18 23:51:38+00:00,[],None
374,https://github.com/suhasks123/Datapath-MIPS-uPowerISA.git,2020-06-14 06:41:38+00:00,"This repository contains datapath , including the ALU and the Control Unit of the MIPS and uPowerISA",0,suhasks123/Datapath-MIPS-uPowerISA,272147704,,Datapath-MIPS-uPowerISA,1228,0,2020-06-17 14:00:10+00:00,[],None
375,https://github.com/Bobcat0111/Computer-Architecture.git,2020-06-21 20:14:52+00:00,Learning CPU design and modify,0,Bobcat0111/Computer-Architecture,273976953,Verilog,Computer-Architecture,12,0,2020-06-21 20:21:05+00:00,[],None
376,https://github.com/eslam2xm/4-bit-dadda-multiplier.git,2020-06-22 12:22:54+00:00,4 bit dadda multiplier implemented using verilog,0,eslam2xm/4-bit-dadda-multiplier,274129660,Verilog,4-bit-dadda-multiplier,60,0,2020-06-24 20:25:09+00:00,[],None
377,https://github.com/Yousif-Ahmed/SPI-Interface-.git,2020-06-22 04:20:22+00:00,Implementation for SPI-Interface using verilog,0,Yousif-Ahmed/SPI-Interface-,274038476,Verilog,SPI-Interface-,1931,0,2020-06-22 04:29:54+00:00,[],None
378,https://github.com/enverasln/enverasln-cse3038Project2.git,2020-06-09 05:54:32+00:00,The Second Project of Computer Organization (Single-cycle-datapath),0,enverasln/enverasln-cse3038Project2,270915303,Verilog,enverasln-cse3038Project2,265,0,2021-05-23 13:37:16+00:00,[],None
379,https://github.com/narendiran1996/uartTXfromPL.git,2020-06-03 06:06:26+00:00,transmission of certain string from PL using the UART peripheral using DMA in ZYBO zynq,2,narendiran1996/uartTXfromPL,269003576,Verilog,uartTXfromPL,14643,0,2021-09-10 10:10:53+00:00,[],None
380,https://github.com/shantanu-nigam99/MIPS_Processor.git,2020-06-06 14:45:28+00:00,MIPS pipeline processor for Computer Architecture Course,0,shantanu-nigam99/MIPS_Processor,270010316,Verilog,MIPS_Processor,300,0,2020-06-06 15:48:51+00:00,[],None
381,https://github.com/ArslanaWu/CS202-single-cycle-CPU.git,2020-05-29 13:32:02+00:00,,0,ArslanaWu/CS202-single-cycle-CPU,267865462,Verilog,CS202-single-cycle-CPU,8,0,2021-05-14 11:00:09+00:00,[],None
382,https://github.com/DiscreteVic/7SegController.git,2020-06-10 19:27:50+00:00,Controller to 7-seg display developed at DE10-Lite (Altera MAX10),0,DiscreteVic/7SegController,271366781,Verilog,7SegController,12611,0,2021-01-27 17:59:47+00:00,[],https://api.github.com/licenses/gpl-3.0
383,https://github.com/siddhantv10/MIPS32.git,2020-06-11 19:25:11+00:00,Verilog design of RISC MIPS32 microprocessor,0,siddhantv10/MIPS32,271630027,Verilog,MIPS32,176,0,2020-06-25 08:11:54+00:00,[],None
384,https://github.com/karolinakowalczyk/OiAK_projekt.git,2020-06-12 22:09:12+00:00,,0,karolinakowalczyk/OiAK_projekt,271898474,,OiAK_projekt,97,0,2020-11-22 11:35:36+00:00,[],None
385,https://github.com/mashin93/ECE411-Pipelined-Processor.git,2020-06-12 02:46:54+00:00,5-staged RISC-V pipelined processor for course ECE411,0,mashin93/ECE411-Pipelined-Processor,271693321,Verilog,ECE411-Pipelined-Processor,182,0,2020-06-25 23:59:20+00:00,[],None
386,https://github.com/Anandj913/Digital-VLSI.git,2020-05-31 18:49:51+00:00,Contain all the assignment and it's solution for the course VLSI lab [EC39004],0,Anandj913/Digital-VLSI,268343048,Verilog,Digital-VLSI,706,0,2020-05-31 19:14:44+00:00,[],None
387,https://github.com/rochakjain361/IEEE_ALU_ECN-104.git,2020-06-12 21:10:35+00:00,,1,rochakjain361/IEEE_ALU_ECN-104,271890773,Verilog,IEEE_ALU_ECN-104,1559,0,2020-06-14 12:08:45+00:00,[],None
388,https://github.com/jackychiangtw/files.git,2020-05-21 12:33:18+00:00,,0,jackychiangtw/files,265843920,Verilog,files,40,0,2020-05-27 06:51:38+00:00,[],None
389,https://github.com/prawsang/one-credit-undertales.git,2020-05-22 14:50:38+00:00,,1,prawsang/one-credit-undertales,266135532,Verilog,one-credit-undertales,17713,0,2020-05-31 11:13:21+00:00,[],None
390,https://github.com/kurabirko/ceng232-20192-mt2.git,2020-05-25 13:22:33+00:00,Ceng232 2019 Spring Midterm 2 Project,0,kurabirko/ceng232-20192-mt2,266785036,Verilog,ceng232-20192-mt2,2739,0,2020-05-25 14:11:26+00:00,[],None
391,https://github.com/17livincent/iverilog-files.git,2020-05-26 03:11:11+00:00,Verilog files from Design/Synthesis of Digital Hardware course,0,17livincent/iverilog-files,266932959,Verilog,iverilog-files,3175,0,2020-05-26 03:16:39+00:00,[],None
392,https://github.com/pgimenes/evermoore.git,2020-05-22 11:16:04+00:00,16-bit ARM-based CPU architecture optimised for three benchmark algorithms.,0,pgimenes/evermoore,266091744,Verilog,evermoore,2524,0,2021-06-15 08:51:45+00:00,[],None
393,https://github.com/jeanbrag/digitalelectronic-digital-clock.git,2020-05-24 03:23:12+00:00,"Desenvolvimento em verilog de um relógio digital que mostra hora, minuto e segundos.",0,jeanbrag/digitalelectronic-digital-clock,266462032,Verilog,digitalelectronic-digital-clock,1361,0,2020-05-24 03:29:28+00:00,[],https://api.github.com/licenses/mit
394,https://github.com/ajaykd7/FPGA.git,2020-06-01 22:54:42+00:00,,0,ajaykd7/FPGA,268650134,Verilog,FPGA,604,0,2020-06-02 22:12:55+00:00,[],None
395,https://github.com/VimfulDang/Scientific-Calculator-DE10-Lite.git,2020-06-25 23:42:39+00:00,,0,VimfulDang/Scientific-Calculator-DE10-Lite,275036591,Verilog,Scientific-Calculator-DE10-Lite,22,0,2023-12-26 16:11:49+00:00,[],None
396,https://github.com/nemalisiva/pwm-76.git,2020-06-09 19:05:46+00:00,,0,nemalisiva/pwm-76,271087443,Verilog,pwm-76,36,0,2020-06-09 19:06:27+00:00,[],None
397,https://github.com/vishalEngineer/Verilog_FPGA_projects.git,2020-06-10 01:40:52+00:00,This repository is the partial collection of my FPGA Verilog projects,0,vishalEngineer/Verilog_FPGA_projects,271149212,Verilog,Verilog_FPGA_projects,7,0,2020-06-10 11:06:50+00:00,[],None
398,https://github.com/Randikaviraj/verilog_cpu.git,2020-05-22 22:50:07+00:00,,0,Randikaviraj/verilog_cpu,266221882,Verilog,verilog_cpu,8,0,2021-08-26 11:20:32+00:00,[],None
399,https://github.com/vsaisujeeth/mips_multicycle.git,2020-06-05 08:07:43+00:00,,0,vsaisujeeth/mips_multicycle,269568710,Verilog,mips_multicycle,736,0,2020-06-05 08:23:47+00:00,[],None
400,https://github.com/GMeeser/YODA-Project.git,2020-06-13 09:50:50+00:00,Code repositor for Yoda project UCT EEE4120F - 2020 parallel encrypter,0,GMeeser/YODA-Project,271981732,Verilog,YODA-Project,18216,0,2020-06-26 17:29:11+00:00,[],None
401,https://github.com/jadav225/verilog_codes.git,2020-06-10 08:19:53+00:00,detailed verilog codes with test bench,0,jadav225/verilog_codes,271220065,Verilog,verilog_codes,4,0,2020-06-10 08:30:56+00:00,[],None
402,https://github.com/BalderOdinson/pulp_nvdla.git,2020-06-10 14:44:39+00:00,,2,BalderOdinson/pulp_nvdla,271303139,Verilog,pulp_nvdla,10647,0,2021-04-14 18:12:33+00:00,[],
403,https://github.com/traviolus/HW-Lab-Project.git,2020-05-22 15:56:44+00:00,,1,traviolus/HW-Lab-Project,266150255,Verilog,HW-Lab-Project,274,0,2020-06-23 07:06:49+00:00,[],None
404,https://github.com/taoshen-amazon/ece5745-tut5-asic-tools.git,2020-05-22 13:11:12+00:00,ECE 5745 Tutorial 5: Synopsys/Cadence ASIC Tools,17,taoshen-amazon/ece5745-tut5-asic-tools,266113721,,ece5745-tut5-asic-tools,4125,0,2020-05-22 13:11:14+00:00,[],None
405,https://github.com/RohanVDvivedi/FpgaI2Ccontroller.git,2020-05-21 13:32:51+00:00,I2c master controller for FPGA in verilog,0,RohanVDvivedi/FpgaI2Ccontroller,265856683,Verilog,FpgaI2Ccontroller,315,0,2020-05-24 17:20:41+00:00,[],None
406,https://github.com/NatthanonNon/kkGames.git,2020-06-06 18:16:56+00:00,Undertale developed with VerilogHDL on digilent basys3 (Xilinx Artix-7 FPGA Board),0,NatthanonNon/kkGames,270065228,Verilog,kkGames,70570,0,2021-06-22 16:19:17+00:00,"['undertale', 'veriloghdl', 'basys3', 'game']",https://api.github.com/licenses/mit
407,https://github.com/kazuki-hara/verilog.git,2020-05-30 03:34:02+00:00,,0,kazuki-hara/verilog,268002691,Verilog,verilog,894,0,2022-04-12 06:12:40+00:00,[],None
408,https://github.com/tykaneshige/UCLA-Public.git,2020-06-02 20:13:18+00:00,Some highlighted projects from my UCLA CS classes.,0,tykaneshige/UCLA-Public,268898744,Verilog,UCLA-Public,615,0,2020-09-09 02:35:10+00:00,[],None
409,https://github.com/NelsonIg/Verilog_VGA_Game.git,2020-05-27 19:07:48+00:00,This is a former study project which dealt with hardware programming to display a game via vga. Enjoy!,0,NelsonIg/Verilog_VGA_Game,267404409,Verilog,Verilog_VGA_Game,10,0,2020-05-27 19:12:24+00:00,[],None
410,https://github.com/zicco99/Architettura-degli-elaboratori.git,2020-06-25 19:59:19+00:00,,0,zicco99/Architettura-degli-elaboratori,275003960,Verilog,Architettura-degli-elaboratori,68979,0,2020-07-16 20:35:55+00:00,[],
411,https://github.com/passant23/Randomizer-Verilog.git,2020-06-22 13:20:51+00:00,,0,passant23/Randomizer-Verilog,274142768,Verilog,Randomizer-Verilog,1,0,2020-06-22 13:21:26+00:00,[],None
412,https://github.com/liyenjun/RISC_CPU.git,2020-05-25 15:12:04+00:00,A simple RSIC CPU,0,liyenjun/RISC_CPU,266810991,Verilog,RISC_CPU,12,0,2020-05-25 15:14:07+00:00,[],None
413,https://github.com/dedekpo/Unidade-Logica-Aritmetica-ALU-Verilog.git,2020-05-31 19:52:05+00:00,ALU feita na linguagem Verilog,0,dedekpo/Unidade-Logica-Aritmetica-ALU-Verilog,268352982,Verilog,Unidade-Logica-Aritmetica-ALU-Verilog,14,0,2020-05-31 19:53:13+00:00,[],None
414,https://github.com/Yoncho14/arquitectura.git,2020-06-16 02:04:57+00:00,Arquitectura,0,Yoncho14/arquitectura,272587018,Verilog,arquitectura,1309,0,2020-07-22 05:28:59+00:00,[],None
415,https://github.com/ypradera/Computer-Architecture-1.git,2020-06-14 00:29:44+00:00,,0,ypradera/Computer-Architecture-1,272107383,Verilog,Computer-Architecture-1,10,0,2020-06-14 00:35:08+00:00,[],None
416,https://github.com/pbcdqt/Simple-MIPS-machine.git,2020-06-15 08:09:08+00:00,,0,pbcdqt/Simple-MIPS-machine,272379126,Verilog,Simple-MIPS-machine,1549,0,2021-11-29 19:47:51+00:00,[],None
417,https://github.com/ywliu722/Computer_Organization-Spring_2020.git,2020-06-15 02:46:11+00:00,"Labs of Computer Organization Course, National Chiao Tung University Dep. CS, Spring 2020",0,ywliu722/Computer_Organization-Spring_2020,272326617,Verilog,Computer_Organization-Spring_2020,43,0,2020-06-27 15:42:49+00:00,[],None
418,https://github.com/kokkoroQwQ/diyCPU.git,2020-05-21 15:48:48+00:00,,0,kokkoroQwQ/diyCPU,265888935,Verilog,diyCPU,16,0,2020-05-21 16:25:29+00:00,[],https://api.github.com/licenses/apache-2.0
419,https://github.com/ritamdas2/RISC-V-CPU-.git,2020-05-21 23:45:44+00:00,Simulated the core functions of a RISC-V RV32I processor using Verilog and Xilinx software (EC413 Computer Architecture BU),0,ritamdas2/RISC-V-CPU-,265975516,Verilog,RISC-V-CPU-,11,0,2020-05-21 23:52:02+00:00,[],None
420,https://github.com/shivampotdar/security-system-verilog.git,2020-06-20 05:37:47+00:00,Verilog Implementation of Security System with 3x4 (phone) keypad and FSMs,0,shivampotdar/security-system-verilog,273645693,Verilog,security-system-verilog,1336,0,2020-06-20 05:52:05+00:00,[],https://api.github.com/licenses/mit
421,https://github.com/asharma381/SCU-COEN21L.git,2020-06-24 22:23:32+00:00,,0,asharma381/SCU-COEN21L,274780769,Verilog,SCU-COEN21L,14399,0,2020-06-24 23:29:46+00:00,[],None
422,https://github.com/JC-LL/try_verilog.git,2020-06-24 14:32:47+00:00,"My humble trials using Verilog, coming from VHDL",0,JC-LL/try_verilog,274690931,Verilog,try_verilog,2,0,2024-02-20 10:39:06+00:00,[],None
423,https://github.com/hereisjayant/State-Machine-Verilog.git,2020-06-21 08:21:05+00:00,"State Machine in Verilog, which outputs the states to the HEX display of DE1-SoC",0,hereisjayant/State-Machine-Verilog,273863412,Verilog,State-Machine-Verilog,13900,0,2021-03-02 06:08:45+00:00,[],None
424,https://github.com/VanThanhDuong/Computer-Organization-and-architechure.git,2020-06-09 19:16:00+00:00,Project design RISCV CPU SINGLE CYCLE,0,VanThanhDuong/Computer-Organization-and-architechure,271089361,Verilog,Computer-Organization-and-architechure,311,0,2020-06-18 12:41:08+00:00,[],None
425,https://github.com/iamatul45/COA-MIPS-uPOWER.git,2020-06-12 12:19:43+00:00,,0,iamatul45/COA-MIPS-uPOWER,271791246,Verilog,COA-MIPS-uPOWER,13351,0,2020-06-13 12:44:44+00:00,[],None
426,https://github.com/LeviStalsworth/SystemVerilog.git,2020-05-26 22:09:51+00:00,Developed and simulated execution engine in verilog.,0,LeviStalsworth/SystemVerilog,267162180,Verilog,SystemVerilog,1644,0,2020-05-26 22:14:51+00:00,[],None
427,https://github.com/bumblebee17/5-Stage-Pipeline-Processor-.git,2020-06-09 12:46:36+00:00,We have designed a 5 Stage Pipeline Processor based on the MIPS architecture,2,bumblebee17/5-Stage-Pipeline-Processor-,271000444,Verilog,5-Stage-Pipeline-Processor-,48,0,2020-06-09 19:25:14+00:00,"['processor', 'mips', 'mips-architecture', 'verilog-hdl']",None
428,https://github.com/swarnika12/Embedded.git,2020-06-08 16:51:31+00:00,,0,swarnika12/Embedded,270748680,Verilog,Embedded,24,0,2020-10-10 11:36:53+00:00,[],None
429,https://github.com/rubickkcibur/pipeline-c4.git,2020-06-08 01:17:48+00:00,北航计组小cpu,0,rubickkcibur/pipeline-c4,270483612,Verilog,pipeline-c4,641,0,2020-06-08 01:22:41+00:00,[],None
430,https://github.com/FEINIAO233/ComputerSystem.git,2020-06-08 14:06:13+00:00,,0,FEINIAO233/ComputerSystem,270691681,Verilog,ComputerSystem,65065,0,2020-06-08 14:29:36+00:00,[],None
431,https://github.com/EasonLin536/DSD_final_project.git,2020-06-06 05:58:57+00:00,"2020 Spring DSD Final Project, NTUEE",0,EasonLin536/DSD_final_project,269884754,Verilog,DSD_final_project,27390,0,2021-06-01 01:49:16+00:00,[],None
432,https://github.com/NSEE/SimuCam_Development_FFEE.git,2020-06-12 22:18:19+00:00,SimuCam repository - FFEE version (DLR),0,NSEE/SimuCam_Development_FFEE,271899615,Verilog,SimuCam_Development_FFEE,646544,0,2021-07-16 14:40:49+00:00,[],None
433,https://github.com/aydinsimsek/multi-cycle-processor.git,2020-06-13 00:55:42+00:00,16-bit customized multi-cycle CPU from scratch.,0,aydinsimsek/multi-cycle-processor,271916251,Verilog,multi-cycle-processor,29,0,2020-10-27 12:27:22+00:00,[],https://api.github.com/licenses/mit
434,https://github.com/anhtng217/pong_game.git,2020-05-23 05:21:27+00:00,,0,anhtng217/pong_game,266268668,Verilog,pong_game,4583,0,2021-01-07 22:19:04+00:00,[],None
435,https://github.com/vikas7268/32bits_RISC_Processor.git,2020-05-25 04:27:15+00:00,instruction_support (R-type and I-type Instructions).,0,vikas7268/32bits_RISC_Processor,266682565,Verilog,32bits_RISC_Processor,22,0,2020-05-25 04:42:26+00:00,[],None
436,https://github.com/ramaxwell/16bFullAdderSubtractor.git,2020-05-24 15:15:14+00:00,16bit Full Adder and Subtractor using Muxes and Cswitches,0,ramaxwell/16bFullAdderSubtractor,266566957,Verilog,16bFullAdderSubtractor,275,0,2020-05-28 03:01:30+00:00,[],None
437,https://github.com/svitvitskiy/display_859x.git,2020-06-03 05:15:31+00:00,LCD display adapter for 859x agilent scopes,0,svitvitskiy/display_859x,268995565,Verilog,display_859x,28,0,2020-06-03 05:31:33+00:00,[],None
438,https://github.com/DirkStober/FFT.git,2020-06-03 05:10:02+00:00,,0,DirkStober/FFT,268994777,Verilog,FFT,1025,0,2022-01-09 21:50:13+00:00,[],None
439,https://github.com/LongeeH/MY_MIPS_CPU.git,2020-05-29 11:22:25+00:00,Verilog file about a double-launching pipeline MIPS cpu.,0,LongeeH/MY_MIPS_CPU,267839955,Verilog,MY_MIPS_CPU,164,0,2021-10-15 12:18:36+00:00,[],None
440,https://github.com/bhanuprathap2000/verilog.git,2020-06-02 12:07:37+00:00,This repository contains verilog codes,1,bhanuprathap2000/verilog,268790497,Verilog,verilog,17,0,2020-10-13 08:24:24+00:00,[],None
441,https://github.com/Shiki992/Comp_Arc.git,2020-06-02 13:47:31+00:00,,0,Shiki992/Comp_Arc,268813303,Verilog,Comp_Arc,3984,0,2020-06-02 14:00:54+00:00,[],None
442,https://github.com/k15s/fpgaTetris.git,2020-05-25 23:56:10+00:00,Tetris implementation in Verilog for a Spartan FPGA board,0,k15s/fpgaTetris,266903474,Verilog,fpgaTetris,3348,0,2022-07-22 00:16:19+00:00,[],None
443,https://github.com/josh-macfie/Basys2Blink.git,2020-05-25 22:17:43+00:00,Verilog code and UCF to blink 4 LED's on the Basys2 Board.,0,josh-macfie/Basys2Blink,266890890,Verilog,Basys2Blink,2,0,2022-12-23 22:47:53+00:00,[],None
444,https://github.com/Shyeem/Verilog-Codes-Combinational-Circuits-.git,2020-05-26 05:46:15+00:00,This repository contains all of my practiced Verilog codes for combinational circuits.,0,Shyeem/Verilog-Codes-Combinational-Circuits-,266955195,Verilog,Verilog-Codes-Combinational-Circuits-,241,0,2020-09-26 16:58:05+00:00,[],None
445,https://github.com/unal-edigital1-2020-1/work1-ram.git,2020-06-17 01:45:47+00:00,,1,unal-edigital1-2020-1/work1-ram,272852474,Verilog,work1-ram,1450,0,2020-06-17 02:09:30+00:00,[],None
446,https://github.com/dimamironov/lab3.git,2020-06-20 12:45:54+00:00,,0,dimamironov/lab3,273706480,Verilog,lab3,1318,0,2020-06-20 12:50:24+00:00,[],None
447,https://github.com/jchen68623/FGPA-Project.git,2020-06-20 19:08:35+00:00,5 stages pipeline + forwarding + hazard detection,0,jchen68623/FGPA-Project,273768898,Verilog,FGPA-Project,16566,0,2020-06-20 19:10:32+00:00,[],None
448,https://github.com/Nadien-Rashad/Piplined-MIPS-Processor.git,2020-06-24 12:57:34+00:00,This project is an implementation of a pipelined MIPS processor featuring hazard detection as well as forwarding unit.,0,Nadien-Rashad/Piplined-MIPS-Processor,274668976,Verilog,Piplined-MIPS-Processor,37,0,2020-06-24 16:09:24+00:00,[],None
449,https://github.com/tiaom/Sysarch.git,2020-06-23 16:02:47+00:00,Projekt,0,tiaom/Sysarch,274449906,Verilog,Sysarch,6,0,2020-06-23 16:03:54+00:00,[],None
450,https://github.com/Knight-X/sense.git,2020-06-21 05:11:33+00:00,,1,Knight-X/sense,273838653,Verilog,sense,10,0,2020-06-21 05:16:09+00:00,[],None
451,https://github.com/Josvin7/FPGA.git,2020-06-18 14:41:31+00:00,,0,Josvin7/FPGA,273263231,Verilog,FPGA,5916,0,2020-06-18 14:55:14+00:00,[],None
452,https://github.com/ajinkyajayawant/Programming-Experiments.git,2020-05-25 23:39:34+00:00,This is a place for me to experiment everything from Haskell monads to Lisp macros.,0,ajinkyajayawant/Programming-Experiments,266901368,Verilog,Programming-Experiments,727,0,2022-01-08 08:10:14+00:00,[],https://api.github.com/licenses/gpl-3.0
453,https://github.com/MichihiroAshida/test_for_class.git,2020-06-15 14:37:25+00:00,,0,MichihiroAshida/test_for_class,272462910,Verilog,test_for_class,10,0,2020-06-15 14:37:53+00:00,[],None
454,https://github.com/heymesut/viterbi_decoder.git,2020-06-17 03:59:13+00:00,,0,heymesut/viterbi_decoder,272873768,Verilog,viterbi_decoder,46,0,2022-03-01 10:56:44+00:00,[],None
455,https://github.com/MohamedTawfik74/FloatingPointUnit.git,2020-06-18 13:03:12+00:00,This repository contains self work to design FPU using Verilog and synthesize it using synopsys' design compiler.,2,MohamedTawfik74/FloatingPointUnit,273239977,Verilog,FloatingPointUnit,36226,0,2020-07-27 11:32:26+00:00,[],None
456,https://github.com/Maegima/simple-microprocessor.git,2020-06-17 19:09:03+00:00,A simple microprocessor with instruction set based in the MIPS architecture,0,Maegima/simple-microprocessor,273057824,Verilog,simple-microprocessor,62,0,2020-06-18 17:59:54+00:00,[],https://api.github.com/licenses/gpl-3.0
457,https://github.com/markiyanp/SEI_MEE_2020.git,2020-05-26 17:18:20+00:00,Sistemas Eletrónicos Intergados MEE,0,markiyanp/SEI_MEE_2020,267105859,Verilog,SEI_MEE_2020,15,0,2020-05-29 15:46:16+00:00,[],None
458,https://github.com/Espinya/P3-TMP10X.git,2020-06-08 00:39:56+00:00,,0,Espinya/P3-TMP10X,270475559,Verilog,P3-TMP10X,337,0,2020-06-23 10:59:52+00:00,[],None
459,https://github.com/RuoyuLiu-ASE/FPGA_Lab.git,2020-06-15 16:25:20+00:00,code for FPGA_Lab,0,RuoyuLiu-ASE/FPGA_Lab,272488955,Verilog,FPGA_Lab,20853,0,2020-06-15 16:37:16+00:00,[],https://api.github.com/licenses/mit
460,https://github.com/NCTUCS-Computer-Organization/LAB4_Final.git,2020-06-15 06:27:06+00:00,fuck,0,NCTUCS-Computer-Organization/LAB4_Final,272359131,Verilog,LAB4_Final,143,0,2021-02-13 07:39:38+00:00,[],None
461,https://github.com/Will-Shaddix/RISC-V_Processor.git,2020-06-15 20:53:08+00:00,a 5 stage pipelined RISC-V Processor done in Verilog for an FPGA,0,Will-Shaddix/RISC-V_Processor,272541747,Verilog,RISC-V_Processor,8,0,2021-01-13 00:55:29+00:00,[],None
462,https://github.com/quannl280201/DigitalClock_Verilog.git,2020-06-18 06:16:50+00:00,Version control for Digital Design Mini project ,0,quannl280201/DigitalClock_Verilog,273157356,Verilog,DigitalClock_Verilog,7,0,2020-06-18 08:14:26+00:00,[],None
463,https://github.com/AdamGajda/System-RNS---konwersja.git,2020-06-18 01:14:14+00:00,,0,AdamGajda/System-RNS---konwersja,273111548,Verilog,System-RNS---konwersja,2,0,2020-06-18 01:17:41+00:00,[],None
464,https://github.com/berenFromTheMiddleEarth/fetch_module.git,2020-06-17 15:16:25+00:00,,0,berenFromTheMiddleEarth/fetch_module,273007816,Verilog,fetch_module,1,0,2020-06-17 15:17:32+00:00,[],None
465,https://github.com/foamtsp/HW_LAB_UNDERTALE.git,2020-05-22 14:43:48+00:00,็HW_LAB_UNDERTALE VIA BASYS3 AND VERILOG,0,foamtsp/HW_LAB_UNDERTALE,266134029,Verilog,HW_LAB_UNDERTALE,9,0,2020-05-23 10:03:50+00:00,[],None
466,https://github.com/AnthonyAlaimo/B58Project.git,2020-05-24 01:12:40+00:00,,0,AnthonyAlaimo/B58Project,266447153,,B58Project,16245,0,2020-12-25 20:37:51+00:00,[],None
467,https://github.com/LinusWangg/Single-Cycle.git,2020-05-21 12:37:36+00:00,homework,0,LinusWangg/Single-Cycle,265844751,Verilog,Single-Cycle,5,0,2020-05-28 03:29:20+00:00,[],None
468,https://github.com/Neuromancer2077/CpE142_MIPS_pipelined.git,2020-05-21 01:14:11+00:00,,0,Neuromancer2077/CpE142_MIPS_pipelined,265722707,Verilog,CpE142_MIPS_pipelined,1658,0,2020-05-21 01:54:00+00:00,[],None
469,https://github.com/drive087/undertale-project.git,2020-05-25 14:59:41+00:00,,0,drive087/undertale-project,266808023,Verilog,undertale-project,41,0,2020-05-30 14:14:32+00:00,[],None
470,https://github.com/newton1057/pruebaVerilog.git,2020-05-25 18:22:43+00:00,Prueba Verilog,0,newton1057/pruebaVerilog,266851118,Verilog,pruebaVerilog,0,0,2020-05-25 18:24:32+00:00,[],None
471,https://github.com/sanathrao/Verilog-HDL.git,2020-06-04 11:59:50+00:00,,0,sanathrao/Verilog-HDL,269347734,Verilog,Verilog-HDL,7,0,2020-06-17 21:40:34+00:00,[],None
472,https://github.com/tim1207/Accumlator.git,2020-06-10 08:18:23+00:00,累加器,0,tim1207/Accumlator,271219742,Verilog,Accumlator,3,0,2020-06-10 08:19:44+00:00,[],None
473,https://github.com/twk119/lma0_submission.git,2020-06-08 16:03:46+00:00,Submission for ELEC40006 Design Project,0,twk119/lma0_submission,270732803,Verilog,lma0_submission,507,0,2020-06-14 11:39:36+00:00,[],None
474,https://github.com/anilcanbulut/ALU-Design.git,2020-06-11 20:18:09+00:00,,0,anilcanbulut/ALU-Design,271639043,Verilog,ALU-Design,10,0,2020-06-11 20:23:11+00:00,[],None
475,https://github.com/mucahittanacioglu/MIPSProcesser.git,2020-06-10 21:43:09+00:00,mips project,0,mucahittanacioglu/MIPSProcesser,271391843,Verilog,MIPSProcesser,8,0,2020-09-24 13:48:25+00:00,[],None
476,https://github.com/manasdtrivedi/MIPS-and-uPOWER-Pipelined-Processor-in-Verilog.git,2020-06-12 11:24:33+00:00,,0,manasdtrivedi/MIPS-and-uPOWER-Pipelined-Processor-in-Verilog,271781273,Verilog,MIPS-and-uPOWER-Pipelined-Processor-in-Verilog,26913,0,2020-06-16 08:23:27+00:00,[],None
477,https://github.com/hsienweima/cpu8bit.git,2020-05-31 16:06:39+00:00,verilog HDL,0,hsienweima/cpu8bit,268315003,Verilog,cpu8bit,7,0,2020-05-31 16:26:13+00:00,[],None
478,https://github.com/gaz27rus/Verilog_Simple.git,2020-05-30 13:25:12+00:00,,0,gaz27rus/Verilog_Simple,268084567,Verilog,Verilog_Simple,5,0,2020-05-30 13:25:49+00:00,[],None
479,https://github.com/Skyrim-667/verilog.git,2020-05-31 00:43:20+00:00,a repository for verilog coding,0,Skyrim-667/verilog,268184328,Verilog,verilog,35,0,2020-05-31 01:56:35+00:00,[],https://api.github.com/licenses/apache-2.0
480,https://github.com/mashin93/FPGA-Sensor-Implementation.git,2020-06-25 23:49:39+00:00,,0,mashin93/FPGA-Sensor-Implementation,275037475,Verilog,FPGA-Sensor-Implementation,986,0,2020-06-25 23:56:57+00:00,[],None
481,https://github.com/Sarika-Natu/Scientific-Calculator.git,2020-06-24 04:22:34+00:00,Scientific Calculator using DE10 Lite FPGA board,0,Sarika-Natu/Scientific-Calculator,274573976,Verilog,Scientific-Calculator,7260,0,2023-12-26 16:11:54+00:00,[],None
482,https://github.com/dmireckid/ECE411.git,2020-06-07 23:00:29+00:00,,0,dmireckid/ECE411,270456225,Verilog,ECE411,336,0,2020-06-07 23:03:19+00:00,[],None
483,https://github.com/NCTUCS-Computer-Organization/LAB4.git,2020-06-06 13:41:58+00:00,,0,NCTUCS-Computer-Organization/LAB4,269993245,Verilog,LAB4,1257,0,2021-02-13 07:40:12+00:00,[],None
484,https://github.com/bhautik1209/Vending-Machine.git,2020-06-02 22:50:18+00:00,Vending Machine for 5 products,0,bhautik1209/Vending-Machine,268924704,Verilog,Vending-Machine,6,0,2020-06-02 22:53:02+00:00,[],None
485,https://github.com/xiaozhuang456/4.git,2020-05-30 08:45:36+00:00,,0,xiaozhuang456/4,268042050,Verilog,4,10,0,2020-05-30 08:45:49+00:00,[],https://api.github.com/licenses/gpl-2.0
486,https://github.com/mehmetcobanx/FPGA.git,2020-05-22 15:52:30+00:00,,0,mehmetcobanx/FPGA,266149384,Verilog,FPGA,19,0,2020-05-26 09:42:26+00:00,[],None
487,https://github.com/ield/FPGABlocks.git,2020-05-22 16:01:12+00:00,,1,ield/FPGABlocks,266151142,Verilog,FPGABlocks,25,0,2020-05-22 16:12:25+00:00,[],None
488,https://github.com/jackychiangtw/chip.git,2020-05-22 14:14:50+00:00,,0,jackychiangtw/chip,266127563,Verilog,chip,4,0,2020-05-22 14:15:07+00:00,[],None
489,https://github.com/DennyHo2020/Vending-Machine.git,2020-06-18 23:55:23+00:00,,0,DennyHo2020/Vending-Machine,273363665,Verilog,Vending-Machine,6,0,2020-06-19 00:02:30+00:00,[],None
490,https://github.com/Strike2311/AK2-Projekt.git,2020-06-17 18:30:02+00:00,Kacper Kucharczyk 248834      Artur Sobolewski 248913,0,Strike2311/AK2-Projekt,273050436,Verilog,AK2-Projekt,517,0,2020-06-20 15:11:05+00:00,[],None
491,https://github.com/Anudeepreddynarala/seven-segment-display-verilog.git,2020-06-18 15:24:50+00:00,This verilog code helps to divide the clock into required frequency.,0,Anudeepreddynarala/seven-segment-display-verilog,273273576,Verilog,seven-segment-display-verilog,2,0,2020-06-18 15:29:21+00:00,[],None
492,https://github.com/juliancnn/SIMPLE_MIPS_Reduced.git,2020-06-11 05:43:11+00:00,,0,juliancnn/SIMPLE_MIPS_Reduced,271461655,Verilog,SIMPLE_MIPS_Reduced,23,0,2020-06-14 08:16:56+00:00,[],None
493,https://github.com/Paranjaysaxena/MIPS-Processor.git,2020-06-11 05:17:31+00:00,,0,Paranjaysaxena/MIPS-Processor,271457925,Verilog,MIPS-Processor,42,0,2021-04-17 21:10:23+00:00,[],None
494,https://github.com/Kiran760043/Frequency-Divider-by-Odd-Number.git,2020-06-19 16:25:04+00:00,FPGA Programs,0,Kiran760043/Frequency-Divider-by-Odd-Number,273538809,Verilog,Frequency-Divider-by-Odd-Number,51,0,2020-06-19 16:26:09+00:00,[],None
495,https://github.com/unal-edigital1-2020-1/wp2-simulacion-captura-grupo-04.git,2020-06-24 16:53:14+00:00,wp2-simulacion-captura-grupo-04 created by GitHub Classroom,1,unal-edigital1-2020-1/wp2-simulacion-captura-grupo-04,274722009,Verilog,wp2-simulacion-captura-grupo-04,481305,0,2020-07-30 13:40:20+00:00,[],None
496,https://github.com/devypher/Verilog_Projects.git,2020-05-25 07:54:48+00:00,Verilog codes for various projects.,0,devypher/Verilog_Projects,266718206,Verilog,Verilog_Projects,3,0,2020-05-25 07:56:57+00:00,[],None
497,https://github.com/thehanriver/RISC-V-CPU.git,2020-05-25 08:56:42+00:00,,0,thehanriver/RISC-V-CPU,266731280,Verilog,RISC-V-CPU,13,0,2020-05-25 09:01:28+00:00,[],None
498,https://github.com/karnkittik/HWSynLab-Undertale.git,2020-05-23 02:08:22+00:00,,0,karnkittik/HWSynLab-Undertale,266245548,Verilog,HWSynLab-Undertale,308,0,2020-06-07 18:58:11+00:00,[],None
499,https://github.com/Dhruv0103/booth-multiplier.git,2020-05-26 13:07:44+00:00,the repository contains verilog code of booth multliplication algorithms in verilog,1,Dhruv0103/booth-multiplier,267045378,Verilog,booth-multiplier,2,0,2020-05-26 13:12:50+00:00,[],None
500,https://github.com/Abhay-Rj/RISC-MIPS.git,2020-05-25 18:31:37+00:00,MIPS Pipelined Processor,0,Abhay-Rj/RISC-MIPS,266852773,Verilog,RISC-MIPS,212,0,2020-06-09 11:27:59+00:00,[],None
501,https://github.com/KubaHyzicki/RNStoBinaryConverter.git,2020-05-31 15:58:04+00:00,,0,KubaHyzicki/RNStoBinaryConverter,268313474,Verilog,RNStoBinaryConverter,5,0,2020-06-12 19:09:39+00:00,[],None
502,https://github.com/kavin-du/CO224_lab6_memory.git,2020-05-31 01:52:39+00:00,Creating memory hierarchy for the cpu model created in lab 5,0,kavin-du/CO224_lab6_memory,268191392,Verilog,CO224_lab6_memory,36,0,2020-06-19 14:38:02+00:00,[],None
503,https://github.com/tim1207/counter.git,2020-06-08 11:02:53+00:00,,0,tim1207/counter,270635245,Verilog,counter,1,0,2020-06-08 11:04:47+00:00,[],None
504,https://github.com/zhewang1996/Basic-module.git,2020-06-09 02:09:21+00:00,,0,zhewang1996/Basic-module,270880833,Verilog,Basic-module,62,0,2020-12-16 05:22:17+00:00,[],None
505,https://github.com/arath089/FPGA-Cache-Memory-Design.git,2020-06-09 17:08:59+00:00,Designing Cache Memory using Direct Mapping using Vivado,0,arath089/FPGA-Cache-Memory-Design,271062833,Verilog,FPGA-Cache-Memory-Design,6,0,2020-06-09 17:22:18+00:00,[],None
506,https://github.com/TRoth9/ComputerProject.git,2020-06-09 21:00:50+00:00,,0,TRoth9/ComputerProject,271108965,Verilog,ComputerProject,69251,0,2020-07-12 09:44:05+00:00,[],None
507,https://github.com/nictrak/led_controller.git,2020-06-09 03:49:52+00:00,,0,nictrak/led_controller,270897170,Verilog,led_controller,4,0,2020-06-10 08:25:31+00:00,[],None
508,https://github.com/BholaYadav/UART-.git,2020-06-07 09:22:26+00:00,implementation and simulation of UART protocol using Verilog HDL,0,BholaYadav/UART-,270254986,Verilog,UART-,102,0,2020-07-20 19:24:16+00:00,[],None
509,https://github.com/varun-raghavendra/A3-A4.git,2020-06-07 16:38:32+00:00,Integrating Verilog modules to build a MIPS pipeline ,2,varun-raghavendra/A3-A4,270367621,Verilog,A3-A4,1520,0,2020-08-07 14:09:47+00:00,[],None
510,https://github.com/Matasasas/two_port_ram.git,2020-06-13 12:50:57+00:00,,0,Matasasas/two_port_ram,272007986,Verilog,two_port_ram,1,0,2020-06-13 13:00:21+00:00,[],None
511,https://github.com/thnam/nand2tetris_verilog.git,2020-06-23 18:22:18+00:00,Nand2Tetris CPU in verilog,0,thnam/nand2tetris_verilog,274478630,Verilog,nand2tetris_verilog,1643,0,2020-06-23 18:29:52+00:00,[],None
512,https://github.com/hoser21/beta-microprocessor.git,2020-05-25 23:18:13+00:00,A beta microprocessor designed in Verilog,0,hoser21/beta-microprocessor,266898756,Verilog,beta-microprocessor,29,0,2020-05-26 22:39:59+00:00,[],None
513,https://github.com/wwkkww1983/FPGA-2.git,2020-05-26 19:25:17+00:00,做了一个简易的信号波形发生器,0,wwkkww1983/FPGA-2,267132738,,FPGA-2,24,0,2021-08-05 05:02:29+00:00,[],None
514,https://github.com/theignorantzen/learnVerilog.git,2020-05-27 16:35:29+00:00,A collection of HDL modules for most commonly studied digital circuits.,0,theignorantzen/learnVerilog,267372284,Verilog,learnVerilog,5,0,2020-05-28 03:04:34+00:00,[],https://api.github.com/licenses/mit
515,https://github.com/arath089/FPGA-Pipeling-and-Clock-Gating.git,2020-06-09 19:37:34+00:00,,0,arath089/FPGA-Pipeling-and-Clock-Gating,271093382,Verilog,FPGA-Pipeling-and-Clock-Gating,484,0,2020-06-09 20:25:30+00:00,[],None
516,https://github.com/Embedfire-altera/ebf_ep4ce10_ppt.git,2020-06-09 11:10:21+00:00,PPT《FPGA Verilog开发实战指南——基于Altera EP4CE10》,1,Embedfire-altera/ebf_ep4ce10_ppt,270980339,Verilog,ebf_ep4ce10_ppt,63145,0,2021-03-01 07:59:10+00:00,[],None
517,https://github.com/slcz/hummingbird.git,2020-06-20 22:40:28+00:00,8 bit CPU built with 74xx IC,0,slcz/hummingbird,273795120,Verilog,hummingbird,4640,0,2020-08-16 23:39:53+00:00,[],https://api.github.com/licenses/apache-2.0
518,https://github.com/Randikaviraj/MIPS-single-cycle-Processor.git,2020-06-20 15:41:20+00:00,,0,Randikaviraj/MIPS-single-cycle-Processor,273736406,Verilog,MIPS-single-cycle-Processor,8,0,2022-07-10 16:56:47+00:00,[],None
519,https://github.com/paulohepimentel/mips.git,2020-06-17 13:11:02+00:00,Implementation of a simplified version of the MIPS data path,0,paulohepimentel/mips,272977228,Verilog,mips,301,0,2020-08-06 18:30:16+00:00,"['mips-architecture', 'mips-processor', 'verilog', 'fpga-programming']",https://api.github.com/licenses/mit
520,https://github.com/bhupeshnihal/RISC-V-Integer-Processor.git,2020-06-19 10:46:44+00:00,Verilog Implementation of a RISC V-32 I based processor,0,bhupeshnihal/RISC-V-Integer-Processor,273470030,Verilog,RISC-V-Integer-Processor,193,0,2020-06-19 10:59:19+00:00,[],None
521,https://github.com/keyonhome/Verilog_IP_toolbar.git,2020-06-19 11:44:58+00:00,Save some test already slef-defined IP,0,keyonhome/Verilog_IP_toolbar,273480361,Verilog,Verilog_IP_toolbar,47,0,2020-06-21 23:06:06+00:00,[],None
522,https://github.com/SravantiNomula/PROJECTS.git,2020-06-21 06:38:25+00:00,,0,SravantiNomula/PROJECTS,273849316,Verilog,PROJECTS,892,0,2020-09-08 10:21:52+00:00,[],None
523,https://github.com/unal-edigital1-2020-1/wp2-simulacion-captura-grupo-02.git,2020-06-24 17:11:31+00:00,wp2-simulacion-captura-grupo-02 created by GitHub Classroom,0,unal-edigital1-2020-1/wp2-simulacion-captura-grupo-02,274725859,Verilog,wp2-simulacion-captura-grupo-02,1527,0,2020-06-24 17:11:47+00:00,[],None
524,https://github.com/kie4280/cpu_design4.git,2020-06-04 12:52:46+00:00,,0,kie4280/cpu_design4,269358913,Verilog,cpu_design4,783,0,2020-06-29 07:46:38+00:00,[],None
525,https://github.com/tunatone0111/iit3004-digital-system.git,2020-06-04 18:35:46+00:00,,0,tunatone0111/iit3004-digital-system,269436396,Verilog,iit3004-digital-system,816,0,2021-03-11 12:25:15+00:00,[],None
526,https://github.com/Caspar21/4-bits-up-counter.git,2020-06-05 08:25:05+00:00,Practice by myself,0,Caspar21/4-bits-up-counter,269572569,Verilog,4-bits-up-counter,3,0,2020-06-05 08:25:38+00:00,[],None
527,https://github.com/minhtaile2712/risc-v-verilog.git,2020-06-05 16:37:35+00:00,RISC-V design using Verilog,0,minhtaile2712/risc-v-verilog,269705275,Verilog,risc-v-verilog,12,0,2021-06-09 02:29:05+00:00,[],
528,https://github.com/Polskipepek/TrafficLights.git,2020-06-08 14:57:18+00:00,Traffic lights - simple 4 in with timers and diodes for each connected to KCPSM6. 4th-semester computer science lab project - computer architecture.,0,Polskipepek/TrafficLights,270709738,Verilog,TrafficLights,72,0,2021-01-19 23:31:24+00:00,[],None
529,https://github.com/Shaurya140894/Vending-Machine.git,2020-06-07 21:46:27+00:00,,0,Shaurya140894/Vending-Machine,270441088,Verilog,Vending-Machine,5,0,2020-06-07 21:59:02+00:00,[],None
530,https://github.com/tim1207/StudentID.git,2020-06-08 11:26:47+00:00,跑學號,0,tim1207/StudentID,270642121,Verilog,StudentID,2,0,2020-06-08 11:32:48+00:00,[],None
531,https://github.com/anthvasquez/Measuring-Vibrations.git,2020-06-01 15:49:25+00:00,Measuring vibrations on an accelerometer connected to an FPGA and displaying results on a Raspberry Pi 4,0,anthvasquez/Measuring-Vibrations,268565200,Verilog,Measuring-Vibrations,104,0,2022-01-31 01:20:35+00:00,[],None
532,https://github.com/zsxqblz/ECE2300-Toy-Processor.git,2020-06-01 17:49:07+00:00,,0,zsxqblz/ECE2300-Toy-Processor,268592242,Verilog,ECE2300-Toy-Processor,15088,0,2020-06-01 17:57:44+00:00,[],None
533,https://github.com/Adrofier/Vending-Machine-Controller-using-Verilog.git,2020-06-11 05:32:47+00:00,Vending Machine Controller with basic testbench just to check the functioning of the module.,0,Adrofier/Vending-Machine-Controller-using-Verilog,271460061,Verilog,Vending-Machine-Controller-using-Verilog,324,0,2020-06-11 05:48:18+00:00,[],https://api.github.com/licenses/mit
534,https://github.com/bansil-vaghasiya/2-Stage-16-bit-pipelined-adder-.git,2020-06-12 06:26:44+00:00,Verilog code for 2 stage 16 bit pipelined adder ,0,bansil-vaghasiya/2-Stage-16-bit-pipelined-adder-,271725231,Verilog,2-Stage-16-bit-pipelined-adder-,65,0,2020-06-12 06:28:35+00:00,[],None
535,https://github.com/MaitreyiJ/BuzzerQuizGame.git,2020-06-10 09:39:54+00:00,Final Project for ECE241 Digital Systems,0,MaitreyiJ/BuzzerQuizGame,271237453,Verilog,BuzzerQuizGame,445,0,2020-06-10 09:46:21+00:00,[],None
536,https://github.com/NirajKinnal/assignment-4.git,2020-06-10 18:06:33+00:00,,0,NirajKinnal/assignment-4,271349686,Verilog,assignment-4,1,0,2020-06-10 18:07:04+00:00,[],None
537,https://github.com/oscar86hsu/NCTU_Sequential_Controller_Design.git,2020-06-12 02:17:35+00:00,,0,oscar86hsu/NCTU_Sequential_Controller_Design,271688717,Verilog,NCTU_Sequential_Controller_Design,2,0,2020-07-12 02:08:47+00:00,[],None
538,https://github.com/Yogesh7920/RISC-V.git,2020-06-07 13:03:53+00:00,The RISC-V processor with pipe-lining. It executes all basic RISC-V commands. refer Instruction Set of RISC-V for those instructions.  ,0,Yogesh7920/RISC-V,270308462,Verilog,RISC-V,302,0,2020-06-07 13:18:24+00:00,[],None
539,https://github.com/johnsonkao0213/CO_LAB5.git,2020-06-10 10:51:41+00:00,,0,johnsonkao0213/CO_LAB5,271251745,Verilog,CO_LAB5,2687,0,2020-06-11 09:48:14+00:00,[],None
540,https://github.com/kjain3/minimap2.git,2020-05-31 21:09:37+00:00,,0,kjain3/minimap2,268364664,Verilog,minimap2,9,0,2020-05-31 21:14:07+00:00,[],None
541,https://github.com/FelliYang/yangMIPS.git,2020-05-25 12:28:10+00:00,一款MIPS release 1兼容的mips处理器,0,FelliYang/yangMIPS,266773342,Verilog,yangMIPS,71,0,2023-02-18 08:05:23+00:00,[],None
542,https://github.com/AdhamSaheb/Verilog_Small_CPU.git,2020-05-26 10:42:36+00:00,,0,AdhamSaheb/Verilog_Small_CPU,267015818,Verilog,Verilog_Small_CPU,776,0,2020-05-26 10:46:50+00:00,[],None
543,https://github.com/nvdatk61/IC-.git,2020-06-02 05:42:45+00:00,,0,nvdatk61/IC-,268711290,Verilog,IC-,462,0,2020-06-02 05:44:11+00:00,[],None
544,https://github.com/abdurrafaykhan/Hot-Wheels-Verilog.git,2020-05-21 05:23:31+00:00,"Car racing game using FPGA, VGA, Verilog, and De1-SOC board",0,abdurrafaykhan/Hot-Wheels-Verilog,265761872,Verilog,Hot-Wheels-Verilog,5450,0,2020-05-21 05:26:20+00:00,[],None
545,https://github.com/oscar86hsu/NCTU_Vector_Inner_Product.git,2020-05-21 10:28:14+00:00,,0,oscar86hsu/NCTU_Vector_Inner_Product,265819848,Verilog,NCTU_Vector_Inner_Product,584,0,2020-06-03 07:27:49+00:00,[],None
546,https://github.com/PenguinCuttlefish/PSA.git,2020-05-21 12:35:25+00:00,,0,PenguinCuttlefish/PSA,265844337,Verilog,PSA,185,0,2020-06-27 10:39:38+00:00,[],None
547,https://github.com/martin-altenburg/ee180-lab4.git,2020-05-26 22:41:32+00:00,,0,martin-altenburg/ee180-lab4,267167032,Verilog,ee180-lab4,5087,0,2020-06-10 07:22:17+00:00,[],None
548,https://github.com/milonimittal/Moore-FSM-Coin-Toss-Consecutive-Head-Detection.git,2020-05-22 07:21:36+00:00,Detection of 3 consecutive heads in a sequence of random trials of tossing a fair coin.,0,milonimittal/Moore-FSM-Coin-Toss-Consecutive-Head-Detection,266045341,Verilog,Moore-FSM-Coin-Toss-Consecutive-Head-Detection,1,0,2020-05-22 07:29:57+00:00,[],None
549,https://github.com/Rem-Yin/CS145-ArchLab.git,2020-05-25 00:52:54+00:00,The code for computer architecture lab.,0,Rem-Yin/CS145-ArchLab,266651546,Verilog,CS145-ArchLab,6355,0,2020-06-11 03:19:41+00:00,[],None
550,https://github.com/nitheeshkumar17/Floating-Point-Adder-and-Multiplier.git,2020-05-27 14:00:29+00:00,,0,nitheeshkumar17/Floating-Point-Adder-and-Multiplier,267334397,Verilog,Floating-Point-Adder-and-Multiplier,26,0,2020-08-04 11:28:16+00:00,[],None
551,https://github.com/doctormin/HDLbits.git,2020-05-21 15:13:38+00:00,👍Yimin's Verilog practice,0,doctormin/HDLbits,265880641,Verilog,HDLbits,8,0,2020-05-22 07:02:42+00:00,[],None
552,https://github.com/mfkiwl/Ochiba_Processor.git,2020-05-28 21:43:26+00:00,Ochiba is a RISC-V RV32I compatible processor featuring low LUT resource consumption and high frequency drive.,0,mfkiwl/Ochiba_Processor,267702968,,Ochiba_Processor,21,0,2021-12-09 07:50:37+00:00,[],None
553,https://github.com/0x5bjorn/com.333.git,2020-06-04 15:37:17+00:00,Digital Integrated Circuit Design course,0,0x5bjorn/com.333,269398313,Verilog,com.333,3220,0,2020-06-04 15:45:11+00:00,[],None
554,https://github.com/baidxi/Verilog-study.git,2020-05-25 12:38:13+00:00,Verilog学习练习代码,0,baidxi/Verilog-study,266775395,Verilog,Verilog-study,0,0,2020-05-27 12:33:33+00:00,[],None
555,https://github.com/muhammed-eldabea/CounterUP_using_verilog.git,2020-05-22 01:16:47+00:00,,0,muhammed-eldabea/CounterUP_using_verilog,265988174,Verilog,CounterUP_using_verilog,2,0,2020-05-22 01:18:13+00:00,[],None
556,https://github.com/karthikgre273/DigitalNoiseCancellationUsingFFT.git,2020-05-26 08:44:19+00:00,Project Designed to cancel High frequency Noise using digital FFT and IFFT and filter generated using MATLAB,0,karthikgre273/DigitalNoiseCancellationUsingFFT,266990578,Verilog,DigitalNoiseCancellationUsingFFT,427,0,2020-07-08 00:17:09+00:00,[],None
557,https://github.com/betimthaqi/SingleCycleCPU.git,2020-05-29 01:34:14+00:00,"Projekt nga lënda ""Arkitektura e Kompjutereve""",0,betimthaqi/SingleCycleCPU,267737429,Verilog,SingleCycleCPU,411,0,2020-06-08 22:59:32+00:00,[],https://api.github.com/licenses/mit
558,https://github.com/mfkiwl/Shinku_NPU.git,2020-05-28 21:41:49+00:00,,0,mfkiwl/Shinku_NPU,267702722,,Shinku_NPU,33,0,2021-12-09 07:49:59+00:00,[],None
559,https://github.com/ece544-spring2020/flask-half-full.git,2020-05-31 03:13:19+00:00,I'm a flask-half-full type of person.,2,ece544-spring2020/flask-half-full,268200421,Verilog,flask-half-full,42,0,2021-03-29 02:23:43+00:00,[],https://api.github.com/licenses/mit
560,https://github.com/danielpoochai/DSD_Final.git,2020-05-31 08:23:07+00:00,RISCV_Pipeline,0,danielpoochai/DSD_Final,268238268,Verilog,DSD_Final,12230,0,2020-06-28 19:56:29+00:00,[],None
561,https://github.com/Bio-HO/Image-Sorting-Engine.git,2020-06-02 09:55:46+00:00,實用數位系統設計的期末專案,0,Bio-HO/Image-Sorting-Engine,268763736,Verilog,Image-Sorting-Engine,74,0,2020-06-12 01:55:58+00:00,[],None
562,https://github.com/gavin-lewis/VerilogStarter.git,2020-06-02 08:07:14+00:00,Verilog Starter Programs for understanding,0,gavin-lewis/VerilogStarter,268739601,Verilog,VerilogStarter,5,0,2020-06-02 08:34:00+00:00,[],None
563,https://github.com/danningyu/CS-M152A.git,2020-06-06 23:18:21+00:00,"Repository for work done in UCLA's CS M152A class, taken Spring 2020.",0,danningyu/CS-M152A,270131699,Verilog,CS-M152A,5243,0,2020-06-15 05:45:01+00:00,[],None
564,https://github.com/Chang-213/RISC-V-Processor.git,2020-06-24 21:17:06+00:00,"A completed RISC-V Processor that was created by Chang, Taras, and Shaun.",0,Chang-213/RISC-V-Processor,274771310,Verilog,RISC-V-Processor,3332,0,2020-06-26 19:36:35+00:00,[],None
565,https://github.com/unal-edigital1-2020-1/work2-capturaDatos.git,2020-06-23 21:11:46+00:00,Second week of digital electronic lab,0,unal-edigital1-2020-1/work2-capturaDatos,274509842,Verilog,work2-capturaDatos,1556,0,2020-07-01 17:14:03+00:00,[],None
566,https://github.com/harshilmehta67/16bit-MIPS.git,2020-06-11 05:51:19+00:00,Computer Organization Project Coded in Verilog,0,harshilmehta67/16bit-MIPS,271462942,Verilog,16bit-MIPS,1259,0,2020-06-11 05:59:40+00:00,[],None
567,https://github.com/maheshabburi/verilog.git,2020-06-25 10:30:03+00:00,,0,maheshabburi/verilog,274888481,Verilog,verilog,56,0,2020-06-25 10:35:50+00:00,[],None
568,https://github.com/armenuhiarakelyan1978/verilog_lesson.git,2020-06-20 05:34:25+00:00,verilog_lessons_exer,0,armenuhiarakelyan1978/verilog_lesson,273645309,Verilog,verilog_lesson,7,0,2020-06-20 05:37:08+00:00,[],None
569,https://github.com/laCorse/SIMPLE_MIPS.git,2020-06-20 08:24:58+00:00,homework for hdu -- a simple(solving the data hazards) 5 stages pipeline CPU,0,laCorse/SIMPLE_MIPS,273668207,Verilog,SIMPLE_MIPS,6337,0,2020-07-17 06:40:36+00:00,[],None
570,https://github.com/HLhello/about_dip.git,2020-05-23 14:41:01+00:00,digital image processing ,0,HLhello/about_dip,266355598,Verilog,about_dip,590,0,2020-08-19 01:39:56+00:00,[],None
571,https://github.com/iremkilinc99/Bil264L-lab3.git,2020-05-22 18:45:55+00:00,,0,iremkilinc99/Bil264L-lab3,266183911,Verilog,Bil264L-lab3,4,0,2020-05-22 18:48:04+00:00,[],None
572,https://github.com/garyabc0123/fpgaprojectpresentation.git,2020-06-14 20:47:01+00:00,,0,garyabc0123/fpgaprojectpresentation,272280816,Verilog,fpgaprojectpresentation,24534,0,2020-06-15 00:49:10+00:00,[],None
573,https://github.com/dc-base/fpga-allophone.git,2020-06-05 05:47:57+00:00,,0,dc-base/fpga-allophone,269541528,Verilog,fpga-allophone,7,0,2020-08-30 07:53:13+00:00,[],None
574,https://github.com/JavaRiceSparrow/eda_final.git,2020-06-05 15:02:56+00:00,,0,JavaRiceSparrow/eda_final,269676160,Verilog,eda_final,9757,0,2020-06-23 06:35:51+00:00,[],None
575,https://github.com/vjtagaltera/epm240-spi-gen.git,2020-06-05 02:36:09+00:00,,0,vjtagaltera/epm240-spi-gen,269513601,Verilog,epm240-spi-gen,500,0,2020-06-12 00:25:29+00:00,[],None
576,https://github.com/eletrolitico/mips.git,2020-06-17 18:27:11+00:00,"Processador MIPS, Trabalho disciplina ELTD05",0,eletrolitico/mips,273049848,Verilog,mips,72,0,2020-07-09 15:26:20+00:00,[],None
577,https://github.com/merluzzob/test.git,2020-06-09 17:21:37+00:00,,0,merluzzob/test,271065669,Verilog,test,2146,0,2020-06-09 17:57:03+00:00,[],None
578,https://github.com/esteban11519/semana1.git,2020-06-12 03:26:33+00:00,,0,esteban11519/semana1,271699473,Verilog,semana1,10,0,2020-06-12 03:41:19+00:00,[],None
579,https://github.com/rahulmala007/Verilog-Postmidsem.git,2020-06-07 11:51:15+00:00,Verilog PostMidsem Codes,0,rahulmala007/Verilog-Postmidsem,270289968,Verilog,Verilog-Postmidsem,109,0,2020-06-07 11:53:46+00:00,[],None
580,https://github.com/ianyechen/crazy-taxi.git,2020-06-18 18:40:42+00:00,A modified Crazy Taxi game implemented with Verilog on the DE1-Soc Board.,0,ianyechen/crazy-taxi,273314019,Verilog,crazy-taxi,65,0,2020-06-18 22:00:36+00:00,[],None
581,https://github.com/wwkkww1983/uart.git,2020-06-06 05:53:45+00:00,UART Robei project ,0,wwkkww1983/uart,269883616,,uart,156,0,2020-09-10 01:01:53+00:00,[],None
582,https://github.com/drive087/undertale-hwproject.git,2020-06-07 15:12:18+00:00,,0,drive087/undertale-hwproject,270343693,Verilog,undertale-hwproject,3396,0,2020-06-07 15:31:09+00:00,[],None
583,https://github.com/vulkanbets/vga_project.git,2020-05-27 01:09:07+00:00,,0,vulkanbets/vga_project,267187766,Verilog,vga_project,3,0,2020-05-27 01:13:11+00:00,[],None
584,https://github.com/satyajit-gantayat/Digital-Clock-design-using-Verilog.git,2020-06-12 07:42:35+00:00,,0,satyajit-gantayat/Digital-Clock-design-using-Verilog,271739404,Verilog,Digital-Clock-design-using-Verilog,353,0,2020-06-12 08:00:38+00:00,[],None
585,https://github.com/EdwardRzayev/Verilog-chip-design.git,2020-06-25 21:20:02+00:00,,0,EdwardRzayev/Verilog-chip-design,275017338,Verilog,Verilog-chip-design,51,0,2020-06-25 22:41:11+00:00,[],None
586,https://github.com/AhmedMostafa98/spi_master_slave_8bit.git,2020-06-25 02:48:51+00:00,8bit master and slave spi,0,AhmedMostafa98/spi_master_slave_8bit,274815800,Verilog,spi_master_slave_8bit,4,0,2020-06-30 19:45:05+00:00,[],None
587,https://github.com/Jaso0n/Improved-DDFS.git,2020-06-21 01:29:39+00:00,,0,Jaso0n/Improved-DDFS,273813358,Verilog,Improved-DDFS,146,0,2020-06-21 03:37:23+00:00,[],None
588,https://github.com/KingFrige/pipeLiningAdder.git,2020-06-19 01:19:42+00:00,a verilog project demo,0,KingFrige/pipeLiningAdder,273375169,Verilog,pipeLiningAdder,5,0,2020-11-27 01:52:42+00:00,[],None
589,https://github.com/shjiang-yang/RISCV-CPU-Growing.git,2020-06-20 01:24:21+00:00,fucking CPU,0,shjiang-yang/RISCV-CPU-Growing,273616676,Verilog,RISCV-CPU-Growing,3,0,2020-06-23 08:03:13+00:00,[],None
590,https://github.com/DarkenedOrigins/8bitLaunchpad.git,2020-06-14 06:58:41+00:00,"This is a hardware based launchpad. A launchpad is a musical device that plays user defined sounds based on key presses. This launch pad and also record, playback, and layer audio as well as change the speed of the track. Works with 8 bit audio",0,DarkenedOrigins/8bitLaunchpad,272149927,Verilog,8bitLaunchpad,347,0,2020-06-14 07:02:13+00:00,[],None
591,https://github.com/amalinprince/Adaptive_MaMeMi.git,2020-06-23 19:10:45+00:00,"MATLAB code and XILINX VIVADO files related to the publication, ""Low-Power Hardware Accelerator for Detrending Measured Biopotential Data"".",1,amalinprince/Adaptive_MaMeMi,274488270,Verilog,Adaptive_MaMeMi,268,0,2020-08-22 18:43:42+00:00,[],https://api.github.com/licenses/apache-2.0
592,https://github.com/MikeRaphael/EEE4020F_Yoda_P18.git,2020-06-15 08:42:33+00:00,Image Steganography Decoder ,0,MikeRaphael/EEE4020F_Yoda_P18,272386328,Verilog,EEE4020F_Yoda_P18,24,0,2020-06-24 19:37:56+00:00,[],None
593,https://github.com/arkinmukherjee/64-bit-ARM-Processor.git,2020-06-22 21:33:18+00:00,,0,arkinmukherjee/64-bit-ARM-Processor,274246844,Verilog,64-bit-ARM-Processor,24,0,2020-06-22 21:49:27+00:00,[],None
594,https://github.com/diegodru/DisenoDeSistemasLogicos.git,2020-05-28 23:45:43+00:00,,0,diegodru/DisenoDeSistemasLogicos,267721163,Verilog,DisenoDeSistemasLogicos,156,0,2020-07-07 01:52:09+00:00,[],None
595,https://github.com/hectam/EvaluacionDis.git,2020-05-28 23:39:48+00:00,,0,hectam/EvaluacionDis,267720333,Verilog,EvaluacionDis,1184,0,2020-07-03 23:11:30+00:00,[],None
596,https://github.com/joelramiroc/Evaluaciones.git,2020-05-28 23:40:37+00:00,,0,joelramiroc/Evaluaciones,267720449,Verilog,Evaluaciones,33,0,2020-07-03 22:52:04+00:00,[],None
597,https://github.com/Wojus997/AK2_Proj.git,2020-05-24 16:10:38+00:00,"projekt ak2, sumator prefiksowy",0,Wojus997/AK2_Proj,266577271,Verilog,AK2_Proj,521,0,2020-05-24 16:12:57+00:00,[],None
598,https://github.com/halbleiter-pyrotechnik/ice40-blinky.git,2020-05-26 11:41:29+00:00,Lattice iCEcube2 example FPGA projects for blinking onboard LEDs,0,halbleiter-pyrotechnik/ice40-blinky,267027033,Verilog,ice40-blinky,18,0,2020-05-27 13:55:01+00:00,[],https://api.github.com/licenses/agpl-3.0
599,https://github.com/mshah12/ece385-sp20.git,2020-05-28 17:02:44+00:00,Digital Systems Laboratory course taken at the University of Illinois at Urbana-Champaign,0,mshah12/ece385-sp20,267647534,Verilog,ece385-sp20,69038,0,2020-07-20 18:04:40+00:00,[],None
600,https://github.com/QiuHuiSee/Radix2FFT.git,2020-05-29 06:13:43+00:00,,0,QiuHuiSee/Radix2FFT,267780005,Verilog,Radix2FFT,22,0,2021-02-03 15:31:08+00:00,[],None
601,https://github.com/varun-repo/Rush.git,2020-05-29 13:58:27+00:00,,0,varun-repo/Rush,267871355,Verilog,Rush,2378,0,2020-05-29 14:09:29+00:00,[],None
602,https://github.com/bhautik1209/MIPS-ISA.git,2020-06-02 22:47:32+00:00,"5-stage of Instruction Fetch, Decode, Execute, Memory, Writeback",0,bhautik1209/MIPS-ISA,268924324,Verilog,MIPS-ISA,3860,0,2020-06-02 22:49:12+00:00,[],None
603,https://github.com/LoreleyB/TPFinal_Arqui2020.git,2020-06-10 00:11:36+00:00,,0,LoreleyB/TPFinal_Arqui2020,271136223,Verilog,TPFinal_Arqui2020,7644,0,2020-07-18 22:44:03+00:00,[],None
604,https://github.com/dmireckid/ECE411_Personal.git,2020-06-07 23:21:24+00:00,,1,dmireckid/ECE411_Personal,270460351,Verilog,ECE411_Personal,3314,0,2020-06-07 23:25:08+00:00,[],None
605,https://github.com/tim1207/RYG.git,2020-06-08 11:09:04+00:00,紅綠燈,0,tim1207/RYG,270637035,Verilog,RYG,1,0,2020-06-08 11:09:39+00:00,[],None
606,https://github.com/sdmms1/single-cycle-CPU.git,2020-06-08 02:02:38+00:00,,0,sdmms1/single-cycle-CPU,270493654,Verilog,single-cycle-CPU,3381,0,2020-06-08 02:08:13+00:00,[],None
607,https://github.com/pierregobin/miniproc.git,2020-06-08 18:55:00+00:00,on verra,0,pierregobin/miniproc,270788323,Verilog,miniproc,2,0,2020-06-08 19:00:07+00:00,[],None
608,https://github.com/AbhishekRamesha/Multiplier.git,2020-06-07 00:47:12+00:00,,0,AbhishekRamesha/Multiplier,270148188,Verilog,Multiplier,15,0,2020-06-17 18:43:14+00:00,[],None
609,https://github.com/ajdouglass/Verilog.git,2020-06-06 04:43:19+00:00,Useful Verilog modules,0,ajdouglass/Verilog,269869494,Verilog,Verilog,6,0,2020-06-06 16:33:47+00:00,[],None
610,https://github.com/Divyanshujain2000/16-Bit-RISC-microprocessor-verilog-.git,2020-05-25 10:11:45+00:00,,0,Divyanshujain2000/16-Bit-RISC-microprocessor-verilog-,266747373,Verilog,16-Bit-RISC-microprocessor-verilog-,6,0,2020-07-06 17:30:59+00:00,[],None
611,https://github.com/Kiran760043/UART-Transmitter.git,2020-05-25 17:31:24+00:00,FPGA Programs,0,Kiran760043/UART-Transmitter,266840645,Verilog,UART-Transmitter,77,0,2020-07-07 19:14:46+00:00,[],None
612,https://github.com/ed9711/CSC258-Computer-Organization.git,2020-05-26 05:01:11+00:00,Connect 4 game written in Verilog,0,ed9711/CSC258-Computer-Organization,266948626,Verilog,CSC258-Computer-Organization,1615,0,2020-11-27 22:34:01+00:00,[],None
613,https://github.com/imchristina/bdcpu.git,2020-06-03 19:35:32+00:00,,0,imchristina/bdcpu,269177605,Verilog,bdcpu,7,0,2020-06-05 00:48:19+00:00,"['cpu', 'verilog']",https://api.github.com/licenses/mit
614,https://github.com/thodoxuan99/numberguess_verilog.git,2020-06-03 14:14:20+00:00,,0,thodoxuan99/numberguess_verilog,269106622,Verilog,numberguess_verilog,5,0,2020-06-03 14:19:11+00:00,[],None
615,https://github.com/thatguy1104/MIPS-Single-Cycle-Processor.git,2020-05-24 00:14:28+00:00,,0,thatguy1104/MIPS-Single-Cycle-Processor,266441304,Verilog,MIPS-Single-Cycle-Processor,9178,0,2020-05-24 14:10:27+00:00,[],None
616,https://github.com/Void-7/mips-pipeline.git,2020-06-17 01:49:02+00:00,lesson design - MIPS pipeline cpu,0,Void-7/mips-pipeline,272853004,Verilog,mips-pipeline,1045,0,2020-09-04 11:26:15+00:00,[],None
617,https://github.com/4ge32/verilog-newbie.git,2020-06-22 10:41:43+00:00,Practice verilog,0,4ge32/verilog-newbie,274109777,Verilog,verilog-newbie,1,0,2020-06-22 10:52:13+00:00,[],None
618,https://github.com/khayamx/HPES_Prac5.git,2020-06-11 09:15:49+00:00,,0,khayamx/HPES_Prac5,271502902,Verilog,HPES_Prac5,4,0,2020-06-11 09:27:56+00:00,[],None
619,https://github.com/bansil-vaghasiya/Scan-based-test-for-FIFO-buffer-.git,2020-06-12 06:39:15+00:00,Verilog code for adding a scan element to verify the operation of FIFO buffer.,0,bansil-vaghasiya/Scan-based-test-for-FIFO-buffer-,271727418,Verilog,Scan-based-test-for-FIFO-buffer-,86,0,2020-06-12 06:40:35+00:00,[],None
620,https://github.com/dhp520/test1.git,2020-06-12 01:55:59+00:00,项目描述,0,dhp520/test1,271685255,Verilog,test1,6,0,2020-06-14 12:00:06+00:00,[],None
621,https://github.com/nirvenus/mkio.git,2020-06-17 10:46:13+00:00,verilog module,0,nirvenus/mkio,272948222,Verilog,mkio,12,0,2020-06-17 11:04:30+00:00,[],None
622,https://github.com/imuguruza/image_displayer.git,2020-06-16 14:59:22+00:00,Design for iCE40H4XK for displaying images in a VGA dislay,0,imuguruza/image_displayer,272737831,Verilog,image_displayer,25,0,2021-07-22 02:01:32+00:00,"['fpga', 'yosys', 'fusesoc', 'ice40', 'icestorm']",https://api.github.com/licenses/apache-2.0
623,https://github.com/HeshamRmah/SAP-I-Verilog-Implementation-master.git,2020-06-16 10:50:47+00:00,Implementation of SAP II in Verilog,0,HeshamRmah/SAP-I-Verilog-Implementation-master,272682510,Verilog,SAP-I-Verilog-Implementation-master,8,0,2020-06-16 10:51:43+00:00,[],None
624,https://github.com/AlexandrSokolovsky/-.git,2020-06-16 17:15:03+00:00,IVT23_sokolovsky_alexandr,0,AlexandrSokolovsky/-,272768277,Verilog,-,5818,0,2020-06-16 17:32:07+00:00,[],None
625,https://github.com/IonitaCatalin/embedded-systems.git,2020-06-13 10:16:45+00:00,,0,IonitaCatalin/embedded-systems,271985498,Verilog,embedded-systems,6,0,2022-03-14 08:22:21+00:00,[],None
626,https://github.com/bansil-vaghasiya/5-stage-pipelined-MIPS-Architecture-with-forward-chainning.git,2020-06-12 06:33:37+00:00,Verilog code for 5 stage pipelined arithmetic logic unit.,0,bansil-vaghasiya/5-stage-pipelined-MIPS-Architecture-with-forward-chainning,271726440,Verilog,5-stage-pipelined-MIPS-Architecture-with-forward-chainning,3,0,2020-09-20 20:26:32+00:00,[],None
627,https://github.com/ppalineee/hwsynlab_project.git,2020-05-30 11:32:49+00:00,,0,ppalineee/hwsynlab_project,268066674,Verilog,hwsynlab_project,4677,0,2020-06-07 08:00:17+00:00,[],None
628,https://github.com/camalasad/Digital-Electronics-Projects.git,2020-06-06 05:54:48+00:00,Digital Electronics Course Projects,1,camalasad/Digital-Electronics-Projects,269883834,Verilog,Digital-Electronics-Projects,1706,0,2021-11-28 11:33:35+00:00,"['verilog-hdl', 'multisim-simulation', 'digital', 'electronics', 'digital-circuits']",None
629,https://github.com/fmurillom/Embebidos_Proyecto2.git,2020-06-08 04:35:36+00:00,,0,fmurillom/Embebidos_Proyecto2,270529764,Verilog,Embebidos_Proyecto2,9199,0,2020-06-11 14:21:15+00:00,[],None
630,https://github.com/unal-edigital1-2020-1/wp2-simulacion-captura-grupo-05.git,2020-06-24 16:52:23+00:00,wp2-simulacion-captura-grupo-05 created by GitHub Classroom,0,unal-edigital1-2020-1/wp2-simulacion-captura-grupo-05,274721846,Verilog,wp2-simulacion-captura-grupo-05,1538,0,2020-06-24 17:46:55+00:00,[],None
631,https://github.com/ivaniusss/single_cycle.git,2020-06-25 16:17:52+00:00,single cycle datapath architecture,0,ivaniusss/single_cycle,274962091,Verilog,single_cycle,23,0,2020-07-02 18:27:01+00:00,[],None
632,https://github.com/chandravathichellu/Verilog_Codes.git,2020-06-15 05:52:50+00:00,,0,chandravathichellu/Verilog_Codes,272353409,Verilog,Verilog_Codes,862,0,2020-06-17 19:40:05+00:00,[],None
633,https://github.com/kearnsm2atwit/ADCD_7seg_Comparator.git,2020-06-15 18:03:41+00:00,Advanced Digital Circuit Design Summer 2020 Lab,0,kearnsm2atwit/ADCD_7seg_Comparator,272509486,Verilog,ADCD_7seg_Comparator,9336,0,2020-06-18 21:06:09+00:00,[],None
634,https://github.com/nevercast/tinysoc.git,2020-06-19 08:39:53+00:00,My first SoC implemented for the TinyFPGA BX,0,nevercast/tinysoc,273446082,Verilog,tinysoc,31,0,2020-06-23 05:01:47+00:00,[],https://api.github.com/licenses/mit
635,https://github.com/g-lilian/project_mole.git,2020-06-21 05:15:00+00:00,Whack-a-mole game on Basys 3 FPGA,0,g-lilian/project_mole,273839101,Verilog,project_mole,530,0,2020-06-21 05:56:45+00:00,[],None
636,https://github.com/LeonidPishugin/DTH.git,2020-06-06 23:47:42+00:00,Ryrsyach_Pyatak,0,LeonidPishugin/DTH,270137161,Verilog,DTH,45,0,2020-06-14 16:12:21+00:00,[],None
637,https://github.com/yuhanqin/128-bit-AES-by-Verilog.git,2020-06-05 01:57:02+00:00,This is a 128-bit AES encryptor written by Verilog. Each encryption round takes two clock periods in average.,0,yuhanqin/128-bit-AES-by-Verilog,269506983,Verilog,128-bit-AES-by-Verilog,261,0,2020-06-05 01:58:58+00:00,[],None
638,https://github.com/Jake-salazar/Modified-Hazard-System.git,2020-05-22 13:09:48+00:00,Introduction to Computer Organization and Architecture,0,Jake-salazar/Modified-Hazard-System,266113423,Verilog,Modified-Hazard-System,4,0,2020-05-22 13:10:49+00:00,[],None
639,https://github.com/MojamojaK/MAX10-FPGA-Sandbox.git,2020-05-22 15:40:05+00:00,Sandbox for MAX10,0,MojamojaK/MAX10-FPGA-Sandbox,266146905,Verilog,MAX10-FPGA-Sandbox,7,0,2020-05-22 16:29:58+00:00,[],None
640,https://github.com/huiye2431/extest.git,2020-05-25 05:36:10+00:00,,0,huiye2431/extest,266692120,Verilog,extest,12,0,2020-05-25 06:00:36+00:00,[],None
641,https://github.com/khayamx/HPES_Prac4.git,2020-06-11 09:14:14+00:00,,0,khayamx/HPES_Prac4,271502591,Verilog,HPES_Prac4,5,0,2020-06-11 09:15:21+00:00,[],None
642,https://github.com/zeroalexchen/RSA.git,2020-06-11 13:12:32+00:00,,0,zeroalexchen/RSA,271549699,Verilog,RSA,24,0,2020-09-09 07:51:32+00:00,[],None
643,https://github.com/moh-C/Verilog_ModelSIM.git,2020-06-11 15:56:28+00:00,,0,moh-C/Verilog_ModelSIM,271588106,Verilog,Verilog_ModelSIM,48,0,2022-12-09 22:45:38+00:00,[],None
644,https://github.com/coco-tyw/tus-verilog.git,2020-06-10 09:46:19+00:00,東京理科大学 電気工学科 Verilog,0,coco-tyw/tus-verilog,271238790,Verilog,tus-verilog,48,0,2020-07-16 13:17:51+00:00,[],None
645,https://github.com/Anthonykung/SNES-VGA-Sprite-Display.git,2020-06-05 10:06:30+00:00,VGA Display with Sprite controlled by SNES controller,0,Anthonykung/SNES-VGA-Sprite-Display,269595793,Verilog,SNES-VGA-Sprite-Display,19,0,2020-06-05 18:32:25+00:00,[],None
646,https://github.com/caleb-sb/YODA_Project.git,2020-06-06 09:54:22+00:00,,0,caleb-sb/YODA_Project,269938276,Verilog,YODA_Project,70,0,2020-06-26 21:39:26+00:00,[],None
647,https://github.com/KuldeepDileep/RISCV_processor.git,2020-06-05 12:06:57+00:00,,1,KuldeepDileep/RISCV_processor,269623346,Verilog,RISCV_processor,750,0,2020-07-23 08:23:47+00:00,[],None
648,https://github.com/Omanshu840/MIPS-and-uPOWER-Processor-Datapath-in-Verilog.git,2020-06-08 17:24:27+00:00,,1,Omanshu840/MIPS-and-uPOWER-Processor-Datapath-in-Verilog,270760070,Verilog,MIPS-and-uPOWER-Processor-Datapath-in-Verilog,26913,0,2020-06-24 06:04:53+00:00,[],None
649,https://github.com/natanvotre/openRisc-fpga.git,2020-06-08 17:41:05+00:00,,0,natanvotre/openRisc-fpga,270764950,Verilog,openRisc-fpga,13378,0,2020-06-08 18:04:18+00:00,[],None
650,https://github.com/Gaoustcer/longxinbei_2020.git,2020-06-07 13:30:03+00:00,,0,Gaoustcer/longxinbei_2020,270315629,Verilog,longxinbei_2020,9,0,2020-09-11 10:31:26+00:00,[],None
651,https://github.com/siddhantv10/practice.git,2020-06-07 12:14:08+00:00,verilog practice codes,0,siddhantv10/practice,270295876,Verilog,practice,16,0,2020-06-08 14:52:02+00:00,[],None
652,https://github.com/Mustafa-RTL/Pipelined-RISC-V-Machine.git,2020-06-07 08:21:16+00:00,Completes an instruction every 2 clock cycles,0,Mustafa-RTL/Pipelined-RISC-V-Machine,270240632,Verilog,Pipelined-RISC-V-Machine,757,0,2020-06-07 08:22:24+00:00,[],None
653,https://github.com/mayank31398/MIPS-verilog.git,2020-05-25 20:36:17+00:00,This repository contains code for a MIPS single cycle architecture written in Verilog.,0,mayank31398/MIPS-verilog,266875348,Verilog,MIPS-verilog,132,0,2020-05-25 20:47:44+00:00,[],None
654,https://github.com/fourks/pc8001m.git,2020-06-14 08:48:11+00:00,,0,fourks/pc8001m,272164793,,pc8001m,146,0,2020-06-27 04:50:37+00:00,[],None
655,https://github.com/aavantagg/371Lab6.git,2020-05-30 23:08:50+00:00,August Avantaggio & Casey Silcox EE 371 Lab 6,0,aavantagg/371Lab6,268174473,Verilog,371Lab6,104981,0,2020-06-08 02:08:15+00:00,[],None
656,https://github.com/lootr5858/Verilog-HDL.git,2020-05-24 05:32:09+00:00,some of my other verilog hdl codes,0,lootr5858/Verilog-HDL,266476592,Verilog,Verilog-HDL,38198,0,2020-05-24 05:32:34+00:00,[],None
657,https://github.com/AAWO/VerilogDevEnv.git,2020-05-27 11:29:58+00:00,Verilog Development Environment,0,AAWO/VerilogDevEnv,267301397,Verilog,VerilogDevEnv,28,0,2020-06-12 08:56:45+00:00,[],https://api.github.com/licenses/mit
658,https://github.com/jonahbardos/Processor_Project.git,2020-05-31 21:19:01+00:00,,0,jonahbardos/Processor_Project,268365932,Verilog,Processor_Project,79,0,2020-05-31 21:21:17+00:00,[],None
659,https://github.com/plusagainH/Computer-Architecture-Final-Project.git,2020-06-22 07:59:31+00:00,,0,plusagainH/Computer-Architecture-Final-Project,274075827,Verilog,Computer-Architecture-Final-Project,1260,0,2020-07-02 14:43:43+00:00,[],None
660,https://github.com/metodi022/SysArchProjekt.git,2020-06-17 16:28:59+00:00,SysArch Projekt,0,metodi022/SysArchProjekt,273025215,Verilog,SysArchProjekt,279,0,2023-03-03 05:35:04+00:00,[],None
661,https://github.com/diaojd/Verilog-practise-in-HDLBits.git,2020-06-25 01:49:00+00:00,,0,diaojd/Verilog-practise-in-HDLBits,274807615,Verilog,Verilog-practise-in-HDLBits,14,0,2020-07-01 02:07:55+00:00,[],None
662,https://github.com/wait-how/Echo.git,2020-06-25 03:59:58+00:00,,0,wait-how/Echo,274825023,Verilog,Echo,49,0,2022-01-06 00:48:34+00:00,[],None
663,https://github.com/vikas7268/Parallel-to-Serial-convertor.git,2020-05-23 04:24:53+00:00,It convert coming parallel data into serial form,0,vikas7268/Parallel-to-Serial-convertor,266262129,Verilog,Parallel-to-Serial-convertor,76,0,2020-05-23 04:55:02+00:00,[],None
664,https://github.com/DarshanaUOP/MIPS-ALU-V2.git,2020-05-23 15:12:10+00:00,MIPS ALU design in VERILOG,0,DarshanaUOP/MIPS-ALU-V2,266361472,Verilog,MIPS-ALU-V2,78,0,2020-11-21 14:53:11+00:00,"['mips-architecture', 'verilog', 'mips-alu']",None
665,https://github.com/isaacdvid1596/DisenoSistemasLogicos.git,2020-05-28 23:39:15+00:00,,0,isaacdvid1596/DisenoSistemasLogicos,267720251,Verilog,DisenoSistemasLogicos,25,0,2020-06-11 23:25:28+00:00,[],None
666,https://github.com/grtcoder/CS203-project.git,2020-05-29 10:50:03+00:00,Basic ALU unit in verilog,1,grtcoder/CS203-project,267834441,Verilog,CS203-project,5,0,2021-02-03 13:54:51+00:00,[],None
667,https://github.com/Long-ThanhLe/RISC-V_uProcessorDesign.git,2020-06-14 09:30:52+00:00,,0,Long-ThanhLe/RISC-V_uProcessorDesign,272171015,Verilog,RISC-V_uProcessorDesign,25930,0,2020-07-06 18:52:21+00:00,[],None
668,https://github.com/LDMDS/FPGA-Altera-Quartus-TxRx.git,2020-06-19 21:24:29+00:00,,0,LDMDS/FPGA-Altera-Quartus-TxRx,273589139,Verilog,FPGA-Altera-Quartus-TxRx,7,0,2020-06-23 16:01:04+00:00,[],https://api.github.com/licenses/mit
669,https://github.com/tao-sun2/MIPS_CPU.git,2020-06-18 14:31:06+00:00,Computer Organization Project,0,tao-sun2/MIPS_CPU,273260732,Verilog,MIPS_CPU,28,0,2020-06-18 14:32:49+00:00,[],None
670,https://github.com/Scramos/LCD-energia.git,2020-06-16 22:57:38+00:00,,0,Scramos/LCD-energia,272828792,Verilog,LCD-energia,81,0,2020-06-30 04:52:22+00:00,[],None
671,https://github.com/akshay-na/32-Bit-RISC-Architecture-Based-on-MIPS.git,2020-06-16 13:18:36+00:00,Design and Simulation of High Performance 32-Bit RISC Architechture Based on MIPS (Still under teting),0,akshay-na/32-Bit-RISC-Architecture-Based-on-MIPS,272713136,Verilog,32-Bit-RISC-Architecture-Based-on-MIPS,159,0,2021-12-31 04:46:05+00:00,"['design', 'simulation', 'verilog', 'python', 'xilinx-ise', 'cadence']",https://api.github.com/licenses/mit
672,https://github.com/Kiran760043/Generic-Mod-N-Counter.git,2020-06-16 19:51:14+00:00,FPGA Programs,0,Kiran760043/Generic-Mod-N-Counter,272798921,Verilog,Generic-Mod-N-Counter,48,0,2020-06-16 19:53:59+00:00,[],None
673,https://github.com/Juan-Chen45/Digital-Design-Project.git,2020-06-21 14:10:10+00:00,A multi-responder written in Verilog,0,Juan-Chen45/Digital-Design-Project,273917151,Verilog,Digital-Design-Project,22308,0,2020-06-21 14:23:29+00:00,[],None
674,https://github.com/Deshanch/CPU-design.git,2020-06-22 04:44:53+00:00,,0,Deshanch/CPU-design,274041734,Verilog,CPU-design,7595,0,2021-06-22 06:42:04+00:00,[],None
675,https://github.com/rshah918/Single-Cycle-Processor.git,2020-06-07 18:51:07+00:00,Scratch implementation of a Single Cycle CPU processor in Verilog,0,rshah918/Single-Cycle-Processor,270400790,Verilog,Single-Cycle-Processor,20,0,2024-02-12 00:47:31+00:00,[],None
676,https://github.com/fhcwcsy/ca_project.git,2020-05-21 10:46:18+00:00,,0,fhcwcsy/ca_project,265823260,Verilog,ca_project,2226,0,2020-07-02 09:40:18+00:00,[],None
677,https://github.com/vivinperis/MIPS_pipeline_processor.git,2020-05-28 14:57:57+00:00,MIPS 32 BIT processor written in verilog as part of High performance Computing architecture course,0,vivinperis/MIPS_pipeline_processor,267619287,Verilog,MIPS_pipeline_processor,5,0,2020-06-20 10:16:19+00:00,[],None
678,https://github.com/Lirimi/Single-Cycle-CPU-Implementation.git,2020-05-28 17:47:25+00:00,,0,Lirimi/Single-Cycle-CPU-Implementation,267657214,Verilog,Single-Cycle-CPU-Implementation,1165,0,2021-02-22 03:16:12+00:00,[],None
679,https://github.com/bman12three4/fpga-graphics-adapter.git,2020-05-28 18:42:40+00:00,https://git.byronlathi.com/bslathi19/fpga-graphics-adapter,0,bman12three4/fpga-graphics-adapter,267668844,Verilog,fpga-graphics-adapter,2443,0,2020-06-27 00:21:43+00:00,[],None
680,https://github.com/alex-roh/Embedded-Systems.git,2020-05-27 07:37:32+00:00,2020-1학기 임베디드 시스템 실습 코드입니다.,0,alex-roh/Embedded-Systems,267252720,Verilog,Embedded-Systems,64110,0,2020-07-10 08:10:23+00:00,[],None
681,https://github.com/knotnuttanai/Undertale-Basys3.git,2020-05-28 04:52:49+00:00,,0,knotnuttanai/Undertale-Basys3,267496345,Verilog,Undertale-Basys3,3682,0,2020-06-03 14:17:08+00:00,[],None
682,https://github.com/DECKER54/lab_6_ece_272.git,2020-05-31 20:57:51+00:00,,0,DECKER54/lab_6_ece_272,268362958,Verilog,lab_6_ece_272,4759,0,2020-06-01 00:36:53+00:00,[],None
683,https://github.com/Usoilworker/NexysA7T100-.git,2020-06-12 06:10:31+00:00,,0,Usoilworker/NexysA7T100-,271722422,Verilog,NexysA7T100-,1647,0,2023-07-06 16:03:43+00:00,[],None
684,https://github.com/NeonVS/PID.git,2020-06-13 19:32:12+00:00,,0,NeonVS/PID,272073450,Verilog,PID,8,0,2021-01-30 14:39:39+00:00,[],None
685,https://github.com/vegaluisjose/nextlayer.git,2020-06-16 23:08:15+00:00,NextLayer,0,vegaluisjose/nextlayer,272830252,Verilog,nextlayer,85,0,2020-10-07 20:48:15+00:00,[],https://api.github.com/licenses/apache-2.0
686,https://github.com/greatshuyi/NoC.git,2020-06-21 06:57:19+00:00,,0,greatshuyi/NoC,273851830,Verilog,NoC,5,0,2020-06-21 07:00:15+00:00,[],None
687,https://github.com/oscarmauriciogiraldo/procesador-single-cycle.git,2020-06-20 11:09:54+00:00,Procesador mono ciclo  basado en el libro: computer organization and desing ,0,oscarmauriciogiraldo/procesador-single-cycle,273692352,Verilog,procesador-single-cycle,10,0,2020-06-20 15:44:27+00:00,[],https://api.github.com/licenses/apache-2.0
688,https://github.com/URK96/Computer-Design-Example.git,2020-06-07 06:33:35+00:00,Computer Design Example Code,0,URK96/Computer-Design-Example,270216652,Verilog,Computer-Design-Example,416,0,2020-06-07 06:57:06+00:00,[],None
689,https://github.com/leahyao/verilog.git,2020-06-07 13:02:31+00:00,verilog ,0,leahyao/verilog,270308085,Verilog,verilog,1,0,2021-03-09 08:31:06+00:00,[],None
690,https://github.com/Ismael-G/hello.git,2020-06-10 12:37:24+00:00,scdshd,0,Ismael-G/hello,271272920,Verilog,hello,2904,0,2020-06-10 12:40:53+00:00,[],None
691,https://github.com/souvicksaha95/Control_WS2812B_LED_by_Spartan6_FPGA.git,2020-06-09 06:36:37+00:00,,0,souvicksaha95/Control_WS2812B_LED_by_Spartan6_FPGA,270922831,Verilog,Control_WS2812B_LED_by_Spartan6_FPGA,314,0,2020-06-10 07:02:57+00:00,[],None
692,https://github.com/abdurrafaykhan/Verilog-Enhanced-Processor.git,2020-05-23 02:42:52+00:00,Enhanced Processor created using Verilog for Computer Organization (ECE243),0,abdurrafaykhan/Verilog-Enhanced-Processor,266249859,Verilog,Verilog-Enhanced-Processor,1334,0,2020-05-23 02:48:14+00:00,[],None
693,https://github.com/Strik3agle98/Nigga-undertale.git,2020-05-23 13:53:51+00:00,,0,Strik3agle98/Nigga-undertale,266346654,Verilog,Nigga-undertale,1396,0,2020-05-26 08:45:00+00:00,[],https://api.github.com/licenses/mit
694,https://github.com/AngelicaSemenec/CMPE-140.git,2020-05-22 20:56:28+00:00,Computer Architecture Design,0,AngelicaSemenec/CMPE-140,266205866,Verilog,CMPE-140,17995,0,2020-05-22 21:05:45+00:00,[],None
695,https://github.com/Satjpatel/Intelligent-Traffic-Light-Control-System-.git,2020-05-24 18:22:04+00:00,A Verilog HDL Code for an Intelligent Traffic Light Control System ( Using State Machines) ,0,Satjpatel/Intelligent-Traffic-Light-Control-System-,266599760,Verilog,Intelligent-Traffic-Light-Control-System-,12610,0,2021-05-20 07:41:07+00:00,[],None
696,https://github.com/gbraad/spi-sniffer.git,2020-05-23 04:58:12+00:00,Mirrored for archival purpose,0,gbraad/spi-sniffer,266265922,Verilog,spi-sniffer,6,0,2020-05-23 05:01:40+00:00,[],None
697,https://github.com/daniela08/lab05.git,2020-06-14 23:36:10+00:00,,0,daniela08/lab05,272301305,Verilog,lab05,27,0,2020-07-21 15:04:28+00:00,[],None
698,https://github.com/nileshdas/CLTProject.git,2020-06-15 07:33:30+00:00,,0,nileshdas/CLTProject,272371705,Verilog,CLTProject,862,0,2020-12-09 04:00:30+00:00,[],None
699,https://github.com/Anudeepreddynarala/Binary-and-Gray-conversions.git,2020-06-18 15:40:56+00:00,Binary to Gray conversions and vice versa,0,Anudeepreddynarala/Binary-and-Gray-conversions,273277231,Verilog,Binary-and-Gray-conversions,1,0,2020-06-18 15:42:13+00:00,[],None
700,https://github.com/Anudeepreddynarala/PWM_verilog.git,2020-06-18 15:13:39+00:00,,0,Anudeepreddynarala/PWM_verilog,273270917,Verilog,PWM_verilog,1,0,2020-06-18 15:18:35+00:00,[],None
701,https://github.com/fabiorocha22/RISC-CPU-Verilog.git,2020-06-19 05:49:36+00:00,This is a university project of a discipline of Digital Systems Design. We developed a CPU with RISC archtecture designed in FPGA. ,0,fabiorocha22/RISC-CPU-Verilog,273414557,Verilog,RISC-CPU-Verilog,10548,0,2020-06-19 06:02:10+00:00,[],None
702,https://github.com/sravansaiii/processordesign.git,2020-05-27 07:18:04+00:00,Basic processor components design,0,sravansaiii/processordesign,267248643,Verilog,processordesign,2,0,2020-05-27 07:22:36+00:00,[],None
703,https://github.com/superkunn/FFT_Verilog.git,2020-06-01 12:03:11+00:00,Multiply with FFT.,0,superkunn/FFT_Verilog,268510408,Verilog,FFT_Verilog,22,0,2020-06-16 11:12:53+00:00,[],None
704,https://github.com/8bitworkshop/Ch7.git,2020-06-23 15:23:32+00:00,,0,8bitworkshop/Ch7,274440863,Verilog,Ch7,2,0,2020-06-23 15:41:37+00:00,[],None
705,https://github.com/JorgeD13/Arqui_Proyect.git,2020-06-25 23:45:05+00:00,Proyecto de Arqui,0,JorgeD13/Arqui_Proyect,275036907,Verilog,Arqui_Proyect,55,0,2020-06-25 23:47:57+00:00,[],None
