,clone_url,created_at,description,forks_count,full_name,id,language,name,size,stargazers_count,updated_at,topics,license_url
0,https://github.com/sach/System-Verilog-Packet-Library.git,2011-02-15 01:09:10+00:00,"System-Veilog Packet Library to configure, randomize, pack/unpack, copy, compare/display different headers",21,sach/System-Verilog-Packet-Library,1367664,SystemVerilog,System-Verilog-Packet-Library,653,61,2024-03-28 03:21:38+00:00,[],
1,https://github.com/dagget/programming.git,2011-02-27 10:57:15+00:00,code examples and proof of concepts,1,dagget/programming,1417558,SystemVerilog,programming,549,3,2023-12-19 09:40:53+00:00,[],
2,https://github.com/bosson/balancebook.git,2011-02-06 14:16:42+00:00,"Web ledger based on EU and SE bookkeeping standards, xml, xslt, servlets and jquery",0,bosson/balancebook,1334429,SystemVerilog,balancebook,239,1,2014-10-07 06:32:59+00:00,[],
3,https://github.com/mcgrue/sots.git,2010-12-27 01:37:41+00:00,Saga of the Stars,0,mcgrue/sots,1199571,SystemVerilog,sots,15073,1,2022-08-31 23:43:31+00:00,[],
4,https://github.com/raysalemi/uvmprimer.git,2013-11-27 19:47:21+00:00,Contains the code examples from The UVM Primer Book sorted by chapters.,195,raysalemi/uvmprimer,14757330,SystemVerilog,uvmprimer,6045,433,2024-04-11 07:12:52+00:00,[],
5,https://github.com/VerificationExcellence/SystemVerilogReference.git,2014-04-30 00:08:05+00:00,training labs and examples,171,VerificationExcellence/SystemVerilogReference,19295560,SystemVerilog,SystemVerilogReference,50,371,2024-04-08 18:57:42+00:00,[],
6,https://github.com/VerificationExcellence/UVMReference.git,2014-07-18 15:29:45+00:00,Reference examples and short projects using UVM Methodology,148,VerificationExcellence/UVMReference,21985000,SystemVerilog,UVMReference,24,237,2024-04-01 16:34:48+00:00,[],
7,https://github.com/veripool/verilog-mode.git,2013-02-24 16:06:42+00:00,"Verilog-Mode for Emacs with Indentation, Hightlighting and AUTOs. Master repository for pushing to GNU, verilog.com and veripool.org.",88,veripool/verilog-mode,8392762,SystemVerilog,verilog-mode,3186,237,2024-04-13 15:36:26+00:00,"['verilog', 'emacs-lisp', 'verilog-mode', 'systemverilog']",https://api.github.com/licenses/gpl-3.0
8,https://github.com/cluelogic/uvm-tutorial-for-candy-lovers.git,2014-04-03 16:43:26+00:00,Source code repo for UVM Tutorial for Candy Lovers,93,cluelogic/uvm-tutorial-for-candy-lovers,18410509,SystemVerilog,uvm-tutorial-for-candy-lovers,57,162,2024-03-20 01:07:13+00:00,[],
9,https://github.com/VerificationExcellence/SystemVerilogAssertions.git,2014-06-22 05:24:17+00:00,Examples and reference for System Verilog Assertions,49,VerificationExcellence/SystemVerilogAssertions,21086331,SystemVerilog,SystemVerilogAssertions,5,81,2024-04-08 10:44:43+00:00,[],
10,https://github.com/dovstamler/uvm_agents.git,2014-05-22 19:46:23+00:00,UVM agents,35,dovstamler/uvm_agents,20074609,SystemVerilog,uvm_agents,350,69,2024-03-12 19:10:53+00:00,[],https://api.github.com/licenses/apache-2.0
11,https://github.com/swetland/zynq-sandbox.git,2014-05-12 04:40:46+00:00,a playground for xilinx zynq fpga experiments,9,swetland/zynq-sandbox,19686070,SystemVerilog,zynq-sandbox,123,47,2023-07-21 08:13:28+00:00,[],
12,https://github.com/doswellf/combinator-uvm.git,2014-04-12 01:37:11+00:00,UVM Testbench For SystemVerilog Combinator Implementation,37,doswellf/combinator-uvm,18693562,SystemVerilog,combinator-uvm,18723,44,2024-03-13 04:54:39+00:00,[],
13,https://github.com/unihd-cag/openhmc.git,2014-09-19 10:51:11+00:00,openHMC - an open source Hybrid Memory Cube Controller,11,unihd-cag/openhmc,24226543,SystemVerilog,openhmc,10156,43,2024-03-08 14:39:55+00:00,[],https://api.github.com/licenses/lgpl-3.0
14,https://github.com/luuvish/amba3-vip.git,2014-09-28 18:14:22+00:00,amba3 apb/axi vip,27,luuvish/amba3-vip,24566615,SystemVerilog,amba3-vip,314,42,2024-04-08 14:06:02+00:00,[],https://api.github.com/licenses/mit
15,https://github.com/hjking/uvm_gen.git,2013-10-31 00:29:24+00:00,UVM Generator,21,hjking/uvm_gen,14003679,SystemVerilog,uvm_gen,47,38,2024-01-12 09:51:03+00:00,"['uvm', 'vim-script']",https://api.github.com/licenses/apache-2.0
16,https://github.com/mbgh/aes128-hdl.git,2014-11-17 12:06:03+00:00,A high-throughput VHDL and SystemVerilog implementation of AES-128 including scripts for a full front-end design process.,13,mbgh/aes128-hdl,26754880,SystemVerilog,aes128-hdl,1348,35,2024-04-13 09:50:46+00:00,[],https://api.github.com/licenses/gpl-2.0
17,https://github.com/cjdrake/AES.git,2013-01-31 04:40:06+00:00,Advanced Encryption Standard (AES) SystemVerilog Core,16,cjdrake/AES,7930350,SystemVerilog,AES,42,32,2024-01-09 19:47:25+00:00,[],https://api.github.com/licenses/bsd-2-clause
18,https://github.com/bhunt2/DDR4Sim.git,2014-07-08 15:18:26+00:00,DDR4 Simulation Project in System Verilog,9,bhunt2/DDR4Sim,21617805,SystemVerilog,DDR4Sim,13328,30,2024-03-20 01:21:12+00:00,[],
19,https://github.com/chiggs/UVM.git,2014-07-11 10:13:23+00:00,Mirror of the Universal Verification Methodology from sourceforge,12,chiggs/UVM,21731933,SystemVerilog,UVM,31096,28,2023-12-21 07:39:44+00:00,[],
20,https://github.com/Poofjunior/HardwareModules.git,2014-09-28 01:35:37+00:00,A collection of portable hardware modules,10,Poofjunior/HardwareModules,24547056,SystemVerilog,HardwareModules,2041,25,2023-09-25 20:45:11+00:00,[],
21,https://github.com/nosnhojn/uvm-utest.git,2013-04-29 18:19:53+00:00,,1,nosnhojn/uvm-utest,9754865,SystemVerilog,uvm-utest,676,18,2023-04-04 02:00:06+00:00,[],
22,https://github.com/JulianKemmerer/Drexel-ECEC575.git,2014-06-17 18:50:55+00:00,,7,JulianKemmerer/Drexel-ECEC575,20935663,SystemVerilog,Drexel-ECEC575,136544,17,2024-02-19 03:56:18+00:00,[],
23,https://github.com/freecores/aes_decrypt_fpga.git,2014-07-16 20:57:26+00:00,AES Decryption Core for FPGA,5,freecores/aes_decrypt_fpga,21916916,SystemVerilog,aes_decrypt_fpga,1332,10,2023-10-26 08:43:29+00:00,[],
24,https://github.com/jkopanski/802.15.4.git,2014-10-28 11:05:42+00:00,Medium Access Control layer of 802.15.4,9,jkopanski/802.15.4,25865367,SystemVerilog,802.15.4,23456,9,2024-02-29 03:42:24+00:00,[],
25,https://github.com/freecores/i2c_master_slave_core.git,2014-07-16 21:01:39+00:00,I2C master/slave Core,4,freecores/i2c_master_slave_core,21917426,SystemVerilog,i2c_master_slave_core,1096,8,2023-10-03 09:53:38+00:00,[],
26,https://github.com/UCLONG/NetEmulation.git,2013-10-08 08:06:34+00:00,Software Simulation and Hardware Synthesis of Electrical and Optical Interconnection Networks,6,UCLONG/NetEmulation,13407258,SystemVerilog,NetEmulation,8201,7,2023-04-14 00:20:09+00:00,[],https://api.github.com/licenses/gpl-3.0
27,https://github.com/jmoles/keccak-verilog.git,2013-05-24 14:56:51+00:00,"A Verilog (specifically, System Verilog) implementation of the not-yet-finalized SHA-3 winner, Keccak.",9,jmoles/keccak-verilog,10268732,SystemVerilog,keccak-verilog,229,5,2024-01-05 07:44:30+00:00,[],https://api.github.com/licenses/mit
28,https://github.com/sidharthms/asic-edge-detector.git,2014-03-29 03:29:22+00:00,Canny Edge Detector in Verilog,1,sidharthms/asic-edge-detector,18233565,SystemVerilog,asic-edge-detector,6400,5,2022-07-05 19:55:05+00:00,[],
29,https://github.com/arunov/musk.git,2014-02-16 21:58:36+00:00,Computer Architecture course project (Stony Brook University CSE 502 Spring 2014),1,arunov/musk,16895161,SystemVerilog,musk,776,5,2024-04-03 18:25:21+00:00,[],
30,https://github.com/freecores/ahb2wishbone.git,2014-07-16 20:57:34+00:00,AHB to Wishbone Bridge,3,freecores/ahb2wishbone,21916936,SystemVerilog,ahb2wishbone,2740,5,2023-04-22 08:32:26+00:00,[],
31,https://github.com/Kchymet/Scrypt_FPGA.git,2014-11-10 23:17:52+00:00,FPGA implementation of the scrypt algorithm,3,Kchymet/Scrypt_FPGA,26460475,SystemVerilog,Scrypt_FPGA,2700,4,2023-07-11 15:54:14+00:00,[],
32,https://github.com/jeras/riscv_asm_sv.git,2014-09-14 18:54:42+00:00,RISC-V assembler/dis-assembler written in SystemVerilog,0,jeras/riscv_asm_sv,24030254,SystemVerilog,riscv_asm_sv,16,4,2020-11-18 17:55:08+00:00,[],
33,https://github.com/freecores/aes_beh_model.git,2014-07-16 20:57:23+00:00,AES SystemVerilog behavioral model,4,freecores/aes_beh_model,21916911,SystemVerilog,aes_beh_model,680,4,2023-06-19 08:13:48+00:00,[],
34,https://github.com/ppnipuna/Network_Switch.git,2014-04-05 04:11:25+00:00,SystemVerilog based verification of a network router switch on the lines of VMM,0,ppnipuna/Network_Switch,18459742,SystemVerilog,Network_Switch,916,4,2023-07-20 01:34:47+00:00,[],https://api.github.com/licenses/mit
35,https://github.com/amiq-consulting/amiq_sv_octave.git,2014-11-14 14:46:11+00:00,Examples of how to connect System Verilog with Octave,1,amiq-consulting/amiq_sv_octave,26642689,SystemVerilog,amiq_sv_octave,71,3,2022-02-18 01:37:35+00:00,[],https://api.github.com/licenses/apache-2.0
36,https://github.com/freecores/systemverilog-uart16550.git,2014-07-16 21:07:42+00:00,SystemVerilog uart16550,5,freecores/systemverilog-uart16550,21918150,SystemVerilog,systemverilog-uart16550,408,3,2023-11-25 05:55:38+00:00,[],
37,https://github.com/taichi-ishitani/sv_hackathon_2014.git,2014-10-03 10:27:14+00:00,,0,taichi-ishitani/sv_hackathon_2014,24754625,SystemVerilog,sv_hackathon_2014,5,3,2022-02-17 22:12:12+00:00,['systemverilog'],https://api.github.com/licenses/mit
38,https://github.com/pbing/dcf77_receiver.git,2012-11-14 18:55:00+00:00,DCF77 Receiver with USB interface in written in SystemVerilog,1,pbing/dcf77_receiver,6692940,SystemVerilog,dcf77_receiver,134,3,2022-07-25 00:14:02+00:00,"['systemverilog', 'fpga', 'dcf77']",
39,https://github.com/freecores/cic_core.git,2014-07-16 20:58:52+00:00,CIC-filter core,3,freecores/cic_core,21917095,SystemVerilog,cic_core,208,3,2024-01-15 07:46:57+00:00,[],
40,https://github.com/bluecmd/sim-uart.git,2014-07-14 18:32:19+00:00,Verilog UART DPI module,0,bluecmd/sim-uart,21830738,SystemVerilog,sim-uart,136,3,2023-08-11 15:06:13+00:00,[],
41,https://github.com/kouamano/SOC.git,2012-02-17 12:07:17+00:00,k-means,1,kouamano/SOC,3469591,SystemVerilog,SOC,283354,3,2022-12-30 06:54:22+00:00,[],
42,https://github.com/Aceic/BLE-VER-1.git,2014-09-09 07:03:26+00:00,BLE-Version-1,2,Aceic/BLE-VER-1,23823013,SystemVerilog,BLE-VER-1,7036,3,2022-06-05 09:58:29+00:00,[],
43,https://github.com/dlin303/MDP3.0.git,2014-04-29 21:07:28+00:00,MDP3.0 Ticker Plant Implemented for FPGAs,2,dlin303/MDP3.0,19291518,SystemVerilog,MDP3.0,288,3,2018-09-02 02:47:15+00:00,[],
44,https://github.com/freecores/qrisc32.git,2014-07-16 21:05:32+00:00,qrisc32 wishbone compatible risc core,1,freecores/qrisc32,21917887,SystemVerilog,qrisc32,224,3,2021-11-27 01:12:45+00:00,[],
45,https://github.com/wicker/Image-Processing-Pipeline.git,2013-06-08 16:40:55+00:00,Image processing operations in System Verilog and C. Functional.,4,wicker/Image-Processing-Pipeline,10571250,SystemVerilog,Image-Processing-Pipeline,14006,3,2022-07-18 08:20:54+00:00,[],
46,https://github.com/mballance/socblox.git,2013-12-06 22:35:19+00:00,Packaged open-source IP blocks and tools for easily assembling system-on-chip designs,3,mballance/socblox,14995190,SystemVerilog,socblox,4907,3,2023-01-28 19:44:28+00:00,[],
47,https://github.com/tenthousandfailures/uniquecoverage.git,2014-08-18 02:33:06+00:00,unique coverage classes,1,tenthousandfailures/uniquecoverage,23056206,SystemVerilog,uniquecoverage,1137,3,2022-10-27 10:37:51+00:00,[],https://api.github.com/licenses/gpl-2.0
48,https://github.com/nawb/MIPS-multicore-processor.git,2014-03-03 23:04:12+00:00,For Computer Architecture project.,0,nawb/MIPS-multicore-processor,17383298,SystemVerilog,MIPS-multicore-processor,955,3,2019-08-06 23:24:44+00:00,[],
49,https://github.com/freecores/wisbone_2_ahb.git,2014-07-16 21:09:32+00:00,Wishbone to AHB Bridge,5,freecores/wisbone_2_ahb,21918370,SystemVerilog,wisbone_2_ahb,2928,2,2023-07-13 08:08:46+00:00,[],
50,https://github.com/cambridgehackers/atomicc-examples.git,2014-08-15 14:57:08+00:00,,0,cambridgehackers/atomicc-examples,22993036,SystemVerilog,atomicc-examples,4187,2,2022-01-14 23:15:15+00:00,[],https://api.github.com/licenses/mit
51,https://github.com/gkaratziolas/D1_Shift_Multiplier.git,2014-11-22 10:18:52+00:00,SystemVerilog for a shift and add multiplier,0,gkaratziolas/D1_Shift_Multiplier,26995521,SystemVerilog,D1_Shift_Multiplier,6,2,2021-11-07 09:07:43+00:00,[],
52,https://github.com/ljepson74/gitplay.git,2013-10-16 04:07:17+00:00,playing with git,1,ljepson74/gitplay,13609384,SystemVerilog,gitplay,190,2,2019-06-25 12:33:45+00:00,[],
53,https://github.com/johan92/fpga-risc-16.git,2014-06-19 17:31:55+00:00,Making RISC-16 for academic purposes,0,johan92/fpga-risc-16,21009400,SystemVerilog,fpga-risc-16,172,2,2021-02-26 11:18:55+00:00,[],https://api.github.com/licenses/mit
54,https://github.com/freecores/pipelined_fixed_point_elementary_functions.git,2014-07-16 21:05:08+00:00,"Pipelined fixed point elementary functions (div, sin, cos, exp, atan2, sqrt)",1,freecores/pipelined_fixed_point_elementary_functions,21917840,SystemVerilog,pipelined_fixed_point_elementary_functions,204,2,2023-02-13 08:02:23+00:00,[],
55,https://github.com/mjftw/coursework.git,2014-10-09 14:45:11+00:00,General files,0,mjftw/coursework,24993566,SystemVerilog,coursework,235498,1,2020-04-20 22:43:46+00:00,[],
56,https://github.com/bluecmd/mexiko.git,2014-03-17 11:08:51+00:00,A high-speed network processing platform powered by OpenRISC,1,bluecmd/mexiko,17825329,SystemVerilog,mexiko,834,1,2022-01-29 23:57:46+00:00,[],
57,https://github.com/damnsavage/interconnect.git,2014-11-26 18:21:53+00:00,interconnect rtl,0,damnsavage/interconnect,27190150,SystemVerilog,interconnect,1644,1,2022-06-28 09:12:46+00:00,[],
58,https://github.com/rohitban/project3USB.git,2014-10-07 19:02:21+00:00,,0,rohitban/project3USB,24906711,SystemVerilog,project3USB,12721,1,2022-02-07 12:04:31+00:00,[],
59,https://github.com/ChidambaramR/SBTEL-X86_64.git,2014-02-08 05:02:47+00:00,Functional core for reduced X86_64,2,ChidambaramR/SBTEL-X86_64,16636428,SystemVerilog,SBTEL-X86_64,30619,1,2016-05-04 11:46:42+00:00,[],https://api.github.com/licenses/mit
60,https://github.com/cpulabs/hdl_floating_mul.git,2014-05-19 04:05:52+00:00,,1,cpulabs/hdl_floating_mul,19928777,SystemVerilog,hdl_floating_mul,192,1,2021-05-13 23:34:00+00:00,[],https://api.github.com/licenses/gpl-3.0
61,https://github.com/sidharthms/pipelined-processor.git,2014-10-19 20:12:55+00:00,,0,sidharthms/pipelined-processor,25438777,SystemVerilog,pipelined-processor,177,1,2022-07-05 19:55:37+00:00,[],
62,https://github.com/JakeStevens/Quicksilver.git,2014-10-24 03:03:56+00:00,A simple 2D accelerator designed for use as an APB peripheral,0,JakeStevens/Quicksilver,25669069,SystemVerilog,Quicksilver,1944,1,2016-12-01 09:44:24+00:00,[],
63,https://github.com/freecores/cdc_ufifo.git,2014-07-16 20:58:42+00:00,CDC micro FIFO,1,freecores/cdc_ufifo,21917076,SystemVerilog,cdc_ufifo,124,1,2021-11-27 03:01:05+00:00,[],
64,https://github.com/richallanb/9Bit-Pipelined-CPU.git,2014-09-23 22:06:29+00:00,A Pipelined 9-Bit CPU Simulation in System Verilog.,1,richallanb/9Bit-Pipelined-CPU,24391174,SystemVerilog,9Bit-Pipelined-CPU,10708,1,2019-04-05 07:07:33+00:00,[],
65,https://github.com/earvc/shader.git,2014-04-15 03:46:01+00:00,3D accelerator shader,0,earvc/shader,18786591,SystemVerilog,shader,196,1,2022-03-06 16:59:17+00:00,[],
66,https://github.com/udit-gupta/cse502.git,2014-05-12 04:29:21+00:00,In Order pipelined x86_64 emulator,2,udit-gupta/cse502,19685882,SystemVerilog,cse502,380,1,2015-02-01 11:53:32+00:00,[],
67,https://github.com/ppnipuna/Asynchronous_FIFO.git,2014-04-05 03:44:17+00:00,Design and Verification of Asynchronous FIFO,1,ppnipuna/Asynchronous_FIFO,18459367,SystemVerilog,Asynchronous_FIFO,408,1,2022-06-22 19:56:39+00:00,[],https://api.github.com/licenses/mit
68,https://github.com/dcblack/uvm_objections.git,2014-06-26 14:31:13+00:00,UVM Objection performance,0,dcblack/uvm_objections,21243568,SystemVerilog,uvm_objections,132,1,2019-05-02 16:56:44+00:00,[],
69,https://github.com/chiggs/support_tickets.git,2013-12-09 17:13:36+00:00,Cut-down testcases for various EDA vendor support tickets,0,chiggs/support_tickets,15053689,SystemVerilog,support_tickets,46,1,2016-03-03 23:21:22+00:00,[],
70,https://github.com/freecores/ds1621.git,2014-07-16 20:59:52+00:00,DS1621 model,1,freecores/ds1621,21917223,SystemVerilog,ds1621,140,1,2021-11-27 02:42:09+00:00,[],
71,https://github.com/tyxuanyuanlx/UVM.git,2014-11-15 16:37:11+00:00,,2,tyxuanyuanlx/UVM,26685963,SystemVerilog,UVM,280,1,2017-08-01 17:03:33+00:00,[],https://api.github.com/licenses/lgpl-3.0
72,https://github.com/blyste/Bomberman.git,2014-05-12 19:59:53+00:00,Bomberman on FPGA,0,blyste/Bomberman,19713250,SystemVerilog,Bomberman,2016,1,2019-04-05 20:14:52+00:00,[],
73,https://github.com/nsdeo12/axi_vip.git,2014-07-19 05:26:43+00:00,Axi VIP,0,nsdeo12/axi_vip,22002688,SystemVerilog,axi_vip,200,1,2019-02-27 06:17:47+00:00,[],
74,https://github.com/TM90/VerilogModules.git,2014-01-23 18:53:53+00:00,generic Verilog modules for reuse...,1,TM90/VerilogModules,16182063,SystemVerilog,VerilogModules,26,1,2019-11-11 15:04:23+00:00,"['generic-verilog-modules', 'verilog', 'systemverilog']",
75,https://github.com/drloggers/xbar8x8.git,2014-06-12 00:33:14+00:00,Design & Verification of 8x8 Time Space Crossbar Switch,1,drloggers/xbar8x8,20749099,SystemVerilog,xbar8x8,222,1,2020-11-15 17:47:30+00:00,[],
76,https://github.com/BenjaminSmith-cpe/Vic-1.git,2014-04-12 00:03:30+00:00,A verilog implementation of Tennenbaum's MIC-1 cpu in his textbook Advanced Computer Organization. ,0,BenjaminSmith-cpe/Vic-1,18692207,SystemVerilog,Vic-1,132,1,2022-07-05 01:04:31+00:00,[],
77,https://github.com/rcls/terpine.git,2012-10-21 22:58:31+00:00,Good when mixed with codeine,0,rcls/terpine,6326645,SystemVerilog,terpine,271,1,2020-06-17 07:10:03+00:00,[],
78,https://github.com/drloggers/xbar_Switch.git,2014-05-19 03:09:09+00:00,,0,drloggers/xbar_Switch,19927732,SystemVerilog,xbar_Switch,424,1,2022-02-18 16:48:59+00:00,[],
79,https://github.com/mmanmath/Nexys3Display.git,2014-07-13 06:35:55+00:00,VmodTFT integration with a Nexys3 FPGA board,0,mmanmath/Nexys3Display,21784569,SystemVerilog,Nexys3Display,884,1,2018-12-16 00:38:25+00:00,[],
80,https://github.com/freecores/pit.git,2014-07-16 21:05:11+00:00,Programmable Interval Timer,3,freecores/pit,21917848,SystemVerilog,pit,1540,1,2021-11-27 01:17:21+00:00,[],
81,https://github.com/jgrossmann/4340_FinalProject.git,2014-11-03 15:46:54+00:00,Computer hardware design 4x4 network on chip,0,jgrossmann/4340_FinalProject,26125781,SystemVerilog,4340_FinalProject,5892,1,2022-05-12 15:35:29+00:00,[],
82,https://github.com/freecores/gost28147.git,2014-07-16 21:01:03+00:00,GOST 28147-89 ,2,freecores/gost28147,21917357,SystemVerilog,gost28147,128,1,2021-11-27 02:27:04+00:00,[],
83,https://github.com/Gorchakov1/Mips_flag.git,2014-08-19 17:37:49+00:00,,0,Gorchakov1/Mips_flag,23119492,SystemVerilog,Mips_flag,140,0,2014-08-19 17:45:24+00:00,[],
84,https://github.com/suavesav/group_processors.git,2014-09-23 19:05:48+00:00,,0,suavesav/group_processors,24385422,SystemVerilog,group_processors,760,0,2017-12-22 20:56:54+00:00,[],
85,https://github.com/ionave/project_5.git,2014-09-29 18:51:56+00:00,project_5,0,ionave/project_5,24608376,SystemVerilog,project_5,3456,0,2014-09-30 00:52:15+00:00,[],
86,https://github.com/MacroBull/10189020-FPGA_Application_Work.git,2014-07-15 16:29:51+00:00,Work for 10189020-FPGA Application System Design,0,MacroBull/10189020-FPGA_Application_Work,21867242,SystemVerilog,10189020-FPGA_Application_Work,22704,0,2014-09-03 15:23:30+00:00,[],
87,https://github.com/Gorchakov1/Mips_sv.git,2014-08-18 17:45:21+00:00,,0,Gorchakov1/Mips_sv,23080550,SystemVerilog,Mips_sv,168,0,2014-08-18 17:47:29+00:00,[],
88,https://github.com/cms-gem-daq-project/GLIB.git,2014-10-28 12:52:44+00:00,GLIB firmware,2,cms-gem-daq-project/GLIB,25869124,SystemVerilog,GLIB,1144616,0,2023-01-28 03:32:08+00:00,[],
89,https://github.com/arsene2007/551.git,2014-11-18 21:06:31+00:00,,0,arsene2007/551,26829951,SystemVerilog,551,140,0,2014-11-18 21:15:06+00:00,[],
90,https://github.com/eozsahin/ASIC_Design.git,2014-05-19 15:33:18+00:00,ECE337 at Purdue University,1,eozsahin/ASIC_Design,19947365,SystemVerilog,ASIC_Design,1336,0,2014-05-29 04:11:37+00:00,[],
91,https://github.com/dtzeng/ldv-f14.git,2014-09-20 23:21:16+00:00,"Logic Design and Verification (18-341), Fall 2014",0,dtzeng/ldv-f14,24276992,SystemVerilog,ldv-f14,3492,0,2014-10-03 04:41:59+00:00,[],https://api.github.com/licenses/mit
92,https://github.com/Sanya2007/Clock.git,2014-08-27 16:58:19+00:00,,0,Sanya2007/Clock,23397934,SystemVerilog,Clock,148,0,2014-12-27 13:38:59+00:00,[],
93,https://github.com/jamesdi1993/arm-microprocessor.git,2014-05-02 17:21:46+00:00,A stimulation of ARM microprocessor written in System Verilog,0,jamesdi1993/arm-microprocessor,19382540,SystemVerilog,arm-microprocessor,128,0,2019-09-19 17:42:16+00:00,[],
94,https://github.com/klm2193/E155_Final_Project.git,2014-10-27 23:42:28+00:00,Microprocessor-Based Systems Final Project,0,klm2193/E155_Final_Project,25844434,SystemVerilog,E155_Final_Project,27384,0,2014-12-09 20:14:59+00:00,[],
95,https://github.com/ayeohmy/VerilogBattleship.git,2014-09-26 15:24:38+00:00,Verilog Battleship for Lab 2b (240),1,ayeohmy/VerilogBattleship,24504640,SystemVerilog,VerilogBattleship,368,0,2015-11-05 03:04:47+00:00,[],
96,https://github.com/ashuka24/e155-f2014-digital_keyboard.git,2014-10-26 22:54:40+00:00,,0,ashuka24/e155-f2014-digital_keyboard,25794436,SystemVerilog,e155-f2014-digital_keyboard,4968,0,2014-12-07 04:39:29+00:00,[],
97,https://github.com/redmanduck/narrowwell-processor.git,2014-11-01 01:11:11+00:00,The latest generation core NW Processor,0,redmanduck/narrowwell-processor,26038371,SystemVerilog,narrowwell-processor,14209,0,2017-09-08 17:53:36+00:00,[],
98,https://github.com/zakdam/enigma.git,2014-07-18 21:26:27+00:00,Enigma cryptographic machine,0,zakdam/enigma,21994945,SystemVerilog,enigma,480,0,2014-09-28 17:24:22+00:00,[],
99,https://github.com/CicyCui/Kalman-Filter.git,2014-05-28 18:24:14+00:00,Asic Kalman Filter Designed for quadcopter orientation,1,CicyCui/Kalman-Filter,20267815,SystemVerilog,Kalman-Filter,388,0,2014-05-31 04:29:59+00:00,[],
100,https://github.com/vaiganmann/conveyor.git,2014-11-22 19:41:48+00:00,,0,vaiganmann/conveyor,27010183,SystemVerilog,conveyor,524,0,2014-11-23 16:07:14+00:00,[],
101,https://github.com/redmanduck/A0-processor.git,2014-08-31 15:43:51+00:00,Processors Project for ECE437 at Purdue,0,redmanduck/A0-processor,23516846,SystemVerilog,A0-processor,8468,0,2015-09-18 11:07:25+00:00,[],
102,https://github.com/sternlabs/pulsar-fpga.git,2014-09-23 12:02:24+00:00,,0,sternlabs/pulsar-fpga,24369606,SystemVerilog,pulsar-fpga,152,0,2015-06-20 19:07:51+00:00,[],
103,https://github.com/CodaP/ECE551_Project.git,2014-11-03 16:05:11+00:00,Group Project for ECE 551,0,CodaP/ECE551_Project,26126589,SystemVerilog,ECE551_Project,544,0,2014-12-12 21:12:19+00:00,[],
104,https://github.com/pfynan/hw-svm.git,2014-11-03 16:45:39+00:00,,1,pfynan/hw-svm,26128341,SystemVerilog,hw-svm,464,0,2014-12-01 19:45:04+00:00,[],
105,https://github.com/eclark/eclib.git,2014-06-26 21:29:47+00:00,Library of components for RTL digital design,0,eclark/eclib,21255643,SystemVerilog,eclib,130,0,2014-09-04 05:54:33+00:00,[],
106,https://github.com/Kocha/systemverilog-report-package.git,2013-12-23 21:00:08+00:00,SystemVerilog Report Package,0,Kocha/systemverilog-report-package,15404515,SystemVerilog,systemverilog-report-package,2,0,2015-11-30 09:42:07+00:00,[],https://api.github.com/licenses/mit
107,https://github.com/auzyze/Vera-Learning-v1.0.git,2013-06-10 06:38:38+00:00,,0,auzyze/Vera-Learning-v1.0,10594814,SystemVerilog,Vera-Learning-v1.0,4,0,2018-04-13 06:52:39+00:00,[],
108,https://github.com/JamesHyunKim/myhdl.git,2014-11-06 19:17:28+00:00,,0,JamesHyunKim/myhdl,26285632,SystemVerilog,myhdl,2836,0,2014-11-14 00:20:31+00:00,[],https://api.github.com/licenses/gpl-3.0
109,https://github.com/melt-umn/python-silver-grammar.git,2014-03-25 14:42:11+00:00,Silver implementation for Python,0,melt-umn/python-silver-grammar,18103622,SystemVerilog,python-silver-grammar,15,0,2023-02-13 05:59:24+00:00,[],
110,https://github.com/freecores/synchronous_reset_fifo.git,2014-07-16 21:07:34+00:00,synchronous_reset_fifo with testbench,0,freecores/synchronous_reset_fifo,21918129,SystemVerilog,synchronous_reset_fifo,124,0,2014-07-17 13:49:29+00:00,[],
111,https://github.com/mtao15/iClock.git,2014-11-13 23:34:38+00:00,Not dealing with this for now,0,mtao15/iClock,26613197,SystemVerilog,iClock,1244,0,2014-12-07 12:20:38+00:00,[],
112,https://github.com/vaiganmann/traffic_light.git,2014-10-29 16:11:02+00:00,задание 2,0,vaiganmann/traffic_light,25929432,SystemVerilog,traffic_light,820,0,2014-10-29 16:11:39+00:00,[],
113,https://github.com/HanCheng/Digital_Verification_of_LC3_Mircoprocessor.git,2014-07-26 04:11:39+00:00,Using SystemVerilog to build up testbench environment to verify the functionality of LC3 mircoprocessor,0,HanCheng/Digital_Verification_of_LC3_Mircoprocessor,22278185,SystemVerilog,Digital_Verification_of_LC3_Mircoprocessor,120,0,2014-12-11 22:32:37+00:00,[],
114,https://github.com/Yanqing-He/Matrix_Vector_Multiplier.git,2014-06-27 14:01:58+00:00,,0,Yanqing-He/Matrix_Vector_Multiplier,21277638,SystemVerilog,Matrix_Vector_Multiplier,136,0,2014-12-14 21:49:27+00:00,[],
115,https://github.com/nsdeo12/eth_new.sv.git,2014-07-16 08:19:14+00:00,,0,nsdeo12/eth_new.sv,21892572,SystemVerilog,eth_new.sv,164,0,2014-07-17 01:05:04+00:00,[],https://api.github.com/licenses/mpl-2.0
116,https://github.com/johan92/fpga-quadtree.git,2014-08-27 17:38:13+00:00,,0,johan92/fpga-quadtree,23399174,SystemVerilog,fpga-quadtree,89,0,2018-04-07 20:52:02+00:00,[],https://api.github.com/licenses/mit
117,https://github.com/eldesh/uvm_study.git,2014-08-27 05:15:19+00:00,study UVM and SystemVerilog,0,eldesh/uvm_study,23377673,SystemVerilog,uvm_study,136,0,2014-08-27 05:16:12+00:00,[],
118,https://github.com/163club/cache.git,2014-05-07 21:13:11+00:00,,1,163club/cache,19550555,SystemVerilog,cache,166,0,2014-06-12 16:19:22+00:00,[],
119,https://github.com/grantgumina/337-Final-Project.git,2014-04-16 16:39:01+00:00,,0,grantgumina/337-Final-Project,18847380,SystemVerilog,337-Final-Project,1481,0,2014-06-23 15:33:14+00:00,[],
120,https://github.com/Tenchumaru/Flurbie.git,2013-12-05 01:55:49+00:00,FPGA,0,Tenchumaru/Flurbie,14941307,SystemVerilog,Flurbie,340,0,2023-01-21 19:29:40+00:00,[],https://api.github.com/licenses/gpl-3.0
121,https://github.com/cbo1618/coen207_p1_tinyALU.git,2014-10-17 21:18:41+00:00,,0,cbo1618/coen207_p1_tinyALU,25377614,SystemVerilog,coen207_p1_tinyALU,348,0,2014-11-26 00:20:08+00:00,[],
122,https://github.com/jza00425/ethernet.git,2014-10-14 18:00:39+00:00,,0,jza00425/ethernet,25219401,SystemVerilog,ethernet,672,0,2014-10-14 20:12:55+00:00,[],
123,https://github.com/BenjaminSmith-cpe/cpe142TermProject.git,2014-11-22 20:19:34+00:00,Three stage pipelined MIPS CPU in System Verilog,0,BenjaminSmith-cpe/cpe142TermProject,27011232,SystemVerilog,cpe142TermProject,4020,0,2021-01-27 21:22:03+00:00,[],
124,https://github.com/seblovett/ELEC6016.git,2014-02-15 09:31:44+00:00,,0,seblovett/ELEC6016,16859930,SystemVerilog,ELEC6016,2156,0,2015-09-29 13:06:47+00:00,[],
125,https://github.com/rfukatani/easy_uvm.git,2014-09-22 08:28:51+00:00,,0,rfukatani/easy_uvm,24320522,SystemVerilog,easy_uvm,176,0,2016-08-12 08:41:32+00:00,[],
126,https://github.com/88Fuzz/ee337project.git,2013-11-16 21:41:26+00:00,,0,88Fuzz/ee337project,14455557,SystemVerilog,ee337project,556,0,2016-12-21 06:18:45+00:00,[],
127,https://github.com/vaiganmann/serializer.git,2014-10-29 16:11:15+00:00,задание 1,0,vaiganmann/serializer,25929442,SystemVerilog,serializer,736,0,2014-10-29 16:11:35+00:00,[],
128,https://github.com/jsmonson/Homework9.git,2014-11-07 19:54:43+00:00,,0,jsmonson/Homework9,26335448,SystemVerilog,Homework9,392,0,2014-11-07 22:33:03+00:00,[],
129,https://github.com/ayeohmy/VerilogBreakout.git,2014-11-03 13:46:42+00:00,Breakout in Verilog for Lab 3b,0,ayeohmy/VerilogBreakout,26120336,SystemVerilog,VerilogBreakout,172,0,2014-11-04 21:30:40+00:00,[],
130,https://github.com/tenthousandfailures/vffmacros.git,2014-09-01 03:52:49+00:00,Verilog flip-flop macros suggestion by Chris Drake,0,tenthousandfailures/vffmacros,23530005,SystemVerilog,vffmacros,124,0,2014-09-01 03:55:12+00:00,[],
131,https://github.com/jza00425/SingleCycleARM.git,2014-10-15 21:10:58+00:00,,0,jza00425/SingleCycleARM,25273729,SystemVerilog,SingleCycleARM,700,0,2014-10-23 20:20:50+00:00,[],https://api.github.com/licenses/unlicense
132,https://github.com/pbrit/course_work32.git,2014-10-26 15:12:29+00:00,,0,pbrit/course_work32,25777571,SystemVerilog,course_work32,160,0,2014-10-26 15:13:16+00:00,[],
133,https://github.com/grantgumina/ece-437-fall-2014.git,2014-09-22 21:38:27+00:00,Purdue ECE 437 processors class,0,grantgumina/ece-437-fall-2014,24346553,SystemVerilog,ece-437-fall-2014,44384,0,2017-02-06 10:42:47+00:00,[],
134,https://github.com/zakdam/drr_scheduler.git,2014-11-03 10:02:33+00:00,,0,zakdam/drr_scheduler,26113053,SystemVerilog,drr_scheduler,132,0,2014-11-03 10:04:03+00:00,[],
135,https://github.com/ysscoding1/given.git,2014-10-24 19:03:59+00:00,Given files for ECE 411,2,ysscoding1/given,25703536,,given,128,0,2014-10-23 18:03:09+00:00,[],
136,https://github.com/davide-baldo/verilog.git,2014-08-03 17:37:01+00:00,"verilog experiments, simple CPU",0,davide-baldo/verilog,22579926,SystemVerilog,verilog,90,0,2021-11-08 07:05:43+00:00,[],
137,https://github.com/jza00425/ARM_Pipelining.git,2014-11-15 21:10:13+00:00,,0,jza00425/ARM_Pipelining,26694071,SystemVerilog,ARM_Pipelining,1000,0,2014-12-06 21:11:36+00:00,[],https://api.github.com/licenses/unlicense
138,https://github.com/aaronferrucci/dcpu16-model-SystemVerilog.git,2012-04-21 21:07:48+00:00,"Behavioral model of the DCPU-16, in SystemVerilog.",0,aaronferrucci/dcpu16-model-SystemVerilog,4099564,SystemVerilog,dcpu16-model-SystemVerilog,116,0,2018-01-31 21:49:01+00:00,[],
139,https://github.com/eclark/daedalus.git,2014-05-14 19:16:35+00:00,,0,eclark/daedalus,19792822,SystemVerilog,daedalus,176,0,2015-04-22 15:15:55+00:00,[],
140,https://github.com/oddball/genericSwitch.git,2014-01-02 19:28:42+00:00,,0,oddball/genericSwitch,15591761,SystemVerilog,genericSwitch,29,0,2017-03-23 23:00:47+00:00,[],https://api.github.com/licenses/gpl-3.0
141,https://github.com/mnicol/DigitalOscilloscope.git,2014-11-22 04:38:19+00:00,Digital Oscilloscope created for ECE 551 Digital Synthesis and Design,1,mnicol/DigitalOscilloscope,26988766,SystemVerilog,DigitalOscilloscope,571,0,2014-12-12 22:31:06+00:00,[],
142,https://github.com/vaiganmann/stat.git,2014-11-11 10:33:05+00:00,,0,vaiganmann/stat,26480352,SystemVerilog,stat,21060,0,2014-11-17 23:56:18+00:00,[],
143,https://github.com/jilikuang/CHD-lab2.git,2014-11-07 04:03:42+00:00,Lab 2 of Computer Hardware Design,0,jilikuang/CHD-lab2,26303166,SystemVerilog,CHD-lab2,136,0,2015-04-11 06:30:25+00:00,[],
144,https://github.com/lixf/341-p3.git,2014-10-08 19:59:35+00:00,USB lab,0,lixf/341-p3,24958180,SystemVerilog,341-p3,912,0,2015-08-31 02:49:00+00:00,[],
145,https://github.com/openhwgroup/cv32e40p.git,2016-02-18 18:21:33+00:00,CV32E40P is an in-order 4-stage RISC-V RV32IMFCXpulp CPU based on RI5CY from PULP-Platform,374,openhwgroup/cv32e40p,52028445,SystemVerilog,cv32e40p,11418,865,2024-04-13 18:35:18+00:00,"['riscv', 'riscv32imfc']",
146,https://github.com/lowRISC/lowrisc-chip.git,2015-03-16 10:16:28+00:00,The root repo for lowRISC project and FPGA demos.,148,lowRISC/lowrisc-chip,32316861,SystemVerilog,lowrisc-chip,5325,581,2024-04-09 04:48:55+00:00,[],
147,https://github.com/gtaylormb/opl3_fpga.git,2014-11-30 17:00:01+00:00,Reverse engineered SystemVerilog RTL version of the Yamaha OPL3 (YMF262) FM Synthesizer,43,gtaylormb/opl3_fpga,27343065,SystemVerilog,opl3_fpga,40944,339,2024-04-13 11:44:15+00:00,[],https://api.github.com/licenses/lgpl-3.0
148,https://github.com/svunit/svunit.git,2015-11-10 22:55:18+00:00,,56,svunit/svunit,45945753,SystemVerilog,svunit,3942,168,2024-04-13 05:51:35+00:00,[],https://api.github.com/licenses/apache-2.0
149,https://github.com/ClusterM/coolgirl-famicom-multicart.git,2016-01-29 14:13:20+00:00,Ultimate multigame cartridge for Nintendo Famicom,40,ClusterM/coolgirl-famicom-multicart,50666440,SystemVerilog,coolgirl-famicom-multicart,9670,159,2024-03-31 06:38:37+00:00,[],https://api.github.com/licenses/gpl-3.0
150,https://github.com/amiq-consulting/svaunit.git,2015-04-29 10:26:16+00:00,SVAUnit is an UVM compliant package that simplify the creation of stimuli/checkers for validating SystemVerilog Assertions (SVA),18,amiq-consulting/svaunit,34787526,SystemVerilog,svaunit,7474,70,2024-02-17 06:13:42+00:00,[],
151,https://github.com/amiq-consulting/amiq_apb.git,2015-01-30 14:59:15+00:00,SystemVerilog VIP for AMBA APB protocol,29,amiq-consulting/amiq_apb,30076555,SystemVerilog,amiq_apb,6347,60,2024-04-09 03:44:48+00:00,[],https://api.github.com/licenses/apache-2.0
152,https://github.com/melt-umn/silver.git,2015-08-20 23:16:30+00:00,An attribute grammar-based programming language for composable language extensions,7,melt-umn/silver,41123074,SystemVerilog,silver,28524,57,2024-04-04 18:35:48+00:00,"['silver', 'attribute-grammars', 'composable-language-extensions', 'silver-language', 'language', 'metaprogramming', 'compiler']",https://api.github.com/licenses/lgpl-3.0
153,https://github.com/johan92/fpga-hash-table.git,2015-08-04 10:16:33+00:00,Simple hash table on Verilog (SystemVerilog),24,johan92/fpga-hash-table,40177831,SystemVerilog,fpga-hash-table,146,46,2024-04-11 06:34:21+00:00,[],https://api.github.com/licenses/mit
154,https://github.com/swetland/gateware.git,2015-12-27 12:30:17+00:00,A collection of little open source FPGA hobby projects,0,swetland/gateware,48644270,SystemVerilog,gateware,263,45,2023-10-30 12:55:27+00:00,"['fpga', 'ice40', 'ecp5', 'systemverilog', 'gateware']",
155,https://github.com/accellera/uvm.git,2016-05-11 01:24:08+00:00,,22,accellera/uvm,58504437,SystemVerilog,uvm,22389,35,2024-04-03 07:54:26+00:00,[],
156,https://github.com/Poofjunior/fpga_fast_serial_sort.git,2016-01-01 08:27:28+00:00, a parallel sorting algorithm implemented in hardware that sorts data in linear time as it arrives serially,6,Poofjunior/fpga_fast_serial_sort,48873286,SystemVerilog,fpga_fast_serial_sort,152,34,2023-12-15 08:35:12+00:00,[],
157,https://github.com/tenthousandfailures/systemverilog-design-patterns.git,2016-01-01 03:40:32+00:00,,9,tenthousandfailures/systemverilog-design-patterns,48868691,SystemVerilog,systemverilog-design-patterns,40,33,2024-04-02 19:05:14+00:00,[],https://api.github.com/licenses/gpl-2.0
158,https://github.com/kaushalmodi/custom_uvm_report_server.git,2015-07-06 23:56:28+00:00,Customized UVM Report Server,7,kaushalmodi/custom_uvm_report_server,38652992,SystemVerilog,custom_uvm_report_server,434,32,2024-04-08 19:26:33+00:00,"['uvm', 'systemverilog', 'cadence', 'xcelium', 'synopsys', 'vcs']",https://api.github.com/licenses/apache-2.0
159,https://github.com/ObKo/USBCore.git,2015-03-27 10:41:47+00:00,USB Full-Speed/Hi-Speed Device Controller core for FPGA,9,ObKo/USBCore,32980784,SystemVerilog,USBCore,16190,29,2024-03-12 18:15:08+00:00,[],https://api.github.com/licenses/mit
160,https://github.com/sorgelig/ZX_Spectrum-128K_MIST.git,2015-12-15 14:13:43+00:00,ZX Spectrum 128K for MIST Board,18,sorgelig/ZX_Spectrum-128K_MIST,48047096,SystemVerilog,ZX_Spectrum-128K_MIST,6998,29,2024-01-09 02:45:34+00:00,[],https://api.github.com/licenses/gpl-2.0
161,https://github.com/muzafferkal/axi-bfm.git,2015-08-05 07:47:17+00:00,AXI3 Bus Functional Models (Initiator & Target) ,15,muzafferkal/axi-bfm,40232144,SystemVerilog,axi-bfm,13,25,2024-02-21 03:05:49+00:00,[],
162,https://github.com/pulp-platform/jtag_dpi.git,2015-10-30 15:40:51+00:00,JTAG DPI module for SystemVerilog RTL simulations,12,pulp-platform/jtag_dpi,45260126,SystemVerilog,jtag_dpi,116,24,2024-02-02 06:12:25+00:00,[],
163,https://github.com/luuvish/system-verilog-patterns.git,2015-02-08 17:52:18+00:00,SystemVerilog Design Patterns,7,luuvish/system-verilog-patterns,30499715,SystemVerilog,system-verilog-patterns,148,22,2023-09-26 06:58:54+00:00,[],
164,https://github.com/pulp-platform/axi_spi_slave.git,2016-02-18 18:21:07+00:00,,26,pulp-platform/axi_spi_slave,52028418,SystemVerilog,axi_spi_slave,46,19,2024-02-29 14:48:01+00:00,[],
165,https://github.com/mxg/svx.git,2016-03-10 14:23:00+00:00,SystemVerilog Extension Library -- a library of utilities for generic programming and increased productivity,4,mxg/svx,53590404,SystemVerilog,svx,332,18,2023-06-08 03:46:55+00:00,[],https://api.github.com/licenses/apache-2.0
166,https://github.com/brianhill11/FPGA-CNN.git,2015-12-19 23:53:56+00:00,This repo is for ECE44x (Fall2015-Spring2016),14,brianhill11/FPGA-CNN,48301272,SystemVerilog,FPGA-CNN,15865,18,2023-01-13 02:01:06+00:00,"['deep-learning', 'fpga', 'cnn']",https://api.github.com/licenses/mit
167,https://github.com/pulp-platform/axi_node.git,2016-02-18 18:20:35+00:00,AXI X-Bar,35,pulp-platform/axi_node,52028378,SystemVerilog,axi_node,191,17,2024-03-31 14:11:35+00:00,"['axi', 'systemverilog', 'asic', 'fpga']",
168,https://github.com/pulp-platform/axi_spi_master.git,2016-02-18 18:20:58+00:00,,24,pulp-platform/axi_spi_master,52028407,SystemVerilog,axi_spi_master,43,17,2024-02-29 14:47:56+00:00,[],
169,https://github.com/RoaLogic/adv_dbg_if.git,2015-11-12 13:22:41+00:00,Universal Advanced JTAG Debug Interface,11,RoaLogic/adv_dbg_if,46054275,SystemVerilog,adv_dbg_if,123,16,2024-02-02 06:13:20+00:00,[],
170,https://github.com/forever-gk/AHB-SystemVerilog.git,2015-04-05 06:07:26+00:00,,5,forever-gk/AHB-SystemVerilog,33432209,SystemVerilog,AHB-SystemVerilog,920,16,2023-11-11 04:14:44+00:00,[],
171,https://github.com/opensocdebug/osd-hw.git,2015-11-15 15:42:05+00:00,Open SoC Debug Hardware Reference Implementation,11,opensocdebug/osd-hw,46223895,SystemVerilog,osd-hw,484,16,2023-11-27 07:24:38+00:00,[],
172,https://github.com/bvnirliptha/AMBA-3-AHB--LITE-Protocol-Design-and-Verification.git,2015-12-09 19:06:52+00:00,-Designed and Verified a Bus Functional Model of AHB-LITE Protocol from scratch. -Developed Assertion based verification IP to verify the bus and check for protocol violations. -Implemented constraint randomization and OOPs verification techniques.,7,bvnirliptha/AMBA-3-AHB--LITE-Protocol-Design-and-Verification,47712651,SystemVerilog,AMBA-3-AHB--LITE-Protocol-Design-and-Verification,844,16,2024-03-17 05:29:27+00:00,[],
173,https://github.com/yuxuanZh/SystemVerilog.git,2015-01-06 06:38:48+00:00,This is a code repo for previous projects in Digital Design & Verification,10,yuxuanZh/SystemVerilog,28850385,SystemVerilog,SystemVerilog,1700,15,2024-03-21 03:48:20+00:00,[],
174,https://github.com/amiq-consulting/physical_coding_library.git,2016-02-26 11:46:25+00:00,,6,amiq-consulting/physical_coding_library,52600890,SystemVerilog,physical_coding_library,77,15,2023-07-03 08:02:40+00:00,[],
175,https://github.com/Cognoscan/AxiCores.git,2016-02-22 23:35:45+00:00,"AXI4-Compatible Verilog Cores, along with some helper modules.",2,Cognoscan/AxiCores,52314356,SystemVerilog,AxiCores,103,14,2022-07-27 23:33:22+00:00,[],https://api.github.com/licenses/apache-2.0
176,https://github.com/harpreetbhatia/sv_practice.git,2016-02-16 00:51:19+00:00,"Practice exercises for SystemVerilog, UVM ..",5,harpreetbhatia/sv_practice,51796839,SystemVerilog,sv_practice,232,14,2024-02-17 04:35:17+00:00,[],
177,https://github.com/theapi/nand2tetris_fpga.git,2015-10-02 12:35:45+00:00,nand2tetris on an fpga,2,theapi/nand2tetris_fpga,43551890,SystemVerilog,nand2tetris_fpga,1010,13,2023-10-04 16:12:47+00:00,[],https://api.github.com/licenses/mit
178,https://github.com/pulp-platform/axi2apb.git,2016-02-18 18:17:21+00:00,,19,pulp-platform/axi2apb,52028184,SystemVerilog,axi2apb,76,13,2024-03-18 06:46:07+00:00,[],
179,https://github.com/tudortimi/reflection.git,2016-02-27 21:00:26+00:00,Reflection API for SystemVerilog,2,tudortimi/reflection,52688521,SystemVerilog,reflection,112,12,2022-09-12 20:34:14+00:00,[],https://api.github.com/licenses/apache-2.0
180,https://github.com/tenthousandfailures/constraintlayering.git,2015-03-08 05:00:40+00:00,SystemVerilog Constraint Layering via Reusable Randomization Policy Classes Examples,5,tenthousandfailures/constraintlayering,31838960,SystemVerilog,constraintlayering,144,12,2024-03-16 06:48:23+00:00,[],https://api.github.com/licenses/gpl-2.0
181,https://github.com/bwitherspoon/rv32cpu.git,2015-07-23 17:20:38+00:00,A RISC-V processor,5,bwitherspoon/rv32cpu,39580917,SystemVerilog,rv32cpu,565,12,2024-02-17 14:49:11+00:00,[],https://api.github.com/licenses/isc
182,https://github.com/tudortimi/vpi.git,2016-02-27 20:49:20+00:00,SystemVerilog wrapper over the Verilog Programming Interface (VPI),3,tudortimi/vpi,52688060,SystemVerilog,vpi,73,12,2023-04-28 22:12:18+00:00,[],https://api.github.com/licenses/apache-2.0
183,https://github.com/pulp-platform/adv_dbg_if.git,2015-10-30 15:15:18+00:00,Advanced Debug Interface,16,pulp-platform/adv_dbg_if,45258555,SystemVerilog,adv_dbg_if,561,12,2023-07-21 13:31:37+00:00,[],
184,https://github.com/jsloan256/dpll.git,2015-09-22 20:26:40+00:00,"A simple SystemVerilog digital phase-locked loop based (roughly) on TI's SDLA005B application note. The design includes a SystemVerilog testbench demonstrating a full generator, driver, monitor, and scoreboard testbench environment.",3,jsloan256/dpll,42958949,SystemVerilog,dpll,80,11,2023-08-08 23:11:48+00:00,['systemverilog'],
185,https://github.com/kkudrolli/USB-Host.git,2015-01-13 01:16:26+00:00,"Contains the System Verilog description for a simplified USB host that implements the transaction, data-link, and physical layers of the bus.",2,kkudrolli/USB-Host,29165959,SystemVerilog,USB-Host,284,11,2023-12-09 07:12:59+00:00,[],
186,https://github.com/diadatp/nasti-ddrx-mc.git,2016-05-22 11:34:04+00:00,NASTI slave compliant DDRx memory controller.,1,diadatp/nasti-ddrx-mc,59408989,SystemVerilog,nasti-ddrx-mc,102,11,2022-12-27 06:21:38+00:00,[],https://api.github.com/licenses/bsd-3-clause
187,https://github.com/kinap/AES-Processor.git,2016-04-28 23:47:37+00:00,AES crypto engine written in System Verilog and emulated on the Mentor Veloce. First place winner of Mentor Graphics Need For Speed Emulation Competition 2016.,9,kinap/AES-Processor,57341021,SystemVerilog,AES-Processor,18658,11,2023-03-21 02:15:28+00:00,"['system-verilog', 'aes', 'veloce', 'fpga', 'emulation', 'cryptography']",https://api.github.com/licenses/mit
188,https://github.com/rdou/UVM-Verification-Testbench-For-FIFO.git,2016-03-21 06:09:21+00:00,A complete UVM verification testbench for FIFO,4,rdou/UVM-Verification-Testbench-For-FIFO,54364086,SystemVerilog,UVM-Verification-Testbench-For-FIFO,4,11,2024-03-14 12:01:58+00:00,[],
189,https://github.com/pulp-platform/apb_timer.git,2016-02-18 18:17:01+00:00,APB Timer Unit,21,pulp-platform/apb_timer,52028160,SystemVerilog,apb_timer,20,10,2023-11-20 17:46:57+00:00,[],
190,https://github.com/rdou/UVM-Verification-Testbench-For-SimpleBus.git,2016-04-26 07:53:13+00:00,,3,rdou/UVM-Verification-Testbench-For-SimpleBus,57108932,SystemVerilog,UVM-Verification-Testbench-For-SimpleBus,24,10,2023-12-23 17:11:37+00:00,[],
191,https://github.com/Freecellera/freecellera-uvm.git,2015-01-23 03:58:40+00:00,Freecellera fork of the Universal Verification Methodology (SystemVerilog verification library from Accellera.org),3,Freecellera/freecellera-uvm,29715691,SystemVerilog,freecellera-uvm,30054,10,2022-06-10 09:34:01+00:00,[],
192,https://github.com/amiq-consulting/cagt.git,2015-02-19 11:32:50+00:00,"Common Agent is a generic agent implemented in SystemVerilog, based on UVM methodology, which can be easily extended to create very fast an UVM based agent for any protocol.",5,amiq-consulting/cagt,31012514,SystemVerilog,cagt,1312,10,2024-03-15 16:11:55+00:00,[],https://api.github.com/licenses/apache-2.0
193,https://github.com/zstechly/systemverilog.git,2016-04-30 20:44:34+00:00,System Verilog Presentation / example code I wrote to use as a template for future test benches,4,zstechly/systemverilog,57461001,SystemVerilog,systemverilog,1242,9,2022-12-09 08:24:36+00:00,[],
194,https://github.com/drom/stack.git,2014-11-28 00:01:03+00:00,Stack machine blocks.,0,drom/stack,27245409,SystemVerilog,stack,40,9,2022-08-01 17:06:56+00:00,[],https://api.github.com/licenses/mit
195,https://github.com/pulp-platform/apb_spi_master.git,2016-02-18 18:16:53+00:00,,21,pulp-platform/apb_spi_master,52028147,SystemVerilog,apb_spi_master,19,9,2024-02-29 14:47:45+00:00,[],
196,https://github.com/GuiZhaoCodeSource/Func_Verif_MMU_Code_Source.git,2015-11-09 21:53:28+00:00,Functional Verification the MMU (Memory Management Unit) of a multiprocessor with Data Cache and Instruction Cache,2,GuiZhaoCodeSource/Func_Verif_MMU_Code_Source,45869293,SystemVerilog,Func_Verif_MMU_Code_Source,0,8,2023-10-09 09:37:09+00:00,[],
197,https://github.com/m1a1x1/Bloom_pattern_search.git,2015-07-10 14:18:17+00:00,Pattern searche based on Bloom algorithm.,2,m1a1x1/Bloom_pattern_search,38883990,SystemVerilog,Bloom_pattern_search,933,8,2023-08-02 05:53:09+00:00,[],
198,https://github.com/jeras/rp8.git,2014-12-16 20:23:56+00:00,"RISC processor 8bit (AVR ISA), RTL based on 'navre'",0,jeras/rp8,28104980,SystemVerilog,rp8,1084,7,2024-01-02 15:34:29+00:00,[],
199,https://github.com/pulp-platform/apb_i2c.git,2016-02-18 18:16:35+00:00,,16,pulp-platform/apb_i2c,52028134,SystemVerilog,apb_i2c,15,7,2022-08-07 12:06:52+00:00,[],
200,https://github.com/pulp-platform/apb_gpio.git,2016-02-18 18:16:26+00:00,,17,pulp-platform/apb_gpio,52028124,SystemVerilog,apb_gpio,105,7,2024-01-24 08:24:46+00:00,[],
201,https://github.com/tudortimi/verification-gentleman-blog-code.git,2016-02-20 08:32:18+00:00,Example code for Verification Gentleman blog,4,tudortimi/verification-gentleman-blog-code,52144150,SystemVerilog,verification-gentleman-blog-code,128,7,2024-04-10 11:54:43+00:00,[],https://api.github.com/licenses/apache-2.0
202,https://github.com/ObviouslyGreen/JZ-Wentworth-Cache-Now.git,2015-10-09 22:19:13+00:00,,2,ObviouslyGreen/JZ-Wentworth-Cache-Now,43982799,SystemVerilog,JZ-Wentworth-Cache-Now,16052,6,2019-09-12 15:15:03+00:00,[],
203,https://github.com/ericgineer/ADCinterface.git,2015-05-21 07:46:39+00:00,A Qsys project for interfacing to the BeMicro CV FPGA development board and BeScope ADC development board,2,ericgineer/ADCinterface,35998764,SystemVerilog,ADCinterface,26756,6,2021-10-29 15:15:44+00:00,[],
204,https://github.com/alexzhang007/wishbone_uvc.git,2016-02-28 15:03:02+00:00,Wishbone protocol open source universal verification component (UVC). It is easy to be used in UVM verification environment for opencpu. ,1,alexzhang007/wishbone_uvc,52726749,SystemVerilog,wishbone_uvc,34,6,2024-02-28 08:30:50+00:00,[],
205,https://github.com/emmanouil-komninos/jtag_vip_uvm.git,2015-08-28 12:04:22+00:00,,3,emmanouil-komninos/jtag_vip_uvm,41545305,SystemVerilog,jtag_vip_uvm,280,6,2023-05-02 23:06:26+00:00,[],https://api.github.com/licenses/gpl-2.0
206,https://github.com/blargony/uvm_agent_gen.git,2015-06-16 22:09:28+00:00,UVM Agent Generator,8,blargony/uvm_agent_gen,37558693,SystemVerilog,uvm_agent_gen,168,6,2022-05-12 11:14:29+00:00,[],https://api.github.com/licenses/mit
207,https://github.com/kippy620/uvm.git,2016-02-23 02:57:53+00:00,Learning uvm step by step.,0,kippy620/uvm,52324964,SystemVerilog,uvm,233,5,2023-12-20 06:54:54+00:00,[],
208,https://github.com/lowRISC/socip.git,2015-07-21 13:58:39+00:00,Collection of IP cores usable to lowRISC SoC,4,lowRISC/socip,39448509,SystemVerilog,socip,316,5,2022-03-16 23:00:12+00:00,[],
209,https://github.com/apoorvvw/ASIC-Implementation-of-2D-GPU.git,2016-04-14 16:13:33+00:00,ASIC Implementation of 2D GPU,2,apoorvvw/ASIC-Implementation-of-2D-GPU,56252049,SystemVerilog,ASIC-Implementation-of-2D-GPU,25146,5,2021-03-05 08:16:32+00:00,[],
210,https://github.com/pradyuman/aes-encryption-engine.git,2015-11-03 20:03:39+00:00,XTS-AES Hardware Encryption Engine for use in an SOC design,1,pradyuman/aes-encryption-engine,45492285,SystemVerilog,aes-encryption-engine,65,5,2024-02-13 16:31:44+00:00,[],
211,https://github.com/pulp-platform/axi_slice.git,2016-02-18 18:20:42+00:00,Pipelines the AXI path with FIFOs,14,pulp-platform/axi_slice,52028382,SystemVerilog,axi_slice,44,5,2024-03-31 14:11:35+00:00,[],
212,https://github.com/bphunter1972/hawkins.git,2015-11-18 04:31:07+00:00,An example of chained sequencers using the Hawkins Interface,0,bphunter1972/hawkins,46395237,SystemVerilog,hawkins,5917,5,2022-05-04 09:51:04+00:00,[],https://api.github.com/licenses/gpl-2.0
213,https://github.com/pulp-platform/apb_node.git,2016-05-13 15:20:23+00:00,,17,pulp-platform/apb_node,58751137,SystemVerilog,apb_node,27,5,2023-07-30 01:05:19+00:00,[],
214,https://github.com/AmeerAbdelhadi/Linear-Feedback-Shift-Register-LFSR-Counter.git,2015-05-28 00:08:33+00:00,Linear Feedback Shift Register (LFSR); A periodic counter with random count,2,AmeerAbdelhadi/Linear-Feedback-Shift-Register-LFSR-Counter,36403668,SystemVerilog,Linear-Feedback-Shift-Register-LFSR-Counter,164,5,2022-05-04 13:20:46+00:00,[],
215,https://github.com/andrewandrepowell/System-Snake.git,2016-03-18 20:31:17+00:00,"Snake game implemented in SystemVerilog, running on the Digilent Nexys DDR 4.",5,andrewandrepowell/System-Snake,54229632,SystemVerilog,System-Snake,62,5,2022-06-23 20:12:50+00:00,[],
216,https://github.com/patricksheehan/Verilog.git,2015-03-05 01:46:29+00:00,"Simulated RAM, ALU, and CPU using Verilog",3,patricksheehan/Verilog,31690038,SystemVerilog,Verilog,164,5,2023-12-20 12:30:26+00:00,[],
217,https://github.com/genrnd/ethond.git,2015-11-26 10:02:43+00:00,Altera SoC based development board with 2 GigE ports,3,genrnd/ethond,46918657,SystemVerilog,ethond,4291,5,2023-03-26 23:47:56+00:00,[],
218,https://github.com/pulp-platform/core2axi.git,2016-03-31 12:23:29+00:00,Core protocol to AXI bridge,14,pulp-platform/core2axi,55148482,SystemVerilog,core2axi,12,5,2023-07-28 10:48:43+00:00,[],
219,https://github.com/Des333/soc-fb.git,2015-08-09 22:30:17+00:00,Simple Linux Framebuffer with Altera Cyclone V SoC FPGA,1,Des333/soc-fb,40452755,SystemVerilog,soc-fb,160,5,2022-06-28 04:49:44+00:00,[],https://api.github.com/licenses/gpl-2.0
220,https://github.com/gitvcs/N-bit-Multiplier-and-Divider.git,2015-12-03 11:59:15+00:00,Synthesizable Multiplier & Divider which can perform operations on both Integer and Floating point operands ranging from 16-bits to 64-bits for each input and  the precision for a floating point number can vary from half-precision to the double precision.The code is written in System Verilog,1,gitvcs/N-bit-Multiplier-and-Divider,47329188,SystemVerilog,N-bit-Multiplier-and-Divider,17,4,2022-04-18 15:35:38+00:00,[],
221,https://github.com/pulp-platform/axi_mem_if_DP.git,2016-02-18 18:20:27+00:00,,11,pulp-platform/axi_mem_if_DP,52028369,SystemVerilog,axi_mem_if_DP,61,4,2023-10-08 09:06:32+00:00,[],
222,https://github.com/C-L-G/stream-to-file-package.git,2015-09-24 06:52:32+00:00,把数据流输出到文件,1,C-L-G/stream-to-file-package,43049989,SystemVerilog,stream-to-file-package,22,4,2022-04-08 15:31:21+00:00,[],https://api.github.com/licenses/gpl-3.0
223,https://github.com/AmeerAbdelhadi/LUT-Input-Permutations-Enumerator.git,2016-01-08 11:17:07+00:00,LUT-Input-Permutations-Enumerator; A permutations enumerator circuit based on Lehmer's code; synthesis and verification frameworks are provided,3,AmeerAbdelhadi/LUT-Input-Permutations-Enumerator,49268037,SystemVerilog,LUT-Input-Permutations-Enumerator,5429,4,2021-12-20 20:21:30+00:00,[],
224,https://github.com/scott7950/SystemVerilog_TB.git,2015-07-09 12:05:13+00:00,SystemVerilog Testbench,2,scott7950/SystemVerilog_TB,38817864,SystemVerilog,SystemVerilog_TB,108,4,2020-03-01 04:08:07+00:00,[],
225,https://github.com/asicguy/axi-bfm.git,2015-05-09 15:15:31+00:00,Automatically exported from code.google.com/p/axi-bfm,3,asicguy/axi-bfm,35333170,SystemVerilog,axi-bfm,144,4,2023-05-10 07:10:36+00:00,[],
226,https://github.com/tudortimi/prog_assert.git,2015-09-13 10:45:07+00:00,Program assertion package for SystemVerilog,1,tudortimi/prog_assert,42392309,SystemVerilog,prog_assert,111,4,2023-10-20 13:38:36+00:00,[],https://api.github.com/licenses/apache-2.0
227,https://github.com/Lianghao-Yuan/UVM-Verification-IP-for-switch.git,2015-06-26 19:17:14+00:00,A complete UVM verification IP for simple switch (router),5,Lianghao-Yuan/UVM-Verification-IP-for-switch,38129238,SystemVerilog,UVM-Verification-IP-for-switch,656,4,2023-11-22 10:19:01+00:00,[],https://api.github.com/licenses/gpl-2.0
228,https://github.com/ajaybin/APB-UART-bridge.git,2015-11-20 23:35:49+00:00,Inital Commit.,2,ajaybin/APB-UART-bridge,46592693,SystemVerilog,APB-UART-bridge,12,4,2024-01-25 07:47:23+00:00,[],
229,https://github.com/hmomkar/UVM_primer.git,2016-03-18 22:17:48+00:00,Contains UVM example from Ray salemi authored book,0,hmomkar/UVM_primer,54234722,SystemVerilog,UVM_primer,6016,4,2021-11-25 03:44:03+00:00,[],
230,https://github.com/amiq-consulting/amiq_dcr.git,2015-02-12 13:21:47+00:00,Verification Component for DCR protocol - SystemVerilog,0,amiq-consulting/amiq_dcr,30703457,SystemVerilog,amiq_dcr,4792,4,2022-02-18 01:38:05+00:00,[],https://api.github.com/licenses/apache-2.0
231,https://github.com/mballance/sv_bfms.git,2016-04-21 19:34:20+00:00,"SystemVerilog BFMs with bindings for UVM, etc",5,mballance/sv_bfms,56800655,SystemVerilog,sv_bfms,131,4,2023-06-19 08:14:57+00:00,[],https://api.github.com/licenses/apache-2.0
232,https://github.com/rdustinb/GADev.git,2015-02-25 20:55:10+00:00,Repository captures many of the FPGA Logic cores I have created,0,rdustinb/GADev,31335325,SystemVerilog,GADev,79,4,2023-09-03 03:18:13+00:00,[],https://api.github.com/licenses/cern-ohl-s-2.0
233,https://github.com/avichalkaria/Async_3D_NOC.git,2015-02-08 04:15:43+00:00,Asynchronous 3D Network on Chip with Forward Error Detection Correction,1,avichalkaria/Async_3D_NOC,30480438,SystemVerilog,Async_3D_NOC,85772,4,2023-11-02 07:26:56+00:00,[],
234,https://github.com/wallento/pmod_switchbox.git,2016-03-27 11:42:04+00:00,Pmod Switchbox,4,wallento/pmod_switchbox,54825736,SystemVerilog,pmod_switchbox,1,3,2022-05-05 06:28:00+00:00,[],
235,https://github.com/mohitgogri/Binary-Tree-Algorithm-for-System-Verilog-Classes.git,2015-12-21 20:12:39+00:00,System Verilog Class Binary Tree Algorithm code,0,mohitgogri/Binary-Tree-Algorithm-for-System-Verilog-Classes,48391869,SystemVerilog,Binary-Tree-Algorithm-for-System-Verilog-Classes,5,3,2022-11-03 07:18:39+00:00,[],
236,https://github.com/j-marjanovic/FSM-in-HW-solutions.git,2015-02-05 21:07:37+00:00,Solutions for exercises in book Finite State Machine in HW by Volnei A. Pedroni,2,j-marjanovic/FSM-in-HW-solutions,30378477,SystemVerilog,FSM-in-HW-solutions,472,3,2022-05-17 16:00:37+00:00,[],
237,https://github.com/losteiner/lsd_cv.git,2016-04-09 12:11:12+00:00,,0,losteiner/lsd_cv,55842422,SystemVerilog,lsd_cv,33,3,2020-12-19 17:41:22+00:00,[],
238,https://github.com/ameetgohil/eth-uvm.git,2016-02-05 00:29:27+00:00,,0,ameetgohil/eth-uvm,51115879,SystemVerilog,eth-uvm,8,3,2022-07-02 23:28:04+00:00,[],https://api.github.com/licenses/mit
239,https://github.com/mcai/Cozim.git,2016-01-25 03:52:34+00:00,Cozim - FPGA based Computer Architecture Simulator written in SystemVerilog HDL.,0,mcai/Cozim,50324637,SystemVerilog,Cozim,503,3,2021-04-12 02:30:46+00:00,[],
240,https://github.com/pbing/J1_WB.git,2016-01-24 10:38:27+00:00,Forth CPU J1 in SystemVerilog and Wishbone interface,2,pbing/J1_WB,50282913,SystemVerilog,J1_WB,3285,3,2024-01-18 12:04:49+00:00,"['systemverilog', 'wishbone-bus', 'wishbone', 'forth-cpu']",
241,https://github.com/jinz2014/SystemVerilog.git,2015-03-12 15:59:49+00:00,,3,jinz2014/SystemVerilog,32086379,SystemVerilog,SystemVerilog,124,3,2024-04-02 11:25:45+00:00,[],
242,https://github.com/LEAP-Core/leap-platforms-intel.git,2015-07-02 19:46:21+00:00,Platform support for Intel FPGA systems,0,LEAP-Core/leap-platforms-intel,38453463,SystemVerilog,leap-platforms-intel,2434,3,2018-10-31 20:06:32+00:00,[],
243,https://github.com/JakeStevens/RISCVBusiness.git,2016-04-29 00:06:45+00:00,,8,JakeStevens/RISCVBusiness,57341782,SystemVerilog,RISCVBusiness,918,3,2022-11-12 18:54:26+00:00,[],
244,https://github.com/ridvancelikcs/Digital-piano-in-SystemVerilog.git,2016-05-04 23:41:56+00:00,This project is compatible for BASYS3 and Beti Board. It has 4 modules (incuding top module). ,1,ridvancelikcs/Digital-piano-in-SystemVerilog,58090784,SystemVerilog,Digital-piano-in-SystemVerilog,1510,3,2022-10-26 21:08:24+00:00,[],
245,https://github.com/luadch/translations.git,2015-07-20 23:07:37+00:00,Additional Translations for Luadch,1,luadch/translations,39412844,SystemVerilog,translations,360,3,2022-03-17 23:11:39+00:00,[],
246,https://github.com/five-elephants/nux.git,2015-10-12 17:08:39+00:00,A synthesizable RISC processor implementing the Power ISA,5,five-elephants/nux,44121799,SystemVerilog,nux,3020,3,2020-11-20 21:14:54+00:00,[],
247,https://github.com/cpulabs/mist32e-cpubook.git,2016-02-10 15:19:10+00:00,MIST32E CPU Book : Example Project,1,cpulabs/mist32e-cpubook,51449153,SystemVerilog,mist32e-cpubook,288,2,2021-05-13 23:33:08+00:00,[],https://api.github.com/licenses/bsd-2-clause
248,https://github.com/DevilFruit99/HardwareGenerationTool.git,2016-01-09 21:35:18+00:00,Tool to generate synthesizable matrix-vector multiplier in System Verilog and its accompanying test bench.,1,DevilFruit99/HardwareGenerationTool,49342302,SystemVerilog,HardwareGenerationTool,440,2,2024-01-08 15:01:06+00:00,[],
249,https://github.com/rdou/UVM-Verification-Testbench-For-APB.git,2016-05-18 06:07:21+00:00,,0,rdou/UVM-Verification-Testbench-For-APB,59086822,SystemVerilog,UVM-Verification-Testbench-For-APB,3,2,2020-06-16 03:37:28+00:00,[],
250,https://github.com/vaibhavviswanathan/CGoL.git,2016-03-18 21:02:17+00:00,CMOS Game of Life,1,vaibhavviswanathan/CGoL,54231277,SystemVerilog,CGoL,2585,2,2021-03-30 22:09:14+00:00,[],
251,https://github.com/tyly324/ARC.git,2015-02-01 19:30:13+00:00,MIPS-compatible processor,1,tyly324/ARC,30156903,SystemVerilog,ARC,77652,2,2016-02-19 16:23:19+00:00,[],
252,https://github.com/matthewly/AES.git,2015-01-05 04:40:42+00:00,FPGA Application,0,matthewly/AES,28797689,SystemVerilog,AES,168,2,2020-11-19 10:37:34+00:00,[],
253,https://github.com/AeroHand/Pipelined-LC3-Processor.git,2015-04-24 11:55:30+00:00,A Fully Pipelined LC3 Processor,0,AeroHand/Pipelined-LC3-Processor,34516015,SystemVerilog,Pipelined-LC3-Processor,117,2,2018-10-22 19:44:54+00:00,[],
254,https://github.com/glk47/resim-simulating-partial-reconfiguration.git,2015-07-05 00:36:53+00:00,Automatically exported from code.google.com/p/resim-simulating-partial-reconfiguration,2,glk47/resim-simulating-partial-reconfiguration,38551915,SystemVerilog,resim-simulating-partial-reconfiguration,6485,2,2019-11-12 00:49:54+00:00,[],
255,https://github.com/shaoxq1205/LC3_verification.git,2015-11-10 03:36:59+00:00,ASIC Verification Project,0,shaoxq1205/LC3_verification,45885327,SystemVerilog,LC3_verification,2092,2,2024-03-30 03:45:45+00:00,[],
256,https://github.com/brian-rieder/EthernetSniffer.git,2015-11-03 22:55:50+00:00,Ethernet Sniffer designed for tandem Cyclone V FPGA and Intel Atom Processor (Cedarview N2600) on the Terasic DE2i-150 Rev. C board,1,brian-rieder/EthernetSniffer,45501188,SystemVerilog,EthernetSniffer,3025,2,2018-03-29 19:43:19+00:00,[],
257,https://github.com/jmacheta/Zynq-PL-GPU.git,2015-11-11 21:01:35+00:00,,0,jmacheta/Zynq-PL-GPU,46009615,SystemVerilog,Zynq-PL-GPU,33,2,2023-01-28 08:45:18+00:00,[],
258,https://github.com/kayws426/axi-bfm.git,2015-04-07 17:30:34+00:00,Automatically exported from code.google.com/p/axi-bfm,0,kayws426/axi-bfm,33557992,SystemVerilog,axi-bfm,144,2,2021-04-19 03:04:24+00:00,[],
259,https://github.com/aditn/ece447.git,2016-01-16 20:33:48+00:00,,1,aditn/ece447,49789878,SystemVerilog,ece447,12224,2,2023-03-12 18:30:10+00:00,[],
260,https://github.com/mballance/wb_sys_ip.git,2016-04-14 16:35:38+00:00,Core IP for creating wishbone systems,0,mballance/wb_sys_ip,56253477,SystemVerilog,wb_sys_ip,125,2,2019-05-23 15:52:40+00:00,[],https://api.github.com/licenses/apache-2.0
261,https://github.com/asicguy/ecc-generator.git,2015-10-14 16:48:16+00:00,Automatically exported from code.google.com/p/ecc-generator,0,asicguy/ecc-generator,44262325,SystemVerilog,ecc-generator,312,2,2022-08-24 14:28:54+00:00,[],
262,https://github.com/adsc-hls/fcuda-backend.git,2016-02-18 02:50:21+00:00,,1,adsc-hls/fcuda-backend,51973714,SystemVerilog,fcuda-backend,204,2,2022-10-17 06:14:30+00:00,[],
263,https://github.com/a145213/the-437-repo.git,2015-02-11 16:46:45+00:00,Spring 2014,0,a145213/the-437-repo,30658240,SystemVerilog,the-437-repo,1264,2,2021-03-30 13:55:03+00:00,[],
264,https://github.com/AndyShi12/verilog-fp.git,2015-03-28 22:48:56+00:00,Floating Point Co-Processor (Verilog),0,AndyShi12/verilog-fp,33053259,SystemVerilog,verilog-fp,2315,2,2018-02-20 10:52:40+00:00,[],
265,https://github.com/kcmonkey/Purdue-ECE437-Lab.git,2016-03-04 19:24:57+00:00,,4,kcmonkey/Purdue-ECE437-Lab,53160109,SystemVerilog,Purdue-ECE437-Lab,4004,2,2021-07-10 20:51:34+00:00,[],
266,https://github.com/beeflobill/uvm-1.2.git,2015-04-09 13:54:33+00:00,A copy of the release from: http://www.accellera.org/images/downloads/standards/uvm/uvm-1.2.tar.gz.  It's nice to browse code online.,3,beeflobill/uvm-1.2,33671774,SystemVerilog,uvm-1.2,2164,2,2024-01-04 11:30:49+00:00,[],https://api.github.com/licenses/apache-2.0
267,https://github.com/gldmtr/code-verilog.git,2016-03-15 23:10:17+00:00,"Verilog realisation of examles in Charles Petzold's book ""Code: The Hidden Language of Computer Hardware and Software""",0,gldmtr/code-verilog,53985112,SystemVerilog,code-verilog,11,2,2018-10-02 13:10:16+00:00,[],
268,https://github.com/purdoo/DaltonizationASIC.git,2015-04-06 13:50:15+00:00,Color-Correction ASIC Project,0,purdoo/DaltonizationASIC,33484331,SystemVerilog,DaltonizationASIC,256,2,2015-08-12 01:12:32+00:00,[],
269,https://github.com/dbretwolfe/UARTsv.git,2015-11-23 03:27:07+00:00,SystemVerilog UART,1,dbretwolfe/UARTsv,46694419,SystemVerilog,UARTsv,861,2,2019-12-19 03:19:41+00:00,[],
270,https://github.com/pulp-platform/apb_pulpino.git,2016-02-18 18:16:43+00:00,,11,pulp-platform/apb_pulpino,52028142,SystemVerilog,apb_pulpino,11,2,2022-10-13 12:15:11+00:00,[],
271,https://github.com/qwuau06/Verilog_Huffman.git,2016-03-16 01:18:42+00:00,This is the project for Purdue ECE337,0,qwuau06/Verilog_Huffman,53990510,SystemVerilog,Verilog_Huffman,4,2,2022-11-25 22:16:35+00:00,[],
272,https://github.com/williamthing/Digital-Design.git,2015-04-16 06:48:12+00:00,FPGA & System Verilog Code,0,williamthing/Digital-Design,34039120,SystemVerilog,Digital-Design,348,2,2022-05-01 01:37:26+00:00,[],
273,https://github.com/tudortimi/vgm_abstract_registry.git,2016-02-07 13:42:24+00:00,UVM extension to support registering abstract classes with the factory,2,tudortimi/vgm_abstract_registry,51248875,SystemVerilog,vgm_abstract_registry,13,2,2024-03-07 14:39:21+00:00,[],https://api.github.com/licenses/apache-2.0
274,https://github.com/mohitgogri/BusArbitrator.git,2015-12-21 19:08:15+00:00,System Verilog code with 6 masters and 7 slaves,0,mohitgogri/BusArbitrator,48389183,SystemVerilog,BusArbitrator,9,2,2022-11-03 07:19:00+00:00,[],
275,https://github.com/qiuzou/axi-bfm.git,2015-06-30 15:34:00+00:00,axi bfm,0,qiuzou/axi-bfm,38317596,SystemVerilog,axi-bfm,128,1,2021-12-24 09:33:14+00:00,[],https://api.github.com/licenses/gpl-3.0
276,https://github.com/bhunt2/ImageProcessorCore.git,2015-04-07 17:31:22+00:00,Image processor core for hardware acceleration of image processing,0,bhunt2/ImageProcessorCore,33558030,SystemVerilog,ImageProcessorCore,516,1,2020-06-20 02:45:56+00:00,[],https://api.github.com/licenses/gpl-3.0
277,https://github.com/gl-research/hdl-make.git,2016-03-06 02:46:13+00:00,"This is a mirror of the ""hdl-make"" project code hosted at CERN Open Hardware Repository. Hdlmake generates multi-purpose makefiles for HDL projects management. It supports local and remote synthesis, simulation, fetching module dependencies from repositories, creating project for multiple FPGA toolchains...",1,gl-research/hdl-make,53234259,SystemVerilog,hdl-make,2448,1,2018-06-09 20:02:58+00:00,[],https://api.github.com/licenses/gpl-3.0
278,https://github.com/Kixantrix/EE471_Lab2.git,2015-10-21 18:37:45+00:00,Lab 2 of 471,1,Kixantrix/EE471_Lab2,44696607,SystemVerilog,EE471_Lab2,219,1,2015-11-11 18:59:45+00:00,[],
279,https://github.com/PSOCER/de2i150_BFM.git,2016-04-25 14:42:11+00:00,,1,PSOCER/de2i150_BFM,57049643,SystemVerilog,de2i150_BFM,21155,1,2018-03-30 03:48:25+00:00,[],
280,https://github.com/dawood95/simd-simt-processor.git,2015-10-01 04:27:20+00:00,SIMD/SIMT Processor Design,0,dawood95/simd-simt-processor,43478367,SystemVerilog,simd-simt-processor,147,1,2019-06-18 21:10:26+00:00,[],
281,https://github.com/cjubb39/cache_tag_bank_verification.git,2015-12-04 00:53:26+00:00,,1,cjubb39/cache_tag_bank_verification,47371363,SystemVerilog,cache_tag_bank_verification,12,1,2022-06-14 10:00:03+00:00,[],
282,https://github.com/Zulu-Platform/Zulu-DataPlane.git,2015-06-04 08:39:43+00:00,DataPlane Module,0,Zulu-Platform/Zulu-DataPlane,36858560,SystemVerilog,Zulu-DataPlane,22998,1,2015-08-12 13:19:57+00:00,[],
283,https://github.com/wallento/fusesoc_cores.git,2016-03-28 12:24:58+00:00,,1,wallento/fusesoc_cores,54890507,SystemVerilog,fusesoc_cores,96,1,2022-05-05 06:25:17+00:00,[],
284,https://github.com/nqbit/fpgabits.git,2015-01-22 07:24:29+00:00,A sampling of code for FPGA projects.,1,nqbit/fpgabits,29666496,SystemVerilog,fpgabits,136,1,2017-05-15 10:29:47+00:00,[],
285,https://github.com/aggarw13/ECE337---Floating-Point-Co-Processo.git,2015-04-16 19:03:17+00:00,Team Project Respository for storing all the Verilog Code for Floating point Co-Processor ASIC Design Project,0,aggarw13/ECE337---Floating-Point-Co-Processo,34074921,SystemVerilog,ECE337---Floating-Point-Co-Processo,5348,1,2019-08-18 09:37:27+00:00,[],
286,https://github.com/shradhash/x86-superscalar-machine-with-5-stage-pipeline.git,2015-10-24 21:16:27+00:00,Implementation of Intel x86 superscalar machine with 5 stage pipeline,1,shradhash/x86-superscalar-machine-with-5-stage-pipeline,44885220,SystemVerilog,x86-superscalar-machine-with-5-stage-pipeline,252,1,2016-12-08 11:09:11+00:00,[],
287,https://github.com/gsw73/find_first_set.git,2015-10-19 21:41:54+00:00,Verilog RTL to find the first bit set in a vector.,0,gsw73/find_first_set,44565823,SystemVerilog,find_first_set,8,1,2020-06-17 23:31:41+00:00,[],
288,https://github.com/huangniuniu/learning.git,2015-10-25 06:20:53+00:00,,0,huangniuniu/learning,44898972,SystemVerilog,learning,50323,1,2017-01-16 03:44:19+00:00,[],
289,https://github.com/pulp-platform/apb2per.git,2016-05-13 15:20:58+00:00,,12,pulp-platform/apb2per,58751184,SystemVerilog,apb2per,11,1,2023-07-25 14:01:47+00:00,[],
290,https://github.com/lparkjordan/VLSIFinalProject.git,2015-03-26 22:20:02+00:00,Repository for VLSI Final Project Verilog code,0,lparkjordan/VLSIFinalProject,32954921,SystemVerilog,VLSIFinalProject,14932,1,2022-06-23 18:34:24+00:00,[],
291,https://github.com/fromGoogleCode/resim-simulating-partial-reconfiguration.git,2015-03-24 01:16:56+00:00,Automatically exported from code.google.com/p/resim-simulating-partial-reconfiguration,0,fromGoogleCode/resim-simulating-partial-reconfiguration,32768231,SystemVerilog,resim-simulating-partial-reconfiguration,6872,1,2022-05-02 19:19:47+00:00,[],
292,https://github.com/C-L-G/spi-model.git,2015-06-16 02:22:15+00:00,SPI model for similation,0,C-L-G/spi-model,37503011,SystemVerilog,spi-model,140,1,2015-06-16 05:19:45+00:00,[],
293,https://github.com/C-L-G/file-class-package.git,2015-06-17 05:44:31+00:00,图像文件读取仿真库,1,C-L-G/file-class-package,37575085,SystemVerilog,file-class-package,152,1,2021-08-08 11:33:46+00:00,[],
294,https://github.com/parth2488/UVM_PROJECT_FIFO.git,2015-07-01 02:35:25+00:00,Created repository to create testbench for FIFO using UVM,0,parth2488/UVM_PROJECT_FIFO,38344973,SystemVerilog,UVM_PROJECT_FIFO,136,1,2020-06-16 03:38:43+00:00,[],
295,https://github.com/tenthousandfailures/parameter_bind.git,2015-11-13 04:04:11+00:00,binds can inherit parameters,0,tenthousandfailures/parameter_bind,46099158,SystemVerilog,parameter_bind,0,1,2020-03-12 13:25:29+00:00,[],https://api.github.com/licenses/gpl-2.0
296,https://github.com/adamryman/fpga-vga-pong.git,2015-11-12 07:18:23+00:00,"Pong in verilog, outputting to a VGA monitor on an FPGA",0,adamryman/fpga-vga-pong,46036232,SystemVerilog,fpga-vga-pong,0,1,2018-04-08 18:01:03+00:00,[],https://api.github.com/licenses/unlicense
297,https://github.com/DavidWatkins/Chip8-SystemVerilog.git,2016-05-12 02:12:16+00:00,A Chip8 Emulator running on the Altera Cyclone V,0,DavidWatkins/Chip8-SystemVerilog,58599338,SystemVerilog,Chip8-SystemVerilog,279,1,2018-02-02 12:00:50+00:00,[],
298,https://github.com/dawood95/mips-processor.git,2015-02-09 23:29:34+00:00,ECE 437: Computer Architecture,0,dawood95/mips-processor,30564591,SystemVerilog,mips-processor,1116,1,2019-06-18 21:08:53+00:00,[],
299,https://github.com/russeree/SV_SEEDED_RANDOM_RANGE_GEN.git,2015-12-17 10:29:38+00:00,Class for random int generation from a range and seed. Simulation Only,0,russeree/SV_SEEDED_RANDOM_RANGE_GEN,48168143,SystemVerilog,SV_SEEDED_RANDOM_RANGE_GEN,1,1,2023-01-28 07:45:49+00:00,[],
300,https://github.com/pulp-platform/axi_slice_dc.git,2016-02-18 18:20:49+00:00,AXI Dual-Clock FIFO for clock domain crossings (CDC),16,pulp-platform/axi_slice_dc,52028393,SystemVerilog,axi_slice_dc,70,1,2023-01-28 12:03:43+00:00,[],
301,https://github.com/pmallya/VLSI_LAB4.git,2015-03-24 03:08:18+00:00,Verilog files for the router project,0,pmallya/VLSI_LAB4,32773089,SystemVerilog,VLSI_LAB4,316,1,2022-06-23 19:19:24+00:00,[],
302,https://github.com/stps/puzzle-and-dragons.git,2015-05-06 03:40:21+00:00,A 5-stage pipelined processor with 4-way set-associative L2 cache and memory stage leapfrogging written in SystemVerilog.,0,stps/puzzle-and-dragons,35137956,SystemVerilog,puzzle-and-dragons,324,1,2023-08-16 04:21:41+00:00,[],
303,https://github.com/jhorwitz828/MIPS-CPU.git,2015-05-12 04:57:53+00:00,Final MIPS processor created for my COMP 541 (Digital Logic) Course at UNC Chapel Hill,1,jhorwitz828/MIPS-CPU,35467763,SystemVerilog,MIPS-CPU,144,1,2018-03-07 18:03:11+00:00,[],https://api.github.com/licenses/mit
304,https://github.com/huangniuniu/huangniuniu_paper_src.git,2015-05-04 23:23:46+00:00,source code of my paper.,0,huangniuniu/huangniuniu_paper_src,35065805,SystemVerilog,huangniuniu_paper_src,762,1,2017-01-16 03:44:22+00:00,[],
305,https://github.com/jrpotter/pong.git,2015-10-01 13:56:27+00:00,Pong written with custom ALU in Artix FPGA,0,jrpotter/pong,43499372,SystemVerilog,pong,15828,1,2023-12-24 15:11:38+00:00,"['fpga', 'verilog', 'mips-assembly']",
306,https://github.com/ion-concepts/DiRT.git,2015-09-02 16:58:54+00:00,DiRT provides low level primitives to help design generic Digital Radios for ASIC and FPGA implementations.,1,ion-concepts/DiRT,41814180,SystemVerilog,DiRT,345,1,2024-03-24 08:55:56+00:00,[],
307,https://github.com/dovstamler/testbench_modules.git,2016-01-08 07:51:17+00:00,,0,dovstamler/testbench_modules,49258053,SystemVerilog,testbench_modules,7,1,2022-02-18 01:29:57+00:00,[],https://api.github.com/licenses/apache-2.0
308,https://github.com/manasks/ece_510_pre_si_val.git,2015-03-31 18:47:31+00:00,ECE 510: Pre-Silicon Validation,0,manasks/ece_510_pre_si_val,33203362,SystemVerilog,ece_510_pre_si_val,1344,1,2021-07-02 16:18:59+00:00,[],https://api.github.com/licenses/gpl-3.0
309,https://github.com/neoblizz/CPU.git,2015-03-17 19:30:30+00:00,5-cycled pipelined MIPS central processing unit (CPU).,0,neoblizz/CPU,32415374,SystemVerilog,CPU,11,1,2021-03-17 11:36:48+00:00,['systemverilog'],
310,https://github.com/andrsmllr/verilog.git,2015-05-04 20:27:05+00:00,My personal Verilog projects,1,andrsmllr/verilog,35057637,SystemVerilog,verilog,47,1,2019-03-11 18:00:10+00:00,[],
311,https://github.com/zhan1182/AES_Verilog_Chip.git,2015-04-30 20:49:42+00:00,latest version of our aes chip,0,zhan1182/AES_Verilog_Chip,34876135,SystemVerilog,AES_Verilog_Chip,322,1,2022-02-20 17:42:44+00:00,[],
312,https://github.com/zhan1442/ASIC-Design.git,2016-04-22 00:29:32+00:00,A repository for course ECE337: ASIC Design Laboratory(Spring2016). ,1,zhan1442/ASIC-Design,56813999,SystemVerilog,ASIC-Design,2934,1,2020-07-07 02:39:02+00:00,[],
313,https://github.com/kierdavis/k12a.git,2016-04-13 16:30:35+00:00,Improved redesign of K12 homebrew CPU,0,kierdavis/k12a,56168403,SystemVerilog,k12a,75,1,2023-01-28 21:17:40+00:00,[],
314,https://github.com/hrl/MIPS.git,2016-02-19 06:48:09+00:00,MIPS CPU in Verilog,0,hrl/MIPS,52067603,SystemVerilog,MIPS,63,1,2017-08-07 09:00:38+00:00,[],https://api.github.com/licenses/mit
315,https://github.com/johan92/fpga-shared-memory.git,2016-04-09 13:07:57+00:00,Verilog (SystemVerilog) implementation of shared memory for multiport systems,1,johan92/fpga-shared-memory,55844803,SystemVerilog,fpga-shared-memory,5,1,2022-09-30 07:38:14+00:00,[],https://api.github.com/licenses/mit
316,https://github.com/gsw73/async_fifo.git,2015-10-05 01:02:55+00:00,Asynchronous FIFO using flop-based memory with one cycle read latency.,0,gsw73/async_fifo,43659161,SystemVerilog,async_fifo,12,1,2022-01-28 16:15:12+00:00,[],
317,https://github.com/karlshi419/uvm.git,2015-02-27 17:13:48+00:00,,0,karlshi419/uvm,31430136,SystemVerilog,uvm,152,1,2022-06-05 08:53:29+00:00,[],
318,https://github.com/mballance/std_protocol_if.git,2016-04-21 19:01:17+00:00,"Provides SystemVerilog interface definitions for standard protocols, such as AXI4, Wishbone, etc",1,mballance/std_protocol_if,56798688,SystemVerilog,std_protocol_if,26,1,2019-05-23 15:51:19+00:00,[],https://api.github.com/licenses/apache-2.0
319,https://github.com/mvivek16/UVM-Examples.git,2015-06-16 20:13:40+00:00,Examples from Verification academy,0,mvivek16/UVM-Examples,37553565,SystemVerilog,UVM-Examples,136,1,2020-11-28 09:59:23+00:00,[],
320,https://github.com/indianabutts/elevator_control.git,2015-09-02 05:56:29+00:00,,1,indianabutts/elevator_control,41782838,SystemVerilog,elevator_control,344,1,2016-05-01 12:37:26+00:00,[],
321,https://github.com/pbing/CORDIC.git,2016-05-14 09:15:26+00:00,Synthesizeable CORDIC processor in SystemVerilog.,0,pbing/CORDIC,58799450,SystemVerilog,CORDIC,26,1,2023-08-11 05:26:12+00:00,"['systemverilog', 'cordic-algorithm']",
322,https://github.com/pulp-platform/apb_fll_if.git,2016-02-23 11:42:48+00:00,Control interface for FLL,11,pulp-platform/apb_fll_if,52354789,SystemVerilog,apb_fll_if,29,1,2022-12-04 20:00:25+00:00,"['apb-fll', 'systemverilog-hdl']",
323,https://github.com/KennethWilke/shift-register.git,2016-03-02 21:27:44+00:00,My systemverilog implementation of a shift register,0,KennethWilke/shift-register,52997705,SystemVerilog,shift-register,3,1,2020-07-31 09:16:18+00:00,[],https://api.github.com/licenses/isc
324,https://github.com/keikurausu/ECE-385-FPGA-Final-Project.git,2015-12-06 02:41:49+00:00,,0,keikurausu/ECE-385-FPGA-Final-Project,47481169,SystemVerilog,ECE-385-FPGA-Final-Project,997,1,2015-12-06 03:11:20+00:00,[],
325,https://github.com/jkff90/verification.git,2015-11-08 15:44:58+00:00,verification,0,jkff90/verification,45786803,SystemVerilog,verification,4700,1,2022-09-15 07:20:06+00:00,[],https://api.github.com/licenses/gpl-3.0
326,https://github.com/bphunter1972/AppendixA.git,2015-11-18 05:33:42+00:00,All of the code examples from Appendix A,0,bphunter1972/AppendixA,46397571,SystemVerilog,AppendixA,34,1,2018-10-12 21:28:43+00:00,[],https://api.github.com/licenses/gpl-2.0
327,https://github.com/robjustinwagner/WISC-S15.git,2015-02-05 01:16:13+00:00,"A simple, but powerful, 16-bit computer with a load/store architecture engineered in Verilog for ECE552.",0,robjustinwagner/WISC-S15,30330717,SystemVerilog,WISC-S15,37332,1,2019-09-05 06:03:11+00:00,[],
328,https://github.com/rishinatah/On-Chip-Interconnection-Network-VHDL-.git,2015-02-22 02:44:42+00:00,,0,rishinatah/On-Chip-Interconnection-Network-VHDL-,31150011,SystemVerilog,On-Chip-Interconnection-Network-VHDL-,1176,1,2021-06-09 06:20:01+00:00,[],
329,https://github.com/mattwhiteside/PseudoLRUCache.git,2015-12-11 21:06:09+00:00,A parametrizable N-way associative cache memory that uses the clock algorithm to approximate a least recently used replacement policy.,0,mattwhiteside/PseudoLRUCache,47851044,SystemVerilog,PseudoLRUCache,252,1,2021-03-09 08:20:09+00:00,[],
330,https://github.com/hassyy/systemverilog-uvm.git,2015-11-08 23:46:24+00:00,,0,hassyy/systemverilog-uvm,45804591,SystemVerilog,systemverilog-uvm,1764,1,2021-03-01 07:11:44+00:00,[],https://api.github.com/licenses/apache-2.0
331,https://github.com/xixizai/gh01-Graduation.git,2016-05-10 06:36:34+00:00,,0,xixizai/gh01-Graduation,58435983,SystemVerilog,gh01-Graduation,43885,1,2016-06-17 04:57:15+00:00,[],
332,https://github.com/kevinhly01/ECE385-Final-Project.git,2015-07-01 23:57:34+00:00,Ece 385 Final Project,0,kevinhly01/ECE385-Final-Project,38401215,SystemVerilog,ECE385-Final-Project,20360,1,2018-09-20 19:22:26+00:00,[],
333,https://github.com/Hylian/bcrypt_sv.git,2016-01-27 22:37:19+00:00,verilog for a bcrypt asic,1,Hylian/bcrypt_sv,50543015,SystemVerilog,bcrypt_sv,16,1,2017-12-18 20:53:01+00:00,[],
334,https://github.com/wallento/mgpio.git,2016-03-29 15:12:36+00:00,Multi-bank General Purpose I/O,0,wallento/mgpio,54986170,SystemVerilog,mgpio,2,1,2022-05-05 06:27:44+00:00,[],
335,https://github.com/startupit69/System-Verilog.git,2016-02-11 00:17:36+00:00,,0,startupit69/System-Verilog,51483404,SystemVerilog,System-Verilog,25400,1,2017-10-13 03:01:05+00:00,[],
336,https://github.com/to92me/AXI_verification_env.git,2015-08-02 11:28:35+00:00,,0,to92me/AXI_verification_env,40077387,SystemVerilog,AXI_verification_env,2322,1,2023-04-03 19:44:24+00:00,[],
337,https://github.com/johan92/fpga-sort-engine.git,2015-05-16 11:35:00+00:00,Simple sort engine on Verilog. ,0,johan92/fpga-sort-engine,35721306,SystemVerilog,fpga-sort-engine,236,1,2018-05-03 16:23:19+00:00,[],https://api.github.com/licenses/gpl-2.0
338,https://github.com/pulp-platform/apb_event_unit.git,2016-02-18 18:16:10+00:00,,12,pulp-platform/apb_event_unit,52028110,SystemVerilog,apb_event_unit,30,1,2023-07-25 14:00:20+00:00,[],
339,https://github.com/jfzazo/circular_buffer.git,2016-03-02 11:56:36+00:00,A circular buffer implemented as an interface in system verilog,0,jfzazo/circular_buffer,52959228,SystemVerilog,circular_buffer,5,1,2018-11-22 15:52:07+00:00,[],https://api.github.com/licenses/apache-2.0
340,https://github.com/muzafferkal/shortreal.git,2015-09-13 15:49:10+00:00,simple shortreal to bits (and vice versa) conversion functions,0,muzafferkal/shortreal,42401886,SystemVerilog,shortreal,108,1,2022-02-18 19:58:23+00:00,[],
341,https://github.com/kwagyeman/svnet.git,2015-11-18 02:23:25+00:00,System Verilog Convolutional Neural Network,3,kwagyeman/svnet,46389471,SystemVerilog,svnet,30,1,2016-12-12 01:12:17+00:00,[],https://api.github.com/licenses/gpl-3.0
342,https://github.com/niletronics/Spring2015.git,2015-04-04 20:09:52+00:00,"My very own repo for Spring2015, contains homeworks for SystemVerilog ECE571 and Presilicon",0,niletronics/Spring2015,33418629,SystemVerilog,Spring2015,3300,0,2018-11-24 18:33:59+00:00,[],
343,https://github.com/steven008/CSE_141L_Lab3_Pipelined_Core.git,2015-05-19 20:46:28+00:00,,0,steven008/CSE_141L_Lab3_Pipelined_Core,35907608,SystemVerilog,CSE_141L_Lab3_Pipelined_Core,1284,0,2015-05-19 20:59:08+00:00,[],
344,https://github.com/clemon/fuzzy-computing-machine.git,2015-02-04 03:45:13+00:00,,0,clemon/fuzzy-computing-machine,30279986,SystemVerilog,fuzzy-computing-machine,3836,0,2015-03-14 02:54:45+00:00,[],
345,https://github.com/haymh/5-stages-pipeline.git,2015-03-04 09:08:03+00:00,Five stages pipeline Vanilla processor,0,haymh/5-stages-pipeline,31647860,SystemVerilog,5-stages-pipeline,37488,0,2015-03-08 14:56:58+00:00,[],
346,https://github.com/ajitpunj/181-lab-3.git,2015-01-25 00:48:40+00:00,,0,ajitpunj/181-lab-3,29797599,SystemVerilog,181-lab-3,38168,0,2015-01-25 00:51:05+00:00,[],
347,https://github.com/JKcompute/ECE411_lc3b.git,2015-08-27 21:45:07+00:00,"The series of MPs are a walk though of the creation and (some) design of the Little Computer 3b (lc3b) microprocessor, with a level 1, 2-way set associative cache, using a LRU write-back eviction policy.",0,JKcompute/ECE411_lc3b,41512935,SystemVerilog,ECE411_lc3b,16240,0,2015-10-24 04:59:38+00:00,[],
348,https://github.com/scott7950/systemverilog_practice.git,2015-08-04 14:17:23+00:00,SystemVerilog practice,0,scott7950/systemverilog_practice,40188952,SystemVerilog,systemverilog_practice,9,0,2017-12-20 19:36:21+00:00,[],
349,https://github.com/thanhmaikmt/brazil-ip-uefs.git,2015-08-11 07:15:58+00:00,Automatically exported from code.google.com/p/brazil-ip-uefs,0,thanhmaikmt/brazil-ip-uefs,40527403,SystemVerilog,brazil-ip-uefs,20872,0,2015-08-11 07:17:04+00:00,[],
350,https://github.com/tenthousandfailures/dotstar.git,2015-07-19 05:38:12+00:00,examples of different port connections,0,tenthousandfailures/dotstar,39323716,SystemVerilog,dotstar,168,0,2015-07-19 05:52:10+00:00,[],https://api.github.com/licenses/gpl-2.0
351,https://github.com/sa-akhavani/dld-ca2.git,2016-01-12 09:29:12+00:00,,0,sa-akhavani/dld-ca2,49489292,SystemVerilog,dld-ca2,59,0,2016-01-12 09:34:23+00:00,[],
352,https://github.com/cgxy1995/Dual-core-CPU.git,2016-02-14 07:46:09+00:00,Dual core CPU in verilog,0,cgxy1995/Dual-core-CPU,51685156,SystemVerilog,Dual-core-CPU,1221,0,2016-02-14 07:57:03+00:00,[],
353,https://github.com/garlapatirahul/APB_Project.git,2016-02-24 22:34:03+00:00,Just another repository,0,garlapatirahul/APB_Project,52479357,SystemVerilog,APB_Project,9,0,2016-06-09 21:11:58+00:00,[],
354,https://github.com/mballance/sve_templates.git,2016-04-18 16:24:12+00:00,Collection of templates for use within SVEditor,0,mballance/sve_templates,56523620,SystemVerilog,sve_templates,13,0,2016-12-05 18:36:53+00:00,[],https://api.github.com/licenses/epl-1.0
355,https://github.com/rishabv90/Image-Cartoonifier-Verilog-.git,2016-05-02 14:54:57+00:00,"Team project. The program consists of various modules. Overall, the purpose of the project was to cartoonify images and display them via VGA on a monitor.",0,rishabv90/Image-Cartoonifier-Verilog-,57897709,SystemVerilog,Image-Cartoonifier-Verilog-,64,0,2019-11-06 22:40:54+00:00,[],
356,https://github.com/henriquegrando/CSEE4840_Game_Logic.git,2016-04-07 22:30:34+00:00,Final project for undergrad Embedded Systems course.,1,henriquegrando/CSEE4840_Game_Logic,55732454,SystemVerilog,CSEE4840_Game_Logic,119,0,2017-02-07 20:13:04+00:00,[],
357,https://github.com/gsw73/ffs_arbiter.git,2015-10-24 02:35:40+00:00,Implements round-robin arbiter using find-first-set logic.,0,gsw73/ffs_arbiter,44849131,SystemVerilog,ffs_arbiter,12,0,2020-06-17 23:42:13+00:00,[],
358,https://github.com/katmtz/NoC.git,2015-10-11 20:59:38+00:00,network on chip - 18-341,0,katmtz/NoC,44069505,SystemVerilog,NoC,135,0,2015-10-26 01:51:33+00:00,[],
359,https://github.com/soofatt/SD_Card.git,2015-09-10 09:31:36+00:00,FYP SD Card verilog code,1,soofatt/SD_Card,42235409,SystemVerilog,SD_Card,9800,0,2021-12-18 17:06:39+00:00,[],
360,https://github.com/dherna2/Cache_NDS.git,2016-05-14 19:47:27+00:00,single level cache simulator,0,dherna2/Cache_NDS,58827014,SystemVerilog,Cache_NDS,144,0,2016-05-23 13:51:59+00:00,[],
361,https://github.com/kaiserhaz/Verilog.git,2016-01-14 02:53:22+00:00,Verilog projects and exercises,0,kaiserhaz/Verilog,49618229,SystemVerilog,Verilog,2979,0,2016-01-14 02:58:05+00:00,[],
362,https://github.com/scott7950/sv_lab.git,2015-11-16 00:30:59+00:00,sv lab,0,scott7950/sv_lab,46242706,SystemVerilog,sv_lab,30,0,2015-11-16 00:31:09+00:00,[],
363,https://github.com/marklin23/Verilog.git,2015-10-02 05:47:07+00:00,,0,marklin23/Verilog,43537699,SystemVerilog,Verilog,71319,0,2019-04-09 05:35:05+00:00,[],
364,https://github.com/pfj1993/MIPSCPU.git,2015-09-17 00:43:38+00:00,ECE437,0,pfj1993/MIPSCPU,42622812,SystemVerilog,MIPSCPU,520,0,2018-05-28 21:17:33+00:00,[],
365,https://github.com/crysisfair/asyn_sim.git,2015-09-19 12:38:47+00:00,,0,crysisfair/asyn_sim,42772228,SystemVerilog,asyn_sim,144,0,2015-09-19 13:17:51+00:00,[],https://api.github.com/licenses/mit
366,https://github.com/JEDelanois/411_Timing_Tut.git,2015-12-17 18:49:12+00:00,tutorial for timing anaylysis,0,JEDelanois/411_Timing_Tut,48192242,SystemVerilog,411_Timing_Tut,7,0,2015-12-17 19:39:26+00:00,[],
367,https://github.com/lewis6991/picoMips.git,2015-02-16 14:53:42+00:00,picoMips implementation,0,lewis6991/picoMips,30872816,SystemVerilog,picoMips,296,0,2024-03-11 18:30:47+00:00,[],
368,https://github.com/geckay/ecc-generator.git,2015-04-23 01:45:52+00:00,Automatically exported from code.google.com/p/ecc-generator,0,geckay/ecc-generator,34426959,SystemVerilog,ecc-generator,304,0,2015-04-23 01:46:32+00:00,[],
369,https://github.com/wrifier/logger-a-verification-component.git,2015-05-02 03:28:09+00:00,Automatically exported from code.google.com/p/logger-a-verification-component,1,wrifier/logger-a-verification-component,34934317,SystemVerilog,logger-a-verification-component,1224,0,2015-05-02 03:28:48+00:00,[],
370,https://github.com/johan92/fpga-multiflow-pkt-gen.git,2015-08-15 19:23:35+00:00,Try to implement multiflow packet generator with various rate settings,0,johan92/fpga-multiflow-pkt-gen,40780151,SystemVerilog,fpga-multiflow-pkt-gen,176,0,2015-08-15 21:54:00+00:00,[],https://api.github.com/licenses/mit
371,https://github.com/ericmeyers12/FPGA_Frogger.git,2016-02-04 02:02:15+00:00,Frogger developed for an Altera DE2-115 FPGA board interfacing with a NIOS-II Processor for USB-Keyboard input.,0,ericmeyers12/FPGA_Frogger,51045387,SystemVerilog,FPGA_Frogger,567712,0,2022-03-21 19:03:21+00:00,[],
372,https://github.com/drdmello/UVM-SBT-Example.git,2016-01-24 21:09:11+00:00,Example UVM Testbench (SBT Router DUT),0,drdmello/UVM-SBT-Example,50308359,SystemVerilog,UVM-SBT-Example,36,0,2016-01-24 21:09:28+00:00,[],
373,https://github.com/xiaoqiangzhao/jay_uvm.git,2016-04-25 06:17:07+00:00,,0,xiaoqiangzhao/jay_uvm,57016421,SystemVerilog,jay_uvm,6365,0,2016-04-25 07:57:19+00:00,[],
374,https://github.com/AlphaLambdaMuPi/dclab-lab1.git,2015-09-19 17:08:57+00:00,Project of DCLab lab1,0,AlphaLambdaMuPi/dclab-lab1,42781925,SystemVerilog,dclab-lab1,5964,0,2015-09-19 17:14:07+00:00,[],
375,https://github.com/ZHOUJiemin/Async-Fifo-RTL.git,2015-09-08 13:52:06+00:00,Trying to build a simple async fifo model,0,ZHOUJiemin/Async-Fifo-RTL,42115213,SystemVerilog,Async-Fifo-RTL,145,0,2015-09-14 13:10:01+00:00,[],
376,https://github.com/jfzazo/pcap2hwgen.git,2015-08-31 09:05:41+00:00,This projects has the main aim of providing an HDL wrapper so an online conversion between PCAP format and hwgen can be done inside the reconfigurable platform..,0,jfzazo/pcap2hwgen,41666314,SystemVerilog,pcap2hwgen,196,0,2015-09-23 06:14:07+00:00,[],https://api.github.com/licenses/gpl-2.0
377,https://github.com/ccheng32/ECE385_project.git,2015-12-01 02:12:47+00:00,Edge detection,0,ccheng32/ECE385_project,47159464,SystemVerilog,ECE385_project,18,0,2015-12-01 02:18:15+00:00,[],
378,https://github.com/Thomas-Kuhn/551_Project.git,2015-11-30 17:01:15+00:00,,0,Thomas-Kuhn/551_Project,47133180,SystemVerilog,551_Project,1556,0,2015-11-30 17:45:49+00:00,[],
379,https://github.com/afisher92/Slide-Potentiometer-Interface.git,2015-11-18 17:19:36+00:00,ECE 551 Hw 5 problem 2,1,afisher92/Slide-Potentiometer-Interface,46434982,SystemVerilog,Slide-Potentiometer-Interface,12,0,2015-11-18 17:21:28+00:00,[],
380,https://github.com/manasks/systemverilog.git,2015-06-15 04:56:40+00:00,Introduction to System Verilog,1,manasks/systemverilog,37444377,SystemVerilog,systemverilog,160,0,2015-06-23 03:27:41+00:00,[],https://api.github.com/licenses/gpl-3.0
381,https://github.com/kulkrohit/cashew.git,2015-05-11 05:39:57+00:00,,0,kulkrohit/cashew,35404413,SystemVerilog,cashew,5556,0,2015-05-11 05:48:23+00:00,[],
382,https://github.com/fzaim/CollegeProjects.git,2015-06-29 23:35:31+00:00,College Code Samples,0,fzaim/CollegeProjects,38276807,SystemVerilog,CollegeProjects,192,0,2015-06-30 09:03:50+00:00,[],
383,https://github.com/Cirrith/ECE_551.git,2016-03-28 14:48:38+00:00,,0,Cirrith/ECE_551,54899440,SystemVerilog,ECE_551,35844,0,2018-03-20 20:34:02+00:00,[],
384,https://github.com/minkeys/CS141L.git,2015-02-03 18:58:05+00:00,Project 2 for CS141L,0,minkeys/CS141L,30259115,SystemVerilog,CS141L,20268,0,2015-03-18 21:07:42+00:00,[],
385,https://github.com/MateusDantas/MipsPipelined.git,2014-12-07 22:37:00+00:00,MIPS 32bit processor pipelined with full Hazard Handling.,0,MateusDantas/MipsPipelined,27687562,SystemVerilog,MipsPipelined,172,0,2017-08-25 07:33:40+00:00,[],
386,https://github.com/tyly324/bit-serial.git,2015-03-06 15:55:55+00:00,,0,tyly324/bit-serial,31776692,SystemVerilog,bit-serial,8370,0,2016-02-19 16:26:23+00:00,[],
387,https://github.com/ghraelo/D4.git,2015-03-02 17:48:33+00:00,D4 project,0,ghraelo/D4,31553945,SystemVerilog,D4,7388,0,2015-03-02 18:04:03+00:00,[],
388,https://github.com/a5teri5m/vivado_dpic_axi4lite_mst.git,2015-03-14 00:16:21+00:00,,1,a5teri5m/vivado_dpic_axi4lite_mst,32188021,SystemVerilog,vivado_dpic_axi4lite_mst,108,0,2019-08-10 13:01:10+00:00,[],
389,https://github.com/zoner16/USB-Fall-2015.git,2015-10-24 20:56:52+00:00,,0,zoner16/USB-Fall-2015,44884590,SystemVerilog,USB-Fall-2015,1660,0,2015-11-05 03:33:09+00:00,[],
390,https://github.com/kkudrolli/FPGA-Typewriter.git,2016-01-12 06:36:16+00:00,The source code for an FPGA typewriter. Made during Build18 2016 at Carnegie Mellon University.,1,kkudrolli/FPGA-Typewriter,49480261,SystemVerilog,FPGA-Typewriter,12,0,2016-01-12 06:41:00+00:00,[],
391,https://github.com/eeshanl/MorseCode.git,2015-04-04 03:34:53+00:00,,0,eeshanl/MorseCode,33393073,SystemVerilog,MorseCode,8672,0,2015-04-04 03:42:10+00:00,[],
392,https://github.com/morilab/kataru1506.git,2015-06-16 15:48:02+00:00,RTLを語る会(9)用資料,0,morilab/kataru1506,37539924,SystemVerilog,kataru1506,2284,0,2015-06-16 19:41:24+00:00,[],
393,https://github.com/mantrarush/Altera-DE-2.git,2014-12-11 20:46:55+00:00,Mega Man final ,1,mantrarush/Altera-DE-2,27890954,SystemVerilog,Altera-DE-2,164,0,2015-04-02 07:11:46+00:00,[],
394,https://github.com/pwlong/apples.git,2015-04-01 03:22:56+00:00,,0,pwlong/apples,33224347,SystemVerilog,apples,216,0,2015-04-16 16:35:13+00:00,[],
395,https://github.com/jdcronk/ECE5752.git,2015-03-18 23:50:12+00:00,Final project for ECE5752,0,jdcronk/ECE5752,32490580,SystemVerilog,ECE5752,270,0,2015-04-23 02:04:52+00:00,[],
396,https://github.com/Harleyzheng/Bomberman_on_FPGA.git,2015-07-04 02:21:14+00:00,,0,Harleyzheng/Bomberman_on_FPGA,38518392,SystemVerilog,Bomberman_on_FPGA,67436,0,2015-07-04 19:01:32+00:00,[],
397,https://github.com/arnabd88/Interconnect.git,2015-12-17 02:43:53+00:00,,0,arnabd88/Interconnect,48148188,SystemVerilog,Interconnect,1493,0,2015-12-17 02:45:22+00:00,[],
398,https://github.com/Hylian/341USB.git,2015-10-22 17:06:31+00:00,,0,Hylian/341USB,44760450,SystemVerilog,341USB,3540,0,2018-07-29 20:00:43+00:00,[],
399,https://github.com/JEDelanois/ECE411project.git,2015-10-18 16:48:50+00:00,Electric E Money Gang final project!!,0,JEDelanois/ECE411project,44486842,SystemVerilog,ECE411project,3598,0,2015-10-24 01:13:54+00:00,[],
400,https://github.com/ejsullivan/ECE551-Digital-Design.git,2016-05-11 22:15:32+00:00,,1,ejsullivan/ECE551-Digital-Design,58586196,SystemVerilog,ECE551-Digital-Design,616,0,2016-09-10 03:13:24+00:00,[],
401,https://github.com/uarc/core0.git,2016-03-29 22:06:15+00:00,The standard general purpose highly instruction-dense stack machine of UARC,0,uarc/core0,55013690,SystemVerilog,core0,128,0,2016-03-29 22:11:52+00:00,[],https://api.github.com/licenses/mpl-2.0
402,https://github.com/tyler-travis/ECE6930_PUFs.git,2016-04-06 17:37:13+00:00,PUF secret key generation,1,tyler-travis/ECE6930_PUFs,55627262,SystemVerilog,ECE6930_PUFs,7521,0,2016-04-18 15:57:48+00:00,[],
403,https://github.com/tingzhi/fpga.git,2016-04-23 02:15:32+00:00,,0,tingzhi/fpga,56895734,SystemVerilog,fpga,39,0,2016-04-23 02:30:41+00:00,[],
404,https://github.com/neilyo94/mario_FPGA.git,2016-04-15 15:58:35+00:00,Basic Mario game functionality running on Altera FPGA board,0,neilyo94/mario_FPGA,56332432,SystemVerilog,mario_FPGA,764,0,2016-10-04 22:41:30+00:00,[],
405,https://github.com/jiangcx009/asic.git,2016-04-17 09:20:13+00:00,top level directory of asic,0,jiangcx009/asic,56428454,SystemVerilog,asic,36,0,2016-04-17 09:59:16+00:00,[],
406,https://github.com/We-Can-Apply-FPGA/Lab1.git,2015-09-22 11:46:40+00:00,,0,We-Can-Apply-FPGA/Lab1,42930433,SystemVerilog,Lab1,180,0,2015-09-22 11:48:07+00:00,[],
407,https://github.com/carnaval/browbeaten.git,2015-09-06 19:08:58+00:00,,0,carnaval/browbeaten,42015340,SystemVerilog,browbeaten,144,0,2015-09-19 12:01:25+00:00,[],
408,https://github.com/menete/FPGA-Tutorials.git,2015-12-30 06:15:20+00:00,Simple examples for Terasic DE-0 Nano and DE-0 CV Evaluation Board,0,menete/FPGA-Tutorials,48785354,SystemVerilog,FPGA-Tutorials,7,0,2015-12-30 15:48:39+00:00,[],https://api.github.com/licenses/mit
409,https://github.com/Gorchakov1/pkt_stat.git,2015-06-18 11:57:09+00:00,"The module, that stores statistics on flows.",0,Gorchakov1/pkt_stat,37656796,SystemVerilog,pkt_stat,120,0,2015-06-18 12:05:44+00:00,[],
410,https://github.com/Gorchakov1/packet_statistic.git,2015-06-18 13:15:30+00:00,Packet statistics,0,Gorchakov1/packet_statistic,37660402,SystemVerilog,packet_statistic,152,0,2015-06-18 13:15:39+00:00,[],
411,https://github.com/scott7950/UVM_TB.git,2015-07-09 12:07:51+00:00,UVM Testbench,0,scott7950/UVM_TB,38817976,SystemVerilog,UVM_TB,116,0,2015-07-09 12:07:58+00:00,[],
412,https://github.com/morilab/Jenkins_JUnitReport_SV_Server.git,2015-05-14 14:52:45+00:00,"OVM/UVMからJenkinsの""JUnitテスト結果の集計""用XMLを出力するReportServer",2,morilab/Jenkins_JUnitReport_SV_Server,35617120,SystemVerilog,Jenkins_JUnitReport_SV_Server,15,0,2018-12-10 10:18:07+00:00,[],https://api.github.com/licenses/apache-2.0
413,https://github.com/mafzzz/can-controller.git,2015-10-23 16:53:49+00:00,Automatically exported from code.google.com/p/can-controller,0,mafzzz/can-controller,44826159,SystemVerilog,can-controller,1900,0,2015-10-23 16:55:05+00:00,[],
414,https://github.com/xinmeng/ecc-generator.git,2015-11-04 13:56:01+00:00,Automatically exported from code.google.com/p/ecc-generator,0,xinmeng/ecc-generator,45542213,SystemVerilog,ecc-generator,312,0,2015-11-04 13:56:40+00:00,[],
415,https://github.com/ulfmagnetics/mspacman.git,2016-01-15 05:44:28+00:00,WIP! Ms Pac Man on an FPGA,0,ulfmagnetics/mspacman,49699066,SystemVerilog,mspacman,80,0,2016-01-15 05:45:57+00:00,[],
416,https://github.com/gsw73/sync_fifo_0.git,2015-10-04 20:12:19+00:00,"Synchronous FIFO interfacing with flop-based, zero-delay read latency memory.",0,gsw73/sync_fifo_0,43651009,SystemVerilog,sync_fifo_0,9,0,2020-06-14 00:03:09+00:00,[],
417,https://github.com/bryzaguy/crowd-compass-memory-game.git,2015-09-27 17:43:30+00:00,,0,bryzaguy/crowd-compass-memory-game,43257239,SystemVerilog,crowd-compass-memory-game,25398,0,2016-02-23 08:52:20+00:00,[],
418,https://github.com/ajaybin/MuxTb.git,2015-09-25 22:18:01+00:00,Simple TB for an over complicated 2:1 Mux ,0,ajaybin/MuxTb,43178057,SystemVerilog,MuxTb,11,0,2016-03-24 19:15:25+00:00,[],
419,https://github.com/akhachat/AKH001.git,2016-02-17 06:07:30+00:00,Project 1,0,akhachat/AKH001,51899176,SystemVerilog,AKH001,2,0,2020-08-23 07:56:53+00:00,[],
420,https://github.com/pbing/vscale_system.git,2016-02-25 19:52:41+00:00,Simple vscale system.,0,pbing/vscale_system,52552468,SystemVerilog,vscale_system,53,0,2016-02-25 19:52:47+00:00,[],
421,https://github.com/sdivcom/SystemVerilog.git,2016-04-10 19:31:00+00:00,Мой учебный репозиторий для проектов на SystemVerilog в среде Quartus,2,sdivcom/SystemVerilog,55918297,SystemVerilog,SystemVerilog,37,0,2020-12-07 09:11:56+00:00,[],
422,https://github.com/cytan/lc3processor.git,2015-08-25 02:48:56+00:00,,1,cytan/lc3processor,41339151,SystemVerilog,lc3processor,300,0,2015-08-25 02:57:07+00:00,[],
423,https://github.com/rupesh007/UVM-EX2.git,2016-04-06 13:48:46+00:00,,0,rupesh007/UVM-EX2,55609775,SystemVerilog,UVM-EX2,7,0,2016-04-06 13:51:26+00:00,[],
424,https://github.com/rupesh007/ALU-Verification.git,2016-04-06 13:56:01+00:00,,0,rupesh007/ALU-Verification,55610315,SystemVerilog,ALU-Verification,586,0,2021-12-15 12:01:56+00:00,[],
425,https://github.com/chriswu024/diram4-testbench.git,2016-04-16 17:00:32+00:00,,0,chriswu024/diram4-testbench,56395412,SystemVerilog,diram4-testbench,28,0,2016-04-16 17:00:46+00:00,[],
426,https://github.com/rajkumarraval/i2c_wb_sv_ovm.git,2016-02-05 18:48:50+00:00,,0,rajkumarraval/i2c_wb_sv_ovm,51166882,SystemVerilog,i2c_wb_sv_ovm,10,0,2016-02-08 08:48:23+00:00,[],
427,https://github.com/C-L-G/FIFO_HDL.git,2016-01-19 09:20:58+00:00,mini FIFO  verilog script ,0,C-L-G/FIFO_HDL,49941076,SystemVerilog,FIFO_HDL,29,0,2020-02-09 05:07:13+00:00,[],https://api.github.com/licenses/gpl-3.0
428,https://github.com/ashleyl16590/Intel-Project.git,2016-03-16 21:27:15+00:00,In which I try to use Verilog,0,ashleyl16590/Intel-Project,54067729,SystemVerilog,Intel-Project,28,0,2016-05-23 19:58:24+00:00,[],
429,https://github.com/johnnyprc/powerloop.git,2015-02-04 07:27:10+00:00,,0,johnnyprc/powerloop,30286924,SystemVerilog,powerloop,14244,0,2015-03-11 10:15:29+00:00,[],
430,https://github.com/syduan2/ECE385Lab6.git,2015-02-19 23:04:24+00:00,,0,syduan2/ECE385Lab6,31041645,SystemVerilog,ECE385Lab6,43784,0,2015-10-27 07:03:24+00:00,[],
431,https://github.com/iteriani/cse141l2.git,2015-02-01 00:11:27+00:00,,0,iteriani/cse141l2,30131044,SystemVerilog,cse141l2,300,0,2015-02-02 21:10:14+00:00,[],
432,https://github.com/parth2488/uvm_lab2_seq_seq_item.git,2015-07-01 03:48:39+00:00,,0,parth2488/uvm_lab2_seq_seq_item,38348292,SystemVerilog,uvm_lab2_seq_seq_item,124,0,2015-07-01 03:59:30+00:00,[],
433,https://github.com/davidxlopez/SeqDetectSV.git,2015-05-24 01:43:42+00:00,"FSM Design to Detect Serial Sequence ""00111100""",0,davidxlopez/SeqDetectSV,36150904,SystemVerilog,SeqDetectSV,116,0,2015-05-24 01:43:50+00:00,[],
434,https://github.com/kevintownsend/common.git,2015-07-31 00:00:07+00:00,,0,kevintownsend/common,39977678,SystemVerilog,common,144,0,2015-07-31 00:01:10+00:00,[],https://api.github.com/licenses/apache-2.0
435,https://github.com/binje/EE371.git,2015-01-16 20:53:11+00:00,,0,binje/EE371,29367297,SystemVerilog,EE371,8664,0,2015-02-06 03:38:20+00:00,[],
436,https://github.com/a-nooj/lc3b_processor.git,2015-01-08 21:40:04+00:00,,2,a-nooj/lc3b_processor,28987425,SystemVerilog,lc3b_processor,30304,0,2015-01-08 22:04:15+00:00,[],
437,https://github.com/lokeshjindal15/verilog_line_follower.git,2015-02-23 21:45:21+00:00,,0,lokeshjindal15/verilog_line_follower,31231481,SystemVerilog,verilog_line_follower,1024,0,2015-05-16 23:08:19+00:00,[],
438,https://github.com/EnricoGiordano1992/resim-simulating-partial-reconfiguration.git,2015-12-13 11:06:36+00:00,Automatically exported from code.google.com/p/resim-simulating-partial-reconfiguration,0,EnricoGiordano1992/resim-simulating-partial-reconfiguration,47915720,SystemVerilog,resim-simulating-partial-reconfiguration,6484,0,2015-12-13 11:07:25+00:00,[],
439,https://github.com/michellefaustina/cse-141l.git,2016-02-26 00:29:04+00:00,"Spring 2015, Eldon. I tried to keep the finished work as unmodified as possible from the original files provided for the assignment so as to remain as compliant as possible with submission guidlines.",2,michellefaustina/cse-141l,52567010,SystemVerilog,cse-141l,1156,0,2023-11-07 12:41:46+00:00,[],
440,https://github.com/electricentity/VLSIProject.git,2016-03-13 23:14:53+00:00,,0,electricentity/VLSIProject,53812825,SystemVerilog,VLSIProject,204,0,2016-03-16 08:01:18+00:00,[],
441,https://github.com/bashlord/pipelining.git,2015-04-02 15:30:37+00:00,5 stage pipelining,1,bashlord/pipelining,33316521,SystemVerilog,pipelining,18260,0,2015-04-02 15:30:56+00:00,[],
442,https://github.com/pwlong/dangerzone.git,2015-04-16 16:30:06+00:00,,0,pwlong/dangerzone,34067222,SystemVerilog,dangerzone,956,0,2015-05-04 19:05:57+00:00,[],
443,https://github.com/weineran/mp3_cache.git,2015-04-26 16:38:40+00:00,mp3 separate cache repo for testing in isolation,0,weineran/mp3_cache,34620642,SystemVerilog,mp3_cache,8124,0,2015-04-26 16:49:52+00:00,[],
444,https://github.com/ccma321/ecc-generator.git,2015-05-05 07:27:37+00:00,Automatically exported from code.google.com/p/ecc-generator,0,ccma321/ecc-generator,35084554,SystemVerilog,ecc-generator,300,0,2015-05-05 07:28:16+00:00,[],
445,https://github.com/coolpay64/svlib.git,2016-02-22 06:11:54+00:00,,0,coolpay64/svlib,52251153,SystemVerilog,svlib,4,0,2016-03-10 03:08:39+00:00,[],
446,https://github.com/EEC181-Senior-Design-2016/Lab3.git,2016-02-11 19:38:19+00:00,,0,EEC181-Senior-Design-2016/Lab3,51541344,SystemVerilog,Lab3,72767,0,2017-09-19 23:51:52+00:00,[],
447,https://github.com/BryHung/ecc-generator.git,2016-02-17 02:08:02+00:00,Automatically exported from code.google.com/p/ecc-generator,0,BryHung/ecc-generator,51886468,SystemVerilog,ecc-generator,173,0,2016-02-17 02:08:54+00:00,[],
448,https://github.com/emmanouil-komninos/vip_edaplaygrnd.git,2015-09-30 07:42:55+00:00,,0,emmanouil-komninos/vip_edaplaygrnd,43419130,SystemVerilog,vip_edaplaygrnd,376,0,2015-09-30 07:45:38+00:00,[],
449,https://github.com/mcjohnso765/SV_SPIexample.git,2016-04-04 23:49:03+00:00,Demonstration of SystemVerilog interfaces using a small SPI design,0,mcjohnso765/SV_SPIexample,55453597,SystemVerilog,SV_SPIexample,5071,0,2016-04-04 23:59:46+00:00,[],
450,https://github.com/rupesh007/UVM_EX4.git,2016-04-06 13:53:20+00:00,,0,rupesh007/UVM_EX4,55610108,SystemVerilog,UVM_EX4,14,0,2016-04-06 13:53:54+00:00,[],
451,https://github.com/xixizai/gh02-my_noc.git,2016-05-20 05:19:38+00:00,,0,xixizai/gh02-my_noc,59266987,SystemVerilog,gh02-my_noc,1256,0,2016-05-28 11:46:12+00:00,[],
452,https://github.com/ngemily/sample-bmp-tb.git,2016-04-10 20:59:15+00:00,Sample test bench for image processing DUTs.,0,ngemily/sample-bmp-tb,55922222,SystemVerilog,sample-bmp-tb,62,0,2016-04-10 21:33:34+00:00,[],
453,https://github.com/sransara/aw-processor.git,2014-12-24 14:38:46+00:00,A wild multicore processor appeared,0,sransara/aw-processor,28451547,SystemVerilog,aw-processor,4134,0,2023-08-04 00:54:00+00:00,[],
454,https://github.com/marxys/address_encoder.git,2015-07-08 13:37:33+00:00,A SystemVerilog variable size address encoder ,0,marxys/address_encoder,38756236,SystemVerilog,address_encoder,136,0,2015-07-09 19:07:54+00:00,[],https://api.github.com/licenses/gpl-2.0
455,https://github.com/parth2488/UVM_Basics.git,2015-06-23 01:31:46+00:00,Uvm basic labs exercise.,0,parth2488/UVM_Basics,37890265,SystemVerilog,UVM_Basics,140,0,2015-07-01 02:28:40+00:00,[],
456,https://github.com/jbauer7/Line_Following_Robot.git,2015-09-28 18:18:46+00:00,Final class project for a digital circuit design course,0,jbauer7/Line_Following_Robot,43318485,SystemVerilog,Line_Following_Robot,148,0,2015-09-28 18:26:00+00:00,[],
457,https://github.com/rinderer/tbench.git,2015-09-23 09:17:38+00:00,Simulation Testbenches,0,rinderer/tbench,42990904,SystemVerilog,tbench,312,0,2015-12-30 05:58:30+00:00,[],
458,https://github.com/saminkamangar/lab1.181A.git,2016-01-18 09:38:48+00:00,,0,saminkamangar/lab1.181A,49866783,SystemVerilog,lab1.181A,30912,0,2016-01-18 09:41:39+00:00,[],
459,https://github.com/weineran/411.git,2015-02-20 18:29:47+00:00,,0,weineran/411,31078464,SystemVerilog,411,3864,0,2015-02-27 02:38:18+00:00,[],
460,https://github.com/maggiewhite/secretRepositoryOfSecrets.git,2014-12-08 20:23:50+00:00,,1,maggiewhite/secretRepositoryOfSecrets,27733284,SystemVerilog,secretRepositoryOfSecrets,568,0,2014-12-15 16:29:11+00:00,[],
461,https://github.com/cjblocker/dvi_controller.git,2015-09-23 16:00:39+00:00,DVI Controller in SystemVerilog,0,cjblocker/dvi_controller,43011556,SystemVerilog,dvi_controller,108,0,2015-09-23 16:02:01+00:00,[],
462,https://github.com/ZHOUJiemin/systemverilog-tb-framework.git,2015-08-25 14:33:42+00:00,,0,ZHOUJiemin/systemverilog-tb-framework,41368365,SystemVerilog,systemverilog-tb-framework,100,0,2015-08-25 14:33:48+00:00,[],
463,https://github.com/twarkent/rtl.git,2015-10-10 22:13:59+00:00,RTL code snippets,0,twarkent/rtl,44030363,SystemVerilog,rtl,21,0,2016-08-13 13:54:46+00:00,[],
464,https://github.com/adeeshag/asic_labs.git,2015-10-28 05:19:18+00:00,ECE 745 ASIC Labs,0,adeeshag/asic_labs,45090629,SystemVerilog,asic_labs,9072,0,2015-10-28 05:21:23+00:00,[],
465,https://github.com/angregor/CSE320SystemVerilog.git,2015-11-29 17:10:09+00:00,Project SystemVerilogFiles,1,angregor/CSE320SystemVerilog,47072366,SystemVerilog,CSE320SystemVerilog,27,0,2015-11-29 17:12:16+00:00,[],
466,https://github.com/manavala/utilities.git,2016-03-30 04:22:51+00:00,"linux commands, vim, scripts tips, etc",0,manavala/utilities,55032246,SystemVerilog,utilities,282,0,2022-07-12 14:58:09+00:00,[],
467,https://github.com/yuan56/ece437.git,2015-02-08 22:28:40+00:00,pipeline,0,yuan56/ece437,30508364,SystemVerilog,ece437,9592,0,2015-03-23 21:44:24+00:00,[],
468,https://github.com/willch3n/code_samples.git,2015-05-25 05:49:35+00:00,Code samples,0,willch3n/code_samples,36212510,SystemVerilog,code_samples,3438,0,2023-01-29 09:38:58+00:00,[],https://api.github.com/licenses/mit
469,https://github.com/niletronics/PreSi.git,2015-05-12 20:22:31+00:00,,0,niletronics/PreSi,35510712,SystemVerilog,PreSi,3788,0,2020-05-10 03:35:41+00:00,[],
470,https://github.com/cgottard/my_fe65.git,2016-05-20 09:45:09+00:00,,0,cgottard/my_fe65,59283354,SystemVerilog,my_fe65,76,0,2021-11-06 05:23:50+00:00,[],
471,https://github.com/fabugo/relaxar.git,2015-10-11 00:12:19+00:00,,0,fabugo/relaxar,44033245,SystemVerilog,relaxar,840,0,2015-10-20 00:35:32+00:00,[],
472,https://github.com/nikhilmarda/gittutorial.git,2015-11-17 07:04:23+00:00,tutorial,0,nikhilmarda/gittutorial,46329329,SystemVerilog,gittutorial,2,0,2015-11-17 07:25:07+00:00,[],
473,https://github.com/rupesh007/UVM_EX5.git,2016-04-06 13:54:20+00:00,,0,rupesh007/UVM_EX5,55610193,SystemVerilog,UVM_EX5,16,0,2016-04-06 13:54:43+00:00,[],
474,https://github.com/reedjosh/digital_logic_lab_volt_meter.git,2016-04-08 06:33:08+00:00,Lattice Machx02 and AD7705 ADC project to create a voltmeter.,0,reedjosh/digital_logic_lab_volt_meter,55756103,SystemVerilog,digital_logic_lab_volt_meter,59,0,2017-01-23 10:35:35+00:00,[],
475,https://github.com/ghananigans/mips-processor.git,2016-05-22 01:42:45+00:00,Subset of MIPS instruction processor implemented in SystemVerilog,0,ghananigans/mips-processor,59389713,SystemVerilog,mips-processor,428,0,2017-04-26 19:28:14+00:00,[],
476,https://github.com/hasanqusay/cs460.git,2016-05-09 18:58:30+00:00,,0,hasanqusay/cs460,58400601,SystemVerilog,cs460,20,0,2018-02-04 00:00:55+00:00,[],
477,https://github.com/Bharath-shashi/sysVerilogTestbench.git,2016-02-11 10:30:51+00:00,,0,Bharath-shashi/sysVerilogTestbench,51507824,SystemVerilog,sysVerilogTestbench,9,0,2016-02-11 11:13:34+00:00,[],
478,https://github.com/KyOChiang/DCT_Verilog.git,2015-08-22 13:21:33+00:00,,1,KyOChiang/DCT_Verilog,41207963,SystemVerilog,DCT_Verilog,136,0,2015-08-22 15:14:52+00:00,[],
479,https://github.com/Nihilus7/ECE551-HW5.git,2015-11-18 19:40:41+00:00,,0,Nihilus7/ECE551-HW5,46442770,SystemVerilog,ECE551-HW5,5,0,2015-11-18 19:44:00+00:00,[],
480,https://github.com/afisher92/551Top_final.git,2015-12-13 22:26:53+00:00,,0,afisher92/551Top_final,47939013,SystemVerilog,551Top_final,115616,0,2016-01-25 17:17:26+00:00,[],
481,https://github.com/tenthousandfailures/decoratorpattern.git,2015-11-26 07:26:13+00:00,,0,tenthousandfailures/decoratorpattern,46910720,SystemVerilog,decoratorpattern,10,0,2015-11-26 07:37:23+00:00,[],https://api.github.com/licenses/gpl-2.0
482,https://github.com/Chanrich/Asynchronous-Network-on-Chip.git,2016-03-27 23:14:00+00:00,,3,Chanrich/Asynchronous-Network-on-Chip,54852364,SystemVerilog,Asynchronous-Network-on-Chip,3458,0,2019-08-02 07:45:28+00:00,[],
483,https://github.com/AeroHand/pipelinelc3-with-l2cache.git,2015-03-17 16:05:45+00:00,yolo,1,AeroHand/pipelinelc3-with-l2cache,32404246,SystemVerilog,pipelinelc3-with-l2cache,6584,0,2015-04-23 18:02:33+00:00,[],
484,https://github.com/pwlong/peaches.git,2015-04-11 23:38:05+00:00,,1,pwlong/peaches,33796479,SystemVerilog,peaches,240,0,2015-04-29 06:36:58+00:00,[],
485,https://github.com/revzin/ap_cpld.git,2015-07-19 00:16:36+00:00,code for channel-muxing CPLD for the UAV AP,0,revzin/ap_cpld,39316867,SystemVerilog,ap_cpld,176,0,2015-07-19 00:16:44+00:00,[],
486,https://github.com/scott7950/VMM_TB.git,2015-07-09 12:06:41+00:00,VMM Testbench,0,scott7950/VMM_TB,38817930,SystemVerilog,VMM_TB,108,0,2015-07-09 12:06:49+00:00,[],
487,https://github.com/Andrew-Klaas/CPU.git,2015-07-12 15:13:05+00:00,,0,Andrew-Klaas/CPU,38966210,SystemVerilog,CPU,284,0,2015-07-12 15:14:35+00:00,[],
488,https://github.com/rakoskr6/ece337.git,2015-09-01 15:40:43+00:00,ASIC Design,0,rakoskr6/ece337,41747615,SystemVerilog,ece337,6076,0,2018-08-11 21:28:07+00:00,[],
489,https://github.com/gonzal88/Multicore.git,2016-01-20 23:04:45+00:00,Multicore Processor,0,gonzal88/Multicore,50066732,SystemVerilog,Multicore,4260,0,2016-01-20 23:11:54+00:00,[],
490,https://github.com/jza00425/ARM_pipeline_with_forwarding.git,2014-12-05 14:56:43+00:00,,0,jza00425/ARM_pipeline_with_forwarding,27595991,SystemVerilog,ARM_pipeline_with_forwarding,576,0,2014-12-10 16:46:56+00:00,[],
491,https://github.com/tkp-archive/fair_queue.git,2014-12-25 03:33:25+00:00,Strike Technologies Projects,0,tkp-archive/fair_queue,28469630,SystemVerilog,fair_queue,97,0,2023-10-12 15:51:33+00:00,[],https://api.github.com/licenses/bsd-3-clause
492,https://github.com/xgbn/verilog_tools.git,2015-11-19 20:13:00+00:00,,0,xgbn/verilog_tools,46517617,SystemVerilog,verilog_tools,128,0,2016-07-16 16:55:32+00:00,[],
493,https://github.com/Manish1509/sandbox.git,2015-03-02 04:16:52+00:00,It will contain my UVM practice code.,0,Manish1509/sandbox,31523114,SystemVerilog,sandbox,8,0,2016-12-16 06:51:03+00:00,[],
494,https://github.com/tenthousandfailures/uvm_report.git,2015-04-14 03:39:12+00:00,using the features of the uvm_report object,1,tenthousandfailures/uvm_report,33909100,SystemVerilog,uvm_report,121,0,2015-04-19 02:19:10+00:00,[],https://api.github.com/licenses/gpl-2.0
495,https://github.com/KennethWilke/capi-mmio.git,2016-03-02 21:29:42+00:00,My CAPI MMIO handler,0,KennethWilke/capi-mmio,52997821,SystemVerilog,capi-mmio,1,0,2016-03-03 14:43:00+00:00,[],https://api.github.com/licenses/isc
496,https://github.com/quanuw/HCDEProject4.git,2016-05-20 00:17:41+00:00,,0,quanuw/HCDEProject4,59252028,SystemVerilog,HCDEProject4,34,0,2016-05-20 00:19:43+00:00,[],
497,https://github.com/ericolaveson/DES-Cipher.git,2016-02-20 19:40:11+00:00,Data Encryption Standard Hardware Encoding,0,ericolaveson/DES-Cipher,52171817,SystemVerilog,DES-Cipher,17,0,2016-02-20 19:41:21+00:00,[],
498,https://github.com/eguccierrez/Vending_Machine.git,2016-04-10 00:26:41+00:00,,0,eguccierrez/Vending_Machine,55873412,SystemVerilog,Vending_Machine,3,0,2016-04-10 00:37:42+00:00,[],
499,https://github.com/nathanlea/ECEN4233.git,2016-04-11 20:15:26+00:00,,0,nathanlea/ECEN4233,56004481,SystemVerilog,ECEN4233,44171,0,2017-04-27 00:29:15+00:00,[],
500,https://github.com/bokuweb/nes_for_XOx.git,2015-03-03 00:27:45+00:00,SystemVerilogでnesを実装する(lattice XO2+を想定),0,bokuweb/nes_for_XOx,31571093,SystemVerilog,nes_for_XOx,9,0,2015-03-03 00:36:19+00:00,[],
501,https://github.com/syduan2/ECE385_Lab5.git,2015-02-14 05:42:37+00:00,Swaggin,1,syduan2/ECE385_Lab5,30788363,SystemVerilog,ECE385_Lab5,7008,0,2019-06-18 20:42:36+00:00,[],
502,https://github.com/abbkrish/HangMaze.git,2015-05-31 00:29:59+00:00,Maze hangman game using verilog and simulated on an FPGA,0,abbkrish/HangMaze,36581351,SystemVerilog,HangMaze,10408,0,2015-05-31 00:40:50+00:00,[],
503,https://github.com/ahn006/lab3clean.git,2014-12-11 16:46:53+00:00,,0,ahn006/lab3clean,27881294,SystemVerilog,lab3clean,16128,0,2014-12-11 16:50:29+00:00,[],
504,https://github.com/whatid/SLC3.git,2015-09-30 15:42:01+00:00,,0,whatid/SLC3,43441803,SystemVerilog,SLC3,13996,0,2015-09-30 15:42:45+00:00,[],
505,https://github.com/6palace/FPGAConradGameOfLife.git,2015-10-30 20:27:19+00:00,,0,6palace/FPGAConradGameOfLife,45274899,SystemVerilog,FPGAConradGameOfLife,128,0,2015-10-30 20:57:18+00:00,[],
506,https://github.com/subdavis/fictional-chainsaw.git,2016-04-17 17:02:03+00:00,This is not the repository you're looking for,0,subdavis/fictional-chainsaw,56448123,SystemVerilog,fictional-chainsaw,330,0,2016-05-15 23:34:10+00:00,[],
507,https://github.com/ddelane2/ece411_mp3.git,2016-03-28 22:17:01+00:00,,0,ddelane2/ece411_mp3,54927434,SystemVerilog,ece411_mp3,21321,0,2016-03-28 22:18:25+00:00,[],
508,https://github.com/ghraelo/led_controller.git,2015-09-20 21:34:34+00:00,,0,ghraelo/led_controller,42830537,SystemVerilog,led_controller,112,0,2015-09-20 21:34:44+00:00,[],
509,https://github.com/belavin/HASH.git,2015-10-24 16:51:32+00:00,HASH 34.11.2012 and block cipher 34.12-2015,0,belavin/HASH,44875368,SystemVerilog,HASH,136,0,2023-08-28 14:27:46+00:00,[],
510,https://github.com/ZHOUJiemin/UVM-Practice-DUT-01.git,2015-12-22 06:18:57+00:00,[private-document] UVM Practice Project,1,ZHOUJiemin/UVM-Practice-DUT-01,48414249,SystemVerilog,UVM-Practice-DUT-01,162,0,2015-12-22 06:28:14+00:00,[],
511,https://github.com/andrewaca/async-noc.git,2016-05-23 12:31:45+00:00,,0,andrewaca/async-noc,59481144,SystemVerilog,async-noc,90,0,2016-05-23 12:42:28+00:00,[],
512,https://github.com/szaleski/GLIBv2.git,2016-03-23 17:57:33+00:00,,1,szaleski/GLIBv2,54581710,SystemVerilog,GLIBv2,32206,0,2016-03-23 18:05:04+00:00,[],
513,https://github.com/rocwet/Verilog.git,2016-01-22 08:46:59+00:00,Hardware models using Verilog.,0,rocwet/Verilog,50169248,SystemVerilog,Verilog,2825,0,2016-01-22 08:55:08+00:00,[],
514,https://github.com/CSIYI/TripleDES.git,2016-04-14 17:52:59+00:00,,0,CSIYI/TripleDES,56258532,SystemVerilog,TripleDES,2225,0,2019-01-31 14:30:57+00:00,[],
515,https://github.com/hezt/MIPS_CPU.git,2016-04-01 05:07:01+00:00,A 5-stage pipline MIPS CPU,0,hezt/MIPS_CPU,55205201,SystemVerilog,MIPS_CPU,75,0,2021-01-25 18:36:31+00:00,[],
516,https://github.com/ramverma92/CMU-18-240-Breakout-on-FPGA.git,2015-11-09 20:54:44+00:00,Verilog Code for playing breakout on FPGA,0,ramverma92/CMU-18-240-Breakout-on-FPGA,45866149,SystemVerilog,CMU-18-240-Breakout-on-FPGA,0,0,2015-11-09 20:54:49+00:00,[],
517,https://github.com/hospital-sleep-tracker/sample_logs.git,2015-02-16 13:28:04+00:00,,0,hospital-sleep-tracker/sample_logs,30869438,SystemVerilog,sample_logs,5044,0,2015-02-16 13:36:25+00:00,[],
518,https://github.com/suanming1991/Milk_the_Chimp_Robot.git,2015-04-10 03:26:35+00:00,Linear Robot,0,suanming1991/Milk_the_Chimp_Robot,33706322,SystemVerilog,Milk_the_Chimp_Robot,3272,0,2019-09-30 17:09:52+00:00,[],
519,https://github.com/hassyy/systemverilog-assertion.git,2015-08-01 13:13:32+00:00,,3,hassyy/systemverilog-assertion,40047024,SystemVerilog,systemverilog-assertion,136,0,2015-08-01 13:17:10+00:00,[],https://api.github.com/licenses/mit
520,https://github.com/amlannayak/sva_project.git,2015-10-10 23:55:10+00:00,,0,amlannayak/sva_project,44032722,SystemVerilog,sva_project,440,0,2015-10-26 00:37:55+00:00,[],
521,https://github.com/five-elephants/omnibus.git,2015-10-12 16:37:01+00:00,A pipelined hardware bus system based on OCP 2.0 written in SystemVerilog,1,five-elephants/omnibus,44120196,SystemVerilog,omnibus,7189,0,2015-10-12 17:06:40+00:00,[],
522,https://github.com/jsmonson/FinalProject620.git,2014-12-05 23:45:50+00:00,,0,jsmonson/FinalProject620,27615167,SystemVerilog,FinalProject620,688,0,2014-12-18 21:31:37+00:00,[],
523,https://github.com/woodworthkyle/ece337-final.git,2014-11-30 15:13:42+00:00,Final Design Project for ECE337,0,woodworthkyle/ece337-final,27339739,SystemVerilog,ece337-final,388,0,2014-12-16 02:08:27+00:00,[],
524,https://github.com/havet/My_Block_World_Corpus.git,2015-11-26 09:27:18+00:00,A syntetic corpus to test Machine Translation,0,havet/My_Block_World_Corpus,46916755,SystemVerilog,My_Block_World_Corpus,130,0,2020-01-09 18:51:27+00:00,[],https://api.github.com/licenses/gpl-3.0
525,https://github.com/gsw73/pattern-match.git,2016-05-18 18:39:16+00:00,Digital logic to match four-bit pattern in sequence of bits.,0,gsw73/pattern-match,59141923,SystemVerilog,pattern-match,3,0,2016-05-18 18:40:48+00:00,[],
526,https://github.com/JCScheunemann/ZueiraI-the-Zueiras-RISC-uProcessor.git,2016-04-25 21:16:52+00:00,Starter Rep,0,JCScheunemann/ZueiraI-the-Zueiras-RISC-uProcessor,57076950,SystemVerilog,ZueiraI-the-Zueiras-RISC-uProcessor,20,0,2016-05-03 13:39:28+00:00,[],
527,https://github.com/Hylian/bcrypt_asic.git,2016-03-22 23:53:09+00:00,verilog for a bcrypt asic,1,Hylian/bcrypt_asic,54516896,SystemVerilog,bcrypt_asic,53,0,2017-06-06 06:01:20+00:00,[],
528,https://github.com/jamesshawver1/de0nano.git,2015-06-02 15:51:39+00:00,a central place for people to make cool stuff with the de0 nano,0,jamesshawver1/de0nano,36744086,SystemVerilog,de0nano,12320,0,2015-10-05 04:30:34+00:00,[],
529,https://github.com/shjung11/axi-bfm.git,2015-07-16 02:36:41+00:00,Automatically exported from code.google.com/p/axi-bfm,0,shjung11/axi-bfm,39172414,SystemVerilog,axi-bfm,148,0,2015-07-16 02:37:20+00:00,[],
530,https://github.com/zephyrer/resim-simulating-partial-reconfiguration.git,2015-05-20 02:42:32+00:00,Automatically exported from code.google.com/p/resim-simulating-partial-reconfiguration,0,zephyrer/resim-simulating-partial-reconfiguration,35921571,SystemVerilog,resim-simulating-partial-reconfiguration,6624,0,2015-05-20 02:43:14+00:00,[],
531,https://github.com/Ricordel/copro-elec222.git,2015-03-14 12:45:27+00:00,Automatically exported from code.google.com/p/copro-elec222,0,Ricordel/copro-elec222,32211303,SystemVerilog,copro-elec222,144,0,2015-03-14 12:45:36+00:00,[],
532,https://github.com/tenthousandfailures/observerpattern.git,2015-08-14 02:31:29+00:00,,0,tenthousandfailures/observerpattern,40691858,SystemVerilog,observerpattern,140,0,2015-08-14 02:37:25+00:00,[],https://api.github.com/licenses/gpl-2.0
533,https://github.com/krame505/gia.git,2015-09-23 23:08:44+00:00,Functional language for artificial inteligence,0,krame505/gia,43032215,SystemVerilog,gia,284,0,2015-09-23 23:11:56+00:00,[],https://api.github.com/licenses/gpl-3.0
534,https://github.com/katmtz/341-p4-usb.git,2015-10-17 20:42:45+00:00,A repo for F15 18-341's USB project.,0,katmtz/341-p4-usb,44453777,SystemVerilog,341-p4-usb,330,0,2015-11-06 05:14:27+00:00,[],
535,https://github.com/nilimsarma/Altera_NIDS.git,2015-11-29 09:55:25+00:00,,0,nilimsarma/Altera_NIDS,47058247,SystemVerilog,Altera_NIDS,1239,0,2015-11-29 09:57:08+00:00,[],
536,https://github.com/sa-akhavani/dld-ca3.git,2016-01-12 09:41:53+00:00,,0,sa-akhavani/dld-ca3,49490093,SystemVerilog,dld-ca3,14,0,2016-01-12 09:45:42+00:00,[],
537,https://github.com/diadatp/rrarbiter.git,2016-03-30 14:45:02+00:00,A simple non-preemptive round-robin arbiter.,0,diadatp/rrarbiter,55071192,SystemVerilog,rrarbiter,165,0,2020-10-11 12:33:25+00:00,[],https://api.github.com/licenses/mit
538,https://github.com/vmanja16/Cartoonifier.git,2016-04-14 00:03:13+00:00,ECE337 cartoonifier scripts,0,vmanja16/Cartoonifier,56193984,SystemVerilog,Cartoonifier,709,0,2016-04-22 16:43:34+00:00,[],
539,https://github.com/chuff2/RASM551.git,2016-04-10 18:59:48+00:00,,0,chuff2/RASM551,55916952,SystemVerilog,RASM551,2368,0,2016-04-10 19:45:34+00:00,[],
540,https://github.com/kieshpup/ecc-generator.git,2016-03-25 16:34:50+00:00,Automatically exported from code.google.com/p/ecc-generator,0,kieshpup/ecc-generator,54731622,SystemVerilog,ecc-generator,173,0,2016-03-25 16:35:45+00:00,[],
541,https://github.com/mikitymike/3DGPU.git,2016-05-04 05:31:57+00:00,,1,mikitymike/3DGPU,58025356,SystemVerilog,3DGPU,290,0,2016-05-04 05:40:03+00:00,[],https://api.github.com/licenses/gpl-3.0
542,https://github.com/EasonSun/some-rockware.git,2016-02-28 04:05:40+00:00,,0,EasonSun/some-rockware,52703881,SystemVerilog,some-rockware,9,0,2016-02-28 05:59:45+00:00,[],
543,https://github.com/tjbonesteel/ECE337-2.git,2016-02-11 04:56:30+00:00,,0,tjbonesteel/ECE337-2,51494881,SystemVerilog,ECE337-2,9741,0,2016-02-11 04:56:32+00:00,[],
544,https://github.com/etaijoverlap/TwoWire.git,2016-02-02 21:40:51+00:00,"Collection of IPs for the I2C (TWI) bus for use in programmable logic devices, such as FPGAs.",0,etaijoverlap/TwoWire,50953947,SystemVerilog,TwoWire,43,0,2016-02-02 21:44:30+00:00,[],
545,https://github.com/oceanborn-mx/xidoo.git,2015-05-16 16:01:46+00:00,Tiny uProcessor,0,oceanborn-mx/xidoo,35730153,SystemVerilog,xidoo,232,0,2015-05-16 16:03:21+00:00,[],https://api.github.com/licenses/gpl-2.0
546,https://github.com/eguccierrez/Simple_Processor.git,2016-04-10 00:43:09+00:00,,0,eguccierrez/Simple_Processor,55873882,SystemVerilog,Simple_Processor,2,0,2016-04-10 00:43:42+00:00,[],
547,https://github.com/anujnr/trace-debug-submodule.git,2016-04-04 08:01:40+00:00,,0,anujnr/trace-debug-submodule,55394468,SystemVerilog,trace-debug-submodule,9,0,2016-04-04 08:07:58+00:00,[],
548,https://github.com/shashanksi2009/Verilog.git,2016-03-19 16:41:02+00:00,This repo contains my verilog codes .,1,shashanksi2009/Verilog,54276127,SystemVerilog,Verilog,39,0,2016-03-20 04:27:21+00:00,[],
549,https://github.com/afisher92/Build_12_10_End.git,2015-12-11 17:28:13+00:00,,0,afisher92/Build_12_10_End,47840906,SystemVerilog,Build_12_10_End,41128,0,2016-01-25 17:17:40+00:00,[],
550,https://github.com/ORYZAPAO/practice_UVM.git,2015-10-18 13:41:34+00:00,,0,ORYZAPAO/practice_UVM,44479497,SystemVerilog,practice_UVM,2536,0,2015-10-18 13:45:48+00:00,[],
551,https://github.com/rdou/Simple-MIPS.git,2016-04-01 02:38:47+00:00,This is a little project for learning verilog and computer organization. ,0,rdou/Simple-MIPS,55198221,SystemVerilog,Simple-MIPS,11,0,2016-04-05 07:27:39+00:00,[],
552,https://github.com/krfkeith/silver.git,2015-06-19 22:37:26+00:00,Automatically exported from code.google.com/p/silver,0,krfkeith/silver,37749187,SystemVerilog,silver,6400,0,2015-06-19 22:40:49+00:00,[],https://api.github.com/licenses/lgpl-3.0
553,https://github.com/jeras/axi-bfm.git,2015-03-17 10:43:27+00:00,Automatically exported from code.google.com/p/axi-bfm,0,jeras/axi-bfm,32387553,SystemVerilog,axi-bfm,172,0,2023-01-28 13:45:48+00:00,[],
554,https://github.com/kkudrolli/Testbench.git,2015-01-12 21:10:40+00:00,A System Verilog testbench used to find faults in a black box calculator design.,0,kkudrolli/Testbench,29157101,SystemVerilog,Testbench,188,0,2015-01-12 23:00:26+00:00,[],
555,https://github.com/bjonen1/551Project_2ndCummings.git,2015-04-12 21:02:51+00:00,Wisc Spring 2015 551 Project. Implementing the hardware for a small FPGA centered vehicle with bluetooth and IR sensing for linefollowing,1,bjonen1/551Project_2ndCummings,33833834,SystemVerilog,551Project_2ndCummings,6576,0,2015-05-08 16:16:04+00:00,[],
556,https://github.com/jinz2014/XAUI.git,2015-04-15 01:52:25+00:00,,0,jinz2014/XAUI,33967152,SystemVerilog,XAUI,14520,0,2015-04-15 03:16:17+00:00,[],
557,https://github.com/apoorvsgaur/computer-design-and-prototyping.git,2016-05-14 05:27:09+00:00,Computer Architecture using System Verilog ,0,apoorvsgaur/computer-design-and-prototyping,58791127,SystemVerilog,computer-design-and-prototyping,1039,0,2017-04-09 22:46:53+00:00,[],
558,https://github.com/C-L-G/SimpleRandom.git,2016-05-20 08:24:06+00:00,随机数生成模块,0,C-L-G/SimpleRandom,59277492,SystemVerilog,SimpleRandom,2,0,2016-05-20 08:29:56+00:00,[],
559,https://github.com/sa-akhavani/dld-ca1.git,2016-01-12 09:15:01+00:00,,0,sa-akhavani/dld-ca1,49488475,SystemVerilog,dld-ca1,13,0,2016-01-12 09:16:32+00:00,[],
560,https://github.com/lamemmett/Lab3.git,2015-11-19 04:03:32+00:00,EE 471 Lab 3,0,lamemmett/Lab3,46466608,SystemVerilog,Lab3,13,0,2015-11-19 04:03:40+00:00,[],
561,https://github.com/We-Can-Apply-FPGA/Lab3.git,2015-11-06 15:23:19+00:00,,0,We-Can-Apply-FPGA/Lab3,45689640,SystemVerilog,Lab3,6197,0,2015-11-06 15:25:27+00:00,[],
562,https://github.com/afisher92/Top_level.git,2015-12-09 17:01:25+00:00,Upload all files,0,afisher92/Top_level,47705928,SystemVerilog,Top_level,83,0,2016-01-25 17:18:03+00:00,[],
563,https://github.com/roly197/H2F_Mem_Brew.git,2016-03-19 20:00:04+00:00,,1,roly197/H2F_Mem_Brew,54284702,SystemVerilog,H2F_Mem_Brew,45423,0,2016-03-19 20:01:43+00:00,[],
564,https://github.com/0x1A1-1/2cool4School.git,2016-04-05 16:15:26+00:00,:squirrel: Logic Analyzer Verilog Design,0,0x1A1-1/2cool4School,55523074,SystemVerilog,2cool4School,3676,0,2017-03-09 15:42:57+00:00,[],
565,https://github.com/rawelort/pracaMagisterska.git,2016-04-13 22:09:23+00:00,,0,rawelort/pracaMagisterska,56189407,SystemVerilog,pracaMagisterska,2594,0,2017-08-28 00:29:47+00:00,[],
566,https://github.com/Iambrett3/Bullet-Hell-Game.git,2015-09-17 15:18:43+00:00,Simple bullet hell game written in assembly for the MIPS processor I made,0,Iambrett3/Bullet-Hell-Game,42663889,SystemVerilog,Bullet-Hell-Game,14596,0,2015-09-17 15:21:56+00:00,[],
567,https://github.com/jjacobson93/comp300-projects.git,2015-10-06 21:08:02+00:00,Projects from COMP 300 (Digital Hardware),0,jjacobson93/comp300-projects,43778812,SystemVerilog,comp300-projects,432,0,2015-10-06 21:08:10+00:00,[],
568,https://github.com/eduardohenriquearnold/myCPU.git,2015-01-18 17:34:57+00:00,My own implementation of a reduced MIPS ISA processor on SystemVerilog,2,eduardohenriquearnold/myCPU,29434262,SystemVerilog,myCPU,101,0,2015-03-28 02:14:52+00:00,[],
569,https://github.com/cjubb39/eecs4340-labs.git,2014-12-24 07:38:54+00:00,HW and projects for EECS4340 Computer Hardware Design,0,cjubb39/eecs4340-labs,28440887,SystemVerilog,eecs4340-labs,428,0,2014-12-24 07:40:12+00:00,[],
570,https://github.com/Yanqing-He/Synergistic_Processing_Unit.git,2015-02-10 05:29:53+00:00,Dual Issue Synergistic Processing Unit,0,Yanqing-He/Synergistic_Processing_Unit,30576632,SystemVerilog,Synergistic_Processing_Unit,156,0,2015-02-26 01:53:41+00:00,[],
571,https://github.com/kfathy/UVM_sceanrio_library.git,2015-05-05 10:53:09+00:00,library for UVM sceanrio creation,0,kfathy/UVM_sceanrio_library,35093906,SystemVerilog,UVM_sceanrio_library,96,0,2015-05-05 10:54:00+00:00,[],
572,https://github.com/thomasGithub15/Digital_System_Programming.git,2015-05-11 20:19:32+00:00,"Digital logic, Boolean algebra, combinational and sequential circuits and logic design, programmable logic devices, and the design and operation of digital computers, including ALU, memory, and I/O.",0,thomasGithub15/Digital_System_Programming,35447763,SystemVerilog,Digital_System_Programming,19888,0,2015-05-14 22:56:55+00:00,[],
573,https://github.com/Jawanga/ece385lab6.git,2015-03-16 08:07:24+00:00,Automatically exported from code.google.com/p/ece385lab6,0,Jawanga/ece385lab6,32309962,SystemVerilog,ece385lab6,148,0,2015-10-27 07:03:25+00:00,[],
574,https://github.com/rwarmstr/Vivado_IP.git,2015-07-14 18:00:55+00:00,A suite of small utility IPs for the Xilinx Vivado design suite.,0,rwarmstr/Vivado_IP,39091611,SystemVerilog,Vivado_IP,16,0,2022-10-21 00:09:11+00:00,[],https://api.github.com/licenses/mit
575,https://github.com/zmughal/silver.git,2015-07-24 13:42:22+00:00,Automatically exported from code.google.com/p/silver,0,zmughal/silver,39636027,SystemVerilog,silver,6416,0,2015-07-24 13:46:21+00:00,[],https://api.github.com/licenses/lgpl-3.0
576,https://github.com/tenthousandfailures/strategypattern.git,2015-08-14 01:54:59+00:00,strategypattern,0,tenthousandfailures/strategypattern,40690529,SystemVerilog,strategypattern,140,0,2015-08-14 02:14:31+00:00,[],https://api.github.com/licenses/gpl-2.0
577,https://github.com/dsantamaria1/hw3_Verification.git,2016-05-09 21:21:53+00:00,,0,dsantamaria1/hw3_Verification,58409155,SystemVerilog,hw3_Verification,320,0,2016-05-09 21:22:47+00:00,[],
578,https://github.com/scott7950/cmake_systemverilog_testbench.git,2015-10-30 02:44:19+00:00,CMake SystemVerilog TestBench,0,scott7950/cmake_systemverilog_testbench,45224913,SystemVerilog,cmake_systemverilog_testbench,136,0,2015-10-30 02:44:29+00:00,[],
579,https://github.com/dsingh24/Equalizer.git,2015-11-22 22:22:39+00:00,,0,dsingh24/Equalizer,46683304,SystemVerilog,Equalizer,1249,0,2015-11-25 00:54:39+00:00,[],
580,https://github.com/mafzzz/gameboy-fpga.git,2015-10-23 16:54:43+00:00,Automatically exported from code.google.com/p/gameboy-fpga,0,mafzzz/gameboy-fpga,44826222,SystemVerilog,gameboy-fpga,256,0,2015-10-23 16:58:39+00:00,[],
581,https://github.com/fijs/lab2_141L.git,2015-10-21 00:57:32+00:00,Lab2 for 141L,0,fijs/lab2_141L,44643876,SystemVerilog,lab2_141L,16140,0,2016-02-11 08:01:02+00:00,[],
582,https://github.com/mdskrzypczyk/DGM.git,2015-10-17 05:39:39+00:00,Fresh.  New.  Repo.,2,mdskrzypczyk/DGM,44425527,SystemVerilog,DGM,111,0,2016-07-20 20:35:10+00:00,[],
583,https://github.com/ssingh21/Asic_Veri_SV.git,2016-03-08 01:55:16+00:00,,0,ssingh21/Asic_Veri_SV,53373875,SystemVerilog,Asic_Veri_SV,12,0,2016-03-08 02:25:02+00:00,[],
584,https://github.com/evaneven/hello-world.git,2016-03-25 03:34:42+00:00,,0,evaneven/hello-world,54692300,SystemVerilog,hello-world,24,0,2016-10-30 11:01:10+00:00,[],
585,https://github.com/zhan1182/CPU-Design.git,2015-09-23 23:18:54+00:00,,0,zhan1182/CPU-Design,43032570,SystemVerilog,CPU-Design,151,0,2017-05-03 03:23:28+00:00,[],
586,https://github.com/kureemrossaye/ocr-buildpack.git,2015-10-08 15:25:42+00:00,Build pack for ocr,0,kureemrossaye/ocr-buildpack,43898345,SystemVerilog,ocr-buildpack,47976,0,2015-10-08 16:33:03+00:00,[],
587,https://github.com/chenpup/HDL.git,2015-07-30 00:52:49+00:00,HDL study record,0,chenpup/HDL,39923502,SystemVerilog,HDL,328,0,2015-08-14 00:40:55+00:00,[],
588,https://github.com/hossamfadeel/eecs-4340-knock.git,2015-03-19 08:52:09+00:00,Automatically exported from code.google.com/p/eecs-4340-knock,0,hossamfadeel/eecs-4340-knock,32510518,SystemVerilog,eecs-4340-knock,804,0,2015-03-19 08:53:00+00:00,[],
589,https://github.com/rajneesh1986/ecc-generator.git,2015-03-31 10:02:52+00:00,Automatically exported from code.google.com/p/ecc-generator,0,rajneesh1986/ecc-generator,33178312,SystemVerilog,ecc-generator,304,0,2015-03-31 10:03:33+00:00,[],
590,https://github.com/avdheshgarodia/chip8-systemverilog.git,2014-12-14 10:08:52+00:00,A chip 8 interpreter written in system verilog.,0,avdheshgarodia/chip8-systemverilog,27990464,SystemVerilog,chip8-systemverilog,896,0,2015-01-05 21:51:40+00:00,[],
591,https://github.com/jilikuang/CHD-lab1.git,2015-04-11 06:30:50+00:00,Lab 1 of Computer Hardware Design,0,jilikuang/CHD-lab1,33765445,SystemVerilog,CHD-lab1,104,0,2015-04-11 06:59:13+00:00,[],
592,https://github.com/keyru/hdl-make.git,2015-06-25 20:11:01+00:00,,0,keyru/hdl-make,38071575,SystemVerilog,hdl-make,2704,0,2015-06-25 20:15:50+00:00,[],https://api.github.com/licenses/gpl-3.0
593,https://github.com/fabugo/witnesses-of-jhon.git,2015-04-07 15:30:51+00:00,,2,fabugo/witnesses-of-jhon,33551715,SystemVerilog,witnesses-of-jhon,1227,0,2015-05-07 14:15:05+00:00,[],https://api.github.com/licenses/gpl-2.0
594,https://github.com/KennethWilke/capi-systemverilog.git,2016-03-02 17:15:51+00:00,A boiler-plate library for developing a CAPI accelerator with SystemVerilog,0,KennethWilke/capi-systemverilog,52981570,SystemVerilog,capi-systemverilog,3,0,2016-03-02 17:16:06+00:00,[],https://api.github.com/licenses/isc
595,https://github.com/tubbies/simple_mcu.git,2016-01-10 02:54:46+00:00,,0,tubbies/simple_mcu,49350926,SystemVerilog,simple_mcu,13,0,2019-08-30 04:39:38+00:00,[],
596,https://github.com/l00291985/Datapath-Subsystem.git,2015-09-16 06:14:23+00:00,,0,l00291985/Datapath-Subsystem,42568361,SystemVerilog,Datapath-Subsystem,128,0,2015-09-17 06:19:11+00:00,[],
597,https://github.com/rupesh007/UVM_EX3.git,2016-04-06 13:52:08+00:00,,0,rupesh007/UVM_EX3,55610016,SystemVerilog,UVM_EX3,11,0,2016-04-06 13:52:31+00:00,[],
598,https://github.com/krutarthkikani/Object-Based-Constraint-Randomization.git,2016-04-18 08:02:01+00:00,It contains example of object based constraint randomization with example of AHB.,0,krutarthkikani/Object-Based-Constraint-Randomization,56488608,SystemVerilog,Object-Based-Constraint-Randomization,2,0,2016-04-18 08:04:20+00:00,[],
599,https://github.com/gsw73/toggle_sync.git,2015-11-08 20:29:40+00:00,Implements simple data handshake between two clock domains,0,gsw73/toggle_sync,45797662,SystemVerilog,toggle_sync,0,0,2015-11-09 23:55:02+00:00,[],
600,https://github.com/gzachv/thundercatz.git,2015-11-10 14:46:03+00:00,,0,gzachv/thundercatz,45918193,SystemVerilog,thundercatz,14622,0,2017-04-17 00:35:56+00:00,[],
601,https://github.com/JamesLinus/verilog-util.git,2016-01-20 11:32:16+00:00,My own Verilog utilities lib,0,JamesLinus/verilog-util,50025849,SystemVerilog,verilog-util,128,0,2019-07-14 19:56:46+00:00,[],
602,https://github.com/RNGpls/mp3.git,2015-10-21 22:21:16+00:00,,0,RNGpls/mp3,44707834,SystemVerilog,mp3,12400,0,2015-10-21 22:22:15+00:00,[],
603,https://github.com/LadingProjects/551Top_final-master.git,2015-12-14 15:48:01+00:00,Final Upload of 551 Project 12/14,1,LadingProjects/551Top_final-master,47984728,SystemVerilog,551Top_final-master,766,0,2015-12-14 15:48:07+00:00,[],
604,https://github.com/agawande/MIPS32.git,2015-10-05 22:59:56+00:00,Microprocessor Project,0,agawande/MIPS32,43718639,SystemVerilog,MIPS32,3563,0,2015-12-25 15:57:18+00:00,[],
605,https://github.com/gsw73/sync_fifo_1.git,2015-10-05 01:11:35+00:00,"Synchronous FIFO interfacing with flop-based, one-cycle delay memory.  Includes SystemVerilog test bench.",1,gsw73/sync_fifo_1,43659399,SystemVerilog,sync_fifo_1,8,0,2020-06-16 02:54:56+00:00,[],
606,https://github.com/AeroHand/yolocpu.git,2015-04-30 00:44:13+00:00,,0,AeroHand/yolocpu,34826075,SystemVerilog,yolocpu,140,0,2015-04-30 00:45:37+00:00,[],
607,https://github.com/ajblane/VerilogSimulation.git,2015-08-01 05:49:54+00:00,,0,ajblane/VerilogSimulation,40036902,SystemVerilog,VerilogSimulation,216,0,2015-08-01 05:55:06+00:00,[],
608,https://github.com/Leonid-SPB/FirFilter.Sv.git,2015-05-20 15:28:07+00:00,Trivial SystemVerilog implementation of FIR filters,1,Leonid-SPB/FirFilter.Sv,35956688,SystemVerilog,FirFilter.Sv,101,0,2017-03-23 02:48:44+00:00,[],https://api.github.com/licenses/bsd-2-clause
609,https://github.com/rbutoi/Filesystem-on-FPGA-ECE241-project.git,2015-03-13 00:21:01+00:00,,1,rbutoi/Filesystem-on-FPGA-ECE241-project,32110922,SystemVerilog,Filesystem-on-FPGA-ECE241-project,63876,0,2015-03-13 00:26:56+00:00,[],
610,https://github.com/tabell/core.git,2015-04-08 01:09:40+00:00,pipelined 32-bit mips cpu in verilog (in progress),0,tabell/core,33576969,SystemVerilog,core,36,0,2017-03-10 20:36:27+00:00,[],
611,https://github.com/rickymason/ECE437.git,2015-02-15 23:28:59+00:00,,0,rickymason/ECE437,30846348,SystemVerilog,ECE437,256,0,2016-01-28 15:50:54+00:00,[],
612,https://github.com/sejr/mips_processor.git,2015-04-09 17:53:52+00:00,"A MIPS processor, built for the ECCS 3611 Computer Architecture class at Ohio Northern University.",0,sejr/mips_processor,33683787,SystemVerilog,mips_processor,336,0,2023-01-28 19:32:29+00:00,[],
613,https://github.com/lsphate/2014_E6998_FinalProject.git,2014-12-17 21:35:45+00:00,,0,lsphate/2014_E6998_FinalProject,28156657,SystemVerilog,2014_E6998_FinalProject,132,0,2014-12-17 21:36:23+00:00,[],
614,https://github.com/AI6YP/lights.git,2014-12-15 04:47:21+00:00,:bulb: Light show with LEDs,2,AI6YP/lights,28021065,SystemVerilog,lights,132,0,2021-02-21 04:28:52+00:00,[],https://api.github.com/licenses/mit
615,https://github.com/thomasGithub15/Computer_Organization.git,2015-10-14 00:48:31+00:00,computer organization and architecture,0,thomasGithub15/Computer_Organization,44214704,SystemVerilog,Computer_Organization,6,0,2015-10-14 02:00:11+00:00,[],
616,https://github.com/vaisup/Systemverilog_Examples.git,2015-12-18 15:45:52+00:00,,1,vaisup/Systemverilog_Examples,48243072,SystemVerilog,Systemverilog_Examples,26,0,2020-09-12 11:17:45+00:00,[],
617,https://github.com/yiyiz-cmu-1129/FPGA-Typewriter-master.git,2016-01-14 02:24:48+00:00,,0,yiyiz-cmu-1129/FPGA-Typewriter-master,49616809,SystemVerilog,FPGA-Typewriter-master,8,0,2016-01-14 02:24:52+00:00,[],
618,https://github.com/DanJSuciu/ECE337.git,2016-02-18 02:31:08+00:00,Verilog ASIC Design Labs,0,DanJSuciu/ECE337,51972468,SystemVerilog,ECE337,573,0,2016-03-21 23:02:53+00:00,[],
619,https://github.com/eyar/LightSeperator.git,2016-02-23 08:08:00+00:00,Digital Design and Logical Synthesis Course Project,0,eyar/LightSeperator,52342116,SystemVerilog,LightSeperator,1003,0,2016-02-23 08:39:10+00:00,[],
620,https://github.com/amarnathmhn/HAS3.0.git,2015-11-03 00:34:54+00:00,,1,amarnathmhn/HAS3.0,45431360,SystemVerilog,HAS3.0,127,0,2015-11-14 03:35:23+00:00,[],
621,https://github.com/HastingsGreer/Lab10.git,2015-11-13 18:15:21+00:00,,0,HastingsGreer/Lab10,46139130,SystemVerilog,Lab10,4528,0,2015-11-13 18:15:55+00:00,[],
622,https://github.com/Iambrett3/MIPS-Processor.git,2015-09-17 15:05:10+00:00,Reduced instruction set MIPS processor,0,Iambrett3/MIPS-Processor,42663084,SystemVerilog,MIPS-Processor,1312,0,2018-03-22 13:53:03+00:00,[],
623,https://github.com/nliu96/openHMC_Altera.git,2015-09-26 17:37:31+00:00,openHMC implemented on Altera board,0,nliu96/openHMC_Altera,43215723,SystemVerilog,openHMC_Altera,3130,0,2018-03-30 22:42:04+00:00,[],https://api.github.com/licenses/lgpl-3.0
624,https://github.com/ajdunker/ECE337.git,2016-01-21 16:37:42+00:00,ECE337 Lab Work,0,ajdunker/ECE337,50121055,SystemVerilog,ECE337,2005,0,2016-01-28 19:42:54+00:00,[],
625,https://github.com/sa-akhavani/dld-ca4.git,2016-01-12 09:47:22+00:00,,0,sa-akhavani/dld-ca4,49490411,SystemVerilog,dld-ca4,14,0,2016-01-12 09:51:09+00:00,[],
626,https://github.com/dhanusht6/system_verilog_project.git,2016-05-23 05:08:23+00:00,system verilog final project,0,dhanusht6/system_verilog_project,59453500,SystemVerilog,system_verilog_project,3228,0,2016-08-26 17:13:06+00:00,[],
627,https://github.com/Opentrino/Citrino.git,2016-05-20 19:33:27+00:00,Citrino: The Microprocessor for the Opentrino Project,0,Opentrino/Citrino,59321259,SystemVerilog,Citrino,3133,0,2016-08-13 23:18:53+00:00,[],
628,https://github.com/niletronics/CompArch2015.git,2015-01-17 04:18:44+00:00,Computer Architecture Course Website,0,niletronics/CompArch2015,29379532,SystemVerilog,CompArch2015,4336,0,2015-04-28 20:42:56+00:00,[],
629,https://github.com/javValverde/spi_master.git,2015-04-13 08:11:34+00:00,,0,javValverde/spi_master,33856056,SystemVerilog,spi_master,140,0,2015-04-15 20:36:23+00:00,[],
630,https://github.com/minoru-uwai/ecc-generator.git,2015-07-22 05:30:20+00:00,Automatically exported from code.google.com/p/ecc-generator,0,minoru-uwai/ecc-generator,39487478,SystemVerilog,ecc-generator,304,0,2015-07-22 05:31:58+00:00,[],
631,https://github.com/radiohead/system-verification.git,2015-03-19 10:17:08+00:00,,0,radiohead/system-verification,32514570,SystemVerilog,system-verification,428,0,2015-05-07 17:32:08+00:00,[],
632,https://github.com/itsfrank/MinecraftHDL.git,2016-10-05 00:44:38+00:00,A Verilog synthesis flow for Minecraft redstone circuits,23,itsfrank/MinecraftHDL,70018711,SystemVerilog,MinecraftHDL,70554,1064,2024-04-13 08:11:13+00:00,[],
633,https://github.com/RoaLogic/RV12.git,2017-01-11 15:45:50+00:00,RISC-V CPU Core,50,RoaLogic/RV12,78653596,SystemVerilog,RV12,15659,272,2024-04-09 05:01:58+00:00,"['risc-v', '32-bit', '64bit', 'cpu']",
634,https://github.com/subbdue/systemverilog.io.git,2016-10-12 06:01:55+00:00,Code used in,28,subbdue/systemverilog.io,70668014,SystemVerilog,systemverilog.io,1034,151,2024-04-07 11:50:04+00:00,[],
635,https://github.com/azonenberg/starshipraider.git,2016-11-21 08:31:08+00:00,Open hardware test equipment,21,azonenberg/starshipraider,74342467,SystemVerilog,starshipraider,74903,139,2024-03-21 10:49:47+00:00,[],https://api.github.com/licenses/bsd-3-clause
636,https://github.com/GodelMachine/AHB2.git,2016-06-26 17:23:11+00:00,AMBA AHB 2.0 VIP in SystemVerilog UVM,62,GodelMachine/AHB2,62000083,SystemVerilog,AHB2,24,131,2024-03-21 13:43:36+00:00,[],https://api.github.com/licenses/apache-2.0
637,https://github.com/mayurkubavat/UVM-Examples.git,2016-07-18 15:57:08+00:00,UVM examples and projects,65,mayurkubavat/UVM-Examples,63617053,SystemVerilog,UVM-Examples,128,110,2024-04-04 08:00:57+00:00,[],https://api.github.com/licenses/apache-2.0
638,https://github.com/eliaskousk/parallella-riscv.git,2016-06-16 01:14:29+00:00,RISC-V Rocket Core on Parallella & ZedBoard Zynq FPGA Boards,29,eliaskousk/parallella-riscv,61251865,SystemVerilog,parallella-riscv,4173,94,2024-04-08 19:43:43+00:00,"['parallella', 'risc-v', 'rocket-chip', 'zynq', 'linux-kernel', 'zedboard', 'gsoc', 'gsoc-2016', 'rocket-core', 'petalinux']",
639,https://github.com/agalimberti/NoCRouter.git,2016-12-08 23:32:08+00:00,"RTL Network-on-Chip Router Design in SystemVerilog by Andrea Galimberti, Filippo Testa and Alberto Zeni",34,agalimberti/NoCRouter,75983863,SystemVerilog,NoCRouter,675,91,2024-04-09 14:34:11+00:00,"['network-on-chip', 'noc', 'router', 'systemverilog']",https://api.github.com/licenses/mit
640,https://github.com/intel/fpga-partial-reconfig.git,2016-12-01 23:35:13+00:00,"Tutorials, scripts and reference designs for the Intel FPGA partial reconfiguration (PR) design flow",43,intel/fpga-partial-reconfig,75342424,SystemVerilog,fpga-partial-reconfig,39393,83,2024-01-30 19:28:21+00:00,[],https://api.github.com/licenses/mit
641,https://github.com/azonenberg/antikernel-ipcores.git,2017-01-01 16:54:20+00:00,"FPGA IP cores for the Antikernel OS, intended to be included as a submodule in SoC integrations",9,azonenberg/antikernel-ipcores,77787623,SystemVerilog,antikernel-ipcores,1161,53,2024-04-09 19:51:09+00:00,[],https://api.github.com/licenses/bsd-3-clause
642,https://github.com/ucam-comparch/clarvi.git,2016-09-09 14:12:58+00:00,Clarvi simple RISC-V processor for teaching,16,ucam-comparch/clarvi,67804595,SystemVerilog,clarvi,50,51,2024-01-07 08:01:50+00:00,[],
643,https://github.com/pbing/FM_Radio.git,2016-05-31 17:41:49+00:00,Simple mono FM Radio.,29,pbing/FM_Radio,60110457,SystemVerilog,FM_Radio,1503,44,2024-03-14 06:59:08+00:00,"['systemverilog', 'fm-radio', 'fpga']",
644,https://github.com/nelsoncsc/easyUVM.git,2016-09-09 16:37:14+00:00,A simple UVM example with DPI ,14,nelsoncsc/easyUVM,67815231,SystemVerilog,easyUVM,8,33,2024-02-24 04:56:42+00:00,"['systemverilog-hdl', 'uvm', 'functional-verification']",https://api.github.com/licenses/mit
645,https://github.com/nelsoncsc/sv_image.git,2016-08-22 01:29:03+00:00,Reusable image processing modules in SystemVerilog,8,nelsoncsc/sv_image,66229996,SystemVerilog,sv_image,20,31,2024-01-18 11:22:48+00:00,"['image-processing', 'fpga', 'digital-filter', 'video-processing']",https://api.github.com/licenses/mit
646,https://github.com/anycore/anycore-riscv-src.git,2016-11-15 05:28:06+00:00,The RTL source for AnyCore RISC-V,16,anycore/anycore-riscv-src,73779460,SystemVerilog,anycore-riscv-src,1173,28,2024-04-09 05:01:06+00:00,[],
647,https://github.com/uvmdebug/uvm_debug.git,2016-11-06 04:01:30+00:00,UVM interactive debug library,14,uvmdebug/uvm_debug,72968977,SystemVerilog,uvm_debug,467,27,2023-08-29 00:07:58+00:00,"['systemverilog', 'uvm']",
648,https://github.com/besm6/micro-besm.git,2016-09-29 06:38:04+00:00,Replica of micro-BESM computer,5,besm6/micro-besm,69538400,SystemVerilog,micro-besm,111913,26,2024-03-07 01:07:05+00:00,[],https://api.github.com/licenses/mit
649,https://github.com/advanced-uvm/second_edition.git,2016-08-15 02:17:57+00:00,Code for the second edition of Advanced UVM.,14,advanced-uvm/second_edition,65697743,SystemVerilog,second_edition,699,25,2023-11-27 11:02:38+00:00,[],
650,https://github.com/zhelnio/mil1553-spi.git,2016-10-11 19:51:21+00:00,MIL-STD-1553 <-> SPI bridge,5,zhelnio/mil1553-spi,70629804,SystemVerilog,mil1553-spi,4212,25,2024-03-10 05:39:11+00:00,[],https://api.github.com/licenses/mit
651,https://github.com/amiq-consulting/yamm.git,2016-07-05 14:50:25+00:00,YAMM package repository,15,amiq-consulting/yamm,62645248,SystemVerilog,yamm,2157,23,2024-03-05 03:03:30+00:00,"['uvm', 'sv', 'yamm', 'systemverilog']",https://api.github.com/licenses/apache-2.0
652,https://github.com/maltevesper/JetStream-hardware.git,2016-06-26 16:11:00+00:00,,13,maltevesper/JetStream-hardware,61997184,SystemVerilog,JetStream-hardware,3565,22,2023-10-10 09:40:08+00:00,[],
653,https://github.com/Mochenx/sv_csv_parser.git,2016-07-13 02:54:00+00:00,"A CSV file parser, written in SystemVerilog",4,Mochenx/sv_csv_parser,63209116,SystemVerilog,sv_csv_parser,15,22,2024-01-07 09:18:26+00:00,[],https://api.github.com/licenses/lgpl-3.0
654,https://github.com/go2uvm/go2uvm.git,2016-09-02 04:46:11+00:00,"Main repo for Go2UVM source code, examples and apps",22,go2uvm/go2uvm,67190614,SystemVerilog,go2uvm,17145,18,2024-01-22 06:36:25+00:00,[],
655,https://github.com/Gateway91/AHB-APB_Bridge_UVM_Env.git,2016-05-26 14:25:09+00:00,AHB-APB UVM Verification Environment,4,Gateway91/AHB-APB_Bridge_UVM_Env,59756709,SystemVerilog,AHB-APB_Bridge_UVM_Env,148,17,2024-02-01 09:44:00+00:00,[],https://api.github.com/licenses/gpl-2.0
656,https://github.com/amiq-consulting/uvm_reg_to_ipxact.git,2017-01-20 18:32:47+00:00,,8,amiq-consulting/uvm_reg_to_ipxact,79585970,SystemVerilog,uvm_reg_to_ipxact,927,15,2023-10-31 11:15:49+00:00,[],
657,https://github.com/svunit/svmock.git,2017-02-02 02:53:19+00:00,A mock framework for use with SVUnit,4,svunit/svmock,80687664,SystemVerilog,svmock,215,15,2024-03-10 23:48:52+00:00,[],https://api.github.com/licenses/apache-2.0
658,https://github.com/joegrand/bsodomizer-hd-c5g.git,2016-08-05 07:16:31+00:00,BSODomizer HD: HDL for Cyclone V GX Starter Kit,2,joegrand/bsodomizer-hd-c5g,64997708,SystemVerilog,bsodomizer-hd-c5g,4610,15,2023-11-03 00:14:25+00:00,[],
659,https://github.com/celesteneary/sms.git,2016-12-11 21:35:29+00:00,Sega Master System in SystemVerilog,4,celesteneary/sms,76201492,SystemVerilog,sms,838,15,2023-11-17 00:55:52+00:00,[],https://api.github.com/licenses/gpl-2.0
660,https://github.com/alisemi/fpga-projects.git,2017-02-06 13:41:23+00:00,"FPGA Projects written using SystemVerilog, Verilog, and VHDL are put here in seperate folders.",5,alisemi/fpga-projects,81090984,SystemVerilog,fpga-projects,3762,13,2024-02-20 17:58:24+00:00,[],
661,https://github.com/CynicalApe/BASYS3-PONG.git,2017-01-27 10:57:11+00:00,BASYS 3 - PONG GAME,6,CynicalApe/BASYS3-PONG,80200387,SystemVerilog,BASYS3-PONG,88,13,2023-12-07 04:22:44+00:00,"['basys3', 'verilog', 'vhdl', 'basys-board', 'pong-game']",
662,https://github.com/yoonisi/R2FFT.git,2016-11-11 14:33:09+00:00,R2FFT is a fully synthesizable verilog module for doing the FFT on an FPGA or ASIC.,7,yoonisi/R2FFT,73484543,SystemVerilog,R2FFT,1005,11,2024-04-02 16:15:34+00:00,[],https://api.github.com/licenses/bsd-3-clause
663,https://github.com/wallento/wb2axi.git,2016-07-14 09:18:18+00:00,Wishbone to ARM AMBA 4 AXI,7,wallento/wb2axi,63321517,SystemVerilog,wb2axi,6,10,2023-09-28 17:02:25+00:00,[],
664,https://github.com/zhiyb/SVNES.git,2016-08-12 12:03:33+00:00,NES implementation using SystemVerilog (WIP),2,zhiyb/SVNES,65550250,SystemVerilog,SVNES,917,10,2023-08-23 05:50:34+00:00,[],
665,https://github.com/go2uvm/sva_traces.git,2016-09-02 16:55:56+00:00,Traces for SVA - SystemVerilog Assertions; Will use Go2UVM package to write traces and use uvm_report_mock to predict errors,4,go2uvm/sva_traces,67240009,SystemVerilog,sva_traces,13572,9,2021-11-18 14:16:15+00:00,[],https://api.github.com/licenses/apache-2.0
666,https://github.com/RoaLogic/memory.git,2017-01-10 17:14:11+00:00,Generic memory implementations,12,RoaLogic/memory,78555764,SystemVerilog,memory,54,9,2024-01-03 16:04:31+00:00,[],
667,https://github.com/mballance/amba_sys_ip.git,2016-06-23 22:24:50+00:00,AMBA-protocol system IP,6,mballance/amba_sys_ip,61840807,SystemVerilog,amba_sys_ip,52,9,2021-11-05 03:38:34+00:00,[],https://api.github.com/licenses/apache-2.0
668,https://github.com/sigasi/sigasi_demos.git,2016-06-30 13:00:29+00:00,,3,sigasi/sigasi_demos,62310897,SystemVerilog,sigasi_demos,40796,9,2023-11-04 15:46:28+00:00,[],
669,https://github.com/iDoka/GNSS-verilog-signal-simulator.git,2016-07-21 12:39:22+00:00,GNSS Signal Generator writen on Verilog HDL for SDR platform (currently BladeRF),4,iDoka/GNSS-verilog-signal-simulator,63868173,SystemVerilog,GNSS-verilog-signal-simulator,6,8,2024-04-11 01:50:50+00:00,[],
670,https://github.com/nelsoncsc/basic_uvmc_oct.git,2016-11-24 13:11:54+00:00,A simple UVM testbench using UVM Connect and Octave,1,nelsoncsc/basic_uvmc_oct,74674488,SystemVerilog,basic_uvmc_oct,8,8,2023-11-09 13:14:01+00:00,"['systemc', 'octave', 'uvm', 'functional-verification', 'systemverilog-hdl']",https://api.github.com/licenses/mit
671,https://github.com/rakeshgehalot/Ethernet_switch_verification.git,2016-10-21 04:42:11+00:00,Verification of Ethernet Switch System Verilog,1,rakeshgehalot/Ethernet_switch_verification,71530451,SystemVerilog,Ethernet_switch_verification,7,8,2024-01-31 08:05:14+00:00,[],
672,https://github.com/advanced-uvm/hawkins.git,2016-06-21 19:08:52+00:00,,3,advanced-uvm/hawkins,61659986,SystemVerilog,hawkins,5839,7,2021-10-07 15:00:45+00:00,[],
673,https://github.com/elegz/nnFPGA.git,2016-10-15 17:12:37+00:00,RTL for neural nets,2,elegz/nnFPGA,71002026,SystemVerilog,nnFPGA,34,7,2024-04-06 12:38:38+00:00,[],
674,https://github.com/C-L-G/AXI_BFM.git,2016-07-26 09:47:32+00:00,AXI 总线验证 模块,3,C-L-G/AXI_BFM,64209885,SystemVerilog,AXI_BFM,32,7,2023-12-15 02:17:37+00:00,[],https://api.github.com/licenses/gpl-3.0
675,https://github.com/nelsoncsc/sv_math.git,2016-06-26 17:15:44+00:00,"Reusable math modules (multiplication, division, square root and logarithm) in SystemVerilog",2,nelsoncsc/sv_math,61999808,SystemVerilog,sv_math,17,7,2024-04-05 20:41:07+00:00,"['systemverilog', 'logarithm', 'division', 'arithmetic-computation']",https://api.github.com/licenses/mit
676,https://github.com/GuzTech/verilog_ips.git,2017-02-03 00:47:42+00:00,Various IPs implemented in Verilog,2,GuzTech/verilog_ips,80783991,SystemVerilog,verilog_ips,22,7,2022-02-05 06:04:34+00:00,"['verilog', 'formal-verification', 'hardware', 'fpga', 'yosys']",https://api.github.com/licenses/isc
677,https://github.com/miguelangelo78/LEGv8-ISA.git,2016-09-16 01:40:52+00:00,"Implementation of the ARMv8's subset Instruction Set Architecture from the Book ""Computer Organization and Design: The Hardware Software Interface: ARM Edition"" by David A. Patterson and John L. Hennessy",1,miguelangelo78/LEGv8-ISA,68345036,SystemVerilog,LEGv8-ISA,81,6,2022-11-15 06:56:03+00:00,[],
678,https://github.com/ministrike3/ECE-385-Final-Project.git,2016-12-11 05:27:17+00:00,"System Verilog code to create a basic side scrolling, coin collecting mario-styled game for ECE 385 at UIUC",1,ministrike3/ECE-385-Final-Project,76156133,SystemVerilog,ECE-385-Final-Project,2486,6,2023-12-24 11:44:12+00:00,[],
679,https://github.com/ppujari24/SonyCellSPU.git,2016-09-26 06:53:56+00:00,Implementation of a Dual Issue Pipelined Multimedia Processor Architecture (SONY Cell SPU) in SystemVerilog,0,ppujari24/SonyCellSPU,69221711,SystemVerilog,SonyCellSPU,27,6,2023-12-06 06:12:41+00:00,[],
680,https://github.com/Ssssssstanley/Retrofitting-Concept-Vector-Representations-of-Medical-Concepts.git,2016-12-23 17:26:16+00:00,Retrofitting Concept Vectors ,1,Ssssssstanley/Retrofitting-Concept-Vector-Representations-of-Medical-Concepts,77240670,SystemVerilog,Retrofitting-Concept-Vector-Representations-of-Medical-Concepts,27355,5,2019-10-24 19:22:36+00:00,"['semantic', 'similarity-measures', 'relatedness']",
681,https://github.com/Lorea-Aldabaldetreku/Icestudio_proiektuak.git,2016-12-30 08:18:37+00:00,Proyectos básicos de Icestudio con la placa IceZum Alhambra,0,Lorea-Aldabaldetreku/Icestudio_proiektuak,77672267,SystemVerilog,Icestudio_proiektuak,13775,5,2020-10-19 17:05:35+00:00,[],
682,https://github.com/allanko/lasernet.git,2017-01-07 21:39:56+00:00,"TCP-like protocol over a laser-communication system, implemented on an FPGA",6,allanko/lasernet,78305265,SystemVerilog,lasernet,69949,4,2023-07-07 20:59:57+00:00,[],
683,https://github.com/calculuswhiz/verilator-6502.git,2016-12-07 04:43:42+00:00,"Revived the xilinx version, except minus all the ISE overhead",0,calculuswhiz/verilator-6502,75800075,SystemVerilog,verilator-6502,418,4,2023-11-03 17:23:50+00:00,[],
684,https://github.com/ciroceissler/sv_design_patterns.git,2016-06-30 02:04:50+00:00,Design Pattern with SystemVerilog,0,ciroceissler/sv_design_patterns,62271448,SystemVerilog,sv_design_patterns,6,4,2023-12-23 17:11:09+00:00,[],https://api.github.com/licenses/mit
685,https://github.com/alinaivanovaoff/moving_average.git,2016-09-02 11:44:30+00:00,Moving Average,2,alinaivanovaoff/moving_average,67218048,SystemVerilog,moving_average,19,4,2022-01-28 16:13:11+00:00,[],
686,https://github.com/alinaivanovaoff/cordic.git,2016-10-26 12:58:33+00:00,CORDIC algorithm for calculation of amplitude and phase of complex value,3,alinaivanovaoff/cordic,72003236,SystemVerilog,cordic,42,4,2022-09-08 12:57:16+00:00,[],https://api.github.com/licenses/gpl-3.0
687,https://github.com/tudortimi/vgm_svunit_utils.git,2016-08-07 10:18:03+00:00,Incubation area for new SVUnit features,2,tudortimi/vgm_svunit_utils,65127360,SystemVerilog,vgm_svunit_utils,37,4,2023-01-14 19:47:44+00:00,[],https://api.github.com/licenses/apache-2.0
688,https://github.com/aravindprakash/uvm.git,2016-12-06 20:16:50+00:00,UVM Examples,16,aravindprakash/uvm,75767480,SystemVerilog,uvm,38,4,2021-12-04 12:06:54+00:00,[],
689,https://github.com/ogvalt/hardware_design_course_vending_machine_design_and_verification.git,2016-12-14 22:19:05+00:00,This is a multilayer testbench for vending machine verification,2,ogvalt/hardware_design_course_vending_machine_design_and_verification,76501736,SystemVerilog,hardware_design_course_vending_machine_design_and_verification,48,4,2023-05-08 12:29:51+00:00,['verification'],
690,https://github.com/jason0342/DCLAB-final-project-Visuaudio.git,2016-12-24 13:40:09+00:00,,0,jason0342/DCLAB-final-project-Visuaudio,77284730,SystemVerilog,DCLAB-final-project-Visuaudio,31447,3,2023-09-08 17:18:40+00:00,[],
691,https://github.com/cpuex2016D/computer.git,2016-10-03 09:10:52+00:00,,2,cpuex2016D/computer,69855899,SystemVerilog,computer,221,3,2018-10-26 13:58:37+00:00,[],
692,https://github.com/eneskeles/noctavia.git,2017-01-03 14:39:00+00:00,FPGA piano with five notes on VGA screen,0,eneskeles/noctavia,77925065,SystemVerilog,noctavia,12,3,2022-08-20 21:00:21+00:00,"['systemverilog', 'fpga', 'piano-practice']",
693,https://github.com/himingway/Parallel_Multiplier.git,2016-11-14 16:13:06+00:00,A Parallel Multiplier Using SystemVerilog HDL,1,himingway/Parallel_Multiplier,73723224,SystemVerilog,Parallel_Multiplier,332,3,2023-05-16 22:43:16+00:00,"['systemverilog-hdl', 'multiplier']",https://api.github.com/licenses/mit
694,https://github.com/alinaivanovaoff/coding_style.git,2016-10-26 13:01:55+00:00,SystemVerilog Coding Style ,1,alinaivanovaoff/coding_style,72003547,SystemVerilog,coding_style,26,3,2021-05-29 19:22:01+00:00,[],https://api.github.com/licenses/gpl-3.0
695,https://github.com/elegz/sv_code_samples.git,2016-09-18 11:14:02+00:00,SystemVerilog code samples,2,elegz/sv_code_samples,68516494,SystemVerilog,sv_code_samples,18,3,2020-12-18 02:17:12+00:00,[],
696,https://github.com/juzhimin/CAN_UVM.git,2016-12-18 12:57:57+00:00,,0,juzhimin/CAN_UVM,76783008,SystemVerilog,CAN_UVM,156,3,2024-03-07 09:07:58+00:00,[],
697,https://github.com/nbrummel/uvm-templates.git,2016-09-06 17:23:04+00:00,This repo provides uvm templates to start a sv uvm project.,1,nbrummel/uvm-templates,67530728,SystemVerilog,uvm-templates,8,3,2024-04-07 07:51:41+00:00,[],https://api.github.com/licenses/apache-2.0
698,https://github.com/olivamadrigal/Advanced-Encryption-Standard.git,2016-07-01 21:39:40+00:00,Hardware Implementation of AES based on (FIPS) 197,1,olivamadrigal/Advanced-Encryption-Standard,62421128,SystemVerilog,Advanced-Encryption-Standard,586,3,2021-08-10 23:13:07+00:00,[],
699,https://github.com/regmeg/AES128_ASIC.git,2016-12-07 19:51:57+00:00,,1,regmeg/AES128_ASIC,75870439,SystemVerilog,AES128_ASIC,6762,3,2018-02-12 15:31:44+00:00,[],
700,https://github.com/wallento/uartdpi.git,2016-07-14 06:42:14+00:00,UART DPI module,0,wallento/uartdpi,63309544,SystemVerilog,uartdpi,8,3,2022-08-14 09:09:00+00:00,[],https://api.github.com/licenses/apache-2.0
701,https://github.com/alinaivanovaoff/trapez_shaper.git,2016-09-02 12:23:14+00:00,Trapezoidal Shaper,1,alinaivanovaoff/trapez_shaper,67220413,SystemVerilog,trapez_shaper,31,3,2021-05-29 19:23:53+00:00,[],
702,https://github.com/alexisfrjp/wiki.git,2016-07-13 22:40:36+00:00,Linux commands,1,alexisfrjp/wiki,63284330,SystemVerilog,wiki,6033,3,2022-12-15 10:15:15+00:00,[],
703,https://github.com/embeddedmoscow/HDL.git,2016-11-23 14:04:59+00:00,Verilog & SystemVerilog examples for articles,0,embeddedmoscow/HDL,74582305,SystemVerilog,HDL,2,3,2019-01-15 04:17:14+00:00,[],
704,https://github.com/anssprasad/UVM_Examples.git,2016-06-05 01:55:59+00:00,,2,anssprasad/UVM_Examples,60438581,SystemVerilog,UVM_Examples,5706,3,2022-08-24 08:55:29+00:00,[],
705,https://github.com/Digilent/CmodA7.git,2016-05-25 03:25:50+00:00,,2,Digilent/CmodA7,59627726,SystemVerilog,CmodA7,753,3,2018-06-09 14:33:32+00:00,[],
706,https://github.com/davidmcdonald13/FPGA-Physics-Simulator.git,2016-08-31 15:48:31+00:00,,0,davidmcdonald13/FPGA-Physics-Simulator,67051755,SystemVerilog,FPGA-Physics-Simulator,47,2,2023-10-14 23:34:29+00:00,[],
707,https://github.com/ti-rodrigues/SpacewireCodecSpwTCR.git,2016-10-05 14:28:00+00:00,,1,ti-rodrigues/SpacewireCodecSpwTCR,70068229,SystemVerilog,SpacewireCodecSpwTCR,16,2,2022-10-30 02:40:34+00:00,[],
708,https://github.com/szrlee/mips-cpu.git,2016-06-18 07:06:05+00:00,MIPS CPU using FPGA,1,szrlee/mips-cpu,61421679,SystemVerilog,mips-cpu,50,2,2020-03-25 15:28:21+00:00,"['mips-simulator', 'fpga', 'verilog']",
709,https://github.com/slee500/ece385-final.git,2016-11-06 06:09:20+00:00,ECE 385 Final Project,1,slee500/ece385-final,72973520,SystemVerilog,ece385-final,341687,2,2023-04-08 23:07:07+00:00,[],
710,https://github.com/richagnetto/Adaptive-Noise-Cancellation.git,2016-12-31 23:31:49+00:00,Adaptive Noise Canceller implemented on an Altera DE2 FPGA using the Fast-LMS algorithm,2,richagnetto/Adaptive-Noise-Cancellation,77759441,SystemVerilog,Adaptive-Noise-Cancellation,30,2,2024-01-30 05:02:39+00:00,[],
711,https://github.com/alterasoftware/design-flows.git,2016-06-24 16:30:33+00:00,Quartus Prime Pro Design Flows,5,alterasoftware/design-flows,61897806,SystemVerilog,design-flows,3655,2,2022-09-29 02:01:40+00:00,[],https://api.github.com/licenses/mit
712,https://github.com/vmanja16/Processor_Design.git,2016-08-28 05:01:28+00:00,Computer Design and Prototyping,0,vmanja16/Processor_Design,66750456,SystemVerilog,Processor_Design,1079,2,2020-07-07 02:41:17+00:00,[],
713,https://github.com/sharmaprakhar/zynq_ddr_design_ex.git,2016-07-29 17:47:54+00:00,simulation setup (written in verilog) to simulate the signals of an AXI master burst IPIF and user logic (designed in vivado design suite aimed at zynq devices based xilinx FPGAs),1,sharmaprakhar/zynq_ddr_design_ex,64499743,SystemVerilog,zynq_ddr_design_ex,13,2,2022-09-02 16:08:38+00:00,[],
714,https://github.com/ahartel/dendrigit.git,2016-05-25 10:20:31+00:00,Digital biologically inspired spiking neural network implementation,5,ahartel/dendrigit,59653663,SystemVerilog,dendrigit,217,2,2022-01-02 19:24:32+00:00,[],
715,https://github.com/s-okai/sv-math.git,2016-06-21 22:57:59+00:00,SystemVerilog library for common math operations.,2,s-okai/sv-math,61672791,SystemVerilog,sv-math,13,2,2020-12-18 02:17:22+00:00,[],https://api.github.com/licenses/apache-2.0
716,https://github.com/peshwara/ScalarProcessor.git,2016-10-04 06:25:55+00:00,"Functional verification of Scalar Processor using System Verilog in a layered approach covering randomization, functional verification, Interface, OOP concepts",0,peshwara/ScalarProcessor,69939097,SystemVerilog,ScalarProcessor,12,2,2022-07-05 21:14:03+00:00,[],
717,https://github.com/jflazaro/CSE31L-128-Bit-ALU.git,2016-10-23 23:32:12+00:00,Group Project on 128 bit ALU,0,jflazaro/CSE31L-128-Bit-ALU,71735987,SystemVerilog,CSE31L-128-Bit-ALU,3738,2,2022-03-06 17:03:25+00:00,[],
718,https://github.com/hezt/SM3_Hash_Alg.git,2016-12-14 08:45:21+00:00,A SM3 hash function algorithm implemented on FPGA board.,1,hezt/SM3_Hash_Alg,76441120,SystemVerilog,SM3_Hash_Alg,15,2,2018-03-12 00:46:40+00:00,[],
719,https://github.com/nelsoncsc/basic_uvmc.git,2016-10-16 17:57:22+00:00,A simple testbench with two refmods using UVM Connect,2,nelsoncsc/basic_uvmc,71067380,SystemVerilog,basic_uvmc,10,2,2023-03-02 16:50:06+00:00,"['systemverilog-hdl', 'uvm', 'functional-verification', 'systemc']",https://api.github.com/licenses/mit
720,https://github.com/russeree/fpga_sobel.git,2016-08-01 10:56:16+00:00,Optimized Sobel Filter for the Xilinx 7 series FPGAs,0,russeree/fpga_sobel,64659792,SystemVerilog,fpga_sobel,33,2,2023-01-28 07:45:49+00:00,[],https://api.github.com/licenses/mit
721,https://github.com/pmallya/verilog_logic_blocks.git,2016-05-25 02:27:49+00:00,An attempt to have as many basic logic blocks as I can.,0,pmallya/verilog_logic_blocks,59624355,SystemVerilog,verilog_logic_blocks,64,2,2022-06-23 19:20:12+00:00,[],
722,https://github.com/Viraldoshi1989/Verification_IP.git,2016-11-18 20:56:06+00:00,Verification IP of AMBA 3 AXI 3 (SystemVerilog),0,Viraldoshi1989/Verification_IP,74165699,SystemVerilog,Verification_IP,10,2,2023-07-04 11:21:04+00:00,[],https://api.github.com/licenses/mit
723,https://github.com/alinaivanovaoff/convolution.git,2016-11-16 13:04:23+00:00,Convolution,1,alinaivanovaoff/convolution,73920865,SystemVerilog,convolution,22,2,2021-05-29 19:21:50+00:00,[],
724,https://github.com/evanlissoos/SLC3-GPU.git,2016-12-21 19:04:21+00:00,Extended the SLC-3 instruction set to include graphics operations for a final class project.,0,evanlissoos/SLC3-GPU,77078763,SystemVerilog,SLC3-GPU,20,2,2019-10-15 16:31:08+00:00,[],
725,https://github.com/wmy367/axi_vdma.git,2016-08-10 09:42:54+00:00,,0,wmy367/axi_vdma,65370473,SystemVerilog,axi_vdma,317,2,2021-08-08 11:39:13+00:00,[],
726,https://github.com/Parth1693/LC3-Verification.git,2016-11-06 01:43:23+00:00,Repo for ECE745 LC3 Verification Project,1,Parth1693/LC3-Verification,72963927,SystemVerilog,LC3-Verification,860,2,2024-03-31 02:37:07+00:00,[],
727,https://github.com/mazrouei/SimpleSwitch_SystemVerilog_Verification.git,2016-09-22 03:03:28+00:00,,0,mazrouei/SimpleSwitch_SystemVerilog_Verification,68879310,SystemVerilog,SimpleSwitch_SystemVerilog_Verification,4,2,2024-03-05 08:03:13+00:00,[],
728,https://github.com/mwbrady/Lab5.git,2016-09-19 20:09:12+00:00,Code for lab 5 8-bit multiplier,0,mwbrady/Lab5,68642215,SystemVerilog,Lab5,12,1,2017-04-19 20:50:27+00:00,[],
729,https://github.com/anycore/anycore-pisa.git,2016-11-15 05:25:09+00:00,The AnyCore toolset targetting the PISA ISA,3,anycore/anycore-pisa,73779313,SystemVerilog,anycore-pisa,723,1,2022-05-02 01:22:55+00:00,[],
730,https://github.com/nbkumar/uvm_object_automation.git,2016-07-21 16:33:30+00:00,Example code to demonstrate uvm_object for ethernet packet,0,nbkumar/uvm_object_automation,63885600,SystemVerilog,uvm_object_automation,2,1,2019-10-21 08:18:45+00:00,[],
731,https://github.com/icdesigner2004/LOWRISC-T.git,2016-07-27 14:50:34+00:00,,0,icdesigner2004/LOWRISC-T,64317149,SystemVerilog,LOWRISC-T,2266,1,2023-11-08 05:51:49+00:00,[],
732,https://github.com/nax47/ECE-211-Pong-Project.git,2016-12-19 22:28:57+00:00,FPGA implementation of a Pong Arcade Game written in SystemVerilog,0,nax47/ECE-211-Pong-Project,76902407,SystemVerilog,ECE-211-Pong-Project,189,1,2020-07-31 04:24:55+00:00,[],
733,https://github.com/AlexeyShashkov/RSA.git,2016-12-22 03:07:38+00:00,RSA Cryptographic Processor IP (SystemVerilog and UPF),0,AlexeyShashkov/RSA,77106870,SystemVerilog,RSA,20419,1,2019-04-05 19:43:32+00:00,[],
734,https://github.com/sridhargunnam/mipsR3000.git,2016-10-11 21:42:34+00:00,,0,sridhargunnam/mipsR3000,70637840,SystemVerilog,mipsR3000,13,1,2018-12-24 14:31:49+00:00,[],
735,https://github.com/balanx/LogicDesignLib.git,2016-10-13 03:12:07+00:00,A verilog library for digital circuit design,0,balanx/LogicDesignLib,70764354,SystemVerilog,LogicDesignLib,108,1,2022-12-14 22:38:49+00:00,[],https://api.github.com/licenses/apache-2.0
736,https://github.com/SemperAnte/audioCodecDriver.git,2016-10-17 16:27:13+00:00,,0,SemperAnte/audioCodecDriver,71158522,SystemVerilog,audioCodecDriver,118,1,2021-05-27 07:08:23+00:00,[],
737,https://github.com/cpehle/aurora.git,2016-08-09 04:29:28+00:00,Prototype implementation of aurora link,0,cpehle/aurora,65262934,SystemVerilog,aurora,1,1,2023-02-10 23:33:36+00:00,[],
738,https://github.com/lki1354/hdl_projects.git,2017-01-09 18:32:44+00:00,small projects which are written during FHV seminar,0,lki1354/hdl_projects,78456851,SystemVerilog,hdl_projects,1837,1,2017-01-15 01:14:35+00:00,[],https://api.github.com/licenses/mit
739,https://github.com/vishalsg/LCD-controller-LPC2478-.git,2016-05-29 21:49:35+00:00,,1,vishalsg/LCD-controller-LPC2478-,59965281,SystemVerilog,LCD-controller-LPC2478-,514,1,2022-05-20 08:23:32+00:00,[],
740,https://github.com/mballance/oc_wb_ip.git,2016-06-02 00:50:47+00:00,Wishbone-based IP blocks from opencores.org wrapped up with SystemVerilog interfaces,0,mballance/oc_wb_ip,60220875,SystemVerilog,oc_wb_ip,840,1,2023-02-08 11:02:41+00:00,[],https://api.github.com/licenses/apache-2.0
741,https://github.com/sidharrthnarasimhan/uvm_logic.git,2016-11-21 18:06:05+00:00,sample uvm complete structure for beginners ,1,sidharrthnarasimhan/uvm_logic,74391563,SystemVerilog,uvm_logic,8,1,2017-05-27 02:44:32+00:00,[],
742,https://github.com/zrounds/Snake-ASM.git,2016-07-15 15:23:52+00:00,Assembly language version of Snake. The game was developed for use on a programmable logic device for which I had developed a system verilog implementation of a simplified MIPS processor. It utilizes a display implemented as an array of characters from a hard-coded character set and features a module to handle keyboard input. The only shortcoming of the game is that the pills for the snake to eat are read out of a pre-defined chunk of memory. This is because my MIPS implementation lacked a pseudo-random number generator for lack of time. The system verilog MIPS implementation is included. ,0,zrounds/Snake-ASM,63431787,SystemVerilog,Snake-ASM,4242,1,2017-05-06 06:10:15+00:00,[],
743,https://github.com/nbkumar/uvm_simulation_phases.git,2016-07-22 08:38:13+00:00,Bare Minumum framework for umv_simulation_phases,0,nbkumar/uvm_simulation_phases,63937839,SystemVerilog,uvm_simulation_phases,5,1,2019-10-21 08:18:59+00:00,[],
744,https://github.com/pradyuman/mips-processor.git,2016-08-27 20:41:37+00:00,MIPS dualcore processor with pipelining and caching,0,pradyuman/mips-processor,66734662,SystemVerilog,mips-processor,460,1,2023-03-10 08:12:32+00:00,[],
745,https://github.com/brian-rieder/mips-processor.git,2016-09-01 17:25:34+00:00,Processor designed to operate on the Altera Cyclone IV FPGA as part of ECE437: Introduction to Digital Computer Design,1,brian-rieder/mips-processor,67151948,SystemVerilog,mips-processor,19983,1,2018-01-30 23:04:07+00:00,[],
746,https://github.com/agnicol88/Priority_4_to_1_Mux.git,2016-12-09 16:10:40+00:00,"4-to-1 Priority Mux, implemented is SystemVerilog.",0,agnicol88/Priority_4_to_1_Mux,76050353,SystemVerilog,Priority_4_to_1_Mux,32,1,2022-01-28 20:50:50+00:00,[],https://api.github.com/licenses/gpl-3.0
747,https://github.com/KazukiChiyo/Modified-MIPS.git,2017-01-23 21:46:53+00:00,"This is a modified version of the 32-bit MIPS microprocessor. Please refer to ""manual.pdf"" for more information.",0,KazukiChiyo/Modified-MIPS,79851621,SystemVerilog,Modified-MIPS,1301,1,2018-02-16 02:05:57+00:00,"['mips', 'systemverilog', 'assembler', 'fpga', 'c', 'fpu', 'alu', 'memory-management', 'vga-driver']",
748,https://github.com/Lars139/ECE474.git,2016-06-25 10:59:48+00:00,ECE474 - Spring 2015 (VLSI Design class/projects),0,Lars139/ECE474,61939367,SystemVerilog,ECE474,20067,1,2018-06-04 03:33:29+00:00,[],
749,https://github.com/nbkumar/uvm_hello_world.git,2016-07-20 10:27:04+00:00,simple example demonstrating uvm hello world,1,nbkumar/uvm_hello_world,63772587,SystemVerilog,uvm_hello_world,1,1,2019-10-21 08:17:54+00:00,[],
750,https://github.com/kc285/ethernet.git,2016-07-14 14:41:01+00:00,Udemy project 2x2 ethernet switch,1,kc285/ethernet,63344439,SystemVerilog,ethernet,16,1,2020-06-10 12:18:26+00:00,[],
751,https://github.com/UCI-31L-Fall2016/Final-Project.git,2016-11-22 05:29:09+00:00,,2,UCI-31L-Fall2016/Final-Project,74437663,SystemVerilog,Final-Project,5,1,2016-11-24 02:13:00+00:00,[],
752,https://github.com/atrifex/Contra-SV.git,2016-10-15 08:58:49+00:00,Old school NES game contra implemented completely in SystemVerilog.,0,atrifex/Contra-SV,70977393,SystemVerilog,Contra-SV,117113,1,2021-02-19 23:00:12+00:00,[],
753,https://github.com/melt-umn/ableC-algebraic-data-types.git,2016-12-31 01:48:26+00:00,ableC extension for algebraic data types,0,melt-umn/ableC-algebraic-data-types,77720006,SystemVerilog,ableC-algebraic-data-types,413,1,2022-01-15 18:36:28+00:00,[],https://api.github.com/licenses/lgpl-3.0
754,https://github.com/himito/is2uppaal.git,2017-01-20 09:07:51+00:00,Tool to translate an interactive scenario written in i-score into its UPPAAL model.,0,himito/is2uppaal,79543811,SystemVerilog,is2uppaal,1924,1,2023-06-17 03:40:44+00:00,"['uppaall', 'timed-automata', 'ocaml', 'i-score']",
755,https://github.com/HuseyinOrkun/8x8-Led-Matrix-Tetris.git,2017-02-06 16:26:19+00:00,,0,HuseyinOrkun/8x8-Led-Matrix-Tetris,81106998,SystemVerilog,8x8-Led-Matrix-Tetris,391,1,2017-05-08 21:54:30+00:00,[],
756,https://github.com/meagtan/cs-223-project.git,2017-01-12 11:16:48+00:00,Digital design project implementing checkers in SystemVerilog,0,meagtan/cs-223-project,78737898,SystemVerilog,cs-223-project,14,1,2023-03-05 03:13:23+00:00,[],https://api.github.com/licenses/lgpl-3.0
757,https://github.com/Beck-Sisyphus/EE271.git,2016-06-01 17:50:23+00:00,With professor Scott Hauck at University of Washington,0,Beck-Sisyphus/EE271,60198793,SystemVerilog,EE271,26942,1,2021-02-18 16:41:23+00:00,[],
758,https://github.com/Arnab035/RISC-Processor.git,2017-02-03 00:15:27+00:00,Bleh Project for RISC-V5 Processor that handles RV64IM instructions with 2-way set associative Cache and 5-stage Pipeline with a 2-bit saturated branch predictor,1,Arnab035/RISC-Processor,80782160,SystemVerilog,RISC-Processor,214,1,2023-04-18 10:19:46+00:00,"['verilog', 'systemverilog']",https://api.github.com/licenses/mit
759,https://github.com/cellfoneguy/kNN-network.git,2017-02-11 03:10:57+00:00,18-340 Project 1: k-NN,0,cellfoneguy/kNN-network,81627102,SystemVerilog,kNN-network,21,1,2020-05-09 16:31:03+00:00,[],
760,https://github.com/elegz/filter2d.git,2016-09-18 12:43:12+00:00,Local filter for image/video processing,1,elegz/filter2d,68520872,SystemVerilog,filter2d,8,1,2017-11-30 13:37:23+00:00,[],
761,https://github.com/nelsoncsc/basicSV.git,2016-10-10 20:31:58+00:00,Very basic SystemVerilog examples,0,nelsoncsc/basicSV,70526310,SystemVerilog,basicSV,1353,1,2022-06-03 19:48:39+00:00,"['basics', 'systemverilog-hdl', 'examples']",https://api.github.com/licenses/mit
762,https://github.com/loserking/ECE-411.git,2016-09-08 06:17:40+00:00,5 stage pipeline processor with full LC3b and LC3x implementation and two level cache memory system implemented on SystemVerilog,0,loserking/ECE-411,67674373,SystemVerilog,ECE-411,8437,1,2022-10-14 11:14:44+00:00,[],
763,https://github.com/fl4shk/jolt80_cpu.git,2016-11-17 21:43:25+00:00,This is a small CPU I'm developing to practice my SystemVerilog skills and CPU implementation skills,0,fl4shk/jolt80_cpu,74070131,SystemVerilog,jolt80_cpu,288,1,2017-01-16 03:26:33+00:00,[],https://api.github.com/licenses/gpl-3.0
764,https://github.com/annwuhoo/tetris-sysverilog.git,2016-08-16 04:34:04+00:00,SystemVerilog Design Project created April 2016 - May 2016 at UIUC,0,annwuhoo/tetris-sysverilog,65787742,SystemVerilog,tetris-sysverilog,1866,1,2021-05-29 22:46:50+00:00,[],
765,https://github.com/iambate/riscv.git,2017-01-31 20:44:11+00:00,,1,iambate/riscv,80560361,SystemVerilog,riscv,12075,1,2021-11-12 21:43:40+00:00,[],
766,https://github.com/Smolyarov/crossbar_demo.git,2016-06-15 12:02:15+00:00,,0,Smolyarov/crossbar_demo,61204762,SystemVerilog,crossbar_demo,37,1,2019-11-26 02:09:44+00:00,[],
767,https://github.com/UCI-31L-Fall2016/Lab3.git,2016-10-11 05:18:31+00:00,,0,UCI-31L-Fall2016/Lab3,70558600,SystemVerilog,Lab3,5,1,2016-10-25 22:33:02+00:00,[],
768,https://github.com/SemperAnte/spiSlave.git,2016-09-19 16:00:41+00:00,,0,SemperAnte/spiSlave,68621811,SystemVerilog,spiSlave,22,1,2019-09-09 07:21:18+00:00,[],
769,https://github.com/onurkulak/Space-Impact-Reborn-CS233-Project.git,2017-01-15 20:19:21+00:00,A space shooter game implemented on 8x8 Led Dot Matrix using System Verilog HDL,0,onurkulak/Space-Impact-Reborn-CS233-Project,79057055,SystemVerilog,Space-Impact-Reborn-CS233-Project,16,1,2022-04-26 20:05:45+00:00,[],
770,https://github.com/dh73/UVM_Learnings.git,2017-02-16 03:18:40+00:00,UVM for personal learnings repo,0,dh73/UVM_Learnings,82134006,SystemVerilog,UVM_Learnings,1,1,2022-07-02 23:14:29+00:00,[],
771,https://github.com/verification-gentleman-blog/testing_seqs_and_props.git,2016-08-15 15:56:28+00:00,,2,verification-gentleman-blog/testing_seqs_and_props,65744940,SystemVerilog,testing_seqs_and_props,14,1,2023-03-23 14:57:46+00:00,[],https://api.github.com/licenses/apache-2.0
772,https://github.com/ece337/bitcoin-miner.git,2016-11-15 16:29:57+00:00,an asic bitcoin miner,0,ece337/bitcoin-miner,73832973,SystemVerilog,bitcoin-miner,541,1,2021-01-10 16:40:00+00:00,[],
773,https://github.com/swlpark/resim.git,2016-11-26 00:21:09+00:00,,0,swlpark/resim,74795331,SystemVerilog,resim,15985,1,2017-09-11 21:28:51+00:00,[],
774,https://github.com/quioxl/tick2trade.git,2017-01-23 18:18:55+00:00,,0,quioxl/tick2trade,79833245,SystemVerilog,tick2trade,893,1,2019-03-05 22:40:28+00:00,[],
775,https://github.com/ieee-uiuc/system-verilog-workshop.git,2016-11-05 22:41:28+00:00,FSMs in System Verilog,0,ieee-uiuc/system-verilog-workshop,72957339,SystemVerilog,system-verilog-workshop,1,1,2016-11-12 08:05:54+00:00,[],
776,https://github.com/wafrelka/felis-core.git,2016-10-04 07:18:20+00:00,CPU for FELIS architecture,0,wafrelka/felis-core,69942158,SystemVerilog,felis-core,182,1,2023-01-28 16:32:10+00:00,[],
777,https://github.com/alpers-git/Dino-Jumper.git,2017-02-06 19:39:03+00:00,CS223 Course Project made for BASYS3 FPGA and 8x8 dot Matrix using SystemVerilog,0,alpers-git/Dino-Jumper,81124470,SystemVerilog,Dino-Jumper,6,1,2023-11-17 02:17:42+00:00,[],
778,https://github.com/nbdd0121/lowrisc-videox.git,2016-08-17 12:16:50+00:00,Video accelerator for lowRISC SoC,1,nbdd0121/lowrisc-videox,65905005,SystemVerilog,lowrisc-videox,37,1,2022-03-16 22:56:50+00:00,[],
779,https://github.com/AloriumTechnology/XLR8SPI.git,2016-11-02 16:39:49+00:00,Library for extra SPI ports on the XLR8 board.,0,AloriumTechnology/XLR8SPI,72660303,SystemVerilog,XLR8SPI,21502,1,2022-07-11 21:38:36+00:00,[],https://api.github.com/licenses/lgpl-3.0
780,https://github.com/SQingXu/Comp541.git,2017-01-15 14:57:46+00:00,,0,SQingXu/Comp541,79039335,SystemVerilog,Comp541,3338,1,2018-01-30 22:45:40+00:00,[],
781,https://github.com/tsimons89/RE_optical_flow_fpga.git,2017-01-31 15:50:03+00:00,,1,tsimons89/RE_optical_flow_fpga,80534960,SystemVerilog,RE_optical_flow_fpga,24,1,2019-01-24 02:09:21+00:00,[],
782,https://github.com/Tatsuonline/ECE-337-Lab.git,2017-01-22 05:22:26+00:00,An introduction to application specific integrated circuits (ASIC) design.,0,Tatsuonline/ECE-337-Lab,79695638,SystemVerilog,ECE-337-Lab,1586,1,2022-04-08 12:38:26+00:00,[],https://api.github.com/licenses/gpl-3.0
783,https://github.com/SemperAnte/i2cMaster.git,2016-09-20 14:43:37+00:00,,0,SemperAnte/i2cMaster,68721793,SystemVerilog,i2cMaster,46,0,2016-09-20 14:44:25+00:00,[],
784,https://github.com/SemperAnte/cordic.git,2016-09-20 14:56:48+00:00,Calculation of cosine/sine/magnitude/phase with CORDIC algorithm.,0,SemperAnte/cordic,68723083,SystemVerilog,cordic,67,0,2021-09-07 13:37:35+00:00,[],
785,https://github.com/ryouhaku/system-verilog.git,2016-09-17 14:32:20+00:00,,0,ryouhaku/system-verilog,68457316,SystemVerilog,system-verilog,2,0,2016-09-17 14:49:09+00:00,[],
786,https://github.com/SagarThakkar/Hardware-Generation-Tool-For-Matrix-Vector-Multiplication.git,2016-07-04 23:44:38+00:00,Hardware Generation Tool for Matrix Vector Multiplication,0,SagarThakkar/Hardware-Generation-Tool-For-Matrix-Vector-Multiplication,62593221,SystemVerilog,Hardware-Generation-Tool-For-Matrix-Vector-Multiplication,24857,0,2016-07-04 23:49:07+00:00,[],
787,https://github.com/WilliamsTr/Pindel.git,2017-02-16 02:27:07+00:00,,0,WilliamsTr/Pindel,82129830,SystemVerilog,Pindel,93449,0,2017-02-16 02:33:22+00:00,[],https://api.github.com/licenses/gpl-3.0
788,https://github.com/chetanrbb/AXI_APB-Bridge.git,2017-02-20 22:03:58+00:00,,0,chetanrbb/AXI_APB-Bridge,82607366,SystemVerilog,AXI_APB-Bridge,24,0,2017-02-20 22:17:19+00:00,[],https://api.github.com/licenses/mit
789,https://github.com/ayushjain7/fhm.git,2016-11-01 17:38:27+00:00,,0,ayushjain7/fhm,72560492,SystemVerilog,fhm,7,0,2016-11-01 17:48:15+00:00,[],
790,https://github.com/KennethWilke/sv-synchronizer.git,2016-11-03 13:49:21+00:00,A synchronizer register implementation,0,KennethWilke/sv-synchronizer,72749891,SystemVerilog,sv-synchronizer,1,0,2023-07-02 01:35:28+00:00,[],https://api.github.com/licenses/isc
791,https://github.com/Masshat/sv.git,2016-07-01 00:33:24+00:00,System Verilog,8,Masshat/sv,62350756,SystemVerilog,sv,172,0,2018-04-22 20:31:49+00:00,[],
792,https://github.com/selinozdas/GuitarMaster.git,2017-01-07 10:03:21+00:00,Fake Guitar Hero implemented on FPGA. No one's gonna play it. No one.,0,selinozdas/GuitarMaster,78271681,SystemVerilog,GuitarMaster,14,0,2018-01-06 14:23:21+00:00,[],
793,https://github.com/rakoskr6/ece437.git,2017-01-19 03:13:49+00:00,Purdue ECE 437,1,rakoskr6/ece437,79410335,SystemVerilog,ece437,844,0,2018-08-11 21:27:32+00:00,[],
794,https://github.com/khaled-e-a/acdma-crossbar.git,2016-12-11 21:03:18+00:00,System-Verilog implementation of the ACDMA crossbar ,0,khaled-e-a/acdma-crossbar,76199804,SystemVerilog,acdma-crossbar,7,0,2018-11-25 10:33:15+00:00,"['verilog', 'system-on-chip', 'network-on-chip']",https://api.github.com/licenses/mit
795,https://github.com/solvery/lang_features_verilog.git,2016-12-05 12:26:09+00:00,lang_features_verilog,0,solvery/lang_features_verilog,75622523,SystemVerilog,lang_features_verilog,19,0,2016-12-05 12:28:35+00:00,[],
796,https://github.com/DevinStoen/ARM_Microprocessor.git,2016-10-14 23:10:02+00:00,"Develop and simulate a simple, pipelined ARM microprocessor. Labs #1, Regfile.",0,DevinStoen/ARM_Microprocessor,70953333,SystemVerilog,ARM_Microprocessor,119,0,2016-10-14 23:12:58+00:00,[],
797,https://github.com/rrivg/spicebox.git,2016-10-18 00:28:49+00:00,,0,rrivg/spicebox,71192791,SystemVerilog,spicebox,9,0,2017-03-07 02:21:49+00:00,[],
798,https://github.com/yenng/FYP_DrowsinessDetector.git,2016-08-30 00:52:04+00:00,,0,yenng/FYP_DrowsinessDetector,66892676,SystemVerilog,FYP_DrowsinessDetector,836590,0,2017-12-27 07:19:45+00:00,[],
799,https://github.com/yammouch/svlog_lesson.git,2016-08-17 03:02:21+00:00,,0,yammouch/svlog_lesson,65871398,SystemVerilog,svlog_lesson,59,0,2018-07-12 05:13:20+00:00,[],
800,https://github.com/robertmlinden/e155-tetris.git,2016-11-09 04:48:32+00:00,LED Tetris: Paul Slaats and Robert Linden's E155 (MicroProcessors) Final Project.,0,robertmlinden/e155-tetris,73253058,SystemVerilog,e155-tetris,1038,0,2023-07-06 15:16:27+00:00,[],
801,https://github.com/leandro1989/Leandro_Ex01_MB_SV.git,2016-11-20 13:22:01+00:00,Exercício para criar contadores em SistemVerilog,0,leandro1989/Leandro_Ex01_MB_SV,74275453,SystemVerilog,Leandro_Ex01_MB_SV,7,0,2016-11-20 16:26:53+00:00,[],
802,https://github.com/ausshir/MOD465.git,2017-01-18 05:43:43+00:00,EE465 Cable Modem design files,0,ausshir/MOD465,79307641,SystemVerilog,MOD465,126706,0,2017-07-19 04:50:30+00:00,[],https://api.github.com/licenses/mit
803,https://github.com/AislanJefferson/Aislan_display7seg.git,2016-11-25 13:44:59+00:00,,0,AislanJefferson/Aislan_display7seg,74761805,SystemVerilog,Aislan_display7seg,0,0,2016-11-25 13:47:49+00:00,[],
804,https://github.com/ThiHenrique/ThiagoHenrique_Ex01_MB_SV.git,2016-11-22 13:55:43+00:00,,0,ThiHenrique/ThiagoHenrique_Ex01_MB_SV,74477399,SystemVerilog,ThiagoHenrique_Ex01_MB_SV,7,0,2016-11-22 18:22:07+00:00,[],
805,https://github.com/satputeaditya/Weighted_round_robbin_arbiter.git,2016-12-04 12:14:44+00:00,,0,satputeaditya/Weighted_round_robbin_arbiter,75535324,SystemVerilog,Weighted_round_robbin_arbiter,181,0,2016-12-10 20:35:40+00:00,[],
806,https://github.com/e9brown/141L_Lab4.git,2016-12-06 19:46:38+00:00,,0,e9brown/141L_Lab4,75765383,SystemVerilog,141L_Lab4,2739,0,2016-12-06 20:50:59+00:00,[],
807,https://github.com/kuhataku/tinymips.git,2017-02-20 23:13:09+00:00,,0,kuhataku/tinymips,82612441,SystemVerilog,tinymips,30,0,2017-02-20 23:16:40+00:00,[],
808,https://github.com/Fitzy97/cs161.git,2016-12-09 17:31:52+00:00,,0,Fitzy97/cs161,76056402,SystemVerilog,cs161,100,0,2016-12-09 17:36:42+00:00,[],
809,https://github.com/dschlai2/BarneyLights.git,2016-12-21 19:41:20+00:00,Test,0,dschlai2/BarneyLights,77081067,SystemVerilog,BarneyLights,5,0,2016-12-21 19:43:32+00:00,[],
810,https://github.com/KennethWilke/hello-afu-vivado.git,2016-08-02 14:50:21+00:00,,0,KennethWilke/hello-afu-vivado,64765670,SystemVerilog,hello-afu-vivado,26,0,2016-08-02 17:18:49+00:00,[],
811,https://github.com/tetranoir/sinm-alu.git,2017-02-05 22:11:44+00:00,,0,tetranoir/sinm-alu,81025993,SystemVerilog,sinm-alu,6469,0,2017-02-05 22:26:12+00:00,[],
812,https://github.com/mikeev261/Arty_LED_test.git,2017-01-30 04:59:45+00:00,Simple Arty (ARTIX7 dev kit) LED design. ,0,mikeev261/Arty_LED_test,80394959,SystemVerilog,Arty_LED_test,8,0,2017-02-20 21:39:47+00:00,[],
813,https://github.com/ebatuhankaynak/system-verilog-tetris.git,2017-02-06 16:37:37+00:00,,0,ebatuhankaynak/system-verilog-tetris,81108031,SystemVerilog,system-verilog-tetris,7,0,2017-02-06 16:46:59+00:00,[],
814,https://github.com/xiao81/ECE437.git,2017-02-08 01:24:18+00:00,Computer Design and Prototyping,0,xiao81/ECE437,81273179,SystemVerilog,ECE437,788,0,2017-11-11 17:34:53+00:00,[],
815,https://github.com/BerkMandiracioglu/Diamond-Explorer-Game.git,2017-01-31 10:00:27+00:00,This is a game that was implemented on a FPGA device called Basys3 using Systemverilog. ,0,BerkMandiracioglu/Diamond-Explorer-Game,80508924,SystemVerilog,Diamond-Explorer-Game,9,0,2017-03-04 13:07:48+00:00,[],
816,https://github.com/gussmith23/calc1_example.git,2016-10-17 13:31:32+00:00,,0,gussmith23/calc1_example,71141834,SystemVerilog,calc1_example,28,0,2024-04-05 20:46:33+00:00,[],
817,https://github.com/CharlieAnderson/ece411.git,2016-09-24 00:01:34+00:00,,0,CharlieAnderson/ece411,69068726,SystemVerilog,ece411,4234,0,2018-11-03 17:48:53+00:00,[],
818,https://github.com/thaiduong1309/64-bit-Processor.git,2016-10-27 22:19:55+00:00,,0,thaiduong1309/64-bit-Processor,72152768,SystemVerilog,64-bit-Processor,8988,0,2016-11-18 05:57:39+00:00,[],
819,https://github.com/bernardoabreu/CSEE4840.git,2017-01-18 19:50:01+00:00,Final project for the CSEE 4840 2016 Spring class at Columbia University,0,bernardoabreu/CSEE4840,79377725,SystemVerilog,CSEE4840,119,0,2017-01-18 19:54:21+00:00,[],
820,https://github.com/BW0ng/High-Speed-Arthmetic.git,2017-02-01 23:49:52+00:00,,0,BW0ng/High-Speed-Arthmetic,80676682,SystemVerilog,High-Speed-Arthmetic,11,0,2018-06-23 15:50:16+00:00,['systemverilog'],
821,https://github.com/Tatsuonline/ECE-437.git,2017-01-22 06:35:48+00:00,The most difficult course at Purdue. Completed with github.com/CrocKim.,0,Tatsuonline/ECE-437,79699052,SystemVerilog,ECE-437,18930,0,2017-01-22 06:40:36+00:00,[],https://api.github.com/licenses/gpl-3.0
822,https://github.com/melt-umn/ableC-goConcurrency.git,2017-01-30 22:33:10+00:00,An implementation in silver to add channels and goroutine equivalents from Go to ableC,0,melt-umn/ableC-goConcurrency,80470599,SystemVerilog,ableC-goConcurrency,717,0,2017-05-30 19:53:06+00:00,[],
823,https://github.com/CiceraRodrigues/Cicera_Ex01_MB_SV.git,2016-11-22 18:26:15+00:00,Contador em SystemVerilog,0,CiceraRodrigues/Cicera_Ex01_MB_SV,74501615,SystemVerilog,Cicera_Ex01_MB_SV,8,0,2016-11-22 18:32:15+00:00,[],
824,https://github.com/AlencarSN/Alencar_Ex01_MB_SV.git,2016-11-22 15:38:37+00:00,Somadores,0,AlencarSN/Alencar_Ex01_MB_SV,74487066,SystemVerilog,Alencar_Ex01_MB_SV,1,0,2016-11-22 15:39:43+00:00,[],
825,https://github.com/gvilardefarias/Gustavo_Ex02_SV.git,2016-12-02 20:36:52+00:00,,0,gvilardefarias/Gustavo_Ex02_SV,75429036,SystemVerilog,Gustavo_Ex02_SV,1165,0,2016-12-02 20:39:47+00:00,[],
826,https://github.com/verification-gentleman-blog/testing_uvm_drivers_pt2.git,2016-08-09 18:35:47+00:00,"Example code for ""Testing UVM Drivers, Part 2"" post",2,verification-gentleman-blog/testing_uvm_drivers_pt2,65319120,SystemVerilog,testing_uvm_drivers_pt2,20,0,2017-06-02 11:39:02+00:00,[],https://api.github.com/licenses/apache-2.0
827,https://github.com/EnergyStaRed/32_bit_FP_Adder.git,2016-12-07 21:32:15+00:00,,0,EnergyStaRed/32_bit_FP_Adder,75877469,SystemVerilog,32_bit_FP_Adder,1557,0,2016-12-07 21:34:32+00:00,[],
828,https://github.com/gussmith23/calc2_example_public.git,2016-11-19 15:21:10+00:00,,0,gussmith23/calc2_example_public,74216406,SystemVerilog,calc2_example_public,1,0,2024-04-05 20:46:31+00:00,[],
829,https://github.com/ErwanCheriaux/ELECINF102.git,2016-06-02 08:27:08+00:00,TP réalisé sur une carte FPGA,0,ErwanCheriaux/ELECINF102,60246261,SystemVerilog,ELECINF102,40,0,2016-06-02 08:38:05+00:00,[],
830,https://github.com/pthomison/pipelinedProcessor.git,2016-09-18 16:14:40+00:00,Pipelined Proccessor for ECE 437 ,0,pthomison/pipelinedProcessor,68532475,SystemVerilog,pipelinedProcessor,944,0,2023-01-28 13:56:27+00:00,[],
831,https://github.com/cpujikken/core.git,2016-10-11 00:36:29+00:00,,0,cpujikken/core,70540639,SystemVerilog,core,546,0,2016-10-23 06:29:48+00:00,[],
832,https://github.com/enolla/ImgProc.git,2016-10-15 06:14:02+00:00,,0,enolla/ImgProc,70970319,SystemVerilog,ImgProc,14,0,2016-10-18 19:22:59+00:00,[],
833,https://github.com/kieranhalliday/Verilog.git,2016-10-12 03:21:18+00:00,,0,kieranhalliday/Verilog,70658460,SystemVerilog,Verilog,12,0,2016-10-12 03:23:02+00:00,[],
834,https://github.com/sukruthivempati/USART.git,2016-08-09 01:43:39+00:00,Design of USART in SystemVerilog,1,sukruthivempati/USART,65253062,SystemVerilog,USART,24,0,2016-08-09 01:47:04+00:00,[],https://api.github.com/licenses/apache-2.0
835,https://github.com/pthomison/multicore.git,2016-11-07 00:39:17+00:00,,0,pthomison/multicore,73028836,SystemVerilog,multicore,120,0,2023-01-28 13:56:28+00:00,[],
836,https://github.com/SouICry/141.git,2016-11-02 03:00:10+00:00,,0,SouICry/141,72598633,SystemVerilog,141,9568,0,2016-11-04 02:43:41+00:00,[],
837,https://github.com/SystemVerilogProject/AXIProtocol.git,2016-11-10 21:58:29+00:00,AXIProtocol,0,SystemVerilogProject/AXIProtocol,73424221,SystemVerilog,AXIProtocol,29,0,2016-11-28 06:53:45+00:00,[],
838,https://github.com/YuriDants/Yuri_Dantas_Ex01_MB_SV.git,2016-11-22 17:02:07+00:00,,0,YuriDants/Yuri_Dantas_Ex01_MB_SV,74494802,SystemVerilog,Yuri_Dantas_Ex01_MB_SV,18,0,2016-11-22 19:15:57+00:00,[],
839,https://github.com/leandro1989/Leandro_Decoder7Segmentos.git,2016-11-24 21:05:56+00:00,,0,leandro1989/Leandro_Decoder7Segmentos,74705063,SystemVerilog,Leandro_Decoder7Segmentos,0,0,2016-11-24 21:10:12+00:00,[],
840,https://github.com/AlfredoRodrigo/Alfredo_Decodificador_Display_7_Seg.git,2016-11-25 20:07:51+00:00,"Decodificador para display de sete segmentos escrito em SystemVerilog, e seu respectivo arquivo de testbench.",0,AlfredoRodrigo/Alfredo_Decodificador_Display_7_Seg,74785405,SystemVerilog,Alfredo_Decodificador_Display_7_Seg,1,0,2016-11-25 20:08:28+00:00,[],
841,https://github.com/JefferyLim/verilogClub.git,2017-02-07 23:43:16+00:00,Verilog Club Assignments at CU Boulder,0,JefferyLim/verilogClub,81266553,SystemVerilog,verilogClub,454,0,2017-02-20 06:07:04+00:00,[],
842,https://github.com/Daniel-Pinheiro/Processador6Instr-FPGA.git,2016-11-29 23:14:04+00:00,Trabalho para disciplina Projeto de Circuitos Integrados Digitais. Processador de 6 instruções 8 bits em System Verilog implementado em placa FPGA.,0,Daniel-Pinheiro/Processador6Instr-FPGA,75130937,SystemVerilog,Processador6Instr-FPGA,922,0,2020-12-27 09:21:27+00:00,"['systemverilog', 'fpga-board']",
843,https://github.com/darshil24/SystemVerilog.git,2017-02-03 16:09:56+00:00,init,0,darshil24/SystemVerilog,80845297,SystemVerilog,SystemVerilog,2,0,2017-02-03 16:14:17+00:00,[],
844,https://github.com/hythzz/MIPS-Processor.git,2017-02-04 02:37:39+00:00,MIPS Processor Verilog Design,0,hythzz/MIPS-Processor,80887620,SystemVerilog,MIPS-Processor,4349,0,2018-04-10 16:35:20+00:00,"['mips', 'system-verilog']",https://api.github.com/licenses/mit
845,https://github.com/melissaly/Cse141L_Lab4.git,2016-12-04 22:27:21+00:00,,0,melissaly/Cse141L_Lab4,75568697,SystemVerilog,Cse141L_Lab4,578,0,2016-12-04 23:18:48+00:00,[],
846,https://github.com/zhjohn925/sva.git,2016-12-03 00:49:45+00:00,,0,zhjohn925/sva,75442391,SystemVerilog,sva,11,0,2016-12-05 04:58:36+00:00,[],
847,https://github.com/heyitskaya/PirateSquabbles.git,2016-12-11 00:24:57+00:00,The directory for a point click mobile game,0,heyitskaya/PirateSquabbles,76145357,SystemVerilog,PirateSquabbles,3,0,2016-12-11 17:30:31+00:00,[],
848,https://github.com/AlbertoFelix/Alberto_Ex01_MB_SV.git,2016-11-20 04:36:05+00:00,,0,AlbertoFelix/Alberto_Ex01_MB_SV,74253046,SystemVerilog,Alberto_Ex01_MB_SV,6,0,2016-11-22 19:37:12+00:00,[],
849,https://github.com/ddelafue/processor.git,2016-09-24 20:52:34+00:00,,1,ddelafue/processor,69127107,SystemVerilog,processor,270,0,2016-09-24 21:10:45+00:00,[],
850,https://github.com/KennethWilke/sv-cdc-fifo.git,2016-11-03 13:39:38+00:00,A FIFO module for data transmission across clock domains,0,KennethWilke/sv-cdc-fifo,72749027,SystemVerilog,sv-cdc-fifo,3,0,2023-07-02 01:32:53+00:00,[],https://api.github.com/licenses/isc
851,https://github.com/vmanja16/ASIC_Design_Labs.git,2016-06-12 14:02:11+00:00,A repository for ECE 337- ASIC Design Lab,1,vmanja16/ASIC_Design_Labs,60970103,SystemVerilog,ASIC_Design_Labs,4308,0,2018-04-05 18:18:13+00:00,[],
852,https://github.com/uea999/Test.git,2016-06-04 06:38:07+00:00,,0,uea999/Test,60396949,SystemVerilog,Test,29,0,2016-06-04 06:53:57+00:00,[],
853,https://github.com/nbkumar/uvm_tlm_port_imp.git,2016-07-30 14:57:58+00:00,Illustration of TLM put port and implementation port.,0,nbkumar/uvm_tlm_port_imp,64549304,SystemVerilog,uvm_tlm_port_imp,2,0,2016-07-30 14:58:17+00:00,[],
854,https://github.com/marshallversteeg/uvm.git,2016-07-11 11:35:30+00:00,,0,marshallversteeg/uvm,63062661,SystemVerilog,uvm,1,0,2016-07-11 11:38:40+00:00,[],
855,https://github.com/Jeffffffff81/L4.git,2016-06-07 20:18:14+00:00,,0,Jeffffffff81/L4,60643558,SystemVerilog,L4,42,0,2016-06-10 05:07:42+00:00,[],
856,https://github.com/dasushi/blips-n-chips.git,2016-05-26 04:17:45+00:00,SystemVerilog MIPS Memory Block,0,dasushi/blips-n-chips,59719302,SystemVerilog,blips-n-chips,9060,0,2017-12-08 14:53:08+00:00,[],https://api.github.com/licenses/mit
857,https://github.com/MateusDantas/proc.git,2016-05-30 03:35:32+00:00,,0,MateusDantas/proc,59978227,SystemVerilog,proc,5,0,2016-05-30 03:38:48+00:00,[],
858,https://github.com/SLawson/CAH_SystemVerilogSimulation.git,2016-06-02 07:30:03+00:00,A System Verilog simulation for horrible people.,0,SLawson/CAH_SystemVerilogSimulation,60242233,SystemVerilog,CAH_SystemVerilogSimulation,22,0,2016-06-02 10:42:24+00:00,[],https://api.github.com/licenses/gpl-3.0
859,https://github.com/jflazaro/CSE31L-32-Bit-Processor.git,2016-11-20 23:35:47+00:00,,0,jflazaro/CSE31L-32-Bit-Processor,74309799,SystemVerilog,CSE31L-32-Bit-Processor,2913,0,2018-06-19 06:06:00+00:00,[],
860,https://github.com/ktdilsiz/ece491labs.git,2016-09-06 17:03:31+00:00,,2,ktdilsiz/ece491labs,67529160,SystemVerilog,ece491labs,208068,0,2016-10-30 01:27:57+00:00,[],
861,https://github.com/abbydsantos/EE-CSE-469.git,2016-10-12 07:50:10+00:00,,0,abbydsantos/EE-CSE-469,70676259,SystemVerilog,EE-CSE-469,17,0,2016-10-15 09:17:15+00:00,[],
862,https://github.com/GorosVi/FPGA-practice.git,2016-11-17 19:26:38+00:00,,0,GorosVi/FPGA-practice,74060052,SystemVerilog,FPGA-practice,2078,0,2017-06-05 14:12:27+00:00,[],https://api.github.com/licenses/mit
863,https://github.com/carsonrobles/sseg_interface.git,2016-12-30 00:25:17+00:00,Verilog implementation of a simple SPI system to drive a seven segment display.,1,carsonrobles/sseg_interface,77648115,SystemVerilog,sseg_interface,31,0,2018-10-22 21:42:08+00:00,[],
864,https://github.com/raymond88wang/CSE112L-Lab1.git,2017-01-23 23:33:10+00:00,,0,raymond88wang/CSE112L-Lab1,79859786,SystemVerilog,CSE112L-Lab1,211,0,2017-01-23 23:40:44+00:00,[],
865,https://github.com/CiceraRodrigues/Cicera_Ex02_SV.git,2016-12-12 02:38:12+00:00,,0,CiceraRodrigues/Cicera_Ex02_SV,76215764,SystemVerilog,Cicera_Ex02_SV,1732,0,2016-12-12 02:44:41+00:00,[],
866,https://github.com/apoorvvw/Computer_Architecture.git,2016-09-22 04:49:23+00:00,Designed a Processor,0,apoorvvw/Computer_Architecture,68885637,SystemVerilog,Computer_Architecture,269,0,2017-07-25 13:00:52+00:00,[],
867,https://github.com/tianrenz2/Processor.git,2016-10-13 03:47:09+00:00,It's a complete processor coded with system verilog,2,tianrenz2/Processor,70766728,SystemVerilog,Processor,11,0,2017-08-07 20:21:23+00:00,[],
868,https://github.com/alexram1313/DontMuxWithMe-ALU.git,2016-10-25 23:18:33+00:00,128-bit ALU we were asked to design in SystemVerilog for class.,0,alexram1313/DontMuxWithMe-ALU,71947001,SystemVerilog,DontMuxWithMe-ALU,21,0,2016-12-05 14:01:59+00:00,[],https://api.github.com/licenses/apache-2.0
869,https://github.com/siddhantekale/MIPS_Processor_Caches.git,2016-10-30 02:28:34+00:00,MIPS Processor with Icache and Dcache following LRU protocol,0,siddhantekale/MIPS_Processor_Caches,72320512,SystemVerilog,MIPS_Processor_Caches,45,0,2020-03-22 02:01:29+00:00,[],
870,https://github.com/C-L-G/I2C_master.git,2016-11-13 01:37:07+00:00,IIC I2C Master,0,C-L-G/I2C_master,73589140,SystemVerilog,I2C_master,54,0,2016-11-15 05:43:09+00:00,[],
871,https://github.com/leandrol/cse141l.git,2016-11-02 03:15:13+00:00,,0,leandrol/cse141l,72599698,SystemVerilog,cse141l,6919,0,2017-12-08 04:45:29+00:00,[],
872,https://github.com/alex-ozdemir/graph-input.git,2016-11-06 03:14:58+00:00,Physical graph input using an FPGA,0,alex-ozdemir/graph-input,72967237,SystemVerilog,graph-input,1,0,2016-11-06 03:15:23+00:00,[],
873,https://github.com/Jeffffffff81/L4B.git,2016-06-13 02:19:01+00:00,,0,Jeffffffff81/L4B,61000803,SystemVerilog,L4B,18,0,2016-06-13 02:21:18+00:00,[],
874,https://github.com/k12a-cpu/rtl.git,2016-05-25 12:44:36+00:00,RTL (SystemVerilog) implementation of the K12a CPU,0,k12a-cpu/rtl,59662392,SystemVerilog,rtl,35,0,2023-01-28 21:17:16+00:00,[],https://api.github.com/licenses/mit
875,https://github.com/BharadwajChava/AWGN_IP_core.git,2016-07-27 20:02:45+00:00,,0,BharadwajChava/AWGN_IP_core,64338070,SystemVerilog,AWGN_IP_core,1880,0,2016-07-27 20:03:33+00:00,[],https://api.github.com/licenses/gpl-3.0
876,https://github.com/ZHOUJiemin/UVM-Practice-DUT-02.git,2016-07-06 03:30:37+00:00,a complete uvm tb,1,ZHOUJiemin/UVM-Practice-DUT-02,62688321,SystemVerilog,UVM-Practice-DUT-02,24,0,2016-07-06 03:30:56+00:00,[],
877,https://github.com/guilherme27/Guilherme_Ex01_MB_SV.git,2016-11-22 18:23:09+00:00,,0,guilherme27/Guilherme_Ex01_MB_SV,74501371,SystemVerilog,Guilherme_Ex01_MB_SV,4,0,2016-11-22 18:34:57+00:00,[],
878,https://github.com/MiqueasGaldino/Miqueas_Ex01_MB_SV.git,2016-11-22 04:40:26+00:00,,0,MiqueasGaldino/Miqueas_Ex01_MB_SV,74434878,SystemVerilog,Miqueas_Ex01_MB_SV,7,0,2016-11-22 18:40:01+00:00,[],
879,https://github.com/Willian-Wauk/WillianAdriano_Decod7Seg_Uc_PEM.git,2016-11-25 20:00:54+00:00,decodificador 7 segmentos,0,Willian-Wauk/WillianAdriano_Decod7Seg_Uc_PEM,74785062,SystemVerilog,WillianAdriano_Decod7Seg_Uc_PEM,0,0,2016-11-25 20:10:21+00:00,[],
880,https://github.com/filcaval1234/FilipeCazuza_ex02_MB_sv.git,2016-11-25 22:46:21+00:00,,0,filcaval1234/FilipeCazuza_ex02_MB_sv,74792192,SystemVerilog,FilipeCazuza_ex02_MB_sv,0,0,2016-11-25 22:53:13+00:00,[],
881,https://github.com/arjungopal327/System-Verilog.git,2016-12-04 05:10:25+00:00,System-Verilog,0,arjungopal327/System-Verilog,75518746,SystemVerilog,System-Verilog,839,0,2016-12-04 05:10:33+00:00,[],
882,https://github.com/padfoot999/bsodomizer-hd-c5g.git,2016-11-20 15:18:28+00:00,,0,padfoot999/bsodomizer-hd-c5g,74282963,SystemVerilog,bsodomizer-hd-c5g,4455,0,2019-09-20 08:08:40+00:00,[],
883,https://github.com/AndressaM/MIPS.git,2016-11-23 17:07:27+00:00,MIPS Single-Cycle Processor,0,AndressaM/MIPS,74597787,SystemVerilog,MIPS,386,0,2016-11-23 17:22:33+00:00,[],
884,https://github.com/nolderosw/Wesley_Ex01_MB_SV.git,2016-11-21 22:18:43+00:00,,0,nolderosw/Wesley_Ex01_MB_SV,74410863,SystemVerilog,Wesley_Ex01_MB_SV,2,0,2016-11-22 01:16:49+00:00,[],
885,https://github.com/Ranzeus/Contador_de_0_a_15_a_0.git,2016-11-19 10:47:56+00:00,,0,Ranzeus/Contador_de_0_a_15_a_0,74202729,SystemVerilog,Contador_de_0_a_15_a_0,6,0,2020-04-16 19:28:31+00:00,[],
886,https://github.com/isaacjing/ASIC-Design.git,2016-12-20 16:57:02+00:00,"Undergraduate ASIC Design Lab, written in VERILOG",0,isaacjing/ASIC-Design,76975055,SystemVerilog,ASIC-Design,1286,0,2016-12-20 19:33:52+00:00,[],
887,https://github.com/msurendra29/ECE510.git,2017-02-12 23:38:49+00:00,Verification of PDP8 Instruction Set Architecture.,0,msurendra29/ECE510,81766320,SystemVerilog,ECE510,2602,0,2017-02-12 23:47:05+00:00,[],
888,https://github.com/dwang56/Modified_MIPS.git,2017-02-05 03:52:48+00:00,,0,dwang56/Modified_MIPS,80967154,SystemVerilog,Modified_MIPS,1301,0,2017-02-05 04:06:24+00:00,[],
889,https://github.com/kiraheta/MIPS-16-Processor-Implementation-.git,2016-07-01 22:04:03+00:00,MIPS 16 Processor Implementation via Verilog,1,kiraheta/MIPS-16-Processor-Implementation-,62422077,SystemVerilog,MIPS-16-Processor-Implementation-,6,0,2017-03-22 23:57:29+00:00,[],
890,https://github.com/corecode/fpga-vga.git,2016-06-16 05:33:57+00:00,,0,corecode/fpga-vga,61264947,SystemVerilog,fpga-vga,8,0,2016-06-16 05:34:25+00:00,[],
891,https://github.com/gussmith23/adder.git,2016-08-22 18:09:51+00:00,,0,gussmith23/adder,66296553,SystemVerilog,adder,1,0,2016-08-22 18:10:35+00:00,[],
892,https://github.com/jpeezzy/wombocombo.git,2016-10-28 03:05:23+00:00,,1,jpeezzy/wombocombo,72168671,SystemVerilog,wombocombo,52,0,2016-11-11 22:13:42+00:00,[],
893,https://github.com/MayurMJ/Decoder.git,2017-02-07 16:59:08+00:00,Designed and developed a sequential instruction fetcher and decoder for the RISC64IM ISA.,0,MayurMJ/Decoder,81232082,SystemVerilog,Decoder,18,0,2018-03-18 07:03:36+00:00,[],
894,https://github.com/ayoungblood/QUAD.nibble.git,2017-02-08 19:08:37+00:00,16-bit CPU in SystemVerilog with human-readable machine code,0,ayoungblood/QUAD.nibble,81365679,SystemVerilog,QUAD.nibble,27,0,2017-02-09 05:27:50+00:00,[],
895,https://github.com/menghuan007/LCD_Driver.git,2016-11-28 16:55:23+00:00,verilog lcd driver,0,menghuan007/LCD_Driver,74994222,SystemVerilog,LCD_Driver,2,0,2016-11-28 17:08:23+00:00,[],
896,https://github.com/porzell/PS2_Keyboard.git,2016-12-01 16:20:33+00:00,A really skeletonized PS/2 Keyboard input controller written in SystemVerilog.,0,porzell/PS2_Keyboard,75310441,SystemVerilog,PS2_Keyboard,3,0,2016-12-01 16:21:13+00:00,[],https://api.github.com/licenses/mit
897,https://github.com/filipeferibeiro/Filipe_Fernandes_Ex01_MB_SV.git,2016-11-19 00:26:59+00:00,Dois contadores em System Verilog. PEM,0,filipeferibeiro/Filipe_Fernandes_Ex01_MB_SV,74176992,SystemVerilog,Filipe_Fernandes_Ex01_MB_SV,7,0,2016-11-19 00:29:03+00:00,[],
898,https://github.com/Gregf36665/WimpFi.git,2016-11-15 13:08:59+00:00,Simple FPGA implementation of Wi-Fi without the full protocol,0,Gregf36665/WimpFi,73814638,SystemVerilog,WimpFi,2168,0,2016-11-15 13:37:47+00:00,[],
899,https://github.com/vasudev287/test2.git,2016-10-08 19:27:36+00:00,Questa Working Module ,0,vasudev287/test2,70352870,SystemVerilog,test2,19,0,2016-10-23 02:40:59+00:00,[],
900,https://github.com/UCI-31L-Fall2016/Lab2_bonus.git,2016-10-11 17:18:17+00:00,,0,UCI-31L-Fall2016/Lab2_bonus,70617422,SystemVerilog,Lab2_bonus,4,0,2016-10-11 17:19:01+00:00,[],
901,https://github.com/kierdavis/multiplier.git,2016-11-20 22:18:39+00:00,4-bit binary multiplier,0,kierdavis/multiplier,74306222,SystemVerilog,multiplier,902,0,2023-01-28 21:17:40+00:00,[],https://api.github.com/licenses/mit
902,https://github.com/jayfurz/_teamNAME.git,2016-11-20 03:17:03+00:00,,0,jayfurz/_teamNAME,74250083,SystemVerilog,_teamNAME,1030,0,2022-05-03 16:24:46+00:00,[],
903,https://github.com/fl4shk/jolt160_cpu.git,2017-01-21 01:06:24+00:00,This is a CPU I'm developing to provide an easier GCC target than my other CPU (which is called Jolt80).,0,fl4shk/jolt160_cpu,79614273,SystemVerilog,jolt160_cpu,144,0,2017-01-21 01:06:52+00:00,[],https://api.github.com/licenses/gpl-3.0
904,https://github.com/douglaskatz/reaction_game.git,2017-01-23 22:01:53+00:00,,0,douglaskatz/reaction_game,79852776,SystemVerilog,reaction_game,18062,0,2017-01-23 22:04:42+00:00,[],
905,https://github.com/Xingyu96/CPEN311_lab4.git,2016-06-08 08:26:06+00:00,,0,Xingyu96/CPEN311_lab4,60681519,SystemVerilog,CPEN311_lab4,34,0,2016-06-12 20:15:49+00:00,[],
906,https://github.com/dj08/ExperimentsWithSV.git,2016-06-20 06:27:31+00:00,,0,dj08/ExperimentsWithSV,61522150,SystemVerilog,ExperimentsWithSV,7,0,2016-06-20 06:28:17+00:00,[],
907,https://github.com/DavidBaensch/FPGACore.git,2016-08-02 08:45:13+00:00,SystemVerilog playground,0,DavidBaensch/FPGACore,64740217,SystemVerilog,FPGACore,2,0,2016-08-02 09:25:11+00:00,[],https://api.github.com/licenses/mit
908,https://github.com/JVever/SystermVerilog-Exercise.git,2016-07-27 09:01:17+00:00,the project used to do some exercise,2,JVever/SystermVerilog-Exercise,64293514,SystemVerilog,SystermVerilog-Exercise,7,0,2016-07-28 02:47:29+00:00,[],
909,https://github.com/JVever/From-Git.git,2016-07-27 10:21:05+00:00,,0,JVever/From-Git,64299210,SystemVerilog,From-Git,4,0,2016-07-27 10:27:12+00:00,[],
910,https://github.com/elusive7/A-Mazing.git,2016-08-01 17:18:50+00:00,A maze game written in SystemVerilog for Digital Systems Laboratory (ECE385),0,elusive7/A-Mazing,64686794,SystemVerilog,A-Mazing,51928,0,2016-08-09 20:29:48+00:00,[],
911,https://github.com/satputeaditya/CRC_Block_MKW2xD.git,2016-10-18 23:27:16+00:00,CRC Block implementation for NXP MKW2xD_CRC series of devices         . ,0,satputeaditya/CRC_Block_MKW2xD,71300039,SystemVerilog,CRC_Block_MKW2xD,7147,0,2016-10-24 11:32:04+00:00,[],https://api.github.com/licenses/mit
912,https://github.com/AlencarSN/Display_7_segmentos.git,2016-11-28 21:39:55+00:00,,0,AlencarSN/Display_7_segmentos,75016671,SystemVerilog,Display_7_segmentos,14,0,2016-11-28 21:41:31+00:00,[],
913,https://github.com/anbirn/hello-world.git,2017-01-27 15:33:10+00:00,first step,0,anbirn/hello-world,80219441,SystemVerilog,hello-world,2,0,2022-06-30 16:13:25+00:00,[],
914,https://github.com/tsimons89/of_test.git,2017-01-28 00:14:18+00:00,,0,tsimons89/of_test,80256926,SystemVerilog,of_test,13,0,2017-01-28 00:16:44+00:00,[],
915,https://github.com/harshmomaya/SystemVerilog.git,2017-02-02 21:53:54+00:00,,0,harshmomaya/SystemVerilog,80772334,SystemVerilog,SystemVerilog,35,0,2017-03-06 04:39:42+00:00,[],
916,https://github.com/rhgehring/uvmprimer.git,2016-10-19 03:37:33+00:00,,0,rhgehring/uvmprimer,71315920,SystemVerilog,uvmprimer,6016,0,2016-10-19 03:37:57+00:00,[],
917,https://github.com/rhapsodykk/VLSI_System_Design.git,2016-10-25 08:32:34+00:00,OSU ECE 574 course projects,0,rhapsodykk/VLSI_System_Design,71876176,SystemVerilog,VLSI_System_Design,111,0,2016-10-25 08:43:22+00:00,[],
918,https://github.com/ZoranZomboratGoran/VerilogTrainee.git,2016-11-09 20:43:52+00:00,Repository for Verilog training,1,ZoranZomboratGoran/VerilogTrainee,73319766,SystemVerilog,VerilogTrainee,32,0,2020-01-16 00:00:53+00:00,[],
919,https://github.com/buraksibirlioglu/FPGA-Guitar-Hero.git,2017-02-16 12:19:41+00:00,Guitar Hero implementation using the Basys 3 FPGA Board and System Verilog,0,buraksibirlioglu/FPGA-Guitar-Hero,82177567,SystemVerilog,FPGA-Guitar-Hero,753,0,2017-02-16 16:57:21+00:00,[],
920,https://github.com/kevintownsend/memory.git,2017-01-20 09:38:44+00:00,,0,kevintownsend/memory,79546172,SystemVerilog,memory,6,0,2017-01-25 06:37:27+00:00,[],https://api.github.com/licenses/apache-2.0
921,https://github.com/monicanimm/finalproject.git,2016-12-04 19:55:41+00:00,Cs 161 ,0,monicanimm/finalproject,75560673,SystemVerilog,finalproject,24,0,2016-12-04 20:03:16+00:00,[],
922,https://github.com/DhatriPatel/Bidding-Arbitrator.git,2017-01-04 07:32:33+00:00,Design of bidding arbitrator that can arbitrate 4 masters to handle 4 slaves with proper interface.,0,DhatriPatel/Bidding-Arbitrator,77992455,SystemVerilog,Bidding-Arbitrator,16,0,2017-01-04 07:53:48+00:00,[],
923,https://github.com/ConnorBlair/ECE385_Lab6.git,2017-02-21 01:56:55+00:00,,0,ConnorBlair/ECE385_Lab6,82623980,SystemVerilog,ECE385_Lab6,12,0,2017-02-21 01:58:35+00:00,[],
924,https://github.com/s-okai/sv-memory.git,2016-06-22 02:34:02+00:00,SystemVerilog library for common memory modules.,1,s-okai/sv-memory,61682910,SystemVerilog,sv-memory,11,0,2016-06-29 05:42:49+00:00,[],https://api.github.com/licenses/apache-2.0
925,https://github.com/aditn/18341.git,2016-09-06 00:32:12+00:00,,0,aditn/18341,67459454,SystemVerilog,18341,93,0,2016-10-10 06:45:28+00:00,[],
926,https://github.com/maltevesper/libprimitive.git,2016-09-23 12:45:43+00:00,,1,maltevesper/libprimitive,69024031,SystemVerilog,libprimitive,52,0,2016-09-23 12:46:34+00:00,[],
927,https://github.com/elymquez/BPROJECT.git,2016-09-30 21:46:11+00:00,Lab1,0,elymquez/BPROJECT,69704377,SystemVerilog,BPROJECT,19896,0,2016-09-30 22:39:06+00:00,[],
928,https://github.com/dawnliang/ee271.git,2016-10-07 02:05:10+00:00,UW EE 271 Spring 2015,0,dawnliang/ee271,70208070,SystemVerilog,ee271,20099,0,2018-10-10 17:18:57+00:00,[],
929,https://github.com/nbkumar/eth_verification_Env.git,2016-07-20 06:42:45+00:00,Hello_world_kind_of_Ethernet_verification_environment,0,nbkumar/eth_verification_Env,63757214,SystemVerilog,eth_verification_Env,9,0,2016-07-20 06:54:26+00:00,[],
930,https://github.com/nbkumar/candy_taster.git,2016-07-25 10:26:43+00:00,"""Implementing Candy Taster Verification Env from cluelogic.com """,0,nbkumar/candy_taster,64125479,SystemVerilog,candy_taster,2,0,2016-11-28 08:15:45+00:00,[],
931,https://github.com/krishswaroop/labs.git,2016-07-28 04:30:03+00:00,"Get hands-on experience on Verilog and System Verilog. You can find simple design and testbench codes for counters, adders and many more. Drop in comment if you find something fishy in my codes. I am learner like many of you out there. Help me and we will build a better place for the future engineers.",0,krishswaroop/labs,64364459,SystemVerilog,labs,8,0,2017-02-02 09:45:26+00:00,[],
932,https://github.com/dirkxie/SystemVerilogSnippets.git,2016-06-23 19:17:16+00:00,,0,dirkxie/SystemVerilogSnippets,61830405,SystemVerilog,SystemVerilogSnippets,12,0,2016-06-26 18:33:40+00:00,[],
933,https://github.com/mbusc1/Turing_Test_Midterm_Project_EECS_31L.git,2016-10-26 03:12:01+00:00,Project for EECS31L System Verilog 128 bit ALU,2,mbusc1/Turing_Test_Midterm_Project_EECS_31L,71961558,SystemVerilog,Turing_Test_Midterm_Project_EECS_31L,723,0,2016-10-29 02:52:10+00:00,[],
934,https://github.com/enolla/Labyrinth.git,2016-10-15 10:38:07+00:00,,0,enolla/Labyrinth,70981787,SystemVerilog,Labyrinth,12,0,2016-10-15 10:40:11+00:00,[],
935,https://github.com/UCI-31L-Fall2016/Midterm-Project.git,2016-10-20 00:46:26+00:00,,1,UCI-31L-Fall2016/Midterm-Project,71411720,SystemVerilog,Midterm-Project,481,0,2016-10-20 01:32:26+00:00,[],
936,https://github.com/sufex00/Mips.git,2016-11-23 00:50:49+00:00,,0,sufex00/Mips,74526347,SystemVerilog,Mips,11750,0,2016-11-23 13:07:14+00:00,[],
937,https://github.com/apantol/FFT.git,2016-10-21 15:38:12+00:00,,0,apantol/FFT,71578586,SystemVerilog,FFT,10,0,2016-10-21 15:39:37+00:00,[],
938,https://github.com/KennethWilke/sv-dpram.git,2016-11-01 20:25:29+00:00,A SystemVerilog implementation of a dual port RAM module,1,KennethWilke/sv-dpram,72573590,SystemVerilog,sv-dpram,2,0,2023-06-30 04:38:34+00:00,[],https://api.github.com/licenses/isc
939,https://github.com/KennethWilke/sv-clock-controller.git,2016-11-11 16:15:23+00:00,A clock controller module,0,KennethWilke/sv-clock-controller,73492365,SystemVerilog,sv-clock-controller,1,0,2023-07-02 01:33:20+00:00,[],https://api.github.com/licenses/isc
940,https://github.com/jiruotong1024/ece437.git,2017-01-26 00:29:40+00:00,computer architecture,0,jiruotong1024/ece437,80072238,SystemVerilog,ece437,80,0,2017-01-26 00:42:47+00:00,[],
941,https://github.com/willcro/edu.umn.cs.melt.exts.ableC.concur.git,2017-01-30 15:47:20+00:00,Silver extension to add Go style concurrency.,0,willcro/edu.umn.cs.melt.exts.ableC.concur,80435653,SystemVerilog,edu.umn.cs.melt.exts.ableC.concur,17,0,2017-01-30 16:02:22+00:00,[],
942,https://github.com/gruwella/lc3.git,2016-12-05 18:00:07+00:00,620 Final Project,0,gruwella/lc3,75651985,SystemVerilog,lc3,374,0,2016-12-05 20:06:42+00:00,[],
943,https://github.com/ndricimrr/Elevator-Control-System-FPGA.git,2017-01-18 15:42:01+00:00,This project implements a controller system for a pair of  elevators leveraging a programmable Basys 3 FPGA as well as external actuators like stepper motors.,0,ndricimrr/Elevator-Control-System-FPGA,79354906,SystemVerilog,Elevator-Control-System-FPGA,61,0,2020-12-14 03:51:38+00:00,[],https://api.github.com/licenses/mit
944,https://github.com/iMohannad/mips-processor.git,2016-12-18 04:52:08+00:00,,0,iMohannad/mips-processor,76763352,SystemVerilog,mips-processor,118,0,2016-12-18 04:56:05+00:00,[],
945,https://github.com/talitavaleria/PEM.git,2016-12-06 17:54:12+00:00,Reposítório com Projetos desenvolvidos no PEM ,0,talitavaleria/PEM,75756842,SystemVerilog,PEM,7522,0,2016-12-06 18:03:41+00:00,[],
946,https://github.com/luisspb/mic.git,2016-09-14 13:48:06+00:00,(Inactive) MIC processor,0,luisspb/mic,68210175,SystemVerilog,mic,259,0,2023-11-19 19:33:10+00:00,[],https://api.github.com/licenses/mit
947,https://github.com/UCI-31L-Fall2016/Lab2.git,2016-10-04 20:08:37+00:00,,0,UCI-31L-Fall2016/Lab2,70001913,SystemVerilog,Lab2,3,0,2016-10-11 02:51:41+00:00,[],
948,https://github.com/lgoedde/CPU-Design.git,2016-09-18 18:34:41+00:00,,0,lgoedde/CPU-Design,68539816,SystemVerilog,CPU-Design,653,0,2017-01-17 01:18:37+00:00,[],
949,https://github.com/miguelangelo78/MinCPU.git,2016-06-12 15:04:27+00:00,MinCPU is an educational project that implements an extremely minimal CPU using SystemVerilog within a single file.,0,miguelangelo78/MinCPU,60973272,SystemVerilog,MinCPU,22,0,2021-12-03 05:05:57+00:00,[],
950,https://github.com/andrewparlane/FPGA_UVM_Components.git,2016-07-08 20:47:19+00:00,A collection of UVM components for use when building a verification interface,0,andrewparlane/FPGA_UVM_Components,62916564,SystemVerilog,FPGA_UVM_Components,33,0,2016-07-09 06:15:10+00:00,[],https://api.github.com/licenses/mit
951,https://github.com/miguelangelo78/MIPS-uCoded.git,2016-06-21 23:25:55+00:00,This repository holds an example of an unpipelined datapath of a MIPS implementation using microcoding.,0,miguelangelo78/MIPS-uCoded,61673995,SystemVerilog,MIPS-uCoded,130,0,2021-12-03 05:05:57+00:00,[],
952,https://github.com/xinpan1992/10g_MAC.git,2016-06-18 23:51:00+00:00,,0,xinpan1992/10g_MAC,61457088,SystemVerilog,10g_MAC,1,0,2016-06-18 23:55:17+00:00,[],
953,https://github.com/su2278370/andeas_pipeline.git,2016-11-18 02:24:11+00:00,Homework of VLSI design,0,su2278370/andeas_pipeline,74087226,SystemVerilog,andeas_pipeline,76,0,2016-11-18 07:18:31+00:00,[],
954,https://github.com/verification-gentleman-blog/testing_uvm_drivers.git,2016-08-05 04:56:52+00:00,"Example code for ""Testing UVM Drivers""",3,verification-gentleman-blog/testing_uvm_drivers,64989697,SystemVerilog,testing_uvm_drivers,12,0,2016-08-15 15:56:51+00:00,[],https://api.github.com/licenses/apache-2.0
955,https://github.com/pichu0528/CSE141L-LAB3.git,2016-09-04 02:32:22+00:00,CSE141L LAB3,0,pichu0528/CSE141L-LAB3,67321690,SystemVerilog,CSE141L-LAB3,675,0,2016-09-04 02:39:41+00:00,[],
956,https://github.com/SikkandarSulaiman/Distributed-ALU.git,2016-10-22 16:53:06+00:00,Design and verification of sequential distributed Arithmetic & Logic Unit which accepts many inputs and generates output for desired inputs,0,SikkandarSulaiman/Distributed-ALU,71652623,SystemVerilog,Distributed-ALU,3,0,2016-10-22 16:59:44+00:00,[],
957,https://github.com/lucasebs/LucasEmanuelSantos_Ex01_MB_SV.git,2016-11-22 17:25:47+00:00,Exercício 1 - Módulo SystemVerilog - PEM,0,lucasebs/LucasEmanuelSantos_Ex01_MB_SV,74496937,SystemVerilog,LucasEmanuelSantos_Ex01_MB_SV,2,0,2016-11-22 17:58:48+00:00,[],
958,https://github.com/ShichenLin/pipeline.git,2017-02-05 20:20:24+00:00,,0,ShichenLin/pipeline,81019382,SystemVerilog,pipeline,8640,0,2017-02-05 20:35:35+00:00,[],
959,https://github.com/ConsVin/fpu_sv.git,2016-05-25 20:31:40+00:00,Floating point calculator units for RTL implementation in SV,0,ConsVin/fpu_sv,59695546,SystemVerilog,fpu_sv,20,0,2016-05-25 20:32:22+00:00,[],https://api.github.com/licenses/gpl-3.0
960,https://github.com/lucasebs/LucasEmanuelSantos_SV.git,2016-12-02 00:01:22+00:00,,0,lucasebs/LucasEmanuelSantos_SV,75343692,SystemVerilog,LucasEmanuelSantos_SV,1,0,2016-12-02 00:02:01+00:00,[],
961,https://github.com/naveen4860/APB_prot.git,2017-01-24 12:38:35+00:00,,0,naveen4860/APB_prot,79910263,SystemVerilog,APB_prot,0,0,2017-01-24 12:43:45+00:00,[],
962,https://github.com/RodrigoFarias23D/Rodrigo_Ex02_SV.git,2016-12-03 01:55:04+00:00,,0,RodrigoFarias23D/Rodrigo_Ex02_SV,75445183,SystemVerilog,Rodrigo_Ex02_SV,5772,0,2016-12-03 03:44:35+00:00,[],
963,https://github.com/MicroSnail/fir_filter.git,2016-12-26 16:06:03+00:00,Finite Impulse Filter,0,MicroSnail/fir_filter,77394021,SystemVerilog,fir_filter,15,0,2016-12-26 16:06:12+00:00,[],
964,https://github.com/laerty/Laerty_Ex02_SV.git,2016-12-09 17:15:11+00:00,Exercício 02 em SystemVerilog - Criação de Circuitos Sequenciais ,0,laerty/Laerty_Ex02_SV,76055159,SystemVerilog,Laerty_Ex02_SV,1557,0,2022-08-11 19:39:25+00:00,[],
965,https://github.com/jvitale94/systems.git,2016-12-10 18:50:20+00:00,,0,jvitale94/systems,76131176,SystemVerilog,systems,19,0,2016-12-10 18:51:34+00:00,[],
966,https://github.com/douglasleg1/DouglasDantas_7Segmentos_SV.git,2016-11-26 02:24:51+00:00,,0,douglasleg1/DouglasDantas_7Segmentos_SV,74799744,SystemVerilog,DouglasDantas_7Segmentos_SV,0,0,2016-11-26 02:30:05+00:00,[],
967,https://github.com/MarlonCosta/Marlon_Decoder_7Seg.git,2016-11-26 19:58:23+00:00,Projeto do decodificador bin-bcd em SV,0,MarlonCosta/Marlon_Decoder_7Seg,74847555,SystemVerilog,Marlon_Decoder_7Seg,17,0,2023-01-28 20:40:47+00:00,[],
968,https://github.com/raymond88wang/CSE112L-Lab2.git,2017-02-13 23:50:23+00:00,,0,raymond88wang/CSE112L-Lab2,81884093,SystemVerilog,CSE112L-Lab2,41848,0,2017-02-13 23:57:11+00:00,[],
969,https://github.com/ADA007/SV_Test_Work.git,2016-07-26 18:04:43+00:00,test task on SV,0,ADA007/SV_Test_Work,64243397,SystemVerilog,SV_Test_Work,18,0,2016-07-26 18:07:10+00:00,[],
970,https://github.com/vasudev287/twisted-masala-dosa.git,2016-07-26 23:22:26+00:00,,0,vasudev287/twisted-masala-dosa,64261229,SystemVerilog,twisted-masala-dosa,54,0,2016-07-27 01:09:00+00:00,[],
971,https://github.com/m-liu/messageExtract.git,2016-10-02 05:24:32+00:00,,0,m-liu/messageExtract,69780627,SystemVerilog,messageExtract,5,0,2016-10-03 01:49:13+00:00,[],
972,https://github.com/KennethWilke/sv-graycode.git,2016-11-02 16:54:46+00:00,Combinational gray code modules,0,KennethWilke/sv-graycode,72661683,SystemVerilog,sv-graycode,3,0,2023-07-02 01:32:02+00:00,[],https://api.github.com/licenses/isc
973,https://github.com/verification-gentleman-blog/svaunit_sandbox.git,2016-07-02 12:26:01+00:00,"Example code for ""A Quick Look at SVAunit"" post",3,verification-gentleman-blog/svaunit_sandbox,62449754,SystemVerilog,svaunit_sandbox,13,0,2016-08-09 18:37:40+00:00,[],https://api.github.com/licenses/apache-2.0
974,https://github.com/AbisheikJeyaraj/ez8_Verification.git,2016-08-05 14:52:04+00:00,8 bit - Program Counter - functional verification,0,AbisheikJeyaraj/ez8_Verification,65026702,SystemVerilog,ez8_Verification,48,0,2016-08-05 15:05:50+00:00,[],
975,https://github.com/daniel13520cs/EE371Lab4.git,2016-05-28 17:36:30+00:00,ParallelToSerial and SerialToParallel modules for the FPGA to communicate,0,daniel13520cs/EE371Lab4,59906950,SystemVerilog,EE371Lab4,3,0,2018-02-03 05:38:38+00:00,[],
976,https://github.com/apantol/FPGA-DSP.git,2016-10-01 12:36:41+00:00,,0,apantol/FPGA-DSP,69737865,SystemVerilog,FPGA-DSP,401,0,2016-10-01 12:46:10+00:00,[],
977,https://github.com/MiqueasGaldino/Miqueas_Decodificador7segmentos.git,2016-11-26 02:33:44+00:00,,0,MiqueasGaldino/Miqueas_Decodificador7segmentos,74800093,SystemVerilog,Miqueas_Decodificador7segmentos,0,0,2016-11-26 02:56:41+00:00,[],
978,https://github.com/alexbatista/MIPSProcessor.git,2016-11-22 20:36:09+00:00,,0,alexbatista/MIPSProcessor,74510952,SystemVerilog,MIPSProcessor,31,0,2016-11-25 20:50:19+00:00,[],
979,https://github.com/AlfredoRodrigo/Alfredo_Ex01_MB_SV.git,2016-11-19 20:13:00+00:00,Exercício 1 de System Verilog - PEM,0,AlfredoRodrigo/Alfredo_Ex01_MB_SV,74232826,SystemVerilog,Alfredo_Ex01_MB_SV,1,0,2016-11-22 19:19:33+00:00,[],
980,https://github.com/douglasleg1/DouglasDantas_Ex01_MB_SV.git,2016-11-21 19:28:54+00:00,Exercício 1 do professor Marcos Morais,0,douglasleg1/DouglasDantas_Ex01_MB_SV,74398478,SystemVerilog,DouglasDantas_Ex01_MB_SV,1,0,2016-11-21 19:41:42+00:00,[],
981,https://github.com/alexram1313/DontMuxWithMe-CPU32.git,2016-11-22 05:38:44+00:00,Simple 32-bit processor we were asked to design for class.,0,alexram1313/DontMuxWithMe-CPU32,74438232,SystemVerilog,DontMuxWithMe-CPU32,47,0,2016-12-05 14:02:25+00:00,[],https://api.github.com/licenses/apache-2.0
982,https://github.com/ShichenLin/NVM.git,2017-02-08 21:59:58+00:00,,0,ShichenLin/NVM,81380418,SystemVerilog,NVM,12,0,2017-03-23 01:57:09+00:00,[],
983,https://github.com/hvt1244/MIPS-Pipeline.git,2017-02-11 20:15:27+00:00,,0,hvt1244/MIPS-Pipeline,81679428,SystemVerilog,MIPS-Pipeline,12,0,2017-02-11 20:16:19+00:00,[],
984,https://github.com/abrandemuehl/GameCubeFPGA.git,2016-12-03 05:25:36+00:00,,0,abrandemuehl/GameCubeFPGA,75453638,SystemVerilog,GameCubeFPGA,22,0,2016-12-03 05:25:51+00:00,"['systemverilog', 'gamecube']",
985,https://github.com/xingengwang/Hardware-Vertifcation.git,2016-12-08 22:58:52+00:00,,0,xingengwang/Hardware-Vertifcation,75982178,SystemVerilog,Hardware-Vertifcation,5157,0,2017-02-06 21:09:25+00:00,[],
986,https://github.com/ThiHenrique/ThiagoHenrique_Ex02_SV-master.git,2016-12-15 01:02:53+00:00,,0,ThiHenrique/ThiagoHenrique_Ex02_SV-master,76510456,SystemVerilog,ThiagoHenrique_Ex02_SV-master,0,0,2016-12-15 01:09:26+00:00,[],
987,https://github.com/xshangyong/uvm.git,2017-01-05 13:30:45+00:00,test bench based on uvm,0,xshangyong/uvm,78115307,SystemVerilog,uvm,32,0,2017-01-05 13:33:01+00:00,[],
988,https://github.com/DhatriPatel/NOC-as-a-Bus-Master-handles-CRC-as-a-Slave.git,2017-01-04 10:43:30+00:00,Design and implementation of Master/Slave system which also includes interface/bus ,0,DhatriPatel/NOC-as-a-Bus-Master-handles-CRC-as-a-Slave,78006921,SystemVerilog,NOC-as-a-Bus-Master-handles-CRC-as-a-Slave,506,0,2017-01-04 11:29:53+00:00,[],
989,https://github.com/arifbozdag/Elevator-Similator.git,2017-01-20 18:53:49+00:00,A simulation made via SystemVerilog uses an FPGA and a step motor.,0,arifbozdag/Elevator-Similator,79587770,SystemVerilog,Elevator-Similator,10,0,2017-01-20 18:57:27+00:00,[],
990,https://github.com/SkullKid4/SpaceInvaders.git,2017-01-18 07:07:12+00:00,,0,SkullKid4/SpaceInvaders,79313182,SystemVerilog,SpaceInvaders,21,0,2017-01-18 07:14:32+00:00,[],
991,https://github.com/thaiduong1309/64-bit-pipeline-processor.git,2016-12-01 18:33:36+00:00,,0,thaiduong1309/64-bit-pipeline-processor,75321040,SystemVerilog,64-bit-pipeline-processor,6047,0,2016-12-01 18:36:36+00:00,[],
992,https://github.com/csgardn2/ece385_lab4_refactor.git,2017-02-14 15:56:25+00:00,"Rewrite of the ECE385 intro to quartus tutorial, intro to systemverilog, and logic processor.  Both the code and documentation have been re-structured into a step-by-step tutorial on the systemverilog language (syntax and concepts) without changing the overall goals and lessons of the original lab.",0,csgardn2/ece385_lab4_refactor,81962284,SystemVerilog,ece385_lab4_refactor,2652,0,2017-02-14 16:24:19+00:00,[],
993,https://github.com/orlandodan14/The-Odin-Project.git,2017-02-16 18:34:34+00:00,My work in The Odin Project,0,orlandodan14/The-Odin-Project,82213199,SystemVerilog,The-Odin-Project,396,0,2017-02-18 00:04:32+00:00,[],
994,https://github.com/huangniuniu/dft_ral_model.git,2016-08-07 23:55:20+00:00,paper-ral,0,huangniuniu/dft_ral_model,65159558,SystemVerilog,dft_ral_model,11722,0,2016-08-07 23:55:36+00:00,[],
995,https://github.com/rastogishubham/ECE437.git,2016-09-22 07:28:41+00:00,ECE 437 Pipeline and multi-core design,0,rastogishubham/ECE437,68895977,SystemVerilog,ECE437,1237,0,2020-10-15 22:08:17+00:00,[],
996,https://github.com/ajdunker/ECE437.git,2016-09-21 00:44:30+00:00,ECE 437 Fall 2016,0,ajdunker/ECE437,68764990,SystemVerilog,ECE437,1806,0,2017-09-11 14:28:56+00:00,[],
997,https://github.com/rpennell/Verilog.git,2016-06-09 00:44:49+00:00,,0,rpennell/Verilog,60740568,SystemVerilog,Verilog,30,0,2016-06-09 00:44:56+00:00,[],
998,https://github.com/srzy1990/hdllab.git,2016-08-09 15:57:57+00:00,hdllab new version,0,srzy1990/hdllab,65308609,SystemVerilog,hdllab,576,0,2017-07-15 21:18:24+00:00,[],
999,https://github.com/CharlieAnderson/mp1.git,2016-09-11 22:44:44+00:00,,0,CharlieAnderson/mp1,67958323,SystemVerilog,mp1,8900,0,2018-11-03 17:49:13+00:00,[],
1000,https://github.com/johngilouie/sv-math-master.git,2016-07-02 18:06:08+00:00,Updated with Subtraction,0,johngilouie/sv-math-master,62463897,SystemVerilog,sv-math-master,6,0,2016-07-08 04:09:57+00:00,[],https://api.github.com/licenses/apache-2.0
1001,https://github.com/CiceraRodrigues/Dec_Display_7_seg_Cicera.git,2016-11-24 19:01:22+00:00,,0,CiceraRodrigues/Dec_Display_7_seg_Cicera,74698615,SystemVerilog,Dec_Display_7_seg_Cicera,2,0,2016-11-24 19:16:50+00:00,[],
1002,https://github.com/atrifex/ECE-411.git,2017-01-22 02:45:57+00:00,,0,atrifex/ECE-411,79688562,SystemVerilog,ECE-411,100337,0,2018-08-15 16:07:07+00:00,[],
1003,https://github.com/melt-umn/dcv2.git,2017-01-26 17:33:55+00:00,A very simple expression-based language.,0,melt-umn/dcv2,80137810,SystemVerilog,dcv2,37,0,2020-10-27 16:35:47+00:00,[],
1004,https://github.com/serhataras/FPGAHero.git,2016-10-21 00:06:04+00:00,Guitar Hero implemented on an FPGA as a Digital Design project using SystemVerilog,0,serhataras/FPGAHero,71514225,SystemVerilog,FPGAHero,2872,0,2021-01-03 16:29:56+00:00,[],
1005,https://github.com/EnginerdingFTW/ECE437.git,2017-02-21 17:46:51+00:00,,0,EnginerdingFTW/ECE437,82709403,SystemVerilog,ECE437,1903,0,2020-05-22 15:28:31+00:00,[],
1006,https://github.com/aliir74/CompArchMidterm.git,2017-02-09 18:32:01+00:00,Computer Architecture course midterm project ( Cache implementation in verilog ),0,aliir74/CompArchMidterm,81481738,SystemVerilog,CompArchMidterm,410,0,2019-07-25 08:36:26+00:00,[],
1007,https://github.com/ChongjinChua/ECE437.git,2017-02-14 23:58:12+00:00,ECE437 computer architecture,2,ChongjinChua/ECE437,82001314,SystemVerilog,ECE437,5628,0,2017-02-14 23:59:28+00:00,[],
1008,https://github.com/adannawi/ECE437.git,2017-02-13 00:05:23+00:00,kill me,0,adannawi/ECE437,81767581,SystemVerilog,ECE437,296,0,2018-12-02 00:53:46+00:00,[],
1009,https://github.com/bwalkowi/vasm.git,2017-01-04 19:39:36+00:00,,0,bwalkowi/vasm,78046975,SystemVerilog,vasm,24,0,2017-01-11 21:56:44+00:00,[],
1010,https://github.com/hthatukuru/SobelEdgeDetection.git,2016-11-18 20:36:53+00:00,,0,hthatukuru/SobelEdgeDetection,74164525,SystemVerilog,SobelEdgeDetection,2266,0,2017-12-03 01:10:28+00:00,[],
1011,https://github.com/alkislardeniz/MemoryGame.git,2017-02-21 11:40:11+00:00,FPGA based memory game.,0,alkislardeniz/MemoryGame,82673080,SystemVerilog,MemoryGame,15,0,2019-04-10 05:36:38+00:00,[],
1012,https://github.com/petergmale/uvm_tb_ex.git,2016-08-08 07:21:20+00:00,,0,petergmale/uvm_tb_ex,65182004,SystemVerilog,uvm_tb_ex,4,0,2016-08-13 21:13:15+00:00,[],
1013,https://github.com/petergmale/sv_examples.git,2016-08-06 01:57:11+00:00,example code for my ref,0,petergmale/sv_examples,65060027,SystemVerilog,sv_examples,3,0,2016-08-06 02:06:00+00:00,[],https://api.github.com/licenses/unlicense
1014,https://github.com/baba256/ECE581_proj.git,2016-10-14 04:55:07+00:00,proj 1,0,baba256/ECE581_proj,70875339,SystemVerilog,ECE581_proj,4251,0,2016-10-14 04:55:15+00:00,[],
1015,https://github.com/hchev001/CDA-4101-Group-6.git,2016-09-30 17:31:07+00:00,The projects of Group 6 Fall 2016,0,hchev001/CDA-4101-Group-6,69687482,SystemVerilog,CDA-4101-Group-6,6,0,2018-09-01 18:59:31+00:00,[],
1016,https://github.com/EEteam-FPGAcode/Pre-processing.git,2016-10-31 21:08:28+00:00,,0,EEteam-FPGAcode/Pre-processing,72478137,SystemVerilog,Pre-processing,3402,0,2016-10-31 21:15:54+00:00,[],
1017,https://github.com/KennethWilke/sv-pulse-counter.git,2016-11-14 17:52:32+00:00,A pulse counter in SystemVerilog,0,KennethWilke/sv-pulse-counter,73731706,SystemVerilog,sv-pulse-counter,1,0,2023-07-02 01:34:53+00:00,[],https://api.github.com/licenses/isc
1018,https://github.com/filcaval1234/FilipeCazuza_ex01_MB_SV.git,2016-11-19 18:09:00+00:00,,0,filcaval1234/FilipeCazuza_ex01_MB_SV,74226077,SystemVerilog,FilipeCazuza_ex01_MB_SV,1,0,2016-11-19 18:11:38+00:00,[],
1019,https://github.com/prkumar/ark-processor.git,2016-11-04 18:06:57+00:00,"A simple processor, our quarter-long project for CSE141L",0,prkumar/ark-processor,72873211,SystemVerilog,ark-processor,138,0,2016-11-18 17:49:59+00:00,[],
1020,https://github.com/891680996/smg_display_sv.git,2016-11-16 05:21:02+00:00,,0,891680996/smg_display_sv,73886870,SystemVerilog,smg_display_sv,2,0,2016-11-16 05:33:07+00:00,[],https://api.github.com/licenses/mit
1021,https://github.com/sugureshkumar/system-verilog.git,2016-10-31 06:36:16+00:00,system verilog programs ,0,sugureshkumar/system-verilog,72409590,SystemVerilog,system-verilog,33,0,2016-10-31 06:40:40+00:00,[],
1022,https://github.com/Willian-Wauk/WillianAdriano_Ex01_MB_SV.git,2016-11-22 03:10:05+00:00,Exercicio_SistemVerilog,0,Willian-Wauk/WillianAdriano_Ex01_MB_SV,74428963,SystemVerilog,WillianAdriano_Ex01_MB_SV,4,0,2016-11-22 14:57:12+00:00,[],
1023,https://github.com/ravidchi/ECE411-1.git,2017-02-12 06:05:24+00:00,My work for ECE411 at UIUC,1,ravidchi/ECE411-1,81706663,SystemVerilog,ECE411-1,22990,0,2017-10-09 22:13:08+00:00,[],
1024,https://github.com/douglasnickson/DouglasNickson_Ex02_MS_SV.git,2016-11-25 17:30:27+00:00,Display de 7 Segmentos com Testbench,0,douglasnickson/DouglasNickson_Ex02_MS_SV,74777044,SystemVerilog,DouglasNickson_Ex02_MS_SV,8,0,2016-11-25 17:34:24+00:00,[],
1025,https://github.com/laerty/Laerty_Ex01_MB_SV.git,2016-11-22 14:05:49+00:00,Exercício para criar contadores de 4 bits crescentes e decrescentes em System Verilog.,0,laerty/Laerty_Ex01_MB_SV,74478355,SystemVerilog,Laerty_Ex01_MB_SV,243,0,2016-11-22 16:21:00+00:00,[],
1026,https://github.com/rm1096/SystemVerilog.git,2016-12-23 16:36:24+00:00,,0,rm1096/SystemVerilog,77238023,SystemVerilog,SystemVerilog,2,0,2016-12-31 19:54:23+00:00,[],
1027,https://github.com/omkarpradhan/Digital-design-projects.git,2017-02-17 19:40:20+00:00,Digital logic design projects with HDL code,0,omkarpradhan/Digital-design-projects,82331812,SystemVerilog,Digital-design-projects,53,0,2017-02-17 20:08:36+00:00,[],
1028,https://github.com/vasudev287/Rocket_Dosa.git,2016-07-27 03:44:04+00:00,Enna Rascala ,0,vasudev287/Rocket_Dosa,64275001,SystemVerilog,Rocket_Dosa,34,0,2016-07-27 03:45:47+00:00,[],
1029,https://github.com/jpark2383/ECE411-MP3.git,2016-08-18 17:05:20+00:00,ECE411 Processor Project,0,jpark2383/ECE411-MP3,66015756,SystemVerilog,ECE411-MP3,74,0,2016-08-18 17:10:20+00:00,[],
1030,https://github.com/chaolicse/verilog.git,2016-08-18 09:33:23+00:00,,0,chaolicse/verilog,65984616,SystemVerilog,verilog,3319,0,2016-08-18 09:43:03+00:00,[],
1031,https://github.com/umanskky/First.git,2016-08-09 07:37:58+00:00,My first project,0,umanskky/First,65273771,SystemVerilog,First,1,0,2016-08-09 07:48:26+00:00,[],
1032,https://github.com/RodrigoFarias23D/Rodrigo_Ex01_MB_SV.git,2016-11-18 23:11:26+00:00,,0,RodrigoFarias23D/Rodrigo_Ex01_MB_SV,74173713,SystemVerilog,Rodrigo_Ex01_MB_SV,7,0,2016-11-19 18:18:04+00:00,[],
1033,https://github.com/zhl108/CSE-141L.git,2017-01-15 23:54:29+00:00,,2,zhl108/CSE-141L,79067589,SystemVerilog,CSE-141L,26984,0,2020-11-01 11:56:08+00:00,[],
1034,https://github.com/apantol/fir_filter.git,2016-10-09 14:46:21+00:00,,0,apantol/fir_filter,70409536,SystemVerilog,fir_filter,12,0,2016-10-09 14:46:57+00:00,[],
1035,https://github.com/isaiasmtp/Isaias_display7seg.git,2016-11-25 21:06:27+00:00,Projeto em SystemVerilog de um decodificador para display de 7 segmentos.,0,isaiasmtp/Isaias_display7seg,74788106,SystemVerilog,Isaias_display7seg,3,0,2019-05-01 18:40:42+00:00,[],
1036,https://github.com/henry-ns/Henrique_Martins_Ex02_SV.git,2016-12-04 15:17:43+00:00,Exercício 02 de SystemVerilog,0,henry-ns/Henrique_Martins_Ex02_SV,75545354,SystemVerilog,Henrique_Martins_Ex02_SV,7332,0,2020-01-05 01:52:38+00:00,"['exercism-solutions', 'training', 'microelectronics']",
1037,https://github.com/dschlai2/ChristmasLights.git,2016-12-02 03:15:02+00:00,Christmas Light Show -- SystemVerilog code for synthesizing to FPGA,0,dschlai2/ChristmasLights,75356112,SystemVerilog,ChristmasLights,30,0,2016-12-02 03:16:47+00:00,[],
1038,https://github.com/Ranzeus/Decod_7_seg.git,2016-11-26 01:19:15+00:00,Decodificador em SystemVerilog para Um display de 7 Seguimentos,0,Ranzeus/Decod_7_seg,74797221,SystemVerilog,Decod_7_seg,0,0,2020-06-06 18:44:55+00:00,[],
1039,https://github.com/qwerjkl112/cmpen475.git,2016-12-01 00:02:12+00:00,,0,qwerjkl112/cmpen475,75238197,SystemVerilog,cmpen475,612,0,2016-12-01 00:04:59+00:00,[],
1040,https://github.com/maheshbabugorantla/AES128Bit.git,2017-02-08 08:01:09+00:00,This is the Final Project for the ECE 337 Course which contains the AES (Advanced Encryption Standard) with 128 bit Key,0,maheshbabugorantla/AES128Bit,81303653,SystemVerilog,AES128Bit,6466,0,2023-01-28 20:45:13+00:00,[],
1041,https://github.com/zguo16/microprocessor-design-.git,2017-02-08 05:39:42+00:00,"•  Use the tool Altera Quartus as hardware IDE, design and self-test a simple ISA(instruction set architecture),  •   Includes all basic hardware components, like ALU, register files, program counter, memory address register, memory data register, decoder, mux, registers, data path, control unit, top level, comparator, adder, cache, test bench, and unity test assembly code.  •   support up to 20 simple instructions(data movement, ALU operations and change instruction orders) based on LC3 models, e.g: AND, ADD, (immediate and register mode)NOT, TRAP, JSR, JSRR, BR, JMP, SHF, LDI, LDR, STI, STR, LDB, STB",1,zguo16/microprocessor-design-,81292047,SystemVerilog,microprocessor-design-,13,0,2017-02-08 05:41:03+00:00,[],
1042,https://github.com/shpach/SoccerFPGA.git,2017-01-05 01:13:07+00:00,Play soccer on a DE2-115 Board! Has multi-key support for USB keyboards as well as a VGA interface. Game modes can be changed via switches on the board.,0,shpach/SoccerFPGA,78066615,SystemVerilog,SoccerFPGA,13,0,2017-01-05 01:16:19+00:00,[],
1043,https://github.com/rrivg/flappy-bird.git,2017-01-07 00:31:49+00:00,,0,rrivg/flappy-bird,78249149,SystemVerilog,flappy-bird,8,0,2017-01-07 01:12:55+00:00,[],
1044,https://github.com/chkeita/fpga_dac.git,2016-06-19 18:42:19+00:00,,0,chkeita/fpga_dac,61494743,SystemVerilog,fpga_dac,1984,0,2016-06-19 18:50:36+00:00,[],
1045,https://github.com/evaneven/eecs31L_midterm_project.git,2016-10-30 10:51:41+00:00,,0,evaneven/eecs31L_midterm_project,72343737,SystemVerilog,eecs31L_midterm_project,7,0,2019-04-08 08:00:13+00:00,[],
1046,https://github.com/UCI-31L-Fall2016/Sequential-Example.git,2016-11-08 21:36:34+00:00,,1,UCI-31L-Fall2016/Sequential-Example,73229136,SystemVerilog,Sequential-Example,6,0,2016-11-08 21:41:54+00:00,[],
1047,https://github.com/tejchava1460/Evaluation-Project-for-ASIC-FPGA-Design-Engineer.git,2016-07-24 08:23:40+00:00,,1,tejchava1460/Evaluation-Project-for-ASIC-FPGA-Design-Engineer,64055925,SystemVerilog,Evaluation-Project-for-ASIC-FPGA-Design-Engineer,2232,0,2016-07-24 08:46:04+00:00,[],https://api.github.com/licenses/gpl-3.0
1048,https://github.com/AstroBoy1/EE-469.git,2016-10-17 21:42:09+00:00,labs and hw,0,AstroBoy1/EE-469,71183752,SystemVerilog,EE-469,11,0,2016-10-17 21:42:44+00:00,[],https://api.github.com/licenses/mit
1049,https://github.com/sreelaxmiU/SV-.git,2016-09-20 09:02:19+00:00,,0,sreelaxmiU/SV-,68694070,SystemVerilog,SV-,0,0,2016-09-20 09:03:22+00:00,[],
1050,https://github.com/C-L-G/spi_flash.git,2016-09-30 09:08:59+00:00,spi flash interface x1 x2 x4,2,C-L-G/spi_flash,69652000,SystemVerilog,spi_flash,136,0,2016-09-30 09:13:55+00:00,[],
1051,https://github.com/pbzw/MIPS-Supscalar-Processor.git,2016-10-08 05:07:43+00:00,,0,pbzw/MIPS-Supscalar-Processor,70305485,SystemVerilog,MIPS-Supscalar-Processor,35,0,2016-10-08 05:09:23+00:00,[],
1052,https://github.com/douglasnickson/DouglasNickson_Ex01_MB_SV.git,2016-11-19 00:08:52+00:00,Exercício 01 - SystemVerilog,0,douglasnickson/DouglasNickson_Ex01_MB_SV,74176273,SystemVerilog,DouglasNickson_Ex01_MB_SV,5,0,2016-11-21 02:09:50+00:00,[],
1053,https://github.com/jwmynhier/ece337.git,2016-12-01 20:20:15+00:00,,0,jwmynhier/ece337,75329400,SystemVerilog,ece337,1889,0,2016-12-08 01:20:32+00:00,[],
1054,https://github.com/SemperAnte/gain.git,2016-11-30 10:26:15+00:00,,0,SemperAnte/gain,75176388,SystemVerilog,gain,9,0,2016-11-30 10:27:45+00:00,[],
1055,https://github.com/guilherme27/GuilhermeP_Display7_Seg.git,2016-11-25 16:58:19+00:00,,0,guilherme27/GuilhermeP_Display7_Seg,74775199,SystemVerilog,GuilhermeP_Display7_Seg,0,0,2016-11-25 16:59:49+00:00,[],
1056,https://github.com/nikhilgrover/EE469.git,2017-02-02 03:44:07+00:00,Lab assignments for EE469 at the University of Washington,0,nikhilgrover/EE469,80690745,SystemVerilog,EE469,55,0,2017-02-02 03:46:40+00:00,[],
1057,https://github.com/deterjan/FPGA-Tetris.git,2017-02-04 17:14:24+00:00,tetris in systemverilog on basys3,3,deterjan/FPGA-Tetris,80934610,SystemVerilog,FPGA-Tetris,32,0,2017-02-04 17:15:36+00:00,[],
1058,https://github.com/Manish1509/LayeredSequence.git,2016-12-16 06:57:02+00:00,,0,Manish1509/LayeredSequence,76629919,SystemVerilog,LayeredSequence,13,0,2016-12-16 07:12:46+00:00,[],
1059,https://github.com/tanishq-dubey/ECE411.git,2017-02-17 02:55:37+00:00,Repository for ECE 411 MP Code,1,tanishq-dubey/ECE411,82250498,SystemVerilog,ECE411,37852,0,2020-03-20 09:08:16+00:00,"['verilog', '420', 'fmax']",
1060,https://github.com/MarlonCosta/PID_SHA.git,2017-01-28 01:12:51+00:00,,0,MarlonCosta/PID_SHA,80259176,SystemVerilog,PID_SHA,4076,0,2017-01-28 01:15:02+00:00,[],
1061,https://github.com/HaoWangZ33/ECE437_Computer_Design_and_Prototyping.git,2017-01-20 02:57:49+00:00,Purdue ECE 437 Computer Design and Prototyping,0,HaoWangZ33/ECE437_Computer_Design_and_Prototyping,79519333,SystemVerilog,ECE437_Computer_Design_and_Prototyping,20583,0,2021-03-31 06:55:25+00:00,[],
1062,https://github.com/biyang23456/AWGN.git,2016-06-28 21:23:39+00:00,,0,biyang23456/AWGN,62175257,SystemVerilog,AWGN,4,0,2016-07-10 00:07:59+00:00,[],
1063,https://github.com/uarc/nexys4-u0-32.git,2016-06-30 00:33:51+00:00,The Nexys4 implementation of a u0-32.,0,uarc/nexys4-u0-32,62266903,SystemVerilog,nexys4-u0-32,56,0,2016-06-30 00:55:17+00:00,[],https://api.github.com/licenses/unlicense
1064,https://github.com/melt-umn/ableC-regex-lib.git,2016-10-29 11:44:01+00:00,,0,melt-umn/ableC-regex-lib,72281493,SystemVerilog,ableC-regex-lib,28,0,2023-01-16 19:53:24+00:00,[],
1065,https://github.com/DelishusCake/CSE320-Project.git,2016-11-29 16:20:26+00:00,A simple voice recorder for an FPGA written in SystemVerilog. ,0,DelishusCake/CSE320-Project,75099509,SystemVerilog,CSE320-Project,39,0,2017-01-20 19:18:42+00:00,[],
1066,https://github.com/AislanJefferson/Aislan_Ex01_MB_SV.git,2016-11-18 22:49:28+00:00,,0,AislanJefferson/Aislan_Ex01_MB_SV,74172576,SystemVerilog,Aislan_Ex01_MB_SV,3,0,2016-11-18 22:58:00+00:00,[],
1067,https://github.com/henry-ns/Henrique_Martins_Ex01_MB_SV.git,2016-11-18 23:00:26+00:00,Execício 1 de SystemVerilog,0,henry-ns/Henrique_Martins_Ex01_MB_SV,74173148,SystemVerilog,Henrique_Martins_Ex01_MB_SV,7,0,2020-01-05 01:52:44+00:00,"['exercism-solutions', 'training', 'microelectronics']",
1068,https://github.com/gvilardefarias/Gustavo_Ex01_MB_SV.git,2016-11-18 16:29:59+00:00,,0,gvilardefarias/Gustavo_Ex01_MB_SV,74147287,SystemVerilog,Gustavo_Ex01_MB_SV,9,0,2016-11-18 20:31:16+00:00,[],
1069,https://github.com/victtorhugo/Victtorhugo_EX01_MB_SV.git,2016-11-22 12:07:05+00:00,,0,victtorhugo/Victtorhugo_EX01_MB_SV,74468763,SystemVerilog,Victtorhugo_EX01_MB_SV,6085,0,2016-11-22 18:24:11+00:00,[],
1070,https://github.com/AlbertoFelix/Alberto_Display_7_Segmentos.git,2016-11-25 00:26:21+00:00,,0,AlbertoFelix/Alberto_Display_7_Segmentos,74713019,SystemVerilog,Alberto_Display_7_Segmentos,12,0,2016-11-25 22:55:37+00:00,[],
1071,https://github.com/carvalhodj/Maq_Refri.git,2017-01-25 12:32:20+00:00,"Máquina de estados simulando uma máquina de refrigerante, desenvolvida para dsiciplina de Infraestrutura de Hardware, do curso de Bach. em Sistemas de Informação da UFRPE.",0,carvalhodj/Maq_Refri,80012747,SystemVerilog,Maq_Refri,656,0,2020-12-02 15:49:34+00:00,[],
1072,https://github.com/abzain/ECE212.git,2017-01-31 16:18:35+00:00,Digital circuits,0,abzain/ECE212,80537604,SystemVerilog,ECE212,3107,0,2017-02-01 20:53:16+00:00,[],
1073,https://github.com/kkiningh/CESEL.git,2017-01-17 10:23:39+00:00,,0,kkiningh/CESEL,79215821,SystemVerilog,CESEL,3,0,2017-03-17 19:57:32+00:00,[],
1074,https://github.com/p5davis/ECE_111_Projects.git,2017-01-24 19:35:36+00:00,,0,p5davis/ECE_111_Projects,79946593,SystemVerilog,ECE_111_Projects,40,0,2017-01-24 19:46:28+00:00,[],
1075,https://github.com/Xenocidel/Kikei.git,2017-01-21 00:04:48+00:00,ARM Processor developed in EECS 112L Winter 2017,0,Xenocidel/Kikei,79611282,SystemVerilog,Kikei,41940,0,2017-06-25 23:07:53+00:00,[],
1076,https://github.com/su2278370/Halftone.git,2016-12-11 09:49:12+00:00,Low Power Design Homework1 Problem3,0,su2278370/Halftone,76165940,SystemVerilog,Halftone,4,0,2016-12-11 10:06:36+00:00,[],
1077,https://github.com/ssampaths/RTL.git,2016-10-03 18:29:15+00:00,A few examples of RTL designs created by James Schulman,0,ssampaths/RTL,69898700,SystemVerilog,RTL,889,0,2016-10-03 18:29:17+00:00,[],
1078,https://github.com/lowRISC/ibex.git,2017-08-08 12:16:36+00:00,"Ibex is a small 32 bit RISC-V CPU core, previously known as zero-riscy.",477,lowRISC/ibex,99689233,SystemVerilog,ibex,39273,1236,2024-04-13 11:35:18+00:00,"['hardware', 'cpucore', 'risc-v', 'rv32']",https://api.github.com/licenses/apache-2.0
1079,https://github.com/syntacore/scr1.git,2017-05-09 04:29:07+00:00,SCR1 is a high-quality open-source RISC-V MCU core in Verilog,258,syntacore/scr1,90702468,SystemVerilog,scr1,5740,768,2024-04-12 18:07:00+00:00,"['riscv', 'risc-v', 'rtl', 'verilog', 'rv32i', 'rv32e', 'rv32imc', 'rv32emc', 'ip', 'core']",
1080,https://github.com/tymonx/logic.git,2017-10-29 21:01:42+00:00,"CMake, SystemVerilog and SystemC utilities for creating, building and testing RTL projects for FPGAs and ASICs.",53,tymonx/logic,108771045,SystemVerilog,logic,840,250,2024-04-09 05:23:23+00:00,"['verilog', 'systemverilog', 'hdl', 'systemc', 'uvm', 'cpp', 'cmake', 'modelsim', 'verilator', 'verification', 'rtl', 'unit-tests', 'quartus', 'fpga', 'asic', 'testing-rtl', 'xilinx', 'vivado']",https://api.github.com/licenses/apache-2.0
1081,https://github.com/MiSTer-devel/NES_MiSTer.git,2017-06-14 12:01:51+00:00,,66,MiSTer-devel/NES_MiSTer,94326372,SystemVerilog,NES_MiSTer,103689,162,2024-04-12 20:19:47+00:00,[],
1082,https://github.com/OPAE/intel-fpga-bbb.git,2017-09-05 18:26:24+00:00,Basic Building Blocks (BBB) for OPAE-managed Intel FPGAs,32,OPAE/intel-fpga-bbb,102515882,SystemVerilog,intel-fpga-bbb,1756,102,2023-11-20 06:59:55+00:00,[],
1083,https://github.com/marcoz001/axi-uvm.git,2017-09-01 21:03:25+00:00,yet another AXI testbench repo. ;)  This is for my UVM practice.  https://marcoz001.github.io/axi-uvm/,48,marcoz001/axi-uvm,102152841,SystemVerilog,axi-uvm,15256,86,2024-04-03 04:56:32+00:00,[],https://api.github.com/licenses/lgpl-3.0
1084,https://github.com/RoaLogic/ahb3lite_interconnect.git,2017-03-29 08:58:21+00:00,AHB3-Lite Interconnect,26,RoaLogic/ahb3lite_interconnect,86560235,SystemVerilog,ahb3lite_interconnect,5070,75,2024-04-11 08:21:54+00:00,"['amba', 'ahb3-lite', 'switch', 'interconnect']",
1085,https://github.com/ananthbhat94/DDR4MemoryController.git,2017-08-16 22:03:02+00:00,HDL code for a DDR4 memory controller implementing an Open Page Policy and Out of Order execution.,28,ananthbhat94/DDR4MemoryController,100536314,SystemVerilog,DDR4MemoryController,22,61,2024-04-12 07:18:54+00:00,[],https://api.github.com/licenses/mit
1086,https://github.com/akzare/Async_FIFO_Verification.git,2017-11-13 20:51:30+00:00,Presents a verification use case for a typical Asynchronous FIFO based on Systemverilog and UVM.,12,akzare/Async_FIFO_Verification,110600628,SystemVerilog,Async_FIFO_Verification,22,42,2024-03-13 16:58:50+00:00,"['systemverilog-simulation', 'uvm-verification', 'hdl-async-fifo']",https://api.github.com/licenses/mit
1087,https://github.com/makestuff/altera-pcie.git,2017-09-16 18:31:37+00:00,Simple framework for building PCIe-based solutions for Altera FPGAs,12,makestuff/altera-pcie,103774948,SystemVerilog,altera-pcie,853,39,2024-02-07 01:09:44+00:00,[],https://api.github.com/licenses/mit
1088,https://github.com/RoaLogic/ahb3lite_apb_bridge.git,2017-03-29 08:51:47+00:00,Parameterised Asynchronous AHB3-Lite to APB4 Bridge.,18,RoaLogic/ahb3lite_apb_bridge,86559552,SystemVerilog,ahb3lite_apb_bridge,1185,38,2024-03-30 06:34:33+00:00,"['amba', 'apb-bridge', 'ahb3-lite', 'apb']",
1089,https://github.com/vinodsake/NAND-Flash-Memory-Controller-verification.git,2017-03-31 22:39:00+00:00,,11,vinodsake/NAND-Flash-Memory-Controller-verification,86865610,SystemVerilog,NAND-Flash-Memory-Controller-verification,776,36,2024-04-04 15:49:48+00:00,[],
1090,https://github.com/MatrixAINetwork/Sampling-Model.git,2017-08-15 13:23:09+00:00,Hardware of sampling model,42,MatrixAINetwork/Sampling-Model,100379647,SystemVerilog,Sampling-Model,1006,35,2023-03-30 13:56:48+00:00,[],
1091,https://github.com/RoaLogic/plic.git,2017-09-21 13:50:26+00:00,Platform Level Interrupt Controller,13,RoaLogic/plic,104354098,SystemVerilog,plic,8777,32,2024-04-08 08:17:45+00:00,[],
1092,https://github.com/k0nze/zedboard_axi4_master_burst_example.git,2017-05-11 09:14:26+00:00,Quick Example how to generate an custom AXI4 IP with AXI4-Full interface (burst) for the Zynq (ZedBoard),8,k0nze/zedboard_axi4_master_burst_example,90960546,SystemVerilog,zedboard_axi4_master_burst_example,1397,30,2024-04-06 21:38:58+00:00,[],
1093,https://github.com/yvnr4you/AMBA_AXI3.git,2017-03-09 09:43:13+00:00,System Verilog and Emulation. Written all the five channels.,14,yvnr4you/AMBA_AXI3,84424933,SystemVerilog,AMBA_AXI3,28,30,2024-03-20 01:21:42+00:00,[],
1094,https://github.com/raiker/tarsier.git,2017-07-05 07:56:59+00:00,,9,raiker/tarsier,96292744,SystemVerilog,tarsier,163,28,2024-02-19 10:43:21+00:00,[],https://api.github.com/licenses/mpl-2.0
1095,https://github.com/pulp-platform/fpu.git,2017-08-08 12:15:22+00:00,,19,pulp-platform/fpu,99689118,SystemVerilog,fpu,2790,28,2024-04-10 10:23:04+00:00,[],
1096,https://github.com/Xilinx/RFNoC-HLS-ATSC-RX.git,2017-06-29 17:47:31+00:00,,9,Xilinx/RFNoC-HLS-ATSC-RX,95804082,SystemVerilog,RFNoC-HLS-ATSC-RX,178259,26,2024-03-11 00:46:21+00:00,[],
1097,https://github.com/thomask77/verilog-sid-mos6581.git,2017-09-17 21:46:03+00:00,MOS6581 SID chip emulator in SystemVerilog,3,thomask77/verilog-sid-mos6581,103864250,SystemVerilog,verilog-sid-mos6581,37,24,2023-02-16 15:29:32+00:00,"['sid', 'c64', 'verilog', '6581', '8580', 'chiptune', 'sound-synthesis', 'fpga']",
1098,https://github.com/myriadrf/LimeADPD.git,2017-06-16 08:52:26+00:00,Lime Adaptive Digital Predistortion,11,myriadrf/LimeADPD,94525062,SystemVerilog,LimeADPD,50920,23,2024-04-08 08:16:36+00:00,"['rf', 'sdr', 'dpd', 'adpd', 'dsp', 'lte', 'amplifier', 'wireless']",https://api.github.com/licenses/apache-2.0
1099,https://github.com/dovoto/FPGA_Gameboy_Watch.git,2017-07-14 17:57:35+00:00,Full gameboy and gameboy color Verilog Implenentation,2,dovoto/FPGA_Gameboy_Watch,97259941,SystemVerilog,FPGA_Gameboy_Watch,905,22,2023-12-20 12:31:24+00:00,[],
1100,https://github.com/MushroomZQ/RISC_VERIF_DEMO_0.git,2017-09-20 09:07:17+00:00,a very simple risc_cpu verification demo with uvm,5,MushroomZQ/RISC_VERIF_DEMO_0,104192191,SystemVerilog,RISC_VERIF_DEMO_0,91,21,2024-02-04 02:00:48+00:00,[],
1101,https://github.com/hanysalah/uart2bustestbench.git,2017-06-27 12:00:34+00:00,UVM Verification IP to uart2bus IP. ,8,hanysalah/uart2bustestbench,95553593,SystemVerilog,uart2bustestbench,12563,20,2023-12-02 08:23:47+00:00,[],
1102,https://github.com/taichi-ishitani/tue.git,2017-03-02 16:33:21+00:00,Useful UVM extensions,4,taichi-ishitani/tue,83700105,SystemVerilog,tue,99,19,2024-04-10 11:53:32+00:00,"['uvm', 'systemverilog']",https://api.github.com/licenses/apache-2.0
1103,https://github.com/taichi-ishitani/tvip-apb.git,2017-05-11 16:20:06+00:00,Verification IP for AMBA APB Protocol,6,taichi-ishitani/tvip-apb,91000011,SystemVerilog,tvip-apb,25,19,2024-03-08 09:36:52+00:00,"['uvm', 'systemverilog', 'vip', 'amba', 'apb']",https://api.github.com/licenses/apache-2.0
1104,https://github.com/smartfoxdata/uvm_apb.git,2017-05-04 02:37:03+00:00,uvm_apb is a uvm package for modeling and verifying APB (Advanced Periperal Bus) protocol,2,smartfoxdata/uvm_apb,90213676,SystemVerilog,uvm_apb,5,19,2022-11-19 01:00:19+00:00,[],https://api.github.com/licenses/mit
1105,https://github.com/RoaLogic/Hamming-ECC.git,2017-04-07 10:02:36+00:00,Hamming ECC Encoder and Decoder to protect memories,19,RoaLogic/Hamming-ECC,87532443,SystemVerilog,Hamming-ECC,51,19,2024-03-27 02:05:35+00:00,[],
1106,https://github.com/pengwubj/hw_interview_questions.git,2017-08-23 10:52:42+00:00,A collection of commonly asked RTL design interview questions,13,pengwubj/hw_interview_questions,101169897,SystemVerilog,hw_interview_questions,185,18,2024-03-11 18:13:30+00:00,[],https://api.github.com/licenses/gpl-3.0
1107,https://github.com/rgwan/AMBA.git,2017-03-25 10:06:55+00:00,"Collection of IPs based on AMBA (AHB, APB, AXI) protocols",2,rgwan/AMBA,86148410,SystemVerilog,AMBA,70,18,2023-03-20 19:28:45+00:00,[],
1108,https://github.com/RoaLogic/ahb3lite_memory.git,2017-03-29 09:01:33+00:00,Multi-Technology RAM with AHB3Lite interface,16,RoaLogic/ahb3lite_memory,86560530,SystemVerilog,ahb3lite_memory,1574,18,2024-01-16 08:16:59+00:00,"['ahb3-lite', 'ahb3lite-memory', 'amba']",
1109,https://github.com/pbridd/lzrw1-compression-core.git,2017-10-18 01:22:04+00:00,This is the repository for a verilog implementation of a lzrw1 compression core,2,pbridd/lzrw1-compression-core,107342910,SystemVerilog,lzrw1-compression-core,3822,17,2023-11-14 08:11:02+00:00,[],https://api.github.com/licenses/mit
1110,https://github.com/zhouchuanrui/Cryptography-in-Systemverilog.git,2017-03-08 13:54:14+00:00,A collection of cryptographic algorthms implemented in SystemVerilog,7,zhouchuanrui/Cryptography-in-Systemverilog,84325812,SystemVerilog,Cryptography-in-Systemverilog,97,17,2024-01-29 02:04:55+00:00,"['aes', 'systemverilog', 'cryptography', 'des', 'cbc', 'hash', 'hmac', 'md5', 'sha-1', 'sha-2']",https://api.github.com/licenses/mit
1111,https://github.com/raysalemi/fpgasimulation.git,2017-04-06 04:54:35+00:00,Example files for the book FPGA SIMULATION,13,raysalemi/fpgasimulation,87387587,SystemVerilog,fpgasimulation,4074,16,2024-03-17 19:08:18+00:00,[],
1112,https://github.com/smartfoxdata/uvm_axi.git,2017-05-22 01:43:00+00:00,uvm_axi is a uvm package for modeling and verifying AXI protocol,4,smartfoxdata/uvm_axi,92000389,SystemVerilog,uvm_axi,8,15,2023-12-10 09:47:22+00:00,[],https://api.github.com/licenses/mit
1113,https://github.com/arcade-lab/tia-infrastructure.git,2017-09-07 17:36:38+00:00,,3,arcade-lab/tia-infrastructure,102767081,SystemVerilog,tia-infrastructure,728,15,2023-12-05 22:37:28+00:00,[],https://api.github.com/licenses/mit
1114,https://github.com/RoaLogic/ahb3lite_pkg.git,2017-03-29 08:47:04+00:00,Common SystemVerilog package used by all RoaLogic IP with AMBA AHB3-Lite interfaces,9,RoaLogic/ahb3lite_pkg,86558998,SystemVerilog,ahb3lite_pkg,38,14,2024-03-22 13:12:01+00:00,[],
1115,https://github.com/smartfoxdata/uvm_axi4lite.git,2017-05-10 04:57:40+00:00,uvm_axi4lite is a uvm package for modeling and verifying AXI4 Lite protocol,3,smartfoxdata/uvm_axi4lite,90822500,SystemVerilog,uvm_axi4lite,9,14,2023-06-19 08:29:25+00:00,[],https://api.github.com/licenses/mit
1116,https://github.com/RoaLogic/apb4_mux.git,2017-03-29 16:21:28+00:00,APB4 Multiplexor,5,RoaLogic/apb4_mux,86604403,SystemVerilog,apb4_mux,2629,13,2024-01-25 23:02:24+00:00,['apb'],
1117,https://github.com/rajdeep87/verilog-c.git,2017-03-03 19:06:39+00:00,ANSI-C benchmarks generated from Verilog RTL circuits with safety assertions. Used for Formal Property Verification.  ,1,rajdeep87/verilog-c,83831861,SystemVerilog,verilog-c,1640,13,2024-03-13 06:44:14+00:00,[],
1118,https://github.com/imokanj/gpio_agent.git,2017-05-07 16:47:00+00:00,General Purpose I/O agent written in UVM,11,imokanj/gpio_agent,90547316,SystemVerilog,gpio_agent,1096,12,2024-01-26 05:51:28+00:00,"['uvm', 'systemverilog', 'simulation', 'uvc']",https://api.github.com/licenses/gpl-3.0
1119,https://github.com/taichi-ishitani/tvip-common.git,2017-05-09 16:59:32+00:00,,4,taichi-ishitani/tvip-common,90770615,SystemVerilog,tvip-common,23,11,2024-02-23 06:34:05+00:00,[],https://api.github.com/licenses/apache-2.0
1120,https://github.com/RoaLogic/ahb3lite_timer.git,2017-04-24 10:09:21+00:00,RISC-V compliant Timer IP,7,RoaLogic/ahb3lite_timer,89226015,SystemVerilog,ahb3lite_timer,1814,11,2023-11-08 14:07:35+00:00,"['ahb3-lite', 'timer', 'risc-v']",
1121,https://github.com/imokanj/clk_rst_agent.git,2017-06-08 18:02:09+00:00,UVM Clock and Reset Agent,6,imokanj/clk_rst_agent,93777678,SystemVerilog,clk_rst_agent,54,11,2024-01-25 17:01:59+00:00,[],https://api.github.com/licenses/gpl-3.0
1122,https://github.com/RoaLogic/apb4_gpio.git,2017-03-29 16:19:19+00:00,General Purpose IO with APB4 interface,9,RoaLogic/apb4_gpio,86604185,SystemVerilog,apb4_gpio,2176,10,2023-10-21 08:29:51+00:00,"['amba', 'apb', 'gpio']",
1123,https://github.com/smartfoxdata/uvm_starter.git,2017-04-20 02:41:00+00:00,uvm_starter is a simple template for starting uvm projects,1,smartfoxdata/uvm_starter,88812879,SystemVerilog,uvm_starter,16,10,2023-08-07 20:58:17+00:00,[],https://api.github.com/licenses/mit
1124,https://github.com/jomonkjoy/Tri-Mode-Ethernet-MAC-10-100-1000-.git,2017-08-03 19:35:40+00:00,Ethernet-MAC System verilog,7,jomonkjoy/Tri-Mode-Ethernet-MAC-10-100-1000-,99268431,SystemVerilog,Tri-Mode-Ethernet-MAC-10-100-1000-,26,10,2023-11-01 11:16:07+00:00,[],https://api.github.com/licenses/gpl-3.0
1125,https://github.com/vinodsake/Last-Level-Cache-Simulator.git,2017-03-31 22:39:38+00:00,,4,vinodsake/Last-Level-Cache-Simulator,86865662,SystemVerilog,Last-Level-Cache-Simulator,754,10,2024-04-01 04:52:03+00:00,"['cache-simulator', 'systemverilog-hdl']",
1126,https://github.com/yeehui1988/QCM.git,2017-10-02 00:34:02+00:00,Quantum Circuit Modelling Using State Vector and Heisenberg Representations,6,yeehui1988/QCM,105485005,SystemVerilog,QCM,232,9,2024-03-28 10:53:05+00:00,[],https://api.github.com/licenses/bsd-3-clause
1127,https://github.com/RoaLogic/universal_jtag_tap.git,2017-05-09 10:17:58+00:00,Universal JTAG TAP Controller,5,RoaLogic/universal_jtag_tap,90732499,SystemVerilog,universal_jtag_tap,8,9,2024-02-02 06:15:07+00:00,[],
1128,https://github.com/jchengX/MAC_BFM.git,2017-06-03 09:41:57+00:00,wifi,2,jchengX/MAC_BFM,93238899,SystemVerilog,MAC_BFM,42,9,2023-10-28 06:52:27+00:00,"['802-11', 'systemverilog', 'uvm', 'verification']",
1129,https://github.com/omphardcloud/hardcloud.git,2017-10-08 04:21:54+00:00,FPGA as an OpenMP Offloading Device.,3,omphardcloud/hardcloud,106149742,SystemVerilog,hardcloud,116870,9,2022-06-13 22:18:19+00:00,"['hardcloud', 'openmp', 'harp']",https://api.github.com/licenses/apache-2.0
1130,https://github.com/0ctobyte/procyon.git,2017-07-09 02:47:08+00:00,Procyon is the brightest star in the constellation of Canis Minor. But it's also the name of my RISC-V out-of-order processor.,4,0ctobyte/procyon,96657137,SystemVerilog,procyon,5054,9,2023-12-14 17:38:57+00:00,"['fpga', 'riscv', 'processor', 'systemverilog']",https://api.github.com/licenses/mit
1131,https://github.com/PulseRain/FP51_fast_core.git,2017-04-30 20:14:00+00:00,PulseRain FP51-1T MCU core,3,PulseRain/FP51_fast_core,89874554,SystemVerilog,FP51_fast_core,59,8,2023-06-28 06:24:32+00:00,[],
1132,https://github.com/pulp-platform/apb_uart_sv.git,2017-08-08 12:09:54+00:00,,14,pulp-platform/apb_uart_sv,99688639,SystemVerilog,apb_uart_sv,16,8,2024-03-06 12:19:28+00:00,[],
1133,https://github.com/smartfoxdata/axi4lite_gpio.git,2017-05-11 02:42:00+00:00,General purpose IO port with AXI4-Lite interface,2,smartfoxdata/axi4lite_gpio,90929519,SystemVerilog,axi4lite_gpio,7,8,2024-03-12 09:34:43+00:00,[],https://api.github.com/licenses/mit
1134,https://github.com/kbbuch/LC3-Verification.git,2017-06-22 17:08:47+00:00,Verification of a 5 stage LC3 pipelined CPU with System Verilog and Mentor Graphics ModelSim,0,kbbuch/LC3-Verification,95138518,SystemVerilog,LC3-Verification,247,7,2024-04-13 20:47:41+00:00,"['verification', 'lc3', 'systemverilog']",
1135,https://github.com/mayurkubavat/UPF.git,2017-07-23 12:01:06+00:00,Constructs for Unified Low Power Format (UPF) with Verilog/SystemVeriog designs,7,mayurkubavat/UPF,98094908,SystemVerilog,UPF,5,7,2023-03-16 17:04:54+00:00,[],
1136,https://github.com/ghosh17/DualCoreProcessor.git,2017-08-22 22:36:10+00:00,"ASIC Design lab. Pipelined, Cached, Multicore MIPS Processor",2,ghosh17/DualCoreProcessor,101113351,SystemVerilog,DualCoreProcessor,305,7,2024-03-04 05:47:20+00:00,"['systemverilog-hdl', 'systemverilog', 'asic', 'rtl']",
1137,https://github.com/bchangip/NibblerCPU.git,2017-11-07 01:16:56+00:00,4-bit CPU written in SystemVerilog,0,bchangip/NibblerCPU,109769671,SystemVerilog,NibblerCPU,24,6,2023-11-06 15:54:28+00:00,"['nibbler', 'icarus', 'verilog', 'systemverilog', 'cpu', '4-bit']",
1138,https://github.com/smartfoxdata/aes128.git,2017-05-22 02:54:08+00:00,The aes128 is a SystemVerilog implementation of the AES algorithm with 128-bit key,1,smartfoxdata/aes128,92005209,SystemVerilog,aes128,17,6,2022-07-15 06:58:42+00:00,[],https://api.github.com/licenses/mit
1139,https://github.com/bharathp04/ahb2apb_bridge_verification.git,2017-10-29 22:17:20+00:00,Verification using Mentor Veloce Emulator in TBX mode,2,bharathp04/ahb2apb_bridge_verification,108776025,SystemVerilog,ahb2apb_bridge_verification,11216,6,2023-08-28 06:13:43+00:00,[],
1140,https://github.com/chan-henry/apb_uvm.git,2017-04-09 15:52:38+00:00,Advanced Peripheral Bus (APB) UVM testbench project,1,chan-henry/apb_uvm,87720169,SystemVerilog,apb_uvm,105149,6,2023-09-07 07:00:19+00:00,[],
1141,https://github.com/ridvancelikcs/Songs.git,2017-04-17 21:14:30+00:00,monophonic songs on the fpga board (BASYS3),1,ridvancelikcs/Songs,88551313,SystemVerilog,Songs,15,6,2024-02-04 18:35:36+00:00,[],
1142,https://github.com/EliasManj/Verilog-PS2-LCD-Interface.git,2017-10-30 23:25:47+00:00,Quartus II project for a basic interface for writing in a LCD screen using a PS2 keyboard using Altera DE2-70 board,1,EliasManj/Verilog-PS2-LCD-Interface,108919579,SystemVerilog,Verilog-PS2-LCD-Interface,1299,6,2024-04-10 20:35:28+00:00,"['system-verilog', 'ps2-keyboard', 'finite-state-machine', 'lcd-display']",
1143,https://github.com/sanketkkeni/Dual-issue-Pipelined-Multimedia-Processor-Architecture-.git,2017-10-29 05:19:07+00:00,"Developed a Dual-issue Pipelined Multimedia Processor based on SONY Cell SIMD ISA with 2 block direct mapped cache. • The functional design was created in System Verilog and parser script in PERL that converts Assembly language to 32 bit of instructions. • Successfully detected and resolved all the hazards like Data Hazards (RAW & WAW), Structural Hazards and Control hazards",1,sanketkkeni/Dual-issue-Pipelined-Multimedia-Processor-Architecture-,108707375,SystemVerilog,Dual-issue-Pipelined-Multimedia-Processor-Architecture-,928,6,2023-12-06 06:12:48+00:00,[],
1144,https://github.com/jomonkjoy/NAND-Flash-Controller.git,2017-11-20 17:38:41+00:00,"2, 4, 8Gb: x8/x16 Multiplexed NAND Flash Memory",2,jomonkjoy/NAND-Flash-Controller,111442632,SystemVerilog,NAND-Flash-Controller,22,6,2024-04-11 03:43:42+00:00,[],https://api.github.com/licenses/gpl-3.0
1145,https://github.com/lx2u16/ELEC6234_picoMIPS_processor_Coursework.git,2017-05-19 17:01:55+00:00,,0,lx2u16/ELEC6234_picoMIPS_processor_Coursework,91827732,SystemVerilog,ELEC6234_picoMIPS_processor_Coursework,3139,6,2024-03-24 07:45:37+00:00,[],
1146,https://github.com/aunics/AHB5.git,2017-11-03 21:57:55+00:00,AMBA AHB 5.0 VIP in SystemVerilog based on UVM,2,aunics/AHB5,109446401,SystemVerilog,AHB5,4,6,2024-03-29 06:49:11+00:00,"['system', 'verilog', 'ahb', 'axi', 'uvm']",
1147,https://github.com/theSergeyGusev/svReadWrite_pcap.git,2017-09-08 19:22:46+00:00,simple read/write pcap tasks for SystemVerilog test,2,theSergeyGusev/svReadWrite_pcap,102896785,SystemVerilog,svReadWrite_pcap,51,6,2023-11-10 06:28:12+00:00,"['fpga', 'systemverilog', 'modelsim', 'pcap', 'scapy']",
1148,https://github.com/mgoldio/tiny8v1.git,2017-05-05 00:13:18+00:00,,0,mgoldio/tiny8v1,90320622,SystemVerilog,tiny8v1,31,6,2023-05-29 10:35:41+00:00,[],https://api.github.com/licenses/apache-2.0
1149,https://github.com/Lorea-Aldabaldetreku/Elektronika-digitalaren-oinarrizko-kontzeptuak.git,2017-08-23 15:21:01+00:00,Curso con FPGA para alumnos de secundaria y bachiller,2,Lorea-Aldabaldetreku/Elektronika-digitalaren-oinarrizko-kontzeptuak,101195298,SystemVerilog,Elektronika-digitalaren-oinarrizko-kontzeptuak,205565,5,2021-03-06 08:48:27+00:00,[],
1150,https://github.com/JamesG321/FPGA-GPU.git,2017-08-29 15:34:52+00:00,,2,JamesG321/FPGA-GPU,101777430,SystemVerilog,FPGA-GPU,446,5,2022-10-27 07:27:26+00:00,[],
1151,https://github.com/jomonkjoy/PCIe-Controller.git,2017-07-28 13:53:13+00:00,PCI Express ® Base Specification  Revision 3.0 ,3,jomonkjoy/PCIe-Controller,98654346,SystemVerilog,PCIe-Controller,21,5,2023-06-17 10:38:00+00:00,[],https://api.github.com/licenses/gpl-3.0
1152,https://github.com/tfchu/verilog_test.git,2017-09-13 21:22:06+00:00,,3,tfchu/verilog_test,103452254,SystemVerilog,verilog_test,170,5,2023-08-09 16:47:46+00:00,[],
1153,https://github.com/akgmartin/dicells.git,2017-11-10 22:46:28+00:00,Cell Library for Delay Insensitive Synchronous Hardware,4,akgmartin/dicells,110299741,SystemVerilog,dicells,58,5,2023-09-08 06:51:28+00:00,[],https://api.github.com/licenses/apache-2.0
1154,https://github.com/PulseRain/PulseRain_rtl_lib.git,2017-03-13 21:55:05+00:00,PulseRain rtl library,4,PulseRain/PulseRain_rtl_lib,84878344,SystemVerilog,PulseRain_rtl_lib,102,5,2022-12-31 02:26:43+00:00,[],
1155,https://github.com/AniketBadhan/Canny-Edge-Detection.git,2017-10-02 15:16:07+00:00,RTL Code for Canny Edge Detection,1,AniketBadhan/Canny-Edge-Detection,105549697,SystemVerilog,Canny-Edge-Detection,1088,4,2023-11-27 13:06:59+00:00,[],
1156,https://github.com/uwesimm/uvm-indirect-registers.git,2017-11-06 08:46:25+00:00,an infrastructure to implement arbitrary indirect registers on top of uvm,3,uwesimm/uvm-indirect-registers,109669468,SystemVerilog,uvm-indirect-registers,735,4,2022-04-06 03:30:28+00:00,"['uvm', 'systemverilog', 'sv', 'ieee1800-2', 'register', 'cadence', 'dvcon']",https://api.github.com/licenses/apache-2.0
1157,https://github.com/jchengX/AXI_DRIVER.git,2017-06-03 09:45:12+00:00,,3,jchengX/AXI_DRIVER,93239077,SystemVerilog,AXI_DRIVER,24,4,2022-02-18 16:51:02+00:00,"['axi', 'systemverilog', 'uvm']",
1158,https://github.com/MilanKubavat/UVM.git,2017-09-17 07:55:33+00:00,UVM Examples & Projects,2,MilanKubavat/UVM,103812430,SystemVerilog,UVM,59,4,2023-08-21 08:28:02+00:00,[],
1159,https://github.com/vinodsake/8-Bit-5-Stage-Microprocessor-Design.git,2017-04-01 03:10:32+00:00,,0,vinodsake/8-Bit-5-Stage-Microprocessor-Design,86879344,SystemVerilog,8-Bit-5-Stage-Microprocessor-Design,1959,4,2023-07-14 07:21:27+00:00,"['microprocessor', 'systemverilog-hdl']",
1160,https://github.com/ourarash/SystemVerilogCSP.git,2017-10-01 02:22:17+00:00,SystemVerilog Library for Modeling Asynchronous Circuits,2,ourarash/SystemVerilogCSP,105414066,SystemVerilog,SystemVerilogCSP,9,4,2024-02-19 19:24:16+00:00,[],
1161,https://github.com/ineganov/alpha.git,2017-06-04 22:19:56+00:00,64-bit Alpha Architecture implementation,2,ineganov/alpha,93344850,SystemVerilog,alpha,71,3,2022-03-15 23:15:18+00:00,[],
1162,https://github.com/jomonkjoy/Low-Speed-Controllers.git,2017-08-04 17:04:49+00:00,"I2C, SPI, UART memory bridge",1,jomonkjoy/Low-Speed-Controllers,99363843,SystemVerilog,Low-Speed-Controllers,13,3,2022-12-29 01:36:42+00:00,[],
1163,https://github.com/phanrahan/pe.git,2017-10-16 20:25:32+00:00,,4,phanrahan/pe,107179123,SystemVerilog,pe,150,3,2019-08-16 10:30:07+00:00,[],
1164,https://github.com/danieljimenezl/GPU_ENV.git,2017-05-05 16:33:38+00:00,,0,danieljimenezl/GPU_ENV,90396352,SystemVerilog,GPU_ENV,95,3,2023-02-11 09:56:31+00:00,[],https://api.github.com/licenses/gpl-3.0
1165,https://github.com/bhaveshghantiwala/10-gigabit-ethernet-mac-verification.git,2017-05-05 23:37:14+00:00,Verification of a 10 Gigabit Ethernet MAC using a SystemVerilog OOP Testbench,1,bhaveshghantiwala/10-gigabit-ethernet-mac-verification,90424668,SystemVerilog,10-gigabit-ethernet-mac-verification,9,3,2023-07-10 14:20:27+00:00,[],
1166,https://github.com/kkiningh/asic-design.git,2017-03-12 22:19:06+00:00,A small collection of tutorials and tools for ASIC design.,0,kkiningh/asic-design,84761590,SystemVerilog,asic-design,62,3,2021-11-10 19:57:10+00:00,"['asic', 'verilog', 'systemverilog', 'synopsys']",https://api.github.com/licenses/mit
1167,https://github.com/cquickstad/uvm_unit.git,2017-05-23 00:06:48+00:00,A Unit-Testing Framework for SystemVerilog and UVM,0,cquickstad/uvm_unit,92110313,SystemVerilog,uvm_unit,1406,3,2022-03-14 08:35:26+00:00,[],https://api.github.com/licenses/apache-2.0
1168,https://github.com/yiwenlu66/fpga-nn-experiment.git,2017-08-23 15:55:03+00:00,Experimental implementation of neural networks on FPGA,1,yiwenlu66/fpga-nn-experiment,101198827,SystemVerilog,fpga-nn-experiment,52,3,2021-12-09 13:05:53+00:00,[],
1169,https://github.com/sanketkkeni/Hardware-Generation-tool-for-Matrix-Vector-Multiplication.git,2017-10-16 23:13:11+00:00,"A Hardware Generation Tool in C++ to generate synthesizable System Verilog code for implementation of a Matrix-Vector Multiplier with the choice of parameters like matrix and vector size, bit-width, parallelism and pipelining.",0,sanketkkeni/Hardware-Generation-tool-for-Matrix-Vector-Multiplication,107192729,SystemVerilog,Hardware-Generation-tool-for-Matrix-Vector-Multiplication,5901,3,2024-01-08 15:02:37+00:00,[],
1170,https://github.com/Dimitrov2005/FIFO-testbench-with-systemVerilog.git,2017-07-10 16:15:09+00:00,FIFO testbench with SystemVerilog,0,Dimitrov2005/FIFO-testbench-with-systemVerilog,96797501,SystemVerilog,FIFO-testbench-with-systemVerilog,12,3,2021-11-25 04:37:53+00:00,[],
1171,https://github.com/yalchinAlv/MarbleMazeGame.git,2017-04-01 11:25:20+00:00,Marble maze game implemented on SystemVerilog for Basys3,0,yalchinAlv/MarbleMazeGame,86908798,SystemVerilog,MarbleMazeGame,1329,3,2023-12-16 11:35:55+00:00,"['systemverilog', 'basys3', 'mpu6050', 'max7219']",
1172,https://github.com/AniketBadhan/AXI-VIP-Development.git,2017-10-23 02:57:42+00:00,,2,AniketBadhan/AXI-VIP-Development,107925000,SystemVerilog,AXI-VIP-Development,25,3,2024-01-08 17:26:49+00:00,[],
1173,https://github.com/sugureshkumar/2-1-Mux-Verification-using-UVM.git,2017-11-17 05:29:55+00:00,this is for example to learn the UVM methodology ,3,sugureshkumar/2-1-Mux-Verification-using-UVM,111062034,SystemVerilog,2-1-Mux-Verification-using-UVM,5,3,2024-02-09 06:41:16+00:00,[],
1174,https://github.com/jeras/vivado_simulator.git,2017-08-10 20:24:46+00:00,Evaluation of the Xilinx Vivado simulator,1,jeras/vivado_simulator,99962009,SystemVerilog,vivado_simulator,215,3,2023-03-14 09:09:19+00:00,[],
1175,https://github.com/jh46537/fvm.git,2017-11-17 21:46:24+00:00,,0,jh46537/fvm,111153831,SystemVerilog,fvm,58669,3,2022-01-28 21:32:59+00:00,[],
1176,https://github.com/lowRISC/minion_subsystem.git,2017-03-10 17:14:02+00:00,minion_subsystem for lowrisc rocket core (version 2),2,lowRISC/minion_subsystem,84583237,SystemVerilog,minion_subsystem,4031,3,2019-02-17 23:50:37+00:00,[],
1177,https://github.com/mkowalik/TetrisFPGA.git,2017-04-23 12:15:04+00:00,"This is project of simple Tetris game written in Verilog langueage deployed on BASYS3 FPGA development board for course 'Digital electronic circuits 2' for 'Microelectronics in industry and medicine' Field of Study on AGH University of Science and Technology in Krakow. Members: Monika Dutkowska, Michał Kowalik. ",1,mkowalik/TetrisFPGA,89139343,SystemVerilog,TetrisFPGA,1648,2,2022-04-22 15:39:35+00:00,[],
1178,https://github.com/taichi-ishitani/rggen-building-block-rtl.git,2017-05-11 14:39:26+00:00,RgGen Building Block for RTL Generation,0,taichi-ishitani/rggen-building-block-rtl,90989650,SystemVerilog,rggen-building-block-rtl,1410,2,2022-02-17 22:12:05+00:00,[],https://api.github.com/licenses/mit
1179,https://github.com/gvilardefarias/DDLS.git,2017-05-11 01:19:07+00:00,Digital Design Learning System,0,gvilardefarias/DDLS,90923088,SystemVerilog,DDLS,19245,2,2018-03-27 03:34:19+00:00,[],
1180,https://github.com/amiq-consulting/accessor_class_example.git,2017-05-08 08:05:22+00:00,An example of using accessor classes and parameterization to reduce the number of VIP instances,0,amiq-consulting/accessor_class_example,90602109,SystemVerilog,accessor_class_example,6,2,2022-02-18 01:37:15+00:00,[],
1181,https://github.com/balos1/fpga-sparse-matrix-mult.git,2017-11-11 05:30:08+00:00,A sparse matrix multiplication FPGA architecture which acts as a 'coprocessor'.,2,balos1/fpga-sparse-matrix-mult,110320846,SystemVerilog,fpga-sparse-matrix-mult,3214,2,2018-07-28 18:22:44+00:00,"['fpga', 'sparse-matrix', 'sparse-matrices', 'matrix-factorization']",
1182,https://github.com/LEO-LEAL/Midterm_CSE_31L.git,2017-10-24 23:22:36+00:00,CSE 31L,0,LEO-LEAL/Midterm_CSE_31L,108194597,SystemVerilog,Midterm_CSE_31L,137,2,2017-10-28 06:06:12+00:00,[],
1183,https://github.com/jay16udani/ECE745_LC3_Verification.git,2017-06-05 05:17:16+00:00,North Carolina State University: ECE 745 : Project: LC3 Microcontroller Functional Verification using SystemVerilog,3,jay16udani/ECE745_LC3_Verification,93367626,SystemVerilog,ECE745_LC3_Verification,1152,2,2024-04-13 20:47:10+00:00,[],
1184,https://github.com/mathur/lc3_processor.git,2017-05-05 23:19:50+00:00,:computer: A pipelined processor for the LC-3b ISA with advanced features,0,mathur/lc3_processor,90423980,SystemVerilog,lc3_processor,178380,2,2019-10-02 04:54:33+00:00,[],https://api.github.com/licenses/apache-2.0
1185,https://github.com/kyle-sit/Floating-Point-Modules.git,2017-11-08 00:08:07+00:00,Floating point adder/subtractor and multiplier in SystemVerilog,1,kyle-sit/Floating-Point-Modules,109905833,SystemVerilog,Floating-Point-Modules,14,2,2022-05-06 04:31:05+00:00,[],
1186,https://github.com/NotZombieFood/MIPS-SystemVerilog.git,2017-10-11 22:48:10+00:00,MIPS written in System Verilog,1,NotZombieFood/MIPS-SystemVerilog,106617380,SystemVerilog,MIPS-SystemVerilog,38,2,2021-12-16 23:44:03+00:00,"['systemverilog', 'verilog', 'mips', 'mips32cpu', 'digital-design']",
1187,https://github.com/taichi-ishitani/rggen-building-block-ral.git,2017-05-11 14:46:07+00:00,RgGen Building Block For RAL Model Generation,0,taichi-ishitani/rggen-building-block-ral,90990372,SystemVerilog,rggen-building-block-ral,7,2,2022-05-04 12:52:10+00:00,[],https://api.github.com/licenses/mit
1188,https://github.com/godfeng/FMC125.git,2017-10-18 02:37:47+00:00,based on Xilinx KC705 board to test FMC125 functions,0,godfeng/FMC125,107349715,SystemVerilog,FMC125,138,2,2022-10-20 08:02:04+00:00,[],
1189,https://github.com/akshat2904/System_Verilog-Assertions-CoverGroups-Arbitrator-BinaryTree.git,2017-03-06 05:53:46+00:00,"Repository containing the design for Assertions, Cover Groups, Binary Tree and Arbitrator",2,akshat2904/System_Verilog-Assertions-CoverGroups-Arbitrator-BinaryTree,84035377,SystemVerilog,System_Verilog-Assertions-CoverGroups-Arbitrator-BinaryTree,29,2,2021-04-18 10:00:07+00:00,[],
1190,https://github.com/18-341/Router.git,2017-09-20 01:22:27+00:00,18-341 F17 Network On Chip,1,18-341/Router,104148818,SystemVerilog,Router,409,2,2023-09-06 04:35:13+00:00,[],https://api.github.com/licenses/mit
1191,https://github.com/mballance/rocket_soc.git,2017-06-28 18:31:27+00:00,Simple SoC based around the rocket-chip RISC-V generator,1,mballance/rocket_soc,95699756,SystemVerilog,rocket_soc,146,2,2021-08-28 05:13:49+00:00,[],https://api.github.com/licenses/apache-2.0
1192,https://github.com/YazanMehyar/FPGA-BBC-micro.git,2017-06-26 17:41:23+00:00,An implementation of the BBC micro model B on FPGA,0,YazanMehyar/FPGA-BBC-micro,95472676,SystemVerilog,FPGA-BBC-micro,1355,2,2023-08-29 09:29:17+00:00,[],
1193,https://github.com/akzare/TWireSerIntrfc.git,2017-11-19 17:02:59+00:00,A verification test case for a master implementation of the Two-Wire Serial Register Interface based on Systemverilog and UVM.,1,akzare/TWireSerIntrfc,111314885,SystemVerilog,TWireSerIntrfc,29,2,2022-07-08 14:45:40+00:00,"['two-wire-serial-interface', 'systemverilog-simulation']",
1194,https://github.com/ZhouYuTongZZ/GitHub_ELEC6234_picoMIPS_processor_Coursework.git,2017-06-28 09:38:56+00:00,,0,ZhouYuTongZZ/GitHub_ELEC6234_picoMIPS_processor_Coursework,95653349,SystemVerilog,GitHub_ELEC6234_picoMIPS_processor_Coursework,844,2,2024-04-10 13:23:44+00:00,[],
1195,https://github.com/hoangthinh2016/simple-mem-testbench-sv.git,2017-05-01 06:57:33+00:00,A simple memory testbench in SystemVerilog,4,hoangthinh2016/simple-mem-testbench-sv,89904204,SystemVerilog,simple-mem-testbench-sv,5,2,2020-11-17 09:57:24+00:00,[],
1196,https://github.com/melt-umn/ableC-closure.git,2017-07-03 00:26:34+00:00,Lambda-closures implemented as an ableC extension,0,melt-umn/ableC-closure,96056367,SystemVerilog,ableC-closure,131,2,2023-02-21 08:00:37+00:00,[],https://api.github.com/licenses/lgpl-3.0
1197,https://github.com/runsler/library.git,2017-10-31 08:18:16+00:00,digital design components,0,runsler/library,108965419,SystemVerilog,library,6,2,2024-01-02 09:46:23+00:00,[],https://api.github.com/licenses/mit
1198,https://github.com/abdulkhan94/Computer-Design-and-Prototyping.git,2017-05-23 03:51:24+00:00,MIPS 32 bit processor - fully functional shared memory dual-core processor with MSI for cache coherency,0,abdulkhan94/Computer-Design-and-Prototyping,92126784,SystemVerilog,Computer-Design-and-Prototyping,2266,2,2024-03-22 12:09:26+00:00,"['pipelined-processors', 'cache-coherency', 'multicore']",
1199,https://github.com/tenthousandfailures/svtime.git,2017-08-18 01:59:00+00:00,,0,tenthousandfailures/svtime,100662261,SystemVerilog,svtime,30,2,2022-04-05 10:37:58+00:00,[],https://api.github.com/licenses/gpl-3.0
1200,https://github.com/SanjayRai/FPGA_power_noise_design.git,2017-04-27 03:22:24+00:00,Parameterizable power consumer and noise generator design,0,SanjayRai/FPGA_power_noise_design,89551335,SystemVerilog,FPGA_power_noise_design,47,2,2022-01-30 00:16:51+00:00,[],
1201,https://github.com/shyamal-anadkat/The-11-of-us.git,2017-11-08 01:45:11+00:00,,0,shyamal-anadkat/The-11-of-us,109913155,SystemVerilog,The-11-of-us,5345,2,2018-04-26 12:19:44+00:00,"['quadcopter', 'flight-controller', 'verilog', 'system-verilog', 'hdl', 'ece551', 'uart', 'integrator', 'synthesis', 'vhdl', 'adc']",
1202,https://github.com/AniketBadhan/Ethernet-packet-Loopback-design-verification.git,2017-10-07 23:05:31+00:00,Ethernet packet loopback design verification using SystemVerilog,1,AniketBadhan/Ethernet-packet-Loopback-design-verification,106136283,SystemVerilog,Ethernet-packet-Loopback-design-verification,8,2,2024-01-08 17:27:36+00:00,[],
1203,https://github.com/sanketkkeni/2D-convolution-on-FPGA.git,2017-10-29 03:23:04+00:00,Implemented a custom-IP 2D convolution block for Xilinx Zedboard Zynq-7000 FPGA using synthesizable System Verilog in Vivado,1,sanketkkeni/2D-convolution-on-FPGA,108701830,SystemVerilog,2D-convolution-on-FPGA,4,2,2023-10-24 03:31:21+00:00,[],
1204,https://github.com/airminer/tiscomp.git,2017-11-06 02:58:50+00:00,,0,airminer/tiscomp,109640538,SystemVerilog,tiscomp,86,2,2022-07-08 14:42:23+00:00,[],
1205,https://github.com/taichi-ishitani/rggen-sample-testbench.git,2017-05-15 04:01:13+00:00,,0,taichi-ishitani/rggen-sample-testbench,91293732,SystemVerilog,rggen-sample-testbench,125,1,2022-02-17 22:11:35+00:00,[],https://api.github.com/licenses/mit
1206,https://github.com/shipinsworks/BeD.git,2017-08-03 12:10:48+00:00,Basic Verification Environment using DPI-C,0,shipinsworks/BeD,99228823,SystemVerilog,BeD,105,1,2022-09-13 14:02:19+00:00,[],https://api.github.com/licenses/mit
1207,https://github.com/mlamba01/ECE571_AES_Emulation_Veloce.git,2017-07-21 22:11:12+00:00,,1,mlamba01/ECE571_AES_Emulation_Veloce,97990223,SystemVerilog,ECE571_AES_Emulation_Veloce,820,1,2018-07-11 04:29:48+00:00,[],
1208,https://github.com/RoaLogic/rv_soc.git,2017-05-05 06:41:20+00:00,Roa Logic RISC-V SoC,1,RoaLogic/rv_soc,90345251,SystemVerilog,rv_soc,98,1,2022-10-19 18:44:59+00:00,[],
1209,https://github.com/kirtikaran3/SystemVerilog.git,2017-09-25 00:41:33+00:00,,0,kirtikaran3/SystemVerilog,104686910,SystemVerilog,SystemVerilog,289,1,2017-09-25 00:59:09+00:00,[],
1210,https://github.com/MarkovInequality/Comp541-Tetris-on-Single-Cycle-MIPS-Processor.git,2017-09-10 00:47:42+00:00,Single cycle MIPS processor for the Nexys 4 board written in System Verilog with a tetris demo program,0,MarkovInequality/Comp541-Tetris-on-Single-Cycle-MIPS-Processor,102993811,SystemVerilog,Comp541-Tetris-on-Single-Cycle-MIPS-Processor,4670,1,2022-10-15 04:01:20+00:00,[],
1211,https://github.com/alperkagankayali/RoadRunnerGame.git,2017-11-14 22:24:14+00:00,,0,alperkagankayali/RoadRunnerGame,110751937,SystemVerilog,RoadRunnerGame,2416,1,2019-01-22 00:15:02+00:00,[],
1212,https://github.com/tethance/FMCOMMS2_A10SOC.git,2017-10-23 04:15:24+00:00,Combine with FMCOOMMS2 and A10SOC,0,tethance/FMCOMMS2_A10SOC,107931244,SystemVerilog,FMCOMMS2_A10SOC,71687,1,2019-09-01 06:03:09+00:00,[],
1213,https://github.com/NishadSaraf/Functional-Verification-Of-Fibonacci-Sequence-Generator.git,2017-09-21 04:36:17+00:00,Functional verification using SystemVerilog's HVL feature,0,NishadSaraf/Functional-Verification-Of-Fibonacci-Sequence-Generator,104302090,SystemVerilog,Functional-Verification-Of-Fibonacci-Sequence-Generator,1378,1,2019-09-04 06:58:31+00:00,"['checker', 'testbench', 'testmodule', 'systemverilog', 'hvl']",
1214,https://github.com/daniel-stiffler/riscv-core.git,2017-08-30 18:57:06+00:00,"Superscalar RISC-V core, based on CMU 18-447 project.",2,daniel-stiffler/riscv-core,101918186,SystemVerilog,riscv-core,1411,1,2020-10-20 23:39:11+00:00,[],https://api.github.com/licenses/mit
1215,https://github.com/ciroceissler/template_harp.git,2017-10-15 18:21:56+00:00,Template to use HARP,0,ciroceissler/template_harp,107037451,SystemVerilog,template_harp,89,1,2022-01-18 22:49:13+00:00,[],
1216,https://github.com/rogebrd/551_lab.git,2017-04-25 14:45:44+00:00,Let's Git it started,1,rogebrd/551_lab,89372162,SystemVerilog,551_lab,2029,1,2017-05-04 14:51:19+00:00,[],
1217,https://github.com/kyle-sit/Sum-of-Squared-Error.git,2017-11-20 01:08:53+00:00,Sum of squared error algorithm implemented through floating point hardware,0,kyle-sit/Sum-of-Squared-Error,111346111,SystemVerilog,Sum-of-Squared-Error,8,1,2022-05-06 04:30:46+00:00,[],
1218,https://github.com/AdamHastings/ECEn620.git,2017-10-09 00:17:23+00:00,,0,AdamHastings/ECEn620,106219582,SystemVerilog,ECEn620,3083,1,2022-04-12 21:01:49+00:00,[],
1219,https://github.com/ma2mo10/study_systemverilog.git,2017-10-20 06:48:34+00:00,,0,ma2mo10/study_systemverilog,107642239,SystemVerilog,study_systemverilog,74,1,2019-06-18 02:41:29+00:00,[],
1220,https://github.com/raghavdogra/riscV-cpu.git,2017-09-14 15:07:55+00:00,"Designed and built from scratch a 5+ stage pipelined CPU with set-associative caches, using system verilog.",1,raghavdogra/riscV-cpu,103547119,SystemVerilog,riscV-cpu,118,1,2022-02-23 01:01:38+00:00,[],
1221,https://github.com/EliasManj/altera-de2-70-lcd-lab.git,2017-10-22 17:40:49+00:00,,0,EliasManj/altera-de2-70-lcd-lab,107888273,SystemVerilog,altera-de2-70-lcd-lab,709,1,2018-06-26 08:41:37+00:00,[],
1222,https://github.com/AkhilValsaraj/golden_model.git,2017-03-16 18:48:06+00:00,the reference model for the lc3 microcontroller test,0,AkhilValsaraj/golden_model,85230737,SystemVerilog,golden_model,6,1,2020-04-02 00:43:36+00:00,[],
1223,https://github.com/amarnathmhn/Systemverilog_Assertions.git,2017-03-02 16:23:11+00:00,Examples of various Systemverilog assertions and tests to run them.,0,amarnathmhn/Systemverilog_Assertions,83699080,SystemVerilog,Systemverilog_Assertions,104,1,2022-06-14 10:02:37+00:00,[],
1224,https://github.com/chetanrbb/SV_MIPS_Veloce.git,2017-02-24 22:22:13+00:00,,3,chetanrbb/SV_MIPS_Veloce,83087812,SystemVerilog,SV_MIPS_Veloce,348,1,2018-08-16 21:07:47+00:00,[],
1225,https://github.com/shashwatjv/PDP11_ISA_SIM.git,2017-04-16 02:50:52+00:00,PDP-11 ISA Simulator,0,shashwatjv/PDP11_ISA_SIM,88387056,SystemVerilog,PDP11_ISA_SIM,705,1,2020-05-15 14:19:41+00:00,[],https://api.github.com/licenses/gpl-3.0
1226,https://github.com/sassoun/Network-on-Chip-NOC-.git,2017-05-01 08:36:45+00:00,,1,sassoun/Network-on-Chip-NOC-,89909270,SystemVerilog,Network-on-Chip-NOC-,26,1,2021-09-18 22:43:31+00:00,[],
1227,https://github.com/poweihuang17/Interface_FT600.git,2017-07-12 02:40:02+00:00,An interface for ASIC and FT600,1,poweihuang17/Interface_FT600,96957632,SystemVerilog,Interface_FT600,9,1,2017-08-02 05:18:18+00:00,[],
1228,https://github.com/ineganov/cnn.git,2017-09-25 01:42:23+00:00,(Yet Another) Convolutional Network Accelerator,0,ineganov/cnn,104690773,SystemVerilog,cnn,27,1,2022-03-15 23:15:57+00:00,[],
1229,https://github.com/sadeq-hashemi/DigitalSystemDesign.git,2017-04-26 21:27:31+00:00,Digital System Design and Synthesis Final Project ,1,sadeq-hashemi/DigitalSystemDesign,89528174,SystemVerilog,DigitalSystemDesign,882,1,2019-09-09 17:38:48+00:00,[],
1230,https://github.com/mattsybeldon/Rally-X-FPGA.git,2017-04-05 18:23:32+00:00,,0,mattsybeldon/Rally-X-FPGA,87342647,SystemVerilog,Rally-X-FPGA,474,1,2021-05-16 22:10:51+00:00,[],
1231,https://github.com/C-L-G/SPI_configure_registers.git,2017-03-26 05:10:02+00:00,  通过spi配置寄存器,1,C-L-G/SPI_configure_registers,86209168,SystemVerilog,SPI_configure_registers,19,1,2020-06-12 01:02:37+00:00,[],https://api.github.com/licenses/gpl-3.0
1232,https://github.com/AniketBadhan/Memory-Controller-Verification.git,2017-10-03 05:45:30+00:00,Functional Verification of Memory Controller,0,AniketBadhan/Memory-Controller-Verification,105618387,SystemVerilog,Memory-Controller-Verification,15,1,2022-06-12 16:42:15+00:00,[],
1233,https://github.com/ZimpleX/spn_auto_gen.git,2017-07-10 08:12:48+00:00,,0,ZimpleX/spn_auto_gen,96752732,SystemVerilog,spn_auto_gen,8,1,2017-10-20 18:45:10+00:00,[],
1234,https://github.com/Traivok/Mips.git,2017-09-19 12:56:12+00:00,Computer Architecture and Organization,0,Traivok/Mips,104074867,SystemVerilog,Mips,74011,1,2021-09-27 15:06:02+00:00,"['mips', 'mips32']",
1235,https://github.com/18-341/MemoryController.git,2017-11-13 04:27:20+00:00,,5,18-341/MemoryController,110500038,SystemVerilog,MemoryController,2977,1,2022-12-15 14:30:35+00:00,[],
1236,https://github.com/mikeev261/arty_oled.git,2017-03-01 06:19:51+00:00,Test of Artix-7 communication module for Digilent OLED PMOD intended for the Arty dev kit. ,1,mikeev261/arty_oled,83519441,SystemVerilog,arty_oled,6,1,2021-01-07 04:57:26+00:00,[],
1237,https://github.com/bching28/Arithmetic-Logic-Unit-ALU-.git,2017-06-21 03:59:42+00:00,This ALU was designed in SystemVerilog for my Advanced Digital Design class,0,bching28/Arithmetic-Logic-Unit-ALU-,94961112,SystemVerilog,Arithmetic-Logic-Unit-ALU-,3144,1,2018-04-14 12:08:50+00:00,[],
1238,https://github.com/shantanu5092/Verification-of-an-8-bit-ALU-module.git,2017-05-06 01:50:06+00:00,Performed verification of an 8-bit arithmetic logic module using constraint random testing and UVM libraries.   ,1,shantanu5092/Verification-of-an-8-bit-ALU-module,90430114,SystemVerilog,Verification-of-an-8-bit-ALU-module,489,1,2021-07-20 05:38:34+00:00,[],
1239,https://github.com/melt-umn/ableC-condition-tables.git,2017-05-19 21:07:14+00:00,,0,melt-umn/ableC-condition-tables,91845534,SystemVerilog,ableC-condition-tables,67,1,2022-01-19 02:20:16+00:00,[],https://api.github.com/licenses/gpl-3.0
1240,https://github.com/aunics/uvm_tb_pipe.git,2017-10-24 21:30:43+00:00,Simple testbench in System Verilog UVM.,1,aunics/uvm_tb_pipe,108185868,SystemVerilog,uvm_tb_pipe,17,1,2019-08-14 17:33:56+00:00,[],
1241,https://github.com/sebslee/dlx_proc.git,2017-10-26 15:04:07+00:00,System Verilog DLX processor implementation,0,sebslee/dlx_proc,108427096,SystemVerilog,dlx_proc,14,1,2017-10-28 23:11:22+00:00,[],
1242,https://github.com/AniketBadhan/Microarchitecture-for-ALU.git,2017-10-02 15:18:50+00:00,Microarchitecture for ALU,1,AniketBadhan/Microarchitecture-for-ALU,105549987,SystemVerilog,Microarchitecture-for-ALU,22,1,2023-08-26 06:55:51+00:00,[],
1243,https://github.com/hchsiao/chisel-ahb.git,2017-10-30 08:37:45+00:00,,0,hchsiao/chisel-ahb,108823360,SystemVerilog,chisel-ahb,53,1,2020-05-07 08:37:50+00:00,[],https://api.github.com/licenses/mit
1244,https://github.com/darwinbeing/Prometheus.git,2017-05-01 13:25:04+00:00,RISCV core unit verification system,0,darwinbeing/Prometheus,89926023,SystemVerilog,Prometheus,19,1,2022-07-14 13:48:55+00:00,[],https://api.github.com/licenses/apache-2.0
1245,https://github.com/amiq-consulting/aep.git,2017-08-01 14:02:13+00:00,,0,amiq-consulting/aep,99007649,SystemVerilog,aep,38786,1,2022-06-28 12:25:22+00:00,[],
1246,https://github.com/hidrogencloride/verilog-decoders.git,2017-03-25 04:51:07+00:00,A collection of decoders and their test benches simulated using Verilog.,0,hidrogencloride/verilog-decoders,86133336,SystemVerilog,verilog-decoders,16,1,2023-11-27 01:03:13+00:00,"['verilog', 'hardware', 'simulation', 'design', 'testbench', 'decoder', '2to4', '3to8']",
1247,https://github.com/Bayware/mackinac.git,2017-10-19 17:54:40+00:00,,1,Bayware/mackinac,107580321,SystemVerilog,mackinac,586,1,2023-03-02 08:24:04+00:00,[],
1248,https://github.com/melt-umn/ableC-dimensionalAnalysis.git,2017-10-16 06:28:27+00:00,"Dimensional analysis using type qualifiers, implemented as a language extension to ableC ",0,melt-umn/ableC-dimensionalAnalysis,107086687,SystemVerilog,ableC-dimensionalAnalysis,54,1,2022-01-19 02:22:08+00:00,[],
1249,https://github.com/iExalt/MD5.git,2017-09-21 17:49:45+00:00,A proof-of-concept implementation of MD5 in SystemVerilog on the DE0-Nano,0,iExalt/MD5,104380230,SystemVerilog,MD5,24,1,2017-12-04 19:54:18+00:00,[],https://api.github.com/licenses/gpl-3.0
1250,https://github.com/sparksfly000/nyuzi_ntt.git,2017-09-11 11:43:15+00:00,add the ntt module to the nyuzi processor,0,sparksfly000/nyuzi_ntt,103128891,SystemVerilog,nyuzi_ntt,139,1,2021-03-11 01:27:00+00:00,[],
1251,https://github.com/taichi-ishitani/rggen-sample.git,2017-05-11 14:49:27+00:00,,0,taichi-ishitani/rggen-sample,90990731,SystemVerilog,rggen-sample,1417,1,2022-02-17 22:12:03+00:00,[],https://api.github.com/licenses/mit
1252,https://github.com/louay-hesham/MultiCycleMIPS.git,2017-04-25 09:29:34+00:00,Multicycle MIPS processor using SystemVerilog,1,louay-hesham/MultiCycleMIPS,89342555,SystemVerilog,MultiCycleMIPS,57,1,2019-05-18 07:39:24+00:00,[],
1253,https://github.com/Sophiaduan/HuffmanEncode.git,2017-05-05 01:58:34+00:00,A full huffman encode process in verilog,0,Sophiaduan/HuffmanEncode,90326889,SystemVerilog,HuffmanEncode,4366,1,2024-02-25 11:07:54+00:00,[],
1254,https://github.com/iExalt/BinaryCounter.git,2017-09-16 02:24:43+00:00,A binary counter SystemVerilog program for the DE0-Nano FPGA,0,iExalt/BinaryCounter,103717929,SystemVerilog,BinaryCounter,3428,1,2018-05-07 20:11:00+00:00,[],https://api.github.com/licenses/gpl-3.0
1255,https://github.com/pricem/da_platform.git,2017-10-10 23:48:38+00:00,DIY digital audio platform,1,pricem/da_platform,106483423,SystemVerilog,da_platform,44944,1,2021-11-17 01:58:04+00:00,[],
1256,https://github.com/AniketBadhan/Pattern-Detector.git,2017-10-02 15:06:47+00:00,Different types of FSMs for pattern detection,0,AniketBadhan/Pattern-Detector,105548666,SystemVerilog,Pattern-Detector,627,1,2022-06-12 16:41:57+00:00,[],
1257,https://github.com/sgq995/rc4-de0-nano-soc.git,2017-06-02 14:12:26+00:00,It's a cryptoprocessor that implements de RC4 algorithm,1,sgq995/rc4-de0-nano-soc,93172138,SystemVerilog,rc4-de0-nano-soc,80642,1,2019-06-20 09:09:20+00:00,"['fpga', 'fpga-soc', 'verilog', 'rc4', 'de0-nano-soc']",https://api.github.com/licenses/mit
1258,https://github.com/melt-umn/ableC-cilk.git,2017-06-01 19:57:45+00:00,The Cilk parallel programming constructs implemented as a language extension to ableC,0,melt-umn/ableC-cilk,93094437,SystemVerilog,ableC-cilk,390,1,2022-01-19 02:19:35+00:00,[],https://api.github.com/licenses/gpl-3.0
1259,https://github.com/orkalp/SnakeGameOnVGA_SVerilog.git,2017-03-11 11:57:45+00:00,Digital Design course project,0,orkalp/SnakeGameOnVGA_SVerilog,84646796,SystemVerilog,SnakeGameOnVGA_SVerilog,7,1,2018-05-03 17:42:45+00:00,[],
1260,https://github.com/shashwatjv/L2CacheCtrl.git,2017-03-04 11:45:21+00:00,Project Repository for L2 Cache Controller,0,shashwatjv/L2CacheCtrl,83889483,SystemVerilog,L2CacheCtrl,942,1,2023-08-13 22:59:34+00:00,[],https://api.github.com/licenses/gpl-3.0
1261,https://github.com/mballance/fpio.git,2017-05-19 15:44:50+00:00,FIFO Protocol I/O block,0,mballance/fpio,91821327,SystemVerilog,fpio,34,1,2017-09-25 18:53:16+00:00,[],https://api.github.com/licenses/apache-2.0
1262,https://github.com/bwitherspoon/machina.git,2017-11-15 04:19:38+00:00,Learning machines,0,bwitherspoon/machina,110782939,SystemVerilog,machina,337,1,2024-02-17 14:48:15+00:00,[],https://api.github.com/licenses/isc
1263,https://github.com/NishadSaraf/Fibonacci-Sequence-Generator.git,2017-09-21 04:34:20+00:00,Synthesizable hardware block that generates Fibonacci sequence based on the start value and order,0,NishadSaraf/Fibonacci-Sequence-Generator,104301967,SystemVerilog,Fibonacci-Sequence-Generator,223,1,2019-11-14 23:14:48+00:00,"['systemverilog-hdl', 'fibonacci-sequence']",
1264,https://github.com/aryglins/RTL-CCMM.git,2017-05-11 23:09:41+00:00,RTL-CCMM stands for Register Transfer Level Configurable Cache Memory Model. This project is a configurable RTL model of a cache memory developed in SystemVerilog.,1,aryglins/RTL-CCMM,91030862,SystemVerilog,RTL-CCMM,108889,1,2022-10-14 11:14:22+00:00,[],
1265,https://github.com/varmil/mips32-single-cycle-cpu.git,2017-11-01 05:33:41+00:00,the 32bit CPU which has MIPS architecture (single cycle processor),0,varmil/mips32-single-cycle-cpu,109091090,SystemVerilog,mips32-single-cycle-cpu,4181,1,2024-03-17 10:48:36+00:00,[],
1266,https://github.com/sanketkkeni/2D-convolution-Simulation.git,2017-10-29 03:34:59+00:00,2D convolution module to perform convolution operation between a matrix and kernel,1,sanketkkeni/2D-convolution-Simulation,108702474,SystemVerilog,2D-convolution-Simulation,5,1,2022-04-27 21:04:44+00:00,[],
1267,https://github.com/adithyaBellary/spaceInvasion.git,2017-09-05 04:34:05+00:00,My final project for my Digital Systems class. We used System Verilog to make a video game loosely based on the arcade game Galaga. ,0,adithyaBellary/spaceInvasion,102434474,SystemVerilog,spaceInvasion,20,1,2022-05-31 23:56:06+00:00,[],
1268,https://github.com/PhilOls/uvm.vip.git,2017-11-17 16:05:20+00:00,,2,PhilOls/uvm.vip,111123203,SystemVerilog,uvm.vip,134,1,2023-02-22 09:25:17+00:00,['uvm'],
1269,https://github.com/lyuyangly/RSP_SVlog_VCS.git,2017-04-20 13:39:56+00:00,,0,lyuyangly/RSP_SVlog_VCS,88869834,SystemVerilog,RSP_SVlog_VCS,6,1,2019-03-29 06:49:06+00:00,[],
1270,https://github.com/kammulchandani/FIFO_VIP.git,2017-05-04 01:51:24+00:00,,1,kammulchandani/FIFO_VIP,90210168,SystemVerilog,FIFO_VIP,894,1,2021-06-23 06:04:38+00:00,[],
1271,https://github.com/sagniknitr/Real-time-sobel-filter-in-FPGA.git,2017-03-13 19:52:01+00:00,Summer of Code project for Apertus OpenCinema,0,sagniknitr/Real-time-sobel-filter-in-FPGA,84868340,SystemVerilog,Real-time-sobel-filter-in-FPGA,100,1,2018-03-17 10:10:42+00:00,[],https://api.github.com/licenses/mit
1272,https://github.com/NotZombieFood/CLA-vs-CRA.git,2017-10-16 14:45:06+00:00,Compare the speeds of the Carry ripple adder and Carry-lookahead adder,2,NotZombieFood/CLA-vs-CRA,107141077,SystemVerilog,CLA-vs-CRA,8,1,2024-01-23 13:32:50+00:00,"['adder', 'verilog', 'systemverilog', 'lookahead', 'digital-design']",
1273,https://github.com/rekendahl/edaphic-studio-truss-project.git,2017-11-02 15:08:48+00:00,Updated teal/truss systemverilog files used for Edaphic.Studio/SV IDE demo,0,rekendahl/edaphic-studio-truss-project,109280639,SystemVerilog,edaphic-studio-truss-project,178,1,2020-06-03 15:03:14+00:00,[],https://api.github.com/licenses/mit
1274,https://github.com/anyuexiu/Eclass.git,2017-09-23 14:25:10+00:00,,1,anyuexiu/Eclass,104573341,SystemVerilog,Eclass,14405,1,2019-11-25 08:14:55+00:00,[],
1275,https://github.com/stanislavvasilyev/crossbar2x2.git,2017-09-25 06:35:22+00:00,Crossbar for 2 master - 2 slave communication.,1,stanislavvasilyev/crossbar2x2,104712234,SystemVerilog,crossbar2x2,30,1,2020-04-25 02:09:14+00:00,[],
1276,https://github.com/sassoun/Binary-Tree.git,2017-05-01 09:44:04+00:00,,0,sassoun/Binary-Tree,89912942,SystemVerilog,Binary-Tree,2,1,2019-10-30 23:46:52+00:00,[],
1277,https://github.com/jomonkjoy/SDRAM-Controller.git,2017-06-22 06:38:33+00:00,EDEC STANDARD Double Data Rate (DDR) SDRAM Specification,3,jomonkjoy/SDRAM-Controller,95083043,SystemVerilog,SDRAM-Controller,2,1,2018-02-16 07:16:16+00:00,[],
1278,https://github.com/Dimitrov2005/apb2fifo.git,2017-08-08 15:05:47+00:00,apb to fifo controller,0,Dimitrov2005/apb2fifo,99705739,SystemVerilog,apb2fifo,14,1,2022-06-20 01:24:16+00:00,[],
1279,https://github.com/jpan127/MIPS-Architecture.git,2017-04-19 08:58:36+00:00,Designing a custom MIPS architecture using SystemVerilog,0,jpan127/MIPS-Architecture,88723537,SystemVerilog,MIPS-Architecture,2709,1,2017-11-30 06:56:36+00:00,[],
1280,https://github.com/hidrogencloride/verilog-halfAdder.git,2017-03-24 21:36:56+00:00,Hardware Simulation using Icarus Verilog EDA Playground for a half adder circuit design and test bench.,0,hidrogencloride/verilog-halfAdder,86112585,SystemVerilog,verilog-halfAdder,3,1,2022-06-21 20:44:17+00:00,"['hardware', 'design', 'security', 'circuit', 'verilog', 'halfadder', 'half', 'adder', 'testbench']",
1281,https://github.com/sandeep-lingambhotla/ECEN_689.git,2017-04-22 23:02:08+00:00,,1,sandeep-lingambhotla/ECEN_689,89104261,SystemVerilog,ECEN_689,53,1,2020-08-04 07:56:54+00:00,[],
1282,https://github.com/taichi-ishitani/tvip.git,2017-05-09 16:36:06+00:00,,1,taichi-ishitani/tvip,90768563,SystemVerilog,tvip,35,1,2022-02-17 22:11:49+00:00,"['uvm', 'systemverilog', 'vip']",https://api.github.com/licenses/apache-2.0
1283,https://github.com/talitavaleria/BSG.git,2017-03-16 19:59:18+00:00,Baseband Signal Generator: Projeto Final desenvolvido no PEM IFPB (Projeto de Execelência em Microeletrônica),0,talitavaleria/BSG,85236477,SystemVerilog,BSG,18,1,2017-03-17 14:38:11+00:00,[],
1284,https://github.com/hidrogencloride/verilog-register.git,2017-03-26 04:03:18+00:00,"By definition, a digital register is a kind of memory with additional hardware-related functions.",0,hidrogencloride/verilog-register,86206257,SystemVerilog,verilog-register,2,1,2022-06-21 20:45:21+00:00,[],
1285,https://github.com/kranthikiranufl/UVM_Project.git,2017-09-25 22:08:28+00:00,This respository includes all my projects which are implemented with UVM testbenches,0,kranthikiranufl/UVM_Project,104806966,SystemVerilog,UVM_Project,2624,1,2022-08-04 14:34:26+00:00,[],
1286,https://github.com/CodyAnderson/Hercu-NES.git,2017-10-04 21:15:07+00:00,Hardware Exact Rough Clone Unto Nintendo Entertainment System,0,CodyAnderson/Hercu-NES,105819182,SystemVerilog,Hercu-NES,212659,1,2022-03-01 07:20:05+00:00,[],
1287,https://github.com/semccutcheon/ARM-single-cycle-processor.git,2017-02-25 04:25:57+00:00,,0,semccutcheon/ARM-single-cycle-processor,83105918,SystemVerilog,ARM-single-cycle-processor,261,1,2018-12-07 08:09:21+00:00,[],
1288,https://github.com/shantanu5092/Bidding-arbiter.git,2017-03-24 07:58:13+00:00,Designed a bidding arbiter for granting bus access to the selected master,0,shantanu5092/Bidding-arbiter,86042152,SystemVerilog,Bidding-arbiter,329,1,2019-11-27 15:48:43+00:00,[],
1289,https://github.com/Jyun-Neng/VLSI.git,2017-09-28 05:51:18+00:00,VLSI System Design Assignment & Project,0,Jyun-Neng/VLSI,105107365,SystemVerilog,VLSI,46,1,2023-07-25 08:22:21+00:00,[],
1290,https://github.com/vborchsh/i2c_translator.git,2017-09-30 04:20:23+00:00,I2C interface FPGA implementation translator,0,vborchsh/i2c_translator,105341406,SystemVerilog,i2c_translator,3,1,2023-01-28 04:30:11+00:00,[],
1291,https://github.com/n1kolass/Deinterlacer.git,2017-10-30 12:26:21+00:00,,0,n1kolass/Deinterlacer,108847482,SystemVerilog,Deinterlacer,293,1,2018-03-13 04:52:09+00:00,[],
1292,https://github.com/balos1/MIPS_Single_Cycle.git,2017-05-21 00:28:41+00:00,This is project is a MIPS Single-Cycle processor with a cache for data memory.,0,balos1/MIPS_Single_Cycle,91924138,SystemVerilog,MIPS_Single_Cycle,968,1,2023-06-19 05:16:06+00:00,"['computer-architecture', 'mips-processor', 'single-cycle']",
1293,https://github.com/Aceralon/CPU.git,2017-04-17 12:59:16+00:00,My CPU project,1,Aceralon/CPU,88508290,SystemVerilog,CPU,7598,1,2019-07-15 22:50:46+00:00,['systemverilog'],https://api.github.com/licenses/mit
1294,https://github.com/microMing/ECE551.git,2017-04-20 15:16:28+00:00,ECE551 Project,0,microMing/ECE551,88880225,SystemVerilog,ECE551,4479,1,2017-07-18 22:12:56+00:00,[],
1295,https://github.com/hvt1244/AHB-Interconnect.git,2017-07-14 19:45:17+00:00,,0,hvt1244/AHB-Interconnect,97267674,SystemVerilog,AHB-Interconnect,43,1,2019-12-31 15:42:03+00:00,[],
1296,https://github.com/fuadaghazada/DigitalHunt.git,2017-09-23 11:48:16+00:00,Crosshair shooter game implemented on BASYS 3 FPGA Board using VGA Monitor,0,fuadaghazada/DigitalHunt,104563684,SystemVerilog,DigitalHunt,321,1,2020-04-03 13:10:12+00:00,[],
1297,https://github.com/akaiser13576/ECE337_Sobel_Edge_Detection.git,2017-04-30 23:55:07+00:00,,0,akaiser13576/ECE337_Sobel_Edge_Detection,89884422,SystemVerilog,ECE337_Sobel_Edge_Detection,8035,0,2017-05-01 00:07:21+00:00,[],
1298,https://github.com/anderson101thomas/lab8.git,2017-05-29 01:57:06+00:00,lab8,0,anderson101thomas/lab8,92699023,SystemVerilog,lab8,8351,0,2017-05-29 01:57:27+00:00,[],
1299,https://github.com/gerardhysa/CopyCat.git,2017-06-06 14:16:21+00:00,"CS-223 Project, Coded with System Verilog using Basys3 and Beti boards. This game has the logic of Simon Says Game. It uses 8x8 Led Matrix, 4x4 Buttons Matrix.",0,gerardhysa/CopyCat,93526375,SystemVerilog,CopyCat,2,0,2017-06-06 14:20:00+00:00,[],
1300,https://github.com/aldov500/Verilog.git,2017-04-07 21:25:30+00:00,Programas en Verilog y SystemVerilog empleando ModelSim Student Edition,1,aldov500/Verilog,87588138,SystemVerilog,Verilog,18582,0,2021-04-05 00:17:16+00:00,[],
1301,https://github.com/llhartman193/FGPAProjects.git,2017-08-15 00:16:12+00:00,,0,llhartman193/FGPAProjects,100320381,SystemVerilog,FGPAProjects,495,0,2017-08-17 22:34:56+00:00,[],
1302,https://github.com/hawkejo/FSMD_Divider.git,2017-10-02 18:38:17+00:00,,0,hawkejo/FSMD_Divider,105570554,SystemVerilog,FSMD_Divider,16,0,2021-09-23 16:18:48+00:00,[],https://api.github.com/licenses/mpl-2.0
1303,https://github.com/AbigailParrales/MIPS.git,2017-10-12 21:53:29+00:00,,0,AbigailParrales/MIPS,106749231,SystemVerilog,MIPS,25,0,2017-10-12 21:53:31+00:00,[],
1304,https://github.com/ljs2g15ecs/3rd-Year-Project.git,2017-10-11 21:40:05+00:00,,0,ljs2g15ecs/3rd-Year-Project,106612418,SystemVerilog,3rd-Year-Project,380177,0,2018-05-01 03:13:48+00:00,[],
1305,https://github.com/rgile002/System-Verilog-projects-.git,2017-10-13 16:48:41+00:00,,0,rgile002/System-Verilog-projects-,106850165,SystemVerilog,System-Verilog-projects-,17,0,2017-10-13 16:50:22+00:00,[],
1306,https://github.com/arori4/Bitcoin-FPGA.git,2017-10-06 20:59:38+00:00,Creating an FPGA for Bitcoin Mining,2,arori4/Bitcoin-FPGA,106049812,SystemVerilog,Bitcoin-FPGA,24229,0,2017-10-06 21:03:10+00:00,[],
1307,https://github.com/AbdoA2/MIPS_Pipelined.git,2017-09-21 16:12:04+00:00,A 5 stage processor that implements MIPS architecture.,0,AbdoA2/MIPS_Pipelined,104370596,SystemVerilog,MIPS_Pipelined,324,0,2017-09-21 16:19:40+00:00,[],
1308,https://github.com/jhl090/Single-Register-Only-ISA.git,2017-08-20 21:35:19+00:00,"Accumulator instruction set architecture for implementing CORDIC (Cartesian Points to Polar Coordinates conversion), Binary String Search, and Unsigned Integer Division algorithms.  ",0,jhl090/Single-Register-Only-ISA,100889995,SystemVerilog,Single-Register-Only-ISA,28,0,2019-04-07 23:36:07+00:00,[],
1309,https://github.com/kkangle/FIFO.git,2017-11-20 06:00:16+00:00,,0,kkangle/FIFO,111368247,SystemVerilog,FIFO,1,0,2017-11-20 06:04:15+00:00,[],
1310,https://github.com/jmanosu/AudioSynthesizer.git,2017-11-19 23:01:06+00:00,Designed an audio synthesizer that can be controlled by PS/2 Keyboard,0,jmanosu/AudioSynthesizer,111339225,SystemVerilog,AudioSynthesizer,3,0,2019-01-30 08:42:26+00:00,[],
1311,https://github.com/Karthik4293/Hardware_generation_tool_for_Neural_Networks.git,2017-10-27 02:03:37+00:00,The Project aims to generate a hardware script for a multi-layer neural network.,1,Karthik4293/Hardware_generation_tool_for_Neural_Networks,108487293,SystemVerilog,Hardware_generation_tool_for_Neural_Networks,3546,0,2018-03-23 21:18:38+00:00,"['c-plus-plus', 'neural-network']",
1312,https://github.com/erpina/Computer_Architecture.git,2017-10-08 03:04:31+00:00,PDP-11 ISA Simulator,0,erpina/Computer_Architecture,106146269,SystemVerilog,Computer_Architecture,7,0,2017-10-08 03:07:53+00:00,[],
1313,https://github.com/sukrutkelkar/Hamming-Weight-and-Set-bit-Index-.git,2017-10-21 06:40:08+00:00,Hamming Weight determination and Identifying the index of set bits in a 1024 bit data,0,sukrutkelkar/Hamming-Weight-and-Set-bit-Index-,107757782,SystemVerilog,Hamming-Weight-and-Set-bit-Index-,625,0,2017-10-21 06:52:22+00:00,[],
1314,https://github.com/svuvm12/uvm_all_wr_rd.git,2017-10-06 17:05:35+00:00,UVM register sequence to write all registers and read back with fix pattern ,2,svuvm12/uvm_all_wr_rd,106029950,SystemVerilog,uvm_all_wr_rd,19,0,2017-10-06 17:33:10+00:00,"['uvm', 'reg', 'sv']",https://api.github.com/licenses/apache-2.0
1315,https://github.com/md710644/finalarquicompu.git,2017-10-09 02:02:31+00:00,,0,md710644/finalarquicompu,106225904,SystemVerilog,finalarquicompu,1825,0,2017-11-26 06:17:56+00:00,[],
1316,https://github.com/akondare/SNACKS.git,2017-11-12 06:41:50+00:00,SNACKS ISA,0,akondare/SNACKS,110411258,SystemVerilog,SNACKS,5217,0,2017-12-13 03:33:27+00:00,[],
1317,https://github.com/tsimons89/ee620_ch8.git,2017-11-10 20:43:21+00:00,,0,tsimons89/ee620_ch8,110290793,SystemVerilog,ee620_ch8,24,0,2017-11-10 20:44:02+00:00,[],
1318,https://github.com/gabrielrb1/Tarefa-1---ULA.git,2017-09-20 21:26:03+00:00,Primeira tarefa da disciplina de Arquitetura de Computadores: ULA com 32 bits e flags.,0,gabrielrb1/Tarefa-1---ULA,104269243,SystemVerilog,Tarefa-1---ULA,5,0,2017-09-21 03:12:20+00:00,[],
1319,https://github.com/praveenchirumamilla/uvm_baby_bench.git,2017-08-19 16:59:45+00:00,handy uvm baby bench for experimentation,0,praveenchirumamilla/uvm_baby_bench,100808692,SystemVerilog,uvm_baby_bench,6,0,2017-08-19 17:19:24+00:00,[],
1320,https://github.com/ZainPain/Computer-Architecture.git,2017-09-15 04:49:51+00:00,,0,ZainPain/Computer-Architecture,103615115,SystemVerilog,Computer-Architecture,90503,0,2018-08-10 21:43:32+00:00,[],
1321,https://github.com/RakheeBhojakar/FPU_hdl_updated.git,2017-06-02 03:13:16+00:00,added hdl files,3,RakheeBhojakar/FPU_hdl_updated,93122120,SystemVerilog,FPU_hdl_updated,116,0,2017-06-03 00:42:27+00:00,"['sv', 'constructs-attribute']",
1322,https://github.com/linux4life798/JawBreakerAES.git,2017-04-11 02:16:30+00:00,A SystemVerilog implementation of AES,0,linux4life798/JawBreakerAES,87877957,SystemVerilog,JawBreakerAES,13,0,2017-04-11 05:34:47+00:00,[],
1323,https://github.com/kammulchandani/sandbox.git,2017-03-27 00:03:43+00:00,,1,kammulchandani/sandbox,86273491,SystemVerilog,sandbox,309,0,2017-03-28 08:26:43+00:00,[],
1324,https://github.com/tskuo/Digital-Circuit-Design-Lab.git,2017-03-02 07:23:56+00:00,,1,tskuo/Digital-Circuit-Design-Lab,83647648,SystemVerilog,Digital-Circuit-Design-Lab,5261,0,2017-03-02 07:27:33+00:00,[],
1325,https://github.com/nicoaratavi/EthergateLab1.git,2017-03-12 20:52:38+00:00,Serial programable watch,0,nicoaratavi/EthergateLab1,84756620,SystemVerilog,EthergateLab1,18,0,2017-03-12 20:58:35+00:00,[],https://api.github.com/licenses/gpl-3.0
1326,https://github.com/skyroger2/ROM_monitor.git,2017-05-09 16:50:02+00:00,Monitor ROM module for BK-0010 project,0,skyroger2/ROM_monitor,90769739,SystemVerilog,ROM_monitor,14,0,2017-05-09 16:53:08+00:00,[],
1327,https://github.com/skyroger2/ROM_test.git,2017-05-09 17:04:13+00:00,Test subsystem ROM for BK-0010 project,0,skyroger2/ROM_test,90771033,SystemVerilog,ROM_test,13,0,2017-05-09 17:05:13+00:00,[],
1328,https://github.com/18-341/P1_Warmup.git,2017-08-29 19:08:59+00:00,Project 1: Warmup (F17),0,18-341/P1_Warmup,101797110,SystemVerilog,P1_Warmup,39,0,2021-07-13 18:09:02+00:00,[],
1329,https://github.com/Daniel-Huynh/Altera-FPGA-Video-Game.git,2017-09-04 04:12:16+00:00,,0,Daniel-Huynh/Altera-FPGA-Video-Game,102317857,SystemVerilog,Altera-FPGA-Video-Game,15,0,2017-09-04 04:25:35+00:00,[],
1330,https://github.com/ChanceCoats123/ece411_KeystoneXL.git,2017-09-11 18:19:35+00:00,A pipelined LC3 processor from Spring 2016.,1,ChanceCoats123/ece411_KeystoneXL,103171945,SystemVerilog,ece411_KeystoneXL,288,0,2017-09-11 18:25:31+00:00,[],
1331,https://github.com/betterxuan/adapter_slv-and-seq.git,2017-09-16 16:24:20+00:00,,0,betterxuan/adapter_slv-and-seq,103766435,SystemVerilog,adapter_slv-and-seq,11,0,2017-09-16 16:26:21+00:00,[],
1332,https://github.com/anirban1950/uvm.git,2017-09-30 18:27:54+00:00,,0,anirban1950/uvm,105391368,SystemVerilog,uvm,8,0,2017-09-30 18:29:22+00:00,[],
1333,https://github.com/ptalwar2/Learning.git,2017-10-10 19:01:31+00:00,,0,ptalwar2/Learning,106459199,SystemVerilog,Learning,895,0,2017-10-10 19:04:49+00:00,[],
1334,https://github.com/melt-umn/ableC-nonnull.git,2017-10-16 07:00:17+00:00,A nonnull type qualifier implemented as a language extension to ableC ,0,melt-umn/ableC-nonnull,107089755,SystemVerilog,ableC-nonnull,45,0,2022-01-19 02:23:47+00:00,[],
1335,https://github.com/JerryFan0913/RTL_Sandbox.git,2017-07-18 05:10:30+00:00,,0,JerryFan0913/RTL_Sandbox,97555084,SystemVerilog,RTL_Sandbox,21,0,2017-07-18 06:07:26+00:00,[],
1336,https://github.com/MaksimKobzar/libra123.git,2017-11-05 09:08:24+00:00,,0,MaksimKobzar/libra123,109562003,SystemVerilog,libra123,440,0,2018-10-21 13:59:48+00:00,[],
1337,https://github.com/jerry990/Hardware_BCP.git,2017-11-15 02:34:58+00:00,,0,jerry990/Hardware_BCP,110773415,SystemVerilog,Hardware_BCP,3,0,2017-11-15 02:40:01+00:00,[],
1338,https://github.com/CowDavid/Rsa.git,2017-11-17 10:55:48+00:00,,0,CowDavid/Rsa,111093221,SystemVerilog,Rsa,2,0,2017-11-17 10:59:41+00:00,[],
1339,https://github.com/sebslee/safebox.git,2017-11-01 09:18:01+00:00,Safebox project for Digital System Design assignment ,0,sebslee/safebox,109111183,SystemVerilog,safebox,5,0,2017-11-01 15:31:30+00:00,[],
1340,https://github.com/lucas4m4/ifes_arq_t1.git,2017-10-04 01:21:04+00:00,Arquitetura de Computadores - IFES,0,lucas4m4/ifes_arq_t1,105720604,SystemVerilog,ifes_arq_t1,56,0,2017-10-04 01:24:59+00:00,[],
1341,https://github.com/dolfan1284/PCIe_CycloneVGX_JP.git,2017-10-29 22:01:40+00:00,PCI Express Cyclone V GX Gen1x4 with BAR0 attached to local memory & reconfig controller on BAR2 with CRA on BAR4,0,dolfan1284/PCIe_CycloneVGX_JP,108775111,SystemVerilog,PCIe_CycloneVGX_JP,40596,0,2020-09-17 23:08:48+00:00,[],
1342,https://github.com/scpuri/LC-3b-Pipelined-Processor.git,2017-05-16 00:36:39+00:00,,0,scpuri/LC-3b-Pipelined-Processor,91397102,SystemVerilog,LC-3b-Pipelined-Processor,4324,0,2017-05-16 00:39:56+00:00,[],
1343,https://github.com/alfredwu2/RISC-V-CPU-Emulator.git,2017-05-18 23:25:55+00:00,,1,alfredwu2/RISC-V-CPU-Emulator,91745996,SystemVerilog,RISC-V-CPU-Emulator,12,0,2017-05-18 23:33:39+00:00,[],
1344,https://github.com/halilsahiner/Bang-Bang-Tank.git,2017-05-30 18:20:07+00:00,A implementation of Tank 1990 game in Basys 3 with System Verilog,1,halilsahiner/Bang-Bang-Tank,92862997,SystemVerilog,Bang-Bang-Tank,16,0,2017-11-06 19:49:09+00:00,[],
1345,https://github.com/melt-umn/ableC-string.git,2017-07-03 19:37:26+00:00,Overloaded strings implemented as an ableC extension,0,melt-umn/ableC-string,96144666,SystemVerilog,ableC-string,117,0,2022-01-19 02:26:18+00:00,[],https://api.github.com/licenses/lgpl-3.0
1346,https://github.com/jpalicke/Single-Core-RISC-in-SystemVerilog.git,2017-04-22 06:21:55+00:00,This is the single-core cacheless version of the senior project processor,0,jpalicke/Single-Core-RISC-in-SystemVerilog,89049134,SystemVerilog,Single-Core-RISC-in-SystemVerilog,13,0,2017-04-22 06:34:30+00:00,[],
1347,https://github.com/krame505/logic.git,2017-03-27 02:06:39+00:00,Attribute grammar for manipulating logical circuits,0,krame505/logic,86280685,SystemVerilog,logic,25,0,2017-03-27 02:12:40+00:00,[],https://api.github.com/licenses/gpl-3.0
1348,https://github.com/hotpaws/genome.git,2017-04-02 00:13:25+00:00,,0,hotpaws/genome,86951236,SystemVerilog,genome,0,0,2017-04-30 09:42:11+00:00,[],
1349,https://github.com/amarcott11/MarcottDiamond.git,2017-03-01 03:40:41+00:00,really real forever,0,amarcott11/MarcottDiamond,83508166,SystemVerilog,MarcottDiamond,4286,0,2017-03-01 03:43:03+00:00,[],
1350,https://github.com/mslos/JTAG-Controller.git,2017-02-22 16:08:36+00:00,,0,mslos/JTAG-Controller,82824683,SystemVerilog,JTAG-Controller,23,0,2017-05-04 10:49:12+00:00,[],
1351,https://github.com/electricentity/InvTransform.git,2017-04-18 03:33:48+00:00,,0,electricentity/InvTransform,88577882,SystemVerilog,InvTransform,6,0,2017-04-18 03:41:03+00:00,[],
1352,https://github.com/ZeroDevelopers/GameZero.git,2017-04-21 20:30:20+00:00,A full brawl with swords and guns.,0,ZeroDevelopers/GameZero,89021300,SystemVerilog,GameZero,285755,0,2017-04-21 20:44:38+00:00,[],
1353,https://github.com/oolostoo12/Simple-Risc-Y-processor.git,2017-03-20 19:41:20+00:00,This project was completed for my Verilog and System Verilog I took in fall 2016. It a simple RISC-Y processor made up of its most fundamental components. ,0,oolostoo12/Simple-Risc-Y-processor,85618663,SystemVerilog,Simple-Risc-Y-processor,15,0,2017-05-26 20:40:44+00:00,[],
1354,https://github.com/richwcahill/SHA256.git,2017-07-10 17:44:38+00:00,C/Verilog implementation of SHA256,1,richwcahill/SHA256,96805075,SystemVerilog,SHA256,11,0,2017-08-08 17:04:45+00:00,[],
1355,https://github.com/FAIG2014/fpga-projects.git,2017-07-12 13:24:13+00:00,FPGA stuff,0,FAIG2014/fpga-projects,97010793,SystemVerilog,fpga-projects,901,0,2019-09-10 03:57:39+00:00,"['docker', 'modelsim', 'fpga', 'lattice-fpga', 'systemverilog', 'quartus-prime']",https://api.github.com/licenses/apache-2.0
1356,https://github.com/huan007/141L-CPU.git,2017-11-19 05:03:16+00:00,,0,huan007/141L-CPU,111265902,SystemVerilog,141L-CPU,6399,0,2020-11-01 11:56:06+00:00,[],
1357,https://github.com/NotZombieFood/KeyboardFPGA.git,2017-10-28 19:34:24+00:00,Implementation for displaying characters in LCD 16x2 by typing them,0,NotZombieFood/KeyboardFPGA,108678325,SystemVerilog,KeyboardFPGA,12,0,2017-11-03 13:29:35+00:00,[],
1358,https://github.com/umanggarg96/hack_cpu.git,2017-11-12 13:36:07+00:00,"Hack computer platform, as described in ""Elements of Computing Systems""",0,umanggarg96/hack_cpu,110435382,SystemVerilog,hack_cpu,14,0,2017-11-22 05:03:49+00:00,[],
1359,https://github.com/rjgonza1/ARM-Multicycle-Processor.git,2017-11-17 00:39:47+00:00,Block designs for a mulicycle ARM processor (1.1 GHz),0,rjgonza1/ARM-Multicycle-Processor,111038629,SystemVerilog,ARM-Multicycle-Processor,8393,0,2017-11-17 01:46:59+00:00,[],
1360,https://github.com/sebslee/encrypter_decrypter.git,2017-11-02 22:21:14+00:00,Secure Hardware Design Project,0,sebslee/encrypter_decrypter,109324828,SystemVerilog,encrypter_decrypter,53,0,2017-11-02 23:06:10+00:00,[],
1361,https://github.com/LongstreetLHY/sorting.git,2017-10-30 21:08:03+00:00,sorting 10 to 100,0,LongstreetLHY/sorting,108908673,SystemVerilog,sorting,6,0,2017-10-31 22:40:10+00:00,[],
1362,https://github.com/Say0/cpu-core-code.git,2017-10-04 06:37:43+00:00,,0,Say0/cpu-core-code,105738662,SystemVerilog,cpu-core-code,3,0,2017-10-04 06:39:51+00:00,[],
1363,https://github.com/akhilayyagari/RTL.git,2017-10-03 18:27:32+00:00,,1,akhilayyagari/RTL,105687725,SystemVerilog,RTL,149,0,2018-04-10 00:10:59+00:00,[],
1364,https://github.com/heerahirok/AR32I.git,2017-07-29 10:52:52+00:00,,0,heerahirok/AR32I,98726616,SystemVerilog,AR32I,2960,0,2017-07-29 11:10:44+00:00,[],https://api.github.com/licenses/apache-2.0
1365,https://github.com/DeanPFZ/551-Spring-2017-Project.git,2017-05-06 04:31:22+00:00,,0,DeanPFZ/551-Spring-2017-Project,90437333,SystemVerilog,551-Spring-2017-Project,34,0,2017-05-06 04:43:31+00:00,"['systemverilog', 'hdl', 'teamwork', 'follower']",
1366,https://github.com/szsamin/ECE593_PreSiliconFinalProject.git,2017-05-15 20:52:47+00:00,"Team Members: Nitish Kumar Marikal, Shadman Samin  -> Project Description: Functional coverage based test plan for PDP8 micro-architectural specification",0,szsamin/ECE593_PreSiliconFinalProject,91383810,SystemVerilog,ECE593_PreSiliconFinalProject,1983,0,2017-05-15 21:04:09+00:00,[],
1367,https://github.com/jseeniv/nivas_apb.git,2017-03-09 07:39:44+00:00,uvm,0,jseeniv/nivas_apb,84412696,SystemVerilog,nivas_apb,0,0,2017-03-09 07:42:22+00:00,[],
1368,https://github.com/ankurash/verilogtut.git,2017-04-08 22:38:02+00:00,learning verilog,0,ankurash/verilogtut,87668403,SystemVerilog,verilogtut,1,0,2019-09-10 06:33:18+00:00,[],
1369,https://github.com/lee-coder/SystemVerilog.git,2017-04-07 03:36:03+00:00,,0,lee-coder/SystemVerilog,87501083,SystemVerilog,SystemVerilog,4,0,2017-04-07 05:45:23+00:00,[],
1370,https://github.com/annwuhoo/ece411.git,2017-03-14 23:52:45+00:00,,0,annwuhoo/ece411,85008812,SystemVerilog,ece411,15947,0,2017-03-14 23:56:23+00:00,[],
1371,https://github.com/the-snowwhite/mksocfpga3.git,2017-03-10 16:48:57+00:00,For finalizing experimental development work on the mksocfpga_hm3 repo back into machinekit,0,the-snowwhite/mksocfpga3,84581134,SystemVerilog,mksocfpga3,21,0,2018-01-02 08:34:39+00:00,"['systemverilog', 'hdl', 'cnc', '3d-printing', 'milling', 'motion-controllers', 'quartus-prime', 'vivado', 'linux']",https://api.github.com/licenses/unlicense
1372,https://github.com/priyankp87/systemverilog.git,2017-08-16 17:59:40+00:00,Systemverilog playground examples,0,priyankp87/systemverilog,100517786,SystemVerilog,systemverilog,4,0,2017-08-16 18:00:05+00:00,[],
1373,https://github.com/n1kolass/verilog.git,2017-08-29 10:10:14+00:00,Contains verilog IP blocks,0,n1kolass/verilog,101747759,SystemVerilog,verilog,3,0,2017-08-29 11:07:41+00:00,[],
1374,https://github.com/maheshbabugorantla/ECE437.git,2017-08-22 20:33:11+00:00,This repository contains all the code from ECE437 Labs,1,maheshbabugorantla/ECE437,101104935,SystemVerilog,ECE437,4820,0,2018-05-04 10:20:57+00:00,[],
1375,https://github.com/nadeengebara/Jiuxi-s-Work.git,2017-11-06 00:03:06+00:00,,0,nadeengebara/Jiuxi-s-Work,109627227,SystemVerilog,Jiuxi-s-Work,83,0,2017-11-09 10:30:34+00:00,[],
1376,https://github.com/EliseoNunezVega/EricksMIdterm.git,2017-10-28 22:34:49+00:00,,0,EliseoNunezVega/EricksMIdterm,108689101,SystemVerilog,EricksMIdterm,31,0,2017-10-28 22:35:44+00:00,[],
1377,https://github.com/kylebt/ECE571_Drone.git,2017-11-08 04:36:58+00:00,,1,kylebt/ECE571_Drone,109928154,SystemVerilog,ECE571_Drone,1522,0,2017-11-10 16:25:06+00:00,[],
1378,https://github.com/varmil/ay8-cpu-with-system-verilog.git,2017-10-21 07:02:15+00:00,create original 8bit CPU with SystemVerilog !,0,varmil/ay8-cpu-with-system-verilog,107759085,SystemVerilog,ay8-cpu-with-system-verilog,164,0,2017-10-23 08:30:32+00:00,[],
1379,https://github.com/BillNace/18341-assertions_student_version.git,2017-10-11 14:31:18+00:00,F17 Assertion Project: starter code and instructions for students,0,BillNace/18341-assertions_student_version,106565453,SystemVerilog,18341-assertions_student_version,260,0,2017-10-12 03:19:13+00:00,[],
1380,https://github.com/riscveval/lowrisc-chip.git,2017-07-26 15:07:55+00:00,,0,riscveval/lowrisc-chip,98436271,SystemVerilog,lowrisc-chip,2380,0,2017-07-26 15:08:40+00:00,[],
1381,https://github.com/raghavdogra/riscV-decoder.git,2017-09-15 03:37:38+00:00,,0,raghavdogra/riscV-decoder,103610411,SystemVerilog,riscV-decoder,67,0,2017-09-15 03:40:40+00:00,[],
1382,https://github.com/Aswinnatesh/Advanced-Digital-System-Design-Generation.git,2017-11-10 14:18:00+00:00,This repository contains my digital design projects. The projects are in System Verilog for ASIC design.,0,Aswinnatesh/Advanced-Digital-System-Design-Generation,110254830,SystemVerilog,Advanced-Digital-System-Design-Generation,3814,0,2018-05-02 18:00:45+00:00,[],
1383,https://github.com/kevinwen93/multicore.git,2017-11-16 00:21:54+00:00,,0,kevinwen93/multicore,110902224,SystemVerilog,multicore,1357,0,2017-11-16 00:24:21+00:00,[],
1384,https://github.com/kevinwen93/RAID5.git,2017-11-15 23:24:11+00:00,,0,kevinwen93/RAID5,110898402,SystemVerilog,RAID5,33,0,2017-11-15 23:25:07+00:00,[],
1385,https://github.com/kammulchandani/UART_VIP.git,2017-05-04 01:22:04+00:00,UART VIP Project,0,kammulchandani/UART_VIP,90208080,SystemVerilog,UART_VIP,730,0,2017-05-04 01:37:50+00:00,[],
1386,https://github.com/JohnUCSB/cs171_final.git,2017-05-18 22:40:51+00:00,,0,JohnUCSB/cs171_final,91743579,SystemVerilog,cs171_final,278,0,2017-06-15 06:58:33+00:00,[],
1387,https://github.com/DaCodaHUB/GrantDan371.git,2017-03-29 20:16:04+00:00,,0,DaCodaHUB/GrantDan371,86625405,SystemVerilog,GrantDan371,32593,0,2017-04-22 21:03:17+00:00,[],
1388,https://github.com/cameronnapoli/SystemVerilog-Pipelined-Processor.git,2017-02-28 06:34:39+00:00,SystemVerilog Pipelined Proccesor,0,cameronnapoli/SystemVerilog-Pipelined-Processor,83398357,SystemVerilog,SystemVerilog-Pipelined-Processor,4337,0,2018-12-07 22:26:40+00:00,[],
1389,https://github.com/saadmahboob/ECE337.git,2017-05-10 23:46:46+00:00,ASIC Design (Verilog),0,saadmahboob/ECE337,90917982,SystemVerilog,ECE337,1952,0,2019-11-12 02:43:24+00:00,[],
1390,https://github.com/mynordav/tareas.git,2017-06-01 20:39:49+00:00,tareas,0,mynordav/tareas,93097604,SystemVerilog,tareas,9,0,2017-06-01 22:54:16+00:00,[],
1391,https://github.com/shangwei0904/DCLab.git,2017-04-07 14:29:39+00:00,,0,shangwei0904/DCLab,87554974,SystemVerilog,DCLab,229,0,2017-04-07 14:34:10+00:00,[],
1392,https://github.com/sophiess22/Bomberman.git,2017-03-27 02:24:22+00:00,,0,sophiess22/Bomberman,86282187,SystemVerilog,Bomberman,1952,0,2017-03-27 02:37:14+00:00,[],
1393,https://github.com/wasehahmad/FPGAPong.git,2017-07-25 04:30:48+00:00,,0,wasehahmad/FPGAPong,98264370,SystemVerilog,FPGAPong,11,0,2017-07-25 04:31:08+00:00,[],
1394,https://github.com/dagronlund/LD39Hardware.git,2017-06-21 04:22:47+00:00,FPGA hardware design for upcoming Ludum Dare 39,0,dagronlund/LD39Hardware,94962470,SystemVerilog,LD39Hardware,5,0,2017-06-25 08:01:21+00:00,[],
1395,https://github.com/chaunceyyann/OSU-ECE474.git,2017-07-04 22:34:07+00:00,Cyclone IV FPGA Multimeter. http://supacyan.github.io/pages/fpga/des.html,1,chaunceyyann/OSU-ECE474,96257149,SystemVerilog,OSU-ECE474,59456,0,2017-07-04 22:36:26+00:00,[],
1396,https://github.com/renahn/Arquitetura_de_computadores.git,2017-10-03 03:56:51+00:00,,0,renahn/Arquitetura_de_computadores,105612572,SystemVerilog,Arquitetura_de_computadores,57,0,2017-10-03 04:00:32+00:00,[],
1397,https://github.com/ivymx0612/ECE437.git,2017-09-24 01:41:01+00:00,ECE437 Computer Architecture - Purdue University,1,ivymx0612/ECE437,104610759,SystemVerilog,ECE437,45313,0,2019-08-28 14:55:55+00:00,[],
1398,https://github.com/mballance/uvm_stim_factory.git,2017-09-12 15:21:06+00:00,UVM package to assist in managing object stimulus generation,0,mballance/uvm_stim_factory,103287479,SystemVerilog,uvm_stim_factory,6882,0,2017-09-12 15:34:18+00:00,[],https://api.github.com/licenses/apache-2.0
1399,https://github.com/kamigerami/iot17.git,2017-09-29 18:20:12+00:00,iot_nackademin_2017,0,kamigerami/iot17,105303956,SystemVerilog,iot17,2426,0,2017-09-29 18:29:35+00:00,[],
1400,https://github.com/hawkejo/PmodKYPD-MI.git,2017-10-17 17:57:34+00:00,An interface for the Digilent PmodKYPD device.  This design allows for multiple inputs on the device.,0,hawkejo/PmodKYPD-MI,107304845,SystemVerilog,PmodKYPD-MI,15,0,2017-12-07 14:57:18+00:00,[],https://api.github.com/licenses/gpl-3.0
1401,https://github.com/GkyHub/fpga_cnn_train_src.git,2017-10-26 09:36:35+00:00,,1,GkyHub/fpga_cnn_train_src,108391346,SystemVerilog,fpga_cnn_train_src,205,0,2017-10-26 09:36:47+00:00,[],
1402,https://github.com/seovasso/Sl2AbpBridge.git,2017-10-11 09:07:30+00:00,,0,seovasso/Sl2AbpBridge,106531267,SystemVerilog,Sl2AbpBridge,52,0,2017-10-11 12:39:57+00:00,[],
1403,https://github.com/n1kolass/bt656toAST.git,2017-10-30 08:24:00+00:00,This module converts BT.656 video data into Avalon ST,0,n1kolass/bt656toAST,108821868,SystemVerilog,bt656toAST,1172,0,2017-10-30 08:24:06+00:00,[],
1404,https://github.com/JiashuoZhang/32bit-Pipelined-CPU.git,2017-11-08 09:33:38+00:00,CPU in Verilog,0,JiashuoZhang/32bit-Pipelined-CPU,109955590,SystemVerilog,32bit-Pipelined-CPU,9,0,2017-11-08 09:33:50+00:00,[],
1405,https://github.com/himingway/SystemVerilog-Class-Lab.git,2017-11-11 06:26:56+00:00,Labs of SystemVerilog Verification Class @ Xidian University,0,himingway/SystemVerilog-Class-Lab,110323655,SystemVerilog,SystemVerilog-Class-Lab,2301,0,2017-11-11 06:30:14+00:00,[],
1406,https://github.com/SHREC-UF/CMC_Document_and_Tool.git,2017-06-27 19:29:56+00:00,CMC Proj. documents and relevant tools,0,SHREC-UF/CMC_Document_and_Tool,95593428,SystemVerilog,CMC_Document_and_Tool,279299,0,2017-06-27 19:51:22+00:00,[],
1407,https://github.com/desunaito/FlappyBird8x8.git,2017-06-14 01:23:06+00:00,,0,desunaito/FlappyBird8x8,94274375,SystemVerilog,FlappyBird8x8,8,0,2017-06-14 01:43:13+00:00,[],
1408,https://github.com/anilrana15/P2.git,2017-04-20 04:30:37+00:00,Programming_challenge_v2.0,0,anilrana15/P2,88820846,SystemVerilog,P2,16,0,2017-04-20 04:41:28+00:00,[],
1409,https://github.com/nyakuo/verilog_arch.git,2017-03-23 13:51:16+00:00,Verilog HDLの勉強,0,nyakuo/verilog_arch,85955248,SystemVerilog,verilog_arch,45,0,2017-03-23 13:55:34+00:00,[],
1410,https://github.com/ciroceissler/sv_tb.git,2017-04-07 16:13:31+00:00,,0,ciroceissler/sv_tb,87564627,SystemVerilog,sv_tb,4,0,2017-04-11 13:59:39+00:00,[],https://api.github.com/licenses/mit
1411,https://github.com/aargueta/SnickerBits.git,2017-04-15 03:42:54+00:00,Shitcoin Miner for Snickerdoodle!,0,aargueta/SnickerBits,88321788,SystemVerilog,SnickerBits,47,0,2017-04-15 03:43:03+00:00,[],
1412,https://github.com/delauten/bletch.git,2017-05-31 14:02:42+00:00,just a repo,0,delauten/bletch,92951941,SystemVerilog,bletch,4,0,2017-05-31 14:34:56+00:00,[],
1413,https://github.com/LandonTClipp/PSLC-3.0.git,2017-05-26 20:20:49+00:00,A parallel implementation of the Simple Little Computer 3.0 CPU architecture.,0,LandonTClipp/PSLC-3.0,92545676,SystemVerilog,PSLC-3.0,1901,0,2017-06-05 03:55:20+00:00,[],https://api.github.com/licenses/gpl-3.0
1414,https://github.com/UniversalDependencies/UD_Swedish-PUD.git,2017-05-23 08:34:43+00:00,Parallel Universal Dependencies.,1,UniversalDependencies/UD_Swedish-PUD,92149089,SystemVerilog,UD_Swedish-PUD,4634,0,2021-11-03 16:04:55+00:00,[],
1415,https://github.com/mtlang/project_551.git,2017-04-25 14:49:04+00:00,ECE 551 Project,0,mtlang/project_551,89372511,SystemVerilog,project_551,6553,0,2017-04-25 14:49:14+00:00,[],
1416,https://github.com/swartz999/Detection_Edge.git,2017-03-13 22:58:43+00:00,,0,swartz999/Detection_Edge,84882546,SystemVerilog,Detection_Edge,2,0,2017-03-13 22:58:45+00:00,[],
1417,https://github.com/chetanrbb/SV_MemoryInterface.git,2017-03-02 22:27:25+00:00,,0,chetanrbb/SV_MemoryInterface,83730963,SystemVerilog,SV_MemoryInterface,6,0,2017-03-02 22:32:17+00:00,[],
1418,https://github.com/kmui2/ece551-project.git,2017-10-11 15:40:06+00:00,,0,kmui2/ece551-project,106574070,SystemVerilog,ece551-project,798,0,2017-10-11 15:50:49+00:00,[],
1419,https://github.com/geetika6/system_verilog.git,2017-05-30 10:33:41+00:00,System verilog examples and issues ,0,geetika6/system_verilog,92822114,SystemVerilog,system_verilog,1,0,2018-08-02 03:01:43+00:00,[],
1420,https://github.com/kristinetran14/SecureHashAlgorithms.git,2017-07-14 22:20:32+00:00," a processor that is capable of implementing the MD5, SHA-1 and SHA-2 secure hash algorithms.",0,kristinetran14/SecureHashAlgorithms,97276846,SystemVerilog,SecureHashAlgorithms,148,0,2017-07-14 22:22:12+00:00,[],
1421,https://github.com/benschreiber/topaz.git,2017-07-13 04:48:07+00:00,"An out-of-order, single issue processor for the LC3-b ISA",1,benschreiber/topaz,97080997,SystemVerilog,topaz,42,0,2017-07-13 04:49:29+00:00,[],https://api.github.com/licenses/mit
1422,https://github.com/coolpay64/riscv-core.git,2017-11-13 11:07:09+00:00,Risc-V Core,0,coolpay64/riscv-core,110537802,SystemVerilog,riscv-core,16,0,2017-11-13 11:07:43+00:00,[],
1423,https://github.com/NotZombieFood/QueueSystemVerilog.git,2017-10-31 13:06:25+00:00,Module for implementing a queue,0,NotZombieFood/QueueSystemVerilog,108996851,SystemVerilog,QueueSystemVerilog,1,0,2017-10-31 14:07:27+00:00,[],
1424,https://github.com/vikramsringari/Elevator.git,2017-04-08 01:11:56+00:00,,0,vikramsringari/Elevator,87598469,SystemVerilog,Elevator,50,0,2017-04-08 01:23:25+00:00,[],
1425,https://github.com/barileao/arqcomp_assembly.git,2017-06-28 18:47:45+00:00,Programando em assembly,0,barileao/arqcomp_assembly,95701114,SystemVerilog,arqcomp_assembly,9,0,2017-07-06 03:28:05+00:00,[],
1426,https://github.com/mjlitz/battlemips.git,2017-06-20 16:36:33+00:00,,0,mjlitz/battlemips,94913189,SystemVerilog,battlemips,43,0,2017-06-20 16:47:31+00:00,[],
1427,https://github.com/naveensv89/i2c_enhancements.git,2017-05-26 08:57:43+00:00,MTech Project Data,0,naveensv89/i2c_enhancements,92492092,SystemVerilog,i2c_enhancements,0,0,2017-05-26 08:59:02+00:00,[],
1428,https://github.com/dimartinz/LabDigitales2017.git,2017-06-06 23:44:32+00:00,,0,dimartinz/LabDigitales2017,93572599,SystemVerilog,LabDigitales2017,40016,0,2017-06-20 00:16:21+00:00,[],
1429,https://github.com/vietly23/SimpleARM.git,2017-05-04 19:35:49+00:00,,0,vietly23/SimpleARM,90302581,SystemVerilog,SimpleARM,356,0,2017-05-04 19:36:52+00:00,[],
1430,https://github.com/dhondup2/verilog_quadcopter.git,2017-10-09 15:56:16+00:00,,0,dhondup2/verilog_quadcopter,106304526,SystemVerilog,verilog_quadcopter,3,0,2017-10-09 15:56:18+00:00,[],https://api.github.com/licenses/mit
1431,https://github.com/tieovi/SystemVerilog.git,2017-09-24 23:02:41+00:00,,0,tieovi/SystemVerilog,104682330,SystemVerilog,SystemVerilog,842,0,2021-11-25 03:56:36+00:00,[],
1432,https://github.com/sharm294/axi-lbus.git,2017-08-28 19:36:05+00:00,,0,sharm294/axi-lbus,101680578,SystemVerilog,axi-lbus,69,0,2019-01-23 20:58:46+00:00,[],
1433,https://github.com/Wanwannodao/FPGA.git,2017-09-06 17:07:34+00:00,sv samples,0,Wanwannodao/FPGA,102636049,SystemVerilog,FPGA,4,0,2018-04-08 06:25:28+00:00,[],
1434,https://github.com/jordanprazak/ECE-111.git,2017-05-22 00:15:24+00:00,,1,jordanprazak/ECE-111,91995880,SystemVerilog,ECE-111,40580,0,2017-05-22 00:25:07+00:00,[],
1435,https://github.com/Fiecy/ECE337.git,2017-05-23 20:54:14+00:00,,0,Fiecy/ECE337,92219400,SystemVerilog,ECE337,1034,0,2019-12-06 03:26:22+00:00,[],
1436,https://github.com/joyoyoyoyoyo/map-reduce-distributed-algorithm.git,2017-05-22 18:25:42+00:00,Implementation of cluster map reduce with automated deployment,0,joyoyoyoyoyo/map-reduce-distributed-algorithm,92086067,SystemVerilog,map-reduce-distributed-algorithm,445,0,2019-10-11 16:56:51+00:00,"['distributed-systems', 'map-reduce', 'scala', 'akka', 'cloud-computing', 'orchestration']",
1437,https://github.com/DaCodaHUB/Quartus.git,2017-05-09 20:40:23+00:00,,0,DaCodaHUB/Quartus,90789872,SystemVerilog,Quartus,9030,0,2017-09-19 05:24:05+00:00,[],
1438,https://github.com/i2i2i2/CSE141L.git,2017-04-30 23:13:48+00:00,,0,i2i2i2/CSE141L,89882843,SystemVerilog,CSE141L,8367,0,2017-12-01 21:39:05+00:00,[],
1439,https://github.com/skyroger2/RAM.git,2017-05-09 16:56:42+00:00,RAM module for BK-0010 project,0,skyroger2/RAM,90770359,SystemVerilog,RAM,50,0,2017-05-09 16:57:49+00:00,[],
1440,https://github.com/yamaguchi1024/Floating_Point_Addr.git,2017-06-01 08:01:20+00:00,,2,yamaguchi1024/Floating_Point_Addr,93032204,SystemVerilog,Floating_Point_Addr,5011,0,2017-06-08 04:20:12+00:00,[],
1441,https://github.com/AnonymousAbe/474_hw6.git,2017-06-09 21:29:16+00:00,,0,AnonymousAbe/474_hw6,93898169,SystemVerilog,474_hw6,219,0,2017-06-09 21:29:58+00:00,[],
1442,https://github.com/RamsesMadakson/GARAGE.DOOR-State.Machine.git,2017-08-22 04:00:53+00:00,,0,RamsesMadakson/GARAGE.DOOR-State.Machine,101019543,SystemVerilog,GARAGE.DOOR-State.Machine,2,0,2017-08-22 04:01:55+00:00,[],
1443,https://github.com/melt-umn/ableC-regex-pattern-matching.git,2017-07-05 20:04:29+00:00,Regular expressions patterns for the ableC-algebraic-data-types extension,0,melt-umn/ableC-regex-pattern-matching,96356877,SystemVerilog,ableC-regex-pattern-matching,6,0,2023-10-03 22:03:15+00:00,[],
1444,https://github.com/johnjohnlin/ntuee_dclab_material.git,2017-09-18 06:56:48+00:00,This repo is the lab materials for NTUEE DCLAB (http://dclab.ee.ntu.edu.tw).,0,johnjohnlin/ntuee_dclab_material,103903889,SystemVerilog,ntuee_dclab_material,29,0,2017-09-18 06:57:57+00:00,[],
1445,https://github.com/CharlesLi4/Project1.git,2017-09-01 03:02:16+00:00,,0,CharlesLi4/Project1,102067841,SystemVerilog,Project1,39,0,2017-09-01 03:02:52+00:00,[],
1446,https://github.com/aashi4ev/240lab3.git,2017-10-12 02:02:05+00:00,,0,aashi4ev/240lab3,106631967,SystemVerilog,240lab3,3,0,2017-10-12 02:06:12+00:00,[],
1447,https://github.com/hawkejo/PmodKYPD-SI.git,2017-10-17 17:43:50+00:00,Verilog modules to implement an interface for the Digilent PmodKYPD peripheral module.  This design only allows for input from one button at a time.,0,hawkejo/PmodKYPD-SI,107303381,SystemVerilog,PmodKYPD-SI,17,0,2017-12-07 14:56:48+00:00,[],https://api.github.com/licenses/gpl-3.0
1448,https://github.com/pv010694/552_project.git,2017-03-01 21:51:42+00:00,5-stage pipelined processor design(Verilog),0,pv010694/552_project,83605408,SystemVerilog,552_project,13,0,2017-03-01 21:55:19+00:00,[],
1449,https://github.com/bwuerstle/ECE111-sha1.git,2017-03-17 20:57:05+00:00,,0,bwuerstle/ECE111-sha1,85354035,SystemVerilog,ECE111-sha1,2,0,2017-03-17 21:01:46+00:00,[],
1450,https://github.com/negativ/spi_slave.git,2017-02-26 21:00:11+00:00,,0,negativ/spi_slave,83240330,SystemVerilog,spi_slave,655,0,2017-02-26 21:04:28+00:00,[],https://api.github.com/licenses/gpl-3.0
1452,https://github.com/skyroger2/MPI_Interconnect.git,2017-04-27 08:25:52+00:00,MPI bus interconnect for BK-0010 project,0,skyroger2/MPI_Interconnect,89574443,SystemVerilog,MPI_Interconnect,8,0,2017-04-27 08:28:46+00:00,[],
1453,https://github.com/ksriniv/ECE745_ASICVerification.git,2017-10-26 16:43:48+00:00,Final Testbench for LC3 Microcontroller,0,ksriniv/ECE745_ASICVerification,108438806,SystemVerilog,ECE745_ASICVerification,136,0,2021-02-09 21:12:36+00:00,[],
1454,https://github.com/s105063704/Digital_Adder.git,2017-09-17 13:38:24+00:00,This repository consists of some digital adders .,0,s105063704/Digital_Adder,103831596,SystemVerilog,Digital_Adder,47,0,2021-10-18 03:27:09+00:00,['adder'],
1455,https://github.com/BW0ng/High_Speed_Project.git,2017-04-19 04:41:14+00:00,Project for High Speed implementing a module for division and the square root function.,0,BW0ng/High_Speed_Project,88701500,SystemVerilog,High_Speed_Project,29,0,2018-06-23 15:51:07+00:00,[],
1456,https://github.com/sarahyiwang/ukucorn.git,2017-11-09 23:28:45+00:00,,0,sarahyiwang/ukucorn,110177731,SystemVerilog,ukucorn,72,0,2017-11-09 23:37:03+00:00,[],
1457,https://github.com/tzechienchu/z80.git,2017-09-19 09:26:01+00:00,SystemVerilog implementation of the z80 processor.,0,tzechienchu/z80,104054591,SystemVerilog,z80,11,0,2017-09-19 09:26:02+00:00,[],
1458,https://github.com/sh-chris110/chris.git,2017-06-05 04:58:35+00:00,just for sharing,0,sh-chris110/chris,93366542,SystemVerilog,chris,307347,0,2017-09-30 05:48:15+00:00,[],https://api.github.com/licenses/gpl-2.0
1459,https://github.com/ahartel/transporter.git,2017-07-19 11:51:30+00:00,,0,ahartel/transporter,97710561,SystemVerilog,transporter,9,0,2017-07-25 13:32:17+00:00,[],
1460,https://github.com/junbaih/simple_processor.git,2017-10-22 22:04:45+00:00,,0,junbaih/simple_processor,107906510,SystemVerilog,simple_processor,14,0,2018-03-24 11:12:28+00:00,[],https://api.github.com/licenses/unlicense
1461,https://github.com/Luisa2125/MICROPROCESADOR.git,2017-11-12 01:18:43+00:00,Verilog,0,Luisa2125/MICROPROCESADOR,110394167,SystemVerilog,MICROPROCESADOR,2,0,2017-11-12 01:21:16+00:00,[],
1462,https://github.com/mohamedmahmoud97/PipelinedProcessor.git,2017-05-17 00:02:47+00:00,,0,mohamedmahmoud97/PipelinedProcessor,91515144,SystemVerilog,PipelinedProcessor,19,0,2017-06-11 14:35:57+00:00,[],
1463,https://github.com/SamKLowe/scoreboard.git,2017-05-01 22:06:55+00:00,a scoreboard for a RPN calculator,0,SamKLowe/scoreboard,89967128,SystemVerilog,scoreboard,2,0,2017-05-01 22:57:22+00:00,[],
1464,https://github.com/Razelot/cse141l_emu.git,2017-05-10 22:24:52+00:00,CSE 141L SPRING 2017,0,Razelot/cse141l_emu,90913468,SystemVerilog,cse141l_emu,273,0,2018-03-27 09:35:22+00:00,[],
1465,https://github.com/prateekmohan1/Verilog_Neuron.git,2017-05-04 02:11:35+00:00,,0,prateekmohan1/Verilog_Neuron,90211666,SystemVerilog,Verilog_Neuron,223,0,2017-05-16 21:18:00+00:00,[],
1466,https://github.com/andrewslade6/551.git,2017-05-04 04:45:43+00:00,551 Final Files,0,andrewslade6/551,90222572,SystemVerilog,551,296,0,2017-05-04 04:47:57+00:00,[],
1467,https://github.com/skyroger2/ROM_focal.git,2017-05-09 17:01:08+00:00,Focal interpreter ROM for BK-0010 project,0,skyroger2/ROM_focal,90770766,SystemVerilog,ROM_focal,15,0,2017-05-09 17:01:51+00:00,[],
1468,https://github.com/Rigo17/IPD432_Tarea1_Display2.git,2017-10-07 20:05:24+00:00,,0,Rigo17/IPD432_Tarea1_Display2,106126976,SystemVerilog,IPD432_Tarea1_Display2,41,0,2017-10-07 20:24:34+00:00,[],
1469,https://github.com/shreyasp342/pattern-recognition-ece8560.git,2017-10-16 17:46:15+00:00,,0,shreyasp342/pattern-recognition-ece8560,107162358,SystemVerilog,pattern-recognition-ece8560,1896,0,2017-10-16 17:47:53+00:00,[],
1470,https://github.com/SocBridge/SocBridge.git,2017-06-10 12:04:37+00:00,,0,SocBridge/SocBridge,93936567,SystemVerilog,SocBridge,3,0,2017-08-04 08:15:37+00:00,[],
1471,https://github.com/andrewslade6/guitar_fx.git,2017-09-21 01:14:09+00:00,guitar special effects build for de0 nano board,0,andrewslade6/guitar_fx,104284996,SystemVerilog,guitar_fx,80,0,2017-11-03 03:16:53+00:00,[],
1472,https://github.com/sp0oks/MIPS_VideoCharMap.git,2017-07-03 19:37:36+00:00,"Trabalho final de Lab. de Arq1, CharMap em VGA para arquitetura MIPS.",0,sp0oks/MIPS_VideoCharMap,96144679,SystemVerilog,MIPS_VideoCharMap,9469,0,2017-10-19 09:50:59+00:00,[],
1473,https://github.com/vjacynycz/DSOC1718.git,2017-10-30 18:44:36+00:00,,2,vjacynycz/DSOC1718,108893508,SystemVerilog,DSOC1718,29711,0,2019-08-19 09:35:18+00:00,[],https://api.github.com/licenses/gpl-3.0
1474,https://github.com/akshat2904/NoC_Block.git,2017-03-27 08:28:02+00:00,Repository containing the design for the Network-on-Chip (NoC) block.,0,akshat2904/NoC_Block,86310160,SystemVerilog,NoC_Block,3,0,2017-03-27 08:52:47+00:00,[],
1475,https://github.com/phazmatis/1mhz_test_clock_for_6809e.git,2017-03-19 03:10:47+00:00,Testing using a FPGA to clock a 8-bit CPU,0,phazmatis/1mhz_test_clock_for_6809e,85447470,SystemVerilog,1mhz_test_clock_for_6809e,80,0,2017-03-19 03:11:22+00:00,[],
1476,https://github.com/yehzhang/x9.git,2017-04-16 22:21:16+00:00,9-bit ISA,0,yehzhang/x9,88445989,SystemVerilog,x9,617,0,2024-02-08 06:08:43+00:00,"['interpreter', 'assembler', 'hardware', 'instruction-set-architecture', 'processor']",https://api.github.com/licenses/mit
1477,https://github.com/Shantanu25/BM.git,2017-04-15 02:52:44+00:00,Bus Master for CRC generator,0,Shantanu25/BM,88319231,SystemVerilog,BM,69,0,2017-04-15 02:53:13+00:00,[],
1478,https://github.com/bohanw/uvm_asynchfifo.git,2017-07-23 20:18:21+00:00,,0,bohanw/uvm_asynchfifo,98123008,SystemVerilog,uvm_asynchfifo,12821,0,2017-07-23 20:20:46+00:00,[],
1479,https://github.com/nickallaire/CSE141LProject.git,2017-08-15 06:33:52+00:00,,0,nickallaire/CSE141LProject,100346589,SystemVerilog,CSE141LProject,1562,0,2018-04-13 02:52:46+00:00,[],
1480,https://github.com/wssrcok/logic_gate_level_RegFile.git,2017-10-07 16:37:04+00:00,lab 1,1,wssrcok/logic_gate_level_RegFile,106113299,SystemVerilog,logic_gate_level_RegFile,12,0,2018-07-05 23:00:33+00:00,[],
1481,https://github.com/hay318/Maze-Monster.git,2017-10-10 15:45:48+00:00,Game created by using assembly languages,0,hay318/Maze-Monster,106437808,SystemVerilog,Maze-Monster,415,0,2018-04-08 23:48:43+00:00,[],
1482,https://github.com/18-341/Assertions.git,2017-10-11 15:33:32+00:00,18-341 F17 Broken Calculator,0,18-341/Assertions,106573260,SystemVerilog,Assertions,262,0,2017-10-11 22:58:14+00:00,[],
1483,https://github.com/tsimons89/eco_hardware.git,2017-07-10 15:53:18+00:00,,0,tsimons89/eco_hardware,96795355,SystemVerilog,eco_hardware,3370,0,2017-07-10 15:56:24+00:00,[],
1484,https://github.com/vbaldwin1/MitySOM-5CSX_uboot_preloader.git,2017-06-14 20:30:10+00:00,,0,vbaldwin1/MitySOM-5CSX_uboot_preloader,94370547,SystemVerilog,MitySOM-5CSX_uboot_preloader,2639,0,2017-06-14 20:30:35+00:00,[],
1485,https://github.com/jprezende/trabalhoarq.git,2017-06-30 23:32:50+00:00,"Processador single core com LSL, CMP e TST",0,jprezende/trabalhoarq,95930818,SystemVerilog,trabalhoarq,27,0,2017-07-05 20:48:01+00:00,[],
1486,https://github.com/joaopedrosgs/LabDeArq.git,2017-07-16 15:52:44+00:00,,0,joaopedrosgs/LabDeArq,97393915,SystemVerilog,LabDeArq,24,0,2017-07-16 16:02:36+00:00,[],
1487,https://github.com/dts12/UVM-topology-practice.git,2017-10-05 00:59:47+00:00,,0,dts12/UVM-topology-practice,105835492,SystemVerilog,UVM-topology-practice,10,0,2017-10-05 01:01:02+00:00,[],
1488,https://github.com/IanMosquera/EPB_internal_wiring.git,2017-10-02 04:26:14+00:00,guide for any technical personel on wiring the receptacles to interconnect board,0,IanMosquera/EPB_internal_wiring,105497940,SystemVerilog,EPB_internal_wiring,7,0,2017-10-06 05:23:20+00:00,[],
1489,https://github.com/johnpa137/Mat8x8_LED_Tetris.git,2017-10-06 06:17:46+00:00,Tetris on De1_SoC using 8x8 LEDs,0,johnpa137/Mat8x8_LED_Tetris,105973119,SystemVerilog,Mat8x8_LED_Tetris,13120,0,2018-04-09 16:20:54+00:00,[],
1490,https://github.com/MihirShah10/Learning_SV.git,2017-10-12 08:00:07+00:00,,0,MihirShah10/Learning_SV,106662695,SystemVerilog,Learning_SV,4,0,2017-10-12 08:01:40+00:00,[],
1491,https://github.com/ramonn76/bn.git,2017-11-17 22:58:09+00:00,,0,ramonn76/bn,111158570,SystemVerilog,bn,3,0,2017-11-17 23:07:26+00:00,[],
1492,https://github.com/dnlcls07/DV_Tarea4.git,2017-06-02 17:55:28+00:00,,0,dnlcls07/DV_Tarea4,93190965,SystemVerilog,DV_Tarea4,51,0,2017-06-02 18:19:31+00:00,[],
1493,https://github.com/MithulGarg/ece385final.git,2017-04-19 04:38:04+00:00,,0,MithulGarg/ece385final,88701318,SystemVerilog,ece385final,7,0,2017-04-19 04:39:43+00:00,[],
1494,https://github.com/louay-hesham/PipelinedMIPS.git,2017-05-10 16:55:24+00:00,Pipelined MIPS processor implementation using SystemVerilog,0,louay-hesham/PipelinedMIPS,90887911,SystemVerilog,PipelinedMIPS,98,0,2017-06-15 14:31:15+00:00,[],
1495,https://github.com/rastogishubham/VariableCache.git,2017-04-02 22:44:41+00:00,"Design of an N-way Associative, N words per block cache in system verilog",0,rastogishubham/VariableCache,87020999,SystemVerilog,VariableCache,13,0,2017-04-02 23:24:24+00:00,[],
1496,https://github.com/szsamin/PreSiliconProject.git,2017-04-06 00:31:40+00:00,,0,szsamin/PreSiliconProject,87368879,SystemVerilog,PreSiliconProject,1612,0,2017-04-06 00:33:21+00:00,[],
1497,https://github.com/zhjohn925/uvm.git,2017-10-08 23:02:05+00:00,,0,zhjohn925/uvm,106215976,SystemVerilog,uvm,4,0,2020-08-24 04:38:44+00:00,[],
1498,https://github.com/n1kolass/gittest.git,2017-10-30 08:07:55+00:00,,0,n1kolass/gittest,108820133,SystemVerilog,gittest,0,0,2017-10-30 08:16:21+00:00,[],
1499,https://github.com/ZhaoLv/VPlatform.git,2017-10-21 13:50:13+00:00,新型的验证平台,0,ZhaoLv/VPlatform,107784009,SystemVerilog,VPlatform,38,0,2017-10-27 03:48:53+00:00,[],
1500,https://github.com/filcaval1234/ArtigoINTG-2018.git,2017-10-05 11:54:51+00:00,,0,filcaval1234/ArtigoINTG-2018,105884193,SystemVerilog,ArtigoINTG-2018,50672,0,2017-10-06 14:34:27+00:00,[],
1501,https://github.com/sparksfly000/nyuzi_speed.git,2017-09-18 07:35:15+00:00,,0,sparksfly000/nyuzi_speed,103907480,SystemVerilog,nyuzi_speed,93,0,2017-09-18 07:35:49+00:00,[],
1502,https://github.com/why950708/ECE551-N-A.git,2017-03-30 14:50:12+00:00,,0,why950708/ECE551-N-A,86714625,SystemVerilog,ECE551-N-A,84630,0,2018-02-21 15:25:50+00:00,"['ece551', 'spring', '2017']",
1503,https://github.com/scottena/doesnt_work.git,2017-05-02 22:29:47+00:00,,0,scottena/doesnt_work,90083601,SystemVerilog,doesnt_work,3,0,2017-05-03 00:24:22+00:00,[],
1504,https://github.com/emrenass/MipsPipeline.git,2017-05-18 09:12:04+00:00,Mips pipeline simulator for basys3,0,emrenass/MipsPipeline,91673048,SystemVerilog,MipsPipeline,67,0,2017-05-18 09:18:08+00:00,[],
1505,https://github.com/hodgerti/ECE_272_Section_5.git,2017-06-04 01:29:10+00:00,This repository holds all of the system verilog code used in section 5 lab.,0,hodgerti/ECE_272_Section_5,93283261,SystemVerilog,ECE_272_Section_5,5,0,2017-06-04 01:34:48+00:00,[],
1506,https://github.com/dhamilton13/CSE141L.git,2017-06-16 06:01:41+00:00,,0,dhamilton13/CSE141L,94510541,SystemVerilog,CSE141L,1733,0,2017-06-16 06:06:18+00:00,[],
1507,https://github.com/ArtemKhvostov/MIPS_SV.git,2017-06-10 12:42:09+00:00,,0,ArtemKhvostov/MIPS_SV,93938354,SystemVerilog,MIPS_SV,1047,0,2017-06-10 12:42:29+00:00,[],
1508,https://github.com/kvaishali/ln-algebra-verilog.git,2017-02-22 19:27:04+00:00,primitives coded in verilog,0,kvaishali/ln-algebra-verilog,82844052,SystemVerilog,ln-algebra-verilog,9,0,2017-03-03 02:52:09+00:00,[],
1509,https://github.com/burkeg/SD-Card-Data-Security-through-AES-Encryption-Decryption-ASIC.git,2017-03-10 19:35:08+00:00,,1,burkeg/SD-Card-Data-Security-through-AES-Encryption-Decryption-ASIC,84594296,SystemVerilog,SD-Card-Data-Security-through-AES-Encryption-Decryption-ASIC,2971,0,2017-03-17 00:10:54+00:00,[],
1510,https://github.com/rafaelgdp/bd_oficial.git,2017-03-10 19:04:59+00:00,,0,rafaelgdp/bd_oficial,84592025,SystemVerilog,bd_oficial,20,0,2018-04-18 23:59:13+00:00,[],
1511,https://github.com/plebsX/cryption.git,2017-11-12 10:06:36+00:00,,0,plebsX/cryption,110422112,SystemVerilog,cryption,7,0,2017-11-12 10:08:40+00:00,[],
1512,https://github.com/ARC-Lab-UF/Amazon_EC2_F1.git,2017-11-06 14:08:49+00:00,Code for virtual interfaces used on Amazon EC2 F1 instances.,0,ARC-Lab-UF/Amazon_EC2_F1,109703402,SystemVerilog,Amazon_EC2_F1,892,0,2018-03-29 16:43:14+00:00,[],
1513,https://github.com/RamsesMadakson/PROCESSOR-Six.16Bit.Instructions.git,2017-08-22 03:29:40+00:00,,0,RamsesMadakson/PROCESSOR-Six.16Bit.Instructions,101017263,SystemVerilog,PROCESSOR-Six.16Bit.Instructions,11,0,2017-08-22 03:48:14+00:00,[],
1514,https://github.com/nicholasbarnette/COMP541.git,2017-09-01 15:51:31+00:00,,2,nicholasbarnette/COMP541,102128979,SystemVerilog,COMP541,19350,0,2019-04-30 02:16:15+00:00,[],
1515,https://github.com/Daniel-Huynh/Digital-Design.git,2017-09-02 03:33:26+00:00,Code for projects completed in EE 371-Digital Design,0,Daniel-Huynh/Digital-Design,102170279,SystemVerilog,Digital-Design,64,0,2017-09-04 04:05:32+00:00,[],https://api.github.com/licenses/gpl-3.0
1516,https://github.com/oleh-plotnikov/vending_machine.git,2017-08-22 13:54:45+00:00,,0,oleh-plotnikov/vending_machine,101068540,SystemVerilog,vending_machine,15,0,2017-08-22 13:58:16+00:00,[],
1517,https://github.com/xzhou40/ece411.git,2017-09-29 19:25:27+00:00,,0,xzhou40/ece411,105309252,SystemVerilog,ece411,34013,0,2017-09-29 19:26:33+00:00,[],
1518,https://github.com/jyerra2/PokemonGameFPGA.git,2017-08-02 05:08:59+00:00,A Nintendo-style Pokemon game built for the Altera DE2-115 development board.,0,jyerra2/PokemonGameFPGA,99074364,SystemVerilog,PokemonGameFPGA,1965,0,2017-08-02 05:12:11+00:00,[],
1519,https://github.com/caelinp/bootcamp1.git,2017-09-09 18:09:22+00:00,,0,caelinp/bootcamp1,102975260,SystemVerilog,bootcamp1,13,0,2018-09-21 05:39:18+00:00,[],
1520,https://github.com/Nnnighojk/Sobel-Edge-.git,2017-09-13 03:34:28+00:00,ASIC design class,0,Nnnighojk/Sobel-Edge-,103349308,SystemVerilog,Sobel-Edge-,8032,0,2017-12-16 06:23:19+00:00,[],
1521,https://github.com/huyutao/processor_YH_HH.git,2017-09-20 12:40:21+00:00,,0,huyutao/processor_YH_HH,104213805,SystemVerilog,processor_YH_HH,16844,0,2018-10-01 18:04:21+00:00,[],
1522,https://github.com/betterxuan/subscriber.sv.git,2017-09-16 14:31:36+00:00,,0,betterxuan/subscriber.sv,103758450,SystemVerilog,subscriber.sv,1,0,2017-09-16 14:32:30+00:00,[],
1523,https://github.com/adrieleramoso/ULA32bits.git,2017-10-03 21:02:41+00:00,ula32bits e testbench,0,adrieleramoso/ULA32bits,105703002,SystemVerilog,ULA32bits,4,0,2017-10-03 21:18:06+00:00,[],
1524,https://github.com/EvelynEZ/JumpingFrog.git,2017-11-15 19:19:14+00:00,"Implementation of a simple version Jumping Frog game on FPGA and 8x8 LED series. Red light represents the frog, and the green lights moving downwards are the walls to avoid. The frog is moved by left/right buttons, the score for the player is shown on the digital number display.",0,EvelynEZ/JumpingFrog,110876084,SystemVerilog,JumpingFrog,11,0,2017-11-15 19:19:27+00:00,[],
1525,https://github.com/connorwiniarczyk/Dig2_FinalProject.git,2017-11-19 23:42:12+00:00,,0,connorwiniarczyk/Dig2_FinalProject,111341448,SystemVerilog,Dig2_FinalProject,185,0,2017-11-20 00:27:49+00:00,[],
1526,https://github.com/sunilNgowda/ALU_system_verilog.git,2017-07-02 10:12:13+00:00,"This repository contains a design file,package and test bench file for an ALU.",0,sunilNgowda/ALU_system_verilog,96015532,SystemVerilog,ALU_system_verilog,128,0,2017-07-02 10:12:50+00:00,[],
1527,https://github.com/gabyro/Practica3_Verificacion.git,2017-04-09 00:47:48+00:00,Array module,0,gabyro/Practica3_Verificacion,87673238,SystemVerilog,Practica3_Verificacion,176,0,2017-04-09 00:48:01+00:00,[],
1528,https://github.com/sassoun/Assertions.git,2017-05-01 10:01:28+00:00,,0,sassoun/Assertions,89913830,SystemVerilog,Assertions,1,0,2017-05-01 10:01:53+00:00,[],
1529,https://github.com/fl4shk/flare32_cpu_old.git,2017-04-26 20:19:06+00:00,My attempt at a 32-bit Load-Store CPU in SystemVerilog,0,fl4shk/flare32_cpu_old,89522964,SystemVerilog,flare32_cpu_old,184,0,2020-08-06 14:42:41+00:00,[],https://api.github.com/licenses/mit
1530,https://github.com/ycgasjy/dynamic_router.git,2017-05-23 22:43:47+00:00,,1,ycgasjy/dynamic_router,92226969,SystemVerilog,dynamic_router,80,0,2017-06-28 21:51:33+00:00,[],
1531,https://github.com/bpandayk/CSE141L.git,2017-05-02 20:17:38+00:00,,0,bpandayk/CSE141L,90074252,SystemVerilog,CSE141L,7002,0,2017-05-02 20:50:03+00:00,[],
1532,https://github.com/shivanicm/Donkey-Kong-Country.git,2017-05-04 23:49:38+00:00,Final project for ECE 385 (digital logic design),0,shivanicm/Donkey-Kong-Country,90319403,SystemVerilog,Donkey-Kong-Country,277,0,2017-05-04 23:54:44+00:00,[],
1533,https://github.com/shayanmukhtar/ECE676.git,2017-05-13 14:14:00+00:00,,0,shayanmukhtar/ECE676,91179003,SystemVerilog,ECE676,25,0,2017-05-13 14:14:50+00:00,[],
1534,https://github.com/amarcott11/DiamondMarcott.git,2017-02-22 19:36:28+00:00,,0,amarcott11/DiamondMarcott,82844809,SystemVerilog,DiamondMarcott,14,0,2017-02-22 19:38:04+00:00,[],
1536,https://github.com/liziming117/uvmprimer_reference.git,2017-07-03 08:13:29+00:00,,0,liziming117/uvmprimer_reference,96086704,SystemVerilog,uvmprimer_reference,6018,0,2017-07-03 08:13:55+00:00,[],
1537,https://github.com/shagindl/cvnnavia-interview.git,2017-03-04 13:54:27+00:00,Решение тестовых заданий для собеседования от cvnnavia,0,shagindl/cvnnavia-interview,83896904,SystemVerilog,cvnnavia-interview,50,0,2017-03-04 18:15:53+00:00,[],
1538,https://github.com/tm8687/FIFO-Verification.git,2017-03-09 07:46:23+00:00,,0,tm8687/FIFO-Verification,84413353,SystemVerilog,FIFO-Verification,6,0,2017-03-09 08:04:01+00:00,[],
1540,https://github.com/kouarasteh/SAT.git,2017-11-11 01:44:52+00:00,An impractical retro orbiter game for FPGA,0,kouarasteh/SAT,110309254,SystemVerilog,SAT,401,0,2018-10-05 20:09:00+00:00,[],
1541,https://github.com/rbrenner/Testbench.git,2017-10-02 21:29:40+00:00,Projeto Testbench ULA 32bits,0,rbrenner/Testbench,105587152,SystemVerilog,Testbench,1094,0,2017-10-02 21:45:40+00:00,[],
1542,https://github.com/gladwig2/Vplay.git,2017-10-02 20:32:21+00:00,,0,gladwig2/Vplay,105581952,SystemVerilog,Vplay,10,0,2017-10-04 01:42:26+00:00,[],
1543,https://github.com/melt-umn/ableC-vector.git,2017-07-03 20:52:27+00:00,C++- and Python-inspired vectors implemented as an ableC extension,0,melt-umn/ableC-vector,96149574,SystemVerilog,ableC-vector,83,0,2022-01-19 02:28:53+00:00,[],https://api.github.com/licenses/lgpl-3.0
1544,https://github.com/stamp711/digital-frequency-meter.git,2017-07-10 17:47:53+00:00,,0,stamp711/digital-frequency-meter,96805406,SystemVerilog,digital-frequency-meter,48,0,2023-01-28 18:37:54+00:00,[],
1545,https://github.com/Dimitrov2005/FSM-Controller.git,2017-07-27 13:23:37+00:00,,0,Dimitrov2005/FSM-Controller,98538618,SystemVerilog,FSM-Controller,3765,0,2017-08-02 13:05:16+00:00,[],
1546,https://github.com/mah049/SHA-1-SHA-256-MD5.git,2017-08-19 19:01:56+00:00,,0,mah049/SHA-1-SHA-256-MD5,100815453,SystemVerilog,SHA-1-SHA-256-MD5,63,0,2017-08-19 19:07:59+00:00,[],
1547,https://github.com/scottena/HW6.git,2017-06-02 03:19:38+00:00,,0,scottena/HW6,93122598,SystemVerilog,HW6,3,0,2017-06-02 03:20:39+00:00,[],
1548,https://github.com/891680996/digital_clock_sv.git,2017-05-29 10:50:59+00:00,,0,891680996/digital_clock_sv,92731080,SystemVerilog,digital_clock_sv,12,0,2017-05-30 16:15:33+00:00,[],https://api.github.com/licenses/mit
1549,https://github.com/nikhilesh95/SPORK-Processor.git,2017-05-10 00:51:19+00:00,Verilog and System Verilog description of a custom 9-bit processor,0,nikhilesh95/SPORK-Processor,90805239,SystemVerilog,SPORK-Processor,41,0,2017-05-10 00:53:08+00:00,[],
1550,https://github.com/Cmjunior1/ALU_32.git,2017-09-29 21:40:13+00:00,alu 32 bits,0,Cmjunior1/ALU_32,105319466,SystemVerilog,ALU_32,3,0,2017-09-29 21:42:29+00:00,[],
1551,https://github.com/DaiconV/CSE132L.git,2017-03-05 10:16:30+00:00,Final Project,0,DaiconV/CSE132L,83961375,SystemVerilog,CSE132L,6132,0,2017-03-06 11:14:39+00:00,[],
1552,https://github.com/CSIYI/ComputerDesign.git,2017-03-21 05:13:39+00:00,Computer Desig,0,CSIYI/ComputerDesign,85661749,SystemVerilog,ComputerDesign,21488,0,2019-01-31 14:35:30+00:00,[],
1553,https://github.com/kbilgund/Management-Data-Input-Ouput.git,2017-04-17 09:36:49+00:00,,0,kbilgund/Management-Data-Input-Ouput,88493799,SystemVerilog,Management-Data-Input-Ouput,44,0,2017-04-17 14:39:31+00:00,[],
1554,https://github.com/JunyouChi/PurdueCourses.git,2017-03-07 02:10:18+00:00,,0,JunyouChi/PurdueCourses,84143237,SystemVerilog,PurdueCourses,390456,0,2017-03-07 02:10:30+00:00,[],
1555,https://github.com/Chava8796/DV_Tarea05.git,2017-06-05 20:55:39+00:00,,0,Chava8796/DV_Tarea05,93446222,SystemVerilog,DV_Tarea05,38,0,2017-06-05 20:59:18+00:00,[],
1556,https://github.com/offshorewind/stp_assignments.git,2017-06-18 16:15:26+00:00,follows the pseudo code on book SMT by Koehn,0,offshorewind/stp_assignments,94698627,SystemVerilog,stp_assignments,101,0,2017-06-18 16:42:18+00:00,[],
1557,https://github.com/lnthang/FPGA-playground.git,2017-07-17 16:46:28+00:00,,0,lnthang/FPGA-playground,97499929,SystemVerilog,FPGA-playground,68,0,2017-07-17 16:47:20+00:00,[],
1558,https://github.com/wshh1559/Chain-NN.git,2017-03-22 02:12:47+00:00,RTL code for Chain-NN,0,wshh1559/Chain-NN,85774700,SystemVerilog,Chain-NN,360,0,2017-03-22 02:30:37+00:00,[],
1559,https://github.com/atsmith3/IlliniFormulaElectricDisplay.git,2017-06-30 03:34:41+00:00,Repo for the Illini Formula Electric Display System 2017-2018,1,atsmith3/IlliniFormulaElectricDisplay,95844987,SystemVerilog,IlliniFormulaElectricDisplay,78499,0,2019-04-11 05:06:42+00:00,[],
1560,https://github.com/kafka96/Snake.git,2017-05-16 13:26:15+00:00,CS 223 course project,0,kafka96/Snake,91461385,SystemVerilog,Snake,10,0,2017-05-16 13:31:26+00:00,[],
1561,https://github.com/melt-umn/ableC-halide.git,2017-06-30 21:29:13+00:00,Halide-like loop specification and transformation concepts implemented as an ableC extension,0,melt-umn/ableC-halide,95925272,SystemVerilog,ableC-halide,121,0,2022-01-19 02:22:27+00:00,[],https://api.github.com/licenses/lgpl-3.0
1562,https://github.com/EvelynEZ/ARM-Microprocessor.git,2017-11-15 19:07:49+00:00,Implementation of the ARM microprocessor using SystemVerilog on Quartus II.,0,EvelynEZ/ARM-Microprocessor,110874802,SystemVerilog,ARM-Microprocessor,26,0,2017-11-15 19:10:25+00:00,[],
1563,https://github.com/tsmoffat/SystemVerilogLabs.git,2017-11-09 12:38:52+00:00,,0,tsmoffat/SystemVerilogLabs,110113652,SystemVerilog,SystemVerilogLabs,15,0,2017-11-09 15:02:42+00:00,[],
1564,https://github.com/kevinliutong/TMDFI.git,2017-11-12 08:37:11+00:00,Implement the DataFlow Integrity mechanism on rocket-core hardware to accelerate,0,kevinliutong/TMDFI,110417233,SystemVerilog,TMDFI,3788,0,2017-11-13 00:54:21+00:00,[],
1565,https://github.com/yjc9426/PurdueCourses.git,2017-09-13 17:40:05+00:00,,7,yjc9426/PurdueCourses,103431125,SystemVerilog,PurdueCourses,390456,0,2017-09-13 17:40:18+00:00,[],
1566,https://github.com/baibai-cbd/EE800_SHA256_FPGA.git,2017-10-18 01:46:21+00:00,,1,baibai-cbd/EE800_SHA256_FPGA,107344989,SystemVerilog,EE800_SHA256_FPGA,10,0,2017-10-18 02:39:19+00:00,[],
1567,https://github.com/nflorina/digital-circuit-design.git,2017-10-29 19:59:05+00:00,digital circuit design ( digital clock with multiple functions ) for emphasizing testbench  concept & architecture,0,nflorina/digital-circuit-design,108766482,SystemVerilog,digital-circuit-design,632,0,2017-10-29 20:13:25+00:00,[],
1568,https://github.com/jerry990/RISC-Pipe-CPU.git,2017-10-21 13:45:49+00:00,,1,jerry990/RISC-Pipe-CPU,107783694,SystemVerilog,RISC-Pipe-CPU,8,0,2018-04-21 14:23:51+00:00,[],
1569,https://github.com/afiskon/icestick-first-project.git,2017-11-06 16:58:02+00:00,"My first experiments with iCEstick, IceStorm, Yosys and Arachne-pnr",2,afiskon/icestick-first-project,109723823,SystemVerilog,icestick-first-project,3,0,2017-11-27 15:04:07+00:00,[],https://api.github.com/licenses/bsd-2-clause
1570,https://github.com/shyamal-anadkat/DigitalDesign.git,2017-09-06 18:42:34+00:00,,0,shyamal-anadkat/DigitalDesign,102645297,SystemVerilog,DigitalDesign,81211,0,2017-12-28 23:29:28+00:00,[],
1571,https://github.com/wa9035148/sva_checker_library.git,2017-09-09 12:04:39+00:00,Library of RTL checker by SVA,0,wa9035148/sva_checker_library,102951935,SystemVerilog,sva_checker_library,0,0,2017-09-09 12:07:24+00:00,[],
1572,https://github.com/haniawni/AntSimHardware.git,2017-05-02 22:36:02+00:00,Ant simulation in systemverilog for FPGA,1,haniawni/AntSimHardware,90084074,SystemVerilog,AntSimHardware,55,0,2017-05-02 22:38:39+00:00,[],
1573,https://github.com/sassoun/Bus-Master-Arbiter-for-CRC.git,2017-05-01 09:54:31+00:00,,0,sassoun/Bus-Master-Arbiter-for-CRC,89913475,SystemVerilog,Bus-Master-Arbiter-for-CRC,32,0,2017-05-01 10:04:59+00:00,[],
1574,https://github.com/SkullStickyRice/UIUC-ECE411-Computer-Architecture-.git,2017-05-17 19:45:05+00:00,,1,SkullStickyRice/UIUC-ECE411-Computer-Architecture-,91614040,SystemVerilog,UIUC-ECE411-Computer-Architecture-,945,0,2017-05-28 16:12:55+00:00,[],
1575,https://github.com/AnonymousAbe/474_hw7.git,2017-06-09 23:07:41+00:00,,0,AnonymousAbe/474_hw7,93903141,SystemVerilog,474_hw7,6,0,2017-06-10 02:05:58+00:00,[],
1576,https://github.com/AdityaPawar5/Formal-Verification.git,2017-10-14 19:33:51+00:00,,0,AdityaPawar5/Formal-Verification,106956977,SystemVerilog,Formal-Verification,18,0,2022-05-23 07:42:42+00:00,[],
1577,https://github.com/alinalarisa/ether.git,2017-03-29 15:36:17+00:00,,0,alinalarisa/ether,86599802,SystemVerilog,ether,2,0,2017-03-29 15:37:27+00:00,[],
1578,https://github.com/MohamedAkl1/ALU.git,2017-03-15 00:40:46+00:00,32 bit alu using system verilog,0,MohamedAkl1/ALU,85011571,SystemVerilog,ALU,42,0,2017-03-15 00:47:44+00:00,[],
1579,https://github.com/raymond88wang/CSE112L-Lab3.git,2017-03-14 03:59:54+00:00,,0,raymond88wang/CSE112L-Lab3,84903799,SystemVerilog,CSE112L-Lab3,1621,0,2017-03-14 04:02:45+00:00,[],
1580,https://github.com/ytbmulder/multi-stream-buffer.git,2017-08-09 10:42:58+00:00,,2,ytbmulder/multi-stream-buffer,99797335,SystemVerilog,multi-stream-buffer,140,0,2019-05-31 13:37:09+00:00,[],https://api.github.com/licenses/bsd-2-clause
1581,https://github.com/almeidaslucas/arquitetura.git,2017-10-04 02:39:13+00:00,,0,almeidaslucas/arquitetura,105725302,SystemVerilog,arquitetura,2,0,2017-10-04 02:40:03+00:00,[],
1582,https://github.com/asulike420/HDL.git,2017-09-19 18:17:59+00:00,Code Examples,0,asulike420/HDL,104111284,SystemVerilog,HDL,2,0,2017-09-19 18:33:35+00:00,[],
1583,https://github.com/ztgao/fpga_cookies.git,2017-09-19 16:01:08+00:00,Some simple functions or sub-modules used in my project.,0,ztgao/fpga_cookies,104096676,SystemVerilog,fpga_cookies,1,0,2017-09-20 14:25:13+00:00,[],
1584,https://github.com/StrokovSt/Student2017.git,2017-09-10 15:53:37+00:00,Student project,1,StrokovSt/Student2017,103041936,SystemVerilog,Student2017,2852,0,2017-09-10 15:53:39+00:00,[],
1585,https://github.com/rafaelgdp/bd-pem.git,2017-03-08 21:35:22+00:00,Projeto do BD para o PEM.,0,rafaelgdp/bd-pem,84368364,SystemVerilog,bd-pem,127,0,2019-02-03 11:16:48+00:00,[],
1586,https://github.com/JPaulMora/NibblER.git,2017-11-13 20:35:19+00:00,Verilog implementation of the Nibbler: https://www.bigmessowires.com/nibbler/,0,JPaulMora/NibblER,110598954,SystemVerilog,NibblER,52,0,2017-11-14 03:31:06+00:00,[],https://api.github.com/licenses/gpl-3.0
1587,https://github.com/scherrgabriel/trabalho_arq.git,2017-06-28 22:52:16+00:00,Trabalho de Arquitetura de Computadores,0,scherrgabriel/trabalho_arq,95718147,SystemVerilog,trabalho_arq,18,0,2017-06-28 23:41:02+00:00,[],
1588,https://github.com/fattybobcat/trial_task_rtl.git,2017-06-27 06:47:24+00:00,trial task rtl. Cross_bar for 4 master & 4 slave,0,fattybobcat/trial_task_rtl,95526668,SystemVerilog,trial_task_rtl,130,0,2020-06-22 11:52:55+00:00,[],
1589,https://github.com/cquickstad/txt_tbl.git,2017-07-14 17:54:16+00:00,"A bit of SystemVerilog code to help generate well formatted text tables, say for a logger.",0,cquickstad/txt_tbl,97259695,SystemVerilog,txt_tbl,9,0,2021-12-02 00:59:22+00:00,[],https://api.github.com/licenses/apache-2.0
1590,https://github.com/SIUE-VLSI/CFD.git,2017-07-06 17:59:41+00:00,,0,SIUE-VLSI/CFD,96458045,SystemVerilog,CFD,44,0,2017-07-06 18:43:15+00:00,[],
1591,https://github.com/0ctobyte/fpga.git,2017-07-09 02:22:18+00:00,Just some projects written in SystemVerilog for my Cyclone IV FPGA on the DE2-115 board,0,0ctobyte/fpga,96656152,SystemVerilog,fpga,110,0,2017-07-09 02:44:16+00:00,[],https://api.github.com/licenses/mit
1592,https://github.com/siddhantekale/BFM.git,2017-07-25 02:05:25+00:00,,0,siddhantekale/BFM,98253176,SystemVerilog,BFM,241,0,2020-03-22 01:59:38+00:00,[],
1593,https://github.com/Jyun-Neng/Router.git,2017-10-03 17:47:45+00:00,,0,Jyun-Neng/Router,105683460,SystemVerilog,Router,1,0,2017-10-03 17:49:50+00:00,[],
1594,https://github.com/chialin6/Digital-Circuit-Design_2016.git,2017-10-11 12:06:57+00:00,Labs and lab test of digital circuit design,0,chialin6/Digital-Circuit-Design_2016,106549139,SystemVerilog,Digital-Circuit-Design_2016,8953,0,2020-06-26 05:04:08+00:00,[],
1595,https://github.com/melt-umn/ableC-interval.git,2017-07-04 15:38:38+00:00,Numeric intervals implemented as an ableC extension,0,melt-umn/ableC-interval,96232721,SystemVerilog,ableC-interval,39,0,2022-01-19 02:22:43+00:00,[],https://api.github.com/licenses/lgpl-3.0
1596,https://github.com/RohitK92/verilog-impls.git,2017-11-12 06:48:49+00:00,My Verilog implementations of different digital blocks,0,RohitK92/verilog-impls,110411573,SystemVerilog,verilog-impls,11,0,2018-06-23 22:19:21+00:00,[],
1597,https://github.com/een5afr/VerilatorPlayground.git,2017-11-07 00:17:42+00:00,Playground for verilator,0,een5afr/VerilatorPlayground,109765383,SystemVerilog,VerilatorPlayground,1,0,2022-04-15 22:53:44+00:00,[],
1598,https://github.com/Shantanu25/NOC.git,2017-04-15 02:51:14+00:00,Network on chip for CRC generator,0,Shantanu25/NOC,88319164,SystemVerilog,NOC,51,0,2017-04-15 02:52:08+00:00,[],
1599,https://github.com/akshat2904/CRC_Block.git,2017-03-27 08:27:24+00:00,Repository containing the design for the Cyclic Redundancy Check (CRC) block.,0,akshat2904/CRC_Block,86310088,SystemVerilog,CRC_Block,5,0,2017-03-27 08:53:13+00:00,[],
1600,https://github.com/whampson/elc3.git,2017-04-08 19:48:40+00:00,The Extended LC-3 -- ECE 385 Final Project,0,whampson/elc3,87660048,SystemVerilog,elc3,955,0,2018-11-28 19:51:11+00:00,[],
1601,https://github.com/filipeferibeiro/SHA-1.git,2017-03-29 14:18:28+00:00,SHA-1 em SystemVerilog,0,filipeferibeiro/SHA-1,86591137,SystemVerilog,SHA-1,6,0,2017-03-29 14:23:17+00:00,[],
1602,https://github.com/nyakuo/verilog_NN.git,2017-03-23 13:58:06+00:00,Verilog HDLでNNの実装の勉強,0,nyakuo/verilog_NN,85955995,SystemVerilog,verilog_NN,2,0,2017-03-23 13:58:24+00:00,[],
1603,https://github.com/uditkhanna/PDP-11-ISA-Simulator-.git,2017-10-18 02:31:43+00:00,"ECE 586 Spring 2017, Portland State University",0,uditkhanna/PDP-11-ISA-Simulator-,107349167,SystemVerilog,PDP-11-ISA-Simulator-,262,0,2017-10-18 02:39:24+00:00,[],https://api.github.com/licenses/gpl-3.0
1604,https://github.com/NotZombieFood/TempAverage.git,2017-10-18 00:01:32+00:00,temp average systemverilog,0,NotZombieFood/TempAverage,107337014,SystemVerilog,TempAverage,10,0,2017-11-03 13:29:55+00:00,[],
1605,https://github.com/Matcunningham/CECS225.git,2017-10-13 07:42:17+00:00,Digital Logic and Assembly,0,Matcunningham/CECS225,106793703,SystemVerilog,CECS225,1,0,2017-10-13 07:49:47+00:00,[],
1606,https://github.com/KunalD09/CAN-Bus-with-APB-interface.git,2017-05-30 21:06:17+00:00,,0,KunalD09/CAN-Bus-with-APB-interface,92876171,SystemVerilog,CAN-Bus-with-APB-interface,1093,0,2017-05-30 21:13:41+00:00,[],
1607,https://github.com/abjshprof/Computer-Architecture.git,2017-05-26 05:44:04+00:00," 5-stage pipeline CPU for RISC-V architecture. complete RV64IM instruction set (all variants of load/store, arithmetic, branch instructions). Cpu core with a 5-stage pipeline, 2-way set associative instruction cache, data cache and hazard detection",0,abjshprof/Computer-Architecture,92476442,SystemVerilog,Computer-Architecture,70,0,2018-11-12 16:24:05+00:00,[],
1608,https://github.com/Austix6E/Microcontroller.git,2017-06-01 04:58:46+00:00,Custom MCU targeting DSP applications,0,Austix6E/Microcontroller,93018022,SystemVerilog,Microcontroller,3938,0,2017-07-21 06:14:53+00:00,[],https://api.github.com/licenses/mit
1609,https://github.com/WideWord/cpu2.git,2017-06-12 08:22:45+00:00,,0,WideWord/cpu2,94072528,SystemVerilog,cpu2,601,0,2017-07-26 16:00:47+00:00,[],
1610,https://github.com/hshaban1/SnakeGame.git,2017-06-13 23:22:25+00:00,snake game verilog,0,hshaban1/SnakeGame,94267002,SystemVerilog,SnakeGame,5,0,2017-06-13 23:26:47+00:00,[],
1611,https://github.com/jgutter/Veriloggers_551.git,2017-06-16 18:30:20+00:00,,0,jgutter/Veriloggers_551,94571213,SystemVerilog,Veriloggers_551,878,0,2017-06-16 18:31:21+00:00,[],
1612,https://github.com/raffy-bekhit/Mips-pipeline-microprocessor.git,2017-06-20 10:19:26+00:00,Design of mips pipeline microprocessor architecture using system verilog,0,raffy-bekhit/Mips-pipeline-microprocessor,94878627,SystemVerilog,Mips-pipeline-microprocessor,10,0,2020-11-24 04:18:19+00:00,"['computer-architecture', 'systemverilog', 'pipeline-processor', 'logic-design']",
1613,https://github.com/just0422/p6-processor.git,2017-05-30 20:07:49+00:00,P6 Processor,0,just0422/p6-processor,92871694,SystemVerilog,p6-processor,9672,0,2018-08-17 16:50:45+00:00,[],
1614,https://github.com/parlapalli/SocBridgeVLSI.git,2017-06-26 15:40:46+00:00,,0,parlapalli/SocBridgeVLSI,95462496,SystemVerilog,SocBridgeVLSI,1,0,2017-06-26 16:35:42+00:00,[],
1615,https://github.com/rastogishubham/BFM_ECE337.git,2017-10-31 01:48:42+00:00,This is a repository for the BFM development for ECE337,0,rastogishubham/BFM_ECE337,108930427,SystemVerilog,BFM_ECE337,54,0,2020-10-15 22:07:09+00:00,[],
1616,https://github.com/pbing/Wishbone.git,2017-11-11 11:56:21+00:00,Check Wishbone B4 variants,0,pbing/Wishbone,110341697,SystemVerilog,Wishbone,969,0,2023-02-04 11:35:32+00:00,"['wishbone', 'wishbone-bus', 'systemverilog']",
1617,https://github.com/mamurai-0/Univ_lectures.git,2017-02-22 02:52:06+00:00,lecture codes,0,mamurai-0/Univ_lectures,82753250,SystemVerilog,Univ_lectures,229048,0,2017-02-22 03:34:43+00:00,[],
1618,https://github.com/akshat2904/Bus_Master.git,2017-03-27 08:29:14+00:00,Repository containing the combined features of CRC and NoC blocks working as a Bus Master,0,akshat2904/Bus_Master,86310270,SystemVerilog,Bus_Master,6,0,2017-03-27 08:52:31+00:00,[],
1619,https://github.com/louay-hesham/SingleCycleMIPS.git,2017-04-16 12:52:05+00:00,Single Cycle MIPS processor simulation using SystemVerilog,0,louay-hesham/SingleCycleMIPS,88412955,SystemVerilog,SingleCycleMIPS,88,0,2021-04-01 04:55:59+00:00,[],
1620,https://github.com/Shantanu25/Bus-Arbiter.git,2017-04-15 02:53:45+00:00,Bidding arbiter,0,Shantanu25/Bus-Arbiter,88319294,SystemVerilog,Bus-Arbiter,339,0,2017-04-15 02:54:09+00:00,[],
1621,https://github.com/vmanja16/Digital_Designs.git,2017-04-16 15:40:31+00:00,A repository for various Digital Designs written in Hardware Description Languages.,0,vmanja16/Digital_Designs,88423380,SystemVerilog,Digital_Designs,2,0,2018-12-02 21:09:51+00:00,[],
1622,https://github.com/chetanrbb/SV_MIPS_Veloce_2.git,2017-03-11 10:48:11+00:00,,1,chetanrbb/SV_MIPS_Veloce_2,84642946,SystemVerilog,SV_MIPS_Veloce_2,85,0,2017-03-11 10:50:44+00:00,[],
1623,https://github.com/PulseRain/FP51_OCD.git,2017-07-17 06:18:48+00:00,Onchip debugger for FP51,3,PulseRain/FP51_OCD,97441641,SystemVerilog,FP51_OCD,34,0,2020-01-17 05:09:51+00:00,[],
1624,https://github.com/Dimitrov2005/FIFO-Test-UVM.git,2017-07-18 13:50:51+00:00,,1,Dimitrov2005/FIFO-Test-UVM,97603881,SystemVerilog,FIFO-Test-UVM,20,0,2017-07-24 15:31:57+00:00,[],
1625,https://github.com/MushroomZQ/verif_exe.git,2017-09-25 06:20:44+00:00,use a temp example to do the exercise,1,MushroomZQ/verif_exe,104710844,SystemVerilog,verif_exe,27,0,2017-09-25 06:23:22+00:00,[],
1626,https://github.com/prasadp4009/vhdlcodes.git,2017-10-02 08:19:59+00:00,Examples and Tutorials for vhdlcodes.com,0,prasadp4009/vhdlcodes,105512234,SystemVerilog,vhdlcodes,4,0,2017-10-02 08:32:23+00:00,[],
1627,https://github.com/RKishmar/labs.git,2017-05-25 07:08:04+00:00,,0,RKishmar/labs,92375593,SystemVerilog,labs,179,0,2020-11-11 20:15:56+00:00,[],
1628,https://github.com/christnp/mitysom_5csx_dev_board.git,2017-06-13 22:41:59+00:00,,0,christnp/mitysom_5csx_dev_board,94264638,SystemVerilog,mitysom_5csx_dev_board,2639,0,2017-06-13 22:42:33+00:00,[],
1629,https://github.com/Dimitrov2005/task1.git,2017-08-24 16:07:19+00:00,,0,Dimitrov2005/task1,101313989,SystemVerilog,task1,18,0,2017-08-24 16:08:09+00:00,[],
1630,https://github.com/dustinjhenderson/snek.git,2017-09-11 04:15:40+00:00,snek game,0,dustinjhenderson/snek,103089007,SystemVerilog,snek,6,0,2017-09-11 04:17:07+00:00,[],
1631,https://github.com/melt-umn/ableC-templating.git,2017-07-01 02:48:00+00:00,C++-inspired templates implemented as an ableC extension,0,melt-umn/ableC-templating,95937937,SystemVerilog,ableC-templating,195,0,2022-01-15 18:33:01+00:00,[],https://api.github.com/licenses/lgpl-3.0
1632,https://github.com/AbdoA2/MIPS_Single.git,2017-09-21 16:21:52+00:00,A single cycle 32-bit processor that implements MIPS architecture.,0,AbdoA2/MIPS_Single,104371557,SystemVerilog,MIPS_Single,176,0,2017-09-21 16:24:50+00:00,[],
1633,https://github.com/renanalboy/TrabalhosArquitetura.git,2017-07-01 03:17:40+00:00,,0,renanalboy/TrabalhosArquitetura,95939182,SystemVerilog,TrabalhosArquitetura,553,0,2017-10-05 12:44:21+00:00,[],
1634,https://github.com/ruthienguyen/test.git,2017-11-09 05:11:37+00:00,,0,ruthienguyen/test,110070193,SystemVerilog,test,2,0,2017-11-09 05:12:53+00:00,[],
1635,https://github.com/pulp-platform/axi.git,2018-04-12 09:47:20+00:00,AXI SystemVerilog synthesizable IP modules and verification infrastructure for high-performance on-chip communication,237,pulp-platform/axi,129229399,SystemVerilog,axi,8213,915,2024-04-13 14:23:41+00:00,"['axi', 'axi4', 'axi4-lite', 'systemverilog', 'hardware', 'network-on-chip', 'asic', 'fpga', 'rtl', 'ip']",
1636,https://github.com/hwayne/lets-prove-leftpad.git,2018-05-07 23:48:37+00:00,Proving leftpad correct in a dozen different ways,58,hwayne/lets-prove-leftpad,132528683,SystemVerilog,lets-prove-leftpad,474,614,2024-04-11 22:52:44+00:00,[],
1637,https://github.com/pulp-platform/common_cells.git,2018-01-24 12:49:56+00:00,Common SystemVerilog components,130,pulp-platform/common_cells,118764818,SystemVerilog,common_cells,833,428,2024-04-07 13:42:12+00:00,[],
1638,https://github.com/pulp-platform/pulp.git,2018-02-26 16:11:47+00:00,This is the top-level project for the PULP Platform. It instantiates a PULP open-source system with a PULP SoC (microcontroller) domain accelerated by a PULP cluster with 8 cores.,111,pulp-platform/pulp,122994841,SystemVerilog,pulp,8171,407,2024-04-11 15:17:16+00:00,[],
1639,https://github.com/pulp-platform/pulpissimo.git,2018-02-09 10:24:02+00:00,"This is the top-level project for the PULPissimo Platform. It instantiates a PULPissimo open-source system with a PULP SoC domain, but no cluster.",155,pulp-platform/pulpissimo,120891675,SystemVerilog,pulpissimo,9394,347,2024-04-12 22:06:28+00:00,[],
1640,https://github.com/RHSResearchLLC/NiteFury-and-LiteFury.git,2018-04-21 13:48:05+00:00,Public repository for Litefury & Nitefury,63,RHSResearchLLC/NiteFury-and-LiteFury,130477905,SystemVerilog,NiteFury-and-LiteFury,188298,239,2024-04-05 19:04:05+00:00,[],
1641,https://github.com/taichi-ishitani/tnoc.git,2017-12-12 14:43:45+00:00,Network on Chip Implementation written in SytemVerilog,40,taichi-ishitani/tnoc,114001819,SystemVerilog,tnoc,416,130,2024-04-04 12:04:31+00:00,"['noc', 'network-on-chip', 'systemverilog', 'amba', 'amba-axi', 'axi', 'axi4', 'uvm']",https://api.github.com/licenses/apache-2.0
1642,https://github.com/trivialmips/TrivialMIPS.git,2018-07-16 04:57:40+00:00,"MIPS32 CPU implemented in SystemVerilog, with superscalar and FPU support",30,trivialmips/TrivialMIPS,141088294,SystemVerilog,TrivialMIPS,88406,98,2024-03-28 12:23:22+00:00,"['systemverilog', 'mips', 'fpga', 'xilinx', 'cpu', 'fpga-soc']",
1643,https://github.com/gundy/tiny-synth.git,2018-07-30 12:45:02+00:00,Verilog code for a simple synth module; developed on TinyFPGA BX,9,gundy/tiny-synth,142874419,SystemVerilog,tiny-synth,376,94,2024-03-26 16:27:18+00:00,[],
1644,https://github.com/StefanSredojevic/Deep-Neural-Network-Hardware-Accelerator.git,2018-05-20 10:21:46+00:00,SystemVerilog HDL and TB code Deep Neural Network Hardware Accelerator implementation on zybo 7010 FPGA and also C code for Vivado SDK Software,45,StefanSredojevic/Deep-Neural-Network-Hardware-Accelerator,134140480,SystemVerilog,Deep-Neural-Network-Hardware-Accelerator,22545,93,2024-03-30 06:41:13+00:00,[],
1645,https://github.com/nelsoncsc/ISP_UVM.git,2017-11-26 15:05:22+00:00,A Framework for Design and Verification of Image Processing Applications using UVM,35,nelsoncsc/ISP_UVM,112092229,SystemVerilog,ISP_UVM,511,81,2024-03-21 13:43:31+00:00,"['functional-verification', 'systemverilog-hdl', 'uvm', 'systemc', 'image-processing', 'opencv', 'hardware-designs']",https://api.github.com/licenses/mit
1646,https://github.com/unixb0y/SystemVerilogSHA256.git,2018-02-04 16:08:16+00:00,SHA256 in (System-) Verilog / Open Source FPGA Miner,25,unixb0y/SystemVerilogSHA256,120200371,SystemVerilog,SystemVerilogSHA256,152,71,2024-04-02 10:36:45+00:00,"['sha256', 'verilog', 'systemverilog', 'bitcoin', 'mining', 'icarus-verilog', 'fpga']",https://api.github.com/licenses/gpl-3.0
1647,https://github.com/pulp-platform/pulp_soc.git,2018-02-08 14:10:24+00:00,pulp_soc is the core building component of PULP based SoCs,77,pulp-platform/pulp_soc,120769627,SystemVerilog,pulp_soc,1033,67,2024-04-11 13:55:31+00:00,"['pulp', 'riscv', 'systemverilog']",
1648,https://github.com/jerralph/riscv-vip.git,2018-05-23 23:26:26+00:00,"For pre-silicon developers of RISC-V systems, riscv-vip is a SystemVerilog project that helps with pre-si verification and debug",28,jerralph/riscv-vip,134635969,SystemVerilog,riscv-vip,376,50,2024-02-26 07:01:44+00:00,[],https://api.github.com/licenses/apache-2.0
1649,https://github.com/hyperreality/ctf-writeups.git,2018-07-22 22:36:41+00:00,Detailed writeups of how I solved infosec Capture The Flag (CTF) challenges,5,hyperreality/ctf-writeups,141935826,SystemVerilog,ctf-writeups,5080,50,2024-01-17 16:01:05+00:00,[],
1650,https://github.com/tymonx/virtio.git,2017-11-25 08:10:27+00:00,Virtio implementation in SystemVerilog,9,tymonx/virtio,111987504,SystemVerilog,virtio,46,44,2024-03-07 06:27:12+00:00,"['verilog', 'systemverilog', 'hdl', 'rtl', 'cmake', 'verilator', 'virtio', 'quartus', 'fpga', 'xilinx', 'vivado', 'model', 'systemc']",https://api.github.com/licenses/apache-2.0
1651,https://github.com/sgherbst/svreal.git,2018-06-28 22:21:32+00:00,"Synthesizable real number library in SystemVerilog, supporting both fixed- and floating-point formats",5,sgherbst/svreal,139073788,SystemVerilog,svreal,259,41,2024-03-23 06:12:55+00:00,"['verilog', 'systemverilog', 'fixed-point', 'floating-point', 'synthesizable', 'synthesis', 'simulation', 'vivado', 'xcelium', 'icarus-verilog', 'iverilog', 'xrun', 'irun', 'ncsim', 'vcs', 'icarus', 'verilator']",https://api.github.com/licenses/mit
1652,https://github.com/pulp-platform/pulp_cluster.git,2018-02-26 16:05:41+00:00,The multi-core cluster of a PULP system.,17,pulp-platform/pulp_cluster,122994097,SystemVerilog,pulp_cluster,5975,37,2024-04-12 17:42:23+00:00,[],
1653,https://github.com/Harry-Chen/fpga-virtual-console.git,2018-06-05 09:42:24+00:00,VT220-compatible console on Cyclone IV EP4CE55F23I7,9,Harry-Chen/fpga-virtual-console,136155288,SystemVerilog,fpga-virtual-console,4411,37,2024-02-04 15:18:43+00:00,"['fpga', 'console', 'terminal', 'vt220', 'xterm-256color', 'systemverilog', 'terminal-emulator', 'vt100', 'vt102', 'vt200', 'keyboard']",https://api.github.com/licenses/gpl-3.0
1654,https://github.com/gvekony/sv-1800-2012.git,2018-02-23 10:28:41+00:00,"IEEE Std 1800™-2012: IEEE Standard for SystemVerilog -- Unified Hardware Design, Specification, and Verification Language syntax definition for VS Code",11,gvekony/sv-1800-2012,122607123,SystemVerilog,sv-1800-2012,2262,31,2024-03-29 13:54:04+00:00,[],https://api.github.com/licenses/mit
1655,https://github.com/pulp-platform/axi_mem_if.git,2018-02-05 11:52:18+00:00,Simple single-port AXI memory interface,23,pulp-platform/axi_mem_if,120298202,SystemVerilog,axi_mem_if,64,30,2024-03-31 14:12:10+00:00,"['axi', 'systemverilog-hdl', 'asic', 'fpga']",
1656,https://github.com/pulp-platform/tech_cells_generic.git,2018-01-24 12:50:42+00:00,"Technology dependent cells instantiated in the design for generic process (simulation, FPGA)",26,pulp-platform/tech_cells_generic,118764920,SystemVerilog,tech_cells_generic,129,28,2024-03-31 14:12:09+00:00,[],
1657,https://github.com/EEESlab/combinational-bnn.git,2018-07-06 06:39:32+00:00,System Verilog code describing a fully combinational binarized neural network.,15,EEESlab/combinational-bnn,139943677,SystemVerilog,combinational-bnn,119,27,2024-01-31 05:13:54+00:00,"['bnn', 'binary-neural-networks', 'combinational']",
1658,https://github.com/flyskywalker/ahb_sramc.git,2018-06-16 12:34:39+00:00,"ahb scram controller, design and verification",10,flyskywalker/ahb_sramc,137579410,SystemVerilog,ahb_sramc,9,24,2024-01-25 02:01:53+00:00,[],
1659,https://github.com/hellgate202/csi2_rx.git,2018-08-14 13:25:12+00:00,MIPI CSI-2 RX,9,hellgate202/csi2_rx,144723694,SystemVerilog,csi2_rx,10327,24,2023-12-08 10:43:04+00:00,[],https://api.github.com/licenses/gpl-3.0
1660,https://github.com/pulp-platform/uvm-components.git,2018-02-05 11:46:43+00:00,"Contains commonly used UVM components (agents, environments and tests).",15,pulp-platform/uvm-components,120297727,SystemVerilog,uvm-components,463,24,2024-03-15 08:19:19+00:00,"['uvm', 'systemverilog-hdl']",
1661,https://github.com/xerpi/tiny5.git,2018-03-28 09:29:29+00:00,"RISC-V Processor Implementation (RV32IM, TileLink-UL)",4,xerpi/tiny5,127116928,SystemVerilog,tiny5,122,21,2024-03-05 12:03:29+00:00,[],https://api.github.com/licenses/mit
1662,https://github.com/hildebrandmw/de10lite-hdl.git,2018-02-12 17:40:08+00:00,Verilog for interacting with components of the DE10-Lite board.,4,hildebrandmw/de10lite-hdl,121279686,SystemVerilog,de10lite-hdl,4835,21,2024-03-07 20:37:38+00:00,[],https://api.github.com/licenses/mit
1663,https://github.com/tianrenz2/Single-Cycle-Processor.git,2018-03-02 23:01:28+00:00,Single-Cycle RISC-V Processor in systemverylog,4,tianrenz2/Single-Cycle-Processor,123639817,SystemVerilog,Single-Cycle-Processor,1116,19,2024-03-06 07:01:58+00:00,"['systemverilog', 'modelsim', 'verification']",
1664,https://github.com/NetTLP/adapter.git,2018-06-18 03:08:23+00:00,An FPGA-based NetTLP adapter ,3,NetTLP/adapter,137705272,SystemVerilog,adapter,296,19,2023-11-23 19:54:27+00:00,[],
1665,https://github.com/fpga-soc/mil-std-1553b-soc.git,2018-01-21 11:19:52+00:00,development interface mil-std-1553b for system on chip,12,fpga-soc/mil-std-1553b-soc,118328019,SystemVerilog,mil-std-1553b-soc,518,18,2024-04-06 14:15:35+00:00,[],
1666,https://github.com/fpgasystems/dma-driver.git,2018-06-12 11:31:42+00:00,,8,fpgasystems/dma-driver,137062340,SystemVerilog,dma-driver,4809,17,2024-04-13 16:33:04+00:00,[],
1667,https://github.com/tej-chavan/Design-and-Verification-of-DDR3-Memory-Controller.git,2018-03-24 09:05:50+00:00,The memory model was leveraged from micron. ,12,tej-chavan/Design-and-Verification-of-DDR3-Memory-Controller,126582713,SystemVerilog,Design-and-Verification-of-DDR3-Memory-Controller,1123,17,2024-04-05 07:43:59+00:00,[],
1668,https://github.com/pulp-platform/hwpe-stream.git,2018-02-02 12:18:00+00:00,IPs for data-plane integration of Hardware Processing Engines (HWPEs) within a PULP system,14,pulp-platform/hwpe-stream,119978080,SystemVerilog,hwpe-stream,2131,16,2024-03-06 18:23:57+00:00,[],
1669,https://github.com/nelsoncsc/FFT.git,2018-02-28 17:36:37+00:00,Hardware implementation of a Fixed Point Recursive Forward and Inverse FFT algorithm,3,nelsoncsc/FFT,123319293,SystemVerilog,FFT,4,15,2024-03-28 02:26:14+00:00,"['fft', 'ifft', 'hardware-designs', 'matlab', 'octave', 'systemverilog', 'recursive-algorithm']",
1670,https://github.com/ljhsiun2/EllipticCurves_SystemVerilog.git,2017-12-18 00:47:00+00:00,Elgamal's over Elliptic Curves,4,ljhsiun2/EllipticCurves_SystemVerilog,114580064,SystemVerilog,EllipticCurves_SystemVerilog,25666,14,2024-01-02 16:56:57+00:00,[],
1671,https://github.com/fpgasystems/DecisionTrees.git,2018-04-13 05:59:07+00:00,Decision Trees Inference,12,fpgasystems/DecisionTrees,129354901,SystemVerilog,DecisionTrees,41,14,2022-11-03 09:28:39+00:00,[],https://api.github.com/licenses/gpl-3.0
1672,https://github.com/alice820621/A-UVM-verification-for-DAC-and-ADC-model-with-APB-BFM.git,2018-07-06 23:42:54+00:00,"A UVM verification with a APB BFM (Bus functional model), connected to two write-only DAC and two read-only ADC slaves. The sequence generates addresses and allows the driver to tell the BFM which slave to choose. Subsequently four monitors and scoreboards record each slave’s test results.",2,alice820621/A-UVM-verification-for-DAC-and-ADC-model-with-APB-BFM,140038650,SystemVerilog,A-UVM-verification-for-DAC-and-ADC-model-with-APB-BFM,45,14,2024-03-21 22:18:18+00:00,[],
1673,https://github.com/pulp-platform/trace_debugger.git,2018-06-21 17:23:15+00:00,Capture retired instructions of a RISC-V Core and compress them to a sequence of packets.,6,pulp-platform/trace_debugger,138201504,SystemVerilog,trace_debugger,7199,13,2024-03-18 04:13:14+00:00,"['debugging-tool', 'risc-v', 'system-verilog', 'instruction-trace']",
1674,https://github.com/MiSTer-devel/C16_MiSTer.git,2018-05-02 10:38:50+00:00,Commodore C16 and Plus/4 for MiSTer,10,MiSTer-devel/C16_MiSTer,131836293,SystemVerilog,C16_MiSTer,31053,13,2024-04-13 20:00:13+00:00,[],
1675,https://github.com/briandong/regModel.git,2018-03-13 01:24:55+00:00,"This script builds the UVM register model, based on pre-defined address map in markdown (mk) style",4,briandong/regModel,124973502,SystemVerilog,regModel,43,12,2023-08-02 05:56:50+00:00,"['ruby', 'markdown', 'uvm', 'register', 'model']",
1676,https://github.com/flasonil/Serial-Multiplier.git,2018-06-19 10:19:04+00:00,16 bit serial multiplier in SystemVerilog,5,flasonil/Serial-Multiplier,137875506,SystemVerilog,Serial-Multiplier,169,11,2024-03-11 09:56:36+00:00,"['verilog', 'verilog-project', 'systemverilog', 'system-verilog']",
1677,https://github.com/pulp-platform/apb.git,2018-04-12 09:53:25+00:00,APB Logic,8,pulp-platform/apb,129230228,SystemVerilog,apb,109,11,2024-04-05 18:49:36+00:00,[],
1678,https://github.com/hotwolf/WbXbc.git,2018-07-31 20:50:56+00:00,HDL components to build a customized Wishbone crossbar switch ,2,hotwolf/WbXbc,143067258,SystemVerilog,WbXbc,1694,11,2024-01-19 06:10:29+00:00,"['verilog', 'hdl', 'wishbone', 'crossbar']",
1679,https://github.com/tom01h/zero-riscy.git,2017-11-29 15:30:46+00:00,zero-riscy CPU Core,3,tom01h/zero-riscy,112492818,SystemVerilog,zero-riscy,1304,10,2024-03-08 00:03:49+00:00,[],
1680,https://github.com/mediaic/VLSI_Lab2.git,2018-07-02 09:04:24+00:00,RTL + Verfication + Synthesis + APR,0,mediaic/VLSI_Lab2,139418147,SystemVerilog,VLSI_Lab2,791,10,2023-08-23 20:18:35+00:00,[],
1681,https://github.com/stephanosio/BPSKModem.git,2018-06-25 02:24:44+00:00,Binary Phase Shift Keying (BPSK) Modem,1,stephanosio/BPSKModem,138533749,SystemVerilog,BPSKModem,22,10,2024-03-26 17:38:37+00:00,[],
1682,https://github.com/HunterBitos/Implementation-of-AMBA-AXI3-protocol.git,2018-06-13 14:31:40+00:00,Design and verify the AMBA AXI protocol with single master-slave from scratch in System Verilog. Debugging the design using both a System Verilog simulator and the Mentor Graphics Veloce hardware emulator.,9,HunterBitos/Implementation-of-AMBA-AXI3-protocol,137227480,SystemVerilog,Implementation-of-AMBA-AXI3-protocol,4035,8,2024-03-20 01:24:35+00:00,[],
1683,https://github.com/pulp-platform/udma_core.git,2018-01-24 12:54:46+00:00,,14,pulp-platform/udma_core,118765423,SystemVerilog,udma_core,1078,8,2024-03-19 22:48:34+00:00,[],
1684,https://github.com/pulp-platform/hwpe-mac-engine.git,2018-02-02 14:37:51+00:00,An example Hardware Processing Engine,12,pulp-platform/hwpe-mac-engine,119992463,SystemVerilog,hwpe-mac-engine,40,8,2023-07-25 14:14:43+00:00,[],
1685,https://github.com/jeras/rp32.git,2018-08-15 13:03:30+00:00,RISC-V processor with CPI=1 (every single instruction executed in a single clock cycle).,3,jeras/rp32,144853832,SystemVerilog,rp32,926,8,2024-03-21 21:58:01+00:00,"['asic', 'fpga', 'risc-v', 'riscv', 'systemverilog']",https://api.github.com/licenses/apache-2.0
1686,https://github.com/lewis262626/FPGABreakout.git,2018-01-10 23:04:01+00:00,ES3B2 Breakout/Pong clone,0,lewis262626/FPGABreakout,117021733,SystemVerilog,FPGABreakout,91,8,2019-07-16 19:59:11+00:00,[],https://api.github.com/licenses/gpl-2.0
1687,https://github.com/flasonil/APB_PWM.git,2018-05-15 19:39:28+00:00,Pulse Width Modulator programmed through an Advanced Peripheral Bus interface,1,flasonil/APB_PWM,133564746,SystemVerilog,APB_PWM,3,7,2021-07-03 16:23:57+00:00,"['system-verilog', 'verilog']",
1688,https://github.com/sriramvb/DDR4-Memory-Controller.git,2018-03-22 01:55:20+00:00,,9,sriramvb/DDR4-Memory-Controller,126264646,SystemVerilog,DDR4-Memory-Controller,398,7,2023-05-20 08:01:49+00:00,[],
1689,https://github.com/SalomeDevkule7/Neural-Network-Layer-Generator.git,2018-06-07 19:49:46+00:00,Application Specific Integrated Circuit(ASIC),3,SalomeDevkule7/Neural-Network-Layer-Generator,136523930,SystemVerilog,Neural-Network-Layer-Generator,130,7,2022-06-02 07:51:55+00:00,"['systemverilog-hdl', 'vlsi', 'neural-networks', 'asic-verification']",
1690,https://github.com/cheimu/4Issue-7Stage-OutOfOrder-Superscalar-RISCV-CPU-ArianeBased.git,2018-05-14 20:20:29+00:00,,2,cheimu/4Issue-7Stage-OutOfOrder-Superscalar-RISCV-CPU-ArianeBased,133416794,SystemVerilog,4Issue-7Stage-OutOfOrder-Superscalar-RISCV-CPU-ArianeBased,3016,7,2023-05-14 09:48:47+00:00,[],
1691,https://github.com/afiskon/fpga-ssd1306-to-vga.git,2018-03-21 18:05:22+00:00,ICE40 FPGA configuration: SSD1306 to VGA converter,2,afiskon/fpga-ssd1306-to-vga,126220840,SystemVerilog,fpga-ssd1306-to-vga,20,6,2022-12-25 02:04:37+00:00,[],https://api.github.com/licenses/gpl-3.0
1692,https://github.com/kariannekk/Portable-Stimulus.git,2018-06-08 07:51:04+00:00,,4,kariannekk/Portable-Stimulus,136585829,SystemVerilog,Portable-Stimulus,45,6,2024-02-16 07:01:21+00:00,[],
1693,https://github.com/Harrypotterrrr/mips-CPU54.git,2018-07-27 16:00:32+00:00,The project is the final target for Computer composition class of Department of Computer science in Tongji Univerity,1,Harrypotterrrr/mips-CPU54,142597587,SystemVerilog,mips-CPU54,607,6,2023-07-29 11:52:41+00:00,[],
1694,https://github.com/GkyHub/fpga_cnn_train.git,2018-03-15 10:07:52+00:00,,4,GkyHub/fpga_cnn_train,125348244,SystemVerilog,fpga_cnn_train,880,6,2023-03-06 13:00:10+00:00,[],
1696,https://github.com/gyurco/ZX8X_MiST.git,2018-08-15 15:52:25+00:00,ZX80-ZX81 core for the MiST board,5,gyurco/ZX8X_MiST,144873329,SystemVerilog,ZX8X_MiST,729,6,2024-04-12 09:09:42+00:00,[],https://api.github.com/licenses/gpl-2.0
1697,https://github.com/Csuk0914/dnn-rtl.git,2018-06-26 11:31:48+00:00,Verilog RTL Implementation of DNN,2,Csuk0914/dnn-rtl,138728755,SystemVerilog,dnn-rtl,126291,6,2023-10-03 17:47:37+00:00,[],
1698,https://github.com/victoresque/DCLab.git,2018-01-26 14:46:55+00:00,Digital Circuits Lab (2017 Spring) @ National Taiwan University,0,victoresque/DCLab,119063130,SystemVerilog,DCLab,4808,6,2023-05-14 08:34:46+00:00,[],
1699,https://github.com/rajkumarraval/i2c_wb_sv_uvm.git,2018-08-19 17:26:58+00:00,,4,rajkumarraval/i2c_wb_sv_uvm,145323811,SystemVerilog,i2c_wb_sv_uvm,35,6,2023-06-19 06:25:58+00:00,[],
1700,https://github.com/pulp-platform/hwpe-ctrl.git,2018-02-02 12:27:15+00:00,IPs for control-plane integration of Hardware Processing Engines (HWPEs) within a PULP system,14,pulp-platform/hwpe-ctrl,119978897,SystemVerilog,hwpe-ctrl,118,6,2024-02-04 21:28:03+00:00,[],
1701,https://github.com/pulp-platform/udma_qspi.git,2018-01-24 12:55:27+00:00,,10,pulp-platform/udma_qspi,118765510,SystemVerilog,udma_qspi,147,5,2022-09-12 22:08:06+00:00,[],
1702,https://github.com/jomonkjoy/CDC_FIFO_Design.git,2017-12-13 18:35:04+00:00,Multi-bit Synchronization across Clock Domains,3,jomonkjoy/CDC_FIFO_Design,114155727,SystemVerilog,CDC_FIFO_Design,44,5,2023-07-28 01:44:43+00:00,[],https://api.github.com/licenses/gpl-3.0
1703,https://github.com/afiskon/fpga-vga.git,2018-02-24 12:24:33+00:00,Generating video signal over VGA using iCEstick,1,afiskon/fpga-vga,122738350,SystemVerilog,fpga-vga,5,5,2021-08-06 15:28:22+00:00,[],https://api.github.com/licenses/mit
1704,https://github.com/basilwong/FPGA-ARC4-cracker.git,2018-05-22 01:36:48+00:00,ARC4 Encryption/Decryption Lab,4,basilwong/FPGA-ARC4-cracker,134344614,SystemVerilog,FPGA-ARC4-cracker,28996,5,2024-02-20 13:09:40+00:00,[],
1705,https://github.com/sanjeevs/srm_sap.git,2017-11-30 11:55:18+00:00,Simple as possible demo using simple_reg_model,3,sanjeevs/srm_sap,112605897,SystemVerilog,srm_sap,708,5,2022-06-08 02:40:05+00:00,[],https://api.github.com/licenses/mit
1706,https://github.com/RW9UAO/zx-spectrum48-fpga-xilinx.git,2018-06-06 08:30:04+00:00,zx spectrum48 fpga xilinx,2,RW9UAO/zx-spectrum48-fpga-xilinx,136297759,SystemVerilog,zx-spectrum48-fpga-xilinx,20820,5,2022-12-01 15:58:16+00:00,[],
1707,https://github.com/PRETgroup/easy-rte.git,2018-06-22 02:46:30+00:00,Toolchain to automatically generate and verify HW or SW runtime enforcers from text-based framework,4,PRETgroup/easy-rte,138246449,SystemVerilog,easy-rte,1271,5,2024-03-12 13:32:59+00:00,[],https://api.github.com/licenses/mit
1708,https://github.com/pulp-platform/axi2mem.git,2018-02-26 15:53:39+00:00,,6,pulp-platform/axi2mem,122992611,SystemVerilog,axi2mem,56,5,2023-10-08 09:03:42+00:00,[],
1709,https://github.com/AdahilMuniz/SOIN-RV.git,2018-06-03 22:59:01+00:00,,0,AdahilMuniz/SOIN-RV,135947149,SystemVerilog,SOIN-RV,1647,5,2023-04-18 16:21:28+00:00,[],
1710,https://github.com/mafull/picomips-assignment.git,2018-03-26 16:00:46+00:00,ELEC6234 - Embedded Processor Synthesis assignment,1,mafull/picomips-assignment,126854062,SystemVerilog,picomips-assignment,24845,5,2024-04-11 10:30:55+00:00,[],
1711,https://github.com/pulp-platform/fpga-support.git,2018-07-24 11:20:38+00:00,"IP Blocks to Support Design, Prototyping, and Verification of PULP on FPGAs",9,pulp-platform/fpga-support,142148186,SystemVerilog,fpga-support,113,4,2023-07-25 14:18:43+00:00,[],
1712,https://github.com/ibreakoutx/sv-uvm.git,2018-04-12 14:52:14+00:00,,1,ibreakoutx/sv-uvm,129267504,SystemVerilog,sv-uvm,3698,4,2023-03-14 01:40:09+00:00,[],
1713,https://github.com/Richard-Harvey-UCSD/FIR-Filter.git,2018-04-01 16:47:20+00:00,"Bandpass filter that passes 35-200Hz, which uses a MatLab script to determine the correct coefficients by writing two modules. One computes the FIR filter output and the other instantiates the FIR filter with SSE module.",0,Richard-Harvey-UCSD/FIR-Filter,127651110,SystemVerilog,FIR-Filter,73,4,2022-08-26 17:18:14+00:00,[],
1714,https://github.com/joselcuevam/timer.git,2018-07-06 00:28:50+00:00,Timer implemented in verilog,1,joselcuevam/timer,139913994,SystemVerilog,timer,751,4,2022-05-01 20:48:01+00:00,[],
1715,https://github.com/pulp-platform/apb_interrupt_cntrl.git,2018-01-24 12:49:07+00:00,Small and simple APB interrupt controller,7,pulp-platform/apb_interrupt_cntrl,118764719,SystemVerilog,apb_interrupt_cntrl,37,4,2023-11-05 05:11:37+00:00,[],
1716,https://github.com/Terminatorjjjjj/NTUEE-DCLAB-Materials.git,2018-02-22 02:13:06+00:00,This repo is the lab materials for NTUEE DCLAB (http://dclab.ee.ntu.edu.tw).,5,Terminatorjjjjj/NTUEE-DCLAB-Materials,122419443,SystemVerilog,NTUEE-DCLAB-Materials,67,4,2023-04-02 20:54:35+00:00,['altera-fpga'],
1717,https://github.com/oliviercotte/Arbiter.git,2018-01-20 11:08:33+00:00,Round-robin arbiter verification in SystemVerilog,3,oliviercotte/Arbiter,118235252,SystemVerilog,Arbiter,9,4,2023-06-19 08:18:59+00:00,"['round-robin', 'round-robin-scheduler', 'arbiter', 'verification', 'universal-verification-methodology', 'open-verification-methodology']",https://api.github.com/licenses/mit
1718,https://github.com/Alexnorvag/spi_vip_uvm.git,2018-01-10 00:00:42+00:00,,1,Alexnorvag/spi_vip_uvm,116885024,SystemVerilog,spi_vip_uvm,7,4,2022-10-11 13:31:43+00:00,[],
1719,https://github.com/pulp-platform/udma_sdio.git,2018-02-02 16:40:03+00:00,,7,pulp-platform/udma_sdio,120005812,SystemVerilog,udma_sdio,160,4,2024-01-17 06:19:30+00:00,[],
1720,https://github.com/pulp-platform/axi_rab.git,2018-07-24 11:41:34+00:00,⛔ DEPRECATED ⛔ AXI Remapping Address Block: A software-managed I/O memory management unit for HERO,2,pulp-platform/axi_rab,142150318,SystemVerilog,axi_rab,693,4,2023-03-12 16:06:06+00:00,[],
1721,https://github.com/WillQvQ/MIPS_V2.0.git,2018-05-06 14:47:56+00:00,Let's go on multicycle processor~,0,WillQvQ/MIPS_V2.0,132347864,SystemVerilog,MIPS_V2.0,1020,4,2022-05-01 05:27:22+00:00,[],
1722,https://github.com/robfpga/weighted_round_robin.git,2018-04-01 22:41:52+00:00,SystemVerilog implementation of a Dynamically Weighted Round Robin arbiter,2,robfpga/weighted_round_robin,127677279,SystemVerilog,weighted_round_robin,34,4,2023-06-19 08:19:12+00:00,[],https://api.github.com/licenses/gpl-3.0
1723,https://github.com/quinnwerks/JSONPacketParser.git,2018-07-06 18:13:46+00:00,,0,quinnwerks/JSONPacketParser,140017066,SystemVerilog,JSONPacketParser,191,4,2020-12-09 13:23:49+00:00,[],https://api.github.com/licenses/mit
1724,https://github.com/pulp-platform/udma_uart.git,2018-01-24 12:55:09+00:00,,10,pulp-platform/udma_uart,118765473,SystemVerilog,udma_uart,176,4,2024-02-13 03:43:12+00:00,[],
1725,https://github.com/yifax/RISC-V-PipeLine.git,2018-03-23 23:10:26+00:00,SystemVerilog realization of RISC-V processor,4,yifax/RISC-V-PipeLine,126547521,SystemVerilog,RISC-V-PipeLine,2357,4,2023-06-15 16:51:48+00:00,[],https://api.github.com/licenses/mit
1726,https://github.com/alonsorb/ddr-ram-controller-mig.git,2018-06-15 16:12:29+00:00,DDR SDRAM Controller based on Xilinx MIG for Digilent Boards,2,alonsorb/ddr-ram-controller-mig,137508345,SystemVerilog,ddr-ram-controller-mig,1548,4,2021-10-27 12:05:05+00:00,[],https://api.github.com/licenses/gpl-3.0
1727,https://github.com/WillQvQ/MIPS_V3.1.git,2018-05-22 03:42:28+00:00,Pipeline MIPS64,1,WillQvQ/MIPS_V3.1,134356923,SystemVerilog,MIPS_V3.1,2713,4,2022-04-12 12:27:54+00:00,[],
1728,https://github.com/pulp-platform/udma_i2s.git,2018-01-24 12:56:21+00:00,,11,pulp-platform/udma_i2s,118765612,SystemVerilog,udma_i2s,105,4,2023-08-28 06:58:56+00:00,[],
1729,https://github.com/Aceralon/ClockOnBasys3.git,2017-12-14 04:34:48+00:00,Clock On Basys3 with multiple functions,0,Aceralon/ClockOnBasys3,114202839,SystemVerilog,ClockOnBasys3,19,3,2021-11-02 08:20:55+00:00,[],
1730,https://github.com/mitvmorabia/DDR3-Memory-Controller.git,2018-04-09 21:50:38+00:00,Design of memory controller for 1 GB DDR3 SDRAM based on specifications provided in Micron Specification Sheet,2,mitvmorabia/DDR3-Memory-Controller,128837922,SystemVerilog,DDR3-Memory-Controller,7,3,2021-05-16 23:22:03+00:00,[],
1731,https://github.com/pulp-platform/udma_camera.git,2018-01-24 12:56:37+00:00,,7,pulp-platform/udma_camera,118765640,SystemVerilog,udma_camera,135,3,2023-07-25 14:14:30+00:00,[],
1732,https://github.com/pulp-platform/udma_filter.git,2018-06-28 08:14:08+00:00,A uDMA peripheral to allow memory to memory transfers and linear algebra operations,7,pulp-platform/udma_filter,138987700,SystemVerilog,udma_filter,46,3,2023-07-25 14:18:09+00:00,[],
1733,https://github.com/charlierkj/Advanced-Digital-Design.git,2018-05-18 08:13:16+00:00,Bitcoin Hashing (course projects for UCSD-ECE111),1,charlierkj/Advanced-Digital-Design,133924379,SystemVerilog,Advanced-Digital-Design,1179485,3,2024-01-25 09:23:27+00:00,[],
1734,https://github.com/jpdoane/jpu.git,2018-01-20 01:57:34+00:00,32bit CPU,0,jpdoane/jpu,118199104,SystemVerilog,jpu,445,3,2023-07-25 07:09:35+00:00,[],
1735,https://github.com/m1a1x1/bloom-filter.git,2018-04-07 12:23:34+00:00,SystemVerilog IP-core of highly parametrized Bloom-filter implementation on internal memory,0,m1a1x1/bloom-filter,128525865,SystemVerilog,bloom-filter,89,3,2023-07-31 15:12:46+00:00,['fpga'],
1736,https://github.com/tudortimi/constraints.git,2018-04-01 09:44:17+00:00,Reusable constraints,1,tudortimi/constraints,127616409,SystemVerilog,constraints,26,3,2023-08-28 17:30:08+00:00,[],https://api.github.com/licenses/apache-2.0
1737,https://github.com/lvandam/posit_arith_hdl.git,2018-06-28 11:23:28+00:00,Posit HDL Arithmetic Framework optimized for Decimal Accuracy,1,lvandam/posit_arith_hdl,139008644,SystemVerilog,posit_arith_hdl,9504,3,2024-03-15 02:56:53+00:00,[],https://api.github.com/licenses/apache-2.0
1738,https://github.com/yangm2/verilator-example.git,2017-12-03 04:41:42+00:00,Example of using various technologies together in a Verilator simulation,1,yangm2/verilator-example,112900488,SystemVerilog,verilator-example,24,3,2023-12-06 06:39:07+00:00,[],
1739,https://github.com/SvrAdityaReddy/Inter_Device_Communication_Protocols.git,2018-02-03 18:31:08+00:00,Verilog Codes of various Inter Device Communication Protocols,1,SvrAdityaReddy/Inter_Device_Communication_Protocols,120118292,SystemVerilog,Inter_Device_Communication_Protocols,386,3,2022-03-31 18:07:04+00:00,"['systemverilog-hdl', 'verilog-hdl']",
1740,https://github.com/taoliug/riscv-dv.git,2018-07-14 03:35:40+00:00,,0,taoliug/riscv-dv,140913187,SystemVerilog,riscv-dv,730,3,2024-01-13 22:09:14+00:00,[],https://api.github.com/licenses/apache-2.0
1741,https://github.com/manoharbandaru/arbiter_testbench.git,2018-06-27 01:53:26+00:00,UVM testbench for a simple arbiter,0,manoharbandaru/arbiter_testbench,138815788,SystemVerilog,arbiter_testbench,11,3,2023-09-13 06:38:58+00:00,[],
1742,https://github.com/jiegec/learn-verilog.git,2018-06-21 14:50:56+00:00,,0,jiegec/learn-verilog,138184512,SystemVerilog,learn-verilog,1425,3,2022-10-27 08:55:09+00:00,[],
1743,https://github.com/naisila/GameOfCodes.git,2018-04-02 17:19:01+00:00,Find the correct sequence of characters by looking at stepper motor moves!,0,naisila/GameOfCodes,127788021,SystemVerilog,GameOfCodes,4138,3,2020-11-18 09:14:46+00:00,[],https://api.github.com/licenses/mit
1744,https://github.com/pulp-platform/axi2per.git,2018-02-05 12:03:30+00:00,AXI to Peripheral Interconnect,1,pulp-platform/axi2per,120299310,SystemVerilog,axi2per,37,3,2024-01-19 19:24:00+00:00,"['axi', 'systemverilog-hdl', 'fpga', 'asic']",
1745,https://github.com/pulp-platform/scm.git,2018-01-24 12:53:08+00:00,,5,pulp-platform/scm,118765233,SystemVerilog,scm,75,3,2024-03-31 14:12:10+00:00,[],
1746,https://github.com/cristian-mattarei/CoSA-models.git,2018-05-10 17:03:14+00:00,,0,cristian-mattarei/CoSA-models,132930549,SystemVerilog,CoSA-models,7897,3,2021-11-30 18:11:22+00:00,[],
1747,https://github.com/salilkapur/AES.git,2018-01-30 05:52:35+00:00,AES implementation in Verilog,1,salilkapur/AES,119489207,SystemVerilog,AES,938,2,2020-01-04 23:45:02+00:00,[],
1748,https://github.com/tudortimi/tgen.git,2018-01-10 21:01:30+00:00,Test list generator,1,tudortimi/tgen,117010366,SystemVerilog,tgen,94,2,2022-04-09 15:22:56+00:00,[],https://api.github.com/licenses/apache-2.0
1749,https://github.com/pulp-platform/icache-intc.git,2018-02-26 16:03:22+00:00,,2,pulp-platform/icache-intc,122993809,SystemVerilog,icache-intc,19,2,2023-10-31 20:42:52+00:00,[],
1750,https://github.com/Karthik4293/Design-and-Implementation-of-CELL-SPU-lite-processor.git,2018-06-15 01:52:45+00:00,This project implements the behavioral model SPU-lite multimedia processor in System Verilog.,0,Karthik4293/Design-and-Implementation-of-CELL-SPU-lite-processor,137428609,SystemVerilog,Design-and-Implementation-of-CELL-SPU-lite-processor,3226,2,2023-11-18 02:49:49+00:00,[],
1751,https://github.com/mhazizian/Computer-Architecture-CA-2.git,2018-03-28 06:16:05+00:00,,0,mhazizian/Computer-Architecture-CA-2,127092821,SystemVerilog,Computer-Architecture-CA-2,94,2,2018-05-25 16:46:15+00:00,"['verilog', 'mips', 'mips-architecture']",
1752,https://github.com/suhasr1991/Veriification-of-LCD-Controller-Design.git,2018-03-05 04:38:15+00:00,A project on UVM to verify the functionality of LCD controller design. A UVM testbench was created from scratch. AHB master/slave agents created to get the data in memory for LCD controller to access the data. Monitors and scoreboards were created to compare the data from LCDVD output to expected output in a file. Also wrote a logic to compare the number of cycles between two frame pulses with the expected number of cycles in a file. This was done such that the frame is received in the two frame pulses.,0,suhasr1991/Veriification-of-LCD-Controller-Design,123865345,SystemVerilog,Veriification-of-LCD-Controller-Design,6210,2,2022-02-18 15:47:33+00:00,[],
1753,https://github.com/systemVerilogExtractor/exampleProjects.git,2018-03-30 00:30:06+00:00,,0,systemVerilogExtractor/exampleProjects,127361292,SystemVerilog,exampleProjects,10140,2,2022-03-03 12:56:50+00:00,[],
1754,https://github.com/amamory-verification/vfsd-utopia.git,2018-05-08 14:58:36+00:00,ATM-Utopia module and testbench.,5,amamory-verification/vfsd-utopia,132625040,SystemVerilog,vfsd-utopia,42008,2,2022-12-16 11:31:16+00:00,"['verification-methodologies', 'systemverilog', 'uvm', 'utopia']",https://api.github.com/licenses/mit
1755,https://github.com/afiskon/tinyfpga-b2-first-project.git,2017-12-15 19:43:09+00:00,First project based on TinyFPGA B2,2,afiskon/tinyfpga-b2-first-project,114405695,SystemVerilog,tinyfpga-b2-first-project,4,2,2018-05-21 05:10:43+00:00,[],https://api.github.com/licenses/mit
1756,https://github.com/halferty/my_awesome_6800.git,2018-06-02 03:56:07+00:00,A CPU in Verilog which can run Motorola MC6800 instructions,1,halferty/my_awesome_6800,135785506,SystemVerilog,my_awesome_6800,26,2,2021-11-04 23:27:55+00:00,[],https://api.github.com/licenses/gpl-3.0
1757,https://github.com/suyashmahar/urisc.git,2018-02-23 05:39:21+00:00,Single instruction processor and toolchain,0,suyashmahar/urisc,122578220,SystemVerilog,urisc,93,2,2022-09-02 23:27:33+00:00,"['urisc', 'systemverilog', 'processor-architecture', 'fpga']",
1758,https://github.com/lexgolovchenko/avmm-lvds-bridge.git,2018-05-05 13:08:06+00:00,Cores for transfer Avalon-MM transaction through LVDS SERDES interface,0,lexgolovchenko/avmm-lvds-bridge,132248892,SystemVerilog,avmm-lvds-bridge,116,2,2023-10-20 08:30:50+00:00,[],
1759,https://github.com/alrubha/VLSI.git,2018-06-13 23:44:21+00:00,System verilog assignments for vlsi design class at Oregon State University,0,alrubha/VLSI,137283220,SystemVerilog,VLSI,16,2,2023-07-25 08:21:11+00:00,[],
1760,https://github.com/JP3BGY/Crypto_in_FPGA.git,2018-08-02 02:15:26+00:00,,1,JP3BGY/Crypto_in_FPGA,143230497,SystemVerilog,Crypto_in_FPGA,73,2,2020-04-17 06:01:55+00:00,[],https://api.github.com/licenses/gpl-3.0
1761,https://github.com/zxbdlv/Volunteer2.git,2017-12-28 01:30:04+00:00,DDR3 controller,4,zxbdlv/Volunteer2,115571846,SystemVerilog,Volunteer2,232,2,2021-09-22 06:31:27+00:00,[],
1762,https://github.com/cevero/cevero.git,2018-03-05 18:24:01+00:00,Chip multi-procEssor for Very Energy-efficient aeRospace missiOns,1,cevero/cevero,123960431,SystemVerilog,cevero,466,2,2021-11-30 18:50:38+00:00,[],
1763,https://github.com/afiskon/blackice-ii-alinx-an108.git,2018-07-01 10:50:47+00:00,Alinx AN108 AD/DA board usage example,0,afiskon/blackice-ii-alinx-an108,139321060,SystemVerilog,blackice-ii-alinx-an108,4,2,2024-03-09 19:58:48+00:00,[],https://api.github.com/licenses/mit
1764,https://github.com/pulp-platform/event_unit_flex.git,2018-02-26 16:01:08+00:00,,4,pulp-platform/event_unit_flex,122993535,SystemVerilog,event_unit_flex,823,2,2023-07-25 14:15:19+00:00,[],
1765,https://github.com/melt-umn/silver-ableC.git,2018-05-10 03:56:54+00:00,Silver extension providing inlining of ableC literals for more natural AST construction,0,melt-umn/silver-ableC,132846275,SystemVerilog,silver-ableC,169,2,2022-03-25 10:44:09+00:00,[],https://api.github.com/licenses/lgpl-3.0
1766,https://github.com/pulp-platform/L2_tcdm_hybrid_interco.git,2018-01-24 12:47:52+00:00,,8,pulp-platform/L2_tcdm_hybrid_interco,118764591,SystemVerilog,L2_tcdm_hybrid_interco,276,2,2023-12-20 08:25:08+00:00,[],
1767,https://github.com/hypernyan/modbus_rtu_slave_hdl.git,2018-05-23 13:20:18+00:00,A SystemVerilog implementation of Modbus RTU Slave ,0,hypernyan/modbus_rtu_slave_hdl,134572689,SystemVerilog,modbus_rtu_slave_hdl,26,2,2022-02-17 21:49:08+00:00,[],https://api.github.com/licenses/gpl-3.0
1768,https://github.com/joshchengwk/sync_fifo.git,2017-12-19 03:55:48+00:00,Synchronous FIFO,3,joshchengwk/sync_fifo,114716998,SystemVerilog,sync_fifo,49,2,2024-01-11 01:37:28+00:00,[],https://api.github.com/licenses/gpl-3.0
1769,https://github.com/jomonkjoy/OCP-Repo.git,2018-05-04 15:20:59+00:00,Open Core Protocol,1,jomonkjoy/OCP-Repo,132156825,SystemVerilog,OCP-Repo,24,2,2021-03-02 17:21:10+00:00,[],
1770,https://github.com/pConst/xilinx_max_power.git,2018-04-07 22:51:31+00:00,Stress test power subsystem of your Xilinx FPGA board,1,pConst/xilinx_max_power,128575100,SystemVerilog,xilinx_max_power,89,2,2024-01-18 08:50:41+00:00,"['xilinx', 'fpga', 'soc', 'arty', 'digilent', 'zinq', 'power', 'test', 'verilog', 'systemverilog', 'board', 'development', 'cooling', 'shift-register', 'ultrascale']",
1771,https://github.com/afiskon/fpga-clock.git,2017-12-02 18:35:54+00:00,Simple clock based on iCEstick board,0,afiskon/fpga-clock,112866927,SystemVerilog,fpga-clock,7,2,2022-08-30 08:45:14+00:00,[],https://api.github.com/licenses/mit
1772,https://github.com/ZachStephens/verilog_FFT.git,2018-02-03 16:44:14+00:00,Fast Fourier Transform implementation for an ASIC Design Lab project. ,1,ZachStephens/verilog_FFT,120109704,SystemVerilog,verilog_FFT,22,2,2022-05-20 08:21:05+00:00,[],
1773,https://github.com/SymbolZ/Multicycle_CPU_54Instruction.git,2017-12-05 10:25:37+00:00,A Simple Multicycle CPU With 54 MIPS Instructions,1,SymbolZ/Multicycle_CPU_54Instruction,113167455,SystemVerilog,Multicycle_CPU_54Instruction,100,2,2021-09-27 02:47:26+00:00,[],https://api.github.com/licenses/gpl-3.0
1774,https://github.com/robfpga/dcache_blocking.git,2018-04-01 22:37:57+00:00,An implementation of a blocking data cache for a 5-staged CPU.,0,robfpga/dcache_blocking,127677042,SystemVerilog,dcache_blocking,42,2,2023-08-23 17:27:29+00:00,[],
1775,https://github.com/pulp-platform/icache_mp_128_pf.git,2018-02-26 16:03:58+00:00,,4,pulp-platform/icache_mp_128_pf,122993886,SystemVerilog,icache_mp_128_pf,56,2,2023-03-08 05:00:53+00:00,[],
1776,https://github.com/sgalal/DigitalClock.git,2018-05-15 12:55:09+00:00,Digital clock in SystemVerilog on FPGA,0,sgalal/DigitalClock,133515980,SystemVerilog,DigitalClock,35535,2,2023-01-28 19:39:34+00:00,[],https://api.github.com/licenses/mit
1777,https://github.com/UofT-HPRC/ece532-tutorials.git,2018-05-08 20:33:33+00:00,Tutorials for ECE532 at UofT,0,UofT-HPRC/ece532-tutorials,132661732,SystemVerilog,ece532-tutorials,43336,2,2022-09-12 16:19:47+00:00,[],
1778,https://github.com/jomonkjoy/MxN-cross-bar-switch.git,2017-12-07 15:07:04+00:00,Axis based MxN cross bar switch implementation,1,jomonkjoy/MxN-cross-bar-switch,113465085,SystemVerilog,MxN-cross-bar-switch,22,2,2018-10-29 00:32:04+00:00,[],https://api.github.com/licenses/mit
1779,https://github.com/praveenkhemalapure/LCD_CONTROLLER_UVM_ENV.git,2018-04-01 01:06:21+00:00,lpcxx24 uvm verification environement,0,praveenkhemalapure/LCD_CONTROLLER_UVM_ENV,127584574,SystemVerilog,LCD_CONTROLLER_UVM_ENV,4126,2,2022-02-01 05:12:39+00:00,[],
1780,https://github.com/eason-shsf/producer-consumer.git,2018-08-05 13:12:57+00:00,something about procucer consumer in python,0,eason-shsf/producer-consumer,143613979,SystemVerilog,producer-consumer,799,2,2019-02-17 03:10:25+00:00,[],
1781,https://github.com/aurelhoxha/TrafficLightSystemVerilog.git,2018-04-09 16:22:24+00:00,Implementation of a Traffic Lights using FSM in Verilog,0,aurelhoxha/TrafficLightSystemVerilog,128800923,SystemVerilog,TrafficLightSystemVerilog,2,2,2023-12-26 02:37:23+00:00,[],
1782,https://github.com/shmandy/AHB_Lite_Verification.git,2018-03-14 23:31:10+00:00,ECE571 Winter 2018 Class Project - Validation of AHB_Lite Peripheral (dual-port RAM),0,shmandy/AHB_Lite_Verification,125286819,SystemVerilog,AHB_Lite_Verification,37,2,2022-05-19 12:40:41+00:00,[],
1783,https://github.com/pulp-platform/tbtools.git,2018-06-11 10:01:19+00:00,DPI models for RTL platform,2,pulp-platform/tbtools,136908072,SystemVerilog,tbtools,28,2,2022-12-14 14:20:11+00:00,[],
1784,https://github.com/kirtanmehta/PDP8-simulator-with-Floating-Point-extension.git,2018-06-10 06:21:29+00:00,,0,kirtanmehta/PDP8-simulator-with-Floating-Point-extension,136784708,SystemVerilog,PDP8-simulator-with-Floating-Point-extension,2320,2,2024-04-10 17:37:07+00:00,[],
1785,https://github.com/luke-jiang/EE_271.git,2018-05-16 19:16:52+00:00,UW EE 271 Winter 2018 Projects,0,luke-jiang/EE_271,133712709,SystemVerilog,EE_271,2671,2,2023-01-29 12:04:02+00:00,[],
1786,https://github.com/zcold/prioritized_arbiter.git,2018-05-24 07:15:39+00:00,prioritized_arbiter in systemverilog,0,zcold/prioritized_arbiter,134676491,SystemVerilog,prioritized_arbiter,70,2,2021-05-16 23:23:50+00:00,[],https://api.github.com/licenses/mit
1787,https://github.com/pulp-platform/timer_unit.git,2018-02-02 16:40:18+00:00,,4,pulp-platform/timer_unit,120005842,SystemVerilog,timer_unit,326,2,2023-07-12 22:40:07+00:00,[],
1788,https://github.com/WillQvQ/MIPS_V3.2.git,2018-06-18 11:17:50+00:00,mips + cache,0,WillQvQ/MIPS_V3.2,137742636,SystemVerilog,MIPS_V3.2,9883,2,2020-09-10 23:50:02+00:00,[],
1789,https://github.com/chadnkit/uvm_testbench.git,2018-02-25 03:43:29+00:00,UVM Testbench coded following tutorial from Verification Guide,0,chadnkit/uvm_testbench,122802666,SystemVerilog,uvm_testbench,7,1,2023-08-19 18:51:10+00:00,[],
1790,https://github.com/msvisser/RISC-V.git,2018-03-03 19:53:59+00:00,Pipelined RISC-V RV32IM implementation,1,msvisser/RISC-V,123726244,SystemVerilog,RISC-V,83,1,2018-10-22 12:19:33+00:00,"['riscv', 'fpga']",
1791,https://github.com/jomonkjoy/FFT-Computation.git,2017-11-22 17:56:20+00:00,"Fast Fourier Transform (FFT) algorithm computes the discrete Fourier transform (DFT) of a sequence, or its inverse (IFFT)",1,jomonkjoy/FFT-Computation,111716029,SystemVerilog,FFT-Computation,62,1,2018-06-06 17:01:00+00:00,[],https://api.github.com/licenses/gpl-3.0
1792,https://github.com/anaamansari/Selective_DRAM.git,2018-07-16 00:06:49+00:00,SIPS2018,0,anaamansari/Selective_DRAM,141067244,SystemVerilog,Selective_DRAM,38156,1,2021-09-29 05:11:09+00:00,[],https://api.github.com/licenses/gpl-3.0
1793,https://github.com/rishabhjain7b/DKOP.git,2018-03-29 18:01:01+00:00,This repository contains all the Verilog and System Verilog codes made during training at DKOP.,1,rishabhjain7b/DKOP,127328485,SystemVerilog,DKOP,1293,1,2020-06-19 06:19:21+00:00,[],
1795,https://github.com/SmartyMJ/MIPS-chicken.git,2018-05-09 22:16:02+00:00,Full single-cycle MIPS processor written in System Verilog with Chicken (a video game created by me) written in MIPS assembly language,0,SmartyMJ/MIPS-chicken,132818394,SystemVerilog,MIPS-chicken,3939,1,2018-05-10 17:21:45+00:00,[],
1796,https://github.com/haykp/AXI_Stream.git,2018-06-26 13:58:01+00:00,AXI Stream,0,haykp/AXI_Stream,138745880,SystemVerilog,AXI_Stream,368,1,2020-03-29 11:59:42+00:00,[],https://api.github.com/licenses/mit
1797,https://github.com/xmxn3559/doc.git,2018-07-06 07:53:34+00:00,,0,xmxn3559/doc,139951906,SystemVerilog,doc,2026,1,2018-07-06 09:21:06+00:00,[],
1798,https://github.com/ammar95/ECE551.git,2018-05-13 22:58:45+00:00,FPGA implementation of a NN for Character Recognition,0,ammar95/ECE551,133280785,SystemVerilog,ECE551,265,1,2021-12-09 13:15:06+00:00,[],
1799,https://github.com/Jaypatel6/Risc-V-Single-cycle-processor.git,2018-05-10 19:51:11+00:00,Simple Single Cycle Processor,1,Jaypatel6/Risc-V-Single-cycle-processor,132947516,SystemVerilog,Risc-V-Single-cycle-processor,14785,1,2022-11-18 02:05:25+00:00,[],
1800,https://github.com/Mario-Zuniga/Sequential-Multiplier.git,2018-04-14 05:37:29+00:00,Sequential Multiplier made with structural System Verilog.,0,Mario-Zuniga/Sequential-Multiplier,129485496,SystemVerilog,Sequential-Multiplier,10,1,2021-08-27 07:01:07+00:00,[],
1801,https://github.com/wallento/fusesoc-templates-demo.git,2018-01-15 19:59:36+00:00,Demo files for FuseSoC templates,0,wallento/fusesoc-templates-demo,117589578,SystemVerilog,fusesoc-templates-demo,1,1,2022-05-05 06:25:32+00:00,[],
1802,https://github.com/robfpga/linked_list_queue.git,2018-04-01 22:38:21+00:00,"An implementation of a multi-context, linked list queue data structure.",1,robfpga/linked_list_queue,127677069,SystemVerilog,linked_list_queue,55,1,2022-07-08 17:10:25+00:00,[],https://api.github.com/licenses/gpl-3.0
1803,https://github.com/nsailor/Feather.git,2018-07-30 22:42:48+00:00,A single cycle processor implementing a subset of the ARMv7 ISA.,1,nsailor/Feather,142935371,SystemVerilog,Feather,151,1,2018-12-27 18:51:23+00:00,"['systemverilog', 'verilator', 'digital-design', 'computer-architecture', 'armv7']",
1804,https://github.com/abelardojarab/opencl-bsp.git,2018-05-02 00:24:37+00:00,,2,abelardojarab/opencl-bsp,131777154,SystemVerilog,opencl-bsp,8514,1,2020-10-20 16:02:39+00:00,[],
1805,https://github.com/psrivatsa/Digital-Design.git,2018-02-07 09:25:02+00:00,Digital Design,0,psrivatsa/Digital-Design,120592839,SystemVerilog,Digital-Design,2,1,2022-09-24 12:47:18+00:00,[],
1806,https://github.com/pulp-platform/cluster_peripherals.git,2018-02-26 16:27:12+00:00,,4,pulp-platform/cluster_peripherals,122996837,SystemVerilog,cluster_peripherals,106,1,2023-06-08 12:17:59+00:00,[],
1807,https://github.com/matthuszagh/ece5760-lab2.git,2018-03-03 13:55:12+00:00,https://people.ece.cornell.edu/land/courses/ece5760/LABS/s2017/lab2_DDA.html,0,matthuszagh/ece5760-lab2,123696497,SystemVerilog,ece5760-lab2,291395,1,2018-12-07 18:44:02+00:00,[],
1808,https://github.com/AnhHoang2410/-Anh-Hoang-_finalproject.git,2018-08-09 18:31:11+00:00,SHA256 to generate Bitcoin Hash using system Verilog,0,AnhHoang2410/-Anh-Hoang-_finalproject,144189737,SystemVerilog,-Anh-Hoang-_finalproject,68,1,2022-05-31 12:13:06+00:00,[],
1809,https://github.com/0x544D/HX8357_Display_Driver.git,2018-07-08 09:48:53+00:00,FPGA implementation to drive HX8357 display,0,0x544D/HX8357_Display_Driver,140155616,SystemVerilog,HX8357_Display_Driver,2743,1,2021-05-25 13:41:47+00:00,[],
1810,https://github.com/tallerDisenoDigital/vallhalla-armv4.git,2018-05-24 19:12:01+00:00,,0,tallerDisenoDigital/vallhalla-armv4,134758335,SystemVerilog,vallhalla-armv4,37,1,2018-07-21 07:55:54+00:00,[],
1811,https://github.com/saitej25/DDR-3-Controller.git,2018-06-01 05:59:19+00:00,,1,saitej25/DDR-3-Controller,135674091,SystemVerilog,DDR-3-Controller,8265,1,2020-11-14 20:55:18+00:00,[],
1812,https://github.com/pulp-platform/udma_i2c.git,2018-01-24 12:56:06+00:00,,7,pulp-platform/udma_i2c,118765588,SystemVerilog,udma_i2c,124,1,2022-09-12 22:07:40+00:00,[],
1813,https://github.com/SomaSaiCharitha/AMBA-AXI3.git,2018-02-17 04:39:30+00:00,,0,SomaSaiCharitha/AMBA-AXI3,121827782,SystemVerilog,AMBA-AXI3,4062,1,2020-11-09 07:59:34+00:00,[],
1814,https://github.com/AndrewHuynh97/Single_Cycle_Processor.git,2018-03-05 15:19:14+00:00,This is a single cycle processor using SystemVerilog ,1,AndrewHuynh97/Single_Cycle_Processor,123938228,SystemVerilog,Single_Cycle_Processor,289,1,2020-12-19 18:44:11+00:00,[],
1815,https://github.com/praveenkhemalapure/AHB_MULTI_MASTER.git,2018-04-01 05:54:03+00:00,,0,praveenkhemalapure/AHB_MULTI_MASTER,127601565,SystemVerilog,AHB_MULTI_MASTER,10,1,2019-12-31 16:24:43+00:00,[],
1816,https://github.com/jmolinacalzia/simulationPic16F887a.git,2018-04-28 03:32:34+00:00,This project simules the basic functions of PIC16F84a. ,0,jmolinacalzia/simulationPic16F887a,131369157,SystemVerilog,simulationPic16F887a,2,1,2023-01-28 15:45:31+00:00,"['vhdl', 'vhdl-modules', 'icarus-verilog', 'pic16f84a']",https://api.github.com/licenses/mit
1817,https://github.com/clowak/Mayur_UVM.git,2018-07-16 22:41:54+00:00,,0,clowak/Mayur_UVM,141202386,SystemVerilog,Mayur_UVM,115,1,2021-07-20 17:47:37+00:00,[],https://api.github.com/licenses/apache-2.0
1818,https://github.com/aurelhoxha/VendingMachineSystemVerilog.git,2018-04-09 16:27:07+00:00,Implementation of a Vending Machine using Mealy and Moore in System Verilog,1,aurelhoxha/VendingMachineSystemVerilog,128801660,SystemVerilog,VendingMachineSystemVerilog,3,1,2021-11-19 14:29:37+00:00,[],
1819,https://github.com/Mario-Zuniga/MxV.git,2018-05-30 19:38:28+00:00,"Operational MxV recieving data from UART communication and sending back, up to a 8x8 Matrix.",0,Mario-Zuniga/MxV,135489364,SystemVerilog,MxV,32,1,2021-08-27 07:01:33+00:00,[],
1820,https://github.com/clowak/Ramdas_SystemVerilogReference.git,2018-07-16 22:39:51+00:00,,0,clowak/Ramdas_SystemVerilogReference,141202237,SystemVerilog,Ramdas_SystemVerilogReference,47,1,2021-07-20 17:46:31+00:00,[],
1821,https://github.com/jflazaro/CSE132L-Pipeline-Processor.git,2018-03-19 02:50:28+00:00,32 bit RISC-V Pipelined Processor,0,jflazaro/CSE132L-Pipeline-Processor,125792776,SystemVerilog,CSE132L-Pipeline-Processor,629,1,2023-12-08 16:11:35+00:00,[],
1822,https://github.com/tianrenz2/Pipeline-Processor.git,2018-03-28 11:16:31+00:00,"Pipeline Processor based on RISC-V, implemented forwarding and hazard detection units",0,tianrenz2/Pipeline-Processor,127128880,SystemVerilog,Pipeline-Processor,1014,1,2024-02-11 04:19:35+00:00,"['modelsim', 'systemverilog', 'verification']",
1823,https://github.com/melt-umn/ableC-nondeterministic-search.git,2018-02-04 22:59:11+00:00,Extension to C providing an embedded domain-specific language for parallel nondeterministic programming,0,melt-umn/ableC-nondeterministic-search,120231004,SystemVerilog,ableC-nondeterministic-search,162,1,2022-01-19 02:23:18+00:00,[],https://api.github.com/licenses/lgpl-3.0
1824,https://github.com/siberiy4/cpu.git,2017-12-07 11:04:21+00:00,木曜日のCPU,0,siberiy4/cpu,113440323,SystemVerilog,cpu,42,1,2018-05-11 01:27:33+00:00,[],
1825,https://github.com/rajeshkmeena/cdc_mcp.git,2018-03-08 09:42:40+00:00,Multi-Cycle Path (MCP) formulation for CDC(Clock Domain Crossing) Problem  ,1,rajeshkmeena/cdc_mcp,124370347,SystemVerilog,cdc_mcp,4,1,2023-02-22 01:28:32+00:00,[],
1826,https://github.com/AishwaryaGandhi/Advanced-Digital-System-Design-Generation.git,2018-02-22 17:41:35+00:00,This repository contains my digital system design projects. Each folder contains the problem statement and the reports for the projects. The hardware description language used is System Verilog.,1,AishwaryaGandhi/Advanced-Digital-System-Design-Generation,122513025,SystemVerilog,Advanced-Digital-System-Design-Generation,2498,1,2019-01-31 04:55:32+00:00,[],
1827,https://github.com/tahmidk/EnDMe-Processor.git,2018-05-19 23:13:09+00:00,A microprocessor built written in System Verilog that encrypts and decrypts a given message,0,tahmidk/EnDMe-Processor,134104511,SystemVerilog,EnDMe-Processor,165613,1,2020-07-19 18:44:54+00:00,[],
1828,https://github.com/Mario-Zuniga/Multiplier-Divisor-Square_Root.git,2018-04-14 05:42:46+00:00,"MDR designed with structural System Verilog, all operations are beign done with one Add-Subtract module, and sended to a 32 bit BCD to be displayed on digital segments.",1,Mario-Zuniga/Multiplier-Divisor-Square_Root,129485804,SystemVerilog,Multiplier-Divisor-Square_Root,18,1,2021-08-27 07:01:54+00:00,[],
1829,https://github.com/banerjeeavik28/32bitALU-Function_Implementation.git,2017-11-25 01:33:14+00:00,"Applied 12 rudimentary functions to a 32-bit ALU processor which takes in two 32-bit input values and applies said functions to them. The functions created are:  Add, Subtract, Increment, Decrement, Move (copies the value of an input to the other input), Bit-wise Shift Left, SIMD Add (essentially Add but on multiple sets of bits at a time), Bitwise AND, Bitwise OR, Bitwise Exclusive OR, Compliment, and 2's Compliment.  Flags are implemented to detect for carry bits, possible overflow, sign changes, and resulting zero values. The program is written in System Verilog but for easier access has been converted to pdf.",0,banerjeeavik28/32bitALU-Function_Implementation,111967803,SystemVerilog,32bitALU-Function_Implementation,1064,1,2018-04-29 00:15:25+00:00,[],
1830,https://github.com/pulp-platform/apb_adv_timer.git,2018-01-24 12:46:19+00:00,Advanced timer with APB interface,5,pulp-platform/apb_adv_timer,118764403,SystemVerilog,apb_adv_timer,110,1,2022-07-29 09:19:02+00:00,[],
1831,https://github.com/sand96/Computer_Architecture.git,2018-06-13 11:49:07+00:00,,0,sand96/Computer_Architecture,137208468,SystemVerilog,Computer_Architecture,434,1,2019-11-06 20:09:04+00:00,[],https://api.github.com/licenses/mit
1832,https://github.com/eliza0x/fost.git,2018-01-23 05:53:10+00:00,simple pipeline cpu,0,eliza0x/fost,118564388,SystemVerilog,fost,149,1,2018-01-24 13:51:48+00:00,"['cpu', 'systemverilog']",
1833,https://github.com/ecqin/SIMD-Architecture.git,2018-02-14 18:30:32+00:00,,0,ecqin/SIMD-Architecture,121546029,SystemVerilog,SIMD-Architecture,3033,1,2018-03-05 23:50:53+00:00,[],
1834,https://github.com/jakemckenzie/Digital-System-Design.git,2018-04-04 04:04:29+00:00,This was my homework for Digital System Design course in SystemVerilog,0,jakemckenzie/Digital-System-Design,128005151,SystemVerilog,Digital-System-Design,124290,1,2018-06-01 07:33:06+00:00,[],
1835,https://github.com/pulp-platform/cfmath.git,2018-07-24 11:25:45+00:00,Package with Constant Function implementations of mathematical functions for HDL elaboration,1,pulp-platform/cfmath,142148716,SystemVerilog,cfmath,17,1,2023-01-28 12:03:44+00:00,[],
1836,https://github.com/johan92/fpga-for-beginners.git,2018-07-08 15:07:27+00:00,Repo with FPGA/Verilog/RTL examples. I use it in articles for demonstration.,0,johan92/fpga-for-beginners,140178234,SystemVerilog,fpga-for-beginners,56,1,2019-04-07 15:29:17+00:00,[],https://api.github.com/licenses/mit
1837,https://github.com/kyle-sit/Finite-Impulse-Response-Filter.git,2017-12-05 00:40:09+00:00,FIR filter built in system verilog along with a matlab script,0,kyle-sit/Finite-Impulse-Response-Filter,113111769,SystemVerilog,Finite-Impulse-Response-Filter,221,1,2019-09-01 06:20:12+00:00,[],
1838,https://github.com/matthewelse/fpga-starter.git,2017-12-20 21:05:28+00:00,Starting point for Altera Cyclone V Applications using the ARM core and FPGA,1,matthewelse/fpga-starter,114931117,SystemVerilog,fpga-starter,40,1,2018-02-02 12:02:47+00:00,[],https://api.github.com/licenses/mit
1839,https://github.com/kjiwa/ee271-flappy-bird.git,2018-03-08 19:23:56+00:00,EE 271 final lab---a Flappy Bird clone for the Altera DE1 FPGA development board.,1,kjiwa/ee271-flappy-bird,124437530,SystemVerilog,ee271-flappy-bird,83,1,2021-03-09 17:57:44+00:00,[],https://api.github.com/licenses/mit
1840,https://github.com/brabect1/riscv_jtag_dm.git,2018-07-22 13:18:46+00:00,RISC-V Debug Mocule with JTAG Transport.,1,brabect1/riscv_jtag_dm,141897322,SystemVerilog,riscv_jtag_dm,71,1,2020-01-21 09:48:47+00:00,"['riscv', 'debug', 'jtag']",https://api.github.com/licenses/apache-2.0
1841,https://github.com/haines10/ECE337-Final.git,2018-04-10 15:40:55+00:00,,0,haines10/ECE337-Final,128957291,SystemVerilog,ECE337-Final,30,1,2018-04-25 19:52:47+00:00,[],
1842,https://github.com/Datar93/Functional-Verification-of-LCD-Controller.git,2018-06-24 08:23:40+00:00,,0,Datar93/Functional-Verification-of-LCD-Controller,138465554,SystemVerilog,Functional-Verification-of-LCD-Controller,1464,1,2022-05-20 08:30:26+00:00,[],
1843,https://github.com/jiashuoz/32-bit-Pipelined-CPU.git,2018-06-13 09:39:26+00:00,"32-bit Pipelined CPU, MIPS architecture. Based on System Verilog. Board: DE1-SoC. Computer architecture.",0,jiashuoz/32-bit-Pipelined-CPU,137194886,SystemVerilog,32-bit-Pipelined-CPU,10,1,2023-12-07 16:28:58+00:00,[],
1844,https://github.com/eldenchang/ECE337project.git,2017-12-05 04:31:05+00:00,,0,eldenchang/ECE337project,113132908,SystemVerilog,ECE337project,18,1,2023-03-05 04:04:25+00:00,[],
1845,https://github.com/suhasr1991/CAN-Bus-controller-Design.git,2018-03-06 18:14:40+00:00,CAN Bus controller was designed for standard data frame and remote data frame. Bit stuffing was implemented to ensure that for every 5 consecutive same bits an inverted bit was inserted in the frame. Cyclic Redundancy Code(CRC) was implemented for error handling. Bit timing state machine was implemented to achieve greater synchronization at the receiver. AHB protocol (slave/master) was implemented to receive and transmit the data bit at a time on the bus. Further 8 AHB-CAN Transmitter were instantiated and operated over the bus. These devices used a round robin arbitrator to get the data on bus towards test bench(or other devices).,1,suhasr1991/CAN-Bus-controller-Design,124119409,SystemVerilog,CAN-Bus-controller-Design,501,1,2019-05-18 00:53:17+00:00,[],
1846,https://github.com/Dmitriy0111/JTAG_debug.git,2018-03-26 03:39:01+00:00,,1,Dmitriy0111/JTAG_debug,126769459,SystemVerilog,JTAG_debug,1507,1,2020-09-24 12:26:36+00:00,"['systemverilog', 'jtag', 'debug']",
1847,https://github.com/verification-gentleman-blog/favor-composition-over-inheritance-even-for-constraints.git,2018-04-01 12:25:52+00:00,,2,verification-gentleman-blog/favor-composition-over-inheritance-even-for-constraints,127627116,SystemVerilog,favor-composition-over-inheritance-even-for-constraints,49,1,2020-05-01 02:55:50+00:00,[],https://api.github.com/licenses/apache-2.0
1848,https://github.com/veranki/mips-processor.git,2018-04-03 19:39:16+00:00,Implementation of 32-bit MIPS ISA based RISC processor,0,veranki/mips-processor,127959632,SystemVerilog,mips-processor,5598,1,2018-04-03 20:56:50+00:00,[],
1849,https://github.com/dpetrisko/riscvga.git,2018-02-04 21:21:08+00:00,,0,dpetrisko/riscvga,120224305,SystemVerilog,riscvga,2186,1,2019-02-07 08:22:29+00:00,[],https://api.github.com/licenses/mit
1850,https://github.com/ckj119940887/TyTAN.git,2018-07-12 11:14:20+00:00,,0,ckj119940887/TyTAN,140702759,SystemVerilog,TyTAN,13543,1,2018-07-27 07:11:13+00:00,[],
1851,https://github.com/flasonil/ripple_carry_adder.git,2018-04-21 17:50:38+00:00,,0,flasonil/ripple_carry_adder,130498416,SystemVerilog,ripple_carry_adder,53,1,2021-02-09 00:53:29+00:00,['system-verilog'],
1852,https://github.com/clowak/Ramdas_SystemVerilogAssertions.git,2018-07-16 22:40:22+00:00,,0,clowak/Ramdas_SystemVerilogAssertions,141202275,SystemVerilog,Ramdas_SystemVerilogAssertions,5,1,2021-07-20 17:45:47+00:00,[],
1853,https://github.com/clowak/Ramdas_UVMReference.git,2018-07-16 22:40:54+00:00,,0,clowak/Ramdas_UVMReference,141202316,SystemVerilog,Ramdas_UVMReference,21,1,2021-07-20 17:47:01+00:00,[],
1854,https://github.com/aharathi/DDR3_PRESI.git,2018-06-02 21:14:24+00:00,,0,aharathi/DDR3_PRESI,135852836,SystemVerilog,DDR3_PRESI,2721,1,2021-06-01 18:25:47+00:00,[],
1855,https://github.com/WillQvQ/MIPS_V1.0.git,2018-05-03 02:24:00+00:00,Step1 of the MIPS Project,1,WillQvQ/MIPS_V1.0,131930420,SystemVerilog,MIPS_V1.0,1314,1,2020-09-10 23:50:05+00:00,[],
1856,https://github.com/HCTLab/pulpito.git,2018-05-13 15:39:32+00:00,Pulp-ito hybrid platform,1,HCTLab/pulpito,133250720,SystemVerilog,pulpito,413,1,2021-04-14 18:51:51+00:00,[],
1857,https://github.com/cuclaoliu/dvbc.git,2018-01-15 04:38:07+00:00,FPGA Implementation of Digital Video Broadcasting for Cable System,0,cuclaoliu/dvbc,117497848,SystemVerilog,dvbc,16,1,2020-10-23 22:40:15+00:00,[],
1858,https://github.com/abagde93/ECE111.git,2018-01-28 00:37:07+00:00,Advanced Digital Design UCSD,0,abagde93/ECE111,119214903,SystemVerilog,ECE111,36,1,2024-01-25 09:22:57+00:00,[],
1859,https://github.com/uwesimm/uvm-interface-registry.git,2017-12-11 13:33:48+00:00,uvm interface registry as shown on dvcon us 2015,0,uwesimm/uvm-interface-registry,113862902,SystemVerilog,uvm-interface-registry,12,1,2020-10-20 08:33:34+00:00,[],https://api.github.com/licenses/apache-2.0
1860,https://github.com/lowRISC/lowrisc-vcu108.git,2018-01-12 17:14:24+00:00,,0,lowRISC/lowrisc-vcu108,117268056,SystemVerilog,lowrisc-vcu108,92,1,2020-05-23 03:36:08+00:00,[],
1861,https://github.com/asumagic/tinydumbcpu.git,2018-07-05 15:04:05+00:00,Brainf**k hardware implementation written in SystemVerilog,0,asumagic/tinydumbcpu,139865569,SystemVerilog,tinydumbcpu,31,1,2022-08-13 14:42:42+00:00,[],https://api.github.com/licenses/mit
1862,https://github.com/lexgolovchenko/avalon-1wire-master.git,2017-12-15 11:09:53+00:00,1-wire bus master core with Altera Avalon-MM slave interface,0,lexgolovchenko/avalon-1wire-master,114362008,SystemVerilog,avalon-1wire-master,18,1,2019-08-12 13:58:52+00:00,[],
1863,https://github.com/rtchance/CSE141.git,2017-12-05 05:47:51+00:00,,0,rtchance/CSE141,113138535,SystemVerilog,CSE141,138,1,2020-02-20 01:38:23+00:00,[],
1864,https://github.com/navyas321/LC3-CPU.git,2017-12-24 05:27:33+00:00,Five stage pipelined CPU with 2 levels of caching and tournament style branch predictor,0,navyas321/LC3-CPU,115242077,SystemVerilog,LC3-CPU,23,1,2018-07-30 01:26:34+00:00,[],
1865,https://github.com/aryglins/riscv-agl2.git,2017-12-28 00:29:41+00:00,A 32 bit RISC-V CPU integrated with a generic configurable cache memory.,1,aryglins/riscv-agl2,115568380,SystemVerilog,riscv-agl2,255139,1,2020-02-23 20:54:20+00:00,[],
1866,https://github.com/hi-eeprom/AXI-Repo.git,2017-12-29 09:33:58+00:00,AXI Master/Slave periferals,1,hi-eeprom/AXI-Repo,115709008,SystemVerilog,AXI-Repo,37,1,2022-09-06 23:58:10+00:00,[],https://api.github.com/licenses/gpl-3.0
1867,https://github.com/kristacapps1/buggy_soc1.git,2018-02-28 22:32:20+00:00,Buggy Pulpino SOC,1,kristacapps1/buggy_soc1,123350290,SystemVerilog,buggy_soc1,10069,1,2019-06-27 00:04:41+00:00,[],
1868,https://github.com/proxy-hatch/UART_interfacing-hardware_accelerators.git,2018-03-31 02:09:12+00:00,"Interfacing Load/Store Unit - Avalon Memory Bus for UART connection, and implement hardware accelerators",0,proxy-hatch/UART_interfacing-hardware_accelerators,127490551,SystemVerilog,UART_interfacing-hardware_accelerators,1882,1,2022-04-27 23:56:41+00:00,[],
1869,https://github.com/WillQvQ/MIPS_V2.1.git,2018-05-21 15:28:07+00:00,Multicycle MIPS64,1,WillQvQ/MIPS_V2.1,134287890,SystemVerilog,MIPS_V2.1,3703,1,2020-09-10 23:50:04+00:00,[],
1870,https://github.com/wilmotha/ECE272-Final-Project.git,2018-05-22 21:31:08+00:00,Calculator - using hardware,0,wilmotha/ECE272-Final-Project,134478162,SystemVerilog,ECE272-Final-Project,1581,1,2018-06-04 04:44:04+00:00,[],
1871,https://github.com/Harry-Chen/digital-circuit-experiments.git,2018-08-11 13:43:36+00:00,"Code for course 'Digital Circuit Experiments' of Tsinghua University, Spring 2018",0,Harry-Chen/digital-circuit-experiments,144388576,SystemVerilog,digital-circuit-experiments,38,1,2019-01-22 23:34:52+00:00,[],
1872,https://github.com/fjpolo/MAX1000_Blinky_Verilog.git,2018-04-04 13:27:59+00:00,Blinky in Verilog using MAX1000 and Quartus Prime,0,fjpolo/MAX1000_Blinky_Verilog,128066017,SystemVerilog,MAX1000_Blinky_Verilog,4519,1,2022-04-10 01:03:49+00:00,[],
1873,https://github.com/pulp-platform/mchan.git,2018-02-26 16:02:19+00:00,,5,pulp-platform/mchan,122993684,SystemVerilog,mchan,2063,1,2023-02-12 08:56:29+00:00,[],
1874,https://github.com/Aswinnatesh/Synergistic-Processing-Unit-of-Sony-Cell.git,2018-03-15 15:29:33+00:00,My Coursework Projects in Computer Architecture - ESE545 - Stony Brook University ,2,Aswinnatesh/Synergistic-Processing-Unit-of-Sony-Cell,125387888,SystemVerilog,Synergistic-Processing-Unit-of-Sony-Cell,2633,1,2020-11-23 07:39:37+00:00,[],
1875,https://github.com/pulp-platform/axi_id_remap.git,2018-07-24 10:48:34+00:00,AXI ID remapper core with configurable input and output ID widths and a configurable number of ID slots,1,pulp-platform/axi_id_remap,142145006,SystemVerilog,axi_id_remap,29,1,2018-09-03 14:10:27+00:00,[],
1876,https://github.com/bigmac34/VSN_labo5.git,2018-05-17 10:51:05+00:00,Bluetooth Low Energy Analyzer,0,bigmac34/VSN_labo5,133799999,SystemVerilog,VSN_labo5,313,1,2021-06-23 08:45:21+00:00,[],
1877,https://github.com/alexandraleonidova/hardware-design.git,2018-05-17 05:47:11+00:00,"This repository contains my projects from Hardware Design cource Each Project has a folder, where you can find a projectXX.txt file that contains project description/details",1,alexandraleonidova/hardware-design,133764638,SystemVerilog,hardware-design,679,1,2022-06-26 20:06:11+00:00,[],
1878,https://github.com/fl4shk/frost32_cpu.git,2018-05-08 13:32:27+00:00,"My first pipelined CPU, in SystemVerilog, as well as an assembler in C++",0,fl4shk/frost32_cpu,132613568,SystemVerilog,frost32_cpu,645,1,2018-05-30 21:55:49+00:00,"['pipeline', 'cpu', 'processor', 'assembler', 'systemverilog', 'disassembler']",https://api.github.com/licenses/mit
1879,https://github.com/saitej25/NAND-Flash.git,2018-06-08 22:50:46+00:00,,0,saitej25/NAND-Flash,136672727,SystemVerilog,NAND-Flash,63708,1,2022-12-17 13:40:15+00:00,[],
1880,https://github.com/jomonkjoy/Matrix-Multiplication.git,2017-11-26 10:01:35+00:00,Accelerator for Floating Point  Matrix Multiplication ,2,jomonkjoy/Matrix-Multiplication,112072321,SystemVerilog,Matrix-Multiplication,40,1,2021-06-21 09:41:18+00:00,[],https://api.github.com/licenses/gpl-3.0
1881,https://github.com/lexgolovchenko/emif16-avmm-bridge.git,2018-05-05 12:00:02+00:00,Module for connect TI DSP to Altera Qsys Interconnect through EMIF16 interface,1,lexgolovchenko/emif16-avmm-bridge,132243917,SystemVerilog,emif16-avmm-bridge,39,1,2019-12-12 10:17:40+00:00,[],
1882,https://github.com/krame505/truth-table-generator.git,2018-04-20 00:37:54+00:00,Tool that renders truth tables for Boolean expressions,0,krame505/truth-table-generator,130287721,SystemVerilog,truth-table-generator,23,1,2021-02-19 20:55:34+00:00,[],https://api.github.com/licenses/gpl-3.0
1883,https://github.com/arkhan91/Rufous.git,2018-06-13 00:14:01+00:00,Rofous RISC-V based Microcontroller,0,arkhan91/Rufous,137141161,SystemVerilog,Rufous,11,1,2019-09-21 19:09:30+00:00,[],https://api.github.com/licenses/mit
1884,https://github.com/Xenox473/Advanced-Encryption-Standard-Verilog-Design.git,2018-05-11 22:34:48+00:00,Verilog implementation of the AES proceedure,0,Xenox473/Advanced-Encryption-Standard-Verilog-Design,133094655,SystemVerilog,Advanced-Encryption-Standard-Verilog-Design,36,1,2022-02-20 17:48:27+00:00,[],
1885,https://github.com/zhelnio/vpm.git,2018-08-10 13:49:12+00:00,verilog pipeline macro,0,zhelnio/vpm,144291828,SystemVerilog,vpm,24,1,2021-05-16 22:21:22+00:00,[],https://api.github.com/licenses/mit
1886,https://github.com/rbrenner/Arquitetura-Final.git,2017-12-08 11:01:26+00:00,Trabalho Final de Arquitetura,1,rbrenner/Arquitetura-Final,113565257,SystemVerilog,Arquitetura-Final,29,0,2017-12-08 16:24:21+00:00,[],
1888,https://github.com/msaha27/Test_GitHub.git,2017-12-01 07:54:59+00:00,,0,msaha27/Test_GitHub,112711393,SystemVerilog,Test_GitHub,1,0,2017-12-01 07:55:44+00:00,[],
1889,https://github.com/keerthirajan03/uvm.git,2017-12-08 08:02:33+00:00,,1,keerthirajan03/uvm,113548477,SystemVerilog,uvm,75,0,2017-12-08 08:15:02+00:00,[],
1890,https://github.com/melt-umn/ableC-monto.git,2018-01-26 19:42:28+00:00,,0,melt-umn/ableC-monto,119095484,SystemVerilog,ableC-monto,14,0,2018-04-15 04:48:00+00:00,[],
1891,https://github.com/Rosekows/CSE141L.git,2018-03-06 23:10:12+00:00,,0,Rosekows/CSE141L,124149975,SystemVerilog,CSE141L,61,0,2018-03-13 21:49:21+00:00,[],
1892,https://github.com/shrutika6/Environement.git,2017-11-21 22:21:50+00:00,,0,shrutika6/Environement,111607964,SystemVerilog,Environement,8976,0,2017-11-30 06:10:30+00:00,[],
1893,https://github.com/quadmbk/System-Verilog.git,2018-02-11 07:23:57+00:00,,0,quadmbk/System-Verilog,121097232,SystemVerilog,System-Verilog,29,0,2018-07-08 11:45:47+00:00,[],
1894,https://github.com/nightcat33/mp3.git,2018-03-09 06:28:18+00:00,,0,nightcat33/mp3,124497848,SystemVerilog,mp3,2510,0,2018-03-09 06:31:18+00:00,[],
1895,https://github.com/tech4me/ECE342-Pipelined-CPU.git,2018-03-25 02:26:36+00:00,,0,tech4me/ECE342-Pipelined-CPU,126657714,SystemVerilog,ECE342-Pipelined-CPU,983,0,2018-04-11 21:48:21+00:00,[],
1896,https://github.com/albden/Practica2.git,2018-03-21 02:04:40+00:00,,0,albden/Practica2,126109104,SystemVerilog,Practica2,18,0,2018-03-22 02:07:55+00:00,[],
1897,https://github.com/miketsivinsky/fpga_slon.git,2018-04-13 17:32:55+00:00,,0,miketsivinsky/fpga_slon,129434364,SystemVerilog,fpga_slon,7,0,2018-04-16 16:37:59+00:00,[],
1898,https://github.com/svuvm12/uvm_reg_wr_rd_seq.git,2018-03-31 07:17:49+00:00,,1,svuvm12/uvm_reg_wr_rd_seq,127508801,SystemVerilog,uvm_reg_wr_rd_seq,7,0,2018-03-31 07:24:06+00:00,[],https://api.github.com/licenses/apache-2.0
1899,https://github.com/So-fia/ELO-212.git,2018-04-29 02:48:56+00:00,registro de nuestros códigos,0,So-fia/ELO-212,131460934,SystemVerilog,ELO-212,5,0,2018-04-29 02:51:32+00:00,[],
1900,https://github.com/jerry990/Noc.git,2017-12-05 15:24:27+00:00,,0,jerry990/Noc,113198870,SystemVerilog,Noc,4,0,2017-12-05 15:27:39+00:00,[],
1901,https://github.com/bengesoff/eeg-project.git,2017-11-22 10:27:57+00:00,,0,bengesoff/eeg-project,111669863,SystemVerilog,eeg-project,3,0,2017-11-22 10:30:09+00:00,[],
1902,https://github.com/malemaia/Arquitetura-de-Computadores.git,2017-12-08 12:08:48+00:00,Atividade no curso de Engenharia de Controle e Automação do curso de Arquitetura de Computadores,0,malemaia/Arquitetura-de-Computadores,113570536,SystemVerilog,Arquitetura-de-Computadores,28,0,2017-12-08 16:13:16+00:00,[],
1903,https://github.com/Arcturus314/e85_lab10.git,2017-11-29 04:52:49+00:00,,0,Arcturus314/e85_lab10,112428266,SystemVerilog,e85_lab10,357,0,2017-11-29 04:54:53+00:00,[],
1904,https://github.com/EquipoVeri/MDR_Practica2.git,2018-03-19 00:32:29+00:00,,0,EquipoVeri/MDR_Practica2,125781021,SystemVerilog,MDR_Practica2,27,0,2018-03-20 22:29:21+00:00,[],
1905,https://github.com/FilipDutina/pnrs-nv-counter.git,2018-01-19 10:41:08+00:00,,0,FilipDutina/pnrs-nv-counter,118113003,SystemVerilog,pnrs-nv-counter,7899,0,2018-01-19 10:44:02+00:00,[],
1906,https://github.com/eliza0x/OoOExperimentalCode.git,2018-02-16 16:03:18+00:00,,0,eliza0x/OoOExperimentalCode,121770180,SystemVerilog,OoOExperimentalCode,2,0,2018-02-16 16:05:41+00:00,[],
1907,https://github.com/SupritaK/ASIC-Winter-18.git,2018-01-25 22:22:08+00:00,,0,SupritaK/ASIC-Winter-18,118974651,SystemVerilog,ASIC-Winter-18,1,0,2018-01-25 22:22:15+00:00,[],
1908,https://github.com/gabchen3000/ece437.git,2018-02-08 19:45:37+00:00,Creating CPU from single cycle to two core,0,gabchen3000/ece437,120809357,SystemVerilog,ece437,7906,0,2018-12-04 21:56:54+00:00,[],
1909,https://github.com/eliza0x/minon.git,2018-02-21 09:19:21+00:00,,0,eliza0x/minon,122314995,SystemVerilog,minon,22,0,2018-02-25 12:52:33+00:00,[],
1910,https://github.com/sara-weber/ECE-337-Project.git,2018-03-22 00:10:38+00:00,"This project will contain all the Verliog files for our ECE 337 project, which is an ASIC Serpent encoder/decoder",0,sara-weber/ECE-337-Project,126255764,SystemVerilog,ECE-337-Project,1272,0,2018-06-08 03:20:25+00:00,[],
1911,https://github.com/RIC06X/RISC_V-Pipeline.git,2018-03-25 00:13:08+00:00,,0,RIC06X/RISC_V-Pipeline,126650817,SystemVerilog,RISC_V-Pipeline,5942,0,2018-03-25 00:18:37+00:00,[],https://api.github.com/licenses/mit
1912,https://github.com/MrCaiting/Lab-5.git,2018-02-13 06:23:47+00:00,Lab 5 for ECE 385: 8-bit Multiplier,0,MrCaiting/Lab-5,121346864,SystemVerilog,Lab-5,6019,0,2018-02-22 05:53:29+00:00,[],
1913,https://github.com/afiskon/fpga-sound.git,2018-01-14 10:57:27+00:00,Generating a sound using iCEstick,1,afiskon/fpga-sound,117422480,SystemVerilog,fpga-sound,5,0,2021-12-18 17:04:56+00:00,[],https://api.github.com/licenses/mit
1914,https://github.com/e3r8ick/ALUTaller.git,2018-03-13 15:53:52+00:00,,0,e3r8ick/ALUTaller,125076871,SystemVerilog,ALUTaller,7481,0,2018-03-20 01:36:24+00:00,[],
1915,https://github.com/kunalwadhwa22/matrix-multiplication-system-verilog.git,2018-03-12 19:55:58+00:00,matrix multiplication (with and without pipelining) using system verilog,0,kunalwadhwa22/matrix-multiplication-system-verilog,124943759,SystemVerilog,matrix-multiplication-system-verilog,11,0,2018-03-12 19:56:03+00:00,[],
1916,https://github.com/GinnyJI/I-O-processor.git,2018-04-10 21:41:23+00:00,A processor that interacts with both memory and I/O devices. Collaborated with Luke Shi.,0,GinnyJI/I-O-processor,128998177,SystemVerilog,I-O-processor,393,0,2018-04-13 15:06:25+00:00,[],
1917,https://github.com/progvault/de2-usb.git,2018-04-07 07:39:51+00:00,DE2 USB Controller for ISP1362,0,progvault/de2-usb,128507037,SystemVerilog,de2-usb,178,0,2018-04-12 00:00:14+00:00,[],https://api.github.com/licenses/gpl-3.0
1918,https://github.com/MeghaAgarwal1/Verification.git,2018-06-12 02:09:07+00:00,,0,MeghaAgarwal1/Verification,137004202,SystemVerilog,Verification,5,0,2018-06-21 04:40:39+00:00,[],
1919,https://github.com/MarlonCosta/ProcessadorPSD.git,2018-06-26 15:05:56+00:00,,0,MarlonCosta/ProcessadorPSD,138754956,SystemVerilog,ProcessadorPSD,14960,0,2018-08-06 18:18:30+00:00,[],
1920,https://github.com/rzkvitor/TrabalhoFinalArquitetura_.git,2018-07-05 21:37:52+00:00,,0,rzkvitor/TrabalhoFinalArquitetura_,139903141,SystemVerilog,TrabalhoFinalArquitetura_,6,0,2018-07-05 22:21:44+00:00,[],
1921,https://github.com/nachiket/papaa-rtl.git,2018-07-23 01:46:03+00:00,,1,nachiket/papaa-rtl,141947446,SystemVerilog,papaa-rtl,42,0,2018-07-23 22:35:57+00:00,[],
1922,https://github.com/mballance/uvmdev.git,2018-07-30 22:35:14+00:00,Library of UVM classes for making device-based scenario-level tests,0,mballance/uvmdev,142934887,SystemVerilog,uvmdev,18,0,2018-11-01 21:08:36+00:00,[],https://api.github.com/licenses/apache-2.0
1923,https://github.com/ammyblabla/comsys_final.git,2018-05-11 14:48:35+00:00,design CPU,0,ammyblabla/comsys_final,133052447,SystemVerilog,comsys_final,40,0,2018-06-07 14:10:49+00:00,[],
1924,https://github.com/umanggarg96/cellular_automaton_1d.git,2018-01-01 04:08:16+00:00,,0,umanggarg96/cellular_automaton_1d,115898556,SystemVerilog,cellular_automaton_1d,96,0,2018-01-01 04:21:06+00:00,"['fpga', 'verilog', 'systemverilog']",
1925,https://github.com/emcezet/pasic_project.git,2018-07-16 15:53:11+00:00,pasic_project,0,emcezet/pasic_project,141160900,SystemVerilog,pasic_project,371,0,2018-12-03 16:49:55+00:00,[],https://api.github.com/licenses/mit
1926,https://github.com/lzx97/Computer-Architecture-I.git,2018-02-04 06:25:13+00:00,,0,lzx97/Computer-Architecture-I,120160805,SystemVerilog,Computer-Architecture-I,371,0,2018-02-08 13:16:43+00:00,[],
1927,https://github.com/jgfn1/mips_cpu.git,2017-11-22 06:40:33+00:00,,0,jgfn1/mips_cpu,111646236,SystemVerilog,mips_cpu,5270,0,2019-11-14 01:38:58+00:00,[],https://api.github.com/licenses/apache-2.0
1928,https://github.com/EquipoVeri/Practica1.git,2018-02-20 01:00:35+00:00,,0,EquipoVeri/Practica1,122140728,SystemVerilog,Practica1,29,0,2018-02-25 23:27:18+00:00,[],
1929,https://github.com/smithd57/526-out-of-order-processor.git,2018-04-15 21:28:17+00:00,,0,smithd57/526-out-of-order-processor,129652422,SystemVerilog,526-out-of-order-processor,165169,0,2018-06-05 18:51:39+00:00,[],
1930,https://github.com/jmcoq/test.git,2018-04-15 08:27:03+00:00,,0,jmcoq/test,129591026,SystemVerilog,test,13,0,2018-04-15 21:12:55+00:00,[],
1931,https://github.com/ammar95/ECE-551.git,2018-04-21 18:22:38+00:00,FPGA implementation of a NN for Character Recognition,0,ammar95/ECE-551,130500945,SystemVerilog,ECE-551,11488,0,2018-05-03 09:26:37+00:00,[],
1932,https://github.com/jyothymj/uvm_skeleton.git,2017-12-21 20:30:59+00:00,,0,jyothymj/uvm_skeleton,115044552,SystemVerilog,uvm_skeleton,2,0,2017-12-27 18:40:02+00:00,[],
1933,https://github.com/MacDeath667/DPLL-res.git,2018-03-09 10:26:11+00:00,,0,MacDeath667/DPLL-res,124525576,SystemVerilog,DPLL-res,963,0,2018-03-09 10:28:17+00:00,[],
1934,https://github.com/robiln-UW/aws-files.git,2018-03-26 23:36:43+00:00,,0,robiln-UW/aws-files,126902380,SystemVerilog,aws-files,10873,0,2018-03-27 21:31:18+00:00,[],
1935,https://github.com/CE4301-ACI-IEE/proyecto-1.git,2018-03-24 20:33:56+00:00,"Proyecto 1 - Arquitectura de Computadores I - TEC, Semestre I, 2018.",0,CE4301-ACI-IEE/proyecto-1,126638008,SystemVerilog,proyecto-1,4147,0,2018-05-05 16:05:58+00:00,[],
1936,https://github.com/prateekmohan1/i2c.git,2018-03-25 01:36:55+00:00,,0,prateekmohan1/i2c,126655137,SystemVerilog,i2c,12,0,2018-03-25 01:37:17+00:00,[],
1937,https://github.com/praveenkhemalapure/CAN-Transmitter-design.git,2018-03-31 19:18:02+00:00,,0,praveenkhemalapure/CAN-Transmitter-design,127563432,SystemVerilog,CAN-Transmitter-design,40,0,2018-04-01 03:48:27+00:00,[],
1938,https://github.com/dqtblldvn/UVM-Examples.git,2018-07-31 07:16:55+00:00,Some examples of verification using UVM,1,dqtblldvn/UVM-Examples,142977121,SystemVerilog,UVM-Examples,3589,0,2018-08-22 18:29:02+00:00,[],
1939,https://github.com/tallerDisenoDigital/laboratorio5.git,2018-04-24 16:40:02+00:00,,2,tallerDisenoDigital/laboratorio5,130884844,SystemVerilog,laboratorio5,9,0,2018-05-20 09:16:12+00:00,[],
1940,https://github.com/matthewSkipworth/2-Digit-Adder-Assignment.git,2018-04-27 06:31:22+00:00,TCES330 Homework2,0,matthewSkipworth/2-Digit-Adder-Assignment,131255436,SystemVerilog,2-Digit-Adder-Assignment,8684,0,2018-04-27 06:31:37+00:00,[],
1941,https://github.com/VivienGit/vsn_labo4.git,2018-04-26 12:13:15+00:00,,0,VivienGit/vsn_labo4,131150679,SystemVerilog,vsn_labo4,690,0,2018-04-26 14:17:31+00:00,[],
1942,https://github.com/kevinliutong/lowRISCv5.git,2018-04-26 02:23:36+00:00,,0,kevinliutong/lowRISCv5,131088454,SystemVerilog,lowRISCv5,3377,0,2020-09-18 06:18:45+00:00,[],
1943,https://github.com/Rinatum/CubeRoot.git,2018-04-27 18:44:24+00:00,Project that allows to calculate cube root from integer number using FPGA-bord,0,Rinatum/CubeRoot,131333223,SystemVerilog,CubeRoot,8347,0,2018-04-27 19:01:44+00:00,[],
1944,https://github.com/Dmitriy0111/ETH10base_t.git,2018-05-18 00:38:25+00:00,Ethernet 10base-t system verilog code,0,Dmitriy0111/ETH10base_t,133883021,SystemVerilog,ETH10base_t,126,0,2020-02-25 13:21:08+00:00,"['systemverilog', 'ethernet', 'ethernet10base-t']",
1945,https://github.com/jozue59/Digital.git,2018-05-18 01:37:46+00:00,Verilog,0,jozue59/Digital,133887674,SystemVerilog,Digital,49,0,2018-05-26 12:32:11+00:00,[],
1946,https://github.com/Geflag/watermark.git,2018-08-17 02:35:13+00:00,,0,Geflag/watermark,145062438,SystemVerilog,watermark,70,0,2018-08-18 07:28:30+00:00,[],
1947,https://github.com/sumedha1/uvm_examples.git,2018-06-24 02:04:26+00:00,Code samples for uvm,0,sumedha1/uvm_examples,138446317,SystemVerilog,uvm_examples,9,0,2021-08-24 22:13:59+00:00,[],
1948,https://github.com/Pepe2295/prueba.git,2018-05-22 16:25:28+00:00,,0,Pepe2295/prueba,134443288,SystemVerilog,prueba,612,0,2019-05-29 04:31:26+00:00,[],
1949,https://github.com/rey-rubio/Parallel-MAC-generator-for-Deep-learning.git,2017-12-07 22:38:13+00:00,,0,rey-rubio/Parallel-MAC-generator-for-Deep-learning,113505672,SystemVerilog,Parallel-MAC-generator-for-Deep-learning,7,0,2018-03-05 23:12:05+00:00,[],
1950,https://github.com/kkangle/QuadCopter.git,2017-12-07 23:35:53+00:00,ECE 551 Final Project,0,kkangle/QuadCopter,113509362,SystemVerilog,QuadCopter,246,0,2017-12-07 23:39:54+00:00,[],
1951,https://github.com/gabrielrb1/Trabalho-2---ArqComp.git,2017-12-09 00:02:39+00:00,Segunda atividade avaliativa da disciplina de Arquitetura de Computadores,0,gabrielrb1/Trabalho-2---ArqComp,113628038,SystemVerilog,Trabalho-2---ArqComp,430,0,2017-12-10 22:28:15+00:00,[],
1952,https://github.com/fionazeng/Flappy-Bird-FPGA.git,2018-03-17 22:42:45+00:00,Flappy Bird Game implemented on FPGA board,0,fionazeng/Flappy-Bird-FPGA,125674753,SystemVerilog,Flappy-Bird-FPGA,1075,0,2018-03-21 03:56:31+00:00,[],
1953,https://github.com/jakemckenzie/HalleyMethodSQRT.git,2018-06-09 09:00:31+00:00,"A method for finding square root with cubic convergence. Most square root functions implemented in hardware are either done so by a lookup table or by newton's method. These modules were written as an experiment to show, with not much more hardware, you could offer more accuracy than either of the two methods commonly used in practice.",0,jakemckenzie/HalleyMethodSQRT,136707420,SystemVerilog,HalleyMethodSQRT,15,0,2018-06-17 00:45:26+00:00,[],https://api.github.com/licenses/mit
1954,https://github.com/BinaryLust/soc32e.git,2018-05-24 02:16:11+00:00,,0,BinaryLust/soc32e,134649084,SystemVerilog,soc32e,1290,0,2019-11-08 06:41:48+00:00,[],
1955,https://github.com/jomonkjoy/Xilinx-7series-Design.git,2018-01-17 18:17:56+00:00,Synthesis optimized Design for Xilinx 7 Series CLB resources,1,jomonkjoy/Xilinx-7series-Design,117874728,SystemVerilog,Xilinx-7series-Design,28,0,2018-05-07 17:31:47+00:00,[],
1956,https://github.com/selimfirat/game-of-codes.git,2018-01-09 21:37:53+00:00,Bilkent University Fall 2017 CS 223 Digital Design Project,0,selimfirat/game-of-codes,116873558,SystemVerilog,game-of-codes,582,0,2020-12-14 04:50:23+00:00,[],
1957,https://github.com/connorwiniarczyk/VerilogUtilityModules.git,2018-02-11 16:22:19+00:00,,0,connorwiniarczyk/VerilogUtilityModules,121142027,SystemVerilog,VerilogUtilityModules,3,0,2021-01-06 20:58:06+00:00,[],
1958,https://github.com/aamirrasheed/sha256.git,2018-02-13 20:07:31+00:00,,0,aamirrasheed/sha256,121430669,SystemVerilog,sha256,46226,0,2018-02-13 20:11:07+00:00,[],
1959,https://github.com/mafull/soc-design-project.git,2018-02-14 17:39:16+00:00,ELEC6235 - SoC Design Project,0,mafull/soc-design-project,121540763,SystemVerilog,soc-design-project,8,0,2018-03-15 09:07:18+00:00,[],
1960,https://github.com/dionisisfil/fpga_mic_to_vga.git,2018-02-15 20:48:58+00:00,,0,dionisisfil/fpga_mic_to_vga,121681099,SystemVerilog,fpga_mic_to_vga,4,0,2018-02-15 22:36:50+00:00,[],
1961,https://github.com/naffin/ee620_final_project.git,2017-12-07 04:01:50+00:00,verifying the LC-3 ,0,naffin/ee620_final_project,113401004,SystemVerilog,ee620_final_project,33,0,2017-12-07 04:07:17+00:00,[],
1962,https://github.com/akshayraj17/USB-2.0-to-Ethernet-Bridge.git,2017-12-10 21:29:23+00:00,,0,akshayraj17/USB-2.0-to-Ethernet-Bridge,113784981,SystemVerilog,USB-2.0-to-Ethernet-Bridge,45,0,2017-12-10 21:30:45+00:00,[],
1963,https://github.com/svenka3/vunit_icarus.git,2017-12-02 12:09:00+00:00,VUnit on free Icarus Verilog simulator,1,svenka3/vunit_icarus,112839165,SystemVerilog,vunit_icarus,21,0,2017-12-02 12:14:44+00:00,[],https://api.github.com/licenses/mpl-2.0
1964,https://github.com/keeees/ECE-385-FINAL-PROJECT.git,2017-12-02 20:13:03+00:00,,0,keeees/ECE-385-FINAL-PROJECT,112873556,SystemVerilog,ECE-385-FINAL-PROJECT,113860,0,2018-09-26 16:47:14+00:00,[],
1965,https://github.com/Hass-Ayman/Graduation-Project.git,2017-12-02 02:58:18+00:00,SVA-Based Techniques To Generate Automatic Directed Test-Cases,0,Hass-Ayman/Graduation-Project,112807697,SystemVerilog,Graduation-Project,91,0,2018-04-12 00:26:06+00:00,[],
1966,https://github.com/aadilahmed/Secure-Hash-Algorithms-Digital-Design-Project.git,2017-12-16 04:30:13+00:00,ECE 111 Final Project,0,aadilahmed/Secure-Hash-Algorithms-Digital-Design-Project,114433342,SystemVerilog,Secure-Hash-Algorithms-Digital-Design-Project,12701,0,2018-04-08 00:51:04+00:00,[],
1967,https://github.com/pulp-platform/per2axi.git,2018-02-26 15:58:02+00:00,Peripheral Bus to AXI adapter,2,pulp-platform/per2axi,122993148,SystemVerilog,per2axi,42,0,2023-07-25 14:15:19+00:00,[],
1968,https://github.com/Dsalce/SystemVerylog-SOC.git,2018-03-04 22:15:03+00:00,,0,Dsalce/SystemVerylog-SOC,123834240,SystemVerilog,SystemVerylog-SOC,27,0,2018-03-04 22:21:34+00:00,[],
1969,https://github.com/jerrylee1697/RISCV_Processor_Pipeline.git,2018-03-15 03:46:06+00:00,,0,jerrylee1697/RISCV_Processor_Pipeline,125308954,SystemVerilog,RISCV_Processor_Pipeline,398,0,2019-01-19 07:05:40+00:00,[],
1970,https://github.com/pulp-platform/ariane_timer.git,2018-03-15 10:56:38+00:00,Timer compatible with RISC-V Privilege Specification 1.11 (WIP),0,pulp-platform/ariane_timer,125353875,SystemVerilog,ariane_timer,25,0,2023-01-28 20:16:50+00:00,[],
1971,https://github.com/EquipoVeri/BoothMultiplier.git,2018-03-16 06:46:18+00:00,,0,EquipoVeri/BoothMultiplier,125475260,SystemVerilog,BoothMultiplier,11,0,2018-03-18 22:19:10+00:00,[],
1972,https://github.com/andernil/DDS2.git,2018-03-16 13:05:18+00:00,Exercises and project for TFE4171 - Design of Digital Systems 2,1,andernil/DDS2,125517430,SystemVerilog,DDS2,93746,0,2018-05-29 14:05:33+00:00,[],
1973,https://github.com/rameezkt/Verification.git,2018-03-23 12:16:10+00:00,This repo is used to learn Hrdware design and verification,0,rameezkt/Verification,126480862,SystemVerilog,Verification,662,0,2018-03-23 12:34:06+00:00,[],
1974,https://github.com/amrm121/InfraHw.git,2018-04-12 03:18:40+00:00,,0,amrm121/InfraHw,129186487,SystemVerilog,InfraHw,14033,0,2018-04-16 22:53:06+00:00,[],https://api.github.com/licenses/gpl-3.0
1975,https://github.com/uKarol/BASYS-3.git,2018-08-04 21:11:04+00:00,Game in Verilog,0,uKarol/BASYS-3,143563260,SystemVerilog,BASYS-3,132,0,2018-08-10 12:17:00+00:00,[],
1976,https://github.com/mitvmorabia/Verification-of-LCD-Controller.git,2018-07-14 00:17:42+00:00,Verification of LPC24XX LCD controller by implementing the complete UVM test bench. 5 DUTS where verified and reports were generated using a Python Script ,0,mitvmorabia/Verification-of-LCD-Controller,140903275,SystemVerilog,Verification-of-LCD-Controller,7,0,2018-10-24 07:01:59+00:00,[],
1977,https://github.com/LuoGuibin-free/test_project.git,2018-04-18 15:16:07+00:00,this is a test project ,0,LuoGuibin-free/test_project,130081823,SystemVerilog,test_project,18,0,2018-04-18 15:56:45+00:00,[],https://api.github.com/licenses/gpl-3.0
1978,https://github.com/e3r8ick/Ruperta.git,2018-05-15 15:57:21+00:00,Proyecto Final Taller de Digitales,1,e3r8ick/Ruperta,133540122,SystemVerilog,Ruperta,37,0,2018-05-31 16:24:54+00:00,[],
1979,https://github.com/nadaved1/SystemVerilog-Examples.git,2018-05-29 05:33:41+00:00,my code examples,0,nadaved1/SystemVerilog-Examples,135245658,SystemVerilog,SystemVerilog-Examples,144,0,2019-11-12 21:12:01+00:00,[],https://api.github.com/licenses/gpl-3.0
1980,https://github.com/HarishAnil/LC3-Mircrocontroller--ASIC-Verification.git,2018-04-24 03:59:27+00:00,,0,HarishAnil/LC3-Mircrocontroller--ASIC-Verification,130793944,SystemVerilog,LC3-Mircrocontroller--ASIC-Verification,630,0,2018-04-24 04:06:28+00:00,[],
1981,https://github.com/atilaromero/pucrs-2018-vfsd-utopia.git,2018-05-05 10:30:48+00:00,,0,atilaromero/pucrs-2018-vfsd-utopia,132237936,SystemVerilog,pucrs-2018-vfsd-utopia,190,0,2018-05-05 20:55:50+00:00,[],
1982,https://github.com/Felipiuks/examen.git,2018-05-09 02:53:45+00:00,,0,Felipiuks/examen,132693244,SystemVerilog,examen,10,0,2018-05-09 02:59:17+00:00,[],
1983,https://github.com/MahsaLayeghi/Computer-Architecture.git,2018-07-17 14:46:14+00:00,Design and Implementation of an ARM Multicycle CPU,0,MahsaLayeghi/Computer-Architecture,141303569,SystemVerilog,Computer-Architecture,12618,0,2018-08-29 17:02:25+00:00,[],
1984,https://github.com/chbernar/CSE141L.git,2018-06-15 21:25:23+00:00,,0,chbernar/CSE141L,137533216,SystemVerilog,CSE141L,16277,0,2018-06-15 21:31:15+00:00,[],
1985,https://github.com/wyamamo/UVM101.git,2018-07-17 14:17:18+00:00,,0,wyamamo/UVM101,141299764,SystemVerilog,UVM101,4,0,2018-07-29 12:57:03+00:00,[],
1986,https://github.com/gcwill70/Hardware-Design.git,2017-12-27 22:33:45+00:00,Final project from Purdue's ASIC Design course.,0,gcwill70/Hardware-Design,115562698,SystemVerilog,Hardware-Design,2722,0,2017-12-27 22:34:33+00:00,[],
1987,https://github.com/semihteker/FLAB.git,2017-12-20 01:08:23+00:00,FPGA version of  Flappy Bird,0,semihteker/FLAB,114827059,SystemVerilog,FLAB,107225,0,2019-06-14 23:51:15+00:00,[],https://api.github.com/licenses/mit
1988,https://github.com/whsieh2/ECE298.git,2018-01-05 23:12:43+00:00,Digital Systems Laboratory,0,whsieh2/ECE298,116436309,SystemVerilog,ECE298,4623,0,2018-01-06 02:06:10+00:00,[],
1989,https://github.com/sonu-m/start.git,2018-01-17 07:55:17+00:00,trial repo,0,sonu-m/start,117803811,SystemVerilog,start,2,0,2018-01-17 08:07:08+00:00,[],
1990,https://github.com/dillonhuff/CGRA_coreir.git,2018-03-21 18:22:54+00:00,CGRA design converted to CoreIR,2,dillonhuff/CGRA_coreir,126222854,SystemVerilog,CGRA_coreir,5998,0,2018-04-22 22:21:58+00:00,[],
1991,https://github.com/u7karsh/745_lc3_verif.git,2018-03-24 17:40:38+00:00,,0,u7karsh/745_lc3_verif,126624404,SystemVerilog,745_lc3_verif,94,0,2018-07-13 07:54:04+00:00,[],
1992,https://github.com/yifax/RISC-V-SingleCycle.git,2018-03-25 01:33:18+00:00,SystemVerilog realization of RISC-V processor of Single Cycle idea,0,yifax/RISC-V-SingleCycle,126654953,SystemVerilog,RISC-V-SingleCycle,658,0,2018-06-22 04:59:41+00:00,[],
1993,https://github.com/matthewSkipworth/TCES330-Homework1.git,2018-04-11 22:46:21+00:00,,0,matthewSkipworth/TCES330-Homework1,129162795,SystemVerilog,TCES330-Homework1,5199,0,2018-04-11 22:46:39+00:00,[],
1994,https://github.com/joss11mar/hello-world.git,2018-03-19 23:46:54+00:00,Tutorial,0,joss11mar/hello-world,125934830,SystemVerilog,hello-world,3,0,2018-09-20 18:59:45+00:00,[],
1995,https://github.com/kushal-pdx/SV_Proj.git,2018-02-19 01:24:00+00:00,This repository is created based on the requirement of Final group project for Emulation. ,0,kushal-pdx/SV_Proj,122007031,SystemVerilog,SV_Proj,10,0,2018-02-21 17:54:45+00:00,[],
1996,https://github.com/shyamrekhawar/LCD_CONTROLLER.git,2018-02-20 00:14:28+00:00,Verification of LCD Controller,0,shyamrekhawar/LCD_CONTROLLER,122137396,SystemVerilog,LCD_CONTROLLER,73,0,2018-02-20 00:17:39+00:00,[],
1997,https://github.com/chencarl/tinyalu.git,2018-03-31 13:41:46+00:00,,0,chencarl/tinyalu,127535486,SystemVerilog,tinyalu,27,0,2018-04-19 14:03:31+00:00,[],
1998,https://github.com/jordanwu97/ECE385.git,2017-11-30 00:33:29+00:00,,0,jordanwu97/ECE385,112544104,SystemVerilog,ECE385,2650,0,2018-02-05 22:25:37+00:00,[],
1999,https://github.com/Omar1vega/RISC-V.git,2018-04-18 21:08:01+00:00,Single cycle 32-bit RISC-V processor written using System Verilog hardware description language,0,Omar1vega/RISC-V,130122062,SystemVerilog,RISC-V,638,0,2018-04-18 21:16:24+00:00,[],
2000,https://github.com/HaoyuFoogueir/Recorder.git,2018-04-14 00:16:47+00:00,,0,HaoyuFoogueir/Recorder,129466059,SystemVerilog,Recorder,6,0,2018-04-14 00:17:24+00:00,[],
2001,https://github.com/xuxiayu/Calculator-3.git,2018-04-21 20:19:47+00:00,ECE590: System Verification,0,xuxiayu/Calculator-3,130509138,SystemVerilog,Calculator-3,96,0,2018-04-26 10:01:37+00:00,[],
2002,https://github.com/RonnyZF/Riscv_RV32i_Processor.git,2018-03-18 02:21:20+00:00,,1,RonnyZF/Riscv_RV32i_Processor,125685746,SystemVerilog,Riscv_RV32i_Processor,100,0,2019-01-10 15:36:50+00:00,[],
2003,https://github.com/amitshuvo/amit_nsl13.git,2018-02-06 07:01:26+00:00,,0,amitshuvo/amit_nsl13,120415057,SystemVerilog,amit_nsl13,16,0,2018-02-06 07:03:27+00:00,[],https://api.github.com/licenses/gpl-3.0
2004,https://github.com/Ndancejic/CPU.git,2018-02-14 08:05:43+00:00,Verilog code for ARM like processor. for computer architecture class. ,0,Ndancejic/CPU,121485734,SystemVerilog,CPU,2447,0,2018-02-14 08:49:33+00:00,[],
2005,https://github.com/dman996/554_CPU.git,2018-03-22 22:28:38+00:00,Simple 5 stage MIPS CPU for ECE 554,1,dman996/554_CPU,126402301,SystemVerilog,554_CPU,243,0,2018-04-27 02:48:47+00:00,[],
2006,https://github.com/kietb/ECE271-finalproject.git,2017-11-22 18:48:09+00:00,,0,kietb/ECE271-finalproject,111720827,SystemVerilog,ECE271-finalproject,20,0,2017-11-28 01:49:15+00:00,[],
2007,https://github.com/gauravairan/test1.git,2017-11-28 13:34:03+00:00,,0,gauravairan/test1,112339552,SystemVerilog,test1,7,0,2017-11-28 13:35:01+00:00,[],
2008,https://github.com/svuvm12/mem_all_wr_rd.git,2018-03-28 11:44:25+00:00,,0,svuvm12/mem_all_wr_rd,127131851,SystemVerilog,mem_all_wr_rd,9,0,2018-03-29 05:16:15+00:00,[],https://api.github.com/licenses/apache-2.0
2009,https://github.com/meyerf93/bleanalyser.git,2018-05-22 13:59:39+00:00,bleanalyser in system verilog,0,meyerf93/bleanalyser,134423556,SystemVerilog,bleanalyser,5337,0,2018-06-07 20:22:38+00:00,[],
2010,https://github.com/matthewSkipworth/UART-Assignment.git,2018-05-23 04:12:16+00:00,The transmitter portion of a UART module,0,matthewSkipworth/UART-Assignment,134512268,SystemVerilog,UART-Assignment,3,0,2019-05-31 04:46:15+00:00,[],
2011,https://github.com/Tovaral/ECE-272-Section-5.git,2018-05-17 22:28:48+00:00,,0,Tovaral/ECE-272-Section-5,133874715,SystemVerilog,ECE-272-Section-5,7,0,2018-05-17 22:31:30+00:00,[],
2012,https://github.com/rhos/fpga-conway.git,2018-05-29 20:25:51+00:00,,0,rhos/fpga-conway,135349195,SystemVerilog,fpga-conway,8,0,2018-12-19 00:35:11+00:00,[],
2013,https://github.com/mmshabab90/dds2.git,2018-04-03 12:34:52+00:00,dds2 project contents,0,mmshabab90/dds2,127905619,SystemVerilog,dds2,13,0,2018-04-03 12:37:12+00:00,[],
2014,https://github.com/bartuatabek/Pseudo-Random-Generator.git,2018-04-09 20:54:41+00:00,Bilkent CS 223 – Digital Design Project,0,bartuatabek/Pseudo-Random-Generator,128832574,SystemVerilog,Pseudo-Random-Generator,2,0,2023-01-28 14:01:55+00:00,[],
2015,https://github.com/SandraSherif/mips-single-cycle.git,2018-04-28 07:39:09+00:00,mips single cycle,0,SandraSherif/mips-single-cycle,131385911,SystemVerilog,mips-single-cycle,9,0,2018-04-28 07:42:26+00:00,[],
2016,https://github.com/SandraSherif/alu-.git,2018-04-28 07:42:18+00:00,alu mips,0,SandraSherif/alu-,131386167,SystemVerilog,alu-,35,0,2018-04-28 07:44:17+00:00,[],
2017,https://github.com/tarcito/riscv.git,2018-07-24 16:26:02+00:00,,0,tarcito/riscv,142184817,SystemVerilog,riscv,13,0,2018-07-24 16:43:23+00:00,[],
2018,https://github.com/tejas4812/bubble_sort.git,2018-05-05 06:17:59+00:00,Bubble sort in verilog,0,tejas4812/bubble_sort,132220701,SystemVerilog,bubble_sort,3,0,2018-05-05 06:23:19+00:00,[],
2019,https://github.com/Run4curry/141L.git,2018-05-10 19:23:29+00:00,idek,0,Run4curry/141L,132944921,SystemVerilog,141L,87,0,2018-12-05 05:41:27+00:00,[],
2020,https://github.com/LeandrodLima/LOAC.git,2018-07-02 13:25:11+00:00,,0,LeandrodLima/LOAC,139447097,SystemVerilog,LOAC,2424,0,2018-07-02 13:26:14+00:00,[],
2021,https://github.com/Estevaonf/TrabalhoFinalArquitetura.git,2018-07-05 22:22:04+00:00,,1,Estevaonf/TrabalhoFinalArquitetura,139906211,SystemVerilog,TrabalhoFinalArquitetura,27,0,2018-12-17 19:35:23+00:00,[],
2022,https://github.com/WendongZhang1995/test.git,2018-07-19 07:33:28+00:00,,0,WendongZhang1995/test,141541711,SystemVerilog,test,22,0,2018-07-19 08:58:52+00:00,[],
2023,https://github.com/shanwadnaveen/linked_lists.git,2018-07-15 18:03:39+00:00,,0,shanwadnaveen/linked_lists,141047450,SystemVerilog,linked_lists,3,0,2018-07-27 05:00:29+00:00,[],
2024,https://github.com/yaus/phoenix-riscv.git,2018-06-14 16:26:27+00:00,A RISC-V Core open source project,0,yaus/phoenix-riscv,137382729,SystemVerilog,phoenix-riscv,4,0,2018-07-17 14:06:28+00:00,[],https://api.github.com/licenses/bsd-3-clause
2025,https://github.com/Teesh/ECE411_Syrup_Sandwiches.git,2018-06-05 13:01:33+00:00,,0,Teesh/ECE411_Syrup_Sandwiches,136178138,SystemVerilog,ECE411_Syrup_Sandwiches,17697,0,2018-06-05 13:06:17+00:00,[],
2026,https://github.com/barisc97/Game_of_Codes.git,2018-07-10 19:35:27+00:00,,0,barisc97/Game_of_Codes,140479007,SystemVerilog,Game_of_Codes,846,0,2018-07-10 19:48:55+00:00,[],
2027,https://github.com/wangyaobsz/LiteCoin_FPGA_Miner.git,2018-06-06 02:01:02+00:00,,0,wangyaobsz/LiteCoin_FPGA_Miner,136257647,SystemVerilog,LiteCoin_FPGA_Miner,2191,0,2024-01-10 05:04:31+00:00,[],
2028,https://github.com/samrjack/551_SNN.git,2018-05-07 19:55:22+00:00,Final project for UW Madison ECE 551.,0,samrjack/551_SNN,132509911,SystemVerilog,551_SNN,118438,0,2024-02-26 02:55:51+00:00,['neural-network'],
2029,https://github.com/siberiaq/Syntacore_Lab1.git,2017-12-20 15:35:05+00:00,"3 вариант, кроссбар 2х2 с фиксом приоритета",0,siberiaq/Syntacore_Lab1,114903290,SystemVerilog,Syntacore_Lab1,1,0,2017-12-20 15:35:15+00:00,[],
2030,https://github.com/pinarayaz/game-of-codes.git,2017-12-21 14:04:16+00:00,A game of codes! (that works with Beti Board and BASYS3),0,pinarayaz/game-of-codes,115012067,SystemVerilog,game-of-codes,1114,0,2018-01-23 12:08:08+00:00,[],
2031,https://github.com/keerthirajan03/systemverilog.git,2017-12-08 07:37:35+00:00,,0,keerthirajan03/systemverilog,113546119,SystemVerilog,systemverilog,29,0,2017-12-08 07:45:37+00:00,[],
2032,https://github.com/naffin/ee620_final.git,2017-12-08 21:00:32+00:00,,0,naffin/ee620_final,113616921,SystemVerilog,ee620_final,1820,0,2017-12-08 21:04:18+00:00,[],
2033,https://github.com/jomonkjoy/FIR-Filter.git,2017-11-25 18:32:21+00:00,FIR Filter Add/Shift implementation using Inverted form,1,jomonkjoy/FIR-Filter,112025807,SystemVerilog,FIR-Filter,24,0,2018-05-12 01:03:24+00:00,[],https://api.github.com/licenses/gpl-3.0
2034,https://github.com/Arcturus314/e85_lab_11.git,2017-11-30 21:49:29+00:00,,0,Arcturus314/e85_lab_11,112664214,SystemVerilog,e85_lab_11,1511,0,2017-11-30 21:50:22+00:00,[],
2035,https://github.com/minabedwany/Micro_Processor_SystemVerilog.git,2017-12-05 05:11:28+00:00,,0,minabedwany/Micro_Processor_SystemVerilog,113135644,SystemVerilog,Micro_Processor_SystemVerilog,10439,0,2019-10-26 08:22:23+00:00,[],
2036,https://github.com/sparksfly000/riscv-rlwe-sdk.git,2018-03-07 00:25:02+00:00,,2,sparksfly000/riscv-rlwe-sdk,124155641,SystemVerilog,riscv-rlwe-sdk,1747,0,2018-03-13 17:36:31+00:00,[],
2037,https://github.com/enterstudio/TheFormidableHiena.git,2018-03-06 04:51:41+00:00,,0,enterstudio/TheFormidableHiena,124022540,SystemVerilog,TheFormidableHiena,171598,0,2020-03-24 02:21:06+00:00,[],
2038,https://github.com/aleksanderKNes/div.git,2018-03-24 19:32:50+00:00,,0,aleksanderKNes/div,126633578,SystemVerilog,div,9,0,2018-03-25 13:19:14+00:00,[],
2039,https://github.com/jomonkjoy/Microsemi-SmartFusion2-Device.git,2018-02-17 14:35:53+00:00,Synthesis optimized Design for Microsemi SmartFusion2 Device resources,0,jomonkjoy/Microsemi-SmartFusion2-Device,121862458,SystemVerilog,Microsemi-SmartFusion2-Device,19,0,2018-02-17 15:15:02+00:00,[],
2040,https://github.com/CarlosW/Practica2_Verificacion.git,2018-03-21 02:04:56+00:00,Practica 2 de la materia Diseño y Verificación,0,CarlosW/Practica2_Verificacion,126109143,SystemVerilog,Practica2_Verificacion,5,0,2018-03-21 21:10:01+00:00,[],
2041,https://github.com/Shantanu25/async_fifo.git,2018-03-19 04:03:15+00:00,Asynchronous FIFO for synchronizing multiple bits accross different clock domains (especially going from fast clock to slow clock domain).,0,Shantanu25/async_fifo,125799604,SystemVerilog,async_fifo,0,0,2018-03-19 04:15:51+00:00,[],
2042,https://github.com/IP-IPA/mchanipa.git,2018-04-02 10:41:48+00:00,,1,IP-IPA/mchanipa,127742829,SystemVerilog,mchanipa,102,0,2018-04-02 10:43:47+00:00,[],
2043,https://github.com/jnestor/valid_ready.git,2018-07-12 21:31:31+00:00,SystemVerilog implementation of Valid-Ready Interface,0,jnestor/valid_ready,140766675,SystemVerilog,valid_ready,3,0,2018-07-13 14:47:54+00:00,[],
2044,https://github.com/salcides/Arquitetura-de-Computadores.git,2018-04-11 05:15:29+00:00,Engenharia de Controle e Automação - IFES - 2018/01,0,salcides/Arquitetura-de-Computadores,129037899,SystemVerilog,Arquitetura-de-Computadores,119,0,2018-07-05 18:53:27+00:00,"['ula', 'assembly', 'arm']",
2045,https://github.com/ujtakk/kinsys.git,2018-04-17 15:34:03+00:00,,1,ujtakk/kinsys,129926682,SystemVerilog,kinsys,792,0,2018-04-17 15:37:22+00:00,[],https://api.github.com/licenses/gpl-2.0
2046,https://github.com/youssef-sherif/mips-single-cycle.git,2018-04-17 13:54:16+00:00,,1,youssef-sherif/mips-single-cycle,129912362,SystemVerilog,mips-single-cycle,81,0,2018-05-26 03:05:55+00:00,[],
2047,https://github.com/nardecchia/Final-Project-551.git,2018-04-20 01:16:01+00:00,,0,nardecchia/Final-Project-551,130290687,SystemVerilog,Final-Project-551,1,0,2018-04-20 01:31:42+00:00,[],
2048,https://github.com/pshanmu2/trial_repo.git,2018-07-08 00:32:13+00:00,,0,pshanmu2/trial_repo,140126457,SystemVerilog,trial_repo,1,0,2018-07-08 00:39:41+00:00,[],
2049,https://github.com/lisc-isa/zero-lisc.git,2018-07-10 09:31:43+00:00,,0,lisc-isa/zero-lisc,140409588,SystemVerilog,zero-lisc,59,0,2018-07-10 09:33:20+00:00,[],
2050,https://github.com/matthewSkipworth/HELLO-Finite-State-Machine.git,2018-05-15 19:10:26+00:00,"In this Assignment we go through the steps of describing a finite state machine to scroll ""HELLO"" accross the Altera DE2-115 board.",0,matthewSkipworth/HELLO-Finite-State-Machine,133561716,SystemVerilog,HELLO-Finite-State-Machine,11127,0,2019-05-31 04:43:03+00:00,[],
2051,https://github.com/sbiswa2/memc.git,2018-05-27 10:31:19+00:00,High quality memory controller,0,sbiswa2/memc,135036540,SystemVerilog,memc,3,0,2018-05-27 23:43:23+00:00,[],
2052,https://github.com/jeanlucthumm/fm2030.git,2018-05-28 07:24:19+00:00,FM2030 CPU and assembler,0,jeanlucthumm/fm2030,135124800,SystemVerilog,fm2030,79,0,2018-06-19 03:11:36+00:00,[],
2053,https://github.com/adhebbar/lab6ECE.git,2018-04-27 00:52:41+00:00,yes,0,adhebbar/lab6ECE,131226110,SystemVerilog,lab6ECE,2219,0,2018-04-27 03:08:15+00:00,[],
2054,https://github.com/alitoufighi/multicycle-processor.git,2018-06-17 09:33:07+00:00,"A Simple Multi-Cycle Processor in System Verilog - Computer Architecture course 3962, Univesity of Tehran, School of ECE",0,alitoufighi/multicycle-processor,137643406,SystemVerilog,multicycle-processor,4,0,2018-07-08 18:02:44+00:00,[],
2055,https://github.com/nimish15shah/Arithmetic_Operators.git,2018-08-08 11:57:36+00:00,,0,nimish15shah/Arithmetic_Operators,144007262,SystemVerilog,Arithmetic_Operators,12,0,2019-06-25 10:02:49+00:00,[],
2056,https://github.com/sloanyliu/RISC-V.git,2018-06-09 20:26:12+00:00,RISC-V Processor in Verilog,0,sloanyliu/RISC-V,136755527,SystemVerilog,RISC-V,16,0,2018-06-21 22:49:39+00:00,[],
2057,https://github.com/xver/handshakeD-shunt.git,2018-06-13 21:42:45+00:00,,0,xver/handshakeD-shunt,137274515,SystemVerilog,handshakeD-shunt,32,0,2019-06-11 21:01:35+00:00,[],
2058,https://github.com/clowak/NAND-Flash-Memory-Controller-Verification.git,2018-07-19 00:22:46+00:00,,0,clowak/NAND-Flash-Memory-Controller-Verification,141503763,SystemVerilog,NAND-Flash-Memory-Controller-Verification,772,0,2018-07-19 00:22:59+00:00,[],
2059,https://github.com/chl218/Digital-Systems-Laboratory.git,2018-08-18 04:11:07+00:00,Digital system designs with SystemVerilog,0,chl218/Digital-Systems-Laboratory,145189026,SystemVerilog,Digital-Systems-Laboratory,1019,0,2018-09-04 00:26:02+00:00,[],
2060,https://github.com/Shaeto/rgb-led-matrix.git,2017-12-18 13:34:54+00:00,rgb led matrix driver,0,Shaeto/rgb-led-matrix,114644959,SystemVerilog,rgb-led-matrix,61,0,2017-12-23 21:53:52+00:00,[],
2061,https://github.com/xitorzx/single-cycle-cpu.git,2018-01-08 13:41:21+00:00,,0,xitorzx/single-cycle-cpu,116681535,SystemVerilog,single-cycle-cpu,152,0,2018-01-09 17:35:55+00:00,[],
2062,https://github.com/Gregor812/DCO.git,2018-02-04 17:49:26+00:00,,0,Gregor812/DCO,120208232,SystemVerilog,DCO,1,0,2018-02-04 17:51:02+00:00,[],
2063,https://github.com/EquipoVeri/ClockDivider.git,2018-02-09 19:09:48+00:00,,0,EquipoVeri/ClockDivider,120944832,SystemVerilog,ClockDivider,5,0,2018-02-09 19:12:17+00:00,[],
2064,https://github.com/stevefarmer01/pulse_gen.git,2018-01-26 23:43:14+00:00,systemverilog pulse generator both synth and BFM,0,stevefarmer01/pulse_gen,119115270,SystemVerilog,pulse_gen,12,0,2019-06-16 02:17:07+00:00,[],
2065,https://github.com/yintianyu/ytydla.git,2018-01-21 06:20:14+00:00,LeNet-5 Acculator with system verilog,2,yintianyu/ytydla,118310159,SystemVerilog,ytydla,61,0,2018-01-21 06:20:29+00:00,[],https://api.github.com/licenses/gpl-3.0
2066,https://github.com/e3r8ick/PuntoFlotante.git,2018-03-22 15:53:19+00:00,Sumador de Punto flotante System Verilog,0,e3r8ick/PuntoFlotante,126359492,SystemVerilog,PuntoFlotante,18,0,2018-04-10 16:42:18+00:00,[],
2067,https://github.com/kubotak-fpga/sysveri_task.git,2018-03-12 15:01:35+00:00,,0,kubotak-fpga/sysveri_task,124906522,SystemVerilog,sysveri_task,8,0,2018-03-12 15:02:49+00:00,[],
2068,https://github.com/margosha280990/dariaKorotkova.git,2017-12-08 20:35:06+00:00,projectForLoft,0,margosha280990/dariaKorotkova,113615007,SystemVerilog,dariaKorotkova,15474,0,2017-12-24 22:10:19+00:00,[],
2069,https://github.com/agrimpandey/ECE551.git,2017-12-06 17:00:18+00:00,,0,agrimpandey/ECE551,113343964,SystemVerilog,ECE551,512,0,2018-05-29 02:09:09+00:00,[],
2070,https://github.com/YuehWu1994/Vision-Determination-System.git,2018-04-07 11:54:56+00:00,"Final Project repository of Digital Circuit Lab, Spring 2016",0,YuehWu1994/Vision-Determination-System,128523948,SystemVerilog,Vision-Determination-System,4200,0,2019-04-13 09:17:48+00:00,[],
2071,https://github.com/tallerDisenoDigital/laboratorio3.git,2018-03-08 16:03:49+00:00,,0,tallerDisenoDigital/laboratorio3,124415267,SystemVerilog,laboratorio3,11,0,2018-03-22 15:58:01+00:00,[],
2072,https://github.com/theyusko/digital-design.git,2018-03-03 20:19:23+00:00,,0,theyusko/digital-design,123728061,SystemVerilog,digital-design,11,0,2021-01-21 18:34:11+00:00,[],
2073,https://github.com/EquipoVeri/UART.git,2018-04-14 23:44:25+00:00,,0,EquipoVeri/UART,129562645,SystemVerilog,UART,11,0,2018-04-18 00:34:38+00:00,[],
2074,https://github.com/AbdullahDiDo/Pipelined-Mips-Processor-.git,2018-08-14 15:41:36+00:00,,0,AbdullahDiDo/Pipelined-Mips-Processor-,144740520,SystemVerilog,Pipelined-Mips-Processor-,565,0,2018-08-14 15:48:02+00:00,[],
2075,https://github.com/Nikola2444/Verification_SVM.git,2018-08-08 12:16:11+00:00,,1,Nikola2444/Verification_SVM,144009156,SystemVerilog,Verification_SVM,6219,0,2019-01-17 12:42:25+00:00,[],
2076,https://github.com/nagarajpa/Parser.git,2018-08-12 15:47:37+00:00,Mini projects in SV.,0,nagarajpa/Parser,144479759,SystemVerilog,Parser,187,0,2019-06-05 18:04:27+00:00,[],
2077,https://github.com/WendongZhang1995/cputest.git,2018-07-19 09:43:32+00:00,,0,WendongZhang1995/cputest,141558429,SystemVerilog,cputest,25,0,2018-07-20 06:45:48+00:00,[],
2078,https://github.com/ramachav/Computer-Design-Prototyping.git,2018-04-29 15:29:28+00:00,Computer Prototyping project where I designed and implemented a dual-core 5-stage pipelined processor with an L-1 cache hierarchy and an MSI cache coherence protocol which ran on the MIPS ISA.,0,ramachav/Computer-Design-Prototyping,131506254,SystemVerilog,Computer-Design-Prototyping,105248,0,2021-09-03 17:18:50+00:00,[],
2079,https://github.com/Njanderson/548.git,2018-04-17 22:23:27+00:00,,0,Njanderson/548,129971843,SystemVerilog,548,149,0,2018-04-23 09:01:54+00:00,[],
2080,https://github.com/cristobalhuidobro/display.git,2018-04-28 22:08:28+00:00,,0,cristobalhuidobro/display,131447499,SystemVerilog,display,3,0,2018-05-04 18:43:50+00:00,[],
2081,https://github.com/leonyoliveir/pipeline_sv.git,2018-05-22 20:23:54+00:00,,0,leonyoliveir/pipeline_sv,134471680,SystemVerilog,pipeline_sv,18,0,2018-05-29 18:07:52+00:00,[],
2082,https://github.com/tanbour/Scipio.git,2018-05-29 10:03:00+00:00,A RISC-V CPU implemented in Verilog,2,tanbour/Scipio,135277087,SystemVerilog,Scipio,106,0,2019-05-20 05:15:12+00:00,[],
2083,https://github.com/wufubao/ADDApy.git,2018-04-28 06:50:50+00:00,,0,wufubao/ADDApy,131381827,SystemVerilog,ADDApy,779,0,2018-05-25 14:04:21+00:00,[],
2084,https://github.com/bJeffrey/Hw.git,2018-04-26 22:29:30+00:00,,0,bJeffrey/Hw,131217147,SystemVerilog,Hw,2777,0,2018-06-09 01:04:48+00:00,[],
2085,https://github.com/EquipoVeri/FIFO.git,2018-04-17 03:51:43+00:00,,0,EquipoVeri/FIFO,129842975,SystemVerilog,FIFO,10,0,2018-04-25 17:37:00+00:00,[],
2086,https://github.com/shubhamsingh5/ece551-final-project.git,2018-04-18 16:24:32+00:00,,1,shubhamsingh5/ece551-final-project,130091181,SystemVerilog,ece551-final-project,4912,0,2018-08-26 04:15:10+00:00,[],
2087,https://github.com/veranki/network-switch.git,2018-04-03 20:34:11+00:00,Verification of Ethernet Switch,0,veranki/network-switch,127965586,SystemVerilog,network-switch,6,0,2018-04-03 20:56:11+00:00,[],
2088,https://github.com/samvance0412/100_DOC.git,2018-04-09 22:43:28+00:00,100 Days of Code - Log,0,samvance0412/100_DOC,128842301,SystemVerilog,100_DOC,1,0,2018-04-09 22:47:35+00:00,[],
2089,https://github.com/Ryang20718/EE-m16.git,2018-06-23 20:38:09+00:00,,0,Ryang20718/EE-m16,138431955,SystemVerilog,EE-m16,10025,0,2018-07-01 06:03:13+00:00,[],
2090,https://github.com/xtopher88/TestFPGA.git,2018-06-08 07:12:58+00:00,,0,xtopher88/TestFPGA,136581186,SystemVerilog,TestFPGA,126,0,2018-07-22 05:48:47+00:00,[],
2091,https://github.com/Mine02C4/compsys2018-6.git,2018-06-08 19:04:06+00:00,,0,Mine02C4/compsys2018-6,136656332,SystemVerilog,compsys2018-6,14812,0,2018-07-20 01:50:37+00:00,[],
2092,https://github.com/barbarafv/Trabalho-ARM.git,2017-11-24 23:04:23+00:00,,1,barbarafv/Trabalho-ARM,111961545,SystemVerilog,Trabalho-ARM,87,0,2017-11-29 23:01:56+00:00,[],
2093,https://github.com/varmil/avalon-sdram-rw.git,2017-12-06 01:12:30+00:00,"read / write SDRAM of DE-10 Lite with System Console, through SDRAM Controller in Qsys ",0,varmil/avalon-sdram-rw,113251723,SystemVerilog,avalon-sdram-rw,10905,0,2017-12-06 01:30:57+00:00,[],
2094,https://github.com/mnath770/Verification-of-Car-Parking-System.git,2018-01-07 21:35:09+00:00,"Car Parking System keeps the main gate of the premises locked, locking out all vehicles unless they know the right password to open the gate",0,mnath770/Verification-of-Car-Parking-System,116600970,SystemVerilog,Verification-of-Car-Parking-System,7,0,2018-01-07 21:35:16+00:00,[],
2095,https://github.com/EquipoVeri/SquareRoot.git,2018-03-12 17:55:58+00:00,,0,EquipoVeri/SquareRoot,124929381,SystemVerilog,SquareRoot,46,0,2018-03-18 00:22:18+00:00,[],
2096,https://github.com/jordantjh/test-repo.git,2018-02-24 17:01:31+00:00,,0,jordantjh/test-repo,122760469,SystemVerilog,test-repo,3412,0,2018-03-20 16:38:23+00:00,[],
2097,https://github.com/gpfreiwa/school-back.git,2018-03-30 23:27:38+00:00,school backup,0,gpfreiwa/school-back,127481863,SystemVerilog,school-back,12,0,2018-04-17 03:10:37+00:00,[],
2098,https://github.com/Quinnbreitnicholson/ece551.git,2018-04-25 16:28:29+00:00,,1,Quinnbreitnicholson/ece551,131034632,SystemVerilog,ece551,4703,0,2018-04-30 17:06:10+00:00,[],
2099,https://github.com/puffy-cavy/SV.git,2018-03-01 21:43:06+00:00,,0,puffy-cavy/SV,123495779,SystemVerilog,SV,10704,0,2018-03-01 21:46:01+00:00,[],
2100,https://github.com/donaldsa18/EE435Project4.git,2018-03-08 03:41:09+00:00,,0,donaldsa18/EE435Project4,124332580,SystemVerilog,EE435Project4,6,0,2018-03-26 20:03:39+00:00,[],
2101,https://github.com/albden/ExamenPWM.git,2018-05-09 02:55:02+00:00,,0,albden/ExamenPWM,132693387,SystemVerilog,ExamenPWM,68,0,2018-05-09 03:45:31+00:00,[],
2102,https://github.com/pauloserrafh/riscv.git,2018-05-10 16:10:02+00:00,Repositorio para a disciplina de arquiteturas não convencionais,0,pauloserrafh/riscv,132924689,SystemVerilog,riscv,4085,0,2019-03-27 13:42:03+00:00,[],
2103,https://github.com/tejas4812/hw_accelerator.git,2018-05-04 06:11:01+00:00,hardware_accelerators,0,tejas4812/hw_accelerator,132095762,SystemVerilog,hw_accelerator,11,0,2018-05-18 05:47:11+00:00,[],
2104,https://github.com/mpine123/551_Project.git,2018-04-27 16:16:16+00:00,,0,mpine123/551_Project,131319417,SystemVerilog,551_Project,1611,0,2018-05-03 19:20:49+00:00,[],https://api.github.com/licenses/mit
2105,https://github.com/JLippai/Micronaut.git,2018-04-21 02:56:19+00:00,4 Grad Students implement droplet microfluidics image processing on an FPGA for selection,0,JLippai/Micronaut,130434217,SystemVerilog,Micronaut,75514,0,2018-04-26 15:48:02+00:00,[],https://api.github.com/licenses/mit
2106,https://github.com/bigmac34/VSN_Labo4.git,2018-04-22 07:42:30+00:00,,0,bigmac34/VSN_Labo4,130545974,SystemVerilog,VSN_Labo4,20697,0,2018-04-26 13:50:54+00:00,[],
2107,https://github.com/DeadSasha/Control-Unit.git,2018-05-08 08:34:54+00:00,Блок устройства управления ускоренного умножения по Леману для ПЛИС Altera,0,DeadSasha/Control-Unit,132579199,SystemVerilog,Control-Unit,6606,0,2018-06-09 06:23:25+00:00,[],
2108,https://github.com/unhexquadium/5-Stage-Pipelined-ARMv8-RISC-Processor.git,2018-08-16 06:40:17+00:00,Implemented a RISC processor that accepts ARMv8 instructions using various computer architecture techniques. This project was made with SystemVerilog in quartus and tested with ModelSim. The final product has the expected output for given input commands in Machine Code or Assembly.,0,unhexquadium/5-Stage-Pipelined-ARMv8-RISC-Processor,144947695,SystemVerilog,5-Stage-Pipelined-ARMv8-RISC-Processor,28424,0,2018-08-16 07:01:22+00:00,[],
2109,https://github.com/Taren-Ko/MIPS-Text-Editor.git,2018-06-02 05:54:46+00:00,Text Editor designed for use with a MIPS-based processor,0,Taren-Ko/MIPS-Text-Editor,135791673,SystemVerilog,MIPS-Text-Editor,2233,0,2018-06-02 05:58:56+00:00,[],
2110,https://github.com/Yodai1996/hardware-jikken.git,2018-06-15 11:42:41+00:00,,0,Yodai1996/hardware-jikken,137480988,SystemVerilog,hardware-jikken,29,0,2018-10-25 14:07:50+00:00,[],
2111,https://github.com/sumedha1/systemVerilog.git,2018-06-24 02:38:36+00:00,,0,sumedha1/systemVerilog,138447954,SystemVerilog,systemVerilog,31,0,2021-11-03 02:47:23+00:00,[],
2112,https://github.com/filipepiresg/Leites_LOAC-UFCG.git,2018-06-29 14:10:00+00:00,,0,filipepiresg/Leites_LOAC-UFCG,139157111,SystemVerilog,Leites_LOAC-UFCG,6052,0,2019-01-15 18:57:53+00:00,[],
2113,https://github.com/stonewinter/sv-uvm.git,2018-05-19 16:10:16+00:00,sv-uvm,0,stonewinter/sv-uvm,134077523,SystemVerilog,sv-uvm,3,0,2018-05-19 16:24:10+00:00,[],
2114,https://github.com/dpc525/SystemVerilog-Gotcha.git,2018-04-19 12:00:13+00:00,Record my SystemVerilog error,0,dpc525/SystemVerilog-Gotcha,130209056,SystemVerilog,SystemVerilog-Gotcha,4,0,2018-04-24 10:17:12+00:00,[],
2115,https://github.com/lejh1/FPGA-Project-.git,2017-11-27 20:53:23+00:00,"NOTE: This project was done for a course at UCI. This project is a fully functioning simple processor created for a class project. It  supports two types of instructions including R-type (RI=’0’) and I-type instructions (RI=’1’). R-type is a register-based instruction and I-type is an immediate-based instruction. In R-type instructions the instruction is composed of three operands, two source registers, and one destination register. In immediate-based type, one of the sources is a 15 bit immediate value.",0,lejh1/FPGA-Project-,112247445,SystemVerilog,FPGA-Project-,11,0,2018-02-02 20:47:24+00:00,[],
2116,https://github.com/chaseemory/Conway.git,2017-12-13 05:59:47+00:00,Conways Game of Life in System Verilog,1,chaseemory/Conway,114080458,SystemVerilog,Conway,331,0,2017-12-13 06:05:31+00:00,[],
2117,https://github.com/rekendahl/uvm.git,2018-01-11 18:22:32+00:00,Copy of UVM implementations from http://accellera.org/downloads/standards/uvm,2,rekendahl/uvm,117136601,SystemVerilog,uvm,3675,0,2018-01-11 18:37:29+00:00,[],https://api.github.com/licenses/apache-2.0
2118,https://github.com/sparksfly000/riscv-rlwe.git,2017-12-28 05:39:22+00:00,risc-v isa extension and rlwe acceleration,0,sparksfly000/riscv-rlwe,115589065,SystemVerilog,riscv-rlwe,393,0,2017-12-28 05:50:26+00:00,[],
2119,https://github.com/kmui2/Cyclone-IV.git,2018-01-06 00:23:59+00:00,,0,kmui2/Cyclone-IV,116440195,SystemVerilog,Cyclone-IV,16113,0,2018-01-06 00:25:36+00:00,[],
2120,https://github.com/Busymeng/MyArduino.git,2018-01-19 22:50:47+00:00,,0,Busymeng/MyArduino,118187529,SystemVerilog,MyArduino,1708,0,2022-04-25 04:43:03+00:00,[],
2121,https://github.com/KoenMaagdenberg/PROGH.git,2018-03-02 14:15:06+00:00,First try at using git repo,0,KoenMaagdenberg/PROGH,123587620,SystemVerilog,PROGH,1456,0,2018-03-02 14:20:00+00:00,[],
2122,https://github.com/Parsley-Sage/sv-test.git,2018-02-24 18:51:29+00:00,,0,Parsley-Sage/sv-test,122769390,SystemVerilog,sv-test,10,0,2018-02-24 19:10:32+00:00,[],
2123,https://github.com/monootc/Processor-Beta.git,2018-03-06 20:42:24+00:00,,0,monootc/Processor-Beta,124135925,SystemVerilog,Processor-Beta,413,0,2018-03-06 20:47:34+00:00,[],
2124,https://github.com/margosha280990/portfolio.git,2017-12-24 22:26:31+00:00,,0,margosha280990/portfolio,115290140,SystemVerilog,portfolio,14309,0,2017-12-28 14:31:19+00:00,[],
2125,https://github.com/sharvil111/aes128_systemverilog.git,2017-12-24 02:54:11+00:00,"The present example deals with a block cipher, called Advanced Encryption Standard (AES), which accepts a plaintext and a cipherkey as inputs and computes the corresponding ciphertext. ",0,sharvil111/aes128_systemverilog,115235801,SystemVerilog,aes128_systemverilog,1350,0,2017-12-24 03:07:18+00:00,[],
2126,https://github.com/EquipoVeri/Divider.git,2018-03-15 00:43:59+00:00,,0,EquipoVeri/Divider,125291855,SystemVerilog,Divider,5,0,2018-03-18 22:09:23+00:00,[],
2127,https://github.com/mrshllstock/FinalProject.git,2018-04-18 16:47:32+00:00,,0,mrshllstock/FinalProject,130093932,SystemVerilog,FinalProject,142,0,2018-04-26 16:11:08+00:00,[],
2128,https://github.com/rodrigoaugusto7/Concep.git,2018-04-18 17:37:48+00:00,Repositório para a disciplina de Concepção Estruturada,0,rodrigoaugusto7/Concep,130099572,SystemVerilog,Concep,72,0,2018-04-23 22:14:00+00:00,[],
2129,https://github.com/nagarajpa/ASIC_assignments.git,2018-08-12 15:29:40+00:00,,0,nagarajpa/ASIC_assignments,144478492,SystemVerilog,ASIC_assignments,16,0,2019-07-25 14:31:21+00:00,[],
2130,https://github.com/igormacedo/systemverilog-study.git,2018-08-10 14:22:00+00:00,,0,igormacedo/systemverilog-study,144295565,SystemVerilog,systemverilog-study,754,0,2021-10-19 13:16:32+00:00,[],https://api.github.com/licenses/mit
2131,https://github.com/xuanya0/Pipelined-LC3.git,2018-08-15 04:33:09+00:00,A 5-stage pipelined re-implementation of LC3.,0,xuanya0/Pipelined-LC3,144806136,SystemVerilog,Pipelined-LC3,265,0,2018-08-15 04:36:08+00:00,[],
2132,https://github.com/DomenicoDella/ProjectDE.git,2018-05-04 03:49:13+00:00,"Proyecto de Electronica Digital, pic16f84a",0,DomenicoDella/ProjectDE,132083355,SystemVerilog,ProjectDE,147,0,2018-05-30 21:28:51+00:00,[],
2133,https://github.com/MattShilling/FPGA-Team-03.git,2018-05-13 03:19:40+00:00,Repository for team 3's final project,1,MattShilling/FPGA-Team-03,133201946,SystemVerilog,FPGA-Team-03,672,0,2018-06-09 05:48:25+00:00,[],
2134,https://github.com/Hassan-Elseoudy/Mips-Pipelined.git,2018-05-15 03:13:42+00:00,Implementation of MIPS Pipelined (using SystemVerilog).,0,Hassan-Elseoudy/Mips-Pipelined,133452580,SystemVerilog,Mips-Pipelined,417,0,2018-05-15 03:27:40+00:00,[],
2135,https://github.com/CathyAwad/MIPS-Pipelined-Processor.git,2018-05-21 21:48:09+00:00,,0,CathyAwad/MIPS-Pipelined-Processor,134328796,SystemVerilog,MIPS-Pipelined-Processor,3378,0,2018-05-21 21:51:59+00:00,[],
2136,https://github.com/Ryan-Ding/CacheMoneyRecords.git,2018-05-22 22:02:01+00:00,,0,Ryan-Ding/CacheMoneyRecords,134480630,SystemVerilog,CacheMoneyRecords,378652,0,2018-05-24 18:44:09+00:00,[],
2137,https://github.com/jushio/SurveryOfRAM32M.git,2018-06-01 08:52:02+00:00,,0,jushio/SurveryOfRAM32M,135693210,SystemVerilog,SurveryOfRAM32M,2,0,2018-06-01 13:43:23+00:00,[],
2138,https://github.com/salaheddinhetalani/SystemVerilog.git,2018-06-06 01:07:02+00:00,Main repository for SystemVerilog files,0,salaheddinhetalani/SystemVerilog,136252885,SystemVerilog,SystemVerilog,17,0,2018-06-06 06:20:39+00:00,[],https://api.github.com/licenses/mit
2139,https://github.com/Vlad-The-Mad/ECE-271-final-project.git,2018-06-03 03:36:31+00:00,,0,Vlad-The-Mad/ECE-271-final-project,135870817,SystemVerilog,ECE-271-final-project,179,0,2018-06-09 05:50:00+00:00,[],
2140,https://github.com/efratcdn/e2hdl_check_alignment.git,2018-07-12 10:22:55+00:00,,0,efratcdn/e2hdl_check_alignment,140697861,SystemVerilog,e2hdl_check_alignment,6,0,2018-07-12 10:31:58+00:00,[],
2141,https://github.com/krahal/RC4-Decryption-Circuit.git,2018-01-04 03:10:12+00:00,📟An RC4 decryption circuit by designing and programming an FSM that reads an encrypted message from a ROM and decrypts it using the RC4 algorithm,0,krahal/RC4-Decryption-Circuit,116208443,SystemVerilog,RC4-Decryption-Circuit,12212,0,2018-09-20 07:27:55+00:00,[],
2142,https://github.com/sooknuan/i2c_translator.git,2018-01-05 15:16:38+00:00,I2C interface FPGA implementation translator,0,sooknuan/i2c_translator,116397890,SystemVerilog,i2c_translator,3,0,2018-01-05 15:16:40+00:00,[],
2143,https://github.com/cbresteau/INF8500.git,2018-01-22 20:26:18+00:00,,0,cbresteau/INF8500,118510898,SystemVerilog,INF8500,415,0,2018-01-22 20:53:36+00:00,[],
2144,https://github.com/renahn/trabalho_arquitetura.git,2017-11-25 20:19:51+00:00,,0,renahn/trabalho_arquitetura,112031948,SystemVerilog,trabalho_arquitetura,93,0,2017-11-25 20:41:12+00:00,[],
2145,https://github.com/aunics/SystemVerilog.git,2017-11-27 05:32:28+00:00,System Verilog examples,0,aunics/SystemVerilog,112151807,SystemVerilog,SystemVerilog,4,0,2020-12-29 18:35:19+00:00,[],
2146,https://github.com/MacDeath667/PLL.git,2018-02-21 17:10:54+00:00,Модуль PLL с тестбенчами,0,MacDeath667/PLL,122366974,SystemVerilog,PLL,11,0,2018-02-21 17:14:52+00:00,[],
2147,https://github.com/tpalit/babelfish.git,2018-02-15 19:05:57+00:00,,0,tpalit/babelfish,121669829,SystemVerilog,babelfish,477,0,2018-02-15 19:16:07+00:00,[],
2148,https://github.com/anirudhSK/myverilog.git,2018-02-17 20:58:45+00:00,Repository with toy Verilog examples,0,anirudhSK/myverilog,121891983,SystemVerilog,myverilog,115,0,2018-05-23 02:35:27+00:00,[],
2149,https://github.com/Wilsonl9/CSE141L.git,2018-02-10 02:11:39+00:00,,0,Wilsonl9/CSE141L,120976094,SystemVerilog,CSE141L,1343,0,2018-03-23 01:21:20+00:00,[],
2150,https://github.com/santiagovdk/arqui-mips-imagenes.git,2018-03-18 03:01:05+00:00,,0,santiagovdk/arqui-mips-imagenes,125687917,SystemVerilog,arqui-mips-imagenes,8,0,2018-03-18 03:02:12+00:00,[],
2151,https://github.com/melt-umn/ableP.git,2018-03-15 22:59:29+00:00,,0,melt-umn/ableP,125435773,SystemVerilog,ableP,499,0,2021-10-06 18:55:04+00:00,[],https://api.github.com/licenses/lgpl-3.0
2152,https://github.com/sebastianardelean/hdl.git,2018-03-12 20:19:54+00:00,,0,sebastianardelean/hdl,124946404,SystemVerilog,hdl,289,0,2022-04-29 12:55:41+00:00,[],
2153,https://github.com/kunalwadhwa22/multiply-and-accumulate-system-verilog.git,2018-03-12 19:05:32+00:00,Multiply and Accumulate code (with and without pipeline) in system verilog,0,kunalwadhwa22/multiply-and-accumulate-system-verilog,124937690,SystemVerilog,multiply-and-accumulate-system-verilog,2,0,2018-03-12 19:05:37+00:00,[],
2154,https://github.com/iamjerrchen/faculty_fighters.git,2018-04-14 22:28:32+00:00,ECE 385 Final Project,0,iamjerrchen/faculty_fighters,129559018,SystemVerilog,faculty_fighters,1810,0,2018-05-15 03:19:30+00:00,[],
2155,https://github.com/matthewSkipworth/HW1.git,2018-04-17 12:53:40+00:00,HW1 up to part5,0,matthewSkipworth/HW1,129904315,SystemVerilog,HW1,10526,0,2018-04-22 01:22:31+00:00,[],
2156,https://github.com/FarzanaHaque/ECE385.git,2018-04-17 18:17:24+00:00,Code from Digital Systems Laboratory Fall 2017 (System Verilog),1,FarzanaHaque/ECE385,129947009,SystemVerilog,ECE385,49,0,2018-04-17 18:51:41+00:00,[],
2157,https://github.com/adelmeleka/ALU-.git,2018-04-27 22:39:27+00:00,Alu representation in System Verilog,0,adelmeleka/ALU-,131350977,SystemVerilog,ALU-,35,0,2018-04-27 22:40:52+00:00,[],
2158,https://github.com/javiergonzalezya13/Kalman-Filter.git,2018-05-17 16:26:03+00:00,,0,javiergonzalezya13/Kalman-Filter,133840466,SystemVerilog,Kalman-Filter,8693,0,2018-06-15 20:45:49+00:00,[],
2159,https://github.com/mohaimenhimu/RTL_06_04_2018.git,2018-05-11 08:49:59+00:00,UART,0,mohaimenhimu/RTL_06_04_2018,133014825,SystemVerilog,RTL_06_04_2018,6371,0,2018-05-14 07:44:23+00:00,[],
2160,https://github.com/aminarefzadeh/Project.git,2018-05-16 15:17:38+00:00,project ripository,0,aminarefzadeh/Project,133685428,SystemVerilog,Project,98,0,2018-05-21 22:11:18+00:00,[],
2161,https://github.com/mhazizian/Computer_Architecture_CA_4_pipline.git,2018-05-19 06:45:28+00:00,pipeline presentation of similar MIPS proccessor,0,mhazizian/Computer_Architecture_CA_4_pipline,134037346,SystemVerilog,Computer_Architecture_CA_4_pipline,470,0,2018-06-28 05:20:36+00:00,[],
2162,https://github.com/mhazizian/Computer_Architecture_CA_5_Memory.git,2018-06-07 11:02:05+00:00,,0,mhazizian/Computer_Architecture_CA_5_Memory,136464694,SystemVerilog,Computer_Architecture_CA_5_Memory,8,0,2018-06-09 19:59:57+00:00,[],
2163,https://github.com/smithd57/526OOOProcessor.git,2018-06-06 20:24:36+00:00,An Out of Order Processor,0,smithd57/526OOOProcessor,136382287,SystemVerilog,526OOOProcessor,5071,0,2018-06-06 20:31:40+00:00,[],
2164,https://github.com/ZhimingyuanLiu/UW-EE-469.git,2018-05-08 02:30:03+00:00,,0,ZhimingyuanLiu/UW-EE-469,132542668,SystemVerilog,UW-EE-469,15610,0,2018-05-08 06:53:23+00:00,[],
2165,https://github.com/byburakyasar/cs223.git,2018-05-02 21:40:51+00:00,Digital Design,0,byburakyasar/cs223,131908778,SystemVerilog,cs223,19154,0,2018-05-02 21:45:38+00:00,[],
2166,https://github.com/janchell/595_final.git,2018-05-28 01:48:32+00:00,This is where all the cool kids hang out.,1,janchell/595_final,135096854,SystemVerilog,595_final,5,0,2018-05-30 23:22:53+00:00,[],
2167,https://github.com/jakemckenzie/16BitNotRISC.git,2018-05-28 23:20:39+00:00,"A 16 bit processor (not RISC) with six instructions: noop, store, load, add, subtract, halt.",0,jakemckenzie/16BitNotRISC,135217747,SystemVerilog,16BitNotRISC,2960,0,2018-06-08 23:55:26+00:00,[],https://api.github.com/licenses/mit
2168,https://github.com/hbhbts/fpga_bird_prj.git,2018-06-27 06:14:56+00:00,,0,hbhbts/fpga_bird_prj,138837704,SystemVerilog,fpga_bird_prj,8,0,2018-06-28 10:19:14+00:00,[],
2169,https://github.com/ujtakk/lstm.git,2018-04-17 15:53:30+00:00,,0,ujtakk/lstm,129929480,SystemVerilog,lstm,7,0,2024-02-29 03:19:19+00:00,[],
2170,https://github.com/xsokolikm/skuska2.git,2017-11-26 22:47:05+00:00,,0,xsokolikm/skuska2,112122922,SystemVerilog,skuska2,14,0,2020-05-17 23:01:45+00:00,[],
2171,https://github.com/k155la3/slug8.git,2017-11-26 07:09:13+00:00,,0,k155la3/slug8,112063102,SystemVerilog,slug8,5,0,2017-11-26 07:14:32+00:00,[],
2172,https://github.com/pegahsoltani/final_project_digital_design.git,2017-12-17 13:30:05+00:00,,0,pegahsoltani/final_project_digital_design,114538533,SystemVerilog,final_project_digital_design,699,0,2017-12-17 14:04:39+00:00,[],
2173,https://github.com/NileshBPatel/TestCodes.git,2017-12-24 04:35:00+00:00,Various Codes,0,NileshBPatel/TestCodes,115240049,SystemVerilog,TestCodes,0,0,2017-12-24 04:39:27+00:00,[],
2174,https://github.com/asymansk/USB-to-Ethernet-Bridge-Final.git,2017-12-10 21:12:29+00:00,Final Project for ECE 337,0,asymansk/USB-to-Ethernet-Bridge-Final,113783941,SystemVerilog,USB-to-Ethernet-Bridge-Final,56,0,2017-12-10 21:24:51+00:00,[],
2175,https://github.com/Jentzepeda/RISC.git,2017-12-12 01:20:36+00:00,RISC processor,0,Jentzepeda/RISC,113927248,SystemVerilog,RISC,11,0,2023-01-06 05:41:35+00:00,[],
2176,https://github.com/brady-aiello/AES_in_SystemVerilog.git,2017-12-02 03:20:55+00:00,,0,brady-aiello/AES_in_SystemVerilog,112808950,SystemVerilog,AES_in_SystemVerilog,17,0,2017-12-06 19:50:26+00:00,[],
2177,https://github.com/varmil/mipsIII-pipeline-cpu.git,2017-12-22 06:51:42+00:00,A 32-bit MIPS processor which aims for conformance to the MIPSIII ISA.,0,varmil/mipsIII-pipeline-cpu,115086276,SystemVerilog,mipsIII-pipeline-cpu,4618,0,2017-12-22 06:53:30+00:00,[],
2178,https://github.com/immextea/uvm.git,2018-03-13 02:51:04+00:00,uvm source code,0,immextea/uvm,124982871,SystemVerilog,uvm,10,0,2018-03-13 03:12:06+00:00,[],
2179,https://github.com/rdrabina/Projekt-Verilog.git,2018-03-16 17:30:15+00:00,,0,rdrabina/Projekt-Verilog,125548976,SystemVerilog,Projekt-Verilog,204,0,2018-03-16 17:33:18+00:00,[],
2180,https://github.com/thankidipesh2009/system_verilog.git,2018-02-10 07:01:38+00:00,Example,0,thankidipesh2009/system_verilog,120993104,SystemVerilog,system_verilog,1,0,2018-02-10 07:06:17+00:00,[],
2181,https://github.com/LakshmanKamatham/UVM_BasicExample.git,2018-02-23 15:11:14+00:00,UVM basic example,0,LakshmanKamatham/UVM_BasicExample,122636515,SystemVerilog,UVM_BasicExample,83,0,2018-02-25 04:19:56+00:00,[],
2182,https://github.com/wonseobshin/DE1SoC-Baccarat.git,2018-01-11 05:08:06+00:00,,0,wonseobshin/DE1SoC-Baccarat,117052862,SystemVerilog,DE1SoC-Baccarat,4603,0,2018-01-16 06:18:15+00:00,[],
2183,https://github.com/sonminhtran1997/lab8.git,2018-03-04 08:41:37+00:00,,0,sonminhtran1997/lab8,123771211,SystemVerilog,lab8,25126,0,2018-03-04 08:42:46+00:00,[],
2184,https://github.com/sopin97/grupo8_lab_digitales2018.git,2018-04-10 03:19:57+00:00,En este repositorio estará toda la información de las sesiones prácticas del laboratorio,3,sopin97/grupo8_lab_digitales2018,128867688,SystemVerilog,grupo8_lab_digitales2018,1138,0,2018-08-21 20:11:31+00:00,[],
2185,https://github.com/AmareshSubburaj/ECE745_ASICVerification.git,2018-08-07 18:11:41+00:00,,0,AmareshSubburaj/ECE745_ASICVerification,143910362,SystemVerilog,ECE745_ASICVerification,726,0,2018-08-07 18:18:42+00:00,[],
2186,https://github.com/kencycheng/riscv_instruction_sv.git,2018-08-10 00:27:14+00:00,Instruction generation in systemverilog,0,kencycheng/riscv_instruction_sv,144216904,SystemVerilog,riscv_instruction_sv,9,0,2018-08-10 00:27:21+00:00,[],https://api.github.com/licenses/apache-2.0
2187,https://github.com/r-chance/CSE140L.git,2018-08-07 16:05:49+00:00,,0,r-chance/CSE140L,143897481,SystemVerilog,CSE140L,156,0,2018-08-07 18:30:17+00:00,[],
2188,https://github.com/TallerDigitales/Lab2.git,2018-08-08 14:22:30+00:00,,0,TallerDigitales/Lab2,144024619,SystemVerilog,Lab2,11,0,2018-08-15 19:48:33+00:00,[],
2189,https://github.com/GkyHub/MIPS-CPU.git,2018-07-19 07:45:51+00:00,,0,GkyHub/MIPS-CPU,141543238,SystemVerilog,MIPS-CPU,13,0,2018-07-23 07:20:55+00:00,[],
2190,https://github.com/joabe88/Projeto_ULA_32bits.git,2018-04-11 22:19:26+00:00,Projeto onde o objeto foi desenvolver um testbench com auto-verificação para uma ULA – Unidada Lógica e Aritimética de 32 bits,0,joabe88/Projeto_ULA_32bits,129160720,SystemVerilog,Projeto_ULA_32bits,12,0,2018-04-11 22:20:42+00:00,[],
2191,https://github.com/torgeile/TFE4171.git,2018-04-18 19:45:01+00:00,TFE4171 - Design av digitale system 2,0,torgeile/TFE4171,130113763,SystemVerilog,TFE4171,1279,0,2018-04-24 13:50:43+00:00,[],
2192,https://github.com/LeandrodLima/LOAC1.git,2018-07-02 13:28:45+00:00,,0,LeandrodLima/LOAC1,139447499,SystemVerilog,LOAC1,4855,0,2018-07-02 13:30:21+00:00,[],
2193,https://github.com/Spencer-Sawyer/TCES-330.git,2018-08-10 15:49:35+00:00,,0,Spencer-Sawyer/TCES-330,144305617,SystemVerilog,TCES-330,146202,0,2018-08-10 19:48:03+00:00,[],
2194,https://github.com/armguidon/dsp.git,2018-06-04 01:24:36+00:00,,0,armguidon/dsp,135955103,SystemVerilog,dsp,9,0,2019-02-18 16:08:29+00:00,[],
2195,https://github.com/MehmetErenTuranboy/Minesweeper.git,2018-06-09 10:18:20+00:00,Bilkent Cs223 Course System Verilog Project,0,MehmetErenTuranboy/Minesweeper,136712811,SystemVerilog,Minesweeper,1540,0,2018-06-09 10:29:13+00:00,[],
2196,https://github.com/fengmzhu/ctag_UVM.git,2018-06-09 08:14:08+00:00,,0,fengmzhu/ctag_UVM,136704086,SystemVerilog,ctag_UVM,607,0,2018-06-26 23:56:54+00:00,[],
2197,https://github.com/CarlosW/Practica3_Verificacion.git,2018-04-26 17:07:42+00:00,Practica 3 de la materia Diseño y Verificación,0,CarlosW/Practica3_Verificacion,131187037,SystemVerilog,Practica3_Verificacion,8,0,2018-04-26 17:09:38+00:00,[],
2198,https://github.com/xver/rtl.git,2018-06-13 21:27:58+00:00,,1,xver/rtl,137273148,SystemVerilog,rtl,74,0,2019-06-05 10:58:10+00:00,[],
2199,https://github.com/Evdemonm/ECE-271-Group-Project.git,2018-05-31 03:07:33+00:00,,0,Evdemonm/ECE-271-Group-Project,135524891,SystemVerilog,ECE-271-Group-Project,4955,0,2020-03-03 17:50:13+00:00,[],
2200,https://github.com/Vlad-The-Mad/System-Verilog-Babies.git,2018-05-16 17:01:01+00:00,,0,Vlad-The-Mad/System-Verilog-Babies,133698445,SystemVerilog,System-Verilog-Babies,63,0,2018-05-17 19:09:59+00:00,[],
2201,https://github.com/arvindvjkmr18/385.git,2017-12-18 21:32:14+00:00,,0,arvindvjkmr18/385,114689844,SystemVerilog,385,13689,0,2017-12-19 05:59:59+00:00,[],
2202,https://github.com/naffin/LC3.git,2017-12-09 03:25:40+00:00,LC3 microprocessor,0,naffin/LC3,113638405,SystemVerilog,LC3,20,0,2017-12-09 03:30:56+00:00,[],
2203,https://github.com/fengmzhu/dotfiles_v2.git,2017-12-09 13:48:53+00:00,,0,fengmzhu/dotfiles_v2,113672736,SystemVerilog,dotfiles_v2,638,0,2018-06-07 00:07:22+00:00,[],
2204,https://github.com/ibreakoutx/msort.git,2017-12-19 21:22:53+00:00,,0,ibreakoutx/msort,114812359,SystemVerilog,msort,2,0,2017-12-19 21:31:41+00:00,[],
2205,https://github.com/lstrzalk/AGHnoid.git,2017-12-04 21:57:35+00:00,,0,lstrzalk/AGHnoid,113099735,SystemVerilog,AGHnoid,919,0,2017-12-04 21:58:50+00:00,[],
2206,https://github.com/rohanverma94/16bit-ALU.git,2017-12-26 22:06:33+00:00,"This is an FPGA design for 16 bit ALU, this project can only be created on FPGA with very large number of pins",0,rohanverma94/16bit-ALU,115458104,SystemVerilog,16bit-ALU,4,0,2017-12-28 20:27:23+00:00,[],
2207,https://github.com/brett720/BuildMachineToRunBinaryCode.git,2018-01-02 22:42:57+00:00,,0,brett720/BuildMachineToRunBinaryCode,116064726,SystemVerilog,BuildMachineToRunBinaryCode,3530,0,2018-01-02 22:44:42+00:00,[],
2208,https://github.com/sonu-m/amba.git,2018-01-19 06:49:17+00:00,apb,0,sonu-m/amba,118088490,SystemVerilog,amba,6,0,2018-01-19 06:51:55+00:00,[],
2209,https://github.com/pasrom/Hardware-Description-Languages.git,2017-12-31 10:57:48+00:00,"This is a project done in the course ""Embedded Systems 3""",0,pasrom/Hardware-Description-Languages,115857884,SystemVerilog,Hardware-Description-Languages,30307,0,2017-12-31 12:05:48+00:00,[],
2210,https://github.com/secondkimi/ece111_sha256.git,2018-02-06 07:11:20+00:00,,0,secondkimi/ece111_sha256,120416030,SystemVerilog,ece111_sha256,24,0,2019-09-12 05:49:34+00:00,[],
2211,https://github.com/pulp-platform/axi_size_conv.git,2018-02-26 15:54:52+00:00,,1,pulp-platform/axi_size_conv,122992775,SystemVerilog,axi_size_conv,36,0,2023-01-28 12:03:44+00:00,[],
2212,https://github.com/jpmolden/ECE474.git,2018-04-17 04:16:48+00:00,ECE 474/574 - VLSI System Design - Oregon State University ,0,jpmolden/ECE474,129845146,SystemVerilog,ECE474,6002,0,2018-06-10 03:36:42+00:00,[],
2213,https://github.com/ghuibregtse/ECE-551-Final-Project.git,2018-04-18 18:36:59+00:00,Final Project for ECE 551 (Simple Artificial Neural Network),0,ghuibregtse/ECE-551-Final-Project,130106340,SystemVerilog,ECE-551-Final-Project,416,0,2018-05-07 01:47:35+00:00,[],
2214,https://github.com/Tovaral/ECE-272-Section-6.git,2018-05-25 00:24:53+00:00,,0,Tovaral/ECE-272-Section-6,134782305,SystemVerilog,ECE-272-Section-6,7,0,2018-05-30 20:58:18+00:00,[],
2215,https://github.com/hassan-shaheen/Playback.git,2018-05-21 18:30:41+00:00,The HDL files I edited to implement implicit state machines for a project at UBC ,0,hassan-shaheen/Playback,134309253,SystemVerilog,Playback,565,0,2018-05-21 20:25:17+00:00,[],
2216,https://github.com/kathywh/Kabeta.git,2018-04-04 12:01:01+00:00,An implementation of pipelined β processor of MIT,1,kathywh/Kabeta,128055939,SystemVerilog,Kabeta,32109,0,2018-06-10 09:01:45+00:00,[],
2217,https://github.com/Shivam2501/MazeProcessor.git,2018-05-03 01:44:34+00:00,A Pipelined Implementation of the LC-3b Processor,1,Shivam2501/MazeProcessor,131926493,SystemVerilog,MazeProcessor,678327,0,2018-05-05 21:36:19+00:00,[],
2218,https://github.com/e3r8ick/ControladorVGA.git,2018-04-12 16:36:02+00:00,controlador de vga para una fpga,1,e3r8ick/ControladorVGA,129281624,SystemVerilog,ControladorVGA,1,0,2018-04-26 16:46:03+00:00,[],
2219,https://github.com/Hassan-Elseoudy/MIPS-MultiCycle.git,2018-04-27 19:24:18+00:00,This is an implementation of Multi-cycled MIPS.,0,Hassan-Elseoudy/MIPS-MultiCycle,131336644,SystemVerilog,MIPS-MultiCycle,258,0,2018-05-25 10:05:13+00:00,[],
2220,https://github.com/sixtop/fpga.git,2018-07-11 00:04:56+00:00,Assorted FPGA training projects,0,sixtop/fpga,140499728,SystemVerilog,fpga,200,0,2019-06-12 16:22:17+00:00,[],
2221,https://github.com/Sdattagu/Verilog.git,2018-06-23 20:16:44+00:00,Verilog Sandbox,0,Sdattagu/Verilog,138430726,SystemVerilog,Verilog,1541,0,2018-06-23 20:21:47+00:00,['verilog-hdl'],
2222,https://github.com/daliang20/Hardware.git,2018-05-29 07:44:47+00:00,asdasd,0,daliang20/Hardware,135259986,SystemVerilog,Hardware,168258,0,2018-05-30 20:24:10+00:00,[],
2223,https://github.com/gs291/ECE271-DesignProject.git,2018-06-01 03:34:08+00:00,OSU Electrical and Computer Engineering 271 Design Project,0,gs291/ECE271-DesignProject,135663571,SystemVerilog,ECE271-DesignProject,5162,0,2018-06-09 00:18:33+00:00,[],
2224,https://github.com/Laureen-giac/AQU_Senior_Project.git,2018-01-14 13:13:41+00:00,AQU Senior Project 2018,0,Laureen-giac/AQU_Senior_Project,117431423,SystemVerilog,AQU_Senior_Project,353,0,2018-05-06 21:11:54+00:00,[],
2225,https://github.com/jeffistyping/fifo.git,2018-04-06 21:10:58+00:00,,0,jeffistyping/fifo,128470819,SystemVerilog,fifo,63,0,2019-12-13 20:02:56+00:00,[],
2226,https://github.com/Puplip/final_project.git,2018-04-09 03:54:46+00:00,final project,0,Puplip/final_project,128711903,SystemVerilog,final_project,628569,0,2018-05-01 08:58:30+00:00,[],
2227,https://github.com/matthewSkipworth/Counters.git,2018-05-03 02:54:20+00:00,,0,matthewSkipworth/Counters,131933448,SystemVerilog,Counters,9411,0,2018-05-03 02:59:50+00:00,[],
2228,https://github.com/lukerohrerUCSD/CSE141L_microprocessor.git,2018-05-07 22:59:28+00:00,,0,lukerohrerUCSD/CSE141L_microprocessor,132525175,SystemVerilog,CSE141L_microprocessor,95,0,2020-02-20 21:35:07+00:00,[],
2229,https://github.com/saikishorereddy/ahb_uvc.git,2018-05-09 20:08:14+00:00,,0,saikishorereddy/ahb_uvc,132807460,SystemVerilog,ahb_uvc,6,0,2018-05-09 20:10:55+00:00,[],
2230,https://github.com/namespacestd0/bitcoin.git,2018-05-13 05:02:36+00:00,,0,namespacestd0/bitcoin,133207120,SystemVerilog,bitcoin,222,0,2018-05-28 05:40:12+00:00,['bitcoin'],
2231,https://github.com/MrCaiting/Lab-4.git,2018-02-06 00:02:53+00:00,ECE 385 Lab 4: 8-Bit Logic Processor & 16-Bit Adders,1,MrCaiting/Lab-4,120377961,SystemVerilog,Lab-4,14733,0,2018-02-22 05:59:57+00:00,[],
2232,https://github.com/kbbuch/UVM_Decode.git,2017-11-24 12:22:38+00:00,Verification of Decode Stage using UVM,0,kbbuch/UVM_Decode,111915536,SystemVerilog,UVM_Decode,45,0,2017-11-24 12:26:07+00:00,[],
2233,https://github.com/krame505/ableC-logic.git,2017-11-22 15:58:30+00:00,ableC-based extended C translator for programming ISAs with configurable logic elements,0,krame505/ableC-logic,111704656,SystemVerilog,ableC-logic,129,0,2017-11-22 15:59:16+00:00,[],
2234,https://github.com/NotZombieFood/VGAxKEYBOARD_FPGA.git,2017-11-29 01:34:05+00:00,System verilog project for VGA x Keyboard implementation,0,NotZombieFood/VGAxKEYBOARD_FPGA,112410750,SystemVerilog,VGAxKEYBOARD_FPGA,53501,0,2018-01-19 17:17:19+00:00,[],
2235,https://github.com/margosha280990/dariakorotkova.github.io.git,2017-12-11 22:27:17+00:00,first hosting,0,margosha280990/dariakorotkova.github.io,113915283,SystemVerilog,dariakorotkova.github.io,14920,0,2017-12-24 22:21:40+00:00,[],
2236,https://github.com/atangzwj/PureTrash-CPU.git,2017-12-16 00:47:37+00:00,,0,atangzwj/PureTrash-CPU,114422892,SystemVerilog,PureTrash-CPU,52,0,2017-12-17 01:59:57+00:00,[],
2237,https://github.com/chenjiec/testing_project.git,2017-12-08 16:36:33+00:00,for_testing,0,chenjiec/testing_project,113595423,SystemVerilog,testing_project,6100,0,2018-08-15 17:22:15+00:00,[],
2238,https://github.com/hurenxu/system-Verilog-compiler-assembler.git,2017-12-11 21:15:46+00:00,,0,hurenxu/system-Verilog-compiler-assembler,113909322,SystemVerilog,system-Verilog-compiler-assembler,202,0,2017-12-21 19:10:02+00:00,[],
2239,https://github.com/nchow95/3DES_Accelerated_Optimized.git,2017-12-11 03:58:15+00:00,This is the design of an ASIC connected via APB bus which would accelerate 3DES.,0,nchow95/3DES_Accelerated_Optimized,113810131,SystemVerilog,3DES_Accelerated_Optimized,5161,0,2018-08-10 09:10:42+00:00,[],
2240,https://github.com/rht0111/aprx_FPU.git,2018-02-21 14:19:19+00:00,,0,rht0111/aprx_FPU,122345708,SystemVerilog,aprx_FPU,123,0,2018-02-22 10:35:42+00:00,[],
2241,https://github.com/salilkapur/verilog-scratch.git,2018-02-17 21:58:54+00:00,Repository of experimental verilog modules,0,salilkapur/verilog-scratch,121896071,SystemVerilog,verilog-scratch,204,0,2018-03-08 17:01:18+00:00,[],
2242,https://github.com/junbaih/pipeline-processor.git,2018-03-25 18:16:26+00:00,,0,junbaih/pipeline-processor,126726288,SystemVerilog,pipeline-processor,4398,0,2018-04-01 06:38:38+00:00,[],
2243,https://github.com/junbaih/single-cycle-processor.git,2018-03-25 18:03:26+00:00,,0,junbaih/single-cycle-processor,126725163,SystemVerilog,single-cycle-processor,197,0,2018-03-25 18:15:17+00:00,[],
2244,https://github.com/nightcat33/LC3B_CACHE.git,2018-03-09 04:13:39+00:00,,0,nightcat33/LC3B_CACHE,124486581,SystemVerilog,LC3B_CACHE,22926,0,2018-03-09 04:18:59+00:00,[],
2245,https://github.com/melt-umn/ableC-refcount-closure.git,2018-03-18 03:27:30+00:00,Lambda-closures with reference-counting memory management implemented as an ableC extension,0,melt-umn/ableC-refcount-closure,125689368,SystemVerilog,ableC-refcount-closure,59,0,2022-01-19 02:24:29+00:00,[],https://api.github.com/licenses/lgpl-3.0
2246,https://github.com/jichunl/EE371.git,2018-04-05 22:24:44+00:00,,0,jichunl/EE371,128270874,SystemVerilog,EE371,10,0,2019-01-08 22:27:20+00:00,[],
2247,https://github.com/ignatiusab/lc3b.git,2018-03-10 07:33:30+00:00,Simulating LC3b computer architecture in SystemVerilog,0,ignatiusab/lc3b,124633327,SystemVerilog,lc3b,828,0,2018-03-10 07:36:34+00:00,[],
2248,https://github.com/smubarak/verification.git,2018-03-11 21:55:11+00:00,Hardware verification ,0,smubarak/verification,124803112,SystemVerilog,verification,13,0,2018-03-24 22:17:36+00:00,[],
2249,https://github.com/jde0503/ECE111-Projects.git,2018-03-26 16:56:21+00:00,,0,jde0503/ECE111-Projects,126860885,SystemVerilog,ECE111-Projects,943,0,2018-03-26 17:16:34+00:00,[],
2250,https://github.com/johannydls/LOAC.git,2018-06-13 14:36:29+00:00,Arquivos LOAC 2018.1,0,johannydls/LOAC,137228092,SystemVerilog,LOAC,9,0,2019-03-14 00:50:23+00:00,[],
2251,https://github.com/miketsivinsky/fpga_lib.git,2018-05-24 12:16:08+00:00,FPGA libs (source code IP cores),0,miketsivinsky/fpga_lib,134710882,SystemVerilog,fpga_lib,3,0,2018-06-18 04:53:15+00:00,[],
2252,https://github.com/ketruong/Adder-Multiplier.git,2018-05-23 23:16:29+00:00,,0,ketruong/Adder-Multiplier,134635327,SystemVerilog,Adder-Multiplier,171,0,2018-05-23 23:30:29+00:00,[],
2253,https://github.com/mhazizian/Computer-Architecture-CA-3.git,2018-04-24 09:54:57+00:00,,0,mhazizian/Computer-Architecture-CA-3,130833206,SystemVerilog,Computer-Architecture-CA-3,51,0,2018-05-17 13:59:59+00:00,[],
2254,https://github.com/BinaryLust/uvm_tb.git,2018-04-24 09:14:00+00:00,,0,BinaryLust/uvm_tb,130827840,SystemVerilog,uvm_tb,10,0,2018-04-24 09:14:11+00:00,[],
2255,https://github.com/aminarefzadeh/CA_Component.git,2018-05-16 15:16:25+00:00,good ref for ca component,0,aminarefzadeh/CA_Component,133685270,SystemVerilog,CA_Component,4,0,2018-05-16 15:37:55+00:00,[],
2256,https://github.com/tej-chavan/PDP8_simulator.git,2018-05-26 12:17:52+00:00,Addition of FP instructions to PDP8 ,0,tej-chavan/PDP8_simulator,134958726,SystemVerilog,PDP8_simulator,329,0,2018-12-28 21:49:12+00:00,[],
2257,https://github.com/aurelhoxha/StepMotorSystemVerilog.git,2018-04-09 15:47:50+00:00,Implementation of a Step Motor in System Verilog using Vivado,0,aurelhoxha/StepMotorSystemVerilog,128796167,SystemVerilog,StepMotorSystemVerilog,7,0,2019-07-12 07:48:20+00:00,[],
2258,https://github.com/tallerDisenoDigital/laboratorio4.git,2018-04-03 16:11:02+00:00,,0,tallerDisenoDigital/laboratorio4,127934715,SystemVerilog,laboratorio4,8,0,2018-04-11 17:05:30+00:00,[],
2259,https://github.com/filipeferibeiro/procAF.git,2018-08-07 01:21:25+00:00,Processador da disciplina de Projeto de Sistemas Digitais 2018.1. Alunos: Alberto da Silva e Filipe Fernandes.,0,filipeferibeiro/procAF,143801834,SystemVerilog,procAF,8,0,2018-08-07 01:35:44+00:00,[],
2260,https://github.com/aliaamohamedali/Uni_Stuff.git,2018-08-04 16:24:10+00:00,"Content and Resources, Tools and Assignments of some of Uni's Courses. ",0,aliaamohamedali/Uni_Stuff,143544656,SystemVerilog,Uni_Stuff,48269,0,2018-10-19 12:12:53+00:00,[],
2261,https://github.com/edjose2206/Codigo_SV.git,2018-08-16 17:46:06+00:00,Repository with SystemVerilog Code examples,0,edjose2206/Codigo_SV,145021222,SystemVerilog,Codigo_SV,6,0,2018-08-16 19:47:26+00:00,[],
2262,https://github.com/cetola/EyeLoveTrafficLights.git,2018-06-08 23:08:44+00:00,Playing with verilog in traffic,0,cetola/EyeLoveTrafficLights,136673751,SystemVerilog,EyeLoveTrafficLights,986,0,2021-03-29 02:23:11+00:00,[],
2263,https://github.com/sand96/Linear-Feedback-shift-register.git,2018-05-03 22:59:08+00:00,,0,sand96/Linear-Feedback-shift-register,132058038,SystemVerilog,Linear-Feedback-shift-register,3,0,2018-05-04 20:24:13+00:00,[],
2264,https://github.com/mfbsouza/MipsCPU.git,2018-05-04 17:59:24+00:00,Implementation of a mips-based processor architecture using SystemVerilog and VHDL,2,mfbsouza/MipsCPU,132172753,SystemVerilog,MipsCPU,1590,0,2021-01-18 19:58:35+00:00,"['microprocessor', 'mips', 'systemverilog', 'quartus-prime']",
2265,https://github.com/CarlosW/Examen_PWM.git,2018-05-09 02:54:17+00:00,Examen 2 diseño y verificación,0,CarlosW/Examen_PWM,132693302,SystemVerilog,Examen_PWM,18,0,2018-05-09 03:29:51+00:00,[],
2266,https://github.com/shubham9898/git_trial.git,2018-07-02 20:54:49+00:00,sample for tutorial,0,shubham9898/git_trial,139493859,SystemVerilog,git_trial,1,0,2018-07-02 21:02:27+00:00,[],
2267,https://github.com/ozgeergun/A-Simple-Microprocessor.git,2018-08-17 14:47:41+00:00,A simple single cycle microprocessor ,0,ozgeergun/A-Simple-Microprocessor,145132631,SystemVerilog,A-Simple-Microprocessor,5,0,2019-02-15 15:58:54+00:00,[],
2268,https://github.com/dexyland/UVMProject.git,2018-01-17 12:28:02+00:00,Projektni zadatak iz predmeta napredna verifikacija,0,dexyland/UVMProject,117833091,SystemVerilog,UVMProject,17455,0,2018-01-17 14:48:40+00:00,[],
2269,https://github.com/Nathees/UVM.git,2018-01-16 08:36:05+00:00,Higher Level Verification methodology for HDL,0,Nathees/UVM,117656554,SystemVerilog,UVM,12,0,2018-01-16 08:41:06+00:00,[],
2270,https://github.com/levush/A-Z80-CPU.git,2018-01-16 17:38:21+00:00,"fork of A-Z80 CPU core from opencores.org, found at bitbucket. I want is to add support for cliffords icecube tools (complete open source fpga flow!)",0,levush/A-Z80-CPU,117717842,SystemVerilog,A-Z80-CPU,34786,0,2018-01-16 17:40:32+00:00,[],https://api.github.com/licenses/gpl-2.0
2271,https://github.com/lovvig/SVI_UPF_USE_ABUSE.git,2018-01-16 16:47:22+00:00,Code for experiments conducted for the 'SV Interface and UPF: Use and Abuse' paper.,0,lovvig/SVI_UPF_USE_ABUSE,117711963,SystemVerilog,SVI_UPF_USE_ABUSE,40,0,2018-01-16 16:48:37+00:00,[],
2272,https://github.com/EquipoVeri/BlinkingMachine.git,2018-02-10 20:28:39+00:00,,0,EquipoVeri/BlinkingMachine,121051522,SystemVerilog,BlinkingMachine,7,0,2018-02-10 20:30:41+00:00,[],
2273,https://github.com/rht0111/FPU_single_precision.git,2018-02-12 10:53:14+00:00,,0,rht0111/FPU_single_precision,121235274,SystemVerilog,FPU_single_precision,118,0,2018-02-12 10:59:45+00:00,[],
2274,https://github.com/prateekmohan1/seqMult.git,2018-03-25 01:32:23+00:00,,0,prateekmohan1/seqMult,126654896,SystemVerilog,seqMult,7,0,2018-03-25 01:33:23+00:00,[],
2275,https://github.com/BasRizk/Tic-Tac-Toe-On-FPGA.git,2018-03-09 21:17:28+00:00,A Tic-Tac-Toe with multiple level levels and flashing lights implementation using Hardware Definition Language (Verilog) and DE10-Lite Altera Max 10 FPGA.,1,BasRizk/Tic-Tac-Toe-On-FPGA,124594246,SystemVerilog,Tic-Tac-Toe-On-FPGA,7060,0,2018-11-23 19:10:26+00:00,"['fpga', 'altera', 'verilog', 'verilog-hdl', 'tic-tac-toe', 'hardware', 'hardware-description-language']",
2276,https://github.com/leonyoliveir/lab_arquitetura.git,2018-03-17 01:12:14+00:00,Repositório utilizado para armazenar os projetos feitos na disciplina de Laboratório de Arquitetura de Computadores 2017.2.,0,leonyoliveir/lab_arquitetura,125585770,SystemVerilog,lab_arquitetura,25,0,2018-05-15 20:05:23+00:00,[],
2277,https://github.com/cav04/project_sat.git,2018-02-23 07:51:43+00:00,Master's Thesis,0,cav04/project_sat,122589873,SystemVerilog,project_sat,2555,0,2018-03-13 05:34:33+00:00,[],
2278,https://github.com/umanggarg96/FPGAwork_test.git,2018-02-26 22:28:32+00:00,,0,umanggarg96/FPGAwork_test,123039229,SystemVerilog,FPGAwork_test,6,0,2018-02-26 22:33:26+00:00,[],
2279,https://github.com/LogicAnalyzer/analyzer.git,2018-06-20 03:11:38+00:00,,0,LogicAnalyzer/analyzer,137973895,SystemVerilog,analyzer,7049,0,2018-12-06 01:31:56+00:00,[],https://api.github.com/licenses/gpl-2.0
2280,https://github.com/filcaval1234/ProcessadorDidatico.git,2018-06-20 15:09:02+00:00,,0,filcaval1234/ProcessadorDidatico,138049350,SystemVerilog,ProcessadorDidatico,775,0,2018-06-27 13:50:22+00:00,[],
2281,https://github.com/sixtop/sap.git,2018-05-25 19:46:26+00:00,Simple-As-Possible computer,0,sixtop/sap,134898277,SystemVerilog,sap,17476,0,2018-07-20 17:33:39+00:00,[],
2282,https://github.com/ZoranBi/ECE474.git,2018-06-01 22:26:17+00:00,verilog ,0,ZoranBi/ECE474,135768490,SystemVerilog,ECE474,1416,0,2019-05-21 07:01:03+00:00,[],
2283,https://github.com/skyking94/HardwareAcceleration-MatrixMultiplication.git,2018-03-20 03:36:16+00:00,Hardware Multiplication on FPGA for Matrix Multiplication,1,skyking94/HardwareAcceleration-MatrixMultiplication,125956248,SystemVerilog,HardwareAcceleration-MatrixMultiplication,17,0,2018-03-20 03:39:04+00:00,[],
2284,https://github.com/EquipoVeri/MxV_Practica3.git,2018-04-21 22:35:19+00:00,,0,EquipoVeri/MxV_Practica3,130516988,SystemVerilog,MxV_Practica3,62,0,2018-05-04 08:31:19+00:00,[],
2285,https://github.com/Hassan-Elseoudy/MIPS-SingleCycle.git,2018-04-21 17:49:30+00:00,Implementation of MIPS Single Cycle (using SystemVerilog),0,Hassan-Elseoudy/MIPS-SingleCycle,130498319,SystemVerilog,MIPS-SingleCycle,415,0,2018-04-22 16:51:42+00:00,[],
2286,https://github.com/Dimitrov2005/BIST_Implementation.git,2018-04-27 16:13:55+00:00,,0,Dimitrov2005/BIST_Implementation,131319134,SystemVerilog,BIST_Implementation,51,0,2018-05-03 14:16:01+00:00,[],
2287,https://github.com/liyichen7887/CSE141L-CPU-Desgin.git,2018-04-18 12:09:54+00:00,,0,liyichen7887/CSE141L-CPU-Desgin,130056550,SystemVerilog,CSE141L-CPU-Desgin,32,0,2018-04-18 12:21:24+00:00,[],
2288,https://github.com/clansh99/my_first_git_test.git,2018-04-08 14:22:39+00:00,test for using github,0,clansh99/my_first_git_test,128649025,SystemVerilog,my_first_git_test,1,0,2018-04-08 14:24:29+00:00,[],
2289,https://github.com/donaldsa18/EE435Project4.1.git,2018-04-11 19:26:01+00:00,,0,donaldsa18/EE435Project4.1,129143511,SystemVerilog,EE435Project4.1,0,0,2018-04-11 19:26:34+00:00,[],
2290,https://github.com/jimherd/motion_1.git,2018-08-08 11:00:59+00:00,,1,jimherd/motion_1,144001268,SystemVerilog,motion_1,463,0,2020-08-28 22:41:07+00:00,[],
2291,https://github.com/kmagor/template_uvm_learning.git,2018-07-09 09:32:14+00:00,This is a simple DUT and for that a uvm testbench.,0,kmagor/template_uvm_learning,140263332,SystemVerilog,template_uvm_learning,41,0,2018-07-31 13:45:37+00:00,[],
2292,https://github.com/muzicarski/HDL.git,2018-07-09 22:15:51+00:00,"Design sources (VHDL, Systemverilog)",0,muzicarski/HDL,140347837,SystemVerilog,HDL,19,0,2018-10-26 22:19:59+00:00,[],
2293,https://github.com/BinaryLust/uvm_test.git,2018-04-24 09:16:31+00:00,,0,BinaryLust/uvm_test,130828177,SystemVerilog,uvm_test,4,0,2018-04-24 09:16:42+00:00,[],
2294,https://github.com/nguyenbuiUCSD/Stack_processor.git,2018-05-18 03:23:32+00:00,,0,nguyenbuiUCSD/Stack_processor,133897698,SystemVerilog,Stack_processor,449,0,2018-06-14 12:08:06+00:00,[],
2295,https://github.com/Wauro21/vivado.git,2018-05-07 22:49:08+00:00,,0,Wauro21/vivado,132524474,SystemVerilog,vivado,45,0,2018-08-28 16:12:56+00:00,[],
2296,https://github.com/pulp-platform/udma_jtag_fifo.git,2018-05-02 15:33:44+00:00,,0,pulp-platform/udma_jtag_fifo,131871286,SystemVerilog,udma_jtag_fifo,11,0,2019-10-03 14:07:22+00:00,[],
2297,https://github.com/l5h6y7lhy/ECE-385-Final-Project.git,2018-07-14 04:46:21+00:00,"We design a Pacman game in FPGA. In addition to hardware-software interfaces, we also include the AI for ghost motions.",1,l5h6y7lhy/ECE-385-Final-Project,140916571,SystemVerilog,ECE-385-Final-Project,1680,0,2022-01-02 20:44:24+00:00,"['fpga', 'video-game', 'computer-graphics']",
2298,https://github.com/mhrice/ECE111Bitcoin.git,2018-06-10 09:56:06+00:00,,0,mhrice/ECE111Bitcoin,136797299,SystemVerilog,ECE111Bitcoin,18,0,2018-06-10 10:02:18+00:00,[],
2299,https://github.com/r-chance/ece111.git,2018-08-07 18:01:23+00:00,,0,r-chance/ece111,143909393,SystemVerilog,ece111,4,0,2018-08-07 18:14:48+00:00,[],
2300,https://github.com/renahn/Trabalho_de_arquitetura.git,2017-11-30 17:25:59+00:00,"Trabalho para estender as instruções do ARM para usar CMP, TST, LSL ",0,renahn/Trabalho_de_arquitetura,112640081,SystemVerilog,Trabalho_de_arquitetura,695,0,2017-11-30 18:25:54+00:00,[],
2301,https://github.com/plebsX/fpadder.git,2017-12-01 16:36:11+00:00,,0,plebsX/fpadder,112762513,SystemVerilog,fpadder,233,0,2017-12-01 16:44:10+00:00,[],
2302,https://github.com/CharlieLou/startup.git,2017-12-06 12:04:47+00:00,I'm trying on it.,0,CharlieLou/startup,113311229,SystemVerilog,startup,11,0,2018-01-20 07:20:05+00:00,[],
2303,https://github.com/pengwubj/sva_tutorial.git,2018-01-11 07:04:07+00:00,,0,pengwubj/sva_tutorial,117063357,SystemVerilog,sva_tutorial,2,0,2018-01-11 07:15:24+00:00,[],
2304,https://github.com/Znigneering/2121Project.git,2018-03-15 12:04:05+00:00,Verilog src implement,1,Znigneering/2121Project,125361254,SystemVerilog,2121Project,28,0,2018-04-18 01:20:35+00:00,[],
2305,https://github.com/Vikra/youtube.git,2018-03-23 07:03:01+00:00,Examples shown in YouTube channel,0,Vikra/youtube,126446036,SystemVerilog,youtube,8,0,2018-04-22 20:33:01+00:00,[],
2306,https://github.com/Lucas-CardosoO/HardwareProject_MIPS.git,2018-04-12 22:02:07+00:00,,0,Lucas-CardosoO/HardwareProject_MIPS,129315815,SystemVerilog,HardwareProject_MIPS,339980,0,2018-05-05 16:21:20+00:00,[],
2307,https://github.com/donaldsa18/BMicroprocessor.git,2018-04-16 17:09:51+00:00,,0,donaldsa18/BMicroprocessor,129778651,SystemVerilog,BMicroprocessor,2610,0,2018-05-02 21:33:31+00:00,[],
2308,https://github.com/wa9035148/systemverilog.git,2018-03-02 07:43:54+00:00,Systemverilog Learning Note,0,wa9035148/systemverilog,123547296,SystemVerilog,systemverilog,113,0,2019-02-06 09:24:32+00:00,[],
2309,https://github.com/jerry990/BiNoC.git,2018-03-09 03:59:25+00:00,,0,jerry990/BiNoC,124485472,SystemVerilog,BiNoC,24,0,2018-03-09 04:03:05+00:00,[],
2310,https://github.com/melt-umn/ableJ14.git,2018-03-08 22:08:33+00:00,,0,melt-umn/ableJ14,124453991,SystemVerilog,ableJ14,211,0,2022-01-19 02:15:52+00:00,[],
2311,https://github.com/adelmeleka/MIPS-Single-Cycle.git,2018-04-27 22:41:54+00:00,MIPS Single Cycle representation in System Verilog,0,adelmeleka/MIPS-Single-Cycle,131351111,SystemVerilog,MIPS-Single-Cycle,41,0,2021-04-01 04:55:57+00:00,[],
2312,https://github.com/Tovaral/ECE-272-Section-4.git,2018-05-05 05:31:26+00:00,,0,Tovaral/ECE-272-Section-4,132217995,SystemVerilog,ECE-272-Section-4,7,0,2018-05-07 21:04:22+00:00,[],
2313,https://github.com/harsharamanna/hardware_sat_solver.git,2018-02-25 20:22:25+00:00,,1,harsharamanna/hardware_sat_solver,122873180,SystemVerilog,hardware_sat_solver,173,0,2018-04-27 23:08:57+00:00,[],
2314,https://github.com/bartuatabek/Bilkent_CS223_Project.git,2018-04-09 20:51:10+00:00,Project assigned in the CS223 - Digital Design course at Bilkent University. (2017-2018),0,bartuatabek/Bilkent_CS223_Project,128832231,SystemVerilog,Bilkent_CS223_Project,16,0,2023-01-28 09:38:18+00:00,"['verilog', 'digital-design', 'cs223', 'homework-assignments', 'systemverilog']",
2315,https://github.com/aurelhoxha/TwoPlayerPongGameSystemVerilog.git,2018-04-09 16:34:07+00:00,The idea about this project is to create a virtual table tennis game in a 8x8 Led Matrix in System Verilog. ,0,aurelhoxha/TwoPlayerPongGameSystemVerilog,128802790,SystemVerilog,TwoPlayerPongGameSystemVerilog,449,0,2018-04-09 16:39:47+00:00,[],
2316,https://github.com/bruceb8/TXDriver.git,2018-05-23 22:23:17+00:00,Driver for the UART,0,bruceb8/TXDriver,134631601,SystemVerilog,TXDriver,2,0,2018-05-23 22:23:24+00:00,[],
2317,https://github.com/claude-betz/VADER-.git,2018-05-25 15:20:06+00:00,Versitile Accelarated Digital Encryption Recovery,0,claude-betz/VADER-,134872999,SystemVerilog,VADER-,179,0,2018-05-26 10:06:22+00:00,[],
2318,https://github.com/ericoRF/monitordepotencia.git,2018-05-23 13:31:38+00:00,,0,ericoRF/monitordepotencia,134574175,SystemVerilog,monitordepotencia,3,0,2018-08-01 21:24:20+00:00,[],
2319,https://github.com/aslupin/logic-circuit-cpe31.git,2018-08-17 17:07:36+00:00,01204224 Logic Circuit Laboratory,0,aslupin/logic-circuit-cpe31,145146782,SystemVerilog,logic-circuit-cpe31,1874,0,2018-12-10 14:32:15+00:00,"['logisim', 'logic-circuit', 'cpe31', 'learning-labs']",
2320,https://github.com/WendongZhang1995/FineGrain.git,2018-07-19 04:18:03+00:00,,0,WendongZhang1995/FineGrain,141523766,SystemVerilog,FineGrain,27,0,2018-07-19 08:33:38+00:00,[],
2321,https://github.com/BasRizk/MIPS_Processor.git,2018-04-17 20:00:16+00:00,"A simulation of a MIPS Processor, implemented for a project in CSEN-602 (Computer Systems Architecture) course in the German University In Cairo.",0,BasRizk/MIPS_Processor,129958122,SystemVerilog,MIPS_Processor,102,0,2018-06-23 10:45:39+00:00,[],
2322,https://github.com/ghanashyamprabhu/vlsi.git,2018-08-12 06:51:20+00:00,Repository with solutions for digital design challenges,0,ghanashyamprabhu/vlsi,144444696,SystemVerilog,vlsi,349,0,2018-08-19 07:15:24+00:00,[],
2323,https://github.com/ahmtakf/TheTankMaze.git,2018-08-16 07:45:59+00:00,Two player game on the same monitor controlled by pushbuttons written in SystemVerilog,0,ahmtakf/TheTankMaze,144954731,SystemVerilog,TheTankMaze,6709,0,2018-08-16 07:51:48+00:00,"['systemverilog', 'verilog', 'vga', 'basys3']",
2324,https://github.com/westerndigitalcorporation/swerv_eh1.git,2018-11-29 04:49:47+00:00,A directory of Western Digital’s RISC-V SweRV Cores,132,westerndigitalcorporation/swerv_eh1,159609215,SystemVerilog,swerv_eh1,4405,846,2024-04-09 01:09:10+00:00,[],https://api.github.com/licenses/apache-2.0
2325,https://github.com/trivialmips/nontrivial-mips.git,2019-02-20 12:02:17+00:00,"NonTrivial-MIPS is a synthesizable superscalar MIPS processor with branch prediction and FPU support, and it is capable of booting linux.",95,trivialmips/nontrivial-mips,171665435,SystemVerilog,nontrivial-mips,21347,552,2024-04-11 05:51:34+00:00,"['systemverilog', 'mips', 'fpga-soc-linux', 'fpga-soc', 'cpu', 'fpga', 'xilinx']",
2326,https://github.com/black-parrot/black-parrot.git,2018-09-18 04:01:42+00:00,A Linux-capable RISC-V multicore for and by the world,174,black-parrot/black-parrot,149226772,SystemVerilog,black-parrot,35134,524,2024-04-12 12:10:16+00:00,[],https://api.github.com/licenses/bsd-3-clause
2327,https://github.com/bespoke-silicon-group/basejump_stl.git,2019-04-04 15:52:33+00:00,BaseJump STL: A Standard Template Library for SystemVerilog,91,bespoke-silicon-group/basejump_stl,179529893,SystemVerilog,basejump_stl,8424,444,2024-04-12 20:04:31+00:00,[],
2328,https://github.com/facebookresearch/deepfloat.git,2018-09-27 21:04:49+00:00,"An exploration of log domain ""alternative floating point"" for hardware ML/AI accelerators.",40,facebookresearch/deepfloat,150647659,SystemVerilog,deepfloat,316,385,2024-03-17 12:54:43+00:00,[],
2329,https://github.com/openhwgroup/cvfpu.git,2018-09-23 14:08:13+00:00,Parametric floating-point unit with support for standard RISC-V formats and operations as well as transprecision formats.,100,openhwgroup/cvfpu,149990255,SystemVerilog,cvfpu,6711,358,2024-04-12 14:21:49+00:00,[],https://api.github.com/licenses/apache-2.0
2330,https://github.com/WangXuan95/USTC-RVSoC.git,2019-02-05 08:16:27+00:00,An FPGA-based RISC-V CPU+SoC with a simple and extensible peripheral bus. 基于FPGA的RISC-V CPU+SoC，包含一个简单且可扩展的外设总线。,69,WangXuan95/USTC-RVSoC,169208857,SystemVerilog,USTC-RVSoC,65246,313,2024-04-05 15:10:18+00:00,"['riscv', 'risc-v', 'rv32i', 'soc', 'fpga', 'softcore', 'rtl', 'verilog', 'systemverilog', 'cpu']",https://api.github.com/licenses/gpl-3.0
2331,https://github.com/taichi-ishitani/tvip-axi.git,2018-09-22 14:43:33+00:00,AMBA AXI VIP,92,taichi-ishitani/tvip-axi,149885780,SystemVerilog,tvip-axi,150,295,2024-04-04 07:52:59+00:00,"['systemverilog', 'uvm', 'amba', 'amba-axi', 'axi', 'axi4', 'vip']",https://api.github.com/licenses/apache-2.0
2332,https://github.com/bespoke-silicon-group/bsg_manycore.git,2019-04-12 18:13:30+00:00,"Tile based architecture designed for computing efficiency, scalability and generality",56,bespoke-silicon-group/bsg_manycore,181061284,SystemVerilog,bsg_manycore,11020,210,2024-02-17 01:47:55+00:00,[],
2333,https://github.com/pulp-platform/riscv-dbg.git,2019-01-24 11:49:31+00:00,RISC-V Debug Support for our PULP RISC-V Cores,68,pulp-platform/riscv-dbg,167359198,SystemVerilog,riscv-dbg,430,183,2024-04-09 16:46:59+00:00,"['riscv', 'debug']",
2334,https://github.com/tilk/riscv-simple-sv.git,2019-04-18 13:11:10+00:00,A simple RISC V core for teaching,17,tilk/riscv-simple-sv,182090180,SystemVerilog,riscv-simple-sv,153,147,2024-04-08 02:02:55+00:00,"['risc-v', 'riscv', 'verilog']",https://api.github.com/licenses/bsd-3-clause
2335,https://github.com/ijor/fx68k.git,2018-11-15 13:36:10+00:00,FX68K 68000 cycle accurate SystemVerilog core,30,ijor/fx68k,157717120,SystemVerilog,fx68k,60,130,2024-02-27 04:21:51+00:00,[],https://api.github.com/licenses/gpl-3.0
2336,https://github.com/ZcashFoundation/zcash-fpga.git,2019-01-13 02:34:34+00:00,Zcash FPGA acceleration engine,45,ZcashFoundation/zcash-fpga,165457925,SystemVerilog,zcash-fpga,32457,114,2024-02-28 20:22:34+00:00,[],https://api.github.com/licenses/gpl-3.0
2337,https://github.com/pulp-platform/register_interface.git,2018-09-17 15:10:35+00:00,Generic Register Interface (contains various adapters),19,pulp-platform/register_interface,149144240,SystemVerilog,register_interface,774,80,2024-04-11 13:56:55+00:00,[],
2338,https://github.com/mmxsrup/axi4-interface.git,2019-01-06 01:00:25+00:00,AXI4 and AXI4-Lite interface definitions,27,mmxsrup/axi4-interface,164264048,SystemVerilog,axi4-interface,32,65,2024-04-01 09:51:51+00:00,"['axi4', 'axi4-lite', 'fpga', 'systemverilog', 'axi4-stream']",https://api.github.com/licenses/gpl-3.0
2339,https://github.com/Featherweight-IP/fwrisc.git,2018-10-30 05:13:10+00:00,Featherweight RISC-V implementation,9,Featherweight-IP/fwrisc,155328026,SystemVerilog,fwrisc,3096,51,2023-12-22 15:51:50+00:00,"['risc-v', 'zephyr', 'verilog']",https://api.github.com/licenses/apache-2.0
2340,https://github.com/Pusty/writeups.git,2018-11-27 00:15:10+00:00,Writeups for CTFs,5,Pusty/writeups,159250502,SystemVerilog,writeups,16177,51,2024-03-27 14:01:21+00:00,[],
2341,https://github.com/pulp-platform/bigpulp.git,2018-09-12 11:39:55+00:00,"⛔ DEPRECATED ⛔ RISC-V manycore accelerator for HERO, bigPULP hardware platform",17,pulp-platform/bigpulp,148470875,SystemVerilog,bigpulp,1936,50,2023-08-09 03:31:26+00:00,[],
2342,https://github.com/dpretet/cdc.git,2019-03-17 10:16:29+00:00,Repository gathering basic modules for CDC purpose,6,dpretet/cdc,176084817,SystemVerilog,cdc,21,45,2024-04-13 06:41:04+00:00,"['cdc', 'fgpa', 'asic', 'timing', 'cross-domain-crossing', 'pulse-synchronizer', 'fifo']",https://api.github.com/licenses/apache-2.0
2343,https://github.com/pulp-platform/axi_riscv_atomics.git,2019-02-18 17:49:13+00:00,AXI Adapter(s) for RISC-V Atomic Operations,12,pulp-platform/axi_riscv_atomics,171329571,SystemVerilog,axi_riscv_atomics,325,42,2024-03-30 14:00:14+00:00,[],
2344,https://github.com/pulp-platform/common_verification.git,2019-01-10 08:44:13+00:00,SystemVerilog modules and classes commonly used for verification,11,pulp-platform/common_verification,165023449,SystemVerilog,common_verification,63,39,2024-03-31 14:12:30+00:00,[],
2345,https://github.com/ARM-software/DeepFreeze.git,2019-02-11 20:03:03+00:00,,19,ARM-software/DeepFreeze,170193398,SystemVerilog,DeepFreeze,22587,38,2023-09-01 03:17:21+00:00,[],https://api.github.com/licenses/mit
2346,https://github.com/darthsider/UART.git,2018-12-21 13:08:57+00:00,UART design in SV and verification using UVM and SV,14,darthsider/UART,162715455,SystemVerilog,UART,50,38,2024-04-07 07:51:14+00:00,[],
2347,https://github.com/muneebullashariff/i2c_vip.git,2019-04-01 07:53:01+00:00,Verification IP for I2C protocol,70,muneebullashariff/i2c_vip,178812890,SystemVerilog,i2c_vip,9696,34,2024-04-05 06:59:49+00:00,[],https://api.github.com/licenses/apache-2.0
2348,https://github.com/designsolver/ahb3_uvm_tb.git,2019-03-11 02:01:03+00:00,AMBA 3 AHB UVM TB,9,designsolver/ahb3_uvm_tb,174907805,SystemVerilog,ahb3_uvm_tb,32,32,2024-03-26 13:23:11+00:00,[],https://api.github.com/licenses/mit
2349,https://github.com/emwzq/example_uvm.git,2019-01-22 06:58:38+00:00,UVM实战随书源码,14,emwzq/example_uvm,166943921,SystemVerilog,example_uvm,2121,32,2024-03-14 06:55:40+00:00,[],
2350,https://github.com/esynr3z/usb20dev.git,2018-09-28 07:44:47+00:00,USB 2.0 FS Device controller IP core written in SystemVerilog,12,esynr3z/usb20dev,150704302,SystemVerilog,usb20dev,1338,30,2024-03-28 13:48:15+00:00,[],https://api.github.com/licenses/mit
2351,https://github.com/adamchristiansen/fpga-ethernet-udp.git,2018-09-04 20:42:34+00:00,An HDL design for sending data over Ethernet,9,adamchristiansen/fpga-ethernet-udp,147415296,SystemVerilog,fpga-ethernet-udp,117,28,2024-04-08 01:04:55+00:00,"['ethernet', 'fpga', 'hdl', 'ip', 'ipv4', 'mac', 'mii', 'phy', 'udp']",https://api.github.com/licenses/mit
2352,https://github.com/Dmitriy0111/nanoFOX.git,2018-11-19 12:49:47+00:00,A small RISC-V core (SystemVerilog),2,Dmitriy0111/nanoFOX,158221925,SystemVerilog,nanoFOX,2352,28,2024-03-21 21:09:44+00:00,"['systemverilog', 'risc-v', 'education', 'programming', 'microarchitecture', 'cpu']",https://api.github.com/licenses/apache-2.0
2353,https://github.com/designsolver/ahb2apb_bridge_vip.git,2019-03-04 06:12:28+00:00,AHB to APB Bridge VIP,12,designsolver/ahb2apb_bridge_vip,173684481,SystemVerilog,ahb2apb_bridge_vip,27,27,2024-04-02 06:22:09+00:00,[],https://api.github.com/licenses/mit
2354,https://github.com/carsonrobles/fpga-guitar-pedal.git,2019-01-18 22:58:38+00:00,FPGA based guitar effect station.,4,carsonrobles/fpga-guitar-pedal,166483062,SystemVerilog,fpga-guitar-pedal,8102,25,2024-01-13 15:05:05+00:00,[],
2355,https://github.com/kaushalmodi/nim-systemverilog-dpic.git,2019-01-22 19:16:03+00:00,Using Nim to interface with SystemVerilog test benches via DPI-C,5,kaushalmodi/nim-systemverilog-dpic,167052284,SystemVerilog,nim-systemverilog-dpic,2980,23,2023-11-28 05:26:17+00:00,"['nim', 'dpi-c', 'systemverilog', 'verification', 'c', 'cpp']",
2356,https://github.com/supranational/hardware.git,2019-04-26 17:52:36+00:00,Low level arithmetic primitives in RTL,4,supranational/hardware,183672134,SystemVerilog,hardware,46,20,2024-04-01 02:00:58+00:00,[],https://api.github.com/licenses/apache-2.0
2357,https://github.com/vfinotti/cortex-m0-soft-microcontroller.git,2018-09-25 19:55:13+00:00,Soft-microcontroller implementation of an ARM Cortex-M0,8,vfinotti/cortex-m0-soft-microcontroller,150321500,SystemVerilog,cortex-m0-soft-microcontroller,206,20,2024-02-14 00:30:13+00:00,[],https://api.github.com/licenses/mit
2358,https://github.com/isuckatdrifting/Gaia.git,2019-02-17 02:47:45+00:00,Generate UVM testbench framework template files with Python 3,6,isuckatdrifting/Gaia,171074999,SystemVerilog,Gaia,996,20,2024-02-27 01:11:36+00:00,"['python', 'uvm', 'uvm-template', 'systemverilog']",https://api.github.com/licenses/apache-2.0
2359,https://github.com/mingzhang952/uvm_auto.git,2018-11-02 11:40:01+00:00,uvm auto generator,13,mingzhang952/uvm_auto,155858002,SystemVerilog,uvm_auto,8,20,2023-07-22 04:11:06+00:00,[],https://api.github.com/licenses/apache-2.0
2360,https://github.com/gokulbalagopal/Verification-of-FIFO-using-SystemVerilog.git,2019-02-06 02:29:30+00:00,"Built a test environment using SystemVerilog to verify FIFO. Used QuestaSim to design and verify the module in SystemVerilog and Verilog. Created components like generator, driver, monitor, scoreboard, interface, environment, and testbench. ",7,gokulbalagopal/Verification-of-FIFO-using-SystemVerilog,169345528,SystemVerilog,Verification-of-FIFO-using-SystemVerilog,8,17,2024-04-12 11:19:18+00:00,[],
2361,https://github.com/gundy/tinyfpga-bx-demos.git,2018-08-27 04:29:26+00:00,Some simple demo routines for the TinyFPGA BX,5,gundy/tinyfpga-bx-demos,146246929,SystemVerilog,tinyfpga-bx-demos,226,16,2021-01-21 22:13:13+00:00,[],
2362,https://github.com/vatsal184/RISCV-UVM-Verification.git,2019-02-13 15:19:58+00:00,,4,vatsal184/RISCV-UVM-Verification,170529553,SystemVerilog,RISCV-UVM-Verification,54,16,2024-04-07 02:38:34+00:00,[],https://api.github.com/licenses/mit
2363,https://github.com/toivoh/rastrgrafx.git,2019-02-24 15:54:31+00:00,FPGA implementation of a simple scanline based 2d graphics engine,1,toivoh/rastrgrafx,172357477,SystemVerilog,rastrgrafx,17,16,2024-02-24 00:12:05+00:00,[],https://api.github.com/licenses/mit
2364,https://github.com/gchinna/uvm-1.2.git,2018-12-05 01:41:40+00:00,uvm-1.2 library files from: http://www.accellera.org/images/downloads/standards/uvm/uvm-1.2.tar.gz,7,gchinna/uvm-1.2,160443180,SystemVerilog,uvm-1.2,2082,15,2024-03-13 01:59:23+00:00,[],https://api.github.com/licenses/apache-2.0
2365,https://github.com/medalotte/SystemVerilog-UART.git,2019-03-21 03:59:24+00:00,Simple UART transmitter and receiver,9,medalotte/SystemVerilog-UART,176866911,SystemVerilog,SystemVerilog-UART,34,15,2024-03-23 05:18:12+00:00,['uart'],https://api.github.com/licenses/mit
2366,https://github.com/zhajio1988/uvm_candy_lover.git,2019-03-15 03:29:07+00:00,:candy:UVM candy lover testbench  which uses YASA as simulation script,7,zhajio1988/uvm_candy_lover,175742258,SystemVerilog,uvm_candy_lover,59,15,2024-04-10 20:39:01+00:00,"['sv', 'uvm', 'yasa', 'dv']",
2367,https://github.com/shady831213/jarvisuk.git,2019-03-20 13:04:36+00:00,Just A Really Very Impressive Systemverilog UVM Kit,1,shady831213/jarvisuk,176735404,SystemVerilog,jarvisuk,68,15,2023-11-06 06:30:15+00:00,[],https://api.github.com/licenses/apache-2.0
2368,https://github.com/intel/multi_power_sequencer.git,2019-05-14 23:24:04+00:00,"Multi-Rail Power Sequencer, capable of monitoring and sequencing up to 144 power rails, offers a configurable and rich set of features, such as dynamic adjustments and debug via PMBus, adjustable timing, power rail grouping, etc.",5,intel/multi_power_sequencer,186714717,SystemVerilog,multi_power_sequencer,1604,15,2024-03-03 04:48:40+00:00,[],https://api.github.com/licenses/mit
2369,https://github.com/deekshithkrishnegowda/AHB2APB-bridge-IP-core-verification.git,2018-10-13 04:03:55+00:00,Maven Silicon Project,2,deekshithkrishnegowda/AHB2APB-bridge-IP-core-verification,152833540,SystemVerilog,AHB2APB-bridge-IP-core-verification,19298,15,2024-04-02 06:22:13+00:00,[],
2370,https://github.com/da-steve101/radio_modulation.git,2018-12-10 21:19:56+00:00,Classify modulation of signals,4,da-steve101/radio_modulation,161237722,SystemVerilog,radio_modulation,113224,14,2022-06-03 05:39:58+00:00,[],https://api.github.com/licenses/lgpl-3.0
2371,https://github.com/pulp-platform/fpu_div_sqrt_mvp.git,2018-09-23 14:23:15+00:00,[UNRELEASED] FP div/sqrt unit for transprecision,13,pulp-platform/fpu_div_sqrt_mvp,149991470,SystemVerilog,fpu_div_sqrt_mvp,760,14,2024-04-03 03:03:02+00:00,[],
2372,https://github.com/openformal/sva_basics.git,2019-02-08 16:06:43+00:00,This repository is compilation of basics of System Verilog Assertions in context of formal verification,2,openformal/sva_basics,169761296,SystemVerilog,sva_basics,104,14,2024-02-29 02:17:56+00:00,[],https://api.github.com/licenses/apache-2.0
2373,https://github.com/muneebullashariff/uart_vip.git,2019-04-01 07:48:57+00:00,Verification IP for UART protocol,11,muneebullashariff/uart_vip,178812236,SystemVerilog,uart_vip,806,13,2023-10-17 13:31:07+00:00,[],https://api.github.com/licenses/apache-2.0
2374,https://github.com/zhajio1988/YasaUvk.git,2019-03-29 07:44:56+00:00,:bug:UVM verification kits which uses YASA as simulation script,4,zhajio1988/YasaUvk,178357323,SystemVerilog,YasaUvk,60,13,2022-07-07 02:05:30+00:00,"['ic', 'dv', 'systemverilog', 'uvm']",https://api.github.com/licenses/apache-2.0
2375,https://github.com/muneebullashariff/spi_vip.git,2019-04-01 07:52:39+00:00,Verification IP for SPI protocol,12,muneebullashariff/spi_vip,178812819,SystemVerilog,spi_vip,1393,13,2023-12-04 04:56:48+00:00,[],https://api.github.com/licenses/apache-2.0
2376,https://github.com/JoseIuri/axi4lite2uart.git,2018-11-07 11:02:17+00:00,This IP provides a bridge between UART signals and the Advanced Microcontroller Bus Architecture (AMBA®) AXI4 Lite interface.,3,JoseIuri/axi4lite2uart,156533461,SystemVerilog,axi4lite2uart,68,13,2023-11-08 14:56:09+00:00,"['microcontroller-bus-architecture', 'bridge']",https://api.github.com/licenses/mit
2377,https://github.com/lowRISC/ariane-ethernet.git,2019-01-28 16:45:28+00:00,open-source Ethenet media access controller for Ariane on Genesys-2,5,lowRISC/ariane-ethernet,167997551,SystemVerilog,ariane-ethernet,76,13,2024-01-29 11:33:23+00:00,[],https://api.github.com/licenses/mit
2378,https://github.com/dpretet/bster.git,2019-05-12 12:30:07+00:00,Implementation of a binary search tree algorithm in a FPGA/ASIC IP,3,dpretet/bster,186252175,SystemVerilog,bster,306,12,2024-03-29 06:45:09+00:00,"['binary-tree', 'binary-trees', 'systemverilog', 'verilog', 'ip', 'svut', 'bst', 'bstree', 'asic', 'asic-design', 'fpga', 'fpga-accelerator']",https://api.github.com/licenses/mit
2379,https://github.com/hellgate202/crc_calc.git,2018-08-31 16:13:39+00:00,Simple and effective parallel CRC calculator written in synthesizable SystemVerilog,1,hellgate202/crc_calc,146915417,SystemVerilog,crc_calc,17,11,2024-02-04 11:59:03+00:00,[],https://api.github.com/licenses/gpl-3.0
2380,https://github.com/GustavoDinizMonteiro/loac-tirinhas.git,2018-12-09 11:31:52+00:00,,1,GustavoDinizMonteiro/loac-tirinhas,161032382,SystemVerilog,loac-tirinhas,104,11,2022-10-17 12:01:17+00:00,[],
2381,https://github.com/aignacio/ahb_lite_bus.git,2018-10-01 16:34:22+00:00,AHB Bus lite v3.0,3,aignacio/ahb_lite_bus,151121182,SystemVerilog,ahb_lite_bus,1064,11,2023-04-19 02:22:19+00:00,[],
2382,https://github.com/gjlies/configgpgpu.git,2019-05-14 21:06:26+00:00,A configurable general purpose graphics processing unit for ,0,gjlies/configgpgpu,186700516,SystemVerilog,configgpgpu,1054,11,2024-01-27 06:19:53+00:00,"['gpu', 'synthesis', 'design', 'configurable', 'ppa', 'power', 'performance', 'area', 'general-purpose', 'tesla', 'nvidia']",
2383,https://github.com/eanchlia/NN_Network_On_Chip.git,2019-02-12 22:50:01+00:00,Designed a pipelined calculation engine to read input/weights of neuron and compute/store results in SystemVerilog. Implemented fabric to interface four instances of neural engine with AHB bus to create NOC.,1,eanchlia/NN_Network_On_Chip,170403470,SystemVerilog,NN_Network_On_Chip,22,10,2023-12-19 09:00:23+00:00,[],
2384,https://github.com/JoseIuri/Simple_UVM.git,2018-11-22 12:11:19+00:00,Implements a simple UVM based testbench for a simple memory DUT.,5,JoseIuri/Simple_UVM,158694141,SystemVerilog,Simple_UVM,58,10,2023-04-24 06:57:05+00:00,"['uvm', 'functional-verification', 'testbench']",https://api.github.com/licenses/mit
2385,https://github.com/seabeam/yuu_clock.git,2019-05-13 15:05:01+00:00,"UVM clock agent which frequency, duty cycle can be configured, clock slow and gating function are also available",1,seabeam/yuu_clock,186442852,SystemVerilog,yuu_clock,32,10,2023-06-03 14:16:58+00:00,[],https://api.github.com/licenses/mit
2386,https://github.com/gokulbalagopal/Verification-of-APB-Protocol-using-UVM.git,2019-02-06 02:14:44+00:00,Built a test environment using UVM Methodology to verify APB Protocol.,6,gokulbalagopal/Verification-of-APB-Protocol-using-UVM,169344250,SystemVerilog,Verification-of-APB-Protocol-using-UVM,39,10,2024-03-02 10:10:49+00:00,[],
2387,https://github.com/asveske/apb_vip.git,2018-09-05 17:41:44+00:00,APB VIP (UVM),5,asveske/apb_vip,147556746,SystemVerilog,apb_vip,24,10,2023-12-21 07:35:35+00:00,[],
2388,https://github.com/vfinotti/ahb3lite_dma.git,2019-03-22 03:32:37+00:00,DMA core compatible with AHB3-Lite ,1,vfinotti/ahb3lite_dma,177065666,SystemVerilog,ahb3lite_dma,17,9,2024-03-27 07:52:03+00:00,[],https://api.github.com/licenses/mit
2389,https://github.com/hellgate202/axi4_lib.git,2019-01-29 14:40:56+00:00,AXI4 Interface Library,1,hellgate202/axi4_lib,168170264,SystemVerilog,axi4_lib,108,9,2023-09-05 21:18:01+00:00,[],https://api.github.com/licenses/mit
2390,https://github.com/taichi-ishitani/tbcm.git,2018-10-24 16:27:45+00:00,Basic Common Modules,1,taichi-ishitani/tbcm,154533293,SystemVerilog,tbcm,19,9,2023-06-27 02:56:47+00:00,"['systemverilog', 'rtl']",https://api.github.com/licenses/apache-2.0
2391,https://github.com/kumarswamy12/ROUTER-1-3.git,2019-01-04 18:21:11+00:00,verification of the basic router protocol with UVM testbech //INCLUDED WITH RTL,6,kumarswamy12/ROUTER-1-3,164140950,SystemVerilog,ROUTER-1-3,18,9,2024-01-14 12:14:12+00:00,[],
2392,https://github.com/adibis/alu_tb.git,2018-08-28 19:01:13+00:00,Basic ALU testbench written in UVM for experiments,4,adibis/alu_tb,146493732,SystemVerilog,alu_tb,9,8,2024-02-07 10:51:18+00:00,"['uvm', 'systemverilog', 'verification', 'vlsi']",
2393,https://github.com/fpgasystems/Distributed-DecisionTrees.git,2018-11-07 14:38:26+00:00,,4,fpgasystems/Distributed-DecisionTrees,156560086,SystemVerilog,Distributed-DecisionTrees,124,8,2022-11-03 12:24:46+00:00,[],https://api.github.com/licenses/gpl-3.0
2394,https://github.com/Shivanagender123/AHB_APB-Bridge.git,2019-01-05 07:19:26+00:00,This is normal basic UVM testbench for AMBA Bridge AHB_APB,1,Shivanagender123/AHB_APB-Bridge,164191946,SystemVerilog,AHB_APB-Bridge,37,8,2022-10-25 11:34:52+00:00,[],
2395,https://github.com/kdurant/uvm_study.git,2019-02-28 14:05:43+00:00,study uvm step by step,4,kdurant/uvm_study,173122989,SystemVerilog,uvm_study,38,8,2023-11-29 06:29:31+00:00,"['uvm', 'modelsim', 'systemverilog', 'fpga']",
2396,https://github.com/joshtyler/hdl_common.git,2018-09-30 22:36:50+00:00,,2,joshtyler/hdl_common,151013170,SystemVerilog,hdl_common,1320,8,2023-11-11 12:33:14+00:00,[],https://api.github.com/licenses/lgpl-2.1
2397,https://github.com/da-steve101/twn_generator.git,2019-03-26 22:46:09+00:00,Generate an FPGA design for a TWN,1,da-steve101/twn_generator,177879844,SystemVerilog,twn_generator,161,8,2023-06-26 08:19:02+00:00,[],https://api.github.com/licenses/gpl-3.0
2398,https://github.com/pulp-platform/cluster_interconnect.git,2019-02-12 18:59:07+00:00,,13,pulp-platform/cluster_interconnect,170373651,SystemVerilog,cluster_interconnect,11843,8,2024-03-06 09:03:46+00:00,[],
2399,https://github.com/rafafigueredoviana/RISCV_MCU_CYCLONEV.git,2018-10-20 17:21:35+00:00,A basic implementation of the RISCV core into a DE10nano FPGA board.,5,rafafigueredoviana/RISCV_MCU_CYCLONEV,153930064,SystemVerilog,RISCV_MCU_CYCLONEV,61778,7,2024-02-03 19:34:27+00:00,"['riscv', 'fpga', 'altera-fpga', 'pulpino', 'de10nano', 'de10-nano']",
2400,https://github.com/nbdd0121/OpenIP.git,2018-10-23 12:19:45+00:00,Open source IP collection,8,nbdd0121/OpenIP,154323033,SystemVerilog,OpenIP,107,7,2024-04-11 02:29:01+00:00,[],
2401,https://github.com/AleksandarKostovic/Matrix-MAC-Unit.git,2018-09-22 08:53:51+00:00,Matrix Multiply and Accumulate unit written in System Verilog,2,AleksandarKostovic/Matrix-MAC-Unit,149860673,SystemVerilog,Matrix-MAC-Unit,155,7,2024-02-28 00:15:32+00:00,"['mac', 'matrix-multiplication', 'matrix', 'matrix-calculations', 'matrix-addition', 'systemverilog']",https://api.github.com/licenses/mit
2402,https://github.com/lmco/tlrb_aib_phy.git,2019-04-04 18:43:56+00:00,TLRB AIB PHY RTL,1,lmco/tlrb_aib_phy,179556292,SystemVerilog,tlrb_aib_phy,3820,7,2023-10-16 05:56:02+00:00,[],
2403,https://github.com/mmxsrup/riscv-processor.git,2019-01-16 18:40:11+00:00,RV32I Single Cycle Processor (CPU),2,mmxsrup/riscv-processor,166091556,SystemVerilog,riscv-processor,54,7,2023-11-11 01:53:20+00:00,"['risc-v', 'riscv32', 'riscv']",https://api.github.com/licenses/gpl-3.0
2404,https://github.com/kenzhang82/HDLBits.git,2019-05-09 06:16:34+00:00,,2,kenzhang82/HDLBits,185737838,SystemVerilog,HDLBits,70,7,2022-11-14 14:53:17+00:00,[],
2405,https://github.com/Yucao42/AES_GCM.git,2018-10-03 20:26:05+00:00,Try to implement GCM-AES encryption algorithm on FPGA hardware and test it by software.,2,Yucao42/AES_GCM,151475892,SystemVerilog,AES_GCM,2170,7,2023-05-25 02:48:18+00:00,[],
2406,https://github.com/sergev/zpu-avalanche.git,2019-02-04 05:11:11+00:00,Implementation of ZPU processor in Verilog,3,sergev/zpu-avalanche,169030384,SystemVerilog,zpu-avalanche,45,7,2023-12-18 20:52:13+00:00,[],
2407,https://github.com/semahawk/wishbone.git,2018-12-27 19:36:40+00:00,Trying to learn Wishbone by implementing few master/slave devices,3,semahawk/wishbone,163329904,SystemVerilog,wishbone,394,7,2024-02-29 13:40:56+00:00,"['wishbone', 'wishbone-bus', 'verilog', 'verilog-hdl']",https://api.github.com/licenses/bsd-3-clause
2408,https://github.com/efeslab/optimus-intel-fpga-bbb.git,2018-11-20 23:48:18+00:00,"Forked from OPAE/intel-fpga-bbb, modified for Optimus FPGA Hypervisor",0,efeslab/optimus-intel-fpga-bbb,158465613,SystemVerilog,optimus-intel-fpga-bbb,2796,6,2022-01-26 19:48:29+00:00,[],
2409,https://github.com/lowRISC/rv_plic.git,2019-03-15 13:41:27+00:00,Implementation of a RISC-V-compatible Platform Interrupt Controller (PLIC). DEPRECATED in favour of the OpenTitan PLIC: https://github.com/lowRISC/opentitan/tree/master/hw/ip/rv_plic,22,lowRISC/rv_plic,175827496,SystemVerilog,rv_plic,24,6,2024-02-29 12:29:57+00:00,[],https://api.github.com/licenses/apache-2.0
2410,https://github.com/VeriBlock/vBlake-RTL.git,2019-05-09 14:25:26+00:00,vBlake-RTL,8,VeriBlock/vBlake-RTL,185814821,SystemVerilog,vBlake-RTL,6,6,2023-08-21 04:50:15+00:00,[],https://api.github.com/licenses/mit
2411,https://github.com/deekshithkrishnegowda/Router1x3-Design-Verification.git,2018-10-13 03:58:06+00:00,Maven Silicon Project,0,deekshithkrishnegowda/Router1x3-Design-Verification,152833213,SystemVerilog,Router1x3-Design-Verification,631,6,2023-09-07 07:03:51+00:00,[],
2412,https://github.com/atmughrabi/AccelGraph.git,2019-03-01 22:01:06+00:00,Graph Processing Framework that supports || OpenMP || CAPI,0,atmughrabi/AccelGraph,173373764,SystemVerilog,AccelGraph,1396104,6,2023-10-31 03:37:26+00:00,"['accelgraph-capi', 'graph-algorithm', 'benchmarking-suite', 'capi', 'graph-framework', 'bfs', 'connected-components', 'dfs', 'triangle-counting', 'fgpa', 'ibm', 'ibm-capi', 'opencapi', 'betweenness-centrality', 'systemverilog', 'pagerank', 'altera-fpga', 'sssp', 'spmv', 'accelerator']",https://api.github.com/licenses/bsd-2-clause
2414,https://github.com/pepper-project/giraffe.git,2018-12-23 10:43:53+00:00,"An implementation of ""Full accounting for verifiable outsourcing"" (CCS17)",3,pepper-project/giraffe,162882395,SystemVerilog,giraffe,268,5,2023-09-05 13:34:17+00:00,[],https://api.github.com/licenses/gpl-3.0
2415,https://github.com/EisernSchild/YM2149.git,2019-05-02 11:21:18+00:00,Yamaha YM2149 / General Instrument AY-3-8910 Sound Chip HDL core,2,EisernSchild/YM2149,184568327,SystemVerilog,YM2149,7,5,2023-03-10 12:03:13+00:00,[],
2416,https://github.com/chaseemory/Purple_Jade.git,2019-04-23 22:07:33+00:00,the best processor ever designed,1,chaseemory/Purple_Jade,183102884,SystemVerilog,Purple_Jade,3823,5,2021-03-15 17:52:36+00:00,[],https://api.github.com/licenses/gpl-3.0
2417,https://github.com/stasOR4ik/SpiFlash.git,2019-02-17 16:31:12+00:00,,0,stasOR4ik/SpiFlash,171144664,SystemVerilog,SpiFlash,15,5,2023-11-06 09:33:58+00:00,[],
2418,https://github.com/zhelnio/uvm_ahb_lite.git,2019-02-11 11:58:09+00:00,uvm ahb lite environment,3,zhelnio/uvm_ahb_lite,170121139,SystemVerilog,uvm_ahb_lite,38,5,2022-07-14 13:10:12+00:00,[],https://api.github.com/licenses/apache-2.0
2419,https://github.com/supranational/lcs35.git,2019-05-18 19:04:13+00:00,Code related to solving the LCS35 timelock puzzle. ,0,supranational/lcs35,187395424,SystemVerilog,lcs35,36,5,2020-07-04 18:26:20+00:00,[],https://api.github.com/licenses/apache-2.0
2420,https://github.com/apsarras/shared-buffer-hw.git,2018-11-05 14:49:11+00:00,A multi-queue buffer with dynamic buffer space allocation and its Formal Verification TB,5,apsarras/shared-buffer-hw,156233875,SystemVerilog,shared-buffer-hw,10,5,2023-12-04 16:13:20+00:00,[],
2421,https://github.com/vishpbharadwaj/Lenet_arch.git,2018-12-28 04:03:40+00:00,System verilog implementation of Lenet CNN architecture for mnist dataset,2,vishpbharadwaj/Lenet_arch,163364127,SystemVerilog,Lenet_arch,270,5,2023-01-07 14:13:41+00:00,[],
2422,https://github.com/darthsider/SystemVerilog.git,2018-11-26 12:56:32+00:00,SV testbench for simple designs,2,darthsider/SystemVerilog,159169752,SystemVerilog,SystemVerilog,93,5,2024-02-05 05:12:44+00:00,[],
2423,https://github.com/apsarras/simon-hw.git,2018-11-05 10:32:05+00:00,High-performance hardware implementation of the NSA SIMON cipher,1,apsarras/simon-hw,156200222,SystemVerilog,simon-hw,23,5,2023-12-04 16:14:17+00:00,[],
2424,https://github.com/Kitrinx/LLAPI.git,2019-02-22 01:41:53+00:00,Bliss-Box Low Latency API Implementation in SystemVerilog,0,Kitrinx/LLAPI,171974497,SystemVerilog,LLAPI,7,5,2020-10-06 14:43:45+00:00,[],
2425,https://github.com/yzt000000/swerv_sim.git,2019-03-15 08:33:14+00:00,"simulation env for swerv_th1, which is base on vcs & verdi ",1,yzt000000/swerv_sim,175780003,SystemVerilog,swerv_sim,4769,5,2021-12-23 06:45:46+00:00,[],
2426,https://github.com/ComicAddict/Polyphonic_FPGA_Synthesizer.git,2019-01-10 19:08:17+00:00,Polyphonic Synthesizer for FPGA device,0,ComicAddict/Polyphonic_FPGA_Synthesizer,165115859,SystemVerilog,Polyphonic_FPGA_Synthesizer,5201,5,2024-02-08 16:33:29+00:00,[],
2427,https://github.com/colinpate/fpga-vr-remap.git,2019-04-13 17:28:48+00:00,,2,colinpate/fpga-vr-remap,181205997,SystemVerilog,fpga-vr-remap,58,5,2023-08-29 02:11:52+00:00,[],
2428,https://github.com/edcote/uvmgen.git,2018-09-22 00:37:44+00:00,UVM verification component and testbench generator tool,1,edcote/uvmgen,149832421,SystemVerilog,uvmgen,26,5,2022-04-06 03:29:30+00:00,"['uvm', 'systemverilog']",https://api.github.com/licenses/apache-2.0
2429,https://github.com/lmco/axi4_aib_bridge.git,2019-04-04 18:02:28+00:00,AXI4/AIB Bridge RTL,3,lmco/axi4_aib_bridge,179549941,SystemVerilog,axi4_aib_bridge,925,5,2023-08-29 21:31:14+00:00,[],
2430,https://github.com/primenumber/FPGAOthello.git,2019-02-28 00:34:42+00:00,Othello solver on FPGA,1,primenumber/FPGAOthello,173012658,SystemVerilog,FPGAOthello,52,5,2023-11-17 11:25:27+00:00,[],
2431,https://github.com/AkshayXPatil/Design-verification.git,2019-01-01 23:41:30+00:00,UVM  and Systemverilog based test benches for functional verification of a RAM module,5,AkshayXPatil/Design-verification,163774436,SystemVerilog,Design-verification,9,5,2023-11-25 07:47:14+00:00,"['verification', 'uvm', 'systemverilog', 'hdl']",
2432,https://github.com/Shivanagender123/UART-16550.git,2019-02-02 07:39:13+00:00,This is UVM testbench for UART with multiple test cases.,1,Shivanagender123/UART-16550,168807517,SystemVerilog,UART-16550,25,5,2024-02-17 17:50:22+00:00,[],
2433,https://github.com/hellgate202/hdmi_tx.git,2019-04-19 16:25:57+00:00,HDMI Transmitter,0,hellgate202/hdmi_tx,182293748,SystemVerilog,hdmi_tx,44,4,2020-07-08 07:53:08+00:00,[],https://api.github.com/licenses/gpl-3.0
2434,https://github.com/Zeldax64/arvi.git,2019-02-04 19:53:02+00:00,A RISC-V implementation in SystemVerilog,0,Zeldax64/arvi,169139078,SystemVerilog,arvi,957,4,2023-08-29 21:42:17+00:00,"['risc-v', 'systemverilog', 'cpu']",https://api.github.com/licenses/mit
2435,https://github.com/gchinna/dynrama-sv.git,2019-04-15 14:19:02+00:00,DYNamic RAndom Memory Allocator SystemVerilog Model,0,gchinna/dynrama-sv,181502278,SystemVerilog,dynrama-sv,6,4,2023-06-08 17:41:25+00:00,[],https://api.github.com/licenses/mit
2436,https://github.com/farshad112/ring_oscilator.git,2018-10-09 18:47:02+00:00,Parameterized Ring Oscillator and Testbench. The design is written in Verilog and testbench is developed in SystemVerilog.,3,farshad112/ring_oscilator,152303665,SystemVerilog,ring_oscilator,41,4,2023-12-25 08:48:04+00:00,"['verilog', 'systemverilog-simulation', 'ring-oscillator']",https://api.github.com/licenses/mit
2437,https://github.com/maxluck518/ons45-app54-ref_sdnet_10g.git,2018-09-03 07:10:35+00:00,ONetSwitch45 Reference Design (10g ETH with SDNet),1,maxluck518/ons45-app54-ref_sdnet_10g,147165589,SystemVerilog,ons45-app54-ref_sdnet_10g,14069,4,2021-11-22 03:03:46+00:00,[],
2438,https://github.com/LimoJ/PolarCode.git,2018-11-20 12:48:41+00:00,PolarCode realized by SystemVerilog & Matlab,1,LimoJ/PolarCode,158388722,SystemVerilog,PolarCode,81,4,2024-01-16 07:22:52+00:00,[],https://api.github.com/licenses/gpl-3.0
2439,https://github.com/ragibson/FPGA-Asteroids.git,2018-12-01 16:42:25+00:00,"32-bit single cycle CPU design and implementation of the ""Asteroids"" arcade game for this CPU in Assembly and C.",1,ragibson/FPGA-Asteroids,159965477,SystemVerilog,FPGA-Asteroids,78,4,2021-04-02 16:13:18+00:00,"['fpga', 'mips', 'asteroids', 'cpu', 'c']",https://api.github.com/licenses/mit
2440,https://github.com/hellgate202/fifo_lib.git,2019-02-24 15:32:40+00:00,,1,hellgate202/fifo_lib,172354992,SystemVerilog,fifo_lib,100,4,2021-10-28 20:30:31+00:00,[],https://api.github.com/licenses/gpl-3.0
2441,https://github.com/LiuZichuan/Arthas.git,2018-09-16 15:58:02+00:00,FPGA implementation of CNN accelerator for Object Detection,5,LiuZichuan/Arthas,149011423,SystemVerilog,Arthas,1855,4,2024-03-10 07:54:03+00:00,[],https://api.github.com/licenses/gpl-3.0
2442,https://github.com/comestime/RTL4Interview.git,2018-09-11 04:44:02+00:00,RTL Interview Questions,0,comestime/RTL4Interview,148261411,SystemVerilog,RTL4Interview,616,4,2021-04-08 22:03:35+00:00,[],
2443,https://github.com/HMS-ELKHOLY/adder_floatining_point_ieee754.git,2019-04-06 07:26:06+00:00,adder uses ieee754 format written in System Verillog,1,HMS-ELKHOLY/adder_floatining_point_ieee754,179802059,SystemVerilog,adder_floatining_point_ieee754,1969,4,2023-09-03 08:00:03+00:00,[],
2444,https://github.com/ottohorvath/vip_clock.git,2019-04-06 10:30:35+00:00,UVM based clock generator VIP,1,ottohorvath/vip_clock,179819504,SystemVerilog,vip_clock,15,4,2023-07-10 09:03:16+00:00,[],
2445,https://github.com/Shivanagender123/AMBA-AXI4.git,2019-01-04 17:46:27+00:00,This verfication intellectual property for axi-4 protocol,0,Shivanagender123/AMBA-AXI4,164137874,SystemVerilog,AMBA-AXI4,1686,4,2023-08-23 20:18:37+00:00,[],
2446,https://github.com/ottohorvath/vip_reset.git,2019-04-21 09:09:50+00:00,A simple basic reset VIP based on UVM 1.1d.,1,ottohorvath/vip_reset,182512663,SystemVerilog,vip_reset,10,4,2023-07-25 16:24:18+00:00,[],
2447,https://github.com/funannoka/SoC-verification-using-UVM.git,2018-11-07 05:53:37+00:00,,1,funannoka/SoC-verification-using-UVM,156496846,SystemVerilog,SoC-verification-using-UVM,25476,4,2023-04-24 14:47:37+00:00,[],
2448,https://github.com/deepak1824/NN_Calculator_SOC_Design.git,2019-02-17 18:25:12+00:00,"Designed a SOC with the hardware capability of a Neural Network calculator which used to communicate with two different memories, one of which was for fetching weights and inputs to the calculator and other was to store the output result after the multiplication and summation.  - The design was divided into three pipelined modules to achieve high performance and reduce latency. - The design was on implemented on 5 master/slave AHB bus model to control the flow of inputs,weights and outputs of neural network calculator. - Major involvement in synthesis and static time analysis. - EDA Tool: Synopsys VCS, Language: SystemVerilog.",0,deepak1824/NN_Calculator_SOC_Design,171156414,SystemVerilog,NN_Calculator_SOC_Design,47,3,2021-10-16 11:35:10+00:00,[],
2449,https://github.com/yuhei1horibe/PWM_module.git,2019-05-06 07:11:56+00:00,"Simple PWM module written in Verilog, and simulation sources written in SystemVerilog",1,yuhei1horibe/PWM_module,185142984,SystemVerilog,PWM_module,6,3,2023-07-26 04:48:39+00:00,[],
2450,https://github.com/mp-17/RV-MAGIC.git,2019-01-12 13:32:22+00:00,,0,mp-17/RV-MAGIC,165391290,SystemVerilog,RV-MAGIC,33993,3,2023-11-16 20:30:33+00:00,[],
2451,https://github.com/miguel-guerrero/antlr4_system_verilog_parser.git,2019-04-05 06:23:39+00:00,ANTLR4 grammar and parsing utilities for System Verilog 2017 (full support),1,miguel-guerrero/antlr4_system_verilog_parser,179629598,SystemVerilog,antlr4_system_verilog_parser,18263,3,2024-01-26 06:46:59+00:00,[],https://api.github.com/licenses/mit
2452,https://github.com/pulp-platform/udma_hyperbus.git,2018-10-05 08:42:18+00:00,New open source Hyperram IP,5,pulp-platform/udma_hyperbus,151693457,SystemVerilog,udma_hyperbus,27,3,2023-01-28 10:12:38+00:00,[],
2453,https://github.com/hellgate202/dual_port_ram.git,2018-08-28 14:38:54+00:00,,1,hellgate202/dual_port_ram,146461260,SystemVerilog,dual_port_ram,17,3,2021-10-28 20:30:17+00:00,[],https://api.github.com/licenses/gpl-3.0
2454,https://github.com/myriadrf/LimeSDR-QPCIe_GW.git,2018-11-29 08:51:07+00:00,Intel Cyclone V FPGA project for the LimeSDR-QPCIe board ,3,myriadrf/LimeSDR-QPCIe_GW,159635680,SystemVerilog,LimeSDR-QPCIe_GW,211618,3,2022-04-01 20:37:18+00:00,[],https://api.github.com/licenses/apache-2.0
2455,https://github.com/pacius95/sdio_controller_verilog.git,2019-05-14 12:23:38+00:00,Controller SDIo host compatible with wishbone I/F {verilog},4,pacius95/sdio_controller_verilog,186616599,SystemVerilog,sdio_controller_verilog,13973,3,2024-03-07 08:19:31+00:00,[],
2456,https://github.com/JoseIuri/Posits_Arithmetics.git,2018-10-18 14:07:40+00:00,Provides a Hardware Description of basics arithmetics on posit format.,1,JoseIuri/Posits_Arithmetics,153634282,SystemVerilog,Posits_Arithmetics,9280,3,2024-03-15 02:56:55+00:00,"['hardware-description', 'arithmetics']",https://api.github.com/licenses/mit
2457,https://github.com/Dragon-Git/icdk.git,2018-09-03 07:22:39+00:00,uvm framework generator,1,Dragon-Git/icdk,147166963,SystemVerilog,icdk,105,3,2024-03-26 08:58:56+00:00,"['template', 'uvmgen', 'generator', 'testbench', 'tools', 'uvm']",
2458,https://github.com/seanluo1/FPGA-Fighting-Game.git,2018-09-13 23:49:27+00:00,I created a two-player fighting game that can be played on an Altera Cyclone IV FPGA.,2,seanluo1/FPGA-Fighting-Game,148711139,SystemVerilog,FPGA-Fighting-Game,13990,3,2020-11-25 07:16:11+00:00,"['systemverilog', 'fpga']",
2459,https://github.com/0xArt/SuperHashProcessor.git,2019-01-10 07:12:36+00:00,"Quartus Prime project directory of a SHA1, SHA256, and MD5 hash processor written in System Verilog. ",2,0xArt/SuperHashProcessor,165009607,SystemVerilog,SuperHashProcessor,15476,3,2022-04-11 19:20:02+00:00,[],
2460,https://github.com/hellgate202/i2c_lib.git,2019-02-13 06:49:44+00:00,,0,hellgate202/i2c_lib,170456120,SystemVerilog,i2c_lib,32,3,2020-09-03 13:45:07+00:00,[],https://api.github.com/licenses/gpl-3.0
2461,https://github.com/remexre/minidep.git,2018-09-29 02:43:48+00:00,A small dependently typed language.,0,remexre/minidep,150816987,SystemVerilog,minidep,154,3,2019-11-06 18:17:23+00:00,[],
2462,https://github.com/pulp-platform/icache_private.git,2018-11-16 13:18:06+00:00,Private instruction cache for PULP cluster,3,pulp-platform/icache_private,157870078,SystemVerilog,icache_private,30,3,2023-10-27 03:56:41+00:00,[],
2463,https://github.com/leanhdung22/SVA.git,2019-05-12 18:27:58+00:00,Formal Verification,0,leanhdung22/SVA,186289939,SystemVerilog,SVA,1,3,2023-02-14 23:59:14+00:00,[],
2464,https://github.com/segocago/CS223-Digital-Design-Highway-Racing.git,2018-10-30 12:00:09+00:00,Term project  for  CS223 Digital - Design course.,3,segocago/CS223-Digital-Design-Highway-Racing,155377964,SystemVerilog,CS223-Digital-Design-Highway-Racing,393,3,2021-11-02 13:46:05+00:00,"['bilkent-university', 'systemverilog', 'digital-design', 'basys3', 'dotmatrix', 'fpga']",
2465,https://github.com/Featherweight-IP/fwinterconnect-gen.git,2019-03-01 01:57:09+00:00,Scripts to generate an interconnect from a specification,0,Featherweight-IP/fwinterconnect-gen,173217416,SystemVerilog,fwinterconnect-gen,27,3,2022-03-01 07:20:45+00:00,[],https://api.github.com/licenses/apache-2.0
2466,https://github.com/prfalcon/USB-to-Ethernet-Bridge.git,2018-10-03 03:04:36+00:00,,0,prfalcon/USB-to-Ethernet-Bridge,151354051,SystemVerilog,USB-to-Ethernet-Bridge,1222,3,2023-07-28 08:03:27+00:00,[],
2467,https://github.com/AdrianETF/apb2spi_verification.git,2018-09-13 16:05:53+00:00,,2,AdrianETF/apb2spi_verification,148663702,SystemVerilog,apb2spi_verification,83,3,2023-08-10 05:54:42+00:00,[],
2468,https://github.com/kinhosz/Projeto_Hardware.git,2019-04-22 20:24:45+00:00,Processador do RISC-V para a disciplina Infraestrutura de Hardware (2019.1),0,kinhosz/Projeto_Hardware,182862278,SystemVerilog,Projeto_Hardware,27,3,2020-08-06 01:06:49+00:00,[],
2469,https://github.com/pulp-platform/udma_external_per.git,2018-11-05 13:01:40+00:00,Generic udma peripheral interface,5,pulp-platform/udma_external_per,156218663,SystemVerilog,udma_external_per,19,2,2023-07-25 14:21:12+00:00,[],
2470,https://github.com/estape11/ArquitecturaHybridARMIPS.git,2018-09-18 05:47:31+00:00,Arquitectura híbrida entre ARM y MIPS para procesamiento de imágenes.,0,estape11/ArquitecturaHybridARMIPS,149235267,SystemVerilog,ArquitecturaHybridARMIPS,11402,2,2019-04-12 22:00:15+00:00,[],
2471,https://github.com/chandrashub/uvm_plusargs.git,2018-08-23 20:21:48+00:00,,0,chandrashub/uvm_plusargs,145903094,SystemVerilog,uvm_plusargs,3,2,2023-02-20 11:57:03+00:00,[],
2472,https://github.com/pulp-platform/apu_cluster.git,2018-09-03 09:22:57+00:00,This project is to be instantiated inside pulp_cluster and wraps all shared processing units.,3,pulp-platform/apu_cluster,147181635,SystemVerilog,apu_cluster,1169,2,2023-07-25 14:19:40+00:00,[],
2473,https://github.com/ameetgohil/elastic-buffer.git,2019-04-12 03:16:00+00:00,buffers for valid-ready designs,0,ameetgohil/elastic-buffer,180921663,SystemVerilog,elastic-buffer,17,2,2022-11-18 06:14:16+00:00,[],https://api.github.com/licenses/mit
2474,https://github.com/xusine/Tetris.git,2019-04-15 02:26:50+00:00,,0,xusine/Tetris,181398098,SystemVerilog,Tetris,1043,2,2020-10-05 04:15:19+00:00,[],
2475,https://github.com/kgoliya/sim-mem-model.git,2019-02-17 18:28:40+00:00,A lightweight simulation memory model for use with axi interface models.,0,kgoliya/sim-mem-model,171156742,SystemVerilog,sim-mem-model,6,2,2024-04-01 11:59:52+00:00,[],
2476,https://github.com/helloworld1983/xil_7s_dphy.git,2019-01-19 03:50:58+00:00,D-PHY for Xilinx 7 series FPGA.,2,helloworld1983/xil_7s_dphy,166503512,SystemVerilog,xil_7s_dphy,21,2,2022-07-29 06:24:49+00:00,[],https://api.github.com/licenses/gpl-3.0
2477,https://github.com/alexrush1/Circuitry.git,2019-02-22 14:06:09+00:00,NSU Circuitry Labs,0,alexrush1/Circuitry,172076546,SystemVerilog,Circuitry,21,2,2019-05-26 05:24:09+00:00,[],
2478,https://github.com/jkaugust/Verification-of-APB-Protocol-using-UVM-System-Verilog-.git,2018-09-18 01:17:02+00:00,Developing verification environment in System Verilog to test the functionality of APB protocol using UVM.,0,jkaugust/Verification-of-APB-Protocol-using-UVM-System-Verilog-,149209566,SystemVerilog,Verification-of-APB-Protocol-using-UVM-System-Verilog-,47,2,2024-03-29 06:50:31+00:00,[],
2479,https://github.com/hellgate202/dphy_lib.git,2018-10-11 12:03:53+00:00,Library with differnt D-PHY features,0,hellgate202/dphy_lib,152584917,SystemVerilog,dphy_lib,15,2,2022-07-29 06:59:59+00:00,[],https://api.github.com/licenses/gpl-3.0
2480,https://github.com/tangyeqiu/picoMIPS.git,2019-01-29 06:01:09+00:00,Individual project in the University of Southampton.,0,tangyeqiu/picoMIPS,168098609,SystemVerilog,picoMIPS,931,2,2023-10-31 17:47:34+00:00,[],
2481,https://github.com/aeris170/FPGAMotorGame.git,2019-04-10 06:04:25+00:00,Bilkent University Digital Design 2017 course term project.,0,aeris170/FPGAMotorGame,180512880,SystemVerilog,FPGAMotorGame,285,2,2020-09-24 22:47:36+00:00,[],https://api.github.com/licenses/mit
2482,https://github.com/bzhao13/EE-371.git,2018-11-17 20:23:02+00:00,EE 371 at the University of Washington,0,bzhao13/EE-371,158021635,SystemVerilog,EE-371,5457,2,2021-04-21 16:42:17+00:00,[],
2483,https://github.com/upadhk/EE-271-Lab6.git,2018-12-19 23:36:11+00:00,,0,upadhk/EE-271-Lab6,162502291,SystemVerilog,EE-271-Lab6,8,2,2022-05-12 01:05:07+00:00,[],
2484,https://github.com/nicolas-robin/nr6502.git,2018-09-05 21:02:33+00:00,SystemVerilog implementation of the MOS6502,0,nicolas-robin/nr6502,147579144,SystemVerilog,nr6502,74,2,2020-12-13 14:39:36+00:00,"['systemverilog', 'mos6502', 'fpga', 'retrocomputing', 'verilog']",
2485,https://github.com/medalotte/sync-FIFO.git,2019-03-28 17:24:23+00:00,Synchronous FIFO which consist of Dual Port RAM for FPGA implementation by using SystemVerilog,2,medalotte/sync-FIFO,178251309,SystemVerilog,sync-FIFO,18,2,2023-08-04 08:08:07+00:00,[],https://api.github.com/licenses/mit
2486,https://github.com/JonathanHonrada/Function_Generator_SystemVerilog.git,2019-03-17 04:45:55+00:00,A limited yet very cool function generator implementation using look up tables and PWM,1,JonathanHonrada/Function_Generator_SystemVerilog,176057356,SystemVerilog,Function_Generator_SystemVerilog,49,2,2024-01-18 09:51:40+00:00,[],
2487,https://github.com/Yueqing-Sun/Elevator-Controller.git,2019-02-13 05:55:45+00:00,数字逻辑作业-电梯控制器设计,2,Yueqing-Sun/Elevator-Controller,170449004,SystemVerilog,Elevator-Controller,16519,2,2023-11-27 02:49:59+00:00,[],
2488,https://github.com/pulp-platform/apb_asynch_cdc.git,2019-02-06 17:08:59+00:00,APB asynchronous clock domain crossing,0,pulp-platform/apb_asynch_cdc,169443366,SystemVerilog,apb_asynch_cdc,10,2,2023-12-20 10:01:20+00:00,[],
2489,https://github.com/sharonfeldman/sv-assertions-clock-specification.git,2018-08-30 08:23:19+00:00,,0,sharonfeldman/sv-assertions-clock-specification,146719033,SystemVerilog,sv-assertions-clock-specification,2,2,2022-01-25 15:43:59+00:00,[],
2490,https://github.com/pulp-platform/fpu_interco.git,2019-01-23 10:36:04+00:00,,6,pulp-platform/fpu_interco,167165135,SystemVerilog,fpu_interco,62,2,2023-05-24 13:36:43+00:00,[],
2491,https://github.com/ying27/matrix-multiplication-accelerator.git,2018-10-17 09:13:16+00:00,,0,ying27/matrix-multiplication-accelerator,153428769,SystemVerilog,matrix-multiplication-accelerator,3254,2,2023-06-27 07:15:25+00:00,[],
2492,https://github.com/ManojMJ5/APB3_SLAVE_VIP.git,2018-12-27 05:52:55+00:00,,2,ManojMJ5/APB3_SLAVE_VIP,163252971,SystemVerilog,APB3_SLAVE_VIP,16,2,2023-09-18 03:17:22+00:00,[],https://api.github.com/licenses/apache-2.0
2493,https://github.com/kwilson33/ECE551_Dig_Sys-Design_and_Synthesis_SegwayProject.git,2018-11-26 16:38:57+00:00,,0,kwilson33/ECE551_Dig_Sys-Design_and_Synthesis_SegwayProject,159200897,SystemVerilog,ECE551_Dig_Sys-Design_and_Synthesis_SegwayProject,49665,2,2019-12-17 16:28:51+00:00,[],
2494,https://github.com/Lard4/RAT_CPU.git,2019-03-19 00:45:46+00:00,A CPU implemented in SystemVerilog that requires the RAT 4.05 assembly language,1,Lard4/RAT_CPU,176393254,SystemVerilog,RAT_CPU,551,2,2023-12-02 21:42:17+00:00,[],
2495,https://github.com/mitshine/XOR-Complement-UVM.git,2019-02-11 06:52:29+00:00,Implementation of XOR Complement using UVM Methodology,0,mitshine/XOR-Complement-UVM,170081738,SystemVerilog,XOR-Complement-UVM,7,2,2024-01-08 15:16:02+00:00,[],
2496,https://github.com/tangyeqiu/complex_multiplier.git,2019-02-09 04:11:23+00:00,Individual project in the University of Southampton,0,tangyeqiu/complex_multiplier,169830629,SystemVerilog,complex_multiplier,808,2,2024-03-02 14:00:15+00:00,[],
2497,https://github.com/Featherweight-IP/fwprotocol-defs.git,2019-02-10 20:26:00+00:00,SystemVerilog macros for standard protocols,0,Featherweight-IP/fwprotocol-defs,170023098,SystemVerilog,fwprotocol-defs,22,2,2022-03-01 07:20:50+00:00,[],https://api.github.com/licenses/apache-2.0
2498,https://github.com/MarioPonce2910/8b-10b.git,2019-05-15 19:10:39+00:00,8b 10b verilog,0,MarioPonce2910/8b-10b,186887760,SystemVerilog,8b-10b,3,2,2024-03-01 02:22:39+00:00,[],
2499,https://github.com/melt-umn/ableC-tensor-algebra.git,2018-10-24 02:00:42+00:00,A tensor algebra compiler implemented as an ableC extension,0,melt-umn/ableC-tensor-algebra,154423505,SystemVerilog,ableC-tensor-algebra,967,2,2022-11-07 22:53:07+00:00,[],https://api.github.com/licenses/lgpl-3.0
2500,https://github.com/robindnj/uvm_tb.git,2019-03-20 13:54:19+00:00,simple UVM tb ,0,robindnj/uvm_tb,176744922,SystemVerilog,uvm_tb,9,2,2022-10-11 14:29:25+00:00,[],
2501,https://github.com/Shivanagender123/Shift_Register.git,2019-01-05 07:27:42+00:00,This is normal basic UVM testbench for shift register with reference model using queues in scoreboard and RTL,0,Shivanagender123/Shift_Register,164192489,SystemVerilog,Shift_Register,10,2,2020-04-02 00:44:24+00:00,[],
2502,https://github.com/pulp-platform/soc_event_generator.git,2018-12-05 09:37:43+00:00,,2,pulp-platform/soc_event_generator,160494722,SystemVerilog,soc_event_generator,25,2,2022-08-07 12:05:47+00:00,[],
2503,https://github.com/erikgroving/NeuralNetworkHardwareAccelerator.git,2019-01-28 16:27:21+00:00,My master thesis project at DTU,1,erikgroving/NeuralNetworkHardwareAccelerator,167994638,SystemVerilog,NeuralNetworkHardwareAccelerator,100226,2,2023-01-06 06:07:05+00:00,[],
2504,https://github.com/cpuex2018-5/eevee.git,2018-09-29 10:19:12+00:00,first core,0,cpuex2018-5/eevee,150852688,SystemVerilog,eevee,3373,2,2018-12-11 09:27:05+00:00,[],
2505,https://github.com/cani-ic/verification.git,2018-11-01 15:52:29+00:00,,0,cani-ic/verification,155739249,SystemVerilog,verification,127,2,2022-01-24 03:16:24+00:00,[],
2506,https://github.com/shuntarot/arty-mig.git,2019-01-14 14:48:18+00:00,Arty FPGA sample,0,shuntarot/arty-mig,165678680,SystemVerilog,arty-mig,26,2,2023-02-28 20:04:13+00:00,[],
2507,https://github.com/SandroSartoni/RISCV_Project.git,2019-02-01 16:06:26+00:00,"RISCV32 Core, [I] and [M] extension supported",0,SandroSartoni/RISCV_Project,168723463,SystemVerilog,RISCV_Project,21356,2,2020-03-01 04:36:48+00:00,[],https://api.github.com/licenses/gpl-3.0
2508,https://github.com/dpavlo55/vhdl-vga-controller.git,2019-05-12 11:01:20+00:00,VHDL implementation of VGA controller. Implemented on Zybo Zynq-7000 board which uses switches to change output color.,1,dpavlo55/vhdl-vga-controller,186243761,SystemVerilog,vhdl-vga-controller,912,2,2022-11-05 20:12:44+00:00,"['vhdl', 'vga-controller', 'zybo', 'zynq-7000', 'vivado']",
2509,https://github.com/tone-segura/Adventure-Game-FSM-Demo.git,2019-04-25 05:06:55+00:00,"Just a game made from FSMs with corresponding LED output (not set up), added a program that outputs the journey based on the states.",0,tone-segura/Adventure-Game-FSM-Demo,183360065,SystemVerilog,Adventure-Game-FSM-Demo,5,2,2024-02-15 05:58:41+00:00,[],
2510,https://github.com/bajelidze/FPGA-Audio-Effects-System.git,2019-03-29 20:22:23+00:00,DSP audio effects implementation using Terasic DE1-SoC based on Intel Cyclone V FPGA,0,bajelidze/FPGA-Audio-Effects-System,178470821,SystemVerilog,FPGA-Audio-Effects-System,27527,2,2024-03-19 11:12:56+00:00,[],
2511,https://github.com/RuijieDV/VIP.git,2019-01-07 02:55:53+00:00,通用VIP,4,RuijieDV/VIP,164370318,SystemVerilog,VIP,4649,2,2021-06-23 06:05:14+00:00,[],
2512,https://github.com/0xD503/SystemVerilog-Modules.git,2019-03-25 18:49:30+00:00,Common SystemVerilog/Verilog modules,0,0xD503/SystemVerilog-Modules,177645390,SystemVerilog,SystemVerilog-Modules,48,2,2023-07-26 20:36:44+00:00,"['systemverilog-hdl', 'hdl-library', 'systemverilog-library']",
2513,https://github.com/pulp-platform/apb2apbcomp.git,2018-09-05 07:38:14+00:00,Conversion between the PULP apb and the compliant one,1,pulp-platform/apb2apbcomp,147479095,SystemVerilog,apb2apbcomp,5,2,2024-03-13 05:48:19+00:00,[],
2514,https://github.com/cmbhjv/RV12LP.git,2018-10-14 15:34:17+00:00,Trabalho de OC2 - LowPower RV12 ,3,cmbhjv/RV12LP,152989381,SystemVerilog,RV12LP,128159,1,2021-05-31 19:00:32+00:00,[],
2515,https://github.com/pulp-platform/rtc.git,2018-08-24 20:49:04+00:00,Real Time Clock with subsecond timer support,2,pulp-platform/rtc,146038726,SystemVerilog,rtc,12,1,2023-07-25 14:19:28+00:00,[],
2516,https://github.com/maxjayne98/mips_pipeline.git,2019-01-02 10:13:54+00:00,,0,maxjayne98/mips_pipeline,163825443,SystemVerilog,mips_pipeline,7,1,2020-08-05 09:45:45+00:00,[],
2517,https://github.com/gchinna/sva.git,2019-03-06 21:26:03+00:00,SystemVerilog Assertions,0,gchinna/sva,174223694,SystemVerilog,sva,20,1,2022-06-28 09:21:11+00:00,[],https://api.github.com/licenses/mit
2518,https://github.com/jle-santos/ELEX7660-Piano-Project.git,2019-04-06 04:31:22+00:00,FPGA piano project,0,jle-santos/ELEX7660-Piano-Project,179788669,SystemVerilog,ELEX7660-Piano-Project,3510,1,2020-02-13 03:50:42+00:00,[],
2519,https://github.com/Minaduki-Shigure/Winter_Proj_FPGA.git,2019-01-15 13:24:30+00:00,,0,Minaduki-Shigure/Winter_Proj_FPGA,165855179,SystemVerilog,Winter_Proj_FPGA,3736,1,2019-01-16 08:28:24+00:00,[],https://api.github.com/licenses/mit
2520,https://github.com/sharonfeldman/sv-assertions-bianry-operators.git,2018-08-30 08:18:26+00:00,sv assertions : bianry operators example,0,sharonfeldman/sv-assertions-bianry-operators,146718446,SystemVerilog,sv-assertions-bianry-operators,2,1,2022-01-25 09:28:18+00:00,[],
2521,https://github.com/0xD503/ARM-Single-Cycle-Processor.git,2019-03-26 20:57:15+00:00,"ARM architecture single-cycle processor designed according to book ""Digital design and computer architecture: ARM edition"" as a practice in digital design.",1,0xD503/ARM-Single-Cycle-Processor,177867529,SystemVerilog,ARM-Single-Cycle-Processor,19,1,2023-07-26 20:37:37+00:00,"['processor-architecture', 'processor-design', 'arm', 'embedded', 'model-simulation']",
2522,https://github.com/yhl4095822731/std_i2980_v2.06_cp053.git,2019-02-20 03:33:41+00:00,std_i2980_v2.06_cp053,1,yhl4095822731/std_i2980_v2.06_cp053,171594776,SystemVerilog,std_i2980_v2.06_cp053,25910,1,2023-03-28 22:27:53+00:00,[],
2523,https://github.com/thampan/serial-fir-filter.git,2019-01-23 13:05:11+00:00,Serial FIR filter using SystemVerilog and Matlab,0,thampan/serial-fir-filter,167184640,SystemVerilog,serial-fir-filter,8,1,2020-04-28 22:23:34+00:00,[],
2524,https://github.com/darthsider/altera_fifo_ip_verification.git,2019-01-20 06:52:21+00:00,,0,darthsider/altera_fifo_ip_verification,166632300,SystemVerilog,altera_fifo_ip_verification,17,1,2024-03-24 15:24:12+00:00,[],
2525,https://github.com/SamKLowe/calc_uvmf.git,2018-11-20 16:04:41+00:00,A uvm Framework project using a basic calculator as a design,0,SamKLowe/calc_uvmf,158416328,SystemVerilog,calc_uvmf,8,1,2021-05-15 23:06:15+00:00,[],
2526,https://github.com/sharonfeldman/sv-assertions-non-consecutive-repetition-operator.git,2018-08-30 08:05:20+00:00,sv-assertions using non consecutive repetition operator,0,sharonfeldman/sv-assertions-non-consecutive-repetition-operator,146716838,SystemVerilog,sv-assertions-non-consecutive-repetition-operator,2,1,2022-01-25 15:43:55+00:00,[],
2527,https://github.com/aricneto/RISC-DCCCLXVII.git,2018-09-29 00:00:11+00:00,Like the RISC-V but better. A RISC-V-like design in SystemVerilog for a Hardware Infrastructure class.,1,aricneto/RISC-DCCCLXVII,150805919,SystemVerilog,RISC-DCCCLXVII,754,1,2019-04-01 13:13:56+00:00,[],
2528,https://github.com/cevero/soc_components.git,2019-04-29 17:51:15+00:00,components of the cevero soc and others socs,1,cevero/soc_components,184117561,SystemVerilog,soc_components,16,1,2021-05-09 10:40:56+00:00,[],
2529,https://github.com/lucasmedeiros/exercicios-oac-loac.git,2019-04-09 01:03:14+00:00,,1,lucasmedeiros/exercicios-oac-loac,180257529,SystemVerilog,exercicios-oac-loac,362,1,2019-11-05 23:56:43+00:00,[],
2530,https://github.com/s-augustine/sv-buildingblocks.git,2019-05-18 14:26:46+00:00,System verilog modules as building blocks,0,s-augustine/sv-buildingblocks,187367496,SystemVerilog,sv-buildingblocks,18,1,2023-02-01 15:09:17+00:00,[],https://api.github.com/licenses/gpl-3.0
2531,https://github.com/cpu-3/fpu.git,2018-10-03 05:05:50+00:00,,0,cpu-3/fpu,151363341,SystemVerilog,fpu,76,1,2019-06-23 02:07:44+00:00,[],
2532,https://github.com/terakun/minmips.git,2018-10-13 14:19:03+00:00,単一サイクルMIPSプロセッサのサブセット,0,terakun/minmips,152879261,SystemVerilog,minmips,12,1,2019-04-03 02:31:46+00:00,[],
2533,https://github.com/HrishikeshC/ref-uvm-i2c-wb.git,2018-10-04 20:33:38+00:00,,0,HrishikeshC/ref-uvm-i2c-wb,151632465,SystemVerilog,ref-uvm-i2c-wb,70,1,2022-04-13 10:37:08+00:00,[],
2534,https://github.com/roo16kie/FPGA_LED_Verilog.git,2018-10-17 12:01:42+00:00,FPGA Implementation of Combinational Logic,0,roo16kie/FPGA_LED_Verilog,153449582,SystemVerilog,FPGA_LED_Verilog,1270,1,2018-12-13 22:50:40+00:00,[],https://api.github.com/licenses/mit
2535,https://github.com/jingnanshi/fpga-useless-boxes.git,2018-11-26 07:31:08+00:00,FPGA-based useless boxes,0,jingnanshi/fpga-useless-boxes,159128482,SystemVerilog,fpga-useless-boxes,8,1,2023-03-05 04:59:55+00:00,[],
2536,https://github.com/omercohen7640/frog_project.git,2018-11-29 08:24:03+00:00,,1,omercohen7640/frog_project,159632034,SystemVerilog,frog_project,1909,1,2018-12-13 16:09:39+00:00,[],
2537,https://github.com/fedetula/riscv-unrn.git,2018-11-27 07:45:59+00:00,riscv-contest,0,fedetula/riscv-unrn,159295892,SystemVerilog,riscv-unrn,189,1,2018-12-14 21:17:12+00:00,[],
2538,https://github.com/itaiyifrach/ITC---Final-Project.git,2019-01-24 11:13:45+00:00,,0,itaiyifrach/ITC---Final-Project,167354674,SystemVerilog,ITC---Final-Project,92235,1,2019-02-07 10:25:34+00:00,[],
2539,https://github.com/miistein/vlsi-hdl.git,2019-02-01 20:36:39+00:00,hdl code for vlsi,0,miistein/vlsi-hdl,168757059,SystemVerilog,vlsi-hdl,16,1,2022-06-23 20:24:50+00:00,[],
2540,https://github.com/adibis/mips_5stage.git,2018-08-24 06:33:30+00:00,Very basic 5 stage MIPS pipelined processor core.,0,adibis/mips_5stage,145952268,SystemVerilog,mips_5stage,18,1,2021-04-29 08:20:09+00:00,"['verilog', 'mips']",
2541,https://github.com/JacobLeeBrown/ProfBrown_ECE411.git,2019-01-04 06:27:11+00:00,My work for UIUC's ECE411 in Fall 2018.,0,JacobLeeBrown/ProfBrown_ECE411,164067459,SystemVerilog,ProfBrown_ECE411,441,1,2021-07-11 18:58:20+00:00,[],
2542,https://github.com/flasonil/countdown_circuit.git,2019-04-02 06:43:36+00:00,,0,flasonil/countdown_circuit,179015422,SystemVerilog,countdown_circuit,9,1,2021-02-09 00:53:26+00:00,[],
2543,https://github.com/RogerQi/FPGA_Face_Detection.git,2019-03-28 03:23:53+00:00,,0,RogerQi/FPGA_Face_Detection,178118724,SystemVerilog,FPGA_Face_Detection,1102,1,2023-03-04 00:34:38+00:00,[],https://api.github.com/licenses/gpl-3.0
2544,https://github.com/shrtique/sv_axis_median_3x3.git,2018-12-21 08:56:15+00:00,"Median filtrer size of 3x3 for AXI Stream. Each step of the filter is registered. Unfortunately can't be automatically synthesized to 5x5 version, so parameter KERNEL_SIZE should be always 3.",0,shrtique/sv_axis_median_3x3,162690813,SystemVerilog,sv_axis_median_3x3,11,1,2024-01-13 07:04:34+00:00,[],
2545,https://github.com/hossein1387/LogicBrain.git,2018-10-23 19:34:58+00:00,,0,hossein1387/LogicBrain,154385958,SystemVerilog,LogicBrain,103864,1,2019-01-14 22:52:51+00:00,[],https://api.github.com/licenses/mit
2546,https://github.com/zuhairlateef/Flappy-Bird.git,2019-03-20 01:11:57+00:00,This is an arcade version of the popular phone game Flappy Bird. This is a project that I did as part of a a Digital Design class. The game is implemented in System Verilog.,0,zuhairlateef/Flappy-Bird,176625582,SystemVerilog,Flappy-Bird,5,1,2019-11-19 00:43:38+00:00,[],
2547,https://github.com/skyeblu7/sigARCH_Labs.git,2019-05-04 18:50:50+00:00,labs to get members familier with Verilog and Vivado,1,skyeblu7/sigARCH_Labs,184932889,SystemVerilog,sigARCH_Labs,8333,1,2020-01-14 17:09:06+00:00,[],
2548,https://github.com/kmltml/fpga-paddle.git,2019-01-17 12:39:48+00:00,Project for digital technology course.,0,kmltml/fpga-paddle,166223663,SystemVerilog,fpga-paddle,8,1,2020-03-15 15:28:16+00:00,[],
2549,https://github.com/thalissonmt/Hardware-Project-RISC-V.git,2018-10-30 23:02:13+00:00,"hardware discipline project,  simulation of a multi-cycle processor.",0,thalissonmt/Hardware-Project-RISC-V,155467726,SystemVerilog,Hardware-Project-RISC-V,39,1,2020-07-13 08:51:53+00:00,[],
2550,https://github.com/EnricoRuggiano/stm32-watchdogs.git,2019-01-25 17:39:00+00:00,,0,EnricoRuggiano/stm32-watchdogs,167587615,SystemVerilog,stm32-watchdogs,32,1,2021-08-23 06:30:25+00:00,"['system-verilog', 'wishbone', 'stm32', 'watchdog', 'hardware-description-language']",
2551,https://github.com/asicguy/cnn.git,2018-10-28 14:50:25+00:00,Alpha Data CNN example ported to SystemVerilog,0,asicguy/cnn,155082115,SystemVerilog,cnn,125,1,2020-09-13 01:58:27+00:00,[],
2552,https://github.com/pettermkuo/Projeto_HW.git,2019-04-08 15:45:17+00:00,,2,pettermkuo/Projeto_HW,180181845,SystemVerilog,Projeto_HW,681,1,2019-04-17 15:39:59+00:00,[],
2553,https://github.com/nimamg/MultiCycle-CPU.git,2019-05-11 11:59:02+00:00,A multi cycle CPU based on MIPS architecture,0,nimamg/MultiCycle-CPU,186127426,SystemVerilog,MultiCycle-CPU,75,1,2019-06-09 22:24:41+00:00,[],
2554,https://github.com/medalotte/interleaved-sync-FIFO.git,2019-03-25 06:41:09+00:00,Synchronous FIFO which consist of Single Port RAM for FPGA implementation by using SystemVerilog,3,medalotte/interleaved-sync-FIFO,177529266,SystemVerilog,interleaved-sync-FIFO,40,1,2023-08-04 08:08:52+00:00,[],https://api.github.com/licenses/mit
2555,https://github.com/yuhei1horibe/OVM_Simulation.git,2019-05-16 06:53:36+00:00,PWM unit test bench using OVM library,0,yuhei1horibe/OVM_Simulation,186969450,SystemVerilog,OVM_Simulation,4,1,2022-04-30 00:26:38+00:00,[],
2556,https://github.com/sharonfeldman/sv-assertions-sequence-arguments.git,2018-08-30 08:25:33+00:00,,0,sharonfeldman/sv-assertions-sequence-arguments,146719312,SystemVerilog,sv-assertions-sequence-arguments,2,1,2022-01-25 09:29:56+00:00,[],
2557,https://github.com/VLSIProject2019/vlsi-2019.git,2019-01-17 02:39:39+00:00,,0,VLSIProject2019/vlsi-2019,166147713,SystemVerilog,vlsi-2019,81032,1,2020-07-23 17:05:27+00:00,[],
2558,https://github.com/melt-umn/ableC-rewriting.git,2019-01-31 00:12:06+00:00,Term rewriting extension for ableC,0,melt-umn/ableC-rewriting,168435568,SystemVerilog,ableC-rewriting,79,1,2023-03-10 13:07:44+00:00,[],https://api.github.com/licenses/lgpl-3.0
2559,https://github.com/esch3r/Microfluidics.git,2018-12-23 22:21:37+00:00,References and supplemental material for  for projects involving programming of a microfluidics array,0,esch3r/Microfluidics,162927871,SystemVerilog,Microfluidics,11282,1,2023-03-25 16:24:26+00:00,"['vhdl-code', 'vhdl-examples', 'verilog-project', 'microfluidics', 'puddle']",
2560,https://github.com/Christopher-Daniels/Lunar-Lander.git,2018-12-20 17:20:48+00:00,"This project implemented the arcade classic Lunar Lander as a System on Chip on an FPGA DE2-115 board. The SoC made use of a NIOS II CPU that calculated all game logic. This logic was communicated to HDL written in SystemVerilog, and it was used to determine what to draw to a VGA screen that was plugged into the board. Note the provided code here is non-compilable/synthesizable, because it only features code written by our team, and not some previous provided code we built upon. A demonstration of the project can be seen here(sorry for somewhat low quality): https://www.youtube.com/watch?v=AewrBNLfyOA ",0,Christopher-Daniels/Lunar-Lander,162610145,SystemVerilog,Lunar-Lander,34,1,2019-12-05 07:26:22+00:00,[],
2561,https://github.com/ammar95/ECE-552.git,2019-02-14 02:33:55+00:00,Design of a pipelined RISC microprocessor system with data cache using Verilog,0,ammar95/ECE-552,170614312,SystemVerilog,ECE-552,1105,1,2023-08-23 17:26:12+00:00,[],
2562,https://github.com/kzhangucsb/rtl_permute.git,2019-02-08 02:30:50+00:00,,0,kzhangucsb/rtl_permute,169675095,SystemVerilog,rtl_permute,3,1,2022-07-05 19:19:41+00:00,[],
2563,https://github.com/sharonfeldman/sv-assertions-calling-subroutines.git,2018-08-30 08:26:46+00:00,,0,sharonfeldman/sv-assertions-calling-subroutines,146719464,SystemVerilog,sv-assertions-calling-subroutines,2,1,2022-01-25 15:41:58+00:00,[],
2564,https://github.com/CNLHC/DigiC-Receiver.git,2018-12-06 13:39:59+00:00,<2018-BUAA数字通信项目> OFDM接收机设计,0,CNLHC/DigiC-Receiver,160680088,SystemVerilog,DigiC-Receiver,7384,1,2022-04-12 05:44:31+00:00,[],
2565,https://github.com/NickSica/MyRISCyCPU.git,2019-03-05 20:42:25+00:00,,0,NickSica/MyRISCyCPU,174017636,SystemVerilog,MyRISCyCPU,2916,1,2022-07-20 19:37:40+00:00,[],
2566,https://github.com/juanjm2/I-Vault-Blog-Code.git,2019-02-21 00:16:25+00:00,Code for my FPGA tutorial series on my research team's blog.,0,juanjm2/I-Vault-Blog-Code,171769760,SystemVerilog,I-Vault-Blog-Code,207,1,2021-09-07 11:39:59+00:00,[],
2567,https://github.com/brabect1/sv_handshake_comps.git,2019-03-10 15:56:16+00:00,Reusable handshake components in SystemVerilog.,0,brabect1/sv_handshake_comps,174845983,SystemVerilog,sv_handshake_comps,240,1,2022-04-17 12:27:48+00:00,[],https://api.github.com/licenses/apache-2.0
2568,https://github.com/cquickstad/simple_uvm_example.git,2019-04-17 23:43:20+00:00,"A basic example of a UVM testbench with a simple sequences, driver, monitor, checker, and test.",0,cquickstad/simple_uvm_example,181984199,SystemVerilog,simple_uvm_example,4,1,2022-08-08 01:56:36+00:00,[],
2569,https://github.com/gustavoisidio/riscv.git,2019-04-11 19:08:11+00:00,Processador Risc-V Multiciclo,0,gustavoisidio/riscv,180860544,SystemVerilog,riscv,8850,1,2023-11-23 23:48:39+00:00,[],
2570,https://github.com/adamchristiansen/fpga-uart.git,2018-08-22 21:04:49+00:00,A serial UART for FPGAs,0,adamchristiansen/fpga-uart,145762658,SystemVerilog,fpga-uart,20,1,2024-03-06 08:05:55+00:00,"['fpga', 'hdl', 'serial', 'uart']",https://api.github.com/licenses/mit
2571,https://github.com/tomverbeure/formal_explorations.git,2019-01-06 04:21:27+00:00,,0,tomverbeure/formal_explorations,164274709,SystemVerilog,formal_explorations,0,1,2021-01-20 08:51:46+00:00,[],
2572,https://github.com/cpu-3/methane.git,2018-09-28 07:08:06+00:00,,0,cpu-3/methane,150699886,SystemVerilog,methane,42,1,2019-06-23 02:07:59+00:00,[],
2573,https://github.com/diecaptain/systemv_scripts.git,2018-11-27 04:34:00+00:00,Some basic system verilog scripts from asic world,0,diecaptain/systemv_scripts,159276545,SystemVerilog,systemv_scripts,188,1,2019-08-30 05:16:31+00:00,[],
2574,https://github.com/EvanJMiller/Multicore-Processor.git,2018-10-25 03:38:13+00:00,Dual Core Processor design,0,EvanJMiller/Multicore-Processor,154605839,SystemVerilog,Multicore-Processor,71,1,2022-06-27 00:36:53+00:00,[],
2575,https://github.com/liuzix/3D-accelerator.git,2019-04-05 16:07:03+00:00,,0,liuzix/3D-accelerator,179714207,SystemVerilog,3D-accelerator,26023,1,2019-09-13 11:34:20+00:00,[],
2576,https://github.com/asicguy/test_parser.git,2019-04-26 18:30:31+00:00,"Simple, non-useful example of a parser",0,asicguy/test_parser,183676690,SystemVerilog,test_parser,25,1,2022-03-13 20:46:15+00:00,[],https://api.github.com/licenses/gpl-3.0
2577,https://github.com/jcontrerasf/Team-ELO212.git,2019-05-01 19:04:56+00:00,"Grupo para el curso ELO212 2019-1 USM, donde se utiliza SystemVerilog a través de Vivado.",1,jcontrerasf/Team-ELO212,184466914,SystemVerilog,Team-ELO212,18540,1,2019-08-20 03:38:02+00:00,[],
2578,https://github.com/marlon320/Architecture-and-Design-.git,2018-10-30 18:14:46+00:00,Mips processor made from System Verilog,0,marlon320/Architecture-and-Design-,155434692,SystemVerilog,Architecture-and-Design-,21,1,2023-11-15 18:27:43+00:00,"['systemverilog', 'mips']",
2579,https://github.com/Polarren/ECE385-Digital-Systems.git,2019-05-11 01:59:04+00:00,,0,Polarren/ECE385-Digital-Systems,186076249,SystemVerilog,ECE385-Digital-Systems,11086,1,2022-04-01 23:04:05+00:00,[],
2580,https://github.com/sqrlfirst/Switch2019.git,2019-05-06 13:22:34+00:00,Create Ethernet switch based on FPGA,3,sqrlfirst/Switch2019,185201300,SystemVerilog,Switch2019,1790,1,2020-06-26 14:01:52+00:00,[],
2581,https://github.com/rongcuid/CSEEE6863-Project.git,2018-11-20 22:36:40+00:00,,0,rongcuid/CSEEE6863-Project,158460101,SystemVerilog,CSEEE6863-Project,30,1,2023-01-28 14:11:00+00:00,[],
2582,https://github.com/ExperimentalPhysics/StepMotorDriver.git,2019-01-07 11:24:28+00:00,FPGA driver of step motor on CIC-560 training system designing for plazmatrone sample 1-d positioning,1,ExperimentalPhysics/StepMotorDriver,164422324,SystemVerilog,StepMotorDriver,17,1,2019-02-07 06:55:42+00:00,[],https://api.github.com/licenses/gpl-3.0
2583,https://github.com/wswslzp/aisys_toy.git,2019-01-11 08:35:55+00:00,Image recognization system using convolutional neural network,0,wswslzp/aisys_toy,165208610,SystemVerilog,aisys_toy,1496,1,2019-03-20 12:00:48+00:00,[],
2584,https://github.com/sgnoohc/fpga-aws-projects.git,2019-02-16 21:30:53+00:00,,0,sgnoohc/fpga-aws-projects,171054135,SystemVerilog,fpga-aws-projects,16438,1,2022-01-22 02:37:47+00:00,[],
2585,https://github.com/rpmagdaluyo/eecs112l-RISC-V.git,2019-02-13 03:32:20+00:00,,0,rpmagdaluyo/eecs112l-RISC-V,170434101,SystemVerilog,eecs112l-RISC-V,12768,1,2022-04-19 22:06:43+00:00,[],
2586,https://github.com/brad-taylor/FPGAFeatureTracker.git,2019-01-24 15:05:27+00:00,Feature tracking for FPGA hardware,2,brad-taylor/FPGAFeatureTracker,167386423,SystemVerilog,FPGAFeatureTracker,3714,1,2024-03-10 02:06:27+00:00,[],https://api.github.com/licenses/mit
2587,https://github.com/randomCharacter/PNRS2.git,2018-11-03 19:25:25+00:00,"Rešenja zadataka sa vežbi iz predmeta ""Projektovanje namenskih računarskih struktura 2""",0,randomCharacter/PNRS2,156016479,SystemVerilog,PNRS2,10173,1,2019-08-31 20:28:13+00:00,"['ftn', 'e2', 'rt-rk', 'system-verilog', 'vhdl']",
2588,https://github.com/Pulho/Processador-Risc-V.git,2018-10-24 15:00:16+00:00,Projeto universitário que simula um processador multiciclo Risc V,2,Pulho/Processador-Risc-V,154520506,SystemVerilog,Processador-Risc-V,1439,1,2022-09-23 00:59:24+00:00,[],
2589,https://github.com/ChrisArreFall/Single_Cycle_ARM_Processor.git,2018-10-16 09:53:22+00:00,ARM Processor ,0,ChrisArreFall/Single_Cycle_ARM_Processor,153262537,SystemVerilog,Single_Cycle_ARM_Processor,919,1,2019-04-21 06:17:34+00:00,[],
2590,https://github.com/hsiehjackson/2018DCLab.git,2019-01-19 05:25:41+00:00,,2,hsiehjackson/2018DCLab,166509665,SystemVerilog,2018DCLab,48954,1,2019-02-21 15:35:06+00:00,[],
2591,https://github.com/cpuex2018-5/Flareon.git,2018-12-02 08:39:50+00:00,CPU Experiment 2nd architecthre,1,cpuex2018-5/Flareon,160028594,SystemVerilog,Flareon,1121,1,2019-04-28 19:25:32+00:00,[],
2592,https://github.com/chienchin/FPGA-verilog-aes.git,2018-09-16 06:06:57+00:00,AES  algorithm based on  FPGA connected with UART,0,chienchin/FPGA-verilog-aes,148968485,SystemVerilog,FPGA-verilog-aes,10,1,2019-08-27 11:22:17+00:00,[],
2593,https://github.com/hpbag/Baccarat.git,2019-01-16 14:31:11+00:00,https://en.wikipedia.org/wiki/Baccarat_(card_game),0,hpbag/Baccarat,166054147,SystemVerilog,Baccarat,15,1,2019-01-16 14:39:00+00:00,[],
2594,https://github.com/nganjehloo/Custom-Single-Cycle-CPU.git,2019-04-07 06:16:19+00:00,,0,nganjehloo/Custom-Single-Cycle-CPU,179925686,SystemVerilog,Custom-Single-Cycle-CPU,182,1,2019-04-07 06:32:52+00:00,[],
2595,https://github.com/Liby99/cirno-processing-unit.git,2019-04-05 17:47:35+00:00,⑨-Bit Cpu Design,1,Liby99/cirno-processing-unit,179729062,SystemVerilog,cirno-processing-unit,25530,1,2020-06-17 07:06:07+00:00,[],
2596,https://github.com/ameetgohil/two-input-arbiter.git,2019-04-13 06:05:34+00:00,Two input arbiter,0,ameetgohil/two-input-arbiter,181128497,SystemVerilog,two-input-arbiter,2,1,2022-07-02 23:27:14+00:00,[],https://api.github.com/licenses/mit
2597,https://github.com/Bynaryman/POF.git,2019-05-18 12:39:06+00:00,The Posit Operators Framework (POF) is a comprehensive library designed to facilitate arithmetic computations and neural network operations using the Posit numerical format on FPGAs.,0,Bynaryman/POF,187356331,SystemVerilog,POF,6770,1,2024-03-15 02:54:38+00:00,"['architecture', 'arithmetic', 'computer', 'ieee754', 'posit']",
2598,https://github.com/WBao93/Systolic-Array-2D-Convolution-Layer.git,2019-03-14 04:57:25+00:00,UCSD CSE 240D WI19 Final Project: A Systolic Array-based Single Convolution Layer in SystemVerilog,2,WBao93/Systolic-Array-2D-Convolution-Layer,175550937,SystemVerilog,Systolic-Array-2D-Convolution-Layer,2167,1,2019-12-10 02:01:41+00:00,[],
2599,https://github.com/MIPS32-CPU/cpu.git,2018-11-21 23:03:08+00:00,,0,MIPS32-CPU/cpu,158616075,SystemVerilog,cpu,27596,1,2020-05-08 15:26:20+00:00,[],
2600,https://github.com/HighBaritone/ECE272FinalProject.git,2018-11-26 06:00:09+00:00,Pong in SystemVerilog Yeet,0,HighBaritone/ECE272FinalProject,159118493,SystemVerilog,ECE272FinalProject,7,1,2018-11-28 09:42:00+00:00,[],
2601,https://github.com/Hintonthu/MIMORI.git,2018-12-03 03:32:49+00:00,"This project implements an accelerator architecture for deep learning as well as other vision-related tasks, which is based on the paper ""Unrolled Memory Inner-Products: An Abstract GPU Operator for Efficient Vision-Related Computations"" (ICCV 2017).",0,Hintonthu/MIMORI,160127814,SystemVerilog,MIMORI,451,1,2022-02-24 21:40:08+00:00,[],https://api.github.com/licenses/gpl-3.0
2602,https://github.com/domheaton/8-bit_Multiplier_in_System-Verilog.git,2018-10-28 17:53:15+00:00,2nd Year Project - An 8-bit multiplier designed in System Verilog,1,domheaton/8-bit_Multiplier_in_System-Verilog,155099046,SystemVerilog,8-bit_Multiplier_in_System-Verilog,6,1,2021-10-08 04:55:21+00:00,[],
2603,https://github.com/0xArt/SystemVerilogUART.git,2019-04-07 20:11:54+00:00,,1,0xArt/SystemVerilogUART,180018080,SystemVerilog,SystemVerilogUART,5543,1,2022-04-11 19:19:37+00:00,[],
2604,https://github.com/wwang00/cs429h-pb.git,2019-05-04 16:32:28+00:00,FPGA Quadcopter Flight Controller,0,wwang00/cs429h-pb,184919411,SystemVerilog,cs429h-pb,12368,1,2023-03-30 13:22:07+00:00,[],
2605,https://github.com/akinizer/Complete_Microprocessor_Model.git,2019-01-13 18:29:51+00:00,Microprocessor model modules written in System Verilog,0,akinizer/Complete_Microprocessor_Model,165539835,SystemVerilog,Complete_Microprocessor_Model,9,1,2023-05-18 17:25:16+00:00,[],
2606,https://github.com/pulp-platform/udma_adc_ts.git,2019-03-05 16:32:48+00:00,udma module to record multi-channel timestamps,1,pulp-platform/udma_adc_ts,173982544,SystemVerilog,udma_adc_ts,12,1,2022-09-12 22:08:27+00:00,[],
2607,https://github.com/wk05130/B_TB.git,2018-08-24 02:00:44+00:00,BLE_MAC_TB realized by UVM,0,wk05130/B_TB,145929332,SystemVerilog,B_TB,140,1,2022-02-17 06:24:50+00:00,[],
2608,https://github.com/sharonfeldman/sv-assertions-pound-pound-operator.git,2018-08-30 06:59:06+00:00,,1,sharonfeldman/sv-assertions-pound-pound-operator,146709150,SystemVerilog,sv-assertions-pound-pound-operator,2,1,2022-01-25 15:41:34+00:00,[],
2609,https://github.com/Gegedaye/mdl_scb.git,2019-02-20 11:44:23+00:00,little uvm env,0,Gegedaye/mdl_scb,171662871,SystemVerilog,mdl_scb,9,1,2021-04-02 05:35:31+00:00,[],
2610,https://github.com/shanghaicity/sim-utility.git,2019-03-07 07:43:38+00:00,sim utility for rtl,0,shanghaicity/sim-utility,174296094,SystemVerilog,sim-utility,15,1,2019-03-07 07:46:01+00:00,[],https://api.github.com/licenses/gpl-3.0
2611,https://github.com/mmxsrup/data2axi4s.git,2019-03-14 23:52:35+00:00,Convert data signal to axi4-stream signal,0,mmxsrup/data2axi4s,175717362,SystemVerilog,data2axi4s,2,1,2022-02-17 22:48:45+00:00,['axi4-stream'],
2612,https://github.com/danielkasza/lcore.git,2019-04-21 02:29:14+00:00,Tiny pipelined 16b CPU,0,danielkasza/lcore,182478018,SystemVerilog,lcore,20,1,2020-06-02 23:58:05+00:00,[],https://api.github.com/licenses/mit
2613,https://github.com/rrn-27/verification_riscv_ariane.git,2019-04-16 20:20:58+00:00,,0,rrn-27/verification_riscv_ariane,181761071,SystemVerilog,verification_riscv_ariane,26362,1,2020-06-08 02:05:34+00:00,[],
2614,https://github.com/whoami90506/dclab_final.git,2019-05-09 06:23:51+00:00,Tank Game implementation on FPGA,0,whoami90506/dclab_final,185738873,SystemVerilog,dclab_final,55797,1,2023-05-18 09:18:08+00:00,[],
2615,https://github.com/gchinna/eight-queens-sv.git,2019-03-28 05:19:44+00:00,Eight queens puzzle solver using SystemVerilog constraints.,0,gchinna/eight-queens-sv,178131524,SystemVerilog,eight-queens-sv,25,1,2024-01-03 07:47:31+00:00,[],https://api.github.com/licenses/mit
2616,https://github.com/JBas/LCD_Driver_HW.git,2019-03-20 20:26:34+00:00,,0,JBas/LCD_Driver_HW,176811628,SystemVerilog,LCD_Driver_HW,1273,1,2024-03-16 07:26:07+00:00,"['systemverilog', 'lcd-display', 'nook', 'fun']",
2617,https://github.com/bornhorst/DDR3_Mem_Controller.git,2018-11-09 22:54:40+00:00,Simulation and Verification of a DDR3 Memory Controller,1,bornhorst/DDR3_Mem_Controller,156926963,SystemVerilog,DDR3_Mem_Controller,26,1,2019-07-18 17:39:33+00:00,[],
2618,https://github.com/Boraillie/FPGA_CoDesign.git,2018-09-26 15:11:01+00:00,Codes pour le cours FPGA Co Design,0,Boraillie/FPGA_CoDesign,150446219,SystemVerilog,FPGA_CoDesign,38967,1,2020-11-12 15:27:58+00:00,[],
2619,https://github.com/iprabhat29/AMBA_APB_UVM_DESIGN_VERIFICATIOn.git,2019-02-10 01:26:04+00:00,APB Protocol Design and Verification using UVM/SV,1,iprabhat29/AMBA_APB_UVM_DESIGN_VERIFICATIOn,169932109,SystemVerilog,AMBA_APB_UVM_DESIGN_VERIFICATIOn,9,1,2023-01-17 07:13:10+00:00,[],
2620,https://github.com/shaynakapadia/duckHunt.git,2019-04-15 23:39:45+00:00,final project for 385,0,shaynakapadia/duckHunt,181580695,SystemVerilog,duckHunt,46337,1,2020-07-20 04:55:54+00:00,[],
2621,https://github.com/guna000/Design-and-Verification-of-RAM-in-SystemVerilog.git,2019-03-09 19:05:00+00:00,Design of Single Port Synchronous RAM based on given Design Specification and verifying its functionality in SystemVerilog Environment.,0,guna000/Design-and-Verification-of-RAM-in-SystemVerilog,174735016,SystemVerilog,Design-and-Verification-of-RAM-in-SystemVerilog,25,1,2024-01-12 15:39:38+00:00,[],
2622,https://github.com/wavelet-eda/reptilia.git,2018-12-28 21:19:33+00:00,A collection of synthesizable SystemVerilog,2,wavelet-eda/reptilia,163450331,SystemVerilog,reptilia,10232,1,2022-11-20 23:22:48+00:00,[],
2623,https://github.com/fpgach/GOST-R-34.12-2015.git,2019-01-18 13:07:53+00:00,Kuznyechik Verilog,0,fpgach/GOST-R-34.12-2015,166406521,SystemVerilog,GOST-R-34.12-2015,171,1,2023-09-07 05:41:13+00:00,[],
2624,https://github.com/sheepvs5/g2_calculator.git,2019-02-12 23:59:32+00:00,Second order correlation function calculator working in FPGA,1,sheepvs5/g2_calculator,170410272,SystemVerilog,g2_calculator,2014,1,2019-03-02 02:38:48+00:00,[],
2625,https://github.com/arjperi/uvmTB.git,2019-02-13 00:16:03+00:00,Bare Bone test bench for an addsub hardware unit,0,arjperi/uvmTB,170411794,SystemVerilog,uvmTB,22,1,2021-06-10 16:14:00+00:00,[],
2626,https://github.com/ypm1999/HDL.git,2018-09-29 11:15:20+00:00,,0,ypm1999/HDL,150856705,SystemVerilog,HDL,18600,1,2021-07-31 12:00:18+00:00,[],
2627,https://github.com/evangreen27/Sha256Verilog.git,2018-09-27 22:37:05+00:00,,0,evangreen27/Sha256Verilog,150655617,SystemVerilog,Sha256Verilog,10503,1,2020-01-07 14:22:03+00:00,[],
2628,https://github.com/YoufuChen/ECE385_Finalproject_I-wanna-be-the-zuofu.git,2019-05-09 23:35:43+00:00,Sp2019 in UIUC ECE385 final project developed by Ximin Chen and Yuhang Ren 10/10,0,YoufuChen/ECE385_Finalproject_I-wanna-be-the-zuofu,185886114,SystemVerilog,ECE385_Finalproject_I-wanna-be-the-zuofu,11166,1,2020-04-19 19:34:55+00:00,[],
2629,https://github.com/shrtique/sv_hist_eq.git,2019-02-01 08:58:08+00:00,Histogram equalization module. Communication: AXIS. Settings:  AXI-Lite,0,shrtique/sv_hist_eq,168669798,SystemVerilog,sv_hist_eq,115,1,2023-11-23 02:19:44+00:00,[],
2630,https://github.com/shrtique/sv_axis_median_5x5.git,2018-12-21 10:00:23+00:00,"Median filter 5x5 with AXI Stream interface. Each stage of processing is registered. Unfortunately can't be automatically synthesized to 3x3 version, so parameter KERNEL_SIZE should be always 5.",0,shrtique/sv_axis_median_5x5,162697948,SystemVerilog,sv_axis_median_5x5,14396,1,2023-11-23 02:11:20+00:00,[],
2631,https://github.com/4th-Year-Project/FPGA_ADC_interface.git,2018-10-22 17:34:19+00:00,interface to collect data from ADC and output in a format so can be stored in memory,0,4th-Year-Project/FPGA_ADC_interface,154187293,SystemVerilog,FPGA_ADC_interface,26353,1,2019-04-14 13:56:12+00:00,[],
2632,https://github.com/vedantgarg28/SystemVerilog.git,2018-12-10 03:19:52+00:00,Various Code example and tutorial for OOPS and basic SV constructs,0,vedantgarg28/SystemVerilog,161110315,SystemVerilog,SystemVerilog,3,1,2020-01-13 11:26:35+00:00,[],
2633,https://github.com/bradweeks7/CPE233.git,2019-02-19 17:34:43+00:00,Microprocessor built on an Artix-7 FPGA,0,bradweeks7/CPE233,171519180,SystemVerilog,CPE233,41576,1,2019-10-03 16:36:00+00:00,[],
2634,https://github.com/flasonil/shift_register.git,2019-04-01 19:57:10+00:00,,0,flasonil/shift_register,178937364,SystemVerilog,shift_register,40,1,2021-02-09 00:53:31+00:00,[],
2635,https://github.com/cevero/ft_system.git,2019-03-27 14:14:19+00:00,,1,cevero/ft_system,178008691,SystemVerilog,ft_system,638,1,2021-07-29 19:47:08+00:00,[],
2636,https://github.com/cevero/cevero_ft.git,2019-04-29 17:49:13+00:00,Cevero system on a chip with fault tolerance system module,1,cevero/cevero_ft,184117277,SystemVerilog,cevero_ft,106,1,2023-07-28 09:37:52+00:00,[],
2637,https://github.com/mmoksas68/EmergencyElevatorProject.git,2019-02-17 10:41:59+00:00,Elevator simulator,0,mmoksas68/EmergencyElevatorProject,171109960,SystemVerilog,EmergencyElevatorProject,5248,1,2023-11-20 08:14:44+00:00,[],
2638,https://github.com/iprabhat29/UART_UVM_Verification.git,2019-01-29 18:34:08+00:00,UART Design and Verification using SV/UVM1.1,2,iprabhat29/UART_UVM_Verification,168206882,SystemVerilog,UART_UVM_Verification,358,1,2024-03-02 15:44:39+00:00,[],
2639,https://github.com/36000/ECE469.git,2018-10-09 01:40:40+00:00,,0,36000/ECE469,152170318,SystemVerilog,ECE469,36768,1,2022-05-21 15:58:33+00:00,[],
2640,https://github.com/RanLuKenny/simple-UVM-verification-codes.git,2018-08-30 19:06:42+00:00,,0,RanLuKenny/simple-UVM-verification-codes,146794499,SystemVerilog,simple-UVM-verification-codes,8,1,2022-04-29 23:33:46+00:00,[],
2641,https://github.com/bhyou/asic_photon_cont_readout.git,2018-11-07 04:58:32+00:00,,0,bhyou/asic_photon_cont_readout,156492468,SystemVerilog,asic_photon_cont_readout,84,1,2021-12-25 05:39:40+00:00,[],
2642,https://github.com/bzhao13/EE-271.git,2018-11-17 04:37:34+00:00,EE 271 at the University of Washington,0,bzhao13/EE-271,157951080,SystemVerilog,EE-271,5398,1,2021-03-10 16:15:05+00:00,[],
2643,https://github.com/j1s1e1/VerilogNeuralNetworkTests.git,2018-12-03 03:48:54+00:00,,0,j1s1e1/VerilogNeuralNetworkTests,160129339,SystemVerilog,VerilogNeuralNetworkTests,403,1,2023-10-11 11:49:09+00:00,[],https://api.github.com/licenses/mit
2644,https://github.com/DandyMan19/CPE-233-2019.git,2019-03-06 19:18:03+00:00,Uses RAT SIM to produce a BEAKER game,1,DandyMan19/CPE-233-2019,174205769,SystemVerilog,CPE-233-2019,220,1,2019-03-14 04:09:46+00:00,[],
2645,https://github.com/swm11/riscv-lite.git,2019-03-13 15:05:25+00:00,Versions of RISC-V that only execute the fib() function.,2,swm11/riscv-lite,175444232,SystemVerilog,riscv-lite,105,1,2023-01-13 05:35:16+00:00,[],https://api.github.com/licenses/bsd-2-clause
2646,https://github.com/kanghoyangcollege/Spaceship-Arcade.git,2019-03-05 20:07:44+00:00,An implementation of an spaceship arcade using System Verilog,0,kanghoyangcollege/Spaceship-Arcade,174013217,SystemVerilog,Spaceship-Arcade,994,1,2022-05-02 18:43:10+00:00,[],
2647,https://github.com/miyo/axonerve_util.git,2019-04-11 06:46:59+00:00,Utility modules for Axonerve,0,miyo/axonerve_util,180731612,SystemVerilog,axonerve_util,675,1,2019-09-30 02:07:54+00:00,[],https://api.github.com/licenses/apache-2.0
2648,https://github.com/tanbour/mipi_mphy.git,2019-04-23 03:32:19+00:00,Specification for mipi-M-PHY,1,tanbour/mipi_mphy,182922936,SystemVerilog,mipi_mphy,8,1,2022-05-24 09:31:56+00:00,[],
2649,https://github.com/concavegit/ALU.git,2018-09-28 16:58:08+00:00,MIPS ALU implementation,0,concavegit/ALU,150770407,SystemVerilog,ALU,729,0,2018-10-05 02:16:49+00:00,[],
2650,https://github.com/Mjdgithuber/LevelEditor.git,2018-08-24 23:23:42+00:00,A level editor for my java game,0,Mjdgithuber/LevelEditor,146048306,SystemVerilog,LevelEditor,102,0,2018-08-24 23:23:47+00:00,[],
2651,https://github.com/tomasKromer/Cache.git,2018-09-02 00:40:51+00:00,,0,tomasKromer/Cache,147042793,SystemVerilog,Cache,5,0,2018-09-05 13:53:53+00:00,[],
2652,https://github.com/ManasaTempalli/AXI_OCP_Interconnect.git,2018-09-07 19:37:17+00:00,,1,ManasaTempalli/AXI_OCP_Interconnect,147867090,SystemVerilog,AXI_OCP_Interconnect,172,0,2019-07-21 19:55:14+00:00,[],
2653,https://github.com/thallock2/ece554.git,2018-09-11 22:39:34+00:00,,0,thallock2/ece554,148388912,SystemVerilog,ece554,29,0,2018-09-18 00:48:00+00:00,[],
2654,https://github.com/ChrisArreFall/Maquina_expendedora_de_cafe.git,2018-09-13 23:43:07+00:00,Maquina expendedora de cafe basado en systemverilog,0,ChrisArreFall/Maquina_expendedora_de_cafe,148710715,SystemVerilog,Maquina_expendedora_de_cafe,7274,0,2018-09-14 14:09:48+00:00,[],
2655,https://github.com/Darky777/segment_display_de1soc.git,2018-11-21 13:01:45+00:00,,0,Darky777/segment_display_de1soc,158548743,SystemVerilog,segment_display_de1soc,11,0,2019-01-31 08:01:15+00:00,[],
2656,https://github.com/upadhk/EE-271-Lab-7.git,2018-12-19 23:50:00+00:00,,0,upadhk/EE-271-Lab-7,162503132,SystemVerilog,EE-271-Lab-7,12,0,2018-12-20 02:06:56+00:00,[],
2657,https://github.com/Mithilamar/ASIC_project.git,2018-12-20 17:43:56+00:00,Project ,0,Mithilamar/ASIC_project,162612415,SystemVerilog,ASIC_project,19285,0,2018-12-20 18:40:11+00:00,[],
2658,https://github.com/grantneuman/Department_Store_Checkout_System.git,2018-12-28 19:21:52+00:00,,0,grantneuman/Department_Store_Checkout_System,163442560,SystemVerilog,Department_Store_Checkout_System,2,0,2018-12-29 00:47:36+00:00,[],
2659,https://github.com/songkaichun/ece337pub.git,2018-12-31 01:22:32+00:00,,0,songkaichun/ece337pub,163629691,SystemVerilog,ece337pub,904,0,2018-12-31 02:27:42+00:00,[],
2660,https://github.com/architbajpai/synch-FIFO.git,2019-01-01 06:58:29+00:00,,0,architbajpai/synch-FIFO,163718973,SystemVerilog,synch-FIFO,6,0,2019-01-01 07:09:28+00:00,[],
2661,https://github.com/gitlingaraju/experiments.git,2018-11-05 12:08:58+00:00,Use this to learn git commands,0,gitlingaraju/experiments,156212140,SystemVerilog,experiments,5,0,2019-02-08 12:08:01+00:00,[],
2662,https://github.com/alimar05/Digital_Design_Harris.git,2018-11-07 13:21:22+00:00,,0,alimar05/Digital_Design_Harris,156549606,SystemVerilog,Digital_Design_Harris,487,0,2020-06-23 12:49:59+00:00,[],
2663,https://github.com/teann/segway.git,2018-12-14 20:33:35+00:00,Segway/hoverboard that drives a differential drive segway based on the lean of a rider,0,teann/segway,161837542,SystemVerilog,segway,78,0,2018-12-14 20:43:16+00:00,[],
2664,https://github.com/vatsal184/RISCV-SoftCore.git,2018-12-13 18:43:02+00:00,,0,vatsal184/RISCV-SoftCore,161680782,SystemVerilog,RISCV-SoftCore,77,0,2019-04-20 04:20:59+00:00,[],https://api.github.com/licenses/mit
2665,https://github.com/jssfilho/Starting-HDL.git,2018-08-30 23:43:05+00:00,Repositório dedicado ao estudo de SystemVerilog ,0,jssfilho/Starting-HDL,146818278,SystemVerilog,Starting-HDL,6,0,2020-03-30 15:43:48+00:00,[],
2666,https://github.com/santiabbate/unrn-riscv.git,2018-10-09 14:34:54+00:00,,0,santiabbate/unrn-riscv,152266930,SystemVerilog,unrn-riscv,1,0,2018-10-09 14:44:26+00:00,[],
2667,https://github.com/leajalil/cache_L1.git,2018-10-07 15:33:11+00:00,,0,leajalil/cache_L1,151956261,SystemVerilog,cache_L1,4,0,2023-01-18 14:48:37+00:00,[],
2668,https://github.com/ezraboley/ece551-final-project.git,2018-11-26 16:01:53+00:00,The wildest segway control system in the midwest,0,ezraboley/ece551-final-project,159195961,SystemVerilog,ece551-final-project,87077,0,2019-05-08 14:52:28+00:00,[],https://api.github.com/licenses/gpl-3.0
2669,https://github.com/ValdemarTD/ECE-271-Fall-2018-Final-Project.git,2018-11-29 00:51:41+00:00,,0,ValdemarTD/ECE-271-Fall-2018-Final-Project,159585680,SystemVerilog,ECE-271-Fall-2018-Final-Project,67,0,2018-11-30 16:42:42+00:00,[],
2670,https://github.com/JoeBlanchard/silver-treesitter-test-language.git,2019-01-11 21:23:47+00:00,A test language for developing a treesitter extension for Silver for syntax highlighting in Atom.,0,JoeBlanchard/silver-treesitter-test-language,165311845,SystemVerilog,silver-treesitter-test-language,2,0,2019-01-11 21:35:24+00:00,[],
2671,https://github.com/RadhikaF/ELEC4700.git,2019-03-14 03:34:27+00:00,,0,RadhikaF/ELEC4700,175542600,SystemVerilog,ELEC4700,10002,0,2019-07-01 02:15:31+00:00,[],
2672,https://github.com/tsleolima/System-Very-Log.git,2019-04-27 15:28:26+00:00,Repositorio com os códigos usados para a disciplina de Laboratório de Organização e Arquitetura de Computadores,0,tsleolima/System-Very-Log,183790079,SystemVerilog,System-Very-Log,5,0,2019-04-27 15:36:20+00:00,[],
2673,https://github.com/glkclass/dut_tb.git,2019-05-02 12:54:16+00:00,Verification environment based on UVM,0,glkclass/dut_tb,184580736,SystemVerilog,dut_tb,25,0,2023-02-01 17:04:05+00:00,[],
2674,https://github.com/melt-umn/ableC-run.git,2019-02-14 12:20:52+00:00,An ableC extension that introduces a language construct for spawning pthreads,0,melt-umn/ableC-run,170686928,SystemVerilog,ableC-run,11,0,2019-02-14 12:21:20+00:00,[],https://api.github.com/licenses/lgpl-3.0
2675,https://github.com/Hrfisher-97/EE-CSE-469.git,2018-10-29 16:30:33+00:00,University of Washington EE/CSE 469 Computer Architecture I Autumn 2018. Borbor and Fisher Project Files,0,Hrfisher-97/EE-CSE-469,155244979,SystemVerilog,EE-CSE-469,7942,0,2018-11-28 03:55:23+00:00,[],
2676,https://github.com/GeorgeOnwubuya/Reaction_Timer_SystemVerilog.git,2018-11-09 19:14:19+00:00,Simple project to test human reaction time,0,GeorgeOnwubuya/Reaction_Timer_SystemVerilog,156907144,SystemVerilog,Reaction_Timer_SystemVerilog,10,0,2018-11-09 19:23:40+00:00,[],
2677,https://github.com/debruynmonge/SystemVerilog.git,2019-02-01 20:49:17+00:00,SystemVerilog,0,debruynmonge/SystemVerilog,168758387,SystemVerilog,SystemVerilog,2,0,2019-02-01 20:52:23+00:00,[],
2678,https://github.com/blanketboyjo/ECU_HDL.git,2019-01-29 03:12:04+00:00,Verilog and VHDL for ECU,0,blanketboyjo/ECU_HDL,168080506,SystemVerilog,ECU_HDL,12,0,2019-03-13 20:31:39+00:00,[],
2679,https://github.com/tec-tdg/Lab4.git,2019-03-26 22:58:57+00:00,,0,tec-tdg/Lab4,177881128,SystemVerilog,Lab4,17,0,2019-03-29 04:45:24+00:00,[],
2680,https://github.com/abhaysp2/ECE385-SystemVerilog-Code.git,2019-02-27 00:25:27+00:00,SystemVerilog and C code for FPGA,0,abhaysp2/ECE385-SystemVerilog-Code,172812392,SystemVerilog,ECE385-SystemVerilog-Code,34333,0,2019-08-22 21:24:49+00:00,[],
2681,https://github.com/draconian-design/cc-agent.git,2019-05-05 17:57:17+00:00,A cookiecutter template to create a UVM agent.,0,draconian-design/cc-agent,185064673,SystemVerilog,cc-agent,36,0,2019-05-29 23:52:40+00:00,[],https://api.github.com/licenses/gpl-3.0
2682,https://github.com/NicolasCanales/Nexys-4ddr_Example-Code.git,2019-05-15 01:19:53+00:00,Codigo de la sesion 5,0,NicolasCanales/Nexys-4ddr_Example-Code,186725882,SystemVerilog,Nexys-4ddr_Example-Code,61,0,2022-05-21 20:20:51+00:00,[],
2683,https://github.com/chetanmelagiri/fifo_project.git,2019-05-08 07:38:01+00:00,,0,chetanmelagiri/fifo_project,185556497,SystemVerilog,fifo_project,25,0,2019-06-24 09:02:17+00:00,[],
2684,https://github.com/unitristen/Capstone-Design.git,2019-01-08 22:16:35+00:00,BeatKeyper Decryption Processor,0,unitristen/Capstone-Design,164742537,SystemVerilog,Capstone-Design,56,0,2019-01-08 22:23:13+00:00,[],
2685,https://github.com/kayhand/sdb_fpga.git,2019-01-17 21:48:21+00:00,,0,kayhand/sdb_fpga,166301880,SystemVerilog,sdb_fpga,157,0,2020-01-06 10:43:24+00:00,[],
2686,https://github.com/venn29/Computer_Architecture_Ex.git,2019-04-02 01:50:26+00:00,LabCode and Report,0,venn29/Computer_Architecture_Ex,178977957,SystemVerilog,Computer_Architecture_Ex,68668,0,2019-08-11 09:21:46+00:00,[],
2687,https://github.com/abdo1819/fpu_multipyler.git,2019-04-06 17:34:18+00:00,,1,abdo1819/fpu_multipyler,179865610,SystemVerilog,fpu_multipyler,191,0,2019-06-14 22:12:23+00:00,[],
2688,https://github.com/aleksams/TFE4171.git,2019-04-08 12:24:54+00:00,Testbench files for the verification of a HDLC module,1,aleksams/TFE4171,180143703,SystemVerilog,TFE4171,3701,0,2019-04-30 21:13:43+00:00,[],
2689,https://github.com/adityamathur20/clic.git,2019-04-10 09:46:03+00:00,"Core-Local Interrupt Controller for RISCV compliant cores, support upto 255 interrupts",0,adityamathur20/clic,180551545,SystemVerilog,clic,6,0,2019-05-04 15:31:07+00:00,[],
2690,https://github.com/mauriciomc/GIT_FIR_N.git,2019-04-17 07:55:40+00:00,Nth order FIR filter,0,mauriciomc/GIT_FIR_N,181843859,SystemVerilog,GIT_FIR_N,11,0,2019-04-18 14:11:07+00:00,[],
2691,https://github.com/HarrisonMc555/ecen620-final-project.git,2019-04-19 16:30:59+00:00,ECEn 620 Final Project for Dallin Skousen and Harrison McCullough,0,HarrisonMc555/ecen620-final-project,182294515,SystemVerilog,ecen620-final-project,1186,0,2023-01-28 18:20:33+00:00,[],
2692,https://github.com/xyzxinyizhang/Wireless-Wearable-Device-design-on-falling-detection.git,2018-09-04 21:09:18+00:00,,0,xyzxinyizhang/Wireless-Wearable-Device-design-on-falling-detection,147419679,SystemVerilog,Wireless-Wearable-Device-design-on-falling-detection,29,0,2018-10-16 21:11:50+00:00,[],
2693,https://github.com/matthpn2/ARM-Datapath-and-Control.git,2018-09-18 01:05:22+00:00,A five-stage pipeline ARM processor.,0,matthpn2/ARM-Datapath-and-Control,149208415,SystemVerilog,ARM-Datapath-and-Control,1814,0,2021-03-08 03:19:24+00:00,"['arm', 'systemverilog']",
2694,https://github.com/SplenDidShot/FPGA_SoC_Game_Deisgn.git,2018-09-17 01:41:20+00:00,Final Project for ECE385 (SystemVerilog),0,SplenDidShot/FPGA_SoC_Game_Deisgn,149053619,SystemVerilog,FPGA_SoC_Game_Deisgn,29,0,2019-03-26 07:34:16+00:00,[],
2695,https://github.com/jpakula0296/MiniProject2.git,2018-09-20 20:06:52+00:00,,0,jpakula0296/MiniProject2,149664408,SystemVerilog,MiniProject2,400,0,2018-09-25 23:11:26+00:00,[],
2696,https://github.com/jasonpdk/Verilog-Basys3-Maze-Project.git,2018-10-25 13:28:29+00:00,,0,jasonpdk/Verilog-Basys3-Maze-Project,154676023,SystemVerilog,Verilog-Basys3-Maze-Project,55297,0,2018-11-09 16:51:17+00:00,[],
2697,https://github.com/zpk66666/test.git,2018-12-17 14:49:44+00:00,,0,zpk66666/test,162145739,SystemVerilog,test,4,0,2018-12-17 14:51:54+00:00,[],
2698,https://github.com/upadhk/EE-271-Lab5.git,2018-12-19 02:54:11+00:00,,0,upadhk/EE-271-Lab5,162374370,SystemVerilog,EE-271-Lab5,4,0,2018-12-20 01:38:54+00:00,[],
2699,https://github.com/upadhk/EE-271-Lab3.git,2018-12-19 01:11:25+00:00,,0,upadhk/EE-271-Lab3,162364272,SystemVerilog,EE-271-Lab3,1,0,2018-12-20 01:15:33+00:00,[],
2700,https://github.com/arnfol/shared_ports.git,2018-10-14 20:32:39+00:00,,1,arnfol/shared_ports,153016336,SystemVerilog,shared_ports,70,0,2019-01-31 21:10:23+00:00,[],
2701,https://github.com/jnestor/life_core.git,2019-01-10 16:30:24+00:00,Hardware Core for Conway's Game of Life,0,jnestor/life_core,165093932,SystemVerilog,life_core,7,0,2019-01-10 16:33:25+00:00,[],
2702,https://github.com/yore0403/DCLab.git,2018-11-14 08:23:51+00:00,2018 fall DClab,0,yore0403/DCLab,157515276,SystemVerilog,DCLab,152928,0,2020-04-13 16:21:51+00:00,[],
2703,https://github.com/sizzaak/EE371_lab5.git,2018-11-14 22:07:45+00:00,,0,sizzaak/EE371_lab5,157617596,SystemVerilog,EE371_lab5,7,0,2018-12-07 20:55:17+00:00,[],
2704,https://github.com/mfidaali/Simple-ASM.git,2018-12-03 20:45:48+00:00,Simple Algorithmic State Machine to count number of 1's in in an n-bit input,0,mfidaali/Simple-ASM,160251592,SystemVerilog,Simple-ASM,9490,0,2018-12-05 00:28:57+00:00,[],
2705,https://github.com/aushacker/verilog.git,2018-11-29 05:04:34+00:00,Verilog examples,0,aushacker/verilog,159610434,SystemVerilog,verilog,8,0,2023-08-21 08:55:02+00:00,[],https://api.github.com/licenses/mit
2706,https://github.com/caldasluan/projet-final-lcl.git,2018-11-02 15:08:03+00:00,,0,caldasluan/projet-final-lcl,155882675,SystemVerilog,projet-final-lcl,10794,0,2018-12-05 18:33:42+00:00,[],
2707,https://github.com/hamimulchowdhury/Systemverilog-code-practice.git,2018-12-12 07:22:24+00:00,,0,hamimulchowdhury/Systemverilog-code-practice,161448684,SystemVerilog,Systemverilog-code-practice,152587,0,2019-05-23 09:54:47+00:00,[],https://api.github.com/licenses/unlicense
2708,https://github.com/NSLeung/ECE385-Pacman-FinalProject.git,2018-12-05 05:31:33+00:00,,0,NSLeung/ECE385-Pacman-FinalProject,160466001,SystemVerilog,ECE385-Pacman-FinalProject,47470,0,2018-12-15 02:00:51+00:00,[],
2709,https://github.com/ig007/FPGA-Stepmania.git,2018-09-25 02:43:02+00:00,FPGA four-button DDR game,0,ig007/FPGA-Stepmania,150197790,SystemVerilog,FPGA-Stepmania,13,0,2018-10-08 05:55:59+00:00,[],
2710,https://github.com/ahmad-assaf/cpu1.git,2018-10-03 11:59:58+00:00,hardware,0,ahmad-assaf/cpu1,151405621,SystemVerilog,cpu1,7141,0,2018-10-09 21:14:20+00:00,[],
2711,https://github.com/tomasKromer/RiscV_uniciclo.git,2018-08-23 23:55:38+00:00,,0,tomasKromer/RiscV_uniciclo,145919635,SystemVerilog,RiscV_uniciclo,6,0,2018-08-26 14:31:08+00:00,[],
2712,https://github.com/ciroceissler/tpl_harp.git,2018-08-30 18:26:45+00:00,,0,ciroceissler/tpl_harp,146790253,SystemVerilog,tpl_harp,733,0,2018-09-08 11:15:06+00:00,[],https://api.github.com/licenses/mit
2713,https://github.com/ChrisArreFall/VGA_Controller_FPGA.git,2018-09-30 06:13:41+00:00,Controlador VGA con prueba basica,0,ChrisArreFall/VGA_Controller_FPGA,150936698,SystemVerilog,VGA_Controller_FPGA,16871,0,2018-10-15 02:45:54+00:00,[],
2714,https://github.com/SchuylerQHorky/VerilogI2CMaster.git,2018-10-02 03:44:23+00:00,This project demos a working I2C master state machine written through a behavioral model to run on the Altera Cycle V FPGA.,0,SchuylerQHorky/VerilogI2CMaster,151196655,SystemVerilog,VerilogI2CMaster,479,0,2019-01-11 20:54:02+00:00,[],
2715,https://github.com/rcrs4/Processor.git,2018-10-01 23:01:19+00:00,"A project made for the university, this project is to simulate a multicicle processor",1,rcrs4/Processor,151172041,SystemVerilog,Processor,496,0,2018-12-01 21:35:07+00:00,[],
2716,https://github.com/eniokaljic/DPPSN.git,2019-03-26 17:32:29+00:00,Deeply Programmable Packet-Switching Node,0,eniokaljic/DPPSN,177838066,SystemVerilog,DPPSN,2568,0,2019-06-24 16:11:37+00:00,[],https://api.github.com/licenses/mit
2717,https://github.com/harlanw/fpga-graphics.git,2019-04-02 20:57:52+00:00,,0,harlanw/fpga-graphics,179157560,SystemVerilog,fpga-graphics,63,0,2019-04-02 20:58:50+00:00,[],
2718,https://github.com/rellieberman/bubble-trouble-fpga.git,2019-04-15 17:22:27+00:00,Bubble Trouble for cyclone V fpga,1,rellieberman/bubble-trouble-fpga,181533924,SystemVerilog,bubble-trouble-fpga,1770,0,2019-05-16 11:56:18+00:00,[],
2719,https://github.com/fBacak97/VolfiedFPGA.git,2019-03-02 14:34:15+00:00,An FPGA project using BASYS3 board which simulates the 2-player version of MS-DOS game Volfied on an 8x8 led matrix. Coded with SystemVerilog on Vivado Design Suite.,0,fBacak97/VolfiedFPGA,173458337,SystemVerilog,VolfiedFPGA,7,0,2019-03-02 14:35:14+00:00,[],
2720,https://github.com/sondre99v/DDS2_TermProject.git,2019-02-25 15:23:56+00:00,,0,sondre99v/DDS2_TermProject,172531285,SystemVerilog,DDS2_TermProject,70652,0,2019-04-23 10:08:00+00:00,[],
2721,https://github.com/aherrerac/Proyecto-I-CE4301.git,2019-03-06 13:55:33+00:00,,0,aherrerac/Proyecto-I-CE4301,174154981,SystemVerilog,Proyecto-I-CE4301,60898,0,2020-08-14 23:12:09+00:00,[],
2722,https://github.com/stevefarra/rc4-circuit.git,2019-03-11 02:09:22+00:00,The decryption algorithm for a popular stream cipher implemented on a series of FSMs and datapaths ,0,stevefarra/rc4-circuit,174908793,SystemVerilog,rc4-circuit,25484,0,2019-05-14 19:55:34+00:00,[],
2723,https://github.com/EsraNurDeniz/Elevator-Simulation.git,2019-03-16 21:02:38+00:00,"Elevator project which is a representation of an elevator coded with SystemVerilog, Basys3 is used as an FPGA to Beti Board.",0,EsraNurDeniz/Elevator-Simulation,176024478,SystemVerilog,Elevator-Simulation,1445,0,2019-03-16 21:17:06+00:00,[],
2724,https://github.com/GeorgeOnwubuya/Parking_Lot.git,2019-04-30 04:38:41+00:00,Simple parking lot implementation in SystemVerilog,0,GeorgeOnwubuya/Parking_Lot,184192580,SystemVerilog,Parking_Lot,7,0,2019-05-03 06:41:55+00:00,[],
2725,https://github.com/melt-umn/meta-ocaml-lite.git,2019-04-26 02:04:21+00:00,A Silver implementation of an interpreter for a subset of MetaOCaml,0,melt-umn/meta-ocaml-lite,183539267,SystemVerilog,meta-ocaml-lite,53,0,2021-10-05 03:03:48+00:00,[],https://api.github.com/licenses/lgpl-3.0
2726,https://github.com/brianhuffman/retro-fpga.git,2019-04-26 15:01:03+00:00,Circuit-level descriptions of C64 and other retro computing hardware,1,brianhuffman/retro-fpga,183648226,SystemVerilog,retro-fpga,65,0,2022-08-04 02:32:14+00:00,[],https://api.github.com/licenses/mit
2727,https://github.com/noahsalk/LC-3.git,2019-05-09 04:06:52+00:00,An FPGA implementation of the LC-3 processor laid out in Patt & Patel. Created for UIUC's ECE 385 course.,0,noahsalk/LC-3,185724224,SystemVerilog,LC-3,23,0,2019-05-09 04:09:19+00:00,[],
2728,https://github.com/GeorgeOnwubuya/Conditional_Sum.git,2019-05-03 06:45:16+00:00,Conditional sum using the generate statement (Messy Version),0,GeorgeOnwubuya/Conditional_Sum,184710404,SystemVerilog,Conditional_Sum,5,0,2019-05-03 06:48:09+00:00,[],
2729,https://github.com/weikleda/berkeleyLab06PMOD.git,2019-04-09 22:00:08+00:00,,0,weikleda/berkeleyLab06PMOD,180455667,SystemVerilog,berkeleyLab06PMOD,16,0,2019-04-09 22:04:36+00:00,[],
2730,https://github.com/rishnat/system_verilog.git,2019-04-05 08:16:39+00:00,A repository containing snippets for various System Verilog concepts,0,rishnat/system_verilog,179643249,SystemVerilog,system_verilog,0,0,2019-04-05 08:41:49+00:00,[],
2731,https://github.com/michaelGonzalez1812/PDA.git,2019-04-12 23:37:35+00:00,,0,michaelGonzalez1812/PDA,181097089,SystemVerilog,PDA,636,0,2021-06-10 00:33:11+00:00,[],
2732,https://github.com/prakaashkarthik/riscv-cpu.git,2019-05-12 03:45:17+00:00,CPU based on RISC-V ISA,0,prakaashkarthik/riscv-cpu,186208149,SystemVerilog,riscv-cpu,12,0,2019-05-14 02:16:45+00:00,[],
2733,https://github.com/thalysmg/OAC-LOAC.git,2018-11-20 23:45:21+00:00,Codes from Computer Organization and Architecture,0,thalysmg/OAC-LOAC,158465375,SystemVerilog,OAC-LOAC,367,0,2018-11-29 01:00:43+00:00,[],
2734,https://github.com/farshad112/DFF.git,2018-11-17 08:32:25+00:00,DFF design using verilog. Testbench is designed uisng simple system verilog.,1,farshad112/DFF,157965701,SystemVerilog,DFF,6,0,2018-11-17 08:36:12+00:00,[],https://api.github.com/licenses/mit
2735,https://github.com/CE3201-Taller/FinalProject.git,2018-10-13 20:05:47+00:00,Implementacion de CPU Simple y calculadora usando HDL's y FPGA,0,CE3201-Taller/FinalProject,152909969,SystemVerilog,FinalProject,266,0,2018-10-26 21:05:11+00:00,[],
2736,https://github.com/quackchewy/Register-File.git,2018-10-08 22:58:54+00:00,Simulates an ARM register file with 1 write register and 2 read registers.,0,quackchewy/Register-File,152157319,SystemVerilog,Register-File,11,0,2018-10-11 05:20:48+00:00,[],
2737,https://github.com/jackducham/lab7.git,2018-10-16 15:23:56+00:00,,0,jackducham/lab7,153308587,SystemVerilog,lab7,9,0,2018-10-16 15:48:51+00:00,[],
2738,https://github.com/joshuachao39/CSE141Lab1.git,2018-10-21 05:16:12+00:00,,0,joshuachao39/CSE141Lab1,153975909,SystemVerilog,CSE141Lab1,159,0,2018-12-13 07:17:34+00:00,[],
2739,https://github.com/vyasviral7/Verification-.git,2018-12-02 05:29:44+00:00,,0,vyasviral7/Verification-,160016830,SystemVerilog,Verification-,5,0,2018-12-02 12:59:30+00:00,[],https://api.github.com/licenses/apache-2.0
2740,https://github.com/pbannai/18743Project.git,2018-11-26 22:35:22+00:00,,1,pbannai/18743Project,159242032,SystemVerilog,18743Project,5,0,2018-11-30 00:30:28+00:00,[],
2741,https://github.com/ram748/100daysofcode.git,2019-01-15 00:35:02+00:00,,0,ram748/100daysofcode,165757568,SystemVerilog,100daysofcode,49,0,2019-02-09 14:29:46+00:00,[],
2742,https://github.com/mitshine/UVM-Phases-Example.git,2019-02-11 08:52:04+00:00,UVM Phases Example,0,mitshine/UVM-Phases-Example,170096732,SystemVerilog,UVM-Phases-Example,4,0,2019-02-11 08:52:34+00:00,[],
2743,https://github.com/johnnyzhang123/111.git,2019-02-10 17:37:56+00:00,,0,johnnyzhang123/111,170006040,SystemVerilog,111,56,0,2022-01-23 01:26:33+00:00,[],
2744,https://github.com/neal29da/Image-processing-accelerator-.git,2019-01-21 09:34:06+00:00,,0,neal29da/Image-processing-accelerator-,166786420,SystemVerilog,Image-processing-accelerator-,3657,0,2019-06-03 12:28:02+00:00,[],https://api.github.com/licenses/apache-2.0
2745,https://github.com/robert1636/Asynchronous-FIFO-design.git,2019-02-02 23:46:42+00:00,,0,robert1636/Asynchronous-FIFO-design,168890910,SystemVerilog,Asynchronous-FIFO-design,2,0,2019-02-02 23:49:27+00:00,[],
2746,https://github.com/gotu0000/PDP11Sim.git,2019-01-30 18:15:24+00:00,Implementation of PDP11 ISA using SystemVerilog,0,gotu0000/PDP11Sim,168391376,SystemVerilog,PDP11Sim,81,0,2020-09-25 02:17:00+00:00,[],
2747,https://github.com/muku383/sivetech_training.git,2018-08-27 13:34:41+00:00,,0,muku383/sivetech_training,146302068,SystemVerilog,sivetech_training,22,0,2019-07-11 11:16:54+00:00,[],
2748,https://github.com/jillco/Proyecto1_Verificacion.git,2018-09-26 19:40:29+00:00,Binary TO BCD,0,jillco/Proyecto1_Verificacion,150480866,SystemVerilog,Proyecto1_Verificacion,3,0,2018-09-26 19:46:51+00:00,[],
2749,https://github.com/tharyck/Loac.git,2018-09-14 01:33:55+00:00,,0,tharyck/Loac,148719035,SystemVerilog,Loac,3,0,2018-09-20 10:32:56+00:00,[],
2750,https://github.com/sciencedude/ece411.git,2018-10-29 22:28:52+00:00,,0,sciencedude/ece411,155289816,SystemVerilog,ece411,2911,0,2023-01-28 19:46:41+00:00,[],
2751,https://github.com/DrakeWatson/N64-Controller.git,2019-03-14 21:57:39+00:00,Digital logic used to simulate an N64 controller.,0,DrakeWatson/N64-Controller,175706114,SystemVerilog,N64-Controller,4,0,2019-03-14 22:00:04+00:00,[],
2752,https://github.com/Matthew-Whitlock/CompArch.git,2019-02-23 20:48:31+00:00,,1,Matthew-Whitlock/CompArch,172262406,SystemVerilog,CompArch,1175,0,2019-05-03 22:49:54+00:00,[],
2753,https://github.com/web2019111/ganar-bitcoins-mineria.git,2019-03-04 16:20:56+00:00,ganar bitcoins yn dolares $us,0,web2019111/ganar-bitcoins-mineria,173779717,SystemVerilog,ganar-bitcoins-mineria,36,0,2019-03-04 17:03:35+00:00,[],
2754,https://github.com/Kazutaka333/Divvy_FinalProject.git,2019-03-23 21:26:12+00:00,,1,Kazutaka333/Divvy_FinalProject,177341698,SystemVerilog,Divvy_FinalProject,52,0,2019-03-24 02:14:38+00:00,[],
2755,https://github.com/melt-umn/ableC-lvars.git,2019-02-14 08:18:48+00:00,"Lattice variables, implemented as a language extension to ableC ",0,melt-umn/ableC-lvars,170653908,SystemVerilog,ableC-lvars,70728,0,2019-02-14 11:40:36+00:00,[],https://api.github.com/licenses/lgpl-3.0
2756,https://github.com/vatsalchoksi/apb.git,2019-02-13 21:16:37+00:00,testbench development using UVM,0,vatsalchoksi/apb,170580812,SystemVerilog,apb,5,0,2019-02-13 21:20:13+00:00,[],
2757,https://github.com/jimmygan0829/SLC3-in-SV.git,2019-03-02 10:21:06+00:00,Implemented SLC3.2 in SystemVerilog for experiment 6 of ECE 385 with Jiawen Chen,0,jimmygan0829/SLC3-in-SV,173433482,SystemVerilog,SLC3-in-SV,5064,0,2019-03-02 10:51:13+00:00,[],
2758,https://github.com/draconian-design/global.git,2019-05-05 22:44:54+00:00,A library for UVM providing some global functions. Fork of https://github.com/bphunter1972/hawkins/tree/master/verif/vkits/global,0,draconian-design/global,185090720,SystemVerilog,global,12,0,2019-05-05 22:48:25+00:00,[],
2759,https://github.com/draconian-design/cc-env.git,2019-05-05 19:18:10+00:00,A cookiecutter template to create a UVM environment,0,draconian-design/cc-env,185072518,SystemVerilog,cc-env,21,0,2019-05-05 23:10:08+00:00,[],https://api.github.com/licenses/gpl-3.0
2760,https://github.com/dawoodmuzammil/GameOfNim.git,2019-03-31 00:14:40+00:00,Ancient Game of Nim implemented on FPGA board using System Verilog,0,dawoodmuzammil/GameOfNim,178624689,SystemVerilog,GameOfNim,796,0,2019-03-31 11:03:32+00:00,[],
2761,https://github.com/AlexsandroJ/Projeto_Hardware.git,2019-04-19 12:59:38+00:00,Projeto da Cadeira de Infraestrutura de hardware,0,AlexsandroJ/Projeto_Hardware,182265163,SystemVerilog,Projeto_Hardware,4681,0,2019-05-07 18:09:28+00:00,[],
2762,https://github.com/ashfanvahora/Boolean-Function-using-SystemVerilog.git,2018-09-10 18:39:01+00:00,SystemVerilog program for y = a'b'c' + b'c' + a'c' + a'b' ,0,ashfanvahora/Boolean-Function-using-SystemVerilog,148202066,SystemVerilog,Boolean-Function-using-SystemVerilog,225,0,2018-09-12 02:29:01+00:00,[],
2763,https://github.com/Zeigren/QMSV.git,2018-08-28 16:51:56+00:00,"SublimeText3 bits for Quartus, ModelSim, and VUnit Integration mirror of https://phabricator.kairohm.dev/diffusion/10/",1,Zeigren/QMSV,146478551,SystemVerilog,QMSV,51,0,2020-03-15 18:22:34+00:00,"['sublime-text', 'quartus', 'vunit', 'modelsim', 'systemverilog']",https://api.github.com/licenses/gpl-3.0
2764,https://github.com/Oudman/PR3.git,2018-09-28 13:58:02+00:00,,0,Oudman/PR3,150748582,SystemVerilog,PR3,41860,0,2018-12-07 08:59:09+00:00,[],
2765,https://github.com/sycomix/ARM-Pipelined-CPU.git,2018-12-26 17:04:49+00:00,64-bit ARM Pipelined CPU,0,sycomix/ARM-Pipelined-CPU,163200916,SystemVerilog,ARM-Pipelined-CPU,19,0,2020-04-15 00:28:25+00:00,[],
2766,https://github.com/mfidaali/async_debouncer.git,2018-11-26 22:55:55+00:00,Async Debounce circuit SV file,0,mfidaali/async_debouncer,159243878,SystemVerilog,async_debouncer,4,0,2018-12-05 19:36:43+00:00,[],
2767,https://github.com/architbajpai/Asynch-FIFO.git,2019-01-01 06:36:02+00:00,,0,architbajpai/Asynch-FIFO,163717890,SystemVerilog,Asynch-FIFO,1,0,2019-01-01 06:37:32+00:00,[],
2768,https://github.com/amolaknagi/742_vector.git,2018-11-29 06:20:22+00:00,,0,amolaknagi/742_vector,159617563,SystemVerilog,742_vector,72,0,2018-12-03 22:56:39+00:00,[],
2769,https://github.com/MartinBarker/ECE-FinalDesign.git,2018-11-27 22:03:07+00:00,ECE-FinalDesign,0,MartinBarker/ECE-FinalDesign,159405525,SystemVerilog,ECE-FinalDesign,575,0,2018-12-01 01:27:14+00:00,[],
2770,https://github.com/shrtique/ya_FIFO.git,2019-01-22 07:59:23+00:00,Simple synchronous one-clock FIFO. Test for academic purpose,0,shrtique/ya_FIFO,166952412,SystemVerilog,ya_FIFO,3,0,2019-01-22 07:59:58+00:00,[],
2771,https://github.com/vj-sananda/object-oriented-state-machines.git,2019-01-31 02:16:34+00:00,,0,vj-sananda/object-oriented-state-machines,168447949,SystemVerilog,object-oriented-state-machines,3936,0,2019-01-31 02:20:05+00:00,[],
2772,https://github.com/DA01171997/ps2KeyBScancode.git,2018-10-13 23:55:59+00:00,,0,DA01171997/ps2KeyBScancode,152924285,SystemVerilog,ps2KeyBScancode,3387,0,2018-10-17 02:12:44+00:00,[],
2773,https://github.com/ChrisArreFall/PS-2_Controller.git,2018-10-16 06:04:50+00:00,PS/2 Controller in SystemVerilog,0,ChrisArreFall/PS-2_Controller,153231077,SystemVerilog,PS-2_Controller,7779,0,2019-05-08 22:07:38+00:00,[],
2774,https://github.com/melt-umn/ableC-prolog.git,2018-11-20 02:37:55+00:00,An ableC extension providing Prolog-inspired logic programming constructs.,0,melt-umn/ableC-prolog,158320348,SystemVerilog,ableC-prolog,216,0,2022-01-19 02:24:15+00:00,[],https://api.github.com/licenses/lgpl-3.0
2775,https://github.com/jhflores95/Pong.git,2018-11-03 21:51:01+00:00,Classic Pong game in SystemVerilog for a DE1-SoC. ,0,jhflores95/Pong,156026773,SystemVerilog,Pong,8993,0,2020-04-04 03:24:02+00:00,[],
2776,https://github.com/dgkzoo/HardWare.git,2018-11-04 14:36:19+00:00,,0,dgkzoo/HardWare,156091322,SystemVerilog,HardWare,214,0,2019-02-14 15:50:31+00:00,[],
2777,https://github.com/arnabd88/UART.git,2019-02-08 02:50:57+00:00,UART,0,arnabd88/UART,169676755,SystemVerilog,UART,17635,0,2019-02-08 02:57:20+00:00,[],
2778,https://github.com/jackducham/lab9.git,2018-10-28 19:59:34+00:00,,0,jackducham/lab9,155110125,SystemVerilog,lab9,36,0,2018-11-09 02:37:16+00:00,[],
2779,https://github.com/vj-sananda/sv-uvm.git,2019-01-24 20:34:48+00:00,,0,vj-sananda/sv-uvm,167433583,SystemVerilog,sv-uvm,31,0,2019-01-24 21:00:30+00:00,[],
2780,https://github.com/harrisaz/integrated.git,2019-02-09 23:08:52+00:00,uvm1.2 distribution example,0,harrisaz/integrated,169923530,SystemVerilog,integrated,49,0,2019-02-09 23:17:46+00:00,[],https://api.github.com/licenses/apache-2.0
2781,https://github.com/mitshine/UVM-Basic-Examples.git,2019-02-11 07:18:46+00:00,UVM Basic Examples - Hello World & 3 tests,0,mitshine/UVM-Basic-Examples,170084738,SystemVerilog,UVM-Basic-Examples,10,0,2019-02-11 07:20:55+00:00,[],
2782,https://github.com/sondre99v/TFE4171_Lab7.git,2019-02-11 15:46:46+00:00,Files for Lab 7 of Design of digital systems 2,0,sondre99v/TFE4171_Lab7,170155418,SystemVerilog,TFE4171_Lab7,233,0,2019-02-18 15:47:58+00:00,[],
2783,https://github.com/abhizt93/DVT.git,2018-11-12 05:56:28+00:00,Git Plugin for DVT Eclipse,0,abhizt93/DVT,157163453,SystemVerilog,DVT,0,0,2018-11-12 06:40:24+00:00,[],
2784,https://github.com/lrolomeli/Tarea1_Verificacion.git,2019-02-04 21:55:29+00:00,BCD,0,lrolomeli/Tarea1_Verificacion,169155982,SystemVerilog,Tarea1_Verificacion,4368,0,2019-02-06 03:54:11+00:00,[],
2785,https://github.com/darisoy/FlappyBirds.git,2019-02-05 00:49:17+00:00,Implementation of the Flappy Birds game using Verilog on the DE1_SoC FPGA and a 8x8 LED-display,0,darisoy/FlappyBirds,169172582,SystemVerilog,FlappyBirds,9727,0,2020-03-18 00:00:16+00:00,[],
2786,https://github.com/tec-tdg/Lab3.git,2019-03-13 03:35:06+00:00,,0,tec-tdg/Lab3,175340411,SystemVerilog,Lab3,18,0,2019-03-28 15:19:19+00:00,[],
2787,https://github.com/deslib/uart_reg.git,2019-02-22 13:44:25+00:00,a register file controled by uart. Implement with verilog and systemverilog. ,0,deslib/uart_reg,172073287,SystemVerilog,uart_reg,9,0,2019-02-22 14:03:30+00:00,[],
2788,https://github.com/kobo8924/RISCV_Of_SingleCycleMachine.git,2019-02-25 05:19:48+00:00,,0,kobo8924/RISCV_Of_SingleCycleMachine,172439210,SystemVerilog,RISCV_Of_SingleCycleMachine,8240,0,2019-07-21 00:30:12+00:00,[],
2789,https://github.com/rsurya07/PDP8-with-Floating-Point.git,2019-02-26 20:23:05+00:00,,0,rsurya07/PDP8-with-Floating-Point,172784574,SystemVerilog,PDP8-with-Floating-Point,14,0,2019-02-26 20:26:12+00:00,[],
2790,https://github.com/LazyTigerLi/Undergraduate_Programs.git,2019-03-18 05:05:50+00:00,,0,LazyTigerLi/Undergraduate_Programs,176207897,SystemVerilog,Undergraduate_Programs,43221,0,2019-07-02 18:47:33+00:00,[],
2791,https://github.com/usamasaqib/Obstacle-Detection.git,2019-03-30 12:46:15+00:00,,0,usamasaqib/Obstacle-Detection,178557574,SystemVerilog,Obstacle-Detection,15,0,2019-03-30 12:57:04+00:00,[],
2792,https://github.com/jonathan-kornich/Oscilloscope.git,2019-03-31 20:40:29+00:00,Sophomore FPGA Project,0,jonathan-kornich/Oscilloscope,178739821,SystemVerilog,Oscilloscope,38,0,2023-05-26 07:20:03+00:00,[],
2793,https://github.com/Ting0325/riscv-bnn.git,2019-04-05 06:50:37+00:00,,0,Ting0325/riscv-bnn,179632514,SystemVerilog,riscv-bnn,2,0,2019-04-05 07:02:07+00:00,[],
2794,https://github.com/SamihaHassan/CPEN_311_LAB_4.git,2019-03-12 03:55:12+00:00,Get lab for working :( ,0,SamihaHassan/CPEN_311_LAB_4,175131851,SystemVerilog,CPEN_311_LAB_4,6,0,2019-03-12 04:00:58+00:00,[],
2795,https://github.com/VishnuSubramaniam/priorityarbiter.git,2019-04-23 10:46:51+00:00,,0,VishnuSubramaniam/priorityarbiter,182994326,SystemVerilog,priorityarbiter,0,0,2019-04-23 10:50:14+00:00,[],
2796,https://github.com/GeorgeOnwubuya/Edge_Detect.git,2019-05-02 03:16:45+00:00,3 debouncing methods,0,GeorgeOnwubuya/Edge_Detect,184514692,SystemVerilog,Edge_Detect,14,0,2019-05-03 06:40:55+00:00,[],
2797,https://github.com/234pramod/ASIC.git,2019-05-04 06:50:12+00:00,ASIC practise,0,234pramod/ASIC,184861927,SystemVerilog,ASIC,3,0,2019-05-05 11:31:12+00:00,[],
2798,https://github.com/evgeniyBolnov/rounder.git,2019-05-13 17:38:36+00:00,,1,evgeniyBolnov/rounder,186467503,SystemVerilog,rounder,5,0,2019-05-13 21:42:59+00:00,[],
2799,https://github.com/smootz6/LEG_CPU.git,2019-05-15 19:25:10+00:00,,0,smootz6/LEG_CPU,186889764,SystemVerilog,LEG_CPU,30,0,2019-05-15 19:50:06+00:00,[],
2800,https://github.com/sarahbrande/SystemVerilog.git,2019-03-14 03:19:47+00:00,SystemVerilog,0,sarahbrande/SystemVerilog,175540671,SystemVerilog,SystemVerilog,12,0,2019-03-18 05:36:58+00:00,[],
2801,https://github.com/rmr1012/MIPS-single-cycle.git,2018-11-19 01:20:26+00:00,Single Cycle Implementation of MIPS,0,rmr1012/MIPS-single-cycle,158144456,SystemVerilog,MIPS-single-cycle,381,0,2018-12-05 19:02:08+00:00,[],https://api.github.com/licenses/apache-2.0
2802,https://github.com/NP-techcode/medical_device_thesis.git,2019-01-24 01:15:44+00:00,Development of Healthy & Diseased Stomach Model in-Silico to analyze Slow-wave Activities for Gastro-Intestinal research with GUI Application for signal processing on these slow-wave activities in smart-closed loop system,0,NP-techcode/medical_device_thesis,167279609,SystemVerilog,medical_device_thesis,6830,0,2019-01-24 04:11:51+00:00,[],
2803,https://github.com/isisgo/UVM-study.git,2018-10-30 23:55:00+00:00,,1,isisgo/UVM-study,155471951,SystemVerilog,UVM-study,6,0,2018-10-31 01:14:53+00:00,[],
2804,https://github.com/TMuthuganesan/myBus.git,2019-02-09 01:55:23+00:00,A sample System Verilog test environment for a simple bus with UVM methodology,0,TMuthuganesan/myBus,169822213,SystemVerilog,myBus,15,0,2020-09-01 15:23:21+00:00,[],
2805,https://github.com/chh1199/Nexys4-ddr.git,2019-01-25 03:58:02+00:00,This is repository for nexys4-ddr project,0,chh1199/Nexys4-ddr,167482130,SystemVerilog,Nexys4-ddr,15410,0,2019-01-25 06:51:33+00:00,[],
2806,https://github.com/grantneuman/Tug_of_War_Computer_Player.git,2018-12-28 19:41:36+00:00,,0,grantneuman/Tug_of_War_Computer_Player,163443900,SystemVerilog,Tug_of_War_Computer_Player,13,0,2018-12-28 19:43:34+00:00,[],
2807,https://github.com/ppipee/LabDigital.git,2019-01-10 09:56:21+00:00,make with system verilog & logisim,0,ppipee/LabDigital,165034875,SystemVerilog,LabDigital,3644,0,2019-01-10 10:06:06+00:00,[],
2808,https://github.com/myosotix/lowrisc-chip.git,2018-11-27 04:27:57+00:00,,0,myosotix/lowrisc-chip,159276101,SystemVerilog,lowrisc-chip,3497,0,2018-11-27 04:29:19+00:00,[],
2809,https://github.com/Lard4/WordPanel.git,2018-12-06 04:42:05+00:00,Controls an 8x24 LED matrix using an FPGA (built for Digilent Basys3),0,Lard4/WordPanel,160619678,SystemVerilog,WordPanel,39,0,2018-12-06 17:33:30+00:00,[],
2810,https://github.com/aljereno/LegLite.git,2018-12-19 08:59:52+00:00,This contains the systemverilog logic for both Single and Piped versions of a familiar architecture. ,0,aljereno/LegLite,162410477,SystemVerilog,LegLite,7,0,2021-06-15 05:56:13+00:00,[],
2811,https://github.com/RobinSalgado/DyVerificacion.git,2019-02-17 22:37:51+00:00,Homeworks and practices of the subject,0,RobinSalgado/DyVerificacion,171180585,SystemVerilog,DyVerificacion,3304,0,2019-06-12 08:36:46+00:00,[],
2812,https://github.com/sharonfeldman/sv-assertions-match-operators.git,2018-08-30 08:22:21+00:00,,0,sharonfeldman/sv-assertions-match-operators,146718929,SystemVerilog,sv-assertions-match-operators,2,0,2018-08-30 08:22:44+00:00,[],
2813,https://github.com/r55483543/HW.git,2018-09-03 16:16:46+00:00,,0,r55483543/HW,147228174,SystemVerilog,HW,579592,0,2019-01-03 15:30:01+00:00,[],
2814,https://github.com/guilherme27/ProcSC.git,2018-09-04 18:14:09+00:00,Controle de versão do projeto de pesquisa para produção de um processador single clock,0,guilherme27/ProcSC,147388528,SystemVerilog,ProcSC,15837,0,2018-11-06 18:40:21+00:00,[],
2815,https://github.com/Joreeser/Reaction_timer.git,2018-09-05 19:32:57+00:00,Reaction timer lab,0,Joreeser/Reaction_timer,147569620,SystemVerilog,Reaction_timer,4900,0,2018-09-19 19:41:29+00:00,[],
2816,https://github.com/santiabbate/riscV.git,2018-09-08 18:02:49+00:00,,0,santiabbate/riscV,147957676,SystemVerilog,riscV,118,0,2018-09-08 18:05:41+00:00,[],
2817,https://github.com/FranciscoKnebel/a-z80.git,2018-09-11 18:53:27+00:00,,0,FranciscoKnebel/a-z80,148364782,SystemVerilog,a-z80,12833,0,2019-12-17 20:37:01+00:00,[],https://api.github.com/licenses/gpl-2.0
2818,https://github.com/jackducham/lab6.git,2018-10-05 01:17:34+00:00,,0,jackducham/lab6,151656027,SystemVerilog,lab6,88,0,2018-10-19 20:07:55+00:00,[],
2819,https://github.com/So-fia/sesion_7.git,2018-10-02 03:59:37+00:00,,0,So-fia/sesion_7,151197885,SystemVerilog,sesion_7,18,0,2018-10-02 04:02:47+00:00,[],
2820,https://github.com/emresevilgen/CS223_Labs.git,2019-03-07 18:35:10+00:00,The Lab Codes of The CS 223 - Digital Design,0,emresevilgen/CS223_Labs,174399866,SystemVerilog,CS223_Labs,3406,0,2019-06-16 12:06:25+00:00,[],
2821,https://github.com/rag1404/odd_even-program.git,2019-04-08 02:01:57+00:00,Odd_even randomization system verilog,0,rag1404/odd_even-program,180050881,SystemVerilog,odd_even-program,2,0,2019-04-09 15:23:16+00:00,[],
2822,https://github.com/dinuly23/SysVerilog.git,2019-03-26 01:38:59+00:00,,0,dinuly23/SysVerilog,177693701,SystemVerilog,SysVerilog,1,0,2019-03-26 01:57:20+00:00,[],
2823,https://github.com/shrtique/UART.git,2019-04-04 06:24:08+00:00,"Simple UART core, just for training",0,shrtique/UART,179434725,SystemVerilog,UART,8,0,2019-04-05 11:14:34+00:00,[],
2824,https://github.com/jle-santos/blinky.git,2019-04-06 18:09:46+00:00,Make the LED blink on the fpga,0,jle-santos/blinky,179869402,SystemVerilog,blinky,1,0,2019-04-06 18:11:16+00:00,[],
2825,https://github.com/twynne20/VerilogOleVerilogTeachMeSomeVerilog.git,2019-03-01 09:33:27+00:00,Let's get groovy and do some Verilog.,0,twynne20/VerilogOleVerilogTeachMeSomeVerilog,173274528,SystemVerilog,VerilogOleVerilogTeachMeSomeVerilog,3,0,2019-03-01 09:33:53+00:00,[],
2826,https://github.com/helloworld1983/ee272-project.git,2019-03-06 21:10:56+00:00,Graph Neural Network Accelerator,0,helloworld1983/ee272-project,174221789,SystemVerilog,ee272-project,497,0,2021-06-24 07:31:36+00:00,[],https://api.github.com/licenses/apache-2.0
2827,https://github.com/usman-kakakhel/DigitalDesignCS223.git,2019-03-15 21:14:44+00:00,All SystemVerilog Labs as a part of CS 223 in Bilkent University.,0,usman-kakakhel/DigitalDesignCS223,175892086,SystemVerilog,DigitalDesignCS223,23,0,2019-03-15 21:17:04+00:00,[],
2828,https://github.com/rafasutil/cpu-hardware.git,2019-04-08 10:28:10+00:00,,0,rafasutil/cpu-hardware,180125521,SystemVerilog,cpu-hardware,1286,0,2022-06-08 04:13:35+00:00,[],
2829,https://github.com/Jelledb03/Pong.git,2019-05-12 14:52:17+00:00,,0,Jelledb03/Pong,186267855,SystemVerilog,Pong,6996,0,2019-05-22 13:56:23+00:00,[],
2830,https://github.com/jpbotello15/Breakout.git,2019-05-14 02:38:42+00:00,Breakout implemented in System Verilog,0,jpbotello15/Breakout,186531161,SystemVerilog,Breakout,13,0,2022-02-02 12:25:45+00:00,[],
2831,https://github.com/nimamg/Perceptron-node.git,2019-05-05 20:49:20+00:00,A perceptron node implementation using verilog,0,nimamg/Perceptron-node,185080936,SystemVerilog,Perceptron-node,6,0,2019-05-09 23:34:46+00:00,[],
2832,https://github.com/tec-tdg/Lab5.git,2019-04-11 20:48:40+00:00,"Archivos del Laboratorio 5, ARCADE VGA",0,tec-tdg/Lab5,180875572,SystemVerilog,Lab5,1,0,2023-01-28 18:26:46+00:00,[],
2833,https://github.com/BrowenCode/MIPS.git,2019-04-14 22:36:26+00:00,Fully functional MIPS processor with custom ALU. Built onto Artix FPGA,0,BrowenCode/MIPS,181377052,SystemVerilog,MIPS,3399,0,2019-04-14 22:55:41+00:00,[],
2834,https://github.com/floodzjh/AFO.git,2019-04-24 01:42:26+00:00,,0,floodzjh/AFO,183124905,SystemVerilog,AFO,1393,0,2019-04-26 06:58:25+00:00,[],https://api.github.com/licenses/bsd-3-clause
2835,https://github.com/BillNace/18341_P1_Warmup.git,2018-08-29 03:59:31+00:00,Starter code for 18-341's Project 1: Warmup,1,BillNace/18341_P1_Warmup,146542788,SystemVerilog,18341_P1_Warmup,2330,0,2022-08-31 00:34:22+00:00,[],
2836,https://github.com/may441/LED-Matrix-XLR8-Block.git,2018-10-15 02:29:46+00:00,XLR8 hardware accelerator and support code for controlling an LED matrix,0,may441/LED-Matrix-XLR8-Block,153042093,SystemVerilog,LED-Matrix-XLR8-Block,2865,0,2018-10-15 03:45:34+00:00,[],https://api.github.com/licenses/mit
2837,https://github.com/VireshsinghR/simpleadder.git,2018-10-16 12:31:15+00:00,UVM- simpleadder,0,VireshsinghR/simpleadder,153282051,SystemVerilog,simpleadder,15,0,2018-10-16 12:38:12+00:00,[],
2838,https://github.com/TallerDigitales/Lab-3.git,2018-08-24 14:06:25+00:00,,0,TallerDigitales/Lab-3,145999190,SystemVerilog,Lab-3,12,0,2018-08-30 17:34:12+00:00,[],
2839,https://github.com/sharonfeldman/sv-assertions-consecutive-repetitions-operator.git,2018-08-30 07:11:49+00:00,SV ASSERTION  consecutive repetitions example,0,sharonfeldman/sv-assertions-consecutive-repetitions-operator,146710601,SystemVerilog,sv-assertions-consecutive-repetitions-operator,2,0,2018-08-30 07:16:54+00:00,[],
2840,https://github.com/fbgtoke/PA-Project.git,2018-09-30 08:27:36+00:00,,0,fbgtoke/PA-Project,150947735,SystemVerilog,PA-Project,24,0,2018-09-30 18:09:38+00:00,[],https://api.github.com/licenses/gpl-3.0
2841,https://github.com/shinjitumala/Kise-Research-Centre-Research-Project.git,2018-10-29 08:34:31+00:00,,0,shinjitumala/Kise-Research-Centre-Research-Project,155177897,SystemVerilog,Kise-Research-Centre-Research-Project,5009,0,2018-11-13 04:49:16+00:00,[],
2842,https://github.com/AndresRQ27/Taller-Digitales.git,2018-09-28 17:56:49+00:00,Git con todos los proyectos desarrollados en Taller de Diseño Digital,0,AndresRQ27/Taller-Digitales,150776579,SystemVerilog,Taller-Digitales,44095,0,2020-10-23 00:03:27+00:00,[],
2843,https://github.com/KeimaFool/ProjectNibblerHDL.git,2018-11-12 20:26:59+00:00,Digital,0,KeimaFool/ProjectNibblerHDL,157272262,SystemVerilog,ProjectNibblerHDL,64,0,2018-11-17 02:49:17+00:00,[],
2844,https://github.com/shrtique/sv_CoG.git,2018-12-23 08:06:44+00:00,Module with AXI-Stream interface. Estimating center of energy of laser beam on image using center of gravity algorithm.,0,shrtique/sv_CoG,162873276,SystemVerilog,sv_CoG,26,0,2019-04-09 12:31:31+00:00,[],
2845,https://github.com/SomeNameDee/FPGA-Tetris.git,2019-01-15 02:25:45+00:00,A joystick-controlled Tetris game designed for a Zybo FPGA.,0,SomeNameDee/FPGA-Tetris,165770379,SystemVerilog,FPGA-Tetris,113,0,2019-08-04 21:51:57+00:00,[],
2846,https://github.com/DrFoz/ece481_project1.git,2018-10-18 14:35:29+00:00,,0,DrFoz/ece481_project1,153638758,SystemVerilog,ece481_project1,34,0,2018-10-19 05:55:47+00:00,[],
2847,https://github.com/enchantessss/project.git,2018-10-31 14:12:18+00:00,,0,enchantessss/project,155568627,SystemVerilog,project,16,0,2019-01-27 16:07:29+00:00,[],
2848,https://github.com/amanchadha/systemverilog-examples.git,2018-12-17 06:30:47+00:00,Random SV examples,0,amanchadha/systemverilog-examples,162085085,SystemVerilog,systemverilog-examples,2,0,2018-12-17 06:35:23+00:00,[],
2849,https://github.com/arboled2/ece385projects.git,2019-02-12 00:31:06+00:00,Folder for ECE385 projects shared between Christian and Berk,0,arboled2/ece385projects,170225156,SystemVerilog,ece385projects,34,0,2019-02-22 07:23:25+00:00,[],
2850,https://github.com/Jax8964/ece385.git,2019-02-22 21:03:52+00:00,,0,Jax8964/ece385,172134311,SystemVerilog,ece385,275,0,2019-05-02 18:26:10+00:00,[],
2851,https://github.com/cdrann/system-verilog-practice.git,2019-02-16 03:35:56+00:00,,0,cdrann/system-verilog-practice,170958768,SystemVerilog,system-verilog-practice,867,0,2020-11-11 12:19:02+00:00,[],
2852,https://github.com/stanleyzhaoh2o/lab6.git,2019-02-24 01:39:25+00:00,ECE385,0,stanleyzhaoh2o/lab6,172283903,SystemVerilog,lab6,52,0,2019-03-26 07:34:05+00:00,[],
2853,https://github.com/gregory353a/clockAlteraCycloneVgxStarterKit.git,2018-12-05 21:13:00+00:00,,0,gregory353a/clockAlteraCycloneVgxStarterKit,160579261,SystemVerilog,clockAlteraCycloneVgxStarterKit,51,0,2018-12-15 16:13:28+00:00,['verilog'],
2854,https://github.com/jaurelio1/Projeto-de-Sistema-Digitais.git,2018-12-04 18:30:53+00:00,Repositório destinado aos projetos da cadeira de projeto de sistemas digitais.,0,jaurelio1/Projeto-de-Sistema-Digitais,160401738,SystemVerilog,Projeto-de-Sistema-Digitais,2,0,2018-12-04 18:37:14+00:00,[],
2855,https://github.com/armguidon/Stage-RISC-V.git,2019-02-19 08:02:15+00:00,contentions du RISC V,0,armguidon/Stage-RISC-V,171431512,SystemVerilog,Stage-RISC-V,47,0,2019-02-25 09:35:43+00:00,[],
2856,https://github.com/tanbour/SV-for-Design.git,2019-04-22 09:32:19+00:00,Systemverilog Design Packages,0,tanbour/SV-for-Design,182728303,SystemVerilog,SV-for-Design,50,0,2023-11-11 13:19:15+00:00,[],
2857,https://github.com/bricksaver/ECE-111.git,2019-04-04 19:22:33+00:00,"written in SystemVerilog, includes Final Report",0,bricksaver/ECE-111,179562810,SystemVerilog,ECE-111,1732,0,2019-04-04 19:24:29+00:00,[],
2858,https://github.com/kleinai/MPU9250.git,2019-04-01 03:00:51+00:00,MPU9250 AXI component,0,kleinai/MPU9250,178775547,SystemVerilog,MPU9250,28,0,2019-07-22 00:41:26+00:00,[],https://api.github.com/licenses/bsd-3-clause
2859,https://github.com/teambb-skyfi/NetworkingLayer.git,2019-03-22 20:15:28+00:00,,0,teambb-skyfi/NetworkingLayer,177203627,SystemVerilog,NetworkingLayer,152,0,2019-04-22 14:37:59+00:00,[],
2860,https://github.com/jbiams77/ee371_lab1.git,2019-04-03 01:51:39+00:00,This is my revision control repository for EE 371 (Digital Circuits),0,jbiams77/ee371_lab1,179189667,SystemVerilog,ee371_lab1,4,0,2019-04-05 18:48:07+00:00,[],
2861,https://github.com/qm3/Flappy.git,2019-04-11 20:53:40+00:00,Flappy Bird on Verilog,0,qm3/Flappy,180876287,SystemVerilog,Flappy,6,0,2019-04-11 20:56:01+00:00,[],
2862,https://github.com/pevkirill/uart_core.git,2019-04-11 17:51:21+00:00,,0,pevkirill/uart_core,180848229,SystemVerilog,uart_core,34,0,2019-09-30 08:02:53+00:00,[],
2863,https://github.com/ustc-zhu/ComputerArchitectureLab.git,2019-04-11 02:09:26+00:00,,1,ustc-zhu/ComputerArchitectureLab,180696558,SystemVerilog,ComputerArchitectureLab,23558,0,2022-09-28 15:34:29+00:00,[],
2864,https://github.com/qinguangjun/lowrisc.git,2019-05-05 16:30:36+00:00,,0,qinguangjun/lowrisc,185056079,SystemVerilog,lowrisc,3638,0,2019-05-05 16:31:37+00:00,[],
2865,https://github.com/JoseRIvera07/VGA-Controller.git,2019-04-28 15:54:31+00:00,,0,JoseRIvera07/VGA-Controller,183928819,SystemVerilog,VGA-Controller,24002,0,2021-05-24 14:28:16+00:00,[],
2866,https://github.com/tchad/mnist_NN.git,2019-05-13 07:23:59+00:00,,0,tchad/mnist_NN,186366931,SystemVerilog,mnist_NN,50804,0,2019-05-13 07:26:17+00:00,[],
2867,https://github.com/Sukeerti2310/Neuron_Models.git,2019-05-09 15:50:00+00:00,,1,Sukeerti2310/Neuron_Models,185829028,SystemVerilog,Neuron_Models,17,0,2019-05-10 02:07:27+00:00,[],
2868,https://github.com/FranciscaVasconcelos/FPGA-Qubit-Package.git,2018-11-05 18:44:15+00:00,6.111 Final Project Fall 2018 - Francisca Vasconcelos & Megan Yamoah,0,FranciscaVasconcelos/FPGA-Qubit-Package,156265692,SystemVerilog,FPGA-Qubit-Package,932,0,2018-12-14 17:33:11+00:00,[],
2869,https://github.com/soleiyu/VerilogHDL.git,2018-10-13 10:08:03+00:00,,0,soleiyu/VerilogHDL,152859312,SystemVerilog,VerilogHDL,302,0,2020-12-22 05:48:24+00:00,[],
2870,https://github.com/blurhater/perceptron_russian_letters.git,2018-11-12 21:13:56+00:00,,0,blurhater/perceptron_russian_letters,157277648,SystemVerilog,perceptron_russian_letters,91,0,2018-11-12 21:15:26+00:00,[],
2871,https://github.com/daniel-li95/ELEC402.git,2018-09-18 21:54:48+00:00,Project work for Elec402,0,daniel-li95/ELEC402,149356720,SystemVerilog,ELEC402,8390,0,2018-11-28 19:57:07+00:00,[],
2872,https://github.com/jenxiao9/trading-suitcase.git,2018-09-22 01:31:38+00:00,Repository for our Fall 2018 ECE Capstone. ,0,jenxiao9/trading-suitcase,149835389,SystemVerilog,trading-suitcase,201111,0,2018-12-11 23:45:31+00:00,[],
2873,https://github.com/jerry990/WSAT.git,2018-12-11 02:25:23+00:00,,0,jerry990/WSAT,161265141,SystemVerilog,WSAT,33,0,2018-12-11 02:29:27+00:00,[],
2874,https://github.com/DCLab2018team03/lab1.git,2018-11-14 05:00:00+00:00,,0,DCLab2018team03/lab1,157493375,SystemVerilog,lab1,71,0,2018-11-14 10:10:07+00:00,[],
2875,https://github.com/this-marwan/VNLP.git,2018-12-20 13:03:36+00:00,A Vector Norm List Product Coprocessor,1,this-marwan/VNLP,162580513,SystemVerilog,VNLP,741,0,2021-01-15 00:06:45+00:00,[],
2876,https://github.com/rm1096/Thunderbird.git,2018-09-15 18:28:45+00:00,,0,rm1096/Thunderbird,148929011,SystemVerilog,Thunderbird,672,0,2018-09-15 23:11:29+00:00,[],
2877,https://github.com/arnfol/wfunc.git,2018-09-27 17:30:47+00:00,Window function,0,arnfol/wfunc,150624157,SystemVerilog,wfunc,13641,0,2018-10-08 20:02:33+00:00,[],
2878,https://github.com/cherryman/riscv.git,2019-01-08 23:18:25+00:00,RISC-V implementation for FPGA in Verilog,0,cherryman/riscv,164749350,SystemVerilog,riscv,39,0,2021-02-06 18:31:35+00:00,[],
2879,https://github.com/SherryWu0710/ECE385FALL18.git,2019-01-16 17:12:17+00:00,Lab 4-9 + Final Project (Pac-Man),0,SherryWu0710/ECE385FALL18,166079578,SystemVerilog,ECE385FALL18,760,0,2019-02-13 03:25:33+00:00,[],
2880,https://github.com/helloworld1983/Computer-Design-Prototyping.git,2019-01-16 17:07:12+00:00,Computer Prototyping project where I designed and implemented a dual-core 5-stage pipelined processor with an L-1 cache hierarchy and an MSI cache coherence protocol which ran on the MIPS ISA.,0,helloworld1983/Computer-Design-Prototyping,166078776,SystemVerilog,Computer-Design-Prototyping,105264,0,2021-01-14 20:21:06+00:00,[],
2881,https://github.com/jiayuewang/Computer-System-Organization.git,2019-01-18 04:33:53+00:00,,0,jiayuewang/Computer-System-Organization,166344202,SystemVerilog,Computer-System-Organization,3390,0,2019-01-18 04:40:10+00:00,[],
2882,https://github.com/Daniel-B-Wright/iVerilog-Calculator.git,2018-12-27 17:55:13+00:00,,0,Daniel-B-Wright/iVerilog-Calculator,163322555,SystemVerilog,iVerilog-Calculator,622,0,2018-12-27 18:03:56+00:00,[],
2883,https://github.com/siliconbootcamp/sv-uvm-bootcamp.git,2018-12-23 20:11:54+00:00,,0,siliconbootcamp/sv-uvm-bootcamp,162920875,SystemVerilog,sv-uvm-bootcamp,5,0,2020-09-03 09:20:03+00:00,[],
2884,https://github.com/wsquinn/multicycleProcessor.git,2018-12-31 23:56:17+00:00,"Fully implemented multicycle processor in systemverilog. The testbench I used is included, but not the testvectors.",0,wsquinn/multicycleProcessor,163703787,SystemVerilog,multicycleProcessor,5,0,2018-12-31 23:57:08+00:00,[],
2885,https://github.com/youngbin9303/cpu-pipeline.git,2019-01-02 03:16:17+00:00,,0,youngbin9303/cpu-pipeline,163788883,SystemVerilog,cpu-pipeline,41,0,2019-01-02 03:52:11+00:00,[],
2886,https://github.com/Chepelash/fpga_lab_A6.git,2019-03-22 03:49:23+00:00,,0,Chepelash/fpga_lab_A6,177067616,SystemVerilog,fpga_lab_A6,5,0,2019-03-24 08:45:43+00:00,[],
2887,https://github.com/shrtique/sv_remapper_12k.git,2019-04-15 07:31:17+00:00,"Custom algorithm of pixel remapping for Python12k (4 channels mode). Remapping algorithm from Datashit doesn't work, so we investigated and developed ours.",0,shrtique/sv_remapper_12k,181435302,SystemVerilog,sv_remapper_12k,4325,0,2019-04-15 07:32:46+00:00,[],
2888,https://github.com/Chepelash/fpga_lab_B1.git,2019-04-14 17:08:40+00:00,,0,Chepelash/fpga_lab_B1,181342295,SystemVerilog,fpga_lab_B1,30,0,2019-04-30 14:18:17+00:00,[],
2889,https://github.com/Abrahamlga/MIPS_Multi_Cycle_Processor.git,2019-04-12 01:53:25+00:00,MIPS_Multi_Cycle_Processor Practica1,0,Abrahamlga/MIPS_Multi_Cycle_Processor,180909916,SystemVerilog,MIPS_Multi_Cycle_Processor,2228,0,2019-04-12 01:57:48+00:00,[],
2890,https://github.com/herculesra/OAC.git,2019-04-08 20:29:56+00:00,Repositório para a disciplina de Organização e Arquitetura de Computadores,2,herculesra/OAC,180227858,SystemVerilog,OAC,3405,0,2021-10-27 02:36:59+00:00,[],
2891,https://github.com/AnthonyFaubert/DE1_SDRAM.git,2019-02-26 02:27:48+00:00,UW EE 371 DE1_SoC SDRAM interface for use with camera / VGA / final project,0,AnthonyFaubert/DE1_SDRAM,172622259,SystemVerilog,DE1_SDRAM,3026,0,2019-05-19 20:39:33+00:00,[],
2892,https://github.com/teckming93/TeckMing.git,2019-03-14 03:42:49+00:00,,1,teckming93/TeckMing,175543569,SystemVerilog,TeckMing,13,0,2019-03-31 16:41:10+00:00,[],
2893,https://github.com/xandjiji/charmap-mips-arq1.git,2019-01-26 19:25:13+00:00,A charmap for text output implemented in a MIPS architecture.,0,xandjiji/charmap-mips-arq1,167729512,SystemVerilog,charmap-mips-arq1,29,0,2019-02-11 16:25:47+00:00,[],
2894,https://github.com/egurcay/BasySOS.git,2019-02-24 20:02:25+00:00,Morse Code to Text on VGA Display ,1,egurcay/BasySOS,172383831,SystemVerilog,BasySOS,2901,0,2019-02-25 07:08:18+00:00,[],
2895,https://github.com/jimmygan0829/16-bit-adder.git,2019-03-02 10:19:23+00:00,16 bit adder implemented in System Verilog for ECE 385 experiment 4 with Jiawen Chen,0,jimmygan0829/16-bit-adder,173433320,SystemVerilog,16-bit-adder,6,0,2019-03-02 10:51:03+00:00,[],
2896,https://github.com/jimmygan0829/385-lab-5.git,2019-03-02 10:03:41+00:00,Implemented 8 Bit Multiplier in SystemVerilog with Jiawen Chen,0,jimmygan0829/385-lab-5,173431907,SystemVerilog,385-lab-5,3,0,2019-03-02 10:50:45+00:00,[],
2897,https://github.com/vj-sananda/system-verilog.git,2019-01-24 20:35:22+00:00,,0,vj-sananda/system-verilog,167433657,SystemVerilog,system-verilog,3,0,2019-01-24 21:28:51+00:00,[],
2898,https://github.com/MichaelWes/ece342-lab7-competition.git,2019-04-04 19:01:43+00:00,,0,MichaelWes/ece342-lab7-competition,179559259,SystemVerilog,ece342-lab7-competition,27,0,2020-04-24 15:58:35+00:00,[],
2899,https://github.com/ishan9855/RR_Arbiter.git,2019-03-27 18:22:04+00:00,,0,ishan9855/RR_Arbiter,178051680,SystemVerilog,RR_Arbiter,12,0,2019-03-28 22:04:46+00:00,[],
2900,https://github.com/amirhbv/UT-CA-S98-CA2.git,2019-03-31 19:47:47+00:00,UT Computer Architecture Spring 98 CA2,0,amirhbv/UT-CA-S98-CA2,178734607,SystemVerilog,UT-CA-S98-CA2,9,0,2021-08-30 16:15:11+00:00,[],
2901,https://github.com/clmcsn/Multiply-Division-Unit.git,2019-04-05 08:54:03+00:00,Multiply-Division-Unit of ALU for RISC-V M-extention 32bit,0,clmcsn/Multiply-Division-Unit,179649567,SystemVerilog,Multiply-Division-Unit,84260,0,2020-04-04 16:02:22+00:00,[],
2902,https://github.com/tec-tdg/Lab5.1.old.git,2019-04-26 14:36:47+00:00,,1,tec-tdg/Lab5.1.old,183644415,SystemVerilog,Lab5.1.old,7202,0,2019-04-30 21:47:13+00:00,[],https://api.github.com/licenses/mit
2903,https://github.com/renliguo/Nexys4AudioRecorder.git,2019-04-20 09:17:52+00:00,"Written for the Digilent Nexys4's FPGA, the Artix7 XC7A100TCSG324-1. Records multiple tracks of audio into block memory to be played back through the 3.5mm audio jack.",0,renliguo/Nexys4AudioRecorder,182385490,SystemVerilog,Nexys4AudioRecorder,4,0,2021-09-05 17:40:27+00:00,[],
2904,https://github.com/LordBees/Y2-DigitalDesign.git,2019-05-15 14:05:02+00:00,Coursework for Digital Design (CPU and GCD),0,LordBees/Y2-DigitalDesign,186839066,SystemVerilog,Y2-DigitalDesign,9,0,2019-10-13 13:51:49+00:00,[],
2905,https://github.com/coderky/SystemVerilog_chp11.git,2018-10-20 09:54:06+00:00,"the project forchpter 11 in book<SystemVerilog for Verification>, it include different branch.",0,coderky/SystemVerilog_chp11,153891857,SystemVerilog,SystemVerilog_chp11,18,0,2021-09-03 04:24:15+00:00,[],https://api.github.com/licenses/mit
2906,https://github.com/jnlenney/18743-approx-computing.git,2018-10-25 01:27:42+00:00,,0,jnlenney/18743-approx-computing,154591851,SystemVerilog,18743-approx-computing,7071,0,2018-12-15 05:29:31+00:00,[],
2907,https://github.com/mitshine/UVM-Bassi-Sequence-Example.git,2019-02-11 08:52:59+00:00,UVM Bassi Sequence Example,0,mitshine/UVM-Bassi-Sequence-Example,170096860,SystemVerilog,UVM-Bassi-Sequence-Example,3,0,2020-03-14 13:06:02+00:00,[],
2908,https://github.com/JordyLimaEng/CECII.git,2019-02-16 06:14:56+00:00,Concepção Estruturada de Circuitos Integrados,0,JordyLimaEng/CECII,170969959,SystemVerilog,CECII,37,0,2019-04-03 01:41:41+00:00,[],
2909,https://github.com/brunorodd/RC4-Decryptor.git,2019-03-08 02:15:08+00:00,Lab 4,0,brunorodd/RC4-Decryptor,174453294,SystemVerilog,RC4-Decryptor,9217,0,2020-11-12 23:24:47+00:00,[],
2910,https://github.com/ks-yuzu/verilog-testlib.git,2019-01-10 09:00:06+00:00,ハードウェア (Verilog HDL 等) のテストのためのヘッダ,0,ks-yuzu/verilog-testlib,165026143,SystemVerilog,verilog-testlib,1,0,2019-01-10 09:00:51+00:00,[],
2911,https://github.com/tomasz-lewicki/180D.git,2019-01-21 22:08:00+00:00,prep notes for CMPE180D digital design test,0,tomasz-lewicki/180D,166887486,SystemVerilog,180D,2053,0,2019-05-20 23:45:40+00:00,[],
2912,https://github.com/shrtique/sv_gradient.git,2019-01-28 12:46:47+00:00,,0,shrtique/sv_gradient,167961087,SystemVerilog,sv_gradient,14359,0,2019-01-31 12:56:13+00:00,[],
2913,https://github.com/HeFengMarc/Digital_Circuits_and_Systems.git,2018-12-12 07:23:47+00:00,UW Summer 2017/University of Washington Seattle,1,HeFengMarc/Digital_Circuits_and_Systems,161448828,SystemVerilog,Digital_Circuits_and_Systems,189,0,2020-06-04 08:53:53+00:00,[],
2914,https://github.com/grantneuman/Runway_Lights.git,2018-12-28 19:33:24+00:00,,0,grantneuman/Runway_Lights,163443348,SystemVerilog,Runway_Lights,6,0,2018-12-29 00:48:12+00:00,[],
2915,https://github.com/architbajpai/DLX-ISA.git,2018-12-29 05:31:25+00:00,,0,architbajpai/DLX-ISA,163479110,SystemVerilog,DLX-ISA,9,0,2018-12-29 09:47:53+00:00,[],
2916,https://github.com/Chepelash/fpga_lab_A5.git,2019-03-24 18:45:39+00:00,,0,Chepelash/fpga_lab_A5,177454935,SystemVerilog,fpga_lab_A5,5,0,2019-03-24 19:29:24+00:00,[],
2917,https://github.com/telski96/PCIS-DR.git,2018-12-09 18:12:45+00:00,HOMEWORKS,0,telski96/PCIS-DR,161067634,SystemVerilog,PCIS-DR,2,0,2018-12-09 18:40:43+00:00,[],
2918,https://github.com/CwbhX/Digital-Circuits-II-RGB-Lab-3.git,2019-02-27 20:36:00+00:00,Create a scrolling RGB sign on an LED matrix with a serving counter,0,CwbhX/Digital-Circuits-II-RGB-Lab-3,172986282,SystemVerilog,Digital-Circuits-II-RGB-Lab-3,42,0,2019-03-14 14:03:02+00:00,[],
2919,https://github.com/djgalati/Systemverilog.git,2019-02-28 22:46:50+00:00,A grouping of Systemverilog files compiled from EE310 at NAU,0,djgalati/Systemverilog,173199075,SystemVerilog,Systemverilog,11,0,2020-09-03 03:17:03+00:00,[],
2920,https://github.com/Gegedaye/i2c_slave.git,2019-02-27 13:17:40+00:00,i2c slave model ,0,Gegedaye/i2c_slave,172918998,SystemVerilog,i2c_slave,11,0,2019-02-27 13:19:15+00:00,[],
2921,https://github.com/xor26/sorting_algs.git,2019-03-18 13:00:48+00:00,,0,xor26/sorting_algs,176286748,SystemVerilog,sorting_algs,2,0,2019-03-18 13:01:04+00:00,[],
2922,https://github.com/vatsal184/SHA-160-Verification.git,2018-09-13 03:22:55+00:00,,0,vatsal184/SHA-160-Verification,148576204,SystemVerilog,SHA-160-Verification,11,0,2019-03-24 18:27:05+00:00,[],https://api.github.com/licenses/mit
2923,https://github.com/tinvo015/Elevator-Design.git,2018-09-26 16:33:13+00:00,"Final project for EE 271, designing an elevator on a DE1-SoC board.",0,tinvo015/Elevator-Design,150457413,SystemVerilog,Elevator-Design,8369,0,2018-09-26 17:08:36+00:00,[],
2924,https://github.com/msconiershas/quadcopter.git,2018-09-24 00:33:55+00:00,,0,msconiershas/quadcopter,150038036,SystemVerilog,quadcopter,5907,0,2018-09-24 00:40:51+00:00,[],
2925,https://github.com/s-chilka/Architecture-Logic-Design.git,2018-09-19 02:20:22+00:00,,0,s-chilka/Architecture-Logic-Design,149379716,SystemVerilog,Architecture-Logic-Design,4,0,2021-11-10 19:57:36+00:00,[],
2926,https://github.com/TallerDigitales/ARMv4.git,2018-10-10 14:18:19+00:00,Repo del proy final,1,TallerDigitales/ARMv4,152435707,SystemVerilog,ARMv4,38,0,2018-11-14 05:28:23+00:00,[],
2927,https://github.com/jushio/verilog_sample.git,2018-10-16 02:02:48+00:00,,0,jushio/verilog_sample,153207743,SystemVerilog,verilog_sample,0,0,2018-10-16 02:06:35+00:00,[],
2928,https://github.com/ytang07/comp541.git,2018-10-05 22:57:12+00:00,,0,ytang07/comp541,151786304,SystemVerilog,comp541,88041,0,2018-10-05 23:12:44+00:00,[],
2929,https://github.com/arlekin147/Course-game-.git,2018-10-12 11:01:51+00:00,,0,arlekin147/Course-game-,152738054,SystemVerilog,Course-game-,23823,0,2018-11-23 19:24:45+00:00,[],
2930,https://github.com/igormacedo/smpl-processor.git,2018-09-10 12:06:09+00:00,Design of the processor described in the book Digital Design and Implementation with Field Programmable Devices by Navabi,1,igormacedo/smpl-processor,148149084,SystemVerilog,smpl-processor,5,0,2018-09-12 16:14:14+00:00,[],https://api.github.com/licenses/mit
2931,https://github.com/vss-2/InfraHardProj.git,2018-10-21 21:59:21+00:00,Repositório de arquivos variados utilizados no projeto da disciplina de Infraestrutura de Hardware (IF-674),0,vss-2/InfraHardProj,154055997,SystemVerilog,InfraHardProj,43,0,2018-10-27 08:31:20+00:00,[],
2932,https://github.com/cpu-experiment-2018-2/core.git,2018-09-25 06:33:23+00:00,,0,cpu-experiment-2018-2/core,150218340,SystemVerilog,core,13223,0,2019-02-22 08:08:31+00:00,[],
2933,https://github.com/ssolano15/Proyecto1_Diseno-de-Alto-Nivel-de-Sistemas-Electronicos.git,2019-03-26 16:49:12+00:00,,0,ssolano15/Proyecto1_Diseno-de-Alto-Nivel-de-Sistemas-Electronicos,177831314,SystemVerilog,Proyecto1_Diseno-de-Alto-Nivel-de-Sistemas-Electronicos,2,0,2019-03-26 22:56:28+00:00,[],
2934,https://github.com/amirhbv/UT-CA-S98-CA3.git,2019-05-13 09:59:27+00:00,UT Computer Architecture Spring 98 CA3,0,amirhbv/UT-CA-S98-CA3,186393731,SystemVerilog,UT-CA-S98-CA3,12,0,2021-08-30 16:15:16+00:00,[],
2935,https://github.com/amanda-matthes/simple_superscalar_out-of-order_pipeline.git,2019-05-03 12:14:40+00:00,A superscalar and out-of-order instruction pipeline loosely based on the RISC-V ISA implemented in SystemVerilog.,0,amanda-matthes/simple_superscalar_out-of-order_pipeline,184749795,SystemVerilog,simple_superscalar_out-of-order_pipeline,3006,0,2023-02-06 12:00:33+00:00,[],
2936,https://github.com/wongtaylor/comp300-MIPS-pipelined-processor.git,2019-04-09 22:26:55+00:00,,0,wongtaylor/comp300-MIPS-pipelined-processor,180458694,SystemVerilog,comp300-MIPS-pipelined-processor,186,0,2019-04-09 22:30:19+00:00,[],
2937,https://github.com/Gvascons/INFRA-HARDWARE.git,2019-04-04 14:32:44+00:00,,0,Gvascons/INFRA-HARDWARE,179514784,SystemVerilog,INFRA-HARDWARE,12078,0,2019-05-03 18:07:06+00:00,[],
2938,https://github.com/mjabs000/UVM-codes-.git,2019-05-17 01:38:02+00:00,Examples self developed ,0,mjabs000/UVM-codes-,187126745,SystemVerilog,UVM-codes-,1421,0,2019-05-17 02:05:34+00:00,[],
2939,https://github.com/cardyok/Pipelined-RV32I-Processor.git,2018-12-19 07:42:16+00:00,,0,cardyok/Pipelined-RV32I-Processor,162400793,SystemVerilog,Pipelined-RV32I-Processor,27,0,2023-11-14 08:40:34+00:00,[],
2940,https://github.com/Nimfador/copy_mem_packet.git,2019-05-09 16:20:58+00:00,That repository contains some experiments with FPGA,0,Nimfador/copy_mem_packet,185833763,SystemVerilog,copy_mem_packet,43532,0,2022-02-21 08:26:07+00:00,[],https://api.github.com/licenses/mit
2941,https://github.com/ramonn76/lab6_sobel.git,2019-05-05 19:32:58+00:00,HardCloud sobel example for infieri lab6.,0,ramonn76/lab6_sobel,185073936,SystemVerilog,lab6_sobel,8,0,2019-05-05 19:44:09+00:00,[],
2942,https://github.com/myosotix/scr1.git,2018-11-27 04:16:43+00:00,,0,myosotix/scr1,159275182,SystemVerilog,scr1,1727,0,2018-11-27 04:17:06+00:00,[],
2943,https://github.com/0429charlie/CS450---A4.git,2018-08-23 20:08:33+00:00,An copy of CS450 A4,0,0429charlie/CS450---A4,145901873,SystemVerilog,CS450---A4,1264,0,2018-08-23 20:09:35+00:00,[],
2944,https://github.com/wilcroft/eth-pr.git,2018-09-10 15:10:21+00:00,,0,wilcroft/eth-pr,148174366,SystemVerilog,eth-pr,178386,0,2019-08-01 19:40:51+00:00,[],
2945,https://github.com/yanghengmonkey/uvm_practice.git,2018-09-10 02:00:51+00:00,,0,yanghengmonkey/uvm_practice,148085309,SystemVerilog,uvm_practice,19,0,2018-09-19 17:24:40+00:00,[],
2946,https://github.com/HendrickZhou/fpga_taxi.git,2018-09-19 02:47:36+00:00,,0,HendrickZhou/fpga_taxi,149382742,SystemVerilog,fpga_taxi,6407,0,2023-01-28 17:00:32+00:00,"['verilog', 'fpga']",
2947,https://github.com/anjimetidora/system_verilog.git,2018-09-25 14:23:23+00:00,this repo contains system_verilog labs ,0,anjimetidora/system_verilog,150278091,SystemVerilog,system_verilog,7,0,2018-09-25 14:23:32+00:00,[],
2948,https://github.com/anjimetidora/uvm.git,2018-09-25 15:46:31+00:00,this repo contains uvm files,0,anjimetidora/uvm,150290620,SystemVerilog,uvm,44,0,2018-11-13 05:55:03+00:00,[],
2949,https://github.com/Dreamy-Jy/Digital-Logic-Implementations.git,2018-11-01 19:29:35+00:00,Implementations of circuits  and devices I'll learning about in my digital logic's fundamentals.,0,Dreamy-Jy/Digital-Logic-Implementations,155765499,SystemVerilog,Digital-Logic-Implementations,3,0,2018-11-01 19:33:21+00:00,[],
2950,https://github.com/leanhdung22/Verification_training.git,2018-10-30 08:04:25+00:00,,0,leanhdung22/Verification_training,155346920,SystemVerilog,Verification_training,15975,0,2020-05-02 23:11:56+00:00,[],
2951,https://github.com/Prekshita/SystemVerilog-Code.git,2018-10-27 03:31:36+00:00,SystemVerilog Practice Code ,0,Prekshita/SystemVerilog-Code,154922231,SystemVerilog,SystemVerilog-Code,34,0,2018-11-13 08:23:54+00:00,[],
2952,https://github.com/IbrahimTarabay/system_verilog.git,2018-08-22 06:23:33+00:00,,0,IbrahimTarabay/system_verilog,145665413,SystemVerilog,system_verilog,22,0,2018-08-22 06:25:50+00:00,[],
2953,https://github.com/lramirez5/SegwayProject.git,2018-12-05 16:06:42+00:00,UW Madison ECE 551 Fall 2018 Final Project - Segway,1,lramirez5/SegwayProject,160544104,SystemVerilog,SegwayProject,20689,0,2018-12-12 16:11:39+00:00,[],
2954,https://github.com/pulp-platform/logint_dc_fifo_xbar.git,2018-11-23 14:01:57+00:00,Dual Clock Fifo for XBAR interface,0,pulp-platform/logint_dc_fifo_xbar,158840039,SystemVerilog,logint_dc_fifo_xbar,6,0,2018-11-23 14:04:24+00:00,[],
2955,https://github.com/kuniyasu/riscv32ima.git,2018-11-15 11:45:51+00:00,,0,kuniyasu/riscv32ima,157702365,SystemVerilog,riscv32ima,20,0,2018-11-20 14:36:52+00:00,[],https://api.github.com/licenses/mit
2956,https://github.com/youhanamikhaiel/Pipeline-Processor-using-Systemverilog.git,2018-12-13 12:36:29+00:00,,0,youhanamikhaiel/Pipeline-Processor-using-Systemverilog,161637016,SystemVerilog,Pipeline-Processor-using-Systemverilog,9,0,2018-12-13 12:41:33+00:00,[],
2957,https://github.com/allavi/paramerized_functions.git,2019-01-18 18:36:28+00:00,System Verilog synthesized parameterized functions.,0,allavi/paramerized_functions,166455449,SystemVerilog,paramerized_functions,8,0,2019-03-08 15:55:38+00:00,[],
2958,https://github.com/MikhailKardash/SystemVerilog_Code.git,2019-03-26 08:11:13+00:00,,0,MikhailKardash/SystemVerilog_Code,177742379,SystemVerilog,SystemVerilog_Code,7,0,2019-04-02 06:08:55+00:00,[],
2959,https://github.com/Yuki03759/EECS112L-Lab4.git,2019-03-15 09:15:35+00:00,,0,Yuki03759/EECS112L-Lab4,175787154,SystemVerilog,EECS112L-Lab4,11848,0,2019-06-15 22:43:52+00:00,[],
2960,https://github.com/Chepelash/fpga_lab_A1.git,2019-03-28 18:40:46+00:00,,0,Chepelash/fpga_lab_A1,178262807,SystemVerilog,fpga_lab_A1,7,0,2019-03-30 10:45:19+00:00,[],
2961,https://github.com/xinyuli672/MIPS-processor-design.git,2019-02-13 20:22:38+00:00,processor design ,0,xinyuli672/MIPS-processor-design,170573961,SystemVerilog,MIPS-processor-design,92,0,2020-04-10 20:41:52+00:00,[],
2962,https://github.com/ronniebra/ALD4.git,2018-12-18 09:05:51+00:00,ALD 4 - SIN Wave Generator,0,ronniebra/ALD4,162260356,SystemVerilog,ALD4,1015,0,2018-12-18 09:06:59+00:00,[],
2963,https://github.com/JonathanHonrada/OTTER_MCU.git,2019-01-23 21:08:57+00:00,,0,JonathanHonrada/OTTER_MCU,167254502,SystemVerilog,OTTER_MCU,282,0,2019-02-22 06:48:58+00:00,[],
2964,https://github.com/lxing1988/pulp_riscv_dbg.git,2019-01-18 05:52:27+00:00,riscv compliant debug interface  for PULP,0,lxing1988/pulp_riscv_dbg,166351552,SystemVerilog,pulp_riscv_dbg,254,0,2020-02-25 06:58:56+00:00,[],
2965,https://github.com/nkevy/eecs112.git,2019-02-20 21:09:52+00:00,,0,nkevy/eecs112,171749698,SystemVerilog,eecs112,3400,0,2019-03-16 22:15:20+00:00,[],
2966,https://github.com/ajani2001/verilogLabs.git,2019-03-02 03:47:07+00:00,,0,ajani2001/verilogLabs,173400044,SystemVerilog,verilogLabs,59,0,2019-05-28 07:49:02+00:00,[],
2967,https://github.com/RyanWongistaken/FPGA-Toaster.git,2019-03-02 01:58:56+00:00,,0,RyanWongistaken/FPGA-Toaster,173391774,SystemVerilog,FPGA-Toaster,21,0,2020-01-13 23:59:32+00:00,[],
2968,https://github.com/amepila/DV_git.git,2019-03-11 00:13:05+00:00,,0,amepila/DV_git,174897114,SystemVerilog,DV_git,94104,0,2019-10-02 16:25:57+00:00,[],
2969,https://github.com/Chepelash/fpga_lab_A4.git,2019-04-02 18:56:05+00:00,,0,Chepelash/fpga_lab_A4,179140177,SystemVerilog,fpga_lab_A4,9,0,2019-04-03 11:05:32+00:00,[],
2970,https://github.com/HannesK1973/kebaiectestproject.git,2019-04-12 10:27:24+00:00,Test Project für Keba Iec Editor,0,HannesK1973/kebaiectestproject,180985987,SystemVerilog,kebaiectestproject,24,0,2019-05-06 16:42:40+00:00,[],
2971,https://github.com/teambb-skyfi/ApplicationLayer.git,2019-04-16 15:03:06+00:00,,0,teambb-skyfi/ApplicationLayer,181712655,SystemVerilog,ApplicationLayer,25,0,2019-05-04 22:26:46+00:00,[],
2972,https://github.com/mpatel17/ECE385FinalProject.git,2019-04-10 02:11:19+00:00,,0,mpatel17/ECE385FinalProject,180483335,SystemVerilog,ECE385FinalProject,133,0,2019-05-02 19:21:22+00:00,[],
2973,https://github.com/CE3201-Taller/project-ii.git,2018-09-21 03:42:32+00:00,,0,CE3201-Taller/project-ii,149706180,SystemVerilog,project-ii,48370,0,2018-09-29 16:16:13+00:00,[],
2974,https://github.com/noahsalk/RockBand.git,2019-04-21 05:13:30+00:00,"RockBand, the rhythm game, implemented on the DE2-115 FPGA development board in System Verilog.",0,noahsalk/RockBand,182492612,SystemVerilog,RockBand,3832,0,2019-05-09 03:46:50+00:00,[],
2975,https://github.com/jisegura/SpacePong.git,2018-11-21 21:33:03+00:00,,0,jisegura/SpacePong,158608687,SystemVerilog,SpacePong,65,0,2018-11-21 21:35:26+00:00,[],
2976,https://github.com/alonoc/Proy3VerifFuncional.git,2018-12-01 20:43:20+00:00,Proyecto 3 del curso de verificacion funcional.,0,alonoc/Proy3VerifFuncional,159985511,SystemVerilog,Proy3VerifFuncional,27,0,2018-12-06 23:33:14+00:00,[],
2977,https://github.com/Lui-Calvin/CS151VerilogProject.git,2018-11-30 02:15:17+00:00,,0,Lui-Calvin/CS151VerilogProject,159755585,SystemVerilog,CS151VerilogProject,7,0,2018-11-30 02:21:06+00:00,[],
2978,https://github.com/BrandonZahn/FPGADualCoreCPU.git,2018-12-05 04:07:18+00:00,Major project for the course ELEC4700. A dual core CPU written in SystemVerilog with a write through level 1 cache. ,0,BrandonZahn/FPGADualCoreCPU,160459034,SystemVerilog,FPGADualCoreCPU,21,0,2018-12-05 04:14:06+00:00,[],
2979,https://github.com/joselcuevam/verilog.git,2018-11-19 23:53:49+00:00,tracking scripts about verilog compilation/simulation ,0,joselcuevam/verilog,158305286,SystemVerilog,verilog,101,0,2018-12-02 21:57:35+00:00,[],
2980,https://github.com/KyleJosling/FPGA_modules.git,2018-12-07 01:40:46+00:00,Various SystemVerilog modules. ,0,KyleJosling/FPGA_modules,160755214,SystemVerilog,FPGA_modules,10,0,2018-12-07 22:02:52+00:00,[],
2981,https://github.com/QCheng5453/Async_Tree_NoC.git,2018-10-26 03:09:28+00:00,Asynchronized tree NoC with FEC,0,QCheng5453/Async_Tree_NoC,154770130,SystemVerilog,Async_Tree_NoC,6,0,2018-10-26 03:12:11+00:00,[],
2982,https://github.com/JoseIuri/Median_Filter.git,2018-11-07 16:41:26+00:00,This implements a simple median filter on hardware.,0,JoseIuri/Median_Filter,156577647,SystemVerilog,Median_Filter,4,0,2019-08-27 16:59:39+00:00,"['hardware-description-language', 'arithmetic']",https://api.github.com/licenses/mit
2983,https://github.com/yuandrew8557/Lab1.git,2018-10-20 01:56:56+00:00,,0,yuandrew8557/Lab1,153860288,SystemVerilog,Lab1,10,0,2018-10-21 04:56:20+00:00,[],
2984,https://github.com/jfzazo/axis2disk.git,2018-12-27 09:18:00+00:00,Simple module that allows the hardware designer to dump the valid content of an AXI-Stream interface to a disk,0,jfzazo/axis2disk,163273744,SystemVerilog,axis2disk,2,0,2018-12-27 09:33:07+00:00,[],https://api.github.com/licenses/bsd-3-clause
2985,https://github.com/BalajSaleem/Evacuation-Elevator.git,2018-12-24 23:08:08+00:00,A program designed to simulate a buildinig evacuation on Basys3 and BetiBoard,0,BalajSaleem/Evacuation-Elevator,163028528,SystemVerilog,Evacuation-Elevator,19,0,2018-12-24 23:09:24+00:00,[],
2986,https://github.com/upadhk/EE-271-Lab-1.git,2018-12-19 01:00:22+00:00,,0,upadhk/EE-271-Lab-1,162363398,SystemVerilog,EE-271-Lab-1,6,0,2018-12-20 00:52:28+00:00,[],
2987,https://github.com/upadhk/EE-271-Lab2.git,2018-12-19 01:09:26+00:00,,0,upadhk/EE-271-Lab2,162364109,SystemVerilog,EE-271-Lab2,2,0,2018-12-20 00:59:16+00:00,[],
2988,https://github.com/lec9243/ableC-sed.git,2018-12-16 03:30:49+00:00,,0,lec9243/ableC-sed,161964490,SystemVerilog,ableC-sed,30,0,2018-12-17 00:56:54+00:00,[],https://api.github.com/licenses/lgpl-3.0
2989,https://github.com/upadhk/EE-271-Lab8.git,2018-12-19 23:59:00+00:00,,0,upadhk/EE-271-Lab8,162503728,SystemVerilog,EE-271-Lab8,13,0,2018-12-20 02:14:33+00:00,[],
2990,https://github.com/algoldst/Battleship.git,2018-11-22 11:14:11+00:00,Final project files for Cal Poly SLO CPE 133 Dr. Benson,0,algoldst/Battleship,158687690,SystemVerilog,Battleship,3677,0,2018-12-09 20:27:09+00:00,[],
2991,https://github.com/sina-sa/Digital-Design.git,2018-12-02 12:12:04+00:00,,0,sina-sa/Digital-Design,160043641,SystemVerilog,Digital-Design,7,0,2018-12-02 12:22:25+00:00,[],
2992,https://github.com/jkaugust/Sevensegment.git,2018-08-29 20:17:05+00:00,Design and Verification of Seven Segment Display using SystemVerilog,1,jkaugust/Sevensegment,146653810,SystemVerilog,Sevensegment,74,0,2018-09-29 01:39:44+00:00,[],
2993,https://github.com/dhairyaagrawal/pipeline.git,2018-09-19 15:14:26+00:00,Computer Prototyping using SystemVerilog,0,dhairyaagrawal/pipeline,149470277,SystemVerilog,pipeline,5269,0,2019-08-14 18:32:04+00:00,[],
2994,https://github.com/neoH/upi.git,2018-09-14 09:44:36+00:00,the repository for UPI(Unified Protocol Interface),0,neoH/upi,148768787,SystemVerilog,upi,69,0,2018-09-21 07:47:36+00:00,[],
2995,https://github.com/sheyslong/LOAC.git,2018-09-25 03:21:30+00:00,,0,sheyslong/LOAC,150201807,SystemVerilog,LOAC,4,0,2018-09-25 03:35:18+00:00,[],
2996,https://github.com/tinvo015/Tug-Of-War-Computer-Player.git,2018-10-02 16:16:40+00:00,Creates a tug of war game on DE1-SoC board with a single player. Second player will be the computer.,0,tinvo015/Tug-Of-War-Computer-Player,151285144,SystemVerilog,Tug-Of-War-Computer-Player,414,0,2018-12-19 04:51:14+00:00,[],
2997,https://github.com/vbutzke/ComAssincFSM.git,2018-09-04 03:45:51+00:00,Comunicação Assíncrona e FSM,0,vbutzke/ComAssincFSM,147285044,SystemVerilog,ComAssincFSM,2,0,2018-09-09 23:36:37+00:00,[],
2998,https://github.com/DDinata/141L-.git,2019-03-16 00:36:46+00:00,,0,DDinata/141L-,175908563,SystemVerilog,141L-,1123,0,2019-03-22 17:30:46+00:00,[],
2999,https://github.com/Wyk951117/Advanced-MC.git,2019-03-01 20:59:54+00:00,Store code and material for ECE 5760 Advanced MC,0,Wyk951117/Advanced-MC,173367373,SystemVerilog,Advanced-MC,997,0,2019-03-07 18:47:12+00:00,[],
3000,https://github.com/emresevilgen/CS223_Project.git,2019-03-07 18:54:18+00:00,Smart Evacuation Elevator - The Project of The CS 223 - Digital Design,0,emresevilgen/CS223_Project,174402483,SystemVerilog,CS223_Project,3509,0,2019-06-16 12:05:38+00:00,[],
3001,https://github.com/MichaelWes/ece342-lab7.git,2019-03-09 20:33:51+00:00,,0,MichaelWes/ece342-lab7,174743189,SystemVerilog,ece342-lab7,120,0,2020-04-24 15:59:19+00:00,[],
3002,https://github.com/jackwma/Embedded-Systems.git,2019-02-08 08:19:56+00:00,Verilog/C,0,jackwma/Embedded-Systems,169703878,SystemVerilog,Embedded-Systems,11,0,2019-03-01 22:47:25+00:00,[],
3003,https://github.com/BerZerKku/VERILOG_BSK_v3.git,2019-01-17 09:01:35+00:00,,0,BerZerKku/VERILOG_BSK_v3,166194154,SystemVerilog,VERILOG_BSK_v3,236,0,2019-01-18 11:43:57+00:00,[],
3004,https://github.com/wswslzp/SAD_disparity.git,2019-01-11 08:14:08+00:00,A toy model for learning SystemVerilog,0,wswslzp/SAD_disparity,165205439,SystemVerilog,SAD_disparity,7,0,2023-01-28 01:35:23+00:00,[],
3005,https://github.com/sara-weber/ECE437.git,2019-01-17 21:05:09+00:00,,0,sara-weber/ECE437,166296690,SystemVerilog,ECE437,52,0,2019-02-05 19:11:22+00:00,[],
3006,https://github.com/ooorin/Mips-Single-Cycle-CPU.git,2019-03-06 07:53:00+00:00,"course project(Introduction to Computer System, Spring 2018)",0,ooorin/Mips-Single-Cycle-CPU,174098175,SystemVerilog,Mips-Single-Cycle-CPU,8,0,2019-03-06 16:03:05+00:00,[],
3007,https://github.com/rsurya07/Bus-based-CPU-Memory-system.git,2019-02-26 20:45:14+00:00,,0,rsurya07/Bus-based-CPU-Memory-system,172787738,SystemVerilog,Bus-based-CPU-Memory-system,18,0,2019-03-15 05:37:26+00:00,[],
3008,https://github.com/hyunsuchae/RISC-V_SERV.git,2019-04-12 21:16:01+00:00,Verifying RISC-V core SERV,0,hyunsuchae/RISC-V_SERV,181084511,SystemVerilog,RISC-V_SERV,26,0,2019-05-15 04:44:33+00:00,[],
3009,https://github.com/pbannai/18847Project.git,2019-03-31 19:09:33+00:00,,0,pbannai/18847Project,178730801,SystemVerilog,18847Project,3757,0,2019-05-09 23:05:46+00:00,[],
3010,https://github.com/mauriciomc/GIT_MULTIPLIER.git,2019-04-17 16:23:58+00:00,vedic multipliers,0,mauriciomc/GIT_MULTIPLIER,181928537,SystemVerilog,GIT_MULTIPLIER,1038,0,2019-04-19 14:45:52+00:00,[],
3011,https://github.com/dudasenna/infrahardfinal.git,2019-04-30 23:25:01+00:00,,0,dudasenna/infrahardfinal,184344696,SystemVerilog,infrahardfinal,19,0,2019-04-30 23:28:08+00:00,[],
3012,https://github.com/MatanShohat/ORAM.git,2019-05-07 07:38:34+00:00,,0,MatanShohat/ORAM,185347884,SystemVerilog,ORAM,59,0,2019-07-15 08:43:24+00:00,[],
3013,https://github.com/k3vn19/OKX_ComputerArchitecture.git,2019-05-13 17:46:30+00:00,Spring 2019 Computer Architecture Project,0,k3vn19/OKX_ComputerArchitecture,186468649,SystemVerilog,OKX_ComputerArchitecture,848,0,2019-08-12 22:09:48+00:00,[],
3014,https://github.com/savagewil/NeuronVerilog.git,2019-05-12 01:27:35+00:00,Its a Neuron Written in System Verilog,0,savagewil/NeuronVerilog,186198075,SystemVerilog,NeuronVerilog,60,0,2019-05-15 19:27:31+00:00,[],
3015,https://github.com/tec-tdg/proyecto_final.git,2019-05-15 16:21:30+00:00,,0,tec-tdg/proyecto_final,186863336,SystemVerilog,proyecto_final,278,0,2019-06-10 21:53:48+00:00,[],
3016,https://github.com/vkrishn2/EECS112L_RISCV_Processor.git,2019-02-08 02:46:29+00:00,Lab3 for EECS112L,0,vkrishn2/EECS112L_RISCV_Processor,169676382,SystemVerilog,EECS112L_RISCV_Processor,11974,0,2019-05-19 17:49:41+00:00,[],
3017,https://github.com/cheimu/Introduction-to-Digital-Circuit-and-Systems.git,2019-01-29 19:38:30+00:00,,0,cheimu/Introduction-to-Digital-Circuit-and-Systems,168216167,SystemVerilog,Introduction-to-Digital-Circuit-and-Systems,17338,0,2019-01-30 04:27:54+00:00,[],
3018,https://github.com/algoldst/CPE233_Final.git,2019-03-09 00:59:49+00:00,Final Project for CPE 233: Music Game.,0,algoldst/CPE233_Final,174631999,SystemVerilog,CPE233_Final,329,0,2019-03-15 05:47:02+00:00,[],
3019,https://github.com/pulp-platform/udma_adc_rx.git,2019-02-28 12:10:21+00:00,Configuration and handshake management module for the udma for asynchronous data producers,1,pulp-platform/udma_adc_rx,173105642,SystemVerilog,udma_adc_rx,10,0,2019-03-20 16:32:57+00:00,[],
3020,https://github.com/jagan-hazard/System_Verilog_Examples.git,2019-03-05 07:28:56+00:00,,0,jagan-hazard/System_Verilog_Examples,173896858,SystemVerilog,System_Verilog_Examples,5,0,2019-03-07 06:36:24+00:00,[],
3021,https://github.com/devangKhamar/SytemVerilog_Examples.git,2019-01-25 16:57:21+00:00,"The Best way to learn is to implement. Hence, this repo will feature SystemVerilog designs and test benches aimed at excercising different features of SystemVerilog",0,devangKhamar/SytemVerilog_Examples,167581945,SystemVerilog,SytemVerilog_Examples,1,0,2019-01-29 14:09:44+00:00,[],
3022,https://github.com/alfredolimams/Verilog.git,2019-01-23 22:46:14+00:00,,0,alfredolimams/Verilog,167265932,SystemVerilog,Verilog,6,0,2019-01-23 23:05:05+00:00,[],
3023,https://github.com/Darky777/help_utility.git,2018-12-19 12:13:06+00:00,Utilities that I must use every day,0,Darky777/help_utility,162432749,SystemVerilog,help_utility,24,0,2020-04-03 09:36:56+00:00,[],
3024,https://github.com/pajakprzemyslaw/ps2_to_vga.git,2019-01-10 21:27:13+00:00,,0,pajakprzemyslaw/ps2_to_vga,165133497,SystemVerilog,ps2_to_vga,1803,0,2019-01-10 22:16:19+00:00,[],
3025,https://github.com/fjasic/uvm.git,2019-03-17 01:45:11+00:00,,0,fjasic/uvm,176044097,SystemVerilog,uvm,18188,0,2019-04-16 15:13:47+00:00,[],
3026,https://github.com/ruthienguyen/Pipelined-RISC-V-Processor.git,2019-03-16 23:35:44+00:00,,0,ruthienguyen/Pipelined-RISC-V-Processor,176036078,SystemVerilog,Pipelined-RISC-V-Processor,1550,0,2019-03-17 00:12:54+00:00,[],
3027,https://github.com/Chepelash/fpga_lab_A3.git,2019-03-27 09:57:56+00:00,,0,Chepelash/fpga_lab_A3,177966183,SystemVerilog,fpga_lab_A3,10,0,2019-03-27 20:04:15+00:00,[],
3028,https://github.com/runsler/sudoku.git,2019-02-11 07:02:49+00:00,sudoku solver implement in SystemVerilog,0,runsler/sudoku,170082876,SystemVerilog,sudoku,4,0,2019-02-12 10:11:34+00:00,[],
3029,https://github.com/mattcuento/RAT-Projects.git,2019-02-15 18:38:16+00:00,RAT projects using System Verilog and Assembly code in CPE233,0,mattcuento/RAT-Projects,170911422,SystemVerilog,RAT-Projects,833,0,2019-07-12 22:11:29+00:00,[],
3030,https://github.com/grantneuman/Advanced_Department_Store_Checkout.git,2018-12-28 19:29:24+00:00,,0,grantneuman/Advanced_Department_Store_Checkout,163443082,SystemVerilog,Advanced_Department_Store_Checkout,3,0,2018-12-29 00:47:57+00:00,[],
3031,https://github.com/grantneuman/Tug_of_War.git,2018-12-28 19:38:30+00:00,,0,grantneuman/Tug_of_War,163443701,SystemVerilog,Tug_of_War,9,0,2018-12-28 19:40:22+00:00,[],
3032,https://github.com/Ema0898/Taller_Diseno_DIgital.git,2019-02-21 23:36:12+00:00,,0,Ema0898/Taller_Diseno_DIgital,171961930,SystemVerilog,Taller_Diseno_DIgital,98456,0,2019-06-07 09:38:42+00:00,[],
3033,https://github.com/BalajSaleem/Traffic-Light-System.git,2019-03-06 16:55:15+00:00,A SystemVerilog Implementation of Traffic Light control Syste,0,BalajSaleem/Traffic-Light-System,174185053,SystemVerilog,Traffic-Light-System,6,0,2019-03-06 17:06:08+00:00,[],
3034,https://github.com/ZhilanZhou/FGPAprogramming.git,2018-08-28 03:37:10+00:00,,0,ZhilanZhou/FGPAprogramming,146387806,SystemVerilog,FGPAprogramming,7182,0,2018-08-28 03:45:12+00:00,[],
3035,https://github.com/leajalil/RISC-V_uniciclo.git,2018-08-24 03:54:29+00:00,,0,leajalil/RISC-V_uniciclo,145940061,SystemVerilog,RISC-V_uniciclo,4,0,2023-01-18 14:50:16+00:00,[],
3036,https://github.com/tscr00/mips.git,2018-08-26 01:30:18+00:00,single-cycle MIPS implementation in SystemVerilog,0,tscr00/mips,146142058,SystemVerilog,mips,4,0,2018-10-02 15:12:57+00:00,[],
3037,https://github.com/ghammes-ainstein/fpga.git,2018-09-10 01:12:06+00:00,FPGA Examples,0,ghammes-ainstein/fpga,148081102,SystemVerilog,fpga,4,0,2018-09-10 01:24:19+00:00,[],
3038,https://github.com/austinkett/ECE-337-3DES.git,2018-09-11 13:38:41+00:00,3DES Core Part of the Project,0,austinkett/ECE-337-3DES,148323249,SystemVerilog,ECE-337-3DES,9,0,2018-09-11 13:38:47+00:00,[],
3039,https://github.com/sharonfeldman/sv-assertions-goto-repetiotion-operator.git,2018-08-30 08:01:11+00:00,SV ASSERTIONS - using goto repetiotion operators,0,sharonfeldman/sv-assertions-goto-repetiotion-operator,146716287,SystemVerilog,sv-assertions-goto-repetiotion-operator,2,0,2018-08-30 08:06:54+00:00,[],
3040,https://github.com/ChulWPark/Project-ASIC-Design.git,2018-10-16 22:04:09+00:00,AES Encryptor coded in Verilog,0,ChulWPark/Project-ASIC-Design,153360271,SystemVerilog,Project-ASIC-Design,56,0,2018-10-19 14:28:59+00:00,[],
3041,https://github.com/zacyangs/sata_device_model.git,2018-11-04 03:07:01+00:00,An sata device model based on UVM,0,zacyangs/sata_device_model,156044413,SystemVerilog,sata_device_model,1,0,2023-06-21 04:10:24+00:00,[],
3042,https://github.com/shotaro-0131/Game.git,2018-11-15 07:22:23+00:00,,0,shotaro-0131/Game,157669335,SystemVerilog,Game,5853,0,2018-11-15 07:29:50+00:00,[],
3043,https://github.com/lukewulf/ece111hw5.git,2018-11-20 05:26:33+00:00,ECE-111 HW5 SC Mips,0,lukewulf/ece111hw5,158335337,SystemVerilog,ece111hw5,141,0,2018-12-15 01:36:38+00:00,[],
3044,https://github.com/algoldst/UART.git,2018-11-21 02:25:07+00:00,Simple UART,0,algoldst/UART,158478959,SystemVerilog,UART,22,0,2018-12-01 21:34:32+00:00,[],
3045,https://github.com/weinoh/quad-doctor-ece551.git,2018-09-25 17:33:32+00:00,Flight system for a four-propeller drone powered by Altera Cyclone IV using Verilog to synthesize hardware.,1,weinoh/quad-doctor-ece551,150304433,SystemVerilog,quad-doctor-ece551,3072,0,2018-09-25 17:36:25+00:00,[],
3046,https://github.com/motagiyash/System-Verilog.git,2018-09-28 21:41:39+00:00,,0,motagiyash/System-Verilog,150797320,SystemVerilog,System-Verilog,5,0,2018-10-15 12:23:25+00:00,[],
3047,https://github.com/AdamVerner/oscilo.git,2018-10-03 09:17:51+00:00,school project,0,AdamVerner/oscilo,151388084,SystemVerilog,oscilo,315,0,2023-01-28 16:08:24+00:00,[],https://api.github.com/licenses/gpl-3.0
3048,https://github.com/cansucananceyhan/NimGame.git,2018-10-22 21:58:11+00:00,"Individual CS223 project, written in SVerilog and used FPGA Board with BASYS 3",0,cansucananceyhan/NimGame,154222831,SystemVerilog,NimGame,2341,0,2018-10-22 22:07:06+00:00,[],
3049,https://github.com/trentn/random_tutorials.git,2019-04-05 13:27:37+00:00,Random tutorial code.,0,trentn/random_tutorials,179686435,SystemVerilog,random_tutorials,14,0,2020-03-27 18:02:58+00:00,[],
3050,https://github.com/snehasr13/aes-encryptor.git,2019-05-08 21:57:04+00:00,Implementation of Light weight AES on Synopsys VCS,0,snehasr13/aes-encryptor,185684662,SystemVerilog,aes-encryptor,6,0,2019-05-08 22:01:40+00:00,[],
3051,https://github.com/FiltheThrill/ECE385-CowboyVSAlien.git,2019-05-02 19:29:06+00:00,Ece 385 final project -- VGA based multiplayer videogame,0,FiltheThrill/ECE385-CowboyVSAlien,184639647,SystemVerilog,ECE385-CowboyVSAlien,109,0,2019-05-02 19:50:28+00:00,[],
3052,https://github.com/QuangTran2706/arilogcal.git,2019-05-17 04:48:39+00:00,📟 Finite State Machine Calculator on FPGA board ,0,QuangTran2706/arilogcal,187148356,SystemVerilog,arilogcal,4822,0,2021-11-08 15:38:07+00:00,[],
3053,https://github.com/amartinez10/systemverilogprojects.git,2018-11-10 00:06:13+00:00,SystemVerilog projects I have done in the past few months,0,amartinez10/systemverilogprojects,156931518,SystemVerilog,systemverilogprojects,189,0,2018-11-10 06:35:04+00:00,[],
3054,https://github.com/jhanani29/Verilog.git,2018-10-29 03:02:55+00:00,,0,jhanani29/Verilog,155143630,SystemVerilog,Verilog,7,0,2019-02-22 22:03:25+00:00,[],
3055,https://github.com/DionLegierse/programmeerbareHardware1.git,2018-11-07 15:32:09+00:00,,0,DionLegierse/programmeerbareHardware1,156567869,SystemVerilog,programmeerbareHardware1,229292,0,2018-12-18 22:10:44+00:00,[],
3056,https://github.com/skatanik/cordic_module.git,2018-11-06 11:50:36+00:00,CORDIC implementation for calculating sin and cos functions,0,skatanik/cordic_module,156375883,SystemVerilog,cordic_module,3,0,2018-11-06 11:53:10+00:00,[],
3057,https://github.com/rohanmahapatra/segway_controller.git,2018-11-12 22:54:05+00:00,"Segway Controller - Design, Synthesis, Post Synthesis & Test-benches",1,rohanmahapatra/segway_controller,157288534,SystemVerilog,segway_controller,41337,0,2018-12-12 05:10:02+00:00,[],
3058,https://github.com/melihtanriyakul/ALU-and-testbench-in-SystemVerilog.git,2018-11-20 10:49:24+00:00,Arithmetic Logic Unit and testbench implemented in SystemVerilog.,0,melihtanriyakul/ALU-and-testbench-in-SystemVerilog,158374148,SystemVerilog,ALU-and-testbench-in-SystemVerilog,2,0,2018-11-20 10:49:38+00:00,[],https://api.github.com/licenses/mit
3059,https://github.com/EmptyJackson/Practical-Labs.git,2018-11-17 16:20:38+00:00,Second year practical labs,0,EmptyJackson/Practical-Labs,158002439,SystemVerilog,Practical-Labs,35115,0,2018-11-22 23:54:59+00:00,[],
3060,https://github.com/Featherweight-IP/fwuart.git,2018-12-06 02:33:10+00:00,Featherweight UART IP,0,Featherweight-IP/fwuart,160607475,SystemVerilog,fwuart,26,0,2021-11-02 01:57:26+00:00,[],https://api.github.com/licenses/apache-2.0
3061,https://github.com/upadhk/EE-271-Lab4.git,2018-12-19 01:47:22+00:00,,0,upadhk/EE-271-Lab4,162367638,SystemVerilog,EE-271-Lab4,4,0,2018-12-20 01:20:45+00:00,[],
3062,https://github.com/baxterjo/ECE271-FinalProject.git,2018-11-23 18:16:25+00:00,,0,baxterjo/ECE271-FinalProject,158865259,SystemVerilog,ECE271-FinalProject,31126,0,2023-08-28 20:01:43+00:00,[],
3063,https://github.com/deltalian/test2.git,2018-12-23 12:35:11+00:00,another test,0,deltalian/test2,162889249,SystemVerilog,test2,0,0,2018-12-23 13:19:13+00:00,[],
3064,https://github.com/SingularityKChen/RC6_sv.git,2018-12-09 13:40:22+00:00,The systemverilog code of an integrated circuit,1,SingularityKChen/RC6_sv,161043331,SystemVerilog,RC6_sv,49,0,2023-01-28 09:51:07+00:00,[],
3065,https://github.com/yelgabrun/y_risc.git,2018-12-10 08:33:54+00:00,Basic Unpipelined RISC-V processor in Verilog/SV implementing an RV32I base integer ISA (for now),0,yelgabrun/y_risc,161142960,SystemVerilog,y_risc,80,0,2022-01-01 10:09:45+00:00,"['risc-v', 'riscv', 'verilog']",
3066,https://github.com/php-technolog/owire.git,2018-10-22 17:23:27+00:00,1-wire full stack protocol for Cyclone IV family,0,php-technolog/owire,154185615,SystemVerilog,owire,84,0,2018-11-22 19:29:35+00:00,[],https://api.github.com/licenses/gpl-3.0
3067,https://github.com/louie00333/E-Drum-Kit.git,2019-03-11 05:58:35+00:00,Electric Drum Kit Code - (SysVerilog),0,louie00333/E-Drum-Kit,174934986,SystemVerilog,E-Drum-Kit,9,0,2019-03-12 18:59:13+00:00,[],
3068,https://github.com/melt-umn/ableC-mapFold-exercise.git,2019-02-15 19:21:59+00:00,A tutorial exercise in extending and extension.,0,melt-umn/ableC-mapFold-exercise,170916594,SystemVerilog,ableC-mapFold-exercise,8,0,2019-02-15 20:13:48+00:00,[],
3069,https://github.com/CwbhX/Digital-Circuits-II-RGB-Lab-2.git,2019-02-13 22:03:40+00:00,SystemVerilog for the Nexys 4 board for adafruit's 16x32 RGB Display,0,CwbhX/Digital-Circuits-II-RGB-Lab-2,170586452,SystemVerilog,Digital-Circuits-II-RGB-Lab-2,130,0,2019-02-28 13:46:55+00:00,[],
3070,https://github.com/melt-umn/ableC-channels.git,2019-02-14 12:24:55+00:00,An ableC extension that introduces channels in the model of Go,0,melt-umn/ableC-channels,170687423,SystemVerilog,ableC-channels,13,0,2019-02-14 12:25:29+00:00,[],https://api.github.com/licenses/lgpl-3.0
3071,https://github.com/Darky777/rtl_library.git,2019-01-15 12:26:39+00:00,,0,Darky777/rtl_library,165846966,SystemVerilog,rtl_library,25,0,2020-01-08 14:56:23+00:00,[],https://api.github.com/licenses/gpl-3.0
3072,https://github.com/SavicLuka/ocp_splitter.git,2018-09-15 11:57:52+00:00,Diplomski rad - Razvoj okruženja za verifikaciju razdvajača protokola otvorenog jezgra,0,SavicLuka/ocp_splitter,148897895,SystemVerilog,ocp_splitter,2665,0,2018-09-15 12:07:19+00:00,[],
3073,https://github.com/eajacobson67/ECE385-Final-Project.git,2018-09-16 02:13:35+00:00,Using FPGA and SystemVerilog to create 3D ball shooting game,0,eajacobson67/ECE385-Final-Project,148955554,SystemVerilog,ECE385-Final-Project,44893,0,2018-10-04 05:06:50+00:00,[],
3074,https://github.com/xumoxiao/xmx_rtl_lib.git,2018-09-22 03:10:21+00:00,根据自己的编码习惯，设计一些通用模块,0,xumoxiao/xmx_rtl_lib,149840843,SystemVerilog,xmx_rtl_lib,34,0,2018-09-22 03:10:30+00:00,[],
3075,https://github.com/enchantessss/uvm_note.git,2018-10-05 16:30:37+00:00,,0,enchantessss/uvm_note,151749170,SystemVerilog,uvm_note,11,0,2022-05-23 16:35:21+00:00,[],
3076,https://github.com/steinarc/SimpleFCNN.git,2018-09-29 15:56:39+00:00,,0,steinarc/SimpleFCNN,150879969,SystemVerilog,SimpleFCNN,159,0,2018-10-03 13:21:21+00:00,[],
3077,https://github.com/JayAnderson03/Multi-Cycle-MIPS.git,2018-09-25 05:22:47+00:00,An ongoing attempt at a multi-cycle MIPS CPU in SystemVerilog.,0,JayAnderson03/Multi-Cycle-MIPS,150211796,SystemVerilog,Multi-Cycle-MIPS,125,0,2018-09-25 05:32:48+00:00,[],
3078,https://github.com/akhilayyagari/AES128.git,2018-09-24 23:35:21+00:00,,0,akhilayyagari/AES128,150181365,SystemVerilog,AES128,222,0,2018-09-25 00:22:29+00:00,[],
3079,https://github.com/ig007/RISC-CPU.git,2018-09-25 02:45:25+00:00,5-Stage Pipelined CPU,0,ig007/RISC-CPU,150198045,SystemVerilog,RISC-CPU,64,0,2018-11-26 18:43:03+00:00,[],
3080,https://github.com/ziqiangt/ELEC402.git,2018-09-20 18:49:16+00:00,,0,ziqiangt/ELEC402,149655398,SystemVerilog,ELEC402,13,0,2018-10-28 18:51:25+00:00,[],
3081,https://github.com/RyanDevlin/Custom-Cryptographic-Module.git,2018-09-13 20:08:12+00:00,The CCM is a custom ASIC written in Verilog. It is capable of computing a pipelined version of AES-128.,0,RyanDevlin/Custom-Cryptographic-Module,148691786,SystemVerilog,Custom-Cryptographic-Module,5432,0,2020-03-31 14:34:39+00:00,[],
3082,https://github.com/aarasyid/EE-469.git,2018-10-17 18:47:23+00:00,,0,aarasyid/EE-469,153507143,SystemVerilog,EE-469,3,0,2018-10-18 17:04:04+00:00,[],
3083,https://github.com/jagjordi/IL2450.git,2019-02-19 10:19:10+00:00,,0,jagjordi/IL2450,171452436,SystemVerilog,IL2450,2049,0,2019-03-06 14:32:38+00:00,[],
3084,https://github.com/christianphan/FIFO.git,2019-02-03 03:30:41+00:00,Synchronous and Asynchronous FIFO Queues Implemented in System Verilog,1,christianphan/FIFO,168905469,SystemVerilog,FIFO,2,0,2019-02-03 03:38:25+00:00,[],
3085,https://github.com/prabakaranvlsi/SyncFIFO.git,2019-02-09 14:41:39+00:00,Fully parameterized Synchronous FIFO written in SystemVerilog ,0,prabakaranvlsi/SyncFIFO,169876297,SystemVerilog,SyncFIFO,6,0,2019-02-09 14:52:21+00:00,[],https://api.github.com/licenses/mit
3086,https://github.com/TheGreatGitsby/pipeFlow.git,2019-03-23 05:35:16+00:00,A generic flow controlled pipeline structure,0,TheGreatGitsby/pipeFlow,177248708,SystemVerilog,pipeFlow,6,0,2019-06-05 01:25:15+00:00,[],
3087,https://github.com/DigitalSystems-FunctionalVerification/Playground.git,2019-03-26 12:09:03+00:00,,0,DigitalSystems-FunctionalVerification/Playground,177781044,SystemVerilog,Playground,937,0,2019-04-01 16:31:19+00:00,[],
3088,https://github.com/talhasen123/4-Man-Elevator.git,2019-03-19 10:17:20+00:00,"This is project is done for Digital Design course. It is a maximum 4-man elevator which can pick up passengers from 3 floors and travel them to the ground floor. It also has a passenger sensor, meaning it checks how many passengers are there on a floor and how many it can pick up. An FPGA set with 8x8 display, 4x4 keypad and an Basys3 is required to run this project.",0,talhasen123/4-Man-Elevator,176484361,SystemVerilog,4-Man-Elevator,1275,0,2019-11-08 08:06:17+00:00,[],
3089,https://github.com/lcy0816/MIPS16_ISA_Verification.git,2019-03-19 15:53:37+00:00,,1,lcy0816/MIPS16_ISA_Verification,176548393,SystemVerilog,MIPS16_ISA_Verification,58593,0,2019-03-19 15:59:21+00:00,[],
3090,https://github.com/aleguerrerol/ELO212.git,2019-04-12 20:43:36+00:00,sufrimiento,0,aleguerrerol/ELO212,181080921,SystemVerilog,ELO212,1552,0,2020-01-20 01:48:09+00:00,[],
3091,https://github.com/mcesarpl/8-bit-MIPS-processor.git,2019-03-22 02:52:27+00:00,,0,mcesarpl/8-bit-MIPS-processor,177060999,SystemVerilog,8-bit-MIPS-processor,696,0,2019-04-17 03:08:11+00:00,[],
3092,https://github.com/Abrahamlga/Tarea_MIPS_multiciclo.git,2019-03-27 19:21:59+00:00,Tarea de diseno de MIPS multiciclo,0,Abrahamlga/Tarea_MIPS_multiciclo,178060410,SystemVerilog,Tarea_MIPS_multiciclo,297,0,2019-03-27 19:28:13+00:00,[],
3093,https://github.com/rcon101/Baysys3MemSys.git,2019-05-10 19:52:27+00:00,A very primitive memory implemented on the Artix7 FPGA on the Xilinx Baysys3 ,0,rcon101/Baysys3MemSys,186046420,SystemVerilog,Baysys3MemSys,254,0,2019-05-10 20:17:23+00:00,[],
3094,https://github.com/ChrisArreFall/Pipelined-ARM.git,2019-04-16 10:01:23+00:00,5 stage pipeline ARM processor,0,ChrisArreFall/Pipelined-ARM,181663595,SystemVerilog,Pipelined-ARM,79,0,2019-05-25 06:27:19+00:00,[],
3095,https://github.com/mdwrds14/Micro_Project.git,2019-04-09 22:53:40+00:00,Single cycle MIPS microprocessor,0,mdwrds14/Micro_Project,180461367,SystemVerilog,Micro_Project,30,0,2019-05-31 22:44:22+00:00,[],
3096,https://github.com/will-bei/Basic-bitcoin.git,2019-04-03 01:26:18+00:00,"Basic bitcoin project and code, improved from code originally submitted for Prof. Bill Lin's Winter Quarter ECE 111 (2019)",0,will-bei/Basic-bitcoin,179186425,SystemVerilog,Basic-bitcoin,97,0,2019-04-04 08:11:03+00:00,[],
3097,https://github.com/acerols/RMRV.git,2019-04-05 16:02:21+00:00,,0,acerols/RMRV,179713439,SystemVerilog,RMRV,242,0,2020-02-08 09:10:56+00:00,[],https://api.github.com/licenses/mit
3098,https://github.com/amanch007/test_repo.git,2019-04-06 22:17:35+00:00,testing,0,amanch007/test_repo,179892520,SystemVerilog,test_repo,7,0,2019-04-06 22:22:22+00:00,[],
3099,https://github.com/fisherman1337/fpga4p_v2.0.git,2019-04-18 07:15:58+00:00,Python package / GNU Linux terminal utility for porting machine learning algorithms to FPGA.,0,fisherman1337/fpga4p_v2.0,182036307,SystemVerilog,fpga4p_v2.0,56,0,2019-04-18 07:23:52+00:00,[],
3100,https://github.com/xwshen/SpaceInvaders.git,2019-04-13 20:18:47+00:00,Final Project,0,xwshen/SpaceInvaders,181224350,SystemVerilog,SpaceInvaders,0,0,2019-04-13 20:39:11+00:00,[],
3101,https://github.com/tec-tdg/Lab4.2.git,2019-03-29 06:22:02+00:00,,0,tec-tdg/Lab4.2,178344957,SystemVerilog,Lab4.2,48,0,2019-04-03 04:49:12+00:00,[],
3102,https://github.com/jreimer107/ECE551.git,2019-04-30 16:29:26+00:00,,0,jreimer107/ECE551,184296204,SystemVerilog,ECE551,10195,0,2019-04-30 16:30:20+00:00,[],
3103,https://github.com/draconian-design/cmn.git,2019-05-05 22:38:10+00:00,A common library for UVM providing some useful functions. Fork of https://github.com/bphunter1972/hawkins/tree/master/verif/vkits/cmn,0,draconian-design/cmn,185090245,SystemVerilog,cmn,28,0,2019-05-05 22:40:34+00:00,[],
3104,https://github.com/danjapapajani-zz/16BitCPU.git,2019-05-04 20:12:35+00:00,"Custom 16-bit processor, designed and programmed on an Altera FPGA",0,danjapapajani-zz/16BitCPU,184939989,SystemVerilog,16BitCPU,75,0,2019-05-05 05:27:58+00:00,[],
3105,https://github.com/nimamg/SingleCycle-CPU.git,2019-05-09 23:35:52+00:00,"A single cycle CPU, simulated using Verilog",0,nimamg/SingleCycle-CPU,185886139,SystemVerilog,SingleCycle-CPU,4,0,2019-05-09 23:44:50+00:00,[],
3106,https://github.com/burneyh/pipelined-mips-processor.git,2019-05-13 12:33:37+00:00,A pipelined MIPS Processor with 5 stages written in SystemVerilog.,0,burneyh/pipelined-mips-processor,186416143,SystemVerilog,pipelined-mips-processor,9,0,2020-09-24 14:07:36+00:00,[],https://api.github.com/licenses/mit
3107,https://github.com/Svelta/2-DigitaleElektronica.git,2019-05-12 16:35:41+00:00,,0,Svelta/2-DigitaleElektronica,186278974,SystemVerilog,2-DigitaleElektronica,158,0,2019-05-12 17:49:10+00:00,[],
3108,https://github.com/zuz19920624/scr1_extension.git,2019-05-15 06:44:29+00:00,extension for scr1,0,zuz19920624/scr1_extension,186765484,SystemVerilog,scr1_extension,3923,0,2019-05-15 07:19:33+00:00,[],
3109,https://github.com/Luis-Alves2/Projeto_hard.git,2019-05-16 22:11:38+00:00,,0,Luis-Alves2/Projeto_hard,187107946,SystemVerilog,Projeto_hard,1659,0,2019-06-24 12:14:02+00:00,[],
3110,https://github.com/nathaniel-drechsler/16-Step-Sequencer.git,2019-05-17 08:45:42+00:00,16 Step Music Sequencer,0,nathaniel-drechsler/16-Step-Sequencer,187180672,SystemVerilog,16-Step-Sequencer,584,0,2019-07-28 08:33:45+00:00,[],
3111,https://github.com/ducnguyenSJSU/Verilog.git,2018-10-12 04:10:45+00:00,practice SystemVerilog,0,ducnguyenSJSU/Verilog,152692860,SystemVerilog,Verilog,68,0,2018-10-12 04:21:49+00:00,[],
3112,https://github.com/melt-umn/ableC-template-algebraic-data-types.git,2018-10-12 20:43:07+00:00,ableC extension for algebraic data types with C++-style templating,0,melt-umn/ableC-template-algebraic-data-types,152805580,SystemVerilog,ableC-template-algebraic-data-types,65,0,2022-01-19 02:26:37+00:00,[],https://api.github.com/licenses/lgpl-3.0
3113,https://github.com/Devisathya/sathya_verification_env.git,2018-10-01 14:36:56+00:00,,0,Devisathya/sathya_verification_env,151103751,SystemVerilog,sathya_verification_env,448,0,2018-10-01 16:13:32+00:00,[],
3114,https://github.com/DungTran46/32-bit_ARM_Verilog.git,2018-09-04 20:53:45+00:00,,0,DungTran46/32-bit_ARM_Verilog,147417055,SystemVerilog,32-bit_ARM_Verilog,17,0,2018-09-04 20:56:20+00:00,[],
3115,https://github.com/CelvinSXll/SV_VIP.git,2018-08-20 13:28:47+00:00,SV VIP supported by UVM,0,CelvinSXll/SV_VIP,145421358,SystemVerilog,SV_VIP,11,0,2018-08-20 14:02:40+00:00,[],https://api.github.com/licenses/apache-2.0
3116,https://github.com/Ali-Omrani/Digital-Logic-Design.git,2018-11-07 08:13:20+00:00,"Computer assignments of ""Digital Logic Design"" Course at the University of Tehran",0,Ali-Omrani/Digital-Logic-Design,156512291,SystemVerilog,Digital-Logic-Design,40,0,2018-11-07 09:42:31+00:00,[],
3117,https://github.com/fl4shk/snow64_cpu.git,2018-10-30 18:07:13+00:00,This is my master's project's source code,0,fl4shk/snow64_cpu,155433663,SystemVerilog,snow64_cpu,1497,0,2018-11-06 20:35:33+00:00,[],https://api.github.com/licenses/mit
3118,https://github.com/kumarswamy12/UART16550.git,2019-01-04 18:40:48+00:00,verification of UART16550 using UVM testbench,1,kumarswamy12/UART16550,164142694,SystemVerilog,UART16550,44,0,2019-01-05 15:16:11+00:00,[],
3119,https://github.com/ooorin/Mips-Cache.git,2019-03-06 08:18:35+00:00,"course project(Introduction to Computer System, Spring 2018)",0,ooorin/Mips-Cache,174102164,SystemVerilog,Mips-Cache,11,0,2019-03-06 08:27:24+00:00,[],
3120,https://github.com/dseng905/sha256_bitcoin.git,2019-03-15 01:48:41+00:00,Bitcoin Hasher with Simplified SHA256 Algorithm,0,dseng905/sha256_bitcoin,175729210,SystemVerilog,sha256_bitcoin,15,0,2020-02-08 01:35:59+00:00,[],
3121,https://github.com/minsuk-jang/16bit.git,2019-03-17 05:23:21+00:00,16bitCPU,0,minsuk-jang/16bit,176059862,SystemVerilog,16bit,55,0,2019-11-04 09:08:31+00:00,[],
3122,https://github.com/0429charlie/CS450---A2.git,2018-08-23 19:57:02+00:00,An copy of CS450 A2,0,0429charlie/CS450---A2,145900800,SystemVerilog,CS450---A2,2233,0,2018-08-23 19:58:19+00:00,[],
3123,https://github.com/0429charlie/CS450---A1.git,2018-08-23 19:41:52+00:00,An copy of CS450 A31,0,0429charlie/CS450---A1,145899427,SystemVerilog,CS450---A1,103,0,2018-08-23 19:43:12+00:00,[],
3124,https://github.com/henry-ns/MD5.git,2018-09-27 19:27:23+00:00,MD5 hash generator,0,henry-ns/MD5,150637557,SystemVerilog,MD5,325,0,2020-01-05 02:01:31+00:00,"['microelectronics', 'hash', 'cryptography', 'hash-generator', 'md5']",https://api.github.com/licenses/apache-2.0
3125,https://github.com/melt-umn/ableC-unification.git,2018-11-03 21:37:53+00:00,An ableC extension introducing unification on algebraic data types,0,melt-umn/ableC-unification,156025919,SystemVerilog,ableC-unification,122,0,2022-01-19 02:28:39+00:00,[],https://api.github.com/licenses/lgpl-3.0
3126,https://github.com/Agnosic/KostkaSystemVerilog.git,2018-11-12 14:53:46+00:00,,0,Agnosic/KostkaSystemVerilog,157229591,SystemVerilog,KostkaSystemVerilog,137,0,2019-03-18 04:51:23+00:00,[],
3127,https://github.com/alfishe/74xxx.git,2018-11-16 18:49:03+00:00,SystemVerilog implementation for common 74xxx series ICs with testbenches,1,alfishe/74xxx,157908411,SystemVerilog,74xxx,26,0,2018-12-03 02:11:43+00:00,[],https://api.github.com/licenses/mit
3128,https://github.com/tomasKromer/RiscV_MultiCiclo.git,2018-08-24 03:38:09+00:00,,0,tomasKromer/RiscV_MultiCiclo,145938659,SystemVerilog,RiscV_MultiCiclo,20,0,2018-08-24 03:43:44+00:00,[],
3129,https://github.com/sharonfeldman/sv-assertions-concurrent-assertions.git,2018-08-30 06:46:21+00:00,concurrent assertions,0,sharonfeldman/sv-assertions-concurrent-assertions,146707538,SystemVerilog,sv-assertions-concurrent-assertions,3,0,2018-08-30 06:48:40+00:00,[],
3130,https://github.com/lfelipev/seven_segment.git,2018-11-30 17:32:17+00:00,,0,lfelipev/seven_segment,159857400,SystemVerilog,seven_segment,7,0,2018-11-30 17:39:02+00:00,[],
3131,https://github.com/diningyo/chisel-bootcamp-exercise.git,2018-12-02 04:15:07+00:00,vivado simulation environment for chisel-bootcamp exercise code written by verilog,0,diningyo/chisel-bootcamp-exercise,160012572,SystemVerilog,chisel-bootcamp-exercise,13,0,2018-12-02 11:13:48+00:00,[],https://api.github.com/licenses/apache-2.0
3132,https://github.com/vkaukeano/Verilog.git,2018-12-02 00:16:04+00:00,,0,vkaukeano/Verilog,159999173,SystemVerilog,Verilog,10101,0,2018-12-02 03:03:37+00:00,[],https://api.github.com/licenses/mit
3133,https://github.com/mahshiv/RISC_V-Processor.git,2019-01-19 07:39:20+00:00,Computer Architecture final project,0,mahshiv/RISC_V-Processor,166519948,SystemVerilog,RISC_V-Processor,102,0,2021-02-03 20:40:03+00:00,"['risc', 'risc-v', 'systemverilog']",
3134,https://github.com/pybfms/pybfms-axi4.git,2019-02-09 20:36:00+00:00,AXI4 BFMs for use in SystemVerilog environments,0,pybfms/pybfms-axi4,169910997,SystemVerilog,pybfms-axi4,44,0,2021-03-15 21:55:50+00:00,[],https://api.github.com/licenses/apache-2.0
3135,https://github.com/aungthu17593/112L_Lab3.git,2019-02-23 01:53:19+00:00,,0,aungthu17593/112L_Lab3,172158970,SystemVerilog,112L_Lab3,173,0,2019-02-25 22:15:38+00:00,[],
3136,https://github.com/sooriravindra/CSE502RISCV.git,2019-02-07 17:16:10+00:00,,0,sooriravindra/CSE502RISCV,169610492,SystemVerilog,CSE502RISCV,1413,0,2020-09-15 21:02:18+00:00,[],
3137,https://github.com/athreyaadi/design.git,2019-04-16 07:09:08+00:00,,0,athreyaadi/design,181634603,SystemVerilog,design,24,0,2019-04-16 07:12:29+00:00,[],
3138,https://github.com/mickaeltorres/custom_rv64im.git,2019-04-23 21:41:35+00:00,Custom implementation of the user part of risc-v rv64im core,0,mickaeltorres/custom_rv64im,183100199,SystemVerilog,custom_rv64im,47,0,2019-04-23 22:01:12+00:00,[],https://api.github.com/licenses/bsd-3-clause
3139,https://github.com/ASokolov5924/Processor.git,2019-04-12 06:26:10+00:00,Processor Simulation that works similarly to the MIPS ISA,0,ASokolov5924/Processor,180944184,SystemVerilog,Processor,21,0,2019-04-12 06:33:09+00:00,[],
3140,https://github.com/DanielDW5555/led_matrix.git,2019-04-27 22:36:40+00:00,Modules for a LED matrix display.,0,DanielDW5555/led_matrix,183827836,SystemVerilog,led_matrix,2,0,2019-04-27 22:39:01+00:00,[],
3141,https://github.com/na-tt/ELO212.git,2019-05-13 16:29:26+00:00,Vivado porjects,1,na-tt/ELO212,186457549,SystemVerilog,ELO212,15498,0,2019-08-22 14:05:08+00:00,[],
3142,https://github.com/whoami90506/dclab_lab1.git,2019-03-04 15:26:49+00:00,,0,whoami90506/dclab_lab1,173770572,SystemVerilog,dclab_lab1,14698,0,2019-03-11 17:26:19+00:00,[],
3143,https://github.com/jadevarelle/rc4-decryption.git,2019-03-06 19:38:24+00:00,,0,jadevarelle/rc4-decryption,174208701,SystemVerilog,rc4-decryption,31,0,2019-03-13 21:14:46+00:00,[],
3144,https://github.com/fisherman1337/fpga_project_RTL.git,2019-03-11 19:23:04+00:00,There are a code written in SV for FPGA. ,0,fisherman1337/fpga_project_RTL,175069338,SystemVerilog,fpga_project_RTL,9,0,2019-03-11 19:24:54+00:00,[],
3145,https://github.com/Pepewitch/HSL-pong-game.git,2019-05-10 03:57:53+00:00,,0,Pepewitch/HSL-pong-game,185915891,SystemVerilog,HSL-pong-game,1472,0,2019-05-20 06:11:18+00:00,[],
3146,https://github.com/newport94/UVM.git,2019-01-04 14:20:44+00:00,,0,newport94/UVM,164116483,SystemVerilog,UVM,3,0,2019-01-04 14:34:57+00:00,[],
3147,https://github.com/Borlehandro/PWM.git,2019-05-14 11:21:26+00:00,,0,Borlehandro/PWM,186607335,SystemVerilog,PWM,23953,0,2019-05-14 11:28:12+00:00,[],
3148,https://github.com/usman-kakakhel/EscapeElevator.git,2019-03-15 21:05:54+00:00,Mini microprocessor for an elevator serving as an emergency elevator which clears buildings in an efficient manner. This processor was designed using HLSM and implemented in SystemVerilog.,0,usman-kakakhel/EscapeElevator,175891109,SystemVerilog,EscapeElevator,311,0,2019-03-15 21:44:31+00:00,[],
3149,https://github.com/bradweeks7/CPE233_Final_Project.git,2019-03-07 21:58:04+00:00,,0,bradweeks7/CPE233_Final_Project,174426384,SystemVerilog,CPE233_Final_Project,145,0,2019-10-03 16:36:45+00:00,[],
3150,https://github.com/ShaunakOswal/AXI_signal_manipulation.git,2019-02-06 17:12:23+00:00,,0,ShaunakOswal/AXI_signal_manipulation,169443907,SystemVerilog,AXI_signal_manipulation,1152,0,2019-02-06 20:03:52+00:00,[],
3151,https://github.com/CURSOS-TEC/FSM.git,2019-03-20 16:58:44+00:00,Finit State Machine in System Verilog,0,CURSOS-TEC/FSM,176779301,SystemVerilog,FSM,1,0,2019-03-20 16:59:17+00:00,[],
3152,https://github.com/laizixian/ECE437.git,2019-04-08 01:37:37+00:00,"A multi-core, pipelined CPU prototype design",0,laizixian/ECE437,180047987,SystemVerilog,ECE437,239,0,2019-04-08 01:41:53+00:00,[],
3153,https://github.com/verifymychip/fv_sb.git,2019-03-23 22:43:17+00:00,Sample implementations of Formal Scoreboards using various techniques,0,verifymychip/fv_sb,177347526,SystemVerilog,fv_sb,9,0,2019-04-03 05:00:08+00:00,[],
3154,https://github.com/lab-instruments/ups.git,2019-03-23 19:04:04+00:00,Urological Pressure Sensor Project,0,lab-instruments/ups,177329271,SystemVerilog,ups,232,0,2022-04-06 00:42:11+00:00,[],https://api.github.com/licenses/mit
3155,https://github.com/yunweic/router.git,2019-03-31 16:32:11+00:00,Source code for my Single-Layer Bus Routing thesis,0,yunweic/router,178713724,SystemVerilog,router,7834,0,2020-05-22 14:30:12+00:00,[],
3156,https://github.com/deborafurieri/arquitetura-de-computadores.git,2018-10-13 20:34:50+00:00,"Repositório criado para o armazenamento de um projeto referente à disciplina Arquitetura de Computadores do IFES - Serra, semestre 2018/2 - Contribuidores: Bruno Viana, Débora Furieri e Ravena Soares",0,deborafurieri/arquitetura-de-computadores,152912247,SystemVerilog,arquitetura-de-computadores,3874,0,2018-12-18 00:51:17+00:00,[],
3157,https://github.com/EvanJMiller/Pipeline-Processor.git,2018-10-25 01:02:58+00:00,Pipelined Processor with Caching ,0,EvanJMiller/Pipeline-Processor,154589569,SystemVerilog,Pipeline-Processor,47,0,2018-10-25 01:22:44+00:00,[],
3158,https://github.com/kknash/ed_timer.git,2018-10-25 14:10:01+00:00,Simple timer module for education and demonstration use,0,kknash/ed_timer,154682440,SystemVerilog,ed_timer,4,0,2018-10-25 14:41:15+00:00,[],https://api.github.com/licenses/unlicense
3159,https://github.com/EvanJMiller/Single-Cycle-Processor.git,2018-10-25 00:54:52+00:00,Single Cycle Processor using the MIPs architecture,0,EvanJMiller/Single-Cycle-Processor,154588922,SystemVerilog,Single-Cycle-Processor,14,0,2018-10-25 03:36:03+00:00,[],
3160,https://github.com/sankara-prasad/riscv-project.git,2018-09-12 07:04:15+00:00,,0,sankara-prasad/riscv-project,148436962,SystemVerilog,riscv-project,1552,0,2018-09-12 07:30:37+00:00,[],
3161,https://github.com/sharanbr/assorted_verification.git,2018-09-23 16:03:30+00:00,"random collection of verification code, recipes, samples",0,sharanbr/assorted_verification,150000730,SystemVerilog,assorted_verification,93,0,2021-11-13 04:47:41+00:00,['systemverilog'],
3162,https://github.com/davidlinn/DDR.git,2018-11-18 20:33:30+00:00,Hardware implementation of Dance Dance Revolution,0,davidlinn/DDR,158124335,SystemVerilog,DDR,22202,0,2019-02-13 01:45:27+00:00,[],
3163,https://github.com/H4rmey/SchoolFPGA.git,2018-11-12 20:29:13+00:00,school fpga huiswerk,0,H4rmey/SchoolFPGA,157272529,SystemVerilog,SchoolFPGA,88958,0,2018-12-17 22:40:35+00:00,[],
3164,https://github.com/clementwong97/Conway_Game.git,2018-11-12 23:52:40+00:00,,0,clementwong97/Conway_Game,157293456,SystemVerilog,Conway_Game,2,0,2021-10-24 13:51:30+00:00,[],
3165,https://github.com/keenanmach/9-bit-RISC-CPU.git,2018-11-09 00:52:34+00:00,,1,keenanmach/9-bit-RISC-CPU,156789054,SystemVerilog,9-bit-RISC-CPU,1985,0,2020-03-20 02:06:04+00:00,[],
3166,https://github.com/cpu-experiment-2018-2/fpu.git,2018-10-09 05:30:54+00:00,,0,cpu-experiment-2018-2/fpu,152192898,SystemVerilog,fpu,212,0,2019-02-14 08:37:12+00:00,[],
3167,https://github.com/minabedwany/32_bits_enhanced_ALU_SystemVerilog.git,2018-10-20 04:04:22+00:00,,0,minabedwany/32_bits_enhanced_ALU_SystemVerilog,153868174,SystemVerilog,32_bits_enhanced_ALU_SystemVerilog,234,0,2018-10-20 04:13:29+00:00,[],
3168,https://github.com/ChrisArreFall/Pikachus_Adventure.git,2018-10-15 07:30:53+00:00,,0,ChrisArreFall/Pikachus_Adventure,153070948,SystemVerilog,Pikachus_Adventure,38284,0,2019-04-21 01:33:13+00:00,[],
3169,https://github.com/kaleid-liner/FPGA-Tetris.git,2018-12-10 12:14:59+00:00,Tetris based on Nexys4 DDR FPGA Board,0,kaleid-liner/FPGA-Tetris,161169985,SystemVerilog,FPGA-Tetris,2189,0,2018-12-14 11:13:29+00:00,"['verilog', 'tetris', 'fpga']",
3170,https://github.com/Wang-Dongsheng/myPULPino.git,2018-12-14 14:42:42+00:00,,0,Wang-Dongsheng/myPULPino,161797028,SystemVerilog,myPULPino,4380,0,2019-06-04 17:20:03+00:00,[],
3171,https://github.com/AvenashAsai/fpga.git,2018-12-14 14:35:15+00:00,,0,AvenashAsai/fpga,161796047,SystemVerilog,fpga,88,0,2018-12-14 14:38:31+00:00,[],
3172,https://github.com/jonathanrainer/Gouram.git,2018-12-13 11:59:46+00:00,An add on to an augmented RI5CY processor to provide trace recording to enable Enokida to work effectively.,1,jonathanrainer/Gouram,161632817,SystemVerilog,Gouram,66,0,2020-03-08 16:46:10+00:00,[],https://api.github.com/licenses/mit
3173,https://github.com/juan-19/Regresion-Pruebas.git,2018-09-04 16:33:14+00:00,,0,juan-19/Regresion-Pruebas,147376489,SystemVerilog,Regresion-Pruebas,368,0,2018-10-30 19:31:55+00:00,[],
3174,https://github.com/BrunoGeorgevich/MIPS_Multi_Ciclo.git,2018-08-20 15:28:11+00:00,,0,BrunoGeorgevich/MIPS_Multi_Ciclo,145435887,SystemVerilog,MIPS_Multi_Ciclo,7313,0,2018-10-22 14:09:39+00:00,[],
3175,https://github.com/leajalil/RISC-V_pipeline.git,2018-08-25 21:25:24+00:00,,0,leajalil/RISC-V_pipeline,146130676,SystemVerilog,RISC-V_pipeline,15,0,2023-01-18 14:49:45+00:00,[],
3176,https://github.com/kaipederson/ECE551_Final_Project.git,2019-04-22 16:26:30+00:00,Audio Equalizer for ECE551 Final Design Project,0,kaipederson/ECE551_Final_Project,182825687,SystemVerilog,ECE551_Final_Project,4913,0,2021-07-15 18:36:36+00:00,[],
3177,https://github.com/cdrann/processor.git,2019-05-11 03:53:42+00:00,,0,cdrann/processor,186084988,SystemVerilog,processor,50,0,2020-05-22 15:12:45+00:00,[],
3178,https://github.com/karimitani/ECE337.git,2019-05-02 18:20:11+00:00,ASIC Design Laboratory,0,karimitani/ECE337,184630161,SystemVerilog,ECE337,803,0,2019-08-30 16:53:49+00:00,[],
3179,https://github.com/GeorgeOnwubuya/Babbage_Difference_Engine.git,2019-05-06 23:02:39+00:00,Two modules for 2 different polynomials,0,GeorgeOnwubuya/Babbage_Difference_Engine,185283595,SystemVerilog,Babbage_Difference_Engine,15,0,2019-05-06 23:12:59+00:00,[],
3180,https://github.com/GeorgeOnwubuya/Barrel_Shifter.git,2019-04-29 23:18:04+00:00,SystemVerilog code for a Barrel shifter using the generate construct,0,GeorgeOnwubuya/Barrel_Shifter,184157413,SystemVerilog,Barrel_Shifter,6,0,2019-05-03 06:43:04+00:00,[],
3181,https://github.com/ashuniyal/Vivado.git,2019-04-19 10:06:53+00:00,,0,ashuniyal/Vivado,182245171,SystemVerilog,Vivado,23,0,2020-03-01 09:01:58+00:00,[],
3182,https://github.com/RMBTHEGOD/SV_Final_Project.git,2018-11-08 14:25:01+00:00,,0,RMBTHEGOD/SV_Final_Project,156718459,SystemVerilog,SV_Final_Project,948,0,2018-11-08 14:37:16+00:00,[],
3183,https://github.com/fseidel/SHA-3_Accel.git,2018-10-21 19:14:59+00:00,18-743 Project,0,fseidel/SHA-3_Accel,154043384,SystemVerilog,SHA-3_Accel,101,0,2018-12-15 00:39:32+00:00,[],
3184,https://github.com/bhyou/asic_readout_network.git,2018-11-07 04:49:13+00:00,Router testbench,0,bhyou/asic_readout_network,156491808,SystemVerilog,asic_readout_network,21,0,2021-07-02 04:45:55+00:00,[],
3185,https://github.com/rmr1012/MIPS-single-cycle-with-FPU.git,2018-12-09 02:03:54+00:00,,0,rmr1012/MIPS-single-cycle-with-FPU,160995610,SystemVerilog,MIPS-single-cycle-with-FPU,25,0,2018-12-10 00:30:35+00:00,[],
3186,https://github.com/carsonrobles/fpga-image-filtering-system.git,2018-12-11 05:12:35+00:00,FPGA-based system to apply a user selected filter to an image.,0,carsonrobles/fpga-image-filtering-system,161280498,SystemVerilog,fpga-image-filtering-system,20,0,2018-12-19 08:27:41+00:00,[],
3187,https://github.com/JayAnderson03/Single-Cycle-MIPS.git,2018-09-25 05:16:29+00:00,An ongoing attempt at a single cycle MIPS CPU in SystemVerilog.,0,JayAnderson03/Single-Cycle-MIPS,150211313,SystemVerilog,Single-Cycle-MIPS,380,0,2018-09-25 05:32:14+00:00,[],
3188,https://github.com/NickNagy/CSE371.git,2018-12-04 22:13:21+00:00,Digital Design,0,NickNagy/CSE371,160425589,SystemVerilog,CSE371,58,0,2018-12-08 00:38:43+00:00,[],
3189,https://github.com/harihitode/hwmisc.git,2018-11-29 04:47:21+00:00,,0,harihitode/hwmisc,159609020,SystemVerilog,hwmisc,153,0,2019-10-03 06:40:56+00:00,[],
3190,https://github.com/jardelymaris/SystemVerilog.git,2018-09-20 21:01:22+00:00,,0,jardelymaris/SystemVerilog,149670215,SystemVerilog,SystemVerilog,2,0,2018-09-22 18:25:57+00:00,[],
3191,https://github.com/Jullios/MIPS-multicycle-processor.git,2018-09-16 06:32:38+00:00,,1,Jullios/MIPS-multicycle-processor,148970059,SystemVerilog,MIPS-multicycle-processor,21,0,2018-09-25 03:54:15+00:00,[],
3192,https://github.com/hkim150/ECE411-Computer-Design.git,2018-09-14 21:45:34+00:00,RISC-V 32-bit 5-stage pipelined processor,0,hkim150/ECE411-Computer-Design,148844842,SystemVerilog,ECE411-Computer-Design,38,0,2019-03-05 07:55:58+00:00,[],
3193,https://github.com/BaylorComputerEngineering/SoCLabs.git,2018-08-29 21:07:53+00:00,,0,BaylorComputerEngineering/SoCLabs,146658713,SystemVerilog,SoCLabs,3,0,2018-08-29 21:11:48+00:00,[],
3194,https://github.com/martinKindall/digital_design_computer_arch_harris.git,2018-09-11 00:15:33+00:00,"Examples and Exercises from the book ""Digital Design and Computer Architecture""",0,martinKindall/digital_design_computer_arch_harris,148235686,SystemVerilog,digital_design_computer_arch_harris,3,0,2018-09-11 14:14:04+00:00,[],
3195,https://github.com/ChrisArreFall/ALU_N_bits.git,2018-10-15 07:18:22+00:00,,0,ChrisArreFall/ALU_N_bits,153069339,SystemVerilog,ALU_N_bits,7638,0,2018-10-16 08:14:04+00:00,[],
3196,https://github.com/mirzani/mgit.git,2019-01-02 08:27:29+00:00,,0,mirzani/mgit,163814410,SystemVerilog,mgit,3,0,2019-01-03 13:31:52+00:00,[],
3197,https://github.com/lukewulf/floatingPointAddition.git,2018-11-05 01:11:24+00:00,SystemVerilog Implementation for ECE111 HW4,0,lukewulf/floatingPointAddition,156142073,SystemVerilog,floatingPointAddition,317,0,2018-12-13 05:21:15+00:00,[],
3198,https://github.com/memillopeloz/Proy1VerifFuncional.git,2018-11-03 23:18:35+00:00,,0,memillopeloz/Proy1VerifFuncional,156032095,SystemVerilog,Proy1VerifFuncional,31,0,2018-11-08 18:53:03+00:00,[],
3199,https://github.com/gabrielsm0405/Processor.git,2018-11-04 04:25:29+00:00,"A project made for the university, this project is to simulate a multicicle processor",0,gabrielsm0405/Processor,156048977,SystemVerilog,Processor,496,0,2023-11-07 18:50:33+00:00,[],
3200,https://github.com/Michieljsphs/PROGH_Eindopdracht.git,2019-03-14 14:44:10+00:00,Zaad,0,Michieljsphs/PROGH_Eindopdracht,175641377,SystemVerilog,PROGH_Eindopdracht,122,0,2019-03-14 15:45:41+00:00,[],
3201,https://github.com/prdonja/pnrs2.git,2019-03-15 14:34:24+00:00,,0,prdonja/pnrs2,175836540,SystemVerilog,pnrs2,50755,0,2019-03-22 12:55:41+00:00,[],
3202,https://github.com/ZaferCinar1/Game-of-Codes.git,2019-03-16 05:06:30+00:00,,0,ZaferCinar1/Game-of-Codes,175928772,SystemVerilog,Game-of-Codes,54,0,2019-03-16 05:13:33+00:00,[],
3203,https://github.com/henryw30/8bit_logic_processor.git,2019-02-11 04:48:18+00:00,,0,henryw30/8bit_logic_processor,170069561,SystemVerilog,8bit_logic_processor,3260,0,2019-02-15 03:30:16+00:00,[],
3204,https://github.com/sondre99v/TFE4171_Lab8.git,2019-02-11 15:41:28+00:00,Files for Lab 8 of Design of digital systems 2,0,sondre99v/TFE4171_Lab8,170154573,SystemVerilog,TFE4171_Lab8,130,0,2019-02-11 15:44:15+00:00,[],
3205,https://github.com/wheatg/ARM-64-bit-CPU.git,2019-02-21 05:49:39+00:00,,0,wheatg/ARM-64-bit-CPU,171808415,SystemVerilog,ARM-64-bit-CPU,32,0,2019-02-25 01:28:59+00:00,[],
3206,https://github.com/tec-tdg/Lab2.git,2019-02-20 17:38:32+00:00,,1,tec-tdg/Lab2,171720213,SystemVerilog,Lab2,9,0,2019-03-01 00:07:41+00:00,[],
3207,https://github.com/JosafatV/2D-Graphics-Processor.git,2019-04-05 15:27:38+00:00,First project of Computer Architecture 1 - I 2019,0,JosafatV/2D-Graphics-Processor,179707938,SystemVerilog,2D-Graphics-Processor,1389,0,2023-01-27 23:40:39+00:00,[],
3208,https://github.com/AlexsandroJ/Projetos.git,2019-04-18 12:25:08+00:00,,0,AlexsandroJ/Projetos,182083171,SystemVerilog,Projetos,2,0,2019-04-18 12:45:11+00:00,[],
3209,https://github.com/Chepelash/fpga_lab_B2.git,2019-04-20 10:14:36+00:00,,0,Chepelash/fpga_lab_B2,182390759,SystemVerilog,fpga_lab_B2,8,0,2019-05-01 16:24:46+00:00,[],
3210,https://github.com/HannesK1973/honeyextractor.git,2019-04-13 11:13:15+00:00,Iec 61131-3 Application for Honey Extractor  and Web Interface,0,HannesK1973/honeyextractor,181159253,SystemVerilog,honeyextractor,102,0,2019-06-25 10:17:31+00:00,[],
3211,https://github.com/aleel1597/Brick-Breaker.git,2019-03-11 01:43:56+00:00,,0,aleel1597/Brick-Breaker,174905781,SystemVerilog,Brick-Breaker,943,0,2019-03-11 01:45:30+00:00,[],
3212,https://github.com/ooorin/Mips-Pipeline-CPU.git,2019-03-06 08:13:45+00:00,"course project(Introduction to Computer System, Spring 2018)",0,ooorin/Mips-Pipeline-CPU,174101441,SystemVerilog,Mips-Pipeline-CPU,8,0,2019-03-06 08:25:55+00:00,[],
3213,https://github.com/hahahayden/CPE133.git,2019-04-02 04:54:10+00:00,Digital Design,0,hahahayden/CPE133,179001437,SystemVerilog,CPE133,14,0,2020-03-26 19:57:31+00:00,[],
3214,https://github.com/bertyu98/Pipelined-RISC-V-Processor-.git,2019-04-06 21:52:55+00:00, RISC V processor written in SystemVerilog,0,bertyu98/Pipelined-RISC-V-Processor-,179890647,SystemVerilog,Pipelined-RISC-V-Processor-,4516,0,2019-04-06 22:33:06+00:00,[],
3215,https://github.com/ajteh/Digital-Design.git,2019-05-13 06:09:12+00:00,"Repository for CPE 233, Includes assignments for 233 in System Verilog and Assembly language and Final Project",0,ajteh/Digital-Design,186355959,SystemVerilog,Digital-Design,28,0,2019-05-22 04:59:43+00:00,[],
3216,https://github.com/AlexanderRodgers/CPE133.git,2019-05-13 07:59:11+00:00,All the code that I wrote in CPE133,0,AlexanderRodgers/CPE133,186372710,SystemVerilog,CPE133,39,0,2019-06-12 03:33:54+00:00,[],
3217,https://github.com/whoami90506/dclab_lab3.git,2019-04-16 07:36:45+00:00,voice recorder implement on FPGA,0,whoami90506/dclab_lab3,181639007,SystemVerilog,dclab_lab3,6338,0,2019-05-01 12:04:23+00:00,[],
3218,https://github.com/Natan7/LOAC-2018.1.git,2018-08-21 20:43:57+00:00,"Trata-se da implementação de algumas instruções requisitadas na prova das tirinhas, da disciplina de Laboratório de Arquitetura de Computadores (LOAC).",0,Natan7/LOAC-2018.1,145617523,SystemVerilog,LOAC-2018.1,69,0,2018-08-21 20:51:17+00:00,[],
3219,https://github.com/ywwu928/DClab.git,2018-10-10 06:59:45+00:00,,0,ywwu928/DClab,152377476,SystemVerilog,DClab,1702,0,2018-11-20 14:06:37+00:00,[],
3220,https://github.com/kushanparikh/UVM_FIFO.git,2018-10-30 18:37:47+00:00,,0,kushanparikh/UVM_FIFO,155437769,SystemVerilog,UVM_FIFO,9,0,2018-10-30 18:48:48+00:00,[],
3221,https://github.com/plantvsbirds/ece385-lab6.git,2018-09-30 05:01:42+00:00,if ur in same class don't copy our code lol,0,plantvsbirds/ece385-lab6,150932144,SystemVerilog,ece385-lab6,5979,0,2018-10-10 00:45:45+00:00,[],
3222,https://github.com/hgh273747/sync_fifo.git,2018-09-28 09:46:07+00:00,,0,hgh273747/sync_fifo,150719475,SystemVerilog,sync_fifo,5,0,2019-01-15 09:43:30+00:00,[],
3223,https://github.com/debruynmonge/Segundo-Proyecto-Arquitecura-de-Computadores.git,2018-10-07 22:38:25+00:00,Este proyecto consiste en una memoria cache y su controlador de memoria cache.,0,debruynmonge/Segundo-Proyecto-Arquitecura-de-Computadores,151991429,SystemVerilog,Segundo-Proyecto-Arquitecura-de-Computadores,6688,0,2018-10-11 22:56:25+00:00,[],
3224,https://github.com/rsarwar87/de10-nano-ghrd-fb.git,2018-10-07 15:50:45+00:00,,0,rsarwar87/de10-nano-ghrd-fb,151957804,SystemVerilog,de10-nano-ghrd-fb,15697,0,2020-07-17 08:09:07+00:00,[],
3225,https://github.com/kewalraul/Computer-Architecture.git,2018-10-02 20:43:15+00:00,,1,kewalraul/Computer-Architecture,151320756,SystemVerilog,Computer-Architecture,25,0,2018-10-02 21:18:02+00:00,[],
3226,https://github.com/jpakula0296/MiniProject1.git,2018-09-11 21:22:08+00:00,,0,jpakula0296/MiniProject1,148381931,SystemVerilog,MiniProject1,1159,0,2018-09-18 21:24:39+00:00,[],
3227,https://github.com/sharonfeldman/sv-assertions-dolar-operator.git,2018-08-30 07:02:43+00:00,sv assetions - using ? operator,0,sharonfeldman/sv-assertions-dolar-operator,146709560,SystemVerilog,sv-assertions-dolar-operator,2,0,2018-08-30 07:10:53+00:00,[],
3228,https://github.com/joellone/Hydra.git,2018-11-05 05:18:53+00:00,My Work,0,joellone/Hydra,156164621,SystemVerilog,Hydra,7784,0,2021-01-26 04:12:42+00:00,[],
3229,https://github.com/tdaede/fx68k_hacked.git,2018-11-29 00:52:02+00:00,hacked version of fx68k to work with yosys,0,tdaede/fx68k_hacked,159585701,SystemVerilog,fx68k_hacked,59,0,2018-11-29 01:11:02+00:00,[],
3230,https://github.com/mabmatt11/ECE_551.git,2019-02-10 22:36:43+00:00,ECE 551 - Verilog Programming (Digital Design)/Segway FPGA,0,mabmatt11/ECE_551,170035378,SystemVerilog,ECE_551,50064,0,2019-02-10 22:46:21+00:00,[],
3231,https://github.com/shrtique/sv_trigger_gen.git,2018-12-20 09:07:57+00:00,"SV module. Use this module to generate trigger signal for python1300_ip_core. You could choose if trigger is external or an output of quad decoder module. Notice that we don't have any debouncing circuits here, only sync(two regs in a row for external trigger)",0,shrtique/sv_trigger_gen,162554212,SystemVerilog,sv_trigger_gen,4,0,2018-12-20 09:20:23+00:00,[],
3232,https://github.com/REC4N/Nibbler-4-bit-CPU.git,2018-11-11 21:16:28+00:00,Implementation of the Nibbler 4 bit CPU in Icarus Verilog. Credit for Steve Chamberlin on https://www.bigmessowires.com/nibbler/ for the design.,0,REC4N/Nibbler-4-bit-CPU,157121992,SystemVerilog,Nibbler-4-bit-CPU,55,0,2019-05-13 16:47:18+00:00,[],
3233,https://github.com/jakemcdermott/sby-examples.git,2018-11-24 22:33:38+00:00,System Verilog Test Automation,0,jakemcdermott/sby-examples,158979062,SystemVerilog,sby-examples,7,0,2018-11-26 19:32:35+00:00,"['systemverilog', 'verilog', 'hdl', 'test-automation']",
3234,https://github.com/mkkelley/umix-hdl.git,2018-11-18 18:25:03+00:00,The UMIX (ICFP 2006) Computer implemented in SystemVerilog,0,mkkelley/umix-hdl,158113884,SystemVerilog,umix-hdl,46,0,2019-07-09 01:06:46+00:00,[],
3235,https://github.com/farshad112/clock_divider.git,2018-11-18 12:02:15+00:00,Clock divider module designed using System Verilog. ,1,farshad112/clock_divider,158079284,SystemVerilog,clock_divider,25,0,2019-11-03 05:01:55+00:00,[],https://api.github.com/licenses/mit
3236,https://github.com/gramya27/Design-and-Verification-of-APB-Protocol.git,2018-10-11 18:01:35+00:00,,2,gramya27/Design-and-Verification-of-APB-Protocol,152633987,SystemVerilog,Design-and-Verification-of-APB-Protocol,69,0,2018-10-11 18:02:48+00:00,[],
3237,https://github.com/architbajpai/RRA.git,2019-01-01 06:28:11+00:00,,0,architbajpai/RRA,163717502,SystemVerilog,RRA,1,0,2019-01-01 06:29:44+00:00,[],
3238,https://github.com/grantneuman/mastermind.git,2018-12-28 19:45:28+00:00,,0,grantneuman/mastermind,163444187,SystemVerilog,mastermind,18,0,2018-12-28 19:48:02+00:00,[],
3239,https://github.com/joo-ji/Acoustic-Fingerprinting.git,2018-12-08 06:55:08+00:00,a project built using Verilog and implemented on the Nexys-4 DDR FPGA board,0,joo-ji/Acoustic-Fingerprinting,160912840,SystemVerilog,Acoustic-Fingerprinting,7,0,2018-12-08 07:01:31+00:00,[],https://api.github.com/licenses/mit
3240,https://github.com/jonathanrainer/Godai.git,2018-12-13 11:41:16+00:00,An augmented version of the RI5CY processor that can be traced by the other components in the repository,1,jonathanrainer/Godai,161630644,SystemVerilog,Godai,883,0,2020-03-08 16:45:32+00:00,[],
3241,https://github.com/keithczq/ece551finalproject.git,2018-12-13 08:15:28+00:00,Handwritten Digit Recogniser: ECE551 Digital Synthesis & Design Final Project ,0,keithczq/ece551finalproject,161606042,SystemVerilog,ece551finalproject,58490,0,2018-12-13 08:18:07+00:00,[],
3242,https://github.com/pulp-platform/apb_efuse_if.git,2018-12-04 08:46:29+00:00,APB based interface to eFUSE macros,2,pulp-platform/apb_efuse_if,160326317,SystemVerilog,apb_efuse_if,37,0,2019-10-02 14:23:47+00:00,[],
3243,https://github.com/begeli/GameOfCode.git,2018-12-31 10:54:51+00:00,A memory game with a pretentious name.,0,begeli/GameOfCode,163661598,SystemVerilog,GameOfCode,31,0,2018-12-31 11:36:39+00:00,[],
3244,https://github.com/architbajpai/LC3.git,2018-12-25 04:18:17+00:00,,0,architbajpai/LC3,163045489,SystemVerilog,LC3,13,0,2018-12-25 04:59:21+00:00,[],
3245,https://github.com/sltm-14/clk_divider.git,2019-02-17 19:17:43+00:00,Tarea: clk_divider,0,sltm-14/clk_divider,171161682,SystemVerilog,clk_divider,51,0,2019-09-24 20:08:22+00:00,[],
3246,https://github.com/ooorin/Mips-Multi-Cycle-CPU.git,2019-03-06 08:09:27+00:00,"course project(Introduction to Computer System, Spring 2018)",0,ooorin/Mips-Multi-Cycle-CPU,174100748,SystemVerilog,Mips-Multi-Cycle-CPU,8,0,2019-03-06 16:03:04+00:00,[],
3247,https://github.com/cgriff32/RISC_V.git,2019-03-25 15:12:23+00:00,,0,cgriff32/RISC_V,177610872,SystemVerilog,RISC_V,4945,0,2020-10-24 21:24:05+00:00,[],
3248,https://github.com/chinnikrishna/conveng.git,2019-04-01 14:48:30+00:00,,0,chinnikrishna/conveng,178884892,SystemVerilog,conveng,26,0,2020-02-20 22:04:42+00:00,[],
3249,https://github.com/rag1404/Fibonacci-series.git,2019-04-08 05:33:37+00:00,Fibonacci series in system verilog,0,rag1404/Fibonacci-series,180076613,SystemVerilog,Fibonacci-series,1,0,2019-04-08 05:36:37+00:00,[],
3250,https://github.com/danielpacr/Secuencias-ALU-y-MBC.git,2019-03-28 02:19:54+00:00,Secuencias para poner a prueba los módulos de la ALU y MBC de la micro-arquitectura RISC-V,0,danielpacr/Secuencias-ALU-y-MBC,178109392,SystemVerilog,Secuencias-ALU-y-MBC,13611,0,2019-03-28 03:20:15+00:00,[],
3251,https://github.com/Chepelash/fpga_lab_A2.git,2019-03-26 22:47:59+00:00,,0,Chepelash/fpga_lab_A2,177880016,SystemVerilog,fpga_lab_A2,11,0,2019-03-27 20:06:00+00:00,[],
3252,https://github.com/Imads608/Sobel_Edge_Detection.git,2019-03-03 04:02:15+00:00,,0,Imads608/Sobel_Edge_Detection,173528745,SystemVerilog,Sobel_Edge_Detection,452,0,2019-03-03 04:05:41+00:00,[],
3253,https://github.com/budude2/Parking-Lot-Problem.git,2019-04-23 15:25:36+00:00,,0,budude2/Parking-Lot-Problem,183043655,SystemVerilog,Parking-Lot-Problem,12,0,2019-04-24 20:50:23+00:00,[],
3254,https://github.com/dudasenna/infrahardpronto.git,2019-04-17 19:46:43+00:00,,2,dudasenna/infrahardpronto,181958035,SystemVerilog,infrahardpronto,202,0,2019-04-29 12:50:25+00:00,[],
3255,https://github.com/burneyh/single-cycle-mips.git,2019-05-13 12:31:16+00:00,A sincgle cycle MIPS processor written in SystemVerilog.,0,burneyh/single-cycle-mips,186415780,SystemVerilog,single-cycle-mips,9,0,2020-09-24 14:09:00+00:00,[],https://api.github.com/licenses/mit
3256,https://github.com/lowRISC/opentitan.git,2019-08-26 16:30:16+00:00,OpenTitan: Open source silicon root of trust,690,lowRISC/opentitan,204516692,SystemVerilog,opentitan,136162,2340,2024-04-12 04:58:27+00:00,[],https://api.github.com/licenses/apache-2.0
3257,https://github.com/hdl-util/hdmi.git,2019-08-17 00:13:07+00:00,Send video/audio over HDMI on an FPGA,106,hdl-util/hdmi,202815014,SystemVerilog,hdmi,4327,1002,2024-04-09 23:48:47+00:00,"['hdmi', 'fpga', 'dvi', 'audio', 'video', 'systemverilog', 'hdlmake', 'quartus', 'altera', 'xilinx', 'intel', 'vivado']",
3258,https://github.com/chipsalliance/Cores-VeeR-EH1.git,2019-06-02 06:32:38+00:00,VeeR EH1 core,205,chipsalliance/Cores-VeeR-EH1,189812971,SystemVerilog,Cores-VeeR-EH1,18465,771,2024-04-10 08:36:19+00:00,"['processor', 'risc', 'riscv', 'risc-v', 'fusesoc', 'verilator', 'western-digital', 'open-source-hardware', 'rtl', 'fpga', 'asic-design', 'riscv32', 'ahb-lite', 'axi4', 'veer']",https://api.github.com/licenses/apache-2.0
3259,https://github.com/chipsalliance/sv-tests.git,2019-08-08 16:45:56+00:00,Test suite designed to check compliance with the SystemVerilog standard.,67,chipsalliance/sv-tests,201299456,SystemVerilog,sv-tests,11553,257,2024-03-20 17:15:01+00:00,"['systemverilog', 'symbiflow', 'verilog', 'hdl', 'rtl', 'compliance-testing']",https://api.github.com/licenses/isc
3260,https://github.com/risclite/SuperScalar-RISCV-CPU.git,2019-05-23 06:16:10+00:00,"SSRV(Super-Scalar RISC-V) --- Super-scalar out-of-order RV32IMC CPU core, 6.4 CoreMark/MHz.",37,risclite/SuperScalar-RISCV-CPU,188172879,SystemVerilog,SuperScalar-RISCV-CPU,5935,176,2024-04-12 21:09:06+00:00,[],
3261,https://github.com/courageheart/AMBA_APB_SRAM.git,2019-05-21 02:54:35+00:00,AMBA v.3 APB v.1 Specification Complaint Slave SRAM Core design and testbench. The testbench is developed using System Verilog and UVM and can be used as standalone Verification IP (VIP). ,54,courageheart/AMBA_APB_SRAM,187750665,SystemVerilog,AMBA_APB_SRAM,503,134,2024-04-11 18:21:31+00:00,[],https://api.github.com/licenses/mit
3262,https://github.com/loykylewong/FPGA-Application-Development-and-Simulation.git,2019-05-31 09:33:45+00:00,《FPGA应用开发和仿真》（机械工业出版社2018年第1版 ISBN:9787111582786）的源码。Source Code of the book FPGA Application Development and Simulation(CHS).,27,loykylewong/FPGA-Application-Development-and-Simulation,189568063,SystemVerilog,FPGA-Application-Development-and-Simulation,8796,112,2024-04-01 09:45:38+00:00,"['fpga', 'verilog', 'systemverilog', 'digital-signal-processing', 'dsp', 'modelsim', 'axi4', 'uart', 'spi', 'i2c', 'i2s', 'dds', 'cordic', 'fft', 'fir', 'iir', 'cic', 'modulation', 'qam', 'adpll']",https://api.github.com/licenses/mit
3263,https://github.com/chipfail/chipfail-glitcher.git,2019-08-21 11:50:47+00:00,,17,chipfail/chipfail-glitcher,203573456,SystemVerilog,chipfail-glitcher,68,66,2024-04-02 11:49:17+00:00,[],
3264,https://github.com/grayresearch/CX.git,2019-08-02 15:31:22+00:00,Proposed RISC-V Composable Custom Extensions Specification,11,grayresearch/CX,200258460,SystemVerilog,CX,36448,59,2024-04-11 16:29:25+00:00,[],https://api.github.com/licenses/apache-2.0
3265,https://github.com/fpgasystems/davos.git,2019-09-17 10:33:58+00:00,Distributed Accelerator OS,23,fpgasystems/davos,209025898,SystemVerilog,davos,8277,58,2024-03-29 05:34:19+00:00,[],
3266,https://github.com/supranational/vdf-fpga.git,2019-06-21 20:19:38+00:00,Implementation of an RSA VDF evaluator targeting FPGAs.,12,supranational/vdf-fpga,193155630,SystemVerilog,vdf-fpga,625,46,2023-07-27 02:26:07+00:00,[],
3267,https://github.com/microsoft/DUA.git,2019-06-18 08:48:32+00:00,"DUA, is a communication architecture that provides uniform access for FPGA to data center resources. Without being limited by machine boundaries, DUA provides global names and a common interface for communicating across various resources, the underlying network automatically routing traffic and managing resource multiplexing.",11,microsoft/DUA,192502002,SystemVerilog,DUA,68,37,2023-11-16 00:40:16+00:00,[],https://api.github.com/licenses/mit
3268,https://github.com/diwu1990/UnarySim.git,2019-08-18 19:23:09+00:00,"This is a general-purpose simulator for unary computing based on PyTorch, with the paper accepted to ISCA 2020 and awarded IEEE Micro Top Pick for 2020.",8,diwu1990/UnarySim,203047077,SystemVerilog,UnarySim,17893,36,2024-03-24 06:08:59+00:00,"['simulation', 'stochastic-computing', 'temporal-computing', 'rate-coding', 'temporal-coding']",https://api.github.com/licenses/mit
3269,https://github.com/name1e5s/Sirius.git,2019-06-12 13:18:13+00:00,Asymmetric dual issue in-order microprocessor.,12,name1e5s/Sirius,191574673,SystemVerilog,Sirius,220,34,2023-09-18 03:08:51+00:00,[],https://api.github.com/licenses/gpl-3.0
3270,https://github.com/vishal1303/PIEO-Scheduler.git,2019-06-24 23:41:30+00:00,"A Fast, Scalable and Programmable Packet Scheduler in Hardware",9,vishal1303/PIEO-Scheduler,193596948,SystemVerilog,PIEO-Scheduler,25,33,2023-11-08 03:26:34+00:00,[],
3271,https://github.com/kvablack/fpga-flight-controller.git,2019-07-15 23:55:15+00:00,"Final project for CS 429H (computer architecture), fall freshman year. Built over the course of 2 weeks.",4,kvablack/fpga-flight-controller,197087676,SystemVerilog,fpga-flight-controller,8756,31,2024-03-27 10:42:02+00:00,[],
3272,https://github.com/seabeam/yuu_apb.git,2019-06-26 14:59:00+00:00,"UVM APB VIP, part of AMBA3&AMBA4 feature supported",8,seabeam/yuu_apb,193926527,SystemVerilog,yuu_apb,67,25,2024-03-19 05:34:35+00:00,[],https://api.github.com/licenses/mit
3273,https://github.com/avashist003/UVM_Verification.git,2019-05-19 00:37:34+00:00,"Advance UVM testbench with DPI integration, Assertions, Functional Coverage andHierarchical Sequence",6,avashist003/UVM_Verification,187418171,SystemVerilog,UVM_Verification,25,23,2024-03-26 18:46:28+00:00,[],
3274,https://github.com/PacoReinaCampo/MPSoC-NoC.git,2019-09-30 04:39:44+00:00,Network on Chip for MPSoC,7,PacoReinaCampo/MPSoC-NoC,211776467,SystemVerilog,MPSoC-NoC,26073,21,2024-04-12 02:44:02+00:00,"['noc', 'mesh-2d', 'mesh-3d']",https://api.github.com/licenses/mit
3275,https://github.com/jiegec/verilog-format.git,2019-09-19 00:57:43+00:00,A naive verilog/systemverilog formatter,2,jiegec/verilog-format,209431485,SystemVerilog,verilog-format,63,20,2023-06-19 08:14:06+00:00,[],https://api.github.com/licenses/mit
3276,https://github.com/hossein1387/pito_riscv.git,2019-07-17 17:47:26+00:00,A Barrel design of RV32I,5,hossein1387/pito_riscv,197436646,SystemVerilog,pito_riscv,1258,19,2024-03-24 05:56:08+00:00,"['risc-v', 'riscv', 'fpga', 'systemverilog', 'machine-learning']",https://api.github.com/licenses/mit
3277,https://github.com/nguyenquanicd/UvmEnvUartApb.git,2019-08-03 02:24:20+00:00,This is the UVM environment for UART-APB IP core. This environment contains full UVM components. It is only used for studing and invetigating the UVM env.,4,nguyenquanicd/UvmEnvUartApb,200321840,SystemVerilog,UvmEnvUartApb,9078,17,2024-03-30 14:57:11+00:00,[],
3278,https://github.com/PacoReinaCampo/PU-RISCV.git,2019-09-30 04:39:04+00:00,Processing Unit with RISCV-32 / RISCV-64 / RISCV-128,7,PacoReinaCampo/PU-RISCV,211776391,SystemVerilog,PU-RISCV,59770,16,2024-01-08 22:37:10+00:00,"['risc-v', '32-bit', '64-bit', 'harvard-architecture', 'pu']",https://api.github.com/licenses/mit
3279,https://github.com/OFS/ofs-platform-afu-bbb.git,2019-06-07 18:05:27+00:00,OFS Platform Components,9,OFS/ofs-platform-afu-bbb,190788088,SystemVerilog,ofs-platform-afu-bbb,2031,13,2024-01-24 19:22:57+00:00,[],https://api.github.com/licenses/mit
3280,https://github.com/sld-columbia/esp-caches.git,2019-09-21 19:41:24+00:00,SystemVerilog overhaul of ESP L2 and LLC caches with directory based protocol,4,sld-columbia/esp-caches,210043764,SystemVerilog,esp-caches,676,13,2024-03-23 00:06:42+00:00,[],https://api.github.com/licenses/apache-2.0
3281,https://github.com/hackdac/hackdac_2018_beta.git,2019-08-07 17:40:03+00:00,The SoC used for the beta phase of Hack@DAC 2018.,6,hackdac/hackdac_2018_beta,201098413,SystemVerilog,hackdac_2018_beta,23144,13,2023-11-16 03:02:11+00:00,[],
3282,https://github.com/verilator/verilator_ext_tests.git,2019-06-15 12:34:26+00:00,Extended and external tests for Verilator testing,9,verilator/verilator_ext_tests,192076618,SystemVerilog,verilator_ext_tests,140,12,2022-12-04 14:24:38+00:00,['verilator'],https://api.github.com/licenses/lgpl-3.0
3283,https://github.com/PacoReinaCampo/MPSoC-DMA.git,2019-09-30 04:40:44+00:00,Direct Access Memory for MPSoC,5,PacoReinaCampo/MPSoC-DMA,211776557,SystemVerilog,MPSoC-DMA,19697,12,2024-03-27 02:13:53+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
3284,https://github.com/A-T-Kristensen/simple-alu-uvm.git,2019-07-23 11:23:07+00:00,This is full tutorial of UVM (Universal Verification Methodology) for a simple ALU unit,9,A-T-Kristensen/simple-alu-uvm,198416030,SystemVerilog,simple-alu-uvm,3590,10,2023-10-07 11:23:04+00:00,[],
3285,https://github.com/PacoReinaCampo/verilog2vhdl.git,2019-09-30 04:38:30+00:00,Hardware Description Language Translator,3,PacoReinaCampo/verilog2vhdl,211776328,SystemVerilog,verilog2vhdl,12406,10,2024-03-09 10:58:29+00:00,['eda'],https://api.github.com/licenses/mit
3286,https://github.com/rggen/rggen-sv-rtl.git,2019-07-17 14:59:41+00:00,Common SystemVerilog RTL modules for RgGen,3,rggen/rggen-sv-rtl,197411172,SystemVerilog,rggen-sv-rtl,92,10,2024-01-18 02:15:19+00:00,"['systemverilog', 'rtl', 'apb', 'axi4', 'axi']",https://api.github.com/licenses/mit
3287,https://github.com/AbhishekTaur/System-Verilog-Practice.git,2019-09-27 05:51:54+00:00,Repository for system verilog labs from cadence,5,AbhishekTaur/System-Verilog-Practice,211245567,SystemVerilog,System-Verilog-Practice,89,10,2024-03-29 06:55:49+00:00,"['systemverilog', 'cadence', 'cadence-incisive', 'verilog']",
3288,https://github.com/adibis/uvmBasics.git,2019-07-02 03:45:53+00:00,Basics of UVM via an APB slave,2,adibis/uvmBasics,194783997,SystemVerilog,uvmBasics,28,9,2024-02-07 10:51:56+00:00,"['uvm', 'systemverilog', 'verification', 'verification-methodologies', 'vlsi']",
3289,https://github.com/pulp-platform/hier-icache.git,2019-09-23 12:11:00+00:00,,9,pulp-platform/hier-icache,210346175,SystemVerilog,hier-icache,2838,9,2024-01-24 02:26:04+00:00,[],
3290,https://github.com/chandanpalai/SystemVerilog-Assertions.git,2019-09-25 13:43:43+00:00,Examples of assertions used in SystemVerilog. Made for udemy course by M. Ramdas,1,chandanpalai/SystemVerilog-Assertions,210855541,SystemVerilog,SystemVerilog-Assertions,3,8,2024-01-28 16:18:12+00:00,[],
3291,https://github.com/seabeam/yuu_common.git,2019-06-09 14:35:50+00:00,Common SV utils library,5,seabeam/yuu_common,191017202,SystemVerilog,yuu_common,22,8,2024-01-15 03:57:28+00:00,[],https://api.github.com/licenses/mit
3292,https://github.com/GeorgeSangillo/ARM-Single-Cycle-Processor.git,2019-05-22 21:01:41+00:00,Design and simulate a simplified ARM single-cycle processor using SystemVerilog.,1,GeorgeSangillo/ARM-Single-Cycle-Processor,188113189,SystemVerilog,ARM-Single-Cycle-Processor,13,7,2023-12-05 20:49:46+00:00,[],
3293,https://github.com/PacoReinaCampo/MPSoC-RISCV.git,2019-09-30 04:41:33+00:00,Multi-Processor System on Chip with RISCV-32 / RISCV-64 / RISCV-128,5,PacoReinaCampo/MPSoC-RISCV,211776655,SystemVerilog,MPSoC-RISCV,29910,7,2024-03-21 21:18:21+00:00,"['risc-v', 'mimd', 'mpsoc']",https://api.github.com/licenses/mit
3294,https://github.com/PedroHSCavalcante/uvm-phase-jumping.git,2019-09-20 18:28:31+00:00,Simple UVM phase jumping,4,PedroHSCavalcante/uvm-phase-jumping,209856317,SystemVerilog,uvm-phase-jumping,97,7,2023-04-04 03:08:18+00:00,"['uvm', 'systemverilog', 'verification', 'microelectronics', 'on-the-fly', 'reset', 'phase-jump']",
3295,https://github.com/scp10086/FPGA_UNDERWAY_SALES_MACHINE.git,2019-08-26 06:53:29+00:00,这是东南大学信息科学与工程学院大三短学期的FPGA开发，我们要做一个南京地铁售票机,2,scp10086/FPGA_UNDERWAY_SALES_MACHINE,204414658,SystemVerilog,FPGA_UNDERWAY_SALES_MACHINE,6899,7,2023-11-04 10:37:07+00:00,[],https://api.github.com/licenses/mit
3296,https://github.com/AlessandroCilardo/NaplesPU.git,2019-06-26 13:57:28+00:00,The official NaplesPU hardware code repository,3,AlessandroCilardo/NaplesPU,193915270,SystemVerilog,NaplesPU,579,7,2024-02-18 15:03:37+00:00,[],https://api.github.com/licenses/bsd-3-clause
3297,https://github.com/kennych418/FPGA_AudioVisualizer.git,2019-08-23 01:20:00+00:00,Using an Altera DE10-Lite FPGA development board to simulate an FFT processor. Audio input frequencies will be visualized onto a VGA display.,1,kennych418/FPGA_AudioVisualizer,203899926,SystemVerilog,FPGA_AudioVisualizer,232059,6,2024-03-22 10:19:49+00:00,[],
3298,https://github.com/david-fong/Sudoku-SV.git,2019-09-21 02:23:29+00:00,Goal: Write an even higher performing solution generator,1,david-fong/Sudoku-SV,209912211,SystemVerilog,Sudoku-SV,466,6,2024-02-11 04:42:22+00:00,"['sudoku', 'sudoku-generator', 'systemverilog']",https://api.github.com/licenses/mit
3299,https://github.com/mrLSD/riscv-cpu.git,2019-07-26 20:40:23+00:00,RISC-V five stage pipline CPU,0,mrLSD/riscv-cpu,199077438,SystemVerilog,riscv-cpu,7,5,2023-03-24 05:13:55+00:00,"['cpu', 'risc-v', 'risc-processor', 'system-verilog', 'pipline']",https://api.github.com/licenses/apache-2.0
3300,https://github.com/rggen/rggen-sv-ral.git,2019-07-19 07:51:09+00:00,UVM RAL class package for RgGen,1,rggen/rggen-sv-ral,197727903,SystemVerilog,rggen-sv-ral,49,5,2023-11-17 14:33:09+00:00,"['systemverilog', 'uvm', 'ral', 'uvm-ral-model', 'uvm-register-model']",https://api.github.com/licenses/mit
3301,https://github.com/matandalmeida/gcd_uvm.git,2019-08-16 11:42:50+00:00,Basic UVM environment for GCD IP,1,matandalmeida/gcd_uvm,202717730,SystemVerilog,gcd_uvm,242,5,2022-06-08 15:51:31+00:00,[],
3303,https://github.com/CASR-HKU/ftdnn.git,2019-08-11 06:48:35+00:00,FPGA-tailored DNN,1,CASR-HKU/ftdnn,201728702,SystemVerilog,ftdnn,995,5,2024-03-15 12:02:24+00:00,[],
3304,https://github.com/seabeam/yuu_amba.git,2019-06-13 16:03:40+00:00,UVM amba infrastructure,3,seabeam/yuu_amba,191794203,SystemVerilog,yuu_amba,14,5,2024-01-15 03:57:37+00:00,[],https://api.github.com/licenses/mit
3305,https://github.com/RobertBaruch/vz80core.git,2019-08-02 21:36:16+00:00,,2,RobertBaruch/vz80core,200300638,SystemVerilog,vz80core,583,4,2023-04-29 22:38:29+00:00,[],
3306,https://github.com/zhouzaixin/Documents_for_ic.git,2019-05-31 02:04:36+00:00,,2,zhouzaixin/Documents_for_ic,189510662,SystemVerilog,Documents_for_ic,215562,4,2024-01-30 07:09:30+00:00,[],
3307,https://github.com/cpuex2019-7th/core.git,2019-09-24 07:10:28+00:00,RISC-V (rv32imf) CPU implemented in System Verilog for cpuex2019@UTokyo,2,cpuex2019-7th/core,210535865,SystemVerilog,core,892,4,2024-04-08 21:59:21+00:00,[],
3308,https://github.com/Luke7412/IpLibrary.git,2019-06-13 18:33:50+00:00,Library containing various VHDL IPs,0,Luke7412/IpLibrary,191814785,SystemVerilog,IpLibrary,514,4,2024-01-06 17:37:45+00:00,"['ip-xact', 'vivado', 'xilinx', 'arty-a7', 'ipxact', 'ip', 'rtl', 'systemverilog', 'packaged-ip']",https://api.github.com/licenses/mit
3309,https://github.com/PacoReinaCampo/SoC-MSP430.git,2019-09-30 04:36:14+00:00,System on Chip with MSP430-16,3,PacoReinaCampo/SoC-MSP430,211776100,SystemVerilog,SoC-MSP430,15485,4,2023-10-16 16:23:55+00:00,"['msp430', 'misd', 'simd', 'soc']",https://api.github.com/licenses/mit
3310,https://github.com/bsdevlin/vdf-fpga.git,2019-08-14 14:48:15+00:00,"A low latency modulo squaring algorithm using Montgomery multiplication, submitted to the VDF FPGA design competition, targeting AWS FPGAs. Was awarded first prize for lowest latency in alternative approaches category.",5,bsdevlin/vdf-fpga,202370755,SystemVerilog,vdf-fpga,906,4,2023-07-16 12:39:21+00:00,[],
3311,https://github.com/Kayannsoarez/NoCs-SoCs.git,2019-09-09 13:20:08+00:00,Networks-on-Chip(NoCs) and Systems-on-Chip(SoCs).,1,Kayannsoarez/NoCs-SoCs,207313854,SystemVerilog,NoCs-SoCs,877,4,2023-06-17 09:01:45+00:00,[],
3312,https://github.com/mustafabbas/lid_for_fpgas.git,2019-09-26 10:56:26+00:00,Parameterizable latency insensitive Design Styles for FPGAs,2,mustafabbas/lid_for_fpgas,211067651,SystemVerilog,lid_for_fpgas,279,4,2023-09-28 11:06:36+00:00,[],https://api.github.com/licenses/mit
3313,https://github.com/kitsuneh/SVGameBoy.git,2019-08-12 18:16:02+00:00,A systemVerilog implementation of Game Boy on DE1-SoC,16,kitsuneh/SVGameBoy,201984962,SystemVerilog,SVGameBoy,5469,4,2023-11-06 03:47:18+00:00,[],
3314,https://github.com/smartsystemslab-uf/SES-Lab-tutorials.git,2019-08-27 19:31:41+00:00,,2,smartsystemslab-uf/SES-Lab-tutorials,204776031,SystemVerilog,SES-Lab-tutorials,30686,3,2024-01-18 03:38:29+00:00,[],
3315,https://github.com/deslib/xriscv.git,2019-08-28 05:27:58+00:00,A systemveriog implemented risc-v. Including a emulator written with C,1,deslib/xriscv,204854875,SystemVerilog,xriscv,216,3,2020-08-12 06:42:09+00:00,[],https://api.github.com/licenses/mit
3316,https://github.com/larrtang/RISC-V-processor.git,2019-08-04 20:22:24+00:00,"Processor written in System Verilog. 5 staged piplining, L1 and L2 cache with EWB, tournament branch predictor and BTB",0,larrtang/RISC-V-processor,200538013,SystemVerilog,RISC-V-processor,41,3,2022-11-18 01:50:39+00:00,[],
3317,https://github.com/abdo1819/fpu.git,2019-06-12 14:45:00+00:00,design of floating point arithmetic unit with verlog,1,abdo1819/fpu,191590115,SystemVerilog,fpu,2015,3,2021-01-01 13:20:16+00:00,[],
3318,https://github.com/zion-group/ZionBasicCircuitLib.git,2019-07-24 08:52:30+00:00,This is a library for basic circuit element.,0,zion-group/ZionBasicCircuitLib,198596227,SystemVerilog,ZionBasicCircuitLib,99,3,2019-12-19 02:45:25+00:00,[],https://api.github.com/licenses/mit
3319,https://github.com/10611anil/functional-hardware-verification-of-8-bit-calculator.git,2019-07-03 15:36:36+00:00,Implemented verification environment in system verilog by using UVM(Universal Verification Methodology).,0,10611anil/functional-hardware-verification-of-8-bit-calculator,195082844,SystemVerilog,functional-hardware-verification-of-8-bit-calculator,7,3,2023-07-12 10:37:20+00:00,[],
3320,https://github.com/alanswx/Arcade-BattleZone_MiSTer.git,2019-06-17 20:38:33+00:00,,1,alanswx/Arcade-BattleZone_MiSTer,192415479,SystemVerilog,Arcade-BattleZone_MiSTer,11755,3,2023-03-18 07:19:23+00:00,[],
3321,https://github.com/NickSica/RISC-V-CPU.git,2019-06-25 21:22:55+00:00,A RISC-V CPU built in SystemVerilog for use in the DISCO Lab,0,NickSica/RISC-V-CPU,193785213,SystemVerilog,RISC-V-CPU,26637,3,2024-02-11 04:38:46+00:00,['systemverilog'],https://api.github.com/licenses/gpl-3.0
3322,https://github.com/zbnt/hardware.git,2019-08-24 23:25:15+00:00,"Hardware cores for generating, capturing and modifying network traffic using Xilinx FPGAs/SoCs",1,zbnt/hardware,204223426,SystemVerilog,hardware,1277,3,2024-03-28 16:27:16+00:00,"['systemverilog', 'hdl', 'networking', 'xilinx-fpga']",https://api.github.com/licenses/mpl-2.0
3323,https://github.com/um-chips/poc_chip.git,2019-06-07 04:42:26+00:00,Proof-of-concept chiplet with AIB interface,1,um-chips/poc_chip,190688949,SystemVerilog,poc_chip,94,3,2022-10-28 05:42:15+00:00,[],https://api.github.com/licenses/apache-2.0
3324,https://github.com/PedroHSCavalcante/env-mult-clk-domain.git,2019-09-19 16:13:49+00:00,Environment for multiple clock domains,2,PedroHSCavalcante/env-mult-clk-domain,209597514,SystemVerilog,env-mult-clk-domain,13,3,2024-03-15 21:40:52+00:00,"['uvm', 'systemverilog', 'verification']",
3325,https://github.com/UofT-HPRC/fpga_virtualization.git,2019-09-10 04:06:06+00:00,FPGA Virtualization and NMU Source,4,UofT-HPRC/fpga_virtualization,207462611,SystemVerilog,fpga_virtualization,704,3,2023-08-02 06:52:05+00:00,[],https://api.github.com/licenses/mit
3326,https://github.com/vegaluisjose/tvm-tsim-accelerators.git,2019-09-09 01:43:11+00:00,,1,vegaluisjose/tvm-tsim-accelerators,207200914,SystemVerilog,tvm-tsim-accelerators,139,3,2022-08-08 04:50:19+00:00,[],
3327,https://github.com/3vm/dsn_verif.git,2019-06-26 04:39:21+00:00,Open source design and verification for chipping,1,3vm/dsn_verif,193830488,SystemVerilog,dsn_verif,5868,3,2022-12-01 03:01:03+00:00,[],
3328,https://github.com/jsagoe1/Verilog-SystemVerilog.git,2019-09-25 22:31:29+00:00,Personal Verilog Codes,0,jsagoe1/Verilog-SystemVerilog,210952349,SystemVerilog,Verilog-SystemVerilog,159,3,2023-12-16 10:59:27+00:00,[],
3329,https://github.com/mateuspinto/de2115-simple-mips-without-pipeline.git,2019-05-24 22:54:52+00:00,A complete hardware description of a non-pipeline MIPS processor in SystemVerilog that can execute integer assembly code implemented on the Altera DE2-115 FPGA.,0,mateuspinto/de2115-simple-mips-without-pipeline,188496462,SystemVerilog,de2115-simple-mips-without-pipeline,76090,3,2023-10-12 07:33:34+00:00,"['fpga', 'de2-115', 'mips', 'systemverilog']",
3330,https://github.com/sh-vlad/FPGA_real_time_depth_estimation_based_on_neural_network.git,2019-06-07 18:34:41+00:00,,1,sh-vlad/FPGA_real_time_depth_estimation_based_on_neural_network,190791750,SystemVerilog,FPGA_real_time_depth_estimation_based_on_neural_network,64281,3,2019-11-01 03:07:03+00:00,[],
3331,https://github.com/kruegz/cpu.git,2019-09-08 21:00:31+00:00,CPU design with SystemVerilog/UVM verification,2,kruegz/cpu,207172942,SystemVerilog,cpu,14,3,2023-04-05 11:04:11+00:00,[],
3332,https://github.com/appledore22/ALU_Verification_IP.git,2019-08-02 06:02:00+00:00,Verification IP for ALU written using SystemVerilog (UVM),2,appledore22/ALU_Verification_IP,200174771,SystemVerilog,ALU_Verification_IP,241,3,2023-06-02 06:44:55+00:00,[],https://api.github.com/licenses/mit
3333,https://github.com/anea-11/apb2spi-module-verification.git,2019-08-06 00:32:36+00:00,Complete verification environment. APB UVC. SPI UVC. RTL design not included,3,anea-11/apb2spi-module-verification,200747924,SystemVerilog,apb2spi-module-verification,54,3,2024-03-17 01:07:08+00:00,[],
3334,https://github.com/Lian0123/HardFuzzyCtl.git,2019-08-12 16:36:11+00:00,硬體模糊控制器基本測試案例(測試用專案上傳),0,Lian0123/HardFuzzyCtl,201969442,SystemVerilog,HardFuzzyCtl,20250,2,2023-08-04 08:02:00+00:00,[],
3335,https://github.com/CLDXiang/multi-cycle-MIPS.git,2019-05-21 13:58:18+00:00,体系结构实验：多周期MIPS处理器,0,CLDXiang/multi-cycle-MIPS,187848417,SystemVerilog,multi-cycle-MIPS,22,2,2023-05-07 07:40:07+00:00,[],
3336,https://github.com/PedroHSCavalcante/mult-dut-parl-stim.git,2019-08-19 12:45:29+00:00,Multiple DUT with parallel stimulus,2,PedroHSCavalcante/mult-dut-parl-stim,203171213,SystemVerilog,mult-dut-parl-stim,47,2,2022-05-06 03:36:55+00:00,"['uvm', 'verification', 'system-verilog']",
3337,https://github.com/kohutw1/rtl_design_samples.git,2019-09-13 21:16:56+00:00,A repository to store RTL design samples that I've developed.,0,kohutw1/rtl_design_samples,208348049,SystemVerilog,rtl_design_samples,3268,2,2022-03-24 00:16:49+00:00,[],
3338,https://github.com/AlAlves/mriscvcore-Yosysbundle.git,2019-06-25 08:12:57+00:00,Formal proof of mriscvcore using riscv-formal,0,AlAlves/mriscvcore-Yosysbundle,193664304,SystemVerilog,mriscvcore-Yosysbundle,5,2,2024-01-16 01:54:52+00:00,[],
3339,https://github.com/Dmitriy0111/verification_examples.git,2019-06-27 14:35:37+00:00,,0,Dmitriy0111/verification_examples,194111653,SystemVerilog,verification_examples,404,2,2022-11-27 10:34:28+00:00,[],https://api.github.com/licenses/apache-2.0
3340,https://github.com/matheusvtna/Infraestrutura-de-Hardware.git,2019-05-24 18:00:17+00:00,Infraestrutura de Hardware - CIn UFPE,0,matheusvtna/Infraestrutura-de-Hardware,188466355,SystemVerilog,Infraestrutura-de-Hardware,1327,2,2023-08-09 14:39:18+00:00,[],
3341,https://github.com/ganesh-ps/UVM_verification.git,2019-05-24 19:11:17+00:00,,0,ganesh-ps/UVM_verification,188474753,SystemVerilog,UVM_verification,472,2,2020-08-04 07:54:28+00:00,[],
3342,https://github.com/digital-design-hq/Example-Peripheral.git,2019-07-13 22:48:59+00:00,,0,digital-design-hq/Example-Peripheral,196772810,SystemVerilog,Example-Peripheral,43,2,2019-09-24 04:53:52+00:00,[],
3343,https://github.com/digital-design-hq/SPI-Master-Peripheral.git,2019-07-20 11:26:18+00:00,,0,digital-design-hq/SPI-Master-Peripheral,197921007,SystemVerilog,SPI-Master-Peripheral,1,2,2020-01-10 16:55:29+00:00,[],
3344,https://github.com/kangjian888/PAM4-RGB-FPGA.git,2019-07-22 10:04:32+00:00,,0,kangjian888/PAM4-RGB-FPGA,198197190,SystemVerilog,PAM4-RGB-FPGA,46863,2,2023-07-03 03:33:36+00:00,[],
3345,https://github.com/shubhv26/UVM_ALU.git,2019-07-16 23:34:59+00:00,ALU implementation and its testbench verification using UVM.,1,shubhv26/UVM_ALU,197281810,SystemVerilog,UVM_ALU,41,2,2022-03-01 13:39:58+00:00,[],
3346,https://github.com/shubhv26/Special-processor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities-PRPG.git,2019-06-13 00:15:34+00:00,"Built RTL design for single/multicycle 8-bit one-to-many XOR-based Linear Feedback Shift Register (LFSR), seeded with any 8-bit pattern for producing pseudo-random pattern sequences. Included a Hamming Distance (HD) and Average HD count design between neighboring patterns to measure the “similarity” of neighboring patterns for LFSR. Designed a “batch memory storage” to support running and storing the patterns continuously into the data memory. Designed Cellular Automata-3, an alternative PRPG to the LFSR and included this module in the processor for creating . Used systemverilog for RTL design and verification and, performed Static-Timing Analysis.",0,shubhv26/Special-processor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities-PRPG,191661601,SystemVerilog,Special-processor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities-PRPG,25,2,2021-05-07 01:36:51+00:00,[],
3347,https://github.com/ypyp3/uart-axi.git,2019-09-16 12:30:23+00:00,"AXI4 bus master, controlled by UART",2,ypyp3/uart-axi,208794577,SystemVerilog,uart-axi,18,2,2023-02-07 08:32:48+00:00,[],https://api.github.com/licenses/mit
3348,https://github.com/vidor-libraries/QRCODE_FINDER.git,2019-06-26 09:59:46+00:00,,0,vidor-libraries/QRCODE_FINDER,193878563,SystemVerilog,QRCODE_FINDER,10,2,2022-06-21 19:09:26+00:00,[],
3349,https://github.com/taiyoslime/RSA_on_FPGA.git,2019-08-02 06:55:20+00:00,"Hardware implementation of RSA Encryption/Decryption, tested on FPGA",0,taiyoslime/RSA_on_FPGA,200182323,SystemVerilog,RSA_on_FPGA,6,2,2023-07-04 12:19:15+00:00,[],
3350,https://github.com/PedroHSCavalcante/basic-uvm-env.git,2019-07-25 18:08:39+00:00,Basic UVM Environment,1,PedroHSCavalcante/basic-uvm-env,198880049,SystemVerilog,basic-uvm-env,28,2,2023-10-19 14:16:56+00:00,"['uvm', 'verification', 'system-verilog']",
3351,https://github.com/PacoReinaCampo/MPSoC-MSI.git,2019-09-30 04:41:13+00:00,Master Slave Interface for MPSoC,2,PacoReinaCampo/MPSoC-MSI,211776622,SystemVerilog,MPSoC-MSI,20052,2,2023-03-31 16:26:15+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
3352,https://github.com/vasschrys/Health_Monitor.git,2019-09-19 00:29:11+00:00,Implemented a health monitor which includes the functions of a reaction timer and pulse sensor. Both of these functions are implemented on one FPGA board. The reaction timer demonstrates the user's ability to react quickly to an LED. The pulse monitor displays a user’s pulse on the FPGA board in beats per minute. ,0,vasschrys/Health_Monitor,209428055,SystemVerilog,Health_Monitor,515,2,2021-09-23 02:12:50+00:00,[],
3353,https://github.com/um-chips/fishnchiplets_chip.git,2019-06-15 01:55:29+00:00,,0,um-chips/fishnchiplets_chip,192025302,SystemVerilog,fishnchiplets_chip,67,2,2022-06-22 19:29:51+00:00,[],https://api.github.com/licenses/apache-2.0
3354,https://github.com/rajdasadia/Ethernet-Switch-with-Verification-Environment-SystemVerilog.git,2019-07-10 22:47:35+00:00,Ethernet Switch with 2 input and 2 output port and a variable length FIFO with overflow stall signals. Test bench Environment using random constrains ,1,rajdasadia/Ethernet-Switch-with-Verification-Environment-SystemVerilog,196284504,SystemVerilog,Ethernet-Switch-with-Verification-Environment-SystemVerilog,27,2,2023-04-24 11:39:54+00:00,[],
3355,https://github.com/sotot0/riviera-riscv.git,2019-06-17 15:11:50+00:00,Another riscv implementation,0,sotot0/riviera-riscv,192370023,SystemVerilog,riviera-riscv,793,2,2022-11-25 20:55:25+00:00,[],
3356,https://github.com/mrRedSun/Simple-MIPS-Processor.git,2019-05-26 19:07:52+00:00,Simple MIPS processor developed using SystemVerilog HDL and C++. Project requires Verilator and GTKWave tools in order to be simulated and debuged. ,0,mrRedSun/Simple-MIPS-Processor,188721523,SystemVerilog,Simple-MIPS-Processor,6,2,2019-05-29 07:55:39+00:00,[],
3357,https://github.com/igmora/PacketDispatcher.git,2019-08-02 02:14:35+00:00,,0,igmora/PacketDispatcher,200148823,SystemVerilog,PacketDispatcher,49,2,2019-09-06 17:50:38+00:00,[],
3358,https://github.com/vinifarias/loac.git,2019-06-22 00:14:13+00:00,Repositório com códigos referentes à disciplina LOAC do curso de Ciência da Computação da UFCG,0,vinifarias/loac,193173297,SystemVerilog,loac,16,2,2021-04-16 13:29:21+00:00,[],
3359,https://github.com/futureoceanlab/Radiometer.git,2019-07-12 15:22:36+00:00,,0,futureoceanlab/Radiometer,196602059,SystemVerilog,Radiometer,12772,2,2021-07-12 20:15:25+00:00,[],
3360,https://github.com/sidlathar/assertions-project-slathar.git,2019-08-19 16:14:16+00:00,,0,sidlathar/assertions-project-slathar,203207547,SystemVerilog,assertions-project-slathar,285,1,2022-01-12 22:42:44+00:00,[],
3361,https://github.com/sidlathar/memorycontroller-slathar.git,2019-08-19 16:23:39+00:00,,0,sidlathar/memorycontroller-slathar,203209078,SystemVerilog,memorycontroller-slathar,3067,1,2022-01-12 22:42:42+00:00,[],
3362,https://github.com/ameetgohil/riscv-sv.git,2019-07-23 19:00:42+00:00,RISC-V implementation,0,ameetgohil/riscv-sv,198491515,SystemVerilog,riscv-sv,63,1,2022-07-02 23:26:42+00:00,[],https://api.github.com/licenses/mit
3363,https://github.com/kevinku0101/uvm_ref.git,2019-08-02 07:44:13+00:00,,0,kevinku0101/uvm_ref,200189808,SystemVerilog,uvm_ref,962,1,2021-06-18 06:00:59+00:00,[],https://api.github.com/licenses/mit
3364,https://github.com/tucanae47/VDF-RSA.git,2019-08-24 13:03:24+00:00,,0,tucanae47/VDF-RSA,204157985,SystemVerilog,VDF-RSA,505,1,2019-12-19 16:51:42+00:00,[],
3365,https://github.com/vtollmarkod/apb_to_uart.git,2019-09-13 14:12:29+00:00,Projekat,0,vtollmarkod/apb_to_uart,208278214,SystemVerilog,apb_to_uart,7564,1,2022-08-27 16:12:25+00:00,[],
3366,https://github.com/cevataykans/emergency-elevator.git,2019-09-02 05:51:43+00:00,Simulation of a high level state machine elevator to extract people from a building in the shortest amount of time. Applied system verilog to design hardware while using Vivado design portal and a BASYS3.,1,cevataykans/emergency-elevator,205785737,SystemVerilog,emergency-elevator,1748,1,2023-09-28 11:05:45+00:00,[],https://api.github.com/licenses/mit
3367,https://github.com/jiegec/DigitalLogicExperiments.git,2019-06-30 17:44:23+00:00,Source code of digital logic experiments.,0,jiegec/DigitalLogicExperiments,194544411,SystemVerilog,DigitalLogicExperiments,16,1,2019-06-30 17:58:42+00:00,[],
3369,https://github.com/melt-umn/silver-ide.git,2019-05-23 22:12:11+00:00,A collection of tools built to provide IDE support for languages built using Silver.,0,melt-umn/silver-ide,188313574,SystemVerilog,silver-ide,224,1,2020-02-07 23:43:56+00:00,[],https://api.github.com/licenses/lgpl-3.0
3370,https://github.com/ALinP98/Ultra-Low-Power-32Bit-Core.git,2019-06-10 12:03:37+00:00,ARCINO is a 32bit ultra low power core based on RISC-V RV 32IMC,1,ALinP98/Ultra-Low-Power-32Bit-Core,191160196,SystemVerilog,Ultra-Low-Power-32Bit-Core,65,1,2021-05-10 06:43:25+00:00,[],
3371,https://github.com/nnikolov3/sequence_detector.git,2019-07-23 02:25:05+00:00,A simple sequence detector using System Verilog,0,nnikolov3/sequence_detector,198335831,SystemVerilog,sequence_detector,2,1,2022-11-21 14:03:32+00:00,[],
3372,https://github.com/dpimley/riscv.git,2019-09-21 09:52:41+00:00,RISC-V based processor,0,dpimley/riscv,209961257,SystemVerilog,riscv,36,1,2019-11-24 01:23:33+00:00,[],https://api.github.com/licenses/mit
3373,https://github.com/dhairyaagrawal/Custom-Cryptographic-Module.git,2019-09-09 16:34:36+00:00,The CCM is a custom ASIC written in Verilog. It is capable of computing a pipelined version of AES-128.,1,dhairyaagrawal/Custom-Cryptographic-Module,207355492,,Custom-Cryptographic-Module,5432,1,2023-06-23 09:07:46+00:00,[],
3374,https://github.com/icdesign2018/icstudyroom_pub.git,2019-09-08 13:49:38+00:00,icstudyroom public,1,icdesign2018/icstudyroom_pub,207119533,SystemVerilog,icstudyroom_pub,4,1,2019-09-11 05:49:55+00:00,[],
3375,https://github.com/geaninne/utopia_uvm.git,2019-06-01 00:42:42+00:00,,0,geaninne/utopia_uvm,189674236,SystemVerilog,utopia_uvm,42,1,2019-09-22 18:43:33+00:00,[],
3376,https://github.com/CLDXiang/piplined-MIPS.git,2019-05-21 01:12:02+00:00,体系结构实验：流水线MIPS处理器,0,CLDXiang/piplined-MIPS,187737045,SystemVerilog,piplined-MIPS,22,1,2021-07-18 13:37:12+00:00,[],
3377,https://github.com/alferbra/sa_cache.git,2019-07-18 17:39:38+00:00,Set-associative cache,0,alferbra/sa_cache,197631447,SystemVerilog,sa_cache,21,1,2020-11-05 12:55:58+00:00,[],
3378,https://github.com/lalalal83/script.git,2019-08-07 10:13:26+00:00,python，perl,0,lalalal83/script,201025617,SystemVerilog,script,63,1,2020-06-16 03:30:46+00:00,[],
3379,https://github.com/sidlathar/router-slathar.git,2019-08-19 16:09:56+00:00,,0,sidlathar/router-slathar,203206779,SystemVerilog,router-slathar,399,1,2022-01-12 22:42:46+00:00,[],https://api.github.com/licenses/mit
3380,https://github.com/zion-group/ZionRiscvIsaLib.git,2019-08-03 07:18:29+00:00,"Reusable circuit library for Risc-V ISA, including struct definition, execute module, etc.",2,zion-group/ZionRiscvIsaLib,200345274,SystemVerilog,ZionRiscvIsaLib,137,1,2024-02-16 13:55:11+00:00,[],https://api.github.com/licenses/mit
3381,https://github.com/farshad112/AES_crypto_processor.git,2019-09-10 14:24:04+00:00,A very simple AES crypto processor for my M.Sc thesis.,0,farshad112/AES_crypto_processor,207580578,SystemVerilog,AES_crypto_processor,61,1,2021-03-21 17:38:07+00:00,[],https://api.github.com/licenses/bsd-3-clause
3382,https://github.com/akki0084/AES-Rijndael-Algorithm-for-Encryption.git,2019-05-29 02:23:19+00:00,Performed and debugged the algorithm using SystemVerilog and implemented on Altera MAX 10 FPGA board. 128-bit input and 128-bit secret key used for the encryption.,0,akki0084/AES-Rijndael-Algorithm-for-Encryption,189135335,SystemVerilog,AES-Rijndael-Algorithm-for-Encryption,6,1,2023-08-15 12:35:45+00:00,[],
3383,https://github.com/aakshjn/Environment-monitor-with-vlsi.git,2019-06-10 04:46:04+00:00,"To prove parallel computing is much better,fast and reliable at IOT/Environment Monitoring/Disaster detection when compared to microcontrollers. This method to be demonstrated on FPGA boards implemented via VLSI technique.",0,aakshjn/Environment-monitor-with-vlsi,191098261,SystemVerilog,Environment-monitor-with-vlsi,24834,1,2022-06-10 10:29:44+00:00,[],
3384,https://github.com/vidor-libraries/MAILBOX.git,2019-06-26 08:32:11+00:00,,0,vidor-libraries/MAILBOX,193863690,SystemVerilog,MAILBOX,8,1,2022-06-21 19:16:40+00:00,[],
3385,https://github.com/ErickOF/CE3201-Taller-de-Dise-o-Digital.git,2019-08-05 01:42:37+00:00,,0,ErickOF/CE3201-Taller-de-Dise-o-Digital,200562967,SystemVerilog,CE3201-Taller-de-Dise-o-Digital,38976,1,2023-12-26 00:08:50+00:00,[],
3386,https://github.com/shubhv26/Digital-Clock.git,2019-09-09 06:12:38+00:00,Digital clock using systemverilog HDL and implementation on Terasic DE10-Lite FPGA board.,0,shubhv26/Digital-Clock,207236929,SystemVerilog,Digital-Clock,89,1,2019-11-30 23:31:58+00:00,[],
3387,https://github.com/yateszi/pic2wave.git,2019-08-25 08:27:05+00:00,using verilog/systemverilog simulation result(a vcd wave) to display some image. the image will be clustered(using color quant) to no more than 4 color(wave only support 0/1/x/z) ,0,yateszi/pic2wave,204266956,SystemVerilog,pic2wave,141,1,2019-09-19 14:43:41+00:00,[],https://api.github.com/licenses/gpl-3.0
3388,https://github.com/digital-design-hq/Ethernet-Mac.git,2019-08-28 05:11:08+00:00,,0,digital-design-hq/Ethernet-Mac,204852870,SystemVerilog,Ethernet-Mac,10,1,2022-02-17 06:25:20+00:00,[],
3389,https://github.com/zssl/uvm_crc_test.git,2019-07-19 00:51:11+00:00,,0,zssl/uvm_crc_test,197676259,SystemVerilog,uvm_crc_test,5,1,2019-09-22 18:49:30+00:00,[],
3390,https://github.com/tmilkovic51/hwpe-vfpu.git,2019-06-08 20:49:29+00:00,,0,tmilkovic51/hwpe-vfpu,190933633,SystemVerilog,hwpe-vfpu,38,1,2022-03-01 01:43:07+00:00,[],
3391,https://github.com/jakesanggulee/ROP-Attack-Detector.git,2019-09-16 13:57:37+00:00,(Seoul National University Intern Project/ Verilog-SystemVerilog Code ),0,jakesanggulee/ROP-Attack-Detector,208813419,SystemVerilog,ROP-Attack-Detector,443,1,2019-09-17 01:17:38+00:00,[],
3392,https://github.com/paulr92/VGA-controller-Verilog.git,2019-07-08 22:44:40+00:00,"VGA Controller generates timing signals used by a vga monitor, outputs also the next pixel address ",0,paulr92/VGA-controller-Verilog,195895668,SystemVerilog,VGA-controller-Verilog,8,1,2022-04-26 21:54:09+00:00,[],
3393,https://github.com/qz-lab/tortoise.git,2019-09-09 04:00:41+00:00,"'tortoise' is a 64-bit RISC-V SOC, with dynamic schedule for instruction execution.",0,qz-lab/tortoise,207220718,SystemVerilog,tortoise,55,1,2021-03-31 02:52:21+00:00,[],https://api.github.com/licenses/mit
3394,https://github.com/mateuspinto/FPGA_SystemVerilog_MIPS_Pipeline-TP1-OC2-UFV.git,2019-05-31 09:07:07+00:00,A complete hardware description of a pipeline MIPS processor in SystemVerilog that can execute integer assembly code implemented on the Altera DE2-115 FPGA. It also has the ALMa Mips Mounter built-in.,0,mateuspinto/FPGA_SystemVerilog_MIPS_Pipeline-TP1-OC2-UFV,189563860,SystemVerilog,FPGA_SystemVerilog_MIPS_Pipeline-TP1-OC2-UFV,2914,1,2022-05-11 22:27:25+00:00,"['mips', 'mips-assembly', 'mips32', 'mips-processor', 'mips32cpu', 'mounter', 'verilog', 'systemverilog', 'systemverilog-hdl', 'python', 'python3']",
3395,https://github.com/minjiexm/simpleTb.git,2019-07-16 15:42:55+00:00,A Very Simple Testbench,0,minjiexm/simpleTb,197222600,SystemVerilog,simpleTb,389,1,2019-08-22 19:34:19+00:00,[],
3396,https://github.com/shubhv26/Traffic-light-controller.git,2019-06-13 20:44:03+00:00,A basic traffic light controller in systemverilog HDL.,0,shubhv26/Traffic-light-controller,191830675,SystemVerilog,Traffic-light-controller,4,1,2019-07-16 23:38:40+00:00,[],
3397,https://github.com/shubhv26/Simple-Sloth-Game.git,2019-09-12 18:03:09+00:00,This module consist of a self-made game using systemverilog HDL.,0,shubhv26/Simple-Sloth-Game,208113781,SystemVerilog,Simple-Sloth-Game,7,1,2019-11-30 23:32:05+00:00,[],
3398,https://github.com/jurevreca12/riscv-jedro-1.git,2019-09-12 21:48:26+00:00,Preprosto jedro za RISC-V.,0,jurevreca12/riscv-jedro-1,208152082,SystemVerilog,riscv-jedro-1,9252,1,2022-09-04 18:07:41+00:00,[],
3399,https://github.com/shubhv26/MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design.git,2019-06-13 00:36:18+00:00,"Designed controller and Datapath (consisting of 32-bit ALU, register file, sign extension logic and multiplexers) functional blocks.  Synthesized the RTL design of a “Special 8/4-bit” ALU with customized arithmetic functionalities. Verification with testbench using systemverilog and the Gate-level netlist extraction using Quartus-2.",0,shubhv26/MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design,191663342,SystemVerilog,MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design,166,1,2022-06-13 18:56:18+00:00,[],
3400,https://github.com/sidlathar/usb-controller.git,2019-08-19 16:18:23+00:00,,0,sidlathar/usb-controller,203208264,SystemVerilog,usb-controller,18329,1,2022-01-12 22:36:55+00:00,[],
3401,https://github.com/pavankrissh/Fucntional-Verification-using-UVM.git,2019-09-30 15:38:20+00:00,Verification of the RAM Module using the UVM and System Verilog test benches,0,pavankrissh/Fucntional-Verification-using-UVM,211894475,SystemVerilog,Fucntional-Verification-using-UVM,7,1,2023-11-25 07:54:39+00:00,[],
3402,https://github.com/PacoReinaCampo/MPSoC-DBG.git,2019-09-30 04:40:18+00:00,Debugger on Chip for MPSoC,5,PacoReinaCampo/MPSoC-DBG,211776520,SystemVerilog,MPSoC-DBG,26225,1,2024-01-12 18:10:30+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
3403,https://github.com/vrezhsargsyan89/round_robin_arb.git,2019-08-16 07:03:06+00:00,Round-robin (RR) is one of the most  popular scheduling/arbitration algorithms. It guarantees fairness across different requests. This project contains Verilog implantation of RR.,0,vrezhsargsyan89/round_robin_arb,202676371,SystemVerilog,round_robin_arb,4,1,2023-07-22 16:27:36+00:00,[],
3404,https://github.com/apurv2304/Frogger.git,2019-06-15 01:12:15+00:00,"The repository contains all the files made for Frogger game on an FPGA. There is report attached below for the detailed view of the project involving the design process, game functionality and all the manner of tests done for the project to get working ",0,apurv2304/Frogger,192022372,SystemVerilog,Frogger,4071,1,2021-03-09 18:49:12+00:00,[],
3405,https://github.com/rejoymathews32/System_Verilog_SDRAM.git,2019-06-16 20:51:21+00:00,SDRAM Memory Controller Development and Verification in System Verilog,0,rejoymathews32/System_Verilog_SDRAM,192235742,SystemVerilog,System_Verilog_SDRAM,5,1,2022-01-11 05:54:44+00:00,[],
3406,https://github.com/GBlankers/VHDL-Pong.git,2019-05-21 15:48:18+00:00,"Simple Pong game, written in VHDL for the nexys 4 ddr",0,GBlankers/VHDL-Pong,187868941,SystemVerilog,VHDL-Pong,15862,1,2023-03-06 21:59:10+00:00,[],
3407,https://github.com/akki0084/MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design.git,2019-05-29 02:32:37+00:00,"Synthesized the RTL design of modified MIPS processor by adding ore and bne instructions & S84 ALU design in Modelsim. Special 8/4-bit (S84) ALU designed with SQM, Cellular Automata 2, Output analysis, etc. Analyzed the design using SystemVerilog, verified with testbench in Modelsim and extracted the Gate-level netlist using Quartus.",0,akki0084/MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design,189136591,SystemVerilog,MIPS-based-32-bit-single-cycle-and-multi-cycle-microprocessor-design,37,1,2019-06-24 14:01:31+00:00,[],
3408,https://github.com/lucasanthony/Maquinas-de-estados.git,2019-06-24 22:35:40+00:00,Máquinas de estados - LOAC,1,lucasanthony/Maquinas-de-estados,193590158,SystemVerilog,Maquinas-de-estados,16,1,2021-10-15 17:04:11+00:00,"['verilog', 'state-machine']",
3409,https://github.com/sagar5258/google.git,2019-08-20 04:18:09+00:00,,0,sagar5258/google,203298577,SystemVerilog,google,2,1,2020-08-26 12:20:37+00:00,[],
3411,https://github.com/nguyensinhton9x/uvm_uart_apb_env.git,2019-07-19 14:55:06+00:00,uvm_ver_3,1,nguyensinhton9x/uvm_uart_apb_env,197792028,SystemVerilog,uvm_uart_apb_env,47,1,2019-08-14 15:53:01+00:00,[],
3412,https://github.com/mcagriaksoy/spi-vip.git,2019-06-04 00:21:41+00:00,,0,mcagriaksoy/spi-vip,190100505,SystemVerilog,spi-vip,568,1,2019-09-04 06:25:56+00:00,[],https://api.github.com/licenses/gpl-3.0
3413,https://github.com/jiegec/GuGuMIPS.git,2019-07-03 02:27:02+00:00,A naive MIPS cpu implementation for NSCSCC2019,1,jiegec/GuGuMIPS,194965176,SystemVerilog,GuGuMIPS,42126,1,2023-12-19 04:00:16+00:00,[],
3414,https://github.com/chriskiefer/Iceyntese.git,2019-09-13 16:38:19+00:00,Sound synthesis on the ICE40 FPGA,0,chriskiefer/Iceyntese,208305354,SystemVerilog,Iceyntese,42,1,2019-09-30 12:13:09+00:00,[],
3415,https://github.com/devangKhamar/CORDIC-core.git,2019-06-08 01:16:52+00:00,CORDIC IP and verification modules.,0,devangKhamar/CORDIC-core,190831395,SystemVerilog,CORDIC-core,73,1,2022-03-02 01:42:52+00:00,[],
3416,https://github.com/flasonil/intel8085.git,2019-06-12 14:53:55+00:00,,0,flasonil/intel8085,191591732,SystemVerilog,intel8085,279,1,2021-02-09 00:53:24+00:00,[],
3417,https://github.com/chandanpalai/UVM-sample-codes.git,2019-09-25 13:46:38+00:00,This contains UVM basic example codes,0,chandanpalai/UVM-sample-codes,210856103,SystemVerilog,UVM-sample-codes,17,1,2022-03-29 05:43:31+00:00,[],
3418,https://github.com/lcskl/cryptographyIP.git,2019-08-17 21:05:06+00:00,Hardware cryptography IP for IOT applications,0,lcskl/cryptographyIP,202931301,SystemVerilog,cryptographyIP,25,1,2019-10-24 19:56:26+00:00,[],
3419,https://github.com/zan-pu/vga-driver.git,2019-09-09 15:09:35+00:00,VGA driver.,1,zan-pu/vga-driver,207337955,SystemVerilog,vga-driver,79,1,2024-03-31 06:24:33+00:00,[],https://api.github.com/licenses/mit
3420,https://github.com/sanjeevs/sva_work.git,2019-09-01 18:34:58+00:00,Playing around with sva,0,sanjeevs/sva_work,205717096,SystemVerilog,sva_work,765,1,2024-03-01 11:41:27+00:00,[],
3421,https://github.com/mbstrange2/verilog_tutorial_edge_count.git,2019-09-30 16:26:40+00:00,Intro Module for getting a feel for verilog,2,mbstrange2/verilog_tutorial_edge_count,211904211,SystemVerilog,verilog_tutorial_edge_count,11,1,2022-03-11 14:34:43+00:00,[],
3422,https://github.com/hellgate202/video_stream_to_window.git,2019-09-27 20:48:19+00:00,,1,hellgate202/video_stream_to_window,211399400,SystemVerilog,video_stream_to_window,1288,1,2020-03-07 02:13:53+00:00,[],https://api.github.com/licenses/gpl-3.0
3423,https://github.com/jakesanggulee/PTM-Packet-Decoder.git,2019-09-16 13:59:00+00:00,Seoul National University Intern Project ( Branch Address Packet Decoder ),0,jakesanggulee/PTM-Packet-Decoder,208813673,SystemVerilog,PTM-Packet-Decoder,41,1,2019-09-17 01:17:38+00:00,[],
3424,https://github.com/GilSherman/Gil-Sherman.git,2019-08-14 12:35:01+00:00,,1,GilSherman/Gil-Sherman,202347347,SystemVerilog,Gil-Sherman,14533,1,2019-08-20 22:01:39+00:00,[],
3425,https://github.com/CristianG89/Design_Digital_Systems_2.git,2019-09-06 15:57:24+00:00,Verification of RTL modules by using SystemVerilog,0,CristianG89/Design_Digital_Systems_2,206828529,SystemVerilog,Design_Digital_Systems_2,2139,1,2021-05-17 20:16:10+00:00,[],
3426,https://github.com/Dmitriy0111/vcv_sv.git,2019-06-01 10:04:38+00:00,,0,Dmitriy0111/vcv_sv,189717628,SystemVerilog,vcv_sv,9232,1,2022-09-14 13:17:26+00:00,[],
3427,https://github.com/ameetgohil/sva_examples.git,2019-06-19 05:42:17+00:00,symbiyosys sva exaples,0,ameetgohil/sva_examples,192665943,SystemVerilog,sva_examples,5,1,2022-07-02 23:27:06+00:00,[],https://api.github.com/licenses/mit
3428,https://github.com/curoles/dark-circuit.git,2019-07-01 04:42:30+00:00,,0,curoles/dark-circuit,194600894,SystemVerilog,dark-circuit,454,1,2021-03-05 19:42:39+00:00,[],
3429,https://github.com/ManuelonGithub/xmakina_multi_cycle.git,2019-07-22 02:38:58+00:00,,0,ManuelonGithub/xmakina_multi_cycle,198133493,SystemVerilog,xmakina_multi_cycle,666,1,2022-04-30 23:33:10+00:00,[],https://api.github.com/licenses/gpl-3.0
3430,https://github.com/dhaivat7/Verilog_CalC.git,2019-07-03 19:22:56+00:00,FSM design and Verification of Calculator using Verilog ,0,dhaivat7/Verilog_CalC,195114522,SystemVerilog,Verilog_CalC,10,1,2020-09-26 04:34:27+00:00,"['verilog', 'verification', 'calculator']",
3431,https://github.com/jotingen/RISCV-DE10-Nano.git,2019-08-03 20:05:05+00:00,RISCV implemented on DE10-Nano with a display attached,0,jotingen/RISCV-DE10-Nano,200416402,SystemVerilog,RISCV-DE10-Nano,130830,1,2021-10-04 02:14:52+00:00,[],https://api.github.com/licenses/mit
3432,https://github.com/abdo1819/mips_single_cycle.git,2019-09-29 18:04:16+00:00,single cycle mips implementation with systemverilog,5,abdo1819/mips_single_cycle,211704394,SystemVerilog,mips_single_cycle,3956,1,2022-08-12 11:58:40+00:00,[],
3433,https://github.com/ilya-dementev/crossbar-switch.git,2019-05-29 22:18:52+00:00,Verilog crossbar-switch,1,ilya-dementev/crossbar-switch,189306670,SystemVerilog,crossbar-switch,7,1,2020-06-04 08:25:29+00:00,[],
3434,https://github.com/AlAlves/darkriscv-Yosysbundle.git,2019-06-20 20:20:58+00:00,Bundle to prove darkRISCV with formal-riscv of Clifford Wolf (using Yosys),0,AlAlves/darkriscv-Yosysbundle,192982645,SystemVerilog,darkriscv-Yosysbundle,3,1,2020-01-02 09:36:19+00:00,[],
3435,https://github.com/name1e5s/MIPS-Edu.git,2019-09-02 08:56:59+00:00,Educational MIPS Processor,0,name1e5s/MIPS-Edu,205816610,SystemVerilog,MIPS-Edu,8108,1,2020-11-02 01:04:53+00:00,[],https://api.github.com/licenses/bsd-3-clause
3436,https://github.com/jadavs/FPGA_FlappyBird.git,2019-07-25 16:38:23+00:00,"Developed Flappy Bird with SystemVerilog, ModelSIM on the Altera DE1SoC Cyclone V FPGA using ASMD and FSM design methodologies",0,jadavs/FPGA_FlappyBird,198867631,SystemVerilog,FPGA_FlappyBird,362,1,2020-11-04 01:10:58+00:00,[],
3437,https://github.com/vidor-libraries/ST_MIXER.git,2019-06-26 10:08:35+00:00,,0,vidor-libraries/ST_MIXER,193879961,SystemVerilog,ST_MIXER,2,1,2022-06-21 19:14:08+00:00,[],
3438,https://github.com/hypernyan/runge-kutta-vlg.git,2019-05-28 00:31:54+00:00,Very simple 4th order Runge-Kutta based RLC circuit simulator,0,hypernyan/runge-kutta-vlg,188925859,SystemVerilog,runge-kutta-vlg,8,1,2022-02-17 21:49:05+00:00,[],
3439,https://github.com/sadhanrudresh/My-experiment-with-SystemVerilog-.git,2019-09-01 06:36:21+00:00,,0,sadhanrudresh/My-experiment-with-SystemVerilog-,205639076,SystemVerilog,My-experiment-with-SystemVerilog-,576,1,2021-08-01 18:55:02+00:00,[],
3440,https://github.com/JacobLondon/tea-encryption.git,2019-08-29 00:18:18+00:00,Tea Encryption for ECE 4304 VHDL Design Project,1,JacobLondon/tea-encryption,205046341,SystemVerilog,tea-encryption,25214,1,2021-07-24 23:43:28+00:00,"['vhdl', 'vivado', 'vga', 'uart', 'blockcipher', 'tea', 'school']",
3441,https://github.com/mcagriaksoy/simple-spi-vip.git,2019-06-08 22:54:56+00:00,,0,mcagriaksoy/simple-spi-vip,190942736,SystemVerilog,simple-spi-vip,3,1,2019-09-04 06:26:24+00:00,[],
3442,https://github.com/edwildson/MotorDePasso.git,2019-07-22 11:02:43+00:00,Controle de motor de passo com HDL Systemverilog,0,edwildson/MotorDePasso,198205845,SystemVerilog,MotorDePasso,6,1,2019-12-02 05:38:03+00:00,[],
3443,https://github.com/MichaelNguyenz229/FPGA.git,2019-06-26 03:28:22+00:00,EECS 31L,0,MichaelNguyenz229/FPGA,193822966,SystemVerilog,FPGA,32,0,2019-07-10 15:28:13+00:00,[],
3444,https://github.com/dngkphm/cpp.git,2019-06-20 22:30:18+00:00,Cycle Pipelined Processor,0,dngkphm/cpp,192994782,SystemVerilog,cpp,7983,0,2019-06-20 22:31:00+00:00,[],
3445,https://github.com/xxxbano/Hardware_Calculator.git,2019-08-17 15:43:17+00:00,"This calculator accepts a serial of numbers and push onto a stack. When it receives an algebraic command (+, -, *, /), two values will be poped out from stack and used as operand to do the correspond calculation. The result will be pushed back to stack and shown as the result output",0,xxxbano/Hardware_Calculator,202900149,SystemVerilog,Hardware_Calculator,628,0,2019-08-19 15:38:37+00:00,[],
3446,https://github.com/tal-aya/proyect.git,2019-08-15 06:54:09+00:00,,0,tal-aya/proyect,202489893,SystemVerilog,proyect,1640,0,2019-08-15 06:54:29+00:00,[],
3447,https://github.com/Dane-Horn/HLDA-Final-Assignment.git,2019-09-24 13:00:58+00:00,Final assignment for Rhodes 2019 Hardware Logic Analysis and Design in VHDL,0,Dane-Horn/HLDA-Final-Assignment,210604214,SystemVerilog,HLDA-Final-Assignment,6077,0,2019-09-27 06:48:27+00:00,[],
3448,https://github.com/calonso88/iir_csa_sum.git,2019-09-22 18:11:12+00:00,Initial experiences with IIR filters using Carry Save Adders and storing filter results with Carry Save Format - Simple Addition,0,calonso88/iir_csa_sum,210192698,SystemVerilog,iir_csa_sum,7,0,2019-09-22 18:28:35+00:00,[],
3449,https://github.com/haniehm26/Architecture-Microprocessor.git,2019-07-16 17:50:28+00:00,A microprocessor contained two basic parts: Data path and Controller,0,haniehm26/Architecture-Microprocessor,197241848,SystemVerilog,Architecture-Microprocessor,12,0,2021-03-02 14:51:47+00:00,[],
3450,https://github.com/alferbra/dm_cache.git,2019-07-20 09:46:59+00:00,Direct mapped cache,0,alferbra/dm_cache,197910822,SystemVerilog,dm_cache,16,0,2019-10-01 20:34:58+00:00,[],
3451,https://github.com/mrdhindsa/SystemVerilog.git,2019-09-11 20:58:43+00:00,Modules designed using SystemVerilog,0,mrdhindsa/SystemVerilog,207905657,SystemVerilog,SystemVerilog,1079,0,2019-09-11 21:44:40+00:00,[],
3452,https://github.com/jonnxpr/part3---v2-LAOC-II.git,2019-09-14 23:27:16+00:00,DESGRAÇA!!!!!!!!!!!!!!!!!!!!!!!!!!!!!,0,jonnxpr/part3---v2-LAOC-II,208516127,SystemVerilog,part3---v2-LAOC-II,34,0,2019-09-15 20:27:14+00:00,[],
3453,https://github.com/Jaquelineds/Verilog-CPU-Peripheral.git,2019-09-06 22:25:30+00:00,,0,Jaquelineds/Verilog-CPU-Peripheral,206882724,,Verilog-CPU-Peripheral,2,0,2020-12-03 14:19:09+00:00,[],
3454,https://github.com/tallerdigitales2019s2/laboratorio3.git,2019-09-03 23:48:03+00:00,,0,tallerdigitales2019s2/laboratorio3,206191535,SystemVerilog,laboratorio3,20763,0,2019-09-17 04:52:55+00:00,[],
3455,https://github.com/iagotito/FPGASomadorMultiplicador.git,2019-09-05 12:29:14+00:00,LOAC eh peso,0,iagotito/FPGASomadorMultiplicador,206558677,SystemVerilog,FPGASomadorMultiplicador,1,0,2023-01-28 09:25:10+00:00,[],
3456,https://github.com/fumimaker/Pynq_FPGA.git,2019-06-28 05:04:43+00:00,,0,fumimaker/Pynq_FPGA,194209449,SystemVerilog,Pynq_FPGA,2310,0,2019-06-28 05:04:54+00:00,[],
3457,https://github.com/Chepelash/fpga_lab_C1.git,2019-06-29 12:55:21+00:00,,0,Chepelash/fpga_lab_C1,194405734,SystemVerilog,fpga_lab_C1,138,0,2019-11-07 08:08:08+00:00,[],
3458,https://github.com/slothfamily/A2RT.git,2019-06-29 11:47:04+00:00,FPGA based design with the PYNQ board that does Video to ascii processing in real time,0,slothfamily/A2RT,194399570,SystemVerilog,A2RT,11550,0,2020-02-17 13:47:09+00:00,[],
3459,https://github.com/RadhikaF/ELEC3720.git,2019-07-01 01:55:03+00:00,Programmable Logic Design,0,RadhikaF/ELEC3720,194582439,SystemVerilog,ELEC3720,1045,0,2019-07-01 02:02:53+00:00,[],
3460,https://github.com/victormanu/LabTallerDigitales3.git,2019-08-30 22:37:07+00:00,Taller de diseño digital - Laboratorio #3,0,victormanu/LabTallerDigitales3,205465478,SystemVerilog,LabTallerDigitales3,23,0,2019-08-31 03:34:59+00:00,[],https://api.github.com/licenses/gpl-3.0
3461,https://github.com/kkgithub4/prj7.git,2019-05-24 06:21:04+00:00,eth prototype like prj,0,kkgithub4/prj7,188364071,SystemVerilog,prj7,22,0,2019-05-24 09:01:08+00:00,[],
3462,https://github.com/joaosoaresaalm/SystemVerilog.git,2019-05-19 16:01:10+00:00,,0,joaosoaresaalm/SystemVerilog,187498333,SystemVerilog,SystemVerilog,8,0,2019-07-02 01:05:52+00:00,[],
3463,https://github.com/austin-lee117/ece385_spring2019.git,2019-06-12 03:54:40+00:00,Digital Systems Lab,0,austin-lee117/ece385_spring2019,191494102,SystemVerilog,ece385_spring2019,8032,0,2019-06-12 04:10:04+00:00,[],
3464,https://github.com/Artem1199/ECE581-P2P3-Sequencer.git,2019-07-19 05:26:42+00:00,,0,Artem1199/ECE581-P2P3-Sequencer,197707412,SystemVerilog,ECE581-P2P3-Sequencer,5,0,2019-07-21 19:18:23+00:00,[],
3465,https://github.com/yoshi-ki/3S-thu34.git,2019-07-25 04:35:54+00:00,,0,yoshi-ki/3S-thu34,198757958,SystemVerilog,3S-thu34,7,0,2020-09-20 13:03:24+00:00,[],
3466,https://github.com/jyao-10/RISCV-processor.git,2019-08-03 18:49:25+00:00,RISC-V Pipelined Processor,0,jyao-10/RISCV-processor,200410174,SystemVerilog,RISCV-processor,35,0,2020-03-17 07:34:56+00:00,[],
3467,https://github.com/nnikolov3/GreyAdder.git,2019-07-29 19:06:02+00:00,A 4-bit Grey Adder,0,nnikolov3/GreyAdder,199511784,SystemVerilog,GreyAdder,1,0,2019-07-29 19:08:30+00:00,[],
3468,https://github.com/BalajSaleem/Pipelined-Mips-Processor.git,2019-10-01 16:56:41+00:00,"An implementation of Pipelined MIPS processor, for parallel instruction execution. Using 32 registers and multiple components for computation.",0,BalajSaleem/Pipelined-Mips-Processor,212151018,SystemVerilog,Pipelined-Mips-Processor,375,0,2020-03-09 20:24:26+00:00,[],
3469,https://github.com/abishekvenkit/FPGA-Super-Hexagon.git,2019-07-25 03:49:19+00:00,"This Repository holds the Final Project for ECE 385, an implementation of the game Super Hexagon",0,abishekvenkit/FPGA-Super-Hexagon,198753074,SystemVerilog,FPGA-Super-Hexagon,1154,0,2019-07-25 03:54:40+00:00,[],
3470,https://github.com/psaikishna444/krishna-mirafra.git,2019-07-01 02:52:07+00:00,sample,0,psaikishna444/krishna-mirafra,194589242,SystemVerilog,krishna-mirafra,27,0,2019-07-01 02:54:26+00:00,[],
3471,https://github.com/pwgardipee/Segway-Controller-FPGA.git,2019-06-19 19:36:02+00:00,Verilog project used to by synthesized and pushed to an FPGA board to control a self-made Segway.,0,pwgardipee/Segway-Controller-FPGA,192793344,SystemVerilog,Segway-Controller-FPGA,47,0,2019-06-19 19:37:15+00:00,[],
3472,https://github.com/blcxgreat/Hazard-light.git,2019-05-20 00:27:03+00:00,Intro to embedded system lab3,0,blcxgreat/Hazard-light,187542694,SystemVerilog,Hazard-light,7669,0,2019-05-20 00:47:58+00:00,[],
3473,https://github.com/abs-tudelft/fletcher-aws.git,2019-07-04 10:01:00+00:00,Fletcher AWS EC2 F1 platform support,2,abs-tudelft/fletcher-aws,195216986,SystemVerilog,fletcher-aws,333,0,2021-04-02 12:00:57+00:00,[],https://api.github.com/licenses/apache-2.0
3474,https://github.com/name1e5s/fiveCPU.git,2019-05-21 08:08:04+00:00,FIVE stage pipeline CPU.,0,name1e5s/fiveCPU,187791180,SystemVerilog,fiveCPU,174,0,2023-01-28 17:32:10+00:00,[],
3475,https://github.com/absn2/cpu_hardware.git,2019-09-08 15:41:50+00:00,,2,absn2/cpu_hardware,207134552,SystemVerilog,cpu_hardware,260753,0,2021-03-02 13:20:01+00:00,[],https://api.github.com/licenses/mit
3476,https://github.com/atomichighfive/tolkai.git,2019-08-30 17:36:38+00:00,Playing around with sequence to sequence modeling,0,atomichighfive/tolkai,205429214,SystemVerilog,tolkai,956,0,2019-09-01 21:12:19+00:00,[],
3477,https://github.com/silenceluo/Verilog_Module.git,2019-08-12 19:02:33+00:00,Some Verilog modules,0,silenceluo/Verilog_Module,201991888,SystemVerilog,Verilog_Module,538,0,2021-11-18 23:50:53+00:00,[],
3478,https://github.com/gcdagis97/verification-MIPS-instructions-with-Questa.git,2019-09-09 17:42:35+00:00,Verified various types of MIPS instructions using Questa,0,gcdagis97/verification-MIPS-instructions-with-Questa,207368378,SystemVerilog,verification-MIPS-instructions-with-Questa,852,0,2019-09-09 21:00:44+00:00,[],
3479,https://github.com/jimmyorourke/MIPS-Processor.git,2019-09-10 03:21:11+00:00,5 stage MIPS processor model in Verilog,0,jimmyorourke/MIPS-Processor,207456183,SystemVerilog,MIPS-Processor,1126,0,2021-12-09 02:23:52+00:00,[],
3480,https://github.com/melt-umn/ableC-parallel.git,2019-09-20 23:51:11+00:00,"An extensible, implementation-agnostic, parallel programming framework for ableC.",0,melt-umn/ableC-parallel,209898798,SystemVerilog,ableC-parallel,392,0,2021-10-13 01:32:19+00:00,[],https://api.github.com/licenses/lgpl-3.0
3481,https://github.com/ravik0/ECE3829_Lab2.git,2019-09-10 21:20:06+00:00,Light Sensor and VGA Monitor Display ,0,ravik0/ECE3829_Lab2,207665227,SystemVerilog,ECE3829_Lab2,76,0,2019-09-10 21:31:17+00:00,[],
3482,https://github.com/dogacankaynak/Evacuation-Elevator.git,2019-09-08 12:44:14+00:00,Smart Elevator design implemented with System Verilog.,0,dogacankaynak/Evacuation-Elevator,207111159,SystemVerilog,Evacuation-Elevator,16,0,2019-09-15 20:23:20+00:00,[],
3483,https://github.com/10611anil/Calculator_functional_hardware_verification_systemverilog.git,2019-07-03 17:27:08+00:00,Implementation of verification environment of parallel calculator ,0,10611anil/Calculator_functional_hardware_verification_systemverilog,195099434,SystemVerilog,Calculator_functional_hardware_verification_systemverilog,3753,0,2019-07-03 17:38:36+00:00,[],
3484,https://github.com/Hazlinda/Multiplexer.git,2019-07-01 03:24:41+00:00,"Multiplexer also know as Mux is a device that selects between several analog or digital input signals and forwards it to a single output line. A multiplexer of inputs has select lines, which are used to select which input line to send to the output.",0,Hazlinda/Multiplexer,194593169,SystemVerilog,Multiplexer,3,0,2019-07-01 03:33:54+00:00,[],
3485,https://github.com/Rincedent/CycloneVSoC.git,2019-07-01 09:09:31+00:00,Simple project implementing an HPS in a top level VHDL design for the Cyclone V SoC Dev Kit board by Altera,0,Rincedent/CycloneVSoC,194639002,SystemVerilog,CycloneVSoC,7250,0,2019-08-30 07:34:32+00:00,[],
3486,https://github.com/iprabhat29/Wishbone_Slave_with_memory.git,2019-07-11 08:25:05+00:00,Design of wishbone slave with memory implementation,0,iprabhat29/Wishbone_Slave_with_memory,196352101,SystemVerilog,Wishbone_Slave_with_memory,296,0,2019-07-12 10:05:28+00:00,[],
3487,https://github.com/Hecravi-Sali/ECCR0010.git,2019-07-12 08:13:56+00:00,并行/串行输入的序列检测,0,Hecravi-Sali/ECCR0010,196538035,SystemVerilog,ECCR0010,4652,0,2019-07-15 03:49:21+00:00,[],https://api.github.com/licenses/bsd-3-clause
3488,https://github.com/nicolasukd/ELO-212-Grupo3.git,2019-07-17 22:42:15+00:00,,1,nicolasukd/ELO-212-Grupo3,197473084,SystemVerilog,ELO-212-Grupo3,807,0,2019-09-04 18:56:30+00:00,[],
3489,https://github.com/AugureZenn/TestGit.git,2019-08-22 08:04:08+00:00,test de git ,0,AugureZenn/TestGit,203744892,SystemVerilog,TestGit,3,0,2019-08-22 13:12:47+00:00,[],
3490,https://github.com/yuh328/ISA-MMP.git,2019-08-23 20:39:45+00:00,,0,yuh328/ISA-MMP,204066977,SystemVerilog,ISA-MMP,438,0,2019-08-23 20:42:58+00:00,[],
3491,https://github.com/east1203/sv.git,2019-08-23 09:41:22+00:00,,0,east1203/sv,203969946,SystemVerilog,sv,11,0,2019-08-23 14:18:38+00:00,[],
3492,https://github.com/taller-de-diseno-de-sistemas-digitales/Laboratorio-3.git,2019-08-27 00:10:01+00:00,,0,taller-de-diseno-de-sistemas-digitales/Laboratorio-3,204583322,SystemVerilog,Laboratorio-3,184,0,2019-09-16 23:25:43+00:00,[],
3493,https://github.com/cagrigungor/Basys3-FPGA-Beti-Board-Elevator-Simulation.git,2019-08-17 13:47:17+00:00,The project was created in CS-223 Digital Design course project at Bilkent University. Project grade was 9.7/10.,0,cagrigungor/Basys3-FPGA-Beti-Board-Elevator-Simulation,202886328,SystemVerilog,Basys3-FPGA-Beti-Board-Elevator-Simulation,17,0,2019-08-18 11:24:28+00:00,[],
3494,https://github.com/AlterFritz88/computer_learn.git,2019-08-05 18:07:30+00:00,,0,AlterFritz88/computer_learn,200705284,SystemVerilog,computer_learn,39,0,2019-08-24 16:05:38+00:00,[],
3495,https://github.com/AminiAria/CPE133Final.git,2019-06-21 01:35:17+00:00,"Created a FPGA calculator. Could perform signed and unsigned addition and subtraction, multiplication, and squaring based on user input. ",0,AminiAria/CPE133Final,193010174,SystemVerilog,CPE133Final,13,0,2019-06-21 01:49:20+00:00,[],
3496,https://github.com/Hazlinda/Priority-Encoder.git,2019-07-03 06:26:26+00:00,This is encoder,0,Hazlinda/Priority-Encoder,194992596,SystemVerilog,Priority-Encoder,3,0,2019-07-04 02:07:18+00:00,[],
3497,https://github.com/kleinkuang/HDL_Template.git,2019-07-08 17:20:31+00:00,HDL Template for Quick Development,0,kleinkuang/HDL_Template,195856432,SystemVerilog,HDL_Template,184,0,2019-11-13 12:08:27+00:00,[],
3498,https://github.com/slab-project-audio-synth/HW_Digital_Audio_Project.git,2019-08-07 11:17:02+00:00,,0,slab-project-audio-synth/HW_Digital_Audio_Project,201035018,SystemVerilog,HW_Digital_Audio_Project,300,0,2019-08-07 11:49:04+00:00,[],
3499,https://github.com/AdrianRamosDS/DVVSD2019_OTONO.git,2019-08-29 16:37:47+00:00,Repo for Design Verification and Validation of Digital Systems. SystemVerilog,0,AdrianRamosDS/DVVSD2019_OTONO,205207351,SystemVerilog,DVVSD2019_OTONO,1923,0,2023-01-28 06:53:44+00:00,[],
3500,https://github.com/ezchi/uvm.git,2019-09-06 12:10:22+00:00,,0,ezchi/uvm,206786138,SystemVerilog,uvm,680,0,2019-09-06 12:13:48+00:00,[],
3501,https://github.com/alecmatthews/G8FinalProject.git,2019-05-27 04:14:41+00:00,Group 8 ECE271 final term project. NES controller deconder with PS/2 keyboard decoder.,0,alecmatthews/G8FinalProject,188769496,SystemVerilog,G8FinalProject,598,0,2019-06-06 05:03:44+00:00,"['hdl', 'keyboard', 'systemverilog', 'nintendo-entertainment-system']",
3502,https://github.com/harishg1996/FIFO.git,2019-05-25 08:50:16+00:00,A memory which is used to store and read data as required,0,harishg1996/FIFO,188542914,SystemVerilog,FIFO,20,0,2019-07-01 04:15:43+00:00,[],https://api.github.com/licenses/apache-2.0
3503,https://github.com/WenhMa/zion-research.git,2019-05-25 11:09:18+00:00,,0,WenhMa/zion-research,188556143,SystemVerilog,zion-research,15,0,2019-05-30 11:59:30+00:00,[],
3504,https://github.com/yanxu97/cpu-cache.git,2019-06-13 19:18:26+00:00,using riscv architecture to implement a cpu and cache,0,yanxu97/cpu-cache,191820306,SystemVerilog,cpu-cache,85609,0,2019-06-13 20:29:22+00:00,[],
3505,https://github.com/gbruner7607/Mini-Risc-V-Uart-Srcs.git,2019-06-19 16:12:18+00:00,Source files for my modified version of Mini Risc-V,4,gbruner7607/Mini-Risc-V-Uart-Srcs,192765885,SystemVerilog,Mini-Risc-V-Uart-Srcs,4106,0,2021-04-12 03:45:13+00:00,[],
3506,https://github.com/RonnyZF/MESI_protocol_testbench.git,2019-06-17 19:59:44+00:00,,0,RonnyZF/MESI_protocol_testbench,192410531,SystemVerilog,MESI_protocol_testbench,8,0,2019-06-17 20:03:24+00:00,[],
3507,https://github.com/PSS1998/CPU-pipeline.git,2019-07-07 18:00:02+00:00,CPU pipeline design with system verilog,0,PSS1998/CPU-pipeline,195681800,SystemVerilog,CPU-pipeline,9,0,2019-07-20 08:51:59+00:00,[],
3508,https://github.com/github-4o/PeripheralTemplate.git,2019-07-13 04:26:30+00:00,,0,github-4o/PeripheralTemplate,196677819,SystemVerilog,PeripheralTemplate,5,0,2019-07-14 16:02:13+00:00,[],https://api.github.com/licenses/bsd-2-clause
3509,https://github.com/nnikolov3/FIFO_Control.git,2019-07-21 22:32:29+00:00,FIFO controller implemented using System Verilog with a test bench,0,nnikolov3/FIFO_Control,198111468,SystemVerilog,FIFO_Control,3,0,2019-07-21 22:36:01+00:00,[],
3510,https://github.com/lapnd/uvm-1.1d.git,2019-08-22 07:27:21+00:00,,0,lapnd/uvm-1.1d,203738491,SystemVerilog,uvm-1.1d,2976,0,2020-03-03 11:29:48+00:00,[],https://api.github.com/licenses/apache-2.0
3511,https://github.com/JoseK21/ALU_SystemVerilog.git,2019-08-29 04:57:55+00:00,Taller de Diseño Digital - II Semestre 2019,0,JoseK21/ALU_SystemVerilog,205083665,SystemVerilog,ALU_SystemVerilog,6,0,2019-08-29 16:48:31+00:00,[],
3512,https://github.com/digital-design-hq/Part-Library.git,2019-08-27 05:30:12+00:00,,0,digital-design-hq/Part-Library,204626524,SystemVerilog,Part-Library,2,0,2019-08-28 04:32:20+00:00,[],
3513,https://github.com/curbsy/ece_474.git,2019-09-14 08:04:26+00:00,Spring 2017 Code for VLSI Sytem Design at Oregon State University. Uses System Verilog.,0,curbsy/ece_474,208409029,SystemVerilog,ece_474,1076,0,2019-09-14 09:15:43+00:00,[],https://api.github.com/licenses/gpl-3.0
3514,https://github.com/rgliu/SystemVerilog-Samples.git,2019-09-18 23:28:14+00:00,,0,rgliu/SystemVerilog-Samples,209421493,SystemVerilog,SystemVerilog-Samples,3,0,2019-09-18 23:30:50+00:00,[],
3515,https://github.com/hamidhandid/ArchFinal.git,2019-07-27 11:57:06+00:00,Final Architecture Project - Spring 2019 - Dr. Attarzadeh,0,hamidhandid/ArchFinal,199158940,SystemVerilog,ArchFinal,4,0,2019-07-28 08:32:12+00:00,[],
3516,https://github.com/nnikolov3/Moore_FSM.git,2019-07-29 04:13:38+00:00,A simple vending machine using Moore FSM,0,nnikolov3/Moore_FSM,199376762,SystemVerilog,Moore_FSM,2,0,2019-07-29 04:14:07+00:00,[],
3517,https://github.com/michalz500/uec2-mistrz-klawiatury.git,2019-09-11 22:31:01+00:00,,0,michalz500/uec2-mistrz-klawiatury,207917960,SystemVerilog,uec2-mistrz-klawiatury,56,0,2019-09-11 22:39:09+00:00,[],
3518,https://github.com/Hazlinda/Comparator.git,2019-07-01 03:30:48+00:00,"Binary comparators, also called digital comparators or logic comparators, are combinational logic circuits that are used for testing whether the value represented by one binary word is greater than, less than, or equal to the value represented by another binary word. Two basic types of comparator can be used.",0,Hazlinda/Comparator,194593853,SystemVerilog,Comparator,2,0,2019-07-01 03:32:12+00:00,[],
3519,https://github.com/GabrielOlem/ProjetoHardware.git,2019-09-12 15:33:19+00:00,Project of implementation of a cpu in System Verilog ,0,GabrielOlem/ProjetoHardware,208084562,SystemVerilog,ProjetoHardware,12654,0,2019-10-12 19:31:28+00:00,[],
3520,https://github.com/lukamac/hwpe-color-converter.git,2019-06-09 11:54:33+00:00,HWPE RGB to YCbCr color converting processing engine.,0,lukamac/hwpe-color-converter,191000477,SystemVerilog,hwpe-color-converter,2437,0,2019-06-18 07:56:36+00:00,[],https://api.github.com/licenses/mit
3521,https://github.com/Sawaphob/ponggame_finalproject.git,2019-05-19 02:31:09+00:00,,0,Sawaphob/ponggame_finalproject,187425430,SystemVerilog,ponggame_finalproject,121262,0,2019-05-21 02:05:38+00:00,[],
3522,https://github.com/wasim92007/systemverilog.git,2019-06-19 13:01:56+00:00,System Verilog code,0,wasim92007/systemverilog,192733213,SystemVerilog,systemverilog,1,0,2019-06-25 12:34:41+00:00,[],
3523,https://github.com/islom247/Random-Control.git,2019-07-22 12:35:24+00:00,,0,islom247/Random-Control,198220148,SystemVerilog,Random-Control,16,0,2019-07-22 12:38:55+00:00,[],
3524,https://github.com/jasperhaward/MISC-Verilog.git,2019-07-23 00:14:22+00:00,"Multiple system-verilog files to emulate a arithmetic logic unit, and creation of an FPGA implemented Pong game.",0,jasperhaward/MISC-Verilog,198320130,SystemVerilog,MISC-Verilog,453,0,2021-11-26 21:14:58+00:00,[],
3525,https://github.com/braamBeresford/32bitMipsSingleCycle.git,2019-09-02 20:16:22+00:00,,1,braamBeresford/32bitMipsSingleCycle,205930024,SystemVerilog,32bitMipsSingleCycle,222,0,2019-10-10 23:18:33+00:00,[],
3526,https://github.com/BillNace/18341_P3_NOC.git,2019-09-19 21:40:53+00:00,Starter code for project 3,3,BillNace/18341_P3_NOC,209653306,SystemVerilog,18341_P3_NOC,157,0,2024-02-06 15:32:49+00:00,[],
3527,https://github.com/jcontrerasf/Modulos-ELO212.git,2019-09-01 20:50:06+00:00,,0,jcontrerasf/Modulos-ELO212,205730768,SystemVerilog,Modulos-ELO212,18,0,2020-10-24 00:29:28+00:00,[],
3528,https://github.com/xulan008/merge.git,2019-08-16 09:31:58+00:00,,0,xulan008/merge,202699982,SystemVerilog,merge,20,0,2019-10-28 02:57:16+00:00,[],
3529,https://github.com/halegchen/University-Projects.git,2019-09-23 21:05:28+00:00,"Course projects, capstone and individual studies.",0,halegchen/University-Projects,210452522,SystemVerilog,University-Projects,68,0,2019-10-05 02:38:00+00:00,"['wallace-method', 'gaussian-noise', 'system-verilog', 'matlab']",
3530,https://github.com/AjiteshGupta/LC3-testbench.git,2019-07-23 09:40:06+00:00,Layered Testbench for LC3,0,AjiteshGupta/LC3-testbench,198400020,SystemVerilog,LC3-testbench,37,0,2019-07-24 18:14:39+00:00,[],
3531,https://github.com/RCL-lab/NU_MASSIF.git,2019-09-03 22:17:31+00:00,,0,RCL-lab/NU_MASSIF,206181637,SystemVerilog,NU_MASSIF,23881,0,2019-09-04 20:58:10+00:00,[],https://api.github.com/licenses/mit
3532,https://github.com/avrg-riscv/core.git,2019-09-13 13:22:15+00:00,,0,avrg-riscv/core,208269214,SystemVerilog,core,17,0,2019-10-11 16:02:02+00:00,[],https://api.github.com/licenses/apache-2.0
3533,https://github.com/amirhbv/UT-CA-S98-CA4.git,2019-05-27 09:59:28+00:00,UT Computer Architecture Spring 98 CA3,0,amirhbv/UT-CA-S98-CA4,188818328,SystemVerilog,UT-CA-S98-CA4,39,0,2021-08-30 16:15:17+00:00,[],
3534,https://github.com/nkami/billiard.git,2019-06-24 15:44:05+00:00,,0,nkami/billiard,193534129,SystemVerilog,billiard,1423,0,2019-06-24 16:42:16+00:00,[],
3535,https://github.com/rastadayon/MIPS-Pipeline-Architecture.git,2019-05-21 10:52:54+00:00,,0,rastadayon/MIPS-Pipeline-Architecture,187818915,SystemVerilog,MIPS-Pipeline-Architecture,7058,0,2021-09-01 11:20:24+00:00,[],
3536,https://github.com/kagg123/FPGA_Guitar_Hero.git,2019-05-24 00:11:37+00:00,,0,kagg123/FPGA_Guitar_Hero,188323759,SystemVerilog,FPGA_Guitar_Hero,47,0,2019-11-10 00:56:29+00:00,[],
3537,https://github.com/usman-kakakhel/PipelinedProcessor.git,2019-05-27 20:43:35+00:00,Simulation of a 32 bit mips Pipelined Processor,0,usman-kakakhel/PipelinedProcessor,188906878,SystemVerilog,PipelinedProcessor,11,0,2019-05-27 20:44:43+00:00,[],
3538,https://github.com/arnfol/jpeg_mod.git,2019-06-13 12:18:19+00:00,,2,arnfol/jpeg_mod,191757256,SystemVerilog,jpeg_mod,2029,0,2019-07-23 20:07:21+00:00,[],https://api.github.com/licenses/mit
3539,https://github.com/smgl9/Muise_seminar.git,2019-06-16 22:57:56+00:00,,1,smgl9/Muise_seminar,192244328,SystemVerilog,Muise_seminar,773,0,2021-07-05 18:32:33+00:00,[],
3540,https://github.com/Jeremy9249/FIFO.git,2019-06-29 00:03:37+00:00,Takes burst of data at one frequency and outputs it at another frequency while avoiding data loss.,0,Jeremy9249/FIFO,194346029,SystemVerilog,FIFO,21,0,2019-06-29 00:05:36+00:00,[],
3541,https://github.com/Hazlinda/Full-Adder.git,2019-07-01 02:49:44+00:00,Verilog Design and Testbench,0,Hazlinda/Full-Adder,194588937,SystemVerilog,Full-Adder,16,0,2019-08-23 06:23:15+00:00,[],
3542,https://github.com/LeaFZ96/System-Verilog-Format-Compiler.git,2019-07-02 16:23:58+00:00,,0,LeaFZ96/System-Verilog-Format-Compiler,194898306,SystemVerilog,System-Verilog-Format-Compiler,5458,0,2022-02-03 21:50:05+00:00,[],
3543,https://github.com/curbsy/ece_272.git,2019-09-14 08:49:00+00:00,Fall 2015 Code for Digital Logic Design course at Oregon State University. Uses System Verilog.,0,curbsy/ece_272,208413771,SystemVerilog,ece_272,429,0,2019-09-14 08:55:06+00:00,[],https://api.github.com/licenses/gpl-3.0
3544,https://github.com/Mop-u/CDC-FIFO.git,2019-08-27 00:31:46+00:00,,0,Mop-u/CDC-FIFO,204585696,SystemVerilog,CDC-FIFO,14,0,2021-01-16 15:19:28+00:00,[],
3545,https://github.com/Anand-Rao745/UpDownCounter.git,2019-08-24 00:04:07+00:00,A program to model a sequential circuit.,0,Anand-Rao745/UpDownCounter,204086054,SystemVerilog,UpDownCounter,1,0,2019-10-02 04:26:10+00:00,[],
3546,https://github.com/karimitani/ECE-437.git,2019-09-01 19:58:52+00:00,Computer Architecture,5,karimitani/ECE-437,205725873,SystemVerilog,ECE-437,3487,0,2023-10-28 15:29:47+00:00,[],
3547,https://github.com/jerry-jho/udma_uart_lsu.git,2019-09-02 15:25:53+00:00,,0,jerry-jho/udma_uart_lsu,205885397,SystemVerilog,udma_uart_lsu,18,0,2019-09-02 15:27:51+00:00,[],https://api.github.com/licenses/gpl-3.0
3548,https://github.com/calonso88/iir_csa_sub.git,2019-09-22 18:12:01+00:00,Initial experiences with IIR filters using Carry Save Adders and storing filter results with Carry Save Format - Simple Subtraction,0,calonso88/iir_csa_sub,210192809,SystemVerilog,iir_csa_sub,4,0,2019-09-22 18:29:08+00:00,[],
3549,https://github.com/rothej/riscyverilog.git,2019-08-14 17:11:33+00:00,A RISC-Y processor written in verilog,0,rothej/riscyverilog,202393853,SystemVerilog,riscyverilog,37,0,2020-10-21 22:31:01+00:00,[],https://api.github.com/licenses/mit
3550,https://github.com/Guelomon/Sesion-7-ELO212.git,2019-08-10 21:26:30+00:00,,0,Guelomon/Sesion-7-ELO212,201684645,SystemVerilog,Sesion-7-ELO212,8,0,2019-08-10 21:29:24+00:00,[],
3551,https://github.com/kedaizuo/learngit.git,2019-09-23 13:02:19+00:00,,0,kedaizuo/learngit,210356542,SystemVerilog,learngit,54,0,2022-12-04 23:37:44+00:00,[],
3552,https://github.com/at-haa/Arm-Multicycle-Processor.git,2019-07-07 15:00:25+00:00,,0,at-haa/Arm-Multicycle-Processor,195664391,SystemVerilog,Arm-Multicycle-Processor,7,0,2019-07-07 15:02:15+00:00,[],
3553,https://github.com/JoseIuri/Aproximated-UVM.git,2019-08-07 15:34:09+00:00,This repository contains a proposal UVM testbench for aproximated circuits.,4,JoseIuri/Aproximated-UVM,201078327,SystemVerilog,Aproximated-UVM,7380,0,2019-10-24 14:33:42+00:00,"['proposal-uvm-testbench', 'aproximated-circuits', 'uvm']",https://api.github.com/licenses/mit
3554,https://github.com/tienshuoc/2D-maze-with-system-verilog.git,2019-05-24 01:27:12+00:00,a system verilog project solving a dynamic two dimensional maze,0,tienshuoc/2D-maze-with-system-verilog,188331150,SystemVerilog,2D-maze-with-system-verilog,20477,0,2020-03-02 02:09:37+00:00,[],
3555,https://github.com/charlzmerth/bomberman.git,2019-05-24 21:17:24+00:00,FPGA implementation of Bomberman,0,charlzmerth/bomberman,188488503,SystemVerilog,bomberman,69819,0,2020-09-28 08:38:05+00:00,[],
3556,https://github.com/neoH/examples.git,2019-05-31 16:41:30+00:00,,0,neoH/examples,189627424,SystemVerilog,examples,1,0,2019-06-28 07:01:31+00:00,[],
3557,https://github.com/MarkleyO/DesignProject271.git,2019-05-28 22:29:24+00:00,,1,MarkleyO/DesignProject271,189111887,SystemVerilog,DesignProject271,3030,0,2019-06-07 18:09:05+00:00,[],
3558,https://github.com/daniel-dmitrzak/Duck-Hunt-FPGA.git,2019-07-29 17:50:03+00:00,FPGA port of Duck Hunt game,0,daniel-dmitrzak/Duck-Hunt-FPGA,199501166,SystemVerilog,Duck-Hunt-FPGA,2457,0,2019-07-29 17:53:18+00:00,[],
3559,https://github.com/gustcar/uvm-systemverilog.git,2019-08-01 20:12:46+00:00,,0,gustcar/uvm-systemverilog,200113226,SystemVerilog,uvm-systemverilog,27,0,2020-04-27 18:46:51+00:00,[],
3560,https://github.com/gpersyn/hackdac2018_soc.git,2019-08-02 03:34:43+00:00,,0,gpersyn/hackdac2018_soc,200159213,SystemVerilog,hackdac2018_soc,19050,0,2019-08-02 04:04:31+00:00,[],
3561,https://github.com/playbinary/hbm.git,2019-07-22 01:00:11+00:00,,0,playbinary/hbm,198121700,SystemVerilog,hbm,11,0,2019-07-28 16:55:47+00:00,[],https://api.github.com/licenses/apache-2.0
3562,https://github.com/cychotic/FPGA_Verilog_Examples.git,2019-05-29 15:57:51+00:00,,1,cychotic/FPGA_Verilog_Examples,189256955,SystemVerilog,FPGA_Verilog_Examples,606,0,2021-04-15 17:11:26+00:00,[],
3563,https://github.com/pranithbottu/SuperMario_SystemVerilog.git,2019-05-20 15:32:43+00:00,Final project done with partner in Digital Systems Laboratory,0,pranithbottu/SuperMario_SystemVerilog,187668226,SystemVerilog,SuperMario_SystemVerilog,785,0,2019-05-24 16:40:28+00:00,[],
3564,https://github.com/victormanu/ControladorVGA.git,2019-10-01 03:58:25+00:00,Controlador de VGA,0,victormanu/ControladorVGA,212008990,SystemVerilog,ControladorVGA,12889,0,2019-11-13 03:06:41+00:00,[],
3565,https://github.com/aaronferrucci/wwvbtx.git,2019-07-27 00:58:01+00:00,Digital logic to transmit WWVB time code,0,aaronferrucci/wwvbtx,199098138,SystemVerilog,wwvbtx,11,0,2019-07-30 02:47:07+00:00,[],
3566,https://github.com/digital-design-hq/I2C-master-peripheral.git,2019-08-15 07:46:34+00:00,,0,digital-design-hq/I2C-master-peripheral,202497396,SystemVerilog,I2C-master-peripheral,86,0,2019-09-27 21:14:33+00:00,[],
3567,https://github.com/Guelomon/Sesion-Lab-7.git,2019-08-12 22:34:00+00:00,,0,Guelomon/Sesion-Lab-7,202019032,SystemVerilog,Sesion-Lab-7,26,0,2019-08-12 22:36:56+00:00,[],
3568,https://github.com/MarioPonce2910/verificacion.git,2019-08-23 21:48:32+00:00,,0,MarioPonce2910/verificacion,204074259,SystemVerilog,verificacion,1161,0,2019-11-28 05:03:02+00:00,[],
3569,https://github.com/melt-umn/Oberon0LSP.git,2019-08-23 15:59:03+00:00,Oberon0 Language Server Protocol implementation in Silver.,0,melt-umn/Oberon0LSP,204029913,SystemVerilog,Oberon0LSP,9439,0,2019-08-30 18:55:06+00:00,[],
3570,https://github.com/kobo8924/RISCV_Pipline.git,2019-09-08 05:06:50+00:00,,0,kobo8924/RISCV_Pipline,207064537,SystemVerilog,RISCV_Pipline,47,0,2020-01-07 03:05:24+00:00,[],
3571,https://github.com/izzul023/Izzul-.git,2019-09-09 19:39:25+00:00,,0,izzul023/Izzul-,207390213,SystemVerilog,Izzul-,1,0,2019-09-19 18:45:28+00:00,[],
3572,https://github.com/long-recruit2/safe.git,2019-07-19 12:42:05+00:00,,0,long-recruit2/safe,197770923,SystemVerilog,safe,1089,0,2019-07-24 13:26:52+00:00,[],
3573,https://github.com/monurcan/sageintern.git,2019-07-16 22:24:23+00:00,TÜBİTAK SAGE internship report and source files.,0,monurcan/sageintern,197275806,SystemVerilog,sageintern,25569,0,2021-01-16 12:54:22+00:00,[],
3574,https://github.com/A13X0150N/matrixMult.git,2019-06-18 06:41:44+00:00,matrix operations,0,A13X0150N/matrixMult,192481264,SystemVerilog,matrixMult,909,0,2020-02-01 13:57:34+00:00,[],
3575,https://github.com/arvindaru2/Maze-Processor.git,2019-06-25 03:59:24+00:00,,0,arvindaru2/Maze-Processor,193631707,SystemVerilog,Maze-Processor,333747,0,2019-06-25 04:27:20+00:00,[],
3576,https://github.com/0xD503/I2C-Interface.git,2019-05-21 21:39:54+00:00,I2C Interface RTL description,0,0xD503/I2C-Interface,187917338,SystemVerilog,I2C-Interface,4,0,2019-05-30 19:14:35+00:00,"['i2c', 'serial-communication', 'serial-interface', 'fpga-soc']",
3577,https://github.com/haichuanxuken/Computer-Organization-and-Design--RISC-V-Pipelined-Processor.git,2019-05-26 04:05:41+00:00,,0,haichuanxuken/Computer-Organization-and-Design--RISC-V-Pipelined-Processor,188638305,SystemVerilog,Computer-Organization-and-Design--RISC-V-Pipelined-Processor,49423,0,2019-05-26 04:08:44+00:00,[],
3578,https://github.com/nimamg/Direct-Mapped-Cache-Memory.git,2019-06-05 08:29:02+00:00,,0,nimamg/Direct-Mapped-Cache-Memory,190356416,SystemVerilog,Direct-Mapped-Cache-Memory,8,0,2019-06-18 17:26:36+00:00,[],
3579,https://github.com/hArtig4n/dynamic-cast-with-SystemVerilog.git,2019-08-18 13:30:32+00:00,Dynamic cast when source expression is null,0,hArtig4n/dynamic-cast-with-SystemVerilog,203006796,SystemVerilog,dynamic-cast-with-SystemVerilog,4,0,2019-08-18 15:28:52+00:00,[],https://api.github.com/licenses/mit
3580,https://github.com/syloog/pipelineProcessor.git,2019-07-08 17:30:56+00:00,Pipeline processor written in SystemVerilog with support of Stall and Flush functions,0,syloog/pipelineProcessor,195857800,SystemVerilog,pipelineProcessor,13,0,2019-07-08 17:40:52+00:00,[],
3581,https://github.com/vasschrys/MIPS_Multicycle.git,2019-09-16 22:56:00+00:00,"Multicycle processor that had to handle the following instructions: add, sub, and, or, slt, lw, sw, beq, addi, and j. Registers, multiplexers, and internal logic had to be set up. The multicycle processor is divided into three units: the controller, datapath, and mem (memory) units.",0,vasschrys/MIPS_Multicycle,208912694,SystemVerilog,MIPS_Multicycle,16,0,2019-09-16 22:59:39+00:00,[],
3582,https://github.com/jaquerinte/RISCV_RTCS_Core.git,2019-09-17 10:06:44+00:00,AGGGGGGGGGGG!!!!!!!!!!!,0,jaquerinte/RISCV_RTCS_Core,209021136,SystemVerilog,RISCV_RTCS_Core,29633,0,2020-09-29 06:12:43+00:00,[],https://api.github.com/licenses/apache-2.0
3583,https://github.com/TinaHsing/Quantaser_RP_FPGA.git,2019-09-26 09:00:32+00:00,,0,TinaHsing/Quantaser_RP_FPGA,211045707,SystemVerilog,Quantaser_RP_FPGA,690738,0,2020-10-14 04:40:00+00:00,[],
3584,https://github.com/syloog/nimgame.git,2019-07-08 17:21:24+00:00,CS223 Nim - Mathematical Strategy Game,0,syloog/nimgame,195856545,SystemVerilog,nimgame,14,0,2019-07-08 17:24:53+00:00,[],
3585,https://github.com/vmmc2/Jupiter.git,2019-07-21 19:53:45+00:00,"A RISC-V processor simulator made using SystemVerilog, Verilog, VHDL and Python",0,vmmc2/Jupiter,198099065,SystemVerilog,Jupiter,1485,0,2019-07-21 20:18:00+00:00,[],
3586,https://github.com/PurdueSoCet/SoCET_OpenSource.git,2019-07-18 17:53:06+00:00,This repository contains the IP generated by the Purdue SoCET design team that has been approved for open source publication.,0,PurdueSoCet/SoCET_OpenSource,197633162,SystemVerilog,SoCET_OpenSource,119,0,2019-08-27 20:11:18+00:00,[],
3587,https://github.com/amiteee78/RTL_design.git,2019-09-07 13:56:40+00:00,,0,amiteee78/RTL_design,206975633,SystemVerilog,RTL_design,5375,0,2023-07-22 18:25:05+00:00,[],
3588,https://github.com/konghongxin0/Neural_network-Interface-FPGA.git,2019-09-13 22:59:41+00:00,,0,konghongxin0/Neural_network-Interface-FPGA,208359517,SystemVerilog,Neural_network-Interface-FPGA,105964,0,2019-09-16 18:28:34+00:00,[],
3589,https://github.com/ebertn/eece437processor.git,2019-09-13 21:13:20+00:00,"A MIPS CPU developed for ECE 437 by Nick Ebert and Chris Jovanovic. The CPU implements pipelining, caching, and is dual core with cache coherency. ",0,ebertn/eece437processor,208347512,SystemVerilog,eece437processor,1862,0,2020-06-17 03:17:16+00:00,[],
3590,https://github.com/ElectronicBatman/Generic-Mat-Mult.git,2019-08-24 18:14:41+00:00,Systemverilog matrix multiplier,0,ElectronicBatman/Generic-Mat-Mult,204195237,SystemVerilog,Generic-Mat-Mult,6,0,2019-08-24 18:21:55+00:00,[],
3591,https://github.com/sensille/flipper.git,2019-07-10 04:58:15+00:00,Klipper slave implementation in FPGA,0,sensille/flipper,196134165,SystemVerilog,flipper,83,0,2020-02-21 06:12:27+00:00,[],
3592,https://github.com/kangjian888/color_filter_testing.git,2019-06-14 05:03:31+00:00,,0,kangjian888/color_filter_testing,191878623,SystemVerilog,color_filter_testing,7842,0,2019-08-23 09:14:32+00:00,[],
3593,https://github.com/brimstone-/RISC-V_CPU.git,2019-08-28 21:18:18+00:00,12th place submission for ECE 411's design competition in Spring 2019,0,brimstone-/RISC-V_CPU,205025108,SystemVerilog,RISC-V_CPU,107,0,2019-09-09 22:16:26+00:00,[],
3594,https://github.com/MoltenKhor/RetiLogiche_Verilog.git,2019-06-15 12:35:42+00:00,Sintesi e descrizioni dele tracce d'esame di Reti Logiche @UNIPI,0,MoltenKhor/RetiLogiche_Verilog,192076722,SystemVerilog,RetiLogiche_Verilog,11,0,2019-12-23 22:25:09+00:00,[],
3595,https://github.com/fyazici/max1000-template.git,2019-07-07 18:12:57+00:00,Quartus project template with generic pin assignments and clock constraints for Arrow's MAX1000 board,0,fyazici/max1000-template,195682919,SystemVerilog,max1000-template,7,0,2019-07-07 21:56:15+00:00,[],
3596,https://github.com/anson-tanglu/HelloWorld.git,2019-07-18 01:06:19+00:00,repository for python and uvm,0,anson-tanglu/HelloWorld,197485830,SystemVerilog,HelloWorld,0,0,2019-07-18 01:22:25+00:00,[],
3597,https://github.com/osamaadam/polymorphSV.git,2019-07-23 16:00:40+00:00,,0,osamaadam/polymorphSV,198463984,SystemVerilog,polymorphSV,5,0,2023-01-28 10:20:56+00:00,[],
3598,https://github.com/XiFanHeNai/SweRV_Studying.git,2019-05-21 14:53:38+00:00,,0,XiFanHeNai/SweRV_Studying,187859107,SystemVerilog,SweRV_Studying,10984,0,2019-09-24 17:48:28+00:00,[],https://api.github.com/licenses/apache-2.0
3599,https://github.com/wonseobshin/402Project1-Simple-SkyTrain-Gate-FSM.git,2019-09-22 06:07:36+00:00,,0,wonseobshin/402Project1-Simple-SkyTrain-Gate-FSM,210099176,SystemVerilog,402Project1-Simple-SkyTrain-Gate-FSM,2642,0,2019-10-02 06:19:45+00:00,[],
3600,https://github.com/karino2/DDCA_exercise.git,2019-09-19 12:06:06+00:00,,0,karino2/DDCA_exercise,209543358,SystemVerilog,DDCA_exercise,320,0,2019-10-25 08:32:17+00:00,[],
3601,https://github.com/shenyaming/swerv_eh1.git,2019-09-17 11:47:35+00:00,,0,shenyaming/swerv_eh1,209039243,SystemVerilog,swerv_eh1,4381,0,2019-09-17 11:48:17+00:00,[],https://api.github.com/licenses/apache-2.0
3602,https://github.com/NicolasCanales/Nexys-4ddr_VGA.git,2019-09-03 00:21:10+00:00,,0,NicolasCanales/Nexys-4ddr_VGA,205955928,SystemVerilog,Nexys-4ddr_VGA,32,0,2022-05-21 20:23:41+00:00,[],
3603,https://github.com/jigneshrs/uvm-vendingMachine.git,2019-09-28 18:56:23+00:00,Vending Machine test using UVM,0,jigneshrs/uvm-vendingMachine,211547951,SystemVerilog,uvm-vendingMachine,75,0,2019-09-29 03:09:51+00:00,[],
3604,https://github.com/ryan-gits/fpga-fp.git,2019-06-07 00:44:52+00:00,Floating point modules,0,ryan-gits/fpga-fp,190668955,SystemVerilog,fpga-fp,6,0,2019-06-09 03:28:25+00:00,[],
3605,https://github.com/JoeBlanchard/Oberon0LSP.git,2019-08-23 15:54:47+00:00,A Language Server Protocol implementation of Oberon0 in Silver.,0,JoeBlanchard/Oberon0LSP,204029260,SystemVerilog,Oberon0LSP,9432,0,2019-08-23 15:57:03+00:00,[],
3606,https://github.com/toddstrader/dpi-compile.git,2019-08-07 01:47:16+00:00,DPI protected Verilog proof of concept,0,toddstrader/dpi-compile,200951534,SystemVerilog,dpi-compile,38,0,2019-09-09 09:40:45+00:00,[],https://api.github.com/licenses/mit
3607,https://github.com/ryan-gits/fpga-arbiter.git,2019-07-03 05:55:22+00:00,Round robin arbiter,0,ryan-gits/fpga-arbiter,194988423,SystemVerilog,fpga-arbiter,1,0,2019-07-03 06:04:57+00:00,[],
3608,https://github.com/peterltn2015/CSE-371.git,2019-05-31 06:23:06+00:00,Design Of Digital Circuits And Systems,0,peterltn2015/CSE-371,189539330,SystemVerilog,CSE-371,21,0,2019-05-31 06:29:26+00:00,[],
3609,https://github.com/Jackwin/xc7z035.git,2019-07-28 08:33:48+00:00,,0,Jackwin/xc7z035,199262300,SystemVerilog,xc7z035,4388,0,2022-01-24 13:39:02+00:00,[],
3610,https://github.com/Tongxins/MP3-Experiment.git,2019-07-29 08:39:12+00:00,five-stage flow experiment,0,Tongxins/MP3-Experiment,199413053,SystemVerilog,MP3-Experiment,33527,0,2019-07-29 08:44:26+00:00,[],https://api.github.com/licenses/gpl-3.0
3611,https://github.com/aranha96/MIPS-CECI.git,2019-08-20 22:49:29+00:00,,0,aranha96/MIPS-CECI,203465907,SystemVerilog,MIPS-CECI,14,0,2019-09-24 19:43:25+00:00,[],
3612,https://github.com/y0sshi/p_WFF.git,2019-08-19 11:33:32+00:00,pipelined Wave-Front-Fetch graphcut algorithm using FPGA,0,y0sshi/p_WFF,203159953,SystemVerilog,p_WFF,28,0,2022-01-25 11:23:22+00:00,[],
3613,https://github.com/markquimpo/DigitalCircuit-Design.git,2019-09-01 23:13:51+00:00,,0,markquimpo/DigitalCircuit-Design,205743004,SystemVerilog,DigitalCircuit-Design,2518,0,2019-09-01 23:17:46+00:00,[],
3614,https://github.com/rnigam04/Ethernet-2X2-Switch-Box.git,2019-09-05 07:46:53+00:00,Repo will contain the Code of Ethernet 2X2 Ethernet Switch Box in SV and SV/UVM,0,rnigam04/Ethernet-2X2-Switch-Box,206505613,SystemVerilog,Ethernet-2X2-Switch-Box,1,0,2019-09-05 08:02:02+00:00,[],
3615,https://github.com/rojomaldit/ArquitecturaFPGA.git,2019-08-21 14:49:02+00:00,,0,rojomaldit/ArquitecturaFPGA,203605354,SystemVerilog,ArquitecturaFPGA,96135,0,2019-11-14 15:44:36+00:00,[],
3616,https://github.com/digital-design-hq/Avalon-Adapter.git,2019-08-27 05:30:35+00:00,,0,digital-design-hq/Avalon-Adapter,204626575,SystemVerilog,Avalon-Adapter,3,0,2019-08-28 04:32:43+00:00,[],
3617,https://github.com/tallerdigitales2019s2/laboratorio2.git,2019-08-26 20:37:53+00:00,,1,tallerdigitales2019s2/laboratorio2,204557398,SystemVerilog,laboratorio2,7365,0,2019-08-26 20:41:25+00:00,[],
3618,https://github.com/rusito-23/arki.git,2019-09-18 03:39:37+00:00,Quartus II Pipelined Processor,0,rusito-23/arki,209210882,SystemVerilog,arki,455,0,2020-07-14 23:23:37+00:00,"['quartus2', 'system-verilog', 'pipeline-processor']",
3619,https://github.com/nekoteoj/HWSynLab-final-project.git,2019-05-19 09:51:06+00:00,The 3 days miracle implementation of pong game using Xillinx Basys 3 FPGA Board,0,nekoteoj/HWSynLab-final-project,187459331,SystemVerilog,HWSynLab-final-project,13537,0,2022-01-11 13:31:06+00:00,[],
3620,https://github.com/nimamg/MIPS-Pipeline.git,2019-05-23 08:14:55+00:00,A pipeline implementation of the MIPS processor,0,nimamg/MIPS-Pipeline,188190973,SystemVerilog,MIPS-Pipeline,128,0,2019-06-05 08:23:03+00:00,"['mips', 'cpu', 'processor', 'systemverilog', 'verilog', 'pipeline']",
3621,https://github.com/AndersonNguyen1/RISCV-Processor.git,2019-06-20 00:01:55+00:00,,0,AndersonNguyen1/RISCV-Processor,192819724,SystemVerilog,RISCV-Processor,222,0,2019-06-20 00:20:42+00:00,[],
3622,https://github.com/deandalo/Digital-Systems-Engineering.git,2019-07-01 17:34:24+00:00,SystemVerilog code developed for the Digital Systems Engineering class during spring 2019 semester in University of Idaho.  This code was developed for the projects of the class.  The instructor for this class is Dr. James Frenzel.,0,deandalo/Digital-Systems-Engineering,194716528,SystemVerilog,Digital-Systems-Engineering,21,0,2019-07-01 19:11:04+00:00,[],
3623,https://github.com/jinzh97/ISA.git,2019-07-02 19:28:32+00:00,,0,jinzh97/ISA,194923081,SystemVerilog,ISA,17699,0,2019-07-02 19:32:33+00:00,[],
3624,https://github.com/ph504/Computer-Architecture.git,2019-07-06 13:06:39+00:00,CA course 's final project,0,ph504/Computer-Architecture,195540467,SystemVerilog,Computer-Architecture,1486,0,2019-10-28 10:07:12+00:00,[],
3625,https://github.com/PSS1998/Cache-design.git,2019-07-07 18:01:22+00:00,Cache design with verilog,0,PSS1998/Cache-design,195681898,SystemVerilog,Cache-design,1,0,2019-07-20 08:51:59+00:00,[],
3626,https://github.com/yanglei091991/VlogData2C.git,2019-09-02 06:33:10+00:00,Convert serveral vlog data files into C/ASM so that compiler could generate the data into elf's sections.,0,yanglei091991/VlogData2C,205791612,SystemVerilog,VlogData2C,130,0,2019-09-02 09:39:47+00:00,[],
3627,https://github.com/sru-b/CNN-accelerator.git,2019-08-24 21:33:48+00:00,An attempt at speeding the process of using CNN for image detection using the FPGA,1,sru-b/CNN-accelerator,204215106,SystemVerilog,CNN-accelerator,546,0,2019-08-24 22:03:18+00:00,[],
3628,https://github.com/xakstreet/gmii_switch.git,2019-09-02 12:17:22+00:00,2x2 gmii switch,0,xakstreet/gmii_switch,205850418,SystemVerilog,gmii_switch,75,0,2019-11-30 14:50:43+00:00,[],
3629,https://github.com/iremural/cs223-Digital-Design-Project.git,2019-09-12 21:54:00+00:00,Digital Design Course Term Project ,0,iremural/cs223-Digital-Design-Project,208152741,SystemVerilog,cs223-Digital-Design-Project,521,0,2019-09-12 22:27:01+00:00,[],
3630,https://github.com/mjd001/Sandbox12.git,2019-06-18 18:43:41+00:00,Sample working,0,mjd001/Sandbox12,192594871,SystemVerilog,Sandbox12,85,0,2019-06-18 19:05:14+00:00,[],
3631,https://github.com/Insper/DE10-Standard-v.1.3.0-SystemCD.git,2019-07-29 20:30:35+00:00,Copy of: https://www.terasic.com.tw/cgi-bin/page/archive.pl?Language=English&No=1081,0,Insper/DE10-Standard-v.1.3.0-SystemCD,199522763,SystemVerilog,DE10-Standard-v.1.3.0-SystemCD,233668,0,2023-06-22 03:23:18+00:00,"['de10-standard', 'terasic']",
3632,https://github.com/emelrad12/FPGA_Project1.git,2019-07-18 19:47:43+00:00,Preso look at me,0,emelrad12/FPGA_Project1,197647644,SystemVerilog,FPGA_Project1,20,0,2019-07-24 20:42:39+00:00,[],
3633,https://github.com/Artem1199/ECE581-P2P2-Traffic.git,2019-07-19 05:26:16+00:00,Traffic Light controller SV,0,Artem1199/ECE581-P2P2-Traffic,197707377,SystemVerilog,ECE581-P2P2-Traffic,5,0,2019-07-21 17:59:47+00:00,[],
3634,https://github.com/mstrdm/RTL_projects.git,2019-07-09 05:33:37+00:00,"Various RTL practice projects, lessons, and useful FPGA modules",1,mstrdm/RTL_projects,195939112,SystemVerilog,RTL_projects,33,0,2019-08-05 08:20:44+00:00,[],
3635,https://github.com/marshray/svl_stuff.git,2019-07-23 16:05:59+00:00,Experiments in SystemVerilog,0,marshray/svl_stuff,198464858,SystemVerilog,svl_stuff,12,0,2019-07-23 16:06:06+00:00,[],https://api.github.com/licenses/apache-2.0
3636,https://github.com/Aya-Amin/Verilog-Projects.git,2019-07-14 22:46:20+00:00,,0,Aya-Amin/Verilog-Projects,196890576,SystemVerilog,Verilog-Projects,438,0,2019-07-14 22:51:38+00:00,"['computer-architecture', 'verilog', 'system-verilog']",
3637,https://github.com/benjaminvf/ELO212-sources.git,2019-09-13 17:54:30+00:00,Diseños en SystemVerilog para laboratorio de sistemas digitales (2019).,0,benjaminvf/ELO212-sources,208317838,SystemVerilog,ELO212-sources,47,0,2021-09-22 12:01:36+00:00,[],
3638,https://github.com/appledore22/Wrap_Boundary_Calculation.git,2019-08-13 11:48:25+00:00,Calculation of wrap boundary and subsequent addresses using SystemVeriog,0,appledore22/Wrap_Boundary_Calculation,202132828,SystemVerilog,Wrap_Boundary_Calculation,6,0,2019-08-15 06:50:54+00:00,[],
3639,https://github.com/VinNikVla/A6.git,2019-08-13 13:38:46+00:00,bit_population_counter,0,VinNikVla/A6,202152520,SystemVerilog,A6,201,0,2019-08-13 14:18:38+00:00,[],
3640,https://github.com/sruthysusan/Monitoring.git,2019-08-19 07:02:11+00:00,VerilogHdl,0,sruthysusan/Monitoring,203116773,SystemVerilog,Monitoring,5,0,2019-08-19 07:06:58+00:00,[],
3641,https://github.com/braamBeresford/NESDecoderFinalProject.git,2019-05-23 20:36:32+00:00,NES controller decoder for Digital Logic Design (ECE 271) final project. ,0,braamBeresford/NESDecoderFinalProject,188302871,SystemVerilog,NESDecoderFinalProject,28,0,2020-01-15 20:08:30+00:00,[],https://api.github.com/licenses/agpl-3.0
3642,https://github.com/lit26/CSE-371.git,2019-05-31 06:38:43+00:00,University of Washington Design Of Digital Circuits And Systems,0,lit26/CSE-371,189541496,SystemVerilog,CSE-371,38,0,2019-06-05 22:58:39+00:00,[],
3643,https://github.com/ravik0/ECE3829_Lab3.git,2019-09-16 18:12:56+00:00,DAC Waveform and Moving Block,0,ravik0/ECE3829_Lab3,208866602,SystemVerilog,ECE3829_Lab3,89,0,2019-09-22 18:17:35+00:00,[],
3644,https://github.com/Gvascons/HARDWARE-2.git,2019-09-13 17:32:01+00:00,,0,Gvascons/HARDWARE-2,208314161,SystemVerilog,HARDWARE-2,4457,0,2019-10-11 20:43:27+00:00,[],
3645,https://github.com/lucasgrisiq/procRISCV.git,2019-09-06 16:46:11+00:00,,0,lucasgrisiq/procRISCV,206836548,SystemVerilog,procRISCV,25665,0,2019-11-11 19:20:08+00:00,[],
3646,https://github.com/east1203/uvm_codes.git,2019-08-22 01:55:30+00:00,,1,east1203/uvm_codes,203694864,SystemVerilog,uvm_codes,302,0,2019-09-28 14:55:16+00:00,[],
3647,https://github.com/ybtsao/VLSI_Lab.git,2019-07-08 14:57:24+00:00,,0,ybtsao/VLSI_Lab,195834627,SystemVerilog,VLSI_Lab,165,0,2019-07-10 14:25:46+00:00,[],
3648,https://github.com/ThreeBridge/UDP_Image_ips.git,2019-07-23 06:53:43+00:00,,0,ThreeBridge/UDP_Image_ips,198370613,SystemVerilog,UDP_Image_ips,340,0,2019-07-23 07:12:27+00:00,[],
3649,https://github.com/AlbertoFelix/Processador8b.git,2019-08-06 18:34:23+00:00,,0,AlbertoFelix/Processador8b,200904828,SystemVerilog,Processador8b,8,0,2019-08-20 18:34:40+00:00,[],
3650,https://github.com/Ciju94/Master_OpenAMP_De1SoC.git,2019-08-03 19:56:10+00:00,,0,Ciju94/Master_OpenAMP_De1SoC,200415730,SystemVerilog,Master_OpenAMP_De1SoC,12191,0,2019-08-22 07:07:26+00:00,[],
3651,https://github.com/heogih/ETRI-SW-SoC-GihyeonHeo.git,2019-08-18 12:06:40+00:00,,0,heogih/ETRI-SW-SoC-GihyeonHeo,202998100,SystemVerilog,ETRI-SW-SoC-GihyeonHeo,3937,0,2019-08-18 12:20:40+00:00,[],
3652,https://github.com/zif015/cse140hw1.git,2019-08-14 06:59:12+00:00,,0,zif015/cse140hw1,202293217,SystemVerilog,cse140hw1,15,0,2019-08-15 00:47:58+00:00,[],
3653,https://github.com/Bamdres16/Laboratorio2-ALU.git,2019-09-04 02:09:45+00:00,,0,Bamdres16/Laboratorio2-ALU,206210541,SystemVerilog,Laboratorio2-ALU,16454,0,2021-07-21 15:09:29+00:00,[],
3654,https://github.com/Alex-Wolf-7/ISA.git,2019-06-14 00:43:13+00:00,,0,Alex-Wolf-7/ISA,191851812,SystemVerilog,ISA,566,0,2019-06-14 00:45:53+00:00,[],
3655,https://github.com/honey-kingdom/sw_arch.git,2019-06-17 12:38:51+00:00,,0,honey-kingdom/sw_arch,192344347,SystemVerilog,sw_arch,46,0,2019-07-13 16:27:03+00:00,[],
3656,https://github.com/usman-kakakhel/SingeCycleProcessor.git,2019-05-27 20:38:45+00:00,Simulation of a 32 bit mips SimpleCycleProcessor,0,usman-kakakhel/SingeCycleProcessor,188906379,SystemVerilog,SingeCycleProcessor,9,0,2020-05-27 23:36:16+00:00,[],
3657,https://github.com/vinithabaddam/ECE593_MESI_ISC.git,2019-05-25 20:09:31+00:00,,0,vinithabaddam/ECE593_MESI_ISC,188607928,SystemVerilog,ECE593_MESI_ISC,1007,0,2019-06-06 04:57:37+00:00,[],
3658,https://github.com/AminiAria/CPE133Labs.git,2019-06-21 01:08:45+00:00,,0,AminiAria/CPE133Labs,193007410,SystemVerilog,CPE133Labs,13,0,2019-06-21 01:33:47+00:00,[],
3659,https://github.com/codamin/Computer_Architecture_CA_4.git,2019-05-21 13:50:56+00:00,PipeLine CPU project Spring 2019,0,codamin/Computer_Architecture_CA_4,187847060,SystemVerilog,Computer_Architecture_CA_4,1020,0,2019-08-01 06:50:27+00:00,[],
3660,https://github.com/mjd001/shatest.git,2019-05-21 17:17:47+00:00,,0,mjd001/shatest,187882710,SystemVerilog,shatest,3959,0,2019-05-21 17:48:40+00:00,[],
3661,https://github.com/ishto7/SharifNotes.git,2019-07-02 11:56:06+00:00,دانلود جزوات درس‌های مهندسی برق دانشگاه صنعتی شریف,1,ishto7/SharifNotes,194854157,SystemVerilog,SharifNotes,2687032,0,2022-08-04 18:32:40+00:00,[],
3662,https://github.com/haosong830/ECE551.git,2019-07-18 04:59:10+00:00,,0,haosong830/ECE551,197514426,SystemVerilog,ECE551,22,0,2019-07-18 05:11:20+00:00,[],
3663,https://github.com/cpuex2019-7th/fpu.git,2019-09-27 05:47:36+00:00,,0,cpuex2019-7th/fpu,211244987,SystemVerilog,fpu,9541,0,2019-11-13 15:09:21+00:00,[],
3664,https://github.com/AlexM117/FPGA_Processor.git,2019-07-03 03:14:10+00:00,,0,AlexM117/FPGA_Processor,194971207,SystemVerilog,FPGA_Processor,12,0,2019-07-03 03:24:23+00:00,[],
3665,https://github.com/Guelomon/vga.git,2019-08-19 00:22:55+00:00,,0,Guelomon/vga,203070633,SystemVerilog,vga,2,0,2019-08-19 00:23:45+00:00,[],
3666,https://github.com/jan-gebauer/SystemVerilogStudy.git,2019-09-02 08:18:10+00:00,,0,jan-gebauer/SystemVerilogStudy,205809399,SystemVerilog,SystemVerilogStudy,8,0,2019-09-07 10:22:29+00:00,[],https://api.github.com/licenses/mit
3667,https://github.com/khuang38/RISC-V-PROCESSOR.git,2019-09-03 18:49:37+00:00,,0,khuang38/RISC-V-PROCESSOR,206149514,SystemVerilog,RISC-V-PROCESSOR,270,0,2019-09-03 18:57:30+00:00,[],
3668,https://github.com/hanhha/Nand2Tetris.git,2019-08-24 10:41:55+00:00,Another Nand2Tetris course's implementation,0,hanhha/Nand2Tetris,204143816,SystemVerilog,Nand2Tetris,4892,0,2022-08-06 14:51:47+00:00,[],https://api.github.com/licenses/unlicense
3669,https://github.com/aranha96/ADDAC-Completo.git,2019-07-30 23:26:41+00:00,,0,aranha96/ADDAC-Completo,199741973,SystemVerilog,ADDAC-Completo,9,0,2019-07-30 23:31:09+00:00,[],
3670,https://github.com/nnikolov3/gray_to_binary.git,2019-07-15 01:52:38+00:00,Gray to binary converter,0,nnikolov3/gray_to_binary,196905191,SystemVerilog,gray_to_binary,1,0,2019-07-15 01:52:56+00:00,[],
3671,https://github.com/barua-anik/System-Verification.git,2019-09-19 16:55:00+00:00,,0,barua-anik/System-Verification,209605595,SystemVerilog,System-Verification,647,0,2019-09-19 17:01:40+00:00,[],
3672,https://github.com/sandeep-lingambhotla/Simple_buffer.git,2019-06-10 00:50:20+00:00,,0,sandeep-lingambhotla/Simple_buffer,191071650,SystemVerilog,Simple_buffer,13,0,2019-06-10 00:59:43+00:00,[],
3673,https://github.com/akki0084/Special-microprocessor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities..git,2019-05-29 03:01:17+00:00,"RTL design built with 8-bit XOR based LFSR Processor supporting Hamming Distance count, Cellular Automata 3, etc. Implemented and verified the design using SystemVerilog in ModelSim and performed Static-Timing Analysis with Quartus.",0,akki0084/Special-microprocessor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities.,189140516,SystemVerilog,Special-microprocessor-supporting-various-Pseudo-Random-Pattern-Generating-functionalities.,34,0,2019-05-29 03:02:10+00:00,[],
3674,https://github.com/nguyensinhton9x/uvm_env_ver3.git,2019-06-16 15:17:08+00:00,uvm_env_ver3,1,nguyensinhton9x/uvm_env_ver3,192205896,SystemVerilog,uvm_env_ver3,9210,0,2019-07-19 18:46:50+00:00,[],
3675,https://github.com/Hazlinda/D-Flip-Flop.git,2019-07-01 06:04:04+00:00,"The D flip-flop tracks the input, making transitions with match those of the input D. The D stands for ""data""; this flip-flop stores the value that is on the data line. It can be thought of as a basic memory cell. A D flip-flop can be made from a set/reset flip-flop by tying the set to the reset through an inverter.",0,Hazlinda/D-Flip-Flop,194609568,SystemVerilog,D-Flip-Flop,3,0,2019-07-02 01:49:55+00:00,[],
3676,https://github.com/AndersonNobrega/CircuitosIntegrados.git,2019-05-26 00:49:10+00:00,Circuitos integrados implementados utilizando SystemVerilog,0,AndersonNobrega/CircuitosIntegrados,188625893,SystemVerilog,CircuitosIntegrados,159,0,2019-05-26 19:14:16+00:00,[],
3677,https://github.com/andrefqms/LOAC.git,2019-07-06 20:38:56+00:00,Exercicios sobre maquina de estados,0,andrefqms/LOAC,195581262,SystemVerilog,LOAC,877,0,2021-01-05 14:01:18+00:00,[],
3678,https://github.com/Lucas-Pino/grupo_309_digilab.git,2019-08-09 19:19:34+00:00,duh,0,Lucas-Pino/grupo_309_digilab,201527663,SystemVerilog,grupo_309_digilab,33200,0,2019-08-31 06:24:11+00:00,[],
3679,https://github.com/dmishins/PTB_Emulator.git,2019-08-01 15:06:03+00:00,,0,dmishins/PTB_Emulator,200072078,SystemVerilog,PTB_Emulator,746,0,2019-08-01 15:06:40+00:00,[],
3680,https://github.com/xxxbano/Str_Parser.git,2019-08-30 20:28:48+00:00,string parser,0,xxxbano/Str_Parser,205452549,SystemVerilog,Str_Parser,7987,0,2019-09-05 19:11:58+00:00,[],
3681,https://github.com/ak-seyam/lhlb-mips.git,2019-09-30 18:19:59+00:00,,1,ak-seyam/lhlb-mips,211925742,SystemVerilog,lhlb-mips,213,0,2019-10-02 15:40:49+00:00,[],
3682,https://github.com/ak-seyam/fpuGUI.git,2019-06-12 17:43:41+00:00,design of floating point arithmetic unit with verlog,0,ak-seyam/fpuGUI,191618200,SystemVerilog,fpuGUI,14,0,2019-09-03 06:30:04+00:00,[],
3683,https://github.com/MahmoudEwaisha/Cramers-rule-using-Verilog.git,2019-07-24 16:04:21+00:00,,0,MahmoudEwaisha/Cramers-rule-using-Verilog,198668371,SystemVerilog,Cramers-rule-using-Verilog,926,0,2019-07-24 16:08:48+00:00,[],
3684,https://github.com/Dmitriy0111/enano.git,2019-07-18 12:00:22+00:00,,0,Dmitriy0111/enano,197578517,SystemVerilog,enano,156,0,2019-08-19 14:53:57+00:00,[],
3685,https://github.com/jeesonk/fpga_projects.git,2019-07-18 04:47:26+00:00,SystemVerilog,1,jeesonk/fpga_projects,197513233,SystemVerilog,fpga_projects,87539,0,2021-02-04 10:19:19+00:00,[],
3686,https://github.com/Hazlinda/Fork-Join.git,2019-07-02 01:57:15+00:00,"A Verilog fork...join block always causes the process executing the fork statement to block until the termination of all forked processes. With the addition of the join_any and join_none keywords, SystemVerilog provides three choices for specifying when the parent (forking) process resumes execution. ",0,Hazlinda/Fork-Join,194769715,SystemVerilog,Fork-Join,7,0,2019-07-02 02:05:48+00:00,[],
3687,https://github.com/timchen0618/DCLAB2019_Final_Bomb.git,2019-06-26 09:11:26+00:00,,0,timchen0618/DCLAB2019_Final_Bomb,193870439,SystemVerilog,DCLAB2019_Final_Bomb,2501,0,2020-11-02 14:16:28+00:00,[],
3688,https://github.com/saizhang0218/Maestro.git,2019-06-26 00:43:39+00:00,Initial Maestro Implementation,0,saizhang0218/Maestro,193802951,SystemVerilog,Maestro,3286,0,2019-07-14 09:46:38+00:00,[],
3689,https://github.com/mmahdim77/microprogrammed-control-unit.git,2019-07-02 06:08:13+00:00,,0,mmahdim77/microprogrammed-control-unit,194798805,SystemVerilog,microprogrammed-control-unit,7048,0,2019-07-09 13:34:57+00:00,[],
3690,https://github.com/wofanqiang/VDF_FPGA_Competition_xjtu.git,2019-09-19 09:49:04+00:00,VDF_FPGA_Competition,0,wofanqiang/VDF_FPGA_Competition_xjtu,209518425,SystemVerilog,VDF_FPGA_Competition_xjtu,10703,0,2019-12-30 13:24:29+00:00,[],
3691,https://github.com/braamBeresford/32bitMipsMultiCycle.git,2019-09-19 22:06:21+00:00,,0,braamBeresford/32bitMipsMultiCycle,209656446,SystemVerilog,32bitMipsMultiCycle,12,0,2019-10-10 23:26:13+00:00,[],
3692,https://github.com/duhjesus/sample.git,2019-08-07 09:54:07+00:00,sample,0,duhjesus/sample,201022427,SystemVerilog,sample,11,0,2019-08-07 10:17:35+00:00,[],
3693,https://github.com/iprabhat29/Asynchronous-FIFO.git,2019-08-02 05:09:35+00:00,Design and Verification of Asynchronous FIFO using System Verilog/UVM,1,iprabhat29/Asynchronous-FIFO,200168954,SystemVerilog,Asynchronous-FIFO,5,0,2019-08-02 05:17:35+00:00,[],
3694,https://github.com/fpt2019-slab-team/Control_Team_MNZ.git,2019-08-08 11:09:28+00:00,,0,fpt2019-slab-team/Control_Team_MNZ,201241358,SystemVerilog,Control_Team_MNZ,46415,0,2019-08-28 13:05:08+00:00,[],
3695,https://github.com/ChangminYe/FPGA.git,2019-09-26 04:15:27+00:00,,0,ChangminYe/FPGA,210998089,SystemVerilog,FPGA,84,0,2020-02-13 10:04:11+00:00,[],
3696,https://github.com/blcxgreat/FPGA-elevator.git,2019-05-20 00:55:52+00:00,Final project for intro to digital circuits and systems,0,blcxgreat/FPGA-elevator,187544979,SystemVerilog,FPGA-elevator,7912,0,2019-05-20 02:22:31+00:00,[],
3697,https://github.com/0xD503/ARM_Pipelined-Processor.git,2019-06-01 12:19:44+00:00,ARM armv4 pipelined CPU,0,0xD503/ARM_Pipelined-Processor,189729416,SystemVerilog,ARM_Pipelined-Processor,32,0,2019-07-08 20:32:41+00:00,"['processor-architecture', 'processor', 'core', 'pocessor-design', 'system-on-crystal']",
3698,https://github.com/amandascm/Infraestrutura-de-Hardware.git,2019-06-05 01:16:19+00:00,Projeto de um subconjunto de instruções do processador RISC-V desenvolvido ao longo da disciplina Infraestrutura de Hardware - CIn UFPE - 2019.1,2,amandascm/Infraestrutura-de-Hardware,190303635,SystemVerilog,Infraestrutura-de-Hardware,6781,0,2020-08-14 15:23:30+00:00,[],
3699,https://github.com/ryan-gits/fpga-uart.git,2019-06-06 04:36:03+00:00,,0,ryan-gits/fpga-uart,190514708,SystemVerilog,fpga-uart,40,0,2022-06-11 21:21:03+00:00,[],https://api.github.com/licenses/gpl-3.0
3700,https://github.com/0xD503/SPI-Interface.git,2019-05-21 21:53:27+00:00,SPI Interface RTL Description,0,0xD503/SPI-Interface,187918739,SystemVerilog,SPI-Interface,1,0,2019-05-21 22:21:19+00:00,"['fpga', 'soc', 'fpga-soc', 'ip', 'serial-communication', 'serial-communications', 'spi']",
3701,https://github.com/clin-dev/3D-Graphics-Accelerator.git,2019-05-24 22:57:06+00:00,,0,clin-dev/3D-Graphics-Accelerator,188496593,SystemVerilog,3D-Graphics-Accelerator,106,0,2019-05-24 23:02:22+00:00,[],
3702,https://github.com/jonzo97/bitstream_mem_reinit.git,2019-06-19 16:47:36+00:00,Using tools from Symbiflow's Project X-Ray to manipulate memories within generated Xilinx Artix-7 FPGA Bitstreams. Done in conjunction with research by the BYU Configurable Computing Lab.,2,jonzo97/bitstream_mem_reinit,192770977,SystemVerilog,bitstream_mem_reinit,12773,0,2019-09-20 16:50:34+00:00,[],
3703,https://github.com/van-namdinh/digital_design_ComArch.git,2019-06-23 13:16:52+00:00,Where I can store the source code of the best book that I have never known before,0,van-namdinh/digital_design_ComArch,193350248,SystemVerilog,digital_design_ComArch,149,0,2019-07-07 03:26:43+00:00,[],
3704,https://github.com/AminiAria/CPE233Final.git,2019-06-21 01:39:41+00:00,"Created a drawing program in assembly on a FPGA with VGA output to a monitor and keyboard input. User could draw on the screen, change the color of the cursor or background, move around freely, and erase pen marks. ",0,AminiAria/CPE233Final,193010672,SystemVerilog,CPE233Final,25,0,2019-06-21 01:50:55+00:00,[],
3705,https://github.com/PeterVanNostrand/EE478.git,2019-09-09 14:17:05+00:00,EE 478: Introduction to VHDL,0,PeterVanNostrand/EE478,207326468,SystemVerilog,EE478,14136,0,2019-12-20 16:37:48+00:00,[],https://api.github.com/licenses/gpl-3.0
3706,https://github.com/BinaryLust/PeripheralTemplate.git,2019-07-12 05:45:01+00:00,,0,BinaryLust/PeripheralTemplate,196515931,SystemVerilog,PeripheralTemplate,10,0,2019-07-13 19:28:47+00:00,[],
3707,https://github.com/cevero/sanity-test-core.git,2019-07-14 18:44:34+00:00,"A repository that holds an unchanged zero-riscy core in order to execute sanity tests with other cores, and verify that our changes have not broken the core",1,cevero/sanity-test-core,196871423,SystemVerilog,sanity-test-core,9,0,2019-07-22 02:02:44+00:00,[],
3708,https://github.com/1toguchi/Nand2tetris.git,2019-07-29 05:48:40+00:00,nand2tetris,0,1toguchi/Nand2tetris,199386575,SystemVerilog,Nand2tetris,2,0,2019-07-29 06:51:24+00:00,[],
3709,https://github.com/taller-de-diseno-de-sistemas-digitales/Laboratorio-2.git,2019-08-23 09:28:15+00:00,Repositorio para el laboratorio 2,0,taller-de-diseno-de-sistemas-digitales/Laboratorio-2,203967643,SystemVerilog,Laboratorio-2,3,0,2019-08-24 22:57:27+00:00,[],
3710,https://github.com/eliasalak/ECE-111.git,2019-08-02 10:50:11+00:00,"SystemVerilog codes for my ""Advanced Digital Design Proj"" course. The coding assignments involve the use of state machines, sequential and nonsequential circuit design, an FIR filter, and more. ",0,eliasalak/ECE-111,200218593,SystemVerilog,ECE-111,1207,0,2019-10-26 03:48:39+00:00,[],
3711,https://github.com/tristanluther28/VGAdriver.git,2019-07-25 18:52:56+00:00,VGA driver in SystemVerilog for DE-10 MAX,0,tristanluther28/VGAdriver,198885563,SystemVerilog,VGAdriver,2,0,2019-07-25 18:56:49+00:00,[],
3712,https://github.com/nnikolov3/full_adder.git,2019-07-08 01:37:11+00:00,Full adder as a netlist of AND and OR gates and inverters,0,nnikolov3/full_adder,195716563,SystemVerilog,full_adder,2,0,2019-07-08 01:42:26+00:00,[],
3713,https://github.com/Artem1199/ECE581-P2P1-FIFO.git,2019-07-19 05:26:30+00:00,FIFO Controller,0,Artem1199/ECE581-P2P1-FIFO,197707396,SystemVerilog,ECE581-P2P1-FIFO,1,0,2019-07-19 07:10:52+00:00,[],
3714,https://github.com/Cpow96/Froge.git,2019-07-16 01:06:40+00:00,A final project for a class where we tried to recreate the popular arcade game,0,Cpow96/Froge,197095410,SystemVerilog,Froge,68704,0,2019-07-16 01:21:02+00:00,[],
3715,https://github.com/osamaadam/arrayHandles.git,2019-07-17 11:30:58+00:00,,0,osamaadam/arrayHandles,197376593,SystemVerilog,arrayHandles,3,0,2023-01-28 10:20:56+00:00,[],
3716,https://github.com/jigneshrs/uvm-alu.git,2019-10-01 23:47:18+00:00,ALU verification using UVM,2,jigneshrs/uvm-alu,212220456,SystemVerilog,uvm-alu,42,0,2019-11-27 02:59:09+00:00,[],
3717,https://github.com/Ashwinidv/UVM-TOPOLOGY.git,2019-08-24 08:41:46+00:00, uvm topology,0,Ashwinidv/UVM-TOPOLOGY,204131689,SystemVerilog,UVM-TOPOLOGY,601,0,2019-08-24 08:44:38+00:00,[],
3718,https://github.com/onesmallskipforman/AES-Accel.git,2019-09-13 11:04:39+00:00,,0,onesmallskipforman/AES-Accel,208247752,SystemVerilog,AES-Accel,1071,0,2020-02-27 22:42:49+00:00,[],
3719,https://github.com/sltm-14/PYNQ-ili9341.git,2019-06-24 15:13:28+00:00,,0,sltm-14/PYNQ-ili9341,193529083,SystemVerilog,PYNQ-ili9341,47923,0,2019-09-24 20:11:46+00:00,[],
3720,https://github.com/nguyensinhton9x/uvm_env_ver4.git,2019-06-29 09:59:34+00:00,Pass compile,0,nguyensinhton9x/uvm_env_ver4,194390762,SystemVerilog,uvm_env_ver4,1845,0,2019-11-30 03:54:22+00:00,[],
3721,https://github.com/akki0084/FPGA-Programmable-digital-delay-timer.git,2019-07-11 15:10:23+00:00,1. Implemented a synthesizable RTL design and checked the functionality on Altera MAX 10 FPGA board.  2. Developed the SystemVerilog (OOPS) Testbench architecture to verify the design with constraint randomization,0,akki0084/FPGA-Programmable-digital-delay-timer,196417606,SystemVerilog,FPGA-Programmable-digital-delay-timer,55,0,2019-09-21 00:14:05+00:00,[],
3722,https://github.com/Pepe2295/hola.git,2019-05-29 04:50:19+00:00,,0,Pepe2295/hola,189152565,SystemVerilog,hola,745,0,2019-05-29 05:05:01+00:00,[],
3723,https://github.com/iamjerrchen/ece411_multi_cycle_processor.git,2019-05-25 22:18:15+00:00,Multi cycle processor for the Computer Organization and Design course ECE 411 at University of Illinois at Urbana Champaign. Designed as a team of 3.,0,iamjerrchen/ece411_multi_cycle_processor,188617251,SystemVerilog,ece411_multi_cycle_processor,2036,0,2019-07-16 14:18:00+00:00,[],
3724,https://github.com/Chepelash/fpga_lab_B3.git,2019-06-07 16:37:15+00:00,,0,Chepelash/fpga_lab_B3,190777084,SystemVerilog,fpga_lab_B3,33,0,2019-06-23 13:55:24+00:00,[],
3725,https://github.com/braamBeresford/systemVerilogPong.git,2019-06-02 22:40:36+00:00,,0,braamBeresford/systemVerilogPong,189902254,SystemVerilog,systemVerilogPong,37,0,2020-01-15 20:12:08+00:00,[],
3726,https://github.com/doliver-ventana/ciao-a-tutti.git,2019-06-28 16:58:13+00:00,learning github,0,doliver-ventana/ciao-a-tutti,194307112,SystemVerilog,ciao-a-tutti,0,0,2019-06-28 20:43:03+00:00,[],
3727,https://github.com/khangp0000/De1SoCTetris.git,2019-06-25 13:58:08+00:00,A basic Tetris game built with System Verilog on De1_SoC Board,0,khangp0000/De1SoCTetris,193718380,SystemVerilog,De1SoCTetris,11580,0,2019-06-25 14:52:30+00:00,[],
3728,https://github.com/Nkyoku/QsysIPs.git,2019-09-28 15:15:41+00:00,,0,Nkyoku/QsysIPs,211519448,SystemVerilog,QsysIPs,8,0,2019-09-28 15:15:49+00:00,[],https://api.github.com/licenses/mit
3729,https://github.com/tienyao710/ARTY_A7_LED.git,2019-09-23 09:49:12+00:00,LED function test,0,tienyao710/ARTY_A7_LED,210320126,SystemVerilog,ARTY_A7_LED,702,0,2019-12-11 07:28:20+00:00,[],
3730,https://github.com/chandanpalai/SystemVerilog-Basics.git,2019-09-25 13:45:47+00:00,Contains basic sample codes for SystemVerilog. ,0,chandanpalai/SystemVerilog-Basics,210855944,SystemVerilog,SystemVerilog-Basics,27,0,2019-09-25 13:48:51+00:00,[],
3731,https://github.com/Dmitriy0111/schoolMIPS_ctb.git,2019-08-28 14:53:43+00:00,,0,Dmitriy0111/schoolMIPS_ctb,204956988,SystemVerilog,schoolMIPS_ctb,21,0,2019-08-29 15:16:22+00:00,[],https://api.github.com/licenses/apache-2.0
3732,https://github.com/lukamac/hwpe_test.git,2019-05-28 09:03:08+00:00,Testiranje hwpe,0,lukamac/hwpe_test,188993157,SystemVerilog,hwpe_test,29,0,2019-06-02 12:27:42+00:00,[],
3733,https://github.com/0xD503/Digital-music-project.git,2019-05-21 21:14:52+00:00,Laboratory work project,0,0xD503/Digital-music-project,187914564,SystemVerilog,Digital-music-project,201,0,2023-07-26 20:35:28+00:00,"['embedded', 'fpga', 'fpga-soc', 'systemverilog-hdl', 'hobby-project', 'audio-player', 'audio-codec', 'laboratory-exercises']",https://api.github.com/licenses/gpl-3.0
3734,https://github.com/0xD503/ARM-Multy-Cycle_Processor.git,2019-05-21 19:52:03+00:00,ARM Multi Cycle Processor Core HDL Description,0,0xD503/ARM-Multy-Cycle_Processor,187903988,SystemVerilog,ARM-Multy-Cycle_Processor,38,0,2019-06-01 11:50:25+00:00,"['processor-architecture', 'verilog-hdl', 'systemverilog-hdl', 'arm']",
3735,https://github.com/nq-quan/adopting-uvm.git,2019-06-14 01:50:22+00:00,"All code for use with the text ""Adopting UVM"".",0,nq-quan/adopting-uvm,191858593,SystemVerilog,adopting-uvm,8992,0,2021-08-23 12:10:03+00:00,[],https://api.github.com/licenses/mit
3736,https://github.com/ferdiakdogan/basic-computer.git,2019-06-09 23:32:22+00:00,Mano's Basic Computer Implementation,0,ferdiakdogan/basic-computer,191066008,SystemVerilog,basic-computer,4,0,2019-06-09 23:32:51+00:00,[],
3737,https://github.com/huynhy1/ERICK.git,2019-06-06 15:07:47+00:00,141L Final Project,0,huynhy1/ERICK,190602023,SystemVerilog,ERICK,3347,0,2019-06-12 05:00:12+00:00,[],
3738,https://github.com/olbapd/Arqui1.git,2019-06-25 23:27:27+00:00,,0,olbapd/Arqui1,193796650,SystemVerilog,Arqui1,116193,0,2020-06-08 00:17:02+00:00,[],
3739,https://github.com/kaytlinm/CSE369.git,2019-07-17 00:05:07+00:00,,0,kaytlinm/CSE369,197284036,SystemVerilog,CSE369,3,0,2023-01-28 16:44:16+00:00,[],
3740,https://github.com/rgsouza/TelecomParistech-Reconfigurable-architectures-and-HDL-language-course.git,2019-07-18 15:54:12+00:00,Homework assignments implemented in SystemVerilog,0,rgsouza/TelecomParistech-Reconfigurable-architectures-and-HDL-language-course,197617043,SystemVerilog,TelecomParistech-Reconfigurable-architectures-and-HDL-language-course,56199,0,2019-07-18 16:03:27+00:00,[],
3741,https://github.com/BinaryLust/PeripheralTemplate2.git,2019-07-13 07:01:51+00:00,,0,BinaryLust/PeripheralTemplate2,196689874,SystemVerilog,PeripheralTemplate2,5,0,2019-07-19 09:16:59+00:00,[],
3742,https://github.com/zongnanc/ECE-385.git,2019-09-17 23:34:37+00:00,,0,zongnanc/ECE-385,209175622,SystemVerilog,ECE-385,2541,0,2019-09-18 09:00:39+00:00,[],
3743,https://github.com/onesmallskipforman/SV-Toolbox.git,2019-09-12 18:00:23+00:00,,0,onesmallskipforman/SV-Toolbox,208113171,SystemVerilog,SV-Toolbox,10,0,2019-10-05 14:30:32+00:00,[],
3744,https://github.com/isururathnayaka/DM_cache.git,2019-09-13 08:23:04+00:00,,0,isururathnayaka/DM_cache,208224145,SystemVerilog,DM_cache,10,0,2019-10-20 03:54:14+00:00,[],
3745,https://github.com/lemuelmpranoto/System-with-an-Embedded-Softcore-CPU.git,2019-09-18 08:37:59+00:00,,0,lemuelmpranoto/System-with-an-Embedded-Softcore-CPU,209259640,SystemVerilog,System-with-an-Embedded-Softcore-CPU,572,0,2019-09-18 08:50:13+00:00,[],
3746,https://github.com/848LWjrh/848.github.io.git,2019-09-21 03:11:23+00:00,LW的博客,0,848LWjrh/848.github.io,209916978,SystemVerilog,848.github.io,18,0,2019-09-24 11:49:50+00:00,[],
3747,https://github.com/tamannarupani/System-Verilog-Projects.git,2019-07-24 21:50:17+00:00,,0,tamannarupani/System-Verilog-Projects,198714311,SystemVerilog,System-Verilog-Projects,8951,0,2019-07-24 21:51:11+00:00,[],
3748,https://github.com/soleiyu/hdmi.git,2019-07-28 09:32:04+00:00,,0,soleiyu/hdmi,199267746,SystemVerilog,hdmi,1,0,2019-07-28 10:33:42+00:00,[],
3749,https://github.com/Nofenigma/MT_lab_UU.git,2019-09-25 11:04:03+00:00,files for the Machine Translation lab class,0,Nofenigma/MT_lab_UU,210824024,SystemVerilog,MT_lab_UU,315,0,2019-10-10 22:28:40+00:00,[],
3750,https://github.com/jadsonluan/loac.git,2019-06-24 19:17:57+00:00,Repositório de códigos desenvolvidos na disciplina de Laboratório de Organização e Arquitetura de Computadores em Computação@UFCG - 2019.1,0,jadsonluan/loac,193565023,SystemVerilog,loac,3,0,2019-06-26 01:33:13+00:00,[],
3751,https://github.com/sagnik26/verilog.git,2019-09-15 09:10:23+00:00,Designing of various digital circuits(Combinational and Sequential) using hardware description language Verilog,1,sagnik26/verilog,208568658,SystemVerilog,verilog,25,0,2019-10-02 19:36:31+00:00,[],
3752,https://github.com/bLahmann/xs_to_sv.git,2019-09-12 15:16:45+00:00,Simple MC Integrator. Converts cross sections to fusion reactivities.,0,bLahmann/xs_to_sv,208081154,SystemVerilog,xs_to_sv,10553,0,2019-09-12 16:54:33+00:00,[],
3753,https://github.com/Artem1199/ECE581-SV-Projects.git,2019-07-19 01:05:14+00:00,SV Projects,0,Artem1199/ECE581-SV-Projects,197677598,SystemVerilog,ECE581-SV-Projects,1,0,2019-07-19 01:07:59+00:00,[],
3754,https://github.com/nnikolov3/3_to_8_decoder.git,2019-07-08 05:02:47+00:00,SystemVerilog 3 to 8 decoder using conditional operator,0,nnikolov3/3_to_8_decoder,195739656,SystemVerilog,3_to_8_decoder,2,0,2019-07-08 05:39:00+00:00,[],
3755,https://github.com/Guelomon/calculadora.git,2019-08-13 18:09:55+00:00,,0,Guelomon/calculadora,202199504,SystemVerilog,calculadora,6,0,2019-08-13 18:10:39+00:00,[],
3756,https://github.com/BinaryLust/Int-To-Float.git,2019-08-13 10:22:02+00:00,,0,BinaryLust/Int-To-Float,202119550,SystemVerilog,Int-To-Float,3,0,2020-05-31 09:35:10+00:00,[],
3757,https://github.com/rsd-devel/rsd.git,2019-12-11 03:22:54+00:00,RSD: RISC-V Out-of-Order Superscalar Processor,87,rsd-devel/rsd,227267635,SystemVerilog,rsd,5269,903,2024-04-11 14:56:47+00:00,[],https://api.github.com/licenses/apache-2.0
3758,https://github.com/chipsalliance/Cores-VeeR-EL2.git,2020-01-09 22:16:39+00:00,VeeR EL2 Core,63,chipsalliance/Cores-VeeR-EL2,232916517,SystemVerilog,Cores-VeeR-EL2,48406,222,2024-04-08 06:37:12+00:00,"['el2', 'verilator', 'western-digital', 'riscv', 'risc-v', 'processor', 'open-source-hardware', 'fusesoc', 'rtl', 'fpga', 'axi4', 'ahb-lite', 'riscv32', 'asic-design']",https://api.github.com/licenses/apache-2.0
3759,https://github.com/chipsalliance/Cores-VeeR-EH2.git,2020-01-09 22:13:22+00:00,,54,chipsalliance/Cores-VeeR-EH2,232916099,SystemVerilog,Cores-VeeR-EH2,10528,202,2024-03-01 08:22:47+00:00,[],https://api.github.com/licenses/apache-2.0
3760,https://github.com/karthisugumar/CSE240D-Hierarchical_Mesh_NoC-Eyeriss_v2.git,2019-11-29 01:04:03+00:00,A SystemVerilog implementation of Row-Stationary dataflow and Hierarchical Mesh Network-on-Chip Architecture based on Eyeriss CNN Accelerator,23,karthisugumar/CSE240D-Hierarchical_Mesh_NoC-Eyeriss_v2,224752072,SystemVerilog,CSE240D-Hierarchical_Mesh_NoC-Eyeriss_v2,2371,102,2024-04-10 10:42:42+00:00,[],
3761,https://github.com/ic-lab-duth/RISC-V-Vector.git,2020-01-27 10:08:51+00:00,Vector processor for RISC-V vector ISA,21,ic-lab-duth/RISC-V-Vector,236462808,SystemVerilog,RISC-V-Vector,593,84,2024-04-09 04:48:42+00:00,"['vector-processor', 'riscv', 'risc-v', 'systemverilog']",
3762,https://github.com/RC4ML/Shuhai.git,2020-01-22 07:58:00+00:00,"Shuhai is a benchmarking-memory tool that allows FPGA programmers to demystify all the underlying details of memories, e.g., HBM and DDR4, on a Xilinx FPGA",20,RC4ML/Shuhai,235525028,SystemVerilog,Shuhai,192,83,2024-03-29 07:44:54+00:00,"['benchmark', 'ddr', 'fpga', 'hbm']",
3763,https://github.com/krikzz/EDN8-PRO.git,2019-11-30 03:03:27+00:00,EverDrive N8 PRO dev sources,16,krikzz/EDN8-PRO,224951965,SystemVerilog,EDN8-PRO,62176,80,2024-03-07 02:05:04+00:00,[],https://api.github.com/licenses/gpl-3.0
3764,https://github.com/seabeam/yuu_ahb.git,2019-10-15 15:56:13+00:00,UVM AHB VIP,17,seabeam/yuu_ahb,215338948,SystemVerilog,yuu_ahb,502,69,2024-04-12 08:33:33+00:00,[],https://api.github.com/licenses/mit
3765,https://github.com/SonalPinto/kronos.git,2020-01-26 22:19:24+00:00,Kronos is a 3-stage in-order RISC-V RV32I_Zicsr_Zifencei core geared towards FPGA implementations,11,SonalPinto/kronos,236384260,SystemVerilog,kronos,849,59,2024-04-08 08:09:17+00:00,[],https://api.github.com/licenses/apache-2.0
3766,https://github.com/bsdevlin/fpga_snark_prover.git,2019-10-04 00:31:01+00:00,"An acceleration engine for proving SNARKS over the bn128 curve, targeted for AWS FPGAs",16,bsdevlin/fpga_snark_prover,212707541,SystemVerilog,fpga_snark_prover,2756,52,2023-11-23 02:47:33+00:00,[],
3767,https://github.com/hypernyan/eth_vlg.git,2019-11-08 14:25:29+00:00,,14,hypernyan/eth_vlg,220482736,SystemVerilog,eth_vlg,6604,43,2024-02-19 15:12:37+00:00,[],
3768,https://github.com/whatmough/CHIPKIT.git,2020-01-13 00:35:34+00:00,"CHIPKIT: An agile, reusable open-source framework for rapid test chip development",6,whatmough/CHIPKIT,233481083,SystemVerilog,CHIPKIT,542,39,2024-03-20 14:28:12+00:00,[],
3769,https://github.com/ironsteel/nes_ecp5.git,2019-11-28 20:36:19+00:00,NES FPGA implementation synthesized for the ulx3s ecp5 based fpga board,13,ironsteel/nes_ecp5,224725220,SystemVerilog,nes_ecp5,336,35,2024-03-14 07:03:49+00:00,[],
3770,https://github.com/JoseIuri/UVM-APB_RAL.git,2019-10-22 18:30:57+00:00,This repository contains an example of the use of UVM Register Abstraction Layer in a verification of a simple APB DUT.,16,JoseIuri/UVM-APB_RAL,216883325,SystemVerilog,UVM-APB_RAL,97,32,2024-04-05 20:34:55+00:00,[],https://api.github.com/licenses/mit
3771,https://github.com/PacoReinaCampo/MPSoC-DV.git,2020-02-11 03:07:33+00:00,Multi-Processor System on Chip verified with UVM/OSVVM/FV,14,PacoReinaCampo/MPSoC-DV,239664545,SystemVerilog,MPSoC-DV,36477,25,2024-02-24 10:36:54+00:00,"['risc-v', 'openrisc', 'msp340', 'mpsoc', 'uvm', 'osvvm', 'formal-verification']",https://api.github.com/licenses/mit
3772,https://github.com/pulp-platform/stream-ebpc.git,2019-10-02 08:48:55+00:00,"Provides the hardware code for the paper ""EBPC: Extended Bit-Plane Compression for Deep Neural Network Inference and Training Accelerators"" by Lukas Cavigelli, Georg Rutishauser, Luca Benini.",9,pulp-platform/stream-ebpc,212293837,SystemVerilog,stream-ebpc,563,22,2024-04-04 00:51:39+00:00,[],
3773,https://github.com/PacoReinaCampo/SoC-DV.git,2020-02-11 03:09:01+00:00,System on Chip verified with UVM/OSVVM/FV,6,PacoReinaCampo/SoC-DV,239664734,SystemVerilog,SoC-DV,23954,20,2024-03-11 09:48:53+00:00,"['risc-v', 'openrisc', 'msp340', 'soc', 'uvm', 'osvvm', 'formal-verification']",https://api.github.com/licenses/mit
3774,https://github.com/yuravg/uvm_tb_cross_bar.git,2019-10-18 06:53:34+00:00,SystemVerilog UVM testbench example,10,yuravg/uvm_tb_cross_bar,215959746,SystemVerilog,uvm_tb_cross_bar,226,20,2024-02-11 04:44:34+00:00,"['uvm', 'systemverilog', 'verification']",https://api.github.com/licenses/mit
3775,https://github.com/SwarmArch/chronos.git,2019-11-30 20:19:28+00:00,The Chronos FPGA Framework to accelerate ordered applications,8,SwarmArch/chronos,225065281,SystemVerilog,chronos,309822,19,2024-01-19 06:28:39+00:00,[],https://api.github.com/licenses/gpl-2.0
3776,https://github.com/hdl-util/i2c.git,2020-02-13 17:51:09+00:00,Fully featured implementation of Inter-IC (I2C) bus master for FPGAs,2,hdl-util/i2c,240324749,SystemVerilog,i2c,119,18,2024-03-27 13:25:57+00:00,[],
3777,https://github.com/ciniml/tn_serv.git,2019-12-17 21:35:29+00:00,SERV RISC-V sample for Tang Nano FPGA board,1,ciniml/tn_serv,228705676,SystemVerilog,tn_serv,10,18,2024-01-13 12:54:09+00:00,[],https://api.github.com/licenses/bsl-1.0
3778,https://github.com/aliyun/alibabacloud-fpga.git,2019-11-07 02:32:44+00:00,,2,aliyun/alibabacloud-fpga,220134827,SystemVerilog,alibabacloud-fpga,31526,17,2024-02-06 08:20:36+00:00,[],https://api.github.com/licenses/gpl-3.0
3779,https://github.com/PacoReinaCampo/SoC-RISCV.git,2020-02-11 02:54:44+00:00,System on Chip with RISCV-32 / RISCV-64 / RISCV-128,9,PacoReinaCampo/SoC-RISCV,239662615,SystemVerilog,SoC-RISCV,16564,16,2024-01-08 22:37:04+00:00,"['risc-v', 'misd', 'simd', 'soc']",https://api.github.com/licenses/mit
3780,https://github.com/yamnchalich/HFRC.git,2020-01-02 20:21:07+00:00,High Frame Rate Camera Project compatible with a MicroZed 7020 SoC + FMC Carrier Board,8,yamnchalich/HFRC,231453425,SystemVerilog,HFRC,184744,16,2024-01-29 00:55:56+00:00,[],https://api.github.com/licenses/gpl-3.0
3781,https://github.com/srishis/DMA8237A.git,2019-11-23 00:52:50+00:00,System Verilog based RTL design of DMA controller for 8086 microprocessor based systems.,3,srishis/DMA8237A,223510398,SystemVerilog,DMA8237A,1001,15,2024-03-25 09:55:26+00:00,[],
3782,https://github.com/seabeam/yuu_vip_gen.git,2019-11-28 16:15:41+00:00,UVM VIP architecture generator,5,seabeam/yuu_vip_gen,224689989,SystemVerilog,yuu_vip_gen,43,15,2023-08-19 01:45:37+00:00,[],https://api.github.com/licenses/mit
3783,https://github.com/nockieboy/gpu.git,2019-11-13 18:47:03+00:00,"Collaborative project to create an advanced GPU, with additional features to flesh-out the peripherals for a home-made, DIY computer.",5,nockieboy/gpu,221528742,SystemVerilog,gpu,126571,15,2024-03-13 16:56:12+00:00,"['gpu', 'fpga', 'eevblog', 'diy-computer', 'ucom']",
3784,https://github.com/grant4001/MNIST_Classification_FPGA.git,2019-12-08 22:04:25+00:00,,1,grant4001/MNIST_Classification_FPGA,226738484,SystemVerilog,MNIST_Classification_FPGA,536888,13,2024-02-25 08:21:21+00:00,[],
3785,https://github.com/JoseIuri/UVM_Python_UVMC.git,2020-02-14 17:01:15+00:00,This repository contains an example of the connection between an UVM Testbench and a Python reference model using UVM Connect from Mentor®.,4,JoseIuri/UVM_Python_UVMC,240558170,SystemVerilog,UVM_Python_UVMC,18,12,2024-04-07 07:53:46+00:00,[],https://api.github.com/licenses/mit
3786,https://github.com/aiju/fpga-blit.git,2019-12-24 17:26:57+00:00,FPGA implementation of the Blit terminal,0,aiju/fpga-blit,229979898,SystemVerilog,fpga-blit,165,12,2021-12-23 13:10:37+00:00,[],
3787,https://github.com/PacoReinaCampo/vhdl2verilog.git,2020-02-11 03:09:58+00:00,Hardware Description Language Translator,4,PacoReinaCampo/vhdl2verilog,239664872,SystemVerilog,vhdl2verilog,12307,12,2024-03-09 10:58:33+00:00,['eda'],https://api.github.com/licenses/mit
3788,https://github.com/j1s1e1/VerilogPolarCodes.git,2019-12-30 00:30:16+00:00,"Polar coding, decoding, and testing",3,j1s1e1/VerilogPolarCodes,230820360,SystemVerilog,VerilogPolarCodes,18,12,2024-04-02 11:35:30+00:00,[],https://api.github.com/licenses/mit
3789,https://github.com/NUDT-NF5/NF5.git,2019-12-02 04:33:18+00:00,A simple 5-stage Pipeline RISC-V core,3,NUDT-NF5/NF5,225285801,SystemVerilog,NF5,83773,11,2024-03-27 11:43:04+00:00,"['nudt', 'riscv', 'pipline']",https://api.github.com/licenses/bsd-3-clause
3790,https://github.com/kiwih/pic16f-antastic.git,2019-10-10 02:25:07+00:00,A synthesizable picmicro-midrange clone for FPGAs,3,kiwih/pic16f-antastic,214067728,SystemVerilog,pic16f-antastic,4154,11,2024-02-16 23:35:32+00:00,[],https://api.github.com/licenses/mit
3791,https://github.com/bwitherspoon/wiphy.git,2019-10-17 19:21:10+00:00,Software-defined radio (SDR) IEEE 802.11 baseband in SystemVerilog,1,bwitherspoon/wiphy,215869065,SystemVerilog,wiphy,112,11,2023-12-31 22:02:33+00:00,"['ieee80211', 'software-defined-radio', 'systemverilog', 'verilog']",
3792,https://github.com/Lombiq/Hastlayer-Hardware-Framework---Catapult.git,2019-11-29 23:37:17+00:00,Hardware-side component of Hastlayer for Microsoft Project Catapult FPGAs. See https://hastlayer.com for details.,3,Lombiq/Hastlayer-Hardware-Framework---Catapult,224935229,SystemVerilog,Hastlayer-Hardware-Framework---Catapult,17851,10,2024-04-05 19:56:24+00:00,"['fpga', 'altera', 'intel', 'microsoft-catapult']",
3793,https://github.com/supranational/vdf-fpga-round1-results.git,2019-10-14 15:07:39+00:00,,4,supranational/vdf-fpga-round1-results,215074444,SystemVerilog,vdf-fpga-round1-results,10650,9,2023-04-22 20:03:58+00:00,[],
3794,https://github.com/pulp-platform/hci.git,2020-02-05 08:27:39+00:00,Heterogeneous Cluster Interconnect to bind special-purpose HW accelerators with general-purpose cluster cores,7,pulp-platform/hci,238401884,SystemVerilog,hci,391,9,2024-03-15 13:27:09+00:00,[],
3795,https://github.com/jnestor/SV_Examples.git,2020-02-12 19:33:46+00:00,SystemVerilog examples - common building blocks,0,jnestor/SV_Examples,240098165,SystemVerilog,SV_Examples,1537,9,2024-02-29 16:11:28+00:00,[],
3796,https://github.com/Mehdi0xC/MLP-FeedForward-RTL-Acceleration.git,2019-10-17 16:15:19+00:00,"Register Transfer Level Acceleration of FeedForward Propagation in 2-Layer Perceptron Networks (My B.Sc. Thesis, Phase 3/3)",1,Mehdi0xC/MLP-FeedForward-RTL-Acceleration,215835288,SystemVerilog,MLP-FeedForward-RTL-Acceleration,17,8,2022-09-08 15:09:47+00:00,[],
3797,https://github.com/ZivFung/zedboard_cnn.git,2019-11-25 14:47:24+00:00,Vivado project of hardware Implementation of CNN on Xilinx Zedboard.  ,0,ZivFung/zedboard_cnn,223972071,SystemVerilog,zedboard_cnn,780,8,2023-06-07 10:07:18+00:00,[],
3798,https://github.com/ijor/stBlitter.git,2019-12-15 00:59:41+00:00,,0,ijor/stBlitter,228110783,SystemVerilog,stBlitter,8,8,2023-04-12 00:02:41+00:00,[],
3799,https://github.com/joshtyler/manila-ice.git,2019-10-17 22:13:11+00:00,Lattice iCE HX4K Development Board,1,joshtyler/manila-ice,215894464,SystemVerilog,manila-ice,18358,8,2023-09-02 00:07:00+00:00,[],
3800,https://github.com/cmcmicrosystems/pulpissimo-zcu102.git,2019-10-15 14:27:00+00:00,Implementation of a 32-bit single core risc-v platfrom  for Xilinx zcu102 board,5,cmcmicrosystems/pulpissimo-zcu102,215319248,SystemVerilog,pulpissimo-zcu102,123,8,2024-03-27 14:10:00+00:00,[],
3801,https://github.com/PacoReinaCampo/UVM.git,2020-01-26 19:19:55+00:00,Standard Universal Verification Methodology,4,PacoReinaCampo/UVM,236363093,SystemVerilog,UVM,21410,8,2024-03-09 10:58:38+00:00,"['uvm', 'verification']",https://api.github.com/licenses/apache-2.0
3802,https://github.com/JoseIuri/UVM_Python.git,2019-10-30 18:18:14+00:00,This repository contains an example of the connection between an UVM Testbench and a Python reference model.,0,JoseIuri/UVM_Python,218593760,SystemVerilog,UVM_Python,15,7,2023-12-20 05:47:09+00:00,[],https://api.github.com/licenses/mit
3803,https://github.com/nmikstas/fpga-filter-implementation.git,2019-11-05 09:21:22+00:00,FIR and LMS filter implementations in FPGAs,1,nmikstas/fpga-filter-implementation,219705034,SystemVerilog,fpga-filter-implementation,993,7,2024-04-11 08:55:20+00:00,[],
3804,https://github.com/ZivFung/xc7a50t_microblaze_FDAF.git,2019-11-25 14:29:28+00:00,Vivado project of frequency domain adaptive filter. Implemented on Xilinx xc7a50t FPGA,0,ZivFung/xc7a50t_microblaze_FDAF,223968149,SystemVerilog,xc7a50t_microblaze_FDAF,1930,6,2023-06-20 16:11:22+00:00,[],
3805,https://github.com/Verdvana/Async_FIFO.git,2019-11-05 06:34:07+00:00,位宽和深度可定制的异步FIFO,6,Verdvana/Async_FIFO,219674377,SystemVerilog,Async_FIFO,6614,6,2023-08-31 09:16:26+00:00,[],
3806,https://github.com/hdl-util/sound.git,2020-02-03 04:00:39+00:00,Various sound waves and audio mixing capabilities,1,hdl-util/sound,237881303,SystemVerilog,sound,5,6,2022-06-29 03:51:50+00:00,[],
3807,https://github.com/tamannarupani/SimpleAdder-UVM.git,2019-11-19 06:12:05+00:00,A simple adder implementation and verification using UVM 1.2,1,tamannarupani/SimpleAdder-UVM,222621822,SystemVerilog,SimpleAdder-UVM,5,5,2024-02-07 20:40:55+00:00,[],
3808,https://github.com/GasilinDV/ad9226_cyclone5_w5500.git,2019-12-21 12:24:38+00:00,,2,GasilinDV/ad9226_cyclone5_w5500,229423878,SystemVerilog,ad9226_cyclone5_w5500,17,5,2023-09-08 08:35:49+00:00,[],https://api.github.com/licenses/mit
3809,https://github.com/ZivFung/xc7k420t_FPGA_accelerator_fastqz.git,2019-12-12 16:11:50+00:00,This is the Vivado project of acceleration of FASTQZ gene sequencing data compression algorithm using Xilinx FPGA xc7k420t.,0,ZivFung/xc7k420t_FPGA_accelerator_fastqz,227646397,SystemVerilog,xc7k420t_FPGA_accelerator_fastqz,1375,5,2023-04-05 21:15:53+00:00,[],
3810,https://github.com/charkster/cmod_a7_spi_sram.git,2019-11-02 16:53:40+00:00,SPI slave to External SRAM interface for Cmod A7,1,charkster/cmod_a7_spi_sram,219184454,SystemVerilog,cmod_a7_spi_sram,14,5,2024-02-07 08:37:45+00:00,"['xilinx-fpga', 'digilent', 'spi-slave', 'spi', 'sram', 'cmod-a7']",https://api.github.com/licenses/mit
3811,https://github.com/saleh1204/riffa_arria10_stratix5.git,2020-02-04 09:53:55+00:00,RIFFA Interface for Intel (Altera) Arria 10 GX & Stratix V GS Development Boards,2,saleh1204/riffa_arria10_stratix5,238173193,SystemVerilog,riffa_arria10_stratix5,24221,5,2024-04-07 04:27:52+00:00,[],
3812,https://github.com/Verdvana/Enc8b10b.git,2019-12-13 12:31:30+00:00,基于LUT的8B/10B编码器,0,Verdvana/Enc8b10b,227836058,SystemVerilog,Enc8b10b,103,5,2023-10-22 02:09:48+00:00,[],
3813,https://github.com/nmikstas/viterbi-decoder.git,2019-11-21 20:22:23+00:00,A VHDL and HLS Viterbi Decoder,0,nmikstas/viterbi-decoder,223258519,SystemVerilog,viterbi-decoder,1046,4,2024-01-05 06:39:23+00:00,[],
3814,https://github.com/chenyangbing/SystemVerilog.git,2020-01-15 12:34:33+00:00,SV examples,0,chenyangbing/SystemVerilog,234076993,SystemVerilog,SystemVerilog,0,4,2022-04-28 22:14:34+00:00,[],
3815,https://github.com/amiteee78/APB2APB_Bridge.git,2019-12-18 05:32:00+00:00,System Verilog Behavioral Design of APB2APB Bridge Memory Controller.,0,amiteee78/APB2APB_Bridge,228765412,SystemVerilog,APB2APB_Bridge,1425,4,2023-08-07 12:07:25+00:00,[],
3816,https://github.com/KelvinVale/uvm_sc_py_phase_jump.git,2020-02-12 18:42:06+00:00,"This repository contains an example of how to create an UVM verification, that uses a python golden model and compares to SystemC block and RTL systemverilog.",1,KelvinVale/uvm_sc_py_phase_jump,240087774,SystemVerilog,uvm_sc_py_phase_jump,3572,4,2023-10-12 12:44:34+00:00,[],
3817,https://github.com/SunicYosen/sv-course-labs.git,2019-11-04 01:59:04+00:00,system verilog course labs,1,SunicYosen/sv-course-labs,219396718,SystemVerilog,sv-course-labs,146,4,2021-11-09 06:28:00+00:00,[],
3818,https://github.com/vinaypatil123/AXI4_verification_IP.git,2019-10-03 12:32:42+00:00,Development of verification IP for AMBA AXI4 Protocol using UVM,2,vinaypatil123/AXI4_verification_IP,212575388,SystemVerilog,AXI4_verification_IP,64,4,2023-12-18 05:52:53+00:00,[],
3819,https://github.com/SaiVineethKalluruSrinivas/Reorder-buffer-4-way-O3-CPU-verilog.git,2019-10-10 05:21:15+00:00,ReOrder buffer implementation for superscalar out of order CPU ,4,SaiVineethKalluruSrinivas/Reorder-buffer-4-way-O3-CPU-verilog,214093268,SystemVerilog,Reorder-buffer-4-way-O3-CPU-verilog,54,4,2022-05-07 05:09:57+00:00,[],
3820,https://github.com/nguyenquanicd/VG_RTL.git,2019-12-30 13:42:06+00:00,All RTL codes of VG project,5,nguyenquanicd/VG_RTL,230922781,SystemVerilog,VG_RTL,40675,4,2023-09-27 09:12:37+00:00,[],
3821,https://github.com/davidchen6/git_i2c_master.git,2020-01-14 13:28:50+00:00,i2c_master_vip,0,davidchen6/git_i2c_master,233847674,SystemVerilog,git_i2c_master,281,4,2024-02-27 03:50:12+00:00,[],
3822,https://github.com/nguyenquanicd/FirstX2P.git,2019-11-17 01:21:03+00:00,This is the AXI-to-APB bridge which only supports convert AXI-32bit to APB-32 bit,2,nguyenquanicd/FirstX2P,222180958,SystemVerilog,FirstX2P,1895,4,2023-04-16 20:20:54+00:00,[],
3823,https://github.com/Verdvana/Serdes.git,2019-12-27 06:24:02+00:00,8B/10B编码的SerDes模块,2,Verdvana/Serdes,230385769,SystemVerilog,Serdes,4950,4,2023-10-22 02:07:36+00:00,[],
3824,https://github.com/dh73/Model_Checking_Sandbox.git,2020-02-10 20:37:21+00:00,"Toy Examples for Model Checking (FPV, Formal, Static Verification, etc)",0,dh73/Model_Checking_Sandbox,239608056,SystemVerilog,Model_Checking_Sandbox,1294,4,2023-02-15 00:02:23+00:00,[],
3825,https://github.com/Verdvana/Dec8b10b.git,2019-12-16 06:35:05+00:00,基于LUT的8B/10B解码器,0,Verdvana/Dec8b10b,228319057,SystemVerilog,Dec8b10b,39,4,2023-10-22 02:09:53+00:00,[],
3826,https://github.com/arokasprz100/HDL-Safe.git,2019-11-15 20:40:02+00:00,Simple safe lock mechanism written in SystemVerilog.,0,arokasprz100/HDL-Safe,221999654,SystemVerilog,HDL-Safe,63326,4,2023-01-28 03:59:53+00:00,"['systemverilog', 'xilinx-vivado', 'hdl', 'zedboard', 'zynq-7000', 'oled']",
3827,https://github.com/dhaivat7/SystemVerilog_CalC.git,2019-10-23 02:01:15+00:00,FSM design in Verilog and Verification of Calculator using SystemVerilog ,1,dhaivat7/SystemVerilog_CalC,216946651,SystemVerilog,SystemVerilog_CalC,33,4,2022-08-11 07:30:32+00:00,"['rtl', 'systemverilog', 'verification', 'makefile', 'calculator', 'regression', 'sim']",
3828,https://github.com/DaveMcEwan/dmpvl.git,2020-01-24 19:26:28+00:00,Dave McEwan's Personal Verilog Library,3,DaveMcEwan/dmpvl,236068868,SystemVerilog,dmpvl,195585,4,2024-01-19 03:37:10+00:00,[],
3829,https://github.com/mhezarei/arm-micro-program.git,2019-12-22 19:25:00+00:00,Micro-Programmed Multi-Cycle Processor,0,mhezarei/arm-micro-program,229618979,SystemVerilog,arm-micro-program,363,4,2022-07-05 09:03:15+00:00,"['multi-cycle-processor', 'computer-architecture', 'micro-program']",
3830,https://github.com/dhruvpatelgeek/svANN-VLSI.git,2019-10-26 23:30:23+00:00,The following is a scalable neural network with 3 stages that predicts the output of a XOR FUNCTION ,1,dhruvpatelgeek/svANN-VLSI,217781616,SystemVerilog,svANN-VLSI,5139,3,2020-07-07 06:46:57+00:00,[],
3831,https://github.com/Reconfigurable-Computing-CalPoly-Pomona/Reconfigurable-Security-Lab.git,2019-12-05 00:59:41+00:00,,0,Reconfigurable-Computing-CalPoly-Pomona/Reconfigurable-Security-Lab,225986212,SystemVerilog,Reconfigurable-Security-Lab,44365,3,2023-03-13 08:18:50+00:00,[],
3832,https://github.com/SarahToscano/MIPS32.git,2019-11-27 14:14:28+00:00,Concepção estruturada de Microprocessador de 32 bits com arquitetura multiciclo em systemVerilog e Verilog.,1,SarahToscano/MIPS32,224446296,SystemVerilog,MIPS32,16186,3,2022-02-04 16:28:23+00:00,[],
3833,https://github.com/hrishikeshpujari/UVM-Testbench-for-Flex-Timer.git,2019-11-24 22:35:12+00:00,,0,hrishikeshpujari/UVM-Testbench-for-Flex-Timer,223820369,SystemVerilog,UVM-Testbench-for-Flex-Timer,27,3,2021-04-19 15:58:34+00:00,[],
3834,https://github.com/pcornier/sm510.git,2019-12-03 11:47:03+00:00,Sharp SM510 in Verilog,0,pcornier/sm510,225606841,SystemVerilog,sm510,1412,3,2024-01-09 08:14:37+00:00,[],
3835,https://github.com/atmughrabi/CAPI-Precis.git,2019-11-11 19:08:50+00:00,CAPIPrecis a Coherent Accelerator Processor Interface (CAPI) Abstract Layer,1,atmughrabi/CAPI-Precis,221051017,SystemVerilog,CAPI-Precis,166254,3,2023-09-11 00:46:30+00:00,"['capi-precis', 'psl', 'fpga', 'afu-control', 'simulation', 'modelsim', 'synthesis', 'ibm-capi', 'shared-memory-acceleration', 'ibm', 'coherent-accelerator', 'capi', 'communication', 'pslse', 'interface-design']",https://api.github.com/licenses/bsd-2-clause
3836,https://github.com/xshi1012/SingleCycleProcessor.git,2019-10-17 02:14:06+00:00,SystemVerilog code for a single cycle data path processor with 9-bit ISA,0,xshi1012/SingleCycleProcessor,215683889,SystemVerilog,SingleCycleProcessor,932,3,2020-12-19 14:43:56+00:00,[],
3837,https://github.com/dalance/rust-dpi-sample.git,2020-01-30 12:15:07+00:00,,0,dalance/rust-dpi-sample,237206255,SystemVerilog,rust-dpi-sample,6,3,2022-07-28 02:38:43+00:00,[],
3838,https://github.com/PeterMonsson/lpcm-verilator.git,2019-11-14 15:18:06+00:00,Modern Testbench Architecture in SystemVerilog with Verilator,0,PeterMonsson/lpcm-verilator,221727014,SystemVerilog,lpcm-verilator,354,3,2023-06-27 03:25:48+00:00,[],https://api.github.com/licenses/apache-2.0
3839,https://github.com/makestuff/pcie-hip.git,2020-01-06 16:35:05+00:00,HWL: A user-friendly layer on top of th Intel/Altera PCI-Express hard-IP,0,makestuff/pcie-hip,232141644,SystemVerilog,pcie-hip,290,3,2023-01-03 19:57:53+00:00,[],https://api.github.com/licenses/mit
3840,https://github.com/dhruvpatelgeek/n-tap-FIR-filter.git,2020-01-26 07:13:00+00:00,a finite impulse response filter made using generate statements in system verilog ,1,dhruvpatelgeek/n-tap-FIR-filter,236279499,SystemVerilog,n-tap-FIR-filter,3021,3,2022-11-02 06:02:40+00:00,[],https://api.github.com/licenses/mit
3841,https://github.com/hanhha/XSwitchGen.git,2019-12-26 11:02:30+00:00,Generator for crossbar matrix implementation in System Verilog,0,hanhha/XSwitchGen,230249195,SystemVerilog,XSwitchGen,137,3,2023-11-10 03:55:37+00:00,[],https://api.github.com/licenses/cc0-1.0
3842,https://github.com/nguyenquanicd/JtagProgramming.git,2019-11-15 13:33:44+00:00,"This is the example to explain ""How to program a memory via JTAG?""",1,nguyenquanicd/JtagProgramming,221930537,SystemVerilog,JtagProgramming,9,3,2023-09-27 10:12:46+00:00,[],
3843,https://github.com/ziqian2000/RISC-V-CPU.git,2019-11-11 11:48:54+00:00,"A RISC-V CPU with a 5-stage pipeline, implemented in Verilog HDL.",0,ziqian2000/RISC-V-CPU,220969900,SystemVerilog,RISC-V-CPU,209750,2,2022-09-08 16:27:27+00:00,[],
3844,https://github.com/ciniml/M5Stack_TangNano.git,2019-11-14 19:41:44+00:00,Tang Nano support project for M5Stack,0,ciniml/M5Stack_TangNano,221773551,SystemVerilog,M5Stack_TangNano,13,2,2021-08-22 12:42:34+00:00,[],https://api.github.com/licenses/bsl-1.0
3845,https://github.com/charleslo/gemm_array.git,2019-12-20 17:38:16+00:00,Basic Implementations of a 1-D GEMM Systolic Array,2,charleslo/gemm_array,229309708,SystemVerilog,gemm_array,8,2,2022-12-22 07:50:14+00:00,[],
3846,https://github.com/arkhadem/DeltaNN.git,2019-11-18 02:45:17+00:00,,0,arkhadem/DeltaNN,222349552,SystemVerilog,DeltaNN,57882,2,2020-07-18 16:58:57+00:00,[],
3847,https://github.com/h4ckerwu/ATMSwitch.git,2019-11-15 03:08:17+00:00,A complete SystemVerilog testbench for an ATM Switch Design,0,h4ckerwu/ATMSwitch,221833601,SystemVerilog,ATMSwitch,71,2,2024-01-15 06:10:04+00:00,[],
3848,https://github.com/t0m-a/nginx-vhosts.git,2019-11-24 17:15:34+00:00,"(CM) Nginx Web Server configurations files examples for Wordpress, proxies, phpMyAdmin, Docker, Grafana and more...",0,t0m-a/nginx-vhosts,223780964,SystemVerilog,nginx-vhosts,29,2,2024-04-13 07:25:22+00:00,[],https://api.github.com/licenses/gpl-3.0
3849,https://github.com/ZivFung/HDL_Module.git,2019-11-24 14:34:38+00:00,This is the verilog/systemverilog code for frequently-used module in NUEDC or other project,0,ZivFung/HDL_Module,223758225,SystemVerilog,HDL_Module,29,2,2019-11-25 10:58:46+00:00,[],
3850,https://github.com/nguyenquanicd/AxiVIP.git,2019-12-14 02:24:55+00:00,An AxiVIP supports both master and slave mode,1,nguyenquanicd/AxiVIP,227954435,SystemVerilog,AxiVIP,516,2,2023-08-13 08:13:31+00:00,[],
3851,https://github.com/XinlueLiu/ASIC-Design-Classes-APB-AHB-bus.git,2019-12-20 03:07:16+00:00,ASIC design Projects including an APB-Slave-UART-Receiver and an AHB-Lite FIR Filter Accelerator,0,XinlueLiu/ASIC-Design-Classes-APB-AHB-bus,229180246,SystemVerilog,ASIC-Design-Classes-APB-AHB-bus,1558,2,2024-02-23 02:30:37+00:00,[],
3852,https://github.com/sickRanchez-c137/InferenceInFPGA.git,2019-11-15 21:48:52+00:00,"A Deep Neural Network-inference accelerator is created in hardware. The codes for hardware is written in System Verilog. The hardware module is interfaced with NIOS computer system, thus this hardware acts as a peripheral to the computer system. The driver code to interface the hardware is written in C.  Speedup compard to software is 400 times.",2,sickRanchez-c137/InferenceInFPGA,222008735,SystemVerilog,InferenceInFPGA,897,2,2023-11-26 09:14:24+00:00,"['arm', 'nios2', 'systemverilog', 'deep-learning', 'hardware-acceleration', 'inference-engine']",
3853,https://github.com/fproriscv/ibex_max10.git,2019-12-14 19:16:20+00:00,ibex processor for max10 fpga,0,fproriscv/ibex_max10,228075873,SystemVerilog,ibex_max10,626,2,2023-10-31 23:19:06+00:00,[],https://api.github.com/licenses/apache-2.0
3854,https://github.com/HungQuocLam/FPGA_PCIE_Gen3x8_AVMM_DMA_w_XAVIER.git,2019-10-22 04:33:00+00:00,Arria 10 FPGA Design with PCIE Gen3x8 DMA,2,HungQuocLam/FPGA_PCIE_Gen3x8_AVMM_DMA_w_XAVIER,216723688,SystemVerilog,FPGA_PCIE_Gen3x8_AVMM_DMA_w_XAVIER,70028,2,2023-04-13 00:37:34+00:00,[],
3855,https://github.com/Mehdi0xC/SystemVerilog-FixedPoint-Arithmetic.git,2019-10-15 22:57:57+00:00,"Generic Sign-Magnitude Fixed-Point Addition and Multiplication, based on SystemVerilog",0,Mehdi0xC/SystemVerilog-FixedPoint-Arithmetic,215411291,SystemVerilog,SystemVerilog-FixedPoint-Arithmetic,12,2,2023-07-09 05:25:28+00:00,[],
3856,https://github.com/nguyenquanicd/AsyncFIFO.git,2019-12-15 01:36:45+00:00,An asyncchronous FIFO,1,nguyenquanicd/AsyncFIFO,228113741,SystemVerilog,AsyncFIFO,19,2,2023-09-12 11:57:54+00:00,[],
3857,https://github.com/Verdvana/FFT_R2_DIF.git,2019-11-19 11:17:16+00:00,位宽和点数可定制的基2频域抽取并行FFT,1,Verdvana/FFT_R2_DIF,222678499,SystemVerilog,FFT_R2_DIF,352,2,2023-03-16 12:33:47+00:00,[],
3858,https://github.com/adieux/PRINCE.git,2019-11-21 16:22:52+00:00,PRINCE cipher verilog ,0,adieux/PRINCE,223215890,SystemVerilog,PRINCE,52,2,2021-10-21 14:23:53+00:00,[],
3859,https://github.com/kalhorghazal/Mips-MultiCycle.git,2020-01-31 11:14:43+00:00,"Mips Multi-Cycle, Computer Architecture course, University of Tehran",0,kalhorghazal/Mips-MultiCycle,237414626,SystemVerilog,Mips-MultiCycle,19,2,2021-11-30 21:20:25+00:00,"['mips-architecture', 'mips', 'multi-cycle-processor', 'verilog-hdl', 'mips-processor']",
3860,https://github.com/flasonil/riscv.git,2020-02-10 18:09:09+00:00,,0,flasonil/riscv,239579118,SystemVerilog,riscv,2745,2,2021-02-09 00:53:20+00:00,[],
3861,https://github.com/soheil647/Digital_Logic_Design.git,2020-01-28 20:37:16+00:00,,0,soheil647/Digital_Logic_Design,236836117,SystemVerilog,Digital_Logic_Design,9411,2,2020-05-09 18:08:12+00:00,[],
3862,https://github.com/erfanva/Computer-Architecture-CAs.git,2019-10-20 12:15:27+00:00,Computer Architecture - Computer assignments,0,erfanva/Computer-Architecture-CAs,216356670,SystemVerilog,Computer-Architecture-CAs,204,2,2020-04-16 11:03:57+00:00,[],
3863,https://github.com/alanmimms/kl10.git,2020-02-14 19:15:10+00:00,"KL10PV (also called ""model B"") CPU implemented in SystemVerilog for Xilinx FPGA from MP00301_KL10PV_Jun80 PDFs trying to remain faithful to the original while I learn Verilog",0,alanmimms/kl10,240581513,SystemVerilog,kl10,233488,2,2021-04-13 03:12:21+00:00,"['fpga', 'systemverilog', 'pdp-10', 'mainframe-emulator', 'verilog-hdl', 'systemverilog-hdl']",https://api.github.com/licenses/mit
3864,https://github.com/DeamonYang/micro_cpu_design.git,2019-11-11 12:34:13+00:00,Implementation for a 32bits micro cpu. This project is based on AZCPU (the book of  CPU 自制入门) ,0,DeamonYang/micro_cpu_design,220977600,SystemVerilog,micro_cpu_design,21,2,2023-07-14 08:29:01+00:00,[],
3865,https://github.com/makestuff/buffer-fifo.git,2020-01-06 10:58:08+00:00,HWL: A generic single-clock FIFO with configurable thresholds,0,makestuff/buffer-fifo,232082175,SystemVerilog,buffer-fifo,28,2,2023-01-03 19:57:41+00:00,[],https://api.github.com/licenses/mit
3866,https://github.com/allenderalencar/UVM_Register_bank.git,2019-11-14 20:35:37+00:00,,2,allenderalencar/UVM_Register_bank,221782277,SystemVerilog,UVM_Register_bank,10787,2,2021-06-23 07:56:48+00:00,[],
3867,https://github.com/HITSZ-COMP2008/Lab-Cache-Handout.git,2020-01-23 16:13:59+00:00,哈尔滨工业大学（深圳）2020春季计算机组成原理实验_Cache设计,0,HITSZ-COMP2008/Lab-Cache-Handout,235833363,SystemVerilog,Lab-Cache-Handout,2,2,2024-03-18 08:52:14+00:00,[],
3868,https://github.com/gururavi/rtl.git,2019-11-20 19:26:00+00:00,Synchronous and Asynchronous FIFO with AXI interface,0,gururavi/rtl,223011061,SystemVerilog,rtl,10,2,2023-10-29 08:16:55+00:00,"['rtl', 'systemverilog', 'fifo', 'floating-point-arithmetic', 'fpga', 'synthesis', 'pipeline', 'axi4', 'axi-stream', 'axi']",
3869,https://github.com/Cra2yPierr0t/I_think_it_will_be_Drone.git,2019-11-03 14:04:21+00:00,ドローン作るよ,0,Cra2yPierr0t/I_think_it_will_be_Drone,219310092,SystemVerilog,I_think_it_will_be_Drone,6203,2,2022-12-08 23:52:47+00:00,[],
3870,https://github.com/PacoReinaCampo/MPSoC-OR1K.git,2020-02-11 02:57:58+00:00,Multi-Processor System on Chip with OpenRISC-32 / OpenRISC-64,1,PacoReinaCampo/MPSoC-OR1K,239663102,SystemVerilog,MPSoC-OR1K,33384,2,2023-03-31 16:25:48+00:00,"['openrisc', 'mimd', 'mpsoc']",https://api.github.com/licenses/mit
3871,https://github.com/rag1404/Round-robin-Arbiter-with-UVM-TB.git,2019-11-04 06:50:57+00:00,Round robin arbiter with UVM Test bench,1,rag1404/Round-robin-Arbiter-with-UVM-TB,219435962,SystemVerilog,Round-robin-Arbiter-with-UVM-TB,3,2,2021-10-17 02:49:19+00:00,[],
3872,https://github.com/Buraddo23/Switch-testbench.git,2019-11-05 14:26:20+00:00,UVM Testbench for a basic Switch module,0,Buraddo23/Switch-testbench,219764650,SystemVerilog,Switch-testbench,3267,2,2022-03-13 11:23:32+00:00,[],
3873,https://github.com/azonenberg/ssp21-vpn.git,2019-11-15 04:50:01+00:00,Point to point layer-2 VPN using SSP21 to transport Ethernet frames,0,azonenberg/ssp21-vpn,221846268,SystemVerilog,ssp21-vpn,19,2,2022-03-17 19:54:17+00:00,[],https://api.github.com/licenses/bsd-3-clause
3874,https://github.com/rarysson/Relogio-Digital.git,2019-12-21 19:48:24+00:00,Relógio digital desenvolvido em Verilog para a placa FPGA Cyclone IV,0,rarysson/Relogio-Digital,229475583,SystemVerilog,Relogio-Digital,6,2,2023-11-12 02:42:17+00:00,[],
3875,https://github.com/charkster/cmod_a7_pattern_generator_v1.git,2019-11-02 18:27:50+00:00,,0,charkster/cmod_a7_pattern_generator_v1,219196371,SystemVerilog,cmod_a7_pattern_generator_v1,161,1,2023-05-29 18:16:49+00:00,"['xilinx-fpga', 'digilent', 'gpio', 'pattern', 'spi']",https://api.github.com/licenses/mit
3876,https://github.com/flasonil/pulp_cluster.git,2019-11-11 13:35:57+00:00,,0,flasonil/pulp_cluster,220988767,SystemVerilog,pulp_cluster,323,1,2021-02-09 00:53:21+00:00,[],
3877,https://github.com/A13X0150N/FloatingPoint_FMA_Formal.git,2019-11-12 07:03:31+00:00,Formal verification of an IEEE-754 floating point FMA,0,A13X0150N/FloatingPoint_FMA_Formal,221152073,SystemVerilog,FloatingPoint_FMA_Formal,21,1,2022-03-08 18:00:27+00:00,[],
3878,https://github.com/nekiicheb/axi_arbiter.git,2020-01-30 19:19:28+00:00,test task from company,0,nekiicheb/axi_arbiter,237287360,SystemVerilog,axi_arbiter,79,1,2020-09-24 12:22:22+00:00,"['quartus', 'systemverilog', 'modelsim']",
3879,https://github.com/jvorob/cse502.git,2020-02-05 23:27:56+00:00,Making a CPU in verilog,1,jvorob/cse502,238569133,SystemVerilog,cse502,540,1,2022-05-13 15:00:53+00:00,[],
3880,https://github.com/gmlarumbe/ucontroller.git,2020-02-12 10:52:06+00:00,Microcontroller Hardware Model,0,gmlarumbe/ucontroller,239989856,SystemVerilog,ucontroller,2717,1,2023-03-19 00:17:00+00:00,[],
3881,https://github.com/KJeanpol/TicTacToeVeilog.git,2019-10-24 03:55:10+00:00,,0,KJeanpol/TicTacToeVeilog,217207243,SystemVerilog,TicTacToeVeilog,36260,1,2022-06-22 21:58:27+00:00,[],
3882,https://github.com/vperrin59/edaplayground.git,2019-11-21 21:46:25+00:00,Basic scripts to be used on edaplayground,0,vperrin59/edaplayground,223271298,SystemVerilog,edaplayground,45,1,2022-12-14 23:08:27+00:00,[],
3883,https://github.com/dh73/Sandbox.git,2019-10-13 03:20:04+00:00,Various tests,0,dh73/Sandbox,214753779,SystemVerilog,Sandbox,9,1,2022-07-02 23:13:13+00:00,[],
3884,https://github.com/NeM-T/cpu.git,2019-12-15 10:02:44+00:00,systemverilogによるCPU実装,0,NeM-T/cpu,228163248,SystemVerilog,cpu,63,1,2020-02-02 07:43:10+00:00,[],
3885,https://github.com/SereenBenchohra/Digital_Audio_Synthesizer_CPE233Final.git,2020-01-02 02:18:46+00:00,Digital Audio Synthesizer ,0,SereenBenchohra/Digital_Audio_Synthesizer_CPE233Final,231291801,SystemVerilog,Digital_Audio_Synthesizer_CPE233Final,1398,1,2022-07-06 08:57:14+00:00,[],
3886,https://github.com/kishore440/UVM_TEMPLTE.git,2019-11-24 06:22:10+00:00,"uvm template including sequence item, sequence, sequencer, driver, agent, environment, test classes and top module",0,kishore440/UVM_TEMPLTE,223701736,SystemVerilog,UVM_TEMPLTE,11,1,2020-03-14 13:35:34+00:00,[],
3887,https://github.com/Sh3b0/FPGA-Snake.git,2019-11-15 00:10:48+00:00,7-segment snake using a microcontroller,0,Sh3b0/FPGA-Snake,221809417,SystemVerilog,FPGA-Snake,7198,1,2022-06-23 20:11:08+00:00,"['7-segment-display', 'microcontroller', 'computer-architecture', 'system-verilog', 'hardware-description-language']",
3888,https://github.com/ZhengqiY/ECE-594-LAB2.git,2019-11-01 00:27:57+00:00,RISC-V Verification via assertions,0,ZhengqiY/ECE-594-LAB2,218883654,SystemVerilog,ECE-594-LAB2,370,1,2019-12-26 16:26:10+00:00,[],
3889,https://github.com/BoraKurucu/BILKENT-CS223-DIGITAL-DESIGN.git,2020-01-20 23:58:37+00:00,,1,BoraKurucu/BILKENT-CS223-DIGITAL-DESIGN,235221589,SystemVerilog,BILKENT-CS223-DIGITAL-DESIGN,489,1,2020-07-22 18:47:52+00:00,[],
3890,https://github.com/Dmitriy0111/sva_tests.git,2019-10-17 14:12:38+00:00,,0,Dmitriy0111/sva_tests,215809249,SystemVerilog,sva_tests,96,1,2019-11-17 04:00:05+00:00,[],
3891,https://github.com/matandalmeida/uvm_ahb5.git,2019-11-08 18:07:43+00:00,Ambiente de verificação para o protocolo AMBA AHB5,0,matandalmeida/uvm_ahb5,220522303,SystemVerilog,uvm_ahb5,8127,1,2021-05-06 01:57:20+00:00,[],
3892,https://github.com/atsmith3/cs598jt.git,2019-12-04 16:26:33+00:00,,0,atsmith3/cs598jt,225909796,SystemVerilog,cs598jt,384,1,2020-08-05 07:31:58+00:00,[],
3893,https://github.com/ManuelonGithub/UART.git,2020-02-08 08:20:44+00:00,My implementation of a UART RX/TX module in SystemVerilog.,0,ManuelonGithub/UART,239092656,SystemVerilog,UART,8,1,2022-04-30 23:32:33+00:00,[],https://api.github.com/licenses/mit
3894,https://github.com/mtdudek/LC.git,2019-10-03 13:01:37+00:00,Logika Cyfrowa/ Digital Logic,0,mtdudek/LC,212581382,SystemVerilog,LC,8,1,2024-03-13 09:05:50+00:00,[],
3895,https://github.com/nguyenquanicd/Aes128_ECB_CBC_CFB_OFB_CTR.git,2019-10-25 14:42:23+00:00,"AES128 IP core supports ECB, CBC, CFB, OFB and CTR mode",2,nguyenquanicd/Aes128_ECB_CBC_CFB_OFB_CTR,217554336,SystemVerilog,Aes128_ECB_CBC_CFB_OFB_CTR,14455,1,2020-12-08 07:02:23+00:00,[],
3896,https://github.com/abdulmannan1998/CS223.git,2019-12-16 14:46:26+00:00,Digital Design Labs for Bilkent (SystemVerilog),0,abdulmannan1998/CS223,228408909,SystemVerilog,CS223,13,1,2019-12-16 15:24:17+00:00,[],
3897,https://github.com/MiSTer-devel/Arcade-MCR3Scroll_MiSTer.git,2020-02-01 22:50:23+00:00,Arcade: MCR3 Scroll,9,MiSTer-devel/Arcade-MCR3Scroll_MiSTer,237688885,SystemVerilog,Arcade-MCR3Scroll_MiSTer,10916,1,2023-03-16 06:49:29+00:00,[],
3898,https://github.com/gilad29/OTTER_cache.git,2020-02-05 00:52:42+00:00,,0,gilad29/OTTER_cache,238338813,SystemVerilog,OTTER_cache,24,1,2020-03-02 22:40:02+00:00,[],
3899,https://github.com/lohithay/UVM-Simulation-JTAG.git,2019-11-05 05:05:35+00:00,UVM Simulation Model for a JTAG Interface,2,lohithay/UVM-Simulation-JTAG,219661896,,UVM-Simulation-JTAG,2496,1,2021-06-23 07:55:25+00:00,[],
3900,https://github.com/PedroHSCavalcante/reset-with-uvm-config-db.git,2019-10-22 16:57:45+00:00,Solution for an on-the-fly reset with uvm-config-db (Bad Solution),0,PedroHSCavalcante/reset-with-uvm-config-db,216865443,SystemVerilog,reset-with-uvm-config-db,12,1,2022-02-18 15:57:07+00:00,[],
3901,https://github.com/divyashah98/CPU-P1.git,2020-02-09 15:50:02+00:00,,0,divyashah98/CPU-P1,239330096,SystemVerilog,CPU-P1,11,1,2020-05-08 13:34:12+00:00,[],
3902,https://github.com/eladpar/Battle-City.git,2020-01-07 06:58:38+00:00,FPGA Video Game using System Verilog Technion Lab EE 1,0,eladpar/Battle-City,232262988,SystemVerilog,Battle-City,815,1,2024-03-13 05:34:52+00:00,[],
3903,https://github.com/PacoReinaCampo/MPSoC-MSP430.git,2020-02-11 02:58:54+00:00,Multi-Processor System on Chip with MSP430-16,1,PacoReinaCampo/MPSoC-MSP430,239663261,SystemVerilog,MPSoC-MSP430,18738,1,2023-03-31 16:25:44+00:00,"['msp430', 'mimd', 'mpsoc']",https://api.github.com/licenses/mit
3904,https://github.com/BillNace/18341_P5_USB.git,2019-11-01 14:27:49+00:00,Starter code for USB Project,0,BillNace/18341_P5_USB,219000892,SystemVerilog,18341_P5_USB,1303,1,2022-02-07 11:57:55+00:00,[],
3905,https://github.com/olivezhaocmc/test.git,2019-10-11 14:40:09+00:00,,0,olivezhaocmc/test,214459608,SystemVerilog,test,16,1,2021-03-05 02:12:18+00:00,[],
3906,https://github.com/dz1domin/BCDcounter.git,2020-01-22 18:32:34+00:00,SystemVerilog project for Vivado 2018 for a native BCD counter working with OLED screen on ZedBoard (Xilinx Zynq-7000),0,dz1domin/BCDcounter,235638680,SystemVerilog,BCDcounter,4789,1,2022-04-27 20:39:38+00:00,[],https://api.github.com/licenses/mit
3907,https://github.com/Avani8/otcompression.git,2020-01-11 03:03:47+00:00,,1,Avani8/otcompression,233167864,SystemVerilog,otcompression,59209,1,2022-02-27 05:36:22+00:00,[],https://api.github.com/licenses/apache-2.0
3908,https://github.com/karthik-0398/fpmultiplier.git,2019-12-04 13:20:25+00:00,This design achieves a 32-bit floating-point multiplication complying with IEEE 724 binary32 format. The multiplier was written in SystemVerilog and simulated in ModelSim and synthesised in Quartus Prime. It gives a result utilising rounding via truncation to give acceptable precision for real life applications.  It includes cases to check for Not a number (NaN) and signed zero numbers. The product that is computed after the multiplication is normalised and adjusted to comply with IEEE 724 standards. The design achieves the multiplication in 140ns at the positive edge of the clock pulse.,0,karthik-0398/fpmultiplier,225872315,SystemVerilog,fpmultiplier,10,1,2021-11-16 10:32:02+00:00,[],https://api.github.com/licenses/mit
3909,https://github.com/abdo1819/pipline_mips.git,2019-12-06 19:51:47+00:00,pipline mips processor with systemverilog,2,abdo1819/pipline_mips,226398816,SystemVerilog,pipline_mips,31,1,2019-12-12 22:41:38+00:00,[],
3910,https://github.com/gabepizz/bitcoinhash.git,2020-01-07 02:06:08+00:00,Project creating code for an FPGA that can search for specific values for the bitcoin blockchain.,1,gabepizz/bitcoinhash,232222677,SystemVerilog,bitcoinhash,55,1,2021-04-05 16:09:28+00:00,[],
3911,https://github.com/leoP0/SystemVerylog.git,2019-11-12 05:07:59+00:00,SystemVerilog Projects ECE474,0,leoP0/SystemVerylog,221134389,SystemVerilog,SystemVerylog,1323,1,2020-03-30 20:37:36+00:00,[],
3912,https://github.com/KimbeM/CGP.git,2019-12-28 12:01:34+00:00,Cartesian Genetic Program for creating sequential digital logic for FPGA,0,KimbeM/CGP,230604216,SystemVerilog,CGP,126,1,2024-04-06 05:51:10+00:00,[],
3913,https://github.com/arundathi-shanthini/ELEC0028-Advanced-Digital-Design.git,2020-01-25 16:53:17+00:00,Repository to save the code associated to lab tasks of ELEC0028,0,arundathi-shanthini/ELEC0028-Advanced-Digital-Design,236199223,SystemVerilog,ELEC0028-Advanced-Digital-Design,18,1,2020-11-21 23:20:08+00:00,[],
3914,https://github.com/AlwaysSayingPleaseAndThankYou/ece_324_hw.git,2020-02-02 17:36:25+00:00,,0,AlwaysSayingPleaseAndThankYou/ece_324_hw,237809278,SystemVerilog,ece_324_hw,819,1,2020-02-27 20:18:29+00:00,[],
3915,https://github.com/hamayelq/DAC-Waveform-Moving-Block-Verilog.git,2020-02-13 22:14:43+00:00,,0,hamayelq/DAC-Waveform-Moving-Block-Verilog,240376362,SystemVerilog,DAC-Waveform-Moving-Block-Verilog,5078,1,2021-05-23 17:49:42+00:00,[],
3916,https://github.com/kalhorghazal/Mips-SingleCycle.git,2020-01-31 11:49:15+00:00,"Mips Single-Cycle, Computer Architecture course, University of Tehran",0,kalhorghazal/Mips-SingleCycle,237419660,SystemVerilog,Mips-SingleCycle,22,1,2021-05-13 21:54:02+00:00,"['mips-architecture', 'mips', 'single-cycle-processor', 'verilog-hdl', 'mips-processor']",
3917,https://github.com/BillNace/18341_P4_Assertions.git,2019-10-16 15:55:08+00:00,Starter code for the Assertions project,1,BillNace/18341_P4_Assertions,215587765,SystemVerilog,18341_P4_Assertions,324,1,2021-11-22 17:42:17+00:00,[],
3918,https://github.com/Kent-Na/HUB-75_LED_MATRIX_FPGA.git,2019-10-27 22:15:49+00:00,HUB-75 LED matrix driver implementation for the FPGA,0,Kent-Na/HUB-75_LED_MATRIX_FPGA,217923800,SystemVerilog,HUB-75_LED_MATRIX_FPGA,38,1,2020-11-23 05:36:15+00:00,[],https://api.github.com/licenses/mit
3919,https://github.com/RobiNexy/SIMPLE_MIPS_CPU.git,2019-12-25 05:30:13+00:00,计组课程设计，如果我做完的话应该有57条指令，开发板为xc7a100tcsg324-1,0,RobiNexy/SIMPLE_MIPS_CPU,230046651,SystemVerilog,SIMPLE_MIPS_CPU,4,1,2022-11-14 06:42:44+00:00,[],
3920,https://github.com/Ywang-Vision-Lab/ZYNQ-HDMI.git,2020-01-14 03:54:24+00:00,output image to screen via HDMI ,0,Ywang-Vision-Lab/ZYNQ-HDMI,233752021,SystemVerilog,ZYNQ-HDMI,1191,1,2022-08-15 03:08:20+00:00,[],https://api.github.com/licenses/mit
3921,https://github.com/mjbas/questasim_experiments.git,2019-10-30 04:33:22+00:00,,0,mjbas/questasim_experiments,218443851,SystemVerilog,questasim_experiments,3664,1,2023-11-24 07:57:08+00:00,[],
3922,https://github.com/PacoReinaCampo/PU-OR1K.git,2020-02-10 18:10:49+00:00,Processing Unit with OpenRISC-32 / OpenRISC-64,1,PacoReinaCampo/PU-OR1K,239579418,SystemVerilog,PU-OR1K,30671,1,2023-03-31 16:25:52+00:00,"['openrisc', '32-bit', 'harvard-architecture', 'pu']",https://api.github.com/licenses/mit
3923,https://github.com/PacoReinaCampo/PU-MSP430.git,2020-01-24 16:37:56+00:00,Processing Unit with MSP430-16,0,PacoReinaCampo/PU-MSP430,236041218,SystemVerilog,PU-MSP430,20606,1,2023-01-18 16:02:33+00:00,"['msp430', '16-bit', 'von-neumann-architecture', 'pu']",https://api.github.com/licenses/mit
3924,https://github.com/dihernandez/6.111.git,2019-10-12 23:06:48+00:00,6.111 Final Project,0,dihernandez/6.111,214727985,SystemVerilog,6.111,37185,1,2019-12-09 22:06:25+00:00,[],
3925,https://github.com/ErickOF/PS-2-Keyboard-Controller-FPGA.git,2019-11-16 05:23:33+00:00,,0,ErickOF/PS-2-Keyboard-Controller-FPGA,222051453,SystemVerilog,PS-2-Keyboard-Controller-FPGA,15040,1,2022-06-22 22:07:03+00:00,[],
3926,https://github.com/jaycordaro/Basic-MAX10-FPGA-project.git,2019-11-24 23:01:01+00:00,Basic MAX10 FPGA project for 10M50 Eval Kit,0,jaycordaro/Basic-MAX10-FPGA-project,223822961,SystemVerilog,Basic-MAX10-FPGA-project,15,1,2019-12-26 04:32:35+00:00,[],
3927,https://github.com/eniva/fpga-controls.git,2019-12-04 04:09:42+00:00,Ways to improve controls to your liking,0,eniva/fpga-controls,225776657,SystemVerilog,fpga-controls,51,1,2019-12-08 08:17:31+00:00,[],https://api.github.com/licenses/gpl-2.0
3928,https://github.com/vsandeepsekhar/UVM_Tutorial_Udemy_Coursework.git,2020-02-12 04:40:36+00:00,coursework on OVM and UVM by Udemy,0,vsandeepsekhar/UVM_Tutorial_Udemy_Coursework,239928412,SystemVerilog,UVM_Tutorial_Udemy_Coursework,7,1,2023-07-09 23:46:18+00:00,[],
3929,https://github.com/makestuff/block-ram.git,2020-01-06 10:48:33+00:00,HWL: Some common block-ram configurations,0,makestuff/block-ram,232080760,SystemVerilog,block-ram,26,1,2023-01-03 19:57:13+00:00,[],https://api.github.com/licenses/mit
3930,https://github.com/bibby-wang/ELEC4720A1.git,2019-10-13 08:35:06+00:00,,0,bibby-wang/ELEC4720A1,214786627,SystemVerilog,ELEC4720A1,66,1,2021-01-04 23:07:05+00:00,[],
3931,https://github.com/DeamonYang/FPGA_LVDS_LCD.git,2019-10-22 10:34:01+00:00,The verilog driver for lvds lcd,0,DeamonYang/FPGA_LVDS_LCD,216787553,SystemVerilog,FPGA_LVDS_LCD,112,1,2022-07-16 03:13:28+00:00,[],
3932,https://github.com/hiiaka/uvm_example.git,2019-11-07 10:55:18+00:00,RTLを語る会2019用,0,hiiaka/uvm_example,220215333,SystemVerilog,uvm_example,7,1,2022-05-14 12:28:09+00:00,[],
3933,https://github.com/hellgate202/frame_buffer.git,2019-12-24 08:02:38+00:00,Frame buffer with AXI4-Stream input and AXI4 output,0,hellgate202/frame_buffer,229899068,SystemVerilog,frame_buffer,148,1,2020-05-05 10:42:27+00:00,[],https://api.github.com/licenses/gpl-3.0
3934,https://github.com/Verdvana/LCM.git,2020-01-04 06:22:56+00:00,求两个无符号整数的最大公约数和最小公倍数,0,Verdvana/LCM,231719005,SystemVerilog,LCM,3,1,2022-06-06 06:16:28+00:00,[],
3935,https://github.com/shubhv26/UVM-verification-for-FIFO-DUT.git,2019-11-30 23:33:06+00:00,,0,shubhv26/UVM-verification-for-FIFO-DUT,225082950,SystemVerilog,UVM-verification-for-FIFO-DUT,375,1,2019-11-30 23:39:26+00:00,[],
3936,https://github.com/mortepau/TFE4171.git,2020-02-01 12:09:11+00:00,Exercises from TFE4171 - Design of digital system II,2,mortepau/TFE4171,237609380,SystemVerilog,TFE4171,2859,1,2023-04-15 14:54:54+00:00,[],
3937,https://github.com/adiran4/Frogger.git,2019-12-13 02:36:55+00:00,,0,adiran4/Frogger,227739889,SystemVerilog,Frogger,12,1,2021-03-09 19:08:29+00:00,[],
3938,https://github.com/rhianc/VHDL-Reactive-LED-System.git,2019-12-12 17:38:42+00:00,MIT 6.111 Final Project written in System Verilog (displays frequency spectrum on Dot-Start LEDs),0,rhianc/VHDL-Reactive-LED-System,227662579,SystemVerilog,VHDL-Reactive-LED-System,21,1,2022-03-16 00:15:08+00:00,[],
3939,https://github.com/mofeing/pa-project.git,2019-12-23 10:32:40+00:00,Processor Architecture course's project,0,mofeing/pa-project,229730250,SystemVerilog,pa-project,146,1,2024-01-23 13:33:04+00:00,"['hdl', 'systemverilog']",
3940,https://github.com/igenovese/ece506_riscv.git,2019-11-19 04:04:30+00:00,RISC-V RV32I implementation in SystemVerilog for PSU - ECE506,0,igenovese/ece506_riscv,222605381,SystemVerilog,ece506_riscv,416,1,2024-03-31 02:42:54+00:00,[],
3941,https://github.com/michaelGonzalez1812/geva.git,2019-10-12 04:37:28+00:00,,0,michaelGonzalez1812/geva,214578284,SystemVerilog,geva,2734,1,2019-11-07 08:31:43+00:00,[],
3942,https://github.com/abasak24/ece594Neuromorphic.git,2019-10-29 01:34:55+00:00,Course Project,0,abasak24/ece594Neuromorphic,218179435,SystemVerilog,ece594Neuromorphic,137,1,2023-01-29 08:28:57+00:00,[],
3943,https://github.com/Verdvana/DIV.git,2020-01-04 06:14:49+00:00,整数除法器,0,Verdvana/DIV,231718169,SystemVerilog,DIV,2,1,2022-06-06 06:16:26+00:00,[],
3944,https://github.com/zion-group/ZionProcessorComponentLib.git,2019-11-25 02:32:23+00:00,This is a library for a processor circuit basing on ZionBasicCircuitLib and ZionRiscvIsaLib.,0,zion-group/ZionProcessorComponentLib,223846587,SystemVerilog,ZionProcessorComponentLib,19,1,2021-03-22 15:04:58+00:00,[],
3945,https://github.com/tungfang/EE271-Introduction-to-Digital-Circuits-and-Systems.git,2019-12-01 03:07:34+00:00,"Overview of digital computer systems. Covers logic, Boolean algebra, combinational and sequential circuits and logic design; programmable logic devices; and the design and operation of digital computers, including ALU, memory, and I/O.",0,tungfang/EE271-Introduction-to-Digital-Circuits-and-Systems,225099613,SystemVerilog,EE271-Introduction-to-Digital-Circuits-and-Systems,21405,1,2021-02-19 21:58:02+00:00,[],
3946,https://github.com/Joseda8/ProcesadorARMv4.git,2019-11-07 02:58:35+00:00,,1,Joseda8/ProcesadorARMv4,220138955,SystemVerilog,ProcesadorARMv4,1149,1,2022-06-22 21:53:11+00:00,[],
3947,https://github.com/akerlund/RTL.git,2019-12-28 07:38:06+00:00,RTL modules which can be used between projects,0,akerlund/RTL,230576365,SystemVerilog,RTL,4131,1,2022-08-24 10:07:52+00:00,['rtl'],https://api.github.com/licenses/gpl-3.0
3948,https://github.com/d1vunit/ERM16.git,2020-01-21 11:03:39+00:00,Easy Risc Microprocessor 16 bits,0,d1vunit/ERM16,235322023,SystemVerilog,ERM16,51,1,2020-02-09 07:26:45+00:00,[],
3949,https://github.com/DavidTou/string-hw-accelerator-nios2.git,2019-11-21 22:46:02+00:00,SW/HW Co-design [CPE423] Final Project - String Manipulation Hardware Accelerator (Avalon Memory Mapped Peripheral),0,DavidTou/string-hw-accelerator-nios2,223279133,SystemVerilog,string-hw-accelerator-nios2,45710,1,2019-12-26 01:48:25+00:00,[],
3950,https://github.com/ErickOF/MinComputerARMv4.git,2019-10-24 17:02:08+00:00,,0,ErickOF/MinComputerARMv4,217350623,SystemVerilog,MinComputerARMv4,55608,1,2022-06-22 22:07:07+00:00,[],
3951,https://github.com/dgist-datalab/HWaccel_BloomFTL.git,2019-10-21 14:45:20+00:00,"Verilog, FPGA, Bit pattern(BF) search",2,dgist-datalab/HWaccel_BloomFTL,216592800,SystemVerilog,HWaccel_BloomFTL,671,1,2021-12-12 12:50:54+00:00,[],
3952,https://github.com/KaiyueTao/tiao-yi-tiao.git,2019-12-24 10:20:09+00:00,"a verilog version of ""tiao-yi-tiao"" game from WeChat",0,KaiyueTao/tiao-yi-tiao,229920520,SystemVerilog,tiao-yi-tiao,81,1,2021-08-23 08:15:17+00:00,[],
3953,https://github.com/recogni/recogni-ariane.git,2020-01-13 22:53:09+00:00,Private mirror of pulp-platform/ariane,1,recogni/recogni-ariane,233710325,SystemVerilog,recogni-ariane,34379,1,2021-01-12 22:47:56+00:00,[],
3954,https://github.com/Jevitate/467.git,2020-01-21 22:17:25+00:00,,1,Jevitate/467,235452585,SystemVerilog,467,177269,1,2022-10-10 01:11:32+00:00,[],
3955,https://github.com/pestalella/hw_adder.git,2019-12-19 15:38:56+00:00,Simple 4-bit adder project to learn some SystemVerilog,0,pestalella/hw_adder,229085835,SystemVerilog,hw_adder,5,1,2021-03-12 01:24:12+00:00,[],
3956,https://github.com/thata/R4.git,2019-11-20 04:00:11+00:00,RISC-V subset,0,thata/R4,222847338,SystemVerilog,R4,3336,1,2023-03-06 22:30:55+00:00,[],
3957,https://github.com/ErickOF/Single-Cycle-ARM-Processor-FPGA.git,2019-11-13 15:26:20+00:00,,0,ErickOF/Single-Cycle-ARM-Processor-FPGA,221490175,SystemVerilog,Single-Cycle-ARM-Processor-FPGA,17903,1,2023-08-25 04:37:36+00:00,"['arm', 'assembly', 'quartus', 'systemverilog']",
3958,https://github.com/rahulyesantharao/FPGA.git,2019-12-13 09:05:40+00:00,6.111 Final Project: Freeform Production of Gorgeous Audio,0,rahulyesantharao/FPGA,227799065,SystemVerilog,FPGA,398,1,2021-10-07 05:00:55+00:00,"['fpga', 'systemverilog', 'audio-processing', 'fft', 'midi', 'uart']",
3959,https://github.com/chad-cole/spec_sv.git,2019-12-07 20:01:03+00:00,"[SystemVerilog]  Abstract, dynamic database and abstract database item class based on factory pattern with a concrete implementation for electrical specifications. There is also a utility class declaration with static functions for string manipulation.",0,chad-cole/spec_sv,226569113,SystemVerilog,spec_sv,8,1,2020-06-03 15:23:08+00:00,"['systemverilog', 'factory-pattern', 'singleton-pattern', 'string-manipulation', 'database']",
3960,https://github.com/pablwoAraujo/Loac.git,2019-10-24 12:28:31+00:00,Codigos de FSM,0,pablwoAraujo/Loac,217293751,SystemVerilog,Loac,4,1,2019-10-24 14:51:03+00:00,[],
3961,https://github.com/Stefan1027/AMBA_BUS.git,2019-11-11 11:13:59+00:00,,0,Stefan1027/AMBA_BUS,220963822,SystemVerilog,AMBA_BUS,42,1,2021-09-01 14:12:27+00:00,[],
3962,https://github.com/Psichico/Design-Verification.git,2020-02-09 22:50:58+00:00,EE 273: Logic Verification with UVM,0,Psichico/Design-Verification,239386565,SystemVerilog,Design-Verification,92638,1,2020-06-17 05:25:23+00:00,[],
3963,https://github.com/Popungs/RPN_Calculator_sVerilog.git,2020-02-06 21:42:41+00:00,Implementation of Reverse Polish Notation Calculator via System Verilog,0,Popungs/RPN_Calculator_sVerilog,238790656,SystemVerilog,RPN_Calculator_sVerilog,5,1,2022-04-11 21:52:53+00:00,[],
3964,https://github.com/lucionathan/LOAC.git,2019-10-20 19:14:01+00:00,Algumas resoluções de LOAC.,0,lucionathan/LOAC,216413903,SystemVerilog,LOAC,7,1,2021-10-15 17:04:14+00:00,[],
3965,https://github.com/flasonil/lockstep_unit.git,2019-11-11 13:40:12+00:00,,0,flasonil/lockstep_unit,220989607,SystemVerilog,lockstep_unit,12,1,2021-02-09 00:53:23+00:00,[],
3966,https://github.com/XinlueLiu/USB_Bulk_Transfer-Endpoint-AHB-Lite-SoC-Module.git,2019-11-14 22:19:50+00:00,SoC peripheral module of USB 1.1 with AHB-Lite Slave Interface,0,XinlueLiu/USB_Bulk_Transfer-Endpoint-AHB-Lite-SoC-Module,221796845,SystemVerilog,USB_Bulk_Transfer-Endpoint-AHB-Lite-SoC-Module,5753,1,2021-07-04 06:56:06+00:00,[],
3967,https://github.com/taneroksuz/wolv-z1.git,2020-01-19 08:40:42+00:00,Wolv Z1 is a RISC-V CPU core,3,taneroksuz/wolv-z1,234867107,SystemVerilog,wolv-z1,523,1,2023-09-07 05:41:36+00:00,"['risc-v', 'hardware', 'rv32', 'cpu', 'core', 'fpga']",https://api.github.com/licenses/apache-2.0
3968,https://github.com/Muellegr/MusicBox-Quartus-Project.git,2020-01-23 00:18:34+00:00,OSU ECE 342 Junior Design Winter 2020 - Music Box,1,Muellegr/MusicBox-Quartus-Project,235694348,SystemVerilog,MusicBox-Quartus-Project,115703,1,2020-10-14 22:13:31+00:00,[],
3969,https://github.com/A626885813/.vimrc.git,2020-01-29 06:29:19+00:00,,0,A626885813/.vimrc,236918681,SystemVerilog,.vimrc,133,1,2022-03-01 14:48:59+00:00,[],
3970,https://github.com/xinqiaozhang/MIPS_Projcet.git,2019-10-12 19:01:46+00:00,EE 670 Project: Design a MIPS Processor,0,xinqiaozhang/MIPS_Projcet,214700075,SystemVerilog,MIPS_Projcet,6,0,2019-10-12 19:02:20+00:00,[],
3971,https://github.com/jryebread/test.git,2019-10-12 01:38:05+00:00,,0,jryebread/test,214557044,SystemVerilog,test,9,0,2019-10-12 01:39:45+00:00,[],
3972,https://github.com/nehuloswal/Project-2.git,2019-10-26 00:34:29+00:00,,0,nehuloswal/Project-2,217634886,SystemVerilog,Project-2,3511,0,2020-01-16 04:55:24+00:00,[],
3973,https://github.com/chahanCPU/FPU.git,2019-10-29 05:17:23+00:00,,1,chahanCPU/FPU,218209492,SystemVerilog,FPU,105,0,2020-02-15 09:03:03+00:00,[],
3974,https://github.com/LucasCalabria/Infra-de-Hardware---Projeto---.git,2019-10-18 05:15:00+00:00,,0,LucasCalabria/Infra-de-Hardware---Projeto---,215946154,SystemVerilog,Infra-de-Hardware---Projeto---,56,0,2019-10-18 05:16:11+00:00,[],
3975,https://github.com/abhijiths94/WISC19CPU.git,2019-10-11 03:31:59+00:00,,0,abhijiths94/WISC19CPU,214336120,SystemVerilog,WISC19CPU,238,0,2020-02-08 23:07:09+00:00,[],
3976,https://github.com/hellgate202/sorting_network.git,2019-10-31 07:32:36+00:00,,0,hellgate202/sorting_network,218709238,SystemVerilog,sorting_network,17,0,2019-10-31 10:39:34+00:00,[],https://api.github.com/licenses/gpl-3.0
3977,https://github.com/R3adOnlyJoe/cse-141l.git,2019-12-06 03:14:31+00:00,,0,R3adOnlyJoe/cse-141l,226236274,SystemVerilog,cse-141l,26,0,2021-03-03 00:09:16+00:00,[],
3978,https://github.com/JoaoPi314/golomb_uvm.git,2019-12-10 13:10:11+00:00,,0,JoaoPi314/golomb_uvm,227124177,SystemVerilog,golomb_uvm,23450,0,2021-09-08 23:14:25+00:00,[],
3979,https://github.com/sheldonang/ece337project.git,2019-12-11 03:50:17+00:00,,0,sheldonang/ece337project,227271725,SystemVerilog,ece337project,15715,0,2019-12-11 04:10:42+00:00,[],
3980,https://github.com/TomoyaYokono/cpu_cache_sim.git,2020-01-05 12:17:14+00:00,,0,TomoyaYokono/cpu_cache_sim,231912494,SystemVerilog,cpu_cache_sim,1304,0,2020-01-05 12:26:23+00:00,[],
3981,https://github.com/BobinShihJosh/Design-of-Digital-Circuits-and-Systems.git,2019-11-09 06:00:08+00:00,,0,BobinShihJosh/Design-of-Digital-Circuits-and-Systems,220598942,SystemVerilog,Design-of-Digital-Circuits-and-Systems,41,0,2019-11-09 06:23:14+00:00,[],
3982,https://github.com/christine222/EE-271-Rasterizer.git,2019-11-14 20:56:05+00:00,Stanford Fall 2019 EE271 Course Project,1,christine222/EE-271-Rasterizer,221785353,SystemVerilog,EE-271-Rasterizer,56696,0,2020-10-19 05:49:29+00:00,[],
3983,https://github.com/A-aron-Huang/AlarmClock.git,2020-01-19 06:51:09+00:00,Alarm clock programmed through an FPGA,0,A-aron-Huang/AlarmClock,234854534,SystemVerilog,AlarmClock,68,0,2020-05-25 22:06:16+00:00,[],
3984,https://github.com/farukakgul/Cellular-Automata-Game-CS223.git,2020-01-23 19:37:41+00:00,Digital Design and Computer Architecture course term project written with SystemVerilog.,0,farukakgul/Cellular-Automata-Game-CS223,235871515,SystemVerilog,Cellular-Automata-Game-CS223,244,0,2021-12-04 14:19:29+00:00,[],
3985,https://github.com/AlwaysSayingPleaseAndThankYou/ECE-324-Labs.git,2020-01-17 04:54:40+00:00,Lab Goodness,0,AlwaysSayingPleaseAndThankYou/ECE-324-Labs,234473335,SystemVerilog,ECE-324-Labs,876,0,2020-08-12 08:40:27+00:00,[],
3986,https://github.com/NiravJadav/apb.git,2020-01-23 09:05:27+00:00,works related to amba apb bus ,0,NiravJadav/apb,235758565,SystemVerilog,apb,24,0,2020-01-28 06:33:51+00:00,[],https://api.github.com/licenses/gpl-3.0
3987,https://github.com/carolvalenca/LOAC-FSM.git,2019-10-20 21:14:10+00:00,,0,carolvalenca/LOAC-FSM,216428348,SystemVerilog,LOAC-FSM,9,0,2019-10-24 17:35:21+00:00,[],
3988,https://github.com/EfimAlekseevich/State-machine-on-FPGA-Altera-Cyclone-4.git,2019-10-23 18:05:36+00:00,"The finite state machine scheme is implemented on logic elements and D-triggers. To display information about the input and state of the machine, modules were written on System Verilog.",0,EfimAlekseevich/State-machine-on-FPGA-Altera-Cyclone-4,217122223,SystemVerilog,State-machine-on-FPGA-Altera-Cyclone-4,18,0,2019-11-26 16:57:01+00:00,[],
3989,https://github.com/miistein/lab3.git,2019-12-06 07:14:33+00:00,,0,miistein/lab3,226268781,SystemVerilog,lab3,4,0,2019-12-06 07:15:39+00:00,[],
3990,https://github.com/derekalyne/ECE_385_Before_enemies.git,2019-12-09 05:07:17+00:00,,0,derekalyne/ECE_385_Before_enemies,226789117,SystemVerilog,ECE_385_Before_enemies,25,0,2019-12-09 05:09:42+00:00,[],
3991,https://github.com/buzhonghua/SM4Encryptor.git,2019-12-31 10:37:18+00:00,"An encrypt hardware supporting SM4 algorithm, with SCA/FI attack immunity.",1,buzhonghua/SM4Encryptor,231072416,,SM4Encryptor,1275,0,2021-05-11 19:26:11+00:00,[],
3992,https://github.com/chriskara98/tictactoe.git,2019-11-19 20:10:30+00:00,tictactoe in system verilog,0,chriskara98/tictactoe,222780451,SystemVerilog,tictactoe,2,0,2019-11-20 18:10:26+00:00,[],
3993,https://github.com/arkhadem/BISC_MVM.git,2019-11-17 18:25:42+00:00,,0,arkhadem/BISC_MVM,222292731,SystemVerilog,BISC_MVM,380,0,2020-01-07 03:54:22+00:00,[],
3994,https://github.com/H-S-S-11/basic-uart-transciever.git,2020-01-18 12:54:28+00:00,A uart reciever and transmitter microcontroller peripheral created for end of semester 1 design exercise for practice,0,H-S-S-11/basic-uart-transciever,234734534,SystemVerilog,basic-uart-transciever,18,0,2020-01-18 12:58:05+00:00,[],https://api.github.com/licenses/gpl-3.0
3995,https://github.com/egeturan/step_motor_verilog.git,2020-01-21 11:36:56+00:00,This is simple step motor implementation using Verilog,0,egeturan/step_motor_verilog,235328051,SystemVerilog,step_motor_verilog,144,0,2020-01-21 11:38:31+00:00,[],https://api.github.com/licenses/mit
3996,https://github.com/egeturan/binary_multiplier.git,2020-01-21 11:39:54+00:00,This isverilog implementation of binary multiplier,0,egeturan/binary_multiplier,235328593,SystemVerilog,binary_multiplier,1356,0,2020-01-21 11:41:43+00:00,[],https://api.github.com/licenses/mit
3997,https://github.com/Tennsoku/ECE342.git,2020-02-13 21:15:26+00:00,,0,Tennsoku/ECE342,240363211,SystemVerilog,ECE342,4,0,2020-02-13 21:23:57+00:00,[],
3998,https://github.com/enforcedvalid/simkit.git,2020-02-11 12:31:46+00:00,A library of utilities for hardware simulation.,1,enforcedvalid/simkit,239757120,SystemVerilog,simkit,343,0,2020-04-16 13:12:05+00:00,[],https://api.github.com/licenses/apache-2.0
3999,https://github.com/bwitherspoon/bandit.git,2019-11-01 13:35:26+00:00,A simple hardware solution to the multi-arm bandit problem.,0,bwitherspoon/bandit,218991697,SystemVerilog,bandit,25,0,2024-01-28 18:54:51+00:00,[],
4000,https://github.com/onesmallskipforman/KeyScan.git,2019-10-04 17:59:02+00:00,,0,onesmallskipforman/KeyScan,212873909,SystemVerilog,KeyScan,612,0,2019-10-07 00:16:06+00:00,[],
4001,https://github.com/SamuelRiedel/accelerator.git,2019-10-11 11:45:47+00:00,,0,SamuelRiedel/accelerator,214421960,SystemVerilog,accelerator,3,0,2019-10-11 11:46:27+00:00,[],
4002,https://github.com/saurabhgplus/AXI-4.git,2019-10-31 05:22:05+00:00,,0,saurabhgplus/AXI-4,218690194,SystemVerilog,AXI-4,1,0,2019-10-31 05:46:29+00:00,[],
4003,https://github.com/tejakunchavenkata/sverilogOOPS.git,2019-10-31 06:34:19+00:00,,0,tejakunchavenkata/sverilogOOPS,218699916,SystemVerilog,sverilogOOPS,3,0,2021-05-06 03:53:18+00:00,[],
4005,https://github.com/KelvinVale/Codigo_Base_UVM_Somador_8_bits.git,2019-10-29 20:01:01+00:00,,0,KelvinVale/Codigo_Base_UVM_Somador_8_bits,218372980,SystemVerilog,Codigo_Base_UVM_Somador_8_bits,8,0,2019-10-29 20:04:30+00:00,[],
4006,https://github.com/Stirgamight/AES_decipher.git,2019-10-29 08:36:27+00:00,,0,Stirgamight/AES_decipher,218240057,SystemVerilog,AES_decipher,14,0,2022-08-04 11:49:43+00:00,[],
4007,https://github.com/abdulmannan1998/CS223-TermProject.git,2019-12-31 16:29:16+00:00,,0,abdulmannan1998/CS223-TermProject,231118046,SystemVerilog,CS223-TermProject,264,0,2020-01-02 17:34:10+00:00,[],
4008,https://github.com/JoseIuri/adder_multiple_comp.git,2020-01-08 11:27:24+00:00,This repository contains a simple testbench with multiples types of comparators.,0,JoseIuri/adder_multiple_comp,232548014,SystemVerilog,adder_multiple_comp,3724,0,2020-01-08 11:29:54+00:00,[],https://api.github.com/licenses/mit
4009,https://github.com/milesdai/FPGA-RFID.git,2019-11-13 21:15:47+00:00,6.111 Final Project: RFID hacking on an FPGA,0,milesdai/FPGA-RFID,221553110,SystemVerilog,FPGA-RFID,18,0,2019-12-13 09:50:12+00:00,[],
4010,https://github.com/linussp/HighSpeed.git,2019-11-25 23:20:19+00:00,,0,linussp/HighSpeed,224059994,SystemVerilog,HighSpeed,83,0,2019-12-02 22:23:37+00:00,[],
4011,https://github.com/KelvinVale/uvm_mais_c_py_wrapper.git,2019-11-06 19:33:25+00:00,Refmod em alto nível feito em Python.,1,KelvinVale/uvm_mais_c_py_wrapper,220074662,SystemVerilog,uvm_mais_c_py_wrapper,14,0,2019-11-06 19:37:04+00:00,[],
4012,https://github.com/resfzdfdz/FileTrans.git,2019-11-06 12:06:39+00:00,,0,resfzdfdz/FileTrans,219987806,SystemVerilog,FileTrans,1395,0,2020-09-04 14:18:40+00:00,[],
4013,https://github.com/chadthom7/lab_jtype.git,2019-12-03 21:46:57+00:00,,0,chadthom7/lab_jtype,225723042,SystemVerilog,lab_jtype,425,0,2019-12-03 23:02:16+00:00,[],
4014,https://github.com/sdonchez/ECE8448.git,2020-01-21 02:58:24+00:00,ECE 8448-001: Embedded Systems Design,0,sdonchez/ECE8448,235244009,SystemVerilog,ECE8448,213044,0,2023-01-28 14:12:44+00:00,[],
4015,https://github.com/chris-chu-7/computer.git,2019-11-11 00:10:26+00:00,Experimental Computer for ECE 252: Introduction to Computer Architecture ,0,chris-chu-7/computer,220869018,SystemVerilog,computer,740,0,2021-05-10 20:18:37+00:00,[],
4016,https://github.com/arkhadem/ESL.git,2019-11-22 15:06:28+00:00,,0,arkhadem/ESL,223427780,SystemVerilog,ESL,538,0,2020-01-07 03:53:13+00:00,[],
4017,https://github.com/Jragon/sv_cpu.git,2019-11-20 18:04:37+00:00,"Simple cpu from D1 project, soton year 1 electronic engineering",0,Jragon/sv_cpu,222997586,SystemVerilog,sv_cpu,8,0,2019-11-20 18:08:09+00:00,[],
4018,https://github.com/abhijiths94/Ebike.git,2020-02-08 23:31:42+00:00,Ebike controller,0,abhijiths94/Ebike,239219500,SystemVerilog,Ebike,7676,0,2020-02-08 23:47:29+00:00,[],https://api.github.com/licenses/gpl-3.0
4019,https://github.com/TheAsianCow/ece3829_lab3.git,2020-02-12 22:41:31+00:00,,0,TheAsianCow/ece3829_lab3,240130374,SystemVerilog,ece3829_lab3,17728,0,2020-02-23 18:23:55+00:00,[],
4020,https://github.com/AustinFPGA/EducationalResources.git,2020-02-12 04:46:59+00:00,,0,AustinFPGA/EducationalResources,239929174,SystemVerilog,EducationalResources,7018,0,2020-07-14 03:04:54+00:00,[],
4021,https://github.com/evasilly/jtagBIST.git,2020-02-13 17:56:08+00:00,,0,evasilly/jtagBIST,240325771,SystemVerilog,jtagBIST,368,0,2020-03-27 16:09:51+00:00,[],
4022,https://github.com/hlpierce27/OTTERComplete.git,2019-11-27 23:42:00+00:00,,0,hlpierce27/OTTERComplete,224535300,SystemVerilog,OTTERComplete,23,0,2020-02-11 16:19:51+00:00,[],
4023,https://github.com/jerry-jho/ariane_local.git,2020-02-01 05:38:47+00:00,RTL of ariane risc-v cpu,0,jerry-jho/ariane_local,237568273,SystemVerilog,ariane_local,417,0,2020-02-10 01:23:02+00:00,[],https://api.github.com/licenses/gpl-3.0
4024,https://github.com/AleksandarKomazec/Final-Thesis.git,2019-11-17 12:14:04+00:00,It's my final thesis,0,AleksandarKomazec/Final-Thesis,222242814,SystemVerilog,Final-Thesis,2216,0,2019-11-18 15:40:00+00:00,[],
4025,https://github.com/GeraGalindo/pipelineMicroProcessor.git,2019-11-18 23:32:16+00:00,System Verilog pipelined micro processor,0,GeraGalindo/pipelineMicroProcessor,222565429,SystemVerilog,pipelineMicroProcessor,455,0,2020-04-29 20:37:21+00:00,[],
4026,https://github.com/luckyganesh/hd_bootcamp.git,2019-12-11 06:41:53+00:00,,0,luckyganesh/hd_bootcamp,227295079,SystemVerilog,hd_bootcamp,19,0,2022-09-15 06:07:11+00:00,[],
4027,https://github.com/jayaramanrp/system-verilog.git,2020-01-21 14:37:16+00:00,simple system verilog files,0,jayaramanrp/system-verilog,235363508,SystemVerilog,system-verilog,7,0,2020-01-22 14:26:10+00:00,"['verilog-code', 'systemverilog', 'constraints']",
4028,https://github.com/adeemadil/CellularAutomata.git,2019-12-29 20:00:41+00:00,This is a game based on Cellular automation,0,adeemadil/CellularAutomata,230797239,SystemVerilog,CellularAutomata,951,0,2020-01-20 21:15:24+00:00,[],
4029,https://github.com/tejakunchavenkata/utils.git,2019-10-11 14:02:28+00:00,General Linux utilities,0,tejakunchavenkata/utils,214451269,SystemVerilog,utils,97212,0,2020-04-25 13:42:23+00:00,[],
4030,https://github.com/newsatit/ECE551.git,2019-11-14 23:28:54+00:00,,0,newsatit/ECE551,221804952,SystemVerilog,ECE551,7092,0,2023-01-28 15:19:19+00:00,[],
4031,https://github.com/0806gcx/FPGAgame.git,2019-11-25 12:40:45+00:00,,0,0806gcx/FPGAgame,223945867,SystemVerilog,FPGAgame,1404,0,2019-11-25 12:45:01+00:00,[],
4032,https://github.com/qiweiii-git/qwi03_qwic51.git,2020-02-06 12:44:50+00:00,,0,qiweiii-git/qwi03_qwic51,238686985,SystemVerilog,qwi03_qwic51,2303,0,2020-02-06 12:55:23+00:00,[],
4033,https://github.com/jerry-jho/ariane_simenv.git,2020-02-01 11:42:22+00:00,A very fast simulation of ariane risc-v cpu ,1,jerry-jho/ariane_simenv,237606233,SystemVerilog,ariane_simenv,117,0,2020-02-12 06:54:34+00:00,[],https://api.github.com/licenses/gpl-3.0
4034,https://github.com/TylerMaxwell0713/ELC2137Haygood.git,2020-01-14 20:24:00+00:00,,0,TylerMaxwell0713/ELC2137Haygood,233928644,SystemVerilog,ELC2137Haygood,18,0,2020-01-14 20:39:09+00:00,[],
4035,https://github.com/pavankrissh/Ripple-Carry-Adder.git,2019-10-11 15:49:48+00:00,This project is to implement the behavioral model  and verify the functionality of the ripple carry adder using System Verilog,0,pavankrissh/Ripple-Carry-Adder,214474997,SystemVerilog,Ripple-Carry-Adder,1,0,2019-10-11 16:09:35+00:00,[],
4036,https://github.com/jeanpaultarot/swerv.git,2019-10-15 10:44:39+00:00,Extensions for SweRV RISC-V CoreTM 1.3 from Western Digital,0,jeanpaultarot/swerv,215273869,SystemVerilog,swerv,3183,0,2019-12-19 15:00:33+00:00,[],https://api.github.com/licenses/apache-2.0
4037,https://github.com/seban90/uvm.git,2020-01-18 07:03:35+00:00,uvm_environment,0,seban90/uvm,234695681,SystemVerilog,uvm,38,0,2020-08-27 00:13:41+00:00,[],
4038,https://github.com/artme-uni/Tasks.git,2020-01-30 05:13:07+00:00,Verilog / Labs,0,artme-uni/Tasks,237143915,SystemVerilog,Tasks,7,0,2020-01-30 06:24:50+00:00,[],
4039,https://github.com/loctran107/Tug-of-War-FPGA.git,2019-12-01 01:09:13+00:00,,0,loctran107/Tug-of-War-FPGA,225090112,SystemVerilog,Tug-of-War-FPGA,297,0,2019-12-01 01:11:28+00:00,[],
4040,https://github.com/ameer117/RISCV-Processor.git,2019-11-30 03:06:11+00:00,A pipelined RISC-V processor,0,ameer117/RISCV-Processor,224952204,SystemVerilog,RISCV-Processor,22,0,2019-11-30 03:07:28+00:00,[],
4041,https://github.com/laoleee/Learn_SystemVerilog.git,2019-11-03 11:12:53+00:00,,0,laoleee/Learn_SystemVerilog,219288537,SystemVerilog,Learn_SystemVerilog,6,0,2019-11-03 11:13:59+00:00,[],
4042,https://github.com/domazetov/UVM.git,2019-10-05 19:06:47+00:00,,0,domazetov/UVM,213056188,SystemVerilog,UVM,58,0,2019-10-15 03:35:00+00:00,[],
4043,https://github.com/SenaKorkut/Digital-Design-Project.git,2019-12-11 18:08:17+00:00,,0,SenaKorkut/Digital-Design-Project,227429879,SystemVerilog,Digital-Design-Project,469,0,2019-12-11 18:11:48+00:00,[],
4044,https://github.com/JohnMushatt/FPGA-based-VGA-Controller.git,2019-12-10 21:08:51+00:00,,0,JohnMushatt/FPGA-based-VGA-Controller,227216071,SystemVerilog,FPGA-based-VGA-Controller,1713,0,2019-12-16 07:23:51+00:00,[],
4045,https://github.com/jaywonger/cme435_project.git,2019-12-10 22:52:19+00:00,,0,jaywonger/cme435_project,227230775,SystemVerilog,cme435_project,74,0,2021-06-29 18:08:15+00:00,[],
4046,https://github.com/atsmith3/ece411.git,2019-12-05 01:25:28+00:00,,0,atsmith3/ece411,225989635,SystemVerilog,ece411,14740,0,2019-12-05 01:31:02+00:00,[],
4047,https://github.com/Chlorophytus/vi-exo.git,2020-01-12 15:22:52+00:00,Vi Exo Rasterizer,0,Chlorophytus/vi-exo,233413142,SystemVerilog,vi-exo,16,0,2020-01-20 21:02:47+00:00,[],https://api.github.com/licenses/mit
4048,https://github.com/ghr12345/bianyiqi.git,2020-01-12 12:00:16+00:00,,0,ghr12345/bianyiqi,233385478,SystemVerilog,bianyiqi,8299,0,2021-02-17 10:48:39+00:00,[],
4049,https://github.com/zfling/uvm_test.git,2019-11-17 05:35:18+00:00,uvm vcs,0,zfling/uvm_test,222202326,SystemVerilog,uvm_test,2464,0,2019-11-17 13:27:37+00:00,[],
4050,https://github.com/usmolars/rv_ooo.git,2019-11-19 19:37:05+00:00,,0,usmolars/rv_ooo,222774645,SystemVerilog,rv_ooo,18,0,2019-11-19 22:13:50+00:00,[],
4051,https://github.com/AyanaMussabayeva/FPGA-Verilog.git,2019-10-21 09:13:48+00:00,Some circuits Verilog implementation for FPGA design ,0,AyanaMussabayeva/FPGA-Verilog,216526021,SystemVerilog,FPGA-Verilog,3,0,2019-10-21 09:15:25+00:00,[],
4052,https://github.com/vtorkalo/VerilogTestProject.git,2020-01-03 12:23:45+00:00,Test project for work with FPGA and Verilog,0,vtorkalo/VerilogTestProject,231583016,SystemVerilog,VerilogTestProject,106,0,2020-02-23 16:13:18+00:00,[],
4053,https://github.com/CPUEX2019-GROUP4/core.git,2019-11-12 06:22:55+00:00,コア係のコードです,0,CPUEX2019-GROUP4/core,221145276,SystemVerilog,core,710,0,2019-12-03 09:32:16+00:00,[],
4054,https://github.com/adhammamdouh/MIPS_Micro-Architecture.git,2019-12-23 01:41:39+00:00,MIPS Micro Architecture,0,adhammamdouh/MIPS_Micro-Architecture,229656320,SystemVerilog,MIPS_Micro-Architecture,683,0,2020-02-09 21:38:42+00:00,[],
4055,https://github.com/BobinShihJosh/ECE-469-Computer-Architecture.git,2019-10-22 23:16:04+00:00,,0,BobinShihJosh/ECE-469-Computer-Architecture,216926517,SystemVerilog,ECE-469-Computer-Architecture,14359,0,2020-02-10 07:31:04+00:00,[],
4056,https://github.com/rag1404/Magic-Square-.git,2019-11-04 06:34:59+00:00,Magic Square in System Verilog ,0,rag1404/Magic-Square-,219433421,SystemVerilog,Magic-Square-,6,0,2020-12-26 18:12:38+00:00,[],
4057,https://github.com/endroca/arm-processor.git,2019-11-26 21:44:27+00:00,,0,endroca/arm-processor,224291509,SystemVerilog,arm-processor,3074,0,2019-11-26 21:44:46+00:00,[],
4058,https://github.com/utkukalkanli/MIPS.git,2020-02-02 17:11:15+00:00,Implementation of the MIPS Processor with Pipelined Microarchitecture,0,utkukalkanli/MIPS,237805895,SystemVerilog,MIPS,337,0,2020-02-02 17:20:15+00:00,[],
4059,https://github.com/muaadh-hasan/Computer-Architecture-and-Organization.git,2020-02-05 00:21:21+00:00,SystemVerilog and Assembly language,0,muaadh-hasan/Computer-Architecture-and-Organization,238334937,SystemVerilog,Computer-Architecture-and-Organization,42531,0,2020-02-05 00:28:37+00:00,[],
4060,https://github.com/HaogeL/MIPSCPU.git,2020-01-27 08:16:01+00:00,Classic CPU pipeline implementation. ISA:  MIPS32Rel1,0,HaogeL/MIPSCPU,236445212,SystemVerilog,MIPSCPU,6086,0,2020-01-30 21:54:18+00:00,[],
4061,https://github.com/dudublad/ECE342.git,2020-01-20 22:37:19+00:00,,0,dudublad/ECE342,235212112,SystemVerilog,ECE342,12,0,2020-01-20 23:24:04+00:00,[],
4062,https://github.com/yxccxxx/NRM.git,2020-01-31 02:31:59+00:00,Naive RISC Machines,0,yxccxxx/NRM,237346570,SystemVerilog,NRM,3815,0,2021-09-05 06:06:35+00:00,[],
4063,https://github.com/ignalauret/ARMv8.git,2019-11-04 07:55:56+00:00,,0,ignalauret/ARMv8,219446546,SystemVerilog,ARMv8,8097,0,2019-11-20 04:46:51+00:00,[],
4064,https://github.com/mertepsileli/System-Verilog-Project.git,2019-10-23 15:49:03+00:00,,0,mertepsileli/System-Verilog-Project,217095695,SystemVerilog,System-Verilog-Project,774,0,2019-10-23 15:57:59+00:00,[],
4065,https://github.com/tonmoy18/tamarisc.git,2019-12-02 04:13:34+00:00,,0,tonmoy18/tamarisc,225283513,SystemVerilog,tamarisc,526,0,2020-03-26 15:14:51+00:00,[],https://api.github.com/licenses/mit
4066,https://github.com/Jeffrey-Keyser/AudioEqualizer.git,2019-12-03 02:46:28+00:00,An Audio Equalizer created in System Verilog. Final Project for ECE 551,0,Jeffrey-Keyser/AudioEqualizer,225515737,SystemVerilog,AudioEqualizer,1065,0,2020-02-05 19:58:26+00:00,[],
4067,https://github.com/nishantingole92/RISC-V-RTPG.git,2019-10-15 04:51:57+00:00,,0,nishantingole92/RISC-V-RTPG,215209481,SystemVerilog,RISC-V-RTPG,5380,0,2019-10-15 09:21:38+00:00,[],
4068,https://github.com/sterrettm/ECE-271-Design-Project.git,2019-11-26 02:28:11+00:00,,1,sterrettm/ECE-271-Design-Project,224084618,SystemVerilog,ECE-271-Design-Project,60396,0,2019-12-07 06:28:20+00:00,[],
4069,https://github.com/wangyipengw1p/Verilog-SystemVerilog-Xamples.git,2019-12-25 06:59:06+00:00,A collection of useful modules for Verilog and Systemverilog,0,wangyipengw1p/Verilog-SystemVerilog-Xamples,230057377,SystemVerilog,Verilog-SystemVerilog-Xamples,2,0,2019-12-26 05:39:24+00:00,[],
4070,https://github.com/eschul07/EricSchulte-JustForFun.git,2020-01-01 00:11:10+00:00,A collection of personal projects I like to work on when I have spare time.,0,eschul07/EricSchulte-JustForFun,231158980,SystemVerilog,EricSchulte-JustForFun,44,0,2020-01-01 21:32:02+00:00,[],
4071,https://github.com/qzshi97/Ethernet_10g.git,2019-12-27 13:05:27+00:00,Ethernet_10g,0,qzshi97/Ethernet_10g,230445486,SystemVerilog,Ethernet_10g,53579,0,2019-12-27 13:26:16+00:00,[],
4072,https://github.com/EngineerNV/FPGA_Projects.git,2019-12-28 05:54:35+00:00,Here is sample work of the Digital Design projects I have done using Quartes for Synthesizing and ModelSim for Test Benches and Simulation on a FPGA Cadet Board ,0,EngineerNV/FPGA_Projects,230565534,SystemVerilog,FPGA_Projects,2456,0,2019-12-29 10:00:19+00:00,[],
4073,https://github.com/antushengcui/interlaken.git,2020-01-06 08:01:51+00:00,A communication protocol,0,antushengcui/interlaken,232052685,SystemVerilog,interlaken,23,0,2020-01-06 08:56:32+00:00,[],
4074,https://github.com/zarnitsaa/bit_population_counter.git,2019-11-06 00:26:44+00:00,,0,zarnitsaa/bit_population_counter,219876933,SystemVerilog,bit_population_counter,301,0,2020-04-05 10:10:01+00:00,[],
4075,https://github.com/Aimini/maips.git,2019-11-07 11:46:21+00:00,mipsr2 cpu with SystemVerilog,0,Aimini/maips,220224449,SystemVerilog,maips,1733,0,2019-11-16 10:33:38+00:00,[],
4076,https://github.com/Aye10032/PCDemo.git,2019-11-08 07:10:25+00:00,2019年全国大学生FPGA创新设计邀请赛相关程序,0,Aye10032/PCDemo,220407966,SystemVerilog,PCDemo,112607,0,2020-11-28 08:24:20+00:00,[],
4077,https://github.com/chadthom7/lab_ri.git,2019-11-07 21:36:12+00:00,,0,chadthom7/lab_ri,220333284,SystemVerilog,lab_ri,537,0,2019-11-21 03:20:00+00:00,[],
4078,https://github.com/snyderth/LED_FPGA.git,2019-11-19 20:52:37+00:00,,0,snyderth/LED_FPGA,222787515,SystemVerilog,LED_FPGA,17,0,2019-11-19 20:54:32+00:00,[],
4079,https://github.com/arq19/pipelined-processor.git,2019-10-30 14:05:13+00:00,,0,arq19/pipelined-processor,218541465,SystemVerilog,pipelined-processor,1349,0,2019-11-08 20:21:24+00:00,[],
4080,https://github.com/freddyD77/Pipelined-SIMD-Unit.git,2020-01-13 18:44:13+00:00,4 stage pipelined processor,0,freddyD77/Pipelined-SIMD-Unit,233667626,SystemVerilog,Pipelined-SIMD-Unit,12,0,2020-01-14 17:31:40+00:00,[],
4081,https://github.com/LeoStaglia/FSQRT_BFLOAT16.git,2020-01-24 09:34:33+00:00,This is the repository for the Embedded Systems project 2019/20. The aim is to design an hardware unit able to compute the square root of a number given in BFloat16 representation standard by applying a variant of the Goldschmidt algorithm for the division.,0,LeoStaglia/FSQRT_BFLOAT16,235974440,SystemVerilog,FSQRT_BFLOAT16,938,0,2020-05-18 12:38:02+00:00,[],
4082,https://github.com/chinnikrishna/conveng1.git,2020-02-13 22:27:15+00:00,A very simple convolution engine,0,chinnikrishna/conveng1,240379134,SystemVerilog,conveng1,3,0,2020-02-14 06:17:07+00:00,[],
4083,https://github.com/TL-X-org/tlv_lib.git,2020-02-06 21:19:24+00:00,General-purpose TL-Verilog libraries.,2,TL-X-org/tlv_lib,238786823,SystemVerilog,tlv_lib,20,0,2022-11-01 21:12:59+00:00,[],https://api.github.com/licenses/bsd-3-clause
4084,https://github.com/pearlswan/Five-Stage-Pipelined-CPU.git,2020-02-04 23:56:47+00:00,Implementation of five stage pipelined ARM CPU in system verilog,0,pearlswan/Five-Stage-Pipelined-CPU,238331816,SystemVerilog,Five-Stage-Pipelined-CPU,14,0,2020-02-05 00:04:07+00:00,[],
4085,https://github.com/GrantGsell/FPGA_Puzzle_Alarm_Clock.git,2020-02-04 17:50:27+00:00,Repo for FPGA based puzzle alarm clock,0,GrantGsell/FPGA_Puzzle_Alarm_Clock,238268681,SystemVerilog,FPGA_Puzzle_Alarm_Clock,89,0,2020-02-04 19:06:47+00:00,[],
4086,https://github.com/KelvinVale/wrapper_systemc_2_sv.git,2020-02-11 18:15:51+00:00,This code uses a SystemC and RTL block in the same top simulation file.,3,KelvinVale/wrapper_systemc_2_sv,239831932,SystemVerilog,wrapper_systemc_2_sv,4,0,2020-02-11 18:18:31+00:00,[],
4087,https://github.com/mdlemay/candy-dispenser-c10lp.git,2019-10-13 04:38:13+00:00,Candy dispenser powered by Intel(R) Cyclone(R) 10 LP FPGA Development Kit,0,mdlemay/candy-dispenser-c10lp,214761302,SystemVerilog,candy-dispenser-c10lp,10,0,2020-07-04 16:44:27+00:00,[],https://api.github.com/licenses/mit
4088,https://github.com/srikumar25/yapp.git,2019-10-14 16:30:25+00:00,,0,srikumar25/yapp,215093329,SystemVerilog,yapp,117,0,2019-10-14 16:30:46+00:00,[],
4089,https://github.com/nguyenquanicd/Aes128.git,2019-10-03 14:53:59+00:00,AES-128 cipher/encrypt and decipher/decrypt,2,nguyenquanicd/Aes128,212606373,SystemVerilog,Aes128,26,0,2019-10-17 15:15:04+00:00,[],
4090,https://github.com/CPUEX2019-GROUP4/fpu.git,2019-10-08 08:34:16+00:00,,1,CPUEX2019-GROUP4/fpu,213589894,SystemVerilog,fpu,248,0,2019-12-10 07:17:35+00:00,[],
4091,https://github.com/SirMaximilian/Systolic-Array-Matrix-Multipler.git,2019-10-06 19:22:54+00:00,A Matrix Multipier implimneted on a Systolic Array,0,SirMaximilian/Systolic-Array-Matrix-Multipler,213229532,SystemVerilog,Systolic-Array-Matrix-Multipler,6,0,2021-12-07 18:44:16+00:00,[],
4092,https://github.com/AzianEquation/Embedded-Systems.git,2019-10-29 16:20:45+00:00,Bare metal C coding using an Altera FPGA and SystemVerilog hardware design,0,AzianEquation/Embedded-Systems,218331489,SystemVerilog,Embedded-Systems,9,0,2019-10-29 16:35:10+00:00,[],
4093,https://github.com/nogigen/EvacuationElevatorSystem.git,2019-10-27 15:45:11+00:00,Evacuation Elevator System,0,nogigen/EvacuationElevatorSystem,217877517,SystemVerilog,EvacuationElevatorSystem,28,0,2019-10-27 15:50:13+00:00,[],
4094,https://github.com/nimish15shah/DDIS_2019.git,2019-11-01 10:11:39+00:00,Repository for exercise sessions of DDIS course 2019-2020,0,nimish15shah/DDIS_2019,218961923,SystemVerilog,DDIS_2019,2,0,2019-11-01 12:29:55+00:00,[],
4095,https://github.com/vvan7/extra-credit-project-cpu-design-in-SystemVerilog-.git,2020-02-03 20:40:47+00:00,extra credit project for computer architecture class,0,vvan7/extra-credit-project-cpu-design-in-SystemVerilog-,238057667,SystemVerilog,extra-credit-project-cpu-design-in-SystemVerilog-,3,0,2022-07-17 06:10:28+00:00,[],
4096,https://github.com/rsgc-bagga-p/ECE342-Lab.git,2020-02-08 02:36:28+00:00,ECE342 Computer Hardware Lab Work,0,rsgc-bagga-p/ECE342-Lab,239058009,,ECE342-Lab,2445,0,2021-01-18 02:50:41+00:00,[],
4097,https://github.com/HelenShu/CSE141L.git,2019-10-24 18:21:52+00:00,,0,HelenShu/CSE141L,217365906,SystemVerilog,CSE141L,56,0,2019-10-24 18:24:21+00:00,[],
4098,https://github.com/wangyipengw1p/diff_NN_demo.git,2019-11-27 15:12:06+00:00,,0,wangyipengw1p/diff_NN_demo,224457659,SystemVerilog,diff_NN_demo,510,0,2020-03-25 15:26:14+00:00,[],
4099,https://github.com/itoooo/TD4.git,2019-11-29 08:01:33+00:00,Verilog implementation for TD4,0,itoooo/TD4,224805627,SystemVerilog,TD4,3,0,2019-11-29 08:04:56+00:00,[],
4100,https://github.com/toms74209200/systemverilog_package_sample.git,2020-01-09 06:39:01+00:00,SystemVerilog testbench package sample,0,toms74209200/systemverilog_package_sample,232740357,SystemVerilog,systemverilog_package_sample,2,0,2020-01-09 06:39:50+00:00,[],https://api.github.com/licenses/mit
4101,https://github.com/snagiri/CSE240D_proj.git,2019-12-03 22:44:55+00:00,,1,snagiri/CSE240D_proj,225731857,SystemVerilog,CSE240D_proj,23,0,2019-12-14 06:19:11+00:00,[],
4102,https://github.com/melt-umn/ableC-tutorials.git,2019-12-01 00:24:28+00:00,Tutorial examples and explanations for ableC,0,melt-umn/ableC-tutorials,225086979,SystemVerilog,ableC-tutorials,92,0,2022-01-19 02:28:16+00:00,[],https://api.github.com/licenses/lgpl-3.0
4103,https://github.com/ohares0/Final-Project-Digital-Systems.git,2019-12-20 19:15:55+00:00,,0,ohares0/Final-Project-Digital-Systems,229322633,SystemVerilog,Final-Project-Digital-Systems,12,0,2019-12-20 19:17:05+00:00,[],
4104,https://github.com/pestalella/MyLittleProcessor.git,2019-12-27 11:31:13+00:00,,0,pestalella/MyLittleProcessor,230432392,SystemVerilog,MyLittleProcessor,347,0,2022-01-02 11:28:07+00:00,[],
4105,https://github.com/gilad29/Otter_cpe_333.git,2020-01-23 19:12:24+00:00,,0,gilad29/Otter_cpe_333,235867129,SystemVerilog,Otter_cpe_333,35,0,2020-01-23 22:22:20+00:00,[],
4106,https://github.com/ndevrio/isc_micarray.git,2019-11-19 16:32:43+00:00,Microphone array project for EECS 473 and ISC Lab,0,ndevrio/isc_micarray,222741135,SystemVerilog,isc_micarray,125099,0,2019-12-11 04:52:18+00:00,[],
4107,https://github.com/r8prasad/InterviewTasks.git,2019-11-11 17:23:35+00:00,,0,r8prasad/InterviewTasks,221033254,SystemVerilog,InterviewTasks,14,0,2019-11-11 17:39:34+00:00,[],
4108,https://github.com/ahmed-dardery/MIPS_Micro-Architecture.git,2020-02-09 21:31:34+00:00,MIPS Micro Architecture,0,ahmed-dardery/MIPS_Micro-Architecture,239377489,,MIPS_Micro-Architecture,683,0,2020-02-09 21:47:58+00:00,[],
4109,https://github.com/PacoReinaCampo/SoC-OR1K.git,2020-02-11 02:56:44+00:00,System on Chip with OpenRISC-32 / OpenRISC-64,1,PacoReinaCampo/SoC-OR1K,239662908,SystemVerilog,SoC-OR1K,28620,0,2023-03-31 16:25:50+00:00,"['openrisc', 'misd', 'simd', 'soc']",https://api.github.com/licenses/mit
4111,https://github.com/jryebread/testReal.git,2019-10-12 03:04:15+00:00,,1,jryebread/testReal,214567914,SystemVerilog,testReal,9,0,2019-10-12 03:05:06+00:00,[],
4112,https://github.com/Lenv12138/FPGA_Contest.git,2019-10-04 02:23:31+00:00,,0,Lenv12138/FPGA_Contest,212721017,SystemVerilog,FPGA_Contest,5338,0,2019-10-13 15:44:08+00:00,[],
4113,https://github.com/KelvinVale/Ral_Candy_Lovers.git,2019-10-23 13:48:01+00:00,,0,KelvinVale/Ral_Candy_Lovers,217068772,SystemVerilog,Ral_Candy_Lovers,10,0,2019-10-23 14:06:16+00:00,[],
4114,https://github.com/pvlkhm/verilog.git,2019-10-04 21:15:35+00:00,Verilog / SystemVerilog,0,pvlkhm/verilog,212903548,SystemVerilog,verilog,80,0,2021-05-29 18:43:09+00:00,[],
4115,https://github.com/nyakuo/risc-v_nyakuo-core.git,2019-10-15 15:30:24+00:00,RISC-V の CPU を自作していきたい,0,nyakuo/risc-v_nyakuo-core,215333432,SystemVerilog,risc-v_nyakuo-core,22,0,2019-12-09 11:28:56+00:00,[],
4116,https://github.com/xinyug2/FPGA_Verilog-Projects.git,2019-11-22 00:36:09+00:00,verilog projects,0,xinyug2/FPGA_Verilog-Projects,223291533,SystemVerilog,FPGA_Verilog-Projects,16897,0,2020-10-06 21:37:45+00:00,[],
4117,https://github.com/nekiicheb/fpga_solution_of_test_assignment.git,2020-01-07 16:46:30+00:00,A solution of test assignment from company,0,nekiicheb/fpga_solution_of_test_assignment,232370587,SystemVerilog,fpga_solution_of_test_assignment,485,0,2020-01-07 19:19:20+00:00,"['systemverilog', 'quartus', 'questasim']",
4118,https://github.com/Kartikaeya/Verilog-Stopwatch.git,2019-10-26 09:45:16+00:00,Structural code for Stopwatch in Verilog HDL,1,Kartikaeya/Verilog-Stopwatch,217687990,SystemVerilog,Verilog-Stopwatch,20,0,2019-10-26 10:38:31+00:00,[],
4119,https://github.com/gsaied/gp2020.git,2019-10-25 08:16:42+00:00,,0,gsaied/gp2020,217485942,SystemVerilog,gp2020,722751,0,2021-08-25 15:49:19+00:00,[],
4120,https://github.com/concavegit/elements.git,2020-01-13 12:09:02+00:00,Various explorations of computer architecture,0,concavegit/elements,233587165,SystemVerilog,elements,57,0,2020-01-13 12:10:15+00:00,[],
4121,https://github.com/umityigitbsrn/cs223-cellular-automata-project.git,2020-01-19 23:33:29+00:00,,0,umityigitbsrn/cs223-cellular-automata-project,234983884,SystemVerilog,cs223-cellular-automata-project,3467,0,2023-05-26 00:24:55+00:00,[],
4122,https://github.com/Chlorophytus/leopard-psg.git,2019-12-19 22:54:19+00:00,Sample-based sound generator,0,Chlorophytus/leopard-psg,229151498,SystemVerilog,leopard-psg,5,0,2019-12-20 07:51:41+00:00,[],https://api.github.com/licenses/mit
4123,https://github.com/XunZhiyang/RISC-V-CPU.git,2019-11-30 13:27:37+00:00,A RISCV CPU for course Computer Architecture 2019,0,XunZhiyang/RISC-V-CPU,225016424,SystemVerilog,RISC-V-CPU,9325,0,2021-07-06 10:15:51+00:00,[],
4124,https://github.com/hjeong13/ECE411_Processor.git,2019-12-13 03:25:26+00:00,,0,hjeong13/ECE411_Processor,227747510,SystemVerilog,ECE411_Processor,711,0,2019-12-13 03:25:49+00:00,[],
4125,https://github.com/davidchen6/uvm_apb_sram.git,2019-12-13 10:17:33+00:00,,1,davidchen6/uvm_apb_sram,227812581,SystemVerilog,uvm_apb_sram,479,0,2020-12-22 01:29:59+00:00,[],
4126,https://github.com/Scrawach/Day-of-year-calc.git,2020-01-25 19:38:27+00:00,This is my realization of day of year calculator without divide blocks. Only combinational logic.,0,Scrawach/Day-of-year-calc,236219932,SystemVerilog,Day-of-year-calc,8,0,2023-04-12 06:43:35+00:00,['rtl'],
4127,https://github.com/OmarSha3rawy/ALU-project.git,2020-02-11 04:04:07+00:00,As a part of Si-vision Digital verification interview process,0,OmarSha3rawy/ALU-project,239672450,SystemVerilog,ALU-project,1302,0,2020-02-12 02:54:44+00:00,[],
4128,https://github.com/adelmeleka/mips_pipeline.git,2020-02-07 11:30:50+00:00,Check 'Details.pdf' for Full description,0,adelmeleka/mips_pipeline,238906935,SystemVerilog,mips_pipeline,886,0,2020-02-07 11:32:05+00:00,[],
4129,https://github.com/alfredangeline/Project-GS.git,2020-02-02 04:17:49+00:00,,0,alfredangeline/Project-GS,237717184,SystemVerilog,Project-GS,41714,0,2020-02-02 04:47:45+00:00,[],
4130,https://github.com/anepom3/ece385git.git,2020-02-10 05:17:04+00:00,,0,anepom3/ece385git,239433385,SystemVerilog,ece385git,40306,0,2020-05-05 07:17:21+00:00,[],
4131,https://github.com/AnnaDarda/Integrated-Circuits-3rd-Lab.git,2019-11-17 20:08:52+00:00,,0,AnnaDarda/Integrated-Circuits-3rd-Lab,222305286,SystemVerilog,Integrated-Circuits-3rd-Lab,1,0,2023-08-23 13:14:10+00:00,[],
4132,https://github.com/talhasen123/Pipeline-Simulator.git,2019-11-08 08:08:15+00:00,A pipeline simulator made in SystemVerilog which supports the basic assembly instructions while adding couple new ones.,0,talhasen123/Pipeline-Simulator,220417880,SystemVerilog,Pipeline-Simulator,16,0,2019-11-08 08:19:39+00:00,[],
4133,https://github.com/107321021/final.git,2020-01-10 06:17:12+00:00,,0,107321021/final,232979236,SystemVerilog,final,21680,0,2020-01-10 06:47:18+00:00,[],
4134,https://github.com/IsaiahGrace/TIS-100.git,2020-01-10 18:58:24+00:00,A simple implementation of the TIS-100 architecture from the video game by Zachtronics,0,IsaiahGrace/TIS-100,233111862,SystemVerilog,TIS-100,11,0,2020-01-10 23:31:36+00:00,[],
4135,https://github.com/mhamurcu/Basic-Computer.git,2020-02-02 08:50:12+00:00,"Implementation of a basic computer from mano's book on verilog, systemverilog",0,mhamurcu/Basic-Computer,237743176,SystemVerilog,Basic-Computer,5,0,2020-02-02 08:52:01+00:00,[],
4136,https://github.com/AlfonsoUSM/Alarm_clk.git,2019-10-18 13:37:49+00:00,,0,AlfonsoUSM/Alarm_clk,216032129,SystemVerilog,Alarm_clk,56,0,2020-02-24 19:32:51+00:00,[],
4137,https://github.com/sethrohrbach/ece571_hw1.git,2020-01-10 19:56:22+00:00,,0,sethrohrbach/ece571_hw1,233120627,SystemVerilog,ece571_hw1,1002,0,2020-01-14 00:50:28+00:00,[],
4138,https://github.com/bitglitcher/d16i.git,2020-01-15 12:04:02+00:00,Verilog D16i Core ,0,bitglitcher/d16i,234071650,SystemVerilog,d16i,42,0,2022-01-10 16:09:39+00:00,[],https://api.github.com/licenses/gpl-3.0
4139,https://github.com/deanwhyone/18500-Capstone-S20.git,2020-01-16 02:44:50+00:00,Multiplayer Tetris on FPGAs,0,deanwhyone/18500-Capstone-S20,234219943,SystemVerilog,18500-Capstone-S20,5590,0,2020-05-11 15:43:32+00:00,[],https://api.github.com/licenses/gpl-3.0
4140,https://github.com/ahmed-dardery/ALU-in-HDL.git,2019-11-22 22:49:05+00:00,ALU assignment for Computer Architecture course.,0,ahmed-dardery/ALU-in-HDL,223498961,SystemVerilog,ALU-in-HDL,613,0,2020-02-09 21:23:41+00:00,[],
4141,https://github.com/jackwma/Bresenham-s-line-algorithm.git,2019-12-19 04:37:34+00:00,Implementation of Bresenham's line algorithm,0,jackwma/Bresenham-s-line-algorithm,228975860,SystemVerilog,Bresenham-s-line-algorithm,3,0,2019-12-19 04:40:44+00:00,[],
4142,https://github.com/tazimmadre/vlsi.git,2019-12-22 05:36:54+00:00,,0,tazimmadre/vlsi,229523348,SystemVerilog,vlsi,5,0,2019-12-22 05:40:21+00:00,[],
4143,https://github.com/ethanahlquist/MyMCU.git,2020-02-09 02:36:38+00:00,,0,ethanahlquist/MyMCU,239235761,SystemVerilog,MyMCU,15,0,2020-02-11 00:00:33+00:00,[],
4144,https://github.com/JuniorMelndes/UVM_ambiente_registradores.git,2019-10-23 15:04:20+00:00,Ambiente de verificação para a operação entre dois registradores (100%),0,JuniorMelndes/UVM_ambiente_registradores,217086050,SystemVerilog,UVM_ambiente_registradores,26149,0,2021-05-26 23:25:30+00:00,[],
4145,https://github.com/Pedenite/Calculadora-Digital-com-Banco-de-Registradores.git,2019-12-10 16:40:38+00:00,Projeto final de Circuitos Lógicos - UnB - 2019/1,0,Pedenite/Calculadora-Digital-com-Banco-de-Registradores,227168915,SystemVerilog,Calculadora-Digital-com-Banco-de-Registradores,3125,0,2019-12-10 16:54:23+00:00,[],
4146,https://github.com/michmart98/arbiter.git,2019-12-03 15:38:10+00:00,,0,michmart98/arbiter,225655431,SystemVerilog,arbiter,4,0,2019-12-03 15:38:58+00:00,[],
4147,https://github.com/Vincentzhang-dv/sv-add32.git,2019-12-31 07:37:03+00:00,This is simple example of add32 testbench,0,Vincentzhang-dv/sv-add32,231048310,SystemVerilog,sv-add32,21,0,2019-12-31 08:11:47+00:00,[],
4148,https://github.com/Szpila123/DigitalLogic_exercises.git,2019-11-13 11:36:08+00:00,Logic circuits written in system verilog,0,Szpila123/DigitalLogic_exercises,221444912,SystemVerilog,DigitalLogic_exercises,7,0,2023-01-28 13:39:21+00:00,[],
4149,https://github.com/whkkkkkkc/SystemVerilog.git,2019-11-15 05:35:34+00:00,labs for learning System Verilog,0,whkkkkkkc/SystemVerilog,221851533,SystemVerilog,SystemVerilog,5,0,2020-05-17 12:36:51+00:00,[],
4150,https://github.com/xiewenzhao/STP_DLA.git,2019-10-06 07:15:37+00:00,Wenzhao's code backup,0,xiewenzhao/STP_DLA,213124355,SystemVerilog,STP_DLA,29,0,2019-10-25 11:48:47+00:00,[],
4151,https://github.com/Alexz1008/CSE141L.git,2019-10-30 03:02:13+00:00,,0,Alexz1008/CSE141L,218431862,SystemVerilog,CSE141L,2311,0,2019-12-12 23:26:28+00:00,[],
4152,https://github.com/germancq/hdl_cores.git,2019-12-04 12:42:36+00:00,,0,germancq/hdl_cores,225864859,SystemVerilog,hdl_cores,19,0,2020-02-04 12:29:31+00:00,[],
4153,https://github.com/seymbra/help.git,2019-12-07 04:01:39+00:00,,0,seymbra/help,226452923,SystemVerilog,help,16,0,2019-12-07 04:18:09+00:00,[],
4154,https://github.com/Fater66/AHD_final-Projecg_yf1334.git,2019-11-14 19:02:08+00:00,,1,Fater66/AHD_final-Projecg_yf1334,221767286,SystemVerilog,AHD_final-Projecg_yf1334,4217,0,2019-12-10 21:28:19+00:00,[],
4155,https://github.com/Thiagoct/uvm_alu.git,2019-12-08 20:41:49+00:00,,1,Thiagoct/uvm_alu,226728666,SystemVerilog,uvm_alu,25,0,2019-12-15 17:54:19+00:00,[],https://api.github.com/licenses/mit
4156,https://github.com/skudari/CSE141L.git,2019-11-23 21:31:16+00:00,,0,skudari/CSE141L,223655764,SystemVerilog,CSE141L,50,0,2019-12-11 18:54:28+00:00,[],
4157,https://github.com/EmiSancho/PS2-Driver.git,2019-11-20 01:23:23+00:00,,0,EmiSancho/PS2-Driver,222823445,SystemVerilog,PS2-Driver,2,0,2019-11-22 01:40:09+00:00,[],
4158,https://github.com/sdanthinne/OTTER_Pipeline.git,2019-11-20 19:39:45+00:00,it is now pipelined. Verilog source only.,0,sdanthinne/OTTER_Pipeline,223013457,SystemVerilog,OTTER_Pipeline,11709,0,2019-12-06 21:58:44+00:00,[],
4159,https://github.com/liutongxue123/ubuntu_git_test.git,2020-01-02 15:12:32+00:00,,0,liutongxue123/ubuntu_git_test,231405998,SystemVerilog,ubuntu_git_test,0,0,2020-01-02 15:16:07+00:00,[],
4160,https://github.com/alirezabayatmk/Simple_CPU.git,2019-12-28 09:12:15+00:00,,0,alirezabayatmk/Simple_CPU,230586469,SystemVerilog,Simple_CPU,22,0,2020-01-05 09:56:22+00:00,[],
4161,https://github.com/liutongxue123/RISCV_SCA_NXP.git,2020-01-06 05:49:01+00:00,,0,liutongxue123/RISCV_SCA_NXP,232032974,SystemVerilog,RISCV_SCA_NXP,57,0,2020-01-06 06:05:05+00:00,[],
4162,https://github.com/transfer-learning/uart_ihex.git,2020-01-14 15:44:38+00:00,,0,transfer-learning/uart_ihex,233876029,SystemVerilog,uart_ihex,185,0,2020-01-15 19:50:13+00:00,[],
4163,https://github.com/Sean548/ece385FinalProject.git,2019-11-24 20:21:16+00:00,First level of mario written in system verilog,0,Sean548/ece385FinalProject,223804691,SystemVerilog,ece385FinalProject,154,0,2022-11-10 00:38:53+00:00,[],
4164,https://github.com/michmart98/counter-ex5-integrated-circuit-.git,2019-11-13 09:33:59+00:00,,0,michmart98/counter-ex5-integrated-circuit-,221422514,SystemVerilog,counter-ex5-integrated-circuit-,1,0,2019-11-20 12:52:09+00:00,[],
4165,https://github.com/anushahkandula/ece385.git,2020-02-06 19:56:22+00:00,,0,anushahkandula/ece385,238772343,SystemVerilog,ece385,44,0,2020-03-04 05:09:50+00:00,[],
4166,https://github.com/hope0414/ECE745_FINAL.git,2020-02-13 03:45:06+00:00,,0,hope0414/ECE745_FINAL,240170945,SystemVerilog,ECE745_FINAL,23,0,2020-02-13 03:47:53+00:00,[],
4167,https://github.com/hope0414/UVM.git,2020-02-13 03:39:45+00:00,,0,hope0414/UVM,240170267,SystemVerilog,UVM,50,0,2020-02-13 03:44:08+00:00,[],
4168,https://github.com/shouyuOC/ThxProcessor.git,2019-11-21 17:51:41+00:00,感謝しながらCPUを学ぶ,0,shouyuOC/ThxProcessor,223232049,SystemVerilog,ThxProcessor,10,0,2019-11-28 17:13:55+00:00,[],
4169,https://github.com/NosherwanA/UVM-Design-Verification.git,2019-10-27 16:45:38+00:00,UVM based verification of common RTL blocks,0,NosherwanA/UVM-Design-Verification,217885553,SystemVerilog,UVM-Design-Verification,13,0,2019-11-23 17:35:51+00:00,[],
4170,https://github.com/Dezzmeister/vector-multiplier.git,2019-10-07 03:29:04+00:00,Hardware design to multiply matrices (wip),0,Dezzmeister/vector-multiplier,213287360,SystemVerilog,vector-multiplier,22,0,2019-10-25 05:05:05+00:00,[],
4171,https://github.com/santigr17/VectorProcessor-Arqui2.git,2019-10-22 16:03:29+00:00,,1,santigr17/VectorProcessor-Arqui2,216854707,SystemVerilog,VectorProcessor-Arqui2,440,0,2019-10-25 10:14:13+00:00,[],
4172,https://github.com/liubryan4/eecs498-sw.git,2019-11-26 07:13:41+00:00,,0,liubryan4/eecs498-sw,224126434,SystemVerilog,eecs498-sw,3331,0,2019-11-27 06:17:55+00:00,[],
4173,https://github.com/GiovanniBru/ADDAC.git,2019-11-27 22:24:17+00:00,,0,GiovanniBru/ADDAC,224526980,SystemVerilog,ADDAC,655,0,2019-11-28 06:19:10+00:00,[],
4174,https://github.com/twentworth2/ECE551FinalProject.git,2019-12-06 16:15:17+00:00,,0,twentworth2/ECE551FinalProject,226366282,SystemVerilog,ECE551FinalProject,3798,0,2020-05-13 03:37:35+00:00,[],
4175,https://github.com/zhengruohuang/revolve.git,2019-12-25 04:09:33+00:00,Out-of-order RISC-V core,1,zhengruohuang/revolve,230039381,SystemVerilog,revolve,27,0,2019-12-31 22:20:20+00:00,[],https://api.github.com/licenses/bsd-2-clause
4176,https://github.com/grant4001/Fibonacci_FPGA.git,2020-01-16 07:55:06+00:00,,0,grant4001/Fibonacci_FPGA,234265476,SystemVerilog,Fibonacci_FPGA,156,0,2020-01-16 08:03:02+00:00,[],
4177,https://github.com/RomanSablin/verilog-hex2dec.git,2020-02-10 15:05:04+00:00,"This module used for converting hex-data to ASCII-dec format. For print hex-values, for example over UART.",0,RomanSablin/verilog-hex2dec,239539658,SystemVerilog,verilog-hex2dec,57,0,2020-12-12 15:48:22+00:00,[],
4178,https://github.com/tamannarupani/ALUModule-UVMVerification.git,2019-12-13 18:45:20+00:00,UVM Verification of an ALU Module to learn and understand the basics of UVM,0,tamannarupani/ALUModule-UVMVerification,227901963,SystemVerilog,ALUModule-UVMVerification,6,0,2019-12-13 18:47:54+00:00,[],
4179,https://github.com/sthachils/sine_function.git,2019-12-02 21:38:58+00:00,Provides implementation of 16 decimal point accurate sine calculation of an angle. The value is counter-checked with Mathematica and C program.,0,sthachils/sine_function,225473733,SystemVerilog,sine_function,95,0,2019-12-02 22:20:34+00:00,[],
4180,https://github.com/thomaslenzi/cern.git,2020-01-24 13:52:52+00:00,,0,thomaslenzi/cern,236011588,SystemVerilog,cern,94746,0,2023-05-22 09:55:27+00:00,[],
4181,https://github.com/Scott30603/Guessing-Game1.git,2020-01-27 09:08:41+00:00,"Guessing#Game1: guess a random number in binary, you have infinite trials",0,Scott30603/Guessing-Game1,236453038,SystemVerilog,Guessing-Game1,20,0,2020-01-27 09:24:04+00:00,[],
4182,https://github.com/imphil/verilator-case.git,2019-10-03 19:08:14+00:00,,0,imphil/verilator-case,212658213,SystemVerilog,verilator-case,1,0,2019-10-04 09:27:06+00:00,[],
4183,https://github.com/arpanpalsingh3/Microsoft-Internship.git,2019-10-15 07:30:23+00:00,"A collection of all the work that I completed during my internship at Microsoft with System Verilog and FPGA's. The files are an assortment of exercises and assignments, which allowed me to gain a strong grasp of hardware programming. ",1,arpanpalsingh3/Microsoft-Internship,215235207,SystemVerilog,Microsoft-Internship,10,0,2021-03-24 22:17:46+00:00,[],
4184,https://github.com/amiralimi/mips_multicycle_cpu.git,2019-12-28 17:47:40+00:00,An implementation of a simple MIPS CPU in system verilog.,0,amiralimi/mips_multicycle_cpu,230643139,SystemVerilog,mips_multicycle_cpu,28,0,2020-01-04 09:33:53+00:00,[],
4185,https://github.com/carlosdon123/AD9250_test.git,2019-12-19 13:29:19+00:00,,0,carlosdon123/AD9250_test,229060468,SystemVerilog,AD9250_test,81167,0,2019-12-19 15:22:29+00:00,[],
4186,https://github.com/adhammamdouh/Floating-Point-Adder.git,2019-12-23 02:04:16+00:00,Floating Point Adder implemented using SystemVerilog. ,0,adhammamdouh/Floating-Point-Adder,229658960,SystemVerilog,Floating-Point-Adder,3,0,2019-12-23 02:10:10+00:00,[],
4187,https://github.com/Sara-Samer/Single-Cycle-MIPS-Processor.git,2019-12-27 22:41:17+00:00,,0,Sara-Samer/Single-Cycle-MIPS-Processor,230528106,SystemVerilog,Single-Cycle-MIPS-Processor,3,0,2019-12-27 22:46:37+00:00,[],
4188,https://github.com/marlls1989/hdl_examples.git,2019-12-27 23:59:00+00:00,,0,marlls1989/hdl_examples,230534825,SystemVerilog,hdl_examples,1,0,2019-12-28 00:36:20+00:00,[],
4189,https://github.com/wofanqiang/Tiger_Balm.git,2019-12-31 02:27:08+00:00,,1,wofanqiang/Tiger_Balm,231011385,SystemVerilog,Tiger_Balm,163,0,2021-06-13 09:23:59+00:00,[],
4190,https://github.com/george-hcc/uvm_alu.git,2019-10-22 00:53:05+00:00,Projeto de capacitação em verificação UVM.,0,george-hcc/uvm_alu,216692765,SystemVerilog,uvm_alu,7517,0,2019-11-22 17:48:47+00:00,[],https://api.github.com/licenses/mit
4191,https://github.com/kquiros96/TicTacToe.git,2019-10-16 00:09:24+00:00,,0,kquiros96/TicTacToe,215419428,SystemVerilog,TicTacToe,14940,0,2019-10-17 21:17:51+00:00,[],
4192,https://github.com/jfoster19767/Random-Projects.git,2019-10-25 22:54:05+00:00,,0,jfoster19767/Random-Projects,217625728,SystemVerilog,Random-Projects,24,0,2021-10-11 01:06:07+00:00,[],
4193,https://github.com/Viniciusfn/Ambiente-UVM-para-ULA.git,2019-10-22 17:19:39+00:00,Ambiente UVM desenvolvido para verificação de uma ULA,0,Viniciusfn/Ambiente-UVM-para-ULA,216869737,SystemVerilog,Ambiente-UVM-para-ULA,13718,0,2019-11-22 18:03:24+00:00,[],
4194,https://github.com/PrzemyslawDrwal/SoC_2019.git,2019-10-23 16:02:40+00:00,,0,PrzemyslawDrwal/SoC_2019,217098462,SystemVerilog,SoC_2019,2252,0,2019-10-23 16:18:57+00:00,[],
4195,https://github.com/NeM-T/hdl_practice.git,2019-10-21 14:04:17+00:00,,0,NeM-T/hdl_practice,216583282,SystemVerilog,hdl_practice,9,0,2019-11-28 13:41:07+00:00,[],
4196,https://github.com/RobsonOlv/CPUMips.git,2019-10-21 03:20:38+00:00,Implementação de uma arquitetura de processador do tipo MIPS utilizando SystemVerilog e VHDL.,1,RobsonOlv/CPUMips,216468924,SystemVerilog,CPUMips,13531,0,2019-10-21 03:48:04+00:00,[],
4197,https://github.com/EvgenyMuryshkin/Quokka.FloatCast.git,2019-11-06 10:08:49+00:00,HDL for floating cast operations,0,EvgenyMuryshkin/Quokka.FloatCast,219967388,SystemVerilog,Quokka.FloatCast,22,0,2019-11-06 10:27:32+00:00,[],
4198,https://github.com/wofanqiang/hardware_libs.git,2019-12-18 08:25:10+00:00,,0,wofanqiang/hardware_libs,228792790,SystemVerilog,hardware_libs,8,0,2019-12-29 02:40:29+00:00,[],
4199,https://github.com/Jordanb716/ece571.git,2020-01-12 17:48:17+00:00,,0,Jordanb716/ece571,233433348,SystemVerilog,ece571,984,0,2020-01-12 18:41:27+00:00,[],
4200,https://github.com/AlwaysSayingPleaseAndThankYou/ECE-324-h-w2.git,2020-01-18 23:18:01+00:00,,0,AlwaysSayingPleaseAndThankYou/ECE-324-h-w2,234811014,SystemVerilog,ECE-324-h-w2,89,0,2020-01-21 23:32:12+00:00,[],
4201,https://github.com/zwong15/Audio-Synthesizer-Instrument-Sampler.git,2020-01-09 20:37:49+00:00,,0,zwong15/Audio-Synthesizer-Instrument-Sampler,232900679,SystemVerilog,Audio-Synthesizer-Instrument-Sampler,2508,0,2020-01-09 20:41:30+00:00,[],
4202,https://github.com/Diego-Andrade/CPE233OTTER_Processor.git,2020-01-15 20:58:15+00:00,A simple OTTER processor implemented in SystemVerilog,0,Diego-Andrade/CPE233OTTER_Processor,234171944,SystemVerilog,CPE233OTTER_Processor,69,0,2023-03-16 09:51:44+00:00,[],
4203,https://github.com/finnderman/Portfolio.git,2019-10-03 16:57:34+00:00,Portfolio of my Projects,0,finnderman/Portfolio,212632429,SystemVerilog,Portfolio,173,0,2019-11-02 19:52:47+00:00,[],
4204,https://github.com/tasos-alex/Integrated-Circuits.git,2019-11-22 23:55:10+00:00,4th year class of ECE studies.,0,tasos-alex/Integrated-Circuits,223505349,SystemVerilog,Integrated-Circuits,29,0,2020-01-25 00:30:02+00:00,[],
4205,https://github.com/MaurizioCapra/SMAC-engine.git,2019-11-15 10:04:00+00:00,SMAC-engine complete version with variable parallelism and paper.,0,MaurizioCapra/SMAC-engine,221896592,SystemVerilog,SMAC-engine,132,0,2021-06-05 17:17:42+00:00,[],
4206,https://github.com/Sharkkii/Yokyo.git,2020-02-06 04:24:29+00:00,,0,Sharkkii/Yokyo,238606887,SystemVerilog,Yokyo,12,0,2020-02-26 11:02:33+00:00,[],
4207,https://github.com/mostafa115/mips32.git,2019-10-13 15:01:18+00:00,MIPS 32-bit single-cycle implementation.,1,mostafa115/mips32,214840036,,mips32,6767,0,2021-04-01 04:55:55+00:00,[],
4208,https://github.com/JoaoPi314/ULA_uvm.git,2019-10-23 13:14:27+00:00,,0,JoaoPi314/ULA_uvm,217061221,SystemVerilog,ULA_uvm,51109,0,2021-09-08 23:14:24+00:00,[],
4209,https://github.com/MengDeDee/WEF.git,2019-10-22 09:38:11+00:00,,0,MengDeDee/WEF,216776626,SystemVerilog,WEF,14,0,2020-01-15 01:36:08+00:00,[],
4210,https://github.com/tsg3/TicTacToe.git,2019-10-24 06:47:28+00:00,,0,tsg3/TicTacToe,217230757,SystemVerilog,TicTacToe,9844,0,2019-10-24 06:50:27+00:00,[],
4211,https://github.com/YuunqiLiu/lyq_axi_driver.git,2019-10-15 02:02:57+00:00,,0,YuunqiLiu/lyq_axi_driver,215183773,SystemVerilog,lyq_axi_driver,1835,0,2020-07-17 03:19:00+00:00,[],
4212,https://github.com/ignperez-udec/CeNN-SystemVerilog.git,2019-10-09 15:52:17+00:00,Codes in SystemVerilog for CeNN hardware implementation on FPGA,1,ignperez-udec/CeNN-SystemVerilog,213960511,SystemVerilog,CeNN-SystemVerilog,177,0,2019-10-10 16:22:10+00:00,[],
4213,https://github.com/vinaypatil123/AXI4-Protocol-handshake-realization.git,2019-10-07 18:11:38+00:00,This is a code written in systemverilog using UVM to implement the handshake in AMBA AXI4 Protocol,0,vinaypatil123/AXI4-Protocol-handshake-realization,213453812,SystemVerilog,AXI4-Protocol-handshake-realization,5,0,2019-10-07 18:15:34+00:00,[],
4214,https://github.com/melt-umn/ableC-attribute-grammars.git,2019-12-02 00:46:43+00:00,Extension to ableC providing features for attribute grammar-style computation on algebraic data types,0,melt-umn/ableC-attribute-grammars,225254406,SystemVerilog,ableC-attribute-grammars,11,0,2023-07-31 18:43:04+00:00,[],https://api.github.com/licenses/lgpl-3.0
4215,https://github.com/Dmitriy0111/my_periph.git,2019-12-04 12:19:51+00:00,,0,Dmitriy0111/my_periph,225860471,SystemVerilog,my_periph,262,0,2021-02-19 13:03:26+00:00,[],https://api.github.com/licenses/apache-2.0
4216,https://github.com/Jhon2Black1/opentitan-private.git,2020-01-07 20:49:48+00:00,OpenTitan project repository,0,Jhon2Black1/opentitan-private,232414738,,opentitan-private,6296,0,2020-01-16 21:40:52+00:00,[],https://api.github.com/licenses/apache-2.0
4217,https://github.com/parkjonguk/Systemverilog.git,2020-01-03 06:26:31+00:00,,0,parkjonguk/Systemverilog,231526312,SystemVerilog,Systemverilog,13,0,2020-01-03 08:05:52+00:00,[],
4218,https://github.com/gilad29/cpe333.git,2020-01-23 05:23:56+00:00,,0,gilad29/cpe333,235728766,SystemVerilog,cpe333,29,0,2020-01-23 09:05:46+00:00,[],
4219,https://github.com/rarysson/SAP-1.git,2020-02-04 17:45:31+00:00,Implementação do processador SAP-1,0,rarysson/SAP-1,238267669,SystemVerilog,SAP-1,6,0,2020-02-07 19:02:03+00:00,[],
4220,https://github.com/scott7950/uvm_practice.git,2019-11-22 15:06:08+00:00,,0,scott7950/uvm_practice,223427721,SystemVerilog,uvm_practice,31,0,2019-11-22 15:10:25+00:00,[],
4221,https://github.com/jigneshrs/uvm_randomSequences.git,2019-11-27 03:10:50+00:00,UVM Random sequnces using randomize function and constraints,0,jigneshrs/uvm_randomSequences,224333561,SystemVerilog,uvm_randomSequences,21,0,2019-11-27 03:15:47+00:00,[],
4222,https://github.com/Stefan1027/picoMIPS.git,2019-11-11 11:11:51+00:00,,0,Stefan1027/picoMIPS,220963504,SystemVerilog,picoMIPS,243,0,2019-11-11 11:13:20+00:00,[],
4223,https://github.com/hoffmanfpga/rFPGASim.git,2019-11-12 18:41:10+00:00,,0,hoffmanfpga/rFPGASim,221287091,SystemVerilog,rFPGASim,4,0,2019-11-12 18:49:22+00:00,[],
4224,https://github.com/UandersonSilva/VGA_Controller_SystemVerilog.git,2020-01-27 13:44:22+00:00,Um controlador VGA descrito em SysemVerilog,0,UandersonSilva/VGA_Controller_SystemVerilog,236499567,SystemVerilog,VGA_Controller_SystemVerilog,15134,0,2021-10-20 15:14:12+00:00,[],
4225,https://github.com/chahanCPU/computer2nd.git,2020-02-01 04:35:55+00:00,2nd that is,0,chahanCPU/computer2nd,237562294,SystemVerilog,computer2nd,1112,0,2020-02-24 19:32:43+00:00,[],
4226,https://github.com/sethrohrbach/ece571_hw3.git,2020-02-01 23:06:10+00:00,HW#3 for PSU ECE571,0,sethrohrbach/ece571_hw3,237690550,SystemVerilog,ece571_hw3,52,0,2020-02-02 23:47:44+00:00,[],
4227,https://github.com/YuvalMandel/sim1.git,2019-12-18 16:43:35+00:00,Daniel Fux and Yuval mandel sim1 excersize for digital systems,0,YuvalMandel/sim1,228882370,SystemVerilog,sim1,7,0,2019-12-18 16:46:36+00:00,[],
4228,https://github.com/staimy/Develop-Verilog-modules-to-have-three-8-bit-adders.git,2019-12-17 01:59:18+00:00,"The three adders operate in serial, one after another, to perform an addition of in1 + in2 + in3 + in4 (you can ignore carry bits). To save power, turn off any adder that is not in use, and this can be done by using external enable signals to register the necessary inputs and outputs of each adder. Synthesis (without area optimization) and simulate the design.",0,staimy/Develop-Verilog-modules-to-have-three-8-bit-adders,228511596,SystemVerilog,Develop-Verilog-modules-to-have-three-8-bit-adders,360,0,2019-12-17 02:04:57+00:00,['verilog'],
4229,https://github.com/lukericotta/FPGA-Segway.git,2020-01-15 20:48:48+00:00,Digital logic for a Segway-like device,0,lukericotta/FPGA-Segway,234170361,SystemVerilog,FPGA-Segway,56613,0,2020-02-07 16:22:14+00:00,[],
4230,https://github.com/hanhha/iCE40-HX8K-B-EVN_experiment.git,2020-01-10 14:28:40+00:00,Collection of expansion PCB designs and documents that I created when playing with this board ,0,hanhha/iCE40-HX8K-B-EVN_experiment,233064092,SystemVerilog,iCE40-HX8K-B-EVN_experiment,6031,0,2020-01-12 16:10:10+00:00,[],https://api.github.com/licenses/cc0-1.0
4231,https://github.com/Khaled-Ismail/VLSI-Verification.git,2020-02-02 19:20:07+00:00,,0,Khaled-Ismail/VLSI-Verification,237823209,SystemVerilog,VLSI-Verification,27,0,2024-01-26 18:28:21+00:00,[],https://api.github.com/licenses/gpl-3.0
4232,https://github.com/michaelperl/PULPenix_ceu.git,2019-10-09 16:28:08+00:00,Repository for future projects that want to use the CEU,2,michaelperl/PULPenix_ceu,213968308,SystemVerilog,PULPenix_ceu,9260,0,2019-10-23 18:03:23+00:00,[],
4233,https://github.com/rodrigo06/Digitales-Lab4.git,2019-10-17 18:41:33+00:00,,0,rodrigo06/Digitales-Lab4,215862117,SystemVerilog,Digitales-Lab4,119,0,2019-10-17 19:27:32+00:00,[],https://api.github.com/licenses/gpl-3.0
4234,https://github.com/MukeshIyer/MEMORYUVM.git,2019-10-19 17:32:57+00:00,,0,MukeshIyer/MEMORYUVM,216245261,SystemVerilog,MEMORYUVM,5,0,2019-10-19 17:36:24+00:00,[],
4235,https://github.com/jigneshrs/uvm_message.git,2019-11-27 03:04:01+00:00,UVM messaging system working,0,jigneshrs/uvm_message,224332564,SystemVerilog,uvm_message,3137,0,2019-11-27 03:09:35+00:00,[],
4236,https://github.com/Naalunth/aoc_2019_02_verilog.git,2019-12-03 05:38:21+00:00,SystemVerilog experiment for this task: https://adventofcode.com/2019/day/2,0,Naalunth/aoc_2019_02_verilog,225539551,SystemVerilog,aoc_2019_02_verilog,14,0,2019-12-03 05:39:22+00:00,[],
4237,https://github.com/suehtamacv/mempool_cluster.git,2019-11-17 22:27:16+00:00,,1,suehtamacv/mempool_cluster,222320806,SystemVerilog,mempool_cluster,22,0,2019-11-19 15:17:38+00:00,[],
4238,https://github.com/firstfish1993/APB-UVM-Testbench.git,2019-11-17 18:34:08+00:00,APM UVM Testbench and DUT,0,firstfish1993/APB-UVM-Testbench,222293825,SystemVerilog,APB-UVM-Testbench,11,0,2019-11-17 18:46:12+00:00,[],
4239,https://github.com/Bob-Li-2020/asi.git,2020-01-05 04:45:45+00:00,,0,Bob-Li-2020/asi,231868558,SystemVerilog,asi,60,0,2020-01-07 06:45:06+00:00,[],
4240,https://github.com/mindful-ai/computer-organization.git,2020-01-08 02:36:21+00:00,,0,mindful-ai/computer-organization,232461392,SystemVerilog,computer-organization,20338,0,2020-01-08 05:35:55+00:00,[],
4241,https://github.com/rrwang97/FlappyBird.git,2019-11-25 20:57:57+00:00,,0,rrwang97/FlappyBird,224040156,SystemVerilog,FlappyBird,67,0,2019-12-04 19:35:07+00:00,[],
4242,https://github.com/Buraddo23/serial-interface-testbench.git,2019-11-05 14:51:44+00:00,,0,Buraddo23/serial-interface-testbench,219770319,SystemVerilog,serial-interface-testbench,23088,0,2023-07-14 20:48:58+00:00,[],
4243,https://github.com/ebertingomez/SoCFPGA_video_synchro.git,2019-11-08 03:48:01+00:00,,0,ebertingomez/SoCFPGA_video_synchro,220381944,SystemVerilog,SoCFPGA_video_synchro,8795,0,2019-11-08 03:49:45+00:00,[],
4244,https://github.com/chadthom7/lab_regfile.git,2019-11-04 17:47:55+00:00,,0,chadthom7/lab_regfile,219561666,SystemVerilog,lab_regfile,47,0,2019-11-05 04:11:09+00:00,[],
4245,https://github.com/zhangliming-gif/a.git,2019-12-23 12:09:15+00:00,,0,zhangliming-gif/a,229745273,SystemVerilog,a,443453,0,2020-01-16 09:29:23+00:00,[],https://api.github.com/licenses/apache-2.0
4246,https://github.com/bustacab/Arqui2019.git,2019-11-01 14:00:46+00:00,,0,bustacab/Arqui2019,218996101,SystemVerilog,Arqui2019,6932,0,2019-11-06 18:34:17+00:00,[],
4247,https://github.com/nike-t/CSE_132L.git,2019-10-20 00:43:42+00:00,,0,nike-t/CSE_132L,216288290,SystemVerilog,CSE_132L,51408,0,2019-10-20 00:50:09+00:00,[],
4248,https://github.com/freddyD77/VerilogConvolutionGenerator.git,2020-01-08 21:28:35+00:00,C++ file that generates adjustable system verilog code that implements a 3 stage convolution network,0,freddyD77/VerilogConvolutionGenerator,232663488,SystemVerilog,VerilogConvolutionGenerator,299,0,2020-02-25 05:00:56+00:00,[],
4249,https://github.com/edmobe/TicTacToe.git,2019-10-03 02:26:11+00:00,A TicTacToe game developed in SystemVerilog with a VGA controller,0,edmobe/TicTacToe,212482258,SystemVerilog,TicTacToe,44788,0,2020-06-25 23:23:54+00:00,[],
4250,https://github.com/jackwadden/EECS-498-598-HW2.git,2019-10-03 18:24:08+00:00,,3,jackwadden/EECS-498-598-HW2,212649471,SystemVerilog,EECS-498-598-HW2,4,0,2019-10-07 20:26:25+00:00,[],
4251,https://github.com/Scrawach/Find-Max-Value.git,2020-01-28 19:12:23+00:00,Find max value from data flow.,0,Scrawach/Find-Max-Value,236818169,SystemVerilog,Find-Max-Value,5,0,2023-04-12 06:44:58+00:00,['rtl'],
4252,https://github.com/Mars773/justCTF2019.git,2019-12-22 19:20:08+00:00,Some writeups for justCTF2019,0,Mars773/justCTF2019,229618407,SystemVerilog,justCTF2019,780,0,2019-12-22 20:08:01+00:00,[],
4253,https://github.com/NiravJadav/async_FIFO.git,2020-01-20 05:58:35+00:00,rtl file of async_FIFO as per the sunbrust design ffile ,0,NiravJadav/async_FIFO,235029429,SystemVerilog,async_FIFO,9,0,2020-01-20 11:48:16+00:00,[],
4254,https://github.com/utkukalkanli/Smart-Evacuation-Elevator.git,2020-02-02 16:56:45+00:00,"Simulation of an evacuation elevator. The goal is to optimize the number of passengers served at the same time, the movement time of the elevators and the number of stops.",0,utkukalkanli/Smart-Evacuation-Elevator,237803914,SystemVerilog,Smart-Evacuation-Elevator,344,0,2020-02-02 17:03:42+00:00,[],
4255,https://github.com/Ben-Sheffer/6.S186.git,2020-01-28 15:52:08+00:00,,0,Ben-Sheffer/6.S186,236773543,,6.S186,15,0,2020-01-28 15:52:10+00:00,[],
4256,https://github.com/horten-229xxx/XXX.git,2020-01-31 20:18:25+00:00,XXX,0,horten-229xxx/XXX,237509229,SystemVerilog,XXX,16254,0,2020-01-31 20:20:10+00:00,[],https://api.github.com/licenses/mit
4257,https://github.com/Framonti/ES_SquareRoot.git,2020-02-10 08:28:51+00:00,,1,Framonti/ES_SquareRoot,239462131,SystemVerilog,ES_SquareRoot,3302,0,2023-01-28 13:45:45+00:00,[],
4258,https://github.com/Popungs/DigitalDesign-CPU.git,2020-02-05 08:20:16+00:00,HDL Project for Advanced Digital Design Class,0,Popungs/DigitalDesign-CPU,238400617,SystemVerilog,DigitalDesign-CPU,5,0,2020-02-05 08:20:23+00:00,[],
4259,https://github.com/itsfrank/fpga-cci-interface-debug.git,2019-11-01 12:53:23+00:00,Simple AFU to debug a strange behaviour in the CCI QPI interface that causes the alm_full flag to go high when the workspace allocated is too large,0,itsfrank/fpga-cci-interface-debug,218984985,SystemVerilog,fpga-cci-interface-debug,61,0,2023-02-28 01:40:35+00:00,[],
4260,https://github.com/Waidhoferj/CPE-233-Project.git,2019-11-16 18:11:14+00:00,,0,Waidhoferj/CPE-233-Project,222140150,SystemVerilog,CPE-233-Project,123,0,2019-12-07 22:26:38+00:00,[],
4261,https://github.com/michmart98/tictactoe.git,2019-11-20 12:55:42+00:00,3rd lab circuits,0,michmart98/tictactoe,222937446,SystemVerilog,tictactoe,5,0,2019-11-21 14:30:28+00:00,[],
4262,https://github.com/ArbalestV/Purdue-Coursework.git,2019-10-28 01:25:28+00:00,Repository of Purdue coursework.,2,ArbalestV/Purdue-Coursework,217942111,,Purdue-Coursework,315098,0,2019-10-28 01:25:29+00:00,[],
4263,https://github.com/ehavugi/chasebot.git,2019-10-31 18:44:48+00:00,Chasebot Project,0,ehavugi/chasebot,218836578,SystemVerilog,chasebot,171783,0,2021-07-25 08:22:25+00:00,[],
4264,https://github.com/msmnafly/lycode.git,2019-10-23 01:52:55+00:00,Hardware Programming with verilog,0,msmnafly/lycode,216945387,SystemVerilog,lycode,5,0,2019-12-24 12:11:26+00:00,[],
4265,https://github.com/blacha98/FPGATron.git,2019-12-30 12:36:12+00:00,,0,blacha98/FPGATron,230913143,SystemVerilog,FPGATron,16,0,2020-01-08 17:37:39+00:00,[],
4266,https://github.com/rarysson/ULA.git,2019-12-25 23:15:03+00:00,Implementação de uma ULA - (Unidade Lógica e Aritmética),0,rarysson/ULA,230163469,SystemVerilog,ULA,49,0,2019-12-25 23:16:08+00:00,[],
4267,https://github.com/shouyuOC/Adder-32bit-.git,2020-01-03 19:06:31+00:00,勉強用,0,shouyuOC/Adder-32bit-,231648619,SystemVerilog,Adder-32bit-,4,0,2020-01-03 19:16:47+00:00,[],
4268,https://github.com/Dmitriy0111/dvl_sv.git,2019-12-25 11:41:24+00:00,,0,Dmitriy0111/dvl_sv,230094681,SystemVerilog,dvl_sv,198,0,2021-12-02 13:03:27+00:00,[],https://api.github.com/licenses/apache-2.0
4269,https://github.com/stephen-hannam/TCP_FSM_UVM.git,2020-01-11 04:39:01+00:00,TCP FSM using fizzim and verified using UVM/Easier-UVM for self-teaching purposes.,0,stephen-hannam/TCP_FSM_UVM,233176935,SystemVerilog,TCP_FSM_UVM,541,0,2023-04-14 00:29:58+00:00,[],
4270,https://github.com/melikearslan/Game-of-Nim.git,2020-01-18 07:59:16+00:00,CS223 - Digital Design Term Project,0,melikearslan/Game-of-Nim,234701172,SystemVerilog,Game-of-Nim,132,0,2021-01-23 19:07:16+00:00,[],
4271,https://github.com/kkiningh/libkw.git,2019-12-10 19:57:58+00:00,Utility library of SystemVerilog components,0,kkiningh/libkw,227204291,SystemVerilog,libkw,35,0,2019-12-10 20:00:00+00:00,[],https://api.github.com/licenses/apache-2.0
4272,https://github.com/chrisdlg/simon_says_FPGA_SystemVerilog.git,2020-01-26 15:13:56+00:00,,0,chrisdlg/simon_says_FPGA_SystemVerilog,236329575,SystemVerilog,simon_says_FPGA_SystemVerilog,3825,0,2020-01-26 15:18:40+00:00,[],
4273,https://github.com/openverilog/basics.git,2020-01-15 07:26:06+00:00,,0,openverilog/basics,234022997,SystemVerilog,basics,3,0,2020-03-17 20:15:01+00:00,[],
4274,https://github.com/andreluisv/ProjetoHw.git,2019-10-02 12:38:12+00:00,,0,andreluisv/ProjetoHw,212338020,SystemVerilog,ProjetoHw,296060,0,2019-10-30 18:18:25+00:00,[],
4275,https://github.com/lmm3/RISC-V-Processor.git,2019-11-14 16:08:09+00:00,An implementation of the RISC-V multicycle processor with a small set of instructions. Made for the Hardware Infrastructure course (IF674),0,lmm3/RISC-V-Processor,221736961,SystemVerilog,RISC-V-Processor,13577,0,2019-11-14 16:13:37+00:00,[],
4276,https://github.com/tlietz/FPGA_Video_Game_2D_Shooter.git,2019-12-12 16:31:10+00:00,A 2D shooter on the Altera DE-2 115 board.,0,tlietz/FPGA_Video_Game_2D_Shooter,227650122,SystemVerilog,FPGA_Video_Game_2D_Shooter,88,0,2022-03-11 14:11:30+00:00,[],
4277,https://github.com/nonrational/fpga-dsd.git,2020-02-05 18:02:19+00:00,Learning Digital System Design with Field Programmable Gate Arrays,0,nonrational/fpga-dsd,238514961,SystemVerilog,fpga-dsd,27023,0,2020-05-17 17:40:34+00:00,[],
4278,https://github.com/TheAsianCow/ece3829_lab2.git,2020-01-28 19:02:06+00:00,,0,TheAsianCow/ece3829_lab2,236815702,SystemVerilog,ece3829_lab2,5291,0,2020-02-04 22:30:35+00:00,[],
4279,https://github.com/itsfrank/cl-builder.git,2019-11-20 19:59:23+00:00,A Systemverilog cache-line builder module,0,itsfrank/cl-builder,223016894,SystemVerilog,cl-builder,10,0,2019-11-25 03:50:26+00:00,[],
4280,https://github.com/Arsalan-M/CPE233.git,2019-10-13 02:01:33+00:00,8-bit RAT Architecture CPU,0,Arsalan-M/CPE233,214745639,SystemVerilog,CPE233,1246,0,2021-01-09 00:02:07+00:00,[],
4282,https://github.com/pevkirill/burst_slave.git,2019-10-08 14:53:40+00:00,,0,pevkirill/burst_slave,213673090,SystemVerilog,burst_slave,5,0,2019-10-08 15:37:32+00:00,[],
4283,https://github.com/dmdang/ECE-337-ASIC-Design.git,2019-11-10 18:18:29+00:00,,0,dmdang/ECE-337-ASIC-Design,220830649,SystemVerilog,ECE-337-ASIC-Design,2350,0,2019-11-10 18:22:12+00:00,[],
4284,https://github.com/Diego-Andrade/CPE133MazeGame.git,2019-11-26 23:43:43+00:00,A maze game implemented on a BASYS 3 board with VGA out graphics and Keyboard input,0,Diego-Andrade/CPE133MazeGame,224306277,SystemVerilog,CPE133MazeGame,11285,0,2019-12-06 03:52:26+00:00,[],
4285,https://github.com/van-namdinh/rtl_sv.git,2019-11-21 13:25:41+00:00,code examples,0,van-namdinh/rtl_sv,223179805,SystemVerilog,rtl_sv,7,0,2019-11-21 13:30:46+00:00,[],
4286,https://github.com/iagotito/CodigosLOAC.git,2019-10-23 01:03:02+00:00,Repositório para guardar os códigos da cadeira de LOAC.,0,iagotito/CodigosLOAC,216938318,SystemVerilog,CodigosLOAC,14,0,2021-09-16 15:56:30+00:00,[],
4287,https://github.com/nvsces/FPGA.git,2019-11-12 16:31:27+00:00,Проект часы на ПЛИС,0,nvsces/FPGA,221263139,SystemVerilog,FPGA,32,0,2021-06-16 12:02:11+00:00,[],
4288,https://github.com/sqrlfirst/nnFPGA.git,2019-12-15 10:44:23+00:00,,1,sqrlfirst/nnFPGA,228167977,SystemVerilog,nnFPGA,9,0,2020-03-31 05:45:25+00:00,[],
4289,https://github.com/fuchangyun/SystemVerlog_learnning.git,2019-12-12 09:49:39+00:00,code about teh learnning of systemverlog,0,fuchangyun/SystemVerlog_learnning,227572705,SystemVerilog,SystemVerlog_learnning,442,0,2019-12-12 20:14:22+00:00,[],
4290,https://github.com/danielpoochai/DCLab-Final.git,2020-01-19 19:56:55+00:00,Bomb game implemented by system verilog and FPGA,0,danielpoochai/DCLab-Final,234956980,SystemVerilog,DCLab-Final,2357,0,2020-01-26 13:26:07+00:00,[],
4291,https://github.com/Fadi750/Fadi-Ibrahim.git,2019-10-28 17:19:20+00:00,,0,Fadi750/Fadi-Ibrahim,218104660,SystemVerilog,Fadi-Ibrahim,55,0,2020-09-24 16:54:19+00:00,[],
4292,https://github.com/pawarsumeet81/Simulation-of-LLC-Cache-using-SystemVerilog.git,2020-01-16 09:20:07+00:00,,0,pawarsumeet81/Simulation-of-LLC-Cache-using-SystemVerilog,234281522,SystemVerilog,Simulation-of-LLC-Cache-using-SystemVerilog,8,0,2020-01-16 09:28:48+00:00,[],
4293,https://github.com/cetola/TemperatureMonitor.git,2020-01-19 22:23:41+00:00,A simple and educational temperature monitor,0,cetola/TemperatureMonitor,234977024,SystemVerilog,TemperatureMonitor,49,0,2023-09-20 17:55:33+00:00,[],https://api.github.com/licenses/mit
4294,https://github.com/andreab98/6.111_ddr.git,2019-11-22 21:44:14+00:00,6.111 final project,0,andreab98/6.111_ddr,223491478,SystemVerilog,6.111_ddr,354,0,2019-12-13 17:14:43+00:00,[],
4295,https://github.com/StevenMcLeod/z80_system.git,2020-02-01 04:25:12+00:00,Verilog Implementation of a z80 system,0,StevenMcLeod/z80_system,237561319,SystemVerilog,z80_system,1131,0,2020-03-03 20:41:13+00:00,[],
4296,https://github.com/Peppar/ahdl-unittest.git,2020-01-07 20:39:58+00:00,Unit test examples for ActiveHDL,0,Peppar/ahdl-unittest,232413065,SystemVerilog,ahdl-unittest,21,0,2020-01-07 21:11:25+00:00,[],
4297,https://github.com/parkjonguk/Failed.git,2020-01-02 11:09:59+00:00,,0,parkjonguk/Failed,231365243,SystemVerilog,Failed,8,0,2020-01-03 06:25:41+00:00,[],
4298,https://github.com/brain-wave/apb_cache_ctrl.git,2020-02-09 20:48:06+00:00,APB cache controller for private caches of the RISCY core,1,brain-wave/apb_cache_ctrl,239371983,SystemVerilog,apb_cache_ctrl,5,0,2020-02-10 08:04:51+00:00,[],
4299,https://github.com/evasilly/jtagSys.git,2020-02-13 17:48:39+00:00,,0,evasilly/jtagSys,240324231,SystemVerilog,jtagSys,85,0,2020-02-13 18:52:37+00:00,[],
4300,https://github.com/toms74209200/quartus_modelsim_makefile.git,2020-01-29 14:22:08+00:00,The sample of Makefile that work on Quartus Prime and ModelSimASE.,0,toms74209200/quartus_modelsim_makefile,236999772,SystemVerilog,quartus_modelsim_makefile,6,0,2020-01-29 14:30:06+00:00,[],https://api.github.com/licenses/mit
4301,https://github.com/AlexsandroJ/Project_Hardware_Mult.git,2019-10-10 16:42:15+00:00,Projeto de infraestutura de hardware com multiplicacao implementada para RISC V,0,AlexsandroJ/Project_Hardware_Mult,214235112,SystemVerilog,Project_Hardware_Mult,903,0,2019-10-11 19:04:13+00:00,[],
4302,https://github.com/UandersonSilva/BIP2_SystemVerilog.git,2019-10-21 01:08:47+00:00,Descrição em SystemVerilog do processador BIP2,0,UandersonSilva/BIP2_SystemVerilog,216450728,SystemVerilog,BIP2_SystemVerilog,677,0,2021-08-04 14:05:20+00:00,[],
4303,https://github.com/Dima365/fifo.git,2019-10-18 20:36:39+00:00,"fifo with ""First Word Fall Through""",0,Dima365/fifo,216103160,SystemVerilog,fifo,2,0,2019-10-18 20:45:21+00:00,[],
4304,https://github.com/xver/dist_sim.git,2019-10-26 23:12:04+00:00,dist sim,0,xver/dist_sim,217780331,SystemVerilog,dist_sim,53,0,2023-07-17 18:39:50+00:00,[],https://api.github.com/licenses/mit
4305,https://github.com/AnnaDarda/Integrated-Circuits.git,2019-11-12 23:45:54+00:00,Homework_5,0,AnnaDarda/Integrated-Circuits,221333643,SystemVerilog,Integrated-Circuits,2,0,2023-08-23 13:12:39+00:00,[],
4306,https://github.com/yufat48/NoCRouter.git,2019-12-03 05:21:40+00:00,my own version of NocRouter,0,yufat48/NoCRouter,225537183,SystemVerilog,NoCRouter,675,0,2019-12-03 05:43:10+00:00,[],https://api.github.com/licenses/mit
4307,https://github.com/ridwangs/Obstacle-Detector.git,2019-12-18 18:58:09+00:00,,0,ridwangs/Obstacle-Detector,228903255,SystemVerilog,Obstacle-Detector,120,0,2019-12-18 19:05:19+00:00,[],
4308,https://github.com/MICHEALCHAZFLOYD/Mr_Processor.git,2019-12-13 22:51:23+00:00,RISC V 32i single stage processor,0,MICHEALCHAZFLOYD/Mr_Processor,227934925,SystemVerilog,Mr_Processor,4,0,2019-12-13 22:53:25+00:00,[],
4309,https://github.com/karthik-0398/galois-multiplier.git,2019-12-15 14:46:57+00:00,Galois field GF[2^3] multiplier,0,karthik-0398/galois-multiplier,228200345,SystemVerilog,galois-multiplier,111,0,2021-01-13 15:18:27+00:00,[],https://api.github.com/licenses/mit
4310,https://github.com/avivcaspi/SVProject.git,2019-12-15 15:01:02+00:00,,0,avivcaspi/SVProject,228202398,SystemVerilog,SVProject,234991,0,2020-01-05 13:27:42+00:00,[],
4311,https://github.com/akshatmathur16/APB.git,2019-12-22 05:09:15+00:00,Contains APB design and verification environement,1,akshatmathur16/APB,229521031,SystemVerilog,APB,16,0,2020-02-23 16:19:07+00:00,[],
4312,https://github.com/Rjfur/8-Bit-Calculator.git,2019-12-06 01:15:50+00:00,,0,Rjfur/8-Bit-Calculator,226219086,SystemVerilog,8-Bit-Calculator,30,0,2019-12-06 01:36:54+00:00,[],
4313,https://github.com/DanielGao98/ECE-111-Final-Project.git,2019-12-05 22:14:03+00:00,,0,DanielGao98/ECE-111-Final-Project,226198082,SystemVerilog,ECE-111-Final-Project,18,0,2020-11-24 21:21:49+00:00,[],
4314,https://github.com/ShreyasR46/Chip_Security_Advanced_Project.git,2019-11-27 23:16:42+00:00,Advanced Project Work,0,ShreyasR46/Chip_Security_Advanced_Project,224532877,,Chip_Security_Advanced_Project,11082,0,2020-02-27 00:18:56+00:00,[],
4315,https://github.com/HanthaSolo/QuartusPrime-and-Altera-DE2-115.git,2020-01-30 19:28:39+00:00,Project was developed with Intel Quartus Prime 17.0,0,HanthaSolo/QuartusPrime-and-Altera-DE2-115,237289023,SystemVerilog,QuartusPrime-and-Altera-DE2-115,148,0,2020-02-19 17:56:33+00:00,[],
4316,https://github.com/CMU-18-500-TeamTensor/HardwareWorker.git,2020-02-10 15:47:33+00:00,,0,CMU-18-500-TeamTensor/HardwareWorker,239549060,SystemVerilog,HardwareWorker,1055,0,2020-04-26 22:25:30+00:00,[],
4317,https://github.com/GrantGsell/System_Verilog_Single_Cycle_MIPS_Processor.git,2020-02-04 03:22:31+00:00,Module files and test benches for a single cycle MIPS processor written in system verilog,0,GrantGsell/System_Verilog_Single_Cycle_MIPS_Processor,238114003,SystemVerilog,System_Verilog_Single_Cycle_MIPS_Processor,233,0,2020-02-04 16:51:03+00:00,[],
4318,https://github.com/Scott30603/Guessing-Game2.git,2020-01-27 09:20:56+00:00,Guessing number game 2: you can only guess up to 7 times,0,Scott30603/Guessing-Game2,236454976,SystemVerilog,Guessing-Game2,21,0,2020-01-27 09:22:13+00:00,[],
4319,https://github.com/Ata-Coskun/CS223-Project.git,2019-11-24 19:16:49+00:00,Motor game on BETI board with FPGA controller.,0,Ata-Coskun/CS223-Project,223796622,SystemVerilog,CS223-Project,8005,0,2023-12-09 12:55:24+00:00,[],
4320,https://github.com/projf/projf-explore.git,2020-04-25 10:21:33+00:00,Project F brings FPGAs to life with exciting open-source designs you can build on.,50,projf/projf-explore,258746878,SystemVerilog,projf-explore,3157,497,2024-04-04 08:51:44+00:00,"['fpga', 'graphics-hardware', 'oshw', 'verilog']",https://api.github.com/licenses/mit
4321,https://github.com/openhwgroup/core-v-mcu.git,2020-06-25 01:14:03+00:00,"This is the CORE-V MCU project, hosting CORE-V's embedded-class cores.",52,openhwgroup/core-v-mcu,274802727,SystemVerilog,core-v-mcu,35898,156,2024-04-08 04:19:51+00:00,"['microcontroller', 'systemverilog', 'openhwgroup', 'riscv']",
4322,https://github.com/aignacio/ravenoc.git,2020-03-14 23:41:42+00:00,RaveNoC is a configurable HDL NoC (Network-On-Chip) suitable for MPSoCs and different MP applications,26,aignacio/ravenoc,247370601,SystemVerilog,ravenoc,2379,121,2024-04-04 15:29:19+00:00,"['noc', 'network-on-chip', 'axi4', 'router', 'flits', 'virtual-channels', 'mpsoc']",https://api.github.com/licenses/mit
4323,https://github.com/Verdvana/AXI4_Interconnect.git,2020-03-15 11:29:33+00:00,AXI总线连接器,17,Verdvana/AXI4_Interconnect,247453264,SystemVerilog,AXI4_Interconnect,5449,73,2024-04-07 09:50:06+00:00,[],
4324,https://github.com/hdl-util/mipi-csi-2.git,2020-03-17 18:15:31+00:00,Capture images/video from a Raspberry Pi Camera (MIPI CSI-2) with an FPGA,13,hdl-util/mipi-csi-2,248041702,SystemVerilog,mipi-csi-2,51,59,2024-04-04 23:01:51+00:00,[],
4325,https://github.com/crossroadsfpga/enso.git,2020-03-18 17:41:54+00:00,Ensō is a high-performance streaming interface for NIC-application communication.,3,crossroadsfpga/enso,248301431,SystemVerilog,enso,3966,59,2024-04-13 18:56:41+00:00,"['fpga', 'networking', 'nic']",https://api.github.com/licenses/bsd-3-clause-clear
4326,https://github.com/chipsalliance/uvm-verilator.git,2020-06-09 08:51:14+00:00,,15,chipsalliance/uvm-verilator,270950839,SystemVerilog,uvm-verilator,5120,53,2024-04-13 11:38:42+00:00,[],https://api.github.com/licenses/apache-2.0
4327,https://github.com/muneebullashariff/axi4_vip.git,2020-04-02 08:42:59+00:00,Verification IP for APB protocol,35,muneebullashariff/axi4_vip,252401201,SystemVerilog,axi4_vip,272,50,2024-04-03 04:58:51+00:00,[],https://api.github.com/licenses/apache-2.0
4328,https://github.com/ben-marshall/croyde-riscv.git,2020-03-30 20:18:44+00:00,"A barebones 64-bit RISC-V micro-controller class CPU, implementing the I(nteger), M(ul/div), C(ompressed) and K(ryptography) extensions.",4,ben-marshall/croyde-riscv,251418791,SystemVerilog,croyde-riscv,772,40,2024-04-03 22:36:21+00:00,"['risc-v', 'riscv64', 'microcontroller', 'cpu', 'verilog', 'formal-verification', 'micro-controller', 'risc', 'yosys', 'cryptography', 'crypto', 'systemverilog', 'verilator', 'mit-license']",https://api.github.com/licenses/mit
4329,https://github.com/justcatthefish/justctf-2019.git,2020-02-16 19:21:26+00:00,justCTF 2019 challenges sources,6,justcatthefish/justctf-2019,240951074,SystemVerilog,justctf-2019,34646,37,2023-05-30 06:09:56+00:00,[],
4330,https://github.com/ARC-Lab-UF/intel-training-modules.git,2020-04-09 15:05:59+00:00,,14,ARC-Lab-UF/intel-training-modules,254403649,SystemVerilog,intel-training-modules,10958,34,2024-04-11 04:39:58+00:00,[],
4331,https://github.com/MiSTer-devel/AtariST_MiSTer.git,2020-04-19 08:46:09+00:00,Atari ST/STe for MiSTer,15,MiSTer-devel/AtariST_MiSTer,256953279,SystemVerilog,AtariST_MiSTer,33482,26,2024-02-17 13:41:05+00:00,[],
4332,https://github.com/mcrl/soff-hardware-opae.git,2020-05-14 04:57:00+00:00,,1,mcrl/soff-hardware-opae,263818861,SystemVerilog,soff-hardware-opae,1056,25,2023-01-10 00:25:17+00:00,[],
4333,https://github.com/balmerdx/sdio_linux_fpga.git,2020-03-29 08:26:17+00:00,Communication channel from FPGA (Alterra EP4CE10) and Linux (Lichee PI Allwinner V3S),17,balmerdx/sdio_linux_fpga,250985833,SystemVerilog,sdio_linux_fpga,6218,24,2024-04-08 16:09:18+00:00,[],
4334,https://github.com/stcmtk/fpga-webinar-2020.git,2020-05-05 16:17:08+00:00,,9,stcmtk/fpga-webinar-2020,261522839,SystemVerilog,fpga-webinar-2020,5185,24,2024-02-17 01:13:55+00:00,[],
4335,https://github.com/hdl-util/mipi-ccs.git,2020-04-10 00:02:38+00:00,Control a MIPI Camera over I2C,4,hdl-util/mipi-ccs,254504012,SystemVerilog,mipi-ccs,18,21,2024-03-25 00:00:25+00:00,"['imx219', 'mipi', 'mipi-ccs', 'fpga', 'i2c', 'camera', 'ov5647']",
4336,https://github.com/vlotnik/uvm_sin_cos_table.git,2020-04-17 21:37:05+00:00,Contains source code for sin/cos table verification using UVM,3,vlotnik/uvm_sin_cos_table,256615038,SystemVerilog,uvm_sin_cos_table,264,20,2023-02-27 19:50:18+00:00,[],
4337,https://github.com/zhajio1988/ExtremeDV_UVM.git,2020-04-23 14:55:42+00:00,"UVM resource from github, run simulation use YASAsim flow",15,zhajio1988/ExtremeDV_UVM,258239573,SystemVerilog,ExtremeDV_UVM,197,20,2024-04-07 04:25:06+00:00,"['ic', 'verification', 'systemverilog', 'uvm']",
4338,https://github.com/StanfordVLSI/dragonphy2.git,2020-04-27 17:20:12+00:00,Open Source PHY v2,3,StanfordVLSI/dragonphy2,259401546,SystemVerilog,dragonphy2,167551,19,2024-04-10 15:06:46+00:00,"['high-speed', 'receiver', 'adc', 'verilog', 'systemverilog', 'analog', 'mixed-signal', 'dsp', 'equalization']",https://api.github.com/licenses/apache-2.0
4339,https://github.com/recogni/svlib.git,2020-05-08 21:44:21+00:00,svlib from http://www.verilab.com/resources/svlib/,6,recogni/svlib,262434802,SystemVerilog,svlib,542,19,2024-03-13 06:11:50+00:00,[],
4340,https://github.com/pulp-platform/clint.git,2020-06-14 15:19:28+00:00,RISC-V Core Local Interrupt Controller (CLINT),5,pulp-platform/clint,272227942,SystemVerilog,clint,33,19,2024-04-02 17:01:04+00:00,[],
4341,https://github.com/Verdvana/AXI_SRAM.git,2020-03-26 07:53:10+00:00,支持AXI总线协议的8k×8 SP SRAM,5,Verdvana/AXI_SRAM,250194324,SystemVerilog,AXI_SRAM,216,18,2024-03-12 08:08:55+00:00,[],
4342,https://github.com/muneebullashariff/apb_vip.git,2020-04-02 08:39:50+00:00,Verification IP for APB protocol,21,muneebullashariff/apb_vip,252400440,SystemVerilog,apb_vip,166,18,2024-03-22 10:39:17+00:00,[],https://api.github.com/licenses/apache-2.0
4343,https://github.com/SymbioticEDA/sva-demos.git,2020-04-21 13:20:09+00:00,SVA examples and demonstration,4,SymbioticEDA/sva-demos,257602200,SystemVerilog,sva-demos,153,17,2024-03-14 04:04:35+00:00,[],
4344,https://github.com/tinylabs/tinylabs-cores.git,2020-06-16 19:21:32+00:00,Fusesoc compatible rtl cores,1,tinylabs/tinylabs-cores,272793459,SystemVerilog,tinylabs-cores,380,14,2024-03-31 21:26:14+00:00,[],
4345,https://github.com/Angela-WangBo/Shenjing-RTL.git,2020-02-22 03:04:18+00:00,"This is the RTL implementation of Shenjing, a low power neuromorphic computing accelerator",1,Angela-WangBo/Shenjing-RTL,242270553,SystemVerilog,Shenjing-RTL,198,14,2024-04-11 19:11:21+00:00,[],
4346,https://github.com/Quaker762/DE10-GPU.git,2020-03-02 10:02:21+00:00,GPU for OENG1167 in Verilog HDL for DE10 series boards,1,Quaker762/DE10-GPU,244337793,SystemVerilog,DE10-GPU,69000,13,2023-05-05 13:49:43+00:00,[],https://api.github.com/licenses/gpl-3.0
4347,https://github.com/muguang123/AXI_Verification.git,2020-03-22 13:21:34+00:00,Verification AXI-4 bus standard using UVM and System Verilog,1,muguang123/AXI_Verification,249187927,,AXI_Verification,45,12,2023-11-25 05:00:28+00:00,[],
4349,https://github.com/chad-q/andes-vector-riscv-dv.git,2020-05-02 05:28:19+00:00,Andes Vector Extension support added to riscv-dv,2,chad-q/andes-vector-riscv-dv,260620489,SystemVerilog,andes-vector-riscv-dv,896,12,2024-04-09 07:50:40+00:00,[],https://api.github.com/licenses/apache-2.0
4350,https://github.com/radiolok/dekatronpc.git,2020-02-16 20:32:36+00:00,DekatronPC - vacuum tube and cold-cathode tube based computer,2,radiolok/dekatronpc,240961438,SystemVerilog,dekatronpc,178436,12,2023-12-27 03:30:51+00:00,[],
4351,https://github.com/muneebullashariff/pulpino_soc_uvm_testbench.git,2020-03-23 14:45:15+00:00,UVM testbench for verifying the Pulpino SoC  ,7,muneebullashariff/pulpino_soc_uvm_testbench,249457904,SystemVerilog,pulpino_soc_uvm_testbench,33,12,2023-07-20 13:09:50+00:00,[],
4352,https://github.com/PacoReinaCampo/MPSoC-NTM.git,2020-05-03 17:25:56+00:00,Neural Turing Machine for a Multi-Processor System on Chip verified with UVM/OSVVM/FV,2,PacoReinaCampo/MPSoC-NTM,260983393,SystemVerilog,MPSoC-NTM,75350,12,2023-08-30 18:41:48+00:00,"['neural-network', 'mpsoc', 'differentiable-neural-computer', 'neural-turing-machine']",https://api.github.com/licenses/mit
4353,https://github.com/nikulshr/resnet_fpga.git,2020-04-19 02:25:42+00:00,UCSD CSE 237D Spring '20 Course Project,8,nikulshr/resnet_fpga,256896571,SystemVerilog,resnet_fpga,235049,11,2023-09-14 11:25:55+00:00,[],
4354,https://github.com/nikitabuzov/SpikingNeuralNet.git,2020-06-17 19:04:52+00:00,Spiking neural network implementation using Verilog with LIF (Leaky Integrate-and-Fire) neurons,5,nikitabuzov/SpikingNeuralNet,273057070,SystemVerilog,SpikingNeuralNet,670,11,2024-01-26 08:13:26+00:00,[],
4355,https://github.com/fcayci/sv-digital-design.git,2020-04-24 09:54:18+00:00,SystemVerilog examples for a digital design course,9,fcayci/sv-digital-design,258472844,SystemVerilog,sv-digital-design,30,11,2023-06-09 19:33:34+00:00,"['fpga', 'verilog', 'systemverilog', 'digital-design', 'logic-design']",
4356,https://github.com/Matt8898/leg.git,2020-06-25 08:58:41+00:00,,0,Matt8898/leg,274871209,SystemVerilog,leg,64,10,2023-08-21 23:29:34+00:00,[],
4357,https://github.com/chenyangbing/UVM-example.git,2020-03-16 16:22:37+00:00,UVM ,5,chenyangbing/UVM-example,247762713,SystemVerilog,UVM-example,7,10,2024-03-16 07:25:35+00:00,"['uvm', 'systemverilog', 'systemverilog-hdl']",
4358,https://github.com/IObundle/iob-interconnect.git,2020-04-27 21:56:12+00:00,handle bus interconnection,10,IObundle/iob-interconnect,259465700,SystemVerilog,iob-interconnect,114,10,2024-01-15 04:31:30+00:00,[],https://api.github.com/licenses/mit
4359,https://github.com/dpretet/meduram.git,2020-03-12 15:36:36+00:00,Multi-port BRAM IP for ASIC and FPGA,2,dpretet/meduram,246870563,SystemVerilog,meduram,247,10,2024-03-26 06:49:27+00:00,"['bram', 'ram', 'amba', 'axi4', 'fpga', 'svut', 'yosys', 'iverilog', 'block', 'fusesoc', 'asic', 'axi4-lite', 'axi4-lite-interface', 'multi-port']",https://api.github.com/licenses/mit
4360,https://github.com/hdl-util/image-processing.git,2020-06-27 04:16:37+00:00,SystemVerilog code for image processing tasks like demosaicing,3,hdl-util/image-processing,275297941,SystemVerilog,image-processing,21,9,2024-04-05 03:07:24+00:00,[],
4361,https://github.com/j1s1e1/VerilogTurboCodeMaxProduct.git,2020-05-27 19:15:43+00:00,Turbo coder and decoder,5,j1s1e1/VerilogTurboCodeMaxProduct,267405926,SystemVerilog,VerilogTurboCodeMaxProduct,57,9,2024-01-08 01:12:33+00:00,[],https://api.github.com/licenses/mit
4362,https://github.com/USCPOSH/NUSADC.git,2020-02-17 20:57:33+00:00,Repository for ISSCC 2020 paper.,1,USCPOSH/NUSADC,241206464,SystemVerilog,NUSADC,11,9,2024-04-11 02:10:01+00:00,[],
4363,https://github.com/jiegec/fpnew-wrapper.git,2020-04-06 11:23:48+00:00,A chisel3 wrapper for pulp-platform/fpnew,0,jiegec/fpnew-wrapper,253476244,SystemVerilog,fpnew-wrapper,85,8,2024-01-20 14:21:54+00:00,"['chisel3', 'fpu', 'hardware-libraries']",https://api.github.com/licenses/mit
4364,https://github.com/dalance/svlint-action.git,2020-02-20 10:41:00+00:00,,2,dalance/svlint-action,241858282,SystemVerilog,svlint-action,22,7,2024-02-27 10:01:34+00:00,"['systemverilog', 'github-actions']",https://api.github.com/licenses/mit
4365,https://github.com/srishis/DMA8237A_VERIF.git,2020-05-09 20:41:40+00:00,Verification of DMA Controller for 8086 Microprocessor Systems using OO Test bench,1,srishis/DMA8237A_VERIF,262655333,SystemVerilog,DMA8237A_VERIF,356,7,2024-01-13 13:29:45+00:00,[],
4366,https://github.com/PacoReinaCampo/SoC-FinTech.git,2020-05-03 18:04:14+00:00,Financial Technology with SoC-NTM verified with UVM/OSVVM/FV,0,PacoReinaCampo/SoC-FinTech,260990290,SystemVerilog,SoC-FinTech,56782,7,2023-08-30 19:23:33+00:00,[],https://api.github.com/licenses/mit
4367,https://github.com/chenyangbing/Memory.git,2020-03-14 15:55:02+00:00,,2,chenyangbing/Memory,247306675,SystemVerilog,Memory,6,7,2024-02-27 05:39:04+00:00,['systemverilog'],
4368,https://github.com/rubinsteina13/SV_I2S_RX_CORE.git,2020-06-03 09:08:15+00:00,Synthesizable SystemVerilog IP-Core of the I2S Receiver,2,rubinsteina13/SV_I2S_RX_CORE,269041127,SystemVerilog,SV_I2S_RX_CORE,85,7,2024-04-05 10:17:22+00:00,"['verilog', 'hdl', 'systemverilog', 'system-verilog', 'asic-design', 'i2s', 'i2s-dac', 'cpld', 'fpga', 'ip-core']",https://api.github.com/licenses/mit
4369,https://github.com/gvsrmk/Design-and-Verification-of-DDR3-SDRAM-memory-controller.git,2020-03-04 23:16:22+00:00,"Designed a closed page policy memory controller following the timing specifications for DDR3 DRAM in system verilog. Was responsible for setting up the interfaces and writing tasks for various operations. Performed randomized, Constrained, and directed test cases to validate our DUT.",1,gvsrmk/Design-and-Verification-of-DDR3-SDRAM-memory-controller,245023970,SystemVerilog,Design-and-Verification-of-DDR3-SDRAM-memory-controller,52,6,2023-10-27 02:55:58+00:00,[],
4370,https://github.com/amiq-consulting/amiq_reg_agt.git,2020-03-09 14:59:08+00:00,Register Agent,3,amiq-consulting/amiq_reg_agt,246065313,SystemVerilog,amiq_reg_agt,53,6,2022-06-30 01:33:06+00:00,[],https://api.github.com/licenses/apache-2.0
4371,https://github.com/QianfengClarkShen/easy_fifo.git,2020-03-13 18:56:47+00:00,a low latency FIFO wrote in systemverilog,2,QianfengClarkShen/easy_fifo,247142084,SystemVerilog,easy_fifo,106,6,2023-09-30 01:39:57+00:00,[],https://api.github.com/licenses/mit
4372,https://github.com/Emi-Pushpam/AHB-with-FIFO.git,2020-03-04 09:02:18+00:00,UVM methodology,1,Emi-Pushpam/AHB-with-FIFO,244853389,SystemVerilog,AHB-with-FIFO,33,6,2024-02-18 05:52:12+00:00,[],
4373,https://github.com/hypernyan/hdl_generics.git,2020-05-23 12:50:05+00:00,Generic HDL components to be used in different projects,4,hypernyan/hdl_generics,266335681,SystemVerilog,hdl_generics,95,6,2023-08-07 20:58:39+00:00,[],
4374,https://github.com/anthonyabeo/digital_circuits.git,2020-06-01 20:38:07+00:00,A collection of digital logic circuits,3,anthonyabeo/digital_circuits,268627200,SystemVerilog,digital_circuits,56,6,2023-04-30 12:38:03+00:00,"['systemverilog', 'logic-design', 'logic-synthesis', 'digital-circuit']",
4375,https://github.com/artemglukhov/FLOG_BFLOAT16.git,2020-03-12 09:32:07+00:00,SystemVerilog implementation of the natural logarithm for a Floating Point Unit (FPU) employing the 16-bit brain-inspired floating-point format (bFloat).,0,artemglukhov/FLOG_BFLOAT16,246794808,SystemVerilog,FLOG_BFLOAT16,3237,6,2023-12-04 14:44:36+00:00,[],
4376,https://github.com/AndyEveritt/picoMIPS.git,2020-06-03 12:58:59+00:00,Small scale picoMIPS processor to perform affine transforms. For ELEC6234 University of Southampton,0,AndyEveritt/picoMIPS,269088897,SystemVerilog,picoMIPS,724,6,2024-04-08 15:11:03+00:00,[],https://api.github.com/licenses/gpl-3.0
4377,https://github.com/hiremathpriyag/i2c_uvm.git,2020-05-06 05:47:28+00:00,,2,hiremathpriyag/i2c_uvm,261663735,SystemVerilog,i2c_uvm,15932,5,2024-03-24 03:06:04+00:00,[],
4378,https://github.com/litex-hub/pythondata-cpu-blackparrot.git,2020-02-23 19:27:34+00:00,Python module containing system_verilog files for blackparrot cpu (for use with LiteX).,3,litex-hub/pythondata-cpu-blackparrot,242577527,SystemVerilog,pythondata-cpu-blackparrot,25760,5,2021-09-26 17:02:20+00:00,[],https://api.github.com/licenses/bsd-3-clause
4379,https://github.com/PacoReinaCampo/SoC-NTM.git,2020-05-03 17:24:23+00:00,Neural Turing Machine for a System on Chip verified with UVM/OSVVM/FV,2,PacoReinaCampo/SoC-NTM,260983128,SystemVerilog,SoC-NTM,76596,5,2023-08-30 18:41:46+00:00,"['neural-network', 'soc', 'differentiable-neural-computer', 'neural-turing-machine']",https://api.github.com/licenses/mit
4380,https://github.com/lookwhoistalkinguvm/iic_uvm_tb.git,2020-06-01 08:03:20+00:00,I2C testbench using the UVM,2,lookwhoistalkinguvm/iic_uvm_tb,268460807,SystemVerilog,iic_uvm_tb,69,5,2024-03-30 15:01:43+00:00,[],https://api.github.com/licenses/mit
4381,https://github.com/yuxiang660/learning-systemVerilog.git,2020-05-20 15:31:04+00:00,learning notes of SystemVerilog与功能验证,2,yuxiang660/learning-systemVerilog,265608699,SystemVerilog,learning-systemVerilog,839,5,2022-07-02 02:18:42+00:00,[],
4382,https://github.com/j1s1e1/VerilogFarrowFilter.git,2020-04-19 16:36:37+00:00,Fractional interpolation using a Farrow structure,4,j1s1e1/VerilogFarrowFilter,257049403,SystemVerilog,VerilogFarrowFilter,18,5,2024-01-30 08:10:59+00:00,[],https://api.github.com/licenses/mit
4383,https://github.com/mist-devel/nes.git,2020-05-29 19:02:05+00:00,NES core,7,mist-devel/nes,267934009,SystemVerilog,nes,587,5,2023-03-05 19:25:51+00:00,[],
4384,https://github.com/hakula139/MIPS-CPU.git,2020-03-12 13:35:49+00:00,A MIPS processor with Cache and Advanced Branch Predictor written in SystemVerilog,1,hakula139/MIPS-CPU,246843072,SystemVerilog,MIPS-CPU,3160,4,2023-12-26 03:33:42+00:00,"['mips-processor', 'systemverilog', 'cache', 'branch-prediction', 'pipeline']",https://api.github.com/licenses/gpl-3.0
4385,https://github.com/hcyang99/rv32-core.git,2020-05-06 16:16:07+00:00,"Arbitary superscalar out-of-order RV32I core, with instruction prefetching and write-back no-write-allocate DCache.",2,hcyang99/rv32-core,261814047,SystemVerilog,rv32-core,77941,4,2023-04-04 22:12:15+00:00,"['systemverilog-hdl', 'riscv32', 'risc-processor']",
4386,https://github.com/oz-matt/Axi-Lite-SVA.git,2020-05-16 15:40:09+00:00,Assertion property files for axi lite slaves/masters,1,oz-matt/Axi-Lite-SVA,264469285,SystemVerilog,Axi-Lite-SVA,49,4,2023-05-10 21:00:57+00:00,[],
4387,https://github.com/hdl-util/clock-domain-crossing.git,2020-05-23 23:00:30+00:00,Utilities for clock-domain crossing with an FPGA,2,hdl-util/clock-domain-crossing,266433518,SystemVerilog,clock-domain-crossing,7,4,2023-09-23 20:30:59+00:00,"['clock-synchronization', 'clock-domain-crossing', 'clock-domains', 'fpga', 'systemverilog', 'verilog']",
4388,https://github.com/lowRISC/gsoc-sim-mem.git,2020-06-01 10:17:57+00:00,A simulated memory controller for use in FPGA designs that want to model real system performance,0,lowRISC/gsoc-sim-mem,268489401,SystemVerilog,gsoc-sim-mem,145,4,2021-07-12 13:32:03+00:00,[],https://api.github.com/licenses/apache-2.0
4389,https://github.com/PacoReinaCampo/PU-NTM.git,2020-05-03 21:42:41+00:00,Neural Turing Machine for a Processing Unit verified with UVM/OSVVM/FV,2,PacoReinaCampo/PU-NTM,261026514,SystemVerilog,PU-NTM,89965,4,2023-08-29 18:53:44+00:00,"['neural-network', 'pu', 'differentiable-neural-computer', 'neural-turing-machine']",https://api.github.com/licenses/mit
4390,https://github.com/fifthheaven/SMC_Verification.git,2020-04-28 02:07:36+00:00,verify SMC via UVM,0,fifthheaven/SMC_Verification,259506129,SystemVerilog,SMC_Verification,42,4,2023-08-03 07:24:25+00:00,[],
4391,https://github.com/supranational/vdf-fpga-round3-results.git,2020-03-06 18:19:32+00:00,Results from the final round of the VDF competition focused on alternate constructions.,2,supranational/vdf-fpga-round3-results,245489096,SystemVerilog,vdf-fpga-round3-results,2273,4,2023-05-29 14:45:56+00:00,[],
4392,https://github.com/karthik-0398/picoMIPS.git,2020-06-11 08:41:47+00:00,picoMIPS processor doing affine transformation,1,karthik-0398/picoMIPS,271495678,SystemVerilog,picoMIPS,17340,4,2024-04-11 10:27:48+00:00,[],https://api.github.com/licenses/mit
4393,https://github.com/rubinsteina13/SV_CLARKE_TRANSFORMATION_CORES.git,2020-02-29 14:18:15+00:00,Synthesizable SystemVerilog IP-Cores of the Forward and Backward Clarke Transformation,0,rubinsteina13/SV_CLARKE_TRANSFORMATION_CORES,243981472,SystemVerilog,SV_CLARKE_TRANSFORMATION_CORES,25,4,2024-02-26 00:11:46+00:00,"['systemverilog', 'verilog', 'fpga', 'digital-signal-processing', 'asic-design', 'digital-design', 'cpld', 'ip-core']",https://api.github.com/licenses/mit
4394,https://github.com/HaogeL/apb_uart_UVM_structure.git,2020-02-15 11:56:18+00:00,,0,HaogeL/apb_uart_UVM_structure,240701185,SystemVerilog,apb_uart_UVM_structure,95,4,2024-03-15 13:28:57+00:00,[],
4395,https://github.com/PacoReinaCampo/PU-DV.git,2020-03-04 03:17:00+00:00,Processing Unit verified with UVM/OSVVM/FV,4,PacoReinaCampo/PU-DV,244796832,SystemVerilog,PU-DV,14315,4,2024-02-24 10:30:38+00:00,"['risc-v', 'openrisc', 'msp340', 'pu', 'uvm', 'osvvm', 'formal-verification']",https://api.github.com/licenses/mit
4396,https://github.com/mateuspinto/simplified-mips-pipeline.git,2020-06-20 14:20:01+00:00,A synthesizable simplified MIPS written in System Verilog,0,mateuspinto/simplified-mips-pipeline,273722117,SystemVerilog,simplified-mips-pipeline,23,4,2022-10-12 15:00:33+00:00,"['systemverilog', 'systemverilog-hdl', 'mips', 'hardware', 'hardware-designs']",
4397,https://github.com/neofangnv/core-v-isg.git,2020-04-20 06:44:28+00:00,RISC-V Random Instruction Stream Generator,3,neofangnv/core-v-isg,257194742,SystemVerilog,core-v-isg,127,4,2024-01-11 07:01:58+00:00,[],
4398,https://github.com/PacoReinaCampo/MPSoC-MPI.git,2020-02-23 15:10:56+00:00,Message Passing Interface for MPSoC,1,PacoReinaCampo/MPSoC-MPI,242538742,SystemVerilog,MPSoC-MPI,18411,3,2023-03-31 16:26:15+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
4399,https://github.com/mankelly/VerilogProjects.git,2020-02-24 19:42:59+00:00,All projects that utilize the Verilog & SystemVerilog HDL's.,1,mankelly/VerilogProjects,242827170,SystemVerilog,VerilogProjects,616,3,2022-11-02 06:29:35+00:00,"['verilog', 'systemverilog', 'fpga', 'xilinx', 'embedded-systems', 'system-on-chip']",
4400,https://github.com/ShanghaitechGeekPie/FPGA-tutorial.git,2020-06-27 11:12:01+00:00,A self tutorial to let you gain some naive knowledge about FPGA,1,ShanghaitechGeekPie/FPGA-tutorial,275355477,SystemVerilog,FPGA-tutorial,5380,3,2024-02-19 10:48:15+00:00,[],
4401,https://github.com/PacoReinaCampo/MPSoC-SPRAM.git,2020-02-23 15:15:14+00:00,Single-Port RAM for Instruction & Data for MPSoC,2,PacoReinaCampo/MPSoC-SPRAM,242539390,SystemVerilog,MPSoC-SPRAM,16425,3,2024-01-12 18:12:05+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
4402,https://github.com/PineXmas/ece593_axi4lite_verification.git,2020-05-27 06:47:39+00:00,,4,PineXmas/ece593_axi4lite_verification,267242567,SystemVerilog,ece593_axi4lite_verification,72,3,2023-08-26 08:18:25+00:00,[],
4403,https://github.com/hchsiao/axis_image_vip.git,2020-05-08 16:24:21+00:00,,0,hchsiao/axis_image_vip,262372205,SystemVerilog,axis_image_vip,451,3,2023-03-14 09:23:03+00:00,[],
4404,https://github.com/verification-gentleman-blog/comparison-of-formal-and-simulation.git,2020-05-01 10:26:07+00:00,,4,verification-gentleman-blog/comparison-of-formal-and-simulation,260432409,SystemVerilog,comparison-of-formal-and-simulation,145,3,2023-01-18 07:33:30+00:00,[],https://api.github.com/licenses/apache-2.0
4405,https://github.com/MattiaMartignoni/bfloat16_Exponential.git,2020-04-21 09:33:45+00:00,SystemVerilog module implementing the exponential function for bfloat16 numbers using both Cordic and Taylor algorithms,1,MattiaMartignoni/bfloat16_Exponential,257546494,SystemVerilog,bfloat16_Exponential,184321,3,2024-04-04 07:37:00+00:00,[],
4406,https://github.com/tudortimi/uvm-extras.git,2020-05-03 07:57:11+00:00,Extensions to the UVM,2,tudortimi/uvm-extras,260854774,SystemVerilog,uvm-extras,35,3,2023-08-28 17:30:41+00:00,[],https://api.github.com/licenses/apache-2.0
4407,https://github.com/gvilardefarias/Hardware-Data-Structures.git,2020-03-29 03:49:19+00:00,"A systemverilog implementation of the data structures: priority queue, queue and stack",1,gvilardefarias/Hardware-Data-Structures,250948298,SystemVerilog,Hardware-Data-Structures,10,3,2024-02-06 15:15:27+00:00,"['hardware', 'hdl', 'verilog', 'systemverilog', 'rtl', 'data-structures', 'open-hardware', 'hardware-description-language', 'system-verilog', 'system', 'priority-queue', 'stack', 'fifo']",
4408,https://github.com/elifnurisman/XOHW20_128_RISCV_ISA_Extension.git,2020-06-25 11:15:34+00:00,Repository for Xilinx Open Hardware 2020 Competition of Group #128 ,1,elifnurisman/XOHW20_128_RISCV_ISA_Extension,274896639,SystemVerilog,XOHW20_128_RISCV_ISA_Extension,3724,3,2022-12-07 21:18:02+00:00,[],https://api.github.com/licenses/gpl-3.0
4409,https://github.com/PrintedComputing/TP-ISA-Core.git,2020-04-27 02:03:15+00:00,,0,PrintedComputing/TP-ISA-Core,259179343,SystemVerilog,TP-ISA-Core,264,3,2023-01-23 14:32:28+00:00,[],
4410,https://github.com/MazinLab/mkidgen3_blocks.git,2020-05-20 18:28:24+00:00,Collection of gen3 readout FPGA blocks and submodules for Vivado,0,MazinLab/mkidgen3_blocks,265653324,SystemVerilog,mkidgen3_blocks,117,3,2024-01-04 15:23:40+00:00,[],
4411,https://github.com/PacoReinaCampo/MPSoC-GPIO.git,2020-02-23 15:11:46+00:00,General Purpose Input Output for MPSoC,4,PacoReinaCampo/MPSoC-GPIO,242538853,SystemVerilog,MPSoC-GPIO,18677,3,2023-03-31 16:26:11+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
4412,https://github.com/raminrasoulinezhad/MLBlocks.git,2020-04-06 07:33:10+00:00,,0,raminrasoulinezhad/MLBlocks,253426748,SystemVerilog,MLBlocks,102989,3,2024-03-22 08:08:39+00:00,[],
4413,https://github.com/PacoReinaCampo/MPSoC-UART.git,2020-02-23 15:12:48+00:00,Universal Asynchronous Receiver-Transmitter for MPSoC,3,PacoReinaCampo/MPSoC-UART,242539018,SystemVerilog,MPSoC-UART,19530,3,2024-02-11 04:56:03+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
4414,https://github.com/maban-b/AHB_Lite.git,2020-06-15 06:43:59+00:00,,0,maban-b/AHB_Lite,272362157,SystemVerilog,AHB_Lite,21,2,2022-11-14 16:06:21+00:00,[],
4415,https://github.com/lsteveol/gr_uvm_reg_agent.git,2020-04-29 17:43:33+00:00,UVM Register Agent used with the gen_regs flow,0,lsteveol/gr_uvm_reg_agent,259998465,SystemVerilog,gr_uvm_reg_agent,53,2,2023-04-26 03:39:57+00:00,[],https://api.github.com/licenses/apache-2.0
4416,https://github.com/mharvy/OperationTadpole.git,2020-04-24 18:52:52+00:00,Converts pytorch models into System Verilog that can run on FPGA,0,mharvy/OperationTadpole,258597533,SystemVerilog,OperationTadpole,46,2,2023-12-11 00:07:44+00:00,[],
4417,https://github.com/letitbe0201/NXP-SAC57D54H-SMC-Verification.git,2020-04-17 06:55:17+00:00,,0,letitbe0201/NXP-SAC57D54H-SMC-Verification,256426210,SystemVerilog,NXP-SAC57D54H-SMC-Verification,316,2,2024-03-12 06:25:16+00:00,[],
4418,https://github.com/johnmatson/fpga-channel-strip.git,2020-03-12 02:04:00+00:00,A real-time FPGA audio processing channel strip.,1,johnmatson/fpga-channel-strip,246721654,SystemVerilog,fpga-channel-strip,649113,2,2023-01-11 21:32:59+00:00,[],
4419,https://github.com/kristoforlovsky/asicde-SystemVerilog-visualization-test.git,2020-04-27 11:45:50+00:00,Mainly testing repository for our web IDE tool processing SystemVerilog language and visualizing them as block diagrams,0,kristoforlovsky/asicde-SystemVerilog-visualization-test,259297663,SystemVerilog,asicde-SystemVerilog-visualization-test,48,2,2021-02-27 15:15:12+00:00,[],
4420,https://github.com/melike1818/CS223-LABS.git,2020-05-07 21:10:24+00:00,CS223 Digital Design Lab Assignments (System Verilog),0,melike1818/CS223-LABS,262159278,SystemVerilog,CS223-LABS,4684,2,2023-11-23 15:12:01+00:00,[],
4421,https://github.com/xycfwrj/mipi-csi-tx.git,2020-04-09 03:55:52+00:00,"mipi csi tx dphy, on intel MAX10",1,xycfwrj/mipi-csi-tx,254266277,SystemVerilog,mipi-csi-tx,15,2,2020-04-13 04:36:41+00:00,[],
4422,https://github.com/ufukpalpas/Cellular-automata-game.git,2020-03-20 09:28:53+00:00,An cellular automata game for a 8x8 matrix on the BetiBoard. (requires Basys3 board),0,ufukpalpas/Cellular-automata-game,248716360,SystemVerilog,Cellular-automata-game,64,2,2020-12-13 11:13:08+00:00,"['systemverilog', 'vivado', 'xilinx', 'basys3', 'basys3-fpga', 'cellular-automata']",https://api.github.com/licenses/apache-2.0
4423,https://github.com/blu2018/OpenTitan.git,2020-06-22 21:35:56+00:00,,0,blu2018/OpenTitan,274247247,SystemVerilog,OpenTitan,15642,2,2021-12-07 06:34:28+00:00,[],https://api.github.com/licenses/apache-2.0
4424,https://github.com/minjiexm/svlib_0.5.git,2020-05-19 14:17:35+00:00,"svlib is a free, open-source library of utility functions for SystemVerilog. It includes file and string manipulation functions, full regular expression search/replace, easy reading and writing of configuration files, access to environment variables and wall-clock time, and much more. This project was presented at DVCon 2014.",0,minjiexm/svlib_0.5,265267318,SystemVerilog,svlib_0.5,540,2,2021-12-29 17:01:13+00:00,[],
4425,https://github.com/raja10rajesh/UVM_ethernet_Switch.git,2020-05-18 15:59:55+00:00,UVM testing methodology for ethernet switch,1,raja10rajesh/UVM_ethernet_Switch,264989966,SystemVerilog,UVM_ethernet_Switch,119,2,2022-08-25 09:49:15+00:00,[],
4426,https://github.com/Hazematman/Haze-Pixel-Processor.git,2020-04-06 22:43:41+00:00,A homebrew PPU written in system verilog,0,Hazematman/Haze-Pixel-Processor,253632431,SystemVerilog,Haze-Pixel-Processor,37,2,2023-12-05 15:18:23+00:00,[],
4427,https://github.com/estejairo/muon-daq.git,2020-05-25 14:21:06+00:00,Muon Detector DAQ,0,estejairo/muon-daq,266798596,SystemVerilog,muon-daq,44942,2,2022-07-11 06:45:28+00:00,[],
4428,https://github.com/Lombiq/Hastlayer-Hardware-Framework---Vitis.git,2020-03-28 22:52:18+00:00,Hardware-side component of Hastlayer for Xilinx Vitis FPGAs. See https://hastlayer.com for details.,2,Lombiq/Hastlayer-Hardware-Framework---Vitis,250909649,SystemVerilog,Hastlayer-Hardware-Framework---Vitis,7169,2,2023-02-15 20:18:03+00:00,"['fpga', 'vitis', 'xilinx']",https://api.github.com/licenses/bsd-3-clause
4429,https://github.com/PacoReinaCampo/MPSoC-FinTech.git,2020-05-03 18:04:59+00:00,Financial Technology with MPSoC-NTM verified with UVM/OSVVM/FV,1,PacoReinaCampo/MPSoC-FinTech,260990403,SystemVerilog,MPSoC-FinTech,57607,2,2023-08-30 19:23:34+00:00,[],https://api.github.com/licenses/mit
4430,https://github.com/armleo/ArmleoCPU.git,2020-02-22 13:22:34+00:00,"ArmleoCPU - RISC-V CPU RV64GC, SMP, Linux, Doom. Work in progress to execute first instruction with new feature set",0,armleo/ArmleoCPU,242345446,SystemVerilog,ArmleoCPU,2458,2,2023-09-27 03:51:05+00:00,"['risc-v', 'riscv32', 'risc', 'verilog', 'mmu', 'cpu', 'cache', 'linux', 'sbi', 'atomics']",https://api.github.com/licenses/gpl-3.0
4431,https://github.com/jnestor/systolic_pq.git,2020-04-22 18:46:40+00:00,A SystemVerilog implementation of Lieserson's Systolic Priority Queue,2,jnestor/systolic_pq,257990530,SystemVerilog,systolic_pq,9,2,2021-04-30 05:42:20+00:00,[],
4432,https://github.com/Smattacus/pipelined-mips.git,2020-02-16 04:50:15+00:00,"Pipelined MIPS processor based on Harris & Harris Digital Design and Computer Architecture, 2nd Ed.",0,Smattacus/pipelined-mips,240833266,SystemVerilog,pipelined-mips,424,2,2022-12-07 04:14:51+00:00,[],
4433,https://github.com/roman-pogorelov/verlib.git,2020-05-11 18:36:19+00:00,Library of different Verilog/SystemVerilog components for FPGA implementation,0,roman-pogorelov/verlib,263126199,SystemVerilog,verlib,489,2,2024-03-25 15:11:09+00:00,[],
4434,https://github.com/ErickOF/VGA-Controller-FPGA.git,2020-02-17 20:49:05+00:00,,0,ErickOF/VGA-Controller-FPGA,241205026,SystemVerilog,VGA-Controller-FPGA,7,2,2023-08-26 17:00:58+00:00,"['systemverilog', 'vga-controller']",
4435,https://github.com/SumitMondal/wormholeRouter.git,2020-03-27 18:50:02+00:00,RTL NoC Router with Wormhole Flow Control,0,SumitMondal/wormholeRouter,250618982,SystemVerilog,wormholeRouter,19,2,2022-06-17 11:29:24+00:00,[],
4436,https://github.com/roman-pogorelov/sata_ipcore.git,2020-05-11 19:03:17+00:00,SATA host core for Intel (Altera) FPGAs,1,roman-pogorelov/sata_ipcore,263132289,SystemVerilog,sata_ipcore,6499,2,2023-06-26 16:02:16+00:00,[],
4437,https://github.com/wyt2000/ustc-nscscc-2020-1.git,2020-06-10 12:30:12+00:00,USTC NSCSCC-2020-1,2,wyt2000/ustc-nscscc-2020-1,271271271,SystemVerilog,ustc-nscscc-2020-1,35226,2,2020-08-25 00:54:16+00:00,[],
4439,https://github.com/PacoReinaCampo/MPSoC-MPRAM.git,2020-02-23 15:13:53+00:00,Multi-Port RAM for Instruction & Data for MPSoC,4,PacoReinaCampo/MPSoC-MPRAM,242539177,SystemVerilog,MPSoC-MPRAM,19045,2,2024-01-12 18:12:05+00:00,"['ahb3-lite', 'wishbone']",https://api.github.com/licenses/mit
4440,https://github.com/konstantinosskoutelis/Connect-4-FPGA.git,2020-06-10 08:22:09+00:00,,0,konstantinosskoutelis/Connect-4-FPGA,271220534,SystemVerilog,Connect-4-FPGA,1410,2,2021-04-11 17:50:03+00:00,[],
4441,https://github.com/redrabbit329/Vitis-AI.git,2020-03-04 00:51:37+00:00,Xilinx Vitis-AI Mirroring & Practice,0,redrabbit329/Vitis-AI,244774809,SystemVerilog,Vitis-AI,443776,2,2022-03-18 18:28:23+00:00,[],https://api.github.com/licenses/apache-2.0
4442,https://github.com/fpgasystems/bit_serial_kmeans.git,2020-03-19 11:10:53+00:00,,3,fpgasystems/bit_serial_kmeans,248482338,SystemVerilog,bit_serial_kmeans,53,2,2023-07-25 10:31:53+00:00,[],
4443,https://github.com/selvaruban-johnson/AMBA_APB_SV.git,2020-06-14 17:57:14+00:00,,0,selvaruban-johnson/AMBA_APB_SV,272255553,SystemVerilog,AMBA_APB_SV,33,2,2021-11-11 09:45:33+00:00,[],
4444,https://github.com/rubinsteina13/SV_DSM_CORE.git,2020-06-03 08:49:25+00:00,Synthesizable SystemVerilog IP-Core of the First-Order Delta-Sigma Modulator,1,rubinsteina13/SV_DSM_CORE,269037071,SystemVerilog,SV_DSM_CORE,52,2,2022-05-20 08:38:47+00:00,"['verilog', 'system-verilog', 'asic-design', 'ip-core', 'cpld', 'fpga', 'digital-signal-processing', 'dac']",https://api.github.com/licenses/mit
4445,https://github.com/megora/SERDES.git,2020-04-07 17:51:18+00:00,"A serial to parallel converter (SERDES) which can be switched between 8, 10 and 12 bit.",1,megora/SERDES,253870801,SystemVerilog,SERDES,232,2,2023-10-20 08:29:36+00:00,[],
4446,https://github.com/hdl-util/gray-code.git,2020-05-23 20:21:40+00:00,Generate a gray code of arbitrary width in SystemVerilog,1,hdl-util/gray-code,266413207,SystemVerilog,gray-code,10,2,2022-04-12 07:32:17+00:00,"['systemverilog', 'graycode', 'gray-code', 'gray', 'code', 'fpga', 'coding']",
4447,https://github.com/PacoReinaCampo/gnudebian.git,2020-05-03 20:39:31+00:00,Distribution for RTOS,2,PacoReinaCampo/gnudebian,261016757,SystemVerilog,gnudebian,10139,2,2023-01-18 16:03:21+00:00,[],https://api.github.com/licenses/mit
4448,https://github.com/taraBarghian/multi-cycle-RISK-V-CPU.git,2020-06-23 07:36:42+00:00,Multi-Cycle Processor Design & Implementation  The final project of computer architecture course (SBU),0,taraBarghian/multi-cycle-RISK-V-CPU,274340480,SystemVerilog,multi-cycle-RISK-V-CPU,13,2,2021-07-23 16:45:50+00:00,[],
4449,https://github.com/CarlosH14/Arquitectura-UTP.git,2020-05-28 23:29:19+00:00,Procesador Monociclo,0,CarlosH14/Arquitectura-UTP,267718898,SystemVerilog,Arquitectura-UTP,1764,2,2021-11-25 00:40:08+00:00,[],https://api.github.com/licenses/bsd-3-clause
4450,https://github.com/Jimmyokok/MIPS.git,2020-04-24 14:31:32+00:00,Assignments of ICS-Spring20-Fudan,0,Jimmyokok/MIPS,258535963,SystemVerilog,MIPS,1768,2,2022-09-16 03:48:05+00:00,[],
4451,https://github.com/hdl-util/rand.git,2020-06-26 15:23:57+00:00,"Random number generators such as LFSRs, LHCAs",1,hdl-util/rand,275187361,SystemVerilog,rand,16,2,2023-08-30 13:59:52+00:00,[],
4452,https://github.com/wedddy0707/CPUEX_x86-64.git,2020-03-01 15:07:59+00:00,x86-64のコアを書きたい,0,wedddy0707/CPUEX_x86-64,244170467,SystemVerilog,CPUEX_x86-64,270,2,2022-03-23 07:56:44+00:00,[],
4453,https://github.com/agarwal-220196/Multicore-Mesi-protocol-verification.git,2020-05-19 03:52:57+00:00,,0,agarwal-220196/Multicore-Mesi-protocol-verification,265137814,SystemVerilog,Multicore-Mesi-protocol-verification,40842,2,2021-10-13 16:26:06+00:00,[],
4454,https://github.com/minjiexm/uvm-1.1d.git,2020-04-08 06:23:52+00:00,uvm-1.1d source code,0,minjiexm/uvm-1.1d,254003342,SystemVerilog,uvm-1.1d,2841,2,2023-03-05 17:14:32+00:00,[],https://api.github.com/licenses/apache-2.0
4455,https://github.com/pulp-platform/afe_readout_subsystem.git,2020-03-27 18:17:02+00:00,AFE Readout Subsystem,1,pulp-platform/afe_readout_subsystem,250611226,SystemVerilog,afe_readout_subsystem,69,2,2024-04-07 05:18:43+00:00,[],
4456,https://github.com/selvaruban-johnson/APB_UVM.git,2020-06-14 17:52:04+00:00,,0,selvaruban-johnson/APB_UVM,272254659,SystemVerilog,APB_UVM,12,2,2023-02-15 10:47:44+00:00,[],
4457,https://github.com/lookout1992/sync-fifo.git,2020-06-10 03:31:35+00:00,"code for sync-fifo, the reading time of SARM is delayed 1 cycle.",0,lookout1992/sync-fifo,271170435,SystemVerilog,sync-fifo,12,1,2020-06-29 14:31:26+00:00,[],
4458,https://github.com/weibes/EE371Labs.git,2020-05-17 18:25:00+00:00,,0,weibes/EE371Labs,264730444,SystemVerilog,EE371Labs,11691,1,2021-05-20 18:47:51+00:00,[],
4459,https://github.com/DSVtool/ahb2apb.git,2020-05-25 13:21:08+00:00,,0,DSVtool/ahb2apb,266784721,SystemVerilog,ahb2apb,114,1,2020-10-20 15:49:13+00:00,[],
4460,https://github.com/icepear-jzx/USTC-CA-2020.git,2020-04-05 10:45:00+00:00,,0,icepear-jzx/USTC-CA-2020,253211328,SystemVerilog,USTC-CA-2020,30005,1,2020-08-30 09:00:32+00:00,[],
4461,https://github.com/Codetector1374/tiny_rv32.git,2020-04-11 20:26:32+00:00,,0,Codetector1374/tiny_rv32,254949378,SystemVerilog,tiny_rv32,30,1,2021-01-25 21:44:34+00:00,[],
4462,https://github.com/yg2m19/cycle_computer.git,2020-06-12 15:05:59+00:00,ELEC6231 VLSI Project/ Systemverilog code of cycle computer,0,yg2m19/cycle_computer,271826241,SystemVerilog,cycle_computer,3271,1,2020-06-12 16:07:43+00:00,[],
4463,https://github.com/oz-matt/UVM-simprisc-ws.git,2020-06-10 05:58:12+00:00,UVM testing suite for the SimpRisc CPU,1,oz-matt/UVM-simprisc-ws,271191686,SystemVerilog,UVM-simprisc-ws,22330,1,2022-01-04 07:49:04+00:00,[],
4464,https://github.com/litex-hub/pythondata-cpu-cv32e40p.git,2020-05-20 17:20:18+00:00,Python module containing system_verilog files for cv32e40p cpu (for use with LiteX).,5,litex-hub/pythondata-cpu-cv32e40p,265636711,SystemVerilog,pythondata-cpu-cv32e40p,3301,1,2022-01-10 18:04:22+00:00,[],
4465,https://github.com/vogelpi/vendor_example.git,2020-02-20 19:43:58+00:00,A simple example showing how to use the OT vendor tool for using the usbdev in another project.,0,vogelpi/vendor_example,241974359,SystemVerilog,vendor_example,104,1,2023-11-27 10:00:31+00:00,[],
4466,https://github.com/iis-eth-zurich/hemera.git,2020-06-16 14:56:51+00:00,Hemera: Integrating a PULP Cluster With a Microcontroller Host Processor Using the HERO Framework,1,iis-eth-zurich/hemera,272737234,SystemVerilog,hemera,31456,1,2021-05-19 06:23:29+00:00,[],
4467,https://github.com/ErickOF/CE4301-ASIP-for-decryption-using-RSA.git,2020-06-01 01:10:31+00:00,,0,ErickOF/CE4301-ASIP-for-decryption-using-RSA,268394456,SystemVerilog,CE4301-ASIP-for-decryption-using-RSA,6758,1,2023-12-26 00:13:37+00:00,[],
4468,https://github.com/briansune/kintex-7-HDMI-LoopBack.git,2020-05-13 00:59:37+00:00,,0,briansune/kintex-7-HDMI-LoopBack,263489299,SystemVerilog,kintex-7-HDMI-LoopBack,1325,1,2022-03-30 20:56:13+00:00,"['fpga', 'hdmi', 'verilog', 'vhdl', 'pcb']",https://api.github.com/licenses/gpl-3.0
4469,https://github.com/sid-xyz/NeuralNet.git,2020-04-20 16:12:58+00:00,Neural Network in Verilog - Work in Progress,0,sid-xyz/NeuralNet,257336323,SystemVerilog,NeuralNet,48,1,2021-10-16 11:25:00+00:00,"['neural-network', 'machine-learning', 'verilog', 'fpga', 'academic-project']",https://api.github.com/licenses/mit
4470,https://github.com/pawarsumeet81/Design-and-Verification-of-DDR3-Memory-Controller-using-SystemVerilog.git,2020-03-30 03:11:50+00:00,Design-and-Verification-of-DDR3-Memory-Controller-using-SystemVerilog,0,pawarsumeet81/Design-and-Verification-of-DDR3-Memory-Controller-using-SystemVerilog,251188808,SystemVerilog,Design-and-Verification-of-DDR3-Memory-Controller-using-SystemVerilog,53,1,2020-11-22 08:59:11+00:00,[],
4471,https://github.com/hdlguy/AD7946.git,2020-03-31 15:05:11+00:00,logic to control the TI AD7946,0,hdlguy/AD7946,251639260,SystemVerilog,AD7946,28,1,2024-01-04 13:55:34+00:00,[],https://api.github.com/licenses/mit
4472,https://github.com/Connie120/CNN.git,2020-05-12 20:21:37+00:00,CMU research CNN,0,Connie120/CNN,263443649,SystemVerilog,CNN,51256,1,2020-08-10 19:51:25+00:00,[],
4473,https://github.com/wilson07code/Asynchronous_fifo_UVM.git,2020-05-17 13:46:37+00:00,,1,wilson07code/Asynchronous_fifo_UVM,264676861,SystemVerilog,Asynchronous_fifo_UVM,43,1,2023-03-29 20:20:22+00:00,[],
4474,https://github.com/RiordanPelayo/MIPS.git,2020-04-18 04:00:31+00:00,MIPS proccesor written in SystemVerilog,1,RiordanPelayo/MIPS,256665626,SystemVerilog,MIPS,2838,1,2020-05-28 14:20:18+00:00,[],
4475,https://github.com/bluewww/catv-riscv.git,2020-03-11 11:19:10+00:00,A small minimal RISC-V RV32 I core,0,bluewww/catv-riscv,246551404,SystemVerilog,catv-riscv,30,1,2023-01-04 07:55:11+00:00,[],
4476,https://github.com/gsw73/classifier.git,2020-06-20 23:02:35+00:00,A module to do lookup and classification using cuckoo hashing.,1,gsw73/classifier,273797672,SystemVerilog,classifier,44,1,2022-07-18 08:55:17+00:00,[],
4477,https://github.com/AndresCasasola/fpga.git,2020-02-21 09:36:24+00:00,Developing with FPGA,0,AndresCasasola/fpga,242103577,SystemVerilog,fpga,15576,1,2022-04-12 21:59:49+00:00,[],https://api.github.com/licenses/gpl-3.0
4478,https://github.com/RedFlag2017/ovm_tutorial.git,2020-06-15 12:28:26+00:00,This is a tutorial for OVM (Open Verification Methodology) testbench .,0,RedFlag2017/ovm_tutorial,272432685,SystemVerilog,ovm_tutorial,10,1,2022-06-10 18:08:49+00:00,"['ovm', 'testbench']",
4479,https://github.com/GLYgly-yiyi/fpga_maibo_vga.git,2020-04-22 07:50:02+00:00,,0,GLYgly-yiyi/fpga_maibo_vga,257829707,SystemVerilog,fpga_maibo_vga,97,1,2020-04-22 09:26:23+00:00,[],
4480,https://github.com/lisazaher/cpu-parallel.git,2020-04-24 17:27:49+00:00,16 Bit Processor Parallelized across 4 steps to achieve an IPC of 1. (designed in ECE342 - Computer Hardware),0,lisazaher/cpu-parallel,258578419,SystemVerilog,cpu-parallel,9135,1,2023-01-09 04:02:37+00:00,[],
4481,https://github.com/MspecialK/BFloat16-SQRT-using-Goldschmidt-s-Algorithm.git,2020-04-21 15:04:27+00:00,Implementation in System Verilog the Goldschmidt's algorithm for the square root and the inverse square root computation.,0,MspecialK/BFloat16-SQRT-using-Goldschmidt-s-Algorithm,257632138,SystemVerilog,BFloat16-SQRT-using-Goldschmidt-s-Algorithm,794,1,2024-02-06 21:36:27+00:00,[],
4482,https://github.com/bansil-vaghasiya/Permutation-engine-for-SHA-3-256-algorithm-.git,2020-06-12 06:35:05+00:00,Verilog code for Permutation engine for SHA-3 256 algorithm ,0,bansil-vaghasiya/Permutation-engine-for-SHA-3-256-algorithm-,271726700,SystemVerilog,Permutation-engine-for-SHA-3-256-algorithm-,592,1,2024-04-06 23:00:13+00:00,[],
4483,https://github.com/akseltorgerson/ECE551-FinalDesign-EBike.git,2020-02-27 15:10:19+00:00,An FPGA design to control an E-Bike,0,akseltorgerson/ECE551-FinalDesign-EBike,243546406,SystemVerilog,ECE551-FinalDesign-EBike,58313,1,2023-04-18 03:36:35+00:00,[],
4484,https://github.com/nbhatt15397/ECE-551.git,2020-05-29 20:11:08+00:00,This repo comprises of all the verilog programs worked on during the Spring'20 semester. ,0,nbhatt15397/ECE-551,267946090,SystemVerilog,ECE-551,34906,1,2023-10-16 15:27:21+00:00,[],
4485,https://github.com/MilanSimin/Projekat.git,2020-04-06 16:37:30+00:00,,0,MilanSimin/Projekat,253556958,SystemVerilog,Projekat,2753,1,2020-07-06 13:07:39+00:00,[],
4486,https://github.com/rotembarr/coronarepo.git,2020-03-15 17:11:16+00:00,,0,rotembarr/coronarepo,247512821,SystemVerilog,coronarepo,15815,1,2020-05-04 17:09:28+00:00,[],
4487,https://github.com/JunnanLi/Pipelined-Programmable-Parser.git,2020-03-19 07:28:37+00:00,A Pipelined Programmable Parser,1,JunnanLi/Pipelined-Programmable-Parser,248437951,SystemVerilog,Pipelined-Programmable-Parser,3667,1,2024-04-02 15:16:55+00:00,"['verilog', 'fpga', 'packet-parser']",https://api.github.com/licenses/mit
4488,https://github.com/pawarsumeet81/Verification-of-AMBA-AXI4-Lite-protocol.git,2020-06-26 03:04:26+00:00,,0,pawarsumeet81/Verification-of-AMBA-AXI4-Lite-protocol,275062268,SystemVerilog,Verification-of-AMBA-AXI4-Lite-protocol,13,1,2022-06-23 18:01:54+00:00,[],
4489,https://github.com/passant23/CNN-Convolutional-Neural-Network.git,2020-06-22 12:06:07+00:00,CNN- Convolutional Neural Network (SystemVerilog),0,passant23/CNN-Convolutional-Neural-Network,274126170,SystemVerilog,CNN-Convolutional-Neural-Network,4880,1,2022-11-25 20:59:20+00:00,[],
4490,https://github.com/kenzhang82/freedom-sandbox.git,2020-04-12 03:48:58+00:00,Complete simulation environment for SiFive freedom RISCV CPU platforms,1,kenzhang82/freedom-sandbox,255003542,SystemVerilog,freedom-sandbox,63,1,2021-03-21 17:11:21+00:00,"['riscv', 'rocketchip', 'cpu', 'verilog', 'chisel']",
4491,https://github.com/eladawy1988/SystemVerilog.git,2020-05-09 17:21:00+00:00,This repository contain all trainig codes and project used SystemVerilog language,1,eladawy1988/SystemVerilog,262621749,SystemVerilog,SystemVerilog,157,1,2021-11-09 06:29:18+00:00,[],
4492,https://github.com/XuYipei/FDU-ICS-SuperScalar.git,2020-06-06 14:08:13+00:00,,2,XuYipei/FDU-ICS-SuperScalar,270000210,SystemVerilog,FDU-ICS-SuperScalar,1084,1,2022-02-25 08:32:05+00:00,[],
4493,https://github.com/srishis/UART_RTL_DESIGN_AND_VERIFICATION.git,2020-05-25 07:25:43+00:00,System Verilog based RTL Design and Verification of UART design taken from FPGA Prototyping textbook by Pong Chu.,1,srishis/UART_RTL_DESIGN_AND_VERIFICATION,266712322,SystemVerilog,UART_RTL_DESIGN_AND_VERIFICATION,18,1,2021-07-05 15:42:10+00:00,[],
4494,https://github.com/motagiyash/alu_system_verilog_testbench.git,2020-02-21 07:12:38+00:00,,0,motagiyash/alu_system_verilog_testbench,242077033,SystemVerilog,alu_system_verilog_testbench,11,1,2020-02-26 09:52:42+00:00,[],
4495,https://github.com/ifd3f/Basys3-1D-Cellular-Automata.git,2020-02-25 22:22:15+00:00,,0,ifd3f/Basys3-1D-Cellular-Automata,243115386,SystemVerilog,Basys3-1D-Cellular-Automata,2807,1,2020-03-05 18:55:04+00:00,[],
4496,https://github.com/tutaveira/EEE488-Capstone.git,2020-03-15 17:23:26+00:00,,2,tutaveira/EEE488-Capstone,247514924,SystemVerilog,EEE488-Capstone,590,1,2020-03-23 06:20:36+00:00,[],
4497,https://github.com/zeeshanrafique23/Buraq-mini.git,2020-04-17 18:02:35+00:00,RISC-V 5-stage 32-bit (RV32IM) processor.,0,zeeshanrafique23/Buraq-mini,256575017,,Buraq-mini,54,1,2022-12-17 15:01:48+00:00,"['riscv32', 'systemverilog']",
4498,https://github.com/jrmoserbaltimore/risc-v-cpu.git,2020-04-11 13:53:43+00:00,A synchronous RISC-V CPU,0,jrmoserbaltimore/risc-v-cpu,254878502,SystemVerilog,risc-v-cpu,287,1,2020-05-23 22:31:51+00:00,[],
4499,https://github.com/hellgate202/img_proc_lib.git,2020-04-01 22:09:11+00:00,,1,hellgate202/img_proc_lib,252297480,SystemVerilog,img_proc_lib,2660,1,2023-01-23 21:47:47+00:00,[],https://api.github.com/licenses/gpl-3.0
4500,https://github.com/neoH/AUE.git,2020-03-29 14:07:12+00:00,Advanced UVM Examples,0,neoH/AUE,251047169,SystemVerilog,AUE,219,1,2020-10-15 15:19:47+00:00,[],
4501,https://github.com/deepika7497/PUMA_Core_RTL.git,2020-03-12 01:50:35+00:00,This is the RTL Model for Programmable Ultra-efficient Memristor based Accelerator (PUMA) with Digital Matrix Vector Multiplication Unit (MVMU).,1,deepika7497/PUMA_Core_RTL,246719641,SystemVerilog,PUMA_Core_RTL,138,1,2023-02-22 07:56:38+00:00,[],
4502,https://github.com/sunnymax2002/vlsi.git,2020-05-09 08:14:02+00:00,My hobbist development of Circuits and VLSI systems,0,sunnymax2002/vlsi,262522575,SystemVerilog,vlsi,47,1,2023-07-25 08:21:34+00:00,[],https://api.github.com/licenses/mit
4503,https://github.com/phyzhenli/Simon_Verilog.git,2020-05-25 15:57:15+00:00,Simon Cipher verilog/system verilog code.,0,phyzhenli/Simon_Verilog,266821104,SystemVerilog,Simon_Verilog,23,1,2021-04-20 08:42:45+00:00,[],
4504,https://github.com/Jadavis123/qc-emulator.git,2020-05-18 14:30:56+00:00,Verilog/SystemVerilog and Python code related to an FPGA-based quantum computer emulator,0,Jadavis123/qc-emulator,264965530,SystemVerilog,qc-emulator,6405,1,2023-12-18 11:23:11+00:00,[],
4505,https://github.com/abhishekk-07/GoldenFile_SVA_Layered_Testbench.git,2020-05-20 05:59:02+00:00,Golden file Based SVA Layered Testbench with Coverage Analysis.,1,abhishekk-07/GoldenFile_SVA_Layered_Testbench,265465747,SystemVerilog,GoldenFile_SVA_Layered_Testbench,33,1,2021-04-18 10:01:27+00:00,[],
4506,https://github.com/akshatmathur16/ethernet_2x2_switch.git,2020-05-28 16:26:40+00:00,"Inspired by the SOC verification course on Udemy, Designed primarily on the basis of specification mentioned in the course with some mods.",0,akshatmathur16/ethernet_2x2_switch,267639652,SystemVerilog,ethernet_2x2_switch,39,1,2022-02-18 15:51:44+00:00,[],
4507,https://github.com/oz-matt/serum.git,2020-05-03 23:19:26+00:00,,0,oz-matt/serum,261039326,SystemVerilog,serum,1874,1,2020-05-21 23:57:36+00:00,[],
4508,https://github.com/gvsrmk/Silumation-and-Verification-of-Last-Level-L2-Cache.git,2020-03-04 23:11:29+00:00,Simulated a 16MB 8-way set associative last level cache following write allocate policy employing MESI protocol in order to maintain cache coherence and inclusivity. Used pseudo LRU as the replacement policy. Have used multiple trace files to drive the inputs to test our cache model,0,gvsrmk/Silumation-and-Verification-of-Last-Level-L2-Cache,245023325,SystemVerilog,Silumation-and-Verification-of-Last-Level-L2-Cache,8,1,2022-06-14 10:00:47+00:00,[],
4509,https://github.com/allen1236/2020-dclab-team01.git,2020-03-07 09:17:26+00:00,,0,allen1236/2020-dclab-team01,245602112,SystemVerilog,2020-dclab-team01,156,1,2020-05-05 02:57:04+00:00,[],
4510,https://github.com/augustoaccorsi/fsm-assincrona.git,2020-04-04 01:11:38+00:00,,0,augustoaccorsi/fsm-assincrona,252879518,SystemVerilog,fsm-assincrona,382,1,2020-04-06 20:10:04+00:00,[],
4511,https://github.com/j1s1e1/VerilogCommon.git,2020-04-19 15:50:04+00:00,Verilog files expected to be shared between multiple projects,1,j1s1e1/VerilogCommon,257039211,SystemVerilog,VerilogCommon,60,1,2023-10-11 11:47:29+00:00,[],https://api.github.com/licenses/mit
4512,https://github.com/MartianZ/Xilinx_Ethernet_1G.git,2020-05-24 08:32:24+00:00,FPGA 1Gbps ETHERNET With UDP Data Transfer for Chip Evaluation,0,MartianZ/Xilinx_Ethernet_1G,266500531,SystemVerilog,Xilinx_Ethernet_1G,17799,1,2022-10-31 12:50:41+00:00,[],
4513,https://github.com/rooty19/basys3_vga.git,2020-04-26 10:55:20+00:00,"""Space invaders"" like game on BASYS3 for FPGA Contest. if you compile, you should use Vivado 19.2.",0,rooty19/basys3_vga,259007140,SystemVerilog,basys3_vga,770,1,2023-09-13 15:26:15+00:00,[],
4514,https://github.com/castleberrysam/riscv-cpu.git,2020-05-21 17:09:41+00:00,Yet another RISC-V soft core.,0,castleberrysam/riscv-cpu,265906751,SystemVerilog,riscv-cpu,344,1,2020-09-24 01:10:32+00:00,[],
4515,https://github.com/vsn97/Design-and-Verification-of-a-Bus-Arbiter.git,2020-05-23 20:11:02+00:00,Design and verification of a 4-way round robin bus arbiter,0,vsn97/Design-and-Verification-of-a-Bus-Arbiter,266411664,SystemVerilog,Design-and-Verification-of-a-Bus-Arbiter,1276,1,2022-02-18 16:10:31+00:00,[],https://api.github.com/licenses/gpl-3.0
4516,https://github.com/selvaruban-johnson/arbitor.git,2020-06-14 17:52:59+00:00,,0,selvaruban-johnson/arbitor,272254831,SystemVerilog,arbitor,4,1,2020-07-09 10:34:53+00:00,[],
4517,https://github.com/pulp-platform/apb_peripherals.git,2020-03-27 18:11:17+00:00,Application-Specific APB Peripherals,1,pulp-platform/apb_peripherals,250609926,SystemVerilog,apb_peripherals,9,1,2022-08-07 12:02:15+00:00,[],
4518,https://github.com/PineXmas/ECE540_Proj_03.git,2020-02-28 21:15:59+00:00,,0,PineXmas/ECE540_Proj_03,243855759,SystemVerilog,ECE540_Proj_03,175197,1,2021-03-31 18:52:06+00:00,[],
4519,https://github.com/Illusion-Graphics/RISC-16.git,2020-06-07 10:21:55+00:00,16-bit RISC core,1,Illusion-Graphics/RISC-16,270268971,SystemVerilog,RISC-16,46,1,2024-01-23 13:32:57+00:00,"['systemverilog', 'core', 'fusesoc']",https://api.github.com/licenses/mit
4520,https://github.com/hruy1/test.git,2020-06-24 22:13:23+00:00,github test,0,hruy1/test,274779425,SystemVerilog,test,6,1,2020-07-14 12:25:08+00:00,[],
4521,https://github.com/selvaruban-johnson/RISC_Processor.git,2020-06-14 17:53:23+00:00,,0,selvaruban-johnson/RISC_Processor,272254904,SystemVerilog,RISC_Processor,205,1,2020-07-09 10:36:14+00:00,[],
4522,https://github.com/selvaruban-johnson/UVM_FIFO.git,2020-06-14 17:53:55+00:00,,0,selvaruban-johnson/UVM_FIFO,272255002,SystemVerilog,UVM_FIFO,10,1,2022-10-02 03:21:55+00:00,[],
4523,https://github.com/aniketb005/uart-verification.git,2020-06-11 19:50:34+00:00,,0,aniketb005/uart-verification,271634500,SystemVerilog,uart-verification,2251,1,2022-05-31 02:23:15+00:00,[],
4524,https://github.com/hungbk99/SPI_APB.git,2020-06-03 18:41:09+00:00,A SPI design (supporting APB interfaces) using Systemverilog from VG_CPU project,1,hungbk99/SPI_APB,269166895,SystemVerilog,SPI_APB,4955,1,2023-08-10 05:27:43+00:00,[],
4525,https://github.com/anthony2307/LogicLocking.git,2020-04-09 04:01:02+00:00,"A semester long project for ECEN 489 - Security of Embedded Systems where we will be locking an Ariane open-source processor, which can be found at https://github.com/pulp-platform/ariane.",0,anthony2307/LogicLocking,254267065,SystemVerilog,LogicLocking,9765,1,2023-04-03 03:00:59+00:00,[],
4526,https://github.com/abfouts/FA2019_ECE581.git,2020-05-12 21:29:02+00:00,Course load dump,0,abfouts/FA2019_ECE581,263456313,SystemVerilog,FA2019_ECE581,10661,1,2021-02-25 07:55:58+00:00,[],
4527,https://github.com/Alenkruth/AESCore.git,2020-06-14 03:35:33+00:00,AES core capable of performing AES 256 Encryption in CTR/GCM modes.,0,Alenkruth/AESCore,272126825,SystemVerilog,AESCore,81,1,2021-01-04 06:44:38+00:00,[],https://api.github.com/licenses/mit
4528,https://github.com/ljhsiun2/hackdac.git,2020-06-17 07:04:06+00:00,,0,ljhsiun2/hackdac,272902235,SystemVerilog,hackdac,32125,1,2021-08-13 03:12:14+00:00,[],
4529,https://github.com/miyo/mspu.git,2020-05-06 10:20:35+00:00,,0,miyo/mspu,261724086,SystemVerilog,mspu,259,1,2023-04-27 06:42:39+00:00,[],
4530,https://github.com/j-sam1211/PROJECTS.git,2020-06-09 10:11:37+00:00,"UVM, SV, VERILOG porjects",0,j-sam1211/PROJECTS,270968789,SystemVerilog,PROJECTS,2052,1,2023-08-22 14:32:33+00:00,[],https://api.github.com/licenses/apache-2.0
4531,https://github.com/arzhangrafii/pharos.git,2020-06-19 17:07:17+00:00,pharos is a set of performance monitoring instrumentation for multi-FPGA systems ,1,arzhangrafii/pharos,273546994,SystemVerilog,pharos,285,1,2022-07-18 05:22:11+00:00,[],
4532,https://github.com/M-Daeva/sv-drsstc-controller.git,2020-03-22 09:32:52+00:00,EPM240 based DRSSTC controller (in progress),0,M-Daeva/sv-drsstc-controller,249151362,SystemVerilog,sv-drsstc-controller,3740,1,2021-06-12 16:20:45+00:00,[],
4533,https://github.com/savan1213/vitistest1.git,2020-03-10 07:54:16+00:00,,0,savan1213/vitistest1,246239635,SystemVerilog,vitistest1,390142,1,2022-03-18 18:28:18+00:00,[],https://api.github.com/licenses/apache-2.0
4534,https://github.com/VeryBigNick/ROB.git,2020-03-31 08:42:04+00:00,,0,VeryBigNick/ROB,251546281,SystemVerilog,ROB,2571,1,2022-04-10 13:03:11+00:00,[],
4535,https://github.com/zeeshan0309/SequenceDetection0110.git,2020-05-13 18:25:11+00:00,"verilog programme for detecting ""0110"" in serial input. Overlapping sequences also detected. ",0,zeeshan0309/SequenceDetection0110,263711190,SystemVerilog,SequenceDetection0110,3,1,2020-08-14 14:53:21+00:00,[],
4536,https://github.com/Kotaro7750/kirameki.git,2020-06-26 06:28:02+00:00,,0,Kotaro7750/kirameki,275088815,SystemVerilog,kirameki,46,1,2020-06-28 13:04:14+00:00,[],https://api.github.com/licenses/mit
4537,https://github.com/Teggoon/CSE-140L-Lab-2.git,2020-05-05 04:46:44+00:00,Lab 2 With Vicente,1,Teggoon/CSE-140L-Lab-2,261363863,SystemVerilog,CSE-140L-Lab-2,5568,1,2022-05-02 19:32:51+00:00,[],
4538,https://github.com/kstefanovicz/PipelinedARMCPU.git,2020-02-24 02:35:23+00:00,5-stage Pipelined ARM CPU with data forwarding and accelerated branches.,0,kstefanovicz/PipelinedARMCPU,242630479,SystemVerilog,PipelinedARMCPU,50,1,2022-09-16 12:18:45+00:00,[],
4539,https://github.com/recogni/axi_sram.git,2020-06-28 05:50:20+00:00,AXI sram adapter,1,recogni/axi_sram,275516634,SystemVerilog,axi_sram,11,1,2022-07-27 05:37:51+00:00,[],
4540,https://github.com/hanyax/Decoder_UVMTest.git,2020-06-11 03:28:09+00:00,UVM Framework Testbench for av Decoder module,0,hanyax/Decoder_UVMTest,271442590,SystemVerilog,Decoder_UVMTest,368,1,2020-09-24 20:00:43+00:00,[],
4541,https://github.com/ECE510-2020-SPRING/PSU_RTL2GDS.git,2020-03-29 01:34:57+00:00,,2,ECE510-2020-SPRING/PSU_RTL2GDS,250930842,SystemVerilog,PSU_RTL2GDS,38038,1,2023-03-12 13:30:45+00:00,[],
4542,https://github.com/wuiw/RSD-RISC-V-Out-of-Order-Superscalar-Processor.git,2020-04-12 12:49:15+00:00,,1,wuiw/RSD-RISC-V-Out-of-Order-Superscalar-Processor,255081252,SystemVerilog,RSD-RISC-V-Out-of-Order-Superscalar-Processor,3772,1,2022-04-19 03:52:29+00:00,[],https://api.github.com/licenses/apache-2.0
4543,https://github.com/sushileo77/SV-Constraints.git,2020-04-09 06:03:34+00:00,Collection of some challenging and tricky constraints ,0,sushileo77/SV-Constraints,254285177,SystemVerilog,SV-Constraints,13,1,2020-04-27 22:34:11+00:00,[],
4544,https://github.com/tannerpoling/SystemVerilog_Frogger.git,2020-04-23 22:57:00+00:00,,0,tannerpoling/SystemVerilog_Frogger,258350136,SystemVerilog,SystemVerilog_Frogger,11978,1,2021-03-10 20:30:25+00:00,[],
4545,https://github.com/kuopinghsu/pipeutils.git,2020-06-28 10:01:09+00:00,A basic component for pipelined control,0,kuopinghsu/pipeutils,275556583,SystemVerilog,pipeutils,69,1,2022-02-20 09:52:29+00:00,[],https://api.github.com/licenses/lgpl-2.1
4546,https://github.com/yg2m19/FFT.git,2020-06-12 15:43:12+00:00,,0,yg2m19/FFT,271834240,SystemVerilog,FFT,363,1,2024-02-27 00:03:18+00:00,[],
4547,https://github.com/RussellKook/CSE371.git,2020-03-07 22:42:37+00:00,Digital Design,0,RussellKook/CSE371,245716489,SystemVerilog,CSE371,32,0,2020-03-07 23:01:18+00:00,[],
4548,https://github.com/Go0zx/EE599_ZixiGu_6974574312.git,2020-03-07 01:54:25+00:00,,0,Go0zx/EE599_ZixiGu_6974574312,245550674,SystemVerilog,EE599_ZixiGu_6974574312,8499,0,2020-05-10 12:22:07+00:00,[],
4549,https://github.com/kartiklakhotia/EE599_klakhoti_9258459798.git,2020-03-05 19:40:46+00:00,EE599_labs,0,kartiklakhotia/EE599_klakhoti_9258459798,245252444,SystemVerilog,EE599_klakhoti_9258459798,5950,0,2020-03-17 04:44:35+00:00,[],
4550,https://github.com/yufat48/riscv-dv.git,2020-03-24 17:32:36+00:00,,0,yufat48/riscv-dv,249774330,SystemVerilog,riscv-dv,9018,0,2020-03-24 17:42:30+00:00,[],https://api.github.com/licenses/apache-2.0
4551,https://github.com/daniellachino/Sim3.git,2020-06-26 08:00:26+00:00,,0,daniellachino/Sim3,275103930,SystemVerilog,Sim3,6,0,2020-06-26 15:01:18+00:00,[],
4552,https://github.com/chaitanyaPaikara/EE549-Virtual-Channels.git,2020-06-04 20:08:16+00:00,Virtual channel route,0,chaitanyaPaikara/EE549-Virtual-Channels,269454962,SystemVerilog,EE549-Virtual-Channels,3538,0,2020-06-15 06:03:13+00:00,[],
4553,https://github.com/MPTG94/Numeric_Systems_Wet2.git,2020-06-05 17:01:30+00:00,"Second Wet assignment in 044252 Numeric Systems and Computer Structure Course, Spring 2020",0,MPTG94/Numeric_Systems_Wet2,269712384,SystemVerilog,Numeric_Systems_Wet2,8,0,2020-06-17 08:16:02+00:00,[],
4554,https://github.com/et-hicks/QWAC.git,2020-05-05 13:54:04+00:00,Quantized Weight Accumulating Combiner,0,et-hicks/QWAC,261486045,SystemVerilog,QWAC,11813,0,2020-05-12 23:59:20+00:00,[],
4555,https://github.com/Z-Walt-734/mipsDesign.git,2020-04-23 02:26:58+00:00,,0,Z-Walt-734/mipsDesign,258073280,SystemVerilog,mipsDesign,1819,0,2020-04-30 04:06:26+00:00,[],https://api.github.com/licenses/mit
4556,https://github.com/Niravpatel71/project_287.git,2020-04-14 00:26:43+00:00,SHA-256 engine,0,Niravpatel71/project_287,255471450,SystemVerilog,project_287,4,0,2021-04-20 20:39:17+00:00,[],
4557,https://github.com/aqweszxcd/FPGA_Digital_Filters.git,2020-05-13 01:30:39+00:00,,0,aqweszxcd/FPGA_Digital_Filters,263494659,SystemVerilog,FPGA_Digital_Filters,4073,0,2020-05-13 04:06:05+00:00,[],https://api.github.com/licenses/mit
4558,https://github.com/Bob-Li-2020/my_dma.git,2020-05-15 10:48:41+00:00,"DMA interacting with ""ami""",0,Bob-Li-2020/my_dma,264168811,SystemVerilog,my_dma,5,0,2020-05-15 10:49:40+00:00,[],
4559,https://github.com/RomanSablin/lattice-dtr-measure.git,2020-05-22 04:28:25+00:00, for Lattice FPGA crystal temperature measure,0,RomanSablin/lattice-dtr-measure,266017995,SystemVerilog,lattice-dtr-measure,1,0,2020-11-22 09:22:16+00:00,[],
4560,https://github.com/HensoldtCyberHWGroup/ariane_asid_integration.git,2020-06-16 13:27:02+00:00,ariane_asid_integration,0,HensoldtCyberHWGroup/ariane_asid_integration,272715084,SystemVerilog,ariane_asid_integration,32963,0,2020-06-21 09:52:29+00:00,[],
4561,https://github.com/waseemorphali/UART_Verilog.git,2020-06-21 04:52:38+00:00,A simple UART interface module.,0,waseemorphali/UART_Verilog,273836462,SystemVerilog,UART_Verilog,7,0,2020-08-29 00:42:24+00:00,['uart'],
4562,https://github.com/aknezevic96/MIPS-ALU-HDL.git,2020-02-26 07:15:35+00:00,,0,aknezevic96/MIPS-ALU-HDL,243193724,SystemVerilog,MIPS-ALU-HDL,1,0,2020-02-26 07:15:51+00:00,[],
4563,https://github.com/zhenhaohe/bit_serial_kmeans.git,2020-03-19 10:35:48+00:00,,0,zhenhaohe/bit_serial_kmeans,248475322,SystemVerilog,bit_serial_kmeans,53,0,2020-03-19 10:40:14+00:00,[],
4564,https://github.com/SamyuelDanyo/rtl-n-bit-multiplier.git,2020-03-10 18:56:56+00:00,Parameterised (8-bit ready) Multiplier SystemVerilog RTL Design with 1-Cycle Shift+Add,0,SamyuelDanyo/rtl-n-bit-multiplier,246383382,SystemVerilog,rtl-n-bit-multiplier,636,0,2020-03-15 14:51:10+00:00,[],https://api.github.com/licenses/mit
4565,https://github.com/neoH/ASVE.git,2020-04-11 13:34:05+00:00,Advanced SystemVerilog Example,0,neoH/ASVE,254874750,SystemVerilog,ASVE,37,0,2020-04-21 12:28:32+00:00,[],
4566,https://github.com/ks606/uart-for-fpga.git,2020-04-09 14:27:50+00:00,,0,ks606/uart-for-fpga,254393916,SystemVerilog,uart-for-fpga,35,0,2023-10-26 06:50:43+00:00,[],
4567,https://github.com/braamBeresford/TA_ECE272.git,2020-05-06 17:51:57+00:00,,0,braamBeresford/TA_ECE272,261837590,SystemVerilog,TA_ECE272,4,0,2020-05-25 00:50:04+00:00,[],
4568,https://github.com/sergiududa/DSD_filter.git,2020-05-10 10:41:43+00:00,,0,sergiududa/DSD_filter,262764508,SystemVerilog,DSD_filter,39,0,2020-05-10 12:10:13+00:00,[],
4569,https://github.com/mortepau/hdlc.git,2020-02-20 15:04:02+00:00,TFE4171 Project - High-Level Data Link Control,0,mortepau/hdlc,241913437,SystemVerilog,hdlc,2291,0,2020-04-10 22:49:59+00:00,[],https://api.github.com/licenses/mit
4570,https://github.com/Adrofier/AMBA-APB-Design.git,2020-06-27 07:51:28+00:00,,0,Adrofier/AMBA-APB-Design,275325439,SystemVerilog,AMBA-APB-Design,295,0,2020-06-27 08:11:20+00:00,[],https://api.github.com/licenses/mit
4571,https://github.com/RomanKashirov/Digital_Design_and_Computer_Architecture.git,2020-04-02 10:41:30+00:00,,0,RomanKashirov/Digital_Design_and_Computer_Architecture,252426952,SystemVerilog,Digital_Design_and_Computer_Architecture,5719,0,2020-09-08 05:21:23+00:00,[],
4572,https://github.com/lisazaher/cpu-single-core.git,2020-03-31 08:45:52+00:00,Unparallel 16 Bit Processor (designed in ECE342 - Computer Hardware),0,lisazaher/cpu-single-core,251547236,SystemVerilog,cpu-single-core,770,0,2020-04-24 17:27:00+00:00,[],
4573,https://github.com/mrunalkpatel96/protobufaccel.git,2020-04-06 23:42:24+00:00,,0,mrunalkpatel96/protobufaccel,253641037,SystemVerilog,protobufaccel,2,0,2020-04-06 23:43:12+00:00,[],
4574,https://github.com/NotATempUser/ECE385LAB6.git,2020-02-22 23:05:50+00:00,,0,NotATempUser/ECE385LAB6,242424460,SystemVerilog,ECE385LAB6,69,0,2020-03-03 17:26:25+00:00,[],
4575,https://github.com/zaccrites/riscv.git,2020-04-16 21:01:48+00:00,A single-cycle RV32I CPU core,1,zaccrites/riscv,256329096,SystemVerilog,riscv,105,0,2020-04-25 22:55:12+00:00,[],https://api.github.com/licenses/mit
4576,https://github.com/abettati/riscv_mirror2.git,2020-04-16 08:22:08+00:00,,0,abettati/riscv_mirror2,256153328,SystemVerilog,riscv_mirror2,3216,0,2020-04-16 08:23:58+00:00,[],
4577,https://github.com/yuey1203/BNN_FPGA.git,2020-04-19 17:26:34+00:00,Sparse Matrix-Vector Multiplication,1,yuey1203/BNN_FPGA,257060446,SystemVerilog,BNN_FPGA,71076,0,2020-05-06 21:19:25+00:00,[],
4578,https://github.com/KutayAcar/System-Verilog.git,2020-04-19 06:59:22+00:00,System verilog hdl ,0,KutayAcar/System-Verilog,256935209,SystemVerilog,System-Verilog,18,0,2020-04-20 13:03:41+00:00,[],https://api.github.com/licenses/gpl-3.0
4579,https://github.com/Gaon-Choi/ITE2015.git,2020-04-11 07:50:45+00:00,Digital Logic Design,0,Gaon-Choi/ITE2015,254818918,SystemVerilog,ITE2015,1083,0,2020-10-02 20:49:24+00:00,[],
4580,https://github.com/elakkiap/SHA-256-Bitcoin-Hash.git,2020-06-09 03:47:49+00:00,Final Project for class UCSD ECE 111,1,elakkiap/SHA-256-Bitcoin-Hash,270896870,SystemVerilog,SHA-256-Bitcoin-Hash,38,0,2020-06-12 01:49:20+00:00,[],
4581,https://github.com/Leenahessam/FloatingPointAddition.git,2020-06-08 20:58:43+00:00,Design for a floating-point adder in verilog.,0,Leenahessam/FloatingPointAddition,270826000,SystemVerilog,FloatingPointAddition,2,0,2020-06-08 21:04:13+00:00,[],
4582,https://github.com/Teggoon/Lab4.git,2020-06-06 18:29:51+00:00,,0,Teggoon/Lab4,270068443,SystemVerilog,Lab4,321,0,2020-06-06 18:31:38+00:00,[],
4583,https://github.com/mikeck1/ECE111.git,2020-05-26 20:46:33+00:00,Final,0,mikeck1/ECE111,267148535,SystemVerilog,ECE111,42,0,2020-05-26 20:54:34+00:00,[],
4584,https://github.com/ChristianKouris/cse140l-lab3.git,2020-05-27 06:51:01+00:00,,0,ChristianKouris/cse140l-lab3,267243172,SystemVerilog,cse140l-lab3,102,0,2021-03-31 00:14:33+00:00,[],
4585,https://github.com/kromych/fpga-vga.git,2020-05-27 01:58:49+00:00,VGA and FPGAs,0,kromych/fpga-vga,267196217,SystemVerilog,fpga-vga,5096,0,2022-04-21 07:01:02+00:00,[],
4586,https://github.com/pgroup-usc/parallel-hash.git,2020-04-12 20:04:43+00:00,,1,pgroup-usc/parallel-hash,255160730,SystemVerilog,parallel-hash,12,0,2020-04-12 20:08:49+00:00,[],
4587,https://github.com/mattbrown015/simple-fpga-cvs.git,2020-06-10 09:42:04+00:00,Simple FPGA Project with CVS,0,mattbrown015/simple-fpga-cvs,271237887,SystemVerilog,simple-fpga-cvs,45,0,2020-06-19 19:25:44+00:00,[],
4588,https://github.com/sakshintala/ECE385.git,2020-06-15 02:04:04+00:00,,0,sakshintala/ECE385,272319997,SystemVerilog,ECE385,2800,0,2020-06-15 03:27:20+00:00,[],
4589,https://github.com/ChristianKouris/cse140l-lab2.git,2020-05-12 04:01:13+00:00,,0,ChristianKouris/cse140l-lab2,263228034,SystemVerilog,cse140l-lab2,206,0,2021-03-31 00:13:31+00:00,[],
4590,https://github.com/ChristianKouris/cse140l-lab4.git,2020-06-13 06:59:39+00:00,,1,ChristianKouris/cse140l-lab4,271957943,SystemVerilog,cse140l-lab4,321,0,2021-03-31 00:11:09+00:00,[],
4591,https://github.com/UltimateHikari/QLUE_CISC.git,2020-06-03 06:03:51+00:00,"Question of Life, Universe and Everything",0,UltimateHikari/QLUE_CISC,269003120,SystemVerilog,QLUE_CISC,76,0,2020-06-10 12:55:20+00:00,[],
4592,https://github.com/dvirhilu/FPGA_escape_room.git,2020-05-17 09:21:51+00:00,,0,dvirhilu/FPGA_escape_room,264625453,SystemVerilog,FPGA_escape_room,203,0,2020-06-04 08:08:05+00:00,[],
4593,https://github.com/onurkasemlar/UVM_TRAINING_ELSYS.git,2020-04-21 09:49:59+00:00,,0,onurkasemlar/UVM_TRAINING_ELSYS,257550334,SystemVerilog,UVM_TRAINING_ELSYS,61,0,2020-05-20 12:28:15+00:00,[],
4594,https://github.com/Csomi/hdl_uvm.git,2020-04-25 11:56:33+00:00,UVM verification environment for modules and sub-systems from analogdevicesinc/hdl repository,0,Csomi/hdl_uvm,258764118,SystemVerilog,hdl_uvm,3,0,2020-10-26 16:29:13+00:00,[],
4595,https://github.com/JeanRochCoulon/riscv-dv.git,2020-04-30 14:05:14+00:00,,0,JeanRochCoulon/riscv-dv,260228192,SystemVerilog,riscv-dv,9013,0,2020-04-30 14:07:38+00:00,[],https://api.github.com/licenses/apache-2.0
4596,https://github.com/dcorderoch/alu-taller.git,2020-04-30 20:16:34+00:00,,0,dcorderoch/alu-taller,260309374,SystemVerilog,alu-taller,32,0,2020-05-20 02:00:18+00:00,[],
4597,https://github.com/navahc/computer_architecture.git,2020-05-15 19:13:38+00:00,ECE586_PROJECT on 5 stage MIPS Pipeline implementation with RAW hazard (Data dependence) and Control hazard,0,navahc/computer_architecture,264277999,SystemVerilog,computer_architecture,6,0,2020-05-24 11:42:28+00:00,[],
4598,https://github.com/hao310rui140326/my_uvm.git,2020-05-15 05:59:57+00:00,uvm_study,0,hao310rui140326/my_uvm,264109139,SystemVerilog,my_uvm,149,0,2020-05-18 05:54:33+00:00,[],
4599,https://github.com/TheDoebes/data-loggger.git,2020-02-27 18:56:19+00:00,Data Logging Project for ECE 387,0,TheDoebes/data-loggger,243593448,SystemVerilog,data-loggger,51,0,2020-04-15 19:04:33+00:00,[],https://api.github.com/licenses/gpl-3.0
4600,https://github.com/kairotronix/kt_sound_hdl.git,2020-05-07 10:13:21+00:00,HDL (SystemVerilog) code for the FPGA-based musical synthesizer/sound chip.,0,kairotronix/kt_sound_hdl,262016969,SystemVerilog,kt_sound_hdl,160,0,2020-05-07 10:24:28+00:00,[],
4601,https://github.com/abhaumick/VaSCoE.git,2020-05-22 20:06:50+00:00,,0,abhaumick/VaSCoE,266198003,SystemVerilog,VaSCoE,12,0,2020-05-22 20:07:35+00:00,[],
4602,https://github.com/MattiaMartignoni/GROUP12_bfloat16_FEXP.git,2020-05-31 09:39:55+00:00,16 bit floating point exponential unit based on taylor series approximation,0,MattiaMartignoni/GROUP12_bfloat16_FEXP,268249694,SystemVerilog,GROUP12_bfloat16_FEXP,8380,0,2020-05-31 15:22:06+00:00,[],
4603,https://github.com/Aaargsv/FPGA_practice.git,2020-05-26 13:57:20+00:00,,0,Aaargsv/FPGA_practice,267057420,SystemVerilog,FPGA_practice,7,0,2020-05-27 19:38:23+00:00,[],
4604,https://github.com/mhatrekaustubh101/AHB_LITE_593.git,2020-05-21 06:57:25+00:00,,0,mhatrekaustubh101/AHB_LITE_593,265777644,SystemVerilog,AHB_LITE_593,2429,0,2020-06-05 05:51:52+00:00,[],
4605,https://github.com/wordchao/sv-tutorial.git,2020-05-12 07:10:30+00:00,,0,wordchao/sv-tutorial,263260777,SystemVerilog,sv-tutorial,8,0,2020-05-12 07:12:24+00:00,[],
4606,https://github.com/ryanblushke/xswitch-testbench.git,2020-04-15 19:01:53+00:00,SystemVerilog OOP reusable testbench for Xswitch.,0,ryanblushke/xswitch-testbench,256010973,SystemVerilog,xswitch-testbench,59,0,2020-04-22 19:03:35+00:00,[],
4607,https://github.com/islengxw/testbench.git,2020-04-10 09:27:15+00:00,some testbench example,0,islengxw/testbench,254595433,SystemVerilog,testbench,1,0,2020-04-10 09:33:40+00:00,[],
4608,https://github.com/qqwert0/distribued_sgd.git,2020-04-12 12:26:07+00:00,,0,qqwert0/distribued_sgd,255077249,SystemVerilog,distribued_sgd,270,0,2020-09-05 08:07:15+00:00,[],
4609,https://github.com/zkdliushuo/risc-v-ca.git,2020-04-13 07:34:26+00:00,,0,zkdliushuo/risc-v-ca,255261113,SystemVerilog,risc-v-ca,59862,0,2021-05-11 01:55:05+00:00,[],
4610,https://github.com/silviosantana/ri5cy_verification.git,2020-04-20 13:28:10+00:00,,1,silviosantana/ri5cy_verification,257289515,SystemVerilog,ri5cy_verification,303,0,2020-09-22 08:57:30+00:00,[],
4611,https://github.com/LeandroDorta/alveo_tutorial.git,2020-04-18 19:55:00+00:00,,0,LeandroDorta/alveo_tutorial,256840966,SystemVerilog,alveo_tutorial,747,0,2020-04-29 04:25:25+00:00,[],
4612,https://github.com/JohnForssander/cpenlab4.git,2020-03-08 03:02:02+00:00,Robert and John's CPEN Lab 4,0,JohnForssander/cpenlab4,245742603,SystemVerilog,cpenlab4,25772,0,2020-03-08 03:16:22+00:00,[],
4613,https://github.com/ltkim/FPGA-Chess.git,2020-03-25 19:26:35+00:00,,0,ltkim/FPGA-Chess,250071724,SystemVerilog,FPGA-Chess,92,0,2020-03-25 19:32:05+00:00,[],
4614,https://github.com/MehmetAnil/mux4_using_mux2.git,2020-03-11 20:33:33+00:00,,0,MehmetAnil/mux4_using_mux2,246674351,SystemVerilog,mux4_using_mux2,3,0,2020-08-26 09:46:08+00:00,[],
4615,https://github.com/ececanga/Digital-Design.git,2020-03-02 11:12:53+00:00,CS223 Course Lab Assignments - Bilkent University (Spring 2018),0,ececanga/Digital-Design,244351109,SystemVerilog,Digital-Design,611,0,2021-10-31 10:53:17+00:00,[],
4616,https://github.com/adsehgal/Verilog_Projects.git,2020-03-24 12:38:38+00:00,,0,adsehgal/Verilog_Projects,249704455,SystemVerilog,Verilog_Projects,49028,0,2020-12-26 08:16:57+00:00,[],
4617,https://github.com/maorshweky/reutl_training.git,2020-03-17 13:46:39+00:00,Reut Lev's training repo,0,maorshweky/reutl_training,247981107,SystemVerilog,reutl_training,8,0,2020-04-27 20:12:49+00:00,[],
4618,https://github.com/KenzaJ-ops/Projet_SoC.git,2020-03-25 10:17:08+00:00,,0,KenzaJ-ops/Projet_SoC,249946534,SystemVerilog,Projet_SoC,19,0,2020-04-23 17:34:15+00:00,[],
4619,https://github.com/daniellachino/Sim2.git,2020-06-13 08:14:22+00:00,Digital Design Simulation2,0,daniellachino/Sim2,271968091,SystemVerilog,Sim2,27,0,2020-06-17 15:49:07+00:00,[],
4620,https://github.com/saul205/Calendario.git,2020-06-29 16:39:30+00:00,Calendar app that calculates the total of hours worked from the amount of hours worked each day,0,saul205/Calendario,275872043,SystemVerilog,Calendario,22,0,2020-06-29 17:22:28+00:00,[],
4621,https://github.com/richapallavi0627/ECE111_BitcoinHash.git,2020-05-29 23:17:01+00:00,,1,richapallavi0627/ECE111_BitcoinHash,267973075,SystemVerilog,ECE111_BitcoinHash,6587,0,2020-06-12 07:07:17+00:00,[],
4622,https://github.com/PineXmas/Test_SV_OOP.git,2020-05-30 07:21:48+00:00,,0,PineXmas/Test_SV_OOP,268029858,SystemVerilog,Test_SV_OOP,1,0,2020-05-30 07:45:52+00:00,[],
4623,https://github.com/igoral5/soda_machine.git,2020-05-20 18:24:32+00:00,Soda Machine in SystemVerilog,0,igoral5/soda_machine,265652320,SystemVerilog,soda_machine,8,0,2020-07-26 16:33:17+00:00,[],
4624,https://github.com/maxpark/vitis_ai_inipro.git,2020-05-20 02:31:17+00:00,"inipro vitis_ai,, 2020-05-20",0,maxpark/vitis_ai_inipro,265427573,SystemVerilog,vitis_ai_inipro,103367,0,2020-05-24 01:18:48+00:00,[],https://api.github.com/licenses/gpl-3.0
4625,https://github.com/plasma16/systemverilog_verification.git,2020-06-19 01:31:48+00:00,SystemVerilog Verification Repositories,0,plasma16/systemverilog_verification,273377034,SystemVerilog,systemverilog_verification,1,0,2020-06-22 07:38:58+00:00,[],
4626,https://github.com/miriamlam1/rat-stuff.git,2020-06-24 08:40:41+00:00,written spring 2019,0,miriamlam1/rat-stuff,274618883,SystemVerilog,rat-stuff,15,0,2020-06-24 08:47:23+00:00,[],
4627,https://github.com/shiva6933/verilog.git,2020-06-20 06:22:34+00:00,,0,shiva6933/verilog,273651177,SystemVerilog,verilog,650,0,2020-06-20 06:23:12+00:00,[],https://api.github.com/licenses/mit
4628,https://github.com/jasha64/MIPS-Pipeline-with-Cache.git,2020-05-07 06:16:39+00:00,Lab of Computer Architecture course,0,jasha64/MIPS-Pipeline-with-Cache,261966081,SystemVerilog,MIPS-Pipeline-with-Cache,4986,0,2024-01-10 02:20:09+00:00,[],
4629,https://github.com/tehuano/uvm-learner.git,2020-03-15 23:23:13+00:00,This repository contains a basic example about how to implement a UVM testbench its python interface. UVM is a framework of System Verilog classes that help to bring up verification testbenches faster.,0,tehuano/uvm-learner,247568943,SystemVerilog,uvm-learner,2489,0,2020-04-04 02:16:27+00:00,[],
4630,https://github.com/ArtemShangaraev/CC_main.git,2020-03-04 11:22:20+00:00,Firmware of the Column controller,0,ArtemShangaraev/CC_main,244882015,SystemVerilog,CC_main,2297,0,2021-10-07 07:38:06+00:00,[],
4631,https://github.com/BenHalpe/Sim2.git,2020-06-04 07:07:54+00:00,,0,BenHalpe/Sim2,269285863,SystemVerilog,Sim2,4492,0,2020-06-17 14:10:24+00:00,[],
4632,https://github.com/maitreyaranade/VLSI.git,2020-04-23 12:45:53+00:00,My small VLSI projects will go here.,0,maitreyaranade/VLSI,258199247,SystemVerilog,VLSI,876,0,2023-04-25 14:27:27+00:00,[],
4633,https://github.com/has58/UVM.git,2020-05-01 21:26:18+00:00,,0,has58/UVM,260561542,SystemVerilog,UVM,5,0,2020-05-04 13:13:55+00:00,[],
4634,https://github.com/HaogeL/multiplication_based_divider.git,2020-05-03 21:49:55+00:00,,0,HaogeL/multiplication_based_divider,261027549,SystemVerilog,multiplication_based_divider,187,0,2020-05-03 22:59:34+00:00,[],
4635,https://github.com/jameszha/SMVM_low_cost_FPGA.git,2020-05-06 21:29:32+00:00,,0,jameszha/SMVM_low_cost_FPGA,261882708,SystemVerilog,SMVM_low_cost_FPGA,70904,0,2020-05-06 21:30:29+00:00,[],
4636,https://github.com/H-S-S-11/miscellaneous-systemverilog.git,2020-05-04 17:49:12+00:00,Collection of useful bits of SystemVerilog,0,H-S-S-11/miscellaneous-systemverilog,261255977,SystemVerilog,miscellaneous-systemverilog,20,0,2021-01-23 00:45:51+00:00,[],https://api.github.com/licenses/gpl-3.0
4637,https://github.com/Azzzrail/Verilog_test.git,2020-05-06 14:04:16+00:00,,0,Azzzrail/Verilog_test,261777151,SystemVerilog,Verilog_test,6483,0,2020-05-07 14:47:42+00:00,[],
4638,https://github.com/Dankumar/APB_VIP_Repo.git,2020-05-06 16:43:04+00:00,,2,Dankumar/APB_VIP_Repo,261820531,SystemVerilog,APB_VIP_Repo,220,0,2020-05-16 14:04:09+00:00,[],
4639,https://github.com/KhlystunDmitriy/Kursach-SNK.git,2020-05-07 22:12:36+00:00,,0,KhlystunDmitriy/Kursach-SNK,262169404,SystemVerilog,Kursach-SNK,5999,0,2020-07-06 15:49:47+00:00,[],
4640,https://github.com/Leenahessam/ALU.git,2020-06-08 20:55:03+00:00," ALU is designed in Verilog, it receives a 4 bits selection code to decide which operation to perform. ALU should do the following operations: Integer Math Operations. Add, Subtract, Multiply, Integer Division Shift Operations. Logical Shift Left, Logical Shift Right, Mathematical Shift Right, Rotate Right. Logical Operations. AND, OR, XOR, INVERT .",1,Leenahessam/ALU,270824775,SystemVerilog,ALU,2,0,2020-06-08 20:57:03+00:00,[],
4641,https://github.com/amit-ro/simple-synchronizers.git,2020-06-06 10:17:43+00:00,few designs of simple synchronizers and how they work,0,amit-ro/simple-synchronizers,269944054,SystemVerilog,simple-synchronizers,174,0,2020-06-10 15:17:12+00:00,[],
4642,https://github.com/Teggoon/CSE-140L-Lab-3.git,2020-05-14 22:32:11+00:00,,1,Teggoon/CSE-140L-Lab-3,264039748,SystemVerilog,CSE-140L-Lab-3,927,0,2020-05-27 02:44:40+00:00,[],
4643,https://github.com/gur111/DigiSysSim2.git,2020-06-08 12:26:31+00:00,,0,gur111/DigiSysSim2,270659646,SystemVerilog,DigiSysSim2,32,0,2020-12-09 20:30:43+00:00,[],https://api.github.com/licenses/gpl-3.0
4644,https://github.com/B06901052/DCLAB_final.git,2020-06-07 13:45:36+00:00,觸控黑白棋,0,B06901052/DCLAB_final,270319275,SystemVerilog,DCLAB_final,66,0,2020-06-20 19:00:09+00:00,[],
4645,https://github.com/reffum/snos.git,2020-06-18 07:10:20+00:00,,0,reffum/snos,273167026,SystemVerilog,snos,100,0,2020-07-11 21:45:40+00:00,[],
4646,https://github.com/appledore22/ALU_FIFO.git,2020-05-27 07:02:22+00:00,ALU with input and output fifo,0,appledore22/ALU_FIFO,267245416,SystemVerilog,ALU_FIFO,10,0,2020-05-29 06:26:39+00:00,[],
4647,https://github.com/Kiran760043/Timed-FSM.git,2020-05-21 21:38:28+00:00,FPGA Programs,0,Kiran760043/Timed-FSM,265956940,SystemVerilog,Timed-FSM,83,0,2020-05-21 21:50:25+00:00,[],
4648,https://github.com/BharathNR1030/src_3_instr.git,2020-05-28 07:47:15+00:00,,0,BharathNR1030/src_3_instr,267526663,SystemVerilog,src_3_instr,137,0,2020-05-28 07:55:30+00:00,[],
4649,https://github.com/AlefCS/TCC.git,2020-04-28 21:40:36+00:00,The source files for my graduation project. The project is basically a synthesizable Genetic Algorithm written in SystemVerilog.,0,AlefCS/TCC,259757753,SystemVerilog,TCC,50,0,2021-08-24 23:25:26+00:00,[],https://api.github.com/licenses/gpl-3.0
4650,https://github.com/zeeshan0309/JK_flipflop_implement.git,2020-04-08 06:07:23+00:00,,0,zeeshan0309/JK_flipflop_implement,254000268,SystemVerilog,JK_flipflop_implement,3,0,2020-05-07 08:19:47+00:00,[],
4651,https://github.com/Z4R1Z/Cellular-Automata-SystemVerilog.git,2020-02-24 21:18:36+00:00,,0,Z4R1Z/Cellular-Automata-SystemVerilog,242845725,SystemVerilog,Cellular-Automata-SystemVerilog,7,0,2021-02-14 12:46:45+00:00,[],
4652,https://github.com/hxfycy/Vitis.git,2020-04-14 02:16:57+00:00,,0,hxfycy/Vitis,255488734,SystemVerilog,Vitis,50,0,2020-05-16 04:06:41+00:00,[],
4653,https://github.com/kinming92/MISP-FPU-Processor.git,2020-03-11 02:58:15+00:00,,0,kinming92/MISP-FPU-Processor,246460778,SystemVerilog,MISP-FPU-Processor,6,0,2020-03-11 03:08:34+00:00,[],
4654,https://github.com/2kaiser/advanced_implementations.git,2020-03-09 00:31:49+00:00,Advanced optimizations for RISCV32,0,2kaiser/advanced_implementations,245911205,SystemVerilog,advanced_implementations,535,0,2020-03-10 19:46:28+00:00,[],
4655,https://github.com/pnarahar/LRU_Model.git,2020-03-27 05:07:42+00:00,,0,pnarahar/LRU_Model,250445495,SystemVerilog,LRU_Model,9,0,2022-03-27 16:09:33+00:00,[],
4656,https://github.com/rsarwar87/de10-sky-tracker.git,2020-06-01 17:05:48+00:00,,0,rsarwar87/de10-sky-tracker,268582757,SystemVerilog,de10-sky-tracker,15743,0,2022-04-16 00:53:33+00:00,[],
4657,https://github.com/Kiran760043/Diff-between-Assign-and-IF-Statement.git,2020-05-30 22:32:45+00:00,FPGA Programs,0,Kiran760043/Diff-between-Assign-and-IF-Statement,268170332,SystemVerilog,Diff-between-Assign-and-IF-Statement,41,0,2020-05-30 22:33:44+00:00,[],
4658,https://github.com/melike1818/CS223-PROJECT.git,2020-05-22 12:40:01+00:00,CS223 Digital Design Project (System Verilog),0,melike1818/CS223-PROJECT,266107465,SystemVerilog,CS223-PROJECT,2003,0,2020-07-22 19:10:18+00:00,[],
4659,https://github.com/Muellegr/MusicBoxEmpty.git,2020-02-22 00:31:06+00:00,Special empty repository ,0,Muellegr/MusicBoxEmpty,242254934,SystemVerilog,MusicBoxEmpty,101,0,2020-02-22 01:39:52+00:00,[],
4660,https://github.com/zode97/Verilog-FPGA.git,2020-04-24 19:49:06+00:00,,0,zode97/Verilog-FPGA,258609120,SystemVerilog,Verilog-FPGA,17702,0,2021-04-10 16:47:40+00:00,[],
4661,https://github.com/nikkikwon/Digital-Systems-Laboratory.git,2020-05-04 04:09:24+00:00,,0,nikkikwon/Digital-Systems-Laboratory,261077689,SystemVerilog,Digital-Systems-Laboratory,30,0,2020-05-04 04:17:32+00:00,[],
4662,https://github.com/leyvaKeilly/COMP541-DigitalLogic-ComputerDesign.git,2020-05-03 01:50:20+00:00,COMP541 is an introduction to digital logic as well as the structure and electronic design of modern processors. Students will implement a working computer during the laboratory sessions.,0,leyvaKeilly/COMP541-DigitalLogic-ComputerDesign,260809387,SystemVerilog,COMP541-DigitalLogic-ComputerDesign,44331,0,2020-05-03 02:35:20+00:00,[],
4663,https://github.com/MartinMeng008/Digital-Logic.git,2020-05-01 20:02:11+00:00,,0,MartinMeng008/Digital-Logic,260547768,SystemVerilog,Digital-Logic,35112,0,2020-10-30 04:34:58+00:00,[],
4664,https://github.com/falkenum/little-computer.git,2020-03-21 18:13:15+00:00,,0,falkenum/little-computer,249034147,SystemVerilog,little-computer,350,0,2020-04-20 19:56:54+00:00,[],
4665,https://github.com/claint76/rggen-sample-plugin.git,2020-03-05 08:52:57+00:00,Sample project for RgGen plugin,0,claint76/rggen-sample-plugin,245112548,,rggen-sample-plugin,10,0,2020-08-18 13:45:37+00:00,[],https://api.github.com/licenses/mit
4666,https://github.com/garvitgupta08/Door-lock-FSM-on-FPGA.git,2020-03-22 20:38:31+00:00,Implement a mealy FSM on basys3 board (artix 7),0,garvitgupta08/Door-lock-FSM-on-FPGA,249268227,SystemVerilog,Door-lock-FSM-on-FPGA,878,0,2020-03-22 21:16:31+00:00,[],
4667,https://github.com/wilson07code/AMBA_APB_UVM.git,2020-05-17 13:59:26+00:00,,0,wilson07code/AMBA_APB_UVM,264679420,SystemVerilog,AMBA_APB_UVM,40,0,2020-05-17 14:00:52+00:00,[],
4668,https://github.com/ynaffitgnay/lazyf1scp.git,2020-05-07 21:15:02+00:00,Get data from f1,0,ynaffitgnay/lazyf1scp,262160082,SystemVerilog,lazyf1scp,749,0,2020-08-12 07:06:58+00:00,[],
4669,https://github.com/woodrowb96/FPGA-USB-Oscilloscope.git,2020-02-19 23:20:23+00:00,,0,woodrowb96/FPGA-USB-Oscilloscope,241748172,SystemVerilog,FPGA-USB-Oscilloscope,1218,0,2020-02-24 00:40:46+00:00,[],
4670,https://github.com/frendylio/EE361.git,2020-02-25 01:47:12+00:00,,0,frendylio/EE361,242884602,SystemVerilog,EE361,18,0,2020-02-25 06:57:47+00:00,[],
4671,https://github.com/mrschnabel/Pong.git,2020-04-19 01:26:03+00:00,A pong game created on an FPGA.  Programmed using Verilog.,0,mrschnabel/Pong,256888566,SystemVerilog,Pong,43,0,2020-04-19 01:28:06+00:00,[],
4672,https://github.com/bkneubel/operation_tadpole.git,2020-04-23 23:07:48+00:00,Wouldn't you like to know,0,bkneubel/operation_tadpole,258351919,SystemVerilog,operation_tadpole,1,0,2020-04-23 23:12:32+00:00,[],
4673,https://github.com/navahc/PRE-SILICON.git,2020-04-07 23:36:29+00:00,ALL ASSIGNMENTS AND PROJECT,2,navahc/PRE-SILICON,253936914,SystemVerilog,PRE-SILICON,884,0,2020-04-23 02:31:57+00:00,[],
4674,https://github.com/nh-turja/system_verilog_codes.git,2020-04-08 15:16:26+00:00,This repository is a compilation of system verilog codes which I have learnt for front end verification at Ulkasemi Ltd.,0,nh-turja/system_verilog_codes,254123814,SystemVerilog,system_verilog_codes,7,0,2020-04-08 16:45:13+00:00,[],
4675,https://github.com/melt-umn/rewriting-optimization-demo.git,2020-05-27 19:20:57+00:00,A demonstration use of strategy attributes to perform optimizations for a simple statement/expression language,0,melt-umn/rewriting-optimization-demo,267406922,SystemVerilog,rewriting-optimization-demo,30,0,2022-01-19 02:11:42+00:00,[],https://api.github.com/licenses/lgpl-3.0
4676,https://github.com/appledore22/AXI_ALU.git,2020-05-28 14:44:28+00:00,simple axi based alu ,1,appledore22/AXI_ALU,267616049,SystemVerilog,AXI_ALU,17,0,2020-05-30 10:52:13+00:00,[],
4677,https://github.com/fpgaexcel/SquareRoot.git,2020-06-02 23:28:42+00:00,Optimal SquareRoot Algorithm for an FPGA,0,fpgaexcel/SquareRoot,268929833,SystemVerilog,SquareRoot,2,0,2020-06-03 02:38:15+00:00,[],
4678,https://github.com/ChristianKouris/cse140l-lab5.git,2020-06-13 07:04:59+00:00,,0,ChristianKouris/cse140l-lab5,271958699,SystemVerilog,cse140l-lab5,840,0,2021-03-31 00:10:16+00:00,[],
4679,https://github.com/alanmimms/kl10-verilator.git,2020-06-13 19:41:23+00:00,Verilator fork of kl10 FPGA for faster sims,0,alanmimms/kl10-verilator,272074718,SystemVerilog,kl10-verilator,1440,0,2020-07-19 20:20:45+00:00,[],
4680,https://github.com/BoSmallEar/OoO-Processor.git,2020-06-19 13:45:45+00:00,,0,BoSmallEar/OoO-Processor,273504242,SystemVerilog,OoO-Processor,50207,0,2021-09-24 07:15:41+00:00,[],
4681,https://github.com/amit-ro/basic-asynchronous-FIFO.git,2020-06-09 08:26:00+00:00,design of a basic FIFO to synchronize domains ,0,amit-ro/basic-asynchronous-FIFO,270945171,SystemVerilog,basic-asynchronous-FIFO,96,0,2020-06-10 15:18:38+00:00,[],
4682,https://github.com/aurelientse/TKA001.git,2020-06-25 20:53:59+00:00,,0,aurelientse/TKA001,275013176,SystemVerilog,TKA001,1199,0,2020-09-06 15:58:26+00:00,[],
4683,https://github.com/alecastrillo/ProyectoII-ArquiII.git,2020-06-24 22:00:57+00:00,Arquitectura vectorial para la ecualización de imágenes.,0,alecastrillo/ProyectoII-ArquiII,274777785,SystemVerilog,ProyectoII-ArquiII,35754,0,2020-08-21 04:01:04+00:00,[],
4684,https://github.com/wilson07code/SystemVerilog_Lab.git,2020-03-12 05:32:47+00:00,,0,wilson07code/SystemVerilog_Lab,246751774,SystemVerilog,SystemVerilog_Lab,3,0,2020-03-12 05:35:45+00:00,[],
4685,https://github.com/JJ-Atkinson/MicroprocessorsUofM_Spring2020_Proj.git,2020-03-05 20:54:29+00:00,"School project for microprocessors, University of memphis 2020",0,JJ-Atkinson/MicroprocessorsUofM_Spring2020_Proj,245265782,SystemVerilog,MicroprocessorsUofM_Spring2020_Proj,40,0,2020-04-23 02:27:05+00:00,[],
4686,https://github.com/gsw73/double-buffered-reorder-fifo.git,2020-03-11 19:30:42+00:00,A parameterized number of data words are written into a reorder memory and then popped out in order when memory is full.,1,gsw73/double-buffered-reorder-fifo,246662507,SystemVerilog,double-buffered-reorder-fifo,14,0,2020-06-13 20:08:39+00:00,[],
4687,https://github.com/FabianeKuhn/ArquiteturaII.git,2020-04-01 20:52:44+00:00,,0,FabianeKuhn/ArquiteturaII,252284329,SystemVerilog,ArquiteturaII,203,0,2020-09-21 12:30:56+00:00,[],
4688,https://github.com/StefanovicZivan/Circle_counting_algorithm.git,2020-03-14 17:39:29+00:00,,0,StefanovicZivan/Circle_counting_algorithm,247323879,SystemVerilog,Circle_counting_algorithm,192,0,2021-07-07 10:01:03+00:00,[],
4689,https://github.com/Leo-i/ethernet.git,2020-03-18 09:38:29+00:00,,0,Leo-i/ethernet,248190419,SystemVerilog,ethernet,59520,0,2020-07-29 17:29:53+00:00,[],
4690,https://github.com/dmu1313/Baby-Beethoven.git,2020-04-14 20:27:57+00:00,,0,dmu1313/Baby-Beethoven,255718381,SystemVerilog,Baby-Beethoven,55181,0,2020-07-17 10:34:08+00:00,[],
4691,https://github.com/rendaletaas/ee287SHAproject.git,2020-04-15 01:05:25+00:00,The SHA256 project for EE287 at SJSU,0,rendaletaas/ee287SHAproject,255767293,SystemVerilog,ee287SHAproject,1508,0,2023-01-28 12:39:37+00:00,[],
4692,https://github.com/alejandroramosmartin/Display.git,2020-04-12 17:52:21+00:00,,0,alejandroramosmartin/Display,255138885,SystemVerilog,Display,3700,0,2021-01-05 23:16:02+00:00,[],
4693,https://github.com/bansil-vaghasiya/3-stage-pipelined-MAC-unit.git,2020-06-12 06:37:17+00:00,Verilog code for 3 stage pipelined Multiplier and Adder ,0,bansil-vaghasiya/3-stage-pipelined-MAC-unit,271727077,SystemVerilog,3-stage-pipelined-MAC-unit,8,0,2020-09-20 20:25:40+00:00,[],
4694,https://github.com/astalstain/OpenAV1.git,2020-03-24 14:37:43+00:00,,1,astalstain/OpenAV1,249732503,SystemVerilog,OpenAV1,24,0,2020-05-18 13:15:52+00:00,[],
4695,https://github.com/sibanez12/SDNet_proj.git,2020-03-25 18:44:20+00:00,Simple Vivado project to test SDNet,0,sibanez12/SDNet_proj,250062263,SystemVerilog,SDNet_proj,327,0,2021-11-22 03:03:47+00:00,[],
4696,https://github.com/batuhanates/panda.git,2020-03-17 16:31:33+00:00,,0,batuhanates/panda,248019816,SystemVerilog,panda,99,0,2020-09-21 10:29:07+00:00,[],https://api.github.com/licenses/apache-2.0
4697,https://github.com/charlesdai2003/Kepler_sample_Chao.git,2020-02-18 16:07:18+00:00,New repo containing some of my work for the challenge question response from Kepler.,0,charlesdai2003/Kepler_sample_Chao,241405682,SystemVerilog,Kepler_sample_Chao,939,0,2020-02-18 16:38:30+00:00,[],
4698,https://github.com/toshipp/learn-verilog.git,2020-03-14 07:19:25+00:00,,0,toshipp/learn-verilog,247230561,SystemVerilog,learn-verilog,20,0,2020-03-21 10:30:22+00:00,[],
4699,https://github.com/ttopuz/arc4-decryption.git,2020-06-07 03:36:44+00:00,,1,ttopuz/arc4-decryption,270181584,,arc4-decryption,91,0,2020-06-22 17:58:17+00:00,[],
4700,https://github.com/ojrade/ECE-352.git,2020-06-10 00:00:11+00:00,,0,ojrade/ECE-352,271134823,SystemVerilog,ECE-352,2412,0,2020-06-10 00:00:57+00:00,[],
4701,https://github.com/roman-pogorelov/alt_clones.git,2020-05-11 18:56:41+00:00,Clones of some Intel (Altera) components written in pure HDL,0,roman-pogorelov/alt_clones,263130805,SystemVerilog,alt_clones,10,0,2020-05-13 14:11:12+00:00,[],
4702,https://github.com/Bjorn-J/MicroBlazeMemInit.git,2020-05-18 00:32:23+00:00,Simulation memory initialization for MicroBlaze processor,0,Bjorn-J/MicroBlazeMemInit,264784515,SystemVerilog,MicroBlazeMemInit,11,0,2020-05-18 01:46:09+00:00,[],
4703,https://github.com/ypradera/System-Verilog-and-FPGA-Design.git,2020-06-14 00:47:23+00:00,,0,ypradera/System-Verilog-and-FPGA-Design,272109067,SystemVerilog,System-Verilog-and-FPGA-Design,41,0,2020-06-14 01:01:28+00:00,[],
4704,https://github.com/chen841115/on_chip_homework2.git,2020-06-14 09:56:15+00:00,,0,chen841115/on_chip_homework2,272174559,SystemVerilog,on_chip_homework2,45532,0,2020-12-07 06:01:49+00:00,[],
4705,https://github.com/penguinleo/MyTestBenchUart.git,2020-06-24 13:32:27+00:00,This repository is the testbenchs for the uart ip core I designed. Maybe the *.bat and the *.do file should added into the repository?,0,penguinleo/MyTestBenchUart,274676596,SystemVerilog,MyTestBenchUart,12,0,2020-06-29 13:27:04+00:00,[],
4706,https://github.com/Chong-Gu/9-bit-Instruction.git,2020-06-02 23:44:56+00:00,,0,Chong-Gu/9-bit-Instruction,268932001,SystemVerilog,9-bit-Instruction,537,0,2020-06-02 23:46:19+00:00,[],
4707,https://github.com/djstedronsky/Time_Travelers_Verilog_Stopwatch.git,2020-06-09 21:44:07+00:00,Verilog implementation of RTC/Stopwatch. LTTS FPGA Training.,2,djstedronsky/Time_Travelers_Verilog_Stopwatch,271116091,SystemVerilog,Time_Travelers_Verilog_Stopwatch,3585,0,2020-06-19 16:44:43+00:00,[],
4708,https://github.com/antreasko/Simon_Says-_Game_FPGA.git,2020-03-03 16:07:19+00:00,,0,antreasko/Simon_Says-_Game_FPGA,244681320,SystemVerilog,Simon_Says-_Game_FPGA,3825,0,2020-03-03 16:08:40+00:00,[],
4709,https://github.com/Pear0/mii-net.git,2020-04-02 12:20:42+00:00,,0,Pear0/mii-net,252447156,SystemVerilog,mii-net,5933,0,2020-07-31 06:39:23+00:00,[],
4710,https://github.com/akiles-esta-usado/digital_design_elo212.git,2020-05-22 22:15:45+00:00,Diseños del ramo ELO212,1,akiles-esta-usado/digital_design_elo212,266217762,SystemVerilog,digital_design_elo212,9244,0,2020-07-31 18:17:18+00:00,[],
4711,https://github.com/Kiran760043/Multiplier-using-ROM.git,2020-05-26 19:00:06+00:00,FPGA Programs,0,Kiran760043/Multiplier-using-ROM,267127659,SystemVerilog,Multiplier-using-ROM,69,0,2020-05-26 19:02:21+00:00,[],
4712,https://github.com/Konf/pulpino_students.git,2020-05-26 19:14:42+00:00,,3,Konf/pulpino_students,267130695,SystemVerilog,pulpino_students,128,0,2021-04-01 16:57:30+00:00,[],
4713,https://github.com/pkelling/Hack-Computer.git,2020-05-15 18:52:22+00:00,Build computer from scratch with hack based instruction set with multiprocessing.,0,pkelling/Hack-Computer,264273999,SystemVerilog,Hack-Computer,750,0,2020-05-19 15:33:39+00:00,[],
4714,https://github.com/kouamano/submit_example.git,2020-05-03 14:16:31+00:00,,0,kouamano/submit_example,260939427,SystemVerilog,submit_example,3683,0,2020-06-01 00:40:23+00:00,[],
4715,https://github.com/Jglez2330/Lab3.git,2020-05-05 16:13:38+00:00,Laboratorio #3 del curso Taller de Diseño Digital que corresponde con la implementación de un ALU parametrizable de N bits en System Verilog.,0,Jglez2330/Lab3,261521989,SystemVerilog,Lab3,28235,0,2020-08-12 08:42:48+00:00,[],
4716,https://github.com/zamanimatin/ComputerArch-CA2.git,2020-04-19 17:05:13+00:00,,0,zamanimatin/ComputerArch-CA2,257055795,SystemVerilog,ComputerArch-CA2,22,0,2020-04-24 10:51:55+00:00,[],
4717,https://github.com/chaserwhytey/5StagePipelinedProcessor.git,2020-02-21 18:12:18+00:00,5-stage pipelined processor in SystemVerilog,0,chaserwhytey/5StagePipelinedProcessor,242202111,SystemVerilog,5StagePipelinedProcessor,45,0,2020-04-03 04:53:38+00:00,[],
4718,https://github.com/vedga/FPGA-MULTIPLIER.git,2020-02-19 08:38:29+00:00,Systemverilog code for integer multiplication block,0,vedga/FPGA-MULTIPLIER,241571908,SystemVerilog,FPGA-MULTIPLIER,21,0,2020-02-19 08:46:43+00:00,[],https://api.github.com/licenses/gpl-3.0
4719,https://github.com/brandon-t-nguyen/verilog-modules.git,2020-04-28 23:49:29+00:00,Assorted Verilog and System Verilog modules,0,brandon-t-nguyen/verilog-modules,259778238,SystemVerilog,verilog-modules,6,0,2020-04-30 04:34:56+00:00,[],
4720,https://github.com/Lanagun/UVM.git,2020-05-24 14:34:05+00:00,,0,Lanagun/UVM,266559128,SystemVerilog,UVM,17,0,2020-10-23 08:13:51+00:00,[],
4721,https://github.com/daniellachino/Sim1.git,2020-05-23 13:18:56+00:00,,0,daniellachino/Sim1,266340554,SystemVerilog,Sim1,75,0,2020-06-01 16:16:51+00:00,[],
4722,https://github.com/aniketb005/axi4-verification.git,2020-06-11 19:23:46+00:00,,0,aniketb005/axi4-verification,271629793,SystemVerilog,axi4-verification,542,0,2022-01-04 18:26:08+00:00,[],
4723,https://github.com/chanduong999/421_sw.git,2020-05-16 08:46:44+00:00,,1,chanduong999/421_sw,264395621,SystemVerilog,421_sw,3,0,2020-05-16 08:50:16+00:00,[],
4724,https://github.com/oz-matt/Axi-Lite-Simp.git,2020-05-12 23:05:02+00:00,Single transaction demonstration for AXI Lite master and slave,0,oz-matt/Axi-Lite-Simp,263472145,SystemVerilog,Axi-Lite-Simp,75,0,2020-05-14 01:59:03+00:00,[],
4725,https://github.com/JoeLopez333/Divider.git,2020-05-06 20:04:10+00:00,16x16 hardware divider in system verilog,0,JoeLopez333/Divider,261866482,SystemVerilog,Divider,4,0,2020-05-06 20:08:01+00:00,[],
4726,https://github.com/FroxSoC/rob.git,2020-05-07 14:00:53+00:00,,0,FroxSoC/rob,262066054,SystemVerilog,rob,11,0,2020-05-07 16:43:21+00:00,[],
4727,https://github.com/Vineeth-Narayan/comp-arch-assignment.git,2020-04-22 18:25:07+00:00,,0,Vineeth-Narayan/comp-arch-assignment,257985693,SystemVerilog,comp-arch-assignment,3,0,2020-04-22 20:07:48+00:00,[],
4728,https://github.com/saipra99/sai_systemverilog.git,2020-04-08 12:10:49+00:00,,0,saipra99/sai_systemverilog,254077491,SystemVerilog,sai_systemverilog,8,0,2020-04-08 13:17:02+00:00,[],
4729,https://github.com/huseyn777/Guess-the-movement.git,2020-04-04 02:42:06+00:00,"Hardware based mechanical game, which was programmed on SystemVerilog",0,huseyn777/Guess-the-movement,252891794,SystemVerilog,Guess-the-movement,13,0,2020-09-14 00:09:06+00:00,[],
4730,https://github.com/gilad29/floating_point.git,2020-03-04 00:28:18+00:00,,0,gilad29/floating_point,244771591,SystemVerilog,floating_point,2,0,2020-03-10 23:18:05+00:00,[],
4731,https://github.com/jrmoserbaltimore/retro-1.git,2020-03-15 21:00:03+00:00,"Retro-1 console, based on MiSTer",0,jrmoserbaltimore/retro-1,247550731,SystemVerilog,retro-1,88,0,2020-11-01 19:01:48+00:00,[],
4732,https://github.com/KarimHewidy/uvmGamed.git,2020-03-21 20:59:47+00:00,,0,KarimHewidy/uvmGamed,249059905,SystemVerilog,uvmGamed,12886,0,2020-04-24 12:07:36+00:00,[],
4733,https://github.com/xyz600/xyz-cpu.git,2020-03-01 04:51:13+00:00,original cpu,0,xyz600/xyz-cpu,244088857,SystemVerilog,xyz-cpu,15,0,2020-10-26 01:39:35+00:00,[],
4734,https://github.com/lopej212/ECE474_VLSI.git,2020-04-14 23:50:40+00:00,This repository holds all of the assignments for ECE 474 VLSI System Design course at Oregon State University ,0,lopej212/ECE474_VLSI,255755299,SystemVerilog,ECE474_VLSI,7536,0,2020-04-23 20:46:09+00:00,[],
4735,https://github.com/blecharczyk/TronGameFPGA.git,2020-04-15 21:45:08+00:00,The repository includes a game project in the style of 'Tron' or 'Curve Fever' on the FPGA platform.,0,blecharczyk/TronGameFPGA,256043643,SystemVerilog,TronGameFPGA,826,0,2020-04-15 22:19:50+00:00,[],
4736,https://github.com/qiweiii-git/qwi00_led.git,2020-03-29 15:26:10+00:00,qwi00_led is a simple LED control program.,1,qiweiii-git/qwi00_led,251064968,SystemVerilog,qwi00_led,5,0,2020-04-01 13:56:54+00:00,[],
4737,https://github.com/john777100/Board-game-on-DE2-115-FPGA.git,2020-03-24 08:36:47+00:00,Final project of Electrical Engineering Lab (digital Circuit) supervised by Chia-Hsiang Yang,0,john777100/Board-game-on-DE2-115-FPGA,249654135,SystemVerilog,Board-game-on-DE2-115-FPGA,36288,0,2020-10-26 15:59:27+00:00,[],
4738,https://github.com/fassial/OoO.git,2020-04-05 17:56:12+00:00,OoO,0,fassial/OoO,253297695,SystemVerilog,OoO,79,0,2020-04-05 17:57:49+00:00,[],
4739,https://github.com/Kotaro7750/risky2.git,2020-04-21 12:11:17+00:00,,0,Kotaro7750/risky2,257584015,SystemVerilog,risky2,150,0,2020-06-19 07:22:09+00:00,[],
4740,https://github.com/siamumar/TinyGarble2CircuitSynthesis.git,2020-06-26 00:36:43+00:00,,1,siamumar/TinyGarble2CircuitSynthesis,275042905,SystemVerilog,TinyGarble2CircuitSynthesis,3096,0,2020-06-26 05:28:19+00:00,[],
4741,https://github.com/mr103/ECE-260C-SV-UVM-Verification-Project.git,2020-06-01 18:11:27+00:00,Class Project for ECE 260C,0,mr103/ECE-260C-SV-UVM-Verification-Project,268597086,SystemVerilog,ECE-260C-SV-UVM-Verification-Project,1268,0,2020-06-01 18:22:59+00:00,[],
4742,https://github.com/v-benenati/ece152a_lab6.git,2020-05-21 20:14:24+00:00,,0,v-benenati/ece152a_lab6,265942738,SystemVerilog,ece152a_lab6,19,0,2020-05-29 00:55:09+00:00,[],
4743,https://github.com/me-sachinsingh/spi_uvm_vip.git,2020-05-21 18:24:39+00:00,,0,me-sachinsingh/spi_uvm_vip,265922081,SystemVerilog,spi_uvm_vip,1,0,2020-05-21 19:01:38+00:00,[],
4744,https://github.com/BalderOdinson/pulp_soc_nvdla.git,2020-06-21 18:36:23+00:00,,1,BalderOdinson/pulp_soc_nvdla,273962770,SystemVerilog,pulp_soc_nvdla,105,0,2020-06-21 18:50:07+00:00,[],
4745,https://github.com/karthik-0398/FFTdedicatedhw.git,2020-06-11 08:49:18+00:00,FFT butteryfly dedicated hardware,0,karthik-0398/FFTdedicatedhw,271497236,SystemVerilog,FFTdedicatedhw,8729,0,2024-03-11 21:43:02+00:00,[],https://api.github.com/licenses/mit
4746,https://github.com/umanggarg96/nes_emu.git,2020-06-25 17:34:43+00:00,NES Emulator,0,umanggarg96/nes_emu,274977354,SystemVerilog,nes_emu,2,0,2020-06-25 18:27:16+00:00,[],
4747,https://github.com/marin-ignacio/CE4301-Proyecto1.git,2020-06-29 23:32:08+00:00,,0,marin-ignacio/CE4301-Proyecto1,275948828,SystemVerilog,CE4301-Proyecto1,28157,0,2020-07-15 13:07:40+00:00,[],
4748,https://github.com/cufeolm/sequences.git,2020-03-15 19:48:27+00:00,"this rep is a test playground for sequences ,transactions and packages. (Karim,Mostafa)",1,cufeolm/sequences,247539839,SystemVerilog,sequences,10377,0,2020-05-06 08:22:17+00:00,[],
4749,https://github.com/miyo/srv6_hdl.git,2020-03-18 11:55:40+00:00,,0,miyo/srv6_hdl,248218615,SystemVerilog,srv6_hdl,4,0,2020-03-19 14:15:12+00:00,[],
4750,https://github.com/rahul7456/sha3_256_perm.git,2020-04-17 18:53:07+00:00,287 project,0,rahul7456/sha3_256_perm,256585069,SystemVerilog,sha3_256_perm,1926,0,2020-09-03 04:32:11+00:00,[],
4751,https://github.com/ajteh/CPE233.git,2020-04-01 05:32:03+00:00,,0,ajteh/CPE233,252081199,SystemVerilog,CPE233,2505,0,2020-04-01 06:07:08+00:00,[],
4752,https://github.com/svtrainingonline/SV_training_material.git,2020-04-12 04:20:38+00:00,System Verilog learn by doing with code examples,0,svtrainingonline/SV_training_material,255007353,SystemVerilog,SV_training_material,10,0,2020-04-12 10:25:45+00:00,[],https://api.github.com/licenses/gpl-2.0
4753,https://github.com/ackamal/cse140l_lab1.git,2020-04-16 20:37:16+00:00,,0,ackamal/cse140l_lab1,256324331,SystemVerilog,cse140l_lab1,555,0,2020-04-16 21:26:05+00:00,[],
4754,https://github.com/talesbylal/Escape-Elevator.git,2020-02-27 19:50:29+00:00,,0,talesbylal/Escape-Elevator,243603364,SystemVerilog,Escape-Elevator,309,0,2020-02-27 19:53:41+00:00,[],
4755,https://github.com/swp930/141lab4.git,2020-03-04 21:40:54+00:00,,0,swp930/141lab4,245009680,SystemVerilog,141lab4,22,0,2020-03-17 15:33:06+00:00,[],
4756,https://github.com/shreyas521/ibex.git,2020-03-14 11:53:34+00:00,,0,shreyas521/ibex,247267150,SystemVerilog,ibex,2038,0,2020-09-24 18:15:25+00:00,[],
4757,https://github.com/NidhoggProject/UEC2_Nidhogg.git,2020-03-09 17:00:38+00:00,,0,NidhoggProject/UEC2_Nidhogg,246093653,SystemVerilog,UEC2_Nidhogg,18023,0,2020-09-20 15:01:36+00:00,[],
4758,https://github.com/Vineeth-Narayan/comp-arch-assignment2.git,2020-04-28 05:02:48+00:00,2nd assignment of smp,0,Vineeth-Narayan/comp-arch-assignment2,259536242,SystemVerilog,comp-arch-assignment2,10,0,2020-06-12 13:25:14+00:00,[],
4759,https://github.com/kagg123/Computer-Architecture.git,2020-04-24 03:43:17+00:00,,0,kagg123/Computer-Architecture,258397747,SystemVerilog,Computer-Architecture,36,0,2020-05-05 01:21:14+00:00,[],
4760,https://github.com/djwadhwa/Tic-Tac-Toe-FPGA.git,2020-05-26 22:04:24+00:00,Tic-Tac-Toe written in System Verilog running on DE1-SoC,0,djwadhwa/Tic-Tac-Toe-FPGA,267161403,SystemVerilog,Tic-Tac-Toe-FPGA,17,0,2020-06-28 21:26:42+00:00,[],
4761,https://github.com/hungbk99/Single-Precision-Floating-Point-Unit.git,2020-06-05 15:31:56+00:00,A Single Precision Floating Point Unit Using SystemVerilog from Advanced Digital Techniques subject in HCMUT,0,hungbk99/Single-Precision-Floating-Point-Unit,269685534,SystemVerilog,Single-Precision-Floating-Point-Unit,53,0,2020-09-11 04:08:09+00:00,[],
4762,https://github.com/chdiana1111/Git_test.git,2020-06-07 09:07:01+00:00,test_git,0,chdiana1111/Git_test,270251329,SystemVerilog,Git_test,0,0,2020-06-07 09:30:49+00:00,[],
4763,https://github.com/hchsiao/aosoc.git,2020-05-08 16:23:22+00:00,,0,hchsiao/aosoc,262371953,SystemVerilog,aosoc,194,0,2020-05-12 14:41:48+00:00,[],
4764,https://github.com/farshad112/LFSR.git,2020-04-29 11:11:16+00:00,Parameterized Fibonacci Linear Frequency Shift Register. ,0,farshad112/LFSR,259903207,SystemVerilog,LFSR,2,0,2020-04-29 11:45:32+00:00,[],
4765,https://github.com/MPTG94/Numeric_Systems_Wet1.git,2020-05-24 12:59:18+00:00,"First Wet assignment in 044252 Numeric Systems and Computer Structure Course, Spring 2020",0,MPTG94/Numeric_Systems_Wet1,266541480,SystemVerilog,Numeric_Systems_Wet1,7,0,2020-05-29 14:07:36+00:00,[],
4766,https://github.com/living2code/paritygenerator.git,2020-05-24 15:35:51+00:00,RTL Implementation of binary parity generator,0,living2code/paritygenerator,266570888,SystemVerilog,paritygenerator,3,0,2020-05-24 23:42:04+00:00,[],
4767,https://github.com/sethrohrbach/ece593_proj.git,2020-05-26 00:02:23+00:00,,0,sethrohrbach/ece593_proj,266904225,SystemVerilog,ece593_proj,1564,0,2020-06-09 05:08:25+00:00,[],
4768,https://github.com/hao310rui140326/my_pe.git,2020-05-26 00:39:58+00:00,,0,hao310rui140326/my_pe,266909105,SystemVerilog,my_pe,5097,0,2021-05-05 08:45:08+00:00,[],
4769,https://github.com/gur111/DigiSysSim3.git,2020-06-23 09:04:23+00:00,,0,gur111/DigiSysSim3,274359302,SystemVerilog,DigiSysSim3,8,0,2020-12-09 20:30:41+00:00,[],https://api.github.com/licenses/mit
4770,https://github.com/SpikE4343/ice-flight.git,2020-05-11 00:38:22+00:00,TinyFPGA-BX based quadcopter flight controller,1,SpikE4343/ice-flight,262902711,SystemVerilog,ice-flight,15319,0,2020-11-13 03:39:22+00:00,[],https://api.github.com/licenses/gpl-3.0
4771,https://github.com/ackamal/cse140l_lab3.git,2020-05-19 20:50:12+00:00,,0,ackamal/cse140l_lab3,265363453,SystemVerilog,cse140l_lab3,2911,0,2020-05-26 03:18:08+00:00,[],
4772,https://github.com/ColinFritzLtts/Verilog_Stopwatch.git,2020-06-05 14:22:35+00:00,,1,ColinFritzLtts/Verilog_Stopwatch,269663158,SystemVerilog,Verilog_Stopwatch,2367,0,2020-06-19 22:25:21+00:00,[],
4773,https://github.com/akerlund/rtl_fpga_projects.git,2020-06-07 11:02:22+00:00,FPGA projects,0,akerlund/rtl_fpga_projects,270278437,SystemVerilog,rtl_fpga_projects,189,0,2021-03-17 21:10:00+00:00,[],https://api.github.com/licenses/gpl-3.0
4774,https://github.com/xinyuli672/Digital-Systems-Design.git,2020-04-10 21:00:10+00:00,,0,xinyuli672/Digital-Systems-Design,254735360,SystemVerilog,Digital-Systems-Design,663,0,2020-04-10 21:01:28+00:00,[],
4775,https://github.com/zlgenuine/VitisAI.git,2020-04-04 08:14:28+00:00,,1,zlgenuine/VitisAI,252944689,SystemVerilog,VitisAI,591391,0,2020-07-16 14:59:06+00:00,[],https://api.github.com/licenses/apache-2.0
4776,https://github.com/toshipp/rv.git,2020-05-23 09:41:16+00:00,,0,toshipp/rv,266305990,SystemVerilog,rv,74,0,2023-03-20 11:08:45+00:00,[],https://api.github.com/licenses/gpl-2.0
4777,https://github.com/bhautik1209/SHA3-256-Permutation-Engine.git,2020-06-02 22:45:30+00:00,Hash code generator,0,bhautik1209/SHA3-256-Permutation-Engine,268924034,SystemVerilog,SHA3-256-Permutation-Engine,608,0,2020-06-02 22:46:32+00:00,[],
4778,https://github.com/mr103/BitcoinHash-Processor.git,2020-06-01 18:28:53+00:00,Course Project for ECE 111,0,mr103/BitcoinHash-Processor,268600972,SystemVerilog,BitcoinHash-Processor,4027,0,2020-06-01 18:55:06+00:00,[],
4779,https://github.com/farshad112/MISR.git,2020-04-29 14:25:38+00:00,Multiple Input Shift Register (MISR) design in SystemVerilog.  ,0,farshad112/MISR,259947983,SystemVerilog,MISR,3,0,2020-08-24 06:52:39+00:00,[],
4780,https://github.com/JeanRochCoulon/cv64.git,2020-04-30 13:57:49+00:00,,1,JeanRochCoulon/cv64,260226322,SystemVerilog,cv64,31587,0,2020-04-30 14:02:19+00:00,[],
4781,https://github.com/Yogabhinanda/socsymm.git,2020-05-08 06:44:41+00:00,SOC SYMM - MD.SAZEED AND YOGABHINANDA SRINIVAS,0,Yogabhinanda/socsymm,262247708,SystemVerilog,socsymm,8,0,2020-05-08 07:06:57+00:00,[],
4782,https://github.com/ackamal/cse140l-lab4.git,2020-06-09 00:21:31+00:00,,0,ackamal/cse140l-lab4,270863134,SystemVerilog,cse140l-lab4,7,0,2020-06-09 00:22:46+00:00,[],
4783,https://github.com/hachetman/cores.git,2020-06-11 15:10:38+00:00,HDL ip Cores,0,hachetman/cores,271577668,SystemVerilog,cores,20,0,2020-06-23 19:54:39+00:00,[],
4784,https://github.com/unicornt/mips-bpb.git,2020-05-31 11:11:43+00:00,mips-bpb,0,unicornt/mips-bpb,268263372,SystemVerilog,mips-bpb,2084,0,2020-05-31 11:13:48+00:00,[],
4785,https://github.com/yuanq4/3TB4.git,2020-03-29 19:47:13+00:00,,0,yuanq4/3TB4,251119552,SystemVerilog,3TB4,14790,0,2020-03-29 19:59:15+00:00,[],
4786,https://github.com/clubMustakisValparaiso/ARMSIM.git,2020-03-31 13:38:52+00:00,,0,clubMustakisValparaiso/ARMSIM,251613433,SystemVerilog,ARMSIM,207,0,2020-03-31 14:57:57+00:00,[],
4787,https://github.com/HSuzu/UdrGrad-VideoControler.git,2020-04-22 06:54:26+00:00,,0,HSuzu/UdrGrad-VideoControler,257817459,SystemVerilog,UdrGrad-VideoControler,8981,0,2020-04-22 07:18:34+00:00,[],
4788,https://github.com/darwinjpr/riscv-core.git,2020-06-30 01:44:31+00:00,Desarrollo de un microprocesador riscvi32 utilizando vivado,0,darwinjpr/riscv-core,275968408,SystemVerilog,riscv-core,85,0,2020-08-07 23:38:44+00:00,[],
4789,https://github.com/maorshweky/yuvalsh_training.git,2020-03-17 13:37:30+00:00,Yuval Shapira's training repo,0,maorshweky/yuvalsh_training,247979015,SystemVerilog,yuvalsh_training,42,0,2020-04-26 12:50:40+00:00,[],
4790,https://github.com/isaacporras/TallerDiseno-LAB3.git,2020-03-10 16:25:02+00:00,,0,isaacporras/TallerDiseno-LAB3,246351417,SystemVerilog,TallerDiseno-LAB3,10193,0,2020-05-19 15:45:04+00:00,[],
4791,https://github.com/maorshweky/arielk_training.git,2020-03-17 15:51:05+00:00,Ariel Kalish's training repo,0,maorshweky/arielk_training,248010745,SystemVerilog,arielk_training,45,0,2020-04-26 12:49:06+00:00,[],
4792,https://github.com/udairathore/Thesis.git,2020-03-08 05:32:06+00:00,Repository for Thesis,0,udairathore/Thesis,245758076,SystemVerilog,Thesis,4838,0,2020-07-23 17:05:12+00:00,[],
4793,https://github.com/Bob-Li-2020/axi.git,2020-03-20 10:33:15+00:00,,0,Bob-Li-2020/axi,248729001,SystemVerilog,axi,3354,0,2020-09-11 01:47:48+00:00,[],
4794,https://github.com/Boundouq/Projet_SoC.git,2020-03-23 23:16:59+00:00,,0,Boundouq/Projet_SoC,249565248,SystemVerilog,Projet_SoC,417,0,2020-11-15 13:20:51+00:00,[],
4795,https://github.com/Muellegr/FPGA_i2c.git,2020-06-26 01:08:44+00:00,,0,Muellegr/FPGA_i2c,275046849,SystemVerilog,FPGA_i2c,11,0,2020-06-28 04:14:04+00:00,[],
4796,https://github.com/atfienberg/mDOMPins.git,2020-06-30 20:24:12+00:00,mDOM pin validation,0,atfienberg/mDOMPins,276200954,SystemVerilog,mDOMPins,13513,0,2020-07-07 19:57:47+00:00,[],
4797,https://github.com/jamesswingos/cs141_proj5.git,2020-04-17 19:59:08+00:00,Let's get this done litty titty,0,jamesswingos/cs141_proj5,256597566,SystemVerilog,cs141_proj5,4172,0,2020-04-27 20:40:06+00:00,[],
4798,https://github.com/jgtorchi/EE521_RAT_CPU.git,2020-04-16 20:44:40+00:00,,0,jgtorchi/EE521_RAT_CPU,256325712,SystemVerilog,EE521_RAT_CPU,50,0,2020-05-25 10:06:35+00:00,[],
4799,https://github.com/SamyuelDanyo/vlsi-bitslice-divider-datapath.git,2020-03-11 02:51:22+00:00,"8-Bit divider datapath system design using bitslice VLSI technique. Custom cell library, bitslice architecture and control ASM design.",0,SamyuelDanyo/vlsi-bitslice-divider-datapath,246459718,SystemVerilog,vlsi-bitslice-divider-datapath,1001,0,2023-12-05 12:49:22+00:00,[],https://api.github.com/licenses/mit
4800,https://github.com/deekshagajendra/practice.git,2020-02-20 05:24:59+00:00,learning git,0,deekshagajendra/practice,241800885,SystemVerilog,practice,3,0,2020-02-21 07:07:13+00:00,[],
4801,https://github.com/Mixbap/AES.git,2020-04-16 09:22:42+00:00,,0,Mixbap/AES,256167555,SystemVerilog,AES,24,0,2020-04-16 09:22:53+00:00,[],
4802,https://github.com/rn00175/ARM-Microprocessor.git,2020-04-17 05:10:09+00:00,"Basic 10 Instruction, Pipelined ARM microprocessor Simulation adapted from ECE469 Labs",0,rn00175/ARM-Microprocessor,256406846,SystemVerilog,ARM-Microprocessor,37,0,2020-09-08 21:27:12+00:00,[],https://api.github.com/licenses/mit
4803,https://github.com/Teggoon/CSE140LLab1.git,2020-04-16 19:36:09+00:00,Lab 1 with Vicente my man,0,Teggoon/CSE140LLab1,256312089,SystemVerilog,CSE140LLab1,1053,0,2021-01-27 20:12:17+00:00,[],
4804,https://github.com/qaztronic/ece594Neuromorphic.git,2020-04-15 02:47:20+00:00,,0,qaztronic/ece594Neuromorphic,255786780,SystemVerilog,ece594Neuromorphic,99,0,2020-04-15 02:47:35+00:00,[],
4805,https://github.com/ndbeste/598-Project.git,2020-04-14 22:27:45+00:00,Neuromorphic VLSI Project,1,ndbeste/598-Project,255741803,SystemVerilog,598-Project,8161,0,2020-05-05 05:22:43+00:00,[],
4806,https://github.com/AlfonsoUSM/Caracterizacion.git,2020-04-14 22:16:48+00:00,,0,AlfonsoUSM/Caracterizacion,255739844,SystemVerilog,Caracterizacion,165338,0,2020-05-11 05:21:52+00:00,[],
4807,https://github.com/adi226/-Hardware-Generator-for-Deep-Convolution-Neural-Networks.git,2020-05-30 09:56:52+00:00,"Design, simulation and synthesis of a configurable Artificial Neural Network and creating a parameterized HDL generation tool in C++ to create an optimized 3-Layer Neural Network. Each layer based on ARM’s AXI4 handshaking protocol.",0,adi226/-Hardware-Generator-for-Deep-Convolution-Neural-Networks,268052751,SystemVerilog,-Hardware-Generator-for-Deep-Convolution-Neural-Networks,1928,0,2020-05-30 10:10:56+00:00,[],
4808,https://github.com/elpidakrp/vlsi_score_4.git,2020-06-16 13:06:16+00:00,,0,elpidakrp/vlsi_score_4,272710338,SystemVerilog,vlsi_score_4,859,0,2021-11-28 12:03:16+00:00,[],
4809,https://github.com/souvicksaha95/System-Verilog-Basics.git,2020-06-03 14:20:03+00:00,This repo is not about any projects. It's just about why Systemverilog is better than Verilog and it's features.,0,souvicksaha95/System-Verilog-Basics,269108015,SystemVerilog,System-Verilog-Basics,20,0,2020-06-05 15:29:13+00:00,[],
4810,https://github.com/CBX1997/verilog.git,2020-06-21 16:16:12+00:00,verilog code module,0,CBX1997/verilog,273940665,SystemVerilog,verilog,97,0,2021-01-21 11:56:09+00:00,[],
4811,https://github.com/MPTG94/Numeric_Systems_Wet3.git,2020-06-21 13:27:35+00:00,"Third Wet assignment in 044252 Numeric Systems and Computer Structure Course, Spring 2020",0,MPTG94/Numeric_Systems_Wet3,273909654,SystemVerilog,Numeric_Systems_Wet3,8,0,2020-06-22 14:55:17+00:00,[],
4812,https://github.com/melt-umn/lambda-calculus.git,2020-02-18 00:39:17+00:00,An implementation of the lambda calculus using term rewriting in Silver,0,melt-umn/lambda-calculus,241238641,SystemVerilog,lambda-calculus,52,0,2021-10-05 21:54:50+00:00,[],https://api.github.com/licenses/lgpl-3.0
4813,https://github.com/MartinMeng008/hackdac-2018-soc.git,2020-02-18 20:38:18+00:00,Buggy SoC used for the second phase of the Hack@DAC 2018 hardware security competition. ,0,MartinMeng008/hackdac-2018-soc,241462253,,hackdac-2018-soc,19051,0,2023-08-19 06:07:04+00:00,[],
4814,https://github.com/Fizz-Trickster/STUDY_Verilog.git,2020-03-07 14:22:28+00:00,,0,Fizz-Trickster/STUDY_Verilog,245646356,SystemVerilog,STUDY_Verilog,7,0,2020-03-15 03:05:38+00:00,[],
4815,https://github.com/RudrenduMahindar/EE599_mahindar_6343999513.git,2020-03-07 05:24:37+00:00,FPGA assignments,0,RudrenduMahindar/EE599_mahindar_6343999513,245573868,SystemVerilog,EE599_mahindar_6343999513,585,0,2020-04-06 22:03:09+00:00,[],
4816,https://github.com/yangp8/EE371FinalProject.git,2020-02-28 22:23:28+00:00,,0,yangp8/EE371FinalProject,243864987,SystemVerilog,EE371FinalProject,19140,0,2020-02-29 23:59:44+00:00,[],
4817,https://github.com/daniellachino/Sim3_2.git,2020-06-26 15:13:02+00:00,,0,daniellachino/Sim3_2,275184847,SystemVerilog,Sim3_2,8,0,2020-06-26 17:04:21+00:00,[],
4818,https://github.com/alejocv7/fpga-calculator.git,2020-06-25 13:33:10+00:00,,0,alejocv7/fpga-calculator,274924334,SystemVerilog,fpga-calculator,7,0,2023-06-11 23:58:31+00:00,[],
4819,https://github.com/DarshanBallari/darshan01.git,2020-04-11 15:06:02+00:00,,0,DarshanBallari/darshan01,254892928,SystemVerilog,darshan01,1,0,2020-04-12 18:08:09+00:00,[],
4820,https://github.com/jnestor/flowreg-dally.git,2020-03-27 22:42:12+00:00,Register with ready-valid flow control based on Dally & Harting Example 22.1,0,jnestor/flowreg-dally,250664325,SystemVerilog,flowreg-dally,0,0,2020-03-27 23:25:32+00:00,[],
4821,https://github.com/SaintAnger589/uvmPractice.git,2020-04-27 05:42:32+00:00,,0,SaintAnger589/uvmPractice,259216709,SystemVerilog,uvmPractice,6,0,2020-05-01 14:52:20+00:00,[],
4822,https://github.com/ludwig247/ibex.git,2020-03-15 08:41:45+00:00,ibex,1,ludwig247/ibex,247430004,SystemVerilog,ibex,1947,0,2020-03-15 08:42:29+00:00,[],
4823,https://github.com/flyingpiggs/ECE469-labs.git,2020-03-14 20:04:04+00:00,UIC ECE469 labs for netID chen172 and jv2,0,flyingpiggs/ECE469-labs,247345202,SystemVerilog,ECE469-labs,1065,0,2020-04-10 21:51:19+00:00,[],
4824,https://github.com/ffflowww/FPGA-counter.git,2020-05-25 16:27:12+00:00,"Small basic counter build with Quartus Prime 19.1, using Altera DE1-SoC",1,ffflowww/FPGA-counter,266827593,SystemVerilog,FPGA-counter,24,0,2020-06-03 20:37:30+00:00,[],
4825,https://github.com/ggamb1t/Practice_Spring2020_SystemVerilog.git,2020-05-29 18:47:17+00:00,,0,ggamb1t/Practice_Spring2020_SystemVerilog,267931311,SystemVerilog,Practice_Spring2020_SystemVerilog,5,0,2020-06-01 02:29:45+00:00,[],
4826,https://github.com/MehmetAnil/ALU.git,2020-05-17 11:39:24+00:00,,0,MehmetAnil/ALU,264650990,SystemVerilog,ALU,7,0,2020-05-19 11:57:52+00:00,[],
4827,https://github.com/MusicFreak456/Simple_Brainfuck_Processor.git,2020-06-11 20:54:06+00:00,,0,MusicFreak456/Simple_Brainfuck_Processor,271644821,SystemVerilog,Simple_Brainfuck_Processor,4,0,2020-06-15 16:15:03+00:00,[],https://api.github.com/licenses/mit
4828,https://github.com/Divyaj2/project.git,2020-06-05 05:45:54+00:00,,0,Divyaj2/project,269541239,SystemVerilog,project,124345,0,2020-06-05 05:51:36+00:00,[],
4829,https://github.com/plenck/HDL.git,2020-06-05 07:43:36+00:00,,0,plenck/HDL,269563439,SystemVerilog,HDL,14,0,2020-06-12 07:34:55+00:00,[],https://api.github.com/licenses/mit
4830,https://github.com/PCercelino/FIFO.git,2020-06-14 04:17:52+00:00,Design and Testbench of a FIFO (First-in / First-out) in the discipline of embedded systems.,0,PCercelino/FIFO,272131404,SystemVerilog,FIFO,1,0,2020-06-14 04:20:08+00:00,[],
4831,https://github.com/hachetman/icebreaker_build.git,2020-06-08 17:48:21+00:00,,0,hachetman/icebreaker_build,270767083,SystemVerilog,icebreaker_build,17,0,2020-06-23 19:57:20+00:00,[],https://api.github.com/licenses/lgpl-3.0
4832,https://github.com/amit-ro/bus-synchronizers.git,2020-06-08 17:09:01+00:00,few designs of bus synchronizers,0,amit-ro/bus-synchronizers,270754733,SystemVerilog,bus-synchronizers,117,0,2020-06-10 15:18:13+00:00,[],
4833,https://github.com/JiayiA/CSE140L-Labs.git,2020-06-30 18:01:18+00:00,Verilog,0,JiayiA/CSE140L-Labs,276172967,SystemVerilog,CSE140L-Labs,7586,0,2020-06-30 18:11:31+00:00,[],
4834,https://github.com/PacoReinaCampo/PU-FinTech.git,2020-03-05 22:43:36+00:00,Financial Technology with PU-NTM verified with UVM/OSVVM/FV,0,PacoReinaCampo/PU-FinTech,245282703,SystemVerilog,PU-FinTech,60626,0,2023-08-30 19:23:29+00:00,[],https://api.github.com/licenses/mit
4835,https://github.com/ahmedihabb2/SPI.git,2020-06-21 13:49:15+00:00,Serial Peripheral Interface,0,ahmedihabb2/SPI,273913449,SystemVerilog,SPI,6,0,2020-06-21 13:51:01+00:00,[],
4836,https://github.com/BenHalpe/Sim3.git,2020-06-23 14:39:59+00:00,,0,BenHalpe/Sim3,274430262,SystemVerilog,Sim3,1721,0,2020-06-29 10:12:38+00:00,[],
4837,https://github.com/hassaankhalid1996/wb_slave_core2.git,2020-06-27 12:22:36+00:00,Designing a layered test-bench for the wishbone slave interface.,2,hassaankhalid1996/wb_slave_core2,275366752,SystemVerilog,wb_slave_core2,105,0,2020-07-02 14:26:42+00:00,[],
4838,https://github.com/anshumn305/coding.git,2020-06-27 09:31:06+00:00,,0,anshumn305/coding,275339952,SystemVerilog,coding,1,0,2020-06-27 09:41:13+00:00,[],
4839,https://github.com/hungbk99/RVS192-CPU.git,2020-06-05 15:57:12+00:00,A 32-bit RISC-V CPU using SystemVerilog from my Design Project in HCMUT,1,hungbk99/RVS192-CPU,269693070,SystemVerilog,RVS192-CPU,3999,0,2021-03-31 03:29:46+00:00,[],
4840,https://github.com/cmyhust/CoreBench.git,2020-06-04 15:32:22+00:00,,0,cmyhust/CoreBench,269397229,,CoreBench,38,0,2020-06-04 16:55:04+00:00,[],https://api.github.com/licenses/gpl-3.0
4841,https://github.com/AustinRye/MIPS-Processor.git,2020-06-06 16:38:50+00:00,A 32-bit single-cycle MIPS processor based on the RISC instruction set architecture.,0,AustinRye/MIPS-Processor,270040566,SystemVerilog,MIPS-Processor,192,0,2021-01-02 19:20:01+00:00,[],
4842,https://github.com/prism5426/EE-371-Final-Project.git,2020-06-01 06:37:13+00:00,Lab6,0,prism5426/EE-371-Final-Project,268444133,SystemVerilog,EE-371-Final-Project,78,0,2021-03-06 02:24:58+00:00,[],
4843,https://github.com/yg2m19/ELEC6231_Cycle_Computer.git,2020-06-12 16:09:26+00:00,ELEC6231 VLSI Project/ Systemverilog code of cycle computer,0,yg2m19/ELEC6231_Cycle_Computer,271839506,SystemVerilog,ELEC6231_Cycle_Computer,3254,0,2020-06-12 16:10:21+00:00,[],
4844,https://github.com/Teggoon/Lab5.git,2020-06-08 20:03:14+00:00,,0,Teggoon/Lab5,270809511,SystemVerilog,Lab5,62,0,2020-06-12 06:00:28+00:00,[],
4845,https://github.com/Xtyll/ip_v4_header_crc.git,2020-05-20 09:14:52+00:00,Module for calculation checksum of the IP v4 header,0,Xtyll/ip_v4_header_crc,265512039,SystemVerilog,ip_v4_header_crc,5,0,2020-06-13 21:03:19+00:00,[],
4846,https://github.com/MehmetAnil/RegisterMemory.git,2020-06-01 19:48:54+00:00,,0,MehmetAnil/RegisterMemory,268617408,SystemVerilog,RegisterMemory,2,0,2020-08-26 09:36:13+00:00,[],
4847,https://github.com/FelipeAsOr/VGAcontroller.git,2020-05-16 15:14:35+00:00,Using System Verilog a VGA controller will be write on here,0,FelipeAsOr/VGAcontroller,264464268,SystemVerilog,VGAcontroller,5457,0,2020-05-30 02:49:39+00:00,[],
4848,https://github.com/TwistsOfFate/MIPS-CPU-HDL.git,2020-03-15 00:05:34+00:00,MIPS CPU written in HDL.,0,TwistsOfFate/MIPS-CPU-HDL,247372987,SystemVerilog,MIPS-CPU-HDL,2509,0,2020-05-06 23:50:22+00:00,[],https://api.github.com/licenses/mit
4849,https://github.com/oliverb123/pop_fpga.git,2020-04-07 14:02:08+00:00,,0,oliverb123/pop_fpga,253810529,SystemVerilog,pop_fpga,8,0,2021-04-18 11:36:46+00:00,[],https://api.github.com/licenses/mit
4850,https://github.com/konstantinosskoutelis/MIPS-8-bit-Microprocessor.git,2020-04-07 15:25:32+00:00,,0,konstantinosskoutelis/MIPS-8-bit-Microprocessor,253834424,SystemVerilog,MIPS-8-bit-Microprocessor,154,0,2021-03-06 13:47:57+00:00,[],
4851,https://github.com/LFzhaoyue123/SystemVerilog_Lab.git,2020-04-25 02:57:08+00:00,for new learner of seystemverilog,0,LFzhaoyue123/SystemVerilog_Lab,258674091,SystemVerilog,SystemVerilog_Lab,119,0,2020-06-03 07:10:21+00:00,[],
4852,https://github.com/tanerdurmaz/cs-223-project.git,2020-03-17 09:05:49+00:00,Bilkent University' Digital Design project about creating cellular automata,0,tanerdurmaz/cs-223-project,247924137,SystemVerilog,cs-223-project,259,0,2020-03-17 10:40:37+00:00,[],
4853,https://github.com/pnarahar/generic_modules.git,2020-03-08 04:59:16+00:00,Develop useful generic modules,0,pnarahar/generic_modules,245754818,SystemVerilog,generic_modules,31,0,2021-12-12 21:34:42+00:00,[],
4854,https://github.com/SamyuelDanyo/fsm-design-test-rtl.git,2020-03-10 19:29:24+00:00,SystemVerilog Design For Testability (DFT) as applied to Finate State Machines (FSMs). Aims to show how DFT structures can be built into an integrated circuit (IC) to assist testing via a scan path..,0,SamyuelDanyo/fsm-design-test-rtl,246389651,SystemVerilog,fsm-design-test-rtl,152,0,2020-03-15 14:52:27+00:00,[],https://api.github.com/licenses/mit
4855,https://github.com/rishikdutta/EE599-Accelerated-computing_Assignment2_.git,2020-04-04 04:22:56+00:00,assignment 2,0,rishikdutta/EE599-Accelerated-computing_Assignment2_,252907717,SystemVerilog,EE599-Accelerated-computing_Assignment2_,4,0,2020-04-04 04:43:21+00:00,[],
4856,https://github.com/estejairo/coprossesor.git,2020-04-05 03:01:45+00:00,Coprossesor with usb communication,0,estejairo/coprossesor,253144449,SystemVerilog,coprossesor,31,0,2020-04-07 07:33:20+00:00,[],
4857,https://github.com/oesan1/ece111.git,2020-02-24 10:41:10+00:00,group projects,0,oesan1/ece111,242709485,SystemVerilog,ece111,21,0,2020-03-21 05:14:07+00:00,[],
4858,https://github.com/JimmyYourHonor/cse_148.git,2020-04-14 23:12:04+00:00,,0,JimmyYourHonor/cse_148,255749303,SystemVerilog,cse_148,238625,0,2022-07-26 17:10:49+00:00,[],
4859,https://github.com/errangutan/empty_env.git,2020-04-16 13:14:31+00:00,Empty environment for testing meru,0,errangutan/empty_env,256219475,SystemVerilog,empty_env,23,0,2020-04-30 07:57:50+00:00,[],
4860,https://github.com/srishis/CarryLookAheadAdderUsingSystemVerilog.git,2020-04-16 22:06:33+00:00,8 bit Carry Look Ahead Adder Using System Verilog,0,srishis/CarryLookAheadAdderUsingSystemVerilog,256340627,SystemVerilog,CarryLookAheadAdderUsingSystemVerilog,217,0,2020-04-16 22:19:04+00:00,[],
4861,https://github.com/scottcs2/561_Final_Project.git,2020-04-21 18:08:47+00:00,EECS 561 Final Project for a stabilizing a hovering rocket.,0,scottcs2/561_Final_Project,257676551,SystemVerilog,561_Final_Project,65,0,2020-04-21 18:27:44+00:00,[],
4862,https://github.com/NiravJadav/APB_SLAVE_PORT.git,2020-02-26 07:28:33+00:00,,0,NiravJadav/APB_SLAVE_PORT,243196413,SystemVerilog,APB_SLAVE_PORT,89,0,2020-03-17 06:44:11+00:00,[],
4863,https://github.com/liyueahhh/SVerilog.git,2020-02-18 04:29:11+00:00,,0,liyueahhh/SVerilog,241272245,SystemVerilog,SVerilog,2,0,2020-02-18 04:31:15+00:00,[],
4864,https://github.com/acanalpay/Digital-Design-Project.git,2020-02-26 18:20:37+00:00,CS223 Digital Design Course Project,0,acanalpay/Digital-Design-Project,243333917,SystemVerilog,Digital-Design-Project,991,0,2021-03-23 07:09:07+00:00,[],
4865,https://github.com/gur111/DigiSysSym1.git,2020-05-13 09:39:14+00:00,,0,gur111/DigiSysSym1,263587117,SystemVerilog,DigiSysSym1,37,0,2020-12-09 20:30:44+00:00,[],
4866,https://github.com/sebas97012/RSAASIP.git,2020-05-30 18:21:08+00:00,Primer proyecto grupal de CE-4301: Arquitectura de Computadores I. I semestre 2020,1,sebas97012/RSAASIP,268136373,SystemVerilog,RSAASIP,317955,0,2021-02-02 16:11:15+00:00,[],
4867,https://github.com/ChristianKouris/sha256.git,2020-05-27 07:01:41+00:00,A simple version of the sha256 hashing algorithm,0,ChristianKouris/sha256,267245304,SystemVerilog,sha256,4,0,2021-03-30 05:46:19+00:00,[],
4868,https://github.com/oscar-rc1/ELO212_2020_Tests.git,2020-05-31 00:38:53+00:00,,2,oscar-rc1/ELO212_2020_Tests,268183873,SystemVerilog,ELO212_2020_Tests,27,0,2020-10-03 09:24:30+00:00,[],
4869,https://github.com/harinidarapu/system-Verilog.git,2020-03-11 21:44:09+00:00,concepts,0,harinidarapu/system-Verilog,246685927,SystemVerilog,system-Verilog,5,0,2020-03-23 03:41:19+00:00,[],
4870,https://github.com/silicondosa/EE-599_SurajChakravarthiRaja_1389288844.git,2020-03-08 03:26:45+00:00,EE599: Accelerated Computing using FPGAs (Assignments),0,silicondosa/EE-599_SurajChakravarthiRaja_1389288844,245745246,SystemVerilog,EE-599_SurajChakravarthiRaja_1389288844,16034,0,2020-04-04 08:44:05+00:00,[],
4871,https://github.com/oz-matt/EasierUVM-SimpRisc-ws.git,2020-06-28 23:50:32+00:00,Verification suite of the SimpRisc CPU using the EasierUVM code gen,1,oz-matt/EasierUVM-SimpRisc-ws,275688584,SystemVerilog,EasierUVM-SimpRisc-ws,18239,0,2021-01-14 20:41:18+00:00,[],
4872,https://github.com/zeeshan0309/D_flipflop_implement.git,2020-05-07 08:22:10+00:00,,0,zeeshan0309/D_flipflop_implement,261992097,SystemVerilog,D_flipflop_implement,2,0,2020-05-07 08:26:55+00:00,[],
4873,https://github.com/wofanqiang/AES_implementation.git,2020-05-02 08:00:28+00:00,,0,wofanqiang/AES_implementation,260640857,SystemVerilog,AES_implementation,9,0,2021-03-27 05:50:54+00:00,[],
4874,https://github.com/hchsiao/zero-buggy.git,2020-05-08 16:23:42+00:00,,0,hchsiao/zero-buggy,262372033,SystemVerilog,zero-buggy,4,0,2020-05-08 16:32:17+00:00,[],
4875,https://github.com/hzhang131/ECE385_final.git,2020-05-12 00:00:25+00:00,ECE 385 Final Project,2,hzhang131/ECE385_final,263186567,SystemVerilog,ECE385_final,86750,0,2021-10-16 15:52:27+00:00,[],
4876,https://github.com/hamidsalemi77/CA_CA-1.git,2020-04-24 18:22:43+00:00,caa,0,hamidsalemi77/CA_CA-1,258590503,SystemVerilog,CA_CA-1,1715,0,2020-04-25 18:59:58+00:00,[],
4877,https://github.com/yueyang2000/brick_game.git,2020-05-23 11:32:20+00:00,A simple brick-destroy game implemented on FPGA,0,yueyang2000/brick_game,266322986,SystemVerilog,brick_game,7122,0,2021-12-11 03:53:28+00:00,[],
4878,https://github.com/moriahgau/ECE385-Final-Project.git,2020-05-14 03:43:37+00:00,Space Invaders-Inspired Game in SystemVerilog,0,moriahgau/ECE385-Final-Project,263808020,SystemVerilog,ECE385-Final-Project,44,0,2020-05-14 03:50:33+00:00,[],
4879,https://github.com/AustinRye/HDL-Common-Blocks.git,2020-05-23 20:51:47+00:00,A package of commonly used HDL blocks.,0,AustinRye/HDL-Common-Blocks,266417575,SystemVerilog,HDL-Common-Blocks,23,0,2021-01-02 19:22:17+00:00,[],
4880,https://github.com/bansil-vaghasiya/Digital-Vending-Machine-.git,2020-06-12 06:09:21+00:00,Verilog code for digital vending machine for 5 products.,0,bansil-vaghasiya/Digital-Vending-Machine-,271722222,SystemVerilog,Digital-Vending-Machine-,3,0,2020-06-12 06:15:02+00:00,[],
4881,https://github.com/vparik6/HDL-based-System-Design-.git,2020-06-09 21:51:54+00:00,This repo contains my lab work from HDL based system design course at UIC ,0,vparik6/HDL-based-System-Design-,271117254,SystemVerilog,HDL-based-System-Design-,2320,0,2020-06-09 22:13:03+00:00,[],
4882,https://github.com/AndersStruck/02204-Metastability-in-FPGA.git,2020-04-21 14:22:50+00:00,Project to detect metastability in FPGA's,0,AndersStruck/02204-Metastability-in-FPGA,257620388,SystemVerilog,02204-Metastability-in-FPGA,115,0,2020-05-17 22:06:43+00:00,[],
4883,https://github.com/qaztronic/ECE_252B_Paper.git,2020-06-06 19:48:06+00:00,,0,qaztronic/ECE_252B_Paper,270086719,SystemVerilog,ECE_252B_Paper,1152,0,2020-06-11 06:37:22+00:00,[],
4884,https://github.com/AStiffLizard/Clockz.git,2020-05-27 01:33:37+00:00,,0,AStiffLizard/Clockz,267191779,SystemVerilog,Clockz,14,0,2020-05-27 02:55:47+00:00,[],
4885,https://github.com/Asker0K/digitalClock.git,2020-06-29 16:30:02+00:00,Digital clock based on SystemVerilog. This project is created for passing exam in MAI.,0,Asker0K/digitalClock,275869859,SystemVerilog,digitalClock,9428,0,2020-06-29 16:32:42+00:00,[],
4886,https://github.com/ynsengun/Emergency_Elevator.git,2020-02-16 18:07:10+00:00,A project developed on Basys 3 board. System Verilog and high level state machine design are used to design hardware.,0,ynsengun/Emergency_Elevator,240939974,SystemVerilog,Emergency_Elevator,1516,0,2020-02-16 18:24:56+00:00,[],
4887,https://github.com/Brian-08/CPE333_.git,2020-02-19 01:37:34+00:00,333 Project Files,0,Brian-08/CPE333_,241507062,SystemVerilog,CPE333_,796,0,2020-03-21 06:40:41+00:00,[],
4888,https://github.com/asicdv/systemverilog.git,2020-03-04 02:11:11+00:00,,0,asicdv/systemverilog,244786574,SystemVerilog,systemverilog,17,0,2020-03-10 03:14:40+00:00,[],
4889,https://github.com/abdoulahidia/verif.git,2020-04-13 03:57:23+00:00,,0,abdoulahidia/verif,255226688,SystemVerilog,verif,16,0,2020-04-14 02:35:14+00:00,[],
4890,https://github.com/samycharas/openfpga_tb.git,2020-04-05 23:49:27+00:00,,0,samycharas/openfpga_tb,253355084,SystemVerilog,openfpga_tb,28314,0,2020-04-08 03:03:25+00:00,[],
4891,https://github.com/sahilumrotkar/system-verilog.git,2020-04-07 03:48:39+00:00,,0,sahilumrotkar/system-verilog,253680913,SystemVerilog,system-verilog,1,0,2020-04-07 06:00:14+00:00,[],
4892,https://github.com/soleiyu/float_hdl.git,2020-04-09 06:02:13+00:00,,0,soleiyu/float_hdl,254284940,SystemVerilog,float_hdl,672,0,2020-05-20 12:46:20+00:00,[],
4893,https://github.com/mtdudek/FPGA.git,2020-02-25 22:49:11+00:00,Kurs FPGA/ FPGA course ,0,mtdudek/FPGA,243119614,SystemVerilog,FPGA,57029,0,2020-02-26 00:10:32+00:00,[],
4894,https://github.com/cisabelle-impinj/fpga_final.git,2020-03-05 05:21:50+00:00,,0,cisabelle-impinj/fpga_final,245076127,SystemVerilog,fpga_final,1033,0,2020-03-05 05:24:23+00:00,[],
4895,https://github.com/Cra2yPierr0t/TOY_TPU.git,2020-06-23 15:37:23+00:00,取り敢えず動くTPU,0,Cra2yPierr0t/TOY_TPU,274444047,SystemVerilog,TOY_TPU,12,0,2020-08-07 05:26:21+00:00,[],
4896,https://github.com/kisung5/ProyectoGrupalI.git,2020-06-21 00:08:54+00:00,,0,kisung5/ProyectoGrupalI,273804769,SystemVerilog,ProyectoGrupalI,16992,0,2021-11-21 07:34:26+00:00,[],
4897,https://github.com/j2kim99/hsd20_lab10.git,2020-06-12 13:42:20+00:00,,0,j2kim99/hsd20_lab10,271807732,SystemVerilog,hsd20_lab10,673,0,2020-06-16 19:12:46+00:00,[],
4898,https://github.com/yufat48/pulpissimo.git,2020-06-17 05:00:48+00:00,branch of pulpissimo,0,yufat48/pulpissimo,272881975,SystemVerilog,pulpissimo,8229,0,2020-06-17 05:57:19+00:00,[],
4899,https://github.com/Adrofier/Dual-Clock-Asynchronous-FIFO-Buffer.git,2020-06-17 06:48:13+00:00,Dual-Clock Asynchronous FIFO Buffer used for Clock domain crossing and other VGA Applications.,0,Adrofier/Dual-Clock-Asynchronous-FIFO-Buffer,272899239,SystemVerilog,Dual-Clock-Asynchronous-FIFO-Buffer,13,0,2020-06-27 05:32:34+00:00,[],https://api.github.com/licenses/mit
4900,https://github.com/mattbrown015/fpga-ip-example.git,2020-06-22 07:59:34+00:00,Example of how to use Vivado IP in an FPGA design,0,mattbrown015/fpga-ip-example,274075839,SystemVerilog,fpga-ip-example,27,0,2020-06-23 18:06:54+00:00,[],
4901,https://github.com/ram-bhaskara/HDMI-Tx.git,2020-04-18 16:30:50+00:00,Demonstration of HDMI transmitter implemented on Zybo z7020 FPGA,0,ram-bhaskara/HDMI-Tx,256801050,SystemVerilog,HDMI-Tx,1142,0,2020-04-18 17:32:24+00:00,[],
4902,https://github.com/JoeLopez333/WallaceTree.git,2020-04-23 16:44:47+00:00,Code for a 16x16 Wallace Tree multiplier in systemverilog,0,JoeLopez333/WallaceTree,258269036,SystemVerilog,WallaceTree,33,0,2020-05-05 00:48:34+00:00,[],
4903,https://github.com/appledore22/ALU_READY_VALID.git,2020-05-28 09:07:13+00:00,Simple ALU with ready valid handshake mechanism,0,appledore22/ALU_READY_VALID,267543551,SystemVerilog,ALU_READY_VALID,2,0,2020-05-28 09:08:49+00:00,[],
4904,https://github.com/Olorin7/EE599_XueningZhao_5741894054.git,2020-03-05 20:08:57+00:00,USC EE599 related codes,0,Olorin7/EE599_XueningZhao_5741894054,245257591,SystemVerilog,EE599_XueningZhao_5741894054,8823,0,2020-05-10 06:31:06+00:00,['verilog'],
4905,https://github.com/mr103/Bitcoin-Hash-Processor.git,2020-06-10 23:27:09+00:00,,0,mr103/Bitcoin-Hash-Processor,271406217,SystemVerilog,Bitcoin-Hash-Processor,6049,0,2020-06-10 23:31:45+00:00,[],
4906,https://github.com/richapallavi0627/ECE_260C_yapp_project.git,2020-06-01 17:35:49+00:00,,0,richapallavi0627/ECE_260C_yapp_project,268589371,SystemVerilog,ECE_260C_yapp_project,1270,0,2020-06-01 17:58:54+00:00,[],
4907,https://github.com/sycy-pro/decoder.git,2020-03-13 11:01:11+00:00,,1,sycy-pro/decoder,247051195,SystemVerilog,decoder,7913,0,2020-05-26 19:55:10+00:00,[],
4908,https://github.com/Kelton8Z/multiplication_coprocessor.git,2020-05-01 02:56:48+00:00,,1,Kelton8Z/multiplication_coprocessor,260367221,SystemVerilog,multiplication_coprocessor,1,0,2020-05-01 02:58:00+00:00,[],
4909,https://github.com/kammulchandani/UVMI.git,2020-05-01 22:38:06+00:00,,0,kammulchandani/UVMI,260571820,SystemVerilog,UVMI,18089,0,2020-05-01 22:40:57+00:00,[],
4910,https://github.com/oz-matt/patrec_sv.git,2020-04-30 23:44:48+00:00,,0,oz-matt/patrec_sv,260342088,SystemVerilog,patrec_sv,8,0,2020-05-01 04:38:46+00:00,[],
4911,https://github.com/jsamarth/GuitarPedalBoard.git,2020-05-03 01:31:29+00:00,"This is a FPGA Project on Guitar Effects. Usually, guitarists use one guitar effect Stompbox per effect. This project aimed at using the FPGA hardware, which is significantly faster than Microcontrollers, to modulate Guitar signals being fed into the board using Digital Signal Processing. ",0,jsamarth/GuitarPedalBoard,260807252,SystemVerilog,GuitarPedalBoard,6301,0,2020-05-11 10:52:22+00:00,[],
4912,https://github.com/ChristianKouris/cse140l-lab1.git,2020-04-27 22:45:48+00:00,Lab 1 of CSE 140L,0,ChristianKouris/cse140l-lab1,259474020,SystemVerilog,cse140l-lab1,545,0,2021-03-31 00:17:05+00:00,[],
4913,https://github.com/strangetrail/simple_convolution.git,2020-04-28 13:52:38+00:00,Simple convolution module in verilog,0,strangetrail/simple_convolution,259650920,SystemVerilog,simple_convolution,18,0,2020-04-28 13:58:09+00:00,[],https://api.github.com/licenses/gpl-3.0
4914,https://github.com/alex-aleyan/stratix10_dev_board.git,2020-02-17 20:44:45+00:00,EM2130,1,alex-aleyan/stratix10_dev_board,241204164,SystemVerilog,stratix10_dev_board,104981,0,2020-05-27 16:40:09+00:00,[],
4915,https://github.com/anujp10/EE_599_aspatil_5704035814.git,2020-03-07 07:51:02+00:00,,0,anujp10/EE_599_aspatil_5704035814,245590498,SystemVerilog,EE_599_aspatil_5704035814,587,0,2020-04-04 08:01:17+00:00,[],
4916,https://github.com/XavRobo/IbexAsynchrone.git,2020-03-09 15:09:50+00:00,,0,XavRobo/IbexAsynchrone,246067931,SystemVerilog,IbexAsynchrone,9775,0,2020-05-11 08:16:16+00:00,[],
4917,https://github.com/hellgate202/freq_meas.git,2020-06-23 06:34:33+00:00,Frequency Measurer,0,hellgate202/freq_meas,274327910,SystemVerilog,freq_meas,16,0,2020-06-23 13:45:49+00:00,[],https://api.github.com/licenses/gpl-3.0
4918,https://github.com/waseemorphali/segment_display.git,2020-06-22 19:56:55+00:00,,0,waseemorphali/segment_display,274229720,SystemVerilog,segment_display,2,0,2020-06-23 23:14:56+00:00,[],
4919,https://github.com/aaronferrucci/svmonty.git,2020-04-27 16:06:30+00:00,,0,aaronferrucci/svmonty,259383395,SystemVerilog,svmonty,8,0,2020-05-04 02:56:56+00:00,[],
4920,https://github.com/Chandlerxlnx/UVM_Example.git,2020-06-11 01:37:23+00:00,,0,Chandlerxlnx/UVM_Example,271424265,SystemVerilog,UVM_Example,37,0,2023-06-09 05:56:43+00:00,[],https://api.github.com/licenses/apache-2.0
4921,https://github.com/Kevin-Heyer/Kalman-Filter-Xilinx.git,2020-04-29 21:41:20+00:00,,0,Kevin-Heyer/Kalman-Filter-Xilinx,260052073,SystemVerilog,Kalman-Filter-Xilinx,105,0,2020-06-12 21:29:10+00:00,[],
4922,https://github.com/NWChenTW/UVM_Practice.git,2020-05-13 21:48:24+00:00,,0,NWChenTW/UVM_Practice,263750413,SystemVerilog,UVM_Practice,31,0,2020-05-27 05:21:42+00:00,[],
4923,https://github.com/spraakbanken/sparv-models.git,2020-05-13 11:55:04+00:00,Models for the Sparv pipeline,0,spraakbanken/sparv-models,263615757,SystemVerilog,sparv-models,56,0,2022-11-14 12:05:46+00:00,[],https://api.github.com/licenses/mit
4924,https://github.com/daveant1/385-digital-systems.git,2020-05-20 03:48:41+00:00,,0,daveant1/385-digital-systems,265443627,SystemVerilog,385-digital-systems,740,0,2021-01-27 19:54:43+00:00,[],
4925,https://github.com/BenHalpe/Sim1.git,2020-05-21 09:37:34+00:00,,0,BenHalpe/Sim1,265809524,SystemVerilog,Sim1,3649,0,2020-05-29 17:10:21+00:00,[],
4926,https://github.com/freddyD77/Block-Floating-Point-Vector-Dot-Product-Generator.git,2020-06-09 19:50:02+00:00,,0,freddyD77/Block-Floating-Point-Vector-Dot-Product-Generator,271095618,SystemVerilog,Block-Floating-Point-Vector-Dot-Product-Generator,25,0,2020-09-30 19:40:38+00:00,[],
4927,https://github.com/wwkkww1983/CPU.git,2020-06-06 06:04:45+00:00,,0,wwkkww1983/CPU,269886032,,CPU,63850,0,2020-09-02 16:15:25+00:00,[],
4928,https://github.com/DUNE-DAQ/protodune-wib-firmware.git,2020-04-05 08:01:54+00:00,ProtoDUNE Warm Interface Board firmware,0,DUNE-DAQ/protodune-wib-firmware,253184243,SystemVerilog,protodune-wib-firmware,34881,0,2023-04-26 05:40:45+00:00,"['dunedaq-other', 'dunedaq-team-wib']",
4929,https://github.com/afans4/Verilogmod.git,2020-03-04 03:15:08+00:00,,0,afans4/Verilogmod,244796544,SystemVerilog,Verilogmod,87481,0,2021-09-16 13:57:12+00:00,[],
4930,https://github.com/raibu/vlog-labs.git,2020-02-29 22:08:58+00:00,verilog labs,0,raibu/vlog-labs,244048726,SystemVerilog,vlog-labs,73,0,2020-05-31 16:15:02+00:00,[],https://api.github.com/licenses/gpl-3.0
4931,https://github.com/isikozsoy/CS223_Course_Project.git,2020-02-20 16:36:07+00:00,"The aim of this project is to learn how to use the 7 segment module,    how to give input via switches on Basys 3 FPGA Board, how to use the buttons and design cellular automata for a 8x8 matrix on the BetiBoard by creating a game. ",0,isikozsoy/CS223_Course_Project,241934964,SystemVerilog,CS223_Course_Project,402,0,2020-02-20 16:53:40+00:00,[],
4932,https://github.com/harinidarapu/Accumulator.git,2020-02-16 19:01:36+00:00,signed 8 bit addition,0,harinidarapu/Accumulator,240947941,SystemVerilog,Accumulator,2,0,2020-02-16 19:15:31+00:00,[],
4933,https://github.com/cufeolm/KA_MIPS.git,2020-03-18 22:14:25+00:00,MIPS with binded register file,0,cufeolm/KA_MIPS,248354679,SystemVerilog,KA_MIPS,8305,0,2020-03-18 22:18:10+00:00,[],
4934,https://github.com/Ag48/demo_structure_regfile.git,2020-03-22 14:20:20+00:00,,0,Ag48/demo_structure_regfile,249199164,SystemVerilog,demo_structure_regfile,3,0,2020-04-19 08:36:11+00:00,[],
4935,https://github.com/hk700/Digital-System-Design.git,2020-03-22 00:59:26+00:00,,0,hk700/Digital-System-Design,249088680,SystemVerilog,Digital-System-Design,6,0,2020-03-22 01:11:36+00:00,[],
4936,https://github.com/msattine/misc.git,2020-04-01 10:48:21+00:00,Miscellaneous script skeletons,0,msattine/misc,252147208,SystemVerilog,misc,36,0,2020-04-01 11:42:13+00:00,[],
4937,https://github.com/brunocamboim/arq2-verilog-trabalho-processador.git,2020-03-26 19:44:59+00:00,Trabalho 1 de arquitetura e organização de computadores II,0,brunocamboim/arq2-verilog-trabalho-processador,250356061,SystemVerilog,arq2-verilog-trabalho-processador,112,0,2020-04-05 22:11:35+00:00,[],
4938,https://github.com/ialit/18742-Term-Project.git,2020-04-04 18:14:44+00:00,,0,ialit/18742-Term-Project,253068282,SystemVerilog,18742-Term-Project,34026,0,2020-05-04 04:14:55+00:00,[],
4939,https://github.com/aqweszxcd/ClosestEditDistance.git,2020-05-16 10:46:41+00:00,,0,aqweszxcd/ClosestEditDistance,264415349,SystemVerilog,ClosestEditDistance,53443,0,2020-05-16 11:16:00+00:00,[],https://api.github.com/licenses/mit
4940,https://github.com/merledu/Buraq-mini.git,2020-03-31 06:31:25+00:00,This repository is the contain systemverilog version of Buraq-mini with a seperate branch for veriloator team.,2,merledu/Buraq-mini,251519443,SystemVerilog,Buraq-mini,78,0,2022-12-17 15:19:09+00:00,[],
4941,https://github.com/AnouarNechi/ITI-FPGA.git,2020-03-23 13:11:57+00:00,,0,AnouarNechi/ITI-FPGA,249434400,SystemVerilog,ITI-FPGA,31699,0,2020-03-23 13:34:16+00:00,[],
4942,https://github.com/srishis/vm2002.git,2020-04-05 02:18:25+00:00,virtual manager/ vending machine design using system verilog,0,srishis/vm2002,253138757,SystemVerilog,vm2002,255,0,2020-04-26 02:51:36+00:00,[],
4943,https://github.com/ralfgad/FIFO.git,2020-06-11 06:27:31+00:00,Punto de partida tarea1 FIFO,1,ralfgad/FIFO,271469091,SystemVerilog,FIFO,281,0,2021-09-17 08:14:30+00:00,[],
4944,https://github.com/AnkithMuralidhar/HDL_SV_projects.git,2020-05-19 17:57:47+00:00,System Design using System verilog,1,AnkithMuralidhar/HDL_SV_projects,265322761,SystemVerilog,HDL_SV_projects,43,0,2020-05-19 18:17:46+00:00,[],
4945,https://github.com/hellgate202/math_lib.git,2020-04-30 20:18:16+00:00,Few math modules,0,hellgate202/math_lib,260309689,SystemVerilog,math_lib,25,0,2021-12-05 17:55:46+00:00,[],https://api.github.com/licenses/gpl-3.0
4946,https://github.com/tarasm2/ProjectB.git,2020-05-21 22:18:23+00:00,TCES 330 ProjectB,1,tarasm2/ProjectB,265963006,SystemVerilog,ProjectB,20541,0,2020-06-11 10:39:05+00:00,[],
4947,https://github.com/dzy10/18847-hardware-tnn-bernard-2020.git,2020-05-05 17:19:18+00:00,CMU 18-847 Final Project: Team Bernard 2020,0,dzy10/18847-hardware-tnn-bernard-2020,261537317,SystemVerilog,18847-hardware-tnn-bernard-2020,9319,0,2020-05-05 23:04:17+00:00,[],
4948,https://github.com/Kevin-Heyer/RISC-V_Xilinx.git,2020-06-19 23:17:56+00:00,FPGA implementation of a RISC V architecture,0,Kevin-Heyer/RISC-V_Xilinx,273603207,SystemVerilog,RISC-V_Xilinx,5009,0,2020-07-20 18:54:56+00:00,[],
4949,https://github.com/chaserwhytey/VerilogTetrisGame.git,2020-02-21 17:21:43+00:00,Tetris implemented in SystemVerilog on DE1-SoC with VGA display and audio output ,1,chaserwhytey/VerilogTetrisGame,242193252,SystemVerilog,VerilogTetrisGame,23202,0,2020-05-07 00:15:33+00:00,[],
4950,https://github.com/gbrlribeiro/SE204.git,2020-02-24 14:55:57+00:00,,0,gbrlribeiro/SE204,242763997,SystemVerilog,SE204,21755,0,2022-06-07 17:38:58+00:00,[],
4951,https://github.com/ShaunCrippen/School-Projects.git,2020-02-26 06:46:50+00:00,undergraduate/graduate course projects ,0,ShaunCrippen/School-Projects,243188605,SystemVerilog,School-Projects,19249,0,2021-05-28 21:34:01+00:00,[],
4952,https://github.com/mtdudek/RISC-V_caches.git,2020-02-26 00:13:34+00:00,Projekt końcowy FPGA(rozwijanie pod pracę inżynierską). / Final project for FPGA course(WIP),0,mtdudek/RISC-V_caches,243130528,SystemVerilog,RISC-V_caches,90321,0,2020-02-26 00:37:51+00:00,[],
4953,https://github.com/chrissteinsland/DDS2_termproject.git,2020-03-05 13:40:10+00:00,,0,chrissteinsland/DDS2_termproject,245173108,SystemVerilog,DDS2_termproject,178,0,2020-04-08 10:19:52+00:00,[],
4954,https://github.com/maorshweky/oribar_training.git,2020-03-17 13:50:19+00:00,Ori Barel's training repo,0,maorshweky/oribar_training,247981904,SystemVerilog,oribar_training,21,0,2020-04-26 12:50:25+00:00,[],
4955,https://github.com/ssulca/interconnet.git,2020-03-19 17:48:47+00:00,Principles and practices of interconnection Networks,1,ssulca/interconnet,248568719,SystemVerilog,interconnet,10,0,2020-03-23 20:51:37+00:00,[],https://api.github.com/licenses/mit
4956,https://github.com/srishis/DFF_Verification.git,2020-03-29 00:36:55+00:00,DFF_verification_using_class_based_testbench,0,srishis/DFF_Verification,250923254,SystemVerilog,DFF_Verification,38,0,2020-03-30 09:47:52+00:00,[],
4957,https://github.com/MspecialK/FLOATING_SQRT.git,2020-02-26 16:05:00+00:00,SQRT_SCHMIDT,0,MspecialK/FLOATING_SQRT,243304985,SystemVerilog,FLOATING_SQRT,89,0,2020-04-21 14:54:42+00:00,[],https://api.github.com/licenses/epl-2.0
4958,https://github.com/LeandroDorta/gcd_tutorial.git,2020-04-26 00:37:11+00:00,,0,LeandroDorta/gcd_tutorial,258904291,SystemVerilog,gcd_tutorial,38,0,2020-04-26 01:12:24+00:00,[],
4959,https://github.com/Ashnfreeman/N-bit_graycode_binary_converter_systemverilog.git,2020-05-09 05:19:23+00:00,,0,Ashnfreeman/N-bit_graycode_binary_converter_systemverilog,262494941,SystemVerilog,N-bit_graycode_binary_converter_systemverilog,1,0,2020-05-09 05:20:34+00:00,[],
4960,https://github.com/freddyD77/Efficient-Convolutional-Neural-Network-Layer-on-SoC.git,2020-05-12 14:46:45+00:00,,0,freddyD77/Efficient-Convolutional-Neural-Network-Layer-on-SoC,263365452,SystemVerilog,Efficient-Convolutional-Neural-Network-Layer-on-SoC,13,0,2020-09-30 19:19:01+00:00,[],
4961,https://github.com/daveant1/385-final-project.git,2020-05-20 03:46:14+00:00,,0,daveant1/385-final-project,265443108,SystemVerilog,385-final-project,2245,0,2021-01-27 19:56:00+00:00,[],
4962,https://github.com/wilson07code/Arbiter_UVM.git,2020-05-17 13:57:29+00:00,,0,wilson07code/Arbiter_UVM,264679065,SystemVerilog,Arbiter_UVM,41,0,2020-05-17 13:58:40+00:00,[],
4963,https://github.com/victorg11/VLSI_System_Design_ECE474.git,2020-06-02 21:43:21+00:00,,0,victorg11/VLSI_System_Design_ECE474,268914886,SystemVerilog,VLSI_System_Design_ECE474,4650,0,2020-06-12 06:34:37+00:00,[],
4964,https://github.com/ejziel/Mips-Single-Cycle.git,2020-05-21 17:08:15+00:00,Implementação de um processador MIPS single cycle em System Verilog,0,ejziel/Mips-Single-Cycle,265906468,SystemVerilog,Mips-Single-Cycle,6609,0,2020-05-21 17:23:26+00:00,[],
4965,https://github.com/melt-umn/rewriting-regex-matching.git,2020-05-08 18:47:44+00:00,An implementation of regex matching via Brzozowski derivatives using strategy attributes,0,melt-umn/rewriting-regex-matching,262402887,SystemVerilog,rewriting-regex-matching,28,0,2022-01-19 02:16:13+00:00,[],
4966,https://github.com/cetola/ECE593-Cetola-Inan.git,2020-02-22 18:59:13+00:00,Testing the Ibex core in a didactic world.,0,cetola/ECE593-Cetola-Inan,242395520,SystemVerilog,ECE593-Cetola-Inan,1268,0,2023-01-27 23:44:49+00:00,[],https://api.github.com/licenses/mit
4967,https://github.com/PrincetonUniversity/chasm.git,2020-02-21 13:01:26+00:00,,0,PrincetonUniversity/chasm,242140309,SystemVerilog,chasm,800,0,2020-03-03 23:05:06+00:00,[],
4968,https://github.com/alegouis/my_repo.git,2020-02-28 15:43:26+00:00,,0,alegouis/my_repo,243796880,SystemVerilog,my_repo,2,0,2020-02-28 16:23:52+00:00,[],
4969,https://github.com/wilson07code/LAB_prog.git,2020-03-05 14:16:02+00:00,,0,wilson07code/LAB_prog,245181398,SystemVerilog,LAB_prog,41,0,2020-03-05 14:43:35+00:00,[],
4970,https://github.com/navahc/msd_project.git,2020-03-08 22:11:27+00:00,SINGLE LEVEL CACHE IMPLEMENTATION WITH REPLACEMENT POLICIES(TRUE BIT AND ONE BIT LRU),1,navahc/msd_project,245896062,SystemVerilog,msd_project,51,0,2020-03-21 02:56:54+00:00,[],
4971,https://github.com/wilson07code/System_Verilog.git,2020-03-09 04:49:11+00:00,,0,wilson07code/System_Verilog,245946317,SystemVerilog,System_Verilog,39,0,2020-05-17 14:08:38+00:00,[],
4972,https://github.com/RussellKook/CSE271.git,2020-03-07 23:18:53+00:00,,0,RussellKook/CSE271,245720083,SystemVerilog,CSE271,17,0,2020-03-07 23:26:19+00:00,[],
4973,https://github.com/mateusfh/Concepcao.git,2020-03-17 11:18:43+00:00,,0,mateusfh/Concepcao,247950776,,Concepcao,1460,0,2020-09-03 02:22:45+00:00,[],
4974,https://github.com/ujunhwan/de1soc-fpga-hps-speed-comparison.git,2020-03-16 11:08:09+00:00,Embedded System Design Class Final Project,0,ujunhwan/de1soc-fpga-hps-speed-comparison,247681236,SystemVerilog,de1soc-fpga-hps-speed-comparison,54789,0,2021-09-23 11:50:36+00:00,[],
4975,https://github.com/faaiqgwaqar/ECE271-Digital-Logic-Design.git,2020-03-24 04:40:15+00:00,Complete course compilation of ECE271 taken at Oregon State University. This course was taken during Fall term of the 2018 academic year ,0,faaiqgwaqar/ECE271-Digital-Logic-Design,249614325,SystemVerilog,ECE271-Digital-Logic-Design,7,0,2020-03-24 05:04:40+00:00,[],
4976,https://github.com/terati/Kirby_Verilog.git,2020-04-13 05:56:47+00:00,SP2020 ECE385 Final Project by: Timothy Wong & Wenjie Yu,0,terati/Kirby_Verilog,255243650,SystemVerilog,Kirby_Verilog,9014,0,2021-08-16 07:14:41+00:00,[],
4977,https://github.com/has58/perceptron_systemVerilog.git,2020-05-25 23:56:54+00:00,,0,has58/perceptron_systemVerilog,266903541,SystemVerilog,perceptron_systemVerilog,3,0,2020-05-25 23:58:38+00:00,[],
4978,https://github.com/aqweszxcd/AES256ECB_HDL.git,2020-05-16 11:24:01+00:00,,0,aqweszxcd/AES256ECB_HDL,264421273,SystemVerilog,AES256ECB_HDL,2389,0,2020-05-16 11:28:58+00:00,[],https://api.github.com/licenses/mit
4979,https://github.com/samarth2317/Designing-of-Permutation-Engine-for-SHA-3-256-Hash.git,2020-05-17 01:00:26+00:00,,0,samarth2317/Designing-of-Permutation-Engine-for-SHA-3-256-Hash,264557598,SystemVerilog,Designing-of-Permutation-Engine-for-SHA-3-256-Hash,987,0,2020-05-17 01:10:07+00:00,[],
4980,https://github.com/michele-t/FMU.git,2020-06-28 15:16:08+00:00,Fused Multiply-Add module,0,michele-t/FMU,275611178,SystemVerilog,FMU,208,0,2020-06-28 15:35:05+00:00,[],
4981,https://github.com/jaycordaro/Basic-MAX10-FPGA-project-PLL.git,2020-06-24 06:10:32+00:00,This is the basic LED blinking project extended to include the Altera ALTPLL IP,0,jaycordaro/Basic-MAX10-FPGA-project-PLL,274589402,SystemVerilog,Basic-MAX10-FPGA-project-PLL,431,0,2021-02-21 17:29:54+00:00,[],https://api.github.com/licenses/bsd-2-clause
4982,https://github.com/pulp-platform/snitch.git,2020-08-21 09:57:34+00:00,⛔ DEPRECATED ⛔ Lean but mean RISC-V system!,49,pulp-platform/snitch,289236605,SystemVerilog,snitch,14614,212,2023-12-16 17:44:39+00:00,[],https://api.github.com/licenses/apache-2.0
4983,https://github.com/fpgasystems/Coyote.git,2020-09-04 22:30:25+00:00,"Framework providing operating system abstractions and a range of shared networking (RDMA, TCP/IP) and memory services to common modern heterogeneous platforms.",50,fpgasystems/Coyote,292958683,SystemVerilog,Coyote,303346,176,2024-04-12 01:34:46+00:00,"['fpga', 'hbm', 'rdma', 'service', 'tcp', 'virtualization', 'amd', 'xilinx-fpga']",https://api.github.com/licenses/mit
4984,https://github.com/Lampro-Mellon/LM-RISCV-DV.git,2020-08-10 11:14:38+00:00,An Open-Source Design and Verification Environment for RISC-V,26,Lampro-Mellon/LM-RISCV-DV,286453572,SystemVerilog,LM-RISCV-DV,19359,70,2024-02-26 07:00:04+00:00,[],https://api.github.com/licenses/apache-2.0
4985,https://github.com/f4pga/prjuray.git,2020-07-15 20:15:48+00:00,"Documenting the Xilinx Ultrascale, Ultrascale+ and UltraScale MPSoC series bit-stream format.",12,f4pga/prjuray,279968526,SystemVerilog,prjuray,1437,66,2024-03-23 19:12:31+00:00,"['fpga', 'xilinx', 'xilinx-fpga', 'ultrascale', 'ultrascale-plus', 'bitstream', 'fuzzer', 'vivado', 'symbiflow']",https://api.github.com/licenses/apache-2.0
4986,https://github.com/dadongshangu/async_FIFO.git,2020-09-05 01:03:10+00:00,This asynchrounous FIFO deisgn and UVM verificaiton is one case study of me.  The design is based on Cliff Cumming's paper and the UVM is coded by me(Xianghzi Meng),15,dadongshangu/async_FIFO,292976057,SystemVerilog,async_FIFO,182,47,2024-04-13 13:33:53+00:00,"['async-fifo', 'verilog-tb', 'uvm', 'fifo', 'asynchronous', 'verification-code']",https://api.github.com/licenses/mit
4987,https://github.com/Superscalar-HIT-Core/Superscalar-HIT-Core-NSCSCC2020.git,2020-08-20 10:18:10+00:00,"a Quad-issue, Out-of-order Superscalar MIPS Processor Implemented in SystemVerilog",5,Superscalar-HIT-Core/Superscalar-HIT-Core-NSCSCC2020,288974075,SystemVerilog,Superscalar-HIT-Core-NSCSCC2020,13975,42,2024-03-29 06:09:29+00:00,[],
4988,https://github.com/NSCSCC-2020-Fudan/FDU1.1-NSCSCC.git,2020-08-24 13:43:48+00:00,复旦大学FDU1.1队在第四届“龙芯杯”的参赛作品,3,NSCSCC-2020-Fudan/FDU1.1-NSCSCC,289939604,SystemVerilog,FDU1.1-NSCSCC,7134,37,2024-04-11 05:51:17+00:00,[],
4989,https://github.com/ThalesGroup/cva6-softcore-contest.git,2020-10-14 13:50:28+00:00,National RISC-V student contest CV32A6,25,ThalesGroup/cva6-softcore-contest,304030213,SystemVerilog,cva6-softcore-contest,51235,33,2024-04-12 08:29:30+00:00,[],
4990,https://github.com/j-marjanovic/pp-sp-reference-design.git,2020-08-29 12:53:09+00:00,,13,j-marjanovic/pp-sp-reference-design,291270895,SystemVerilog,pp-sp-reference-design,799,33,2023-12-15 07:01:47+00:00,[],
4991,https://github.com/Lampro-Mellon/apb-uart-uvm-env.git,2020-11-11 07:04:49+00:00,,13,Lampro-Mellon/apb-uart-uvm-env,311890035,SystemVerilog,apb-uart-uvm-env,11816,32,2024-03-15 05:51:46+00:00,[],
4992,https://github.com/Anjali-287/SPI-Interface.git,2020-07-04 06:17:50+00:00,UVM Testbench to verify serial transmission of data between SPI master and slave,12,Anjali-287/SPI-Interface,277051337,SystemVerilog,SPI-Interface,20,29,2024-03-22 18:12:00+00:00,"['uvm', 'spi']",
4993,https://github.com/alaasal/GPCore.git,2020-09-06 13:42:22+00:00,This is the base repo for our graduation project in AlexU 21,13,alaasal/GPCore,293284979,SystemVerilog,GPCore,1547,28,2023-08-14 01:22:09+00:00,[],https://api.github.com/licenses/mit
4994,https://github.com/SymbioticEDA/nerv.git,2020-10-19 11:47:25+00:00,Naive Educational RISC-V -- A simple single-stage RV32I processor,3,SymbioticEDA/nerv,305365923,SystemVerilog,nerv,138,23,2023-03-28 16:25:48+00:00,[],
4995,https://github.com/ljgibbslf/basic_cache_core.git,2020-08-06 08:14:29+00:00,,9,ljgibbslf/basic_cache_core,285513470,SystemVerilog,basic_cache_core,3299,22,2024-03-04 06:14:48+00:00,[],
4996,https://github.com/RSPwFPGAs/virtio-fpga.git,2020-07-09 02:38:06+00:00,A platform for emulating Virtio devices with FPGAs,11,RSPwFPGAs/virtio-fpga,278244322,SystemVerilog,virtio-fpga,884,22,2024-03-07 06:21:24+00:00,"['virtio', 'fpga', 'pcie', 'qemu', 'cosim', 'msix']",https://api.github.com/licenses/bsd-3-clause
4997,https://github.com/RSPwFPGAs/virtio-fpga-bridge.git,2020-08-22 05:35:41+00:00,"Virtio front-end and back-end bridge, implemented with FPGA.",7,RSPwFPGAs/virtio-fpga-bridge,289426479,SystemVerilog,virtio-fpga-bridge,4136,22,2024-03-19 13:36:18+00:00,"['virtio', 'fpga', 'pcie', 'qemu', 'cosim']",https://api.github.com/licenses/bsd-3-clause
4998,https://github.com/pgroupATusc/fasthash.git,2020-10-02 18:41:29+00:00,Source Code for the paper Titled FASTHash: FPGA-Based High Throughput Parallel Hash Table published in ISC high performance 2020,5,pgroupATusc/fasthash,300706058,SystemVerilog,fasthash,27,18,2024-02-01 01:17:16+00:00,[],
4999,https://github.com/Dongtata2020/UVM_Verification_for_P2S_Data_Converter.git,2020-10-06 08:04:08+00:00,为了学习UVM验证相关知识，需要动手尝试实际的项目。作为一个初学者，难以接触到实际的项目，于是我从夏宇闻老师的《Verilog数字系统设计教程》一书中，挑选出一个简单的小设计，作为我的验证对象，并围绕它编写了UVM验证环境。,4,Dongtata2020/UVM_Verification_for_P2S_Data_Converter,301655681,SystemVerilog,UVM_Verification_for_P2S_Data_Converter,263,18,2024-01-04 03:22:11+00:00,"['uvm', 'verilog', 'systemverilog', 'verification']",
5000,https://github.com/CircuitCoder/mill.git,2020-09-30 16:40:36+00:00,RV32I by cats,0,CircuitCoder/mill,299985634,SystemVerilog,mill,599,17,2023-09-04 00:06:16+00:00,[],https://api.github.com/licenses/mit
5001,https://github.com/shehanmunasinghe/tinyGPU.git,2020-10-02 11:42:52+00:00,tinyGPU: A Predicated-SIMD processor implementation in SystemVerilog,5,shehanmunasinghe/tinyGPU,300596733,SystemVerilog,tinyGPU,1287,17,2024-01-27 06:11:07+00:00,"['hdl', 'computer-organization', 'systemverilog', 'processor-design', 'gpu', 'simd']",
5002,https://github.com/kumarrishav14/AMBA_APB.git,2020-11-01 16:18:48+00:00,To design test bench of the APB protocol,3,kumarrishav14/AMBA_APB,309136186,SystemVerilog,AMBA_APB,490,14,2024-01-30 15:44:01+00:00,[],https://api.github.com/licenses/mit
5003,https://github.com/martinriis/RISC-V-Vector-Processor.git,2020-08-01 11:03:21+00:00,256-bit vector processor based on the RISC-V vector (V) extension,3,martinriis/RISC-V-Vector-Processor,284243255,SystemVerilog,RISC-V-Vector-Processor,26,13,2023-11-16 06:55:09+00:00,[],https://api.github.com/licenses/mit
5004,https://github.com/Anjali-287/Synchronous-FIFO-UVM-TB.git,2020-07-07 17:38:22+00:00,UVM Testbench for synchronus fifo,3,Anjali-287/Synchronous-FIFO-UVM-TB,277882906,SystemVerilog,Synchronous-FIFO-UVM-TB,33,12,2024-01-23 05:51:27+00:00,[],
5005,https://github.com/WeiChungWu/UVM_UART_Example.git,2020-08-17 13:11:56+00:00,An UVM example of UART,9,WeiChungWu/UVM_UART_Example,288183829,SystemVerilog,UVM_UART_Example,39,12,2024-03-10 18:10:27+00:00,"['systemverilog', 'uvm']",
5006,https://github.com/efeslab/hardware-bugbase.git,2020-09-02 15:21:13+00:00,,4,efeslab/hardware-bugbase,292319939,SystemVerilog,hardware-bugbase,7004,12,2024-01-17 03:08:06+00:00,[],
5007,https://github.com/hughjackson/PeakRDL-verilog.git,2020-11-01 17:33:24+00:00,Generate verilog register file from systemRDL description,4,hughjackson/PeakRDL-verilog,309151056,SystemVerilog,PeakRDL-verilog,119,11,2024-02-02 09:54:37+00:00,"['verilog', 'rtl', 'asic', 'systemrdl', 'fpga']",https://api.github.com/licenses/gpl-3.0
5008,https://github.com/Jefferson-Lopes/Correlator.git,2020-07-06 17:45:53+00:00,Autocorrelation and cross-correlation signal ,2,Jefferson-Lopes/Correlator,277610151,SystemVerilog,Correlator,24947,10,2024-02-05 17:47:24+00:00,[],
5009,https://github.com/amane-uehara/cpubook-code.git,2020-08-14 13:22:29+00:00,書籍「作ろう！CPU」のサンプルコード,3,amane-uehara/cpubook-code,287538160,SystemVerilog,cpubook-code,25,8,2024-01-21 17:08:25+00:00,[],https://api.github.com/licenses/mit
5010,https://github.com/PulseRain/PulseRain_RISCV_MCU.git,2020-07-26 02:35:38+00:00,PulseRain RISC-V MCU,7,PulseRain/PulseRain_RISCV_MCU,282561607,SystemVerilog,PulseRain_RISCV_MCU,1099,7,2023-12-23 08:26:38+00:00,[],
5011,https://github.com/stong/risc-uproc.git,2020-07-23 05:28:58+00:00,Toy RISC microprocessor in Verilog for Altera FPGA,0,stong/risc-uproc,281859291,SystemVerilog,risc-uproc,27,6,2023-09-01 04:52:56+00:00,[],
5012,https://github.com/PaulZC/XLR8_VGA_HDMI_XB.git,2020-08-14 12:52:39+00:00,An XLR8 XB which will run on the Alorium Technology Sno FPGA board and produce a VGA text display over HDMI. Includes dual-port video memory.,1,PaulZC/XLR8_VGA_HDMI_XB,287532352,SystemVerilog,XLR8_VGA_HDMI_XB,290201,6,2023-10-31 22:26:02+00:00,[],
5013,https://github.com/Panda-Cores/PandaZero.git,2020-07-20 17:18:53+00:00,"A pipelined, in-order implementation of the RV32I ISA",1,Panda-Cores/PandaZero,281180880,SystemVerilog,PandaZero,781,6,2022-06-28 15:53:58+00:00,"['risc-v', 'riscv', 'riscv32', 'pipeline-processor', 'rv32i']",
5014,https://github.com/Yummot/adapters.git,2020-08-27 06:42:32+00:00,Common SOC interconnect protocols adapters for learning,1,Yummot/adapters,290697728,SystemVerilog,adapters,33,6,2022-06-28 09:28:56+00:00,[],
5015,https://github.com/reed-foster/pynq-audio.git,2020-09-26 20:42:19+00:00,RTL and python for using the ADAU1761 audio codec on the Pynq-Z2 board from TUL,2,reed-foster/pynq-audio,298896396,SystemVerilog,pynq-audio,4441,6,2024-03-28 06:43:38+00:00,"['pynq-z2', 'audio', 'i2s-audio']",https://api.github.com/licenses/mit
5016,https://github.com/carljohnsen/vitis_rtl.git,2020-10-02 13:12:17+00:00,"Examples of Vitis projects, which utilize RTL kernels.",0,carljohnsen/vitis_rtl,300618801,SystemVerilog,vitis_rtl,253,5,2023-08-06 10:33:30+00:00,[],
5017,https://github.com/yujixr/r2rv.git,2020-10-13 22:19:33+00:00,R2 RISC-V implementation ,1,yujixr/r2rv,303841609,SystemVerilog,r2rv,173,5,2022-03-08 00:50:32+00:00,[],https://api.github.com/licenses/mit
5018,https://github.com/smirnovich/ofd.git,2020-11-06 10:30:08+00:00,Open FPGA Debug core,6,smirnovich/ofd,310565104,SystemVerilog,ofd,33,5,2023-08-27 12:24:27+00:00,"['hdl', 'fpga', 'debugging-tool']",https://api.github.com/licenses/mit
5019,https://github.com/TwistsOfFate/vanilla-cpu.git,2020-08-24 13:23:52+00:00,,1,TwistsOfFate/vanilla-cpu,289934721,SystemVerilog,vanilla-cpu,62390,5,2023-01-21 14:34:24+00:00,[],
5020,https://github.com/akoskovacs/spartan-edge-accelerator-hdmi.git,2020-09-06 00:52:04+00:00,HDMI demo based on the hdl-hdmi video core for the Spartan Edge Accelerator Board,1,akoskovacs/spartan-edge-accelerator-hdmi,293178188,SystemVerilog,spartan-edge-accelerator-hdmi,1352,5,2023-11-15 04:22:39+00:00,[],
5021,https://github.com/1varuna/fifo_tb_uvm.git,2020-07-27 12:54:06+00:00,Self learnt example to write a UVM based TB. (Under construction).,2,1varuna/fifo_tb_uvm,282897715,SystemVerilog,fifo_tb_uvm,1132,5,2023-10-29 14:49:06+00:00,"['uvm', 'systemverilog', 'systemverilog-hdl', 'systemverilog-simulation']",
5022,https://github.com/antmicro/verilator-dynamic-scheduler-tests.git,2020-10-05 07:03:42+00:00,,1,antmicro/verilator-dynamic-scheduler-tests,301320625,SystemVerilog,verilator-dynamic-scheduler-tests,2847,5,2023-04-04 23:05:31+00:00,[],https://api.github.com/licenses/apache-2.0
5023,https://github.com/JC-S/Karatsuba_multiplier_HDL.git,2020-07-02 08:04:30+00:00,This is a SystemVerilog HDL implementation of Karatsuba multiplier.,1,JC-S/Karatsuba_multiplier_HDL,276586053,SystemVerilog,Karatsuba_multiplier_HDL,13,5,2024-04-10 23:20:09+00:00,[],https://api.github.com/licenses/gpl-2.0
5024,https://github.com/souryadey/mlp-ondevice-training.git,2020-09-16 00:45:45+00:00,FPGA on-device training and inference of a MLP neural network,1,souryadey/mlp-ondevice-training,295883948,SystemVerilog,mlp-ondevice-training,53501,5,2023-03-21 10:44:33+00:00,[],https://api.github.com/licenses/mit
5025,https://github.com/hengfengzhang/uvm_lab.git,2020-10-19 13:00:43+00:00,A UVM environment including scoreboard and agent,2,hengfengzhang/uvm_lab,305385266,SystemVerilog,uvm_lab,7,4,2022-08-08 03:36:59+00:00,[],
5026,https://github.com/putongputong-lin/ahb2sram.git,2020-07-23 16:43:16+00:00,"It is a ahb2sram/sramc's rtl design, dv, syn.",3,putongputong-lin/ahb2sram,282005485,SystemVerilog,ahb2sram,6,4,2022-12-12 11:18:44+00:00,[],
5027,https://github.com/LeninSG21/mips-multiciclo.git,2020-11-13 17:50:18+00:00,Implementación en verilog de MIPS Multiciclo,0,LeninSG21/mips-multiciclo,312646294,SystemVerilog,mips-multiciclo,1122,4,2021-03-18 22:46:14+00:00,[],
5028,https://github.com/pulp-training/sw.git,2020-11-11 20:46:42+00:00,"PULPissimo, PULP-SDK and PULP-RUNTIME exercises",11,pulp-training/sw,312085926,SystemVerilog,sw,1569,4,2023-07-31 09:39:00+00:00,[],https://api.github.com/licenses/apache-2.0
5029,https://github.com/NikolaF-95/RAM_VIP.git,2020-07-12 22:58:49+00:00,UVM VIP for Single Port RAM Synchronous Read/Write,1,NikolaF-95/RAM_VIP,279161988,SystemVerilog,RAM_VIP,34,4,2024-03-09 06:05:15+00:00,"['uvm', 'ram', 'systemverilog', 'electronics', 'functional-verification', 'uvc', 'vip']",
5030,https://github.com/kitune-san/KFPS2KB.git,2020-08-03 15:35:09+00:00,Simple PS/2 keyboard controller written in SystemVerilog,0,kitune-san/KFPS2KB,284738150,SystemVerilog,KFPS2KB,2532,4,2023-10-12 12:14:10+00:00,"['ps2-keyboard', 'systemverilog', 'fpga', 'ps2', 'keyboard']",https://api.github.com/licenses/mit
5031,https://github.com/wangyisong1996/ThinPAD-RISC-V.git,2020-11-05 08:54:14+00:00,Yet another RISC-V implementation on ThinPAD.,1,wangyisong1996/ThinPAD-RISC-V,310241000,SystemVerilog,ThinPAD-RISC-V,22,4,2023-03-22 02:57:31+00:00,[],https://api.github.com/licenses/gpl-3.0
5032,https://github.com/sthornington/gemmm2s.git,2020-09-24 14:45:22+00:00,Verilog module for converting from AXI4 MM of Zynq GEM Ethernet DMA to AXI-Stream with packet boundaries,0,sthornington/gemmm2s,298308489,SystemVerilog,gemmm2s,122,4,2023-09-24 07:27:31+00:00,[],https://api.github.com/licenses/mit
5033,https://github.com/aakif-h/RISC-V-Processor-Design.git,2020-07-23 00:11:51+00:00,"An implementation of a pipelined RISC-V processor, designed in SystemVerilog",0,aakif-h/RISC-V-Processor-Design,281809543,SystemVerilog,RISC-V-Processor-Design,7634,4,2023-11-14 23:51:00+00:00,[],
5034,https://github.com/ljiaxi/chisel-rv32.git,2020-09-17 09:41:52+00:00,,0,ljiaxi/chisel-rv32,296283524,SystemVerilog,chisel-rv32,4656,3,2021-10-22 05:15:36+00:00,[],https://api.github.com/licenses/mit
5035,https://github.com/kitune-san/KF8255.git,2020-07-19 12:14:17+00:00,8255/8255A-like programmable peripheral interface written in SystemVerilog,0,kitune-san/KF8255,280858630,SystemVerilog,KF8255,459,3,2024-01-30 01:39:03+00:00,"['8255', '8255a', 'ppi', 'systemverilog', 'programmable-peripheral-interface', 'fpga', 'pc']",https://api.github.com/licenses/mit
5036,https://github.com/dh73/Prop-eller.git,2020-11-03 20:51:09+00:00,Formal Property Verification Components to Speedup Complex Checks,0,dh73/Prop-eller,309804052,SystemVerilog,Prop-eller,134,3,2024-03-13 07:19:04+00:00,[],
5037,https://github.com/tsmk94/Taiga.git,2020-10-29 18:03:44+00:00,,1,tsmk94/Taiga,308410365,SystemVerilog,Taiga,1174,3,2023-03-02 03:51:54+00:00,[],https://api.github.com/licenses/apache-2.0
5038,https://github.com/Verdvana/Uart.git,2020-10-23 12:24:12+00:00,Uart串口发送接收模块,2,Verdvana/Uart,306628572,SystemVerilog,Uart,292,3,2024-03-09 12:59:13+00:00,[],
5039,https://github.com/FlameKen/ariane_soc.git,2020-11-08 09:51:56+00:00,,1,FlameKen/ariane_soc,311030924,SystemVerilog,ariane_soc,35874,3,2022-03-18 12:31:41+00:00,[],
5040,https://github.com/aditi3512/HyCUBE.git,2020-11-01 03:57:51+00:00,,2,aditi3512/HyCUBE,309019463,SystemVerilog,HyCUBE,280,3,2023-11-29 08:29:33+00:00,[],
5041,https://github.com/hugoferreira/fpga-8bit-console.git,2020-10-26 03:23:50+00:00,8bit console implemented on an FPGA,1,hugoferreira/fpga-8bit-console,307251119,SystemVerilog,fpga-8bit-console,73,3,2023-12-14 01:51:00+00:00,[],
5042,https://github.com/ritviknk/projects.git,2020-08-03 02:51:06+00:00,"Archived-completed projects : RTL design projects to showcase design skills, verilog language expertise, coding styles.",0,ritviknk/projects,284588138,SystemVerilog,projects,4323,3,2024-01-21 18:13:30+00:00,[],https://api.github.com/licenses/mit
5043,https://github.com/thisiszy/Space-Oddity-game.git,2020-09-14 15:27:33+00:00,模拟与数字电路实验 双人空战小游戏,0,thisiszy/Space-Oddity-game,295458287,SystemVerilog,Space-Oddity-game,2489,3,2024-02-26 04:24:36+00:00,[],https://api.github.com/licenses/mit
5044,https://github.com/letrend/tcm4671.git,2020-10-16 07:19:12+00:00,fpga module for controlling the trinamic tcm4671 ic,1,letrend/tcm4671,304550220,SystemVerilog,tcm4671,8,3,2021-12-24 05:45:58+00:00,[],https://api.github.com/licenses/mit
5045,https://github.com/CookDarwin/axi.git,2020-08-01 03:42:47+00:00,a light weight axi library,1,CookDarwin/axi,284180384,SystemVerilog,axi,480,3,2022-08-01 06:43:32+00:00,[],https://api.github.com/licenses/lgpl-2.1
5046,https://github.com/agh-riscv/pixel_riscv_soc.git,2020-08-30 18:15:03+00:00,System-on-Chip for calibration of pixelated hybrid X-ray detectors.,0,agh-riscv/pixel_riscv_soc,291526287,SystemVerilog,pixel_riscv_soc,316,3,2022-12-13 14:00:27+00:00,[],https://api.github.com/licenses/gpl-3.0
5047,https://github.com/huangyxi/FPGA-16QAM.git,2020-07-29 08:59:17+00:00,16QAM Modulation & Demodulation for FPGA,0,huangyxi/FPGA-16QAM,283449420,SystemVerilog,FPGA-16QAM,8,3,2023-10-23 03:44:57+00:00,[],https://api.github.com/licenses/mit
5048,https://github.com/NazerkeT/ArianeDemo.git,2020-10-07 04:17:11+00:00,This is hardware developed for RISCV Bit extension Groups addable to (CVA6) Ariane Core,0,NazerkeT/ArianeDemo,301924639,SystemVerilog,ArianeDemo,41,3,2022-07-05 17:27:14+00:00,[],
5049,https://github.com/JA1TYE/iCEPIC.git,2020-08-16 05:32:05+00:00,A PIC 12-bit core implementation written in SystemVerilog,0,JA1TYE/iCEPIC,287880472,SystemVerilog,iCEPIC,11,3,2022-02-02 16:49:38+00:00,[],https://api.github.com/licenses/bsd-3-clause
5050,https://github.com/teekamkhandelwal/Dual_port_ram.git,2020-11-07 14:13:44+00:00,dual clock dual port ram using verilog and system verilog,0,teekamkhandelwal/Dual_port_ram,310859452,SystemVerilog,Dual_port_ram,17,3,2023-12-03 02:16:48+00:00,[],
5051,https://github.com/Elzawawy/mips-processor-simulator.git,2020-08-25 11:51:55+00:00,"A simplified MIPS machine simulator using SystemVerilog, developed with three different micro-architectures: single-cycle, multi-cycle and pipelined.",3,Elzawawy/mips-processor-simulator,290201326,SystemVerilog,mips-processor-simulator,1106,3,2024-01-18 10:22:26+00:00,"['mips', 'mips-architecture', 'mips-simulator', 'single-cycle-processor', 'multi-cycle-processor', 'pipelined-processors']",https://api.github.com/licenses/mit
5052,https://github.com/bluecmd/sva-playground.git,2020-09-25 08:19:58+00:00,Place to learn and try out SystemVerilog Assertions (SVA),1,bluecmd/sva-playground,298511978,SystemVerilog,sva-playground,27,3,2022-08-26 09:00:13+00:00,[],https://api.github.com/licenses/mit
5053,https://github.com/briansune/Arria_V_FPGA_GoldenPack.git,2020-07-06 15:31:14+00:00,,2,briansune/Arria_V_FPGA_GoldenPack,277580395,SystemVerilog,Arria_V_FPGA_GoldenPack,659712,3,2022-11-20 15:16:41+00:00,[],
5054,https://github.com/RaitoBezarius/sysnum2020.git,2020-10-26 18:04:36+00:00,Projet de sysnum 2020,2,RaitoBezarius/sysnum2020,307462148,SystemVerilog,sysnum2020,59430,3,2021-01-19 11:22:16+00:00,[],https://api.github.com/licenses/mit
5055,https://github.com/martinriis/Verilog-FastAdder.git,2020-08-29 12:00:50+00:00,"High speed, customisable width adder written in SystemVerilog",1,martinriis/Verilog-FastAdder,291262841,SystemVerilog,Verilog-FastAdder,8,3,2023-02-10 02:00:11+00:00,[],https://api.github.com/licenses/mit
5056,https://github.com/Ag48/sv_dpi.git,2020-07-05 16:46:56+00:00,Examples for SystemVerilog Direct Programming Interface (DPI),0,Ag48/sv_dpi,277344105,SystemVerilog,sv_dpi,4,2,2022-03-18 16:42:20+00:00,[],
5057,https://github.com/Panda-Cores/wishbone.git,2020-08-03 17:23:01+00:00,,0,Panda-Cores/wishbone,284762521,SystemVerilog,wishbone,739,2,2022-12-09 17:10:33+00:00,[],
5058,https://github.com/voraravi30/axi4_uvc.git,2020-07-27 12:47:02+00:00,,0,voraravi30/axi4_uvc,282896169,SystemVerilog,axi4_uvc,84,2,2021-12-03 15:03:23+00:00,[],
5059,https://github.com/Chengineer/VLSI.git,2020-08-28 21:06:18+00:00,,0,Chengineer/VLSI,291145946,SystemVerilog,VLSI,5696,2,2022-12-21 10:05:43+00:00,[],
5060,https://github.com/Verdvana/Battery_Management_System.git,2020-10-17 12:03:21+00:00,电池管理系统,1,Verdvana/Battery_Management_System,304868298,SystemVerilog,Battery_Management_System,163,2,2023-01-10 08:58:06+00:00,[],
5061,https://github.com/weedmank/RisKy1.git,2020-10-25 18:43:30+00:00,"Repository for the RisKy1 RISC-V ISA based CPU and various ""flavors"" of RV32imcZicsr.  This design has many parameters/extensions that may be changed in order to tailor the CPU to a specific configuration.",2,weedmank/RisKy1,307167886,SystemVerilog,RisKy1,12355,2,2023-01-12 19:59:09+00:00,[],
5062,https://github.com/PacoReinaCampo/OpenNN.git,2020-08-23 23:38:32+00:00,Open Neural Network,0,PacoReinaCampo/OpenNN,289784598,SystemVerilog,OpenNN,84406,2,2024-01-12 18:14:57+00:00,[],https://api.github.com/licenses/lgpl-3.0
5063,https://github.com/MohcineBerni/cva6-master.git,2020-10-22 20:47:56+00:00,Projet d'optimisation du coeur ARIANE CVA6 RISC-V,2,MohcineBerni/cva6-master,306455309,SystemVerilog,cva6-master,9005,2,2022-06-13 08:06:05+00:00,[],
5064,https://github.com/ElectronAsh/psx_gpu_test.git,2020-10-05 05:59:04+00:00,Test MiSTer core for Laxer's PSX GPU,2,ElectronAsh/psx_gpu_test,301307738,SystemVerilog,psx_gpu_test,7254,2,2022-04-12 07:05:36+00:00,[],https://api.github.com/licenses/gpl-3.0
5065,https://github.com/barawn/verilog-library-barawn.git,2020-08-13 15:17:35+00:00,Library of common modules in Verilog,0,barawn/verilog-library-barawn,287313424,SystemVerilog,verilog-library-barawn,159,2,2024-04-06 12:28:12+00:00,[],
5066,https://github.com/chenfengrugao/uvm_lab.git,2020-09-30 03:22:17+00:00,a pratical uvm lab,0,chenfengrugao/uvm_lab,299798531,SystemVerilog,uvm_lab,17,2,2020-10-26 09:19:55+00:00,[],https://api.github.com/licenses/gpl-3.0
5067,https://github.com/Campo87/VGA-Controller.git,2020-08-14 15:44:11+00:00,Verilog VGA timing driver targeting the Basys 3 FPGA development board.,1,Campo87/VGA-Controller,287568428,SystemVerilog,VGA-Controller,15966,2,2024-04-08 05:30:31+00:00,[],
5068,https://github.com/ECE540-2020-Fall/rvfpga_repo.git,2020-10-12 03:55:09+00:00,,4,ECE540-2020-Fall/rvfpga_repo,303271893,SystemVerilog,rvfpga_repo,5518,2,2023-04-24 06:52:09+00:00,[],
5069,https://github.com/dhaivat7/RISC_CPU.git,2020-09-26 04:32:34+00:00,RTL Design and Verification using SystemVerilog.,0,dhaivat7/RISC_CPU,298737339,SystemVerilog,RISC_CPU,17,2,2023-04-05 09:27:36+00:00,[],
5070,https://github.com/pulp-training/dummy_vip.git,2020-11-11 17:37:46+00:00,Files for the IP Integration Exercise,34,pulp-training/dummy_vip,312043999,SystemVerilog,dummy_vip,6,2,2022-04-27 20:37:27+00:00,[],
5071,https://github.com/rksingh23/System_Verilog_Practise_Problems.git,2020-10-02 06:11:33+00:00,This is my personal Repository where I practice SV,0,rksingh23/System_Verilog_Practise_Problems,300518485,SystemVerilog,System_Verilog_Practise_Problems,109,2,2023-02-26 07:55:37+00:00,[],
5072,https://github.com/MuhammedSamy/DMA8237A-Implementation.git,2020-09-07 17:12:24+00:00,System Verilog based RTL Design of DMA controller for 8086 microprocessor based systems.,0,MuhammedSamy/DMA8237A-Implementation,293587633,SystemVerilog,DMA8237A-Implementation,9,2,2022-06-03 13:40:56+00:00,[],
5073,https://github.com/wen-liao/32bit-MIPS-CPU.git,2020-07-02 16:45:12+00:00,Project for course COMP130013(计算机体系结构实验) in Fudan University,0,wen-liao/32bit-MIPS-CPU,276698873,SystemVerilog,32bit-MIPS-CPU,3938,2,2023-04-12 02:00:32+00:00,[],
5074,https://github.com/alonso9v9/Verificaci-n_Proyecto_2.git,2020-11-10 21:52:50+00:00,,0,alonso9v9/Verificaci-n_Proyecto_2,311793601,SystemVerilog,Verificaci-n_Proyecto_2,514,2,2020-12-18 18:01:24+00:00,[],
5075,https://github.com/PacoReinaCampo/SoC-RTOS.git,2020-09-20 23:30:04+00:00,Operating System for a System on Chip,3,PacoReinaCampo/SoC-RTOS,297182087,SystemVerilog,SoC-RTOS,12064,2,2024-02-24 10:37:19+00:00,[],https://api.github.com/licenses/mit
5076,https://github.com/GorgeousWalrus/panda.git,2020-08-21 11:26:20+00:00,,1,GorgeousWalrus/panda,289252799,SystemVerilog,panda,851,2,2021-04-20 18:38:33+00:00,[],
5077,https://github.com/voraravi30/apb4_uvc.git,2020-07-29 09:49:48+00:00," a project that develop the apb4 bus master and slave agents, scoreboard for self-checking and coverage collector component. Also it has the testcases.",0,voraravi30/apb4_uvc,283460699,SystemVerilog,apb4_uvc,321,2,2023-08-30 01:17:27+00:00,[],
5078,https://github.com/Alenkruth/Crypto_RI5CY.git,2020-07-20 10:40:54+00:00,RI5CY from the PULP Platform modified to support Crypto instructions [Work in Progress],4,Alenkruth/Crypto_RI5CY,281088626,SystemVerilog,Crypto_RI5CY,935,2,2022-06-15 07:40:23+00:00,[],
5079,https://github.com/SteveLRojas/TRS80_MC10.git,2020-10-14 21:06:02+00:00,Implementation of a TRS-80 model MC-10 computer for FPGAs,1,SteveLRojas/TRS80_MC10,304135503,SystemVerilog,TRS80_MC10,19593,2,2023-11-21 18:30:16+00:00,[],
5080,https://github.com/EdgeHannah/CPE487.git,2020-09-02 11:39:25+00:00,,0,EdgeHannah/CPE487,292266258,SystemVerilog,CPE487,14940,2,2022-03-14 12:03:14+00:00,[],
5081,https://github.com/tinyvision-ai-inc/spi_slave.git,2020-11-03 00:55:11+00:00,"SPI Slave for the UPduino and other FPGA's, includes a SPI Slave to 32 bit Wishbone master core.",2,tinyvision-ai-inc/spi_slave,309533607,SystemVerilog,spi_slave,19,2,2023-07-03 00:31:54+00:00,[],
5082,https://github.com/PXVI/mips-pro-adam.git,2020-09-28 13:20:37+00:00,It's a simple verilog based MIPS microarchitecture hardware design.,0,PXVI/mips-pro-adam,299315481,SystemVerilog,mips-pro-adam,230,2,2022-10-25 19:21:27+00:00,"['verilog', 'rtl', 'processor', 'mips', 'risc', 'systemverilog', 'mips-isa', 'testbench', 'multi-cycle']",https://api.github.com/licenses/mit
5083,https://github.com/PacoReinaCampo/MPSoC-RTOS.git,2020-09-20 23:29:31+00:00,Distribution for a MPSoC,2,PacoReinaCampo/MPSoC-RTOS,297182015,SystemVerilog,MPSoC-RTOS,11972,2,2024-02-24 10:37:40+00:00,[],https://api.github.com/licenses/mit
5084,https://github.com/GorgeousWalrus/panda_wb2apb.git,2020-08-27 11:11:53+00:00,Wishbone to apb bridge,0,GorgeousWalrus/panda_wb2apb,290754251,SystemVerilog,panda_wb2apb,2,2,2023-08-30 10:43:42+00:00,[],
5085,https://github.com/AgustinDS/Proyecto1_VFCI.git,2020-10-08 21:22:59+00:00,,0,AgustinDS/Proyecto1_VFCI,302464898,SystemVerilog,Proyecto1_VFCI,126,2,2022-09-14 02:29:10+00:00,[],
5086,https://github.com/jeras/ADAMS.git,2020-10-28 20:37:01+00:00,all digital PLL,0,jeras/ADAMS,308135037,SystemVerilog,ADAMS,15,2,2024-01-17 12:02:07+00:00,[],
5087,https://github.com/yanivnana/uvm_first_step.git,2020-07-11 09:17:55+00:00,First Step in UVM,1,yanivnana/uvm_first_step,278828276,SystemVerilog,uvm_first_step,149,2,2022-10-11 14:14:01+00:00,"['uvm', 'dpi-c', 'tlm-waveform', 'hierarchical-configuration']",
5088,https://github.com/Panda-Cores/common.git,2020-07-20 17:29:00+00:00,,1,Panda-Cores/common,281183163,SystemVerilog,common,762,2,2023-01-28 13:26:16+00:00,[],
5089,https://github.com/bkettle/fpgairpods.git,2020-10-18 23:06:41+00:00,Implementing Active Noise Cancellation on an FPGA,1,bkettle/fpgairpods,305213157,SystemVerilog,fpgairpods,77185,2,2023-01-28 06:21:45+00:00,[],
5090,https://github.com/Aniruth-ai/System-Verilog.git,2020-08-05 19:17:53+00:00,Verification using System Verilog,0,Aniruth-ai/System-Verilog,285382944,SystemVerilog,System-Verilog,21,2,2024-03-05 06:19:13+00:00,[],
5091,https://github.com/KlochkovSA/Detectors_FSM_FPGA.git,2020-07-29 08:32:38+00:00,Дипломный проект. Кафедра радиолокация и навигация. 2020,0,KlochkovSA/Detectors_FSM_FPGA,283443395,SystemVerilog,Detectors_FSM_FPGA,628,2,2023-04-12 17:43:28+00:00,"['verilog', 'radar', 'binary-integrator']",
5092,https://github.com/CloudDynasty/FormalVerificationFifo.git,2020-09-22 07:45:24+00:00,A formal verification on fifo design and self-developed fifo wrapper,0,CloudDynasty/FormalVerificationFifo,297574020,SystemVerilog,FormalVerificationFifo,7,2,2023-02-15 00:02:34+00:00,[],
5093,https://github.com/nfproc/hdmi_sender.git,2020-10-13 02:37:41+00:00,AXI-Stream Video Test Pattern Sender IP (for ACRi Blog),0,nfproc/hdmi_sender,303567897,SystemVerilog,hdmi_sender,15,2,2023-11-27 13:09:34+00:00,[],
5094,https://github.com/Poorna-Sri/Candi_Ven_Mac.git,2020-11-05 03:06:47+00:00,Design for Candy Vending Machine and UVM Based test Environment for verification,2,Poorna-Sri/Candi_Ven_Mac,310176588,SystemVerilog,Candi_Ven_Mac,29,2,2024-03-09 14:56:43+00:00,[],
5095,https://github.com/verification-gentleman-blog/something-something-formal-equivalence.git,2020-08-29 15:32:37+00:00,,0,verification-gentleman-blog/something-something-formal-equivalence,291297945,SystemVerilog,something-something-formal-equivalence,20,1,2023-03-13 06:30:20+00:00,[],https://api.github.com/licenses/apache-2.0
5096,https://github.com/Voprzybyo/SystemVerilog.git,2020-09-01 17:57:01+00:00,"Programming in SystemVerilog - hardware description and hardware verification language used to model, design, simulate, test and implement electronic systems.",0,Voprzybyo/SystemVerilog,292069839,SystemVerilog,SystemVerilog,582,1,2022-01-11 05:52:10+00:00,[],
5097,https://github.com/GorgeousWalrus/panda_cache.git,2020-08-21 11:31:55+00:00,,0,GorgeousWalrus/panda_cache,289253845,SystemVerilog,panda_cache,11,1,2020-08-24 14:36:31+00:00,[],
5098,https://github.com/GorgeousWalrus/panda_timer.git,2020-08-21 11:32:50+00:00,,0,GorgeousWalrus/panda_timer,289253987,SystemVerilog,panda_timer,743,1,2020-08-31 17:13:22+00:00,[],
5099,https://github.com/qaztronic/keras_to_fpga.git,2020-08-29 20:31:30+00:00,,0,qaztronic/keras_to_fpga,291344607,SystemVerilog,keras_to_fpga,578,1,2022-10-05 19:10:38+00:00,[],
5100,https://github.com/erihsu/xor_encrypt.git,2020-09-10 02:53:43+00:00,Simple xor encrypt matrix design and verification both in systemverilog,0,erihsu/xor_encrypt,294286235,SystemVerilog,xor_encrypt,51,1,2020-10-09 09:36:30+00:00,['systemverilog'],
5101,https://github.com/bettencb/cmp_sci_design.git,2020-10-02 08:06:23+00:00,Computer Design Labs,0,bettencb/cmp_sci_design,300545067,SystemVerilog,cmp_sci_design,5681,1,2020-10-18 20:39:30+00:00,[],
5102,https://github.com/Artem1199/ECE540-SoC.git,2020-10-11 09:05:26+00:00,,0,Artem1199/ECE540-SoC,303081339,SystemVerilog,ECE540-SoC,40740,1,2020-11-15 19:59:41+00:00,[],https://api.github.com/licenses/mit
5103,https://github.com/URAN235KFFM/karabas-pro.git,2020-09-07 14:21:31+00:00,FPGA based retrocomputer with FDD and HDD controllers,6,URAN235KFFM/karabas-pro,293549052,,karabas-pro,17179,1,2022-06-06 01:55:47+00:00,[],
5104,https://github.com/nipun0307/cordic-design.git,2020-10-22 19:54:42+00:00,,1,nipun0307/cordic-design,306444559,SystemVerilog,cordic-design,1911,1,2021-08-05 14:07:33+00:00,[],
5105,https://github.com/teekamkhandelwal/sequence-detector.git,2020-11-13 15:19:58+00:00,,0,teekamkhandelwal/sequence-detector,312610866,SystemVerilog,sequence-detector,6,1,2020-11-24 12:06:38+00:00,[],https://api.github.com/licenses/mit
5106,https://github.com/gzyIDE/ParamMod.git,2020-10-28 03:57:47+00:00,Parameterized Verilog Modules for many applications,1,gzyIDE/ParamMod,307901600,SystemVerilog,ParamMod,179,1,2023-08-19 13:18:33+00:00,[],https://api.github.com/licenses/mit
5107,https://github.com/eigenco/S186.git,2020-08-04 14:12:29+00:00,Simplified version of the 80186 FPGA core (original by Jamie Iles),0,eigenco/S186,285000431,SystemVerilog,S186,63,1,2021-07-30 15:17:12+00:00,[],
5108,https://github.com/1varuna/myexamples.git,2020-07-18 15:04:28+00:00,"Example which helps understand modelling of a simple SV TB. For UVM implementation refer the repository ""fifo_tb_uvm"".",1,1varuna/myexamples,280679816,SystemVerilog,myexamples,937,1,2023-10-29 14:49:41+00:00,"['verification-methodologies', 'systemverilog']",
5109,https://github.com/JagrutJadhav/32-bit-Instruction-Fetch-Stage.git,2020-07-01 12:15:22+00:00,,0,JagrutJadhav/32-bit-Instruction-Fetch-Stage,276369078,SystemVerilog,32-bit-Instruction-Fetch-Stage,518,1,2021-05-31 18:42:39+00:00,[],
5110,https://github.com/necamilosevic96/Verification_ARPS_IP_project.git,2020-07-01 12:59:25+00:00,,1,necamilosevic96/Verification_ARPS_IP_project,276378527,SystemVerilog,Verification_ARPS_IP_project,7315,1,2020-08-12 10:22:59+00:00,[],
5111,https://github.com/ejporter/fpga-autotuner.git,2020-10-11 23:16:00+00:00,"6.111 Final Project, Team: Andrew Reyna, Erik Porter, and Jeanne Harabedian",0,ejporter/fpga-autotuner,303229838,SystemVerilog,fpga-autotuner,296,1,2023-10-03 14:52:47+00:00,[],
5112,https://github.com/jakemdaly/RISC-Accumulator.git,2020-09-07 16:00:12+00:00,Accumulator-based instruction set architecture for running decryption and encryption algorithms on FPGA.,0,jakemdaly/RISC-Accumulator,293572229,SystemVerilog,RISC-Accumulator,22,1,2022-04-08 18:13:23+00:00,[],
5113,https://github.com/RohanSeam/Thunderbird-Taillights-.git,2020-09-20 05:44:34+00:00,,0,RohanSeam/Thunderbird-Taillights-,297010486,SystemVerilog,Thunderbird-Taillights-,2220,1,2020-09-20 05:58:03+00:00,[],
5114,https://github.com/SoftNacho/Keystone_XL_Pipeline.git,2020-09-21 22:49:17+00:00,LC-3b Pipeline for Computer Organization and Design class,0,SoftNacho/Keystone_XL_Pipeline,297478593,SystemVerilog,Keystone_XL_Pipeline,1729,1,2020-09-30 20:50:13+00:00,[],
5115,https://github.com/luojw-dwr/Toy-Asynchronous-FIFO-Generator.git,2020-09-18 12:49:43+00:00,,0,luojw-dwr/Toy-Asynchronous-FIFO-Generator,296619780,SystemVerilog,Toy-Asynchronous-FIFO-Generator,31,1,2020-09-23 09:57:56+00:00,[],
5116,https://github.com/tuanla93/SystemVerilog-UVM.git,2020-08-04 19:01:40+00:00,This contains examples for writing a Testbench using SystemVerilog and UVM,0,tuanla93/SystemVerilog-UVM,285072581,SystemVerilog,SystemVerilog-UVM,15,1,2021-04-19 17:16:42+00:00,[],
5117,https://github.com/Panda-Cores/timer_module.git,2020-08-03 17:25:36+00:00,,0,Panda-Cores/timer_module,284763118,SystemVerilog,timer_module,739,1,2020-08-09 12:45:34+00:00,[],
5118,https://github.com/dominicassia/Digital-Design-Theory-and-Practice.git,2020-10-11 02:08:45+00:00,PSU CMPEN 270 - Digital Design Theory and Practive (FA 2020),0,dominicassia/Digital-Design-Theory-and-Practice,303024745,SystemVerilog,Digital-Design-Theory-and-Practice,12280,1,2023-01-25 17:22:52+00:00,[],https://api.github.com/licenses/gpl-3.0
5119,https://github.com/Crevg/ARMv4ISAsv.git,2020-10-24 05:44:08+00:00,ARM based ISA ,0,Crevg/ARMv4ISAsv,306814730,SystemVerilog,ARMv4ISAsv,27,1,2021-09-05 16:20:14+00:00,[],
5120,https://github.com/evgeniyBolnov/spi_amm.git,2020-10-02 08:49:23+00:00,Avalon-MM SPI bridge,0,evgeniyBolnov/spi_amm,300555600,SystemVerilog,spi_amm,198,1,2023-09-29 07:01:11+00:00,[],
5121,https://github.com/lookwhoistalkinguvm/symbol_gen_demo.git,2020-08-28 12:11:49+00:00,Demonstrate Unified Symbol Driver design pattern. Unified Symbol Driver Demo Testbench.,0,lookwhoistalkinguvm/symbol_gen_demo,291037580,SystemVerilog,symbol_gen_demo,113,1,2023-01-19 17:49:21+00:00,[],https://api.github.com/licenses/mit
5122,https://github.com/Pear0/cs3220-processor.git,2020-07-31 06:50:00+00:00,,0,Pear0/cs3220-processor,283964196,SystemVerilog,cs3220-processor,466,1,2020-08-01 00:04:17+00:00,[],
5123,https://github.com/Sriku007/Stopwatch-on-FPGA.git,2020-07-31 09:19:34+00:00,Implementation of a Stopwatch on Basys FPGA,0,Sriku007/Stopwatch-on-FPGA,283993997,SystemVerilog,Stopwatch-on-FPGA,18,1,2021-05-13 21:43:14+00:00,[],
5124,https://github.com/GorgeousWalrus/panda_wishbone.git,2020-08-21 11:33:12+00:00,,0,GorgeousWalrus/panda_wishbone,289254064,SystemVerilog,panda_wishbone,748,1,2020-08-27 14:21:49+00:00,[],
5125,https://github.com/vnay01/VerilogCodes.git,2020-08-28 13:46:27+00:00,A repository of verilog codes of various digital circuits.,0,vnay01/VerilogCodes,291057639,SystemVerilog,VerilogCodes,433,1,2023-08-15 03:29:47+00:00,[],
5126,https://github.com/PaulZC/XLR8_HDMI_VGA_Text_Demo_XB.git,2020-08-12 13:55:55+00:00,An XLR8 XB which will run on the Alorium Technology Sno FPGA board and produce simple VGA text over HDMI,0,PaulZC/XLR8_HDMI_VGA_Text_Demo_XB,287027530,SystemVerilog,XLR8_HDMI_VGA_Text_Demo_XB,42587,1,2022-10-01 09:05:21+00:00,[],
5127,https://github.com/olcayakman/CS223-Project.git,2020-11-07 17:42:54+00:00,The semester project I did for my CS223 course in Bilkent University.,0,olcayakman/CS223-Project,310899547,SystemVerilog,CS223-Project,788,1,2022-12-20 02:27:03+00:00,[],
5128,https://github.com/GorgeousWalrus/panda_gpio.git,2020-08-21 11:32:27+00:00,,0,GorgeousWalrus/panda_gpio,289253925,SystemVerilog,panda_gpio,5,1,2020-09-03 16:36:21+00:00,[],
5129,https://github.com/akilystic/seq_det_uvm.git,2020-08-28 06:20:31+00:00,,0,akilystic/seq_det_uvm,290967454,SystemVerilog,seq_det_uvm,14,1,2020-08-28 06:27:13+00:00,[],
5130,https://github.com/cyyy1/v_pro.git,2020-07-02 12:08:16+00:00,open source code,0,cyyy1/v_pro,276636166,SystemVerilog,v_pro,612,1,2020-07-29 04:18:33+00:00,[],
5131,https://github.com/anuragktl/risc-v.git,2020-08-11 02:56:41+00:00,RISC-V pipeline processor with Hazard Detection Unit and Forwarding Unit. Pipeline stall for 2 clocks occur only in case of RAW dependency. ,0,anuragktl/risc-v,286630935,SystemVerilog,risc-v,21,1,2021-06-01 07:32:18+00:00,[],https://api.github.com/licenses/mit
5132,https://github.com/saipra99/overrides.git,2020-08-05 18:55:55+00:00,,0,saipra99/overrides,285378463,SystemVerilog,overrides,2,1,2022-01-25 09:33:51+00:00,[],
5133,https://github.com/Sustrak/Segre.git,2020-09-18 07:44:45+00:00,A RISC-V 32 bit processor,3,Sustrak/Segre,296550591,SystemVerilog,Segre,2704,1,2021-01-21 08:38:30+00:00,[],
5134,https://github.com/djcopley/8bitproc.git,2020-11-02 04:51:29+00:00,A simple 8 bit processor,0,djcopley/8bitproc,309261397,SystemVerilog,8bitproc,1533,1,2022-09-12 01:10:14+00:00,[],https://api.github.com/licenses/gpl-3.0
5135,https://github.com/marwanibrahim546/counter_UVM.git,2020-10-30 21:02:51+00:00,,0,marwanibrahim546/counter_UVM,308743482,SystemVerilog,counter_UVM,11,1,2022-11-30 01:25:16+00:00,[],
5136,https://github.com/khmkazu921/hbm_bench.git,2020-07-03 05:03:25+00:00,hbm bench U280,0,khmkazu921/hbm_bench,276811782,SystemVerilog,hbm_bench,3195,1,2024-03-18 04:09:08+00:00,[],
5137,https://github.com/GorgeousWalrus/panda_lsu.git,2020-08-21 11:33:36+00:00,,0,GorgeousWalrus/panda_lsu,289254154,SystemVerilog,panda_lsu,744,1,2020-08-28 15:44:37+00:00,[],
5138,https://github.com/jonataspassos/DigitalClock-HardwareDescription.git,2020-08-21 15:25:38+00:00,,0,jonataspassos/DigitalClock-HardwareDescription,289302446,SystemVerilog,DigitalClock-HardwareDescription,29,1,2020-08-24 17:59:21+00:00,[],
5139,https://github.com/MMMMMARIO11/PWM-motor-control-and-UART-Communication-velocity-measurement.git,2020-07-26 07:34:19+00:00,PWM控制电机转速、实际测速并通过UART发送至电脑端,0,MMMMMARIO11/PWM-motor-control-and-UART-Communication-velocity-measurement,282600033,SystemVerilog,PWM-motor-control-and-UART-Communication-velocity-measurement,22719,1,2023-09-21 11:31:54+00:00,[],
5140,https://github.com/Verdvana/I2C_Controller.git,2020-10-10 08:01:53+00:00,I2C_Controller,2,Verdvana/I2C_Controller,302848567,SystemVerilog,I2C_Controller,325,1,2022-06-06 06:16:10+00:00,[],
5141,https://github.com/halvho/LZSS-hardware-implementation.git,2020-08-02 18:08:00+00:00,Hardware implementation of the LZSS compression algorithm as part of my master thesis,0,halvho/LZSS-hardware-implementation,284515529,SystemVerilog,LZSS-hardware-implementation,8,1,2023-04-04 04:37:27+00:00,[],
5142,https://github.com/nfproc/stencil_coproc.git,2020-11-02 10:27:37+00:00,Stencil Computation Coprocessor (for ACRi Blog),0,nfproc/stencil_coproc,309335163,SystemVerilog,stencil_coproc,17,1,2022-05-13 05:33:33+00:00,[],
5143,https://github.com/alexist2623/TEST.git,2020-07-24 05:06:12+00:00,,0,alexist2623/TEST,282127897,SystemVerilog,TEST,2095,1,2020-08-02 09:56:38+00:00,[],
5144,https://github.com/AloriumTechnology/evo_build_template.git,2020-07-28 15:57:06+00:00,,0,AloriumTechnology/evo_build_template,283260391,SystemVerilog,evo_build_template,22,1,2021-06-29 18:28:28+00:00,[],https://api.github.com/licenses/mit
5145,https://github.com/teekamkhandelwal/adder_verification_example.git,2020-11-13 11:52:00+00:00,generator driver transection testbench classs,0,teekamkhandelwal/adder_verification_example,312561917,SystemVerilog,adder_verification_example,16,1,2020-11-24 12:09:44+00:00,[],
5146,https://github.com/RafaelLaya/Digital_Circuits.git,2020-09-26 07:03:22+00:00,Advanced and Basic Digital Circuits,0,RafaelLaya/Digital_Circuits,298757498,SystemVerilog,Digital_Circuits,8049,1,2023-04-29 19:09:01+00:00,[],
5147,https://github.com/4spol/my_uvm_statemachine_01.git,2020-09-09 09:05:49+00:00,for study,0,4spol/my_uvm_statemachine_01,294060108,SystemVerilog,my_uvm_statemachine_01,13,1,2020-09-14 00:45:18+00:00,[],
5148,https://github.com/LudwigCRON/platform.git,2020-08-02 22:53:04+00:00,digital platform of obvious block,0,LudwigCRON/platform,284555782,SystemVerilog,platform,71,1,2021-01-02 16:34:15+00:00,"['reflow', 'verilog', 'systemverilog', 'real-number-modelling']",
5149,https://github.com/Panda-Cores/debug_module.git,2020-08-03 17:22:04+00:00,,0,Panda-Cores/debug_module,284762326,SystemVerilog,debug_module,737,1,2020-08-03 18:00:24+00:00,[],
5150,https://github.com/X1nq1Wang/ESE507.git,2020-10-03 17:27:12+00:00,,0,X1nq1Wang/ESE507,300937564,SystemVerilog,ESE507,7144,1,2021-11-02 06:43:46+00:00,[],
5151,https://github.com/akilystic/uvm.git,2020-07-13 15:35:51+00:00,,1,akilystic/uvm,279342873,SystemVerilog,uvm,5,1,2020-07-14 15:54:23+00:00,[],
5152,https://github.com/kfinch333/alarm_clock.git,2020-07-22 01:53:01+00:00,Alarm Clock in SystemVerilog,0,kfinch333/alarm_clock,281547745,SystemVerilog,alarm_clock,4,1,2022-11-22 21:09:47+00:00,[],
5153,https://github.com/vladdum/axi4_stream_pipeline.git,2020-09-14 21:16:11+00:00,,0,vladdum/axi4_stream_pipeline,295540780,SystemVerilog,axi4_stream_pipeline,470,1,2020-10-08 18:41:12+00:00,[],
5154,https://github.com/selvaruban-johnson/EXTRACTION_OF_DATA_FROM_ETHERNET_FRAME.git,2020-07-16 14:30:06+00:00,,0,selvaruban-johnson/EXTRACTION_OF_DATA_FROM_ETHERNET_FRAME,280175979,SystemVerilog,EXTRACTION_OF_DATA_FROM_ETHERNET_FRAME,0,1,2020-07-17 11:59:45+00:00,[],
5155,https://github.com/nnnth/NJU-Digital-and-electrical-experiment.git,2020-08-24 03:06:28+00:00,,0,nnnth/NJU-Digital-and-electrical-experiment,289814864,SystemVerilog,NJU-Digital-and-electrical-experiment,349482,1,2022-09-11 13:38:31+00:00,[],
5156,https://github.com/Siddharth504/Verification-Using-UVM.git,2020-08-07 16:12:50+00:00,Mentioned Project In Cv,0,Siddharth504/Verification-Using-UVM,285871218,SystemVerilog,Verification-Using-UVM,21,1,2022-01-11 05:59:44+00:00,[],
5157,https://github.com/teekamkhandelwal/System_verilog_basic_examples.git,2020-10-31 06:55:24+00:00,using edaplayground-Cadence Xcelium 19.09,0,teekamkhandelwal/System_verilog_basic_examples,308823269,SystemVerilog,System_verilog_basic_examples,105,1,2020-11-13 13:51:24+00:00,[],
5158,https://github.com/ThePalad1n/EDA_Playground.git,2020-09-21 16:45:39+00:00,,0,ThePalad1n/EDA_Playground,297402011,SystemVerilog,EDA_Playground,129,1,2020-09-23 17:30:16+00:00,[],
5159,https://github.com/adiha/multiPULPly.git,2020-10-31 18:27:40+00:00,,0,adiha/multiPULPly,308947206,SystemVerilog,multiPULPly,27,1,2023-09-04 09:24:38+00:00,[],
5160,https://github.com/kariander1/CovidChase.git,2020-11-01 18:41:00+00:00,,0,kariander1/CovidChase,309163377,SystemVerilog,CovidChase,810,1,2020-11-02 15:53:57+00:00,[],
5161,https://github.com/dpears3/EncoderDecoder.git,2020-11-06 16:16:26+00:00,,0,dpears3/EncoderDecoder,310646221,SystemVerilog,EncoderDecoder,243,1,2021-12-20 07:13:57+00:00,[],https://api.github.com/licenses/apache-2.0
5162,https://github.com/Panda-Cores/load_store_unit.git,2020-08-03 17:24:47+00:00,,0,Panda-Cores/load_store_unit,284762901,SystemVerilog,load_store_unit,737,1,2020-08-04 18:58:45+00:00,[],
5163,https://github.com/denisrexhepi/fifo_register.git,2020-10-31 18:35:04+00:00,,0,denisrexhepi/fifo_register,308948488,SystemVerilog,fifo_register,2,1,2020-11-08 21:35:37+00:00,[],
5164,https://github.com/HaoCheLee/NXP_SAC57D54H_PWM_Verification.git,2020-10-30 04:17:21+00:00,,0,HaoCheLee/NXP_SAC57D54H_PWM_Verification,308523181,SystemVerilog,NXP_SAC57D54H_PWM_Verification,667,1,2022-02-18 15:58:53+00:00,[],
5165,https://github.com/nguyenquanicd/QuestaSimTutorial.git,2020-10-04 07:21:20+00:00,Examples for performing the QuestaSim simulator on Windows,0,nguyenquanicd/QuestaSimTutorial,301065358,SystemVerilog,QuestaSimTutorial,9,1,2023-08-13 08:13:14+00:00,[],
5166,https://github.com/weihangtan/Modular-multiplier.git,2020-08-11 00:39:04+00:00,,0,weihangtan/Modular-multiplier,286608533,SystemVerilog,Modular-multiplier,1036,1,2023-10-20 22:45:27+00:00,"['asic', 'hardware-designs', 'homomorphic-encryption', 'lattice-based-crypto', 'modular-multiplication', 'post-quantum-cryptography', 'vlsi']",
5167,https://github.com/Dragon-Git/uvm_reference.git,2020-07-11 00:37:40+00:00,,1,Dragon-Git/uvm_reference,278759940,SystemVerilog,uvm_reference,160,1,2024-01-13 14:11:48+00:00,[],
5168,https://github.com/cquickstad/uvm_table_logger.git,2020-09-18 21:52:34+00:00,"An abstract generic logger that logs UVM transactions from a Monitor in an attractive, well-formatted, and highly configurable text table.",0,cquickstad/uvm_table_logger,296736829,SystemVerilog,uvm_table_logger,39,1,2021-12-02 01:03:22+00:00,[],https://api.github.com/licenses/apache-2.0
5169,https://github.com/tomjlw/UART-ASIC.git,2020-07-18 01:43:39+00:00,A UART Communication Chip Taped Out in MOSIS AMI 0.5 Micron Process ,0,tomjlw/UART-ASIC,280560060,SystemVerilog,UART-ASIC,12633,1,2020-11-11 08:06:33+00:00,[],
5170,https://github.com/jrmoserbaltimore/wishbone-modules.git,2020-08-13 23:51:01+00:00,Paramaterized Wishbone crossbar,0,jrmoserbaltimore/wishbone-modules,287402121,SystemVerilog,wishbone-modules,42,1,2022-11-02 08:32:01+00:00,[],https://api.github.com/licenses/mit
5171,https://github.com/sray0309/5-stage-RISC-V-CPU.git,2020-10-12 22:04:28+00:00,5 stage pipeline CPU,0,sray0309/5-stage-RISC-V-CPU,303523717,SystemVerilog,5-stage-RISC-V-CPU,2165,1,2022-09-08 16:06:02+00:00,[],
5172,https://github.com/zerosquaredio/galois_lfsr.git,2020-10-28 07:03:59+00:00,Galois LFSR Implementation in SystemVerilog with UVM Testbench,0,zerosquaredio/galois_lfsr,307932982,SystemVerilog,galois_lfsr,201,1,2023-10-28 14:49:54+00:00,[],https://api.github.com/licenses/gpl-3.0
5173,https://github.com/AloriumTechnology/evo_bsp.git,2020-07-28 15:49:57+00:00,,0,AloriumTechnology/evo_bsp,283258544,SystemVerilog,evo_bsp,51115,1,2021-06-29 18:27:37+00:00,[],https://api.github.com/licenses/mit
5174,https://github.com/akira-nishiyama/simple_axi_uvm.git,2020-08-01 22:20:28+00:00,Simple axi verification ip. Main target is vivado simulator.,0,akira-nishiyama/simple_axi_uvm,284348221,SystemVerilog,simple_axi_uvm,27,1,2023-09-19 20:11:05+00:00,[],https://api.github.com/licenses/mit
5175,https://github.com/fmurillom/Proyecto_2_Arqui_2_SIMD.git,2020-07-09 16:43:37+00:00,,1,fmurillom/Proyecto_2_Arqui_2_SIMD,278419196,SystemVerilog,Proyecto_2_Arqui_2_SIMD,28999,1,2022-05-03 17:27:34+00:00,[],
5176,https://github.com/zeeshan0309/pseudo_random_sequence_generator.git,2020-08-20 10:46:25+00:00,,0,zeeshan0309/pseudo_random_sequence_generator,288979711,SystemVerilog,pseudo_random_sequence_generator,4,1,2021-07-19 19:19:25+00:00,"['lfsr', 'verilog-code', 'pseudo-random-generator', 'systemverilog', 'pseudo-random']",
5177,https://github.com/4spol/my_uvm_statemachine_02.git,2020-09-14 00:36:30+00:00,"this program is modified and can pass rand test, which is ready to add reg_model for next step debug",0,4spol/my_uvm_statemachine_02,295264521,SystemVerilog,my_uvm_statemachine_02,10,1,2020-09-14 00:45:19+00:00,[],
5178,https://github.com/GorgeousWalrus/panda_uart.git,2020-08-27 20:00:47+00:00,uart module with APB interface,0,GorgeousWalrus/panda_uart,290869735,SystemVerilog,panda_uart,14,1,2020-09-04 12:36:52+00:00,[],
5179,https://github.com/fpozzana/Baugh-Wooley_multiplier.git,2020-09-27 16:42:42+00:00,Implementation in systemVerilog of a Baugh-Wooley (signed) multiplier,0,fpozzana/Baugh-Wooley_multiplier,299075139,SystemVerilog,Baugh-Wooley_multiplier,8,1,2023-03-16 03:45:28+00:00,[],
5180,https://github.com/GorgeousWalrus/panda_apb.git,2020-08-27 11:31:53+00:00,Interconnect for the APB bus,0,GorgeousWalrus/panda_apb,290758034,SystemVerilog,panda_apb,2,1,2020-08-27 22:48:10+00:00,[],
5181,https://github.com/rajkaranswain/DigitalLogicLab.git,2020-10-23 09:29:38+00:00,,0,rajkaranswain/DigitalLogicLab,306589313,,DigitalLogicLab,0,1,2021-03-02 07:32:51+00:00,[],https://api.github.com/licenses/mit
5182,https://github.com/christng98/TFE4152.git,2020-11-08 14:27:05+00:00,Analog and digital design of a four pixel camera.,2,christng98/TFE4152,311080338,SystemVerilog,TFE4152,213,1,2021-04-23 19:17:02+00:00,[],
5183,https://github.com/nulface/SystemVerilog-VGA-controller.git,2020-07-21 04:28:50+00:00,A VGA controller designed in SystemVerilog,0,nulface/SystemVerilog-VGA-controller,281294960,SystemVerilog,SystemVerilog-VGA-controller,3,1,2023-08-20 10:13:55+00:00,[],
5184,https://github.com/GorgeousWalrus/panda_debug.git,2020-08-21 11:34:03+00:00,,0,GorgeousWalrus/panda_debug,289254223,SystemVerilog,panda_debug,758,1,2020-09-04 14:25:00+00:00,[],
5185,https://github.com/akira-nishiyama/simple_ics_uvm.git,2020-08-15 04:33:30+00:00,Simple ics verification ip. Main target is vivado simulator.,0,akira-nishiyama/simple_ics_uvm,287677676,SystemVerilog,simple_ics_uvm,32,1,2021-05-21 01:57:35+00:00,[],https://api.github.com/licenses/mit
5186,https://github.com/Robert-M-Hughes/BlackJack.git,2020-10-06 17:39:43+00:00,Implementation of BlackJack on a FPGA,0,Robert-M-Hughes/BlackJack,301807081,SystemVerilog,BlackJack,286,1,2020-12-02 22:12:03+00:00,[],
5187,https://github.com/UnAmigaReloaded-fpga/UAReloaded_NES.git,2020-10-20 17:16:36+00:00,Nintendo Entertainment System ported to UnAmiga Reloaded ,0,UnAmigaReloaded-fpga/UAReloaded_NES,305781179,SystemVerilog,UAReloaded_NES,237,1,2020-11-11 12:42:14+00:00,[],
5188,https://github.com/jacianeoc/loac.git,2020-10-21 03:38:05+00:00,,0,jacianeoc/loac,305899609,SystemVerilog,loac,7,1,2021-04-22 03:58:33+00:00,[],
5189,https://github.com/selvaruban-johnson/amba_apb_tb_II.git,2020-11-11 03:47:38+00:00,systemverilog testbench architecture II ,0,selvaruban-johnson/amba_apb_tb_II,311855799,SystemVerilog,amba_apb_tb_II,4,1,2023-01-20 04:23:00+00:00,[],
5190,https://github.com/axytho/CPAED.git,2020-11-09 13:14:08+00:00,Compute platforms hardware,0,axytho/CPAED,311343325,SystemVerilog,CPAED,2797,1,2022-03-23 05:39:28+00:00,[],
5191,https://github.com/alonba/Circus-Charlie.git,2020-09-24 19:18:38+00:00,"As the final project for a course at the Technion, I, with the help of my friend Omer, have built a game to run on a FPGA device using SystemVerilog. This is the game, based on the classic ""Circus Charlie"" game.",0,alonba/Circus-Charlie,298374149,SystemVerilog,Circus-Charlie,2911,1,2024-03-13 05:35:50+00:00,[],
5192,https://github.com/sawaddelll/Some-FPGA-Projects.git,2020-08-06 20:05:05+00:00,,0,sawaddelll/Some-FPGA-Projects,285661162,SystemVerilog,Some-FPGA-Projects,2479,1,2020-08-10 18:56:15+00:00,[],
5193,https://github.com/sampsyo/vivado-example.git,2020-07-27 17:54:07+00:00,just a minimal tcl setup for running Vivado synthesis on a self-contained design,0,sampsyo/vivado-example,282974412,SystemVerilog,vivado-example,13,1,2020-08-03 12:26:20+00:00,[],
5194,https://github.com/Manoj3050/PCIeArbiter.git,2020-07-10 02:43:13+00:00,,0,Manoj3050/PCIeArbiter,278521635,SystemVerilog,PCIeArbiter,68,1,2023-06-17 10:39:41+00:00,[],
5195,https://github.com/mfkiwl/SDRAM-Controller-1.git,2020-08-22 18:24:02+00:00,Verilog 拥有极简用户接口的 SDR SDRAM 控制器,0,mfkiwl/SDRAM-Controller-1,289544083,,SDRAM-Controller-1,109,1,2023-04-17 22:50:22+00:00,[],
5196,https://github.com/neptuno-fpga/NES_mist.git,2020-10-24 09:47:21+00:00,NES core from mist/mc2p sources,0,neptuno-fpga/NES_mist,306852115,SystemVerilog,NES_mist,137158,1,2021-10-22 22:21:58+00:00,[],
5197,https://github.com/Jiawei888/A-32-bit-floating-point-multiplier-based-on-FPGA.git,2020-07-08 11:00:27+00:00,"This project USES Quartus II and ModelSim software, and follows THE IEEE754 standard. It adopts 4:2 compressor structure and other components to design a multiplier, which reduces the hardware scale on the premise of ensuring high speed. The multiplier takes two normalized 32-bit floating-point Numbers and multiplicates them to obtain the normalized result. The multiplier can deal with ""special"" Numbers such as zero, plus, minus infinity, and ""non-number (NaN)"".",0,Jiawei888/A-32-bit-floating-point-multiplier-based-on-FPGA,278065624,SystemVerilog,A-32-bit-floating-point-multiplier-based-on-FPGA,3,1,2022-11-10 13:05:51+00:00,[],
5198,https://github.com/kkurenkov/uvm_uart.git,2020-10-19 14:33:36+00:00,,0,kkurenkov/uvm_uart,305413394,SystemVerilog,uvm_uart,38,1,2021-12-12 17:12:54+00:00,[],
5199,https://github.com/lxfei7310/nontrivial-mips.git,2020-10-20 08:56:50+00:00,,1,lxfei7310/nontrivial-mips,305648281,SystemVerilog,nontrivial-mips,20380,1,2023-01-22 13:12:54+00:00,[],
5200,https://github.com/rajeevsaxena563/SVA-based-verification-of-AHB-Lite-protocol.git,2020-08-20 12:32:55+00:00,,1,rajeevsaxena563/SVA-based-verification-of-AHB-Lite-protocol,289001167,SystemVerilog,SVA-based-verification-of-AHB-Lite-protocol,70,1,2023-07-20 03:38:02+00:00,[],
5201,https://github.com/MahdiTorab/lincsim.git,2020-09-23 01:14:14+00:00,This is a multi-dimensional Network-on-chip (NoC) emulator that supports Wired/Wireless link simulation,0,MahdiTorab/lincsim,297815221,SystemVerilog,lincsim,128,1,2023-03-04 08:16:04+00:00,[],
5202,https://github.com/astalstain/improV.git,2020-09-29 15:17:37+00:00,Collaborative effort to design and validate a RISC-V microprocessor using SystemVerilog and other industry standard techniques,0,astalstain/improV,299656245,SystemVerilog,improV,785,1,2022-11-18 21:40:57+00:00,[],
5203,https://github.com/klokaj/DataSniffer.git,2020-09-03 16:38:14+00:00,,0,klokaj/DataSniffer,292625172,SystemVerilog,DataSniffer,69747,1,2020-09-20 10:39:01+00:00,[],
5204,https://github.com/GorgeousWalrus/panda_common.git,2020-08-31 09:36:50+00:00,Some common things for hardware designs,0,GorgeousWalrus/panda_common,291674056,SystemVerilog,panda_common,3,1,2020-09-04 12:33:46+00:00,[],
5205,https://github.com/yuc016/LamboProcessor.git,2020-08-29 03:14:24+00:00,A simple but capable 9-bit processor that comes with a python compiler and example assembly programs.,0,yuc016/LamboProcessor,291191513,SystemVerilog,LamboProcessor,130,1,2021-02-03 18:39:18+00:00,[],
5206,https://github.com/Dom324/RISC-V-CPU.git,2020-10-14 17:15:36+00:00,,0,Dom324/RISC-V-CPU,304084806,SystemVerilog,RISC-V-CPU,11581,1,2021-05-05 18:04:46+00:00,[],
5207,https://github.com/jaytlang/networkedlasers.git,2020-11-13 20:21:29+00:00,Hardware Networking + Laser Projector,0,jaytlang/networkedlasers,312675390,SystemVerilog,networkedlasers,94000,1,2023-01-25 21:18:55+00:00,[],
5208,https://github.com/gzyIDE/perceptron.git,2020-10-27 05:02:35+00:00,verilog implementation of perceptron,0,gzyIDE/perceptron,307590453,SystemVerilog,perceptron,77,1,2023-11-28 15:14:58+00:00,[],https://api.github.com/licenses/mit
5209,https://github.com/unicornt/mips-OoO.git,2020-07-05 08:33:11+00:00,misp-OoO,0,unicornt/mips-OoO,277261681,SystemVerilog,mips-OoO,3052,0,2020-07-05 08:33:52+00:00,[],
5210,https://github.com/levonkh/verilog_examples.git,2020-07-04 19:23:48+00:00,examples,0,levonkh/verilog_examples,277172449,SystemVerilog,verilog_examples,33,0,2020-07-26 19:49:26+00:00,[],
5211,https://github.com/ivan-1989/labs.git,2020-08-18 04:26:20+00:00,,0,ivan-1989/labs,288354136,SystemVerilog,labs,39,0,2021-01-15 09:31:15+00:00,[],
5212,https://github.com/814322112/EEB_Elevator_Simulator.git,2020-08-26 19:29:40+00:00,"A program written for FPGAs to simulate the behavior of the elevators in EEB, University of Washington. This is a final project of EE271.",0,814322112/EEB_Elevator_Simulator,290586753,SystemVerilog,EEB_Elevator_Simulator,404,0,2020-08-26 19:31:37+00:00,[],
5213,https://github.com/isamumu/dbg_guv.git,2020-08-06 05:15:32+00:00,summer 2020 under Marco Merlini,0,isamumu/dbg_guv,285480177,SystemVerilog,dbg_guv,2263,0,2020-09-03 12:06:25+00:00,[],
5214,https://github.com/Keerthivasan005/32-Bit-ALU.git,2020-08-06 11:25:55+00:00,Verilog code for 32 Bit ALU,0,Keerthivasan005/32-Bit-ALU,285552647,SystemVerilog,32-Bit-ALU,29,0,2020-08-07 18:12:28+00:00,[],
5215,https://github.com/selvaruban-johnson/BLOCK_LEVEL_TESTBENCH.git,2020-07-19 16:31:20+00:00,,0,selvaruban-johnson/BLOCK_LEVEL_TESTBENCH,280905934,SystemVerilog,BLOCK_LEVEL_TESTBENCH,2,0,2020-07-19 16:31:32+00:00,[],
5216,https://github.com/xmralla/full_adder.git,2020-07-03 06:40:16+00:00,,0,xmralla/full_adder,276827165,SystemVerilog,full_adder,1,0,2020-07-03 06:41:20+00:00,[],
5217,https://github.com/bellwood420/pong-arcade-fpga.git,2020-10-04 04:49:46+00:00,A FPGA implementation of original arcade Pong(1972),0,bellwood420/pong-arcade-fpga,301041768,SystemVerilog,pong-arcade-fpga,421,0,2020-11-28 10:22:09+00:00,[],
5218,https://github.com/ClSlaid/Naive_CPU.git,2020-11-01 12:27:51+00:00,A simple CPU designing task of BUPT CE.,0,ClSlaid/Naive_CPU,309090822,SystemVerilog,Naive_CPU,52,0,2023-01-28 11:31:44+00:00,[],https://api.github.com/licenses/mit
5219,https://github.com/soleiyu/nexysa7prj.git,2020-09-06 07:47:19+00:00,,0,soleiyu/nexysa7prj,293228456,SystemVerilog,nexysa7prj,20242,0,2020-12-22 05:36:13+00:00,[],
5220,https://github.com/merledu/bolt-core.git,2020-09-21 11:26:15+00:00,This core(RV32) is designed by systemverilog.,0,merledu/bolt-core,297318290,SystemVerilog,bolt-core,7,0,2020-10-22 09:58:49+00:00,[],
5221,https://github.com/vinodsake/learn-verilog-sv.git,2020-10-11 06:30:45+00:00,Learn System verilog,0,vinodsake/learn-verilog-sv,303057399,SystemVerilog,learn-verilog-sv,1385,0,2021-02-08 08:45:28+00:00,[],
5222,https://github.com/xintong731/NOC_perm.git,2020-10-12 07:08:53+00:00,,0,xintong731/NOC_perm,303307307,SystemVerilog,NOC_perm,24,0,2020-10-30 02:07:28+00:00,[],
5223,https://github.com/cwmetrics/test_public.git,2020-09-30 23:06:45+00:00,,0,cwmetrics/test_public,300084860,SystemVerilog,test_public,1,0,2020-10-07 19:36:43+00:00,[],
5224,https://github.com/wmkusters/fgbitw.git,2020-11-09 16:18:04+00:00,,0,wmkusters/fgbitw,311395714,SystemVerilog,fgbitw,1566,0,2020-12-08 23:00:36+00:00,[],
5225,https://github.com/yahya-alhinai/Computer-Architecture.git,2020-07-13 00:40:32+00:00,,0,yahya-alhinai/Computer-Architecture,279173636,SystemVerilog,Computer-Architecture,438,0,2020-07-13 00:43:57+00:00,[],
5226,https://github.com/Zihaokong/SHA256andBitcoin.git,2020-07-13 16:36:19+00:00,model for Bitcoin,0,Zihaokong/SHA256andBitcoin,279357523,SystemVerilog,SHA256andBitcoin,7,0,2020-07-13 16:37:38+00:00,[],
5227,https://github.com/mfkiwl/Systolic_Matrix_Multiplier.git,2020-08-01 07:54:04+00:00,Matrix multiplication using systolic array,1,mfkiwl/Systolic_Matrix_Multiplier,284214656,,Systolic_Matrix_Multiplier,208,0,2021-12-15 09:29:21+00:00,[],
5228,https://github.com/antonyaslan/Cellular-Automata-Map-Evacuation.git,2020-08-03 18:48:35+00:00,,1,antonyaslan/Cellular-Automata-Map-Evacuation,284781170,,Cellular-Automata-Map-Evacuation,257,0,2020-10-08 07:57:22+00:00,[],
5229,https://github.com/Kiran760043/UART-Receiver.git,2020-08-11 00:25:24+00:00,FPGA Programs,0,Kiran760043/UART-Receiver,286606525,SystemVerilog,UART-Receiver,50,0,2020-08-11 00:27:00+00:00,[],
5230,https://github.com/jamenaso/test_hdmi.git,2020-08-02 17:18:34+00:00,Este código consiste en la prueba unitaria del puerto HDMI para el módulo de hardware desarrollado en el trabajo final de la carrera de especialización en sistemas embebidos de la Universidad de Buenos Aires.,0,jamenaso/test_hdmi,284507491,SystemVerilog,test_hdmi,2343,0,2020-08-02 17:39:13+00:00,[],
5231,https://github.com/AzmuthSzym/UEC_Projekt.git,2020-08-16 18:37:51+00:00,Repozytorium stworzone na potrzeby projektu z przedmiotu UEC,1,AzmuthSzym/UEC_Projekt,288003221,SystemVerilog,UEC_Projekt,125,0,2020-09-20 08:45:57+00:00,[],
5232,https://github.com/thata/verilog_building_blocks.git,2020-08-22 08:07:56+00:00,,0,thata/verilog_building_blocks,289447166,SystemVerilog,verilog_building_blocks,1057,0,2020-09-22 00:25:26+00:00,[],
5233,https://github.com/theignorantzen/learnSV.git,2020-07-18 12:53:23+00:00,Examples explored while learning SV. Contains some good examples to start your SV journey.,0,theignorantzen/learnSV,280656060,SystemVerilog,learnSV,7,0,2020-07-18 12:57:00+00:00,[],
5234,https://github.com/coreturn/cache.git,2020-07-19 11:11:54+00:00,,0,coreturn/cache,280848805,,cache,4436,0,2020-08-21 08:33:14+00:00,[],
5235,https://github.com/Artem1199/ECE582-Projects.git,2020-07-07 20:11:41+00:00,,0,Artem1199/ECE582-Projects,277912462,SystemVerilog,ECE582-Projects,161,0,2020-07-22 22:53:22+00:00,[],https://api.github.com/licenses/mit
5236,https://github.com/visali85/uart_uvc.git,2020-07-28 10:40:59+00:00,,0,visali85/uart_uvc,283181812,SystemVerilog,uart_uvc,9943,0,2020-07-28 10:46:01+00:00,[],
5237,https://github.com/smanda25/MIPS.git,2020-07-15 23:21:19+00:00,MIPS multi cycle CPU on SystemVerilog,0,smanda25/MIPS,280002779,SystemVerilog,MIPS,7,0,2020-07-15 23:25:24+00:00,[],
5238,https://github.com/Galatis-Giuliano/Lab3EarlyDebouncer.git,2020-09-14 20:30:19+00:00,,0,Galatis-Giuliano/Lab3EarlyDebouncer,295531712,SystemVerilog,Lab3EarlyDebouncer,9,0,2020-09-16 04:21:05+00:00,[],
5239,https://github.com/SovanKundu/aibot.git,2020-08-27 18:24:14+00:00,AI Robot,0,SovanKundu/aibot,290851170,SystemVerilog,aibot,16,0,2020-09-04 00:06:26+00:00,[],
5240,https://github.com/jetvova/myarch32.git,2020-07-06 04:29:55+00:00,Designing a 32-bit CPU from scratch,1,jetvova/myarch32,277442182,SystemVerilog,myarch32,185,0,2020-11-21 04:31:27+00:00,[],https://api.github.com/licenses/apache-2.0
5241,https://github.com/e60369/Verilog_Alarm_Clock.git,2020-07-04 16:23:05+00:00,,0,e60369/Verilog_Alarm_Clock,277145658,SystemVerilog,Verilog_Alarm_Clock,5,0,2020-07-11 13:58:07+00:00,[],
5242,https://github.com/SaichethanDevaruppula/stopwatch.fpga.git,2020-08-11 07:34:25+00:00,,0,SaichethanDevaruppula/stopwatch.fpga,286677253,SystemVerilog,stopwatch.fpga,19,0,2020-08-11 07:37:05+00:00,[],
5243,https://github.com/Atif-786/Full-adder-using-gate-level.git,2020-10-26 18:57:49+00:00,,0,Atif-786/Full-adder-using-gate-level,307475688,SystemVerilog,Full-adder-using-gate-level,7,0,2020-10-27 05:59:24+00:00,[],https://api.github.com/licenses/apache-2.0
5244,https://github.com/cpe-adventurer/ramchip.git,2020-10-23 13:09:48+00:00,,0,cpe-adventurer/ramchip,306640724,SystemVerilog,ramchip,1,0,2021-01-01 19:56:50+00:00,[],
5245,https://github.com/ranjan-yadav/SHA-256-System-Verilog-Code.git,2020-09-18 18:01:23+00:00,"The complete code for SHA-256 has been implemented on questasim using system verilog and output has been for 256-random input given by user. For verification with real output , I have used an online website link as follows: https://www.movable-type.co.uk/scripts/sha256.html , which generates the SHA-256 output for a message.",0,ranjan-yadav/SHA-256-System-Verilog-Code,296694700,SystemVerilog,SHA-256-System-Verilog-Code,4352,0,2020-09-18 18:10:00+00:00,[],
5246,https://github.com/OmarNaffaa/Lab-5---FIFO.git,2020-09-30 00:01:01+00:00,,0,OmarNaffaa/Lab-5---FIFO,299765825,SystemVerilog,Lab-5---FIFO,6,0,2020-09-30 02:02:07+00:00,[],
5247,https://github.com/llfl/uvm_abc.git,2020-10-12 09:40:04+00:00,It is a new repo about my uvm learning cases(worked on VCS),0,llfl/uvm_abc,303345142,SystemVerilog,uvm_abc,9,0,2020-10-13 07:39:33+00:00,[],
5248,https://github.com/JeterHwang/DClab-team04.git,2020-09-24 05:14:34+00:00,,0,JeterHwang/DClab-team04,298175588,SystemVerilog,DClab-team04,25588,0,2022-09-28 07:19:35+00:00,[],
5249,https://github.com/karthmnz/FPGA_1756.git,2020-10-03 18:31:37+00:00,,0,karthmnz/FPGA_1756,300949961,SystemVerilog,FPGA_1756,15,0,2021-02-08 13:35:06+00:00,[],
5250,https://github.com/melt-umn/Abella-AG-Interface.git,2020-11-07 17:16:15+00:00,,0,melt-umn/Abella-AG-Interface,310894710,SystemVerilog,Abella-AG-Interface,729,0,2021-12-31 21:43:05+00:00,[],
5251,https://github.com/MatusPilnan/asicde-collab-visualization.git,2020-11-08 21:13:47+00:00,,0,MatusPilnan/asicde-collab-visualization,311156087,SystemVerilog,asicde-collab-visualization,35,0,2021-04-21 21:26:02+00:00,[],
5252,https://github.com/tylergithub/SHA-3-Permutation-Engine_SystemVerilog.git,2020-11-08 21:11:55+00:00,"The design shall have w=64, and the data is 5x5x64. The design has limitations. Using 4 provided memory blocks. The design has a 64 bit input interface and a 64 bit output interface. This design is synthesizable.",0,tylergithub/SHA-3-Permutation-Engine_SystemVerilog,311155805,SystemVerilog,SHA-3-Permutation-Engine_SystemVerilog,3313,0,2021-01-05 20:09:16+00:00,[],
5253,https://github.com/devinmur29/kaboom_project.git,2020-11-11 05:42:20+00:00,,1,devinmur29/kaboom_project,311874128,SystemVerilog,kaboom_project,47105,0,2020-12-09 01:02:14+00:00,[],
5254,https://github.com/rintcius/precog-testdata.git,2020-11-02 13:12:09+00:00,,0,rintcius/precog-testdata,309374144,SystemVerilog,precog-testdata,161,0,2021-03-02 10:09:37+00:00,[],
5255,https://github.com/YJ-Guan/pulpino_fpga_chip_test.git,2020-11-02 07:11:32+00:00,test the pulpino chip with zedboard,0,YJ-Guan/pulpino_fpga_chip_test,309286726,SystemVerilog,pulpino_fpga_chip_test,26,0,2021-01-20 07:48:55+00:00,[],https://api.github.com/licenses/mit
5256,https://github.com/techie97/watchdog_services.git,2020-11-09 21:41:37+00:00,,1,techie97/watchdog_services,311472169,SystemVerilog,watchdog_services,10,0,2020-11-10 18:43:17+00:00,[],
5257,https://github.com/Tauhoo/neural-burning.git,2020-11-13 08:36:03+00:00,The architecture for neural network computing.,0,Tauhoo/neural-burning,312518361,SystemVerilog,neural-burning,54002,0,2021-04-18 08:55:20+00:00,[],
5258,https://github.com/maluwastaken/Infra_de_Hardware.git,2020-07-10 13:26:46+00:00,,0,maluwastaken/Infra_de_Hardware,278640157,,Infra_de_Hardware,3777,0,2020-07-10 13:28:31+00:00,[],
5259,https://github.com/tallenintegsys/computer_8bit.git,2020-07-01 00:43:37+00:00,Implementation of a popular 8-bit computer on a Cyclone IV,0,tallenintegsys/computer_8bit,276240434,SystemVerilog,computer_8bit,23399,0,2023-04-08 16:44:07+00:00,[],
5260,https://github.com/kushika-s30/Digital-Circuits.git,2020-08-31 14:17:49+00:00,Modelling of basic combinational and sequential digital electronic circuits using SystemVerilog in three different modelling styles. ,0,kushika-s30/Digital-Circuits,291734968,SystemVerilog,Digital-Circuits,133,0,2021-08-10 06:36:00+00:00,[],
5261,https://github.com/Kiran760043/UART-Project.git,2020-09-08 18:10:48+00:00,FPGA design,0,Kiran760043/UART-Project,293890579,SystemVerilog,UART-Project,68,0,2020-09-08 18:12:21+00:00,[],
5262,https://github.com/HaoboChen1887/CpuPrototype.git,2020-08-21 15:33:29+00:00,,0,HaoboChen1887/CpuPrototype,289304216,SystemVerilog,CpuPrototype,2492,0,2020-09-16 19:35:23+00:00,[],
5263,https://github.com/Dimonij/A6-task.git,2020-08-24 16:13:53+00:00,A6 task training in system verilog,0,Dimonij/A6-task,289977188,SystemVerilog,A6-task,17,0,2020-09-20 16:26:59+00:00,[],
5264,https://github.com/rosethepose/CPSC351-Full-Adder.git,2020-09-22 23:41:19+00:00,,0,rosethepose/CPSC351-Full-Adder,297799104,SystemVerilog,CPSC351-Full-Adder,4,0,2020-09-22 23:42:17+00:00,[],
5265,https://github.com/Berk-T/CelularAutomaton.git,2020-09-20 12:14:05+00:00,,0,Berk-T/CelularAutomaton,297068822,SystemVerilog,CelularAutomaton,6,0,2021-07-29 09:36:13+00:00,[],
5266,https://github.com/admiralento/logicboy.git,2020-09-21 18:00:44+00:00,Built from Scratch FPGA plans for a GameBoy-like System,0,admiralento/logicboy,297420188,SystemVerilog,logicboy,19288,0,2022-10-20 21:58:46+00:00,[],
5267,https://github.com/Teggoon/9-bit-ISA-Processor-and-Assembler-Class-Project.git,2020-08-07 07:54:57+00:00,,0,Teggoon/9-bit-ISA-Processor-and-Assembler-Class-Project,285771785,SystemVerilog,9-bit-ISA-Processor-and-Assembler-Class-Project,151,0,2020-09-03 23:08:31+00:00,[],
5268,https://github.com/johnw08/CNN_de0-nano.git,2020-10-04 05:56:38+00:00,,0,johnw08/CNN_de0-nano,301050793,SystemVerilog,CNN_de0-nano,28951,0,2021-01-28 05:30:44+00:00,[],
5269,https://github.com/asfandyark/projects.git,2020-09-27 22:23:44+00:00,Misc Projects,0,asfandyark/projects,299130047,SystemVerilog,projects,16,0,2022-04-14 07:20:53+00:00,[],
5270,https://github.com/fq97/remote.git,2020-07-13 20:15:35+00:00,Building a remote for Samsung TV using DE1-SOC FPGA using the Quartus Prime environment.,0,fq97/remote,279402572,SystemVerilog,remote,8281,0,2020-08-05 21:32:05+00:00,[],
5271,https://github.com/NirLalum/ALU.git,2020-07-08 18:47:31+00:00,ALU implementation,0,NirLalum/ALU,278169031,SystemVerilog,ALU,4,0,2020-07-08 18:49:52+00:00,[],
5272,https://github.com/melmae/logic-analyzer.git,2020-07-28 23:21:14+00:00,Final project for ECE 551 at UW-Madison (Spring 2020),0,melmae/logic-analyzer,283349060,SystemVerilog,logic-analyzer,21,0,2020-07-28 23:24:58+00:00,[],
5273,https://github.com/elektrotechniker-aufgabenDotDE/bcdCounterSynchron.git,2020-07-24 12:29:03+00:00,,0,elektrotechniker-aufgabenDotDE/bcdCounterSynchron,282214508,SystemVerilog,bcdCounterSynchron,108,0,2020-07-28 12:40:34+00:00,[],
5274,https://github.com/mukuljava/Hardware-generator-for-deep-convolutional-neural-networks.git,2020-07-30 01:32:40+00:00,,0,mukuljava/Hardware-generator-for-deep-convolutional-neural-networks,283640257,SystemVerilog,Hardware-generator-for-deep-convolutional-neural-networks,1475,0,2020-07-30 01:38:13+00:00,[],
5275,https://github.com/Fernsicles/FPGA-calc.git,2020-07-30 01:35:33+00:00,Simple calculator in SystemVerilog,0,Fernsicles/FPGA-calc,283640784,SystemVerilog,FPGA-calc,8,0,2020-08-01 05:42:14+00:00,"['fpga', 'systemverilog']",
5276,https://github.com/Jensenwww/apb_uart_top.git,2020-07-24 08:52:29+00:00,,0,Jensenwww/apb_uart_top,282170720,SystemVerilog,apb_uart_top,1,0,2020-07-24 09:10:09+00:00,[],
5277,https://github.com/shimo8810/fpga-practice.git,2020-10-12 02:16:40+00:00,FPGA 勉強用 リポジトリ,0,shimo8810/fpga-practice,303255325,SystemVerilog,fpga-practice,497,0,2020-11-01 07:54:58+00:00,[],https://api.github.com/licenses/mit
5278,https://github.com/StephenBartel/UofCProjectHermes.git,2020-10-22 22:20:36+00:00,,0,StephenBartel/UofCProjectHermes,306471298,SystemVerilog,UofCProjectHermes,8537,0,2021-04-14 20:59:50+00:00,[],
5279,https://github.com/salvarez97/tarea_1_Verificacion.git,2020-10-13 21:51:11+00:00,Verificación para un Bus serial ,0,salvarez97/tarea_1_Verificacion,303836906,SystemVerilog,tarea_1_Verificacion,1,0,2020-10-20 06:23:44+00:00,[],
5280,https://github.com/joao-fragoso/serial_file_echo.git,2020-10-09 11:16:47+00:00,A SystemVerilog serial file echo project to Xilinx Vivado,0,joao-fragoso/serial_file_echo,302618769,SystemVerilog,serial_file_echo,39,0,2020-11-30 03:02:17+00:00,[],https://api.github.com/licenses/gpl-3.0
5281,https://github.com/Radiophantom/LIFO.git,2020-08-17 09:10:38+00:00,,0,Radiophantom/LIFO,288134012,SystemVerilog,LIFO,14,0,2022-07-26 13:40:28+00:00,[],
5282,https://github.com/irwinfrimpong/MIPS-Single-Cycle-Processor.git,2020-07-19 00:35:49+00:00,"Single Cycle MIPS Processor to support ALU computations including but not limited to add, sub,and,or,slt,lw, j, beq operations",0,irwinfrimpong/MIPS-Single-Cycle-Processor,280764190,SystemVerilog,MIPS-Single-Cycle-Processor,275,0,2020-07-19 00:36:57+00:00,[],
5283,https://github.com/parker44/memory-manipulation.git,2020-07-24 18:36:31+00:00,,0,parker44/memory-manipulation,282291547,SystemVerilog,memory-manipulation,31,0,2020-07-28 22:11:38+00:00,[],
5284,https://github.com/JesusA824/Verilog-.git,2020-08-19 04:00:39+00:00,,1,JesusA824/Verilog-,288629180,SystemVerilog,Verilog-,15,0,2020-08-19 05:21:24+00:00,[],
5285,https://github.com/WenguoZhang-cd/work_and_learn.git,2020-08-26 04:49:09+00:00,Keep of record of the learning notes and work logs ,0,WenguoZhang-cd/work_and_learn,290398002,SystemVerilog,work_and_learn,12,0,2021-11-22 02:32:39+00:00,[],
5286,https://github.com/SergioJJ/systemverilog-babysteps.git,2020-08-19 20:32:36+00:00,A repository for all notes and practice about systemverilog,0,SergioJJ/systemverilog-babysteps,288831540,SystemVerilog,systemverilog-babysteps,14,0,2020-09-06 18:31:23+00:00,[],
5287,https://github.com/jimfred/fpga.git,2020-08-27 02:46:49+00:00,,0,jimfred/fpga,290657906,SystemVerilog,fpga,40,0,2020-08-31 00:54:30+00:00,[],
5288,https://github.com/danielgaio/state_machine_exercise_2.git,2020-10-10 19:36:35+00:00,,0,danielgaio/state_machine_exercise_2,302976641,SystemVerilog,state_machine_exercise_2,12952,0,2020-11-02 22:53:32+00:00,[],
5289,https://github.com/Louisredstone/SystemVerilog.git,2020-10-05 07:57:59+00:00,,0,Louisredstone/SystemVerilog,301333588,SystemVerilog,SystemVerilog,2233,0,2022-01-01 13:05:30+00:00,[],
5290,https://github.com/RadwanAtme/Simple-Arithmetic-Logic-Unit--UniversityHomework.git,2020-10-15 10:55:36+00:00,,0,RadwanAtme/Simple-Arithmetic-Logic-Unit--UniversityHomework,304296628,SystemVerilog,Simple-Arithmetic-Logic-Unit--UniversityHomework,204,0,2020-10-15 11:23:11+00:00,[],
5291,https://github.com/ralfgad/Multiplicador.git,2020-10-07 07:23:48+00:00,,0,ralfgad/Multiplicador,301957866,SystemVerilog,Multiplicador,164,0,2020-10-07 08:06:36+00:00,[],
5292,https://github.com/suyash-20/SystemVerilog_repo.git,2020-08-14 23:39:54+00:00,,0,suyash-20/SystemVerilog_repo,287644107,SystemVerilog,SystemVerilog_repo,27,0,2021-05-09 12:08:52+00:00,[],
5293,https://github.com/Jutenbezbuten/uec2_alt_version.git,2020-09-09 22:48:50+00:00,"alt ver of the uec2 final project, no keyboard basically",0,Jutenbezbuten/uec2_alt_version,294246568,SystemVerilog,uec2_alt_version,18993,0,2020-09-15 01:57:16+00:00,[],
5294,https://github.com/qqn2/sv_fifo.git,2020-09-17 17:40:21+00:00,,0,qqn2/sv_fifo,296399084,SystemVerilog,sv_fifo,764,0,2021-12-13 09:03:25+00:00,[],
5295,https://github.com/PulseRain/FRV2100.git,2020-07-25 23:40:32+00:00,PulseRain FRV2100 RISC-V Core,3,PulseRain/FRV2100,282542887,SystemVerilog,FRV2100,373,0,2020-07-26 01:27:35+00:00,[],
5296,https://github.com/kosmar2011/riscv.git,2020-08-11 07:28:07+00:00,Naive RISC-V Implementation in SystemVerilog,0,kosmar2011/riscv,286675886,SystemVerilog,riscv,14,0,2021-06-18 14:14:57+00:00,[],
5297,https://github.com/Radiophantom/serializer.git,2020-08-07 12:09:42+00:00,,0,Radiophantom/serializer,285820183,SystemVerilog,serializer,4,0,2020-08-10 09:59:16+00:00,[],
5298,https://github.com/saipra99/Dual_port_Ram.git,2020-07-16 07:50:07+00:00,,0,saipra99/Dual_port_Ram,280089534,SystemVerilog,Dual_port_Ram,61,0,2023-09-18 10:54:02+00:00,[],
5299,https://github.com/aaronrjmanj/systemverilog.git,2020-07-09 22:08:34+00:00,Design Verification using systemverilog,0,aaronrjmanj/systemverilog,278480989,SystemVerilog,systemverilog,9,0,2020-08-03 03:53:09+00:00,[],
5300,https://github.com/merledu/bulbul_core_sv.git,2020-09-26 10:03:06+00:00,,0,merledu/bulbul_core_sv,298786237,SystemVerilog,bulbul_core_sv,25,0,2020-10-25 14:10:41+00:00,[],
5301,https://github.com/Atif-786/Half-Adder-using-gate-level.git,2020-10-26 18:55:58+00:00,,0,Atif-786/Half-Adder-using-gate-level,307475248,SystemVerilog,Half-Adder-using-gate-level,1,0,2020-10-26 18:56:44+00:00,[],
5302,https://github.com/datamaskinprosjekt/FPGA-MadNES.git,2020-10-20 09:16:47+00:00,A 480p (VGA) 16 bit sprite rendering processing unit,0,datamaskinprosjekt/FPGA-MadNES,305653534,SystemVerilog,FPGA-MadNES,223,0,2021-02-03 23:48:12+00:00,"['vivado', 'systemverilog', 'hdl']",https://api.github.com/licenses/mit
5303,https://github.com/NganHoPSU/ECE581_Fall20.git,2020-10-17 23:42:26+00:00,,0,NganHoPSU/ECE581_Fall20,304988712,SystemVerilog,ECE581_Fall20,3065,0,2020-10-19 06:00:12+00:00,[],
5304,https://github.com/Dm1998/Score_4.git,2020-11-09 17:50:56+00:00,"At this project I designed a module that can execute the classic board game Score 4.The game is played by two players, who are called to select on which column they want to put theirc checker,on everu round. The main goal of the game is to put 4 straight checkers on a diagonal,row or column.The project is fully implemented on System Verilog. In this project there are included the source file,main testbench,an .qpf file for quartus compilation and an vga module so that we can represent the game on a screen through vga cables. ",0,Dm1998/Score_4,311420077,SystemVerilog,Score_4,7,0,2020-11-09 18:50:09+00:00,[],
5305,https://github.com/sanketkumar-parekh/Simple_codes.git,2020-07-14 01:56:07+00:00,just some simple codes of design for reference.,0,sanketkumar-parekh/Simple_codes,279455298,SystemVerilog,Simple_codes,2,0,2020-08-03 02:00:21+00:00,[],
5306,https://github.com/jrmoserbaltimore/retro-MiSTer_Gameboy.git,2020-07-13 21:30:57+00:00,Implementation of the Retro using the MiSTer Gameboy core,0,jrmoserbaltimore/retro-MiSTer_Gameboy,279415928,SystemVerilog,retro-MiSTer_Gameboy,154,0,2022-08-11 11:00:17+00:00,[],
5307,https://github.com/TwistsOfFate/longson.git,2020-07-14 15:16:46+00:00,,0,TwistsOfFate/longson,279620550,SystemVerilog,longson,31,0,2020-08-24 09:27:02+00:00,[],
5308,https://github.com/konstantinosskoutelis/Cellular-Automata-Map-Evacuation.git,2020-08-03 07:47:33+00:00,,0,konstantinosskoutelis/Cellular-Automata-Map-Evacuation,284636829,SystemVerilog,Cellular-Automata-Map-Evacuation,258,0,2022-11-19 14:13:56+00:00,[],
5309,https://github.com/JelenaVujakovic/Functional_verification.git,2020-08-04 07:38:57+00:00,UVM methodology,0,JelenaVujakovic/Functional_verification,284911114,SystemVerilog,Functional_verification,9652,0,2020-11-20 15:13:55+00:00,[],
5310,https://github.com/Nemiland/CAN-Controller.git,2020-08-03 15:09:30+00:00,,1,Nemiland/CAN-Controller,284732259,SystemVerilog,CAN-Controller,2545,0,2020-08-03 15:14:33+00:00,[],
5311,https://github.com/AustinRye/Ethernet-Switch.git,2020-08-16 00:44:18+00:00,,0,AustinRye/Ethernet-Switch,287848358,SystemVerilog,Ethernet-Switch,16,0,2021-01-02 19:22:49+00:00,[],
5312,https://github.com/akira-nishiyama/simple_urat_uvm.git,2020-08-14 06:38:14+00:00,Simple uart verification ip. Main target is vivado simulator.,0,akira-nishiyama/simple_urat_uvm,287462432,SystemVerilog,simple_urat_uvm,25,0,2020-10-18 20:34:37+00:00,[],https://api.github.com/licenses/mit
5313,https://github.com/fong5855/RISCV.git,2020-08-19 13:15:11+00:00,,0,fong5855/RISCV,288736300,SystemVerilog,RISCV,145,0,2020-08-19 13:15:50+00:00,[],
5314,https://github.com/ChristianKouris/sample-processor.git,2020-09-08 21:45:12+00:00,A simple processor written in SystemVerilog,0,ChristianKouris/sample-processor,293934484,SystemVerilog,sample-processor,38,0,2021-03-30 06:09:24+00:00,[],
5315,https://github.com/rolfesl/SingleCycleArmv4ISA.git,2020-09-11 02:18:43+00:00,,0,rolfesl/SingleCycleArmv4ISA,294571694,SystemVerilog,SingleCycleArmv4ISA,323,0,2023-01-28 12:53:12+00:00,[],
5316,https://github.com/mtahna/hdl_sync_fifo.git,2020-07-23 10:07:58+00:00,,0,mtahna/hdl_sync_fifo,281917167,SystemVerilog,hdl_sync_fifo,553,0,2020-07-23 10:11:14+00:00,[],
5317,https://github.com/newshah/NITISA.git,2020-08-11 19:13:51+00:00,,0,newshah/NITISA,286828143,SystemVerilog,NITISA,16,0,2020-08-12 14:11:56+00:00,[],
5318,https://github.com/yg2m19/SOC_design_cycle_computer.git,2020-07-10 14:51:33+00:00,SoC design process version of bicycle computer,0,yg2m19/SOC_design_cycle_computer,278660103,SystemVerilog,SOC_design_cycle_computer,278,0,2020-07-10 15:08:07+00:00,[],
5319,https://github.com/RaviDaGuy/LTC2325.git,2020-08-09 15:51:11+00:00,Code to communicate with LTC2325 ADC.,0,RaviDaGuy/LTC2325,286267846,SystemVerilog,LTC2325,1426,0,2020-08-09 16:28:42+00:00,[],
5320,https://github.com/bindushankarareddy/Calculator-Functional-Verification.git,2020-08-06 04:51:41+00:00,,0,bindushankarareddy/Calculator-Functional-Verification,285476614,SystemVerilog,Calculator-Functional-Verification,11,0,2020-08-06 04:58:35+00:00,[],
5321,https://github.com/jonguyen-ucsd/141.git,2020-08-08 18:49:40+00:00,For 141 labs,0,jonguyen-ucsd/141,286101301,SystemVerilog,141,9859,0,2021-04-28 18:32:53+00:00,[],
5322,https://github.com/rvkrysh/verilator-basic.git,2020-08-10 05:05:24+00:00,Basic verilator sim,0,rvkrysh/verilator-basic,286380818,SystemVerilog,verilator-basic,4,0,2020-08-10 05:19:12+00:00,[],
5323,https://github.com/ahnazeri/Pipelined-MIPS.git,2020-10-13 10:21:41+00:00,,0,ahnazeri/Pipelined-MIPS,303665345,SystemVerilog,Pipelined-MIPS,54,0,2020-10-13 10:39:39+00:00,[],
5324,https://github.com/Stinger1000/FPGA_CORE.git,2020-09-16 10:17:56+00:00,,0,Stinger1000/FPGA_CORE,295997692,SystemVerilog,FPGA_CORE,5,0,2020-09-16 10:31:43+00:00,[],
5325,https://github.com/y0sshi/RISC-V.git,2020-09-22 06:57:04+00:00,,0,y0sshi/RISC-V,297562670,SystemVerilog,RISC-V,435,0,2022-08-20 08:55:54+00:00,[],
5326,https://github.com/ciomagandreidaniel/Verification-of-APBtoBurst.git,2020-08-29 20:47:42+00:00,This is a verification environment for the APBtoBurst module.,0,ciomagandreidaniel/Verification-of-APBtoBurst,291346733,SystemVerilog,Verification-of-APBtoBurst,5918,0,2021-12-10 23:50:12+00:00,[],
5327,https://github.com/bansil-vaghasiya/UVM_Constrained_Random_Verification_of_ALU.git,2020-09-21 02:00:14+00:00,UVM constrained random verification of the ALU unit ,0,bansil-vaghasiya/UVM_Constrained_Random_Verification_of_ALU,297203055,SystemVerilog,UVM_Constrained_Random_Verification_of_ALU,360,0,2020-09-21 02:03:00+00:00,[],
5328,https://github.com/bansil-vaghasiya/UVM_scoreboard_Sending_Receiving_Messages.git,2020-09-21 01:50:52+00:00,UVM Scoreboard class to send and receive 20 message.,0,bansil-vaghasiya/UVM_scoreboard_Sending_Receiving_Messages,297201447,SystemVerilog,UVM_scoreboard_Sending_Receiving_Messages,342,0,2020-09-21 01:54:10+00:00,[],
5329,https://github.com/dschaefer/fpga-template.git,2020-09-20 05:00:24+00:00,Project template for FPGA dev,0,dschaefer/fpga-template,297005307,SystemVerilog,fpga-template,24,0,2021-11-14 19:32:33+00:00,[],
5330,https://github.com/abuzaid268/MultithreadedRISCV.git,2020-09-12 10:25:51+00:00,Design of Coarse Grained Multithreaded RISCV Processor,0,abuzaid268/MultithreadedRISCV,294920657,SystemVerilog,MultithreadedRISCV,1809,0,2020-09-12 10:48:41+00:00,[],
5331,https://github.com/danielgaio/fibnacci_exercise.git,2020-10-09 20:26:14+00:00,,0,danielgaio/fibnacci_exercise,302746308,SystemVerilog,fibnacci_exercise,9407,0,2020-11-02 22:52:34+00:00,[],
5332,https://github.com/freddyD77/Sony-PS3-Cell-CPU-Lite.git,2020-09-30 19:50:20+00:00,,0,freddyD77/Sony-PS3-Cell-CPU-Lite,300043823,SystemVerilog,Sony-PS3-Cell-CPU-Lite,1221,0,2020-09-30 19:54:17+00:00,[],
5333,https://github.com/TMuthuganesan/SV_Randomization.git,2020-10-21 08:40:07+00:00,This repository has short code snippets & examples related to systemverilog randomization and constraints.,0,TMuthuganesan/SV_Randomization,305960909,SystemVerilog,SV_Randomization,13,0,2020-10-23 09:20:35+00:00,[],
5334,https://github.com/tiffanishilts/ECE585-Project-Memory-Controller-Simulator.git,2020-10-31 18:39:06+00:00,SystemVerilog code to simulate memory controller,0,tiffanishilts/ECE585-Project-Memory-Controller-Simulator,308949160,SystemVerilog,ECE585-Project-Memory-Controller-Simulator,736,0,2023-01-28 01:22:36+00:00,[],https://api.github.com/licenses/gpl-3.0
5335,https://github.com/varoqr08/ProyectoII_ArquiII.git,2020-10-28 21:24:13+00:00,Segundo Proyecto de Arquitectura de Computadores II,0,varoqr08/ProyectoII_ArquiII,308144441,SystemVerilog,ProyectoII_ArquiII,550,0,2020-11-26 03:26:27+00:00,[],
5336,https://github.com/luisk97/FSMCafe.git,2020-10-27 21:25:34+00:00,,0,luisk97/FSMCafe,307831815,SystemVerilog,FSMCafe,148,0,2020-10-29 22:08:09+00:00,[],
5337,https://github.com/terpakf/4dm4lab3.git,2020-11-10 01:38:02+00:00,,0,terpakf/4dm4lab3,311512796,,4dm4lab3,5,0,2020-11-27 23:30:07+00:00,[],
5338,https://github.com/uricata9/lmeuprocessador.git,2020-11-10 07:41:31+00:00,,0,uricata9/lmeuprocessador,311581832,SystemVerilog,lmeuprocessador,110,0,2021-01-20 09:22:33+00:00,[],https://api.github.com/licenses/mit
5339,https://github.com/bansil-vaghasiya/Design-and-verification-of-16-bit-64-KB-memory.git,2020-08-26 23:00:15+00:00,Systemverilog testbench using assertions,0,bansil-vaghasiya/Design-and-verification-of-16-bit-64-KB-memory,290622549,SystemVerilog,Design-and-verification-of-16-bit-64-KB-memory,2,0,2020-09-20 19:47:09+00:00,[],
5340,https://github.com/livebinary/UVM.git,2020-08-23 09:40:18+00:00,UVM Examples,0,livebinary/UVM,289656547,SystemVerilog,UVM,1,0,2020-08-23 09:50:29+00:00,[],
5341,https://github.com/Manoj3050/SystemVerilogPongGame.git,2020-08-23 02:04:02+00:00,System verilog based Pong game for demonstrating system verilog for syntheiszable design,0,Manoj3050/SystemVerilogPongGame,289598797,SystemVerilog,SystemVerilogPongGame,4,0,2020-08-23 02:09:29+00:00,[],
5342,https://github.com/rolfesl/PipelinedArmv4ISA.git,2020-09-11 02:31:18+00:00,,0,rolfesl/PipelinedArmv4ISA,294574115,SystemVerilog,PipelinedArmv4ISA,332,0,2023-01-28 12:53:12+00:00,[],
5343,https://github.com/danielgaio/sigmoid.git,2020-07-09 16:40:22+00:00,Implementação de um bloco sigmoide em verilog,1,danielgaio/sigmoid,278418526,SystemVerilog,sigmoid,45116,0,2021-08-30 11:11:24+00:00,[],
5344,https://github.com/izzul210/flash_memory_reader.git,2020-07-26 01:24:02+00:00,Created a system that reads sound samples from an off-chip flash memory and store them to the on-chip memory with a state machine.     The samples are transferred to the audio core as an output by designing audio CODEC. ,1,izzul210/flash_memory_reader,282553591,SystemVerilog,flash_memory_reader,20,0,2020-07-26 01:38:45+00:00,[],
5345,https://github.com/PulseRain/Hardware_Bootloader.git,2020-07-26 02:49:43+00:00,Hardware Based Bootloader for MCU,0,PulseRain/Hardware_Bootloader,282563262,SystemVerilog,Hardware_Bootloader,613,0,2020-07-31 09:26:03+00:00,[],
5346,https://github.com/cdeitner/FPGA_Tetris.git,2020-09-18 02:07:45+00:00,,0,cdeitner/FPGA_Tetris,296489036,SystemVerilog,FPGA_Tetris,38,0,2020-09-18 02:35:03+00:00,[],
5347,https://github.com/chrisspear/uvm_xact.git,2020-10-02 12:21:49+00:00,UVM transaction examples,1,chrisspear/uvm_xact,300605907,SystemVerilog,uvm_xact,15,0,2020-10-26 15:44:35+00:00,[],https://api.github.com/licenses/apache-2.0
5348,https://github.com/leoli101/64-bit-pipelined-ARM-CPU.git,2020-10-08 00:21:13+00:00,,0,leoli101/64-bit-pipelined-ARM-CPU,302192119,SystemVerilog,64-bit-pipelined-ARM-CPU,2924,0,2020-10-08 00:24:01+00:00,[],
5349,https://github.com/anuragktl/rtl_modules.git,2020-10-14 00:25:57+00:00,,0,anuragktl/rtl_modules,303860289,SystemVerilog,rtl_modules,2,0,2020-10-14 00:28:08+00:00,[],
5350,https://github.com/IssaBeastBoy/Hardware-Logic-and-Analysis.git,2020-10-12 06:50:41+00:00,Programming BASYS 3 board using vhdl,0,IssaBeastBoy/Hardware-Logic-and-Analysis,303302964,SystemVerilog,Hardware-Logic-and-Analysis,10280,0,2020-10-12 06:54:50+00:00,[],
5351,https://github.com/IIIPlutoIII/VerilogBasicModule.git,2020-09-26 08:55:06+00:00,basic modules with testbench code,0,IIIPlutoIII/VerilogBasicModule,298775063,SystemVerilog,VerilogBasicModule,338,0,2020-09-26 09:01:47+00:00,[],
5352,https://github.com/stdezieg/HDL-snippets.git,2020-08-17 20:51:52+00:00,,0,stdezieg/HDL-snippets,288283853,SystemVerilog,HDL-snippets,17,0,2020-08-17 21:15:25+00:00,[],
5353,https://github.com/ezchi/uvm_sv.git,2020-08-31 06:34:40+00:00,UVM SystemVerlog source code,1,ezchi/uvm_sv,291634669,SystemVerilog,uvm_sv,698,0,2020-08-31 06:38:16+00:00,[],https://api.github.com/licenses/apache-2.0
5354,https://github.com/Azhangy38/2048-ECE385.git,2020-09-10 05:05:34+00:00,"2048, playable on VGA monitor with the use of a FPGA.",0,Azhangy38/2048-ECE385,294308453,SystemVerilog,2048-ECE385,30,0,2021-01-22 05:54:55+00:00,[],
5355,https://github.com/Rookie-cprime/Systemverilog.git,2020-10-05 12:38:37+00:00,,0,Rookie-cprime/Systemverilog,301404158,SystemVerilog,Systemverilog,123,0,2020-10-11 08:56:51+00:00,[],
5356,https://github.com/chroco/ece508hw1.git,2020-10-11 16:28:16+00:00,,0,chroco/ece508hw1,303163855,SystemVerilog,ece508hw1,6,0,2020-10-14 01:00:19+00:00,[],
5357,https://github.com/sina-nabavi/CAL-ARM.git,2020-10-27 10:13:44+00:00,,0,sina-nabavi/CAL-ARM,307659556,SystemVerilog,CAL-ARM,15,0,2020-12-09 21:16:00+00:00,[],
5358,https://github.com/charkster/SCARF.git,2020-07-04 02:07:51+00:00,SCARF - “Scarf Connects A Raspberry pi to Fpga”,0,charkster/SCARF,277021475,SystemVerilog,SCARF,902,0,2022-04-08 00:14:07+00:00,"['scarf', 'fpga-designs', 'fpga', 'raspberry-pi', 'spi-slave']",https://api.github.com/licenses/mit
5359,https://github.com/toniklippeo/andenV.git,2020-07-06 20:17:54+00:00,,0,toniklippeo/andenV,277640123,SystemVerilog,andenV,2,0,2020-07-07 08:50:00+00:00,[],
5360,https://github.com/soumitr476/VerilogStopwatch.git,2020-08-08 11:38:32+00:00,,0,soumitr476/VerilogStopwatch,286031708,SystemVerilog,VerilogStopwatch,4,0,2020-08-08 11:41:38+00:00,[],
5361,https://github.com/tianxiaohuahua/homework.git,2020-07-11 23:45:41+00:00,a test,0,tianxiaohuahua/homework,278959747,SystemVerilog,homework,1016,0,2020-07-15 03:02:55+00:00,[],
5362,https://github.com/j-koczwara/countingsystem.git,2020-10-24 22:20:52+00:00,,0,j-koczwara/countingsystem,306981546,SystemVerilog,countingsystem,6,0,2020-11-04 10:45:31+00:00,[],
5363,https://github.com/tdell-dev/simon_cipher.git,2020-08-02 01:51:53+00:00,,0,tdell-dev/simon_cipher,284371333,SystemVerilog,simon_cipher,99,0,2023-11-28 22:22:36+00:00,[],
5364,https://github.com/Panda-Cores/gpio_module.git,2020-08-09 11:06:37+00:00,,0,Panda-Cores/gpio_module,286220211,SystemVerilog,gpio_module,2,0,2020-08-09 12:45:50+00:00,[],
5365,https://github.com/esophagus-now/str_to_num_verilog.git,2020-09-03 04:53:46+00:00,A little demo for an upcoming paper,0,esophagus-now/str_to_num_verilog,292470159,SystemVerilog,str_to_num_verilog,9,0,2020-09-09 22:35:07+00:00,[],
5366,https://github.com/Gin594/CSE-141L.git,2020-09-07 01:37:22+00:00,,0,Gin594/CSE-141L,293394307,SystemVerilog,CSE-141L,378,0,2020-09-22 01:33:02+00:00,[],
5367,https://github.com/abbyjoseph/Lab11.git,2020-11-05 16:59:20+00:00,,0,abbyjoseph/Lab11,310364535,SystemVerilog,Lab11,162,0,2020-11-19 19:32:42+00:00,[],
5368,https://github.com/melt-umn/caml-light.git,2020-10-08 16:44:21+00:00,,1,melt-umn/caml-light,302404019,SystemVerilog,caml-light,59,0,2022-06-11 16:12:24+00:00,[],
5369,https://github.com/roscibely/SAP1-computer.git,2020-08-21 22:12:10+00:00,Model of a microprocessor,0,roscibely/SAP1-computer,289374725,SystemVerilog,SAP1-computer,7,0,2020-08-22 21:32:05+00:00,[],
5370,https://github.com/OmarNaffaa/ECE4305_Lab4.git,2020-09-21 19:09:50+00:00,,0,OmarNaffaa/ECE4305_Lab4,297436455,SystemVerilog,ECE4305_Lab4,10,0,2020-09-21 19:11:40+00:00,[],
5371,https://github.com/cetola/a-el-you-tbx.git,2020-10-25 16:33:01+00:00,Another simple alu. This time using TBX.,0,cetola/a-el-you-tbx,307142390,SystemVerilog,a-el-you-tbx,18,0,2020-11-20 22:19:35+00:00,[],https://api.github.com/licenses/gpl-2.0
5372,https://github.com/nmtproject/Near-Memory-Threading.git,2020-10-12 19:32:30+00:00,,0,nmtproject/Near-Memory-Threading,303493793,SystemVerilog,Near-Memory-Threading,102,0,2020-10-13 07:17:54+00:00,[],
5373,https://github.com/chroco/ece508extracredit1.git,2020-10-09 00:13:57+00:00,,0,chroco/ece508extracredit1,302490606,SystemVerilog,ece508extracredit1,2,0,2020-10-09 00:30:28+00:00,[],
5374,https://github.com/hawkejo/vga_controller.git,2020-07-11 14:11:19+00:00,,0,hawkejo/vga_controller,278874672,SystemVerilog,vga_controller,1555,0,2021-09-23 16:16:58+00:00,[],https://api.github.com/licenses/mpl-2.0
5375,https://github.com/syamhaque/Junior-Year-Work.git,2020-07-28 05:23:29+00:00,Notable projects done during my Junior year of undergraduate at UCI,0,syamhaque/Junior-Year-Work,283108545,SystemVerilog,Junior-Year-Work,15319,0,2020-08-05 05:47:48+00:00,[],
5376,https://github.com/JaviCeRodriguez/TPFinal_D1.git,2020-07-31 22:50:27+00:00,Trabajo Práctico Final para Electrónica Digital 1. Universidad Nacional de San Martín,0,JaviCeRodriguez/TPFinal_D1,284143761,SystemVerilog,TPFinal_D1,20777,0,2020-11-10 23:33:48+00:00,[],
5377,https://github.com/hamidsalemi77/CA_CA_4.git,2020-08-01 05:14:44+00:00,,0,hamidsalemi77/CA_CA_4,284192067,SystemVerilog,CA_CA_4,381,0,2023-09-15 17:59:38+00:00,[],
5378,https://github.com/visali85/apb.git,2020-08-03 16:20:58+00:00,,0,visali85/apb,284748958,SystemVerilog,apb,10275,0,2020-08-03 16:32:06+00:00,[],
5379,https://github.com/tsg3/Proyecto1-Arqui1.git,2020-07-09 04:15:39+00:00,,1,tsg3/Proyecto1-Arqui1,278260758,SystemVerilog,Proyecto1-Arqui1,1155,0,2020-07-18 06:05:09+00:00,[],
5380,https://github.com/Dianeswarr/Implementing-Verifying-a-Door-Lock.git,2020-07-06 11:35:57+00:00," Specified, implemented, and verified parts of a classical code-based door lock system. The system uses 4-digit PINs entered sequentially by pressing the buttons of a keypad, unlocks the door for 3 seconds if a correct code is entered, and has functionality to update the stored code using a Master key",0,Dianeswarr/Implementing-Verifying-a-Door-Lock,277524920,SystemVerilog,Implementing-Verifying-a-Door-Lock,2,0,2020-07-06 11:54:43+00:00,[],
5381,https://github.com/VicMartini/SingleCycleProcessor.git,2020-09-23 04:20:17+00:00,,0,VicMartini/SingleCycleProcessor,297850621,SystemVerilog,SingleCycleProcessor,27,0,2020-09-26 23:24:00+00:00,[],
5382,https://github.com/awnind93/UVM_TB_ALU.git,2020-10-01 17:04:29+00:00,,0,awnind93/UVM_TB_ALU,300357548,SystemVerilog,UVM_TB_ALU,4,0,2020-10-01 17:14:51+00:00,[],
5383,https://github.com/PacoReinaCampo/gnumig.git,2020-10-06 03:35:28+00:00,Kernel Interface Generator for RTOS,1,PacoReinaCampo/gnumig,301604843,SystemVerilog,gnumig,10514,0,2023-01-18 16:03:28+00:00,[],https://api.github.com/licenses/mit
5384,https://github.com/isNozo/fpga_cpu.git,2020-09-16 10:44:25+00:00,「上原 周，作ろう！ＣＰＵ 基礎から理解するコンピューターのしくみ，マイナビ出版」を読んでCPUを実装する,1,isNozo/fpga_cpu,296003107,SystemVerilog,fpga_cpu,24,0,2023-07-27 13:05:43+00:00,[],
5385,https://github.com/yyl-2/2020--Xilinx-Summer-School-.git,2020-08-02 09:32:35+00:00, 2020年新工科联盟-Xilinx暑期学校（Summer School）项目,0,yyl-2/2020--Xilinx-Summer-School-,284431170,SystemVerilog,2020--Xilinx-Summer-School-,2175,0,2020-08-06 03:30:03+00:00,[],
5386,https://github.com/scarymen/stop-watch.git,2020-08-11 10:13:22+00:00,,0,scarymen/stop-watch,286711740,SystemVerilog,stop-watch,15,0,2020-08-11 10:14:44+00:00,[],
5387,https://github.com/alinecat/Multicycle-CPU.git,2020-08-22 09:41:43+00:00,,0,alinecat/Multicycle-CPU,289460420,SystemVerilog,Multicycle-CPU,1609,0,2020-08-22 09:50:33+00:00,[],https://api.github.com/licenses/mit
5388,https://github.com/rdaum/simple_tta.git,2020-07-28 19:03:59+00:00,,0,rdaum/simple_tta,283302910,SystemVerilog,simple_tta,25,0,2022-05-15 22:41:11+00:00,[],https://api.github.com/licenses/mit
5389,https://github.com/AloriumTechnology/evo_pmux_csr.git,2020-07-28 16:07:41+00:00,,0,AloriumTechnology/evo_pmux_csr,283263173,SystemVerilog,evo_pmux_csr,16,0,2020-08-26 19:58:21+00:00,[],https://api.github.com/licenses/mit
5390,https://github.com/merledu/atomRVCORE.git,2020-09-21 11:25:43+00:00,This core is based on RV32I  is designed in SystemVerilog it is single cycle core,0,merledu/atomRVCORE,297318158,SystemVerilog,atomRVCORE,432,0,2021-01-12 14:41:12+00:00,[],
5391,https://github.com/octaplexsys/common_hdl_blocks.git,2020-09-21 21:20:42+00:00,,0,octaplexsys/common_hdl_blocks,297463970,,common_hdl_blocks,5,0,2022-04-18 14:34:54+00:00,[],https://api.github.com/licenses/apache-2.0
5392,https://github.com/Robert-M-Hughes/MIPs-Processor.git,2020-09-30 23:21:34+00:00,This is a working MIPs Processor written in SystemVerilog that includes a cache.,0,Robert-M-Hughes/MIPs-Processor,300087164,SystemVerilog,MIPs-Processor,380,0,2020-09-30 23:31:25+00:00,[],
5393,https://github.com/Keerthivasan005/Digital-Stopwatch.git,2020-08-05 19:57:57+00:00,Stopwatch implemented on FPGA Board using Verilog programming,0,Keerthivasan005/Digital-Stopwatch,285391148,SystemVerilog,Digital-Stopwatch,96,0,2020-08-25 19:04:56+00:00,[],
5394,https://github.com/Racso08/Decodification_ARM.git,2020-07-27 03:59:34+00:00,"Este proyecto final deberá solucionar el siguiente problema, utilizando un procesador ARMv4, con programación propia de cada grupo. El sistema deberá contar con una memoria ROM en la que se precargar´an hasta 3 mensajes diferentes (uno a la vez). Los mensajes están codificados siguiendo los algoritmos que se describen más adelante. La funci´on del procesador ser´a, al presionar un botón de inicio (en simulaci´on), leer caracter a caracter la memoria, identificar el tipo de algoritmo utilizado para encodificar y realizar el proceso de decodificación, hasta detectar el fin del mensaje, denotado por un carácter 0xFF. Cada carácter decodificado deber´a ser escrito de vuelta en una memoria RAM. A finalizar el proceso de lectura de mensaje, identificación y decodificación, la simulaci´on deber´a escribir el mensaje decodificado en un archivo de texto, mismo que servir´a como m´etodo de validación del funcionamiento del sistema.",0,Racso08/Decodification_ARM,282789769,SystemVerilog,Decodification_ARM,6696,0,2021-06-09 21:53:40+00:00,[],
5395,https://github.com/ZChesterzz/yaoyaole.git,2020-07-26 14:33:19+00:00,,0,ZChesterzz/yaoyaole,282667652,SystemVerilog,yaoyaole,133,0,2020-08-04 11:47:20+00:00,[],
5396,https://github.com/acordobav/ARMv4-MessageDecoder.git,2020-07-10 00:12:16+00:00,Proyecto Final - Taller de Diseño Digital,0,acordobav/ARMv4-MessageDecoder,278497963,SystemVerilog,ARMv4-MessageDecoder,63,0,2021-05-18 05:42:37+00:00,[],
5397,https://github.com/tkrasnoperov/autocorrelaion_autotune_hardware.git,2020-07-16 22:43:22+00:00,,0,tkrasnoperov/autocorrelaion_autotune_hardware,280273791,SystemVerilog,autocorrelaion_autotune_hardware,16154,0,2020-07-28 07:49:20+00:00,[],
5398,https://github.com/SillyRango/FPGA-ESP32-AWS-loT.git,2020-07-27 08:35:30+00:00,,0,SillyRango/FPGA-ESP32-AWS-loT,282839949,SystemVerilog,FPGA-ESP32-AWS-loT,1090,0,2020-08-02 07:29:32+00:00,[],
5399,https://github.com/andrire/RNNASIP-riscvcore.git,2020-10-21 17:41:44+00:00,,1,andrire/RNNASIP-riscvcore,306102663,SystemVerilog,RNNASIP-riscvcore,2562,0,2020-10-21 20:10:11+00:00,[],
5400,https://github.com/regerj/ECE-272-Group-Project.git,2020-09-24 23:19:52+00:00,Digital Logic Design Final II,0,regerj/ECE-272-Group-Project,298417116,SystemVerilog,ECE-272-Group-Project,5570,0,2020-09-24 23:20:04+00:00,[],
5401,https://github.com/RadwanAtme/multi32x32--UniverstiryHomework.git,2020-10-15 11:03:12+00:00,,0,RadwanAtme/multi32x32--UniverstiryHomework,304298418,SystemVerilog,multi32x32--UniverstiryHomework,859,0,2020-10-15 11:22:30+00:00,[],
5402,https://github.com/brunoflores/hdl-counter.git,2020-10-25 12:31:41+00:00,Simple counter to play with the clocks and I/O of the Cmod A7-35T.,0,brunoflores/hdl-counter,307094570,SystemVerilog,hdl-counter,70,0,2020-10-27 14:13:09+00:00,[],https://api.github.com/licenses/apache-2.0
5403,https://github.com/mspaur/veripool.git,2020-10-26 05:06:34+00:00,For Verilog Automatics,0,mspaur/veripool,307266708,SystemVerilog,veripool,1280,0,2020-10-26 05:09:55+00:00,[],https://api.github.com/licenses/gpl-3.0
5404,https://github.com/storfang/VDIC.git,2020-10-12 13:56:00+00:00,Verification of digital integrated circuits,0,storfang/VDIC,303408534,SystemVerilog,VDIC,1483,0,2020-10-26 18:34:01+00:00,[],
5405,https://github.com/AaronSolera/ASIVP.git,2020-10-29 17:08:23+00:00,,0,AaronSolera/ASIVP,308397006,SystemVerilog,ASIVP,3006,0,2020-11-26 01:56:37+00:00,[],
5406,https://github.com/rureverek/M4.git,2020-11-06 20:01:06+00:00,N bit multiplier in System Verilog,0,rureverek/M4,310694177,SystemVerilog,M4,12,0,2024-02-21 00:07:53+00:00,[],
5407,https://github.com/mtahna/hdl_apb3axi4l.git,2020-07-23 10:15:05+00:00,,0,mtahna/hdl_apb3axi4l,281918683,SystemVerilog,hdl_apb3axi4l,75,0,2020-07-23 10:19:26+00:00,[],
5408,https://github.com/rooty19/sdram_test.git,2020-07-25 11:07:54+00:00,"A simple controller for SDRAM on DE2-115 (clk=50MHz), No bank changing or burst transfer mode",0,rooty19/sdram_test,282427170,SystemVerilog,sdram_test,264,0,2020-07-25 11:20:16+00:00,[],
5409,https://github.com/Besttryer/Sequence-detector-based-on-FPGA.git,2020-08-01 01:22:14+00:00,Sequence detector based on FPGA,0,Besttryer/Sequence-detector-based-on-FPGA,284162056,SystemVerilog,Sequence-detector-based-on-FPGA,2411,0,2020-08-01 02:45:25+00:00,[],
5410,https://github.com/taylor-bsg/dragonphy2.git,2020-08-15 16:31:54+00:00,Temporary copy of DragonPHY,3,taylor-bsg/dragonphy2,287784362,,dragonphy2,6382,0,2021-10-29 00:17:45+00:00,[],https://api.github.com/licenses/apache-2.0
5411,https://github.com/theSergeyGusev/sha256.git,2020-08-06 07:54:22+00:00,,0,theSergeyGusev/sha256,285509176,SystemVerilog,sha256,7,0,2020-08-21 09:54:57+00:00,[],https://api.github.com/licenses/mit
5412,https://github.com/Cra2yPierr0t/ENC28J60.git,2020-08-04 23:23:23+00:00,ENC28J60 FPGAドライバ,0,Cra2yPierr0t/ENC28J60,285123853,SystemVerilog,ENC28J60,8,0,2020-08-07 05:41:01+00:00,[],
5414,https://github.com/bansil-vaghasiya/UVM_Verification_of_Averaging_unit.git,2020-09-21 01:55:12+00:00,UVM Verification environment to test the Averaging unit. ,0,bansil-vaghasiya/UVM_Verification_of_Averaging_unit,297202243,SystemVerilog,UVM_Verification_of_Averaging_unit,362,0,2020-09-21 01:59:27+00:00,[],
5415,https://github.com/Lmbal/versuch1.git,2020-08-27 10:52:19+00:00,,0,Lmbal/versuch1,290750675,SystemVerilog,versuch1,5,0,2020-08-27 12:06:06+00:00,[],
5416,https://github.com/NoIdeaForNick/syntacore.git,2020-08-26 17:29:03+00:00,,0,NoIdeaForNick/syntacore,290561892,SystemVerilog,syntacore,367,0,2020-09-10 08:00:37+00:00,[],
5417,https://github.com/preetam-D/SPI-verification.git,2020-08-30 19:22:41+00:00,,0,preetam-D/SPI-verification,291536868,SystemVerilog,SPI-verification,36,0,2020-09-02 19:11:17+00:00,[],
5418,https://github.com/lq3141/uvm_edaplayground.git,2020-09-27 01:26:30+00:00,copy from edaplayground as a study reference,0,lq3141/uvm_edaplayground,298929109,SystemVerilog,uvm_edaplayground,6,0,2020-09-27 08:18:32+00:00,[],
5419,https://github.com/MartinMeng008/mipscpu.git,2020-08-22 20:55:44+00:00,,0,MartinMeng008/mipscpu,289565598,SystemVerilog,mipscpu,43,0,2020-09-14 01:18:15+00:00,[],
5421,https://github.com/gishmaya/my-first-verification-environment.git,2020-07-14 22:24:01+00:00,,0,gishmaya/my-first-verification-environment,279705489,SystemVerilog,my-first-verification-environment,14,0,2020-07-15 10:00:34+00:00,[],
5422,https://github.com/roscibely/arithmetic-logic-unit.git,2020-08-21 18:40:08+00:00,A simple arithmetic logic unit (ALU) with System verilog ,0,roscibely/arithmetic-logic-unit,289340760,SystemVerilog,arithmetic-logic-unit,86,0,2020-08-26 20:44:56+00:00,"['alu', 'arithmetic', 'verilog', 'vhdl']",
5423,https://github.com/ceyinskye/UVM_CRC_Test.git,2020-07-16 03:12:21+00:00,,0,ceyinskye/UVM_CRC_Test,280040284,SystemVerilog,UVM_CRC_Test,4,0,2020-07-16 03:13:07+00:00,[],
5424,https://github.com/e60369/Verilog_MCU.git,2020-07-11 01:43:08+00:00,,0,e60369/Verilog_MCU,278767213,SystemVerilog,Verilog_MCU,3,0,2020-07-11 13:58:57+00:00,[],
5425,https://github.com/irwinfrimpong/FPGA-Stopwatch.git,2020-07-19 14:23:08+00:00,Designed and implemented a stopwatch that will display the elapsed time on a set of seven-segment displays on a Nexys4 FPGA board using System Verilog in Xilinx Vivado,0,irwinfrimpong/FPGA-Stopwatch,280881545,SystemVerilog,FPGA-Stopwatch,6,0,2020-07-19 14:23:16+00:00,[],
5426,https://github.com/PreranaB-dev/axi.git,2020-07-13 11:26:59+00:00,Implementation of AXI protocol,1,PreranaB-dev/axi,279283388,SystemVerilog,axi,477,0,2020-07-29 13:16:06+00:00,[],
5427,https://github.com/jparth1593/System_Verilog.git,2020-10-05 14:33:31+00:00,SV code practice,0,jparth1593/System_Verilog,301437977,SystemVerilog,System_Verilog,3,0,2020-10-05 14:47:59+00:00,[],
5428,https://github.com/kacperoooni/VDIC.git,2020-10-20 14:45:02+00:00,VDIC2020 AGH,0,kacperoooni/VDIC,305739836,SystemVerilog,VDIC,32575,0,2022-10-09 09:49:48+00:00,[],
5429,https://github.com/gracenw/arch_and_sys.git,2020-11-08 02:43:08+00:00,"labs, fall 2020",0,gracenw/arch_and_sys,310972131,SystemVerilog,arch_and_sys,6851,0,2023-10-17 14:26:45+00:00,[],
5430,https://github.com/zzhang681/hw_perm.git,2020-10-29 20:25:27+00:00,111,0,zzhang681/hw_perm,308441556,SystemVerilog,hw_perm,72,0,2020-11-02 06:04:36+00:00,[],
5431,https://github.com/llfl/valid_ready_abc.git,2020-11-09 09:34:14+00:00,,0,llfl/valid_ready_abc,311288134,SystemVerilog,valid_ready_abc,5,0,2020-12-24 11:17:29+00:00,[],
5432,https://github.com/sebinsphilip/riscv_nvp.git,2020-10-25 10:25:51+00:00,Non volatile processor experimentation's on RISCV,0,sebinsphilip/riscv_nvp,307073638,SystemVerilog,riscv_nvp,1123,0,2020-10-26 16:09:52+00:00,[],
5433,https://github.com/jc-del/aleatorios.git,2020-10-23 19:52:36+00:00,,0,jc-del/aleatorios,306733795,SystemVerilog,aleatorios,4,0,2020-10-23 19:57:46+00:00,"['hacktoberfest', 'hacktoberfest2020']",
5434,https://github.com/OriSteinberg/Cache_Level_Zero.git,2020-10-25 12:53:38+00:00,"A new level of Cache in low order which offers a possible solution for the memory bottleneck. It includes theories, implementation, and results.",0,OriSteinberg/Cache_Level_Zero,307098567,SystemVerilog,Cache_Level_Zero,3701,0,2020-11-04 11:34:51+00:00,[],
5435,https://github.com/risapav/hdmi_3.git,2020-10-30 15:31:31+00:00,AC608 FPGA HDMI project,0,risapav/hdmi_3,308671222,SystemVerilog,hdmi_3,15559,0,2020-11-08 18:15:55+00:00,[],https://api.github.com/licenses/mit
5436,https://github.com/RKishmar/stu.git,2020-10-30 12:24:12+00:00,,0,RKishmar/stu,308623234,SystemVerilog,stu,21,0,2020-11-30 19:55:56+00:00,[],
5437,https://github.com/kagg123/Character-Sudoku.git,2020-11-11 11:19:02+00:00,,0,kagg123/Character-Sudoku,311948311,SystemVerilog,Character-Sudoku,478,0,2020-11-11 11:38:35+00:00,[],
5438,https://github.com/PacoReinaCampo/gnuhurd.git,2020-10-06 11:44:33+00:00,Operating System for RTOS,1,PacoReinaCampo/gnuhurd,301708027,SystemVerilog,gnuhurd,27575,0,2023-02-02 16:46:29+00:00,[],https://api.github.com/licenses/mit
5439,https://github.com/k0pterr/-fpga-lib.git,2020-08-12 07:16:10+00:00,,0,k0pterr/-fpga-lib,286944394,SystemVerilog,-fpga-lib,62,0,2020-08-12 07:16:29+00:00,[],
5440,https://github.com/melt-umn/melt-artifacts.git,2020-09-13 16:03:48+00:00,Files and scripts for building software artifacts,1,melt-umn/melt-artifacts,295186855,SystemVerilog,melt-artifacts,1864,0,2023-09-20 22:04:26+00:00,[],
5441,https://github.com/qqwilliamliqq/Self_Design_Processor_and_Compiler.git,2020-09-13 22:34:07+00:00,,0,qqwilliamliqq/Self_Design_Processor_and_Compiler,295249509,SystemVerilog,Self_Design_Processor_and_Compiler,28,0,2020-09-13 22:47:38+00:00,[],
5442,https://github.com/simottei/test.git,2020-09-05 20:41:22+00:00,,0,simottei/test,293151077,SystemVerilog,test,6,0,2020-09-09 20:49:25+00:00,[],
5443,https://github.com/shantonudas/Verilog-Codes.git,2020-09-23 01:22:02+00:00,,0,shantonudas/Verilog-Codes,297816695,SystemVerilog,Verilog-Codes,9,0,2020-10-04 08:54:31+00:00,[],
5444,https://github.com/recogni/axi2apb.git,2020-09-29 14:56:33+00:00,pulp based axi2apb adapter,0,recogni/axi2apb,299650488,SystemVerilog,axi2apb,11,0,2021-01-12 20:46:13+00:00,[],
5445,https://github.com/chroco/ece508hw2.git,2020-10-14 22:45:03+00:00,,0,chroco/ece508hw2,304152842,SystemVerilog,ece508hw2,9,0,2020-10-21 16:39:17+00:00,[],
5446,https://github.com/VSHEV92/Simple_Error_Correction_Channel.git,2020-08-21 16:16:57+00:00,Простой канал с блочным помехоустойчивым кодированием и перемежением,0,VSHEV92/Simple_Error_Correction_Channel,289313322,SystemVerilog,Simple_Error_Correction_Channel,214,0,2020-08-31 16:55:50+00:00,[],
5447,https://github.com/keyonhome/MCDT_Verification.git,2020-08-28 10:35:00+00:00,,0,keyonhome/MCDT_Verification,291019594,SystemVerilog,MCDT_Verification,15,0,2020-08-28 10:46:08+00:00,[],
5448,https://github.com/filipksiezyc/uec2_projekt.git,2020-08-16 18:33:28+00:00,PROJEKT TETRIS,1,filipksiezyc/uec2_projekt,288002524,SystemVerilog,uec2_projekt,79748,0,2020-09-19 16:53:10+00:00,[],
5449,https://github.com/merledu/diamond-core-sv.git,2020-09-21 09:12:40+00:00,,0,merledu/diamond-core-sv,297287592,SystemVerilog,diamond-core-sv,97,0,2020-11-21 09:54:51+00:00,[],
5450,https://github.com/Magicwrath/FuncVer.git,2020-09-18 15:07:05+00:00,System Verilog codes for CHT module verification,0,Magicwrath/FuncVer,296654734,SystemVerilog,FuncVer,40,0,2020-10-13 19:28:27+00:00,[],
5451,https://github.com/HarryPretel/EBike_Controller.git,2020-09-21 21:06:19+00:00,,0,HarryPretel/EBike_Controller,297461288,SystemVerilog,EBike_Controller,1972,0,2020-10-21 06:56:16+00:00,[],
5452,https://github.com/cetola/quattro-ibex.git,2020-10-24 16:03:41+00:00,Emulating the Ibex core on a Veloce Quattro ,2,cetola/quattro-ibex,306920020,SystemVerilog,quattro-ibex,331,0,2020-12-10 05:51:27+00:00,[],https://api.github.com/licenses/apache-2.0
5453,https://github.com/kyeb/overcooked-fpga.git,2020-11-09 06:02:29+00:00,Overcooked: Food-programmable Gate Array,0,kyeb/overcooked-fpga,311238970,SystemVerilog,overcooked-fpga,302,0,2020-12-08 22:59:04+00:00,[],
5454,https://github.com/miyo/ppla.git,2020-11-03 12:45:59+00:00,,0,miyo/ppla,309683998,SystemVerilog,ppla,428,0,2020-11-22 10:22:40+00:00,[],
5455,https://github.com/Heppokoyuki/simple-rv32.git,2020-11-01 11:14:29+00:00,,0,Heppokoyuki/simple-rv32,309078547,SystemVerilog,simple-rv32,3,0,2020-11-01 11:15:06+00:00,[],
5456,https://github.com/pramodinicvc/testgit.git,2020-10-27 09:08:14+00:00,This is a test,0,pramodinicvc/testgit,307642882,SystemVerilog,testgit,1,0,2021-02-17 12:22:16+00:00,[],
5457,https://github.com/cougarEngineer/fpgaVGATest.git,2020-10-27 11:49:09+00:00,"Using a Basys-3 board and Xilinx Vivado, created a dynamic test pattern for use on VGA screens. See https://youtu.be/awykPxzEj1g",0,cougarEngineer/fpgaVGATest,307682771,SystemVerilog,fpgaVGATest,93,0,2020-10-27 11:50:29+00:00,[],
5458,https://github.com/PaschalisAngaridis/Simon_Says_Game.git,2020-10-19 12:39:49+00:00,,0,PaschalisAngaridis/Simon_Says_Game,305379529,SystemVerilog,Simon_Says_Game,6,0,2020-10-19 14:38:10+00:00,[],
5459,https://github.com/sqaureshape/uvm.git,2020-10-19 07:30:53+00:00,UVM trails ,0,sqaureshape/uvm,305299330,SystemVerilog,uvm,50,0,2020-10-29 12:46:22+00:00,[],
5460,https://github.com/PRBO-BR/processador-arm.git,2020-10-24 20:11:06+00:00,Desenvolvimento de um modelo de processador arm single cycle,0,PRBO-BR/processador-arm,306963284,SystemVerilog,processador-arm,1889,0,2020-10-29 12:06:22+00:00,[],
5461,https://github.com/Robert-M-Hughes/Digital-Design.git,2020-10-06 17:27:31+00:00,This contains the Digital Design Projects completed at UOP,0,Robert-M-Hughes/Digital-Design,301804156,SystemVerilog,Digital-Design,2866,0,2020-10-06 17:38:55+00:00,[],
5462,https://github.com/PaschalisAngaridis/Transfer_Data_From_Keyboard.git,2020-10-18 12:35:16+00:00,,0,PaschalisAngaridis/Transfer_Data_From_Keyboard,305097802,SystemVerilog,Transfer_Data_From_Keyboard,6,0,2020-10-19 12:48:23+00:00,[],
5463,https://github.com/danielgaio/coffee_machine.git,2020-10-19 18:15:05+00:00,Maquina de estados de uma maquina de café,0,danielgaio/coffee_machine,305474514,SystemVerilog,coffee_machine,15020,0,2020-11-02 22:51:54+00:00,[],
5464,https://github.com/Sunodh-005/gsk-in-waveforms.git,2020-07-25 12:29:27+00:00,using delays i will generate clock which can display my name ,0,Sunodh-005/gsk-in-waveforms,282439685,SystemVerilog,gsk-in-waveforms,3,0,2021-03-03 12:38:42+00:00,[],
5465,https://github.com/veereshk619/spi_check.git,2020-07-23 16:29:47+00:00,,0,veereshk619/spi_check,282002692,SystemVerilog,spi_check,12152,0,2020-07-23 16:34:30+00:00,[],https://api.github.com/licenses/apache-2.0
5467,https://github.com/rmital589/Verification-of-SSP-UART.git,2020-07-03 05:28:03+00:00,,0,rmital589/Verification-of-SSP-UART,276815226,SystemVerilog,Verification-of-SSP-UART,7001,0,2020-07-03 05:35:57+00:00,[],
5468,https://github.com/Jiawei888/Matrix-calculation-based-on-picoMIPS.git,2020-07-08 10:50:02+00:00,"This project uses ModelSim and Quartus II software and is based on the Altera Cyclone V SoC 5CSEMA5F31C6 FPGA development board. By customizing processor operation instructions and building processor modules such as PC, register, decoder, ALU, etc., to implement a specified affine transformation algorithm that uses a toggle switch as the input N-bit of matrix binary values. ",0,Jiawei888/Matrix-calculation-based-on-picoMIPS,278063673,SystemVerilog,Matrix-calculation-based-on-picoMIPS,18047,0,2020-07-09 00:06:45+00:00,[],
5469,https://github.com/micky-bank/rtl_design.git,2020-08-02 11:38:53+00:00,Open source RTL codes.,0,micky-bank/rtl_design,284449596,SystemVerilog,rtl_design,10,0,2020-08-23 13:09:06+00:00,[],
5470,https://github.com/bakerjm24450/EE238.git,2020-08-16 19:41:31+00:00,VS Code workspace with necessary tools for EE 238 Digital Systems Design at VMI,0,bakerjm24450/EE238,288012565,SystemVerilog,EE238,33,0,2023-12-30 17:20:43+00:00,[],
5471,https://github.com/qaztronic/AXI4_LIB.git,2020-07-03 20:30:56+00:00,,0,qaztronic/AXI4_LIB,276982461,SystemVerilog,AXI4_LIB,75,0,2023-07-16 22:54:58+00:00,[],
5472,https://github.com/RiShy18/SHA-processor.git,2020-07-04 00:00:52+00:00,Descripcion en proceso,0,RiShy18/SHA-processor,277007463,SystemVerilog,SHA-processor,599,0,2020-07-16 05:52:29+00:00,[],
5473,https://github.com/Radiophantom/Syntacore.git,2020-07-14 12:31:37+00:00,,0,Radiophantom/Syntacore,279579659,SystemVerilog,Syntacore,72,0,2020-07-14 12:35:42+00:00,[],
5474,https://github.com/verilogtools/minitb.git,2020-07-11 09:24:31+00:00,An example of a minimal UVM testbench for educational purposes,0,verilogtools/minitb,278829315,SystemVerilog,minitb,18,0,2020-07-19 02:21:21+00:00,[],https://api.github.com/licenses/apache-2.0
5475,https://github.com/MouseHappy123/Ariane-issue_read_operands.git,2020-07-18 15:23:32+00:00,issue_read_operands in Issue Stage of Ariane,1,MouseHappy123/Ariane-issue_read_operands,280683366,SystemVerilog,Ariane-issue_read_operands,81,0,2020-09-10 06:05:00+00:00,[],
5476,https://github.com/emmajingsmith/ece581_hw.git,2020-07-09 02:29:36+00:00,,0,emmajingsmith/ece581_hw,278242868,SystemVerilog,ece581_hw,1,0,2020-07-09 02:32:01+00:00,[],
5477,https://github.com/cNpin/blueteeth_car.git,2020-07-26 12:56:49+00:00,blueteeth_car,0,cNpin/blueteeth_car,282650130,SystemVerilog,blueteeth_car,16070,0,2020-08-01 08:24:23+00:00,[],
5478,https://github.com/visali85/uart_controller.git,2020-08-03 16:36:17+00:00,,0,visali85/uart_controller,284752475,SystemVerilog,uart_controller,19,0,2020-08-03 16:38:55+00:00,[],
5479,https://github.com/Panda-Cores/caches.git,2020-08-08 16:34:29+00:00,"simple WB cache, WorkInProgress",0,Panda-Cores/caches,286080114,SystemVerilog,caches,9,0,2020-08-18 08:37:20+00:00,[],
5480,https://github.com/Keerthivasan005/MIPS-32-Bit-Processor.git,2020-08-10 19:23:33+00:00,,0,Keerthivasan005/MIPS-32-Bit-Processor,286560793,SystemVerilog,MIPS-32-Bit-Processor,13,0,2020-08-10 19:28:20+00:00,[],
5481,https://github.com/wolve265/vdic.git,2020-10-20 15:06:06+00:00,Verification of Digital Integrated Circuits,0,wolve265/vdic,305746089,SystemVerilog,vdic,1895,0,2021-01-25 17:30:54+00:00,[],
5482,https://github.com/Dimonij/A5_task.git,2020-10-13 20:21:46+00:00,find and fix left one and right one ,0,Dimonij/A5_task,303819916,SystemVerilog,A5_task,2,0,2020-10-13 20:25:04+00:00,[],
5483,https://github.com/yasho2249/alu_verification_env.git,2020-10-28 20:37:33+00:00,,0,yasho2249/alu_verification_env,308135141,SystemVerilog,alu_verification_env,4,0,2020-10-28 20:42:31+00:00,[],
5484,https://github.com/bfatehi/MipsCpuAndPongGame.git,2020-10-25 21:25:36+00:00,a mips cpu schematic completed in system verilog and a pong game written in mips assembly language,0,bfatehi/MipsCpuAndPongGame,307195701,SystemVerilog,MipsCpuAndPongGame,23273,0,2020-10-25 21:54:15+00:00,[],
5485,https://github.com/Atif-786/Full-substractor.git,2020-10-27 06:34:04+00:00,,0,Atif-786/Full-substractor,307608055,SystemVerilog,Full-substractor,1,0,2020-10-27 06:36:21+00:00,[],
5486,https://github.com/alex9612/Ambiente-de-Pruebas-FIFO.git,2020-10-23 04:34:41+00:00,En el presente repositorio se encontrará la estructura completa de un ambiente de prueba para la verificación del diseño VLSI de un sistema FIFO.,0,alex9612/Ambiente-de-Pruebas-FIFO,306529945,SystemVerilog,Ambiente-de-Pruebas-FIFO,1,0,2020-10-23 18:28:15+00:00,[],
5487,https://github.com/RaneemAlaa/uart2bus.git,2020-10-26 16:57:15+00:00,,0,RaneemAlaa/uart2bus,307443856,SystemVerilog,uart2bus,2,0,2020-10-26 23:37:11+00:00,[],
5488,https://github.com/paper1235/ENEE459D.git,2020-10-09 14:23:15+00:00,This is a system that has a processor interfacing with memory and RTC using the APB interface.,0,paper1235/ENEE459D,302663830,SystemVerilog,ENEE459D,53,0,2021-03-09 06:24:29+00:00,[],
5489,https://github.com/ArquiII-2021-S1/Proyecto1.git,2020-11-03 21:43:17+00:00,,0,ArquiII-2021-S1/Proyecto1,309814264,SystemVerilog,Proyecto1,3588,0,2020-11-17 23:25:31+00:00,[],
5490,https://github.com/d-cen/ASIC-Design.git,2020-09-03 08:02:18+00:00,ASIC Design Laboratory,0,d-cen/ASIC-Design,292505857,SystemVerilog,ASIC-Design,4423,0,2022-03-17 03:45:56+00:00,[],
5491,https://github.com/kitune-san/KF8288.git,2020-08-30 14:02:10+00:00,8288-like bus controller written in SystemVerilog,0,kitune-san/KF8288,291481499,SystemVerilog,KF8288,47,0,2022-09-23 11:37:20+00:00,"['8288', 'bus-controller', 'systemverilog', 'fpga', 'pc']",https://api.github.com/licenses/mit
5492,https://github.com/fmdproject/ledcontroller.git,2020-09-10 19:55:27+00:00,led controlling using fpga,0,fmdproject/ledcontroller,294509155,SystemVerilog,ledcontroller,5,0,2020-09-12 09:33:33+00:00,[],
5493,https://github.com/xavierperez21/digital_circuits_on_verilog.git,2020-10-04 01:55:44+00:00,"Development of a 4 Bits Adder with Carry Lookahead, a 4 bit up-down counter, a 4 bits Shift Register, and other projects using Verilog. These projects were developed thanks to the course ""Introducción al desarrollo de hardware con Verilog"" by GalileoX in edX plattform. ",0,xavierperez21/digital_circuits_on_verilog,301020531,SystemVerilog,digital_circuits_on_verilog,12,0,2020-10-04 02:06:52+00:00,[],
5494,https://github.com/Mooyeonkim628/ECE337.git,2020-08-27 18:34:53+00:00,,0,Mooyeonkim628/ECE337,290853306,SystemVerilog,ECE337,23824,0,2022-08-16 05:48:52+00:00,[],
5495,https://github.com/sethsawant/de10boy.git,2020-11-11 16:07:44+00:00,DE10-Lite FPGA-based emulation of the Nintendo Gameboy,1,sethsawant/de10boy,312021506,SystemVerilog,de10boy,25608,0,2021-01-14 20:32:20+00:00,[],
5496,https://github.com/Dimonij/A2_task.git,2020-11-08 13:06:49+00:00,serialyser with data-width modifier ,0,Dimonij/A2_task,311064797,SystemVerilog,A2_task,3,0,2020-11-08 13:17:17+00:00,[],
5497,https://github.com/vsfol/hello_world.git,2020-09-07 11:17:18+00:00,this is the first hello world repository,0,vsfol/hello_world,293506385,SystemVerilog,hello_world,71,0,2020-09-17 13:48:25+00:00,[],
5498,https://github.com/MohamedAli25/Ethernet-Switch-2x2-Verification-using-SystemVerilog.git,2020-09-24 17:55:46+00:00,,0,MohamedAli25/Ethernet-Switch-2x2-Verification-using-SystemVerilog,298354740,SystemVerilog,Ethernet-Switch-2x2-Verification-using-SystemVerilog,3,0,2020-09-24 17:58:15+00:00,[],
5499,https://github.com/nguyenquanicd/BasicSynEnv.git,2020-10-04 03:10:04+00:00,This is the basic synthesis environtment,0,nguyenquanicd/BasicSynEnv,301029728,SystemVerilog,BasicSynEnv,61481,0,2020-11-01 03:34:19+00:00,[],
5500,https://github.com/mtahna/hdl_amba_bfm.git,2020-07-23 10:17:33+00:00,,0,mtahna/hdl_amba_bfm,281919178,SystemVerilog,hdl_amba_bfm,6,0,2020-07-23 10:18:47+00:00,[],
5501,https://github.com/irwinfrimpong/Health-Monitor.git,2020-07-19 14:09:56+00:00,"Health Monitor implementing a pulse sensor PCB and a reaction timer using a Nexys4 FPGA board that is able to analyze, and display a reading of user’s pulse; this designed using a set of combinational and sequential circuit building blocks developed with System Verilog in Xilinx Vivado ",0,irwinfrimpong/Health-Monitor,280879003,SystemVerilog,Health-Monitor,1025,0,2020-07-19 14:10:05+00:00,[],
5502,https://github.com/swift-link/RIFL.git,2020-09-18 04:06:03+00:00,,2,swift-link/RIFL,296509969,SystemVerilog,RIFL,202,0,2021-04-30 22:43:33+00:00,[],
5503,https://github.com/kernsimon98/SystemVerilog_FlappyBird.git,2020-09-22 22:45:32+00:00,,0,kernsimon98/SystemVerilog_FlappyBird,297790272,SystemVerilog,SystemVerilog_FlappyBird,20,0,2020-09-22 22:51:31+00:00,[],
5504,https://github.com/merledu/gold-core-sv.git,2020-09-21 09:12:25+00:00,,0,merledu/gold-core-sv,297287532,SystemVerilog,gold-core-sv,30,0,2020-10-19 18:53:22+00:00,[],
5505,https://github.com/ceschini/mips_verilog.git,2020-09-15 14:20:32+00:00,Mini processador MIPS em Verilog,0,ceschini/mips_verilog,295751812,SystemVerilog,mips_verilog,10,0,2023-01-21 12:25:16+00:00,[],
5506,https://github.com/maxkunes/verilog-uart.git,2020-08-05 03:57:26+00:00,,0,maxkunes/verilog-uart,285173807,SystemVerilog,verilog-uart,4,0,2020-08-05 03:58:51+00:00,[],https://api.github.com/licenses/mit
5507,https://github.com/IoriOikawa/realTOY.git,2020-08-10 02:56:32+00:00,Hardware Implementation for the TOY computer from Princeton.,0,IoriOikawa/realTOY,286361692,SystemVerilog,realTOY,976,0,2020-11-08 21:15:50+00:00,[],
5508,https://github.com/Pchaves98/Verifacion-Test.git,2020-10-08 21:39:52+00:00,,0,Pchaves98/Verifacion-Test,302467842,SystemVerilog,Verifacion-Test,23,0,2020-11-10 21:33:01+00:00,[],
5509,https://github.com/calvinwiebe/dummy-bronn.git,2020-10-13 19:34:17+00:00,github copy of dummy-bronn,0,calvinwiebe/dummy-bronn,303809757,SystemVerilog,dummy-bronn,22,0,2021-09-22 16:04:34+00:00,[],
5510,https://github.com/RafaelLaya/Dynos_Adventure.git,2020-09-26 06:56:42+00:00,"Side-scrolling FPGA Game (VGA, Speakers, Keyboard)",0,RafaelLaya/Dynos_Adventure,298756469,SystemVerilog,Dynos_Adventure,3751,0,2020-09-29 21:55:31+00:00,[],https://api.github.com/licenses/mit
5511,https://github.com/AndresRQ27/ASIP.git,2020-10-23 01:31:29+00:00,,0,AndresRQ27/ASIP,306499497,SystemVerilog,ASIP,21732,0,2020-10-23 01:32:57+00:00,[],
5512,https://github.com/saurabh-ctrl/Verilog-FIFO.git,2020-07-16 07:18:03+00:00,,0,saurabh-ctrl/Verilog-FIFO,280082722,SystemVerilog,Verilog-FIFO,74,0,2020-07-24 12:10:41+00:00,[],
5513,https://github.com/natcz/digitalLogic.git,2020-07-17 13:43:03+00:00,digital logic course at usniversity during 2 semester,0,natcz/digitalLogic,280434529,SystemVerilog,digitalLogic,451,0,2020-07-17 13:44:54+00:00,[],
5514,https://github.com/OmerHemo/Lab1_project.git,2020-08-29 08:12:52+00:00,,0,OmerHemo/Lab1_project,291229766,SystemVerilog,Lab1_project,14559,0,2020-11-03 13:55:38+00:00,[],
5515,https://github.com/chukwuk/System-Verilog-RTL-design-for-temperature-averaging-system.git,2020-10-28 04:04:03+00:00,,0,chukwuk/System-Verilog-RTL-design-for-temperature-averaging-system,307902680,SystemVerilog,System-Verilog-RTL-design-for-temperature-averaging-system,11,0,2021-05-06 23:24:30+00:00,[],
5516,https://github.com/kevinzhang0216/luke_verify.git,2020-10-28 05:57:52+00:00,,0,kevinzhang0216/luke_verify,307920599,SystemVerilog,luke_verify,131380,0,2020-12-08 12:26:07+00:00,[],
5517,https://github.com/marlol94/Proyecto-1-Verificacion-Funcional-de-Circuitos-Integrados.git,2020-10-26 22:38:08+00:00,,0,marlol94/Proyecto-1-Verificacion-Funcional-de-Circuitos-Integrados,307522276,SystemVerilog,Proyecto-1-Verificacion-Funcional-de-Circuitos-Integrados,27,0,2020-11-02 06:39:58+00:00,[],
5518,https://github.com/eric710chen/ECE342_processor_design.git,2020-10-26 22:38:37+00:00,logic systems and processor design,0,eric710chen/ECE342_processor_design,307522354,SystemVerilog,ECE342_processor_design,34,0,2020-10-26 22:38:45+00:00,[],
5519,https://github.com/danielgaio/tanh.git,2020-07-22 14:06:07+00:00,Implementação da função tangente hiperbólica em verilog visando aplicabilidade em FPGAs,0,danielgaio/tanh,281694408,SystemVerilog,tanh,14807,0,2020-11-09 13:07:53+00:00,[],
5520,https://github.com/kfinch333/Microprocessor.git,2020-07-22 01:45:34+00:00,Microprocessor in SystemVerilog,0,kfinch333/Microprocessor,281546366,SystemVerilog,Microprocessor,6,0,2020-07-22 01:51:28+00:00,[],
5521,https://github.com/H-S-S-11/fpga-fm.git,2020-07-29 11:11:43+00:00,"Simple FM SDR implementation on an FPGA, targeting for the DE4 devboard",0,H-S-S-11/fpga-fm,283477415,SystemVerilog,fpga-fm,77,0,2021-01-23 00:46:58+00:00,[],https://api.github.com/licenses/gpl-3.0
5522,https://github.com/kfinch333/finite_state_machine.git,2020-07-22 01:56:09+00:00,FSM in SystemVerilog,0,kfinch333/finite_state_machine,281548267,SystemVerilog,finite_state_machine,3,0,2020-07-22 01:57:19+00:00,[],
5523,https://github.com/hrishikeshpujari/N_queen_problem.git,2020-07-23 21:53:46+00:00,"The N_queen problem says that on a NxN board, no queens should be placed in such a way that they threaten each other. ",0,hrishikeshpujari/N_queen_problem,282063377,SystemVerilog,N_queen_problem,2,0,2020-07-23 21:56:07+00:00,[],
5524,https://github.com/AIWKJ/-AWS.git,2020-07-26 12:39:03+00:00,Description (optional),0,AIWKJ/-AWS,282647057,SystemVerilog,-AWS,1773,0,2020-08-02 11:06:11+00:00,[],
5525,https://github.com/AshishAttri/systemverilog.git,2020-07-02 07:41:58+00:00,SystemVerilog examples,0,AshishAttri/systemverilog,276581230,SystemVerilog,systemverilog,7,0,2020-07-06 06:46:27+00:00,[],
5526,https://github.com/saipra99/APB_Testbench.git,2020-07-16 08:27:28+00:00,,0,saipra99/APB_Testbench,280097682,SystemVerilog,APB_Testbench,46,0,2020-12-01 20:41:58+00:00,[],
5527,https://github.com/huskyandrabbit/E-Bike.git,2020-07-10 11:12:28+00:00,,0,huskyandrabbit/E-Bike,278613949,SystemVerilog,E-Bike,63,0,2020-07-10 11:16:22+00:00,[],
5528,https://github.com/Kimc17/PG1_arq.git,2020-07-16 05:49:16+00:00,,0,Kimc17/PG1_arq,280065850,SystemVerilog,PG1_arq,19014,0,2020-07-18 08:47:08+00:00,[],
5529,https://github.com/NirLalum/Multiplier.git,2020-07-08 18:52:28+00:00,an implementaion of 32x32 bit multiplier,0,NirLalum/Multiplier,278169969,SystemVerilog,Multiplier,6,0,2020-07-08 18:55:32+00:00,[],
5530,https://github.com/Roman-Polovtsev/my-first-git.git,2020-10-17 19:28:21+00:00,,0,Roman-Polovtsev/my-first-git,304953631,SystemVerilog,my-first-git,4,0,2020-10-17 20:36:05+00:00,[],
5531,https://github.com/MohcineBerni/M2_Proejct.git,2020-10-22 20:34:20+00:00,Optimisation of ARIANE CVA6 RISC-V,0,MohcineBerni/M2_Proejct,306452555,SystemVerilog,M2_Proejct,9005,0,2020-10-22 20:56:02+00:00,[],
5532,https://github.com/nvsces/test_solution.git,2020-09-13 17:10:10+00:00,,0,nvsces/test_solution,295198982,SystemVerilog,test_solution,2,0,2020-09-13 17:11:48+00:00,[],
5533,https://github.com/bitglitcher/VanilaCore.git,2020-09-03 12:11:38+00:00,RISC-V Implementation in System Verilog,0,bitglitcher/VanilaCore,292559907,SystemVerilog,VanilaCore,164683,0,2022-01-10 16:03:11+00:00,[],https://api.github.com/licenses/mit
5534,https://github.com/mcraney2/VerilogE-Bike.git,2020-09-02 19:59:03+00:00,"All the components of an E-Bike designed in System Verilog/Verilog, then synthesized with Synopsys and ready to upload to an FPGA.",0,mcraney2/VerilogE-Bike,292382037,SystemVerilog,VerilogE-Bike,36,0,2020-09-02 20:11:31+00:00,[],
5535,https://github.com/Chlorophytus/fantastic-giggle.git,2020-09-19 19:00:47+00:00,VGA PPU + soft SoC stuff for FPGAs,0,Chlorophytus/fantastic-giggle,296933421,SystemVerilog,fantastic-giggle,242,0,2021-09-16 13:54:28+00:00,[],https://api.github.com/licenses/mit
5536,https://github.com/qiweiii-git/qwi_base.git,2020-10-07 08:34:28+00:00,base codes of qwi project.,0,qiweiii-git/qwi_base,301974145,SystemVerilog,qwi_base,14,0,2020-10-08 14:41:14+00:00,[],
5537,https://github.com/hanyax/5_Stages_Pipeline_CPU.git,2020-09-24 19:42:38+00:00,5 Stages Pipeline ARM CPU System Verilog Implementation,0,hanyax/5_Stages_Pipeline_CPU,298379003,SystemVerilog,5_Stages_Pipeline_CPU,23,0,2021-03-22 03:02:25+00:00,[],
5538,https://github.com/qaztronic/tb_base.git,2020-09-05 17:10:19+00:00,,0,qaztronic/tb_base,293120136,SystemVerilog,tb_base,5,0,2020-09-07 23:53:03+00:00,[],
5539,https://github.com/mgomez12/3DVisualizer.git,2020-11-08 17:50:17+00:00,,0,mgomez12/3DVisualizer,311120784,SystemVerilog,3DVisualizer,189,0,2022-02-02 18:19:17+00:00,[],
5540,https://github.com/JoseIuri/Aurora-Apb_Example.git,2020-11-10 13:44:53+00:00,,0,JoseIuri/Aurora-Apb_Example,311671348,SystemVerilog,Aurora-Apb_Example,27,0,2024-02-16 20:45:02+00:00,[],https://api.github.com/licenses/mit
5541,https://github.com/izzul210/arc4decryption.git,2020-07-26 00:56:47+00:00,Designed and built and ARC4 decryption with Key-Scheduling Algorithm (KSA) and pseudo-random generation algorithm,0,izzul210/arc4decryption,282550663,SystemVerilog,arc4decryption,44,0,2020-07-26 01:37:23+00:00,[],
5542,https://github.com/garlapatirahul/sv_constraints.git,2020-07-27 00:20:30+00:00,,0,garlapatirahul/sv_constraints,282756482,SystemVerilog,sv_constraints,2,0,2020-09-08 06:47:15+00:00,[],
5543,https://github.com/JassonRM/mixed-iir-filter.git,2020-07-17 14:25:47+00:00,,0,JassonRM/mixed-iir-filter,280444908,SystemVerilog,mixed-iir-filter,4284,0,2020-08-07 00:09:16+00:00,[],
5544,https://github.com/minjiexm/uvm_clam.git,2020-07-10 18:19:18+00:00,An UVM OOP based command line arguments Methodolgy Library,0,minjiexm/uvm_clam,278704197,SystemVerilog,uvm_clam,13,0,2020-07-24 01:42:17+00:00,[],
5545,https://github.com/tallenintegsys/ps2ctrlr.git,2020-08-23 19:45:49+00:00,host side keyboard controller for a PS/2 keyboard,0,tallenintegsys/ps2ctrlr,289755627,SystemVerilog,ps2ctrlr,17,0,2020-08-24 22:06:43+00:00,[],
5546,https://github.com/Yanivhass/FPGAbumpy.git,2020-08-25 12:14:21+00:00,FPGA project of the classic arcade game BUMPY. ,1,Yanivhass/FPGAbumpy,290206081,SystemVerilog,FPGAbumpy,40297,0,2020-09-17 07:31:28+00:00,[],
5547,https://github.com/surendharkodaikal/taxi-project.git,2020-07-02 18:02:53+00:00,,0,surendharkodaikal/taxi-project,276714152,SystemVerilog,taxi-project,662,0,2020-07-02 18:07:39+00:00,[],
5548,https://github.com/Radiophantom/Deserializer.git,2020-08-11 09:09:05+00:00,,0,Radiophantom/Deserializer,286697875,SystemVerilog,Deserializer,3,0,2020-08-11 10:38:23+00:00,[],
5549,https://github.com/choodi007/master.git,2020-09-04 12:10:03+00:00,,0,choodi007/master,292838711,SystemVerilog,master,1,0,2020-09-04 12:11:48+00:00,[],
5550,https://github.com/ranjan-yadav/SPI-Protocol.git,2020-10-09 17:11:43+00:00,,0,ranjan-yadav/SPI-Protocol,302706337,SystemVerilog,SPI-Protocol,257,0,2020-10-17 18:21:08+00:00,[],
5551,https://github.com/variemai/RV32IC.git,2020-10-25 18:40:53+00:00,,0,variemai/RV32IC,307167390,SystemVerilog,RV32IC,20981,0,2020-10-25 19:03:49+00:00,[],
5552,https://github.com/stardust-coder/vendingmachine.git,2020-10-27 01:53:24+00:00,3Aシステム実験,0,stardust-coder/vendingmachine,307556678,SystemVerilog,vendingmachine,1,0,2020-10-27 01:54:22+00:00,[],
5553,https://github.com/Dm1998/Panel_Display.git,2020-11-09 18:00:15+00:00,"In this project I designed an module that can synchronise and transfer our data from an fpga to a screen, through a vga cable. For the project an frequency of 60 Hz and resolution of 640x480 were selected. The project is fully implemented on System Verilog and includes the source file,testbench and an .qpf file for the quartus compilation.",0,Dm1998/Panel_Display,311422393,SystemVerilog,Panel_Display,4,0,2021-12-22 14:31:30+00:00,[],
5554,https://github.com/Ahalya2397/msd.git,2020-11-02 10:24:36+00:00,,0,Ahalya2397/msd,309334455,SystemVerilog,msd,0,0,2020-11-10 07:05:06+00:00,[],
5555,https://github.com/foxxy777/RAL_test.git,2020-10-29 12:14:30+00:00,,0,foxxy777/RAL_test,308317773,SystemVerilog,RAL_test,4715,0,2020-11-08 04:30:18+00:00,[],
5556,https://github.com/deveshkadambari2018/verilog.git,2020-10-29 19:35:40+00:00,This repository describes more about the type of codes I have generated using Verilog language.,0,deveshkadambari2018/verilog,308431017,SystemVerilog,verilog,3,0,2020-10-29 19:38:09+00:00,[],
5557,https://github.com/Alol2565/ComputerArchitecture_CA_5.git,2020-07-29 03:57:28+00:00,,0,Alol2565/ComputerArchitecture_CA_5,283393217,SystemVerilog,ComputerArchitecture_CA_5,100,0,2023-12-19 21:09:56+00:00,[],
5558,https://github.com/PacoReinaCampo/PU-RTOS.git,2020-09-20 23:30:44+00:00,Kernel for a Processing Unit,1,PacoReinaCampo/PU-RTOS,297182185,SystemVerilog,PU-RTOS,11465,0,2024-02-24 10:37:05+00:00,[],https://api.github.com/licenses/mit
5559,https://github.com/trmckay/universal-otter-debugger.git,2020-08-11 01:32:15+00:00,Implementation of the RISC-V UART Debugger for Cal Poly's Otter,0,trmckay/universal-otter-debugger,286616487,SystemVerilog,universal-otter-debugger,2120,0,2020-12-20 17:01:30+00:00,[],https://api.github.com/licenses/gpl-3.0
5560,https://github.com/kitune-san/KF8253.git,2020-07-28 14:30:07+00:00,8253-like programmable interval timer written in SystemVerilog,0,kitune-san/KF8253,283237119,SystemVerilog,KF8253,60,0,2021-10-02 07:25:26+00:00,"['8253', 'interval-timer', 'timer', 'systemverilog', 'fpga', 'pc']",https://api.github.com/licenses/mit
5561,https://github.com/Haotian-wang-swjtu/yoyo.git,2020-07-26 10:03:55+00:00,Homework during summer vacation.,0,Haotian-wang-swjtu/yoyo,282622653,SystemVerilog,yoyo,15624,0,2020-08-02 06:48:55+00:00,[],
5562,https://github.com/ranzbak/aars_video_out.git,2020-07-27 19:14:26+00:00,Tests the output of upscaled video via the adv7511 HDMI transmitter IC.,0,ranzbak/aars_video_out,282992681,SystemVerilog,aars_video_out,40074,0,2020-07-27 19:15:21+00:00,[],
5563,https://github.com/ismetalp98/Vivado-Basys3-memory.git,2020-08-08 19:04:46+00:00,,0,ismetalp98/Vivado-Basys3-memory,286103484,SystemVerilog,Vivado-Basys3-memory,1073,0,2021-03-01 13:03:33+00:00,[],
5564,https://github.com/Galatis-Giuliano/TempConverterLab4.git,2020-09-20 04:01:25+00:00,,0,Galatis-Giuliano/TempConverterLab4,296998556,SystemVerilog,TempConverterLab4,9,0,2020-09-22 04:35:13+00:00,[],
5565,https://github.com/pieska/ItLCaLDwVerilog_computer.git,2020-09-17 19:22:11+00:00,Computer in SystemVerilog as described in https://www.youtube.com/watch?v=GMi18i0bFAk&list=PL643xA3Ie_Et2uM4xu1yFk-A5ZQQ8gQ5e&index=133,0,pieska/ItLCaLDwVerilog_computer,296421862,SystemVerilog,ItLCaLDwVerilog_computer,4085,0,2023-08-03 19:22:59+00:00,[],
5566,https://github.com/1varuna/SV-TB-Practice.git,2020-07-08 14:16:03+00:00,Development of modular SV TB from scratch (based on a Udemy course),0,1varuna/SV-TB-Practice,278108405,SystemVerilog,SV-TB-Practice,2872,0,2020-07-15 12:50:40+00:00,[],
5567,https://github.com/Jensenwww/andata.git,2020-07-01 04:48:31+00:00,,0,Jensenwww/andata,276279367,SystemVerilog,andata,2593,0,2022-07-14 02:28:42+00:00,[],
5568,https://github.com/siwczak/ibex.git,2020-08-24 20:10:15+00:00,,0,siwczak/ibex,290029368,SystemVerilog,ibex,22690,0,2020-11-05 07:19:22+00:00,[],
5569,https://github.com/mihir23chauhan/verilog_Code.git,2020-08-23 06:41:13+00:00,,0,mihir23chauhan/verilog_Code,289631245,SystemVerilog,verilog_Code,1,0,2021-04-22 01:00:48+00:00,[],
5570,https://github.com/07151129/sharedmem_models.git,2020-08-23 14:18:10+00:00,,0,07151129/sharedmem_models,289700491,SystemVerilog,sharedmem_models,22,0,2020-08-31 16:31:12+00:00,[],
5571,https://github.com/Rookie-cprime/SV.git,2020-08-19 07:43:50+00:00,,0,Rookie-cprime/SV,288667037,SystemVerilog,SV,440,0,2020-10-29 09:25:00+00:00,[],
5572,https://github.com/regerj/ECE-272-Lab-6.git,2020-09-24 23:21:47+00:00,Digital Logic Design Lab 6,0,regerj/ECE-272-Lab-6,298417424,SystemVerilog,ECE-272-Lab-6,4945,0,2020-09-25 00:28:03+00:00,[],
5573,https://github.com/bonn/Shift-Register.git,2020-09-30 04:10:22+00:00,Shift Register Created for EE 4321 - Digital Design with System Verilog,0,bonn/Shift-Register,299806040,SystemVerilog,Shift-Register,2,0,2021-05-18 16:12:12+00:00,[],
5574,https://github.com/rosethepose/left_shift.git,2020-09-29 21:31:08+00:00,,0,rosethepose/left_shift,299742647,SystemVerilog,left_shift,8,0,2020-09-30 03:32:58+00:00,[],
5575,https://github.com/cpeng03d/GitTest.git,2020-09-16 20:43:27+00:00,test git,0,cpeng03d/GitTest,296143749,SystemVerilog,GitTest,34,0,2022-08-16 21:48:04+00:00,[],
5576,https://github.com/garlapatirahul/system_verilog_env_scb.git,2020-07-19 05:24:39+00:00,,0,garlapatirahul/system_verilog_env_scb,280797956,SystemVerilog,system_verilog_env_scb,1,0,2020-07-20 07:17:38+00:00,[],
5577,https://github.com/cainingw/VHDL.git,2020-09-05 23:02:17+00:00,,0,cainingw/VHDL,293167480,SystemVerilog,VHDL,4478,0,2020-09-05 23:55:53+00:00,[],
5578,https://github.com/rureverek/D2-Project.git,2020-09-06 14:15:55+00:00,Project was part of semester 1 assessment within Digital Systems Module.,0,rureverek/D2-Project,293291258,SystemVerilog,D2-Project,17726,0,2020-09-19 08:19:53+00:00,[],
5579,https://github.com/MaddieBurbage/lowrisc-extended.git,2020-07-24 20:43:48+00:00,The Bailey Research Group's extensions to lowRISC,1,MaddieBurbage/lowrisc-extended,282312707,SystemVerilog,lowrisc-extended,3330,0,2021-05-24 14:56:51+00:00,[],
5580,https://github.com/e60369/Verliog_FSM.git,2020-07-04 16:18:44+00:00,,0,e60369/Verliog_FSM,277144928,SystemVerilog,Verliog_FSM,3,0,2020-07-11 14:05:56+00:00,[],
5581,https://github.com/asafarad/foosball-game-project.git,2020-08-19 13:10:09+00:00,,1,asafarad/foosball-game-project,288735187,SystemVerilog,foosball-game-project,44016,0,2020-08-19 13:28:01+00:00,[],
5582,https://github.com/soshim/core1.git,2020-08-28 12:22:22+00:00,,0,soshim/core1,291039820,SystemVerilog,core1,11,0,2020-08-29 13:53:18+00:00,[],
5583,https://github.com/zeeshan0309/serial_2s_complementer.git,2020-08-14 07:23:38+00:00,Behavioural model of a Serial 2's complementer,1,zeeshan0309/serial_2s_complementer,287470686,SystemVerilog,serial_2s_complementer,4,0,2020-08-21 15:51:17+00:00,[],
5584,https://github.com/prasannaHWDevelopment/HDMI2CSI.git,2020-10-10 00:31:06+00:00,4KHDMI to CSI2 MIPI,1,prasannaHWDevelopment/HDMI2CSI,302781397,SystemVerilog,HDMI2CSI,3,0,2020-10-10 00:42:24+00:00,[],
5585,https://github.com/Stellau/ColorDetector.git,2020-10-30 17:05:01+00:00,A color detector built with Terasic digital camera and DE1_SoC board. Program built with SystemVerilog.,0,Stellau/ColorDetector,308694243,SystemVerilog,ColorDetector,2155,0,2022-10-02 15:37:37+00:00,[],
5586,https://github.com/tangshi706/systemverilog-learning.git,2020-10-31 04:48:35+00:00,systemverilog learning and training,0,tangshi706/systemverilog-learning,308805700,SystemVerilog,systemverilog-learning,2,0,2020-10-31 04:57:30+00:00,[],https://api.github.com/licenses/unlicense
5587,https://github.com/bzeeno/Serial-Comm-SoC.git,2020-10-31 20:43:17+00:00,"SoC using the Microblaze MCS designed for using different serial communication methods. The SoC contains a UART core, a SPI core, and an I2C core.",0,bzeeno/Serial-Comm-SoC,308968427,SystemVerilog,Serial-Comm-SoC,5650,0,2021-06-08 08:33:23+00:00,[],
5588,https://github.com/tallenintegsys/framebuffer.git,2020-07-23 17:12:35+00:00,A video frame buffer with VGA output,0,tallenintegsys/framebuffer,282011588,SystemVerilog,framebuffer,9221,0,2020-08-29 02:07:20+00:00,[],
5589,https://github.com/onurtoker/simple8bitCPU.git,2020-10-10 03:12:31+00:00,,0,onurtoker/simple8bitCPU,302804119,SystemVerilog,simple8bitCPU,232,0,2020-10-10 04:24:11+00:00,[],
5590,https://github.com/gloriafang123/ml_fpga.git,2020-11-03 20:23:27+00:00,,0,gloriafang123/ml_fpga,309798551,SystemVerilog,ml_fpga,3044,0,2020-12-11 16:52:57+00:00,[],
5591,https://github.com/Eeaeau/TFE4152-Digital-Camera-implementation.git,2020-11-07 13:14:14+00:00,Design project of digital camera solution.,0,Eeaeau/TFE4152-Digital-Camera-implementation,310848418,SystemVerilog,TFE4152-Digital-Camera-implementation,4477,0,2020-11-17 17:49:11+00:00,[],
5592,https://github.com/andrire/RNNASIP-pulpissimo.git,2020-10-21 17:28:21+00:00,,0,andrire/RNNASIP-pulpissimo,306099160,SystemVerilog,RNNASIP-pulpissimo,3196,0,2020-10-21 20:09:24+00:00,[],
5593,https://github.com/aneeshp10/BCD-7Segment-Display.git,2020-10-20 13:36:00+00:00,,0,aneeshp10/BCD-7Segment-Display,305719305,SystemVerilog,BCD-7Segment-Display,3,0,2020-12-21 12:35:56+00:00,[],
5594,https://github.com/PacoReinaCampo/gnumach.git,2020-10-06 11:29:00+00:00,Kernel for RTOS,1,PacoReinaCampo/gnumach,301704280,SystemVerilog,gnumach,20594,0,2023-02-02 16:46:32+00:00,[],https://api.github.com/licenses/mit
5595,https://github.com/motchy869/code-fractions.git,2020-07-18 08:19:09+00:00,code fractions for various works,0,motchy869/code-fractions,280613471,SystemVerilog,code-fractions,6341,0,2024-04-12 17:05:11+00:00,[],https://api.github.com/licenses/mit
5596,https://github.com/arkinshah/uiuc_ece_projects.git,2020-07-10 18:42:13+00:00,,1,arkinshah/uiuc_ece_projects,278708583,SystemVerilog,uiuc_ece_projects,44294,0,2020-07-10 20:02:11+00:00,[],
5597,https://github.com/rmital589/UVM-for-ALU.git,2020-07-03 05:26:20+00:00,,0,rmital589/UVM-for-ALU,276815012,SystemVerilog,UVM-for-ALU,6,0,2020-07-03 05:26:54+00:00,[],
5598,https://github.com/tsubasa123/System-Verilog-UVM.git,2020-07-07 15:14:22+00:00,,0,tsubasa123/System-Verilog-UVM,277850833,SystemVerilog,System-Verilog-UVM,1522,0,2020-08-01 17:21:26+00:00,[],
5599,https://github.com/zeeshan0309/alu_8-bit.git,2020-08-22 14:59:38+00:00,"8-bit wide ALU, with asynchronous reset",0,zeeshan0309/alu_8-bit,289509554,SystemVerilog,alu_8-bit,6,0,2020-08-22 15:18:25+00:00,[],
5600,https://github.com/AnandSunderrajan/Pipelined-Microprocessors.git,2020-08-13 14:17:30+00:00,Pipelined LC3-b and RISC-V microprocessor,1,AnandSunderrajan/Pipelined-Microprocessors,287299396,SystemVerilog,Pipelined-Microprocessors,32406,0,2022-06-30 01:12:41+00:00,[],
5601,https://github.com/sepehrMSP/dummy-spi-slave.git,2020-08-17 11:43:50+00:00,,0,sepehrMSP/dummy-spi-slave,288165160,SystemVerilog,dummy-spi-slave,4,0,2020-08-20 10:53:44+00:00,[],
5602,https://github.com/honeytung/ELEC402-FSM_Project.git,2020-09-23 02:19:51+00:00,ELEC 402 SystemVerilog FSM Project,0,honeytung/ELEC402-FSM_Project,297827890,SystemVerilog,ELEC402-FSM_Project,240,0,2020-09-23 04:10:34+00:00,[],
5603,https://github.com/Siddhant-k/ZyboZ7-audio-video-jukebox.git,2020-09-25 19:43:32+00:00,,0,Siddhant-k/ZyboZ7-audio-video-jukebox,298665249,SystemVerilog,ZyboZ7-audio-video-jukebox,2039,0,2020-09-25 19:45:15+00:00,[],https://api.github.com/licenses/mit
5604,https://github.com/siddhantv10/fibonacci-optimization.git,2020-08-04 14:06:23+00:00,Implementing the fibonacci calculator using 3 different approaches and analyzing the logic devices used.,0,siddhantv10/fibonacci-optimization,284998685,SystemVerilog,fibonacci-optimization,365,0,2020-08-04 16:40:51+00:00,[],
5605,https://github.com/hrishikeshpujari/bitmovement_engine_AHB_bus-.git,2020-07-26 19:29:05+00:00,,0,hrishikeshpujari/bitmovement_engine_AHB_bus-,282718984,SystemVerilog,bitmovement_engine_AHB_bus-,21,0,2020-07-26 19:55:43+00:00,[],
5606,https://github.com/ceyinskye/SV-Lab.git,2020-07-16 03:22:55+00:00,,0,ceyinskye/SV-Lab,280042122,SystemVerilog,SV-Lab,25663,0,2020-07-16 05:01:14+00:00,[],
5607,https://github.com/NotZombieFood/PITE.git,2020-09-11 17:39:25+00:00,Telecommunication modules in verilog,0,NotZombieFood/PITE,294765667,SystemVerilog,PITE,39,0,2020-10-30 22:00:45+00:00,[],https://api.github.com/licenses/gpl-3.0
5608,https://github.com/ibrahimkhairy/MIPS_ALU_RTL_and_verification.git,2020-09-18 15:12:33+00:00,,0,ibrahimkhairy/MIPS_ALU_RTL_and_verification,296656065,SystemVerilog,MIPS_ALU_RTL_and_verification,278,0,2020-09-18 15:14:15+00:00,[],
5609,https://github.com/yizhoushen/Baccarat-Punto-Banco.git,2020-09-21 12:54:01+00:00,,0,yizhoushen/Baccarat-Punto-Banco,297338930,SystemVerilog,Baccarat-Punto-Banco,2713,0,2022-04-06 05:20:10+00:00,[],https://api.github.com/licenses/gpl-3.0
5610,https://github.com/aiap-skt/github-upload.git,2020-09-22 06:46:12+00:00,,0,aiap-skt/github-upload,297560155,SystemVerilog,github-upload,50,0,2020-09-23 01:33:15+00:00,[],
5611,https://github.com/LiuChenHsiung/test_sv.git,2020-09-01 19:24:14+00:00,For learning SystemVerilog,0,LiuChenHsiung/test_sv,292088205,SystemVerilog,test_sv,9,0,2020-11-16 00:56:14+00:00,[],
5612,https://github.com/aminb7/MIPS-Processor-Pipeline.git,2020-08-29 09:46:46+00:00,Implementation of MIPS processor using pipeline in Verilog.,0,aminb7/MIPS-Processor-Pipeline,291243603,SystemVerilog,MIPS-Processor-Pipeline,8,0,2022-01-17 16:32:51+00:00,[],
5613,https://github.com/xutianyish/piplined-processor.git,2020-09-15 18:26:02+00:00,,0,xutianyish/piplined-processor,295815129,SystemVerilog,piplined-processor,15,0,2020-09-15 21:43:11+00:00,[],
5614,https://github.com/rtldesignlabs/spi.git,2020-09-10 19:58:30+00:00,,0,rtldesignlabs/spi,294509718,SystemVerilog,spi,5518,0,2021-05-02 11:17:30+00:00,[],
5615,https://github.com/Beikerone/FPGA_game.git,2020-07-26 05:35:51+00:00,Implementation of games in FPGA,0,Beikerone/FPGA_game,282583555,SystemVerilog,FPGA_game,1342,0,2020-07-31 13:15:16+00:00,[],
5616,https://github.com/garlapatirahul/agent_sva.git,2020-07-18 21:29:52+00:00,,0,garlapatirahul/agent_sva,280742604,SystemVerilog,agent_sva,2,0,2020-07-19 05:08:52+00:00,[],
5617,https://github.com/systemverilogstudio/training.git,2020-08-26 17:43:14+00:00,SystemVerilog training code.,0,systemverilogstudio/training,290564938,SystemVerilog,training,2,0,2020-08-26 17:50:04+00:00,[],
5618,https://github.com/dreaqdp/PA-MIRI.git,2020-10-27 12:46:13+00:00,"RISC-V processor implemented in System Verilog, for PA subject of MIRI (FIB)",0,dreaqdp/PA-MIRI,307697016,SystemVerilog,PA-MIRI,596,0,2023-06-23 08:45:30+00:00,[],https://api.github.com/licenses/gpl-3.0
5619,https://github.com/calvinwiebe/metrics-public-integration.git,2020-10-07 21:39:49+00:00,Testing metrics integration with public github repos,0,calvinwiebe/metrics-public-integration,302166649,SystemVerilog,metrics-public-integration,0,0,2020-10-07 21:41:15+00:00,[],
5620,https://github.com/akshatmathur16/AHB.git,2020-11-07 17:54:01+00:00,AHB Design ,1,akshatmathur16/AHB,310901476,SystemVerilog,AHB,2,0,2020-11-07 18:27:59+00:00,[],
5621,https://github.com/sthornington/matrix8x8.git,2020-11-11 03:43:37+00:00,,0,sthornington/matrix8x8,311855073,SystemVerilog,matrix8x8,90,0,2021-05-11 01:43:44+00:00,[],https://api.github.com/licenses/mit
5622,https://github.com/merledu/Murtajiz_core_sv.git,2020-11-02 15:32:32+00:00,,1,merledu/Murtajiz_core_sv,309413484,SystemVerilog,Murtajiz_core_sv,6,0,2020-11-14 16:40:14+00:00,[],
5623,https://github.com/aflores614/Verilog_ECE_526.git,2020-10-25 20:16:20+00:00,,0,aflores614/Verilog_ECE_526,307184178,SystemVerilog,Verilog_ECE_526,7,0,2020-10-25 20:26:34+00:00,[],
5624,https://github.com/Artem1199/ECE540-finalproject.git,2020-11-10 08:41:17+00:00,,0,Artem1199/ECE540-finalproject,311596453,SystemVerilog,ECE540-finalproject,11537,0,2020-12-24 00:12:47+00:00,[],https://api.github.com/licenses/mit
5625,https://github.com/lucasbrant/processador_i2o2.git,2020-10-28 22:51:23+00:00,,0,lucasbrant/processador_i2o2,308159933,SystemVerilog,processador_i2o2,14,0,2020-11-05 02:31:35+00:00,[],
5626,https://github.com/openhwgroup/cv32e40x.git,2021-02-23 09:23:27+00:00,"4 stage, in-order, compute RISC-V core based on the CV32E40P",48,openhwgroup/cv32e40x,341497701,SystemVerilog,cv32e40x,9828,193,2024-04-09 10:00:59+00:00,[],
5627,https://github.com/srg320/Saturn_MiSTer.git,2021-01-30 13:51:15+00:00,,14,srg320/Saturn_MiSTer,334423872,SystemVerilog,Saturn_MiSTer,10893,151,2024-04-08 08:33:37+00:00,[],
5628,https://github.com/openhwgroup/cv32e40s.git,2021-02-23 09:39:51+00:00,"4 stage, in-order, secure RISC-V core based on the CV32E40P",22,openhwgroup/cv32e40s,341502497,SystemVerilog,cv32e40s,11718,122,2024-03-13 12:43:29+00:00,[],
5629,https://github.com/Xilinx/open-nic-shell.git,2021-03-01 20:37:05+00:00,AMD OpenNIC Shell includes the HDL source files,58,Xilinx/open-nic-shell,343549926,SystemVerilog,open-nic-shell,17695,88,2024-04-03 15:58:26+00:00,"['fpga', 'smartnic', 'network-acceleration', 'verilog', 'datacenter']",https://api.github.com/licenses/apache-2.0
5630,https://github.com/pulp-platform/hero.git,2020-12-21 13:33:33+00:00,"Heterogeneous Research Platform (HERO) for exploration of heterogeneous computers consisting of programmable many-core accelerators and an application-class host CPU, including full-stack software and hardware.",24,pulp-platform/hero,323345486,SystemVerilog,hero,64854,87,2024-02-23 10:38:20+00:00,"['computer-architecture', 'heterogeneous-computing', 'heterogeneous-parallel-programming', 'many-core-architectures', 'shared-memory', 'openmp-offloading', 'openmp-parallelization', 'iommu', 'unified-virtual-memory', 'riscv', 'fpga']",
5631,https://github.com/waviousllc/wav-lpddr-hw.git,2021-03-15 22:47:33+00:00,Wavious DDR (WDDR) Physical interface (PHY) Hardware,35,waviousllc/wav-lpddr-hw,348144172,SystemVerilog,wav-lpddr-hw,11836,87,2024-03-26 18:58:39+00:00,[],https://api.github.com/licenses/apache-2.0
5632,https://github.com/kumarrishav14/AXI.git,2020-12-29 06:27:53+00:00,VIP for AXI Protocol,27,kumarrishav14/AXI,325205132,SystemVerilog,AXI,82,83,2024-03-29 02:22:55+00:00,"['amba-axi', 'sv', 'uvm', 'design-verification', 'asic-verification']",https://api.github.com/licenses/mit
5633,https://github.com/daglem/reDIP-SID.git,2021-01-10 22:05:42+00:00,MOS 6581 / 8580 SID FPGA emulation platform,11,daglem/reDIP-SID,328488852,SystemVerilog,reDIP-SID,42253,79,2024-03-19 22:49:30+00:00,[],
5634,https://github.com/tishi43/h265_decoder.git,2021-03-19 06:31:17+00:00,"H265 decoder write in verilog, verified on Xilinx ZYNQ7035",37,tishi43/h265_decoder,349324053,SystemVerilog,h265_decoder,2286,55,2024-04-07 02:42:33+00:00,[],
5635,https://github.com/openhwgroup/core-v-xif.git,2021-03-04 12:54:16+00:00,RISC-V eXtension interface that provides a generalized framework suitable to implement custom coprocessors and ISA extensions,23,openhwgroup/core-v-xif,344473829,SystemVerilog,core-v-xif,556,50,2024-04-13 19:06:14+00:00,[],
5636,https://github.com/mikeroyal/Verilog-SystemVerilog-Guide.git,2020-12-15 21:12:03+00:00,Verilog/SystemVerilog Guide,6,mikeroyal/Verilog-SystemVerilog-Guide,321790120,SystemVerilog,Verilog-SystemVerilog-Guide,20,46,2024-04-09 04:51:38+00:00,"['fpga', 'verilog', 'hardware', 'systemverilog', 'awesome', 'awesome-list', 'awesome-readme']",
5637,https://github.com/Travissss/ahb2apb-bridge.git,2020-12-27 15:21:11+00:00,An  uvm verification env for ahb2apb bridge,13,Travissss/ahb2apb-bridge,324789266,SystemVerilog,ahb2apb-bridge,9172,42,2024-03-26 10:25:12+00:00,[],
5638,https://github.com/oprecomp/DDR4_controller.git,2020-12-16 12:40:43+00:00,,11,oprecomp/DDR4_controller,321978574,SystemVerilog,DDR4_controller,1288,40,2024-04-05 07:43:52+00:00,[],https://api.github.com/licenses/apache-2.0
5639,https://github.com/zhouchuanrui/JSONinSV.git,2021-01-19 15:15:59+00:00,JSON lib in Systemverilog,12,zhouchuanrui/JSONinSV,331020928,SystemVerilog,JSONinSV,154,39,2024-03-13 07:49:40+00:00,"['json', 'systemverilog', 'json-api', 'json-parser']",https://api.github.com/licenses/mit
5640,https://github.com/WukLab/FPGA-OS.git,2021-01-21 04:38:21+00:00,,5,WukLab/FPGA-OS,331515582,SystemVerilog,FPGA-OS,12611,31,2023-07-18 01:25:16+00:00,"['fpga', 'os', 'virtualization']",
5641,https://github.com/AI-Vector-Accelerator/ava-core.git,2021-01-18 15:22:45+00:00,A lightweight core for the CV32E40 implementing the RISC-V vector extension specification. (v0.8),11,AI-Vector-Accelerator/ava-core,330707102,SystemVerilog,ava-core,152,27,2024-02-04 21:40:55+00:00,[],
5642,https://github.com/amichai-bd/riscv-multi-core-lotr.git,2021-03-20 20:22:24+00:00,RISCV core RV32I/E.4 threads in a ring architecture  ,7,amichai-bd/riscv-multi-core-lotr,349827513,SystemVerilog,riscv-multi-core-lotr,100026,23,2024-03-25 21:53:23+00:00,"['riscv32', 'ring-architecture', 'rtl', 'systemverilog', 'cores', 'core', 'threads', 'hw-threads']",https://api.github.com/licenses/mit
5643,https://github.com/ic-lab-duth/DRIM-S.git,2021-03-09 09:19:09+00:00,DUTH RISC-V Superscalar Microprocessor,3,ic-lab-duth/DRIM-S,345948930,SystemVerilog,DRIM-S,1054,23,2024-03-21 21:18:14+00:00,"['riscv', 'risc-v', 'systemverilog', 'superscalar', 'processor']",https://api.github.com/licenses/mit
5644,https://github.com/georgeyhere/FPGA-Video-Processing.git,2020-12-15 21:21:06+00:00,Realtime video processing w/ Gaussian + Sobel Filters targeting Artix-7 FPGA,3,georgeyhere/FPGA-Video-Processing,321791796,SystemVerilog,FPGA-Video-Processing,149095,21,2024-02-17 15:51:44+00:00,"['verilog', 'computer-vision', 'fpga']",
5645,https://github.com/svenka3/ivl_uvm.git,2020-11-26 13:52:00+00:00,"Adding UVM support to Icarus Verilog (and Verilator in near future) by taking a step-by-step, bottom-up approach.",39,svenka3/ivl_uvm,316245269,SystemVerilog,ivl_uvm,1827,21,2024-03-24 11:39:01+00:00,[],
5646,https://github.com/intel/pfr-wilson-city.git,2021-01-25 21:19:34+00:00,,6,intel/pfr-wilson-city,332886620,SystemVerilog,pfr-wilson-city,9487,20,2023-11-03 06:09:30+00:00,[],
5647,https://github.com/bensampson5/libsv.git,2020-12-23 22:02:38+00:00,"An open source, parameterized SystemVerilog digital hardware IP library",4,bensampson5/libsv,324010177,SystemVerilog,libsv,473,19,2024-02-04 12:59:30+00:00,"['verilog', 'systemverilog', 'hdl', 'ip', 'fpga', 'asic', 'digital-design', 'asic-library', 'fpga-library', 'hardware', 'hardware-libraries', 'hardware-designs']",https://api.github.com/licenses/mit
5648,https://github.com/Efinix-Inc/evsoc.git,2020-12-08 01:30:44+00:00,"This repo is for Edge Vision SoC framework, which facilitates quick porting of users' design for Edge AI and Vision solutions.",10,Efinix-Inc/evsoc,319491543,SystemVerilog,evsoc,154051,19,2024-04-02 05:41:27+00:00,[],https://api.github.com/licenses/mit
5649,https://github.com/dh73/A_Formal_Tale_Chapter_I_AMBA.git,2020-11-17 04:28:54+00:00,AXI Formal Verification IP,2,dh73/A_Formal_Tale_Chapter_I_AMBA,313506846,SystemVerilog,A_Formal_Tale_Chapter_I_AMBA,2353,19,2024-03-10 15:02:25+00:00,[],
5650,https://github.com/ic-lab-duth/DRIM.git,2021-03-08 06:51:57+00:00,DUTH RISC-V Microprocessor,3,ic-lab-duth/DRIM,345558394,SystemVerilog,DRIM,304,18,2023-12-24 13:03:14+00:00,"['risc-v', 'riscv32', 'processor', 'systemverilog', 'architecture']",https://api.github.com/licenses/mit
5651,https://github.com/pulp-platform/rbe.git,2021-02-03 17:39:38+00:00,Reconfigurable Binary Engine,5,pulp-platform/rbe,335705659,SystemVerilog,rbe,553,14,2023-10-07 09:07:31+00:00,[],
5652,https://github.com/srg320/Saturn.git,2020-12-04 08:11:41+00:00,,7,srg320/Saturn,318447904,SystemVerilog,Saturn,8363,14,2023-11-05 01:51:34+00:00,[],
5653,https://github.com/holdenQWER/systemverilog_design_pattern.git,2021-02-07 03:09:35+00:00,The source code of blog,3,holdenQWER/systemverilog_design_pattern,336689173,SystemVerilog,systemverilog_design_pattern,16,13,2023-06-27 13:57:40+00:00,[],https://api.github.com/licenses/apache-2.0
5654,https://github.com/Xilinx/vck190-base-trd.git,2020-12-02 06:00:18+00:00,,8,Xilinx/vck190-base-trd,317765454,SystemVerilog,vck190-base-trd,160829,13,2024-02-21 02:42:10+00:00,[],https://api.github.com/licenses/apache-2.0
5655,https://github.com/asadalam/FINN_MatrixVector_RTL.git,2021-03-04 12:48:37+00:00,Repository for work on on Xilinx's matrix vector activation unit's RTL implementation. Documentation available at: https://asadalam.github.io/FINN_MatrixVector_RTL/,2,asadalam/FINN_MatrixVector_RTL,344472298,SystemVerilog,FINN_MatrixVector_RTL,2560,13,2024-04-06 17:33:18+00:00,[],
5656,https://github.com/ChienKaiMa/HDR-Imaging-with-FPGA.git,2020-12-07 16:55:27+00:00,High Dynamic Range imaging with Altera DE2-115.,1,ChienKaiMa/HDR-Imaging-with-FPGA,319385553,SystemVerilog,HDR-Imaging-with-FPGA,9566,11,2024-04-02 11:34:04+00:00,"['hdr-image', 'fpga', 'de2-115', 'hdr', 'vga']",https://api.github.com/licenses/mit
5657,https://github.com/luunguyen97/DPU-TRD-ZCU104.git,2020-12-21 10:01:24+00:00,,4,luunguyen97/DPU-TRD-ZCU104,323296473,SystemVerilog,DPU-TRD-ZCU104,4598,11,2023-12-20 12:45:36+00:00,[],
5658,https://github.com/iammituraj/FIFOs.git,2021-03-17 16:53:41+00:00,Register-based and RAM-based FIFOs designed in Verilog/System Verilog.,3,iammituraj/FIFOs,348785473,SystemVerilog,FIFOs,74,11,2024-03-11 09:53:39+00:00,"['fifo', 'verilog', 'rtl', 'systemverilog']",
5659,https://github.com/srg320/SH.git,2020-12-04 08:00:26+00:00,,4,srg320/SH,318445251,SystemVerilog,SH,1137,11,2023-11-05 01:51:39+00:00,[],
5660,https://github.com/Harshil1995/I2C_UVM_APB.git,2020-12-08 23:16:53+00:00,Formulated testbench using System Verilog and UVM and verified I2C bus controller with APB interface,1,Harshil1995/I2C_UVM_APB,319785203,SystemVerilog,I2C_UVM_APB,422,10,2024-03-29 06:49:18+00:00,[],https://api.github.com/licenses/mit
5661,https://github.com/semify-eda/go.debug.git,2021-02-23 20:03:07+00:00,Ease the Life of Verification Engineers by helping them to analyze and understand failing simulation faster,2,semify-eda/go.debug,341675169,SystemVerilog,go.debug,12441,10,2024-01-04 02:46:12+00:00,"['systemverilog', 'verilog', 'uvm', 'hdl', 'verification', 'verilator', 'eda', 'testbench']",
5662,https://github.com/oshears/SNN-FPGA-Implementation.git,2021-01-21 21:31:38+00:00,,1,oshears/SNN-FPGA-Implementation,331760330,SystemVerilog,SNN-FPGA-Implementation,64733,9,2023-08-30 14:47:30+00:00,[],
5663,https://github.com/jmcneal/config_policy_pattern.git,2020-12-13 20:45:11+00:00,Support code for DVCon 2021 paper submission,1,jmcneal/config_policy_pattern,321156564,SystemVerilog,config_policy_pattern,25,9,2024-03-08 21:59:22+00:00,[],
5664,https://github.com/risc-v-cpu/ez-risc-v-cpu.git,2021-03-20 09:02:31+00:00,risc-v cpu core and soc,1,risc-v-cpu/ez-risc-v-cpu,349675616,SystemVerilog,ez-risc-v-cpu,78,8,2022-11-18 02:42:08+00:00,[],https://api.github.com/licenses/apache-2.0
5665,https://github.com/kumarrishav14/SRAM_UVM.git,2020-11-29 11:37:15+00:00,UVM Testbench for a SRAM,2,kumarrishav14/SRAM_UVM,316937495,SystemVerilog,SRAM_UVM,117,8,2023-09-24 09:20:17+00:00,[],https://api.github.com/licenses/mit
5666,https://github.com/TaoHeyi/ECE385-Tank-World-on-FPGA.git,2020-12-13 17:20:51+00:00,Repos for ECE385 final project,0,TaoHeyi/ECE385-Tank-World-on-FPGA,321119196,SystemVerilog,ECE385-Tank-World-on-FPGA,29785,8,2023-12-06 01:47:22+00:00,[],
5667,https://github.com/Infineon/adsbenchmark.git,2021-02-23 12:04:57+00:00,Benchmark circuits for analog defect simulation including P2427 standard validation,2,Infineon/adsbenchmark,341541533,SystemVerilog,adsbenchmark,4104,8,2024-01-31 17:00:04+00:00,[],https://api.github.com/licenses/mit
5668,https://github.com/merledu/azadi.git,2020-11-29 10:41:46+00:00,[Deprecated] Azadi is an SoC with 32 bit RISC-V CPU core.,9,merledu/azadi,316928201,SystemVerilog,azadi,95899,8,2024-04-12 20:00:39+00:00,[],
5669,https://github.com/pulp-platform/redundancy_cells.git,2020-12-30 15:57:37+00:00,,7,pulp-platform/redundancy_cells,325590869,SystemVerilog,redundancy_cells,502,8,2023-12-19 07:43:07+00:00,[],
5670,https://github.com/CPEN-391-TEAM-7/RNN_Accelerator.git,2021-02-21 22:40:52+00:00,Verilog Code for RNN accelerator module/submodules,1,CPEN-391-TEAM-7/RNN_Accelerator,341020101,SystemVerilog,RNN_Accelerator,98,7,2024-03-15 08:15:17+00:00,[],
5671,https://github.com/Menci/pipeline.git,2020-12-11 02:25:33+00:00,Pipelined MIPS processor in Verilog,0,Menci/pipeline,320444767,SystemVerilog,pipeline,234,7,2023-04-30 18:00:27+00:00,[],https://api.github.com/licenses/unlicense
5672,https://github.com/grant4001/CORDIC-UART-Artix-7.git,2021-03-13 02:53:44+00:00,,0,grant4001/CORDIC-UART-Artix-7,347256359,SystemVerilog,CORDIC-UART-Artix-7,24376,7,2023-07-13 06:41:34+00:00,[],
5673,https://github.com/VimfulDang/APB-SPI-Controller-Verification.git,2020-12-22 00:26:28+00:00,"UVM testbench environment consisting of an APB driver, high level SPI controller model, and SPI verification testbench based upon an LPC24xx microcontroller specification.",5,VimfulDang/APB-SPI-Controller-Verification,323479446,SystemVerilog,APB-SPI-Controller-Verification,14,7,2023-08-10 05:14:52+00:00,[],
5674,https://github.com/NamiLiy/Helios_scalable_QEC.git,2021-03-07 19:46:17+00:00,FPGA implementation of distributed union find algorithm,4,NamiLiy/Helios_scalable_QEC,345437897,SystemVerilog,Helios_scalable_QEC,1971,6,2024-03-12 15:21:04+00:00,"['quantum-computing', 'fpga']",https://api.github.com/licenses/bsd-3-clause
5675,https://github.com/Travissss/100BT1_DV.git,2021-02-14 10:10:25+00:00,An uvm environment for 100Base-T1 (IEEE 802.3bw) Phy,1,Travissss/100BT1_DV,338776209,SystemVerilog,100BT1_DV,1074,6,2024-03-04 16:00:04+00:00,[],
5676,https://github.com/nbdd0121/muntjac-soc.git,2021-01-31 03:14:57+00:00,SoC for muntjac,0,nbdd0121/muntjac-soc,334562225,SystemVerilog,muntjac-soc,2104,6,2024-03-19 02:35:50+00:00,[],https://api.github.com/licenses/apache-2.0
5677,https://github.com/nbdd0121/sdhci.git,2021-01-22 07:01:01+00:00,Open-source SD host controller interface,0,nbdd0121/sdhci,331864061,SystemVerilog,sdhci,62,6,2024-04-02 17:40:38+00:00,[],https://api.github.com/licenses/apache-2.0
5678,https://github.com/SamarSarda/AMBA-APB-I2C-Project.git,2021-02-24 15:49:08+00:00,SystemVerilog project where we design a processor and a I2C peripheral to interact with an AMBA APB interface.,1,SamarSarda/AMBA-APB-I2C-Project,341951023,SystemVerilog,AMBA-APB-I2C-Project,157,5,2023-05-26 07:30:29+00:00,[],
5679,https://github.com/Danny1379/RISC_V_MultiCycle_Processor.git,2021-02-15 09:12:39+00:00,RISC V multicycle processor in system verilog for final project of Comuter Architecture and Orginization,0,Danny1379/RISC_V_MultiCycle_Processor,339021605,SystemVerilog,RISC_V_MultiCycle_Processor,8,5,2023-12-17 21:34:46+00:00,[],
5680,https://github.com/gotti/shrv32.git,2020-12-06 08:08:40+00:00,RISC-V SystemVerilog implementation with AES accelerator and RNG,1,gotti/shrv32,318982813,SystemVerilog,shrv32,114,5,2021-02-19 11:10:41+00:00,[],
5681,https://github.com/gchinna/ahb_pkg.git,2020-11-28 16:26:17+00:00,AHB package with UVM master and slave agents.,1,gchinna/ahb_pkg,316774712,SystemVerilog,ahb_pkg,11,5,2024-02-20 03:05:12+00:00,[],https://api.github.com/licenses/mit
5682,https://github.com/takah29/arm-cpu.git,2021-02-20 11:57:34+00:00,Armv5 single-cycle processor,0,takah29/arm-cpu,340643435,SystemVerilog,arm-cpu,5243,5,2023-08-11 21:19:41+00:00,"['arm', 'armv4', 'armv5', 'arm-cpu', 'cpu', 'hdl', 'systemverilog', 'verilog']",
5683,https://github.com/pulp-platform/udma_hyper.git,2021-03-03 10:10:07+00:00,,4,pulp-platform/udma_hyper,344082520,SystemVerilog,udma_hyper,2255,5,2024-03-21 02:29:47+00:00,[],
5684,https://github.com/fadialzammar/FPGAmeBoy.git,2021-01-08 03:08:27+00:00,,0,fadialzammar/FPGAmeBoy,327785136,SystemVerilog,FPGAmeBoy,650,5,2024-01-22 07:31:12+00:00,[],
5685,https://github.com/debugevent90901/FPGA-based-3D-graphics-renderer.git,2020-12-12 05:42:50+00:00,ECE 385 Final Project in FALL 2020 UIUC,1,debugevent90901/FPGA-based-3D-graphics-renderer,320757780,SystemVerilog,FPGA-based-3D-graphics-renderer,30789,5,2023-04-13 06:46:23+00:00,[],https://api.github.com/licenses/mit
5686,https://github.com/mehaltalukder/UART_UVM_Project.git,2020-11-15 21:03:52+00:00,Verification of UART design using UVM (Universal Verification Methodology) and SystemVerilog,0,mehaltalukder/UART_UVM_Project,313122835,SystemVerilog,UART_UVM_Project,16,5,2024-02-10 15:51:32+00:00,[],
5687,https://github.com/AFEI1100/easyUVM-master.git,2020-12-01 05:48:51+00:00,,4,AFEI1100/easyUVM-master,317438142,SystemVerilog,easyUVM-master,9,5,2023-11-27 06:14:10+00:00,[],https://api.github.com/licenses/mit
5688,https://github.com/teekamkhandelwal/memory_verification_using_system_verilog.git,2020-11-24 03:55:47+00:00,In this respiratory having two verification methods first have without scoreboard and monitor and second with includes all component,0,teekamkhandelwal/memory_verification_using_system_verilog,315512848,SystemVerilog,memory_verification_using_system_verilog,43,5,2023-10-18 12:25:50+00:00,[],https://api.github.com/licenses/unlicense
5689,https://github.com/letitbe0201/NOC-Switch.git,2020-11-22 15:59:03+00:00,,0,letitbe0201/NOC-Switch,315075471,SystemVerilog,NOC-Switch,292,5,2024-02-04 06:47:04+00:00,[],
5690,https://github.com/IAIK/coco-ibex.git,2020-11-18 07:04:38+00:00,,3,IAIK/coco-ibex,313850861,SystemVerilog,coco-ibex,1294,5,2023-02-16 06:58:11+00:00,[],https://api.github.com/licenses/apache-2.0
5691,https://github.com/jieltan/project-v-open.git,2020-12-01 00:31:02+00:00,This is a pipelined in-order RISC-V processor that can run RV-I and part of RV-M instructions.,0,jieltan/project-v-open,317381693,SystemVerilog,project-v-open,300,5,2024-04-09 04:47:30+00:00,[],https://api.github.com/licenses/mit
5692,https://github.com/taneroksuz/wolv-z0.git,2021-01-15 16:43:46+00:00,Wolv Z0 is a RISC-V CPU core,3,taneroksuz/wolv-z0,329968686,SystemVerilog,wolv-z0,462,5,2023-09-07 05:42:02+00:00,"['risc-v', 'hardware', 'cpu', 'rv32', 'core', 'fpga']",https://api.github.com/licenses/apache-2.0
5693,https://github.com/dramforever/riscarlet.git,2020-12-31 06:49:10+00:00,"Work in progress, RISC-V in Scarlet",0,dramforever/riscarlet,325735441,SystemVerilog,riscarlet,36,5,2022-08-26 11:28:44+00:00,[],https://api.github.com/licenses/mit
5694,https://github.com/egorman44/1G-PCS-VIP.git,2020-11-17 08:29:38+00:00,UVM component that could be used in your Verification environment,1,egorman44/1G-PCS-VIP,313554553,SystemVerilog,1G-PCS-VIP,52,5,2023-04-24 14:45:46+00:00,[],
5695,https://github.com/Cra2yPierr0t/stm32_acc.git,2020-12-02 06:08:53+00:00,SPIで制御出来るアクセラレータ,0,Cra2yPierr0t/stm32_acc,317767121,SystemVerilog,stm32_acc,277,4,2022-12-08 23:54:00+00:00,[],
5696,https://github.com/taneroksuz/aes.git,2021-03-04 17:20:44+00:00,Hardware and software implementation of AES algorithm,2,taneroksuz/aes,344553142,SystemVerilog,aes,100,4,2024-03-24 18:14:10+00:00,"['hardware', 'software', 'aes', 'algorithm', 'fpga']",https://api.github.com/licenses/apache-2.0
5698,https://github.com/kumarrishav14/ALU_UVM.git,2020-12-09 13:10:37+00:00,UVM Test bench for a 8-bit ALU,1,kumarrishav14/ALU_UVM,319960271,SystemVerilog,ALU_UVM,78,4,2023-12-02 03:28:54+00:00,"['uvm', 'alu', 'design-verification', 'system-verilog']",https://api.github.com/licenses/mit
5699,https://github.com/2bitsin/FPGAme.git,2020-12-30 02:43:23+00:00,FPGAme,0,2bitsin/FPGAme,325437287,SystemVerilog,FPGAme,2245,4,2023-11-21 13:56:46+00:00,[],
5700,https://github.com/1009qjm/Block-matrix-multiplication.git,2021-03-23 06:53:01+00:00,,1,1009qjm/Block-matrix-multiplication,350609125,SystemVerilog,Block-matrix-multiplication,10,4,2024-01-15 12:10:35+00:00,[],
5701,https://github.com/VSHEV92/AXIS_to_UART.git,2020-12-25 07:11:41+00:00,IP-ядро преобразующее AXI-Stream в UART и обратно,1,VSHEV92/AXIS_to_UART,324309261,SystemVerilog,AXIS_to_UART,2784,4,2024-02-04 16:37:08+00:00,[],
5702,https://github.com/analogdevicesinc/testbenches.git,2020-12-14 13:46:30+00:00,Testbenches for HDL projects,18,analogdevicesinc/testbenches,321361021,SystemVerilog,testbenches,1103,4,2023-11-01 10:18:36+00:00,[],https://api.github.com/licenses/gpl-2.0
5703,https://github.com/WasabiFan/apio-upduino-template.git,2021-02-07 06:54:29+00:00,Opinionated starter project for the UPduino V3 with apio. Uses sv2v for SystemVerilog support.,0,WasabiFan/apio-upduino-template,336722463,SystemVerilog,apio-upduino-template,26,4,2023-04-14 06:21:21+00:00,[],https://api.github.com/licenses/mit
5704,https://github.com/ShashankVM/generic_systemverilog_designs_library.git,2021-02-14 14:52:23+00:00,"A library of useful, fully parameterized RTL designs implemented in SystemVerilog.",1,ShashankVM/generic_systemverilog_designs_library,338828597,SystemVerilog,generic_systemverilog_designs_library,40,4,2024-03-16 05:16:24+00:00,"['digital-logic-design', 'systemverilog', 'basic-learning']",https://api.github.com/licenses/bsd-3-clause
5705,https://github.com/taneroksuz/sha.git,2021-03-28 14:26:37+00:00,Hardware and Software Implementation of SHA Algorithm,1,taneroksuz/sha,352350761,SystemVerilog,sha,138,4,2024-03-24 18:13:10+00:00,"['hardware', 'software', 'sha-1', 'sha-2', 'sha', 'algorithm', 'fpga']",https://api.github.com/licenses/apache-2.0
5706,https://github.com/vnegnev/marga.git,2020-12-06 15:59:33+00:00,Flow-based streaming ocra controller,3,vnegnev/marga,319072116,SystemVerilog,marga,232,3,2023-01-07 17:27:13+00:00,[],https://api.github.com/licenses/gpl-3.0
5707,https://github.com/saipra99/AHB_APB_Assertions.git,2021-03-20 13:23:17+00:00,,0,saipra99/AHB_APB_Assertions,349731399,SystemVerilog,AHB_APB_Assertions,3,3,2022-10-17 08:16:52+00:00,[],
5708,https://github.com/endereyewxy/NaiveMIPS.git,2020-12-21 02:08:33+00:00,,0,endereyewxy/NaiveMIPS,323207347,SystemVerilog,NaiveMIPS,14457,3,2023-01-27 23:44:35+00:00,[],
5709,https://github.com/susansun1999/eecs570_final_project.git,2021-03-02 01:52:22+00:00,,0,susansun1999/eecs570_final_project,343613548,SystemVerilog,eecs570_final_project,20902,3,2024-04-12 03:07:56+00:00,[],
5710,https://github.com/Hong-Ming/FPGA-Oscilloscope.git,2020-11-17 19:14:13+00:00,Building a simple oscilloscope using FPGA board and PCB.,1,Hong-Ming/FPGA-Oscilloscope,313718317,SystemVerilog,FPGA-Oscilloscope,63840,3,2023-09-24 19:25:23+00:00,"['fpga', 'systemverilog', 'pcb-layout']",
5711,https://github.com/techav-homebrew/SE-Exp30.git,2021-03-21 05:35:24+00:00,68030 & 68882 accelerator card for the Macintosh SE,0,techav-homebrew/SE-Exp30,349909233,SystemVerilog,SE-Exp30,989,3,2024-03-26 08:01:08+00:00,[],
5712,https://github.com/samarth2317/verification_i2c_uvm.git,2020-11-17 07:40:54+00:00,,0,samarth2317/verification_i2c_uvm,313543105,SystemVerilog,verification_i2c_uvm,29,3,2023-10-08 05:27:33+00:00,[],
5713,https://github.com/4caster/de0-nano-matlab-to-axi.git,2020-11-19 20:01:03+00:00,Description of method of matlab-to-fpga memory access using matlab jtag master,0,4caster/de0-nano-matlab-to-axi,314356554,SystemVerilog,de0-nano-matlab-to-axi,235,3,2022-12-25 10:11:36+00:00,[],
5714,https://github.com/punzik/sugar-lissajous.git,2021-02-28 15:48:47+00:00,Light organ on iCESugar board,0,punzik/sugar-lissajous,343143731,SystemVerilog,sugar-lissajous,3854,3,2023-06-22 14:54:52+00:00,[],https://api.github.com/licenses/mit
5715,https://github.com/RPTU-EIS/symbolic-pmp.git,2021-03-25 09:53:46+00:00,This repository contains a symbolic and secure configuration template for the RISC-V Physical Memory Protection (PMP) to be used in SV/SVA based verification flows.,0,RPTU-EIS/symbolic-pmp,351385661,SystemVerilog,symbolic-pmp,3,3,2024-03-15 13:42:59+00:00,[],
5716,https://github.com/VSHEV92/FIFO_MIG_BASED_AXI.git,2021-03-01 17:00:18+00:00,"IP-ядро, реализующее Fifo на основе DDR памяти и MIG c AXI4 Memory Map Interface",1,VSHEV92/FIFO_MIG_BASED_AXI,343492058,SystemVerilog,FIFO_MIG_BASED_AXI,3587,3,2024-03-27 04:58:16+00:00,[],
5717,https://github.com/CaiB/CCHW.git,2021-01-27 22:31:08+00:00,"ColorChordHW: real-time chromatic music visualizer, but implemented for FPGA and ASIC. Group project for EE477 at UW Seattle.",0,CaiB/CCHW,333578073,SystemVerilog,CCHW,11305,3,2023-12-24 20:20:52+00:00,"['music', 'music-visualizer', 'visualizers', 'fpga', 'audio', 'colorchord']",
5718,https://github.com/WonHoYoo/axi2mem.git,2021-03-07 10:29:30+00:00,AXI4 to Memory Interface ,0,WonHoYoo/axi2mem,345317185,SystemVerilog,axi2mem,10,3,2024-01-04 08:57:33+00:00,[],
5719,https://github.com/EECS3216Z-W21/tictactoe.git,2021-03-19 18:18:58+00:00,,0,EECS3216Z-W21/tictactoe,349517407,SystemVerilog,tictactoe,494,3,2021-04-12 15:48:08+00:00,[],
5720,https://github.com/pulp-platform/hypnos.git,2021-01-11 14:30:47+00:00,,1,pulp-platform/hypnos,328690913,SystemVerilog,hypnos,111,3,2023-11-14 07:28:22+00:00,[],
5721,https://github.com/Soham-coder/uvm_course_cadence.git,2021-01-12 12:53:17+00:00,Labs for UVM in Cadence Xcelium,1,Soham-coder/uvm_course_cadence,328986222,SystemVerilog,uvm_course_cadence,946,3,2024-02-04 17:30:48+00:00,[],
5722,https://github.com/LukeyReyno/DecimalToBinaryGame.git,2020-12-09 20:34:23+00:00,Game Designed for Basys3 board,0,LukeyReyno/DecimalToBinaryGame,320072821,SystemVerilog,DecimalToBinaryGame,41,3,2023-12-26 15:29:16+00:00,[],
5723,https://github.com/AI-Vector-Accelerator/cv32e40p.git,2021-01-18 15:46:33+00:00,A fork of the Open Hardware Group CV32E40P core with light modifications to enable better APU device autonomy.,3,AI-Vector-Accelerator/cv32e40p,330713761,SystemVerilog,cv32e40p,4671,3,2023-04-29 18:32:38+00:00,[],
5724,https://github.com/AnduinD/flowingLED.git,2020-12-11 14:10:32+00:00,数电流水灯仿真 verilog,0,AnduinD/flowingLED,320591936,SystemVerilog,flowingLED,8475,3,2023-08-12 04:16:48+00:00,[],
5725,https://github.com/ljk98116/mips_simple_sram.git,2021-01-10 15:38:04+00:00,当前为六级流水线，目前仅能通过龙芯sram测试的89个功能点，sram测试工程下仅60MHz,0,ljk98116/mips_simple_sram,328417050,SystemVerilog,mips_simple_sram,29,3,2021-12-05 14:10:25+00:00,[],
5726,https://github.com/Cra2yPierr0t/cprv32g.git,2021-01-12 13:38:44+00:00,まともなRISC-V CPU,1,Cra2yPierr0t/cprv32g,328998351,SystemVerilog,cprv32g,6,3,2022-12-08 23:54:07+00:00,[],
5727,https://github.com/vccheng2001/NeoPixel-LED-Controller.git,2020-11-30 19:09:17+00:00,,0,vccheng2001/NeoPixel-LED-Controller,317320436,SystemVerilog,NeoPixel-LED-Controller,475,3,2022-06-14 17:01:27+00:00,[],
5728,https://github.com/QianfengClarkShen/easyobv.git,2021-01-22 22:29:53+00:00,An on board verification framework for Xilinx FPGAs,1,QianfengClarkShen/easyobv,332077226,SystemVerilog,easyobv,108,2,2023-09-30 02:10:07+00:00,[],https://api.github.com/licenses/mit
5729,https://github.com/dh73/fpv_initial.git,2021-02-19 05:50:32+00:00,Dummy tests,0,dh73/fpv_initial,340271588,SystemVerilog,fpv_initial,21,2,2022-07-02 23:08:55+00:00,[],
5730,https://github.com/seanpm2001/SNU_2D_ProgrammingTools_IDE_SystemVerilog.git,2020-12-01 03:24:38+00:00,The System Verilog Programming language IDE submodule for SNU Programming Tools (2D Mode) ,2,seanpm2001/SNU_2D_ProgrammingTools_IDE_SystemVerilog,317413364,SystemVerilog,SNU_2D_ProgrammingTools_IDE_SystemVerilog,1311,2,2022-09-24 06:36:11+00:00,"['gpl3', 'gplv3', 'ide', 'programming', 'snu', 'snu-2d', 'snu-2d-programming-tools', 'snu-2d-programmingtools', 'snu-development', 'snu-programming-tools', 'snu2d-programmingtools', 'snu2dprogrammingtools', 'snuprogrammingtools', 'systemverilog', 'systemverilog-lang', 'systemverilog-language', 'web-ide']",https://api.github.com/licenses/gpl-3.0
5731,https://github.com/Tan-YiFan/mycpu.git,2021-03-21 02:04:03+00:00,,0,Tan-YiFan/mycpu,349879236,SystemVerilog,mycpu,22,2,2023-02-25 07:35:52+00:00,[],
5732,https://github.com/guillegil/sv-verification-example.git,2021-03-22 21:48:01+00:00,Simple memory testbench using SystemVerilog techniques,0,guillegil/sv-verification-example,350499009,SystemVerilog,sv-verification-example,24,2,2022-06-02 18:28:31+00:00,[],https://api.github.com/licenses/gpl-3.0
5733,https://github.com/litex-hub/pythondata-misc-opentitan.git,2021-02-15 20:25:31+00:00,Python module containing resources files for opentitan misc (for use with LiteX).,1,litex-hub/pythondata-misc-opentitan,339197621,SystemVerilog,pythondata-misc-opentitan,81682,2,2023-09-07 05:42:05+00:00,[],https://api.github.com/licenses/apache-2.0
5734,https://github.com/litex-hub/pythondata-cpu-ibex.git,2021-02-15 15:57:07+00:00,Python module containing system_verilog files for ibex cpu (for use with LiteX).,3,litex-hub/pythondata-cpu-ibex,339128468,SystemVerilog,pythondata-cpu-ibex,11784,2,2023-09-07 05:42:05+00:00,[],https://api.github.com/licenses/apache-2.0
5735,https://github.com/redchenjs/hxdsoc.git,2021-03-28 11:28:07+00:00,HXD SoC (HXD32 RV32I/E[C]),0,redchenjs/hxdsoc,352311015,SystemVerilog,hxdsoc,63291,2,2023-09-07 05:42:08+00:00,[],
5736,https://github.com/Jefferson-Lopes/projeto-LCL.git,2020-12-01 01:17:49+00:00,,0,Jefferson-Lopes/projeto-LCL,317389491,SystemVerilog,projeto-LCL,34108,2,2021-04-15 16:33:54+00:00,[],
5737,https://github.com/ArmorAmiga/WM1200_fpga.git,2020-11-21 19:27:44+00:00,WM1200 prototype fpga logic,2,ArmorAmiga/WM1200_fpga,314887889,SystemVerilog,WM1200_fpga,5,2,2021-06-18 08:24:12+00:00,[],
5738,https://github.com/shawshank96/AMBA-APB.git,2020-12-15 07:05:18+00:00,Design and Verification of AMBA APB slave,1,shawshank96/AMBA-APB,321581737,SystemVerilog,AMBA-APB,30,2,2021-11-16 09:18:39+00:00,[],
5739,https://github.com/nick-nuti/EE272_SYSVERILOG_BUS.git,2021-01-05 07:36:35+00:00,SJSU MSEE272 Fall 2020 Final Project (Professor Morris Jones): AHB Bus (Utilizing Round Robin Arbitration) with one master device and 4 slave devices. Each of the 4 slave devices have a NOC (Network on chip) that feed packets into 4 individual SHA3 permutation engines. The data for every device is then sent back to the master for checking.,0,nick-nuti/EE272_SYSVERILOG_BUS,326922682,SystemVerilog,EE272_SYSVERILOG_BUS,2278,2,2022-09-15 23:11:27+00:00,[],
5740,https://github.com/cyb0124/FPGA-Music.git,2021-03-25 21:08:26+00:00,FPGA multitrack sequencer and synthesizer,1,cyb0124/FPGA-Music,351576352,SystemVerilog,FPGA-Music,50,2,2024-03-03 02:52:56+00:00,[],
5741,https://github.com/matthewbconn/EE552_Project.git,2021-03-29 20:07:41+00:00,"Asynchronous VLSI, Spring 2021, Dr. Peter Beerel.  Co-author Ahmed Abuhjar",1,matthewbconn/EE552_Project,352771040,SystemVerilog,EE552_Project,62,2,2024-04-01 02:34:19+00:00,[],
5742,https://github.com/romychs/OPro-COM-AY.git,2021-02-05 12:26:25+00:00,Two serial ports and AY-sound board for Orion-PRO amateur personal computer,0,romychs/OPro-COM-AY,336264894,SystemVerilog,OPro-COM-AY,2721,2,2022-01-22 18:15:52+00:00,[],
5743,https://github.com/PassantSamirkh/SimpleAdderTestbench_SystemVerilog-with-and-without-classes.git,2021-03-07 00:07:05+00:00,,0,PassantSamirkh/SimpleAdderTestbench_SystemVerilog-with-and-without-classes,345222340,SystemVerilog,SimpleAdderTestbench_SystemVerilog-with-and-without-classes,56,2,2022-08-03 02:54:17+00:00,[],
5744,https://github.com/srg320/32X.git,2020-12-18 08:41:28+00:00,,1,srg320/32X,322537793,SystemVerilog,32X,107,2,2023-01-27 19:16:31+00:00,[],
5745,https://github.com/jaycordaro/spi_slave_simple.git,2020-12-07 17:08:11+00:00,Simple System Verilog implementation of SPI Slave,1,jaycordaro/spi_slave_simple,319389089,SystemVerilog,spi_slave_simple,131,2,2024-03-15 14:25:32+00:00,[],https://api.github.com/licenses/bsd-2-clause
5746,https://github.com/1009qjm/axi_lite-and-axi-full-test.git,2021-03-10 04:52:59+00:00,,1,1009qjm/axi_lite-and-axi-full-test,346235638,SystemVerilog,axi_lite-and-axi-full-test,14,2,2022-06-23 15:02:58+00:00,[],
5747,https://github.com/hhoswaldo/Gumnut-Core-Processor.git,2021-03-20 17:03:44+00:00,"Gumnut CPU from ""An Embedded Systems Approach Using Verilog"" - Peter Ashenden",1,hhoswaldo/Gumnut-Core-Processor,349786504,SystemVerilog,Gumnut-Core-Processor,284,2,2022-08-19 15:58:59+00:00,[],https://api.github.com/licenses/mit
5748,https://github.com/UofT-HPRC/NMU.git,2021-01-19 21:50:30+00:00,Network Management Unit Source,1,UofT-HPRC/NMU,331119131,SystemVerilog,NMU,57,2,2022-12-19 19:21:53+00:00,[],
5749,https://github.com/moonishav1997/ambabridge.git,2020-12-02 10:30:01+00:00,The Advanced Microcontroller Bus Architecture (AMBA) is an on-chip bus architecture used to strengthen the reusability of IP core and widely used interconnection standard for system on chip (SOC). To synthesize and simulate a complex interface bridge between Advanced High performance Bus (AHB) and Advanced Peripheral Bus (APB) known as AHB2APB Bridge,0,moonishav1997/ambabridge,317826746,SystemVerilog,ambabridge,31,2,2022-06-26 09:04:54+00:00,[],
5750,https://github.com/CookDarwin/exp_frequency.git,2021-01-02 14:22:04+00:00,基于FPGA的频率测量，能测量方波信号的频率、占空比、相位差。范围100MHz~200MHz，精度0.0001Hz,0,CookDarwin/exp_frequency,326198645,SystemVerilog,exp_frequency,2,2,2023-11-14 07:12:00+00:00,[],
5751,https://github.com/jay20162016/fomu_async.git,2021-02-18 14:40:33+00:00,Asynchronous Circuits on FOMU!,1,jay20162016/fomu_async,340078877,SystemVerilog,fomu_async,49,2,2021-10-10 21:32:57+00:00,[],https://api.github.com/licenses/gpl-3.0
5752,https://github.com/Rafa350/riscv.git,2020-12-11 11:19:30+00:00,Experimental RISCV implementation,0,Rafa350/riscv,320552942,SystemVerilog,riscv,817,2,2023-06-30 17:04:36+00:00,"['fpga', 'riscv', 'de0-nano', 'simulation', 'verilator']",
5753,https://github.com/PXVI/ip_amba_ahb_ms_rtl_v.git,2020-12-05 12:12:31+00:00,RTL design for the AMBA AHB protocol.,2,PXVI/ip_amba_ahb_ms_rtl_v,318779599,SystemVerilog,ip_amba_ahb_ms_rtl_v,111,2,2023-08-31 11:01:29+00:00,[],https://api.github.com/licenses/mit
5754,https://github.com/maZymaZe/-mips-cpu.git,2021-03-17 15:43:53+00:00,,1,maZymaZe/-mips-cpu,348764397,SystemVerilog,-mips-cpu,236,2,2022-05-14 05:28:49+00:00,[],
5755,https://github.com/lild4d4/ARM-CPU.git,2020-12-03 16:13:58+00:00,basic arm cpu without and with 5 stage pipelining,1,lild4d4/ARM-CPU,318249853,SystemVerilog,ARM-CPU,788,2,2023-11-04 23:58:21+00:00,[],
5756,https://github.com/teekamkhandelwal/two-port-switch-test.git,2020-11-25 08:04:54+00:00,two port switch contaning router,0,teekamkhandelwal/two-port-switch-test,315869549,SystemVerilog,two-port-switch-test,30,2,2021-04-28 18:23:22+00:00,[],https://api.github.com/licenses/mpl-2.0
5757,https://github.com/dhaivat7/MUX_Assertions.git,2021-01-10 04:09:20+00:00,Basic Project on System Verilog Assertion,0,dhaivat7/MUX_Assertions,328300406,SystemVerilog,MUX_Assertions,7,1,2021-01-31 22:53:41+00:00,[],
5758,https://github.com/AkarshNKolekar/Mesh_NoC_RTL_Gen-Wormhole_Router.git,2021-02-21 19:46:24+00:00,,0,AkarshNKolekar/Mesh_NoC_RTL_Gen-Wormhole_Router,340988925,SystemVerilog,Mesh_NoC_RTL_Gen-Wormhole_Router,55,1,2022-04-01 20:34:42+00:00,[],https://api.github.com/licenses/gpl-3.0
5760,https://github.com/Hong-Ming/Huffman-Codeing-IC.git,2020-11-17 21:29:24+00:00,Implemented 8-bit Huffman coding algorithm using SystemVerilog.,0,Hong-Ming/Huffman-Codeing-IC,313747608,SystemVerilog,Huffman-Codeing-IC,12,1,2022-10-19 00:49:21+00:00,['systemverilog'],
5761,https://github.com/teilairwin/CMPE_212_ProjectGroup4.git,2020-12-06 17:20:13+00:00,Repo for our final project.,0,teilairwin/CMPE_212_ProjectGroup4,319089073,SystemVerilog,CMPE_212_ProjectGroup4,31,1,2020-12-15 01:26:42+00:00,[],
5762,https://github.com/kropotin4/SystemVerilog-examples.git,2021-03-04 10:05:42+00:00,Попытка написать несколько примеров кода на языке SystemVerilog.,0,kropotin4/SystemVerilog-examples,344429304,SystemVerilog,SystemVerilog-examples,26,1,2021-03-12 10:29:39+00:00,"['questasim', 'systemverilog', 'rtl']",
5763,https://github.com/ildus/midi_fpga.git,2020-12-28 19:23:18+00:00,MIDI footswitch controller on iCE40HX1K-EVB,0,ildus/midi_fpga,325097857,SystemVerilog,midi_fpga,1690,1,2022-02-24 11:56:12+00:00,[],https://api.github.com/licenses/gpl-3.0
5764,https://github.com/Mariummasood/RiscV-5-stage-pipeline-.git,2021-03-06 08:54:24+00:00,five stage pipeline R32I,0,Mariummasood/RiscV-5-stage-pipeline-,345048384,SystemVerilog,RiscV-5-stage-pipeline-,8,1,2022-05-02 21:55:48+00:00,[],
5765,https://github.com/yumaueda/aes.git,2020-11-24 04:28:59+00:00,Fully pipelined AES module written in SystemVerilog. WIP.,1,yumaueda/aes,315518270,SystemVerilog,aes,62,1,2023-11-30 14:51:23+00:00,[],
5766,https://github.com/18520474/AnhAnh.git,2021-03-02 07:43:24+00:00,,2,18520474/AnhAnh,343687186,SystemVerilog,AnhAnh,890903,1,2021-07-21 06:33:36+00:00,[],
5767,https://github.com/abdullahmemisoglu/systemverilog.git,2021-02-17 13:13:54+00:00,Intel ModelSIM,1,abdullahmemisoglu/systemverilog,339728575,SystemVerilog,systemverilog,135,1,2022-07-14 14:53:05+00:00,[],
5768,https://github.com/CookDarwin/axi_tdl.git,2021-02-19 15:35:49+00:00,Axi is a light weight axi library. Tdl is a hardware Construction language,1,CookDarwin/axi_tdl,340412601,SystemVerilog,axi_tdl,1549,1,2022-07-17 13:29:26+00:00,[],https://api.github.com/licenses/lgpl-2.1
5769,https://github.com/hdl-util/unipolar-rz.git,2021-02-28 21:01:09+00:00,,0,hdl-util/unipolar-rz,343213713,SystemVerilog,unipolar-rz,2889,1,2022-04-12 07:27:48+00:00,[],
5770,https://github.com/weicolor0502/xge_mac_SV_UVM_tb.git,2020-12-15 03:08:52+00:00,,1,weicolor0502/xge_mac_SV_UVM_tb,321538076,SystemVerilog,xge_mac_SV_UVM_tb,30,1,2023-04-07 21:41:35+00:00,[],
5771,https://github.com/nmoroze/opentitan-kronos.git,2021-01-15 05:57:47+00:00,Fork of OpenTitan with modifications for Kronos ,1,nmoroze/opentitan-kronos,329822595,SystemVerilog,opentitan-kronos,10415,1,2021-12-10 17:05:44+00:00,[],https://api.github.com/licenses/apache-2.0
5772,https://github.com/Skallwar/rv32i-pico.git,2021-02-16 16:09:39+00:00,,0,Skallwar/rv32i-pico,339454352,SystemVerilog,rv32i-pico,51,1,2021-04-11 10:23:40+00:00,[],https://api.github.com/licenses/gpl-2.0
5773,https://github.com/Amrit-Raj-Official/32-bit-Instruction-Word-Register.git,2021-02-17 12:47:29+00:00,,1,Amrit-Raj-Official/32-bit-Instruction-Word-Register,339721695,SystemVerilog,32-bit-Instruction-Word-Register,44,1,2024-01-15 17:20:53+00:00,[],
5774,https://github.com/jmerdich/mr-soc.git,2020-12-30 21:32:36+00:00,Mr. SOC - Merdich RISC-V SOC,0,jmerdich/mr-soc,325652115,SystemVerilog,mr-soc,156,1,2024-03-02 12:09:43+00:00,[],https://api.github.com/licenses/mit
5775,https://github.com/Phzera/SVmodules.git,2020-12-29 01:41:04+00:00,SystemVerilog examples for digital eletronics and FPGA learning. ,0,Phzera/SVmodules,325158006,SystemVerilog,SVmodules,109,1,2023-06-04 09:49:03+00:00,[],
5776,https://github.com/Soham-coder/Presync.git,2020-12-17 18:22:42+00:00,,0,Soham-coder/Presync,322378218,SystemVerilog,Presync,12281,1,2022-01-10 21:52:47+00:00,[],
5777,https://github.com/Cathuber/sv_fork_disable.git,2020-12-29 16:05:02+00:00,SystemVerilog fork disable code examples,0,Cathuber/sv_fork_disable,325329781,SystemVerilog,sv_fork_disable,8,1,2021-07-30 23:03:35+00:00,[],
5778,https://github.com/kat066/ISA.git,2021-02-16 09:56:14+00:00,9 bit ISA for CSE141L,0,kat066/ISA,339353273,SystemVerilog,ISA,85966,1,2021-05-02 14:02:28+00:00,[],
5779,https://github.com/AnkitaMoholkar/UVM_ALU_Sequence.git,2021-02-19 07:49:50+00:00,,1,AnkitaMoholkar/UVM_ALU_Sequence,340295576,SystemVerilog,UVM_ALU_Sequence,8,1,2021-02-25 20:14:37+00:00,[],
5780,https://github.com/rubywangruobin/ECE385_Rhythm_Master.git,2021-01-24 16:50:10+00:00,,0,rubywangruobin/ECE385_Rhythm_Master,332502495,SystemVerilog,ECE385_Rhythm_Master,1123,1,2022-07-14 17:32:23+00:00,[],
5781,https://github.com/hao310rui140326/my_uvm_3ch.git,2021-02-05 00:40:26+00:00,,0,hao310rui140326/my_uvm_3ch,336121918,SystemVerilog,my_uvm_3ch,8224,1,2021-06-29 07:43:10+00:00,[],
5782,https://github.com/mowaida/Distributed-DecisionTree.git,2021-03-17 15:28:58+00:00,,0,mowaida/Distributed-DecisionTree,348759626,SystemVerilog,Distributed-DecisionTree,120,1,2023-02-07 05:06:50+00:00,[],https://api.github.com/licenses/gpl-3.0
5783,https://github.com/gishmaya/second_version_for_switch_standard_UVM.git,2021-01-24 09:33:01+00:00,My second version of verification environment for packet switch by the standard classes of UVM.,0,gishmaya/second_version_for_switch_standard_UVM,332410733,SystemVerilog,second_version_for_switch_standard_UVM,57,1,2021-06-17 07:15:46+00:00,[],
5784,https://github.com/NikhilBellad/cache-design.git,2021-03-08 21:54:12+00:00,,0,NikhilBellad/cache-design,345805724,SystemVerilog,cache-design,2,1,2022-06-10 00:14:09+00:00,[],
5785,https://github.com/AnkitaMoholkar/UVM_Messages-.git,2021-02-19 07:22:03+00:00,,0,AnkitaMoholkar/UVM_Messages-,340289637,SystemVerilog,UVM_Messages-,11,1,2021-03-21 07:06:08+00:00,[],
5786,https://github.com/deveshasnani/System_Verilog.git,2021-02-06 09:42:35+00:00,,0,deveshasnani/System_Verilog,336503300,SystemVerilog,System_Verilog,807,1,2022-06-03 09:31:54+00:00,[],
5787,https://github.com/HaoCheLee/I2C_Single_Master.git,2020-11-18 05:24:23+00:00,,0,HaoCheLee/I2C_Single_Master,313831782,SystemVerilog,I2C_Single_Master,18,1,2023-07-01 03:53:23+00:00,[],
5788,https://github.com/DavidDanD/PULPenix_AES.git,2020-11-29 06:53:26+00:00,PULPenix microcontroller with build-in AES engine,1,DavidDanD/PULPenix_AES,316893785,SystemVerilog,PULPenix_AES,48369,1,2021-05-24 04:46:16+00:00,[],
5789,https://github.com/taichi-ishitani/rtl_with_di.git,2020-12-05 14:46:01+00:00,RTL で依存性の注入（っぽいこと）をする,0,taichi-ishitani/rtl_with_di,318812551,SystemVerilog,rtl_with_di,2,1,2022-02-17 22:09:11+00:00,[],https://api.github.com/licenses/mit
5790,https://github.com/saremshal/2D-DCT-8BIT.git,2020-11-20 20:13:19+00:00,,0,saremshal/2D-DCT-8BIT,314659327,SystemVerilog,2D-DCT-8BIT,7666,1,2023-03-08 10:55:13+00:00,[],
5791,https://github.com/taneroksuz/wolv-z3.git,2020-12-06 17:18:31+00:00,Wolv Z3 is a RISC-V CPU core,3,taneroksuz/wolv-z3,319088725,SystemVerilog,wolv-z3,490,1,2023-05-01 02:34:44+00:00,"['risc-v', 'hardware', 'rv32', 'cpu', 'core', 'fpga']",https://api.github.com/licenses/apache-2.0
5792,https://github.com/palnikola1996/ASIC-Design-SHA3-256-Permutation-Engine.git,2021-02-14 21:06:10+00:00,SHA3-256 is an encryption algorithm. The project is designed using System Verilog and synthesised using Synopsys DC,0,palnikola1996/ASIC-Design-SHA3-256-Permutation-Engine,338901970,SystemVerilog,ASIC-Design-SHA3-256-Permutation-Engine,2324,1,2022-03-10 06:11:46+00:00,[],
5793,https://github.com/WasabiFan/pipelined-rv32i-core.git,2021-02-07 06:58:59+00:00,"A toy RISC-V processor design implemented in SystemVerilog, targeting FPGA.",0,WasabiFan/pipelined-rv32i-core,336723184,SystemVerilog,pipelined-rv32i-core,136,1,2022-03-01 01:12:17+00:00,[],
5794,https://github.com/VSHEV92/FIFO_MIG_BASED.git,2021-01-14 16:47:56+00:00,AXI-Stream Fifo на основе DDR памяти с использованием MIG c Native Interface,1,VSHEV92/FIFO_MIG_BASED,329676797,SystemVerilog,FIFO_MIG_BASED,8416,1,2023-03-16 02:53:05+00:00,[],
5796,https://github.com/ChristianKouris/bitcoin-hash.git,2020-12-27 05:28:55+00:00,A bitcoin hasher done in SystemVerilog,0,ChristianKouris/bitcoin-hash,324693555,SystemVerilog,bitcoin-hash,9742,1,2021-03-29 23:29:17+00:00,[],
5797,https://github.com/salsina/Digital-Logic-Design.git,2021-03-10 20:16:14+00:00,Gate Level Structures and Simple Functional Structures in Verilog,0,salsina/Digital-Logic-Design,346480490,SystemVerilog,Digital-Logic-Design,25,1,2021-07-04 21:15:00+00:00,[],
5798,https://github.com/dh73/appnotes_sandbox.git,2021-03-03 04:25:58+00:00,,0,dh73/appnotes_sandbox,344000606,SystemVerilog,appnotes_sandbox,8,1,2022-07-02 23:11:38+00:00,[],
5799,https://github.com/Ee1ks/FPGA-VGA-textmode.git,2021-02-24 21:05:13+00:00,Text mode VGA driver,0,Ee1ks/FPGA-VGA-textmode,342035447,SystemVerilog,FPGA-VGA-textmode,19630,1,2021-02-27 12:16:22+00:00,[],
5800,https://github.com/pragya77/SPI-protocol-using-UVM.git,2021-01-24 23:51:41+00:00,,0,pragya77/SPI-protocol-using-UVM,332583128,SystemVerilog,SPI-protocol-using-UVM,68,1,2022-05-10 11:23:07+00:00,[],
5801,https://github.com/Jun0951/32-bit-FPadder.git,2021-01-21 14:04:46+00:00,,0,Jun0951/32-bit-FPadder,331646432,SystemVerilog,32-bit-FPadder,5,1,2022-11-27 18:22:19+00:00,[],
5802,https://github.com/Aperture-Electronic/ARP.git,2020-12-16 13:49:50+00:00,,0,Aperture-Electronic/ARP,321996708,SystemVerilog,ARP,685,1,2022-06-18 22:26:22+00:00,[],
5803,https://github.com/quangphan2405/SystemVerilog.git,2021-01-01 11:53:36+00:00,A repo for SystemVerilog self-learning to explore new constructs and features of SystemVerilog compared to Verilog 2001,0,quangphan2405/SystemVerilog,325969740,SystemVerilog,SystemVerilog,1758,1,2022-01-01 11:24:00+00:00,[],
5804,https://github.com/salsina/Digital-Logic-Design-CA4.git,2021-03-10 20:25:02+00:00,"Registers, State machines, and Combinational packages in ""system verilog""",0,salsina/Digital-Logic-Design-CA4,346482527,SystemVerilog,Digital-Logic-Design-CA4,27,1,2021-07-04 21:15:04+00:00,[],
5805,https://github.com/neiman3/basys3battleship.git,2021-03-12 19:44:39+00:00,Battleship game for Basys 3 Xilinx FPGA board.,0,neiman3/basys3battleship,347179926,SystemVerilog,basys3battleship,83,1,2023-11-08 19:46:29+00:00,[],https://api.github.com/licenses/gpl-3.0
5806,https://github.com/AnkitaMoholkar/Network-on-Chip-using-System-Verilog.git,2021-02-25 20:09:07+00:00,,2,AnkitaMoholkar/Network-on-Chip-using-System-Verilog,342366088,SystemVerilog,Network-on-Chip-using-System-Verilog,39,1,2021-02-25 20:12:31+00:00,[],
5807,https://github.com/gannoCal/JPEG-ish-SystemVerilog-Bistream-to-video.git,2021-01-28 17:49:52+00:00,"System Verilog Impliemetation: UART tranmission of bitsream to SRAM, bitstream convert to image mic14 JPEG(ish) format 30Hz",0,gannoCal/JPEG-ish-SystemVerilog-Bistream-to-video,333839409,SystemVerilog,JPEG-ish-SystemVerilog-Bistream-to-video,1014,1,2022-02-20 20:26:23+00:00,[],
5808,https://github.com/seanbrede/Single-Cycle-Processor.git,2021-01-07 01:18:05+00:00,"Implementation of a single-cycle processor in SystemVerilog, with an assembler and compiler, and three cryptographic programs that it can run",0,seanbrede/Single-Cycle-Processor,327469374,SystemVerilog,Single-Cycle-Processor,18280,1,2021-06-20 22:18:43+00:00,[],
5809,https://github.com/DesmondZuo/MIPS32bit_with_branch_prediction_UofT_ECE342.git,2021-03-17 08:57:18+00:00,,0,DesmondZuo/MIPS32bit_with_branch_prediction_UofT_ECE342,348641178,SystemVerilog,MIPS32bit_with_branch_prediction_UofT_ECE342,40,1,2021-06-22 00:47:21+00:00,[],https://api.github.com/licenses/mit
5810,https://github.com/manani13/AHB_Lite.git,2021-02-11 07:33:32+00:00,,0,manani13/AHB_Lite,337959190,SystemVerilog,AHB_Lite,15,1,2021-05-06 02:03:15+00:00,[],
5811,https://github.com/cevero/cevero-ft-core.git,2021-03-11 22:18:40+00:00,CEVERO fault tolerant core,1,cevero/cevero-ft-core,346854613,SystemVerilog,cevero-ft-core,17,1,2021-06-15 22:36:39+00:00,[],
5812,https://github.com/shiban123/Code-Coverage-Projects.git,2020-11-17 02:57:15+00:00,,0,shiban123/Code-Coverage-Projects,313490569,SystemVerilog,Code-Coverage-Projects,17,1,2021-09-30 08:46:54+00:00,[],
5813,https://github.com/uwu64/videowavy.git,2021-03-27 21:51:11+00:00,VGA output on EBAZ4205,0,uwu64/videowavy,352184664,SystemVerilog,videowavy,3145,1,2021-06-26 07:42:19+00:00,[],
5814,https://github.com/aajibade1/MIPS-Processor.git,2020-11-23 20:56:31+00:00,Complete design of a 32-bit 5-stage pipelined MIPS  Processor with an L1 cache with snoopy coherency with achieved Gate-level Frequency of 53MHz and fully synthesised on an FPGA,0,aajibade1/MIPS-Processor,315438823,SystemVerilog,MIPS-Processor,1111,1,2024-03-22 12:12:27+00:00,"['computer-architecture', 'fpga', 'microprocessor', 'system-design', 'system-verilog']",
5815,https://github.com/teekamkhandelwal/adder_substractor.git,2020-11-21 14:36:05+00:00,adder and substractor both are controlled by different control signal,0,teekamkhandelwal/adder_substractor,314831640,SystemVerilog,adder_substractor,38,1,2020-11-24 12:49:31+00:00,[],https://api.github.com/licenses/gpl-3.0
5816,https://github.com/taichi-ishitani/introduction_of_inside_operator.git,2020-11-26 13:54:13+00:00,inside 演算子の紹介,0,taichi-ishitani/introduction_of_inside_operator,316245820,SystemVerilog,introduction_of_inside_operator,2,1,2022-02-17 22:09:28+00:00,[],https://api.github.com/licenses/mit
5817,https://github.com/py-five/pyfive-100.git,2021-01-31 17:43:58+00:00,Python Optimized Risc V Based SOC Design,0,py-five/pyfive-100,334717801,SystemVerilog,pyfive-100,759,1,2022-09-12 21:47:09+00:00,[],https://api.github.com/licenses/apache-2.0
5818,https://github.com/sasakenUT/cpuex2020_core.git,2020-11-27 16:24:50+00:00,,0,sasakenUT/cpuex2020_core,316549626,SystemVerilog,cpuex2020_core,203,1,2023-10-06 00:21:07+00:00,[],
5819,https://github.com/megakun/FPGA-flappy-bird.git,2021-01-06 09:04:58+00:00,,0,megakun/FPGA-flappy-bird,327256652,SystemVerilog,FPGA-flappy-bird,30642,1,2022-05-18 18:45:19+00:00,[],
5820,https://github.com/shiban123/System-Verilog-Projects.git,2020-11-17 02:49:32+00:00,,0,shiban123/System-Verilog-Projects,313488928,SystemVerilog,System-Verilog-Projects,33,1,2021-09-30 08:46:39+00:00,[],
5821,https://github.com/Joseda8/Vector_ASIP.git,2020-11-18 23:51:09+00:00,Proyecto 2 del curso de Arquitectura de Computadores II del Instituto Tecnológico de Costa Rica,0,Joseda8/Vector_ASIP,314087357,SystemVerilog,Vector_ASIP,61,1,2022-06-22 21:52:35+00:00,[],
5822,https://github.com/MosqNet/CnnMaster.git,2021-03-16 08:31:44+00:00,,0,MosqNet/CnnMaster,348269585,SystemVerilog,CnnMaster,25376,1,2022-03-15 03:18:05+00:00,[],
5823,https://github.com/holdenQWER/pattern_wave_dump.git,2021-02-06 08:49:56+00:00,Use EDA tool dumping pattern wave. Just for fun.,2,holdenQWER/pattern_wave_dump,336494399,SystemVerilog,pattern_wave_dump,120,1,2023-06-27 13:58:02+00:00,[],https://api.github.com/licenses/apache-2.0
5824,https://github.com/ECE510-2021-SPRING/PSU_RTL2GDS_28.git,2021-03-27 03:44:28+00:00,,1,ECE510-2021-SPRING/PSU_RTL2GDS_28,351974814,SystemVerilog,PSU_RTL2GDS_28,3896,1,2023-04-10 08:04:19+00:00,[],
5825,https://github.com/AnkitaMoholkar/UVM_Random_Numbers.git,2021-02-19 07:47:26+00:00,,0,AnkitaMoholkar/UVM_Random_Numbers,340295058,SystemVerilog,UVM_Random_Numbers,15,1,2021-03-21 07:06:09+00:00,[],
5826,https://github.com/KorotkiyEugene/fifo.git,2020-11-26 09:20:19+00:00,,0,KorotkiyEugene/fifo,316179959,SystemVerilog,fifo,2,1,2021-05-16 22:32:49+00:00,[],
5827,https://github.com/amirhossein-alizad/MIPS-Single-Cycle-Implementation.git,2021-02-08 18:00:58+00:00,"Single Cycle MIPS Processor implementation, Computer Assignment for Computer Architecture course in University of Tehran",0,amirhossein-alizad/MIPS-Single-Cycle-Implementation,337163473,SystemVerilog,MIPS-Single-Cycle-Implementation,23,1,2022-01-03 00:36:25+00:00,[],https://api.github.com/licenses/gpl-3.0
5828,https://github.com/Joshaby/System-Verilog.git,2021-03-23 18:20:13+00:00,Atividades da disciplina Projeto de Sinais Digitais,0,Joshaby/System-Verilog,350814366,SystemVerilog,System-Verilog,1,1,2021-06-30 17:52:42+00:00,[],
5829,https://github.com/berkayarslan17/Digital-Design.git,2021-03-02 10:25:56+00:00,This repository contains basic examples of digital design that I've worked in ELM235 Digital Design Laboratory.,0,berkayarslan17/Digital-Design,343733796,SystemVerilog,Digital-Design,17,1,2023-05-07 16:45:11+00:00,[],
5830,https://github.com/m1nty/image-decompressor.git,2021-02-09 20:10:15+00:00,Hardware implementation of several types of digital signal processing algorithms under critical latency constraints,0,m1nty/image-decompressor,337523426,SystemVerilog,image-decompressor,2071,1,2021-07-29 15:42:59+00:00,[],
5831,https://github.com/EngRaff92/Memory_Prj.git,2020-12-22 19:22:41+00:00,SRAM project for Cache Coherency ,0,EngRaff92/Memory_Prj,323714242,SystemVerilog,Memory_Prj,8,1,2024-03-22 12:07:32+00:00,[],
5832,https://github.com/0n1shi/fpga-td4.git,2021-02-11 12:14:20+00:00,CPU running on FPGA,0,0n1shi/fpga-td4,338019625,SystemVerilog,fpga-td4,41,1,2021-05-12 02:34:13+00:00,[],https://api.github.com/licenses/mit
5833,https://github.com/Ismael-G/Verilog_arithmetic_functions.git,2021-01-01 13:03:38+00:00,A repository of basic arithmetic functions created using system verilog,0,Ismael-G/Verilog_arithmetic_functions,325980503,SystemVerilog,Verilog_arithmetic_functions,6,1,2021-01-08 01:03:00+00:00,[],
5834,https://github.com/SteliosMouslech/VLSI-Design-Score-4-Game-Project.git,2021-03-16 12:09:28+00:00,"A repository containing the final project on 8th semester subject ""VLSI Design"" implementing the score 4 game on an FPGA with a panel display",1,SteliosMouslech/VLSI-Design-Score-4-Game-Project,348333356,SystemVerilog,VLSI-Design-Score-4-Game-Project,10,1,2021-03-22 22:27:11+00:00,[],
5835,https://github.com/hao310rui140326/my_uvm_demo.git,2021-02-04 03:11:42+00:00,my_uvm_demo,0,hao310rui140326/my_uvm_demo,335823740,SystemVerilog,my_uvm_demo,6954,1,2021-02-04 07:27:30+00:00,[],
5836,https://github.com/mehaltalukder/ALU_UVM_Project.git,2020-11-17 20:22:34+00:00,Verification of a 8-bit ALU design using UVM (Universal Verification Methodology) and SystemVerilog,0,mehaltalukder/ALU_UVM_Project,313733806,SystemVerilog,ALU_UVM_Project,9,1,2023-04-05 11:21:09+00:00,[],
5837,https://github.com/Purdue-SoCET/AFTx06_Public.git,2020-12-02 01:25:43+00:00,,0,Purdue-SoCET/AFTx06_Public,317714332,SystemVerilog,AFTx06_Public,274,1,2022-09-08 20:52:35+00:00,[],https://api.github.com/licenses/apache-2.0
5838,https://github.com/gchinna/vutils_pkg.git,2020-11-28 02:30:26+00:00,SV & UVM verification utilities,0,gchinna/vutils_pkg,316641250,SystemVerilog,vutils_pkg,4,1,2022-05-04 04:34:58+00:00,[],https://api.github.com/licenses/mit
5839,https://github.com/RamAIbot/Angular-E-Commerce.git,2020-11-29 15:12:02+00:00,"An Ecommerce website using Angular JS, Spring Boot, Hibernate and MySQL",0,RamAIbot/Angular-E-Commerce,316978317,SystemVerilog,Angular-E-Commerce,1503,1,2022-11-08 14:55:10+00:00,[],
5840,https://github.com/jaehank2/Pacman.git,2020-11-19 08:23:20+00:00,ECE385 Final Project,0,jaehank2/Pacman,314181708,SystemVerilog,Pacman,8367,1,2023-11-15 03:23:13+00:00,[],
5841,https://github.com/iremsvn/digital-design-labs.git,2021-03-25 19:26:02+00:00,,0,iremsvn/digital-design-labs,351551879,SystemVerilog,digital-design-labs,590,1,2024-02-11 03:38:46+00:00,['systemverilog'],https://api.github.com/licenses/mit
5842,https://github.com/akerlund/VIP.git,2021-03-14 13:25:31+00:00,System Verilog VIP,0,akerlund/VIP,347643699,SystemVerilog,VIP,202,1,2021-10-25 20:59:35+00:00,[],https://api.github.com/licenses/gpl-3.0
5843,https://github.com/akshaypsoni/filehandling_systemverilog.git,2021-03-08 05:29:09+00:00,Reading data from text file as a test vector inputs for verification.,0,akshaypsoni/filehandling_systemverilog,345541002,SystemVerilog,filehandling_systemverilog,16,1,2021-04-16 04:24:19+00:00,[],
5844,https://github.com/MorrisHsia/USB.git,2021-03-08 02:30:33+00:00,USB Full-Speed Bulk-Transfer Endpoint AHB-Lite SoC Module,0,MorrisHsia/USB,345507842,SystemVerilog,USB,960,1,2021-07-20 04:56:30+00:00,[],
5845,https://github.com/xiesicong/fpga_hdmi.git,2021-03-15 08:18:36+00:00,FPGA  HDMI驱动,0,xiesicong/fpga_hdmi,347888045,SystemVerilog,fpga_hdmi,100,1,2021-03-15 12:00:21+00:00,[],
5846,https://github.com/ece554-cryptocrew/bitcoin_accelerator.git,2021-03-16 23:33:53+00:00,,3,ece554-cryptocrew/bitcoin_accelerator,348522039,SystemVerilog,bitcoin_accelerator,11787,1,2021-05-11 09:01:12+00:00,[],
5847,https://github.com/Skyrim-667/uart_testcase.git,2021-02-08 05:28:02+00:00,UART interrupt test cases based on the UART block level environment from Verification Academy Coverage Cookbook,0,Skyrim-667/uart_testcase,336969835,SystemVerilog,uart_testcase,16201,1,2023-09-10 14:50:00+00:00,[],
5848,https://github.com/jay20162016/async.git,2021-02-18 14:21:23+00:00,Asynchronous Circuits!!!!!!!!!!!!!!,1,jay20162016/async,340073476,SystemVerilog,async,62,1,2023-07-20 16:32:29+00:00,[],https://api.github.com/licenses/gpl-3.0
5849,https://github.com/vnksnkr/electronic-locker.git,2020-11-17 13:43:45+00:00,,0,vnksnkr/electronic-locker,313632493,SystemVerilog,electronic-locker,2146,1,2021-08-23 06:50:48+00:00,[],
5850,https://github.com/tenthousandfailures/formal_synthesis.git,2020-12-12 23:53:29+00:00,,0,tenthousandfailures/formal_synthesis,320948194,SystemVerilog,formal_synthesis,21,1,2024-02-07 09:03:42+00:00,[],https://api.github.com/licenses/gpl-3.0
5851,https://github.com/Joseda8/ASIP_Vector.git,2020-11-18 23:45:21+00:00,Esta es la versión B del segundo proyecto de Arquitectura de Computadores II del ITCR,0,Joseda8/ASIP_Vector,314086479,SystemVerilog,ASIP_Vector,49,1,2022-06-22 21:51:46+00:00,[],
5852,https://github.com/ErickOF/CE4202-Oscilloscope-and-Digital-Filtering.git,2020-11-30 04:33:06+00:00,,0,ErickOF/CE4202-Oscilloscope-and-Digital-Filtering,317111421,SystemVerilog,CE4202-Oscilloscope-and-Digital-Filtering,176,1,2023-08-25 00:15:30+00:00,"['matlab', 'python3', 'systemverilog', 'verilog']",
5853,https://github.com/Phyteon/RISCV_IPcore.git,2021-03-29 15:42:00+00:00,This repository contains files associated with the development of RISC-V IP core,1,Phyteon/RISCV_IPcore,352696335,SystemVerilog,RISCV_IPcore,7984,1,2022-01-10 21:20:25+00:00,[],https://api.github.com/licenses/mit
5854,https://github.com/berkayaktunc/Multi-Cycle-MIPS-Processor-Design.git,2021-01-21 19:52:58+00:00,,1,berkayaktunc/Multi-Cycle-MIPS-Processor-Design,331738213,SystemVerilog,Multi-Cycle-MIPS-Processor-Design,6,1,2021-01-21 20:20:09+00:00,[],
5855,https://github.com/ChufanSuki/mips_cpu.git,2020-11-16 10:56:32+00:00,My Computer Architecture Course Project in CQU,1,ChufanSuki/mips_cpu,313272670,SystemVerilog,mips_cpu,31934,1,2020-11-22 10:53:04+00:00,"['computer-architecture', 'chongqing-university', 'cqu', 'pipeline', 'branch-prediction', 'cache']",
5856,https://github.com/salsina/Digital-Logic-Design-CA3.git,2021-03-10 20:21:33+00:00,Combinational packages and their gate-level equivalent,0,salsina/Digital-Logic-Design-CA3,346481709,SystemVerilog,Digital-Logic-Design-CA3,78,1,2021-07-04 21:15:05+00:00,[],
5857,https://github.com/mfkiwl/Configurable-Systolic-Systemverilog.git,2021-03-28 08:33:20+00:00,Systolic Implementation,1,mfkiwl/Configurable-Systolic-Systemverilog,352278650,,Configurable-Systolic-Systemverilog,36982,1,2023-04-17 23:01:53+00:00,[],
5858,https://github.com/Soham-coder/Wallace_tree_mult.git,2020-12-12 12:53:54+00:00,Parameterized High Speed Unsigned Wallace Tree Multiplier ,0,Soham-coder/Wallace_tree_mult,320830486,SystemVerilog,Wallace_tree_mult,3,1,2022-06-21 03:32:26+00:00,[],
5859,https://github.com/Skyrim-667/Simple_UVM.git,2021-02-06 02:40:49+00:00,a simple and intuitive uvm verification platform,0,Skyrim-667/Simple_UVM,336439770,SystemVerilog,Simple_UVM,33,1,2021-02-28 08:09:17+00:00,[],
5860,https://github.com/Sibakumarpanda/Fundamentals-of-System-Verilog-Part-1.git,2021-02-07 09:25:34+00:00,"Aim to explore the System Verilog concepts with Hands on , which could be used for verification",0,Sibakumarpanda/Fundamentals-of-System-Verilog-Part-1,336748288,SystemVerilog,Fundamentals-of-System-Verilog-Part-1,1,1,2021-05-14 17:26:10+00:00,[],
5862,https://github.com/colinpate/fpga_vr_blockmatching.git,2020-12-28 02:18:59+00:00,,3,colinpate/fpga_vr_blockmatching,324891236,SystemVerilog,fpga_vr_blockmatching,369,1,2023-08-28 03:37:55+00:00,[],
5863,https://github.com/Almotaek/Reaction_Timer_Display.git,2020-12-27 12:41:44+00:00,"Calculates, displays human reaction time to a flashing light.",0,Almotaek/Reaction_Timer_Display,324759199,SystemVerilog,Reaction_Timer_Display,11,0,2020-12-27 12:49:49+00:00,[],
5864,https://github.com/Raj21-21/Asynchronous-fifo-Design-and-verification.git,2021-01-12 05:50:32+00:00,,0,Raj21-21/Asynchronous-fifo-Design-and-verification,328885842,SystemVerilog,Asynchronous-fifo-Design-and-verification,12,0,2021-01-13 03:26:00+00:00,[],https://api.github.com/licenses/mit
5865,https://github.com/dakshjoshi02/Functional-Verification.git,2021-03-03 16:17:31+00:00,,0,dakshjoshi02/Functional-Verification,344187576,SystemVerilog,Functional-Verification,2,0,2021-03-03 16:22:29+00:00,[],
5866,https://github.com/AlexanderLuasan/ProgPoW_lcisc0.1.git,2021-03-26 07:58:33+00:00,lcsic0.1 progpow version,0,AlexanderLuasan/ProgPoW_lcisc0.1,351704826,SystemVerilog,ProgPoW_lcisc0.1,379,0,2021-03-26 09:41:41+00:00,[],
5867,https://github.com/rag1404/signed_unsignedness.git,2021-01-03 19:51:54+00:00,A quick overview of System verilog Signed and Unsignedness in Arithmetic operations,0,rag1404/signed_unsignedness,326488890,SystemVerilog,signed_unsignedness,2,0,2021-01-03 19:54:39+00:00,[],
5868,https://github.com/Lampro-Mellon/LEC_RTL.git,2021-01-04 12:43:08+00:00,This constains the RTL to check with SweRV-EL2 for LEC,2,Lampro-Mellon/LEC_RTL,326680462,SystemVerilog,LEC_RTL,5792,0,2021-03-29 06:05:18+00:00,[],
5869,https://github.com/naftali10/Single-Cycle-MIPS.git,2021-01-08 07:33:50+00:00,A System Verilog processor design of a single cycle MIPS architecture,0,naftali10/Single-Cycle-MIPS,327831068,SystemVerilog,Single-Cycle-MIPS,56,0,2021-01-16 17:13:01+00:00,"['verilog-processor', 'architecture', 'microarchitecture', 'mips-architecture', 'mips']",
5870,https://github.com/dig025/lucas_processor.git,2021-02-20 01:02:45+00:00,9bit processor for cse 141L,0,dig025/lucas_processor,340528357,SystemVerilog,lucas_processor,30883,0,2021-03-29 20:20:25+00:00,[],
5871,https://github.com/SilverArrow009/uart_tb.git,2021-02-22 17:37:00+00:00,,0,SilverArrow009/uart_tb,341283502,SystemVerilog,uart_tb,26,0,2021-03-01 23:54:48+00:00,[],https://api.github.com/licenses/gpl-3.0
5872,https://github.com/andreidemidov/TSC_Lab.git,2021-02-24 16:25:49+00:00,,0,andreidemidov/TSC_Lab,341961841,SystemVerilog,TSC_Lab,8368,0,2021-04-15 16:36:46+00:00,[],
5873,https://github.com/ryaanluke/Bacarat_Game.git,2021-02-08 19:22:08+00:00,Full Bacarat Card game in SystemVerilog,0,ryaanluke/Bacarat_Game,337184703,SystemVerilog,Bacarat_Game,2722,0,2021-02-08 19:27:51+00:00,[],
5874,https://github.com/alainlou/quicksilicon.git,2021-02-13 18:42:04+00:00,,0,alainlou/quicksilicon,338643749,SystemVerilog,quicksilicon,7,0,2021-08-28 01:56:38+00:00,[],
5875,https://github.com/ravil99/4_port_Ethernet_Switch.git,2021-02-08 14:20:09+00:00,,0,ravil99/4_port_Ethernet_Switch,337100124,SystemVerilog,4_port_Ethernet_Switch,1783,0,2022-11-21 16:22:54+00:00,[],
5876,https://github.com/scole02/CPE333.git,2021-02-04 18:19:42+00:00,,0,scole02/CPE333,336044128,SystemVerilog,CPE333,34,0,2021-02-04 18:45:36+00:00,[],
5877,https://github.com/adanpartidajr/FSM.git,2021-02-27 07:04:10+00:00,System Verilog code for FSM physically validated on DE10-Lite FPGA,0,adanpartidajr/FSM,342793647,SystemVerilog,FSM,2,0,2021-02-27 07:05:29+00:00,"['fsm', 'verilog', 'systemverilog', 'fpga']",
5878,https://github.com/usman1515/Matrix-Multiplier.git,2020-11-15 19:35:58+00:00,,0,usman1515/Matrix-Multiplier,313108275,SystemVerilog,Matrix-Multiplier,39,0,2021-01-16 12:20:09+00:00,"['verilog-hdl', 'verilog', 'gtkwave', 'icarus-verilog', 'modelsim']",
5879,https://github.com/annamcole/ECE_551.git,2020-11-18 15:59:46+00:00,UW-Madison ECE 551 Fall 2020,0,annamcole/ECE_551,313984953,SystemVerilog,ECE_551,66,0,2023-01-28 09:51:05+00:00,[],
5880,https://github.com/niklit-dev/HLD_projects.git,2020-11-21 13:40:14+00:00,,0,niklit-dev/HLD_projects,314820690,SystemVerilog,HLD_projects,58,0,2020-11-24 06:31:47+00:00,[],
5881,https://github.com/ARF1939261764/FPGA-UDP.git,2020-11-21 13:20:22+00:00,"FPGA实现ARP,ICMP,UDP协议",0,ARF1939261764/FPGA-UDP,314816758,SystemVerilog,FPGA-UDP,3,0,2020-11-21 13:24:48+00:00,[],
5882,https://github.com/fpozzana/UART.git,2020-12-05 18:05:06+00:00,implementation of a UART peripheral,0,fpozzana/UART,318855592,SystemVerilog,UART,14,0,2020-12-08 14:21:31+00:00,[],
5883,https://github.com/ramacha7/ECE437.git,2020-12-06 21:59:58+00:00,"Single Cycle, Pipelined, Pipelined with Caches, Multicore CPU designs",0,ramacha7/ECE437,319140390,SystemVerilog,ECE437,111,0,2021-06-23 03:20:47+00:00,[],
5884,https://github.com/Ki11erCoffee/ECE-111-Final-Project.git,2021-03-20 07:03:27+00:00,,0,Ki11erCoffee/ECE-111-Final-Project,349652539,SystemVerilog,ECE-111-Final-Project,12640,0,2021-10-13 20:12:19+00:00,[],
5885,https://github.com/ShaowenWang/UW_EE271.git,2021-03-15 07:48:56+00:00,"This is UW winter 2021 EE271 file. For reference only, good luck",0,ShaowenWang/UW_EE271,347880195,SystemVerilog,UW_EE271,59,0,2021-03-16 19:18:04+00:00,[],
5886,https://github.com/byungwoo733/My_Verilog.git,2021-03-04 01:05:44+00:00,Verilog Test Programming,0,byungwoo733/My_Verilog,344309178,SystemVerilog,My_Verilog,75,0,2022-01-04 02:10:03+00:00,[],https://api.github.com/licenses/mit
5887,https://github.com/cam-rod/simon-says.git,2020-12-26 19:08:39+00:00,Simon on a DE1-SoC with Cyclone V FPGA.,0,cam-rod/simon-says,324618737,SystemVerilog,simon-says,369,0,2023-12-19 17:28:54+00:00,"['verilog', 'systemverilog']",https://api.github.com/licenses/gpl-3.0
5888,https://github.com/curoles/tachyon.git,2021-02-23 18:35:23+00:00,,0,curoles/tachyon,341652635,SystemVerilog,tachyon,58,0,2021-03-10 02:38:23+00:00,[],https://api.github.com/licenses/mit
5889,https://github.com/vparik6/MIPS_Pipelined.git,2021-02-25 04:41:25+00:00,This is a group project for ECE 571 course at PSU.,0,vparik6/MIPS_Pipelined,342124888,SystemVerilog,MIPS_Pipelined,4443,0,2021-09-22 21:37:54+00:00,[],
5890,https://github.com/svenka3/vw_enet_dv.git,2021-02-21 16:25:14+00:00,,1,svenka3/vw_enet_dv,340946792,SystemVerilog,vw_enet_dv,8,0,2021-02-21 16:46:49+00:00,[],
5891,https://github.com/gavinspoiler/learngit.git,2021-02-23 05:01:22+00:00,,0,gavinspoiler/learngit,341434095,SystemVerilog,learngit,1,0,2021-02-23 07:24:40+00:00,[],
5892,https://github.com/Matteo-Bovino/Multicore-Processor.git,2021-02-01 11:54:55+00:00,Final year project - 306AAE - Individual Project Realisation,0,Matteo-Bovino/Multicore-Processor,334933958,SystemVerilog,Multicore-Processor,22880,0,2022-11-06 20:51:42+00:00,[],
5893,https://github.com/rag1404/uvm_events.git,2021-01-30 07:17:46+00:00,A program to demonstrate different kinds of uvm_events !,0,rag1404/uvm_events,334353040,SystemVerilog,uvm_events,6,0,2021-01-30 07:32:31+00:00,[],
5894,https://github.com/masonw19/ARC4-Decryption-Circuit.git,2021-01-10 23:53:23+00:00,This is an ARC4 Decryption Circuit made with SystemVerilog and the use of on-chip memories,0,masonw19/ARC4-Decryption-Circuit,328504028,SystemVerilog,ARC4-Decryption-Circuit,595,0,2021-07-31 22:44:36+00:00,[],
5895,https://github.com/zzhang681/proj272.git,2020-11-16 22:31:00+00:00,,0,zzhang681/proj272,313443356,SystemVerilog,proj272,6938,0,2020-11-24 07:50:08+00:00,[],
5896,https://github.com/Kiminje/Graduate.git,2021-01-07 18:15:44+00:00,,0,Kiminje/Graduate,327691034,SystemVerilog,Graduate,5331,0,2021-01-19 20:27:50+00:00,[],
5897,https://github.com/qian-gu/RVAnt.git,2021-01-12 03:22:46+00:00,:ant: RVAnt is a minimal RISC-V core for learning purpose.,0,qian-gu/RVAnt,328859864,SystemVerilog,RVAnt,93,0,2022-01-21 07:34:06+00:00,"['risc-v', 'core']",https://api.github.com/licenses/mit
5898,https://github.com/rag1404/uvm_tlm_ports_part3.git,2021-01-16 04:37:48+00:00,Sending transactions to UVM components using tlm fifo,0,rag1404/uvm_tlm_ports_part3,330084960,SystemVerilog,uvm_tlm_ports_part3,2,0,2021-01-16 04:40:09+00:00,[],
5899,https://github.com/MeriemLil/DT2.git,2021-01-18 18:07:23+00:00,Digital Techniques 2,0,MeriemLil/DT2,330748659,SystemVerilog,DT2,55,0,2021-01-18 18:11:13+00:00,[],
5900,https://github.com/tirolinko/fpadder.git,2021-02-10 23:19:49+00:00,Floating point adder HDL implementation for Digital System Design coursework,0,tirolinko/fpadder,337880615,SystemVerilog,fpadder,3,0,2021-03-03 20:07:40+00:00,[],
5901,https://github.com/michael-platzer/ibex-soc.git,2021-03-01 15:55:20+00:00,Minimal SoC for the Ibex Core,1,michael-platzer/ibex-soc,343472468,SystemVerilog,ibex-soc,21,0,2021-05-19 14:37:02+00:00,[],
5902,https://github.com/Luke-Jacobs/Lab-5-Code.git,2021-03-02 18:18:30+00:00,,0,Luke-Jacobs/Lab-5-Code,343870279,SystemVerilog,Lab-5-Code,62,0,2021-03-11 23:15:47+00:00,[],
5903,https://github.com/jmcguigs/RISCV_MCU.git,2021-03-23 01:18:03+00:00,A 32-bit RISC-V microcontroller made in systemVerilog,0,jmcguigs/RISCV_MCU,350540088,SystemVerilog,RISCV_MCU,8,0,2021-03-23 05:48:20+00:00,[],https://api.github.com/licenses/mit
5904,https://github.com/dclab02/lab3.git,2021-03-26 03:14:40+00:00,digital recorder,0,dclab02/lab3,351647574,SystemVerilog,lab3,320,0,2021-09-30 05:27:20+00:00,[],
5905,https://github.com/chelsea10bqr/Digital-Systems-Laboratory.git,2021-03-26 08:11:52+00:00,FPGA and SoC ,0,chelsea10bqr/Digital-Systems-Laboratory,351708169,SystemVerilog,Digital-Systems-Laboratory,8422,0,2021-03-26 13:21:59+00:00,[],
5906,https://github.com/AlexanderLuasan/KMeans_lcisc0.1.git,2021-03-26 08:05:42+00:00,L-CISC 0.1 Kmeans ,0,AlexanderLuasan/KMeans_lcisc0.1,351706710,SystemVerilog,KMeans_lcisc0.1,1001,0,2021-03-27 06:10:59+00:00,[],
5907,https://github.com/jaruial1/TAREA3.git,2020-11-22 18:23:09+00:00,,0,jaruial1/TAREA3,315104096,SystemVerilog,TAREA3,2,0,2020-11-22 19:04:52+00:00,[],
5908,https://github.com/sachinmodi51/AMBA-APB-PROTOCOL.git,2020-12-02 13:02:12+00:00,,0,sachinmodi51/AMBA-APB-PROTOCOL,317863781,SystemVerilog,AMBA-APB-PROTOCOL,31,0,2021-01-22 19:17:11+00:00,[],
5909,https://github.com/s5suzuki/autd3-fpga-v1.git,2020-12-07 23:26:13+00:00,,0,s5suzuki/autd3-fpga-v1,319470533,SystemVerilog,autd3-fpga-v1,893,0,2023-01-27 20:25:49+00:00,[],https://api.github.com/licenses/mit
5910,https://github.com/Ln-Yangzl/Finite-State-Machine-system-verlog.git,2020-12-22 14:30:59+00:00,,0,Ln-Yangzl/Finite-State-Machine-system-verlog,323649494,SystemVerilog,Finite-State-Machine-system-verlog,173,0,2020-12-22 15:13:13+00:00,[],
5911,https://github.com/nkasd/Verilog-trials.git,2020-12-11 17:57:47+00:00,,0,nkasd/Verilog-trials,320646479,SystemVerilog,Verilog-trials,1,0,2020-12-11 20:16:45+00:00,[],
5912,https://github.com/hamidsalemi77/CAL_ARM.git,2020-12-10 09:01:24+00:00,,0,hamidsalemi77/CAL_ARM,320215504,SystemVerilog,CAL_ARM,184,0,2020-12-11 21:58:20+00:00,[],
5914,https://github.com/uop2020-advanced-digital/fpga-sudoku-player.git,2020-12-02 05:00:07+00:00,"A sudoku player implemented on an Intel Cyclone FPGA board. Sudoku inputs are registered via ps2 keyboard connection, and the game is displayed via VGA.",0,uop2020-advanced-digital/fpga-sudoku-player,317754775,SystemVerilog,fpga-sudoku-player,464,0,2020-12-10 07:18:20+00:00,[],
5915,https://github.com/mandebi/FPGA_NoC.git,2021-03-17 02:03:32+00:00,,0,mandebi/FPGA_NoC,348550441,SystemVerilog,FPGA_NoC,16,0,2021-03-19 06:09:04+00:00,[],
5916,https://github.com/GeorgeKef-School-Projects/edge_detection.git,2021-03-29 18:56:19+00:00,In this project we implement an edge detection algorithm that consists of 2 steps. The algorithm is base on cellular automata. In the repository you can also find a detailed report. Co-Authors: Giorgos Kefalas and Dimitris Karagiannis Karousos,0,GeorgeKef-School-Projects/edge_detection,352753254,SystemVerilog,edge_detection,294,0,2022-05-24 17:08:18+00:00,[],
5917,https://github.com/dclab02/lab1.git,2021-03-04 03:03:59+00:00,This is dclab team02 lab1,0,dclab02/lab1,344332788,SystemVerilog,lab1,685,0,2021-09-30 05:26:30+00:00,[],
5918,https://github.com/ggrecu24/TSC_lab.git,2021-02-25 14:30:10+00:00,,0,ggrecu24/TSC_lab,342271497,SystemVerilog,TSC_lab,8714,0,2021-04-22 13:40:24+00:00,[],
5919,https://github.com/oz-matt/cdr_rnm.git,2021-03-17 00:16:25+00:00,sv-rnm behavioral sim of a pcie cdr,0,oz-matt/cdr_rnm,348529571,SystemVerilog,cdr_rnm,181,0,2021-04-21 02:56:38+00:00,[],
5920,https://github.com/markokujundzic/uvm.git,2021-02-10 17:23:45+00:00,UVM framework used for testing finite state machine DUT,0,markokujundzic/uvm,337798593,SystemVerilog,uvm,6,0,2021-02-10 20:20:43+00:00,[],
5921,https://github.com/ryaanluke/Fillscreen_Circle_ReuleauxTriangle.git,2021-02-08 19:31:52+00:00,"A series of SystemVerilog files for filling a VGA screen with a colour, creating a circle, and creating a reuleaux triangle. ",0,ryaanluke/Fillscreen_Circle_ReuleauxTriangle,337187139,SystemVerilog,Fillscreen_Circle_ReuleauxTriangle,1081,0,2021-02-08 19:40:02+00:00,[],
5922,https://github.com/oz-matt/ozphy.git,2021-02-05 16:51:02+00:00,,0,oz-matt/ozphy,336332329,SystemVerilog,ozphy,59,0,2021-02-15 08:05:58+00:00,[],
5923,https://github.com/mfkiwl/DDR3_PRESI.git,2021-02-07 07:00:19+00:00,,0,mfkiwl/DDR3_PRESI,336723401,,DDR3_PRESI,2656,0,2021-02-07 07:00:20+00:00,[],
5924,https://github.com/BourgeoisLenin/Team10Minilab5.git,2021-02-12 12:54:52+00:00,,0,BourgeoisLenin/Team10Minilab5,338319078,SystemVerilog,Team10Minilab5,311,0,2021-02-12 13:31:10+00:00,[],
5925,https://github.com/jinilpatel25/RC4.git,2021-03-10 01:26:43+00:00,"In this lab, I got experience creating a design that contains several on-chip memories. This circuit is an RC4 Decryption circuit which is a popular stream cypher, and was widely used in encrypting web traffic among other uses. RC4 is an important algorithm and provides a good vehicle for studying digital circuits that made  extensive use of on-chip memory. It also provides a basis for implementing some of these variants that are more secure.",0,jinilpatel25/RC4,346194488,SystemVerilog,RC4,56996,0,2022-01-08 22:04:25+00:00,[],
5926,https://github.com/surendra55555/uart.git,2021-03-26 11:15:32+00:00,,0,surendra55555/uart,351756017,SystemVerilog,uart,200,0,2021-04-04 12:24:31+00:00,[],
5927,https://github.com/surendra55555/Ring_counter.git,2021-03-26 11:49:09+00:00,,0,surendra55555/Ring_counter,351764466,SystemVerilog,Ring_counter,2,0,2021-04-04 12:41:45+00:00,[],
5928,https://github.com/vien20010/FloatingPointIEEE754.git,2020-12-23 07:06:57+00:00,,1,vien20010/FloatingPointIEEE754,323829192,SystemVerilog,FloatingPointIEEE754,12864,0,2021-01-03 18:43:51+00:00,[],
5929,https://github.com/saipra99/SPI_Project.git,2020-12-01 20:46:55+00:00,,0,saipra99/SPI_Project,317663638,SystemVerilog,SPI_Project,11,0,2021-03-01 17:27:09+00:00,[],https://api.github.com/licenses/apache-2.0
5930,https://github.com/cyanbx/WriteBuffer.git,2020-12-24 08:12:42+00:00,,0,cyanbx/WriteBuffer,324103178,SystemVerilog,WriteBuffer,112,0,2020-12-25 11:32:51+00:00,[],
5931,https://github.com/goshuh/verif.git,2021-01-10 22:11:19+00:00,Simple IC verification environment,0,goshuh/verif,328489686,SystemVerilog,verif,5,0,2022-02-25 00:36:32+00:00,[],
5932,https://github.com/rag1404/uvm_objection_mechanism.svh.git,2021-01-21 07:31:23+00:00,This program is about UVM objections and Drain time !! ,0,rag1404/uvm_objection_mechanism.svh,331549843,SystemVerilog,uvm_objection_mechanism.svh,7,0,2021-01-22 03:05:31+00:00,[],
5933,https://github.com/tiagouergs/AtariProj.git,2021-01-17 20:33:10+00:00,,0,tiagouergs/AtariProj,330481052,SystemVerilog,AtariProj,363,0,2021-01-17 20:49:59+00:00,[],
5934,https://github.com/eestevez123/ece554_miniproject.git,2021-01-29 01:47:22+00:00,,0,eestevez123/ece554_miniproject,334007022,SystemVerilog,ece554_miniproject,502,0,2021-01-29 04:08:46+00:00,[],
5935,https://github.com/pragya77/APB-protocol-using-UVM.git,2021-01-30 19:59:08+00:00,,0,pragya77/APB-protocol-using-UVM,334499864,SystemVerilog,APB-protocol-using-UVM,9,0,2021-01-30 21:16:58+00:00,[],
5936,https://github.com/ybbekele/LC3-Verification.git,2021-02-02 15:23:06+00:00,This project deals with the verification of the data and control path of an unpipelined LC-3 microcontroller with a reduced instruction set.,0,ybbekele/LC3-Verification,335333096,SystemVerilog,LC3-Verification,36,0,2021-04-12 19:06:11+00:00,[],
5937,https://github.com/cryptoKay8/learninggit.git,2021-01-28 04:36:19+00:00,Experimenting here,0,cryptoKay8/learninggit,333646471,SystemVerilog,learninggit,1,0,2021-01-28 04:48:38+00:00,[],
5938,https://github.com/tejakunchavenkata/processorDesigns.git,2020-12-31 05:37:42+00:00,,0,tejakunchavenkata/processorDesigns,325723160,SystemVerilog,processorDesigns,1,0,2020-12-31 06:50:35+00:00,[],
5939,https://github.com/evgeniyBolnov/PID.git,2020-12-21 07:47:56+00:00,,0,evgeniyBolnov/PID,323266344,SystemVerilog,PID,132,0,2023-01-22 10:58:18+00:00,[],
5940,https://github.com/Songchun-Li/ee478_16_bit_arm_cpu_w_aes_accelerator.git,2020-11-24 21:20:58+00:00,VLSI capstone project: 16-bit 5-Stage Pipelined ARM Processor w/ AES128 Crypto Accelerator ,0,Songchun-Li/ee478_16_bit_arm_cpu_w_aes_accelerator,315755269,SystemVerilog,ee478_16_bit_arm_cpu_w_aes_accelerator,38,0,2020-11-24 21:59:21+00:00,[],
5941,https://github.com/acsalas/mips.git,2020-12-02 20:06:56+00:00,Version of mips processor,0,acsalas/mips,317978032,SystemVerilog,mips,1119,0,2020-12-02 20:11:45+00:00,[],
5942,https://github.com/berkyildiz3/Digital-Design.git,2020-11-29 09:19:32+00:00,Labs and project of CS 223,0,berkyildiz3/Digital-Design,316915142,SystemVerilog,Digital-Design,8668,0,2020-11-29 09:40:45+00:00,[],
5943,https://github.com/EmiSancho/CE4301-Proyecto1.git,2020-11-14 01:29:40+00:00,,0,EmiSancho/CE4301-Proyecto1,312722254,SystemVerilog,CE4301-Proyecto1,2267,0,2020-11-18 04:34:39+00:00,[],
5944,https://github.com/sriyerg/systemverilog.git,2020-12-16 03:37:36+00:00,SystemVerilog language examples,0,sriyerg/systemverilog,321858734,SystemVerilog,systemverilog,12,0,2023-12-16 12:01:51+00:00,[],https://api.github.com/licenses/apache-2.0
5945,https://github.com/ifd3f/OtterMCU.git,2021-01-22 18:31:20+00:00,,0,ifd3f/OtterMCU,332030798,SystemVerilog,OtterMCU,469,0,2021-11-21 22:53:00+00:00,[],
5946,https://github.com/jayaprasannakomma/Ahb-lite-design-verification-emulation.git,2021-01-09 14:27:35+00:00,,0,jayaprasannakomma/Ahb-lite-design-verification-emulation,328173160,,Ahb-lite-design-verification-emulation,2524,0,2021-01-09 14:27:37+00:00,[],
5947,https://github.com/PhilippNickel/onchip_serial_interface.git,2021-01-27 12:18:41+00:00,small on chip serial interface,0,PhilippNickel/onchip_serial_interface,333410469,SystemVerilog,onchip_serial_interface,48,0,2021-04-16 15:02:26+00:00,[],
5948,https://github.com/Luke-Jacobs/Lab-4-Code.git,2021-02-23 20:36:36+00:00,,0,Luke-Jacobs/Lab-4-Code,341683136,SystemVerilog,Lab-4-Code,20,0,2021-02-26 22:25:03+00:00,[],
5949,https://github.com/ahmadmhasann/mips-processor.git,2021-02-24 00:31:49+00:00,Implementation of MIPS Single Cycle in System Verilog,0,ahmadmhasann/mips-processor,341731075,SystemVerilog,mips-processor,22,0,2021-02-24 00:32:30+00:00,[],
5950,https://github.com/braul98/TSC_Lab.git,2021-02-24 16:24:52+00:00,,0,braul98/TSC_Lab,341961546,SystemVerilog,TSC_Lab,8278,0,2021-04-22 09:56:42+00:00,[],
5951,https://github.com/Jefryruiz/Proyecto2_verificacion.git,2020-11-16 22:41:26+00:00,,0,Jefryruiz/Proyecto2_verificacion,313445233,SystemVerilog,Proyecto2_verificacion,80,0,2020-12-10 06:07:00+00:00,[],
5952,https://github.com/shrutimathurvlsi/repo_2.git,2020-11-17 02:58:10+00:00,,0,shrutimathurvlsi/repo_2,313490738,SystemVerilog,repo_2,2,0,2020-11-17 03:07:08+00:00,[],
5953,https://github.com/nightowlish/Stopwatch.git,2020-12-09 12:34:01+00:00,Verilog clock cycle based stopwatch,0,nightowlish/Stopwatch,319951144,SystemVerilog,Stopwatch,2,0,2022-01-30 22:39:48+00:00,[],
5954,https://github.com/wesleywesley/uvm_train.git,2020-12-11 03:11:20+00:00,,0,wesleywesley/uvm_train,320453375,SystemVerilog,uvm_train,38,0,2021-01-06 05:48:19+00:00,[],
5955,https://github.com/strear/m1fpga-s.git,2020-12-14 11:32:12+00:00,Martin 1 SSTV modulator for Nexys 4 DDR FPGA board,0,strear/m1fpga-s,321327828,SystemVerilog,m1fpga-s,3403,0,2020-12-14 11:45:21+00:00,[],https://api.github.com/licenses/mit
5956,https://github.com/vinnyfrijolini/SIWA_FPM.git,2020-12-16 15:47:07+00:00,"Radix-4 and Radix-8 single-precision, floating-point multipliers.",0,vinnyfrijolini/SIWA_FPM,322028592,SystemVerilog,SIWA_FPM,170,0,2021-03-20 15:16:44+00:00,[],https://api.github.com/licenses/gpl-3.0
5957,https://github.com/ritik11ritik/TicTacToe-Using-Verilog.git,2020-12-27 17:53:50+00:00,,0,ritik11ritik/TicTacToe-Using-Verilog,324817801,SystemVerilog,TicTacToe-Using-Verilog,208,0,2021-01-03 16:40:38+00:00,[],
5958,https://github.com/rag1404/Array-reduction-operator---Sum-.git,2020-12-26 18:16:02+00:00,Array reduction operator Sum - System verilog,0,rag1404/Array-reduction-operator---Sum-,324610898,SystemVerilog,Array-reduction-operator---Sum-,2,0,2020-12-26 18:18:28+00:00,[],
5959,https://github.com/zaznov/Harris-and-Harris-HDL-tasks.git,2021-03-23 13:33:45+00:00,"Some solutions of tasks from the book ""Digital Design and Computer Architecture"" by Harris and Harris",0,zaznov/Harris-and-Harris-HDL-tasks,350724792,SystemVerilog,Harris-and-Harris-HDL-tasks,2311,0,2021-03-30 05:48:45+00:00,[],
5960,https://github.com/ErikFanderson/cookiecutter-vlog-block.git,2021-01-18 18:52:11+00:00,"Cookiecutter repo fro creating verilog blocks w/ basic UVM tesbench. This ""block"" should hold both RTL and testbench",0,ErikFanderson/cookiecutter-vlog-block,330758733,SystemVerilog,cookiecutter-vlog-block,8,0,2021-01-18 18:52:52+00:00,[],https://api.github.com/licenses/mit
5961,https://github.com/AgustinDS/Proyecto3_Verificacion.git,2021-01-05 03:21:51+00:00,Test de un multiplicador combinacional con UVM,0,AgustinDS/Proyecto3_Verificacion,326873912,SystemVerilog,Proyecto3_Verificacion,412,0,2021-01-21 06:18:59+00:00,[],
5962,https://github.com/andrewh265/FlappyBird.git,2021-01-05 23:19:22+00:00,Flappy bird simulation using systemverilog on FPGA board and 16x16 matrix,0,andrewh265/FlappyBird,327144156,SystemVerilog,FlappyBird,31,0,2021-01-05 23:23:10+00:00,[],
5963,https://github.com/PowerSh0t/CrossBar2x2.git,2021-01-15 06:27:51+00:00,,0,PowerSh0t/CrossBar2x2,329827970,SystemVerilog,CrossBar2x2,552,0,2021-01-15 07:38:22+00:00,[],
5964,https://github.com/Mariummasood/riscv-core.git,2021-02-04 06:58:36+00:00,,0,Mariummasood/riscv-core,335867527,SystemVerilog,riscv-core,389,0,2021-02-04 07:08:25+00:00,[],
5965,https://github.com/farukomeraydin/System-Verilog-Digital-Design.git,2021-02-18 13:48:44+00:00,,1,farukomeraydin/System-Verilog-Digital-Design,340064211,SystemVerilog,System-Verilog-Digital-Design,327,0,2021-08-10 19:44:25+00:00,[],
5966,https://github.com/hugoferreira/verilator-sim-skeleton.git,2021-02-20 01:32:57+00:00,Simple Verilator Co-Simulation Skeleton,0,hugoferreira/verilator-sim-skeleton,340533064,SystemVerilog,verilator-sim-skeleton,25,0,2021-04-07 11:10:48+00:00,[],
5967,https://github.com/okologit/ksch.git,2021-02-22 10:15:24+00:00,,0,okologit/ksch,341158498,SystemVerilog,ksch,241381,0,2023-05-17 17:45:28+00:00,[],
5968,https://github.com/Rickenbacker620/MipsCPU.git,2021-03-06 08:43:33+00:00,,0,Rickenbacker620/MipsCPU,345046451,SystemVerilog,MipsCPU,41,0,2021-03-16 14:11:46+00:00,[],
5969,https://github.com/akamboj2/ECE498-Project-SqueezeNet.git,2020-11-16 01:11:16+00:00,ECE 498 final project. Implementing the fourth fire module of SqueezeNet in Systems Verilog.,1,akamboj2/ECE498-Project-SqueezeNet,313158044,SystemVerilog,ECE498-Project-SqueezeNet,7756,0,2020-12-11 06:47:44+00:00,[],
5970,https://github.com/akshaypsoni/address_generator_system_verilog.git,2021-02-14 17:18:17+00:00,Address generator in System Verilog with given condition,0,akshaypsoni/address_generator_system_verilog,338858634,SystemVerilog,address_generator_system_verilog,9,0,2021-02-14 17:41:36+00:00,[],
5971,https://github.com/varunsax12/pipeline_mips.git,2021-02-27 11:26:21+00:00,Implementation of 32-bit 5-stage pipeline MIPS processor,0,varunsax12/pipeline_mips,342839938,SystemVerilog,pipeline_mips,17,0,2021-10-04 23:41:22+00:00,[],
5972,https://github.com/kitune-san/KFTVGA.git,2021-03-01 16:24:48+00:00,Simple text mode video (VGA) controller written in SystemVerilog,0,kitune-san/KFTVGA,343481245,SystemVerilog,KFTVGA,1282,0,2023-02-23 23:53:44+00:00,"['vga', 'vga-controller', 'systemverilog', 'text-mode', 'fpga']",https://api.github.com/licenses/mit
5973,https://github.com/dev-sv/open-fpga.git,2021-01-16 11:45:42+00:00,development,0,dev-sv/open-fpga,330150116,SystemVerilog,open-fpga,475626,0,2023-12-11 11:33:43+00:00,[],
5974,https://github.com/punzik/dual-mcp3201-pmod-fw.git,2021-02-02 14:38:57+00:00,Test of dual-mcp3201-pmod board with Cmod A7 FPGA devboard,0,punzik/dual-mcp3201-pmod-fw,335319360,SystemVerilog,dual-mcp3201-pmod-fw,24,0,2021-02-02 20:59:23+00:00,[],
5975,https://github.com/Mop-u/MonkyCPU.git,2021-01-15 03:04:34+00:00,,0,Mop-u/MonkyCPU,329794539,SystemVerilog,MonkyCPU,82,0,2021-02-06 19:35:31+00:00,[],https://api.github.com/licenses/mit
5976,https://github.com/pragya77/Memory-module-using-SystemVerilog.git,2021-01-17 21:40:51+00:00,"The memory DUT and testbench are created using SystemVerilog. The testbench instantiates test which in turn instantiates env. Env has instantiations of scoreboard, monitor, generator and driver. ",0,pragya77/Memory-module-using-SystemVerilog,330492127,SystemVerilog,Memory-module-using-SystemVerilog,2,0,2021-01-17 21:41:28+00:00,[],
5977,https://github.com/emanci/seq_det.git,2021-01-24 23:58:24+00:00,8-bit sequence detector with self-checking testbench. FSM and shift register implementations,0,emanci/seq_det,332584084,SystemVerilog,seq_det,3,0,2021-01-25 00:09:24+00:00,[],
5978,https://github.com/buggins/bcpu16.git,2021-02-18 13:30:09+00:00,16-bit 4-thread Barrel CPU softcore for FPGAs,0,buggins/bcpu16,340059006,SystemVerilog,bcpu16,67,0,2021-08-13 10:11:42+00:00,[],
5979,https://github.com/jaycordaro/i2s-toneplayer.git,2021-02-12 08:20:40+00:00,"SystemVerilog I2S target, interfaces with an I2S controller.  Controller sources WS and SCK",0,jaycordaro/i2s-toneplayer,338260263,SystemVerilog,i2s-toneplayer,17,0,2021-05-29 20:30:25+00:00,[],https://api.github.com/licenses/bsd-2-clause
5980,https://github.com/palnikola1996/Router-SOC-Design.git,2021-02-14 21:03:24+00:00,"The Router SOC Design includes 4 slave devices (FSM based SHA3-256 permutation engine), 1 master device, 1 switch and arbiter in star topology. The project is designed using System Verilog and synthesised using Synopsys DC ",0,palnikola1996/Router-SOC-Design,338901501,SystemVerilog,Router-SOC-Design,1541,0,2021-02-14 21:08:29+00:00,[],
5981,https://github.com/patrick-chen-98/3_layers_full_connection_MAC.git,2021-02-15 15:20:29+00:00,,0,patrick-chen-98/3_layers_full_connection_MAC,339118303,SystemVerilog,3_layers_full_connection_MAC,4,0,2021-02-15 15:21:49+00:00,[],
5982,https://github.com/mifiscus/Digital-Circuits-and-Systems-Final.git,2021-03-29 01:18:59+00:00,"Final project for digital circuits and systems class, which is a flappy bird game programmed onto the Altera DE1-SoC FPGA using SystemVerilog and an 8x8 LED matrix",0,mifiscus/Digital-Circuits-and-Systems-Final,352479443,SystemVerilog,Digital-Circuits-and-Systems-Final,13,0,2021-06-03 22:49:17+00:00,[],
5983,https://github.com/PedroTLemos/ProjetoInfraHard.git,2021-03-27 23:47:44+00:00,Repositório criado para o envio do projeto da disciplina de Infraestrutura de Hardware do CIn - UFPE,0,PedroTLemos/ProjetoInfraHard,352202764,SystemVerilog,ProjetoInfraHard,2779,0,2021-03-27 23:50:36+00:00,[],
5984,https://github.com/MoonSam/simple_risc5_5stage.git,2021-01-21 15:52:25+00:00,,0,MoonSam/simple_risc5_5stage,331676663,SystemVerilog,simple_risc5_5stage,8,0,2022-05-14 01:27:59+00:00,[],
5985,https://github.com/vsandeepsekhar/verification.git,2021-01-18 22:12:39+00:00,This repository is my shot at SV and UVM for basic Design & Verification data structures ,2,vsandeepsekhar/verification,330799199,SystemVerilog,verification,39,0,2021-05-01 19:59:22+00:00,"['systemverilog', 'uvm']",
5986,https://github.com/shadow-blade-X/ECE342_Lab2.git,2021-01-26 18:30:40+00:00,,0,shadow-blade-X/ECE342_Lab2,333178733,SystemVerilog,ECE342_Lab2,3,0,2021-01-26 19:04:20+00:00,[],
5987,https://github.com/rag1404/randomize_assoc_array_index.git,2021-01-11 00:55:31+00:00,A program to randomize associative array index,0,rag1404/randomize_assoc_array_index,328512485,SystemVerilog,randomize_assoc_array_index,2,0,2021-01-11 00:57:50+00:00,[],
5988,https://github.com/Umair772/ARM-processor.git,2021-01-11 18:41:28+00:00,,0,Umair772/ARM-processor,328759248,SystemVerilog,ARM-processor,32,0,2021-01-11 19:36:53+00:00,[],
5989,https://github.com/RajRamani18/Memory.git,2021-03-08 13:27:46+00:00,Memory Interface,0,RajRamani18/Memory,345665343,SystemVerilog,Memory,75,0,2021-03-10 21:38:07+00:00,[],
5990,https://github.com/Geca981020/Undergraduate-Project.git,2021-02-24 12:52:21+00:00,,0,Geca981020/Undergraduate-Project,341899684,SystemVerilog,Undergraduate-Project,8338,0,2021-03-22 13:54:34+00:00,[],
5991,https://github.com/rushi0005/Verification-of-Grey-Coding.git,2021-02-25 07:51:29+00:00,,0,rushi0005/Verification-of-Grey-Coding,342164530,SystemVerilog,Verification-of-Grey-Coding,20,0,2021-03-03 02:00:15+00:00,[],
5992,https://github.com/nmoroze/sby-experiments.git,2021-03-02 05:36:23+00:00,,0,nmoroze/sby-experiments,343658079,SystemVerilog,sby-experiments,4,0,2021-03-02 05:39:54+00:00,[],
5993,https://github.com/Metal2/ISALab4.git,2021-03-05 16:33:53+00:00,Multiplier verification with UVM,0,Metal2/ISALab4,344870431,SystemVerilog,ISALab4,21698,0,2021-03-05 16:35:44+00:00,[],https://api.github.com/licenses/mit
5994,https://github.com/elrhod/Xilinx-DPU-with-SEM.git,2021-01-05 17:18:23+00:00,,0,elrhod/Xilinx-DPU-with-SEM,327068323,SystemVerilog,Xilinx-DPU-with-SEM,4805,0,2021-02-08 19:42:31+00:00,[],
5995,https://github.com/Ayushmisr/SV_array.sv.git,2021-01-04 08:44:41+00:00,,0,Ayushmisr/SV_array.sv,326621147,SystemVerilog,SV_array.sv,1,0,2021-01-04 08:48:12+00:00,[],
5996,https://github.com/joel-bailey/verilog-basic-risc.git,2021-01-07 16:39:56+00:00,,0,joel-bailey/verilog-basic-risc,327669339,SystemVerilog,verilog-basic-risc,1708,0,2021-02-18 16:24:15+00:00,[],
5997,https://github.com/postoroniy/Qrisc.git,2021-02-10 10:54:25+00:00,"Qrisc cpu based on mine qrisc32, in different languages",0,postoroniy/Qrisc,337695179,SystemVerilog,Qrisc,6080,0,2022-05-30 15:58:51+00:00,[],https://api.github.com/licenses/mit
5998,https://github.com/AdamVanHoewijk/IBM-model-1.git,2021-03-01 12:15:43+00:00,Implementation of IMB model 1,0,AdamVanHoewijk/IBM-model-1,343404866,SystemVerilog,IBM-model-1,1207,0,2021-03-01 12:17:43+00:00,[],
5999,https://github.com/varunsax12/multi_cycle_mips.git,2021-02-27 11:13:19+00:00,Implementation of 32-bit multi-cycle MIPS processor,0,varunsax12/multi_cycle_mips,342837670,SystemVerilog,multi_cycle_mips,11,0,2021-02-27 11:15:16+00:00,[],
6000,https://github.com/qiufengtiger/18725Assignment.git,2021-02-28 06:50:47+00:00,,0,qiufengtiger/18725Assignment,343040390,SystemVerilog,18725Assignment,4,0,2021-02-28 06:59:12+00:00,[],
6001,https://github.com/danielgaio/psan_sigmoid.git,2021-03-24 02:43:20+00:00,Arquitetura digital da função sigmoid implementada pela técnica Piecewise Secound Order Aproximation.,0,danielgaio/psan_sigmoid,350924844,SystemVerilog,psan_sigmoid,12075,0,2021-10-07 11:05:34+00:00,[],
6002,https://github.com/iremsvn/Basys3-simple-calculator.git,2021-03-25 20:04:36+00:00,,0,iremsvn/Basys3-simple-calculator,351561388,SystemVerilog,Basys3-simple-calculator,638,0,2021-03-31 21:42:41+00:00,"['systemverilog', 'fpga']",https://api.github.com/licenses/mit
6003,https://github.com/Li-Zhe-Alex/UVM.git,2020-11-19 15:00:31+00:00,,0,Li-Zhe-Alex/UVM,314281700,SystemVerilog,UVM,13,0,2020-11-19 15:03:35+00:00,[],
6004,https://github.com/tomer29575/calc2.git,2020-11-26 20:25:06+00:00,,0,tomer29575/calc2,316330097,SystemVerilog,calc2,2,0,2021-02-12 13:30:43+00:00,[],
6005,https://github.com/alialrifai/uvm_tutorial.git,2020-11-27 05:49:55+00:00,,1,alialrifai/uvm_tutorial,316411743,SystemVerilog,uvm_tutorial,57,0,2020-11-27 06:11:38+00:00,[],
6006,https://github.com/acordobav/FiltroDigital-TallerAnalogico.git,2020-11-30 19:28:56+00:00,"Osciloscopio y filtrado digital, Proyecto 4 Taller de Diseño Analógico IIS 2020",0,acordobav/FiltroDigital-TallerAnalogico,317324808,SystemVerilog,FiltroDigital-TallerAnalogico,1065,0,2021-05-12 00:22:49+00:00,[],
6007,https://github.com/vasilydenisenko/fsm_kernels.git,2020-11-29 12:29:32+00:00,FSM modules which speed up a design of control circuits,0,vasilydenisenko/fsm_kernels,316946405,SystemVerilog,fsm_kernels,24,0,2020-11-29 17:06:02+00:00,[],https://api.github.com/licenses/mit
6008,https://github.com/jomero-hex/Early-Detection-Debouncing-Circuit.git,2020-12-11 07:37:41+00:00,,0,jomero-hex/Early-Detection-Debouncing-Circuit,320501649,SystemVerilog,Early-Detection-Debouncing-Circuit,656,0,2021-01-05 22:41:08+00:00,[],
6009,https://github.com/Jacob-Bograd/CPE-133-Final.git,2020-11-16 22:28:52+00:00,CPE 133 final for Cal Poly,1,Jacob-Bograd/CPE-133-Final,313443029,SystemVerilog,CPE-133-Final,6015,0,2020-11-25 03:43:10+00:00,[],
6010,https://github.com/shiban123/Bus-Protocols.git,2020-11-17 02:59:31+00:00,,0,shiban123/Bus-Protocols,313490982,SystemVerilog,Bus-Protocols,6,0,2020-11-21 07:25:21+00:00,[],
6011,https://github.com/zeeshan0309/dvb.git,2021-02-04 10:40:52+00:00,,0,zeeshan0309/dvb,335921796,SystemVerilog,dvb,10,0,2021-09-02 18:58:28+00:00,[],https://api.github.com/licenses/mit
6012,https://github.com/alex-nagy-spacefiller/cse_361_lab1.git,2021-02-11 21:01:32+00:00,,0,alex-nagy-spacefiller/cse_361_lab1,338151804,SystemVerilog,cse_361_lab1,3,0,2021-02-11 21:03:24+00:00,[],
6013,https://github.com/mvsoliveira/edatools.git,2021-02-13 16:19:35+00:00,Website to perform small tasks on EDA snippets ,0,mvsoliveira/edatools,338615137,SystemVerilog,edatools,27,0,2022-06-17 15:39:47+00:00,[],
6014,https://github.com/nathan-n-poon/beep-boop.git,2021-02-13 09:04:59+00:00,,0,nathan-n-poon/beep-boop,338535571,SystemVerilog,beep-boop,2767,0,2021-04-15 08:20:05+00:00,[],https://api.github.com/licenses/mit
6015,https://github.com/bekelm/ENEE459D.git,2021-02-24 15:19:09+00:00,,0,bekelm/ENEE459D,341941940,SystemVerilog,ENEE459D,44,0,2021-05-15 03:54:56+00:00,[],
6016,https://github.com/danielgaio/plan_sigmoid.git,2021-02-24 14:22:51+00:00,Implementação da função sigmoid pelo método Piecewise Linear Aproximation of Non Linear Function (PLAN).,0,danielgaio/plan_sigmoid,341925033,SystemVerilog,plan_sigmoid,8579,0,2021-10-14 21:26:10+00:00,[],
6017,https://github.com/asicdv/hw_interview_questions.git,2020-11-20 10:00:21+00:00,A collection of commonly asked RTL design interview questions,1,asicdv/hw_interview_questions,314513791,,hw_interview_questions,1699,0,2020-11-20 10:00:23+00:00,[],https://api.github.com/licenses/gpl-3.0
6018,https://github.com/nimish15shah/Runtime-precision-scalable-POSIT-RTL.git,2020-11-23 19:24:10+00:00,"POSIT RTL that can be configured in runtime to perform 1x32b, 2x16b or 4x8b posit sums and products.",0,nimish15shah/Runtime-precision-scalable-POSIT-RTL,315418293,SystemVerilog,Runtime-precision-scalable-POSIT-RTL,2221,0,2021-04-09 11:01:47+00:00,[],https://api.github.com/licenses/mit
6019,https://github.com/Hyper-Act/Winter-of-Verilog.git,2020-12-08 16:00:46+00:00,Code that we'll use for the KEP,3,Hyper-Act/Winter-of-Verilog,319689253,SystemVerilog,Winter-of-Verilog,7,0,2020-12-18 16:27:51+00:00,[],
6020,https://github.com/coffeestainedcode/Perpetually_Puzzling_Passwords.git,2020-12-05 05:28:03+00:00,,0,coffeestainedcode/Perpetually_Puzzling_Passwords,318709772,SystemVerilog,Perpetually_Puzzling_Passwords,8,0,2021-10-14 21:56:12+00:00,[],
6021,https://github.com/UWCubeSat/hs2-dds-hdl.git,2020-12-01 22:52:13+00:00,SystemVerilog and Quartus Prime configuration settings for the AWG,0,UWCubeSat/hs2-dds-hdl,317688819,SystemVerilog,hs2-dds-hdl,314,0,2020-12-01 22:54:08+00:00,[],
6022,https://github.com/Umair772/Game-of-Snake-on-VGA.git,2021-01-12 07:18:39+00:00,,0,Umair772/Game-of-Snake-on-VGA,328904076,SystemVerilog,Game-of-Snake-on-VGA,370,0,2021-01-12 07:20:38+00:00,[],
6023,https://github.com/Q-b1t/La-Maquina-de-Leonel.git,2021-03-04 05:10:46+00:00,GUMNUT,0,Q-b1t/La-Maquina-de-Leonel,344357246,SystemVerilog,La-Maquina-de-Leonel,5149,0,2021-03-16 17:05:19+00:00,[],
6024,https://github.com/VSHEV92/CycloneV_StarterKit_Leds7.git,2021-03-20 15:20:50+00:00,Тестовое окружение на примере проекта с семисегментными индикаторами,0,VSHEV92/CycloneV_StarterKit_Leds7,349760936,SystemVerilog,CycloneV_StarterKit_Leds7,22,0,2021-03-21 14:26:08+00:00,[],
6025,https://github.com/sharmasnkr/FPGA-Pattern-Detector.git,2021-02-17 18:04:05+00:00,,0,sharmasnkr/FPGA-Pattern-Detector,339812086,SystemVerilog,FPGA-Pattern-Detector,8,0,2021-02-17 19:34:16+00:00,[],
6026,https://github.com/BourgeoisLenin/Team10Minilab4.git,2021-02-09 14:14:12+00:00,,0,BourgeoisLenin/Team10Minilab4,337426564,SystemVerilog,Team10Minilab4,4,0,2021-02-10 05:24:23+00:00,[],
6027,https://github.com/AndreiBalasa/TSC.git,2021-03-10 09:31:09+00:00,,0,AndreiBalasa/TSC,346301816,SystemVerilog,TSC,8273,0,2021-04-08 16:32:58+00:00,[],
6028,https://github.com/RajRamani18/Mux.git,2021-03-11 01:29:30+00:00,Assertion Concept,0,RajRamani18/Mux,346542076,SystemVerilog,Mux,50,0,2021-03-14 14:40:34+00:00,[],
6029,https://github.com/akubicek1/ECE337-Labs.git,2021-02-26 01:33:48+00:00,,0,akubicek1/ECE337-Labs,342428868,SystemVerilog,ECE337-Labs,317,0,2022-09-19 02:29:19+00:00,[],
6030,https://github.com/deokjoo/uvm.git,2021-02-20 15:30:55+00:00,,0,deokjoo/uvm,340687452,SystemVerilog,uvm,60,0,2021-03-28 09:29:01+00:00,[],
6031,https://github.com/VictorHerbert/FPGANeuralNetworkAccelerator.git,2021-02-20 06:08:26+00:00,,0,VictorHerbert/FPGANeuralNetworkAccelerator,340576579,SystemVerilog,FPGANeuralNetworkAccelerator,1118,0,2023-02-13 06:20:13+00:00,[],
6032,https://github.com/RomanSablin/maxII-test.git,2020-11-19 13:13:30+00:00,Test pwm,0,RomanSablin/maxII-test,314252473,SystemVerilog,maxII-test,5,0,2021-09-16 01:58:52+00:00,[],
6033,https://github.com/vasilydenisenko/hdl_primitives.git,2020-11-28 19:41:39+00:00,Small building blocks for HDL projects,0,vasilydenisenko/hdl_primitives,316809168,SystemVerilog,hdl_primitives,25,0,2021-01-05 11:21:40+00:00,[],https://api.github.com/licenses/mit
6034,https://github.com/MeriemLil/DT3.git,2021-01-18 18:23:35+00:00,Digital Techniques 3,0,MeriemLil/DT3,330752490,SystemVerilog,DT3,121,0,2021-01-18 18:38:36+00:00,[],
6035,https://github.com/gyx3598/fpgasimulation.git,2021-01-27 06:10:06+00:00,,0,gyx3598/fpgasimulation,333321846,SystemVerilog,fpgasimulation,3994,0,2021-01-27 06:10:27+00:00,[],
6036,https://github.com/dayu1998/ece554_miniproject.git,2021-01-28 11:31:09+00:00,,0,dayu1998/ece554_miniproject,333738450,SystemVerilog,ece554_miniproject,504,0,2021-01-29 02:01:46+00:00,[],
6037,https://github.com/QueMona98/connect4-sysverilog.git,2020-12-24 00:26:06+00:00,,0,QueMona98/connect4-sysverilog,324029030,SystemVerilog,connect4-sysverilog,6,0,2020-12-24 00:50:57+00:00,[],
6038,https://github.com/nhpoole/Rasterization-Hardware-Accelerator.git,2021-01-06 01:42:48+00:00,,0,nhpoole/Rasterization-Hardware-Accelerator,327168333,SystemVerilog,Rasterization-Hardware-Accelerator,77,0,2021-08-23 02:09:35+00:00,[],
6039,https://github.com/CyrilKoe/PAF.git,2021-01-13 14:58:53+00:00,1st year project in Telecom Paris,0,CyrilKoe/PAF,329341773,SystemVerilog,PAF,16,0,2021-01-13 15:00:54+00:00,[],
6040,https://github.com/OdaiBadran/the_key_pusher.git,2021-01-14 16:57:50+00:00,some piece of code from the key pusher game i created,0,OdaiBadran/the_key_pusher,329679336,SystemVerilog,the_key_pusher,17,0,2021-01-14 17:05:02+00:00,[],
6041,https://github.com/awesomeaiden/337labs.git,2021-01-21 19:53:33+00:00,Version control for ECE 33700 lab code,0,awesomeaiden/337labs,331738355,SystemVerilog,337labs,8952,0,2023-01-28 00:43:47+00:00,[],
6042,https://github.com/bslk/nqaxi.git,2020-11-20 15:31:49+00:00,Not quite AXI,0,bslk/nqaxi,314594247,SystemVerilog,nqaxi,8,0,2020-11-20 15:52:32+00:00,[],
6043,https://github.com/twoodhouse/aoc-2020.git,2020-11-30 23:01:11+00:00,My Advent of Code 2020 solutions,0,twoodhouse/aoc-2020,317367409,SystemVerilog,aoc-2020,63,0,2020-12-17 17:31:43+00:00,[],
6044,https://github.com/Mooyeonkim628/ECE337_ASIC_Design.git,2020-11-14 05:20:44+00:00,,4,Mooyeonkim628/ECE337_ASIC_Design,312751660,,ECE337_ASIC_Design,3558,0,2021-09-01 01:27:54+00:00,[],
6045,https://github.com/gbellocchi/fullstack_ip_integration.git,2020-12-18 14:09:59+00:00,,1,gbellocchi/fullstack_ip_integration,322613111,SystemVerilog,fullstack_ip_integration,15,0,2020-12-18 15:56:10+00:00,[],
6046,https://github.com/pvlkhm/VGA-Space-Game.git,2020-12-18 09:38:41+00:00,Verilog Game [VGA],0,pvlkhm/VGA-Space-Game,322551149,SystemVerilog,VGA-Space-Game,13246,0,2020-12-18 10:00:31+00:00,[],
6047,https://github.com/RemiChierchia/Progettio-Elettronica.git,2020-12-09 12:14:11+00:00,,0,RemiChierchia/Progettio-Elettronica,319946276,SystemVerilog,Progettio-Elettronica,3048,0,2021-11-26 14:56:30+00:00,[],
6048,https://github.com/catalinstefangheorghe/tsc_lab.git,2021-03-01 17:19:40+00:00,tsc_lab,0,catalinstefangheorghe/tsc_lab,343498002,SystemVerilog,tsc_lab,8421,0,2021-04-19 13:46:00+00:00,[],
6049,https://github.com/GuavTek/Control_bounded_filter_HDL.git,2021-03-07 17:40:20+00:00,A filter implementation for a control-bounded ADC,0,GuavTek/Control_bounded_filter_HDL,345411883,SystemVerilog,Control_bounded_filter_HDL,5090,0,2021-11-28 23:35:49+00:00,[],
6050,https://github.com/EdwinTrejo/CMPE691.git,2021-02-22 05:22:00+00:00,"My CMPE 691 491 Repo, I don't want to lose my school work code, so I back it up to here.",0,EdwinTrejo/CMPE691,341088570,SystemVerilog,CMPE691,6527,0,2021-05-14 17:26:00+00:00,"['verilog', 'c-sharp', 'cpp', 'vhdl', 'systemverilog']",https://api.github.com/licenses/mit
6051,https://github.com/georgecosmin98/TSC_Lab.git,2021-02-25 14:27:43+00:00,,0,georgecosmin98/TSC_Lab,342270820,SystemVerilog,TSC_Lab,18014,0,2021-04-15 17:30:02+00:00,[],
6052,https://github.com/grant4001/100MbEthernetFPGA.git,2021-03-09 04:18:33+00:00,,0,grant4001/100MbEthernetFPGA,345880687,SystemVerilog,100MbEthernetFPGA,11,0,2021-03-09 04:24:50+00:00,[],
6053,https://github.com/AlfreddGco/gumnut-processor.git,2021-03-08 13:04:51+00:00,,0,AlfreddGco/gumnut-processor,345658581,SystemVerilog,gumnut-processor,2962,0,2022-06-30 17:19:43+00:00,[],
6054,https://github.com/yolanda10202/FPGA_Memory.git,2021-03-09 07:53:15+00:00,IEEE Student Branch at UCLA Digital Audio Visualizer (DAV) Project Lab 5 Part E,0,yolanda10202/FPGA_Memory,345925542,SystemVerilog,FPGA_Memory,6,0,2021-06-14 14:09:29+00:00,[],
6055,https://github.com/ritik11ritik/2_Way-Set-Associative-Cache-Using-Verilog.git,2021-03-24 11:08:53+00:00,,0,ritik11ritik/2_Way-Set-Associative-Cache-Using-Verilog,351049009,SystemVerilog,2_Way-Set-Associative-Cache-Using-Verilog,8,0,2021-03-24 11:13:03+00:00,[],
6056,https://github.com/Deriskyy/Verilog.git,2021-02-19 11:18:44+00:00,Verilog design and Class Lab,0,Deriskyy/Verilog,340346625,SystemVerilog,Verilog,1219,0,2021-02-19 12:29:04+00:00,[],
6057,https://github.com/NawafSwe/verilog-circuit.git,2021-02-21 17:19:14+00:00,,0,NawafSwe/verilog-circuit,340958684,SystemVerilog,verilog-circuit,0,0,2021-02-21 17:20:07+00:00,[],
6058,https://github.com/SimtinicaLucian/TSC_LAB.git,2021-02-24 14:57:00+00:00,,0,SimtinicaLucian/TSC_LAB,341935194,SystemVerilog,TSC_LAB,8453,0,2021-04-21 09:54:35+00:00,[],
6059,https://github.com/aykutshahin/CustomArchitectureCPU.git,2021-02-24 18:47:12+00:00,32 Bit Custom Architecture CPU developed by using SystemVerilog ,0,aykutshahin/CustomArchitectureCPU,342001236,SystemVerilog,CustomArchitectureCPU,175,0,2021-02-24 18:56:39+00:00,[],
6060,https://github.com/erik-fox/Simple-Bus-Interface.git,2021-02-24 21:04:16+00:00,,0,erik-fox/Simple-Bus-Interface,342035208,SystemVerilog,Simple-Bus-Interface,39,0,2021-03-22 18:53:58+00:00,[],
6061,https://github.com/sandyverif/gitwork.git,2021-02-15 10:12:02+00:00,my first git work,0,sandyverif/gitwork,339036684,SystemVerilog,gitwork,1,0,2021-02-15 11:10:07+00:00,[],
6062,https://github.com/metricsjagan/metricsjagan.git,2021-03-29 14:39:08+00:00,Config files for my GitHub profile.,0,metricsjagan/metricsjagan,352676246,SystemVerilog,metricsjagan,19,0,2021-08-24 14:01:21+00:00,"['config', 'github-config']",
6063,https://github.com/cruelkiddy/multicore.git,2021-03-10 11:57:31+00:00,,0,cruelkiddy/multicore,346340063,SystemVerilog,multicore,11437,0,2021-03-10 12:00:42+00:00,[],
6064,https://github.com/zivdar001matin/sbu-arch-lab.git,2021-02-09 15:14:22+00:00,Projects of Architecture Laboratory Course,1,zivdar001matin/sbu-arch-lab,337444811,SystemVerilog,sbu-arch-lab,16937,0,2021-03-12 16:45:52+00:00,[],
6065,https://github.com/sanchc23/Computer-Architecture.git,2021-01-27 17:32:00+00:00,,0,sanchc23/Computer-Architecture,333507585,SystemVerilog,Computer-Architecture,80,0,2023-03-08 04:35:57+00:00,[],
6066,https://github.com/ritik11ritik/Direct-Mapped-Cache.git,2021-02-10 18:53:10+00:00,,0,ritik11ritik/Direct-Mapped-Cache,337822262,SystemVerilog,Direct-Mapped-Cache,10,0,2021-03-18 11:28:38+00:00,[],
6067,https://github.com/pentolope/cookie.git,2021-01-16 02:54:54+00:00,A custom CPU for an FPGA,0,pentolope/cookie,330071122,SystemVerilog,cookie,3088,0,2022-01-12 03:02:42+00:00,"['fpga', 'cpu-architecture', 'cpu', 'verilog', 'systemverilog']",
6068,https://github.com/brycedavid/Keypad-Lock-HDL.git,2021-01-19 22:48:09+00:00,An old Keypad Lock simulation written in Verilog HDL. (Created 4/30/2020),0,brycedavid/Keypad-Lock-HDL,331130315,SystemVerilog,Keypad-Lock-HDL,6,0,2021-01-19 22:57:40+00:00,[],
6069,https://github.com/jtotran/mips-sv.git,2020-11-24 23:00:07+00:00,MIPS architecture implemented in System Verilog.,0,jtotran/mips-sv,315772785,SystemVerilog,mips-sv,609,0,2021-05-14 05:57:27+00:00,[],
6070,https://github.com/rag1404/systemverilog_coverage.git,2020-12-31 18:00:56+00:00,Simple System verilog coverage module,0,rag1404/systemverilog_coverage,325850167,SystemVerilog,systemverilog_coverage,1,0,2020-12-31 18:03:00+00:00,[],
6071,https://github.com/markrealista/NeuronaArtificialConfigurable.git,2021-01-10 14:21:54+00:00,,0,markrealista/NeuronaArtificialConfigurable,328400907,SystemVerilog,NeuronaArtificialConfigurable,5937,0,2021-03-15 20:20:45+00:00,[],
6072,https://github.com/MikeWakeland/AES-SV.git,2021-01-13 05:00:18+00:00,,0,MikeWakeland/AES-SV,329198711,SystemVerilog,AES-SV,277,0,2021-11-10 06:52:35+00:00,[],
6073,https://github.com/sray0309/2-way-superscalar-RISC-V-OoO-processor-design.git,2021-01-31 23:19:07+00:00,,1,sray0309/2-way-superscalar-RISC-V-OoO-processor-design,334778059,SystemVerilog,2-way-superscalar-RISC-V-OoO-processor-design,1953,0,2021-01-31 23:32:24+00:00,[],
6074,https://github.com/vinodsake/Mini-SOC.git,2021-02-01 09:34:08+00:00,,0,vinodsake/Mini-SOC,334897902,SystemVerilog,Mini-SOC,5,0,2021-02-20 18:44:18+00:00,[],
6075,https://github.com/mohamed-hafez-mohamed/System-Verilog.git,2021-02-12 20:35:46+00:00,,0,mohamed-hafez-mohamed/System-Verilog,338427374,SystemVerilog,System-Verilog,2,0,2021-02-12 20:39:28+00:00,[],
6076,https://github.com/alainlou/nandland.git,2021-02-13 18:53:01+00:00,Exploring FPGA board features with nandland tutorials!,0,alainlou/nandland,338645849,SystemVerilog,nandland,47,0,2021-03-15 02:54:57+00:00,[],
6077,https://github.com/billythedummy/seg7.git,2021-01-13 15:26:59+00:00,SystemVerilog driver for DE1_SoC 7-segment display,0,billythedummy/seg7,329349894,SystemVerilog,seg7,129,0,2021-04-12 19:00:57+00:00,[],
6078,https://github.com/oz-matt/ozphy_uvm.git,2021-02-17 02:08:58+00:00,,1,oz-matt/ozphy_uvm,339586670,SystemVerilog,ozphy_uvm,908,0,2021-03-07 10:36:41+00:00,[],
6079,https://github.com/sirius-y/FIFO-using-verilog-with-testbench.git,2021-02-03 10:20:40+00:00,,0,sirius-y/FIFO-using-verilog-with-testbench,335585305,SystemVerilog,FIFO-using-verilog-with-testbench,129,0,2021-02-03 10:27:13+00:00,[],
6080,https://github.com/metro68/Counter.git,2021-02-12 22:32:13+00:00,This project uses the FPGA board to show how one can count in decimal up to 15 using hexadecimal. It uses small 'd' to differentiate D from 0 on the FPGA. It uses 'b' to differentiate B from 8.,0,metro68/Counter,338448648,SystemVerilog,Counter,14316,0,2021-02-12 23:27:32+00:00,[],
6081,https://github.com/shrutimathurvlsi/project_vlsi.git,2020-11-18 09:51:41+00:00,,0,shrutimathurvlsi/project_vlsi,313890037,SystemVerilog,project_vlsi,8,0,2020-11-24 18:57:33+00:00,[],
6082,https://github.com/richardojo12/Verilog-SystemVerilog-Projects.git,2020-12-03 04:01:48+00:00,Richard Ojo's previous projects using Verilog and SystemVerilog,0,richardojo12/Verilog-SystemVerilog-Projects,318069787,SystemVerilog,Verilog-SystemVerilog-Projects,5811,0,2022-02-25 22:56:12+00:00,[],
6083,https://github.com/xsz1216/test.git,2021-01-23 13:44:58+00:00,,0,xsz1216/test,332220380,SystemVerilog,test,40,0,2021-09-15 01:58:02+00:00,[],
6084,https://github.com/amank94007/APB_Protocol.git,2021-01-30 12:31:29+00:00,,0,amank94007/APB_Protocol,334408039,SystemVerilog,APB_Protocol,5083,0,2021-01-30 14:01:54+00:00,[],https://api.github.com/licenses/gpl-3.0
6085,https://github.com/zachchanak/ece554_miniproject.git,2021-01-27 00:45:07+00:00,,0,zachchanak/ece554_miniproject,333258997,SystemVerilog,ece554_miniproject,537,0,2021-02-15 22:15:57+00:00,[],
6086,https://github.com/MrIvor/RegModel.git,2021-01-18 02:01:43+00:00,Using Perl to generate register model,0,MrIvor/RegModel,330529346,,RegModel,44,0,2022-07-16 09:44:51+00:00,[],
6087,https://github.com/AmmaarIftikhar/Processor.git,2021-01-19 17:24:30+00:00,6 instruction processor,0,AmmaarIftikhar/Processor,331056306,SystemVerilog,Processor,209,0,2021-02-27 06:24:03+00:00,[],
6088,https://github.com/ryaanluke/ARC4-Decryption-Circuit.git,2021-02-08 19:43:36+00:00,,0,ryaanluke/ARC4-Decryption-Circuit,337190056,SystemVerilog,ARC4-Decryption-Circuit,498,0,2021-06-21 11:08:34+00:00,[],
6089,https://github.com/JorgePerC/Quartus.git,2021-02-22 22:45:26+00:00,Repo para la clase de Diseño de chips con Lógica programable. ,0,JorgePerC/Quartus,341359081,SystemVerilog,Quartus,38903,0,2021-03-15 05:11:48+00:00,[],
6090,https://github.com/victor4700/EE273_uvm_Verification.git,2021-02-24 13:17:43+00:00," Topics in verification with the full System Verilog language. Majortopics include classes and objects, random constrained test generation, and system-level verification.",0,victor4700/EE273_uvm_Verification,341906508,SystemVerilog,EE273_uvm_Verification,172,0,2021-02-24 13:32:33+00:00,[],
6091,https://github.com/amaltaha67/Pipelined_MIPS_Project.git,2021-01-10 03:26:49+00:00,5 stages Pipelined MIPS using Verilog programming,1,amaltaha67/Pipelined_MIPS_Project,328295004,SystemVerilog,Pipelined_MIPS_Project,757,0,2021-01-30 01:14:10+00:00,[],
6092,https://github.com/ismetalp98/MIPS_PIPELINE-SINGLECYCLE.git,2021-01-10 13:16:20+00:00,,0,ismetalp98/MIPS_PIPELINE-SINGLECYCLE,328387013,SystemVerilog,MIPS_PIPELINE-SINGLECYCLE,162,0,2021-01-29 08:23:15+00:00,[],
6093,https://github.com/Asra-sudo/verilog-code.git,2021-02-15 19:31:56+00:00,,0,Asra-sudo/verilog-code,339185172,SystemVerilog,verilog-code,0,0,2021-02-15 19:39:40+00:00,[],
6094,https://github.com/nicholasrighi/pipelined_arm_cpu.git,2021-02-15 22:00:57+00:00,,0,nicholasrighi/pipelined_arm_cpu,339218741,SystemVerilog,pipelined_arm_cpu,112344,0,2021-03-20 04:39:15+00:00,[],
6095,https://github.com/asucato2/snake_basys3.git,2020-12-08 22:16:14+00:00,,0,asucato2/snake_basys3,319774498,SystemVerilog,snake_basys3,86,0,2020-12-10 14:12:43+00:00,[],
6096,https://github.com/FranZk9/4rk1t3ctUr4.git,2020-12-08 02:01:02+00:00,,0,FranZk9/4rk1t3ctUr4,319497356,SystemVerilog,4rk1t3ctUr4,373,0,2023-02-06 20:58:43+00:00,[],
6097,https://github.com/hamidsalemi77/CAL_ARM_forwarding.git,2020-12-18 03:48:52+00:00,,0,hamidsalemi77/CAL_ARM_forwarding,322481769,SystemVerilog,CAL_ARM_forwarding,22,0,2021-01-04 21:35:40+00:00,[],
6098,https://github.com/alex96295/fullstack_ip_pulptraining.git,2020-12-18 14:11:32+00:00,,0,alex96295/fullstack_ip_pulptraining,322613480,SystemVerilog,fullstack_ip_pulptraining,19,0,2020-12-21 07:19:05+00:00,[],
6099,https://github.com/nhancaheo/otto-glicher.git,2020-12-25 13:55:51+00:00,,0,nhancaheo/otto-glicher,324372250,SystemVerilog,otto-glicher,196,0,2020-12-25 13:57:41+00:00,[],
6100,https://github.com/gradle-hdvl-tests/direct-dependency.git,2020-12-28 12:34:43+00:00,,0,gradle-hdvl-tests/direct-dependency,325008185,SystemVerilog,direct-dependency,57,0,2020-12-28 22:30:49+00:00,[],
6101,https://github.com/leifu00/FPGA-acceleration-of-epidemic-simulation.git,2020-11-29 14:08:22+00:00,,0,leifu00/FPGA-acceleration-of-epidemic-simulation,316965170,SystemVerilog,FPGA-acceleration-of-epidemic-simulation,10662,0,2021-06-17 22:53:06+00:00,[],
6102,https://github.com/hungbk99/AHB_GEN_201.git,2020-11-30 03:31:29+00:00,An AHP Bus Generator From my Thesis Proposal in HCMUT,0,hungbk99/AHB_GEN_201,317101091,SystemVerilog,AHB_GEN_201,51306,0,2021-10-05 11:02:24+00:00,[],
6103,https://github.com/Art-007/FIFO-Buffer.git,2020-12-24 08:14:48+00:00,,0,Art-007/FIFO-Buffer,324103577,SystemVerilog,FIFO-Buffer,19310,0,2021-01-08 05:57:34+00:00,[],
6104,https://github.com/ritik11ritik/CPU-Using-Verilog-HDL.git,2021-01-03 12:09:09+00:00,,0,ritik11ritik/CPU-Using-Verilog-HDL,326398334,SystemVerilog,CPU-Using-Verilog-HDL,30,0,2021-01-03 16:37:44+00:00,[],
6105,https://github.com/iulian098/TSC.git,2021-03-10 09:31:07+00:00,,0,iulian098/TSC,346301804,SystemVerilog,TSC,8212,0,2021-04-08 16:32:02+00:00,[],
6106,https://github.com/DenizOzal/CS223-Digital-Design.git,2021-03-27 20:47:46+00:00,CS223 Lab Assignments,0,DenizOzal/CS223-Digital-Design,352174004,SystemVerilog,CS223-Digital-Design,3598,0,2023-10-15 17:35:34+00:00,[],
6107,https://github.com/T-Venkatesh/Verification-of-SRAM.git,2021-02-26 08:07:05+00:00,,0,T-Venkatesh/Verification-of-SRAM,342505755,SystemVerilog,Verification-of-SRAM,7,0,2021-02-26 08:10:02+00:00,[],https://api.github.com/licenses/mit
6108,https://github.com/mattsini1/vip.git,2021-03-22 16:11:58+00:00,,0,mattsini1/vip,350408253,SystemVerilog,vip,716,0,2021-03-22 16:12:29+00:00,[],
6109,https://github.com/mandebi/SystemVerilog_Examples.git,2021-03-23 01:17:39+00:00,,0,mandebi/SystemVerilog_Examples,350540003,SystemVerilog,SystemVerilog_Examples,35,0,2021-03-23 01:37:23+00:00,[],
6110,https://github.com/RiccardoGandolfi/wide_alu_ip.git,2021-02-23 13:13:16+00:00,Fullstack AXI ip integration from pulp training,4,RiccardoGandolfi/wide_alu_ip,341559532,SystemVerilog,wide_alu_ip,18,0,2021-02-23 13:20:02+00:00,[],
6111,https://github.com/SabinSJ/TSCLab.git,2021-02-25 14:29:14+00:00,,0,SabinSJ/TSCLab,342271248,SystemVerilog,TSCLab,14109,0,2021-04-15 14:43:55+00:00,[],
6112,https://github.com/andreiz98/TSCLab.git,2021-02-25 14:29:43+00:00,,0,andreiz98/TSCLab,342271370,SystemVerilog,TSCLab,14108,0,2021-04-15 19:32:16+00:00,[],
6113,https://github.com/yolanda10202/Pipeline_Adder.git,2021-03-09 07:10:54+00:00,IEEE Student Branch at UCLA Digital Audio Visualizer (DAV) Project Lab 3 Part D,0,yolanda10202/Pipeline_Adder,345915241,SystemVerilog,Pipeline_Adder,8,0,2021-03-15 02:22:44+00:00,[],
6114,https://github.com/diakovd/2WD-Chassis-controlled-by-IBEX-RISC-V.git,2021-03-08 20:21:55+00:00,,1,diakovd/2WD-Chassis-controlled-by-IBEX-RISC-V,345784255,SystemVerilog,2WD-Chassis-controlled-by-IBEX-RISC-V,3985,0,2021-03-08 20:35:44+00:00,[],https://api.github.com/licenses/apache-2.0
6115,https://github.com/singhabhi986/CodeBlock_Verification_Work.git,2021-03-12 17:30:31+00:00,,0,singhabhi986/CodeBlock_Verification_Work,347145579,SystemVerilog,CodeBlock_Verification_Work,25808,0,2021-03-12 17:35:02+00:00,[],
6116,https://github.com/felixoberhansl/verilog-race-testing.git,2020-12-20 13:30:08+00:00,SystemVerilog example that produces correct simulation and synthesis results for pipelined hardware architectures.,0,felixoberhansl/verilog-race-testing,323078578,SystemVerilog,verilog-race-testing,1,0,2020-12-20 13:33:21+00:00,[],
6117,https://github.com/rendaletaas/EE277Project.git,2020-11-15 07:00:19+00:00,"Project for EE277A, Fall 2020",0,rendaletaas/EE277Project,312976296,SystemVerilog,EE277Project,2,0,2020-11-15 07:30:04+00:00,[],
6118,https://github.com/saifjamsheer/vga-pong.git,2020-12-09 17:55:36+00:00,Programming an FPGA to play the game of pong on a VGA display.,0,saifjamsheer/vga-pong,320036944,SystemVerilog,vga-pong,367,0,2020-12-09 18:02:54+00:00,[],
6119,https://github.com/f20170227/memory-allocator-and-garbage-collector.git,2020-12-09 13:17:47+00:00,,0,f20170227/memory-allocator-and-garbage-collector,319962144,SystemVerilog,memory-allocator-and-garbage-collector,87,0,2022-10-05 15:34:39+00:00,[],
6120,https://github.com/gyx3598/uvmprimer.git,2021-01-27 06:09:04+00:00,,0,gyx3598/uvmprimer,333321644,SystemVerilog,uvmprimer,6019,0,2021-01-27 06:09:23+00:00,[],
6121,https://github.com/CPA872/CS_3220.git,2021-02-04 02:13:05+00:00,,0,CPA872/CS_3220,335812374,SystemVerilog,CS_3220,81837,0,2023-03-06 10:56:03+00:00,[],
6122,https://github.com/rag1404/uvm_wait_for_nba_region.svh.git,2021-01-23 07:24:47+00:00,A program to demonstrate the race condition in TB and solve it !!,0,rag1404/uvm_wait_for_nba_region.svh,332152471,SystemVerilog,uvm_wait_for_nba_region.svh,3,0,2021-01-23 07:32:22+00:00,[],
6123,https://github.com/niv1991/RISCV_MT.git,2021-03-07 10:40:13+00:00,RISCV Project,1,niv1991/RISCV_MT,345319267,SystemVerilog,RISCV_MT,231,0,2021-03-07 10:44:40+00:00,[],
6124,https://github.com/ggrigorev/U96.git,2021-03-11 18:38:24+00:00,,0,ggrigorev/U96,346801836,SystemVerilog,U96,14253,0,2021-04-14 18:27:09+00:00,[],
6125,https://github.com/Debagnik/VLSID-Lab.git,2021-01-11 11:34:58+00:00,,0,Debagnik/VLSID-Lab,328643654,SystemVerilog,VLSID-Lab,35843,0,2023-01-28 08:38:18+00:00,[],
6126,https://github.com/mattsini1/tb_pulp.git,2021-03-22 16:12:44+00:00,,0,mattsini1/tb_pulp,350408491,SystemVerilog,tb_pulp,9,0,2021-03-22 16:13:15+00:00,[],
6127,https://github.com/degas91/UART_Controller.git,2021-03-26 01:23:39+00:00,A UART controller coded in Systemverilog,0,degas91/UART_Controller,351624869,SystemVerilog,UART_Controller,15,0,2021-05-24 01:52:27+00:00,[],https://api.github.com/licenses/mit
6128,https://github.com/amirhossein-alizad/MIPS-PipeLine-Implementation.git,2021-02-08 18:46:37+00:00,"PipeLine Implementation of MIPS processor, a project for Computer Architecture course in University of Tehran",0,amirhossein-alizad/MIPS-PipeLine-Implementation,337175447,SystemVerilog,MIPS-PipeLine-Implementation,27,0,2021-02-13 10:56:12+00:00,[],https://api.github.com/licenses/gpl-3.0
6129,https://github.com/bansil-vaghasiya/UVM_Verification_of_SPI_peripheral_Bus.git,2020-12-23 08:32:52+00:00,,0,bansil-vaghasiya/UVM_Verification_of_SPI_peripheral_Bus,323846767,SystemVerilog,UVM_Verification_of_SPI_peripheral_Bus,349,0,2020-12-23 08:45:42+00:00,[],
6130,https://github.com/spotter0226/ECEN4243_Labs.git,2021-01-24 19:13:49+00:00,A place for our lab files to call home.,0,spotter0226/ECEN4243_Labs,332533963,SystemVerilog,ECEN4243_Labs,16289,0,2021-05-01 21:16:18+00:00,[],
6131,https://github.com/rag1404/user_defined_type_in_function.git,2021-01-12 03:24:05+00:00,Return type of a function to be user_defined,0,rag1404/user_defined_type_in_function,328860104,SystemVerilog,user_defined_type_in_function,1,0,2021-01-12 03:27:12+00:00,[],
6132,https://github.com/pragya77/Memory-module-using-UVM-with-configuration-class.git,2021-01-27 14:34:19+00:00,,0,pragya77/Memory-module-using-UVM-with-configuration-class,333448870,SystemVerilog,Memory-module-using-UVM-with-configuration-class,7,0,2021-02-10 18:49:09+00:00,[],
6133,https://github.com/PaulLee950181/Eight_queens_puzzle.git,2021-01-29 09:53:20+00:00,,0,PaulLee950181/Eight_queens_puzzle,334102799,SystemVerilog,Eight_queens_puzzle,6,0,2021-02-02 04:09:36+00:00,[],
6134,https://github.com/yus252/MyRISC.git,2021-01-18 23:37:56+00:00,,0,yus252/MyRISC,330812788,SystemVerilog,MyRISC,1735,0,2021-03-15 22:59:37+00:00,[],
6135,https://github.com/Jun0951/Multiplier-in-GF-2-3-.git,2021-01-21 13:54:37+00:00,,0,Jun0951/Multiplier-in-GF-2-3-,331643659,SystemVerilog,Multiplier-in-GF-2-3-,3,0,2021-01-21 14:03:06+00:00,[],
6136,https://github.com/isVicjiar/multiplier.git,2021-01-21 22:30:07+00:00,,0,isVicjiar/multiplier,331772116,SystemVerilog,multiplier,0,0,2021-02-04 19:32:14+00:00,[],
6137,https://github.com/ImanHosseini/FPGA_fun.git,2020-11-30 12:57:48+00:00,Playing with my Arty-7 Digilent board,0,ImanHosseini/FPGA_fun,317224271,SystemVerilog,FPGA_fun,6,0,2020-12-01 21:20:36+00:00,"['verilog', 'fpga', 'xilinx', 'uart', 'hdl']",
6138,https://github.com/usluonur/Protocol_Specific_VIPs.git,2020-12-30 14:05:45+00:00,,0,usluonur/Protocol_Specific_VIPs,325565928,SystemVerilog,Protocol_Specific_VIPs,8,0,2021-02-14 19:49:11+00:00,[],
6139,https://github.com/Gagandheep/Digital-Logic-Designs.git,2021-01-07 18:31:26+00:00,Digital logic designs and testbenches written in Verilog/SystemVerilog HDL.,0,Gagandheep/Digital-Logic-Designs,327694388,SystemVerilog,Digital-Logic-Designs,11,0,2021-01-07 18:38:41+00:00,[],
6140,https://github.com/emil151997/Crossbar_implementation.git,2021-03-01 19:22:32+00:00,Test Task Syntacore,0,emil151997/Crossbar_implementation,343531192,SystemVerilog,Crossbar_implementation,115,0,2021-03-02 19:36:58+00:00,[],
6141,https://github.com/apth3hack3r/Beverage-Vending-Machine.git,2021-02-25 12:11:40+00:00,Simple Vending Machine Implementation in Verilog,0,apth3hack3r/Beverage-Vending-Machine,342232981,SystemVerilog,Beverage-Vending-Machine,2,0,2021-02-25 12:13:05+00:00,[],
6142,https://github.com/pbhowmik05/UVM_Practice.git,2021-03-05 07:20:44+00:00,the is the base UVM to apply for different models,0,pbhowmik05/UVM_Practice,344727863,SystemVerilog,UVM_Practice,3,0,2021-03-05 07:24:21+00:00,['verification'],
6143,https://github.com/felipelisboa-ml/RISC-V-competition.git,2021-03-08 21:31:26+00:00,,1,felipelisboa-ml/RISC-V-competition,345800695,SystemVerilog,RISC-V-competition,40453,0,2021-05-18 15:37:17+00:00,[],
6144,https://github.com/MarianoIDC/Lab2.git,2021-03-11 15:39:00+00:00,Lab2,0,MarianoIDC/Lab2,346751330,SystemVerilog,Lab2,17,0,2021-03-18 16:04:47+00:00,[],
6145,https://github.com/OwenJaureguiB/Gumnut_Core.git,2021-03-14 18:29:21+00:00,Implementación en HDL de procesador Gumnut,0,OwenJaureguiB/Gumnut_Core,347719747,SystemVerilog,Gumnut_Core,22,0,2021-03-14 19:04:56+00:00,[],
6146,https://github.com/spencer-tb/arm-sv.git,2021-02-21 15:14:47+00:00,Learning to create a 32-bit arm processor using system-verilog.,0,spencer-tb/arm-sv,340931319,SystemVerilog,arm-sv,1,0,2022-08-15 13:02:44+00:00,[],
6147,https://github.com/ritik11ritik/Fully-Associative-Cache.git,2021-03-18 11:15:18+00:00,,0,ritik11ritik/Fully-Associative-Cache,349043884,SystemVerilog,Fully-Associative-Cache,11,0,2021-03-18 11:27:48+00:00,[],
6148,https://github.com/SpaghettiScritps/simple-FPGA-modules.git,2021-03-18 21:04:12+00:00,A few useful modules for SystemVerilog prototyping,0,SpaghettiScritps/simple-FPGA-modules,349216589,,simple-FPGA-modules,12,0,2022-08-19 21:05:16+00:00,[],
6149,https://github.com/zha71186/Systemverilog.git,2021-03-18 18:03:59+00:00,,0,zha71186/Systemverilog,349171897,SystemVerilog,Systemverilog,0,0,2021-03-18 18:29:49+00:00,[],
6150,https://github.com/surendra55555/UVM_Seq_Driver.git,2021-03-26 11:54:30+00:00,,0,surendra55555/UVM_Seq_Driver,351765877,SystemVerilog,UVM_Seq_Driver,4,0,2021-03-26 11:55:06+00:00,[],
6151,https://github.com/emanci/fibonacci.git,2021-02-07 21:47:11+00:00,32-bit fibonacci generator in SystemVerilog with self-checking testbench,0,emanci/fibonacci,336897093,SystemVerilog,fibonacci,2,0,2021-02-07 21:49:22+00:00,[],
6152,https://github.com/mslinklater/verilog.git,2020-11-19 21:41:34+00:00,Various verilog bits n bobs,0,mslinklater/verilog,314376707,SystemVerilog,verilog,3,0,2022-07-19 21:06:04+00:00,[],https://api.github.com/licenses/bsd-2-clause
6153,https://github.com/sportydv00/favor-composition-over-inheritance-even-for-constraints.git,2020-11-29 14:00:55+00:00,constraint mixin/pure virtual class concept,0,sportydv00/favor-composition-over-inheritance-even-for-constraints,316963598,SystemVerilog,favor-composition-over-inheritance-even-for-constraints,32,0,2020-11-29 14:06:26+00:00,[],https://api.github.com/licenses/apache-2.0
6154,https://github.com/harel147/FPGA_lab_project.git,2020-11-28 19:29:57+00:00,,0,harel147/FPGA_lab_project,316807317,SystemVerilog,FPGA_lab_project,20557,0,2020-11-28 20:02:30+00:00,[],
6155,https://github.com/rhemm23/551-final-project.git,2020-11-30 17:01:23+00:00,,0,rhemm23/551-final-project,317290483,SystemVerilog,551-final-project,8195,0,2020-12-26 02:04:41+00:00,[],
6156,https://github.com/jnestor/sr_pq.git,2020-12-18 15:57:58+00:00,Shift Register Hardware Priority Queue,0,jnestor/sr_pq,322639998,SystemVerilog,sr_pq,4,0,2020-12-21 23:38:10+00:00,[],
6157,https://github.com/Smellnefty/fpga-project.git,2020-12-25 21:10:38+00:00,,0,Smellnefty/fpga-project,324433685,SystemVerilog,fpga-project,7467,0,2020-12-28 11:16:22+00:00,[],
6158,https://github.com/ritik11ritik/Arithmetic-and-Logical-Unit-ALU-using-Verilog-HDL.git,2020-12-26 05:47:29+00:00,,0,ritik11ritik/Arithmetic-and-Logical-Unit-ALU-using-Verilog-HDL,324490638,SystemVerilog,Arithmetic-and-Logical-Unit-ALU-using-Verilog-HDL,9,0,2020-12-27 06:12:18+00:00,[],
6159,https://github.com/amirhnazeri/Pipelined-MIPS.git,2020-12-25 14:12:49+00:00,,0,amirhnazeri/Pipelined-MIPS,324374952,SystemVerilog,Pipelined-MIPS,55,0,2020-12-25 14:14:06+00:00,[],
6160,https://github.com/qpalzmm22/pongGame.git,2020-12-18 12:27:35+00:00,with Verilog,0,qpalzmm22/pongGame,322588948,SystemVerilog,pongGame,114,0,2020-12-18 12:30:45+00:00,[],
6161,https://github.com/aj40/CPE133Project.git,2020-11-16 18:05:33+00:00,A stopwatch using Basys 3 board and System Verilog,0,aj40/CPE133Project,313386465,SystemVerilog,CPE133Project,48,0,2020-11-29 10:10:23+00:00,[],
6162,https://github.com/jomero-hex/FIFO-with-Data-Width-Conversion.git,2020-12-11 08:09:24+00:00,,0,jomero-hex/FIFO-with-Data-Width-Conversion,320508610,SystemVerilog,FIFO-with-Data-Width-Conversion,330,0,2020-12-17 22:42:23+00:00,[],
6163,https://github.com/nuaajc-lab107/PCDemo.git,2020-12-11 08:23:59+00:00,2019FPGA，2020嵌入式上位机程序,0,nuaajc-lab107/PCDemo,320511881,SystemVerilog,PCDemo,112563,0,2020-12-11 08:43:26+00:00,[],
6164,https://github.com/medeirosgabriel/verilog.git,2021-01-04 12:47:23+00:00,,0,medeirosgabriel/verilog,326681545,SystemVerilog,verilog,15,0,2021-05-15 15:37:26+00:00,[],
6165,https://github.com/Rafa350/fpga-uart.git,2021-01-08 20:32:27+00:00,UART implementation for my RISCV project,0,Rafa350/fpga-uart,328006126,SystemVerilog,fpga-uart,9,0,2021-01-10 14:47:48+00:00,"['fpga', 'verilog', 'soc', 'uart']",
6166,https://github.com/Art-007/Early-Debouncer.git,2021-01-10 23:21:30+00:00,,0,Art-007/Early-Debouncer,328499927,SystemVerilog,Early-Debouncer,285,0,2021-01-10 23:33:12+00:00,[],
6167,https://github.com/puti2018/test.git,2020-11-26 09:46:45+00:00,,0,puti2018/test,316186168,SystemVerilog,test,2,0,2021-02-22 08:06:37+00:00,[],
6168,https://github.com/fontans2/vlsi_project4.git,2020-11-22 17:59:08+00:00,,0,fontans2/vlsi_project4,315099618,SystemVerilog,vlsi_project4,18952,0,2020-11-22 18:07:45+00:00,[],
6169,https://github.com/jomero-hex/ROM-Based-Temp.-Conversion.git,2020-12-11 08:05:35+00:00,,0,jomero-hex/ROM-Based-Temp.-Conversion,320507764,SystemVerilog,ROM-Based-Temp.-Conversion,9,0,2020-12-22 19:11:51+00:00,[],
6170,https://github.com/Art-007/Hardware-Chasing-LEDs.git,2021-01-04 02:15:01+00:00,,0,Art-007/Hardware-Chasing-LEDs,326545759,SystemVerilog,Hardware-Chasing-LEDs,353,0,2021-01-04 02:36:53+00:00,[],
6171,https://github.com/adamherrmann-ie/edaPlayground.git,2021-03-06 21:37:29+00:00,,0,adamherrmann-ie/edaPlayground,345200638,SystemVerilog,edaPlayground,3,0,2023-09-15 20:26:57+00:00,[],
6172,https://github.com/apfusco/ECE-551-Digital-Audio-Equalizer.git,2021-03-12 03:06:24+00:00,,0,apfusco/ECE-551-Digital-Audio-Equalizer,346918372,SystemVerilog,ECE-551-Digital-Audio-Equalizer,113,0,2021-03-12 03:06:45+00:00,[],
6173,https://github.com/GeorgeKef-School-Projects/fpga_score_4.git,2021-03-29 18:34:30+00:00,"Course: VLSI. The main objective of this project was the implementation of the well-known score_4 game on FPGA. Also, in this project both the results of each players' moves and the status of the game(win/lose/draw) had to be displayed on a monitor through VGA. In this repository you can find both the module for the gameplay but also a test bench that is mainly created from the director of the course.",0,GeorgeKef-School-Projects/fpga_score_4,352747146,SystemVerilog,fpga_score_4,5,0,2022-05-24 17:07:57+00:00,[],
6174,https://github.com/cturgeon/SystemVerilogProject.git,2021-01-13 19:50:36+00:00,,0,cturgeon/SystemVerilogProject,329415606,SystemVerilog,SystemVerilogProject,17,0,2021-01-13 19:56:48+00:00,[],
6175,https://github.com/JeffG-robot/Image-Decompression.git,2021-01-17 23:24:23+00:00,,0,JeffG-robot/Image-Decompression,330507081,SystemVerilog,Image-Decompression,7,0,2021-01-17 23:30:19+00:00,[],
6176,https://github.com/quangphan2405/yapp_router.git,2021-01-12 05:21:35+00:00,Design and verify a YAPP router using UVM methodology,1,quangphan2405/yapp_router,328880633,SystemVerilog,yapp_router,122,0,2021-01-24 21:59:27+00:00,[],
6177,https://github.com/JelenaVujakovic/esl.git,2021-01-12 16:21:35+00:00,,0,JelenaVujakovic/esl,329044003,SystemVerilog,esl,12483,0,2021-01-12 16:29:31+00:00,[],
6178,https://github.com/raymondx3759/serial-protocols-SV.git,2021-01-26 03:20:43+00:00,,0,raymondx3759/serial-protocols-SV,332958273,SystemVerilog,serial-protocols-SV,336,0,2021-01-26 04:48:18+00:00,[],
6179,https://github.com/Christian-Henke/ece554_miniproject.git,2021-01-27 00:48:16+00:00,"This may be a description, but if it is, it is not a very descriptive one.",0,Christian-Henke/ece554_miniproject,333259524,SystemVerilog,ece554_miniproject,517,0,2021-02-15 21:48:14+00:00,[],
6180,https://github.com/rag1404/uvm_error_quit_simulation.git,2021-02-02 06:00:08+00:00,A program to demonstrate different ways to quit simulation based on UVM_ERROR !,0,rag1404/uvm_error_quit_simulation,335185140,SystemVerilog,uvm_error_quit_simulation,8,0,2021-02-02 06:32:07+00:00,[],
6181,https://github.com/Radiophantom/mem_checker.git,2021-02-06 19:23:35+00:00,,0,Radiophantom/mem_checker,336618081,SystemVerilog,mem_checker,361,0,2021-02-19 07:45:34+00:00,[],
6182,https://github.com/T-Venkatesh/Verification-of-fifo-using-sv.git,2021-02-26 07:56:10+00:00,,0,T-Venkatesh/Verification-of-fifo-using-sv,342503203,SystemVerilog,Verification-of-fifo-using-sv,18,0,2021-02-26 08:05:23+00:00,[],https://api.github.com/licenses/lgpl-2.1
6183,https://github.com/aprinjha/ECE385_FinalProject.git,2021-02-27 17:36:39+00:00,,0,aprinjha/ECE385_FinalProject,342917864,SystemVerilog,ECE385_FinalProject,14,0,2021-02-27 19:14:02+00:00,[],
6184,https://github.com/RnkC/SyNC.git,2021-02-28 13:15:29+00:00,,0,RnkC/SyNC,343109489,SystemVerilog,SyNC,8476,0,2021-07-22 11:00:32+00:00,[],https://api.github.com/licenses/gpl-3.0
6185,https://github.com/alexandruostafi/TSC_Lab.git,2021-02-24 14:57:11+00:00,,0,alexandruostafi/TSC_Lab,341935259,SystemVerilog,TSC_Lab,351,0,2021-04-20 21:32:52+00:00,[],
6186,https://github.com/SorinMiron/TSC_Lab.git,2021-02-24 16:31:07+00:00,,0,SorinMiron/TSC_Lab,341963360,SystemVerilog,TSC_Lab,8349,0,2021-04-17 19:54:21+00:00,[],
6187,https://github.com/george-hcc/sv-workshop.git,2021-03-04 19:37:32+00:00,A small collection of SystemVerilog blocks built between 2018 and 2019 for learning purposes.,0,george-hcc/sv-workshop,344588639,SystemVerilog,sv-workshop,55,0,2021-03-04 20:23:57+00:00,[],
6188,https://github.com/Tyler1T/Lab-3.git,2021-03-05 21:44:33+00:00,,0,Tyler1T/Lab-3,344941734,SystemVerilog,Lab-3,284,0,2021-03-22 01:28:18+00:00,[],
6189,https://github.com/mowaida/DecisionTrees.git,2021-03-17 15:26:44+00:00,,0,mowaida/DecisionTrees,348758908,SystemVerilog,DecisionTrees,39,0,2021-03-17 15:26:57+00:00,[],https://api.github.com/licenses/gpl-3.0
6190,https://github.com/spdy1895/sv_hdl.git,2021-03-19 17:58:39+00:00,,1,spdy1895/sv_hdl,349511961,SystemVerilog,sv_hdl,561,0,2021-05-25 12:20:43+00:00,[],
6191,https://github.com/mfkiwl/MY_RISCV.git,2021-03-25 15:26:25+00:00,,0,mfkiwl/MY_RISCV,351484804,,MY_RISCV,3445,0,2021-03-28 06:00:39+00:00,[],
6192,https://github.com/glkclass/rtl_example.git,2021-02-23 09:16:34+00:00,,0,glkclass/rtl_example,341495607,SystemVerilog,rtl_example,538,0,2022-09-14 16:22:41+00:00,[],
6193,https://github.com/davideschiavone/cv32e40davide.git,2021-02-23 09:17:44+00:00,,1,davideschiavone/cv32e40davide,341495904,SystemVerilog,cv32e40davide,5441,0,2021-02-23 09:22:33+00:00,[],
6194,https://github.com/clsandoval/cs_21_project.git,2021-03-15 11:45:54+00:00,CS 21 Course Final Project,0,clsandoval/cs_21_project,347947414,SystemVerilog,cs_21_project,315,0,2021-08-17 11:59:38+00:00,[],
6195,https://github.com/rag1404/uvm_set_report_macros.svh.git,2021-01-19 06:01:33+00:00,A Simple program to demonstrate the capabilities of uvm_set_report macros !,0,rag1404/uvm_set_report_macros.svh,330880059,SystemVerilog,uvm_set_report_macros.svh,9,0,2021-01-22 02:29:46+00:00,[],
6196,https://github.com/XuZhang480/HomeAutomation.git,2021-02-20 01:52:05+00:00,The assignment of hardware design course.,0,XuZhang480/HomeAutomation,340536107,SystemVerilog,HomeAutomation,4455,0,2021-04-09 08:28:49+00:00,[],
6197,https://github.com/Engr315/P4_Popcount.git,2021-02-19 15:54:56+00:00,,0,Engr315/P4_Popcount,340417711,SystemVerilog,P4_Popcount,11320,0,2022-09-16 15:50:08+00:00,[],
6198,https://github.com/rtldesignlabs/debouncer.git,2021-02-21 19:09:52+00:00,Debouncer core for FPGA inputs,0,rtldesignlabs/debouncer,340981869,SystemVerilog,debouncer,3622,0,2021-05-09 09:36:25+00:00,[],
6199,https://github.com/LuyangLee/fpga_demo.git,2021-03-01 09:02:03+00:00,,0,LuyangLee/fpga_demo,343351196,SystemVerilog,fpga_demo,1,0,2021-03-01 09:08:19+00:00,[],
6200,https://github.com/mahmoudabdelhadii/Lab4.git,2021-03-18 00:34:18+00:00,,0,mahmoudabdelhadii/Lab4,348892545,SystemVerilog,Lab4,24920,0,2022-02-23 23:40:02+00:00,[],
6201,https://github.com/danjapapajani/computer-hardware.git,2021-01-20 01:07:25+00:00,"Labs for ECE342, Winter 2019",0,danjapapajani/computer-hardware,331153908,SystemVerilog,computer-hardware,307,0,2021-01-20 01:46:52+00:00,[],
6202,https://github.com/alkimonen/Emergency-Elevator-Simulator.git,2021-02-11 11:45:43+00:00,,0,alkimonen/Emergency-Elevator-Simulator,338013451,SystemVerilog,Emergency-Elevator-Simulator,1892,0,2021-04-08 14:04:45+00:00,[],
6203,https://github.com/yvantor/wide_alu_ip.git,2021-03-09 16:39:13+00:00,,0,yvantor/wide_alu_ip,346074122,SystemVerilog,wide_alu_ip,11,0,2021-11-28 17:14:26+00:00,[],
6204,https://github.com/Ytm0316/vsdfinal.git,2021-01-04 17:32:16+00:00,,0,Ytm0316/vsdfinal,326759433,SystemVerilog,vsdfinal,1,0,2021-01-04 17:34:59+00:00,[],
6205,https://github.com/VladislavProzhirko/activecore_cpu_log.git,2020-12-30 17:48:16+00:00,,0,VladislavProzhirko/activecore_cpu_log,325613251,SystemVerilog,activecore_cpu_log,9926,0,2021-01-02 11:52:19+00:00,[],
6206,https://github.com/umutZeren/MIPS-ARCHITECTURE-IN-SV.git,2020-12-29 11:45:17+00:00,Implementing MIPS Arhitecture in System verilog.Can be test with modelsim,0,umutZeren/MIPS-ARCHITECTURE-IN-SV,325271963,SystemVerilog,MIPS-ARCHITECTURE-IN-SV,5,0,2020-12-29 11:46:41+00:00,[],
6207,https://github.com/rag1404/uvm_tlm_ports_part1.git,2021-01-15 05:09:42+00:00,A Simple program to communicate between uvm components ,0,rag1404/uvm_tlm_ports_part1,329814793,SystemVerilog,uvm_tlm_ports_part1,14,0,2021-01-15 08:25:07+00:00,[],
6208,https://github.com/mattsini1/i2s_microphone.git,2021-03-22 16:10:17+00:00,,0,mattsini1/i2s_microphone,350407779,SystemVerilog,i2s_microphone,1,0,2021-03-22 16:10:35+00:00,[],
6209,https://github.com/erik-fox/Cache-Project.git,2021-03-22 18:51:01+00:00,,0,erik-fox/Cache-Project,350454899,SystemVerilog,Cache-Project,252,0,2021-03-22 18:51:56+00:00,[],
6210,https://github.com/jackgronenthal/doodle_jump.git,2021-01-28 17:28:29+00:00,,0,jackgronenthal/doodle_jump,333833423,SystemVerilog,doodle_jump,1456,0,2021-01-28 17:40:59+00:00,[],
6211,https://github.com/alexjmck/elec374.git,2021-01-29 19:41:23+00:00,,0,alexjmck/elec374,334246053,SystemVerilog,elec374,50,0,2021-03-08 14:01:35+00:00,[],
6212,https://github.com/BourgeoisLenin/ece554_miniproject.git,2021-01-26 23:14:41+00:00,,0,BourgeoisLenin/ece554_miniproject,333243112,SystemVerilog,ece554_miniproject,4396,0,2021-02-16 23:30:57+00:00,[],
6213,https://github.com/zachchanak/ece554_miniproject-.git,2021-01-27 00:26:34+00:00,,0,zachchanak/ece554_miniproject-,333255638,SystemVerilog,ece554_miniproject-,4251,0,2021-01-27 00:39:03+00:00,[],
6214,https://github.com/lyftfc/vitis-rtl-kernel-example.git,2021-03-03 10:56:33+00:00,,0,lyftfc/vitis-rtl-kernel-example,344095023,SystemVerilog,vitis-rtl-kernel-example,11,0,2021-03-03 10:57:13+00:00,[],
6215,https://github.com/YirenZzz/ECE342.git,2021-03-03 20:17:42+00:00,Computer Hardware,0,YirenZzz/ECE342,344252676,SystemVerilog,ECE342,4972,0,2021-03-03 20:35:43+00:00,[],
6216,https://github.com/anouar-saliheddine/cva6.git,2021-02-03 23:07:32+00:00,,0,anouar-saliheddine/cva6,335779699,SystemVerilog,cva6,38075,0,2021-02-03 23:10:33+00:00,[],
6217,https://github.com/cezaraluca/-cezaraluca-Lab_TSC.git,2021-03-10 15:06:20+00:00,,0,cezaraluca/-cezaraluca-Lab_TSC,346395116,SystemVerilog,-cezaraluca-Lab_TSC,8418,0,2021-04-21 11:06:16+00:00,[],
6218,https://github.com/thao-n/UART.git,2021-03-29 13:50:24+00:00,,0,thao-n/UART,352660352,SystemVerilog,UART,3,0,2021-03-29 13:51:01+00:00,[],
6219,https://github.com/slayterteal/Pipeline-ARM-Implementation.git,2021-03-23 01:00:15+00:00,,0,slayterteal/Pipeline-ARM-Implementation,350536305,SystemVerilog,Pipeline-ARM-Implementation,1168,0,2021-04-09 15:22:41+00:00,[],
6220,https://github.com/CleopatraShao/ALU_32.git,2021-03-24 06:31:38+00:00,Fudan 计算机体系结构实验lab1,0,CleopatraShao/ALU_32,350971054,SystemVerilog,ALU_32,10,0,2022-04-20 01:45:34+00:00,[],https://api.github.com/licenses/apache-2.0
6221,https://github.com/y-kim/memtester-sv.git,2021-03-24 01:18:03+00:00,SystemVerilog implementation of memtester 4,1,y-kim/memtester-sv,350907137,SystemVerilog,memtester-sv,16,0,2021-11-04 07:09:57+00:00,[],https://api.github.com/licenses/gpl-2.0
6222,https://github.com/ItaruKawakomo/hdl.git,2020-12-08 18:29:01+00:00,,0,ItaruKawakomo/hdl,319726351,SystemVerilog,hdl,8,0,2021-02-15 15:31:00+00:00,[],https://api.github.com/licenses/mit
6223,https://github.com/shrutimathurvlsi/test_repo.git,2020-11-16 19:48:22+00:00,,0,shrutimathurvlsi/test_repo,313410337,SystemVerilog,test_repo,2,0,2020-11-16 20:14:52+00:00,[],
6224,https://github.com/nickkochlowski/arm_with_nn_module.git,2020-11-15 03:30:57+00:00,,0,nickkochlowski/arm_with_nn_module,312950478,SystemVerilog,arm_with_nn_module,37,0,2020-12-09 14:36:03+00:00,[],
6225,https://github.com/meetm81193/uvm_env.git,2020-11-29 08:17:25+00:00,"This project includes creation of beginner level verification enviornement using UVM methodolgy. Here a design is simple up down counter. Main aim is to learn use of different UVM consturcts, method and component.",0,meetm81193/uvm_env,316905497,SystemVerilog,uvm_env,147,0,2020-11-29 10:06:50+00:00,[],
6226,https://github.com/husemoller/ECE_551_MazeRunner.git,2020-11-30 16:31:28+00:00,,1,husemoller/ECE_551_MazeRunner,317282789,SystemVerilog,ECE_551_MazeRunner,98,0,2020-12-08 21:52:12+00:00,[],
6227,https://github.com/yufat48/PD.git,2021-01-19 19:21:38+00:00,,0,yufat48/PD,331085284,SystemVerilog,PD,1,0,2021-01-21 05:28:07+00:00,[],
6228,https://github.com/pragya77/Adder-design-SystemVerilog.git,2021-01-17 21:55:21+00:00,,0,pragya77/Adder-design-SystemVerilog,330494386,SystemVerilog,Adder-design-SystemVerilog,6,0,2021-02-26 14:19:24+00:00,[],
6229,https://github.com/beratkizilarmut/ELM234-Projects.git,2021-02-18 10:26:57+00:00,ELM234 - Logic Circuits Lecture Personal Works,0,beratkizilarmut/ELM234-Projects,340013459,SystemVerilog,ELM234-Projects,5017,0,2021-02-18 13:22:47+00:00,[],
6230,https://github.com/CorradoBonfanti/wide_alu.git,2021-02-19 16:39:39+00:00,fullstack_ip_integration_ex,0,CorradoBonfanti/wide_alu,340429549,SystemVerilog,wide_alu,18,0,2021-02-22 01:34:39+00:00,[],
6231,https://github.com/Mohamed-320/AMBA3_APB_Verification-Using-UVM.git,2021-02-14 00:17:03+00:00,,0,Mohamed-320/AMBA3_APB_Verification-Using-UVM,338697752,SystemVerilog,AMBA3_APB_Verification-Using-UVM,689,0,2022-02-21 20:30:41+00:00,[],
6232,https://github.com/irwinfrimpong/ece416_irwin_adam_mithil.git,2021-02-11 18:32:42+00:00,ECE 416 - Advanced Digital Design and Verification Lab files ,0,irwinfrimpong/ece416_irwin_adam_mithil,338117029,SystemVerilog,ece416_irwin_adam_mithil,116654,0,2021-05-28 19:18:09+00:00,[],
6233,https://github.com/tiffanishilts/Rojobot.git,2021-02-15 02:05:12+00:00,ECE 540 project two,0,tiffanishilts/Rojobot,338945553,SystemVerilog,Rojobot,795747,0,2022-10-06 05:25:42+00:00,[],
6234,https://github.com/basilmahmood/EECS4612-Proj2-Verilog.git,2021-03-14 01:47:13+00:00,,0,basilmahmood/EECS4612-Proj2-Verilog,347520786,SystemVerilog,EECS4612-Proj2-Verilog,46,0,2021-03-16 02:07:18+00:00,[],
6235,https://github.com/billythedummy/zhoot.git,2021-03-09 14:24:59+00:00,Arcade style shooter made for the DE1_SoC,0,billythedummy/zhoot,346032798,SystemVerilog,zhoot,342,0,2021-04-12 19:07:34+00:00,[],
6236,https://github.com/eedd778/IC2021.git,2021-03-24 01:56:00+00:00,,0,eedd778/IC2021,350914686,SystemVerilog,IC2021,87,0,2021-03-24 01:57:16+00:00,[],
6237,https://github.com/pro100valeo/Example-.git,2021-03-26 20:34:46+00:00,,0,pro100valeo/Example-,351905577,SystemVerilog,Example-,12,0,2021-03-26 22:20:19+00:00,[],
6238,https://github.com/ritik11ritik/FIFO-design-using-Verilog-HDL.git,2020-12-26 05:30:17+00:00,,0,ritik11ritik/FIFO-design-using-Verilog-HDL,324488418,SystemVerilog,FIFO-design-using-Verilog-HDL,10,0,2021-02-11 05:45:29+00:00,[],
6239,https://github.com/Chlorophytus/leopard.git,2020-12-22 16:38:03+00:00,Arty A7 VGA rendering tests,0,Chlorophytus/leopard,323680173,SystemVerilog,leopard,12,0,2021-01-26 12:09:29+00:00,[],https://api.github.com/licenses/mit
6240,https://github.com/jomero-hex/Parameterized-Barrel-Shifter.git,2020-12-11 07:10:00+00:00,,0,jomero-hex/Parameterized-Barrel-Shifter,320495577,SystemVerilog,Parameterized-Barrel-Shifter,56,0,2020-12-17 03:41:52+00:00,[],
6241,https://github.com/Ahmed23Adel/Stop_watch.git,2020-12-25 14:44:55+00:00,,0,Ahmed23Adel/Stop_watch,324380034,SystemVerilog,Stop_watch,12,0,2021-09-29 12:52:11+00:00,[],
6242,https://github.com/ritik11ritik/Car_Parking_System-Using-Verilog.git,2020-12-26 16:49:31+00:00,,0,ritik11ritik/Car_Parking_System-Using-Verilog,324596897,SystemVerilog,Car_Parking_System-Using-Verilog,75,0,2021-02-11 05:44:54+00:00,[],
6243,https://github.com/vthota3/OCPP.git,2021-01-02 03:41:15+00:00,This Project is on OCPP for EV's ,0,vthota3/OCPP,326102320,SystemVerilog,OCPP,2,0,2021-01-02 04:02:29+00:00,[],
6244,https://github.com/Tyler1T/ComputerArchitectureLab.git,2021-01-22 21:51:01+00:00,,0,Tyler1T/ComputerArchitectureLab,332070454,SystemVerilog,ComputerArchitectureLab,3236,0,2021-04-09 21:32:25+00:00,[],
6245,https://github.com/DiKev/554Mini.git,2021-01-29 00:54:33+00:00,,0,DiKev/554Mini,333997307,SystemVerilog,554Mini,504,0,2021-01-29 03:42:45+00:00,[],
6246,https://github.com/zyleei/mini-pro.git,2021-01-28 21:52:12+00:00,,0,zyleei/mini-pro,333965820,SystemVerilog,mini-pro,115,0,2021-09-06 03:18:44+00:00,[],
6247,https://github.com/ErikFanderson/toolbox-xilinx-examples.git,2021-01-29 01:37:20+00:00,Examples using non-project TCL flow with Xilinx Vivado software,0,ErikFanderson/toolbox-xilinx-examples,334005085,SystemVerilog,toolbox-xilinx-examples,97,0,2021-10-11 02:09:23+00:00,[],
6248,https://github.com/abfouts/S20_ECE351.git,2021-02-03 20:31:43+00:00,Portland State University ECE 351 - System Verilog,0,abfouts/S20_ECE351,335746918,SystemVerilog,S20_ECE351,23120,0,2021-02-03 20:43:26+00:00,[],
6249,https://github.com/dahandave/VSCode-Training.git,2020-12-12 10:17:52+00:00,,0,dahandave/VSCode-Training,320802155,SystemVerilog,VSCode-Training,1,0,2020-12-14 23:41:15+00:00,[],
6250,https://github.com/erik-fox/N-bit-divider-and-FP-package.git,2021-02-11 20:20:51+00:00,,0,erik-fox/N-bit-divider-and-FP-package,338142827,SystemVerilog,N-bit-divider-and-FP-package,49,0,2021-02-23 02:23:21+00:00,[],
6251,https://github.com/GCET231/tut3-simulacao-hdl.git,2021-02-19 20:52:08+00:00,Tutoriais de Simulação,0,GCET231/tut3-simulacao-hdl,340486717,SystemVerilog,tut3-simulacao-hdl,4118,0,2022-09-07 20:21:13+00:00,[],
6252,https://github.com/arkhan91/auriga.git,2021-01-15 09:23:45+00:00,,0,arkhan91/auriga,329865406,SystemVerilog,auriga,397,0,2023-08-10 07:15:01+00:00,[],https://api.github.com/licenses/mit
6253,https://github.com/rag1404/uvm_tlm_ports_part2.git,2021-01-15 07:44:15+00:00,UVM analysis exports and imp ports,0,rag1404/uvm_tlm_ports_part2,329843069,SystemVerilog,uvm_tlm_ports_part2,4,0,2022-02-08 02:40:23+00:00,[],
6254,https://github.com/shilei-massclouds/msoc.git,2021-01-07 07:24:21+00:00,risc-v soc experiment,0,shilei-massclouds/msoc,327535228,SystemVerilog,msoc,15897,0,2023-04-25 02:00:14+00:00,[],https://api.github.com/licenses/gpl-2.0
6255,https://github.com/gitred-e/system_verilog.git,2020-12-13 16:58:58+00:00,Some example environment codes,0,gitred-e/system_verilog,321114901,SystemVerilog,system_verilog,9,0,2020-12-13 17:12:50+00:00,[],
6256,https://github.com/Dharmendradp/System-Verilog.git,2021-02-15 09:52:53+00:00,Basic Programs Related to system Verilog & environments,1,Dharmendradp/System-Verilog,339031807,SystemVerilog,System-Verilog,49,0,2021-02-15 10:26:01+00:00,[],
6257,https://github.com/BourgeoisLenin/Team10Minilab6.git,2021-02-16 16:28:34+00:00,,0,BourgeoisLenin/Team10Minilab6,339459890,SystemVerilog,Team10Minilab6,714,0,2021-02-17 05:31:38+00:00,[],
6258,https://github.com/thomas-lykouras/DVLSI-Perceptron.git,2021-02-14 03:59:02+00:00,,0,thomas-lykouras/DVLSI-Perceptron,338725079,SystemVerilog,DVLSI-Perceptron,20,0,2021-04-12 20:53:56+00:00,[],
6259,https://github.com/MorgalNikita/fifo.git,2021-02-17 20:36:00+00:00,,0,MorgalNikita/fifo,339849178,SystemVerilog,fifo,10,0,2021-02-19 09:14:45+00:00,[],
6260,https://github.com/erik-fox/Pipelined-N-bit-divider-Structs-and-Unions.git,2021-02-17 19:56:01+00:00,,0,erik-fox/Pipelined-N-bit-divider-Structs-and-Unions,339840102,SystemVerilog,Pipelined-N-bit-divider-Structs-and-Unions,43,0,2021-02-23 02:25:44+00:00,[],
6261,https://github.com/ybryan3/ARM-CPU-Diagnostic-Program.git,2020-11-16 07:05:14+00:00,B EE 425 Microprocessor System Design Lab,0,ybryan3/ARM-CPU-Diagnostic-Program,313217234,SystemVerilog,ARM-CPU-Diagnostic-Program,904,0,2020-11-16 07:31:09+00:00,"['arm', 'systemverilog', 'lab', 'quartus-prime']",
6262,https://github.com/risapav/blinky.git,2020-11-17 15:26:15+00:00,FPGA AC608 demo app,0,risapav/blinky,313661133,SystemVerilog,blinky,13281,0,2020-11-25 17:16:46+00:00,[],https://api.github.com/licenses/mit
6263,https://github.com/ctrunkett/LogicAnalyzer.git,2020-11-18 21:59:54+00:00,Verilog/SystemVerilog logic analyzer,0,ctrunkett/LogicAnalyzer,314068355,SystemVerilog,LogicAnalyzer,57,0,2020-11-18 22:03:38+00:00,[],
6264,https://github.com/PangTiger/TinyCPULab.git,2020-11-29 09:01:20+00:00,,0,PangTiger/TinyCPULab,316912305,SystemVerilog,TinyCPULab,3055,0,2021-02-03 15:52:56+00:00,[],
6265,https://github.com/ProgrammingVibes/4DM4lab4.git,2020-11-25 14:05:38+00:00,,1,ProgrammingVibes/4DM4lab4,315957510,SystemVerilog,4DM4lab4,27,0,2020-12-07 20:41:24+00:00,[],
6266,https://github.com/chocola-mint/Dance-Invaders.git,2020-12-02 06:23:23+00:00,Final project for the course Logic Design Laboratory (2020 Fall),0,chocola-mint/Dance-Invaders,317769846,SystemVerilog,Dance-Invaders,243658,0,2023-01-28 10:40:24+00:00,[],
6267,https://github.com/varunsax12/single_cycle_mips.git,2021-02-27 10:46:39+00:00,Implementation of 32-bit single cycle MIPS processor,0,varunsax12/single_cycle_mips,342832793,SystemVerilog,single_cycle_mips,11,0,2022-07-17 03:21:13+00:00,[],
6268,https://github.com/quangphan2405/switch.git,2021-01-08 19:48:11+00:00,Create verification components for a simplified 4-port switch design using SystemVerilog,1,quangphan2405/switch,327997689,SystemVerilog,switch,21,0,2022-05-31 07:05:52+00:00,[],
6269,https://github.com/OwenHoffend/sc_sim.git,2021-01-23 05:27:52+00:00,A Python utility for analyzing stochastic circuit designs,0,OwenHoffend/sc_sim,332135041,SystemVerilog,sc_sim,796,0,2023-02-16 20:59:55+00:00,[],https://api.github.com/licenses/mit
6270,https://github.com/laula27/Asic_Design.git,2021-01-30 19:42:32+00:00,,0,laula27/Asic_Design,334497039,SystemVerilog,Asic_Design,1801,0,2021-12-19 22:31:19+00:00,[],
6271,https://github.com/jackkot/modelsim_templates.git,2021-02-05 09:26:26+00:00,,0,jackkot/modelsim_templates,336223766,SystemVerilog,modelsim_templates,26,0,2021-02-05 09:28:22+00:00,[],
6272,https://github.com/mattsini1/wide_alu_ip.git,2021-02-08 18:32:57+00:00,,0,mattsini1/wide_alu_ip,337171936,SystemVerilog,wide_alu_ip,10,0,2021-02-08 18:36:16+00:00,[],
6273,https://github.com/rag1404/uvm_messaging_verbosity.git,2021-01-17 23:08:29+00:00,Lets take a look at the uvm_verbosity definitions ,0,rag1404/uvm_messaging_verbosity,330504979,SystemVerilog,uvm_messaging_verbosity,12,0,2021-01-22 02:31:17+00:00,[],
6274,https://github.com/lookout1992/uvm-first-part.git,2021-01-05 08:11:51+00:00,UVM平台第一部分可以使用的验证平台,1,lookout1992/uvm-first-part,326930762,SystemVerilog,uvm-first-part,6,0,2021-01-21 14:24:31+00:00,[],
6275,https://github.com/alina-andreevna/uvm_training.git,2021-01-24 16:22:16+00:00,,0,alina-andreevna/uvm_training,332496172,SystemVerilog,uvm_training,34,0,2022-01-09 14:50:02+00:00,[],
6276,https://github.com/ECE581-2021-WINTER/synth_repo_14nm_bak.git,2021-01-24 17:16:30+00:00,,0,ECE581-2021-WINTER/synth_repo_14nm_bak,332508432,SystemVerilog,synth_repo_14nm_bak,1433,0,2021-01-25 01:25:53+00:00,[],
6277,https://github.com/nickHayden1/ece554_miniproject.git,2021-01-27 01:00:23+00:00,,0,nickHayden1/ece554_miniproject,333261812,SystemVerilog,ece554_miniproject,626,0,2021-01-28 02:34:10+00:00,[],
6278,https://github.com/MolnarSzabolcsGit/TSC_LAB.git,2021-03-03 16:30:41+00:00,,0,MolnarSzabolcsGit/TSC_LAB,344191342,SystemVerilog,TSC_LAB,8008,0,2021-04-20 20:04:28+00:00,[],
6279,https://github.com/Engr315/P6_DMA_Popcount.git,2021-03-22 19:26:19+00:00,,0,Engr315/P6_DMA_Popcount,350464118,SystemVerilog,P6_DMA_Popcount,11348,0,2022-10-13 14:35:41+00:00,[],
6280,https://github.com/EEESocbitmesra/UART-master.git,2021-02-15 10:15:27+00:00,,2,EEESocbitmesra/UART-master,339037574,SystemVerilog,UART-master,33,0,2021-02-26 14:14:27+00:00,[],
6281,https://github.com/haocheng1230/ECE554_Spring2021.git,2021-02-12 12:22:06+00:00,,0,haocheng1230/ECE554_Spring2021,338311552,SystemVerilog,ECE554_Spring2021,244670,0,2021-02-12 13:36:13+00:00,[],
6282,https://github.com/vwsandhya/vw-gitwork.git,2021-02-15 11:07:10+00:00,my first github work,0,vwsandhya/vw-gitwork,339050634,SystemVerilog,vw-gitwork,2,0,2021-02-15 13:24:40+00:00,[],
6283,https://github.com/neiamenase/DAT410_Assignemnt4.git,2021-02-16 04:14:22+00:00,for data source,0,neiamenase/DAT410_Assignemnt4,339282191,SystemVerilog,DAT410_Assignemnt4,2388,0,2021-02-27 09:51:28+00:00,[],
6284,https://github.com/wabrams/riscv-fpga.git,2021-01-21 21:47:00+00:00,,0,wabrams/riscv-fpga,331763540,SystemVerilog,riscv-fpga,412,0,2021-02-23 02:48:54+00:00,[],
6285,https://github.com/haihai-self/chipyard-cache.git,2021-03-03 12:48:11+00:00,,0,haihai-self/chipyard-cache,344124108,SystemVerilog,chipyard-cache,291,0,2021-05-27 07:41:58+00:00,[],
6286,https://github.com/shrutimathurvlsi/project_repo.git,2020-11-17 03:50:20+00:00,,0,shrutimathurvlsi/project_repo,313500401,SystemVerilog,project_repo,2,0,2020-11-17 04:05:41+00:00,[],
6287,https://github.com/ryanktoeung/Shower_Time.git,2020-12-10 20:27:35+00:00,,0,ryanktoeung/Shower_Time,320382091,SystemVerilog,Shower_Time,80,0,2020-12-10 20:34:42+00:00,[],
6288,https://github.com/jomero-hex/Programmable-Square-Wave-Generator.git,2020-12-11 07:29:41+00:00,,0,jomero-hex/Programmable-Square-Wave-Generator,320499824,SystemVerilog,Programmable-Square-Wave-Generator,3,0,2020-12-17 22:19:36+00:00,[],
6289,https://github.com/georgc4/FPGASlotMachine.git,2020-11-22 19:11:56+00:00,A slot machine implemented with SystemVerilog,0,georgc4/FPGASlotMachine,315112827,SystemVerilog,FPGASlotMachine,243,0,2022-03-20 05:57:25+00:00,[],
6290,https://github.com/christinewoo/HammerFPGA.git,2020-12-09 13:43:10+00:00,"FPGA, VGA, SystemVerilog Final Project",0,christinewoo/HammerFPGA,319968840,SystemVerilog,HammerFPGA,19,0,2022-01-13 22:02:59+00:00,[],
6291,https://github.com/eliyahudev/mannix.git,2020-12-08 16:55:34+00:00,final_project,1,eliyahudev/mannix,319703439,SystemVerilog,mannix,180253,0,2021-12-14 21:35:25+00:00,[],
6292,https://github.com/pastchick3/risc-v-processor-sv.git,2020-12-12 09:20:04+00:00,"A simple RISC-V processor for learning, written in SystemVerilog.",1,pastchick3/risc-v-processor-sv,320792327,SystemVerilog,risc-v-processor-sv,1222,0,2021-01-15 01:21:02+00:00,[],https://api.github.com/licenses/mit
6293,https://github.com/dacasanovat/ProyectoFinalSDA.git,2020-12-08 00:13:01+00:00,,0,dacasanovat/ProyectoFinalSDA,319477922,SystemVerilog,ProyectoFinalSDA,2277,0,2020-12-08 00:28:13+00:00,[],
6294,https://github.com/RafaelLaya/cpu.git,2020-12-19 06:02:46+00:00,,0,RafaelLaya/cpu,322778952,SystemVerilog,cpu,2244,0,2021-06-29 19:24:14+00:00,[],https://api.github.com/licenses/mit
6295,https://github.com/alisultan14/Human-Reaction-Timer.git,2020-12-28 18:03:03+00:00,"Developed an FPGA-based Reaction Timer device that records and displays human reaction time up to 1 millisecond. Coded in System Verilog, established on the theory of Finite State Machines and implemented on Nexys A7 board.",0,alisultan14/Human-Reaction-Timer,325081586,SystemVerilog,Human-Reaction-Timer,419,0,2020-12-28 18:16:16+00:00,[],
6296,https://github.com/evgeniyBolnov/led_interface.git,2020-12-29 05:12:13+00:00,,0,evgeniyBolnov/led_interface,325192161,SystemVerilog,led_interface,0,0,2020-12-29 06:05:31+00:00,[],
6297,https://github.com/Art-007/Weather-Detection-Temperature-Display.git,2020-12-24 07:44:57+00:00,,0,Art-007/Weather-Detection-Temperature-Display,324097988,SystemVerilog,Weather-Detection-Temperature-Display,20058,0,2021-01-11 18:55:31+00:00,[],
6298,https://github.com/crgrace/psd_chip.git,2020-12-03 00:14:56+00:00,UART for configuring the PSD chip.,0,crgrace/psd_chip,318026366,SystemVerilog,psd_chip,68,0,2021-03-05 17:14:55+00:00,[],
6299,https://github.com/anzaryesbit/bcdGame.git,2020-11-25 21:49:10+00:00,,0,anzaryesbit/bcdGame,316060936,SystemVerilog,bcdGame,584,0,2023-02-16 19:34:20+00:00,[],
6300,https://github.com/Dimonij/A3_task.git,2020-11-25 22:13:47+00:00,,0,Dimonij/A3_task,316064948,SystemVerilog,A3_task,5,0,2020-12-01 20:32:54+00:00,[],
6301,https://github.com/sree-sankar/RISC-V.git,2021-01-08 05:22:02+00:00,,0,sree-sankar/RISC-V,327806503,SystemVerilog,RISC-V,56,0,2021-03-25 05:16:53+00:00,[],
6302,https://github.com/mariaizabella14/TSC_Lab.git,2021-02-24 16:26:21+00:00,,0,mariaizabella14/TSC_Lab,341961994,SystemVerilog,TSC_Lab,603,0,2021-04-15 16:38:37+00:00,[],
6303,https://github.com/60alex60/ECE111_SV_FinalProject_Bitcoin.git,2021-01-24 04:04:39+00:00,,0,60alex60/ECE111_SV_FinalProject_Bitcoin,332363680,SystemVerilog,ECE111_SV_FinalProject_Bitcoin,163,0,2021-01-24 04:05:32+00:00,[],
6304,https://github.com/abfouts/W21_ECE582.git,2021-01-29 19:26:30+00:00,Portland State ECE582 ,0,abfouts/W21_ECE582,334242743,SystemVerilog,W21_ECE582,2721,0,2021-03-08 20:33:42+00:00,[],
6305,https://github.com/dnybodan/RISC_V_PROCESSOR.git,2021-02-22 20:05:09+00:00,"This is the source code for a risc-v type processor including all elements of datapath, control and effective pipelining. It is programmed in System-Verilog and simulated on BASYS FPGA board",0,dnybodan/RISC_V_PROCESSOR,341322571,SystemVerilog,RISC_V_PROCESSOR,5,0,2021-02-22 20:07:43+00:00,[],
6306,https://github.com/LaurentiuB97/TSC_Lab.git,2021-02-24 14:53:31+00:00,,0,LaurentiuB97/TSC_Lab,341934176,SystemVerilog,TSC_Lab,45,0,2021-04-21 12:35:31+00:00,[],
6307,https://github.com/niklad/TFE4152-Simple-digital-camera.git,2021-02-18 20:53:20+00:00,,0,niklad/TFE4152-Simple-digital-camera,340174777,SystemVerilog,TFE4152-Simple-digital-camera,957,0,2022-12-08 17:37:41+00:00,"['spice-simulation', 'verilog', 'vhdl']",
6308,https://github.com/samquiring/EE371Lab5.git,2021-02-21 19:33:58+00:00,,1,samquiring/EE371Lab5,340986580,SystemVerilog,EE371Lab5,31,0,2021-02-25 04:46:33+00:00,[],
6309,https://github.com/wcn2018/3220_a3.git,2021-02-21 20:14:07+00:00,assignment 3 for 3220,1,wcn2018/3220_a3,340994379,SystemVerilog,3220_a3,53234,0,2021-05-09 15:05:45+00:00,[],
6310,https://github.com/hassanrwarraich/Elevator-system-System-Verilog-.git,2021-03-11 16:33:50+00:00,,0,hassanrwarraich/Elevator-system-System-Verilog-,346767864,SystemVerilog,Elevator-system-System-Verilog-,3370,0,2021-03-11 16:39:56+00:00,[],
6311,https://github.com/pragya77/memory-module-using-UVM.git,2021-01-19 21:02:55+00:00,,0,pragya77/memory-module-using-UVM,331108739,SystemVerilog,memory-module-using-UVM,26,0,2021-01-28 17:50:27+00:00,[],
6312,https://github.com/RanaHabib/SystemVerlilog-Projects.git,2020-12-24 16:56:24+00:00,SystemVerlilog-Projects,0,RanaHabib/SystemVerlilog-Projects,324200734,SystemVerilog,SystemVerlilog-Projects,7,0,2022-12-29 21:57:39+00:00,"['system-verilog', 'alu', 'floating-point-multiplier']",
6313,https://github.com/MikeWakeland/RISC.git,2021-01-03 22:46:53+00:00,,0,MikeWakeland/RISC,326515496,SystemVerilog,RISC,18,0,2021-01-03 23:08:27+00:00,[],
6314,https://github.com/u1TimeCia/Image-Decompressor-Project.git,2021-01-26 11:47:32+00:00,,0,u1TimeCia/Image-Decompressor-Project,333068016,SystemVerilog,Image-Decompressor-Project,2159,0,2021-01-26 11:52:39+00:00,[],
6315,https://github.com/rag1404/uvm_objects_overrides.git,2021-01-26 05:47:01+00:00,Simple program to demonstrate uvm objects override capabilities !,0,rag1404/uvm_objects_overrides,332985032,SystemVerilog,uvm_objects_overrides,5,0,2021-01-26 06:32:52+00:00,[],
6316,https://github.com/rag1404/uvm_hdl_backdoor_access.git,2021-01-24 08:57:58+00:00,A program to demonstrate the hdl access !,0,rag1404/uvm_hdl_backdoor_access,332405195,SystemVerilog,uvm_hdl_backdoor_access,3,0,2021-01-24 09:01:19+00:00,[],
6317,https://github.com/RimonTawadrous/mips_pipeline.git,2021-01-25 22:32:22+00:00,,0,RimonTawadrous/mips_pipeline,332902778,SystemVerilog,mips_pipeline,885,0,2021-01-25 22:34:13+00:00,[],
6318,https://github.com/kleedtke/ece554groupminiproject.git,2021-02-04 23:35:17+00:00,,2,kleedtke/ece554groupminiproject,336111303,SystemVerilog,ece554groupminiproject,183,0,2021-02-17 02:41:00+00:00,[],
6319,https://github.com/deva0310/VGA-DISPLAY.git,2021-01-07 04:46:18+00:00,,0,deva0310/VGA-DISPLAY,327505546,SystemVerilog,VGA-DISPLAY,58,0,2021-01-07 14:49:36+00:00,[],
6320,https://github.com/valvenya/sv_labs.git,2021-01-10 23:19:46+00:00,,0,valvenya/sv_labs,328499692,SystemVerilog,sv_labs,11,0,2021-01-10 23:41:00+00:00,[],
6321,https://github.com/MusserO/BERT-fused_fi-sv.git,2021-02-09 09:55:58+00:00,,0,MusserO/BERT-fused_fi-sv,337359718,SystemVerilog,BERT-fused_fi-sv,914,0,2021-11-15 23:53:16+00:00,[],https://api.github.com/licenses/mit
6322,https://github.com/metro68/FPGA_Intro.git,2021-02-12 19:45:03+00:00,"The project aims to show an understanding of how bidirectional buses work, and how tristate logic is used to avoid contention on a bus shared by multiple data sources (RAM, EPROM and switches) and sinks (RAM, and LEDs). It will also give you an opportunity to develop your skills in SystemVerilog, and provide you with experience of digital systems which use a separate data, address and control bus.",0,metro68/FPGA_Intro,338416942,SystemVerilog,FPGA_Intro,10849,0,2021-02-12 23:29:11+00:00,[],
6323,https://github.com/GabrieleMasciotti/Verilog_Exercises.git,2021-02-18 15:41:59+00:00,Second year university computer architecture course exercises in Verilog.,0,GabrieleMasciotti/Verilog_Exercises,340096769,SystemVerilog,Verilog_Exercises,4,0,2021-02-18 15:47:40+00:00,[],
6324,https://github.com/m1nty/finite-state-machines.git,2021-02-09 20:25:33+00:00,,0,m1nty/finite-state-machines,337527234,SystemVerilog,finite-state-machines,1104,0,2021-02-09 20:29:26+00:00,[],
6325,https://github.com/m1nty/vga-interface.git,2021-02-09 20:27:11+00:00,,0,m1nty/vga-interface,337527605,SystemVerilog,vga-interface,611,0,2021-02-09 20:27:29+00:00,[],
6326,https://github.com/rag1404/Tic_tac_toe.git,2020-12-26 17:52:50+00:00,Tic_tac_toe in System verilog,0,rag1404/Tic_tac_toe,324607244,SystemVerilog,Tic_tac_toe,2,0,2020-12-26 17:54:42+00:00,[],
6327,https://github.com/slayterteal/Single-Cycle-ARM-Implementation.git,2021-02-26 19:04:24+00:00,,0,slayterteal/Single-Cycle-ARM-Implementation,342674102,SystemVerilog,Single-Cycle-ARM-Implementation,3445,0,2021-04-09 17:50:23+00:00,[],
6328,https://github.com/DavidDitu/TSC_LAB.git,2021-02-25 14:53:34+00:00,,0,DavidDitu/TSC_LAB,342278842,SystemVerilog,TSC_LAB,9038,0,2021-04-15 17:19:30+00:00,[],
6329,https://github.com/benmelnick/CS3220-Pipeline.git,2021-03-01 15:24:06+00:00,,0,benmelnick/CS3220-Pipeline,343462697,SystemVerilog,CS3220-Pipeline,58578,0,2021-04-14 18:30:53+00:00,[],
6330,https://github.com/AswinNasiketh/fyp-rca.git,2021-02-28 18:13:59+00:00,,0,AswinNasiketh/fyp-rca,343178453,SystemVerilog,fyp-rca,32875,0,2021-10-14 22:44:45+00:00,[],https://api.github.com/licenses/apache-2.0
6331,https://github.com/saipra99/ethernet_switch.git,2021-03-01 17:21:32+00:00,,0,saipra99/ethernet_switch,343498520,SystemVerilog,ethernet_switch,7,0,2021-03-01 17:24:41+00:00,[],
6332,https://github.com/kisung5/CE4302-vector_processor.git,2020-11-15 03:15:23+00:00,,0,kisung5/CE4302-vector_processor,312948539,SystemVerilog,CE4302-vector_processor,8244,0,2021-04-06 00:54:10+00:00,[],
6333,https://github.com/prajshet/SystemVerilog-projects.git,2020-11-16 02:31:52+00:00,,0,prajshet/SystemVerilog-projects,313171472,SystemVerilog,SystemVerilog-projects,433,0,2021-05-11 17:52:00+00:00,[],
6334,https://github.com/heidtn/systemverilog_modules.git,2020-12-05 23:33:51+00:00,My personal repo of systemverilog components for re-use,0,heidtn/systemverilog_modules,318910911,SystemVerilog,systemverilog_modules,22,0,2020-12-10 07:20:51+00:00,[],
6335,https://github.com/Jav909/SistemasDig.git,2020-12-08 01:28:43+00:00,,0,Jav909/SistemasDig,319491165,SystemVerilog,SistemasDig,169,0,2020-12-08 04:57:30+00:00,[],
6336,https://github.com/cjxmao/FPGA_Tamagotchi.git,2020-12-08 06:54:40+00:00,MIT F20 6.111 Final Project,0,cjxmao/FPGA_Tamagotchi,319552784,SystemVerilog,FPGA_Tamagotchi,6873,0,2020-12-11 07:19:21+00:00,[],https://api.github.com/licenses/mit
6337,https://github.com/devinmur29/6111_finalproj_git.git,2020-12-09 22:34:29+00:00,,0,devinmur29/6111_finalproj_git,320096367,SystemVerilog,6111_finalproj_git,4529,0,2020-12-12 00:35:36+00:00,[],
6338,https://github.com/mdlopezme/ECE111_Final_Project.git,2020-11-20 01:19:56+00:00,ECE111_Final_Project,0,mdlopezme/ECE111_Final_Project,314412311,SystemVerilog,ECE111_Final_Project,351,0,2022-03-18 07:02:12+00:00,[],
6339,https://github.com/thao-n/ECE-111-Bitcoin-Hashing.git,2021-03-15 06:15:17+00:00,,0,thao-n/ECE-111-Bitcoin-Hashing,347857890,SystemVerilog,ECE-111-Bitcoin-Hashing,1357,0,2021-03-24 22:11:33+00:00,[],
6340,https://github.com/yolanda10202/FPGA_Stopwatch.git,2021-03-09 06:59:15+00:00,IEEE Student Branch at UCLA Digital Audio Visualizer Project Lab 5 Part C,0,yolanda10202/FPGA_Stopwatch,345912569,SystemVerilog,FPGA_Stopwatch,6,0,2021-03-09 07:46:47+00:00,[],
6341,https://github.com/nicholasmatanga/RC4_Decryption_Circuit.git,2021-03-08 22:02:26+00:00,,0,nicholasmatanga/RC4_Decryption_Circuit,345807534,SystemVerilog,RC4_Decryption_Circuit,60,0,2021-03-21 14:20:07+00:00,[],
6342,https://github.com/HermeneanuTeo/gittest.git,2021-03-10 12:45:51+00:00,Este un test,0,HermeneanuTeo/gittest,346353647,SystemVerilog,gittest,15423,0,2021-04-08 16:29:30+00:00,[],
6343,https://github.com/surendra55555/uart_uvm.git,2021-03-26 12:01:52+00:00,,0,surendra55555/uart_uvm,351767903,SystemVerilog,uart_uvm,26,0,2021-03-26 15:27:13+00:00,[],
6344,https://github.com/MengzhuLi821/ECE342-Computer-Hardware.git,2021-01-14 16:50:09+00:00,,0,MengzhuLi821/ECE342-Computer-Hardware,329677343,SystemVerilog,ECE342-Computer-Hardware,15356,0,2023-02-12 15:24:10+00:00,[],
6345,https://github.com/Umair772/Bresenham-s-line-algorithm.git,2021-01-13 00:15:03+00:00,,0,Umair772/Bresenham-s-line-algorithm,329147003,SystemVerilog,Bresenham-s-line-algorithm,5,0,2021-01-13 00:16:44+00:00,[],
6346,https://github.com/ardaicoz/CS223-Digital-Design.git,2021-03-15 22:25:34+00:00,Labs from Bilkent University's CS223 Digital Design - Fall 2020,0,ardaicoz/CS223-Digital-Design,348139987,SystemVerilog,CS223-Digital-Design,4896,0,2023-01-28 09:59:04+00:00,[],
6347,https://github.com/josefigarola/Gumnut.git,2021-03-14 23:39:33+00:00,Gumnut microprocessor in Verilog,0,josefigarola/Gumnut,347781711,SystemVerilog,Gumnut,197,0,2021-04-14 22:50:08+00:00,[],
6348,https://github.com/SARAMAG/simpel_ADDER_with_sv_testbench-.git,2021-03-06 23:57:48+00:00,,0,SARAMAG/simpel_ADDER_with_sv_testbench-,345221053,SystemVerilog,simpel_ADDER_with_sv_testbench-,8,0,2021-03-07 00:20:37+00:00,[],
6349,https://github.com/kwilson33/ECE551_DigitalDesign_and_Synthesis.git,2021-03-11 23:42:33+00:00,,1,kwilson33/ECE551_DigitalDesign_and_Synthesis,346871783,SystemVerilog,ECE551_DigitalDesign_and_Synthesis,203718,0,2021-03-12 00:01:31+00:00,[],
6350,https://github.com/mortenjc/6502sv.git,2021-03-10 06:07:47+00:00,My attempts at implementing a 6502 using SystemVerilog,0,mortenjc/6502sv,346250971,SystemVerilog,6502sv,51,0,2023-01-10 21:12:08+00:00,[],
6351,https://github.com/mattsini1/i2s_dsp_device.git,2021-03-22 16:11:00+00:00,,0,mattsini1/i2s_dsp_device,350407972,SystemVerilog,i2s_dsp_device,1,0,2021-03-22 16:11:14+00:00,[],
6352,https://github.com/rushi0005/Verification-of-Sequence-Detection.git,2021-03-21 20:40:46+00:00,,0,rushi0005/Verification-of-Sequence-Detection,350113658,SystemVerilog,Verification-of-Sequence-Detection,7,0,2021-04-04 00:53:29+00:00,[],
6353,https://github.com/CMUBOB97/18240Lab4.git,2021-03-25 23:39:25+00:00,,0,CMUBOB97/18240Lab4,351605942,SystemVerilog,18240Lab4,12,0,2021-05-06 15:57:45+00:00,[],
6354,https://github.com/denisablajan/TSClab.git,2021-03-02 11:36:37+00:00,,0,denisablajan/TSClab,343752977,SystemVerilog,TSClab,9282,0,2021-04-20 09:31:26+00:00,[],
6355,https://github.com/pbhowmik05/UVM-Verification.git,2021-03-05 07:14:25+00:00,,0,pbhowmik05/UVM-Verification,344726556,SystemVerilog,UVM-Verification,3,0,2021-03-05 19:30:58+00:00,[],
6356,https://github.com/george-jpg/TSC_Lab.git,2021-02-24 16:27:26+00:00,,0,george-jpg/TSC_Lab,341962292,SystemVerilog,TSC_Lab,25407,0,2021-04-20 20:28:42+00:00,[],
6357,https://github.com/aurasgabriel/TSC_Lab.git,2021-02-24 16:25:36+00:00,,0,aurasgabriel/TSC_Lab,341961786,SystemVerilog,TSC_Lab,8520,0,2021-04-21 10:14:04+00:00,[],
6358,https://github.com/andreitrusca/TSC_Lab.git,2021-02-24 14:54:05+00:00,,0,andreitrusca/TSC_Lab,341934374,SystemVerilog,TSC_Lab,8338,0,2021-04-21 14:20:07+00:00,[],
6359,https://github.com/arvindaru2/Matrix-Multiplication.git,2021-02-09 08:32:45+00:00,,0,arvindaru2/Matrix-Multiplication,337339685,SystemVerilog,Matrix-Multiplication,172,0,2021-02-09 08:36:04+00:00,[],
6360,https://github.com/T-Venkatesh/FIFO.git,2021-02-26 07:50:24+00:00,,0,T-Venkatesh/FIFO,342501924,SystemVerilog,FIFO,7,0,2021-02-26 08:00:15+00:00,[],
6361,https://github.com/MoglanAndrei/TSC_lab.git,2021-02-25 14:29:48+00:00,,0,MoglanAndrei/TSC_lab,342271395,SystemVerilog,TSC_lab,9851,0,2021-04-15 18:33:36+00:00,[],
6362,https://github.com/MihaiDinu/TSC_LAB.git,2021-02-25 14:54:16+00:00,,0,MihaiDinu/TSC_LAB,342279050,SystemVerilog,TSC_LAB,9596,0,2021-04-15 14:43:24+00:00,[],
6363,https://github.com/sayleechandavarkar/CompArch.git,2021-02-22 21:51:31+00:00,Some Comp Arch stuff ,0,sayleechandavarkar/CompArch,341347504,SystemVerilog,CompArch,25,0,2021-02-22 22:01:19+00:00,[],
6364,https://github.com/rniwase/midi-rtl.git,2021-03-28 18:45:56+00:00,,0,rniwase/midi-rtl,352410712,SystemVerilog,midi-rtl,8,0,2021-05-20 03:31:15+00:00,[],
6365,https://github.com/Koder2727/Verilog.git,2021-03-28 09:36:26+00:00,,0,Koder2727/Verilog,352289903,SystemVerilog,Verilog,635,0,2021-03-28 09:38:34+00:00,[],
6366,https://github.com/Capstone-UF-FTU/FIFO.git,2021-03-16 18:35:14+00:00,,0,Capstone-UF-FTU/FIFO,348454171,SystemVerilog,FIFO,3,0,2021-05-12 06:17:32+00:00,[],
6367,https://github.com/jiulingz/conFFTi.git,2021-02-19 19:44:09+00:00,CMU Spring 21 ECE Capstone,0,jiulingz/conFFTi,340472693,SystemVerilog,conFFTi,18105,0,2023-01-28 07:04:52+00:00,[],https://api.github.com/licenses/gpl-3.0
6368,https://github.com/yolanda10202/Arithmetic_Logic_Unit.git,2021-03-09 07:15:51+00:00,IEEE Student Branch at UCLA Digital Audio Visualizer (DAV) Project Lab 3 Part C,0,yolanda10202/Arithmetic_Logic_Unit,345916349,SystemVerilog,Arithmetic_Logic_Unit,10,0,2021-03-15 07:51:30+00:00,[],
6369,https://github.com/enriquezgaytanj/MIPS-Multicycle-32-bits-HDL.git,2020-12-03 15:15:32+00:00,Read me,0,enriquezgaytanj/MIPS-Multicycle-32-bits-HDL,318233136,SystemVerilog,MIPS-Multicycle-32-bits-HDL,77,0,2020-12-04 22:18:51+00:00,[],
6370,https://github.com/Moein-Karami/Digital-System-Design.git,2020-12-06 18:10:44+00:00,Six projects of Digital System Design course,0,Moein-Karami/Digital-System-Design,319099234,SystemVerilog,Digital-System-Design,46576,0,2021-12-01 01:49:07+00:00,[],
6371,https://github.com/svenka3/code_to_ivl_team.git,2020-12-05 14:42:41+00:00,,0,svenka3/code_to_ivl_team,318811789,SystemVerilog,code_to_ivl_team,14,0,2020-12-06 23:03:56+00:00,[],
6372,https://github.com/Runheng/ECE-551-Digital-System-Design-And-Synthesis.git,2020-12-07 11:40:22+00:00,final project: logic analyzer,0,Runheng/ECE-551-Digital-System-Design-And-Synthesis,319301301,SystemVerilog,ECE-551-Digital-System-Design-And-Synthesis,145,0,2020-12-07 11:43:20+00:00,[],
6373,https://github.com/PaulLee950181/String_match_system.git,2021-01-29 10:32:18+00:00,,0,PaulLee950181/String_match_system,334112147,SystemVerilog,String_match_system,256,0,2021-02-02 06:14:16+00:00,[],
6374,https://github.com/IngTorija/MIPS_datapath.git,2021-01-28 00:00:27+00:00,,0,IngTorija/MIPS_datapath,333594102,SystemVerilog,MIPS_datapath,1167,0,2021-07-20 19:55:03+00:00,[],https://api.github.com/licenses/gpl-3.0
6375,https://github.com/Art-007/Thermometer-FPGA.git,2021-01-05 21:03:38+00:00,,0,Art-007/Thermometer-FPGA,327118857,SystemVerilog,Thermometer-FPGA,19122,0,2021-01-08 06:21:16+00:00,[],
6376,https://github.com/vasilydenisenko/dev_cntrl.git,2021-01-05 11:50:38+00:00,"Device controllers (sensors, display, etc)",0,vasilydenisenko/dev_cntrl,326983011,SystemVerilog,dev_cntrl,8,0,2021-02-13 08:08:15+00:00,[],https://api.github.com/licenses/mit
6377,https://github.com/fischeti/full_stack_ip_integration.git,2020-12-18 13:45:15+00:00,,0,fischeti/full_stack_ip_integration,322607101,SystemVerilog,full_stack_ip_integration,16,0,2020-12-18 15:17:51+00:00,[],
6378,https://github.com/EEESocbitmesra/FIFO_Mem.git,2021-02-15 10:20:29+00:00,,2,EEESocbitmesra/FIFO_Mem,339038808,SystemVerilog,FIFO_Mem,10,0,2021-03-02 08:11:28+00:00,[],
6379,https://github.com/teekamkhandelwal/uart_System_verilog.git,2021-02-07 06:57:08+00:00,,0,teekamkhandelwal/uart_System_verilog,336722913,SystemVerilog,uart_System_verilog,33,0,2023-03-26 17:25:20+00:00,[],https://api.github.com/licenses/gpl-3.0
6380,https://github.com/naftali10/Pipelined-Microcontroller-Processor.git,2021-01-22 11:55:32+00:00,"In-order single-pipeline processor, capable of executing 6 different operations.",0,naftali10/Pipelined-Microcontroller-Processor,331932136,SystemVerilog,Pipelined-Microcontroller-Processor,379,0,2021-01-30 05:40:29+00:00,[],
6381,https://github.com/xiongyumail/riscv.git,2020-12-25 03:57:48+00:00,,0,xiongyumail/riscv,324283688,SystemVerilog,riscv,103997,0,2021-03-12 10:14:05+00:00,[],
6382,https://github.com/meggiman/wide_alu_ip.git,2020-12-18 16:24:26+00:00,,2,meggiman/wide_alu_ip,322646213,SystemVerilog,wide_alu_ip,8,0,2020-12-18 16:46:37+00:00,[],
6383,https://github.com/NadavAshkenazi/FGPA-Bumpy.git,2020-11-17 13:27:01+00:00,,0,NadavAshkenazi/FGPA-Bumpy,313627862,SystemVerilog,FGPA-Bumpy,14986,0,2022-10-12 16:01:09+00:00,[],
6384,https://github.com/spcl/pspin.git,2021-04-13 12:33:16+00:00,PsPIN: A RISC-V in-network accelerator for flexible high-performance low-power packet processing,16,spcl/pspin,357546275,SystemVerilog,pspin,9537,82,2024-04-02 13:53:13+00:00,"['packet-processing', 'in-network-compute', 'spin', 'networking', 'pulp']",
6385,https://github.com/Xilinx/kria-vitis-platforms.git,2021-03-31 12:47:23+00:00,Kria KV260 Vitis platforms and overlays,39,Xilinx/kria-vitis-platforms,353354251,SystemVerilog,kria-vitis-platforms,112317,78,2024-04-10 11:34:59+00:00,[],https://api.github.com/licenses/apache-2.0
6386,https://github.com/YosysHQ/nerv.git,2021-05-11 13:52:39+00:00,Naive Educational RISC V processor,12,YosysHQ/nerv,366398952,SystemVerilog,nerv,220,64,2024-04-10 16:27:25+00:00,[],
6387,https://github.com/siliconcompiler/zerosoc.git,2021-05-25 15:00:52+00:00,Demo SoC for SiliconCompiler.,7,siliconcompiler/zerosoc,370732291,SystemVerilog,zerosoc,12394,49,2024-03-26 13:51:45+00:00,[],
6388,https://github.com/NotCamelCase/Pathsy.git,2021-07-28 14:15:52+00:00,Simple Path Tracer on an FPGA,1,NotCamelCase/Pathsy,390376894,SystemVerilog,Pathsy,37289,32,2024-03-07 09:13:16+00:00,"['raytracing', 'pathtracing', 'graphics', 'hardware', 'gpu']",https://api.github.com/licenses/apache-2.0
6389,https://github.com/jasha64/SNN-FPGA.git,2021-04-29 11:08:52+00:00,Spiking Neural Network RTL Implementation,7,jasha64/SNN-FPGA,362788649,SystemVerilog,SNN-FPGA,203,31,2024-04-01 16:16:37+00:00,[],https://api.github.com/licenses/mit
6390,https://github.com/OpenXiangShan/XS-Verilog-Library.git,2021-07-01 03:20:46+00:00,,12,OpenXiangShan/XS-Verilog-Library,381896328,SystemVerilog,XS-Verilog-Library,706,29,2024-02-28 06:10:30+00:00,[],
6391,https://github.com/esynr3z/proto245.git,2021-07-16 16:28:14+00:00,🔴 SystemVerilog FPGA cores to communicate with FTDI Synchronous/Asynchronous FIFOs (FT245 protocol),7,esynr3z/proto245,386700227,SystemVerilog,proto245,5078,28,2024-02-13 13:30:15+00:00,"['systemverilog', 'ftdi', 'fifo', 'ft232h', 'ft2232h', 'ft600']",https://api.github.com/licenses/mit
6392,https://github.com/esynr3z/axi_vip_demo.git,2021-04-24 06:52:48+00:00,Xilinx AXI VIP example of use,6,esynr3z/axi_vip_demo,361092259,SystemVerilog,axi_vip_demo,5064,27,2024-03-22 13:16:34+00:00,"['axi', 'systemverilog', 'xilinx', 'fpga']",
6393,https://github.com/openhwgroup/cv32e41p.git,2021-06-23 15:42:35+00:00,"4 stage, in-order, secure RISC-V core based on the CV32E40P with Zfinx and Zce ISA extentions",11,openhwgroup/cv32e41p,379653247,SystemVerilog,cv32e41p,5903,26,2023-11-24 21:21:38+00:00,[],
6394,https://github.com/ecilasun/NekoIchi.git,2021-04-04 23:23:46+00:00,A simple risc-v CPU /GPU running on an Arty A7-100T FPGA board,2,ecilasun/NekoIchi,354666656,SystemVerilog,NekoIchi,2118,22,2024-03-29 20:42:12+00:00,[],
6395,https://github.com/black-parrot-hdk/zynq-parrot.git,2021-04-16 23:32:32+00:00,BlackParrot on Zynq,13,black-parrot-hdk/zynq-parrot,358742654,SystemVerilog,zynq-parrot,1290,21,2024-04-12 06:47:40+00:00,[],https://api.github.com/licenses/bsd-3-clause
6396,https://github.com/letitbe0201/AXI-DMA-master-verification.git,2021-05-11 03:20:33+00:00,,6,letitbe0201/AXI-DMA-master-verification,366242727,SystemVerilog,AXI-DMA-master-verification,1330,20,2024-03-11 06:36:40+00:00,[],
6397,https://github.com/chipsalliance/aib-protocols.git,2021-05-07 17:16:39+00:00,,5,chipsalliance/aib-protocols,365304399,SystemVerilog,aib-protocols,14131,20,2024-01-04 01:58:57+00:00,[],https://api.github.com/licenses/apache-2.0
6398,https://github.com/programer-guan/digital_ic_verification.git,2021-04-27 09:14:53+00:00,数字IC验证案例（SV and UVM）,4,programer-guan/digital_ic_verification,362051183,SystemVerilog,digital_ic_verification,26,19,2024-04-08 14:56:51+00:00,[],
6399,https://github.com/0xArt/Tiny_But_Mighty_I2C_Master_Verilog.git,2021-06-01 02:25:39+00:00,I2C Master Verilog module,10,0xArt/Tiny_But_Mighty_I2C_Master_Verilog,372678858,SystemVerilog,Tiny_But_Mighty_I2C_Master_Verilog,54,19,2024-02-19 15:16:54+00:00,"['fpga', 'i2c', 'i2c-bus', 'verilog']",https://api.github.com/licenses/gpl-3.0
6400,https://github.com/aseddin/ece_4305.git,2021-07-27 18:21:23+00:00,Code associated with Cal Poly Pomona's ECE 4305,13,aseddin/ece_4305,390085715,SystemVerilog,ece_4305,119,18,2024-02-10 05:10:54+00:00,[],
6401,https://github.com/ForwardCom/softcoreA.git,2021-08-07 09:19:45+00:00,softcore for ForwardCom,1,ForwardCom/softcoreA,393636721,SystemVerilog,softcoreA,44219,16,2024-03-19 13:24:00+00:00,[],
6402,https://github.com/racerxdl/pcieledblink.git,2021-08-02 02:44:22+00:00,Stratix V PCIe Ledblink (for usage in Microsoft Storey Peak boards),4,racerxdl/pcieledblink,391796599,SystemVerilog,pcieledblink,1037,15,2024-04-05 21:38:38+00:00,"['example', 'fpga', 'pci-express', 'pcie', 'storey-peak', 'stratix-v']",
6403,https://github.com/dpretet/svlogger.git,2021-07-24 08:51:09+00:00,SystemVerilog Logger ,1,dpretet/svlogger,389047966,SystemVerilog,svlogger,17,15,2024-01-02 12:02:09+00:00,"['verilog', 'systemverilog', 'fpga', 'asic', 'logging', 'logger', 'class', 'simulation', 'hdl', 'icarus']",https://api.github.com/licenses/mit
6404,https://github.com/Rain92/FPGA-Mandelbrot.git,2021-07-10 18:24:01+00:00,"A fast, parametrized Mandelbrot generator written in SystemVerilog.",1,Rain92/FPGA-Mandelbrot,384764302,SystemVerilog,FPGA-Mandelbrot,1766,13,2024-04-07 07:53:13+00:00,"['fpga', 'ebaz4205', 'systemverilog', 'vga', 'hdmi', 'wukong-board', 'ps2-keyboard']",
6405,https://github.com/vlotnik/uvm_modem.git,2021-04-07 19:46:02+00:00,UVM components for DSP tasks (MODulation/DEModulation),1,vlotnik/uvm_modem,355664398,SystemVerilog,uvm_modem,202,13,2023-01-02 08:40:06+00:00,[],https://api.github.com/licenses/gpl-3.0
6406,https://github.com/Mohamed-Younis/SPI-UVM-Testbench.git,2021-05-16 15:55:17+00:00,,0,Mohamed-Younis/SPI-UVM-Testbench,367925219,SystemVerilog,SPI-UVM-Testbench,11306,12,2024-03-30 15:16:21+00:00,[],
6407,https://github.com/QmppmQ/riscv.git,2021-04-11 07:51:08+00:00,,4,QmppmQ/riscv,356802930,SystemVerilog,riscv,9780,12,2024-03-21 21:19:02+00:00,[],
6408,https://github.com/kitune-san/KFPC-XT.git,2021-05-15 23:46:24+00:00,XT-like PC written in SystemVerilog ,1,kitune-san/KFPC-XT,367750333,SystemVerilog,KFPC-XT,85,12,2023-10-12 12:08:59+00:00,"['pc', 'pcxt', 'pc-xt', '8088', 'x86', 'fpga', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
6409,https://github.com/AkeelMedina22/RISC-V-Pipelined-Processor.git,2021-05-08 16:46:41+00:00,A Verilog based 5-stage fully functional pipelined RISC-V Processor code.,1,AkeelMedina22/RISC-V-Pipelined-Processor,365565151,SystemVerilog,RISC-V-Pipelined-Processor,22,11,2024-04-04 00:09:51+00:00,"['riscv', 'systemverilog', 'computerarchitecture']",https://api.github.com/licenses/mit
6410,https://github.com/Laxer3a/PS-GPU.git,2021-05-08 04:13:35+00:00,GPU Re-Implementation for PS1 Game Console.,5,Laxer3a/PS-GPU,365416307,SystemVerilog,PS-GPU,1105,11,2023-10-24 00:56:10+00:00,[],
6411,https://github.com/UMJI-VE450-21SU/Ria.git,2021-04-30 14:10:38+00:00,UM-SJTU JI VE450 2021 Summer Capstone Design Project,1,UMJI-VE450-21SU/Ria,363160971,SystemVerilog,Ria,72931,10,2024-01-19 07:01:02+00:00,[],
6412,https://github.com/pulp-platform/ne16.git,2021-04-09 12:51:02+00:00,"Neural Engine, 16 input channels",2,pulp-platform/ne16,356269598,SystemVerilog,ne16,80,10,2023-09-17 02:45:50+00:00,[],
6413,https://github.com/OpenEDF/verilog-basic.git,2021-06-30 01:19:18+00:00,learn the combinational and sequential logic circuit.,1,OpenEDF/verilog-basic,381539354,SystemVerilog,verilog-basic,24370,10,2023-10-14 03:58:26+00:00,"['verilog', 'fpga-programming', 'fpga', 'simulation', 'simulator', 'vhdl', 'ice40up5k', 'iverilog', 'synopsys-dc', 'synopsys-vcs']",https://api.github.com/licenses/gpl-3.0
6414,https://github.com/yoshi-ki/RISC-V-core.git,2021-04-17 03:14:34+00:00,,0,yoshi-ki/RISC-V-core,358773368,SystemVerilog,RISC-V-core,386,10,2024-02-04 10:57:20+00:00,[],
6415,https://github.com/techav-homebrew/SE-VGA.git,2021-04-07 00:38:44+00:00,Mirror the Mac SE video over VGA,1,techav-homebrew/SE-VGA,355367580,SystemVerilog,SE-VGA,5178,10,2024-03-26 08:39:32+00:00,[],
6416,https://github.com/Rain92/vga_interface.git,2021-06-24 21:45:02+00:00,,2,Rain92/vga_interface,380057282,SystemVerilog,vga_interface,1734,9,2023-01-14 18:58:08+00:00,"['fpga', 'ebaz4205', 'systemverilog', 'vga-controller', 'keyboard-controller', 'vga-simulator', 'verilator']",
6417,https://github.com/avashist003/FIFO_SystemVerilog_Assertion.git,2021-06-04 13:43:50+00:00,Synchronous FIFO design & verification using systemVerilog Assertions,3,avashist003/FIFO_SystemVerilog_Assertion,373854808,SystemVerilog,FIFO_SystemVerilog_Assertion,32,9,2024-04-04 18:31:56+00:00,[],
6418,https://github.com/shivanishah269/vsdfpga.git,2021-07-06 12:55:02+00:00,Implementation of Mixed Signal SoC (RISCV based Core + PLL) on FPGA,3,shivanishah269/vsdfpga,383468488,SystemVerilog,vsdfpga,43,8,2024-01-08 15:27:41+00:00,[],
6419,https://github.com/Ludini1/minimal-risc-v-cpu.git,2021-08-03 10:35:04+00:00,,5,Ludini1/minimal-risc-v-cpu,392279435,SystemVerilog,minimal-risc-v-cpu,16,8,2024-04-02 05:56:16+00:00,[],
6420,https://github.com/Mr-southerly/router_verification.git,2021-04-16 10:49:51+00:00,路科验证V0实验，完成一个router设计的验证工作,3,Mr-southerly/router_verification,358567425,SystemVerilog,router_verification,151,7,2024-04-05 11:41:59+00:00,[],
6421,https://github.com/kitune-san/KF8259.git,2021-04-12 15:20:42+00:00,8259/8259A-like Interrupt Controller written in SystemVerilog,0,kitune-san/KF8259,357242583,SystemVerilog,KF8259,140,7,2023-12-21 00:55:34+00:00,"['8259', '8259a', 'pic', 'interrupt', 'interrupt-controller', 'systemverilog', 'fpga', 'pc']",https://api.github.com/licenses/mit
6422,https://github.com/kumarrishav14/arm_watchdog.git,2021-04-01 05:59:19+00:00,Verification IP for Watchdog,2,kumarrishav14/arm_watchdog,353591120,SystemVerilog,arm_watchdog,42,7,2023-11-24 02:38:56+00:00,"['arm', 'uvm', 'uvm-ral-model', 'watchdog-timer', 'arm-watchdog']",
6423,https://github.com/hashi0203/riscv-processor.git,2021-04-23 04:38:03+00:00,,1,hashi0203/riscv-processor,360764030,SystemVerilog,riscv-processor,481,7,2024-03-25 22:19:28+00:00,[],
6424,https://github.com/adnanashraf17501/UVM_AMBA3_APB_FUNCTIONAL-COVERAGE.git,2021-06-11 03:55:24+00:00,,0,adnanashraf17501/UVM_AMBA3_APB_FUNCTIONAL-COVERAGE,375898455,SystemVerilog,UVM_AMBA3_APB_FUNCTIONAL-COVERAGE,930,6,2023-07-24 11:42:24+00:00,[],
6425,https://github.com/U-Ar/Kotsu2Risc.git,2021-04-23 09:20:47+00:00,system verilog implementation of RISC-V ISA for FPGA,1,U-Ar/Kotsu2Risc,360829507,SystemVerilog,Kotsu2Risc,7,6,2023-06-17 09:01:37+00:00,[],
6426,https://github.com/shashwat2707/APB-Verification.git,2021-08-07 10:22:53+00:00,verification of APB bus on System Verilog. creating a testbench consisting of modules to check and improve the functional coverage.,1,shashwat2707/APB-Verification,393650568,SystemVerilog,APB-Verification,335,6,2022-12-24 17:01:02+00:00,[],
6427,https://github.com/ishfaqahmed29/FIFO_UVM_Verification.git,2021-04-18 18:10:43+00:00,Synchronous FIFO Testbench ,5,ishfaqahmed29/FIFO_UVM_Verification,359219118,SystemVerilog,FIFO_UVM_Verification,33,6,2024-01-18 07:19:23+00:00,[],https://api.github.com/licenses/mit
6428,https://github.com/XinlueLiu/UVM.git,2021-06-07 20:43:03+00:00,Learn UVM by small projects,1,XinlueLiu/UVM,374795522,SystemVerilog,UVM,4639,6,2024-02-10 21:39:48+00:00,[],
6429,https://github.com/aaronshappell/tage-predictor.git,2021-05-17 22:09:19+00:00,SystemVerilog implemention of the TAGE branch predictor,0,aaronshappell/tage-predictor,368333733,SystemVerilog,tage-predictor,72943,6,2024-03-31 06:49:15+00:00,[],https://api.github.com/licenses/mit
6430,https://github.com/pineapple-one/HDL_Simulation.git,2021-08-07 06:18:41+00:00,,1,pineapple-one/HDL_Simulation,393598345,SystemVerilog,HDL_Simulation,16,6,2023-09-19 01:19:42+00:00,[],
6431,https://github.com/nimish15shah/DPU_DAG_Processing_Unit.git,2021-07-13 12:53:48+00:00,RTL code for the DPU chip designed for irregular graphs,1,nimish15shah/DPU_DAG_Processing_Unit,385603382,SystemVerilog,DPU_DAG_Processing_Unit,400,6,2024-03-16 19:21:02+00:00,[],https://api.github.com/licenses/mit
6432,https://github.com/SymbiFlow/axi-vip.git,2021-06-07 11:43:29+00:00,,1,SymbiFlow/axi-vip,374645171,SystemVerilog,axi-vip,33,6,2024-03-19 08:55:04+00:00,[],https://api.github.com/licenses/isc
6433,https://github.com/openx86/w8086.git,2021-04-11 08:28:54+00:00,8086-compatible cpu,1,openx86/w8086,356811098,SystemVerilog,w8086,15,6,2022-08-30 12:17:35+00:00,[],https://api.github.com/licenses/apache-2.0
6434,https://github.com/milestone12/JSON.sv.git,2021-06-05 11:57:53+00:00,"SystemVerilog package for reading, manipulating, and writing JSON-formatted data",1,milestone12/JSON.sv,374102370,SystemVerilog,JSON.sv,58,6,2023-12-02 02:42:01+00:00,['systemverilog'],
6435,https://github.com/ecilasun/nekoichiarticle.git,2021-05-29 19:47:02+00:00,Files for each part of the article,0,ecilasun/nekoichiarticle,372057909,SystemVerilog,nekoichiarticle,33326,5,2023-09-30 05:49:18+00:00,[],
6436,https://github.com/kitune-san/KFMMC.git,2021-06-05 14:54:59+00:00,Multi media card access controller written in SystemVerilog ,1,kitune-san/KFMMC,374140772,SystemVerilog,KFMMC,403,5,2023-10-12 12:11:39+00:00,"['mmc', 'systemverilog', 'sdcard', 'multimediacard']",https://api.github.com/licenses/mit
6437,https://github.com/NazerkeT/MultilevelTLB.git,2021-07-09 16:43:27+00:00,Multilevel TLB implementation workspace for (CVA6) Ariane Core during summer GSoC'21,1,NazerkeT/MultilevelTLB,384497694,SystemVerilog,MultilevelTLB,172,5,2021-11-17 10:07:03+00:00,[],
6438,https://github.com/jnestor/hw_pq.git,2021-06-15 18:17:49+00:00,A family of hardware priority queue implementations,1,jnestor/hw_pq,377256637,SystemVerilog,hw_pq,146,5,2023-10-09 12:57:28+00:00,[],
6439,https://github.com/FranzLuepke/HW_SW_Codesign.git,2021-04-19 22:42:18+00:00,Hardware-Software codesign project.,2,FranzLuepke/HW_SW_Codesign,359617378,SystemVerilog,HW_SW_Codesign,116822,5,2022-11-06 11:43:25+00:00,[],
6440,https://github.com/Vivek-Dave/UVM_TestBench_For_Single_Port_RAM.git,2021-04-16 17:23:40+00:00,A complete UVM TB for verification of single port 64KB RAM,1,Vivek-Dave/UVM_TestBench_For_Single_Port_RAM,358672066,SystemVerilog,UVM_TestBench_For_Single_Port_RAM,480,5,2023-12-09 07:48:43+00:00,[],
6441,https://github.com/Vivek-Dave/FIFO_UVM_Testbench_Reactive_Stimulus.git,2021-05-07 15:24:49+00:00,UVM TestBench For Verification Of Synchronous FIFO With Reactive Stimulus ,0,Vivek-Dave/FIFO_UVM_Testbench_Reactive_Stimulus,365276062,SystemVerilog,FIFO_UVM_Testbench_Reactive_Stimulus,75,5,2023-11-10 02:26:14+00:00,[],
6442,https://github.com/msinger/dmg-sim.git,2021-04-12 22:08:44+00:00,SystemVerilog files for simulating a complete Game Boy system with DMG-CPU B chip,1,msinger/dmg-sim,357352227,SystemVerilog,dmg-sim,464,5,2023-09-22 12:55:25+00:00,"['verilog', 'gameboy', 'simulation', 'systemverilog', 'game-boy', 'dmg-cpu', 'asic', 'chip', 'dmg-001', 'electronics', 'icarus-verilog', 'nintendo']",https://api.github.com/licenses/cc-by-sa-4.0
6443,https://github.com/hdlguy/iir_filter.git,2021-07-28 13:58:51+00:00,IIR digital filter implemented using Vivado HLS and C++,2,hdlguy/iir_filter,390370983,SystemVerilog,iir_filter,904,5,2024-04-09 02:45:26+00:00,[],https://api.github.com/licenses/mit
6444,https://github.com/mirkat1206/NCTUEE.git,2021-07-14 16:01:09+00:00,assignments and projects when I studied in NCTU EE.,1,mirkat1206/NCTUEE,385997486,SystemVerilog,NCTUEE,5262,5,2023-05-31 09:25:23+00:00,[],
6445,https://github.com/SpiNNakerManchester/spif.git,2021-04-02 09:06:28+00:00,SpiNNaker peripheral interface,2,SpiNNakerManchester/spif,353965484,SystemVerilog,spif,1178,5,2023-10-22 10:23:08+00:00,"['spinnaker', 'spinnlink', 'fpga', 'hardware', 'verilog']",
6446,https://github.com/mcai/chisel-rv32.git,2021-04-11 00:00:11+00:00,chisel-rv32,1,mcai/chisel-rv32,356726350,SystemVerilog,chisel-rv32,7710,5,2023-07-13 02:39:44+00:00,[],https://api.github.com/licenses/mit
6447,https://github.com/HDLForBeginners/HDLBits.git,2021-07-10 19:53:00+00:00,,0,HDLForBeginners/HDLBits,384778656,SystemVerilog,HDLBits,3,5,2023-10-05 13:39:16+00:00,[],https://api.github.com/licenses/mit
6448,https://github.com/JennahF/ComputerArchitectureLabs.git,2021-03-31 08:13:49+00:00,USTC ,5,JennahF/ComputerArchitectureLabs,353278534,SystemVerilog,ComputerArchitectureLabs,38723,4,2024-04-06 09:45:40+00:00,[],
6449,https://github.com/LearnToDoShit-com/svToolset.git,2021-05-28 18:26:52+00:00,A continually growing system verilog parts library,0,LearnToDoShit-com/svToolset,371787066,SystemVerilog,svToolset,8414,4,2021-12-09 05:45:40+00:00,[],https://api.github.com/licenses/mit
6450,https://github.com/sramxtr/fpgas_from_scratch.git,2021-05-06 01:01:53+00:00,"Learn how to program FPGAs, starting from .. relatively scratch",0,sramxtr/fpgas_from_scratch,364746184,SystemVerilog,fpgas_from_scratch,63,4,2021-06-21 12:53:47+00:00,[],https://api.github.com/licenses/mit
6451,https://github.com/rksingh23/UVM_TestBench.git,2021-04-04 00:13:51+00:00,"Please find my Extensive Research and Verification Plan,  Here I  -  1. Wrote testbench in UVM;  2. Understood Configuration db in UVM; 3. Implemented strategies for implementation of UVM components such as Transaction, Generator, Sequencer, Monitor, Scoreboard, Environment, Test; 4. Used TLM ports for Communication between Driver , Sequencer, Monitor, Scoreboard; 5. Completed the Reporting Mechanism in UVM Usage of Virtual Interface                               ..",0,rksingh23/UVM_TestBench,354421236,SystemVerilog,UVM_TestBench,26,4,2023-09-09 08:33:31+00:00,[],
6452,https://github.com/0xArt/Super_SPI_Master_Verilog.git,2021-06-14 03:22:31+00:00,SPI Master Verilog module,3,0xArt/Super_SPI_Master_Verilog,376691745,SystemVerilog,Super_SPI_Master_Verilog,184,4,2023-11-03 06:10:39+00:00,"['fpga', 'spi', 'verilog']",https://api.github.com/licenses/gpl-3.0
6453,https://github.com/emrii/DPRAM-Design-and-UVM-based-Verification.git,2021-07-01 15:01:11+00:00,RTL design for a DUAL-PORT RAM and a UVM based testbench for functional verification. This project was undertaken to gain familiarity with UVM constructs.,0,emrii/DPRAM-Design-and-UVM-based-Verification,382069986,SystemVerilog,DPRAM-Design-and-UVM-based-Verification,19,4,2024-01-08 13:41:40+00:00,[],
6454,https://github.com/jhy1000/systemverilog_assertion.git,2021-04-03 02:04:47+00:00,collection some usfull systemverilog assertion.,1,jhy1000/systemverilog_assertion,354177792,SystemVerilog,systemverilog_assertion,5,4,2023-04-02 07:20:49+00:00,[],
6455,https://github.com/dineshannayya/qspim.git,2021-07-26 07:15:59+00:00,SPI Master Optimized for RISC V Instruction memory Prefecth,0,dineshannayya/qspim,389543192,SystemVerilog,qspim,3137,4,2023-10-13 07:22:55+00:00,[],https://api.github.com/licenses/apache-2.0
6456,https://github.com/Tristone1217/asic.git,2021-04-10 08:35:02+00:00,,0,Tristone1217/asic,356521393,SystemVerilog,asic,687,4,2022-03-18 07:43:20+00:00,[],
6457,https://github.com/bitglitcher/QuantaRV.git,2021-06-13 21:53:53+00:00,Serial 32bit RISCV Core,1,bitglitcher/QuantaRV,376647026,SystemVerilog,QuantaRV,190,4,2022-01-20 21:34:49+00:00,[],https://api.github.com/licenses/mit
6458,https://github.com/OmriRaz/CPUCamp.git,2021-05-25 13:20:10+00:00,"Documentation and sample projects for the CPU-Camp course, based on the µLab Kiwi and Terasic DE10-Lite",0,OmriRaz/CPUCamp,370700105,SystemVerilog,CPUCamp,577,4,2024-02-27 15:55:30+00:00,[],
6459,https://github.com/stevefalco/ansi-terminal-firmware.git,2021-04-18 21:02:08+00:00,"FPGA and C source code for an ANSI ""dumb"" terminal",0,stevefalco/ansi-terminal-firmware,359251948,SystemVerilog,ansi-terminal-firmware,5123,4,2022-11-15 14:48:48+00:00,[],https://api.github.com/licenses/gpl-3.0
6460,https://github.com/YosysHQ-Docs/AppNote-109.git,2021-05-04 19:23:41+00:00,,2,YosysHQ-Docs/AppNote-109,364363339,SystemVerilog,AppNote-109,2754,3,2023-08-02 02:47:04+00:00,[],
6461,https://github.com/jontio/jfpga_i2c_master.git,2021-04-15 04:38:29+00:00,FPGA I2C Master,0,jontio/jfpga_i2c_master,358128348,SystemVerilog,jfpga_i2c_master,641,3,2023-03-15 15:26:47+00:00,[],https://api.github.com/licenses/mit
6462,https://github.com/VerificaticationStudio/MultPortedRAM.git,2021-06-06 18:34:49+00:00,Three kinds of multi-ported ram implemented by Chisel.,0,VerificaticationStudio/MultPortedRAM,374436397,SystemVerilog,MultPortedRAM,31323,3,2022-09-20 07:16:24+00:00,[],
6463,https://github.com/Vivek-Dave/UVM_TestBench_For_S_R_Latch.git,2021-06-18 04:10:50+00:00,Simple and Complete UVM TestBench For Verification Of S R Latch,1,Vivek-Dave/UVM_TestBench_For_S_R_Latch,378030716,SystemVerilog,UVM_TestBench_For_S_R_Latch,77,3,2023-04-05 11:17:52+00:00,"['uvm', 'functional-coverage', 'verification']",
6464,https://github.com/yanyirui/uart_apb.git,2021-07-19 14:52:27+00:00,,0,yanyirui/uart_apb,387500453,SystemVerilog,uart_apb,195,3,2024-03-13 05:49:50+00:00,[],
6465,https://github.com/lllirunze/Digital_Lab.git,2021-06-01 01:06:43+00:00,TJU Digital logic and Digital systems,0,lllirunze/Digital_Lab,372665209,SystemVerilog,Digital_Lab,2098,3,2024-03-31 13:01:59+00:00,[],
6466,https://github.com/siglabsoss/ip-library-core.git,2021-06-15 06:14:23+00:00,,2,siglabsoss/ip-library-core,377055955,SystemVerilog,ip-library-core,482,3,2022-09-08 13:04:33+00:00,[],https://api.github.com/licenses/bsd-3-clause
6467,https://github.com/ESCA-RISC-V/ov7670_with_cnn_open.git,2021-07-13 05:28:24+00:00,,1,ESCA-RISC-V/ov7670_with_cnn_open,385486770,SystemVerilog,ov7670_with_cnn_open,713,3,2023-07-10 09:44:57+00:00,[],
6468,https://github.com/2bitsin/Q2A03.git,2021-04-05 03:01:12+00:00,My attempt to write a NES emulator in Verilog. ,0,2bitsin/Q2A03,354700857,SystemVerilog,Q2A03,3040,3,2021-07-14 12:44:38+00:00,[],
6469,https://github.com/MaxwellWjj/DBN-Processor.git,2021-06-18 02:20:40+00:00,"An energy-efficient processor design based on Deep Belief Network (DBN), which is one of the most suitable DNN models for on-chip learning",0,MaxwellWjj/DBN-Processor,378011242,SystemVerilog,DBN-Processor,36,3,2024-03-13 13:54:48+00:00,[],
6470,https://github.com/george-hcc/virotti-core.git,2021-06-07 10:16:13+00:00,RISCV IM32 processor tested in ASIC and FPGA.,1,george-hcc/virotti-core,374621841,SystemVerilog,virotti-core,681,3,2022-12-17 05:34:06+00:00,[],
6471,https://github.com/zyasui/HyperRAM_AXI4.git,2021-07-26 03:51:00+00:00,,1,zyasui/HyperRAM_AXI4,389501131,SystemVerilog,HyperRAM_AXI4,38,3,2023-06-30 03:20:48+00:00,[],
6472,https://github.com/theSergeyGusev/simple10GbaseR.git,2021-06-21 20:29:54+00:00,FPGA Low latency 10GBASE-R PCS,1,theSergeyGusev/simple10GbaseR,379055209,SystemVerilog,simple10GbaseR,228,3,2023-12-03 09:48:07+00:00,"['fpga', 'pcs', '10gbase-r', 'ieee80211', '10g', '10gbps']",https://api.github.com/licenses/mit
6473,https://github.com/gregorykemp/sample_uvm_testbench.git,2021-04-02 22:24:12+00:00,"a sample UVM testbench, in System Verilog, exercising a RISC-V arithmetic unit",1,gregorykemp/sample_uvm_testbench,354146952,SystemVerilog,sample_uvm_testbench,49,3,2023-11-12 06:10:57+00:00,[],https://api.github.com/licenses/apache-2.0
6474,https://github.com/0n1shi/fpga-mips.git,2021-04-26 13:48:45+00:00,MIPS architecure processor on Intel FPGA.,1,0n1shi/fpga-mips,361766993,SystemVerilog,fpga-mips,956,3,2021-05-22 14:16:46+00:00,"['fpga', 'cpu', 'mips', 'systemverilog']",https://api.github.com/licenses/mit
6475,https://github.com/mohamed-elkhawas/ROCE.git,2021-04-01 17:20:32+00:00,,2,mohamed-elkhawas/ROCE,353774633,SystemVerilog,ROCE,15235,3,2023-08-02 01:55:15+00:00,[],
6476,https://github.com/ChrisAndrea2011/Sync_FIFO.git,2021-04-25 21:25:39+00:00,Synchronous FIFO code verified using UVM verification environment.,1,ChrisAndrea2011/Sync_FIFO,361542250,SystemVerilog,Sync_FIFO,67,3,2023-08-29 02:32:55+00:00,[],
6477,https://github.com/1009qjm/BIT-SERIAL-MULTIPLIER.git,2021-07-29 06:45:47+00:00,,1,1009qjm/BIT-SERIAL-MULTIPLIER,390628278,SystemVerilog,BIT-SERIAL-MULTIPLIER,7,3,2021-12-26 06:10:49+00:00,[],
6478,https://github.com/dave41266/cpu8080-alu.git,2021-04-14 05:18:52+00:00,UVM code to verify ALU,2,dave41266/cpu8080-alu,357783056,SystemVerilog,cpu8080-alu,28,3,2024-01-10 11:06:59+00:00,[],
6479,https://github.com/VSHEV92/Fast_Fourier_Correlation.git,2021-04-23 17:36:49+00:00,Блок вычисления взаимной корреляционной функции двух комплексных сигналов с помощью быстрой свертки ,1,VSHEV92/Fast_Fourier_Correlation,360961094,SystemVerilog,Fast_Fourier_Correlation,2729,2,2023-10-16 13:38:25+00:00,[],
6480,https://github.com/botliu/rkvproject.git,2021-06-02 14:51:02+00:00,,0,botliu/rkvproject,373204725,SystemVerilog,rkvproject,136719,2,2023-11-01 13:57:47+00:00,[],
6481,https://github.com/skmtti/div.git,2021-03-31 15:37:07+00:00,signed/unsigned divider,0,skmtti/div,353406379,SystemVerilog,div,102,2,2024-03-27 01:13:07+00:00,[],
6482,https://github.com/karin0018/ComputerArchitecture.git,2021-05-11 02:28:46+00:00,2021年春计算机体系结构试验,1,karin0018/ComputerArchitecture,366232768,SystemVerilog,ComputerArchitecture,47605,2,2021-12-15 12:35:21+00:00,[],
6483,https://github.com/lcbeams/DE10-Lite_Accelerometer.git,2021-05-15 03:29:37+00:00,SystemVerilog design to use the accelerometer on the DE10-Lite FPGA Development Board,0,lcbeams/DE10-Lite_Accelerometer,367531158,SystemVerilog,DE10-Lite_Accelerometer,66,2,2022-02-19 19:38:39+00:00,[],https://api.github.com/licenses/mit
6484,https://github.com/black-parrot-hdk/arty-parrot.git,2021-04-16 23:54:36+00:00,,0,black-parrot-hdk/arty-parrot,358745616,SystemVerilog,arty-parrot,7143,2,2022-07-16 22:59:57+00:00,[],https://api.github.com/licenses/bsd-3-clause
6485,https://github.com/mfkiwl/fyp-rca-taiga.git,2021-04-05 17:04:57+00:00,,0,mfkiwl/fyp-rca-taiga,354908734,,fyp-rca-taiga,1464,2,2022-04-24 12:16:42+00:00,[],https://api.github.com/licenses/apache-2.0
6486,https://github.com/Shihhaolin/Four-port-switch-.git,2021-07-28 05:23:05+00:00,This project is basically from Cadence training course Essential Systemverilog for UVM. All copyright is from Cadence. The project only for my personal practice.  The packet switch design has four port. The switch would get the data packets on a port and transmits the packet to one or more ports which depending on the packet data.,0,Shihhaolin/Four-port-switch-,390224135,SystemVerilog,Four-port-switch-,20,2,2023-08-03 10:28:29+00:00,[],https://api.github.com/licenses/mit
6487,https://github.com/joydddd/OoO-Processor.git,2021-04-21 07:00:35+00:00,,1,joydddd/OoO-Processor,360063892,SystemVerilog,OoO-Processor,7326,2,2023-08-09 09:51:15+00:00,[],
6488,https://github.com/my-smilence/LM96570.git,2021-05-18 08:04:10+00:00,verilog for LM96570 Ultrasound Configurable Transmit Beamformer,0,my-smilence/LM96570,368449208,SystemVerilog,LM96570,159,2,2022-12-10 17:06:24+00:00,[],
6489,https://github.com/cxdzyq1110/design_pattern_sv.git,2021-04-17 02:54:41+00:00,learning design pattern using system verilog,0,cxdzyq1110/design_pattern_sv,358770427,SystemVerilog,design_pattern_sv,11,2,2023-05-04 12:58:18+00:00,[],
6490,https://github.com/Shihhaolin/verificatio-of-mux4-1-using-systemverilog.git,2021-08-10 06:12:21+00:00,"Built a test environment using SystemVerilog to verify mux4:1. Used Vivado to design and verify the module of systemverilog. Created components like generator, driver, monitor, scoreboard, interface, environment, and testbench.",0,Shihhaolin/verificatio-of-mux4-1-using-systemverilog,394544762,SystemVerilog,verificatio-of-mux4-1-using-systemverilog,5,2,2022-03-12 14:06:43+00:00,[],
6491,https://github.com/1009qjm/A-Simple-AXI-DMA-.git,2021-08-11 04:03:35+00:00,,0,1009qjm/A-Simple-AXI-DMA-,394856869,SystemVerilog,A-Simple-AXI-DMA-,8,2,2023-02-28 07:24:31+00:00,[],
6492,https://github.com/Sizhe-Zhang/HDC-SystemVerilog-Cadio.git,2021-04-28 00:09:41+00:00,A implemention of Hyperdimensional Computing for CARDIO,0,Sizhe-Zhang/HDC-SystemVerilog-Cadio,362286695,SystemVerilog,HDC-SystemVerilog-Cadio,1520,2,2023-07-18 13:22:22+00:00,[],
6493,https://github.com/Vivek-Dave/UVM_TestBench_For_Adder.git,2021-04-17 11:11:31+00:00,Complete UVM TB For Verification Of Adder,0,Vivek-Dave/UVM_TestBench_For_Adder,358857586,SystemVerilog,UVM_TestBench_For_Adder,87,2,2022-07-23 14:25:08+00:00,[],
6494,https://github.com/iremkalkanli/RISC-V-Processor.git,2021-05-27 22:36:46+00:00,Processor with 11 operation codes based on RISC V,1,iremkalkanli/RISC-V-Processor,371520321,SystemVerilog,RISC-V-Processor,3760,2,2024-02-11 04:22:31+00:00,"['processor', 'risc-v', 'systemverilog']",
6496,https://github.com/black-parrot-hdk/black-parrot-subsystems.git,2021-07-21 23:40:26+00:00,,4,black-parrot-hdk/black-parrot-subsystems,388273750,SystemVerilog,black-parrot-subsystems,231,2,2023-03-02 08:54:32+00:00,[],https://api.github.com/licenses/bsd-3-clause
6497,https://github.com/mfkiwl/RV32IMF-MicroGT_01.git,2021-08-12 00:20:25+00:00,"A low power, 6 stage in order pipeline, 2 privilege level (M and U), clock cicle of 100MHz, 32 bit RISC-V softcore for FPGA. Written in SystemVerilog.",0,mfkiwl/RV32IMF-MicroGT_01,395148518,SystemVerilog,RV32IMF-MicroGT_01,1439,2,2024-04-11 19:24:31+00:00,[],https://api.github.com/licenses/mit
6498,https://github.com/uranusb/SYN_FIFO_UVM.git,2021-05-04 19:27:54+00:00,A UVM based testbench for the synchronous FIFO.,1,uranusb/SYN_FIFO_UVM,364364335,SystemVerilog,SYN_FIFO_UVM,14,2,2023-09-27 21:45:55+00:00,[],
6499,https://github.com/teekamkhandelwal/ENVIRONMENTAL-VERIFICATION-EXAMPLES.git,2021-05-01 17:19:11+00:00,"2x1 mux is verification is done using system verilog. For verification of mux all component are designed and simulated .rtl design -verilog testbench -systemverilog, tool-edaplayground and questasim",0,teekamkhandelwal/ENVIRONMENTAL-VERIFICATION-EXAMPLES,363466777,SystemVerilog,ENVIRONMENTAL-VERIFICATION-EXAMPLES,34,2,2023-11-30 10:29:36+00:00,[],https://api.github.com/licenses/apache-2.0
6500,https://github.com/oafonsoo/SPI-Module-in-SystemVerilog.git,2021-06-05 20:39:07+00:00,Master and Slaves Modules in SystemVerilog language to SPI Communication ,0,oafonsoo/SPI-Module-in-SystemVerilog,374208122,SystemVerilog,SPI-Module-in-SystemVerilog,8,2,2024-03-17 14:29:09+00:00,[],
6501,https://github.com/YingnanWang-Ray/EE552.git,2021-06-16 08:00:23+00:00,Final Course Project for EE552,0,YingnanWang-Ray/EE552,377417503,SystemVerilog,EE552,26,2,2024-04-01 02:33:55+00:00,[],
6502,https://github.com/siglabsoss/d-engine.git,2021-06-27 00:52:51+00:00,,1,siglabsoss/d-engine,380623172,SystemVerilog,d-engine,74,2,2022-06-01 04:38:22+00:00,[],https://api.github.com/licenses/bsd-3-clause
6503,https://github.com/MikeWakeland/Xoodyak-HW.git,2021-04-29 02:08:03+00:00,Implementing Xoodyak in hardware/sv for speed.,0,MikeWakeland/Xoodyak-HW,362661799,SystemVerilog,Xoodyak-HW,606,2,2023-11-03 01:02:56+00:00,[],
6504,https://github.com/SerLippo/Lemmings.git,2021-07-31 02:01:05+00:00,This is a simple UVM env for DV starters.,0,SerLippo/Lemmings,391232317,SystemVerilog,Lemmings,16,2,2022-03-23 13:35:59+00:00,['uvm'],https://api.github.com/licenses/mit
6505,https://github.com/UndefeatedSunny/SystemVerilog.git,2021-05-31 21:47:33+00:00,,0,UndefeatedSunny/SystemVerilog,372635880,SystemVerilog,SystemVerilog,22,2,2023-04-15 13:01:01+00:00,[],
6506,https://github.com/victormanu/VectorProcessor.git,2021-05-30 18:31:42+00:00,,0,victormanu/VectorProcessor,372288532,SystemVerilog,VectorProcessor,4544,2,2021-10-31 18:02:34+00:00,[],
6507,https://github.com/redchenjs/axi_dfm.git,2021-06-02 05:49:22+00:00,AXI Digital Frequency Meter,0,redchenjs/axi_dfm,373054255,SystemVerilog,axi_dfm,857,2,2023-07-04 13:38:44+00:00,[],
6508,https://github.com/asomu/SytemVerilog_Practice.git,2021-07-23 06:00:20+00:00,,0,asomu/SytemVerilog_Practice,388693381,SystemVerilog,SytemVerilog_Practice,26,2,2023-08-09 05:56:03+00:00,[],
6509,https://github.com/teekamkhandelwal/4X16-decoder-environment-with-coverage-.git,2021-05-13 04:55:25+00:00,decoder design using verilog and verified using system verilog and also perform code coverage operation using questa sim,0,teekamkhandelwal/4X16-decoder-environment-with-coverage-,366937970,SystemVerilog,4X16-decoder-environment-with-coverage-,25,2,2024-01-26 02:08:08+00:00,[],https://api.github.com/licenses/apache-2.0
6510,https://github.com/varunsax12/systolic_array_matrix_multiplication.git,2021-08-04 12:50:56+00:00,Scalable (parameterized) systolic array for NxN matrix multiplication,1,varunsax12/systolic_array_matrix_multiplication,392687042,SystemVerilog,systolic_array_matrix_multiplication,6,2,2024-03-04 16:25:58+00:00,[],
6511,https://github.com/mfkiwl/ArmleoCPU-1.git,2021-06-25 10:37:00+00:00,"Development branch: Multicore RV32IMA w/ MMU, Cache capable of booting Linux. two stage: RISC-V RV32IM compatible CPU created from scratch. Includes MMU and D/I-Caches",2,mfkiwl/ArmleoCPU-1,380205287,SystemVerilog,ArmleoCPU-1,2935,2,2024-04-10 10:00:15+00:00,[],https://api.github.com/licenses/gpl-3.0
6512,https://github.com/cyberfantom2000/fano_decoder_verilog.git,2021-04-05 08:13:09+00:00,,0,cyberfantom2000/fano_decoder_verilog,354764711,SystemVerilog,fano_decoder_verilog,114,2,2022-06-29 23:24:37+00:00,[],
6513,https://github.com/ORKA-HPC/orka-hpc-llp.git,2021-07-16 09:59:57+00:00,Run C/C++ on automatically generated hardware,0,ORKA-HPC/orka-hpc-llp,386590525,SystemVerilog,orka-hpc-llp,105237,2,2024-04-10 15:39:33+00:00,[],https://api.github.com/licenses/apache-2.0
6514,https://github.com/my-smilence/sthv800_my_code.git,2021-05-11 11:21:48+00:00,my first verilog project(verilog for sthv800),0,my-smilence/sthv800_my_code,366356066,SystemVerilog,sthv800_my_code,7386,2,2024-02-20 07:52:51+00:00,[],
6515,https://github.com/VSHEV92/AXIS_UVM_Agent.git,2021-05-12 17:00:03+00:00,UVM агент для верификации модулей с AXI-Stream интерфейсом,1,VSHEV92/AXIS_UVM_Agent,366789490,SystemVerilog,AXIS_UVM_Agent,17,2,2024-04-03 07:02:25+00:00,[],
6516,https://github.com/Geniussh/Bitcoin-Hash.git,2021-05-19 11:02:34+00:00,Bitcoin Hashing using SHA-256 Hashing Algorithm,0,Geniussh/Bitcoin-Hash,368838814,SystemVerilog,Bitcoin-Hash,4980,2,2022-03-06 05:37:37+00:00,"['sha-256', 'bitcoin-hash-calculator', 'hashing', 'systemverilog', 'fpga']",
6517,https://github.com/Vivek-Dave/UVM_TeatBench_For_ROM.git,2021-04-17 04:11:27+00:00,Complete UVM TestBench for verification of ROM,1,Vivek-Dave/UVM_TeatBench_For_ROM,358781703,SystemVerilog,UVM_TeatBench_For_ROM,87,2,2023-09-09 08:59:21+00:00,[],
6518,https://github.com/nonamehi/verification-userexample.git,2021-05-01 08:02:22+00:00,,0,nonamehi/verification-userexample,363355632,SystemVerilog,verification-userexample,61,2,2021-10-24 03:14:40+00:00,[],
6519,https://github.com/AdulisL/ECE_111.git,2021-04-14 04:00:25+00:00,Spring 2021,0,AdulisL/ECE_111,357767651,SystemVerilog,ECE_111,1483,2,2021-09-23 03:53:26+00:00,[],
6520,https://github.com/Warl3ck/ad9643.git,2021-07-05 17:47:41+00:00,AXI project AD9643,0,Warl3ck/ad9643,383222212,SystemVerilog,ad9643,2044,2,2022-08-13 04:25:45+00:00,[],
6521,https://github.com/34-Engineering/Virtex-HDL.git,2021-05-20 22:54:35+00:00,This repository contains the Xilinx Vivado project for the Artix-7 (XC7A35T-1FTG256C) FPGA on Virtex.,0,34-Engineering/Virtex-HDL,369357083,SystemVerilog,Virtex-HDL,110773,2,2024-02-18 20:58:41+00:00,"['systemverilog', 'vivado', 'artix-7', 'fpga']",https://api.github.com/licenses/gpl-3.0
6522,https://github.com/dh73/YosysHQ_subprj.git,2021-05-18 18:17:15+00:00,,0,dh73/YosysHQ_subprj,368627559,SystemVerilog,YosysHQ_subprj,1014,1,2022-07-02 23:09:24+00:00,[],
6523,https://github.com/CaglayanDokme/SystemVerilogExercises.git,2021-05-11 09:50:26+00:00,This is a repo where I share the System Verilog exercises that I worked on. Contributions and suggestions are welcome,1,CaglayanDokme/SystemVerilogExercises,366332883,SystemVerilog,SystemVerilogExercises,227,1,2022-11-14 15:16:04+00:00,"['systemverilog', 'systemverilog-hdl', 'digital-design']",
6524,https://github.com/masongerace/EE310-projects.git,2021-06-11 19:41:52+00:00,Projects done over the course of the Spring 2021 semester. Taught by Professor Paul Bakke,0,masongerace/EE310-projects,376127002,SystemVerilog,EE310-projects,33,1,2021-12-10 01:52:31+00:00,[],
6525,https://github.com/mertakcay/EgeUni_Micro.git,2021-07-14 23:26:19+00:00,EgeMicroarc Traning,0,mertakcay/EgeUni_Micro,386101982,SystemVerilog,EgeUni_Micro,650,1,2023-03-29 06:23:38+00:00,[],
6526,https://github.com/harambe-forever/olmadidcd.git,2021-07-04 07:29:39+00:00,,0,harambe-forever/olmadidcd,382790806,SystemVerilog,olmadidcd,121,1,2021-11-21 13:35:12+00:00,[],
6527,https://github.com/tblink-rpc/tblink-rpc-hdl.git,2021-07-02 16:39:19+00:00,Provides VPI- and DPI-based integrations,0,tblink-rpc/tblink-rpc-hdl,382405945,SystemVerilog,tblink-rpc-hdl,307,1,2022-03-30 11:57:59+00:00,[],https://api.github.com/licenses/apache-2.0
6528,https://github.com/StanfordAHA/Configuration.git,2021-08-12 20:33:19+00:00,,0,StanfordAHA/Configuration,395437390,SystemVerilog,Configuration,2346,1,2023-02-27 12:03:03+00:00,[],https://api.github.com/licenses/bsd-3-clause
6529,https://github.com/anish2888/SV.git,2021-04-20 01:13:47+00:00,design,0,anish2888/SV,359644003,SystemVerilog,SV,1,1,2021-04-20 01:20:00+00:00,[],
6530,https://github.com/ShonTaware/TL-V_Projects.git,2021-04-09 17:35:50+00:00,,0,ShonTaware/TL-V_Projects,356351953,SystemVerilog,TL-V_Projects,7,1,2022-03-31 03:32:32+00:00,[],
6531,https://github.com/Soham-coder/ROCC_based_neurosynapse.git,2021-04-25 06:33:18+00:00,ROCC accelerator ISA based neuroSynapse,1,Soham-coder/ROCC_based_neurosynapse,361349956,SystemVerilog,ROCC_based_neurosynapse,1747,1,2022-07-20 09:34:30+00:00,"['rocc', 'rocketchip-rocc', 'systemverilog', 'verilog-hdl', 'fsm', 'state-machine', 'random', 'testing']",
6532,https://github.com/Vivek-Dave/UVM_TestBench_For_Parity_Generator.git,2021-06-12 03:59:37+00:00,Complete UVM TestBench For Verification Of Parity Generator,0,Vivek-Dave/UVM_TestBench_For_Parity_Generator,376197267,SystemVerilog,UVM_TestBench_For_Parity_Generator,84,1,2023-09-09 09:09:50+00:00,[],
6533,https://github.com/hao310rui140326/my_uvm_ahb2.git,2021-04-03 02:37:13+00:00,,0,hao310rui140326/my_uvm_ahb2,354182381,SystemVerilog,my_uvm_ahb2,27,1,2021-12-18 09:13:02+00:00,[],https://api.github.com/licenses/apache-2.0
6534,https://github.com/Vivek-Dave/UVM.git,2021-04-16 17:15:53+00:00,Basic Examples in UVM,0,Vivek-Dave/UVM,358670134,SystemVerilog,UVM,184,1,2022-04-02 03:50:42+00:00,[],
6535,https://github.com/ankangd/4bitPC.git,2021-04-01 11:06:29+00:00,Verilog-HDL implementation of a simple 4-bit PC.,0,ankangd/4bitPC,353671340,SystemVerilog,4bitPC,712,1,2023-03-25 16:23:03+00:00,"['4-bit-cpu', 'verilog-hdl', 'verilog-project']",https://api.github.com/licenses/mit
6536,https://github.com/mcellin/kangaroo_hdl.git,2021-04-05 14:22:46+00:00,,0,mcellin/kangaroo_hdl,354860142,SystemVerilog,kangaroo_hdl,73,1,2022-02-17 21:38:02+00:00,[],
6537,https://github.com/PeterWrighten/ComputerSystem.git,2021-06-07 21:29:30+00:00,Computer Architecture Powered By CSAPP and So on.,0,PeterWrighten/ComputerSystem,374804949,SystemVerilog,ComputerSystem,63,1,2021-12-25 18:45:36+00:00,[],
6538,https://github.com/WD20160314/sv_test.git,2021-06-26 07:11:38+00:00,sv example,0,WD20160314/sv_test,380439356,SystemVerilog,sv_test,94079,1,2022-05-09 13:22:22+00:00,[],
6539,https://github.com/adnanashraf17501/System-Verilog-based-Verification-Of-Dflipflop.git,2021-06-29 07:38:57+00:00,,0,adnanashraf17501/System-Verilog-based-Verification-Of-Dflipflop,381279718,SystemVerilog,System-Verilog-based-Verification-Of-Dflipflop,72,1,2022-05-28 13:58:52+00:00,[],
6540,https://github.com/Shihhaolin/counter.git,2021-07-31 05:18:11+00:00,Practice design a testbench of counter.,0,Shihhaolin/counter,391262263,SystemVerilog,counter,2,1,2021-10-31 20:58:33+00:00,[],
6541,https://github.com/Elia1996/cv32e40p_ft_tests.git,2021-03-31 20:00:40+00:00,,1,Elia1996/cv32e40p_ft_tests,353475456,SystemVerilog,cv32e40p_ft_tests,1509,1,2021-06-17 08:56:10+00:00,[],
6542,https://github.com/loafbrad/libimg.git,2021-04-04 00:07:03+00:00,,0,loafbrad/libimg,354420352,SystemVerilog,libimg,2,1,2021-04-06 09:15:35+00:00,[],
6543,https://github.com/Vivek-Dave/UVM_TestBench_For_ShIft_Register.git,2021-05-20 15:06:24+00:00,Complete UVM TestBench For Verification Of Shift Register ,0,Vivek-Dave/UVM_TestBench_For_ShIft_Register,369248293,SystemVerilog,UVM_TestBench_For_ShIft_Register,77,1,2021-06-09 15:13:23+00:00,[],
6544,https://github.com/bibistellar/cache_testbench.git,2021-05-14 18:01:03+00:00,cache的测试集,0,bibistellar/cache_testbench,367442601,SystemVerilog,cache_testbench,130,1,2022-05-26 11:28:36+00:00,[],
6545,https://github.com/knyuchen/interconnect_model.git,2021-05-04 19:38:18+00:00,Models for various interconnects,0,knyuchen/interconnect_model,364366753,SystemVerilog,interconnect_model,80,1,2022-06-28 09:23:28+00:00,"['python', 'interconnect', 'systemverilog']",
6546,https://github.com/bhargav253/ultra_core.git,2021-06-28 09:17:33+00:00,,1,bhargav253/ultra_core,380973838,SystemVerilog,ultra_core,81,1,2022-04-19 18:42:42+00:00,[],
6547,https://github.com/Vivek-Dave/UVM_TestBench_For_D_Flip_Flop.git,2021-06-16 12:45:02+00:00,Complete UVM TestBench For Verification Of D Flip Flop,1,Vivek-Dave/UVM_TestBench_For_D_Flip_Flop,377493250,SystemVerilog,UVM_TestBench_For_D_Flip_Flop,75,1,2023-06-06 09:47:15+00:00,[],
6548,https://github.com/LuisGarcia-S/Procesador-Segmentado.git,2021-07-31 03:01:01+00:00,Pequeño proyecto de Verilog en el que se implementa un procesador segmentado con la arquitectura de RISC-V,0,LuisGarcia-S/Procesador-Segmentado,391241431,SystemVerilog,Procesador-Segmentado,31,1,2023-09-28 17:56:09+00:00,[],
6549,https://github.com/techvinodreddy/Router_1x3_verification.git,2021-04-29 07:37:16+00:00,Router 1x3 has single input port and three output ports.,0,techvinodreddy/Router_1x3_verification,362730634,SystemVerilog,Router_1x3_verification,638,1,2021-05-31 04:17:07+00:00,[],
6550,https://github.com/sathyapriyanka/APB_UVC_UVM.git,2021-05-23 21:06:43+00:00,,0,sathyapriyanka/APB_UVC_UVM,370157430,SystemVerilog,APB_UVC_UVM,399,1,2021-11-27 06:25:48+00:00,[],
6551,https://github.com/LoialOtter/FPGA-USB-PD.git,2021-06-16 04:28:20+00:00,USB-PD interface in FPGA logic with minimal external hardware.,0,LoialOtter/FPGA-USB-PD,377370340,SystemVerilog,FPGA-USB-PD,11,1,2023-02-04 07:51:29+00:00,[],https://api.github.com/licenses/apache-2.0
6552,https://github.com/furkanitap/8-Bit-Processor-in-SystemVerilog.git,2021-08-05 21:22:58+00:00,,0,furkanitap/8-Bit-Processor-in-SystemVerilog,393173549,SystemVerilog,8-Bit-Processor-in-SystemVerilog,11,1,2023-01-03 15:19:17+00:00,[],
6553,https://github.com/Ravinduabey/SERIAL_BUS_project.git,2021-08-03 07:33:45+00:00,,1,Ravinduabey/SERIAL_BUS_project,392230967,SystemVerilog,SERIAL_BUS_project,4186,1,2022-03-02 19:09:15+00:00,[],
6554,https://github.com/Nameer-Iqbal-Ansari/RV32I-Microprocessor.git,2021-04-07 17:51:51+00:00,A single cycle microprocessor which executes only integer type commands and operations.,1,Nameer-Iqbal-Ansari/RV32I-Microprocessor,355635418,SystemVerilog,RV32I-Microprocessor,41998,1,2022-10-10 05:53:34+00:00,[],
6555,https://github.com/ayengec/FPGA-Design-with-Systemverilog.git,2021-05-09 09:07:39+00:00,"SystemVerilog brings a higher level of abstraction to the Verilog designer. Constructs and commands like Interfaces, new Data types (logic, int), Enumerated types, Arrays, Hardware-specific always (always_ff, always_comb) and others allow modeling of RTL designs easily, and with less coding.",2,ayengec/FPGA-Design-with-Systemverilog,365710983,SystemVerilog,FPGA-Design-with-Systemverilog,41394,1,2022-07-08 10:40:00+00:00,"['fpga', 'rtl', 'systemverilog', 'uvm']",
6556,https://github.com/kyusuf97/I2C-Subordinate-Interface.git,2021-06-09 01:37:59+00:00,,0,kyusuf97/I2C-Subordinate-Interface,375192310,SystemVerilog,I2C-Subordinate-Interface,1620,1,2021-10-31 17:41:32+00:00,[],
6557,https://github.com/gcet231-ciruitos-digitais-ii-2020-2/tutorial-verilog.git,2021-08-10 16:46:07+00:00,Tutorial Verilog GCET231,1,gcet231-ciruitos-digitais-ii-2020-2/tutorial-verilog,394716141,SystemVerilog,tutorial-verilog,11,1,2021-08-31 14:04:20+00:00,[],
6558,https://github.com/FilippoCheein/RISCV_CPU_Pipepline.git,2021-08-06 21:49:08+00:00,,1,FilippoCheein/RISCV_CPU_Pipepline,393511298,SystemVerilog,RISCV_CPU_Pipepline,964,1,2021-08-08 20:19:58+00:00,[],
6559,https://github.com/Shihhaolin/mux-4to1-with-assertion.git,2021-08-04 07:35:22+00:00,design a mux 4to1 with assertion ,0,Shihhaolin/mux-4to1-with-assertion,392594392,SystemVerilog,mux-4to1-with-assertion,2,1,2021-10-31 20:58:29+00:00,[],
6560,https://github.com/Vivek-Dave/UVM_TestBench_For_3x8_Decoder.git,2021-06-02 02:35:00+00:00,Complete UVM TestBench For Verification Of 3x8 Decoder,0,Vivek-Dave/UVM_TestBench_For_3x8_Decoder,373017556,SystemVerilog,UVM_TestBench_For_3x8_Decoder,83,1,2024-02-13 00:13:16+00:00,[],
6561,https://github.com/jiru1997/NOC-Convolutional-Neural-Network-implementation-2D-3x3-filter-5x5-mapper.git,2021-06-20 22:51:06+00:00,NOC Convolutional Neural Network implementation by using systemverilog,0,jiru1997/NOC-Convolutional-Neural-Network-implementation-2D-3x3-filter-5x5-mapper,378754026,SystemVerilog,NOC-Convolutional-Neural-Network-implementation-2D-3x3-filter-5x5-mapper,13,1,2024-03-22 10:35:37+00:00,[],
6562,https://github.com/upaengineering/TD4_SV.git,2021-07-05 00:43:16+00:00,TD4 (4bit CPU) written by System Verilog,1,upaengineering/TD4_SV,382976305,SystemVerilog,TD4_SV,8,1,2021-10-11 14:16:18+00:00,[],
6563,https://github.com/ZhiyiGUO/test_zeroriscy.git,2021-07-04 06:06:24+00:00,,0,ZhiyiGUO/test_zeroriscy,382776723,SystemVerilog,test_zeroriscy,860,1,2022-09-09 10:53:35+00:00,[],
6564,https://github.com/Shihhaolin/register.git,2021-08-01 08:52:18+00:00,Practice design a testbench of register.,0,Shihhaolin/register,391575666,SystemVerilog,register,2,1,2021-10-31 20:58:32+00:00,[],
6565,https://github.com/dajoariando/WMPMRI_PCBv11_HDLv1_2021_Quartus.git,2021-06-04 21:09:24+00:00,The WMP MRI HDL with Bitstream topology,0,dajoariando/WMPMRI_PCBv11_HDLv1_2021_Quartus,373960035,SystemVerilog,WMPMRI_PCBv11_HDLv1_2021_Quartus,21668,1,2022-06-16 06:18:21+00:00,[],
6566,https://github.com/bhargav-s-271100/System-Verilog.git,2021-06-06 07:17:58+00:00,"This repository contains programs to demonstrate System Verilog test constructs like modports, interface and clocking blocks, driver and transactor classes, constrained randomization and functional coverage.",0,bhargav-s-271100/System-Verilog,374294093,SystemVerilog,System-Verilog,1045,1,2021-12-01 10:48:31+00:00,[],
6567,https://github.com/Grapefruite/SHA256_SystemVerilog.git,2021-04-16 08:32:36+00:00,implement SHA256 algorithm by SystemVerilog ,0,Grapefruite/SHA256_SystemVerilog,358530627,SystemVerilog,SHA256_SystemVerilog,1074,1,2024-02-18 06:50:10+00:00,[],
6568,https://github.com/fcoccimi/Flatsat-UHF-transceiver.git,2021-04-08 01:07:34+00:00,"The following shows an implementation of a UHF transceiver that can be used as a flat sat. The implementation is to get universities, radio amateur, and the general public to understand digital radio communication, space communication, and for universities to use in there there testing of their CubeSat, before purchasing the more expensive transceivers.   ",0,fcoccimi/Flatsat-UHF-transceiver,355724704,SystemVerilog,Flatsat-UHF-transceiver,8196,1,2024-03-18 17:20:02+00:00,"['digital-radio-communication', 'uhf-transceiver', 'flatsat-uhf-ransiever']",
6569,https://github.com/teekamkhandelwal/UVM_Simple_testbech_examples.git,2021-05-15 04:33:00+00:00,,1,teekamkhandelwal/UVM_Simple_testbech_examples,367539582,SystemVerilog,UVM_Simple_testbech_examples,49,1,2021-11-09 15:50:05+00:00,[],
6570,https://github.com/Vivek-Dave/UVM_TestBench_For_Ring_Counter.git,2021-06-19 07:19:46+00:00,Complete UVM TestBench For Verification Of Ring (Onehot) Counter,2,Vivek-Dave/UVM_TestBench_For_Ring_Counter,378350124,SystemVerilog,UVM_TestBench_For_Ring_Counter,74,1,2023-05-28 08:21:18+00:00,"['uvm', 'functional-coverage']",
6571,https://github.com/elirazd/Verifcation-APB-transceiver.git,2021-08-09 16:07:52+00:00,"Verification test (with UVM) of 3 interfaces transceiver include APB, Tx-Rx and IRQ",0,elirazd/Verifcation-APB-transceiver,394357640,SystemVerilog,Verifcation-APB-transceiver,774,1,2022-03-23 14:01:45+00:00,[],
6572,https://github.com/knyuchen/fifo_model.git,2021-05-01 17:47:13+00:00,Models for Various FIFO & Buffer,0,knyuchen/fifo_model,363472214,SystemVerilog,fifo_model,29,1,2024-02-11 04:20:08+00:00,"['systemverilog', 'fifo', 'buffer']",
6573,https://github.com/Aric5301/Space-Invaders-Maabada1A-Technion.git,2021-05-09 18:52:13+00:00,,0,Aric5301/Space-Invaders-Maabada1A-Technion,365825820,SystemVerilog,Space-Invaders-Maabada1A-Technion,59808,1,2024-03-13 05:36:28+00:00,[],
6574,https://github.com/j-sungyeong/esca_samsung.git,2021-04-14 05:17:58+00:00,,0,j-sungyeong/esca_samsung,357782905,SystemVerilog,esca_samsung,26883,1,2022-01-13 08:11:13+00:00,[],
6575,https://github.com/MinatsuT/TangNano_GamingLED.git,2021-06-05 13:46:24+00:00,Tang Nano RGB LED Example,0,MinatsuT/TangNano_GamingLED,374124989,SystemVerilog,TangNano_GamingLED,9,1,2022-01-21 23:33:30+00:00,"['fpga', 'verilog', 'sipeed-tang-nano']",https://api.github.com/licenses/apache-2.0
6576,https://github.com/mario-yankov-todorov/Verilog_examples_from_EDA_playground.git,2021-04-22 06:42:40+00:00,,0,mario-yankov-todorov/Verilog_examples_from_EDA_playground,360418336,SystemVerilog,Verilog_examples_from_EDA_playground,105,1,2022-06-07 00:59:33+00:00,[],
6577,https://github.com/Elia1996/Travulog.git,2021-04-25 20:39:56+00:00,Travulog a metalanguage to automatize regular modification to verilgo code,1,Elia1996/Travulog,361533469,SystemVerilog,Travulog,252,1,2023-03-07 20:21:04+00:00,[],
6578,https://github.com/Radiophantom/dma_controller.git,2021-08-12 15:57:50+00:00,,0,Radiophantom/dma_controller,395372426,SystemVerilog,dma_controller,8,1,2022-07-26 08:11:44+00:00,[],
6579,https://github.com/FilippoCheein/RISCV_SUPERSCALAR.git,2021-08-06 23:33:39+00:00,,1,FilippoCheein/RISCV_SUPERSCALAR,393529245,SystemVerilog,RISCV_SUPERSCALAR,22141,1,2021-08-08 20:19:20+00:00,[],
6580,https://github.com/Jayshil-Patel/System-Verilog.git,2021-04-17 10:28:13+00:00,This repository consists of Some system Verilog files made during my 6th semester,0,Jayshil-Patel/System-Verilog,358849069,SystemVerilog,System-Verilog,11,1,2021-12-28 15:45:23+00:00,[],https://api.github.com/licenses/mit
6581,https://github.com/U-Ar/Kotsu3Risc.git,2021-04-25 14:24:07+00:00,Multi-cycle RISC-V processor and advanced version of Kotsu2Risc.,1,U-Ar/Kotsu3Risc,361449621,SystemVerilog,Kotsu3Risc,4,1,2021-04-28 13:06:37+00:00,[],
6582,https://github.com/nvitya/hps_fpga.git,2021-05-23 09:09:35+00:00,Some tests and documentation over Altera Cyclone V SoC (ARM-A9 + FPGA),0,nvitya/hps_fpga,370006928,SystemVerilog,hps_fpga,171,1,2022-06-01 04:28:06+00:00,[],https://api.github.com/licenses/bsd-2-clause
6583,https://github.com/peterzhong2001/JTAG.git,2021-04-20 02:57:54+00:00,,0,peterzhong2001/JTAG,359665614,SystemVerilog,JTAG,542,1,2022-09-21 02:49:37+00:00,[],
6584,https://github.com/Tyler1T/HSCA_Final.git,2021-05-02 23:54:20+00:00,,0,Tyler1T/HSCA_Final,363774767,SystemVerilog,HSCA_Final,3930,1,2022-04-13 19:58:45+00:00,[],https://api.github.com/licenses/gpl-3.0
6585,https://github.com/tylergithub/8b_10b_Encoder_Verification_EE273.git,2021-04-18 22:23:54+00:00,Design and verify an 8b/10b encoder with CRC Using UVM,0,tylergithub/8b_10b_Encoder_Verification_EE273,359265174,SystemVerilog,8b_10b_Encoder_Verification_EE273,67,1,2023-09-09 09:19:57+00:00,[],
6586,https://github.com/DarthZhu/MIPS_Pipeline.git,2021-06-04 16:33:52+00:00,,0,DarthZhu/MIPS_Pipeline,373902194,SystemVerilog,MIPS_Pipeline,468,1,2023-02-21 08:39:22+00:00,[],
6587,https://github.com/jiru1997/NOC-Convolutional-Neural-Network-implementation-with-two-CONV-layers.git,2021-06-20 23:15:05+00:00,NOC-Convolutional-Neural-Network-implementation with two CONV layer,0,jiru1997/NOC-Convolutional-Neural-Network-implementation-with-two-CONV-layers,378756873,SystemVerilog,NOC-Convolutional-Neural-Network-implementation-with-two-CONV-layers,68,1,2024-03-22 10:37:31+00:00,[],
6588,https://github.com/sri-srujan08/AHB_APB_BRIDGE.git,2021-06-29 13:48:27+00:00,,0,sri-srujan08/AHB_APB_BRIDGE,381380839,SystemVerilog,AHB_APB_BRIDGE,23,1,2022-01-31 14:55:50+00:00,[],
6589,https://github.com/m-hariszafar/apb_uvm_vip.git,2021-07-28 09:38:15+00:00,,1,m-hariszafar/apb_uvm_vip,390295559,SystemVerilog,apb_uvm_vip,19,1,2023-02-09 08:11:30+00:00,[],
6590,https://github.com/ShashankVM/overlapping-sequence-detector-1011-mealy-sv.git,2021-07-16 14:26:04+00:00,"Mealy Finite State Machine type overlapping sequence detector of ""1011"" in SystemVerilog.",0,ShashankVM/overlapping-sequence-detector-1011-mealy-sv,386664289,SystemVerilog,overlapping-sequence-detector-1011-mealy-sv,19,1,2022-06-18 22:30:14+00:00,"['systemverilog', 'finite-state-machine', 'sequence-detector']",https://api.github.com/licenses/gpl-3.0
6591,https://github.com/Zchunhua521/Hello-word.git,2021-07-16 07:06:38+00:00,train,0,Zchunhua521/Hello-word,386543580,SystemVerilog,Hello-word,2,1,2021-07-19 11:22:29+00:00,[],
6592,https://github.com/lwflwf1/uvm-generator.git,2021-05-06 03:30:49+00:00,uvm testbench generator,0,lwflwf1/uvm-generator,364773997,SystemVerilog,uvm-generator,78,1,2021-06-23 08:35:10+00:00,[],
6593,https://github.com/KuangjuX-Archived/Digital-Lab.git,2021-04-02 04:51:55+00:00,Digital Design Lab,0,KuangjuX-Archived/Digital-Lab,353908401,SystemVerilog,Digital-Lab,5511,1,2023-08-16 02:21:23+00:00,[],https://api.github.com/licenses/gpl-3.0
6594,https://github.com/menotti/lightriscv.git,2021-05-17 22:38:00+00:00,Multi-cycle implementation of a subset of RISC-V for educational purposes,1,menotti/lightriscv,368338787,SystemVerilog,lightriscv,9,1,2023-09-01 13:02:53+00:00,[],
6595,https://github.com/PratikNarkhede20/ECE571-FinalProject-DMA-Controller.git,2021-05-16 00:19:21+00:00,,0,PratikNarkhede20/ECE571-FinalProject-DMA-Controller,367753967,SystemVerilog,ECE571-FinalProject-DMA-Controller,11441,1,2023-01-28 08:05:10+00:00,[],
6596,https://github.com/charkster/adc_block_ram_spi_top.git,2021-07-16 06:28:08+00:00,"Xilinx Artix-7 FPGA design using block ram, XADC and a SPI slave (SCARF). The block ram is dual port and can be written by either SPI or XADC samples, and only read by SPI.",1,charkster/adc_block_ram_spi_top,386533668,SystemVerilog,adc_block_ram_spi_top,217,1,2024-02-15 08:17:42+00:00,"['fpga', 'cmod-a7', 'xadc', 'pll', 'spi', 'raspberry-pi', 'block-ram']",https://api.github.com/licenses/mit
6597,https://github.com/kevinscorzu/Diseno-e-Implementacion-de-un-ASIP-vectorial-para-composicion-alfa.git,2021-05-02 04:04:21+00:00,Proyecto Grupal I - Arquitectura de Computadore II,0,kevinscorzu/Diseno-e-Implementacion-de-un-ASIP-vectorial-para-composicion-alfa,363562417,SystemVerilog,Diseno-e-Implementacion-de-un-ASIP-vectorial-para-composicion-alfa,15329,1,2022-06-22 22:24:02+00:00,[],
6598,https://github.com/7FM/Usb20DeviceController.git,2021-06-10 13:01:34+00:00,"Foolish try to implement an non standard Usb 2.0 Full Speed Device Controller on an ICE40 FPGA. Use at your OWN risk, no garuantees what so ever!",0,7FM/Usb20DeviceController,375699155,SystemVerilog,Usb20DeviceController,638,1,2022-11-10 08:24:46+00:00,[],https://api.github.com/licenses/gpl-3.0
6599,https://github.com/EmreAlabayMasterCourses/MEH173.git,2021-05-02 15:01:03+00:00,Functional Verification of SPI Master IP using SystemVerilog,0,EmreAlabayMasterCourses/MEH173,363677695,SystemVerilog,MEH173,44,1,2022-06-10 05:34:16+00:00,[],
6600,https://github.com/SilverArrow009/alu-cores.git,2021-05-16 14:46:05+00:00,64-bit RISCV ALU cores,1,SilverArrow009/alu-cores,367907968,SystemVerilog,alu-cores,55,1,2021-06-20 21:31:13+00:00,[],https://api.github.com/licenses/gpl-3.0
6601,https://github.com/VSHEV92/CycloneV_StarterKit_Leds7_UVM.git,2021-05-03 13:08:29+00:00,Тестовое окружение на примере проекта с семисегментными индикаторами с использованием UVM,0,VSHEV92/CycloneV_StarterKit_Leds7_UVM,363933066,SystemVerilog,CycloneV_StarterKit_Leds7_UVM,13,1,2021-08-30 19:29:02+00:00,[],
6602,https://github.com/ethan12377/Digital_Circuit_Lab.git,2021-08-03 17:33:38+00:00,HWs of Digital Circuit Lab (DCLab),0,ethan12377/Digital_Circuit_Lab,392401167,SystemVerilog,Digital_Circuit_Lab,5819,1,2024-03-18 00:13:44+00:00,[],
6603,https://github.com/nitinm694/Tensor_Core_RISCV_VP.git,2021-06-17 21:03:17+00:00,RISCV Vector Extension ISA to accelerate Deep Learning,2,nitinm694/Tensor_Core_RISCV_VP,377960079,SystemVerilog,Tensor_Core_RISCV_VP,47,1,2021-09-24 13:44:17+00:00,[],https://api.github.com/licenses/gpl-3.0
6604,https://github.com/YosysHQ-Docs/AppNote-120.git,2021-04-29 16:24:39+00:00,YosysHQ AppNote 120,1,YosysHQ-Docs/AppNote-120,362879307,SystemVerilog,AppNote-120,1085,1,2022-07-02 23:09:59+00:00,[],
6605,https://github.com/siglabsoss/ip-verification.git,2021-06-13 22:09:35+00:00,,0,siglabsoss/ip-verification,376649484,SystemVerilog,ip-verification,2,1,2022-06-01 04:39:33+00:00,[],https://api.github.com/licenses/bsd-3-clause
6606,https://github.com/RPTU-EIS/OpenTitan_with_Access_Control.git,2021-06-28 12:07:28+00:00,OpenTitan Silver Release v5 copy for security improvements,2,RPTU-EIS/OpenTitan_with_Access_Control,381017614,SystemVerilog,OpenTitan_with_Access_Control,32378,1,2023-11-09 09:41:20+00:00,[],https://api.github.com/licenses/apache-2.0
6607,https://github.com/Shihhaolin/full_adder.git,2021-07-30 07:03:53+00:00,The main purpose is trying to practice my skill to build a testbench. Using task to detect the fata is correct or not,0,Shihhaolin/full_adder,390966049,SystemVerilog,full_adder,1,1,2021-10-31 20:58:34+00:00,[],
6608,https://github.com/tmarpaka/test.git,2021-08-03 16:33:04+00:00,,0,tmarpaka/test,392383072,SystemVerilog,test,4,1,2021-08-29 06:00:27+00:00,"['tlm', 'uvm']",
6609,https://github.com/redchenjs/optical_transceiver.git,2021-08-04 05:45:09+00:00,Optical Transceiver,0,redchenjs/optical_transceiver,392564876,SystemVerilog,optical_transceiver,2830,1,2022-06-05 07:52:07+00:00,[],
6610,https://github.com/Lampro-Mellon/LEC-RTL.git,2021-04-01 10:36:19+00:00,,0,Lampro-Mellon/LEC-RTL,353663669,SystemVerilog,LEC-RTL,5325,1,2024-04-05 06:32:48+00:00,[],
6611,https://github.com/mish3albaiz/cache-simulation.git,2021-05-02 02:34:27+00:00,SystemVerilog cache simulation,1,mish3albaiz/cache-simulation,363550754,SystemVerilog,cache-simulation,9,1,2022-05-23 15:48:21+00:00,[],
6612,https://github.com/gzyIDE/fputil.git,2021-04-08 03:23:44+00:00,,1,gzyIDE/fputil,355751334,SystemVerilog,fputil,8,1,2021-09-06 04:22:36+00:00,[],
6613,https://github.com/dairecant/riscv.git,2021-04-07 20:18:02+00:00,RISCV Processor Demonstrated on MAX10 FPGA Development Kit,0,dairecant/riscv,355671637,SystemVerilog,riscv,1063,1,2023-10-31 23:21:15+00:00,[],
6614,https://github.com/yangli900520/Dynamic-Neural-Network.git,2021-04-08 21:45:19+00:00,NN accelerator,0,yangli900520/Dynamic-Neural-Network,356055891,SystemVerilog,Dynamic-Neural-Network,91,1,2021-04-08 21:53:52+00:00,[],
6615,https://github.com/rag1404/APB-slave-UVM-TB.git,2021-05-02 22:29:32+00:00,UVM TB for APB Slave ,0,rag1404/APB-slave-UVM-TB,363763292,SystemVerilog,APB-slave-UVM-TB,9,1,2023-02-15 10:40:53+00:00,[],
6616,https://github.com/omer-genc/tek-ritimli-islemci.git,2021-04-19 12:29:50+00:00,,0,omer-genc/tek-ritimli-islemci,359451676,SystemVerilog,tek-ritimli-islemci,1992,1,2022-03-11 12:18:02+00:00,[],
6617,https://github.com/abdelrahmanadel2/ALU-UVM-Environment.git,2021-05-17 12:19:20+00:00,A Complete UVM environment for verifying the functionality of a simple ALU,0,abdelrahmanadel2/ALU-UVM-Environment,368174625,SystemVerilog,ALU-UVM-Environment,6,1,2023-04-11 06:38:45+00:00,[],
6618,https://github.com/namangr8/VHDL_Codes.git,2021-05-14 09:31:57+00:00,Verilog Codes for Digital Systems simulated on EDA Playground,0,namangr8/VHDL_Codes,367314940,SystemVerilog,VHDL_Codes,30,1,2021-05-15 17:58:35+00:00,[],
6619,https://github.com/cyan333/Ising_testing_FPGA.git,2021-07-26 15:27:06+00:00,,1,cyan333/Ising_testing_FPGA,389680730,SystemVerilog,Ising_testing_FPGA,6625,1,2022-11-05 03:54:59+00:00,[],
6620,https://github.com/LuisGarcia-S/Procesador-Monociclo.git,2021-07-31 03:16:23+00:00,Pequeña implementación en Verilog de un procesador monociclo usando la arquitectura de RISC-V,0,LuisGarcia-S/Procesador-Monociclo,391243664,SystemVerilog,Procesador-Monociclo,24,1,2023-10-11 02:08:08+00:00,[],
6621,https://github.com/uranusb/SYN_SRAM_UVM.git,2021-05-10 19:32:15+00:00,A UVM based testbench for a synchronous static RAM. ,0,uranusb/SYN_SRAM_UVM,366155097,SystemVerilog,SYN_SRAM_UVM,24,1,2023-11-25 07:59:15+00:00,[],
6622,https://github.com/Vivek-Dave/UVM_TestBench_For_Up_Counter.git,2021-04-18 08:00:30+00:00,Complete UVM TB For Verification Of Up_Counter,0,Vivek-Dave/UVM_TestBench_For_Up_Counter,359081152,SystemVerilog,UVM_TestBench_For_Up_Counter,74,1,2024-02-19 05:44:22+00:00,[],
6623,https://github.com/Vivek-Dave/UVM_TestBench_For_Sequence_Detector.git,2021-06-15 13:35:33+00:00,Complete UVM TestBench For Verification Of 1001 Sequence Detector,0,Vivek-Dave/UVM_TestBench_For_Sequence_Detector,377174716,SystemVerilog,UVM_TestBench_For_Sequence_Detector,78,1,2024-01-27 10:41:15+00:00,[],
6624,https://github.com/minchaej/intro-to-systemverilog.git,2021-06-14 11:12:02+00:00,,0,minchaej/intro-to-systemverilog,376795334,SystemVerilog,intro-to-systemverilog,7,1,2021-08-04 21:21:55+00:00,[],
6625,https://github.com/hughbyrne10/RiscV-Core.git,2021-04-27 17:56:35+00:00,"RISC-V is an open standard instruction set architecture based on established reduced instruction set computer principles. Unlike most other ISA designs, the RISC-V ISA is provided under open source licenses that do not require fees to use.",0,hughbyrne10/RiscV-Core,362204025,SystemVerilog,RiscV-Core,23,1,2023-04-12 18:51:39+00:00,[],https://api.github.com/licenses/unlicense
6626,https://github.com/peterzhong2001/EE271_FinalProject.git,2021-05-13 22:42:40+00:00,,0,peterzhong2001/EE271_FinalProject,367191512,SystemVerilog,EE271_FinalProject,10210,1,2022-05-28 20:36:38+00:00,[],
6627,https://github.com/mfkiwl/SpinalHDL-FPGA-IPbox.git,2021-05-22 04:17:58+00:00,,0,mfkiwl/SpinalHDL-FPGA-IPbox,369712682,,SpinalHDL-FPGA-IPbox,9,1,2023-04-17 22:56:30+00:00,[],https://api.github.com/licenses/mit
6628,https://github.com/ChaoWao/ustcy.git,2021-06-30 01:30:17+00:00,"A rv32i core cut from cv32e40p, originally ri5cY, by USTCer.",2,ChaoWao/ustcy,381541434,SystemVerilog,ustcy,309,1,2021-07-29 20:00:08+00:00,[],https://api.github.com/licenses/agpl-3.0
6629,https://github.com/aurthurtang/flashing_leds.git,2021-07-30 14:02:50+00:00,First simple FPGA project on NEXYS A7 to get familiar with the board,0,aurthurtang/flashing_leds,391084767,SystemVerilog,flashing_leds,120,1,2022-05-17 02:52:49+00:00,[],
6630,https://github.com/gordonchen98/DAV.git,2021-06-13 10:45:29+00:00,Digital Audio Visualizer project from IEEE@UCLA,0,gordonchen98/DAV,376514452,SystemVerilog,DAV,22,1,2021-06-14 03:42:20+00:00,[],
6631,https://github.com/ZhangYifan01/Kirisame-Marisa-s-FPGA-Adventure.git,2021-06-04 15:08:49+00:00,"DE1_SoC based Touhou game ""Kirisame Marisa's FPGA Adventure""",0,ZhangYifan01/Kirisame-Marisa-s-FPGA-Adventure,373879381,SystemVerilog,Kirisame-Marisa-s-FPGA-Adventure,21,1,2021-09-20 20:32:18+00:00,[],https://api.github.com/licenses/mit
6632,https://github.com/jiru1997/NOC-Convolutional-Neural-Network-implementation-5x5-filter-7x7-mapper-.git,2021-06-20 22:30:52+00:00,NOC Convolutional Neural Network implementation by using systemverilog,0,jiru1997/NOC-Convolutional-Neural-Network-implementation-5x5-filter-7x7-mapper-,378751680,SystemVerilog,NOC-Convolutional-Neural-Network-implementation-5x5-filter-7x7-mapper-,31,1,2024-03-22 10:35:36+00:00,[],
6634,https://github.com/sathyapriyanka/AXI4_UVC_UVM.git,2021-05-24 17:14:48+00:00,,0,sathyapriyanka/AXI4_UVC_UVM,370429600,SystemVerilog,AXI4_UVC_UVM,525,1,2023-06-29 21:10:56+00:00,[],
6635,https://github.com/bmartini/verilog-cdc.git,2021-05-17 02:10:44+00:00,Selection of Clock Domain Crossing modules,1,bmartini/verilog-cdc,368029387,SystemVerilog,verilog-cdc,2,1,2022-04-21 00:27:27+00:00,[],https://api.github.com/licenses/mit
6636,https://github.com/vinodsake/NetworkSwitch-Verification.git,2021-06-16 17:39:07+00:00,Design and Verify a Network Switch using UVM Testbench,0,vinodsake/NetworkSwitch-Verification,377579373,SystemVerilog,NetworkSwitch-Verification,7,1,2022-02-18 16:37:11+00:00,[],
6637,https://github.com/erik-fox/AXIProtocol-Verification.git,2021-05-25 22:15:18+00:00,,0,erik-fox/AXIProtocol-Verification,370841008,SystemVerilog,AXIProtocol-Verification,1562,1,2023-04-07 18:01:58+00:00,[],
6638,https://github.com/CanAvsar/CS223Labs.git,2021-04-25 19:36:32+00:00,Bilkent University 2020-2021 Fall - My CS223 Lab Codes,0,CanAvsar/CS223Labs,361521114,SystemVerilog,CS223Labs,19878,1,2022-12-20 02:21:48+00:00,[],
6639,https://github.com/18nygara/QuadCopter_Driver.git,2021-04-30 17:46:03+00:00,Custom designed quadcopter implementation / driver. Contains verilog for remote and actual Quadcopter,0,18nygara/QuadCopter_Driver,363216905,SystemVerilog,QuadCopter_Driver,192,1,2021-04-30 17:56:56+00:00,[],
6640,https://github.com/RevanthNandamuri1341b0/Router-4x4-Verification-Environment.git,2021-07-28 16:04:52+00:00,Development UVM Verification Environment for Router 4x4 DUT.,0,RevanthNandamuri1341b0/Router-4x4-Verification-Environment,390412915,SystemVerilog,Router-4x4-Verification-Environment,22,1,2022-02-18 16:07:23+00:00,[],
6641,https://github.com/jiru1997/NOC-Convolutional-Neural-Network-implementation-with-one-CONV-layer.git,2021-06-20 22:56:29+00:00,NOC-Convolutional-Neural-Network-implementation with one CONV layer,0,jiru1997/NOC-Convolutional-Neural-Network-implementation-with-one-CONV-layer,378754639,SystemVerilog,NOC-Convolutional-Neural-Network-implementation-with-one-CONV-layer,22,1,2024-03-22 10:35:38+00:00,[],
6642,https://github.com/felipesqra/LOAC.git,2021-04-19 13:18:35+00:00,Atividades da cadeira de Laboratório de Organização e Arquitetura de Computadores da UFCG.,1,felipesqra/LOAC,359466591,SystemVerilog,LOAC,214,1,2021-11-01 00:49:28+00:00,"['systemverilog', 'fpga', 'loac', 'hacktoberfest']",
6643,https://github.com/KelvinVale/tcc_RAL.git,2021-05-03 17:46:41+00:00,,0,KelvinVale/tcc_RAL,364013339,SystemVerilog,tcc_RAL,8486,1,2023-07-13 03:54:49+00:00,[],
6644,https://github.com/IEEE-SSCS/AES.git,2021-04-17 21:54:07+00:00,,4,IEEE-SSCS/AES,358990045,SystemVerilog,AES,275,1,2021-10-26 20:00:20+00:00,"['aes', 'encryption', 'decryption', 'hardware']",
6645,https://github.com/Sash-github-account/linked_list_rtl.git,2021-06-18 02:44:23+00:00,A SystemVerilog / verilog RTL implementation of linked list with a test bench (W.I.P),1,Sash-github-account/linked_list_rtl,378015510,SystemVerilog,linked_list_rtl,570,1,2022-07-08 17:10:21+00:00,[],https://api.github.com/licenses/gpl-3.0
6646,https://github.com/shariethernet/synthesis2.git,2021-06-04 17:59:23+00:00,,0,shariethernet/synthesis2,373922435,SystemVerilog,synthesis2,40,1,2021-08-27 06:11:27+00:00,[],
6647,https://github.com/imamura-slab/PR_demo.git,2021-05-07 01:48:45+00:00,Intel FPGA 動的再構成チュートリアル,0,imamura-slab/PR_demo,365084893,SystemVerilog,PR_demo,16653,1,2021-06-10 16:31:39+00:00,[],
6648,https://github.com/edoardo-monnetti/VGA.git,2021-07-06 14:10:15+00:00,Verilog code for VGA protocol,0,edoardo-monnetti/VGA,383491349,SystemVerilog,VGA,39895,1,2023-11-04 12:34:48+00:00,[],
6649,https://github.com/villyye97/EE-469-HW1.git,2021-08-07 16:10:28+00:00,"Lab1 for EE 469. to design the basic structure of an assembly language, such as logic gates, DFFs and decoder and encoders. ",0,villyye97/EE-469-HW1,393730801,SystemVerilog,EE-469-HW1,5,1,2021-10-15 18:41:06+00:00,[],
6650,https://github.com/HIeart-Vael/KannyMIPS.git,2021-08-07 07:57:26+00:00,支持部分MIPS32指令集的五级流水CPU,0,HIeart-Vael/KannyMIPS,393618984,SystemVerilog,KannyMIPS,857,1,2021-08-07 10:00:42+00:00,[],
6651,https://github.com/Shihhaolin/mux-4to1.git,2021-08-01 09:48:53+00:00,Practice design a testbench of mux 4to1.,0,Shihhaolin/mux-4to1,391587604,SystemVerilog,mux-4to1,1,1,2021-10-31 20:58:31+00:00,[],
6652,https://github.com/Shihhaolin/Arithmetic-Logic-Unit.git,2021-08-02 05:19:43+00:00,Practice design a testbench of Arithmetic Logic Unit(ALU).,0,Shihhaolin/Arithmetic-Logic-Unit,391824038,SystemVerilog,Arithmetic-Logic-Unit,2,1,2021-10-31 20:58:30+00:00,[],
6653,https://github.com/deoregaurav92/Parallel-to-Serial-Interface-using-Asynch-FIFO-.git,2021-07-10 23:24:52+00:00,Low Power parallel to serial interface using asynchronous FIFO ,1,deoregaurav92/Parallel-to-Serial-Interface-using-Asynch-FIFO-,384817657,SystemVerilog,Parallel-to-Serial-Interface-using-Asynch-FIFO-,2017,1,2023-11-23 03:31:10+00:00,[],
6654,https://github.com/ensaremirerol/DIR-ARM.git,2021-06-25 17:00:24+00:00,,0,ensaremirerol/DIR-ARM,380303688,SystemVerilog,DIR-ARM,169,1,2021-08-03 01:58:58+00:00,[],https://api.github.com/licenses/gpl-3.0
6655,https://github.com/bhargavasai222/bhargav12.git,2021-04-20 04:34:42+00:00,,0,bhargavasai222/bhargav12,359684598,SystemVerilog,bhargav12,160,0,2021-04-20 04:34:55+00:00,[],
6656,https://github.com/kat066/cpuOptimization.git,2021-04-22 21:06:17+00:00,,0,kat066/cpuOptimization,360681712,SystemVerilog,cpuOptimization,321810,0,2021-06-08 23:30:17+00:00,[],
6657,https://github.com/durganila/Verification-of-AMBA-AXI4-Lite-Protocol.git,2021-04-27 03:55:46+00:00,,0,durganila/Verification-of-AMBA-AXI4-Lite-Protocol,361974018,SystemVerilog,Verification-of-AMBA-AXI4-Lite-Protocol,9196,0,2021-06-05 06:07:32+00:00,[],
6658,https://github.com/hao310rui140326/pe_array_sim.git,2021-04-27 06:18:55+00:00,,0,hao310rui140326/pe_array_sim,362002387,SystemVerilog,pe_array_sim,17425,0,2021-05-07 03:18:34+00:00,[],
6659,https://github.com/BarronStack/ELO212_labdigitales.git,2021-05-05 18:52:41+00:00,Repositorio con sesiones y proyectos asociados al ramo ELO212. Laboratorio de Electrónica Digital 2021-1,0,BarronStack/ELO212_labdigitales,364676862,SystemVerilog,ELO212_labdigitales,3850,0,2021-06-25 03:05:42+00:00,[],
6660,https://github.com/HappyChuckProgramming/SystemVerilog.git,2021-05-08 05:58:09+00:00,,0,HappyChuckProgramming/SystemVerilog,365431880,SystemVerilog,SystemVerilog,1,0,2021-05-08 06:02:24+00:00,[],
6661,https://github.com/naomimotwani98/ibex-sv.git,2021-05-05 19:59:51+00:00,,0,naomimotwani98/ibex-sv,364691854,SystemVerilog,ibex-sv,113,0,2021-05-05 20:24:11+00:00,[],
6662,https://github.com/sunbanett40/SystemVerilog-Programming.git,2021-04-24 13:03:09+00:00,"Not technically programming because SV is a description language, but it keeps consistent naming.",0,sunbanett40/SystemVerilog-Programming,361163277,SystemVerilog,SystemVerilog-Programming,1889,0,2021-04-24 13:04:49+00:00,[],
6663,https://github.com/Vivek-Dave/UVM_TestBench_For_Programmable_Counter.git,2021-05-04 06:58:57+00:00,Complete UVM Testbench For Verification Of Programmable Counter,0,Vivek-Dave/UVM_TestBench_For_Programmable_Counter,364167599,SystemVerilog,UVM_TestBench_For_Programmable_Counter,11,0,2021-05-04 07:02:35+00:00,[],
6664,https://github.com/Embedded-Tinkerer/EECE6540.git,2021-05-17 12:19:59+00:00,Heterogeneous Computing,0,Embedded-Tinkerer/EECE6540,368174840,SystemVerilog,EECE6540,448343,0,2021-07-31 06:14:04+00:00,[],
6665,https://github.com/huntingt/6111-final-project.git,2021-05-16 20:20:14+00:00,,0,huntingt/6111-final-project,367977481,SystemVerilog,6111-final-project,124,0,2021-06-04 15:35:29+00:00,[],
6666,https://github.com/JakeA42/Otter_qHDVGA.git,2021-03-31 07:08:56+00:00,,0,JakeA42/Otter_qHDVGA,353260804,SystemVerilog,Otter_qHDVGA,18,0,2022-04-11 01:55:59+00:00,[],https://api.github.com/licenses/mit
6667,https://github.com/TishukBogdana/dijkstra_hw.git,2021-04-14 17:35:06+00:00,,0,TishukBogdana/dijkstra_hw,357989893,SystemVerilog,dijkstra_hw,16,0,2021-07-24 09:21:23+00:00,[],
6668,https://github.com/juan230500/PROYECTO-DIGITALES.git,2021-06-03 15:48:04+00:00,,0,juan230500/PROYECTO-DIGITALES,373561723,SystemVerilog,PROYECTO-DIGITALES,7985,0,2021-06-13 06:04:48+00:00,[],
6669,https://github.com/rjmdhr/RTCSV.git,2021-06-14 21:52:02+00:00,A Real Time Clock in System Verilog,0,rjmdhr/RTCSV,376964906,SystemVerilog,RTCSV,666,0,2021-07-13 23:17:17+00:00,[],
6670,https://github.com/tsubaki-8192/cultura.git,2021-05-24 17:48:17+00:00,はじめてのCPU設計,0,tsubaki-8192/cultura,370438628,SystemVerilog,cultura,23,0,2021-05-24 18:02:26+00:00,[],
6671,https://github.com/cuneytbalci/riscv_design_project.git,2021-05-28 16:52:33+00:00,,0,cuneytbalci/riscv_design_project,371765295,SystemVerilog,riscv_design_project,3093,0,2021-05-28 18:57:32+00:00,[],
6672,https://github.com/aurthurtang/priority_arbiter.git,2021-06-30 22:32:03+00:00,This is a verilog design for a priority arbiter with N number of requests,0,aurthurtang/priority_arbiter,381848172,SystemVerilog,priority_arbiter,2,0,2021-06-30 22:34:03+00:00,[],
6673,https://github.com/tishi43/bitonic_verilog.git,2021-07-01 02:12:13+00:00,,1,tishi43/bitonic_verilog,381883412,SystemVerilog,bitonic_verilog,14621,0,2021-07-05 03:52:52+00:00,[],
6674,https://github.com/adnanashraf17501/uvm_mux.git,2021-05-30 06:17:38+00:00,,0,adnanashraf17501/uvm_mux,372138987,SystemVerilog,uvm_mux,155,0,2021-05-30 06:18:56+00:00,[],
6675,https://github.com/bzeeno/ddfs.git,2021-06-24 08:10:19+00:00,Direct Digital Frequency Synthesis Module,0,bzeeno/ddfs,379851589,SystemVerilog,ddfs,231,0,2021-07-01 21:47:24+00:00,[],
6676,https://github.com/MohamedOsamaAhmed/mips-processor.git,2021-07-19 04:59:04+00:00,,0,MohamedOsamaAhmed/mips-processor,387343902,SystemVerilog,mips-processor,23,0,2021-07-19 05:38:33+00:00,[],
6677,https://github.com/CAGeng/MIPS-pipeline.git,2021-07-17 08:57:50+00:00,,0,CAGeng/MIPS-pipeline,386888019,SystemVerilog,MIPS-pipeline,4893,0,2021-07-17 08:59:01+00:00,[],
6678,https://github.com/Vilanya/SIT329--Week-2.git,2021-07-31 15:23:00+00:00,,0,Vilanya/SIT329--Week-2,391392490,SystemVerilog,SIT329--Week-2,1,0,2021-07-31 15:24:32+00:00,[],
6679,https://github.com/villyye97/EE-475-HW3.git,2021-08-07 16:21:36+00:00,Basic assembly commands testing. ,0,villyye97/EE-475-HW3,393733401,SystemVerilog,EE-475-HW3,19,0,2021-08-07 16:26:08+00:00,[],
6680,https://github.com/Santos-Everton/problema1-gcet231-hamming.git,2021-07-20 13:04:59+00:00,Implementação do código de Hamming para detecção de erros em transmissões de dados.,0,Santos-Everton/problema1-gcet231-hamming,387794583,SystemVerilog,problema1-gcet231-hamming,218,0,2021-07-22 19:32:04+00:00,[],https://api.github.com/licenses/mit
6681,https://github.com/HeRCLab/pebb-routing.git,2021-07-19 19:37:15+00:00,RTL code implementing routing and relating functionality for the PEBB project,0,HeRCLab/pebb-routing,387575024,SystemVerilog,pebb-routing,21,0,2022-02-11 20:38:00+00:00,[],
6682,https://github.com/flaviens/zero_width_issue.git,2021-07-26 13:45:54+00:00,,0,flaviens/zero_width_issue,389647969,SystemVerilog,zero_width_issue,13,0,2021-07-26 13:47:04+00:00,[],
6683,https://github.com/SemperAnte/firdir.git,2021-07-27 09:49:29+00:00,HDL description of digital filter with Finite Impulse Response (FIR).,0,SemperAnte/firdir,389929675,SystemVerilog,firdir,23,0,2021-09-07 15:00:52+00:00,[],
6684,https://github.com/flaviens/yosys_packed_struct_issue.git,2021-08-03 08:33:36+00:00,,0,flaviens/yosys_packed_struct_issue,392246957,SystemVerilog,yosys_packed_struct_issue,0,0,2021-08-03 08:34:11+00:00,[],
6685,https://github.com/evanmladina/verilog.git,2021-07-23 22:16:37+00:00,Contains verilog for ARM processor and FFT with a Butterworth filter.,0,evanmladina/verilog,388939418,SystemVerilog,verilog,31,0,2021-12-08 02:10:14+00:00,[],
6686,https://github.com/sotiris1982/embedded_systems.git,2021-06-10 08:31:10+00:00,,0,sotiris1982/embedded_systems,375626755,SystemVerilog,embedded_systems,15,0,2024-01-29 12:22:23+00:00,[],
6687,https://github.com/anaszameer/UVM-adder_example.git,2021-07-16 06:36:43+00:00,,0,anaszameer/UVM-adder_example,386535735,,UVM-adder_example,9,0,2021-07-16 06:43:32+00:00,[],
6688,https://github.com/slayterteal/Cache-Controller-Implementation.git,2021-04-08 23:48:33+00:00,,0,slayterteal/Cache-Controller-Implementation,356078196,SystemVerilog,Cache-Controller-Implementation,1058,0,2021-04-28 14:01:55+00:00,[],
6689,https://github.com/k1rill-fedoseev/fpga_arbiter.git,2021-04-07 17:04:14+00:00,,0,k1rill-fedoseev/fpga_arbiter,355622627,SystemVerilog,fpga_arbiter,95,0,2021-04-11 15:52:07+00:00,[],
6690,https://github.com/Asfagus/CRC-Design-Verification.git,2021-04-07 04:29:45+00:00,,1,Asfagus/CRC-Design-Verification,355411848,SystemVerilog,CRC-Design-Verification,10776,0,2021-06-01 06:29:38+00:00,[],
6691,https://github.com/zzhang681/273proj.git,2021-04-11 22:14:02+00:00,,0,zzhang681/273proj,356991230,SystemVerilog,273proj,114,0,2021-11-22 18:55:35+00:00,[],
6692,https://github.com/zceeudd/ELEC0036---Microprocessor-1S.git,2021-04-13 20:27:06+00:00,,0,zceeudd/ELEC0036---Microprocessor-1S,357679952,SystemVerilog,ELEC0036---Microprocessor-1S,14,0,2021-04-13 20:30:41+00:00,[],
6693,https://github.com/mlipasti/sparse.git,2021-04-18 15:19:53+00:00,,0,mlipasti/sparse,359179113,SystemVerilog,sparse,5,0,2021-04-28 00:46:31+00:00,[],
6694,https://github.com/giulio-naggi/isa33Lab4.git,2021-04-08 16:56:34+00:00,,0,giulio-naggi/isa33Lab4,355986418,SystemVerilog,isa33Lab4,19,0,2021-04-11 09:48:29+00:00,[],
6695,https://github.com/DorianXGH/CVA6-concours.git,2021-04-23 19:41:03+00:00,,0,DorianXGH/CVA6-concours,360988740,SystemVerilog,CVA6-concours,39621,0,2021-04-26 19:38:50+00:00,[],
6696,https://github.com/beezow/ECE_385_final.git,2021-04-21 22:53:14+00:00,,0,beezow/ECE_385_final,360327344,SystemVerilog,ECE_385_final,63,0,2021-05-11 19:03:48+00:00,[],
6697,https://github.com/bansil-vaghasiya/UVM-based-functional-verification-of-OFDM-transmitter-module.git,2021-06-03 23:23:47+00:00,,0,bansil-vaghasiya/UVM-based-functional-verification-of-OFDM-transmitter-module,373667260,SystemVerilog,UVM-based-functional-verification-of-OFDM-transmitter-module,4,0,2021-06-03 23:24:33+00:00,[],
6698,https://github.com/Knguyen2107/ECE-271-Design-Project.git,2021-06-04 16:55:26+00:00,,0,Knguyen2107/ECE-271-Design-Project,373907373,,ECE-271-Design-Project,5,0,2021-06-04 16:55:26+00:00,[],
6699,https://github.com/Cra2yPierr0t/cprv64g_v1.git,2021-04-26 11:41:10+00:00,,0,Cra2yPierr0t/cprv64g_v1,361728460,SystemVerilog,cprv64g_v1,61,0,2021-06-08 16:12:30+00:00,[],
6700,https://github.com/shalinibare/OurProject3.git,2021-04-28 07:13:03+00:00,,0,shalinibare/OurProject3,362373145,SystemVerilog,OurProject3,3896,0,2021-04-28 07:13:30+00:00,[],https://api.github.com/licenses/mit
6701,https://github.com/pabmars2/UART.git,2021-04-28 14:30:24+00:00,,0,pabmars2/UART,362498519,SystemVerilog,UART,13405,0,2021-07-02 14:56:08+00:00,[],
6702,https://github.com/marinamoheb/verlog.git,2021-05-26 02:22:10+00:00,,0,marinamoheb/verlog,370882305,SystemVerilog,verlog,1276,0,2021-05-26 02:25:46+00:00,[],
6703,https://github.com/fgs76100/UVM_Simplified.git,2021-05-29 04:15:55+00:00,A quick tutorial for building a UVM framework ,1,fgs76100/UVM_Simplified,371877788,SystemVerilog,UVM_Simplified,124,0,2021-10-02 19:48:12+00:00,[],
6704,https://github.com/Alen302/SystemVerilog-for-HDLBits.git,2021-05-26 17:26:09+00:00,SystemVerilog for HDLBits,0,Alen302/SystemVerilog-for-HDLBits,371116895,SystemVerilog,SystemVerilog-for-HDLBits,56,0,2022-11-05 03:57:13+00:00,[],
6705,https://github.com/adem-y/Single-Cycle-Processor-Design.git,2021-06-12 21:00:20+00:00,The project was designed in Quartus Prime environment using SystemVerilog and simulated with ModelSim. We designed a single rhythm processor based on a simplified instruction set.,0,adem-y/Single-Cycle-Processor-Design,376382950,SystemVerilog,Single-Cycle-Processor-Design,8,0,2021-06-12 22:17:49+00:00,[],
6706,https://github.com/0bs3n/glitcherPlatform.git,2021-04-03 00:11:07+00:00,Source code for glitching/fault injection platform for the Arty A7/Artix 7 FPGA,1,0bs3n/glitcherPlatform,354162155,SystemVerilog,glitcherPlatform,12,0,2021-04-06 19:56:20+00:00,[],
6707,https://github.com/yagmurx/elm234_FPGA.git,2021-04-15 15:35:16+00:00,Homeworks and projects of ELM234 Logic Circuit Design Lesson.,0,yagmurx/elm234_FPGA,358309282,SystemVerilog,elm234_FPGA,3,0,2021-11-02 06:15:45+00:00,[],
6708,https://github.com/VikBelt/Galaxian-385.git,2021-04-16 19:25:53+00:00,ECE 385 Final Project,0,VikBelt/Galaxian-385,358699484,SystemVerilog,Galaxian-385,1075,0,2021-05-17 22:17:40+00:00,[],
6709,https://github.com/HemP97/Sample.git,2021-05-07 13:24:17+00:00,Sample project to run RTL lint and simulation using open tool,0,HemP97/Sample,365241212,SystemVerilog,Sample,2,0,2021-05-09 04:33:51+00:00,[],
6710,https://github.com/emilijav-97/SV_UVM_training.git,2021-05-18 11:42:13+00:00,,0,emilijav-97/SV_UVM_training,368508236,SystemVerilog,SV_UVM_training,98,0,2021-06-19 06:43:21+00:00,[],
6711,https://github.com/pabmars2/avalonRiscV.git,2021-04-02 18:37:26+00:00,Proyecto de adaptación de un RISC-V a la plataforma Avalon,0,pabmars2/avalonRiscV,354103693,SystemVerilog,avalonRiscV,332048,0,2021-07-02 19:32:27+00:00,[],
6713,https://github.com/sotiris1982/embedded_systems_pico_blaze.git,2021-06-10 10:38:01+00:00,,0,sotiris1982/embedded_systems_pico_blaze,375661146,SystemVerilog,embedded_systems_pico_blaze,12,0,2021-06-10 18:11:31+00:00,[],
6714,https://github.com/jyhi/step-peripherals.git,2021-06-09 14:21:02+00:00,Step FPGA Development Board Peripheral Export Module.,0,jyhi/step-peripherals,375381765,SystemVerilog,step-peripherals,12,0,2021-08-07 11:52:45+00:00,[],
6715,https://github.com/Peegggy/cpen311-lab3.git,2021-07-09 19:09:04+00:00,,0,Peegggy/cpen311-lab3,384529207,SystemVerilog,cpen311-lab3,554,0,2021-07-09 19:11:55+00:00,[],
6716,https://github.com/EpsLeonid/Student-2022.git,2021-08-02 09:30:59+00:00,,1,EpsLeonid/Student-2022,391888716,SystemVerilog,Student-2022,24015,0,2022-08-29 07:31:33+00:00,[],
6717,https://github.com/spicker23/UART.git,2021-07-29 17:27:19+00:00,,0,spicker23/UART,390802219,SystemVerilog,UART,5,0,2021-09-07 13:11:05+00:00,[],
6718,https://github.com/kentiscool/processor.git,2021-08-11 06:37:39+00:00,,0,kentiscool/processor,394888237,SystemVerilog,processor,11,0,2021-08-12 02:52:25+00:00,[],
6719,https://github.com/ConsciousMachines/SAP.git,2021-07-12 04:21:19+00:00,my interpretations of SAP from Albert Paul Malvino's digital design textbook,0,ConsciousMachines/SAP,385123134,SystemVerilog,SAP,547,0,2024-04-02 22:36:05+00:00,[],
6720,https://github.com/GCET231/tutorial4-criando-projeto-quartus-prime.git,2021-04-22 17:57:12+00:00,Tutorial para criação de projetos no Quartus Prime Lite Editon.,0,GCET231/tutorial4-criando-projeto-quartus-prime,360636765,SystemVerilog,tutorial4-criando-projeto-quartus-prime,30,0,2021-04-25 12:26:25+00:00,"['quartus-prime', 'criar-um-projeto']",
6721,https://github.com/pabmars2/TFG-RISC-V-AVALON.git,2021-04-27 11:26:00+00:00,,0,pabmars2/TFG-RISC-V-AVALON,362086890,SystemVerilog,TFG-RISC-V-AVALON,281008,0,2021-06-02 15:17:46+00:00,[],
6722,https://github.com/Mengyan2000/ECE385_Labs.git,2021-04-13 16:27:25+00:00,This is all code of lab2 to lab7 from ECE385 at UIUC,0,Mengyan2000/ECE385_Labs,357619614,SystemVerilog,ECE385_Labs,863,0,2023-01-28 06:42:22+00:00,[],
6723,https://github.com/miura-katsuyoshi/counter_with_trigout.git,2021-04-11 01:01:07+00:00,Parameterized counter with trigger output in SystemVerilog,0,miura-katsuyoshi/counter_with_trigout,356735014,SystemVerilog,counter_with_trigout,22,0,2021-04-11 02:46:54+00:00,[],
6724,https://github.com/tinozzz/EECS_4612_Project_2_Group_4.git,2021-04-13 07:52:33+00:00,,0,tinozzz/EECS_4612_Project_2_Group_4,357468861,SystemVerilog,EECS_4612_Project_2_Group_4,9300,0,2021-04-14 00:52:42+00:00,[],
6725,https://github.com/kougioumis/MIPS-32bit.git,2021-04-26 10:01:41+00:00,,0,kougioumis/MIPS-32bit,361701503,SystemVerilog,MIPS-32bit,4020,0,2021-05-25 13:06:01+00:00,[],
6726,https://github.com/alainlou/synth.git,2021-04-05 01:23:59+00:00,"""Cool to be square wave"" - @JeriEllsworth",0,alainlou/synth,354684277,SystemVerilog,synth,40413,0,2021-08-20 16:12:07+00:00,[],
6727,https://github.com/17111748/18847_joebertli.git,2021-04-05 02:07:55+00:00,,0,17111748/18847_joebertli,354691365,SystemVerilog,18847_joebertli,1369,0,2021-05-13 15:34:36+00:00,[],
6728,https://github.com/mrschnabel/MazeRunner.git,2021-04-02 15:24:40+00:00,A robot that can follow reflective tape through an obstacle course.  Made using System Verilog.,0,mrschnabel/MazeRunner,354057890,SystemVerilog,MazeRunner,25,0,2021-04-02 15:27:13+00:00,[],
6729,https://github.com/GabrielMonteroSierra/8-bit-ALU.git,2021-05-30 02:23:34+00:00,This project was coded in Verilog/SystemVerilog on Fall 2020.,0,GabrielMonteroSierra/8-bit-ALU,372106580,SystemVerilog,8-bit-ALU,9,0,2021-05-30 03:10:42+00:00,[],
6730,https://github.com/62050219/intership.git,2021-05-20 16:52:48+00:00,,0,62050219/intership,369278387,SystemVerilog,intership,25,0,2021-05-20 17:28:24+00:00,[],
6731,https://github.com/nkaranam178/Cryptographic-Accelerator.git,2021-05-21 03:36:31+00:00,,0,nkaranam178/Cryptographic-Accelerator,369404244,SystemVerilog,Cryptographic-Accelerator,138,0,2021-05-21 03:37:36+00:00,[],
6732,https://github.com/deveshasnani/UVM_work.git,2021-06-04 08:48:33+00:00,uvm projects and lab sessions ,0,deveshasnani/UVM_work,373779011,SystemVerilog,UVM_work,35,0,2021-06-28 07:53:48+00:00,[],
6733,https://github.com/MEETMS7/tue.git,2021-05-16 09:23:32+00:00,,0,MEETMS7/tue,367835311,SystemVerilog,tue,70,0,2021-05-16 09:23:51+00:00,[],https://api.github.com/licenses/apache-2.0
6734,https://github.com/karthik-0398/arm_soc.git,2021-05-02 07:30:46+00:00,,0,karthik-0398/arm_soc,363592774,SystemVerilog,arm_soc,1928,0,2021-05-02 13:13:28+00:00,[],https://api.github.com/licenses/mit
6735,https://github.com/Vivek-Dave/UVM_TestBench_For_Magnitude_Comparator.git,2021-05-31 11:23:01+00:00,Complete UVM TestBench For Verification Of Magnitude Comparator,0,Vivek-Dave/UVM_TestBench_For_Magnitude_Comparator,372481326,SystemVerilog,UVM_TestBench_For_Magnitude_Comparator,86,0,2021-05-31 11:27:49+00:00,[],
6736,https://github.com/Vivek-Dave/UVM_TestBench_For_Frequency_Divider.git,2021-06-08 04:24:46+00:00,Complete UVM TestBench For Verification Of Frequency Divider ,0,Vivek-Dave/UVM_TestBench_For_Frequency_Divider,374879713,SystemVerilog,UVM_TestBench_For_Frequency_Divider,82,0,2021-06-08 04:31:12+00:00,[],
6737,https://github.com/yolannel/RTL-design-Modelsim.git,2021-05-26 08:46:48+00:00,,0,yolannel/RTL-design-Modelsim,370966573,SystemVerilog,RTL-design-Modelsim,8,0,2021-05-26 08:52:01+00:00,[],https://api.github.com/licenses/mit
6738,https://github.com/aurthurtang/round_robin_arbitor.git,2021-07-14 17:04:42+00:00,This is a simple illustration of round robin arbitration using single fixed priority.  ,0,aurthurtang/round_robin_arbitor,386015725,SystemVerilog,round_robin_arbitor,2,0,2021-07-14 17:12:56+00:00,[],
6739,https://github.com/aurthurtang/BreakTheCodeGame.git,2021-08-11 05:49:49+00:00,This is a game created using Nexys A7 FPGA board,0,aurthurtang/BreakTheCodeGame,394877276,SystemVerilog,BreakTheCodeGame,9,0,2021-08-18 05:45:33+00:00,[],
6740,https://github.com/eilims/8BitAlu.git,2021-06-09 17:50:54+00:00,,0,eilims/8BitAlu,375443879,SystemVerilog,8BitAlu,43,0,2021-06-09 17:53:36+00:00,[],
6741,https://github.com/Vivek-Dave/UVM_TestBench_For_Priority_Encoder.git,2021-06-12 03:52:45+00:00,Complete UVM TestBench For Verification Of Priority Encoder,0,Vivek-Dave/UVM_TestBench_For_Priority_Encoder,376196369,SystemVerilog,UVM_TestBench_For_Priority_Encoder,84,0,2021-06-12 03:57:31+00:00,[],
6742,https://github.com/komaljaved-lm/LM_APB_GPIO_IP.git,2021-06-17 05:03:41+00:00,,0,komaljaved-lm/LM_APB_GPIO_IP,377710499,SystemVerilog,LM_APB_GPIO_IP,420,0,2021-06-29 04:47:49+00:00,[],
6743,https://github.com/artbdev/fpga-embedded-design-verilog.git,2021-06-22 03:22:20+00:00,Verilog design principles for circuit design. ,0,artbdev/fpga-embedded-design-verilog,379129106,SystemVerilog,fpga-embedded-design-verilog,2,0,2021-06-22 03:45:09+00:00,[],
6744,https://github.com/Ting-Wei-Chen/dcs_final.git,2021-07-01 23:15:09+00:00,,0,Ting-Wei-Chen/dcs_final,382177719,SystemVerilog,dcs_final,610,0,2021-09-23 10:00:41+00:00,[],
6745,https://github.com/ignaciogodoy/test_elo212.git,2021-07-06 03:29:00+00:00,,1,ignaciogodoy/test_elo212,383328085,SystemVerilog,test_elo212,5,0,2021-08-03 03:33:15+00:00,[],
6746,https://github.com/usmanziak/UVM-Conversion-Project.git,2021-07-08 16:56:57+00:00,,0,usmanziak/UVM-Conversion-Project,384193278,SystemVerilog,UVM-Conversion-Project,57,0,2021-07-13 12:48:11+00:00,[],
6747,https://github.com/metzkorn/uvm_demo1.git,2021-07-21 21:13:39+00:00,Simple UVM for a cache.,1,metzkorn/uvm_demo1,388247254,SystemVerilog,uvm_demo1,8,0,2021-07-21 21:22:02+00:00,[],
6748,https://github.com/AAdvari/ARM-Microprogrammed-Multicycle-Processor.git,2021-07-26 16:14:33+00:00,Multicycle ARM processor using microprogrammed control unit,0,AAdvari/ARM-Microprogrammed-Multicycle-Processor,389695091,SystemVerilog,ARM-Microprogrammed-Multicycle-Processor,5,0,2021-07-26 16:23:33+00:00,[],
6749,https://github.com/zzhang681/ee297github.git,2021-08-03 04:26:45+00:00,111,0,zzhang681/ee297github,392188025,SystemVerilog,ee297github,273469,0,2021-12-02 23:09:52+00:00,[],
6750,https://github.com/Gehad-16/FP-Multiplier.git,2021-07-11 21:10:03+00:00,,0,Gehad-16/FP-Multiplier,385052674,SystemVerilog,FP-Multiplier,2105,0,2021-07-11 21:12:15+00:00,[],
6751,https://github.com/troyguo/verify_practice.git,2021-07-09 09:06:22+00:00,wechat public account verify_practice codebase,0,troyguo/verify_practice,384382091,SystemVerilog,verify_practice,8,0,2021-07-10 06:11:45+00:00,"['uvm', 'systemverilog', 'formal-verification', 'emulation']",https://api.github.com/licenses/apache-2.0
6752,https://github.com/Rian-Borah/SysVerilog-HarrisDDCA.git,2021-07-13 11:52:25+00:00,,0,Rian-Borah/SysVerilog-HarrisDDCA,385586370,SystemVerilog,SysVerilog-HarrisDDCA,10,0,2021-07-13 12:55:14+00:00,[],
6753,https://github.com/HarunaIppai/ECE_385_Lab7.git,2021-04-17 02:14:27+00:00,,0,HarunaIppai/ECE_385_Lab7,358764580,SystemVerilog,ECE_385_Lab7,16,0,2021-04-17 02:15:15+00:00,[],
6754,https://github.com/jehosuaa/practica2.git,2021-04-13 02:10:34+00:00,,0,jehosuaa/practica2,357396429,SystemVerilog,practica2,31113,0,2021-10-08 15:47:31+00:00,[],
6755,https://github.com/zceeudd/ELEC0036---Microprocessor-1P-.git,2021-04-13 17:34:50+00:00,,0,zceeudd/ELEC0036---Microprocessor-1P-,357638048,SystemVerilog,ELEC0036---Microprocessor-1P-,25,0,2021-04-13 20:43:07+00:00,[],
6756,https://github.com/zceeudd/ELEC0036---Microprocessor-GSH.git,2021-04-14 12:03:18+00:00,,0,zceeudd/ELEC0036---Microprocessor-GSH,357890308,SystemVerilog,ELEC0036---Microprocessor-GSH,27,0,2021-04-14 12:09:27+00:00,[],
6757,https://github.com/cchen82/EE478_LABS.git,2021-04-21 01:05:04+00:00,UB Course EE 478 Hardware Descriptive Language Lab assignments,0,cchen82/EE478_LABS,359993282,SystemVerilog,EE478_LABS,4804,0,2021-04-21 01:06:10+00:00,[],
6758,https://github.com/cjcordosi/417-MACC_Accelerator.git,2021-04-21 18:40:06+00:00,,0,cjcordosi/417-MACC_Accelerator,360271373,SystemVerilog,417-MACC_Accelerator,77,0,2021-04-21 18:40:56+00:00,[],
6759,https://github.com/allRisc/RISC-V.git,2021-05-07 00:45:30+00:00,,0,allRisc/RISC-V,365073823,SystemVerilog,RISC-V,1145,0,2021-10-18 16:52:42+00:00,[],https://api.github.com/licenses/gpl-3.0
6760,https://github.com/ahmeterdem9603/MEH173_project.git,2021-05-09 18:52:31+00:00,MEH173_project git repo.,0,ahmeterdem9603/MEH173_project,365825880,SystemVerilog,MEH173_project,2086,0,2021-05-26 10:28:55+00:00,[],
6761,https://github.com/zmh403/PULPino_src.git,2021-05-07 09:26:39+00:00,The source files are Clone from the https://github.com/pulp-platform/pulpino ,0,zmh403/PULPino_src,365181948,SystemVerilog,PULPino_src,357,0,2021-05-18 04:02:42+00:00,[],
6762,https://github.com/Shaoma-lyl/USTC_Lab.git,2021-05-02 12:35:20+00:00,,1,Shaoma-lyl/USTC_Lab,363647088,,USTC_Lab,62531,0,2021-08-08 08:52:33+00:00,[],
6763,https://github.com/SergeyIvanets/ChipExpo-2021.git,2021-04-05 14:53:32+00:00,FIFO examples for ChipExpo 2021,0,SergeyIvanets/ChipExpo-2021,354869800,SystemVerilog,ChipExpo-2021,4786,0,2022-01-22 08:32:00+00:00,[],
6764,https://github.com/kshitij-r/SCR1.git,2021-04-01 00:54:07+00:00,,0,kshitij-r/SCR1,353530833,SystemVerilog,SCR1,4865,0,2021-04-01 00:57:38+00:00,[],
6765,https://github.com/barzamin/ece551-final.git,2021-04-16 04:32:32+00:00,,0,barzamin/ece551-final,358475820,SystemVerilog,ece551-final,294,0,2022-12-01 23:47:41+00:00,[],
6766,https://github.com/RadioactiveScandium/Logic-Design.git,2021-05-18 14:16:28+00:00,Digital logic implementation and verification through Verilog/SV,1,RadioactiveScandium/Logic-Design,368556534,SystemVerilog,Logic-Design,12652,0,2022-07-11 20:06:07+00:00,[],
6767,https://github.com/danielpmarks/FPGATetris.git,2021-05-12 02:51:02+00:00,Tetris game programmed for Intel FPGA,0,danielpmarks/FPGATetris,366573777,SystemVerilog,FPGATetris,228,0,2021-05-12 03:22:25+00:00,[],
6768,https://github.com/kartiksamtani/demo-repo.git,2021-05-25 11:03:41+00:00,Learning github,0,kartiksamtani/demo-repo,370662365,SystemVerilog,demo-repo,1,0,2021-05-25 12:18:58+00:00,[],
6769,https://github.com/ryancj14/ecen323.git,2021-06-09 15:19:12+00:00,ECEn 323 Files,0,ryancj14/ecen323,375400896,SystemVerilog,ecen323,109394,0,2021-06-09 15:29:13+00:00,[],
6770,https://github.com/TaiTruong21/ECE111-FinalProject.git,2021-06-05 00:37:42+00:00,,1,TaiTruong21/ECE111-FinalProject,373989263,SystemVerilog,ECE111-FinalProject,7359,0,2021-06-12 18:54:08+00:00,[],
6771,https://github.com/Mohamed-Younis/Simple_Memory-UVM-Testbench.git,2021-05-13 13:39:29+00:00,,0,Mohamed-Younis/Simple_Memory-UVM-Testbench,367060446,SystemVerilog,Simple_Memory-UVM-Testbench,11,0,2021-05-31 18:15:10+00:00,[],
6772,https://github.com/m-hariszafar/UVM_with_adder.git,2021-07-16 07:02:16+00:00,,0,m-hariszafar/UVM_with_adder,386542392,SystemVerilog,UVM_with_adder,7,0,2021-07-16 07:17:37+00:00,[],
6773,https://github.com/Arti-121097/64-bit-ALU.git,2021-07-13 07:22:58+00:00,"In this project, the design of an ALU is done with the delay aspect in mind. The signed 64-bit ALU is designed using Verilog HDL and verification is performed using the Universal Verification Methodology (UVM).",0,Arti-121097/64-bit-ALU,385514712,SystemVerilog,64-bit-ALU,7015,0,2021-07-13 07:38:00+00:00,[],
6774,https://github.com/mkmuis/MAS_ALU.git,2021-07-05 09:15:54+00:00,,0,mkmuis/MAS_ALU,383081866,SystemVerilog,MAS_ALU,92,0,2021-07-28 05:02:29+00:00,[],
6775,https://github.com/Arsalan-M/CPE333.git,2021-06-29 02:39:47+00:00,"This repository includes all associated System Verilog code used in development of the 32-bit OTTER Architecture CPU. The OTTER CPU has 37 base instructions and 26 pseudo instructions, in line with RV32I standard.",0,Arsalan-M/CPE333,381218180,SystemVerilog,CPE333,322,0,2021-06-29 03:05:17+00:00,[],
6776,https://github.com/sltm-14/HDL.git,2021-08-12 15:40:16+00:00,,0,sltm-14/HDL,395367525,SystemVerilog,HDL,413,0,2021-08-12 17:43:11+00:00,[],
6777,https://github.com/LoialOtter/ICE40-Cheetah-FPGA.git,2021-06-16 04:37:30+00:00,Animatronics servo driver based around an ICE40 FPGA,0,LoialOtter/ICE40-Cheetah-FPGA,377371854,SystemVerilog,ICE40-Cheetah-FPGA,18,0,2021-06-19 07:15:47+00:00,[],https://api.github.com/licenses/apache-2.0
6778,https://github.com/CWerberger/pulp_gf_arith_ip.git,2021-07-30 06:16:50+00:00,GF(N) IP for Pulpissimo ,0,CWerberger/pulp_gf_arith_ip,390953752,SystemVerilog,pulp_gf_arith_ip,35,0,2021-11-05 11:53:38+00:00,[],
6779,https://github.com/merledu/ibex-collaboration.git,2021-04-10 11:38:28+00:00,This repo is created to present the design of ibex in such a way that MICT guys can put their peripherals with it.,0,merledu/ibex-collaboration,356563161,SystemVerilog,ibex-collaboration,320,0,2021-04-11 09:03:07+00:00,[],
6780,https://github.com/miura-katsuyoshi/onehot.git,2021-04-11 05:56:49+00:00,Parameterized one-hot code encoder in SystemVerilog,0,miura-katsuyoshi/onehot,356779765,SystemVerilog,onehot,45,0,2021-04-11 06:40:39+00:00,[],
6781,https://github.com/ThreeHoolagins/hsaFinalProject.git,2021-04-21 18:59:06+00:00,My High Speed Computer Architecture project in which we make a goldschmit divide unit,0,ThreeHoolagins/hsaFinalProject,360276394,SystemVerilog,hsaFinalProject,933,0,2021-05-01 01:37:27+00:00,[],
6782,https://github.com/shalinibare/OurProject2.git,2021-04-27 17:02:44+00:00,,0,shalinibare/OurProject2,362189247,SystemVerilog,OurProject2,3665,0,2021-04-27 17:03:11+00:00,[],https://api.github.com/licenses/mit
6783,https://github.com/hao310rui140326/ahblite_mem.git,2021-04-05 06:04:08+00:00,,1,hao310rui140326/ahblite_mem,354736514,SystemVerilog,ahblite_mem,391,0,2021-04-05 06:12:46+00:00,[],
6784,https://github.com/selengorgun/CS223_Lab_Assignments.git,2021-04-04 14:35:32+00:00,Solutions for Bilkent University Fall 2020 lab assignments ,0,selengorgun/CS223_Lab_Assignments,354566298,SystemVerilog,CS223_Lab_Assignments,5085,0,2021-04-04 15:03:27+00:00,[],
6785,https://github.com/Zongpc/Auto-SOM.git,2021-04-15 12:44:33+00:00,,0,Zongpc/Auto-SOM,358255986,SystemVerilog,Auto-SOM,298,0,2021-04-15 12:59:30+00:00,[],
6786,https://github.com/Dipto9999/Scrolling_Display_DE1-SoC.git,2021-04-17 06:28:13+00:00,Scrolling Display Implemented With Digital Design Concepts on De1-SoC,0,Dipto9999/Scrolling_Display_DE1-SoC,358802870,SystemVerilog,Scrolling_Display_DE1-SoC,3244,0,2023-05-13 23:19:16+00:00,"['systemverilog-hdl', 'de1-soc', 'fpga', 'modelsim', 'quartus-prime']",
6787,https://github.com/jdupak/PAP-RISC-V-CPU-VERILOG.git,2021-04-19 17:06:12+00:00,Simple RISC-V CPU with 5-stage pipeline created as semestral work at FEE CTU.,0,jdupak/PAP-RISC-V-CPU-VERILOG,359537119,SystemVerilog,PAP-RISC-V-CPU-VERILOG,198,0,2021-04-19 17:24:20+00:00,[],
6788,https://github.com/Vivek-Dave/UVM_TestBench_For_Multiplier.git,2021-04-17 04:48:58+00:00,Complete UVM TB For Verification Of Multiplier ,0,Vivek-Dave/UVM_TestBench_For_Multiplier,358787225,SystemVerilog,UVM_TestBench_For_Multiplier,81,0,2021-04-17 04:55:56+00:00,[],
6789,https://github.com/IacPc/AES_Sbox_based_Stream_Cipher.git,2021-05-25 10:17:37+00:00,A simple stream cipher based on the AES S-box.,0,IacPc/AES_Sbox_based_Stream_Cipher,370650587,SystemVerilog,AES_Sbox_based_Stream_Cipher,9327,0,2021-06-20 15:28:47+00:00,[],
6791,https://github.com/Adnan-Asif/Risc-V-Pipelined-Processor-.git,2021-04-30 11:35:11+00:00,,0,Adnan-Asif/Risc-V-Pipelined-Processor-,363121027,SystemVerilog,Risc-V-Pipelined-Processor-,1036,0,2021-06-03 11:07:14+00:00,[],
6792,https://github.com/ahmedmed/TestBench-Sys-Verilg.git,2021-04-30 13:16:48+00:00,,0,ahmedmed/TestBench-Sys-Verilg,363146299,SystemVerilog,TestBench-Sys-Verilg,6,0,2021-04-30 13:17:08+00:00,[],
6793,https://github.com/rushi0005/8to10-encoder-verifiction.git,2021-05-06 22:33:40+00:00,Testbench Architecture of 8 to 10 bit encoder,0,rushi0005/8to10-encoder-verifiction,365053197,SystemVerilog,8to10-encoder-verifiction,42878,0,2021-05-18 01:13:37+00:00,[],
6794,https://github.com/notwilliamng/RISC_V.git,2021-05-07 02:47:58+00:00,Restricted Instruction Set Computer (V5) OTTER architecture for Xilinx Basys3 Board. Developed using Xilinx Vivado Suite,0,notwilliamng/RISC_V,365095910,SystemVerilog,RISC_V,15,0,2022-09-05 16:38:21+00:00,"['basys3-fpga', 'system-verilog', 'xilinx-vivado']",
6795,https://github.com/Radiophantom/filters.git,2021-05-12 07:09:49+00:00,,0,Radiophantom/filters,366625041,SystemVerilog,filters,6,0,2021-05-13 14:50:08+00:00,[],
6796,https://github.com/xapicella/mrs-puffs-boarding-school.git,2021-05-11 18:52:51+00:00,Repo to hold the code for the EE 532 digital board project--Spring 2021.,0,xapicella/mrs-puffs-boarding-school,366484049,SystemVerilog,mrs-puffs-boarding-school,31,0,2021-05-28 18:26:56+00:00,[],
6797,https://github.com/zceeudd/ELEC0036---Microprocessor-TB.git,2021-04-14 12:10:08+00:00,,0,zceeudd/ELEC0036---Microprocessor-TB,357892285,SystemVerilog,ELEC0036---Microprocessor-TB,26,0,2021-04-14 12:11:37+00:00,[],
6798,https://github.com/lisboavini/single_cycle_processor_fpga.git,2021-04-14 18:52:19+00:00,Development of a single cycle processor using FPGA and own mini assembler.,0,lisboavini/single_cycle_processor_fpga,358010653,SystemVerilog,single_cycle_processor_fpga,9211,0,2021-05-25 20:59:55+00:00,[],
6799,https://github.com/miura-katsuyoshi/mealy-machine-vs-moore-machine.git,2021-05-02 09:10:47+00:00,This document describes difference between mealy machine and moor machine,0,miura-katsuyoshi/mealy-machine-vs-moore-machine,363609829,SystemVerilog,mealy-machine-vs-moore-machine,506,0,2021-06-20 08:36:38+00:00,[],
6800,https://github.com/hugo655/DCT.git,2021-05-09 21:41:06+00:00,,0,hugo655/DCT,365853412,SystemVerilog,DCT,4,0,2021-05-22 20:28:34+00:00,[],
6801,https://github.com/bogdanovrv/YCP.git,2021-05-18 16:22:13+00:00,,0,bogdanovrv/YCP,368596210,SystemVerilog,YCP,8,0,2021-05-18 16:28:33+00:00,[],
6802,https://github.com/jiru1997/PE-Processing-Element-implementing-1-D-row-Convolution-.git,2021-06-21 01:01:15+00:00,PE (Processing Element implementing 1-D row Convolution):,0,jiru1997/PE-Processing-Element-implementing-1-D-row-Convolution-,378770019,SystemVerilog,PE-Processing-Element-implementing-1-D-row-Convolution-,9,0,2021-06-21 01:04:48+00:00,[],
6803,https://github.com/lcbeams/DE10-Lite_VGA.git,2021-05-26 01:39:19+00:00,SystemVerilog design to use the VGA output on the DE10-Lite FPGA Development Board,0,lcbeams/DE10-Lite_VGA,370874309,SystemVerilog,DE10-Lite_VGA,10,0,2021-05-26 02:13:24+00:00,[],https://api.github.com/licenses/mit
6804,https://github.com/atahanakar/Simple-RISC-Machine.git,2021-05-31 06:15:42+00:00,,0,atahanakar/Simple-RISC-Machine,372401746,SystemVerilog,Simple-RISC-Machine,30935,0,2021-07-19 05:47:07+00:00,[],
6805,https://github.com/weiminruan/multi_core_cpu.git,2021-06-03 17:45:40+00:00,cpu design,0,weiminruan/multi_core_cpu,373594358,SystemVerilog,multi_core_cpu,97,0,2021-06-03 17:55:16+00:00,[],
6806,https://github.com/DilankaLaknath/system-verilog-learning.git,2021-06-13 15:51:02+00:00,,0,DilankaLaknath/system-verilog-learning,376582212,SystemVerilog,system-verilog-learning,7,0,2021-06-26 11:08:41+00:00,[],
6807,https://github.com/Vivek-Dave/UVM_TestBench_For_T_Flip_Flop.git,2021-06-16 12:54:47+00:00,Complete UVM TestBench For Verification Of T Flip Flop,0,Vivek-Dave/UVM_TestBench_For_T_Flip_Flop,377496022,SystemVerilog,UVM_TestBench_For_T_Flip_Flop,76,0,2021-06-16 15:52:51+00:00,[],
6808,https://github.com/benjascott/computer_architecture.git,2021-04-23 16:09:12+00:00,,0,benjascott/computer_architecture,360939358,SystemVerilog,computer_architecture,383,0,2021-04-23 18:13:50+00:00,[],
6809,https://github.com/davidh777/signal_processing.git,2021-04-27 01:01:42+00:00,,0,davidh777/signal_processing,361937818,SystemVerilog,signal_processing,28,0,2022-02-08 18:06:57+00:00,[],
6810,https://github.com/mfatihkeskin/Single_Cycle_Processor.git,2021-05-29 10:48:21+00:00,,0,mfatihkeskin/Single_Cycle_Processor,371947454,SystemVerilog,Single_Cycle_Processor,6,0,2022-01-19 00:31:44+00:00,[],
6811,https://github.com/EmanMahm0ud/Floating-Point-Multiplication.git,2021-05-29 22:45:36+00:00,,0,EmanMahm0ud/Floating-Point-Multiplication,372082145,SystemVerilog,Floating-Point-Multiplication,2,0,2021-05-29 22:50:17+00:00,[],
6812,https://github.com/YotStyle/generic_lib.git,2021-08-11 13:28:25+00:00,,0,YotStyle/generic_lib,394998769,SystemVerilog,generic_lib,1,0,2021-08-11 13:46:15+00:00,[],
6813,https://github.com/belmontcomputing/counter.git,2021-07-19 13:59:28+00:00,The counter example,0,belmontcomputing/counter,387483461,SystemVerilog,counter,3,0,2021-07-21 02:11:38+00:00,[],
6814,https://github.com/flaviens/pickled_pulpissimo.git,2021-07-19 13:50:30+00:00,,0,flaviens/pickled_pulpissimo,387480749,SystemVerilog,pickled_pulpissimo,1019,0,2021-07-22 08:09:14+00:00,[],
6815,https://github.com/avilaJorge/BitcoinHasher.git,2021-07-29 05:26:08+00:00,Bitcoin hashing fpga design in SystemVerilog.,0,avilaJorge/BitcoinHasher,390610286,SystemVerilog,BitcoinHasher,38,0,2021-07-29 05:30:49+00:00,[],
6816,https://github.com/erayibr/axis_fifo.git,2021-08-07 22:19:29+00:00,,0,erayibr/axis_fifo,393804558,SystemVerilog,axis_fifo,7,0,2021-08-07 22:24:59+00:00,[],
6817,https://github.com/liangcha1980/Learning.git,2021-07-07 01:29:44+00:00,,0,liangcha1980/Learning,383640618,SystemVerilog,Learning,2665,0,2021-12-31 08:49:20+00:00,[],
6818,https://github.com/MaksimRatnikov/PipelinedHashCodeGenerator.git,2021-05-04 01:42:41+00:00,Research project,0,MaksimRatnikov/PipelinedHashCodeGenerator,364110052,SystemVerilog,PipelinedHashCodeGenerator,31,0,2021-05-08 00:32:12+00:00,[],https://api.github.com/licenses/gpl-3.0
6819,https://github.com/ybu5/fourPhaseHandshake.git,2021-04-29 19:10:28+00:00,"A model that simulates the four phase hand shake, and its test bench ",0,ybu5/fourPhaseHandshake,362921221,SystemVerilog,fourPhaseHandshake,4,0,2021-04-29 19:13:06+00:00,[],
6820,https://github.com/yolanda10202/FPGAppy_Bird.git,2021-06-14 02:52:37+00:00,,0,yolanda10202/FPGAppy_Bird,376687084,SystemVerilog,FPGAppy_Bird,9,0,2021-06-15 06:49:42+00:00,[],
6821,https://github.com/mfkiwl/swerv-el2-formal.git,2021-07-11 19:05:09+00:00,Adding RISC-V Formal Interface to Swerv-el2 processor,0,mfkiwl/swerv-el2-formal,385031630,SystemVerilog,swerv-el2-formal,125,0,2021-10-03 05:06:41+00:00,[],
6822,https://github.com/aurthurtang/Pulse_Generator.git,2021-07-11 05:30:35+00:00,Generated a pulse based on given pulse width and in any data width.  ,0,aurthurtang/Pulse_Generator,384867654,SystemVerilog,Pulse_Generator,1,0,2021-07-11 05:33:01+00:00,[],
6823,https://github.com/orb1t-ua/driver.git,2021-07-08 04:41:19+00:00,FPGA based driver for power electronics applications,0,orb1t-ua/driver,384002552,,driver,800,0,2021-08-01 16:39:26+00:00,[],
6824,https://github.com/chengyih001/FPGA_Image_Processing.git,2021-07-04 13:17:01+00:00,,1,chengyih001/FPGA_Image_Processing,382856385,SystemVerilog,FPGA_Image_Processing,8076,0,2021-07-12 12:31:29+00:00,[],
6825,https://github.com/lwflwf1/pecell.git,2021-07-04 17:12:46+00:00,,0,lwflwf1/pecell,382907573,SystemVerilog,pecell,1157,0,2021-07-04 17:13:40+00:00,[],
6826,https://github.com/HEADS-UNCC/SYN_SRAM_UVM.git,2021-06-25 17:17:08+00:00,,0,HEADS-UNCC/SYN_SRAM_UVM,380307977,SystemVerilog,SYN_SRAM_UVM,18,0,2021-06-25 17:27:58+00:00,[],
6827,https://github.com/SamuelOrtizV/Lab-Sistemas-Digitales-2021-1.git,2021-07-02 20:13:40+00:00,,0,SamuelOrtizV/Lab-Sistemas-Digitales-2021-1,382453756,SystemVerilog,Lab-Sistemas-Digitales-2021-1,3,0,2021-07-02 20:26:47+00:00,[],
6828,https://github.com/mahmoudabdelhadii/lab5.git,2021-03-31 02:30:51+00:00,,0,mahmoudabdelhadii/lab5,353201047,SystemVerilog,lab5,29,0,2022-02-24 00:55:33+00:00,[],
6829,https://github.com/Vivek-Dave/UVM_TestBench_For_And_Gate.git,2021-06-17 15:50:00+00:00,Simple and Complete UVM TestBench For Verification Of And Gate ,0,Vivek-Dave/UVM_TestBench_For_And_Gate,377884317,SystemVerilog,UVM_TestBench_For_And_Gate,79,0,2021-06-18 04:15:29+00:00,[],
6830,https://github.com/palexander23/as-embedded-processor.git,2021-07-05 09:45:56+00:00,An Application Specific Embedded Processor designed to perform Affine Transformations using as little energy and FPGA resources as possible.,0,palexander23/as-embedded-processor,383090098,SystemVerilog,as-embedded-processor,5592,0,2021-07-19 18:14:38+00:00,[],
6831,https://github.com/f14981327/hdmi_vip.git,2021-06-22 02:23:54+00:00,,0,f14981327/hdmi_vip,379117793,SystemVerilog,hdmi_vip,16380,0,2021-06-22 05:06:46+00:00,[],
6832,https://github.com/mr-gaurav/Sequence-Counter.git,2021-07-07 12:41:02+00:00,Implement sequence counter 2->1->2->3->2->4->2->5->2,0,mr-gaurav/Sequence-Counter,383794508,SystemVerilog,Sequence-Counter,1,0,2021-07-07 12:41:11+00:00,[],
6833,https://github.com/nimaomidsajedi/SystemVerilog.git,2021-07-21 09:52:58+00:00,Some programming ideas in SystemVerilog,0,nimaomidsajedi/SystemVerilog,388070926,SystemVerilog,SystemVerilog,2,0,2021-07-21 11:35:57+00:00,[],
6834,https://github.com/ss-reposit/RISCV4Stage.git,2021-07-13 20:54:22+00:00,2 difference processors for Riscv,0,ss-reposit/RISCV4Stage,385732759,SystemVerilog,RISCV4Stage,23,0,2021-07-13 21:00:50+00:00,[],
6835,https://github.com/spicker23/encoder.git,2021-08-04 10:15:20+00:00,,0,spicker23/encoder,392642141,SystemVerilog,encoder,4,0,2021-08-21 07:19:22+00:00,[],
6836,https://github.com/Redbeard358/SV-Verification-Testbench-Development-for-Synchronous-Read-Write-Memory.git,2021-08-03 18:30:16+00:00,This repository contains SV Testbench Environment developed for a Synchronous Write-Read Memory ,0,Redbeard358/SV-Verification-Testbench-Development-for-Synchronous-Read-Write-Memory,392417025,SystemVerilog,SV-Verification-Testbench-Development-for-Synchronous-Read-Write-Memory,12,0,2021-08-10 18:13:15+00:00,[],
6837,https://github.com/paller/risc-v_rv32i_fpga.git,2021-06-20 19:20:55+00:00,A simple project to get started with SystemVerilog.,0,paller/risc-v_rv32i_fpga,378723451,SystemVerilog,risc-v_rv32i_fpga,21,0,2021-06-25 19:19:18+00:00,[],
6838,https://github.com/jeron7/loac-codes.git,2021-07-01 16:18:47+00:00,Repositorio contendo códigos utilizados na cadeira de LOAC,0,jeron7/loac-codes,382091794,SystemVerilog,loac-codes,12,0,2021-07-04 00:04:43+00:00,[],
6839,https://github.com/prendConnor/sha256fpga.git,2021-07-21 01:48:09+00:00,,0,prendConnor/sha256fpga,387961496,SystemVerilog,sha256fpga,3557,0,2021-07-21 01:49:47+00:00,[],
6840,https://github.com/TheOneKevin/coldbrew-soc.git,2021-07-13 05:11:59+00:00,,0,TheOneKevin/coldbrew-soc,385483709,SystemVerilog,coldbrew-soc,6005,0,2022-01-02 18:47:02+00:00,[],https://api.github.com/licenses/apache-2.0
6841,https://github.com/kraysang/ECE342-Computer-Hardware.git,2021-04-28 13:49:41+00:00,,0,kraysang/ECE342-Computer-Hardware,362484272,SystemVerilog,ECE342-Computer-Hardware,7493,0,2021-04-28 13:59:03+00:00,[],
6842,https://github.com/MasterJubei/RISC-V-Inspired-Pipeline.git,2021-05-18 22:06:24+00:00,,0,MasterJubei/RISC-V-Inspired-Pipeline,368677685,SystemVerilog,RISC-V-Inspired-Pipeline,723,0,2021-07-05 20:53:49+00:00,[],
6843,https://github.com/ikzer9x/uvm-GoKorea.git,2021-05-21 18:03:31+00:00,,0,ikzer9x/uvm-GoKorea,369616561,SystemVerilog,uvm-GoKorea,1098,0,2021-05-21 18:26:22+00:00,[],
6844,https://github.com/George-Dong/icslab3.git,2021-05-17 13:56:08+00:00,,0,George-Dong/icslab3,368204682,SystemVerilog,icslab3,179,0,2021-05-17 14:50:07+00:00,[],
6845,https://github.com/Shahidan101/8bitFullAdder_with7SD.git,2021-05-29 07:35:59+00:00,Verilog implementation of an 8-bit Ripple Carry Adder integrated with 3 units of 7-segment display,0,Shahidan101/8bitFullAdder_with7SD,371910773,SystemVerilog,8bitFullAdder_with7SD,5,0,2021-05-31 07:20:33+00:00,[],
6846,https://github.com/acoimbramendes/superscalar_risc-v.git,2021-05-28 03:16:25+00:00,,1,acoimbramendes/superscalar_risc-v,371566715,SystemVerilog,superscalar_risc-v,101,0,2021-05-28 03:19:43+00:00,[],
6847,https://github.com/AdamMakinSoftware/picoMIPS.git,2021-04-07 13:21:08+00:00,,0,AdamMakinSoftware/picoMIPS,355553036,SystemVerilog,picoMIPS,271,0,2021-04-07 13:49:34+00:00,[],
6848,https://github.com/groutlloyd/OldLaggyRiscVfromHCMUT.git,2021-05-10 12:03:31+00:00,"Just an old ""hag"" of RISC-V piece, made from an assigment of Computer Architecture class from somewhere in Earth...",0,groutlloyd/OldLaggyRiscVfromHCMUT,366028237,SystemVerilog,OldLaggyRiscVfromHCMUT,29,0,2021-07-23 11:15:15+00:00,[],
6849,https://github.com/desirable98/Computer-and-Intelligent-Processor-Architecture.git,2021-05-03 06:59:54+00:00,计算机和智能处理器架构课程作业,0,desirable98/Computer-and-Intelligent-Processor-Architecture,363843714,SystemVerilog,Computer-and-Intelligent-Processor-Architecture,2672,0,2023-02-04 08:40:29+00:00,[],
6850,https://github.com/Moorvan/multiport-memory.git,2021-05-08 02:12:32+00:00,multiport memory implemented by Chisel,0,Moorvan/multiport-memory,365398055,SystemVerilog,multiport-memory,446,0,2021-05-20 07:22:12+00:00,[],https://api.github.com/licenses/unlicense
6851,https://github.com/standanley/fixture_demo_kiwi.git,2021-05-07 18:40:48+00:00,,1,standanley/fixture_demo_kiwi,365323766,SystemVerilog,fixture_demo_kiwi,5881,0,2021-09-02 14:38:09+00:00,[],
6852,https://github.com/Sanya-123/Lib_myOFDM.git,2021-05-10 07:48:33+00:00,OFDM FPGA,0,Sanya-123/Lib_myOFDM,365960647,SystemVerilog,Lib_myOFDM,229,0,2021-05-10 07:49:54+00:00,[],
6853,https://github.com/tzahiperetz/labPoolGame.git,2021-04-05 05:04:29+00:00,SV pool game ,0,tzahiperetz/labPoolGame,354724380,SystemVerilog,labPoolGame,17611,0,2021-04-05 05:11:38+00:00,[],
6854,https://github.com/yagizyasar/Single-Cycle-MIPS-Processor.git,2021-04-23 11:03:23+00:00,CS 223 Course Project,0,yagizyasar/Single-Cycle-MIPS-Processor,360855277,SystemVerilog,Single-Cycle-MIPS-Processor,1316,0,2021-04-23 11:03:30+00:00,[],
6855,https://github.com/standanley/fixture_demo_caddy.git,2021-04-21 19:20:43+00:00,Files for the fixture demo on caddy,0,standanley/fixture_demo_caddy,360281766,SystemVerilog,fixture_demo_caddy,4,0,2021-04-21 19:48:08+00:00,[],
6856,https://github.com/demyanenko-d/EvoHD_Lite.git,2021-04-11 18:40:50+00:00,,0,demyanenko-d/EvoHD_Lite,356950234,SystemVerilog,EvoHD_Lite,10746,0,2023-03-30 14:20:28+00:00,[],
6857,https://github.com/pbeltram/Ultra96.git,2021-04-27 19:37:43+00:00,Ultra96 developement.,0,pbeltram/Ultra96,362230199,SystemVerilog,Ultra96,12988,0,2023-08-17 10:13:21+00:00,[],https://api.github.com/licenses/gpl-3.0
6858,https://github.com/pocket7878/minicpu.git,2021-05-04 10:31:40+00:00,学習のためにDE0-CV上に本をよみながら小さなCPUをつくっていく,0,pocket7878/minicpu,364219779,SystemVerilog,minicpu,45,0,2021-05-09 11:11:11+00:00,[],
6859,https://github.com/GCET231/tut4-fpga-flow.git,2021-04-26 14:50:18+00:00,Fluxo de Projeto FPGA na Ferramenta Intel Quartus Prime,0,GCET231/tut4-fpga-flow,361787788,SystemVerilog,tut4-fpga-flow,24579,0,2021-09-24 18:56:59+00:00,[],
6860,https://github.com/1190201923/HIT--lift.git,2021-05-20 09:08:49+00:00,,0,1190201923/HIT--lift,369147690,SystemVerilog,HIT--lift,2411,0,2021-05-20 09:15:18+00:00,[],
6861,https://github.com/munevveru/basys3-calculator.git,2021-05-20 22:14:03+00:00,,0,munevveru/basys3-calculator,369350725,SystemVerilog,basys3-calculator,12,0,2021-05-20 22:30:39+00:00,[],
6862,https://github.com/salvarez97/Working_directory.git,2021-05-21 03:47:55+00:00,,0,salvarez97/Working_directory,369406267,SystemVerilog,Working_directory,126,0,2021-05-21 03:54:51+00:00,[],
6863,https://github.com/Sreehari-BGK/Digital_Stopwatch.git,2021-05-20 11:36:39+00:00,Implementing Digital Stopwatch using FPGA.,0,Sreehari-BGK/Digital_Stopwatch,369186711,SystemVerilog,Digital_Stopwatch,1,0,2021-05-20 11:38:07+00:00,[],
6864,https://github.com/shilei-massclouds/xsoc.git,2021-05-25 02:23:15+00:00,,0,shilei-massclouds/xsoc,370540003,SystemVerilog,xsoc,164,0,2023-04-25 01:57:55+00:00,[],https://api.github.com/licenses/gpl-2.0
6865,https://github.com/cterrill26/cs259_binary_neuralnet_accelerator.git,2021-06-02 07:07:58+00:00,,0,cterrill26/cs259_binary_neuralnet_accelerator,373073298,SystemVerilog,cs259_binary_neuralnet_accelerator,87,0,2021-07-14 04:25:15+00:00,[],
6866,https://github.com/Vivek-Dave/UVM_TestBench_For_Adder_Comparator.git,2021-05-31 11:10:58+00:00,Complete UVM TestBench For Verification Of Adder_Comparator,0,Vivek-Dave/UVM_TestBench_For_Adder_Comparator,372478197,SystemVerilog,UVM_TestBench_For_Adder_Comparator,81,0,2021-05-31 11:19:00+00:00,[],
6867,https://github.com/cabajian/median-filter.git,2021-05-29 23:56:02+00:00,,0,cabajian/median-filter,372089866,SystemVerilog,median-filter,860,0,2021-05-30 00:02:37+00:00,[],
6868,https://github.com/Shahidan101/sign-language-translator-soc.git,2021-06-16 01:08:22+00:00,Hardware description of an American Sign Language (ASL) Translator System-On-Chip using System Verilog,0,Shahidan101/sign-language-translator-soc,377333365,SystemVerilog,sign-language-translator-soc,63,0,2021-09-07 12:15:40+00:00,[],
6869,https://github.com/mfkiwl/NekoNi.git,2021-06-16 14:14:14+00:00,Second version of the NekoIchi SoC,0,mfkiwl/NekoNi,377519917,,NekoNi,0,0,2021-06-16 14:14:16+00:00,[],
6870,https://github.com/divyanshu0x16/Integer-Arithmetic-Algorithms-in-Verilog.git,2021-07-04 19:34:56+00:00,"Non-Restoring (Division and Square Root), Resotring (Division) and Booths Algorithm (Multiplication) written in System Verilog ",0,divyanshu0x16/Integer-Arithmetic-Algorithms-in-Verilog,382933928,SystemVerilog,Integer-Arithmetic-Algorithms-in-Verilog,3,0,2021-07-04 19:36:21+00:00,[],
6871,https://github.com/ybu5/digital_safe.git,2021-04-29 19:00:28+00:00,User needs to input the correct sequences with a joystick and the correct PIN code to unlock the the safe ,0,ybu5/digital_safe,362918788,SystemVerilog,digital_safe,13,0,2021-04-29 19:06:13+00:00,[],
6872,https://github.com/Vivek-Dave/UVM_TestBench_For_Up_Down_Counter.git,2021-04-18 07:45:14+00:00,Complete UVM TB For Verification Of Up_Down_Counter,0,Vivek-Dave/UVM_TestBench_For_Up_Down_Counter,359078137,SystemVerilog,UVM_TestBench_For_Up_Down_Counter,472,0,2021-04-18 07:51:16+00:00,[],
6873,https://github.com/aditi1prakash/SHA256.git,2021-05-10 20:31:03+00:00,,0,aditi1prakash/SHA256,366168261,SystemVerilog,SHA256,345,0,2022-05-17 09:42:40+00:00,[],
6874,https://github.com/xuehao-su/I2CUVM-.git,2021-05-18 02:35:31+00:00,,0,xuehao-su/I2CUVM-,368379350,SystemVerilog,I2CUVM-,64,0,2021-05-19 01:58:09+00:00,[],
6875,https://github.com/OikawaLab/NexysVideo_UDP2HDMI.git,2021-05-13 07:19:05+00:00,,0,OikawaLab/NexysVideo_UDP2HDMI,366967296,SystemVerilog,NexysVideo_UDP2HDMI,781,0,2021-05-13 07:19:58+00:00,[],
6876,https://github.com/Vivek-Dave/UVM_TEstBench_For_PIPO_Register.git,2021-06-03 02:59:05+00:00,Complete UVM TestBench For Verification Of PIPO (P-in P-out) Register,0,Vivek-Dave/UVM_TEstBench_For_PIPO_Register,373364073,SystemVerilog,UVM_TEstBench_For_PIPO_Register,84,0,2021-06-03 03:03:04+00:00,[],
6877,https://github.com/kentiscool/CSE140L-Lab3.git,2021-05-25 02:41:30+00:00,,0,kentiscool/CSE140L-Lab3,370543573,SystemVerilog,CSE140L-Lab3,96,0,2021-05-27 16:53:09+00:00,[],
6878,https://github.com/Vectis99/ece272-digital-logic.git,2021-05-25 22:35:55+00:00,Coursework for ECE 272: Digital Logic Design at Oregon State University.,0,Vectis99/ece272-digital-logic,370844310,SystemVerilog,ece272-digital-logic,87,0,2021-05-25 22:36:20+00:00,[],
6879,https://github.com/vrstanchev/Verilog-Projects.git,2021-06-12 04:29:25+00:00,GNU SystemVerilog Projects,0,vrstanchev/Verilog-Projects,376201519,SystemVerilog,Verilog-Projects,15,0,2021-06-12 04:36:41+00:00,[],https://api.github.com/licenses/gpl-3.0
6880,https://github.com/RecepSaid/SystemVerilog-Examples.git,2021-04-27 11:13:48+00:00,This repo contains SystemVerilog codes which is written for the ELM235/Logic Circuits and Design course.,0,RecepSaid/SystemVerilog-Examples,362083735,SystemVerilog,SystemVerilog-Examples,12,0,2022-03-13 21:50:06+00:00,[],
6881,https://github.com/ian7aylor/SystemVerilog.git,2021-04-28 03:16:01+00:00,,0,ian7aylor/SystemVerilog,362323180,SystemVerilog,SystemVerilog,5,0,2021-05-18 06:33:41+00:00,[],
6882,https://github.com/Danil1997Dev/VRLgit.git,2021-04-19 07:48:43+00:00,,0,Danil1997Dev/VRLgit,359373195,SystemVerilog,VRLgit,25,0,2021-04-20 15:09:40+00:00,[],
6883,https://github.com/tnguyen-tx/arm_core.git,2021-04-18 21:25:15+00:00,,0,tnguyen-tx/arm_core,359255935,SystemVerilog,arm_core,215,0,2021-04-18 21:25:49+00:00,[],
6884,https://github.com/berkstar/Checksum.git,2021-05-25 20:56:07+00:00,,0,berkstar/Checksum,370825551,SystemVerilog,Checksum,357,0,2021-05-25 20:57:47+00:00,[],
6885,https://github.com/yichao-yuan-99/Ria.git,2021-05-26 12:58:29+00:00,,0,yichao-yuan-99/Ria,371034656,SystemVerilog,Ria,16,0,2021-05-26 12:58:42+00:00,[],
6886,https://github.com/a4ansuman/codes.git,2021-04-23 12:18:44+00:00,,0,a4ansuman/codes,360874161,SystemVerilog,codes,13,0,2021-04-28 06:46:18+00:00,[],
6887,https://github.com/emilijav-97/Verilog.git,2021-04-21 13:42:30+00:00,Exercises in Verilog & SystemVerilog,0,emilijav-97/Verilog,360185382,SystemVerilog,Verilog,1196,0,2021-04-26 10:37:39+00:00,[],
6888,https://github.com/jehosuaa/practica1.git,2021-03-30 20:03:50+00:00,,0,jehosuaa/practica1,353127092,SystemVerilog,practica1,14,0,2023-06-09 03:55:42+00:00,[],
6889,https://github.com/junote/myHDL.git,2021-04-04 14:00:22+00:00,myHDL,0,junote/myHDL,354558071,SystemVerilog,myHDL,1165,0,2022-03-08 09:42:56+00:00,[],
6891,https://github.com/Woooooow-Pro/MIPS.git,2021-04-15 00:37:55+00:00,The computer architecture course Project,0,Woooooow-Pro/MIPS,358080577,SystemVerilog,MIPS,7182,0,2021-06-28 05:50:05+00:00,[],
6892,https://github.com/Grabulosaure/NES3D_MiSTer.git,2021-06-20 02:58:44+00:00,,0,Grabulosaure/NES3D_MiSTer,378545921,SystemVerilog,NES3D_MiSTer,76329,0,2021-06-23 22:54:13+00:00,[],
6893,https://github.com/HEADS-UNCC/Syn_FIFO_UVM.git,2021-06-25 16:31:36+00:00,,0,HEADS-UNCC/Syn_FIFO_UVM,380296754,SystemVerilog,Syn_FIFO_UVM,12,0,2021-06-25 17:46:45+00:00,[],
6894,https://github.com/kura197/RISCV_single_cycle_processor.git,2021-07-19 14:45:33+00:00,RISC-V rv32i single-cycle processor,2,kura197/RISCV_single_cycle_processor,387498284,SystemVerilog,RISCV_single_cycle_processor,30,0,2021-08-02 12:38:45+00:00,[],
6895,https://github.com/kpavan24/32-bit-MIPS.git,2021-07-20 08:52:32+00:00,,0,kpavan24/32-bit-MIPS,387730881,SystemVerilog,32-bit-MIPS,4,0,2021-07-20 08:53:39+00:00,[],
6896,https://github.com/hughy086/prj.git,2021-07-07 10:32:47+00:00,,0,hughy086/prj,383760741,SystemVerilog,prj,33204,0,2021-07-07 11:12:38+00:00,[],
6897,https://github.com/chien172431/riscv32.git,2021-07-07 10:52:52+00:00,,0,chien172431/riscv32,383765918,SystemVerilog,riscv32,11,0,2021-08-31 15:22:53+00:00,[],
6898,https://github.com/7FM/verilator_bug_showcase.git,2021-06-30 19:35:04+00:00,The code is primarly from: https://github.com/openhwgroup/cva6 and its submodules,0,7FM/verilator_bug_showcase,381813602,SystemVerilog,verilator_bug_showcase,41,0,2023-01-28 08:00:23+00:00,[],
6899,https://github.com/alephium/fpga-miner.git,2021-07-26 06:54:38+00:00,This is not under development anymore,0,alephium/fpga-miner,389537534,SystemVerilog,fpga-miner,499,0,2022-05-02 07:39:21+00:00,[],https://api.github.com/licenses/lgpl-3.0
6900,https://github.com/strauch-co/va_uvm_basics.git,2021-07-12 21:25:16+00:00,,0,strauch-co/va_uvm_basics,385387312,SystemVerilog,va_uvm_basics,13,0,2021-07-13 21:01:58+00:00,[],
6901,https://github.com/ZAIN-ALI-02/riscv-single-cycle.git,2021-04-04 17:26:31+00:00,,0,ZAIN-ALI-02/riscv-single-cycle,354604994,SystemVerilog,riscv-single-cycle,612,0,2024-01-03 10:40:32+00:00,[],
6902,https://github.com/andrewjrae/optmult.git,2021-04-29 19:44:49+00:00,Efficient softlogic multiplier based on Booth multiplication for Xilinx FPGAs,0,andrewjrae/optmult,362929403,SystemVerilog,optmult,100,0,2021-05-06 02:18:01+00:00,[],
6903,https://github.com/ybu5/Vending_Machine.git,2021-04-29 19:29:18+00:00,A module that keeps track of the amount of money put into a vending machine and assert the output for one cycle once $1 or more has been received. ,0,ybu5/Vending_Machine,362925778,SystemVerilog,Vending_Machine,2,0,2021-04-29 19:29:58+00:00,[],
6904,https://github.com/Moinahmed7777/Digital-logic-circuit_design.git,2021-05-18 22:42:38+00:00,Digital logic circuit designs using Hardware design languages ( System Verilog and Verilog) ,0,Moinahmed7777/Digital-logic-circuit_design,368683829,SystemVerilog,Digital-logic-circuit_design,15923,0,2021-05-18 22:59:55+00:00,[],
6905,https://github.com/mish3albaiz/pdp11-isa-sim.git,2021-04-11 01:20:15+00:00,SystemVerilog Simulation of PDP-11 ISA,0,mish3albaiz/pdp11-isa-sim,356737838,SystemVerilog,pdp11-isa-sim,12,0,2021-04-11 01:20:46+00:00,[],
6906,https://github.com/BokChoyMan/ECE152A.git,2021-04-13 07:11:45+00:00,,0,BokChoyMan/ECE152A,357457824,SystemVerilog,ECE152A,10,0,2021-04-21 17:14:27+00:00,[],
6907,https://github.com/ofrankg/risc-v.git,2021-04-09 18:24:31+00:00,A simple riscv cpu implementation,0,ofrankg/risc-v,356363551,SystemVerilog,risc-v,23,0,2021-10-07 02:51:27+00:00,[],
6908,https://github.com/benchilton/Verilog-learning-project-a-basic-processor.git,2021-05-30 19:55:32+00:00,A project I undertook to help myself learn about HDLs,0,benchilton/Verilog-learning-project-a-basic-processor,372303852,SystemVerilog,Verilog-learning-project-a-basic-processor,347,0,2023-06-03 20:03:35+00:00,[],
6909,https://github.com/ivanzuglic/RISC-V-core.git,2021-06-07 14:08:23+00:00,Implementation of RISC-V core in SystemVerilog,0,ivanzuglic/RISC-V-core,374689052,SystemVerilog,RISC-V-core,912,0,2023-01-28 06:05:05+00:00,"['risc-v', 'fpga', 'systemverilog']",
6910,https://github.com/Adnan-Asif/Multiplayer-Snake-Game-Verilog.git,2021-06-02 07:26:12+00:00,,0,Adnan-Asif/Multiplayer-Snake-Game-Verilog,373078353,SystemVerilog,Multiplayer-Snake-Game-Verilog,1196,0,2021-06-05 18:20:14+00:00,[],
6911,https://github.com/Vivek-Dave/UVM_TestBench_For_Binary_to_Ex3_Converter.git,2021-06-01 01:04:13+00:00,Complete UVM TestBench For Verification Of Binary to Ex3 Code Converter,0,Vivek-Dave/UVM_TestBench_For_Binary_to_Ex3_Converter,372664800,SystemVerilog,UVM_TestBench_For_Binary_to_Ex3_Converter,122,0,2021-06-01 01:11:48+00:00,[],
6912,https://github.com/Vivek-Dave/UVM_TestBench_For_DeMultiplexer.git,2021-06-05 15:24:39+00:00,Complete UVM TestBench For Verification Of 8x1 DeMultiplexer,0,Vivek-Dave/UVM_TestBench_For_DeMultiplexer,374147836,SystemVerilog,UVM_TestBench_For_DeMultiplexer,82,0,2021-06-05 15:35:35+00:00,[],
6913,https://github.com/kotyadamohini/google_dinosaur.git,2021-05-01 03:51:27+00:00,,0,kotyadamohini/google_dinosaur,363317045,SystemVerilog,google_dinosaur,15982,0,2021-05-01 03:54:52+00:00,[],
6914,https://github.com/GabrielMonteroSierra/Processing-Engine.git,2021-05-30 02:11:38+00:00,This project was coded in SystemVerilog on Fall 2020.,0,GabrielMonteroSierra/Processing-Engine,372105217,SystemVerilog,Processing-Engine,12,0,2021-05-30 03:06:21+00:00,[],
6915,https://github.com/adnanashraf17501/uvm_dpram.git,2021-05-30 06:14:25+00:00,,0,adnanashraf17501/uvm_dpram,372138475,SystemVerilog,uvm_dpram,413,0,2021-05-30 06:16:41+00:00,[],
6916,https://github.com/adnanashraf17501/uvm_APB-AMBA-3.git,2021-05-30 06:25:35+00:00,,0,adnanashraf17501/uvm_APB-AMBA-3,372140227,SystemVerilog,uvm_APB-AMBA-3,2652,0,2021-06-10 08:55:33+00:00,[],
6917,https://github.com/wu-hu-qi-fei/lab1-cpen311-wu-hu-qi-fei.git,2021-05-21 14:02:31+00:00,,0,wu-hu-qi-fei/lab1-cpen311-wu-hu-qi-fei,369553933,SystemVerilog,lab1-cpen311-wu-hu-qi-fei,2713,0,2021-05-21 14:04:00+00:00,[],
6918,https://github.com/carloleo/Embedded-Security.git,2021-05-20 19:33:24+00:00,,1,carloleo/Embedded-Security,369318010,SystemVerilog,Embedded-Security,728,0,2021-07-03 17:39:32+00:00,[],
6919,https://github.com/zappos23/word_deserializer.git,2021-05-14 07:27:26+00:00,,0,zappos23/word_deserializer,367283856,SystemVerilog,word_deserializer,6,0,2021-05-14 07:32:11+00:00,[],
6920,https://github.com/serhaterdogan77/BLM202_RISC-V_Proje.git,2021-05-28 14:45:32+00:00,,0,serhaterdogan77/BLM202_RISC-V_Proje,371731864,SystemVerilog,BLM202_RISC-V_Proje,1721,0,2021-05-28 20:26:04+00:00,[],
6921,https://github.com/Ryan377/Mips.git,2021-06-19 15:28:58+00:00,,0,Ryan377/Mips,378444711,SystemVerilog,Mips,4171,0,2021-06-19 16:28:12+00:00,[],
6922,https://github.com/Dipeshmkwana/DesignSV.git,2021-06-29 16:20:41+00:00,Plan is to make some design projects using systemverilog ,0,Dipeshmkwana/DesignSV,381428139,SystemVerilog,DesignSV,477,0,2022-03-01 16:39:38+00:00,[],https://api.github.com/licenses/mit
6923,https://github.com/FlipperCoin/sim3.git,2021-06-27 14:52:49+00:00,,0,FlipperCoin/sim3,380766128,SystemVerilog,sim3,7,0,2021-06-27 18:08:53+00:00,[],
6924,https://github.com/7FM/ShadyPong.git,2021-08-04 16:46:35+00:00,Simple Pong Implementation for the icesugar with VGA extension,0,7FM/ShadyPong,392762687,SystemVerilog,ShadyPong,42,0,2022-07-09 12:56:52+00:00,[],https://api.github.com/licenses/gpl-3.0
6925,https://github.com/Jacobzwh/project3_riscv.git,2021-08-02 15:23:22+00:00,,0,Jacobzwh/project3_riscv,391999458,SystemVerilog,project3_riscv,198,0,2021-08-02 17:12:34+00:00,[],
6926,https://github.com/Kiran760043/Synchronous-FIFO.git,2021-07-27 22:56:34+00:00,,0,Kiran760043/Synchronous-FIFO,390149644,SystemVerilog,Synchronous-FIFO,390,0,2021-07-27 23:02:56+00:00,[],https://api.github.com/licenses/unlicense
6927,https://github.com/umutozdemr/DigitalDesignProject.git,2021-07-30 07:39:16+00:00,,0,umutozdemr/DigitalDesignProject,390975929,SystemVerilog,DigitalDesignProject,4,0,2021-07-30 07:42:03+00:00,[],
6928,https://github.com/blackcatruri/uvm_test.git,2021-07-05 03:29:03+00:00,,0,blackcatruri/uvm_test,383002964,SystemVerilog,uvm_test,8507,0,2021-09-17 09:48:55+00:00,[],
6929,https://github.com/kmakhno/hdl_ip.git,2021-07-09 14:10:30+00:00,,0,kmakhno/hdl_ip,384457067,SystemVerilog,hdl_ip,4,0,2021-08-27 14:07:05+00:00,[],
6930,https://github.com/SheronSuditha/SIT329-Advanced-Embedded-Systems.git,2021-07-22 11:37:31+00:00,,0,SheronSuditha/SIT329-Advanced-Embedded-Systems,388440432,SystemVerilog,SIT329-Advanced-Embedded-Systems,0,0,2021-07-22 11:39:03+00:00,[],
6931,https://github.com/amirshmul/Logic-Design-Building-Blocks.git,2021-07-04 14:56:30+00:00,,0,amirshmul/Logic-Design-Building-Blocks,382878358,SystemVerilog,Logic-Design-Building-Blocks,582,0,2021-08-20 15:16:56+00:00,[],
6932,https://github.com/namanmody-UML/HeterogenousComputing-Lab4.git,2021-07-28 17:28:15+00:00,,0,namanmody-UML/HeterogenousComputing-Lab4,390442378,SystemVerilog,HeterogenousComputing-Lab4,18396,0,2021-07-28 18:45:29+00:00,[],https://api.github.com/licenses/mit
6933,https://github.com/Niu0351/Image-Decompressor-Project.git,2021-03-30 14:13:04+00:00,,0,Niu0351/Image-Decompressor-Project,353025364,SystemVerilog,Image-Decompressor-Project,2159,0,2021-03-30 14:35:27+00:00,[],
6934,https://github.com/karthik-0398/Vector-parallel-graphics-accelerator.git,2021-05-02 08:47:15+00:00,,0,karthik-0398/Vector-parallel-graphics-accelerator,363605710,SystemVerilog,Vector-parallel-graphics-accelerator,214648,0,2022-08-03 08:09:40+00:00,[],https://api.github.com/licenses/gpl-3.0
6935,https://github.com/charkster/trigger.git,2021-05-09 22:14:45+00:00,SystemVerilog FPGA design of a custom trigger circuit which can be used with oscilloscopes or logic analyzers.,0,charkster/trigger,365858456,SystemVerilog,trigger,321,0,2022-10-22 23:34:52+00:00,"['cmod-a7', 'fpga', 'trigger', 'systemverilog', 'scarf']",https://api.github.com/licenses/mit
6936,https://github.com/ashtneoi/DE0-Nano-skeleton.git,2021-05-09 03:06:13+00:00,,0,ashtneoi/DE0-Nano-skeleton,365655879,SystemVerilog,DE0-Nano-skeleton,18,0,2021-05-14 18:04:08+00:00,[],
6937,https://github.com/peterzhong2001/EE271_Labs.git,2021-05-13 22:46:53+00:00,,0,peterzhong2001/EE271_Labs,367192140,SystemVerilog,EE271_Labs,22284,0,2021-05-14 06:57:47+00:00,[],
6938,https://github.com/470486104/J1_WB-master.git,2021-05-15 10:37:47+00:00,,0,470486104/J1_WB-master,367604163,SystemVerilog,J1_WB-master,1380,0,2021-05-20 01:30:04+00:00,[],
6939,https://github.com/OikawaLab/NexysVideo_skeleton.git,2021-05-13 06:41:44+00:00,,0,OikawaLab/NexysVideo_skeleton,366958551,SystemVerilog,NexysVideo_skeleton,10,0,2021-05-13 06:41:58+00:00,[],
6940,https://github.com/raychen0212/ASIC-Design.git,2021-05-12 01:50:50+00:00,,0,raychen0212/ASIC-Design,366562194,SystemVerilog,ASIC-Design,1591,0,2022-01-18 07:39:07+00:00,[],
6941,https://github.com/MarianoIDC/ProyectoTallerDigitales.git,2021-05-19 01:18:24+00:00,,0,MarianoIDC/ProyectoTallerDigitales,368708981,SystemVerilog,ProyectoTallerDigitales,82,0,2021-06-15 06:03:14+00:00,[],
6942,https://github.com/zackfravel/MESI-Cache-Simulator.git,2021-05-22 20:29:17+00:00,"Final project for ECE585 - Microprocessor Systems Design (Winter 2021, Portland State University) ",0,zackfravel/MESI-Cache-Simulator,369900215,SystemVerilog,MESI-Cache-Simulator,791,0,2021-05-22 20:32:00+00:00,[],
6943,https://github.com/kanedayo/test_systemverilog.git,2021-05-19 10:44:32+00:00,,0,kanedayo/test_systemverilog,368834278,SystemVerilog,test_systemverilog,22,0,2021-11-02 15:39:41+00:00,[],
6944,https://github.com/kentiscool/CSE140L-Lab2.git,2021-05-05 02:25:51+00:00,,0,kentiscool/CSE140L-Lab2,364440560,SystemVerilog,CSE140L-Lab2,201,0,2021-05-07 22:56:10+00:00,[],
6945,https://github.com/Vivek-Dave/UVM_TestBench_For_Logic_gates.git,2021-06-14 13:21:53+00:00,Complete UVM TestBecnh For Verification Of All Logic Gates ,0,Vivek-Dave/UVM_TestBench_For_Logic_gates,376830720,SystemVerilog,UVM_TestBench_For_Logic_gates,79,0,2021-06-14 13:29:24+00:00,[],
6946,https://github.com/harshitaaaaaa/fpga_lab_requirements.git,2021-06-24 14:43:45+00:00,,0,harshitaaaaaa/fpga_lab_requirements,379957521,,fpga_lab_requirements,85,0,2021-06-26 17:17:36+00:00,[],
6947,https://github.com/Jseok-Heo/CAM2VGA.git,2021-06-26 14:08:25+00:00,OV7670 Camera to VGA monitor,0,Jseok-Heo/CAM2VGA,380517250,SystemVerilog,CAM2VGA,2998,0,2021-07-24 16:04:45+00:00,[],
6948,https://github.com/ishan-patil2388/AHB_UVM_BASIC_SKELETON.git,2021-04-18 11:31:04+00:00,This is a basic AHB UVM based testbech for dummy testing of UVM features,0,ishan-patil2388/AHB_UVM_BASIC_SKELETON,359124995,SystemVerilog,AHB_UVM_BASIC_SKELETON,5,0,2021-04-18 11:32:35+00:00,[],
6949,https://github.com/hamidkhd/MIPS-PipeLine.git,2021-04-27 07:31:27+00:00,,0,hamidkhd/MIPS-PipeLine,362021087,SystemVerilog,MIPS-PipeLine,1596,0,2022-10-11 08:07:40+00:00,[],
6950,https://github.com/aman-gill/riscv_rv32i.git,2021-04-28 16:09:56+00:00,Repo for CPU using RISC-V RV32I ISA,0,aman-gill/riscv_rv32i,362532043,SystemVerilog,riscv_rv32i,2,0,2023-02-22 05:46:04+00:00,[],
6951,https://github.com/hadiloomehdi/ARM.git,2021-04-29 18:48:29+00:00,,0,hadiloomehdi/ARM,362915936,SystemVerilog,ARM,69,0,2021-06-25 19:38:20+00:00,[],
6952,https://github.com/yangli900520/FFT.git,2021-04-08 21:52:10+00:00,Configurable FFT,0,yangli900520/FFT,356057133,SystemVerilog,FFT,27,0,2021-04-08 21:53:10+00:00,[],
6953,https://github.com/putnik47/dds_sin_uvm.git,2021-04-07 16:09:28+00:00,simple dds sin generator with uvm verification environment,0,putnik47/dds_sin_uvm,355607419,SystemVerilog,dds_sin_uvm,33,0,2021-04-07 16:52:44+00:00,[],https://api.github.com/licenses/gpl-3.0
6954,https://github.com/yohansh/CodeBlock_Verification_Work.git,2021-04-07 12:45:57+00:00,,0,yohansh/CodeBlock_Verification_Work,355541831,SystemVerilog,CodeBlock_Verification_Work,742,0,2021-04-07 12:51:37+00:00,[],
6955,https://github.com/hao310rui140326/example_and_uvm_source_code.git,2021-04-07 09:26:52+00:00,,0,hao310rui140326/example_and_uvm_source_code,355485908,SystemVerilog,example_and_uvm_source_code,2523,0,2021-04-07 09:34:33+00:00,[],
6956,https://github.com/mfkiwl/azadi.git,2021-03-31 07:36:42+00:00,Azadi is an SoC with 32 bit RISC-V CPU core.,0,mfkiwl/azadi,353268183,,azadi,25893,0,2021-04-17 08:24:16+00:00,[],
6957,https://github.com/adnanashraf17501/System-Verilog-Based-Verification-of-Decoder.git,2021-06-29 07:43:11+00:00,,0,adnanashraf17501/System-Verilog-Based-Verification-of-Decoder,381280832,SystemVerilog,System-Verilog-Based-Verification-of-Decoder,216,0,2021-06-29 07:43:59+00:00,[],
6958,https://github.com/devmanaktala10/StreetFighterFPGA.git,2021-07-17 22:21:17+00:00,Street Fighter Remastered on FPGA as a 2-player game on a VGA console.,0,devmanaktala10/StreetFighterFPGA,387046524,SystemVerilog,StreetFighterFPGA,35176,0,2021-07-17 22:32:19+00:00,[],
6959,https://github.com/zheng-yijia/Algorithm-Training.git,2021-07-16 01:58:17+00:00,Algorithm Study.,0,zheng-yijia/Algorithm-Training,386477732,SystemVerilog,Algorithm-Training,4,0,2021-07-19 06:33:44+00:00,['algorithm'],https://api.github.com/licenses/mit
6960,https://github.com/yoonseo-choi/FPGA_NeuralNet.git,2021-05-25 23:40:30+00:00,,0,yoonseo-choi/FPGA_NeuralNet,370854608,SystemVerilog,FPGA_NeuralNet,11667,0,2022-02-04 00:04:48+00:00,[],
6961,https://github.com/lashraelrx/RISC-V-PROJECT.git,2021-05-28 20:48:12+00:00,,0,lashraelrx/RISC-V-PROJECT,371815250,SystemVerilog,RISC-V-PROJECT,40557,0,2021-05-28 20:58:53+00:00,[],
6962,https://github.com/hao310rui140326/board_kernel_interface.git,2021-06-04 02:11:27+00:00,board_kernel_interface,0,hao310rui140326/board_kernel_interface,373694883,SystemVerilog,board_kernel_interface,169,0,2021-06-04 02:34:04+00:00,[],
6963,https://github.com/rag1404/AHB_Slave_dut_Master_UVMTB.git,2021-07-04 21:22:35+00:00,A simple AHB Slave dut and Master UVM TB,0,rag1404/AHB_Slave_dut_Master_UVMTB,382950803,SystemVerilog,AHB_Slave_dut_Master_UVMTB,12,0,2021-07-04 21:27:26+00:00,[],
6964,https://github.com/smeng1024/Count-One-Circuit.git,2021-08-02 02:35:30+00:00,This is just a studying project. It is a circuit that can count how many 1s are in a 32 bit input. And the TB written in SV is also attached,0,smeng1024/Count-One-Circuit,391795107,SystemVerilog,Count-One-Circuit,1,0,2021-08-02 02:40:37+00:00,[],
6965,https://github.com/Anson-Sun/MIPS_32bit.git,2021-08-11 23:12:37+00:00,,0,Anson-Sun/MIPS_32bit,395137778,SystemVerilog,MIPS_32bit,5175,0,2021-08-11 23:25:05+00:00,[],
6966,https://github.com/villyye97/EE-469-HW2.git,2021-08-07 16:16:36+00:00,Design of ALU.,0,villyye97/EE-469-HW2,393732248,SystemVerilog,EE-469-HW2,11,0,2021-08-07 16:21:10+00:00,[],
6967,https://github.com/Fireflaker/SummerResearchTemp.git,2021-07-22 00:29:38+00:00,SHA-3 implementation on Artix7 FPGA in System Verilog ,0,Fireflaker/SummerResearchTemp,388282020,SystemVerilog,SummerResearchTemp,4752,0,2021-08-09 14:45:34+00:00,[],
6968,https://github.com/mfkiwl/ss_rvc.git,2021-07-26 06:02:56+00:00,"subset riscv rv32i Core, Tile, Fabric",0,mfkiwl/ss_rvc,389524792,,ss_rvc,1,0,2021-08-04 14:42:32+00:00,[],https://api.github.com/licenses/mit
6969,https://github.com/Ammar-Bin-Amir/RV32I_Single_Cycle_CPU.git,2021-04-04 17:48:21+00:00,Processor Design of RV32I Single Cycle CPU,0,Ammar-Bin-Amir/RV32I_Single_Cycle_CPU,354609481,SystemVerilog,RV32I_Single_Cycle_CPU,601,0,2024-01-15 07:44:56+00:00,"['risc-v', 'rtl-design', 'rv32i', 'single-cycle-processor', 'digital-circuit-design']",
6970,https://github.com/A00x40/FC-Layer.git,2021-05-23 20:01:08+00:00,,1,A00x40/FC-Layer,370146282,SystemVerilog,FC-Layer,508,0,2021-06-10 20:36:11+00:00,[],
6971,https://github.com/Vivek-Dave/UVM_TestBench_For_Encoder.git,2021-06-03 02:52:31+00:00,Complete UVM TestBench For Verification Of 8x3 Encoder,0,Vivek-Dave/UVM_TestBench_For_Encoder,373362804,SystemVerilog,UVM_TestBench_For_Encoder,81,0,2021-06-03 02:57:05+00:00,[],
6972,https://github.com/Alfred9998/APB.git,2021-05-31 14:07:45+00:00,,0,Alfred9998/APB,372527789,SystemVerilog,APB,20,0,2021-05-31 14:09:03+00:00,[],
6973,https://github.com/NoharMarcus/FPGA_lab_project.git,2021-06-01 05:58:23+00:00,"Final 1a lab project , game called bumpy, using all analog components. Peoject By Chen Shmueli and Nohar Marcus",0,NoharMarcus/FPGA_lab_project,372717239,SystemVerilog,FPGA_lab_project,28969,0,2021-06-01 06:36:26+00:00,[],https://api.github.com/licenses/gpl-3.0
6974,https://github.com/jorgeaportilla/ELO212-2021-1.git,2021-06-08 15:52:34+00:00,Archivos asociados a la realización de ELO212 Laboratorio de Sistemas Digitales durante el año 2021 primer semestre.,0,jorgeaportilla/ELO212-2021-1,375065622,,ELO212-2021-1,30,0,2021-08-06 20:06:56+00:00,[],
6975,https://github.com/hao310rui140326/uvm-1.2.git,2021-04-07 09:39:49+00:00,,0,hao310rui140326/uvm-1.2,355489529,SystemVerilog,uvm-1.2,2067,0,2021-04-07 09:40:46+00:00,[],https://api.github.com/licenses/apache-2.0
6976,https://github.com/FeBarbosa/UVM_example.git,2021-04-07 19:44:56+00:00,A testbench using UVM to test TinyALU,0,FeBarbosa/UVM_example,355664128,SystemVerilog,UVM_example,12,0,2021-05-24 20:01:30+00:00,[],
6977,https://github.com/Philngtn/Labs_systemVerilog.git,2021-04-08 00:50:27+00:00,Basic labs for practicing system verilog ,0,Philngtn/Labs_systemVerilog,355721655,SystemVerilog,Labs_systemVerilog,510,0,2021-04-08 00:56:08+00:00,[],
6978,https://github.com/adenzer/ECE_593_A1.git,2021-03-31 02:28:20+00:00,,1,adenzer/ECE_593_A1,353200555,SystemVerilog,ECE_593_A1,551,0,2021-04-22 06:20:28+00:00,[],
6979,https://github.com/vvzunin/systolic_array.git,2021-04-11 21:33:17+00:00,,0,vvzunin/systolic_array,356984307,SystemVerilog,systolic_array,41314,0,2021-05-23 15:17:28+00:00,[],
6980,https://github.com/deoregaurav92/SystemVerilog_Coding_Practice.git,2021-06-27 19:22:10+00:00,,1,deoregaurav92/SystemVerilog_Coding_Practice,380821149,SystemVerilog,SystemVerilog_Coding_Practice,27,0,2021-07-27 18:10:39+00:00,[],
6981,https://github.com/aurthurtang/finding_first_one.git,2021-06-30 23:18:05+00:00,A simple verilog example for returning the index of the first '1' for data with length of N,0,aurthurtang/finding_first_one,381855490,SystemVerilog,finding_first_one,1,0,2021-06-30 23:19:08+00:00,[],
6982,https://github.com/atsmith3/riscv.git,2021-06-12 05:45:25+00:00,,0,atsmith3/riscv,376212143,SystemVerilog,riscv,64,0,2022-03-27 06:09:27+00:00,[],
6983,https://github.com/lrvnc/trabalho6-microarquitetura.git,2021-06-18 02:18:59+00:00,,0,lrvnc/trabalho6-microarquitetura,378010945,SystemVerilog,trabalho6-microarquitetura,5,0,2021-06-18 02:19:27+00:00,[],
6984,https://github.com/adnanashraf17501/dff_uvm.git,2021-05-30 06:20:52+00:00,,0,adnanashraf17501/dff_uvm,372139440,SystemVerilog,dff_uvm,5,0,2021-05-30 06:21:35+00:00,[],
6985,https://github.com/pranjal-mittal0/NoCRouter.git,2021-05-27 18:09:16+00:00,,0,pranjal-mittal0/NoCRouter,371463421,SystemVerilog,NoCRouter,650,0,2021-06-20 11:48:06+00:00,[],https://api.github.com/licenses/mit
6986,https://github.com/Jseok-Heo/FIFO.git,2021-05-22 17:07:10+00:00,Asynchronous First-In First-Out,0,Jseok-Heo/FIFO,369863857,SystemVerilog,FIFO,12,0,2021-05-30 06:49:09+00:00,[],
6987,https://github.com/Danil1997Dev/buzzer.git,2021-05-24 14:44:15+00:00,,0,Danil1997Dev/buzzer,370385594,SystemVerilog,buzzer,4441,0,2021-05-24 14:57:12+00:00,[],
6988,https://github.com/WeitingLian/UVM_Practice.git,2021-07-11 03:26:33+00:00,,0,WeitingLian/UVM_Practice,384851491,SystemVerilog,UVM_Practice,11,0,2021-07-20 15:58:49+00:00,[],
6989,https://github.com/mec391/system_verilog_practice.git,2021-07-06 00:30:57+00:00,Practice Code for Systemverilog,0,mec391/system_verilog_practice,383295564,SystemVerilog,system_verilog_practice,1,0,2021-07-06 01:56:17+00:00,[],
6990,https://github.com/evannuss/BYUecen220.git,2021-07-27 00:10:34+00:00,,0,evannuss/BYUecen220,389801227,SystemVerilog,BYUecen220,29,0,2021-07-27 00:16:36+00:00,[],
6991,https://github.com/Monsoonexe/cpe200-project.git,2021-07-29 19:50:35+00:00,Semester project by Justin and Rich.,0,Monsoonexe/cpe200-project,390834867,SystemVerilog,cpe200-project,894,0,2021-08-14 03:49:23+00:00,[],
6992,https://github.com/Gehad-16/-problems-using-system-Verilog-.git,2021-07-11 21:00:39+00:00,,0,Gehad-16/-problems-using-system-Verilog-,385051242,SystemVerilog,-problems-using-system-Verilog-,1246,0,2021-07-11 21:08:34+00:00,[],
6993,https://github.com/ahmedmed/EventGenerator.git,2021-04-30 13:18:57+00:00,,0,ahmedmed/EventGenerator,363146863,SystemVerilog,EventGenerator,8,0,2021-04-30 13:19:24+00:00,[],
6994,https://github.com/bhargavasai222/bhargav123.git,2021-04-19 05:17:53+00:00,,0,bhargavasai222/bhargav123,359337275,SystemVerilog,bhargav123,6,0,2021-04-19 05:18:07+00:00,[],
6995,https://github.com/ThePVY/processor_core.git,2021-04-21 08:03:24+00:00,,0,ThePVY/processor_core,360082203,SystemVerilog,processor_core,23,0,2021-04-21 08:10:32+00:00,[],
6996,https://github.com/nodenskoren/ece411_mp3_sp2018-risingedge.git,2021-04-23 07:39:56+00:00,,0,nodenskoren/ece411_mp3_sp2018-risingedge,360802934,SystemVerilog,ece411_mp3_sp2018-risingedge,94187,0,2021-04-23 07:42:44+00:00,[],
6997,https://github.com/Tyler1T/HSCA-Final-Project.git,2021-04-22 18:36:11+00:00,,0,Tyler1T/HSCA-Final-Project,360646884,SystemVerilog,HSCA-Final-Project,1428,0,2021-05-02 03:30:31+00:00,[],https://api.github.com/licenses/gpl-3.0
6998,https://github.com/ArquiII-2021-S1/ASIPVectorial.git,2021-05-13 16:16:05+00:00,,0,ArquiII-2021-S1/ASIPVectorial,367105774,SystemVerilog,ASIPVectorial,6696,0,2021-06-07 04:46:54+00:00,[],https://api.github.com/licenses/mit
6999,https://github.com/Je06jm/64-bit-CPU.git,2021-04-04 00:03:00+00:00,A 64 bit CPU following modern principles,0,Je06jm/64-bit-CPU,354419836,SystemVerilog,64-bit-CPU,89,0,2021-04-24 01:11:15+00:00,[],
7000,https://github.com/dclab02/final_project.git,2021-05-17 09:36:07+00:00,DCLab Final Project,0,dclab02/final_project,368131001,SystemVerilog,final_project,736,0,2021-12-11 14:57:57+00:00,[],
7001,https://github.com/NitishaS-812k/Verilog-codes.git,2021-05-14 17:44:29+00:00,"A collection of basic gates , combinational circuits and sequential circuits modelled in system verilog ",0,NitishaS-812k/Verilog-codes,367438828,SystemVerilog,Verilog-codes,31,0,2021-06-02 11:07:01+00:00,[],https://api.github.com/licenses/mit
7002,https://github.com/uranusb/UART_UVM.git,2021-05-14 16:50:35+00:00,A testbench for UART using UVM,0,uranusb/UART_UVM,367426024,SystemVerilog,UART_UVM,133,0,2021-05-15 06:38:46+00:00,[],
7003,https://github.com/bhyou/sensor-network-readout.git,2021-07-16 04:56:57+00:00,,0,bhyou/sensor-network-readout,386514038,SystemVerilog,sensor-network-readout,23,0,2021-07-30 03:32:31+00:00,[],
7004,https://github.com/namanmody-UML/HeterogenousCompLab3.git,2021-07-17 12:16:00+00:00,,0,namanmody-UML/HeterogenousCompLab3,386929442,SystemVerilog,HeterogenousCompLab3,17750,0,2021-07-17 12:44:19+00:00,[],https://api.github.com/licenses/apache-2.0
7005,https://github.com/CloudNomad/github.io.git,2021-08-12 16:03:24+00:00,FPGA 100% Hardware Synthesized Galaga (2D Arcade Game) - ECE 385,0,CloudNomad/github.io,395374015,SystemVerilog,github.io,24716,0,2021-08-12 20:38:47+00:00,[],
7006,https://github.com/De3ph/A-Simple-8-Bit-Processor.git,2021-07-05 16:37:09+00:00,,0,De3ph/A-Simple-8-Bit-Processor,383204719,SystemVerilog,A-Simple-8-Bit-Processor,281,0,2024-01-19 20:05:38+00:00,[],
7007,https://github.com/bigBrain1901/nPOWER-ISA-5-STAGE-PIPELINED-CPU.git,2021-05-02 10:57:09+00:00,,0,bigBrain1901/nPOWER-ISA-5-STAGE-PIPELINED-CPU,363628697,SystemVerilog,nPOWER-ISA-5-STAGE-PIPELINED-CPU,1056,0,2021-10-15 09:56:12+00:00,[],
7008,https://github.com/hansgaensbauer/riscv-democore.git,2021-04-07 23:45:53+00:00,"My scratch implementation of a pipelined RV32I processor, for fun and practice. ",0,hansgaensbauer/riscv-democore,355711086,SystemVerilog,riscv-democore,41,0,2021-08-21 16:20:16+00:00,[],
7010,https://github.com/Vivek-Dave/UVM_TestBench_For_BCD_To_7_Segment.git,2021-06-05 15:37:58+00:00,Complete UVM TestBench For Verification Of BCD To 7 Segment Converter,0,Vivek-Dave/UVM_TestBench_For_BCD_To_7_Segment,374150740,SystemVerilog,UVM_TestBench_For_BCD_To_7_Segment,79,0,2021-06-05 15:47:50+00:00,[],
7011,https://github.com/hx15/AMBA_AP3_UVM.git,2021-04-27 19:02:00+00:00,,0,hx15/AMBA_AP3_UVM,362221376,SystemVerilog,AMBA_AP3_UVM,11,0,2021-04-27 19:32:46+00:00,[],
7012,https://github.com/iliyankrastanov/SV_UVM_training.git,2021-05-18 08:28:50+00:00,,0,iliyankrastanov/SV_UVM_training,368456306,SystemVerilog,SV_UVM_training,200,0,2021-11-09 12:46:45+00:00,[],
7013,https://github.com/adnanashraf17501/uvm_4_16_decoder.git,2021-05-30 06:19:46+00:00,,0,adnanashraf17501/uvm_4_16_decoder,372139272,SystemVerilog,uvm_4_16_decoder,132,0,2021-05-30 06:20:31+00:00,[],
7014,https://github.com/lrvnc/trabalho5-verilog.git,2021-06-10 19:55:57+00:00,,0,lrvnc/trabalho5-verilog,375815588,SystemVerilog,trabalho5-verilog,3020,0,2021-06-10 20:17:01+00:00,[],
7015,https://github.com/aknapen/otter-fun.git,2021-06-24 19:19:08+00:00,Fun side projects with the RISC-V OTTER CPU,0,aknapen/otter-fun,380028750,SystemVerilog,otter-fun,10,0,2021-06-24 21:21:45+00:00,[],
7016,https://github.com/BrandanJV/Scanner3D.git,2021-05-09 00:39:08+00:00,,0,BrandanJV/Scanner3D,365638090,SystemVerilog,Scanner3D,408,0,2021-06-04 23:42:26+00:00,[],
7017,https://github.com/MEETMS7/tvip-common.git,2021-05-16 09:25:01+00:00,,0,MEETMS7/tvip-common,367835622,SystemVerilog,tvip-common,11,0,2021-05-16 09:25:15+00:00,[],https://api.github.com/licenses/apache-2.0
7018,https://github.com/MarianoIDC/Lab4_TTT.git,2021-05-05 19:13:03+00:00,,0,MarianoIDC/Lab4_TTT,364681708,SystemVerilog,Lab4_TTT,10,0,2021-05-11 10:18:55+00:00,[],
7019,https://github.com/MarianoIDC/TallerDigitales.git,2021-08-04 01:36:16+00:00,,0,MarianoIDC/TallerDigitales,392509320,SystemVerilog,TallerDigitales,151035,0,2022-01-04 15:31:48+00:00,[],
7020,https://github.com/MickeyMouseMouse/AlarmClock.git,2021-07-02 13:14:08+00:00,,0,MickeyMouseMouse/AlarmClock,382351076,SystemVerilog,AlarmClock,2,0,2021-07-02 13:25:54+00:00,[],
7021,https://github.com/liqinyang/Analysis-of-random-numbers-using-FPGAs.git,2021-06-15 16:45:33+00:00,,0,liqinyang/Analysis-of-random-numbers-using-FPGAs,377231838,SystemVerilog,Analysis-of-random-numbers-using-FPGAs,2342,0,2021-06-16 15:04:32+00:00,[],
7022,https://github.com/Thanujsai/4X4-multiplier.git,2021-06-18 18:02:31+00:00,This project multiplies the given two 4 bit numbers.,0,Thanujsai/4X4-multiplier,378229419,SystemVerilog,4X4-multiplier,30,0,2021-06-21 05:20:52+00:00,[],
7023,https://github.com/RyanNand/MyProjects.git,2021-06-17 18:28:36+00:00,A repo for all personal projects done.,0,RyanNand/MyProjects,377926277,SystemVerilog,MyProjects,54556,0,2021-10-08 05:29:49+00:00,[],
7024,https://github.com/ttsaadet/FPGA-Based-POS-Terminal_METU_EE314.git,2021-06-19 06:35:12+00:00,,0,ttsaadet/FPGA-Based-POS-Terminal_METU_EE314,378342320,SystemVerilog,FPGA-Based-POS-Terminal_METU_EE314,41,0,2023-01-28 00:07:57+00:00,[],
7025,https://github.com/Haridhra/VGA_Pong_FPGA.git,2021-07-12 18:19:08+00:00,,0,Haridhra/VGA_Pong_FPGA,385343136,SystemVerilog,VGA_Pong_FPGA,1072,0,2022-05-23 17:40:19+00:00,[],
7026,https://github.com/fcarli3/tiny_encryption_algorithm.git,2021-07-22 19:26:49+00:00,Final Project of Hardware and Embedded Security course (Master's Degree in Cybersecurity at University of Pisa) ,1,fcarli3/tiny_encryption_algorithm,388574650,SystemVerilog,tiny_encryption_algorithm,2680,0,2021-09-08 14:34:06+00:00,[],
7027,https://github.com/adi-s-bit/Verilog-Projects.git,2021-07-29 20:04:57+00:00,,0,adi-s-bit/Verilog-Projects,390838109,SystemVerilog,Verilog-Projects,349,0,2021-08-02 15:55:16+00:00,[],
7028,https://github.com/Fernsicles/Clock_Generator.git,2021-07-29 04:23:26+00:00,,0,Fernsicles/Clock_Generator,390598935,SystemVerilog,Clock_Generator,0,0,2021-07-29 04:23:45+00:00,[],
7029,https://github.com/brandon197/LRU_Intigrated-Circuit.git,2021-04-24 03:45:19+00:00,A VLSI design of the Least Recently Used algorithm,0,brandon197/LRU_Intigrated-Circuit,361063704,SystemVerilog,LRU_Intigrated-Circuit,22588,0,2021-04-24 04:04:08+00:00,[],
7030,https://github.com/MohammedAbuFares/Verification-of-ALU.git,2021-05-23 06:01:23+00:00,,0,MohammedAbuFares/Verification-of-ALU,369973510,SystemVerilog,Verification-of-ALU,7934,0,2021-05-23 06:02:46+00:00,[],
7031,https://github.com/viki22052/sv_uvm_training.git,2021-05-17 12:10:08+00:00,,0,viki22052/sv_uvm_training,368171982,SystemVerilog,sv_uvm_training,125,0,2021-06-18 15:33:20+00:00,[],
7032,https://github.com/alopez802/project.git,2021-05-10 05:54:56+00:00,,0,alopez802/project,365932961,SystemVerilog,project,25256,0,2021-05-17 01:43:49+00:00,[],
7033,https://github.com/Stefanshi2019/ECE342.git,2021-05-03 23:58:35+00:00,,0,Stefanshi2019/ECE342,364092487,SystemVerilog,ECE342,6970,0,2021-05-03 23:59:22+00:00,[],
7034,https://github.com/rvkrysh/openrtl.git,2021-04-02 03:52:14+00:00,free rtl source,0,rvkrysh/openrtl,353898233,SystemVerilog,openrtl,5,0,2021-12-06 10:04:16+00:00,[],
7036,https://github.com/snowtothemax/ECE551FinalProject.git,2021-04-06 17:30:42+00:00,,0,snowtothemax/ECE551FinalProject,355275996,SystemVerilog,ECE551FinalProject,51017,0,2023-08-13 01:12:33+00:00,[],
7037,https://github.com/aknapen/cpe333.git,2021-04-06 17:50:57+00:00,,1,aknapen/cpe333,355281460,SystemVerilog,cpe333,628,0,2021-06-24 19:14:45+00:00,[],
7038,https://github.com/matsumon/System-Verilog-NES-Receiver.git,2021-06-10 04:08:52+00:00,,0,matsumon/System-Verilog-NES-Receiver,375565849,SystemVerilog,System-Verilog-NES-Receiver,13870,0,2021-06-10 04:41:11+00:00,[],
7039,https://github.com/Vivek-Dave/UVM_TestBench_For_Multiplexer.git,2021-05-04 06:30:41+00:00,Complete UVM Testbench for Verification of 8x1 Multiplexer,0,Vivek-Dave/UVM_TestBench_For_Multiplexer,364161334,SystemVerilog,UVM_TestBench_For_Multiplexer,79,0,2021-05-04 06:37:25+00:00,[],
7040,https://github.com/skyfenton/otter-mcu.git,2021-05-01 20:31:42+00:00,OTTER microcomputing unit implementing RISC-V architecture (with some custom instructions) to be deployed to a Artix-7 Baysis 3 FPGA,0,skyfenton/otter-mcu,363501664,SystemVerilog,otter-mcu,14565,0,2022-01-29 19:17:06+00:00,[],https://api.github.com/licenses/mit
7041,https://github.com/moiz8989/ece-593-pre-silicon.git,2021-04-12 01:06:04+00:00,,1,moiz8989/ece-593-pre-silicon,357018001,SystemVerilog,ece-593-pre-silicon,1170,0,2021-04-12 03:46:07+00:00,[],
7042,https://github.com/Vivek-Dave/SystemVerilog.git,2021-04-19 13:15:45+00:00,Examples In SystemVerilog,0,Vivek-Dave/SystemVerilog,359465744,SystemVerilog,SystemVerilog,12,0,2021-04-19 13:19:48+00:00,[],
7043,https://github.com/abbasrsyedk/SystemVerilog.git,2021-06-07 03:38:49+00:00,,0,abbasrsyedk/SystemVerilog,374524880,SystemVerilog,SystemVerilog,26,0,2021-08-22 03:40:16+00:00,[],
7044,https://github.com/yuri-panchul/2019_2021_eda_playground.git,2021-06-22 06:08:31+00:00,,1,yuri-panchul/2019_2021_eda_playground,379160614,SystemVerilog,2019_2021_eda_playground,17,0,2021-06-22 06:11:16+00:00,[],
7045,https://github.com/hansikaweerasena/Chaffing-and-Winnowing.git,2021-04-24 19:53:06+00:00,,0,hansikaweerasena/Chaffing-and-Winnowing,361253472,SystemVerilog,Chaffing-and-Winnowing,18,0,2021-10-04 21:35:30+00:00,[],
7046,https://github.com/alpylmmz/video-scene.git,2021-05-26 11:41:40+00:00,,0,alpylmmz/video-scene,371012862,SystemVerilog,video-scene,10130,0,2023-05-31 21:12:41+00:00,[],
7047,https://github.com/deserthobo13/Thunderbird_lights.git,2021-06-04 04:25:43+00:00,Simply state machine showing the turning lights and hazards of a mustang Thunderbird.,0,deserthobo13/Thunderbird_lights,373719345,SystemVerilog,Thunderbird_lights,6,0,2021-06-04 04:27:16+00:00,[],
7048,https://github.com/OkanSen/Mips-and-Verilog-Practices-4.git,2021-06-24 13:57:26+00:00,,0,OkanSen/Mips-and-Verilog-Practices-4,379942873,SystemVerilog,Mips-and-Verilog-Practices-4,232,0,2021-06-24 14:04:30+00:00,[],
7049,https://github.com/jiru1997/Implementation-of-the-Click-controller.git,2021-06-21 01:17:52+00:00,implementation of the Click controller,0,jiru1997/Implementation-of-the-Click-controller,378772576,SystemVerilog,Implementation-of-the-Click-controller,173,0,2021-06-21 01:21:07+00:00,[],
7050,https://github.com/4mod3/matrix_mul_fyp.git,2021-04-16 16:32:34+00:00,Reproduce a linear array architecture dealing with arbitrary-size matrix multiplication.,0,4mod3/matrix_mul_fyp,358659751,SystemVerilog,matrix_mul_fyp,428,0,2021-06-24 11:09:49+00:00,[],
7051,https://github.com/danielgaio/sigmoid_taylor.git,2021-04-22 12:25:17+00:00,Implementação de arquitetura digital para a função sigmoid pela técnica de aproximação por séries de Taylor.,0,danielgaio/sigmoid_taylor,360510282,SystemVerilog,sigmoid_taylor,8149,0,2021-10-14 21:25:55+00:00,[],
7052,https://github.com/MatusPilnan/asicde-collab-testing.git,2021-04-24 16:08:03+00:00,,0,MatusPilnan/asicde-collab-testing,361206745,SystemVerilog,asicde-collab-testing,0,0,2021-04-24 16:09:17+00:00,[],
7053,https://github.com/aurthurtang/StopWatch.git,2021-08-01 01:03:42+00:00,,0,aurthurtang/StopWatch,391492332,SystemVerilog,StopWatch,92,0,2021-08-01 17:57:59+00:00,[],
7054,https://github.com/pnayak1501/sun-sensors.git,2021-07-30 12:49:32+00:00,,1,pnayak1501/sun-sensors,391063002,SystemVerilog,sun-sensors,7,0,2021-08-12 09:44:31+00:00,[],
7055,https://github.com/AdityaBhargava64/Implementation_Full_Adder_using_VERILOG_HDL.git,2021-07-30 11:43:24+00:00,,0,AdityaBhargava64/Implementation_Full_Adder_using_VERILOG_HDL,391044001,SystemVerilog,Implementation_Full_Adder_using_VERILOG_HDL,6,0,2021-08-19 11:02:55+00:00,[],
7056,https://github.com/AndrewSain/HLS_Wrapper.git,2021-08-02 04:38:00+00:00,,0,AndrewSain/HLS_Wrapper,391816718,SystemVerilog,HLS_Wrapper,144,0,2021-11-22 23:32:51+00:00,[],
7057,https://github.com/paulikauro/verikool.git,2021-08-01 19:38:20+00:00,Fibonacci machines (CPUs),0,paulikauro/verikool,391721279,SystemVerilog,verikool,4,0,2021-08-02 15:31:21+00:00,[],
7058,https://github.com/zeeshandildar/Simple_alu_uvm_testbench.git,2021-08-02 05:52:43+00:00,,0,zeeshandildar/Simple_alu_uvm_testbench,391830442,SystemVerilog,Simple_alu_uvm_testbench,13,0,2021-08-04 06:59:34+00:00,[],
7059,https://github.com/CarsonChild/kogge_stone_adder.git,2021-08-12 20:51:38+00:00,,0,CarsonChild/kogge_stone_adder,395440885,SystemVerilog,kogge_stone_adder,3,0,2021-08-12 20:58:15+00:00,[],
7060,https://github.com/MalinaMetea/Snake-Game.git,2021-07-26 19:29:43+00:00,,0,MalinaMetea/Snake-Game,389746610,SystemVerilog,Snake-Game,9,0,2021-07-26 20:01:45+00:00,[],
7061,https://github.com/metzkorn/HDLtoys.git,2021-07-17 18:23:46+00:00,Small design toys to practice HDL with,0,metzkorn/HDLtoys,387011582,SystemVerilog,HDLtoys,1,0,2021-07-17 18:32:24+00:00,[],https://api.github.com/licenses/mit
7062,https://github.com/Stanzin15/jkFF.git,2021-05-27 08:25:14+00:00,SV tb for jk flip flop,0,Stanzin15/jkFF,371300281,SystemVerilog,jkFF,4,0,2024-02-25 20:12:25+00:00,[],
7063,https://github.com/lapd-soc/ECE510-EFV.git,2021-04-22 02:49:33+00:00,Coursework for Emerging Function Verification,0,lapd-soc/ECE510-EFV,360372660,,ECE510-EFV,97664,0,2023-03-20 02:19:08+00:00,[],
7064,https://github.com/rhgod/RISC-V_Project.git,2021-05-08 14:23:01+00:00,"Within the scope of this project, we are going to design ALU and Instruction decoder blocks of a RISC-V processor by using the basic SystemVerilog language features.",0,rhgod/RISC-V_Project,365533672,SystemVerilog,RISC-V_Project,2673,0,2021-05-09 07:11:40+00:00,[],
7065,https://github.com/zmh403/PULPino_on_Vitis.git,2021-05-12 07:36:55+00:00,Use Xilinx RTL Wizard flow to run program on the SoC PULPino,0,zmh403/PULPino_on_Vitis,366632023,SystemVerilog,PULPino_on_Vitis,695,0,2021-05-19 05:16:34+00:00,[],
7066,https://github.com/DarthZhu/MIPS_MultiCycle.git,2021-05-10 15:30:29+00:00,,0,DarthZhu/MIPS_MultiCycle,366090863,SystemVerilog,MIPS_MultiCycle,6561,0,2021-07-20 02:41:28+00:00,[],
7067,https://github.com/MegaSoC/SoC.git,2021-04-03 03:39:57+00:00,,0,MegaSoC/SoC,354191528,SystemVerilog,SoC,80,0,2023-01-27 23:40:44+00:00,[],
7068,https://github.com/Zihaokong/CSE148.git,2021-04-08 05:55:27+00:00,,0,Zihaokong/CSE148,355779744,SystemVerilog,CSE148,89797,0,2021-04-08 05:57:20+00:00,[],
7069,https://github.com/melt-umn/ableC-checkedc.git,2021-04-01 20:03:21+00:00,,0,melt-umn/ableC-checkedc,353813542,SystemVerilog,ableC-checkedc,16,0,2021-04-01 20:04:01+00:00,[],https://api.github.com/licenses/lgpl-3.0
7070,https://github.com/skmtti/mul.git,2021-04-08 14:20:45+00:00,32bit integer multiplier,0,skmtti/mul,355937003,SystemVerilog,mul,6,0,2022-04-13 18:24:19+00:00,[],
7071,https://github.com/knyuchen/fix_point_model.git,2021-04-10 13:57:58+00:00,Models for fixed-point computation,0,knyuchen/fix_point_model,356597450,SystemVerilog,fix_point_model,12,0,2021-11-23 01:49:50+00:00,"['fixed-point', 'systemverilog', 'matlab', 'python']",
7072,https://github.com/sunbanett40/XOR-Decryptor.git,2021-04-12 13:55:02+00:00,SystemVerilog Microprocessor for D2 Lab,0,sunbanett40/XOR-Decryptor,357213323,SystemVerilog,XOR-Decryptor,1447,0,2021-04-12 13:56:19+00:00,[],
7073,https://github.com/ChrisAndrea2011/Decoder.git,2021-04-26 10:08:20+00:00,,0,ChrisAndrea2011/Decoder,361703359,SystemVerilog,Decoder,3,0,2021-04-26 13:30:36+00:00,[],
7074,https://github.com/MaurizioCapra/automatic_synthesis.git,2021-04-22 07:18:23+00:00,,0,MaurizioCapra/automatic_synthesis,360427580,SystemVerilog,automatic_synthesis,10303,0,2021-04-22 07:33:38+00:00,[],
7075,https://github.com/zceeudd/ELEC0036---Microprocessor-GH.git,2021-04-14 10:08:55+00:00,,0,zceeudd/ELEC0036---Microprocessor-GH,357859677,SystemVerilog,ELEC0036---Microprocessor-GH,27,0,2021-04-14 10:12:03+00:00,[],
7076,https://github.com/LadyzRoman/verilog_i2c.git,2021-05-16 10:09:55+00:00,,1,LadyzRoman/verilog_i2c,367844767,SystemVerilog,verilog_i2c,6,0,2021-05-16 13:07:09+00:00,[],
7077,https://github.com/walberfa/SystemVerilog.git,2021-05-13 15:27:30+00:00,Implementações em SystemVerilog para a disciplina Projeto de Sistemas VLSI do Mestrado em Ciência da Computação (2021.1),0,walberfa/SystemVerilog,367091921,SystemVerilog,SystemVerilog,14,0,2021-05-27 21:17:26+00:00,[],
7078,https://github.com/damlasu/RISC-V-Tabanli-Islemci-Tasarimi.git,2021-05-28 06:43:39+00:00,"In this project, basic SystemVerilog language  reviews and test tests will be carried out on the ALU and  instruction decoder blocks",0,damlasu/RISC-V-Tabanli-Islemci-Tasarimi,371606308,SystemVerilog,RISC-V-Tabanli-Islemci-Tasarimi,5855,0,2021-05-28 07:43:19+00:00,[],
7079,https://github.com/muregad/Multicore-Cache-Design.git,2021-05-23 14:59:11+00:00,,1,muregad/Multicore-Cache-Design,370081860,SystemVerilog,Multicore-Cache-Design,44,0,2021-05-29 17:53:52+00:00,[],
7080,https://github.com/Grieverheart/v30mz.git,2021-05-16 16:19:48+00:00,Attempt to write a Verilog module for a NEC V30MZ cpu.,0,Grieverheart/v30mz,367930880,SystemVerilog,v30mz,47099,0,2021-08-30 22:19:42+00:00,[],
7081,https://github.com/shi428/ben-eater-cpu.git,2021-06-03 16:35:38+00:00,,0,shi428/ben-eater-cpu,373575556,SystemVerilog,ben-eater-cpu,121,0,2021-06-14 05:00:27+00:00,[],
7082,https://github.com/EngRaff92/SIMPLE_RISCV.git,2021-06-09 19:12:24+00:00,,0,EngRaff92/SIMPLE_RISCV,375464263,SystemVerilog,SIMPLE_RISCV,2163,0,2021-06-17 19:33:00+00:00,[],
7083,https://github.com/ianberdan/Single-Error-Correction-Double-Error-Detection.git,2021-06-17 23:33:30+00:00,,0,ianberdan/Single-Error-Correction-Double-Error-Detection,377984501,SystemVerilog,Single-Error-Correction-Double-Error-Detection,5,0,2021-06-17 23:34:46+00:00,[],
7084,https://github.com/sri-harshaa/AHB-Lite-verification.git,2021-05-19 22:01:03+00:00,ECE-593 final project,0,sri-harshaa/AHB-Lite-verification,369011483,SystemVerilog,AHB-Lite-verification,9407,0,2023-04-07 21:15:04+00:00,[],
7085,https://github.com/AloriumTechnology/evo_servo.git,2021-06-22 00:04:27+00:00,,0,AloriumTechnology/evo_servo,379093542,SystemVerilog,evo_servo,19,0,2021-06-22 00:28:35+00:00,[],https://api.github.com/licenses/mit
7086,https://github.com/sdesai41/RISCV-32-Processor.git,2021-07-12 18:48:19+00:00,5 stage Pipeline Processor with functionality for 35+ instructions for RiscV-32bit instruction set,0,sdesai41/RISCV-32-Processor,385350776,SystemVerilog,RISCV-32-Processor,118,0,2021-11-17 03:50:34+00:00,[],
7087,https://github.com/las-sc/scr7_l3.git,2021-07-05 19:33:54+00:00,,0,las-sc/scr7_l3,383246291,SystemVerilog,scr7_l3,15,0,2021-07-05 19:34:13+00:00,[],
7088,https://github.com/y38y38/verilator_dct.git,2021-07-02 19:21:42+00:00,,0,y38y38/verilator_dct,382442447,SystemVerilog,verilator_dct,13,0,2021-09-20 12:28:55+00:00,[],
7089,https://github.com/Sda19021971/CoreX16.git,2021-08-08 19:15:52+00:00,Single core with X16 instruction set,0,Sda19021971/CoreX16,394050418,SystemVerilog,CoreX16,204,0,2021-08-08 19:18:36+00:00,[],
7090,https://github.com/flaviens/pkg_function_issue.git,2021-07-27 07:25:53+00:00,,0,flaviens/pkg_function_issue,389887497,SystemVerilog,pkg_function_issue,999,0,2021-07-27 07:26:06+00:00,[],
7091,https://github.com/KetanJogi021/Hardware-Scheduler.git,2021-07-14 12:52:11+00:00,,0,KetanJogi021/Hardware-Scheduler,385939095,SystemVerilog,Hardware-Scheduler,11,0,2021-07-14 13:41:02+00:00,[],
7092,https://github.com/CutaAndrei/CutaAndrei.git,2021-07-14 14:46:04+00:00,Config files for my GitHub profile.,0,CutaAndrei/CutaAndrei,385974900,SystemVerilog,CutaAndrei,30,0,2022-10-31 07:33:52+00:00,"['config', 'github-config']",
7093,https://github.com/zaznov/MKDS-free-mode.git,2021-04-01 14:32:43+00:00,"free management of I / O pins mode of MKDS board, for subsequent connection with the main MKDS project",0,zaznov/MKDS-free-mode,353728464,SystemVerilog,MKDS-free-mode,439,0,2024-01-18 13:48:02+00:00,[],
7094,https://github.com/Nurl4n/Nim-Game.git,2021-03-30 17:05:30+00:00,Famous Nim Game coded in SystemVerilog and implemented on FPGA board (bety board) using Basys3 FPGA.,0,Nurl4n/Nim-Game,353079047,SystemVerilog,Nim-Game,41,0,2021-03-30 17:16:23+00:00,[],https://api.github.com/licenses/mit
7095,https://github.com/adnanashraf17501/uvm_and.git,2021-05-30 06:22:17+00:00,,0,adnanashraf17501/uvm_and,372139673,SystemVerilog,uvm_and,4,0,2021-05-30 06:22:51+00:00,[],
7096,https://github.com/Mahesh-Jasti/32Bit-MIPS_Processor.git,2021-06-03 09:55:46+00:00,,0,Mahesh-Jasti/32Bit-MIPS_Processor,373459630,SystemVerilog,32Bit-MIPS_Processor,13,0,2021-06-11 06:23:16+00:00,[],
7097,https://github.com/jacksonconte/cse140l_lab2.git,2021-05-05 23:03:20+00:00,,0,jacksonconte/cse140l_lab2,364727232,SystemVerilog,cse140l_lab2,9,0,2021-05-05 23:08:56+00:00,[],
7098,https://github.com/FJShen/chisel-adder-generator.git,2021-04-06 16:56:35+00:00,,0,FJShen/chisel-adder-generator,355265980,SystemVerilog,chisel-adder-generator,279,0,2021-04-14 14:43:15+00:00,[],
7099,https://github.com/ricardoadley/LOAC.git,2021-04-08 23:30:09+00:00,,0,ricardoadley/LOAC,356075006,SystemVerilog,LOAC,6,0,2021-09-11 22:30:50+00:00,[],
7100,https://github.com/scqthe/digital_design_projects.git,2021-04-02 21:36:03+00:00,Digital Design: Theory and Practice Projects,0,scqthe/digital_design_projects,354138713,SystemVerilog,digital_design_projects,237,0,2021-10-16 00:08:52+00:00,[],
7101,https://github.com/cchen82/ALS_VHDL.git,2021-04-21 01:01:14+00:00,Light sensor with SPI using VHDL on FPGA,0,cchen82/ALS_VHDL,359992636,SystemVerilog,ALS_VHDL,398,0,2021-04-29 02:52:39+00:00,[],
7102,https://github.com/OYounis/Basic-OOP-Testbench.git,2021-05-01 18:38:29+00:00,,0,OYounis/Basic-OOP-Testbench,363482130,SystemVerilog,Basic-OOP-Testbench,7,0,2021-05-03 23:48:35+00:00,[],
7103,https://github.com/tbriggs6/iic_vivado.git,2021-05-02 17:17:10+00:00,,0,tbriggs6/iic_vivado,363707774,SystemVerilog,iic_vivado,49,0,2021-05-02 17:17:32+00:00,[],
7104,https://github.com/leahyao/ALU.git,2021-05-19 13:04:39+00:00,basic integer arithmetic,0,leahyao/ALU,368871959,SystemVerilog,ALU,3,0,2021-05-19 15:18:26+00:00,[],
7105,https://github.com/simonlav24/SpaceInvadersFPGA.git,2021-05-28 08:00:25+00:00,,0,simonlav24/SpaceInvadersFPGA,371625778,SystemVerilog,SpaceInvadersFPGA,41585,0,2021-07-08 18:44:39+00:00,[],
7106,https://github.com/zyd2001/ECE551.git,2021-05-25 07:44:27+00:00,,0,zyd2001/ECE551,370607876,SystemVerilog,ECE551,151,0,2021-05-25 07:44:34+00:00,[],
7107,https://github.com/Vivek-Dave/UVM_TestBench_For_Binary_To_Gray_Code.git,2021-06-05 15:49:49+00:00,Complete UVM TestBench For Verification Of ,0,Vivek-Dave/UVM_TestBench_For_Binary_To_Gray_Code,374153409,SystemVerilog,UVM_TestBench_For_Binary_To_Gray_Code,87,0,2021-06-05 15:57:32+00:00,[],
7108,https://github.com/antivorg/MIPS-SV.git,2021-06-06 19:11:52+00:00,,0,antivorg/MIPS-SV,374443522,SystemVerilog,MIPS-SV,1,0,2021-06-19 06:28:45+00:00,[],
7109,https://github.com/adnanashraf17501/uvm-based-UART-Tx-Rx-verification-.git,2021-06-08 09:16:33+00:00,,0,adnanashraf17501/uvm-based-UART-Tx-Rx-verification-,374952100,SystemVerilog,uvm-based-UART-Tx-Rx-verification-,14,0,2021-06-08 09:34:42+00:00,[],
7110,https://github.com/sayleechandavarkar/uvm.git,2021-06-08 16:07:47+00:00,Some uvm based testing,0,sayleechandavarkar/uvm,375070024,SystemVerilog,uvm,1,0,2021-06-08 16:12:53+00:00,[],
7111,https://github.com/surendra55555/I2C.git,2021-04-10 13:36:01+00:00,,0,surendra55555/I2C,356591820,SystemVerilog,I2C,15,0,2021-04-10 17:23:32+00:00,[],
7112,https://github.com/AlekssGit/verilog_labs_mursaev.git,2021-05-16 19:01:34+00:00,,0,AlekssGit/verilog_labs_mursaev,367963386,SystemVerilog,verilog_labs_mursaev,60770,0,2021-05-25 06:03:00+00:00,[],
7113,https://github.com/Vivek-Dave/UVM_Testbench_For_Adder_Subtractor.git,2021-05-14 15:42:24+00:00,A Complete UVM TestBench For Verification Of Adder And Subtractor (Unsigned),1,Vivek-Dave/UVM_Testbench_For_Adder_Subtractor,367408693,SystemVerilog,UVM_Testbench_For_Adder_Subtractor,84,0,2021-05-15 02:21:06+00:00,"['uvm', 'verification', 'coverage', 'scoreboard']",
7114,https://github.com/vikas043/ES3B2_animation.git,2021-05-19 09:00:17+00:00,Contains Vivado Verilog source files for ES3B2 animation,0,vikas043/ES3B2_animation,368806104,SystemVerilog,ES3B2_animation,102,0,2021-05-19 09:08:52+00:00,[],https://api.github.com/licenses/cc0-1.0
7115,https://github.com/cypox/csm-dataflow.git,2021-05-22 01:15:22+00:00,,0,cypox/csm-dataflow,369688538,SystemVerilog,csm-dataflow,9,0,2021-05-26 23:49:19+00:00,[],
7116,https://github.com/Keerthan1994/RISC-V-Floating-Point-Processor.git,2021-04-18 02:40:51+00:00,Design of a floating point processor using RISC V ISA,1,Keerthan1994/RISC-V-Floating-Point-Processor,359028140,SystemVerilog,RISC-V-Floating-Point-Processor,33009,0,2021-06-15 20:00:32+00:00,[],
7117,https://github.com/burritoking/counter.git,2021-04-16 10:02:16+00:00,,0,burritoking/counter,358555029,SystemVerilog,counter,3,0,2021-04-16 11:23:26+00:00,[],
7118,https://github.com/DarthZhu/MIPS_SingleCycle.git,2021-04-21 15:15:50+00:00,Computer architecture lab2: Single cycle MIPS,0,DarthZhu/MIPS_SingleCycle,360215307,SystemVerilog,MIPS_SingleCycle,6479,0,2021-07-20 02:41:06+00:00,[],
7119,https://github.com/dv-engineer/sv-constraints.git,2021-04-21 16:06:10+00:00,,0,dv-engineer/sv-constraints,360230236,SystemVerilog,sv-constraints,0,0,2021-04-21 16:09:43+00:00,[],
7120,https://github.com/OmarNaffaa/ECE4305_Coursework.git,2021-04-08 01:56:49+00:00,,0,OmarNaffaa/ECE4305_Coursework,355733972,SystemVerilog,ECE4305_Coursework,963,0,2021-04-08 02:14:10+00:00,[],
7121,https://github.com/prasss/SHA256_sv.git,2021-04-02 13:45:38+00:00,SHA256 implementation in System verilog + Wrapper implementation as a part of my assignments at Hda,0,prasss/SHA256_sv,354031869,SystemVerilog,SHA256_sv,6,0,2021-04-02 13:50:37+00:00,[],
7122,https://github.com/miura-katsuyoshi/thermometer.git,2021-04-11 03:08:42+00:00,Parameterized thermometer encoder in SystemVerilog,0,miura-katsuyoshi/thermometer,356754010,SystemVerilog,thermometer,44,0,2021-04-11 06:38:53+00:00,[],
7123,https://github.com/swethakathir/Thesis.git,2021-05-06 13:51:17+00:00,,0,swethakathir/Thesis,364927024,SystemVerilog,Thesis,107,0,2021-08-19 10:17:18+00:00,[],
7124,https://github.com/mjc0608/really-simple-fadd.git,2021-05-06 18:25:25+00:00,A pipelined floating point adder (only part of the standard is implemented).,1,mjc0608/really-simple-fadd,365001718,SystemVerilog,really-simple-fadd,1,0,2021-05-06 18:30:40+00:00,[],
7125,https://github.com/waynarbocangel/cse141L.git,2021-07-26 09:07:56+00:00,All code for CSE141L for SS1 2021 ,0,waynarbocangel/cse141L,389573265,SystemVerilog,cse141L,28,0,2021-08-02 05:42:40+00:00,[],
7126,https://github.com/bhyou/systemverilog_demo.git,2021-06-30 08:29:34+00:00,,0,bhyou/systemverilog_demo,381629674,SystemVerilog,systemverilog_demo,32,0,2021-12-25 06:25:53+00:00,[],
7127,https://github.com/ukorat/SystemVerilog-Practice.git,2021-07-08 22:50:12+00:00,,0,ukorat/SystemVerilog-Practice,384265712,SystemVerilog,SystemVerilog-Practice,42,0,2022-06-07 17:49:02+00:00,[],
7128,https://github.com/xusong666/test.git,2021-07-30 14:34:33+00:00,the description is that the repository is used to train my git usage,0,xusong666/test,391094532,SystemVerilog,test,9,0,2021-08-30 14:44:39+00:00,[],
7129,https://github.com/chim20air/ACA-2021.git,2021-08-05 18:10:46+00:00,Repo de arquitectura de computadoras avanzada,0,chim20air/ACA-2021,393134004,SystemVerilog,ACA-2021,2112,0,2021-12-11 22:14:59+00:00,[],
7130,https://github.com/xJogger/puvm.git,2021-07-15 04:20:24+00:00,,1,xJogger/puvm,386160856,SystemVerilog,puvm,116,0,2021-07-15 04:31:36+00:00,[],
7131,https://github.com/dlvalencia/ECE260C_FinalProject.git,2021-06-10 19:47:11+00:00,UVM Converted Test Setup for Decryptor,0,dlvalencia/ECE260C_FinalProject,375813567,SystemVerilog,ECE260C_FinalProject,8,0,2021-06-10 19:47:17+00:00,[],
7132,https://github.com/Sash-github-account/simple_alu_interview.git,2021-06-13 03:59:26+00:00,"Simple ALU with stubs, performs add, sub, mult, div and arithmetic mean. Verified using a UVM test-bench.",0,Sash-github-account/simple_alu_interview,376433720,SystemVerilog,simple_alu_interview,2544,0,2021-06-13 04:03:51+00:00,[],
7133,https://github.com/lsplf/vitis_hls.git,2021-06-17 12:15:27+00:00,,0,lsplf/vitis_hls,377819434,SystemVerilog,vitis_hls,45,0,2021-06-17 12:24:23+00:00,[],
7134,https://github.com/ianberdan/FPGA-Pipelined-Processor.git,2021-06-16 23:24:17+00:00,,0,ianberdan/FPGA-Pipelined-Processor,377651830,SystemVerilog,FPGA-Pipelined-Processor,10,0,2021-06-17 23:29:22+00:00,[],
7135,https://github.com/Risto97/test_ip.git,2021-06-17 14:35:42+00:00,,0,Risto97/test_ip,377861433,SystemVerilog,test_ip,4,0,2021-06-17 15:38:14+00:00,[],
7136,https://github.com/Yash-tomar/My-projects.git,2021-07-05 17:21:14+00:00,,0,Yash-tomar/My-projects,383215714,SystemVerilog,My-projects,90,0,2022-10-30 20:12:02+00:00,[],
7137,https://github.com/rag1404/out_of_order_scoreboard.git,2021-03-31 06:00:06+00:00,out of order transactions checking ,0,rag1404/out_of_order_scoreboard,353243522,SystemVerilog,out_of_order_scoreboard,6,0,2021-04-08 17:29:58+00:00,[],
7138,https://github.com/SSJ-0/Synchronous_FIFO.git,2021-05-03 14:38:58+00:00,A Verilog RTL for a simple synchronous fifo,0,SSJ-0/Synchronous_FIFO,363960295,SystemVerilog,Synchronous_FIFO,12,0,2021-05-03 20:22:23+00:00,[],https://api.github.com/licenses/mit
7139,https://github.com/EilamNir/EE_lab_space_invaders.git,2021-05-03 15:27:31+00:00,,0,EilamNir/EE_lab_space_invaders,363975285,SystemVerilog,EE_lab_space_invaders,3790,0,2021-06-09 11:07:43+00:00,[],
7140,https://github.com/sgpthomas/mandlebrot-fpga.git,2021-05-24 21:15:35+00:00,,0,sgpthomas/mandlebrot-fpga,370486621,SystemVerilog,mandlebrot-fpga,2946,0,2021-07-23 00:45:21+00:00,[],
7141,https://github.com/Vivek-Dave/UVM_TestBench_For_ALU.git,2021-05-25 03:47:14+00:00,Complete UVM TestBench For Verification Of Arithmetic And Logical Unit ,0,Vivek-Dave/UVM_TestBench_For_ALU,370556209,SystemVerilog,UVM_TestBench_For_ALU,130,0,2021-05-25 03:55:02+00:00,[],
7142,https://github.com/Danil1997Dev/t.git,2021-06-04 12:17:25+00:00,,0,Danil1997Dev/t,373831829,SystemVerilog,t,3,0,2021-06-04 12:36:12+00:00,[],
7143,https://github.com/moriyaprateek/ibex.git,2021-05-13 07:14:06+00:00,,2,moriyaprateek/ibex,366966069,SystemVerilog,ibex,5912,0,2021-10-30 07:41:55+00:00,[],https://api.github.com/licenses/apache-2.0
7144,https://github.com/deserthobo13/SV_TicTacToe.git,2021-06-04 03:57:47+00:00,A different Tic-Tac-Toe in SV.,0,deserthobo13/SV_TicTacToe,373714578,SystemVerilog,SV_TicTacToe,14,0,2021-06-04 04:02:11+00:00,[],
7145,https://github.com/aakash-n-gupta/CoffeeVendingMachine.git,2021-06-03 10:19:21+00:00,,0,aakash-n-gupta/CoffeeVendingMachine,373466270,SystemVerilog,CoffeeVendingMachine,3514,0,2021-06-03 14:21:48+00:00,[],
7146,https://github.com/alkanalperen/CS223TERM-PROJECT.git,2021-05-25 10:11:08+00:00,,0,alkanalperen/CS223TERM-PROJECT,370648838,SystemVerilog,CS223TERM-PROJECT,3015,0,2021-05-25 10:14:08+00:00,[],
7147,https://github.com/ankitsinghyadav81967/Digital_designs.git,2021-06-19 15:21:25+00:00,Config files for my GitHub profile.,0,ankitsinghyadav81967/Digital_designs,378442939,SystemVerilog,Digital_designs,40,0,2023-05-19 11:31:06+00:00,"['config', 'github-config']",
7148,https://github.com/DevCode-C/SystemVerilog_Class.git,2021-05-28 04:52:02+00:00,,0,DevCode-C/SystemVerilog_Class,371583373,SystemVerilog,SystemVerilog_Class,278,0,2021-05-28 04:53:24+00:00,[],
7149,https://github.com/qqn2/uart_16650_sv.git,2021-05-09 22:02:14+00:00,,1,qqn2/uart_16650_sv,365856512,SystemVerilog,uart_16650_sv,583,0,2021-05-09 22:03:10+00:00,[],
7150,https://github.com/daniel12091/final.git,2021-05-11 10:58:52+00:00,,0,daniel12091/final,366350215,SystemVerilog,final,802,0,2021-05-11 11:17:45+00:00,[],
7151,https://github.com/adnanashraf17501/uvm_AXI-4-.git,2021-06-08 08:48:04+00:00,,1,adnanashraf17501/uvm_AXI-4-,374943629,SystemVerilog,uvm_AXI-4-,95,0,2021-06-08 09:37:27+00:00,[],
7152,https://github.com/likaigelikaige/esg_hdl.git,2021-06-15 09:04:21+00:00,Convenient FPGA communication,0,likaigelikaige/esg_hdl,377101019,,esg_hdl,65,0,2021-07-05 06:01:51+00:00,[],
7153,https://github.com/braamBeresford/multimedia-final-project.git,2021-04-11 00:55:43+00:00,,0,braamBeresford/multimedia-final-project,356734300,SystemVerilog,multimedia-final-project,288,0,2021-06-01 15:55:41+00:00,[],
7154,https://github.com/chgarrettv/sv-rv32im-soft-processor.git,2021-04-27 20:32:08+00:00,"A simple, single core, multi-cycle, RV32IM soft processor. Designed for the Arty A7 FPGA.",0,chgarrettv/sv-rv32im-soft-processor,362243049,SystemVerilog,sv-rv32im-soft-processor,11,0,2021-04-27 20:36:05+00:00,[],
7155,https://github.com/MeaninglessCode/KaratsubaMultiplier_n-Bit.git,2021-04-28 19:31:22+00:00,A generic Karatsuba multiplier.,0,MeaninglessCode/KaratsubaMultiplier_n-Bit,362584894,SystemVerilog,KaratsubaMultiplier_n-Bit,16,0,2022-11-25 23:14:52+00:00,"['systemverilog', 'karatsuba', 'multiplier']",https://api.github.com/licenses/gpl-3.0
7156,https://github.com/mfkiwl/pulpino_accelerator.git,2021-04-14 18:52:18+00:00,,0,mfkiwl/pulpino_accelerator,358010647,SystemVerilog,pulpino_accelerator,31,0,2021-05-22 23:11:43+00:00,[],
7157,https://github.com/surendra55555/D_FlipFlop.git,2021-04-08 04:11:19+00:00,,0,surendra55555/D_FlipFlop,355760002,SystemVerilog,D_FlipFlop,5,0,2021-04-08 05:29:49+00:00,[],
7158,https://github.com/alainlou/6502.git,2021-04-05 03:53:51+00:00,,0,alainlou/6502,354710241,SystemVerilog,6502,160,0,2021-09-19 04:02:13+00:00,[],
7159,https://github.com/vazchandrashekar/vazchandrashekar.git,2021-04-25 23:35:47+00:00,Config files for my GitHub profile.,0,vazchandrashekar/vazchandrashekar,361562751,SystemVerilog,vazchandrashekar,1,0,2021-04-25 23:41:20+00:00,"['config', 'github-config']",
7160,https://github.com/yangli900520/Fir-Filter.git,2021-04-08 21:51:22+00:00,Configurable Fir Filter,0,yangli900520/Fir-Filter,356057001,SystemVerilog,Fir-Filter,593,0,2021-04-08 21:51:46+00:00,[],
7161,https://github.com/ajnaboulsi/ECE385.git,2021-04-23 05:32:14+00:00,,0,ajnaboulsi/ECE385,360773462,SystemVerilog,ECE385,12836,0,2022-12-13 06:54:14+00:00,[],
7162,https://github.com/EStrugar/systemVerilogCPU.git,2021-06-06 16:37:28+00:00,program files and testbenches for a CPU to be compiled. Auxiliary coding for VGA controller also completed,0,EStrugar/systemVerilogCPU,374411543,SystemVerilog,systemVerilogCPU,13,0,2021-06-07 11:35:11+00:00,[],
7163,https://github.com/yakir8/CPU.git,2021-08-07 13:49:26+00:00,,0,yakir8/CPU,393696207,SystemVerilog,CPU,285,0,2021-08-07 15:46:49+00:00,[],https://api.github.com/licenses/apache-2.0
7164,https://github.com/Vilanya/SIT329-Week-3.git,2021-08-08 10:33:56+00:00,,0,Vilanya/SIT329-Week-3,393930704,SystemVerilog,SIT329-Week-3,1,0,2021-08-08 10:34:14+00:00,[],
7165,https://github.com/flaviens/streaming_operator_issue.git,2021-07-26 13:13:29+00:00,,0,flaviens/streaming_operator_issue,389637908,SystemVerilog,streaming_operator_issue,1,0,2021-07-26 13:15:32+00:00,[],
7166,https://github.com/mayank-kabra2001/tensor-core-viz.git,2021-06-28 14:44:07+00:00,,0,mayank-kabra2001/tensor-core-viz,381065162,SystemVerilog,tensor-core-viz,62,0,2021-07-07 08:43:20+00:00,[],
7167,https://github.com/kura197/RISCV_pipeline_processor.git,2021-08-02 15:09:32+00:00,RISC-V rv32i 5-stage pipeline processor,1,kura197/RISCV_pipeline_processor,391995010,SystemVerilog,RISCV_pipeline_processor,32,0,2021-10-20 18:33:18+00:00,[],
7168,https://github.com/dorriehammond/System_Verilog.git,2021-07-29 18:57:53+00:00,,0,dorriehammond/System_Verilog,390823041,SystemVerilog,System_Verilog,4417,0,2021-07-29 19:14:55+00:00,[],
7169,https://github.com/maggiez-z/lab6.git,2021-07-15 00:07:25+00:00,,0,maggiez-z/lab6,386109400,SystemVerilog,lab6,7006,0,2021-07-15 00:18:59+00:00,[],
7170,https://github.com/Engr315/P8_Pipeline_Dot.git,2021-04-05 14:41:01+00:00,,0,Engr315/P8_Pipeline_Dot,354865777,SystemVerilog,P8_Pipeline_Dot,269,0,2022-11-03 14:53:22+00:00,[],
7171,https://github.com/hungbk99/renas-mcu.git,2021-04-01 16:56:14+00:00,Bachelor Thesis,0,hungbk99/renas-mcu,353768315,SystemVerilog,renas-mcu,65062,0,2021-08-04 13:45:21+00:00,[],https://api.github.com/licenses/apache-2.0
7172,https://github.com/GuavTek/DDS2_Term.git,2021-04-06 15:26:21+00:00,Term project in Design of Digital Circuits 2,0,GuavTek/DDS2_Term,355238581,SystemVerilog,DDS2_Term,608,0,2022-04-24 15:34:28+00:00,[],
7173,https://github.com/cgiesler/BusDriversProject.git,2021-03-30 22:56:30+00:00,,0,cgiesler/BusDriversProject,353162382,SystemVerilog,BusDriversProject,503177,0,2021-05-08 05:38:40+00:00,[],https://api.github.com/licenses/mit
7174,https://github.com/OikawaLab/NexysVideo_UDP2Probe.git,2021-05-13 07:21:11+00:00,,0,OikawaLab/NexysVideo_UDP2Probe,366967788,SystemVerilog,NexysVideo_UDP2Probe,35791,0,2021-05-13 07:22:20+00:00,[],
7175,https://github.com/tharinduSamare/Multicore_processor_SystemVerilog_design.git,2021-05-21 13:55:01+00:00,This is a multicore processor specially designed for matrix multiplication.,0,tharinduSamare/Multicore_processor_SystemVerilog_design,369551840,SystemVerilog,Multicore_processor_SystemVerilog_design,8220,0,2022-01-08 12:01:22+00:00,"['fpga', 'simulation', 'systemverilog', 'python3']",
7176,https://github.com/Unparalleled-Calvin/dragon-chip.git,2021-05-24 08:33:14+00:00,,0,Unparalleled-Calvin/dragon-chip,370282275,SystemVerilog,dragon-chip,4345,0,2022-02-06 03:25:46+00:00,[],
7177,https://github.com/nfproc/TRNG_IP.git,2021-04-22 10:09:22+00:00,Versatile TRNG IP Core for PYNQ,0,nfproc/TRNG_IP,360474933,SystemVerilog,TRNG_IP,23,0,2021-10-28 08:23:09+00:00,[],
7178,https://github.com/zceeudd/ELEC0036---Microprocessor-LH.git,2021-04-13 20:49:05+00:00,,0,zceeudd/ELEC0036---Microprocessor-LH,357684846,SystemVerilog,ELEC0036---Microprocessor-LH,27,0,2021-04-13 20:50:22+00:00,[],
7179,https://github.com/francisco-groppo/grupo-a-mic-mic.git,2021-05-08 20:33:41+00:00,,0,francisco-groppo/grupo-a-mic-mic,365606102,SystemVerilog,grupo-a-mic-mic,1742,0,2021-07-02 00:23:19+00:00,[],
7180,https://github.com/rushi0005/Verilog_counter_coding.git,2021-04-11 06:14:27+00:00,,0,rushi0005/Verilog_counter_coding,356783144,SystemVerilog,Verilog_counter_coding,5,0,2021-04-11 22:50:19+00:00,[],
7181,https://github.com/kuocy/scaling-octo-potato.git,2021-04-11 14:39:36+00:00,,0,kuocy/scaling-octo-potato,356892822,,scaling-octo-potato,9,0,2021-07-21 19:38:44+00:00,[],
7182,https://github.com/miura-katsuyoshi/LFSR.git,2021-04-10 01:55:11+00:00,Parameterized LFSR (Linear Feedback Shift Register) implementation in SystemVerilog,0,miura-katsuyoshi/LFSR,356441792,SystemVerilog,LFSR,27,0,2021-04-10 20:29:23+00:00,[],
7183,https://github.com/yichungchen84/RISCV.git,2021-06-17 03:38:56+00:00,,0,yichungchen84/RISCV,377695563,SystemVerilog,RISCV,17,0,2021-06-17 03:39:35+00:00,[],
7184,https://github.com/FlipperCoin/sim2.git,2021-06-13 16:09:21+00:00,,0,FlipperCoin/sim2,376586276,SystemVerilog,sim2,49,0,2021-06-15 22:00:11+00:00,[],
7185,https://github.com/kpavan24/CRC-Transmitter.git,2021-06-10 11:54:09+00:00,,0,kpavan24/CRC-Transmitter,375680236,SystemVerilog,CRC-Transmitter,435,0,2021-07-21 08:26:04+00:00,[],
7186,https://github.com/mario-yankov-todorov/SV_uvm_training.git,2021-05-18 08:38:08+00:00,,0,mario-yankov-todorov/SV_uvm_training,368458827,SystemVerilog,SV_uvm_training,213,0,2021-06-18 19:38:21+00:00,[],
7187,https://github.com/motheshashidhar/ece-571-project.git,2021-06-06 07:22:33+00:00,dma,0,motheshashidhar/ece-571-project,374294942,SystemVerilog,ece-571-project,52,0,2021-06-11 06:53:57+00:00,[],
7188,https://github.com/archive-Otcoy/async-wasm-metal.git,2021-06-06 09:18:16+00:00,An experimental physics asynchronous multi-core implementation of WebAssembly.,0,archive-Otcoy/async-wasm-metal,374317010,SystemVerilog,async-wasm-metal,30,0,2021-08-04 12:03:02+00:00,[],https://api.github.com/licenses/mpl-2.0
7189,https://github.com/jackson-nestelroad/verilog-mips-processor.git,2021-04-26 16:09:52+00:00,Single-cycle 32-bit MIPS processor implemented in SystemVerilog.,0,jackson-nestelroad/verilog-mips-processor,361813291,SystemVerilog,verilog-mips-processor,16,0,2021-05-03 16:54:52+00:00,"['verilog', 'mips', 'processor', 'cpu']",
7190,https://github.com/DavidWigley/EECE6540.git,2021-05-29 15:43:12+00:00,,0,DavidWigley/EECE6540,372010797,SystemVerilog,EECE6540,690149,0,2021-05-29 17:40:31+00:00,[],
7191,https://github.com/FlipperCoin/sim1.git,2021-05-28 13:00:13+00:00,,0,FlipperCoin/sim1,371701858,SystemVerilog,sim1,9,0,2021-06-01 12:04:13+00:00,[],
7192,https://github.com/Fillipek/FPGA-gps-reader-via-uart.git,2021-05-28 08:53:18+00:00,,0,Fillipek/FPGA-gps-reader-via-uart,371639467,SystemVerilog,FPGA-gps-reader-via-uart,13,0,2021-05-28 13:13:01+00:00,[],
7193,https://github.com/EbenezerMetrics/Apb_master.git,2021-07-15 12:22:53+00:00,APB protocol master for demo ,0,EbenezerMetrics/Apb_master,386280187,SystemVerilog,Apb_master,73,0,2021-08-19 14:07:44+00:00,[],
7194,https://github.com/lcnz/RSTCypher-Encryption.git,2021-07-11 13:11:58+00:00,,1,lcnz/RSTCypher-Encryption,384951515,SystemVerilog,RSTCypher-Encryption,2025,0,2021-09-23 06:27:40+00:00,[],
7195,https://github.com/YAEemf/PWM_test.git,2021-07-14 12:22:53+00:00,,0,YAEemf/PWM_test,385930875,SystemVerilog,PWM_test,11,0,2021-08-01 13:28:27+00:00,[],
7196,https://github.com/Eric-Souza/binary-text-encryptor-decryptor.git,2021-07-14 16:16:16+00:00,"An algorithm, developed in Verilog hardware design language (HDL), that encrypts a text input into binary, then decrypts it back, using logic gates and public/private keys. This system was developed as a Logical Systems subject exercise (UFMG).",0,Eric-Souza/binary-text-encryptor-decryptor,386001910,SystemVerilog,binary-text-encryptor-decryptor,4,0,2021-08-17 21:09:02+00:00,"['verilog', 'computer-science', 'cryptography', 'logical-operators', 'logical-clocks', 'hardware', 'hdl', 'ufmg', 'encryption']",
7197,https://github.com/Fizz-Trickster/SPI.git,2021-07-04 07:43:10+00:00,,0,Fizz-Trickster/SPI,382793109,SystemVerilog,SPI,5,0,2021-07-18 14:40:24+00:00,[],
7198,https://github.com/Gabo-82/ELO212_ses8.git,2021-07-05 21:49:30+00:00,,0,Gabo-82/ELO212_ses8,383271835,SystemVerilog,ELO212_ses8,199,0,2021-07-05 21:52:11+00:00,[],
7199,https://github.com/shreejnanesh/DES_Hardware_Accelerator.git,2021-06-27 11:01:38+00:00,"Hardware acceleration combines the flexibility of general-purpose processors, such as CPUs, with the efficiency of fully customized hardware, such as GPUs and ASICs, increasing efficiency by orders of magnitude when any application is implemented higher up the hierarchy of digital computing systems",1,shreejnanesh/DES_Hardware_Accelerator,380717398,SystemVerilog,DES_Hardware_Accelerator,18722,0,2021-06-27 12:36:57+00:00,[],https://api.github.com/licenses/afl-3.0
7200,https://github.com/mfkiwl/srvio.git,2021-07-18 07:37:34+00:00,Synthesizeble Risc-V In-order Processor,0,mfkiwl/srvio,387118569,SystemVerilog,srvio,16164,0,2021-09-06 04:22:05+00:00,[],https://api.github.com/licenses/mit
7201,https://github.com/filipignjatic/sort_alg.git,2021-07-18 09:55:03+00:00,,0,filipignjatic/sort_alg,387142440,SystemVerilog,sort_alg,96,0,2021-08-31 08:17:01+00:00,[],
7202,https://github.com/flaviens/pulpissimo-yosys-issue.git,2021-07-29 14:50:06+00:00,,0,flaviens/pulpissimo-yosys-issue,390757552,SystemVerilog,pulpissimo-yosys-issue,989,0,2021-07-29 14:52:58+00:00,[],
7203,https://github.com/Anant-Gupta31/Verilog-combinationalckts.git,2021-07-29 20:45:47+00:00,,0,Anant-Gupta31/Verilog-combinationalckts,390846446,SystemVerilog,Verilog-combinationalckts,197,0,2021-08-09 14:08:18+00:00,[],
7204,https://github.com/Engr315/P9_Parallel_Dot.git,2021-04-22 10:39:33+00:00,,0,Engr315/P9_Parallel_Dot,360482778,SystemVerilog,P9_Parallel_Dot,1840,0,2022-11-28 15:16:23+00:00,[],
7205,https://github.com/gaganminocha/systemverilog.git,2021-05-26 18:39:17+00:00,System Verilog designs and testbenches.,0,gaganminocha/systemverilog,371135678,SystemVerilog,systemverilog,148,0,2022-01-10 21:26:55+00:00,[],https://api.github.com/licenses/mit
7206,https://github.com/ARC-Lab-UF/sv-tutorial.git,2021-12-10 17:02:02+00:00,SystemVerilog Tutorial,25,ARC-Lab-UF/sv-tutorial,437053467,SystemVerilog,sv-tutorial,3124,94,2024-04-09 04:48:36+00:00,[],https://api.github.com/licenses/gpl-3.0
7207,https://github.com/dpretet/axi-crossbar.git,2021-09-23 18:26:55+00:00,An AXI4 crossbar implementation in SystemVerilog,21,dpretet/axi-crossbar,409702283,SystemVerilog,axi-crossbar,225,76,2024-04-10 11:54:41+00:00,"['axi4', 'axi4-lite', 'axi4-protocol', 'axi4-full', 'crossbar', 'interconnect', 'fpga', 'fpga-soc', 'processor', 'asic-design', 'asic', 'soc', 'amba', 'arm', 'verilog', 'riscv', 'riscv32', 'riscv64', 'monodraw']",https://api.github.com/licenses/mit
7208,https://github.com/WangXuan95/UH-JLS.git,2021-09-11 15:04:15+00:00,"FPGA-based Ultra-High Throughput JPEG-LS encoder, which provides lossless image compression. 一个超高性能的FPGA JPEG-LS编码器，用来进行无损图像压缩。",13,WangXuan95/UH-JLS,405408817,SystemVerilog,UH-JLS,5118,75,2024-04-01 12:25:37+00:00,"['fpga', 'image-compression', 'image-encoder', 'jpeg-ls', 'verilog']",https://api.github.com/licenses/gpl-3.0
7209,https://github.com/BrianHGinc/BrianHG-DDR3-Controller.git,2021-08-29 01:50:59+00:00,"DDR3 Controller v1.65, 16 read/write ports, configurable widths, priority, auto-burst size & cache on each port.  VGA/HDMI multiwindow video controller with alpha-blended layers.  Docs & TBs included.",28,BrianHGinc/BrianHG-DDR3-Controller,400927984,SystemVerilog,BrianHG-DDR3-Controller,10419,64,2024-04-08 18:21:22+00:00,"['ddr3', 'verilog', 'systemverilog', 'altera', 'intel', 'lattice', 'xilinx', 'testbenches', 'fpga', 'hdl']",
7210,https://github.com/howard789/uvm_example.git,2021-09-22 01:07:51+00:00,This is a uvm example. The video is available at https://www.bilibili.com/video/BV1yq4y177f6/,10,howard789/uvm_example,409022340,SystemVerilog,uvm_example,2933,34,2024-02-26 07:10:44+00:00,[],
7211,https://github.com/CompuSAR/wd65c02.git,2021-09-16 18:21:11+00:00,Cycle accurate FPGA implementation of various 6502 CPU variants,1,CompuSAR/wd65c02,407271604,SystemVerilog,wd65c02,134,27,2024-02-07 18:43:18+00:00,[],https://api.github.com/licenses/gpl-2.0
7212,https://github.com/nahidrn/axi_vip_master.git,2021-11-24 11:51:39+00:00,Sample UVM code for axi ram dut,4,nahidrn/axi_vip_master,431464446,SystemVerilog,axi_vip_master,19,23,2024-03-27 07:13:27+00:00,[],
7213,https://github.com/muneeb-mbytes/apb_avip.git,2021-10-31 18:12:14+00:00,ABP Accelerated VIP,12,muneeb-mbytes/apb_avip,423225463,SystemVerilog,apb_avip,7954,22,2023-09-18 17:32:12+00:00,[],
7214,https://github.com/ekiwi/rtl-fuzz-lab.git,2021-09-01 21:32:56+00:00,A Modular Open-Source Hardware Fuzzing Framework,1,ekiwi/rtl-fuzz-lab,402208724,SystemVerilog,rtl-fuzz-lab,1603,22,2024-04-09 03:28:16+00:00,[],https://api.github.com/licenses/bsd-2-clause
7215,https://github.com/merledu/azadi-soc.git,2021-08-27 11:25:07+00:00,Azadi (Freedom) is a 32-bit RISC-V CPU based System on Chip.,11,merledu/azadi-soc,400485607,SystemVerilog,azadi-soc,47525,21,2024-04-12 07:49:58+00:00,"['riscv', 'systemverilog', 'soc', 'ibex']",
7216,https://github.com/muneeb-mbytes/spi_avip.git,2021-10-11 09:16:47+00:00,SPI protocol Accelerated VIP ,16,muneeb-mbytes/spi_avip,415856135,SystemVerilog,spi_avip,26835,21,2023-07-04 13:22:10+00:00,[],
7217,https://github.com/Suntrakanesh/System-Verilog-bootcamp.git,2021-09-20 16:15:12+00:00,System Verilog BootCamp,6,Suntrakanesh/System-Verilog-bootcamp,408514112,SystemVerilog,System-Verilog-bootcamp,196,19,2024-04-08 19:00:05+00:00,"['systemverilog', 'vhdl', 'vlsi', 'ovm', 'uvm', 'verification', 'testbench']",https://api.github.com/licenses/gpl-3.0
7218,https://github.com/gilgamsh/GenshinCPU.git,2021-09-08 06:45:12+00:00,Our repository for NSCSCC,0,gilgamsh/GenshinCPU,404240148,SystemVerilog,GenshinCPU,6949,16,2024-03-12 12:47:12+00:00,[],https://api.github.com/licenses/mit
7219,https://github.com/msinger/iceboy.git,2021-08-16 21:48:09+00:00,Game Boy clone for Lattice iCE40 FPGAs,1,msinger/iceboy,396984723,SystemVerilog,iceboy,20551,16,2024-04-05 00:48:00+00:00,"['gameboy', 'fpga', 'verilog', 'systemverilog', 'game-boy', 'dmg-001', 'electronics', 'nintendo']",
7220,https://github.com/nietzhuang/RISC-V-SoC-Design.git,2021-10-05 13:18:17+00:00,Single RISC-V CPU attached on AMBA AHB with Instruction and Data memories.,0,nietzhuang/RISC-V-SoC-Design,413825844,SystemVerilog,RISC-V-SoC-Design,52979,11,2024-04-13 07:10:30+00:00,[],
7221,https://github.com/azonenberg/sata-sniffer.git,2021-11-09 01:02:14+00:00,SATA sniffing,0,azonenberg/sata-sniffer,426045142,SystemVerilog,sata-sniffer,12300,11,2024-03-01 16:40:53+00:00,[],
7222,https://github.com/liuch00/fpga_cnn.git,2021-11-27 08:06:45+00:00,基于FPGA的CNN图像分类系统,1,liuch00/fpga_cnn,432403656,SystemVerilog,fpga_cnn,30467,10,2024-03-25 14:10:11+00:00,[],
7223,https://github.com/makararasi/UVM_AXI4-Stream.git,2021-09-24 06:29:20+00:00,,4,makararasi/UVM_AXI4-Stream,409856801,SystemVerilog,UVM_AXI4-Stream,8050,10,2024-03-14 02:47:24+00:00,[],https://api.github.com/licenses/mit
7224,https://github.com/evanmays/cherrycore.git,2021-09-04 20:47:49+00:00,AI Training Chip,1,evanmays/cherrycore,403153302,SystemVerilog,cherrycore,1616,10,2024-02-12 02:09:35+00:00,[],
7225,https://github.com/monkey2000/rv5stage.git,2021-08-14 15:06:40+00:00,My very first attempt on pipelined RV32I processor,0,monkey2000/rv5stage,396043338,SystemVerilog,rv5stage,778,9,2022-02-17 14:20:27+00:00,[],
7226,https://github.com/amichai-bd/rvc_asap.git,2021-10-27 15:47:20+00:00,riscv-core-as-simple-as-passible,3,amichai-bd/rvc_asap,421879644,SystemVerilog,rvc_asap,19417,9,2023-06-09 19:44:39+00:00,"['fpga', 'riscv', 'systemverilog']",https://api.github.com/licenses/mit
7227,https://github.com/JasonBrave/pci-edu.git,2021-12-04 00:16:56+00:00,SystemVerilog implemention of QEMU PCI edu device,0,JasonBrave/pci-edu,434768163,SystemVerilog,pci-edu,58,8,2023-12-06 08:58:22+00:00,"['pci', 'pci-devices', 'verilog', 'systemverilog', 'verilator', 'pci-bus']",https://api.github.com/licenses/gpl-3.0
7228,https://github.com/waviousllc/wav-d2d-hw.git,2021-10-12 13:59:30+00:00,Wavious High Speed Die-to-die,4,waviousllc/wav-d2d-hw,416359836,SystemVerilog,wav-d2d-hw,140,8,2024-03-26 18:59:08+00:00,[],https://api.github.com/licenses/apache-2.0
7229,https://github.com/Maxpicca-Li/LaunchMIPS.git,2021-12-21 03:10:44+00:00,,0,Maxpicca-Li/LaunchMIPS,440374966,SystemVerilog,LaunchMIPS,19406,7,2023-01-28 02:46:15+00:00,[],
7230,https://github.com/Space-Odie/GA.git,2021-12-11 01:53:20+00:00,Genetic Algo - Verilog,0,Space-Odie/GA,437162561,SystemVerilog,GA,4712,7,2024-04-07 04:22:08+00:00,[],
7231,https://github.com/ChrisShakkour/RV32I-MAF-project.git,2021-09-03 07:32:53+00:00,Designinig a Pipeline in-order 5 stage RISC-V core RV32I-MAF,1,ChrisShakkour/RV32I-MAF-project,402685481,SystemVerilog,RV32I-MAF-project,10906,7,2024-01-12 10:23:53+00:00,"['riscv', 'risc-v', 'pipline', 'core', 'systemverilog', 'isa', 'assembly', 'vlsi', 'rtl', 'chipdesign', 'vlsi-design']",https://api.github.com/licenses/mit
7232,https://github.com/chipsalliance/verible-formatter-action.git,2021-08-31 10:42:19+00:00,,7,chipsalliance/verible-formatter-action,401665760,SystemVerilog,verible-formatter-action,33,7,2024-03-02 10:30:18+00:00,[],https://api.github.com/licenses/apache-2.0
7233,https://github.com/hyf6661669/verilog_library.git,2021-12-23 11:34:03+00:00,HYF's high quality verilog codes,2,hyf6661669/verilog_library,441160194,SystemVerilog,verilog_library,1988,7,2024-03-23 08:36:39+00:00,[],https://api.github.com/licenses/bsd-3-clause
7234,https://github.com/ecilasun/nekoyon.git,2021-08-28 21:55:05+00:00,Fourth iteration of the Neko series of SoC,2,ecilasun/nekoyon,400897473,SystemVerilog,nekoyon,817,7,2023-09-30 05:49:18+00:00,[],https://api.github.com/licenses/mit
7235,https://github.com/tishi43/sgbm.git,2021-09-14 06:37:27+00:00,implementation of opencv sgbm(disparity map extract) on FPGA,2,tishi43/sgbm,406253381,SystemVerilog,sgbm,1945,7,2023-05-10 11:07:25+00:00,[],
7236,https://github.com/BrianHGinc/SystemVerilog-HDMI-encoder-serializer-PLL-generator.git,2021-09-05 04:47:25+00:00,"SystemVerilog HDMI encoder, serializer & PLL generator.  Tested on Cyclone IV-E, Compatible with Quartus 13.0 through Quartus Prime 20.1.",1,BrianHGinc/SystemVerilog-HDMI-encoder-serializer-PLL-generator,403217190,SystemVerilog,SystemVerilog-HDMI-encoder-serializer-PLL-generator,94,7,2024-01-06 20:14:30+00:00,"['hdmi', 'dvi', 'hdmi-encoder', 'dvi-encoder', 'hdl', 'systemverilog', 'altera', 'intel', 'quartus']",
7237,https://github.com/Elias-Rosales/MIPSVerification_UVM.git,2021-12-21 20:55:24+00:00,Verification of a MIPS Multi-Cycle Microprocessor using UVM,2,Elias-Rosales/MIPSVerification_UVM,440648048,SystemVerilog,MIPSVerification_UVM,15,7,2024-01-10 10:45:40+00:00,[],
7238,https://github.com/yodalee/icesugar-playground.git,2021-09-08 13:28:59+00:00,repository to store some of my icesugar-pro verilog project,0,yodalee/icesugar-playground,404358266,SystemVerilog,icesugar-playground,36,6,2024-01-23 22:23:27+00:00,[],
7239,https://github.com/Pedro-Manoel/LOAC.git,2021-11-03 13:39:24+00:00,🎓 Repositório com as atividades desenvolvidas ao longo da disciplina de laboratório de organização e arquitetura de computadores da UFCG,0,Pedro-Manoel/LOAC,424238500,SystemVerilog,LOAC,6192,6,2023-03-29 12:02:17+00:00,"['systemverilog', 'loac', 'fpga', 'risc-v']",https://api.github.com/licenses/mit
7240,https://github.com/zli87/SystemVerilog_Coursework.git,2021-10-12 20:16:50+00:00,"These are some coursework related to SystemVerilog Design & Verification in a graduate-level course, Integrated_Circuit_Design_Laboratory_IC_Lab, at NCTU.",1,zli87/SystemVerilog_Coursework,416484481,SystemVerilog,SystemVerilog_Coursework,3921,6,2023-12-06 16:14:19+00:00,[],
7241,https://github.com/shrutiprakashgupta/RISCV_Formal_Verification.git,2021-10-26 18:07:22+00:00,Formal Verification of RISC V IM Processor ,2,shrutiprakashgupta/RISCV_Formal_Verification,421533942,SystemVerilog,RISCV_Formal_Verification,2325,6,2024-02-26 15:40:37+00:00,[],
7242,https://github.com/KULeuven-MICAS/PSMA-benchmark.git,2021-11-02 17:48:28+00:00,Benchmark fo state-of-the-art Precision Scalable MAC Arrays (PSMAs),3,KULeuven-MICAS/PSMA-benchmark,423943954,SystemVerilog,PSMA-benchmark,446,5,2023-03-25 06:23:46+00:00,"['asic', 'neural-networks', 'precision-scalable-circuits', 'neural-accelerators', 'configurable-circuits', 'multiply-accumulate', 'mac-array-utilization']",
7243,https://github.com/BadSofa233/capstone-VP.git,2021-09-22 22:20:11+00:00,UWO Eng Capstone Project Repo - Value Predictor ,0,BadSofa233/capstone-VP,409372275,SystemVerilog,capstone-VP,48124,5,2023-05-25 01:56:32+00:00,[],
7244,https://github.com/ecilasun/e32.git,2021-10-28 21:45:03+00:00,"E32 is a minimal RISC-V implementation (rv32i) with a built-in UART, and 64KBytes of block RAM.",1,ecilasun/e32,422363949,SystemVerilog,e32,1108,5,2023-09-30 05:49:19+00:00,[],
7245,https://github.com/Daragh-Crowley/8-bit-cpu.git,2021-11-25 15:16:36+00:00,"Project demonstrating the design and testing of an 8 bit CPU in Verilog for EE4023 Digital IC Design module at UCC, 2020/2021",0,Daragh-Crowley/8-bit-cpu,431889530,SystemVerilog,8-bit-cpu,13,5,2024-03-27 16:25:38+00:00,[],
7246,https://github.com/VerticalResearchGroup/ComputeLibrary.git,2021-09-27 03:10:12+00:00,Open source compute hardware library.,2,VerticalResearchGroup/ComputeLibrary,410725755,SystemVerilog,ComputeLibrary,50,5,2023-01-29 08:42:05+00:00,[],https://api.github.com/licenses/bsd-3-clause
7247,https://github.com/BrianHGinc/SystemVerilog-TestBench-BPM-picture-generator.git,2021-09-05 04:37:53+00:00,"This example .BMP generator and ASCII script file reader can be adapted to test code such as pixel drawing algorithms, picture filters, and make use of a source ascii file to drive the inputs of your .sv DUT module while offering logging of the results, and executing the list of commands in order.",0,BrianHGinc/SystemVerilog-TestBench-BPM-picture-generator,403215859,SystemVerilog,SystemVerilog-TestBench-BPM-picture-generator,35,5,2024-01-12 03:11:38+00:00,"['systemverilog', 'verilog', 'hdl', 'test-bench', 'verilog-tb', 'verilog-testbenches', 'systemverilog-simulation', 'systemverilog-test-bench']",
7248,https://github.com/angelus9/AI-Robotics.git,2021-12-06 12:46:53+00:00,"The vision of this group is to create a Forth based AI Computer where you can communicate with the system using an English conversational approach.  We will add many high level Words for string manipulation, arrays, and other structures as we develop this computer.  We will extend Forth to include AI words too.  All of this will be built into FPGAs which are really parallel computers written in Behavioral System Verilog (the Assembler).",0,angelus9/AI-Robotics,435493809,SystemVerilog,AI-Robotics,5418,4,2023-10-15 12:32:48+00:00,[],
7249,https://github.com/GabbedT/FIFO.git,2021-12-04 10:24:13+00:00,FIFO buffer library. Written and verified in SystemVerilog. Can be synthetised in ASIC or FPGA.,0,GabbedT/FIFO,434869767,SystemVerilog,FIFO,120,4,2022-09-16 14:38:40+00:00,"['hdl', 'fifo', 'systemverilog', 'buffer', 'digitaldesign', 'asic', 'fpga']",https://api.github.com/licenses/mit
7250,https://github.com/nfproc/PYNQ-BitPack.git,2021-10-06 09:53:57+00:00,An evaluation framework for stochastic computing circuits on PYNQ,0,nfproc/PYNQ-BitPack,414156134,SystemVerilog,PYNQ-BitPack,43,4,2023-11-25 10:35:55+00:00,[],
7251,https://github.com/iammituraj/LIFO-Stack.git,2021-10-02 14:17:14+00:00,Register-based LIFO aka Stack designed in Verilog/System Verilog.,0,iammituraj/LIFO-Stack,412816853,SystemVerilog,LIFO-Stack,4,4,2024-02-11 04:42:01+00:00,"['lifo', 'rtl', 'verilog', 'systemverilog']",
7252,https://github.com/Petersoj/CompactRISC16.git,2021-08-31 22:07:36+00:00,CompactRISC (CR16) CPU (with an assembler) for the Computer Design Laboratory ECE 3710 class at The University of Utah,2,Petersoj/CompactRISC16,401855640,SystemVerilog,CompactRISC16,4067,4,2022-08-30 19:28:09+00:00,"['verilog', 'assembler', 'systemverilog', 'processor', '16-bit-cpu']",https://api.github.com/licenses/mit
7253,https://github.com/Chair-for-Security-Engineering/RacingBIKE.git,2021-09-18 17:57:13+00:00,,0,Chair-for-Security-Engineering/RacingBIKE,407930994,SystemVerilog,RacingBIKE,156,4,2024-03-13 20:49:54+00:00,[],
7254,https://github.com/RyanHunter-DV/vips.git,2021-10-19 14:57:49+00:00,for IC verification IP,0,RyanHunter-DV/vips,418971715,SystemVerilog,vips,605,4,2023-04-05 08:37:40+00:00,[],
7255,https://github.com/achinthya360/RISC-V-Out-of-Order-Processor.git,2021-12-13 08:11:48+00:00,A simple 9 instruction 2-issue RISC-V Out of Order Processor designed for UCLA's M116C Computer Architecture,1,achinthya360/RISC-V-Out-of-Order-Processor,437787807,SystemVerilog,RISC-V-Out-of-Order-Processor,1635,4,2022-11-22 07:01:40+00:00,[],
7256,https://github.com/mriosrivas/HW-course-material.git,2021-11-24 22:00:43+00:00,Material for the HW course,0,mriosrivas/HW-course-material,431639241,SystemVerilog,HW-course-material,80901,4,2023-09-07 05:42:22+00:00,"['verilog', 'systemverilog', 'hdl', 'mips-assembly']",https://api.github.com/licenses/mit
7257,https://github.com/RileyZito/FIR_filter.git,2021-12-06 22:24:04+00:00,A system Verilog FIR filter with parameterizable number of delays,0,RileyZito/FIR_filter,435666300,SystemVerilog,FIR_filter,797,4,2024-04-08 00:30:31+00:00,[],https://api.github.com/licenses/gpl-2.0
7258,https://github.com/takatz28/FIFO-BIST.git,2021-10-20 07:38:12+00:00,"Final project for the class ""Application Specific Integrated Circuit Development""",0,takatz28/FIFO-BIST,419230397,SystemVerilog,FIFO-BIST,88,4,2022-04-27 19:08:13+00:00,"['clock-domain-crossing', 'systemverilog', 'fifo', 'built-in-self-test']",
7259,https://github.com/meiniKi/logIP.git,2021-11-25 16:24:58+00:00,Logic Analyzer IP Core,0,meiniKi/logIP,431909577,SystemVerilog,logIP,313,4,2024-04-11 13:04:10+00:00,"['asic', 'basys3', 'digital', 'formal-verification', 'fpga', 'ip', 'logicanalyzer', 'measurements', 'sump', 'systemverilog', 'verilog', 'hardware-description-language', 'hdl', 'ols', 'amd', 'vivado', 'xilinx', 'logip', 'symbiyosys']",https://api.github.com/licenses/gpl-3.0
7260,https://github.com/MasterPlayer/axis_uart_bridge.git,2021-12-02 08:32:18+00:00,FPGA implementation for UART interface for rx/tx data with support AXI-Stream protocol,0,MasterPlayer/axis_uart_bridge,434140921,SystemVerilog,axis_uart_bridge,7,4,2024-02-11 04:41:09+00:00,"['fpga', 'systemverilog', 'uart', 'uart-tx', 'uart-rx', 'xilinx', 'artix', 'zynq', 'axi-stream']",https://api.github.com/licenses/mit
7261,https://github.com/iammituraj/debouncer.git,2021-10-28 13:50:13+00:00,Debouncer circuit in Verilog to filter glitches/bounces inherent in switches.,1,iammituraj/debouncer,422222776,SystemVerilog,debouncer,28,4,2023-11-28 15:32:49+00:00,"['debouncer', 'verilog', 'systemverilog']",
7262,https://github.com/msinger/gbreveng.git,2021-08-16 22:07:42+00:00,Stuff for Gameboy reverse engineering and some documentation,0,msinger/gbreveng,396990321,SystemVerilog,gbreveng,73389,4,2023-11-27 20:17:20+00:00,"['gameboy', 'game-boy', 'reverse-engineering', 'kicad-schematics', 'fpga', 'verilog']",
7263,https://github.com/astrakhov-design/apb_i2s.git,2021-10-25 21:45:56+00:00,APB_I2S module with verification,2,astrakhov-design/apb_i2s,421193890,SystemVerilog,apb_i2s,793,4,2024-04-13 11:58:19+00:00,[],
7264,https://github.com/CGCL-codes/FJoin.git,2021-08-25 09:39:09+00:00,,2,CGCL-codes/FJoin,399765449,SystemVerilog,FJoin,30850,3,2024-04-03 03:23:01+00:00,[],https://api.github.com/licenses/mit
7265,https://github.com/GabbedT/Arithmetic-Circuits.git,2021-12-03 17:55:30+00:00,This repository contains different modules which execute arithmetic operations.,0,GabbedT/Arithmetic-Circuits,434686944,SystemVerilog,Arithmetic-Circuits,192,3,2024-04-03 13:41:05+00:00,"['arithmetic', 'circuit', 'rtl', 'systemverilog', 'digitaldesign']",https://api.github.com/licenses/mit
7266,https://github.com/joaovmoura/LOAC-2020.1-EAD.git,2021-08-31 12:52:01+00:00,Atividades desenvolvidas para a disciplina de LOAC.,0,joaovmoura/LOAC-2020.1-EAD,401701823,SystemVerilog,LOAC-2020.1-EAD,21,3,2023-01-11 00:18:21+00:00,[],
7267,https://github.com/yuya-isaka/hotate.git,2021-12-03 11:39:37+00:00,RISC-V processor written in SystemVerilog,0,yuya-isaka/hotate,434574907,SystemVerilog,hotate,11838,3,2023-11-20 08:20:45+00:00,[],
7268,https://github.com/acmpesuecc/BareBones.git,2021-10-05 17:38:52+00:00,,4,acmpesuecc/BareBones,413919483,SystemVerilog,BareBones,21,3,2023-06-19 08:19:35+00:00,"['hacktoberfest', 'hacktoberfest2021', 'systemverilog']",
7269,https://github.com/raja-aadhithan/Router-1x3-Design.git,2021-09-04 13:36:02+00:00,"Router with 3 FIFOs , synchronizer, FSM, and a register is built and verified using UVM. The router accepts data packets on a single 8-bit port and routes them to one of the three output   channels - channel 0, channel 1 and channel 2.  ",0,raja-aadhithan/Router-1x3-Design,403065229,SystemVerilog,Router-1x3-Design,13,3,2024-02-01 07:50:25+00:00,[],
7270,https://github.com/BrianHGinc/GPU_GEOMETRY_Testbench.git,2021-09-13 00:32:15+00:00,"Testbench for ' https://github.com/nockieboy/gpu ' geometry engine.  Draw pixels, lines, boxes, triangles, quadrilaterals, ellipses, filled option, blitter scale and flip/mirror/rotate graphics and save the results as a .bmp picture for inspection.",3,BrianHGinc/GPU_GEOMETRY_Testbench,405785735,SystemVerilog,GPU_GEOMETRY_Testbench,577,3,2023-07-25 14:49:38+00:00,[],
7271,https://github.com/punzik/log2pipelined.git,2021-10-13 18:00:11+00:00,Pipelined fixed point log2(x) computation in Verilog.,0,punzik/log2pipelined,416847082,SystemVerilog,log2pipelined,982,3,2023-11-27 08:28:57+00:00,[],https://api.github.com/licenses/mit
7272,https://github.com/oshears/bladerf_dfr_accelerator.git,2021-10-25 13:57:40+00:00,A project to implement a delayed feedback reservoir on the bladeRF 2.0 micro software defined radio (SDR) FPGA.,2,oshears/bladerf_dfr_accelerator,421046506,SystemVerilog,bladerf_dfr_accelerator,98145,3,2023-07-06 02:08:30+00:00,"['fpga', 'verilog', 'vhdl']",
7273,https://github.com/merledu/common_peripheral_ips.git,2021-12-01 11:24:41+00:00,"This repository contains generic peripheral IPs. These IPs can be used as memory mapped device with various bus interfaces like, Tilelink, AXI, AXI-Lite and APB.",5,merledu/common_peripheral_ips,433798131,SystemVerilog,common_peripheral_ips,53,3,2024-01-10 17:24:22+00:00,[],https://api.github.com/licenses/apache-2.0
7274,https://github.com/natu4u/APB_VIP.git,2021-12-07 22:58:30+00:00,"This apb vip is designed for APB2, APB3, APB4 protocols",3,natu4u/APB_VIP,436049709,,APB_VIP,19,3,2024-01-25 06:02:22+00:00,[],https://api.github.com/licenses/mit
7275,https://github.com/andmiele/SystemVerilogALUandFPUmodules.git,2021-10-04 16:20:38+00:00,System Verilog implementation of computer arithmetic algorithms,1,andmiele/SystemVerilogALUandFPUmodules,413498581,SystemVerilog,SystemVerilogALUandFPUmodules,170,3,2024-02-29 22:04:47+00:00,[],https://api.github.com/licenses/apache-2.0
7276,https://github.com/merledu/Rev-Soc.git,2021-09-19 10:02:19+00:00,,6,merledu/Rev-Soc,408091265,SystemVerilog,Rev-Soc,70365,3,2022-07-11 13:29:20+00:00,[],
7277,https://github.com/ecilasun/nekosan.git,2021-08-14 06:55:58+00:00,Third generation of the Neko SoC,0,ecilasun/nekosan,395920676,SystemVerilog,nekosan,485,3,2023-09-30 05:49:18+00:00,[],
7278,https://github.com/hyungmin2/risa_mobilenet_v2.git,2021-09-30 10:40:27+00:00,,0,hyungmin2/risa_mobilenet_v2,412023646,SystemVerilog,risa_mobilenet_v2,4131,3,2023-03-28 00:07:12+00:00,[],
7279,https://github.com/olivamadrigal/GIJON-FPGA_Blockchain_Accelerator_for_Ethereum_POW.git,2021-11-24 23:41:21+00:00,crypto specific source code from project,1,olivamadrigal/GIJON-FPGA_Blockchain_Accelerator_for_Ethereum_POW,431657857,SystemVerilog,GIJON-FPGA_Blockchain_Accelerator_for_Ethereum_POW,771,3,2023-11-02 12:27:05+00:00,[],https://api.github.com/licenses/mit
7280,https://github.com/SnrNotHere16/Asynchronous-FIFO.git,2021-11-16 05:06:32+00:00,An FPGA implementation of Cummings' Asynchronous FIFO ,1,SnrNotHere16/Asynchronous-FIFO,428524052,SystemVerilog,Asynchronous-FIFO,15822,3,2024-02-19 09:37:29+00:00,"['fpga', 'fpga-programming', 'xilinx-fpga', 'xilinx-vivado', 'nexys4ddr', 'verilog', 'rtl', 'fifo', 'asynchronous-fifo', 'register-transistor-level', 'xilinx', 'hardware-description-language', 'synthesis', 'synthesizable', 'digilent', 'digilent-nexys-4-board', 'systemverilog', 'uvm', 'uvm-verification', 'universal-verification-methodology']",
7281,https://github.com/ESCA-RISC-V/ov7670_to_vga.git,2021-08-19 02:32:55+00:00,,0,ESCA-RISC-V/ov7670_to_vga,397793019,SystemVerilog,ov7670_to_vga,120,2,2022-07-13 21:48:37+00:00,[],
7282,https://github.com/Manuel-Sphe/EEE_WP_5.git,2021-10-21 17:35:44+00:00,,0,Manuel-Sphe/EEE_WP_5,419819426,SystemVerilog,EEE_WP_5,210,2,2023-04-11 15:41:22+00:00,[],
7283,https://github.com/hehepig166/fpga_virtual_cube.git,2021-12-19 07:12:04+00:00,,0,hehepig166/fpga_virtual_cube,439799305,SystemVerilog,fpga_virtual_cube,130095,2,2024-02-05 15:57:45+00:00,[],
7284,https://github.com/LambdaMamba/FPGAprojects.git,2021-08-13 21:45:04+00:00,"Verilog Codes for FPGA projects I did back in 2019, including 5 stage pipelined MIPS CPU.",0,LambdaMamba/FPGAprojects,395805333,SystemVerilog,FPGAprojects,49461,2,2024-01-24 02:00:09+00:00,[],
7285,https://github.com/luisdavidgarcia/8Bit_2_ASCII.git,2021-12-02 05:23:25+00:00,System Verilog and Arduino Code that lets the user enter and send 8-bit binary using the Basys 3 switches and buttons to be converted to ASCII and displayed on an LCD.,0,luisdavidgarcia/8Bit_2_ASCII,434092610,SystemVerilog,8Bit_2_ASCII,3789,2,2024-03-28 05:10:17+00:00,[],https://api.github.com/licenses/mit
7286,https://github.com/MasterPlayer/axis_iic_bridge.git,2021-12-02 10:14:40+00:00,FPGA implementation I2C bridge with support AXI-Stream protocol,0,MasterPlayer/axis_iic_bridge,434171862,SystemVerilog,axis_iic_bridge,9,2,2023-12-12 00:45:13+00:00,[],https://api.github.com/licenses/mit
7287,https://github.com/OYounis/UVM-RV.git,2021-11-15 19:12:44+00:00,,0,OYounis/UVM-RV,428390917,SystemVerilog,UVM-RV,56,2,2022-04-08 11:18:22+00:00,[],
7288,https://github.com/wdevore/RISC-V-RV32I-MultiCycle.git,2021-12-18 03:54:36+00:00,An intuitive multi-cycle RISC-V RV32I soft-core processor,0,wdevore/RISC-V-RV32I-MultiCycle,439522116,SystemVerilog,RISC-V-RV32I-MultiCycle,4999,2,2022-11-07 04:33:10+00:00,[],https://api.github.com/licenses/mit
7289,https://github.com/dsheffie/mipscore.git,2021-12-06 18:50:42+00:00,,0,dsheffie/mipscore,435610987,SystemVerilog,mipscore,4002,2,2023-07-26 21:57:22+00:00,[],
7290,https://github.com/clayboyd06/Flappy_Bird.git,2021-11-16 07:47:10+00:00,Implements Flappy Bird on Altera DE1_SoC FPGA in System Verilog,0,clayboyd06/Flappy_Bird,428563404,SystemVerilog,Flappy_Bird,16,2,2022-05-17 14:45:53+00:00,[],
7291,https://github.com/chanum/uvm_verification.git,2021-12-11 03:24:11+00:00,Examples with UVM,2,chanum/uvm_verification,437177009,SystemVerilog,uvm_verification,1254,2,2023-03-24 20:37:54+00:00,"['uvm', 'systemverilog', 'systemverilog-simulation', 'testbench', 'hdl']",
7293,https://github.com/zzzlight/ITMO-HDU-CSD-Computer_Systems_Design.git,2021-08-29 06:48:17+00:00,record for hdu-itmo course,0,zzzlight/ITMO-HDU-CSD-Computer_Systems_Design,400971837,SystemVerilog,ITMO-HDU-CSD-Computer_Systems_Design,45175,2,2023-09-09 18:54:26+00:00,[],
7294,https://github.com/chenlonglong/NTUEE-DCLAB-Materials.git,2021-09-23 02:11:59+00:00,,5,chenlonglong/NTUEE-DCLAB-Materials,409417381,SystemVerilog,NTUEE-DCLAB-Materials,53,2,2022-03-31 03:14:03+00:00,[],
7295,https://github.com/ryderhu512/RAL.git,2021-10-10 11:29:49+00:00,register model integration for register and memory,0,ryderhu512/RAL,415566386,SystemVerilog,RAL,289,2,2022-07-23 22:13:35+00:00,[],
7296,https://github.com/jiru1997/design-and-verification-of-MCDF-phase3.git,2021-11-17 08:00:16+00:00,design-and-verification-of-MCDF-phase3,1,jiru1997/design-and-verification-of-MCDF-phase3,428956834,SystemVerilog,design-and-verification-of-MCDF-phase3,33,2,2023-06-13 13:49:35+00:00,"['systemverilog', 'design-verification', 'uvm', 'apb']",
7297,https://github.com/oscaretmira/TAREA_2_ISDIGI.git,2021-10-13 13:34:42+00:00,Tarea 2 - ISDIGI,0,oscaretmira/TAREA_2_ISDIGI,416757213,SystemVerilog,TAREA_2_ISDIGI,33,2,2021-10-20 15:00:08+00:00,[],
7298,https://github.com/Elias-Rosales/MIPSVerification_SystemVerilog.git,2021-12-21 21:05:54+00:00,Verification of a MIPS Multi-Cycle Microprocessor using SystemVerilog for Verification,0,Elias-Rosales/MIPSVerification_SystemVerilog,440650345,SystemVerilog,MIPSVerification_SystemVerilog,12,2,2023-10-11 09:31:45+00:00,[],
7299,https://github.com/electrophile27/https-github.com-designsolver-ahb2apb_bridge_vip.git,2021-09-01 11:41:33+00:00,,0,electrophile27/https-github.com-designsolver-ahb2apb_bridge_vip,402039360,SystemVerilog,https-github.com-designsolver-ahb2apb_bridge_vip,27,2,2022-06-16 17:30:11+00:00,[],https://api.github.com/licenses/mit
7300,https://github.com/IEEE-SSCS/CNN-Accelerator.git,2021-09-17 13:02:02+00:00,CNN Accelerator based on systolic arrays,0,IEEE-SSCS/CNN-Accelerator,407542233,SystemVerilog,CNN-Accelerator,41,2,2024-01-26 02:42:59+00:00,[],
7301,https://github.com/barbara-gigerl/sw-masking-swerv.git,2021-08-31 09:16:44+00:00,,1,barbara-gigerl/sw-masking-swerv,401642317,SystemVerilog,sw-masking-swerv,243,2,2024-03-22 13:30:06+00:00,[],
7302,https://github.com/TishukBogdana/JTAG_IMPL.git,2021-10-06 09:18:11+00:00,,0,TishukBogdana/JTAG_IMPL,414145162,SystemVerilog,JTAG_IMPL,32,2,2022-04-26 10:55:54+00:00,[],
7303,https://github.com/ytoml/cpu_playground.git,2021-11-04 04:28:08+00:00,CPU コアの基礎を学ぶ,0,ytoml/cpu_playground,424471578,SystemVerilog,cpu_playground,152,2,2022-08-31 04:13:21+00:00,"['systemverilog', 'mips']",
7304,https://github.com/vonbrank/hit-cs31105e-final-assignment.git,2021-11-19 03:11:23+00:00,哈工大《数字逻辑与数字系统设计》2021秋 - 课程大作业,0,vonbrank/hit-cs31105e-final-assignment,429654312,SystemVerilog,hit-cs31105e-final-assignment,72,2,2023-04-12 15:00:58+00:00,[],https://api.github.com/licenses/agpl-3.0
7305,https://github.com/tom01h/Verilator-Python.git,2021-12-13 09:56:31+00:00,,0,tom01h/Verilator-Python,437819644,SystemVerilog,Verilator-Python,9,2,2023-09-28 02:45:07+00:00,[],
7306,https://github.com/uyiromo/OpenMPE.git,2021-09-13 02:19:42+00:00,Source files for Open-Sourced Memory Protection Engine,0,uyiromo/OpenMPE,405806226,SystemVerilog,OpenMPE,62,2,2022-10-16 20:34:58+00:00,[],https://api.github.com/licenses/apache-2.0
7307,https://github.com/takatz28/RISCY-Processor.git,2021-10-17 07:32:43+00:00,"Final project for the class ""Digital Design with Verilog and SystemVerilog""",0,takatz28/RISCY-Processor,418054847,SystemVerilog,RISCY-Processor,385,2,2022-04-27 19:08:36+00:00,"['verilog', 'processor', 'risc-processor', 'systemverilog']",
7308,https://github.com/AthulBabu232000/verilog-LCD-LAB.git,2021-10-16 17:12:18+00:00,This contains sample verilog code from eda playground. This a public repository and any coding enthusiast can contribute to our open hub,1,AthulBabu232000/verilog-LCD-LAB,417895129,SystemVerilog,verilog-LCD-LAB,5,2,2023-08-31 10:23:39+00:00,"['hacktoberfest', 'hacktoberfest2021', 'hacktoberfest-accepted']",
7309,https://github.com/Ayusummer/RISC_V_CPU_Design.git,2021-11-02 07:37:02+00:00,RISC-V 基础 5 条指令单周期微架构设计,0,Ayusummer/RISC_V_CPU_Design,423747497,SystemVerilog,RISC_V_CPU_Design,140,2,2023-03-29 07:09:54+00:00,[],
7310,https://github.com/RevanthNandamuri1341b0/Memory_Model-Verification-Environment.git,2021-10-04 10:15:28+00:00,,0,RevanthNandamuri1341b0/Memory_Model-Verification-Environment,413370929,SystemVerilog,Memory_Model-Verification-Environment,33,2,2022-02-18 16:09:50+00:00,[],
7311,https://github.com/ycyang0508/xilinx_iic_hw_ctrl.git,2021-12-06 14:41:17+00:00,,0,ycyang0508/xilinx_iic_hw_ctrl,435532425,SystemVerilog,xilinx_iic_hw_ctrl,8,2,2022-03-16 02:38:13+00:00,[],
7312,https://github.com/Kashyappatel14/I2S_systemVerilog_Revision-1.git,2021-09-29 07:29:15+00:00,I2S protocol with some test-case. It also provide configuration in config class.  ,0,Kashyappatel14/I2S_systemVerilog_Revision-1,411573348,SystemVerilog,I2S_systemVerilog_Revision-1,29,1,2022-02-23 16:50:29+00:00,[],
7313,https://github.com/atmughrabi/AccelGraph_Express.git,2021-10-10 19:26:02+00:00,Graph Processing Framework that supports || OpenMP || CAPI,0,atmughrabi/AccelGraph_Express,415680503,SystemVerilog,AccelGraph_Express,1447702,1,2022-05-25 11:40:04+00:00,[],https://api.github.com/licenses/bsd-2-clause
7314,https://github.com/jake-is-ESD-protected/learn_HDL.git,2021-10-10 10:54:16+00:00,my HDL tests in verilog (academic),1,jake-is-ESD-protected/learn_HDL,415558459,SystemVerilog,learn_HDL,99049,1,2023-11-07 16:49:23+00:00,[],
7315,https://github.com/joshual777/Microprocesador.git,2021-11-17 15:50:53+00:00,,0,joshual777/Microprocesador,429107551,SystemVerilog,Microprocesador,22042,1,2022-06-22 21:54:22+00:00,[],
7316,https://github.com/AI-Vector-Accelerator/cv32e40x.git,2021-12-15 14:51:27+00:00,,1,AI-Vector-Accelerator/cv32e40x,438666843,SystemVerilog,cv32e40x,5639,1,2022-03-16 23:59:36+00:00,[],
7318,https://github.com/sushil3710/CS203project.git,2021-10-24 12:26:18+00:00,Project of CS203,0,sushil3710/CS203project,420677613,SystemVerilog,CS203project,67,1,2023-09-10 12:23:33+00:00,[],
7319,https://github.com/1009qjm/SPI.git,2021-10-01 16:30:48+00:00,,0,1009qjm/SPI,412541328,SystemVerilog,SPI,2,1,2021-12-26 06:10:47+00:00,[],
7320,https://github.com/jyoshnalakshmi/SPI_AVIP.git,2021-10-12 06:54:22+00:00,verification plan,0,jyoshnalakshmi/SPI_AVIP,416219038,SystemVerilog,SPI_AVIP,31,1,2023-02-17 11:21:21+00:00,[],
7321,https://github.com/mfkiwl/RV32I-Single-Cycle.git,2021-09-13 21:28:39+00:00,This repository contains the implementation of a single cycle  based on RISC-V ISA and implemented on `LOGISIM` ,0,mfkiwl/RV32I-Single-Cycle,406134685,,RV32I-Single-Cycle,2826,1,2021-09-22 04:13:57+00:00,[],
7322,https://github.com/fedehsq/light_hash_algorithm_aes_sbox.git,2021-09-17 04:48:37+00:00,Project of Hardware and Embedded Security course (Master's Degree in Cybersecurity at University of Pisa),1,fedehsq/light_hash_algorithm_aes_sbox,407408135,SystemVerilog,light_hash_algorithm_aes_sbox,13234,1,2021-10-05 21:08:00+00:00,[],
7323,https://github.com/Shihhaolin/Synchronous-FIFO.git,2021-08-27 06:15:10+00:00,,0,Shihhaolin/Synchronous-FIFO,400408090,SystemVerilog,Synchronous-FIFO,2,1,2021-10-31 20:58:27+00:00,[],
7324,https://github.com/khaledalics22/DCNN-Accelerator.git,2021-09-02 19:12:19+00:00,,0,khaledalics22/DCNN-Accelerator,402535510,SystemVerilog,DCNN-Accelerator,835,1,2021-09-02 19:16:10+00:00,[],
7325,https://github.com/Keio-CSG/CPU-experiment.git,2021-11-15 02:28:02+00:00,2021年セミナ用のCPU実験Repo,1,Keio-CSG/CPU-experiment,428097688,SystemVerilog,CPU-experiment,10224,1,2024-01-31 12:11:32+00:00,[],https://api.github.com/licenses/mit
7326,https://github.com/byu-cpe/ecen323_student.git,2021-12-10 16:59:33+00:00,Template repository for student repositories used in ECEN 323,0,byu-cpe/ecen323_student,437052646,SystemVerilog,ecen323_student,2305,1,2024-01-01 18:13:42+00:00,[],
7327,https://github.com/syedarafia13/system-verilog.git,2021-09-10 16:26:36+00:00,,0,syedarafia13/system-verilog,405144457,SystemVerilog,system-verilog,25,1,2022-05-02 21:29:13+00:00,[],
7328,https://github.com/SteveLRojas/TRS-80_CoCo_HDMI.git,2021-09-24 05:06:14+00:00,FPGA implementation of the TRS-80 Color Computer with HDMI video output.,1,SteveLRojas/TRS-80_CoCo_HDMI,409838440,SystemVerilog,TRS-80_CoCo_HDMI,11691,1,2022-01-05 23:27:59+00:00,[],
7329,https://github.com/muhdhisham/Logic-Circuits-Lab.git,2021-10-15 04:53:27+00:00,This repository contains verilog code of Logic Circuits lab Course (KTU - ECL 213),0,muhdhisham/Logic-Circuits-Lab,417372465,SystemVerilog,Logic-Circuits-Lab,3,1,2021-10-15 18:40:25+00:00,[],
7330,https://github.com/Hotwater17/SvarogSoC.git,2021-10-29 09:13:22+00:00,,0,Hotwater17/SvarogSoC,422512241,SystemVerilog,SvarogSoC,28,1,2022-01-28 06:17:01+00:00,[],
7331,https://github.com/jara1998/8x8-Conway-s-Game-of-life.git,2021-10-21 19:30:52+00:00,,0,jara1998/8x8-Conway-s-Game-of-life,419852843,SystemVerilog,8x8-Conway-s-Game-of-life,54,1,2022-01-26 15:31:56+00:00,[],
7332,https://github.com/Shihhaolin/Verification-of-single-port-RAM-with-SystemVerilog-and-UVM-.git,2021-11-01 16:58:19+00:00,,1,Shihhaolin/Verification-of-single-port-RAM-with-SystemVerilog-and-UVM-,423546711,SystemVerilog,Verification-of-single-port-RAM-with-SystemVerilog-and-UVM-,8,1,2021-11-05 20:18:22+00:00,[],
7333,https://github.com/Dr-TSNG/DigitalLogicAssignment.git,2021-11-07 01:50:34+00:00,My digital logic assignment,0,Dr-TSNG/DigitalLogicAssignment,425390002,SystemVerilog,DigitalLogicAssignment,17,1,2023-06-08 02:24:08+00:00,[],
7334,https://github.com/lampn0/uart_vlsi.git,2021-12-02 07:50:13+00:00,uart_vlsi,0,lampn0/uart_vlsi,434129000,SystemVerilog,uart_vlsi,54040,1,2023-09-10 01:57:05+00:00,[],
7335,https://github.com/tugcantopaloglu/8-bit-cpu.git,2021-09-10 09:23:33+00:00,8 Bit Processor with system verilog.,0,tugcantopaloglu/8-bit-cpu,405024963,SystemVerilog,8-bit-cpu,87,1,2024-01-28 15:49:11+00:00,[],
7336,https://github.com/0xArt/Sine_Generator_Verilog.git,2021-10-02 23:04:57+00:00,,1,0xArt/Sine_Generator_Verilog,412929931,SystemVerilog,Sine_Generator_Verilog,5674,1,2024-03-12 03:32:18+00:00,[],https://api.github.com/licenses/gpl-3.0
7337,https://github.com/rillomas/riscv-alu.git,2021-10-02 13:59:10+00:00,Sample ALU of RISC-V,0,rillomas/riscv-alu,412812028,SystemVerilog,riscv-alu,5,1,2024-04-07 05:28:36+00:00,[],
7338,https://github.com/zchen665/ECE554Minilab.git,2021-09-23 21:38:59+00:00,,1,zchen665/ECE554Minilab,409750743,SystemVerilog,ECE554Minilab,21364,1,2021-10-06 03:58:20+00:00,[],
7339,https://github.com/akseltorgerson/ECE554-Capstone.git,2021-10-14 20:54:03+00:00,,1,akseltorgerson/ECE554-Capstone,417279263,SystemVerilog,ECE554-Capstone,14492,1,2021-12-26 21:39:12+00:00,[],
7340,https://github.com/chriswebbb/n-bit-unsigned-binary-sequential-multiplier.git,2021-10-27 12:43:13+00:00,,0,chriswebbb/n-bit-unsigned-binary-sequential-multiplier,421814013,SystemVerilog,n-bit-unsigned-binary-sequential-multiplier,494,1,2022-11-13 13:10:31+00:00,[],
7341,https://github.com/Shihhaolin/Basic-Reference-of-Systemverilog.git,2021-08-15 04:14:26+00:00,,0,Shihhaolin/Basic-Reference-of-Systemverilog,396211863,SystemVerilog,Basic-Reference-of-Systemverilog,24,1,2021-10-31 20:58:28+00:00,[],
7342,https://github.com/amiq-eda/example-projects-uvm-1.2_ubus.git,2021-11-05 09:59:54+00:00,,2,amiq-eda/example-projects-uvm-1.2_ubus,424901370,SystemVerilog,example-projects-uvm-1.2_ubus,38,1,2023-06-23 07:51:22+00:00,[],
7343,https://github.com/EngRaff92/APB_SLAVE.git,2021-11-20 21:17:47+00:00,APB_SLAVE with open source Full DV environment,0,EngRaff92/APB_SLAVE,430211150,SystemVerilog,APB_SLAVE,6872,1,2022-01-10 19:48:32+00:00,[],https://api.github.com/licenses/mit
7344,https://github.com/kavinxraj/IC2021.git,2021-09-19 09:02:04+00:00,System Verilog Circuits,0,kavinxraj/IC2021,408079338,SystemVerilog,IC2021,100,1,2022-05-06 06:47:48+00:00,[],
7345,https://github.com/ALI11-2000/RISC-V_Core.git,2021-09-17 08:11:04+00:00,,0,ALI11-2000/RISC-V_Core,407459325,SystemVerilog,RISC-V_Core,60536,1,2022-08-02 07:50:58+00:00,[],https://api.github.com/licenses/mit
7346,https://github.com/tishi43/pyr_down.git,2021-09-14 05:43:02+00:00,implement opencv _pyrDown(),1,tishi43/pyr_down,406239602,SystemVerilog,pyr_down,179,1,2022-05-20 04:28:04+00:00,[],
7347,https://github.com/Verdvana/Deserializer.git,2021-08-16 13:54:57+00:00,解串器,0,Verdvana/Deserializer,396817460,SystemVerilog,Deserializer,14,1,2022-06-06 06:16:05+00:00,[],https://api.github.com/licenses/apache-2.0
7348,https://github.com/daviddavo/tfg_poc_noc.git,2021-12-06 12:31:34+00:00,Proof of Concept of a simple Network on a Chip on SystemVerilog,0,daviddavo/tfg_poc_noc,435489009,SystemVerilog,tfg_poc_noc,8939,1,2022-06-14 07:33:38+00:00,[],
7349,https://github.com/sivareddykostam/Assertions.git,2021-10-12 09:08:02+00:00,,2,sivareddykostam/Assertions,416262396,SystemVerilog,Assertions,419,1,2024-02-14 10:34:01+00:00,[],
7350,https://github.com/omerb97/Digital_Sys_Comp_Org_Projects.git,2021-08-29 15:06:42+00:00,"The Project, Assignment, and Homework given in the ""Digital Systems and Computer Organization"" course in the Technion",0,omerb97/Digital_Sys_Comp_Org_Projects,401071442,SystemVerilog,Digital_Sys_Comp_Org_Projects,1454,1,2024-03-13 05:36:49+00:00,[],
7351,https://github.com/osnr/wiggly_ic_1.git,2021-10-18 22:34:16+00:00,,0,osnr/wiggly_ic_1,418689589,SystemVerilog,wiggly_ic_1,87,1,2021-12-07 08:46:25+00:00,[],
7352,https://github.com/fpgacademy/Lab_Exercises_OPAE.git,2021-10-27 02:18:14+00:00,Laboratory Exercises focusing on OPAE,0,fpgacademy/Lab_Exercises_OPAE,421648710,SystemVerilog,Lab_Exercises_OPAE,16209,1,2022-08-03 14:55:24+00:00,[],https://api.github.com/licenses/mit
7353,https://github.com/lutong-z/riscv-decoder-gen.git,2021-10-11 10:08:37+00:00,,0,lutong-z/riscv-decoder-gen,415872379,SystemVerilog,riscv-decoder-gen,30,1,2021-11-30 06:46:20+00:00,[],https://api.github.com/licenses/mit
7354,https://github.com/FlexEasy/virtual-grand-piano.git,2021-12-15 15:03:28+00:00,"FPGA Board Prjoect integrating Cyclone Board, CMOS Camera, FSR(Force Sensitive Resistors)",0,FlexEasy/virtual-grand-piano,438671002,SystemVerilog,virtual-grand-piano,4583,1,2021-12-15 16:30:32+00:00,[],
7355,https://github.com/DaleAndreoli/FPGA_video_game.git,2021-12-21 04:30:55+00:00,FPGA - Verilog,0,DaleAndreoli/FPGA_video_game,440389916,SystemVerilog,FPGA_video_game,36146,1,2022-10-24 13:21:15+00:00,[],
7356,https://github.com/jmstein7/65c02_core.git,2021-11-04 14:29:07+00:00,Novel Implementation of the 65C02 ISA.  A work in progress in very early alpha.,0,jmstein7/65c02_core,424625465,SystemVerilog,65c02_core,223,1,2021-11-10 20:45:46+00:00,[],https://api.github.com/licenses/mit
7357,https://github.com/skudlur/tic-tac-toe.git,2021-10-31 16:40:41+00:00,Tic-tac-toe made using SystemVerilog,0,skudlur/tic-tac-toe,423203618,SystemVerilog,tic-tac-toe,5,1,2021-11-19 10:08:55+00:00,[],
7358,https://github.com/Campo87/Verilog-FIR-Filter.git,2021-11-11 00:18:30+00:00,15 tap digital FIR filter with reprogrammable coefficients targeting the Zynq-7000 AP SoC on the Zedboard development board.,0,Campo87/Verilog-FIR-Filter,426819200,SystemVerilog,Verilog-FIR-Filter,172,1,2022-04-11 18:24:46+00:00,[],
7359,https://github.com/Leomrlin/FJoin.git,2021-08-25 02:29:34+00:00,FJoin: an FPGA-based parallel accelerator for stream join,1,Leomrlin/FJoin,399665584,SystemVerilog,FJoin,9733,1,2021-11-25 10:02:14+00:00,[],https://api.github.com/licenses/mit
7360,https://github.com/AdulisL/Processor.git,2021-09-05 00:21:55+00:00,,0,AdulisL/Processor,403181392,SystemVerilog,Processor,380,1,2022-05-06 04:28:56+00:00,[],
7361,https://github.com/ruofan-he/redpitaya_PNR.git,2021-10-12 08:10:23+00:00,RedPitaya FPGA for photon number resolving,0,ruofan-he/redpitaya_PNR,416243349,SystemVerilog,redpitaya_PNR,1206,1,2022-09-16 12:23:41+00:00,[],
7362,https://github.com/lnis-uofu/skywater_template.git,2021-09-13 23:08:03+00:00,,1,lnis-uofu/skywater_template,406155277,SystemVerilog,skywater_template,92,1,2022-10-07 08:41:09+00:00,[],
7363,https://github.com/danicax/Processor.git,2021-09-05 23:26:07+00:00,Reg-Reg ISA Processor made in Verilog.,0,danicax/Processor,403432960,SystemVerilog,Processor,2703,1,2021-10-02 21:42:33+00:00,[],
7364,https://github.com/EzraCharles/Ezra_Charles_Digital_Systems_Verification.git,2021-11-06 16:30:15+00:00,Repository of homeworks and projects of the verification class from Bootcamp Pre-Silicon at ITESO with INTEL,0,EzraCharles/Ezra_Charles_Digital_Systems_Verification,425292929,SystemVerilog,Ezra_Charles_Digital_Systems_Verification,17,1,2022-06-21 20:11:41+00:00,"['systemverilog', 'testbench', 'modelsim', 'quartus']",https://api.github.com/licenses/mit
7365,https://github.com/ZHOUYong0530/FindRear.git,2021-09-15 08:40:24+00:00,a tool to construct complex rearrangements,0,ZHOUYong0530/FindRear,406679271,SystemVerilog,FindRear,2845,1,2023-02-24 05:13:15+00:00,['rearrangements'],
7366,https://github.com/ziruifu/DeepFreeze.git,2021-10-26 04:53:36+00:00,,0,ziruifu/DeepFreeze,421284741,SystemVerilog,DeepFreeze,22726,1,2021-10-26 04:57:15+00:00,[],https://api.github.com/licenses/mit
7367,https://github.com/redchenjs/hxd32.git,2021-10-24 11:36:02+00:00,A RISC-V CPU Core (HXD32 RV32I/E[C]),0,redchenjs/hxd32,420666472,SystemVerilog,hxd32,24,1,2022-06-05 07:51:50+00:00,[],
7368,https://github.com/gilbertmike/game_of_life.git,2021-10-21 23:41:48+00:00,,1,gilbertmike/game_of_life,419908292,SystemVerilog,game_of_life,4286,1,2022-05-30 19:23:37+00:00,[],
7370,https://github.com/RevanthNandamuri1341b0/ALU-Verification-Environment.git,2021-08-22 13:41:49+00:00,Development UVM Verification Environment for ALU DUT,3,RevanthNandamuri1341b0/ALU-Verification-Environment,398809282,SystemVerilog,ALU-Verification-Environment,14,1,2023-04-05 10:59:27+00:00,[],
7371,https://github.com/Batucan2601/fpga_tools.git,2021-08-25 13:07:39+00:00,fpga tools ,0,Batucan2601/fpga_tools,399822553,SystemVerilog,fpga_tools,5,1,2021-08-26 10:31:36+00:00,[],https://api.github.com/licenses/mit
7372,https://github.com/MarkReedZ/SystemVerilogTutorial.git,2021-10-30 22:47:05+00:00,Hello world tutorial for SystemVerilog,1,MarkReedZ/SystemVerilogTutorial,423006088,SystemVerilog,SystemVerilogTutorial,6555,1,2024-01-22 23:25:00+00:00,[],
7373,https://github.com/brendancarr34/MIPS-CPU.git,2021-09-29 21:29:36+00:00,Full processor for MIPS language in SystemVerilog for implementation on Nexys4 FGPA board.,0,brendancarr34/MIPS-CPU,411834800,SystemVerilog,MIPS-CPU,46,1,2021-10-01 17:52:22+00:00,[],
7374,https://github.com/chinahuangyong/FpOC.git,2021-09-13 09:06:20+00:00,,0,chinahuangyong/FpOC,405903880,SystemVerilog,FpOC,106,1,2022-01-04 07:56:54+00:00,[],
7375,https://github.com/SuryaXOX/Digital-System-Design-and-Synthesis-Projects-PID.git,2021-12-03 12:00:10+00:00,,0,SuryaXOX/Digital-System-Design-and-Synthesis-Projects-PID,434580445,SystemVerilog,Digital-System-Design-and-Synthesis-Projects-PID,49,1,2023-07-29 18:39:36+00:00,[],
7376,https://github.com/KareemElozeiri/DigitalLogic.git,2021-12-18 23:01:49+00:00,Humble collection of some implementations in structural systemVerilog of some digital logic components,0,KareemElozeiri/DigitalLogic,439731992,SystemVerilog,DigitalLogic,134,1,2022-02-06 00:20:17+00:00,[],
7377,https://github.com/elviswolcott/fpga-graphics.git,2021-12-09 22:08:52+00:00,Final Project for Computer Architecture FA21 @ Olin College,0,elviswolcott/fpga-graphics,436775536,SystemVerilog,fpga-graphics,4762,1,2022-11-16 22:53:45+00:00,[],
7378,https://github.com/RoaLogic/ahb3lite_error.git,2021-11-27 13:43:34+00:00,AHB module that always generates an error response,1,RoaLogic/ahb3lite_error,432472085,SystemVerilog,ahb3lite_error,3,1,2022-02-17 23:13:22+00:00,[],https://api.github.com/licenses/bsd-2-clause
7379,https://github.com/123deepikap/spi_avip-1.git,2021-10-19 05:52:08+00:00,Accelerated Verification IP for SPI,1,123deepikap/spi_avip-1,418788877,SystemVerilog,spi_avip-1,495,1,2022-03-02 01:39:06+00:00,[],
7380,https://github.com/jayantsakhare/ASYNCHRONOUS-FIFO-SVTB.git,2021-09-12 14:20:11+00:00,My attempt to verify asynchronous FIFO using systemverilog testbench.,1,jayantsakhare/ASYNCHRONOUS-FIFO-SVTB,405662172,SystemVerilog,ASYNCHRONOUS-FIFO-SVTB,32,1,2021-11-27 10:43:48+00:00,[],https://api.github.com/licenses/agpl-3.0
7381,https://github.com/TimothyBaalman/Hardware-AI-Digit-Detection.git,2021-09-16 18:35:14+00:00,Project for Digital Integrated Circuit Design using PyTorch to train and Verilog for hardware coding. ,0,TimothyBaalman/Hardware-AI-Digit-Detection,407275608,SystemVerilog,Hardware-AI-Digit-Detection,78461,1,2023-04-25 06:01:33+00:00,[],
7382,https://github.com/ray0426/Pac-Man.git,2021-12-17 07:24:36+00:00,"2021 Fall, DCLab final project",2,ray0426/Pac-Man,439246236,SystemVerilog,Pac-Man,252,1,2023-12-04 07:14:28+00:00,[],
7383,https://github.com/hypernyan/ecc_vlg.git,2021-09-16 19:14:20+00:00,SystemVerilog elliptic curve cryptography implementation,0,hypernyan/ecc_vlg,407286678,SystemVerilog,ecc_vlg,4,1,2024-03-22 13:07:20+00:00,[],
7384,https://github.com/OYounis/RTLblocks.git,2021-08-20 16:15:21+00:00,Common RTL blocks I use,0,OYounis/RTLblocks,398334135,SystemVerilog,RTLblocks,35,1,2023-05-14 00:56:30+00:00,"['hdl', 'verilog', 'systemverilog', 'hardware']",
7385,https://github.com/snowtothemax/ece554-minilab5.git,2021-09-28 20:41:58+00:00,,0,snowtothemax/ece554-minilab5,411432592,SystemVerilog,ece554-minilab5,4132,1,2021-09-30 00:34:12+00:00,[],
7386,https://github.com/OmarElsakka1/Stop-Watch.git,2021-09-09 22:58:02+00:00,,0,OmarElsakka1/Stop-Watch,404892097,SystemVerilog,Stop-Watch,11698,1,2023-11-07 10:53:01+00:00,[],
7387,https://github.com/osovv/mpsis-labs.git,2021-12-20 10:53:55+00:00,,0,osovv/mpsis-labs,440136473,SystemVerilog,mpsis-labs,4,1,2023-03-07 03:12:04+00:00,[],https://api.github.com/licenses/mit
7388,https://github.com/raytroop/vlsiverify.git,2021-11-11 14:11:17+00:00,download from https://vlsiverify.com/,1,raytroop/vlsiverify,427024919,SystemVerilog,vlsiverify,22,1,2022-04-04 00:22:03+00:00,[],
7389,https://github.com/nwkrix/FA_UVM_Testbench.git,2021-11-03 09:22:29+00:00,,0,nwkrix/FA_UVM_Testbench,424160470,SystemVerilog,FA_UVM_Testbench,32,1,2021-11-04 01:35:46+00:00,[],
7390,https://github.com/Shehab-Naga/Gray-Code-Counter.git,2021-09-05 19:46:55+00:00,"This project involved designing a digital circuit for a gray code representation on a seven-segment display, then using Quartus Prime and Altera’s FPGA to implement the counter.",0,Shehab-Naga/Gray-Code-Counter,403399201,SystemVerilog,Gray-Code-Counter,5228,1,2023-11-08 03:04:54+00:00,[],
7391,https://github.com/egeroglu/BilkentCS223Labs.git,2021-08-27 06:35:00+00:00,,0,egeroglu/BilkentCS223Labs,400412568,SystemVerilog,BilkentCS223Labs,4106,1,2023-10-01 23:05:30+00:00,[],
7392,https://github.com/aabotaleb/SNAPE-FP.git,2021-10-23 01:09:43+00:00,SNAPE-FP: SqueezeNet CNN with Accelerated Pooling Layers Extension based on IEEE-754 Floating Point Implementation through SW/HW Partitioning On ZYNQ SoC,0,aabotaleb/SNAPE-FP,420282556,SystemVerilog,SNAPE-FP,14,1,2023-07-03 04:41:06+00:00,[],https://api.github.com/licenses/bsd-3-clause
7393,https://github.com/saw235/sv_common_components.git,2021-08-14 14:40:19+00:00,Common (and maybe generic) components for SystemVerilog with FuseSoc support,0,saw235/sv_common_components,396036190,SystemVerilog,sv_common_components,24,1,2023-01-28 06:29:26+00:00,[],
7394,https://github.com/Khadija411/RV32I.git,2021-10-13 11:52:26+00:00,RISC-V (RV32-I) is single cycle  processor in system verilog ,0,Khadija411/RV32I,416720998,SystemVerilog,RV32I,26,1,2023-07-17 20:22:23+00:00,[],
7395,https://github.com/GustavoRuedaEnriquez/bin-2c-decoder-sv.git,2021-10-01 02:51:53+00:00,,1,GustavoRuedaEnriquez/bin-2c-decoder-sv,412303607,SystemVerilog,bin-2c-decoder-sv,7,1,2022-01-27 05:19:24+00:00,[],
7396,https://github.com/permissiondhr/ResNet.git,2021-11-05 12:22:01+00:00,,1,permissiondhr/ResNet,424938582,SystemVerilog,ResNet,79,1,2021-11-26 04:17:26+00:00,[],
7397,https://github.com/GianlucaDagostino/Trabajo_Titulo_SoC-RiscV.git,2021-09-16 22:15:53+00:00,Diseño e Implementación de un SoC en un FPGA basado en el ISA de Risc-V: Memoria para optar al título de Ingeniero Civil Eléctrico,1,GianlucaDagostino/Trabajo_Titulo_SoC-RiscV,407329262,SystemVerilog,Trabajo_Titulo_SoC-RiscV,102748,1,2022-03-22 16:21:00+00:00,[],https://api.github.com/licenses/gpl-3.0
7398,https://github.com/nikoschatzi/Connect-Four.git,2021-08-24 19:34:16+00:00,Connect Four game in SystemVerilog,1,nikoschatzi/Connect-Four,399583325,SystemVerilog,Connect-Four,488,1,2021-08-24 21:42:11+00:00,[],
7399,https://github.com/Fabelifer2797/Vector-ASIP-for-image-encryption.git,2021-10-09 03:00:25+00:00,,0,Fabelifer2797/Vector-ASIP-for-image-encryption,415185822,SystemVerilog,Vector-ASIP-for-image-encryption,107,1,2022-06-22 22:19:04+00:00,[],
7400,https://github.com/Momelez-Mchunu/EEE-WorkPackage6.git,2021-11-01 20:59:03+00:00,,0,Momelez-Mchunu/EEE-WorkPackage6,423614483,SystemVerilog,EEE-WorkPackage6,3,1,2022-04-10 18:30:24+00:00,[],
7401,https://github.com/PratikNarkhede20/DMA_Controller_Assertion_Based_Verification.git,2021-11-14 11:04:09+00:00,,0,PratikNarkhede20/DMA_Controller_Assertion_Based_Verification,427904967,SystemVerilog,DMA_Controller_Assertion_Based_Verification,3339,1,2022-01-25 15:41:29+00:00,[],
7402,https://github.com/LordKanelsnegle/CrossyRobbers.git,2021-11-19 18:22:05+00:00,,0,LordKanelsnegle/CrossyRobbers,429895726,SystemVerilog,CrossyRobbers,543532,1,2022-12-12 23:55:03+00:00,[],
7403,https://github.com/elYuma/miri-pd-Cores-SweRV-EH2-2.git,2021-10-02 13:57:44+00:00,,0,elYuma/miri-pd-Cores-SweRV-EH2-2,412811671,SystemVerilog,miri-pd-Cores-SweRV-EH2-2,8910,1,2023-07-17 09:33:15+00:00,[],https://api.github.com/licenses/apache-2.0
7404,https://github.com/dbli2000/6.111_Acoustic_Levitator.git,2021-12-08 10:16:17+00:00,Repo for 6.111 Final Project F21 Team 11 - William Luo and David Li,0,dbli2000/6.111_Acoustic_Levitator,436202772,SystemVerilog,6.111_Acoustic_Levitator,159,1,2023-03-08 01:13:44+00:00,[],
7405,https://github.com/RoaLogic/apb_error.git,2021-11-27 13:41:58+00:00,APB module that always generates an error response,1,RoaLogic/apb_error,432471668,SystemVerilog,apb_error,3,1,2022-02-17 23:13:10+00:00,[],https://api.github.com/licenses/bsd-2-clause
7406,https://github.com/ignacioFernandez1/mips-final-arqui.git,2021-11-28 20:36:10+00:00,,0,ignacioFernandez1/mips-final-arqui,432819113,SystemVerilog,mips-final-arqui,828,1,2022-06-08 21:34:58+00:00,[],
7407,https://github.com/MenaMishriky/Pong-FPGA.git,2021-12-13 20:00:19+00:00,Repository for an FPGA implementation of the game Pong,0,MenaMishriky/Pong-FPGA,438007961,SystemVerilog,Pong-FPGA,173,1,2023-12-07 03:27:15+00:00,[],
7408,https://github.com/kitune-san/KFSDRAM.git,2021-10-03 13:48:31+00:00,Simple SDRAM controller written in SystemVerilog ,0,kitune-san/KFSDRAM,413090642,SystemVerilog,KFSDRAM,204,1,2023-10-12 12:13:21+00:00,"['sdram', 'fpga', 'systemverilog']",https://api.github.com/licenses/mit
7409,https://github.com/zzhang681/MLP-Hand-written-Pattern-Classifier-Model-on-DE-10-Lite-FPGA.git,2021-11-21 02:04:09+00:00,EE297,0,zzhang681/MLP-Hand-written-Pattern-Classifier-Model-on-DE-10-Lite-FPGA,430252207,SystemVerilog,MLP-Hand-written-Pattern-Classifier-Model-on-DE-10-Lite-FPGA,1106,1,2023-01-09 09:54:09+00:00,[],
7410,https://github.com/R2D2Power/UVM.git,2021-12-16 19:43:58+00:00,Labs And Assignments from UVM,0,R2D2Power/UVM,439108387,SystemVerilog,UVM,19,1,2021-12-20 23:39:26+00:00,[],
7411,https://github.com/AI-Vector-Accelerator/cv32e40x-soc.git,2021-12-15 14:51:59+00:00,,1,AI-Vector-Accelerator/cv32e40x-soc,438667025,SystemVerilog,cv32e40x-soc,756,1,2022-03-16 23:59:11+00:00,[],https://api.github.com/licenses/isc
7412,https://github.com/Yantom1/digitation_course.git,2021-10-26 11:13:05+00:00,Technion Course- Digital Systems and Computer Structure,0,Yantom1/digitation_course,421391987,SystemVerilog,digitation_course,588,1,2024-03-13 05:37:00+00:00,[],
7413,https://github.com/haberme42/arbiter_verification.git,2021-09-12 10:50:00+00:00,UVM verification plan for arbiter DUT,0,haberme42/arbiter_verification,405615327,SystemVerilog,arbiter_verification,22,1,2023-07-22 08:25:44+00:00,[],https://api.github.com/licenses/apache-2.0
7414,https://github.com/jradding10/YouShallNotPass.git,2021-08-27 01:49:43+00:00,A Basys 3 digital lock box,0,jradding10/YouShallNotPass,400356922,SystemVerilog,YouShallNotPass,418,1,2021-12-22 19:58:42+00:00,[],https://api.github.com/licenses/mit
7415,https://github.com/UDXS/hdl-vlsi-exprs.git,2021-10-21 04:26:24+00:00,A collection of select Verilog/Innovus (GDS2-only) experiments,0,UDXS/hdl-vlsi-exprs,419579962,SystemVerilog,hdl-vlsi-exprs,540,1,2022-06-23 19:34:46+00:00,[],
7416,https://github.com/alerner-6502/NoC_partitioner.git,2021-12-23 21:20:06+00:00,,1,alerner-6502/NoC_partitioner,441298087,SystemVerilog,NoC_partitioner,1185,1,2022-06-01 22:20:05+00:00,[],
7417,https://github.com/skudlur/riscv-learn.git,2021-11-19 04:44:35+00:00,This repo consists of some RISC-V instructions written in SystemVerilog. They are definitely not to be compared to the real IS as I am just trying to understand them at this point.,0,skudlur/riscv-learn,429672211,SystemVerilog,riscv-learn,3,1,2021-11-19 10:08:14+00:00,[],
7418,https://github.com/ff1211/FPGA.git,2021-12-11 10:58:40+00:00,,0,ff1211/FPGA,437257148,SystemVerilog,FPGA,255,1,2022-05-24 04:14:27+00:00,[],
7419,https://github.com/chonein/Catch-me-if-You-Can-DigitalDesign.git,2021-08-18 04:43:35+00:00,,1,chonein/Catch-me-if-You-Can-DigitalDesign,397474834,SystemVerilog,Catch-me-if-You-Can-DigitalDesign,6521,1,2021-11-17 03:48:03+00:00,[],
7420,https://github.com/SteveLRojas/TRS-80_MC-10_DragonBoard.git,2021-12-17 23:46:04+00:00,TRS-80 model MC-10 implementation for DragonBoard FPGA boards.,0,SteveLRojas/TRS-80_MC-10_DragonBoard,439487426,SystemVerilog,TRS-80_MC-10_DragonBoard,20015,1,2023-11-21 18:30:19+00:00,[],
7421,https://github.com/Dragon-Git/Design_Pattern.git,2021-09-11 04:38:38+00:00,Implement design patterns with Systemverilog,0,Dragon-Git/Design_Pattern,405284225,SystemVerilog,Design_Pattern,32,1,2024-01-13 14:12:04+00:00,"['design-patterns', 'systemverilog']",
7422,https://github.com/eigenco/OPL3SPDIF.git,2021-10-20 11:20:32+00:00,PCI/ISA/RPi -> FPGA: OPL3 -> FPGA: SPDIF (TOSLINK) on Terasic DE0-CV.,0,eigenco/OPL3SPDIF,419299007,SystemVerilog,OPL3SPDIF,447,1,2024-03-24 15:29:47+00:00,[],
7423,https://github.com/HT12D/AXI_SPI_SLAVE.git,2021-10-03 06:33:53+00:00,,0,HT12D/AXI_SPI_SLAVE,412996804,SystemVerilog,AXI_SPI_SLAVE,43,1,2022-06-22 02:03:35+00:00,[],
7424,https://github.com/bigdot123456/vlogRun.git,2021-09-03 02:17:36+00:00,systemverilog and vhdl text parse,0,bigdot123456/vlogRun,402620724,SystemVerilog,vlogRun,52,1,2022-06-04 21:09:06+00:00,[],
7425,https://github.com/jiru1997/design-and-verification-of-MCDF-phase2.git,2021-11-17 07:58:19+00:00,design-and-verification-of-MCDF-phase2,0,jiru1997/design-and-verification-of-MCDF-phase2,428956306,SystemVerilog,design-and-verification-of-MCDF-phase2,15,1,2022-11-07 16:28:40+00:00,[],
7426,https://github.com/AdulisL/CSE-141L.git,2021-08-30 03:25:57+00:00,,0,AdulisL/CSE-141L,401204169,SystemVerilog,CSE-141L,8574,1,2021-09-23 03:50:48+00:00,[],
7427,https://github.com/tapegun/Simple-SLC-3-CPU-Processor.git,2021-09-28 22:02:34+00:00,,0,tapegun/Simple-SLC-3-CPU-Processor,411450684,SystemVerilog,Simple-SLC-3-CPU-Processor,83,1,2024-02-05 06:15:18+00:00,[],
7428,https://github.com/N-O-O-B-Coder/State-Machine-based-Controller-For-Traffic-Signal.git,2021-08-19 14:36:47+00:00,This repository provides a Verilog code for a state machine based Traffic Signal Controller,0,N-O-O-B-Coder/State-Machine-based-Controller-For-Traffic-Signal,397974139,SystemVerilog,State-Machine-based-Controller-For-Traffic-Signal,376,1,2024-02-11 04:20:52+00:00,"['statemachine', 'mealy-machine', 'systemverilog', 'verilog', 'hdl']",
7429,https://github.com/jehosuaa/sc_proc.git,2021-10-08 15:50:53+00:00,,0,jehosuaa/sc_proc,415044875,SystemVerilog,sc_proc,7,0,2021-10-08 15:52:28+00:00,[],
7430,https://github.com/sondip18/Verlog-Stopwatch.git,2021-09-15 08:05:20+00:00,,0,sondip18/Verlog-Stopwatch,406667543,SystemVerilog,Verlog-Stopwatch,3,0,2021-09-15 08:07:41+00:00,[],
7431,https://github.com/4Kamei/verilog_sources.git,2021-09-04 20:17:18+00:00,,0,4Kamei/verilog_sources,403148641,SystemVerilog,verilog_sources,196,0,2021-09-04 20:19:17+00:00,[],https://api.github.com/licenses/mit
7432,https://github.com/marwanibrahim546/Relu.git,2021-09-17 09:03:07+00:00,Relu Activation Function ,0,marwanibrahim546/Relu,407474735,SystemVerilog,Relu,29,0,2021-09-17 09:36:26+00:00,[],
7433,https://github.com/rhemm23/ece-554.git,2021-09-20 04:56:58+00:00,,0,rhemm23/ece-554,408315136,SystemVerilog,ece-554,512,0,2021-09-22 18:51:00+00:00,[],
7434,https://github.com/Sampsonksw/Avenger.git,2021-09-28 07:22:52+00:00,A min-soc ,0,Sampsonksw/Avenger,411178021,SystemVerilog,Avenger,1703,0,2021-11-04 06:27:53+00:00,[],https://api.github.com/licenses/apache-2.0
7435,https://github.com/miguel100398/radix4_booth_multiplier.git,2021-10-04 00:20:39+00:00,Radix4 booth multiplier,0,miguel100398/radix4_booth_multiplier,413228831,SystemVerilog,radix4_booth_multiplier,35,0,2021-10-05 02:09:10+00:00,[],https://api.github.com/licenses/gpl-3.0
7436,https://github.com/NermeenMohammed-M/Verification.git,2021-08-24 20:30:51+00:00,,1,NermeenMohammed-M/Verification,399596995,SystemVerilog,Verification,49,0,2021-10-12 16:28:17+00:00,[],
7437,https://github.com/harkerrussell/ECE111_Russell_Del-Torro.git,2021-08-26 00:07:07+00:00,Final Project Repo for ECE111 SS21 Final Project,0,harkerrussell/ECE111_Russell_Del-Torro,399989169,SystemVerilog,ECE111_Russell_Del-Torro,5063,0,2021-08-26 00:10:43+00:00,[],
7438,https://github.com/Shwetapatil05/avip_slave.git,2021-10-12 16:47:25+00:00,,1,Shwetapatil05/avip_slave,416420784,SystemVerilog,avip_slave,640,0,2021-12-14 09:16:47+00:00,[],
7439,https://github.com/taka30/fpga.git,2021-08-25 21:46:07+00:00,sandbox,0,taka30/fpga,399964640,SystemVerilog,fpga,9,0,2021-08-25 22:01:23+00:00,[],
7440,https://github.com/zipotron/ulx3s_sdram8.git,2021-10-09 11:26:19+00:00,,0,zipotron/ulx3s_sdram8,415289248,SystemVerilog,ulx3s_sdram8,11,0,2021-10-12 15:47:56+00:00,[],
7441,https://github.com/imbasmd/ARIMA-Hardware-Implementaion.git,2021-11-15 09:04:36+00:00,,0,imbasmd/ARIMA-Hardware-Implementaion,428191913,SystemVerilog,ARIMA-Hardware-Implementaion,8,0,2021-11-15 09:04:49+00:00,[],
7442,https://github.com/Tal-Ko/Digital-Systems-Simulation1.git,2021-11-27 10:46:17+00:00,Implementation of basic logic circuits up to a 64bit ALU,0,Tal-Ko/Digital-Systems-Simulation1,432433817,SystemVerilog,Digital-Systems-Simulation1,8,0,2021-11-29 12:39:27+00:00,[],
7443,https://github.com/pmanthu/SV.git,2021-12-16 22:43:51+00:00,,0,pmanthu/SV,439146354,SystemVerilog,SV,102,0,2021-12-16 22:51:08+00:00,[],
7444,https://github.com/cwirzenm/3002CEM_MipsSingleCycleMicroprocessor.git,2021-11-17 11:57:49+00:00,,0,cwirzenm/3002CEM_MipsSingleCycleMicroprocessor,429027546,SystemVerilog,3002CEM_MipsSingleCycleMicroprocessor,84,0,2021-11-17 12:03:21+00:00,[],
7445,https://github.com/js4ngu/Dang9_FPGA.git,2021-11-22 09:52:15+00:00,,1,js4ngu/Dang9_FPGA,430649676,SystemVerilog,Dang9_FPGA,57678,0,2021-12-23 15:12:35+00:00,[],
7446,https://github.com/rag1404/magicsquare_parametrization.git,2021-10-20 05:15:33+00:00,A program to demonstrate magic square with parameterization,0,rag1404/magicsquare_parametrization,419194169,SystemVerilog,magicsquare_parametrization,3,0,2021-10-20 05:23:35+00:00,[],
7447,https://github.com/dtrich2/ee271-project.git,2021-11-01 16:38:41+00:00,Project for Stanford EE271 Fall 2021,1,dtrich2/ee271-project,423540417,SystemVerilog,ee271-project,99431,0,2021-11-28 03:01:06+00:00,[],
7448,https://github.com/harihitode/ecliptic.git,2021-10-31 11:04:42+00:00,,0,harihitode/ecliptic,423123557,SystemVerilog,ecliptic,7,0,2021-10-31 16:09:18+00:00,[],https://api.github.com/licenses/mit
7449,https://github.com/rhit-davidsjt/ECE433_PongVGA.git,2021-10-25 18:28:18+00:00,,0,rhit-davidsjt/ECE433_PongVGA,421140379,SystemVerilog,ECE433_PongVGA,23509,0,2022-01-07 15:04:04+00:00,[],
7450,https://github.com/vk5-pdx/hamming_code.git,2021-10-20 03:24:18+00:00,Hamming encoder decoder in system verilog,0,vk5-pdx/hamming_code,419171350,SystemVerilog,hamming_code,4,0,2021-10-21 07:55:21+00:00,[],
7451,https://github.com/isa-Lai/Image_Processor.git,2021-12-20 03:33:05+00:00,FPGA Image Processor: Decode information from mic15 file.,0,isa-Lai/Image_Processor,440032452,SystemVerilog,Image_Processor,1634,0,2021-12-20 03:44:07+00:00,[],https://api.github.com/licenses/mit
7452,https://github.com/kenjo78/swerv_eh1_fpga.git,2021-08-15 11:29:25+00:00,,0,kenjo78/swerv_eh1_fpga,396328919,SystemVerilog,swerv_eh1_fpga,3877,0,2021-08-15 12:05:41+00:00,[],https://api.github.com/licenses/apache-2.0
7453,https://github.com/AI-SBU/Hardware-Generation-Tool.git,2021-08-18 04:20:47+00:00,,0,AI-SBU/Hardware-Generation-Tool,397470750,SystemVerilog,Hardware-Generation-Tool,666,0,2021-12-26 01:55:58+00:00,[],
7454,https://github.com/robertstar/AGC.git,2021-10-19 13:37:10+00:00,,0,robertstar/AGC,418939668,SystemVerilog,AGC,5,0,2021-10-19 13:38:09+00:00,[],
7455,https://github.com/pilipovicn/fv.git,2021-10-28 16:29:17+00:00,,0,pilipovicn/fv,422277742,SystemVerilog,fv,1,0,2021-10-28 16:31:22+00:00,[],
7456,https://github.com/ThymeTraveler/3096_prac6.git,2021-11-03 12:09:49+00:00,,0,ThymeTraveler/3096_prac6,424209011,SystemVerilog,3096_prac6,3,0,2021-11-03 17:32:43+00:00,[],
7457,https://github.com/emanu1004/Quiz_UVM.git,2021-10-27 03:57:09+00:00,Ambiente de pruebas en UVM para un detector de patrones,0,emanu1004/Quiz_UVM,421669897,SystemVerilog,Quiz_UVM,180,0,2021-10-27 04:44:08+00:00,[],
7458,https://github.com/vinmarbey/Prozessor.git,2021-11-05 09:53:15+00:00,,0,vinmarbey/Prozessor,424899584,SystemVerilog,Prozessor,95755,0,2021-11-10 12:36:43+00:00,[],
7459,https://github.com/ducall/redix8_unsigned8mul1.0.0.git,2021-12-10 08:27:12+00:00,,0,ducall/redix8_unsigned8mul1.0.0,436904662,SystemVerilog,redix8_unsigned8mul1.0.0,454,0,2021-12-10 08:30:45+00:00,[],
7460,https://github.com/prvbharadwaj1731/ACA_final_Project.git,2021-12-08 02:55:17+00:00,Performance of Branch Prediction on SweRV EH1 core,1,prvbharadwaj1731/ACA_final_Project,436096678,SystemVerilog,ACA_final_Project,2632,0,2021-12-14 05:51:58+00:00,[],
7461,https://github.com/muresant18/LAB5_DE_STM21.git,2021-12-12 13:21:54+00:00,,0,muresant18/LAB5_DE_STM21,437551474,SystemVerilog,LAB5_DE_STM21,4525,0,2021-12-12 13:25:54+00:00,[],
7462,https://github.com/AnishVipperla/riscvprocessorformulticoresystem.git,2021-12-12 17:52:23+00:00,,0,AnishVipperla/riscvprocessorformulticoresystem,437616610,SystemVerilog,riscvprocessorformulticoresystem,343,0,2021-12-12 17:56:05+00:00,[],
7463,https://github.com/sabbirshibli/Verilog_EDA-Playground.git,2021-10-03 09:23:50+00:00,Some verilog code examples for EDA Playground Simulator,0,sabbirshibli/Verilog_EDA-Playground,413031166,SystemVerilog,Verilog_EDA-Playground,7,0,2024-01-10 11:36:54+00:00,[],
7464,https://github.com/Ashley-Ratau/EEE3096S-Group-Work.git,2021-11-01 19:05:25+00:00,,0,Ashley-Ratau/EEE3096S-Group-Work,423584371,SystemVerilog,EEE3096S-Group-Work,295,0,2021-11-05 21:25:16+00:00,[],
7465,https://github.com/yink12138/DigitalLogicAssignment.git,2021-11-18 09:19:43+00:00,My digital logic assignment,0,yink12138/DigitalLogicAssignment,429366767,,DigitalLogicAssignment,8,0,2021-11-29 11:38:59+00:00,[],
7466,https://github.com/sufyankhan97/Knight-s-tour.git,2021-11-18 14:30:42+00:00,,0,sufyankhan97/Knight-s-tour,429461694,SystemVerilog,Knight-s-tour,5467,0,2023-04-02 02:53:00+00:00,[],
7467,https://github.com/parajk1/KTNE-CPE200L.git,2021-11-16 02:13:05+00:00,"CPE200L Final Project, it's a simplified version of Keep Talking and Nobody Explodes",0,parajk1/KTNE-CPE200L,428486905,SystemVerilog,KTNE-CPE200L,256,0,2021-12-05 17:58:24+00:00,[],
7468,https://github.com/sweet12prof/ComProtocols.git,2021-11-17 09:24:47+00:00,"hardware implementation of communication protocol, SPI, UART, PCI",0,sweet12prof/ComProtocols,428981809,SystemVerilog,ComProtocols,5,0,2021-11-21 07:39:07+00:00,[],
7469,https://github.com/pausalv/MIDIReceiver.git,2021-10-14 06:02:10+00:00,,0,pausalv/MIDIReceiver,417007578,SystemVerilog,MIDIReceiver,141,0,2023-08-08 08:16:21+00:00,[],
7470,https://github.com/calvinyao00/ECE437.git,2021-10-20 22:26:07+00:00,Source code and test bench designs for ECE437 lab,0,calvinyao00/ECE437,419507325,SystemVerilog,ECE437,4298,0,2023-06-20 11:03:43+00:00,[],
7471,https://github.com/crgrace/madcap.git,2021-10-26 17:46:51+00:00,Multiplexer ASIC for  Data and Clock Aggregation and Propagation,0,crgrace/madcap,421527527,SystemVerilog,madcap,502,0,2022-01-08 00:08:01+00:00,[],
7472,https://github.com/ulloazhector/arquitectura.git,2021-11-10 23:48:14+00:00,,1,ulloazhector/arquitectura,426813140,SystemVerilog,arquitectura,382,0,2023-02-13 15:17:34+00:00,[],
7473,https://github.com/imamura-slab/DPRs_test.git,2021-10-12 02:34:22+00:00,複数DPRをやってみる（できるかどうか）,0,imamura-slab/DPRs_test,416156176,SystemVerilog,DPRs_test,8,0,2021-11-02 02:08:57+00:00,[],
7474,https://github.com/mattsini1/udma_camera-master.git,2021-10-11 13:29:40+00:00,,1,mattsini1/udma_camera-master,415938943,SystemVerilog,udma_camera-master,39,0,2021-10-11 13:34:27+00:00,[],
7475,https://github.com/akseltorgerson/ECE554-MP5-TPU-Control-Unit.git,2021-09-30 19:38:43+00:00,Control unit for the TPU MAC,1,akseltorgerson/ECE554-MP5-TPU-Control-Unit,412202764,SystemVerilog,ECE554-MP5-TPU-Control-Unit,12,0,2021-09-30 20:03:50+00:00,[],
7476,https://github.com/thechosenone98/IL2203-Seminar-2.git,2021-10-03 15:12:41+00:00,,0,thechosenone98/IL2203-Seminar-2,413113189,SystemVerilog,IL2203-Seminar-2,44,0,2021-10-07 12:47:37+00:00,[],
7477,https://github.com/JordanUFlores/VerificacionJU.git,2021-11-04 01:03:34+00:00,Class activities repository,0,JordanUFlores/VerificacionJU,424429445,SystemVerilog,VerificacionJU,6,0,2021-11-19 22:56:51+00:00,[],
7478,https://github.com/emanu1004/quiz_uvm_fifo.git,2021-10-29 16:10:23+00:00,Traslada a la metodología UVM un ambiente de verificación por capas para una FIFO,0,emanu1004/quiz_uvm_fifo,422638259,SystemVerilog,quiz_uvm_fifo,11,0,2021-10-29 16:20:49+00:00,[],
7479,https://github.com/doraviv02/RTLDonkeyKongJR.git,2021-11-30 16:20:32+00:00,,0,doraviv02/RTLDonkeyKongJR,433501071,SystemVerilog,RTLDonkeyKongJR,815,0,2021-12-02 09:58:28+00:00,[],
7480,https://github.com/myreliavilla/4-bit-Johnson-Counter.git,2021-11-21 19:35:11+00:00,Synthesize Johnson counter using negation operator,0,myreliavilla/4-bit-Johnson-Counter,430462000,SystemVerilog,4-bit-Johnson-Counter,1,0,2021-11-21 19:37:03+00:00,[],
7481,https://github.com/Smattacus/carp.git,2021-09-06 18:41:08+00:00,ARP Block with testbench,0,Smattacus/carp,403725822,SystemVerilog,carp,2152,0,2022-08-08 20:58:03+00:00,[],
7482,https://github.com/nimra471/systemverilog-practice.git,2021-09-11 19:39:50+00:00,Practice codes of SystemVerilog.,0,nimra471/systemverilog-practice,405468039,SystemVerilog,systemverilog-practice,2,0,2021-09-14 10:38:55+00:00,['systemverilog'],
7483,https://github.com/sompally12/interface_bhaskar.git,2021-09-22 12:53:50+00:00,Interface execution code,0,sompally12/interface_bhaskar,409203706,SystemVerilog,interface_bhaskar,1,0,2021-09-22 12:54:33+00:00,[],
7484,https://github.com/RoraChen/Adder-Tree.git,2021-09-20 09:11:56+00:00,Using recursive modules in system verilog to implement a binary adder tree.,0,RoraChen/Adder-Tree,408377915,SystemVerilog,Adder-Tree,2,0,2023-06-22 07:55:19+00:00,[],
7485,https://github.com/sairamesh1973/OpenTitan.git,2021-09-08 11:00:51+00:00,,3,sairamesh1973/OpenTitan,404313801,SystemVerilog,OpenTitan,38871,0,2022-09-29 06:48:23+00:00,[],https://api.github.com/licenses/apache-2.0
7486,https://github.com/Radiophantom/i2c_controller.git,2021-08-20 11:43:41+00:00,,0,Radiophantom/i2c_controller,398257523,SystemVerilog,i2c_controller,10,0,2021-10-29 14:01:14+00:00,[],
7487,https://github.com/Vilanya/SIT329-Week_5.git,2021-08-22 12:01:05+00:00,,0,Vilanya/SIT329-Week_5,398788725,SystemVerilog,SIT329-Week_5,0,0,2021-08-22 12:01:30+00:00,[],
7488,https://github.com/mrreider/ece554_miniproject.git,2021-09-09 20:48:31+00:00,ECE554 ,0,mrreider/ece554_miniproject,404865633,SystemVerilog,ece554_miniproject,3849,0,2021-09-09 23:25:47+00:00,[],
7489,https://github.com/T-Szymk/timing_constraints_testbed.git,2021-09-10 13:38:23+00:00,project to practise defining timing constraints on FPGA,0,T-Szymk/timing_constraints_testbed,405093250,SystemVerilog,timing_constraints_testbed,6,0,2021-09-15 15:31:16+00:00,[],
7490,https://github.com/parthoBhoumk/VLSI2.git,2021-12-02 14:39:20+00:00,,0,parthoBhoumk/VLSI2,434256920,SystemVerilog,VLSI2,11,0,2021-12-03 14:01:52+00:00,[],
7491,https://github.com/HR1025/verilator_hr10255.git,2021-12-05 01:29:17+00:00,,1,HR1025/verilator_hr10255,435047336,SystemVerilog,verilator_hr10255,31731,0,2022-01-09 14:12:48+00:00,[],https://api.github.com/licenses/lgpl-3.0
7492,https://github.com/EzraCharles/MIPS_Single_Cycle_Charles_Ezra.git,2021-12-06 04:33:25+00:00,MIPS implementation of computer architecture from Bootcamp Pre-Silicon Validation by ITESO and INTEL,0,EzraCharles/MIPS_Single_Cycle_Charles_Ezra,435360606,SystemVerilog,MIPS_Single_Cycle_Charles_Ezra,12,0,2021-12-06 04:49:49+00:00,[],https://api.github.com/licenses/mit
7493,https://github.com/huicongxu/cpuDesign.git,2021-12-05 08:03:40+00:00,,0,huicongxu/cpuDesign,435107938,SystemVerilog,cpuDesign,9,0,2021-12-05 08:11:36+00:00,[],
7494,https://github.com/ajbeaulier/System-Verilog-Code.git,2021-12-16 21:11:53+00:00,Contains all System Verilog Modules,0,ajbeaulier/System-Verilog-Code,439128129,SystemVerilog,System-Verilog-Code,8451,0,2021-12-16 21:12:18+00:00,[],
7495,https://github.com/Aleksa98Stojkovic/Formal-Verification.git,2021-12-09 16:12:51+00:00,Small examples of formal verification application,0,Aleksa98Stojkovic/Formal-Verification,436680663,SystemVerilog,Formal-Verification,21,0,2022-02-14 13:11:12+00:00,[],
7496,https://github.com/anniejchu/i2scontroller.git,2021-12-09 20:16:37+00:00,,0,anniejchu/i2scontroller,436749453,SystemVerilog,i2scontroller,48185,0,2021-12-23 04:31:25+00:00,[],
7497,https://github.com/bren11/470proj.git,2021-12-12 00:08:11+00:00,,0,bren11/470proj,437416030,SystemVerilog,470proj,31866,0,2021-12-21 18:04:35+00:00,[],
7498,https://github.com/dpenebac/ece270.git,2021-12-14 19:20:55+00:00,,1,dpenebac/ece270,438373436,SystemVerilog,ece270,10,0,2021-12-14 19:25:15+00:00,[],
7499,https://github.com/jakefreeman/AD7476A_fpga_intf.git,2021-08-22 06:26:43+00:00,"Systemverilog implementation of a receiver for receiving data from an AD7476A ADC chip,",0,jakefreeman/AD7476A_fpga_intf,398730345,SystemVerilog,AD7476A_fpga_intf,18,0,2021-09-13 05:54:06+00:00,[],https://api.github.com/licenses/gpl-3.0
7500,https://github.com/zieglershai/space_invaders.git,2021-09-01 13:51:46+00:00,,0,zieglershai/space_invaders,402078635,SystemVerilog,space_invaders,325642,0,2021-12-22 21:56:19+00:00,[],
7501,https://github.com/ArsicAntonijo/procesor.git,2021-08-17 17:22:08+00:00,,0,ArsicAntonijo/procesor,397337737,SystemVerilog,procesor,112,0,2021-10-29 20:06:44+00:00,[],
7502,https://github.com/bmegyesi/swegram-v2.git,2021-12-15 14:06:37+00:00,SWEGRAM: Annotation and Analysis of English and Swedish Texts,1,bmegyesi/swegram-v2,438652006,SystemVerilog,swegram-v2,86974,0,2023-05-01 16:52:36+00:00,[],https://api.github.com/licenses/mit
7503,https://github.com/DivyeshMakwana12599/SystemVerilog.git,2021-08-24 07:26:22+00:00,,0,DivyeshMakwana12599/SystemVerilog,399373855,SystemVerilog,SystemVerilog,28,0,2021-08-24 07:43:32+00:00,[],
7504,https://github.com/egeroglu/BilkentCS223Project.git,2021-08-26 15:20:01+00:00,,0,egeroglu/BilkentCS223Project,400215084,SystemVerilog,BilkentCS223Project,1507,0,2022-11-15 14:11:13+00:00,[],
7505,https://github.com/linh97abc/uC-OS.git,2021-09-03 07:03:37+00:00,,0,linh97abc/uC-OS,402678109,SystemVerilog,uC-OS,36061,0,2021-09-03 07:06:14+00:00,[],
7506,https://github.com/TapiwaFaith/EEE3096S-.git,2021-08-21 13:53:54+00:00,,0,TapiwaFaith/EEE3096S-,398570480,SystemVerilog,EEE3096S-,4,0,2021-11-03 18:07:57+00:00,[],
7507,https://github.com/waynarbocangel/cse141LProcessor.git,2021-08-19 09:56:20+00:00,,0,waynarbocangel/cse141LProcessor,397895346,SystemVerilog,cse141LProcessor,41,0,2021-09-05 20:09:37+00:00,[],
7508,https://github.com/sltm-14/MIPS.git,2021-08-18 02:56:18+00:00,,0,sltm-14/MIPS,397454384,SystemVerilog,MIPS,4066,0,2021-08-19 03:27:50+00:00,[],
7509,https://github.com/raja-aadhithan/UVM.git,2021-09-04 13:36:25+00:00,"UVM Drivers to Scoreboards... this repository has the codes split up and spilled up, assemble those and you get a RAM UVM test bench ",0,raja-aadhithan/UVM,403065315,SystemVerilog,UVM,18,0,2023-10-24 07:35:49+00:00,[],
7510,https://github.com/kallmi28/1CPU_Tester.git,2021-09-28 14:39:45+00:00,,0,kallmi28/1CPU_Tester,411320411,SystemVerilog,1CPU_Tester,9,0,2021-09-28 14:44:33+00:00,[],
7511,https://github.com/zumahun/ARMV4S.git,2021-09-29 08:15:48+00:00,,0,zumahun/ARMV4S,411587176,SystemVerilog,ARMV4S,75,0,2021-09-29 08:18:21+00:00,[],
7512,https://github.com/GCET231/fpga_labs_21_1.git,2021-09-23 22:10:20+00:00,,0,GCET231/fpga_labs_21_1,409757165,SystemVerilog,fpga_labs_21_1,3282,0,2021-12-06 21:41:51+00:00,[],
7513,https://github.com/Liuxingyan-verify/TEST.git,2021-09-24 02:59:21+00:00,,0,Liuxingyan-verify/TEST,409813124,SystemVerilog,TEST,3,0,2021-09-24 03:19:20+00:00,[],
7514,https://github.com/Celtyee/ECE385.git,2021-09-23 02:25:25+00:00,ECE385: Digital Systems Laboratory,0,Celtyee/ECE385,409420537,SystemVerilog,ECE385,69764,0,2023-03-04 07:46:11+00:00,[],
7515,https://github.com/za1nrkhan/riscv-core.git,2021-09-22 20:22:02+00:00,,0,za1nrkhan/riscv-core,409345276,SystemVerilog,riscv-core,17,0,2021-09-27 08:57:49+00:00,[],
7516,https://github.com/jtalbert123/AXIS-I2C-Bridge.git,2021-09-12 17:19:05+00:00,,0,jtalbert123/AXIS-I2C-Bridge,405706055,SystemVerilog,AXIS-I2C-Bridge,260,0,2021-09-13 02:44:23+00:00,[],
7517,https://github.com/kanungoramakrishna/branch_predictors.git,2021-09-12 20:28:47+00:00,,0,kanungoramakrishna/branch_predictors,405746471,SystemVerilog,branch_predictors,211,0,2022-12-27 07:01:29+00:00,[],
7518,https://github.com/marwanibrahim546/AES_MONITOR.git,2021-09-09 17:53:22+00:00,the monitor of the AES project ,0,marwanibrahim546/AES_MONITOR,404819223,SystemVerilog,AES_MONITOR,40,0,2021-09-20 17:52:03+00:00,[],
7519,https://github.com/snowtothemax/ece554_miniproject.git,2021-09-09 20:37:09+00:00,,0,snowtothemax/ece554_miniproject,404862943,SystemVerilog,ece554_miniproject,563,0,2021-09-10 20:25:53+00:00,[],
7520,https://github.com/dwiti9494/Verilog_SystemVerilog.git,2021-09-18 21:04:37+00:00,Basic Verilog and System Verilog Practice,0,dwiti9494/Verilog_SystemVerilog,407967449,SystemVerilog,Verilog_SystemVerilog,2,0,2021-09-18 21:53:28+00:00,[],
7521,https://github.com/hopnets/vertigo_scheduler_fpga_implementation.git,2021-09-19 18:20:11+00:00,,0,hopnets/vertigo_scheduler_fpga_implementation,408203815,SystemVerilog,vertigo_scheduler_fpga_implementation,12,0,2021-11-01 23:26:08+00:00,[],
7522,https://github.com/BerthaBrenesB/Taller-de-Dise-oDigital.git,2021-08-15 02:00:37+00:00,Repositorio para el codigo de los laboratorios del curso de Taller de Diseño Digital,0,BerthaBrenesB/Taller-de-Dise-oDigital,396186129,SystemVerilog,Taller-de-Dise-oDigital,42110,0,2021-09-07 07:04:11+00:00,[],
7523,https://github.com/lampn0/riscv_pipeline.github.io.git,2021-08-28 07:56:08+00:00,RISC-V Pipeline,0,lampn0/riscv_pipeline.github.io,400735827,SystemVerilog,riscv_pipeline.github.io,9381,0,2021-08-30 08:18:26+00:00,[],
7524,https://github.com/fmodesto/nand2tetris_fpga.git,2021-10-16 23:24:03+00:00,,0,fmodesto/nand2tetris_fpga,417971503,SystemVerilog,nand2tetris_fpga,7,0,2021-10-17 13:02:02+00:00,[],
7525,https://github.com/ptapa1/VDIC_ptapa.git,2021-10-16 13:39:21+00:00,,0,ptapa1/VDIC_ptapa,417839117,SystemVerilog,VDIC_ptapa,2374,0,2021-12-11 11:34:34+00:00,[],
7526,https://github.com/valmyr/Solutions-HDLBits-Verilog-Practice.git,2021-10-19 23:29:02+00:00,Repositório destinado a soluções dos problemas propostos do site: https://hdlbits.01xz.net/wiki/Main_Page,0,valmyr/Solutions-HDLBits-Verilog-Practice,419121571,SystemVerilog,Solutions-HDLBits-Verilog-Practice,13,0,2021-10-27 23:45:59+00:00,[],
7527,https://github.com/ruofan-he/redpitaya_fpga.git,2021-10-10 10:57:21+00:00,,0,ruofan-he/redpitaya_fpga,415559091,SystemVerilog,redpitaya_fpga,236,0,2021-11-03 06:06:13+00:00,[],
7528,https://github.com/lukhanyoVena808/prac6_final_destination_vnxluk001_kzwvuy001.git,2021-10-31 13:38:59+00:00,,0,lukhanyoVena808/prac6_final_destination_vnxluk001_kzwvuy001,423158247,SystemVerilog,prac6_final_destination_vnxluk001_kzwvuy001,7,0,2021-11-03 21:17:59+00:00,[],
7529,https://github.com/shpegun60/open_std_fpga.git,2021-10-31 16:41:16+00:00,This std libraries on fpga,0,shpegun60/open_std_fpga,423203760,SystemVerilog,open_std_fpga,1164,0,2021-12-19 21:06:56+00:00,"['fpga-std', 'verilog', 'standard-library-fpga']",https://api.github.com/licenses/gpl-3.0
7530,https://github.com/PrajaktaPsu/PrajaktaPsu.git,2021-11-10 03:52:17+00:00,Config files for my GitHub profile.,0,PrajaktaPsu/PrajaktaPsu,426476564,SystemVerilog,PrajaktaPsu,382,0,2021-12-13 18:17:18+00:00,"['config', 'github-config']",
7531,https://github.com/testeous-co/mpsis_2021.git,2021-11-30 10:48:01+00:00,,0,testeous-co/mpsis_2021,433393109,SystemVerilog,mpsis_2021,1,0,2021-11-30 10:52:10+00:00,[],
7532,https://github.com/Shr3yash/VerilogHDL.git,2021-11-24 04:44:50+00:00,,0,Shr3yash/VerilogHDL,431349456,SystemVerilog,VerilogHDL,2,0,2021-12-17 11:18:16+00:00,[],
7533,https://github.com/nextDesignd/fpga-programming.git,2021-11-28 16:12:05+00:00,,0,nextDesignd/fpga-programming,432760765,SystemVerilog,fpga-programming,1,0,2021-11-28 16:12:15+00:00,[],
7534,https://github.com/Quantumlyy/fpga-learning.git,2021-12-17 22:10:16+00:00,,0,Quantumlyy/fpga-learning,439472321,SystemVerilog,fpga-learning,8,0,2021-12-19 21:30:14+00:00,[],
7535,https://github.com/MoisesPerez2305/LAB4_calvar_mperz.git,2021-12-18 22:26:29+00:00,Verification_FIFO,0,MoisesPerez2305/LAB4_calvar_mperz,439727115,SystemVerilog,LAB4_calvar_mperz,90,0,2022-01-11 03:25:19+00:00,[],
7536,https://github.com/prajwalp98/bubblesort.git,2021-11-07 04:01:14+00:00,,0,prajwalp98/bubblesort,425408099,SystemVerilog,bubblesort,1,0,2021-11-07 04:02:40+00:00,[],
7537,https://github.com/Josem9718/aFIFO_Verification_Alba_Castro-Miguel_Benavides.git,2021-12-10 02:06:43+00:00,aFIFO verification environment,2,Josem9718/aFIFO_Verification_Alba_Castro-Miguel_Benavides,436820793,SystemVerilog,aFIFO_Verification_Alba_Castro-Miguel_Benavides,10,0,2022-01-07 23:32:41+00:00,[],
7538,https://github.com/stultusverus/SystemVerilog-Practices.git,2021-11-29 07:57:04+00:00,This repository contains SystemVerilog code examples for beginners.,0,stultusverus/SystemVerilog-Practices,432951425,SystemVerilog,SystemVerilog-Practices,18,0,2021-11-30 18:06:33+00:00,"['systemverilog', 'fpga', 'hdl', 'hdlbits', 'verilog']",https://api.github.com/licenses/mit
7539,https://github.com/tem-str/Lab1_nov2021.git,2021-11-29 14:40:58+00:00,,0,tem-str/Lab1_nov2021,433079089,SystemVerilog,Lab1_nov2021,10536,0,2021-11-29 14:53:29+00:00,[],https://api.github.com/licenses/apache-2.0
7540,https://github.com/asinghani/ice40-wearable.git,2021-12-23 01:29:39+00:00,iCE40 FPGA boards in wearable form-factors,0,asinghani/ice40-wearable,441028770,SystemVerilog,ice40-wearable,7744,0,2021-12-23 07:10:22+00:00,[],
7541,https://github.com/danigarzon268/risc-v-arch.git,2021-11-15 00:12:42+00:00,🛠 El repositorio contiene la construcción de un procesador basado en la arquitectura Risc-V,0,danigarzon268/risc-v-arch,428072758,SystemVerilog,risc-v-arch,904,0,2021-12-15 19:04:13+00:00,"['verilog', 'architecture', 'risc-v']",
7542,https://github.com/knyuchen/fir_accelerator.git,2021-11-22 20:51:38+00:00,Implementation of Programmable FIR Accelerator,0,knyuchen/fir_accelerator,430861288,SystemVerilog,fir_accelerator,24,0,2021-11-23 01:49:25+00:00,"['accelerator', 'filter', 'systemverilog', 'python']",
7543,https://github.com/kbotteon/fpga.git,2021-12-16 04:51:19+00:00,Assorted FPGA things,0,kbotteon/fpga,438863605,SystemVerilog,fpga,35,0,2023-10-15 19:47:27+00:00,[],https://api.github.com/licenses/mit
7544,https://github.com/kleberfsobrinho/loac.git,2021-10-15 18:48:12+00:00,Repositório destinado ao armazenamento das atividades realizadas durante a disciplina de LOAC.,0,kleberfsobrinho/loac,417603294,SystemVerilog,loac,3153,0,2021-11-01 18:53:40+00:00,[],https://api.github.com/licenses/mit
7545,https://github.com/JoashCWK/fir-filter.git,2021-10-17 12:40:05+00:00,An individual university project where digital filters for audio were designed and tested on an FPGA,0,JoashCWK/fir-filter,418127436,SystemVerilog,fir-filter,3,0,2021-10-17 12:44:29+00:00,[],
7546,https://github.com/Verdvana/AXI_Lite_FIFO.git,2021-10-13 13:03:58+00:00,AXI4-Lite FIFO,0,Verdvana/AXI_Lite_FIFO,416745712,SystemVerilog,AXI_Lite_FIFO,2555,0,2023-04-10 10:14:26+00:00,[],https://api.github.com/licenses/apache-2.0
7547,https://github.com/tyee2/ta_ece551project.git,2021-10-17 17:53:12+00:00,Project for ECE 551 Fall 2021 at University of Wisconsin-Madison,0,tyee2/ta_ece551project,418212034,SystemVerilog,ta_ece551project,213,0,2022-02-05 00:08:44+00:00,[],
7548,https://github.com/Lim-Calculus/System-Verilog-Testbench.git,2021-09-22 07:31:54+00:00,Group 20 Assignment ,0,Lim-Calculus/System-Verilog-Testbench,409106596,SystemVerilog,System-Verilog-Testbench,6,0,2021-09-22 07:49:57+00:00,[],
7549,https://github.com/phuong27102000/NTRU_HRSS_KEM_SV.git,2021-09-25 16:13:21+00:00,RTL for NTRU-HRSS-KEM by System Verilog,0,phuong27102000/NTRU_HRSS_KEM_SV,410319713,SystemVerilog,NTRU_HRSS_KEM_SV,18934,0,2021-11-17 12:39:08+00:00,[],https://api.github.com/licenses/mit
7550,https://github.com/ducall/FixAmul_8_redix16.git,2021-11-01 09:34:41+00:00,,0,ducall/FixAmul_8_redix16,423408548,SystemVerilog,FixAmul_8_redix16,227,0,2021-11-16 01:59:37+00:00,[],
7551,https://github.com/sumanth102/design_compiler.git,2021-10-19 16:31:47+00:00,,0,sumanth102/design_compiler,419006499,SystemVerilog,design_compiler,9,0,2021-10-19 17:09:01+00:00,[],
7552,https://github.com/joaniwan/VDIC-2021.git,2021-10-19 18:41:21+00:00,This repository contains the lab results from VDIC classes.,0,joaniwan/VDIC-2021,419050456,SystemVerilog,VDIC-2021,1335,0,2021-10-24 15:01:52+00:00,[],
7553,https://github.com/jschj/ice40-graphics.git,2021-10-21 22:05:11+00:00,,0,jschj/ice40-graphics,419889934,SystemVerilog,ice40-graphics,7,0,2021-10-26 14:32:57+00:00,[],
7554,https://github.com/Waxpple/open_hardware_repo.git,2021-09-14 07:49:00+00:00,,0,Waxpple/open_hardware_repo,406274081,SystemVerilog,open_hardware_repo,4,0,2021-09-23 09:01:31+00:00,[],
7555,https://github.com/thequantizer/fpga_quickstart_pynq_z1.git,2021-09-13 08:04:37+00:00,FPGA Quick Start - PYNQ Z1 (Xilinx Vivado),0,thequantizer/fpga_quickstart_pynq_z1,405885560,SystemVerilog,fpga_quickstart_pynq_z1,68,0,2022-06-05 03:27:26+00:00,[],
7556,https://github.com/Dvorak17/ece554_miniproject.git,2021-09-09 21:25:10+00:00,,0,Dvorak17/ece554_miniproject,404874190,SystemVerilog,ece554_miniproject,798,0,2021-10-05 05:44:48+00:00,[],
7557,https://github.com/akseltorgerson/ECE554-MP2-TPU-MAC.git,2021-09-14 20:50:48+00:00,Minilab 2: TPU MAC Unit Design and Test,1,akseltorgerson/ECE554-MP2-TPU-MAC,406517417,SystemVerilog,ECE554-MP2-TPU-MAC,4,0,2021-10-07 17:39:02+00:00,[],
7558,https://github.com/NisaMercan/single-cycle-processor.git,2021-10-09 16:53:45+00:00,"This was a  Logic Circuits and Design project.  Although I'm not fond of this project right now, this was a huge success a while back ago as a second-grader. And I got an AA for that. So nostalgia yay!",0,NisaMercan/single-cycle-processor,415368478,SystemVerilog,single-cycle-processor,354,0,2021-10-09 17:08:54+00:00,[],
7559,https://github.com/CWerberger/viterbi.git,2021-10-06 08:36:49+00:00,,0,CWerberger/viterbi,414132757,SystemVerilog,viterbi,30,0,2021-11-07 12:00:45+00:00,[],
7560,https://github.com/jyoshnalakshmi/JYO.git,2021-10-26 08:04:28+00:00,,0,jyoshnalakshmi/JYO,421335103,SystemVerilog,JYO,551,0,2021-10-26 08:08:32+00:00,[],
7561,https://github.com/TheNikitaD/test.git,2021-10-27 15:06:13+00:00,,0,TheNikitaD/test,421865106,SystemVerilog,test,3090,0,2021-10-27 15:14:33+00:00,[],
7562,https://github.com/oz-ben-zaken/arbiter.git,2021-10-27 20:50:44+00:00,,0,oz-ben-zaken/arbiter,421969923,SystemVerilog,arbiter,10,0,2021-10-27 20:53:01+00:00,[],
7563,https://github.com/zchen665/ece554_miniproject.git,2021-09-09 21:00:50+00:00,project folder for ece554,0,zchen665/ece554_miniproject,404868589,SystemVerilog,ece554_miniproject,514,0,2021-09-11 21:36:19+00:00,[],
7564,https://github.com/vtkhatri/hamming_code.git,2021-10-22 17:04:22+00:00,Hamming Encoder and Decoder in System Verilog,0,vtkhatri/hamming_code,420179860,SystemVerilog,hamming_code,4,0,2021-10-22 17:16:31+00:00,[],
7566,https://github.com/zedianzhang/Simple-9-bit-Processor.git,2021-08-21 06:34:09+00:00,,0,zedianzhang/Simple-9-bit-Processor,398485474,SystemVerilog,Simple-9-bit-Processor,1721,0,2021-08-31 02:14:02+00:00,[],
7567,https://github.com/MrWonder323/8bit_Counter-UVM.git,2021-08-18 11:51:13+00:00,,0,MrWonder323/8bit_Counter-UVM,397582167,SystemVerilog,8bit_Counter-UVM,2,0,2021-08-24 14:40:27+00:00,[],
7568,https://github.com/lalfredoaa/Morse_Code_FPGA.git,2021-09-01 04:49:30+00:00,,0,lalfredoaa/Morse_Code_FPGA,401934375,SystemVerilog,Morse_Code_FPGA,3935,0,2021-09-01 05:04:20+00:00,[],
7569,https://github.com/NawafSwe/verilog-full-adder.git,2021-12-18 20:14:18+00:00,,0,NawafSwe/verilog-full-adder,439706342,SystemVerilog,verilog-full-adder,0,0,2021-12-18 20:15:57+00:00,[],
7570,https://github.com/wzf2000/MazeDigitalDesign.git,2021-12-19 11:52:01+00:00,digital design project,0,wzf2000/MazeDigitalDesign,439850060,SystemVerilog,MazeDigitalDesign,375,0,2021-12-19 12:15:36+00:00,[],
7571,https://github.com/786ammar/Barrel-Shifter.git,2021-11-10 04:07:54+00:00,Barrel Shifter in System Verilog,0,786ammar/Barrel-Shifter,426479746,SystemVerilog,Barrel-Shifter,3,0,2021-11-10 04:13:00+00:00,[],https://api.github.com/licenses/mit
7572,https://github.com/myreliavilla/1-bit-ALU-to-4-bit-ALU.git,2021-11-21 19:32:05+00:00,"Convert 1-bit ALU to 4-bit ALU and change ALU module instantiation in ALU top module from explicit  name port connection to dot-star port connection  ▪ Port name of module alu in alu.sv can be changed when converting explicit name port  connection to dot-star port connection for alu instantiation in module alu_top.sv  ▪ Synthesize alu_top and alu module  ▪ Using provided alu testbench, run simulation for dot-star based alu instantiation in alu_top  ▪ Review synthesis results (FPGA resource usage and RTL netlist/schematic)  ▪ Review input and output signals in simulation waveform ",0,myreliavilla/1-bit-ALU-to-4-bit-ALU,430461411,SystemVerilog,1-bit-ALU-to-4-bit-ALU,2,0,2021-11-21 19:32:53+00:00,[],
7573,https://github.com/chrisl212/mips.git,2021-12-05 06:32:20+00:00,,0,chrisl212/mips,435092270,SystemVerilog,mips,17923,0,2022-03-15 19:11:20+00:00,[],
7574,https://github.com/Arima9/Task3_FIFO_Veri.git,2021-12-05 20:20:18+00:00,,0,Arima9/Task3_FIFO_Veri,435269785,SystemVerilog,Task3_FIFO_Veri,22,0,2021-12-20 05:30:21+00:00,[],
7575,https://github.com/riser44/ECE751_Embedded_Computing_Systems.git,2021-12-25 04:45:06+00:00,Contains all the details about the final project we completed in ECE 751 course in the Fall 2021 semester at UW-Madison.,0,riser44/ECE751_Embedded_Computing_Systems,441605381,SystemVerilog,ECE751_Embedded_Computing_Systems,13426,0,2021-12-25 04:57:35+00:00,[],
7576,https://github.com/Evgeny17387/DigitalSystems.git,2021-11-26 13:06:18+00:00,,0,Evgeny17387/DigitalSystems,432181935,SystemVerilog,DigitalSystems,861,0,2022-11-11 10:03:49+00:00,[],
7577,https://github.com/tim433/Logic-Design.git,2021-11-28 16:08:25+00:00,,0,tim433/Logic-Design,432759796,SystemVerilog,Logic-Design,6491,0,2021-12-08 15:37:33+00:00,[],
7578,https://github.com/miezekatzendompteur/pong.git,2021-11-12 13:21:26+00:00,pong game in VHDL for Digilent Nexys 4 ,0,miezekatzendompteur/pong,427367620,SystemVerilog,pong,94,0,2021-11-12 13:24:01+00:00,[],
7579,https://github.com/tomsmolin/Digital_Systems_and_Computer_Structure_Course.git,2021-11-02 20:17:45+00:00,,0,tomsmolin/Digital_Systems_and_Computer_Structure_Course,423986597,SystemVerilog,Digital_Systems_and_Computer_Structure_Course,680,0,2021-11-30 10:41:55+00:00,[],
7580,https://github.com/butter9scotch/SoC-MNIST.git,2021-11-26 19:10:56+00:00,,0,butter9scotch/SoC-MNIST,432278198,SystemVerilog,SoC-MNIST,21,0,2021-12-12 04:06:13+00:00,[],
7581,https://github.com/gnosthas/CVA6-Contest.git,2021-11-29 13:31:09+00:00,,0,gnosthas/CVA6-Contest,433054612,SystemVerilog,CVA6-Contest,41740,0,2022-05-27 08:07:09+00:00,[],
7582,https://github.com/esromneb/ovp-ip.git,2021-11-16 01:43:15+00:00,,0,esromneb/ovp-ip,428480303,SystemVerilog,ovp-ip,0,0,2021-11-16 01:45:23+00:00,[],
7583,https://github.com/luiseduardo8899/SVMiniParser.git,2021-10-06 19:10:08+00:00,Python scripts for SystemVerilog parsing tasks and function and creating VSCode hover tips,0,luiseduardo8899/SVMiniParser,414339831,SystemVerilog,SVMiniParser,550,0,2021-12-22 18:21:48+00:00,[],https://api.github.com/licenses/mit
7584,https://github.com/miguel100398/UART.git,2021-10-05 01:27:19+00:00,Full duplex UART,0,miguel100398/UART,413635740,SystemVerilog,UART,45,0,2021-10-19 02:09:38+00:00,[],https://api.github.com/licenses/gpl-3.0
7585,https://github.com/ee19m047/systemVerilog.git,2021-10-07 13:46:47+00:00,,0,ee19m047/systemVerilog,414619238,SystemVerilog,systemVerilog,24,0,2021-10-09 08:36:26+00:00,[],
7586,https://github.com/eAlmonte21/clase_verificacion.git,2021-11-10 00:56:12+00:00,,0,eAlmonte21/clase_verificacion,426436609,SystemVerilog,clase_verificacion,10,0,2022-01-10 17:06:31+00:00,[],
7587,https://github.com/alextkoch/385-Final-Project.git,2021-11-16 21:24:22+00:00,Final Project for ECE 385,0,alextkoch/385-Final-Project,428818060,SystemVerilog,385-Final-Project,246,0,2021-12-12 21:57:33+00:00,[],
7588,https://github.com/jwadehyun/SystemVerilog.git,2021-08-13 02:23:48+00:00,SystemVerilog Projects,0,jwadehyun/SystemVerilog,395497518,SystemVerilog,SystemVerilog,10878,0,2021-08-13 05:38:24+00:00,[],
7589,https://github.com/Skanda-Prasad/BareBones.git,2021-10-15 08:13:03+00:00,,1,Skanda-Prasad/BareBones,417420317,,BareBones,21,0,2021-10-15 11:19:55+00:00,[],
7590,https://github.com/MukulTomar1/avip_p1.git,2021-10-15 10:39:23+00:00,,1,MukulTomar1/avip_p1,417461979,SystemVerilog,avip_p1,645,0,2021-11-07 16:58:37+00:00,[],
7591,https://github.com/HasnaaMahmoud/Asic.git,2021-09-29 17:25:08+00:00,,0,HasnaaMahmoud/Asic,411767905,SystemVerilog,Asic,5,0,2021-11-13 19:28:19+00:00,[],
7592,https://github.com/efebeydogan01/CS223.git,2021-10-03 14:16:22+00:00,Lab assignments from second year Bilkent CS223 (Digital Design) course.,0,efebeydogan01/CS223,413097830,SystemVerilog,CS223,26798,0,2022-11-27 10:15:42+00:00,[],
7593,https://github.com/YosysHQ-Docs/Blog-Async-Load-FFs.git,2021-10-07 16:17:13+00:00,,0,YosysHQ-Docs/Blog-Async-Load-FFs,414673639,SystemVerilog,Blog-Async-Load-FFs,8,0,2022-12-19 16:12:06+00:00,[],
7594,https://github.com/wengmaochi/FPGA_Random_Num_Generator.git,2021-10-06 16:09:39+00:00,,0,wengmaochi/FPGA_Random_Num_Generator,414282576,SystemVerilog,FPGA_Random_Num_Generator,18,0,2021-11-21 18:20:16+00:00,[],
7595,https://github.com/rooged/611-Labs.git,2021-10-13 21:03:15+00:00,,0,rooged/611-Labs,416897151,SystemVerilog,611-Labs,706,0,2023-09-14 16:51:49+00:00,[],
7596,https://github.com/tslotboom/cme435-prelab_2.git,2021-09-28 15:40:08+00:00,,0,tslotboom/cme435-prelab_2,411342580,SystemVerilog,cme435-prelab_2,650,0,2021-10-03 23:51:58+00:00,[],
7597,https://github.com/funnybr0ther/LELEC2531-Labs.git,2021-09-23 19:34:53+00:00,Digital design labs for the LELEC2531 course,0,funnybr0ther/LELEC2531-Labs,409721306,SystemVerilog,LELEC2531-Labs,8016,0,2021-09-24 08:44:47+00:00,[],
7598,https://github.com/jintaos2/sword4.git,2021-09-29 15:42:02+00:00,,0,jintaos2/sword4,411733959,SystemVerilog,sword4,37,0,2022-01-07 14:24:48+00:00,[],
7599,https://github.com/hego2022/aes-scoreboard.git,2021-09-26 14:00:48+00:00,,0,hego2022/aes-scoreboard,410567119,SystemVerilog,aes-scoreboard,19,0,2023-10-22 19:18:05+00:00,[],
7600,https://github.com/ZeviYS/EEE3095S-WorkPackage6.git,2021-10-29 17:33:21+00:00,Tutorial 6 and Practical 6 for EEE3095S 2021,0,ZeviYS/EEE3095S-WorkPackage6,422661749,SystemVerilog,EEE3095S-WorkPackage6,2,0,2021-10-29 17:34:26+00:00,[],
7601,https://github.com/MSD-Group-19/Checkpoint1-2.git,2021-10-30 18:13:10+00:00,,0,MSD-Group-19/Checkpoint1-2,422957527,SystemVerilog,Checkpoint1-2,1,0,2021-10-30 18:15:21+00:00,[],
7602,https://github.com/dannyg919/Pokemodules.git,2021-11-07 23:15:10+00:00,Contains the files for our pokemodules project,0,dannyg919/Pokemodules,425638822,SystemVerilog,Pokemodules,221,0,2021-12-11 00:09:37+00:00,[],
7603,https://github.com/calvar122/Cesar_Alvarado.git,2021-11-08 05:57:53+00:00,Verification of Digital Systems repository,0,calvar122/Cesar_Alvarado,425715437,SystemVerilog,Cesar_Alvarado,11,0,2022-01-10 07:12:43+00:00,[],
7604,https://github.com/Arima9/Verificacion_T1.git,2021-11-08 02:26:03+00:00,,0,Arima9/Verificacion_T1,425673121,SystemVerilog,Verificacion_T1,15,0,2021-12-13 22:08:20+00:00,[],
7605,https://github.com/JRivera131313/RiveraJ_MatrixAdd.git,2021-11-09 18:41:53+00:00,,0,JRivera131313/RiveraJ_MatrixAdd,426346198,SystemVerilog,RiveraJ_MatrixAdd,1123,0,2021-11-17 22:31:08+00:00,[],
7606,https://github.com/isabellabunnell/FGPAprojects.git,2021-11-25 23:39:23+00:00,A repository full of FGPA projects that I have built,0,isabellabunnell/FGPAprojects,432003117,SystemVerilog,FGPAprojects,23,0,2021-11-25 23:43:47+00:00,[],
7607,https://github.com/Aadil-Eyasim/Prac6_ASMABU002_EYSMUH002.git,2021-11-03 20:52:07+00:00,EEE3096S-2021-WorkPackage6,0,Aadil-Eyasim/Prac6_ASMABU002_EYSMUH002,424376893,SystemVerilog,Prac6_ASMABU002_EYSMUH002,4,0,2021-11-03 20:55:03+00:00,[],
7608,https://github.com/awojty/6.111_final_project.git,2021-11-05 17:33:45+00:00,,0,awojty/6.111_final_project,425033564,SystemVerilog,6.111_final_project,32537,0,2021-12-10 17:46:42+00:00,[],
7609,https://github.com/lalfredoaa/MIPS_Pipeline_SV.git,2021-09-01 04:41:45+00:00,,0,lalfredoaa/MIPS_Pipeline_SV,401932893,SystemVerilog,MIPS_Pipeline_SV,277,0,2021-09-01 04:42:10+00:00,[],
7610,https://github.com/guyarad7/Arbiter-Verification.git,2021-09-11 12:52:20+00:00,A comprehensive testbench for a round-robin arbiter.,1,guyarad7/Arbiter-Verification,405378239,SystemVerilog,Arbiter-Verification,626,0,2021-10-09 00:23:45+00:00,[],
7611,https://github.com/ClaytonJPayne/IntDivider.git,2021-09-12 04:05:22+00:00,RTL design that performs long division on two integers,0,ClaytonJPayne/IntDivider,405542292,SystemVerilog,IntDivider,7,0,2022-06-18 06:03:47+00:00,[],
7612,https://github.com/mustafaberktaskin/RISCV_design.git,2021-09-08 13:52:00+00:00,,0,mustafaberktaskin/RISCV_design,404366053,SystemVerilog,RISCV_design,2752,0,2021-09-08 13:53:13+00:00,[],
7613,https://github.com/Ramsesuct/EEE3096F.git,2021-08-15 14:16:16+00:00,Repository for 3096,0,Ramsesuct/EEE3096F,396374678,SystemVerilog,EEE3096F,5,0,2021-10-24 19:58:02+00:00,[],https://api.github.com/licenses/mit
7614,https://github.com/AvaniLaghate/AMBA-AHB.git,2021-08-15 17:29:30+00:00,,0,AvaniLaghate/AMBA-AHB,396433505,SystemVerilog,AMBA-AHB,234,0,2021-08-29 12:34:33+00:00,[],https://api.github.com/licenses/gpl-3.0
7615,https://github.com/jlschole/System-Synthesis.git,2021-08-18 16:22:14+00:00,System Synthesis Circuit Lab Work,0,jlschole/System-Synthesis,397665687,SystemVerilog,System-Synthesis,7,0,2021-08-21 15:04:47+00:00,[],
7616,https://github.com/ardaOnal/CS223.git,2021-08-25 12:53:56+00:00,Digital design and FPGA (Basys3) programming.,0,ardaOnal/CS223,399818334,SystemVerilog,CS223,4713,0,2021-09-12 20:15:57+00:00,[],
7617,https://github.com/TheKalty/Minilab1.git,2021-09-09 20:05:19+00:00,,0,TheKalty/Minilab1,404855350,SystemVerilog,Minilab1,640,0,2021-12-17 19:27:28+00:00,[],
7618,https://github.com/randyma01/CE3201-Proyecto-Final.git,2021-11-19 19:05:14+00:00,Proyecto Final del curso de CE3201 - Taller de Diseño Digital.,1,randyma01/CE3201-Proyecto-Final,429906524,SystemVerilog,CE3201-Proyecto-Final,19806,0,2021-12-11 17:21:51+00:00,[],
7619,https://github.com/myreliavilla/N-bit-gray-code-to-binary-value-conversion.git,2021-11-21 19:46:09+00:00,"Given a number N=4, generate bit patterns from 0 to 2^N-1 such that successive patterns differ by one bit. ",0,myreliavilla/N-bit-gray-code-to-binary-value-conversion,430464291,SystemVerilog,N-bit-gray-code-to-binary-value-conversion,1,0,2021-11-21 19:46:38+00:00,[],
7620,https://github.com/antonyctyung/sha256.git,2021-11-24 06:27:09+00:00,,0,antonyctyung/sha256,431371722,SystemVerilog,sha256,639,0,2021-12-03 23:53:37+00:00,[],https://api.github.com/licenses/gpl-3.0
7621,https://github.com/manikant-cisma/counter.git,2021-12-23 06:05:48+00:00,,0,manikant-cisma/counter,441079794,SystemVerilog,counter,2,0,2021-12-24 06:23:49+00:00,[],
7622,https://github.com/pabloreyesrobles/ipd432-tarea2.git,2021-12-11 04:09:41+00:00,,0,pabloreyesrobles/ipd432-tarea2,437184223,SystemVerilog,ipd432-tarea2,74,0,2022-01-10 03:25:41+00:00,[],
7623,https://github.com/sama18-meet/sifratiot01.git,2021-12-10 12:35:26+00:00,,0,sama18-meet/sifratiot01,436973447,SystemVerilog,sifratiot01,20,0,2021-12-14 13:26:44+00:00,[],
7624,https://github.com/shrutiverma13/Single-Port-RAM.git,2021-12-06 11:22:16+00:00,"Built a 128 byte single port RAM using verilog. 7 bit data can be inputed and outputed in one go. When read and write operations are not selected, the RAM is tristated.",0,shrutiverma13/Single-Port-RAM,435468663,SystemVerilog,Single-Port-RAM,3,0,2021-12-09 13:56:29+00:00,[],
7625,https://github.com/MasterPlayer/sys-mng-drp-ctrlr.git,2021-12-02 14:44:42+00:00,System Monitor/Manager DRP controller for reading data from IP core over DRP protocol,0,MasterPlayer/sys-mng-drp-ctrlr,434258879,SystemVerilog,sys-mng-drp-ctrlr,50,0,2021-12-02 14:44:49+00:00,[],https://api.github.com/licenses/mit
7626,https://github.com/RyanHunter-DV/advanceUVM.git,2021-12-02 15:05:23+00:00,examples of UVM usage,0,RyanHunter-DV/advanceUVM,434266538,SystemVerilog,advanceUVM,11903,0,2023-01-13 15:21:28+00:00,[],
7627,https://github.com/jseguisa/SAP1Computer.git,2021-11-30 15:09:34+00:00,,0,jseguisa/SAP1Computer,433476688,SystemVerilog,SAP1Computer,11,0,2022-02-03 10:45:49+00:00,[],
7628,https://github.com/aangelakis/Super-Mario-FPGA-VGA.git,2021-09-22 15:24:54+00:00,,0,aangelakis/Super-Mario-FPGA-VGA,409256744,SystemVerilog,Super-Mario-FPGA-VGA,50203,0,2021-09-23 12:01:48+00:00,[],
7629,https://github.com/akseltorgerson/ECE554-MP3-Systolic-Array.git,2021-09-21 19:52:18+00:00,Systolic Array,1,akseltorgerson/ECE554-MP3-Systolic-Array,408955656,SystemVerilog,ECE554-MP3-Systolic-Array,4,0,2021-10-07 17:39:33+00:00,[],
7630,https://github.com/pabloreyesrobles/ipd432-tarea1.git,2021-10-22 04:30:02+00:00,,0,pabloreyesrobles/ipd432-tarea1,419965693,SystemVerilog,ipd432-tarea1,51097,0,2021-12-01 22:56:50+00:00,[],
7631,https://github.com/wiresboy/ctf-writeups.git,2021-10-11 04:07:25+00:00,,0,wiresboy/ctf-writeups,415774122,SystemVerilog,ctf-writeups,251,0,2021-10-12 03:28:32+00:00,[],
7632,https://github.com/robertstar/BFSK_DEMOD.git,2021-10-19 13:39:52+00:00,,0,robertstar/BFSK_DEMOD,418940721,SystemVerilog,BFSK_DEMOD,30,0,2021-10-19 13:40:52+00:00,[],
7633,https://github.com/anatoli-hancharou/simd-alu-256.git,2021-10-24 17:32:42+00:00,,0,anatoli-hancharou/simd-alu-256,420750888,SystemVerilog,simd-alu-256,32,0,2023-08-25 19:13:03+00:00,[],https://api.github.com/licenses/mit
7634,https://github.com/apareakash/Arithmatic-and-logical-unit-with-application-using-verilog.git,2021-08-24 12:26:38+00:00,,0,apareakash/Arithmatic-and-logical-unit-with-application-using-verilog,399456241,SystemVerilog,Arithmatic-and-logical-unit-with-application-using-verilog,3,0,2021-08-24 12:44:45+00:00,[],
7635,https://github.com/emiliomarquez/Sixteen-Instructions-Per-Second-ISA.git,2021-09-06 19:45:14+00:00,Instruction Set Architecture,0,emiliomarquez/Sixteen-Instructions-Per-Second-ISA,403741114,SystemVerilog,Sixteen-Instructions-Per-Second-ISA,28767,0,2021-09-06 19:48:16+00:00,[],
7636,https://github.com/OscarAraya18/EL3307.git,2021-09-17 23:25:03+00:00,"Repositorio del curso EL3307 (Diseño Lógico), utilizado para compartir el código escrito en SystemVerilog con los estudiantes del IIS-2021.",0,OscarAraya18/EL3307,407703727,SystemVerilog,EL3307,3222,0,2021-10-17 22:06:13+00:00,[],
7637,https://github.com/uscope-platform/uscope_hdl.git,2021-09-18 07:14:06+00:00,,1,uscope-platform/uscope_hdl,407786324,SystemVerilog,uscope_hdl,2900,0,2021-12-29 15:23:57+00:00,[],https://api.github.com/licenses/apache-2.0
7638,https://github.com/akseltorgerson/ECE554-MP1-FIFO.git,2021-09-09 20:57:09+00:00,ECE 554 Capstone Miniproject,1,akseltorgerson/ECE554-MP1-FIFO,404867696,SystemVerilog,ECE554-MP1-FIFO,581,0,2021-09-29 03:44:24+00:00,[],
7639,https://github.com/rejoymathews32/Async_FIFO_Verif.git,2021-10-26 15:56:10+00:00,In this project I will be designing an Asynchronous FIFO with Grey Code Synchronizers. This is my first attempt at UVM based verification for the FIFO.,0,rejoymathews32/Async_FIFO_Verif,421490615,SystemVerilog,Async_FIFO_Verif,52,0,2021-11-15 03:18:06+00:00,[],https://api.github.com/licenses/gpl-3.0
7640,https://github.com/ClssEdmilson/16_Bits_Multiplier.git,2021-10-31 16:51:49+00:00,16 bits multiplier module and testbench verification with SystemVerilog,0,ClssEdmilson/16_Bits_Multiplier,423206359,SystemVerilog,16_Bits_Multiplier,3,0,2021-10-31 17:43:09+00:00,[],
7641,https://github.com/chriswebbb/Microprocessor_Design_SystemVerilog.git,2021-10-27 12:05:04+00:00,,0,chriswebbb/Microprocessor_Design_SystemVerilog,421801150,SystemVerilog,Microprocessor_Design_SystemVerilog,814,0,2021-10-28 06:53:49+00:00,[],https://api.github.com/licenses/mit
7642,https://github.com/platinum95/NesMulator.git,2021-09-27 02:08:21+00:00,NES Emulator in SystemVerilog targeting Zynq SoC,0,platinum95/NesMulator,410713005,SystemVerilog,NesMulator,90,0,2021-11-09 05:58:17+00:00,[],
7643,https://github.com/bharatgohil/motion_ctrl_card.git,2021-10-14 16:41:34+00:00,,0,bharatgohil/motion_ctrl_card,417208480,SystemVerilog,motion_ctrl_card,3,0,2021-10-14 16:56:32+00:00,[],
7644,https://github.com/SamMahara/Workpackage-5.git,2021-10-13 22:43:18+00:00,,0,SamMahara/Workpackage-5,416918505,SystemVerilog,Workpackage-5,7,0,2021-10-16 20:40:53+00:00,[],
7645,https://github.com/David-Solorzano/Quiz-Clase.git,2021-10-12 22:19:17+00:00,,0,David-Solorzano/Quiz-Clase,416514691,SystemVerilog,Quiz-Clase,16,0,2021-10-18 20:57:06+00:00,[],
7646,https://github.com/chiaaaaaaa/eth-proj.git,2021-10-12 11:17:15+00:00,,0,chiaaaaaaa/eth-proj,416305220,SystemVerilog,eth-proj,63,0,2021-12-08 09:29:08+00:00,[],https://api.github.com/licenses/gpl-3.0
7647,https://github.com/PascalZh/MIHPR_SoC.git,2021-10-15 13:44:04+00:00,,0,PascalZh/MIHPR_SoC,417514326,SystemVerilog,MIHPR_SoC,5915,0,2021-11-17 16:16:47+00:00,[],
7648,https://github.com/TraitorablePL/VDIC.git,2021-10-14 12:16:18+00:00,Repository for Verification of Digital Integrated Circuits,0,TraitorablePL/VDIC,417117646,SystemVerilog,VDIC,502,0,2022-01-06 18:35:06+00:00,[],
7649,https://github.com/99Angelrm/SAD.git,2021-09-06 01:45:34+00:00,,0,99Angelrm/SAD,403453565,SystemVerilog,SAD,20,0,2021-09-06 01:48:13+00:00,[],
7650,https://github.com/TapiwaFaith/EEE3096S_PRAC6.git,2021-11-03 18:09:29+00:00,,0,TapiwaFaith/EEE3096S_PRAC6,424332207,SystemVerilog,EEE3096S_PRAC6,6,0,2021-11-03 18:12:43+00:00,[],
7651,https://github.com/cdlavila/unicycle-processor-risc-v-rv32i.git,2021-08-18 15:06:28+00:00,This is a SystemVerilog implementation of the Unicycle RISC-V RV32I processor and this was the final project for Computer Architecture class.,0,cdlavila/unicycle-processor-risc-v-rv32i,397642766,SystemVerilog,unicycle-processor-risc-v-rv32i,11,0,2022-09-16 04:09:23+00:00,[],https://api.github.com/licenses/mit
7652,https://github.com/abisai-iteso/sv_verif.git,2021-11-16 22:16:56+00:00,This repository contains shared files and solved problems of SV for verification.,0,abisai-iteso/sv_verif,428830744,SystemVerilog,sv_verif,16,0,2021-12-07 00:54:50+00:00,[],https://api.github.com/licenses/cc0-1.0
7653,https://github.com/Amaanmmn/Lab4.git,2021-11-06 04:27:35+00:00,cpen 311 lab 4 stuff,0,Amaanmmn/Lab4,425155125,SystemVerilog,Lab4,1,0,2021-11-06 04:29:44+00:00,[],
7654,https://github.com/fuanruisu/digSystemsVerification.git,2021-11-07 03:16:57+00:00,,0,fuanruisu/digSystemsVerification,425401999,SystemVerilog,digSystemsVerification,8,0,2022-01-06 16:02:42+00:00,[],
7655,https://github.com/v-p-chavan/my_linux_git.git,2021-11-14 15:04:18+00:00,,0,v-p-chavan/my_linux_git,427959844,SystemVerilog,my_linux_git,20,0,2021-12-09 07:51:12+00:00,[],
7656,https://github.com/MSD-Group-19/Checkpoint-3.git,2021-11-15 17:15:31+00:00,,0,MSD-Group-19/Checkpoint-3,428355123,SystemVerilog,Checkpoint-3,2,0,2021-11-15 17:16:13+00:00,[],
7657,https://github.com/Sasank39/EE271.git,2021-11-09 21:53:48+00:00,Digital Circuits and Systems,0,Sasank39/EE271,426398180,SystemVerilog,EE271,39,0,2022-03-02 03:33:26+00:00,[],
7658,https://github.com/chrisskiberg/TFE4152-Project-SPICE.git,2021-11-09 21:45:43+00:00,SPICE code for the project in the course TFE4152. With the implemented design of the analog circuit. And a testbench for the design.,1,chrisskiberg/TFE4152-Project-SPICE,426396306,SystemVerilog,TFE4152-Project-SPICE,21,0,2021-11-19 08:10:14+00:00,[],
7659,https://github.com/dschaefer/fpga-bounce.git,2021-11-13 16:34:22+00:00,Example fpga bounce with Yosys simulation.,0,dschaefer/fpga-bounce,427717420,SystemVerilog,fpga-bounce,7,0,2021-11-13 17:00:41+00:00,[],
7660,https://github.com/Dragon201701/ECE551.git,2021-11-14 17:21:44+00:00,,0,Dragon201701/ECE551,427993215,SystemVerilog,ECE551,139493,0,2021-11-14 17:36:46+00:00,[],
7661,https://github.com/myreliavilla/Synthesize-2to1-Multiplexer-MUX-SystemVerilog.git,2021-11-21 19:15:33+00:00,"Understand 2to1 MUX systemverilog behavioral level, dataflow level and gatelevel  code  Synthesize each of these representations of 2to1 MUX using Altera Quartus Prime  Using Netlist viewer in Quartus Altera review RTL Viewer and Post technology mapping and  fitting schematics. ",0,myreliavilla/Synthesize-2to1-Multiplexer-MUX-SystemVerilog,430458014,SystemVerilog,Synthesize-2to1-Multiplexer-MUX-SystemVerilog,2150,0,2021-11-21 19:26:05+00:00,[],
7662,https://github.com/ManuelG28/uvm-hello-world.git,2021-11-08 14:17:50+00:00,,0,ManuelG28/uvm-hello-world,425866035,SystemVerilog,uvm-hello-world,533,0,2021-11-08 14:18:13+00:00,[],
7663,https://github.com/jmat97/RPD22.git,2021-12-06 13:43:44+00:00,R-peak detector,1,jmat97/RPD22,435512404,SystemVerilog,RPD22,106344,0,2021-12-20 21:05:41+00:00,[],
7664,https://github.com/alon-hartman/044252.git,2021-12-11 09:18:15+00:00,,0,alon-hartman/044252,437237111,SystemVerilog,044252,4617,0,2022-04-16 07:13:18+00:00,[],
7665,https://github.com/Izziabby/Amp-lified.git,2021-12-11 22:33:22+00:00,,0,Izziabby/Amp-lified,437402659,SystemVerilog,Amp-lified,21668,0,2021-12-20 04:41:25+00:00,[],
7666,https://github.com/lilanka/kythera.git,2021-12-11 18:03:47+00:00,32 bit CPU,0,lilanka/kythera,437353967,SystemVerilog,kythera,2851,0,2022-06-21 18:19:34+00:00,[],
7667,https://github.com/gmanojkumarr/avsdtcaml.git,2021-12-13 17:53:09+00:00,Tensor Core Accelerator for Machine Learning,0,gmanojkumarr/avsdtcaml,437971445,SystemVerilog,avsdtcaml,6,0,2023-01-09 09:54:26+00:00,[],
7668,https://github.com/mirayayerdem/Simple-Processor-CS223-Lab-Project-.git,2021-11-28 18:09:19+00:00,"It is a simple processor written with System Verilog. This simple processor supports four instructions which are load, store, add and subtract.",0,mirayayerdem/Simple-Processor-CS223-Lab-Project-,432788437,SystemVerilog,Simple-Processor-CS223-Lab-Project-,474,0,2022-02-16 10:49:54+00:00,[],
7669,https://github.com/muresant18/LAB4_DE_STM21.git,2021-11-29 22:46:24+00:00,PWM signal generator and FSM for a Vending Machine,0,muresant18/LAB4_DE_STM21,433220107,SystemVerilog,LAB4_DE_STM21,21651,0,2021-12-05 22:58:50+00:00,[],
7670,https://github.com/ivana17/VLSI-Project.git,2021-12-22 18:20:43+00:00,,0,ivana17/VLSI-Project,440948043,SystemVerilog,VLSI-Project,112,0,2021-12-22 18:21:57+00:00,[],
7671,https://github.com/Enock21/LOAC.git,2021-12-22 11:30:57+00:00,Exercícios em Systemverilog para a disciplina de Laboratório de Organização e Arquitetura de Computadores,0,Enock21/LOAC,440835923,SystemVerilog,LOAC,300,0,2021-12-22 15:24:14+00:00,[],
7672,https://github.com/r-vazquez/roberto_vazquez.git,2021-11-04 01:35:17+00:00,Digital System Verification,0,r-vazquez/roberto_vazquez,424436222,SystemVerilog,roberto_vazquez,10,0,2021-11-19 22:30:29+00:00,[],
7673,https://github.com/marcospazianibrunella/project-zero.git,2021-09-22 08:30:32+00:00,,0,marcospazianibrunella/project-zero,409123801,SystemVerilog,project-zero,11,0,2024-02-14 15:29:58+00:00,[],
7674,https://github.com/andmiele/SystemVerilogUtils.git,2021-10-05 02:48:22+00:00,System Verilog implementation of memory other utility modules,0,andmiele/SystemVerilogUtils,413652546,SystemVerilog,SystemVerilogUtils,20,0,2022-01-02 05:28:57+00:00,[],https://api.github.com/licenses/apache-2.0
7675,https://github.com/seekaddo/ape_core.git,2021-12-13 21:24:43+00:00,APE ( Authenticated Permutation-Based Encryption for Lightweight Cryptography ),0,seekaddo/ape_core,438029305,SystemVerilog,ape_core,302,0,2021-12-13 22:12:53+00:00,[],https://api.github.com/licenses/mit
7676,https://github.com/4DV4NC3M3N7/complex-number-multiplier.git,2021-12-02 12:20:31+00:00,"i built a 16bits signed complex number multiplier, the multiplier comprise of 32 adders 32bits signed that are use for multiplication and two adder for extending the sign of the multiplicant and multiplier.",0,4DV4NC3M3N7/complex-number-multiplier,434209845,SystemVerilog,complex-number-multiplier,8,0,2021-12-02 13:03:59+00:00,[],
7677,https://github.com/saw235/lowrisc_prim.git,2021-09-11 16:52:32+00:00,lowRISC primitives separated out in its own repository for reuse in other projects,0,saw235/lowrisc_prim,405433223,SystemVerilog,lowrisc_prim,760,0,2021-09-11 16:54:02+00:00,[],
7678,https://github.com/Flickman1/UnderSea-Laboratory.git,2021-09-29 00:55:47+00:00,Bachelor of Electrical Engineering Capstone,0,Flickman1/UnderSea-Laboratory,411484150,SystemVerilog,UnderSea-Laboratory,3,0,2021-10-04 02:03:21+00:00,[],
7679,https://github.com/samschiedermayer/ECE551-Project.git,2021-11-15 18:12:05+00:00,This project is systemverilog code to run on a cyclone iv fpga to control a robot through an obstacle course.,0,samschiedermayer/ECE551-Project,428372561,SystemVerilog,ECE551-Project,2130,0,2021-12-11 19:53:48+00:00,[],https://api.github.com/licenses/mit
7680,https://github.com/zeeshandildar-rs/zeeshandildar-rs.git,2021-09-29 11:44:41+00:00,Config files for my GitHub profile.,0,zeeshandildar-rs/zeeshandildar-rs,411651235,SystemVerilog,zeeshandildar-rs,1,0,2021-12-06 11:08:58+00:00,"['config', 'github-config']",
7681,https://github.com/KapilKumar05/CS203-PROJECT.git,2021-10-26 06:42:45+00:00,,0,KapilKumar05/CS203-PROJECT,421310658,SystemVerilog,CS203-PROJECT,20,0,2023-05-12 07:11:15+00:00,[],
7682,https://github.com/nwkrix/FullAdder_UVM_1.git,2021-10-29 07:28:13+00:00,,0,nwkrix/FullAdder_UVM_1,422481057,SystemVerilog,FullAdder_UVM_1,3,0,2021-10-29 08:18:02+00:00,[],
7683,https://github.com/rinr2602/tictactoe.git,2021-11-01 17:15:34+00:00,,0,rinr2602/tictactoe,423552115,SystemVerilog,tictactoe,8,0,2021-11-01 17:16:34+00:00,[],
7684,https://github.com/vjabarca/Advanced-Peripheral-Bus-APB-.git,2021-11-11 07:35:45+00:00,,0,vjabarca/Advanced-Peripheral-Bus-APB-,426910808,SystemVerilog,Advanced-Peripheral-Bus-APB-,10,0,2021-11-11 07:46:28+00:00,[],
7685,https://github.com/anithasamanthula/spi_avip_testcases.git,2021-11-10 04:13:01+00:00,,0,anithasamanthula/spi_avip_testcases,426480753,SystemVerilog,spi_avip_testcases,48,0,2021-11-10 05:28:52+00:00,[],
7686,https://github.com/MacPCH/Proyecto_3_VFCI.git,2021-11-24 00:38:05+00:00,"Proyecto 3 del curso de verificacion funcional de circuitos intregados delkk Instfituto Tecnológico de Costa Rica, se comprueba un multiplicador de 32 bits usando UVM",0,MacPCH/Proyecto_3_VFCI,431298887,SystemVerilog,Proyecto_3_VFCI,53,0,2021-11-24 00:49:35+00:00,[],https://api.github.com/licenses/gpl-3.0
7687,https://github.com/gilbertmike/sorting-machine.git,2021-11-21 02:00:32+00:00,Soring with FPGA for fun.,0,gilbertmike/sorting-machine,430251724,SystemVerilog,sorting-machine,29,0,2021-11-30 22:22:47+00:00,[],https://api.github.com/licenses/mit
7688,https://github.com/calvar122/Reg_File_Alvarado_1_Cesar.git,2021-11-23 03:48:04+00:00,Repository for Register file by Cesar Alvarado,0,calvar122/Reg_File_Alvarado_1_Cesar,430950110,SystemVerilog,Reg_File_Alvarado_1_Cesar,653,0,2021-11-23 04:07:47+00:00,[],
7689,https://github.com/ShangchengXu/wavlet_in_fpga.git,2021-12-08 05:04:53+00:00,,1,ShangchengXu/wavlet_in_fpga,436122900,SystemVerilog,wavlet_in_fpga,13,0,2021-12-10 10:05:28+00:00,[],
7690,https://github.com/sams-santos/digital-circuits.git,2021-12-11 14:24:35+00:00,Some Digital Circuit projects,0,sams-santos/digital-circuits,437303282,SystemVerilog,digital-circuits,728,0,2021-12-13 19:14:47+00:00,[],
7691,https://github.com/hayekr/MIPS_Architecture.git,2021-12-07 19:33:43+00:00,32-bit MIPS Architecture,0,hayekr/MIPS_Architecture,436003777,SystemVerilog,MIPS_Architecture,7,0,2021-12-07 19:37:27+00:00,[],
7692,https://github.com/JPShen-UWM/ece554_miniproject.git,2021-09-11 05:06:13+00:00,,0,JPShen-UWM/ece554_miniproject,405288712,SystemVerilog,ece554_miniproject,2592,0,2021-09-30 06:08:17+00:00,[],
7693,https://github.com/abirhossen786/comp_arch_course.git,2021-09-30 18:59:41+00:00,,0,abirhossen786/comp_arch_course,412189664,SystemVerilog,comp_arch_course,19,0,2021-09-30 19:00:33+00:00,[],
7694,https://github.com/alonso9v9/TFG_UVM_BUS.git,2021-10-03 22:37:13+00:00,,0,alonso9v9/TFG_UVM_BUS,413212685,SystemVerilog,TFG_UVM_BUS,298,0,2021-11-11 15:13:52+00:00,[],
7695,https://github.com/shaikaikov/Verification_final_project.git,2021-09-14 11:42:53+00:00,,0,shaikaikov/Verification_final_project,406343336,SystemVerilog,Verification_final_project,225,0,2021-09-14 22:47:16+00:00,[],
7696,https://github.com/ryoaqswde/MIPS.git,2021-08-15 00:52:30+00:00,,0,ryoaqswde/MIPS,396174093,SystemVerilog,MIPS,4,0,2021-08-17 08:45:28+00:00,[],
7697,https://github.com/rillomas/nine_segment_led.git,2021-08-23 06:43:56+00:00,Sample for nine segment LED blinking with Cyclone 10 LP,0,rillomas/nine_segment_led,399000246,SystemVerilog,nine_segment_led,36,0,2021-09-19 02:07:06+00:00,[],
7698,https://github.com/iremnurcolak/AXI4-lite-Interconnect.git,2021-08-25 10:39:12+00:00,,0,iremnurcolak/AXI4-lite-Interconnect,399781259,SystemVerilog,AXI4-lite-Interconnect,7,0,2022-01-14 05:58:38+00:00,[],
7699,https://github.com/HourunLi/Mips-Processor-Design.git,2021-12-21 09:28:02+00:00,"Computor organization and design course lab, including single cycle for 10 inst and pipeline for 50 inst",3,HourunLi/Mips-Processor-Design,440460303,SystemVerilog,Mips-Processor-Design,662,0,2022-03-29 13:10:55+00:00,[],
7700,https://github.com/Elias-Rosales/MIPSMulticycleProcessor.git,2021-12-21 21:12:25+00:00,Hardware description of a MIPS Multi-Cycle Microprocessor,0,Elias-Rosales/MIPSMulticycleProcessor,440651644,SystemVerilog,MIPSMulticycleProcessor,5,0,2021-12-21 21:28:13+00:00,[],
7701,https://github.com/calvar122/MIPS_Multi_Alvarado_Cesar.git,2021-12-06 05:00:51+00:00,Repository for MIPS Multicycle Processor,0,calvar122/MIPS_Multi_Alvarado_Cesar,435365859,SystemVerilog,MIPS_Multi_Alvarado_Cesar,1719,0,2021-12-06 10:32:21+00:00,[],
7702,https://github.com/LeQuangHung00/Riscv_pineline.git,2021-12-05 08:50:27+00:00,,0,LeQuangHung00/Riscv_pineline,435116460,SystemVerilog,Riscv_pineline,6457,0,2022-01-04 15:05:17+00:00,[],
7703,https://github.com/rhemm23/minilab5-temp.git,2021-09-29 23:18:51+00:00,,0,rhemm23/minilab5-temp,411856941,SystemVerilog,minilab5-temp,76,0,2021-10-05 21:21:47+00:00,[],
7704,https://github.com/MohamedAli25/SPI.git,2021-09-06 18:25:09+00:00,,0,MohamedAli25/SPI,403722013,SystemVerilog,SPI,7,0,2021-09-24 07:21:20+00:00,[],
7705,https://github.com/akseltorgerson/ECE554-MP4-Systolic-Array-Memory.git,2021-09-29 17:08:46+00:00,Systolic array memory implementation,1,akseltorgerson/ECE554-MP4-Systolic-Array-Memory,411762685,SystemVerilog,ECE554-MP4-Systolic-Array-Memory,6,0,2021-09-29 17:10:35+00:00,[],
7706,https://github.com/ALAN-Hu-1999/ELEC402_project1.git,2021-09-26 23:59:26+00:00,,0,ALAN-Hu-1999/ELEC402_project1,410690062,SystemVerilog,ELEC402_project1,1976,0,2021-10-01 03:21:35+00:00,[],
7707,https://github.com/IanJiangICT/uart-monitor.git,2021-12-22 08:02:27+00:00,Monitor the UART data.,0,IanJiangICT/uart-monitor,440780275,SystemVerilog,uart-monitor,3,0,2022-01-07 06:47:05+00:00,[],https://api.github.com/licenses/bsd-3-clause
7708,https://github.com/fenc1022/finn_mvau_rtl.git,2021-12-06 23:19:07+00:00,,0,fenc1022/finn_mvau_rtl,435678296,SystemVerilog,finn_mvau_rtl,35,0,2022-01-08 05:48:17+00:00,[],
7709,https://github.com/ManuelG28/pulpino.git,2021-11-24 14:45:31+00:00,,0,ManuelG28/pulpino,431521153,SystemVerilog,pulpino,2475,0,2021-11-24 14:47:29+00:00,[],
7710,https://github.com/FelixH316/SystemVerilog_AGC_2021.git,2021-11-23 05:39:05+00:00,This repository has some examples using SystemVerilog,0,FelixH316/SystemVerilog_AGC_2021,430974114,SystemVerilog,SystemVerilog_AGC_2021,30,0,2021-11-23 06:00:42+00:00,[],
7711,https://github.com/rhemm23/verilog-temp.git,2021-11-28 04:06:59+00:00,,0,rhemm23/verilog-temp,432614948,SystemVerilog,verilog-temp,13,0,2021-11-28 08:36:09+00:00,[],
7712,https://github.com/siddhantsingh14/RV32IM-OOO.git,2021-11-25 20:51:56+00:00,,0,siddhantsingh14/RV32IM-OOO,431974113,SystemVerilog,RV32IM-OOO,657,0,2021-12-22 19:44:47+00:00,[],
7713,https://github.com/chang-chih-yao/audio_data_path.git,2021-10-11 09:28:02+00:00,audio_data_path,0,chang-chih-yao/audio_data_path,415859758,SystemVerilog,audio_data_path,1579,0,2021-10-12 16:30:28+00:00,[],
7714,https://github.com/harshapatnala/Functional-Verification-of-LC3-with-UVM.git,2021-10-12 03:32:55+00:00,"This project deals with the chip-level functional verification of pipelined LC3 microprocessor with UVM. The project is split into parts based on the five block stages of the design. Currently, I am working at the block-level verification of the decode stage of the processor. At this point, the test environment is built for the decode stage based on UVM component hierarchy.  Part of this sub-project is executed using the UVMF code generator.",0,harshapatnala/Functional-Verification-of-LC3-with-UVM,416169916,SystemVerilog,Functional-Verification-of-LC3-with-UVM,80,0,2022-08-27 00:00:27+00:00,[],
7715,https://github.com/ralfgad/Multiplicador_2021.git,2021-10-06 09:29:04+00:00,Multiplicador con el algoritmo de Booth modificado,0,ralfgad/Multiplicador_2021,414148541,SystemVerilog,Multiplicador_2021,245,0,2021-10-06 09:32:10+00:00,[],
7716,https://github.com/vtkhatri/dram-controller.git,2021-10-14 19:05:05+00:00,Repository for keeping track of Final Project for ECE 585 Fall 2021 at PSU,2,vtkhatri/dram-controller,417251492,SystemVerilog,dram-controller,371,0,2022-02-04 06:12:57+00:00,[],
7717,https://github.com/robertstar/BUKS2.git,2021-10-19 11:54:49+00:00,,0,robertstar/BUKS2,418903189,SystemVerilog,BUKS2,24472,0,2021-10-19 11:56:52+00:00,[],
7718,https://github.com/zwystar/rvv_vector.git,2021-10-17 13:04:09+00:00,risc-v vector,0,zwystar/rvv_vector,418133431,SystemVerilog,rvv_vector,91,0,2021-11-23 15:11:37+00:00,[],
7719,https://github.com/mcardona94/QUIZ_UVM.git,2021-10-19 02:40:09+00:00,,0,mcardona94/QUIZ_UVM,418744028,SystemVerilog,QUIZ_UVM,76,0,2021-10-19 02:41:29+00:00,[],
7720,https://github.com/mitchell-fanger/uart-tx-rx.git,2021-09-13 22:55:34+00:00,,0,mitchell-fanger/uart-tx-rx,406152879,SystemVerilog,uart-tx-rx,13,0,2021-09-13 22:57:36+00:00,[],
7721,https://github.com/Radiophantom/avalon_lib.git,2021-09-04 16:38:45+00:00,,0,Radiophantom/avalon_lib,403106817,SystemVerilog,avalon_lib,14,0,2021-09-24 14:20:52+00:00,[],
7722,https://github.com/samuelmi/lab8.git,2021-11-03 20:53:01+00:00,Comp 541 Lab 8,0,samuelmi/lab8,424377100,SystemVerilog,lab8,260,0,2021-11-03 20:55:15+00:00,[],
7723,https://github.com/Ubospica/Hummingbird.git,2021-11-14 15:40:13+00:00,A RISC-V simulator written in Verilog.,1,Ubospica/Hummingbird,427968653,SystemVerilog,Hummingbird,48132,0,2022-04-19 06:59:06+00:00,[],
7724,https://github.com/yasho2249/ece_571_hw3.git,2021-11-21 12:35:20+00:00,hw3 soln_files,0,yasho2249/ece_571_hw3,430361478,SystemVerilog,ece_571_hw3,4169,0,2021-11-23 02:36:08+00:00,[],
7725,https://github.com/myreliavilla/Clock-divide-by-3.git,2021-11-21 19:51:11+00:00,▪ Input clkin (input faster clock which needs to be divided)  ▪ Input reset (synchronous reset and high reset)  ▪ Output clkout (3 times divided clkout signal) ,0,myreliavilla/Clock-divide-by-3,430465352,SystemVerilog,Clock-divide-by-3,1,0,2021-11-21 19:52:25+00:00,[],
7726,https://github.com/RDCerdas/proyecto3.git,2021-11-05 03:07:10+00:00,,0,RDCerdas/proyecto3,424812343,SystemVerilog,proyecto3,203,0,2021-11-16 02:11:56+00:00,[],
7727,https://github.com/jquinonezb/JOSE_QUINONEZ_VERIFICATION.git,2021-11-06 16:32:15+00:00,This repository is a place where all my digital systems verification practices will be.,0,jquinonezb/JOSE_QUINONEZ_VERIFICATION,425293388,SystemVerilog,JOSE_QUINONEZ_VERIFICATION,36,0,2022-01-10 17:01:32+00:00,[],
7728,https://github.com/animesh0123/My_project_synchronous_FIFO.git,2021-11-05 12:04:49+00:00,I have written design in Verilog HDL and verify the same using testbench,0,animesh0123/My_project_synchronous_FIFO,424934092,SystemVerilog,My_project_synchronous_FIFO,243,0,2021-11-05 12:09:01+00:00,[],https://api.github.com/licenses/mit
7729,https://github.com/calvar122/Sistema_Mem_Alvarado_Cesar.git,2021-11-30 20:56:20+00:00,Repository for Memory system of MIPS microprocesor by Cesar Alvarado,0,calvar122/Sistema_Mem_Alvarado_Cesar,433583581,SystemVerilog,Sistema_Mem_Alvarado_Cesar,2,0,2021-11-30 21:12:11+00:00,[],
7730,https://github.com/EzraCharles/Sistema_Mem_Charles_Ezra.git,2021-12-01 03:33:30+00:00,Memory System of MIPS processor,0,EzraCharles/Sistema_Mem_Charles_Ezra,433670729,SystemVerilog,Sistema_Mem_Charles_Ezra,5,0,2021-12-01 03:36:32+00:00,[],https://api.github.com/licenses/mit
7731,https://github.com/grantminer/keep-it-synth-le-stupid.git,2021-12-02 22:22:45+00:00,,0,grantminer/keep-it-synth-le-stupid,434392227,SystemVerilog,keep-it-synth-le-stupid,1043,0,2021-12-22 04:14:30+00:00,[],
7732,https://github.com/momoph46/VLSI2021_HW1.git,2021-12-02 18:04:16+00:00,,0,momoph46/VLSI2021_HW1,434324631,SystemVerilog,VLSI2021_HW1,9,0,2021-12-02 18:05:40+00:00,[],
7733,https://github.com/khyamling/Vexrsicv_as_afu_in_PAC.git,2021-11-03 16:06:32+00:00,Implementation of Vexrsciv core as afu in Intel PAC card using OPAE,0,khyamling/Vexrsicv_as_afu_in_PAC,424292456,SystemVerilog,Vexrsicv_as_afu_in_PAC,327377,0,2021-11-03 16:12:57+00:00,[],
7734,https://github.com/doraviv02/Lab-1a.git,2021-11-29 09:09:25+00:00,We do things,0,doraviv02/Lab-1a,432973601,SystemVerilog,Lab-1a,72655,0,2021-11-30 15:26:33+00:00,[],
7735,https://github.com/amuupup/gitfile.git,2021-09-07 03:44:29+00:00,,0,amuupup/gitfile,403831358,SystemVerilog,gitfile,36,0,2021-09-07 06:15:43+00:00,[],
7736,https://github.com/NithishSindhe/DeepLearning-Accelerator.git,2021-09-02 05:59:09+00:00,,0,NithishSindhe/DeepLearning-Accelerator,402307380,SystemVerilog,DeepLearning-Accelerator,12,0,2021-09-02 06:33:05+00:00,[],https://api.github.com/licenses/mit
7737,https://github.com/mcardona94/Verificaci-n-Funcional-de-CI.git,2021-09-15 04:16:14+00:00,,0,mcardona94/Verificaci-n-Funcional-de-CI,406610816,SystemVerilog,Verificaci-n-Funcional-de-CI,309,0,2021-09-30 21:31:10+00:00,[],
7738,https://github.com/bot020196/EEE3095S-Tutorial_6.git,2021-10-22 18:32:45+00:00,Repo for code required in tutorial 6,0,bot020196/EEE3095S-Tutorial_6,420204663,SystemVerilog,EEE3095S-Tutorial_6,317,0,2021-10-23 21:25:42+00:00,[],
7739,https://github.com/wagler/ProtoBuffASIC.git,2021-10-25 20:44:26+00:00,,0,wagler/ProtoBuffASIC,421179133,SystemVerilog,ProtoBuffASIC,172,0,2021-12-11 03:11:05+00:00,[],
7740,https://github.com/Caitlynn-Jones/CSCE611.git,2021-10-28 04:02:24+00:00,Advanced Digital Design,0,Caitlynn-Jones/CSCE611,422058786,SystemVerilog,CSCE611,8,0,2022-10-28 15:09:49+00:00,[],
7741,https://github.com/emanu1004/Quiz_2_Fifo_modified.git,2021-10-27 04:10:11+00:00,Modificación al ambiente de pruebas por capas con aleatorización controlada para una FiFo,0,emanu1004/Quiz_2_Fifo_modified,421672543,SystemVerilog,Quiz_2_Fifo_modified,136,0,2021-10-27 04:11:06+00:00,[],
7742,https://github.com/SalvatoreDiGirolamo/pspin-snitch.git,2021-10-11 14:24:05+00:00,,0,SalvatoreDiGirolamo/pspin-snitch,415960262,SystemVerilog,pspin-snitch,8283,0,2021-10-25 11:19:38+00:00,[],
7743,https://github.com/sweet12prof/Training.git,2021-09-07 07:56:57+00:00,source files from my eda training,0,sweet12prof/Training,403891560,SystemVerilog,Training,43,0,2021-11-14 11:18:41+00:00,[],
7744,https://github.com/vramo002/random.git,2021-09-08 05:55:32+00:00,,0,vramo002/random,404227984,SystemVerilog,random,30,0,2021-12-06 06:19:36+00:00,[],
7745,https://github.com/MSD-Project-PDX/MSD.git,2021-10-30 00:05:21+00:00,,0,MSD-Project-PDX/MSD,422742814,SystemVerilog,MSD,730,0,2021-12-08 02:05:52+00:00,[],
7746,https://github.com/rakesh271/spi_avip_29.git,2021-10-29 08:31:14+00:00,,0,rakesh271/spi_avip_29,422499426,SystemVerilog,spi_avip_29,92,0,2021-10-29 08:37:40+00:00,[],
7747,https://github.com/MariamVad/SDSU_BUS.git,2021-10-21 21:11:22+00:00,,0,MariamVad/SDSU_BUS,419877979,SystemVerilog,SDSU_BUS,342,0,2021-10-31 14:09:17+00:00,[],
7748,https://github.com/ClssEdmilson/8_Bit_Adder.git,2021-10-30 20:30:10+00:00,8 bit adder verilog module and SystemVerilog testbench,0,ClssEdmilson/8_Bit_Adder,422984424,SystemVerilog,8_Bit_Adder,3,0,2021-10-30 21:53:15+00:00,[],
7749,https://github.com/tudortimi-unsorted/param_svunit_tests.git,2021-08-17 20:42:00+00:00,,0,tudortimi-unsorted/param_svunit_tests,397386164,SystemVerilog,param_svunit_tests,5,0,2021-08-17 20:59:45+00:00,[],
7750,https://github.com/lukewhuang/MicrowaveController.git,2021-08-16 20:26:18+00:00,,0,lukewhuang/MicrowaveController,396960139,SystemVerilog,MicrowaveController,125,0,2021-08-16 20:29:01+00:00,[],
7751,https://github.com/maxmakovskiy/hw.git,2021-08-14 06:27:57+00:00,Digital electronics educational tasks,0,maxmakovskiy/hw,395914289,SystemVerilog,hw,236,0,2021-10-27 19:27:22+00:00,[],
7752,https://github.com/zheedong/Korea-Univ.-COSE222-2_2.git,2021-08-30 04:55:10+00:00,고려대학교 컴퓨터구조 (구건재 교수님) 2학년 2학기 2020년,0,zheedong/Korea-Univ.-COSE222-2_2,401220475,SystemVerilog,Korea-Univ.-COSE222-2_2,16825,0,2021-08-31 06:57:52+00:00,['cpu'],https://api.github.com/licenses/mit
7753,https://github.com/Erickson-Eng/VerificacaoSistemaDigitais.git,2021-09-06 16:59:14+00:00,,0,Erickson-Eng/VerificacaoSistemaDigitais,403698914,SystemVerilog,VerificacaoSistemaDigitais,4,0,2024-01-02 12:57:01+00:00,[],
7754,https://github.com/samoei-ftw/Simple-CPU.git,2021-10-30 10:59:52+00:00,,0,samoei-ftw/Simple-CPU,422856138,SystemVerilog,Simple-CPU,1124,0,2021-11-02 08:20:19+00:00,[],
7755,https://github.com/rahmay1/Hardware-Implementation-of-an-Image-Decompressor.git,2021-09-16 01:16:18+00:00,Implemented a custom 320x240 Image Decompressor using hardware (System Verilog).,1,rahmay1/Hardware-Implementation-of-an-Image-Decompressor,406973706,SystemVerilog,Hardware-Implementation-of-an-Image-Decompressor,1855,0,2021-09-16 01:35:27+00:00,[],
7756,https://github.com/Asmer-Hamid-Ali/Verilog.git,2021-09-16 01:23:04+00:00,,0,Asmer-Hamid-Ali/Verilog,406975260,SystemVerilog,Verilog,7,0,2021-09-18 04:50:34+00:00,[],
7757,https://github.com/EuphoricCatface/fpga4fun_pong_vivado.git,2021-08-29 05:22:12+00:00,,0,EuphoricCatface/fpga4fun_pong_vivado,400957861,SystemVerilog,fpga4fun_pong_vivado,107,0,2021-08-29 09:47:17+00:00,[],
7758,https://github.com/astorga02/VFCI_Proyecto1.git,2021-08-31 23:01:06+00:00,,0,astorga02/VFCI_Proyecto1,401865337,SystemVerilog,VFCI_Proyecto1,290,0,2021-09-21 21:45:46+00:00,[],
7759,https://github.com/sinsin1324/EEE3096S-Practicals.git,2021-08-21 19:01:19+00:00,Practical assignments for EEE3096S,0,sinsin1324/EEE3096S-Practicals,398636162,SystemVerilog,EEE3096S-Practicals,28,0,2021-11-03 17:29:28+00:00,[],
7760,https://github.com/linh97abc/unit_test_dev0_sdram.git,2021-08-26 07:26:40+00:00,,0,linh97abc/unit_test_dev0_sdram,400079675,SystemVerilog,unit_test_dev0_sdram,16646,0,2021-08-26 07:31:54+00:00,[],
7761,https://github.com/RaviSingh700/newrepository.git,2021-08-22 10:40:50+00:00,practice,0,RaviSingh700/newrepository,398774145,SystemVerilog,newrepository,2,0,2021-08-23 03:56:37+00:00,[],
7762,https://github.com/pratikpawar27/Test-1.git,2021-08-24 17:11:57+00:00,Verilog testing,0,pratikpawar27/Test-1,399546331,SystemVerilog,Test-1,1,0,2021-08-25 18:13:39+00:00,[],
7763,https://github.com/SparkyNZ/FixReset.git,2021-11-26 21:12:59+00:00,,0,SparkyNZ/FixReset,432302295,SystemVerilog,FixReset,141,0,2021-12-07 02:32:59+00:00,[],
7764,https://github.com/kuan2jiu99/digital-circuit-lab.git,2021-11-26 05:27:19+00:00,"2021 Fall, Digit Circuit Lab (DCLAB)",0,kuan2jiu99/digital-circuit-lab,432064075,SystemVerilog,digital-circuit-lab,57,0,2023-06-08 13:57:25+00:00,[],
7765,https://github.com/indrajeetpande/sv_tb.git,2021-11-19 03:56:20+00:00,,0,indrajeetpande/sv_tb,429663437,SystemVerilog,sv_tb,91,0,2021-11-19 05:47:18+00:00,[],
7766,https://github.com/hhuynh000/FlappyBird.git,2021-12-02 17:35:14+00:00,,0,hhuynh000/FlappyBird,434316104,SystemVerilog,FlappyBird,10173,0,2021-12-30 03:56:37+00:00,[],
7767,https://github.com/evgeniyBolnov/qtt.git,2021-11-26 09:33:31+00:00,,0,evgeniyBolnov/qtt,432123735,SystemVerilog,qtt,16864,0,2021-11-30 11:14:07+00:00,[],
7768,https://github.com/MasterPlayer/axi-lite-register-file.git,2021-12-03 15:23:43+00:00,AXI Lite register file for registers with configurable count of registers,0,MasterPlayer/axi-lite-register-file,434642568,SystemVerilog,axi-lite-register-file,4,0,2021-12-03 15:54:34+00:00,[],https://api.github.com/licenses/mit
7769,https://github.com/Kikyoko/EP4CE10.git,2021-12-17 07:41:01+00:00,正点原子新起点开发板的工程,0,Kikyoko/EP4CE10,439250046,SystemVerilog,EP4CE10,36,0,2021-12-17 07:45:26+00:00,[],
7770,https://github.com/alxcode-x/aFIFO.git,2021-12-09 16:40:26+00:00,Verification environment for aFIFO. ,0,alxcode-x/aFIFO,436689048,SystemVerilog,aFIFO,39,0,2022-01-08 03:59:54+00:00,[],
7771,https://github.com/willijay17/processor.git,2021-12-14 14:29:00+00:00,256 ALU Proccesor. ,0,willijay17/processor,438283962,SystemVerilog,processor,8,0,2021-12-14 14:30:17+00:00,[],
7772,https://github.com/mamizu-git/RISCV-core.git,2021-12-14 13:50:24+00:00,,0,mamizu-git/RISCV-core,438270670,SystemVerilog,RISCV-core,16,0,2021-12-14 15:56:28+00:00,[],
7773,https://github.com/alamjitchoat/TugOfWar-LSFRs.git,2021-12-02 07:48:48+00:00,FPGA Project designed in SystemVerilog for the University of Washington,0,alamjitchoat/TugOfWar-LSFRs,434128611,SystemVerilog,TugOfWar-LSFRs,602,0,2021-12-02 07:50:19+00:00,[],
7774,https://github.com/zhewen404/HW_FC.git,2021-11-13 22:53:36+00:00,,0,zhewen404/HW_FC,427789767,SystemVerilog,HW_FC,2954,0,2021-11-13 23:22:37+00:00,[],
7775,https://github.com/mysoreanoop/schwellenangst.git,2021-11-07 06:23:20+00:00,469,0,mysoreanoop/schwellenangst,425429284,SystemVerilog,schwellenangst,2700,0,2021-12-11 01:15:07+00:00,[],
7776,https://github.com/nnistelrooij/NeuroEng.git,2021-10-23 21:24:34+00:00,Project repository for Neuromorphic Engineering 2021,0,nnistelrooij/NeuroEng,420526293,SystemVerilog,NeuroEng,1548,0,2021-11-07 20:23:05+00:00,[],
7777,https://github.com/astorga02/Proyecto3_VFCI.git,2021-11-01 23:14:36+00:00,,0,astorga02/Proyecto3_VFCI,423643868,SystemVerilog,Proyecto3_VFCI,1206,0,2021-11-16 07:12:38+00:00,[],
7778,https://github.com/Aarun2/ICG.git,2021-10-16 14:31:19+00:00,A Verilog ICG module,0,Aarun2/ICG,417853212,SystemVerilog,ICG,1,0,2021-10-16 14:35:04+00:00,[],
7779,https://github.com/robertstar/BFSK_MOD.git,2021-10-19 14:27:48+00:00,,0,robertstar/BFSK_MOD,418959913,SystemVerilog,BFSK_MOD,55,0,2021-10-19 14:34:59+00:00,[],
7780,https://github.com/anithasamanthula/SPI_TB_ARCHI.git,2021-10-21 03:22:06+00:00,,0,anithasamanthula/SPI_TB_ARCHI,419566982,SystemVerilog,SPI_TB_ARCHI,22,0,2022-07-27 08:56:37+00:00,[],
7781,https://github.com/patrick-chen-98/Dataflow-RTL-Design-of-the-Pipelined-Multimedia-with-SystemVerilog-.git,2021-09-24 20:10:02+00:00,,0,patrick-chen-98/Dataflow-RTL-Design-of-the-Pipelined-Multimedia-with-SystemVerilog-,410089540,SystemVerilog,Dataflow-RTL-Design-of-the-Pipelined-Multimedia-with-SystemVerilog-,17,0,2021-09-24 20:11:32+00:00,[],
7782,https://github.com/VijayAT123/AdvancedDigitalDesign.git,2021-09-29 19:57:52+00:00,,0,VijayAT123/AdvancedDigitalDesign,411812066,SystemVerilog,AdvancedDigitalDesign,8037,0,2022-12-13 18:56:01+00:00,[],
7783,https://github.com/rhemm23/minilab4-temp.git,2021-09-28 23:05:48+00:00,,0,rhemm23/minilab4-temp,411462865,SystemVerilog,minilab4-temp,12,0,2021-09-29 00:45:38+00:00,[],
7784,https://github.com/EpiqPhale/16-Bit_Processor_Verilog.git,2021-09-11 04:29:06+00:00,"16-Bit Processor designed using System Verilog for Digital Systems Design, Spring 2021",0,EpiqPhale/16-Bit_Processor_Verilog,405282778,SystemVerilog,16-Bit_Processor_Verilog,5394,0,2021-09-11 04:29:13+00:00,[],
7785,https://github.com/iamiranjbar/Pipelined-Processor.git,2021-09-18 09:57:55+00:00,,0,iamiranjbar/Pipelined-Processor,407822232,SystemVerilog,Pipelined-Processor,1110,0,2021-09-18 10:00:45+00:00,[],
7786,https://github.com/SamMahara/Workpackage6.git,2021-10-25 18:47:01+00:00,Contains files for the register memory code,0,SamMahara/Workpackage6,421146076,SystemVerilog,Workpackage6,4,0,2021-10-25 18:54:10+00:00,[],
7787,https://github.com/alex2kameboss/PDE_semphore.git,2021-10-21 17:45:48+00:00,,0,alex2kameboss/PDE_semphore,419822496,SystemVerilog,PDE_semphore,2,0,2021-10-21 17:46:34+00:00,[],
7788,https://github.com/avinashkpai12/BNNVerilog.git,2021-10-26 18:05:53+00:00,Convolution in an ll binary neural netrwork,0,avinashkpai12/BNNVerilog,421533472,SystemVerilog,BNNVerilog,22,0,2022-03-04 00:19:36+00:00,[],
7789,https://github.com/chriswebbb/Finite_Impusle_Response.git,2021-10-27 22:52:20+00:00,,0,chriswebbb/Finite_Impusle_Response,421996078,SystemVerilog,Finite_Impusle_Response,48,0,2021-10-27 23:05:38+00:00,[],https://api.github.com/licenses/mit
7790,https://github.com/Radiophantom/comba_mult.git,2021-08-27 13:43:24+00:00,,0,Radiophantom/comba_mult,400522347,SystemVerilog,comba_mult,2,0,2021-08-27 13:48:10+00:00,[],
7791,https://github.com/jiru1997/Counter-Detection-design-and-test-bench.git,2021-08-23 16:52:26+00:00,Counter Detection design and test bench,0,jiru1997/Counter-Detection-design-and-test-bench,399181283,SystemVerilog,Counter-Detection-design-and-test-bench,10,0,2021-11-17 06:25:50+00:00,[],
7792,https://github.com/OnurErtunc/SystemVerilog.git,2021-08-27 09:13:45+00:00,,0,OnurErtunc/SystemVerilog,400453294,SystemVerilog,SystemVerilog,5,0,2021-11-17 19:34:07+00:00,[],
7793,https://github.com/p3da/wide_alu_ipV2.git,2021-10-13 09:52:29+00:00,,0,p3da/wide_alu_ipV2,416680127,SystemVerilog,wide_alu_ipV2,9,0,2021-10-13 16:36:23+00:00,[],
7794,https://github.com/ducall/FIX_AMUL_8sel1.git,2021-11-01 13:14:04+00:00,redix_16_8bit_booth_8sel1,0,ducall/FIX_AMUL_8sel1,423470495,SystemVerilog,FIX_AMUL_8sel1,5,0,2021-11-01 13:27:39+00:00,[],
7795,https://github.com/MSD-Project1/code_memory_controller.git,2021-10-30 01:10:12+00:00,,0,MSD-Project1/code_memory_controller,422752270,SystemVerilog,code_memory_controller,162,0,2022-01-20 04:31:39+00:00,[],
7796,https://github.com/mfkiwl/rvc_cmp.git,2021-10-06 21:35:42+00:00,RISCV CORE CAMP,0,mfkiwl/rvc_cmp,414376249,,rvc_cmp,2767,0,2021-10-25 20:52:42+00:00,[],https://api.github.com/licenses/mit
7797,https://github.com/viceol/Quadric.io-RTL-Assessment.git,2021-10-12 10:40:35+00:00,All the code I managed to write for my RTL Assessment,0,viceol/Quadric.io-RTL-Assessment,416293769,SystemVerilog,Quadric.io-RTL-Assessment,4,0,2021-10-12 10:45:53+00:00,[],
7798,https://github.com/Aarun2/554_Final.git,2021-10-08 04:39:14+00:00,"554 Capstone project by Aditya Arun, Nathan Kaltenbrun, Chris Dupont and Colt Raymond",0,Aarun2/554_Final,414847547,SystemVerilog,554_Final,3765,0,2021-12-18 03:22:14+00:00,[],
7799,https://github.com/Paleface101/ad9643_sim.git,2021-08-16 10:00:51+00:00,,0,Paleface101/ad9643_sim,396731660,SystemVerilog,ad9643_sim,21,0,2021-09-14 16:20:42+00:00,[],
7800,https://github.com/areusch/verilog-test.git,2021-08-16 17:40:14+00:00,,0,areusch/verilog-test,396903673,SystemVerilog,verilog-test,0,0,2021-08-16 17:40:34+00:00,[],
7801,https://github.com/Kristopher38/LuaCPU.git,2021-12-09 11:35:20+00:00,CPU natively running Lua bytecode,0,Kristopher38/LuaCPU,436593466,SystemVerilog,LuaCPU,170402,0,2022-01-06 01:21:01+00:00,[],https://api.github.com/licenses/mit
7802,https://github.com/darpanchoudhary/1x3-Router-UVM-TestBench.git,2021-08-19 17:38:30+00:00,Router UVM Testbench,0,darpanchoudhary/1x3-Router-UVM-TestBench,398026257,SystemVerilog,1x3-Router-UVM-TestBench,79,0,2023-10-04 23:54:53+00:00,[],
7803,https://github.com/eldstal/desynk.git,2021-09-10 19:29:49+00:00,An iCEBreaker FPGA project for clock glitching,0,eldstal/desynk,405192143,SystemVerilog,desynk,267,0,2021-12-06 22:00:41+00:00,[],
7804,https://github.com/p3da/pulpissimo-wide-alu.git,2021-10-03 13:21:56+00:00,,0,p3da/pulpissimo-wide-alu,413084129,SystemVerilog,pulpissimo-wide-alu,16,0,2021-10-03 15:41:03+00:00,[],
7805,https://github.com/EMDCYY/Interlock-control-8X8.git,2021-09-06 03:16:40+00:00,,1,EMDCYY/Interlock-control-8X8,403471094,SystemVerilog,Interlock-control-8X8,3992,0,2021-10-19 19:31:11+00:00,[],
7806,https://github.com/tyee2/ece554_miniproject.git,2021-09-09 20:53:12+00:00,,0,tyee2/ece554_miniproject,404866746,SystemVerilog,ece554_miniproject,532,0,2021-09-15 03:15:26+00:00,[],
7807,https://github.com/Radiophantom/common_lib.git,2021-09-24 09:16:59+00:00,,0,Radiophantom/common_lib,409903720,SystemVerilog,common_lib,1,0,2021-09-24 14:19:56+00:00,[],
7809,https://github.com/DayuanTan/ComputerArchitecture.git,2021-10-15 05:31:48+00:00,Design an instruction set and overall architecture for a special-purpose reduced instruction set (RISC) processor. Design the hardware for the processor core. ,0,DayuanTan/ComputerArchitecture,417379355,SystemVerilog,ComputerArchitecture,10506,0,2021-10-28 10:33:45+00:00,[],https://api.github.com/licenses/gpl-3.0
7810,https://github.com/Vamshidharreddymirafra/AVIP.git,2021-10-21 08:50:23+00:00,,0,Vamshidharreddymirafra/AVIP,419648320,SystemVerilog,AVIP,376,0,2022-07-27 08:59:40+00:00,[],
7811,https://github.com/tillabendum/uvm.git,2021-10-19 14:17:52+00:00,,0,tillabendum/uvm,418956070,SystemVerilog,uvm,195,0,2021-12-28 09:46:02+00:00,[],
7812,https://github.com/vtkhatri/fifo.git,2021-10-24 06:45:36+00:00,,0,vtkhatri/fifo,420608703,SystemVerilog,fifo,7,0,2021-11-30 23:38:48+00:00,[],
7813,https://github.com/Liz-cloud-zz/EEE3095S_TUT6.git,2021-10-21 22:38:09+00:00,Use of Belana,0,Liz-cloud-zz/EEE3095S_TUT6,419896468,SystemVerilog,EEE3095S_TUT6,214,0,2021-10-22 18:30:27+00:00,[],
7814,https://github.com/smithandrewk/AU.git,2021-10-24 23:01:35+00:00,"Arithmetic Unit in System Verilog with adder, subtractor, multiplier, and divider",0,smithandrewk/AU,420815865,SystemVerilog,AU,12,0,2021-10-24 23:10:49+00:00,[],
7815,https://github.com/SuryaXOX/Digital-System-Design-and-Synthesis---Knights-Tour.git,2021-12-14 15:38:01+00:00,,0,SuryaXOX/Digital-System-Design-and-Synthesis---Knights-Tour,438307346,SystemVerilog,Digital-System-Design-and-Synthesis---Knights-Tour,351,0,2023-07-29 18:36:45+00:00,[],
7816,https://github.com/knyuchen/parallel_pipeline.git,2021-11-03 01:36:33+00:00,,0,knyuchen/parallel_pipeline,424054894,SystemVerilog,parallel_pipeline,6,0,2021-11-03 18:37:36+00:00,[],
7817,https://github.com/Tagegronli/DigitalPixelSensor_DIC.git,2021-11-12 13:53:29+00:00,Files necessary recreating Digital Pixel Sensor. This reposetory is made for the project in TFE4152 - Design av integrerte kretser. ,0,Tagegronli/DigitalPixelSensor_DIC,427377234,SystemVerilog,DigitalPixelSensor_DIC,145,0,2021-11-17 18:25:53+00:00,[],
7818,https://github.com/smithandrewk/singleCycleMIPS.git,2021-11-11 17:50:16+00:00,A single cycle MIPS processor without pipelining in System Verilog,0,smithandrewk/singleCycleMIPS,427092733,SystemVerilog,singleCycleMIPS,69,0,2021-11-22 00:30:24+00:00,[],
7819,https://github.com/StefanDue/FHV_WT21_HDL.git,2021-11-14 20:17:46+00:00,Hardware Description Language - FHV 5. Semester - Lectures and Assignments,0,StefanDue/FHV_WT21_HDL,428031669,SystemVerilog,FHV_WT21_HDL,36810,0,2021-12-14 10:47:04+00:00,[],
7820,https://github.com/21oglethorpe/DSD-Lab7.git,2021-11-18 17:36:19+00:00,,0,21oglethorpe/DSD-Lab7,429522554,SystemVerilog,DSD-Lab7,22,0,2021-11-19 19:29:03+00:00,[],
7821,https://github.com/samuelmi/lab7.git,2021-11-03 20:50:43+00:00,Comp 541 Lab 7,0,samuelmi/lab7,424376526,SystemVerilog,lab7,20102,0,2021-11-03 20:51:37+00:00,[],
7822,https://github.com/AlexandrosPanag/My_SystemVerilog_Projects.git,2021-11-27 13:58:07+00:00,My SystemVerilog Projects.,0,AlexandrosPanag/My_SystemVerilog_Projects,432475526,SystemVerilog,My_SystemVerilog_Projects,31,0,2023-08-23 15:53:24+00:00,"['fpga', 'hardware', 'systemverilog']",
7823,https://github.com/jerome-cmd/385.git,2021-12-02 01:56:20+00:00,385 final project repository,0,jerome-cmd/385,434048511,SystemVerilog,385,12,0,2021-12-16 00:54:37+00:00,[],
7824,https://github.com/Brandon451/FIR_synthesis.git,2021-12-02 17:47:15+00:00,,0,Brandon451/FIR_synthesis,434319546,SystemVerilog,FIR_synthesis,106,0,2021-12-10 05:08:18+00:00,[],
7825,https://github.com/raytroop/clone-uvm-tutorial-for-candy-lovers.git,2021-11-18 11:22:59+00:00,clone from https://github.com/cluelogic/uvm-tutorial-for-candy-lovers,0,raytroop/clone-uvm-tutorial-for-candy-lovers,429401991,SystemVerilog,clone-uvm-tutorial-for-candy-lovers,143,0,2021-11-21 14:19:46+00:00,[],
7826,https://github.com/dev-adriano-lira/loac.git,2021-11-22 21:08:26+00:00,,0,dev-adriano-lira/loac,430865397,SystemVerilog,loac,1326,0,2021-11-22 23:02:44+00:00,[],
7827,https://github.com/tslotboom/cme_433_lab2.git,2021-10-12 01:27:59+00:00,,0,tslotboom/cme_433_lab2,416141009,SystemVerilog,cme_433_lab2,1088,0,2021-10-16 01:35:23+00:00,[],
7828,https://github.com/ZoharMilman/DonkeyKongJR.git,2021-11-30 13:44:20+00:00,,0,ZoharMilman/DonkeyKongJR,433446587,SystemVerilog,DonkeyKongJR,1022,0,2021-12-20 14:04:19+00:00,[],
7829,https://github.com/mcandre/shifty.git,2021-10-05 19:41:42+00:00,FPGA password cracker,0,mcandre/shifty,413956617,SystemVerilog,shifty,87,0,2023-07-25 14:50:21+00:00,[],
7830,https://github.com/randyma01/CE3201-Laboratorio-3.git,2021-08-26 17:36:12+00:00,Laboratorio 3: Lógica Combinacional y Aritmética.,1,randyma01/CE3201-Laboratorio-3,400254331,SystemVerilog,CE3201-Laboratorio-3,17708,0,2021-09-12 16:52:29+00:00,[],
7831,https://github.com/99Angelrm/simpleCPU2.git,2021-09-11 19:11:35+00:00,,0,99Angelrm/simpleCPU2,405462965,SystemVerilog,simpleCPU2,42,0,2021-09-12 15:20:05+00:00,[],
7832,https://github.com/GustavoRuedaEnriquez/mdr-sv.git,2021-11-09 01:10:02+00:00,"10-bit MDR (Multiplication, division and square root calculator) implemented for the FPGA DE2-115 and for a ModelSim simulation. Coded in System Verilog ⚙️",0,GustavoRuedaEnriquez/mdr-sv,426046791,SystemVerilog,mdr-sv,136,0,2022-04-11 00:18:46+00:00,"['systemverilog', 'alu', 'booths-algorithm']",
7833,https://github.com/ae2079/CAD_CA1.git,2021-11-18 21:14:36+00:00,first project of CAD course,0,ae2079/CAD_CA1,429581707,SystemVerilog,CAD_CA1,40,0,2022-01-30 14:15:07+00:00,[],
7834,https://github.com/dpdms529/SchoolSeatingSystem.git,2021-12-03 09:45:37+00:00,,0,dpdms529/SchoolSeatingSystem,434543251,SystemVerilog,SchoolSeatingSystem,25,0,2021-12-08 09:17:12+00:00,[],
7835,https://github.com/LandonOverclocked/SeniorProject.git,2021-12-02 19:09:25+00:00,,0,LandonOverclocked/SeniorProject,434343225,SystemVerilog,SeniorProject,14151,0,2021-12-02 23:39:06+00:00,[],
7836,https://github.com/HaiyiZhang/Traffic-Signal-Controller.git,2021-12-13 01:14:05+00:00,,0,HaiyiZhang/Traffic-Signal-Controller,437696827,SystemVerilog,Traffic-Signal-Controller,156,0,2021-12-13 01:16:24+00:00,[],
7837,https://github.com/gabrielchin96/rtl_basics.git,2021-09-18 07:50:11+00:00,Refreshing basics for writing RTL and Testbench in Verilog,0,gabrielchin96/rtl_basics,407794119,SystemVerilog,rtl_basics,1,0,2021-09-18 16:01:06+00:00,[],
7838,https://github.com/maaz-siddiqui/2BitFsm.git,2021-10-01 18:32:56+00:00,2 bit Fsm (lift concept implemented),0,maaz-siddiqui/2BitFsm,412579143,SystemVerilog,2BitFsm,80,0,2021-10-01 19:08:33+00:00,[],
7839,https://github.com/AlejandroIbarraC/PhraseToImageCPU.git,2021-10-14 19:59:33+00:00,Compiler for the Spasm programming language,1,AlejandroIbarraC/PhraseToImageCPU,417265929,SystemVerilog,PhraseToImageCPU,64886,0,2021-10-27 01:28:55+00:00,[],
7840,https://github.com/31415pi/PSU_ECE485_585_Group_14_Project_Memorystars.git,2021-10-19 23:17:13+00:00,,1,31415pi/PSU_ECE485_585_Group_14_Project_Memorystars,419119413,SystemVerilog,PSU_ECE485_585_Group_14_Project_Memorystars,14207,0,2021-12-10 07:48:24+00:00,[],
7841,https://github.com/priyankabekal/MSD_PROJECT.git,2021-10-20 03:02:27+00:00,,0,priyankabekal/MSD_PROJECT,419166668,SystemVerilog,MSD_PROJECT,721,0,2021-12-08 16:00:33+00:00,[],
7842,https://github.com/ishfaqahmed29/Cache_L1_L2.git,2021-10-12 22:12:52+00:00,Fully Associative Read-Only Cache Memory Interface,0,ishfaqahmed29/Cache_L1_L2,416513410,SystemVerilog,Cache_L1_L2,10,0,2021-11-24 13:11:03+00:00,[],https://api.github.com/licenses/mit
7843,https://github.com/dhruvv2/ECE-385-Lab-5.git,2021-11-24 17:22:40+00:00,,0,dhruvv2/ECE-385-Lab-5,431571285,SystemVerilog,ECE-385-Lab-5,29,0,2022-05-18 23:54:16+00:00,[],
7844,https://github.com/ece571f21/Group1.git,2021-11-28 04:09:29+00:00,"AXI4 Lite Pradeep, Srinivas, Naveen",0,ece571f21/Group1,432615334,SystemVerilog,Group1,8736,0,2021-12-16 04:36:54+00:00,[],
7845,https://github.com/KeremSahin22/SimpleProcessor.git,2021-11-28 18:02:01+00:00,This is a simple processor made on SystemVerilog that has a basic architecture which simulates the basic needs of a processor.,0,KeremSahin22/SimpleProcessor,432786681,SystemVerilog,SimpleProcessor,3258,0,2021-11-28 18:23:48+00:00,[],
7846,https://github.com/JoshiAks/SVcode.git,2021-12-01 07:26:31+00:00,,0,JoshiAks/SVcode,433725555,SystemVerilog,SVcode,1796,0,2021-12-01 07:31:10+00:00,[],
7847,https://github.com/wiszeto/Mock-Vending-Machine.git,2021-11-21 20:03:45+00:00,,0,wiszeto/Mock-Vending-Machine,430467825,SystemVerilog,Mock-Vending-Machine,9,0,2021-11-27 08:45:08+00:00,[],
7848,https://github.com/Fa1zanSaeed/RV32I.git,2021-11-23 08:09:38+00:00,,0,Fa1zanSaeed/RV32I,431013580,SystemVerilog,RV32I,230,0,2021-12-23 06:52:35+00:00,[],
7849,https://github.com/sl-engineer/trial_task_2021.git,2021-11-15 05:32:10+00:00,It has done trial task for job interview.,0,sl-engineer/trial_task_2021,428134868,SystemVerilog,trial_task_2021,254,0,2021-12-08 11:10:21+00:00,[],
7850,https://github.com/apatern0/arcadia_uvm.git,2021-11-03 14:54:49+00:00,,0,apatern0/arcadia_uvm,424266714,SystemVerilog,arcadia_uvm,27,0,2021-11-03 14:56:55+00:00,[],
7851,https://github.com/AkisParousis/Writing_SystemVerilog.git,2021-12-23 00:23:29+00:00,Various test codes for SystemVerilog practice,0,AkisParousis/Writing_SystemVerilog,441017903,SystemVerilog,Writing_SystemVerilog,156,0,2021-12-28 14:25:09+00:00,[],
7852,https://github.com/thatoddmailbox/infinite-run.git,2021-11-10 22:37:13+00:00,6.111 final project,0,thatoddmailbox/infinite-run,426798378,SystemVerilog,infinite-run,162,0,2021-12-11 04:58:40+00:00,[],
7853,https://github.com/AlejandroOrozco-ITESO/Alejandro_Orozco_SV.git,2021-11-08 02:32:09+00:00,,0,AlejandroOrozco-ITESO/Alejandro_Orozco_SV,425674316,SystemVerilog,Alejandro_Orozco_SV,3,0,2021-11-08 02:34:51+00:00,[],
7854,https://github.com/green4free/advent_of_code_2021.git,2021-12-02 16:26:52+00:00,,0,green4free/advent_of_code_2021,434294704,SystemVerilog,advent_of_code_2021,12,0,2021-12-04 20:22:09+00:00,[],
7855,https://github.com/alamjitchoat/Runway-Landing-Lights.git,2021-12-02 07:44:57+00:00,FPGA Project designed in SystemVerilog for the University of Washington,0,alamjitchoat/Runway-Landing-Lights,434127523,SystemVerilog,Runway-Landing-Lights,470,0,2021-12-02 07:46:13+00:00,[],
7856,https://github.com/RuS76/test_cocotb.git,2021-12-07 13:52:27+00:00,,0,RuS76/test_cocotb,435899314,SystemVerilog,test_cocotb,2,0,2022-08-19 07:50:59+00:00,[],
7857,https://github.com/EleanorJiang/atmt.git,2021-12-07 03:22:59+00:00,,0,EleanorJiang/atmt,435728867,SystemVerilog,atmt,30111,0,2022-09-21 03:57:01+00:00,[],https://api.github.com/licenses/mit
7858,https://github.com/AsaGrote/Blink.git,2021-08-19 18:59:34+00:00,SystemVerilog game implemented on FPGA Basys 3 Board,0,AsaGrote/Blink,398046427,SystemVerilog,Blink,20,0,2021-08-23 18:59:33+00:00,[],
7859,https://github.com/naftali10/Samll-SV-Projects.git,2021-08-17 12:18:38+00:00,Small SystemVerilog Projects,0,naftali10/Samll-SV-Projects,397244512,SystemVerilog,Samll-SV-Projects,121,0,2021-08-19 17:29:53+00:00,[],
7860,https://github.com/Advaith-RN/TicTacToeSystemVerilog.git,2021-10-31 12:38:06+00:00,A simple tic tac toe machine made using SystemVerilog,0,Advaith-RN/TicTacToeSystemVerilog,423143853,SystemVerilog,TicTacToeSystemVerilog,8,0,2021-10-31 12:42:59+00:00,[],
7861,https://github.com/MSDprojectpsu/Project.git,2021-11-01 17:10:51+00:00,,0,MSDprojectpsu/Project,423550651,SystemVerilog,Project,12,0,2022-02-12 07:19:49+00:00,[],
7862,https://github.com/sthd/Dangerous-Dave-FPGA.git,2021-10-28 13:30:56+00:00,The nostalgic 2D video game programmed on a DE-10 Standard. ,0,sthd/Dangerous-Dave-FPGA,422216107,SystemVerilog,Dangerous-Dave-FPGA,32467,0,2022-01-10 11:35:11+00:00,[],
7863,https://github.com/VirajPDX/MSD_Project_Group20.git,2021-10-29 07:30:24+00:00,,2,VirajPDX/MSD_Project_Group20,422481623,SystemVerilog,MSD_Project_Group20,224,0,2021-11-15 19:01:45+00:00,[],
7864,https://github.com/ignacioFernandez1/ALU-tp1-arqui.git,2021-08-29 14:55:17+00:00,,0,ignacioFernandez1/ALU-tp1-arqui,401068753,SystemVerilog,ALU-tp1-arqui,325,0,2021-09-30 21:59:04+00:00,[],
7865,https://github.com/saw235/riscv-core-dev.git,2021-09-05 18:52:51+00:00,RISCV core under development,0,saw235/riscv-core-dev,403388687,SystemVerilog,riscv-core-dev,743,0,2021-09-20 04:16:08+00:00,[],
7866,https://github.com/maruthivangalli/slave_avip.git,2021-10-11 17:42:23+00:00,,0,maruthivangalli/slave_avip,416028606,SystemVerilog,slave_avip,24,0,2022-02-22 06:11:08+00:00,[],
7867,https://github.com/anjanchetan/Practice-axi.git,2021-09-23 13:37:50+00:00,,0,anjanchetan/Practice-axi,409607074,SystemVerilog,Practice-axi,3,0,2021-09-23 14:07:21+00:00,[],
7868,https://github.com/MitchGG/I2C-Subordinate-Interface.git,2021-09-14 23:51:08+00:00,,0,MitchGG/I2C-Subordinate-Interface,406554092,SystemVerilog,I2C-Subordinate-Interface,1456,0,2021-11-16 04:16:47+00:00,[],
7869,https://github.com/FardeenFindora/BLS12_381_RTL.git,2021-08-23 20:32:50+00:00,,0,FardeenFindora/BLS12_381_RTL,399240362,SystemVerilog,BLS12_381_RTL,22,0,2021-08-23 20:40:12+00:00,[],
7870,https://github.com/JessicaAndrew/EEE3096S-ANDJES006_ZVXSKY001.git,2021-08-21 19:59:01+00:00,,0,JessicaAndrew/EEE3096S-ANDJES006_ZVXSKY001,398645718,SystemVerilog,EEE3096S-ANDJES006_ZVXSKY001,392,0,2021-11-03 19:20:14+00:00,[],
7871,https://github.com/hereisk/Hardware-Design.git,2021-09-16 20:01:58+00:00,,0,hereisk/Hardware-Design,407298918,SystemVerilog,Hardware-Design,648,0,2021-09-16 20:03:41+00:00,[],
7872,https://github.com/MichaelLuna1/Island.git,2021-12-16 06:15:54+00:00,Sensor logic design project in Verilog used to determine how many cars enter and leave and island via bridge,0,MichaelLuna1/Island,438880771,SystemVerilog,Island,4,0,2021-12-16 06:22:14+00:00,[],https://api.github.com/licenses/mit
7873,https://github.com/JulianCamacho/Proyecto_Dise-o_Logico.git,2021-11-04 05:05:24+00:00,,0,JulianCamacho/Proyecto_Dise-o_Logico,424478119,SystemVerilog,Proyecto_Dise-o_Logico,12972,0,2021-11-15 03:34:14+00:00,[],
7874,https://github.com/AmitFr7/8-bit-Simplified-Router.git,2021-09-17 10:41:17+00:00,Verilog HDL and Logisim implementations of an 8-bit simplified router.,0,AmitFr7/8-bit-Simplified-Router,407502650,SystemVerilog,8-bit-Simplified-Router,180,0,2021-09-20 07:33:25+00:00,[],
7875,https://github.com/susmithaREDDY94/sram-forked.git,2021-09-18 17:00:51+00:00,should be edited,0,susmithaREDDY94/sram-forked,407918556,SystemVerilog,sram-forked,0,0,2021-09-18 17:05:39+00:00,[],
7876,https://github.com/shemadolev/Verilog-Prefetcher.git,2021-09-18 18:11:34+00:00,,0,shemadolev/Verilog-Prefetcher,407934304,SystemVerilog,Verilog-Prefetcher,539,0,2022-11-02 20:05:42+00:00,[],
7877,https://github.com/Dvorak17/minilab2.git,2021-09-14 22:23:01+00:00,,0,Dvorak17/minilab2,406537803,SystemVerilog,minilab2,4,0,2021-09-20 05:04:07+00:00,[],
7878,https://github.com/Kare-Benjamin/RTL_Designs.git,2021-09-21 11:55:33+00:00,Experimental for the sake of education,0,Kare-Benjamin/RTL_Designs,408800863,SystemVerilog,RTL_Designs,8,0,2021-09-29 19:27:09+00:00,[],
7879,https://github.com/Sirokujira/rvcorep.git,2021-11-10 00:52:54+00:00,ultra96v2 ,0,Sirokujira/rvcorep,426435953,SystemVerilog,rvcorep,2492,0,2021-11-23 04:23:06+00:00,[],https://api.github.com/licenses/mit
7880,https://github.com/Vamshidharreddymirafra/SPI-AVIP.git,2021-10-17 05:03:11+00:00,,0,Vamshidharreddymirafra/SPI-AVIP,418025248,SystemVerilog,SPI-AVIP,9,0,2022-07-27 09:01:35+00:00,[],
7881,https://github.com/David-Solorzano/Quiz-UVM2.git,2021-10-21 21:27:40+00:00,,0,David-Solorzano/Quiz-UVM2,419881575,SystemVerilog,Quiz-UVM2,30,0,2021-10-25 22:23:28+00:00,[],
7882,https://github.com/delaOrouen/FlappybirdSV.git,2021-10-22 00:06:56+00:00,,0,delaOrouen/FlappybirdSV,419912961,SystemVerilog,FlappybirdSV,2666,0,2021-11-01 00:18:16+00:00,[],
7883,https://github.com/khumodiatla/Tut6_MTLKHU004_MKNSIB003.git,2021-10-22 16:59:04+00:00,EEE3096S - Tutorial 6,0,khumodiatla/Tut6_MTLKHU004_MKNSIB003,420178202,SystemVerilog,Tut6_MTLKHU004_MKNSIB003,4,0,2021-10-22 17:00:22+00:00,[],
7884,https://github.com/Tal-Brandeis/Projects.git,2021-11-13 16:14:59+00:00,,0,Tal-Brandeis/Projects,427712745,SystemVerilog,Projects,4268,0,2023-01-28 05:18:38+00:00,[],
7885,https://github.com/rhemm23/capstone.git,2021-11-18 22:00:07+00:00,,0,rhemm23/capstone,429591812,SystemVerilog,capstone,3166,0,2021-12-19 06:37:22+00:00,[],
7886,https://github.com/KTH-IL2232/ARIMA.git,2021-11-15 09:08:18+00:00,,0,KTH-IL2232/ARIMA,428193038,SystemVerilog,ARIMA,10604,0,2022-01-15 21:52:03+00:00,[],
7887,https://github.com/faberc/ece581.git,2021-10-27 00:45:33+00:00,,0,faberc/ece581,421628947,SystemVerilog,ece581,25643,0,2021-12-06 20:17:58+00:00,[],
7888,https://github.com/zhewen404/hub_pe.git,2021-10-26 01:32:27+00:00,,1,zhewen404/hub_pe,421240366,SystemVerilog,hub_pe,36511,0,2021-12-16 20:29:09+00:00,[],
7889,https://github.com/OlegPM/Mux3_axis.git,2021-10-28 01:33:51+00:00,Study project.,0,OlegPM/Mux3_axis,422027409,SystemVerilog,Mux3_axis,6,0,2021-10-28 01:35:45+00:00,[],
7890,https://github.com/Caitlynn-Jones/CSCE513.git,2021-10-28 03:35:06+00:00,Advanced Computer Architecture,0,Caitlynn-Jones/CSCE513,422053292,SystemVerilog,CSCE513,14,0,2021-10-28 04:01:34+00:00,[],
7891,https://github.com/raja-aadhithan/B.Sc_Verilog.git,2021-09-04 13:36:36+00:00,"Basic Code of Verilog Programs, UG Level",0,raja-aadhithan/B.Sc_Verilog,403065368,SystemVerilog,B.Sc_Verilog,571,0,2023-10-24 07:34:55+00:00,[],
7892,https://github.com/RDCerdas/Proyecto-1-verificacion.git,2021-09-05 03:45:09+00:00,,0,RDCerdas/Proyecto-1-verificacion,403208277,SystemVerilog,Proyecto-1-verificacion,5028,0,2021-09-21 21:31:01+00:00,[],
7893,https://github.com/Jason-Y000/1011-Pattern-Detector.git,2021-09-04 00:09:19+00:00,,0,Jason-Y000/1011-Pattern-Detector,402925463,SystemVerilog,1011-Pattern-Detector,2,0,2022-02-08 19:47:31+00:00,[],
7894,https://github.com/relsa228/asm-and-verilog-university-projects.git,2021-09-09 07:52:19+00:00,,0,relsa228/asm-and-verilog-university-projects,404633701,SystemVerilog,asm-and-verilog-university-projects,78090,0,2023-02-12 19:37:42+00:00,[],
7895,https://github.com/ronm100/EE_LAB1_PROJ.git,2021-08-13 14:00:22+00:00,,0,ronm100/EE_LAB1_PROJ,395674988,SystemVerilog,EE_LAB1_PROJ,896477,0,2021-09-08 15:26:03+00:00,[],
7897,https://github.com/sompally12/memory.git,2021-09-25 13:13:43+00:00,memory controller,0,sompally12/memory,410276529,SystemVerilog,memory,1,0,2021-10-21 10:15:45+00:00,[],
7898,https://github.com/manikant-cisma/cisma-counter.git,2021-08-19 05:51:45+00:00,"2 cores (dv, dut), both in Snapshot mode",0,manikant-cisma/cisma-counter,397831919,SystemVerilog,cisma-counter,3,0,2021-08-19 15:20:03+00:00,[],
7899,https://github.com/georgc4/fft16.git,2021-12-02 01:28:18+00:00,16 Point FFT in RTL,0,georgc4/fft16,434042427,SystemVerilog,fft16,577,0,2021-12-02 01:29:18+00:00,[],
7900,https://github.com/nanamaru0203/fpu.git,2021-11-04 04:33:36+00:00,,0,nanamaru0203/fpu,424472488,SystemVerilog,fpu,75,0,2022-01-09 02:40:42+00:00,[],
7901,https://github.com/Cbabe/Comp_Arch_Final.git,2021-12-09 22:17:25+00:00,,0,Cbabe/Comp_Arch_Final,436777327,SystemVerilog,Comp_Arch_Final,610,0,2021-12-24 13:42:43+00:00,[],
7902,https://github.com/ethan4984/geg.git,2021-12-17 22:34:30+00:00,,1,ethan4984/geg,439476365,SystemVerilog,geg,23,0,2022-10-20 08:16:13+00:00,[],
7903,https://github.com/hpb-project/dcpp-hardware.git,2021-12-14 02:27:39+00:00,,0,hpb-project/dcpp-hardware,438090885,SystemVerilog,dcpp-hardware,3947,0,2021-12-18 01:44:21+00:00,[],https://api.github.com/licenses/gpl-3.0
7904,https://github.com/yukon8982/Digital-Circuit-Final-Project.git,2021-12-11 14:00:05+00:00,八分音符的冒險,0,yukon8982/Digital-Circuit-Final-Project,437297278,SystemVerilog,Digital-Circuit-Final-Project,39,0,2022-01-02 05:53:07+00:00,[],
7905,https://github.com/juliusreid01/models.git,2021-12-04 17:57:24+00:00,Collection of Verilog Models,0,juliusreid01/models,434972058,SystemVerilog,models,8,0,2021-12-28 22:18:14+00:00,[],
7906,https://github.com/Neel1812/Neural-Network-Engine.git,2021-11-25 09:28:34+00:00,,0,Neel1812/Neural-Network-Engine,431785879,SystemVerilog,Neural-Network-Engine,15,0,2021-11-25 09:38:59+00:00,[],
7907,https://github.com/IanScottPaul/ElectricArcSpeaker.git,2021-12-01 21:38:29+00:00,,0,IanScottPaul/ElectricArcSpeaker,433993284,SystemVerilog,ElectricArcSpeaker,19,0,2022-01-05 21:42:32+00:00,[],
7908,https://github.com/jtsang02/Baccarat.git,2021-12-24 12:28:42+00:00,Bacarrat engine implemented in SystemVerilog.,0,jtsang02/Baccarat,441460561,SystemVerilog,Baccarat,2709,0,2023-01-27 20:31:55+00:00,[],
7909,https://github.com/UandersonSilva/UART_controller_SystemVerilog.git,2021-12-23 14:03:25+00:00,Componente para transferência de dados entre um FPGA  da Intel e um PC via JTAG UART,0,UandersonSilva/UART_controller_SystemVerilog,441198364,SystemVerilog,UART_controller_SystemVerilog,256,0,2021-12-23 14:15:00+00:00,[],
7910,https://github.com/sajjadahmed677/tcam.git,2021-12-18 13:23:02+00:00,,4,sajjadahmed677/tcam,439620905,SystemVerilog,tcam,147959,0,2022-01-05 15:45:13+00:00,[],
7911,https://github.com/fuanruisu/aFIFO_VE.git,2021-12-14 22:05:17+00:00,,0,fuanruisu/aFIFO_VE,438413613,SystemVerilog,aFIFO_VE,17,0,2022-01-10 01:36:39+00:00,[],
7912,https://github.com/k5xing/Systolic-Matrix-Multiplication-Kernel.git,2021-09-22 06:01:21+00:00,Lab Projects Developed in ECE327,0,k5xing/Systolic-Matrix-Multiplication-Kernel,409082478,SystemVerilog,Systolic-Matrix-Multiplication-Kernel,1423,0,2023-11-16 06:26:15+00:00,[],
7913,https://github.com/marcost2/Arqui2021-Lab1.git,2021-10-13 12:24:11+00:00,,0,marcost2/Arqui2021-Lab1,416732108,SystemVerilog,Arqui2021-Lab1,655,0,2023-11-21 19:43:27+00:00,[],
7914,https://github.com/michaellu2019/fpga-vocoder.git,2021-11-11 03:20:13+00:00,,1,michaellu2019/fpga-vocoder,426856609,SystemVerilog,fpga-vocoder,492,0,2022-03-03 16:53:43+00:00,[],
7915,https://github.com/ivandumas/Multiprocesadores.git,2021-08-14 22:55:41+00:00,,2,ivandumas/Multiprocesadores,396152336,SystemVerilog,Multiprocesadores,37080,0,2021-11-17 22:51:14+00:00,[],https://api.github.com/licenses/mit
7916,https://github.com/TheShubhi/Encryption-Processor.git,2021-08-26 18:45:37+00:00,A processor designed in SystemVerilog specifically for encryption. Programs to encrypt input ASCII strings and decrypt are also included.,0,TheShubhi/Encryption-Processor,400272886,SystemVerilog,Encryption-Processor,136,0,2021-08-30 22:41:13+00:00,[],
7917,https://github.com/shubhi704/SV-testbenches.git,2021-08-25 17:54:10+00:00,,1,shubhi704/SV-testbenches,399910653,SystemVerilog,SV-testbenches,7,0,2021-08-28 11:51:47+00:00,[],
7918,https://github.com/tantonacci/ece554_miniproject.git,2021-09-09 21:15:03+00:00,,0,tantonacci/ece554_miniproject,404872054,SystemVerilog,ece554_miniproject,620,0,2021-09-13 23:49:08+00:00,[],
7919,https://github.com/SophoWang/uvm_example.git,2021-09-13 13:40:06+00:00,,0,SophoWang/uvm_example,405988911,SystemVerilog,uvm_example,3,0,2021-09-13 14:14:19+00:00,[],
7920,https://github.com/jhsyu/ECE43700.git,2021-09-18 21:29:14+00:00,,0,jhsyu/ECE43700,407971435,SystemVerilog,ECE43700,7848,0,2022-03-23 21:03:22+00:00,[],
7921,https://github.com/njjt/ECE385.git,2021-09-03 21:30:54+00:00,ECE385 FALL 2021,0,njjt/ECE385,402902017,SystemVerilog,ECE385,42079,0,2021-11-03 17:52:55+00:00,[],
7922,https://github.com/dc-base/ee273.git,2021-09-11 00:25:55+00:00,,0,dc-base/ee273,405245088,SystemVerilog,ee273,29,0,2021-10-12 07:08:17+00:00,[],
7923,https://github.com/SemperAnte/drvAd56x3.git,2021-09-10 11:56:34+00:00,,0,SemperAnte/drvAd56x3,405064166,SystemVerilog,drvAd56x3,37,0,2021-09-10 12:12:22+00:00,[],
7924,https://github.com/randyma01/CE3201-Laboratorio-4.git,2021-09-15 13:28:40+00:00,Laboratorio 4: Lógica Secuencial de Control,1,randyma01/CE3201-Laboratorio-4,406776311,SystemVerilog,CE3201-Laboratorio-4,25158,0,2021-10-14 17:12:51+00:00,[],
7925,https://github.com/katya-varlamova/5-sem-evm.git,2021-10-01 21:37:19+00:00,evm labs,0,katya-varlamova/5-sem-evm,412623314,SystemVerilog,5-sem-evm,98975,0,2021-12-26 20:54:08+00:00,[],
7926,https://github.com/Stevensayhello/ELEC402_PROJ1_FOOD_DISPENSER.git,2021-10-02 04:35:19+00:00,ELEC402_PROJ1_FOOD_DISPENSER,0,Stevensayhello/ELEC402_PROJ1_FOOD_DISPENSER,412690493,SystemVerilog,ELEC402_PROJ1_FOOD_DISPENSER,1173,0,2021-10-02 04:37:19+00:00,[],
7927,https://github.com/OH-Z666/ELEC402.git,2021-10-02 06:55:34+00:00,,0,OH-Z666/ELEC402,412716717,SystemVerilog,ELEC402,7524,0,2021-10-11 06:53:24+00:00,[],
7928,https://github.com/nwkrix/UVM_Short_Exercises.git,2021-11-09 06:52:25+00:00,,0,nwkrix/UVM_Short_Exercises,426122140,SystemVerilog,UVM_Short_Exercises,0,0,2021-11-09 06:53:53+00:00,[],
7929,https://github.com/MacPCH/Proyecto_1_VFCI.git,2021-11-24 00:32:47+00:00,"Primer proyecto escrito en systemverilog para el curso de verificacion funcional de circuitos integrados del Instituto Tecnol{ogico de Costa Rica, orientada en el testeo de un DUT (FIFO), la prueba corre en EDA Playground pero se puede correr en otros sitios como VCS ",0,MacPCH/Proyecto_1_VFCI,431297929,SystemVerilog,Proyecto_1_VFCI,33,0,2021-11-24 00:53:09+00:00,[],https://api.github.com/licenses/gpl-3.0
7930,https://github.com/shawn110285/riscv_ibex_verilator.git,2021-11-22 05:06:45+00:00,the simplified verilator simulation env for risc-v ibex core,0,shawn110285/riscv_ibex_verilator,430569970,SystemVerilog,riscv_ibex_verilator,238,0,2021-11-23 01:27:28+00:00,[],
7931,https://github.com/rooged/513-Labs.git,2021-10-14 14:10:59+00:00,,0,rooged/513-Labs,417156171,SystemVerilog,513-Labs,97,0,2023-09-14 16:52:15+00:00,[],
7932,https://github.com/zmaqutu/implementing-alu.git,2021-10-17 21:28:19+00:00,,0,zmaqutu/implementing-alu,418259817,SystemVerilog,implementing-alu,3,0,2021-10-17 21:29:16+00:00,[],
7933,https://github.com/hellgate202/jpeg_enc.git,2021-10-22 17:27:13+00:00,,0,hellgate202/jpeg_enc,420186450,SystemVerilog,jpeg_enc,99,0,2021-10-31 17:50:57+00:00,[],
7934,https://github.com/Shwetapatil05/spi_avip.git,2021-10-13 07:45:20+00:00,,1,Shwetapatil05/spi_avip,416638290,SystemVerilog,spi_avip,961,0,2021-10-22 10:26:27+00:00,[],
7935,https://github.com/mcmlery/ELM235_Logic_Circuit_Desing_Laboratory.git,2021-11-07 14:05:35+00:00,,0,mcmlery/ELM235_Logic_Circuit_Desing_Laboratory,425519871,SystemVerilog,ELM235_Logic_Circuit_Desing_Laboratory,3198,0,2022-05-08 13:52:03+00:00,[],
7936,https://github.com/Vamshidharreddymirafra/uart.git,2021-11-05 10:20:47+00:00,,3,Vamshidharreddymirafra/uart,424906849,SystemVerilog,uart,44,0,2021-11-05 11:33:03+00:00,[],
7937,https://github.com/H-Vlad-Montes/Hugo_Montes.git,2021-11-06 16:29:58+00:00,,0,H-Vlad-Montes/Hugo_Montes,425292861,SystemVerilog,Hugo_Montes,8,0,2021-11-20 00:38:41+00:00,[],
7938,https://github.com/samuelmi/comp541finalproject.git,2021-11-03 20:56:38+00:00,Comp 541 Final Project,0,samuelmi/comp541finalproject,424378037,SystemVerilog,comp541finalproject,3904,0,2021-11-06 19:23:42+00:00,[],
7939,https://github.com/Josem9718/Verification-Miguel_Benavides.git,2021-11-04 00:48:58+00:00,Verificación de Sistemas Digitales  ,0,Josem9718/Verification-Miguel_Benavides,424426389,SystemVerilog,Verification-Miguel_Benavides,5,0,2021-11-25 03:09:18+00:00,[],
7940,https://github.com/NivWeisman/nw_design_patterns.git,2021-10-03 19:28:23+00:00,This reposetory is an implementation of some of the known design patterns in SystemVerilog,0,NivWeisman/nw_design_patterns,413176708,SystemVerilog,nw_design_patterns,18,0,2021-10-04 20:08:59+00:00,[],https://api.github.com/licenses/gpl-3.0
7941,https://github.com/ChengjunXi/FPGA-Accelerated_CNN.git,2021-10-31 18:59:54+00:00,,0,ChengjunXi/FPGA-Accelerated_CNN,423235927,SystemVerilog,FPGA-Accelerated_CNN,89,0,2023-08-05 18:30:43+00:00,[],
7942,https://github.com/Tyler1T/hand-Writing-MLP.git,2021-10-27 19:23:18+00:00,,0,Tyler1T/hand-Writing-MLP,421946789,SystemVerilog,hand-Writing-MLP,25343,0,2021-12-07 21:50:39+00:00,[],https://api.github.com/licenses/gpl-3.0
7943,https://github.com/nvontz/Synth643.git,2021-10-26 19:29:16+00:00,,0,nvontz/Synth643,421558384,SystemVerilog,Synth643,139949,0,2021-10-26 21:58:48+00:00,[],
7944,https://github.com/nyando/bali.git,2021-10-30 08:54:13+00:00,"Bali processor project, a minimized implementation of a Java processor.",0,nyando/bali,422830696,SystemVerilog,bali,309,0,2022-05-03 20:00:38+00:00,[],
7945,https://github.com/Vamshidharreddymirafra/uart_avip.git,2021-10-30 07:47:55+00:00,,3,Vamshidharreddymirafra/uart_avip,422817716,SystemVerilog,uart_avip,144,0,2021-11-03 07:46:05+00:00,[],
7946,https://github.com/DeekshaECE/PSU_Fall21_ECE585_Group13.git,2021-10-30 01:56:23+00:00,Simulation of a Memory Controller,0,DeekshaECE/PSU_Fall21_ECE585_Group13,422759119,SystemVerilog,PSU_Fall21_ECE585_Group13,19,0,2022-03-02 01:08:13+00:00,[],
7947,https://github.com/indrajeetpande/practice.git,2021-11-15 14:08:22+00:00,,0,indrajeetpande/practice,428289257,SystemVerilog,practice,4,0,2021-11-15 14:08:46+00:00,[],
7948,https://github.com/jiru1997/design-and-verification-of-MCDF-phase1.git,2021-11-17 07:57:24+00:00,design and verification of MCDF phase1,0,jiru1997/design-and-verification-of-MCDF-phase1,428956041,SystemVerilog,design-and-verification-of-MCDF-phase1,19,0,2021-11-17 07:57:37+00:00,[],
7949,https://github.com/Yondela/EEE3096S-Tutorial-06.git,2021-10-22 09:32:54+00:00,,0,Yondela/EEE3096S-Tutorial-06,420041206,SystemVerilog,EEE3096S-Tutorial-06,1,0,2021-10-22 09:38:59+00:00,[],
7950,https://github.com/farukulutas/CS223.git,2021-11-26 00:00:30+00:00,All my work in CS 223 - Digital Design course.,0,farukulutas/CS223,432006139,SystemVerilog,CS223,5509,0,2021-12-29 12:47:13+00:00,[],
7951,https://github.com/randomdevice/verilog-risc-cpu.git,2021-11-25 21:16:33+00:00,A rudimentary RISC CPU described in Verilog and compiled in Quartus Prime with RTL sims in Model Sim. Was then loaded and tested on an FPGA.,0,randomdevice/verilog-risc-cpu,431978924,SystemVerilog,verilog-risc-cpu,7651,0,2023-06-30 21:55:40+00:00,[],
7952,https://github.com/andresdavalosc/FPGA-projects.git,2021-12-05 16:16:47+00:00,,0,andresdavalosc/FPGA-projects,435216717,SystemVerilog,FPGA-projects,171543,0,2022-01-31 16:43:03+00:00,[],
7953,https://github.com/Tal-Ko/Digital-Systems-Simulation2.git,2021-12-25 17:23:49+00:00,,0,Tal-Ko/Digital-Systems-Simulation2,441725965,SystemVerilog,Digital-Systems-Simulation2,10,0,2022-01-02 17:51:26+00:00,[],
7954,https://github.com/yoonseo-choi/RISCV_Processor.git,2021-12-22 05:23:28+00:00,,0,yoonseo-choi/RISCV_Processor,440742446,SystemVerilog,RISCV_Processor,1428,0,2022-01-09 22:17:30+00:00,[],
7955,https://github.com/Harshith74/project_dram_PHY.git,2021-12-08 13:01:11+00:00,,0,Harshith74/project_dram_PHY,436249170,SystemVerilog,project_dram_PHY,8957,0,2023-08-27 12:16:46+00:00,[],
7956,https://github.com/GameGod007/TI_RSLK_MAX_CMOD_A7.git,2021-12-13 00:56:39+00:00,TI-RSLK MAX robot kit implemented using a CMOD A7 FPGA,0,GameGod007/TI_RSLK_MAX_CMOD_A7,437693864,SystemVerilog,TI_RSLK_MAX_CMOD_A7,7,0,2021-12-13 00:59:18+00:00,[],
7957,https://github.com/foxxy777/my_spinal_test_case.git,2021-12-02 07:21:57+00:00,,0,foxxy777/my_spinal_test_case,434121173,SystemVerilog,my_spinal_test_case,12,0,2021-12-02 07:22:03+00:00,[],
7958,https://github.com/alamjitchoat/Frogger.git,2021-12-02 07:51:47+00:00,FPGA Project designed in SystemVerilog for the University of Washington,0,alamjitchoat/Frogger,434129411,SystemVerilog,Frogger,9,0,2021-12-02 07:53:38+00:00,[],
7959,https://github.com/RyanLennonCleary/RyanLennonCleary.github.io.git,2021-12-05 19:23:46+00:00,Programming projects,0,RyanLennonCleary/RyanLennonCleary.github.io,435258204,SystemVerilog,RyanLennonCleary.github.io,999,0,2022-01-10 20:56:17+00:00,[],
7960,https://github.com/Aleksa98Stojkovic/Cache_and_DfT.git,2021-12-15 22:14:47+00:00,,0,Aleksa98Stojkovic/Cache_and_DfT,438787788,SystemVerilog,Cache_and_DfT,9,0,2021-12-21 18:20:54+00:00,[],
7961,https://github.com/shiranDapht/HW1.git,2021-12-17 12:44:42+00:00,,0,shiranDapht/HW1,439329265,SystemVerilog,HW1,4316,0,2021-12-22 10:17:55+00:00,[],
7962,https://github.com/yoavdim/Kong.git,2021-12-17 17:11:59+00:00,university lab project,0,yoavdim/Kong,439406403,SystemVerilog,Kong,831,0,2021-12-20 09:16:38+00:00,[],
7963,https://github.com/Eric-Souza/johnson-counter.git,2021-08-17 21:02:17+00:00,"An algorithm, developed in Verilog hardware design language (HDL), that implements a Johnson Counter, which counts 2n states if the number of bits is n. This system was developed as a Logical Systems subject exercise (UFMG).",0,Eric-Souza/johnson-counter,397390576,SystemVerilog,johnson-counter,1,0,2021-08-17 21:14:56+00:00,"['computer-science', 'hardware', 'verilog', 'hdl', 'logical-operators', 'ufmg']",
7964,https://github.com/justin371/uvm_1800.2_2020_1.1.git,2021-08-16 08:13:34+00:00,,0,justin371/uvm_1800.2_2020_1.1,396690995,SystemVerilog,uvm_1800.2_2020_1.1,689,0,2022-01-30 03:26:00+00:00,[],https://api.github.com/licenses/apache-2.0
7965,https://github.com/Sup3Legacy/proto-core.git,2021-08-13 08:47:12+00:00,Attempt at building entirely from scratch a RISC-V SoC for self-education purposes.,0,Sup3Legacy/proto-core,395580443,SystemVerilog,proto-core,94,0,2022-01-09 20:21:50+00:00,"['risc-v', 'rv32im', 'systemverilog', 'system-programming', 'system-on-chip', 'embedded-systems']",https://api.github.com/licenses/gpl-3.0
7966,https://github.com/Danil1997Dev/RAM.git,2021-09-26 14:33:44+00:00,,0,Danil1997Dev/RAM,410575365,SystemVerilog,RAM,259,0,2021-09-26 14:39:37+00:00,[],
7967,https://github.com/17111748/joemabertli.git,2021-09-25 23:39:54+00:00,18847 Research ,0,17111748/joemabertli,410404838,SystemVerilog,joemabertli,14342,0,2021-10-15 02:11:57+00:00,[],
7968,https://github.com/shpegun60/cnt_dly_SLG46620.git,2021-09-25 12:44:02+00:00, microcircuit SLG46620 CNT/DLY2/FSM0 (from dialog semiconductor company) SystemVerilog interpretation.  Dataseet is: https://www.dialog-semiconductor.com/sites/default/files/slg46620r115_10282019.pdf  Simulation: QuestaSim x64 ver2020.1 Needed simulation libraries: altera_primitives (build: $projectSource/verification/altera_primitives),0,shpegun60/cnt_dly_SLG46620,410270095,SystemVerilog,cnt_dly_SLG46620,12354,0,2021-12-19 21:05:43+00:00,"['slg46620', 'dialog-semiconductor', 'systemverilog', 'quartus']",https://api.github.com/licenses/gpl-3.0
7969,https://github.com/TheKalty/TPUv1.git,2021-10-05 22:40:17+00:00,,0,TheKalty/TPUv1,413999236,SystemVerilog,TPUv1,1,0,2021-10-05 22:40:55+00:00,[],
7970,https://github.com/pwang7/uart-vcs.git,2021-10-10 16:24:41+00:00,,0,pwang7/uart-vcs,415638745,SystemVerilog,uart-vcs,1191,0,2021-10-10 16:39:57+00:00,[],
7971,https://github.com/Zottel/max7219-systemverilog-driver.git,2021-10-09 06:51:13+00:00,,0,Zottel/max7219-systemverilog-driver,415227815,SystemVerilog,max7219-systemverilog-driver,16,0,2021-10-09 06:51:43+00:00,[],
7972,https://github.com/BerthaMolai/EEE3096S-Prac6.git,2021-11-01 18:38:10+00:00,,0,BerthaMolai/EEE3096S-Prac6,423576536,SystemVerilog,EEE3096S-Prac6,4,0,2021-11-01 18:44:53+00:00,[],
7973,https://github.com/rushipBU/uvm-testbench.git,2021-10-25 16:15:34+00:00,Simple UVM skeleton for future testing,0,rushipBU/uvm-testbench,421097212,SystemVerilog,uvm-testbench,6,0,2021-10-25 16:28:20+00:00,[],
7974,https://github.com/michael-platzer/cv32e40x-soc.git,2021-11-03 08:39:29+00:00,Minimal SoC for simulating CV32E40X,0,michael-platzer/cv32e40x-soc,424147797,SystemVerilog,cv32e40x-soc,90,0,2021-11-24 10:43:24+00:00,[],https://api.github.com/licenses/isc
7975,https://github.com/wondersylar/bmm_core.git,2021-10-31 13:50:08+00:00,"riscv core for fan, keep learning",0,wondersylar/bmm_core,423160885,SystemVerilog,bmm_core,6458,0,2023-06-17 02:28:58+00:00,[],https://api.github.com/licenses/mit
7976,https://github.com/knyuchen/fft_accelerator.git,2021-11-22 20:35:46+00:00,Implementation of Programmable FFT Accelerator,0,knyuchen/fft_accelerator,430857262,SystemVerilog,fft_accelerator,22,0,2021-11-23 01:50:09+00:00,"['fft', 'systemverilog', 'accelerator', 'python']",
7977,https://github.com/myreliavilla/Moore-and-Mealy-for-Vending-Machine.git,2021-11-21 19:54:00+00:00,"oDispatches a pack of candy upon deposit of 15 cents by the customer  oHas single coin slot and only accepts nickels and dimes. Doesn’t take pennies or quarters   oDoes not provide any change back to the customer  oOnce candy is dispatched, vending machine will auto reset itself   ▪Develop both Moore and Mealy State SystemVerilog FSM code for Vending Machine  ▪Develop state transiEon diagram for mealy state machine  ▪Use one hot encoding for states and assume asynchronous acEve low reset",0,myreliavilla/Moore-and-Mealy-for-Vending-Machine,430465881,SystemVerilog,Moore-and-Mealy-for-Vending-Machine,5,0,2021-11-21 19:55:26+00:00,[],
7978,https://github.com/slkaplan/comparch_final_FA2021.git,2021-12-05 22:20:35+00:00,,1,slkaplan/comparch_final_FA2021,435292692,SystemVerilog,comparch_final_FA2021,13116,0,2021-12-16 21:05:40+00:00,[],https://api.github.com/licenses/mit
7979,https://github.com/ratul619/VSD.git,2021-12-13 16:43:47+00:00,,0,ratul619/VSD,437950004,SystemVerilog,VSD,22042,0,2023-06-23 12:22:10+00:00,[],
7980,https://github.com/patrick-harkins/GridNorth.git,2021-12-08 23:32:44+00:00,,0,patrick-harkins/GridNorth,436423177,SystemVerilog,GridNorth,1112,0,2021-12-14 19:05:23+00:00,[],
7981,https://github.com/astrakhov-design/axi_timer.git,2021-12-08 23:02:09+00:00,,0,astrakhov-design/axi_timer,436417263,SystemVerilog,axi_timer,1,0,2021-12-09 12:06:50+00:00,[],
7982,https://github.com/Aarun2/LRU-Cache.git,2021-10-16 02:02:33+00:00,My verilog design for an LRU cache,0,Aarun2/LRU-Cache,417688387,SystemVerilog,LRU-Cache,2,0,2021-10-16 03:23:17+00:00,[],
7983,https://github.com/sompally12/first_program.git,2021-10-21 10:48:47+00:00,,0,sompally12/first_program,419683504,SystemVerilog,first_program,0,0,2021-10-21 10:56:47+00:00,[],
7984,https://github.com/Aarun2/MSI_Protocol.git,2021-10-12 19:11:10+00:00,A system verilog project to replicate the MSI cache coherence protocol,0,Aarun2/MSI_Protocol,416465998,SystemVerilog,MSI_Protocol,1,0,2021-10-12 19:20:19+00:00,[],
7985,https://github.com/krissemicolon-forks/Igel.git,2021-09-08 10:22:58+00:00,A no-frills dynamic lisp-dialect written in artisian systemverilog,0,krissemicolon-forks/Igel,404303555,SystemVerilog,Igel,239,0,2023-03-07 13:47:55+00:00,[],https://api.github.com/licenses/bsd-3-clause
7986,https://github.com/gt-retro-computing/IMSAI_FPGA_HDL.git,2021-09-05 02:04:29+00:00,,0,gt-retro-computing/IMSAI_FPGA_HDL,403194182,SystemVerilog,IMSAI_FPGA_HDL,35,0,2021-10-23 16:25:28+00:00,[],
7987,https://github.com/cannox227/Space-Evaders-VHDL.git,2021-09-11 21:45:20+00:00,A simple game written in VHDL where a spaceship has to avoid some aliens,1,cannox227/Space-Evaders-VHDL,405489138,SystemVerilog,Space-Evaders-VHDL,11481,0,2022-12-12 14:25:24+00:00,[],
7988,https://github.com/Dara-O/16_bit_microprocessor.git,2021-09-13 05:33:55+00:00,A 16 bit multicycle microprocessor modeled using SystemVerilog and developed using Xilinx Vivado.,0,Dara-O/16_bit_microprocessor,405845273,SystemVerilog,16_bit_microprocessor,604,0,2021-09-13 06:42:24+00:00,[],
7989,https://github.com/hasibarrafiul/4-bit-Binary-to-Even-Parity-Code-Converter.git,2021-09-12 17:30:33+00:00,,0,hasibarrafiul/4-bit-Binary-to-Even-Parity-Code-Converter,405708828,SystemVerilog,4-bit-Binary-to-Even-Parity-Code-Converter,997,0,2021-09-12 17:57:45+00:00,[],
7990,https://github.com/tapegun/lab4.git,2021-09-13 02:56:51+00:00,THIS IS FOR US TO COLLABORATE DON'T COPY,0,tapegun/lab4,405813878,SystemVerilog,lab4,321,0,2021-09-17 06:19:19+00:00,[],
7991,https://github.com/jschramk/ece554_miniproject.git,2021-09-09 22:02:17+00:00,,0,jschramk/ece554_miniproject,404881655,SystemVerilog,ece554_miniproject,7821,0,2021-10-08 01:44:09+00:00,[],
7992,https://github.com/Dan-Wolf/MIPS.git,2021-09-19 01:14:14+00:00,5-Stage Pipeline MIPS ,0,Dan-Wolf/MIPS,408002980,SystemVerilog,MIPS,6037,0,2021-12-08 17:49:36+00:00,[],
7993,https://github.com/mitchell-fanger/apb-system.git,2021-09-13 15:58:31+00:00,,0,mitchell-fanger/apb-system,406038144,SystemVerilog,apb-system,34,0,2021-09-13 22:55:10+00:00,[],
7994,https://github.com/99Angelrm/MIPS.git,2021-09-15 14:40:07+00:00,,1,99Angelrm/MIPS,406805465,SystemVerilog,MIPS,48,0,2021-09-19 04:40:24+00:00,[],
7995,https://github.com/IEEE-NITK/Simulation-of-SDR.git,2021-10-04 10:44:29+00:00,An IEEE Executive Project for the year 2021-2022.,1,IEEE-NITK/Simulation-of-SDR,413379373,SystemVerilog,Simulation-of-SDR,42,0,2023-03-14 08:27:38+00:00,[],
7996,https://github.com/veenacb9967/veena.git,2021-10-07 13:25:10+00:00,,0,veenacb9967/veena,414611442,SystemVerilog,veena,1,0,2021-10-08 07:58:37+00:00,[],
7997,https://github.com/Arima9/Data_Path_Rivera_Andres.git,2021-11-28 16:44:27+00:00,,0,Arima9/Data_Path_Rivera_Andres,432768517,SystemVerilog,Data_Path_Rivera_Andres,10,0,2021-12-17 01:38:58+00:00,[],
7998,https://github.com/EzraCharles/Reg_File_Charles_1_Ezra.git,2021-11-23 22:01:01+00:00,Register File activity from computer architecture by ITESO and INTEL,0,EzraCharles/Reg_File_Charles_1_Ezra,431265971,SystemVerilog,Reg_File_Charles_1_Ezra,13,0,2021-11-24 05:55:15+00:00,[],https://api.github.com/licenses/mit
7999,https://github.com/fadialzammar/Floating-Point-Adder-Subtracter.git,2021-11-24 00:11:34+00:00,,0,fadialzammar/Floating-Point-Adder-Subtracter,431293661,SystemVerilog,Floating-Point-Adder-Subtracter,662,0,2021-12-08 18:56:29+00:00,[],
8000,https://github.com/denizikitemur/sv.git,2021-12-23 16:11:37+00:00,,0,denizikitemur/sv,441232741,SystemVerilog,sv,744,0,2021-12-23 16:29:02+00:00,[],
8001,https://github.com/erfanbsoula/32b-SC-Processor.git,2021-12-24 14:45:37+00:00,32-bit Single Cycle MIPS Processor (Computer Architecture Course),0,erfanbsoula/32b-SC-Processor,441489914,SystemVerilog,32b-SC-Processor,108,0,2022-02-13 16:31:08+00:00,[],
8002,https://github.com/TylerBoland/Zynq-LED-Matrix-Driver.git,2021-12-17 01:23:19+00:00,,0,TylerBoland/Zynq-LED-Matrix-Driver,439174229,SystemVerilog,Zynq-LED-Matrix-Driver,2711,0,2021-12-27 22:11:27+00:00,[],
8003,https://github.com/T-Szymk/FRiscV.git,2021-12-16 17:11:14+00:00,RV32I Implementation,0,T-Szymk/FRiscV,439068961,SystemVerilog,FRiscV,559,0,2022-01-09 14:18:28+00:00,[],
8004,https://github.com/npuwth/GenshinCPU.git,2021-12-25 07:00:22+00:00,NSCSCC2020 NPU2 Code,0,npuwth/GenshinCPU,441623519,SystemVerilog,GenshinCPU,2213,0,2021-12-25 07:54:16+00:00,[],
8005,https://github.com/madhur19171/NoxyGen.git,2021-10-11 18:18:57+00:00,Generates NoC in verilog using configuration Graph,1,madhur19171/NoxyGen,416039596,SystemVerilog,NoxyGen,10363,0,2023-12-01 17:49:47+00:00,[],https://api.github.com/licenses/lgpl-2.1
8006,https://github.com/NickolayTernovoy/SimpleCacheController.git,2021-09-05 18:33:57+00:00,Advanced Material: Implementing Cache Controllers,0,NickolayTernovoy/SimpleCacheController,403385096,SystemVerilog,SimpleCacheController,5,0,2024-01-21 20:20:47+00:00,[],
8007,https://github.com/tantonacci/minilab2.git,2021-09-14 21:03:13+00:00,Multiply-Accumulator,0,tantonacci/minilab2,406520327,SystemVerilog,minilab2,25,0,2021-09-14 22:50:28+00:00,[],
8008,https://github.com/alexBinos/LEDs.git,2021-09-18 01:13:39+00:00,Repo containing LED projects,0,alexBinos/LEDs,407720555,SystemVerilog,LEDs,82,0,2023-08-04 10:11:10+00:00,[],
8009,https://github.com/miura-katsuyoshi/ohehot2bin.git,2021-09-18 08:16:18+00:00,,0,miura-katsuyoshi/ohehot2bin,407799846,SystemVerilog,ohehot2bin,27,0,2021-09-18 09:22:52+00:00,[],
8010,https://github.com/imbasmd/Two_neuron_MLP.git,2021-08-14 15:12:31+00:00,,0,imbasmd/Two_neuron_MLP,396044942,SystemVerilog,Two_neuron_MLP,141,0,2021-08-14 15:44:58+00:00,[],
8011,https://github.com/belmontcomputing/authentication.git,2021-08-16 08:46:55+00:00,,0,belmontcomputing/authentication,396703256,SystemVerilog,authentication,3,0,2021-08-20 08:56:52+00:00,[],
8012,https://github.com/tslotboom/cme_435_lab_3.git,2021-10-18 20:45:35+00:00,,0,tslotboom/cme_435_lab_3,418662463,SystemVerilog,cme_435_lab_3,90,0,2021-10-25 21:12:47+00:00,[],
8013,https://github.com/ss-mugdho/4-Bit-Computer.git,2021-10-20 16:06:25+00:00,,0,ss-mugdho/4-Bit-Computer,419400747,SystemVerilog,4-Bit-Computer,27359,0,2021-10-20 16:37:36+00:00,[],
8014,https://github.com/nwkrix/HWDL.git,2021-10-25 06:59:22+00:00,,0,nwkrix/HWDL,420911812,SystemVerilog,HWDL,0,0,2021-10-27 12:38:41+00:00,[],
8015,https://github.com/darthdirk/Controller.git,2021-09-24 04:30:18+00:00,System Verilog controler,0,darthdirk/Controller,409831578,SystemVerilog,Controller,0,0,2021-09-24 04:47:43+00:00,[],
8016,https://github.com/tslotboom/cme_435_lab1.git,2021-09-20 23:16:12+00:00,,0,tslotboom/cme_435_lab1,408627493,SystemVerilog,cme_435_lab1,7,0,2021-09-21 00:06:50+00:00,[],
8017,https://github.com/tapegun/8-bit-Multiplier.git,2021-09-21 23:59:02+00:00,,0,tapegun/8-bit-Multiplier,409008856,SystemVerilog,8-bit-Multiplier,46,0,2021-10-25 22:24:13+00:00,[],
8018,https://github.com/p3da/pulpissimo-assets.git,2021-09-28 06:44:03+00:00,,0,p3da/pulpissimo-assets,411166922,SystemVerilog,pulpissimo-assets,12514,0,2022-01-03 07:08:47+00:00,[],
8019,https://github.com/zengyihe/svlib.git,2021-09-28 02:16:45+00:00,,0,zengyihe/svlib,411107527,SystemVerilog,svlib,541,0,2021-09-28 02:16:58+00:00,[],
8020,https://github.com/craymond3/554minilabs4-6.git,2021-09-23 21:12:48+00:00,ECE 554 Minilabs 4-6,0,craymond3/554minilabs4-6,409745188,SystemVerilog,554minilabs4-6,316,0,2021-10-06 04:18:51+00:00,[],
8021,https://github.com/robertstar/BUKS2_imitator32ch.git,2021-10-19 12:00:09+00:00,,0,robertstar/BUKS2_imitator32ch,418904857,SystemVerilog,BUKS2_imitator32ch,36682,0,2021-10-19 12:02:14+00:00,[],
8022,https://github.com/liumengbjut/PULP.git,2021-09-03 03:09:28+00:00,,0,liumengbjut/PULP,402631407,SystemVerilog,PULP,4250,0,2021-09-03 03:11:31+00:00,[],
8023,https://github.com/cdupont2/ece554_miniproject.git,2021-09-09 23:08:32+00:00,,0,cdupont2/ece554_miniproject,404894048,SystemVerilog,ece554_miniproject,3865,0,2021-09-14 04:53:55+00:00,[],
8024,https://github.com/hossamfadeel/Lexicon_SoC.git,2021-09-10 01:48:21+00:00,,1,hossamfadeel/Lexicon_SoC,404923542,,Lexicon_SoC,2657,0,2021-10-13 12:31:37+00:00,[],https://api.github.com/licenses/apache-2.0
8025,https://github.com/marlonsrivas/Meteorite-Shooter-.git,2021-12-15 19:35:34+00:00,FPGA Shooting Video Game,0,marlonsrivas/Meteorite-Shooter-,438750507,SystemVerilog,Meteorite-Shooter-,7,0,2021-12-15 19:45:41+00:00,[],
8026,https://github.com/mokhwasomssi/FPGA_Calculator.git,2021-12-16 06:05:52+00:00,[디지털 시스템] 전공수업 과제 - 계산기 만들기,0,mokhwasomssi/FPGA_Calculator,438878455,SystemVerilog,FPGA_Calculator,2403,0,2021-12-16 10:19:39+00:00,[],
8027,https://github.com/eito-fis/matrix-mult.git,2021-12-16 20:17:18+00:00,,0,eito-fis/matrix-mult,439116350,SystemVerilog,matrix-mult,1095,0,2021-12-17 21:04:10+00:00,[],
8028,https://github.com/ethansepa/Computer-Architecture.git,2021-11-17 03:57:16+00:00,Labs for EE 469,0,ethansepa/Computer-Architecture,428901458,SystemVerilog,Computer-Architecture,49,0,2021-11-17 04:38:29+00:00,[],
8029,https://github.com/jonathanbutaye/Assignment4.git,2021-11-22 10:47:41+00:00,,0,jonathanbutaye/Assignment4,430667033,SystemVerilog,Assignment4,42,0,2021-11-23 22:21:13+00:00,[],
8030,https://github.com/Alexandra182/harvard-cpu.git,2021-12-09 21:17:44+00:00,Simple implementation of a Harvard architecture CPU in System Verilog. ,0,Alexandra182/harvard-cpu,436763998,SystemVerilog,harvard-cpu,8,0,2021-12-09 21:40:37+00:00,[],
8031,https://github.com/ariel-brock/sim_1_logic_systems.git,2021-12-13 15:02:47+00:00,logic sim,0,ariel-brock/sim_1_logic_systems,437916796,SystemVerilog,sim_1_logic_systems,33,0,2021-12-19 21:37:47+00:00,[],
8032,https://github.com/xmenji/Motion-Estimator-ENGR850.git,2021-11-11 21:53:55+00:00,"Motion Estimator project for ENGR 850 (code is from server: ""Motion Estimator example 2""",0,xmenji/Motion-Estimator-ENGR850,427153903,SystemVerilog,Motion-Estimator-ENGR850,37,0,2021-12-14 02:42:13+00:00,[],
8033,https://github.com/Hasith09/G5_Memory_Controller.git,2021-10-30 05:34:07+00:00,,0,Hasith09/G5_Memory_Controller,422793692,SystemVerilog,G5_Memory_Controller,112,0,2021-12-01 16:56:04+00:00,[],
8034,https://github.com/IgnacioCarazo/TallerDD.git,2021-08-22 15:20:52+00:00,,0,IgnacioCarazo/TallerDD,398831826,SystemVerilog,TallerDD,56174,0,2021-11-25 15:40:48+00:00,[],
8035,https://github.com/mrdiogodias/i2c_master.git,2021-11-03 15:07:45+00:00,,0,mrdiogodias/i2c_master,424271627,SystemVerilog,i2c_master,17,0,2021-12-09 14:12:34+00:00,[],
8036,https://github.com/ShichenQiao/ECE551_FA2021_Knights_Tour.git,2021-11-30 04:15:24+00:00,Final project repo of ECE551 in Fall 2021 at UW Madison. Owned by Team Doraemon.,0,ShichenQiao/ECE551_FA2021_Knights_Tour,433289828,SystemVerilog,ECE551_FA2021_Knights_Tour,42755,0,2023-04-25 20:08:48+00:00,[],
8037,https://github.com/myreliavilla/4-bit-Barrel-Shifter-using-2x1-Mux-behavioral-model-.git,2021-11-21 19:39:17+00:00,Synthesize and develop Barrel Shifter,0,myreliavilla/4-bit-Barrel-Shifter-using-2x1-Mux-behavioral-model-,430462851,SystemVerilog,4-bit-Barrel-Shifter-using-2x1-Mux-behavioral-model-,2,0,2021-11-21 19:40:03+00:00,[],
8038,https://github.com/hysun00/Reconfigurable-CNN-Engine.git,2021-11-18 04:08:58+00:00,,0,hysun00/Reconfigurable-CNN-Engine,429291992,SystemVerilog,Reconfigurable-CNN-Engine,11,0,2021-11-19 03:18:14+00:00,[],
8039,https://github.com/codery12321/ECE270.git,2021-12-01 20:13:10+00:00,Fall 2021 ECE 270 Introduction to Digital Systems at Purdue University,0,codery12321/ECE270,433970874,SystemVerilog,ECE270,28872,0,2023-01-12 01:08:37+00:00,[],
8040,https://github.com/boris-98/fvh_test.git,2021-11-26 19:22:32+00:00,,0,boris-98/fvh_test,432280602,SystemVerilog,fvh_test,4,0,2021-12-15 22:21:32+00:00,[],
8041,https://github.com/nguyenquanicd/Python4RTLDesigner.git,2021-09-05 06:39:20+00:00,The scripts are developed for RTL or logic designer.,0,nguyenquanicd/Python4RTLDesigner,403235010,SystemVerilog,Python4RTLDesigner,8,0,2021-09-06 11:46:16+00:00,[],
8042,https://github.com/Kare-Benjamin/UVM_Practice.git,2021-09-25 11:09:10+00:00,Practice with UVM,0,Kare-Benjamin/UVM_Practice,410250760,SystemVerilog,UVM_Practice,15,0,2021-09-29 14:02:28+00:00,[],https://api.github.com/licenses/mit
8043,https://github.com/Datum-Technology-Corporation/uvm.git,2021-10-06 00:11:07+00:00,Moore.io UVM Distribution,0,Datum-Technology-Corporation/uvm,414016680,SystemVerilog,uvm,10459,0,2021-10-06 02:30:16+00:00,[],
8044,https://github.com/David-Solorzano/Quiz-UVM.git,2021-10-09 05:02:17+00:00,,0,David-Solorzano/Quiz-UVM,415207165,SystemVerilog,Quiz-UVM,47,0,2021-10-12 20:06:19+00:00,[],
8045,https://github.com/cpuex2021-1/core.git,2021-10-07 04:16:28+00:00,,0,cpuex2021-1/core,414457757,SystemVerilog,core,631,0,2022-10-11 02:30:51+00:00,[],
8046,https://github.com/StudentKevinOrbie/CPAEP_project.git,2021-11-20 04:00:41+00:00,,0,StudentKevinOrbie/CPAEP_project,430003247,SystemVerilog,CPAEP_project,133,0,2023-12-02 19:15:11+00:00,[],
8047,https://github.com/infiWang/MIMA.git,2021-09-09 14:00:18+00:00,MIMA 〜 Reincarnation of Minisys In Modern Age,0,infiWang/MIMA,404743511,SystemVerilog,MIMA,121,0,2022-06-20 05:11:30+00:00,[],https://api.github.com/licenses/bsd-3-clause
8048,https://github.com/Pablopabota/Proyecto1_Verificacion.git,2021-09-06 04:35:28+00:00,,0,Pablopabota/Proyecto1_Verificacion,403486052,SystemVerilog,Proyecto1_Verificacion,231,0,2021-09-27 03:00:19+00:00,[],
8049,https://github.com/JoaoPedroSousaC/PSD.git,2021-09-29 16:58:26+00:00,Projetos das aulas de Projetos de Sistemas Digitais,0,JoaoPedroSousaC/PSD,411759143,SystemVerilog,PSD,3,0,2021-09-29 17:12:19+00:00,[],
8050,https://github.com/cpu-ex/core.git,2021-10-05 06:53:20+00:00,A risc-v CPU,0,cpu-ex/core,413706486,SystemVerilog,core,321,0,2022-06-19 10:10:56+00:00,[],
8051,https://github.com/ChangQingAAS/Digital_Lab.git,2021-10-30 00:19:00+00:00,Digital Design Lab in TJU,0,ChangQingAAS/Digital_Lab,422744889,SystemVerilog,Digital_Lab,46,0,2021-12-26 14:20:26+00:00,[],
8052,https://github.com/VSHEV92/AXI_Lite_UVM_Agent.git,2021-10-29 16:32:58+00:00,UVM агент для верификации IP-ядер с AXI-Lite интерфейсом,0,VSHEV92/AXI_Lite_UVM_Agent,422644793,SystemVerilog,AXI_Lite_UVM_Agent,5382,0,2021-11-26 08:49:40+00:00,[],
8053,https://github.com/chriswebbb/Testing_Circuits_Using_SystemVerilog.git,2021-10-27 12:37:51+00:00,,0,chriswebbb/Testing_Circuits_Using_SystemVerilog,421812287,SystemVerilog,Testing_Circuits_Using_SystemVerilog,12325,0,2021-10-27 22:39:57+00:00,[],
8054,https://github.com/AndrewJones-PSU/MA7Debug7SD.git,2021-10-30 23:46:43+00:00,Simple interface + example implementation of a debug interface for the seven segment display on the Mimas A7 Development Board,0,AndrewJones-PSU/MA7Debug7SD,423013874,SystemVerilog,MA7Debug7SD,7,0,2021-10-30 23:48:09+00:00,[],https://api.github.com/licenses/mit
8055,https://github.com/AminSlamang/EEE3095S_Practical_6.git,2021-10-31 14:54:58+00:00,,0,AminSlamang/EEE3095S_Practical_6,423177151,SystemVerilog,EEE3095S_Practical_6,8,0,2021-11-05 21:19:18+00:00,[],
8056,https://github.com/kitune-san/KF8237.git,2021-09-04 13:47:09+00:00,8237A-like programmable dma controller written in SystemVerilog ,0,kitune-san/KF8237,403067793,SystemVerilog,KF8237,122,0,2022-06-23 12:43:02+00:00,"['8237', '8237a', 'dma', 'pc', 'systemverilog', 'fpga']",https://api.github.com/licenses/mit
8057,https://github.com/LP0914/test.git,2021-09-21 15:35:19+00:00,测试,0,LP0914/test,408876696,SystemVerilog,test,1,0,2021-09-21 16:08:08+00:00,[],
8058,https://github.com/MichaelAstahov/EthDDR.git,2021-09-21 16:23:48+00:00,,0,MichaelAstahov/EthDDR,408892442,SystemVerilog,EthDDR,73423,0,2023-03-11 14:02:26+00:00,[],
8059,https://github.com/TaikunZhang/CPUonFPGA.git,2021-09-28 21:16:12+00:00,,0,TaikunZhang/CPUonFPGA,411440828,SystemVerilog,CPUonFPGA,40,0,2021-11-14 03:57:22+00:00,[],
8060,https://github.com/TyKeeling/hardware-sha256.git,2021-09-28 00:11:42+00:00,systemverilog implementation of sha256 algorithm,0,TyKeeling/hardware-sha256,411080817,SystemVerilog,hardware-sha256,2768,0,2021-09-29 04:50:01+00:00,[],
8061,https://github.com/animesh0123/My_project_Dual_port_mem.git,2021-11-05 12:31:45+00:00,I have written design in Verilog-HDL and verify the design using testbench ,0,animesh0123/My_project_Dual_port_mem,424941418,SystemVerilog,My_project_Dual_port_mem,243,0,2021-11-05 12:32:45+00:00,[],https://api.github.com/licenses/mit
8062,https://github.com/MinotiKarkhanis/ECE-571-Intro-to-System-Verilog.git,2021-11-25 02:29:53+00:00,,0,MinotiKarkhanis/ECE-571-Intro-to-System-Verilog,431690210,SystemVerilog,ECE-571-Intro-to-System-Verilog,1905,0,2021-11-25 03:56:14+00:00,[],
8063,https://github.com/danielmergy/MIPS.git,2021-11-30 13:14:46+00:00,Single Cycle MIPS processor in SystemVerilog,0,danielmergy/MIPS,433436928,SystemVerilog,MIPS,6,0,2022-01-15 20:38:09+00:00,[],
8064,https://github.com/feiyuy/ECE260A.git,2021-12-03 01:54:45+00:00,ECE 260A Lab3 Verilog Code,0,feiyuy/ECE260A,434434097,SystemVerilog,ECE260A,1481,0,2021-12-11 23:20:11+00:00,[],
8065,https://github.com/nshcat/risc-v-wb.git,2021-12-10 15:10:34+00:00,Non-pipelined RISC-V SoC using the wishbone bus,0,nshcat/risc-v-wb,437020221,SystemVerilog,risc-v-wb,116,0,2022-01-10 21:04:01+00:00,[],https://api.github.com/licenses/mit
8066,https://github.com/JohnFluke/MatrixProcessor.git,2021-12-09 23:19:10+00:00,System Verilog Matrix Processor,0,JohnFluke/MatrixProcessor,436789058,SystemVerilog,MatrixProcessor,9,0,2021-12-09 23:28:24+00:00,[],
8067,https://github.com/BenjiPugh/FPGA-Matrix-Accelerator.git,2021-12-06 22:16:33+00:00,,0,BenjiPugh/FPGA-Matrix-Accelerator,435664560,SystemVerilog,FPGA-Matrix-Accelerator,528,0,2021-12-21 06:01:09+00:00,[],
8068,https://github.com/miguel100398/MIPS_multi-cycle_no_pipeline.git,2021-11-10 07:08:06+00:00,,0,miguel100398/MIPS_multi-cycle_no_pipeline,426519323,SystemVerilog,MIPS_multi-cycle_no_pipeline,70,0,2021-11-22 08:07:44+00:00,[],https://api.github.com/licenses/apache-2.0
8069,https://github.com/easymoneysnip/555Project.git,2021-11-23 18:03:44+00:00,,0,easymoneysnip/555Project,431204245,SystemVerilog,555Project,3,0,2021-11-23 18:19:16+00:00,[],
8070,https://github.com/nature1216/SchoolSeatingSystem.git,2021-11-25 06:07:42+00:00,,0,nature1216/SchoolSeatingSystem,431732985,SystemVerilog,SchoolSeatingSystem,33,0,2021-12-06 11:34:23+00:00,[],
8071,https://github.com/yonitm/Board-Game-4x4.git,2021-10-08 11:57:49+00:00,,0,yonitm/Board-Game-4x4,414968722,SystemVerilog,Board-Game-4x4,90,0,2021-10-14 06:32:05+00:00,[],
8072,https://github.com/RobertCrist/Frogger-on-FBGA.git,2021-10-13 06:58:05+00:00,The classic arcade game of Frogger implented on an FPGA board using system verilog,0,RobertCrist/Frogger-on-FBGA,416623950,SystemVerilog,Frogger-on-FBGA,187,0,2021-10-13 07:14:07+00:00,[],
8073,https://github.com/akseltorgerson/ECE554-MP6-FPGA.git,2021-10-07 17:36:17+00:00,Synthesized design and software testing,1,akseltorgerson/ECE554-MP6-FPGA,414699500,SystemVerilog,ECE554-MP6-FPGA,687,0,2021-10-07 17:37:45+00:00,[],
8074,https://github.com/MacPCH/Proyecto_2_VFCI.git,2021-10-08 05:01:44+00:00,"Segundo proyecto escrito en systemverilog para el curso de verificacion funcional de circuitos integrados del Instituto Tecnológico de Costa Rica, orientfada en el testeo de un DUT (router de 16 canales con una fifo conectada en cada puerto), la prueba corre en EDA Playground pero se puede correr en otros sitios como VCS",0,MacPCH/Proyecto_2_VFCI,414852045,SystemVerilog,Proyecto_2_VFCI,151,0,2021-11-24 00:52:19+00:00,[],https://api.github.com/licenses/gpl-3.0
8075,https://github.com/joannj35/super-mario-brick-breaker.git,2021-12-15 18:04:25+00:00,Electrical Engineering Laboratory project (FPGA),0,joannj35/super-mario-brick-breaker,438726247,SystemVerilog,super-mario-brick-breaker,7722,0,2023-08-19 16:17:28+00:00,[],
8076,https://github.com/panther03/N64-GC-FPGA.git,2021-12-17 05:19:06+00:00,,0,panther03/N64-GC-FPGA,439218873,SystemVerilog,N64-GC-FPGA,166,0,2022-08-30 00:56:45+00:00,[],
8077,https://github.com/TavidTerzian/Calculator.git,2021-12-22 22:35:05+00:00,,0,TavidTerzian/Calculator,441000356,SystemVerilog,Calculator,60,0,2022-01-30 00:41:51+00:00,[],
8078,https://github.com/omersrms/System-verilog.git,2021-12-18 19:41:54+00:00,,0,omersrms/System-verilog,439700631,SystemVerilog,System-verilog,4343,0,2021-12-18 20:04:06+00:00,[],
8079,https://github.com/hughperkins/VeriGPU.git,2022-03-01 10:49:57+00:00,"OpenSource GPU, in Verilog, loosely based on RISC-V ISA",60,hughperkins/VeriGPU,464853976,SystemVerilog,VeriGPU,7074,516,2024-04-12 14:27:16+00:00,"['verilog', 'risc-v', 'risc-v-assembly', 'hardware-designs', 'asic-design', 'gpu', 'gpu-acceleration', 'machine-learning', 'verification']",https://api.github.com/licenses/mit
8080,https://github.com/Siddhi-95/AHB-to-APB-Bridge-Verification.git,2022-03-01 15:11:35+00:00,Maven Silicon project - AHB-to-APB Bridge Verification using UVM Methodology.,11,Siddhi-95/AHB-to-APB-Bridge-Verification,464943029,SystemVerilog,AHB-to-APB-Bridge-Verification,89,52,2024-03-12 11:41:12+00:00,"['systemverilog', 'verilog', 'uvm']",
8081,https://github.com/hanysalah/Design-Pattern-in-SV.git,2022-02-21 21:10:31+00:00,This repo is created to include illustrative examples on object oriented design pattern in SV,3,hanysalah/Design-Pattern-in-SV,462032860,SystemVerilog,Design-Pattern-in-SV,40,50,2024-03-26 21:07:52+00:00,"['design-patterns', 'hardware-verification', 'systemverilog']",
8082,https://github.com/openhwgroup/cva5.git,2022-02-08 19:12:27+00:00,The CORE-V CVA5 is an Application class 5-stage RISC-V CPU specifically targetting FPGA implementations.,11,openhwgroup/cva5,457069453,SystemVerilog,cva5,1469,49,2024-03-05 22:39:28+00:00,[],https://api.github.com/licenses/apache-2.0
8083,https://github.com/davemuscle/sigma_delta_converters.git,2022-01-24 02:00:32+00:00,Implementation and test of reusable sigma-delta A/D converters written in SystemVerilog on a MAX10 FPGA with minimal external components,6,davemuscle/sigma_delta_converters,451284823,SystemVerilog,sigma_delta_converters,2683,35,2024-04-01 05:49:16+00:00,"['fpga', 'max10', 'adc', 'dac', 'sigma-delta-modulation', 'sigma-delta', 'systemverilog', 'quarkus', 'comb-filter', 'decimation', 'pwm']",
8084,https://github.com/Open-Source-Hardware-Initiative/AES.git,2022-01-24 20:11:52+00:00,Open Source AES,3,Open-Source-Hardware-Initiative/AES,451617149,SystemVerilog,AES,55694,30,2023-03-18 16:46:22+00:00,[],https://api.github.com/licenses/apache-2.0
8085,https://github.com/YosysHQ-GmbH/SVA-AXI4-FVIP.git,2022-02-14 16:35:54+00:00,YosysHQ SVA AXI Properties,5,YosysHQ-GmbH/SVA-AXI4-FVIP,459240580,SystemVerilog,SVA-AXI4-FVIP,5004,23,2024-03-12 05:25:43+00:00,[],https://api.github.com/licenses/isc
8086,https://github.com/muneeb-mbytes/axi4_avip.git,2021-12-27 13:10:01+00:00,Development of AXI4 Accelerated VIP,10,muneeb-mbytes/axi4_avip,442163711,SystemVerilog,axi4_avip,8182,23,2024-03-19 08:55:43+00:00,[],
8087,https://github.com/muneeb-mbytes/pulpino__spi_master__ip_verification.git,2022-01-22 07:06:47+00:00,To verify the SPI Master IP using the APB and SPI AVIPs,7,muneeb-mbytes/pulpino__spi_master__ip_verification,450743816,SystemVerilog,pulpino__spi_master__ip_verification,479,17,2024-01-17 15:04:33+00:00,[],
8088,https://github.com/CompuSAR/sar6502.git,2022-02-23 13:50:45+00:00,6502 FPGA implementation,1,CompuSAR/sar6502,462754657,SystemVerilog,sar6502,817,16,2024-02-07 18:43:34+00:00,[],
8089,https://github.com/pulp-platform/clic.git,2022-01-29 16:11:53+00:00,RISC-V fast interrupt controller,3,pulp-platform/clic,453448013,SystemVerilog,clic,231,15,2024-02-20 17:02:30+00:00,"['risc-v', 'clic', 'interrupt']",https://api.github.com/licenses/apache-2.0
8090,https://github.com/eisl-nctu/falco.git,2022-01-05 08:07:18+00:00,A 32-bit out-of-order RISC-V superscalar for Xilinx FPGAs.,2,eisl-nctu/falco,444717228,SystemVerilog,falco,624,12,2023-12-29 18:08:10+00:00,[],https://api.github.com/licenses/bsd-3-clause
8091,https://github.com/openhwgroup/core-v-mcu-uvm.git,2022-02-09 22:26:48+00:00,CORE-V MCU UVM Environment and Test Bench,6,openhwgroup/core-v-mcu-uvm,457548978,SystemVerilog,core-v-mcu-uvm,9928,12,2023-11-16 01:06:05+00:00,[],
8092,https://github.com/muhammedkocaoglu/SystemVerilog-Tutorials.git,2022-02-01 19:56:58+00:00,SystemVerilog derslerinde yazdığım kodları içermektedir.,1,muhammedkocaoglu/SystemVerilog-Tutorials,454531155,SystemVerilog,SystemVerilog-Tutorials,19676,11,2024-01-18 15:32:00+00:00,[],
8093,https://github.com/semify-eda/waveform-generator.git,2022-02-16 16:27:12+00:00,Waveform Generator,0,semify-eda/waveform-generator,460085188,SystemVerilog,waveform-generator,5189,10,2023-06-12 07:44:49+00:00,[],https://api.github.com/licenses/apache-2.0
8094,https://github.com/ecilasun/e32e.git,2022-02-27 02:59:24+00:00,Latest in the line of the E32 processors with better/generic cache placement,2,ecilasun/e32e,464022439,SystemVerilog,e32e,183558,10,2024-03-04 05:47:30+00:00,[],
8095,https://github.com/Ashwin-Rajesh/RiSC-16.git,2022-01-06 08:30:41+00:00,"RiSC 16 is a simple 16 bit instruction set with 8 instructions and 3 instruction formats. This is an RTL implementation in verilog, instruction set simulator and a random instruction generator in system verilog and a rudimetary assembler in python",1,Ashwin-Rajesh/RiSC-16,445096580,SystemVerilog,RiSC-16,868,9,2024-01-16 16:27:21+00:00,"['verilog', 'fpga', 'computer-architecture']",https://api.github.com/licenses/mit
8096,https://github.com/ucsbieee/mapache64.git,2022-01-10 06:28:43+00:00,Custom 6502 Video Game Console,1,ucsbieee/mapache64,446305577,SystemVerilog,mapache64,13343,9,2024-01-19 03:10:47+00:00,"['fpga', 'verilog', 'cmod-a7', 'fusesoc', 'ben-eater-6502', '65c02', 'cc65']",https://api.github.com/licenses/mit
8097,https://github.com/kang-0909/mips-cpu.git,2022-02-23 07:37:03+00:00,MIPS CPU in verilog,1,kang-0909/mips-cpu,462629168,SystemVerilog,mips-cpu,16,8,2023-01-10 07:31:10+00:00,"['verilog', 'mips', 'risc', 'mips32cpu', 'systemverilog']",https://api.github.com/licenses/mit
8098,https://github.com/GregAC/ibex_super_system.git,2022-03-03 17:16:37+00:00,"Ibex Super System is DEPRECATED, and has become the Ibex Demo System: https://github.com/lowRISC/ibex-demo-system which is maintained by lowRISC.",8,GregAC/ibex_super_system,465815319,SystemVerilog,ibex_super_system,2238,8,2023-03-22 04:24:09+00:00,[],https://api.github.com/licenses/apache-2.0
8099,https://github.com/pulp-platform/fpu_ss.git,2022-02-27 13:48:06+00:00,CORE-V eXtension Interface compliant RISC-V [F|Zfinx] Coprocessor,6,pulp-platform/fpu_ss,464149264,SystemVerilog,fpu_ss,85,8,2023-10-04 12:33:53+00:00,[],
8100,https://github.com/andmiele/uCodedRiscV.git,2022-01-02 05:28:08+00:00,A simple micro-coded (micro-programmed control unit) multi-cycle 32-bit RISC-V CPU written in System Verilog,1,andmiele/uCodedRiscV,443689020,SystemVerilog,uCodedRiscV,133,7,2023-09-02 15:27:34+00:00,[],https://api.github.com/licenses/apache-2.0
8101,https://github.com/krz-max/Digital-Circuits-and-Systems.git,2022-03-01 15:36:00+00:00,[NYCU 2021 Spring] Digital Circuits and Systems,0,krz-max/Digital-Circuits-and-Systems,464952288,SystemVerilog,Digital-Circuits-and-Systems,10971,7,2024-04-02 08:06:21+00:00,"['digitalcircuit', 'nycu-course', 'systemverilog']",
8102,https://github.com/esnet/esnet-fpga-library.git,2022-03-04 17:46:13+00:00,ESnet general-purpose FPGA design library.,1,esnet/esnet-fpga-library,466218285,SystemVerilog,esnet-fpga-library,1348,7,2024-03-15 02:27:48+00:00,['high-touch'],
8103,https://github.com/AI-Vector-Accelerator/x-ava-core.git,2022-01-03 22:49:05+00:00,,4,AI-Vector-Accelerator/x-ava-core,444220680,SystemVerilog,x-ava-core,131,6,2023-09-20 02:15:52+00:00,[],
8104,https://github.com/Grieverheart/pokemon_mini.git,2021-12-30 09:34:45+00:00,Attempt to implement Pokemon Mini in Verilog,0,Grieverheart/pokemon_mini,443029373,SystemVerilog,pokemon_mini,3088,6,2022-10-12 01:12:32+00:00,[],https://api.github.com/licenses/gpl-2.0
8105,https://github.com/pulp-platform/axi-io-pmp.git,2022-01-11 12:38:41+00:00,Input / Output Physical Memory Protection Unit for RISC-V,2,pulp-platform/axi-io-pmp,446815678,SystemVerilog,axi-io-pmp,31,6,2024-01-29 05:41:21+00:00,[],
8106,https://github.com/erickahmed/iceberg.git,2022-02-14 23:07:32+00:00,Iceberg is a virtual FPGA computer built from scratch using Systemverilog,2,erickahmed/iceberg,459354970,SystemVerilog,iceberg,87,5,2023-06-19 08:21:24+00:00,"['cpu', 'verilog', 'logic-gates', 'assembly', 'fpga']",https://api.github.com/licenses/gpl-3.0
8107,https://github.com/sifferman/fpga_screensaver.git,2022-01-31 17:51:50+00:00,This project implements the VGA protocol and allows custom images to be displayed to the screen using the Sipeed Tang Nano FPGA dev board.,1,sifferman/fpga_screensaver,454110719,SystemVerilog,fpga_screensaver,67,5,2024-03-15 22:20:48+00:00,"['fpga', 'fusesoc']",https://api.github.com/licenses/unlicense
8108,https://github.com/muneeb-mbytes/pulpino__spi_master__subsystem_verification.git,2022-03-01 08:39:02+00:00,Verification of pulpino subsystem consisting of AXI input interface and SPI as output interface,3,muneeb-mbytes/pulpino__spi_master__subsystem_verification,464810093,SystemVerilog,pulpino__spi_master__subsystem_verification,3216,5,2023-05-23 04:08:17+00:00,[],
8109,https://github.com/hejy47/HDLParser.git,2022-01-10 13:16:10+00:00,,2,hejy47/HDLParser,446430434,SystemVerilog,HDLParser,62894,5,2024-01-09 08:38:27+00:00,[],
8110,https://github.com/skudlur/cayde.git,2022-02-23 14:55:36+00:00,cayde is 32-bit RISC-V core written in SystemVerilog,2,skudlur/cayde,462780602,SystemVerilog,cayde,43,5,2023-08-25 01:43:21+00:00,[],https://api.github.com/licenses/mit
8111,https://github.com/robfinch/Float.git,2022-02-22 02:48:50+00:00,Floating point code in System Verilog,2,robfinch/Float,462112672,SystemVerilog,Float,12687,5,2023-12-20 12:38:22+00:00,[],
8112,https://github.com/YosysHQ/scy.git,2022-02-26 12:22:23+00:00,Sequence of Covers with Yosys,1,YosysHQ/scy,463845228,SystemVerilog,scy,2206,5,2024-03-29 02:51:10+00:00,[],
8113,https://github.com/guanrenyang/Tiny-TPU.git,2022-02-22 05:58:25+00:00,,0,guanrenyang/Tiny-TPU,462159361,SystemVerilog,Tiny-TPU,7858,5,2024-04-02 16:59:56+00:00,[],https://api.github.com/licenses/mit
8114,https://github.com/shivanandgsr/AHB-Lite_verification-UVM.git,2022-01-04 22:26:00+00:00,,0,shivanandgsr/AHB-Lite_verification-UVM,444581435,SystemVerilog,AHB-Lite_verification-UVM,8399,5,2024-01-23 12:05:26+00:00,[],
8115,https://github.com/shin-yamashita/5th-AI-Edge-Contest.git,2022-03-03 12:47:14+00:00,RTL implementation of TFlite FPGA accelerator and RISC-V controller.,0,shin-yamashita/5th-AI-Edge-Contest,465715744,SystemVerilog,5th-AI-Edge-Contest,185373,4,2022-10-04 04:08:00+00:00,"['tflite', 'tflite-delegate', 'risc-v', 'systemverilog']",https://api.github.com/licenses/apache-2.0
8116,https://github.com/NoBizz/Coffie-Machine.git,2022-01-16 10:57:15+00:00,,0,NoBizz/Coffie-Machine,448527453,SystemVerilog,Coffie-Machine,5114,4,2024-01-20 00:59:26+00:00,[],
8117,https://github.com/dharmilshah99/NuttyNios-Hardware.git,2022-02-18 15:51:05+00:00,,0,dharmilshah99/NuttyNios-Hardware,460912741,SystemVerilog,NuttyNios-Hardware,7141,4,2022-10-17 13:30:22+00:00,[],
8118,https://github.com/ZZJ34/sv_final_project.git,2022-01-15 13:56:37+00:00,systemverilog课程大作业；对一个APB总线模块进行验证,0,ZZJ34/sv_final_project,448292211,SystemVerilog,sv_final_project,6098,4,2024-01-16 13:04:27+00:00,[],
8119,https://github.com/dineshannayya/fpu.git,2022-01-09 06:43:52+00:00,IEEE 754 floating point unit in Verilog ,1,dineshannayya/fpu,446014390,SystemVerilog,fpu,171,4,2024-04-12 19:08:54+00:00,[],https://api.github.com/licenses/apache-2.0
8120,https://github.com/acmpesuecc/zavala.git,2022-02-13 13:53:15+00:00,AIEP Guideline — Zavala FPGA Miner,4,acmpesuecc/zavala,458823774,SystemVerilog,zavala,16,4,2024-01-14 07:36:17+00:00,['aiep-2022'],https://api.github.com/licenses/mit
8121,https://github.com/GabbedT/UART-Controller.git,2022-02-26 16:56:03+00:00,"UART controller that uses a master-slave architecture to enstablish a communication with the other device during the configuration process. This repository provides RTL code and testbench for the device synthesis and simulation, as well as a simple driver to use it in your system.",0,GabbedT/UART-Controller,463912608,SystemVerilog,UART-Controller,2940,4,2024-02-11 04:41:51+00:00,"['uart', 'systemverilog', 'rtl', 'asic', 'fpga', 'driver']",https://api.github.com/licenses/mit
8122,https://github.com/georgeyhere/fpga-hcsr04.git,2022-02-19 22:37:38+00:00,HCSR04 Ultrasonic Sensor AXI IP + Drivers ,0,georgeyhere/fpga-hcsr04,461330063,SystemVerilog,fpga-hcsr04,3,3,2022-05-31 22:25:56+00:00,[],
8123,https://github.com/merledu/common_peripheral_vips.git,2022-01-11 14:42:03+00:00,,3,merledu/common_peripheral_vips,446859309,SystemVerilog,common_peripheral_vips,896,3,2022-09-30 15:35:00+00:00,[],https://api.github.com/licenses/apache-2.0
8124,https://github.com/techvinodreddy/async_fifo_uvm.git,2022-02-21 09:06:16+00:00,,1,techvinodreddy/async_fifo_uvm,461782047,SystemVerilog,async_fifo_uvm,14,3,2024-03-12 13:49:06+00:00,[],
8125,https://github.com/CyanGuo/Asynchronous-NoC-Based-CNN-Accelerator.git,2022-02-17 08:00:49+00:00, Asynchronous Network-On-Chip Based CNN Accelerator,0,CyanGuo/Asynchronous-NoC-Based-CNN-Accelerator,460336334,SystemVerilog,Asynchronous-NoC-Based-CNN-Accelerator,54,3,2023-06-27 02:52:20+00:00,[],https://api.github.com/licenses/mit
8126,https://github.com/Electronic-and-Computer-Engineering/mic-1-hdl.git,2022-02-17 07:32:34+00:00,A hardware implementation of the MIC-1 processor architecture invented by Andrew S. Tanenbaum.,1,Electronic-and-Computer-Engineering/mic-1-hdl,460327849,SystemVerilog,mic-1-hdl,11843,3,2023-03-09 07:15:10+00:00,"['systemverilog', 'mic-1']",https://api.github.com/licenses/gpl-3.0
8127,https://github.com/ZZJ34/AHB2APB.git,2022-03-02 08:43:27+00:00,AHB转APB的总线桥以及APB总线设计,1,ZZJ34/AHB2APB,465223662,SystemVerilog,AHB2APB,1041,3,2023-11-07 08:10:47+00:00,[],
8128,https://github.com/Open-Source-Hardware-Initiative/hdlbasics.git,2022-01-14 17:51:34+00:00,This repository contains some basic digital logic and hdl knowledge that is useful when beginning to learn HDL.,0,Open-Source-Hardware-Initiative/hdlbasics,448058775,SystemVerilog,hdlbasics,7,3,2022-08-26 05:21:30+00:00,[],
8129,https://github.com/fpgacademy/Tutorials.git,2022-02-26 21:18:47+00:00,,1,fpgacademy/Tutorials,463969066,SystemVerilog,Tutorials,57698,3,2023-12-15 14:52:39+00:00,[],https://api.github.com/licenses/mit
8130,https://github.com/NicolaZomer/SoundWaveDistortionViaFPGA.git,2022-02-19 22:55:43+00:00," Implementation on FPGA of a distortion effect in sound waves called ""Overdrive"" or ""Clipping"" as a final project of the couse Management and Analysis of Physics Dataset (mod.A).",1,NicolaZomer/SoundWaveDistortionViaFPGA,461332986,SystemVerilog,SoundWaveDistortionViaFPGA,32001,3,2023-06-13 13:02:13+00:00,"['clipping', 'audio-effects', 'xilinx-fpga', 'pmod-i2s2', 'pyaudio']",
8131,https://github.com/AuringzaibSabir/uvm_sample.git,2022-01-10 10:40:15+00:00,This repository contains a sample code of the UVM environment. Use this code as a reference for writing a complex UVM framework.,2,AuringzaibSabir/uvm_sample,446380779,SystemVerilog,uvm_sample,35,3,2023-04-01 06:16:51+00:00,[],https://api.github.com/licenses/apache-2.0
8132,https://github.com/ykqiu/ethernet-udp.git,2022-02-23 03:33:48+00:00,Hign-Speed Data Transmission with Gigabits Ethernet in UDP Protocol,1,ykqiu/ethernet-udp,462568193,SystemVerilog,ethernet-udp,86,3,2023-09-11 07:32:47+00:00,[],
8133,https://github.com/nguyenquanicd/AXI4VIP.git,2022-01-02 09:21:35+00:00,AXI4 VIP supports both AXI master and slave.,1,nguyenquanicd/AXI4VIP,443725638,SystemVerilog,AXI4VIP,17934,3,2023-04-16 20:22:07+00:00,[],
8134,https://github.com/cole-maxwell/n_tap_fir_filter_arm.git,2022-01-18 16:11:50+00:00,"Modular design of an N-tap FIR filter on the DE1-SoC’s FPGA; synthesis in Quartus Prime, code in Verilog, VHDL & C. ",0,cole-maxwell/n_tap_fir_filter_arm,449355879,SystemVerilog,n_tap_fir_filter_arm,30029,3,2024-01-26 16:00:33+00:00,[],https://api.github.com/licenses/mit
8135,https://github.com/fhideous/UVM-SimpleCache.git,2022-02-10 14:13:41+00:00,,0,fhideous/UVM-SimpleCache,457807985,SystemVerilog,UVM-SimpleCache,41,2,2024-04-05 08:22:35+00:00,[],
8136,https://github.com/bciip/kmac.git,2022-01-18 10:31:27+00:00,,0,bciip/kmac,449239926,SystemVerilog,kmac,402,2,2023-06-28 06:17:22+00:00,[],
8137,https://github.com/Divyank33/Xilinx-Based-Elevator-Controller.git,2022-01-16 10:55:37+00:00,"Designed an Eight floor Elevator Controller on Xilinx VIVADO using System Verilog, including the design code and the testbench code to implement the controller.",0,Divyank33/Xilinx-Based-Elevator-Controller,448527121,SystemVerilog,Xilinx-Based-Elevator-Controller,30,2,2023-12-27 10:39:34+00:00,[],
8138,https://github.com/ESCA-RISC-V/RISCV_CPU.git,2022-01-14 08:38:32+00:00,,0,ESCA-RISC-V/RISCV_CPU,447897254,SystemVerilog,RISCV_CPU,25541,2,2023-02-01 04:16:02+00:00,[],
8139,https://github.com/ayengec/Bresenham_Line_Algorithm_VGA__BASYS3.git,2022-01-04 20:39:18+00:00,Bresenham's line algorithm is a line drawing algorithm that determines the points of an n-dimensional raster that should be selected in order to form a close approximation to a straight line between two points. It is commonly used to draw line primitives.,0,ayengec/Bresenham_Line_Algorithm_VGA__BASYS3,444556708,SystemVerilog,Bresenham_Line_Algorithm_VGA__BASYS3,4480,2,2023-01-27 08:01:23+00:00,[],https://api.github.com/licenses/gpl-3.0
8140,https://github.com/dpretet/chacha20.git,2021-12-29 19:13:45+00:00,Chacha20 Implementation in SystemVerilog for FPGA and ASIC,0,dpretet/chacha20,442867934,SystemVerilog,chacha20,67,2,2023-09-07 05:42:24+00:00,[],https://api.github.com/licenses/mit
8141,https://github.com/ecilasun/e32c.git,2022-01-28 18:17:11+00:00,Pipelined version of the E32 RISC-V system,2,ecilasun/e32c,453171875,SystemVerilog,e32c,270,2,2023-09-30 05:49:19+00:00,[],
8142,https://github.com/andreevanse/noise-canceller.git,2022-01-12 10:29:29+00:00,,0,andreevanse/noise-canceller,447173532,SystemVerilog,noise-canceller,7120,2,2024-03-08 18:15:32+00:00,[],
8143,https://github.com/Barkhausen-Institut/M3-hardware.git,2022-02-24 15:42:48+00:00,Hardware RTL code for the M³ operating system,1,Barkhausen-Institut/M3-hardware,463204869,SystemVerilog,M3-hardware,12561,2,2024-03-22 15:07:07+00:00,"['fpga', 'hardware', 'rtl', 'verilog']",https://api.github.com/licenses/gpl-3.0
8144,https://github.com/RootCubed/nes-fpga.git,2022-02-21 18:41:22+00:00,A NES on an FPGA,0,RootCubed/nes-fpga,461988268,SystemVerilog,nes-fpga,47,2,2023-02-21 14:46:31+00:00,[],
8145,https://github.com/Ziboooo/picoMIPS-for-affine-transformation.git,2022-02-05 15:00:45+00:00,try to built a simple cpu ,0,Ziboooo/picoMIPS-for-affine-transformation,455900163,SystemVerilog,picoMIPS-for-affine-transformation,1150,2,2024-02-27 04:01:08+00:00,[],
8146,https://github.com/dineshannayya/ycr1c.git,2022-01-20 03:44:30+00:00,YIFIVE 32 Bit Single Core Risc V core with icache and dcache,0,dineshannayya/ycr1c,449944555,SystemVerilog,ycr1c,686,2,2023-03-08 04:55:18+00:00,"['riscv32', 'cache']",https://api.github.com/licenses/apache-2.0
8147,https://github.com/steanmeemr/RoundRobin-4bitGrant.git,2022-01-21 05:48:39+00:00,System verilog code for Round-Robin arbiter ,0,steanmeemr/RoundRobin-4bitGrant,450369727,SystemVerilog,RoundRobin-4bitGrant,7986,2,2023-06-20 03:13:24+00:00,[],
8148,https://github.com/z4fang/Processor-FASA.git,2022-02-16 05:20:39+00:00,,0,z4fang/Processor-FASA,459862993,SystemVerilog,Processor-FASA,540,2,2022-05-10 16:57:43+00:00,[],
8149,https://github.com/kang-0909/digital-clock.git,2022-02-23 08:12:32+00:00,A digital clock in verilog,0,kang-0909/digital-clock,462640232,SystemVerilog,digital-clock,5,2,2022-06-23 02:41:58+00:00,"['verilog', 'systemverilog']",https://api.github.com/licenses/mit
8150,https://github.com/dineshannayya/ycr1cr.git,2022-02-15 10:09:54+00:00,,0,dineshannayya/ycr1cr,459524485,SystemVerilog,ycr1cr,998,2,2024-03-06 08:18:52+00:00,[],https://api.github.com/licenses/apache-2.0
8151,https://github.com/JANAKIRAMEMANI/FIFO_SV.git,2022-01-27 12:15:45+00:00,FIFO SV TESTBENCH,0,JANAKIRAMEMANI/FIFO_SV,452669998,SystemVerilog,FIFO_SV,14,2,2023-06-21 03:57:31+00:00,[],
8152,https://github.com/DigitalRabbit85/SvLibDR.git,2022-02-21 10:27:42+00:00,SystemVerilog Library from Digital Rabbit,1,DigitalRabbit85/SvLibDR,461810326,SystemVerilog,SvLibDR,213,2,2022-06-18 22:28:22+00:00,[],
8153,https://github.com/aniketb005/rtl-implementation-1x3-router.git,2021-12-30 21:29:59+00:00,verilog design,0,aniketb005/rtl-implementation-1x3-router,443188630,SystemVerilog,rtl-implementation-1x3-router,88,2,2022-05-31 02:21:59+00:00,[],
8154,https://github.com/LispEngineer/systemverilog-hdmi.git,2022-02-20 20:33:00+00:00,Implement HDMI output using only SystemVerilog and an Analog Devices ADV7513,0,LispEngineer/systemverilog-hdmi,461609125,SystemVerilog,systemverilog-hdmi,64,2,2024-01-09 00:27:50+00:00,"['systemverilog', 'hdmi', 'fpga', 'cyclone-v', 'terasic', 'terasic-c5g', 'rtl', 'verilog', 'hdl']",
8155,https://github.com/AlSaqr-platform/riscv_nn.git,2022-01-25 10:09:15+00:00,,1,AlSaqr-platform/riscv_nn,451826381,SystemVerilog,riscv_nn,1154,2,2024-03-31 14:13:41+00:00,[],
8156,https://github.com/lild4d4/uart_get_32bit_word.git,2022-01-31 19:14:54+00:00,Get an 32 bit word for a determined 32 bit adress,0,lild4d4/uart_get_32bit_word,454137444,SystemVerilog,uart_get_32bit_word,20,2,2022-03-16 00:29:43+00:00,[],
8157,https://github.com/AuringzaibSabir/timer_verification_ip.git,2022-02-07 08:07:10+00:00,"This repository contains a Verification IP for the timer. This VIP tests the timer by applying constrained random stimulus. Sequences of transactions reset, configure the timer, and perform read & write operations on the respective registers of the timer.",1,AuringzaibSabir/timer_verification_ip,456411944,SystemVerilog,timer_verification_ip,160,2,2022-04-06 03:31:06+00:00,[],https://api.github.com/licenses/apache-2.0
8158,https://github.com/joseljim/MIPS.git,2022-02-07 21:16:06+00:00,MIPS with Interlocked Pipeline Stage developed in SystemVerilog and tested on Modelsim. ,1,joseljim/MIPS,456679768,SystemVerilog,MIPS,126,1,2022-10-17 02:55:50+00:00,[],https://api.github.com/licenses/mit
8159,https://github.com/bciip/clkmgr.git,2022-01-18 10:32:57+00:00,,0,bciip/clkmgr,449240494,SystemVerilog,clkmgr,181,1,2022-09-27 03:11:45+00:00,[],
8160,https://github.com/pierregobin/my_ibex.git,2022-01-30 19:22:51+00:00,,0,pierregobin/my_ibex,453778617,SystemVerilog,my_ibex,9963,1,2022-06-08 13:35:41+00:00,[],https://api.github.com/licenses/apache-2.0
8161,https://github.com/charkster/tang_nano-scarf_pat_gen_edge_counter.git,2022-01-22 21:38:27+00:00,"FPGA design for Tang Nano board. SCARF SPI slave with block ram slave, pattern generator slave and two edge counter slaves.",1,charkster/tang_nano-scarf_pat_gen_edge_counter,450941883,SystemVerilog,tang_nano-scarf_pat_gen_edge_counter,164,1,2023-10-30 19:46:59+00:00,"['fpga', 'tang-nano', 'pattern-generator', 'pulse-detection']",https://api.github.com/licenses/mit
8162,https://github.com/0xbadcoffe/fpga-miner.git,2022-01-06 12:21:48+00:00,Reference miner for FPGA,5,0xbadcoffe/fpga-miner,445160128,,fpga-miner,606,1,2022-04-16 19:14:22+00:00,[],https://api.github.com/licenses/lgpl-3.0
8163,https://github.com/Saitharunjami/EDA_Playground-codes.git,2022-02-21 03:32:32+00:00,,0,Saitharunjami/EDA_Playground-codes,461692454,SystemVerilog,EDA_Playground-codes,75,1,2022-03-19 04:25:42+00:00,[],
8164,https://github.com/dpavlin/trilby-hat-fpga.git,2021-12-28 16:31:10+00:00,Trilby HAT ECP5 FPGA SDR for Raspberry Pi with open source tools,1,dpavlin/trilby-hat-fpga,442521270,SystemVerilog,trilby-hat-fpga,1667,1,2022-01-06 12:26:43+00:00,"['fpga', 'sdr', 'raspberry-pi']",
8165,https://github.com/ecilasun/e32b.git,2022-01-05 22:38:18+00:00,Port of E32 to Digilent Nexsys Video board with additional features,0,ecilasun/e32b,444969784,SystemVerilog,e32b,887,1,2022-01-11 03:35:51+00:00,[],
8166,https://github.com/LongStudy/RI5CY_workshop.git,2022-01-18 06:01:54+00:00,Workshop for Customising a RISC-V Core (v1.1) Originally presented at OSHCamp 2019,1,LongStudy/RI5CY_workshop,449160376,SystemVerilog,RI5CY_workshop,2125,1,2023-03-06 11:25:35+00:00,[],
8167,https://github.com/RehanEjaz/Pwm-FPGA-motor-speed-ctrl.git,2022-01-24 16:47:42+00:00,Speed controller for DC motor to implement on FPGA,0,RehanEjaz/Pwm-FPGA-motor-speed-ctrl,451549623,SystemVerilog,Pwm-FPGA-motor-speed-ctrl,32840,1,2022-05-01 08:01:55+00:00,[],
8168,https://github.com/KameronJonasson1/verilog-traffic-controller.git,2021-12-30 00:01:33+00:00,Verilog design for intersection traffic controller with walk lights and single left turn light,0,KameronJonasson1/verilog-traffic-controller,442920231,SystemVerilog,verilog-traffic-controller,1729,1,2021-12-30 18:03:34+00:00,[],
8169,https://github.com/nadavzach/Erasure-coding-accelerator.git,2021-12-28 17:33:26+00:00,"Erasure coding ASIC accelerator, implemented in system verilog.",2,nadavzach/Erasure-coding-accelerator,442537443,SystemVerilog,Erasure-coding-accelerator,1361,1,2022-06-22 20:21:09+00:00,[],
8170,https://github.com/mdodovic/VLSI-Verification.git,2022-02-07 19:55:57+00:00,Verification of Design Under the Testing,0,mdodovic/VLSI-Verification,456655908,SystemVerilog,VLSI-Verification,228,1,2022-06-29 11:53:23+00:00,"['verification', 'system-verilog', 'verilog']",
8171,https://github.com/AnastasiaMCunningham/SV-UVM-Sandbox.git,2022-02-19 13:45:03+00:00,A space for developing test projects to get familiar with the SystemVerilog syntax and Universal Verification Method,0,AnastasiaMCunningham/SV-UVM-Sandbox,461204173,SystemVerilog,SV-UVM-Sandbox,32,1,2022-02-21 02:10:37+00:00,[],https://api.github.com/licenses/gpl-3.0
8172,https://github.com/redchenjs/hdl_utils.git,2022-02-08 14:09:27+00:00,HDL Utils,0,redchenjs/hdl_utils,456959445,SystemVerilog,hdl_utils,285,1,2023-09-07 05:42:27+00:00,[],
8173,https://github.com/dineshannayya/cache.git,2022-01-16 11:09:33+00:00,Memory Mapped Cache,0,dineshannayya/cache,448530009,SystemVerilog,cache,129,1,2022-02-16 11:10:34+00:00,[],https://api.github.com/licenses/apache-2.0
8174,https://github.com/Staringlizard/amiv4.git,2022-01-08 22:08:29+00:00,HDMI RGB to HDMI converter,0,Staringlizard/amiv4,445939054,SystemVerilog,amiv4,564,1,2022-01-09 23:32:27+00:00,[],
8175,https://github.com/litex-hub/pythondata-cpu-cv32e41p.git,2022-01-27 17:18:05+00:00,Python module containing system_verilog files for cv32e41p cpu (for use with LiteX).,1,litex-hub/pythondata-cpu-cv32e41p,452775358,SystemVerilog,pythondata-cpu-cv32e41p,5651,1,2022-05-26 16:52:19+00:00,[],https://api.github.com/licenses/apache-2.0
8176,https://github.com/JongSeob/Project-UVM.git,2022-01-13 06:33:56+00:00,,0,JongSeob/Project-UVM,447490219,SystemVerilog,Project-UVM,1523,1,2022-02-08 03:17:16+00:00,[],https://api.github.com/licenses/apache-2.0
8177,https://github.com/davejackenport101/space_invaders.git,2022-01-03 15:05:24+00:00,Implementation of Space Invaders written in System Verilog and C to be implemented onto a DE10-Lite FPGA,0,davejackenport101/space_invaders,444102234,SystemVerilog,space_invaders,9,1,2022-04-26 20:04:15+00:00,[],
8178,https://github.com/KiranaGowda/https-github.com-lowRISC-opentitan.git,2022-02-02 06:11:29+00:00,,0,KiranaGowda/https-github.com-lowRISC-opentitan,454663004,SystemVerilog,https-github.com-lowRISC-opentitan,51308,1,2023-02-06 16:14:54+00:00,[],https://api.github.com/licenses/apache-2.0
8179,https://github.com/syedarafia13/RISCV-CORE-FPGA.git,2022-02-22 07:50:59+00:00,This repository contains RISCV (RV32I) Single Cycle Processor RTL design in SystemVerilog and Testbench in C++ for fpga.,0,syedarafia13/RISCV-CORE-FPGA,462192443,SystemVerilog,RISCV-CORE-FPGA,7403,1,2022-05-02 21:27:56+00:00,[],
8180,https://github.com/avashist003/Generic_syncFIFO.git,2022-02-25 17:09:46+00:00,Generic synchronous FIFO where the depth may or may not be power of 2,0,avashist003/Generic_syncFIFO,463614291,SystemVerilog,Generic_syncFIFO,9,1,2023-12-05 14:21:28+00:00,[],
8181,https://github.com/dineshannayya/ycr1.git,2022-01-10 05:46:05+00:00,Open Source Single RISCV 32 bit core,0,dineshannayya/ycr1,446295547,SystemVerilog,ycr1,270,1,2022-02-16 11:10:36+00:00,[],https://api.github.com/licenses/apache-2.0
8182,https://github.com/davejackenport101/sLC-3.git,2022-01-03 20:39:13+00:00,An implementation of a simple LC-3 processor in System Verilog.,0,davejackenport101/sLC-3,444193356,SystemVerilog,sLC-3,18,1,2022-04-26 20:04:40+00:00,[],
8183,https://github.com/bciip/csrng.git,2022-01-18 10:29:23+00:00,,0,bciip/csrng,449239252,SystemVerilog,csrng,213,1,2023-02-02 12:23:48+00:00,[],
8184,https://github.com/s1yoshid/UART-tx.git,2022-01-31 21:59:13+00:00,,0,s1yoshid/UART-tx,454183761,SystemVerilog,UART-tx,7,1,2022-01-31 22:14:01+00:00,[],
8185,https://github.com/Judit1992/TechnionEeFinalProjectVLSI.git,2022-02-25 17:35:23+00:00,Hardware Implementation of a Real-time Genetic Algorithm for Adaptive Filtering Applications,0,Judit1992/TechnionEeFinalProjectVLSI,463621930,SystemVerilog,TechnionEeFinalProjectVLSI,10588,1,2024-03-13 05:37:25+00:00,[],
8186,https://github.com/sld-columbia/riscv-dift.git,2022-02-07 01:38:11+00:00,,1,sld-columbia/riscv-dift,456322365,SystemVerilog,riscv-dift,2908,1,2022-04-19 22:51:24+00:00,[],
8187,https://github.com/andreevanse/spi-master.git,2022-01-13 10:36:33+00:00,The SPI master partially compatible with the Cyclone V HPS SPI master.,0,andreevanse/spi-master,447559108,SystemVerilog,spi-master,11,1,2023-05-01 14:35:49+00:00,[],
8188,https://github.com/varunsax12/SAR-ADC-Digital.git,2022-02-21 00:22:58+00:00,Digital Components for SAR ADC,0,varunsax12/SAR-ADC-Digital,461653599,SystemVerilog,SAR-ADC-Digital,2,1,2023-03-16 09:08:40+00:00,[],
8189,https://github.com/pranav-nb/APB_BFM.git,2021-12-30 15:51:32+00:00,This is a bus functional model of Advanced Peripheral Bus.,0,pranav-nb/APB_BFM,443119085,SystemVerilog,APB_BFM,6,1,2024-02-11 04:10:34+00:00,"['verilog', 'systemverilog', 'apb', 'arm']",https://api.github.com/licenses/mit
8190,https://github.com/sama18-meet/sifratiot02.git,2022-01-10 19:10:19+00:00,,0,sama18-meet/sifratiot02,446550535,SystemVerilog,sifratiot02,24,1,2022-05-06 14:14:47+00:00,[],
8191,https://github.com/ozlemcali/FB-CPU-SystemVerilog-Testbench.git,2022-01-05 13:07:44+00:00,,0,ozlemcali/FB-CPU-SystemVerilog-Testbench,444807239,SystemVerilog,FB-CPU-SystemVerilog-Testbench,2590,1,2022-01-07 14:59:52+00:00,[],
8192,https://github.com/Alex-Sensin/Neural_Network_Hardware_Implementation.git,2022-02-15 16:51:08+00:00,Project for Digital Integrated Circuit Design. Using a given neural network I had to extract weights and bias. From the weights and bias I created a hardware implementation of the neural network.,0,Alex-Sensin/Neural_Network_Hardware_Implementation,459667727,SystemVerilog,Neural_Network_Hardware_Implementation,2307,1,2022-11-23 03:23:17+00:00,[],
8193,https://github.com/LPF9000/reconfigurable-computing-2.git,2022-02-16 00:58:49+00:00,,1,LPF9000/reconfigurable-computing-2,459803679,SystemVerilog,reconfigurable-computing-2,23697,1,2022-04-26 02:27:01+00:00,[],
8194,https://github.com/AuringzaibSabir/uart_verification_ip.git,2022-02-21 12:11:47+00:00,This verification IP is in progress,0,AuringzaibSabir/uart_verification_ip,461845678,SystemVerilog,uart_verification_ip,26,1,2022-03-02 01:45:29+00:00,[],https://api.github.com/licenses/apache-2.0
8195,https://github.com/mission-deny-the-mission/PIPNP.git,2022-02-22 15:16:54+00:00,Team project to emulate a GameBoy on a Zynq-7000 SoC with a ZedBoard,0,mission-deny-the-mission/PIPNP,462353981,SystemVerilog,PIPNP,13245,1,2022-06-09 05:58:16+00:00,[],
8196,https://github.com/NateFree/memory_model_tb.git,2022-01-09 06:16:18+00:00,UVM TB For Verifying Simple Memory Model,0,NateFree/memory_model_tb,446009709,SystemVerilog,memory_model_tb,10,1,2022-02-16 09:19:47+00:00,[],
8197,https://github.com/tildachoi/memmem.git,2022-01-20 05:48:51+00:00,,0,tildachoi/memmem,449971307,SystemVerilog,memmem,23,1,2022-04-18 12:55:02+00:00,[],
8198,https://github.com/davidlacayo12/davidlacayo12.git,2022-02-01 00:20:17+00:00,Config files for my GitHub profile.,0,davidlacayo12/davidlacayo12,454214180,SystemVerilog,davidlacayo12,31294,1,2023-08-30 15:05:14+00:00,"['config', 'github-config']",
8199,https://github.com/unironically/silver-scope-graphs.git,2022-02-11 01:01:19+00:00,,1,unironically/silver-scope-graphs,457999470,SystemVerilog,silver-scope-graphs,4826,1,2022-07-27 05:20:26+00:00,[],
8200,https://github.com/hbelatikar/gnn-accelerator.git,2022-02-14 18:39:12+00:00,Repo for the GNN accelerator for ECE 755 Project,0,hbelatikar/gnn-accelerator,459282554,SystemVerilog,gnn-accelerator,74526,1,2022-03-13 06:03:56+00:00,[],
8201,https://github.com/avl-bsuir/csa-2022.git,2022-02-14 07:29:56+00:00,,10,avl-bsuir/csa-2022,459058358,SystemVerilog,csa-2022,43816,1,2023-12-18 08:58:14+00:00,[],
8202,https://github.com/Markshilong/THU_ComputerOrganization_CPU.git,2022-01-15 05:06:43+00:00,Coursework of Computer Organization of Tsinghua University,0,Markshilong/THU_ComputerOrganization_CPU,448186344,SystemVerilog,THU_ComputerOrganization_CPU,23,1,2023-09-26 08:15:16+00:00,[],
8203,https://github.com/ninja3011/SPI.git,2022-02-07 18:54:49+00:00,,0,ninja3011/SPI,456636231,SystemVerilog,SPI,7,1,2022-02-10 17:11:34+00:00,[],
8204,https://github.com/usman1515/SystemVerilog-for-Design-and-Verification.git,2022-02-24 18:58:20+00:00,,0,usman1515/SystemVerilog-for-Design-and-Verification,463267555,SystemVerilog,SystemVerilog-for-Design-and-Verification,22,1,2023-03-08 13:31:44+00:00,[],
8205,https://github.com/WasabiFan/my-first-cpu.git,2022-03-01 02:29:02+00:00,"Archive of the first CPU core (and, generally, first significant digital logic design) I built. Published only for historical reference.",0,WasabiFan/my-first-cpu,464716330,SystemVerilog,my-first-cpu,58,1,2022-03-01 04:29:58+00:00,[],
8206,https://github.com/JANAKIRAMEMANI/FIFO_UVM.git,2022-01-31 05:04:47+00:00,,0,JANAKIRAMEMANI/FIFO_UVM,453885473,SystemVerilog,FIFO_UVM,21,1,2022-04-08 15:59:08+00:00,[],
8207,https://github.com/Moorvan/fifoBuffer.git,2022-02-10 02:55:15+00:00,Implementation and verification of two FIFO buffers in Chisel,0,Moorvan/fifoBuffer,457608420,SystemVerilog,fifoBuffer,140,1,2024-01-16 01:57:55+00:00,[],https://api.github.com/licenses/unlicense
8208,https://github.com/imocanu/uvm_4_dv.git,2022-01-01 17:17:38+00:00,UVM library for Design Validation,0,imocanu/uvm_4_dv,443586622,SystemVerilog,uvm_4_dv,5107,1,2024-02-19 14:10:15+00:00,[],https://api.github.com/licenses/apache-2.0
8209,https://github.com/royb998/044252-sim2.git,2022-01-03 09:39:51+00:00,,0,royb998/044252-sim2,444008424,SystemVerilog,044252-sim2,9,0,2022-01-17 09:10:10+00:00,[],
8210,https://github.com/VELIDIPRADEEPKUMAR/PIPELINED_FIR_FILTER.git,2022-01-02 11:31:07+00:00,,0,VELIDIPRADEEPKUMAR/PIPELINED_FIR_FILTER,443749280,SystemVerilog,PIPELINED_FIR_FILTER,140,0,2022-01-14 09:51:20+00:00,[],
8211,https://github.com/free1ze/cpu.git,2021-12-28 13:31:36+00:00,"cpu implements MIPS, with single cycle and Multi-cycle dual bus",0,free1ze/cpu,442472953,SystemVerilog,cpu,10,0,2021-12-28 13:43:24+00:00,[],
8212,https://github.com/cloudcalvin/qSVS.git,2022-01-17 10:01:28+00:00,,0,cloudcalvin/qSVS,448839838,SystemVerilog,qSVS,21,0,2022-01-17 10:01:43+00:00,[],
8213,https://github.com/rjridle/Divider_Radix1.git,2022-01-18 16:21:49+00:00,Implementation of a synthesizable radix-1 integer divider in System Verilog ,0,rjridle/Divider_Radix1,449359443,SystemVerilog,Divider_Radix1,12,0,2022-01-18 16:50:27+00:00,[],https://api.github.com/licenses/mit
8214,https://github.com/justinabate/memory_components.git,2022-01-11 22:23:12+00:00,HDL for memory components,0,justinabate/memory_components,446999624,SystemVerilog,memory_components,14,0,2022-01-12 05:17:36+00:00,[],
8215,https://github.com/Danil1997Dev/Lab34.git,2022-02-10 13:37:43+00:00,,0,Danil1997Dev/Lab34,457794698,SystemVerilog,Lab34,4851,0,2022-02-10 13:40:18+00:00,[],
8216,https://github.com/RehanEjaz/GPIO-on-FPGA.git,2022-02-11 16:58:56+00:00,GPIO peripheral with controller on FPGA and also a tb by which it can also be simulated,0,RehanEjaz/GPIO-on-FPGA,458270582,SystemVerilog,GPIO-on-FPGA,764,0,2022-05-01 08:02:01+00:00,[],
8217,https://github.com/IanTayler/culebra.git,2022-02-23 02:57:04+00:00,Toy CPU for the Basys3 FPGA board,0,IanTayler/culebra,462559001,SystemVerilog,culebra,87,0,2022-03-03 22:23:03+00:00,[],
8218,https://github.com/Basher4/FYP-SimpleNN.git,2022-03-02 12:49:07+00:00,Simple Neural Network on an FPGA,0,Basher4/FYP-SimpleNN,465303429,SystemVerilog,FYP-SimpleNN,6,0,2022-03-02 12:51:27+00:00,[],
8219,https://github.com/bciip/gpio.git,2022-01-18 10:31:12+00:00,,0,bciip/gpio,449239834,SystemVerilog,gpio,159,0,2022-01-18 10:37:01+00:00,[],
8220,https://github.com/suzizecat/Hamster.git,2022-03-04 06:28:53+00:00,Dumb HW solar car driver,0,suzizecat/Hamster,466009118,SystemVerilog,Hamster,1558,0,2022-03-04 06:29:48+00:00,[],
8221,https://github.com/leozlt0112/computer-hardware-lab-works.git,2022-02-13 06:58:46+00:00,,0,leozlt0112/computer-hardware-lab-works,458734908,SystemVerilog,computer-hardware-lab-works,5869,0,2023-10-14 19:19:43+00:00,[],
8222,https://github.com/mmichilot/OTTER-Multicycle-Core.git,2022-02-10 19:47:02+00:00,OTTER is a multicycle RISC-V core developed by Dr. Callenes-Sloan at Cal Poly. This repository contains the OTTER core re-implemented using open-source FPGA tools,0,mmichilot/OTTER-Multicycle-Core,457924557,SystemVerilog,OTTER-Multicycle-Core,13,0,2022-03-25 03:04:18+00:00,[],
8223,https://github.com/davidlu1027/FPGA-voice-recorder.git,2022-02-23 10:36:19+00:00,,0,davidlu1027/FPGA-voice-recorder,462689143,SystemVerilog,FPGA-voice-recorder,2205,0,2022-02-23 10:43:25+00:00,[],
8224,https://github.com/Thombrom/fpga_ethernet.git,2022-01-21 17:26:33+00:00,,0,Thombrom/fpga_ethernet,450580597,SystemVerilog,fpga_ethernet,24,0,2022-01-28 21:40:48+00:00,[],https://api.github.com/licenses/mit
8225,https://github.com/AlperMumcular/CS223.git,2022-01-27 22:17:25+00:00,,0,AlperMumcular/CS223,452863076,SystemVerilog,CS223,5870,0,2022-01-27 22:24:31+00:00,[],
8226,https://github.com/Danil1997Dev/Lab3new_.git,2022-01-28 15:52:12+00:00,,0,Danil1997Dev/Lab3new_,453126360,SystemVerilog,Lab3new_,3821,0,2022-01-28 15:54:34+00:00,[],
8227,https://github.com/p3da/udma_ptp_ts.git,2022-01-18 14:09:39+00:00,pulpissimo udma peripheral for ptp timestamps,0,p3da/udma_ptp_ts,449310046,SystemVerilog,udma_ptp_ts,4,0,2022-01-18 14:09:44+00:00,[],
8228,https://github.com/liel-blum/Task2_numerical.git,2022-01-03 17:39:50+00:00,,0,liel-blum/Task2_numerical,444148325,,Task2_numerical,466,0,2022-01-03 17:39:51+00:00,[],
8229,https://github.com/huynam1802/riscv_pipeline.git,2022-01-04 09:50:55+00:00,,0,huynam1802/riscv_pipeline,444365980,SystemVerilog,riscv_pipeline,7,0,2022-01-04 10:10:52+00:00,[],
8230,https://github.com/Milanotang/SV.git,2022-01-02 03:24:04+00:00,,0,Milanotang/SV,443672545,SystemVerilog,SV,9,0,2022-01-02 05:42:24+00:00,[],
8231,https://github.com/Wder4/DIFO.git,2022-01-31 09:57:24+00:00,LIFO & FIFO,0,Wder4/DIFO,453953208,SystemVerilog,DIFO,1,0,2022-02-02 09:50:33+00:00,[],
8232,https://github.com/Danil1997Dev/Lab3.git,2022-01-07 14:27:58+00:00,,0,Danil1997Dev/Lab3,445548022,SystemVerilog,Lab3,5931,0,2022-01-07 14:31:17+00:00,[],
8233,https://github.com/damlasu/FB-CPU-SystemVerilog-Testbench.git,2022-01-07 10:20:36+00:00,FB-CPU SystemVerilog Testbench,0,damlasu/FB-CPU-SystemVerilog-Testbench,445480758,SystemVerilog,FB-CPU-SystemVerilog-Testbench,7573,0,2022-01-07 10:22:27+00:00,[],
8234,https://github.com/jkk004/bitcoinhashproject.git,2021-12-29 01:19:02+00:00,,0,jkk004/bitcoinhashproject,442625911,SystemVerilog,bitcoinhashproject,11,0,2021-12-29 01:22:08+00:00,[],
8235,https://github.com/taoistmiao/intel_digital_logic_labs.git,2021-12-30 22:05:10+00:00,,0,taoistmiao/intel_digital_logic_labs,443194275,SystemVerilog,intel_digital_logic_labs,10367,0,2021-12-30 22:20:56+00:00,[],
8236,https://github.com/tharinduSamare/RISCV_processor_design.git,2022-02-09 04:20:03+00:00,This is a RISC-V 32I processor which also supports the M extension.,0,tharinduSamare/RISCV_processor_design,457205956,SystemVerilog,RISCV_processor_design,988,0,2023-05-10 17:19:54+00:00,[],
8237,https://github.com/Andrew-LTC/ECE4305Lab2.git,2022-02-08 19:07:20+00:00,,0,Andrew-LTC/ECE4305Lab2,457067834,SystemVerilog,ECE4305Lab2,501,0,2023-01-26 21:07:54+00:00,[],
8238,https://github.com/UniversityOfPlymouth-Electronics/ELEC241-C1-2022.git,2022-02-08 17:21:11+00:00,Coursework Template,8,UniversityOfPlymouth-Electronics/ELEC241-C1-2022,457032220,SystemVerilog,ELEC241-C1-2022,31,0,2022-02-09 10:54:34+00:00,[],
8239,https://github.com/baimengwei/5pS-5Yiw566A5Y6G5LiK55qE56ys5LiA5Liq.git,2022-02-08 13:06:24+00:00,我的,0,baimengwei/5pS-5Yiw566A5Y6G5LiK55qE56ys5LiA5Liq,456936164,SystemVerilog,5pS-5Yiw566A5Y6G5LiK55qE56ys5LiA5Liq,60,0,2022-02-08 13:13:04+00:00,[],
8240,https://github.com/standardloop/dualcore-mips-cpu.git,2022-02-17 23:46:34+00:00,,0,standardloop/dualcore-mips-cpu,460646227,SystemVerilog,dualcore-mips-cpu,693,0,2023-01-27 23:10:45+00:00,[],
8241,https://github.com/AyaNageh1111/PipeLine-Implementation.git,2022-02-15 16:23:51+00:00,,0,AyaNageh1111/PipeLine-Implementation,459657810,SystemVerilog,PipeLine-Implementation,9,0,2022-02-15 16:31:05+00:00,[],
8242,https://github.com/halferty/n64_dev_cart.git,2022-03-03 09:31:40+00:00,,0,halferty/n64_dev_cart,465652331,SystemVerilog,n64_dev_cart,335,0,2022-03-12 23:02:41+00:00,[],
8243,https://github.com/mahmoudabdelhadii/QuadCore-RC4-Decryption.git,2022-02-24 03:36:23+00:00,,0,mahmoudabdelhadii/QuadCore-RC4-Decryption,462996581,SystemVerilog,QuadCore-RC4-Decryption,22475,0,2022-02-24 03:38:06+00:00,[],
8244,https://github.com/Dy-Zhang39/ECE342-Computer-Hardware-Lab.git,2022-02-21 14:05:53+00:00,ECE342 lab,0,Dy-Zhang39/ECE342-Computer-Hardware-Lab,461888026,SystemVerilog,ECE342-Computer-Hardware-Lab,5992,0,2024-03-11 03:30:28+00:00,[],
8245,https://github.com/baohongzhang/System-verilog-syntax-study_minder.git,2021-12-29 02:04:47+00:00,,0,baohongzhang/System-verilog-syntax-study_minder,442634044,SystemVerilog,System-verilog-syntax-study_minder,4,0,2022-01-14 04:25:04+00:00,[],
8246,https://github.com/pabloreyesrobles/ipd432-tarea3.git,2022-01-10 04:00:31+00:00,,0,pabloreyesrobles/ipd432-tarea3,446274710,SystemVerilog,ipd432-tarea3,69,0,2022-01-11 03:08:02+00:00,[],
8247,https://github.com/Tal-Ko/Digital-Systems-Simulation3.git,2022-01-13 20:48:08+00:00,,0,Tal-Ko/Digital-Systems-Simulation3,447747768,SystemVerilog,Digital-Systems-Simulation3,9,0,2022-01-13 20:57:54+00:00,[],
8248,https://github.com/prajwaltr/Major_Project.git,2021-12-29 17:52:47+00:00,,0,prajwaltr/Major_Project,442849630,SystemVerilog,Major_Project,165,0,2022-05-08 06:22:13+00:00,[],
8249,https://github.com/belmontcomputing/rom-ctrl.git,2021-12-28 18:38:27+00:00,,0,belmontcomputing/rom-ctrl,442552893,SystemVerilog,rom-ctrl,119,0,2021-12-29 04:00:50+00:00,[],
8250,https://github.com/fhideous/verification_uing_uvm.git,2022-01-20 13:12:22+00:00,Заметки по прохождению курса,0,fhideous/verification_uing_uvm,450102912,SystemVerilog,verification_uing_uvm,48,0,2022-01-24 09:50:37+00:00,[],
8251,https://github.com/lishangqiu/WS2812BLightFPGA.git,2022-01-13 05:26:32+00:00,This is an upload of a project I did for fun back in winter of 2020. ,0,lishangqiu/WS2812BLightFPGA,447474401,SystemVerilog,WS2812BLightFPGA,64,0,2022-01-13 05:27:01+00:00,[],
8252,https://github.com/bciip/entropy_src.git,2022-01-18 10:33:09+00:00,,0,bciip/entropy_src,449240565,SystemVerilog,entropy_src,157,0,2022-01-18 10:38:54+00:00,[],
8253,https://github.com/bciip/hello_world.git,2022-01-18 10:33:20+00:00,,0,bciip/hello_world,449240631,SystemVerilog,hello_world,4,0,2022-01-18 10:39:05+00:00,[],
8254,https://github.com/IasonC/SystemVerilogCircuitDesign.git,2022-01-24 19:55:57+00:00,Digital Circuit Design with the SystemVerilog Hardware Description Language (HDL). Digital Circuits will then be synthesised on an FPGA.,0,IasonC/SystemVerilogCircuitDesign,451612211,SystemVerilog,SystemVerilogCircuitDesign,24,0,2023-01-27 10:17:45+00:00,"['systemverilog', 'hdl', 'fpga']",
8255,https://github.com/cup0noodles/CPE233.git,2022-01-26 02:30:02+00:00,Cal Poly CPE 233 OTTER MCU - Winter 2022,0,cup0noodles/CPE233,452114808,SystemVerilog,CPE233,300,0,2022-02-11 03:24:38+00:00,[],
8256,https://github.com/jvijaymahesh45/jvijaymahesh45.git,2022-02-08 00:19:55+00:00,Config files for my GitHub profile.,0,jvijaymahesh45/jvijaymahesh45,456724937,SystemVerilog,jvijaymahesh45,8,0,2023-03-30 06:57:00+00:00,"['config', 'github-config']",
8257,https://github.com/ritikaratnu111/system-verilog-examples.git,2022-02-01 01:37:51+00:00,,0,ritikaratnu111/system-verilog-examples,454228807,SystemVerilog,system-verilog-examples,3,0,2022-02-01 01:45:41+00:00,[],
8258,https://github.com/XoTaBuCh/ACS.git,2022-02-24 15:51:40+00:00,,0,XoTaBuCh/ACS,463207821,SystemVerilog,ACS,43881,0,2023-03-31 21:37:31+00:00,[],
8259,https://github.com/RialonV/Tools.git,2022-02-23 16:16:31+00:00,Different customizable tools to speed up FPGA development,0,RialonV/Tools,462812462,SystemVerilog,Tools,3,0,2022-02-23 17:43:57+00:00,[],
8260,https://github.com/jayhusemi/Cores-SweRV.git,2022-03-04 01:31:25+00:00,,0,jayhusemi/Cores-SweRV,465941977,SystemVerilog,Cores-SweRV,16123,0,2022-03-04 01:31:52+00:00,[],https://api.github.com/licenses/apache-2.0
8261,https://github.com/wliu0219/UVM_FSM.git,2022-02-11 14:45:24+00:00,,0,wliu0219/UVM_FSM,458225218,SystemVerilog,UVM_FSM,6,0,2022-02-11 15:27:01+00:00,[],
8262,https://github.com/nickmaster2222/IPImport.git,2022-02-15 14:00:52+00:00,The HDL IP I've made that I regularly import,0,nickmaster2222/IPImport,459602759,SystemVerilog,IPImport,50,0,2022-02-16 22:00:03+00:00,[],
8263,https://github.com/sumedhkr95/16-bit-FIR-filter-in-SystemVerilog.git,2022-02-13 19:25:19+00:00,,0,sumedhkr95/16-bit-FIR-filter-in-SystemVerilog,458908960,SystemVerilog,16-bit-FIR-filter-in-SystemVerilog,6,0,2022-02-13 19:37:02+00:00,[],https://api.github.com/licenses/mit
8264,https://github.com/Phzera/desafio_embarcados.git,2022-02-13 20:58:56+00:00,"""Projetos para começar com HDL"" propostos no Portal Embarcados ",0,Phzera/desafio_embarcados,458930142,SystemVerilog,desafio_embarcados,2216,0,2022-07-27 02:58:42+00:00,[],
8265,https://github.com/nwkrix/UVM-TLM.git,2022-01-15 03:26:24+00:00,,0,nwkrix/UVM-TLM,448170853,SystemVerilog,UVM-TLM,5,0,2022-01-15 03:27:50+00:00,[],
8266,https://github.com/ZotievaDE/prg_cdc_learning.git,2022-01-15 17:03:06+00:00,,0,ZotievaDE/prg_cdc_learning,448339403,SystemVerilog,prg_cdc_learning,3,0,2022-01-16 19:23:57+00:00,[],
8267,https://github.com/VELIDIPRADEEPKUMAR/VGA.git,2022-01-14 09:33:27+00:00,This is a vga controller acessing data from a SRAM,0,VELIDIPRADEEPKUMAR/VGA,447912972,SystemVerilog,VGA,1,0,2022-01-14 09:38:42+00:00,[],
8268,https://github.com/bciip/sysrst_ctrl.git,2022-01-18 10:32:31+00:00,,0,bciip/sysrst_ctrl,449240345,SystemVerilog,sysrst_ctrl,51,0,2022-01-18 10:38:16+00:00,[],
8269,https://github.com/timChase98/ECE6502.git,2022-01-22 16:02:54+00:00,,0,timChase98/ECE6502,450865376,SystemVerilog,ECE6502,339,0,2022-01-23 15:29:18+00:00,[],
8270,https://github.com/alxcode-x/aFIFO_UVM.git,2022-01-09 18:48:16+00:00,,0,alxcode-x/aFIFO_UVM,446174841,SystemVerilog,aFIFO_UVM,9,0,2022-01-09 22:49:08+00:00,[],
8271,https://github.com/Andreu-Lechuga/SystemVerilog-HDL.git,2022-01-01 23:27:56+00:00,AOC Tarea 4 - Ramo Aquitectura y Organizacion de Computadores,0,Andreu-Lechuga/SystemVerilog-HDL,443643466,SystemVerilog,SystemVerilog-HDL,533,0,2022-01-01 23:30:49+00:00,[],
8272,https://github.com/ashaki345/16_Bit_CPU_SV.git,2022-02-27 00:50:57+00:00,System Verilog 16-Bit CPU ,0,ashaki345/16_Bit_CPU_SV,464003277,SystemVerilog,16_Bit_CPU_SV,164,0,2022-02-27 00:56:24+00:00,[],
8273,https://github.com/alena532/AVS.git,2022-02-27 12:46:32+00:00,,0,alena532/AVS,464134419,SystemVerilog,AVS,59128,0,2022-06-19 21:09:31+00:00,[],
8274,https://github.com/Patrickshiny/systemVerilogFiles.git,2022-01-30 06:30:57+00:00,,0,Patrickshiny/systemVerilogFiles,453605868,SystemVerilog,systemVerilogFiles,108,0,2022-01-30 15:07:06+00:00,[],
8275,https://github.com/duongnghiephuy/processor1.git,2022-02-05 08:38:09+00:00,First processor in SystemVerilog,0,duongnghiephuy/processor1,455817605,SystemVerilog,processor1,35,0,2022-02-05 09:01:40+00:00,[],
8276,https://github.com/noahbean33/ECE_271_Final_Project.git,2022-02-10 00:40:26+00:00,,0,noahbean33/ECE_271_Final_Project,457577697,SystemVerilog,ECE_271_Final_Project,22610,0,2023-07-28 04:13:53+00:00,[],
8277,https://github.com/Andrew-LTC/ECE4305Lab4.git,2022-02-20 01:56:59+00:00,,0,Andrew-LTC/ECE4305Lab4,461359783,SystemVerilog,ECE4305Lab4,912,0,2023-01-26 21:09:03+00:00,[],
8278,https://github.com/sam2468sam/VLSI.git,2022-02-14 04:14:38+00:00,,0,sam2468sam/VLSI,459012418,SystemVerilog,VLSI,1814,0,2022-02-14 04:28:03+00:00,[],
8279,https://github.com/CarlosChen1126/NTUEE_DCLAB.git,2022-02-22 06:10:12+00:00,,0,CarlosChen1126/NTUEE_DCLAB,462162741,SystemVerilog,NTUEE_DCLAB,26,0,2022-03-22 02:16:19+00:00,[],
8280,https://github.com/mahdi-moradmand/Logic.git,2022-02-23 18:26:54+00:00,,0,mahdi-moradmand/Logic,462858071,SystemVerilog,Logic,690,0,2022-02-23 18:27:12+00:00,[],https://api.github.com/licenses/apache-2.0
8281,https://github.com/skudlur/sysverilog.git,2022-02-23 14:49:24+00:00,Just a compilation of all the SystemVerilog code I have written in the past year.,0,skudlur/sysverilog,462778079,SystemVerilog,sysverilog,13,0,2022-02-23 14:50:40+00:00,[],
8282,https://github.com/phamquanganhBKSET/edabk_uart_transceiver.git,2022-02-23 16:30:48+00:00,UART transceiver,0,phamquanganhBKSET/edabk_uart_transceiver,462817751,SystemVerilog,edabk_uart_transceiver,475,0,2022-08-15 07:41:18+00:00,[],
8283,https://github.com/kenezoer/soc_programming.git,2022-02-03 08:03:03+00:00,"Lab. course ""Development of a SoC with programming architecture""",0,kenezoer/soc_programming,455077588,SystemVerilog,soc_programming,28853,0,2023-09-14 14:18:38+00:00,[],https://api.github.com/licenses/mit
8284,https://github.com/alihusain01/lab5-week2-ECE385.git,2022-02-25 03:02:57+00:00,,0,alihusain01/lab5-week2-ECE385,463377973,SystemVerilog,lab5-week2-ECE385,11862,0,2022-02-25 04:59:55+00:00,[],
8285,https://github.com/swisstackle/alucontrol.git,2022-01-04 09:24:36+00:00,"Implements instruction split, opcode and alucontrol codes generation.",0,swisstackle/alucontrol,444358234,SystemVerilog,alucontrol,6,0,2023-03-12 21:45:01+00:00,"['systemverilog', 'vhdl', 'mips', 'architecture', 'cpu']",https://api.github.com/licenses/unlicense
8286,https://github.com/gsingla21/systemverilog.git,2022-01-23 05:10:14+00:00,,0,gsingla21/systemverilog,451010084,SystemVerilog,systemverilog,22,0,2022-01-23 07:25:41+00:00,[],
8287,https://github.com/bciip/prim_generic.git,2022-01-20 11:57:49+00:00,,0,bciip/prim_generic,450078538,SystemVerilog,prim_generic,22,0,2022-01-20 12:00:49+00:00,[],
8288,https://github.com/itayt23/Sifratiyot_3.git,2022-01-19 21:00:10+00:00,simulation 3 in DIgital and computer structures,0,itayt23/Sifratiyot_3,449853703,SystemVerilog,Sifratiyot_3,6,0,2022-01-19 21:01:53+00:00,[],
8289,https://github.com/Amagicman/uvm_verify_exercise.git,2022-01-17 15:44:08+00:00,Function verification of interrupt managment module using UVM method.,0,Amagicman/uvm_verify_exercise,448953475,,uvm_verify_exercise,86,0,2021-07-25 00:54:11+00:00,[],https://api.github.com/licenses/apache-2.0
8290,https://github.com/bciip/pwrmgr.git,2022-01-18 10:33:47+00:00,,0,bciip/pwrmgr,449240767,SystemVerilog,pwrmgr,93,0,2022-01-18 10:39:30+00:00,[],
8291,https://github.com/bciip/tlul.git,2022-01-18 10:34:11+00:00,,0,bciip/tlul,449240904,SystemVerilog,tlul,142,0,2022-01-18 10:39:58+00:00,[],
8292,https://github.com/bciip/rv_core_ibex.git,2022-01-18 10:41:59+00:00,,0,bciip/rv_core_ibex,449243271,SystemVerilog,rv_core_ibex,17,0,2022-01-18 10:42:34+00:00,[],
8293,https://github.com/lconti9/Snake.git,2022-02-01 04:56:00+00:00,Snake Game made in Xilinx for Basys 3 Board,0,lconti9/Snake,454266294,SystemVerilog,Snake,10438,0,2022-02-01 04:56:58+00:00,[],
8294,https://github.com/allab17/ece212_labell_borek.git,2022-02-14 02:34:06+00:00,This repo consists of ECE 212 labs.,0,allab17/ece212_labell_borek,458991394,SystemVerilog,ece212_labell_borek,2835,0,2022-04-06 22:02:24+00:00,[],
8295,https://github.com/Willian-Nunes/Async-RISCV.git,2022-01-31 17:05:16+00:00,,1,Willian-Nunes/Async-RISCV,454095314,SystemVerilog,Async-RISCV,45,0,2022-01-31 17:23:19+00:00,[],
8296,https://github.com/feiyuy/Chip_Verify.git,2022-02-09 05:32:57+00:00,,0,feiyuy/Chip_Verify,457222345,SystemVerilog,Chip_Verify,10,0,2022-02-09 07:16:49+00:00,[],
8297,https://github.com/ThunderChief33/remote_control_car_project.git,2022-02-15 00:47:31+00:00,,0,ThunderChief33/remote_control_car_project,459376356,SystemVerilog,remote_control_car_project,22611,0,2022-02-15 00:51:39+00:00,[],
8298,https://github.com/Ninjacreepiamus/Interview-Questions.git,2022-02-15 03:34:26+00:00,Practice for technical interview questions that may be asked on an interview for Firmware Engineering roles.,0,Ninjacreepiamus/Interview-Questions,459414782,SystemVerilog,Interview-Questions,23,0,2022-02-15 03:40:16+00:00,[],
8299,https://github.com/TimothyJC7/FPGA-Projects.git,2022-02-22 05:00:19+00:00,My FPGA Projects written in verilog/system verilog,0,TimothyJC7/FPGA-Projects,462145012,SystemVerilog,FPGA-Projects,3739,0,2022-02-22 05:19:49+00:00,[],
8300,https://github.com/map32/ece251-final.git,2022-03-03 19:53:15+00:00,,0,map32/ece251-final,465864276,SystemVerilog,ece251-final,32,0,2022-04-24 21:41:08+00:00,[],
8301,https://github.com/belmontcomputing/uart.git,2021-12-29 06:00:37+00:00,,0,belmontcomputing/uart,442675626,SystemVerilog,uart,158,0,2021-12-29 06:02:21+00:00,[],
8302,https://github.com/aryatyagi14/FPGA-Multiplier.git,2022-02-18 23:40:12+00:00,I created an 8 bit multiplier on Quartus using SystemVerilog. The output is displayed in HEX on the LEDs of the FPGA. ,0,aryatyagi14/FPGA-Multiplier,461038235,SystemVerilog,FPGA-Multiplier,4,0,2022-02-18 23:42:42+00:00,[],
8303,https://github.com/kosmalex/OLED_controller.git,2022-02-17 12:34:35+00:00,Write compile and run psudo instructions to draw with pmodOLED,0,kosmalex/OLED_controller,460428192,SystemVerilog,OLED_controller,79,0,2022-02-17 12:34:41+00:00,[],https://api.github.com/licenses/apache-2.0
8304,https://github.com/c3bo/uvm_quick_tips.git,2022-01-11 02:38:49+00:00,,0,c3bo/uvm_quick_tips,446653560,SystemVerilog,uvm_quick_tips,0,0,2022-01-11 03:51:13+00:00,[],
8305,https://github.com/mmalinowsky/risc-v.git,2022-01-04 21:08:25+00:00,Opensource RISC-V implementation of one stage and multistage piplined RV32I processor,0,mmalinowsky/risc-v,444563780,SystemVerilog,risc-v,8,0,2022-01-05 01:09:53+00:00,[],
8306,https://github.com/bloodyrun/arbiter.git,2022-02-10 05:25:22+00:00,Round-robin Arbiter,0,bloodyrun/arbiter,457642292,SystemVerilog,arbiter,13,0,2022-02-10 05:30:26+00:00,[],
8307,https://github.com/jbates35/elex7660_lab5.git,2022-02-06 07:50:29+00:00,,0,jbates35/elex7660_lab5,456088373,SystemVerilog,elex7660_lab5,5,0,2022-02-06 07:51:45+00:00,[],
8308,https://github.com/westonMS/array_test.git,2022-02-09 02:14:13+00:00,,0,westonMS/array_test,457176109,SystemVerilog,array_test,0,0,2022-02-09 02:16:42+00:00,[],
8309,https://github.com/tomkuzma/7660_Assign2.git,2022-02-11 17:21:39+00:00,ELEX 7660 - Assignment 2: Sequence Detector and Vending Machine SystemVerilog,0,tomkuzma/7660_Assign2,458277673,SystemVerilog,7660_Assign2,2,0,2022-02-12 19:03:17+00:00,[],
8310,https://github.com/ishraqtashdid/UART.git,2022-02-05 06:07:16+00:00,A basic UART module design using systemverilog which sends 8 bit data from a master transmitter to a slave receiver.,0,ishraqtashdid/UART,455790557,SystemVerilog,UART,1218,0,2022-02-05 06:09:40+00:00,[],
8311,https://github.com/bltblt/hw4.git,2022-02-02 15:15:38+00:00,,0,bltblt/hw4,454824642,SystemVerilog,hw4,7,0,2022-02-02 15:16:01+00:00,[],
8312,https://github.com/el17ak/fetal_ecg.git,2022-02-03 02:27:45+00:00,SystemVerilog code for Fetal ECG MEng project developed for a DE0-Nano development board.,0,el17ak/fetal_ecg,455005173,SystemVerilog,fetal_ecg,662,0,2022-05-10 19:22:50+00:00,[],
8313,https://github.com/XiaoqingShi22/Some-UVM-components-testcases.git,2022-02-26 09:54:45+00:00,,0,XiaoqingShi22/Some-UVM-components-testcases,463814427,SystemVerilog,Some-UVM-components-testcases,6,0,2022-02-26 12:47:28+00:00,[],
8314,https://github.com/mfkiwl/SweRV_FPGA.git,2022-01-20 18:22:56+00:00,SweRV FPGA design of Vivado,0,mfkiwl/SweRV_FPGA,450211120,,SweRV_FPGA,53146,0,2022-11-11 20:00:12+00:00,[],
8315,https://github.com/danielmergy/AsyncFIFO.git,2022-01-15 20:27:13+00:00,Asynchronous FIFO,0,danielmergy/AsyncFIFO,448383463,SystemVerilog,AsyncFIFO,4,0,2022-01-15 20:36:55+00:00,[],
8316,https://github.com/TurinSadia/EEE-Projects.git,2022-01-23 15:39:09+00:00,,0,TurinSadia/EEE-Projects,451149116,SystemVerilog,EEE-Projects,13960,0,2024-03-05 17:09:34+00:00,[],
8317,https://github.com/jerryWaldorfIII/Traffic-Light-Hardware-Design.git,2021-12-27 02:04:22+00:00,Hardware Implementation of a Traffic Light System using SystemVerilog,0,jerryWaldorfIII/Traffic-Light-Hardware-Design,442025235,SystemVerilog,Traffic-Light-Hardware-Design,1766,0,2021-12-27 02:32:04+00:00,[],
8318,https://github.com/Areebkhan02/Designing-Adder-Subtractor.git,2022-01-07 10:23:55+00:00,"A system that is capable of adding and subtracting two 3-bit binary numbers, A and B. The system accepts A, B, and an operator bit, O, which can either be 0 or 1, as input. If the bit O is 0 then the system adds A and B, and when O is 1 it subtracts B from A. In either case, the circuit generates the appropriate signals for seven-segment display to show the result of addition or subtraction as a hexadecimal digit. If the result is negative then the dp light of seven segment display is used to indicate that the displayed number is a negative number.",0,Areebkhan02/Designing-Adder-Subtractor,445481631,SystemVerilog,Designing-Adder-Subtractor,7,0,2022-01-07 10:45:07+00:00,[],
8319,https://github.com/jessepalomera/uart_design.git,2022-01-17 06:54:46+00:00,,0,jessepalomera/uart_design,448784835,SystemVerilog,uart_design,230,0,2022-01-17 06:58:58+00:00,[],
8320,https://github.com/crlarsen/cvtdw.git,2022-01-27 17:12:51+00:00,Implement MIPS cvt.d.w instruction.,0,crlarsen/cvtdw,452773648,SystemVerilog,cvtdw,3,0,2022-01-27 17:48:43+00:00,[],
8321,https://github.com/xuan-415/verilog.git,2022-01-24 10:50:39+00:00,,0,xuan-415/verilog,451425232,SystemVerilog,verilog,1962,0,2022-01-24 10:54:49+00:00,[],https://api.github.com/licenses/mit
8322,https://github.com/KameronJonasson1/modified-Harvard-architecture-verilog-microprocessor.git,2021-12-30 20:15:16+00:00,"Modified Harvard architecture microprocessor with 4-bit data path and 8-bit instruction, ISA included.",0,KameronJonasson1/modified-Harvard-architecture-verilog-microprocessor,443175777,SystemVerilog,modified-Harvard-architecture-verilog-microprocessor,14,0,2021-12-31 00:00:10+00:00,[],
8323,https://github.com/briandallaire/portfolio.git,2021-12-30 09:42:05+00:00,My Coding Portfolio,0,briandallaire/portfolio,443031062,SystemVerilog,portfolio,7120,0,2022-05-03 10:06:19+00:00,"['c', 'cpp', 'embedded-c', 'java', 'python', 'systemverilog-hdl', 'verilog-hdl']",
8324,https://github.com/JessmanJhutty/RC4.git,2022-01-03 22:50:55+00:00,,0,JessmanJhutty/RC4,444221027,SystemVerilog,RC4,13,0,2022-01-05 22:14:32+00:00,[],
8325,https://github.com/tfiwm/uvm_snippets.git,2022-01-03 00:42:39+00:00,Various UVM examples,0,tfiwm/uvm_snippets,443902952,SystemVerilog,uvm_snippets,1,0,2022-01-03 00:47:28+00:00,[],
8326,https://github.com/soukalin96/SystemVerilog.git,2022-01-13 13:45:43+00:00,Drive for my verilog practice files,0,soukalin96/SystemVerilog,447615420,SystemVerilog,SystemVerilog,638,0,2022-02-22 05:18:18+00:00,"['config', 'github-config']",
8327,https://github.com/VSHEV92/Linear_Downsampler.git,2022-02-09 14:42:37+00:00,Дробный понижающий передискретизатор с линейной интерполяцией,0,VSHEV92/Linear_Downsampler,457398192,SystemVerilog,Linear_Downsampler,17,0,2022-02-11 11:50:16+00:00,[],
8328,https://github.com/jared12222/eecs570_final.git,2022-02-24 15:03:28+00:00,,1,jared12222/eecs570_final,463191389,SystemVerilog,eecs570_final,11221,0,2022-03-24 00:43:45+00:00,[],
8329,https://github.com/DilayYigit/Computer_Architecture.git,2022-02-06 20:59:59+00:00,,0,DilayYigit/Computer_Architecture,456271082,SystemVerilog,Computer_Architecture,21,0,2022-02-06 21:02:36+00:00,[],
8330,https://github.com/cwarv/basic_designs.git,2022-02-05 10:08:55+00:00,Basic digital circuit designs for learning/teaching.,0,cwarv/basic_designs,455834963,SystemVerilog,basic_designs,6,0,2022-02-05 10:11:30+00:00,[],https://api.github.com/licenses/cc0-1.0
8331,https://github.com/absolutezeroooo/TEST.git,2022-01-31 08:17:46+00:00,,0,absolutezeroooo/TEST,453926410,SystemVerilog,TEST,14890,0,2022-01-31 08:20:28+00:00,[],
8332,https://github.com/ago-cs/fpga-zero-stopwatch-game.git,2022-02-19 16:37:25+00:00,FPGA ZeroStopwatch game written for learning (for DE10-Lite board),0,ago-cs/fpga-zero-stopwatch-game,461250216,SystemVerilog,fpga-zero-stopwatch-game,442,0,2022-03-21 06:46:26+00:00,[],
8333,https://github.com/yang-fubing/Asafarr-MIPSCPU-design.git,2022-02-23 03:26:01+00:00,2021“龙芯杯”全国优胜奖,0,yang-fubing/Asafarr-MIPSCPU-design,462566321,SystemVerilog,Asafarr-MIPSCPU-design,379,0,2022-02-24 10:27:03+00:00,[],
8334,https://github.com/VSHEV92/QAM_PLL_Model.git,2022-02-21 08:22:48+00:00,Демонстрация трансляции Simulink модели с помощью MATLAB HDL Verifier и DPI в эталонную модель для HDL верификации на примере системы частотной синхронизации для QAM-16 сигналов.,0,VSHEV92/QAM_PLL_Model,461767134,SystemVerilog,QAM_PLL_Model,185,0,2022-02-21 08:24:23+00:00,[],
8335,https://github.com/Dhatsme/all_projects.git,2022-02-21 11:40:31+00:00,,0,Dhatsme/all_projects,461834711,SystemVerilog,all_projects,102,0,2022-02-22 04:00:51+00:00,[],
8336,https://github.com/florylsk/opentitanTFG.git,2022-02-15 06:09:21+00:00,,0,florylsk/opentitanTFG,459450272,SystemVerilog,opentitanTFG,77001,0,2022-09-07 17:21:04+00:00,[],https://api.github.com/licenses/apache-2.0
8337,https://github.com/NikolaosGian/hardware_digital_systems_II.git,2022-03-03 12:58:56+00:00,An application using Qeusta FPGA student version of Intel,0,NikolaosGian/hardware_digital_systems_II,465719823,SystemVerilog,hardware_digital_systems_II,3810,0,2022-08-03 06:11:40+00:00,"['lite', 'intel', 'questa']",
8338,https://github.com/JoyceLCH/VGA_ROM.git,2022-03-03 13:27:07+00:00,,0,JoyceLCH/VGA_ROM,465729860,SystemVerilog,VGA_ROM,64,0,2022-03-03 13:51:09+00:00,[],
8339,https://github.com/krasus00/trail_task.git,2022-02-28 01:26:48+00:00,,0,krasus00/trail_task,464299834,SystemVerilog,trail_task,410,0,2022-02-28 01:29:09+00:00,[],
8340,https://github.com/bciip/otp_ctrl.git,2022-01-18 10:29:50+00:00,,0,bciip/otp_ctrl,449239383,SystemVerilog,otp_ctrl,475,0,2022-01-18 10:35:46+00:00,[],
8341,https://github.com/abhjha1997/PLL_RVMYTH-Interface-.git,2022-01-16 13:14:35+00:00,,0,abhjha1997/PLL_RVMYTH-Interface-,448558751,SystemVerilog,PLL_RVMYTH-Interface-,66,0,2022-03-23 06:19:53+00:00,[],
8342,https://github.com/BowmanChow/NeuralNetworkAccelerator.git,2022-01-16 13:55:27+00:00,,0,BowmanChow/NeuralNetworkAccelerator,448569162,SystemVerilog,NeuralNetworkAccelerator,22,0,2022-04-06 08:30:13+00:00,[],
8343,https://github.com/jas-soh/EE469Lab.git,2022-02-04 20:01:27+00:00,,0,jas-soh/EE469Lab,455680231,SystemVerilog,EE469Lab,40427,0,2022-03-01 21:31:39+00:00,[],
8344,https://github.com/wei-tianyu/five-stage-pipeline.git,2022-02-04 20:31:41+00:00,,0,wei-tianyu/five-stage-pipeline,455688090,SystemVerilog,five-stage-pipeline,200,0,2022-10-11 18:14:00+00:00,[],
8345,https://github.com/ondanieldev/ufmg-isl.git,2022-02-14 05:27:16+00:00,,0,ondanieldev/ufmg-isl,459027872,SystemVerilog,ufmg-isl,68,0,2022-02-21 18:08:37+00:00,[],
8346,https://github.com/FreshVerifier/myproject.git,2022-02-13 11:01:54+00:00,个人代码,0,FreshVerifier/myproject,458783447,SystemVerilog,myproject,78,0,2022-02-13 11:05:15+00:00,[],
8347,https://github.com/22anushka/Hardware-based-locking-system.git,2022-02-20 11:38:05+00:00,,0,22anushka/Hardware-based-locking-system,461468783,SystemVerilog,Hardware-based-locking-system,3,0,2022-02-20 12:08:26+00:00,[],
8348,https://github.com/charkster/cmod_a7-uart_block_ram.git,2022-02-10 01:54:48+00:00,The FT2232H on the CMOD-A7 is used to drive UART data to read/write to a register map implemented in block ram.,0,charkster/cmod_a7-uart_block_ram,457594141,SystemVerilog,cmod_a7-uart_block_ram,20,0,2022-02-10 02:08:42+00:00,"['uart', 'ft2232h', 'cmod-a7']",https://api.github.com/licenses/mit
8349,https://github.com/wiszeto/lab-5.git,2022-02-09 23:50:53+00:00,,1,wiszeto/lab-5,457567191,SystemVerilog,lab-5,62,0,2022-02-11 22:17:29+00:00,[],
8350,https://github.com/aromaproject05/aromaproject05.git,2022-02-16 13:24:53+00:00,Config files for my GitHub profile.,1,aromaproject05/aromaproject05,460014529,SystemVerilog,aromaproject05,31,0,2022-02-18 15:31:21+00:00,"['config', 'github-config']",
8351,https://github.com/rondarchik/csa-2022.git,2022-02-22 16:52:47+00:00,,0,rondarchik/csa-2022,462390858,SystemVerilog,csa-2022,73122,0,2022-12-05 23:58:18+00:00,[],
8352,https://github.com/Jenkins047/SPI_PROJECT.git,2022-01-29 13:20:42+00:00,,0,Jenkins047/SPI_PROJECT,453403695,SystemVerilog,SPI_PROJECT,2909,0,2022-01-29 13:22:21+00:00,[],
8353,https://github.com/vinocastello/CS-21-2021-2022-Proj2.git,2022-01-31 01:37:18+00:00,MIPS Single Cycle Processor Extension with SystemVerilog,0,vinocastello/CS-21-2021-2022-Proj2,453849379,SystemVerilog,CS-21-2021-2022-Proj2,658,0,2022-01-31 01:39:03+00:00,[],
8354,https://github.com/Arnav-M/Verilog-Projects.git,2022-02-07 19:09:00+00:00,"CSE 271, CSE 371, CSE 469 Projects programmed using Verilog",0,Arnav-M/Verilog-Projects,456640938,SystemVerilog,Verilog-Projects,51,0,2023-01-31 19:31:58+00:00,[],
8355,https://github.com/wuruochen9/FPGA-Game-WHACK-A-MOLE-PRO.git,2022-01-05 11:58:19+00:00,A SPECIAL WHACK A MOLE WRITTEN IN FPGA,0,wuruochen9/FPGA-Game-WHACK-A-MOLE-PRO,444786870,SystemVerilog,FPGA-Game-WHACK-A-MOLE-PRO,197,0,2024-03-19 01:37:58+00:00,[],
8356,https://github.com/erfanbsoula/32b-MC-Processor.git,2022-01-15 21:07:43+00:00,32-bit Multi Cycle Processor (Computer Architecture Course),0,erfanbsoula/32b-MC-Processor,448391267,SystemVerilog,32b-MC-Processor,7,0,2022-01-15 21:09:20+00:00,[],
8357,https://github.com/carvalhosamuel/LibGE-Experiments.git,2022-01-10 13:43:32+00:00,,0,carvalhosamuel/LibGE-Experiments,446439657,SystemVerilog,LibGE-Experiments,26783,0,2022-01-10 15:01:03+00:00,[],
8358,https://github.com/natesherman01/Fidget-Toy.git,2021-12-30 19:35:22+00:00,"This was the final project for CPE 133 Digital Design in which my partner and I designed a visual fidget toy on a Basys 3 Board. An extensive user manual can be found in the files under the name ""Visual Fidget Toy.pdf""",0,natesherman01/Fidget-Toy,443168354,SystemVerilog,Fidget-Toy,9778,0,2022-01-03 01:08:57+00:00,[],
8359,https://github.com/ZRookk/computerArch.git,2022-01-17 20:20:34+00:00,Computer Architecture Lab 1 ,0,ZRookk/computerArch,449037244,SystemVerilog,computerArch,10,0,2022-01-17 20:25:28+00:00,[],
8360,https://github.com/shiranDapht/sim2.git,2022-01-14 12:58:27+00:00,,0,shiranDapht/sim2,447968255,SystemVerilog,sim2,3503,0,2022-01-15 12:09:21+00:00,[],
8361,https://github.com/ZZZggy/verif.clipper.git,2022-01-21 08:19:52+00:00,,0,ZZZggy/verif.clipper,450409148,,verif.clipper,532,0,2022-01-21 15:50:49+00:00,[],
8362,https://github.com/yonib98/Sim3.git,2022-01-18 11:40:03+00:00,,0,yonib98/Sim3,449260760,SystemVerilog,Sim3,594,0,2022-01-18 11:43:32+00:00,[],
8363,https://github.com/ArtemBaben/demo.git,2022-01-29 20:47:25+00:00,GitHub Desktop tutorial repository,0,ArtemBaben/demo,453514774,SystemVerilog,demo,36,0,2022-07-19 08:09:59+00:00,[],
8364,https://github.com/danodus/xglib.git,2022-01-27 21:22:42+00:00,,0,danodus/xglib,452849221,SystemVerilog,xglib,117,0,2022-05-19 11:22:44+00:00,[],https://api.github.com/licenses/mit
8365,https://github.com/jbates35/elex7660_asgn2.git,2022-02-13 02:57:28+00:00,Assignment 2 for ELEX7660,0,jbates35/elex7660_asgn2,458694109,SystemVerilog,elex7660_asgn2,7,0,2022-02-13 02:58:26+00:00,[],
8366,https://github.com/SeanFu777/Trivial.git,2022-02-12 08:13:52+00:00,,0,SeanFu777/Trivial,458461099,,Trivial,548,0,2022-05-18 06:15:50+00:00,[],
8367,https://github.com/litex-hub/pythondata-cpu-cv32e40x.git,2022-02-12 19:05:11+00:00,Python module containing system_verilog files for cv32e40x cpu (for use with LiteX).,0,litex-hub/pythondata-cpu-cv32e40x,458614274,SystemVerilog,pythondata-cpu-cv32e40x,9227,0,2022-05-26 16:52:13+00:00,[],https://api.github.com/licenses/apache-2.0
8368,https://github.com/GuFangYi/VLSI.git,2022-02-15 07:01:10+00:00,,0,GuFangYi/VLSI,459464496,SystemVerilog,VLSI,3853,0,2022-02-15 09:20:16+00:00,[],
8369,https://github.com/Andrew-LTC/ECE4305Lab5.git,2022-02-26 01:00:28+00:00,,0,Andrew-LTC/ECE4305Lab5,463718626,SystemVerilog,ECE4305Lab5,62,0,2023-01-26 21:09:55+00:00,[],
8370,https://github.com/lazarvulic99/SystemVerilog-Verification---Register-functionalities.git,2022-02-15 22:44:57+00:00,Simple register realisation for SystemVerilog Verification,0,lazarvulic99/SystemVerilog-Verification---Register-functionalities,459774539,SystemVerilog,SystemVerilog-Verification---Register-functionalities,1729,0,2022-02-16 16:12:35+00:00,"['systemverilog', 'vscode', 'quartus', 'altera', 'modelsim', 'questasim']",
8371,https://github.com/albingomes/aes.git,2022-02-16 04:26:49+00:00,,0,albingomes/aes,459851401,SystemVerilog,aes,14,0,2022-03-11 03:42:50+00:00,[],
8372,https://github.com/anhhao135/ECE-111.git,2022-02-16 06:27:01+00:00,,0,anhhao135/ECE-111,459879687,SystemVerilog,ECE-111,55911,0,2022-02-16 06:31:50+00:00,[],
8373,https://github.com/AntonyGeorgiadis/SystemVerilog.git,2022-02-19 07:01:53+00:00,Random sum of projects from University in System Verilog ,0,AntonyGeorgiadis/SystemVerilog,461113613,SystemVerilog,SystemVerilog,4,0,2022-02-19 07:02:51+00:00,[],
8374,https://github.com/retrorepair/NES_MiSTer_YC.git,2022-02-05 16:47:46+00:00,MiSTerFPGA - NTSC Encoder - S-Video / Composite Output,0,retrorepair/NES_MiSTer_YC,455927371,,NES_MiSTer_YC,63584,0,2022-02-05 16:46:24+00:00,[],https://api.github.com/licenses/mit
8375,https://github.com/RehanEjaz/Quiz-show-logic.git,2022-02-03 19:48:37+00:00,Verilog logic for Quiz show scenario,0,RehanEjaz/Quiz-show-logic,455305998,SystemVerilog,Quiz-show-logic,118,0,2022-05-01 07:59:20+00:00,[],
8376,https://github.com/de1ukc/System_verilog_university_projects.git,2022-02-27 09:27:05+00:00,,0,de1ukc/System_verilog_university_projects,464091348,SystemVerilog,System_verilog_university_projects,62196,0,2022-11-23 20:32:49+00:00,[],
8377,https://github.com/DilayYigit/Digital_Design.git,2022-02-06 20:19:49+00:00,,0,DilayYigit/Digital_Design,456262245,SystemVerilog,Digital_Design,14,0,2022-02-06 20:24:34+00:00,[],
8378,https://github.com/smmzhang/vector_chip_1000.git,2022-01-18 03:15:04+00:00,A vector architecture project enhanced by custom operating system for parallel processing.,0,smmzhang/vector_chip_1000,449124569,,vector_chip_1000,11795,0,2023-11-12 13:11:14+00:00,[],
8379,https://github.com/leavesinenglish/Digital-Circuitry-and-Computer-System-Architecture.git,2022-02-16 09:09:09+00:00,"Курс ""Цифровая схемотехника"", 2 курс ФФ НГУ, отделение физической информатики",0,leavesinenglish/Digital-Circuitry-and-Computer-System-Architecture,459928365,SystemVerilog,Digital-Circuitry-and-Computer-System-Architecture,2,0,2023-07-09 13:13:30+00:00,[],
8380,https://github.com/vadinamo/csa-2022.git,2022-02-20 08:35:40+00:00,,0,vadinamo/csa-2022,461428834,SystemVerilog,csa-2022,55485,0,2022-10-30 18:52:36+00:00,[],
8381,https://github.com/bciip/flash_ctrl.git,2022-01-18 10:29:37+00:00,,0,bciip/flash_ctrl,449239314,SystemVerilog,flash_ctrl,309,0,2022-01-18 10:35:31+00:00,[],
8382,https://github.com/stavrospc/swerv-app.git,2022-01-16 21:28:37+00:00,,0,stavrospc/swerv-app,448677498,SystemVerilog,swerv-app,25,0,2022-10-03 12:33:41+00:00,['hacktoberfest'],
8383,https://github.com/Mindar/AS2201.git,2022-01-22 22:29:07+00:00,ASIC submission for the Google/Skywater OpenMPW-5 shuttle,0,Mindar/AS2201,450950674,SystemVerilog,AS2201,199,0,2022-01-22 22:29:51+00:00,[],
8384,https://github.com/Coding-Virus/School.git,2022-01-14 19:34:01+00:00,4243,0,Coding-Virus/School,448085805,SystemVerilog,School,1436,0,2022-04-01 18:41:07+00:00,[],
8385,https://github.com/vickyfyq/ece437.git,2022-01-14 18:38:00+00:00,,0,vickyfyq/ece437,448071566,SystemVerilog,ece437,8777,0,2022-09-21 16:32:40+00:00,[],
8386,https://github.com/ZerunYin/asic_design_module.git,2022-02-24 16:59:46+00:00,,0,ZerunYin/asic_design_module,463230036,SystemVerilog,asic_design_module,10,0,2022-02-24 17:13:34+00:00,[],
8387,https://github.com/sivajeet/NLP-Swedish-English.git,2022-02-23 22:30:47+00:00,Implementation of IBM Model 1 to translate from Swedish to English. The dataset contains a number of sentence-aligned parallel texts taken from the European Parliament proceedings. ,0,sivajeet/NLP-Swedish-English,462927456,SystemVerilog,NLP-Swedish-English,3811,0,2022-02-23 22:31:44+00:00,[],
8388,https://github.com/zhewen404/util.git,2022-02-25 21:03:49+00:00,,0,zhewen404/util,463674992,SystemVerilog,util,0,0,2022-02-25 21:11:44+00:00,[],
8389,https://github.com/Rodina222/Stopwatch-Project.git,2022-02-13 10:41:41+00:00,"Create a stopwatch that can count (up and down) within the range of one hour, i.e., from 00:00 [min:sec] to 59:59 [min:sec]. It has four tactile switches as follows: One switch for starting and stopping the count operation.One for toggling between the count up and count down modes.One  for resetting the count.One  for setting the time for countdown",0,Rodina222/Stopwatch-Project,458778971,SystemVerilog,Stopwatch-Project,3388,0,2022-10-08 11:49:34+00:00,[],
8390,https://github.com/XuMinglei1221/dv_learning.git,2022-01-20 15:25:51+00:00,dv learning process record of myself,0,XuMinglei1221/dv_learning,450150911,SystemVerilog,dv_learning,8,0,2022-01-20 15:32:29+00:00,[],
8391,https://github.com/bciip/prim_xilinx.git,2022-01-20 11:57:32+00:00,,0,bciip/prim_xilinx,450078436,SystemVerilog,prim_xilinx,6,0,2022-01-20 12:00:40+00:00,[],
8392,https://github.com/Danil1997Dev/Lab3new.git,2022-01-29 14:04:08+00:00,,0,Danil1997Dev/Lab3new,453414792,SystemVerilog,Lab3new,4064,0,2022-01-29 14:06:45+00:00,[],
8393,https://github.com/kotatsuyaki/fpga-gomoku-ui.git,2022-01-06 07:15:09+00:00,,0,kotatsuyaki/fpga-gomoku-ui,445076848,SystemVerilog,fpga-gomoku-ui,26,0,2023-01-28 02:06:37+00:00,[],
8394,https://github.com/berksaltuk/CS223_Lab_Solutions.git,2022-02-12 13:54:13+00:00,CS223 - Digital Design Lab Solutions - Bilkent Fall 2020,0,berksaltuk/CS223_Lab_Solutions,458535929,SystemVerilog,CS223_Lab_Solutions,2566,0,2022-02-23 19:12:17+00:00,[],
8395,https://github.com/vanessa2213/ComputerArchitecture.git,2022-01-25 19:22:01+00:00,"Upon completion of this course, I am able to design the components of a processor, including concepts such as CISC, RISC, pipeline, performance metrics, memory subsystem design and input/output subsystem design.",0,vanessa2213/ComputerArchitecture,452012018,SystemVerilog,ComputerArchitecture,837,0,2022-01-25 21:33:52+00:00,[],
8396,https://github.com/crgrace/psd_chip_v2.git,2022-02-09 21:50:17+00:00,,0,crgrace/psd_chip_v2,457540113,SystemVerilog,psd_chip_v2,47,0,2022-02-10 18:57:37+00:00,[],
8397,https://github.com/sinadarbouy/NLP-Swedish-English.git,2022-02-10 12:28:01+00:00,,0,sinadarbouy/NLP-Swedish-English,457771097,SystemVerilog,NLP-Swedish-English,2720,0,2022-02-13 20:54:35+00:00,[],
8398,https://github.com/jc123488/E_ICC2020_prelimily_univ_cell-based.git,2022-03-03 07:47:17+00:00,,0,jc123488/E_ICC2020_prelimily_univ_cell-based,465618834,SystemVerilog,E_ICC2020_prelimily_univ_cell-based,50,0,2023-09-07 06:21:10+00:00,[],
8399,https://github.com/AlejandroM2000/CPU.git,2022-02-04 07:44:35+00:00,,1,AlejandroM2000/CPU,455461748,SystemVerilog,CPU,525,0,2022-02-09 07:32:41+00:00,[],
8400,https://github.com/dovuthanhhien1609/RiscV32.git,2022-01-04 09:56:10+00:00,,0,dovuthanhhien1609/RiscV32,444367473,SystemVerilog,RiscV32,4564,0,2022-01-04 17:30:59+00:00,[],
8401,https://github.com/EzraCharles/FIFO_verification_env.git,2022-01-04 01:06:41+00:00,Enviroment to test a FIFO implementation of Verification class of the Bootcamp Pre-silicon at ITESO with INTEL,0,EzraCharles/FIFO_verification_env,444244709,SystemVerilog,FIFO_verification_env,10,0,2022-01-11 02:48:40+00:00,[],https://api.github.com/licenses/mit
8402,https://github.com/Areebkhan02/4-common-anode-seven-segment-displays-.git,2022-01-07 11:36:08+00:00,,0,Areebkhan02/4-common-anode-seven-segment-displays-,445500244,SystemVerilog,4-common-anode-seven-segment-displays-,7,0,2022-01-07 11:53:18+00:00,[],
8403,https://github.com/hiverniaa/RVS9-2.git,2022-01-07 08:58:03+00:00,,0,hiverniaa/RVS9-2,445458272,SystemVerilog,RVS9-2,33,0,2022-01-10 11:15:23+00:00,[],
8404,https://github.com/royb998/044252-sim3.git,2022-01-17 08:55:32+00:00,,0,royb998/044252-sim3,448819216,SystemVerilog,044252-sim3,14,0,2022-01-17 09:18:33+00:00,[],
8405,https://github.com/jupiter204/verilog.git,2022-01-19 11:05:56+00:00,,0,jupiter204/verilog,449657107,SystemVerilog,verilog,1647,0,2022-01-19 11:11:51+00:00,[],
8406,https://github.com/bciip/rv_plic.git,2022-01-18 10:33:59+00:00,,0,bciip/rv_plic,449240845,SystemVerilog,rv_plic,56,0,2022-01-18 10:39:46+00:00,[],
8407,https://github.com/bciip/rstmgr.git,2022-01-18 10:32:07+00:00,,0,bciip/rstmgr,449240196,SystemVerilog,rstmgr,61,0,2022-01-18 10:37:52+00:00,[],
8408,https://github.com/bciip/edn.git,2022-01-18 10:30:58+00:00,,0,bciip/edn,449239771,SystemVerilog,edn,225,0,2022-01-18 10:36:49+00:00,[],
8409,https://github.com/jkuschner/processor_go_brr.git,2022-01-23 23:33:23+00:00,,0,jkuschner/processor_go_brr,451258406,SystemVerilog,processor_go_brr,3010,0,2022-04-05 23:09:18+00:00,[],
8410,https://github.com/salimkhan21/UVM_ADDER_Verification.git,2022-01-28 04:58:28+00:00,4 bit adder verification environment,0,salimkhan21/UVM_ADDER_Verification,452944301,SystemVerilog,UVM_ADDER_Verification,4,0,2022-01-28 05:01:48+00:00,[],
8411,https://github.com/alihusain01/lab5-ECE385.git,2022-02-21 22:37:04+00:00,,0,alihusain01/lab5-ECE385,462053978,SystemVerilog,lab5-ECE385,6109,0,2022-02-23 22:55:50+00:00,[],
8412,https://github.com/bciip/alert_handler.git,2022-01-18 10:29:06+00:00,,0,bciip/alert_handler,449239177,SystemVerilog,alert_handler,251,0,2022-01-18 10:35:07+00:00,[],
8413,https://github.com/aj-funari/Vivado.git,2022-02-19 15:02:12+00:00,ENGR-E210 & ENGR-E315,0,aj-funari/Vivado,461224612,SystemVerilog,Vivado,10,0,2022-02-19 15:04:08+00:00,[],
8414,https://github.com/Fizz-Trickster/BMP_File.git,2022-02-23 02:30:08+00:00,,0,Fizz-Trickster/BMP_File,462552439,SystemVerilog,BMP_File,2484,0,2022-02-23 02:33:02+00:00,[],
8415,https://github.com/wxbbuaa2011/FPGA-MISC-IP.git,2022-02-13 07:24:07+00:00,Miscellaneous IPs for FPGA project,0,wxbbuaa2011/FPGA-MISC-IP,458739593,,FPGA-MISC-IP,4,0,2022-02-13 07:24:06+00:00,[],https://api.github.com/licenses/apache-2.0
8416,https://github.com/FelixH316/UVM_Basics_2021.git,2021-12-27 10:54:39+00:00,This repository has some examples using UVM,0,FelixH316/UVM_Basics_2021,442132775,SystemVerilog,UVM_Basics_2021,1,0,2021-12-27 10:54:43+00:00,[],
8417,https://github.com/aryatyagi14/FPGA-Adder.git,2022-02-18 23:44:21+00:00,I created 3 different types of adders using different methods to obtain the same results. This showed how tradeoffs affect timing and complexity.,0,aryatyagi14/FPGA-Adder,461039012,SystemVerilog,FPGA-Adder,2,0,2022-02-18 23:45:21+00:00,[],
8418,https://github.com/AlSaqr-platform/common_pads.git,2022-02-21 17:00:43+00:00,,0,AlSaqr-platform/common_pads,461955007,SystemVerilog,common_pads,6,0,2024-03-31 14:13:43+00:00,[],
8419,https://github.com/GeorgeLiu98/fpga-image-decompression.git,2022-01-14 16:00:12+00:00,,0,GeorgeLiu98/fpga-image-decompression,448025046,SystemVerilog,fpga-image-decompression,615344,0,2022-01-14 16:08:28+00:00,[],
8420,https://github.com/parkerg44/System_Verilog.git,2022-01-17 05:35:36+00:00,Notes and demos using system verilog,0,parkerg44/System_Verilog,448766310,SystemVerilog,System_Verilog,8,0,2022-01-17 05:38:06+00:00,[],
8421,https://github.com/seco-lorem/SchoolWork.git,2022-01-15 14:30:01+00:00,,0,seco-lorem/SchoolWork,448300558,SystemVerilog,SchoolWork,1435,0,2022-01-15 14:31:41+00:00,[],
8422,https://github.com/bciip/pwm.git,2022-01-18 10:31:55+00:00,,0,bciip/pwm,449240090,SystemVerilog,pwm,117,0,2022-01-18 10:37:42+00:00,[],
8423,https://github.com/bciip/rv_dm.git,2022-01-18 10:32:20+00:00,,0,bciip/rv_dm,449240281,SystemVerilog,rv_dm,26,0,2022-01-18 10:38:04+00:00,[],
8424,https://github.com/ATariq1/router.git,2022-01-02 22:22:53+00:00,"ASIC design, verification, and layout of a simple router",0,ATariq1/router,443882653,SystemVerilog,router,4936,0,2022-01-07 03:35:53+00:00,[],
8425,https://github.com/yoav-es/System_Verilog.git,2022-01-27 10:04:11+00:00,,0,yoav-es/System_Verilog,452629378,SystemVerilog,System_Verilog,65,0,2022-01-27 10:04:46+00:00,[],
8426,https://github.com/maharshisoma1996/FIFO_verification-.git,2022-02-27 05:17:56+00:00,fifo verification IP using system verilog,1,maharshisoma1996/FIFO_verification-,464044781,SystemVerilog,FIFO_verification-,7,0,2022-02-27 05:30:17+00:00,[],
8427,https://github.com/zhewen404/syn_script.git,2022-03-03 01:43:19+00:00,,0,zhewen404/syn_script,465529377,SystemVerilog,syn_script,6,0,2022-03-03 02:03:29+00:00,[],
8428,https://github.com/jesselee1/18240-Lab-3.git,2022-03-02 19:14:08+00:00,,0,jesselee1/18240-Lab-3,465438024,SystemVerilog,18240-Lab-3,33,0,2022-03-02 19:15:30+00:00,[],
8429,https://github.com/RehanEjaz/TImer-on-FPGA.git,2022-02-10 01:14:11+00:00,Timer peripheral its APB wrapper and its FPGA controller,0,RehanEjaz/TImer-on-FPGA,457584889,SystemVerilog,TImer-on-FPGA,57,0,2022-05-01 08:02:00+00:00,[],
8430,https://github.com/BlackJackTone/50ins_mips_cpu.git,2022-02-10 07:14:53+00:00,"A MIPS CPU supporting 50 instructions, accelerated with 5-stage pipline and full forward.",0,BlackJackTone/50ins_mips_cpu,457670232,SystemVerilog,50ins_mips_cpu,161,0,2022-02-10 07:28:57+00:00,[],
8431,https://github.com/mohammadsaadati80/MIPS-PipeLine.git,2022-02-10 11:05:11+00:00,"Computer Assignment #3, Computer Architecture Course, University of Tehran",0,mohammadsaadati80/MIPS-PipeLine,457744672,SystemVerilog,MIPS-PipeLine,294,0,2022-02-14 18:20:02+00:00,[],
8432,https://github.com/Joptis/Tarea4_parte1.git,2022-02-08 17:49:36+00:00,Tarea de HLS,0,Joptis/Tarea4_parte1,457042179,SystemVerilog,Tarea4_parte1,1287,0,2022-04-21 22:35:45+00:00,[],
8433,https://github.com/AlSaqr-platform/cluster-dma.git,2022-02-09 17:46:06+00:00,Temporary DMA controller for AlSaqr platform,0,AlSaqr-platform/cluster-dma,457466686,SystemVerilog,cluster-dma,19,0,2022-02-11 21:38:56+00:00,[],
8434,https://github.com/haitianzhishang/common_module.git,2022-02-23 02:51:17+00:00,,0,haitianzhishang/common_module,462557631,SystemVerilog,common_module,10,0,2022-02-23 03:21:09+00:00,[],
8435,https://github.com/FAAMT/MIPS-Uniprocessor.git,2022-01-31 20:10:05+00:00,This repo contains all the source code and relevant files for my MIPS Uniprocessor project. I worked on this for a computer architecture lab at Purdue University in Spring 2022.  The processor was developed using SystemVerilog (HDL).,0,FAAMT/MIPS-Uniprocessor,454154007,SystemVerilog,MIPS-Uniprocessor,146,0,2024-02-26 15:39:29+00:00,[],
8436,https://github.com/burakyuslu/CS223-Project.git,2022-01-25 08:47:45+00:00,"CS 223 Digital Design course project. An implementation of Conway's Game Of Life, based on the instructions given in the assignment.",0,burakyuslu/CS223-Project,451800902,SystemVerilog,CS223-Project,11,0,2022-01-25 08:54:02+00:00,[],
8437,https://github.com/Andrew-LTC/ECE4305Lab1.git,2022-01-28 19:40:27+00:00,,0,Andrew-LTC/ECE4305Lab1,453195126,SystemVerilog,ECE4305Lab1,1864,0,2023-01-26 21:09:33+00:00,[],
8438,https://github.com/shivanandgsr/DMA-Controller.git,2022-01-05 02:34:03+00:00,,0,shivanandgsr/DMA-Controller,444636078,SystemVerilog,DMA-Controller,617,0,2022-08-10 01:19:39+00:00,[],
8439,https://github.com/bciip/rom_ctrl.git,2022-01-18 10:30:03+00:00,,0,bciip/rom_ctrl,449239444,SystemVerilog,rom_ctrl,127,0,2022-01-18 10:35:56+00:00,[],
8440,https://github.com/bciip/rv_timer.git,2022-01-18 10:30:34+00:00,,0,bciip/rv_timer,449239614,SystemVerilog,rv_timer,111,0,2022-01-18 10:36:17+00:00,[],
8441,https://github.com/pChaniotis/Small-School-Projects.git,2022-01-16 18:56:39+00:00,,0,pChaniotis/Small-School-Projects,448645226,SystemVerilog,Small-School-Projects,9863,0,2022-01-16 20:03:55+00:00,[],
8442,https://github.com/cbrl/svMIPS.git,2022-02-16 21:17:04+00:00,A single-cycle MIPS processor,0,cbrl/svMIPS,460180749,SystemVerilog,svMIPS,907,0,2022-02-18 19:50:14+00:00,[],
8443,https://github.com/randyma01/CE4202-Proyecto-3.git,2022-01-14 14:16:40+00:00,Proyecto Corto 3: Osciloscopio y Filtrado Digital,0,randyma01/CE4202-Proyecto-3,447991861,SystemVerilog,CE4202-Proyecto-3,3200,0,2022-01-24 06:08:29+00:00,[],
8444,https://github.com/bloodyrun/filters.git,2022-02-10 05:36:54+00:00,,0,bloodyrun/filters,457644914,SystemVerilog,filters,3,0,2022-02-10 05:36:59+00:00,[],
8445,https://github.com/ngpham17/ECE_540_Final-Project_Snake_game.git,2022-02-14 23:05:34+00:00,,0,ngpham17/ECE_540_Final-Project_Snake_game,459354582,SystemVerilog,ECE_540_Final-Project_Snake_game,7388,0,2022-02-14 23:10:07+00:00,[],
8446,https://github.com/jzeiselmusic/CLA.git,2022-02-14 18:08:43+00:00,carry look-ahead adder,0,jzeiselmusic/CLA,459272601,SystemVerilog,CLA,4,0,2022-02-14 18:08:48+00:00,[],
8447,https://github.com/hchou3/SVproject1hchou.git,2022-02-11 21:10:25+00:00,Makeup Project 2,0,hchou3/SVproject1hchou,458341096,SystemVerilog,SVproject1hchou,16,0,2023-01-13 23:20:18+00:00,[],
8448,https://github.com/siddhpant/verilog-practice.git,2022-02-27 19:22:27+00:00,Practicing stuff (Incomplete; Will keep adding when I get time. Also ignore commit messages),0,siddhpant/verilog-practice,464231601,SystemVerilog,verilog-practice,912,0,2022-08-24 09:03:14+00:00,"['verilog', 'hdl', 'practice', 'quartus-prime', 'systemverilog']",
8449,https://github.com/pulala17/Green-Book.git,2022-02-23 01:42:05+00:00,,0,pulala17/Green-Book,462540937,SystemVerilog,Green-Book,7591,0,2022-03-22 09:15:18+00:00,[],
8450,https://github.com/os-fpga/axi_i2c_bridge.git,2021-12-30 12:45:49+00:00,,1,os-fpga/axi_i2c_bridge,443072483,SystemVerilog,axi_i2c_bridge,9032,0,2024-01-23 09:54:44+00:00,['hw'],
8451,https://github.com/dineshannayya/ycr2c.git,2022-02-20 14:11:14+00:00,,0,dineshannayya/ycr2c,461507827,SystemVerilog,ycr2c,1394,0,2022-02-20 14:11:28+00:00,[],https://api.github.com/licenses/apache-2.0
8452,https://github.com/AbdelnabyK/ARM_pipeline_processor.git,2022-02-03 16:31:57+00:00,,0,AbdelnabyK/ARM_pipeline_processor,455242431,SystemVerilog,ARM_pipeline_processor,53,0,2024-03-17 19:04:12+00:00,[],
8453,https://github.com/Areebkhan02/Seven-Segment-Decoder-using-verilog-HDL.git,2022-01-07 09:54:42+00:00,,0,Areebkhan02/Seven-Segment-Decoder-using-verilog-HDL,445473750,SystemVerilog,Seven-Segment-Decoder-using-verilog-HDL,3,0,2022-01-07 10:00:37+00:00,[],
8454,https://github.com/senceck/Pipelined-Median-Filter.git,2022-01-13 13:01:09+00:00,An algorithm to increase processing time of a pipelined parallel median filter using Verilog.,0,senceck/Pipelined-Median-Filter,447600870,SystemVerilog,Pipelined-Median-Filter,11,0,2022-01-13 13:05:11+00:00,[],
8455,https://github.com/bciip/aon_timer.git,2022-01-18 10:30:46+00:00,,0,bciip/aon_timer,449239698,SystemVerilog,aon_timer,51,0,2022-01-18 10:36:37+00:00,[],
8456,https://github.com/bciip/prim.git,2022-01-18 10:31:39+00:00,,0,bciip/prim,449239992,SystemVerilog,prim,183,0,2022-01-18 10:37:32+00:00,[],
8457,https://github.com/alihusain01/lab3-ECE385.git,2022-02-08 05:13:25+00:00,,0,alihusain01/lab3-ECE385,456792024,SystemVerilog,lab3-ECE385,10116,0,2022-02-09 06:53:52+00:00,[],
8458,https://github.com/ZerunYin/learn_uvm.git,2021-12-30 13:16:38+00:00,,0,ZerunYin/learn_uvm,443080137,SystemVerilog,learn_uvm,6383,0,2021-12-30 17:37:17+00:00,[],https://api.github.com/licenses/apache-2.0
8459,https://github.com/jbates35/lab3.git,2022-01-30 19:54:43+00:00,Verilog Lab 3 for ELEX7660,0,jbates35/lab3,453786073,SystemVerilog,lab3,15,0,2022-01-30 19:55:45+00:00,[],
8460,https://github.com/ShivaniPalkar/System-Verilog-Assignments.git,2022-02-09 04:28:17+00:00,,0,ShivaniPalkar/System-Verilog-Assignments,457207797,SystemVerilog,System-Verilog-Assignments,30,0,2022-02-09 04:37:11+00:00,[],
8461,https://github.com/achyutray/DDS2_group03.git,2022-02-24 14:08:55+00:00,,0,achyutray/DDS2_group03,463172418,SystemVerilog,DDS2_group03,321,0,2022-02-24 14:15:12+00:00,[],
8462,https://github.com/AndreaLazzari/SoundWaveDistortionViaFPGA.git,2022-02-25 15:24:34+00:00,Final Project Of Management and Analysis of Physical Dataset,0,AndreaLazzari/SoundWaveDistortionViaFPGA,463581534,SystemVerilog,SoundWaveDistortionViaFPGA,23375,0,2022-02-25 15:27:24+00:00,[],
8463,https://github.com/donev-stan/SystemVerilog.git,2022-02-15 09:42:33+00:00,FIFO Verification Environment + Coverage & Assertions (OOP),0,donev-stan/SystemVerilog,459515396,SystemVerilog,SystemVerilog,9,0,2022-03-21 12:07:44+00:00,[],
8464,https://github.com/6Kotnk/GPUv1.git,2022-02-16 00:40:55+00:00,Sphere shading GPU for ZedBoard,0,6Kotnk/GPUv1,459799700,SystemVerilog,GPUv1,728,0,2022-02-16 00:41:40+00:00,[],
8465,https://github.com/AnatoliyMartynyuk/YARR-rx-recovery.git,2022-02-23 23:50:50+00:00,Meant to benchmark and improve the desync behavior of the YARR rx DAQ.,1,AnatoliyMartynyuk/YARR-rx-recovery,462945113,SystemVerilog,YARR-rx-recovery,89571,0,2022-06-21 17:16:15+00:00,[],
8466,https://github.com/sasha7886/Syntacore-test-exercise.git,2022-02-24 20:49:21+00:00,Syntacore test exercise for internship,0,sasha7886/Syntacore-test-exercise,463297242,SystemVerilog,Syntacore-test-exercise,6679,0,2022-02-24 20:56:33+00:00,[],
8467,https://github.com/alihusain01/lab4-ECE385.git,2022-02-14 22:04:03+00:00,,0,alihusain01/lab4-ECE385,459340131,SystemVerilog,lab4-ECE385,8597,0,2022-02-17 10:05:19+00:00,[],
8468,https://github.com/GCET231/final_project_2021.1.git,2022-02-20 15:17:09+00:00,Arquivos base para o projeto final,0,GCET231/final_project_2021.1,461526417,SystemVerilog,final_project_2021.1,87,0,2022-02-24 21:06:18+00:00,[],
8469,https://github.com/UandersonSilva/TCC.git,2022-02-21 17:45:21+00:00,Desenvolvimento de um ambiente para visualização do funcionamento de um processador descrito em SystemVerilog,0,UandersonSilva/TCC,461970663,SystemVerilog,TCC,15802,0,2022-02-21 17:46:59+00:00,[],
8470,https://github.com/usmanali-rs/Design-Verifcation-Environment-for-AHBlite-Slave.git,2022-02-22 16:54:03+00:00,"Design Verification Environment is used to check the functional correctness of the Design Under Test (DUT) by generating and driving a predefined input sequence to a design, capturing the design output and comparing with-respect-to expected output. Verification environment is a group of classes or components. where each component is performing a specific operation. i.e, generating stimulus, driving, monitoring, etc. and those classes will be named based on the operation.",0,usmanali-rs/Design-Verifcation-Environment-for-AHBlite-Slave,462391331,SystemVerilog,Design-Verifcation-Environment-for-AHBlite-Slave,51,0,2023-10-02 07:41:43+00:00,[],
8471,https://github.com/romio-krvtsky/CSA-labs.git,2022-03-03 16:43:17+00:00,,0,romio-krvtsky/CSA-labs,465803564,SystemVerilog,CSA-labs,43840,0,2022-05-16 06:52:26+00:00,[],
8472,https://github.com/yuyichao/digitaljs_test.git,2021-12-30 22:33:13+00:00,,0,yuyichao/digitaljs_test,443198585,SystemVerilog,digitaljs_test,9,0,2022-01-05 20:26:07+00:00,[],
8473,https://github.com/LiamMullen8/Ripple-Carry-Adder.git,2022-01-16 20:59:12+00:00,32-bit Ripple Carry Adder with gate/time delays to account for critical path delays. Project for CSE341: Computer Organization (Fall 21),0,LiamMullen8/Ripple-Carry-Adder,448671643,SystemVerilog,Ripple-Carry-Adder,35,0,2022-01-16 22:22:36+00:00,[],
8474,https://github.com/bciip/uart.git,2022-01-18 10:32:43+00:00,,0,bciip/uart,449240411,SystemVerilog,uart,158,0,2022-01-18 10:38:33+00:00,[],
8475,https://github.com/bciip/lc_ctrl.git,2022-01-18 10:33:35+00:00,,0,bciip/lc_ctrl,449240706,SystemVerilog,lc_ctrl,254,0,2022-01-18 10:39:18+00:00,[],
8476,https://github.com/youmin1017/sv-tetris.git,2022-01-18 07:15:53+00:00,systemverilog tetris,1,youmin1017/sv-tetris,449179833,SystemVerilog,sv-tetris,1680,0,2022-01-18 07:16:30+00:00,[],
8477,https://github.com/riazcseiu/RV32.git,2021-12-28 01:47:07+00:00,RISC-V Processor,0,riazcseiu/RV32,442319566,,RV32,5,0,2021-12-28 01:47:08+00:00,[],
8478,https://github.com/Hang-XX/tests_2022.git,2022-01-08 05:57:26+00:00,,0,Hang-XX/tests_2022,445737310,SystemVerilog,tests_2022,2,0,2022-01-08 06:00:54+00:00,[],
8479,https://github.com/swisstackle/alu.git,2022-01-04 09:10:14+00:00,An ALU implementation in System Verilog. Course project: Code upon request.,0,swisstackle/alu,444353948,SystemVerilog,alu,7,0,2023-03-12 21:45:29+00:00,"['alu', 'cpu', 'systemverilog', 'verilog', 'eda']",https://api.github.com/licenses/unlicense
8480,https://github.com/ENGR210/P9_SPI.git,2022-01-31 15:56:33+00:00,,0,ENGR210/P9_SPI,454070760,SystemVerilog,P9_SPI,23,0,2022-03-16 14:19:56+00:00,[],
8481,https://github.com/afsantosb/DAT410.git,2022-01-27 09:44:27+00:00,,0,afsantosb/DAT410,452623166,SystemVerilog,DAT410,4251,0,2022-11-08 18:53:38+00:00,[],
8482,https://github.com/RootCubed/fpga_nsmbw_hash.git,2022-03-01 23:06:09+00:00,FPGA design that cracks NSMBW symbol hashes,0,RootCubed/fpga_nsmbw_hash,465085303,SystemVerilog,fpga_nsmbw_hash,18,0,2022-05-31 19:16:42+00:00,[],https://api.github.com/licenses/mit
8483,https://github.com/4DV4NC3M3N7/RV32i_custom_core.git,2022-02-18 06:40:30+00:00,"Custom RV32i Multicycle core that cover 39 instructions except ""ecall"" and ""fence""",0,4DV4NC3M3N7/RV32i_custom_core,460739551,SystemVerilog,RV32i_custom_core,33,0,2022-08-10 07:13:45+00:00,[],https://api.github.com/licenses/cc0-1.0
8484,https://github.com/SreenivasanJJ/IEEE-P1500-std-components-MTECH-project.git,2022-02-17 04:11:41+00:00,,0,SreenivasanJJ/IEEE-P1500-std-components-MTECH-project,460277364,SystemVerilog,IEEE-P1500-std-components-MTECH-project,5,0,2022-02-17 16:32:14+00:00,[],
8485,https://github.com/Danil1997Dev/Lab35.git,2022-02-10 13:41:49+00:00,,0,Danil1997Dev/Lab35,457796177,SystemVerilog,Lab35,3868,0,2022-02-10 13:44:23+00:00,[],
8486,https://github.com/ReaperOknowledge/Interview_Code.git,2022-02-11 19:14:06+00:00,directory for possible career/internship applications,0,ReaperOknowledge/Interview_Code,458311205,SystemVerilog,Interview_Code,1493,0,2022-09-21 18:09:38+00:00,[],
8487,https://github.com/Andrew-LTC/ECE4305Lab3.git,2022-02-11 19:38:35+00:00,,0,Andrew-LTC/ECE4305Lab3,458318122,SystemVerilog,ECE4305Lab3,685,0,2023-01-26 21:08:42+00:00,[],
8488,https://github.com/jzeiselmusic/APM.git,2022-02-14 18:11:43+00:00,Approximate Pattern Matching,0,jzeiselmusic/APM,459273615,SystemVerilog,APM,3,0,2022-02-14 18:11:49+00:00,[],
8489,https://github.com/JoyceLCH/CPU.VGA_ROM.git,2022-03-03 15:10:32+00:00,,0,JoyceLCH/CPU.VGA_ROM,465769232,SystemVerilog,CPU.VGA_ROM,111,0,2022-03-03 15:15:29+00:00,[],
8490,https://github.com/RuiyanGuo/Image-Decompressor.git,2022-02-23 19:49:56+00:00,,0,RuiyanGuo/Image-Decompressor,462884197,SystemVerilog,Image-Decompressor,3540,0,2024-01-15 15:49:10+00:00,[],
8491,https://github.com/yonib98/Sim2.git,2022-01-04 14:49:49+00:00,,0,yonib98/Sim2,444456884,SystemVerilog,Sim2,1042,0,2022-01-05 10:12:50+00:00,[],
8492,https://github.com/p3da/udma_eth_frame.git,2022-01-03 19:41:21+00:00,,0,p3da/udma_eth_frame,444179652,SystemVerilog,udma_eth_frame,13,0,2022-01-10 15:45:27+00:00,[],
8493,https://github.com/AntonovAlexander/syn_opt_test.git,2021-12-28 19:42:25+00:00,Test project for synthesis optimizations exploration,0,AntonovAlexander/syn_opt_test,442566821,SystemVerilog,syn_opt_test,102,0,2021-12-30 11:58:56+00:00,[],
8494,https://github.com/tfiwm/systemverilog_snippets.git,2022-01-01 21:59:57+00:00,All sorts of systemverilog constructs with examples,0,tfiwm/systemverilog_snippets,443631668,SystemVerilog,systemverilog_snippets,38,0,2022-04-27 15:16:47+00:00,[],
8495,https://github.com/aspcompiler/digital_design.git,2022-01-11 07:03:15+00:00,,0,aspcompiler/digital_design,446712734,SystemVerilog,digital_design,15,0,2022-01-11 07:36:46+00:00,[],
8496,https://github.com/fangqingxiao/Riscv.git,2022-01-10 09:37:24+00:00,,0,fangqingxiao/Riscv,446360872,SystemVerilog,Riscv,66,0,2022-04-07 14:49:41+00:00,[],
8497,https://github.com/brktnc/FBU-CPU-System-Verilog-Testbench.git,2022-01-06 09:42:53+00:00,,0,brktnc/FBU-CPU-System-Verilog-Testbench,445116810,SystemVerilog,FBU-CPU-System-Verilog-Testbench,2243,0,2022-01-06 17:28:25+00:00,[],
8498,https://github.com/adaneshp/Digital-Logic-Design.git,2022-01-24 17:02:23+00:00,,0,adaneshp/Digital-Logic-Design,451554781,SystemVerilog,Digital-Logic-Design,21,0,2022-06-01 22:43:17+00:00,[],https://api.github.com/licenses/gpl-3.0
8499,https://github.com/danielmergy/SyncFIFO.git,2022-01-17 16:42:11+00:00,,0,danielmergy/SyncFIFO,448972182,SystemVerilog,SyncFIFO,4,0,2022-01-17 17:07:54+00:00,[],
8500,https://github.com/mayyamal/SMART-V.git,2022-01-19 13:55:52+00:00,RI5CY with Security Extensions,0,mayyamal/SMART-V,449712678,SystemVerilog,SMART-V,2364,0,2023-02-03 08:17:40+00:00,[],
8501,https://github.com/sharbellkhell/Dig_Elec_Sim3.git,2022-01-19 20:57:55+00:00,,0,sharbellkhell/Dig_Elec_Sim3,449853074,SystemVerilog,Dig_Elec_Sim3,25,0,2022-01-19 21:03:41+00:00,[],
8502,https://github.com/vijayshankarr/VSDMiniSoC.git,2022-01-09 12:20:00+00:00,,0,vijayshankarr/VSDMiniSoC,446079893,SystemVerilog,VSDMiniSoC,39,0,2022-01-09 13:27:24+00:00,[],
8503,https://github.com/BowmanChow/AlinxAX7035.git,2022-01-19 15:12:50+00:00,,0,BowmanChow/AlinxAX7035,449741628,SystemVerilog,AlinxAX7035,4,0,2022-01-19 15:13:16+00:00,[],
8504,https://github.com/oliverdwang/flex-uart.git,2022-02-22 16:49:59+00:00,Highly configurable UART module with a simple interface,0,oliverdwang/flex-uart,462389818,SystemVerilog,flex-uart,33171,0,2022-03-31 21:35:22+00:00,[],
8505,https://github.com/Danil1997Dev/Lab33.git,2022-02-08 05:28:07+00:00,,0,Danil1997Dev/Lab33,456795381,SystemVerilog,Lab33,4471,0,2022-02-08 05:30:28+00:00,[],
8506,https://github.com/tomkuzma/7660_Lab4.git,2022-02-04 16:55:04+00:00,ELEX 7660 Lab 4,0,tomkuzma/7660_Lab4,455626669,SystemVerilog,7660_Lab4,62,0,2022-02-07 06:14:57+00:00,[],
8507,https://github.com/dsrasheed/ece437.git,2022-02-08 18:45:30+00:00,,0,dsrasheed/ece437,457060604,SystemVerilog,ece437,7283,0,2023-04-24 06:20:09+00:00,[],
8508,https://github.com/nickmaster2222/CHIP-8.git,2022-02-15 14:04:25+00:00,A CHIP-8 based CPU,0,nickmaster2222/CHIP-8,459604149,SystemVerilog,CHIP-8,26,0,2022-02-15 14:29:47+00:00,[],
8509,https://github.com/Alex-Sensin/High_Speed_Computer_Arithmetic.git,2022-02-15 17:38:36+00:00,Homework assignments from ECEN 4233 high speed computer arithmetic.,0,Alex-Sensin/High_Speed_Computer_Arithmetic,459684450,SystemVerilog,High_Speed_Computer_Arithmetic,10,0,2022-02-15 17:41:15+00:00,[],
8510,https://github.com/Beenau/TimeMultiplexedFilter.git,2022-01-14 02:59:59+00:00,Creates a time multiplexed FIR filter.,0,Beenau/TimeMultiplexedFilter,447824660,SystemVerilog,TimeMultiplexedFilter,29,0,2022-01-24 23:04:41+00:00,[],
8511,https://github.com/grantsmith09/KnightsTour.git,2022-01-14 18:34:58+00:00,,0,grantsmith09/KnightsTour,448070794,SystemVerilog,KnightsTour,49,0,2022-01-14 18:45:29+00:00,[],
8512,https://github.com/armeenm/greenstream.git,2022-02-11 22:30:07+00:00,FPGA EEPROM programmer,0,armeenm/greenstream,458358686,SystemVerilog,greenstream,21,0,2024-01-14 23:20:01+00:00,"['fpga', 'eeprom-programmer', 'eeprom', 'systemverilog', 'haskell', 'clash-lang']",https://api.github.com/licenses/isc
8513,https://github.com/intel/fpga-npu.git,2022-04-18 21:04:16+00:00,,17,intel/fpga-npu,482996674,SystemVerilog,fpga-npu,6715,70,2024-04-12 11:38:03+00:00,[],
8514,https://github.com/MiSTer-devel/S32X_MiSTer.git,2022-04-20 19:52:56+00:00,Sega 32X implementation for MiSTer,18,MiSTer-devel/S32X_MiSTer,483793685,SystemVerilog,S32X_MiSTer,14202,51,2024-03-13 12:04:06+00:00,[],
8515,https://github.com/spark2k06/PCXT_MiSTer.git,2022-05-09 14:18:52+00:00,PCXT port for MiSTer by spark2k06.,17,spark2k06/PCXT_MiSTer,490314390,SystemVerilog,PCXT_MiSTer,242944,50,2023-12-18 14:09:46+00:00,[],https://api.github.com/licenses/gpl-3.0
8516,https://github.com/MiSTer-devel/C128_MiSTer.git,2022-04-23 11:10:08+00:00,,7,MiSTer-devel/C128_MiSTer,484724335,SystemVerilog,C128_MiSTer,137080,39,2024-02-01 02:48:22+00:00,[],
8517,https://github.com/esnet/esnet-smartnic-hw.git,2022-03-10 19:06:01+00:00,ESnet SmartNIC hardware design repository.,3,esnet/esnet-smartnic-hw,468476690,SystemVerilog,esnet-smartnic-hw,1306,34,2024-04-03 13:43:16+00:00,['high-touch'],
8518,https://github.com/Maxpicca-Li/CDIM.git,2022-05-07 16:13:46+00:00,CQU Dual Issue Machine,3,Maxpicca-Li/CDIM,489722289,SystemVerilog,CDIM,43168,28,2024-03-23 08:49:50+00:00,[],
8519,https://github.com/Aperture-Electronic/SystemVerilog-Bitmap-Library-AXI-Image-VIP.git,2022-04-11 16:35:37+00:00,Bitmap Processing Library & AXI-Stream Video Image VIP,4,Aperture-Electronic/SystemVerilog-Bitmap-Library-AXI-Image-VIP,480464583,SystemVerilog,SystemVerilog-Bitmap-Library-AXI-Image-VIP,26,22,2024-02-17 04:01:16+00:00,"['bitmap', 'hardware-designs', 'systemverilog', 'uvm', 'video-processing', 'vip']",https://api.github.com/licenses/gpl-3.0
8520,https://github.com/mbits-mirafra/axi4_avip.git,2022-04-21 11:44:00+00:00,,19,mbits-mirafra/axi4_avip,484028682,SystemVerilog,axi4_avip,62502,19,2024-03-12 10:58:54+00:00,[],https://api.github.com/licenses/mit
8521,https://github.com/NAvi349/riscv-proc.git,2022-03-22 13:46:00+00:00,32-bit 5-Stage Pipelined RISC V RV32I Core,4,NAvi349/riscv-proc,472786837,SystemVerilog,riscv-proc,9145,19,2024-04-02 03:58:20+00:00,[],https://api.github.com/licenses/gpl-3.0
8522,https://github.com/euphoric-hardware/simcommand.git,2022-03-30 22:46:44+00:00,SimCommand is a library for writing high-performance RTL testbenches with simulation threads in Scala using chiseltest.,1,euphoric-hardware/simcommand,476074753,SystemVerilog,simcommand,508,14,2024-01-30 14:56:10+00:00,[],https://api.github.com/licenses/bsd-3-clause
8523,https://github.com/HITSZ-NSCSCC22/mycpu.git,2022-03-20 08:11:29+00:00,HITSZ 404 NOT FOUND NSCSCC22 project,1,HITSZ-NSCSCC22/mycpu,471917488,SystemVerilog,mycpu,45853,14,2024-04-03 15:28:07+00:00,"['cpu', 'verilog', 'nscscc', 'systemverilog']",
8524,https://github.com/kkenshin1/AXI-Ethernet-UVM.git,2022-05-10 14:31:43+00:00,A Verification Platform for UDP Protocol Ethernet Module wrapped with AXI and APB bus based on UVM,3,kkenshin1/AXI-Ethernet-UVM,490734281,SystemVerilog,AXI-Ethernet-UVM,304,14,2023-12-02 03:17:16+00:00,[],https://api.github.com/licenses/mit
8525,https://github.com/Weierstras-s/RISCV-CPU.git,2022-04-12 00:34:12+00:00,,1,Weierstras-s/RISCV-CPU,480598573,SystemVerilog,RISCV-CPU,17,13,2023-10-19 14:36:47+00:00,[],
8526,https://github.com/WajahatRiaz/AHB-Lite-Protocol-Verification.git,2022-03-23 18:07:08+00:00,Attempt to develop a verification IP and plan for a bus functional model of ARM based AMBA 3 AHB-LITE Protocol. Implemented object oriented programming techniques in SysteVerilog.,0,WajahatRiaz/AHB-Lite-Protocol-Verification,473304358,SystemVerilog,AHB-Lite-Protocol-Verification,2411,12,2024-03-26 21:04:24+00:00,"['arm', 'systemverilog', 'systemverilog-developer', 'systemverilog-test-bench', 'ahb-lite']",https://api.github.com/licenses/bsd-3-clause
8527,https://github.com/charkster/usb_pd_monitor.git,2022-04-30 01:58:16+00:00,USB PD cc pin monitor implemented in a Tang Nano 9K FPGA.,1,charkster/usb_pd_monitor,487158090,SystemVerilog,usb_pd_monitor,4625,12,2024-02-21 15:42:00+00:00,"['fpga', 'usb-pd', 'tang-nano-9k']",https://api.github.com/licenses/mit
8528,https://github.com/mbits-mirafra/apb_avip.git,2022-04-21 06:48:39+00:00,,6,mbits-mirafra/apb_avip,483938234,SystemVerilog,apb_avip,36492,12,2024-03-19 08:16:56+00:00,[],https://api.github.com/licenses/mit
8529,https://github.com/MinecraftMachina/FabricHDL.git,2022-03-13 16:58:29+00:00,A Verilog synthesis flow for Minecraft redstone circuits,1,MinecraftMachina/FabricHDL,469435750,SystemVerilog,FabricHDL,70617,11,2023-10-17 04:24:38+00:00,[],
8530,https://github.com/zwhexplorer/Spiking-Neural-Network-Accelerator-EE552-project.git,2022-03-27 02:34:43+00:00,Spiking Neural Network Accelerator,2,zwhexplorer/Spiking-Neural-Network-Accelerator-EE552-project,474516361,SystemVerilog,Spiking-Neural-Network-Accelerator-EE552-project,1729,10,2024-04-01 02:33:26+00:00,"['asynchronous', 'machine-learning', 'systemverilog', 'vlsi-design', 'neural-network']",
8531,https://github.com/iammituraj/skid_buffer.git,2022-03-26 14:36:13+00:00,Skid Buffer and Pipeline Skid Buffer designed in Verilog/System Verilog.,2,iammituraj/skid_buffer,474373713,SystemVerilog,skid_buffer,45,10,2024-04-07 09:17:18+00:00,"['buffer', 'pipeline', 'rtldesign']",
8532,https://github.com/va7deo/TerraCresta.git,2022-04-02 17:58:35+00:00,Nichibutsu Terra Cresta for MiSTerFPGA,2,va7deo/TerraCresta,477132127,SystemVerilog,TerraCresta,73547,10,2023-10-27 19:09:55+00:00,[],
8533,https://github.com/pulp-platform/gpio.git,2022-04-14 06:44:33+00:00,Parametric GPIO Peripheral ,4,pulp-platform/gpio,481495853,SystemVerilog,gpio,422,9,2024-01-19 19:22:59+00:00,[],
8534,https://github.com/wshenyi/EECS-470-FinalProject.git,2022-04-28 20:36:13+00:00,A 2-Way Super-Scalar OoO RISC-V Core Based on Intel P6 Microarchitecture.,0,wshenyi/EECS-470-FinalProject,486741195,SystemVerilog,EECS-470-FinalProject,1470,9,2024-04-09 05:00:56+00:00,[],https://api.github.com/licenses/mit
8535,https://github.com/mtabini/G76-Mini.git,2022-04-03 01:35:22+00:00,An inexpensive VGA circuit designed specifically for homebrew 8-bit computers,2,mtabini/G76-Mini,477211357,SystemVerilog,G76-Mini,5221,8,2024-01-30 09:16:23+00:00,[],https://api.github.com/licenses/mit
8536,https://github.com/mahmutefil/AXI2APB-Bridge-Design-and-Verification.git,2022-04-11 05:55:44+00:00,"In this repository, the RTL design and verification of the axi2apb bridge communication protocol are realized. In this system, the preferred AXI bus will be axi4-lite and the APB bus will be APB3. You can find the more detailed information about the bridge protocol by looking at the AXI to APB Bridge LogiCORE IP Product Guide. ",0,mahmutefil/AXI2APB-Bridge-Design-and-Verification,480245358,SystemVerilog,AXI2APB-Bridge-Design-and-Verification,186,8,2023-09-24 12:37:57+00:00,[],
8537,https://github.com/jopdorp/MiSTer-Discrete.git,2022-04-10 19:32:18+00:00,,0,jopdorp/MiSTer-Discrete,480119809,SystemVerilog,MiSTer-Discrete,53739,8,2024-02-16 10:46:21+00:00,[],https://api.github.com/licenses/gpl-3.0
8538,https://github.com/mbits-mirafra/pulpino__spi_master__subsystem_verification.git,2022-04-21 11:48:43+00:00,,4,mbits-mirafra/pulpino__spi_master__subsystem_verification,484030086,SystemVerilog,pulpino__spi_master__subsystem_verification,32426,7,2024-01-17 15:08:55+00:00,[],https://api.github.com/licenses/mit
8539,https://github.com/Hazem-ali/SystemVerilog-Codes.git,2022-05-01 10:40:20+00:00,System Verilog codes with their testbench,1,Hazem-ali/SystemVerilog-Codes,487509655,SystemVerilog,SystemVerilog-Codes,21,7,2023-12-06 17:15:16+00:00,[],
8540,https://github.com/Nimausfi/UVM_RAL_DMA.git,2022-05-07 00:10:06+00:00,,1,Nimausfi/UVM_RAL_DMA,489525057,SystemVerilog,UVM_RAL_DMA,135,7,2024-03-30 15:20:06+00:00,[],
8542,https://github.com/TrymenT-AlphA/MIPS-CPU.git,2022-03-09 11:56:35+00:00,MIPS CPU,0,TrymenT-AlphA/MIPS-CPU,467907529,SystemVerilog,MIPS-CPU,8,6,2022-03-09 13:09:42+00:00,[],https://api.github.com/licenses/mit
8543,https://github.com/mbits-mirafra/spi_avip.git,2022-04-21 11:42:51+00:00,,3,mbits-mirafra/spi_avip,484028328,SystemVerilog,spi_avip,53064,6,2024-01-15 05:56:36+00:00,[],https://api.github.com/licenses/mit
8544,https://github.com/CompuSAR/Apple2plus.git,2022-05-07 03:35:31+00:00,Apple 2 plus compatible implementation on an FPGA,1,CompuSAR/Apple2plus,489558579,SystemVerilog,Apple2plus,82,6,2023-12-27 20:56:22+00:00,[],https://api.github.com/licenses/gpl-3.0
8545,https://github.com/PhigentRobotics/Phigent_Heimdallr.git,2022-03-22 08:30:40+00:00,Phigent Heimdallr project use the SOM develop kits implemented a stereo application which can be deployed in the automotive vehicles etc.,3,PhigentRobotics/Phigent_Heimdallr,472676378,SystemVerilog,Phigent_Heimdallr,4290,6,2023-03-06 13:23:19+00:00,[],
8546,https://github.com/QianfengClarkShen/Tbps_CRC.git,2022-03-09 23:18:00+00:00,A SytemVerilog implementation of Cyclic Redundancy Check runs at up to Terabits per second,6,QianfengClarkShen/Tbps_CRC,468122441,SystemVerilog,Tbps_CRC,59,5,2023-10-10 18:15:36+00:00,[],https://api.github.com/licenses/mit
8547,https://github.com/guanzetong/OoO_processor.git,2022-04-23 22:08:08+00:00,"An R10K-style Out-of-Order, Arbitrary-way Superscalar, Simultaneous Multithreading RISC-V Processor in SystemVerilog",1,guanzetong/OoO_processor,484866753,SystemVerilog,OoO_processor,36382,5,2023-07-30 11:20:28+00:00,[],
8548,https://github.com/amichai-bd/CPUGarageChallenge.git,2022-03-26 18:50:19+00:00,Intel CPU Garage Challenge,0,amichai-bd/CPUGarageChallenge,474438309,SystemVerilog,CPUGarageChallenge,28555,5,2023-04-26 20:01:46+00:00,[],https://api.github.com/licenses/mit
8549,https://github.com/sandy30538/NTUEE-DCLAB-Materials.git,2022-04-28 04:09:49+00:00,The lab materials for NTUEE DCLab,8,sandy30538/NTUEE-DCLAB-Materials,486441484,SystemVerilog,NTUEE-DCLAB-Materials,86,4,2023-09-17 17:31:37+00:00,[],
8550,https://github.com/krallis/Game_Of_Life_A_Hardware_Implementation.git,2022-04-10 16:37:01+00:00,Implementation (in System Verilog) of a Cellular Automata (CA) grid that which runs under the rules of Conway's Game of Life (GoL),0,krallis/Game_Of_Life_A_Hardware_Implementation,480076793,SystemVerilog,Game_Of_Life_A_Hardware_Implementation,8,3,2022-12-20 15:47:31+00:00,[],
8551,https://github.com/YanWQ-monad/SUSTech_CS207_Project-Tangram.git,2022-05-02 17:08:25+00:00,,0,YanWQ-monad/SUSTech_CS207_Project-Tangram,487925865,SystemVerilog,SUSTech_CS207_Project-Tangram,846,3,2024-01-29 01:07:31+00:00,[],
8552,https://github.com/LinkZyy/fpga_puf_axi.git,2022-04-21 09:12:15+00:00,,0,LinkZyy/fpga_puf_axi,483982922,SystemVerilog,fpga_puf_axi,436,3,2024-03-20 07:18:33+00:00,[],
8553,https://github.com/merledu/verification_training.git,2022-03-14 12:13:35+00:00,verification training,6,merledu/verification_training,469718323,SystemVerilog,verification_training,519,3,2023-05-29 07:22:23+00:00,[],https://api.github.com/licenses/apache-2.0
8554,https://github.com/saweraxahra/AHB-lite-Verification-in-SystemVerilog.git,2022-03-31 08:43:58+00:00,EE-599f SoC SystemVerilog Final Project,1,saweraxahra/AHB-lite-Verification-in-SystemVerilog,476222840,SystemVerilog,AHB-lite-Verification-in-SystemVerilog,758,3,2023-08-11 06:27:41+00:00,"['verilog', 'fpga', 'systemverilog', 'verification-code', 'ahb3-lite', 'ahb3lite-memory']",
8555,https://github.com/WajahatRiaz/Simple-Memory-Verification.git,2022-04-24 22:57:45+00:00,This repository is a simple framework for verifying a memory using SystemVerilog on QuestaSim.,0,WajahatRiaz/Simple-Memory-Verification,485159656,SystemVerilog,Simple-Memory-Verification,11,3,2023-12-11 07:28:59+00:00,"['systemverilog', 'systemverilog-simulation', 'systemverilog-support', 'systemverilog-test-bench', 'layered-testbench', 'memory-verification']",https://api.github.com/licenses/bsd-3-clause
8556,https://github.com/fvutils/uvmf-full.git,2022-04-01 18:11:48+00:00,"Full UVM Framework snapshot, including docs",0,fvutils/uvmf-full,476824392,SystemVerilog,uvmf-full,18121,3,2023-08-06 20:59:29+00:00,[],https://api.github.com/licenses/apache-2.0
8557,https://github.com/MohamedAli25/APB-Agent.git,2022-03-11 16:24:34+00:00,,2,MohamedAli25/APB-Agent,468821766,SystemVerilog,APB-Agent,12,3,2023-11-14 05:49:55+00:00,[],
8558,https://github.com/jayhusemi/ravenoc.git,2022-05-04 01:03:00+00:00,,0,jayhusemi/ravenoc,488410687,SystemVerilog,ravenoc,2221,3,2023-11-26 04:54:34+00:00,[],https://api.github.com/licenses/mit
8559,https://github.com/mbits-mirafra/pulpino__spi_master__ip_verification.git,2022-04-21 11:46:46+00:00,,2,mbits-mirafra/pulpino__spi_master__ip_verification,484029476,SystemVerilog,pulpino__spi_master__ip_verification,30886,3,2023-05-29 07:49:34+00:00,[],https://api.github.com/licenses/mit
8560,https://github.com/SokesFly/ICdesign.git,2022-03-10 11:20:05+00:00,,0,SokesFly/ICdesign,468311353,SystemVerilog,ICdesign,34297,3,2023-02-23 03:46:56+00:00,[],
8561,https://github.com/cicero884/homework_judge.git,2022-04-19 07:08:46+00:00,A program for auto judge homework,0,cicero884/homework_judge,483135169,SystemVerilog,homework_judge,12,2,2023-06-07 11:22:49+00:00,[],
8562,https://github.com/ZXMicroJack/amstrad-cpc.git,2022-04-03 22:15:48+00:00,AmstradCPC core based on McLeod's core.,2,ZXMicroJack/amstrad-cpc,477479182,SystemVerilog,amstrad-cpc,679,2,2022-10-16 20:01:33+00:00,[],
8563,https://github.com/Ashwin-Rajesh/Cordic_accelerator.git,2022-03-07 05:17:13+00:00,Accelerator IP for computing transcendental functions using CORDIC algorithm,1,Ashwin-Rajesh/Cordic_accelerator,466952625,SystemVerilog,Cordic_accelerator,44714,2,2024-02-13 12:43:20+00:00,[],https://api.github.com/licenses/gpl-3.0
8564,https://github.com/techylax/healthmonitorsystem.git,2022-05-03 13:15:57+00:00,,0,techylax/healthmonitorsystem,488216983,SystemVerilog,healthmonitorsystem,761,2,2023-06-15 17:34:57+00:00,[],
8565,https://github.com/hassankhairi/SHA256-Hashing.git,2022-03-15 00:10:26+00:00,,0,hassankhairi/SHA256-Hashing,469946097,SystemVerilog,SHA256-Hashing,62,2,2022-05-21 21:50:08+00:00,[],
8566,https://github.com/SrikarVanavasam/systolic-array.git,2022-04-25 19:42:29+00:00,,0,SrikarVanavasam/systolic-array,485511373,SystemVerilog,systolic-array,244,2,2022-07-06 18:16:34+00:00,[],
8567,https://github.com/WeikangQiao/TopSort.git,2022-03-23 04:41:11+00:00,,4,WeikangQiao/TopSort,473038662,SystemVerilog,TopSort,342,2,2023-12-05 03:10:55+00:00,[],
8568,https://github.com/kirkster96/VerilogTutorials.git,2022-04-27 01:44:21+00:00,,2,kirkster96/VerilogTutorials,486007744,SystemVerilog,VerilogTutorials,112421,2,2023-12-15 14:52:54+00:00,[],
8569,https://github.com/YeuzhiHere/AHB-Lite-VIP.git,2022-03-06 19:07:49+00:00,,0,YeuzhiHere/AHB-Lite-VIP,466830868,SystemVerilog,AHB-Lite-VIP,22,2,2023-06-20 17:07:50+00:00,[],
8570,https://github.com/amrfatouh/digital-verification-codes.git,2022-03-08 22:04:45+00:00,,1,amrfatouh/digital-verification-codes,467690155,SystemVerilog,digital-verification-codes,5,2,2022-04-07 20:30:56+00:00,[],
8571,https://github.com/facebookexperimental/fnob.git,2022-03-10 06:30:34+00:00,Open source Fnob (Command-line Dynamic Random Generator) package;,3,facebookexperimental/fnob,468221745,SystemVerilog,fnob,46,2,2024-02-27 09:14:57+00:00,[],https://api.github.com/licenses/mit
8572,https://github.com/Nikola2444/RISC-V-vector-processor.git,2022-03-18 15:19:59+00:00,,1,Nikola2444/RISC-V-vector-processor,471417975,SystemVerilog,RISC-V-vector-processor,3419,2,2024-01-18 23:14:32+00:00,[],
8573,https://github.com/MarleyLobao/UVM_calculator.git,2022-03-29 12:06:12+00:00,"This repository is meant for learning UVM using SystemVerilog. Through a verification environment, some hardware verification concepts are applied for a calculator with the four basic operations.",0,MarleyLobao/UVM_calculator,475424449,SystemVerilog,UVM_calculator,133,2,2024-01-04 05:55:46+00:00,"['hardware-verification', 'uvm-verification', 'functional-verification']",
8574,https://github.com/JochiSt/AI_FPGA.git,2022-03-30 13:37:17+00:00,running ANN on an FPGA,0,JochiSt/AI_FPGA,475894943,SystemVerilog,AI_FPGA,320,2,2024-04-04 20:14:40+00:00,"['hls4ml', 'fpga', 'vivado', 'vivado-hls', 'neural-network', 'machine-learning']",https://api.github.com/licenses/gpl-3.0
8575,https://github.com/Taybaa/2021-MS-EE-49.git,2022-03-30 18:38:48+00:00,Verification_Plan,0,Taybaa/2021-MS-EE-49,476007709,SystemVerilog,2021-MS-EE-49,136,2,2023-09-09 08:39:04+00:00,[],
8576,https://github.com/Braalfa/VectorizedCPU.git,2022-04-15 18:07:44+00:00,,0,Braalfa/VectorizedCPU,482044611,SystemVerilog,VectorizedCPU,1322,2,2023-11-13 07:33:05+00:00,[],
8577,https://github.com/dywsjtu/2-Way-Superscalar-P6-Processor.git,2022-04-17 18:57:47+00:00, 2 Way Superscalar P6 Out of Order Processor,0,dywsjtu/2-Way-Superscalar-P6-Processor,482608597,SystemVerilog,2-Way-Superscalar-P6-Processor,11236,2,2023-03-27 15:42:36+00:00,"['cpu', 'risc-v', 'verilog', 'outoforder']",
8578,https://github.com/kopylovvasily/5G_Polar_Decoder.git,2022-04-06 23:20:39+00:00,,0,kopylovvasily/5G_Polar_Decoder,478757260,SystemVerilog,5G_Polar_Decoder,24566,2,2024-01-24 11:25:07+00:00,[],
8579,https://github.com/UDXS/e260c_adpcm.git,2022-04-26 01:03:22+00:00,,0,UDXS/e260c_adpcm,485586454,SystemVerilog,e260c_adpcm,12,2,2022-06-23 19:36:58+00:00,[],
8580,https://github.com/Minz9/SNN-on-FPGA.git,2022-04-26 16:09:37+00:00,SNN on FPGA,0,Minz9/SNN-on-FPGA,485858752,SystemVerilog,SNN-on-FPGA,205,2,2024-03-17 20:01:18+00:00,[],
8581,https://github.com/ShaheerSajid/RISCV-Compliant-Divider.git,2022-04-26 22:11:22+00:00,Synthesisable  RISCV 32bit Divider Verilog Implementation,1,ShaheerSajid/RISCV-Compliant-Divider,485963097,SystemVerilog,RISCV-Compliant-Divider,3,2,2022-09-25 23:43:09+00:00,"['divider', 'hdl', 'riscv', 'riscv32', 'rtl', 'verilog']",
8582,https://github.com/xiongrob/EECS470_final_proj.git,2022-03-12 02:54:27+00:00,Final project for EECS 470. An out of order processor that supports SMT.,0,xiongrob/EECS470_final_proj,468962580,SystemVerilog,EECS470_final_proj,37421,2,2024-04-05 08:24:56+00:00,[],
8583,https://github.com/Italiant/ELEC4720.git,2022-03-25 22:52:11+00:00,Programmable Logic Design,0,Italiant/ELEC4720,474185172,SystemVerilog,ELEC4720,243,1,2022-03-25 23:34:00+00:00,[],https://api.github.com/licenses/gpl-3.0
8584,https://github.com/EHammer98/BESJ-Basys3.git,2022-03-10 13:44:48+00:00,Code for a Basys3 board,0,EHammer98/BESJ-Basys3,468359988,SystemVerilog,BESJ-Basys3,86328,1,2022-03-29 08:33:28+00:00,[],
8585,https://github.com/mahmutefil/APB-Slave-Verification.git,2022-03-07 11:52:10+00:00,In this respiratory you'll be seeing the design and verification of the APB Slave protocol using SV Assertions and Coverage Directives and function coverage including covergroups and cross coverage.,0,mahmutefil/APB-Slave-Verification,467072641,SystemVerilog,APB-Slave-Verification,1560,1,2022-11-29 10:20:15+00:00,[],
8586,https://github.com/Vu-Gia-Khiem/I2C.git,2022-04-07 08:01:00+00:00,,0,Vu-Gia-Khiem/I2C,478884409,SystemVerilog,I2C,70,1,2023-07-01 03:40:41+00:00,[],
8587,https://github.com/ShaheerSajid/SM4-Verilog.git,2022-04-26 22:13:02+00:00,Synthesizable SM4 Verilog Implementation,0,ShaheerSajid/SM4-Verilog,485963448,SystemVerilog,SM4-Verilog,4,1,2022-05-02 21:25:07+00:00,"['sm4', 'verilog', 'cryptography', 'encryption', 'rtl']",
8588,https://github.com/312hzeng/FPGA_Pacman.git,2022-05-07 02:54:50+00:00,,0,312hzeng/FPGA_Pacman,489551340,SystemVerilog,FPGA_Pacman,73,1,2023-11-28 07:46:55+00:00,[],
8589,https://github.com/shawn110285/soc_ip.git,2022-04-09 07:00:54+00:00,"some open source IP used in the soc, including AHB, APB, Uart, SPI",0,shawn110285/soc_ip,479646426,SystemVerilog,soc_ip,1110,1,2024-03-20 09:11:51+00:00,[],
8590,https://github.com/Muhammad-Zohaib-Arshad/AMBA-AHB-Lite-Protocol-Verification.git,2022-03-31 14:41:19+00:00,"A Verification Project for ""AMBA AHB-Lite Protocol""",0,Muhammad-Zohaib-Arshad/AMBA-AHB-Lite-Protocol-Verification,476347572,SystemVerilog,AMBA-AHB-Lite-Protocol-Verification,746,1,2024-03-21 13:44:37+00:00,[],
8591,https://github.com/sfmth/basic-computer.git,2022-05-11 08:14:09+00:00,"Verilog Implementation of the Basic Computer introduced in the book ""Computer System Architecture by M. Morris Mano""",0,sfmth/basic-computer,491017172,SystemVerilog,basic-computer,539,1,2022-07-10 16:15:49+00:00,[],https://api.github.com/licenses/gpl-3.0
8592,https://github.com/ekonwang/MIPS-CPU-yikun.git,2022-03-17 10:07:32+00:00,A Developer version MIPS processor.,1,ekonwang/MIPS-CPU-yikun,470939788,SystemVerilog,MIPS-CPU-yikun,3154,1,2023-04-28 11:38:41+00:00,"['cpu', 'processor', 'mips', 'systemverilog', 'verilog']",https://api.github.com/licenses/gpl-3.0
8593,https://github.com/v1s10n-1/SPI-Module-in-SystemVerilog.git,2022-03-21 15:07:41+00:00,Master and Slaves modules connected via SPI interface,0,v1s10n-1/SPI-Module-in-SystemVerilog,472389924,SystemVerilog,SPI-Module-in-SystemVerilog,10059,1,2023-06-22 05:29:56+00:00,[],
8594,https://github.com/weisrc/nesv.git,2022-04-10 03:10:51+00:00,NESystem Verilog,0,weisrc/nesv,479899878,SystemVerilog,nesv,1162,1,2023-05-17 02:13:59+00:00,"['emscripten', 'emulator', 'systemverilog', 'verilator', 'webassembly', 'basys3', 'fpga', 'verilog', 'vivado', 'nes']",https://api.github.com/licenses/mit
8595,https://github.com/chirpdx/Bids22.git,2022-04-06 17:23:34+00:00,repo for ECE593 Assignments,0,chirpdx/Bids22,478659238,SystemVerilog,Bids22,50,1,2022-07-19 16:48:45+00:00,[],
8596,https://github.com/frymire/fsm-kc-705.git,2022-04-08 20:53:40+00:00,A VHDL finite state machine demo using a Xilinx KC-705,0,frymire/fsm-kc-705,479535516,SystemVerilog,fsm-kc-705,362,1,2022-06-07 05:40:32+00:00,[],
8597,https://github.com/LispEngineer/symbolics-console-kbdm.git,2022-05-08 02:31:14+00:00,Implementation of the Symbolics console Keyboard and Mouse input using standard PS/2 mouse and keyboard,0,LispEngineer/symbolics-console-kbdm,489827304,SystemVerilog,symbolics-console-kbdm,114,1,2022-07-19 21:25:41+00:00,[],
8598,https://github.com/lild4d4/usm_microcontroller_v1.git,2022-03-18 00:55:27+00:00,Undergraduate level RISC-V microcontroller,1,lild4d4/usm_microcontroller_v1,471190750,SystemVerilog,usm_microcontroller_v1,206,1,2022-05-12 23:17:14+00:00,"['cpu', 'entry-level', 'fpga', 'fpga-projects', 'microcontroller', 'riscv', 'riscv32', 'utfsm', 'nexys4ddr', 'xilinx', 'xilinx-fpga', 'amd', 'riscv-cpu']",
8599,https://github.com/geoneill12/zig-zag.git,2022-03-19 00:41:11+00:00,CPE 233 Final Project,0,geoneill12/zig-zag,471555338,SystemVerilog,zig-zag,118,1,2023-06-07 00:02:36+00:00,[],
8600,https://github.com/Minahil-Naveed/AHB-LITE-Interface-Verification.git,2022-03-31 10:13:20+00:00,Verification of AHB-LITE Interface,0,Minahil-Naveed/AHB-LITE-Interface-Verification,476252369,SystemVerilog,AHB-LITE-Interface-Verification,749,1,2022-06-30 09:16:44+00:00,[],
8601,https://github.com/charlotte-mu/ICC2020_univ.git,2022-03-31 09:25:18+00:00,2020 University College IC Design Contest / E_ICC2020_prelimily_univ_cell-based / String Matching Engine,0,charlotte-mu/ICC2020_univ,476236684,SystemVerilog,ICC2020_univ,646,1,2023-04-26 09:46:26+00:00,[],
8602,https://github.com/Rana-Yehya/Simple-ALU-design-and-UVM-verfication.git,2022-04-13 12:17:23+00:00,,0,Rana-Yehya/Simple-ALU-design-and-UVM-verfication,481203651,SystemVerilog,Simple-ALU-design-and-UVM-verfication,470,1,2024-04-10 08:28:23+00:00,[],
8603,https://github.com/archanakatariya/AHB-Protocol.git,2022-05-03 10:32:20+00:00,This Repository shows AHB Master-Slave Protocol (Design & SV Verification) ,0,archanakatariya/AHB-Protocol,488165725,SystemVerilog,AHB-Protocol,12,1,2023-01-17 07:13:02+00:00,[],
8604,https://github.com/devanshi-jain/max_finder.git,2022-04-29 16:06:59+00:00, Implementation of Automatic Gain Control with four different gain loops using an RTL level simulation is performed. The design is carried out using the systemVerilog HDL (Hardware Description Language). The resulting hardware design is compiled to fit into the FPGA hardware device : XC7Z010-1CLG400C.,0,devanshi-jain/max_finder,487033763,SystemVerilog,max_finder,76,1,2022-06-22 23:02:01+00:00,[],
8605,https://github.com/OmarAbdelSamea/system-verilog-scoreboard.git,2022-04-15 19:58:54+00:00,Simple system verilog program with a testbench example,0,OmarAbdelSamea/system-verilog-scoreboard,482070557,SystemVerilog,system-verilog-scoreboard,1282,1,2022-06-23 13:50:38+00:00,[],
8606,https://github.com/Soultopia/Heimdallr.git,2022-03-19 02:43:04+00:00,,0,Soultopia/Heimdallr,471574454,SystemVerilog,Heimdallr,42,1,2022-10-06 16:43:27+00:00,[],https://api.github.com/licenses/apache-2.0
8607,https://github.com/Marcuss2/crabriscv.git,2022-03-22 09:11:54+00:00,,0,Marcuss2/crabriscv,472689754,SystemVerilog,crabriscv,80936,1,2022-06-24 20:48:45+00:00,[],https://api.github.com/licenses/mit
8608,https://github.com/31shal/uvm-config-db-usage-in-UVM.git,2022-03-30 07:06:56+00:00,,0,31shal/uvm-config-db-usage-in-UVM,475760018,SystemVerilog,uvm-config-db-usage-in-UVM,25,1,2022-07-13 09:10:55+00:00,[],
8609,https://github.com/lild4d4/cpu_usm_v1.git,2022-03-16 18:07:58+00:00,Educative RISC-V CPU,0,lild4d4/cpu_usm_v1,470699236,SystemVerilog,cpu_usm_v1,1140,1,2022-03-16 18:11:36+00:00,[],
8610,https://github.com/pulp-platform/pulp-io.git,2022-04-13 21:18:22+00:00,IO Peripheral Wrapper for PULP SoCs,0,pulp-platform/pulp-io,481376872,SystemVerilog,pulp-io,196,1,2023-07-25 14:56:23+00:00,[],
8611,https://github.com/Starrynightzyq/my-uvm-demo.git,2022-05-10 11:29:49+00:00,,0,Starrynightzyq/my-uvm-demo,490667530,SystemVerilog,my-uvm-demo,633,1,2022-06-01 05:49:30+00:00,[],https://api.github.com/licenses/mit
8612,https://github.com/giacomovitangeli/light-hash-aes-sbox.git,2022-05-03 08:38:49+00:00,Project for Hardware and Embedded Security class in Cybersecurity course.,1,giacomovitangeli/light-hash-aes-sbox,488133942,SystemVerilog,light-hash-aes-sbox,2339,1,2023-02-07 11:23:55+00:00,"['hardware-security', 'hash-module', 'systemverilog']",
8613,https://github.com/XingJiangFelix/picoMIPS_SystemVerilog.git,2022-05-05 19:32:35+00:00,A microprocessor was designed using the picoMIPS architecture and run on an FPGA.,0,XingJiangFelix/picoMIPS_SystemVerilog,489102695,SystemVerilog,picoMIPS_SystemVerilog,451,1,2022-05-05 22:29:51+00:00,[],https://api.github.com/licenses/unlicense
8614,https://github.com/jideoyelayo1/PongGameVerilog.git,2022-04-02 10:29:31+00:00,A Pong Game made in Verilog,0,jideoyelayo1/PongGameVerilog,477021760,SystemVerilog,PongGameVerilog,4965,1,2023-11-30 02:18:11+00:00,"['fpga', 'nexys4ddr', 'pingpong', 'vivado']",https://api.github.com/licenses/mit
8615,https://github.com/xue59/ECE437-MIPS-CPU-Project.git,2022-04-26 00:26:20+00:00,,0,xue59/ECE437-MIPS-CPU-Project,485578322,SystemVerilog,ECE437-MIPS-CPU-Project,10846,1,2022-05-24 20:42:30+00:00,[],
8616,https://github.com/robfinch/BlackWidow.git,2022-04-22 11:47:45+00:00,BlackWidow Processor Core,0,robfinch/BlackWidow,484413590,SystemVerilog,BlackWidow,856,1,2022-05-02 19:05:15+00:00,[],
8617,https://github.com/tyleryouk/decodersandencoders.git,2022-05-03 02:45:19+00:00,,0,tyleryouk/decodersandencoders,488057924,SystemVerilog,decodersandencoders,1048,1,2022-11-15 19:59:24+00:00,[],
8618,https://github.com/RevanthNandamuri1341b0/APB_SLAVE-Verification-Environment.git,2022-03-12 15:07:46+00:00,Development Verification Environment for APB Slave IP,0,RevanthNandamuri1341b0/APB_SLAVE-Verification-Environment,469116466,SystemVerilog,APB_SLAVE-Verification-Environment,558,1,2023-05-31 07:04:00+00:00,[],
8619,https://github.com/2019-MSEE-40/Verification-of-AHB-Lite-Memory.git,2022-03-30 10:54:39+00:00,Project for course EE-599B: SoC Verification in System- Verilog,0,2019-MSEE-40/Verification-of-AHB-Lite-Memory,475836661,SystemVerilog,Verification-of-AHB-Lite-Memory,4507,1,2022-06-23 13:51:08+00:00,[],
8620,https://github.com/Ghilga/projeto-cci2-az80.git,2022-04-05 00:40:05+00:00,,0,Ghilga/projeto-cci2-az80,477923109,SystemVerilog,projeto-cci2-az80,17511,1,2022-05-09 22:52:25+00:00,[],
8621,https://github.com/gggmmm/minmax.git,2022-03-20 12:58:12+00:00,Module to find minimum or maximum of an array of values in SystemVerilog (synthesizable),0,gggmmm/minmax,471980499,SystemVerilog,minmax,236,1,2022-06-22 00:18:41+00:00,[],https://api.github.com/licenses/mit
8622,https://github.com/Nimausfi/UVM_TB_RAM.git,2022-05-03 19:20:17+00:00,,0,Nimausfi/UVM_TB_RAM,488335628,SystemVerilog,UVM_TB_RAM,8,1,2023-11-25 07:51:47+00:00,[],
8623,https://github.com/wjy99-c/HFuzz.git,2022-05-09 22:04:51+00:00,,1,wjy99-c/HFuzz,490457918,SystemVerilog,HFuzz,39972,1,2024-01-25 05:08:58+00:00,[],
8624,https://github.com/WilsonHWS159/2022Digital_IC_design.git,2022-04-02 16:31:13+00:00,Repository of digital IC design homeworks,1,WilsonHWS159/2022Digital_IC_design,477110656,SystemVerilog,2022Digital_IC_design,8635,1,2022-06-19 06:30:52+00:00,[],
8625,https://github.com/PrashanthHC16/RISCV-Vector-Processor.git,2022-04-10 16:23:54+00:00,,2,PrashanthHC16/RISCV-Vector-Processor,480073508,SystemVerilog,RISCV-Vector-Processor,6,1,2022-04-29 07:34:03+00:00,[],https://api.github.com/licenses/mit
8626,https://github.com/luisjo81/CE4301-ProyectoGrupal1.git,2022-04-25 23:36:54+00:00,Diseño e Implementación de un ASIP para interpolación de imágenes,0,luisjo81/CE4301-ProyectoGrupal1,485568463,SystemVerilog,CE4301-ProyectoGrupal1,3552,1,2022-06-22 22:20:53+00:00,[],
8627,https://github.com/SerLippo/sl_apb_vip.git,2022-04-22 01:59:19+00:00,This is a simple apb vip.,0,SerLippo/sl_apb_vip,484263184,SystemVerilog,sl_apb_vip,47,1,2022-04-22 02:12:51+00:00,[],https://api.github.com/licenses/mit
8628,https://github.com/ahmed192a/Digital-Verification-.git,2022-04-12 16:41:33+00:00,Assignments and Projects for CSE412:Digital Verification subject in Ain Shams University With DR. Ayman Wahba,0,ahmed192a/Digital-Verification-,480893318,SystemVerilog,Digital-Verification-,14687,1,2024-02-11 03:53:48+00:00,"['system-verification', 'systemverilog', 'verilog']",
8629,https://github.com/redchenjs/axi_video_gen.git,2022-04-03 05:01:27+00:00,AXI Video Generator,0,redchenjs/axi_video_gen,477242732,SystemVerilog,axi_video_gen,44,1,2022-06-05 07:50:17+00:00,[],
8630,https://github.com/GCET231/fpga_labs_21_2.git,2022-04-05 03:02:14+00:00,"Roteiros de laboratório de GCET231, semestre letivo 2021.2.",2,GCET231/fpga_labs_21_2,477955211,SystemVerilog,fpga_labs_21_2,14395,1,2022-05-20 23:59:41+00:00,[],
8631,https://github.com/leoqiao18/pacman.git,2022-04-08 17:49:37+00:00,,0,leoqiao18/pacman,479487445,SystemVerilog,pacman,87,1,2022-05-12 03:16:43+00:00,[],
8632,https://github.com/oliuba/Monte-Carlo-fpga.git,2022-04-27 18:47:04+00:00,Course project for Computer Systems Architecture. Accelerator for integral evaluation using Monte Carlo method in FPGA.,1,oliuba/Monte-Carlo-fpga,486313369,SystemVerilog,Monte-Carlo-fpga,16020,1,2022-05-29 15:15:48+00:00,[],https://api.github.com/licenses/mit
8633,https://github.com/primitives-2011/SPI_FLASH_CONTROLLER.git,2022-03-11 09:26:14+00:00,,0,primitives-2011/SPI_FLASH_CONTROLLER,468686144,SystemVerilog,SPI_FLASH_CONTROLLER,5,1,2023-11-06 09:33:28+00:00,[],https://api.github.com/licenses/mit
8634,https://github.com/omartarek206/Digital-Verification.git,2022-05-02 09:24:22+00:00,Some trials with system verilog.,0,omartarek206/Digital-Verification,487785407,SystemVerilog,Digital-Verification,43,1,2023-03-07 07:21:57+00:00,[],https://api.github.com/licenses/mit
8635,https://github.com/kostas2370/svquestions.git,2022-05-11 16:14:49+00:00,,0,kostas2370/svquestions,491185836,SystemVerilog,svquestions,2229,1,2023-06-05 18:30:17+00:00,[],
8636,https://github.com/WajahatRiaz/Serial-Peripheral-Interface.git,2022-04-17 10:08:33+00:00,,0,WajahatRiaz/Serial-Peripheral-Interface,482488313,SystemVerilog,Serial-Peripheral-Interface,18,1,2023-12-11 07:30:58+00:00,[],
8637,https://github.com/Shwetapatil05/uvm_framework.git,2022-05-03 11:01:10+00:00,,1,Shwetapatil05/uvm_framework,488173617,SystemVerilog,uvm_framework,35464,1,2022-07-13 08:59:40+00:00,[],
8638,https://github.com/JoseDavidSS/TDD.Single-Cycle_Processor.git,2022-04-29 15:26:56+00:00,"Proyecto Final para el curso de Taller de Diseño Digital. La idea es hacer un procesador uniciclo para procesar un texto utilizando los lenguajes de programación ARM, Python y SystemVerilog.",0,JoseDavidSS/TDD.Single-Cycle_Processor,487021422,SystemVerilog,TDD.Single-Cycle_Processor,590,1,2022-05-11 05:58:11+00:00,"['arm', 'armv7', 'processor', 'python', 'system-verilog', 'unicycle', 'digital-design', 'intel', 'quartus-prime']",https://api.github.com/licenses/gpl-3.0
8639,https://github.com/ameliaaltare/DES_SystemVerilog.git,2022-03-08 02:57:10+00:00,Data Encryption Standard system implemented in SystemVerilog,0,ameliaaltare/DES_SystemVerilog,467341711,SystemVerilog,DES_SystemVerilog,12,1,2022-03-25 05:24:16+00:00,[],
8640,https://github.com/SMAC-Zhang/Computer_Arch.git,2022-03-19 09:12:37+00:00,计算机组成与体系结构课程lab,0,SMAC-Zhang/Computer_Arch,471645417,SystemVerilog,Computer_Arch,322,1,2023-07-21 08:20:24+00:00,[],
8641,https://github.com/joshual777/Computers_Arquictecture_Project_2.git,2022-04-24 22:47:56+00:00,Application Specific Instruction Set Processor (ASIP),0,joshual777/Computers_Arquictecture_Project_2,485158107,SystemVerilog,Computers_Arquictecture_Project_2,32466,1,2022-06-22 21:53:53+00:00,[],
8642,https://github.com/ce-box/CE4302-vector-processor.git,2022-04-21 03:50:55+00:00,Vector ASIP for the application of filters to an image  🖼️,0,ce-box/CE4302-vector-processor,483897471,SystemVerilog,CE4302-vector-processor,58731,1,2022-06-22 22:22:04+00:00,"['computer-architecture', 'fpga', 'pipelined-processors', 'vector-processor', 'vhdl']",https://api.github.com/licenses/mit
8643,https://github.com/markos-stefanidis/riscv-rv32im-core.git,2022-05-09 16:58:13+00:00,System Verilog Implementation of a basic Risc-V core.,0,markos-stefanidis/riscv-rv32im-core,490371331,SystemVerilog,riscv-rv32im-core,176,1,2022-06-23 13:50:47+00:00,[],
8644,https://github.com/SnowWong/uart_vip.git,2022-04-08 15:59:31+00:00,,0,SnowWong/uart_vip,479453982,SystemVerilog,uart_vip,2416,1,2023-02-21 12:27:32+00:00,[],
8645,https://github.com/anttisalonen/veril.git,2022-03-31 10:34:10+00:00,"A tiny bitcoin miner written in SystemVerilog, tested with Arty S7 50 FPGA",0,anttisalonen/veril,476258681,SystemVerilog,veril,53,1,2022-11-18 17:10:16+00:00,[],https://api.github.com/licenses/gpl-3.0
8646,https://github.com/shlomizvi09/project-A.git,2022-04-15 12:06:37+00:00,this repository is for out 1st project in the VLSI lab at the Technion - Zero Normalized Cross-Correlation for Template Matching,0,shlomizvi09/project-A,481945959,SystemVerilog,project-A,328,1,2024-03-13 05:37:37+00:00,[],
8647,https://github.com/cw1997/ethernet-switch.git,2022-05-07 14:33:18+00:00,,0,cw1997/ethernet-switch,489697146,SystemVerilog,ethernet-switch,16,1,2023-03-07 03:04:40+00:00,[],https://api.github.com/licenses/apache-2.0
8648,https://github.com/DanielMSousa/Circuitos-logicos.git,2022-03-30 18:18:24+00:00,Repositório para salvar os arquivos de system-verilog das aulas de circuitos lógicos,1,DanielMSousa/Circuitos-logicos,476000757,SystemVerilog,Circuitos-logicos,39,1,2023-03-10 13:07:11+00:00,[],
8649,https://github.com/leemango1998/cv32e40x-sim.git,2022-05-06 11:09:06+00:00,,0,leemango1998/cv32e40x-sim,489322987,SystemVerilog,cv32e40x-sim,964,1,2023-03-22 07:38:02+00:00,[],
8650,https://github.com/HadiaKiran/AHB_Lite_SV_VIP.git,2022-03-06 21:13:51+00:00,This VIP considers AHB_slave as a DUT.,0,HadiaKiran/AHB_Lite_SV_VIP,466858055,SystemVerilog,AHB_Lite_SV_VIP,15,1,2022-11-01 09:35:04+00:00,[],
8651,https://github.com/groyvstreet/ABC.git,2022-03-07 12:09:03+00:00,,0,groyvstreet/ABC,467078279,SystemVerilog,ABC,89781,1,2022-09-25 23:02:23+00:00,[],
8652,https://github.com/dalibor-drgon/ultrasound-tof.git,2022-03-10 15:40:16+00:00,Distance measurement using ultrasound transcievers and fourier transform for FPGAs with ADCs,0,dalibor-drgon/ultrasound-tof,468405499,SystemVerilog,ultrasound-tof,19,1,2023-08-01 09:58:05+00:00,[],https://api.github.com/licenses/mit
8653,https://github.com/armanramiz/QuadCopter-Verilog.git,2022-03-16 05:18:44+00:00,UW Madison ECE551 Quadcopter class project.,0,armanramiz/QuadCopter-Verilog,470442401,SystemVerilog,QuadCopter-Verilog,18399,1,2022-03-16 06:17:13+00:00,[],
8654,https://github.com/JoseDavidSS/TDD.CoffeeMachine-Prototype.git,2022-05-05 05:34:32+00:00,Cuarto laboratorio del curso de Taller de Diseño Digital. La idea es generar un código compilable para una FPGA con la que se pueda simular el funcionamiento de máquina de café utilizando el lenguaje de programación SystemVerilog.,0,JoseDavidSS/TDD.CoffeeMachine-Prototype,488844285,SystemVerilog,TDD.CoffeeMachine-Prototype,448,1,2022-05-11 05:57:00+00:00,"['coffee-machine', 'intel', 'quartus-prime', 'system-verilog', 'digital-design']",https://api.github.com/licenses/gpl-3.0
8655,https://github.com/OutOfTheVoid/fpga_tesla_coil.git,2022-03-22 20:32:57+00:00,Verilog code for a (QCW)DRSSTC controller running on a Tang Nano 9k FPGA,0,OutOfTheVoid/fpga_tesla_coil,472928542,SystemVerilog,fpga_tesla_coil,22,1,2023-07-25 14:55:43+00:00,[],https://api.github.com/licenses/mit
8656,https://github.com/kashifminhas/AMBA-3-AHB-Lite.git,2022-03-06 12:30:47+00:00,System Verilog Test-bench for verification of AMBA 3 AHB-Lite,0,kashifminhas/AMBA-3-AHB-Lite,466731103,SystemVerilog,AMBA-3-AHB-Lite,30,1,2022-04-24 15:30:52+00:00,[],
8657,https://github.com/KinzaQamar/SV-OOP-Examples.git,2022-03-17 07:51:06+00:00,This repository contains the practice code related to SV OOP ,0,KinzaQamar/SV-OOP-Examples,470896220,SystemVerilog,SV-OOP-Examples,26,1,2022-06-13 07:06:47+00:00,[],https://api.github.com/licenses/apache-2.0
8658,https://github.com/EricJohanssoon/statistical_machine_translation.git,2022-04-28 12:28:56+00:00,,0,EricJohanssoon/statistical_machine_translation,486585255,SystemVerilog,statistical_machine_translation,2167,0,2022-04-28 12:29:27+00:00,[],
8659,https://github.com/YulunWu1102/ECE385_finalProject.git,2022-04-14 15:11:46+00:00,The repo for building ECE385 final project: tank-star,0,YulunWu1102/ECE385_finalProject,481650147,SystemVerilog,ECE385_finalProject,593369,0,2022-04-22 10:07:24+00:00,[],
8660,https://github.com/SnowWong/jtag_vip.git,2022-04-11 02:22:10+00:00,,0,SnowWong/jtag_vip,480198550,SystemVerilog,jtag_vip,1086,0,2022-04-11 02:25:35+00:00,[],https://api.github.com/licenses/gpl-2.0
8661,https://github.com/SnowWong/spi_vip.git,2022-04-08 15:54:30+00:00,,0,SnowWong/spi_vip,479452322,SystemVerilog,spi_vip,2355,0,2022-04-08 15:58:41+00:00,[],https://api.github.com/licenses/apache-2.0
8662,https://github.com/ZaferAttal/pulp_soc.git,2022-04-18 12:19:44+00:00,,0,ZaferAttal/pulp_soc,482835881,SystemVerilog,pulp_soc,496,0,2022-04-18 12:29:14+00:00,[],
8663,https://github.com/danther98/Single_Cycle_Arm_Proc.git,2022-03-12 23:57:11+00:00,A single cycle ARMv8 processor,0,danther98/Single_Cycle_Arm_Proc,469228115,SystemVerilog,Single_Cycle_Arm_Proc,851,0,2022-03-20 23:48:09+00:00,[],
8665,https://github.com/davidbiancolin/xrt-hwemu-firesim-tlm-bug.git,2022-03-07 21:56:19+00:00,,1,davidbiancolin/xrt-hwemu-firesim-tlm-bug,467271952,SystemVerilog,xrt-hwemu-firesim-tlm-bug,3544,0,2022-03-07 21:57:52+00:00,[],
8666,https://github.com/karenaciole/loac.git,2022-03-16 17:29:51+00:00,Repo pra guardar os códigos da disciplina de Lab. de Organização e Arquitetura de Computadores da UFCG,0,karenaciole/loac,470686715,SystemVerilog,loac,39,0,2022-10-07 01:37:26+00:00,['hacktoberfest'],
8667,https://github.com/abhay-30/Digital-Logic-and-Design-CS203.git,2022-04-30 08:22:37+00:00,,0,abhay-30/Digital-Logic-and-Design-CS203,487222132,SystemVerilog,Digital-Logic-and-Design-CS203,66,0,2022-07-23 16:05:53+00:00,[],
8668,https://github.com/ameenabudiak/Median-Filter-Pipelined-Architecture.git,2022-04-30 13:21:37+00:00,,0,ameenabudiak/Median-Filter-Pipelined-Architecture,487283027,SystemVerilog,Median-Filter-Pipelined-Architecture,1410,0,2022-05-29 19:50:14+00:00,[],
8669,https://github.com/tsanyi0119/Hw04.git,2022-05-01 18:11:32+00:00,,0,tsanyi0119/Hw04,487608522,SystemVerilog,Hw04,2,0,2022-05-01 18:12:39+00:00,[],
8670,https://github.com/AlExx1022/BCD-up-counter-with-postive-asynchronous-reset.git,2022-05-01 14:29:59+00:00,BCD up-counter with postive asynchronous reset,0,AlExx1022/BCD-up-counter-with-postive-asynchronous-reset,487558966,SystemVerilog,BCD-up-counter-with-postive-asynchronous-reset,1,0,2022-05-01 14:33:59+00:00,[],
8671,https://github.com/vukasinn-vtool/LAB.git,2022-03-15 14:54:39+00:00,,0,vukasinn-vtool/LAB,470207281,SystemVerilog,LAB,3,0,2022-03-15 17:18:38+00:00,[],
8672,https://github.com/MuntasirBabul/AXI.git,2022-03-18 17:00:45+00:00,,0,MuntasirBabul/AXI,471450104,SystemVerilog,AXI,16,0,2022-04-01 13:55:08+00:00,[],
8673,https://github.com/wei1105/-HW1.git,2022-03-28 03:37:47+00:00,,0,wei1105/-HW1,474833822,SystemVerilog,-HW1,1,0,2022-03-28 03:42:25+00:00,[],
8674,https://github.com/tsanyi0119/Hw01.git,2022-03-26 15:36:15+00:00,,0,tsanyi0119/Hw01,474389840,SystemVerilog,Hw01,5,0,2022-03-26 15:55:51+00:00,[],
8675,https://github.com/gabomora2200/systemVerilogPractice.git,2022-03-26 20:24:33+00:00,,0,gabomora2200/systemVerilogPractice,474458419,SystemVerilog,systemVerilogPractice,1246,0,2022-03-26 20:54:11+00:00,[],
8676,https://github.com/ElectronicsTinkerer/zmips-cpu.git,2022-04-05 03:14:19+00:00,Implementation of a MIPS-like CPU,1,ElectronicsTinkerer/zmips-cpu,477957967,SystemVerilog,zmips-cpu,195,0,2023-02-28 17:58:24+00:00,[],
8677,https://github.com/tdpham95127/sv_rnm.git,2022-04-22 18:11:54+00:00,,0,tdpham95127/sv_rnm,484529910,SystemVerilog,sv_rnm,1641,0,2022-04-22 18:12:48+00:00,[],
8678,https://github.com/Radiophantom/gpio_controller.git,2022-05-06 14:36:14+00:00,,0,Radiophantom/gpio_controller,489387671,SystemVerilog,gpio_controller,0,0,2022-05-06 14:56:53+00:00,[],
8679,https://github.com/Jogden330/Architecture_Design.git,2022-05-07 18:51:33+00:00,,0,Jogden330/Architecture_Design,489756935,SystemVerilog,Architecture_Design,17,0,2022-05-09 17:50:09+00:00,[],
8680,https://github.com/feipenghhq/FPGA-VGA.git,2022-04-28 04:10:12+00:00,,0,feipenghhq/FPGA-VGA,486441567,SystemVerilog,FPGA-VGA,571,0,2022-05-04 23:53:22+00:00,[],https://api.github.com/licenses/mit
8681,https://github.com/antoinemadec/uvm_training.git,2022-03-30 09:21:46+00:00,Learn how to build a complete UVM testbench,0,antoinemadec/uvm_training,475806393,SystemVerilog,uvm_training,374,0,2024-04-02 12:27:10+00:00,[],
8682,https://github.com/Sarah-56/Digital-Verification.git,2022-04-12 22:26:06+00:00,,0,Sarah-56/Digital-Verification,480991549,SystemVerilog,Digital-Verification,9047,0,2022-05-06 21:43:48+00:00,[],
8683,https://github.com/EricShelbogashev/lab_cpu.git,2022-05-10 12:31:34+00:00,Primitive sysVerilog processor,0,EricShelbogashev/lab_cpu,490687914,SystemVerilog,lab_cpu,57,0,2022-05-10 12:31:41+00:00,[],https://api.github.com/licenses/apache-2.0
8684,https://github.com/Andrew-LTC/ECE4305FinalProjectAndrewCardenas.git,2022-05-10 20:32:35+00:00,,0,Andrew-LTC/ECE4305FinalProjectAndrewCardenas,490851902,SystemVerilog,ECE4305FinalProjectAndrewCardenas,19,0,2023-01-26 20:59:18+00:00,[],
8685,https://github.com/mcdes/alephium.git,2022-05-06 10:54:23+00:00,,0,mcdes/alephium,489319080,SystemVerilog,alephium,490,0,2022-05-06 11:15:37+00:00,[],https://api.github.com/licenses/lgpl-3.0
8686,https://github.com/don-come/mips.git,2022-03-20 15:15:47+00:00,  MIPS processor in SystemVerilog. Made from scratch with limited instructions (from MIPS ISA),0,don-come/mips,472017532,SystemVerilog,mips,64,0,2022-03-20 16:05:37+00:00,[],
8687,https://github.com/rebecamedeiros/ceci_projeto01.git,2022-03-29 19:58:52+00:00,,0,rebecamedeiros/ceci_projeto01,475600594,SystemVerilog,ceci_projeto01,3,0,2022-03-29 23:50:59+00:00,[],
8688,https://github.com/yizhoushen/ARC4_Cracking.git,2022-04-06 05:25:28+00:00,,0,yizhoushen/ARC4_Cracking,478414796,SystemVerilog,ARC4_Cracking,139,0,2022-04-06 05:26:10+00:00,[],https://api.github.com/licenses/gpl-3.0
8689,https://github.com/LKinahan/simon.git,2022-04-06 16:46:30+00:00,,0,LKinahan/simon,478646491,SystemVerilog,simon,606,0,2022-04-06 16:48:17+00:00,[],
8690,https://github.com/supreetgulavani/bid_controller_ece593.git,2022-04-07 06:04:40+00:00,ECE 593 Fundamentals of Pre-Silicon Validation,0,supreetgulavani/bid_controller_ece593,478848629,SystemVerilog,bid_controller_ece593,228,0,2023-03-02 09:00:43+00:00,[],
8691,https://github.com/31shal/UART-receiver.git,2022-04-09 07:13:21+00:00,,0,31shal/UART-receiver,479649094,SystemVerilog,UART-receiver,1,0,2022-04-09 08:38:50+00:00,[],
8692,https://github.com/henriqueeraraujo/Projeto_concepcao_estruturada_T01de_circuitos_integrados.git,2022-04-18 13:37:17+00:00,,0,henriqueeraraujo/Projeto_concepcao_estruturada_T01de_circuitos_integrados,482859823,SystemVerilog,Projeto_concepcao_estruturada_T01de_circuitos_integrados,9252,0,2022-04-18 13:55:12+00:00,[],
8693,https://github.com/engyK/VLSI.git,2022-04-15 11:05:00+00:00,This repo includes all code snippets of Digital verification course in 4th Computer and systems department in faculty of Engineering Ain-Shams University.,0,engyK/VLSI,481931196,SystemVerilog,VLSI,3,0,2022-04-15 11:45:47+00:00,[],
8694,https://github.com/cse140l-sp22/lab2-starter.git,2022-04-18 05:28:24+00:00,,0,cse140l-sp22/lab2-starter,482725529,SystemVerilog,lab2-starter,11,0,2022-04-18 06:19:43+00:00,[],
8695,https://github.com/Lida89/bcd_encoder.git,2022-03-24 15:23:01+00:00,,0,Lida89/bcd_encoder,473662608,SystemVerilog,bcd_encoder,17,0,2022-03-24 18:22:17+00:00,[],
8696,https://github.com/tmddud20/MIPS_multi_cycle_with_bne.git,2022-04-29 10:40:27+00:00,modify MIPS multi cycle with bne instruction,0,tmddud20/MIPS_multi_cycle_with_bne,486933784,SystemVerilog,MIPS_multi_cycle_with_bne,4,0,2022-04-29 10:40:56+00:00,[],
8697,https://github.com/sage-lyon/HC-Lab4.git,2022-05-01 01:15:55+00:00,,0,sage-lyon/HC-Lab4,487417100,SystemVerilog,HC-Lab4,13894,0,2022-05-01 01:41:11+00:00,[],
8698,https://github.com/kitune-san/KF8088.git,2022-03-30 13:55:37+00:00,,0,kitune-san/KF8088,475902357,SystemVerilog,KF8088,17,0,2022-03-30 14:56:46+00:00,[],https://api.github.com/licenses/mit
8699,https://github.com/charlotte-mu/ICC2020_grad.git,2022-03-31 09:17:27+00:00,2020 University College IC Design Contest / B_ICC2020_prelimily_grad_cell-based / String Matching Engine,0,charlotte-mu/ICC2020_grad,476234043,SystemVerilog,ICC2020_grad,692,0,2022-03-31 09:19:06+00:00,[],
8700,https://github.com/Wauro21/ipd432_tarea_4.git,2022-03-31 00:06:53+00:00,Repositorio de la cuarta tarea del ramo IPD432,0,Wauro21/ipd432_tarea_4,476090927,SystemVerilog,ipd432_tarea_4,217366,0,2022-04-10 03:34:34+00:00,[],
8701,https://github.com/alexxpercy/ELEC341-C1-Coursework.git,2022-03-29 13:17:31+00:00,,0,alexxpercy/ELEC341-C1-Coursework,475451277,SystemVerilog,ELEC341-C1-Coursework,22,0,2022-03-29 13:17:36+00:00,[],
8702,https://github.com/Emerald52/HW1.git,2022-03-27 15:10:30+00:00,,0,Emerald52/HW1,474673546,SystemVerilog,HW1,4,0,2022-03-27 16:21:15+00:00,[],
8703,https://github.com/beeflobill/sv-vector.git,2022-04-01 15:56:00+00:00,A System Verilog utility for generating vector files,0,beeflobill/sv-vector,476783613,SystemVerilog,sv-vector,11,0,2022-04-01 16:09:49+00:00,[],https://api.github.com/licenses/apache-2.0
8704,https://github.com/qiuyi089/ECE351.git,2022-04-14 04:21:35+00:00,,0,qiuyi089/ECE351,481463844,SystemVerilog,ECE351,812,0,2022-04-14 04:22:08+00:00,[],
8705,https://github.com/tyleryouk/nbitaludesign.git,2022-05-03 02:25:51+00:00,,0,tyleryouk/nbitaludesign,488054279,SystemVerilog,nbitaludesign,1479,0,2022-05-03 02:27:52+00:00,[],
8706,https://github.com/akshitasahuji/Virtex-HDL.git,2022-05-04 09:05:01+00:00,This repository contains the Xilinx Vivado project for the Artix-7 (XC7A35T-1FTG256C) FPGA on Virtex.,0,akshitasahuji/Virtex-HDL,488519828,,Virtex-HDL,59837,0,2022-03-08 08:46:26+00:00,[],https://api.github.com/licenses/gpl-3.0
8707,https://github.com/CristinelRus/TSCLab.git,2022-03-07 08:11:42+00:00,Aici sunt laboratoarele mele de la TSC,0,CristinelRus/TSCLab,467000786,SystemVerilog,TSCLab,47519,0,2022-03-14 09:49:25+00:00,[],
8708,https://github.com/RoxanaGhiuzan/TSC.git,2022-03-07 08:13:13+00:00,,0,RoxanaGhiuzan/TSC,467001305,SystemVerilog,TSC,125,0,2022-03-14 11:51:19+00:00,[],
8709,https://github.com/roxanadimanescu/Laborator-TSC.git,2022-03-07 10:54:41+00:00,,0,roxanadimanescu/Laborator-TSC,467054939,SystemVerilog,Laborator-TSC,8250,0,2022-05-12 06:26:01+00:00,[],
8710,https://github.com/manofbeauty/uvm.git,2022-03-09 13:25:27+00:00,git uvm learn,0,manofbeauty/uvm,467937242,SystemVerilog,uvm,18,0,2022-03-09 14:21:48+00:00,[],
8711,https://github.com/UncleZhang13/LuKe_Learning.git,2022-03-12 04:25:42+00:00,,0,UncleZhang13/LuKe_Learning,468977930,SystemVerilog,LuKe_Learning,121,0,2022-03-12 04:26:36+00:00,[],
8712,https://github.com/DorianXGH/kmeans.git,2022-03-10 15:38:07+00:00,,0,DorianXGH/kmeans,468404684,SystemVerilog,kmeans,17,0,2022-03-10 15:38:56+00:00,[],https://api.github.com/licenses/gpl-3.0
8713,https://github.com/x11to/pulp_soc.git,2022-03-29 04:17:19+00:00,,0,x11to/pulp_soc,475277231,SystemVerilog,pulp_soc,474,0,2022-03-29 05:07:22+00:00,[],
8714,https://github.com/KinzaQamar/pwm-verification-IP.git,2022-04-19 15:52:04+00:00,This repository contains the verification IP of PWM peripheral,0,KinzaQamar/pwm-verification-IP,483311983,SystemVerilog,pwm-verification-IP,110,0,2022-05-02 07:56:20+00:00,[],https://api.github.com/licenses/apache-2.0
8715,https://github.com/SammyPark894/ECE532_Forward_Propagation_NN.git,2022-04-14 11:44:54+00:00,,0,SammyPark894/ECE532_Forward_Propagation_NN,481583242,SystemVerilog,ECE532_Forward_Propagation_NN,4912,0,2022-04-14 11:50:39+00:00,[],
8716,https://github.com/CozetteDyer/HSCA_fpadd.git,2022-05-09 16:25:56+00:00,Floating-Point Adder/Subtracter Design. Additional final project for High Speed Computer Arthematic.,0,CozetteDyer/HSCA_fpadd,490360801,SystemVerilog,HSCA_fpadd,4902,0,2022-09-12 20:53:26+00:00,[],
8717,https://github.com/AmrAhmed11/simple-verilog-game.git,2022-05-02 04:08:58+00:00,,0,AmrAhmed11/simple-verilog-game,487712227,SystemVerilog,simple-verilog-game,2,0,2022-05-02 04:10:39+00:00,[],
8718,https://github.com/nivethasaravanan1995/axi_connectors.git,2022-04-21 06:44:48+00:00,you can use this to connect the UART and RAM together,0,nivethasaravanan1995/axi_connectors,483937085,SystemVerilog,axi_connectors,18,0,2022-04-21 06:45:40+00:00,[],
8719,https://github.com/jhpohovey/PacMan-as-FPGA-SOC.git,2022-04-21 15:52:38+00:00,,0,jhpohovey/PacMan-as-FPGA-SOC,484114398,SystemVerilog,PacMan-as-FPGA-SOC,200282,0,2023-10-19 16:15:14+00:00,[],
8720,https://github.com/mhung230/HP-SRAM-Based-TCAM.git,2022-05-06 11:02:03+00:00,My project,1,mhung230/HP-SRAM-Based-TCAM,489321154,SystemVerilog,HP-SRAM-Based-TCAM,4,0,2022-05-06 11:03:19+00:00,[],
8721,https://github.com/Jogden330/RISC-V_Phone.git,2022-05-07 18:55:05+00:00,,0,Jogden330/RISC-V_Phone,489757683,SystemVerilog,RISC-V_Phone,17,0,2022-05-07 18:55:51+00:00,[],
8722,https://github.com/zjoann/VLSI-project.git,2022-04-29 15:34:01+00:00,,0,zjoann/VLSI-project,487023693,SystemVerilog,VLSI-project,10,0,2022-04-30 17:02:45+00:00,[],
8723,https://github.com/jeannellebalilo/basic-processor-Verilog.git,2022-04-29 22:11:58+00:00,,0,jeannellebalilo/basic-processor-Verilog,487122735,SystemVerilog,basic-processor-Verilog,9984,0,2023-09-05 20:57:20+00:00,[],
8724,https://github.com/jas-priatna/verilog_project.git,2022-03-15 23:02:45+00:00,,0,jas-priatna/verilog_project,470358497,SystemVerilog,verilog_project,198,0,2022-03-15 23:58:33+00:00,[],
8725,https://github.com/xuan37/school.git,2022-03-24 14:56:55+00:00,,0,xuan37/school,473652314,SystemVerilog,school,1,0,2022-03-24 14:57:16+00:00,[],
8726,https://github.com/doronshamgar/sv.git,2022-03-24 20:01:21+00:00,system verilog ,0,doronshamgar/sv,473755765,SystemVerilog,sv,4,0,2022-03-24 20:02:05+00:00,[],
8727,https://github.com/juliocrodri/risc-processor.git,2022-03-24 17:51:25+00:00,project modeling risc architecture,0,juliocrodri/risc-processor,473715202,SystemVerilog,risc-processor,8,0,2022-03-24 18:05:13+00:00,[],
8728,https://github.com/YanYuTu/2022_YHL.git,2022-03-24 17:53:27+00:00,,0,YanYuTu/2022_YHL,473715871,SystemVerilog,2022_YHL,4,0,2022-03-24 17:55:58+00:00,[],
8729,https://github.com/yunchiaaa/Homework1.git,2022-03-28 03:46:51+00:00,,0,yunchiaaa/Homework1,474835769,SystemVerilog,Homework1,1,0,2022-03-28 03:48:13+00:00,[],
8730,https://github.com/HandsomeKid666/Hierarchical-Design-of-3-8-decoder.git,2022-03-27 14:21:45+00:00,,0,HandsomeKid666/Hierarchical-Design-of-3-8-decoder,474660004,SystemVerilog,Hierarchical-Design-of-3-8-decoder,1,0,2022-03-27 14:26:09+00:00,[],
8731,https://github.com/SHestres/551_Project.git,2022-04-04 17:09:34+00:00,,2,SHestres/551_Project,477797666,SystemVerilog,551_Project,61108,0,2022-04-04 17:10:38+00:00,[],
8733,https://github.com/chuntiandemaiya/typical-digital-hardware-design.git,2022-03-16 07:46:27+00:00,some typical digital hardware designs,0,chuntiandemaiya/typical-digital-hardware-design,470481029,SystemVerilog,typical-digital-hardware-design,6,0,2022-03-16 07:50:18+00:00,[],
8734,https://github.com/visionvlsi/sv.git,2022-03-17 02:02:39+00:00,,0,visionvlsi/sv,470815196,SystemVerilog,sv,36,0,2022-03-28 15:37:18+00:00,[],
8735,https://github.com/York-Xu2020/verilog_study.git,2022-04-01 14:06:46+00:00,自己的学习代码,1,York-Xu2020/verilog_study,476745467,SystemVerilog,verilog_study,71,0,2022-04-01 14:07:40+00:00,[],
8736,https://github.com/andreapuia/TSC.git,2022-03-07 08:12:11+00:00,Lab TSC,0,andreapuia/TSC,467000947,SystemVerilog,TSC,8770,0,2022-03-14 10:26:52+00:00,[],
8737,https://github.com/NeverplayerMC/Laborator-TSC.git,2022-03-07 08:42:17+00:00,Repository pentru Laboratorul TSC,0,NeverplayerMC/Laborator-TSC,467010937,SystemVerilog,Laborator-TSC,8031,0,2022-03-15 14:23:12+00:00,[],
8738,https://github.com/LuceaSzabin/TSC.git,2022-03-07 10:44:08+00:00,,0,LuceaSzabin/TSC,467051520,SystemVerilog,TSC,448,0,2022-03-14 11:53:19+00:00,[],
8739,https://github.com/minyilong/simple10GbaseR.git,2022-03-09 07:34:57+00:00,FPGA low latency 10GBASE-R PCS ,3,minyilong/simple10GbaseR,467823295,,simple10GbaseR,203,0,2022-02-14 22:31:24+00:00,[],https://api.github.com/licenses/mit
8740,https://github.com/stefanz13/LAB.git,2022-03-10 13:38:50+00:00,Lab - system verilog,0,stefanz13/LAB,468357821,SystemVerilog,LAB,12,0,2022-03-14 11:06:34+00:00,[],
8741,https://github.com/mhung230/Multiphication-of-Floating-Point-Number.git,2022-05-06 11:10:58+00:00,,0,mhung230/Multiphication-of-Floating-Point-Number,489323469,SystemVerilog,Multiphication-of-Floating-Point-Number,28,0,2022-05-06 11:11:59+00:00,[],
8742,https://github.com/zozo5085/Win-or-Tail-Decision-Machine.git,2022-04-23 13:51:19+00:00,,0,zozo5085/Win-or-Tail-Decision-Machine,484760630,SystemVerilog,Win-or-Tail-Decision-Machine,2,0,2022-04-23 13:51:57+00:00,[],
8743,https://github.com/gary3123/HW3.git,2022-04-23 18:07:57+00:00,邏設實驗_HW3,0,gary3123/HW3,484821970,SystemVerilog,HW3,2,0,2022-04-23 18:12:28+00:00,[],
8744,https://github.com/AlessandroZanatta/Hardware-Embedded-Security.git,2022-05-06 13:28:10+00:00,,0,AlessandroZanatta/Hardware-Embedded-Security,489365201,SystemVerilog,Hardware-Embedded-Security,1352,0,2023-05-14 09:27:37+00:00,[],
8745,https://github.com/tyleryouk/updowncounter.git,2022-05-03 02:51:42+00:00,,0,tyleryouk/updowncounter,488059228,SystemVerilog,updowncounter,2156,0,2022-05-03 02:53:18+00:00,[],
8746,https://github.com/Logan-M-51/TCES-330-Project.git,2022-05-11 01:27:46+00:00,CPU architecture made in Verilog using the Quartus Prime IDE,0,Logan-M-51/TCES-330-Project,490915959,SystemVerilog,TCES-330-Project,21,0,2022-05-11 01:32:45+00:00,[],
8747,https://github.com/tyleryouk/gateinstantiation.git,2022-05-03 02:11:55+00:00,,0,tyleryouk/gateinstantiation,488051486,SystemVerilog,gateinstantiation,380,0,2022-05-03 02:16:30+00:00,[],
8748,https://github.com/ibnelwalid/ibex.git,2022-03-28 10:13:37+00:00,Adding crypto extension to ibex core,0,ibnelwalid/ibex,474947681,SystemVerilog,ibex,8517,0,2022-09-24 19:30:48+00:00,[],https://api.github.com/licenses/apache-2.0
8749,https://github.com/Khadija-Maryam/Verification_of-AHB-LITE-Memory.git,2022-03-31 02:46:18+00:00,,0,Khadija-Maryam/Verification_of-AHB-LITE-Memory,476126563,SystemVerilog,Verification_of-AHB-LITE-Memory,117,0,2022-04-21 08:48:34+00:00,[],
8750,https://github.com/juliocrodri/FiFo-sysverilog.git,2022-03-24 17:57:57+00:00,FiFo hardware with system verilog,0,juliocrodri/FiFo-sysverilog,473717293,SystemVerilog,FiFo-sysverilog,9,0,2022-03-24 17:59:25+00:00,[],
8751,https://github.com/Violet24K/ECE385-FinalProject.git,2022-03-25 11:25:37+00:00,ZJU-UIUC ECE 385 Fall 2021 Final Project: FePpaGiA,1,Violet24K/ECE385-FinalProject,473981925,SystemVerilog,ECE385-FinalProject,100149,0,2022-06-03 01:30:38+00:00,[],
8752,https://github.com/Bella0916/0325_HW1.git,2022-03-24 13:30:42+00:00,,0,Bella0916/0325_HW1,473618861,SystemVerilog,0325_HW1,1,0,2022-03-24 13:38:03+00:00,[],
8753,https://github.com/arsbw2802/ECE385_FinalProject.git,2022-04-13 03:55:43+00:00,,0,arsbw2802/ECE385_FinalProject,481063033,SystemVerilog,ECE385_FinalProject,4014,0,2022-04-21 21:27:10+00:00,[],
8754,https://github.com/UmerShahidengr/FP_Division.git,2022-04-12 12:55:55+00:00,"SystemVerilog based IEEE-754 Floating Point Division Algorithm which is direct translation of the C source file, part of the SoftFloat IEEE Floating-Point Arithmetic Package, Release 3d, by John R. Hauser.",0,UmerShahidengr/FP_Division,480810626,SystemVerilog,FP_Division,21,0,2022-04-12 12:59:39+00:00,[],
8755,https://github.com/olivamadrigal/DFT-in-SystemVerilog.git,2022-04-21 21:14:58+00:00,Discrete Fourier transform for Fast Multiplication in SystemVerilog ,0,olivamadrigal/DFT-in-SystemVerilog,484207134,SystemVerilog,DFT-in-SystemVerilog,671,0,2022-04-21 22:28:10+00:00,[],https://api.github.com/licenses/mit
8756,https://github.com/feipenghhq/FPGA-SDRAM.git,2022-04-20 02:13:07+00:00,,1,feipenghhq/FPGA-SDRAM,483476104,SystemVerilog,FPGA-SDRAM,75,0,2022-04-25 05:27:51+00:00,[],https://api.github.com/licenses/mit
8757,https://github.com/ZaferAttal/cv32e40p.git,2022-04-19 12:46:46+00:00,,0,ZaferAttal/cv32e40p,483243342,SystemVerilog,cv32e40p,826,0,2022-04-19 13:00:27+00:00,[],
8758,https://github.com/VoicuLiviu/Tsc.git,2022-03-07 12:40:46+00:00,,0,VoicuLiviu/Tsc,467088844,SystemVerilog,Tsc,15682,0,2022-03-15 09:19:03+00:00,[],
8759,https://github.com/Gharbaoui/learn-verilog.git,2022-03-17 18:47:54+00:00,,0,Gharbaoui/learn-verilog,471103897,SystemVerilog,learn-verilog,42743,0,2022-04-27 14:28:49+00:00,[],
8760,https://github.com/tallerditigales/lab3.git,2022-03-17 16:13:00+00:00,,0,tallerditigales/lab3,471053080,SystemVerilog,lab3,48287,0,2022-08-31 08:21:27+00:00,[],
8761,https://github.com/eden9209/router.git,2022-03-06 15:53:19+00:00,,0,eden9209/router,466783537,SystemVerilog,router,8,0,2022-03-06 16:07:57+00:00,[],
8762,https://github.com/HaojiongZhang/SLC-3.git,2022-03-17 15:29:51+00:00,Simplified version of the original LC-3 programmed on SystemVerilog,0,HaojiongZhang/SLC-3,471035335,SystemVerilog,SLC-3,23,0,2022-03-17 15:33:37+00:00,[],
8763,https://github.com/DragonPrime10/DES.git,2022-03-17 22:10:25+00:00,A foray into creating a DES through system verilog,0,DragonPrime10/DES,471157826,SystemVerilog,DES,3685,0,2022-03-26 22:18:47+00:00,[],
8764,https://github.com/Viktorhs/Trabalho_5-Grupo-E-MicMic.git,2022-03-20 21:24:33+00:00,,0,Viktorhs/Trabalho_5-Grupo-E-MicMic,472106463,SystemVerilog,Trabalho_5-Grupo-E-MicMic,1391,0,2022-03-20 21:26:06+00:00,[],
8765,https://github.com/tsanyi0119/Hw02.git,2022-04-03 06:53:29+00:00,,0,tsanyi0119/Hw02,477262075,SystemVerilog,Hw02,5,0,2022-04-03 07:01:26+00:00,[],
8766,https://github.com/khadija-ali/AHB-Lite-Verification.git,2022-03-31 10:10:36+00:00,A verification project for AHB-Lite Interface,1,khadija-ali/AHB-Lite-Verification,476251495,SystemVerilog,AHB-Lite-Verification,778,0,2022-04-12 15:06:31+00:00,[],
8767,https://github.com/albingomes/i2s_rcvr.git,2022-04-01 03:48:10+00:00,Inter-IC Sound (i2s) receiver,0,albingomes/i2s_rcvr,476565000,SystemVerilog,i2s_rcvr,11,0,2022-04-01 04:42:41+00:00,[],
8768,https://github.com/vj-sananda/open-source-formal.git,2022-03-27 22:50:19+00:00,,0,vj-sananda/open-source-formal,474778735,SystemVerilog,open-source-formal,18,0,2022-03-27 22:54:58+00:00,[],
8769,https://github.com/mahparaiqbal18/AHB-LITE.git,2022-03-29 21:15:03+00:00,,0,mahparaiqbal18/AHB-LITE,475621849,SystemVerilog,AHB-LITE,2210,0,2022-04-11 00:04:42+00:00,[],
8770,https://github.com/rcjng/JARchitecture.git,2022-04-29 23:16:30+00:00,,0,rcjng/JARchitecture,487133661,SystemVerilog,JARchitecture,106,0,2022-08-30 05:51:54+00:00,[],
8771,https://github.com/AditiPandey1999/intel-fpga-bbb-expt.git,2022-04-27 14:23:52+00:00,,0,AditiPandey1999/intel-fpga-bbb-expt,486224465,SystemVerilog,intel-fpga-bbb-expt,1532,0,2022-04-27 14:24:21+00:00,[],
8772,https://github.com/quswarabid/AHBLitePart2.git,2022-03-08 06:50:36+00:00,,2,quswarabid/AHBLitePart2,467396468,SystemVerilog,AHBLitePart2,19,0,2023-08-09 16:24:38+00:00,[],
8773,https://github.com/feilonghome/xilinx_exams.git,2022-04-16 01:21:05+00:00,,0,feilonghome/xilinx_exams,482125142,SystemVerilog,xilinx_exams,13,0,2022-04-16 02:45:31+00:00,[],
8774,https://github.com/ZaferAttal/cv32e40p_test.git,2022-04-18 13:54:03+00:00,,0,ZaferAttal/cv32e40p_test,482865383,SystemVerilog,cv32e40p_test,5388,0,2022-04-19 12:46:35+00:00,[],
8775,https://github.com/OscarAraya18/CE3201-Laboratorio-3.git,2022-03-12 19:02:38+00:00,,0,OscarAraya18/CE3201-Laboratorio-3,469174990,SystemVerilog,CE3201-Laboratorio-3,16906,0,2022-03-12 20:52:03+00:00,[],
8776,https://github.com/Lucas-fm1/dct.git,2022-03-15 18:58:57+00:00,A combinational hardware implementation for the DCT transform,0,Lucas-fm1/dct,470294550,SystemVerilog,dct,6,0,2022-03-15 19:54:33+00:00,[],
8777,https://github.com/SangTruongTan/Mock1_RMIT.git,2022-05-10 01:25:20+00:00,,0,SangTruongTan/Mock1_RMIT,490499730,SystemVerilog,Mock1_RMIT,7329,0,2022-05-10 01:25:54+00:00,[],
8778,https://github.com/beatrizaf/Verificacao-Funcional.git,2022-04-14 20:59:09+00:00,⚡ Projetos desenvolvidos em SystemVerilog na disciplina de Verificação Funcional,0,beatrizaf/Verificacao-Funcional,481747976,SystemVerilog,Verificacao-Funcional,17,0,2022-04-15 01:38:42+00:00,[],
8779,https://github.com/jbates35/sv_guitar_filter.git,2022-03-11 23:00:39+00:00,Final Project for ELEX 7660,0,jbates35/sv_guitar_filter,468923947,SystemVerilog,sv_guitar_filter,49,0,2022-03-14 22:13:30+00:00,[],
8780,https://github.com/Radecki226/FPGA-Jacobi.git,2022-05-03 20:15:14+00:00,,1,Radecki226/FPGA-Jacobi,488350265,SystemVerilog,FPGA-Jacobi,52834,0,2022-06-21 22:46:58+00:00,[],
8781,https://github.com/yousei-github/EFDDCA.git,2022-04-05 05:37:32+00:00,"Examples from the textbook ""Digital Design and Computer Architecture: ARM Edition.""",0,yousei-github/EFDDCA,477989466,SystemVerilog,EFDDCA,38,0,2022-04-05 05:43:19+00:00,[],
8782,https://github.com/vtkhatri/bids22.git,2022-04-06 03:24:04+00:00,,0,vtkhatri/bids22,478387580,SystemVerilog,bids22,332,0,2022-04-27 17:59:53+00:00,[],
8783,https://github.com/phanendhar/DPRAM-SV-environment.git,2022-04-06 05:09:34+00:00,"This folder gives the environment blocks of verifying any logic design, but specifically DPRAM.",0,phanendhar/DPRAM-SV-environment,478411197,SystemVerilog,DPRAM-SV-environment,4,0,2022-04-06 05:11:20+00:00,[],
8784,https://github.com/Kayagrp/8-bit-processor.git,2022-04-11 08:12:23+00:00,,0,Kayagrp/8-bit-processor,480286424,SystemVerilog,8-bit-processor,208,0,2022-04-11 08:16:05+00:00,[],
8785,https://github.com/aoyin1106/valid_ready_handshake.git,2022-04-03 04:38:04+00:00,,0,aoyin1106/valid_ready_handshake,477238875,SystemVerilog,valid_ready_handshake,1287,0,2022-04-03 04:38:32+00:00,[],
8786,https://github.com/AleksaHeler/PNRS2-Projekat.git,2022-04-11 11:57:54+00:00,Projekat iz predmeta Projektovanje Namenskih Racunarskih Sistema 2 (UVM),0,AleksaHeler/PNRS2-Projekat,480359634,SystemVerilog,PNRS2-Projekat,51804,0,2022-04-17 20:13:25+00:00,[],
8787,https://github.com/JUARSO/Lab4_VGA.git,2022-05-02 00:57:31+00:00,Laboratorio #4 del curso de taller de diseno digital,0,JUARSO/Lab4_VGA,487678746,SystemVerilog,Lab4_VGA,38675,0,2022-05-02 04:49:19+00:00,[],
8788,https://github.com/Lebedb/cross_bar.git,2022-03-17 17:42:23+00:00,,0,Lebedb/cross_bar,471083665,SystemVerilog,cross_bar,1862,0,2022-03-17 18:18:23+00:00,[],
8789,https://github.com/varunsax12/Virtual_Channel_Router.git,2022-03-21 03:58:38+00:00,ECE 6115: Project of configurable virtual channel router,0,varunsax12/Virtual_Channel_Router,472179831,SystemVerilog,Virtual_Channel_Router,2081,0,2022-05-02 17:15:26+00:00,[],
8790,https://github.com/555Ivan/8-bitRISC-proc.git,2022-05-07 06:42:19+00:00,"8-bit single cycle RISC processor using the MIPS architecture. Effectively done, last step is synthesis for now.",0,555Ivan/8-bitRISC-proc,489592578,SystemVerilog,8-bitRISC-proc,27,0,2022-06-02 05:29:17+00:00,[],
8791,https://github.com/DedeGeorge/Laboratoare-TSC.git,2022-03-07 08:10:46+00:00,,0,DedeGeorge/Laboratoare-TSC,467000492,SystemVerilog,Laboratoare-TSC,16085,0,2022-03-14 09:50:12+00:00,[],
8792,https://github.com/clauralu/Lab-TSC.git,2022-03-07 10:49:51+00:00,,0,clauralu/Lab-TSC,467053371,SystemVerilog,Lab-TSC,8121,0,2022-03-14 12:12:29+00:00,[],
8793,https://github.com/PopaLorena/TSC.git,2022-03-07 10:13:58+00:00,,0,PopaLorena/TSC,467041705,SystemVerilog,TSC,8236,0,2022-03-14 11:50:18+00:00,[],
8794,https://github.com/BogdanAmariutei/Laborator-TSC.git,2022-03-07 12:18:22+00:00,,0,BogdanAmariutei/Laborator-TSC,467081293,SystemVerilog,Laborator-TSC,15573,0,2022-03-15 11:52:25+00:00,[],
8795,https://github.com/SnowWong/i2c_vip.git,2022-04-08 16:08:20+00:00,,0,SnowWong/i2c_vip,479456708,SystemVerilog,i2c_vip,11802,0,2022-04-08 16:10:43+00:00,[],https://api.github.com/licenses/apache-2.0
8796,https://github.com/Nekkit6/kyznechik.git,2022-03-24 11:18:14+00:00,,0,Nekkit6/kyznechik,473573537,SystemVerilog,kyznechik,3164,0,2022-05-16 15:41:17+00:00,[],
8797,https://github.com/Darcywantloli/Hierarchical-Design-of-3-8-decoder.git,2022-03-28 02:37:59+00:00,,0,Darcywantloli/Hierarchical-Design-of-3-8-decoder,474820421,SystemVerilog,Hierarchical-Design-of-3-8-decoder,3,0,2022-04-10 10:49:02+00:00,[],
8798,https://github.com/chasebastian/ECE-260C-HW1.git,2022-04-15 04:09:41+00:00,,0,chasebastian/ECE-260C-HW1,481832655,SystemVerilog,ECE-260C-HW1,1,0,2022-04-15 04:12:40+00:00,[],
8799,https://github.com/cw-johnson/SARADC5.git,2022-04-13 20:39:54+00:00,,0,cw-johnson/SARADC5,481367848,SystemVerilog,SARADC5,3,0,2022-04-13 20:40:21+00:00,[],
8800,https://github.com/Shreyas-borse/4-tap-16-bit-unsigned-averaging-FIR-filter.git,2022-03-30 05:31:23+00:00,,0,Shreyas-borse/4-tap-16-bit-unsigned-averaging-FIR-filter,475732744,SystemVerilog,4-tap-16-bit-unsigned-averaging-FIR-filter,546,0,2022-03-30 06:22:18+00:00,[],
8801,https://github.com/henrylin777/StringMatchingEngine.git,2022-03-29 17:38:42+00:00,string matching engine via verilog,0,henrylin777/StringMatchingEngine,475553131,SystemVerilog,StringMatchingEngine,3,0,2022-03-29 17:42:56+00:00,[],
8802,https://github.com/AhmadNawaz-5/AHB-LITE-Protocol-Verification.git,2022-03-31 12:11:53+00:00,,0,AhmadNawaz-5/AHB-LITE-Protocol-Verification,476290059,SystemVerilog,AHB-LITE-Protocol-Verification,2269,0,2022-04-13 10:25:46+00:00,[],
8803,https://github.com/acostillado/msg_parser.git,2022-03-28 09:47:06+00:00,Message parser,0,acostillado/msg_parser,474938894,SystemVerilog,msg_parser,167,0,2022-03-28 09:49:16+00:00,[],
8804,https://github.com/Nymexis/2ASEI_Z_Buffer_2022.git,2022-05-03 12:13:31+00:00,Projet 2A SEI sur la description RTL d'un Z-Buffer. Réalisé par SEGALL Camille & TARDY Clément (2A SEI 2022).,0,Nymexis/2ASEI_Z_Buffer_2022,488196633,SystemVerilog,2ASEI_Z_Buffer_2022,85,0,2022-05-03 12:40:12+00:00,[],
8805,https://github.com/mfkiwl/riscv-soc.git,2022-03-18 07:07:48+00:00,Simple SoC based on custom RISC-V CPU,0,mfkiwl/riscv-soc,471268672,,riscv-soc,2,0,2022-06-15 12:52:01+00:00,[],https://api.github.com/licenses/mit
8806,https://github.com/tomkuzma/7660_Assgnment_3.git,2022-03-22 04:31:09+00:00,Assignment 3 For ELEX 7660 BCIT BEng Progam,0,tomkuzma/7660_Assgnment_3,472614610,SystemVerilog,7660_Assgnment_3,2,0,2022-03-22 07:40:32+00:00,[],
8807,https://github.com/MorgalNikita/coder-encoder.git,2022-03-22 18:47:38+00:00,,0,MorgalNikita/coder-encoder,472895655,SystemVerilog,coder-encoder,3,0,2022-03-22 18:49:07+00:00,[],
8808,https://github.com/Belinda900207/verilog0324_hw.git,2022-03-24 15:56:40+00:00,,0,Belinda900207/verilog0324_hw,473675283,SystemVerilog,verilog0324_hw,3,0,2022-03-24 17:18:38+00:00,[],
8809,https://github.com/swetharajagopalan17/UVM.git,2022-04-04 13:27:47+00:00,,0,swetharajagopalan17/UVM,477713117,SystemVerilog,UVM,395,0,2022-08-03 22:45:53+00:00,[],
8810,https://github.com/jmcandido/Codigos-SystemVerilog.git,2022-04-04 17:40:55+00:00,"Exemplos de circuitos combinacionais e sequenciais, utilizando a linguagem de descrição de hardware System Verilog.",0,jmcandido/Codigos-SystemVerilog,477808667,SystemVerilog,Codigos-SystemVerilog,35355,0,2022-04-04 18:31:19+00:00,[],
8811,https://github.com/kpmcc/verilator_sdl.git,2022-04-04 18:49:46+00:00,Up and running with Verilator and SDL for Hardware Graphics Stuff,0,kpmcc/verilator_sdl,477832271,SystemVerilog,verilator_sdl,10,0,2022-04-07 01:39:02+00:00,[],
8812,https://github.com/soreniac/desECEN3233.git,2022-03-27 01:59:07+00:00,,0,soreniac/desECEN3233,474511207,SystemVerilog,desECEN3233,187,0,2022-03-27 02:01:01+00:00,[],
8813,https://github.com/el17ak/soc_fetal_ecg.git,2022-03-25 15:35:04+00:00,DE1-SoC implementation of Fetal ECG project with ARM Cortex-A9 usage (ARM DS-5),0,el17ak/soc_fetal_ecg,474067099,SystemVerilog,soc_fetal_ecg,1949,0,2022-05-24 00:10:22+00:00,[],
8814,https://github.com/kashifminhas/UVM_PROJECT_AHB3_SLAVE.git,2022-03-27 07:27:21+00:00,Directed Testing of AHB3_SLAVE,0,kashifminhas/UVM_PROJECT_AHB3_SLAVE,474565870,SystemVerilog,UVM_PROJECT_AHB3_SLAVE,8999,0,2022-06-09 07:16:12+00:00,[],
8815,https://github.com/Wishah-Naseer/PWM-peripheral.git,2022-03-10 16:58:33+00:00,,0,Wishah-Naseer/PWM-peripheral,468434910,SystemVerilog,PWM-peripheral,14,0,2022-03-10 17:02:18+00:00,[],
8816,https://github.com/JennToo/j2fam.git,2022-04-08 17:49:12+00:00,HDL implementation of an NES,0,JennToo/j2fam,479487333,SystemVerilog,j2fam,77,0,2022-04-17 23:15:29+00:00,[],
8817,https://github.com/atticusrussell/MIPS.git,2022-04-14 05:43:22+00:00,A pipelined MIPS microprocessor written in VHDL and simulated in Xilinx Vivado targeting Basys3 board. Simplified MIPS instruction set. Made in RIT DSD2 (CMPE-260).,0,atticusrussell/MIPS,481480656,SystemVerilog,MIPS,461,0,2023-06-18 13:02:23+00:00,"['clock-speed', 'dsd2', 'fpga', 'mips', 'processor', 'vhdl', 'vivado']",
8818,https://github.com/lrayan7/project-a-microprocessor.git,2022-04-02 14:05:30+00:00,,0,lrayan7/project-a-microprocessor,477072267,SystemVerilog,project-a-microprocessor,93,0,2022-04-03 14:20:41+00:00,[],
8819,https://github.com/RehanEjaz/timer_peripheral_random_stimulus.git,2022-03-13 17:00:19+00:00,timer peripheral with APB interface tested on random stimulus and auto checking logic for tests passing or failing,0,RehanEjaz/timer_peripheral_random_stimulus,469436183,SystemVerilog,timer_peripheral_random_stimulus,12,0,2022-03-13 17:10:42+00:00,[],
8820,https://github.com/cemkayhan/odd_even_sort.git,2022-03-12 10:13:47+00:00,Odd Even Sort algorithm implemented with Vitis HLS,0,cemkayhan/odd_even_sort,469046957,SystemVerilog,odd_even_sort,557,0,2022-03-12 10:25:08+00:00,[],
8821,https://github.com/uki-a/ibex_alu_custom.git,2022-03-11 03:01:07+00:00,Written in SystemVerilog,0,uki-a/ibex_alu_custom,468588255,SystemVerilog,ibex_alu_custom,12,0,2023-02-11 02:41:57+00:00,[],
8822,https://github.com/MorgalNikita/cross_bar.git,2022-03-13 23:08:50+00:00,Syntacore task cross-bar,0,MorgalNikita/cross_bar,469517828,SystemVerilog,cross_bar,108,0,2022-03-14 23:17:58+00:00,[],
8823,https://github.com/dbids/fir_uvm.git,2022-05-10 02:20:14+00:00,UVM testbench for FIR filter.  Done as part of a class learning UVM.,0,dbids/fir_uvm,490512484,SystemVerilog,fir_uvm,9,0,2022-05-10 02:23:39+00:00,[],https://api.github.com/licenses/mit
8824,https://github.com/wruggeri/hdl_designs.git,2022-04-11 13:07:57+00:00,Hardware designs developed in my free time,0,wruggeri/hdl_designs,480384522,SystemVerilog,hdl_designs,474,0,2022-05-03 22:09:08+00:00,[],https://api.github.com/licenses/gpl-2.0
8825,https://github.com/AlExx1022/Win-Tail-Decision-Machine.git,2022-04-24 03:00:58+00:00,,0,AlExx1022/Win-Tail-Decision-Machine,484910208,SystemVerilog,Win-Tail-Decision-Machine,2,0,2022-04-24 03:01:58+00:00,[],
8826,https://github.com/TylerGraham74/DLD-DES-Code-Breaker.git,2022-04-29 18:55:26+00:00,Brute force code breaker for DES algorithm.,0,TylerGraham74/DLD-DES-Code-Breaker,487080330,SystemVerilog,DLD-DES-Code-Breaker,1033,0,2022-04-29 18:55:55+00:00,[],
8827,https://github.com/Wenlinhan/zcash-fpga.git,2022-04-22 16:52:34+00:00,,0,Wenlinhan/zcash-fpga,484508000,SystemVerilog,zcash-fpga,32021,0,2022-04-22 16:53:35+00:00,[],https://api.github.com/licenses/gpl-3.0
8828,https://github.com/Ubuintu/Verilog.git,2022-05-01 05:58:31+00:00,Playground for verilog projects,0,Ubuintu/Verilog,487458138,SystemVerilog,Verilog,1737,0,2022-05-17 03:47:59+00:00,[],
8829,https://github.com/razvanmartinescu/LaboratorTSC.git,2022-03-07 10:11:43+00:00,Laborator TSC,0,razvanmartinescu/LaboratorTSC,467040971,SystemVerilog,LaboratorTSC,8223,0,2022-03-14 11:51:01+00:00,[],
8830,https://github.com/AndreeaCiuse/TSC.git,2022-03-07 12:33:52+00:00,,0,AndreeaCiuse/TSC,467086469,SystemVerilog,TSC,8278,0,2022-03-14 21:23:30+00:00,[],
8831,https://github.com/jnestor/mips_L_pipeline.git,2022-04-14 15:39:36+00:00,,0,jnestor/mips_L_pipeline,481659036,SystemVerilog,mips_L_pipeline,505,0,2022-04-14 15:56:03+00:00,[],
8832,https://github.com/jnestor/mips_L_multi.git,2022-03-31 13:04:31+00:00,"  This is a modified version of the Single-Cycle MIPS processor design from Digital Design and Computer Architecture"" (2nd ed.) by David M. Harris and Sarah L. Harris (Morgan-Kaufmann, 2013).",0,jnestor/mips_L_multi,476308966,SystemVerilog,mips_L_multi,582,0,2022-03-31 13:31:25+00:00,[],
8833,https://github.com/atondwalkar/matrix_processor.git,2022-04-14 05:46:14+00:00,matrix processor axi peripheral for ast tpu 2.0,0,atondwalkar/matrix_processor,481481317,SystemVerilog,matrix_processor,105,0,2022-04-14 18:46:21+00:00,[],
8834,https://github.com/LinYuMachi/EncodeDecodeISA.git,2022-05-11 01:31:34+00:00,,0,LinYuMachi/EncodeDecodeISA,490916821,SystemVerilog,EncodeDecodeISA,18,0,2022-05-11 01:34:22+00:00,[],
8835,https://github.com/yumeyumeko-cym/Image-Decompressor.git,2022-05-09 00:19:57+00:00,,0,yumeyumeko-cym/Image-Decompressor,490085822,SystemVerilog,Image-Decompressor,18021,0,2022-05-09 00:22:27+00:00,[],
8836,https://github.com/ananestorovic/VLSI-Verification.git,2022-04-25 17:26:06+00:00,Verification of Design Under the Testing,0,ananestorovic/VLSI-Verification,485467952,SystemVerilog,VLSI-Verification,5,0,2022-09-11 11:48:38+00:00,[],
8837,https://github.com/chaseblock/Ultra96Miner.git,2022-04-19 23:05:12+00:00,Some files for creating a miner on the Ultra96 development board's programmable logic. Does not include the necessary vivado project for integration.,0,chaseblock/Ultra96Miner,483435916,SystemVerilog,Ultra96Miner,42,0,2022-04-19 23:06:31+00:00,[],
8838,https://github.com/barawn/exanic_turf_test.git,2022-04-03 16:11:51+00:00,Test firmware for the ExaNIC X25 to be used for TURF testing,0,barawn/exanic_turf_test,477394536,SystemVerilog,exanic_turf_test,1782,0,2022-04-20 02:02:19+00:00,[],
8839,https://github.com/Heelos200/FSM.git,2022-04-03 16:22:12+00:00,FSM built into DE10-Lite FPGA Board,0,Heelos200/FSM,477397265,SystemVerilog,FSM,2,0,2022-04-03 16:22:39+00:00,[],
8840,https://github.com/JenniferZyf0220/Systola.git,2022-04-02 18:56:38+00:00,A WIP SystemVerilog loosely-coupled systolic array architecture neural network inference accelerator,3,JenniferZyf0220/Systola,477145231,,Systola,111,0,2022-03-23 22:38:59+00:00,[],https://api.github.com/licenses/mit
8841,https://github.com/Shoreshen/yosys_learn.git,2022-04-09 02:09:22+00:00,,0,Shoreshen/yosys_learn,479592714,SystemVerilog,yosys_learn,14044,0,2022-08-09 01:38:01+00:00,[],
8842,https://github.com/carloseduardocsf/CL2.git,2022-04-13 14:17:22+00:00,Códigos em SystemVerilog feitos durante a cadeira de Circuitos Lógicos 2.,0,carloseduardocsf/CL2,481245726,SystemVerilog,CL2,19,0,2022-04-13 14:21:38+00:00,[],https://api.github.com/licenses/mit
8843,https://github.com/ZiadAlMoqamar/multimode-counter-game-system-verilog.git,2022-04-13 08:57:52+00:00,,0,ZiadAlMoqamar/multimode-counter-game-system-verilog,481142941,SystemVerilog,multimode-counter-game-system-verilog,13,0,2022-04-23 19:28:30+00:00,[],
8844,https://github.com/tmoody10/Theodore-Moody-Projects.git,2022-04-18 20:18:18+00:00,,0,tmoody10/Theodore-Moody-Projects,482984803,SystemVerilog,Theodore-Moody-Projects,450,0,2022-04-18 20:33:46+00:00,[],
8845,https://github.com/QueMona98/cpe333_otter.git,2022-04-21 15:55:19+00:00,,0,QueMona98/cpe333_otter,484115297,SystemVerilog,cpe333_otter,6949,0,2022-04-21 17:38:23+00:00,[],
8846,https://github.com/mhung230/RV32I.git,2022-05-06 11:03:55+00:00,My project of RV32I,0,mhung230/RV32I,489321605,SystemVerilog,RV32I,19,0,2022-05-06 11:05:26+00:00,[],
8847,https://github.com/jayhusemi/MPSoC-NoC.git,2022-05-04 01:04:44+00:00,,0,jayhusemi/MPSoC-NoC,488411035,SystemVerilog,MPSoC-NoC,11520,0,2022-05-04 01:05:10+00:00,[],https://api.github.com/licenses/mit
8848,https://github.com/31shal/APB-Slave-.git,2022-04-07 04:15:13+00:00,,0,31shal/APB-Slave-,478823399,SystemVerilog,APB-Slave-,4,0,2022-04-08 06:40:36+00:00,[],
8849,https://github.com/udif/CPUcamp.git,2022-03-28 06:14:02+00:00,My entry for intel's design challenge (galdv/CPUcamp repo),0,udif/CPUcamp,474869658,SystemVerilog,CPUcamp,13149,0,2022-04-09 21:17:56+00:00,[],
8850,https://github.com/jnestor/mips_L_single.git,2022-03-24 18:41:50+00:00,"Extended MIPS single-cycle pedagogical design from Harris & Harris ""Digital Design and Computer Architecture""",0,jnestor/mips_L_single,473731789,SystemVerilog,mips_L_single,202,0,2022-03-24 18:47:58+00:00,[],
8851,https://github.com/Shils2030/Individual-Coursework.git,2022-03-23 13:26:38+00:00,,0,Shils2030/Individual-Coursework,473199909,SystemVerilog,Individual-Coursework,39,0,2022-04-08 12:38:17+00:00,[],
8852,https://github.com/Stan15/Space-Raiders-FPGA.git,2022-03-22 16:19:17+00:00,Space invaders-like game built on an FPGA using System Verilog,0,Stan15/Space-Raiders-FPGA,472841151,SystemVerilog,Space-Raiders-FPGA,45565,0,2022-04-12 01:25:37+00:00,[],
8853,https://github.com/sober31/uvmprimer.git,2022-03-14 03:06:39+00:00,,0,sober31/uvmprimer,469562760,SystemVerilog,uvmprimer,6021,0,2022-03-14 03:06:54+00:00,[],
8854,https://github.com/inQuitiVe/DCLAB-Final.git,2022-03-14 03:19:50+00:00,,0,inQuitiVe/DCLAB-Final,469565528,SystemVerilog,DCLAB-Final,436,0,2022-03-14 03:22:46+00:00,[],
8855,https://github.com/marytwtw18/NCTU-DCS.git,2022-03-19 15:52:13+00:00,NCTU Digital design and system class homework and lab,0,marytwtw18/NCTU-DCS,471741587,SystemVerilog,NCTU-DCS,4398,0,2022-03-28 15:33:30+00:00,[],
8856,https://github.com/jquentino/micmic-trab6.git,2022-03-31 23:03:40+00:00,,0,jquentino/micmic-trab6,476505083,SystemVerilog,micmic-trab6,15,0,2022-06-22 21:19:35+00:00,[],
8857,https://github.com/danib08/TallerDigitales-1S2022.git,2022-03-23 17:03:13+00:00,,0,danib08/TallerDigitales-1S2022,473282413,SystemVerilog,TallerDigitales-1S2022,288,0,2022-03-23 17:21:24+00:00,[],
8858,https://github.com/AckyZhang/RiscV_zjuclass.git,2022-03-24 11:36:23+00:00,,0,AckyZhang/RiscV_zjuclass,473579380,SystemVerilog,RiscV_zjuclass,41114,0,2022-12-22 06:50:32+00:00,[],
8859,https://github.com/Sean1410932011/1410932011.git,2022-03-25 03:23:28+00:00,,0,Sean1410932011/1410932011,473854251,SystemVerilog,1410932011,1,0,2022-03-25 03:27:19+00:00,[],
8860,https://github.com/Furqan-Lamp/AHB-Lite-Slave-Design-Verification-Environment.git,2022-03-08 05:40:10+00:00,,1,Furqan-Lamp/AHB-Lite-Slave-Design-Verification-Environment,467378878,SystemVerilog,AHB-Lite-Slave-Design-Verification-Environment,234,0,2022-03-08 05:46:12+00:00,[],
8861,https://github.com/MJurczak-PMarchut/SDUP_2022_MJ_PM.git,2022-03-08 18:03:07+00:00,,0,MJurczak-PMarchut/SDUP_2022_MJ_PM,467622752,SystemVerilog,SDUP_2022_MJ_PM,139,0,2022-03-08 18:15:20+00:00,[],
8862,https://github.com/Cristinaioana/TSC.git,2022-03-07 08:15:55+00:00,Laboratoare,0,Cristinaioana/TSC,467002241,SystemVerilog,TSC,8476,0,2022-03-14 09:54:52+00:00,[],
8863,https://github.com/andreeapopovici9929/TSC.git,2022-03-07 08:12:19+00:00,,0,andreeapopovici9929/TSC,467001000,SystemVerilog,TSC,23876,0,2022-03-14 09:52:14+00:00,[],
8864,https://github.com/connor226/Digital-Circuit-Lab.git,2022-03-07 08:12:44+00:00,NTUEE digital circuit lab 2022 Spring,0,connor226/Digital-Circuit-Lab,467001153,SystemVerilog,Digital-Circuit-Lab,12988,0,2022-03-08 08:57:45+00:00,[],
8865,https://github.com/Ruffus26/TSC.git,2022-03-07 10:06:05+00:00,Laborator TSC,0,Ruffus26/TSC,467039205,SystemVerilog,TSC,8170,0,2022-03-14 11:50:40+00:00,[],
8866,https://github.com/balognorbert98/TSC.git,2022-03-07 10:44:27+00:00,,0,balognorbert98/TSC,467051631,SystemVerilog,TSC,8513,0,2022-03-14 12:00:13+00:00,[],
8867,https://github.com/jaylenburne/C1-jaylen.git,2022-03-07 15:40:08+00:00,,0,jaylenburne/C1-jaylen,467155415,SystemVerilog,C1-jaylen,55,0,2022-03-07 15:40:12+00:00,[],
8868,https://github.com/Fursanov/AVS.git,2022-03-07 16:25:00+00:00,,0,Fursanov/AVS,467171592,SystemVerilog,AVS,43798,0,2022-09-27 21:04:58+00:00,[],
8869,https://github.com/cpt-harlock/risc-v-verilog.git,2022-04-02 14:09:19+00:00,,0,cpt-harlock/risc-v-verilog,477073308,SystemVerilog,risc-v-verilog,71,0,2022-04-09 18:59:30+00:00,[],https://api.github.com/licenses/agpl-3.0
8870,https://github.com/IggyJ/final-year-project.git,2022-04-16 21:25:09+00:00,RISC-V CPU with UART and I2C extensions,0,IggyJ/final-year-project,482364515,SystemVerilog,final-year-project,33,0,2023-03-30 12:05:49+00:00,[],
8871,https://github.com/Mioriarty/Hardwareprojekte.git,2022-04-14 11:07:45+00:00,,0,Mioriarty/Hardwareprojekte,481572774,SystemVerilog,Hardwareprojekte,47303,0,2022-05-12 10:27:20+00:00,[],
8872,https://github.com/tyleryouk/tbirds.git,2022-05-03 02:55:57+00:00,,0,tyleryouk/tbirds,488060065,SystemVerilog,tbirds,2214,0,2022-05-03 02:59:31+00:00,[],
8873,https://github.com/CompuSAR/uart.git,2022-05-06 00:55:16+00:00,Yet another UART FPGA implementation,0,CompuSAR/uart,489170686,SystemVerilog,uart,9,0,2022-05-06 00:55:51+00:00,[],
8874,https://github.com/mhung230/Carry-Look-Ahead-Adder.git,2022-05-06 11:16:20+00:00,My project for this algorithm,0,mhung230/Carry-Look-Ahead-Adder,489324944,SystemVerilog,Carry-Look-Ahead-Adder,1,0,2022-05-06 11:16:49+00:00,[],
8875,https://github.com/jayhusemi/tnoc.git,2022-05-03 22:07:22+00:00,,0,jayhusemi/tnoc,488376492,SystemVerilog,tnoc,362,0,2022-05-03 22:07:48+00:00,[],https://api.github.com/licenses/apache-2.0
8876,https://github.com/hello-eternity/test_orv64_uhdm.git,2022-04-23 12:44:21+00:00,,1,hello-eternity/test_orv64_uhdm,484744628,SystemVerilog,test_orv64_uhdm,24605,0,2022-04-23 13:42:17+00:00,[],https://api.github.com/licenses/bsd-3-clause
8877,https://github.com/Andrew-LTC/ECE4305Lab12.git,2022-04-23 22:22:57+00:00,,0,Andrew-LTC/ECE4305Lab12,484869048,SystemVerilog,ECE4305Lab12,2,0,2023-01-26 21:00:17+00:00,[],
8878,https://github.com/cjl99/HEAX-NTT.git,2022-05-01 06:35:52+00:00,Reproduce HEAX NTT Module,0,cjl99/HEAX-NTT,487464373,SystemVerilog,HEAX-NTT,12,0,2023-04-09 07:58:41+00:00,[],
8879,https://github.com/DragonPrime10/CryptoCracking.git,2022-04-30 20:22:44+00:00,Cracking a DES encryption key using an FPGA,0,DragonPrime10/CryptoCracking,487373824,SystemVerilog,CryptoCracking,5918,0,2022-04-30 20:23:42+00:00,[],
8880,https://github.com/mstfalkan/digitaldesign.git,2022-03-27 16:41:20+00:00,The projects which are done for Digital Design Laboratory course.,0,mstfalkan/digitaldesign,474697587,SystemVerilog,digitaldesign,577,0,2022-06-02 21:31:54+00:00,[],
8881,https://github.com/imubarek/TabulationHashing.git,2022-03-31 20:39:35+00:00,,0,imubarek/TabulationHashing,476470949,SystemVerilog,TabulationHashing,131,0,2022-03-31 20:40:27+00:00,[],
8882,https://github.com/shlyapo/Labs_ABC.git,2022-04-04 18:04:58+00:00,,0,shlyapo/Labs_ABC,477817228,SystemVerilog,Labs_ABC,80277,0,2022-06-21 10:39:51+00:00,[],
8883,https://github.com/MabinMat/DE-10Lite_RCcar.git,2022-04-01 18:56:17+00:00,,0,MabinMat/DE-10Lite_RCcar,476836612,SystemVerilog,DE-10Lite_RCcar,190,0,2022-04-01 18:57:34+00:00,[],
8884,https://github.com/HiracharleFranklin/KOF-implementation-based-on-FPGA.git,2022-04-23 01:31:08+00:00,"This project implements the classical video game Streetfighter on an FPGA board and SystemVerilog Language. Our design includes NIOS II SoC for interfacing with a USB Keyboard as the game controller to manage the keyboard input. The main game logic is supported by FSMs. The animation is done through a sequence of sprites controlled by an animation FSM. The background, sprites and music are stored in SRAM as buffers.",1,HiracharleFranklin/KOF-implementation-based-on-FPGA,484616620,SystemVerilog,KOF-implementation-based-on-FPGA,17469,0,2022-04-23 01:32:45+00:00,[],
8885,https://github.com/dbrody112/Computer-Architecture-4-bit-CPU.git,2022-04-21 20:55:28+00:00,4-bit computer created y Dan Brody and Colin Hwang,0,dbrody112/Computer-Architecture-4-bit-CPU,484202424,SystemVerilog,Computer-Architecture-4-bit-CPU,2467,0,2022-05-15 20:30:35+00:00,[],
8886,https://github.com/AnastasiaMCunningham/PWM-Generator.git,2022-04-20 19:17:21+00:00,"In SystemVerilog -- Takes in configuration settings and data to be represented as a PWM, outputs PWM. ",0,AnastasiaMCunningham/PWM-Generator,483783943,SystemVerilog,PWM-Generator,28,0,2022-04-20 22:49:46+00:00,[],
8887,https://github.com/tmddud20/MIPS_single_cycle_with_bne.git,2022-04-29 10:37:42+00:00,modify MISP single-cycle for bne instruction,0,tmddud20/MIPS_single_cycle_with_bne,486933108,SystemVerilog,MIPS_single_cycle_with_bne,3,0,2022-04-29 10:39:55+00:00,[],
8888,https://github.com/peterzhong2001/EE469_CPU.git,2022-04-10 22:12:03+00:00,,0,peterzhong2001/EE469_CPU,480152501,SystemVerilog,EE469_CPU,17,0,2022-04-10 22:22:10+00:00,[],
8889,https://github.com/31shal/AXI-slave.git,2022-04-08 13:23:54+00:00,,0,31shal/AXI-slave,479400024,SystemVerilog,AXI-slave,1,0,2022-04-08 19:51:14+00:00,[],
8890,https://github.com/mohamedbouaziztn/C256BreakTheBrick.git,2022-04-11 23:37:19+00:00,,1,mohamedbouaziztn/C256BreakTheBrick,480586708,SystemVerilog,C256BreakTheBrick,111954,0,2022-04-11 23:51:49+00:00,[],
8891,https://github.com/semanurozyilmaz/RISC-V-TABANLI-ISLEMCI-TASARIMI.git,2022-04-11 19:09:33+00:00,RISC-V TABANLI İŞLEMCİ TASARIMI,0,semanurozyilmaz/RISC-V-TABANLI-ISLEMCI-TASARIMI,480516781,SystemVerilog,RISC-V-TABANLI-ISLEMCI-TASARIMI,1362,0,2022-04-11 19:12:06+00:00,[],
8892,https://github.com/KuiHouLiao/HW3.git,2022-05-09 00:31:06+00:00,,0,KuiHouLiao/HW3,490087601,SystemVerilog,HW3,5,0,2022-05-09 00:34:34+00:00,[],
8893,https://github.com/Karthikeyan564/tester_ci.git,2022-05-10 16:50:56+00:00,,0,Karthikeyan564/tester_ci,490785007,SystemVerilog,tester_ci,658,0,2022-05-10 17:01:34+00:00,[],
8894,https://github.com/JustinWang781/Clocked_Adder_UVM.git,2022-03-27 00:33:25+00:00,,0,JustinWang781/Clocked_Adder_UVM,474499158,SystemVerilog,Clocked_Adder_UVM,507,0,2022-03-27 00:41:53+00:00,[],
8895,https://github.com/abucturab/bitcoin_script_RISCify.git,2022-03-27 01:25:44+00:00,Analyse the existing bitcoin script instruction set and RISCify it to have a minimum set of primitive opcodes. Design and synthesize hardware for executing scripts.,1,abucturab/bitcoin_script_RISCify,474506310,SystemVerilog,bitcoin_script_RISCify,949,0,2022-04-13 17:28:11+00:00,[],
8896,https://github.com/DurgaMutluri/UART_UVM.git,2022-03-22 19:58:27+00:00,,1,DurgaMutluri/UART_UVM,472918382,SystemVerilog,UART_UVM,14,0,2022-03-24 19:35:58+00:00,[],
8897,https://github.com/hthorben/wide_alu_ip.git,2022-03-16 14:08:03+00:00,,0,hthorben/wide_alu_ip,470610533,SystemVerilog,wide_alu_ip,9,0,2022-03-16 14:13:04+00:00,[],
8898,https://github.com/RehanEjaz/apb-gpio-tested.git,2022-03-13 12:48:20+00:00,APB based GPIO peripheral with fully automated testbench based on random stimulus generation.,0,RehanEjaz/apb-gpio-tested,469369498,SystemVerilog,apb-gpio-tested,196,0,2022-03-13 12:55:41+00:00,[],
8899,https://github.com/YermalovichDzmitry/ABC.git,2022-03-12 17:40:07+00:00,,0,YermalovichDzmitry/ABC,469155525,SystemVerilog,ABC,79731,0,2022-09-01 18:37:11+00:00,[],
8900,https://github.com/AlSaqr-platform/axi_scmi_mailbox.git,2022-05-02 12:27:21+00:00,,0,AlSaqr-platform/axi_scmi_mailbox,487835875,SystemVerilog,axi_scmi_mailbox,502,0,2024-03-31 14:13:48+00:00,[],
8901,https://github.com/CalvinVeldman/Piano-Tiles-on-FPGA.git,2022-04-11 22:57:09+00:00,,0,CalvinVeldman/Piano-Tiles-on-FPGA,480578280,SystemVerilog,Piano-Tiles-on-FPGA,23670,0,2022-04-19 00:02:17+00:00,[],
8902,https://github.com/TrentWilli/CompArch_Lab3.git,2022-03-11 20:18:37+00:00,,0,TrentWilli/CompArch_Lab3,468888522,SystemVerilog,CompArch_Lab3,12,0,2022-03-11 20:21:40+00:00,[],
8903,https://github.com/efvdr/AHBL_SOC_IBEX.git,2022-04-11 11:05:06+00:00,ibex soc,0,efvdr/AHBL_SOC_IBEX,480342925,SystemVerilog,AHBL_SOC_IBEX,233,0,2022-04-11 11:27:13+00:00,[],
8904,https://github.com/VoidStardust/P4FPGA.git,2022-04-11 08:11:28+00:00,,1,VoidStardust/P4FPGA,480286132,,P4FPGA,295,0,2022-04-11 03:49:01+00:00,[],
8905,https://github.com/jmerc9/273pg4.git,2022-04-09 17:56:02+00:00,This is the repository for group 4's EE273 semester project.,0,jmerc9/273pg4,479803934,SystemVerilog,273pg4,3,0,2022-04-09 18:53:53+00:00,[],
8906,https://github.com/nivethasaravanan1995/RAM.git,2022-04-21 06:26:58+00:00,,0,nivethasaravanan1995/RAM,483932330,SystemVerilog,RAM,20,0,2022-04-21 06:27:32+00:00,[],
8907,https://github.com/Mahmoud-geberty/Hardware_Design_Projects.git,2022-04-17 03:05:30+00:00,A repository where I intend to upload most Hardware design projects I make.,0,Mahmoud-geberty/Hardware_Design_Projects,482413345,SystemVerilog,Hardware_Design_Projects,26,0,2022-04-17 05:04:26+00:00,"['rtl', 'systemverilog', 'testbenches', 'verilog']",https://api.github.com/licenses/mit
8908,https://github.com/TravisLei20/Ecen323Labs.git,2022-04-21 22:34:41+00:00,,0,TravisLei20/Ecen323Labs,484223860,SystemVerilog,Ecen323Labs,20869,0,2022-05-04 01:52:44+00:00,[],
8909,https://github.com/s1410932004/hw1.git,2022-03-23 16:24:43+00:00,,0,s1410932004/hw1,473269145,SystemVerilog,hw1,1,0,2022-03-23 16:26:28+00:00,[],
8910,https://github.com/hansikaweerasena/RouterNoC.git,2022-03-25 15:50:00+00:00,,0,hansikaweerasena/RouterNoC,474072082,SystemVerilog,RouterNoC,21,0,2022-03-25 16:06:36+00:00,[],
8911,https://github.com/mororo18/cl2.git,2022-05-02 19:00:40+00:00,,0,mororo18/cl2,487958555,SystemVerilog,cl2,9953,0,2022-05-02 20:25:21+00:00,[],
8912,https://github.com/libxsmm/fpga_ai_nic.git,2022-05-10 10:32:43+00:00,An Intel FPGA AI NIC implementation that offloads All-Reduce in distributed training,4,libxsmm/fpga_ai_nic,490649624,SystemVerilog,fpga_ai_nic,626,0,2023-06-13 15:08:40+00:00,[],https://api.github.com/licenses/bsd-3-clause
8913,https://github.com/jbadkins23/counter-abstraction.git,2022-05-02 17:37:01+00:00,An example of counter abstraction for a simple SystemVerilog counter.,0,jbadkins23/counter-abstraction,487934336,SystemVerilog,counter-abstraction,6,0,2022-05-03 00:31:24+00:00,[],https://api.github.com/licenses/apache-2.0
8914,https://github.com/cristian-grecu/ELEC391-quartus-modelsim-tutorial.git,2022-05-10 22:26:20+00:00,,0,cristian-grecu/ELEC391-quartus-modelsim-tutorial,490878759,SystemVerilog,ELEC391-quartus-modelsim-tutorial,7444,0,2022-05-17 19:01:39+00:00,[],
8915,https://github.com/aryatyagi14/SLC3.git,2022-03-16 00:07:52+00:00,"We essentially created a small computer which can do a limited amount of operations. The computer can do Add, Subtract and all the basics, but can also do things like sort, list, etc. ",0,aryatyagi14/SLC3,470371812,SystemVerilog,SLC3,21,0,2022-03-16 00:10:28+00:00,[],
8916,https://github.com/Lucas-fm1/exp_golomb.git,2022-03-15 20:24:48+00:00,"Exponentional-Golomb encoder and decoder in hardware implementation, 8 bits inputs",0,Lucas-fm1/exp_golomb,470320661,SystemVerilog,exp_golomb,4,0,2022-03-15 20:27:07+00:00,[],
8917,https://github.com/AyyazTariq95/AHBLiteVerificationAyyazTariq.git,2022-03-31 08:12:01+00:00,,0,AyyazTariq95/AHBLiteVerificationAyyazTariq,476212148,SystemVerilog,AHBLiteVerificationAyyazTariq,1125,0,2022-04-12 18:46:20+00:00,[],
8918,https://github.com/Lightelligence/sv_proto.git,2022-04-05 13:05:55+00:00,Limited support for Protocol Buffers in SystemVerilog.,1,Lightelligence/sv_proto,478132442,SystemVerilog,sv_proto,105,0,2022-04-05 13:09:54+00:00,[],
8919,https://github.com/DRA-chaos/ECS-326-ATM-machine-using-Verilog.git,2022-04-09 11:58:15+00:00,,0,DRA-chaos/ECS-326-ATM-machine-using-Verilog,479712563,SystemVerilog,ECS-326-ATM-machine-using-Verilog,358,0,2022-05-08 04:31:47+00:00,[],https://api.github.com/licenses/mit
8920,https://github.com/jot33/asteroid-avoider.git,2022-04-13 00:29:28+00:00,Asteroid Avoider game developed for Fall 2021 course at University of Washington.,0,jot33/asteroid-avoider,481016572,SystemVerilog,asteroid-avoider,6931,0,2022-05-14 17:21:06+00:00,[],https://api.github.com/licenses/mit
8921,https://github.com/LamasHub/DNA.git,2022-04-10 18:19:41+00:00,Hardware Accelerator for Three-Dimensional DNA Alignment,0,LamasHub/DNA,480102651,SystemVerilog,DNA,14,0,2022-04-10 18:41:59+00:00,[],
8922,https://github.com/UmerShahidengr/FPU_Division.git,2022-04-16 09:54:48+00:00,SystemVerilog based IEEE-754 Floating Point Division Algorithm. It is synthesizable functional block of FPU divide unit tested and verified on Mentor Questa 2021.3.,0,UmerShahidengr/FPU_Division,482216647,SystemVerilog,FPU_Division,25,0,2022-04-16 09:55:58+00:00,[],
8923,https://github.com/rhar000/ArtyChip8.git,2022-03-09 07:01:37+00:00,An FPGA implementation of CHIP-8 on the Arty-A7 development board using VHDL.,0,rhar000/ArtyChip8,467813780,SystemVerilog,ArtyChip8,6805,0,2022-03-16 03:51:25+00:00,[],
8924,https://github.com/tsanyi0119/Hw03.git,2022-04-23 16:23:32+00:00,,0,tsanyi0119/Hw03,484798078,SystemVerilog,Hw03,4,0,2022-04-23 16:50:59+00:00,[],
8925,https://github.com/HandsomeKid666/voter_case.git,2022-04-24 09:56:45+00:00,,0,HandsomeKid666/voter_case,484988728,SystemVerilog,voter_case,1,0,2022-04-24 09:57:13+00:00,[],
8926,https://github.com/yunchiaaa/Homework3.git,2022-04-23 18:00:20+00:00,,0,yunchiaaa/Homework3,484820308,SystemVerilog,Homework3,3,0,2022-04-23 18:04:06+00:00,[],
8927,https://github.com/NP95/m.git,2022-04-09 08:47:55+00:00,A solution to a packet parsing design challenge.,0,NP95/m,479669649,SystemVerilog,m,208,0,2023-10-22 00:22:28+00:00,[],
8928,https://github.com/sigasi/Sigasi_CLI_in_CI_demo.git,2022-05-04 08:36:10+00:00,A demonstration of how the Sigasi CLI can be used in a CI/CD pipeline,0,sigasi/Sigasi_CLI_in_CI_demo,488511300,SystemVerilog,Sigasi_CLI_in_CI_demo,23,0,2022-05-04 13:38:30+00:00,[],https://api.github.com/licenses/bsd-3-clause
8929,https://github.com/gfrank1688/VLSI-HW.git,2022-03-07 02:02:00+00:00,,0,gfrank1688/VLSI-HW,466910010,SystemVerilog,VLSI-HW,23,0,2022-03-07 02:06:56+00:00,[],
8930,https://github.com/LURADU/TSC.git,2022-03-07 12:39:03+00:00,,0,LURADU/TSC,467088281,SystemVerilog,TSC,8209,0,2022-03-14 19:14:09+00:00,[],
8931,https://github.com/Exxcalibur/CacheCohVerif.git,2022-03-05 15:40:20+00:00,,0,Exxcalibur/CacheCohVerif,466494814,SystemVerilog,CacheCohVerif,11,0,2022-03-05 15:40:25+00:00,[],
8932,https://github.com/Emerald52/HW3.git,2022-04-23 17:30:58+00:00,,0,Emerald52/HW3,484813752,SystemVerilog,HW3,3,0,2022-05-15 17:29:35+00:00,[],
8933,https://github.com/ce323/mips-handouts.git,2022-04-30 02:25:22+00:00,,3,ce323/mips-handouts,487162303,SystemVerilog,mips-handouts,15,0,2022-04-30 10:19:11+00:00,[],
8934,https://github.com/Alaa-Morsy/Assembly_withMIPS_processor.git,2022-05-05 10:51:35+00:00,"this project : Write/Get simple C code   ex: multiplication program of matrices  Translate C code to assembly by hand Validate you translation using MARS simulator  Convert assembly code to machine code using MARS assembler  Upload to the memory of the single-cycle processor, run the Verilog code of single-cycle processor on Modelsim and see the ISA execution",0,Alaa-Morsy/Assembly_withMIPS_processor,488934073,SystemVerilog,Assembly_withMIPS_processor,468,0,2022-05-05 11:04:07+00:00,[],
8935,https://github.com/Dole97/FSM_Traffic_Light_Controller.git,2022-04-06 02:39:31+00:00,,0,Dole97/FSM_Traffic_Light_Controller,478376523,SystemVerilog,FSM_Traffic_Light_Controller,10,0,2022-04-06 06:32:16+00:00,[],
8936,https://github.com/Tse3792/SV-based_mem_veri_exam.git,2022-04-05 07:24:50+00:00,There is an example code(SV-based mem verification testbench),0,Tse3792/SV-based_mem_veri_exam,478018662,SystemVerilog,SV-based_mem_veri_exam,4,0,2022-04-05 07:27:58+00:00,[],
8937,https://github.com/SteveLRojas/NeonFox.git,2022-03-11 02:11:29+00:00,16-bit pipelined CPU with all new ISA. Includes test platform.,0,SteveLRojas/NeonFox,468576632,SystemVerilog,NeonFox,2342,0,2022-03-11 02:22:54+00:00,[],
8938,https://github.com/Andrew-LTC/ECE4305Lab7.git,2022-03-09 23:25:06+00:00,,0,Andrew-LTC/ECE4305Lab7,468124241,SystemVerilog,ECE4305Lab7,262,0,2023-01-26 21:10:39+00:00,[],
8939,https://github.com/Inhyuk-Yoo/risk_v.git,2022-04-20 09:18:48+00:00,,0,Inhyuk-Yoo/risk_v,483586695,SystemVerilog,risk_v,6,0,2022-04-20 09:19:08+00:00,[],
8940,https://github.com/zjcymk/FPGA_homework.git,2022-05-01 08:38:59+00:00,,0,zjcymk/FPGA_homework,487486102,SystemVerilog,FPGA_homework,273,0,2022-05-01 09:47:23+00:00,[],
8941,https://github.com/GhulamMustafa42/AHBLite-Protocol.git,2022-03-31 07:26:37+00:00,,1,GhulamMustafa42/AHBLite-Protocol,476196906,SystemVerilog,AHBLite-Protocol,980,0,2023-08-09 16:24:05+00:00,[],
8942,https://github.com/M-Mashreghi/Digital-Logic-Design-CA.git,2022-03-17 21:06:27+00:00,Computer Assignment of Digital Logic Design,0,M-Mashreghi/Digital-Logic-Design-CA,471142791,SystemVerilog,Digital-Logic-Design-CA,66121,0,2023-08-17 23:58:28+00:00,[],
8943,https://github.com/HSIAOYEUCHERN/HW1.git,2022-03-28 03:17:44+00:00,,0,HSIAOYEUCHERN/HW1,474829295,SystemVerilog,HW1,26,0,2022-03-28 03:18:35+00:00,[],
8944,https://github.com/KuiHouLiao/hw1-NUTC.git,2022-03-28 03:10:25+00:00,,0,KuiHouLiao/hw1-NUTC,474827725,SystemVerilog,hw1-NUTC,3,0,2022-03-28 03:11:35+00:00,[],
8945,https://github.com/zozo5085/3-to-8-Decoder.git,2022-03-27 09:35:37+00:00,digital logic practice,0,zozo5085/3-to-8-Decoder,474592652,SystemVerilog,3-to-8-Decoder,3,0,2022-03-27 09:37:03+00:00,[],
8946,https://github.com/solderneer/ELEC0004.git,2022-03-15 20:50:10+00:00,All ELEC0004 related projects and assignments,0,solderneer/ELEC0004,470327504,SystemVerilog,ELEC0004,18,0,2023-07-01 06:07:30+00:00,['university-coursework'],
8947,https://github.com/swetharajagopalan17/SystemVerilog.git,2022-03-14 18:45:23+00:00,,0,swetharajagopalan17/SystemVerilog,469863489,SystemVerilog,SystemVerilog,105,0,2022-08-03 22:45:09+00:00,[],
8948,https://github.com/itzmemuhammed/itzmemuhammed.git,2022-03-16 06:06:09+00:00,Config files for my GitHub profile.,0,itzmemuhammed/itzmemuhammed,470454094,SystemVerilog,itzmemuhammed,2,0,2023-09-07 17:04:01+00:00,"['config', 'github-config']",
8949,https://github.com/DIPS6114/apb.git,2022-05-11 10:32:10+00:00,,0,DIPS6114/apb,491063427,SystemVerilog,apb,15,0,2022-05-11 10:35:46+00:00,[],
8950,https://github.com/beatrizaf/Projeto-de-Sistema-Digitais.git,2022-04-14 20:04:23+00:00,⚡ Projetos desenvolvidos em SystemVerilog na disciplina de Projeto de Sistema Digitais (PSD),0,beatrizaf/Projeto-de-Sistema-Digitais,481734513,SystemVerilog,Projeto-de-Sistema-Digitais,9,0,2022-04-14 23:03:32+00:00,[],
8951,https://github.com/vgtutf081/FpgaPractrice.git,2022-05-03 13:00:46+00:00,,0,vgtutf081/FpgaPractrice,488211764,SystemVerilog,FpgaPractrice,2592,0,2022-10-26 19:51:35+00:00,[],
8952,https://github.com/yanlin0526/Hw4.git,2022-05-02 03:26:18+00:00,,0,yanlin0526/Hw4,487704890,SystemVerilog,Hw4,1,0,2022-05-02 03:33:16+00:00,[],
8953,https://github.com/HandsomeKid666/BCD-up-counter.git,2022-05-01 08:11:01+00:00,,0,HandsomeKid666/BCD-up-counter,487480938,SystemVerilog,BCD-up-counter,1,0,2022-05-01 08:12:54+00:00,[],
8954,https://github.com/shbz1998/ALU.git,2022-05-02 23:40:26+00:00,,0,shbz1998/ALU,488022499,SystemVerilog,ALU,5,0,2022-05-02 23:47:02+00:00,[],
8955,https://github.com/garima090893/uvm.git,2022-05-11 17:07:26+00:00,,0,garima090893/uvm,491203216,SystemVerilog,uvm,2,0,2022-05-11 17:10:27+00:00,[],
8956,https://github.com/xcelerium/axi_vreader_vwriter.git,2022-04-15 07:58:23+00:00,,0,xcelerium/axi_vreader_vwriter,481883162,SystemVerilog,axi_vreader_vwriter,38,0,2022-04-15 07:59:26+00:00,[],
8957,https://github.com/OYounis/AESgen.git,2022-04-14 23:03:26+00:00,A python based AES core generator,0,OYounis/AESgen,481773100,SystemVerilog,AESgen,13,0,2022-04-15 14:52:07+00:00,[],
8958,https://github.com/ZMXSSC/ECE-111-Final_Project.git,2022-03-07 07:22:39+00:00,,0,ZMXSSC/ECE-111-Final_Project,466985864,SystemVerilog,ECE-111-Final_Project,5435,0,2022-03-07 07:22:50+00:00,[],
8959,https://github.com/Daniela2712/LabTSC.git,2022-03-07 10:50:29+00:00,,0,Daniela2712/LabTSC,467053582,SystemVerilog,LabTSC,8112,0,2022-03-14 12:12:04+00:00,[],
8960,https://github.com/dave2929/u50_test.git,2022-03-06 01:52:52+00:00,,0,dave2929/u50_test,466611232,SystemVerilog,u50_test,166,0,2022-03-13 00:43:50+00:00,[],
8961,https://github.com/neamtuelena/Laborator-tsc.git,2022-03-07 10:54:37+00:00,,0,neamtuelena/Laborator-tsc,467054925,SystemVerilog,Laborator-tsc,8104,0,2022-03-14 12:16:42+00:00,[],
8962,https://github.com/jiangaihui75/-ZCU104-PL-DDR4-HDMI-.git,2022-03-11 08:58:40+00:00,,0,jiangaihui75/-ZCU104-PL-DDR4-HDMI-,468677456,SystemVerilog,-ZCU104-PL-DDR4-HDMI-,686,0,2022-06-17 14:33:00+00:00,[],
8963,https://github.com/sethr07/Parkinglot_Counter.git,2022-03-11 03:31:46+00:00,,0,sethr07/Parkinglot_Counter,468595247,SystemVerilog,Parkinglot_Counter,307,0,2022-03-11 03:33:35+00:00,[],
8964,https://github.com/julius910327/-Digital-Logic-Design-Experiments.git,2022-03-30 08:16:19+00:00,,0,julius910327/-Digital-Logic-Design-Experiments,475783496,SystemVerilog,-Digital-Logic-Design-Experiments,14,0,2022-03-30 12:15:27+00:00,[],
8965,https://github.com/feiyuy/ECE-260C.git,2022-04-06 05:24:58+00:00,,0,feiyuy/ECE-260C,478414665,SystemVerilog,ECE-260C,3797,0,2022-06-09 18:15:01+00:00,[],
8966,https://github.com/gary3123/3_27_homework.git,2022-03-27 12:31:59+00:00,,0,gary3123/3_27_homework,474631786,SystemVerilog,3_27_homework,3,0,2022-03-27 12:32:46+00:00,[],
8967,https://github.com/yanlin0526/Hw01.git,2022-03-28 03:54:12+00:00,,0,yanlin0526/Hw01,474837489,SystemVerilog,Hw01,1,0,2022-03-28 04:02:18+00:00,[],
8968,https://github.com/vighneshiyer/hammer-sandbox.git,2022-03-17 00:55:56+00:00,A repo that contains a minimal build of hammer and plugins to run an RTL -> GDS flow (superceded by ucb-bar/hammer/e2e),0,vighneshiyer/hammer-sandbox,470800585,SystemVerilog,hammer-sandbox,3,0,2023-03-20 23:30:47+00:00,[],
8969,https://github.com/RBzhang/MIPS_pipeline.git,2022-03-12 09:38:26+00:00,,0,RBzhang/MIPS_pipeline,469039314,SystemVerilog,MIPS_pipeline,45,0,2022-03-12 09:43:27+00:00,[],
8970,https://github.com/KinzaQamar/SV-UVM-Examples.git,2022-03-17 07:58:50+00:00,This repository contains the practice code related to SystemVerilog UVM,0,KinzaQamar/SV-UVM-Examples,470898430,SystemVerilog,SV-UVM-Examples,22,0,2022-03-18 19:58:55+00:00,[],https://api.github.com/licenses/apache-2.0
8971,https://github.com/dineshannayya/ycr4c.git,2022-03-19 10:37:00+00:00,,0,dineshannayya/ycr4c,471663761,SystemVerilog,ycr4c,819,0,2022-03-19 10:37:18+00:00,[],https://api.github.com/licenses/apache-2.0
8972,https://github.com/JDuchniewicz/fpga-tcpdump.git,2022-03-19 10:56:26+00:00,Repository for FPGA accelerated tcpdump via BPF,0,JDuchniewicz/fpga-tcpdump,471668153,SystemVerilog,fpga-tcpdump,119,0,2023-10-10 02:32:29+00:00,[],
8973,https://github.com/asd392229/-.git,2022-03-27 14:58:34+00:00,,0,asd392229/-,474670308,SystemVerilog,-,1,0,2022-03-27 14:58:53+00:00,[],
8974,https://github.com/AlExx1022/decoder_3_8.git,2022-03-27 06:12:07+00:00,homework,0,AlExx1022/decoder_3_8,474551445,SystemVerilog,decoder_3_8,2,0,2022-03-27 06:27:27+00:00,[],
8975,https://github.com/jpy794/very-simple-cpu.git,2022-04-28 04:57:16+00:00,A synthesizable 5-stage pipeline RISC-V CPU for COD course of USTC.,0,jpy794/very-simple-cpu,486451474,SystemVerilog,very-simple-cpu,11,0,2022-07-24 12:58:38+00:00,[],
8976,https://github.com/sathishbit1985/ECE571_8237A_DMA_Controller.git,2022-04-28 03:30:23+00:00,,0,sathishbit1985/ECE571_8237A_DMA_Controller,486433084,SystemVerilog,ECE571_8237A_DMA_Controller,4234,0,2022-07-15 18:31:08+00:00,[],
8977,https://github.com/j-marjanovic/uvm-playground.git,2022-05-07 20:23:31+00:00,,0,j-marjanovic/uvm-playground,489774344,SystemVerilog,uvm-playground,5,0,2022-05-08 17:27:24+00:00,[],
8978,https://github.com/WongFoo001/morse_decoder.git,2022-04-29 01:04:00+00:00,,0,WongFoo001/morse_decoder,486794885,SystemVerilog,morse_decoder,412,0,2022-04-29 01:08:56+00:00,[],
8979,https://github.com/h1mit/amsuc_vga.git,2022-04-28 15:04:10+00:00,,0,h1mit/amsuc_vga,486641362,SystemVerilog,amsuc_vga,8788,0,2022-04-28 20:34:57+00:00,[],
8980,https://github.com/perovskite514/RISC-V_based_CPU.git,2022-04-25 10:59:19+00:00,,0,perovskite514/RISC-V_based_CPU,485333960,SystemVerilog,RISC-V_based_CPU,20,0,2022-04-25 11:55:29+00:00,[],
8981,https://github.com/yschandana1497/CSCE_714_project.git,2022-05-01 19:03:20+00:00,,0,yschandana1497/CSCE_714_project,487619280,SystemVerilog,CSCE_714_project,23982,0,2022-05-02 02:21:53+00:00,[],
8982,https://github.com/Emerald52/HW4.git,2022-05-01 17:27:02+00:00,,0,Emerald52/HW4,487598953,SystemVerilog,HW4,1,0,2022-05-01 17:27:50+00:00,[],
8983,https://github.com/bhargav253/fpga_trials.git,2022-05-04 22:44:18+00:00,,0,bhargav253/fpga_trials,488763369,SystemVerilog,fpga_trials,3,0,2022-05-04 22:46:44+00:00,[],
8984,https://github.com/yanlin0526/HW3.git,2022-04-24 03:05:54+00:00,,0,yanlin0526/HW3,484910991,SystemVerilog,HW3,1,0,2022-04-24 03:08:54+00:00,[],
8985,https://github.com/jayhusemi/NoCRouter.git,2022-05-04 01:03:22+00:00,,0,jayhusemi/NoCRouter,488410778,SystemVerilog,NoCRouter,650,0,2022-05-04 01:03:54+00:00,[],https://api.github.com/licenses/mit
8986,https://github.com/deepakcr7ms7/Harware_Generation_Tool.git,2022-03-31 23:49:14+00:00,"• Built a tool that flexibly generates hardware to accelerate the evaluation of multiple layers of convolution system with a non-linear function called a ReLU after each convolution • Designed it using digital system design techniques such as control module, data path and FSM • Enhanced the speed by adding parallelism and pipelining  • Programmed the tool by C++ for software development and System Verilog to generate the hardware • Tested the tool by using random testbenches for its speed, area, throughput and energy consumption",0,deepakcr7ms7/Harware_Generation_Tool,476513542,SystemVerilog,Harware_Generation_Tool,2218,0,2022-04-01 00:04:13+00:00,[],
8987,https://github.com/padung99/svFPGA_project.git,2022-04-11 11:07:55+00:00,,0,padung99/svFPGA_project,480343719,SystemVerilog,svFPGA_project,433,0,2022-04-11 11:15:35+00:00,[],
8988,https://github.com/pcornier/65C816.git,2022-04-14 16:02:00+00:00,Verilog conversion of the 65C816 VHDL core,0,pcornier/65C816,481665897,SystemVerilog,65C816,14,0,2022-04-14 16:02:39+00:00,[],
8989,https://github.com/vagrant313/axi_stream_work.git,2022-03-18 13:07:51+00:00,This repository will reflect axi stream based IP designs,0,vagrant313/axi_stream_work,471371807,SystemVerilog,axi_stream_work,22,0,2022-03-18 16:54:44+00:00,[],
8990,https://github.com/AlexBadita/TSC.git,2022-03-07 08:17:05+00:00,,0,AlexBadita/TSC,467002603,SystemVerilog,TSC,8159,0,2022-03-14 09:48:46+00:00,[],
8991,https://github.com/vikas-bhandari/Learn_system_verilog.git,2022-03-05 09:29:41+00:00,Repo to learn system verilog for Hardware verification,0,vikas-bhandari/Learn_system_verilog,466408001,SystemVerilog,Learn_system_verilog,11,0,2022-03-05 14:50:30+00:00,[],
8992,https://github.com/ajscotte/ALU-pipeline.git,2022-03-06 06:04:46+00:00,,0,ajscotte/ALU-pipeline,466651529,SystemVerilog,ALU-pipeline,266,0,2022-03-06 06:05:17+00:00,[],
8993,https://github.com/jason31416/blockwar.git,2022-04-07 13:53:51+00:00,a simple gun game,0,jason31416/blockwar,479007200,SystemVerilog,blockwar,81,0,2023-02-22 09:57:53+00:00,[],https://api.github.com/licenses/mit
8994,https://github.com/arshsalym/eggdone.git,2022-04-08 20:22:56+00:00,,0,arshsalym/eggdone,479528113,SystemVerilog,eggdone,1772,0,2022-04-08 20:25:54+00:00,[],
8995,https://github.com/vj-sananda/free-sv-simulator.git,2022-03-27 23:05:09+00:00,,0,vj-sananda/free-sv-simulator,474781199,SystemVerilog,free-sv-simulator,5535,0,2022-03-27 23:08:59+00:00,[],
8996,https://github.com/MadmanSonic/EE552_project.git,2022-04-08 03:45:59+00:00,,0,MadmanSonic/EE552_project,479234666,SystemVerilog,EE552_project,47,0,2022-04-26 06:14:19+00:00,[],
8997,https://github.com/Eman-Ismaeil/multi-mode-counter.git,2022-04-16 15:43:10+00:00,,0,Eman-Ismaeil/multi-mode-counter,482293942,SystemVerilog,multi-mode-counter,8,0,2022-04-18 11:41:13+00:00,[],
8998,https://github.com/JimKnowler/formalmethods-zipcpu-class-verilog.git,2022-03-11 09:28:42+00:00,Verilog Examples and exercises from ZipCPU's formal methods class,0,JimKnowler/formalmethods-zipcpu-class-verilog,468686908,SystemVerilog,formalmethods-zipcpu-class-verilog,123,0,2022-03-11 09:29:02+00:00,[],
8999,https://github.com/uzair141/Uart.git,2022-03-11 10:34:30+00:00,,0,uzair141/Uart,468707612,SystemVerilog,Uart,15,0,2022-03-11 10:39:19+00:00,[],
9000,https://github.com/Jay-Sperry/4243_Lab3.git,2022-03-24 22:07:07+00:00,,0,Jay-Sperry/4243_Lab3,473787821,SystemVerilog,4243_Lab3,16,0,2022-03-24 22:09:18+00:00,[],
9001,https://github.com/raadkhan/clk-div-by-7.git,2022-03-05 03:38:12+00:00,Odd clock divider (by 7) with a dual-edge FF,0,raadkhan/clk-div-by-7,466339838,SystemVerilog,clk-div-by-7,1,0,2022-03-05 03:47:37+00:00,[],
9002,https://github.com/xuan37/-.git,2022-03-24 14:31:47+00:00,,0,xuan37/-,473642403,SystemVerilog,-,1,0,2022-03-24 14:45:01+00:00,[],
9003,https://github.com/ikejokafor/verif_lib.git,2022-03-24 14:29:02+00:00,,0,ikejokafor/verif_lib,473641359,SystemVerilog,verif_lib,32,0,2022-03-24 14:39:50+00:00,[],
9004,https://github.com/TatshSiow/HW1.git,2022-03-27 14:00:35+00:00,Homework NUTC,0,TatshSiow/HW1,474654262,SystemVerilog,HW1,3,0,2022-03-27 14:34:07+00:00,[],
9005,https://github.com/pojung-Huang/logic_hw_1.git,2022-03-27 12:58:30+00:00,,0,pojung-Huang/logic_hw_1,474638338,SystemVerilog,logic_hw_1,3,0,2022-03-27 13:02:00+00:00,[],
9006,https://github.com/SasinduWijeratne/MTTKRP_FPGA.git,2022-04-15 02:19:42+00:00,,0,SasinduWijeratne/MTTKRP_FPGA,481810134,SystemVerilog,MTTKRP_FPGA,655,0,2022-04-15 03:43:48+00:00,[],
9007,https://github.com/Supernova2002/CompArchFinal.git,2022-04-27 17:15:45+00:00,,1,Supernova2002/CompArchFinal,486285114,SystemVerilog,CompArchFinal,74,0,2022-05-15 21:07:04+00:00,[],
9008,https://github.com/Botroskamal/Multi-mode-counter.git,2022-04-14 18:19:43+00:00,,0,Botroskamal/Multi-mode-counter,481707063,SystemVerilog,Multi-mode-counter,6,0,2022-05-12 18:34:46+00:00,[],
9009,https://github.com/madrat01/ECE551_Project.git,2022-04-25 21:19:14+00:00,"ECE 551 Project @ UW Madison, Spring 2022",0,madrat01/ECE551_Project,485538186,SystemVerilog,ECE551_Project,1331,0,2022-04-25 21:21:13+00:00,[],
9010,https://github.com/wei1105/HW3.git,2022-05-09 06:39:05+00:00,,0,wei1105/HW3,490164236,SystemVerilog,HW3,1,0,2022-05-09 06:39:50+00:00,[],
9011,https://github.com/Baray44/polytech20_22.git,2022-05-10 15:32:45+00:00,Магистратура. Политех. 2020-2022.,0,Baray44/polytech20_22,490758298,SystemVerilog,polytech20_22,467551,0,2022-12-05 17:16:11+00:00,"['kspt', 'polytech', 'spbpu', 'iknt']",https://api.github.com/licenses/mit
9012,https://github.com/alexandergq/CPE233.git,2022-03-13 08:48:41+00:00,Labs from CPE233 Cal Poly,0,alexandergq/CPE233,469316455,SystemVerilog,CPE233,34,0,2022-03-13 09:08:33+00:00,[],
9013,https://github.com/s1410932002/practice.git,2022-03-22 13:29:45+00:00,,0,s1410932002/practice,472780459,SystemVerilog,practice,1,0,2022-03-22 13:38:28+00:00,[],
9014,https://github.com/Wishah-Naseer/diamond_core.git,2022-03-10 12:55:46+00:00,,0,Wishah-Naseer/diamond_core,468342606,SystemVerilog,diamond_core,54,0,2022-03-10 13:04:15+00:00,[],
9015,https://github.com/LiamMullen8/Xiphos.git,2022-03-22 06:45:49+00:00,Implementation of the Nand2Tetris Projects using SystemVerilog,0,LiamMullen8/Xiphos,472645288,SystemVerilog,Xiphos,29,0,2022-03-22 21:51:17+00:00,[],
9016,https://github.com/CozetteDyer/lab03.git,2022-03-20 19:42:30+00:00,Lab 3: Single-Cycle ARMv4 Microarchitecture Implementation in Verilog HDL,0,CozetteDyer/lab03,472084877,SystemVerilog,lab03,601,0,2022-09-12 21:00:55+00:00,[],
9017,https://github.com/Smitlea/SystemVerilog.git,2022-03-27 12:43:31+00:00,2 2 ,0,Smitlea/SystemVerilog,474634533,SystemVerilog,SystemVerilog,3,0,2022-03-27 18:25:31+00:00,[],
9018,https://github.com/jesselee1/18240-Lab-4.git,2022-03-29 00:27:20+00:00,,0,jesselee1/18240-Lab-4,475223985,SystemVerilog,18240-Lab-4,12,0,2022-03-29 00:30:06+00:00,[],
9019,https://github.com/Shreyas-borse/SHA-256-Bitcoin-Hash-Generation.git,2022-03-30 06:31:39+00:00,,0,Shreyas-borse/SHA-256-Bitcoin-Hash-Generation,475748877,SystemVerilog,SHA-256-Bitcoin-Hash-Generation,2441,0,2022-03-30 06:34:06+00:00,[],
9020,https://github.com/MuhammadSaad727/AMBA-AHB-LITE-2020-msee-130.git,2022-03-31 09:52:48+00:00,,0,MuhammadSaad727/AMBA-AHB-LITE-2020-msee-130,476245543,SystemVerilog,AMBA-AHB-LITE-2020-msee-130,424,0,2022-04-13 10:24:36+00:00,[],
9021,https://github.com/longingji/pulp_soc.git,2022-04-05 14:47:29+00:00,,0,longingji/pulp_soc,478173787,SystemVerilog,pulp_soc,105,0,2022-04-05 14:51:15+00:00,[],
9022,https://github.com/DragonPrime10/Thunderbird-FSM.git,2022-04-07 20:42:37+00:00,Creating a thunderbird FSM through System Verilog,0,DragonPrime10/Thunderbird-FSM,479142326,SystemVerilog,Thunderbird-FSM,2510,0,2022-04-07 20:55:03+00:00,[],
9023,https://github.com/LandonVarner/ECEN3233LAB3-FSM-Thunderbird-Light-Controller-.git,2022-04-08 03:17:02+00:00,This project is from a lab in ECEN3233 Digital Logic Design class at Oklahoma State University,0,LandonVarner/ECEN3233LAB3-FSM-Thunderbird-Light-Controller-,479228208,SystemVerilog,ECEN3233LAB3-FSM-Thunderbird-Light-Controller-,3,0,2022-04-08 04:18:09+00:00,[],
9024,https://github.com/arkis-s/tau-processor.git,2022-04-07 20:33:37+00:00,,0,arkis-s/tau-processor,479139829,SystemVerilog,tau-processor,176,0,2022-05-25 04:46:03+00:00,[],
9025,https://github.com/DouglasWWolf/axi_dev.git,2022-04-03 21:20:06+00:00,AXI4-Lite bus-master (development),1,DouglasWWolf/axi_dev,477468534,SystemVerilog,axi_dev,107,0,2022-04-03 21:26:10+00:00,[],
9026,https://github.com/jshinde842/Traffic-Lights.git,2022-04-13 08:24:10+00:00,"Traffic Light Controller simulating a 6-way, 4-street intersection with 20 possible traffic light states. State transitions are defined by sensors that trigger on presence of a vehicle on the street in order to both minimize vehicle time spent at red lights and maximize traffic flow. ",0,jshinde842/Traffic-Lights,481132462,SystemVerilog,Traffic-Lights,12,0,2022-11-09 22:17:13+00:00,[],
9027,https://github.com/DhapSodiK/2022-241CW.git,2022-03-15 14:24:58+00:00,,0,DhapSodiK/2022-241CW,470195095,SystemVerilog,2022-241CW,51,0,2022-05-05 15:32:43+00:00,[],
9028,https://github.com/cse140l-sp22/Lab3-Starter-Code.git,2022-05-03 18:39:29+00:00,Lab3 Traffic Light Controller Starter Code,1,cse140l-sp22/Lab3-Starter-Code,488324104,SystemVerilog,Lab3-Starter-Code,8,0,2022-05-03 18:45:52+00:00,[],
9029,https://github.com/shashikant54/System_verilog.git,2022-05-03 04:41:54+00:00,,0,shashikant54/System_verilog,488079350,SystemVerilog,System_verilog,5,0,2022-05-03 04:44:26+00:00,[],
9030,https://github.com/Darcywantloli/voter.git,2022-05-01 14:38:40+00:00,,0,Darcywantloli/voter,487560860,SystemVerilog,voter,1,0,2022-05-01 14:39:53+00:00,[],
9031,https://github.com/harihitode/ffs_module.git,2022-05-05 14:32:18+00:00,Examples of Find First Set Module,0,harihitode/ffs_module,489007013,SystemVerilog,ffs_module,3,0,2022-05-05 14:32:47+00:00,[],
9032,https://github.com/AndrewJones-PSU/I2S2Test.git,2022-04-23 03:20:14+00:00,,0,AndrewJones-PSU/I2S2Test,484634135,SystemVerilog,I2S2Test,19,0,2022-04-23 07:03:44+00:00,[],https://api.github.com/licenses/mit
9033,https://github.com/gaburolo/LABORATORIO-4-DD.git,2022-04-23 04:04:40+00:00,,0,gaburolo/LABORATORIO-4-DD,484641729,SystemVerilog,LABORATORIO-4-DD,473590,0,2022-04-23 18:29:55+00:00,[],
9034,https://github.com/Miszq11/sin_generator.git,2022-04-24 11:08:00+00:00,,0,Miszq11/sin_generator,485003663,SystemVerilog,sin_generator,774,0,2022-04-29 01:30:08+00:00,[],
9035,https://github.com/longingji/wide_alu.git,2022-04-05 05:16:20+00:00,this is a add ip demo for pulp platform,0,longingji/wide_alu,477984662,SystemVerilog,wide_alu,12,0,2022-04-05 13:38:08+00:00,[],
9036,https://github.com/gary3123/Hw2.git,2022-04-05 07:09:35+00:00,,0,gary3123/Hw2,478014006,SystemVerilog,Hw2,0,0,2022-04-05 07:11:24+00:00,[],
9037,https://github.com/Hazem-ali/Counter-Game.git,2022-04-10 07:03:25+00:00,This is a simple counter game using SystemVerilog language,0,Hazem-ali/Counter-Game,479939583,SystemVerilog,Counter-Game,4,0,2022-06-19 09:23:23+00:00,[],
9038,https://github.com/azcem/game.git,2022-04-09 14:27:50+00:00,,0,azcem/game,479750308,SystemVerilog,game,7,0,2022-04-10 22:55:05+00:00,[],
9039,https://github.com/RandomActsOfGrammar/sterling.git,2022-04-14 00:44:51+00:00,A system for extensible languages defined using inference rules,0,RandomActsOfGrammar/sterling,481417896,SystemVerilog,sterling,550,0,2024-04-10 15:14:30+00:00,[],https://api.github.com/licenses/gpl-3.0
9040,https://github.com/sergioagp/esrg-v.git,2022-03-30 12:25:14+00:00,Simple RV32I processor implementation,0,sergioagp/esrg-v,475867369,SystemVerilog,esrg-v,22,0,2022-03-30 12:26:05+00:00,[],
9041,https://github.com/alexxpercy/ELEC_241_C1.git,2022-03-29 13:19:44+00:00,,0,alexxpercy/ELEC_241_C1,475452123,SystemVerilog,ELEC_241_C1,274,0,2022-03-29 13:19:49+00:00,[],
9042,https://github.com/anbchi/Bitcoin.git,2022-04-16 00:54:40+00:00,,0,anbchi/Bitcoin,482121507,SystemVerilog,Bitcoin,4585,0,2022-04-16 00:55:54+00:00,[],
9043,https://github.com/chenxz1111/Computer-Organization.git,2022-04-17 07:35:50+00:00,,0,chenxz1111/Computer-Organization,482458087,SystemVerilog,Computer-Organization,99464,0,2022-04-17 08:30:39+00:00,[],
9044,https://github.com/zemingxie/ECE551_ebike.git,2022-04-29 17:00:15+00:00,,0,zemingxie/ECE551_ebike,487049304,SystemVerilog,ECE551_ebike,925,0,2022-04-29 17:01:35+00:00,[],
9045,https://github.com/hrzhao76/ECE271.git,2022-04-29 16:37:25+00:00,My self-taught course ECE 271 materials at UW. ,0,hrzhao76/ECE271,487042686,SystemVerilog,ECE271,20140,0,2022-06-30 15:30:03+00:00,[],
9046,https://github.com/alexwang2001/DigitalCircuit-System.git,2022-05-04 11:30:18+00:00,,0,alexwang2001/DigitalCircuit-System,488561736,SystemVerilog,DigitalCircuit-System,113,0,2022-05-04 11:37:55+00:00,[],
9047,https://github.com/yunchiaaa/Homework4.git,2022-05-01 15:12:17+00:00,,0,yunchiaaa/Homework4,487568714,SystemVerilog,Homework4,1,0,2022-05-02 03:32:09+00:00,[],
9048,https://github.com/Portgas97/fpga_full_hash_algorithm_des_sbox.git,2022-05-11 15:49:01+00:00,Simple implementation of an hash module based on the S-box of DES algorithm,0,Portgas97/fpga_full_hash_algorithm_des_sbox,491176641,SystemVerilog,fpga_full_hash_algorithm_des_sbox,1367,0,2022-06-27 17:11:04+00:00,[],
9049,https://github.com/AndrewJones-PSU/PillowCore-RISC-V-Processors.git,2022-03-06 07:08:55+00:00,,0,AndrewJones-PSU/PillowCore-RISC-V-Processors,466663432,SystemVerilog,PillowCore-RISC-V-Processors,4,0,2022-11-10 18:26:08+00:00,[],https://api.github.com/licenses/mit
9050,https://github.com/lorenzo-saccaro/MAPD_A.git,2022-03-06 14:42:22+00:00,,0,lorenzo-saccaro/MAPD_A,466764905,SystemVerilog,MAPD_A,26100,0,2022-03-08 10:51:45+00:00,[],
9051,https://github.com/anhhao135/ECE-111-Final-Project-WI22.git,2022-03-09 11:59:38+00:00,SHA256 and Bitcoin implementation in SystemVerilog,0,anhhao135/ECE-111-Final-Project-WI22,467908523,SystemVerilog,ECE-111-Final-Project-WI22,66127,0,2022-03-09 12:24:14+00:00,[],
9052,https://github.com/SimiaoHuang/ECE551.git,2022-03-09 16:45:22+00:00,THE EX & HW of ECE551 SP2022,0,SimiaoHuang/ECE551,468012595,SystemVerilog,ECE551,8998,0,2022-03-09 20:40:28+00:00,[],
9053,https://github.com/clendening/KnightsTour.git,2022-03-09 16:55:14+00:00,,0,clendening/KnightsTour,468016134,SystemVerilog,KnightsTour,294,0,2022-11-04 19:23:52+00:00,[],
9054,https://github.com/sgno28/DigitalLab.git,2022-03-07 18:32:53+00:00,,0,sgno28/DigitalLab,467214393,SystemVerilog,DigitalLab,50,0,2022-03-07 18:34:47+00:00,[],
9055,https://github.com/T-Stolf/EECS-3216-Project.git,2022-03-10 03:15:33+00:00,,0,T-Stolf/EECS-3216-Project,468177033,SystemVerilog,EECS-3216-Project,16135,0,2023-01-28 01:22:39+00:00,[],
9056,https://github.com/krasus00/Cross-bar.git,2022-03-09 22:46:17+00:00,Cross-bar,0,krasus00/Cross-bar,468115466,SystemVerilog,Cross-bar,6324,0,2022-03-09 23:00:08+00:00,[],
9057,https://github.com/Wishah-Naseer/APB_interconnect.git,2022-03-10 16:41:44+00:00,,0,Wishah-Naseer/APB_interconnect,468428905,SystemVerilog,APB_interconnect,7,0,2022-03-10 16:43:53+00:00,[],
9058,https://github.com/hplp/SST-Memulator.git,2022-04-01 17:50:50+00:00,,0,hplp/SST-Memulator,476818319,SystemVerilog,SST-Memulator,99261,0,2022-04-01 18:20:17+00:00,[],
9059,https://github.com/SangTruongTan/Simple_CPU.git,2022-04-11 09:03:51+00:00,,0,SangTruongTan/Simple_CPU,480303548,SystemVerilog,Simple_CPU,8816,0,2022-04-11 09:04:56+00:00,[],
9060,https://github.com/matthewbconn/Test_Repo.git,2022-04-12 18:00:29+00:00,Tuesday Apr 12,0,matthewbconn/Test_Repo,480919579,SystemVerilog,Test_Repo,3,0,2022-04-12 18:54:43+00:00,[],
9061,https://github.com/hazemMondy/digtal_proj.git,2022-04-13 07:23:22+00:00,,0,hazemMondy/digtal_proj,481114489,SystemVerilog,digtal_proj,13,0,2022-06-23 01:26:09+00:00,[],
9062,https://github.com/Gidha-Iftikhar/AHB-LITE-Verification.git,2022-03-30 17:07:23+00:00,Verification of AHB-lite bus interface,0,Gidha-Iftikhar/AHB-LITE-Verification,475976538,SystemVerilog,AHB-LITE-Verification,825,0,2022-04-12 14:26:14+00:00,[],
9063,https://github.com/handsomeboy777/3_to_8_decoder.git,2022-03-27 14:03:27+00:00,,0,handsomeboy777/3_to_8_decoder,474655019,SystemVerilog,3_to_8_decoder,2,0,2022-03-27 14:50:25+00:00,[],
9064,https://github.com/alpgurlee/RISC-V-Tabanli-Islemci-Tasarimi.git,2022-04-06 10:49:23+00:00,,0,alpgurlee/RISC-V-Tabanli-Islemci-Tasarimi,478517565,SystemVerilog,RISC-V-Tabanli-Islemci-Tasarimi,5855,0,2022-04-06 10:52:26+00:00,[],
9065,https://github.com/Fizz-Trickster/Frame_Memory_Controller_Verilog.git,2022-03-20 20:31:32+00:00,,0,Fizz-Trickster/Frame_Memory_Controller_Verilog,472095641,SystemVerilog,Frame_Memory_Controller_Verilog,26,0,2022-03-20 20:32:07+00:00,[],
9066,https://github.com/Habeeb-UrRahman/Verilog-EDA-Playground-.git,2022-03-19 15:29:23+00:00,,0,Habeeb-UrRahman/Verilog-EDA-Playground-,471735716,SystemVerilog,Verilog-EDA-Playground-,37,0,2022-08-10 16:10:39+00:00,[],
9067,https://github.com/habibi9/ibex-soc.git,2022-03-24 08:59:39+00:00,SoC Implementation with lowRISC Ibex core,0,habibi9/ibex-soc,473527991,SystemVerilog,ibex-soc,22,0,2022-03-24 09:18:20+00:00,[],
9068,https://github.com/dannydang-cp/CPE133-DigitalDesign.git,2022-03-24 06:30:24+00:00,,0,dannydang-cp/CPE133-DigitalDesign,473483793,SystemVerilog,CPE133-DigitalDesign,4,0,2022-09-26 20:49:06+00:00,[],
9069,https://github.com/GingerJD/ELEC241-C1-2022.git,2022-03-21 14:29:25+00:00,,0,GingerJD/ELEC241-C1-2022,472374731,SystemVerilog,ELEC241-C1-2022,22,0,2022-03-21 14:29:30+00:00,[],
9070,https://github.com/SpokeFPGA/pipe.git,2022-03-13 00:40:54+00:00,Pipe Utilities,0,SpokeFPGA/pipe,469234290,SystemVerilog,pipe,6,0,2022-03-13 04:47:40+00:00,[],https://api.github.com/licenses/mit
9071,https://github.com/DjordjeKa/primer.git,2022-03-11 14:45:56+00:00,,0,DjordjeKa/primer,468788287,SystemVerilog,primer,8,0,2022-03-14 12:51:53+00:00,[],
9072,https://github.com/jwredhead/Mips-Processor.git,2022-03-18 22:03:57+00:00,,0,jwredhead/Mips-Processor,471529221,SystemVerilog,Mips-Processor,29560,0,2022-03-18 22:13:38+00:00,[],https://api.github.com/licenses/gpl-3.0
9073,https://github.com/bgrzesik/sem6-2022-zsc.git,2022-05-03 21:32:37+00:00,Elegent or less elegent solutions to excercises of Complex Digital Systems  (Złożone systemy cyfrowe) Course at AGH UST,0,bgrzesik/sem6-2022-zsc,488368983,SystemVerilog,sem6-2022-zsc,57,0,2022-05-22 21:29:31+00:00,[],
9074,https://github.com/zhenyicai/EE552project.git,2022-04-18 17:30:39+00:00,,0,zhenyicai/EE552project,482936236,SystemVerilog,EE552project,257,0,2022-04-18 17:49:17+00:00,[],
9075,https://github.com/yunernya/VUPLive.git,2022-05-01 09:22:28+00:00,Vtuber/VUP的帮助文档！,1,yunernya/VUPLive,487494240,,VUPLive,675,0,2022-05-01 08:35:27+00:00,[],
9076,https://github.com/erandaniel/sifratiot_sim_1.git,2022-05-02 17:38:45+00:00,,0,erandaniel/sifratiot_sim_1,487934832,SystemVerilog,sifratiot_sim_1,100,0,2022-05-02 17:39:52+00:00,[],
9077,https://github.com/gargantuar9/ECE385_finalprojectV2.git,2022-04-30 21:04:20+00:00,,0,gargantuar9/ECE385_finalprojectV2,487381174,SystemVerilog,ECE385_finalprojectV2,19,0,2022-04-30 21:10:16+00:00,[],
9078,https://github.com/tyleryouk/lookaheadadder.git,2022-05-03 02:35:37+00:00,,0,tyleryouk/lookaheadadder,488056172,SystemVerilog,lookaheadadder,4306,0,2022-05-03 02:40:11+00:00,[],
9079,https://github.com/tyleryouk/fulladdersystemverilog.git,2022-05-03 02:21:14+00:00,,0,tyleryouk/fulladdersystemverilog,488053331,SystemVerilog,fulladdersystemverilog,3576,0,2022-05-03 02:23:53+00:00,[],
9080,https://github.com/Radiophantom/fifo_lib.git,2022-05-05 06:06:10+00:00,,0,Radiophantom/fifo_lib,488851165,SystemVerilog,fifo_lib,7,0,2022-05-05 06:08:20+00:00,[],
9081,https://github.com/mhung230/Modified-Booth-Multiplier.git,2022-05-06 11:18:43+00:00,My project for this algorithm,0,mhung230/Modified-Booth-Multiplier,489325623,SystemVerilog,Modified-Booth-Multiplier,6,0,2022-05-06 11:19:37+00:00,[],
9082,https://github.com/ValentinNedelcu/Lab-TSC.git,2022-03-07 08:33:16+00:00,,0,ValentinNedelcu/Lab-TSC,467007909,SystemVerilog,Lab-TSC,25029,0,2022-03-14 13:43:02+00:00,[],
9083,https://github.com/Lacatin/TSC.git,2022-03-07 11:15:13+00:00,,0,Lacatin/TSC,467061262,SystemVerilog,TSC,8102,0,2022-03-14 11:54:33+00:00,[],
9084,https://github.com/TylerGraham74/DLD_DES_Algorithm.git,2022-03-24 07:13:06+00:00,Data Encryption Standard algorithm written in System Verilog.,0,TylerGraham74/DLD_DES_Algorithm,473495279,SystemVerilog,DLD_DES_Algorithm,119,0,2022-03-24 07:16:50+00:00,[],
9085,https://github.com/sicajc/geofence.git,2022-03-17 16:45:48+00:00,IC_Contest_geofence_first_try,0,sicajc/geofence,471064784,SystemVerilog,geofence,90,0,2022-03-17 16:46:16+00:00,[],
9086,https://github.com/Yeahoon-Kim/CPU_SystemVerilog.git,2022-03-25 12:41:28+00:00,Design CPU by using SystemVerilog in class Computer Architecture,0,Yeahoon-Kim/CPU_SystemVerilog,474004472,SystemVerilog,CPU_SystemVerilog,2,0,2022-03-25 12:54:05+00:00,[],
9087,https://github.com/DouglasWWolf/rgb_fpga.git,2022-03-29 00:10:03+00:00,PWMs a RGB led according to user selectable values,0,DouglasWWolf/rgb_fpga,475220311,SystemVerilog,rgb_fpga,453,0,2022-03-29 00:20:12+00:00,[],
9088,https://github.com/ssayin/nandgame-sv.git,2022-04-11 18:29:48+00:00,Experimental,0,ssayin/nandgame-sv,480503622,SystemVerilog,nandgame-sv,5813,0,2023-01-02 13:59:48+00:00,"['lex', 'nand2tetris', 'systemverilog', 'verilator', 'yacc']",
9089,https://github.com/bayan1200/DonkeyKong-JR-Game.git,2022-04-12 15:25:54+00:00,"DonkeyKong JR Game as a final project in the course ""Electrical Engineering Lab 1A"".",0,bayan1200/DonkeyKong-JR-Game,480867197,SystemVerilog,DonkeyKong-JR-Game,50818,0,2022-04-12 15:36:21+00:00,[],
9090,https://github.com/HerrMotz/ehp22-scm.git,2022-04-17 09:36:20+00:00,Experimentelle Hardware Projekte 2022 Uni Jena Hausaufgaben,0,HerrMotz/ehp22-scm,482481832,SystemVerilog,ehp22-scm,7857,0,2022-09-06 16:48:10+00:00,[],
9091,https://github.com/ZaferAttal/PULP.git,2022-04-17 14:13:09+00:00,,0,ZaferAttal/PULP,482541615,SystemVerilog,PULP,7912,0,2022-04-18 12:18:45+00:00,[],
9092,https://github.com/edward88421/r.git,2022-04-17 15:35:58+00:00,,0,edward88421/r,482562642,SystemVerilog,r,10,0,2022-04-17 15:44:00+00:00,[],
9093,https://github.com/DjordjeKa/LAB1.git,2022-03-10 10:02:04+00:00,,0,DjordjeKa/LAB1,468286424,SystemVerilog,LAB1,2,0,2022-03-11 08:02:44+00:00,[],
9094,https://github.com/danther98/32x32-Register-file-.git,2022-03-14 03:58:21+00:00,"This register file has, Two 5-bit source register numbers, one 5-bit destination register number, one 32-bit wide data port for writes, a write enable signal and clock. The outputs are two 32-bit registers values, one for each read port. ",0,danther98/32x32-Register-file-,469573757,SystemVerilog,32x32-Register-file-,27,0,2022-03-14 04:07:47+00:00,[],
9095,https://github.com/Heelos200/Microprocessor.git,2022-04-03 16:12:39+00:00,Microprocessor implemented through DE10-Lite FPGA Board,0,Heelos200/Microprocessor,477394749,SystemVerilog,Microprocessor,4,0,2022-04-03 16:15:12+00:00,[],
9096,https://github.com/Radiophantom/hdmi_controller.git,2022-04-14 06:12:36+00:00,,0,Radiophantom/hdmi_controller,481487552,SystemVerilog,hdmi_controller,3,0,2022-04-21 06:26:17+00:00,[],
9097,https://github.com/Radiophantom/simple_dma.git,2022-04-14 06:11:58+00:00,,0,Radiophantom/simple_dma,481487398,SystemVerilog,simple_dma,1,0,2022-05-13 10:24:12+00:00,[],
9098,https://github.com/rroutece/18743_multiplexing_macro_column.git,2022-04-27 02:04:17+00:00,,0,rroutece/18743_multiplexing_macro_column,486012233,SystemVerilog,18743_multiplexing_macro_column,9144,0,2022-05-10 03:57:33+00:00,[],
9099,https://github.com/brando0414/DLD-Class-Project.git,2022-04-28 23:59:31+00:00,A DES Cracker,0,brando0414/DLD-Class-Project,486783081,SystemVerilog,DLD-Class-Project,3349,0,2022-04-29 16:15:17+00:00,[],
9100,https://github.com/pojung-Huang/-hw3.git,2022-04-23 15:07:15+00:00,,0,pojung-Huang/-hw3,484779537,SystemVerilog,-hw3,2,0,2022-04-23 15:10:55+00:00,[],
9101,https://github.com/coltonstoltz/Accelerometer-Monitor.git,2022-04-20 23:01:11+00:00,"Implements a FSM that will communicate via with Analog Devices ADXL362 accelerometer that is onboard the Nexys 4 DDR FPGA.  The FSM will initialize the accelerometer and repeatedly read the data for X, Y, and Z axis.  The X, Y, and Z axis data is displayed on the FPGA's two segment display.",0,coltonstoltz/Accelerometer-Monitor,483838482,SystemVerilog,Accelerometer-Monitor,12,0,2022-04-20 23:02:20+00:00,[],
9102,https://github.com/dachariy/drv10975.git,2022-05-10 03:09:16+00:00,DRV10975 model,0,dachariy/drv10975,490523966,SystemVerilog,drv10975,78,0,2022-05-10 03:23:35+00:00,[],
9103,https://github.com/omrzv/digitalsystems_tests_spring2022.git,2022-05-10 12:23:24+00:00,,15,omrzv/digitalsystems_tests_spring2022,490684954,SystemVerilog,digitalsystems_tests_spring2022,18,0,2023-01-18 22:35:54+00:00,[],
9104,https://github.com/FuShengDuoBuYu/Mips_Multi_Cycle_Cpu.git,2022-05-02 04:39:56+00:00,"mips指令的多周期cpu,实现了17条指令",0,FuShengDuoBuYu/Mips_Multi_Cycle_Cpu,487717587,SystemVerilog,Mips_Multi_Cycle_Cpu,6316,0,2023-12-03 04:35:49+00:00,[],
9105,https://github.com/ParvanAndrei/TSC.git,2022-03-07 19:51:36+00:00,,0,ParvanAndrei/TSC,467238704,SystemVerilog,TSC,8230,0,2022-03-14 09:48:15+00:00,[],
9106,https://github.com/BarHaran/fpgacdc.git,2022-03-20 11:08:17+00:00,"Fpga CDC info, code and constratins examples",0,BarHaran/fpgacdc,471954699,SystemVerilog,fpgacdc,19,0,2022-03-20 11:13:25+00:00,[],
9107,https://github.com/CarsonChild/vga.git,2022-03-22 06:23:32+00:00,,0,CarsonChild/vga,472639376,SystemVerilog,vga,4,0,2022-03-22 06:24:32+00:00,[],
9108,https://github.com/mrdiogodias/ekko.git,2022-03-29 13:40:30+00:00,,0,mrdiogodias/ekko,475460397,SystemVerilog,ekko,8280,0,2022-03-29 15:34:32+00:00,[],
9109,https://github.com/phdee5/AHB-Lite.git,2022-03-31 07:10:37+00:00,,0,phdee5/AHB-Lite,476191829,SystemVerilog,AHB-Lite,1094,0,2022-04-12 08:17:57+00:00,[],
9110,https://github.com/wei1105/-HW2.git,2022-04-04 02:07:23+00:00,,0,wei1105/-HW2,477520093,SystemVerilog,-HW2,4,0,2022-04-04 02:10:59+00:00,[],
9111,https://github.com/arspauld/mem-control.git,2022-04-08 14:30:04+00:00,,0,arspauld/mem-control,479423279,SystemVerilog,mem-control,7369,0,2022-04-08 15:07:56+00:00,[],https://api.github.com/licenses/mit
9112,https://github.com/nmaltas/MultimediaSIMDProcessor.git,2022-04-06 20:49:19+00:00,A model Multimedia SIMD processor using Sony Cell SPU architecture and implemented with SystemVerilog,0,nmaltas/MultimediaSIMDProcessor,478722451,SystemVerilog,MultimediaSIMDProcessor,15,0,2022-04-06 20:57:33+00:00,[],https://api.github.com/licenses/mit
9113,https://github.com/Evgeny17387/Pinball.git,2022-05-07 20:23:21+00:00,,0,Evgeny17387/Pinball,489774307,SystemVerilog,Pinball,295,0,2022-05-09 18:43:43+00:00,[],
9114,https://github.com/wei1105/-HW4.git,2022-05-02 02:21:26+00:00,,0,wei1105/-HW4,487693319,SystemVerilog,-HW4,1,0,2022-05-02 02:23:48+00:00,[],
9115,https://github.com/momoph46/Other_Verilog.git,2022-05-02 10:28:14+00:00,,0,momoph46/Other_Verilog,487803095,SystemVerilog,Other_Verilog,3,0,2022-05-02 10:55:39+00:00,[],
9116,https://github.com/TaoTran184/NPU.git,2022-05-10 20:27:05+00:00,,0,TaoTran184/NPU,490850546,SystemVerilog,NPU,11,0,2022-09-09 16:39:21+00:00,[],
9117,https://github.com/ZSheppard/FPGA-Music-Player.git,2022-04-10 17:47:06+00:00,FPGA audio project that plays music and music notes based on user inputs from a keypad,1,ZSheppard/FPGA-Music-Player,480094630,SystemVerilog,FPGA-Music-Player,33,0,2023-07-24 23:42:30+00:00,[],
9118,https://github.com/justin-negron/BlackJack-FPGA.git,2022-04-11 21:25:38+00:00,,0,justin-negron/BlackJack-FPGA,480556917,SystemVerilog,BlackJack-FPGA,732,0,2022-04-11 21:26:00+00:00,[],
9119,https://github.com/lgkh2002/ece385megaman.git,2022-05-05 07:36:04+00:00,,0,lgkh2002/ece385megaman,488874904,SystemVerilog,ece385megaman,104,0,2022-05-05 07:39:21+00:00,[],
9120,https://github.com/edward88421/h3.git,2022-04-24 14:49:04+00:00,,0,edward88421/h3,485055105,SystemVerilog,h3,2,0,2022-04-24 14:53:39+00:00,[],
9121,https://github.com/yu655/test_git.git,2022-05-06 09:06:01+00:00,实验,0,yu655/test_git,489287700,SystemVerilog,test_git,4,0,2022-05-06 09:51:30+00:00,[],
9122,https://github.com/chengyuliiiiiu/EECS-470-Pro.git,2022-05-07 14:46:57+00:00,,0,chengyuliiiiiu/EECS-470-Pro,489700807,,EECS-470-Pro,1470,0,2022-04-28 20:44:03+00:00,[],https://api.github.com/licenses/mit
9123,https://github.com/JustinGao20/ECE385.git,2022-03-23 16:53:00+00:00,ECE385 codes,0,JustinGao20/ECE385,473278783,SystemVerilog,ECE385,56,0,2022-03-23 16:54:58+00:00,[],
9124,https://github.com/Leahcim-1/CSEE4840-River-Raid-HW.git,2022-03-25 17:32:19+00:00,,0,Leahcim-1/CSEE4840-River-Raid-HW,474105876,SystemVerilog,CSEE4840-River-Raid-HW,130,0,2022-03-29 21:05:39+00:00,[],
9125,https://github.com/stineolsen/TFE4174---Design-of-Digital-Systems-2.git,2022-03-31 12:57:06+00:00,TFE4147 - design of digtial systems 2,0,stineolsen/TFE4174---Design-of-Digital-Systems-2,476306125,SystemVerilog,TFE4174---Design-of-Digital-Systems-2,9951,0,2023-06-05 11:25:29+00:00,[],
9126,https://github.com/henesaud/risc-cpu.git,2022-03-25 18:26:34+00:00,Simple CPU written in System Verilog,0,henesaud/risc-cpu,474122736,SystemVerilog,risc-cpu,4,0,2022-08-09 23:08:29+00:00,[],
9127,https://github.com/MarcyGO/hw.git,2022-04-19 12:19:02+00:00,ECE385 final project hardware,0,MarcyGO/hw,483233894,SystemVerilog,hw,8,0,2022-04-19 12:21:30+00:00,[],
9128,https://github.com/pstyphan/src_pc.git,2022-04-24 19:53:21+00:00,,0,pstyphan/src_pc,485125699,SystemVerilog,src_pc,543,0,2022-04-24 19:53:41+00:00,[],
9129,https://github.com/ce323/riscv-handouts.git,2022-04-28 09:32:11+00:00,,1,ce323/riscv-handouts,486529802,SystemVerilog,riscv-handouts,17,0,2022-05-28 12:09:21+00:00,[],
9130,https://github.com/haykp/RAL_very_simple.git,2022-04-01 19:53:41+00:00,Very simple RAL model,0,haykp/RAL_very_simple,476851371,SystemVerilog,RAL_very_simple,8,0,2022-04-01 19:55:42+00:00,[],
9131,https://github.com/jacklee023/logging.git,2022-04-10 13:35:01+00:00,logging for systemverilog,0,jacklee023/logging,480027644,SystemVerilog,logging,120,0,2022-04-10 13:39:56+00:00,[],https://api.github.com/licenses/mit
9132,https://github.com/MiSTer-DB9/S32X_MiSTer_Manual.git,2022-04-26 18:56:20+00:00,,0,MiSTer-DB9/S32X_MiSTer_Manual,485911873,SystemVerilog,S32X_MiSTer_Manual,7281,0,2022-04-27 12:58:27+00:00,[],
9133,https://github.com/raulbehl/100DaysOfRTL.git,2022-06-12 06:50:06+00:00,100 Days of RTL,89,raulbehl/100DaysOfRTL,502541091,SystemVerilog,100DaysOfRTL,180,293,2024-04-12 04:04:46+00:00,[],
9134,https://github.com/nand2mario/nestang.git,2022-09-15 03:24:34+00:00,"NESTang is an FPGA Nintendo Entertainment System implemented with Sipeed Tang Primer 25K, Nano 20K and Primer 20K boards",29,nand2mario/nestang,536848750,SystemVerilog,nestang,9983,290,2024-04-07 16:52:18+00:00,"['nes', 'fpga']",https://api.github.com/licenses/gpl-3.0
9135,https://github.com/apfelaudio/eurorack-pmod.git,2022-06-18 17:17:54+00:00,Hardware and gateware for getting started in FPGA-based audio synthesis with open source tools.,7,apfelaudio/eurorack-pmod,504905833,SystemVerilog,eurorack-pmod,21829,158,2024-04-01 10:15:26+00:00,"['electronics', 'eurorack', 'fpga', 'hardware', 'modular-synthesizers', 'cocotb', 'kicad', 'synthesizer', 'verilog', 'yosys', 'pmod']",
9136,https://github.com/agg23/analogue-pocket-utils.git,2022-09-03 19:29:30+00:00,Collection of IP and information on how to develop for openFPGA and Analogue Pocket,3,agg23/analogue-pocket-utils,532355474,SystemVerilog,analogue-pocket-utils,56,104,2024-04-12 02:35:12+00:00,"['analogue-pocket', 'fpga', 'openfpga', 'hacktoberfest']",https://api.github.com/licenses/mit
9137,https://github.com/pulp-platform/cheshire.git,2022-09-01 07:39:26+00:00,A minimal Linux-capable 64-bit RISC-V SoC built around CVA6,27,pulp-platform/cheshire,531413954,SystemVerilog,cheshire,30578,99,2024-04-09 04:45:06+00:00,"['fpga', 'riscv', 'rtl-design', 'simulation', 'systemverilog', 'asic']",
9138,https://github.com/mathis-s/SoomRV.git,2022-09-10 22:24:55+00:00,A simple superscalar out of order RISC-V (micro)processor,6,mathis-s/SoomRV,535133158,SystemVerilog,SoomRV,2550,94,2024-04-09 04:50:08+00:00,['risc-v'],https://api.github.com/licenses/mit
9139,https://github.com/lizhirui/AXI-SDCard-High-Speed-Controller.git,2022-08-27 10:58:20+00:00,A SDCard Controller Based AXI4 Bus with SDIO 4-wire 50MHz Mode(Max Rate 23MB/s),14,lizhirui/AXI-SDCard-High-Speed-Controller,529559093,SystemVerilog,AXI-SDCard-High-Speed-Controller,234,93,2024-04-12 01:30:34+00:00,[],https://api.github.com/licenses/apache-2.0
9140,https://github.com/WangXuan95/FPGA-SATA-HBA.git,2022-08-15 12:59:51+00:00,A SATA host (HBA) core based on Xilinx FPGA with GTH to read/write hard disk. 一个基于Xilinx FPGA中的GTH的SATA host控制器，用来读写硬盘。,19,WangXuan95/FPGA-SATA-HBA,524988427,SystemVerilog,FPGA-SATA-HBA,5304,68,2024-04-03 03:30:25+00:00,"['fpga', 'sata', 'sata-controller', 'systemverilog', 'verilog', 'sata-core', 'sata-hba', 'sata-hba-controller', 'sata-hba-core', 'virtex-7']",https://api.github.com/licenses/gpl-3.0
9141,https://github.com/pulp-platform/iDMA.git,2022-07-26 12:25:38+00:00,"A modular, parametrizable, and highly flexible Data Movement Accelerator (DMA)",19,pulp-platform/iDMA,518051260,SystemVerilog,iDMA,6215,60,2024-04-11 11:35:07+00:00,[],
9142,https://github.com/lowRISC/muntjac.git,2022-06-10 15:33:30+00:00,64-bit multicore RISC-V processor,4,lowRISC/muntjac,502094220,SystemVerilog,muntjac,963,55,2024-04-09 05:04:09+00:00,[],https://api.github.com/licenses/apache-2.0
9143,https://github.com/mbits-mirafra/SystemVerilogCourse.git,2022-06-30 10:39:02+00:00,This is a detailed SystemVerilog course ,23,mbits-mirafra/SystemVerilogCourse,509037539,SystemVerilog,SystemVerilogCourse,18405,54,2024-04-09 05:03:07+00:00,[],
9144,https://github.com/tinyvision-ai-inc/Hands-on-FPGA-class.git,2022-06-02 21:28:02+00:00,,8,tinyvision-ai-inc/Hands-on-FPGA-class,499296047,SystemVerilog,Hands-on-FPGA-class,9107,35,2024-04-04 11:47:29+00:00,[],
9145,https://github.com/Shehab-Naga/ddr5_phy.git,2022-06-30 11:56:20+00:00,DDR5 PHY Graduation project (Verification Team) under supervision of Si-Vision,16,Shehab-Naga/ddr5_phy,509060808,SystemVerilog,ddr5_phy,13593,34,2024-03-15 01:28:15+00:00,"['gp', 'systemverilog', 'uvm']",https://api.github.com/licenses/mit
9146,https://github.com/ericlewis/openfpga-spacerace.git,2022-09-09 13:57:29+00:00,"FPGA implementation of Arcade Space Race (Atari, 1973) for Analogue Pocket.",0,ericlewis/openfpga-spacerace,534664989,SystemVerilog,openfpga-spacerace,4866,32,2023-10-14 04:25:52+00:00,"['analogue-pocket', 'fpga', 'mister']",
9147,https://github.com/aignacio/axi_dma.git,2022-06-19 12:53:37+00:00,General Purpose AXI Direct Memory Access,7,aignacio/axi_dma,505109321,SystemVerilog,axi_dma,1118,31,2024-03-20 14:43:28+00:00,[],https://api.github.com/licenses/mit
9148,https://github.com/ttchisholm/10g-low-latency-ethernet.git,2022-06-19 10:51:41+00:00,10G Low Latency Ethernet,9,ttchisholm/10g-low-latency-ethernet,505082250,SystemVerilog,10g-low-latency-ethernet,542,25,2024-02-22 10:30:39+00:00,"['cocotb', 'ethernet', 'fpga', 'pyuvm', 'systemverilog', 'xilinx']",https://api.github.com/licenses/mit
9149,https://github.com/krikzz/tot6502.git,2022-05-15 09:12:07+00:00,,4,krikzz/tot6502,492438386,SystemVerilog,tot6502,6,25,2022-12-17 04:44:27+00:00,[],
9150,https://github.com/avashist003/SystemVerilog_Design_Verification.git,2022-07-13 01:27:53+00:00,Various RTL design blocks along with verification testbenches with SVAs. Designed using SystemVerilog,3,avashist003/SystemVerilog_Design_Verification,513341931,SystemVerilog,SystemVerilog_Design_Verification,362,23,2024-03-21 03:47:44+00:00,"['rtldesign', 'systemverilog']",https://api.github.com/licenses/mit
9151,https://github.com/wenxuan-hu/SSRL_work.git,2022-08-26 18:14:35+00:00,"work in SSRL, SOC/NOC/Chiplet Design, DDR/UCIe/PCIe, UVM Framework",3,wenxuan-hu/SSRL_work,529362201,SystemVerilog,SSRL_work,11574,20,2024-04-09 08:25:01+00:00,[],
9152,https://github.com/abdelrhman-oun/DDR5_PHY_WriteOperation.git,2022-08-29 14:16:51+00:00,,6,abdelrhman-oun/DDR5_PHY_WriteOperation,530251710,SystemVerilog,DDR5_PHY_WriteOperation,17844,20,2024-04-13 03:59:49+00:00,"['ddr5', 'fpga', 'systemverilog', 'ddr5-phy']",
9153,https://github.com/pulp-platform/sne.git,2022-08-19 19:15:42+00:00,,0,pulp-platform/sne,526725531,SystemVerilog,sne,212,14,2024-02-07 09:12:35+00:00,[],
9154,https://github.com/WajahatRiaz/QuadSPI.git,2022-05-24 20:02:14+00:00,RTL development of Quad Serial Peripheral Interface (Quad-SPI) on QuestaSim using SystemVerilog.,6,WajahatRiaz/QuadSPI,495970930,SystemVerilog,QuadSPI,1402,14,2024-04-03 01:50:28+00:00,"['quadspi', 'questasim', 'rtl', 'systemverilog', 'quad-spi', 'computerarchitecture', 'digitalsystemdesign']",https://api.github.com/licenses/apache-2.0
9155,https://github.com/pulp-platform/axi_llc.git,2022-08-16 11:59:03+00:00,,13,pulp-platform/axi_llc,525359830,SystemVerilog,axi_llc,1130,13,2023-09-28 09:34:38+00:00,[],
9156,https://github.com/ved-rivos/iommu-rtl.git,2022-05-21 17:20:50+00:00,RISC-V IOMMU in verilog,3,ved-rivos/iommu-rtl,494849014,SystemVerilog,iommu-rtl,61,13,2024-03-21 03:45:26+00:00,[],https://api.github.com/licenses/bsd-2-clause
9157,https://github.com/GabbedT/ApogeoRV.git,2022-08-15 10:05:29+00:00,"A RISC-V 32 bits, Out Of Order, single issue with branch prediction CPU, implementing the B, C, M and Zfinx extensions.",1,GabbedT/ApogeoRV,524937438,SystemVerilog,ApogeoRV,7376,13,2024-04-09 04:47:55+00:00,"['asic', 'cpu', 'fpga', 'hdl', 'systemverilog', 'rv32i', 'rv32c', 'rv32m', 'rv32b', 'rv32zfinx']",https://api.github.com/licenses/mit
9158,https://github.com/ZSusskind/BTHOWeN.git,2022-08-04 01:07:18+00:00,"Code to accompany ""Weightless Neural Networks for Efficient Edge Inference"", PACT 2022",4,ZSusskind/BTHOWeN,521079566,SystemVerilog,BTHOWeN,1696,11,2024-04-03 12:03:13+00:00,['weightless-neural-network'],https://api.github.com/licenses/mit
9159,https://github.com/muneeb-mbytes/UVMF.git,2022-06-02 11:07:31+00:00,,8,muneeb-mbytes/UVMF,499101616,SystemVerilog,UVMF,196229,11,2024-03-16 08:04:28+00:00,[],
9160,https://github.com/enkerewpo/methane.git,2022-08-04 09:59:50+00:00,A polyphonic synthesizer built on fpga and esp32,1,enkerewpo/methane,521213430,SystemVerilog,methane,70767,10,2024-03-16 12:55:32+00:00,"['fpga', 'music-hardware', 'synthesizer', 'esp32', 'chisel3', 'systemverilog', 'verilog']",https://api.github.com/licenses/bsd-3-clause
9161,https://github.com/apriya-ram/AXI_FIFO_BFM.git,2022-06-28 09:00:25+00:00,AXI4 with a FIFO integrated with VIP,81,apriya-ram/AXI_FIFO_BFM,508226520,SystemVerilog,AXI_FIFO_BFM,27565,10,2024-03-31 14:13:52+00:00,[],
9162,https://github.com/cyyself/CDIM-SoC.git,2022-09-15 14:30:13+00:00,SoC for CQU Dual Issue Machine,0,cyyself/CDIM-SoC,537065710,SystemVerilog,CDIM-SoC,19774,10,2023-10-03 10:46:29+00:00,[],
9163,https://github.com/ElectronAsh/sim_3do.git,2022-07-09 17:47:57+00:00,Verilator / Imgui sim for 3DO FPGA core attempt,1,ElectronAsh/sim_3do,512250226,SystemVerilog,sim_3do,2830,9,2024-02-17 22:29:53+00:00,[],
9164,https://github.com/antmicro/verilator-verification-features-tests.git,2022-07-06 08:20:07+00:00,,3,antmicro/verilator-verification-features-tests,511050271,SystemVerilog,verilator-verification-features-tests,29122,9,2024-03-14 09:25:21+00:00,[],https://api.github.com/licenses/apache-2.0
9165,https://github.com/FPGA-MAFIA/fpga_mafia.git,2022-08-07 08:46:28+00:00,Designing a Multi-Agent Fabric Integration Architecture to run on de10-lite FPGA. ,4,FPGA-MAFIA/fpga_mafia,522160671,SystemVerilog,fpga_mafia,28485,8,2024-01-12 18:34:36+00:00,"['mesh', 'riscv', 'fpga', 'manycore', 'hardware', 'risc-v']",https://api.github.com/licenses/mit
9166,https://github.com/MiSTer-devel/PokemonMini_MiSTer.git,2022-09-04 11:03:35+00:00,Pokemon Mini for MiSTer,4,MiSTer-devel/PokemonMini_MiSTer,532514377,SystemVerilog,PokemonMini_MiSTer,6909,7,2022-11-22 00:04:34+00:00,[],https://api.github.com/licenses/gpl-2.0
9167,https://github.com/flashbangout/apb_watchdog-.git,2022-06-13 14:52:26+00:00,apb_watchdog的uvm验证代码,1,flashbangout/apb_watchdog-,502999446,SystemVerilog,apb_watchdog-,43,6,2024-03-12 16:35:51+00:00,[],
9168,https://github.com/suisuisi/SystemVerilog.git,2022-08-06 14:48:29+00:00,SystemVerilog of syntax and Practices,0,suisuisi/SystemVerilog,521973574,SystemVerilog,SystemVerilog,22308,6,2024-01-26 00:14:24+00:00,[],https://api.github.com/licenses/mit
9169,https://github.com/SavourySnaX/MiSTer_KonixMultisystem.git,2022-05-14 11:47:44+00:00,MiSTer Implementation of the Konix Multi System - Based on the original Net Lists - And a new 8088 core based on https://www.reenigne.org/blog/8086-microcode-disassembled/,0,SavourySnaX/MiSTer_KonixMultisystem,492200628,SystemVerilog,MiSTer_KonixMultisystem,19770,6,2023-06-07 14:36:01+00:00,[],https://api.github.com/licenses/gpl-2.0
9170,https://github.com/robfinch/rfPhoenix.git,2022-08-25 20:41:02+00:00,rfPhoenix CPU / GPGPU core,1,robfinch/rfPhoenix,529011642,SystemVerilog,rfPhoenix,7544,6,2024-03-19 15:49:33+00:00,[],
9171,https://github.com/Raghavi9860/UVM_based_Verification_of_APB_protocol.git,2022-05-15 18:22:28+00:00,APB Protocol is designed and verified using System Verilog based UVM. The tool used in designing and simulation is EDA Playground.,1,Raghavi9860/UVM_based_Verification_of_APB_protocol,492569213,SystemVerilog,UVM_based_Verification_of_APB_protocol,20,5,2024-03-29 06:49:55+00:00,[],
9172,https://github.com/ninglixin98/AHB_GPIO.git,2022-08-08 15:10:22+00:00,,0,ninglixin98/AHB_GPIO,522598915,SystemVerilog,AHB_GPIO,54,5,2024-04-02 12:39:14+00:00,[],
9173,https://github.com/taneroksuz/wolv-z7.git,2022-06-03 13:17:20+00:00,Wolv Z7 is a RISC-V CPU core with floating point unit,3,taneroksuz/wolv-z7,499518333,SystemVerilog,wolv-z7,573,5,2024-04-08 13:30:52+00:00,"['hardware', 'risc-v', 'rv32', 'fpu', 'cpu', 'core', 'fpga']",https://api.github.com/licenses/apache-2.0
9174,https://github.com/BrianHGinc/BHG_I2C_init_RS232_debugger.git,2022-08-16 12:51:53+00:00,A Verilog I2C initializer with integrated RS232 debugger. *** New v1.1 Supports I2C CLK stretch and separate IO buffers for driving Efinix's IO primitive.,0,BrianHGinc/BHG_I2C_init_RS232_debugger,525378073,SystemVerilog,BHG_I2C_init_RS232_debugger,52,5,2023-07-25 15:00:34+00:00,"['verilog', 'i2c', 'rs232', 'verilog-hdl']",
9175,https://github.com/LTDS-Capo/ProcessORC.git,2022-07-13 19:06:59+00:00,,1,LTDS-Capo/ProcessORC,513640887,SystemVerilog,ProcessORC,12355,5,2024-01-07 17:08:49+00:00,[],
9176,https://github.com/antmicro/ahb-tl-bridge.git,2022-09-09 07:51:33+00:00,SystemVerilog implementation of the AHB to TileLink UL (Uncached Lightweight) bridge,2,antmicro/ahb-tl-bridge,534550284,SystemVerilog,ahb-tl-bridge,12,5,2023-12-23 19:15:10+00:00,[],https://api.github.com/licenses/apache-2.0
9177,https://github.com/Reconfigurable-Computing/flex_BRAM_FPGA.git,2022-09-13 02:07:35+00:00,"Verilog module for flexible instantiation of ROM/RAM of arbitrary depth and bit width. Automatically reduce BRAM usage through depth division, bit width division, and bit width folding.",1,Reconfigurable-Computing/flex_BRAM_FPGA,535922655,SystemVerilog,flex_BRAM_FPGA,7,5,2023-02-10 02:01:22+00:00,[],
9178,https://github.com/pulp-platform/CUTIE.git,2022-05-18 15:50:06+00:00,,2,pulp-platform/CUTIE,493728891,SystemVerilog,CUTIE,93,5,2024-03-20 09:15:46+00:00,[],
9179,https://github.com/amiq-consulting/amiq_fifo.git,2022-06-27 04:23:07+00:00,Functional Coverage Patterns for FIFO,1,amiq-consulting/amiq_fifo,507760948,SystemVerilog,amiq_fifo,45,5,2023-11-11 11:10:25+00:00,[],https://api.github.com/licenses/apache-2.0
9180,https://github.com/lizhirui/MyRISC-VCore-rtl.git,2022-07-22 08:50:07+00:00,MyRISC-VCore-rtl,0,lizhirui/MyRISC-VCore-rtl,516677790,SystemVerilog,MyRISC-VCore-rtl,420,5,2023-03-14 06:46:11+00:00,[],
9181,https://github.com/andreili/RISC-V-core.git,2022-09-07 19:17:39+00:00,My implementation of a RISC-V architecture,1,andreili/RISC-V-core,533907587,SystemVerilog,RISC-V-core,3294,5,2023-08-18 17:02:00+00:00,[],https://api.github.com/licenses/mit
9182,https://github.com/hgoli02/Computer-Architecture-Project.git,2022-07-29 20:14:31+00:00,Computer Architecture Project Spring 2022  4 phase MIPS,1,hgoli02/Computer-Architecture-Project,519338892,SystemVerilog,Computer-Architecture-Project,2032,4,2023-01-31 15:22:29+00:00,[],
9183,https://github.com/avinash-nonholonomy/olin-cafe-f22.git,2022-09-19 19:09:43+00:00,Repository for Olin's ENGR3410 - Fall 2022,27,avinash-nonholonomy/olin-cafe-f22,538658456,SystemVerilog,olin-cafe-f22,5678,4,2023-01-31 20:25:51+00:00,[],https://api.github.com/licenses/mit
9184,https://github.com/tinylabs/crypto-rtl-cores.git,2022-06-26 21:23:19+00:00,Fusesoc cores for crypto processing,0,tinylabs/crypto-rtl-cores,507687519,SystemVerilog,crypto-rtl-cores,1792,4,2024-03-14 13:14:27+00:00,[],
9185,https://github.com/vishal1303/Thanos.git,2022-06-11 16:24:08+00:00,Programmable Multi-Dimensional Table Filters for Line Rate Network Functions,1,vishal1303/Thanos,502399131,SystemVerilog,Thanos,10410,4,2023-09-22 07:47:41+00:00,[],
9186,https://github.com/antmicro/tl-ahb-bridge.git,2022-09-09 08:03:53+00:00,This project contains a SystemVerilog implementation of the TileLink UL (Uncached Lightweight) to AHB bridge.,2,antmicro/tl-ahb-bridge,534553835,SystemVerilog,tl-ahb-bridge,14,4,2023-12-23 19:14:53+00:00,[],https://api.github.com/licenses/apache-2.0
9187,https://github.com/MuhammadMajiid/MIPS-Processor.git,2022-09-03 20:06:51+00:00,Implementation of 32-bit MIPS-processor using SystemVerilog HDL,0,MuhammadMajiid/MIPS-Processor,532362979,SystemVerilog,MIPS-Processor,537,4,2023-10-23 04:02:39+00:00,[],
9188,https://github.com/chanum/uvm_spi_apb_verification.git,2022-07-12 13:50:18+00:00,,0,chanum/uvm_spi_apb_verification,513161082,SystemVerilog,uvm_spi_apb_verification,258,4,2023-11-18 07:06:28+00:00,[],
9189,https://github.com/supranational/minroot_hardware.git,2022-06-17 19:50:12+00:00,Minroot VDF Hardware Engine,1,supranational/minroot_hardware,504655245,SystemVerilog,minroot_hardware,43,4,2024-01-29 18:09:07+00:00,[],https://api.github.com/licenses/apache-2.0
9190,https://github.com/nockieboy/YM2149_PSG_system.git,2022-08-23 15:18:25+00:00,"YM2149 / AY-3-8910 Programmable Sound Generator in SystemVerilog and Verilog. Offers dual PSGs, programmable stereo mixer with bass and treble controls, standard I2S 44.1KHz or 48KHz 16-bit digital audio out, and built-in floating point system clock divider/generator.",2,nockieboy/YM2149_PSG_system,528048675,SystemVerilog,YM2149_PSG_system,188,4,2024-03-13 16:56:39+00:00,"['ay-3-8910', 'psg', 'systemverilog', 'verilog', 'ym2149', 'sound-generator', 'fpga', 'hdl', 'retrocomputing']",
9191,https://github.com/xing-benjamin/risc-v.git,2022-09-17 20:43:13+00:00,Repo for some fun RISC-V projects.,0,xing-benjamin/risc-v,537926063,SystemVerilog,risc-v,6026,4,2023-04-21 21:33:49+00:00,[],
9192,https://github.com/WazaAbdulkadir/Processor_that_can_communicate_with_UART.git,2022-07-21 04:38:37+00:00,A simple processor that have ability to communicate with ysing UART ,0,WazaAbdulkadir/Processor_that_can_communicate_with_UART,516225939,SystemVerilog,Processor_that_can_communicate_with_UART,506,4,2023-12-31 18:09:07+00:00,[],
9193,https://github.com/cggewehr/RISCV-crypto.git,2022-08-15 00:04:22+00:00,Ibex RISC-V core extended with hardware acceleration of cryptography functions ,0,cggewehr/RISCV-crypto,524807763,SystemVerilog,RISCV-crypto,71741,3,2023-12-20 13:00:14+00:00,[],
9194,https://github.com/coverify/axi4reg.git,2022-05-16 09:12:14+00:00,AXI4 VIP for Reg Verifiation,4,coverify/axi4reg,492761940,SystemVerilog,axi4reg,26,3,2023-12-25 13:17:49+00:00,[],
9195,https://github.com/abrahamjdn/Systemverilog-Verification-MIPS-Multicycle.git,2022-07-06 08:45:05+00:00,Scoreboard using Systemverilog for MIPS multicycle verification,0,abrahamjdn/Systemverilog-Verification-MIPS-Multicycle,511058223,SystemVerilog,Systemverilog-Verification-MIPS-Multicycle,17,3,2024-01-16 14:15:43+00:00,[],
9196,https://github.com/CompuSAR/control_cpu.git,2022-09-24 09:49:57+00:00,FPGA setup with memory and Risc V CPU,1,CompuSAR/control_cpu,540781092,SystemVerilog,control_cpu,492,3,2024-04-08 10:39:06+00:00,[],
9197,https://github.com/kashifminhas/IBEX-Design-Verification-Environment.git,2022-06-09 05:40:00+00:00,RISCV-DV based UVM Environment for IBEX Core,0,kashifminhas/IBEX-Design-Verification-Environment,501519142,SystemVerilog,IBEX-Design-Verification-Environment,210,3,2023-10-13 01:30:45+00:00,[],
9198,https://github.com/ninglixin98/SRAM_Verification.git,2022-08-19 18:02:07+00:00,,0,ninglixin98/SRAM_Verification,526706011,SystemVerilog,SRAM_Verification,29,3,2023-06-09 17:41:51+00:00,[],
9199,https://github.com/charkster/tang_nano_9k-uart_block_ram.git,2022-05-17 02:09:38+00:00,"UART interface to a block ram in the Tang Nano 9k FPGA. No pin connections needed, just use the USB UART.",1,charkster/tang_nano_9k-uart_block_ram,493063119,SystemVerilog,tang_nano_9k-uart_block_ram,959,3,2023-02-02 22:53:13+00:00,"['block-ram', 'tang-nano-9k', 'uart']",https://api.github.com/licenses/mit
9200,https://github.com/iammituraj/reset_and_cdc_synchronizers.git,2022-08-17 17:22:15+00:00,Reset and CDC synchronizers developed in Verilog/System Verilog.,1,iammituraj/reset_and_cdc_synchronizers,525889628,SystemVerilog,reset_and_cdc_synchronizers,12,3,2024-01-18 22:12:36+00:00,"['cdc', 'reset', 'rtldesign', 'synchronization', 'clock']",
9201,https://github.com/ModestyJ/sv_mon_logic.git,2022-06-02 16:42:11+00:00,Simple monitoring logic to profile memory tarffic and utilizations,0,ModestyJ/sv_mon_logic,499214347,SystemVerilog,sv_mon_logic,149,3,2024-01-12 18:31:24+00:00,[],
9202,https://github.com/Ziboooo/simple_butterfly_FFT.git,2022-05-12 18:10:40+00:00,,1,Ziboooo/simple_butterfly_FFT,491620891,SystemVerilog,simple_butterfly_FFT,10212,3,2024-03-11 21:42:40+00:00,[],
9203,https://github.com/redchenjs/axi_h266enc.git,2022-07-16 13:45:34+00:00,AXI H.266 / VVC Encoder,0,redchenjs/axi_h266enc,514589649,SystemVerilog,axi_h266enc,125,3,2024-01-12 18:33:24+00:00,[],
9204,https://github.com/ddvca/2022-bishkek.git,2022-08-12 17:38:20+00:00,,5,ddvca/2022-bishkek,524174709,SystemVerilog,2022-bishkek,58854,3,2023-02-05 11:44:54+00:00,[],
9205,https://github.com/parsanoori/ca-project-mips.git,2022-06-28 20:54:01+00:00,,3,parsanoori/ca-project-mips,508451561,SystemVerilog,ca-project-mips,10,3,2023-05-10 07:08:37+00:00,[],
9206,https://github.com/zhangershuo/system_verilog-labs.git,2022-06-09 01:47:37+00:00,"Digital IC Verification, using system Verilog to verify the functions of preprocessing module and ALU",0,zhangershuo/system_verilog-labs,501468665,SystemVerilog,system_verilog-labs,80,3,2024-03-05 08:05:22+00:00,[],
9207,https://github.com/NishantSahay123/RAM_VERIFICATION_SV.git,2022-06-10 14:56:23+00:00,An environment written in system verilog to verify a dual port RAM module.,0,NishantSahay123/RAM_VERIFICATION_SV,502082299,SystemVerilog,RAM_VERIFICATION_SV,222,3,2024-03-15 08:39:39+00:00,[],
9208,https://github.com/mitshine/AXI_FIFO_BFMs.git,2022-07-27 11:56:54+00:00,to github,1,mitshine/AXI_FIFO_BFMs,518438861,SystemVerilog,AXI_FIFO_BFMs,16735,3,2023-09-18 12:29:30+00:00,[],
9209,https://github.com/pulp-platform/rpc_dram_controller.git,2022-09-01 11:07:08+00:00,,0,pulp-platform/rpc_dram_controller,531481542,SystemVerilog,rpc_dram_controller,193,3,2023-05-31 15:59:18+00:00,[],
9210,https://github.com/victor-welter/EC4-ACD-SystemVerilog.git,2022-08-18 22:06:01+00:00,"Algoritmos de descrição de hardware feitos em SystemVerilog durante as aulas de ANÁLISE DE CIRCUITOS DIGITAIS I, do 4° semestre do curso de Engenharia de Computação - SETREM.",0,victor-welter/EC4-ACD-SystemVerilog,526386445,SystemVerilog,EC4-ACD-SystemVerilog,1007,3,2023-10-24 18:33:17+00:00,"['hdl', 'systemverilog']",
9211,https://github.com/imocanu/dvf.git,2022-08-20 07:49:12+00:00,Design verification framework for any hardware IP,0,imocanu/dvf,526861073,SystemVerilog,dvf,18,3,2023-12-16 13:05:42+00:00,[],https://api.github.com/licenses/apache-2.0
9212,https://github.com/hdlguy/zuboard.git,2022-08-08 20:52:02+00:00,Some fpga and software logic to test out the new Avnet ZUBoard.,1,hdlguy/zuboard,522703681,SystemVerilog,zuboard,11471,2,2024-03-08 07:54:49+00:00,[],https://api.github.com/licenses/mit
9213,https://github.com/anmehta4/ece554_minilab4.git,2022-09-22 20:32:39+00:00,,0,anmehta4/ece554_minilab4,540159873,SystemVerilog,ece554_minilab4,13,2,2023-03-15 14:00:34+00:00,[],
9214,https://github.com/eshanbhatia22/Multi_Core_Caches_Source_Code.git,2022-05-27 17:53:42+00:00,This project demonstrates a comprehensive approach to create a verification environment for verifying caches in a multi-core system.,1,eshanbhatia22/Multi_Core_Caches_Source_Code,497089771,SystemVerilog,Multi_Core_Caches_Source_Code,69,2,2024-03-12 00:59:41+00:00,[],
9215,https://github.com/RedaCB/AES256-IP-Core.git,2022-05-19 11:19:30+00:00,Accelerator H/W AES-256 IP Core run successfully on Xilinx ZC-702 board (Zynq-7000). Works in ECB and CBC modes.,0,RedaCB/AES256-IP-Core,494039926,SystemVerilog,AES256-IP-Core,82,2,2024-04-10 15:57:55+00:00,[],
9216,https://github.com/seanpm2001/Learn-SystemVerilog.git,2022-09-23 21:57:36+00:00,"A repository for showcasing my knowledge of the SystemVerilog programming language, and continuing to learn the language",1,seanpm2001/Learn-SystemVerilog,540629640,SystemVerilog,Learn-SystemVerilog,502,2,2022-11-28 00:18:00+00:00,"['article', 'gpl3', 'gplv3', 'knowledge', 'learn', 'md', 'seanpm2001', 'seanpm2001-education', 'seanpm2001-learn', 'systemverilog', 'txt', 'verilog', 'learn-systemverilog', 'learn-systemverilog-lang', 'learn-systemverilog-language', 'systemverilog-lang', 'systemverilog-language']",https://api.github.com/licenses/gpl-3.0
9217,https://github.com/dh73/uninterpreted_functions.git,2022-05-26 15:14:06+00:00,Uninterpreted functions examples,0,dh73/uninterpreted_functions,496668871,SystemVerilog,uninterpreted_functions,4,2,2023-06-28 03:53:05+00:00,"['formal-methods', 'formal-verification', 'model-checking', 'smt', 'systemverilog']",https://api.github.com/licenses/bsd-3-clause
9218,https://github.com/jpdoane/6502.git,2022-08-27 21:16:59+00:00,,1,jpdoane/6502,529698737,SystemVerilog,6502,3678,2,2024-02-27 03:59:41+00:00,[],
9219,https://github.com/HarieshAnbalagan/RV32I.git,2022-09-10 19:22:00+00:00,Minimalistic RV32I RISC-V Processor in System Verilog,0,HarieshAnbalagan/RV32I,535097296,SystemVerilog,RV32I,401,2,2024-02-11 04:27:33+00:00,"['processor', 'risc-v', 'rv32i', 'computer-architecture', 'digital-design', 'fpga', 'instruction-set-architecture', 'simulations', 'systemverilog']",https://api.github.com/licenses/mit
9220,https://github.com/mitshine/virtual_sequences_and_virtual_sequencer.git,2022-06-29 17:24:53+00:00,,0,mitshine/virtual_sequences_and_virtual_sequencer,508784924,SystemVerilog,virtual_sequences_and_virtual_sequencer,6,2,2024-02-29 07:38:07+00:00,[],
9221,https://github.com/minecraftdixit/spi-.git,2022-08-17 17:06:49+00:00,Serial peripheral interface protocol using verilog and testbench ,0,minecraftdixit/spi-,525885950,SystemVerilog,spi-,8,2,2024-04-07 23:00:25+00:00,[],
9222,https://github.com/Marc43/NES-CPU.git,2022-05-21 15:02:47+00:00,,0,Marc43/NES-CPU,494815089,SystemVerilog,NES-CPU,25,2,2022-05-25 09:25:53+00:00,[],
9223,https://github.com/PaulThomas20002/S4-DIGITAL-LAB.git,2022-07-27 13:28:08+00:00," This course helps the learners to get familiarized with (i) Digital Logic Design through the implementation of Logic Circuits using ICs of basic logic gates & flipflops and (ii) Hardware Description Language based Digital Design. This course helps the learners to design and implement hardware systems in areas such as games, music, digital filters, wireless communications and graphical displays. Prerequisite : Topics covered under the course Logic System Design (CST 203) ",0,PaulThomas20002/S4-DIGITAL-LAB,518469625,SystemVerilog,S4-DIGITAL-LAB,4135,2,2023-01-05 14:20:47+00:00,[],
9224,https://github.com/SkillSurf/a-risc.git,2022-07-31 20:57:18+00:00,A Custom RISC CPU in 99 Lines of SystemVerilog,0,SkillSurf/a-risc,519885576,SystemVerilog,a-risc,516,2,2023-10-14 04:34:27+00:00,[],
9225,https://github.com/wbbbbbb123/UVM-based-Asynchronous-FIFO-verification-platform-design.git,2022-08-08 09:43:42+00:00,,0,wbbbbbb123/UVM-based-Asynchronous-FIFO-verification-platform-design,522488871,SystemVerilog,UVM-based-Asynchronous-FIFO-verification-platform-design,390,2,2023-08-14 07:19:02+00:00,[],
9226,https://github.com/maedehdehghanam/risc-v-Multi-Cycle.git,2022-07-05 20:26:05+00:00,A Multi Cycle implementation of the RISC-V,0,maedehdehghanam/risc-v-Multi-Cycle,510884251,SystemVerilog,risc-v-Multi-Cycle,16,2,2023-09-01 20:32:20+00:00,[],https://api.github.com/licenses/mit
9227,https://github.com/gr33nka/LZC.git,2022-08-21 22:36:09+00:00,Leading-Zero Counting (for FPU),0,gr33nka/LZC,527342310,SystemVerilog,LZC,835,2,2023-08-10 17:37:56+00:00,[],https://api.github.com/licenses/gpl-3.0
9228,https://github.com/wxiaoyao17/ces_svtb_2016.06.git,2022-09-09 08:22:33+00:00,,0,wxiaoyao17/ces_svtb_2016.06,534559624,SystemVerilog,ces_svtb_2016.06,55,2,2024-04-09 04:44:15+00:00,[],
9229,https://github.com/SiavashShams/ARM-Processor_With_Forwarding_And_SRAM.git,2022-09-18 16:21:56+00:00,"The code for the ARM processor with forwarding and SRAM, and the synthesized code for implementation on EP2C70F672C8N FPGA board programmed through Quartus II.",0,SiavashShams/ARM-Processor_With_Forwarding_And_SRAM,538168013,SystemVerilog,ARM-Processor_With_Forwarding_And_SRAM,2558,2,2022-09-20 08:39:52+00:00,"['arm', 'fpga', 'forwarding', 'sram', 'modelsim', 'quartus']",
9230,https://github.com/ninglixin98/AHB_RAM.git,2022-07-09 01:56:17+00:00,,0,ninglixin98/AHB_RAM,512069749,SystemVerilog,AHB_RAM,803,2,2022-10-24 05:25:30+00:00,[],
9231,https://github.com/dagronlund/reptilia.git,2022-07-11 20:57:04+00:00,"Fun RTL, more to come",0,dagronlund/reptilia,512906688,SystemVerilog,reptilia,10783,2,2023-07-20 21:35:42+00:00,[],
9232,https://github.com/ccbrown/axi-lite-sv.git,2022-05-24 05:58:02+00:00,,0,ccbrown/axi-lite-sv,495688580,SystemVerilog,axi-lite-sv,11,2,2023-09-30 02:39:53+00:00,[],
9233,https://github.com/huihui0717/AXI2APB_bridge-TestBench.git,2022-08-30 08:31:31+00:00,This is a simple testbench for axi2apb_bridge via AXI/APB VIP.,0,huihui0717/AXI2APB_bridge-TestBench,530566175,SystemVerilog,AXI2APB_bridge-TestBench,5,2,2023-10-26 05:41:17+00:00,[],https://api.github.com/licenses/mit
9234,https://github.com/imjp2020/UVM_FIFO_TB.git,2022-09-24 11:41:13+00:00,This testbench is based on SV and UVM Class based to verify Verilog HDL Design,0,imjp2020/UVM_FIFO_TB,540809689,SystemVerilog,UVM_FIFO_TB,23,2,2023-11-30 04:50:01+00:00,"['system-verilog', 'uvm', 'verilog-hdl']",https://api.github.com/licenses/mit
9235,https://github.com/cc-hook/uvm_easy_printer.git,2022-06-28 13:51:15+00:00,"A hybrid uvm printer, include TABLE_PRINTER，TREE_PRINTER，YAML_PRINTER，JSON_PRINTER.",1,cc-hook/uvm_easy_printer,508319179,SystemVerilog,uvm_easy_printer,4,2,2024-02-04 11:56:31+00:00,[],https://api.github.com/licenses/mit
9236,https://github.com/stephancill/msm-hardware-acceleration.git,2022-08-09 21:13:35+00:00,,1,stephancill/msm-hardware-acceleration,523110433,SystemVerilog,msm-hardware-acceleration,868,2,2024-04-10 09:49:22+00:00,[],https://api.github.com/licenses/mit
9237,https://github.com/gostbit/watchdog.git,2022-05-31 16:08:32+00:00,,0,gostbit/watchdog,498407276,SystemVerilog,watchdog,1891,2,2022-10-24 05:11:48+00:00,[],
9238,https://github.com/01fe21mve005/Advance-Digital-Logic-Verification.git,2022-09-06 10:31:58+00:00,,0,01fe21mve005/Advance-Digital-Logic-Verification,533274543,SystemVerilog,Advance-Digital-Logic-Verification,396,2,2022-11-07 08:24:45+00:00,[],
9239,https://github.com/jairaj99/Jairaj_Mirashi.git,2022-07-11 14:40:10+00:00,,0,jairaj99/Jairaj_Mirashi,512794287,SystemVerilog,Jairaj_Mirashi,797,2,2023-11-22 14:30:16+00:00,[],
9240,https://github.com/yigityalin/digital-design.git,2022-05-24 20:28:28+00:00,My lab solutions for the CS 223 (Digital Design) course at Bilkent University.,1,yigityalin/digital-design,495978048,SystemVerilog,digital-design,1142,2,2023-02-02 18:11:42+00:00,[],
9241,https://github.com/He-Liu-ooo/Ibex-RISCV-floating-point-instruction-set-extensions.git,2022-05-31 14:26:07+00:00,This is a floating-point instruction set extension based on Ibex RISCV CPU,0,He-Liu-ooo/Ibex-RISCV-floating-point-instruction-set-extensions,498369885,SystemVerilog,Ibex-RISCV-floating-point-instruction-set-extensions,2075,2,2023-08-13 06:45:10+00:00,[],
9242,https://github.com/CaseyZhu/STL.git,2022-06-25 03:11:12+00:00,IC digital design common used module,0,CaseyZhu/STL,507201081,SystemVerilog,STL,6923,2,2023-10-06 14:32:24+00:00,[],
9243,https://github.com/pulp-platform/opentitan_peripherals.git,2022-08-15 15:30:48+00:00,Selected peripherals from OpenTitan with PULP patches,0,pulp-platform/opentitan_peripherals,525040482,SystemVerilog,opentitan_peripherals,291,2,2023-10-15 16:04:53+00:00,[],https://api.github.com/licenses/apache-2.0
9244,https://github.com/Zvord/Censor.DV.git,2022-09-19 13:35:41+00:00,,0,Zvord/Censor.DV,538519384,SystemVerilog,Censor.DV,309,2,2023-01-18 13:30:09+00:00,[],
9245,https://github.com/jceee5510/RISC-V-Processor-Design-FPGA-.git,2022-08-13 20:46:37+00:00,,0,jceee5510/RISC-V-Processor-Design-FPGA-,524504470,SystemVerilog,RISC-V-Processor-Design-FPGA-,1974,2,2022-11-18 01:56:31+00:00,[],
9246,https://github.com/Abdul-muheet-ghani/UVM-Practice.git,2022-05-29 08:59:15+00:00,This repository containing the practice code from beginning related to SystemVerilog OOP and UVM,1,Abdul-muheet-ghani/UVM-Practice,497538216,SystemVerilog,UVM-Practice,128,2,2023-01-31 08:46:36+00:00,"['oop', 'systemverilog', 'uvm', 'verification']",https://api.github.com/licenses/unlicense
9247,https://github.com/jayeshsuyal/Verification-of-APB_RAM.git,2022-09-09 05:18:00+00:00,,0,jayeshsuyal/Verification-of-APB_RAM,534508008,SystemVerilog,Verification-of-APB_RAM,3,2,2023-02-21 13:06:34+00:00,[],
9248,https://github.com/aliyun/aliyun-faas-agilex.git,2022-09-13 02:29:17+00:00,,1,aliyun/aliyun-faas-agilex,535928184,SystemVerilog,aliyun-faas-agilex,161342,2,2023-03-14 06:06:21+00:00,[],https://api.github.com/licenses/apache-2.0
9249,https://github.com/gjm9999/verification_based_modelsim.git,2022-06-08 14:53:34+00:00,A RTL simulation verification platform based on Modelsim,0,gjm9999/verification_based_modelsim,501296016,SystemVerilog,verification_based_modelsim,464,2,2024-01-20 19:30:36+00:00,[],https://api.github.com/licenses/apache-2.0
9250,https://github.com/murphi2chisel/murphi2chisel.git,2022-06-04 02:35:58+00:00,,0,murphi2chisel/murphi2chisel,499705266,SystemVerilog,murphi2chisel,178285,1,2023-05-16 11:09:43+00:00,[],
9251,https://github.com/ofernis/ALU-implementation-SV.git,2022-05-13 08:47:15+00:00,,0,ofernis/ALU-implementation-SV,491824183,SystemVerilog,ALU-implementation-SV,1130,1,2022-05-13 10:12:47+00:00,[],
9252,https://github.com/pulp-platform/axi_tlb.git,2022-08-16 12:00:20+00:00,,0,pulp-platform/axi_tlb,525360267,SystemVerilog,axi_tlb,34,1,2023-07-25 15:00:33+00:00,[],
9253,https://github.com/XarkLabs/BenEaterSV.git,2022-07-29 01:52:50+00:00,A SystemVerilog CPU inspired by Ben Eater's SAP-1 design,1,XarkLabs/BenEaterSV,519047610,SystemVerilog,BenEaterSV,1952,1,2023-03-07 13:49:33+00:00,[],https://api.github.com/licenses/mit
9254,https://github.com/LucasLedouxM/RISC-V-Processor.git,2022-06-17 05:12:03+00:00,,0,LucasLedouxM/RISC-V-Processor,504401874,SystemVerilog,RISC-V-Processor,386,1,2022-11-18 02:08:04+00:00,[],
9255,https://github.com/yamader/test.git,2022-09-12 10:04:20+00:00,もろもろ,0,yamader/test,535607430,SystemVerilog,test,3,1,2023-07-03 16:15:34+00:00,[],
9256,https://github.com/lcbcFoo/cfe-wait-feedback-hw.git,2022-07-25 19:23:31+00:00,Digital module that estimates the number of cycles that the CFE waits before recalculating the carrier frequency offset,0,lcbcFoo/cfe-wait-feedback-hw,517793543,SystemVerilog,cfe-wait-feedback-hw,4,1,2024-03-14 12:32:43+00:00,[],
9257,https://github.com/comsec-group/cellift-cva6.git,2022-06-09 10:43:23+00:00,The CVA6 design frozen and instrumented for the CellIFT paper experiments ,0,comsec-group/cellift-cva6,501610896,SystemVerilog,cellift-cva6,10614,1,2024-03-26 21:09:59+00:00,[],
9258,https://github.com/nekrasov-d/gabella.git,2022-07-03 21:52:39+00:00,Guitar processing pedal on FPGA,0,nekrasov-d/gabella,510143194,SystemVerilog,gabella,455,1,2024-04-05 12:30:58+00:00,[],https://api.github.com/licenses/mit
9259,https://github.com/Aikiro42/cs-21-project.git,2022-05-22 10:01:40+00:00,Repository of CS 21 project where I am instructed to add features to an incomplete MIPS datapath,0,Aikiro42/cs-21-project,495021276,SystemVerilog,cs-21-project,2976,1,2022-06-07 00:00:50+00:00,[],
9260,https://github.com/Dany2002-hub/5-port_NoC_Router.git,2022-07-22 08:10:29+00:00,,0,Dany2002-hub/5-port_NoC_Router,516665738,SystemVerilog,5-port_NoC_Router,20,1,2022-12-15 00:28:38+00:00,[],
9261,https://github.com/iammituraj/gcd_calculator.git,2022-07-23 14:35:03+00:00,GCD calculator with APB Slave interface.,0,iammituraj/gcd_calculator,517081241,SystemVerilog,gcd_calculator,25,1,2022-08-23 09:54:11+00:00,"['rtl', 'systemverilog', 'verilog', 'apb']",
9263,https://github.com/wedogg/mcdt_uvm.git,2022-06-02 05:51:34+00:00,,1,wedogg/mcdt_uvm,499008493,SystemVerilog,mcdt_uvm,15,1,2022-06-03 22:15:55+00:00,[],
9264,https://github.com/rggen/rggen-sample-plugin.git,2022-07-06 14:37:04+00:00,Sample plugin project,0,rggen/rggen-sample-plugin,511174031,SystemVerilog,rggen-sample-plugin,10,1,2022-07-08 08:25:34+00:00,[],https://api.github.com/licenses/mit
9265,https://github.com/avisalmon/VGAstarter_DE10_lite.git,2022-09-19 16:56:41+00:00,Starter Verilog project for VGA games on DE10 lite,2,avisalmon/VGAstarter_DE10_lite,538605769,SystemVerilog,VGAstarter_DE10_lite,12324,1,2022-10-26 21:56:41+00:00,[],
9266,https://github.com/MinhTran0911/DS1302_Interface_DE10.git,2022-07-30 14:33:57+00:00,DS1302 Real-time Clock (RTC) Module Interfacing with Terasic DE-10 Standard FPGA,0,MinhTran0911/DS1302_Interface_DE10,519539397,SystemVerilog,DS1302_Interface_DE10,15351,1,2023-11-28 09:42:51+00:00,"['ds1302', 'hardware-description-language', 'hdl', 'rtc-module', 'systemverilog', 'terasic-de10-standard', 'altera-fpga', 'cyclone-v', 'quartus-prime', 'modelsim']",
9267,https://github.com/aignacio/ethernet_axi.git,2022-07-03 18:41:41+00:00,AXI wrapper around Ethernet module,1,aignacio/ethernet_axi,510107206,SystemVerilog,ethernet_axi,316,1,2024-02-10 14:59:13+00:00,[],
9268,https://github.com/nextDesignd/fpro-impl.git,2022-05-12 14:03:15+00:00,,0,nextDesignd/fpro-impl,491538439,SystemVerilog,fpro-impl,38,1,2022-05-26 18:10:16+00:00,[],
9269,https://github.com/ofernis/Multiplier-FSM-SV.git,2022-05-13 08:54:18+00:00,,0,ofernis/Multiplier-FSM-SV,491826553,SystemVerilog,Multiplier-FSM-SV,1085,1,2022-05-13 10:12:43+00:00,[],
9270,https://github.com/zhichaolin/axi-ram.git,2022-08-09 16:36:37+00:00,My project aims to test a axi-ram module using UVM method.,0,zhichaolin/axi-ram,523029928,SystemVerilog,axi-ram,92,1,2023-09-21 08:42:17+00:00,[],
9271,https://github.com/minghungumich/TestSetup-GF12-OpenTitanSoC.git,2022-08-18 18:52:37+00:00,,0,minghungumich/TestSetup-GF12-OpenTitanSoC,526336872,SystemVerilog,TestSetup-GF12-OpenTitanSoC,198,1,2023-11-29 18:50:48+00:00,[],https://api.github.com/licenses/apache-2.0
9272,https://github.com/jstlwy/riscv32i.git,2022-05-27 04:43:00+00:00,RISC-V 32-bit Base ISA Implementation,0,jstlwy/riscv32i,496862668,SystemVerilog,riscv32i,17,1,2024-02-11 04:08:32+00:00,"['risc-v', 'systemverilog']",
9273,https://github.com/kkinos/ktc32.git,2022-07-10 16:28:10+00:00,A hobby 32-bit CPU implemented in SystemVerilog.,0,kkinos/ktc32,512483794,SystemVerilog,ktc32,483,1,2024-04-03 00:56:31+00:00,"['cpu', 'hdl', 'systemverilog', 'fpga']",https://api.github.com/licenses/mit
9274,https://github.com/kolosya-tuchka/12-bit-RISC-processor.git,2022-05-21 06:25:01+00:00,Самый крутой процессор в мире!,0,kolosya-tuchka/12-bit-RISC-processor,494699578,SystemVerilog,12-bit-RISC-processor,5388,1,2023-05-12 06:11:23+00:00,[],
9275,https://github.com/zjcymk/RISC-V.git,2022-08-02 11:58:24+00:00,,0,zjcymk/RISC-V,520479571,SystemVerilog,RISC-V,47,1,2022-08-25 14:18:57+00:00,[],
9276,https://github.com/bhushanpatel1999/Multicycle-MIPS-Processor.git,2022-07-25 20:06:47+00:00,"Building a full-scale MIPS-ISA multicycle processor with a datapath, control unit, and memory.",0,bhushanpatel1999/Multicycle-MIPS-Processor,517805379,SystemVerilog,Multicycle-MIPS-Processor,8933,1,2022-07-25 20:18:28+00:00,[],
9277,https://github.com/jefferyxu1/Hardware-SHA256.git,2022-07-22 08:04:17+00:00,Verilog for a hardware SHA-256 calculator,0,jefferyxu1/Hardware-SHA256,516663882,SystemVerilog,Hardware-SHA256,20,1,2023-10-30 10:00:28+00:00,[],
9278,https://github.com/anitharacharla/AXI_BFM.git,2022-09-23 06:28:46+00:00,,0,anitharacharla/AXI_BFM,540308691,SystemVerilog,AXI_BFM,9858,1,2023-03-17 07:36:08+00:00,[],
9279,https://github.com/XarkLabs/upduino-video.git,2022-06-01 23:02:48+00:00,Fairly simple example of 8-color VGA text generation in SystemVerilog for UPduino FPGA,0,XarkLabs/upduino-video,498923131,SystemVerilog,upduino-video,710,1,2023-01-22 16:52:24+00:00,"['fpga', 'systemverilog', 'upduino', 'vga', 'vga-controller']",
9280,https://github.com/atmughrabi/GLay.git,2022-08-05 01:54:42+00:00,GLay: A Vertex Centric Re-Configurable Graph Processing Overlay,0,atmughrabi/GLay,521470429,SystemVerilog,GLay,247863,1,2024-03-10 01:53:49+00:00,"['alveo-acceleration-cards', 'bfs-algorithm', 'cgra', 'connected-components', 'fpga', 'graph', 'graph-processing', 'open-graph', 'overlay', 'pagerank', 'xilinx-fpga']",
9281,https://github.com/Sash-github-account/svm_rtl.git,2022-06-03 19:48:24+00:00,RTL implementation of Support Vector Machine in System verilog. Targetted for FPGA: De10-Nano,0,Sash-github-account/svm_rtl,499633148,SystemVerilog,svm_rtl,319,1,2023-04-18 11:51:20+00:00,[],https://api.github.com/licenses/gpl-3.0
9282,https://github.com/MidhunNair43/Systolic_3X3_Matrix_Mul.git,2022-06-16 20:32:31+00:00,A simple implementation of a 3X3 Matrix Multiplication using Systolic Array ,0,MidhunNair43/Systolic_3X3_Matrix_Mul,504297848,SystemVerilog,Systolic_3X3_Matrix_Mul,8,1,2022-06-24 19:20:04+00:00,[],
9283,https://github.com/linICsup/virtual-proj.git,2022-05-30 01:17:55+00:00,,0,linICsup/virtual-proj,497749288,SystemVerilog,virtual-proj,31,1,2022-06-08 08:55:35+00:00,[],
9284,https://github.com/sarpuser/SystemVerilog-Projects.git,2022-07-15 23:32:31+00:00,"This repo includes all the SystemVerilog projects I have created in my digital design class, along with RTL and state machine diagrams, and simulation results. All simulations were done on Quartus Prime Lite.",0,sarpuser/SystemVerilog-Projects,514430560,SystemVerilog,SystemVerilog-Projects,3072,1,2023-11-15 18:27:47+00:00,['systemverilog'],
9285,https://github.com/hdlguy/ftdi_sync_fifo.git,2022-07-14 16:34:24+00:00,An attempt to use the synchronous fifo mode of the FTDI FT2232H USB transceiver.,0,hdlguy/ftdi_sync_fifo,513974566,SystemVerilog,ftdi_sync_fifo,64,1,2024-02-02 05:50:12+00:00,[],https://api.github.com/licenses/mit
9286,https://github.com/pulp-platform/axi_stream.git,2022-09-01 14:22:30+00:00,,0,pulp-platform/axi_stream,531552773,SystemVerilog,axi_stream,49,1,2024-02-19 18:41:48+00:00,[],
9287,https://github.com/Aleksw3/AES-Scalar-Crypto.git,2022-06-10 15:14:48+00:00,,0,Aleksw3/AES-Scalar-Crypto,502088312,SystemVerilog,AES-Scalar-Crypto,14,1,2023-09-20 08:26:17+00:00,[],
9288,https://github.com/BB-Fly/Verilog-CPU.git,2022-08-26 09:44:14+00:00,使用Verilog模拟计算机单周期、多周期、流水线CPU,0,BB-Fly/Verilog-CPU,529200495,SystemVerilog,Verilog-CPU,35,1,2023-03-31 05:13:00+00:00,[],
9289,https://github.com/lebro991/BSIM_SHA1.git,2022-08-19 15:17:01+00:00,a  project  of SHA1 and write by verilog,0,lebro991/BSIM_SHA1,526655356,SystemVerilog,BSIM_SHA1,205,1,2023-01-27 04:18:51+00:00,[],
9290,https://github.com/VolodymyrSemenov/TrafficLightProject.git,2022-08-06 02:32:09+00:00,,0,VolodymyrSemenov/TrafficLightProject,521827072,SystemVerilog,TrafficLightProject,2821,1,2023-11-20 09:17:58+00:00,[],
9291,https://github.com/joachimcao/comparch203.git,2022-07-22 19:05:53+00:00,,1,joachimcao/comparch203,516860101,SystemVerilog,comparch203,1781,1,2022-09-13 06:31:52+00:00,[],https://api.github.com/licenses/apache-2.0
9292,https://github.com/ltcptgeneral/cse141L-project.git,2022-08-07 23:18:23+00:00,,1,ltcptgeneral/cse141L-project,522346627,SystemVerilog,cse141L-project,63,1,2023-04-02 02:49:47+00:00,[],
9293,https://github.com/alihaskar/ob.git,2022-05-14 12:08:12+00:00,"A high performance, hardware implementation of a financial Matching Engine (ME).",2,alihaskar/ob,492205273,,ob,464,1,2023-12-11 06:44:27+00:00,[],
9294,https://github.com/yuxiaojia/FPGA-based-Quadcopter-Flight-Controller.git,2022-05-31 22:23:51+00:00,Designed and tested an FPGA chip in to control the quadcopter with another partner. It receives commands wirelessly with a long-range Bluetooth module with a UART interface and gets the data from the inertial sensor with SPI to control the ESC motor. It was designed with the system Verilog and was also synthesized with Synopsis Design Vision. ,0,yuxiaojia/FPGA-based-Quadcopter-Flight-Controller,498515438,SystemVerilog,FPGA-based-Quadcopter-Flight-Controller,40,1,2023-12-15 02:42:47+00:00,[],
9295,https://github.com/litex-hub/pythondata-cpu-cva5.git,2022-05-18 00:37:47+00:00,Python module containing system_verilog files for cva5 cpu (for use with LiteX).,0,litex-hub/pythondata-cpu-cva5,493456793,SystemVerilog,pythondata-cpu-cva5,1324,1,2022-05-26 16:52:24+00:00,[],https://api.github.com/licenses/apache-2.0
9296,https://github.com/matin-yousefzade/Hardware-Accelerator-for-Neural-Networks.git,2022-08-13 15:53:47+00:00,"A processing element (PE), that makes two dimensional systolic array for hardware acceleration in neural networks.",0,matin-yousefzade/Hardware-Accelerator-for-Neural-Networks,524442906,SystemVerilog,Hardware-Accelerator-for-Neural-Networks,18,1,2023-10-20 10:17:51+00:00,[],
9297,https://github.com/kenezoer/YetAnotherUART.git,2022-09-15 17:22:34+00:00,Yet Another UART,0,kenezoer/YetAnotherUART,537133808,SystemVerilog,YetAnotherUART,244,1,2023-08-04 10:21:54+00:00,[],https://api.github.com/licenses/apache-2.0
9298,https://github.com/mungalched/clk_gen.git,2022-09-19 08:44:30+00:00,testing different clks frequency,1,mungalched/clk_gen,538410098,SystemVerilog,clk_gen,2,1,2023-06-13 02:49:29+00:00,[],
9299,https://github.com/zhudisheng/Study-System-Verilog-Step-By-Step.git,2022-08-15 03:36:07+00:00,Study System Verilog Step By Step,0,zhudisheng/Study-System-Verilog-Step-By-Step,524845179,SystemVerilog,Study-System-Verilog-Step-By-Step,30,1,2023-06-10 06:48:35+00:00,[],
9300,https://github.com/merledu/Quad_SPI.git,2022-06-01 16:17:01+00:00,Quad SPI interface for the micron flash available on arty a7-35t FPGA board,0,merledu/Quad_SPI,498810168,SystemVerilog,Quad_SPI,12,1,2022-06-04 12:18:02+00:00,[],
9301,https://github.com/jeras/TCB.git,2022-05-15 19:09:52+00:00,"Tightly Coupled Bus, low complexity, high performance system bus.",0,jeras/TCB,492579779,SystemVerilog,TCB,362,1,2023-11-08 14:38:37+00:00,"['system-bus', 'systemverilog']",https://api.github.com/licenses/apache-2.0
9302,https://github.com/phuvg/sync_fifo.git,2022-05-17 11:59:57+00:00,,0,phuvg/sync_fifo,493231571,SystemVerilog,sync_fifo,147,1,2023-09-07 08:06:35+00:00,[],
9303,https://github.com/HickHackz/WorldsHardestGameSOC.git,2022-07-26 04:32:34+00:00,ECE Project with Worlds Hardest Game built on MAX 10 Intel FPGAA,0,HickHackz/WorldsHardestGameSOC,517913149,SystemVerilog,WorldsHardestGameSOC,492,1,2022-07-26 21:35:33+00:00,[],
9304,https://github.com/AntonyUsoltsev/Clock_on_FPGA.git,2022-06-19 04:50:32+00:00,Clock on verilog for FPGA,0,AntonyUsoltsev/Clock_on_FPGA,505014544,SystemVerilog,Clock_on_FPGA,4,1,2022-12-19 10:53:10+00:00,"['clock', 'fpga', 'verilog']",
9305,https://github.com/GCET231/fpga_labs_22_1.git,2022-08-12 19:45:10+00:00,Lista de roteiros práticos desenvolvidos ao longo do curso GCET231 na UFRB.,1,GCET231/fpga_labs_22_1,524206631,SystemVerilog,fpga_labs_22_1,9767,1,2022-11-29 11:28:23+00:00,[],
9306,https://github.com/HAMZA-AFZAL404/RISC-V-32-bit-Single-Cycle.git,2022-07-18 15:00:45+00:00,This repository contains the verilog code files of Single Cycle RISC-V architecture,0,HAMZA-AFZAL404/RISC-V-32-bit-Single-Cycle,515230547,SystemVerilog,RISC-V-32-bit-Single-Cycle,1181,1,2024-03-26 07:16:17+00:00,[],
9307,https://github.com/ashleyjr/FPGA-Delay-Line.git,2022-08-25 20:52:42+00:00,,0,ashleyjr/FPGA-Delay-Line,529014664,SystemVerilog,FPGA-Delay-Line,1273,1,2023-10-28 04:33:03+00:00,[],
9308,https://github.com/PierreBeurCoursework/cse140l-lab-3.git,2022-07-19 19:43:15+00:00,,0,PierreBeurCoursework/cse140l-lab-3,515720296,SystemVerilog,cse140l-lab-3,98,1,2022-12-19 20:42:38+00:00,[],
9309,https://github.com/JayKaku/100DaysOfRTL-Jay.git,2022-08-17 05:21:29+00:00,"A consistant way to practise the RTL level code, play around with it, explore new way and coding pattern and learn along the way",0,JayKaku/100DaysOfRTL-Jay,525650303,SystemVerilog,100DaysOfRTL-Jay,3,1,2023-03-08 20:18:57+00:00,[],
9310,https://github.com/lchi021497/sv-parser.git,2022-08-12 06:01:47+00:00,Automate cone-of-influence of SV code,0,lchi021497/sv-parser,523973158,SystemVerilog,sv-parser,194,1,2023-04-25 12:42:33+00:00,[],
9312,https://github.com/litex-hub/pythondata-cpu-cv32e40s.git,2022-05-30 19:29:17+00:00,Python module containing system_verilog files for cv32e40s cpu (for use with LiteX).,0,litex-hub/pythondata-cpu-cv32e40s,498073075,SystemVerilog,pythondata-cpu-cv32e40s,11241,1,2023-05-09 06:23:45+00:00,[],https://api.github.com/licenses/apache-2.0
9313,https://github.com/jofrfu/PowerPC-SV.git,2022-06-05 16:37:26+00:00,PowerPC compliant processor written in SystemVerilog,0,jofrfu/PowerPC-SV,500152852,SystemVerilog,PowerPC-SV,233,1,2022-08-02 14:02:05+00:00,[],https://api.github.com/licenses/apache-2.0
9314,https://github.com/fjlic/CodesSystemVerilog.git,2022-06-22 20:37:30+00:00,Presilicon Verification with System Verilog,0,fjlic/CodesSystemVerilog,506398526,SystemVerilog,CodesSystemVerilog,792,1,2023-03-10 13:21:19+00:00,[],https://api.github.com/licenses/mit
9315,https://github.com/canbozaci/SystemVerilog.git,2022-08-18 16:54:12+00:00,Designs done in SystemVerilog/Verilog and their Verification (From SystemVerilog Course),0,canbozaci/SystemVerilog,526298611,SystemVerilog,SystemVerilog,9,1,2023-12-06 16:27:40+00:00,[],
9316,https://github.com/woodrowb96/RISCV-core-in-sytemverilog.git,2022-06-21 23:08:45+00:00,A riscv core implemented using systemverilog,0,woodrowb96/RISCV-core-in-sytemverilog,506030519,SystemVerilog,RISCV-core-in-sytemverilog,56,1,2022-09-29 19:46:19+00:00,[],
9317,https://github.com/remisiki/ECE4700J.git,2022-05-20 07:38:06+00:00,,0,remisiki/ECE4700J,494367710,SystemVerilog,ECE4700J,100745,1,2023-07-18 19:05:21+00:00,[],
9318,https://github.com/huabi-01/uvm_template.git,2022-07-19 13:24:57+00:00,The repository consists of uvm testbench template and auto-generate uvm tb script,0,huabi-01/uvm_template,515595477,SystemVerilog,uvm_template,16,1,2023-07-10 07:55:45+00:00,[],
9319,https://github.com/mitshine/OOPs-concept-in-SystemVerilog.git,2022-08-13 17:36:25+00:00,"OOPs concept in SystemVerilog with inheritance, encapsulation, polymorphism, and abstraction",0,mitshine/OOPs-concept-in-SystemVerilog,524466472,SystemVerilog,OOPs-concept-in-SystemVerilog,4,1,2023-09-18 12:32:30+00:00,[],
9320,https://github.com/tallurips91/Verif-CPD.git,2022-09-21 16:44:25+00:00,,0,tallurips91/Verif-CPD,539590076,SystemVerilog,Verif-CPD,15,1,2022-09-22 08:51:27+00:00,[],
9321,https://github.com/vlsi-udec/jacc-fpga.git,2022-08-19 17:07:44+00:00,,1,vlsi-udec/jacc-fpga,526689795,SystemVerilog,jacc-fpga,132,1,2023-12-19 00:47:00+00:00,[],
9322,https://github.com/litex-hub/pythondata-cpu-cva6.git,2022-05-25 18:50:54+00:00,Python module containing system_verilog files for cva6 cpu (for use with LiteX).,4,litex-hub/pythondata-cpu-cva6,496353135,SystemVerilog,pythondata-cpu-cva6,37942,1,2023-08-05 18:59:37+00:00,[],https://api.github.com/licenses/apache-2.0
9323,https://github.com/abrahamjdn/MIPS-Single-Cycle-Verification-using-SV..git,2022-06-29 07:27:52+00:00,Verification of the instructions implemented in the Mips Single cycle using the systemverilog model for verification.,0,abrahamjdn/MIPS-Single-Cycle-Verification-using-SV.,508590138,SystemVerilog,MIPS-Single-Cycle-Verification-using-SV.,18,1,2022-07-06 08:52:24+00:00,[],
9324,https://github.com/josephkb87/VerilogBasics.git,2022-06-04 17:57:45+00:00,Basics of Verilog implementation,0,josephkb87/VerilogBasics,499899801,SystemVerilog,VerilogBasics,20,1,2023-03-07 13:05:13+00:00,"['systemverilog', 'verilog', 'verilog-code', 'verilog-components', 'verilog-hdl']",
9325,https://github.com/alishairkhan7385/RISC-V-Single-Cycle-Datapath-in-System-verilog.git,2022-06-16 03:12:02+00:00,rv32i implementing all base instructions.,0,alishairkhan7385/RISC-V-Single-Cycle-Datapath-in-System-verilog,503995169,SystemVerilog,RISC-V-Single-Cycle-Datapath-in-System-verilog,504,1,2022-06-23 13:47:15+00:00,[],
9326,https://github.com/UandersonSilva/multiplicators.git,2022-08-23 13:01:35+00:00,Some hardware descriptions of multipliers and dividers.,0,UandersonSilva/multiplicators,527993207,SystemVerilog,multiplicators,853,1,2023-01-06 14:03:12+00:00,[],
9327,https://github.com/hamza-akhtar-dev/mips-micro-arcitechure.git,2022-07-10 15:17:34+00:00,Verilog Implementation of Single Cycle MIPS Processor.,0,hamza-akhtar-dev/mips-micro-arcitechure,512467763,SystemVerilog,mips-micro-arcitechure,140,1,2023-12-14 07:01:12+00:00,[],
9328,https://github.com/mingo99/uvm_test.git,2022-07-15 08:03:59+00:00,,0,mingo99/uvm_test,514186170,SystemVerilog,uvm_test,1197,1,2024-03-15 03:29:10+00:00,[],
9329,https://github.com/Hotwater17/VectorCore.git,2022-09-15 12:38:28+00:00,,0,Hotwater17/VectorCore,537020078,SystemVerilog,VectorCore,113,1,2023-01-01 18:01:52+00:00,[],
9330,https://github.com/benjamin-havens/AMT_SQUAD.git,2022-05-17 17:47:23+00:00,,2,benjamin-havens/AMT_SQUAD,493355974,SystemVerilog,AMT_SQUAD,435667,1,2022-08-31 23:06:54+00:00,[],
9331,https://github.com/GhulamMustafa9/2-Way_Associative_Cache_Controller-with-testbench.git,2022-05-23 20:25:02+00:00,2-Way Associative Cache Controller,0,GhulamMustafa9/2-Way_Associative_Cache_Controller-with-testbench,495562581,SystemVerilog,2-Way_Associative_Cache_Controller-with-testbench,1528,1,2022-05-26 11:29:12+00:00,[],
9332,https://github.com/saxbophone/factorio-train-balancer.git,2022-07-06 15:36:34+00:00,Using complicated Circuit network logic to use the railway as an anything-to-anything bus in Factorio,0,saxbophone/factorio-train-balancer,511195541,SystemVerilog,factorio-train-balancer,50,1,2023-03-05 03:16:54+00:00,"['circuit-design', 'factorio', 'factorio-blueprints', 'logic-gates']",https://api.github.com/licenses/unlicense
9333,https://github.com/nguyenvietthi/KTMT_20212.git,2022-07-05 03:19:17+00:00,,0,nguyenvietthi/KTMT_20212,510572491,SystemVerilog,KTMT_20212,9338,1,2022-08-23 15:07:24+00:00,[],
9334,https://github.com/IskXCr/CS211-Project-Flappy-Bird.git,2022-08-13 16:25:42+00:00,Project Flappy Bird. SUSTech CS207/CS211 Digital Logic Project.,0,IskXCr/CS211-Project-Flappy-Bird,524450387,SystemVerilog,CS211-Project-Flappy-Bird,880,1,2023-05-25 10:22:05+00:00,"['cs207', 'cs211', 'flappy-bird', 'sustech', 'vga-driver', 'digital-logic', 'ego1', 'fpga', 'systemverilog']",
9335,https://github.com/PhenomIIX6/BDcachecompression.git,2022-09-01 03:42:19+00:00,,0,PhenomIIX6/BDcachecompression,531352033,SystemVerilog,BDcachecompression,9,1,2022-09-06 16:53:00+00:00,[],
9336,https://github.com/hallerp/atmt_2022.git,2022-09-02 08:45:20+00:00,"Materials for the first assignment of ""Advanced Techniques of Machine Translation"" @UZH (Autumn 2022).",43,hallerp/atmt_2022,531848952,SystemVerilog,atmt_2022,30050,1,2022-10-04 22:27:05+00:00,[],https://api.github.com/licenses/mit
9337,https://github.com/timewh/ddr.git,2022-09-21 05:02:47+00:00,,0,timewh/ddr,539312968,SystemVerilog,ddr,30482,1,2023-09-21 07:31:45+00:00,[],
9338,https://github.com/SerLippo/sl_uart_vip.git,2022-06-06 15:16:55+00:00,"This is a simple uart vip, which supports baud_divisor and line control register.",0,SerLippo/sl_uart_vip,500484770,SystemVerilog,sl_uart_vip,12,1,2024-03-07 14:05:26+00:00,[],
9339,https://github.com/10x-Engineers/Ibex-Core-Verification-Environment.git,2022-05-30 14:14:53+00:00,,0,10x-Engineers/Ibex-Core-Verification-Environment,497972332,SystemVerilog,Ibex-Core-Verification-Environment,20018,1,2023-05-24 14:07:53+00:00,[],
9340,https://github.com/comsec-group/cellift-opentitan.git,2022-06-09 08:18:02+00:00,Opentitan version frozen for the CellIFT paper experiments on Ibex,1,comsec-group/cellift-opentitan,501564685,SystemVerilog,cellift-opentitan,39994,1,2022-06-25 03:46:26+00:00,[],https://api.github.com/licenses/apache-2.0
9341,https://github.com/ECE4278/lab1.git,2022-09-05 09:36:25+00:00,,0,ECE4278/lab1,532833568,SystemVerilog,lab1,3,1,2022-09-19 06:50:27+00:00,[],
9342,https://github.com/NishantSahay123/FIFO_VERFICATION_ENVIRONMENT.git,2022-08-01 14:48:34+00:00,,0,NishantSahay123/FIFO_VERFICATION_ENVIRONMENT,520150748,SystemVerilog,FIFO_VERFICATION_ENVIRONMENT,565,1,2023-11-25 07:53:30+00:00,[],
9343,https://github.com/knhitesh/APB_UVM.git,2022-07-27 10:48:16+00:00,,0,knhitesh/APB_UVM,518417861,SystemVerilog,APB_UVM,9,1,2022-08-10 15:46:32+00:00,[],
9344,https://github.com/rubensmz/uvm-cg-driven.git,2022-06-12 15:31:24+00:00,UVM testbench using covergroup to determine when test has to end,0,rubensmz/uvm-cg-driven,502654872,SystemVerilog,uvm-cg-driven,43,1,2022-07-13 08:57:28+00:00,[],https://api.github.com/licenses/apache-2.0
9345,https://github.com/ofernis/Multicycle-RISC-V-Extension-SV.git,2022-05-13 08:56:54+00:00,,0,ofernis/Multicycle-RISC-V-Extension-SV,491827317,SystemVerilog,Multicycle-RISC-V-Extension-SV,1243,1,2022-05-13 10:12:40+00:00,[],
9346,https://github.com/edft56/TPUv1_FPGA.git,2022-05-18 20:34:31+00:00,,1,edft56/TPUv1_FPGA,493817250,SystemVerilog,TPUv1_FPGA,1303,1,2022-12-02 22:55:04+00:00,[],
9347,https://github.com/Giovoig/Aggregation-engine.git,2022-06-08 14:52:30+00:00,,0,Giovoig/Aggregation-engine,501295570,SystemVerilog,Aggregation-engine,20,1,2022-07-31 09:02:09+00:00,[],
9348,https://github.com/Karthikeyan564/Idaten.git,2022-09-10 16:26:20+00:00,,0,Karthikeyan564/Idaten,535053791,SystemVerilog,Idaten,2566,1,2022-12-28 11:19:04+00:00,[],https://api.github.com/licenses/mit
9349,https://github.com/MFJI/NASBRESNET.git,2022-05-26 13:23:42+00:00,,0,MFJI/NASBRESNET,496629732,SystemVerilog,NASBRESNET,4249,1,2024-03-21 02:29:47+00:00,[],
9350,https://github.com/usman1515/100DaysOfRTL.git,2022-06-21 05:29:44+00:00,,0,usman1515/100DaysOfRTL,505702591,SystemVerilog,100DaysOfRTL,52,1,2023-04-17 06:26:42+00:00,[],
9351,https://github.com/nbdd0121/display_controller.git,2022-06-07 00:49:02+00:00,Open-source Display Controller,0,nbdd0121/display_controller,500639652,SystemVerilog,display_controller,100,1,2023-07-06 12:45:09+00:00,[],
9352,https://github.com/Spaced-Cowboy/gowin-ddr3-phy-seq-only.git,2022-09-14 03:11:49+00:00,,0,Spaced-Cowboy/gowin-ddr3-phy-seq-only,536394887,SystemVerilog,gowin-ddr3-phy-seq-only,141,1,2022-09-14 14:57:10+00:00,[],
9353,https://github.com/liu-hz18/Nontrivial-RISCV.git,2022-09-15 14:14:52+00:00,A light-weighted fully-pipelined RISC-V CPU with BPU and I-Cache.,0,liu-hz18/Nontrivial-RISCV,537058927,SystemVerilog,Nontrivial-RISCV,8992,1,2023-04-03 03:28:52+00:00,[],
9354,https://github.com/Bh0jani/4bit_UpCounter_SV_TestBench.git,2022-08-09 13:45:51+00:00,04 bit UpCounter Design Verification using System Verilog Testbench ,0,Bh0jani/4bit_UpCounter_SV_TestBench,522967876,SystemVerilog,4bit_UpCounter_SV_TestBench,7,1,2023-08-15 04:48:27+00:00,[],
9355,https://github.com/Hikari-HN/risc-v-five-stage-pipeline-cpu.git,2022-09-03 07:22:39+00:00,,0,Hikari-HN/risc-v-five-stage-pipeline-cpu,532187650,SystemVerilog,risc-v-five-stage-pipeline-cpu,4470,1,2022-09-03 07:27:37+00:00,[],
9356,https://github.com/jerry1249756/DCLab.git,2022-09-20 07:39:04+00:00,,0,jerry1249756/DCLab,538865642,SystemVerilog,DCLab,11825,1,2024-01-31 11:49:37+00:00,[],
9357,https://github.com/21st-centuryman/riscy_core.git,2022-07-01 17:56:23+00:00,"WIP: Very much a RISC-V core, written in SystemVerilog",0,21st-centuryman/riscy_core,509545398,SystemVerilog,riscy_core,1233,1,2024-02-11 04:22:06+00:00,"['risc-v', 'systemverilog', 'verilog']",
9358,https://github.com/zombie782/KNN_Hardware.git,2022-09-18 20:00:35+00:00,"SystemVerilog implementation of the KNN algorithm. Not too practical to implement on an FPGA due to memory constraints, but was still fun to research.",0,zombie782/KNN_Hardware,538226241,SystemVerilog,KNN_Hardware,3,1,2024-03-05 05:52:28+00:00,[],
9359,https://github.com/dherdus/PPCU_VLSI_projekt_DH.git,2022-05-24 13:15:43+00:00,,0,dherdus/PPCU_VLSI_projekt_DH,495830501,SystemVerilog,PPCU_VLSI_projekt_DH,2089,0,2022-05-24 13:28:38+00:00,[],
9360,https://github.com/ACoutaux/SE204.git,2022-05-26 10:42:07+00:00,,0,ACoutaux/SE204,496579918,SystemVerilog,SE204,5,0,2022-05-26 10:43:34+00:00,[],
9361,https://github.com/kenzhang82/mux.git,2022-05-29 10:19:22+00:00,,0,kenzhang82/mux,497555538,SystemVerilog,mux,0,0,2022-05-29 10:41:16+00:00,[],
9362,https://github.com/Abdo99-alt/4_5arraymult.git,2022-06-02 20:55:03+00:00,,0,Abdo99-alt/4_5arraymult,499287917,SystemVerilog,4_5arraymult,441,0,2022-06-03 18:01:43+00:00,[],https://api.github.com/licenses/mit
9363,https://github.com/wei1105/HW5.git,2022-05-19 11:08:54+00:00,,0,wei1105/HW5,494036623,SystemVerilog,HW5,1,0,2022-05-19 11:09:24+00:00,[],
9364,https://github.com/kelhuynh/MECHTRON-3TB4-Labs.git,2022-06-09 15:51:50+00:00,3TB4-Embedded Systems II,0,kelhuynh/MECHTRON-3TB4-Labs,501717519,SystemVerilog,MECHTRON-3TB4-Labs,94430,0,2022-06-09 16:44:25+00:00,"['fpga', 'fpga-soc', 'quartus', 'verilog']",
9365,https://github.com/Pocketkid2/Edalize-Examples.git,2022-05-13 18:58:38+00:00,,0,Pocketkid2/Edalize-Examples,492009901,SystemVerilog,Edalize-Examples,111,0,2022-05-13 19:02:18+00:00,[],https://api.github.com/licenses/mit
9366,https://github.com/KyleKaleClark/EEE333Verilog.git,2022-05-16 04:01:12+00:00,Verilog code for EEE 333 ,0,KyleKaleClark/EEE333Verilog,492677474,SystemVerilog,EEE333Verilog,6431,0,2022-06-07 18:45:03+00:00,[],
9367,https://github.com/miyagi7716/hakaton_2022.git,2022-05-16 12:48:16+00:00,,0,miyagi7716/hakaton_2022,492832474,SystemVerilog,hakaton_2022,287,0,2022-05-16 12:51:03+00:00,[],
9368,https://github.com/ishfaqahmed29/uvma_i2c.git,2022-08-03 03:52:57+00:00,I²C UVM Agent - Moore.io Serial IP,0,ishfaqahmed29/uvma_i2c,520730010,,uvma_i2c,68,0,2022-07-19 04:29:05+00:00,[],
9369,https://github.com/DarthHyperion/Adder_UVM.git,2022-08-07 06:14:06+00:00,First foray into verification,0,DarthHyperion/Adder_UVM,522131974,SystemVerilog,Adder_UVM,13,0,2022-08-07 07:03:17+00:00,[],https://api.github.com/licenses/apache-2.0
9370,https://github.com/leoschopick/pac-man.git,2022-08-07 18:15:26+00:00,Final Project for ECE 385,0,leoschopick/pac-man,522289982,SystemVerilog,pac-man,1310,0,2022-08-07 18:18:47+00:00,[],
9371,https://github.com/TheDK0309/Logic_Synthesis_Project.git,2022-08-05 10:48:44+00:00,Develop a synthesizer for audio codec with VHDL and implement on PYNQ Z1 board,0,TheDK0309/Logic_Synthesis_Project,521601659,SystemVerilog,Logic_Synthesis_Project,1895,0,2022-08-05 11:28:00+00:00,[],
9372,https://github.com/ArtemBReal/modified-ram-controller.git,2022-08-15 07:33:21+00:00,SystemVerilog RAM memory controller with some embedded functions,0,ArtemBReal/modified-ram-controller,524894844,SystemVerilog,modified-ram-controller,1193,0,2023-01-27 22:17:42+00:00,[],
9373,https://github.com/utkarshsarbahi1998/Intel_Quartus_Prime_SystemVerilog_Files.git,2022-08-14 18:34:45+00:00,Intel Quartus Prime SystemVerilog Files,0,utkarshsarbahi1998/Intel_Quartus_Prime_SystemVerilog_Files,524750677,SystemVerilog,Intel_Quartus_Prime_SystemVerilog_Files,12,0,2022-08-14 18:40:05+00:00,[],
9374,https://github.com/LoesterFranco/axi_cores.git,2022-08-15 16:51:56+00:00,,0,LoesterFranco/axi_cores,525066324,,axi_cores,41,0,2022-08-15 16:51:50+00:00,[],
9375,https://github.com/hp22-ela21/Mikrodator-SystemVerilog.git,2022-07-15 09:00:15+00:00,"Implementering av en 8-bitars mikrodator i SystemVerilog, som kan användas för referens vid CPU-konstruktion i VHDL i kursen Hårdvarunära programmering.",0,hp22-ela21/Mikrodator-SystemVerilog,514202687,SystemVerilog,Mikrodator-SystemVerilog,165,0,2023-05-18 12:55:16+00:00,[],
9376,https://github.com/ErikPihl/Microcontroller-SystemVerilog.git,2022-07-15 08:44:23+00:00,"8-bit microcontroller for FPGA, written in SystemVerilog.",0,ErikPihl/Microcontroller-SystemVerilog,514197941,SystemVerilog,Microcontroller-SystemVerilog,164,0,2022-07-15 08:58:42+00:00,[],
9377,https://github.com/mitshine/top-modules.git,2022-07-25 09:33:52+00:00,,0,mitshine/top-modules,517601692,SystemVerilog,top-modules,2,0,2022-07-25 09:34:15+00:00,[],
9378,https://github.com/UncleZhang13/UVM_NEW_FILE.git,2022-08-13 12:57:03+00:00,UVM_NEW_FILE,0,UncleZhang13/UVM_NEW_FILE,524399784,SystemVerilog,UVM_NEW_FILE,54204,0,2022-08-13 12:58:08+00:00,[],
9379,https://github.com/Wishah-Naseer/SweRV_F.git,2022-08-11 10:08:21+00:00,,0,Wishah-Naseer/SweRV_F,523674055,SystemVerilog,SweRV_F,16306,0,2022-08-11 10:13:13+00:00,[],
9380,https://github.com/pavan-raj-verification/100DaysofRTL_VLSI.git,2022-08-11 15:07:12+00:00,Recreating Rahul Behl Codes from Linkedin,0,pavan-raj-verification/100DaysofRTL_VLSI,523767804,SystemVerilog,100DaysofRTL_VLSI,2,0,2022-08-11 15:45:17+00:00,[],
9381,https://github.com/Dashtocalmdown/uvm_code.git,2022-08-05 07:53:03+00:00,Code of a uvm tutorial.,0,Dashtocalmdown/uvm_code,521551943,SystemVerilog,uvm_code,162,0,2022-08-05 08:13:55+00:00,[],
9382,https://github.com/tjt7a/ultrascan-hls.git,2022-06-16 14:51:35+00:00,HLS + RTL implementation of Ultrascan,0,tjt7a/ultrascan-hls,504195883,SystemVerilog,ultrascan-hls,6754,0,2022-06-24 14:11:10+00:00,[],
9383,https://github.com/pcornier/BasicMasterJr_MiSTer.git,2022-06-17 16:15:18+00:00,Hitachi MB-6885,0,pcornier/BasicMasterJr_MiSTer,504599147,SystemVerilog,BasicMasterJr_MiSTer,359,0,2022-06-17 16:16:24+00:00,[],https://api.github.com/licenses/gpl-2.0
9384,https://github.com/Askartos/openPwm.git,2022-07-08 01:36:20+00:00,pwm implementations in systemverilog,0,Askartos/openPwm,511725703,SystemVerilog,openPwm,2,0,2022-07-08 01:39:42+00:00,[],https://api.github.com/licenses/mit
9385,https://github.com/YaMsoulm/pratice.git,2022-07-09 07:48:24+00:00,,1,YaMsoulm/pratice,512126317,SystemVerilog,pratice,1,0,2022-07-14 12:31:27+00:00,[],
9386,https://github.com/Faisalawan11/Lab-18-Assertions.git,2022-07-18 17:54:12+00:00,,0,Faisalawan11/Lab-18-Assertions,515287433,SystemVerilog,Lab-18-Assertions,2,0,2022-07-18 17:55:12+00:00,[],
9387,https://github.com/amiteshkr63/SPI_Master_Design_System_Verilog.git,2022-07-18 08:30:07+00:00,,0,amiteshkr63/SPI_Master_Design_System_Verilog,515097673,SystemVerilog,SPI_Master_Design_System_Verilog,51,0,2023-08-29 05:30:13+00:00,[],
9388,https://github.com/jigishaa2/RTL-File-generation.git,2022-07-11 03:06:42+00:00,,0,jigishaa2/RTL-File-generation,512599264,SystemVerilog,RTL-File-generation,66,0,2022-07-11 03:08:39+00:00,[],
9389,https://github.com/JoaoJoaoVF/TP-ISL.git,2022-07-20 16:47:52+00:00,Trabalho Pratico da Disciplina de Introdução aos Sistemas Logicos 2022/1,0,JoaoJoaoVF/TP-ISL,516062393,SystemVerilog,TP-ISL,2,0,2022-09-30 20:37:29+00:00,[],
9390,https://github.com/bismark09/repo_for_trial.git,2022-08-16 20:41:51+00:00,repository for syntacore team,0,bismark09/repo_for_trial,525536444,SystemVerilog,repo_for_trial,70,0,2022-08-17 12:38:57+00:00,[],
9391,https://github.com/MSaqi/ALU.git,2022-06-28 04:55:00+00:00,ALU_system_verilog,0,MSaqi/ALU,508159167,SystemVerilog,ALU,3,0,2022-06-28 05:00:54+00:00,[],
9392,https://github.com/RRemixx/optimization.git,2022-06-27 01:35:02+00:00,470 lab 4 opt code,0,RRemixx/optimization,507727212,SystemVerilog,optimization,376,0,2022-06-27 02:00:11+00:00,[],
9393,https://github.com/pramath-haritz/simple-verilog-applications.git,2022-09-19 16:10:28+00:00,Circuit Implementations with System Verilog,0,pramath-haritz/simple-verilog-applications,538587000,SystemVerilog,simple-verilog-applications,15,0,2023-01-27 18:25:28+00:00,[],
9394,https://github.com/CynthiaLi1018/EE-469.git,2022-08-23 20:08:31+00:00,Computer Architecture I by Professor Scott Hauck,0,CynthiaLi1018/EE-469,528146607,SystemVerilog,EE-469,1512,0,2022-08-23 20:27:31+00:00,[],
9395,https://github.com/dirkarnez/verilog-playground.git,2022-08-18 14:17:59+00:00,,0,dirkarnez/verilog-playground,526241657,SystemVerilog,verilog-playground,6,0,2022-08-18 14:20:54+00:00,[],
9396,https://github.com/dannydang-cp/CPE233-Computer-Design.git,2022-08-18 18:56:15+00:00,,0,dannydang-cp/CPE233-Computer-Design,526338005,SystemVerilog,CPE233-Computer-Design,2307,0,2022-08-18 18:57:18+00:00,[],
9397,https://github.com/asahsieh/ic-design-verification.git,2022-08-26 02:58:11+00:00,Collection of my code for DV,0,asahsieh/ic-design-verification,529093995,SystemVerilog,ic-design-verification,4,0,2022-08-26 03:04:54+00:00,[],https://api.github.com/licenses/mit
9398,https://github.com/NayaKim/naya_hpc.git,2022-08-31 09:32:52+00:00,,0,NayaKim/naya_hpc,531017456,SystemVerilog,naya_hpc,48,0,2022-09-01 07:56:22+00:00,[],
9399,https://github.com/shaarawy29/ALU_tb_UVM.git,2022-08-28 09:15:39+00:00,,0,shaarawy29/ALU_tb_UVM,529814026,SystemVerilog,ALU_tb_UVM,22,0,2022-09-04 11:59:41+00:00,[],
9400,https://github.com/Nitish1371/oops.git,2022-08-30 12:11:01+00:00,,0,Nitish1371/oops,530640743,SystemVerilog,oops,280,0,2022-09-05 10:45:28+00:00,[],
9401,https://github.com/FluffyAlligator/ece554_miniproject.git,2022-09-08 21:46:47+00:00,,0,FluffyAlligator/ece554_miniproject,534404022,SystemVerilog,ece554_miniproject,504,0,2022-09-08 22:46:15+00:00,[],
9402,https://github.com/carsonmiiller/ece352.git,2022-09-20 01:06:23+00:00,,0,carsonmiiller/ece352,538756282,SystemVerilog,ece352,11685,0,2022-09-20 01:07:58+00:00,[],
9403,https://github.com/harithaa12/Verilog-HDL.git,2022-09-20 14:20:17+00:00,,0,harithaa12/Verilog-HDL,539028040,SystemVerilog,Verilog-HDL,16,0,2022-09-22 20:08:18+00:00,[],
9404,https://github.com/Danil1997Dev/RSA_Xilinx.git,2022-09-24 17:02:00+00:00,,0,Danil1997Dev/RSA_Xilinx,540903502,SystemVerilog,RSA_Xilinx,2893,0,2022-09-24 17:06:20+00:00,[],
9405,https://github.com/allisonseigler/ece554_miniproject3.git,2022-09-20 20:50:07+00:00,,0,allisonseigler/ece554_miniproject3,539187027,SystemVerilog,ece554_miniproject3,8,0,2022-09-20 20:52:38+00:00,[],
9406,https://github.com/PathakamuriNaresh/AXI_FIFO_BFM.git,2022-09-22 10:32:03+00:00,,0,PathakamuriNaresh/AXI_FIFO_BFM,539925646,SystemVerilog,AXI_FIFO_BFM,9857,0,2022-09-22 10:32:29+00:00,[],
9407,https://github.com/andersontruong/Single-Cycle-ARMv7.git,2022-09-14 00:36:46+00:00,,0,andersontruong/Single-Cycle-ARMv7,536357148,SystemVerilog,Single-Cycle-ARMv7,7,0,2023-09-28 21:50:30+00:00,[],
9408,https://github.com/ic2Atao/Switch.git,2022-08-28 14:12:04+00:00,"This is a simple switch, which can drive the incoming packet to destination ports based on the address constrained in the packet",0,ic2Atao/Switch,529881892,SystemVerilog,Switch,2023,0,2023-03-02 19:11:40+00:00,[],
9409,https://github.com/prajwal0718/Layerd-TestBench-Full-Adder.git,2022-09-06 15:41:21+00:00,,0,prajwal0718/Layerd-TestBench-Full-Adder,533392476,SystemVerilog,Layerd-TestBench-Full-Adder,12,0,2022-09-06 17:02:28+00:00,[],https://api.github.com/licenses/mit
9410,https://github.com/ratnabai/01fe21mve009.git,2022-09-06 15:42:19+00:00,ADLV,0,ratnabai/01fe21mve009,533392856,SystemVerilog,01fe21mve009,55,0,2022-09-13 08:08:05+00:00,[],
9411,https://github.com/RehanEjaz/practice.git,2022-09-06 16:08:19+00:00,Repo for Git practice,1,RehanEjaz/practice,533402521,SystemVerilog,practice,2,0,2022-09-06 17:30:39+00:00,[],
9412,https://github.com/chaitraalur/01FE21MVE006.git,2022-09-08 05:46:08+00:00,ADLV,0,chaitraalur/01FE21MVE006,534067825,SystemVerilog,01FE21MVE006,65,0,2022-09-13 06:16:08+00:00,[],
9413,https://github.com/Caoyuanzhi/ZAP_.git,2022-09-17 02:28:31+00:00,,0,Caoyuanzhi/ZAP_,537676735,SystemVerilog,ZAP_,6867,0,2022-09-17 02:31:59+00:00,[],
9414,https://github.com/ECE4278/lab2.git,2022-09-13 07:26:46+00:00,,0,ECE4278/lab2,536008188,SystemVerilog,lab2,6,0,2022-09-13 10:10:59+00:00,[],
9415,https://github.com/mo-hosni/Extended-ARM.git,2022-09-06 10:14:59+00:00,Added a global predictor with index sharing to the ARM pipelined processor rtl from Harris & Harris textbook.,0,mo-hosni/Extended-ARM,533268840,SystemVerilog,Extended-ARM,23,0,2022-09-06 18:22:55+00:00,[],
9416,https://github.com/mo-hosni/uvm_enviroment.git,2022-09-06 10:06:52+00:00,UVM environment for Scrambler module verification ,0,mo-hosni/uvm_enviroment,533266009,SystemVerilog,uvm_enviroment,42,0,2022-09-06 10:09:35+00:00,[],
9417,https://github.com/Raghavi9860/Design_and_Verification_of_ALU_using_System_Verilog.git,2022-08-01 15:33:19+00:00,Verification of ALU is done by systemverilog using Questa sim tool.,0,Raghavi9860/Design_and_Verification_of_ALU_using_System_Verilog,520166518,SystemVerilog,Design_and_Verification_of_ALU_using_System_Verilog,9,0,2023-12-04 10:19:43+00:00,[],
9418,https://github.com/NRJaggers/Computer-Design-and-Assembly-Language-Programming.git,2022-07-24 23:46:23+00:00,CPE-233 - Computer Design & Assembly Language - California Polytechnic State University SLO,0,NRJaggers/Computer-Design-and-Assembly-Language-Programming,517462590,SystemVerilog,Computer-Design-and-Assembly-Language-Programming,106,0,2023-12-20 00:02:23+00:00,[],
9419,https://github.com/NabihaTariq/Verilog_Coding.git,2022-05-22 06:34:03+00:00,,0,NabihaTariq/Verilog_Coding,494979189,SystemVerilog,Verilog_Coding,373,0,2022-05-22 08:48:48+00:00,[],
9420,https://github.com/shakirsultan/UART_Project_private.git,2022-05-24 10:18:29+00:00,Private Repo for UART Project,0,shakirsultan/UART_Project_private,495771420,SystemVerilog,UART_Project_private,3367,0,2022-06-16 12:33:06+00:00,[],
9421,https://github.com/comsec-group/cellift-pulpissimo-hdac-2018.git,2022-06-09 08:56:21+00:00,"The PULPissimo design used in Hack@DAC2018, frozen and instrumented for the CellIFT paper experiments ",0,comsec-group/cellift-pulpissimo-hdac-2018,501577280,SystemVerilog,cellift-pulpissimo-hdac-2018,18043,0,2022-06-09 10:52:35+00:00,[],
9422,https://github.com/sharan1421/ALU_UVM.git,2022-06-09 12:13:41+00:00,Basic ALU has been verified with the UVM environment.,0,sharan1421/ALU_UVM,501638750,SystemVerilog,ALU_UVM,76,0,2022-06-09 12:21:04+00:00,[],https://api.github.com/licenses/apache-2.0
9423,https://github.com/TatshSiow/HW3.git,2022-06-11 04:36:25+00:00,四人投票機設計(if語法轉換成case語法),0,TatshSiow/HW3,502250370,SystemVerilog,HW3,1,0,2022-06-11 04:38:10+00:00,[],
9424,https://github.com/LyashenkoValeria/SP_MSP430.git,2022-05-20 07:28:26+00:00,,0,LyashenkoValeria/SP_MSP430,494364773,SystemVerilog,SP_MSP430,21,0,2022-05-20 07:37:54+00:00,[],
9425,https://github.com/skudlur/intel-fpga.git,2022-07-17 08:38:18+00:00,This repo contains SV and Sycl code for the FPGA Academy using Intel FPGAs on the oneAPI platform.,0,skudlur/intel-fpga,514789757,SystemVerilog,intel-fpga,9,0,2022-07-17 08:42:01+00:00,[],
9426,https://github.com/Omar-Hisham/Pipelined-ARM-Processor.git,2022-07-22 16:26:55+00:00,Implementation of pipelined ARM processor using system Verilog and ARM assembly.,1,Omar-Hisham/Pipelined-ARM-Processor,516817397,SystemVerilog,Pipelined-ARM-Processor,12,0,2022-07-23 18:22:05+00:00,[],
9427,https://github.com/johnhof3/SHA-256-Hashing-Accelerator.git,2022-07-29 04:06:02+00:00,"This is a simple SHA-256 hashing accelerator ran on a MAX 10 FPGA, written in System Verilog",0,johnhof3/SHA-256-Hashing-Accelerator,519074743,SystemVerilog,SHA-256-Hashing-Accelerator,13,0,2022-07-29 05:06:49+00:00,[],
9428,https://github.com/ademcolak/RISC-V_PROJESI_-_BLM202.git,2022-05-16 17:35:25+00:00,,0,ademcolak/RISC-V_PROJESI_-_BLM202,492937218,SystemVerilog,RISC-V_PROJESI_-_BLM202,8080,0,2022-05-16 17:48:41+00:00,[],
9429,https://github.com/ppurwat/Pre-Si-JTAG-Verification-Project.git,2022-06-25 20:53:48+00:00,,0,ppurwat/Pre-Si-JTAG-Verification-Project,507414983,SystemVerilog,Pre-Si-JTAG-Verification-Project,2309,0,2022-06-25 23:52:19+00:00,[],
9430,https://github.com/a29712049/Pseudo-Random-Pattern-Generator.git,2022-06-27 02:47:11+00:00,,0,a29712049/Pseudo-Random-Pattern-Generator,507741729,SystemVerilog,Pseudo-Random-Pattern-Generator,39,0,2022-06-27 02:47:36+00:00,[],
9431,https://github.com/chen-ian-rong/HW-1.git,2022-06-26 18:47:43+00:00,,0,chen-ian-rong/HW-1,507657705,SystemVerilog,HW-1,6,0,2022-06-26 19:00:05+00:00,[],
9432,https://github.com/RevanthNandamuri1341b0/UART-Verification-Environment.git,2022-06-28 16:54:33+00:00,,0,RevanthNandamuri1341b0/UART-Verification-Environment,508383793,SystemVerilog,UART-Verification-Environment,823,0,2022-06-28 16:56:34+00:00,[],
9433,https://github.com/fpgauniversity/intel_academic_day_2022.git,2022-07-15 16:39:40+00:00,This is a repository containing the public files required for the Hands-on FPGA experience during the 2022 Intel Academic Day.,0,fpgauniversity/intel_academic_day_2022,514338241,SystemVerilog,intel_academic_day_2022,883,0,2022-07-15 16:50:52+00:00,[],
9434,https://github.com/LoesterFranco/common_cores.git,2022-08-15 16:52:13+00:00,,0,LoesterFranco/common_cores,525066392,,common_cores,43,0,2022-08-15 16:52:08+00:00,[],
9435,https://github.com/alvent98/Arduino-Verilog-Alarm-System.git,2022-06-03 17:17:05+00:00,"Basic alarm system (Arduino & Verilog versions) for postgraduate Edge Computing Course, Spring Semester 2022",0,alvent98/Arduino-Verilog-Alarm-System,499592601,SystemVerilog,Arduino-Verilog-Alarm-System,383,0,2023-08-23 21:09:37+00:00,[],
9436,https://github.com/luke-avionics/wide_alu.git,2022-06-01 17:54:06+00:00,,0,luke-avionics/wide_alu,498842479,SystemVerilog,wide_alu,19,0,2022-06-01 20:19:08+00:00,[],
9437,https://github.com/dnoonan08/AIinPixel_TestBenches.git,2022-06-24 00:27:26+00:00,,0,dnoonan08/AIinPixel_TestBenches,506829637,SystemVerilog,AIinPixel_TestBenches,9725,0,2022-06-24 00:31:48+00:00,[],
9438,https://github.com/SinceNight/ICey.git,2022-06-16 06:41:31+00:00,,0,SinceNight/ICey,504041720,SystemVerilog,ICey,46,0,2022-06-16 06:46:42+00:00,[],
9439,https://github.com/retar-kamuy/uvm_verification_example.git,2022-07-03 07:45:13+00:00,,0,retar-kamuy/uvm_verification_example,509956338,SystemVerilog,uvm_verification_example,51,0,2022-07-03 08:46:06+00:00,[],
9440,https://github.com/ytken/Syntacore_RISCV_SCR1.git,2022-07-13 07:43:16+00:00,,0,ytken/Syntacore_RISCV_SCR1,513426924,SystemVerilog,Syntacore_RISCV_SCR1,12727,0,2022-07-13 08:06:37+00:00,[],
9441,https://github.com/aastha0603/Traffic-Light-Controller.git,2022-07-12 14:56:43+00:00,,0,aastha0603/Traffic-Light-Controller,513185035,SystemVerilog,Traffic-Light-Controller,1,0,2022-07-12 14:58:52+00:00,[],
9442,https://github.com/hmarjal/dt2_2022.git,2022-08-21 10:43:20+00:00,,0,hmarjal/dt2_2022,527176339,SystemVerilog,dt2_2022,142,0,2022-11-09 13:05:37+00:00,[],
9443,https://github.com/Antonios-C/Virtual-Lock-Box.git,2022-08-14 23:45:30+00:00,,0,Antonios-C/Virtual-Lock-Box,524804842,SystemVerilog,Virtual-Lock-Box,7,0,2022-08-14 23:48:57+00:00,[],
9444,https://github.com/My-Lock/Test_ssh.git,2022-09-21 13:18:20+00:00,my,0,My-Lock/Test_ssh,539498144,,Test_ssh,2,0,2022-10-06 16:35:41+00:00,[],
9445,https://github.com/kanuar/systemverilog_mux4-1.git,2022-09-18 13:42:01+00:00,,0,kanuar/systemverilog_mux4-1,538121829,SystemVerilog,systemverilog_mux4-1,3,0,2022-09-18 13:47:08+00:00,[],
9446,https://github.com/DilipKrishnappa/Data_lytes.git,2022-08-22 11:55:27+00:00,System verilog data_types,0,DilipKrishnappa/Data_lytes,527543303,SystemVerilog,Data_lytes,7,0,2022-08-27 17:59:53+00:00,[],
9447,https://github.com/golanger1/Billiard_FPGA.git,2022-08-21 20:21:41+00:00,"Lab 1a project. Creating a billiard game running on FPGA with a white ball, multiple hit balls, and circular motion.",0,golanger1/Billiard_FPGA,527317964,SystemVerilog,Billiard_FPGA,109830,0,2023-01-24 14:21:48+00:00,[],
9448,https://github.com/jkennerly/simple-processor-systemverilog.git,2022-08-23 03:39:25+00:00,,0,jkennerly/simple-processor-systemverilog,527821276,SystemVerilog,simple-processor-systemverilog,181,0,2022-08-23 03:59:05+00:00,[],
9449,https://github.com/AlexanderPasso/Digitales-2.git,2022-09-02 00:56:16+00:00,,0,AlexanderPasso/Digitales-2,531734111,SystemVerilog,Digitales-2,4747,0,2022-09-02 01:10:53+00:00,[],
9450,https://github.com/IvanRenison/Practico2_arquitectura_de_computadoras__processor_arm.git,2022-09-04 13:22:59+00:00,,1,IvanRenison/Practico2_arquitectura_de_computadoras__processor_arm,532547346,SystemVerilog,Practico2_arquitectura_de_computadoras__processor_arm,63,0,2022-11-23 13:10:28+00:00,[],
9451,https://github.com/s-hfarooq/ece498hk-RISCV-V-Extension.git,2022-09-23 21:52:15+00:00,UIUC ECE 498HK Fall 2022 ,0,s-hfarooq/ece498hk-RISCV-V-Extension,540628312,SystemVerilog,ece498hk-RISCV-V-Extension,646316,0,2023-01-31 20:27:42+00:00,[],
9452,https://github.com/subhamprasaddash/parking_lot_occupancy_counter.git,2022-08-30 06:49:19+00:00,A Parking Lot Simulator using System Verilog on FPGA DE1_SoC,0,subhamprasaddash/parking_lot_occupancy_counter,530532833,,parking_lot_occupancy_counter,1069,0,2021-02-21 03:56:48+00:00,[],
9453,https://github.com/mm-mehran79/fixed-point-IIR-filter-design-on-FPGA.git,2022-08-30 13:47:09+00:00,-parameterized verilog code to implement FIR filter on FPGA & design the filter using Matlab,0,mm-mehran79/fixed-point-IIR-filter-design-on-FPGA,530677149,SystemVerilog,fixed-point-IIR-filter-design-on-FPGA,39,0,2023-09-02 04:16:22+00:00,[],
9454,https://github.com/allisonseigler/ece554_miniproject.git,2022-09-08 21:46:31+00:00,,0,allisonseigler/ece554_miniproject,534403948,SystemVerilog,ece554_miniproject,672,0,2022-09-08 23:46:22+00:00,[],
9455,https://github.com/Kholoud-Ebrahim/System-Verilog-Tasks.git,2022-09-22 15:16:41+00:00,The third phase tasks in Chipions Program Training.,1,Kholoud-Ebrahim/System-Verilog-Tasks,540042896,SystemVerilog,System-Verilog-Tasks,170,0,2023-08-26 19:22:47+00:00,[],
9456,https://github.com/leogarcia1/minilab4.git,2022-09-22 21:32:48+00:00,,0,leogarcia1/minilab4,540177268,SystemVerilog,minilab4,590,0,2022-09-22 21:33:52+00:00,[],
9457,https://github.com/diegogimenez04/AdC_FAMAF_Practico1.git,2022-09-03 15:01:35+00:00,,0,diegogimenez04/AdC_FAMAF_Practico1,532292210,SystemVerilog,AdC_FAMAF_Practico1,2645,0,2022-09-03 15:04:08+00:00,[],
9458,https://github.com/ArnyminerZ/UPV-ISDIGI-FIFO.git,2022-09-14 16:40:43+00:00,La primera actividad de laboratorio para la asignatura ISDIGI de tercero de Teleco de la UPV.,0,ArnyminerZ/UPV-ISDIGI-FIFO,536672211,SystemVerilog,UPV-ISDIGI-FIFO,190,0,2022-10-05 07:23:29+00:00,[],
9459,https://github.com/karenxli/eece2323.git,2022-09-13 19:26:15+00:00,,0,karenxli/eece2323,536278743,SystemVerilog,eece2323,81542,0,2022-10-10 04:34:30+00:00,[],
9460,https://github.com/allisonseigler/ece554_miniproject2.git,2022-09-15 18:36:12+00:00,,0,allisonseigler/ece554_miniproject2,537160527,SystemVerilog,ece554_miniproject2,5,0,2022-09-15 18:42:13+00:00,[],
9461,https://github.com/mrutunjaynalwad/linux_codes.git,2022-09-15 05:32:28+00:00,coding,0,mrutunjaynalwad/linux_codes,536878131,SystemVerilog,linux_codes,1,0,2022-09-15 05:53:25+00:00,[],
9462,https://github.com/nduCode/ECE554_Minilab2.git,2022-09-15 20:56:42+00:00,Minilab 2 for ECE 554,0,nduCode/ECE554_Minilab2,537203970,SystemVerilog,ECE554_Minilab2,676,0,2022-09-15 21:28:06+00:00,[],
9463,https://github.com/AlbertAgui/sv_projects.git,2022-08-07 12:34:06+00:00,,0,AlbertAgui/sv_projects,522207941,SystemVerilog,sv_projects,363,0,2022-08-07 12:46:39+00:00,[],
9464,https://github.com/anmehta4/ece554_minilab2.git,2022-09-15 19:24:42+00:00,,1,anmehta4/ece554_minilab2,537176493,SystemVerilog,ece554_minilab2,3,0,2022-09-15 19:33:21+00:00,[],
9465,https://github.com/Narinder788/Task4.1.git,2022-09-16 23:43:09+00:00,,0,Narinder788/Task4.1,537649871,SystemVerilog,Task4.1,4,0,2022-09-16 23:47:45+00:00,[],
9466,https://github.com/djoffe/UVM-Framework.git,2022-09-21 22:49:12+00:00,A local copy of [UVM Framework](https://verificationacademy.com/topics/verification-methodology/uvm-framework),1,djoffe/UVM-Framework,539712106,SystemVerilog,UVM-Framework,46554,0,2022-09-21 23:02:32+00:00,[],https://api.github.com/licenses/apache-2.0
9467,https://github.com/keenstoat/jimmy-enhanced.git,2022-08-27 21:21:17+00:00,,0,keenstoat/jimmy-enhanced,529699477,SystemVerilog,jimmy-enhanced,367,0,2022-08-27 21:22:09+00:00,[],
9468,https://github.com/minecraftdixit/fifo-.git,2022-08-28 20:30:16+00:00,synchronous  fifo  verification using system verilog ,0,minecraftdixit/fifo-,529972532,SystemVerilog,fifo-,12,0,2022-08-28 20:31:21+00:00,[],
9469,https://github.com/vsheung/ARC4-Cracking-Circuit.git,2022-08-28 16:26:33+00:00,Developed a Verilog-based ARC4 decryption circuit using an encryption key to generate a pseudo-random byte stream.,0,vsheung/ARC4-Cracking-Circuit,529916455,SystemVerilog,ARC4-Cracking-Circuit,100,0,2022-08-28 16:49:56+00:00,[],
9470,https://github.com/MadejSzymon/de0nano_led_uart_rx.git,2022-09-01 08:59:56+00:00,LED control using UART and MATLAB script.,0,MadejSzymon/de0nano_led_uart_rx,531440106,SystemVerilog,de0nano_led_uart_rx,149,0,2022-09-01 09:06:02+00:00,[],
9471,https://github.com/TejaUpanishad/ADLV.git,2022-09-01 07:45:14+00:00,,0,TejaUpanishad/ADLV,531415840,SystemVerilog,ADLV,50,0,2022-09-01 07:46:51+00:00,[],
9472,https://github.com/mackenzieg/risky.git,2022-09-02 01:55:56+00:00,,0,mackenzieg/risky,531747185,SystemVerilog,risky,18,0,2022-09-02 04:08:27+00:00,[],https://api.github.com/licenses/apache-2.0
9473,https://github.com/skudlur/verif-lab.git,2022-09-04 06:20:50+00:00,"This repo contains SV, testbench and tcl files for the Verification of Digital Systems elective course.",0,skudlur/verif-lab,532456112,SystemVerilog,verif-lab,2,0,2022-09-04 06:21:18+00:00,[],
9474,https://github.com/wbv/dyse-framework.git,2022-09-12 17:24:36+00:00,Fork of bitbucket.org/biodesignlab/dyse-framework,0,wbv/dyse-framework,535776257,SystemVerilog,dyse-framework,5853,0,2022-11-22 01:18:57+00:00,[],
9475,https://github.com/yuyunchia/DCLAB.git,2022-09-13 07:13:21+00:00,,0,yuyunchia/DCLAB,536003405,SystemVerilog,DCLAB,3290,0,2022-09-13 07:17:10+00:00,[],
9476,https://github.com/bguan2022/HFT.git,2022-08-14 03:54:52+00:00,,1,bguan2022/HFT,524567463,SystemVerilog,HFT,1973,0,2022-08-31 21:10:44+00:00,[],
9477,https://github.com/Mansiss/UVM_TB_FOR_FIFO.git,2022-08-17 18:18:34+00:00,,0,Mansiss/UVM_TB_FOR_FIFO,525907518,SystemVerilog,UVM_TB_FOR_FIFO,6,0,2022-08-17 18:21:52+00:00,[],
9478,https://github.com/KennethWilke/wiz-examples.git,2022-08-23 16:15:56+00:00,,0,KennethWilke/wiz-examples,528070081,SystemVerilog,wiz-examples,1,0,2022-08-23 16:16:12+00:00,[],
9479,https://github.com/ikar298/Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier-using-Verilog-HDL-on-FPG.git,2022-08-25 17:16:13+00:00,,0,ikar298/Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier-using-Verilog-HDL-on-FPG,528948126,SystemVerilog,Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier-using-Verilog-HDL-on-FPG,36,0,2022-08-25 17:56:15+00:00,[],
9480,https://github.com/Jellyyz/ADV-VLSI-Design-.git,2022-08-25 21:56:39+00:00,Ibex RISC Core Tapeout,0,Jellyyz/ADV-VLSI-Design-,529030025,SystemVerilog,ADV-VLSI-Design-,40288,0,2023-01-01 05:00:17+00:00,[],
9481,https://github.com/Musa-Azeem/CSCE611.git,2022-08-30 03:26:37+00:00,,0,Musa-Azeem/CSCE611,530482102,SystemVerilog,CSCE611,38584,0,2023-01-24 20:19:08+00:00,[],
9482,https://github.com/kanuar/systemverilog_mux8-1.git,2022-09-19 04:30:50+00:00,,0,kanuar/systemverilog_mux8-1,538333653,SystemVerilog,systemverilog_mux8-1,3,0,2022-09-20 10:39:29+00:00,[],
9483,https://github.com/jayeshsuyal/Verification-of-I2C-.git,2022-09-09 05:08:26+00:00,,0,jayeshsuyal/Verification-of-I2C-,534505916,SystemVerilog,Verification-of-I2C-,2,0,2022-09-09 05:12:59+00:00,[],
9484,https://github.com/vomar18/LAB_verificaton.git,2022-05-17 15:40:58+00:00,This repo store all the verification lab assignment,0,vomar18/LAB_verificaton,493314372,SystemVerilog,LAB_verificaton,151,0,2022-05-24 10:37:53+00:00,[],
9485,https://github.com/mehhdiii/RISC-V-Single-cycle.git,2022-05-17 15:28:40+00:00,Single cycle implementation of RISC-V processor,0,mehhdiii/RISC-V-Single-cycle,493309812,SystemVerilog,RISC-V-Single-cycle,5,0,2022-05-17 23:39:32+00:00,[],https://api.github.com/licenses/mit
9486,https://github.com/MathieuSnd/DLX-processor.git,2022-05-18 14:12:20+00:00,A 2 week pipelined microprocessor core project,0,MathieuSnd/DLX-processor,493692067,SystemVerilog,DLX-processor,1222,0,2022-11-08 11:11:58+00:00,[],
9487,https://github.com/Moebius-Klaus/YODA-2022-Group13.git,2022-05-22 18:06:01+00:00,,0,Moebius-Klaus/YODA-2022-Group13,495138422,SystemVerilog,YODA-2022-Group13,205,0,2022-05-23 21:58:06+00:00,[],
9488,https://github.com/Shwetapatil05/router.git,2022-05-23 07:50:59+00:00,,0,Shwetapatil05/router,495309563,SystemVerilog,router,16,0,2022-05-23 07:56:56+00:00,[],
9489,https://github.com/e10-nguyen/FordTailLight-FPGA.git,2022-06-03 03:41:46+00:00,"Using Verilog and FPGA, made a working tailight",0,e10-nguyen/FordTailLight-FPGA,499369680,SystemVerilog,FordTailLight-FPGA,1657,0,2022-06-03 03:44:41+00:00,[],
9490,https://github.com/shxvxnng/morris_mano_soln_verilog.git,2022-06-02 21:06:05+00:00,,0,shxvxnng/morris_mano_soln_verilog,499290817,SystemVerilog,morris_mano_soln_verilog,4,0,2022-06-02 21:17:05+00:00,[],
9491,https://github.com/gaozheng2001/load_counter.git,2022-06-01 13:21:34+00:00,,0,gaozheng2001/load_counter,498745287,SystemVerilog,load_counter,705,0,2022-06-01 13:33:33+00:00,[],
9492,https://github.com/SokAnn/project-1.git,2022-06-01 15:44:19+00:00,,0,SokAnn/project-1,498798478,SystemVerilog,project-1,55,0,2022-06-07 17:00:25+00:00,[],
9493,https://github.com/Ramdoo/mySCR1.git,2022-05-24 09:58:50+00:00,,0,Ramdoo/mySCR1,495765256,SystemVerilog,mySCR1,6059,0,2022-05-24 09:59:47+00:00,[],
9494,https://github.com/rangicut/fpga_jtag.git,2022-05-12 07:28:18+00:00,FPGA based jtag controller,0,rangicut/fpga_jtag,491408512,SystemVerilog,fpga_jtag,18635,0,2022-05-12 10:15:44+00:00,[],
9495,https://github.com/RazaSaleem/Projectpart3_DVE.git,2022-07-30 03:52:46+00:00,The verification Plan for given DUT memory.,0,RazaSaleem/Projectpart3_DVE,519412272,SystemVerilog,Projectpart3_DVE,51,0,2022-08-07 17:15:30+00:00,[],
9496,https://github.com/Xtyll/quadrature_encoder_monitor.git,2022-06-28 19:39:21+00:00,,0,Xtyll/quadrature_encoder_monitor,508432250,SystemVerilog,quadrature_encoder_monitor,8,0,2022-06-28 19:44:12+00:00,[],
9497,https://github.com/lhm7198/DRAM_CACHE.git,2022-06-29 12:06:23+00:00,,0,lhm7198/DRAM_CACHE,508674966,SystemVerilog,DRAM_CACHE,7336,0,2022-10-26 03:49:37+00:00,[],
9498,https://github.com/SayantanMandal2000/VerilogHDL_Udemy.git,2022-06-22 13:13:44+00:00,,0,SayantanMandal2000/VerilogHDL_Udemy,506254093,SystemVerilog,VerilogHDL_Udemy,6,0,2022-06-22 13:16:37+00:00,[],
9499,https://github.com/rajlrn/SV.git,2022-06-22 13:01:18+00:00,,0,rajlrn/SV,506249496,SystemVerilog,SV,1,0,2022-06-22 13:02:47+00:00,[],
9500,https://github.com/c28504693/HW1-Hierarchical-Design-of-3-8-decoder.git,2022-06-11 11:41:49+00:00,,0,c28504693/HW1-Hierarchical-Design-of-3-8-decoder,502332059,SystemVerilog,HW1-Hierarchical-Design-of-3-8-decoder,1,0,2022-06-11 11:43:17+00:00,[],
9501,https://github.com/VictoriaLoseva/CSE141L.git,2022-06-08 10:47:13+00:00,,0,VictoriaLoseva/CSE141L,501208790,SystemVerilog,CSE141L,607,0,2022-06-12 07:19:28+00:00,[],
9502,https://github.com/zhangziqing/Icaurs.git,2022-06-16 01:57:42+00:00,A loongArch processor core,1,zhangziqing/Icaurs,503978700,SystemVerilog,Icaurs,23063,0,2022-11-17 11:16:14+00:00,[],
9503,https://github.com/anushagh/4bit-sreg.git,2022-07-21 04:19:07+00:00,,0,anushagh/4bit-sreg,516221993,SystemVerilog,4bit-sreg,9,0,2022-07-21 08:49:22+00:00,[],https://api.github.com/licenses/bsd-3-clause
9504,https://github.com/hugo655/uvm_primer_study.git,2022-07-21 14:24:06+00:00,A repository to host notes and codes of my study of UVM,0,hugo655/uvm_primer_study,516402953,SystemVerilog,uvm_primer_study,6727,0,2022-07-21 14:36:35+00:00,[],
9505,https://github.com/dnam98/Knights-Tour.git,2022-08-01 01:19:23+00:00,,0,dnam98/Knights-Tour,519925817,SystemVerilog,Knights-Tour,34,0,2022-08-30 04:18:02+00:00,[],
9506,https://github.com/Jchastan/Custom-Processor-Project.git,2022-08-04 03:24:17+00:00,,0,Jchastan/Custom-Processor-Project,521109062,SystemVerilog,Custom-Processor-Project,9279,0,2022-08-04 03:49:25+00:00,[],
9507,https://github.com/SAMSONMENG/Module-Track.git,2022-06-08 22:12:23+00:00,,0,SAMSONMENG/Module-Track,501426058,SystemVerilog,Module-Track,75,0,2022-06-08 22:13:40+00:00,[],
9508,https://github.com/Skwoogey/SystemVerilog-GameOfLife.git,2022-07-11 16:21:08+00:00,,0,Skwoogey/SystemVerilog-GameOfLife,512829148,SystemVerilog,SystemVerilog-GameOfLife,1,0,2022-07-11 16:21:21+00:00,[],
9509,https://github.com/LinJ0/2022CS_Digital_IC_Design.git,2022-06-23 09:57:21+00:00,,0,LinJ0/2022CS_Digital_IC_Design,506585626,SystemVerilog,2022CS_Digital_IC_Design,6487,0,2022-06-23 13:20:56+00:00,[],
9510,https://github.com/AmanPrakash09/Bresenham-s-Algorithms.git,2022-07-05 21:26:37+00:00,Learned how Visual Graphics Arrays function and how FSMs can be utilized to draw desired pixels. Converted the Bresenham Circle Algorithm to SystemVerilog to draw circles and reuleaux triangles.,0,AmanPrakash09/Bresenham-s-Algorithms,510898783,SystemVerilog,Bresenham-s-Algorithms,823,0,2023-09-01 22:53:01+00:00,[],
9511,https://github.com/AmanPrakash09/Encrypting-and-Decrypting-Messages-in-Memory.git,2022-07-05 21:57:22+00:00,Created RAM modules through Quartus with initialized memory using memh and mif files. Allows one to send an encrypted message with a key to decrypt it. Decrypted message would write in a separate memory module. Key could be entered using a DE1-SoC board. ,0,AmanPrakash09/Encrypting-and-Decrypting-Messages-in-Memory,510905808,SystemVerilog,Encrypting-and-Decrypting-Messages-in-Memory,38,0,2022-08-02 04:48:28+00:00,[],
9512,https://github.com/krsheshu/tbarchies.git,2022-07-06 08:46:35+00:00,WIP with various Test Bench architectures which can ideally be reused,0,krsheshu/tbarchies,511058724,SystemVerilog,tbarchies,16,0,2022-07-10 11:25:19+00:00,[],
9513,https://github.com/micky-bank/interview_coding_practice.git,2022-07-07 13:27:39+00:00,,0,micky-bank/interview_coding_practice,511538396,SystemVerilog,interview_coding_practice,18,0,2022-08-07 06:55:10+00:00,[],
9514,https://github.com/amiteshkr63/I2C_design_VLSI.git,2022-07-13 08:40:24+00:00,,0,amiteshkr63/I2C_design_VLSI,513444076,SystemVerilog,I2C_design_VLSI,76,0,2023-08-29 05:29:11+00:00,[],
9515,https://github.com/nguyenducquang1212/sync_fifo.git,2022-07-10 08:27:45+00:00,,0,nguyenducquang1212/sync_fifo,512383059,SystemVerilog,sync_fifo,9,0,2022-07-10 08:30:01+00:00,[],
9516,https://github.com/benjamin051000/riscv.git,2022-07-16 03:28:54+00:00,A RISC-V RV32I Core,0,benjamin051000/riscv,514466463,SystemVerilog,riscv,95,0,2022-08-15 13:30:27+00:00,[],
9517,https://github.com/WuzhuangWang/sv_string.git,2022-08-20 05:48:47+00:00,"A systemverilog string extensions package，contains various string operation, such as replace, split.",2,WuzhuangWang/sv_string,526837854,,sv_string,11,0,2022-08-19 08:46:01+00:00,[],https://api.github.com/licenses/mit
9518,https://github.com/AlSaqr-platform/ethernet.git,2022-07-28 09:46:36+00:00,Ethernet for Al Saqr platform,0,AlSaqr-platform/ethernet,518787866,SystemVerilog,ethernet,24464,0,2024-03-31 14:13:54+00:00,[],https://api.github.com/licenses/mit
9519,https://github.com/Frucks/PURDUE-PROJECTS.git,2022-09-24 19:48:35+00:00,,0,Frucks/PURDUE-PROJECTS,540949243,SystemVerilog,PURDUE-PROJECTS,4143,0,2024-04-01 22:01:03+00:00,[],
9520,https://github.com/AmiltonCabral/LOAC.git,2022-06-01 09:26:26+00:00,Submissões dos arquivos top.sv da disciplina de LOAC na UFCG,0,AmiltonCabral/LOAC,498671072,SystemVerilog,LOAC,671,0,2024-04-06 11:42:26+00:00,[],
9521,https://github.com/GhulamMustafa9/Cache_Controller-_Manual-transaction-testbench.git,2022-05-19 12:52:12+00:00,DirectMapped  Cache Controller,0,GhulamMustafa9/Cache_Controller-_Manual-transaction-testbench,494070289,SystemVerilog,Cache_Controller-_Manual-transaction-testbench,667,0,2022-05-19 21:16:48+00:00,[],
9522,https://github.com/staniewskib/semihalf.git,2022-07-03 20:04:00+00:00,,0,staniewskib/semihalf,510124088,SystemVerilog,semihalf,5,0,2022-07-07 21:31:37+00:00,[],
9523,https://github.com/MinhTran0911/Simple_CPU_DE10.git,2022-07-30 14:37:56+00:00,Simple Central Processing Unit (CPU) Design using Terasic DE-10 Standard FPGA,0,MinhTran0911/Simple_CPU_DE10,519540384,SystemVerilog,Simple_CPU_DE10,20862,0,2022-08-06 08:13:54+00:00,"['altera-fpga', 'cpu', 'cyclone-v', 'fpga', 'hardware-description-language', 'hdl', 'modelsim', 'quartus-prime', 'systemverilog', 'terasic-de10-standard']",
9524,https://github.com/johnnoG/Verilog-Projects.git,2022-06-02 15:58:26+00:00,,0,johnnoG/Verilog-Projects,499200325,SystemVerilog,Verilog-Projects,118,0,2022-06-02 15:59:34+00:00,[],
9525,https://github.com/adwranovsky/quick_uart.git,2022-06-06 00:39:46+00:00,Quickly add UART TX and RX interfaces to an FPGA project,0,adwranovsky/quick_uart,500246719,SystemVerilog,quick_uart,12,0,2022-06-06 00:41:04+00:00,[],
9526,https://github.com/SokAnn/project-2.git,2022-07-02 14:28:56+00:00,,0,SokAnn/project-2,509777403,SystemVerilog,project-2,14,0,2022-07-22 11:06:23+00:00,[],
9527,https://github.com/puneeth714/lfsr.git,2022-07-23 10:34:33+00:00,,0,puneeth714/lfsr,517027666,SystemVerilog,lfsr,322,0,2022-07-23 10:34:39+00:00,[],
9528,https://github.com/ppengjiang/ppengjiang.git,2022-05-13 02:45:42+00:00,vcs makefile and uvm ,0,ppengjiang/ppengjiang,491735426,SystemVerilog,ppengjiang,1,0,2022-05-13 02:48:16+00:00,[],
9530,https://github.com/Emerald52/HW5.git,2022-05-15 17:30:00+00:00,,0,Emerald52/HW5,492556767,SystemVerilog,HW5,2,0,2022-05-15 17:30:32+00:00,[],
9531,https://github.com/Bianca66/Parallel2Serial.git,2022-07-13 21:35:50+00:00,,0,Bianca66/Parallel2Serial,513677942,SystemVerilog,Parallel2Serial,7317,0,2022-07-13 21:37:49+00:00,[],
9532,https://github.com/napoleon98/Exanet-Switch-With-Virtual-Channels.git,2022-07-06 11:44:27+00:00,,0,napoleon98/Exanet-Switch-With-Virtual-Channels,511113997,SystemVerilog,Exanet-Switch-With-Virtual-Channels,305,0,2022-07-06 12:42:54+00:00,[],
9533,https://github.com/lilianabarbosa15/PRACTICA2_DIGITALES2.git,2022-07-05 19:48:14+00:00,CPU simple ,0,lilianabarbosa15/PRACTICA2_DIGITALES2,510874686,SystemVerilog,PRACTICA2_DIGITALES2,19,0,2022-07-05 19:52:30+00:00,[],
9534,https://github.com/alexc0888/multiFunctionBarrelShifter.git,2022-08-06 07:09:14+00:00,"Multi Function Left-Right Barrel Shifter that supports widths of 8, 16, and 32 bits.",0,alexc0888/multiFunctionBarrelShifter,521874296,SystemVerilog,multiFunctionBarrelShifter,24,0,2022-08-06 07:10:20+00:00,[],
9535,https://github.com/kuchisravani/RTLprojects.git,2022-07-12 05:56:53+00:00,,0,kuchisravani/RTLprojects,513016937,SystemVerilog,RTLprojects,30,0,2022-07-19 10:46:44+00:00,[],
9536,https://github.com/Wishah-Naseer/SweRV-FPU.git,2022-07-13 11:07:54+00:00,SweRV-EL2 Core with Floating Point Support,1,Wishah-Naseer/SweRV-FPU,513488461,SystemVerilog,SweRV-FPU,16325,0,2022-07-13 11:21:46+00:00,[],
9537,https://github.com/crisdmej/snake-game-repo.git,2022-07-11 22:03:51+00:00,,0,crisdmej/snake-game-repo,512920982,SystemVerilog,snake-game-repo,631,0,2022-07-11 22:37:15+00:00,[],
9538,https://github.com/GabrielReira/Digital-Electronics.git,2022-08-01 21:48:11+00:00,Repositório para a disciplina de Eletrônica Digital da Universidade Federal da Bahia (UFBA).,0,GabrielReira/Digital-Electronics,520271032,SystemVerilog,Digital-Electronics,6667,0,2022-08-09 19:44:18+00:00,[],https://api.github.com/licenses/mit
9539,https://github.com/lobster128/lobster128.git,2022-08-21 20:32:59+00:00,lobster128 architecture.,0,lobster128/lobster128,527320235,SystemVerilog,lobster128,700,0,2022-08-21 20:57:46+00:00,[],https://api.github.com/licenses/gpl-3.0
9540,https://github.com/TDD-II-22/lab02-g03.git,2022-08-20 14:25:48+00:00,lab02-g03 created by GitHub Classroom,0,TDD-II-22/lab02-g03,526949167,SystemVerilog,lab02-g03,56114,0,2022-08-22 05:46:06+00:00,[],
9541,https://github.com/rady121/Projects.git,2022-08-23 14:24:27+00:00,,0,rady121/Projects,528026301,SystemVerilog,Projects,1881,0,2022-08-23 14:28:35+00:00,[],
9542,https://github.com/sherif-omar111/Advanced-Peripheral-Bus-APB-_Protocol.git,2022-09-11 15:25:34+00:00,,0,sherif-omar111/Advanced-Peripheral-Bus-APB-_Protocol,535339362,SystemVerilog,Advanced-Peripheral-Bus-APB-_Protocol,298,0,2022-09-11 15:28:38+00:00,[],
9543,https://github.com/mm-mehran79/networkPacket_stuffOrData.git,2022-08-28 05:39:18+00:00,the module is also known as sigma delta,0,mm-mehran79/networkPacket_stuffOrData,529772817,SystemVerilog,networkPacket_stuffOrData,3191,0,2023-09-02 04:16:40+00:00,"['computer-network', 'fpga', 'systemverilog-hdl', 'xilinx-fpga', 'xilinx-vivado']",
9544,https://github.com/krunalbadlani/systemverilog_projects.git,2022-08-31 05:00:08+00:00,,0,krunalbadlani/systemverilog_projects,530941019,SystemVerilog,systemverilog_projects,11,0,2023-03-22 05:58:26+00:00,[],
9545,https://github.com/DilipKrishnappa/interface.git,2022-09-01 07:01:53+00:00,virtual interface,0,DilipKrishnappa/interface,531402356,SystemVerilog,interface,259,0,2022-09-12 16:37:03+00:00,[],
9546,https://github.com/vinay3991/vedic_adder_uvm_tb.git,2022-09-14 02:50:50+00:00,,0,vinay3991/vedic_adder_uvm_tb,536389827,SystemVerilog,vedic_adder_uvm_tb,4,0,2022-09-14 03:14:16+00:00,[],
9547,https://github.com/dinalg/Tetris-SystemVerilog.git,2022-09-14 16:18:49+00:00,,0,dinalg/Tetris-SystemVerilog,536663719,SystemVerilog,Tetris-SystemVerilog,2090,0,2022-10-14 16:03:29+00:00,[],
9548,https://github.com/zombie782/HMM_Hardware.git,2022-09-18 20:05:28+00:00,SystemVerilog implementation of the forward algorithm on HMMs. Format is Q0.32 (fixed point with 0 integer bits and 32 fractional bits). This will reasonably synthesize but I have not yet looked into how much time this hardware implementation saves over software.,0,zombie782/HMM_Hardware,538227366,SystemVerilog,HMM_Hardware,3,0,2022-09-18 20:06:27+00:00,[],
9549,https://github.com/carsonmiiller/eBike.git,2022-09-19 00:53:03+00:00,,0,carsonmiiller/eBike,538283863,SystemVerilog,eBike,30,0,2022-09-19 01:20:52+00:00,[],
9550,https://github.com/khgeorge45/WaterMelon1000.git,2022-06-25 08:42:46+00:00,,0,khgeorge45/WaterMelon1000,507259138,SystemVerilog,WaterMelon1000,1,0,2022-06-25 08:52:33+00:00,[],
9551,https://github.com/qianlinxyc/rst_uvc.git,2022-06-18 08:01:25+00:00,,0,qianlinxyc/rst_uvc,504781837,SystemVerilog,rst_uvc,1,0,2022-06-18 08:02:24+00:00,[],
9552,https://github.com/dawkrz13/censor-repo.git,2022-06-18 12:08:25+00:00,FPGA dedicated Bloom filter.,0,dawkrz13/censor-repo,504833401,SystemVerilog,censor-repo,17,0,2022-06-18 12:11:45+00:00,[],
9553,https://github.com/Phyteon/data_sniffer.git,2022-06-19 13:50:24+00:00,"Repository containing code for final project for course ""Dedicated Systems in Programmable Logic Devices""",0,Phyteon/data_sniffer,505123180,SystemVerilog,data_sniffer,24,0,2022-06-21 21:09:00+00:00,[],
9554,https://github.com/Leah1115/MIPS-CPU-design.git,2022-05-29 05:43:43+00:00,MIPS CPU design,0,Leah1115/MIPS-CPU-design,497501380,SystemVerilog,MIPS-CPU-design,2318,0,2022-05-29 05:47:58+00:00,[],
9555,https://github.com/ShamsElgohary/MultiMode-Counter.git,2022-05-27 17:45:47+00:00,,0,ShamsElgohary/MultiMode-Counter,497087508,SystemVerilog,MultiMode-Counter,375,0,2022-05-27 17:50:56+00:00,[],
9556,https://github.com/chrislo66/ASIC-Design-Project.git,2022-07-01 07:59:05+00:00,,0,chrislo66/ASIC-Design-Project,509369668,SystemVerilog,ASIC-Design-Project,51,0,2022-07-01 08:06:54+00:00,[],
9557,https://github.com/mariecla/document-fr.git,2022-06-12 12:47:35+00:00,,0,mariecla/document-fr,502614079,SystemVerilog,document-fr,0,0,2022-06-12 12:52:21+00:00,[],
9558,https://github.com/nickelpro/verilog-test.git,2022-06-14 15:06:33+00:00,,0,nickelpro/verilog-test,503408924,SystemVerilog,verilog-test,18,0,2022-06-14 15:09:59+00:00,[],
9559,https://github.com/c28504693/HW4-BCD.git,2022-06-11 12:18:30+00:00,,0,c28504693/HW4-BCD,502340043,SystemVerilog,HW4-BCD,1,0,2022-06-11 12:19:05+00:00,[],
9560,https://github.com/Noman-Nom/SV-paractice.git,2022-09-07 09:14:16+00:00,,0,Noman-Nom/SV-paractice,533691184,SystemVerilog,SV-paractice,2,0,2022-09-07 09:17:25+00:00,[],
9561,https://github.com/talamit999/LAB-1-EE---PINBALL-GAME.git,2022-09-13 09:22:22+00:00,,0,talamit999/LAB-1-EE---PINBALL-GAME,536049729,SystemVerilog,LAB-1-EE---PINBALL-GAME,79,0,2022-09-13 09:26:39+00:00,[],
9562,https://github.com/supleed2/apbDriver.git,2022-07-28 15:51:34+00:00,"Basic APB-compatible module designed for use with Verilator, but should work with any DPI-C compatible simulator.",0,supleed2/apbDriver,518907454,SystemVerilog,apbDriver,11,0,2024-01-19 04:24:47+00:00,"['apb', 'dpi-c', 'systemverilog', 'verilator']",https://api.github.com/licenses/apache-2.0
9563,https://github.com/MEEPproject/ariane.git,2022-05-15 15:56:46+00:00,MEEP modifications over ariane,0,MEEPproject/ariane,492533798,SystemVerilog,ariane,31665,0,2022-07-26 01:57:59+00:00,[],
9564,https://github.com/amichai-bd/rvc_playground.git,2022-06-07 14:11:13+00:00,RISCV Core - Designing a RISCV Core HW & simulation env.,0,amichai-bd/rvc_playground,500868568,SystemVerilog,rvc_playground,3807,0,2022-06-07 15:49:29+00:00,[],https://api.github.com/licenses/mit
9565,https://github.com/zceemja/ucl_project_y3.git,2022-06-05 14:26:36+00:00,Performance characterisation of 8-bit RISC and OISC processor architectures,0,zceemja/ucl_project_y3,500119790,SystemVerilog,ucl_project_y3,15341,0,2022-06-05 14:28:21+00:00,[],
9566,https://github.com/ralfgad/divisor.git,2022-05-25 13:54:39+00:00,,0,ralfgad/divisor,496252832,SystemVerilog,divisor,14389,0,2022-06-07 17:07:26+00:00,[],
9567,https://github.com/Shaista087/Verilog.git,2022-05-27 10:36:02+00:00,,0,Shaista087/Verilog,496956456,SystemVerilog,Verilog,683,0,2022-05-28 00:56:20+00:00,[],
9568,https://github.com/dangalg/VerilogHW1.git,2022-05-29 18:06:08+00:00,,0,dangalg/VerilogHW1,497670244,SystemVerilog,VerilogHW1,573,0,2022-05-29 18:06:15+00:00,[],
9569,https://github.com/nettalee19/YAPP-Router---Cadence-UVM-Course.git,2022-07-05 12:41:45+00:00,,0,nettalee19/YAPP-Router---Cadence-UVM-Course,510731451,SystemVerilog,YAPP-Router---Cadence-UVM-Course,44,0,2022-07-05 12:41:51+00:00,[],
9570,https://github.com/qian-gu/dic_template.git,2022-07-04 09:49:23+00:00,Digital IC template project integrated with common opensource tools,0,qian-gu/dic_template,510300999,SystemVerilog,dic_template,25,0,2022-08-05 12:40:33+00:00,[],https://api.github.com/licenses/mit
9571,https://github.com/chen-ian-rong/HW-2.git,2022-06-26 19:00:47+00:00,,0,chen-ian-rong/HW-2,507660423,SystemVerilog,HW-2,3,0,2022-06-26 19:07:15+00:00,[],
9572,https://github.com/a29712049/Four-person-voting-machine.git,2022-06-27 02:45:23+00:00,,0,a29712049/Four-person-voting-machine,507741381,SystemVerilog,Four-person-voting-machine,40,0,2022-06-27 02:45:45+00:00,[],
9573,https://github.com/edoardosignoroni/hftoks-eval.git,2022-06-29 19:09:14+00:00,High Frequency Tokenizer - Evaluation,1,edoardosignoroni/hftoks-eval,508815738,SystemVerilog,hftoks-eval,1108378,0,2022-11-01 13:45:41+00:00,"['nlp', 'tokenizer']",
9574,https://github.com/gary3123/-hw5.git,2022-05-15 11:20:23+00:00,,0,gary3123/-hw5,492465566,SystemVerilog,-hw5,2,0,2022-05-15 11:22:25+00:00,[],
9575,https://github.com/Abdo99-alt/Single-cycle-mips.git,2022-08-12 17:59:54+00:00,,0,Abdo99-alt/Single-cycle-mips,524180349,SystemVerilog,Single-cycle-mips,5,0,2022-08-12 18:02:05+00:00,[],https://api.github.com/licenses/mit
9576,https://github.com/AlekssGit/sfp_test.git,2022-08-12 14:10:46+00:00,,1,AlekssGit/sfp_test,524111800,SystemVerilog,sfp_test,53016,0,2022-09-25 18:09:34+00:00,[],
9577,https://github.com/fpgaland/UVM.git,2022-08-13 02:21:43+00:00,,0,fpgaland/UVM,524277690,SystemVerilog,UVM,25,0,2022-08-14 08:28:30+00:00,[],https://api.github.com/licenses/mit
9578,https://github.com/denSmashh/multi-cycle-mips-cpu.git,2022-07-29 20:10:18+00:00,"Multi cycle mips cpu from book H&H ""Digital design and computer architecture""",0,denSmashh/multi-cycle-mips-cpu,519337985,SystemVerilog,multi-cycle-mips-cpu,70,0,2022-07-29 23:11:38+00:00,[],
9579,https://github.com/sidhantp1906/FCFS_Arbiter_Design_And_Verification.git,2022-08-10 10:07:05+00:00,Design and verification of first come first serve arbiter,1,sidhantp1906/FCFS_Arbiter_Design_And_Verification,523292670,SystemVerilog,FCFS_Arbiter_Design_And_Verification,2028,0,2022-08-10 10:17:25+00:00,"['arbiter', 'systemverilog', 'uvm', 'verification', 'verilog']",https://api.github.com/licenses/apache-2.0
9580,https://github.com/FzFz2000/comparing-multiplexers.git,2022-08-11 18:36:28+00:00,,0,FzFz2000/comparing-multiplexers,523830598,SystemVerilog,comparing-multiplexers,313,0,2022-10-25 14:31:10+00:00,[],
9581,https://github.com/haha12138138/build_a_RV.git,2022-05-22 11:32:47+00:00,,0,haha12138138/build_a_RV,495041133,SystemVerilog,build_a_RV,13,0,2022-05-22 11:41:37+00:00,[],
9582,https://github.com/rvxfahim/viterbi-2-1-4.git,2022-06-20 01:16:52+00:00,,0,rvxfahim/viterbi-2-1-4,505256659,SystemVerilog,viterbi-2-1-4,7766,0,2022-06-24 18:58:01+00:00,[],
9583,https://github.com/gary3123/hw_4.git,2022-06-11 16:38:36+00:00,,0,gary3123/hw_4,502402468,SystemVerilog,hw_4,2,0,2022-06-11 16:42:02+00:00,[],
9584,https://github.com/ClaytonJPayne/CacheRTL.git,2022-06-18 06:01:10+00:00,Repo for different cache-related RTL modules I'm working on,0,ClaytonJPayne/CacheRTL,504758625,SystemVerilog,CacheRTL,5,0,2022-06-18 06:02:51+00:00,[],
9585,https://github.com/jass-jass/System_Verilog.git,2022-06-22 08:46:01+00:00,,0,jass-jass/System_Verilog,506167224,SystemVerilog,System_Verilog,121,0,2022-06-22 09:53:03+00:00,[],
9586,https://github.com/MszBednarski/z0.git,2022-07-23 13:09:08+00:00,,0,MszBednarski/z0,517060877,SystemVerilog,z0,2,0,2022-07-24 10:49:58+00:00,[],
9587,https://github.com/DIPS6114/fifo_bfm_topology_makefile.git,2022-07-22 07:32:31+00:00,,0,DIPS6114/fifo_bfm_topology_makefile,516654601,SystemVerilog,fifo_bfm_topology_makefile,11,0,2022-07-22 07:51:41+00:00,[],
9588,https://github.com/Shwetapatil05/fifo_vip.git,2022-07-22 03:57:35+00:00,verification of fifo bfm,1,Shwetapatil05/fifo_vip,516602926,SystemVerilog,fifo_vip,191,0,2022-07-22 04:23:50+00:00,[],
9589,https://github.com/PRK-innerpeace/9bitProcessor.git,2022-07-20 13:28:18+00:00,,0,PRK-innerpeace/9bitProcessor,515993311,SystemVerilog,9bitProcessor,12276,0,2022-07-20 13:31:14+00:00,[],
9590,https://github.com/PaulManriquez/LW_Instruction_MIPS.git,2022-07-25 20:16:11+00:00,This is a data path of LW instruction based on MIPS architecture,0,PaulManriquez/LW_Instruction_MIPS,517807988,SystemVerilog,LW_Instruction_MIPS,537,0,2022-08-03 02:02:10+00:00,[],
9591,https://github.com/RazaSaleem/Projectpart1_DVE.git,2022-07-19 04:43:56+00:00,This repo contains layered test bench of AMBA AHB bus slave model the using systemverilog project part 1,0,RazaSaleem/Projectpart1_DVE,515437037,SystemVerilog,Projectpart1_DVE,33,0,2022-07-19 04:55:38+00:00,[],
9592,https://github.com/knhitesh/DPRAM---Packet_Generator-USB-.git,2022-07-19 06:10:37+00:00,,0,knhitesh/DPRAM---Packet_Generator-USB-,515457367,SystemVerilog,DPRAM---Packet_Generator-USB-,7,0,2022-07-19 07:32:30+00:00,[],
9593,https://github.com/YaMsoulm/amplifier.git,2022-07-09 07:31:49+00:00,,0,YaMsoulm/amplifier,512123181,SystemVerilog,amplifier,1,0,2022-07-09 13:23:18+00:00,[],
9594,https://github.com/Saadi118/Project_I-SAADI-.git,2022-07-15 14:51:11+00:00,AHB lite project part 1 done on EDA PLAYGROUND,0,Saadi118/Project_I-SAADI-,514306437,SystemVerilog,Project_I-SAADI-,10,0,2022-07-15 14:56:04+00:00,[],
9595,https://github.com/arjavjain21/VHDL-Pattern-Detector.git,2022-07-27 14:49:14+00:00,A pattern detector using VHDL which can be used to detect any given pattern/sequence of 1’s and 0’s and give the output accordingly,0,arjavjain21/VHDL-Pattern-Detector,518499330,SystemVerilog,VHDL-Pattern-Detector,1003,0,2022-07-27 14:50:37+00:00,[],
9596,https://github.com/AhsanAliUet/alu-using-only-one-adder.git,2022-09-12 16:51:40+00:00,"In this repository, an ALU (Arithmetic and logic unit) is made using one full adder which can add as well as subtract using that adder only",0,AhsanAliUet/alu-using-only-one-adder,535763852,SystemVerilog,alu-using-only-one-adder,42,0,2022-09-21 19:49:18+00:00,[],
9597,https://github.com/ECE4278/lab3.git,2022-09-20 10:46:46+00:00,,0,ECE4278/lab3,538937969,SystemVerilog,lab3,10,0,2022-09-20 10:52:16+00:00,[],
9598,https://github.com/kanuar/systemverilog_fulladder_with_ripplecarry.git,2022-09-20 10:22:48+00:00,,0,kanuar/systemverilog_fulladder_with_ripplecarry,538928747,SystemVerilog,systemverilog_fulladder_with_ripplecarry,3,0,2022-09-20 10:37:52+00:00,[],
9599,https://github.com/WazaAbdulkadir/APB-Protocol-Project-.git,2022-08-17 14:21:04+00:00,APB master with two slaves read and write operation,0,WazaAbdulkadir/APB-Protocol-Project-,525825902,SystemVerilog,APB-Protocol-Project-,61,0,2022-08-17 14:24:16+00:00,[],
9600,https://github.com/WEIhabi/habi_master_hw_vsd.git,2022-08-25 04:25:21+00:00,,0,WEIhabi/habi_master_hw_vsd,528692662,SystemVerilog,habi_master_hw_vsd,6980,0,2022-09-20 17:32:13+00:00,[],
9601,https://github.com/sarawiRTLDV/System-Verilog-Projects.git,2022-09-04 10:38:48+00:00,"Verification of Common Peripherals, Memories, and Bus Protocol",0,sarawiRTLDV/System-Verilog-Projects,532509012,SystemVerilog,System-Verilog-Projects,78,0,2022-09-04 10:48:50+00:00,[],
9602,https://github.com/Gopalsuthar2308/My_Github_exp.git,2022-08-03 06:12:28+00:00,First Github experiment ,1,Gopalsuthar2308/My_Github_exp,520759275,SystemVerilog,My_Github_exp,7056,0,2023-01-31 20:09:12+00:00,[],
9603,https://github.com/VenkataPruthviKrishna/test1.git,2022-08-25 13:10:27+00:00,,0,VenkataPruthviKrishna/test1,528856458,SystemVerilog,test1,39,0,2022-08-25 18:15:45+00:00,[],
9604,https://github.com/Heutlett/TEXT_PROCESSOR_ARM.git,2022-08-25 16:48:16+00:00,,0,Heutlett/TEXT_PROCESSOR_ARM,528938742,SystemVerilog,TEXT_PROCESSOR_ARM,280,0,2022-08-25 16:50:52+00:00,[],
9605,https://github.com/Aric5301/LSH-Project.git,2022-08-26 08:34:00+00:00,,0,Aric5301/LSH-Project,529178768,SystemVerilog,LSH-Project,4606,0,2023-01-22 19:45:22+00:00,[],
9606,https://github.com/vj-sananda/msim-python.git,2022-09-01 01:03:31+00:00,,0,vj-sananda/msim-python,531313539,SystemVerilog,msim-python,2,0,2022-09-01 01:47:50+00:00,[],
9607,https://github.com/Aditi-Dhibar/RAM-and-ROM-Design.git,2022-09-01 14:21:16+00:00,"Here I design single port RAM , dual port RAM and ROM",0,Aditi-Dhibar/RAM-and-ROM-Design,531552274,SystemVerilog,RAM-and-ROM-Design,159,0,2022-09-01 14:38:19+00:00,[],
9608,https://github.com/anmehta4/ece554_minilab3.git,2022-09-20 20:51:10+00:00,,0,anmehta4/ece554_minilab3,539187381,SystemVerilog,ece554_minilab3,4,0,2022-09-20 21:09:40+00:00,[],
9609,https://github.com/luophoe/SystemVerilog-projects.git,2022-09-22 21:33:16+00:00,,0,luophoe/SystemVerilog-projects,540177407,SystemVerilog,SystemVerilog-projects,469,0,2022-09-23 01:28:42+00:00,[],
9610,https://github.com/Adeen317/100_DaysofRTL_SystemVerilog.git,2022-09-08 09:34:41+00:00,,0,Adeen317/100_DaysofRTL_SystemVerilog,534142838,SystemVerilog,100_DaysofRTL_SystemVerilog,82,0,2023-07-28 20:51:59+00:00,[],
9611,https://github.com/dfantonio/UFRGS-ENG04461.git,2022-09-13 18:53:39+00:00,,0,dfantonio/UFRGS-ENG04461,536268145,SystemVerilog,UFRGS-ENG04461,4974,0,2022-10-14 16:18:37+00:00,[],
9612,https://github.com/riser44/GNN_Accelerator.git,2022-05-14 18:12:28+00:00,,0,riser44/GNN_Accelerator,492291950,SystemVerilog,GNN_Accelerator,9329,0,2022-05-14 18:16:54+00:00,[],
9613,https://github.com/John0b1000/ece2613_labs_DE10.git,2022-05-30 17:22:16+00:00,ECE 2613 Labs revised for DE10-Lite Hardware,0,John0b1000/ece2613_labs_DE10,498035758,SystemVerilog,ece2613_labs_DE10,28935,0,2022-08-13 15:37:49+00:00,[],
9614,https://github.com/JA-2023/CPE333_final.git,2022-05-21 23:22:13+00:00,Files for implementing a SPI interface for the OTTER MCU,0,JA-2023/CPE333_final,494915404,SystemVerilog,CPE333_final,1295,0,2022-05-24 03:30:54+00:00,[],
9615,https://github.com/abhishekkhare1998/sha-256-project.git,2022-05-22 00:38:49+00:00,,0,abhishekkhare1998/sha-256-project,494925584,SystemVerilog,sha-256-project,139,0,2022-07-20 07:42:57+00:00,[],
9616,https://github.com/hchou4/Casino_slots_game.git,2022-06-05 06:42:03+00:00,,0,hchou4/Casino_slots_game,500020903,SystemVerilog,Casino_slots_game,130,0,2022-06-06 05:32:17+00:00,[],
9617,https://github.com/padung99/Metrotek_LAB1.git,2022-06-14 22:55:59+00:00,,0,padung99/Metrotek_LAB1,503544517,SystemVerilog,Metrotek_LAB1,69,0,2022-06-14 22:57:55+00:00,[],
9618,https://github.com/AmrMohamed226/NLP-and-Machine-Translation-systems.git,2022-06-15 00:05:09+00:00,,0,AmrMohamed226/NLP-and-Machine-Translation-systems,503557704,SystemVerilog,NLP-and-Machine-Translation-systems,2165,0,2022-11-01 01:23:29+00:00,[],
9619,https://github.com/owlxiao/riscv-dataflow.git,2022-06-13 13:08:33+00:00,RISC-V Processor with Dataflow Extension,0,owlxiao/riscv-dataflow,502960998,SystemVerilog,riscv-dataflow,7,0,2022-06-28 13:15:55+00:00,[],
9620,https://github.com/Ivansquark/mca.git,2022-06-14 19:42:45+00:00,materials and sources of work on multichannel analyzer,0,Ivansquark/mca,503498088,SystemVerilog,mca,19702,0,2022-06-16 13:53:59+00:00,[],
9621,https://github.com/HandsomeKid666/HW5.git,2022-07-01 04:51:39+00:00,,0,HandsomeKid666/HW5,509324109,SystemVerilog,HW5,1,0,2022-07-01 05:04:22+00:00,[],
9622,https://github.com/wrblynch/bitcoin-hashing-algorithm.git,2022-06-24 20:57:26+00:00,,0,wrblynch/bitcoin-hashing-algorithm,507142329,SystemVerilog,bitcoin-hashing-algorithm,7,0,2022-06-24 20:58:45+00:00,[],
9623,https://github.com/c28504693/HW3-voter.git,2022-06-11 12:11:15+00:00,,0,c28504693/HW3-voter,502338396,SystemVerilog,HW3-voter,1,0,2022-06-11 12:12:27+00:00,[],
9624,https://github.com/kagani/TinyCore.git,2022-07-04 19:13:24+00:00,A MIPS-like processor written in SystemVerilog,0,kagani/TinyCore,510476848,SystemVerilog,TinyCore,8,0,2022-11-16 09:20:46+00:00,[],
9625,https://github.com/OrigiWang/ahb-ram-project.git,2022-07-07 10:24:45+00:00,ahb ram project,0,OrigiWang/ahb-ram-project,511481645,SystemVerilog,ahb-ram-project,8,0,2022-07-07 10:27:17+00:00,[],
9626,https://github.com/abrahamjdn/UVM-mips-single-cycle.git,2022-07-09 21:08:02+00:00,UVM mips single cycle files ,0,abrahamjdn/UVM-mips-single-cycle,512285953,SystemVerilog,UVM-mips-single-cycle,18,0,2022-07-09 21:13:47+00:00,[],
9627,https://github.com/abrahamjdn/UVM-mips-multicycle.git,2022-07-09 21:14:52+00:00,mips-multicycle verification using UVM ,0,abrahamjdn/UVM-mips-multicycle,512286968,SystemVerilog,UVM-mips-multicycle,15,0,2022-07-09 21:17:49+00:00,[],
9628,https://github.com/VuksaNed/VLSI.git,2022-07-09 15:16:36+00:00,,0,VuksaNed/VLSI,512217257,SystemVerilog,VLSI,131,0,2022-07-09 15:16:41+00:00,[],
9629,https://github.com/andrewbmccullough/ece474-vlsi-system-design.git,2022-07-12 04:24:31+00:00,ECE474 VLSI System Design,0,andrewbmccullough/ece474-vlsi-system-design,512997270,SystemVerilog,ece474-vlsi-system-design,691,0,2022-07-12 04:24:59+00:00,[],
9630,https://github.com/LyashenkoValeria/SPr430.git,2022-06-23 02:26:26+00:00,,0,LyashenkoValeria/SPr430,506471188,SystemVerilog,SPr430,172,0,2022-06-23 02:32:47+00:00,[],
9631,https://github.com/shakirsultan/Single-Cycle-RISC-V-Data-Path-and-Control-Logic.git,2022-06-16 13:08:47+00:00,,0,shakirsultan/Single-Cycle-RISC-V-Data-Path-and-Control-Logic,504160053,SystemVerilog,Single-Cycle-RISC-V-Data-Path-and-Control-Logic,5,0,2022-06-16 16:05:33+00:00,[],
9632,https://github.com/dinasmh/apb.git,2022-09-10 15:38:19+00:00,,0,dinasmh/apb,535041245,SystemVerilog,apb,14,0,2022-09-10 15:39:47+00:00,[],
9633,https://github.com/maxpinheiro/eece2323-lab0.git,2022-09-13 18:00:53+00:00,,0,maxpinheiro/eece2323-lab0,536249963,SystemVerilog,eece2323-lab0,5,0,2022-09-13 19:32:38+00:00,[],
9634,https://github.com/ikar298/Design-of-Error-Detection-and-Correction-Module-using-Hamming-Code-Technique.git,2022-08-25 07:56:21+00:00,,0,ikar298/Design-of-Error-Detection-and-Correction-Module-using-Hamming-Code-Technique,528750399,SystemVerilog,Design-of-Error-Detection-and-Correction-Module-using-Hamming-Code-Technique,32,0,2022-08-25 17:31:17+00:00,[],
9635,https://github.com/amichai-bd/smart_uart_playground.git,2022-08-26 07:38:53+00:00,A System Verilog project - accessing any memory map from Host to device (FPGA) using uart - without a CPU to control the uart traffic,0,amichai-bd/smart_uart_playground,529162433,SystemVerilog,smart_uart_playground,11523,0,2022-08-26 14:46:20+00:00,[],https://api.github.com/licenses/mit
9636,https://github.com/Artem-Savin/Circuitry.git,2022-09-15 09:05:13+00:00,,0,Artem-Savin/Circuitry,536946009,SystemVerilog,Circuitry,4,0,2022-09-15 09:31:02+00:00,[],
9637,https://github.com/tharunenamala/kani-kani.git,2022-09-15 05:08:53+00:00,sarada,0,tharunenamala/kani-kani,536872375,SystemVerilog,kani-kani,25,0,2023-04-23 10:27:49+00:00,[],
9638,https://github.com/Heutlett/proyectogrupal1.git,2022-09-19 15:50:09+00:00,,0,Heutlett/proyectogrupal1,538578239,SystemVerilog,proyectogrupal1,200880,0,2023-04-18 19:43:41+00:00,[],
9639,https://github.com/barzamin/ece554_miniproject.git,2022-09-07 18:38:35+00:00,,0,barzamin/ece554_miniproject,533894331,SystemVerilog,ece554_miniproject,3120,0,2022-09-07 18:39:39+00:00,[],
9640,https://github.com/munjoon98/2022-COSE222-Third-Assignment.git,2022-09-03 07:59:18+00:00,Single_Cycle_CPU,0,munjoon98/2022-COSE222-Third-Assignment,532195231,SystemVerilog,2022-COSE222-Third-Assignment,6,0,2022-09-03 08:00:15+00:00,[],
9641,https://github.com/good4Ya/NRZ_CDR.git,2022-09-23 16:46:18+00:00,recorver remote clock form data which flips with remote clock,0,good4Ya/NRZ_CDR,540533682,SystemVerilog,NRZ_CDR,3,0,2022-09-27 15:26:17+00:00,[],
9642,https://github.com/s3722763/GBAEmulator.git,2022-08-31 12:03:51+00:00,,0,s3722763/GBAEmulator,531065618,SystemVerilog,GBAEmulator,212,0,2023-02-27 05:47:19+00:00,[],
9643,https://github.com/vsheung/Bacarrat.git,2022-08-28 22:33:14+00:00,"Programmed Bacarrat on the DE1-SoC, a design board built around an Altera System-on-Chip (SoC) FPGA.",0,vsheung/Bacarrat,529995404,SystemVerilog,Bacarrat,1534,0,2022-08-28 22:41:05+00:00,[],
9644,https://github.com/adinavale/Assertions.git,2022-08-27 19:01:28+00:00,EE 272 homework assignment,0,adinavale/Assertions,529673148,SystemVerilog,Assertions,2,0,2022-10-24 18:39:47+00:00,[],
9645,https://github.com/CynthiaLi1018/EE-371.git,2022-07-27 19:53:46+00:00,,0,CynthiaLi1018/EE-371,518593917,SystemVerilog,EE-371,31389,0,2022-07-27 20:01:03+00:00,[],
9646,https://github.com/JakobVokac/LNS_MAC_design.git,2022-08-08 21:33:25+00:00,,0,JakobVokac/LNS_MAC_design,522713597,SystemVerilog,LNS_MAC_design,3396,0,2022-08-08 21:34:53+00:00,[],https://api.github.com/licenses/mit
9647,https://github.com/josuah/fpga-wishbone.git,2022-08-09 10:24:53+00:00,,0,josuah/fpga-wishbone,522901257,SystemVerilog,fpga-wishbone,232,0,2022-10-09 16:25:21+00:00,[],
9648,https://github.com/SunicYosen/sram.git,2022-08-01 08:53:18+00:00,sram model,0,SunicYosen/sram,520034338,SystemVerilog,sram,1,0,2022-08-01 08:59:37+00:00,[],
9649,https://github.com/Atm06/Project_Electronic_Lock-using-verilog.git,2022-08-02 04:06:21+00:00,,0,Atm06/Project_Electronic_Lock-using-verilog,520346133,SystemVerilog,Project_Electronic_Lock-using-verilog,6,0,2022-08-02 04:08:05+00:00,[],https://api.github.com/licenses/mit
9650,https://github.com/Parretto/Scaler.git,2022-08-11 13:45:25+00:00,Video scaler,0,Parretto/Scaler,523739505,SystemVerilog,Scaler,45,0,2022-08-11 14:05:03+00:00,[],
9651,https://github.com/Nahla-Mustafa99/Multi-ModeCounter.git,2022-06-28 20:44:43+00:00,,0,Nahla-Mustafa99/Multi-ModeCounter,508448835,SystemVerilog,Multi-ModeCounter,8,0,2022-06-28 20:52:49+00:00,[],
9652,https://github.com/chen-ian-rong/HW-5.git,2022-06-26 19:10:20+00:00,,0,chen-ian-rong/HW-5,507662327,SystemVerilog,HW-5,2,0,2022-06-26 19:10:39+00:00,[],
9653,https://github.com/kmakmichael/ecpe_173.git,2022-07-01 23:34:39+00:00,,0,kmakmichael/ecpe_173,509613306,SystemVerilog,ecpe_173,53,0,2022-07-01 23:36:08+00:00,[],
9654,https://github.com/andrewb1999/calyx-axi-ex.git,2022-07-01 20:43:49+00:00,,0,andrewb1999/calyx-axi-ex,509584332,SystemVerilog,calyx-axi-ex,36,0,2022-07-01 20:44:47+00:00,[],
9655,https://github.com/alainlou/chipdev.git,2022-08-12 21:40:03+00:00,,0,alainlou/chipdev,524230988,SystemVerilog,chipdev,5,0,2022-08-12 21:53:33+00:00,[],
9656,https://github.com/gitoper/learngit.git,2022-08-05 04:01:59+00:00,,0,gitoper/learngit,521496980,SystemVerilog,learngit,5,0,2022-08-05 06:55:58+00:00,[],
9657,https://github.com/zjed/SystemVerilog_DMA_Controller_Testbench.git,2022-07-09 01:05:14+00:00,,0,zjed/SystemVerilog_DMA_Controller_Testbench,512062720,,SystemVerilog_DMA_Controller_Testbench,12,0,2022-06-27 05:56:50+00:00,[],
9658,https://github.com/alexc0888/fourToSixteenBinaryDecoder.git,2022-07-30 08:01:08+00:00,Four to Sixteen Binary Decoder in System Verilog at the Gate Level,0,alexc0888/fourToSixteenBinaryDecoder,519455807,SystemVerilog,fourToSixteenBinaryDecoder,19,0,2022-07-30 08:01:28+00:00,[],
9659,https://github.com/mohammedsaber10/async_fifo.git,2022-07-31 23:10:42+00:00,,0,mohammedsaber10/async_fifo,519906592,SystemVerilog,async_fifo,14356,0,2022-08-05 20:44:07+00:00,[],
9660,https://github.com/Bhavanasandrala/try.git,2022-08-06 04:34:04+00:00,,0,Bhavanasandrala/try,521846920,SystemVerilog,try,359,0,2022-09-16 07:28:10+00:00,[],
9661,https://github.com/varghese-rahul/SystemVerilog_DMA_Controller_Testbench.git,2022-06-23 23:17:57+00:00,,0,varghese-rahul/SystemVerilog_DMA_Controller_Testbench,506817915,SystemVerilog,SystemVerilog_DMA_Controller_Testbench,12,0,2023-12-01 05:37:25+00:00,[],
9662,https://github.com/supleed2/axiTest.git,2022-09-12 16:27:42+00:00,AXI4-Lite compatible Driver module for use with Verilator and other DPI-C compatible simulators.,0,supleed2/axiTest,535754748,SystemVerilog,axiTest,9,0,2024-01-19 04:25:37+00:00,"['axi4-lite', 'systemverilog', 'verilator', 'work-in-progress']",https://api.github.com/licenses/apache-2.0
9664,https://github.com/HieronZhang/project-v-open-beta-For-ECE4700J.git,2022-06-12 20:32:39+00:00,,2,HieronZhang/project-v-open-beta-For-ECE4700J,502721752,SystemVerilog,project-v-open-beta-For-ECE4700J,177,0,2022-06-13 00:00:21+00:00,[],
9665,https://github.com/felpsribeiro/acelerador-raiz-quadrada.git,2022-06-02 20:24:04+00:00,Aceleração de Algoritmo de Calculo de Raiz Quadrada,0,felpsribeiro/acelerador-raiz-quadrada,499279474,SystemVerilog,acelerador-raiz-quadrada,7,0,2022-06-02 20:37:54+00:00,[],
9666,https://github.com/geoneill12/OTTER_Multicycle_STM32_Programmer.git,2022-06-10 23:35:46+00:00,,0,geoneill12/OTTER_Multicycle_STM32_Programmer,502206443,SystemVerilog,OTTER_Multicycle_STM32_Programmer,4875,0,2022-06-10 23:41:41+00:00,[],
9667,https://github.com/ishmemon/EE-469-Computer-Architecture.git,2022-06-12 01:26:02+00:00,These are the projects I created for UW's EE 469 Course. The three labs consisted of implementing a pipelined ARM CPU using System Verilog.,0,ishmemon/EE-469-Computer-Architecture,502492288,SystemVerilog,EE-469-Computer-Architecture,39,0,2022-06-13 01:32:29+00:00,[],
9668,https://github.com/RehanEjaz/peripherals-fpga-design.git,2022-05-30 06:46:15+00:00,,0,RehanEjaz/peripherals-fpga-design,497821922,SystemVerilog,peripherals-fpga-design,70,0,2022-05-30 06:50:17+00:00,[],
9669,https://github.com/romerojhh/TheSnakeGame.git,2022-05-28 09:11:56+00:00,"This is a snake game that is implemented in SystemVerilog, simulated through DE1 board FPGA with GPIO as the led display",0,romerojhh/TheSnakeGame,497268485,SystemVerilog,TheSnakeGame,21,0,2022-05-28 09:16:26+00:00,[],https://api.github.com/licenses/mit
9670,https://github.com/roberto967/Projetos_Circuitos_Logicos_2.git,2022-05-26 18:42:31+00:00,,0,roberto967/Projetos_Circuitos_Logicos_2,496734673,SystemVerilog,Projetos_Circuitos_Logicos_2,13764,0,2022-05-26 19:14:20+00:00,[],https://api.github.com/licenses/mit
9671,https://github.com/ashleyjr/rv32i_peripheral.git,2022-05-22 22:42:56+00:00,,0,ashleyjr/rv32i_peripheral,495194216,SystemVerilog,rv32i_peripheral,71,0,2022-05-25 20:04:28+00:00,[],
9672,https://github.com/kenzhang82/git-submodule-demo.git,2022-05-29 10:14:32+00:00,,0,kenzhang82/git-submodule-demo,497554506,SystemVerilog,git-submodule-demo,1,0,2022-05-29 10:46:12+00:00,[],
9673,https://github.com/Richard-Voragen/Single-Cycle-ARM.git,2022-05-23 18:56:33+00:00,Code was done for an ECS 150 class and modified by me to add functionality.,0,Richard-Voragen/Single-Cycle-ARM,495537022,SystemVerilog,Single-Cycle-ARM,29,0,2022-05-23 19:00:16+00:00,[],
9674,https://github.com/boga-vidhath/8-bit-Unsigned-Division-Circuit.git,2022-06-07 16:37:00+00:00,,0,boga-vidhath/8-bit-Unsigned-Division-Circuit,500922621,SystemVerilog,8-bit-Unsigned-Division-Circuit,7,0,2022-06-08 16:14:13+00:00,[],
9675,https://github.com/ishfaqahmed29/uvm_xor_tb.git,2022-06-04 01:10:55+00:00,UVCs for an XOR RTL,0,ishfaqahmed29/uvm_xor_tb,499692436,SystemVerilog,uvm_xor_tb,4,0,2022-06-04 01:42:57+00:00,[],
9676,https://github.com/Faisalawan11/Project-1-AHB-LITE-.git,2022-07-19 08:32:14+00:00,,0,Faisalawan11/Project-1-AHB-LITE-,515500420,SystemVerilog,Project-1-AHB-LITE-,15,0,2022-07-19 08:32:58+00:00,[],
9677,https://github.com/Foh-k/AKARIN_RISCV.git,2022-08-07 05:52:03+00:00,akarin core design written by RISC-V,0,Foh-k/AKARIN_RISCV,522128039,SystemVerilog,AKARIN_RISCV,49,0,2022-09-09 12:04:51+00:00,[],
9678,https://github.com/ryan-trampe/verification_proj.git,2022-08-04 04:46:27+00:00,,0,ryan-trampe/verification_proj,521125798,SystemVerilog,verification_proj,123,0,2022-08-04 04:47:59+00:00,[],
9679,https://github.com/Bryukvina/Risc_v.git,2022-08-02 14:05:27+00:00,,0,Bryukvina/Risc_v,520523047,SystemVerilog,Risc_v,11,0,2022-08-02 14:09:17+00:00,[],
9680,https://github.com/PaulManriquez/MIPS_FULL_PROCESSOR_MONOCYCLE.git,2022-08-03 03:07:28+00:00,,0,PaulManriquez/MIPS_FULL_PROCESSOR_MONOCYCLE,520720360,SystemVerilog,MIPS_FULL_PROCESSOR_MONOCYCLE,252,0,2022-08-03 03:09:34+00:00,[],
9681,https://github.com/adnanashraf17501/Systemverilog-Bootcamp.git,2022-08-08 11:45:11+00:00,This a Systemverilog Bootcamp Repo,0,adnanashraf17501/Systemverilog-Bootcamp,522526220,SystemVerilog,Systemverilog-Bootcamp,11,0,2022-08-08 11:50:27+00:00,[],
9682,https://github.com/RazaSaleem/DV-Essentials-Trianing.git,2022-08-07 13:13:57+00:00,,0,RazaSaleem/DV-Essentials-Trianing,522217141,SystemVerilog,DV-Essentials-Trianing,63,0,2022-08-07 13:59:19+00:00,[],
9683,https://github.com/Howard-121/Computer_Architecture_I.git,2022-06-29 16:33:23+00:00,,0,Howard-121/Computer_Architecture_I,508769096,SystemVerilog,Computer_Architecture_I,3606,0,2022-06-29 16:47:23+00:00,[],
9684,https://github.com/vagrant313/HDLpractice.git,2022-07-02 09:34:34+00:00,Prasctice HDL to design efficient modules,0,vagrant313/HDLpractice,509713947,SystemVerilog,HDLpractice,12,0,2022-07-07 07:27:57+00:00,[],
9685,https://github.com/MicroGrit/grm.git,2022-07-02 01:43:58+00:00,Generate UVM Register Model,0,MicroGrit/grm,509631106,SystemVerilog,grm,28,0,2022-07-03 15:20:32+00:00,[],
9686,https://github.com/Me-RajatChaudhary/100DaysOfRTL.git,2022-08-12 13:25:58+00:00,,0,Me-RajatChaudhary/100DaysOfRTL,524097435,SystemVerilog,100DaysOfRTL,141,0,2022-08-18 18:05:08+00:00,[],
9687,https://github.com/visionvlsi/sv1.git,2022-06-14 13:01:57+00:00,,0,visionvlsi/sv1,503362154,SystemVerilog,sv1,39,0,2022-07-03 07:03:38+00:00,[],
9688,https://github.com/CurtisFod/DES.git,2022-06-21 01:55:52+00:00,"This is a working Data Encryption Standard that I designed In SystemVerilog. It include the DES, a DO file to run it in ModelSim, a test bench and a file of test vectors.",0,CurtisFod/DES,505656206,SystemVerilog,DES,13,0,2022-06-21 02:01:13+00:00,[],https://api.github.com/licenses/mit
9689,https://github.com/nkjenkin/arm-cpu-5stage.git,2022-08-02 21:28:04+00:00,,0,nkjenkin/arm-cpu-5stage,520654454,SystemVerilog,arm-cpu-5stage,22,0,2022-08-02 21:29:39+00:00,[],
9690,https://github.com/liangcha1980/liangcha1980.git,2022-07-26 04:05:20+00:00,Config files for my GitHub profile.,0,liangcha1980/liangcha1980,517907547,SystemVerilog,liangcha1980,4,0,2022-07-26 04:07:37+00:00,"['config', 'github-config']",
9691,https://github.com/mauer4/Personal-Project-Verilog-CLOCK.git,2022-07-08 06:53:22+00:00,"This project was a nice idea I had to build a digital logic clock on the DE1-SOC FPGA, while practicing System-verilog, Asynchronous design, and advanced debugging techniques",0,mauer4/Personal-Project-Verilog-CLOCK,511793998,SystemVerilog,Personal-Project-Verilog-CLOCK,36642,0,2022-07-20 21:57:48+00:00,"['digital-logic', 'fpga', 'hardware-design', 'modelsim', 'quartus', 'system-verilog', 'verilog', 'verilog-testbenches']",
9692,https://github.com/aastha0603/round_robin_arbiter.git,2022-07-14 08:31:15+00:00,,0,aastha0603/round_robin_arbiter,513820826,SystemVerilog,round_robin_arbiter,2,0,2022-07-14 08:37:24+00:00,[],
9693,https://github.com/krzpch/SDwUP_Projekt.git,2022-06-24 13:14:43+00:00,,0,krzpch/SDwUP_Projekt,507016237,SystemVerilog,SDwUP_Projekt,89,0,2022-06-24 15:09:30+00:00,[],
9694,https://github.com/ZeroMips/zeromips-logic.git,2022-07-11 20:07:46+00:00,,0,ZeroMips/zeromips-logic,512894525,SystemVerilog,zeromips-logic,8,0,2022-07-11 20:11:27+00:00,[],
9695,https://github.com/poorvi01w/Adder-cum-Subtractor.git,2022-07-14 14:43:34+00:00,,0,poorvi01w/Adder-cum-Subtractor,513938379,SystemVerilog,Adder-cum-Subtractor,1,0,2022-07-14 14:44:21+00:00,[],
9696,https://github.com/jayeshsuyal/whishbone-memory.git,2022-09-08 18:24:52+00:00,,0,jayeshsuyal/whishbone-memory,534342457,SystemVerilog,whishbone-memory,3,0,2022-09-08 18:33:40+00:00,[],
9697,https://github.com/prajwal0718/FIFO_Layered_TB.git,2022-09-08 17:32:00+00:00,,0,prajwal0718/FIFO_Layered_TB,534322668,SystemVerilog,FIFO_Layered_TB,7,0,2022-09-08 17:32:23+00:00,[],https://api.github.com/licenses/mit
9698,https://github.com/meghnamandava/CS534-Project.git,2022-09-11 15:30:18+00:00,,0,meghnamandava/CS534-Project,535340713,SystemVerilog,CS534-Project,30,0,2022-11-21 01:53:57+00:00,[],
9699,https://github.com/bguan2022/HDL_Templates.git,2022-09-17 22:57:08+00:00,,0,bguan2022/HDL_Templates,537949124,SystemVerilog,HDL_Templates,1,0,2022-09-17 23:15:22+00:00,[],
9700,https://github.com/lazhero/Lab3TallerDigitales.git,2022-08-24 22:03:43+00:00,"Laboratorio Numero 3, curso de diseño digital. ",0,lazhero/Lab3TallerDigitales,528608702,SystemVerilog,Lab3TallerDigitales,77,0,2022-08-24 23:49:36+00:00,[],
9701,https://github.com/rijegaro287/DigitalDesignLab.git,2022-08-24 20:18:07+00:00,,0,rijegaro287/DigitalDesignLab,528580965,SystemVerilog,DigitalDesignLab,19288,0,2023-01-17 02:14:57+00:00,[],
9702,https://github.com/RuihongY/verilog_sample_ex.git,2022-08-27 08:59:50+00:00,,0,RuihongY/verilog_sample_ex,529533437,SystemVerilog,verilog_sample_ex,1,0,2022-08-27 09:01:18+00:00,[],
9703,https://github.com/clarksyd18/ECE551-Project.git,2022-09-05 20:01:24+00:00,,0,clarksyd18/ECE551-Project,533043120,SystemVerilog,ECE551-Project,3848,0,2022-09-05 20:09:37+00:00,[],https://api.github.com/licenses/mit
9704,https://github.com/kiheon1116/Compressor.git,2022-09-07 06:37:32+00:00,ready random signal complete,0,kiheon1116/Compressor,533638774,SystemVerilog,Compressor,5663,0,2022-09-07 06:39:33+00:00,[],
9705,https://github.com/bienkuba/Projekt_cvlsi.git,2022-08-22 18:18:08+00:00,,1,bienkuba/Projekt_cvlsi,527683023,SystemVerilog,Projekt_cvlsi,91,0,2022-08-22 18:18:42+00:00,[],
9706,https://github.com/audiocx/labs-inf245.git,2022-09-22 16:45:23+00:00,Laboratorios de la asignatura Arquitectura de computadores,0,audiocx/labs-inf245,540077597,SystemVerilog,labs-inf245,3112,0,2022-09-22 16:45:32+00:00,[],
9707,https://github.com/DylanKennyBoland/mem_block_APB_IF.git,2022-09-03 16:45:01+00:00,,0,DylanKennyBoland/mem_block_APB_IF,532318156,SystemVerilog,mem_block_APB_IF,304,0,2022-09-03 16:51:27+00:00,[],
9708,https://github.com/piyushagrawal4578/control-flow.git,2022-09-02 17:23:39+00:00,,0,piyushagrawal4578/control-flow,532018114,SystemVerilog,control-flow,134,0,2022-09-05 17:34:50+00:00,[],
9709,https://github.com/leyawels/verilog.git,2022-09-16 09:15:03+00:00,practice codes,0,leyawels/verilog,537385909,SystemVerilog,verilog,2,0,2022-09-16 09:17:03+00:00,[],
9710,https://github.com/allisonseigler/ece554_miniproject5.git,2022-09-22 18:10:07+00:00,,1,allisonseigler/ece554_miniproject5,540110600,SystemVerilog,ece554_miniproject5,2703,0,2022-09-27 20:29:38+00:00,[],
9711,https://github.com/JustinCWeiler/Verilog-Playground.git,2022-05-20 07:50:09+00:00,,0,JustinCWeiler/Verilog-Playground,494371241,SystemVerilog,Verilog-Playground,38,0,2022-05-31 07:25:55+00:00,[],https://api.github.com/licenses/gpl-3.0
9712,https://github.com/hthanh2712/MasterMind-GuessingGame.git,2022-05-13 03:46:09+00:00,Final academic project using HDL,0,hthanh2712/MasterMind-GuessingGame,491747721,SystemVerilog,MasterMind-GuessingGame,9,0,2023-01-28 00:50:31+00:00,[],
9713,https://github.com/svhum/ltc2308-axi.git,2022-05-13 03:02:14+00:00,,0,svhum/ltc2308-axi,491738871,SystemVerilog,ltc2308-axi,2908,0,2022-05-13 03:17:34+00:00,[],
9714,https://github.com/himanshu5-prog/verif-env-beta-arch.git,2022-05-25 05:29:09+00:00,Verification environment for beta architecture processor,0,himanshu5-prog/verif-env-beta-arch,496094550,SystemVerilog,verif-env-beta-arch,10,0,2022-05-25 05:48:23+00:00,[],
9715,https://github.com/BuminK1907/RISC-V-Tabanli-Islemci-Tasarimi.git,2022-05-18 11:23:08+00:00,,0,BuminK1907/RISC-V-Tabanli-Islemci-Tasarimi,493632231,SystemVerilog,RISC-V-Tabanli-Islemci-Tasarimi,1792,0,2022-05-18 11:24:30+00:00,[],
9716,https://github.com/denSmashh/single-cycle-mips-cpu.git,2022-07-10 09:17:02+00:00,"Single cycle mips cpu from book H&H ""Digital design and computer architecture""",0,denSmashh/single-cycle-mips-cpu,512392098,SystemVerilog,single-cycle-mips-cpu,8,0,2022-07-10 09:19:04+00:00,[],
9717,https://github.com/YehorKrapovnytskyi/envelope_approximation.git,2022-07-09 19:26:52+00:00,Envelope approximation module for SDR projects,0,YehorKrapovnytskyi/envelope_approximation,512268885,SystemVerilog,envelope_approximation,37661,0,2022-07-09 22:26:20+00:00,[],https://api.github.com/licenses/mit
9718,https://github.com/dkim1235/EmbeddedJourney.git,2022-06-22 21:17:50+00:00,"This is my Embedded systems Digital Design Journey. After taking machine learning classes, and learning software engineering, I've realized that my heart was always in hardware. Though hardware will always have pieces of ML/SWE, it is a different skillset that bridges the real world and the Meta. ",0,dkim1235/EmbeddedJourney,506408657,SystemVerilog,EmbeddedJourney,1690,0,2022-06-23 20:12:35+00:00,[],
9719,https://github.com/torochashu/jtag-base.git,2022-06-24 20:01:22+00:00,Control and Status Register (CSR) subsystem accessible through JTAG,1,torochashu/jtag-base,507130227,SystemVerilog,jtag-base,17,0,2022-06-24 20:58:16+00:00,"['fpga', 'jtag', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
9720,https://github.com/Khaled-Tarek-Abdelfattah/Multimode_Counter.git,2022-07-31 17:16:53+00:00,system Verilog multi mode counter with it's Testbench,0,Khaled-Tarek-Abdelfattah/Multimode_Counter,519840178,SystemVerilog,Multimode_Counter,2,0,2022-07-31 17:38:46+00:00,[],
9721,https://github.com/hxfabc2012/uvm_gen-1.git,2022-08-06 02:06:09+00:00,UVM Generator+Template Suite - Moore.io Core Collection,0,hxfabc2012/uvm_gen-1,521822897,,uvm_gen-1,2336,0,2022-08-03 18:46:15+00:00,[],
9722,https://github.com/FarukTK/Project-SHA-256-Blockchain-Bitcoin-Hashing.git,2022-08-07 04:12:36+00:00,Private Project,0,FarukTK/Project-SHA-256-Blockchain-Bitcoin-Hashing,522113207,SystemVerilog,Project-SHA-256-Blockchain-Bitcoin-Hashing,969,0,2022-12-10 08:23:16+00:00,[],
9723,https://github.com/avishekchoudhary/Hex_keypad.git,2022-07-18 21:41:11+00:00,,0,avishekchoudhary/Hex_keypad,515349489,SystemVerilog,Hex_keypad,49,0,2022-07-18 21:51:12+00:00,[],https://api.github.com/licenses/mit
9724,https://github.com/sofiwiwiwi/2022_01-Arqui.git,2022-07-29 00:35:05+00:00,,1,sofiwiwiwi/2022_01-Arqui,519032705,SystemVerilog,2022_01-Arqui,7407,0,2022-07-29 00:39:36+00:00,[],
9725,https://github.com/qasimnaeem364/demos.git,2022-07-26 04:50:51+00:00,it includes systemVerilog code practices.,0,qasimnaeem364/demos,517916931,SystemVerilog,demos,68,0,2022-07-26 04:55:17+00:00,[],https://api.github.com/licenses/gpl-3.0
9726,https://github.com/Archit286/UART.git,2022-07-28 17:26:09+00:00,Verilog Design for transmitter and receiver for UART communication,0,Archit286/UART,518936393,SystemVerilog,UART,10,0,2023-07-18 16:45:40+00:00,[],
9727,https://github.com/GPericone/Simple-Asymmetric-Encryption-Algorithm.git,2022-08-17 15:54:29+00:00,"Hardware implementation of an asymmetric encryption algorithm in SystemVerilog, with analysis, synthesis and fitting performed on Cyclon V FPGA.",0,GPericone/Simple-Asymmetric-Encryption-Algorithm,525861574,SystemVerilog,Simple-Asymmetric-Encryption-Algorithm,7853,0,2023-01-12 17:43:24+00:00,[],
9728,https://github.com/NuwanUdara/System-Verilog-examples.git,2022-08-03 18:04:34+00:00,Sample Verilog codes.,0,NuwanUdara/System-Verilog-examples,520984046,SystemVerilog,System-Verilog-examples,4,0,2022-08-03 18:10:10+00:00,[],
9729,https://github.com/PaulManriquez/Register_Transfer.git,2022-08-03 03:01:05+00:00,,0,PaulManriquez/Register_Transfer,520719031,SystemVerilog,Register_Transfer,78,0,2022-08-03 03:03:09+00:00,[],
9730,https://github.com/padung99/Metrotek_LAB3.git,2022-08-02 10:35:01+00:00,,0,padung99/Metrotek_LAB3,520453790,SystemVerilog,Metrotek_LAB3,383,0,2022-08-02 10:37:01+00:00,[],
9731,https://github.com/chen-ian-rong/HW-4.git,2022-06-26 19:09:00+00:00,,0,chen-ian-rong/HW-4,507662065,SystemVerilog,HW-4,1,0,2022-06-26 19:09:29+00:00,[],
9732,https://github.com/taylorkcantalice/Projetos_Quartus.git,2022-06-28 14:57:00+00:00,Exercícios resolvidos durante a disciplina de Circuitos Lógicos II 2021.2,0,taylorkcantalice/Projetos_Quartus,508344227,SystemVerilog,Projetos_Quartus,66281,0,2022-06-28 15:02:14+00:00,[],
9733,https://github.com/ArshMarsh/RISC.git,2022-05-23 15:11:52+00:00,,0,ArshMarsh/RISC,495462179,SystemVerilog,RISC,13,0,2022-05-23 15:18:31+00:00,[],
9734,https://github.com/YassAje/cva6-softcore-contest-Riscetmorty-unistra.git,2022-05-24 19:59:34+00:00,,0,YassAje/cva6-softcore-contest-Riscetmorty-unistra,495970194,SystemVerilog,cva6-softcore-contest-Riscetmorty-unistra,20465,0,2022-05-24 21:09:35+00:00,[],
9735,https://github.com/Darcywantloli/PRPG.git,2022-06-11 11:25:39+00:00,,0,Darcywantloli/PRPG,502328626,SystemVerilog,PRPG,3,0,2022-06-11 11:26:28+00:00,[],
9736,https://github.com/TatshSiow/HW5.git,2022-06-11 04:56:49+00:00,,0,TatshSiow/HW5,502253561,SystemVerilog,HW5,2,0,2022-06-11 05:02:16+00:00,[],
9737,https://github.com/nettalee19/Round-Robin-Arbiter.git,2022-06-23 11:27:12+00:00,,0,nettalee19/Round-Robin-Arbiter,506611926,SystemVerilog,Round-Robin-Arbiter,17,0,2022-06-23 11:27:19+00:00,[],
9738,https://github.com/sohanchatterjee06/apbProtocol.git,2022-07-13 16:11:02+00:00,,0,sohanchatterjee06/apbProtocol,513588841,SystemVerilog,apbProtocol,26,0,2022-07-13 17:56:00+00:00,[],
9739,https://github.com/GhulamMustafa9/Cache_Controller_Randomize-transactions-testbench.git,2022-05-19 13:18:18+00:00,DirectMapped Cache Controller,0,GhulamMustafa9/Cache_Controller_Randomize-transactions-testbench,494079413,SystemVerilog,Cache_Controller_Randomize-transactions-testbench,686,0,2022-05-19 21:07:25+00:00,[],
9740,https://github.com/acmpesuecc/aes-128-sysverilog-riscv.git,2022-06-08 05:06:22+00:00,AES-128 block written in SystemVerilog,8,acmpesuecc/aes-128-sysverilog-riscv,501107480,SystemVerilog,aes-128-sysverilog-riscv,8,0,2023-10-13 13:18:49+00:00,['hacktoberfest'],https://api.github.com/licenses/mit
9741,https://github.com/HSIAOYEUCHERN/HW5.git,2022-06-13 03:12:56+00:00,,0,HSIAOYEUCHERN/HW5,502789971,SystemVerilog,HW5,3,0,2022-06-13 03:17:37+00:00,[],
9742,https://github.com/KuiHouLiao/HW5.git,2022-06-13 01:56:06+00:00,,0,KuiHouLiao/HW5,502774384,SystemVerilog,HW5,2,0,2022-06-13 01:57:36+00:00,[],
9743,https://github.com/obogevik/approximate_multiplication_for_DNN.git,2022-06-15 21:07:17+00:00,"My work on approximate multiplication, created as part of my master's thesis.",0,obogevik/approximate_multiplication_for_DNN,503922398,SystemVerilog,approximate_multiplication_for_DNN,15,0,2022-06-29 21:00:56+00:00,[],https://api.github.com/licenses/mit
9744,https://github.com/gostbit/mianshi_project.git,2022-06-03 12:50:22+00:00,,0,gostbit/mianshi_project,499509891,SystemVerilog,mianshi_project,106,0,2022-06-03 12:57:25+00:00,[],
9745,https://github.com/seongjae20/Security_System.git,2022-06-07 03:57:41+00:00,,0,seongjae20/Security_System,500682365,SystemVerilog,Security_System,404,0,2022-06-07 03:58:16+00:00,[],
9746,https://github.com/31415pi/PSU_ECE586_FinalProject.git,2022-08-13 01:41:26+00:00,,0,31415pi/PSU_ECE586_FinalProject,524270593,SystemVerilog,PSU_ECE586_FinalProject,1063,0,2022-08-13 01:46:12+00:00,[],
9747,https://github.com/NoahHanks/BYU_ECEN323.git,2022-09-20 21:43:36+00:00,BYU ECEN 323,0,NoahHanks/BYU_ECEN323,539202022,SystemVerilog,BYU_ECEN323,43660,0,2022-09-20 21:46:10+00:00,[],
9748,https://github.com/VuGal/arithmetic_codec.git,2022-09-21 00:44:59+00:00,,0,VuGal/arithmetic_codec,539244918,SystemVerilog,arithmetic_codec,3504,0,2022-09-22 00:25:38+00:00,[],
9749,https://github.com/tmct-web/basic_uart_tmct.git,2022-09-19 03:34:39+00:00,Basic UART interface module written in System Verilog (Real FPGA proven),0,tmct-web/basic_uart_tmct,538320752,SystemVerilog,basic_uart_tmct,9,0,2022-10-08 13:29:29+00:00,"['basic-uart', 'fpga', 'simple-uart', 'verilog']",https://api.github.com/licenses/bsd-3-clause
9750,https://github.com/07yhxiaxy/ece554_miniprojects.git,2022-09-21 03:28:30+00:00,,0,07yhxiaxy/ece554_miniprojects,539287969,SystemVerilog,ece554_miniprojects,2294,0,2022-09-21 04:15:49+00:00,[],
9751,https://github.com/recepgemalmaz/BLM-202-RISC-V-islemci-main.git,2022-09-03 13:08:38+00:00,,0,recepgemalmaz/BLM-202-RISC-V-islemci-main,532263293,SystemVerilog,BLM-202-RISC-V-islemci-main,3756,0,2022-09-03 13:31:27+00:00,[],
9752,https://github.com/minecraftdixit/protocols.git,2022-09-02 12:36:13+00:00,,0,minecraftdixit/protocols,531919212,SystemVerilog,protocols,16,0,2022-09-02 12:37:22+00:00,[],
9753,https://github.com/nithinbhargav007/SystemVerilog.git,2022-08-15 06:26:35+00:00,,0,nithinbhargav007/SystemVerilog,524877974,SystemVerilog,SystemVerilog,53,0,2022-08-15 06:26:41+00:00,[],
9754,https://github.com/astuaTEC/sastua_computer_architecture_1_2022.git,2022-08-19 21:59:07+00:00,Repository for the Computer Architecture 1 course.,0,astuaTEC/sastua_computer_architecture_1_2022,526762298,SystemVerilog,sastua_computer_architecture_1_2022,466471,0,2023-06-09 02:22:15+00:00,[],
9755,https://github.com/parashur21/Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier..git,2022-08-25 17:16:13+00:00,,0,parashur21/Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier.,528948128,SystemVerilog,Design-of-a-Data-path-and-its-respective-Controller-for-a-16-bit-Multiplier.,35,0,2022-08-25 18:10:40+00:00,[],
9756,https://github.com/ikar298/Memory-Controller.git,2022-08-25 07:46:21+00:00,Design of memory controller : Verilog HDL and testbench,0,ikar298/Memory-Controller,528747320,SystemVerilog,Memory-Controller,77,0,2022-08-25 17:32:41+00:00,[],
9757,https://github.com/shwetamutalikdesai/ADLV.git,2022-09-01 11:12:15+00:00,,0,shwetamutalikdesai/ADLV,531483262,SystemVerilog,ADLV,37,0,2022-09-01 11:18:42+00:00,[],
9758,https://github.com/Sam-0403/2022Fall_DCLab.git,2022-09-13 12:23:12+00:00,,0,Sam-0403/2022Fall_DCLab,536113408,SystemVerilog,2022Fall_DCLab,475,0,2022-09-13 13:20:17+00:00,[],
9759,https://github.com/utkarshsarbahi1998/Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD1.git,2022-08-15 16:05:53+00:00,Intel Quartus Prime ModelSim SystemVerilog Text Files ADD1,0,utkarshsarbahi1998/Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD1,525052194,SystemVerilog,Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD1,23,0,2022-08-15 16:15:42+00:00,[],
9760,https://github.com/utkarshsarbahi1998/Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD2.git,2022-08-15 17:32:26+00:00,Intel Quartus Prime ModelSim SystemVerilog Text Files ADD2,0,utkarshsarbahi1998/Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD2,525078877,SystemVerilog,Intel_Quartus_Prime_ModelSim_SystemVerilog_Text_Files_ADD2,32,0,2022-08-15 18:08:55+00:00,[],
9761,https://github.com/masonadams25/Booth_R4_Encoding_Module.git,2022-08-24 02:56:01+00:00,,0,masonadams25/Booth_R4_Encoding_Module,528243201,SystemVerilog,Booth_R4_Encoding_Module,29,0,2022-08-24 02:57:05+00:00,[],
9762,https://github.com/riser44/AXI.git,2022-08-24 20:48:59+00:00,,0,riser44/AXI,528589701,SystemVerilog,AXI,4980,0,2022-08-24 20:51:35+00:00,[],
9763,https://github.com/BinaryLust/pipelined-fpu.git,2022-09-24 08:17:33+00:00,,0,BinaryLust/pipelined-fpu,540757820,SystemVerilog,pipelined-fpu,113,0,2022-09-24 08:17:41+00:00,[],
9764,https://github.com/1eethink/KU-Computer_Architecture.git,2022-07-08 07:28:01+00:00,Korea University / Computer Architecture,0,1eethink/KU-Computer_Architecture,511803784,SystemVerilog,KU-Computer_Architecture,929,0,2022-07-08 07:29:00+00:00,[],
9765,https://github.com/Xuchaku/scr1.git,2022-06-09 11:28:55+00:00,,0,Xuchaku/scr1,501624536,SystemVerilog,scr1,5029,0,2022-06-09 11:31:15+00:00,[],
9766,https://github.com/Dileon44/Mechatronic-module.git,2022-06-14 13:34:47+00:00,,0,Dileon44/Mechatronic-module,503374162,SystemVerilog,Mechatronic-module,33,0,2022-06-14 13:58:00+00:00,[],
9767,https://github.com/yanlin0526/HW5.git,2022-05-16 03:09:02+00:00,,0,yanlin0526/HW5,492667249,SystemVerilog,HW5,1,0,2022-05-16 03:26:20+00:00,[],
9768,https://github.com/Cagin-karatas/CS223-Single-Cycle-Processor.git,2022-05-12 14:52:12+00:00,,0,Cagin-karatas/CS223-Single-Cycle-Processor,491556841,SystemVerilog,CS223-Single-Cycle-Processor,6,0,2022-05-12 14:53:29+00:00,[],
9769,https://github.com/GhulamMustafa9/Cache_Controller_Environment-test-topTestbench.git,2022-05-19 17:44:04+00:00,DirectMapped Cache Controller,0,GhulamMustafa9/Cache_Controller_Environment-test-topTestbench,494172833,SystemVerilog,Cache_Controller_Environment-test-topTestbench,2236,0,2022-05-23 20:17:38+00:00,[],
9770,https://github.com/MSaqi/System_verilog_coding.git,2022-06-28 13:40:27+00:00,SYSTEM_verilog simple coding styles with testbenches..,0,MSaqi/System_verilog_coding,508315145,SystemVerilog,System_verilog_coding,826,0,2022-06-28 13:50:08+00:00,[],
9771,https://github.com/Johann-Schmid/BCDcounter.git,2022-06-23 15:23:01+00:00,BCD forward and backward counter under Vivado,0,Johann-Schmid/BCDcounter,506692350,SystemVerilog,BCDcounter,98,0,2022-06-23 15:23:46+00:00,[],
9772,https://github.com/kevinpinto98/100_days_of_RTL.git,2022-06-21 15:47:39+00:00,100 days RTL challenge,0,kevinpinto98/100_days_of_RTL,505907579,SystemVerilog,100_days_of_RTL,74,0,2022-12-06 17:38:05+00:00,[],
9773,https://github.com/albingomes/async_fifo.git,2022-06-27 04:14:21+00:00,Asynchronous FIFO (CDC FIFO),0,albingomes/async_fifo,507759203,SystemVerilog,async_fifo,5,0,2022-06-27 04:45:52+00:00,[],
9774,https://github.com/AmanPrakash09/Baccarat-Gambling-Game---Simple-Datapaths-and-FSM.git,2022-07-05 21:13:59+00:00,Two-player gambling game that relies on random cards drawn from a deck. Design consists of simple datapaths and an FSM to control the game. The cards drawn and score of each player are displayed on a DE1-SoC,0,AmanPrakash09/Baccarat-Gambling-Game---Simple-Datapaths-and-FSM,510895817,SystemVerilog,Baccarat-Gambling-Game---Simple-Datapaths-and-FSM,2713,0,2022-07-05 21:16:26+00:00,[],
9775,https://github.com/JJY-99/uvma_apb.git,2022-07-21 02:35:45+00:00,APB UVM Agent - Moore.io AMBA® IP Suite,0,JJY-99/uvma_apb,516199198,,uvma_apb,14861,0,2022-05-30 20:11:09+00:00,[],
9776,https://github.com/AhmedMaagdy/AhmedMaagdy.git,2022-07-21 10:15:31+00:00,Config files for my GitHub profile.,0,AhmedMaagdy/AhmedMaagdy,516321387,SystemVerilog,AhmedMaagdy,37,0,2022-07-21 18:20:15+00:00,"['config', 'github-config']",
9777,https://github.com/merledu/Rev-SoC-FPGA.git,2022-07-29 16:15:01+00:00,FPGA model of SweRV-EL2 based System on chip,1,merledu/Rev-SoC-FPGA,519276638,SystemVerilog,Rev-SoC-FPGA,1126,0,2022-07-29 16:22:52+00:00,[],
9778,https://github.com/lm-chinhtran/uvm_training.git,2022-07-21 02:58:35+00:00,,0,lm-chinhtran/uvm_training,516204278,SystemVerilog,uvm_training,115,0,2022-07-21 03:00:25+00:00,[],
9779,https://github.com/anushagh/ALU-4b.git,2022-07-21 14:36:11+00:00,4 bit ALU with randomized inputs,0,anushagh/ALU-4b,516407392,SystemVerilog,ALU-4b,6,0,2022-07-28 10:45:17+00:00,[],https://api.github.com/licenses/bsd-3-clause
9780,https://github.com/Atm06/Project_Vending-Machine_verilog.git,2022-08-02 04:11:24+00:00,,0,Atm06/Project_Vending-Machine_verilog,520347198,SystemVerilog,Project_Vending-Machine_verilog,4,0,2022-08-02 04:12:31+00:00,[],https://api.github.com/licenses/mit
9781,https://github.com/PaulManriquez/MIPS_FULL-_PROCESSOR_MULTICYCLE.git,2022-08-03 03:29:55+00:00,,0,PaulManriquez/MIPS_FULL-_PROCESSOR_MULTICYCLE,520725160,SystemVerilog,MIPS_FULL-_PROCESSOR_MULTICYCLE,216,0,2022-08-03 03:33:53+00:00,[],
9782,https://github.com/sarawiRTLDV/SystemVerilog-for-Verification.git,2022-07-16 15:45:55+00:00,"VLSI Industry is divided into two popular branches viz. Design of System and Verification of the System. Verilog, VHDL remain the popular choices for most Design Engineers working in this domain. Although, preliminary functional verification can be carried out with Hardware Description Language. Hardware Description language possesses limited capabilities to perform code coverage analysis, Corner cases testing, etc and in fact sometimes it becomes impossible to perform this check with HDL's.   Hence Specialized Verification languages such as SystemVerilog start to become the primary choice for the verification of the design.  The SystemVerilog Object-oriented nature allows features such as Inheritance, Polymorphism, etc. adds capabilities of finding critical bugs inside design that HDL simply cannot find.   Verification is certainly more tricky and interesting as compared to designing a digital system and hence it consists of a large number of OOP's Constructs as opposed to Verilog. SystemVerilog is one of the most popular choices among Verification Engineer for Digital System Verification. This Journey will take you to the most common techniques used to write SystemVerilog Testbench and perform Verification of the Chips. The course is structured so that anyone who wishes to learn about System Verilog will able to understand everything. Finally, Practice is the key to become an expert.",0,sarawiRTLDV/SystemVerilog-for-Verification,514619681,SystemVerilog,SystemVerilog-for-Verification,66,0,2022-07-16 15:49:10+00:00,[],
9783,https://github.com/Pathfinder-86/IC_design.git,2022-06-22 15:08:20+00:00,Recording Digital Circuits and Systems HW and Lab,0,Pathfinder-86/IC_design,506297088,SystemVerilog,IC_design,144,0,2022-06-22 15:37:24+00:00,[],
9784,https://github.com/nebhrajani-a/sfifo.git,2022-07-13 13:04:04+00:00,Simple synchronous FIFO in SystemVerilog.,0,nebhrajani-a/sfifo,513524161,SystemVerilog,sfifo,496,0,2022-09-27 07:17:53+00:00,[],
9785,https://github.com/jefferyxu1/RV32I-Core.git,2022-07-22 08:17:32+00:00,Verilog for my EE 477 Group Project.,0,jefferyxu1/RV32I-Core,516667849,SystemVerilog,RV32I-Core,20,0,2022-07-22 08:22:23+00:00,[],
9786,https://github.com/nefelimet/SystemVerilog-project.git,2022-07-28 00:08:21+00:00,"Project for the class ""Digital Low-level Hardware Systems II"" in SystemVerilog.",0,nefelimet/SystemVerilog-project,518645945,SystemVerilog,SystemVerilog-project,42,0,2022-10-09 18:56:30+00:00,"['synchronous-fifos', 'systemverilog', 'testbench', 'up-down-counter']",
9787,https://github.com/nguyenvietthi/sync_fifo.git,2022-07-28 03:28:09+00:00,,0,nguyenvietthi/sync_fifo,518687214,SystemVerilog,sync_fifo,4,0,2022-08-09 04:46:00+00:00,[],
9788,https://github.com/MANOJKUMAR-CM/Parallel_Prefix_Adders.git,2022-07-15 10:04:21+00:00,This Repository contains System verilog Code for 4 bit Kogge stone  and Brent Kung Adder .,0,MANOJKUMAR-CM/Parallel_Prefix_Adders,514221459,SystemVerilog,Parallel_Prefix_Adders,468,0,2022-07-15 10:17:31+00:00,[],
9789,https://github.com/01FE21MVE003/ADLV.git,2022-09-01 03:10:37+00:00,,0,01FE21MVE003/ADLV,531344284,SystemVerilog,ADLV,128,0,2022-09-01 03:18:16+00:00,[],
9790,https://github.com/IEncinas10/PA.git,2022-09-18 16:04:44+00:00,MIRI - Processor Architecture,0,IEncinas10/PA,538163310,SystemVerilog,PA,16543,0,2023-02-16 20:11:35+00:00,[],
9791,https://github.com/aditya2812singh/sv_uvm_work.git,2022-08-14 17:15:57+00:00,,0,aditya2812singh/sv_uvm_work,524733822,SystemVerilog,sv_uvm_work,3,0,2022-08-14 17:34:39+00:00,[],
9792,https://github.com/Sireeshakuruba2/RTL_Design_Practice.git,2022-08-08 18:35:59+00:00,Rtl_codes,0,Sireeshakuruba2/RTL_Design_Practice,522665521,SystemVerilog,RTL_Design_Practice,28,0,2023-10-10 15:18:03+00:00,"['systemverilog', 'verilog']",
9793,https://github.com/ZexuanLi0318/UW-EE-371.git,2022-08-12 22:03:19+00:00,Lab Projects for UW EE 371 class,0,ZexuanLi0318/UW-EE-371,524235546,SystemVerilog,UW-EE-371,1078,0,2022-08-12 22:18:24+00:00,[],
9794,https://github.com/RotemShezaf/SIM1.git,2022-08-20 07:25:59+00:00,,0,RotemShezaf/SIM1,526856539,SystemVerilog,SIM1,204,0,2022-08-20 07:45:31+00:00,[],
9795,https://github.com/acoskuner500/CSCE616_Team24.git,2022-09-03 21:00:56+00:00,"Fall 2022, CSCE 616 Team 24 Lab Repository",0,acoskuner500/CSCE616_Team24,532373044,SystemVerilog,CSCE616_Team24,49456,0,2023-06-12 04:56:24+00:00,[],
9796,https://github.com/Anshuman0029/5.1.git,2022-08-28 13:43:23+00:00,,0,Anshuman0029/5.1,529874200,SystemVerilog,5.1,1,0,2022-08-28 13:48:13+00:00,[],
9797,https://github.com/lucasooliveiranh/2022-2-Arquitetura-Sistemas-Digitais.git,2022-09-20 18:36:18+00:00,Arquitetura de Sistemas Digitais,0,lucasooliveiranh/2022-2-Arquitetura-Sistemas-Digitais,539138797,SystemVerilog,2022-2-Arquitetura-Sistemas-Digitais,98,0,2022-12-13 12:42:24+00:00,[],
9798,https://github.com/weichungchen/sv_test.git,2022-09-22 07:40:56+00:00,,0,weichungchen/sv_test,539858332,SystemVerilog,sv_test,15,0,2022-09-22 08:50:15+00:00,[],
9799,https://github.com/timelightup/arbiter-interface.git,2022-09-24 07:07:18+00:00,,0,timelightup/arbiter-interface,540740903,SystemVerilog,arbiter-interface,1,0,2022-09-24 07:08:34+00:00,[],
9800,https://github.com/denSmashh/pipeline-mips-cpu.git,2022-09-06 19:01:53+00:00,"Pipeline mips cpu from book H&H ""Digital design and computer architecture""",0,denSmashh/pipeline-mips-cpu,533465110,SystemVerilog,pipeline-mips-cpu,116,0,2022-09-06 19:07:52+00:00,[],
9801,https://github.com/nulface/KRV32I.git,2022-09-12 08:49:58+00:00,my basic RV32I core,0,nulface/KRV32I,535581525,SystemVerilog,KRV32I,34,0,2022-09-21 01:52:11+00:00,[],
9802,https://github.com/varghese-rahul/UVM_AHB_UVC_Testbench.git,2022-06-23 23:22:10+00:00,,0,varghese-rahul/UVM_AHB_UVC_Testbench,506818613,SystemVerilog,UVM_AHB_UVC_Testbench,15,0,2023-12-01 05:37:10+00:00,[],
9803,https://github.com/marc-off/3-Stage-Caesar-Cypher.git,2022-07-03 15:48:54+00:00,,0,marc-off/3-Stage-Caesar-Cypher,510067009,SystemVerilog,3-Stage-Caesar-Cypher,9346,0,2024-04-13 15:29:09+00:00,[],
9804,https://github.com/djtayag/ISA_Project.git,2022-05-24 01:44:42+00:00,ISA Project for CSE 141L - Spring 2022,0,djtayag/ISA_Project,495631974,SystemVerilog,ISA_Project,2389,0,2024-02-27 03:22:49+00:00,[],
9805,https://github.com/agithubber777/dv.git,2022-08-23 08:44:52+00:00,Design Verification,0,agithubber777/dv,527904745,SystemVerilog,dv,19,0,2022-10-14 06:05:02+00:00,[],
9806,https://github.com/fengyefengye/circuit_lab.git,2022-05-13 02:41:51+00:00,数字逻辑与数字系统课程实验归档,0,fengyefengye/circuit_lab,491734550,,circuit_lab,97,0,2023-05-15 14:14:45+00:00,[],
9807,https://github.com/yunchiaaa/Homework5.git,2022-05-16 03:53:15+00:00,,0,yunchiaaa/Homework5,492675931,SystemVerilog,Homework5,1,0,2022-05-16 03:53:48+00:00,[],
9808,https://github.com/Richard-Voragen/ALU-Design.git,2022-05-16 01:55:06+00:00,This ALU was designed for ModelSim,0,Richard-Voragen/ALU-Design,492652752,SystemVerilog,ALU-Design,3,0,2022-05-16 02:37:03+00:00,[],
9809,https://github.com/SokAnn/project-3.git,2022-08-05 13:48:42+00:00,,0,SokAnn/project-3,521655192,SystemVerilog,project-3,10,0,2022-08-10 12:11:47+00:00,[],
9810,https://github.com/padung99/Lab_handshake_sync.git,2022-07-28 09:28:50+00:00,,0,padung99/Lab_handshake_sync,518782342,SystemVerilog,Lab_handshake_sync,9,0,2022-07-28 09:32:58+00:00,[],
9811,https://github.com/EgemenBaykan/FIR_Filter_Core.git,2022-08-01 08:56:04+00:00,Reconfigurable FIR Filter Core,0,EgemenBaykan/FIR_Filter_Core,520035180,SystemVerilog,FIR_Filter_Core,80,0,2022-08-01 13:23:36+00:00,[],
9812,https://github.com/BrunoHL4/INAOE-Pre-Si-Verification.git,2022-07-20 17:45:15+00:00,Códigos elaborados durante el curso de Verificación Pre-Silicio impartido por el INAOE,0,BrunoHL4/INAOE-Pre-Si-Verification,516080332,SystemVerilog,INAOE-Pre-Si-Verification,8018,0,2022-07-20 17:46:49+00:00,[],
9813,https://github.com/tpacini/simplified-RC4.git,2022-07-01 17:25:05+00:00,"Final project of the course ""Hardware and Embedded Security"", a.y. 2021/22",0,tpacini/simplified-RC4,509536713,SystemVerilog,simplified-RC4,950,0,2022-07-22 19:40:44+00:00,[],
9814,https://github.com/nagavar2/uvm_try_1.git,2022-07-13 22:58:20+00:00,,0,nagavar2/uvm_try_1,513693899,SystemVerilog,uvm_try_1,39,0,2022-07-13 23:01:56+00:00,[],
9815,https://github.com/MSaqi/AHB_lite_protocol.git,2022-07-18 07:29:24+00:00,Project_1,0,MSaqi/AHB_lite_protocol,515078688,SystemVerilog,AHB_lite_protocol,171,0,2022-07-18 07:32:14+00:00,[],
9816,https://github.com/suyash-20/fifo.git,2022-08-13 18:09:26+00:00,,0,suyash-20/fifo,524473880,SystemVerilog,fifo,5,0,2022-08-13 18:09:51+00:00,[],
9817,https://github.com/IsaiahGrace/VerilatorSims.git,2022-08-14 00:28:02+00:00,,0,IsaiahGrace/VerilatorSims,524538163,SystemVerilog,VerilatorSims,44,0,2022-08-25 03:56:08+00:00,[],
9818,https://github.com/lpatel29/VLSI.git,2022-08-26 04:59:35+00:00,Verilog codes.,0,lpatel29/VLSI,529120382,SystemVerilog,VLSI,67,0,2022-08-26 05:19:08+00:00,[],
9819,https://github.com/ikar298/FIFO-Controller.git,2022-08-25 07:53:28+00:00,Designed a FIFO controller using Verilog HDL ,0,ikar298/FIFO-Controller,528749519,SystemVerilog,FIFO-Controller,66,0,2022-08-25 17:32:05+00:00,[],
9820,https://github.com/ptwestmoreland/FPGA-Projects.git,2022-05-25 23:01:02+00:00,This repository holds my digital design projects. The language of choice is system Verilog and it holds various hardware units. ,0,ptwestmoreland/FPGA-Projects,496414463,SystemVerilog,FPGA-Projects,17,0,2023-07-27 04:57:46+00:00,[],
9821,https://github.com/cse140l-sp22/Lab5-Starter-Code.git,2022-05-19 05:33:35+00:00,,2,cse140l-sp22/Lab5-Starter-Code,493933953,SystemVerilog,Lab5-Starter-Code,13,0,2022-05-19 05:41:20+00:00,[],
9822,https://github.com/KuiHouLiao/HW-4.git,2022-06-13 01:34:21+00:00,,0,KuiHouLiao/HW-4,502770257,SystemVerilog,HW-4,2,0,2022-06-13 01:34:54+00:00,[],
9823,https://github.com/adrianmartinez-cg/sv-statemachines.git,2022-07-06 01:46:46+00:00,Using system verilog to design digital circuits.,0,adrianmartinez-cg/sv-statemachines,510951071,SystemVerilog,sv-statemachines,3,0,2022-07-06 01:49:41+00:00,[],
9824,https://github.com/jArnke/CSE-141L-Prog-2.git,2022-08-19 19:47:19+00:00,,0,jArnke/CSE-141L-Prog-2,526733427,SystemVerilog,CSE-141L-Prog-2,321,0,2022-08-19 19:48:19+00:00,[],
9825,https://github.com/phymooc/learn-digital-IC.git,2022-06-29 01:08:36+00:00,,0,phymooc/learn-digital-IC,508502319,SystemVerilog,learn-digital-IC,7,0,2022-07-05 02:53:17+00:00,[],
9826,https://github.com/Redha-Aouadja/HookKaks.git,2022-06-29 08:29:04+00:00,,0,Redha-Aouadja/HookKaks,508608765,SystemVerilog,HookKaks,0,0,2022-06-29 08:33:23+00:00,[],
9827,https://github.com/Antonios-C/8-Bit-Calculator.git,2022-08-14 23:10:33+00:00,,0,Antonios-C/8-Bit-Calculator,524799940,SystemVerilog,8-Bit-Calculator,20,0,2022-08-14 23:53:38+00:00,[],
9828,https://github.com/IamDestruction/100DaysofRTL.git,2022-08-18 09:35:52+00:00,"Starting 100 DAYS of RTL, hope I succeed",0,IamDestruction/100DaysofRTL,526146643,SystemVerilog,100DaysofRTL,16,0,2022-08-18 20:47:44+00:00,[],https://api.github.com/licenses/gpl-3.0
9829,https://github.com/shaswat2428/SPI-Protocol-Verification.git,2022-09-22 18:25:28+00:00,SPI Protocol Verification in system verilog with use of layered test bench and its RTL code,0,shaswat2428/SPI-Protocol-Verification,540116315,SystemVerilog,SPI-Protocol-Verification,134,0,2022-09-22 18:30:06+00:00,[],
9830,https://github.com/somayamansourrr/ALU-Verification.git,2022-09-04 16:07:32+00:00,,0,somayamansourrr/ALU-Verification,532589392,SystemVerilog,ALU-Verification,10,0,2022-09-04 16:08:14+00:00,[],
9831,https://github.com/usman1515/UVM_Testbench_ALU.git,2022-09-21 11:47:43+00:00,,0,usman1515/UVM_Testbench_ALU,539460003,SystemVerilog,UVM_Testbench_ALU,26,0,2022-09-22 08:16:09+00:00,[],
9832,https://github.com/Adeen317/System_Verilog.git,2022-09-14 22:00:28+00:00,,0,Adeen317/System_Verilog,536773006,SystemVerilog,System_Verilog,14,0,2023-08-14 12:01:06+00:00,[],
9833,https://github.com/chrystianrbueno/Arquitetura-TGA.git,2022-09-16 21:20:34+00:00,,0,chrystianrbueno/Arquitetura-TGA,537623093,SystemVerilog,Arquitetura-TGA,101,0,2022-09-16 21:25:55+00:00,[],
9835,https://github.com/edward88421/h5.git,2022-05-22 16:26:47+00:00,,0,edward88421/h5,495114337,SystemVerilog,h5,1,0,2022-05-22 16:32:38+00:00,[],
9836,https://github.com/XarkLabs/upduino-gpiotest.git,2022-05-28 04:15:07+00:00,Example to test all UPduino GPIO outputs,0,XarkLabs/upduino-gpiotest,497210148,SystemVerilog,upduino-gpiotest,15214,0,2022-05-28 04:16:46+00:00,"['fpga', 'ice40up5k', 'systemverilog', 'upduino', 'verilog']",
9837,https://github.com/ykhodke/ece260c.git,2022-06-08 02:37:04+00:00,,1,ykhodke/ece260c,501074329,SystemVerilog,ece260c,9,0,2022-06-08 02:41:00+00:00,[],
9838,https://github.com/SamuelEbbz07/ibex.git,2022-06-08 10:06:55+00:00,,0,SamuelEbbz07/ibex,501196010,SystemVerilog,ibex,8692,0,2022-06-08 10:07:41+00:00,[],https://api.github.com/licenses/apache-2.0
9839,https://github.com/Xuchaku/lab2scr1.git,2022-06-09 11:33:08+00:00,,0,Xuchaku/lab2scr1,501625790,SystemVerilog,lab2scr1,5032,0,2022-06-09 11:35:46+00:00,[],
9840,https://github.com/adithi-su/Mixed-signal-RISCV-based-SoC.git,2022-05-30 12:12:03+00:00,,0,adithi-su/Mixed-signal-RISCV-based-SoC,497927910,SystemVerilog,Mixed-signal-RISCV-based-SoC,958,0,2022-05-30 18:34:51+00:00,[],
9841,https://github.com/phymooc/learn-verification.git,2022-06-27 09:44:26+00:00,,0,phymooc/learn-verification,507849359,SystemVerilog,learn-verification,4,0,2022-07-11 10:50:12+00:00,[],
9842,https://github.com/kosmalex/SnakeSV.git,2022-06-02 18:34:50+00:00,snake written in System Verilog for nexys A7,0,kosmalex/SnakeSV,499248585,SystemVerilog,SnakeSV,13,0,2022-06-02 18:38:46+00:00,[],https://api.github.com/licenses/apache-2.0
9843,https://github.com/chavanvx/chavanvx.git,2022-06-23 04:20:24+00:00,Config files for my GitHub profile.,0,chavanvx/chavanvx,506494616,SystemVerilog,chavanvx,71,0,2023-10-27 05:06:09+00:00,"['config', 'github-config']",
9844,https://github.com/Jian404/FPGA-Component.git,2022-09-01 05:19:37+00:00,for learning,0,Jian404/FPGA-Component,531373867,SystemVerilog,FPGA-Component,17,0,2022-09-05 05:27:09+00:00,[],
9845,https://github.com/pAuLocordero222/Proyecto1_Verificacion.git,2022-08-27 03:30:39+00:00,,0,pAuLocordero222/Proyecto1_Verificacion,529470984,SystemVerilog,Proyecto1_Verificacion,170,0,2022-09-04 00:33:19+00:00,[],
9846,https://github.com/Pradyumna1312/Simple-Problems-with-Verification.git,2022-09-08 17:51:54+00:00,,0,Pradyumna1312/Simple-Problems-with-Verification,534330145,SystemVerilog,Simple-Problems-with-Verification,81,0,2022-09-22 16:36:33+00:00,[],https://api.github.com/licenses/apache-2.0
9847,https://github.com/SA-GPGPU/RISCV-based-debug_unit.git,2022-09-09 13:06:26+00:00,This module is an implementation of a debug unit compliant with the [RISC-V debug specification 0.13.2],1,SA-GPGPU/RISCV-based-debug_unit,534646310,SystemVerilog,RISCV-based-debug_unit,1201,0,2022-09-09 13:11:46+00:00,[],
9848,https://github.com/AllahWasya/System-Verilog-coding.git,2022-05-24 05:41:42+00:00,,0,AllahWasya/System-Verilog-coding,495684579,SystemVerilog,System-Verilog-coding,10,0,2022-05-24 05:46:55+00:00,[],
9849,https://github.com/AndersonLLeite/ULA-em-SystemVerilog.git,2022-06-23 15:17:17+00:00,Criação do circuito lógico combinacional ULA com algumas operações basicas para a discuplina de LOAC,0,AndersonLLeite/ULA-em-SystemVerilog,506690488,SystemVerilog,ULA-em-SystemVerilog,4,0,2022-06-23 15:24:17+00:00,[],
9850,https://github.com/talinham/ECE4305.git,2022-06-22 20:12:43+00:00,,0,talinham/ECE4305,506391957,SystemVerilog,ECE4305,2549,0,2022-06-22 20:17:46+00:00,[],
9851,https://github.com/tdextrous/sha256.git,2022-06-26 06:05:36+00:00,Some fun with SHA-256,0,tdextrous/sha256,507491661,SystemVerilog,sha256,19,0,2022-08-17 04:04:22+00:00,[],
9852,https://github.com/RonanLc/Neuromorphic-system-interface.git,2022-05-17 10:07:20+00:00,,0,RonanLc/Neuromorphic-system-interface,493195354,SystemVerilog,Neuromorphic-system-interface,4109,0,2022-05-19 07:03:05+00:00,[],
9853,https://github.com/cse140l-sp22/Lab4-Starter-Code.git,2022-05-16 17:16:02+00:00,,0,cse140l-sp22/Lab4-Starter-Code,492930845,SystemVerilog,Lab4-Starter-Code,6,0,2022-05-16 17:19:16+00:00,[],
9854,https://github.com/AlfredoAndrade14/LOAC.git,2022-05-31 13:34:06+00:00,,0,AlfredoAndrade14/LOAC,498350067,SystemVerilog,LOAC,164,0,2022-09-14 13:14:05+00:00,[],
9855,https://github.com/Jian-Wuyou/CS21-HDL-Project.git,2022-06-01 15:40:00+00:00,,0,Jian-Wuyou/CS21-HDL-Project,498796904,SystemVerilog,CS21-HDL-Project,13,0,2022-06-05 13:46:15+00:00,[],
9856,https://github.com/shawn110285/opentitan_fpga_a7.git,2022-05-28 06:13:58+00:00,the opentitan implemented on xilinx Artix 7,0,shawn110285/opentitan_fpga_a7,497231123,SystemVerilog,opentitan_fpga_a7,8730,0,2022-05-28 06:20:12+00:00,[],
9857,https://github.com/Granp4sso/bourbon-ristretto-32-riscv.git,2022-05-28 09:50:57+00:00,A 32-bit RISC-V core built just for fun and learning purposes,0,Granp4sso/bourbon-ristretto-32-riscv,497277055,SystemVerilog,bourbon-ristretto-32-riscv,565,0,2022-11-20 10:59:40+00:00,[],
9858,https://github.com/jlazear/stupid_toy_loader.git,2022-05-12 23:46:13+00:00,a stupid toy loader for messing with simulation stuff,0,jlazear/stupid_toy_loader,491699810,SystemVerilog,stupid_toy_loader,132,0,2022-05-12 23:53:50+00:00,[],
9859,https://github.com/ce323/project-IBMinator.git,2022-05-20 03:54:49+00:00,,1,ce323/project-IBMinator,494312885,SystemVerilog,project-IBMinator,557,0,2023-01-27 03:49:50+00:00,[],
9860,https://github.com/SinceNight/IC.git,2022-05-20 05:33:01+00:00,,0,SinceNight/IC,494333678,SystemVerilog,IC,42,0,2022-05-20 05:43:31+00:00,[],
9861,https://github.com/BIueMan/Space-Invaders-in-VHDL.git,2022-05-25 10:57:46+00:00,a Space Invader that was program in VHDL,0,BIueMan/Space-Invaders-in-VHDL,496192479,SystemVerilog,Space-Invaders-in-VHDL,13583,0,2022-06-09 13:19:07+00:00,[],
9862,https://github.com/a29712049/blocking-and-nonblocking.git,2022-06-27 02:39:15+00:00,,0,a29712049/blocking-and-nonblocking,507740247,SystemVerilog,blocking-and-nonblocking,58,0,2022-06-27 02:40:56+00:00,[],
9863,https://github.com/mfkiwl/veriRISCV.git,2022-07-10 22:56:56+00:00,,0,mfkiwl/veriRISCV,512557023,SystemVerilog,veriRISCV,375,0,2022-08-20 05:51:44+00:00,[],https://api.github.com/licenses/mit
9864,https://github.com/amiteshkr63/UART_Controller_Design_Verification_VLSI.git,2022-07-07 11:39:05+00:00,,0,amiteshkr63/UART_Controller_Design_Verification_VLSI,511503360,SystemVerilog,UART_Controller_Design_Verification_VLSI,23,0,2023-08-04 07:18:14+00:00,[],
9866,https://github.com/asd392229/hw5.git,2022-05-16 03:27:34+00:00,,0,asd392229/hw5,492670930,SystemVerilog,hw5,97,0,2022-05-16 03:28:16+00:00,[],
9867,https://github.com/GReX-Telescope/gateware.git,2022-06-16 17:40:42+00:00,Simulink model for the SNAP Gateware,0,GReX-Telescope/gateware,504250194,SystemVerilog,gateware,129742,0,2023-07-05 22:35:32+00:00,[],
9868,https://github.com/Anshuman0029/Task3_SIT329.git,2022-07-31 09:14:28+00:00,,0,Anshuman0029/Task3_SIT329,519728750,SystemVerilog,Task3_SIT329,11,0,2022-07-31 09:16:25+00:00,[],
9869,https://github.com/ladiasnk/Digital-Low-Level-Hardware-Systems-2-Semester-Assignment.git,2022-07-27 18:15:19+00:00,"This is an assignment in Digital Low Level Hardware Systems 2 in the 8th semester of my studies. It consists of the design and verification of an up/down 16-bit counter, as well as a simple synchronous FIFO in System Verilog. The coursework is in English , and the report of my assignment is in Greek. ",0,ladiasnk/Digital-Low-Level-Hardware-Systems-2-Semester-Assignment,518566732,SystemVerilog,Digital-Low-Level-Hardware-Systems-2-Semester-Assignment,2139,0,2022-07-30 12:11:05+00:00,[],
9870,https://github.com/aastha0603/vending_machine.git,2022-07-12 12:16:19+00:00,,0,aastha0603/vending_machine,513129375,SystemVerilog,vending_machine,2,0,2022-07-12 12:21:23+00:00,[],
9871,https://github.com/sram1619/myriscv.git,2022-08-07 07:45:00+00:00,,0,sram1619/myriscv,522148604,SystemVerilog,myriscv,1,0,2022-08-07 07:47:15+00:00,[],
9872,https://github.com/cleissom/Xnorator.git,2022-07-29 06:16:35+00:00,A Domain Specific Hardware Accelerator for Binary Neural Networks,0,cleissom/Xnorator,519102010,SystemVerilog,Xnorator,35,0,2022-07-29 06:18:52+00:00,[],
9873,https://github.com/Buildyourdreams0816/Training-for-I2C-Verification.git,2022-08-01 10:20:00+00:00,,0,Buildyourdreams0816/Training-for-I2C-Verification,520061703,SystemVerilog,Training-for-I2C-Verification,9683,0,2022-08-01 10:22:35+00:00,[],https://api.github.com/licenses/apache-2.0
9874,https://github.com/Aditi-Dhibar/Vending-machine.git,2022-08-15 13:06:01+00:00,I made this project using verilog code,0,Aditi-Dhibar/Vending-machine,524990508,SystemVerilog,Vending-machine,36,0,2022-08-15 13:10:02+00:00,[],
9875,https://github.com/phamngocson1408/NPU1.git,2022-08-17 06:22:08+00:00,,0,phamngocson1408/NPU1,525665501,SystemVerilog,NPU1,214,0,2022-08-17 07:00:10+00:00,[],
9876,https://github.com/Brughy/generic_mulaw_sv.git,2022-08-10 10:51:02+00:00,,0,Brughy/generic_mulaw_sv,523305320,SystemVerilog,generic_mulaw_sv,5,0,2022-12-20 11:09:51+00:00,[],
9877,https://github.com/romantitovmephi/Generic-building-blocks.git,2022-07-14 21:45:12+00:00,,0,romantitovmephi/Generic-building-blocks,514056041,SystemVerilog,Generic-building-blocks,32,0,2022-07-14 21:53:37+00:00,[],
9878,https://github.com/Boccolarg/PULPino_BRAM.git,2022-07-25 16:58:06+00:00,,0,Boccolarg/PULPino_BRAM,517749923,SystemVerilog,PULPino_BRAM,5,0,2022-07-25 17:01:32+00:00,[],
9879,https://github.com/Faisalawan11/Lab-14-SV-using-Virtual-Interface.git,2022-07-18 16:18:39+00:00,,0,Faisalawan11/Lab-14-SV-using-Virtual-Interface,515257750,SystemVerilog,Lab-14-SV-using-Virtual-Interface,5,0,2022-07-18 16:23:33+00:00,[],
9880,https://github.com/Mandrews277/FPGA-HDMI-Project.git,2022-09-08 21:18:34+00:00,Creating an HDMI output using a Cyclone V FPGA to display a rudimentry spectrum analyzer on any HDMI display.,0,Mandrews277/FPGA-HDMI-Project,534396630,SystemVerilog,FPGA-HDMI-Project,12511,0,2022-09-08 21:20:38+00:00,[],
9881,https://github.com/haosenli/fpga-abstract-animations.git,2022-08-31 22:18:38+00:00,A procedurally generated abstract screen saver for Intel DE1-SoC FPGAs.,0,haosenli/fpga-abstract-animations,531277105,SystemVerilog,fpga-abstract-animations,2475,0,2022-08-31 22:21:15+00:00,[],
9882,https://github.com/rednazer/ece554_miniproject.git,2022-09-08 21:48:17+00:00,,0,rednazer/ece554_miniproject,534404387,SystemVerilog,ece554_miniproject,4413,0,2022-09-08 22:49:26+00:00,[],
9883,https://github.com/karthik-kaushik/Image-compression.git,2022-08-14 23:11:33+00:00,Hardware Implementation of image decompressor,0,karthik-kaushik/Image-compression,524800087,SystemVerilog,Image-compression,2009,0,2022-08-14 23:13:03+00:00,[],https://api.github.com/licenses/mit
9884,https://github.com/DonMaestro/UART.git,2022-08-23 09:06:34+00:00,,0,DonMaestro/UART,527912251,SystemVerilog,UART,152,0,2022-08-28 06:44:19+00:00,[],
9885,https://github.com/amepila/Practica1_DisenoDigital.git,2022-09-21 23:36:56+00:00,Practica 1 de Diseno de Sistemas Digitales en la Maestria de Diseno Electronico,0,amepila/Practica1_DisenoDigital,539722699,SystemVerilog,Practica1_DisenoDigital,116,0,2022-09-21 23:39:45+00:00,[],
9886,https://github.com/Willysan23/DecGray-Bin-Dec.git,2022-09-21 21:17:38+00:00,,0,Willysan23/DecGray-Bin-Dec,539688148,SystemVerilog,DecGray-Bin-Dec,182,0,2022-10-11 02:44:59+00:00,[],
9887,https://github.com/IasonC/16RISC-CPU.git,2022-09-24 17:04:20+00:00,16-bit RISC Harvard-architecture CPU. Work in progress. Aim to deploy on FPGA.,0,IasonC/16RISC-CPU,540904147,SystemVerilog,16RISC-CPU,48,0,2022-09-24 17:06:58+00:00,[],
9888,https://github.com/manp-git/DynPath.git,2022-09-18 08:50:29+00:00,Non-intrusive hardware based Execution Path Profiling,0,manp-git/DynPath,538051175,SystemVerilog,DynPath,1965,0,2022-09-29 14:37:26+00:00,[],
9889,https://github.com/Yuan-Mao/bsg_fifo_1r1w_rolly.git,2022-09-17 18:14:09+00:00,,0,Yuan-Mao/bsg_fifo_1r1w_rolly,537893465,SystemVerilog,bsg_fifo_1r1w_rolly,46,0,2022-09-17 18:15:03+00:00,[],
9890,https://github.com/Kinox2000/Proyecto1-VFCI.git,2022-09-09 23:10:33+00:00,Proyecto 1-Verificación Funcional de Circuitos Integrados,0,Kinox2000/Proyecto1-VFCI,534832712,SystemVerilog,Proyecto1-VFCI,66,0,2022-09-10 07:05:20+00:00,[],
9891,https://github.com/JoseA4718/Diseno-Digital-HDL.git,2022-09-23 02:07:09+00:00,II Proyecto - Diseño Lógico,0,JoseA4718/Diseno-Digital-HDL,540243749,SystemVerilog,Diseno-Digital-HDL,126,0,2022-10-11 07:26:04+00:00,[],https://api.github.com/licenses/mit
9892,https://github.com/MuntasirBabul/rtl.git,2022-07-06 11:46:16+00:00,,0,MuntasirBabul/rtl,511114560,SystemVerilog,rtl,300,0,2023-12-19 19:59:47+00:00,[],
9893,https://github.com/sujankumarMN/MIT.git,2022-09-22 10:49:27+00:00,Repo contains all the exercises/implementations done in lab,0,sujankumarMN/MIT,539932241,SystemVerilog,MIT,6330,0,2024-01-14 11:58:42+00:00,[],
9894,https://github.com/connorjlink/hardware.git,2022-08-12 23:25:13+00:00,A register-transfer level Verilog/SystemVerilog implementation of CL8,0,connorjlink/hardware,524248723,SystemVerilog,hardware,160,0,2024-03-01 16:37:43+00:00,[],https://api.github.com/licenses/mit
9895,https://github.com/Alszp/HDLbits.git,2022-05-12 17:09:31+00:00,,0,Alszp/HDLbits,491602593,SystemVerilog,HDLbits,35,0,2022-05-22 16:05:09+00:00,[],
9896,https://github.com/AlexNguyenJJ/ece111-hw7.git,2022-05-28 17:51:37+00:00,,0,AlexNguyenJJ/ece111-hw7,497390873,SystemVerilog,ece111-hw7,551,0,2022-05-28 17:54:30+00:00,[],
9897,https://github.com/EngRaff92/RISCV_MYTH_SV.git,2022-06-02 17:08:11+00:00,Labs from RISCV_MYTH training without TL Verilog but only using SV - COCOTB - YOSYS,0,EngRaff92/RISCV_MYTH_SV,499222494,SystemVerilog,RISCV_MYTH_SV,4372,0,2022-06-02 17:19:12+00:00,[],
9898,https://github.com/tsanyi0119/Hw05.git,2022-05-15 14:49:05+00:00,,0,tsanyi0119/Hw05,492516059,SystemVerilog,Hw05,2,0,2022-05-15 14:49:38+00:00,[],
9899,https://github.com/PierfrancescoBigliazzi/Hardware-and-Embedded-Security-Project.git,2022-05-14 16:29:34+00:00,,0,PierfrancescoBigliazzi/Hardware-and-Embedded-Security-Project,492269008,SystemVerilog,Hardware-and-Embedded-Security-Project,18046,0,2022-06-27 17:04:15+00:00,[],
9900,https://github.com/Ziboooo/32bit_multiplier_IEEEstandard-.git,2022-05-12 18:00:27+00:00,,0,Ziboooo/32bit_multiplier_IEEEstandard-,491617823,SystemVerilog,32bit_multiplier_IEEEstandard-,107,0,2022-08-17 09:10:58+00:00,[],
9901,https://github.com/ICHSU1998/2022_Spring_NCKU_DIC.git,2022-05-27 12:22:36+00:00,,0,ICHSU1998/2022_Spring_NCKU_DIC,496986423,SystemVerilog,2022_Spring_NCKU_DIC,6449,0,2022-06-03 09:07:32+00:00,[],
9902,https://github.com/YazanMPSUT/FPUPipelineArch2.git,2022-05-30 19:29:57+00:00,,0,YazanMPSUT/FPUPipelineArch2,498073240,SystemVerilog,FPUPipelineArch2,123,0,2022-05-30 19:36:56+00:00,[],
9903,https://github.com/Furqan-Lamp/Ibex-Core-Verification-Environment.git,2022-05-30 14:53:36+00:00,,0,Furqan-Lamp/Ibex-Core-Verification-Environment,497986722,SystemVerilog,Ibex-Core-Verification-Environment,13396,0,2022-06-08 06:05:11+00:00,[],
9904,https://github.com/crystal-lptang/Handshake.git,2022-05-29 09:26:23+00:00,ready and valid Handshake,0,crystal-lptang/Handshake,497543920,SystemVerilog,Handshake,246,0,2022-05-30 03:45:13+00:00,[],
9905,https://github.com/subhradip096/UART-Design-using-Verilog.git,2022-07-03 15:48:26+00:00,,0,subhradip096/UART-Design-using-Verilog,510066867,SystemVerilog,UART-Design-using-Verilog,20,0,2022-07-23 07:18:16+00:00,[],
9906,https://github.com/fcaspe/sump_zybo.git,2022-07-01 22:39:38+00:00,The SUMP logic analyzer for Zybo Z7,0,fcaspe/sump_zybo,509605127,SystemVerilog,sump_zybo,697,0,2022-07-01 22:41:13+00:00,[],
9907,https://github.com/jugszy/One_hot-to-Thermometer-in-Verilog-HDL.git,2022-06-10 17:57:11+00:00,This code is a parameterized one_hot to thermometer converter.,0,jugszy/One_hot-to-Thermometer-in-Verilog-HDL,502135072,SystemVerilog,One_hot-to-Thermometer-in-Verilog-HDL,0,0,2022-06-10 17:59:15+00:00,[],
9908,https://github.com/sisaphilip/FIR.git,2022-06-16 14:41:40+00:00,,0,sisaphilip/FIR,504192230,SystemVerilog,FIR,95,0,2022-06-16 14:45:12+00:00,[],
9909,https://github.com/jeras/UHDM-tests.git,2022-07-30 21:54:52+00:00,Test for UHDM SystemVerilog plugin for yosys.,0,jeras/UHDM-tests,519627880,SystemVerilog,UHDM-tests,22,0,2022-07-30 22:47:54+00:00,[],https://api.github.com/licenses/apache-2.0
9910,https://github.com/MinhTran0911/Stopwatch_DE10.git,2022-07-30 14:41:56+00:00,Basic Stopwatch Design using Terasic DE-10 Standard FPGA,0,MinhTran0911/Stopwatch_DE10,519541371,SystemVerilog,Stopwatch_DE10,17937,0,2022-08-06 08:14:24+00:00,"['altera-fpga', 'cyclone-v', 'hardware-description-language', 'hdl', 'modelsim', 'quartus-prime', 'systemverilog', 'terasic-de10-standard']",
9911,https://github.com/visionvlsi/sv_by_self.git,2022-08-06 09:01:35+00:00,,0,visionvlsi/sv_by_self,521896766,SystemVerilog,sv_by_self,497,0,2022-08-06 09:05:01+00:00,[],
9912,https://github.com/spunky404/Verilog_Practicals.git,2022-08-04 08:21:48+00:00,Verilog Practicals,0,spunky404/Verilog_Practicals,521183137,SystemVerilog,Verilog_Practicals,40,0,2022-08-04 09:15:04+00:00,[],
9913,https://github.com/Angelaangie-ai/ECE-211-Final-Project.git,2022-08-07 17:13:13+00:00,,0,Angelaangie-ai/ECE-211-Final-Project,522275651,SystemVerilog,ECE-211-Final-Project,768,0,2022-08-07 17:13:56+00:00,[],
9914,https://github.com/carlzhang4/chisel_rps.git,2022-06-29 12:24:51+00:00,,0,carlzhang4/chisel_rps,508680879,SystemVerilog,chisel_rps,148,0,2022-07-14 12:56:02+00:00,[],
9915,https://github.com/sus-ziti-uni-hd/VerilogModules.git,2022-07-01 09:35:38+00:00,"A Collection of Useful, Self-Contained Verilog / SystemVerilog Modules",0,sus-ziti-uni-hd/VerilogModules,509398276,SystemVerilog,VerilogModules,2,0,2022-07-01 09:36:55+00:00,[],https://api.github.com/licenses/mit
9916,https://github.com/YehorKrapovnytskyi/verification_ips.git,2022-06-30 15:12:30+00:00,"This repository contains common verification modules, that I use for my DSP design. ",0,YehorKrapovnytskyi/verification_ips,509129386,SystemVerilog,verification_ips,2,0,2022-06-30 23:27:30+00:00,[],
9917,https://github.com/MidhunNair43/counter_dectection_UVM.git,2022-07-25 04:25:45+00:00,,0,MidhunNair43/counter_dectection_UVM,517516093,SystemVerilog,counter_dectection_UVM,9,0,2022-07-25 04:35:20+00:00,[],
9918,https://github.com/mitshine/S-R-Latch---UVM.git,2022-08-11 10:33:01+00:00,Complete explanation of driver to scoreboard and monitor to scoreboard and functional coverage without cg_sample,0,mitshine/S-R-Latch---UVM,523681192,SystemVerilog,S-R-Latch---UVM,76,0,2022-08-11 11:08:32+00:00,[],
9919,https://github.com/szhao2095/pulp_soc.git,2022-07-13 18:17:04+00:00,,0,szhao2095/pulp_soc,513626886,SystemVerilog,pulp_soc,112,0,2022-07-18 18:48:56+00:00,[],
9920,https://github.com/rabeea247/AHB_lite-Project-Part_1.git,2022-07-17 15:18:08+00:00,This is the part-1 of the Creating the Design Verification Environment,0,rabeea247/AHB_lite-Project-Part_1,514879014,SystemVerilog,AHB_lite-Project-Part_1,8,0,2022-07-17 15:23:42+00:00,[],
9921,https://github.com/LoesterFranco/ArmleoCPU-1.git,2022-08-15 16:47:58+00:00,"Multicore RISC-V CPU RV32IMA w/ MMU, Cache capable of booting Linux. Work in progress to execute first instruction",0,LoesterFranco/ArmleoCPU-1,525065081,,ArmleoCPU-1,3176,0,2022-08-15 16:47:55+00:00,[],https://api.github.com/licenses/gpl-3.0
9922,https://github.com/hadizadeh-ali/UT_Computer_Architecture.git,2022-06-21 07:02:10+00:00,"My Verilog codes for MIPS single-cycle, multi-cycle, and pipelined architectures.",0,hadizadeh-ali/UT_Computer_Architecture,505727465,SystemVerilog,UT_Computer_Architecture,4870,0,2022-06-22 20:33:39+00:00,[],
9923,https://github.com/MelikaMinaei/Digital-Systems-CA-1.git,2022-06-19 00:15:31+00:00,,0,MelikaMinaei/Digital-Systems-CA-1,504977136,SystemVerilog,Digital-Systems-CA-1,1109,0,2023-11-03 02:41:32+00:00,[],
9924,https://github.com/MohamedAhmed412000/Digital-Verification-Codes.git,2022-06-19 13:16:44+00:00,CSE412: Selected Topics in Computer Engineering,0,MohamedAhmed412000/Digital-Verification-Codes,505114888,SystemVerilog,Digital-Verification-Codes,1090,0,2022-06-19 13:29:09+00:00,[],
9925,https://github.com/somayamansourrr/UVM-ALU-Verification.git,2022-08-29 08:07:48+00:00,,0,somayamansourrr/UVM-ALU-Verification,530124302,SystemVerilog,UVM-ALU-Verification,121,0,2022-09-04 19:44:46+00:00,[],
9926,https://github.com/alosktx/irun_test_dpi.git,2022-08-26 15:46:15+00:00,使用irun和c++测试systemverilog dpi,0,alosktx/irun_test_dpi,529316976,SystemVerilog,irun_test_dpi,3,0,2022-08-26 15:51:21+00:00,[],
9927,https://github.com/UandersonSilva/oo_testbenches.git,2022-08-20 20:22:14+00:00,Some oriented testbenches developed to verificate simple hardware descriptions.,0,UandersonSilva/oo_testbenches,527031673,SystemVerilog,oo_testbenches,7,0,2022-08-20 21:37:20+00:00,[],
9928,https://github.com/dansdeor/billiard.git,2022-08-19 10:15:16+00:00,billiard game running inside fpga board,0,dansdeor/billiard,526558601,SystemVerilog,billiard,14618,0,2022-08-22 17:08:31+00:00,[],
9929,https://github.com/hari-haran05/Hi-Five_CPU.git,2022-08-16 20:54:45+00:00,This is an RV32_IM riscv cpu core. Its a non-pipelined core with MULW instruction alone from M extension. ,0,hari-haran05/Hi-Five_CPU,525539682,SystemVerilog,Hi-Five_CPU,56765,0,2022-09-08 16:17:42+00:00,"['cpu', 'risc-v', 'rv32i', 'rv32im']",
9930,https://github.com/kanuar/systemverilog_mux2-1.git,2022-09-16 04:22:31+00:00,,0,kanuar/systemverilog_mux2-1,537303198,SystemVerilog,systemverilog_mux2-1,4,0,2022-09-16 04:33:00+00:00,[],
9931,https://github.com/Narinder788/Task3.1.git,2022-09-16 09:44:40+00:00,,0,Narinder788/Task3.1,537396133,SystemVerilog,Task3.1,1,0,2022-09-16 18:27:40+00:00,[],
9932,https://github.com/naveen0215/linux_course.git,2022-09-14 08:56:39+00:00,code ,0,naveen0215/linux_course,536493366,SystemVerilog,linux_course,8,0,2022-09-14 09:22:30+00:00,[],
9933,https://github.com/symmetryyyyy/pulp-testbench.git,2022-09-08 13:08:30+00:00,,0,symmetryyyyy/pulp-testbench,534216647,SystemVerilog,pulp-testbench,5582,0,2022-09-08 13:11:34+00:00,[],
9934,https://github.com/jayeshsuyal/UART.git,2022-09-08 18:40:16+00:00,,0,jayeshsuyal/UART,534347787,SystemVerilog,UART,3,0,2022-09-08 18:40:58+00:00,[],
9935,https://github.com/jayeshsuyal/APB_RAM_AXI3.git,2022-09-08 18:44:05+00:00,,1,jayeshsuyal/APB_RAM_AXI3,534349153,SystemVerilog,APB_RAM_AXI3,4,0,2022-09-08 18:46:12+00:00,[],
9936,https://github.com/brmanuel/sha256-pipelined.git,2022-09-11 15:33:10+00:00,,0,brmanuel/sha256-pipelined,535341481,SystemVerilog,sha256-pipelined,4,0,2022-09-11 15:47:46+00:00,[],
9937,https://github.com/shangfucheng/LFSR_ISA_Design.git,2022-09-04 07:36:15+00:00,,0,shangfucheng/LFSR_ISA_Design,532470335,SystemVerilog,LFSR_ISA_Design,740,0,2022-09-08 02:25:33+00:00,[],
9938,https://github.com/shubham-sai47/Posit_Adder_Multiplier.git,2022-08-30 08:49:04+00:00,Parameterized Adder and Multiplier in Posit Number System,2,shubham-sai47/Posit_Adder_Multiplier,530572299,SystemVerilog,Posit_Adder_Multiplier,8,0,2022-08-30 08:52:50+00:00,[],
9939,https://github.com/brandoonward/Rainman-Game.git,2022-05-19 14:43:14+00:00,"A game made in MIPS using Vivado and Nexys4 boards to play a familiar ""Rainman Game"".",0,brandoonward/Rainman-Game,494111640,SystemVerilog,Rainman-Game,86,0,2022-05-19 14:47:22+00:00,[],
9940,https://github.com/ihatedebug/HSD.git,2022-05-27 07:20:31+00:00,,0,ihatedebug/HSD,496901333,SystemVerilog,HSD,11840,0,2022-05-31 01:53:36+00:00,[],
9941,https://github.com/im-world/SystemVerilog-Exercises.git,2022-06-08 13:17:38+00:00,Solutions to the exercises I completed as part of the Cadence SV course,0,im-world/SystemVerilog-Exercises,501259100,SystemVerilog,SystemVerilog-Exercises,19,0,2022-06-08 13:21:14+00:00,[],https://api.github.com/licenses/gpl-3.0
9942,https://github.com/adhyansuri/Pulse-Width-Modulator.git,2022-06-07 19:52:51+00:00,,0,adhyansuri/Pulse-Width-Modulator,500984295,SystemVerilog,Pulse-Width-Modulator,2,0,2022-06-07 19:53:14+00:00,[],
9943,https://github.com/MichalBlk/fiona.git,2022-06-19 09:42:25+00:00,,0,MichalBlk/fiona,505067470,SystemVerilog,fiona,10,0,2022-06-19 09:46:23+00:00,[],
9944,https://github.com/mehhdiii/RISC-V-5-stage-pipeline.git,2022-05-17 23:41:00+00:00,,0,mehhdiii/RISC-V-5-stage-pipeline,493445911,SystemVerilog,RISC-V-5-stage-pipeline,6,0,2022-05-18 02:28:27+00:00,[],https://api.github.com/licenses/mit
9945,https://github.com/behcetmuhammed/RISC-V-Tabanli-Islemci-Tasarimi.git,2022-05-16 17:53:42+00:00,,0,behcetmuhammed/RISC-V-Tabanli-Islemci-Tasarimi,492943179,SystemVerilog,RISC-V-Tabanli-Islemci-Tasarimi,8080,0,2022-05-16 17:56:48+00:00,[],
9946,https://github.com/JinsonWu/Digital_Circuit_and_System_Implementation.git,2022-05-20 05:48:28+00:00,,0,JinsonWu/Digital_Circuit_and_System_Implementation,494337065,SystemVerilog,Digital_Circuit_and_System_Implementation,13154,0,2022-05-20 06:08:56+00:00,[],
9947,https://github.com/yasho2249/ece593_project.git,2022-05-21 02:36:36+00:00,,1,yasho2249/ece593_project,494660805,SystemVerilog,ece593_project,1236,0,2022-05-21 02:50:36+00:00,[],
9948,https://github.com/10RE/VE470-repo.git,2022-05-21 20:07:41+00:00,,0,10RE/VE470-repo,494884359,SystemVerilog,VE470-repo,1586,0,2022-05-21 20:17:12+00:00,[],
9949,https://github.com/mio-19/uart.v.git,2022-05-26 02:47:04+00:00,uart for verilog based on https://github.com/pConst/basic_verilog,0,mio-19/uart.v,496459172,SystemVerilog,uart.v,4,0,2022-05-26 02:48:50+00:00,[],
9950,https://github.com/djak1/Verifikacija.git,2022-05-26 12:45:23+00:00,,0,djak1/Verifikacija,496617188,SystemVerilog,Verifikacija,0,0,2022-05-26 12:46:01+00:00,[],
9951,https://github.com/AlExx1022/Pseudo-Random-Pattern.git,2022-05-15 16:17:13+00:00,Pseudo Random Pattern,0,AlExx1022/Pseudo-Random-Pattern,492538923,SystemVerilog,Pseudo-Random-Pattern,2,0,2022-05-15 16:18:01+00:00,[],
9952,https://github.com/a29712049/Hierarchical-Design-of-3-8-decoder.git,2022-06-27 02:37:52+00:00,,0,a29712049/Hierarchical-Design-of-3-8-decoder,507739983,SystemVerilog,Hierarchical-Design-of-3-8-decoder,29,0,2022-06-27 02:38:23+00:00,[],
9953,https://github.com/bolero021/HDLbits.git,2022-07-06 03:51:34+00:00,,0,bolero021/HDLbits,510979489,SystemVerilog,HDLbits,15,0,2022-07-06 03:51:42+00:00,[],
9954,https://github.com/hwcho1/test.git,2022-06-09 05:44:16+00:00,test,0,hwcho1/test,501520058,SystemVerilog,test,7,0,2022-06-10 01:06:14+00:00,[],
9955,https://github.com/TatshSiow/HW4.git,2022-06-11 04:44:18+00:00,BCD碼上數計數器,0,TatshSiow/HW4,502251567,SystemVerilog,HW4,1,0,2022-06-11 04:44:51+00:00,[],
9956,https://github.com/SangTruongTan/Lab3_RMIT.git,2022-05-15 16:41:54+00:00,,0,SangTruongTan/Lab3_RMIT,492544963,SystemVerilog,Lab3_RMIT,21135,0,2022-05-15 16:42:16+00:00,[],
9957,https://github.com/siglabsoss/Daryl-Workspace.git,2022-07-10 21:52:17+00:00,,0,siglabsoss/Daryl-Workspace,512547247,SystemVerilog,Daryl-Workspace,15928,0,2022-07-10 21:52:47+00:00,[],https://api.github.com/licenses/bsd-3-clause
9958,https://github.com/marcotulio956/neuron.modelingIC.git,2022-07-28 03:26:41+00:00,,0,marcotulio956/neuron.modelingIC,518686894,SystemVerilog,neuron.modelingIC,12,0,2022-08-10 01:12:28+00:00,"['floating-point', 'izhikevich-model', 'neuromorphic', 'neuron', 'systemverilog']",
9959,https://github.com/xhulio11/HW-2-Project.git,2022-07-29 16:45:17+00:00,,0,xhulio11/HW-2-Project,519285121,SystemVerilog,HW-2-Project,1799,0,2022-07-29 16:47:08+00:00,[],
9960,https://github.com/va1ery/clean_mhrd.git,2022-07-17 04:35:02+00:00,,0,va1ery/clean_mhrd,514747002,SystemVerilog,clean_mhrd,79,0,2022-07-17 04:38:38+00:00,[],
9961,https://github.com/KevinPrakash/carry_save_multiplier.git,2022-07-17 05:03:41+00:00,Carry save multiplier coded in system verilog,0,KevinPrakash/carry_save_multiplier,514751126,SystemVerilog,carry_save_multiplier,104,0,2022-07-17 05:04:16+00:00,[],https://api.github.com/licenses/gpl-3.0
9962,https://github.com/DIPS6114/fifo_bfm_topology-.git,2022-07-21 14:35:49+00:00,,0,DIPS6114/fifo_bfm_topology-,516407247,SystemVerilog,fifo_bfm_topology-,10,0,2022-07-21 14:47:28+00:00,[],
9963,https://github.com/QuocVDo/2UCIS-CPU-Architecture.git,2022-07-27 22:28:32+00:00,2UCIS is a compact RISC archictecture CPU with support for a custom instruction set. ,0,QuocVDo/2UCIS-CPU-Architecture,518628518,SystemVerilog,2UCIS-CPU-Architecture,948,0,2022-07-27 22:49:31+00:00,[],
9964,https://github.com/ngrabbs/arm_projects.git,2022-07-28 11:13:14+00:00,ARM single cycle processor on nandland.com go-board,0,ngrabbs/arm_projects,518813875,SystemVerilog,arm_projects,21872,0,2023-10-22 17:03:48+00:00,"['fpga', 'fpga-programming', 'fpga-soc', 'arm', 'assembler', 'assembly', 'embedded', 'hdl', 'ice40', 'system-architecture', 'system-design', 'systemverilog']",
9965,https://github.com/TDD-II-22/lab1-g03.git,2022-08-06 03:15:37+00:00,lab1-g03 created by GitHub Classroom,0,TDD-II-22/lab1-g03,521834183,SystemVerilog,lab1-g03,7507,0,2022-08-22 05:40:26+00:00,[],
9966,https://github.com/paptil9/edge_detector.git,2022-09-18 22:05:09+00:00,,0,paptil9/edge_detector,538253203,SystemVerilog,edge_detector,19,0,2022-09-18 22:06:59+00:00,[],
9967,https://github.com/MadejSzymon/de0nano_led_pwm.git,2022-09-22 15:35:06+00:00,PWM on DE0-Nano LED's,0,MadejSzymon/de0nano_led_pwm,540050627,SystemVerilog,de0nano_led_pwm,80,0,2022-09-22 15:35:50+00:00,[],
9968,https://github.com/MIET-APS-Labs/RISC-V_based_CPU.git,2022-09-24 11:30:04+00:00,"Creating my own 32 bit ALU based on RISC-V architecture, extended with simple SIMD commands",1,MIET-APS-Labs/RISC-V_based_CPU,540806779,SystemVerilog,RISC-V_based_CPU,338,0,2022-10-10 22:29:53+00:00,[],https://api.github.com/licenses/mit
9969,https://github.com/dqgarcia/fpga-final.git,2022-07-02 05:11:15+00:00,,0,dqgarcia/fpga-final,509664374,SystemVerilog,fpga-final,6,0,2022-07-02 06:03:21+00:00,[],
9970,https://github.com/zhwren/vcs.git,2022-07-03 02:52:29+00:00,,0,zhwren/vcs,509907803,SystemVerilog,vcs,3,0,2022-07-03 03:03:57+00:00,[],
9971,https://github.com/imjp2020/System-Verilog-Tutorial.git,2022-08-27 09:33:09+00:00,Explorations of System-Verilog for Verification ,0,imjp2020/System-Verilog-Tutorial,529540779,SystemVerilog,System-Verilog-Tutorial,30,0,2022-09-23 08:52:14+00:00,"['clocking', 'constraints', 'inteface', 'oops', 'randomization']",https://api.github.com/licenses/apache-2.0
9972,https://github.com/wunonomei/test.git,2022-08-19 07:40:05+00:00,,0,wunonomei/test,526509368,SystemVerilog,test,3,0,2022-09-03 07:18:04+00:00,[],
9973,https://github.com/anmehta4/ece554_minilab1.git,2022-09-08 22:40:00+00:00,,0,anmehta4/ece554_minilab1,534417234,SystemVerilog,ece554_minilab1,692,0,2022-09-15 19:25:11+00:00,[],
9974,https://github.com/AhsanAliUet/simple-ready-valid-handshake-protocol-interface.git,2022-09-09 03:43:09+00:00,"In this repository, a simple ready-valid protocol is implemented in System Verilog and tested carefully according to AMBA specifications.",0,AhsanAliUet/simple-ready-valid-handshake-protocol-interface,534487311,SystemVerilog,simple-ready-valid-handshake-protocol-interface,39,0,2022-09-09 03:53:50+00:00,[],
9975,https://github.com/jayantjaiswal100/Car-Parking-System.git,2022-09-07 19:21:11+00:00,,0,jayantjaiswal100/Car-Parking-System,533908725,SystemVerilog,Car-Parking-System,4,0,2022-09-09 19:09:39+00:00,[],
9976,https://github.com/haseebnadeem/practice-sv.git,2022-09-07 08:03:41+00:00,,0,haseebnadeem/practice-sv,533666841,SystemVerilog,practice-sv,9,0,2022-09-07 08:05:24+00:00,[],
9977,https://github.com/anmehta4/Basic-Hardware-Projects.git,2022-08-26 18:28:12+00:00,,0,anmehta4/Basic-Hardware-Projects,529366048,SystemVerilog,Basic-Hardware-Projects,45,0,2022-08-26 22:31:46+00:00,[],
9978,https://github.com/romantitovmephi/MIPS.git,2022-08-29 11:40:07+00:00,,0,romantitovmephi/MIPS,530193030,SystemVerilog,MIPS,44,0,2022-08-29 12:52:47+00:00,[],
9979,https://github.com/uw-acme/CERN_RD53B_SEE.git,2022-09-01 20:35:47+00:00,Single-event-upset resync for RD53B ASIC serial interface,0,uw-acme/CERN_RD53B_SEE,531678099,SystemVerilog,CERN_RD53B_SEE,74744,0,2022-09-09 21:27:36+00:00,[],
9980,https://github.com/AhsanAliUet/uart-transmitter-Tx-implementation-in-system-verilog.git,2022-09-13 11:07:06+00:00,We have implemented UART (Universal Asynchronous Receiver Transmitter) using System Verilog. ,0,AhsanAliUet/uart-transmitter-Tx-implementation-in-system-verilog,536085633,SystemVerilog,uart-transmitter-Tx-implementation-in-system-verilog,610,0,2022-09-21 19:48:33+00:00,[],
9981,https://github.com/nishtahir/rv32i.git,2022-09-10 23:10:59+00:00,An incomplete rv32i implementation,0,nishtahir/rv32i,535140653,SystemVerilog,rv32i,201,0,2022-11-07 14:49:10+00:00,[],https://api.github.com/licenses/apache-2.0
9982,https://github.com/RachelRachelRachelRachel/DigitalDesign-and-ComputerArchitecture-RSIC-V-Edition-Tony-s-example-and-practicing.git,2022-09-16 08:39:53+00:00,,0,RachelRachelRachelRachel/DigitalDesign-and-ComputerArchitecture-RSIC-V-Edition-Tony-s-example-and-practicing,537374590,SystemVerilog,DigitalDesign-and-ComputerArchitecture-RSIC-V-Edition-Tony-s-example-and-practicing,3,0,2022-09-16 08:54:49+00:00,[],
9983,https://github.com/mohammed-nurulhoque/r55.git,2022-08-21 20:10:27+00:00,,0,mohammed-nurulhoque/r55,527315718,SystemVerilog,r55,6,0,2023-12-14 09:43:44+00:00,[],
9984,https://github.com/FPGA-James/common_lib.git,2022-08-08 14:55:44+00:00,A selection of commonly used IP ,0,FPGA-James/common_lib,522593043,SystemVerilog,common_lib,9,0,2022-08-08 20:51:54+00:00,[],
9985,https://github.com/arctic-marmoset/nebula.git,2022-06-16 08:14:06+00:00,A RISC-V RV32I core written in SystemVerilog for learning purposes.,0,arctic-marmoset/nebula,504069824,SystemVerilog,nebula,33,0,2024-01-03 20:23:39+00:00,[],https://api.github.com/licenses/mit
9986,https://github.com/taneroksuz/wolv-z4.git,2022-06-03 13:16:27+00:00,Wolv Z4 is a RISC-V CPU core with floating point unit,1,taneroksuz/wolv-z4,499518023,SystemVerilog,wolv-z4,317,0,2024-04-09 21:00:45+00:00,"['fpu', 'hardware', 'risc-v', 'rv32', 'cpu', 'core', 'fpga']",https://api.github.com/licenses/apache-2.0
9987,https://github.com/choiyeonwooo/QUIQCL.git,2022-05-24 15:34:16+00:00,,0,choiyeonwooo/QUIQCL,495884555,SystemVerilog,QUIQCL,104,0,2022-05-24 15:49:29+00:00,[],
9988,https://github.com/kareemfarahat/32-bit-pipelined-ARM-processor.git,2022-05-21 20:13:57+00:00,"The processor supports the following instructions:  • Data processing instructions where the second source can be either an immediate value or a source register, with no shifts. The data processing instructions must include ADD, SUB, AND, ORR, BIC, and EOR. The Arithmetic Logic Unit (ALU) must be extended to support all these instructions but try to minimize the number of logic gates in the ALU as much as you can. • The LDR and STR instructions with positive immediate offset (offset mode). • Branch instruction  Also, the processor must handle the following hazards: • Read After Write (RAW) Hazard • LDR Hazard • Control Hazards due to Branch or PC write",0,kareemfarahat/32-bit-pipelined-ARM-processor,494885514,SystemVerilog,32-bit-pipelined-ARM-processor,176,0,2022-05-21 20:19:08+00:00,[],
9990,https://github.com/SteveLRojas/NeonFox_DE1.git,2022-05-18 02:21:34+00:00,NeonFox CPU and platform adapted to to the Terasic DE1 board.,0,SteveLRojas/NeonFox_DE1,493479517,SystemVerilog,NeonFox_DE1,383,0,2022-05-18 02:26:19+00:00,[],
9991,https://github.com/pantanag/Convolution-Accelerator-VLSI.git,2022-05-18 14:33:19+00:00,Optional Project for the course VLSI in the 8th semester of University.,1,pantanag/Convolution-Accelerator-VLSI,493700280,SystemVerilog,Convolution-Accelerator-VLSI,6359,0,2022-05-18 15:51:37+00:00,"['accelerator', 'convolution', 'systemverilog', 'vlsi']",
9992,https://github.com/AlexNguyenJJ/ece111-hw6.git,2022-05-21 07:06:14+00:00,,0,AlexNguyenJJ/ece111-hw6,494707603,SystemVerilog,ece111-hw6,7,0,2022-05-21 07:08:46+00:00,[],
9993,https://github.com/yoav-git/HDL.git,2022-05-31 12:58:30+00:00,System Verilog,0,yoav-git/HDL,498336877,SystemVerilog,HDL,136,0,2022-05-31 14:22:02+00:00,[],
9994,https://github.com/muzammil002/Verilog_Lab.git,2022-05-31 09:29:39+00:00,,0,muzammil002/Verilog_Lab,498270014,SystemVerilog,Verilog_Lab,12903,0,2022-05-31 09:33:22+00:00,[],
9995,https://github.com/qianlinxyc/clk_uvc.git,2022-06-18 02:45:27+00:00,,0,qianlinxyc/clk_uvc,504726717,SystemVerilog,clk_uvc,2,0,2022-06-18 02:46:46+00:00,[],
9996,https://github.com/sasonii/digitalsystems_tests_spring2022_ex2.git,2022-06-19 07:16:32+00:00,digitalsystems_tests_spring2022,0,sasonii/digitalsystems_tests_spring2022_ex2,505038771,SystemVerilog,digitalsystems_tests_spring2022_ex2,4,0,2022-06-19 07:17:18+00:00,[],
9997,https://github.com/anhdv0/KTMT_RISCV.git,2022-06-28 17:40:08+00:00,,0,anhdv0/KTMT_RISCV,508398046,SystemVerilog,KTMT_RISCV,3948,0,2022-06-28 17:40:31+00:00,[],
9998,https://github.com/tarun-prakash/PSD_CHIP_V2.git,2022-07-06 20:21:39+00:00,,0,tarun-prakash/PSD_CHIP_V2,511281040,SystemVerilog,PSD_CHIP_V2,56,0,2022-07-06 20:22:53+00:00,[],
9999,https://github.com/JamesEdgeley/FPGA.git,2022-07-26 11:03:31+00:00,,0,JamesEdgeley/FPGA,518025460,SystemVerilog,FPGA,1,0,2022-07-26 11:03:38+00:00,[],
10000,https://github.com/versonforgit/learn-systemverilog.git,2022-07-13 01:31:49+00:00,验证,0,versonforgit/learn-systemverilog,513342791,SystemVerilog,learn-systemverilog,15,0,2022-08-03 11:47:05+00:00,[],
10001,https://github.com/diogoasilveira/LOAC-UFCG.git,2022-06-07 14:40:06+00:00,Repositório para as atividades da disciplina de LOAC do curso de Ciência da Computação da UFCG,0,diogoasilveira/LOAC-UFCG,500879788,SystemVerilog,LOAC-UFCG,90,0,2023-01-11 00:18:19+00:00,[],
10002,https://github.com/millfi/CPU-RV32I.git,2022-06-03 08:59:08+00:00,,0,millfi/CPU-RV32I,499444773,SystemVerilog,CPU-RV32I,483,0,2023-08-18 08:47:58+00:00,[],https://api.github.com/licenses/unlicense
10003,https://github.com/orzelAr3k/FPGA-procesor.git,2022-06-03 10:39:53+00:00,,0,orzelAr3k/FPGA-procesor,499472824,SystemVerilog,FPGA-procesor,216,0,2022-06-03 10:48:30+00:00,[],
10004,https://github.com/MrShelDie/Cordic.git,2022-06-07 01:59:40+00:00,"Two implementations of the Cordic algorithm for fast calculation of sine and cosine on FPGAs: the first - by iterative method, the second - using pipelines.",0,MrShelDie/Cordic,500655305,SystemVerilog,Cordic,7,0,2022-06-07 02:01:30+00:00,[],
10005,https://github.com/c28504693/HW5-PRPG.git,2022-06-11 12:24:36+00:00,,0,c28504693/HW5-PRPG,502341479,SystemVerilog,HW5-PRPG,1,0,2022-06-11 12:25:49+00:00,[],
10006,https://github.com/lixing865/FPGA_072.git,2022-06-06 07:14:05+00:00,проект для ПЛИС,0,lixing865/FPGA_072,500329707,,FPGA_072,2033221,0,2022-07-15 13:20:08+00:00,[],
10007,https://github.com/PaulManriquez/MIPS-Monocycle-18-08-22.git,2022-08-18 21:01:23+00:00,,0,PaulManriquez/MIPS-Monocycle-18-08-22,526371709,SystemVerilog,MIPS-Monocycle-18-08-22,1559,0,2022-08-18 21:04:57+00:00,[],
10008,https://github.com/tzchuen/sample-verilog.git,2022-07-21 18:25:04+00:00,,0,tzchuen/sample-verilog,516480217,SystemVerilog,sample-verilog,2717,0,2022-07-21 18:31:21+00:00,[],
10009,https://github.com/silicanet/opentitan.git,2022-07-07 14:23:01+00:00,,0,silicanet/opentitan,511558129,SystemVerilog,opentitan,57644,0,2022-07-07 17:12:08+00:00,[],https://api.github.com/licenses/apache-2.0
10010,https://github.com/luizademelo/TP-ISL-2022-1.git,2022-07-21 14:52:22+00:00,Trabalho realizado na disciplina de Introdução aos Sistemas Lógicos em 2022/1,0,luizademelo/TP-ISL-2022-1,516413236,SystemVerilog,TP-ISL-2022-1,0,0,2022-07-21 14:53:51+00:00,[],
10011,https://github.com/AP090/AtomicSoC.git,2022-08-02 19:09:00+00:00,An FPGA-based control system for atomic physics experiments. Principal credit to Will Lunden.,0,AP090/AtomicSoC,520619798,SystemVerilog,AtomicSoC,180132,0,2022-08-03 17:16:08+00:00,[],
10012,https://github.com/ZongzeL/NPU_v2_work.git,2022-08-15 21:07:40+00:00,,0,ZongzeL/NPU_v2_work,525139356,SystemVerilog,NPU_v2_work,87,0,2022-08-27 02:23:34+00:00,[],
10013,https://github.com/merajhasan88/jpegdecoder-systemverilog.git,2022-08-26 15:12:22+00:00,JPEG Decoder in SystemVerilog,0,merajhasan88/jpegdecoder-systemverilog,529305335,SystemVerilog,jpegdecoder-systemverilog,256,0,2022-08-26 15:17:01+00:00,[],
10014,https://github.com/imjp2020/UVM-Learning.git,2022-08-27 09:36:21+00:00,Universal Verification Methodology basics,0,imjp2020/UVM-Learning,529541383,SystemVerilog,UVM-Learning,14,0,2022-09-22 15:32:13+00:00,[],https://api.github.com/licenses/mit
10015,https://github.com/Andrew-Makin/Frogger.git,2022-08-25 00:49:33+00:00,Frogger game I built in System Verilog for Intro to Digital Design at the University of Washington,0,Andrew-Makin/Frogger,528643181,SystemVerilog,Frogger,4332,0,2022-08-25 00:51:08+00:00,[],
10016,https://github.com/UandersonSilva/floating_point.git,2022-09-20 13:33:03+00:00,Development of floating point devices in SystemVerilog.,0,UandersonSilva/floating_point,539005488,SystemVerilog,floating_point,997,0,2023-01-07 15:22:24+00:00,[],
10017,https://github.com/dh73/MaskMyBit.git,2022-09-04 19:34:42+00:00,Boolean Masking Implementation Sandbox Examples,0,dh73/MaskMyBit,532638997,SystemVerilog,MaskMyBit,4694,0,2022-09-04 19:36:43+00:00,[],
10018,https://github.com/PhenomIIX6/PhenomIIX6.git,2022-09-01 03:30:52+00:00,Config files for my GitHub profile.,0,PhenomIIX6/PhenomIIX6,531349402,SystemVerilog,PhenomIIX6,10,0,2022-09-01 03:36:11+00:00,"['config', 'github-config']",
10019,https://github.com/Moizali21/100-Days-Of-RTL---SV-.git,2022-09-07 07:32:35+00:00,I am using System Verilog Language  ,0,Moizali21/100-Days-Of-RTL---SV-,533656709,SystemVerilog,100-Days-Of-RTL---SV-,11,0,2022-09-08 09:33:39+00:00,[],
10020,https://github.com/Carlos12001/gray_code_decoder.git,2022-09-22 20:39:35+00:00,"This project contain the source code in Vivado of a decode the Gray coding. This project will be implement in a FPGA, and this will be show the number in bin and in hex value.",0,Carlos12001/gray_code_decoder,540161934,SystemVerilog,gray_code_decoder,396,0,2022-10-13 19:16:21+00:00,[],
10021,https://github.com/nipulkumar-11/ivl_uvm_dir_wise.git,2022-09-23 14:07:06+00:00,,0,nipulkumar-11/ivl_uvm_dir_wise,540470062,SystemVerilog,ivl_uvm_dir_wise,1818,0,2022-09-23 14:07:31+00:00,[],
10022,https://github.com/Montuck/UART-Digital-Circuit.git,2022-09-23 20:28:51+00:00,,0,Montuck/UART-Digital-Circuit,540606941,SystemVerilog,UART-Digital-Circuit,23,0,2022-09-30 20:41:52+00:00,[],
10023,https://github.com/Ckkyo/DPSK.git,2022-09-15 03:10:57+00:00,,0,Ckkyo/DPSK,536845535,SystemVerilog,DPSK,774,0,2022-09-15 03:59:23+00:00,[],
10024,https://github.com/01fe21mve004/01FE21MVEOO4-ADLV.git,2022-09-13 06:12:01+00:00,ADLV,0,01fe21mve004/01FE21MVEOO4-ADLV,535983600,SystemVerilog,01FE21MVEOO4-ADLV,50,0,2022-09-13 06:14:30+00:00,[],
10025,https://github.com/IvanRenison/Practico1_arquitectura_de_computadoras__SingleCycleProcessor.git,2022-08-27 21:23:53+00:00,,0,IvanRenison/Practico1_arquitectura_de_computadoras__SingleCycleProcessor,529699906,SystemVerilog,Practico1_arquitectura_de_computadoras__SingleCycleProcessor,111,0,2023-08-30 12:12:39+00:00,[],
10026,https://github.com/MUBEENAUQI/Verilog_programs.git,2022-09-07 19:30:07+00:00,Learning verilog programs,0,MUBEENAUQI/Verilog_programs,533911749,SystemVerilog,Verilog_programs,23,0,2022-09-07 19:32:25+00:00,[],
10027,https://github.com/bwtinplace/bwtinplace.git,2022-08-30 14:02:42+00:00,Hardware implementation for Burrows-Wheeler transform in O(1) space.,0,bwtinplace/bwtinplace,530683530,SystemVerilog,bwtinplace,5,0,2022-09-02 21:31:24+00:00,[],
10028,https://github.com/reigenatk/385-week-5.git,2022-09-18 17:41:47+00:00,week 5 part 1 save point,0,reigenatk/385-week-5,538190025,SystemVerilog,385-week-5,25,0,2023-04-11 22:07:16+00:00,[],
10029,https://github.com/FTBF/ITA-BPM-firmware.git,2022-09-09 16:29:28+00:00,,0,FTBF/ITA-BPM-firmware,534720645,SystemVerilog,ITA-BPM-firmware,167,0,2022-09-16 22:27:46+00:00,[],
10030,https://github.com/ALTair700/SV_For_Design.git,2022-09-12 07:49:45+00:00,Training Book,0,ALTair700/SV_For_Design,535562494,SystemVerilog,SV_For_Design,2,0,2022-09-21 11:55:37+00:00,[],
10031,https://github.com/JelluJane/fpga.git,2022-06-22 22:32:52+00:00,,0,JelluJane/fpga,506424627,SystemVerilog,fpga,17254,0,2022-07-31 16:25:28+00:00,[],
10032,https://github.com/poorvi01w/Car_Parking_system.git,2022-07-14 14:21:59+00:00,,0,poorvi01w/Car_Parking_system,513930891,SystemVerilog,Car_Parking_system,4,0,2022-07-14 14:24:10+00:00,[],
10033,https://github.com/Atm06/Project_Traffic-lights-Simlator.git,2022-08-02 04:29:52+00:00,,0,Atm06/Project_Traffic-lights-Simlator,520351112,SystemVerilog,Project_Traffic-lights-Simlator,4,0,2022-08-02 04:30:51+00:00,[],https://api.github.com/licenses/mit
10034,https://github.com/piyushagrawal4578/branching1.git,2022-08-11 06:04:13+00:00,,0,piyushagrawal4578/branching1,523604527,SystemVerilog,branching1,3,0,2022-08-11 10:34:52+00:00,[],
10035,https://github.com/kochaika/verilog-demo.git,2022-09-20 11:47:33+00:00,,0,kochaika/verilog-demo,538961045,SystemVerilog,verilog-demo,4,0,2022-09-20 11:48:31+00:00,[],
10036,https://github.com/Aser-Abdelfatah/Single-Precision-Floating-Point-Multiplier.git,2022-09-03 23:47:28+00:00,"Design, implementation, and testing of a single precision floating point multiplier",0,Aser-Abdelfatah/Single-Precision-Floating-Point-Multiplier,532398157,SystemVerilog,Single-Precision-Floating-Point-Multiplier,157,0,2024-02-29 12:50:31+00:00,[],
10037,https://github.com/HITSZ-NSCSCC22/OpenSource-LA32-CPU.git,2022-08-22 08:27:25+00:00,CPU based on LoongArch32 which was made by 404 not found  from HITSZ ,0,HITSZ-NSCSCC22/OpenSource-LA32-CPU,527475317,SystemVerilog,OpenSource-LA32-CPU,452,0,2024-03-26 06:22:06+00:00,[],
10038,https://github.com/brucexi999/UBC-CPEN-211.git,2022-06-13 17:22:49+00:00,,0,brucexi999/UBC-CPEN-211,503050489,SystemVerilog,UBC-CPEN-211,32714,0,2024-04-03 18:26:05+00:00,[],
10039,https://github.com/ptrvsrg/NSU-digital-design.git,2022-05-26 12:18:24+00:00,"Итоговый проект дисциплины ""Цифровая схемотехника"" 2 семестра ФИТ НГУ",0,ptrvsrg/NSU-digital-design,496608562,SystemVerilog,NSU-digital-design,1363,0,2023-08-16 13:16:44+00:00,[],https://api.github.com/licenses/mit
10040,https://github.com/kaz778/CNN_Hardware.git,2022-05-25 06:37:38+00:00,,0,kaz778/CNN_Hardware,496111777,SystemVerilog,CNN_Hardware,70,0,2022-11-09 08:46:08+00:00,[],
10041,https://github.com/andrewboutros/npu-2.0.git,2022-08-03 12:48:35+00:00,,0,andrewboutros/npu-2.0,520878031,SystemVerilog,npu-2.0,11,0,2022-08-03 12:51:46+00:00,[],https://api.github.com/licenses/mit
10042,https://github.com/MinhTran0911/UART_DE10.git,2022-07-30 14:44:31+00:00,UART Receiver and Transmitter using Terasic DE-10 Standard FPGA,0,MinhTran0911/UART_DE10,519542037,SystemVerilog,UART_DE10,18599,0,2022-08-06 08:10:36+00:00,"['systemverilog', 'altera-fpga', 'hardware-description-language', 'hdl', 'modelsim', 'quartus-prime', 'uart', 'terasic-de10-standard']",
10043,https://github.com/NermeenMohammed-M/FFT.git,2022-08-04 18:53:11+00:00,,0,NermeenMohammed-M/FFT,521381712,SystemVerilog,FFT,3,0,2022-08-04 18:55:54+00:00,[],
10044,https://github.com/ishmemon/EE-271-Digital-Circuits-and-Systems.git,2022-06-13 01:37:17+00:00,These are the projects I created for UW's EE 271 course.,0,ishmemon/EE-271-Digital-Circuits-and-Systems,502770784,SystemVerilog,EE-271-Digital-Circuits-and-Systems,76,0,2022-06-13 01:43:18+00:00,[],
10045,https://github.com/shaarawy29/ALU_tb.git,2022-08-07 22:54:41+00:00,,0,shaarawy29/ALU_tb,522342878,SystemVerilog,ALU_tb,53,0,2022-08-16 23:27:50+00:00,[],
10046,https://github.com/Anshuman0029/Task.git,2022-08-06 16:11:49+00:00,,0,Anshuman0029/Task,521994068,SystemVerilog,Task,20,0,2022-08-06 16:15:45+00:00,[],
10047,https://github.com/JZJisawesome/vgacpu.git,2022-07-02 14:16:12+00:00,"A small core implementing a custom ISA running on the same clock as a VGA driver. Written in SV, with the purpose of refreshing myself on how to use the HDL (I'm a bit rusty :))",0,JZJisawesome/vgacpu,509774251,SystemVerilog,vgacpu,1157,0,2022-08-14 15:49:57+00:00,[],https://api.github.com/licenses/mit
10048,https://github.com/Benisneb/RISC_16b_Proof_Of_Concept.git,2022-07-26 18:32:21+00:00,,0,Benisneb/RISC_16b_Proof_Of_Concept,518175990,SystemVerilog,RISC_16b_Proof_Of_Concept,3791,0,2022-07-26 19:15:47+00:00,[],
10049,https://github.com/alexc0888/fourBitGreaterThanComparator.git,2022-07-29 06:02:51+00:00,Four Bit Greater Than Magnitude Comparator built in System Verilog at the Gate Level,0,alexc0888/fourBitGreaterThanComparator,519098747,SystemVerilog,fourBitGreaterThanComparator,17,0,2022-07-29 06:07:18+00:00,[],
10050,https://github.com/RookieLT/lukeverif.git,2022-07-27 13:43:50+00:00,,0,RookieLT/lukeverif,518475311,SystemVerilog,lukeverif,22892,0,2022-07-27 13:53:14+00:00,[],
10051,https://github.com/supreetgulavani/SystemVerilog_Projects.git,2022-07-10 23:26:09+00:00,,0,supreetgulavani/SystemVerilog_Projects,512561136,SystemVerilog,SystemVerilog_Projects,1815,0,2022-07-10 23:37:40+00:00,[],
10052,https://github.com/SkyWalker0006/AHB-Lite-Slave-VIP.git,2022-07-15 03:46:22+00:00,,0,SkyWalker0006/AHB-Lite-Slave-VIP,514125435,,AHB-Lite-Slave-VIP,20,0,2022-03-06 10:03:28+00:00,[],
10053,https://github.com/Alireza-Zwolf/MIPS-PROCESSOR.git,2022-07-13 11:13:26+00:00,An Implementation of MIPS processor with single/multi-cycle architecture using SystemVerilog language.,0,Alireza-Zwolf/MIPS-PROCESSOR,513489957,SystemVerilog,MIPS-PROCESSOR,1850,0,2022-09-19 16:47:51+00:00,"['hardware-designs', 'hdl', 'mips', 'mips-assembly', 'processor-architecture', 'system-verilog', 'verilog', 'verilog-hdl']",
10054,https://github.com/a29712049/BCD-To-7.git,2022-06-27 02:46:28+00:00,,0,a29712049/BCD-To-7,507741572,SystemVerilog,BCD-To-7,43,0,2022-06-27 02:46:50+00:00,[],
10055,https://github.com/IgDROP/Universal-modulator.git,2022-06-28 18:11:59+00:00,,0,IgDROP/Universal-modulator,508407643,SystemVerilog,Universal-modulator,6,0,2022-11-26 12:33:57+00:00,[],
10056,https://github.com/mk-khalil/pipelined-ARM-processor-using-system-Verilog.git,2022-06-27 10:14:32+00:00,"In this project, pipelined ARM processor is implemented using system Verilog, and it supports data processing, memory, and branch instructions. It also handles all the necessary hazards.",0,mk-khalil/pipelined-ARM-processor-using-system-Verilog,507858928,SystemVerilog,pipelined-ARM-processor-using-system-Verilog,8,0,2022-06-27 10:16:54+00:00,[],
10057,https://github.com/henriqueeraraujo/Projeto_Concepcao_Estruturada_02.git,2022-06-01 13:38:49+00:00,Projeto da Unidade 02 da disciplina Concepção Estruturada de Circuitos Integrados,0,henriqueeraraujo/Projeto_Concepcao_Estruturada_02,498751491,SystemVerilog,Projeto_Concepcao_Estruturada_02,6,0,2022-06-01 14:14:15+00:00,[],
10058,https://github.com/cristian-grecu/ELEC391-mem-tutorial-exercise.git,2022-05-18 21:48:07+00:00,Quartus memory tutorial,0,cristian-grecu/ELEC391-mem-tutorial-exercise,493835090,SystemVerilog,ELEC391-mem-tutorial-exercise,186,0,2022-05-25 18:10:28+00:00,[],
10059,https://github.com/neekoli/pulp_soc_neeko.git,2022-05-17 08:55:09+00:00,,0,neekoli/pulp_soc_neeko,493171186,SystemVerilog,pulp_soc_neeko,111,0,2022-05-17 08:56:42+00:00,[],
10060,https://github.com/whitewalker08/AXI_4_STREAM.git,2022-06-09 01:11:49+00:00,,1,whitewalker08/AXI_4_STREAM,501460964,SystemVerilog,AXI_4_STREAM,64,0,2022-06-09 02:08:20+00:00,[],
10061,https://github.com/Darcywantloli/BCD-counter.git,2022-06-06 06:02:05+00:00,,0,Darcywantloli/BCD-counter,500310664,SystemVerilog,BCD-counter,2,0,2022-06-06 06:03:30+00:00,[],
10062,https://github.com/MidhunNair43/Graph_Convolution_Neural_Network.git,2022-06-18 07:12:45+00:00,ASIC Acceleration for Graph Convolutional Neural Networks (GCNs) ,0,MidhunNair43/Graph_Convolution_Neural_Network,504772221,SystemVerilog,Graph_Convolution_Neural_Network,612,0,2022-06-23 16:15:49+00:00,[],
10063,https://github.com/smithtanium/Bitcoin-sha256hash.git,2022-06-19 18:58:33+00:00,,0,smithtanium/Bitcoin-sha256hash,505195266,SystemVerilog,Bitcoin-sha256hash,4882,0,2022-06-19 19:05:54+00:00,[],
10064,https://github.com/agithubber777/terasic_de2_115.git,2022-05-31 07:55:54+00:00,Terasic DE2-115 Board,0,agithubber777/terasic_de2_115,498240017,SystemVerilog,terasic_de2_115,24,0,2022-05-31 09:13:14+00:00,[],https://api.github.com/licenses/gpl-3.0
10065,https://github.com/MelikaMinaei/Digital-Systems-CA-2.git,2022-06-19 00:16:25+00:00,,0,MelikaMinaei/Digital-Systems-CA-2,504977241,SystemVerilog,Digital-Systems-CA-2,728,0,2023-11-03 02:41:49+00:00,[],
10066,https://github.com/szhao2095/pulp_FSI.git,2022-07-13 01:20:36+00:00,,0,szhao2095/pulp_FSI,513340383,SystemVerilog,pulp_FSI,25,0,2022-07-22 16:06:50+00:00,[],
10067,https://github.com/MidhunNair43/APB_UVM.git,2022-07-09 16:01:01+00:00,Advanced Peripheral Bus,0,MidhunNair43/APB_UVM,512227365,SystemVerilog,APB_UVM,8,0,2022-07-09 17:52:28+00:00,[],
10068,https://github.com/sam10486/NWC_verilog_backup.git,2022-07-20 06:17:46+00:00,,0,sam10486/NWC_verilog_backup,515857900,SystemVerilog,NWC_verilog_backup,1869,0,2022-08-16 15:44:43+00:00,[],
10069,https://github.com/abhishek-pwr/SystemVerilog.git,2022-07-20 08:57:02+00:00,RTL code for Logic Block IPs in System Verilog  ,0,abhishek-pwr/SystemVerilog,515906552,SystemVerilog,SystemVerilog,1,0,2022-07-20 08:59:41+00:00,[],
10070,https://github.com/10RE/VE470_Superscalar.git,2022-07-04 02:06:03+00:00,,1,10RE/VE470_Superscalar,510182466,SystemVerilog,VE470_Superscalar,900,0,2022-07-12 21:13:00+00:00,[],
10071,https://github.com/zdr1999/AHB2APB.git,2022-07-05 16:33:25+00:00,,0,zdr1999/AHB2APB,510815650,SystemVerilog,AHB2APB,27,0,2022-07-05 16:51:13+00:00,[],
10072,https://github.com/ddsff/Code.git,2022-07-11 15:08:10+00:00,,0,ddsff/Code,512804329,SystemVerilog,Code,794,0,2022-07-11 15:08:37+00:00,[],
10073,https://github.com/mitshine/FIFO_BFM_WITH_MAKEFILE.git,2022-07-21 16:18:28+00:00,,0,mitshine/FIFO_BFM_WITH_MAKEFILE,516442214,SystemVerilog,FIFO_BFM_WITH_MAKEFILE,9,0,2022-07-21 16:23:31+00:00,[],
10074,https://github.com/anmehta4/E-Bike-Simulator.git,2022-08-26 21:19:46+00:00,,0,anmehta4/E-Bike-Simulator,529407769,SystemVerilog,E-Bike-Simulator,31186,0,2022-08-26 22:26:23+00:00,[],
10075,https://github.com/Luckman21/misc-verilog-projects.git,2022-09-03 03:36:32+00:00,,0,Luckman21/misc-verilog-projects,532145665,SystemVerilog,misc-verilog-projects,6,0,2022-09-03 03:49:10+00:00,[],
10076,https://github.com/mitshine/clock-period-assertion-check.git,2022-09-09 08:25:31+00:00,clock period realtime assertion check,0,mitshine/clock-period-assertion-check,534560476,SystemVerilog,clock-period-assertion-check,9,0,2022-09-09 08:27:48+00:00,[],
10077,https://github.com/naveen0215/Array_manipulation.git,2022-09-21 04:16:08+00:00,presentation,0,naveen0215/Array_manipulation,539300653,SystemVerilog,Array_manipulation,1,0,2022-09-21 04:29:54+00:00,[],
10078,https://github.com/shaswat2428/UART-Communication-Protocol.git,2022-09-22 18:46:14+00:00,,0,shaswat2428/UART-Communication-Protocol,540123643,SystemVerilog,UART-Communication-Protocol,8,0,2022-09-23 10:09:04+00:00,[],
10079,https://github.com/luophoe/UVM-projects.git,2022-09-22 21:33:53+00:00,,0,luophoe/UVM-projects,540177588,SystemVerilog,UVM-projects,20365,0,2022-09-22 22:17:28+00:00,[],
10080,https://github.com/Anshuman0029/Task4_Credit.git,2022-08-31 15:24:28+00:00,,0,Anshuman0029/Task4_Credit,531143356,SystemVerilog,Task4_Credit,1,0,2022-08-31 15:25:04+00:00,[],
10081,https://github.com/jhladik/icestick-playground.git,2022-09-04 03:04:01+00:00,,0,jhladik/icestick-playground,532424769,SystemVerilog,icestick-playground,42,0,2022-11-04 15:01:25+00:00,[],https://api.github.com/licenses/gpl-3.0
10082,https://github.com/melody16843/dclab.git,2022-09-15 06:17:00+00:00,,0,melody16843/dclab,536889445,SystemVerilog,dclab,12358,0,2023-02-20 13:04:36+00:00,[],
10083,https://github.com/sagarpattar05/new4.git,2022-09-16 04:50:03+00:00,,0,sagarpattar05/new4,537308975,SystemVerilog,new4,1,0,2022-09-16 04:57:59+00:00,[],
10084,https://github.com/Caoyuanzhi/ZAP_learn.git,2022-09-16 14:43:03+00:00,,0,Caoyuanzhi/ZAP_learn,537498898,SystemVerilog,ZAP_learn,160,0,2022-09-16 14:45:01+00:00,[],
10085,https://github.com/AladinF/Sobel-Operator.git,2022-09-10 18:54:46+00:00,Applying a Sobel operator to a black and white OV7670 output,0,AladinF/Sobel-Operator,535090892,SystemVerilog,Sobel-Operator,32,0,2022-09-11 16:45:03+00:00,[],
10086,https://github.com/sg-vlsi-experiment/riscv.git,2022-08-17 05:07:49+00:00,,0,sg-vlsi-experiment/riscv,525647234,SystemVerilog,riscv,11,0,2024-01-27 01:10:01+00:00,[],
10087,https://github.com/DarrenWu42/cse141l-processor.git,2022-06-11 09:24:19+00:00,Full custom processor with custom assembly language,0,DarrenWu42/cse141l-processor,502304038,SystemVerilog,cse141l-processor,21,0,2024-01-31 23:47:54+00:00,[],
10088,https://github.com/padung99/Metrotek_LAB2.git,2022-07-01 19:28:38+00:00,,0,padung99/Metrotek_LAB2,509568015,SystemVerilog,Metrotek_LAB2,431,0,2022-07-08 00:25:42+00:00,[],
10089,https://github.com/Lvwings/axi-udp-protocol.git,2022-06-28 02:44:21+00:00,,0,Lvwings/axi-udp-protocol,508131367,SystemVerilog,axi-udp-protocol,28,0,2022-08-26 08:01:10+00:00,[],
10090,https://github.com/chen-ian-rong/HW-3.git,2022-06-26 19:07:33+00:00,,0,chen-ian-rong/HW-3,507661783,SystemVerilog,HW-3,1,0,2022-06-26 19:08:17+00:00,[],
10091,https://github.com/Karthikeyan564/fantastic-octo-waddle.git,2022-06-28 00:20:22+00:00,,0,Karthikeyan564/fantastic-octo-waddle,508101009,SystemVerilog,fantastic-octo-waddle,7539,0,2022-06-28 00:22:17+00:00,[],
10092,https://github.com/chen-ian-rong/logic-.git,2022-06-26 14:05:50+00:00,,0,chen-ian-rong/logic-,507590707,SystemVerilog,logic-,20,0,2022-06-26 18:14:55+00:00,[],
10093,https://github.com/WikkiTang/HDLBits-Verilog-Practice.git,2022-07-07 02:44:49+00:00,Codes and notes for HDLBits,0,WikkiTang/HDLBits-Verilog-Practice,511360555,SystemVerilog,HDLBits-Verilog-Practice,107,0,2022-07-14 16:34:24+00:00,[],
10094,https://github.com/albingomes/crc.git,2022-07-07 03:27:26+00:00,,0,albingomes/crc,511369514,SystemVerilog,crc,8,0,2022-07-07 03:36:55+00:00,[],
10095,https://github.com/kkurenkov/uvm_fifo.git,2022-05-19 19:39:36+00:00,example project with fifo VIP,0,kkurenkov/uvm_fifo,494206955,SystemVerilog,uvm_fifo,15,0,2022-05-19 20:29:48+00:00,[],
10096,https://github.com/marwanharuna/2-stage_Caesar_Cipher.git,2022-07-10 11:16:24+00:00,,0,marwanharuna/2-stage_Caesar_Cipher,512414839,SystemVerilog,2-stage_Caesar_Cipher,2586,0,2022-07-10 11:21:26+00:00,[],
10097,https://github.com/cipressino/244_adcechodac.git,2022-07-04 13:48:15+00:00,,0,cipressino/244_adcechodac,510377404,SystemVerilog,244_adcechodac,10,0,2022-07-04 13:49:23+00:00,[],
10098,https://github.com/palmenros/swervolf-soc.git,2022-06-24 11:17:03+00:00,Swervolf SOC,0,palmenros/swervolf-soc,506982268,SystemVerilog,swervolf-soc,507,0,2022-06-24 11:17:21+00:00,[],
10099,https://github.com/alexander459/FPGA-Maze-Video-Game.git,2022-06-16 14:13:37+00:00,,0,alexander459/FPGA-Maze-Video-Game,504182297,SystemVerilog,FPGA-Maze-Video-Game,9,0,2022-06-16 14:14:47+00:00,[],
10100,https://github.com/eminakgun/axis_vip.git,2022-07-10 11:11:45+00:00,AXI Stream VIP,0,eminakgun/axis_vip,512413929,SystemVerilog,axis_vip,103,0,2023-05-13 08:14:15+00:00,[],https://api.github.com/licenses/gpl-3.0
10101,https://github.com/tallerditigales/proyecto_final.git,2022-05-14 03:33:09+00:00,Proyecto Final Procesamiento_de_texto,0,tallerditigales/proyecto_final,492102780,SystemVerilog,proyecto_final,4444,0,2022-11-23 22:56:01+00:00,[],
10102,https://github.com/LiamK-Technion/DigSystems_sim1.git,2022-05-12 18:42:25+00:00,"Digital Systems and Computer Structure, Simulation 1, Spring 2022",0,LiamK-Technion/DigSystems_sim1,491630322,SystemVerilog,DigSystems_sim1,1135,0,2022-05-13 11:48:05+00:00,"['alu-digital-circuit', 'full-adder', 'mux']",
10103,https://github.com/comsec-group/cellift-ibex.git,2022-06-09 08:19:39+00:00,The Ibex design frozen and instrumented for the CellIFT paper experiments,1,comsec-group/cellift-ibex,501565212,SystemVerilog,cellift-ibex,1516,0,2022-06-09 10:52:49+00:00,[],https://api.github.com/licenses/apache-2.0
10104,https://github.com/Aleksw3/eXtension-Inteface-Wrapper.git,2022-06-10 22:56:07+00:00,,0,Aleksw3/eXtension-Inteface-Wrapper,502200541,SystemVerilog,eXtension-Inteface-Wrapper,5,0,2022-06-10 23:04:53+00:00,[],
10105,https://github.com/ChrisShakkour/AI-risc-V-Hacakthon.git,2022-06-03 09:50:06+00:00,AI riscv-v hackathon competition development repository,0,ChrisShakkour/AI-risc-V-Hacakthon,499459208,SystemVerilog,AI-risc-V-Hacakthon,121908,0,2022-06-11 13:29:22+00:00,[],
10106,https://github.com/Claudio-Costanzo/HARDWARE-AND-EMBEDDED-SECURITY.git,2022-08-21 08:45:21+00:00,,0,Claudio-Costanzo/HARDWARE-AND-EMBEDDED-SECURITY,527151063,SystemVerilog,HARDWARE-AND-EMBEDDED-SECURITY,958,0,2022-08-21 09:48:43+00:00,[],
10107,https://github.com/OnurVural/Digital_Design_Works.git,2022-08-08 14:10:35+00:00,My works in regard to Digital_Design course of Bilkent University.,0,OnurVural/Digital_Design_Works,522576017,SystemVerilog,Digital_Design_Works,3800,0,2022-08-08 14:49:40+00:00,[],
10108,https://github.com/Felukov/HdlSamples.git,2022-08-08 06:30:28+00:00,,0,Felukov/HdlSamples,522431483,SystemVerilog,HdlSamples,18,0,2022-08-08 06:30:34+00:00,[],
10109,https://github.com/hakatu/Lab-5-sample.git,2022-08-10 03:48:57+00:00,,0,hakatu/Lab-5-sample,523191369,SystemVerilog,Lab-5-sample,1030,0,2022-11-11 08:47:16+00:00,[],
10110,https://github.com/Me-RajatChaudhary/Designs.git,2022-08-18 14:14:39+00:00,"Basic Combinational, Sequential Designs in Verilog/System Verilog",0,Me-RajatChaudhary/Designs,526240439,SystemVerilog,Designs,439,0,2022-08-18 14:16:00+00:00,[],
10111,https://github.com/MerciaReginasl/FPGA.sv.git,2022-07-26 14:24:07+00:00,Projeto Multiplexador 8x1 - Construção do Projeto testbench (TB) - Simulação utilizando o TB - Utilizando a plataforma EDAPlayground e Linguagem SystemVerilog para desenvolver o TB e DUV.,0,MerciaReginasl/FPGA.sv,518093330,SystemVerilog,FPGA.sv,8,0,2022-08-11 15:11:51+00:00,[],
10112,https://github.com/Karthikeyan564/pulp_soc.git,2022-07-29 07:48:51+00:00,,2,Karthikeyan564/pulp_soc,519127842,SystemVerilog,pulp_soc,107,0,2022-07-29 07:49:36+00:00,[],
10113,https://github.com/ahmadrmirzaei/AES.git,2022-08-04 08:54:41+00:00,,0,ahmadrmirzaei/AES,521193315,SystemVerilog,AES,858,0,2022-08-04 09:04:35+00:00,[],
10114,https://github.com/eacrawford02/lava-lamp.git,2022-08-03 01:06:49+00:00,Simulating a lava lamp in Verilog using metaballs.,0,eacrawford02/lava-lamp,520695407,SystemVerilog,lava-lamp,31459,0,2023-03-10 23:42:20+00:00,[],https://api.github.com/licenses/gpl-3.0
10115,https://github.com/RhysM95/SIT329.git,2022-08-02 05:11:25+00:00,,0,RhysM95/SIT329,520360068,SystemVerilog,SIT329,1,0,2022-08-02 05:12:57+00:00,[],
10116,https://github.com/HemanthVeeramalla/dummy.git,2022-08-03 12:25:26+00:00,,7,HemanthVeeramalla/dummy,520870651,SystemVerilog,dummy,37,0,2022-09-16 09:48:05+00:00,[],
10117,https://github.com/17862071195/Watchdog_Verify_UVM.git,2022-09-22 10:50:51+00:00,,0,17862071195/Watchdog_Verify_UVM,539932824,SystemVerilog,Watchdog_Verify_UVM,83,0,2022-09-22 11:13:32+00:00,[],
10118,https://github.com/sina-negarandeh/mips-pipeline-processor.git,2022-09-15 10:35:45+00:00,An implementation of the MIPS pipeline processor.,0,sina-negarandeh/mips-pipeline-processor,536977232,SystemVerilog,mips-pipeline-processor,8,0,2022-09-15 10:45:01+00:00,[],
10119,https://github.com/Sebusa/Arquitectura-de-Computadores.git,2022-09-14 00:07:48+00:00,Laboratorios de desarrollo de un procesador RISC-V para la materia arquitectura de computadores.,0,Sebusa/Arquitectura-de-Computadores,536350683,SystemVerilog,Arquitectura-de-Computadores,27344,0,2022-09-14 00:17:01+00:00,[],
10120,https://github.com/tparng/wide_alu_ip.git,2022-09-14 06:48:57+00:00,wide alu IP for pulpissimo,0,tparng/wide_alu_ip,536449460,SystemVerilog,wide_alu_ip,12,0,2022-09-14 07:13:00+00:00,[],
10121,https://github.com/jahnavivallivedu/Janu.git,2022-09-14 11:01:56+00:00,,0,jahnavivallivedu/Janu,536537299,SystemVerilog,Janu,16,0,2022-10-13 10:28:58+00:00,[],
10122,https://github.com/vineethkumarv/vk.git,2022-09-14 11:30:51+00:00,,0,vineethkumarv/vk,536547251,SystemVerilog,vk,30604,0,2022-12-23 04:58:26+00:00,[],
10123,https://github.com/minecraftdixit/system-verilog-.git,2022-08-27 19:54:56+00:00,sv practice codes,0,minecraftdixit/system-verilog-,529683680,SystemVerilog,system-verilog-,4,0,2022-08-27 19:58:25+00:00,[],
10124,https://github.com/dsepko/single-cycle-risc.git,2022-08-13 02:57:05+00:00,,0,dsepko/single-cycle-risc,524284093,SystemVerilog,single-cycle-risc,6,0,2022-08-13 02:59:24+00:00,[],
10125,https://github.com/mitshine/tutorials-on-UVM-and-RAL.git,2022-09-02 12:01:45+00:00,examples for UVM and RAL model from candy lovers,0,mitshine/tutorials-on-UVM-and-RAL,531908206,SystemVerilog,tutorials-on-UVM-and-RAL,129,0,2022-09-02 12:05:10+00:00,[],
10126,https://github.com/Angelaangie-ai/ece212_angela_laxman.git,2022-08-30 12:10:53+00:00,,0,Angelaangie-ai/ece212_angela_laxman,530640695,SystemVerilog,ece212_angela_laxman,5621,0,2023-08-06 02:35:16+00:00,[],
10127,https://github.com/PaulManriquez/R_Instruction_MIPS.git,2022-08-03 02:05:40+00:00,,0,PaulManriquez/R_Instruction_MIPS,520706960,SystemVerilog,R_Instruction_MIPS,585,0,2022-08-03 02:14:04+00:00,[],
10128,https://github.com/mrutunjaynalwad/MSD.git,2022-09-16 04:29:16+00:00,,3,mrutunjaynalwad/MSD,537304588,SystemVerilog,MSD,118,0,2023-07-03 08:01:16+00:00,[],
10129,https://github.com/tharunenamala/sarada_from_gopal.git,2022-09-16 09:42:23+00:00,for fum,0,tharunenamala/sarada_from_gopal,537395326,SystemVerilog,sarada_from_gopal,15,0,2022-10-03 09:06:01+00:00,[],
10130,https://github.com/DJosueMM/GrayDecoder.git,2022-09-13 14:49:10+00:00,Desarrollo de un circuito decodificador de Gray por medio del HDL SystemVerilog,1,DJosueMM/GrayDecoder,536174840,SystemVerilog,GrayDecoder,512,0,2024-02-18 20:24:50+00:00,"['decoder', 'fpga-board', 'hdl', 'systemverilog', 'testbench']",
10131,https://github.com/agg23/openfpga-NES.git,2022-09-26 00:20:07+00:00,NES for the Analogue Pocket,7,agg23/openfpga-NES,541348592,SystemVerilog,openfpga-NES,5733,184,2024-04-13 00:53:14+00:00,"['analogue-pocket', 'fpga', 'nes', 'openfpga']",https://api.github.com/licenses/gpl-3.0
10132,https://github.com/agg23/openfpga-pokemonmini.git,2022-10-13 23:53:41+00:00,,1,agg23/openfpga-pokemonmini,551161523,SystemVerilog,openfpga-pokemonmini,465,33,2024-02-04 22:06:54+00:00,[],https://api.github.com/licenses/gpl-2.0
10133,https://github.com/qleenju/PDPU.git,2022-11-13 05:28:18+00:00,PDPU: An Open-Source Posit Dot-Product Unit for Deep Learning Applications,7,qleenju/PDPU,565351027,SystemVerilog,PDPU,1562,30,2024-02-13 05:29:46+00:00,"['dot-product', 'posit', 'posit-arithmetic', 'posit-arithmetic-generator', 'unum', 'arithmetic-units', 'mixed-precision', 'systemverilog']",https://api.github.com/licenses/apache-2.0
10134,https://github.com/snbk001/100DaysofRTL.git,2022-09-28 14:45:41+00:00,"100DaysofRTL & System Verilog design: basic logic gates, mux, half/full subtractor, Encoder, D flipflop, 8 bit counter, LFSR, Custom Counter, Mux using case, JK flip flop, T flip flop, positive edge detection, Priority encoder, Barrel shifter, Signed Magnitude adder, Free Running Counter, Mod-m Counter, Edge Detector mealy Moore",3,snbk001/100DaysofRTL,542641001,SystemVerilog,100DaysofRTL,123,25,2024-02-16 18:22:56+00:00,"['makefile', 'systemverilog', 'testbench', 'rtl-design', 'verilog', 'synthesis', 'hdl', 'systemverilog-hdl', 'systemverilog-simulation', 'systemverilog-test-bench', 'edge-detector-with-mealy']",
10135,https://github.com/mbits-mirafra/UVMCourse.git,2022-10-25 09:51:49+00:00,Structured UVM Course,7,mbits-mirafra/UVMCourse,557223896,SystemVerilog,UVMCourse,23769,24,2024-03-07 14:54:25+00:00,[],
10136,https://github.com/riscv-verification/riscvISACOV.git,2022-11-05 12:33:23+00:00,SystemVerilog Functional Coverage for RISC-V ISA,5,riscv-verification/riscvISACOV,562138106,SystemVerilog,riscvISACOV,489,16,2024-03-21 21:19:12+00:00,[],
10137,https://github.com/antoinemadec/uvm_code_gen.git,2022-10-17 13:08:02+00:00,Simple template-based UVM code generator,3,antoinemadec/uvm_code_gen,552936244,SystemVerilog,uvm_code_gen,127,15,2024-04-03 07:00:57+00:00,"['systemverilog', 'uvm']",https://api.github.com/licenses/mit
10138,https://github.com/KafCoppelia/uvm-mcdf.git,2022-11-30 12:21:57+00:00,Mirror of william_william/uvm-mcdf on Gitee,0,KafCoppelia/uvm-mcdf,572504702,SystemVerilog,uvm-mcdf,947,14,2023-11-03 01:22:02+00:00,"['systemverilog', 'uvm', 'mcdf']",
10139,https://github.com/mbits-mirafra/i3c_avip.git,2022-11-07 06:18:34+00:00,Verification IP project for I3C protocol ,3,mbits-mirafra/i3c_avip,562733325,SystemVerilog,i3c_avip,92028,11,2024-01-06 13:39:42+00:00,[],
10140,https://github.com/SarahElzayat/RISC-pipelined-processor.git,2022-11-07 15:20:22+00:00,"5 stages RISC pipelined processor with multiple instructions implemented in verilog including ALU Operations, Interrupts as a state machine, Jumps and branching instructions, Memory operations and more.. following Harvard architecture.",1,SarahElzayat/RISC-pipelined-processor,562940859,SystemVerilog,RISC-pipelined-processor,11335,7,2024-01-03 16:45:06+00:00,[],https://api.github.com/licenses/mit
10141,https://github.com/Srisrijakka1/UART-Design-simulation-using-verilog.git,2022-10-30 06:39:08+00:00,,0,Srisrijakka1/UART-Design-simulation-using-verilog,559452754,SystemVerilog,UART-Design-simulation-using-verilog,37104,7,2023-12-15 09:18:50+00:00,[],
10142,https://github.com/chiselverify/otherverify.git,2022-10-04 11:00:29+00:00," Examples of verification solutions (e.g., UVM, cocotb,...)",0,chiselverify/otherverify,545428923,SystemVerilog,otherverify,63,6,2024-02-15 00:11:53+00:00,[],https://api.github.com/licenses/bsd-2-clause
10143,https://github.com/KafCoppelia/uvm-mcdf_v2.git,2022-11-30 12:26:25+00:00,Mirror of william_william/uvm-mcdf_v2 on Gitee,0,KafCoppelia/uvm-mcdf_v2,572506427,SystemVerilog,uvm-mcdf_v2,125,6,2024-03-10 16:01:45+00:00,"['mcdf', 'systemverilog', 'uvm']",
10144,https://github.com/openhwgroup/advanced-riscv-verification-methodologies.git,2022-10-20 17:38:57+00:00,Advanced Verification Methodologies for RISC-V and related IP,4,openhwgroup/advanced-riscv-verification-methodologies,554955626,SystemVerilog,advanced-riscv-verification-methodologies,489,6,2024-02-26 07:04:54+00:00,[],
10145,https://github.com/Ammar-10xe/RISCV-32I-Single-Cycle-Processor.git,2022-10-23 16:38:16+00:00,"Implementation of RISCV32I Single Cycle Architecture consisting of six base instructions (R, I, B, S, J, U).",2,Ammar-10xe/RISCV-32I-Single-Cycle-Processor,556345610,SystemVerilog,RISCV-32I-Single-Cycle-Processor,321,6,2023-07-15 18:08:07+00:00,[],
10146,https://github.com/MasterPu2020/DigitalSystemDesignUoS.git,2022-10-05 14:02:30+00:00,Some maybe helpful personal notes to the course digital system design in University of Southampton,0,MasterPu2020/DigitalSystemDesignUoS,546090458,SystemVerilog,DigitalSystemDesignUoS,848,5,2023-11-06 16:55:24+00:00,[],
10147,https://github.com/Psichico/Universal_Verification_Methodology.git,2022-11-30 23:26:19+00:00,,2,Psichico/Universal_Verification_Methodology,572737768,SystemVerilog,Universal_Verification_Methodology,21,5,2024-03-16 07:24:58+00:00,[],
10148,https://github.com/Valen1402/Castlab-Systolic-Array-for-CNN.git,2022-11-02 11:50:26+00:00,Hardware accelerator for CNN computation using weight-stationary systolic array,0,Valen1402/Castlab-Systolic-Array-for-CNN,560843222,SystemVerilog,Castlab-Systolic-Array-for-CNN,3213,5,2023-09-20 16:17:10+00:00,[],
10149,https://github.com/fpgasystems/Coyote-CIRCT.git,2022-10-10 15:41:53+00:00,Deploy CIRCT generated circuits with a streaming abstraction (circt-stream) effortlessly through Coyote.,1,fpgasystems/Coyote-CIRCT,549050612,SystemVerilog,Coyote-CIRCT,57,5,2024-03-27 12:28:09+00:00,"['circt', 'coyote', 'fpga', 'hls', 'mlir', 'circt-stream']",
10150,https://github.com/swabianinstruments/TimeTagger-FPGALink-Reference.git,2022-11-07 12:50:19+00:00,TimeTagger FPGALink Reference,1,swabianinstruments/TimeTagger-FPGALink-Reference,562875115,SystemVerilog,TimeTagger-FPGALink-Reference,1402,4,2024-04-09 20:20:46+00:00,[],https://api.github.com/licenses/bsd-3-clause
10151,https://github.com/TooyamaYuuouji/UVM_example-amplifier.git,2022-09-27 03:33:35+00:00,A simple UVM project. The DUT(RTL) is a simple amplifier.,0,TooyamaYuuouji/UVM_example-amplifier,541887966,SystemVerilog,UVM_example-amplifier,30,4,2024-04-04 14:07:46+00:00,[],https://api.github.com/licenses/gpl-3.0
10152,https://github.com/midimaster21b/spi-bfm.git,2022-11-06 00:08:18+00:00,A quick SPI BFM to assist in SPI device testing and development,1,midimaster21b/spi-bfm,562313994,SystemVerilog,spi-bfm,11,4,2024-03-06 06:18:01+00:00,"['systemverilog', 'fusesoc', 'bfm', 'spi']",
10153,https://github.com/AnthonyAS15/AlgoritmodeBooth-MultiplicadorconSigno.git,2022-10-16 07:36:03+00:00,Tercer proyecto del curso de Diseño Lógico.,0,AnthonyAS15/AlgoritmodeBooth-MultiplicadorconSigno,552268536,SystemVerilog,AlgoritmodeBooth-MultiplicadorconSigno,62,4,2022-11-15 03:25:20+00:00,[],https://api.github.com/licenses/mit
10154,https://github.com/ciniml/if202212_gowin.git,2022-10-24 15:45:14+00:00,インターフェース2022年12月号 別冊付録1 ソースコード,2,ciniml/if202212_gowin,556832960,SystemVerilog,if202212_gowin,192,4,2024-03-31 06:16:50+00:00,[],https://api.github.com/licenses/bsl-1.0
10155,https://github.com/OFS/ofs-fim-common.git,2022-11-07 20:25:30+00:00,,3,OFS/ofs-fim-common,563058593,SystemVerilog,ofs-fim-common,3301,3,2023-11-10 02:10:08+00:00,[],https://api.github.com/licenses/mit
10156,https://github.com/scjacklin/SNNs-with-Asynchronous-NoC_USC_EE552_Spring2022_Project.git,2022-09-30 18:05:02+00:00,"EE552 Asynchronous VLSI Design, Prof Peter A. Beerel, Co-Author Daya Chou",0,scjacklin/SNNs-with-Asynchronous-NoC_USC_EE552_Spring2022_Project,543727900,SystemVerilog,SNNs-with-Asynchronous-NoC_USC_EE552_Spring2022_Project,92,3,2024-04-01 02:33:46+00:00,[],
10157,https://github.com/ks-vandana/Layered-Testbench-For-JK-FlipFlop.git,2022-11-28 14:03:11+00:00,"Layered Testbench using randomized inputs with the help of virtual interfaces, mailboxes, clocking blocks and modports.",0,ks-vandana/Layered-Testbench-For-JK-FlipFlop,571611493,SystemVerilog,Layered-Testbench-For-JK-FlipFlop,11,3,2024-02-22 03:22:28+00:00,[],https://api.github.com/licenses/mit
10158,https://github.com/MZMurad/CPE133_Final-Project.git,2022-11-17 21:57:27+00:00,Ballin Fr Fr,1,MZMurad/CPE133_Final-Project,567478004,SystemVerilog,CPE133_Final-Project,17,3,2022-11-24 23:49:39+00:00,[],
10159,https://github.com/charlesziegenbeinjr/573TermProject.git,2022-10-31 02:58:16+00:00,,0,charlesziegenbeinjr/573TermProject,559758395,SystemVerilog,573TermProject,34835,3,2023-05-07 09:01:24+00:00,[],
10160,https://github.com/arthurnamz/Image-Accellerator.git,2022-11-27 12:00:43+00:00,This project involve the CNN but it is done through designing the chip which will handle everything during the time of the image capturing,0,arthurnamz/Image-Accellerator,571170652,SystemVerilog,Image-Accellerator,334,3,2024-03-11 12:52:47+00:00,[],
10162,https://github.com/Darksecond/TimeWave.git,2022-10-20 18:37:07+00:00,An FPGA Fantasy Console,0,Darksecond/TimeWave,554981471,SystemVerilog,TimeWave,2261,3,2022-11-27 13:30:36+00:00,"['fpga', 'riscv', 'rust', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
10163,https://github.com/microdynamics-cpu/tree-core-ip.git,2022-10-06 01:27:39+00:00,"A series of IP which has cycle-accurate, event-driven simulation models.",0,microdynamics-cpu/tree-core-ip,546373066,SystemVerilog,tree-core-ip,71,3,2023-09-02 11:29:52+00:00,[],https://api.github.com/licenses/gpl-3.0
10164,https://github.com/briansune/ZYNQ-HDMI-IP-with-Audio.git,2022-10-07 14:33:55+00:00,ZYNQ HDMI IP with Audio,2,briansune/ZYNQ-HDMI-IP-with-Audio,547349132,SystemVerilog,ZYNQ-HDMI-IP-with-Audio,48,3,2024-01-24 15:39:24+00:00,"['audio', 'fpga', 'hdmi', 'xilinx', 'zynq']",https://api.github.com/licenses/mit
10165,https://github.com/Dofingert/matrix_muler.git,2022-11-14 13:16:17+00:00,,0,Dofingert/matrix_muler,565852269,SystemVerilog,matrix_muler,471,2,2024-01-15 03:08:18+00:00,[],
10166,https://github.com/verification-gentleman-blog/creating-uvm-tests-dynamically.git,2022-11-20 15:40:33+00:00,,0,verification-gentleman-blog/creating-uvm-tests-dynamically,568457126,SystemVerilog,creating-uvm-tests-dynamically,33,2,2024-02-27 10:34:20+00:00,[],https://api.github.com/licenses/apache-2.0
10167,https://github.com/midimaster21b/i2c-bfm.git,2022-11-05 10:35:15+00:00,A simple I2C BFM,1,midimaster21b/i2c-bfm,562107354,SystemVerilog,i2c-bfm,8,2,2024-02-11 04:29:22+00:00,"['bfm', 'fusesoc', 'i2c', 'systemverilog']",
10168,https://github.com/pulp-platform/axi_vga.git,2022-11-02 11:00:14+00:00,,0,pulp-platform/axi_vga,560825809,SystemVerilog,axi_vga,625,2,2023-07-25 15:03:32+00:00,[],
10169,https://github.com/aignacio/soc_components.git,2022-10-31 19:41:47+00:00,,0,aignacio/soc_components,560125651,SystemVerilog,soc_components,48,2,2024-03-12 09:53:14+00:00,[],
10170,https://github.com/akifejaz/HWConv2D.git,2022-11-27 20:40:18+00:00,This repo contains the code for 2D Convolution written in System Verilog. It is based on 64 * 64 matrix & 3 * 3 kernel dimentions constrainsts. ,0,akifejaz/HWConv2D,571315202,SystemVerilog,HWConv2D,7369,2,2023-10-26 16:18:31+00:00,"['2d-convolution-hardware', 'convolution', 'fpga', 'hardware', 'systemverilog']",
10171,https://github.com/charkster/tang_nano-uart_block_ram.git,2022-10-14 04:12:08+00:00,"UART interface to a block ram in the Tang Nano FPGA. No pin connections needed, just use the USB UART.",0,charkster/tang_nano-uart_block_ram,551247234,SystemVerilog,tang_nano-uart_block_ram,2582,2,2023-10-30 19:47:14+00:00,"['block-ram', 'fpga', 'tang-nano', 'uart']",https://api.github.com/licenses/mit
10172,https://github.com/patcha2000/MSD-FINAL-PROJECT-GROUP-9.git,2022-11-04 01:38:39+00:00,,0,patcha2000/MSD-FINAL-PROJECT-GROUP-9,561573466,SystemVerilog,MSD-FINAL-PROJECT-GROUP-9,23,2,2023-01-27 08:55:34+00:00,[],
10173,https://github.com/JZJisawesome/Zacore.git,2022-11-20 04:37:10+00:00,Performant RISC-V Processing (Mirror of git.jekel.ca/JZJ/Zacore),0,JZJisawesome/Zacore,568302152,SystemVerilog,Zacore,20,2,2022-11-25 16:09:49+00:00,[],https://api.github.com/licenses/mit
10174,https://github.com/LTPhat/DigitalDesignsLab-EE1010.git,2022-10-10 15:01:59+00:00,Verilog code for Digital Circuit Design LAB Course (EE1010) ,0,LTPhat/DigitalDesignsLab-EE1010,549028176,SystemVerilog,DigitalDesignsLab-EE1010,28141,2,2024-01-12 18:40:59+00:00,"['fpga', 'hardware', 'rtl', 'verilog']",https://api.github.com/licenses/gpl-3.0
10175,https://github.com/Abbywpy/improving-low-resource-NMT-system.git,2022-10-26 10:11:49+00:00,,0,Abbywpy/improving-low-resource-NMT-system,557794451,SystemVerilog,improving-low-resource-NMT-system,239768,2,2023-01-08 19:15:25+00:00,[],https://api.github.com/licenses/mit
10176,https://github.com/Valen1402/Castlab-DMA.git,2022-11-02 11:40:02+00:00,A systhesiable DMA unit on Xilinx FPGA VCU118,0,Valen1402/Castlab-DMA,560839466,SystemVerilog,Castlab-DMA,384,2,2023-10-18 16:08:27+00:00,[],
10177,https://github.com/Pummelo65/Nano4kAudio.git,2022-09-25 14:37:38+00:00,This is a brute-force attempt to port  https://github.com/hdl-util to the Tang Nano 4k FPGA board including the audio feature.  The original code makes use of several system verilog features not fully supported by the Gowin IDE.  Clock generation and IO serialization require device specific handling. The final goal is a pull request to the original project with conditional defines to support the Gowin FPGA and the Tang Nano 4k board.,0,Pummelo65/Nano4kAudio,541201196,SystemVerilog,Nano4kAudio,32,2,2023-12-29 23:20:35+00:00,[],
10178,https://github.com/JZJisawesome/JZJCoreF.git,2022-11-20 11:39:48+00:00,"A fast RV32IZifencei soft core implementation with a 2 stage pipeline(ish), written in SystemVerilog! (Mirror of git.jekel.ca/JZJ/jzjcoref)",0,JZJisawesome/JZJCoreF,568388863,SystemVerilog,JZJCoreF,126,2,2023-04-01 03:43:43+00:00,[],https://api.github.com/licenses/mit
10180,https://github.com/dayzGoBy/I-LOVE-CACHE.git,2022-11-13 10:13:12+00:00,"Implementation of one-level cache memory for CPU, written on SystemVerilog",0,dayzGoBy/I-LOVE-CACHE,565408543,SystemVerilog,I-LOVE-CACHE,2202,2,2024-02-11 04:33:33+00:00,"['systemverilog', 'hdl']",
10181,https://github.com/kyori19/verilog-otp.git,2022-10-29 22:08:46+00:00,VerilogHDL implementation of One-Time Password Algorithm (HOTP),1,kyori19/verilog-otp,559365032,SystemVerilog,verilog-otp,7,2,2023-11-13 09:42:28+00:00,"['verilog', 'hotp', 'onetimepassword', 'systemverilog', 'verilog-hdl']",https://api.github.com/licenses/mit
10182,https://github.com/OFS/examples-afu.git,2022-10-26 22:27:07+00:00,OFS Examples,8,OFS/examples-afu,558098141,SystemVerilog,examples-afu,556,2,2024-03-06 00:45:33+00:00,[],https://api.github.com/licenses/mit
10183,https://github.com/Yaochenger/openhw-.git,2022-11-15 05:57:32+00:00,,0,Yaochenger/openhw-,566179903,SystemVerilog,openhw-,408374,2,2023-01-16 03:27:03+00:00,[],
10184,https://github.com/Ammar-10xe/RISCV-32I-5-Stage-Pipelined-Processor.git,2022-10-25 13:58:02+00:00,RISC-V-32I-5-stage-Pipelined-Processor,2,Ammar-10xe/RISCV-32I-5-Stage-Pipelined-Processor,557335307,SystemVerilog,RISCV-32I-5-Stage-Pipelined-Processor,77,2,2023-12-17 00:01:03+00:00,[],
10185,https://github.com/MarcoRuta/Light-Hash-Function.git,2022-10-22 08:38:20+00:00,"Project developed for the course ""Hardware and Embedded Security""",0,MarcoRuta/Light-Hash-Function,555752453,SystemVerilog,Light-Hash-Function,675,2,2022-10-22 12:14:37+00:00,[],
10186,https://github.com/paulinog/fpga_training.git,2022-10-19 21:37:05+00:00,FPGA Design workshop (2022),0,paulinog/fpga_training,554468450,SystemVerilog,fpga_training,20933,2,2023-07-26 00:41:36+00:00,[],
10187,https://github.com/shaswat2428/I2C-Protocol-Verification-.git,2022-10-02 08:31:45+00:00,,0,shaswat2428/I2C-Protocol-Verification-,544343689,SystemVerilog,I2C-Protocol-Verification-,5,2,2024-01-31 14:38:52+00:00,[],
10188,https://github.com/kkurenkov/uvm-empty-project.git,2022-10-20 12:37:00+00:00,generator for verification environment,0,kkurenkov/uvm-empty-project,554808280,SystemVerilog,uvm-empty-project,28,2,2023-09-21 08:59:18+00:00,[],
10189,https://github.com/SanketVinchurkar/ECE585_Group19.git,2022-11-04 19:52:45+00:00,,0,SanketVinchurkar/ECE585_Group19,561919569,SystemVerilog,ECE585_Group19,2004,1,2023-03-02 19:26:45+00:00,[],
10190,https://github.com/somewhatdistracted/EE274-Project.git,2022-11-05 06:23:42+00:00,"Hardware implementation of Huffman, rANS coding",0,somewhatdistracted/EE274-Project,562049905,SystemVerilog,EE274-Project,270,1,2022-12-17 06:44:29+00:00,[],https://api.github.com/licenses/mit
10191,https://github.com/ECE4278/project2.git,2022-11-28 03:45:19+00:00,,0,ECE4278/project2,571405921,SystemVerilog,project2,15,1,2023-02-17 04:00:41+00:00,[],
10192,https://github.com/shuckc/fpgachess.git,2022-10-27 14:12:18+00:00,This is a stupid idea - pure hardware FPGA chess engine,1,shuckc/fpgachess,558420916,SystemVerilog,fpgachess,135,1,2024-01-22 17:25:39+00:00,[],
10193,https://github.com/XiaoanHe/Posit.git,2022-11-17 19:54:34+00:00,"COMP3200 Individual Project, making a posit adder and multiplier",0,XiaoanHe/Posit,567441022,SystemVerilog,Posit,33236,1,2023-10-14 16:01:00+00:00,[],
10194,https://github.com/SathvikSat/verilog_code.git,2022-11-28 11:10:57+00:00,Verilog code practice/learning 2022,0,SathvikSat/verilog_code,571543297,SystemVerilog,verilog_code,13,1,2022-11-28 12:51:17+00:00,[],
10195,https://github.com/madhu2000u/FCNN-Hardware-Generation-Tool.git,2022-11-11 02:21:02+00:00,Hardware Generation Tool to generate custom Fully-Connected Neural Networks,0,madhu2000u/FCNN-Hardware-Generation-Tool,564577212,SystemVerilog,FCNN-Hardware-Generation-Tool,38,1,2024-04-12 03:52:39+00:00,[],
10196,https://github.com/wilke0818/6111_final_project.git,2022-11-03 03:05:12+00:00,,0,wilke0818/6111_final_project,561138966,SystemVerilog,6111_final_project,1150,1,2022-12-15 01:00:46+00:00,[],
10197,https://github.com/yv19/HardwareVerification.git,2022-11-12 18:12:38+00:00,,0,yv19/HardwareVerification,565224452,SystemVerilog,HardwareVerification,5248,1,2023-02-08 13:22:07+00:00,[],
10198,https://github.com/rabenold/6.111FinalProject.git,2022-11-07 23:48:53+00:00,,1,rabenold/6.111FinalProject,563114467,SystemVerilog,6.111FinalProject,8609,1,2024-01-12 18:45:28+00:00,[],
10199,https://github.com/Kimss0/nand-flash-controller.git,2022-10-12 04:49:44+00:00,,0,Kimss0/nand-flash-controller,550021044,SystemVerilog,nand-flash-controller,772,1,2023-11-06 09:33:14+00:00,[],
10200,https://github.com/zhuxianji007/pwr_prj.git,2022-11-06 04:52:17+00:00,pwr_project,0,zhuxianji007/pwr_prj,562359381,SystemVerilog,pwr_prj,432,1,2022-12-19 02:32:07+00:00,[],
10201,https://github.com/kobakvantrishvili/Processor_Design.git,2022-11-04 14:49:01+00:00,system verilog code for Designing processor.,0,kobakvantrishvili/Processor_Design,561813177,SystemVerilog,Processor_Design,7527,1,2023-09-16 18:46:29+00:00,[],
10202,https://github.com/yovanycunha/LOAC.git,2022-10-21 00:54:23+00:00,meu deus meu senhor me ajuda por favor ,0,yovanycunha/LOAC,555108765,SystemVerilog,LOAC,5,1,2023-03-07 05:48:28+00:00,[],
10203,https://github.com/joshual777/ComputerArchitecture2_VectorCPU.git,2022-10-20 05:33:20+00:00,A Single Instruction Multiple Data (SIMD) type vector. An Application Specific Instruction Set Processor (ASIP) will be carried out to apply a composition of the alpha channel.,0,joshual777/ComputerArchitecture2_VectorCPU,554622624,SystemVerilog,ComputerArchitecture2_VectorCPU,47823,1,2023-09-13 00:58:17+00:00,[],
10204,https://github.com/midimaster21b/uart-bfm.git,2022-11-05 03:48:25+00:00,A simple UART BFM,1,midimaster21b/uart-bfm,562019468,SystemVerilog,uart-bfm,3,1,2024-02-11 03:55:58+00:00,"['bfm', 'fusesoc', 'systemverilog', 'uart']",
10205,https://github.com/nan3037/sit329-task6.1.git,2022-10-13 14:25:54+00:00,,0,nan3037/sit329-task6.1,550912023,SystemVerilog,sit329-task6.1,2,1,2023-09-02 03:45:24+00:00,[],
10206,https://github.com/adithyakashyap95/MSD.git,2022-11-04 20:01:07+00:00,Cache,0,adithyakashyap95/MSD,561921967,SystemVerilog,MSD,2956,1,2024-01-12 18:44:56+00:00,[],
10207,https://github.com/derekhua777/out_of_order_cpu.git,2022-11-07 06:52:17+00:00,,0,derekhua777/out_of_order_cpu,562742965,SystemVerilog,out_of_order_cpu,54,1,2023-10-12 19:21:52+00:00,[],
10208,https://github.com/Pandulc/Arquitectura-I.git,2022-10-28 22:23:00+00:00,,1,Pandulc/Arquitectura-I,559040132,SystemVerilog,Arquitectura-I,851,1,2023-11-17 11:51:42+00:00,[],
10209,https://github.com/kirtan03/Pipelined-Processor.git,2022-10-23 08:38:25+00:00,CSN-221 core project,4,kirtan03/Pipelined-Processor,556178459,SystemVerilog,Pipelined-Processor,9,1,2022-12-23 07:22:01+00:00,[],
10210,https://github.com/PrathammGupta/sit329-5.1.git,2022-10-10 05:36:43+00:00,,0,PrathammGupta/sit329-5.1,548742269,SystemVerilog,sit329-5.1,1,1,2023-09-02 03:45:11+00:00,[],
10211,https://github.com/patel-soham/system-verilog-practice.git,2022-11-24 01:52:49+00:00,Practice codes and assignments in system verilog.,0,patel-soham/system-verilog-practice,569950899,SystemVerilog,system-verilog-practice,602,1,2023-09-12 12:35:58+00:00,[],
10212,https://github.com/lbreyer/Segway.git,2022-11-30 17:03:28+00:00,ECE 551 Final Design Project,0,lbreyer/Segway,572620911,SystemVerilog,Segway,1845,1,2022-12-15 01:25:36+00:00,[],
10213,https://github.com/edgarigl/rvee.git,2022-11-06 20:14:46+00:00,,0,edgarigl/rvee,562592995,SystemVerilog,rvee,48,1,2022-11-07 00:20:19+00:00,[],
10214,https://github.com/TeoOrt/RISC-CPU-.git,2022-10-15 23:16:05+00:00,This project contains one risc processor that can check for ECU parameters.,0,TeoOrt/RISC-CPU-,552142871,SystemVerilog,RISC-CPU-,4,1,2024-03-02 17:49:37+00:00,[],
10215,https://github.com/temilolafaith/EE271-rasterizer.git,2022-11-08 05:28:11+00:00,,0,temilolafaith/EE271-rasterizer,563199306,SystemVerilog,EE271-rasterizer,8088,1,2022-12-19 07:48:21+00:00,[],
10216,https://github.com/renaturation/DNN_PUF_FPGA.git,2022-11-18 06:31:09+00:00,,0,renaturation/DNN_PUF_FPGA,567604625,SystemVerilog,DNN_PUF_FPGA,5400,1,2024-03-18 12:48:52+00:00,[],
10217,https://github.com/wanguowu/wanguowu-wanguowu-eecs470_f22_project3_wanguo.git,2022-10-31 04:00:46+00:00,,0,wanguowu/wanguowu-wanguowu-eecs470_f22_project3_wanguo,559774009,SystemVerilog,wanguowu-wanguowu-eecs470_f22_project3_wanguo,211,1,2024-04-05 08:39:27+00:00,[],
10218,https://github.com/mt-class/jhu-multilingual.git,2022-11-26 19:27:30+00:00,This is a Multilingual Natural Language Processing Course. The goal is to be a compliment to the mt-class/,1,mt-class/jhu-multilingual,570986249,SystemVerilog,jhu-multilingual,189717,1,2024-01-23 18:00:51+00:00,[],https://api.github.com/licenses/mit
10219,https://github.com/Ahsan-Toufiq/100DaysofRTL.git,2022-10-22 09:23:03+00:00,System-Verilog,0,Ahsan-Toufiq/100DaysofRTL,555766402,SystemVerilog,100DaysofRTL,19,1,2023-02-11 13:59:16+00:00,[],
10220,https://github.com/Maxpicca-Li/colab-rv64.git,2022-10-22 16:53:55+00:00,"rv64-ima, for using in the course of  computer composition (hardware design) of Chongqing University",0,Maxpicca-Li/colab-rv64,555924241,SystemVerilog,colab-rv64,19,1,2022-10-23 12:27:08+00:00,[],
10221,https://github.com/ALittleBitFour/msgpack_sv.git,2022-10-17 20:05:05+00:00,MsgPack_SV is a UVM compatible SystemVerilog implementation of an encoder and decoder for the MessagePack serialization format.,1,ALittleBitFour/msgpack_sv,553156918,SystemVerilog,msgpack_sv,85,1,2023-09-09 11:04:31+00:00,"['msgpack', 'serialization', 'systemverilog']",https://api.github.com/licenses/mit
10222,https://github.com/su-elena/h264.git,2022-11-07 19:58:24+00:00,,0,su-elena/h264,563049271,SystemVerilog,h264,95,1,2023-04-17 06:12:22+00:00,[],
10223,https://github.com/Jfadi/VerilogPong.git,2022-10-18 22:08:22+00:00,Pong game using Verilog. ,2,Jfadi/VerilogPong,553856661,SystemVerilog,VerilogPong,19915,1,2023-12-20 12:37:03+00:00,[],
10224,https://github.com/flyskywalker/CAM.git,2022-11-26 12:16:48+00:00,CAM with systemverilog,0,flyskywalker/CAM,570874926,SystemVerilog,CAM,16,1,2022-12-22 06:21:44+00:00,[],https://api.github.com/licenses/gpl-2.0
10225,https://github.com/mitshine/APB-Protocol-with-scoreboard.git,2022-11-25 13:37:43+00:00,APB protocol for revision,0,mitshine/APB-Protocol-with-scoreboard,570559621,SystemVerilog,APB-Protocol-with-scoreboard,38,1,2023-09-18 12:31:25+00:00,[],
10226,https://github.com/anirudh-arunkumar/Pipelined-Processor.git,2022-10-04 16:07:44+00:00,"Stalling, Forwarding, and Flushing capabilities made in Verilog",0,anirudh-arunkumar/Pipelined-Processor,545578538,SystemVerilog,Pipelined-Processor,18,1,2022-10-20 21:00:48+00:00,[],
10227,https://github.com/Kilby-tech/Nepa.git,2022-11-06 23:38:58+00:00,Neural Processing Architecture,0,Kilby-tech/Nepa,562638714,SystemVerilog,Nepa,2,1,2022-12-27 07:43:18+00:00,[],
10228,https://github.com/pinjala31/Team_MSD_PROJECT.git,2022-11-04 00:40:31+00:00,,0,pinjala31/Team_MSD_PROJECT,561559987,SystemVerilog,Team_MSD_PROJECT,20,1,2023-01-31 20:49:23+00:00,[],
10229,https://github.com/Danster67/ece437.git,2022-10-25 15:39:41+00:00,,0,Danster67/ece437,557386630,SystemVerilog,ece437,157,1,2023-01-31 20:43:38+00:00,[],
10230,https://github.com/AhsanAliUet/riscv-3-stage-pipelined-processor-core.git,2022-10-17 10:59:08+00:00,Fully implemented 3 staged pipelined RISC-V processor with hazard detection unit. Hazard detection unit solves the hazards by stalling and forwarding technique. CSR and MRET Instructions are also supported as they can configure and manage all the interrupt/exceptions.,0,AhsanAliUet/riscv-3-stage-pipelined-processor-core,552868166,SystemVerilog,riscv-3-stage-pipelined-processor-core,42365,1,2023-12-07 16:59:38+00:00,"['csr', 'interrupts', 'pipelined-processors', 'riscv', '3-stage-pipelined-riscv']",
10231,https://github.com/Linger0/sv.git,2022-10-19 07:26:59+00:00,The SystemVerilog design examples.,0,Linger0/sv,554060567,SystemVerilog,sv,31,1,2023-05-18 06:13:20+00:00,[],
10232,https://github.com/PathakamuriNaresh/AXI_AVIP.git,2022-09-27 03:45:36+00:00,,0,PathakamuriNaresh/AXI_AVIP,541890883,SystemVerilog,AXI_AVIP,40149,1,2023-04-10 17:21:38+00:00,[],https://api.github.com/licenses/mit
10233,https://github.com/NEUCSLAB/RV32_sram_func_2022.git,2022-11-20 06:41:15+00:00,2022 NEU CS LAB - RV32I function tests on sram,0,NEUCSLAB/RV32_sram_func_2022,568323988,SystemVerilog,RV32_sram_func_2022,31444,1,2022-11-20 09:24:51+00:00,[],
10234,https://github.com/charrich97/Decode_Verification.git,2022-10-31 04:03:17+00:00,Decoder UVM Testbench,0,charrich97/Decode_Verification,559774625,SystemVerilog,Decode_Verification,84,1,2023-04-05 11:18:24+00:00,[],
10235,https://github.com/SamarthBonthala/MIPS32_Hazard_Handling_BP.git,2022-10-23 20:24:04+00:00,VLSI-I Course Project,0,SamarthBonthala/MIPS32_Hazard_Handling_BP,556424518,SystemVerilog,MIPS32_Hazard_Handling_BP,17,1,2023-07-04 18:52:18+00:00,[],
10236,https://github.com/HAMZA-AFZAL404/RISC-V-3-Staged-pipelined.git,2022-11-20 19:34:04+00:00,,0,HAMZA-AFZAL404/RISC-V-3-Staged-pipelined,568520677,SystemVerilog,RISC-V-3-Staged-pipelined,10,1,2022-11-21 10:05:44+00:00,[],
10237,https://github.com/AadityaSuri/Mandelbrot_VGA.git,2022-11-20 02:19:12+00:00,,0,AadityaSuri/Mandelbrot_VGA,568279389,SystemVerilog,Mandelbrot_VGA,1403,1,2022-12-07 00:40:06+00:00,[],
10238,https://github.com/UBC-CPEN311-Classrooms/2022w1-lab4-update1.git,2022-11-24 14:28:15+00:00,,9,UBC-CPEN311-Classrooms/2022w1-lab4-update1,570184265,SystemVerilog,2022w1-lab4-update1,31682,1,2022-11-25 22:46:50+00:00,[],
10239,https://github.com/npalmer5620/matrix_unit_int8.git,2022-11-22 17:28:54+00:00,8x8 Systolic Array performing matrix operations,0,npalmer5620/matrix_unit_int8,569376838,SystemVerilog,matrix_unit_int8,114,1,2023-02-02 19:11:59+00:00,[],
10240,https://github.com/Datum-Technology-Corporation/mio_demo.git,2022-11-03 22:06:50+00:00,Moore.io Demo Project,0,Datum-Technology-Corporation/mio_demo,561525502,SystemVerilog,mio_demo,1075,1,2023-03-28 02:42:11+00:00,"['asic', 'asic-design', 'asic-verification', 'design-verification', 'digital-design', 'fpga', 'uvm', 'uvm-verification']",
10241,https://github.com/Kilby-tech/Capablanca.git,2022-11-06 23:51:24+00:00,RISC-V processor developed for portable high performance computing,0,Kilby-tech/Capablanca,562641055,SystemVerilog,Capablanca,3,1,2022-12-27 07:43:21+00:00,[],
10242,https://github.com/noemiabril/C64_MiSTer-DE10-Standard.git,2022-11-27 14:55:22+00:00,C64 Core for MiSTer DE10-Standard,0,noemiabril/C64_MiSTer-DE10-Standard,571220577,SystemVerilog,C64_MiSTer-DE10-Standard,884,1,2023-03-17 14:13:07+00:00,[],
10243,https://github.com/KAMOME-code/Modular-Inverse-in-Verilog.git,2022-11-11 05:12:09+00:00,"Montgomery Inverse with Binary Extended Euclidean Algorithm, Easily expandable",1,KAMOME-code/Modular-Inverse-in-Verilog,564618677,SystemVerilog,Modular-Inverse-in-Verilog,166,1,2024-01-17 21:52:15+00:00,[],https://api.github.com/licenses/mit
10244,https://github.com/TaviEz/MIPS-Verilog.git,2022-10-01 07:20:20+00:00,,0,TaviEz/MIPS-Verilog,543931197,SystemVerilog,MIPS-Verilog,3034,1,2022-10-16 14:39:32+00:00,[],
10245,https://github.com/shuyuan-liu/iac_lab_4_group_34.git,2022-11-18 10:26:03+00:00,2nd year EIE IAC lab 4 — simplified RISC-V implementation,0,shuyuan-liu/iac_lab_4_group_34,567681224,SystemVerilog,iac_lab_4_group_34,2610,1,2023-01-31 21:00:56+00:00,[],
10246,https://github.com/LongStudy/tinyriscv_arty_100t.git,2022-11-14 13:41:35+00:00,tinyriscv for arty a7 100t,1,LongStudy/tinyriscv_arty_100t,565862833,SystemVerilog,tinyriscv_arty_100t,31877,1,2022-12-05 13:43:29+00:00,[],
10247,https://github.com/Ravikumar0110/G2UVM_sig_access_UVM_verification.git,2022-11-25 12:46:19+00:00,,1,Ravikumar0110/G2UVM_sig_access_UVM_verification,570541770,SystemVerilog,G2UVM_sig_access_UVM_verification,23,1,2023-04-05 11:22:04+00:00,[],
10248,https://github.com/Chlience/BUAA-CO-2022.git,2022-11-12 11:19:45+00:00,北京航空航天大学 CO 课程作业,0,Chlience/BUAA-CO-2022,565108982,SystemVerilog,BUAA-CO-2022,140,1,2023-02-21 07:22:48+00:00,[],https://api.github.com/licenses/mit
10249,https://github.com/EmbeddedCamerata/32bits-CLA-and-ALU-Verification.git,2022-10-22 12:27:56+00:00,32 bits CLA(Carry Lookahead Adder) and ALU RTL and verification. 32位块间超前的超前进位加法器及ALU设计与验证,0,EmbeddedCamerata/32bits-CLA-and-ALU-Verification,555827252,SystemVerilog,32bits-CLA-and-ALU-Verification,185,1,2023-12-18 12:29:29+00:00,"['alu', 'carry-look-ahead-adder', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
10250,https://github.com/einmpei/course_vlsidesign.git,2022-10-10 10:15:49+00:00,,0,einmpei/course_vlsidesign,548874220,SystemVerilog,course_vlsidesign,12892,1,2023-11-17 07:20:41+00:00,[],
10251,https://github.com/dtzSiFive/circt-pp-results.git,2022-11-02 17:39:06+00:00,Results of circt-test-flake .,0,dtzSiFive/circt-pp-results,560988333,SystemVerilog,circt-pp-results,4729,0,2022-11-02 17:44:50+00:00,[],
10252,https://github.com/CODE-REFINARY/Ziggomatic.git,2022-11-03 00:20:28+00:00,The Ziggomatic is a single cycle processor design I created in system verilog for a university course on computer architecture. ,0,CODE-REFINARY/Ziggomatic,561101125,SystemVerilog,Ziggomatic,123,0,2022-11-03 00:38:03+00:00,[],
10253,https://github.com/SerdarUnal132/deneme_training.git,2022-10-15 07:27:56+00:00,,0,SerdarUnal132/deneme_training,551833720,SystemVerilog,deneme_training,5,0,2022-10-15 07:59:53+00:00,[],
10254,https://github.com/miguel100398/matrix_multiplier_SV.git,2022-10-28 03:33:20+00:00,,0,miguel100398/matrix_multiplier_SV,558678196,SystemVerilog,matrix_multiplier_SV,36,0,2022-10-28 05:03:59+00:00,[],
10255,https://github.com/chibaf/FPGA_Tang_Nano_9K_blink.git,2022-11-05 10:05:31+00:00,,0,chibaf/FPGA_Tang_Nano_9K_blink,562099738,SystemVerilog,FPGA_Tang_Nano_9K_blink,11,0,2022-11-06 07:12:58+00:00,[],
10256,https://github.com/satvick16/ece253.git,2022-11-06 19:02:23+00:00,Digital Logic and Computer Systems (SystemVerilog and RISC-V Assembly),0,satvick16/ece253,562573613,SystemVerilog,ece253,38,0,2022-11-23 23:20:07+00:00,[],
10257,https://github.com/VINUTHNA-SRI/UVM.git,2022-10-25 17:54:04+00:00,,0,VINUTHNA-SRI/UVM,557447713,SystemVerilog,UVM,14,0,2022-10-25 21:41:08+00:00,[],
10258,https://github.com/sagarpattar05/uvm.git,2022-10-25 16:51:13+00:00,,0,sagarpattar05/uvm,557419899,SystemVerilog,uvm,13099,0,2022-11-09 06:24:55+00:00,[],
10259,https://github.com/misaellopezg/MIPS.git,2022-11-03 16:03:51+00:00,,0,misaellopezg/MIPS,561403639,SystemVerilog,MIPS,53758,0,2023-02-08 02:59:29+00:00,[],
10260,https://github.com/valmyr/Desafios-Microeletronica-Digital.git,2022-10-02 21:25:41+00:00,,0,valmyr/Desafios-Microeletronica-Digital,544594129,SystemVerilog,Desafios-Microeletronica-Digital,379,0,2022-10-17 11:58:30+00:00,[],
10261,https://github.com/PE-611/Sensor_reader.git,2022-10-08 17:49:47+00:00,X-RAY sensor reader with UART transmit data ,0,PE-611/Sensor_reader,547985806,SystemVerilog,Sensor_reader,4322,0,2022-10-08 17:51:25+00:00,[],
10262,https://github.com/nan3037/SIT329--TASK5.1.git,2022-10-10 13:13:12+00:00,,0,nan3037/SIT329--TASK5.1,548964546,SystemVerilog,SIT329--TASK5.1,2,0,2022-10-10 13:13:37+00:00,[],
10263,https://github.com/meenalpannase/Module2_apb_uvm.git,2022-10-11 07:19:02+00:00,,0,meenalpannase/Module2_apb_uvm,549433310,SystemVerilog,Module2_apb_uvm,309,0,2022-10-11 07:19:20+00:00,[],
10264,https://github.com/nowicki-yari/ChipDesignAndVerification.git,2022-09-29 07:13:00+00:00,,0,nowicki-yari/ChipDesignAndVerification,542973725,SystemVerilog,ChipDesignAndVerification,844,0,2023-07-28 07:29:35+00:00,[],
10266,https://github.com/padung99/Metrotek_LAB4.git,2022-10-04 09:16:04+00:00,,0,padung99/Metrotek_LAB4,545384567,SystemVerilog,Metrotek_LAB4,69,0,2023-08-28 04:24:23+00:00,[],
10267,https://github.com/MasterPlayer/axi-timer-averager.git,2022-10-04 12:37:34+00:00,AXI controlled timer for measurement average time of performance,0,MasterPlayer/axi-timer-averager,545472469,SystemVerilog,axi-timer-averager,7,0,2022-10-04 15:42:12+00:00,[],https://api.github.com/licenses/mit
10268,https://github.com/Jerry-03/Syncfifo.git,2022-10-07 05:35:48+00:00,同步fifo设计，counter记录读满状态,0,Jerry-03/Syncfifo,547085661,SystemVerilog,Syncfifo,916,0,2022-10-07 05:37:16+00:00,[],
10269,https://github.com/ECE4278/lab5.git,2022-10-11 15:10:45+00:00,,0,ECE4278/lab5,549682164,SystemVerilog,lab5,12,0,2022-10-11 16:35:49+00:00,[],
10270,https://github.com/caleb-ad/TRNG.git,2022-10-20 20:49:14+00:00,CPE426,0,caleb-ad/TRNG,555035111,SystemVerilog,TRNG,44,0,2022-10-20 20:49:58+00:00,[],
10271,https://github.com/Bardisk/dlcce-labs.git,2022-10-13 20:41:52+00:00,labs of DLCCE course of Nanjing University,0,Bardisk/dlcce-labs,551094565,SystemVerilog,dlcce-labs,11014,0,2023-09-27 10:03:55+00:00,[],
10272,https://github.com/halab1t/Combination-Lock---Verilog.git,2022-10-23 16:36:05+00:00,Lab 3 of CPEN 211,0,halab1t/Combination-Lock---Verilog,556344777,SystemVerilog,Combination-Lock---Verilog,8221,0,2022-10-23 16:39:36+00:00,[],
10273,https://github.com/kailasbk/fpga-360.git,2022-10-26 04:04:53+00:00,A 3D OBJ model viewer to be deployed on a Nexys A7 FPGA board,0,kailasbk/fpga-360,557659942,SystemVerilog,fpga-360,228,0,2023-01-19 19:22:23+00:00,[],
10274,https://github.com/shuny42657/6.205_final_project.git,2022-11-02 21:17:20+00:00,,0,shuny42657/6.205_final_project,561058757,SystemVerilog,6.205_final_project,3404,0,2022-11-17 17:04:03+00:00,[],
10275,https://github.com/zieglershai/Digger.git,2022-11-11 18:21:32+00:00,systemverylog version to the Digger game,0,zieglershai/Digger,564883847,SystemVerilog,Digger,8268,0,2022-11-13 20:34:31+00:00,[],
10276,https://github.com/alishahanda/551.git,2022-11-16 16:47:57+00:00,,0,alishahanda/551,566900777,SystemVerilog,551,8010,0,2022-11-16 16:51:45+00:00,[],
10277,https://github.com/RyanHunter-DV/rhVM.git,2022-11-17 07:47:34+00:00,ryanhunter verification methodology,0,RyanHunter-DV/rhVM,567162234,SystemVerilog,rhVM,156,0,2022-12-19 13:31:32+00:00,[],
10278,https://github.com/italoaraujooj/loac.git,2022-12-01 23:31:07+00:00,Roteiros da disciplina Laboratório de Organização e Arquitetura de Computadores do curso de CC da UFCG.,0,italoaraujooj/loac,573205760,SystemVerilog,loac,3,0,2022-12-01 23:32:07+00:00,[],
10279,https://github.com/shireen1512/captronic_formation_fpga_img_proc.git,2022-11-24 15:07:07+00:00,,0,shireen1512/captronic_formation_fpga_img_proc,570199067,,captronic_formation_fpga_img_proc,261320,0,2022-11-23 08:41:12+00:00,[],
10280,https://github.com/PathakamuriNaresh/LearGit.git,2022-11-12 13:20:04+00:00,LearnGit_Youtube,0,PathakamuriNaresh/LearGit,565140885,SystemVerilog,LearGit,2,0,2022-11-12 13:21:35+00:00,[],
10281,https://github.com/alizademhdi/MIPS-Processor.git,2022-10-28 09:15:23+00:00,we design a mips processor with cace and multicycle memory and floating-point coprocessor,0,alizademhdi/MIPS-Processor,558776540,SystemVerilog,MIPS-Processor,2036,0,2022-10-28 09:24:34+00:00,[],
10282,https://github.com/rijdmc419/ECE_272_Final_Project.git,2022-11-09 02:21:34+00:00,PS/2 Micro-Tonal keyboard using FPGA,0,rijdmc419/ECE_272_Final_Project,563635761,SystemVerilog,ECE_272_Final_Project,20127,0,2022-11-21 04:46:58+00:00,[],
10283,https://github.com/lisneygit/-Sequence_Detector_SV.git,2022-11-19 21:06:43+00:00,,0,lisneygit/-Sequence_Detector_SV,568227230,SystemVerilog,-Sequence_Detector_SV,1,0,2022-11-19 22:36:18+00:00,[],
10284,https://github.com/Sharmi-Rajakumaran/Dual_Port_RAM.git,2022-11-18 10:18:39+00:00,,0,Sharmi-Rajakumaran/Dual_Port_RAM,567678744,SystemVerilog,Dual_Port_RAM,18,0,2022-11-18 10:28:03+00:00,[],
10285,https://github.com/MendelWells/final_project_hack_computer.git,2022-10-27 09:47:50+00:00,,0,MendelWells/final_project_hack_computer,558311702,SystemVerilog,final_project_hack_computer,718,0,2022-10-27 09:53:31+00:00,[],
10286,https://github.com/bguan2022/Scripting.git,2022-09-28 17:11:56+00:00,,0,bguan2022/Scripting,542705201,SystemVerilog,Scripting,25,0,2022-12-15 23:47:18+00:00,[],
10287,https://github.com/kavyas18/verilog_tutorial_edge_count.git,2022-09-30 15:42:24+00:00,,0,kavyas18/verilog_tutorial_edge_count,543671711,SystemVerilog,verilog_tutorial_edge_count,14,0,2023-01-26 21:52:30+00:00,[],
10288,https://github.com/PopovArtS/Check_unit.git,2022-10-06 16:40:39+00:00,Проверка узла с организацией общения с PC по протоколу Ethernet через микросхему DP83848I (нет поломка после ответа на типе фрейма),0,PopovArtS/Check_unit,546788302,SystemVerilog,Check_unit,27,0,2022-10-06 16:52:29+00:00,[],
10289,https://github.com/ECE4278/project1.git,2022-10-18 16:31:50+00:00,,0,ECE4278/project1,553708555,SystemVerilog,project1,13,0,2022-10-19 01:29:31+00:00,[],
10290,https://github.com/fightforit/systemverilog-tutorial.git,2022-10-09 03:24:27+00:00,SystemVerilog,0,fightforit/systemverilog-tutorial,548171368,SystemVerilog,systemverilog-tutorial,34,0,2023-01-10 02:59:12+00:00,[],
10291,https://github.com/riyabhat2002/EBike.git,2022-10-17 22:21:42+00:00,,0,riyabhat2002/EBike,553210704,SystemVerilog,EBike,36,0,2022-10-17 22:35:25+00:00,[],
10292,https://github.com/Jutenbezbuten/VDIC.git,2022-10-13 14:51:11+00:00,VDIC MTM 22/23,0,Jutenbezbuten/VDIC,550926844,SystemVerilog,VDIC,761,0,2022-11-03 11:44:45+00:00,[],
10293,https://github.com/MJurczak-PMarchut/VDIC.git,2022-10-13 14:11:11+00:00,,0,MJurczak-PMarchut/VDIC,550903475,SystemVerilog,VDIC,689,0,2022-10-20 15:18:49+00:00,[],
10294,https://github.com/ArslaanShamim/50_programs-of-RTL_systemverilog.git,2022-10-08 09:37:40+00:00,Making 50 programs of RTL using System Verilog language with the help of EDAPLAYGROUND ,0,ArslaanShamim/50_programs-of-RTL_systemverilog,547786506,SystemVerilog,50_programs-of-RTL_systemverilog,18,0,2022-10-20 18:12:48+00:00,[],
10295,https://github.com/SeamusFinlayson/Digital-Hardware-Based-Spectrum-Analyzer.git,2022-10-23 23:41:14+00:00,This repository is an implementation of a spectrum analyzer using System Verilog.,0,SeamusFinlayson/Digital-Hardware-Based-Spectrum-Analyzer,556477251,SystemVerilog,Digital-Hardware-Based-Spectrum-Analyzer,16,0,2023-09-24 19:34:35+00:00,"['fpga', 'verilog']",
10296,https://github.com/rpeters54/Snake-in-RISC-V.git,2022-10-23 05:26:08+00:00,,0,rpeters54/Snake-in-RISC-V,556125233,SystemVerilog,Snake-in-RISC-V,1012,0,2022-10-23 05:39:56+00:00,[],
10297,https://github.com/T-Szymk/sync_fifo.git,2022-11-06 12:46:44+00:00,Synchronous FIFO implemented in VHDL,0,T-Szymk/sync_fifo,562461845,SystemVerilog,sync_fifo,5,0,2022-11-06 13:27:11+00:00,[],
10298,https://github.com/skipfie/CPEN211.git,2022-10-24 23:08:49+00:00,CPEN 211: Introduction to Microcomputers 2022W1 with Prof. Lis,0,skipfie/CPEN211,557003112,SystemVerilog,CPEN211,29362,0,2023-10-11 07:16:23+00:00,"['systemverilog', 'university-course', 'asic-design', 'datapath-design', 'finite-state-machine', 'ubc', 'ubc-engineering']",
10299,https://github.com/PathakamuriNaresh/first_git.git,2022-11-13 16:56:11+00:00,,0,PathakamuriNaresh/first_git,565517632,SystemVerilog,first_git,2,0,2022-11-13 16:59:17+00:00,[],
10300,https://github.com/NakajoLab/Accelerator_for_Convolution.git,2022-11-14 09:24:16+00:00,,0,NakajoLab/Accelerator_for_Convolution,565763042,SystemVerilog,Accelerator_for_Convolution,33,0,2022-11-14 09:32:41+00:00,[],
10301,https://github.com/inigo-selwood/ickenham.git,2022-11-14 21:34:38+00:00,A 32-bit soft-core CPU,0,inigo-selwood/ickenham,566049080,SystemVerilog,ickenham,169,0,2022-11-14 21:36:41+00:00,[],
10302,https://github.com/rskumar-49/fpgario_kart.git,2022-11-11 15:47:31+00:00,,0,rskumar-49/fpgario_kart,564830732,SystemVerilog,fpgario_kart,6583,0,2022-12-15 00:59:11+00:00,[],
10303,https://github.com/flaviens/verisegf2.git,2022-10-28 14:23:52+00:00,,0,flaviens/verisegf2,558888559,SystemVerilog,verisegf2,1410,0,2022-10-28 14:26:26+00:00,[],
10304,https://github.com/mysticlong/FPGA.git,2022-11-01 19:23:29+00:00,,0,mysticlong/FPGA,560565679,SystemVerilog,FPGA,107,0,2022-11-01 19:29:46+00:00,[],
10305,https://github.com/Marwa2019uet/riscv.git,2022-11-07 18:04:23+00:00,riscv single cycle implementation in system verilog,0,Marwa2019uet/riscv,563007906,SystemVerilog,riscv,6,0,2023-01-27 19:09:13+00:00,[],
10306,https://github.com/Indifference061/Decode38.git,2022-11-08 06:24:50+00:00,38译码器,0,Indifference061/Decode38,563215182,SystemVerilog,Decode38,5,0,2022-11-08 06:30:28+00:00,[],https://api.github.com/licenses/mit
10307,https://github.com/Sourishs500/DAV2022.git,2022-11-07 22:48:44+00:00,"code for DAV project, 2022. Sourish Saswade, George Zhou, Marvin",0,Sourishs500/DAV2022,563100458,SystemVerilog,DAV2022,19,0,2022-11-09 01:51:26+00:00,[],
10308,https://github.com/Dr-Mirzakuchaki-IUST-TAs/400721019-400721055.git,2022-12-01 14:32:27+00:00,,2,Dr-Mirzakuchaki-IUST-TAs/400721019-400721055,573022167,SystemVerilog,400721019-400721055,4458,0,2023-01-25 20:12:48+00:00,[],
10309,https://github.com/wshenyi/Design-Verification-Examples.git,2022-11-25 05:35:03+00:00,,0,wshenyi/Design-Verification-Examples,570407036,SystemVerilog,Design-Verification-Examples,22,0,2022-12-09 02:32:06+00:00,[],
10310,https://github.com/tsotnep/COMPE475_project.git,2022-11-05 06:02:59+00:00,,0,tsotnep/COMPE475_project,562045619,,COMPE475_project,2,0,2022-11-04 17:16:24+00:00,[],
10311,https://github.com/mmoldsvor/risc-v-cpu.git,2022-11-19 10:11:07+00:00,A Risc-V RV32I implementation in SystemVerilog,0,mmoldsvor/risc-v-cpu,568057094,SystemVerilog,risc-v-cpu,18,0,2022-11-19 10:15:29+00:00,[],
10312,https://github.com/vanessaguzmann/kylie-i-owe-you-guys-my-organs.git,2022-11-19 04:01:06+00:00,cpe133 mult controller,0,vanessaguzmann/kylie-i-owe-you-guys-my-organs,567978691,SystemVerilog,kylie-i-owe-you-guys-my-organs,1,0,2022-11-19 04:34:38+00:00,[],
10313,https://github.com/SweeetPotato/lab3b.git,2022-11-29 19:43:57+00:00,ENEL453,1,SweeetPotato/lab3b,572213435,SystemVerilog,lab3b,21,0,2022-11-29 19:45:45+00:00,[],
10314,https://github.com/distractedlambda/khdl.git,2022-10-08 22:53:02+00:00,Experiments in generating Verilog using a Kotlin DSL,0,distractedlambda/khdl,548090517,SystemVerilog,khdl,189,0,2023-11-26 19:36:11+00:00,[],https://api.github.com/licenses/unlicense
10315,https://github.com/jacob-waskowic/cme433-lr.git,2022-11-09 18:48:38+00:00,Literature review for cme433,0,jacob-waskowic/cme433-lr,563986031,SystemVerilog,cme433-lr,19,0,2022-11-09 21:20:54+00:00,[],
10316,https://github.com/vishwajeet-sinh/Uart_to_I2C.git,2022-11-25 20:04:42+00:00,UART_TO_I2C_BUS_BRIDGE : Design,0,vishwajeet-sinh/Uart_to_I2C,570681115,SystemVerilog,Uart_to_I2C,41,0,2024-02-21 09:19:55+00:00,[],
10317,https://github.com/MGalaxy1984/OTAccelerator.git,2022-11-18 04:12:18+00:00,,0,MGalaxy1984/OTAccelerator,567570796,SystemVerilog,OTAccelerator,17,0,2023-04-11 18:54:16+00:00,[],
10318,https://github.com/rajabatra/multicycleprocessorverilog.git,2022-11-30 19:07:50+00:00,A multicycle processor written in Verilog. Includes a test bench ,0,rajabatra/multicycleprocessorverilog,572666251,SystemVerilog,multicycleprocessorverilog,5,0,2022-11-30 19:08:28+00:00,[],
10319,https://github.com/Mohamed0x3/AES.git,2022-10-02 15:53:54+00:00,Advanced Encryption Standard,0,Mohamed0x3/AES,544487087,SystemVerilog,AES,18359,0,2022-10-02 16:05:14+00:00,[],
10320,https://github.com/piggy0622/01-rtl_kernel_workflow.git,2022-10-14 02:41:47+00:00,,0,piggy0622/01-rtl_kernel_workflow,551216711,SystemVerilog,01-rtl_kernel_workflow,4225,0,2022-10-14 02:42:05+00:00,[],
10321,https://github.com/charles-bezerra/loac.git,2022-10-25 01:55:59+00:00,,0,charles-bezerra/loac,557052838,SystemVerilog,loac,5,0,2022-10-25 01:57:00+00:00,[],
10322,https://github.com/liloheinrich/HammingCode.git,2022-11-17 01:57:25+00:00,Computer Architecture Project Hamming Code,1,liloheinrich/HammingCode,567067403,SystemVerilog,HammingCode,1158,0,2022-11-17 03:23:04+00:00,[],
10323,https://github.com/infinitymdm/cu-fpga.git,2022-11-15 03:38:55+00:00,Fun with the Alchitry Cu FPGA board,0,infinitymdm/cu-fpga,566143602,SystemVerilog,cu-fpga,238,0,2023-06-07 23:48:57+00:00,[],
10324,https://github.com/Palavelli-Naidu/UVM_SPI.git,2022-11-11 05:28:04+00:00,,0,Palavelli-Naidu/UVM_SPI,564622897,SystemVerilog,UVM_SPI,3,0,2022-11-11 05:34:05+00:00,[],
10325,https://github.com/JoaoVboa/trabalho.git,2022-11-25 22:13:04+00:00,,0,JoaoVboa/trabalho,570708325,SystemVerilog,trabalho,3,0,2022-11-25 22:18:09+00:00,[],
10326,https://github.com/Fall-2022-Classes/fa21-final-project-two-rats.git,2022-11-28 20:29:45+00:00,fa21-final-project-two-rats created by GitHub Classroom,0,Fall-2022-Classes/fa21-final-project-two-rats,571758319,SystemVerilog,fa21-final-project-two-rats,267,0,2022-12-07 19:49:04+00:00,[],
10327,https://github.com/RussellChen1228/LZ77_Encoder_and_Decoder.git,2022-11-15 13:37:46+00:00,,0,RussellChen1228/LZ77_Encoder_and_Decoder,566346668,SystemVerilog,LZ77_Encoder_and_Decoder,1483,0,2022-11-15 13:56:52+00:00,[],
10328,https://github.com/RoloVega/proyecto-3.git,2022-10-21 05:26:22+00:00,Algoritmo de Booth - Multiplicador con signo,0,RoloVega/proyecto-3,555190398,SystemVerilog,proyecto-3,3065,0,2022-11-17 13:32:35+00:00,[],
10329,https://github.com/VictorClements/Water_Reminder_CPE302Final.git,2022-10-18 15:53:24+00:00,,0,VictorClements/Water_Reminder_CPE302Final,553688042,SystemVerilog,Water_Reminder_CPE302Final,78,0,2023-08-09 01:41:52+00:00,[],
10330,https://github.com/TarasovV/APS.git,2022-09-29 19:59:42+00:00,AMPS&S(APS) Labs,0,TarasovV/APS,543297981,SystemVerilog,APS,17,0,2022-09-29 20:12:24+00:00,[],
10331,https://github.com/BROsandr/risc_v.git,2022-09-30 20:08:12+00:00,,0,BROsandr/risc_v,543772151,SystemVerilog,risc_v,166,0,2023-05-18 21:30:42+00:00,[],
10332,https://github.com/Dbhatt5/CSE_320_HW4.git,2022-11-06 04:59:36+00:00,,0,Dbhatt5/CSE_320_HW4,562360549,SystemVerilog,CSE_320_HW4,15,0,2022-11-06 05:04:42+00:00,[],
10333,https://github.com/Ammar-10xe/Compliance-Testing-RV32I.git,2022-11-26 20:18:40+00:00,This Repo contains the complianced testing of RV32I,0,Ammar-10xe/Compliance-Testing-RV32I,570996790,SystemVerilog,Compliance-Testing-RV32I,15,0,2022-11-30 15:11:00+00:00,[],
10334,https://github.com/dineshannayya/security_core.git,2022-11-01 08:47:20+00:00,Hold All the security IP AES and HASH Algirithms,0,dineshannayya/security_core,560330312,SystemVerilog,security_core,239,0,2022-11-08 06:43:49+00:00,[],https://api.github.com/licenses/apache-2.0
10336,https://github.com/AMAV26/-SystemVerilog-projects.git,2022-10-08 05:10:54+00:00,"This is a recompilatory to system verilog projects, made in the digital design workshop, taught at the ITCR",0,AMAV26/-SystemVerilog-projects,547685908,SystemVerilog,-SystemVerilog-projects,169,0,2022-10-08 05:25:01+00:00,[],
10337,https://github.com/prantaneel/smvm-fpga-project.git,2022-10-09 09:31:28+00:00,,0,prantaneel/smvm-fpga-project,548299569,SystemVerilog,smvm-fpga-project,1,0,2022-10-09 09:31:37+00:00,[],
10338,https://github.com/BrianEE07/course-lab_A_mixing_c-_rtl_kernel.git,2022-10-13 17:04:48+00:00,AAHLS_LabA,0,BrianEE07/course-lab_A_mixing_c-_rtl_kernel,550996065,SystemVerilog,course-lab_A_mixing_c-_rtl_kernel,77781,0,2022-10-13 17:08:35+00:00,[],
10339,https://github.com/renanbcunderline/roteiros_loac.git,2022-10-14 12:23:36+00:00,,0,renanbcunderline/roteiros_loac,551448978,SystemVerilog,roteiros_loac,18431,0,2023-03-24 21:02:50+00:00,[],
10340,https://github.com/danielvahos/FPGA-project.git,2022-10-13 09:32:47+00:00,,0,danielvahos/FPGA-project,550762010,SystemVerilog,FPGA-project,8632,0,2022-10-13 09:56:56+00:00,[],
10341,https://github.com/Erkin-Aydin/cs223_labs.git,2022-10-17 06:53:20+00:00,,0,Erkin-Aydin/cs223_labs,552742950,SystemVerilog,cs223_labs,5070,0,2022-12-22 07:26:39+00:00,[],https://api.github.com/licenses/gpl-3.0
10342,https://github.com/Cnh1116/Verilog-Modules.git,2022-11-02 23:31:52+00:00,A collection of various Verilog Modules!,0,Cnh1116/Verilog-Modules,561090646,SystemVerilog,Verilog-Modules,9,0,2023-04-17 20:31:56+00:00,[],
10343,https://github.com/marisolcastellanos/RISCV-Pipeline-Processor.git,2022-11-02 17:47:17+00:00,,0,marisolcastellanos/RISCV-Pipeline-Processor,560991410,SystemVerilog,RISCV-Pipeline-Processor,18,0,2022-11-07 22:43:45+00:00,[],
10344,https://github.com/Fatima2508/FV-Hardware.git,2022-11-05 02:07:54+00:00,,0,Fatima2508/FV-Hardware,562000233,SystemVerilog,FV-Hardware,9981,0,2022-12-23 23:12:06+00:00,[],
10345,https://github.com/SalKikal/HW2---multiplexers-in-architecture.git,2022-11-04 19:28:02+00:00,,1,SalKikal/HW2---multiplexers-in-architecture,561912581,SystemVerilog,HW2---multiplexers-in-architecture,15,0,2022-11-04 19:30:01+00:00,[],
10346,https://github.com/Sohamsingh2002/Memoryproject221.git,2022-11-05 17:43:59+00:00,,0,Sohamsingh2002/Memoryproject221,562230468,SystemVerilog,Memoryproject221,2,0,2022-11-05 17:46:27+00:00,[],
10347,https://github.com/Superstite/task_mapping_Rivu.git,2022-11-10 18:48:21+00:00,task_mapping design code and TB,0,Superstite/task_mapping_Rivu,564452664,,task_mapping_Rivu,769,0,2022-09-16 14:31:25+00:00,[],
10348,https://github.com/Keio-CSG/cpu-experiment-2022.git,2022-11-16 03:41:52+00:00,,0,Keio-CSG/cpu-experiment-2022,566619722,SystemVerilog,cpu-experiment-2022,10178,0,2022-11-16 03:46:32+00:00,[],https://api.github.com/licenses/mit
10349,https://github.com/Its-Masoom/single-cycle.git,2022-11-13 15:14:20+00:00,This is my single cycle ,0,Its-Masoom/single-cycle,565487767,SystemVerilog,single-cycle,16,0,2022-11-13 15:15:39+00:00,[],
10350,https://github.com/c-coh/verilog_counter.git,2022-11-29 00:58:54+00:00,,0,c-coh/verilog_counter,571827755,SystemVerilog,verilog_counter,5,0,2023-01-20 02:23:19+00:00,[],
10351,https://github.com/belalalala/ECE385-final-project.git,2022-11-24 20:47:21+00:00,,0,belalalala/ECE385-final-project,570300193,SystemVerilog,ECE385-final-project,98,0,2022-11-24 20:51:09+00:00,[],
10352,https://github.com/nshcat/risc-v-wb2.git,2022-11-11 15:28:50+00:00,,0,nshcat/risc-v-wb2,564824009,SystemVerilog,risc-v-wb2,54,0,2023-01-22 17:58:17+00:00,[],https://api.github.com/licenses/mit
10353,https://github.com/adity97/UVM_P3..git,2022-11-13 01:28:03+00:00,LC3 VER. ,0,adity97/UVM_P3.,565311515,SystemVerilog,UVM_P3.,79,0,2022-11-13 02:03:00+00:00,[],
10354,https://github.com/RusanovskiyBV/crc_calc.git,2022-10-09 19:54:29+00:00,,0,RusanovskiyBV/crc_calc,548550785,SystemVerilog,crc_calc,17,0,2022-10-09 19:54:42+00:00,[],https://api.github.com/licenses/gpl-3.0
10355,https://github.com/PopovArtS/demultiplexer.git,2022-10-10 13:29:51+00:00,data 1 to 16,0,PopovArtS/demultiplexer,548973710,SystemVerilog,demultiplexer,2,0,2022-10-10 13:30:58+00:00,[],
10356,https://github.com/espi3000/TFE4152-Memory-Array.git,2022-10-19 12:35:25+00:00,,0,espi3000/TFE4152-Memory-Array,554208808,SystemVerilog,TFE4152-Memory-Array,5322,0,2023-01-16 13:02:13+00:00,[],
10357,https://github.com/gvilums/snitch-onnx.git,2022-10-19 10:34:33+00:00,,0,gvilums/snitch-onnx,554151000,SystemVerilog,snitch-onnx,9873,0,2022-10-19 10:36:48+00:00,[],https://api.github.com/licenses/apache-2.0
10358,https://github.com/tornupnegatives/floating-point-unit.git,2022-10-20 19:06:07+00:00,IEEE754 Floating Point Unit in SystemVerilog,0,tornupnegatives/floating-point-unit,554994142,SystemVerilog,floating-point-unit,41,0,2022-10-20 19:15:25+00:00,[],
10359,https://github.com/mfkiwl/osdr-q10.git,2022-10-21 13:27:44+00:00,"Orion anchor design files, firmware, and FPGA code.",0,mfkiwl/osdr-q10,555384996,,osdr-q10,108757,0,2022-07-06 17:55:02+00:00,[],
10360,https://github.com/Kinox2000/Proyecto2_VFCI.git,2022-10-17 22:16:46+00:00,,0,Kinox2000/Proyecto2_VFCI,553208787,SystemVerilog,Proyecto2_VFCI,65274,0,2022-11-20 02:38:35+00:00,[],
10361,https://github.com/pAuLocordero222/Proyecto2_VFCI.git,2022-10-26 01:55:43+00:00,,0,pAuLocordero222/Proyecto2_VFCI,557618911,SystemVerilog,Proyecto2_VFCI,113,0,2022-10-26 03:22:13+00:00,[],
10362,https://github.com/patel-soham/SRAM-memory.git,2022-10-26 18:14:34+00:00,A project to implement and test simple SRAM synchronous positive edge memory.,0,patel-soham/SRAM-memory,558009487,SystemVerilog,SRAM-memory,39,0,2022-12-31 02:19:57+00:00,"['memory', 'verilog', 'system-verilog']",
10363,https://github.com/chien172431/SNNForSleepPosture.git,2022-10-27 08:58:17+00:00,Spiking Neural Networks (SNN) chip for sleeping posture classification,0,chien172431/SNNForSleepPosture,558291146,SystemVerilog,SNNForSleepPosture,60,0,2022-10-27 09:10:03+00:00,[],
10364,https://github.com/MathieuSnd/NoRISC.git,2022-10-27 09:54:31+00:00,,0,MathieuSnd/NoRISC,558314352,SystemVerilog,NoRISC,551,0,2022-11-16 09:23:09+00:00,[],
10365,https://github.com/justinhuang666666/RISC-V-CPU.git,2022-10-04 15:33:21+00:00,,0,justinhuang666666/RISC-V-CPU,545562428,SystemVerilog,RISC-V-CPU,1051,0,2023-01-10 18:29:39+00:00,[],
10366,https://github.com/anonymous-submission002/cv32e40p_rtl.git,2022-09-28 09:27:44+00:00,cv32e40p RTL description: each branch is a version of a protected cv32e40p core,0,anonymous-submission002/cv32e40p_rtl,542509228,SystemVerilog,cv32e40p_rtl,1086,0,2022-09-28 09:47:17+00:00,[],
10367,https://github.com/kinshuk9449/Smart-Bike.git,2022-10-03 07:36:43+00:00,,0,kinshuk9449/Smart-Bike,544770371,SystemVerilog,Smart-Bike,9780,0,2022-10-06 14:56:10+00:00,[],
10368,https://github.com/LongHoGit/test_vm_sv.git,2022-10-02 10:05:40+00:00,vending machine project,0,LongHoGit/test_vm_sv,544371935,SystemVerilog,test_vm_sv,2,0,2022-10-03 13:06:58+00:00,[],
10369,https://github.com/Vini-ara/zeptoProcessor.git,2022-09-27 20:24:17+00:00,16bit processor with 11 instructions ,0,Vini-ara/zeptoProcessor,542275524,SystemVerilog,zeptoProcessor,3515,0,2022-09-27 23:44:59+00:00,[],
10370,https://github.com/Qrisno/Engineering-HW.git,2022-11-18 20:01:50+00:00,,0,Qrisno/Engineering-HW,567879859,SystemVerilog,Engineering-HW,1,0,2022-11-24 09:16:11+00:00,[],
10371,https://github.com/Nagarjun444/SRAM.git,2022-11-16 14:34:55+00:00,sram verification using system verilog,1,Nagarjun444/SRAM,566841541,SystemVerilog,SRAM,4,0,2022-11-16 14:41:31+00:00,[],
10372,https://github.com/ACWright256/MicroPsFinalProject.git,2022-11-26 00:19:16+00:00,Oscilloscope Project,1,ACWright256/MicroPsFinalProject,570730448,SystemVerilog,MicroPsFinalProject,44,0,2023-12-23 20:15:24+00:00,[],
10373,https://github.com/ashutoshkr129/CSN221-Memory-Project.git,2022-11-13 17:01:11+00:00,Fully configurable cache simulation.,3,ashutoshkr129/CSN221-Memory-Project,565518898,SystemVerilog,CSN221-Memory-Project,49,0,2023-06-22 08:26:04+00:00,[],
10374,https://github.com/mungalched/SVA_with_UVM_env.git,2022-11-25 13:44:55+00:00,,0,mungalched/SVA_with_UVM_env,570562345,SystemVerilog,SVA_with_UVM_env,6,0,2022-11-25 13:58:29+00:00,[],
10375,https://github.com/Ahmad-HK/Arbiter-Verification.git,2022-11-23 14:45:25+00:00,,0,Ahmad-HK/Arbiter-Verification,569757167,SystemVerilog,Arbiter-Verification,7,0,2022-11-23 14:58:57+00:00,[],
10376,https://github.com/antoinemadec/uvm_vips.git,2022-11-23 10:39:05+00:00,collection of UVM Verication IPs,0,antoinemadec/uvm_vips,569662699,SystemVerilog,uvm_vips,1312,0,2022-11-23 16:25:00+00:00,[],
10377,https://github.com/madhur19171/Cache.git,2022-11-24 06:34:20+00:00,,0,madhur19171/Cache,570018246,SystemVerilog,Cache,497,0,2022-12-04 13:22:44+00:00,[],
10378,https://github.com/knhitesh/AXI4_FIFO.git,2022-09-26 07:42:54+00:00,,4,knhitesh/AXI4_FIFO,541465260,SystemVerilog,AXI4_FIFO,1605,0,2022-09-26 07:52:27+00:00,[],
10379,https://github.com/AlphanEker/SingleCycle-SystemVerilog-Model.git,2022-10-04 20:33:41+00:00,,0,AlphanEker/SingleCycle-SystemVerilog-Model,545696942,SystemVerilog,SingleCycle-SystemVerilog-Model,243,0,2023-01-22 22:33:08+00:00,[],
10380,https://github.com/PopovArtS/Check_16_channel.git,2022-10-06 16:59:34+00:00,Проверка последовательно всех 16 каналов на КЗ и ХХ,0,PopovArtS/Check_16_channel,546797955,SystemVerilog,Check_16_channel,4,0,2022-10-06 17:03:18+00:00,[],
10381,https://github.com/gpkumar97/Team11_Repository.git,2022-11-04 21:44:11+00:00,MSD Project Team 11 Repository,0,gpkumar97/Team11_Repository,561948633,SystemVerilog,Team11_Repository,19,0,2022-12-09 20:59:46+00:00,[],
10382,https://github.com/shreyka/huah_cubed.git,2022-11-11 21:14:03+00:00,,0,shreyka/huah_cubed,564933100,SystemVerilog,huah_cubed,26614,0,2022-12-14 05:32:04+00:00,[],
10383,https://github.com/JtmVillan/cse141-customISA.git,2022-09-25 19:06:53+00:00,,0,JtmVillan/cse141-customISA,541280246,SystemVerilog,cse141-customISA,257,0,2022-09-25 19:40:59+00:00,[],
10384,https://github.com/shahzaibk23/ibex-jigsaw.git,2022-09-28 18:17:48+00:00,Test enviroment to connect jigsaw devices w/ Ibex core in CHISEL & compile the design w/ CIRCT IR to analyze the dumped SV,0,shahzaibk23/ibex-jigsaw,542731852,SystemVerilog,ibex-jigsaw,355,0,2023-04-18 02:04:36+00:00,"['chisel', 'chisel3', 'ibex']",
10385,https://github.com/audieaudie/flappy-bird.git,2022-09-29 05:00:04+00:00,Final Project for CSE 369,0,audieaudie/flappy-bird,542926901,SystemVerilog,flappy-bird,2583,0,2022-09-29 05:37:30+00:00,[],
10386,https://github.com/mmragmac/single_cycle_proc.git,2022-09-28 09:30:47+00:00,,0,mmragmac/single_cycle_proc,542510721,SystemVerilog,single_cycle_proc,11,0,2022-11-21 02:39:18+00:00,[],
10387,https://github.com/hamidkhd/Booth-Multiplier-CA.git,2022-09-29 10:48:52+00:00,,0,hamidkhd/Booth-Multiplier-CA,543067942,SystemVerilog,Booth-Multiplier-CA,696,0,2022-09-29 10:50:02+00:00,[],
10388,https://github.com/nahmadi95/test.git,2022-12-01 19:25:12+00:00,,0,nahmadi95/test,573136765,SystemVerilog,test,2,0,2022-12-01 20:31:07+00:00,[],
10389,https://github.com/blion-yuan/v2_pro_svlabs.git,2022-11-16 06:50:55+00:00,,0,blion-yuan/v2_pro_svlabs,566669119,SystemVerilog,v2_pro_svlabs,2238,0,2022-11-16 10:41:07+00:00,[],
10390,https://github.com/halab1t/CPU-Datapath.git,2022-11-16 04:57:28+00:00,Implementation for the datapath of a bare bones CPU done for Lab5 of CPEN 211,0,halab1t/CPU-Datapath,566638275,SystemVerilog,CPU-Datapath,71,0,2022-11-16 04:58:57+00:00,[],
10391,https://github.com/MiraculousTreasure/miraculous_treasure.git,2022-10-20 13:43:10+00:00,,3,MiraculousTreasure/miraculous_treasure,554841253,SystemVerilog,miraculous_treasure,1,0,2022-10-27 10:57:17+00:00,[],
10392,https://github.com/meenalpannase/Module1_usb_packet_gen.git,2022-10-11 07:40:03+00:00,,0,meenalpannase/Module1_usb_packet_gen,549443293,SystemVerilog,Module1_usb_packet_gen,15,0,2022-10-11 07:40:16+00:00,[],
10393,https://github.com/tonyfettes/riscv-poc.git,2022-11-12 14:58:45+00:00,,0,tonyfettes/riscv-poc,565169112,SystemVerilog,riscv-poc,49,0,2023-11-30 17:34:17+00:00,[],
10394,https://github.com/supleed2/ELEC70056-HSV-CW2.git,2022-11-07 12:40:06+00:00,"About Coursework 2 for ELEC70056: Hardware and Software Verification, Hardware Component - Verification of SystemVerilog designs using assertions and timing statements",0,supleed2/ELEC70056-HSV-CW2,562870973,SystemVerilog,ELEC70056-HSV-CW2,3841,0,2024-01-19 04:31:50+00:00,"['hardware-verification', 'systemverilog']",
10395,https://github.com/Mohammed-Abzal-Ali/Team-27---RISC-V-Coursework.git,2022-11-18 10:35:43+00:00,The repository of the reduced RISC-V processor IAC coursework,0,Mohammed-Abzal-Ali/Team-27---RISC-V-Coursework,567684361,SystemVerilog,Team-27---RISC-V-Coursework,8,0,2022-11-25 12:18:49+00:00,[],
10396,https://github.com/wakuto/rvcore.git,2022-09-27 14:28:57+00:00,2命令同時発行 & Our-of-Order 実行ができる（予定の） RISC-V CPU,0,wakuto/rvcore,542128948,SystemVerilog,rvcore,1213,0,2024-01-10 08:56:00+00:00,[],
10397,https://github.com/midimaster21b/fpga-io-primitives.git,2022-11-12 05:02:21+00:00,,0,midimaster21b/fpga-io-primitives,565023721,SystemVerilog,fpga-io-primitives,4,0,2022-11-12 05:02:40+00:00,[],
10398,https://github.com/timbarrera/RISCV-5-Stage-Pipeline-Processor-with-Hazard-Handling.git,2022-11-16 03:10:48+00:00,,0,timbarrera/RISCV-5-Stage-Pipeline-Processor-with-Hazard-Handling,566611920,SystemVerilog,RISCV-5-Stage-Pipeline-Processor-with-Hazard-Handling,29,0,2022-11-16 03:18:51+00:00,[],
10399,https://github.com/3mmac/6205_Project.git,2022-11-15 21:20:00+00:00,Final Project Files,0,3mmac/6205_Project,566524650,SystemVerilog,6205_Project,12886,0,2022-12-14 19:15:03+00:00,[],
10400,https://github.com/yamhokim/Digital-Systems.git,2022-10-28 04:52:51+00:00,,0,yamhokim/Digital-Systems,558696755,SystemVerilog,Digital-Systems,184,0,2023-09-21 03:05:01+00:00,[],
10401,https://github.com/Palavelli-Naidu/UVM_fifo.git,2022-11-11 05:20:05+00:00,,0,Palavelli-Naidu/UVM_fifo,564620817,SystemVerilog,UVM_fifo,8,0,2022-11-11 05:21:02+00:00,[],
10402,https://github.com/alpgurlee/FB-CPU-SystemVerilog-Testbench.git,2022-11-03 18:18:44+00:00,Bu proje kapsamında dijital tasarım dersinde tamamlanan FB-CPU işlemcisinin SystemVerilog dili ile otonom kontrolünü yapan bir doğrulama ortamı geliştirilecektir.,0,alpgurlee/FB-CPU-SystemVerilog-Testbench,561455182,SystemVerilog,FB-CPU-SystemVerilog-Testbench,7573,0,2022-11-03 18:18:53+00:00,[],
10403,https://github.com/Ahmad-HK/sequenceFSM.git,2022-11-03 10:54:57+00:00,,0,Ahmad-HK/sequenceFSM,561279040,SystemVerilog,sequenceFSM,180,0,2022-11-03 11:47:00+00:00,[],
10404,https://github.com/saicharanbehara/AHB-to-APB-Bridge.git,2022-11-14 10:16:06+00:00,,0,saicharanbehara/AHB-to-APB-Bridge,565783726,SystemVerilog,AHB-to-APB-Bridge,10,0,2022-11-14 11:16:48+00:00,[],
10405,https://github.com/madhu2000u/Matrix-Vector-Multiplier.git,2022-10-05 01:37:37+00:00,Matrix-Vector multiplier in SystemVerilog,0,madhu2000u/Matrix-Vector-Multiplier,545792972,SystemVerilog,Matrix-Vector-Multiplier,35,0,2022-11-07 04:38:41+00:00,[],
10406,https://github.com/usman1515/UVM_Testbench_YAPP_Packet_Router.git,2022-10-03 13:51:29+00:00,,0,usman1515/UVM_Testbench_YAPP_Packet_Router,544936652,SystemVerilog,UVM_Testbench_YAPP_Packet_Router,40,0,2022-10-03 14:14:26+00:00,[],
10407,https://github.com/VictorHerbert/DigitalCores.git,2022-10-02 11:47:49+00:00,Systemverilog reusable modules,0,VictorHerbert/DigitalCores,544404070,SystemVerilog,DigitalCores,7,0,2022-10-02 14:27:26+00:00,[],
10408,https://github.com/JiHoonSong-1994/Undergraduate_Project_CNN_Accelerator.git,2022-10-30 01:12:03+00:00,,0,JiHoonSong-1994/Undergraduate_Project_CNN_Accelerator,559394659,SystemVerilog,Undergraduate_Project_CNN_Accelerator,119,0,2022-10-30 01:19:03+00:00,[],
10409,https://github.com/dleiferives/fpga-raytracer.git,2022-11-09 11:31:20+00:00,,0,dleiferives/fpga-raytracer,563806745,SystemVerilog,fpga-raytracer,3,0,2022-11-09 11:32:41+00:00,[],
10410,https://github.com/JonathanYin/CSE-140-L.git,2022-09-28 00:02:18+00:00,UwU verilog UwU,0,JonathanYin/CSE-140-L,542335162,SystemVerilog,CSE-140-L,6,0,2022-10-02 22:00:00+00:00,[],
10411,https://github.com/juanignava/ComputerArchitecture2.Project2.git,2022-10-13 03:55:37+00:00,Alpha composition vectorial ASIP design and implementation,0,juanignava/ComputerArchitecture2.Project2,550619884,SystemVerilog,ComputerArchitecture2.Project2,1599,0,2022-11-04 16:38:54+00:00,[],
10412,https://github.com/depsztyczek/VDIC.git,2022-10-13 14:13:22+00:00,Repository for laboratories regarding ,0,depsztyczek/VDIC,550904676,SystemVerilog,VDIC,651,0,2022-11-03 14:21:37+00:00,[],
10413,https://github.com/kkurenkov/ci_example.git,2022-10-15 10:47:25+00:00,Example for run ci using github-hosted runner,0,kkurenkov/ci_example,551899001,SystemVerilog,ci_example,8,0,2023-08-22 19:23:21+00:00,[],
10414,https://github.com/SerdarUnal132/training.git,2022-10-15 11:34:23+00:00,,0,SerdarUnal132/training,551914435,SystemVerilog,training,3,0,2022-10-15 12:17:42+00:00,[],
10415,https://github.com/FTBF/UtilityIP.git,2022-09-30 20:51:12+00:00,,0,FTBF/UtilityIP,543785732,SystemVerilog,UtilityIP,369,0,2022-09-30 20:52:47+00:00,[],
10416,https://github.com/athira123nair/System-Verilog-OOPS-concept.git,2022-10-18 12:46:42+00:00,"This repository gives various examples of System Verilog OOPs concepts like Inheritance, Encapsulation, Polymorphism and Abstraction.",0,athira123nair/System-Verilog-OOPS-concept,553583524,SystemVerilog,System-Verilog-OOPS-concept,8,0,2022-10-18 12:53:56+00:00,[],
10417,https://github.com/nickrallison/matrix_multiplier_architecture.git,2022-10-12 16:42:23+00:00,,0,nickrallison/matrix_multiplier_architecture,550370493,SystemVerilog,matrix_multiplier_architecture,15,0,2023-02-24 02:28:07+00:00,[],
10418,https://github.com/Heineken97/Algoritmo-de-Booth.git,2022-10-16 20:43:35+00:00,"En este proyecto busca introducir la implementación de algoritmos, por medio del diseño de una unidad de cálculo de multiplicación. Y de la misma forma, esta unidad deberá respetar un protocolo de bus para su correcto funcionamiento.",0,Heineken97/Algoritmo-de-Booth,552547678,SystemVerilog,Algoritmo-de-Booth,1037,0,2022-11-03 05:45:53+00:00,[],
10419,https://github.com/WarMachine0502/dsdl-sem3-verilog.git,2022-10-27 05:09:57+00:00,DSD Lab Verilog programs for ECE Semester-3,0,WarMachine0502/dsdl-sem3-verilog,558209441,SystemVerilog,dsdl-sem3-verilog,594,0,2022-10-27 05:16:09+00:00,[],
10420,https://github.com/hsndmr15/FB-CPU-System-Verilog-Test-Bench-Project.git,2022-11-29 18:25:37+00:00,,0,hsndmr15/FB-CPU-System-Verilog-Test-Bench-Project,572185561,SystemVerilog,FB-CPU-System-Verilog-Test-Bench-Project,2,0,2022-11-29 18:31:35+00:00,[],
10421,https://github.com/houhuawei23/DDCA_2022.git,2022-11-30 09:01:51+00:00,repository for the course Digital Design and Computer Archtecture at NUDT,0,houhuawei23/DDCA_2022,572430832,SystemVerilog,DDCA_2022,35613,0,2023-08-20 05:14:17+00:00,[],
10422,https://github.com/juhip880/uarttoi2c.git,2022-11-20 18:42:54+00:00,,0,juhip880/uarttoi2c,568507251,SystemVerilog,uarttoi2c,8,0,2022-11-20 20:09:50+00:00,[],
10423,https://github.com/Nagarjun444/SV-SRAM.git,2022-11-03 16:06:04+00:00,,0,Nagarjun444/SV-SRAM,561404661,SystemVerilog,SV-SRAM,3,0,2022-11-03 16:18:12+00:00,[],
10424,https://github.com/midimaster21b/axis-bfm.git,2022-11-06 06:09:39+00:00,A simple AXIS BFM,0,midimaster21b/axis-bfm,562372348,SystemVerilog,axis-bfm,12,0,2022-11-06 18:57:47+00:00,"['axis', 'bfm', 'fusesoc']",
10425,https://github.com/adinavale/bt.git,2022-11-07 15:01:13+00:00,,0,adinavale/bt,562932003,SystemVerilog,bt,9,0,2022-11-07 15:01:21+00:00,[],
10426,https://github.com/LongHoGit/Registers-file.git,2022-11-02 02:22:25+00:00,Hardware design of Registers file in Lab3 Computer Architecture Course,0,LongHoGit/Registers-file,560675147,SystemVerilog,Registers-file,0,0,2022-11-02 02:27:35+00:00,[],
10427,https://github.com/Abbywpy/improving-NMT-decoding.git,2022-11-30 23:18:08+00:00,,0,Abbywpy/improving-NMT-decoding,572735826,SystemVerilog,improving-NMT-decoding,30673,0,2023-01-08 19:13:43+00:00,[],https://api.github.com/licenses/mit
10428,https://github.com/Vishwesh11/Circuits.git,2022-11-29 17:54:40+00:00,,0,Vishwesh11/Circuits,572174029,SystemVerilog,Circuits,5,0,2024-01-26 16:31:28+00:00,[],
10429,https://github.com/mfaizan-10xe/Single_cycle_risc-v_microprocessor.git,2022-11-02 13:48:51+00:00,"Single Cycle RISC-V Microprocessor for I,R and B type instructions ",0,mfaizan-10xe/Single_cycle_risc-v_microprocessor,560889478,SystemVerilog,Single_cycle_risc-v_microprocessor,7,0,2022-11-02 13:51:08+00:00,[],
10430,https://github.com/mykale-y/CPE133.git,2022-10-30 20:30:22+00:00,,0,mykale-y/CPE133,559672581,SystemVerilog,CPE133,2,0,2022-10-30 20:48:03+00:00,[],
10431,https://github.com/njwsh001/Alveo_U200.git,2022-10-28 15:09:52+00:00,xilinx alveo u200 board,0,njwsh001/Alveo_U200,558907558,SystemVerilog,Alveo_U200,20,0,2022-10-28 15:51:33+00:00,[],https://api.github.com/licenses/apache-2.0
10432,https://github.com/KashyapKurella3000/100_Days_Of_RTL.git,2022-10-26 20:21:13+00:00,Daywise RTL programming,0,KashyapKurella3000/100_Days_Of_RTL,558058281,SystemVerilog,100_Days_Of_RTL,66,0,2023-01-11 06:48:26+00:00,[],
10433,https://github.com/aishwaryapatil26/ADLV.git,2022-10-12 09:36:54+00:00,,0,aishwaryapatil26/ADLV,550153451,SystemVerilog,ADLV,63,0,2022-10-12 09:38:00+00:00,[],
10434,https://github.com/daisycoder6/superdot.git,2022-10-12 20:12:25+00:00,,0,daisycoder6/superdot,550463248,SystemVerilog,superdot,1,0,2022-10-12 20:13:24+00:00,[],
10435,https://github.com/fabianchs/booth-algorithm.git,2022-10-13 14:54:57+00:00,,0,fabianchs/booth-algorithm,550929049,SystemVerilog,booth-algorithm,264,0,2022-11-03 02:00:18+00:00,[],
10436,https://github.com/ZZJ34/chisel_sv_lab.git,2022-10-16 01:45:00+00:00,,0,ZZJ34/chisel_sv_lab,552174541,SystemVerilog,chisel_sv_lab,81,0,2022-12-06 11:55:24+00:00,[],
10437,https://github.com/flaviens/mortyincludes.git,2022-10-14 09:16:10+00:00,,0,flaviens/mortyincludes,551368851,SystemVerilog,mortyincludes,1,0,2022-10-14 09:25:50+00:00,[],
10438,https://github.com/AllahWasya/My_Project-Single_Cycle_RISC_V_Processor.git,2022-10-25 14:00:05+00:00,AQL,0,AllahWasya/My_Project-Single_Cycle_RISC_V_Processor,557336411,SystemVerilog,My_Project-Single_Cycle_RISC_V_Processor,44,0,2022-12-14 09:18:43+00:00,[],
10439,https://github.com/shahul-vw/FIFO_UVM.git,2022-11-28 08:10:11+00:00,,0,shahul-vw/FIFO_UVM,571476676,SystemVerilog,FIFO_UVM,8,0,2022-11-28 09:04:50+00:00,[],
10440,https://github.com/VictorClements/RISC_Processor_CPE300Final.git,2022-11-29 17:08:14+00:00,,0,VictorClements/RISC_Processor_CPE300Final,572155666,SystemVerilog,RISC_Processor_CPE300Final,8065,0,2023-08-09 01:41:17+00:00,[],
10441,https://github.com/DeeSIZme/GPU.git,2022-11-29 13:58:04+00:00,,0,DeeSIZme/GPU,572074807,SystemVerilog,GPU,2689,0,2022-12-08 10:30:29+00:00,[],
10442,https://github.com/SteveF42/CSE-4010-Pipeline-w-Hazard-Forward-unit.git,2022-11-25 06:09:13+00:00,,0,SteveF42/CSE-4010-Pipeline-w-Hazard-Forward-unit,570415349,SystemVerilog,CSE-4010-Pipeline-w-Hazard-Forward-unit,16,0,2022-11-25 06:10:58+00:00,[],
10443,https://github.com/liloheinrich/Etch_a_sketch.git,2022-11-03 14:13:52+00:00,Computer Architecture Lab 2 Etch-a-Sketch,1,liloheinrich/Etch_a_sketch,561357048,SystemVerilog,Etch_a_sketch,18859,0,2022-11-17 03:21:58+00:00,[],
10444,https://github.com/ECE4278/lab8.git,2022-11-08 07:14:37+00:00,,0,ECE4278/lab8,563230385,SystemVerilog,lab8,15,0,2022-11-09 01:12:43+00:00,[],
10445,https://github.com/DarthRevan07/SetAssociativeCache.git,2022-11-13 13:44:38+00:00,,0,DarthRevan07/SetAssociativeCache,565461620,SystemVerilog,SetAssociativeCache,626,0,2022-11-13 18:03:29+00:00,[],
10446,https://github.com/SAIPRASADSTARK/Verilog-Code.git,2022-09-28 01:21:11+00:00,My work on syetem verilog,0,SAIPRASADSTARK/Verilog-Code,542355176,SystemVerilog,Verilog-Code,219,0,2022-09-28 01:27:36+00:00,[],
10447,https://github.com/kaminto-1999/ComputerArchitectureNCKU111.git,2022-09-29 09:26:36+00:00,,0,kaminto-1999/ComputerArchitectureNCKU111,543032134,SystemVerilog,ComputerArchitectureNCKU111,477,0,2023-01-08 06:59:37+00:00,[],
10448,https://github.com/djak1/Calc_verif.git,2022-11-20 16:54:07+00:00,,0,djak1/Calc_verif,568477742,SystemVerilog,Calc_verif,10,0,2022-11-20 16:56:37+00:00,[],
10449,https://github.com/GudduKumar0208/RAM-verification-via-System-verilog.git,2022-11-27 14:08:55+00:00,#verification of RAM #verification #vlsi #ram #verification of RAM #Random access memory #Random access memory verification #vsi verification #questasim #questa #verification via questa,0,GudduKumar0208/RAM-verification-via-System-verilog,571206949,SystemVerilog,RAM-verification-via-System-verilog,7,0,2022-12-02 02:37:03+00:00,[],
10450,https://github.com/sarah-blazic/tic_tac_toe.git,2022-11-28 00:19:19+00:00,Working tic tac toe game on a Zybo Z7-10 with the use of a VGA pmod,0,sarah-blazic/tic_tac_toe,571361756,SystemVerilog,tic_tac_toe,71,0,2022-11-28 00:32:26+00:00,[],
10451,https://github.com/flaviens/veriskew.git,2022-11-21 14:25:44+00:00,Suspecting a bug in Verilator 5.003,0,flaviens/veriskew,568842647,SystemVerilog,veriskew,2204,0,2022-12-03 14:25:13+00:00,[],
10452,https://github.com/karthikv6/CSE140L-Lab3.git,2022-11-13 21:30:11+00:00,,0,karthikv6/CSE140L-Lab3,565586963,SystemVerilog,CSE140L-Lab3,2855,0,2022-11-13 21:37:42+00:00,[],
10453,https://github.com/lisneygit/Adder_Subtractor_SV.git,2022-11-21 01:52:45+00:00,,0,lisneygit/Adder_Subtractor_SV,568598802,SystemVerilog,Adder_Subtractor_SV,1,0,2022-11-21 03:14:30+00:00,[],
10454,https://github.com/pAuLocordero222/Candy.git,2022-11-06 02:06:00+00:00,,0,pAuLocordero222/Candy,562332812,SystemVerilog,Candy,6,0,2022-11-06 02:14:15+00:00,[],
10455,https://github.com/syedmouaazfarrukh/RISC_V-ALU.git,2022-11-18 18:12:53+00:00,,0,syedmouaazfarrukh/RISC_V-ALU,567847326,SystemVerilog,RISC_V-ALU,2,0,2022-11-18 18:13:29+00:00,[],
10456,https://github.com/vele-mrs/fpga-tutorial-1a.git,2022-11-19 02:27:34+00:00,,0,vele-mrs/fpga-tutorial-1a,567961615,SystemVerilog,fpga-tutorial-1a,0,0,2022-11-19 02:28:30+00:00,[],
10457,https://github.com/tejedof/RiscV_Grupo3.git,2022-11-15 09:34:37+00:00,,0,tejedof/RiscV_Grupo3,566253099,SystemVerilog,RiscV_Grupo3,77,0,2022-12-13 10:17:35+00:00,[],
10458,https://github.com/satyaprakashakula/Matrix-Vector-Multiplier-with-AXI4-Stream-Interface.git,2022-11-02 05:04:00+00:00,RTL Design,0,satyaprakashakula/Matrix-Vector-Multiplier-with-AXI4-Stream-Interface,560713348,SystemVerilog,Matrix-Vector-Multiplier-with-AXI4-Stream-Interface,52,0,2024-02-11 05:19:59+00:00,[],
10459,https://github.com/MohammadMoshtagh/MIPS-Processor.git,2022-11-20 22:37:50+00:00,,0,MohammadMoshtagh/MIPS-Processor,568561934,SystemVerilog,MIPS-Processor,1537,0,2023-12-03 11:44:30+00:00,[],
10460,https://github.com/mfkiwl/astra.git,2022-11-30 21:17:10+00:00,,0,mfkiwl/astra,572704577,,astra,156,0,2023-07-19 23:03:00+00:00,[],
10461,https://github.com/JZJisawesome/jzjpipelinedcorec.git,2022-11-20 12:06:21+00:00,Mirror of git.jekel.ca/JZJ/jzjpipelinedcorec,0,JZJisawesome/jzjpipelinedcorec,568395768,SystemVerilog,jzjpipelinedcorec,210,0,2022-11-20 12:07:00+00:00,[],
10462,https://github.com/actions-marketplace-validations/dalance_svlint-action.git,2022-11-29 12:44:35+00:00,,0,actions-marketplace-validations/dalance_svlint-action,572044121,SystemVerilog,dalance_svlint-action,13,0,2022-11-29 12:45:03+00:00,[],https://api.github.com/licenses/mit
10463,https://github.com/wei-tianyu/SLAC-scalable-lowpower-accelerator-convolution.git,2022-11-26 14:49:58+00:00,,0,wei-tianyu/SLAC-scalable-lowpower-accelerator-convolution,570916041,SystemVerilog,SLAC-scalable-lowpower-accelerator-convolution,46708,0,2022-12-11 17:45:56+00:00,[],
10464,https://github.com/Boulder1999/Lab09-Design-and-Verification-Using-SystemVerilog.git,2022-12-01 07:04:41+00:00,,0,Boulder1999/Lab09-Design-and-Verification-Using-SystemVerilog,572853612,SystemVerilog,Lab09-Design-and-Verification-Using-SystemVerilog,2853,0,2022-12-01 07:06:42+00:00,[],
10465,https://github.com/weasleydf/SME.git,2022-11-30 03:35:42+00:00,,0,weasleydf/SME,572336184,SystemVerilog,SME,7,0,2022-11-30 03:36:35+00:00,[],
10466,https://github.com/Summondo/BacheloreProject.git,2022-12-01 12:48:49+00:00,The final project for my bachelore thesis,0,Summondo/BacheloreProject,572978315,SystemVerilog,BacheloreProject,538,0,2022-12-05 08:47:15+00:00,[],https://api.github.com/licenses/apache-2.0
10467,https://github.com/liloheinrich/RISC-V-CPU.git,2022-11-16 22:56:48+00:00,Computer Architecture Lab 3 RISC-V CPU,1,liloheinrich/RISC-V-CPU,567024365,SystemVerilog,RISC-V-CPU,4369,0,2022-11-17 03:22:21+00:00,[],
10468,https://github.com/meshack199/tug_of_war.git,2022-11-15 19:08:22+00:00,FPGA Simulation of Tug of War on DE1_SoC,0,meshack199/tug_of_war,566481542,,tug_of_war,847,0,2018-11-11 15:34:34+00:00,[],
10469,https://github.com/noemiabril/C64_MiSTer-Arrow_SoCKit.git,2022-10-20 17:34:08+00:00,C64 MiSTer Arrow SoCKit,0,noemiabril/C64_MiSTer-Arrow_SoCKit,554953585,SystemVerilog,C64_MiSTer-Arrow_SoCKit,2952,0,2022-10-20 17:34:17+00:00,[],
10470,https://github.com/raiyansiddique/comparchClass.git,2022-10-19 17:55:45+00:00,,0,raiyansiddique/comparchClass,554375506,SystemVerilog,comparchClass,8748,0,2022-10-19 18:00:41+00:00,[],https://api.github.com/licenses/mit
10471,https://github.com/weilong0512/AXI-bus-protocal-main.git,2022-10-19 04:56:47+00:00,,0,weilong0512/AXI-bus-protocal-main,553999585,SystemVerilog,AXI-bus-protocal-main,161,0,2022-10-19 04:57:12+00:00,[],
10472,https://github.com/hhuynh000/ARM-LEGv8-cpu.git,2022-10-16 00:12:18+00:00,Computer Architecture Final Project: implemented a cpu with a simplified version ARM LEGv8 instruction set using SystemVerilog. Simulated the cpu to run assembly code (Benchmarks folder) using ModelSim.,0,hhuynh000/ARM-LEGv8-cpu,552155108,SystemVerilog,ARM-LEGv8-cpu,45,0,2022-10-16 00:22:55+00:00,[],
10473,https://github.com/ishevche/MC14500B.git,2022-10-31 20:24:36+00:00,,0,ishevche/MC14500B,560139977,SystemVerilog,MC14500B,73,0,2022-12-10 16:04:04+00:00,[],
10474,https://github.com/XuanhaoZhao/digital-logic-A-simple-virtual-traffic-light.git,2022-11-10 06:26:21+00:00,"Project for the course ""digital logic"", 2022 spring",0,XuanhaoZhao/digital-logic-A-simple-virtual-traffic-light,564173472,SystemVerilog,digital-logic-A-simple-virtual-traffic-light,429,0,2022-11-10 06:28:18+00:00,[],
10475,https://github.com/Aditi-Dhibar/Traffic-Controller.git,2022-11-11 18:37:07+00:00,,0,Aditi-Dhibar/Traffic-Controller,564888810,SystemVerilog,Traffic-Controller,1,0,2022-11-11 18:43:50+00:00,[],
10476,https://github.com/KAMOME-code/Fast-modular-reduction-for-secp256k1.git,2022-11-15 23:28:48+00:00,with random test,0,KAMOME-code/Fast-modular-reduction-for-secp256k1,566558086,SystemVerilog,Fast-modular-reduction-for-secp256k1,3,0,2022-12-02 02:01:45+00:00,[],https://api.github.com/licenses/mit
10477,https://github.com/pateltanmayp/ece253_labs.git,2022-10-08 00:29:03+00:00,,0,pateltanmayp/ece253_labs,547596314,SystemVerilog,ece253_labs,16,0,2022-11-09 15:16:43+00:00,[],
10479,https://github.com/mohamedeedoo/64-Bit-ARM-ALU-Implementation.git,2022-10-29 19:35:57+00:00,A 64 Bit alu implementation based off of ARM op codes.,0,mohamedeedoo/64-Bit-ARM-ALU-Implementation,559333212,SystemVerilog,64-Bit-ARM-ALU-Implementation,8,0,2022-10-29 19:38:19+00:00,[],
10480,https://github.com/mohamedeedoo/ARM-Register-File.git,2022-10-29 19:42:36+00:00,Register File based off of ARM ISA,0,mohamedeedoo/ARM-Register-File,559334795,SystemVerilog,ARM-Register-File,8,0,2022-10-29 19:45:35+00:00,[],
10481,https://github.com/aelshahed1/Low-area-cache-coherence-protocol.git,2022-10-29 09:27:13+00:00,Design files for my MSc Dissertation,0,aelshahed1/Low-area-cache-coherence-protocol,559171400,SystemVerilog,Low-area-cache-coherence-protocol,908,0,2022-10-29 10:33:22+00:00,[],
10482,https://github.com/ALTair700/mailbox.git,2022-11-07 19:06:41+00:00,,0,ALTair700/mailbox,563030613,SystemVerilog,mailbox,195,0,2022-11-07 19:08:55+00:00,[],
10483,https://github.com/stefanct/riscv.git,2022-10-14 11:58:31+00:00,,1,stefanct/riscv,551437718,SystemVerilog,riscv,2527,0,2022-10-14 12:00:32+00:00,[],
10484,https://github.com/stefanct/minissimo.git,2022-10-14 15:02:04+00:00,,0,stefanct/minissimo,551522997,SystemVerilog,minissimo,27606,0,2022-10-25 21:48:24+00:00,[],
10485,https://github.com/DandyForever/VerilogPractice.git,2022-10-26 06:42:11+00:00,Simple tasks for Verilog Practice,0,DandyForever/VerilogPractice,557708002,SystemVerilog,VerilogPractice,21,0,2022-10-28 07:10:32+00:00,[],
10486,https://github.com/kkutchava/COMPE475G1-Microprocessors.git,2022-11-03 21:16:49+00:00,,0,kkutchava/COMPE475G1-Microprocessors,561512275,SystemVerilog,COMPE475G1-Microprocessors,906,0,2023-01-12 21:00:29+00:00,[],
10487,https://github.com/kamble7/Final_Project_18.git,2022-11-04 20:34:54+00:00,The simulation of the last level cache (LLC) for a new processor that can be used with up to three other processors in a shared memory configuration. ,0,kamble7/Final_Project_18,561931408,SystemVerilog,Final_Project_18,662,0,2022-12-06 20:01:13+00:00,[],
10488,https://github.com/Gkupa/compe475.git,2022-11-04 18:42:58+00:00,,1,Gkupa/compe475,561898583,SystemVerilog,compe475,1,0,2022-11-04 19:00:08+00:00,[],
10489,https://github.com/humayunsiraj123/RTL-LEARNING.git,2022-11-19 11:51:44+00:00,The repo is dedicated for my practice and learning related Verilog and System Verilog  ,0,humayunsiraj123/RTL-LEARNING,568081882,SystemVerilog,RTL-LEARNING,51,0,2023-12-18 12:12:59+00:00,[],
10490,https://github.com/dylanzflores/FPGA-Obstacle-Game.git,2022-11-09 08:40:40+00:00,PossibleGame,0,dylanzflores/FPGA-Obstacle-Game,563743908,SystemVerilog,FPGA-Obstacle-Game,73,0,2023-05-27 04:13:12+00:00,[],
10491,https://github.com/Rizo11/chip_design_course.git,2022-10-22 07:17:46+00:00,,0,Rizo11/chip_design_course,555728266,SystemVerilog,chip_design_course,17,0,2022-10-22 07:23:38+00:00,[],
10492,https://github.com/ZongzeL/RTL_design_research.git,2022-10-07 01:34:01+00:00,,0,ZongzeL/RTL_design_research,546997576,SystemVerilog,RTL_design_research,71,0,2023-03-13 20:15:00+00:00,[],
10493,https://github.com/nan3037/SIT-329-Task4.1.git,2022-10-10 11:32:37+00:00,,0,nan3037/SIT-329-Task4.1,548911562,SystemVerilog,SIT-329-Task4.1,3,0,2022-10-10 11:33:43+00:00,[],
10494,https://github.com/isinghsukh/DE1_SoC_Verilog.git,2022-10-30 16:08:50+00:00,,0,isinghsukh/DE1_SoC_Verilog,559600445,SystemVerilog,DE1_SoC_Verilog,14436,0,2022-10-30 16:44:18+00:00,[],
10495,https://github.com/peterzhangzm/UVM-chapter01.git,2022-11-07 16:39:19+00:00,,0,peterzhangzm/UVM-chapter01,562974360,SystemVerilog,UVM-chapter01,3,0,2022-11-08 14:42:21+00:00,[],
10496,https://github.com/midimaster21b/amba-interfaces.git,2022-11-06 01:30:01+00:00,A few quick interfaces for AMBA standards,0,midimaster21b/amba-interfaces,562327034,SystemVerilog,amba-interfaces,9,0,2022-11-06 03:05:50+00:00,"['systemverilog', 'fusesoc']",
10497,https://github.com/taichi-ishitani/hdl-advent-calender-2022.git,2022-11-14 14:20:02+00:00,HD Advent Calender 2022,0,taichi-ishitani/hdl-advent-calender-2022,565880037,SystemVerilog,hdl-advent-calender-2022,8,0,2022-11-14 15:57:41+00:00,[],https://api.github.com/licenses/mit
10498,https://github.com/rrios19/ADDER_UVM.git,2022-10-18 21:16:55+00:00,Ambiente de verificacion para un adder usando UVM,0,rrios19/ADDER_UVM,553838233,SystemVerilog,ADDER_UVM,6,0,2022-10-19 06:15:25+00:00,[],
10499,https://github.com/percentwei/IC_Project.git,2022-10-03 15:23:25+00:00,,0,percentwei/IC_Project,544983422,SystemVerilog,IC_Project,1707,0,2022-10-03 15:33:19+00:00,[],
10500,https://github.com/AzofeifaJ/Proyecto-3-Dise-o-L-gico.git,2022-10-18 01:54:43+00:00,En este repositorio se lleva a cabo el proceso de diseño del tercer proyecto del curso diseño lógico,0,AzofeifaJ/Proyecto-3-Dise-o-L-gico,553286253,SystemVerilog,Proyecto-3-Dise-o-L-gico,54,0,2022-11-17 08:59:34+00:00,[],https://api.github.com/licenses/mit
10501,https://github.com/Lombeelo/APB-BCD-Summator.git,2022-10-19 16:22:50+00:00,,0,Lombeelo/APB-BCD-Summator,554329989,SystemVerilog,APB-BCD-Summator,7,0,2022-10-19 16:22:58+00:00,[],
10502,https://github.com/shuny42657/pset5.git,2022-09-26 14:05:01+00:00,,0,shuny42657/pset5,541617812,SystemVerilog,pset5,1,0,2022-09-26 14:06:21+00:00,[],
10503,https://github.com/01fe21mve007/ADLV.git,2022-09-26 08:37:40+00:00,,0,01fe21mve007/ADLV,541486198,SystemVerilog,ADLV,390,0,2022-09-26 08:47:38+00:00,[],
10505,https://github.com/shaswat2428/AXI-BUS-Protocol-Verification.git,2022-10-02 08:59:07+00:00,,0,shaswat2428/AXI-BUS-Protocol-Verification,544351533,SystemVerilog,AXI-BUS-Protocol-Verification,12,0,2022-10-02 09:02:31+00:00,[],
10506,https://github.com/PrathammGupta/verilog.4.1.git,2022-09-29 12:21:55+00:00,,0,PrathammGupta/verilog.4.1,543107683,SystemVerilog,verilog.4.1,2,0,2022-09-29 12:23:02+00:00,[],
10507,https://github.com/ishwarya-debug/LC3_Verification.git,2022-11-19 02:58:03+00:00,,1,ishwarya-debug/LC3_Verification,567967143,SystemVerilog,LC3_Verification,12325,0,2022-11-19 03:28:47+00:00,[],
10508,https://github.com/ALI11-2000/riscof_plugin.git,2022-11-24 13:38:29+00:00,,0,ALI11-2000/riscof_plugin,570165326,SystemVerilog,riscof_plugin,12,0,2022-11-24 14:47:40+00:00,[],
10509,https://github.com/elianne-sacher/MIPS.git,2022-11-23 01:52:38+00:00,asfdfad,0,elianne-sacher/MIPS,569512563,SystemVerilog,MIPS,7634,0,2022-11-23 01:57:07+00:00,[],
10510,https://github.com/antoniocruz23/3002-MIPS-Processor-cw.git,2022-11-25 03:08:23+00:00,,0,antoniocruz23/3002-MIPS-Processor-cw,570375887,SystemVerilog,3002-MIPS-Processor-cw,4,0,2022-11-25 03:09:32+00:00,[],
10511,https://github.com/jatinp101/verilog-code.git,2022-10-09 23:37:06+00:00,System Verilog and Verilog code done in class ,0,jatinp101/verilog-code,548623291,SystemVerilog,verilog-code,94,0,2022-10-09 23:45:30+00:00,[],
10512,https://github.com/VINUTHNA-SRI/SV_Codes.git,2022-10-06 06:28:24+00:00,Codes written for different concepts to mention in the wiki,0,VINUTHNA-SRI/SV_Codes,546480673,SystemVerilog,SV_Codes,3,0,2022-10-06 06:53:51+00:00,[],
10513,https://github.com/AhsanAliUet/single-cycle-risc-v-implementation-in-system-verilog-with-verification.git,2022-10-07 14:30:06+00:00,"Fully implemented single cycle RISC-V with support of R, I, J, S, B and U type instructions. Also, formal verification test benches are written.",0,AhsanAliUet/single-cycle-risc-v-implementation-in-system-verilog-with-verification,547346816,SystemVerilog,single-cycle-risc-v-implementation-in-system-verilog-with-verification,6017,0,2023-01-09 20:16:58+00:00,[],
10514,https://github.com/Engghassanali/Three-Stage-Pipeline-with-CSR-Support.git,2022-11-30 10:24:38+00:00,,0,Engghassanali/Three-Stage-Pipeline-with-CSR-Support,572461308,SystemVerilog,Three-Stage-Pipeline-with-CSR-Support,26,0,2022-11-30 10:29:17+00:00,[],
10515,https://github.com/Engghassanali/Three-Stage-Pipeline.git,2022-11-29 11:25:31+00:00,Three Stage Pipeline,0,Engghassanali/Three-Stage-Pipeline,572013818,SystemVerilog,Three-Stage-Pipeline,12,0,2022-11-29 11:29:45+00:00,[],
10516,https://github.com/Fall-2022-Classes/fa22-final-project-team-1.git,2022-11-30 19:33:12+00:00,fa22-final-project-team-1 created by GitHub Classroom,0,Fall-2022-Classes/fa22-final-project-team-1,572674303,SystemVerilog,fa22-final-project-team-1,98,0,2022-12-07 19:49:06+00:00,[],
10517,https://github.com/konnpaku-youmu/CPAEP_lab.git,2022-11-09 09:30:35+00:00,,1,konnpaku-youmu/CPAEP_lab,563762664,SystemVerilog,CPAEP_lab,100931,0,2022-11-09 09:31:09+00:00,[],
10518,https://github.com/RobertoPSF/LOAC.git,2022-11-03 20:25:13+00:00,Laboratórios da cadeira de LOAC,0,RobertoPSF/LOAC,561496604,SystemVerilog,LOAC,15690,0,2022-12-28 20:27:31+00:00,[],
10519,https://github.com/GarrettTP/fpga-game-of-life.git,2022-11-10 08:07:02+00:00,Game of life written in HDL using SystemVerilog,0,GarrettTP/fpga-game-of-life,564204254,SystemVerilog,fpga-game-of-life,3553,0,2022-11-10 08:40:22+00:00,[],
10520,https://github.com/barawn/firmware-pueo-turfio.git,2022-11-10 15:05:19+00:00,Firmware for the PUEO TURFIO,0,barawn/firmware-pueo-turfio,564365817,SystemVerilog,firmware-pueo-turfio,441,0,2023-06-27 01:38:34+00:00,[],
10521,https://github.com/waterRK9/Virtual_Lightboard.git,2022-10-31 01:32:26+00:00,,0,waterRK9/Virtual_Lightboard,559736498,SystemVerilog,Virtual_Lightboard,5652,0,2023-11-09 03:46:07+00:00,[],
10522,https://github.com/ECE4278/lab6.git,2022-10-25 17:44:09+00:00,,0,ECE4278/lab6,557443258,SystemVerilog,lab6,11,0,2022-10-25 17:46:02+00:00,[],
10523,https://github.com/georgec7/Hardware-Generation-Tool-for-Neural-Network.git,2022-11-02 11:55:13+00:00,,0,georgec7/Hardware-Generation-Tool-for-Neural-Network,560844860,SystemVerilog,Hardware-Generation-Tool-for-Neural-Network,1513,0,2023-01-16 09:22:51+00:00,[],
10524,https://github.com/DavidGogia/hw2.git,2022-11-04 18:48:39+00:00,cope475 hw-ები,0,DavidGogia/hw2,561900539,SystemVerilog,hw2,5,0,2022-11-04 19:06:42+00:00,[],
10525,https://github.com/ece554fall22/rtl.git,2022-10-27 21:25:36+00:00,,0,ece554fall22/rtl,558588417,SystemVerilog,rtl,2545,0,2022-10-27 22:22:29+00:00,[],
10526,https://github.com/marisolcastellanos/RISCV.git,2022-10-26 06:58:57+00:00,,0,marisolcastellanos/RISCV,557714199,SystemVerilog,RISCV,50,0,2022-10-26 07:02:43+00:00,[],
10527,https://github.com/Jorpty/fpgasynth.git,2022-11-23 23:25:46+00:00,ECE 385 Final Project Code,0,Jorpty/fpgasynth,569920213,SystemVerilog,fpgasynth,9,0,2022-11-28 19:49:27+00:00,[],
10528,https://github.com/jaysunl/SHA256-Bitcoin-Hasher.git,2022-11-21 02:40:48+00:00,,0,jaysunl/SHA256-Bitcoin-Hasher,568609911,SystemVerilog,SHA256-Bitcoin-Hasher,4064,0,2022-12-19 06:21:39+00:00,[],
10529,https://github.com/EthanL929/ELEC6236.git,2022-10-08 22:21:54+00:00,,0,EthanL929/ELEC6236,548081683,SystemVerilog,ELEC6236,21,0,2023-11-27 09:59:37+00:00,[],
10530,https://github.com/laurentiuduca/rlsoc2.git,2022-11-30 10:16:26+00:00,,0,laurentiuduca/rlsoc2,572458413,SystemVerilog,rlsoc2,703,0,2024-03-09 14:17:04+00:00,[],https://api.github.com/licenses/mit
10531,https://github.com/aignacio/bus_arch_sv_pkg.git,2022-10-14 17:30:39+00:00,AMBA SystemVerilog structs,0,aignacio/bus_arch_sv_pkg,551586562,SystemVerilog,bus_arch_sv_pkg,5,0,2023-01-05 16:08:58+00:00,[],
10532,https://github.com/LenkaBrest/formal_verification.git,2022-09-26 18:03:50+00:00,,0,LenkaBrest/formal_verification,541718649,SystemVerilog,formal_verification,2,0,2022-09-26 18:10:12+00:00,[],
10533,https://github.com/huynkhai0505/Group8.git,2022-10-01 12:28:42+00:00,,0,huynkhai0505/Group8,544019345,SystemVerilog,Group8,2,0,2022-10-01 12:31:32+00:00,[],
10534,https://github.com/flaviens/verisegf.git,2022-10-10 12:12:02+00:00,,1,flaviens/verisegf,548931582,SystemVerilog,verisegf,412,0,2022-10-10 12:17:10+00:00,[],
10535,https://github.com/flaviens/verilator_internal_err_undriven.git,2022-10-17 11:38:00+00:00,,0,flaviens/verilator_internal_err_undriven,552887415,SystemVerilog,verilator_internal_err_undriven,1665,0,2022-10-17 11:54:00+00:00,[],
10536,https://github.com/noemiabril/Saturn.git,2022-10-16 20:37:35+00:00, Sega Saturn Compatible IP Core for FPGA ,0,noemiabril/Saturn,552545771,SystemVerilog,Saturn,11564,0,2022-10-16 20:37:52+00:00,[],
10537,https://github.com/adinavale/hw2_cursor.git,2022-10-21 05:53:38+00:00,,0,adinavale/hw2_cursor,555199203,SystemVerilog,hw2_cursor,156,0,2022-10-21 05:54:44+00:00,[],
10538,https://github.com/jdcasanasr/dragonfang.git,2022-10-31 23:06:54+00:00,"Dragonfang: An Embedded, General Purpose, RISC-V Based Vector Extension for the Lagarto Hun Processor",0,jdcasanasr/dragonfang,560182962,SystemVerilog,dragonfang,44176,0,2022-10-31 23:23:18+00:00,[],
10539,https://github.com/TimofeyAlexandrov/rv32i.git,2022-11-18 18:20:36+00:00,Harris,0,TimofeyAlexandrov/rv32i,567849823,SystemVerilog,rv32i,5,0,2022-11-18 18:22:38+00:00,[],
10540,https://github.com/nhanlo/Memory_1.git,2022-11-05 15:02:21+00:00,,0,nhanlo/Memory_1,562182220,SystemVerilog,Memory_1,2,0,2022-11-05 15:15:25+00:00,[],
10541,https://github.com/bmsully/peoplewatching.git,2022-11-01 12:55:33+00:00,,0,bmsully/peoplewatching,560412219,SystemVerilog,peoplewatching,1243,0,2023-02-23 14:14:54+00:00,[],
10542,https://github.com/Charis02/fpga-daw.git,2022-11-05 01:51:39+00:00,,1,Charis02/fpga-daw,561997353,SystemVerilog,fpga-daw,125,0,2022-12-02 17:13:23+00:00,[],
10543,https://github.com/adityab82/simple_risc_machine.git,2022-11-22 00:38:34+00:00,Designed a Simple RISC Machine ISA in System Verilog,0,adityab82/simple_risc_machine,569044214,SystemVerilog,simple_risc_machine,41,0,2022-11-22 00:39:46+00:00,[],
10544,https://github.com/UandersonSilva/MIPS.git,2022-11-10 12:42:14+00:00,,0,UandersonSilva/MIPS,564306601,SystemVerilog,MIPS,328,0,2022-11-15 15:05:17+00:00,[],
10545,https://github.com/barawn/surf_test.git,2022-11-22 21:27:04+00:00,Testing firmware for the SURFv6,0,barawn/surf_test,569452120,SystemVerilog,surf_test,1122,0,2022-11-22 21:27:37+00:00,[],
10546,https://github.com/firemountain154B/HSV.git,2022-11-26 17:26:26+00:00,,0,firemountain154B/HSV,570957733,SystemVerilog,HSV,33,0,2022-11-26 20:25:04+00:00,[],
10547,https://github.com/Krishnakiran1217/-100daysofRTLcoding.git,2022-10-05 13:36:45+00:00,Idea is to do RTL coding for 100 days and create something Good.,0,Krishnakiran1217/-100daysofRTLcoding,546076540,SystemVerilog,-100daysofRTLcoding,2,0,2022-10-06 13:22:31+00:00,[],
10548,https://github.com/Xiao215/ECE253.git,2022-10-14 16:33:02+00:00,,0,Xiao215/ECE253,551562587,SystemVerilog,ECE253,34,0,2022-10-14 16:33:55+00:00,[],
10549,https://github.com/Roderick-Wu/test.git,2022-11-09 03:57:10+00:00,,0,Roderick-Wu/test,563660790,SystemVerilog,test,5,0,2022-11-09 03:58:01+00:00,[],
10550,https://github.com/bryceberger/337-project.git,2022-11-10 20:35:52+00:00,,0,bryceberger/337-project,564488253,SystemVerilog,337-project,191,0,2022-12-20 02:08:39+00:00,[],
10551,https://github.com/madhu2000u/Multiply-Accumulate-Unit.git,2022-11-02 01:49:09+00:00,A multiply and accumulate hardware unit in SystemVerilog,0,madhu2000u/Multiply-Accumulate-Unit,560666749,SystemVerilog,Multiply-Accumulate-Unit,6,0,2022-11-02 01:56:22+00:00,[],
10552,https://github.com/luca-valente/sv_exercise.git,2022-11-18 16:47:51+00:00,,0,luca-valente/sv_exercise,567818615,SystemVerilog,sv_exercise,8,0,2022-11-18 17:36:47+00:00,[],
10553,https://github.com/edoardo-casapieri1/Design-of-a-digital-circuit-performing-the-Vigen-re-Cipher-decryption.git,2022-11-23 18:35:45+00:00,,0,edoardo-casapieri1/Design-of-a-digital-circuit-performing-the-Vigen-re-Cipher-decryption,569843255,SystemVerilog,Design-of-a-digital-circuit-performing-the-Vigen-re-Cipher-decryption,1078,0,2022-11-23 18:40:32+00:00,[],
10554,https://github.com/angryflyer/urv32-async.git,2022-11-24 03:43:51+00:00,,0,angryflyer/urv32-async,569976677,SystemVerilog,urv32-async,740,0,2022-12-06 10:48:53+00:00,[],
10555,https://github.com/jishengli65110114/small-tools.git,2022-11-28 01:04:01+00:00,,0,jishengli65110114/small-tools,571370564,SystemVerilog,small-tools,761,0,2022-12-16 11:32:40+00:00,[],
10556,https://github.com/Engghassanali/Single-Cycle-Processor.git,2022-11-29 11:01:21+00:00,Single Cycle Processor,0,Engghassanali/Single-Cycle-Processor,572004711,SystemVerilog,Single-Cycle-Processor,251,0,2022-11-29 11:21:16+00:00,[],
10557,https://github.com/Engghassanali/UART.git,2022-11-29 10:49:01+00:00,Universal Asynchronous Receiver Transmitter (UART),0,Engghassanali/UART,572000058,SystemVerilog,UART,1,0,2022-11-29 10:51:27+00:00,[],
10558,https://github.com/nahmadi95/test1.git,2022-12-01 20:40:45+00:00,,0,nahmadi95/test1,573160528,SystemVerilog,test1,1,0,2022-12-01 20:45:53+00:00,[],
10559,https://github.com/anbtrfl/skkv_lab2.git,2022-11-12 16:00:55+00:00,Лабораторная №2 по Архитектуре ЭВМ,0,anbtrfl/skkv_lab2,565187397,SystemVerilog,skkv_lab2,2667,0,2022-11-22 17:17:06+00:00,[],
10560,https://github.com/dineshannayya/rtc.git,2022-11-16 06:53:33+00:00,Real Time Core,0,dineshannayya/rtc,566669926,SystemVerilog,rtc,37,0,2022-11-18 16:43:38+00:00,[],https://api.github.com/licenses/apache-2.0
10561,https://github.com/JunnanLi/FL-M32.git,2022-11-13 15:19:29+00:00,,0,JunnanLi/FL-M32,565489197,SystemVerilog,FL-M32,293,0,2023-12-14 02:12:45+00:00,[],
10562,https://github.com/deniz-sun/cs224_lab4.git,2022-11-08 19:10:15+00:00,,0,deniz-sun/cs224_lab4,563511617,SystemVerilog,cs224_lab4,3,0,2024-02-21 20:57:04+00:00,[],
10563,https://github.com/martinKindall/basys3_fpga_sandbox.git,2022-11-18 23:29:04+00:00,"Learning the basics of Systemverilog, testbench and more.",0,martinKindall/basys3_fpga_sandbox,567929479,SystemVerilog,basys3_fpga_sandbox,14,0,2022-11-18 23:29:44+00:00,"['basys3', 'fpga', 'systemverilog']",
10564,https://github.com/wijapiotr/lift.git,2022-12-01 11:19:14+00:00,,0,wijapiotr/lift,572944944,SystemVerilog,lift,3,0,2022-12-01 11:49:52+00:00,[],
10565,https://github.com/sapross/Streaming-Trace-Buffer.git,2022-11-30 09:59:39+00:00,,0,sapross/Streaming-Trace-Buffer,572452358,SystemVerilog,Streaming-Trace-Buffer,214,0,2023-06-20 17:37:07+00:00,[],
10566,https://github.com/bryan-kwan/UART-Tx-Rx.git,2022-11-10 17:16:06+00:00,Verilog UART Transmitter/Receiver FSM design based on https://nandland.com/project-7-uart-part-1-receive-data-from-computer/,0,bryan-kwan/UART-Tx-Rx,564418989,SystemVerilog,UART-Tx-Rx,2,0,2022-11-10 17:17:46+00:00,[],
10567,https://github.com/AhibAlghazali/ESE545-CELL-SPU.git,2022-11-22 03:29:45+00:00,ESE 545 Final Submission - Dual-Issue Cell SPU-Lite Multimedia Processor,1,AhibAlghazali/ESE545-CELL-SPU,569085604,,ESE545-CELL-SPU,1320,0,2022-06-16 03:46:49+00:00,[],
10568,https://github.com/LxsaChn/lab6.git,2022-11-20 06:37:34+00:00,,0,LxsaChn/lab6,568323267,SystemVerilog,lab6,27,0,2022-11-20 06:39:01+00:00,[],
10569,https://github.com/s0321011/ibex_super_system.git,2022-10-11 14:14:18+00:00,,0,s0321011/ibex_super_system,549648760,SystemVerilog,ibex_super_system,2234,0,2022-10-11 15:53:12+00:00,[],https://api.github.com/licenses/apache-2.0
10570,https://github.com/rrios19/FPM-VFCI.git,2022-10-14 19:38:29+00:00,Segundo proyecto del curso verificación funcional de circuitos integrados,0,rrios19/FPM-VFCI,551634981,SystemVerilog,FPM-VFCI,1598,0,2022-11-22 05:31:33+00:00,[],
10571,https://github.com/timbarrera/Single-Cycle-RISCV-Processor.git,2022-10-08 07:52:59+00:00,,0,timbarrera/Single-Cycle-RISCV-Processor,547744577,SystemVerilog,Single-Cycle-RISCV-Processor,12,0,2022-11-18 10:57:36+00:00,[],
10572,https://github.com/alankuo04/AAHLS_LabA.git,2022-10-10 07:34:02+00:00,,0,alankuo04/AAHLS_LabA,548794042,SystemVerilog,AAHLS_LabA,91,0,2022-10-10 07:35:21+00:00,[],
10573,https://github.com/ArnyminerZ/UPV-ISDIGI-DIVISORBINARIO.git,2022-10-13 11:41:22+00:00,La segunda tarea de la asignatura ISDIGI. Diseño y verificación de un divisor binario.,1,ArnyminerZ/UPV-ISDIGI-DIVISORBINARIO,550823487,SystemVerilog,UPV-ISDIGI-DIVISORBINARIO,6378,0,2022-10-13 11:49:16+00:00,[],
10574,https://github.com/jovigob/Tarea2_ISDIGI_design.git,2022-10-11 10:03:57+00:00,,0,jovigob/Tarea2_ISDIGI_design,549520628,SystemVerilog,Tarea2_ISDIGI_design,311,0,2022-10-25 09:14:52+00:00,[],
10575,https://github.com/jdm2962/Verilog.git,2022-11-02 23:47:51+00:00,,0,jdm2962/Verilog,561094108,SystemVerilog,Verilog,2,0,2022-11-03 01:16:07+00:00,[],
10576,https://github.com/FasnaJF/product-list-processor.git,2022-11-07 07:40:23+00:00,,0,FasnaJF/product-list-processor,562757907,SystemVerilog,product-list-processor,2037,0,2022-11-07 19:41:38+00:00,[],
10577,https://github.com/HardGraphite/SystemVerilogPlayground.git,2022-10-06 01:28:53+00:00,SystemVerilog coding practices,0,HardGraphite/SystemVerilogPlayground,546373478,SystemVerilog,SystemVerilogPlayground,11,0,2022-10-17 19:16:12+00:00,[],
10578,https://github.com/vayne1125/Computer-System-Design_HW.git,2022-10-02 17:34:01+00:00,,0,vayne1125/Computer-System-Design_HW,544522112,SystemVerilog,Computer-System-Design_HW,63094,0,2022-10-04 02:30:54+00:00,[],
10579,https://github.com/ryanbelmont/School_Fall2022.git,2022-09-30 17:51:52+00:00,,0,ryanbelmont/School_Fall2022,543723138,SystemVerilog,School_Fall2022,448,0,2022-11-22 03:04:33+00:00,[],
10580,https://github.com/viceol/Lightelligence-Coding-Challenge-2022.git,2022-10-03 03:11:43+00:00,,0,viceol/Lightelligence-Coding-Challenge-2022,544681227,SystemVerilog,Lightelligence-Coding-Challenge-2022,49,0,2022-10-03 03:17:24+00:00,[],
10581,https://github.com/Kowareta993/riscv-processor-verilog.git,2022-10-08 15:41:00+00:00,Verilog description of riscv processor ,0,Kowareta993/riscv-processor-verilog,547933165,SystemVerilog,riscv-processor-verilog,20,0,2022-10-08 15:52:09+00:00,[],
10582,https://github.com/hamidkhd/MIPS-SingleCycle.git,2022-09-29 10:50:34+00:00,,0,hamidkhd/MIPS-SingleCycle,543068629,SystemVerilog,MIPS-SingleCycle,960,0,2022-09-29 10:55:26+00:00,[],
10583,https://github.com/aaarazm/FPGA_CA1.git,2022-10-09 09:18:13+00:00,Computer Assignment 1,0,aaarazm/FPGA_CA1,548294083,SystemVerilog,FPGA_CA1,5296,0,2022-10-11 16:09:22+00:00,[],
10584,https://github.com/dinhviethoa/dinhviethoa.git,2022-11-06 02:54:38+00:00,Config files for my GitHub profile.,0,dinhviethoa/dinhviethoa,562340654,SystemVerilog,dinhviethoa,6210,0,2022-11-06 02:55:49+00:00,"['config', 'github-config']",
10586,https://github.com/anmehta4/ece554_minilab5.git,2022-09-27 20:52:27+00:00,,0,anmehta4/ece554_minilab5,542284590,SystemVerilog,ece554_minilab5,1,0,2022-09-27 20:53:04+00:00,[],
10587,https://github.com/grantnedwards/ece748_projects.git,2022-09-28 04:33:46+00:00,,0,grantnedwards/ece748_projects,542407799,SystemVerilog,ece748_projects,30978,0,2022-12-15 03:01:14+00:00,[],
10588,https://github.com/shaswat2428/AHB-BUS-Protocol-Verification.git,2022-10-02 08:51:16+00:00,,0,shaswat2428/AHB-BUS-Protocol-Verification,544349356,SystemVerilog,AHB-BUS-Protocol-Verification,8,0,2022-10-02 08:52:45+00:00,[],
10589,https://github.com/lindaazhao/ECE253-Labs.git,2022-10-15 00:42:29+00:00,,0,lindaazhao/ECE253-Labs,551720010,SystemVerilog,ECE253-Labs,18,0,2023-10-10 16:48:19+00:00,[],
10590,https://github.com/BhavikJoshi/RISC-V-Simulator.git,2022-10-21 06:45:30+00:00,Verilog Simulation of a RISC-V Processor,0,BhavikJoshi/RISC-V-Simulator,555217561,SystemVerilog,RISC-V-Simulator,444,0,2023-10-12 20:37:23+00:00,[],
10591,https://github.com/arquitectura-de-computadores-1/ASIP_alpha.git,2022-10-25 09:28:57+00:00,,0,arquitectura-de-computadores-1/ASIP_alpha,557214169,SystemVerilog,ASIP_alpha,1788,0,2022-11-02 21:47:36+00:00,[],
10592,https://github.com/123orrin/Digital-Logic.git,2022-10-23 02:41:07+00:00,Digital Logic and Computer Architecture Modules. These projects were mainly created for an intermediate level university logic/computer course,0,123orrin/Digital-Logic,556083965,SystemVerilog,Digital-Logic,24,0,2022-10-23 18:23:23+00:00,[],
10593,https://github.com/Conquerix/dlx.git,2022-10-27 10:04:33+00:00,DLX ISA Implementation - 2 weeks project,0,Conquerix/dlx,558318286,SystemVerilog,dlx,1222,0,2024-02-03 18:32:56+00:00,[],
10594,https://github.com/PacoReinaCampo/OSVVM.git,2022-10-13 17:50:03+00:00,Open Source VHDL Verification Methodology,0,PacoReinaCampo/OSVVM,551017367,SystemVerilog,OSVVM,15111,0,2024-03-09 10:58:38+00:00,"['osvvm', 'validation']",
10595,https://github.com/FETup/LLC_Cache_Simulator.git,2022-11-04 18:39:32+00:00,This project aims to develop a comprehensive simulation tool for the Last Level Cache (LLC) in a multi-processor system. The LLC is an integral component that plays a crucial role in enhancing overall system performance by efficiently managing data access for up to four processors in a shared memory configuration.,0,FETup/LLC_Cache_Simulator,561897403,SystemVerilog,LLC_Cache_Simulator,340,0,2023-11-13 03:44:59+00:00,[],
10596,https://github.com/RehanQasim-dev/RISC-V-Single-Cycle-Non-pipelined-Processor-Core.git,2022-10-09 06:13:29+00:00,This is Single cycle RISC_V processor code written in System Verilog to run on FPGAs. ,0,RehanQasim-dev/RISC-V-Single-Cycle-Non-pipelined-Processor-Core,548225103,SystemVerilog,RISC-V-Single-Cycle-Non-pipelined-Processor-Core,6,0,2023-11-13 11:10:54+00:00,[],
10597,https://github.com/tvd0405/SVA.git,2022-10-09 13:24:45+00:00,,0,tvd0405/SVA,548390353,SystemVerilog,SVA,1,0,2022-10-09 13:25:03+00:00,[],
10598,https://github.com/Marwa2019uet/Risc_V.git,2022-11-07 18:14:20+00:00,Single cycle implementation of riscv in system verilog,0,Marwa2019uet/Risc_V,563011729,SystemVerilog,Risc_V,701,0,2022-11-07 18:15:58+00:00,[],
10599,https://github.com/ece554fall22/toolchain.git,2022-10-20 21:14:48+00:00,"morpheus assembler, linker (?), and simulator",0,ece554fall22/toolchain,555044240,SystemVerilog,toolchain,1108,0,2022-12-13 00:12:34+00:00,[],
10600,https://github.com/w-tess/isa-labs.git,2022-10-16 09:47:45+00:00,,0,w-tess/isa-labs,552309903,SystemVerilog,isa-labs,63584,0,2023-03-21 20:09:12+00:00,[],
10601,https://github.com/adityab82/digital-lock.git,2022-10-25 21:01:27+00:00,Designed a digital lock in System Verilog. Used a finite state machine combined with output combinational logic to create a mealy machine.,0,adityab82/digital-lock,557525158,SystemVerilog,digital-lock,2,0,2022-10-25 21:02:55+00:00,[],
10602,https://github.com/AMaldonadoLiu/ECE-485-Project.git,2022-11-01 03:07:49+00:00,this is a project repository for ECE 485 PSU,0,AMaldonadoLiu/ECE-485-Project,560239786,SystemVerilog,ECE-485-Project,2009,0,2022-11-18 00:16:38+00:00,[],
10603,https://github.com/alex210-1/VgaTerminal.git,2022-10-27 23:42:59+00:00,,0,alex210-1/VgaTerminal,558622916,SystemVerilog,VgaTerminal,358,0,2023-01-26 17:51:24+00:00,[],
10604,https://github.com/bryan-kwan/enel453lab3.git,2022-11-02 15:26:45+00:00,,0,bryan-kwan/enel453lab3,560934517,SystemVerilog,enel453lab3,17579,0,2022-11-02 16:01:25+00:00,[],
10605,https://github.com/IrenePBGH/UVM_PRUEBA.git,2022-10-06 07:26:13+00:00,Diseño de una prueba simple en UVM,0,IrenePBGH/UVM_PRUEBA,546506852,SystemVerilog,UVM_PRUEBA,2,0,2022-10-06 21:34:24+00:00,[],
10606,https://github.com/P-coryan/SystemVerilogModules.git,2022-10-01 20:21:47+00:00,"Diferentes módulos que voy desarrollando en SystemVerilog, que van sirviendo para otros proyectos reciclando ",0,P-coryan/SystemVerilogModules,544165825,SystemVerilog,SystemVerilogModules,5,0,2022-10-01 22:16:15+00:00,[],
10607,https://github.com/shaswat2428/APB-BUS-Protocol-Verification.git,2022-10-02 08:40:11+00:00,,0,shaswat2428/APB-BUS-Protocol-Verification,544346123,SystemVerilog,APB-BUS-Protocol-Verification,4,0,2022-10-02 08:41:43+00:00,[],
10608,https://github.com/N-Rolf/CSC244-Project1.git,2022-10-03 14:20:02+00:00,15 Cent Vending Machine,0,N-Rolf/CSC244-Project1,544951051,SystemVerilog,CSC244-Project1,22308,0,2022-10-03 15:59:58+00:00,[],
10609,https://github.com/hamidkhd/MIPS-MultiCycle.git,2022-09-29 10:57:43+00:00,,0,hamidkhd/MIPS-MultiCycle,543071615,SystemVerilog,MIPS-MultiCycle,1341,0,2022-09-29 11:04:25+00:00,[],
10610,https://github.com/JtmVillan/cse140-decryption.git,2022-09-25 19:02:03+00:00,,0,JtmVillan/cse140-decryption,541278981,SystemVerilog,cse140-decryption,101,0,2022-09-25 19:02:23+00:00,[],
10611,https://github.com/JtmVillan/cse140-trafficLights.git,2022-09-25 19:06:05+00:00,,0,JtmVillan/cse140-trafficLights,541280017,SystemVerilog,cse140-trafficLights,1313,0,2022-09-25 19:06:37+00:00,[],
10612,https://github.com/syuredEw/lifegame.git,2022-09-28 05:05:59+00:00,FPGA上にlifegameを実装しました．,0,syuredEw/lifegame,542416148,SystemVerilog,lifegame,10,0,2022-09-28 05:16:22+00:00,[],
10613,https://github.com/Qrisno/Engineering.git,2022-11-04 17:27:19+00:00,,0,Qrisno/Engineering,561873507,SystemVerilog,Engineering,1,0,2022-11-04 17:29:20+00:00,[],
10614,https://github.com/jonathan2503/Sverilog_IEEE_1800_2012.git,2022-10-29 21:44:51+00:00,"I use this repository to publish my results on the  Standard 1800-2012 for SystemVerilog, Unified Hardware Design, Specification, and Verification Language ",0,jonathan2503/Sverilog_IEEE_1800_2012,559360645,SystemVerilog,Sverilog_IEEE_1800_2012,3,0,2022-11-12 20:29:56+00:00,[],
10615,https://github.com/sv8194/uvm_accumulator.git,2022-10-30 19:08:38+00:00,,0,sv8194/uvm_accumulator,559651294,SystemVerilog,uvm_accumulator,262,0,2022-10-31 15:30:12+00:00,[],
10616,https://github.com/2019ajn/Veggie-Samurai.git,2022-11-01 17:28:11+00:00,,0,2019ajn/Veggie-Samurai,560522712,SystemVerilog,Veggie-Samurai,1181,0,2022-12-14 04:05:08+00:00,[],
10617,https://github.com/VolkodavValera/-atom.git,2022-11-01 07:06:06+00:00,,0,VolkodavValera/-atom,560300109,SystemVerilog,-atom,1539,0,2022-11-02 12:43:39+00:00,[],
10618,https://github.com/harshluffy1996/ECE-551.git,2022-10-15 00:33:52+00:00,,0,harshluffy1996/ECE-551,551718165,SystemVerilog,ECE-551,9325,0,2022-12-14 07:09:10+00:00,[],
10619,https://github.com/flaviens/prepbp.git,2022-11-15 08:49:26+00:00,,0,flaviens/prepbp,566236004,SystemVerilog,prepbp,1754,0,2022-11-15 08:49:57+00:00,[],
10620,https://github.com/likkaz/HW3.git,2022-11-18 20:06:38+00:00,,0,likkaz/HW3,567881204,SystemVerilog,HW3,0,0,2022-12-07 19:58:27+00:00,[],
10621,https://github.com/RaviSingh700/Fifo.git,2022-11-26 11:34:46+00:00,,0,RaviSingh700/Fifo,570864638,SystemVerilog,Fifo,7,0,2022-11-26 11:43:39+00:00,[],
10622,https://github.com/flaviens/veriskewsmall.git,2022-11-22 16:56:22+00:00,,0,flaviens/veriskewsmall,569364627,SystemVerilog,veriskewsmall,2215,0,2022-11-22 16:56:48+00:00,[],
10623,https://github.com/BoranSwaid/LSH-minhash-accelerator-project.git,2022-10-29 07:31:11+00:00,,0,BoranSwaid/LSH-minhash-accelerator-project,559143386,SystemVerilog,LSH-minhash-accelerator-project,6040,0,2023-12-03 13:28:11+00:00,[],
10624,https://github.com/oalsafi8/timed_fsms.git,2022-11-26 21:39:48+00:00,,0,oalsafi8/timed_fsms,571012602,SystemVerilog,timed_fsms,0,0,2022-11-27 04:31:19+00:00,[],
10625,https://github.com/MarceloRocha98/Controle-agricultura.git,2022-11-22 19:49:56+00:00,,0,MarceloRocha98/Controle-agricultura,569424269,SystemVerilog,Controle-agricultura,10,0,2022-11-23 14:14:42+00:00,[],
10626,https://github.com/elenaledo/test101.git,2022-10-11 04:15:59+00:00,,0,elenaledo/test101,549360194,SystemVerilog,test101,4,0,2022-10-11 04:20:14+00:00,[],
10627,https://github.com/Fall-2022-Classes/fa22-final-project-team-8.git,2022-11-28 23:15:34+00:00,fa22-final-project-team-8 created by GitHub Classroom,0,Fall-2022-Classes/fa22-final-project-team-8,571804327,SystemVerilog,fa22-final-project-team-8,1403,0,2022-12-07 20:57:39+00:00,[],
10628,https://github.com/bhanusahithya/my_projects.git,2022-11-26 09:31:37+00:00,This particular repository has the codes of some of my projects I have done till now,0,bhanusahithya/my_projects,570835021,SystemVerilog,my_projects,23,0,2023-10-27 20:38:36+00:00,[],
10629,https://github.com/RaviSingh700/fifo_V.git,2022-11-26 11:48:48+00:00,,0,RaviSingh700/fifo_V,570868111,SystemVerilog,fifo_V,17,0,2022-11-26 11:49:34+00:00,[],
10630,https://github.com/KAMOME-code/256bit-Unsigned-Sequential-Multiplier.git,2022-11-16 04:41:37+00:00,Unsigned binary 256 bit Sequential Multiplier with a 128 bit or 64 bit combinational Multiplier.,0,KAMOME-code/256bit-Unsigned-Sequential-Multiplier,566634391,SystemVerilog,256bit-Unsigned-Sequential-Multiplier,3,0,2022-11-19 09:12:07+00:00,[],
10631,https://github.com/Zandacrus/Computer-Architecture-and-Microprocessor-Memory-Project.git,2022-11-14 16:42:05+00:00,,0,Zandacrus/Computer-Architecture-and-Microprocessor-Memory-Project,565942519,SystemVerilog,Computer-Architecture-and-Microprocessor-Memory-Project,246,0,2022-11-22 18:20:25+00:00,[],
10632,https://github.com/m3aldabb/riscv-processor.git,2022-11-17 05:33:33+00:00,,0,m3aldabb/riscv-processor,567120857,SystemVerilog,riscv-processor,182,0,2023-07-04 23:30:12+00:00,[],
10633,https://github.com/samuelkravitz/6.111_Final-Project.git,2022-11-19 16:05:55+00:00,,0,samuelkravitz/6.111_Final-Project,568152635,SystemVerilog,6.111_Final-Project,8657,0,2022-12-04 17:18:54+00:00,[],
10634,https://github.com/MathieuSnd/paf-riscv.git,2022-11-24 13:14:13+00:00,,0,MathieuSnd/paf-riscv,570156240,SystemVerilog,paf-riscv,200,0,2022-12-28 12:30:42+00:00,[],
10635,https://github.com/Qnixx/Qx1.git,2022-11-25 02:52:51+00:00,Offical repo for the Qx1 CPU architecture.,0,Qnixx/Qx1,570372673,SystemVerilog,Qx1,6,0,2022-11-25 05:48:20+00:00,[],https://api.github.com/licenses/mit
10636,https://github.com/noemiabril/AtariST_MiSTer-Arrow_SoCKit.git,2022-10-30 16:21:56+00:00,AtariST for MiSTer Arrow SoCKit,0,noemiabril/AtariST_MiSTer-Arrow_SoCKit,559604359,SystemVerilog,AtariST_MiSTer-Arrow_SoCKit,12839,0,2022-10-30 16:22:06+00:00,[],
10637,https://github.com/iamazizhaider/singlecycle_riscv_processor.git,2022-11-03 17:57:09+00:00,"This project was designed to run on Nexys A7 Artix-7 FPGA Trainer Board. This processor written in System Verilog can run I-Type, R-Type, B-Type, S-Type RISC-V commands. The current instruction set that has been uploaded here finds the greatest common divisor of two numbers.",0,iamazizhaider/singlecycle_riscv_processor,561447434,SystemVerilog,singlecycle_riscv_processor,19,0,2022-12-25 08:36:25+00:00,"['risc-v', 'single-cycle-processor']",
10638,https://github.com/nnguyendinh/M116C-Honors.git,2022-10-31 00:11:58+00:00,,0,nnguyendinh/M116C-Honors,559719542,SystemVerilog,M116C-Honors,80,0,2022-10-31 00:13:14+00:00,[],
10639,https://github.com/Seema510126/miraculous_treasure.git,2022-10-27 10:42:08+00:00,,0,Seema510126/miraculous_treasure,558332778,,miraculous_treasure,2,0,2022-10-20 13:44:24+00:00,[],
10641,https://github.com/Seyviour/riscv_pipelined.git,2022-09-25 21:54:01+00:00,A pipelined (partial) implementation of the RV32I specification,0,Seyviour/riscv_pipelined,541319668,SystemVerilog,riscv_pipelined,257,0,2022-10-17 14:29:58+00:00,"['computer-architecture', 'risc-v', 'systemverilog']",
10642,https://github.com/za1nrkhan/awesome-dv.git,2022-11-09 12:10:32+00:00,,0,za1nrkhan/awesome-dv,563821349,SystemVerilog,awesome-dv,5059,0,2023-02-06 17:27:19+00:00,[],https://api.github.com/licenses/apache-2.0
10643,https://github.com/Rupesh1510/UART-sim-in-Verilog-DD-CP.git,2022-11-09 03:09:55+00:00,This is the repo of my course project of the subject digital design,0,Rupesh1510/UART-sim-in-Verilog-DD-CP,563648586,SystemVerilog,UART-sim-in-Verilog-DD-CP,52,0,2022-11-18 05:57:47+00:00,[],
10644,https://github.com/bryan-kwan/ENEL453Lab5.git,2022-11-11 21:17:51+00:00,,0,bryan-kwan/ENEL453Lab5,564934048,SystemVerilog,ENEL453Lab5,175,0,2022-11-11 21:18:26+00:00,[],
10645,https://github.com/Benjamin-Anderson-II/day-counter.git,2022-11-12 07:09:51+00:00,"SystemVerilog code that, when simulated create the circuit necessary to design a clock.",0,Benjamin-Anderson-II/day-counter,565050009,SystemVerilog,day-counter,4,0,2022-11-12 07:11:04+00:00,[],
10646,https://github.com/Palavelli-Naidu/UVM_dff.git,2022-11-10 18:30:28+00:00,,0,Palavelli-Naidu/UVM_dff,564446345,SystemVerilog,UVM_dff,3,0,2022-11-11 05:09:28+00:00,[],
10647,https://github.com/Jachm11/TallerDigitalesLab4.git,2022-09-28 23:26:51+00:00,Juego TIC TAC TOE en SystemVerilog,0,Jachm11/TallerDigitalesLab4,542832238,,TallerDigitalesLab4,237,0,2022-09-18 19:54:45+00:00,[],
10648,https://github.com/DarylFSN/Custom-ISA.git,2022-10-03 22:53:07+00:00,Computer Architecture Project,0,DarylFSN/Custom-ISA,545170891,SystemVerilog,Custom-ISA,721,0,2022-10-03 22:55:54+00:00,[],
10649,https://github.com/KasperHesse/riscv-core.git,2022-09-27 12:48:39+00:00,,0,KasperHesse/riscv-core,542081599,SystemVerilog,riscv-core,178,0,2023-10-30 15:37:52+00:00,[],https://api.github.com/licenses/unlicense
10650,https://github.com/Nitish1371/UVM.git,2022-10-04 04:42:19+00:00,,0,Nitish1371/UVM,545276952,SystemVerilog,UVM,20,0,2022-10-24 05:30:11+00:00,[],
10651,https://github.com/MiraculousTreasure/B5C1.git,2022-10-13 05:40:01+00:00,,0,MiraculousTreasure/B5C1,550655872,SystemVerilog,B5C1,1,0,2022-10-13 05:40:32+00:00,[],
10652,https://github.com/anaelenaBC/EL3307ProyectoIII.git,2022-10-18 21:57:41+00:00,,0,anaelenaBC/EL3307ProyectoIII,553852806,SystemVerilog,EL3307ProyectoIII,218,0,2022-11-17 09:52:34+00:00,[],
10653,https://github.com/dmezh/mips.git,2022-11-08 17:56:04+00:00,,0,dmezh/mips,563483954,SystemVerilog,mips,11,0,2022-11-08 17:59:03+00:00,[],
10654,https://github.com/naveen0215/uvm_sequence_library.git,2022-10-28 01:15:06+00:00,Just for wiki creation,0,naveen0215/uvm_sequence_library,558644049,SystemVerilog,uvm_sequence_library,202,0,2023-01-23 06:07:53+00:00,[],
10655,https://github.com/tjthejuggler/sva-tests.git,2022-11-08 07:51:10+00:00,,0,tjthejuggler/sva-tests,563242303,SystemVerilog,sva-tests,17,0,2022-11-08 07:51:19+00:00,[],
10656,https://github.com/VELIDIPRADEEPKUMAR/FPGA-implementation-of-AdEx-Neuron-model.git,2022-10-23 05:40:37+00:00,This repo consists of verilog neuron model of AdEx neuron with our custum approximations,0,VELIDIPRADEEPKUMAR/FPGA-implementation-of-AdEx-Neuron-model,556128985,SystemVerilog,FPGA-implementation-of-AdEx-Neuron-model,395,0,2022-10-23 05:42:45+00:00,[],
10657,https://github.com/retar-kamuy/verilator.git,2022-10-15 06:20:27+00:00,,0,retar-kamuy/verilator,551811954,SystemVerilog,verilator,6976,0,2023-06-17 12:42:14+00:00,[],
10658,https://github.com/weilong0512/AXI-bus-protocal.git,2022-10-15 14:25:58+00:00,,0,weilong0512/AXI-bus-protocal,551976074,SystemVerilog,AXI-bus-protocal,12,0,2022-10-16 09:28:03+00:00,[],
10659,https://github.com/N-Rolf/Project_2.git,2022-11-08 20:18:44+00:00,ARM Processor for FPGA Board,0,N-Rolf/Project_2,563535375,SystemVerilog,Project_2,9287,0,2023-12-05 04:32:10+00:00,[],
10660,https://github.com/cliffordkchan/Reduced-RISC-V-CPU.git,2022-11-17 10:15:36+00:00,Lab 4 groupwork,0,cliffordkchan/Reduced-RISC-V-CPU,567215092,SystemVerilog,Reduced-RISC-V-CPU,348,0,2022-11-24 13:20:59+00:00,[],
10661,https://github.com/abhishekvarma827/UVM.git,2022-09-26 19:58:21+00:00,,0,abhishekvarma827/UVM,541762075,SystemVerilog,UVM,215,0,2024-02-17 01:59:35+00:00,[],
10662,https://github.com/ff1211/fpga-lite.git,2022-11-28 02:56:24+00:00,,0,ff1211/fpga-lite,571394769,SystemVerilog,fpga-lite,90,0,2022-11-28 08:04:01+00:00,[],https://api.github.com/licenses/mit
10663,https://github.com/DandyForever/PipelinedRiscV-RTL.git,2022-10-26 06:44:12+00:00,RTL for Pipelined RISC-V processor,0,DandyForever/PipelinedRiscV-RTL,557708731,SystemVerilog,PipelinedRiscV-RTL,67,0,2022-12-07 14:02:13+00:00,[],
10664,https://github.com/KevinZhuGit/ECE253.git,2022-11-11 19:50:43+00:00,Digital and Computer Systems Course,0,KevinZhuGit/ECE253,564910790,SystemVerilog,ECE253,192,0,2022-11-11 19:51:30+00:00,[],
10665,https://github.com/Sharmi-Rajakumaran/System_Verilog_L.git,2022-11-18 09:11:37+00:00,,0,Sharmi-Rajakumaran/System_Verilog_L,567654639,SystemVerilog,System_Verilog_L,53,0,2022-11-18 10:07:07+00:00,[],
10666,https://github.com/ulissesmaffa/game-snake.git,2022-11-20 21:59:56+00:00,,0,ulissesmaffa/game-snake,568554324,SystemVerilog,game-snake,398,0,2022-12-06 19:11:42+00:00,[],
10667,https://github.com/syedmouaazfarrukh/RISCV-Single_Cycle_Processor_-R-S-U-I-.git,2022-11-20 17:02:53+00:00,"This repo contains the single cycle architecture for RISC V involving R, I, U and S type instructions",0,syedmouaazfarrukh/RISCV-Single_Cycle_Processor_-R-S-U-I-,568480188,SystemVerilog,RISCV-Single_Cycle_Processor_-R-S-U-I-,6,0,2022-11-20 17:04:31+00:00,[],
10668,https://github.com/vedadehhc/rend3r.git,2022-11-19 23:35:17+00:00,,0,vedadehhc/rend3r,568254812,SystemVerilog,rend3r,5937,0,2022-11-19 23:41:09+00:00,[],
10669,https://github.com/worstanimu/riscv_project.git,2022-11-19 20:17:40+00:00,"32-bit, 5-stage pipelined RISC-V SystemVerilog Model",0,worstanimu/riscv_project,568216632,SystemVerilog,riscv_project,17,0,2022-11-26 23:15:30+00:00,[],https://api.github.com/licenses/gpl-3.0
10670,https://github.com/ezrakang/Xilinx_FPGA_Augmented_Reality_Card.git,2022-11-27 19:37:27+00:00,,0,ezrakang/Xilinx_FPGA_Augmented_Reality_Card,571299956,SystemVerilog,Xilinx_FPGA_Augmented_Reality_Card,584,0,2022-12-06 01:05:47+00:00,[],
10671,https://github.com/nickhoug/6205-fp.git,2022-11-30 22:40:21+00:00,,0,nickhoug/6205-fp,572726998,SystemVerilog,6205-fp,118385,0,2022-11-30 22:46:09+00:00,[],https://api.github.com/licenses/mit
10672,https://github.com/nmi-sc/riscv-dv.git,2022-10-21 11:17:54+00:00,,0,nmi-sc/riscv-dv,555329718,SystemVerilog,riscv-dv,10891,0,2022-10-21 11:20:02+00:00,[],https://api.github.com/licenses/apache-2.0
10673,https://github.com/echen352/Number-Guessing.git,2022-11-15 23:13:44+00:00,Advanced Digital Final Project,0,echen352/Number-Guessing,566554695,SystemVerilog,Number-Guessing,2261,0,2022-11-16 00:33:37+00:00,[],
10674,https://github.com/HazeSystem/snake-fpga.git,2022-11-15 16:47:27+00:00,A Snake clone made using the Verilog simulator on 8bitworkshop.com,0,HazeSystem/snake-fpga,566428141,SystemVerilog,snake-fpga,7,0,2022-11-21 20:13:08+00:00,[],
10675,https://github.com/ECE4278/lab9.git,2022-11-15 16:23:49+00:00,,0,ECE4278/lab9,566418563,SystemVerilog,lab9,18,0,2022-11-16 01:39:56+00:00,[],
10676,https://github.com/ShahidShann/uvm_object_print.git,2022-11-15 10:43:25+00:00,,0,ShahidShann/uvm_object_print,566279796,SystemVerilog,uvm_object_print,6082,0,2022-11-15 12:06:06+00:00,[],
10677,https://github.com/junhwanlee2316/32bit_ArithmeticLogicUnit.git,2022-10-04 06:01:40+00:00,,0,junhwanlee2316/32bit_ArithmeticLogicUnit,545302476,SystemVerilog,32bit_ArithmeticLogicUnit,9,0,2022-10-28 06:36:20+00:00,[],
10678,https://github.com/great-park/Computer-Architecture-Lab.git,2022-10-04 15:19:31+00:00,"MIPS Single_Cycle Datapath Implementation The final result will be stored in ""Lab10"", which will be implemented sequentially according to the Lab's number.",0,great-park/Computer-Architecture-Lab,545555840,SystemVerilog,Computer-Architecture-Lab,32,0,2022-12-06 04:28:31+00:00,[],
10679,https://github.com/XuJiaWen1998/Victim-Cache-and-Combining-Branch-Predictor-on-32-bit-MIPS-processor-.git,2022-10-02 23:28:28+00:00,,0,XuJiaWen1998/Victim-Cache-and-Combining-Branch-Predictor-on-32-bit-MIPS-processor-,544623992,SystemVerilog,Victim-Cache-and-Combining-Branch-Predictor-on-32-bit-MIPS-processor-,4891,0,2023-09-18 01:48:03+00:00,[],
10680,https://github.com/Jettypanini/ChipDesignandVerification.git,2022-10-01 18:28:03+00:00,,0,Jettypanini/ChipDesignandVerification,544133627,SystemVerilog,ChipDesignandVerification,1375,0,2022-11-08 13:37:24+00:00,[],
10681,https://github.com/tobyProctor/100daysOfRTL.git,2022-10-12 06:59:18+00:00,100 days of RTL,0,tobyProctor/100daysOfRTL,550074405,SystemVerilog,100daysOfRTL,13,0,2022-10-13 18:36:27+00:00,[],
10682,https://github.com/ajwm8103/verilog-music.git,2022-10-16 20:23:29+00:00,,0,ajwm8103/verilog-music,552541220,SystemVerilog,verilog-music,26435,0,2022-10-16 20:24:13+00:00,[],
10683,https://github.com/Desrep/Proyectos_functional_verification.git,2022-10-17 05:51:35+00:00,,0,Desrep/Proyectos_functional_verification,552717806,SystemVerilog,Proyectos_functional_verification,4291,0,2023-03-21 01:50:38+00:00,[],
10684,https://github.com/aaronlio/ECE253.git,2022-09-26 03:12:42+00:00,,0,aaronlio/ECE253,541388851,SystemVerilog,ECE253,60,0,2022-11-02 20:15:35+00:00,[],
10685,https://github.com/VishwaRiscVPowerModeling/riscv_power_modeling.git,2022-10-10 09:32:17+00:00,,0,VishwaRiscVPowerModeling/riscv_power_modeling,548852760,SystemVerilog,riscv_power_modeling,131,0,2022-10-11 07:13:30+00:00,[],
10686,https://github.com/ThrudTheBarbarian/xio.git,2022-10-20 23:52:59+00:00,XL io subsystem using Gowin GW2A-18,0,ThrudTheBarbarian/xio,555091216,SystemVerilog,xio,29,0,2022-10-21 00:14:14+00:00,[],https://api.github.com/licenses/gpl-3.0
10687,https://github.com/jhladik/zybo-playground.git,2022-11-07 01:54:03+00:00,,0,jhladik/zybo-playground,562667712,SystemVerilog,zybo-playground,64,0,2022-11-07 01:59:21+00:00,[],https://api.github.com/licenses/gpl-3.0
10688,https://github.com/AkshatDhavala/SpandexCode.git,2022-11-07 03:05:58+00:00,,0,AkshatDhavala/SpandexCode,562685382,SystemVerilog,SpandexCode,11,0,2022-11-07 03:40:08+00:00,[],
10689,https://github.com/Ammar-10xe/RISCV-32I-3-Stage-Pipelined-Processor.git,2022-11-30 15:13:39+00:00,This repo contains the three stage pipelined processor of RV32I,0,Ammar-10xe/RISCV-32I-3-Stage-Pipelined-Processor,572576291,SystemVerilog,RISCV-32I-3-Stage-Pipelined-Processor,1036,0,2022-12-02 21:49:21+00:00,[],
10690,https://github.com/mahadevaswamy05/MIT_Code.git,2022-11-08 18:19:43+00:00,,0,mahadevaswamy05/MIT_Code,563492931,SystemVerilog,MIT_Code,19512,0,2023-05-20 09:44:30+00:00,[],
10691,https://github.com/LeviJunior21/Lab.-Organizacao-Arquitetura-de-Computadores.git,2022-10-16 17:34:12+00:00,,0,LeviJunior21/Lab.-Organizacao-Arquitetura-de-Computadores,552480837,SystemVerilog,Lab.-Organizacao-Arquitetura-de-Computadores,10726,0,2023-11-11 15:52:47+00:00,[],
10692,https://github.com/dlyixue/pipCpu.git,2022-10-11 11:41:01+00:00,,0,dlyixue/pipCpu,549567558,SystemVerilog,pipCpu,8,0,2022-10-11 11:48:10+00:00,[],
10693,https://github.com/sapross/risc_dbg_uart.git,2022-10-07 12:00:26+00:00,,0,sapross/risc_dbg_uart,547266445,SystemVerilog,risc_dbg_uart,834,0,2023-10-08 12:20:50+00:00,[],
10694,https://github.com/pmajtas/VDIC.git,2022-10-13 14:43:38+00:00,,0,pmajtas/VDIC,550922144,SystemVerilog,VDIC,4826,0,2022-11-03 14:31:40+00:00,[],
10695,https://github.com/rrios19/PATTERN-VFCI.git,2022-10-06 03:50:28+00:00,Ejemplo para DUT simple usando UVM,0,rrios19/PATTERN-VFCI,546422530,SystemVerilog,PATTERN-VFCI,10,0,2022-10-20 19:51:49+00:00,[],
10696,https://github.com/ishraqtashdid/Automated-Washing-Machine.git,2022-11-12 14:24:04+00:00,,0,ishraqtashdid/Automated-Washing-Machine,565159119,SystemVerilog,Automated-Washing-Machine,3,0,2022-11-12 14:25:25+00:00,[],
10697,https://github.com/shuny42657/6.205_lab05.git,2022-10-24 13:50:10+00:00,lab05,0,shuny42657/6.205_lab05,556777436,SystemVerilog,6.205_lab05,107,0,2022-10-24 13:51:50+00:00,[],
10698,https://github.com/mohammedabdulhaq/Synchronous-fifo.git,2022-10-19 06:55:08+00:00,In this i and my friend kaushik have designed a Synchronous fifo.,0,mohammedabdulhaq/Synchronous-fifo,554046067,SystemVerilog,Synchronous-fifo,1,0,2022-10-19 07:03:00+00:00,[],
10699,https://github.com/UlkeiSzabolcs/Large-Scale-Integrated-Circuits.git,2022-10-20 13:34:54+00:00,,0,UlkeiSzabolcs/Large-Scale-Integrated-Circuits,554837205,SystemVerilog,Large-Scale-Integrated-Circuits,3035,0,2022-10-20 13:36:20+00:00,[],
10700,https://github.com/2nina2/Nonogram-Solver.git,2022-10-23 20:58:15+00:00,nonogram solver built on FPGA,0,2nina2/Nonogram-Solver,556435155,SystemVerilog,Nonogram-Solver,1110,0,2023-01-28 16:44:04+00:00,[],
10701,https://github.com/erasskazov/axi-lite-apb-converter.git,2022-10-28 09:47:26+00:00,,0,erasskazov/axi-lite-apb-converter,558788065,SystemVerilog,axi-lite-apb-converter,41,0,2022-10-28 09:57:20+00:00,[],
10702,https://github.com/lukasibashvili/compe457.git,2022-11-04 19:07:04+00:00,,1,lukasibashvili/compe457,561906383,SystemVerilog,compe457,2,0,2022-11-04 19:13:30+00:00,[],
10703,https://github.com/glovermart/Design-of-Digital-Systems-2.git,2022-11-16 18:58:12+00:00,Project Work in the course DDS 2,0,glovermart/Design-of-Digital-Systems-2,566950895,SystemVerilog,Design-of-Digital-Systems-2,413,0,2022-11-24 20:54:50+00:00,[],
10704,https://github.com/joeya20/ENEL592-FinalProject.git,2022-11-21 20:33:06+00:00,,0,joeya20/ENEL592-FinalProject,568980911,SystemVerilog,ENEL592-FinalProject,39674,0,2022-12-11 00:27:57+00:00,[],
10705,https://github.com/asimahsan1990/cadence_system_verilog_labs.git,2022-10-10 11:33:54+00:00,,0,asimahsan1990/cadence_system_verilog_labs,548912199,SystemVerilog,cadence_system_verilog_labs,8,0,2022-10-10 11:47:19+00:00,[],
10706,https://github.com/yacremann/electron_event_generator.git,2022-10-03 13:11:09+00:00,Device and firmware to simulate electron events on a delayline detector,0,yacremann/electron_event_generator,544916226,SystemVerilog,electron_event_generator,1889,0,2022-10-03 13:25:36+00:00,[],
10707,https://github.com/pAuLocordero222/Quiz_VFCI.git,2022-10-13 04:39:33+00:00,,0,pAuLocordero222/Quiz_VFCI,550634601,SystemVerilog,Quiz_VFCI,4154,0,2022-10-13 04:45:49+00:00,[],
10708,https://github.com/bryan-kwan/enel453lab3b.git,2022-11-06 01:33:20+00:00,,0,bryan-kwan/enel453lab3b,562327547,SystemVerilog,enel453lab3b,50,0,2022-11-06 01:34:04+00:00,[],
10709,https://github.com/jrchakalo/VHDL.git,2022-11-05 13:58:52+00:00,Repositório de códigos em VHDL,0,jrchakalo/VHDL,562162619,SystemVerilog,VHDL,3,0,2022-11-05 14:07:40+00:00,[],
10710,https://github.com/ahnhy1324/altera.git,2022-10-08 06:13:52+00:00,verilog,0,ahnhy1324/altera,547707635,SystemVerilog,altera,32614,0,2022-10-08 06:14:35+00:00,[],
10711,https://github.com/ChenJianJun520/AXI.git,2022-11-25 02:05:38+00:00,Using systemverilog write AXI,0,ChenJianJun520/AXI,570363050,SystemVerilog,AXI,7,0,2022-11-25 02:10:46+00:00,[],
10712,https://github.com/ONQLin/Segway_551.git,2022-11-30 16:01:44+00:00,Sim and Syn RTL design for Segway prj,0,ONQLin/Segway_551,572596445,SystemVerilog,Segway_551,300,0,2022-12-20 05:10:13+00:00,[],
10713,https://github.com/noemiabril/AtariST_MiSTer-DE10-Standard.git,2022-11-27 15:02:44+00:00,AtariST Core for MiSTer DE10-Standard,0,noemiabril/AtariST_MiSTer-DE10-Standard,571222778,SystemVerilog,AtariST_MiSTer-DE10-Standard,12839,0,2022-11-27 15:02:53+00:00,[],
10714,https://github.com/rhit-bryantlj/VerilogPongGame.git,2022-10-31 13:05:50+00:00,Repository containing the code for implementing the classic game Pong on a Nexys A7 Digilent FPGA development board.,1,rhit-bryantlj/VerilogPongGame,559958458,SystemVerilog,VerilogPongGame,6762,0,2024-03-01 12:59:29+00:00,"['digitaldesign', 'systemverilog', 'verilog', 'vhdl']",
10715,https://github.com/mingfeii/script.git,2022-11-12 06:36:59+00:00,有用的脚本,0,mingfeii/script,565042973,SystemVerilog,script,2280,0,2023-05-11 15:03:12+00:00,[],
10716,https://github.com/nvchuyen/Verification_of_SPI_memory.git,2022-12-01 04:06:22+00:00,,0,nvchuyen/Verification_of_SPI_memory,572804443,SystemVerilog,Verification_of_SPI_memory,5622,0,2023-11-06 08:54:55+00:00,[],
10717,https://github.com/HipEx15/MIPS_Processor.git,2022-09-30 18:57:23+00:00,,0,HipEx15/MIPS_Processor,543747885,SystemVerilog,MIPS_Processor,2805,0,2023-07-31 11:44:20+00:00,[],
10718,https://github.com/suti333/PipelinedProcessor.git,2022-10-23 13:54:01+00:00,"Simulation of a 5-stage Pipelined Processor with static branch prediction in SystemVerilog, based on a custom MIPS instruction set and benchmarked the processor for a given set of tasks.",1,suti333/PipelinedProcessor,556282696,SystemVerilog,PipelinedProcessor,99,0,2023-11-03 17:09:35+00:00,[],
10719,https://github.com/HongjianZz/FPGA-Projects-HJ.git,2022-10-30 23:17:24+00:00,In class FPGA related projects,0,HongjianZz/FPGA-Projects-HJ,559709654,SystemVerilog,FPGA-Projects-HJ,5,0,2022-10-30 23:19:04+00:00,[],
10720,https://github.com/LongHoGit/Memory.git,2022-11-02 02:28:30+00:00,Include data memory and instruction memory,0,LongHoGit/Memory,560676572,SystemVerilog,Memory,4,0,2022-11-02 02:32:43+00:00,[],
10721,https://github.com/LongHoGit/lsu.git,2022-11-02 02:35:15+00:00,"The Load-Store Unit include Data memory, Input peripheral memory and Output peripheral memory",0,LongHoGit/lsu,560678197,SystemVerilog,lsu,6,0,2022-11-02 02:35:45+00:00,[],
10722,https://github.com/architjaiswal/GPIO_IP.git,2022-10-06 22:38:00+00:00,,0,architjaiswal/GPIO_IP,546940500,SystemVerilog,GPIO_IP,37873,0,2022-10-06 22:39:10+00:00,[],
10723,https://github.com/faysal04/uvm_practice_v1.git,2022-10-14 07:48:08+00:00,,0,faysal04/uvm_practice_v1,551330758,SystemVerilog,uvm_practice_v1,11,0,2022-10-14 08:03:01+00:00,[],
10724,https://github.com/liloheinrich/ConwaysGameOfLife.git,2022-10-03 21:14:41+00:00,Computer Architecture Lab 1 Conway's Game of Life,1,liloheinrich/ConwaysGameOfLife,545139586,SystemVerilog,ConwaysGameOfLife,1344,0,2022-11-17 03:22:04+00:00,[],
10725,https://github.com/ECE4278/lab4.git,2022-10-04 10:49:26+00:00,,0,ECE4278/lab4,545424359,SystemVerilog,lab4,11,0,2022-10-04 10:52:57+00:00,[],
10726,https://github.com/ShahidShann/events.git,2022-11-16 06:18:41+00:00,,0,ShahidShann/events,566659744,SystemVerilog,events,33,0,2022-11-16 06:43:34+00:00,[],
10727,https://github.com/davidrm3/FinalProject.git,2022-11-16 20:12:05+00:00,ECE385 final project,0,davidrm3/FinalProject,566976232,SystemVerilog,FinalProject,6628,0,2022-11-16 23:29:04+00:00,[],
10728,https://github.com/marisolcastellanos/RISCV-5-stage-Pipeline.git,2022-11-22 15:40:34+00:00,,0,marisolcastellanos/RISCV-5-stage-Pipeline,569335717,SystemVerilog,RISCV-5-stage-Pipeline,54,0,2022-11-22 16:16:05+00:00,[],
10729,https://github.com/MANOJKUMAR-CM/RISC_V.git,2022-11-29 17:22:52+00:00,A Prototype of RISC_V Processor which implements I Type Instructions.,0,MANOJKUMAR-CM/RISC_V,572161421,SystemVerilog,RISC_V,83,0,2022-11-29 17:27:22+00:00,[],
10730,https://github.com/justinscottlee/Ruby-Geyser-RV32I.git,2022-11-24 17:02:39+00:00,"Basic RV32I core implemented in SystemVerilog supporting all instructions except EBREAK and ECALL. The included instruction_memory.mem program calculates 11! * sin(2), and should read 36296192 if functioning properly.",0,justinscottlee/Ruby-Geyser-RV32I,570239513,SystemVerilog,Ruby-Geyser-RV32I,1040,0,2023-05-13 05:10:45+00:00,[],https://api.github.com/licenses/gpl-3.0
10731,https://github.com/dillionnason/ECE-275-Final.git,2022-11-24 01:29:12+00:00,Pong implemented in System Verilog on DE0 board,1,dillionnason/ECE-275-Final,569945415,SystemVerilog,ECE-275-Final,2126,0,2022-11-30 22:38:19+00:00,[],
10732,https://github.com/billLeeTheScienceGuy/ECE551_RIP_RUDY.git,2022-11-30 16:07:32+00:00,Final project 10/10,0,billLeeTheScienceGuy/ECE551_RIP_RUDY,572598880,SystemVerilog,ECE551_RIP_RUDY,128,0,2022-12-02 18:03:16+00:00,[],
10733,https://github.com/thugiang1308/verify_qspi.git,2022-10-16 16:35:18+00:00,,0,thugiang1308/verify_qspi,552457888,SystemVerilog,verify_qspi,1,0,2022-10-28 11:14:01+00:00,[],
10734,https://github.com/noemiabril/NES_MiSTer-SoCKit.git,2022-10-20 12:01:13+00:00,NES/Famicom MiSTer Arrow SoCKit,0,noemiabril/NES_MiSTer-SoCKit,554791457,SystemVerilog,NES_MiSTer-SoCKit,2173,0,2022-10-20 12:01:31+00:00,[],
10735,https://github.com/mvcrk/g2uvm_Sig_access.git,2022-11-27 17:27:57+00:00,,0,mvcrk/g2uvm_Sig_access,571265337,SystemVerilog,g2uvm_Sig_access,10,0,2022-11-27 17:40:41+00:00,[],
10736,https://github.com/Jordan-Mariah/final-project-CPE133.git,2022-11-15 21:29:31+00:00,bits and stuff,0,Jordan-Mariah/final-project-CPE133,566527450,SystemVerilog,final-project-CPE133,17,0,2022-11-17 22:22:08+00:00,[],
10737,https://github.com/smorsua/risc-v-isdigi.git,2022-11-16 07:27:42+00:00,,0,smorsua/risc-v-isdigi,566680287,SystemVerilog,risc-v-isdigi,42506,0,2023-02-21 17:00:51+00:00,[],
10738,https://github.com/Leticiagc/LOAC.git,2022-11-03 18:17:26+00:00,,0,Leticiagc/LOAC,561454760,SystemVerilog,LOAC,2,0,2022-11-17 17:59:32+00:00,[],
10739,https://github.com/adinavale/cover_groups.git,2022-11-09 23:27:42+00:00,,0,adinavale/cover_groups,564069101,SystemVerilog,cover_groups,5,0,2022-11-09 23:34:48+00:00,[],
10740,https://github.com/noemiabril/S32X_MiSTer-Arrow_SoCKit.git,2022-10-27 13:10:10+00:00,"Sega ""Megadrive"" 32X for Arrow SoCKit",0,noemiabril/S32X_MiSTer-Arrow_SoCKit,558392304,SystemVerilog,S32X_MiSTer-Arrow_SoCKit,3801,0,2022-10-27 13:10:20+00:00,[],
10741,https://github.com/PathakamuriNaresh/AXI_FIFO_BFM_N.git,2022-09-26 09:55:01+00:00,,0,PathakamuriNaresh/AXI_FIFO_BFM_N,541515860,SystemVerilog,AXI_FIFO_BFM_N,1596,0,2022-09-26 09:55:23+00:00,[],
10742,https://github.com/JtmVillan/cse140-multiply.git,2022-09-25 19:04:56+00:00,,0,JtmVillan/cse140-multiply,541279666,SystemVerilog,cse140-multiply,153,0,2022-09-25 19:05:27+00:00,[],
10743,https://github.com/JtmVillan/cse140-encryption.git,2022-09-25 19:03:17+00:00,,0,JtmVillan/cse140-encryption,541279275,SystemVerilog,cse140-encryption,80,0,2022-09-25 19:13:02+00:00,[],
10744,https://github.com/JtmVillan/cse140-alarm.git,2022-09-25 19:01:09+00:00,,0,JtmVillan/cse140-alarm,541278753,SystemVerilog,cse140-alarm,117,0,2022-09-25 19:01:48+00:00,[],
10745,https://github.com/gnodipac886/Hardware-Project-Template.git,2022-11-07 04:39:03+00:00,Project Template for Hardware Projects ,0,gnodipac886/Hardware-Project-Template,562707335,SystemVerilog,Hardware-Project-Template,26,0,2022-11-07 04:40:12+00:00,[],
10746,https://github.com/hrishit007/memoryproject.git,2022-11-05 14:31:11+00:00,,1,hrishit007/memoryproject,562172588,SystemVerilog,memoryproject,115,0,2022-11-13 14:24:03+00:00,[],
10747,https://github.com/jstalex/RISC-V_CPU.git,2022-11-02 12:29:41+00:00,Simple single-cycle processor based on RISC-V architecture,0,jstalex/RISC-V_CPU,560857697,SystemVerilog,RISC-V_CPU,185,0,2022-11-17 16:31:56+00:00,[],https://api.github.com/licenses/mit
10748,https://github.com/ziqiangt/systemverilog-design_patterns.git,2022-11-02 13:33:16+00:00,This is a systemverilog version design patterns. All examples are followed by Alexander Shvets. (Please view https://refactoringguru.cn/design-patterns/catalog),0,ziqiangt/systemverilog-design_patterns,560882848,SystemVerilog,systemverilog-design_patterns,28,0,2022-11-02 13:58:35+00:00,[],
10749,https://github.com/smckee99/CPE426.git,2022-11-01 21:12:32+00:00,Hardware Security Labs,0,smckee99/CPE426,560600412,SystemVerilog,CPE426,3,0,2022-11-01 21:16:14+00:00,[],
10750,https://github.com/PathakamuriNaresh/Practice_Git.git,2022-11-12 14:10:55+00:00,Just for practice,0,PathakamuriNaresh/Practice_Git,565155128,SystemVerilog,Practice_Git,7,0,2022-11-12 14:17:16+00:00,[],
10751,https://github.com/lemon-gith/citrus_pressing_unit.git,2022-11-29 20:29:00+00:00,,0,lemon-gith/citrus_pressing_unit,572227993,SystemVerilog,citrus_pressing_unit,24,0,2023-07-28 19:56:52+00:00,[],https://api.github.com/licenses/agpl-3.0
10752,https://github.com/agg23/fpga-tamagotchi.git,2023-01-21 22:07:41+00:00,Tamagotchi P1 for Analogue Pocket and MiSTer,1,agg23/fpga-tamagotchi,591793864,SystemVerilog,fpga-tamagotchi,8790,100,2024-04-12 02:35:17+00:00,[],https://api.github.com/licenses/mit
10753,https://github.com/dshekhalev/FEC.git,2023-01-06 09:11:55+00:00,"FEC Codec IP core library for a some famous codes (BCH, RS, LDPC, Turbo)",23,dshekhalev/FEC,585857654,SystemVerilog,FEC,1421,71,2024-04-01 06:21:01+00:00,"['bch-codes', 'dvb', 'dvb-s2', 'fec', 'golay', 'ldpc', 'llr', 'polar', 'reed-solomon-codes', 'turbo', 'viterbi', 'dvb-s2x', 'systemverilog', '3gpp', 'ccsds', 'ctc', 'wimax', 'gsfc-ldpc', 'btc', 'tpc']",https://api.github.com/licenses/mit
10754,https://github.com/microsoft/cheriot-ibex.git,2023-01-17 18:28:41+00:00,cheriot-ibex is a RTL implementation of CHERIoT ISA based on LowRISC's Ibex core.,10,microsoft/cheriot-ibex,590136589,SystemVerilog,cheriot-ibex,11004,57,2024-03-27 00:00:54+00:00,[],https://api.github.com/licenses/apache-2.0
10755,https://github.com/sifferman/labs-with-cva6.git,2022-12-21 21:27:26+00:00,Advanced Architecture Labs with CVA6,17,sifferman/labs-with-cva6,580945969,SystemVerilog,labs-with-cva6,318,35,2024-04-09 08:05:53+00:00,"['branch-prediction', 'caching', 'cva6', 'education', 'out-of-order', 'risc-v', 'systemverilog', 'virtual-memory']",https://api.github.com/licenses/bsd-3-clause
10756,https://github.com/pezy-computing/pzbcm.git,2022-12-19 04:09:50+00:00,Basic Common Modules,3,pezy-computing/pzbcm,579842080,SystemVerilog,pzbcm,448,33,2024-03-14 09:38:44+00:00,"['rtl', 'systemverilog']",https://api.github.com/licenses/apache-2.0
10757,https://github.com/KOTHAVANI/100-Days-of-RTL-code.git,2022-12-29 19:55:52+00:00,,14,KOTHAVANI/100-Days-of-RTL-code,583444300,SystemVerilog,100-Days-of-RTL-code,311,32,2024-02-21 10:36:37+00:00,[],
10758,https://github.com/martinKindall/risc-v-single-cycle.git,2022-12-21 23:11:55+00:00,A Single Cycle Risc-V 32 bit CPU,4,martinKindall/risc-v-single-cycle,580967817,SystemVerilog,risc-v-single-cycle,37,20,2024-03-21 09:37:23+00:00,"['basys3', 'basys3-fpga', 'riscv', 'riscv-assembly', 'riscv32', 'rv32i', 'single-cycle-processor', 'systemverilog']",
10759,https://github.com/wenqi-wang20/RISCV-LAB.git,2023-01-27 13:57:08+00:00,清华大学计算机系零字班计算机组成原理大实验作业。,1,wenqi-wang20/RISCV-LAB,594057171,SystemVerilog,RISCV-LAB,2565,18,2024-04-07 16:21:32+00:00,[],
10760,https://github.com/pulp-platform/redmule.git,2022-12-30 09:57:51+00:00,,7,pulp-platform/redmule,583607920,SystemVerilog,redmule,1201,18,2024-04-09 23:14:02+00:00,[],
10761,https://github.com/chenshuo/veriloglabs.git,2022-12-24 18:30:50+00:00,Undergraduate digital circuit laboratory,2,chenshuo/veriloglabs,581888855,SystemVerilog,veriloglabs,73,16,2024-03-25 18:37:26+00:00,[],https://api.github.com/licenses/bsd-3-clause
10762,https://github.com/karribharathi/100-Days-of-RTL.git,2023-01-02 14:53:00+00:00,,3,karribharathi/100-Days-of-RTL,584432158,SystemVerilog,100-Days-of-RTL,234,16,2024-01-28 15:23:52+00:00,[],
10763,https://github.com/pulp-platform/hyperbus.git,2023-01-24 18:32:04+00:00,,2,pulp-platform/hyperbus,592882035,SystemVerilog,hyperbus,105,14,2024-04-08 10:11:10+00:00,[],
10764,https://github.com/pulp-platform/serial_link.git,2023-01-26 14:46:59+00:00,"A simple, scalable, source-synchronous, all-digital DDR link",2,pulp-platform/serial_link,593655809,SystemVerilog,serial_link,838,11,2024-03-22 04:04:17+00:00,[],
10765,https://github.com/martinKindall/mips_cpu.git,2022-12-02 23:27:26+00:00,Single Cycle 32 bit MIPS,0,martinKindall/mips_cpu,573624462,SystemVerilog,mips_cpu,287,10,2024-02-25 20:04:03+00:00,"['fpga', 'mips', 'single-cycle', 'systemverilog', 'basys3', 'basys3-fpga', 'mips-cpu', 'single-cycle-processor']",
10766,https://github.com/I-Doctor/gnn-acceleration-framework-with-FPGA.git,2022-12-04 06:20:22+00:00,"including compiler to encode DGL GNN model to instructions, runtime software to transfer data and control the accelerator, and hardware verilog code that can be implemented on FPGA",9,I-Doctor/gnn-acceleration-framework-with-FPGA,574014524,SystemVerilog,gnn-acceleration-framework-with-FPGA,318,9,2024-03-23 16:03:31+00:00,[],https://api.github.com/licenses/apache-2.0
10767,https://github.com/andreili/FlexRV32.git,2023-01-01 15:09:34+00:00,"The second implementation of RISC-V architecture, step-by-step.",2,andreili/FlexRV32,584144606,SystemVerilog,FlexRV32,1312,7,2024-01-22 00:27:40+00:00,[],https://api.github.com/licenses/mit
10768,https://github.com/haydenbeames/RISCV-SuperScalar--BLAZE-CORE.git,2023-01-31 21:44:33+00:00,A completely configurable RISC-V Out of Order Core with a base model geared towards maximizing performance,2,haydenbeames/RISCV-SuperScalar--BLAZE-CORE,595818102,SystemVerilog,RISCV-SuperScalar--BLAZE-CORE,439,6,2024-04-09 05:02:17+00:00,[],
10769,https://github.com/stellagarden/EE405-Advanced-Digital-Systems-Design.git,2023-01-18 02:17:39+00:00,"Used FPGA board and System Verilog to design controller, DMA, pipelined SIMD processor, and GEMM accelerator",0,stellagarden/EE405-Advanced-Digital-Systems-Design,590265951,SystemVerilog,EE405-Advanced-Digital-Systems-Design,42347,5,2024-03-28 03:02:53+00:00,[],
10770,https://github.com/Dr-TSNG/ComputerArchitectureAssignment.git,2022-12-16 09:24:20+00:00,HIT-CS32201 Computer Organization and Architecture Assignments,5,Dr-TSNG/ComputerArchitectureAssignment,578949017,SystemVerilog,ComputerArchitectureAssignment,150,5,2023-12-18 18:18:24+00:00,[],
10771,https://github.com/MineQihang/MIPS_CPU.git,2023-01-01 03:04:52+00:00,重庆大学硬件综合设计：MIPS组,0,MineQihang/MIPS_CPU,584037610,SystemVerilog,MIPS_CPU,13089,4,2024-03-29 05:49:27+00:00,[],https://api.github.com/licenses/apache-2.0
10772,https://github.com/pgimenes/ample.git,2022-12-26 10:38:29+00:00,Graph Neural Network inference accelerator for Ultrascale+ FPGAs designed for multi-precision inference on large graphs.,1,pgimenes/ample,582286136,SystemVerilog,ample,189527,4,2024-04-04 08:44:25+00:00,[],
10773,https://github.com/tom-urkin/SPI.git,2023-01-15 12:45:41+00:00,SPI protocol modules in SystemVerilog,0,tom-urkin/SPI,589208038,SystemVerilog,SPI,499,4,2023-06-22 05:37:11+00:00,[],
10774,https://github.com/AllenHeartcore/ECE385_UIUC23sp.git,2023-02-03 06:00:01+00:00,"Ziyuan Chen, ECE385 @ UIUC 23SP",0,AllenHeartcore/ECE385_UIUC23sp,596881280,SystemVerilog,ECE385_UIUC23sp,137017,4,2024-03-31 14:04:05+00:00,"['ece', 'ece385', 'fpga', 'nios-ii', 'systemverilog', 'uiuc']",https://api.github.com/licenses/gpl-3.0
10775,https://github.com/cheyao/Achieve-Core.git,2023-01-01 18:22:29+00:00,RISC-V SoC + OS,0,cheyao/Achieve-Core,584183123,SystemVerilog,Achieve-Core,12997,4,2023-06-20 09:49:41+00:00,"['risc-v', 'soc', 'verilog', 'core']",
10776,https://github.com/okkookkowill/Verification-of-MCDF.git,2022-12-14 11:09:24+00:00,,0,okkookkowill/Verification-of-MCDF,578143998,SystemVerilog,Verification-of-MCDF,448,3,2023-09-21 15:46:35+00:00,[],
10777,https://github.com/LeonardoSanga/TesteDeOperacoesEmAssembly.git,2023-01-24 00:41:12+00:00,O projeto tem por objetivo implementar algumas das principais operações na linguagem de programação de baixo nível Assembly.,0,LeonardoSanga/TesteDeOperacoesEmAssembly,592548389,SystemVerilog,TesteDeOperacoesEmAssembly,4,3,2023-08-21 14:22:32+00:00,[],
10778,https://github.com/pConst/vivado_design_space_explorer_template.git,2022-12-02 11:19:56+00:00,Iterative compilation and reporting scripts for AMD / Xilinx Vivado,2,pConst/vivado_design_space_explorer_template,573398484,SystemVerilog,vivado_design_space_explorer_template,10,3,2023-12-02 13:05:42+00:00,[],
10779,https://github.com/LeonardoSanga/Multiplexador4por1.git,2023-01-23 13:07:07+00:00,"Projeto desenvolvido para aplicar, em Verilog, uma das mais conhecidas linguagens de descrição de hardware da atualidades, os conhecimentos acerca de multiplexadores.",0,LeonardoSanga/Multiplexador4por1,592310261,SystemVerilog,Multiplexador4por1,3,3,2023-08-24 14:05:09+00:00,[],
10780,https://github.com/justinscottlee/Topaz-Geyser-RV32E.git,2023-01-27 00:01:16+00:00,6-Stage Pipelined RV32E core written in SystemVerilog.,0,justinscottlee/Topaz-Geyser-RV32E,593836149,SystemVerilog,Topaz-Geyser-RV32E,368,3,2023-04-03 16:08:34+00:00,[],https://api.github.com/licenses/gpl-3.0
10781,https://github.com/LeonardoSanga/AtribuicoesBlocantesENaoBlocantes.git,2023-01-23 13:55:54+00:00,Projeto desenvolvido para aplicar os conhecimentos acerca das atribuições blocantes e não blocantes.,0,LeonardoSanga/AtribuicoesBlocantesENaoBlocantes,592329406,SystemVerilog,AtribuicoesBlocantesENaoBlocantes,2,3,2023-08-21 14:22:39+00:00,[],
10782,https://github.com/yi-chen-hu/DCS.git,2023-02-01 16:08:23+00:00,NCTU Digital Circuits and Systems,0,yi-chen-hu/DCS,596171675,SystemVerilog,DCS,10940,3,2024-03-14 06:53:11+00:00,[],
10783,https://github.com/tom-urkin/UART.git,2022-12-21 15:00:14+00:00,,1,tom-urkin/UART,580830608,SystemVerilog,UART,1343,3,2023-06-05 09:24:30+00:00,[],
10784,https://github.com/LeonardoSanga/ImplementacaoULA.git,2023-01-23 23:47:25+00:00,"O projeto tem como objetivo projetar, implementar e testar uma Unidade Lógica e Aritmética (ULA), dispositivo este que executa operações aritméticas (add, sub, etc) e lógicas (AND, OR, etc).",0,LeonardoSanga/ImplementacaoULA,592536599,SystemVerilog,ImplementacaoULA,3,3,2023-08-21 14:22:34+00:00,[],
10785,https://github.com/LeonardoSanga/MemoriaDeDadosEBancoDeRegistradores.git,2023-01-24 00:08:33+00:00,O projeto desenvolvido tem por objetivo implementar uma memória de dados e um banco de registradores e verificar suas singularidades na realização de operações de leitura e escrita.,0,LeonardoSanga/MemoriaDeDadosEBancoDeRegistradores,592541318,SystemVerilog,MemoriaDeDadosEBancoDeRegistradores,3,3,2023-08-21 14:22:33+00:00,[],
10786,https://github.com/ethan12377/EECS627_GraphPulse.git,2023-01-26 22:16:03+00:00,,0,ethan12377/EECS627_GraphPulse,593811776,SystemVerilog,EECS627_GraphPulse,33691,3,2024-03-18 00:10:54+00:00,[],
10787,https://github.com/AhmadSalehEsfahani/FPEdge.git,2023-01-04 09:46:09+00:00,Field Programmable Edge. Using the Thingsboard Edge and the Terasic DE10-nano FPGA board.,1,AhmadSalehEsfahani/FPEdge,585090878,SystemVerilog,FPEdge,158671,3,2023-12-04 19:36:47+00:00,[],
10788,https://github.com/Sanjit1/VeoPixels.git,2022-12-29 05:17:16+00:00,"Veopixels, a library? package? collection? driver? idk... something for NeoPixels written in Verilog.",0,Sanjit1/VeoPixels,583213382,SystemVerilog,VeoPixels,27569,3,2022-12-31 06:13:19+00:00,[],https://api.github.com/licenses/mit
10789,https://github.com/Joas329/SystemVerlilog-VGA-Game.git,2023-01-09 03:22:45+00:00,A simple game using the VGA module from the DE10-lite,1,Joas329/SystemVerlilog-VGA-Game,586713129,SystemVerilog,SystemVerlilog-VGA-Game,39,2,2023-10-21 00:58:42+00:00,[],
10790,https://github.com/irodotos/FPGA-SuperMarioMaze.git,2022-12-18 20:19:35+00:00,,0,irodotos/FPGA-SuperMarioMaze,579757469,SystemVerilog,FPGA-SuperMarioMaze,16,2,2024-03-29 14:49:46+00:00,[],
10791,https://github.com/TUM-DSE/end2end-encr.git,2023-01-23 13:17:33+00:00,End-to-end on-chip encryption,1,TUM-DSE/end2end-encr,592314131,SystemVerilog,end2end-encr,29950,2,2023-03-24 10:08:52+00:00,[],https://api.github.com/licenses/apache-2.0
10792,https://github.com/AlphaLyrae0/UVM_DPI_Example.git,2023-01-09 09:47:16+00:00,Example of DPI-C usage in UVM with Vivado simulator (xsim),0,AlphaLyrae0/UVM_DPI_Example,586814750,SystemVerilog,UVM_DPI_Example,34,2,2023-09-19 20:11:28+00:00,[],
10793,https://github.com/cedard234/AcceLeNetor.git,2023-01-18 06:39:46+00:00,FYP project. A VerilogHDL based hardware accelerator.,0,cedard234/AcceLeNetor,590328096,SystemVerilog,AcceLeNetor,209,2,2023-11-08 11:34:07+00:00,"['cnn', 'electronics', 'embedded', 'fpga', 'lenet-5', 'verilog', 'neural-network']",
10794,https://github.com/newaetech/fpga-common.git,2023-01-16 20:02:44+00:00,FPGA design elements used across multiple projects.,0,newaetech/fpga-common,589731843,SystemVerilog,fpga-common,193,2,2023-12-21 12:44:22+00:00,[],
10795,https://github.com/tom-urkin/FIFO_Memory.git,2022-12-28 10:17:03+00:00,,0,tom-urkin/FIFO_Memory,582949100,SystemVerilog,FIFO_Memory,1752,2,2023-06-05 09:24:50+00:00,[],
10796,https://github.com/cristian-slav/uvm_thread_decoupler.git,2023-01-31 07:06:07+00:00,Utility class to decouple a task from its caller process so that a call to kill() method of the parent process does not terminate the targeted task.,0,cristian-slav/uvm_thread_decoupler,595484366,SystemVerilog,uvm_thread_decoupler,13,2,2023-04-20 10:12:29+00:00,[],https://api.github.com/licenses/apache-2.0
10797,https://github.com/MarcEftimie/FPGA-textbook-solutions.git,2023-01-22 21:34:12+00:00,"My solutions to exercises in the ""FPGA Prototyping By SystemVerilog Examples"" by Pong P. Chu.",1,MarcEftimie/FPGA-textbook-solutions,592085294,SystemVerilog,FPGA-textbook-solutions,517,2,2024-02-11 04:25:06+00:00,"['fpga', 'systemverilog']",https://api.github.com/licenses/mit
10798,https://github.com/mstopyra/FPGA_SIGDEL_DAC.git,2022-12-03 22:37:07+00:00,,1,mstopyra/FPGA_SIGDEL_DAC,573937044,SystemVerilog,FPGA_SIGDEL_DAC,51583,2,2024-03-04 04:10:26+00:00,[],
10799,https://github.com/KaustubhDighe/Vyapaar.git,2022-12-02 19:07:39+00:00,High Frequency Trading on FPGA,3,KaustubhDighe/Vyapaar,573562031,SystemVerilog,Vyapaar,68,2,2024-02-08 11:13:25+00:00,"['eigenvalues', 'fpga', 'hardware', 'hft-trading', 'trading', 'verilog']",https://api.github.com/licenses/mit
10800,https://github.com/tms4517/Advance-FPGA-Design.git,2022-12-25 21:32:02+00:00,"Examples discussed in the book: ""Advanced FPGA design: Architecture, Implementation, and Optimization"" by Steve Kilts, in System Verilog.",2,tms4517/Advance-FPGA-Design,582144846,SystemVerilog,Advance-FPGA-Design,1982,2,2024-01-17 07:46:32+00:00,[],
10801,https://github.com/M-Mashreghi/Digital-logic-design-Laboratory.git,2022-12-06 08:14:51+00:00,Digital Logic Design Laboratory course projects with Professor Navabi,1,M-Mashreghi/Digital-logic-design-Laboratory,574855740,SystemVerilog,Digital-logic-design-Laboratory,64876,2,2023-08-17 23:58:29+00:00,[],
10802,https://github.com/nasahlpa/scfi.git,2023-02-06 11:49:44+00:00,,0,nasahlpa/scfi,598096550,SystemVerilog,scfi,20,2,2023-07-18 12:55:12+00:00,[],
10803,https://github.com/yuyuranium/vsd-test-github-flow.git,2022-12-05 09:35:31+00:00,Repo to test and practice GitHub flow for VSD 2022,0,yuyuranium/vsd-test-github-flow,574426237,SystemVerilog,vsd-test-github-flow,7,2,2023-03-02 07:08:55+00:00,[],
10804,https://github.com/javacafe01/bitcoin-hash.git,2023-01-20 00:08:18+00:00,"  A reimplementation of the Bitcoin hash, both in parallel and serial",0,javacafe01/bitcoin-hash,591112540,SystemVerilog,bitcoin-hash,576,2,2024-02-04 08:51:15+00:00,"['bitcoin', 'hashing', 'hdl', 'systemverilog']",https://api.github.com/licenses/gpl-3.0
10805,https://github.com/CompuSAR/simple_ddr_ctrl.git,2023-01-07 18:58:54+00:00,A (very) simple DDR3 controller for FPGAs,0,CompuSAR/simple_ddr_ctrl,586332604,SystemVerilog,simple_ddr_ctrl,40,2,2023-09-13 11:53:56+00:00,[],https://api.github.com/licenses/gpl-2.0
10806,https://github.com/KartikeyanSubramanyam/CSE141L-Project.git,2023-01-25 04:42:16+00:00,,1,KartikeyanSubramanyam/CSE141L-Project,593042077,SystemVerilog,CSE141L-Project,117,2,2023-06-14 08:06:13+00:00,[],
10807,https://github.com/sts08015/risc-v-lab.git,2023-01-11 08:07:23+00:00,Extended Version of COSE222 Lab,0,sts08015/risc-v-lab,587634696,SystemVerilog,risc-v-lab,61,2,2024-02-11 04:30:24+00:00,"['pipelined-processors', 'risc-v', 'single-cycle-processor', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
10808,https://github.com/nella17/NYCU-DCLab-2022-Final.git,2022-12-09 02:58:13+00:00,,0,nella17/NYCU-DCLab-2022-Final,576108955,SystemVerilog,NYCU-DCLab-2022-Final,540,2,2023-03-10 09:27:11+00:00,[],
10809,https://github.com/charkster/tang_nano-trigger_uart.git,2022-12-13 03:33:27+00:00,This is a re-write of my previous trigger project. This time Tang Nano 9k is the target hardware and the USB UART is used to configure and enable triggering.,1,charkster/tang_nano-trigger_uart,577578873,SystemVerilog,tang_nano-trigger_uart,1213,2,2023-05-29 18:20:18+00:00,"['pattern-generator', 'tang-nano-9k', 'trigger', 'uart', 'tang-nano']",https://api.github.com/licenses/mit
10810,https://github.com/hossein1387/cva6.git,2022-12-04 04:53:27+00:00,The CORE-V CVA6 is an Application class 6-stage RISC-V CPU capable of booting Linux. Refer to https://github.com/openhwgroup/cva6,0,hossein1387/cva6,573998681,SystemVerilog,cva6,32135,2,2024-04-05 13:33:50+00:00,[],
10811,https://github.com/Lalitgangwar9837/System_verilog_testbench.git,2022-12-26 13:39:45+00:00,,0,Lalitgangwar9837/System_verilog_testbench,582331469,SystemVerilog,System_verilog_testbench,71,2,2024-03-07 12:15:08+00:00,[],
10812,https://github.com/michael-lehn/ulm-on-ice.git,2023-01-12 10:42:49+00:00,ULM (Ulm Lecture Machine) on ice40,0,michael-lehn/ulm-on-ice,588106472,SystemVerilog,ulm-on-ice,46377,2,2024-03-30 19:15:46+00:00,"['fpga', 'verilog']",https://api.github.com/licenses/gpl-3.0
10813,https://github.com/OscarCMZ/X-RISC.git,2022-12-06 18:54:50+00:00,,1,OscarCMZ/X-RISC,575099365,SystemVerilog,X-RISC,239,2,2023-01-16 12:20:24+00:00,[],
10814,https://github.com/sinandredemption/fir_basys3.git,2023-01-30 20:58:02+00:00,Real-time Audio Processing through FIR filters on Basys-3 FPGA and Pmod I2S2,0,sinandredemption/fir_basys3,595320191,SystemVerilog,fir_basys3,16,2,2024-02-11 16:42:32+00:00,[],
10815,https://github.com/mjhborja/hello_world_uvm.git,2023-01-10 04:22:51+00:00,Welcome! Start your UVM - SystemVerilog learning journey here...,0,mjhborja/hello_world_uvm,587149773,SystemVerilog,hello_world_uvm,64,1,2023-02-26 22:40:16+00:00,"['uvm', 'learn-systemverilog', 'learn-uvm', 'connect-dut-testbench', 'propagate-stimuli']",https://api.github.com/licenses/mit
10816,https://github.com/OptimusMars/OptimumFPGAFramework.git,2023-01-28 07:44:22+00:00,Crossplatform FPGA Framework,0,OptimusMars/OptimumFPGAFramework,594330404,SystemVerilog,OptimumFPGAFramework,1234,1,2023-03-02 20:37:12+00:00,[],https://api.github.com/licenses/gpl-3.0
10817,https://github.com/whdcks877/AI_SEMICON_2022.git,2022-12-18 11:33:46+00:00,2022 인공지능 반도체 설계 대전,1,whdcks877/AI_SEMICON_2022,579639680,SystemVerilog,AI_SEMICON_2022,2737,1,2023-11-03 13:03:11+00:00,[],
10818,https://github.com/Carl7yan/Verification-Begin.git,2023-01-10 05:12:50+00:00,,0,Carl7yan/Verification-Begin,587161079,SystemVerilog,Verification-Begin,19103,1,2023-11-15 13:40:02+00:00,[],
10819,https://github.com/pietroglyph/pipelined-rv32i.git,2022-12-19 05:16:58+00:00,"A synthesizable, five-stage, pipelined 32-bit RISC-V processor (implements the RV32I base ISA)",0,pietroglyph/pipelined-rv32i,579855610,SystemVerilog,pipelined-rv32i,1500,1,2024-01-22 22:46:01+00:00,[],
10820,https://github.com/darnissan/DigitalSystemsEX1.git,2022-12-21 09:02:54+00:00,,0,darnissan/DigitalSystemsEX1,580713950,SystemVerilog,DigitalSystemsEX1,567,1,2022-12-21 09:10:26+00:00,[],
10821,https://github.com/vborchsh/wt_core.git,2023-01-23 15:36:18+00:00,,0,vborchsh/wt_core,592371253,SystemVerilog,wt_core,88,1,2023-05-12 06:11:06+00:00,[],https://api.github.com/licenses/gpl-3.0
10822,https://github.com/ChriCheng/RISC-CPU.git,2022-12-19 03:04:44+00:00,,0,ChriCheng/RISC-CPU,579829498,SystemVerilog,RISC-CPU,15,1,2023-01-03 06:40:26+00:00,[],
10823,https://github.com/rei0515reten/Re_RISCV.git,2023-02-05 12:38:27+00:00,RISC-V based cpu processor,0,rei0515reten/Re_RISCV,597718467,SystemVerilog,Re_RISCV,8,1,2023-02-06 00:11:27+00:00,[],
10824,https://github.com/bmartini/hdl-axi-common.git,2023-01-06 22:39:15+00:00,Common HDL AXI modules,0,bmartini/hdl-axi-common,586084577,SystemVerilog,hdl-axi-common,27,1,2024-02-04 15:15:53+00:00,[],https://api.github.com/licenses/mit
10825,https://github.com/guoriyue/EE271-Rasterization.git,2023-01-09 00:53:09+00:00,,0,guoriyue/EE271-Rasterization,586685047,SystemVerilog,EE271-Rasterization,21682,1,2024-02-23 02:03:36+00:00,[],
10826,https://github.com/vlotnik/sv_sdr.git,2023-01-03 06:27:21+00:00,,0,vlotnik/sv_sdr,584645795,SystemVerilog,sv_sdr,117,1,2024-03-04 21:02:53+00:00,[],
10827,https://github.com/Nagarjun444/SRAM-VIP.git,2022-12-07 18:13:48+00:00,Sram with moniter and scoreboard,0,Nagarjun444/SRAM-VIP,575532825,SystemVerilog,SRAM-VIP,15,1,2023-06-21 09:11:07+00:00,[],
10828,https://github.com/uygararas/SimpleMicroProcessor.git,2023-01-05 17:43:23+00:00,A simple microprocessor designed in system-verilog.,0,uygararas/SimpleMicroProcessor,585643973,SystemVerilog,SimpleMicroProcessor,655,1,2023-01-05 18:01:32+00:00,[],
10829,https://github.com/Augusto-Viniciuss/ESC-digital.git,2023-01-14 20:25:20+00:00,Lógica de ativamento das bobinas de um motor brushless implementado em hardware usando um kit de desenvolvimento FPGA para simular,0,Augusto-Viniciuss/ESC-digital,589026886,SystemVerilog,ESC-digital,4,1,2023-03-01 13:56:08+00:00,[],https://api.github.com/licenses/mit
10830,https://github.com/1mina1/Counter-verification-uvm.git,2022-12-21 19:38:09+00:00,,0,1mina1/Counter-verification-uvm,580917847,SystemVerilog,Counter-verification-uvm,3,1,2022-12-21 19:44:52+00:00,[],
10831,https://github.com/xudatou-94/AMBA_Demo.git,2023-02-05 02:24:21+00:00,APB协议的一个新手demo,0,xudatou-94/AMBA_Demo,597594826,SystemVerilog,AMBA_Demo,420,1,2023-02-19 12:41:54+00:00,[],
10832,https://github.com/nmamore/PIC24.git,2022-12-29 22:32:26+00:00,FPGA implementation of the PIC24,0,nmamore/PIC24,583476796,SystemVerilog,PIC24,43,1,2023-01-01 01:10:38+00:00,[],
10833,https://github.com/pvip-nitin/cpu.git,2023-01-23 07:06:49+00:00,,0,pvip-nitin/cpu,592196926,SystemVerilog,cpu,39,1,2023-03-20 00:56:46+00:00,[],
10834,https://github.com/Augusto-Viniciuss/Black-Jack-Hardware-.git,2023-01-12 23:11:16+00:00,Lógica do jogo black jack desenvolvida totalmente em hardware utilizando um kit de desenvolvimento de FPGA para simular o jogo.,0,Augusto-Viniciuss/Black-Jack-Hardware-,588353851,SystemVerilog,Black-Jack-Hardware-,4,1,2023-01-15 18:24:46+00:00,[],https://api.github.com/licenses/mit
10835,https://github.com/yagnavivek/Layered_Testbench_DFF.git,2022-12-24 16:04:33+00:00,This repository contains all the files required for a layered testbench to verify a d-flip-flop using system verilog,0,yagnavivek/Layered_Testbench_DFF,581858963,SystemVerilog,Layered_Testbench_DFF,5,1,2023-11-25 13:59:42+00:00,[],https://api.github.com/licenses/mit
10836,https://github.com/charlesziegenbeinjr/573TermProject-F22.git,2022-12-12 01:05:11+00:00,,0,charlesziegenbeinjr/573TermProject-F22,577106423,SystemVerilog,573TermProject-F22,22453,1,2022-12-16 11:34:47+00:00,[],
10837,https://github.com/Zanatticus/RISC-V-Processor.git,2022-12-14 03:57:17+00:00,A RISC-V processor created from scratch with SystemVerilog with a complimentary assembly instruction converter,0,Zanatticus/RISC-V-Processor,578018351,SystemVerilog,RISC-V-Processor,111,1,2024-01-17 04:05:18+00:00,[],
10838,https://github.com/Carl7yan/2cnn_dla.git,2023-01-10 09:09:26+00:00,,0,Carl7yan/2cnn_dla,587230290,SystemVerilog,2cnn_dla,1776,1,2023-11-06 07:28:01+00:00,[],
10839,https://github.com/dimitris-aspetakis/SwerV-EH1-DC.git,2023-01-27 08:20:57+00:00,Data cache inmplementation for SwerV EH1 core,1,dimitris-aspetakis/SwerV-EH1-DC,593949502,SystemVerilog,SwerV-EH1-DC,15584,1,2023-08-23 17:22:40+00:00,[],https://api.github.com/licenses/apache-2.0
10840,https://github.com/arm-out/ARMINx8.git,2023-02-03 10:23:36+00:00,Another RISC Microprocessor Indeed,0,arm-out/ARMINx8,596966116,SystemVerilog,ARMINx8,9904,1,2023-03-27 02:43:19+00:00,[],
10841,https://github.com/Karthikeyan564/h264_bachelor_thesis.git,2023-01-20 20:24:44+00:00,,0,Karthikeyan564/h264_bachelor_thesis,591462972,SystemVerilog,h264_bachelor_thesis,1110,1,2023-04-17 06:12:28+00:00,[],https://api.github.com/licenses/mit
10842,https://github.com/Parretto/Risc-V.git,2022-12-30 13:31:50+00:00,RISC-V implementation (r32i),0,Parretto/Risc-V,583659254,SystemVerilog,Risc-V,17,1,2023-11-16 11:31:02+00:00,[],
10843,https://github.com/tmct-web/spi_slave_tmct.git,2022-12-18 02:08:57+00:00,spi_slave_tmct is a basic SPI slave IP core that provides the basic framework for the implementation of custom SPI slave devices.,0,tmct-web/spi_slave_tmct,579534179,SystemVerilog,spi_slave_tmct,101,1,2023-12-11 15:26:20+00:00,"['fpga', 'spi', 'verilog', 'basic-spi-slave', 'spi-slave']",https://api.github.com/licenses/bsd-3-clause
10844,https://github.com/ryuz/study_uvm.git,2022-12-03 01:07:16+00:00,uvmの勉強用,1,ryuz/study_uvm,573642479,SystemVerilog,study_uvm,9,1,2024-01-15 16:15:02+00:00,[],
10845,https://github.com/NYU-Processor-Design/nyu-amba.git,2023-01-23 11:16:31+00:00,NYU Processor Design Team's interpretation of ARM's AMBA specifications.,6,NYU-Processor-Design/nyu-amba,592271737,SystemVerilog,nyu-amba,2087,1,2023-03-08 02:23:10+00:00,[],https://api.github.com/licenses/cc0-1.0
10846,https://github.com/bfaurestal/Cache_Simulator.git,2023-02-07 05:01:56+00:00,,0,bfaurestal/Cache_Simulator,598432984,SystemVerilog,Cache_Simulator,1516,1,2023-03-25 15:32:21+00:00,[],https://api.github.com/licenses/mit
10847,https://github.com/vadimfastos/riscv.git,2023-01-11 17:01:15+00:00,"My RISC-V SoC (core, memory, bus and simple i/o interfaces)",0,vadimfastos/riscv,587820456,SystemVerilog,riscv,3584,1,2023-01-17 14:53:55+00:00,[],
10848,https://github.com/RasmusGOlsen/vip-clock.git,2023-01-02 07:31:28+00:00,,0,RasmusGOlsen/vip-clock,584309868,SystemVerilog,vip-clock,4,1,2023-07-10 09:03:38+00:00,[],
10849,https://github.com/serpest/ALU.git,2022-12-16 21:22:24+00:00,Simple arithmetic logic unit,0,serpest/ALU,579176766,SystemVerilog,ALU,2,1,2023-11-18 23:16:51+00:00,"['alu', 'arithmetic-logic-unit', 'hdl']",
10850,https://github.com/Carl7yan/3AHB_RAM.git,2023-01-11 05:17:33+00:00,,0,Carl7yan/3AHB_RAM,587589150,SystemVerilog,3AHB_RAM,3011,1,2023-11-06 07:28:08+00:00,[],
10851,https://github.com/Chandrusankar7/4-Bit-Address-Line-CPU.git,2023-01-22 13:03:48+00:00,"design of a 4-bit CPU containing 4-bit address bus, 8-bit data bus containing a memory of 24 8 of size. The RAM is of Simple Dual Port type. The opcode is of 4-bit length, so 16 different types of operations can be implemented in the design. The design is made using Verilog HDL",0,Chandrusankar7/4-Bit-Address-Line-CPU,591949233,SystemVerilog,4-Bit-Address-Line-CPU,23,1,2023-01-28 06:52:50+00:00,[],
10852,https://github.com/ep2k/epFC.git,2023-01-12 15:26:46+00:00,Family Computer emulator running on an FPGA,1,ep2k/epFC,588207852,SystemVerilog,epFC,1430,1,2023-08-28 17:44:46+00:00,[],https://api.github.com/licenses/gpl-3.0
10853,https://github.com/aMotevallian/multi-cycle-risv-v-processor-.git,2022-12-19 17:48:37+00:00,,1,aMotevallian/multi-cycle-risv-v-processor-,580094123,SystemVerilog,multi-cycle-risv-v-processor-,1013,1,2023-04-25 13:38:44+00:00,[],
10854,https://github.com/Carl7yan/Verify-apb-uart.git,2023-01-10 03:56:13+00:00,,0,Carl7yan/Verify-apb-uart,587143977,SystemVerilog,Verify-apb-uart,1014,1,2023-11-06 07:28:29+00:00,[],
10855,https://github.com/Sardter/simple_cpu.git,2022-12-16 13:17:03+00:00,A simple proccessor written in System Verilog that supports multiple instructions,0,Sardter/simple_cpu,579022529,SystemVerilog,simple_cpu,3172,1,2023-05-23 20:11:34+00:00,[],
10856,https://github.com/npalmer5620/razor_cpu.git,2022-12-23 23:16:45+00:00,RISC-V RV32I CPU core in SystemVerilog,0,npalmer5620/razor_cpu,581676929,SystemVerilog,razor_cpu,17,1,2023-05-13 05:10:39+00:00,"['cpu', 'processor-architecture', 'risc-v']",
10857,https://github.com/Nhan-Tong/RISCV_Floating_point.git,2022-12-18 04:55:12+00:00,,0,Nhan-Tong/RISCV_Floating_point,579560726,SystemVerilog,RISCV_Floating_point,34,1,2023-02-05 01:11:16+00:00,[],
10858,https://github.com/1mina1/ALU-verification-using-cocotb-in-python-and-full-SV-enviroment.git,2022-12-21 15:12:32+00:00,,0,1mina1/ALU-verification-using-cocotb-in-python-and-full-SV-enviroment,580835099,SystemVerilog,ALU-verification-using-cocotb-in-python-and-full-SV-enviroment,18218,1,2022-12-21 19:44:51+00:00,[],
10859,https://github.com/Nutmeg43/Async-FIFO.git,2023-01-31 03:35:00+00:00,Asynchronous FIFO RTL model with corresponding verification,0,Nutmeg43/Async-FIFO,595426852,SystemVerilog,Async-FIFO,45,1,2023-07-12 09:15:59+00:00,[],https://api.github.com/licenses/mit
10860,https://github.com/martinKindall/8-bit-multicycle-cpu.git,2022-12-11 22:27:57+00:00,Minimalist 8 bit multicycle RISC CPU,0,martinKindall/8-bit-multicycle-cpu,577078224,SystemVerilog,8-bit-multicycle-cpu,15,1,2023-11-26 18:30:57+00:00,"['8-bit', '8-bit-computer', '8-bit-cpu', 'basys3', 'basys3-fpga', 'cpu', 'fpga', 'multicycle', 'multicycle-processor', 'systemverilog']",
10861,https://github.com/zljuft/verify.git,2022-12-12 02:24:41+00:00,,1,zljuft/verify,577122401,SystemVerilog,verify,23,1,2023-12-04 08:06:18+00:00,[],
10862,https://github.com/guyuxuan9/RISCV-CPU.git,2023-01-18 17:52:44+00:00,"This collaborative coursework entails the construction of a RISC-V CPU using System Verilog. The project encompasses the development of fundamental, pipelined, and one-way cached variations of the CPU architecture.",0,guyuxuan9/RISCV-CPU,590566373,SystemVerilog,RISCV-CPU,183820,1,2024-03-12 21:10:01+00:00,[],
10863,https://github.com/federicorossifr/ibex_ppu_pv1.git,2023-01-05 10:51:54+00:00,IBEX integration with PPU for Pulpino V1,0,federicorossifr/ibex_ppu_pv1,585507178,SystemVerilog,ibex_ppu_pv1,1173,1,2024-04-07 05:55:16+00:00,['paper-code'],
10864,https://github.com/GudduKumar0208/FIFO-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY-FIFO-USING-UVM-OR-VERIFICATION-OF-FIFO-.git,2022-12-02 02:59:07+00:00,,0,GudduKumar0208/FIFO-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY-FIFO-USING-UVM-OR-VERIFICATION-OF-FIFO-,573253906,SystemVerilog,FIFO-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY-FIFO-USING-UVM-OR-VERIFICATION-OF-FIFO-,9,1,2023-09-09 09:16:26+00:00,[],
10865,https://github.com/yuri-panchul/fpga-soldering-camp.git,2022-12-17 23:33:18+00:00,,0,yuri-panchul/fpga-soldering-camp,579511386,SystemVerilog,fpga-soldering-camp,312,1,2024-02-01 14:44:48+00:00,[],
10866,https://github.com/ep2k/dualshock_driver.git,2023-01-11 15:10:10+00:00,DUALSHOCK and DUALSHOCK2 driver for FPGAs,0,ep2k/dualshock_driver,587778905,SystemVerilog,dualshock_driver,4,1,2023-03-13 08:36:32+00:00,[],https://api.github.com/licenses/mit
10867,https://github.com/mjhborja/functional_coverage_sv.git,2023-01-14 02:36:14+00:00,Let's learn SystemVerilog functional coverage using the covergroup construct!,0,mjhborja/functional_coverage_sv,588791142,SystemVerilog,functional_coverage_sv,28,1,2023-12-19 14:50:38+00:00,"['functional-coverage', 'learn-systemverilog', 'systemverilog', 'bins', 'cross', 'covergroup', 'coverpoint', 'collect-functional-coverage']",https://api.github.com/licenses/mit
10868,https://github.com/PavlosTzitzos/HDLs-intro.git,2023-01-07 17:25:35+00:00,"SystemVerilog , Verilog , Verilog-A , Verilog-AMS tutorial",0,PavlosTzitzos/HDLs-intro,586310497,SystemVerilog,HDLs-intro,21117,1,2023-11-19 02:33:04+00:00,"['verilog-hdl', 'verilog', 'verilog-testbenches', 'vhdl']",
10869,https://github.com/mahadevaswamy05/hi.git,2023-01-27 06:50:19+00:00,,0,mahadevaswamy05/hi,593925740,SystemVerilog,hi,14304,0,2023-01-27 07:06:12+00:00,[],
10870,https://github.com/salih-atabey/axis-fifo-uvm.git,2022-12-30 07:51:14+00:00,AXIS FIFO UVM Simulation,0,salih-atabey/axis-fifo-uvm,583578222,SystemVerilog,axis-fifo-uvm,5,0,2022-12-30 08:04:55+00:00,[],
10871,https://github.com/rubycmarroquin/ARK.git,2023-01-25 06:11:59+00:00,,0,rubycmarroquin/ARK,593063601,SystemVerilog,ARK,24,0,2023-01-25 06:17:21+00:00,[],
10872,https://github.com/talshamira/SysVerilog_Simulation3.git,2023-01-21 01:30:06+00:00,,0,talshamira/SysVerilog_Simulation3,591527671,SystemVerilog,SysVerilog_Simulation3,1558,0,2023-03-25 14:58:39+00:00,[],
10873,https://github.com/YazanHussnain/RISCV-3-stage-pipeline-processor-core.git,2023-01-12 03:56:43+00:00,,0,YazanHussnain/RISCV-3-stage-pipeline-processor-core,587990634,SystemVerilog,RISCV-3-stage-pipeline-processor-core,16,0,2023-02-05 15:35:22+00:00,[],
10874,https://github.com/ksarper1/Bilkent_CS223_Homeworks.git,2023-01-08 13:04:17+00:00,,0,ksarper1/Bilkent_CS223_Homeworks,586524325,SystemVerilog,Bilkent_CS223_Homeworks,2389,0,2023-01-08 13:31:07+00:00,[],
10875,https://github.com/wuqlan111/ARM_AMBA.git,2023-01-09 13:29:54+00:00,Here are some verilog modules that I write to record my learning of verilog. These modules have some defects. Welcome to learn and communicate with you.,0,wuqlan111/ARM_AMBA,586891393,SystemVerilog,ARM_AMBA,1277,0,2023-02-24 12:45:07+00:00,[],https://api.github.com/licenses/gpl-3.0
10876,https://github.com/GuruprasadNK/UVM-Basics.git,2022-12-27 16:01:27+00:00,,0,GuruprasadNK/UVM-Basics,582697397,SystemVerilog,UVM-Basics,1,0,2022-12-27 16:12:59+00:00,[],
10877,https://github.com/Howard-121/Digital-System-Design-with-FPGAs.git,2022-12-27 06:03:11+00:00,,0,Howard-121/Digital-System-Design-with-FPGAs,582533065,SystemVerilog,Digital-System-Design-with-FPGAs,33288,0,2022-12-27 06:36:43+00:00,[],
10878,https://github.com/garrettvt/EE-371-Design-of-Digital-Circuits-and-Systems-.git,2023-01-04 00:41:23+00:00,UW Fall 2021,0,garrettvt/EE-371-Design-of-Digital-Circuits-and-Systems-,584960247,SystemVerilog,EE-371-Design-of-Digital-Circuits-and-Systems-,6326,0,2023-01-09 22:32:51+00:00,[],
10879,https://github.com/tkono17/pcecontrol.git,2022-12-23 01:40:23+00:00,,0,tkono17/pcecontrol,581367916,SystemVerilog,pcecontrol,35,0,2022-12-23 07:38:32+00:00,[],
10880,https://github.com/PouyaMahmoody/hackdac_2019.git,2023-01-24 10:58:12+00:00,The SoC used for the beta phase of Hack@DAC 2019.,0,PouyaMahmoody/hackdac_2019,592705414,SystemVerilog,hackdac_2019,10966,0,2023-01-24 11:48:32+00:00,[],
10881,https://github.com/thebenperson/Artix-Wolverine.git,2023-01-24 15:55:47+00:00,,0,thebenperson/Artix-Wolverine,592820011,SystemVerilog,Artix-Wolverine,77186,0,2023-01-25 21:49:23+00:00,[],
10882,https://github.com/pviprushi/rv16_cpu.git,2023-02-07 10:17:37+00:00,RISC-V based 16bit cpu,0,pviprushi/rv16_cpu,598539344,SystemVerilog,rv16_cpu,23,0,2023-02-16 09:07:26+00:00,[],
10883,https://github.com/noemiabril/AtariST_MiSTer-DE1-SoC.git,2022-12-04 15:51:00+00:00,Atari STe Core for MiSTer DE1-SoC,0,noemiabril/AtariST_MiSTer-DE1-SoC,574156784,SystemVerilog,AtariST_MiSTer-DE1-SoC,11585,0,2022-12-04 15:51:09+00:00,[],
10884,https://github.com/phuong27102000/uvm_beginner_lab.git,2022-12-05 15:03:30+00:00,"Labs for UVM beginner, should be familiar with System Verilog first",0,phuong27102000/uvm_beginner_lab,574552636,SystemVerilog,uvm_beginner_lab,25,0,2022-12-05 15:07:20+00:00,[],https://api.github.com/licenses/mit
10885,https://github.com/alinecristinapinto/multiplicador-binario-sequencial.git,2022-12-04 18:52:32+00:00,,0,alinecristinapinto/multiplicador-binario-sequencial,574207939,SystemVerilog,multiplicador-binario-sequencial,405,0,2023-05-09 14:50:41+00:00,[],
10886,https://github.com/aritra1911/alu.git,2022-12-03 18:25:30+00:00,Verilog Modules for an ALU,0,aritra1911/alu,573883348,SystemVerilog,alu,10,0,2022-12-03 18:29:33+00:00,[],https://api.github.com/licenses/mit
10887,https://github.com/sg05060/SoC_Project2.git,2022-12-08 10:45:35+00:00,,0,sg05060/SoC_Project2,575807443,SystemVerilog,SoC_Project2,17,0,2022-12-09 06:51:10+00:00,[],
10888,https://github.com/augustinjk/fork...join-vs-begin...end.git,2022-12-08 05:37:52+00:00,,0,augustinjk/fork...join-vs-begin...end,575706431,SystemVerilog,fork...join-vs-begin...end,3,0,2022-12-08 06:11:03+00:00,[],
10889,https://github.com/mileskt/SpeedyAR_Final_copy.git,2022-12-14 23:14:24+00:00,,0,mileskt/SpeedyAR_Final_copy,578380193,SystemVerilog,SpeedyAR_Final_copy,4664,0,2022-12-14 23:16:15+00:00,[],
10891,https://github.com/frankych/frameworks.validation.vip.clock-vc.git,2022-12-20 06:29:41+00:00,,0,frankych/frameworks.validation.vip.clock-vc,580272501,SystemVerilog,frameworks.validation.vip.clock-vc,57,0,2023-01-01 04:57:37+00:00,[],
10892,https://github.com/bodashka/CA-project.git,2022-12-12 20:35:40+00:00,,0,bodashka/CA-project,577477443,SystemVerilog,CA-project,13647,0,2022-12-12 20:41:32+00:00,[],
10893,https://github.com/fabio-pecora/verilog-multiplier.git,2022-12-09 20:47:00+00:00,,0,fabio-pecora/verilog-multiplier,576427449,SystemVerilog,verilog-multiplier,1,0,2022-12-09 20:47:16+00:00,[],
10894,https://github.com/es2ilver/ComputerArchitecture.git,2023-01-01 07:57:56+00:00,고려대학교 COSE222 컴퓨터구조 (이중희 교수님) 🐯,0,es2ilver/ComputerArchitecture,584072285,SystemVerilog,ComputerArchitecture,7,0,2023-12-08 16:35:48+00:00,[],
10895,https://github.com/mrowaha/simplified-programmable-processor.git,2022-12-20 10:04:30+00:00,,0,mrowaha/simplified-programmable-processor,580336154,SystemVerilog,simplified-programmable-processor,16,0,2023-12-23 09:46:00+00:00,[],
10896,https://github.com/GudduKumar0208/AHB-TO-APB-BRIDGE-AMBA-.git,2022-12-02 02:50:55+00:00,"The AMBA AHB is for high-performance, high clock frequency system modules. The AHB acts as the highperformance backbone system bus. AHB supports the efficient connection of processors. The AMBA APB is optimized for low power consumption and interface reduced complexity to support peripheral functions",0,GudduKumar0208/AHB-TO-APB-BRIDGE-AMBA-,573251938,SystemVerilog,AHB-TO-APB-BRIDGE-AMBA-,26,0,2022-12-02 02:53:25+00:00,[],
10897,https://github.com/tmct-web/i2c_slave_tmct.git,2022-12-18 02:08:43+00:00,i2c_slave_tmct is a basic I2C slave IP core that provides the basic framework for the implementation of custom I2C slave devices.,0,tmct-web/i2c_slave_tmct,579534147,SystemVerilog,i2c_slave_tmct,209,0,2022-12-18 02:37:07+00:00,"['fpga', 'i2c', 'i2c-slave', 'verilog', 'i2c-basic-slave']",
10898,https://github.com/T-Szymk/axi_components.git,2022-12-22 13:14:28+00:00,A mixture of AXI components and tests,0,T-Szymk/axi_components,581172095,SystemVerilog,axi_components,84,0,2022-12-22 13:24:37+00:00,[],
10899,https://github.com/jyk2498/SOC_project.git,2022-12-09 08:54:58+00:00,,0,jyk2498/SOC_project,576203538,SystemVerilog,SOC_project,27,0,2022-12-09 09:00:40+00:00,[],
10900,https://github.com/amiteshkr63/SV_Verification.git,2022-12-09 19:06:13+00:00,,0,amiteshkr63/SV_Verification,576401961,SystemVerilog,SV_Verification,14,0,2023-08-29 05:29:48+00:00,[],
10901,https://github.com/fabio-pecora/verilog-subtractor.git,2022-12-09 19:43:16+00:00,"This is the code for a Subtractor, which subtracts two numbers and generates a difference output and a borrow output",0,fabio-pecora/verilog-subtractor,576412018,SystemVerilog,verilog-subtractor,1,0,2022-12-09 19:46:49+00:00,[],
10902,https://github.com/Xiao1Ma/FPGA-project.git,2022-12-11 08:34:25+00:00,管理FPGA项目代码的仓库,0,Xiao1Ma/FPGA-project,576865850,SystemVerilog,FPGA-project,1617,0,2022-12-11 10:40:50+00:00,[],
10903,https://github.com/cmu-stuco-98154/f22-tt02-ngaertne.git,2022-12-05 19:46:54+00:00,TT02 Student Submission: Tiny 4-bit CPU,0,cmu-stuco-98154/f22-tt02-ngaertne,574657568,SystemVerilog,f22-tt02-ngaertne,5489,0,2022-12-12 01:22:45+00:00,[],https://api.github.com/licenses/apache-2.0
10904,https://github.com/ishraqtashdid/axi_memory_system.git,2022-12-05 08:33:41+00:00,,0,ishraqtashdid/axi_memory_system,574404180,SystemVerilog,axi_memory_system,10,0,2022-12-08 17:19:18+00:00,[],
10905,https://github.com/shariethernet/formal_axi_lite_ram.git,2022-12-04 17:47:19+00:00,,0,shariethernet/formal_axi_lite_ram,574189893,SystemVerilog,formal_axi_lite_ram,4,0,2022-12-04 17:48:23+00:00,[],
10906,https://github.com/flaviens/veriskewsmall-ibex.git,2022-12-09 10:25:37+00:00,,0,flaviens/veriskewsmall-ibex,576233194,SystemVerilog,veriskewsmall-ibex,466,0,2022-12-09 10:26:18+00:00,[],
10907,https://github.com/Fall-2022-Classes/fa22-final-project-team-2.git,2022-12-07 22:10:37+00:00,fa22-final-project-team-2 created by GitHub Classroom,0,Fall-2022-Classes/fa22-final-project-team-2,575602643,SystemVerilog,fa22-final-project-team-2,12,0,2022-12-07 22:12:20+00:00,[],
10908,https://github.com/cmu-stuco-98154/f22-tt02-stroucki.git,2022-12-12 01:25:24+00:00,TT02 Student Submission: Horse and Cowboy Game,0,cmu-stuco-98154/f22-tt02-stroucki,577110185,SystemVerilog,f22-tt02-stroucki,2686,0,2022-12-12 01:27:34+00:00,[],https://api.github.com/licenses/apache-2.0
10910,https://github.com/Destinedone12/fault_tolerant_DC_designs.git,2022-12-13 17:56:10+00:00,,0,Destinedone12/fault_tolerant_DC_designs,577868279,SystemVerilog,fault_tolerant_DC_designs,978,0,2022-12-14 04:00:51+00:00,[],
10911,https://github.com/Leonte-Tudor/Verification-Environment-101.git,2022-12-14 09:14:23+00:00,The first System Verilog verification environment I made during my autumn practice at AMD.,0,Leonte-Tudor/Verification-Environment-101,578104754,SystemVerilog,Verification-Environment-101,342,0,2022-12-14 09:18:30+00:00,[],https://api.github.com/licenses/gpl-2.0
10912,https://github.com/AlexrAlves/counter_ip.git,2023-01-11 18:44:34+00:00,,0,AlexrAlves/counter_ip,587855952,SystemVerilog,counter_ip,20,0,2023-01-20 15:03:55+00:00,[],
10913,https://github.com/preetambasti97/Pre-Silicon-City.git,2023-01-21 08:36:21+00:00,For pre-silicon validation final project,2,preetambasti97/Pre-Silicon-City,591601764,SystemVerilog,Pre-Silicon-City,1871,0,2023-03-13 20:33:00+00:00,[],
10914,https://github.com/ChillMonk21/uvmTutorial.git,2023-01-21 19:54:37+00:00,,0,ChillMonk21/uvmTutorial,591766934,SystemVerilog,uvmTutorial,17,0,2023-01-22 15:48:25+00:00,[],https://api.github.com/licenses/gpl-3.0
10915,https://github.com/tukshetty/SystemVerilog.git,2023-01-22 20:00:36+00:00,Basics for Verilog and SystemVerilog and Digital System Prototyping,0,tukshetty/SystemVerilog,592062539,SystemVerilog,SystemVerilog,6249,0,2023-01-30 01:45:39+00:00,[],
10916,https://github.com/OrenSarShalom/Verilog-coding-.git,2023-01-18 10:53:11+00:00,Here I upload My Verilog coding I do on My free time,0,OrenSarShalom/Verilog-coding-,590408761,SystemVerilog,Verilog-coding-,16,0,2023-05-23 14:33:07+00:00,[],https://api.github.com/licenses/gpl-3.0
10917,https://github.com/Nrusinga/100DaysOfRTL.git,2023-01-10 01:58:34+00:00,,0,Nrusinga/100DaysOfRTL,587117591,SystemVerilog,100DaysOfRTL,100,0,2023-01-11 02:30:39+00:00,[],
10918,https://github.com/pgfarley/snow-globe.git,2023-01-10 23:22:43+00:00,,0,pgfarley/snow-globe,587512388,SystemVerilog,snow-globe,525,0,2023-03-12 18:07:05+00:00,[],https://api.github.com/licenses/mit
10919,https://github.com/ibrahimhakkicandan/Implementing-Blitter-on-FPGA.git,2023-02-04 20:59:12+00:00,,0,ibrahimhakkicandan/Implementing-Blitter-on-FPGA,597535551,SystemVerilog,Implementing-Blitter-on-FPGA,17,0,2023-05-20 22:22:05+00:00,[],
10920,https://github.com/luanbalbino/UVM_tb_external_model.git,2023-01-17 19:43:44+00:00,Implement a UVM testbench for a DUT with a external model compare.,1,luanbalbino/UVM_tb_external_model,590163566,SystemVerilog,UVM_tb_external_model,133,0,2023-01-23 12:04:32+00:00,[],
10921,https://github.com/Paink64/Pipeline.git,2023-01-27 19:56:54+00:00,RISC-V Computer Architecture,0,Paink64/Pipeline,594185538,SystemVerilog,Pipeline,160,0,2023-01-27 19:57:02+00:00,[],
10922,https://github.com/tannerleise/FullResolutionFrameBuffer.git,2023-01-29 20:50:27+00:00,Project for FPGA class to construct a frame buffer system using the SDRAM on the DE10-Standard board,0,tannerleise/FullResolutionFrameBuffer,594855554,SystemVerilog,FullResolutionFrameBuffer,24228,0,2023-01-29 20:54:59+00:00,[],
10923,https://github.com/lvdund/btl_thong_tin_vo_tuyen.git,2023-01-27 14:18:42+00:00,,0,lvdund/btl_thong_tin_vo_tuyen,594065634,SystemVerilog,btl_thong_tin_vo_tuyen,39,0,2023-02-02 17:12:03+00:00,[],
10924,https://github.com/mohira/cpubook.git,2023-02-05 09:54:21+00:00,,0,mohira/cpubook,597679207,SystemVerilog,cpubook,12,0,2023-02-05 10:01:25+00:00,[],
10925,https://github.com/teobiton/cva6-contest.git,2023-01-27 13:15:11+00:00,,0,teobiton/cva6-contest,594042099,SystemVerilog,cva6-contest,41858,0,2024-02-29 10:30:32+00:00,[],
10926,https://github.com/akliluaron/Waveshine.git,2022-12-14 23:57:15+00:00,,0,akliluaron/Waveshine,578388837,SystemVerilog,Waveshine,361,0,2022-12-15 00:00:50+00:00,[],
10927,https://github.com/thomabir/SvLibrary.git,2022-12-15 15:02:32+00:00,A System Verilog library for FPGA development,0,thomabir/SvLibrary,578652026,SystemVerilog,SvLibrary,26,0,2022-12-15 15:34:10+00:00,[],https://api.github.com/licenses/cern-ohl-p-2.0
10928,https://github.com/naftali10/UVM-Testbench-for-Microcontroller.git,2022-12-18 09:47:19+00:00,"UVM testbench for an in-order single-pipeline processor, capable of executing 6 different operations.",0,naftali10/UVM-Testbench-for-Microcontroller,579616083,SystemVerilog,UVM-Testbench-for-Microcontroller,470,0,2022-12-18 10:41:56+00:00,[],
10929,https://github.com/talshamira/Simulation_1-SystemVerilog.git,2022-12-17 21:23:07+00:00,,0,talshamira/Simulation_1-SystemVerilog,579487675,SystemVerilog,Simulation_1-SystemVerilog,1953,0,2023-03-25 14:59:04+00:00,[],
10930,https://github.com/arskell/bcd_add.git,2022-12-25 17:48:23+00:00,BCD number adder written on HDL,0,arskell/bcd_add,582106972,SystemVerilog,bcd_add,1,0,2022-12-25 17:58:17+00:00,[],
10931,https://github.com/Lasdnaym/Overall-EE271-EE371.git,2022-12-31 03:51:50+00:00,,0,Lasdnaym/Overall-EE271-EE371,583824496,SystemVerilog,Overall-EE271-EE371,2,0,2022-12-31 03:55:24+00:00,[],
10932,https://github.com/sam10486/TCAS_NWC_implement.git,2022-12-12 13:05:12+00:00,,0,sam10486/TCAS_NWC_implement,577309418,SystemVerilog,TCAS_NWC_implement,227,0,2022-12-12 13:08:18+00:00,[],
10933,https://github.com/augustinjk/ALU---Design-Verification---with-Assertion-checking.git,2022-12-12 09:56:45+00:00,,0,augustinjk/ALU---Design-Verification---with-Assertion-checking,577243002,SystemVerilog,ALU---Design-Verification---with-Assertion-checking,4,0,2022-12-12 10:33:25+00:00,[],
10934,https://github.com/sasatree/exercise.git,2022-12-11 05:47:33+00:00,,0,sasatree/exercise,576832520,SystemVerilog,exercise,638,0,2022-12-11 05:57:04+00:00,[],
10935,https://github.com/usmank11/Pong.git,2023-01-08 21:51:52+00:00,Pong game written in SystemVerilog,0,usmank11/Pong,586654762,SystemVerilog,Pong,10,0,2023-01-08 23:13:24+00:00,[],
10936,https://github.com/Rakesh-Gourani/uvm.git,2023-01-07 02:35:10+00:00,Learn and Practice UVM,0,Rakesh-Gourani/uvm,586122708,SystemVerilog,uvm,4,0,2023-02-03 03:00:44+00:00,[],
10937,https://github.com/gn223/tessaiga.git,2022-12-23 06:13:04+00:00,,0,gn223/tessaiga,581420493,SystemVerilog,tessaiga,4,0,2023-01-05 10:43:31+00:00,[],
10938,https://github.com/blayney/MISC-V.git,2022-12-23 04:38:47+00:00,A very misc CPU,0,blayney/MISC-V,581401633,SystemVerilog,MISC-V,5,0,2022-12-23 04:41:02+00:00,[],
10939,https://github.com/Engghassanali/Three-Stage-Pipeline-with-Uart-configuration-and-verification-with-xilin.git,2022-12-23 14:03:21+00:00,,0,Engghassanali/Three-Stage-Pipeline-with-Uart-configuration-and-verification-with-xilin,581545819,SystemVerilog,Three-Stage-Pipeline-with-Uart-configuration-and-verification-with-xilin,12,0,2022-12-23 14:06:33+00:00,[],
10940,https://github.com/garrettvt/EE-469-Computer-Architecture-I.git,2023-01-09 22:38:52+00:00,UW Fall 2021,0,garrettvt/EE-469-Computer-Architecture-I,587076130,SystemVerilog,EE-469-Computer-Architecture-I,69,0,2023-01-09 23:03:54+00:00,[],
10941,https://github.com/namansehgal95/ECE_111_TA_codes.git,2023-01-23 16:10:41+00:00,Creating this repo to share example verilog codes to students of ECE 111,0,namansehgal95/ECE_111_TA_codes,592385227,SystemVerilog,ECE_111_TA_codes,16,0,2023-01-23 16:55:07+00:00,[],
10942,https://github.com/Anihilat0r/CentralPU.git,2023-01-24 22:07:55+00:00,,0,Anihilat0r/CentralPU,592952973,SystemVerilog,CentralPU,43,0,2023-02-13 18:17:32+00:00,[],
10943,https://github.com/jamesstocktonj1/BitstreamNetwork.git,2023-02-04 11:16:44+00:00,,0,jamesstocktonj1/BitstreamNetwork,597379408,SystemVerilog,BitstreamNetwork,1220,0,2023-11-05 14:16:06+00:00,[],
10944,https://github.com/KLVA1217/CORDIC_Algorithim_Imp_KLVA.git,2023-02-06 03:40:38+00:00,Graduate Project: CORDIC Algorithim Implementation,0,KLVA1217/CORDIC_Algorithim_Imp_KLVA,597945498,SystemVerilog,CORDIC_Algorithim_Imp_KLVA,25,0,2023-03-05 06:52:32+00:00,[],
10945,https://github.com/BrianDxd/Digital_Design.git,2022-12-05 23:54:31+00:00,,0,BrianDxd/Digital_Design,574724053,SystemVerilog,Digital_Design,18,0,2022-12-05 23:56:24+00:00,[],
10946,https://github.com/vborchsh/sv-uart.git,2023-01-23 15:30:53+00:00,,0,vborchsh/sv-uart,592368856,SystemVerilog,sv-uart,24,0,2024-04-04 09:42:02+00:00,[],https://api.github.com/licenses/mit
10947,https://github.com/ndhulipala1/comparch_synth.git,2022-12-04 17:12:54+00:00,,1,ndhulipala1/comparch_synth,574180100,SystemVerilog,comparch_synth,2869,0,2022-12-04 17:23:32+00:00,[],
10948,https://github.com/KAMOME-code/Elliptic-curve-cryptography-ECDSA-Secp256k1-signature.git,2022-12-05 06:05:24+00:00,"Input: hash, private key Output: signature ",0,KAMOME-code/Elliptic-curve-cryptography-ECDSA-Secp256k1-signature,574358963,SystemVerilog,Elliptic-curve-cryptography-ECDSA-Secp256k1-signature,19,0,2022-12-05 20:37:44+00:00,[],
10949,https://github.com/Boulder1999/Verification-Using-SystemVerilog-From-Lab09-.git,2022-12-08 07:50:45+00:00,,0,Boulder1999/Verification-Using-SystemVerilog-From-Lab09-,575745919,SystemVerilog,Verification-Using-SystemVerilog-From-Lab09-,2696,0,2022-12-08 07:53:23+00:00,[],
10950,https://github.com/Haz99/param_decoder_demo.git,2022-12-12 11:20:44+00:00,,0,Haz99/param_decoder_demo,577272101,SystemVerilog,param_decoder_demo,6,0,2023-02-17 11:21:28+00:00,[],
10951,https://github.com/Arwa-Ibrahim/Digital_Verification_Course.git,2022-12-10 15:37:42+00:00,,0,Arwa-Ibrahim/Digital_Verification_Course,576668037,SystemVerilog,Digital_Verification_Course,25,0,2022-12-26 05:48:33+00:00,[],
10952,https://github.com/sg05060/Project_2.git,2022-12-09 07:43:56+00:00,,0,sg05060/Project_2,576182176,SystemVerilog,Project_2,23,0,2022-12-09 07:50:22+00:00,[],
10953,https://github.com/lehar303/100daysofrtl.git,2023-01-26 17:44:00+00:00,"Challenging myself to work on RTL Design and Verification everyday, for 100 days!",0,lehar303/100daysofrtl,593724837,SystemVerilog,100daysofrtl,11,0,2023-01-26 18:48:11+00:00,[],
10954,https://github.com/AhmedAsim-69/Three-Stage-Pipeline-RISC-V.git,2023-01-26 11:36:13+00:00,,0,AhmedAsim-69/Three-Stage-Pipeline-RISC-V,593587081,SystemVerilog,Three-Stage-Pipeline-RISC-V,10,0,2023-01-26 14:12:23+00:00,[],
10955,https://github.com/rpatel747/8BitCalc.git,2023-01-26 14:00:30+00:00,An 8 bit calculator built using System Verilog for ECE 479 VLSI Design. Addition is done on a fast multipler and multiplication is done using a fast multiplier.,0,rpatel747/8BitCalc,593636965,SystemVerilog,8BitCalc,364,0,2023-01-26 14:01:36+00:00,[],
10956,https://github.com/diegob94/mini_i_cache.git,2023-01-06 05:15:03+00:00,SVUT testbench example,0,diegob94/mini_i_cache,585797953,SystemVerilog,mini_i_cache,28,0,2023-01-06 05:16:17+00:00,[],https://api.github.com/licenses/gpl-3.0
10957,https://github.com/masood4y/PotatoMachine_CPU.git,2022-12-24 22:45:30+00:00,"Unpipelined, Non-Forwarding Basic ""Potato Machine"" CPU ",0,masood4y/PotatoMachine_CPU,581928218,SystemVerilog,PotatoMachine_CPU,170,0,2023-05-12 17:32:41+00:00,[],
10958,https://github.com/anson2191/VSD_final_project.git,2022-12-27 09:09:16+00:00,,0,anson2191/VSD_final_project,582578827,SystemVerilog,VSD_final_project,3,0,2022-12-28 05:06:46+00:00,[],
10959,https://github.com/Argentum11/DE0_mcu.git,2022-12-19 17:32:27+00:00,A simple mcu for DE0,0,Argentum11/DE0_mcu,580088773,SystemVerilog,DE0_mcu,59906,0,2023-04-01 15:03:28+00:00,"['assembly', 'systemverilog', 'de0-board']",
10960,https://github.com/shubhampatel2610/Elevator-system-implementation-in-Verilog-HDL.git,2022-12-13 16:31:06+00:00,,0,shubhampatel2610/Elevator-system-implementation-in-Verilog-HDL,577837368,SystemVerilog,Elevator-system-implementation-in-Verilog-HDL,1743,0,2022-12-13 16:34:48+00:00,[],
10961,https://github.com/Its-Masoom/cheetah_core.git,2022-12-14 21:46:38+00:00,This is a riscv32I five stage pipeline core,0,Its-Masoom/cheetah_core,578359473,SystemVerilog,cheetah_core,1270,0,2023-02-11 20:53:45+00:00,[],
10962,https://github.com/aris134/COMPSCI550.git,2022-12-18 02:26:36+00:00,,0,aris134/COMPSCI550,579537038,SystemVerilog,COMPSCI550,108073,0,2022-12-18 02:34:30+00:00,[],
10963,https://github.com/thiagomslv/veririsc.git,2022-12-13 21:05:12+00:00,,0,thiagomslv/veririsc,577925451,SystemVerilog,veririsc,5,0,2022-12-13 21:12:23+00:00,[],
10964,https://github.com/amiteshkr63/AXI4_design.git,2023-01-23 13:56:43+00:00,AXI4_design,0,amiteshkr63/AXI4_design,592329751,SystemVerilog,AXI4_design,151,0,2023-08-29 05:28:42+00:00,[],
10965,https://github.com/Mahendra-Maddirala/LC3-Micro-Controller-UVM-.git,2023-01-05 15:22:17+00:00,,0,Mahendra-Maddirala/LC3-Micro-Controller-UVM-,585597469,SystemVerilog,LC3-Micro-Controller-UVM-,4060,0,2023-01-05 15:27:36+00:00,[],
10966,https://github.com/Mahendra-Maddirala/LC3-Adding-a-Decode-Environment-B-UVM-.git,2023-01-05 15:10:25+00:00,,0,Mahendra-Maddirala/LC3-Adding-a-Decode-Environment-B-UVM-,585593227,SystemVerilog,LC3-Adding-a-Decode-Environment-B-UVM-,14714,0,2023-01-05 15:23:52+00:00,[],
10967,https://github.com/AbelliSimone/ES.git,2023-01-11 16:24:51+00:00,"Embedded Systems project, consisting in two tests: one for the AXI communication protocol of the Cortex M3 Arm processor and the other for the AHB protocol.",0,AbelliSimone/ES,587807060,SystemVerilog,ES,12,0,2023-01-11 16:25:31+00:00,[],
10968,https://github.com/glkclass/dutb.git,2023-02-03 11:01:13+00:00,UVM-based verification framework,0,glkclass/dutb,596979354,SystemVerilog,dutb,99,0,2023-02-03 11:10:54+00:00,[],https://api.github.com/licenses/apache-2.0
10969,https://github.com/cse140l-wi23/Lab2_Starter.git,2023-02-01 06:43:09+00:00,,0,cse140l-wi23/Lab2_Starter,595956974,SystemVerilog,Lab2_Starter,623,0,2023-02-13 19:08:54+00:00,[],
10970,https://github.com/embedded-explorer/UART-Implementation.git,2022-12-29 17:39:08+00:00,Documents implementation of UART Controller using System-Verilog and Testing using Arty-S7 FPGA,0,embedded-explorer/UART-Implementation,583410431,SystemVerilog,UART-Implementation,523,0,2022-12-29 17:48:25+00:00,[],
10971,https://github.com/OmerRastgar/computer-architecture-pipelined-arm-processor.git,2023-01-08 09:01:29+00:00,,0,OmerRastgar/computer-architecture-pipelined-arm-processor,586470981,SystemVerilog,computer-architecture-pipelined-arm-processor,1062,0,2023-01-08 10:21:02+00:00,[],
10972,https://github.com/99swetha/Simulation-of-Last-Level-Cache.git,2023-01-17 20:13:39+00:00,Designed and Simulated the Last Level Cache (LLC) for a processor that can be used with up to three other processors in a shared memory configuration.,0,99swetha/Simulation-of-Last-Level-Cache,590173797,SystemVerilog,Simulation-of-Last-Level-Cache,209,0,2023-01-17 20:15:47+00:00,[],
10973,https://github.com/Lvwings/QAM-16.git,2023-01-19 06:21:08+00:00,QAM-16,0,Lvwings/QAM-16,590762116,SystemVerilog,QAM-16,7139,0,2023-01-19 06:29:25+00:00,[],https://api.github.com/licenses/mit
10974,https://github.com/ozguregesire/SimpleProcessor.git,2023-01-16 17:04:26+00:00,"A processor which supports seven instructions which are Load, Store, Add, Subtract, Ascending Sort, Descending Sort and Display.",0,ozguregesire/SimpleProcessor,589673151,SystemVerilog,SimpleProcessor,8,0,2023-01-16 17:11:44+00:00,[],
10975,https://github.com/Ahmed0100/square_wave_display_vga_v1_0_fpga.git,2023-01-21 15:30:39+00:00,square_wave_display_vga_v1_0_fpga,0,Ahmed0100/square_wave_display_vga_v1_0_fpga,591699161,SystemVerilog,square_wave_display_vga_v1_0_fpga,7,0,2023-01-21 15:31:25+00:00,[],
10976,https://github.com/KennethWilke/sv-uart.git,2023-01-21 23:08:26+00:00,My SystemVerilog implementation of a UART,0,KennethWilke/sv-uart,591804387,SystemVerilog,sv-uart,2,0,2023-01-21 23:13:12+00:00,[],https://api.github.com/licenses/mit
10977,https://github.com/Iskunion/unisys-soc.git,2023-02-05 05:03:27+00:00,A simple riscv soc for a course work,0,Iskunion/unisys-soc,597620976,SystemVerilog,unisys-soc,175,0,2023-10-21 19:19:19+00:00,[],
10978,https://github.com/Ernest0o/FPGAmaster.git,2022-12-14 03:21:45+00:00,Main SV file for the FPGA master Vivado project,0,Ernest0o/FPGAmaster,578010782,SystemVerilog,FPGAmaster,7,0,2022-12-14 03:37:26+00:00,[],
10979,https://github.com/namansehgal95/ECE-111-HW-Assignments.git,2023-02-06 22:31:33+00:00,,0,namansehgal95/ECE-111-HW-Assignments,598337555,,ECE-111-HW-Assignments,8,0,2023-02-06 19:09:08+00:00,[],
10980,https://github.com/aeshes/fpga-projects.git,2023-01-28 07:10:16+00:00,Мои опыты с FPGA Altera/Xilinx,0,aeshes/fpga-projects,594323052,SystemVerilog,fpga-projects,89,0,2023-01-28 07:12:37+00:00,[],
10981,https://github.com/ruly-rudel/leve.git,2023-01-10 10:34:32+00:00,tiny RISC-V RV64G processor,0,ruly-rudel/leve,587258996,SystemVerilog,leve,747,0,2023-01-31 23:21:10+00:00,[],https://api.github.com/licenses/mit
10982,https://github.com/LevyMatan/Synchronous-FIFO-memory.git,2022-12-19 15:27:00+00:00,,0,LevyMatan/Synchronous-FIFO-memory,580045164,SystemVerilog,Synchronous-FIFO-memory,952,0,2023-01-08 13:32:16+00:00,[],
10983,https://github.com/mauriya0202/RISC_V_R_type_RV32.git,2023-01-02 03:40:45+00:00,,0,mauriya0202/RISC_V_R_type_RV32,584266532,SystemVerilog,RISC_V_R_type_RV32,4,0,2023-01-02 04:15:51+00:00,[],
10984,https://github.com/scalable-arch/DRAMController.git,2023-01-04 10:32:13+00:00,,2,scalable-arch/DRAMController,585105613,SystemVerilog,DRAMController,4405,0,2023-01-04 11:13:22+00:00,[],https://api.github.com/licenses/apache-2.0
10985,https://github.com/charkster/button_press_uart.git,2023-01-15 22:50:22+00:00,"This FPGA configuration measures the ""round trip"" latency from when the FPGA sends a UART byte to the host and a host response is received by the FPGA.",0,charkster/button_press_uart,589361287,SystemVerilog,button_press_uart,138,0,2023-04-20 06:15:04+00:00,[],https://api.github.com/licenses/mit
10986,https://github.com/lichye/TWRK_R10K_Style_Pipeline.git,2022-12-07 02:02:26+00:00,,1,lichye/TWRK_R10K_Style_Pipeline,575211376,SystemVerilog,TWRK_R10K_Style_Pipeline,125,0,2023-03-27 16:59:06+00:00,[],
10987,https://github.com/kairotronix/dual_clk_fifo.git,2022-12-27 03:50:54+00:00,Dual-clock (asynchronous) FIFO written in SystemVerilog.,0,kairotronix/dual_clk_fifo,582507547,SystemVerilog,dual_clk_fifo,3,0,2022-12-27 03:56:46+00:00,[],
10988,https://github.com/HepoH3/SV4DV.git,2022-12-27 12:24:37+00:00,SystemVerilog for Design Verification,2,HepoH3/SV4DV,582632272,SystemVerilog,SV4DV,62,0,2023-01-16 13:01:45+00:00,[],https://api.github.com/licenses/cc-by-sa-4.0
10989,https://github.com/An0nym0us-27/Sequential-Tail-Lights-System-Verilog.git,2023-01-12 02:33:46+00:00,This was to replicate the design of the newer generation Mustang sequential tail lights on an FPGA.,0,An0nym0us-27/Sequential-Tail-Lights-System-Verilog,587972349,SystemVerilog,Sequential-Tail-Lights-System-Verilog,2,0,2023-01-12 02:34:28+00:00,[],
10990,https://github.com/inkeliz/verilog-tb-final.git,2023-01-12 09:37:48+00:00,"Trabalho de Sistemas Lógicos, portado para Verilog. Criei com o propósito de testar e relembrar um pouco o Verilog/VHDL. Ultima vez que usei VHDL foi em 2017/2018, para voltage-glitch-attack.",0,inkeliz/verilog-tb-final,588083991,SystemVerilog,verilog-tb-final,2,0,2023-01-12 17:12:57+00:00,[],https://api.github.com/licenses/mit
10991,https://github.com/matthew-lowe/cpu.git,2023-01-21 22:58:17+00:00,CPU in systemverilog designed to run AQA assembly,0,matthew-lowe/cpu,591802695,SystemVerilog,cpu,6,0,2023-08-22 21:34:43+00:00,[],
10992,https://github.com/vvgulyaev/uvm.git,2023-01-22 07:16:44+00:00,Examples of the uvm test environments,0,vvgulyaev/uvm,591877464,SystemVerilog,uvm,16,0,2023-01-22 07:23:44+00:00,[],
10993,https://github.com/Nagarjun444/inside-constraint.git,2022-12-18 06:18:09+00:00,inside constarint example in system verilog ,0,Nagarjun444/inside-constraint,579574849,SystemVerilog,inside-constraint,1,0,2022-12-18 06:20:19+00:00,[],
10994,https://github.com/meenalpannase/Ral_model4_T.git,2022-12-20 17:16:21+00:00,,0,meenalpannase/Ral_model4_T,580484603,SystemVerilog,Ral_model4_T,384,0,2023-01-05 05:37:14+00:00,[],
10995,https://github.com/MarcEftimie/pipelined-RISC-V-CPU.git,2022-12-16 04:34:27+00:00,,0,MarcEftimie/pipelined-RISC-V-CPU,578871302,SystemVerilog,pipelined-RISC-V-CPU,367,0,2023-04-16 23:42:29+00:00,[],
10996,https://github.com/Kashyappatel14/Verification_repo.git,2023-01-28 05:47:01+00:00,Imp example in sv and uvm,0,Kashyappatel14/Verification_repo,594306128,SystemVerilog,Verification_repo,4700,0,2023-01-28 06:03:23+00:00,[],https://api.github.com/licenses/apache-2.0
10997,https://github.com/Kholoud-Ebrahim/Adder.git,2023-01-25 23:47:01+00:00,implementation and test bench using System Verilog,1,Kholoud-Ebrahim/Adder,593415029,SystemVerilog,Adder,32,0,2023-01-25 23:49:49+00:00,[],
10998,https://github.com/lebro991/user_ip_model.git,2023-01-27 07:35:54+00:00,常用的小模块,0,lebro991/user_ip_model,593937155,SystemVerilog,user_ip_model,4187,0,2023-01-27 07:42:15+00:00,[],
10999,https://github.com/Moonleaves/FPGA-final-project-simeple-dodge-game.git,2023-01-08 15:46:40+00:00,,0,Moonleaves/FPGA-final-project-simeple-dodge-game,586568325,SystemVerilog,FPGA-final-project-simeple-dodge-game,6105,0,2023-01-15 12:25:58+00:00,[],
11000,https://github.com/KrishnaR7626/De10LiteFPGA-Car-Proximity-Sensor.git,2023-01-02 20:03:02+00:00,,0,KrishnaR7626/De10LiteFPGA-Car-Proximity-Sensor,584521087,SystemVerilog,De10LiteFPGA-Car-Proximity-Sensor,5,0,2023-01-02 20:28:20+00:00,[],https://api.github.com/licenses/mit
11001,https://github.com/dan-314159/hdl_common.git,2023-01-07 01:34:01+00:00,Reusable code libraries.,0,dan-314159/hdl_common,586113177,SystemVerilog,hdl_common,6,0,2023-01-07 19:32:28+00:00,[],https://api.github.com/licenses/mit
11002,https://github.com/SmokyOw1/rz_uart.git,2023-01-19 10:32:36+00:00,,0,SmokyOw1/rz_uart,590837922,SystemVerilog,rz_uart,18,0,2023-01-19 10:33:58+00:00,[],https://api.github.com/licenses/agpl-3.0
11004,https://github.com/messes2/ECE-385-Final-project.git,2022-12-12 04:56:02+00:00,I made a motion controlled digital synthesizer known as a puppeteer theremin that uses AI to get motion control data from a server hosted on a phone onto an FPGA.,0,messes2/ECE-385-Final-project,577155108,SystemVerilog,ECE-385-Final-project,9956,0,2023-04-11 15:04:35+00:00,"['ai', 'audio-processing', 'ece385', 'embedded-systems', 'fpga', 'fpga-soc', 'pytesseract', 'python', 'systemverilog', 'tesseract-ocr']",https://api.github.com/licenses/mit
11005,https://github.com/laxitshahi/EECS3201_Final_Project.git,2022-12-06 17:10:47+00:00,,0,laxitshahi/EECS3201_Final_Project,575063100,SystemVerilog,EECS3201_Final_Project,7,0,2022-12-06 17:11:08+00:00,[],
11006,https://github.com/mcaveniathor/gol_fpga.git,2022-12-06 19:42:35+00:00,,0,mcaveniathor/gol_fpga,575115604,SystemVerilog,gol_fpga,10787,0,2023-02-03 01:47:39+00:00,[],
11007,https://github.com/kdbr2023/nvc.git,2023-01-29 15:16:36+00:00,Verification Components for Network Processors,0,kdbr2023/nvc,594763149,SystemVerilog,nvc,38,0,2023-02-27 16:19:26+00:00,[],https://api.github.com/licenses/lgpl-3.0
11008,https://github.com/NYU-Processor-Design/onboarding-lab-4.git,2023-02-05 18:28:27+00:00,Onboarding Lab for Week 4,17,NYU-Processor-Design/onboarding-lab-4,597820190,SystemVerilog,onboarding-lab-4,10,0,2023-02-05 18:28:48+00:00,[],https://api.github.com/licenses/cc0-1.0
11009,https://github.com/ase12345636/1111-LogicDesign-FinalProject.git,2023-01-08 12:21:05+00:00,"Use FPGA(EP3C10E144C8), SystemVerilog and LED...etc to make the guess number game.",1,ase12345636/1111-LogicDesign-FinalProject,586513825,SystemVerilog,1111-LogicDesign-FinalProject,34617,0,2023-12-01 18:46:40+00:00,[],
11010,https://github.com/Ammar-10xe/RISCV-32I-3-Stage-Pipelined-with-CSR-Interrupt-Handling.git,2022-12-28 16:39:29+00:00,This repo contains the 3 stage pipelined processor with CSR interrupt handling ,0,Ammar-10xe/RISCV-32I-3-Stage-Pipelined-with-CSR-Interrupt-Handling,583060704,SystemVerilog,RISCV-32I-3-Stage-Pipelined-with-CSR-Interrupt-Handling,688,0,2022-12-28 16:42:27+00:00,[],
11011,https://github.com/JuledLikalla/Bfloat16-adder.git,2022-12-09 01:42:44+00:00,An implementation of an Bfloat16 adder,1,JuledLikalla/Bfloat16-adder,576091508,SystemVerilog,Bfloat16-adder,11,0,2024-02-05 17:32:38+00:00,[],
11012,https://github.com/KashyapKurella3000/Display_Controller_For_SOC_With_4_Slaves.git,2023-01-11 06:29:49+00:00,,0,KashyapKurella3000/Display_Controller_For_SOC_With_4_Slaves,587606526,SystemVerilog,Display_Controller_For_SOC_With_4_Slaves,1153,0,2023-01-11 06:40:24+00:00,[],
11013,https://github.com/SvetlanaLipatova/SCR1.git,2022-12-18 08:38:02+00:00,,0,SvetlanaLipatova/SCR1,579601565,SystemVerilog,SCR1,4050,0,2022-12-18 08:38:38+00:00,[],
11014,https://github.com/pv0164/ASIC-Design.git,2022-12-20 18:50:31+00:00,,0,pv0164/ASIC-Design,580514116,SystemVerilog,ASIC-Design,3869,0,2022-12-20 18:55:45+00:00,[],
11015,https://github.com/AmirHosseinYari2002/Floating_Point_Adder.git,2023-01-05 11:46:02+00:00,,0,AmirHosseinYari2002/Floating_Point_Adder,585523744,SystemVerilog,Floating_Point_Adder,876,0,2023-10-14 18:40:37+00:00,[],
11016,https://github.com/pvip-nitin/cb.git,2023-01-02 04:40:04+00:00,,0,pvip-nitin/cb,584276045,SystemVerilog,cb,2,0,2023-01-02 19:53:17+00:00,[],
11017,https://github.com/skudlur/100DaysOfSV.git,2023-01-02 05:59:54+00:00,,0,skudlur/100DaysOfSV,584290463,SystemVerilog,100DaysOfSV,4,0,2023-01-02 06:57:47+00:00,[],
11018,https://github.com/kevindkim723/PWM_Generator.git,2023-01-06 22:56:25+00:00,AXI4 standard PWM generation unit HDL,0,kevindkim723/PWM_Generator,586087694,SystemVerilog,PWM_Generator,34,0,2023-01-06 22:57:18+00:00,[],
11019,https://github.com/Nitish1371/UVMF_adder.git,2023-01-03 04:33:51+00:00,,0,Nitish1371/UVMF_adder,584620233,SystemVerilog,UVMF_adder,12046,0,2023-01-03 04:58:08+00:00,[],
11020,https://github.com/ShawnMa123/UVM_reference.git,2022-12-03 02:39:57+00:00,,0,ShawnMa123/UVM_reference,573659362,SystemVerilog,UVM_reference,26721,0,2022-12-04 15:28:52+00:00,[],
11021,https://github.com/ParJavadian/MIPS-processor.git,2022-12-02 10:55:18+00:00,,0,ParJavadian/MIPS-processor,573390115,SystemVerilog,MIPS-processor,2452,0,2022-12-02 11:03:05+00:00,[],
11022,https://github.com/Rukshanth-s/Intern.git,2023-01-26 03:12:25+00:00,Intern work,0,Rukshanth-s/Intern,593458689,SystemVerilog,Intern,41,0,2023-01-26 06:26:21+00:00,[],
11023,https://github.com/mohsenkamini/SBU-Digital-Logic-Design-Final-Project.git,2023-01-25 17:21:57+00:00,,0,mohsenkamini/SBU-Digital-Logic-Design-Final-Project,593294367,SystemVerilog,SBU-Digital-Logic-Design-Final-Project,1927,0,2023-01-27 17:33:59+00:00,[],
11024,https://github.com/cyschlueter/Segway_Project-V2.git,2023-01-18 03:24:15+00:00,Verilog code describing hardware that controls a Segway. Uses UART and Spi protocols to communicate with user and segway's physical sensors. Implements a PID algorithm to perpetually balance.,0,cyschlueter/Segway_Project-V2,590281772,SystemVerilog,Segway_Project-V2,50,0,2023-01-18 03:27:04+00:00,[],https://api.github.com/licenses/gpl-3.0
11025,https://github.com/An0nym0us-27/Button-Detection-System-Verilog.git,2023-01-11 23:13:53+00:00,A button detection was implemented with and without a debouncer to see the importance of a debouncer.,0,An0nym0us-27/Button-Detection-System-Verilog,587930033,SystemVerilog,Button-Detection-System-Verilog,10,0,2023-01-31 23:25:34+00:00,[],
11026,https://github.com/kkutchava/Digital-Logic-Laboratory-Labs-SDSU-COMPE470L-.git,2023-01-12 21:26:05+00:00,,0,kkutchava/Digital-Logic-Laboratory-Labs-SDSU-COMPE470L-,588326723,SystemVerilog,Digital-Logic-Laboratory-Labs-SDSU-COMPE470L-,395,0,2023-01-12 21:30:22+00:00,[],
11027,https://github.com/GodMeow1204/FPGA-Final_Project.git,2023-01-12 09:42:41+00:00,,0,GodMeow1204/FPGA-Final_Project,588085554,SystemVerilog,FPGA-Final_Project,2368,0,2023-01-12 10:31:24+00:00,[],
11028,https://github.com/ShangolMangol/simulation3_sifratiyot.git,2023-01-16 22:16:08+00:00,,0,ShangolMangol/simulation3_sifratiyot,589767897,SystemVerilog,simulation3_sifratiyot,3461,0,2023-01-16 22:16:16+00:00,[],
11029,https://github.com/s-griffith/SysVerilog_Simulation3.git,2023-01-21 12:09:07+00:00,,0,s-griffith/SysVerilog_Simulation3,591648336,,SysVerilog_Simulation3,82,0,2023-03-25 15:52:41+00:00,[],
11030,https://github.com/AhmedOsama2000/SPI-Slave.git,2023-01-30 19:00:02+00:00,Design and Verification of SPI slave ,0,AhmedOsama2000/SPI-Slave,595277874,SystemVerilog,SPI-Slave,14,0,2023-01-30 19:07:35+00:00,[],
11031,https://github.com/embedded-explorer/System-Verilog-Learning.git,2022-12-24 17:52:59+00:00,System-Verilog Design Examples along with Complete Verification Environment,0,embedded-explorer/System-Verilog-Learning,581881644,SystemVerilog,System-Verilog-Learning,67,0,2022-12-26 19:32:57+00:00,[],
11032,https://github.com/jalundrigan/system.git,2022-12-31 05:10:29+00:00,,0,jalundrigan/system,583835942,SystemVerilog,system,97,0,2024-01-10 17:26:11+00:00,[],
11033,https://github.com/AlphaLyrae0/Easy_UVM_Examples.git,2022-12-23 04:38:07+00:00,Examples to apply UVM to existing test benches at ease,0,AlphaLyrae0/Easy_UVM_Examples,581401509,SystemVerilog,Easy_UVM_Examples,76,0,2022-12-23 07:52:55+00:00,[],
11034,https://github.com/NYU-Processor-Design/onboarding-lab-3.git,2023-01-23 12:32:03+00:00,Onboarding Lab for Week 3,22,NYU-Processor-Design/onboarding-lab-3,592297697,SystemVerilog,onboarding-lab-3,7,0,2023-02-05 18:28:11+00:00,[],
11035,https://github.com/strwdr/MaximatorZXSpectrum.git,2022-12-06 10:16:08+00:00,ZX Spectrum implementation for maximator board,0,strwdr/MaximatorZXSpectrum,574898628,SystemVerilog,MaximatorZXSpectrum,274,0,2022-12-17 23:03:05+00:00,"['board', 'fpga', 'hdl', 'max10', 'nios', 'soc', 'verilog', 'zx', 'zx-spectrum', 'maximator']",https://api.github.com/licenses/apache-2.0
11036,https://github.com/wolve265/aurora.git,2023-01-12 19:42:45+00:00,Implementation of the Aurora 8b/10b Simplex Transmitter,1,wolve265/aurora,588296674,SystemVerilog,aurora,855,0,2023-02-12 20:18:09+00:00,"['8b10b', 'aurora', 'hdl', 'simplex', 'systemverilog', 'transmitter']",
11037,https://github.com/wheberth/polar_encoder_core.git,2023-01-04 14:19:03+00:00,,0,wheberth/polar_encoder_core,585179699,SystemVerilog,polar_encoder_core,7,0,2023-01-04 15:15:34+00:00,[],
11038,https://github.com/AustinPEdwards/RISC-V-Single-Cycle-Processor.git,2023-01-17 20:43:16+00:00,RISC-V Single Cycle Processor written with SystemVerilog (Vivado) for an FPGA,0,AustinPEdwards/RISC-V-Single-Cycle-Processor,590183289,SystemVerilog,RISC-V-Single-Cycle-Processor,2,0,2023-01-17 20:54:00+00:00,[],
11039,https://github.com/noemiabril/C64_MiSTer-DE1-SoC.git,2022-12-04 15:34:51+00:00,C64 Core for MiSTer DE1-SoC,0,noemiabril/C64_MiSTer-DE1-SoC,574152215,SystemVerilog,C64_MiSTer-DE1-SoC,2951,0,2022-12-04 15:34:58+00:00,[],
11040,https://github.com/5eyed2k/Home-work-4.git,2022-12-04 19:15:46+00:00,,0,5eyed2k/Home-work-4,574213763,SystemVerilog,Home-work-4,13,0,2022-12-04 19:16:53+00:00,[],
11041,https://github.com/An0nym0us-27/2-Bit-Equality-Detection-System-Verilog.git,2023-01-08 00:18:05+00:00,,0,An0nym0us-27/2-Bit-Equality-Detection-System-Verilog,586389007,SystemVerilog,2-Bit-Equality-Detection-System-Verilog,263,0,2023-01-11 22:05:34+00:00,[],
11042,https://github.com/Ganta-Tharun-Reddy/AXI-3.git,2023-01-07 05:48:25+00:00,,0,Ganta-Tharun-Reddy/AXI-3,586154073,SystemVerilog,AXI-3,10809,0,2023-01-07 06:00:14+00:00,[],
11043,https://github.com/zackerzha/EEC470.git,2023-01-03 15:58:30+00:00,,0,zackerzha/EEC470,584824628,SystemVerilog,EEC470,7120,0,2023-01-03 20:14:26+00:00,[],
11044,https://github.com/ShahidShann/UVMF_adder.git,2023-01-06 11:25:16+00:00,Self checking,0,ShahidShann/UVMF_adder,585895005,SystemVerilog,UVMF_adder,56037,0,2023-01-06 11:45:57+00:00,[],
11045,https://github.com/Mahendra-Maddirala/LC3-Micro-Controller-Decode_out-Interface-UVM-.git,2023-01-05 14:15:12+00:00,,0,Mahendra-Maddirala/LC3-Micro-Controller-Decode_out-Interface-UVM-,585573294,SystemVerilog,LC3-Micro-Controller-Decode_out-Interface-UVM-,26163,0,2023-01-05 15:24:57+00:00,[],
11046,https://github.com/mohammadhasanloo/CA-CA3-Multi-Cycle-MIPS.git,2023-01-21 14:18:06+00:00,,0,mohammadhasanloo/CA-CA3-Multi-Cycle-MIPS,591679898,SystemVerilog,CA-CA3-Multi-Cycle-MIPS,961,0,2023-01-21 14:18:15+00:00,[],
11047,https://github.com/medximun/SystemVerilog-for-Verification-Part-1-Fundamentals.git,2023-01-21 07:29:09+00:00,上課習題,0,medximun/SystemVerilog-for-Verification-Part-1-Fundamentals,591588657,SystemVerilog,SystemVerilog-for-Verification-Part-1-Fundamentals,34,0,2023-01-21 07:37:25+00:00,[],
11048,https://github.com/rchae01/rachel_keilee_finalproject.git,2022-12-14 21:48:36+00:00,FPGA Omnichord Final Code,0,rchae01/rachel_keilee_finalproject,578359990,SystemVerilog,rachel_keilee_finalproject,71,0,2022-12-14 21:52:57+00:00,[],
11049,https://github.com/rportocarrero/CPU20.git,2022-12-16 04:38:29+00:00,This is a small cpu example implementation,0,rportocarrero/CPU20,578872201,SystemVerilog,CPU20,3,0,2022-12-16 04:38:36+00:00,[],https://api.github.com/licenses/mit
11050,https://github.com/KaiLun1020/Project_gomoku.git,2022-12-30 17:40:21+00:00,第十組 邏設期末Project 五子棋,0,KaiLun1020/Project_gomoku,583723057,SystemVerilog,Project_gomoku,1197,0,2022-12-30 19:29:44+00:00,[],
11051,https://github.com/charrich97/LC3_Microcontroller_Verification.git,2022-12-22 17:37:59+00:00,"A hierarchical, reusable, veloce emulation compatible testbench including environment, sub-environment, scoreboards, active/passive and/or initiator/responder agents, BFMs, sequencers, and sequences for the respective LC3 VIP of Fetch, Decode, Execute, Memory Access, and Writeback.",0,charrich97/LC3_Microcontroller_Verification,581259598,SystemVerilog,LC3_Microcontroller_Verification,1575,0,2023-08-06 16:16:02+00:00,[],
11052,https://github.com/lagudu-glitch/Carry-Lookahead-Adder.git,2022-12-27 08:52:39+00:00,,0,lagudu-glitch/Carry-Lookahead-Adder,582574321,SystemVerilog,Carry-Lookahead-Adder,45,0,2022-12-27 08:54:41+00:00,[],https://api.github.com/licenses/mit
11053,https://github.com/Devil2702/16x9_Multiplier.git,2022-12-27 13:48:26+00:00,Working Code of 16x9 Multiplier using verilog and system_verilog,0,Devil2702/16x9_Multiplier,582656794,SystemVerilog,16x9_Multiplier,2,0,2022-12-27 13:49:30+00:00,[],
11054,https://github.com/Kobzon86/Fixed-point-data-verilog-class.git,2022-12-27 14:33:00+00:00,Solution for OOP part of the FPGA contest. For David. I have no idea where this nonsense can come in hand. ,0,Kobzon86/Fixed-point-data-verilog-class,582670147,SystemVerilog,Fixed-point-data-verilog-class,1,0,2022-12-27 14:56:55+00:00,[],
11055,https://github.com/chetansomana/testing_git.git,2023-02-04 13:03:35+00:00,testing to upload,0,chetansomana/testing_git,597406658,SystemVerilog,testing_git,6559,0,2023-02-04 13:07:15+00:00,[],
11056,https://github.com/soumyaswa/soumya_cpu_design.git,2023-01-31 13:32:57+00:00,,0,soumyaswa/soumya_cpu_design,595626273,SystemVerilog,soumya_cpu_design,31,0,2023-02-08 07:16:43+00:00,[],
11057,https://github.com/sueghosh/RTL_Design.git,2022-12-06 03:21:58+00:00,,0,sueghosh/RTL_Design,574773744,SystemVerilog,RTL_Design,105,0,2023-05-17 04:02:16+00:00,[],
11058,https://github.com/barretklics/ENEL453_Lab_4.git,2022-12-05 03:24:35+00:00,,0,barretklics/ENEL453_Lab_4,574320065,SystemVerilog,ENEL453_Lab_4,386,0,2023-01-05 23:20:07+00:00,[],
11059,https://github.com/czarkos/sparrow-sv.git,2022-12-17 00:20:07+00:00,,0,czarkos/sparrow-sv,579212855,SystemVerilog,sparrow-sv,388,0,2023-01-17 19:05:49+00:00,[],
11060,https://github.com/uniquehuy/ee297b_uart2wifi.git,2023-02-04 19:38:38+00:00,"EE297B Project, by Chris & Huy",0,uniquehuy/ee297b_uart2wifi,597516364,SystemVerilog,ee297b_uart2wifi,37,0,2023-02-25 03:17:46+00:00,[],
11061,https://github.com/dolcehouse/100daysofrtl.git,2023-01-20 03:40:01+00:00,,0,dolcehouse/100daysofrtl,591159800,SystemVerilog,100daysofrtl,10,0,2023-01-20 03:41:49+00:00,[],
11062,https://github.com/nikaemami/Basic-RTL-Packages.git,2023-02-07 08:12:55+00:00,"Building a n-bit barrel shifter, with an n-bit data-input, A[n-1:0], and an i-bit shift-value, N[i- 1:0], where i is: i=log2n",0,nikaemami/Basic-RTL-Packages,598491865,SystemVerilog,Basic-RTL-Packages,62,0,2023-02-10 07:31:13+00:00,[],
11063,https://github.com/MShafin/Traffic-Light-Controller.git,2023-01-20 18:53:38+00:00,Intel FGPA design project that models a real 4-way traffic signal with pedestrian lights and left turn priority signal,0,MShafin/Traffic-Light-Controller,591436498,SystemVerilog,Traffic-Light-Controller,11228,0,2023-01-20 18:55:24+00:00,[],
11064,https://github.com/Chandrusankar7/System-Verilog-Projects.git,2023-01-28 06:28:54+00:00,A repository of all the basic System Verilog codes that I practiced,0,Chandrusankar7/System-Verilog-Projects,594314479,SystemVerilog,System-Verilog-Projects,13,0,2023-01-28 06:30:14+00:00,[],
11065,https://github.com/Spencer-Stice/Digital-Audio-Visualizer.git,2022-12-21 00:50:45+00:00,,0,Spencer-Stice/Digital-Audio-Visualizer,580600700,SystemVerilog,Digital-Audio-Visualizer,11,0,2022-12-21 00:57:18+00:00,[],
11068,https://github.com/talshamira/DigitalSystemsSimulation2.git,2023-01-21 12:09:45+00:00,,0,talshamira/DigitalSystemsSimulation2,591648496,,DigitalSystemsSimulation2,1559,0,2023-03-25 15:53:11+00:00,[],
11069,https://github.com/maxaksel/microprocessor.git,2023-01-26 19:04:20+00:00,A simple RISC microprocessor designed in Magic VLSI software.,0,maxaksel/microprocessor,593753054,SystemVerilog,microprocessor,77591,0,2023-02-26 18:46:54+00:00,[],https://api.github.com/licenses/mit
11070,https://github.com/code-tangent/arp-responder.git,2023-01-26 19:22:56+00:00,Arp responder code showing coding style and basic simulation,0,code-tangent/arp-responder,593759338,SystemVerilog,arp-responder,17,0,2023-01-26 19:30:51+00:00,[],
11071,https://github.com/quyvan97/ecen468.git,2023-01-24 05:07:07+00:00,,0,quyvan97/ecen468,592604685,SystemVerilog,ecen468,36912,0,2023-09-05 07:10:18+00:00,[],
11072,https://github.com/MatejKafka/risc-v_pipelined_cpu.git,2023-01-25 05:10:06+00:00,"RISC-V CPU with a 5-stage pipeline, written in SystemVerilog",0,MatejKafka/risc-v_pipelined_cpu,593048449,SystemVerilog,risc-v_pipelined_cpu,78,0,2023-01-27 22:53:56+00:00,[],
11073,https://github.com/zz-f-g/RSICV-Pipeline.git,2022-12-16 13:48:31+00:00,Pipeline core in RISC-V ISA with data forwarding.,0,zz-f-g/RSICV-Pipeline,579033638,SystemVerilog,RSICV-Pipeline,1455,0,2022-12-22 07:19:50+00:00,[],
11074,https://github.com/aris134/ECE385.git,2022-12-16 20:14:21+00:00,Class work from ECE385 course offering from the University of Illinois at Urbana-Champaign,0,aris134/ECE385,579158997,SystemVerilog,ECE385,12495,0,2022-12-18 01:17:35+00:00,[],
11075,https://github.com/Hsuan-Chih/ECE574.git,2022-12-14 07:46:27+00:00,VLSI System Design,0,Hsuan-Chih/ECE574,578076737,SystemVerilog,ECE574,1294,0,2022-12-15 08:48:54+00:00,[],
11076,https://github.com/marcoaraz/star-testbench.git,2023-01-12 00:58:24+00:00,,0,marcoaraz/star-testbench,587951405,SystemVerilog,star-testbench,411,0,2023-03-24 18:10:55+00:00,[],
11077,https://github.com/mukesh891/m_cpu.git,2023-01-31 10:16:18+00:00,,0,mukesh891/m_cpu,595552140,SystemVerilog,m_cpu,338,0,2023-01-31 10:24:08+00:00,[],
11078,https://github.com/gbotkin3/FPGA-Adventures-Source-Code.git,2022-12-26 19:19:27+00:00,Host Repository of the Source Code of the digital designs that I have created,0,gbotkin3/FPGA-Adventures-Source-Code,582419695,SystemVerilog,FPGA-Adventures-Source-Code,5471,0,2022-12-28 01:14:17+00:00,[],https://api.github.com/licenses/apache-2.0
11079,https://github.com/FilippoNevi/Verification.git,2022-12-29 11:51:20+00:00,"Verification assignment for the ""System Verification & Testing"" course",0,FilippoNevi/Verification,583310009,SystemVerilog,Verification,975,0,2022-12-29 11:54:29+00:00,[],
11080,https://github.com/mhshabani79/MIPS-single-cycle.git,2022-12-27 16:53:45+00:00,MIPS Single cycle Verilog Implementation,0,mhshabani79/MIPS-single-cycle,582713360,SystemVerilog,MIPS-single-cycle,1108,0,2022-12-27 17:45:25+00:00,"['mips', 'mips-assembly', 'mips-instructions', 'mips-processor', 'mips32', 'verilog', 'computer-architecture', 'verilog-hdl']",
11081,https://github.com/mhshabani79/MIPS-multi-cycle.git,2022-12-27 18:26:18+00:00,MIPS multi cycle Verilog Implementation,0,mhshabani79/MIPS-multi-cycle,582739579,SystemVerilog,MIPS-multi-cycle,1636,0,2022-12-27 18:46:47+00:00,"['verilog', 'verilog-hdl', 'mips', 'mips32', 'computer-architecture', 'mips-architecture', 'mips-assembly', 'mips-processor']",
11082,https://github.com/MrLehmann/EE525.git,2023-01-19 01:03:04+00:00,Holds Projects for Embedded Systems,0,MrLehmann/EE525,590690481,SystemVerilog,EE525,9,0,2023-02-13 20:14:59+00:00,[],
11083,https://github.com/naveen0215/avip.git,2022-12-05 05:43:35+00:00,,0,naveen0215/avip,574353217,SystemVerilog,avip,60,0,2022-12-05 05:46:21+00:00,[],
11084,https://github.com/Ahmed0100/ahb_memory_slave_vip.git,2022-12-08 10:15:27+00:00,ahb_memory_slave_vip,0,Ahmed0100/ahb_memory_slave_vip,575797123,SystemVerilog,ahb_memory_slave_vip,27,0,2022-12-08 15:42:48+00:00,[],
11085,https://github.com/topwuther/dm11a88_FPGA.git,2022-12-15 05:50:56+00:00,,0,topwuther/dm11a88_FPGA,578466091,SystemVerilog,dm11a88_FPGA,13,0,2022-12-15 05:51:40+00:00,[],https://api.github.com/licenses/gpl-3.0
11086,https://github.com/natArocho/340-project3b.git,2022-12-13 12:10:43+00:00,FPU for Neural Network,0,natArocho/340-project3b,577736309,SystemVerilog,340-project3b,379,0,2023-02-24 11:54:17+00:00,[],
11087,https://github.com/AlphanEker/Pipelined-SystemVerilog-Model.git,2022-12-02 01:01:12+00:00,,0,AlphanEker/Pipelined-SystemVerilog-Model,573225610,SystemVerilog,Pipelined-SystemVerilog-Model,7,0,2023-01-22 22:32:26+00:00,[],
11088,https://github.com/fabio-pecora/verilog-seven-segment-display.git,2022-12-09 19:52:25+00:00,,0,fabio-pecora/verilog-seven-segment-display,576414317,SystemVerilog,verilog-seven-segment-display,1,0,2022-12-09 19:53:05+00:00,[],
11089,https://github.com/ClaytonJPayne/SetAssociativeCache.git,2023-01-30 01:04:17+00:00,RTL design for a parameterized set-associative cache with LRU-eviction and write-back policy,0,ClaytonJPayne/SetAssociativeCache,594908127,SystemVerilog,SetAssociativeCache,16,0,2023-01-30 03:38:20+00:00,[],
11090,https://github.com/carl92xu/ece385_final_project.git,2023-01-30 02:33:39+00:00,,0,carl92xu/ece385_final_project,594927222,SystemVerilog,ece385_final_project,260,0,2023-03-01 06:35:42+00:00,[],
11091,https://github.com/umairahmadh/fir-filter-system-verilog.git,2023-01-31 11:19:51+00:00,,0,umairahmadh/fir-filter-system-verilog,595575607,SystemVerilog,fir-filter-system-verilog,42,0,2023-01-31 13:35:24+00:00,[],
11092,https://github.com/Ragviswa/FYP-ETUNS.git,2023-01-11 14:55:11+00:00,,0,Ragviswa/FYP-ETUNS,587773091,SystemVerilog,FYP-ETUNS,12104,0,2023-06-21 14:09:52+00:00,[],
11093,https://github.com/robfinch/Utility.git,2023-01-22 15:10:51+00:00,Contains utility modules,0,robfinch/Utility,591983160,SystemVerilog,Utility,76,0,2023-01-22 15:10:58+00:00,[],https://api.github.com/licenses/bsd-3-clause
11094,https://github.com/RandomActsOfGrammar/extensibella.git,2022-12-17 01:53:45+00:00,A system for reasoning about extensible languages in a modular fashion,0,RandomActsOfGrammar/extensibella,579228438,SystemVerilog,extensibella,908,0,2024-04-10 15:14:48+00:00,[],https://api.github.com/licenses/gpl-3.0
11095,https://github.com/ShangolMangol/simulation1_sifratiyot.git,2022-12-19 17:56:37+00:00,,0,ShangolMangol/simulation1_sifratiyot,580096629,SystemVerilog,simulation1_sifratiyot,1760,0,2022-12-19 17:56:48+00:00,[],
11096,https://github.com/naveen0215/uvmf.git,2022-12-16 05:34:25+00:00,cloned,0,naveen0215/uvmf,578884786,SystemVerilog,uvmf,46627,0,2022-12-16 05:39:55+00:00,[],
11097,https://github.com/coderjaspal/git-demo2.git,2022-12-16 11:55:02+00:00,,0,coderjaspal/git-demo2,578995702,SystemVerilog,git-demo2,0,0,2022-12-16 11:59:10+00:00,[],
11098,https://github.com/davoudifatemeh/Pipelined-MIPS-Processor.git,2022-12-22 11:00:04+00:00,,0,davoudifatemeh/Pipelined-MIPS-Processor,581130827,SystemVerilog,Pipelined-MIPS-Processor,254,0,2022-12-22 11:04:10+00:00,[],
11099,https://github.com/frankych/clk_val.git,2022-12-12 06:13:43+00:00,,0,frankych/clk_val,577173437,SystemVerilog,clk_val,26669,0,2022-12-20 04:36:20+00:00,[],
11100,https://github.com/shubaspb/xilinx_template.git,2022-12-15 13:02:47+00:00,,0,shubaspb/xilinx_template,578606033,SystemVerilog,xilinx_template,46,0,2022-12-15 13:13:43+00:00,[],
11101,https://github.com/yagnavivek/RISC4R.git,2022-12-24 15:30:34+00:00,This is a RISC-V processor that is built only for R-Type instructions,0,yagnavivek/RISC4R,581851603,SystemVerilog,RISC4R,5,0,2022-12-24 15:33:07+00:00,[],https://api.github.com/licenses/mit
11102,https://github.com/fezaemircelik/Bilkent_CS223_Lab_Assignments.git,2022-12-28 22:53:45+00:00,,0,fezaemircelik/Bilkent_CS223_Lab_Assignments,583146674,SystemVerilog,Bilkent_CS223_Lab_Assignments,14,0,2022-12-28 22:58:43+00:00,[],
11103,https://github.com/MolecularPrism/RISC.git,2022-12-31 05:58:31+00:00,,0,MolecularPrism/RISC,583843331,SystemVerilog,RISC,8717,0,2022-12-31 06:13:04+00:00,[],
11104,https://github.com/Mahendra-Maddirala/LC3-Adding-a-Decode-Environment-A-UVM-.git,2023-01-05 15:03:54+00:00,,0,Mahendra-Maddirala/LC3-Adding-a-Decode-Environment-A-UVM-,585590688,SystemVerilog,LC3-Adding-a-Decode-Environment-A-UVM-,26578,0,2023-01-05 15:24:24+00:00,[],
11105,https://github.com/Haxrox/HaxElevator.git,2023-01-02 04:16:49+00:00,Elevator Controller in SystemVerilog,0,Haxrox/HaxElevator,584272133,SystemVerilog,HaxElevator,4,0,2023-01-02 04:23:40+00:00,[],https://api.github.com/licenses/mit
11106,https://github.com/jaeyoon0531/ddr2-controller.git,2023-01-02 04:11:43+00:00,,1,jaeyoon0531/ddr2-controller,584271345,SystemVerilog,ddr2-controller,3047,0,2023-01-04 07:47:13+00:00,[],
11107,https://github.com/Basanthkp21/Hldd_verification_lab2.git,2022-12-26 13:58:01+00:00,Lab sessional2 hldd_verification ,0,Basanthkp21/Hldd_verification_lab2,582336451,SystemVerilog,Hldd_verification_lab2,2,0,2022-12-26 13:59:24+00:00,[],
11108,https://github.com/JackSabine/stonehaven_math_ops.git,2022-12-09 21:08:25+00:00,,0,JackSabine/stonehaven_math_ops,576432475,SystemVerilog,stonehaven_math_ops,11,0,2022-12-09 21:08:47+00:00,[],
11109,https://github.com/Wave7t/THUEE-fall2022-Digital-System-Design-lab2.git,2022-12-02 13:28:21+00:00,,0,Wave7t/THUEE-fall2022-Digital-System-Design-lab2,573442968,SystemVerilog,THUEE-fall2022-Digital-System-Design-lab2,605,0,2022-12-08 10:06:35+00:00,[],
11110,https://github.com/Cognoscan/femto-riscv-demo-rust.git,2022-12-03 05:15:05+00:00,A tutorial on getting Rust to compile for a very very small RISC-V processor.,0,Cognoscan/femto-riscv-demo-rust,573687645,SystemVerilog,femto-riscv-demo-rust,553,0,2022-12-03 05:15:26+00:00,[],
11111,https://github.com/MatthewPat1/StudentCounter.git,2022-12-04 00:42:09+00:00,,0,MatthewPat1/StudentCounter,573957839,SystemVerilog,StudentCounter,5,0,2023-01-27 03:41:56+00:00,[],
11112,https://github.com/rlaguswo/Digital-Logic-Design.git,2022-12-05 08:05:20+00:00,,0,rlaguswo/Digital-Logic-Design,574394658,SystemVerilog,Digital-Logic-Design,138885,0,2022-12-05 08:06:14+00:00,[],
11113,https://github.com/Ramkasetty/SVTB_3To8decoder.git,2023-01-20 05:16:32+00:00,,0,Ramkasetty/SVTB_3To8decoder,591179426,SystemVerilog,SVTB_3To8decoder,3,0,2023-03-08 06:29:30+00:00,[],
11114,https://github.com/kingshrimp007/bist_sandbox.git,2023-01-15 06:38:45+00:00,,0,kingshrimp007/bist_sandbox,589130438,SystemVerilog,bist_sandbox,0,0,2023-01-15 06:39:21+00:00,[],
11115,https://github.com/rimjhim14/rimjhim_CPU_design.git,2023-02-02 06:15:54+00:00,design in verilog ,0,rimjhim14/rimjhim_CPU_design,596419535,SystemVerilog,rimjhim_CPU_design,291,0,2023-02-07 13:18:41+00:00,[],
11116,https://github.com/UCSB-ECE154B-Aaditya-Ayush/ECE154BLabs.git,2023-02-02 07:02:47+00:00,,0,UCSB-ECE154B-Aaditya-Ayush/ECE154BLabs,596433207,SystemVerilog,ECE154BLabs,15,0,2023-02-02 08:08:53+00:00,[],
11117,https://github.com/iskbaga/cache.git,2023-02-04 10:57:47+00:00,,0,iskbaga/cache,597374685,SystemVerilog,cache,11,0,2023-02-04 10:59:40+00:00,[],
11118,https://github.com/DirkDiggler2992/cuddly-octo-parakeet.git,2023-02-04 19:15:28+00:00,,0,DirkDiggler2992/cuddly-octo-parakeet,597510517,SystemVerilog,cuddly-octo-parakeet,1,0,2023-02-04 19:21:09+00:00,[],
11119,https://github.com/mmitri/ECE201.git,2023-01-06 16:53:33+00:00,,0,mmitri/ECE201,585996194,SystemVerilog,ECE201,11365,0,2023-01-06 16:54:25+00:00,[],
11120,https://github.com/LaPriseDeRISC/cva6-softcore-contest-lpdr.git,2023-01-13 14:45:53+00:00,,0,LaPriseDeRISC/cva6-softcore-contest-lpdr,588610071,SystemVerilog,cva6-softcore-contest-lpdr,43668,0,2023-06-28 14:39:10+00:00,[],
11121,https://github.com/zedyjy/CS223.git,2023-01-11 20:17:12+00:00,Labs I have done for CS 223,0,zedyjy/CS223,587884672,SystemVerilog,CS223,9,0,2023-01-11 20:23:27+00:00,[],
11122,https://github.com/andythebreaker/chip.git,2023-01-08 15:40:41+00:00,,0,andythebreaker/chip,586566709,SystemVerilog,chip,78170,0,2023-05-27 12:06:29+00:00,[],
11123,https://github.com/Maleeshas/SystemVerilogEx.git,2023-01-25 14:21:36+00:00,Exercises to practice System verilog,0,Maleeshas/SystemVerilogEx,593222494,SystemVerilog,SystemVerilogEx,18,0,2023-01-25 14:30:58+00:00,[],
11124,https://github.com/2019ee25unioni/M-extention-for-riscv.git,2023-01-28 15:06:59+00:00,Multiply and divide for the risc v 32bit,0,2019ee25unioni/M-extention-for-riscv,594440343,SystemVerilog,M-extention-for-riscv,11,0,2023-01-28 15:09:20+00:00,[],
11125,https://github.com/amarquez4498/Risc-v-5stage-Processor.git,2023-01-30 04:37:07+00:00,,0,amarquez4498/Risc-v-5stage-Processor,594955648,SystemVerilog,Risc-v-5stage-Processor,9,0,2023-01-30 04:37:53+00:00,[],
11126,https://github.com/JoaoPi314/AXI4-Lite-VIP.git,2023-02-02 19:06:18+00:00,,0,JoaoPi314/AXI4-Lite-VIP,596706977,SystemVerilog,AXI4-Lite-VIP,194,0,2023-03-16 16:20:09+00:00,[],
11127,https://github.com/crisbour/hw-verif.git,2022-12-16 08:55:09+00:00,Testbenches methods and toolchains that can be used,0,crisbour/hw-verif,578939387,SystemVerilog,hw-verif,22,0,2023-12-06 14:40:54+00:00,[],
11128,https://github.com/msyverw/ecen323_student.git,2023-01-20 19:54:51+00:00,Template repository for student repositories used in ECEN 323,2,msyverw/ecen323_student,591454702,,ecen323_student,2118,0,2022-10-09 03:08:34+00:00,[],
11129,https://github.com/unlim-int-soumya/Design_Verification_Projects.git,2022-12-22 07:18:47+00:00,,0,unlim-int-soumya/Design_Verification_Projects,581065074,SystemVerilog,Design_Verification_Projects,20045,0,2023-10-02 09:15:35+00:00,[],
11130,https://github.com/ChuanlaiZang/riscv_core.git,2023-01-10 02:21:06+00:00,RISC-V core,0,ChuanlaiZang/riscv_core,587122775,SystemVerilog,riscv_core,12996,0,2024-04-08 06:28:09+00:00,[],https://api.github.com/licenses/apache-2.0
11131,https://github.com/kato17/GIT_TEST.git,2022-12-12 07:47:42+00:00,,0,kato17/GIT_TEST,577199737,SystemVerilog,GIT_TEST,53,0,2022-12-12 07:53:14+00:00,[],
11132,https://github.com/JustRevolt/JTAG_implementation.git,2023-01-20 14:07:50+00:00,,0,JustRevolt/JTAG_implementation,591336000,SystemVerilog,JTAG_implementation,82,0,2023-01-20 14:15:50+00:00,[],
11133,https://github.com/rjmdhr/fir-uvm.git,2023-01-12 21:16:26+00:00,My attempt at learning UVM and making my own testbench,0,rjmdhr/fir-uvm,588324109,SystemVerilog,fir-uvm,6,0,2023-01-13 22:09:34+00:00,[],
11134,https://github.com/angrammenos97/wide_alu.git,2023-01-19 08:07:14+00:00,,0,angrammenos97/wide_alu,590791600,SystemVerilog,wide_alu,14,0,2023-01-19 08:08:16+00:00,[],
11135,https://github.com/s-griffith/Simulation_1-SystemVerilog.git,2023-01-21 12:09:26+00:00,,0,s-griffith/Simulation_1-SystemVerilog,591648414,,Simulation_1-SystemVerilog,1953,0,2023-03-25 15:53:04+00:00,[],
11136,https://github.com/Ouhznehc/NJU-COE.git,2023-01-30 08:43:18+00:00,NJU RISC-V Architecture Computer Organization Experiments （Spring 2022）,0,Ouhznehc/NJU-COE,595028115,SystemVerilog,NJU-COE,144,0,2023-09-27 16:45:06+00:00,[],
11137,https://github.com/mthimm2/risc_v_single_cycle_cpu.git,2023-01-25 01:48:23+00:00,A single-cycle RISC-V CPU implementing the 32-bit RISC-V integer instruction set.,0,mthimm2/risc_v_single_cycle_cpu,593004184,SystemVerilog,risc_v_single_cycle_cpu,3,0,2023-01-25 02:01:24+00:00,[],
11138,https://github.com/DQL-3264/enigma.git,2023-01-09 20:01:56+00:00,111-1邏輯設計期末專題,0,DQL-3264/enigma,587033023,SystemVerilog,enigma,8,0,2023-01-10 05:17:57+00:00,[],
11139,https://github.com/hanamcvicker/CSE371.git,2023-01-17 23:53:12+00:00,Design of Digital Circuits and Systems,0,hanamcvicker/CSE371,590233471,SystemVerilog,CSE371,6,0,2023-01-18 00:06:18+00:00,[],
11140,https://github.com/KAMOME-code/ECC-Add-test.git,2022-12-02 09:45:48+00:00,"secp256k1, Jacobian projective coordinate, ""Add"" (P+Q) test",0,KAMOME-code/ECC-Add-test,573366937,SystemVerilog,ECC-Add-test,7,0,2022-12-02 09:46:47+00:00,[],https://api.github.com/licenses/mit
11141,https://github.com/cmu-stuco-98154/f22-tt02-jrecta.git,2022-12-02 08:34:06+00:00,TT02 Student Submission: Async FIFO,0,cmu-stuco-98154/f22-tt02-jrecta,573342804,SystemVerilog,f22-tt02-jrecta,70,0,2022-12-12 01:21:06+00:00,[],https://api.github.com/licenses/apache-2.0
11143,https://github.com/bsilverriverd/mini_computer.git,2022-12-05 11:39:27+00:00,"8 bit computer based on the book ""But How Do It Know""",0,bsilverriverd/mini_computer,574470087,SystemVerilog,mini_computer,76,0,2022-12-17 00:13:52+00:00,[],
11144,https://github.com/kirtan03/Memory-Cache.git,2022-12-25 03:47:25+00:00,,0,kirtan03/Memory-Cache,581959996,SystemVerilog,Memory-Cache,49,0,2023-06-22 12:00:35+00:00,[],
11145,https://github.com/Engghassanali/Three-Stage-Pipeline-with-Uart-configuration.git,2022-12-23 10:32:06+00:00,,0,Engghassanali/Three-Stage-Pipeline-with-Uart-configuration,581487535,SystemVerilog,Three-Stage-Pipeline-with-Uart-configuration,332,0,2022-12-23 10:34:11+00:00,[],
11146,https://github.com/ninec09/float-point-multiplication-sv.git,2022-12-29 21:30:45+00:00,,0,ninec09/float-point-multiplication-sv,583464870,SystemVerilog,float-point-multiplication-sv,17,0,2022-12-29 21:35:36+00:00,[],
11147,https://github.com/G-uit-student/SystemVerilog.git,2023-01-04 21:37:33+00:00,,0,G-uit-student/SystemVerilog,585317518,SystemVerilog,SystemVerilog,2651,0,2023-01-04 21:43:44+00:00,[],
11148,https://github.com/Aakash-Jana/Traffic-Controller.git,2022-12-22 04:54:35+00:00,"It is an Intel Altera based , Traffic Light project designed modelling a 4 way traffic light controller. It involves system verilog and Finite State machine concepts.",0,Aakash-Jana/Traffic-Controller,581030616,SystemVerilog,Traffic-Controller,3257,0,2022-12-22 04:57:21+00:00,[],
11149,https://github.com/augustinjk/Interface-connection-with-modport.git,2022-12-08 05:05:21+00:00,,0,augustinjk/Interface-connection-with-modport,575698440,SystemVerilog,Interface-connection-with-modport,4,0,2022-12-08 05:07:26+00:00,[],
11150,https://github.com/GarrettTP/system-verilog-3d-renderer.git,2022-12-10 01:34:03+00:00,,0,GarrettTP/system-verilog-3d-renderer,576483011,SystemVerilog,system-verilog-3d-renderer,3027,0,2022-12-10 01:34:14+00:00,[],
11151,https://github.com/miyajiro/miyajiro_cpu.git,2022-12-31 16:54:18+00:00,self made 32 bit CPU. (subset of risc-V),0,miyajiro/miyajiro_cpu,583962059,SystemVerilog,miyajiro_cpu,193,0,2023-02-06 05:59:23+00:00,[],
11152,https://github.com/tobias-stadler/risc-core.git,2022-12-25 22:29:07+00:00,,0,tobias-stadler/risc-core,582152880,SystemVerilog,risc-core,67,0,2023-06-07 19:43:35+00:00,[],
11153,https://github.com/Cramos221/Verilog.git,2022-12-08 09:05:44+00:00,design Hardware,0,Cramos221/Verilog,575771917,SystemVerilog,Verilog,6567,0,2024-01-20 17:40:17+00:00,[],
11155,https://github.com/wdevore/RangerRisc-RISC-V.git,2022-12-24 03:16:12+00:00,This is the debug variant of RangerRisc a RISC-V Multicycle RV32I variant.,1,wdevore/RangerRisc-RISC-V,581710774,SystemVerilog,RangerRisc-RISC-V,23120,0,2022-12-26 21:20:40+00:00,[],https://api.github.com/licenses/mit
11156,https://github.com/Ego-max/CVA6-PMP.git,2022-12-16 14:53:59+00:00,Physical Memory Protection,0,Ego-max/CVA6-PMP,579057821,SystemVerilog,CVA6-PMP,24,0,2022-12-16 15:00:15+00:00,[],
11157,https://github.com/leksarodic/pnrs2.git,2022-12-16 17:11:11+00:00,Projektovanje namenskih računarskih struktura 2,0,leksarodic/pnrs2,579105035,SystemVerilog,pnrs2,1517,0,2022-12-16 17:11:50+00:00,[],
11158,https://github.com/shiyuan-l/rasterizer_unit.git,2022-12-15 22:25:17+00:00,course project for EE271,0,shiyuan-l/rasterizer_unit,578792025,SystemVerilog,rasterizer_unit,67,0,2022-12-15 22:37:11+00:00,[],
11159,https://github.com/shihjimmy/Digital_Circuit_Labs.git,2022-12-27 16:16:27+00:00,Digital circuit labs,0,shihjimmy/Digital_Circuit_Labs,582702047,SystemVerilog,Digital_Circuit_Labs,52579,0,2023-10-30 18:08:18+00:00,[],
11160,https://github.com/shihjimmy/Real-time_FFT_and_Effctor.git,2022-12-27 16:29:20+00:00,Digital circuit final project,0,shihjimmy/Real-time_FFT_and_Effctor,582705951,SystemVerilog,Real-time_FFT_and_Effctor,9540,0,2023-10-30 18:08:11+00:00,[],
11161,https://github.com/Devil2702/Pipelined_RISC_Processsor_4Stage.git,2022-12-27 13:52:25+00:00,Working Code for RISC Processor,0,Devil2702/Pipelined_RISC_Processsor_4Stage,582657949,SystemVerilog,Pipelined_RISC_Processsor_4Stage,5,0,2022-12-27 13:54:34+00:00,[],
11162,https://github.com/mohamedelshafie/system-verilog.git,2022-12-21 21:26:31+00:00,,0,mohamedelshafie/system-verilog,580945771,SystemVerilog,system-verilog,34,0,2022-12-21 21:28:08+00:00,[],
11163,https://github.com/davoudifatemeh/Multi-Cycle-MIPS-Processor.git,2022-12-22 10:10:03+00:00,,0,davoudifatemeh/Multi-Cycle-MIPS-Processor,581115723,SystemVerilog,Multi-Cycle-MIPS-Processor,235,0,2022-12-22 10:57:54+00:00,[],
11164,https://github.com/JoaoPi314/ral-hands-on-files.git,2022-12-13 13:26:19+00:00,,0,JoaoPi314/ral-hands-on-files,577764749,SystemVerilog,ral-hands-on-files,8,0,2022-12-13 13:28:00+00:00,[],
11165,https://github.com/IlyaChichkov/RISC_V-CPU.git,2022-12-13 21:34:23+00:00,Educational project which goal is realization of processor with RISC-V architecture.,0,IlyaChichkov/RISC_V-CPU,577933430,SystemVerilog,RISC_V-CPU,289,0,2022-12-13 21:57:28+00:00,"['hardware', 'risc-v', 'system-verilog']",
11166,https://github.com/fabio-pecora/verilog-alu.git,2022-12-09 20:24:35+00:00,,0,fabio-pecora/verilog-alu,576422153,SystemVerilog,verilog-alu,2,0,2023-09-13 11:32:19+00:00,[],
11167,https://github.com/William-An/CPU-X.git,2022-12-19 05:00:51+00:00,A RISC-V Core on FPGA,0,William-An/CPU-X,579852133,SystemVerilog,CPU-X,174,0,2023-01-13 16:06:05+00:00,"['cpu', 'fpga', 'risc-v', 'riscv', 'verilog']",
11168,https://github.com/asmwriter/system_verilog.git,2023-01-05 09:18:16+00:00,Repository for maintaining things developed in System verilog ,0,asmwriter/system_verilog,585477936,SystemVerilog,system_verilog,1,0,2023-01-05 09:31:42+00:00,[],
11169,https://github.com/Mahendra-Maddirala/LC3-Micro-Controller-Decode_in-Interface-UVM-.git,2023-01-05 13:59:08+00:00,,0,Mahendra-Maddirala/LC3-Micro-Controller-Decode_in-Interface-UVM-,585567498,SystemVerilog,LC3-Micro-Controller-Decode_in-Interface-UVM-,29038,0,2023-01-05 15:25:16+00:00,[],
11170,https://github.com/s-griffith/DigitalSystemsSimulation2.git,2023-01-04 14:57:11+00:00,Digital Systems and Computer Structure HW2,0,s-griffith/DigitalSystemsSimulation2,585193914,SystemVerilog,DigitalSystemsSimulation2,1559,0,2023-03-25 14:48:33+00:00,[],
11171,https://github.com/ACVenkatesh/AXI.git,2023-01-07 07:39:08+00:00,,0,ACVenkatesh/AXI,586174519,SystemVerilog,AXI,31,0,2023-01-07 07:41:10+00:00,[],
11172,https://github.com/dmquirozc/Serial_Basic_Interfaces.git,2022-12-12 20:46:15+00:00,,0,dmquirozc/Serial_Basic_Interfaces,577480602,SystemVerilog,Serial_Basic_Interfaces,25,0,2022-12-12 20:47:20+00:00,[],
11173,https://github.com/Fall-2022-Classes/fa22-final-project-team-11.git,2022-12-04 10:52:32+00:00,fa22-final-project-team-11 created by GitHub Classroom,0,Fall-2022-Classes/fa22-final-project-team-11,574073621,SystemVerilog,fa22-final-project-team-11,29,0,2022-12-07 19:49:07+00:00,[],
11174,https://github.com/besology512/digital-Stopwatch.git,2022-12-12 11:07:48+00:00,,0,besology512/digital-Stopwatch,577267534,SystemVerilog,digital-Stopwatch,59415,0,2022-12-31 18:35:24+00:00,[],
11175,https://github.com/Kobzon86/Intel-video-switch-analog.git,2022-12-28 08:57:09+00:00,"Analog of Intel IP Switch II. This implementation has same register map, but doesnt have problems when the video input is unstable",0,Kobzon86/Intel-video-switch-analog,582926555,SystemVerilog,Intel-video-switch-analog,4,0,2022-12-28 08:57:49+00:00,[],
11176,https://github.com/bosco0127/TPU.git,2023-01-01 10:11:13+00:00,,0,bosco0127/TPU,584091276,SystemVerilog,TPU,4567,0,2023-10-19 03:06:34+00:00,[],
11177,https://github.com/Qrisno/Engineering-5.git,2022-12-06 11:10:17+00:00,,0,Qrisno/Engineering-5,574918426,SystemVerilog,Engineering-5,8,0,2022-12-06 11:25:31+00:00,[],
11178,https://github.com/Kholoud-Ebrahim/Up_Down_Counter_4bit.git,2023-01-25 23:13:37+00:00,implementation and test bench using System Verilog ,1,Kholoud-Ebrahim/Up_Down_Counter_4bit,593407472,SystemVerilog,Up_Down_Counter_4bit,44,0,2023-01-25 23:34:18+00:00,[],
11179,https://github.com/natelannan-osu/dldFinalProject_Spring23.git,2023-01-22 03:01:10+00:00,Template repository for Final Project,0,natelannan-osu/dldFinalProject_Spring23,591838289,SystemVerilog,dldFinalProject_Spring23,5464,0,2023-03-28 20:34:05+00:00,[],
11180,https://github.com/a7mad-reda/FIR-Filter-Implementation-using-System-Verilog.git,2023-02-01 20:39:46+00:00,,0,a7mad-reda/FIR-Filter-Implementation-using-System-Verilog,596273179,SystemVerilog,FIR-Filter-Implementation-using-System-Verilog,174,0,2023-02-01 20:44:45+00:00,[],
11181,https://github.com/zhouxinyu0723/SystemVerilog_for_verification.git,2023-02-02 09:30:15+00:00,answers to the exercise in book SystemVerilog for verification,0,zhouxinyu0723/SystemVerilog_for_verification,596483450,SystemVerilog,SystemVerilog_for_verification,11,0,2023-02-02 09:31:47+00:00,[],
11182,https://github.com/xwd0418/ece111_2.git,2023-01-23 07:38:11+00:00,,0,xwd0418/ece111_2,592204653,SystemVerilog,ece111_2,2,0,2023-01-23 07:39:38+00:00,[],
11183,https://github.com/sushakam/Cache.git,2023-01-23 01:35:23+00:00,,0,sushakam/Cache,592130865,SystemVerilog,Cache,53,0,2023-01-24 01:48:29+00:00,[],
11184,https://github.com/ldaleyb/Basys3.git,2023-01-23 01:38:27+00:00,,1,ldaleyb/Basys3,592131375,SystemVerilog,Basys3,365,0,2023-01-23 03:49:45+00:00,[],
11185,https://github.com/yishaim/RTL-Designs-and-Verification.git,2023-01-23 20:34:06+00:00,Various RTL designs with full verification,0,yishaim/RTL-Designs-and-Verification,592483848,SystemVerilog,RTL-Designs-and-Verification,26,0,2023-01-24 19:49:22+00:00,[],
11186,https://github.com/onurozdemr/Simple-Microprocessor.git,2023-01-26 11:41:50+00:00,"Simple Microprocessor that can Add-Subtract, Load, Queue and Sort 4-bit data",0,onurozdemr/Simple-Microprocessor,593588754,SystemVerilog,Simple-Microprocessor,1601,0,2023-01-26 12:30:49+00:00,[],
11187,https://github.com/nikaemami/Switch-and-Gate-Structures.git,2023-02-07 05:41:01+00:00,Basic Switch and Gate Structures in System Verilog,0,nikaemami/Switch-and-Gate-Structures,598443327,SystemVerilog,Switch-and-Gate-Structures,4,0,2023-02-07 08:02:53+00:00,[],
11188,https://github.com/Ham-Choi/COMP-541.git,2023-01-18 21:45:04+00:00,UNC-CH Operating Systems,0,Ham-Choi/COMP-541,590642652,SystemVerilog,COMP-541,22497,0,2023-01-30 21:24:26+00:00,[],
11189,https://github.com/irvinglopezcuriel/hdc.git,2023-02-07 00:09:28+00:00,,0,irvinglopezcuriel/hdc,598360743,SystemVerilog,hdc,11,0,2023-02-07 02:10:44+00:00,[],
11190,https://github.com/Ashkanaaa/MISC-Machine.git,2022-12-31 20:52:23+00:00,,0,Ashkanaaa/MISC-Machine,583998651,SystemVerilog,MISC-Machine,51,0,2023-12-11 01:21:30+00:00,[],
11191,https://github.com/akashlevy/ember-digital.git,2023-01-17 23:29:10+00:00,Digital components of EMBER memory macro,0,akashlevy/ember-digital,590228060,SystemVerilog,ember-digital,7501,0,2023-01-18 06:23:59+00:00,[],
11192,https://github.com/AlexrAlves/pulp_soc.git,2023-01-19 05:12:26+00:00,Copy of pulp_soc v2.0.0,0,AlexrAlves/pulp_soc,590746014,SystemVerilog,pulp_soc,143,0,2023-01-19 05:27:49+00:00,[],
11193,https://github.com/Ahmed0100/apb_pwm_gen_slave.git,2022-12-11 12:28:24+00:00,apb_pwm_gen_slave,0,Ahmed0100/apb_pwm_gen_slave,576920902,SystemVerilog,apb_pwm_gen_slave,1,0,2022-12-11 12:28:45+00:00,[],
11194,https://github.com/sehes2solve/IEEE-32-bit-Floating-Point-Adder-Circuit-Design-In-Verliog-with-Simulation-Testing.git,2022-12-09 13:29:06+00:00,"Adds Nan, +Inf, -Inf, Zero & outputs Zero value if addition result is Zero (in the IEEE 32 bit floating point representation)",0,sehes2solve/IEEE-32-bit-Floating-Point-Adder-Circuit-Design-In-Verliog-with-Simulation-Testing,576291826,SystemVerilog,IEEE-32-bit-Floating-Point-Adder-Circuit-Design-In-Verliog-with-Simulation-Testing,6621,0,2023-09-13 11:32:06+00:00,[],
11195,https://github.com/fabio-pecora/verilog-incrementer.git,2022-12-09 19:48:57+00:00,,0,fabio-pecora/verilog-incrementer,576413488,SystemVerilog,verilog-incrementer,1,0,2022-12-09 19:49:30+00:00,[],
11196,https://github.com/pranavnreddy/Digital-Systems-Design-Modules.git,2022-12-13 00:24:56+00:00,Cool stuff I made in SystemVerilog,0,pranavnreddy/Digital-Systems-Design-Modules,577534611,SystemVerilog,Digital-Systems-Design-Modules,30,0,2022-12-13 00:25:47+00:00,[],
11197,https://github.com/tempasdfg/ece-385.git,2022-12-13 22:09:34+00:00,,0,tempasdfg/ece-385,577942344,SystemVerilog,ece-385,28,0,2022-12-13 22:12:57+00:00,[],
11198,https://github.com/Mahesh-Jasti/VLIW_Scheduler_and_Processor_Design.git,2022-12-08 23:34:07+00:00,• Designed a Trace driven VLIW scheduler scalable for n-slots in C++ using Topological sort graph algorithm. • Exported the resulting VLIW schedule into a SV testbench for the execution and writeback units designed in Verilog. • Simulated various traces for varying number of execution slots and tabulated IPC values for each configuration.,0,Mahesh-Jasti/VLIW_Scheduler_and_Processor_Design,576064311,SystemVerilog,VLIW_Scheduler_and_Processor_Design,5,0,2022-12-08 23:36:30+00:00,[],
11199,https://github.com/Kobzon86/RGB-produce-modules.git,2022-12-28 07:26:43+00:00,Modules for pruducing RGB stream,0,Kobzon86/RGB-produce-modules,582903162,SystemVerilog,RGB-produce-modules,64,0,2022-12-28 08:18:13+00:00,[],
11200,https://github.com/lcampos-rydev/UVM_chapter_9_resultado.git,2023-01-06 18:45:50+00:00,Ambiente de pruebas para GPIO,0,lcampos-rydev/UVM_chapter_9_resultado,586029260,SystemVerilog,UVM_chapter_9_resultado,66,0,2023-01-06 19:02:00+00:00,[],
11201,https://github.com/Nagarjun444/array_reduction.git,2022-12-18 10:56:08+00:00,array reduction methods in system verilog,0,Nagarjun444/array_reduction,579631150,SystemVerilog,array_reduction,1,0,2022-12-18 10:56:43+00:00,[],
11202,https://github.com/kadomoto/rv32-cyclone10.git,2022-12-22 01:50:30+00:00,,0,kadomoto/rv32-cyclone10,580995389,SystemVerilog,rv32-cyclone10,23,0,2022-12-22 01:53:29+00:00,[],
11203,https://github.com/npatsiatzis/VGA.git,2022-12-23 10:52:54+00:00,,0,npatsiatzis/VGA,581493090,SystemVerilog,VGA,4678,0,2023-08-19 09:19:21+00:00,"['cocotb', 'vhdl', 'systemverilog', 'verilator']",https://api.github.com/licenses/mit
11204,https://github.com/SukanyaMore/Traffic_Signal_Controller.git,2023-02-01 17:02:23+00:00,,0,SukanyaMore/Traffic_Signal_Controller,596193441,SystemVerilog,Traffic_Signal_Controller,86,0,2023-02-01 17:04:33+00:00,[],
11205,https://github.com/KAMOME-code/ECC-Double-test.git,2022-12-02 02:04:26+00:00,"secp256k1, Jacobian projective coordinate, ""Double"" (2P) test",0,KAMOME-code/ECC-Double-test,573240609,SystemVerilog,ECC-Double-test,6,0,2022-12-02 02:05:05+00:00,[],https://api.github.com/licenses/mit
11206,https://github.com/Laurenx618/Simple-DSP.git,2022-12-02 01:48:06+00:00,,0,Laurenx618/Simple-DSP,573236523,SystemVerilog,Simple-DSP,2478,0,2022-12-08 05:07:56+00:00,[],https://api.github.com/licenses/mit
11207,https://github.com/sebascarmar/ARMCicloUnico.git,2023-01-26 16:58:07+00:00,,0,sebascarmar/ARMCicloUnico,593707390,SystemVerilog,ARMCicloUnico,10,0,2023-01-26 17:04:14+00:00,[],
11208,https://github.com/gvillanovanm/svlog-examples.git,2023-01-20 11:41:27+00:00,,0,gvillanovanm/svlog-examples,591286721,SystemVerilog,svlog-examples,189,0,2023-01-29 16:39:54+00:00,[],
11209,https://github.com/yinghuaxia/BFS_maze.git,2023-01-14 13:58:57+00:00,,0,yinghuaxia/BFS_maze,588926082,SystemVerilog,BFS_maze,20,0,2023-02-19 06:00:08+00:00,[],https://api.github.com/licenses/mit
11210,https://github.com/jgaztelu/hub75_driver.git,2022-12-06 20:50:49+00:00,HUB75 protocol display driver for Zynq FPGAs,0,jgaztelu/hub75_driver,575135977,SystemVerilog,hub75_driver,255,0,2024-02-18 20:11:00+00:00,[],
11211,https://github.com/CookieDragon16/16-bit-MP.git,2022-12-10 12:37:03+00:00,FIC project,0,CookieDragon16/16-bit-MP,576619650,SystemVerilog,16-bit-MP,550,0,2022-12-12 18:35:58+00:00,[],
11212,https://github.com/KaramSh/120a_Labs.git,2022-12-11 10:49:37+00:00,Assignments done in CS/EE 120A using Verilog,0,KaramSh/120a_Labs,576896371,SystemVerilog,120a_Labs,22,0,2022-12-12 20:00:28+00:00,[],
11213,https://github.com/dtchuink/FPGA_NoC.git,2022-12-03 22:17:36+00:00,This folder contains the sources of the FPGA Network-on-Chip (NoC) used to support hardware elasticity on multi-tenant cloud FPGAs.,0,dtchuink/FPGA_NoC,573933322,SystemVerilog,FPGA_NoC,17,0,2022-12-03 22:21:44+00:00,[],
11214,https://github.com/ken881015/VSD_Hw4.git,2022-12-08 05:59:15+00:00,,0,ken881015/VSD_Hw4,575711992,SystemVerilog,VSD_Hw4,55,0,2022-12-08 06:01:25+00:00,[],
11215,https://github.com/zenon4689/yolo.git,2022-12-24 04:34:41+00:00,,0,zenon4689/yolo,581722583,SystemVerilog,yolo,10,0,2022-12-27 11:36:22+00:00,[],
11216,https://github.com/Ayyappa1911/2D_fft_implementation_in_vivado.git,2022-12-06 06:39:50+00:00,Implementation of 2D fft in RTL using Vivado.,0,Ayyappa1911/2D_fft_implementation_in_vivado,574825557,SystemVerilog,2D_fft_implementation_in_vivado,227,0,2022-12-06 06:41:48+00:00,[],
11217,https://github.com/kedaizuo/ariane.git,2022-12-03 05:03:12+00:00,CS254 project: dual issue of update to date ariane,1,kedaizuo/ariane,573685463,SystemVerilog,ariane,13199,0,2022-12-03 05:52:55+00:00,[],
11218,https://github.com/jissjoseph1997/verilog_programs.git,2022-12-22 05:12:31+00:00,verilog programs,0,jissjoseph1997/verilog_programs,581034578,SystemVerilog,verilog_programs,9,0,2022-12-22 08:47:28+00:00,[],
11219,https://github.com/mauriya0202/IEEE_floating_point_single_precision.git,2023-01-05 04:41:52+00:00,,2,mauriya0202/IEEE_floating_point_single_precision,585404355,SystemVerilog,IEEE_floating_point_single_precision,7,0,2023-01-05 04:47:33+00:00,[],https://api.github.com/licenses/mit
11220,https://github.com/jesrylcalalang/Collision_Detection_System.git,2023-01-03 20:54:45+00:00,,0,jesrylcalalang/Collision_Detection_System,584913052,SystemVerilog,Collision_Detection_System,7,0,2023-01-03 20:55:52+00:00,[],
11221,https://github.com/ShangolMangol/simulation2_sifratiyot.git,2023-01-06 10:45:25+00:00,,0,ShangolMangol/simulation2_sifratiyot,585884217,SystemVerilog,simulation2_sifratiyot,1923,0,2023-01-06 10:45:35+00:00,[],
11222,https://github.com/slimmsehli/AHBUART.git,2023-02-07 16:54:26+00:00,AHB UART IP ,0,slimmsehli/AHBUART,598709932,SystemVerilog,AHBUART,27,0,2023-03-20 11:46:27+00:00,[],
11223,https://github.com/mohammadhasanloo/CA-CA2-MIPS.git,2023-01-21 10:39:13+00:00,,0,mohammadhasanloo/CA-CA2-MIPS,591627993,SystemVerilog,CA-CA2-MIPS,3215,0,2023-01-21 10:45:20+00:00,[],
11224,https://github.com/mjhborja/apply_stimuli_propagation_apb_part_1_uvm.git,2023-01-19 09:40:25+00:00,"Now, we'll apply stimulus from a UVM test bench to a design - an ARM APB slave",0,mjhborja/apply_stimuli_propagation_apb_part_1_uvm,590820747,SystemVerilog,apply_stimuli_propagation_apb_part_1_uvm,70,0,2023-01-23 05:18:42+00:00,"['learn-uvm', 'uvm', 'adopt-vip', 'learn-interface-protocols', 'view-waveform']",https://api.github.com/licenses/mit
11225,https://github.com/Uvin99/RISC-V-32bit-Single-Cycle-Processor-.git,2023-01-28 07:03:17+00:00,RISC-V 32 bit CPU with direct mapping cache that has a victim cache.  ,0,Uvin99/RISC-V-32bit-Single-Cycle-Processor-,594321505,SystemVerilog,RISC-V-32bit-Single-Cycle-Processor-,343,0,2023-02-26 12:08:56+00:00,[],
11226,https://github.com/joaopmarinho/pulp-projectic.git,2023-01-29 16:59:22+00:00,implementação do core CV32E40P da plataforma PULP,1,joaopmarinho/pulp-projectic,594793361,SystemVerilog,pulp-projectic,9042,0,2023-04-12 15:24:11+00:00,[],
11227,https://github.com/Crysta1ightning/Meow-Pong.git,2023-01-15 16:32:55+00:00,Pong game written in system verilog,0,Crysta1ightning/Meow-Pong,589271184,SystemVerilog,Meow-Pong,265,0,2023-01-15 16:36:38+00:00,[],
11228,https://github.com/pierregobin/myibex.git,2023-01-13 20:38:04+00:00,,0,pierregobin/myibex,588722480,SystemVerilog,myibex,11957,0,2023-01-13 20:41:53+00:00,[],https://api.github.com/licenses/apache-2.0
11229,https://github.com/An0nym0us-27/Full-Adder-System-Verilog.git,2023-01-11 05:53:46+00:00,,0,An0nym0us-27/Full-Adder-System-Verilog,587597484,SystemVerilog,Full-Adder-System-Verilog,185,0,2023-01-11 05:54:31+00:00,[],
11230,https://github.com/vulo2405/Simon-Says.git,2023-01-17 04:25:01+00:00,Simon Says by Verilog on FPGA,0,vulo2405/Simon-Says,589846468,SystemVerilog,Simon-Says,17,0,2023-01-17 04:42:08+00:00,[],
11231,https://github.com/panther03/ECE-554-MiniProject.git,2023-02-01 01:15:30+00:00,Spring 2023 ECE 554 Mini Project repository.,0,panther03/ECE-554-MiniProject,595871636,SystemVerilog,ECE-554-MiniProject,823,0,2023-05-13 19:29:09+00:00,[],
11232,https://github.com/saswatiscaledge/saswati_cpu.git,2023-01-31 11:23:13+00:00,,0,saswatiscaledge/saswati_cpu,595576827,SystemVerilog,saswati_cpu,66,0,2023-01-31 11:30:41+00:00,[],
11233,https://github.com/kevweldon/Basic_AXI_Sim.git,2023-01-13 15:40:23+00:00,Platform Designer example demonstrating AXI communication from Mentor's AXI BFM to on-chip RAM. (Quartus 23.4),0,kevweldon/Basic_AXI_Sim,588629467,SystemVerilog,Basic_AXI_Sim,515,0,2024-01-31 12:45:55+00:00,[],
11234,https://github.com/muwyse/black-parrot-fpga.git,2023-01-31 04:59:54+00:00,,0,muwyse/black-parrot-fpga,595448114,SystemVerilog,black-parrot-fpga,463,0,2024-03-14 03:49:17+00:00,[],https://api.github.com/licenses/bsd-3-clause
11235,https://github.com/APERI11/DR_StateMachineForCDCL.git,2022-12-08 13:21:54+00:00,,0,APERI11/DR_StateMachineForCDCL,575862998,SystemVerilog,DR_StateMachineForCDCL,4,0,2022-12-08 13:22:27+00:00,[],
11236,https://github.com/sumanmallik05/EECS573_microarcitecture.git,2022-12-11 17:08:27+00:00,,0,sumanmallik05/EECS573_microarcitecture,577000938,SystemVerilog,EECS573_microarcitecture,3,0,2022-12-11 17:42:20+00:00,[],
11237,https://github.com/TalisonK/frequencimetro.git,2022-12-14 15:37:15+00:00,projeto da cadeira de projeto de sinais e sistemas,0,TalisonK/frequencimetro,578242509,SystemVerilog,frequencimetro,4,0,2022-12-15 00:38:00+00:00,[],
11238,https://github.com/KelvinChung2000/RISC-V-32IM_processor.git,2022-12-08 16:14:55+00:00,A simple 5-stage pipeline RISC-V 32IM processor in System Verilog  ,0,KelvinChung2000/RISC-V-32IM_processor,575932325,SystemVerilog,RISC-V-32IM_processor,28,0,2023-04-04 14:47:17+00:00,[],
11239,https://github.com/christoschatz/School-Projects.git,2022-12-08 20:24:38+00:00,A repository to organize my school projects during my studies,0,christoschatz/School-Projects,576017476,SystemVerilog,School-Projects,2109,0,2023-08-14 09:31:26+00:00,"['audio-processing', 'dsp', 'integrated-circuits', 'electronic-measurements', 'microprocessors-and-applications']",
11240,https://github.com/jyk2498/SOC_final.git,2022-12-10 15:49:05+00:00,,0,jyk2498/SOC_final,576671182,SystemVerilog,SOC_final,14,0,2022-12-10 15:54:47+00:00,[],
11241,https://github.com/ScottyB55/Verilog-Convolution-Engine.git,2023-01-21 00:37:07+00:00,,0,ScottyB55/Verilog-Convolution-Engine,591518813,SystemVerilog,Verilog-Convolution-Engine,394,0,2023-01-21 00:41:51+00:00,[],
11242,https://github.com/Khoabk/Computer-engineering-project.git,2022-12-22 03:03:57+00:00,,0,Khoabk/Computer-engineering-project,581009621,SystemVerilog,Computer-engineering-project,225649,0,2022-12-22 03:09:02+00:00,[],
11243,https://github.com/I523360726/123.git,2022-12-21 23:42:42+00:00,,0,I523360726/123,580972925,SystemVerilog,123,557,0,2023-02-09 06:29:47+00:00,[],
11244,https://github.com/scalable-arch/URP2022F.git,2023-01-05 01:37:22+00:00,,3,scalable-arch/URP2022F,585365943,SystemVerilog,URP2022F,4384,0,2023-01-05 01:40:41+00:00,[],https://api.github.com/licenses/apache-2.0
11245,https://github.com/dimiderv/VLSI_Systems.git,2023-01-05 05:28:39+00:00,,0,dimiderv/VLSI_Systems,585414495,SystemVerilog,VLSI_Systems,27,0,2023-01-05 07:01:40+00:00,[],https://api.github.com/licenses/apache-2.0
11246,https://github.com/BlooHoosker/ni-sim-switch-uvm.git,2023-01-26 22:57:43+00:00,NI-SIM - Simple switch RTL implementation and UVM simulation,0,BlooHoosker/ni-sim-switch-uvm,593822056,SystemVerilog,ni-sim-switch-uvm,12252,0,2023-01-26 23:06:32+00:00,[],
11247,https://github.com/SukanyaMore/First-In-First-Out_Memory.git,2023-02-01 16:53:39+00:00,,0,SukanyaMore/First-In-First-Out_Memory,596189982,SystemVerilog,First-In-First-Out_Memory,188,0,2023-02-01 17:01:10+00:00,[],
11248,https://github.com/ShevtsovNikita/Single-cycle-RISC-V.git,2023-01-15 09:02:33+00:00,"Здесь пошагово расписан процесс моей разработки однотактового процессора с набором инструкций RV32I в ходе выполнения лабораторного практикума по дисциплине ""Архитектуры процессорных систем""",0,ShevtsovNikita/Single-cycle-RISC-V,589157754,SystemVerilog,Single-cycle-RISC-V,108,0,2023-01-15 09:38:01+00:00,[],
11249,https://github.com/wfy-yr/wifi_env.git,2023-01-17 02:21:51+00:00,,0,wfy-yr/wifi_env,589819709,SystemVerilog,wifi_env,111,0,2023-01-31 23:38:54+00:00,[],
11250,https://github.com/cam-br0wn/ce495.git,2023-01-17 08:00:47+00:00,,0,cam-br0wn/ce495,589901988,SystemVerilog,ce495,5633,0,2023-01-18 05:36:35+00:00,[],
11251,https://github.com/mitshine/uvm-examples-simple-steps.git,2023-01-27 14:24:29+00:00,uvm examples in easy steps,0,mitshine/uvm-examples-simple-steps,594067890,SystemVerilog,uvm-examples-simple-steps,8,0,2023-01-27 14:41:28+00:00,[],
11252,https://github.com/samhachem99/fipep.git,2022-12-19 04:17:02+00:00,,0,samhachem99/fipep,579843524,SystemVerilog,fipep,85630,0,2022-12-19 05:33:22+00:00,[],
11253,https://github.com/bjon1/vending-machine.git,2022-12-21 01:01:33+00:00,Vending Machine System In Verilog,0,bjon1/vending-machine,580602885,SystemVerilog,vending-machine,1132,0,2022-12-21 01:14:52+00:00,[],
11254,https://github.com/austinkwb/tactile-sensing.git,2022-12-17 00:56:35+00:00,,0,austinkwb/tactile-sensing,579219033,SystemVerilog,tactile-sensing,265,0,2022-12-17 00:57:46+00:00,[],https://api.github.com/licenses/mit
11255,https://github.com/xkunD/digital-design.git,2023-01-28 17:23:56+00:00,,0,xkunD/digital-design,594480345,SystemVerilog,digital-design,7171,0,2023-03-30 12:53:15+00:00,[],
11256,https://github.com/joshgalvan/national-instruments-internship.git,2023-02-07 07:38:19+00:00,This is the main project I produced for National Instruments during my internship.,0,joshgalvan/national-instruments-internship,598479809,SystemVerilog,national-instruments-internship,14,0,2023-02-22 02:43:05+00:00,[],
11257,https://github.com/RaviduHM99/EN3030_CSD_SC_RV32I_Processor.git,2023-02-06 07:03:11+00:00,,0,RaviduHM99/EN3030_CSD_SC_RV32I_Processor,597996594,SystemVerilog,EN3030_CSD_SC_RV32I_Processor,26045,0,2023-05-03 04:40:35+00:00,[],
11258,https://github.com/ctrippel/trippel-lab.git,2023-01-01 15:45:50+00:00,,0,ctrippel/trippel-lab,584151808,SystemVerilog,trippel-lab,103818,0,2024-03-17 19:08:13+00:00,[],
11259,https://github.com/andreibelov/fpga_first_steps.git,2023-01-21 19:21:29+00:00,This repository if for education autodidact purposes ,0,andreibelov/fpga_first_steps,591759384,SystemVerilog,fpga_first_steps,407,0,2023-01-23 05:03:28+00:00,[],
11260,https://github.com/mauriya0202/D_flip_flop_layered_testbench.git,2023-01-02 03:24:39+00:00,,0,mauriya0202/D_flip_flop_layered_testbench,584264003,SystemVerilog,D_flip_flop_layered_testbench,11,0,2023-01-02 03:26:41+00:00,[],
11261,https://github.com/anne118193/ECE-111.git,2023-01-12 00:39:15+00:00,,0,anne118193/ECE-111,587947431,SystemVerilog,ECE-111,7121,0,2023-02-04 22:12:35+00:00,[],
11262,https://github.com/YazanHussnain/RISCV-single-cycle-processor-core.git,2023-01-12 03:45:34+00:00,,0,YazanHussnain/RISCV-single-cycle-processor-core,587988078,SystemVerilog,RISCV-single-cycle-processor-core,10,0,2023-02-05 15:35:53+00:00,[],
11263,https://github.com/MichalOz/digitalSystems_sim3.git,2023-01-18 11:50:36+00:00,,0,MichalOz/digitalSystems_sim3,590427751,SystemVerilog,digitalSystems_sim3,63,0,2023-01-18 11:55:49+00:00,[],
11264,https://github.com/Lvwings/SIFT.git,2023-01-19 06:15:01+00:00,SIFT,0,Lvwings/SIFT,590760595,SystemVerilog,SIFT,24,0,2023-01-19 06:19:11+00:00,[],https://api.github.com/licenses/mit
11265,https://github.com/iiCFDii/FPGA-ALU.git,2023-01-20 05:52:20+00:00,"Utilizing an Intel FPGA, programmed a fully functioning ALU in System Verilog which included a datapath, control, memory, 6-bit adder, and a 6-bit logic unit. My design makes use of 13 flip flops and 13 registers.",0,iiCFDii/FPGA-ALU,591187519,SystemVerilog,FPGA-ALU,5,0,2023-01-20 05:54:09+00:00,[],
11266,https://github.com/chandani18/mynew2.git,2023-01-23 11:27:36+00:00,,0,chandani18/mynew2,592275289,SystemVerilog,mynew2,8761,0,2023-01-23 11:29:43+00:00,[],
11267,https://github.com/AlfredoPaolino/R8-MBE_Multiplier_with_Dadda_Tree.git,2022-12-03 21:52:43+00:00,,0,AlfredoPaolino/R8-MBE_Multiplier_with_Dadda_Tree,573928633,SystemVerilog,R8-MBE_Multiplier_with_Dadda_Tree,10,0,2022-12-03 22:01:51+00:00,[],
11268,https://github.com/colemarco/RISC-V-Pipelined-CPU.git,2022-12-28 21:04:33+00:00,A system verilog implementation of a full instruction set RISC-V Pipelined CPU,0,colemarco/RISC-V-Pipelined-CPU,583126023,SystemVerilog,RISC-V-Pipelined-CPU,335,0,2023-01-06 19:19:26+00:00,[],
11269,https://github.com/Oxymoronous/VHDL-Programming.git,2022-12-16 09:37:43+00:00,Digital Systems Laboratory Projects - VHDL and C,0,Oxymoronous/VHDL-Programming,578953372,SystemVerilog,VHDL-Programming,3424,0,2023-01-29 09:39:10+00:00,[],
11270,https://github.com/vishwajeet-sinh/100_RTL_days.git,2022-12-19 01:40:32+00:00,Day 1-10 : -------,0,vishwajeet-sinh/100_RTL_days,579813571,SystemVerilog,100_RTL_days,95,0,2023-08-09 13:21:58+00:00,[],
11271,https://github.com/samanvithakatta/100DaysOfRTLPractice.git,2022-12-18 22:25:05+00:00,100 Days of RTL problems,0,samanvithakatta/100DaysOfRTLPractice,579781884,SystemVerilog,100DaysOfRTLPractice,1,0,2022-12-18 23:38:22+00:00,[],
11272,https://github.com/tay679/ASIC-design.git,2022-12-20 18:42:32+00:00,,0,tay679/ASIC-design,580511784,SystemVerilog,ASIC-design,3654,0,2022-12-20 18:45:17+00:00,[],
11273,https://github.com/paul-vangerow/dsd-supplementary.git,2023-01-24 12:38:47+00:00,,0,paul-vangerow/dsd-supplementary,592740365,SystemVerilog,dsd-supplementary,16110,0,2023-08-13 12:59:35+00:00,[],
11274,https://github.com/kuba6543/alu_unit.git,2023-01-25 20:46:09+00:00,,0,kuba6543/alu_unit,593366531,SystemVerilog,alu_unit,214,0,2023-01-25 20:46:53+00:00,[],
11275,https://github.com/jimkim1037/test_github.git,2023-01-06 13:04:19+00:00,,0,jimkim1037/test_github,585922705,SystemVerilog,test_github,1,0,2023-01-06 13:26:35+00:00,[],
11276,https://github.com/ryanchaiyakul/dav.git,2023-01-15 03:45:45+00:00,DAV Projects taught by IEEE at UCLA,0,ryanchaiyakul/dav,589101858,SystemVerilog,dav,13366,0,2023-01-15 03:51:33+00:00,[],
11277,https://github.com/dvsh-n/Verilog-Stuff.git,2023-01-23 21:40:36+00:00,,0,dvsh-n/Verilog-Stuff,592504398,SystemVerilog,Verilog-Stuff,4586,0,2023-01-23 21:49:51+00:00,[],
11278,https://github.com/chandani18/myfiles.git,2023-01-23 07:22:33+00:00,,0,chandani18/myfiles,592200888,SystemVerilog,myfiles,40954,0,2023-01-23 07:28:19+00:00,[],
11279,https://github.com/mariastt/APS.git,2022-12-19 16:31:40+00:00,,0,mariastt/APS,580068330,SystemVerilog,APS,21,0,2022-12-24 15:12:08+00:00,[],
11280,https://github.com/GudduKumar0208/The-Advanced-Peripheral-Bus-APB-.git,2022-12-02 02:26:42+00:00,The Advanced Peripheral Bus (APB) is part of the Advanced Microcontroller Bus Architecture (AMBA) protocol family.,0,GudduKumar0208/The-Advanced-Peripheral-Bus-APB-,573245963,SystemVerilog,The-Advanced-Peripheral-Bus-APB-,13,0,2022-12-02 02:28:38+00:00,[],
11281,https://github.com/GudduKumar0208/RAM-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY.git,2022-12-02 02:40:02+00:00,,0,GudduKumar0208/RAM-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY,573249327,SystemVerilog,RAM-VERIFICATION-VIA-UNIVERSAL-VERIFICATION-METHODLOGY,10,0,2022-12-02 02:43:02+00:00,[],
11282,https://github.com/yumiweidemao/ECE-385-Labs.git,2022-12-14 20:08:07+00:00,Labs & Final Project of ECE 385 Fall 2022 UIUC,0,yumiweidemao/ECE-385-Labs,578333594,SystemVerilog,ECE-385-Labs,6336,0,2022-12-14 20:19:39+00:00,[],
11283,https://github.com/VictorIsachi/fifo_with_parity_checker.git,2023-02-06 20:10:43+00:00,,0,VictorIsachi/fifo_with_parity_checker,598295369,SystemVerilog,fifo_with_parity_checker,34,0,2023-02-06 20:12:03+00:00,[],
11284,https://github.com/Sov-trotter/Design-Verification.git,2023-01-06 13:08:39+00:00,,1,Sov-trotter/Design-Verification,585924060,SystemVerilog,Design-Verification,676,0,2024-01-28 15:18:22+00:00,[],
11286,https://github.com/madellimac/hw-aff3ct.git,2023-01-30 14:01:02+00:00,Hardware in the loop for the AFF3CT library.,0,madellimac/hw-aff3ct,595151418,SystemVerilog,hw-aff3ct,673,0,2023-11-17 13:36:01+00:00,[],
11287,https://github.com/meenalpannase/RAL_Module4.git,2022-12-14 19:04:24+00:00,,1,meenalpannase/RAL_Module4,578315751,SystemVerilog,RAL_Module4,423,0,2022-12-15 08:31:17+00:00,[],
11288,https://github.com/j4ger/cyclops.git,2022-12-19 08:16:43+00:00,A verilog design of a simple VGA graphics card.,0,j4ger/cyclops,579901545,SystemVerilog,cyclops,1360,0,2022-12-20 10:43:00+00:00,[],https://api.github.com/licenses/apache-2.0
11289,https://github.com/Basher4/FPGA-Playground.git,2022-12-19 22:41:34+00:00,Playing around with fpgas I have,0,Basher4/FPGA-Playground,580174926,SystemVerilog,FPGA-Playground,776,0,2022-12-19 22:44:39+00:00,[],
11290,https://github.com/nmamore/intel8080.git,2023-01-02 22:29:23+00:00,Recreation of Intel 8080 to learn about CPUs,0,nmamore/intel8080,584551999,SystemVerilog,intel8080,144,0,2023-01-02 22:29:30+00:00,[],
11291,https://github.com/vuhuycan/pmbist.git,2022-12-29 16:21:33+00:00,,0,vuhuycan/pmbist,583388222,SystemVerilog,pmbist,54,0,2023-06-01 08:53:12+00:00,[],
11292,https://github.com/wdevore/MachDyne_FPGAs_SBCs.git,2023-01-01 01:50:41+00:00,"Machdyne series of FPGA boards. Eis, Schoko, Keks, Bon Bon",0,wdevore/MachDyne_FPGAs_SBCs,584030372,SystemVerilog,MachDyne_FPGAs_SBCs,43230,0,2023-01-08 04:38:11+00:00,[],https://api.github.com/licenses/mit
11293,https://github.com/Susmitpr/Basic_verilog_code.git,2022-12-28 12:43:27+00:00,,0,Susmitpr/Basic_verilog_code,582989404,SystemVerilog,Basic_verilog_code,297,0,2023-02-25 13:14:36+00:00,[],
11294,https://github.com/justanuman/cpu_lab6.git,2023-01-07 10:40:37+00:00,процессор для 6 лаболаторной,0,justanuman/cpu_lab6,586211677,SystemVerilog,cpu_lab6,86,0,2023-01-07 12:22:52+00:00,[],
11295,https://github.com/DilipKrishnappa/NAND_UVMF.git,2023-01-07 12:36:35+00:00,,0,DilipKrishnappa/NAND_UVMF,586237323,SystemVerilog,NAND_UVMF,54283,0,2023-01-07 12:46:38+00:00,[],
11296,https://github.com/kingshrimp007/sv_sandbox.git,2023-01-12 02:28:19+00:00,,0,kingshrimp007/sv_sandbox,587971113,SystemVerilog,sv_sandbox,0,0,2023-01-12 02:38:13+00:00,[],
11297,https://github.com/mohammadhasanloo/CA-CA4-Pipeline-MIPS.git,2023-01-21 14:25:02+00:00,,0,mohammadhasanloo/CA-CA4-Pipeline-MIPS,591681677,SystemVerilog,CA-CA4-Pipeline-MIPS,970,0,2023-01-21 14:28:06+00:00,[],
11298,https://github.com/iiCFDii/FPGA-Tic-Tac-Toe-Display-Driver.git,2023-01-20 05:57:33+00:00,Utilized an Intel FPGA board to render a TicTacToe game on a monitor via VGA connection. All Game Logic and pixel rendering done via System Verilog Logic. ,0,iiCFDii/FPGA-Tic-Tac-Toe-Display-Driver,591188637,SystemVerilog,FPGA-Tic-Tac-Toe-Display-Driver,329,0,2023-01-20 05:59:58+00:00,[],
11299,https://github.com/glkclass/csi_tb.git,2023-02-03 11:05:08+00:00,CSI TB,0,glkclass/csi_tb,596980608,SystemVerilog,csi_tb,129,0,2023-02-03 11:10:59+00:00,[],https://api.github.com/licenses/apache-2.0
11300,https://github.com/joaquimelerebel/riscV.git,2022-12-09 10:07:33+00:00,,0,joaquimelerebel/riscV,576227394,SystemVerilog,riscV,69970,0,2023-05-12 21:31:04+00:00,[],
11301,https://github.com/fabio-pecora/four-bit-adder.git,2022-12-09 19:36:29+00:00,,0,fabio-pecora/four-bit-adder,576410351,SystemVerilog,four-bit-adder,3,0,2022-12-09 19:37:06+00:00,[],
11302,https://github.com/coderjaspal/git_demo_repo.git,2022-12-16 09:59:16+00:00,for learning basic of git,0,coderjaspal/git_demo_repo,578959990,SystemVerilog,git_demo_repo,2,0,2022-12-16 10:55:26+00:00,[],
11303,https://github.com/MisbahNaeem/32bit-Single-Cycle-RISC-V-Processor.git,2022-12-12 06:58:01+00:00,,0,MisbahNaeem/32bit-Single-Cycle-RISC-V-Processor,577185303,SystemVerilog,32bit-Single-Cycle-RISC-V-Processor,8,0,2022-12-12 06:59:20+00:00,[],
11304,https://github.com/dyoung223/rasterizer.git,2022-12-03 01:19:09+00:00,,0,dyoung223/rasterizer,573644586,SystemVerilog,rasterizer,17576,0,2022-12-03 04:17:18+00:00,[],
11305,https://github.com/mauriya0202/COO_Matrix.git,2023-01-02 03:15:50+00:00,,0,mauriya0202/COO_Matrix,584262622,SystemVerilog,COO_Matrix,3,0,2023-01-02 03:20:47+00:00,[],
11306,https://github.com/aldendsouza18/PongGame.git,2023-01-05 10:58:49+00:00,,0,aldendsouza18/PongGame,585509320,SystemVerilog,PongGame,8,0,2023-01-05 11:06:22+00:00,[],
11307,https://github.com/etf-tk-sdn/DPPSN.git,2023-01-04 15:56:31+00:00,,0,etf-tk-sdn/DPPSN,585215337,SystemVerilog,DPPSN,2555,0,2023-01-04 15:56:56+00:00,[],https://api.github.com/licenses/mit
11308,https://github.com/kapetan-nemo/verification_studies.git,2023-01-04 09:08:03+00:00,Изучение искусства верификации,0,kapetan-nemo/verification_studies,585078983,SystemVerilog,verification_studies,5846,0,2023-02-20 06:36:31+00:00,[],
11309,https://github.com/cameronyap01/Digital-Systems-Design-Project.git,2022-12-23 04:44:02+00:00,This project is a hardware implementation of an image decompressor and is done in collaboration with Arjun Snider,0,cameronyap01/Digital-Systems-Design-Project,581402635,SystemVerilog,Digital-Systems-Design-Project,3517,0,2022-12-23 04:49:49+00:00,[],
11310,https://github.com/trotwuu/Computer-Architecture.git,2023-01-27 03:25:31+00:00,Purdue ECE 43700 CPU Design Lab,0,trotwuu/Computer-Architecture,593879441,SystemVerilog,Computer-Architecture,6991,0,2023-06-26 16:37:08+00:00,[],
11311,https://github.com/satvick16/alu.git,2023-01-25 22:14:58+00:00,A simple CPU control and data path written in SystemVerilog.,0,satvick16/alu,593392574,SystemVerilog,alu,2,0,2023-07-05 11:52:12+00:00,[],
11312,https://github.com/ali-tunahan/Calculator_8-Bit_Basys3.git,2023-01-16 16:30:35+00:00,,0,ali-tunahan/Calculator_8-Bit_Basys3,589660289,SystemVerilog,Calculator_8-Bit_Basys3,13,0,2023-02-02 11:26:43+00:00,[],
11313,https://github.com/yishaim/RTL100.git,2023-01-17 20:32:59+00:00,Implement a RISC-V processor in 100 days (or less),0,yishaim/RTL100,590180059,SystemVerilog,RTL100,14,0,2023-01-29 17:58:50+00:00,[],
11314,https://github.com/Rn86222/sanmoku-narabe-FSM.git,2023-01-23 16:14:21+00:00,,0,Rn86222/sanmoku-narabe-FSM,592386734,SystemVerilog,sanmoku-narabe-FSM,734,0,2023-03-01 15:17:25+00:00,[],
11315,https://github.com/pawanv1997/pawan_cpu.git,2023-01-31 10:30:13+00:00,about cpu desgn,0,pawanv1997/pawan_cpu,595557427,SystemVerilog,pawan_cpu,328,0,2023-02-07 10:53:18+00:00,[],
11316,https://github.com/Btremaine/Basys_3_LFSR.git,2023-01-30 17:50:58+00:00,Project on Baysys 3 board implementing 16-bit LFSR,0,Btremaine/Basys_3_LFSR,595250854,SystemVerilog,Basys_3_LFSR,4017,0,2023-01-30 18:31:32+00:00,[],
11317,https://github.com/DaveMcEwan/student-asvi.git,2023-02-02 10:59:25+00:00,Andrew's SystemVerilog interfaces project,1,DaveMcEwan/student-asvi,596515452,SystemVerilog,student-asvi,357,0,2023-07-03 16:16:41+00:00,[],https://api.github.com/licenses/mit
11318,https://github.com/Arseniy16/Yadro_labs.git,2022-12-02 01:50:40+00:00,This is reposiory for FPGA test labs in YADRO,0,Arseniy16/Yadro_labs,573237115,SystemVerilog,Yadro_labs,22,0,2023-03-03 08:23:37+00:00,[],
11319,https://github.com/shrawankumar584/Checking-proj.git,2023-02-07 15:18:12+00:00,Checking our git working,0,shrawankumar584/Checking-proj,598666541,SystemVerilog,Checking-proj,0,0,2023-02-07 15:23:39+00:00,[],
11320,https://github.com/iampragyagupta/Verilog.git,2023-02-07 17:29:30+00:00,,0,iampragyagupta/Verilog,598724965,SystemVerilog,Verilog,14,0,2023-02-07 17:33:26+00:00,[],
11321,https://github.com/yms020615/COSE222.git,2022-12-27 13:12:29+00:00,,0,yms020615/COSE222,582645914,SystemVerilog,COSE222,3388,0,2024-01-17 23:56:01+00:00,[],
11322,https://github.com/rahul7rajdn/ethernet.git,2023-01-04 06:11:45+00:00,Verilog Project to swap source and destination address in ethernet frame and System verilog based verification for the same,0,rahul7rajdn/ethernet,585029084,SystemVerilog,ethernet,568,0,2024-01-31 08:06:23+00:00,[],
11323,https://github.com/DNSalaf/SE204_DE10-Nano.git,2023-01-27 23:52:43+00:00,Different projects in verilog system developed in SE204 discipline (Numerical architectures and FPGA programming).,0,DNSalaf/SE204_DE10-Nano,594242701,SystemVerilog,SE204_DE10-Nano,22542,0,2023-12-30 12:47:09+00:00,[],
11324,https://github.com/chipsalliance/caliptra-rtl.git,2023-02-14 18:46:08+00:00,HW Design Collateral  for Caliptra RoT IP,25,chipsalliance/caliptra-rtl,601754932,SystemVerilog,caliptra-rtl,34975,50,2024-04-13 06:35:32+00:00,[],https://api.github.com/licenses/apache-2.0
11325,https://github.com/zero-day-labs/riscv-iommu.git,2023-04-07 12:09:12+00:00,IOMMU IP compliant with the RISC-V IOMMU Specification v1.0,5,zero-day-labs/riscv-iommu,624849334,SystemVerilog,riscv-iommu,24520,31,2024-04-13 07:55:27+00:00,[],https://api.github.com/licenses/apache-2.0
11326,https://github.com/openhwgroup/cv-hpdcache.git,2023-02-21 14:09:35+00:00,RTL sources of the High-Performance L1 Dcache (HPDcache) for OpenHW CV cores,10,openhwgroup/cv-hpdcache,604651903,SystemVerilog,cv-hpdcache,1213,28,2024-04-04 16:33:16+00:00,[],
11327,https://github.com/hughbyrne10/100daysofRTL.git,2023-03-27 10:50:01+00:00,100 Days Of RTL is a personal challenge designed to help improve skills and knowledge in digital circuit design. The challenge involves committing to working on RTL based digital designs for 100 consecutive days. The goal is to build a solid foundation of knowledge and experience in the field.,1,hughbyrne10/100daysofRTL,619541330,SystemVerilog,100daysofRTL,3439,26,2023-12-22 11:30:27+00:00,[],
11328,https://github.com/pulp-platform/snitch_cluster.git,2023-03-22 15:18:43+00:00,An energy-efficient RISC-V floating-point compute cluster.,28,pulp-platform/snitch_cluster,617527938,SystemVerilog,snitch_cluster,4388,22,2024-03-15 17:24:24+00:00,[],https://api.github.com/licenses/apache-2.0
11329,https://github.com/zero-day-labs/riscv-aia.git,2023-04-07 13:20:15+00:00,AIA IP compliant with the RISC-V AIA spec,4,zero-day-labs/riscv-aia,624872557,SystemVerilog,riscv-aia,2865,20,2024-03-21 21:22:38+00:00,[],https://api.github.com/licenses/apache-2.0
11330,https://github.com/alibaba-damo-academy/damo_ctl_cham.git,2023-04-11 09:34:24+00:00,,5,alibaba-damo-academy/damo_ctl_cham,626347791,SystemVerilog,damo_ctl_cham,34271,18,2024-01-15 09:13:29+00:00,[],https://api.github.com/licenses/mit
11331,https://github.com/Aperture-Electronic/Realtime-Bicubic-16X-SuperResolution-IP.git,2023-03-09 22:44:15+00:00,"APV21B - Real-time Video 16X Bicubic Super-resolution IP, AXI4-Stream Video Interface Compatible, 4K 60FPS",5,Aperture-Electronic/Realtime-Bicubic-16X-SuperResolution-IP,611961393,SystemVerilog,Realtime-Bicubic-16X-SuperResolution-IP,16684,17,2024-03-15 03:04:06+00:00,"['bicubic', 'fpga', 'hardware-designs', 'ipcore', 'super-resolution', 'systemverilog', 'video-processing']",https://api.github.com/licenses/lgpl-2.1
11332,https://github.com/tastynoob/aura-core.git,2023-03-09 13:21:32+00:00,"""aura"" my super-scala O3 cpu core",0,tastynoob/aura-core,611750265,SystemVerilog,aura-core,8207,14,2024-02-24 06:19:27+00:00,[],https://api.github.com/licenses/gpl-3.0
11333,https://github.com/ep2k/epGB.git,2023-03-11 07:55:56+00:00,Game Boy / Game Boy Color emulator running on an FPGA,1,ep2k/epGB,612527471,SystemVerilog,epGB,9242,14,2024-01-06 00:48:42+00:00,[],https://api.github.com/licenses/gpl-3.0
11334,https://github.com/CASR-HKU/MSD-FCCM23.git,2023-03-01 06:40:39+00:00,Open-source of MSD framework,1,CASR-HKU/MSD-FCCM23,608022520,SystemVerilog,MSD-FCCM23,10042,13,2024-02-27 06:19:04+00:00,[],https://api.github.com/licenses/mit
11335,https://github.com/c7w/cod22-grp64.git,2023-03-11 09:55:30+00:00,>>> 异常中断 + 虚存页表 + 分支预测 + TLB + Cache + Flash + VGA + uCore,1,c7w/cod22-grp64,612556253,SystemVerilog,cod22-grp64,586,12,2024-03-30 19:53:13+00:00,[],
11336,https://github.com/svenka3/asfigo_sva_verilator.git,2023-03-30 04:50:37+00:00,Public repository to host our Checker IP written in SVA that is ported to run on open-source Verilator. ,7,svenka3/asfigo_sva_verilator,621149017,SystemVerilog,asfigo_sva_verilator,64,11,2023-11-10 08:32:17+00:00,[],https://api.github.com/licenses/gpl-3.0
11337,https://github.com/CASR-HKU/AGNA-FCCM2023.git,2023-02-28 02:21:49+00:00,,0,CASR-HKU/AGNA-FCCM2023,607459463,SystemVerilog,AGNA-FCCM2023,204,10,2024-02-27 06:22:20+00:00,[],https://api.github.com/licenses/mit
11338,https://github.com/ghz-ws/fpga_dsp.git,2023-02-23 10:48:59+00:00,DSP by FPGA,1,ghz-ws/fpga_dsp,605526532,SystemVerilog,fpga_dsp,1005,9,2024-03-04 04:26:43+00:00,[],https://api.github.com/licenses/mit
11339,https://github.com/serge0699/synth_school_verif_tasks.git,2023-03-18 00:43:42+00:00,,5,serge0699/synth_school_verif_tasks,615547779,SystemVerilog,synth_school_verif_tasks,157,9,2024-03-01 16:38:59+00:00,[],
11340,https://github.com/PeterMonsson/sv_waveterm.git,2023-03-06 11:22:24+00:00,,2,PeterMonsson/sv_waveterm,610237016,SystemVerilog,sv_waveterm,64,9,2024-03-14 05:19:26+00:00,[],https://api.github.com/licenses/apache-2.0
11341,https://github.com/SuperLiaoXH/LeNet-Verilog-Simulate-FP16.git,2023-02-17 10:26:52+00:00,目前在进行卷积神经网络的算子设计，该版本为基于LeNet网络的纯仿真版本,0,SuperLiaoXH/LeNet-Verilog-Simulate-FP16,602965847,SystemVerilog,LeNet-Verilog-Simulate-FP16,263,8,2023-11-05 13:31:51+00:00,[],https://api.github.com/licenses/apache-2.0
11342,https://github.com/shin-yamashita/6th-AI-Edge-Contest.git,2023-02-18 14:06:56+00:00,RTL implementation of TFlite FPGA accelerator and RISC-V controller. 3D Object Detection based on LiDAR Point Clouds.,2,shin-yamashita/6th-AI-Edge-Contest,603436762,SystemVerilog,6th-AI-Edge-Contest,114235,7,2024-04-01 09:24:44+00:00,[],https://api.github.com/licenses/apache-2.0
11343,https://github.com/KULeuven-MICAS/tinyvers.git,2023-03-21 11:14:58+00:00,"TinyVers Heterogeneous SoC consists of a reconfigurable FlexML accelerator, a RISC-V processor, an eMRAM and a power management system.",1,KULeuven-MICAS/tinyvers,616926525,SystemVerilog,tinyvers,12048,6,2024-04-12 02:27:33+00:00,[],
11344,https://github.com/zhang-stephen/ethernet_w5300.git,2023-04-01 09:48:55+00:00,"Wiznet w5300 driver code, powered by SystemVerilog",1,zhang-stephen/ethernet_w5300,622159232,SystemVerilog,ethernet_w5300,182,6,2024-02-12 10:38:52+00:00,"['fpga', 'hdl', 'socket', 'systemverilog', 'tcp', 'wiznet']",https://api.github.com/licenses/mit
11345,https://github.com/parsa-epfl/xsofs.git,2023-03-25 02:45:50+00:00,XiangShan over FireSim,0,parsa-epfl/xsofs,618676166,SystemVerilog,xsofs,119,6,2023-10-13 16:13:50+00:00,[],
11346,https://github.com/kalai-rajan/100DaysofRTL.git,2023-03-11 16:40:30+00:00,Collection of basic RTL Design and Verification Codes. ,1,kalai-rajan/100DaysofRTL,612674105,SystemVerilog,100DaysofRTL,1387,5,2023-10-02 16:02:51+00:00,[],
11347,https://github.com/samarth-py/AXI4-UVM-Verification-.git,2023-02-11 19:50:35+00:00,,0,samarth-py/AXI4-UVM-Verification-,600537117,SystemVerilog,AXI4-UVM-Verification-,52,5,2023-09-09 08:49:04+00:00,[],
11348,https://github.com/squared-studio/SystemVerilog.git,2023-02-23 04:00:07+00:00,SystemVerilog IP design & verification,0,squared-studio/SystemVerilog,605395757,SystemVerilog,SystemVerilog,922,5,2024-04-08 19:10:40+00:00,"['simulation', 'systemverilog']",https://api.github.com/licenses/apache-2.0
11349,https://github.com/MiSTeX-devel/Menu_MiSTeX.git,2023-02-14 08:02:10+00:00,menu bitstream for the FPGA,0,MiSTeX-devel/Menu_MiSTeX,601507184,SystemVerilog,Menu_MiSTeX,21633,5,2024-01-30 23:14:22+00:00,[],
11350,https://github.com/SuperLiaoXH/SystolicArray-1D-FP16.git,2023-02-22 07:03:10+00:00,基于FP16的一维脉动阵列设计,0,SuperLiaoXH/SystolicArray-1D-FP16,604972683,SystemVerilog,SystolicArray-1D-FP16,15,5,2023-03-27 05:03:02+00:00,[],https://api.github.com/licenses/apache-2.0
11351,https://github.com/StaRR-NIC/starrnic-public.git,2023-02-28 19:44:31+00:00,,0,StaRR-NIC/starrnic-public,607844820,SystemVerilog,starrnic-public,5904,5,2024-02-05 07:35:48+00:00,[],https://api.github.com/licenses/apache-2.0
11352,https://github.com/HaosenYu/ELEC6234_Coursework_picoMIPS_processor.git,2023-02-11 16:13:07+00:00,picoMIPS processor implementation,1,HaosenYu/ELEC6234_Coursework_picoMIPS_processor,600478801,SystemVerilog,ELEC6234_Coursework_picoMIPS_processor,2132,5,2024-04-08 14:49:57+00:00,[],https://api.github.com/licenses/gpl-3.0
11353,https://github.com/Kenta11/simple_uart.git,2023-03-13 12:55:55+00:00,Simple UART modules in SystemVerilog,0,Kenta11/simple_uart,613372808,SystemVerilog,simple_uart,14,4,2023-04-01 18:08:10+00:00,"['systemverilog', 'uart', 'xilinx']",https://api.github.com/licenses/mit
11354,https://github.com/DOUDIU/Vehicle-License-Plate-Recognition-on-FPGA.git,2023-03-13 05:16:40+00:00,,0,DOUDIU/Vehicle-License-Plate-Recognition-on-FPGA,613200367,SystemVerilog,Vehicle-License-Plate-Recognition-on-FPGA,92903,4,2024-04-06 15:50:13+00:00,"['fpga', 'plate-recognition']",
11355,https://github.com/seabeam/yuu_uvm_tb_gen_lite.git,2023-04-03 13:00:38+00:00,Lightweight common UVM TB generator,0,seabeam/yuu_uvm_tb_gen_lite,622978701,SystemVerilog,yuu_uvm_tb_gen_lite,18,4,2024-04-05 11:29:56+00:00,[],https://api.github.com/licenses/mit
11356,https://github.com/muzhiyun/Tang_9K_HDMI.git,2023-03-11 11:41:10+00:00,HDMI for Tang Nano 9K,0,muzhiyun/Tang_9K_HDMI,612584014,SystemVerilog,Tang_9K_HDMI,75,4,2024-01-26 04:55:10+00:00,"['sipeed-tang-nano-9k', 'tang-nano-9k']",
11357,https://github.com/opengateware-modules/video-framebuffer.git,2023-02-28 23:10:13+00:00,Video Framebuffer in SystemVerilog useful for IP cores that require screen rotation or standard timings for HDMI,2,opengateware-modules/video-framebuffer,607907146,SystemVerilog,video-framebuffer,72,4,2023-09-13 10:09:54+00:00,[],https://api.github.com/licenses/bsd-3-clause
11358,https://github.com/SuperLiaoXH/SystolicArray-2D-FP16.git,2023-02-23 07:02:03+00:00,基于FP16的二维脉动阵列电路设计,0,SuperLiaoXH/SystolicArray-2D-FP16,605446040,SystemVerilog,SystolicArray-2D-FP16,17,4,2023-03-27 05:02:59+00:00,[],https://api.github.com/licenses/apache-2.0
11359,https://github.com/tonyalfred/ALU-Verification-using-SystemVerilog.git,2023-03-03 16:05:33+00:00,"Build a SystemVerilog Environment for an ALU, using OOP testbench components as; stimulus generator, driver, monitor, scoreboard. ALU was verified using QuestaSim.",0,tonyalfred/ALU-Verification-using-SystemVerilog,609214770,SystemVerilog,ALU-Verification-using-SystemVerilog,8,4,2024-03-29 14:44:20+00:00,[],
11360,https://github.com/MasterPu2020/CycleComputerSoCSofteware.git,2023-03-08 10:24:17+00:00,Copyright reservations according to file comments,0,MasterPu2020/CycleComputerSoCSofteware,611198160,SystemVerilog,CycleComputerSoCSofteware,30099,4,2023-08-01 11:25:43+00:00,[],
11361,https://github.com/tom-urkin/I2C.git,2023-02-12 07:43:57+00:00,I2C controller and target modules in SystemVerilog. Simulation and experimental results of FPGA - DS3231 RTC I2C communication.,0,tom-urkin/I2C,600667527,SystemVerilog,I2C,7575,3,2023-04-28 05:22:01+00:00,[],
11362,https://github.com/Rohan-s18/CSDS-281.git,2023-02-24 23:36:49+00:00,Repository for CSDS 281 (Logic Design) for Case Western Reserve University,0,Rohan-s18/CSDS-281,606243396,SystemVerilog,CSDS-281,17,3,2023-03-30 17:49:38+00:00,[],https://api.github.com/licenses/mit
11363,https://github.com/ssayin/riscv32-cosim-model.git,2023-02-25 21:26:04+00:00,RISC-V processor co-simulation using SystemVerilog HDL and UVM.,0,ssayin/riscv32-cosim-model,606561962,SystemVerilog,riscv32-cosim-model,4561,3,2024-03-22 12:56:57+00:00,"['systemverilog-hdl', 'uvm-verification', 'riscv32']",https://api.github.com/licenses/apache-2.0
11364,https://github.com/helghast098/Sobel-Filter-FPGA.git,2023-03-18 23:57:46+00:00,,0,helghast098/Sobel-Filter-FPGA,615879244,SystemVerilog,Sobel-Filter-FPGA,82,3,2023-07-26 15:09:35+00:00,[],
11365,https://github.com/pulp-platform/mailbox_unit.git,2023-04-13 13:55:28+00:00,A simple parametrizable doorbell based mailbox,1,pulp-platform/mailbox_unit,627454017,SystemVerilog,mailbox_unit,513,3,2024-03-24 03:43:28+00:00,[],https://api.github.com/licenses/apache-2.0
11366,https://github.com/mohamedtareq24/My_Verification_work.git,2023-04-06 23:32:21+00:00,"A repo for my System Verilog testbenches with test benches for UART, I2C, SPI, FIFOs and Bus protocols like AMBA, AHB and WISHBONE",1,mohamedtareq24/My_Verification_work,624641253,SystemVerilog,My_Verification_work,15,3,2024-01-17 18:17:28+00:00,[],
11367,https://github.com/prithvi-narayan-bhat/Custom_RISC_Implementation.git,2023-02-09 00:49:07+00:00,An attempt at making a customised RISC processor with five pipelined stages and supporting all RISC-V instruction set,0,prithvi-narayan-bhat/Custom_RISC_Implementation,599355418,SystemVerilog,Custom_RISC_Implementation,76188,3,2024-04-02 02:05:24+00:00,"['arm', 'assembly', 'hdl', 'intel', 'linux', 'quartus-prime', 'risc-v', 'riscv', 'riscv32', 'systemverilog-hdl', 'verilog', 'verilog-hdl']",https://api.github.com/licenses/gpl-3.0
11368,https://github.com/feipenghhq/Verilog-Design-Example.git,2023-03-02 04:42:53+00:00,Writing my own Verilog code for the book <Advanced Chip Design Practical Examples in Verilog>,1,feipenghhq/Verilog-Design-Example,608472241,SystemVerilog,Verilog-Design-Example,2813,3,2024-01-25 01:44:26+00:00,[],https://api.github.com/licenses/mit
11369,https://github.com/anthonyarusso/systolic-array.git,2023-03-14 21:38:46+00:00,SystemVerilog module for matrix multiplication,0,anthonyarusso/systolic-array,614088001,SystemVerilog,systolic-array,37456,3,2023-11-27 12:35:12+00:00,"['pynq', 'systemverilog', 'systolic-arrays', 'verilog']",https://api.github.com/licenses/mit
11370,https://github.com/Vo1tis/comp_arch_t9.git,2023-03-12 18:59:04+00:00,"Αρχιτεκτονική Υπολογιστών - Ομάδα 9 / ΑΜ: 58200, 58274",0,Vo1tis/comp_arch_t9,613057058,SystemVerilog,comp_arch_t9,36,2,2023-04-05 17:50:00+00:00,[],
11371,https://github.com/YukunXue/Simple_RISC-V_5Stage.git,2023-04-03 12:45:10+00:00,简单的riscv五级流水线处理器，解决了常见的数据冒险和控制冒险,0,YukunXue/Simple_RISC-V_5Stage,622972105,SystemVerilog,Simple_RISC-V_5Stage,4952,2,2024-03-02 10:03:55+00:00,[],
11372,https://github.com/ssfaruqu/cse-225-final_proj.git,2023-03-18 23:29:47+00:00,,0,ssfaruqu/cse-225-final_proj,615874696,SystemVerilog,cse-225-final_proj,44,2,2024-03-18 22:05:50+00:00,[],https://api.github.com/licenses/bsd-3-clause
11373,https://github.com/kitune-san/LDST_Sequencer.git,2023-03-29 15:29:48+00:00,Microsequencer that requires a lot of LOAD/STORE instructions.,0,kitune-san/LDST_Sequencer,620897923,SystemVerilog,LDST_Sequencer,119,2,2023-10-12 12:12:46+00:00,"['cpu', 'fpga', 'sequencer', 'verilog', 'microsequencer']",https://api.github.com/licenses/mit
11374,https://github.com/va7deo/NextSpace.git,2023-03-13 15:28:41+00:00,,1,va7deo/NextSpace,613446279,SystemVerilog,NextSpace,10716,2,2023-04-01 11:04:30+00:00,[],https://api.github.com/licenses/gpl-2.0
11375,https://github.com/Chris-Du/EE552_NOC.git,2023-04-01 18:40:47+00:00,Final project NOC for EE552,0,Chris-Du/EE552_NOC,622315423,SystemVerilog,EE552_NOC,49917,2,2024-04-01 02:32:46+00:00,[],
11376,https://github.com/OFS/oneapi-asp.git,2023-02-16 21:52:18+00:00,Intel® oneAPI Accelerator Support Package (ASP),7,OFS/oneapi-asp,602755661,SystemVerilog,oneapi-asp,7650,2,2024-01-31 07:04:17+00:00,[],https://api.github.com/licenses/mit
11377,https://github.com/RoaLogic/apb4_uart16550.git,2023-02-28 23:06:14+00:00,16550 UART with APB4 Interface,1,RoaLogic/apb4_uart16550,607906101,SystemVerilog,apb4_uart16550,93,2,2023-12-15 23:09:40+00:00,[],https://api.github.com/licenses/bsd-2-clause
11378,https://github.com/ghz-ws/fpga_awg.git,2023-02-23 11:00:37+00:00,FPGA based AWG,2,ghz-ws/fpga_awg,605530919,SystemVerilog,fpga_awg,833,2,2024-02-16 11:24:29+00:00,[],https://api.github.com/licenses/mit
11379,https://github.com/Shashvat300/SystemVerilog.git,2023-04-12 17:35:47+00:00,,0,Shashvat300/SystemVerilog,627056527,SystemVerilog,SystemVerilog,175,2,2023-05-01 07:40:27+00:00,[],
11380,https://github.com/Francis-Nguyen/MEM_MMU_LIB.git,2023-02-20 02:34:28+00:00,Build an UVM library to manage all stimulus data which was transferred to SOC's memories,0,Francis-Nguyen/MEM_MMU_LIB,603953781,SystemVerilog,MEM_MMU_LIB,725,2,2023-03-14 02:22:59+00:00,[],
11381,https://github.com/federicorossifr/ppu.git,2023-03-31 06:16:03+00:00,Hardware implementation of Posit numbers,1,federicorossifr/ppu,621667843,SystemVerilog,ppu,5874,2,2024-04-08 08:40:57+00:00,['paper-code'],
11382,https://github.com/tom-urkin/FIR-filter.git,2023-02-27 12:02:44+00:00,SystemVerilog implementation of generalized FIR filter module and TB,0,tom-urkin/FIR-filter,607142622,SystemVerilog,FIR-filter,4023,2,2023-06-05 09:24:56+00:00,[],
11383,https://github.com/robotman2412/Axolotl-Risc-V.git,2023-03-21 22:04:07+00:00,An implementation of Risc-V and my first 32-bit processor.,0,robotman2412/Axolotl-Risc-V,617193709,SystemVerilog,Axolotl-Risc-V,18986,2,2023-12-06 01:32:45+00:00,[],
11384,https://github.com/t-ngtn/cpuex22-hardware.git,2023-02-25 02:46:47+00:00,FPGA implementation of processor for original ISA,0,t-ngtn/cpuex22-hardware,606280363,SystemVerilog,cpuex22-hardware,117,2,2024-02-20 12:57:22+00:00,[],
11385,https://github.com/AlonsoChate/EECS470_Final.git,2023-03-20 19:39:13+00:00,Synthesizable R10000 style 3-way super-scalar out-of-order processor based on subset of RISC-V ISA,0,AlonsoChate/EECS470_Final,616641748,SystemVerilog,EECS470_Final,1925,2,2024-04-05 08:22:28+00:00,[],
11386,https://github.com/nmasten/CPE-333-Final-Project.git,2023-03-12 00:29:47+00:00,Repository for CPE 333 Final Project,0,nmasten/CPE-333-Final-Project,612782750,SystemVerilog,CPE-333-Final-Project,75,2,2023-03-29 01:42:15+00:00,[],
11387,https://github.com/gcasa/NeXT_MiSTer.git,2023-03-29 21:18:17+00:00,This core is meant to implement a NeXTcube on the MiSTer FPGA platform,0,gcasa/NeXT_MiSTer,621030923,SystemVerilog,NeXT_MiSTer,6742,2,2023-08-01 00:11:02+00:00,[],https://api.github.com/licenses/gpl-2.0
11388,https://github.com/Youssefmdany/UART.git,2023-03-27 16:59:36+00:00,,0,Youssefmdany/UART,619914293,SystemVerilog,UART,4501,2,2023-09-16 09:21:19+00:00,[],
11389,https://github.com/abdullah8a0/one-chan.git,2023-02-09 17:20:11+00:00,An FPGA-based Chess Engine and TPU,0,abdullah8a0/one-chan,599691868,SystemVerilog,one-chan,143492,2,2024-01-27 19:28:39+00:00,"['chess-engine', 'fpga', 'system-verilog', 'tpu']",
11390,https://github.com/ryuz/jellyvl.git,2023-03-04 11:18:10+00:00,veryl を試してみる,1,ryuz/jellyvl,609500629,SystemVerilog,jellyvl,479,2,2023-08-24 08:51:08+00:00,[],
11391,https://github.com/vani2620/Custom-CPU.git,2023-04-11 03:31:45+00:00,Notes and SystemVerilog code for custom CPU,0,vani2620/Custom-CPU,626224951,SystemVerilog,Custom-CPU,9615,2,2023-04-29 12:50:37+00:00,[],https://api.github.com/licenses/gpl-3.0
11392,https://github.com/kaizerbrian7/Verilog_testbench_memory_module.git,2023-04-08 07:27:27+00:00,Verilog testbench for a memory module,0,kaizerbrian7/Verilog_testbench_memory_module,625140636,SystemVerilog,Verilog_testbench_memory_module,3,1,2023-04-08 07:35:50+00:00,[],
11393,https://github.com/AhmedOsama2000/UVM_Environment.git,2023-02-20 14:52:41+00:00,,0,AhmedOsama2000/UVM_Environment,604202386,SystemVerilog,UVM_Environment,11,1,2023-02-23 09:39:08+00:00,[],
11394,https://github.com/kiiisy/MatrixLed.git,2023-03-25 06:57:08+00:00,,0,kiiisy/MatrixLed,618726348,SystemVerilog,MatrixLed,10,1,2023-12-18 13:20:19+00:00,[],https://api.github.com/licenses/mit
11395,https://github.com/ZhaochenZhu/CSE-141L.git,2023-02-25 18:51:10+00:00,,1,ZhaochenZhu/CSE-141L,606525473,SystemVerilog,CSE-141L,133,1,2023-05-08 21:38:52+00:00,[],
11396,https://github.com/amkamir82/Computer-Architecture-Project.git,2023-04-14 23:48:16+00:00,,0,amkamir82/Computer-Architecture-Project,628106114,SystemVerilog,Computer-Architecture-Project,992,1,2024-04-01 12:47:56+00:00,[],
11397,https://github.com/zhaoguangzai/remote_update.git,2023-03-14 08:53:14+00:00,FPGA update software,0,zhaoguangzai/remote_update,613777243,SystemVerilog,remote_update,1156,1,2023-06-08 09:24:42+00:00,[],
11398,https://github.com/brsf11/AHB_Lite_Matrix.git,2023-03-30 02:11:22+00:00,,0,brsf11/AHB_Lite_Matrix,621105930,SystemVerilog,AHB_Lite_Matrix,16,1,2023-11-09 09:00:42+00:00,[],
11399,https://github.com/davidel/v_fplib.git,2023-03-05 17:46:11+00:00,Verilog FPU Library,0,davidel/v_fplib,609945050,SystemVerilog,v_fplib,9,1,2023-05-02 07:10:31+00:00,[],
11400,https://github.com/Suriya2882002/System-Verilog.git,2023-02-20 17:54:27+00:00,,0,Suriya2882002/System-Verilog,604275579,SystemVerilog,System-Verilog,157,1,2023-03-14 13:10:08+00:00,[],
11401,https://github.com/Ahmed0100/logic_analyzer_vga_fpga_v1_0.git,2023-02-12 10:10:24+00:00,logic_analyzer_vga_fpga_v1_0,0,Ahmed0100/logic_analyzer_vga_fpga_v1_0,600699890,SystemVerilog,logic_analyzer_vga_fpga_v1_0,9,1,2023-12-19 07:42:08+00:00,[],
11402,https://github.com/Grant-Liu-2001/FPGA_FOC.git,2023-03-28 11:26:04+00:00,基于FPGA的FOC电调,0,Grant-Liu-2001/FPGA_FOC,620277886,SystemVerilog,FPGA_FOC,4367,1,2023-12-30 04:04:35+00:00,[],
11403,https://github.com/saswat711/RTL-Designs-and-Testbenches.git,2023-04-02 11:32:12+00:00,In this repo I have design and wrote testbenches for some of the common elements in a digital circuits for a microprocessor,0,saswat711/RTL-Designs-and-Testbenches,622525368,SystemVerilog,RTL-Designs-and-Testbenches,30,1,2023-04-02 17:02:14+00:00,[],
11404,https://github.com/elvisfox/dspba_stft.git,2023-03-25 00:41:28+00:00,,0,elvisfox/dspba_stft,618653598,SystemVerilog,dspba_stft,2332,1,2023-05-14 19:17:43+00:00,[],
11405,https://github.com/xianwen123/AHBRAM.git,2023-02-15 08:25:14+00:00,,0,xianwen123/AHBRAM,601975202,SystemVerilog,AHBRAM,27,1,2023-03-24 14:47:00+00:00,[],
11406,https://github.com/Teintetu/systemverilog-exercise.git,2023-03-18 10:03:21+00:00,systemverilog-exercise,0,Teintetu/systemverilog-exercise,615662014,SystemVerilog,systemverilog-exercise,26,1,2023-03-28 02:46:48+00:00,[],
11407,https://github.com/yz-gu/EE552_Project.git,2023-04-03 21:04:01+00:00,,1,yz-gu/EE552_Project,623174079,SystemVerilog,EE552_Project,43,1,2024-02-26 03:12:29+00:00,[],
11408,https://github.com/Nameer-Iqbal-Ansari/UVM-OOP_work.git,2023-04-16 18:51:24+00:00,This repositroy contains design and UVM based verification codes. All the projects related to harware designing and verification done by myself with the online freelance community and other then freelance community as well.,0,Nameer-Iqbal-Ansari/UVM-OOP_work,628700561,SystemVerilog,UVM-OOP_work,8,1,2023-06-03 09:10:44+00:00,[],
11409,https://github.com/semify-eda/tristan.git,2023-04-03 12:38:31+00:00,,0,semify-eda/tristan,622969346,SystemVerilog,tristan,25589,1,2024-03-05 12:55:21+00:00,[],
11410,https://github.com/bbbjason/Laser-Treatment.git,2023-04-06 08:32:28+00:00,,0,bbbjason/Laser-Treatment,624332600,SystemVerilog,Laser-Treatment,593,1,2024-03-22 03:32:18+00:00,[],
11411,https://github.com/everactive/svmetadata.git,2023-04-12 18:37:18+00:00,SystemVerilog Utilities for adding and managing metadata in classes and blocks.,1,everactive/svmetadata,627080289,SystemVerilog,svmetadata,28,1,2023-04-25 19:42:00+00:00,[],https://api.github.com/licenses/mit
11412,https://github.com/tuna5309/Verification-of-8x1-mux-with-uvm.git,2023-04-01 11:20:12+00:00,,0,tuna5309/Verification-of-8x1-mux-with-uvm,622183409,SystemVerilog,Verification-of-8x1-mux-with-uvm,5,1,2023-04-21 04:19:59+00:00,[],
11413,https://github.com/Hayatlodhi/System-Verilog.git,2023-02-19 16:30:38+00:00,,0,Hayatlodhi/System-Verilog,603809265,SystemVerilog,System-Verilog,43,1,2023-02-27 16:25:22+00:00,[],
11414,https://github.com/spacebiz24/SystemVerilog-Basics.git,2023-03-03 18:11:52+00:00,,0,spacebiz24/SystemVerilog-Basics,609264052,SystemVerilog,SystemVerilog-Basics,61,1,2023-03-14 07:30:07+00:00,[],
11415,https://github.com/everactive/bathtub.git,2023-04-12 18:27:54+00:00,"BDD Gherkin implementation in native SystemVerilog, based on UVM.",1,everactive/bathtub,627076589,SystemVerilog,bathtub,36,1,2023-04-25 19:43:40+00:00,[],https://api.github.com/licenses/mit
11416,https://github.com/alexPhimanesone/Graphics-Controller-for-FPGA-DE10-Nano.git,2023-02-15 17:56:28+00:00,,0,alexPhimanesone/Graphics-Controller-for-FPGA-DE10-Nano,602201035,SystemVerilog,Graphics-Controller-for-FPGA-DE10-Nano,8702,1,2023-02-15 18:25:30+00:00,[],
11417,https://github.com/zongqing0068/digital-logic.git,2023-02-25 11:25:25+00:00,My digital logic experiment. (hitsz2021 数字逻辑实验),0,zongqing0068/digital-logic,606399245,SystemVerilog,digital-logic,8823,1,2023-04-08 07:10:53+00:00,[],
11418,https://github.com/mddanish05/Verilog.git,2023-02-15 18:19:07+00:00,,0,mddanish05/Verilog,602210146,SystemVerilog,Verilog,205,1,2023-05-16 17:53:45+00:00,[],
11419,https://github.com/canhduc01/wb2apb.git,2023-03-28 09:35:28+00:00,Wishbone to APB bridge ,0,canhduc01/wb2apb,620234029,SystemVerilog,wb2apb,3331,1,2023-05-26 15:12:20+00:00,[],
11420,https://github.com/everactive/volatile-regs.git,2023-04-12 18:41:54+00:00,SystemVerilog volatile-regs,1,everactive/volatile-regs,627081951,SystemVerilog,volatile-regs,52,1,2023-04-25 19:43:31+00:00,[],https://api.github.com/licenses/mit
11421,https://github.com/2023-Spring-ECE4278/lab1.git,2023-03-07 09:03:46+00:00,,0,2023-Spring-ECE4278/lab1,610678274,SystemVerilog,lab1,2,1,2023-03-27 03:58:00+00:00,[],
11422,https://github.com/incolore-team/corewave.git,2023-03-19 12:30:37+00:00,,2,incolore-team/corewave,616034067,SystemVerilog,corewave,2834,1,2023-07-06 13:39:24+00:00,[],
11423,https://github.com/0xArt/Passe_Passe_Network_Switch.git,2023-04-13 06:34:53+00:00,A FPGA layer 2 network switch with the unique ability of having virtual ports that can transmit and receive UDP data.,1,0xArt/Passe_Passe_Network_Switch,627282413,SystemVerilog,Passe_Passe_Network_Switch,451,1,2024-03-08 10:15:41+00:00,"['ethernet', 'fpga', 'network', 'rgmii', 'rmii', 'switch', 'udp', 'layer-2']",https://api.github.com/licenses/mit
11424,https://github.com/pradoom/AHBtoABP_bridge.git,2023-03-15 08:36:33+00:00,,0,pradoom/AHBtoABP_bridge,614265598,SystemVerilog,AHBtoABP_bridge,5009,1,2023-03-15 08:42:12+00:00,[],
11425,https://github.com/tms4517/RISC-V_DDCA.git,2023-02-28 08:21:53+00:00,A RISC-V processor implementation.,1,tms4517/RISC-V_DDCA,607564611,SystemVerilog,RISC-V_DDCA,731,1,2023-08-25 13:55:45+00:00,[],
11426,https://github.com/du6293/single_cycle_processor_systemverilog.git,2023-04-10 09:34:39+00:00,RISC-V single-cycle-processor with system verilog,0,du6293/single_cycle_processor_systemverilog,625870274,SystemVerilog,single_cycle_processor_systemverilog,53,1,2024-03-21 14:15:19+00:00,[],
11427,https://github.com/dineshannayya/qspis.git,2023-02-11 06:34:57+00:00,"Single,Dual and Quad SPI Slave",1,dineshannayya/qspis,600331354,SystemVerilog,qspis,14,1,2023-04-02 03:53:20+00:00,[],https://api.github.com/licenses/apache-2.0
11428,https://github.com/ayandeephazra/ECE554_GroupProject.git,2023-03-01 00:42:55+00:00,Complex ISA with Branch Predictor and VGA capabilities. Features a custom game that is optimized by branch prediction unit.,0,ayandeephazra/ECE554_GroupProject,607929436,SystemVerilog,ECE554_GroupProject,171427,1,2023-10-22 01:45:58+00:00,"['asm', 'branch', 'capstone', 'design', 'dynamic', 'game', 'ieee', 'indie', 'prediction', 'predictor', 'smith', 'target', 'ece554']",https://api.github.com/licenses/mit
11429,https://github.com/Teintetu/sv_asynchronous_fifo.git,2023-03-28 09:51:12+00:00,,0,Teintetu/sv_asynchronous_fifo,620240434,SystemVerilog,sv_asynchronous_fifo,11,1,2023-03-28 10:36:39+00:00,[],
11430,https://github.com/kankshikomre/Traffic-Light-Controller.git,2023-03-28 18:18:35+00:00,"Using System Verilog FSM Coding, design a Traffic Light Controller, and verify the design with a test bench",0,kankshikomre/Traffic-Light-Controller,620461306,SystemVerilog,Traffic-Light-Controller,19,1,2023-08-15 04:50:13+00:00,[],
11431,https://github.com/theophile-gousselot/cv32e40p_rtl.git,2023-03-21 14:45:56+00:00,cv32e40p RTL description: each branch is a version of a protected cv32e40p core ,0,theophile-gousselot/cv32e40p_rtl,617020773,SystemVerilog,cv32e40p_rtl,1007,1,2023-04-20 15:58:40+00:00,[],
11432,https://github.com/scarv/eliminate.git,2023-03-16 11:38:30+00:00,eLIMInate: a Leakage-aware ISE for Masked Implementation,1,scarv/eliminate,614818058,SystemVerilog,eliminate,301,1,2023-06-24 20:20:07+00:00,[],https://api.github.com/licenses/apache-2.0
11433,https://github.com/BakrN/SIMDMultiproc.git,2023-02-21 10:50:20+00:00,,0,BakrN/SIMDMultiproc,604573193,SystemVerilog,SIMDMultiproc,700,1,2023-02-26 20:58:28+00:00,[],
11434,https://github.com/munim-sah75/Design-and-Simulation-of-a-32-bit-RISC-V-Core-and-APB.git,2023-04-13 09:24:00+00:00,A 32 Bit RISCV Core with APB protocol for data transfer written with SystemVerilog and verilog.,3,munim-sah75/Design-and-Simulation-of-a-32-bit-RISC-V-Core-and-APB,627347202,SystemVerilog,Design-and-Simulation-of-a-32-bit-RISC-V-Core-and-APB,3404,1,2023-08-24 06:23:29+00:00,[],
11435,https://github.com/taichi-ishitani/bch.git,2023-02-25 14:01:16+00:00,,0,taichi-ishitani/bch,606441088,SystemVerilog,bch,182,1,2023-02-26 04:29:59+00:00,[],https://api.github.com/licenses/apache-2.0
11436,https://github.com/mohamedibrahem399/HMC_Controller_Verification.git,2023-02-28 19:40:21+00:00,"This is our graduation project, which talks about making verification for a HMC ( Hybrid Memory Cube) Controller.",3,mohamedibrahem399/HMC_Controller_Verification,607843337,SystemVerilog,HMC_Controller_Verification,12280,1,2023-07-13 21:21:16+00:00,[],
11437,https://github.com/ahmedatef935/Mips-Verification-SystemVerilog.git,2023-03-18 13:33:24+00:00,,0,ahmedatef935/Mips-Verification-SystemVerilog,615718494,SystemVerilog,Mips-Verification-SystemVerilog,9,1,2024-03-05 07:59:58+00:00,[],
11438,https://github.com/ghz-ws/fpga_receiver.git,2023-03-18 09:53:42+00:00,FPGA based Receiver,1,ghz-ws/fpga_receiver,615659462,SystemVerilog,fpga_receiver,65,1,2023-03-19 08:03:06+00:00,[],https://api.github.com/licenses/mit
11440,https://github.com/ahmedatef935/AES-Verification-SystemVerilog.git,2023-03-18 13:09:06+00:00,,0,ahmedatef935/AES-Verification-SystemVerilog,615711519,SystemVerilog,AES-Verification-SystemVerilog,11,1,2024-01-22 11:10:45+00:00,[],
11441,https://github.com/MuhammadHuzaifa-stu/RISCV-Signle-Cycle-Processor.git,2023-03-23 07:18:42+00:00,Complete RISCV single cycle processor.,0,MuhammadHuzaifa-stu/RISCV-Signle-Cycle-Processor,617821128,SystemVerilog,RISCV-Signle-Cycle-Processor,922,1,2023-04-03 17:07:03+00:00,[],
11442,https://github.com/DOUDIU/AVS3-RDOQ.git,2023-03-07 11:19:19+00:00,,0,DOUDIU/AVS3-RDOQ,610731648,SystemVerilog,AVS3-RDOQ,37028,1,2024-01-30 13:54:09+00:00,[],
11443,https://github.com/danook/cpuex2022-group7-core-public.git,2023-03-07 12:11:19+00:00,"Core, FPU and memory for cpuex 2022 group 7 (public version)",0,danook/cpuex2022-group7-core-public,610751804,SystemVerilog,cpuex2022-group7-core-public,393,1,2024-02-18 22:38:25+00:00,[],
11444,https://github.com/mbcruz96/Cache.git,2023-03-04 19:42:20+00:00,,0,mbcruz96/Cache,609640917,SystemVerilog,Cache,12664,1,2023-05-02 19:45:55+00:00,[],
11445,https://github.com/RickFerreira/EstudosProjetoDeSistemasDigitais.git,2023-03-03 14:31:40+00:00,"Armazeno aqui todos os projetos feitos por mim, juntamente com Patricia Santos, durante a cadeira de Projeto de Sistemas Digitais. Os códigos são feitos para descrição de hardware e testes no FPGA, usando a linguagem SystemVerilog. ",0,RickFerreira/EstudosProjetoDeSistemasDigitais,609173745,SystemVerilog,EstudosProjetoDeSistemasDigitais,36,1,2023-04-02 00:33:19+00:00,[],
11446,https://github.com/tonyalfred/Memory-Verification-using-UVM.git,2023-03-03 16:08:08+00:00,"Build a UVM Environment for an parametrized memory module, including uvm testbench architecture components such as; sequencer, driver, monitor, scoreboard and subscriber. design was verified using QuestaSim.",0,tonyalfred/Memory-Verification-using-UVM,609215887,SystemVerilog,Memory-Verification-using-UVM,10,1,2023-05-04 04:10:22+00:00,[],
11447,https://github.com/ingridjackeline/roteiros-loac.git,2023-03-03 03:44:13+00:00,Roteiros realizados na disciplina Laboratório de Organização e Arquitetura de Computadores.,0,ingridjackeline/roteiros-loac,608949720,SystemVerilog,roteiros-loac,5,1,2023-03-03 04:10:19+00:00,[],
11448,https://github.com/sanket1109/ALPHA-21264-Branch-Predictor-using-System-Verilog.git,2023-04-08 22:19:59+00:00,,0,sanket1109/ALPHA-21264-Branch-Predictor-using-System-Verilog,625366392,SystemVerilog,ALPHA-21264-Branch-Predictor-using-System-Verilog,159,1,2023-04-16 02:35:26+00:00,[],
11449,https://github.com/Marcotronics/100daysofRTL.git,2023-02-23 20:24:11+00:00,Inspired by the #100daysofrtl challenge and @raulbehl to learn SystemVerilog by coding a module every day and improve my design and verification skills.,0,Marcotronics/100daysofRTL,605749421,SystemVerilog,100daysofRTL,1509,1,2023-03-30 08:37:58+00:00,[],
11450,https://github.com/Dieg0C0rd0v4/SPU-Project.git,2023-03-12 01:49:47+00:00,An SPU Project for Computer Architecture,0,Dieg0C0rd0v4/SPU-Project,612795810,SystemVerilog,SPU-Project,4184,1,2023-06-30 15:08:42+00:00,[],
11451,https://github.com/geitanksha/rubiks-cube-simulator.git,2023-03-24 18:46:52+00:00,"Designed and implemented a 3x3 Rubik's Cube Simulator on an FPGA and associated NIOS-II Microcontroller as a System-on-Chip. Skills Employed: SystemVerilog, FPGA development, NIOS-II, SoC, USB Protocol.",0,geitanksha/rubiks-cube-simulator,618565649,SystemVerilog,rubiks-cube-simulator,1500,1,2024-01-13 10:51:09+00:00,"['fpga', 'fpga-soc', 'systemverilog']",
11452,https://github.com/juinchuen/RayTracer.git,2023-04-05 18:32:27+00:00,Ray tracing on an FPGA,0,juinchuen/RayTracer,624097153,SystemVerilog,RayTracer,99070,1,2023-06-01 03:38:38+00:00,[],
11453,https://github.com/Teimir/FPGAClock.git,2023-03-23 20:23:18+00:00,,0,Teimir/FPGAClock,618132215,SystemVerilog,FPGAClock,3341,1,2023-05-19 09:41:31+00:00,[],
11454,https://github.com/chetha123/constraints_systemverilog.git,2023-03-21 13:39:37+00:00,,0,chetha123/constraints_systemverilog,616989591,SystemVerilog,constraints_systemverilog,41,1,2023-09-13 12:48:09+00:00,[],
11455,https://github.com/MasterPlayer/axis_register.git,2023-02-21 08:32:51+00:00,axi-stream output register for alternative output fifo,0,MasterPlayer/axis_register,604521480,SystemVerilog,axis_register,3,1,2023-11-16 06:25:17+00:00,[],https://api.github.com/licenses/mit
11456,https://github.com/Salinerojj/cpu.git,2023-02-28 17:28:52+00:00,,0,Salinerojj/cpu,607793087,SystemVerilog,cpu,0,1,2023-11-24 12:51:44+00:00,[],
11457,https://github.com/KaushikVempati/Inter-Integrated-CirCuit-I2C-.git,2023-04-04 10:48:30+00:00,"I2C protocol is a serial communication protocol that is used to connect low-speed devices. For example, EEPROMs, microcontrollers, A/D and D/A converters, and input/output interfaces.",0,KaushikVempati/Inter-Integrated-CirCuit-I2C-,623424181,SystemVerilog,Inter-Integrated-CirCuit-I2C-,11,1,2023-05-23 06:52:32+00:00,[],
11458,https://github.com/nilaydesai13/APB_UVM.git,2023-04-14 18:14:45+00:00,,0,nilaydesai13/APB_UVM,628021863,SystemVerilog,APB_UVM,10,1,2024-02-21 07:16:40+00:00,[],
11459,https://github.com/mauriya0202/BFloat16.git,2023-03-28 12:16:19+00:00,,0,mauriya0202/BFloat16,620299744,SystemVerilog,BFloat16,42,1,2024-03-25 05:09:52+00:00,[],
11460,https://github.com/gabogh123/ggonzalez_rsalas_lpmorales_tdd_1_2023.git,2023-03-09 15:59:59+00:00,Repositorio del curso taller de diseño digital ,0,gabogh123/ggonzalez_rsalas_lpmorales_tdd_1_2023,611819922,SystemVerilog,ggonzalez_rsalas_lpmorales_tdd_1_2023,2042,1,2023-04-14 23:48:43+00:00,[],
11461,https://github.com/milanlazic97/Communication-protocol.git,2023-03-23 02:53:11+00:00,Verification of I2C,0,milanlazic97/Communication-protocol,617749497,SystemVerilog,Communication-protocol,5,1,2023-05-23 06:55:01+00:00,[],
11462,https://github.com/gmejiamtz/spaceinvaders.git,2023-02-28 23:21:26+00:00,Space Invaders implementation on iCEBreaker FPGA development board,1,gmejiamtz/spaceinvaders,607909845,SystemVerilog,spaceinvaders,102,1,2023-03-22 00:20:16+00:00,[],https://api.github.com/licenses/mit
11463,https://github.com/aedancullen/vlsi-cordic.git,2023-02-22 23:13:52+00:00,"Fixed-point CORDIC core in Verilog, with synthesis, PnR, and simulation",0,aedancullen/vlsi-cordic,605323803,SystemVerilog,vlsi-cordic,13422,1,2024-02-13 13:29:38+00:00,[],
11464,https://github.com/amankv22/aes.git,2023-02-25 18:57:31+00:00,Formal verification of Advanced Encryption Standard (AES),0,amankv22/aes,606527031,SystemVerilog,aes,1808,1,2024-01-22 11:12:33+00:00,[],
11465,https://github.com/mohamedElbouazzati/CV32E40P-Diwall.git,2023-02-27 15:13:49+00:00,,0,mohamedElbouazzati/CV32E40P-Diwall,607225388,SystemVerilog,CV32E40P-Diwall,5912,1,2023-12-23 14:26:37+00:00,[],
11466,https://github.com/erwanregy/Neural-Network-on-an-FPGA.git,2023-02-18 17:52:34+00:00,"Fully connected dense neural network in SystemVerilog, synthesisable to an FPGA for neural network computation acceleration",0,erwanregy/Neural-Network-on-an-FPGA,603501805,SystemVerilog,Neural-Network-on-an-FPGA,3247,1,2024-04-07 15:38:53+00:00,"['fpga', 'neural-network', 'rtl', 'vivado', 'xilinx', 'zynq-7000']",https://api.github.com/licenses/apache-2.0
11467,https://github.com/mmzeynalli/RISC-V.git,2023-03-30 21:59:15+00:00,A simple 32-bit 5-stage RISC-V processor in SystemVerilog based on the book Computer Organization and Design by Patterson & Hennesy. Inspired by https://github.com/masoud-ata/PH-RISC-V,0,mmzeynalli/RISC-V,621543089,SystemVerilog,RISC-V,363,1,2023-11-12 11:31:16+00:00,[],https://api.github.com/licenses/mit
11468,https://github.com/pt10160/EE271-digital-circuit-and-system.git,2023-03-29 05:52:26+00:00,Star it if it helps,0,pt10160/EE271-digital-circuit-and-system,620658621,SystemVerilog,EE271-digital-circuit-and-system,50708,1,2023-07-28 03:03:13+00:00,[],
11469,https://github.com/seabeam/yuu_int.git,2023-04-09 10:35:23+00:00,UVM interrupt VIP,0,seabeam/yuu_int,625509255,SystemVerilog,yuu_int,5,1,2023-06-03 14:17:23+00:00,[],https://api.github.com/licenses/mit
11470,https://github.com/satiwari26/OTTER.git,2023-03-04 07:25:24+00:00,"This repository contains the source code and implementation files for a 50 mega hertz processor designed using system Verilog. The code has been programmed onto the Basys 3 board, allowing for physical testing and verification of the processor's functionality.",0,satiwari26/OTTER,609444256,SystemVerilog,OTTER,1264,1,2024-03-20 02:53:57+00:00,[],
11471,https://github.com/fpgasystems/loadbalancer.git,2023-03-24 21:05:06+00:00,,0,fpgasystems/loadbalancer,618606674,SystemVerilog,loadbalancer,638,1,2024-04-02 01:01:41+00:00,[],
11472,https://github.com/Gharbaoui/single-cycle-cpu.git,2023-02-15 15:42:27+00:00,,0,Gharbaoui/single-cycle-cpu,602147647,SystemVerilog,single-cycle-cpu,313,1,2023-02-15 16:33:26+00:00,[],
11473,https://github.com/nikaemami/Latches-and-Flip-Flops.git,2023-02-10 07:42:09+00:00,"Generating basic D-Latch, SR-Latch, and flip-flops in SystemVerilog",0,nikaemami/Latches-and-Flip-Flops,599931660,SystemVerilog,Latches-and-Flip-Flops,11,1,2023-06-27 10:58:44+00:00,[],
11474,https://github.com/kirolossedra/Pipelined-MIPS-UVM-Based-Verification.git,2023-02-25 15:46:46+00:00,,0,kirolossedra/Pipelined-MIPS-UVM-Based-Verification,606472646,SystemVerilog,Pipelined-MIPS-UVM-Based-Verification,6,1,2023-09-09 09:06:01+00:00,[],
11475,https://github.com/XiangYuZhou0204/APB-I2C-brige-Verication.git,2023-03-24 09:00:01+00:00,,0,XiangYuZhou0204/APB-I2C-brige-Verication,618339017,SystemVerilog,APB-I2C-brige-Verication,2534,1,2023-08-03 08:05:40+00:00,[],
11476,https://github.com/gblecke/Basys_3_Snake_Game.git,2023-04-06 20:02:49+00:00,This collection of files is a vivado project that operates a snake game using a VGA connection to a monitor.,0,gblecke/Basys_3_Snake_Game,624587259,SystemVerilog,Basys_3_Snake_Game,4676,1,2023-10-20 14:18:04+00:00,[],
11477,https://github.com/ourspalois/PinAIpple.git,2023-03-27 14:45:43+00:00,A system integration of a static low power accelerator of bayesian machines (based on IBEX/lowriscv),0,ourspalois/PinAIpple,619852484,SystemVerilog,PinAIpple,377,1,2023-11-06 16:00:06+00:00,[],
11478,https://github.com/deepakmk7835/uvm_projects.git,2023-03-01 06:55:01+00:00,Repo that contains all the code related to UVM,0,deepakmk7835/uvm_projects,608027071,SystemVerilog,uvm_projects,22,1,2023-03-07 10:59:07+00:00,[],
11479,https://github.com/panszm/AGH_MTM_UEC2.git,2023-03-02 18:23:24+00:00,University course exercises and project,0,panszm/AGH_MTM_UEC2,608784980,SystemVerilog,AGH_MTM_UEC2,17475,1,2023-09-01 20:23:19+00:00,[],
11480,https://github.com/MuhammadHuzaifa-stu/UART.git,2023-03-06 18:12:57+00:00,This time I'm trying to implement UART frame/transmitter by using system verilog.,0,MuhammadHuzaifa-stu/UART,610412741,SystemVerilog,UART,753,1,2023-03-06 18:17:24+00:00,[],
11481,https://github.com/vishwajeet-sinh/Verification-of-Vending-Machine.git,2023-03-04 22:01:26+00:00,Verification of Vending Machien,0,vishwajeet-sinh/Verification-of-Vending-Machine,609671723,SystemVerilog,Verification-of-Vending-Machine,106,1,2024-03-09 14:59:00+00:00,[],
11483,https://github.com/Nischalm1996/NJP_lab1_632.git,2023-02-14 21:27:29+00:00,repository to burn TRNG into an ALtera and measure various parameters,0,Nischalm1996/NJP_lab1_632,601806098,SystemVerilog,NJP_lab1_632,15188,0,2023-02-22 22:01:16+00:00,[],
11484,https://github.com/alexnullrefex/ECE385_coursework.git,2023-02-16 23:54:55+00:00,,0,alexnullrefex/ECE385_coursework,602785926,SystemVerilog,ECE385_coursework,22,0,2023-02-16 23:55:38+00:00,[],https://api.github.com/licenses/gpl-3.0
11485,https://github.com/LeeRaeIk/hyundai_portfolio.git,2023-02-17 07:30:09+00:00,,0,LeeRaeIk/hyundai_portfolio,602903677,SystemVerilog,hyundai_portfolio,103093,0,2023-02-17 07:32:58+00:00,[],
11486,https://github.com/Diegs18/525_lab4.git,2023-04-07 13:44:50+00:00,,0,Diegs18/525_lab4,624881054,SystemVerilog,525_lab4,5755,0,2023-04-15 23:31:08+00:00,[],
11487,https://github.com/Jabiwockeez/Projects-Done.git,2023-04-12 10:03:15+00:00,These are some of the projects that I have accomplished in school.,0,Jabiwockeez/Projects-Done,626863234,SystemVerilog,Projects-Done,6413,0,2023-04-12 10:19:13+00:00,[],
11488,https://github.com/Risc-V-ers/yo.git,2023-04-12 21:32:40+00:00,,0,Risc-V-ers/yo,627138067,SystemVerilog,yo,1,0,2023-05-18 17:10:19+00:00,[],
11489,https://github.com/nikhil123123/Verification-of-64-16_Synchronous_FIFO.git,2023-04-15 19:17:58+00:00,,0,nikhil123123/Verification-of-64-16_Synchronous_FIFO,628382474,SystemVerilog,Verification-of-64-16_Synchronous_FIFO,3,0,2023-04-19 11:06:26+00:00,[],
11490,https://github.com/srilven/svfinal_risc.git,2023-03-21 17:43:33+00:00,,0,srilven/svfinal_risc,617099915,SystemVerilog,svfinal_risc,2256,0,2023-03-25 06:20:02+00:00,[],
11491,https://github.com/sleepy-h/parametric_de_serial.git,2023-03-26 13:47:31+00:00,,0,sleepy-h/parametric_de_serial,619174603,SystemVerilog,parametric_de_serial,4,0,2023-03-26 15:00:38+00:00,[],
11492,https://github.com/sangwookim98/ece385_FinalProject.git,2023-03-24 05:58:30+00:00,Final Project of recreating Metal Gear from 1987 using SystemVerilog,0,sangwookim98/ece385_FinalProject,618278827,SystemVerilog,ece385_FinalProject,21716,0,2023-03-24 06:05:53+00:00,[],
11493,https://github.com/ZiChengHuang915/MIPS.git,2023-03-21 14:45:32+00:00,MIPS implementations in Verilog with different features,0,ZiChengHuang915/MIPS,617020554,SystemVerilog,MIPS,3154,0,2023-03-21 15:04:53+00:00,[],
11494,https://github.com/WanShuan/Digital-IC-Design_Final-Project.git,2023-03-21 14:11:26+00:00,,0,WanShuan/Digital-IC-Design_Final-Project,617004422,SystemVerilog,Digital-IC-Design_Final-Project,270,0,2023-03-21 14:12:33+00:00,[],
11495,https://github.com/ZayaV/DigitalDesignSchool.git,2023-03-30 17:16:01+00:00,,0,ZayaV/DigitalDesignSchool,621445354,SystemVerilog,DigitalDesignSchool,21782,0,2023-03-30 17:28:29+00:00,[],
11496,https://github.com/Fearse/Pipeline-processor-core.git,2023-03-30 19:32:57+00:00,Конвейерное процессорное ядро. Гарвардская архитектура. Арифметическая прогрессия,0,Fearse/Pipeline-processor-core,621497057,SystemVerilog,Pipeline-processor-core,421,0,2023-09-13 12:58:58+00:00,[],
11497,https://github.com/arkeks/SPI_fpga.git,2023-03-31 08:22:06+00:00,My realisation of SPI protocol on SystemVerilog.,0,arkeks/SPI_fpga,621713031,SystemVerilog,SPI_fpga,10,0,2023-04-03 13:59:11+00:00,[],
11498,https://github.com/delias2798/earce_computer_architecture_1_2023_grupal.git,2023-04-08 23:57:16+00:00,"Crear una aplicacion empleando la arquitectura disenada, con el fin de implementar la aplicacion descrita. Debe realizar un programa (‘compilador’) que permita traducir las instrucciones del ISA a binario, con la finalidad de ejecutarlo en el procesador. ",0,delias2798/earce_computer_architecture_1_2023_grupal,625382920,SystemVerilog,earce_computer_architecture_1_2023_grupal,370617,0,2023-05-16 13:18:33+00:00,[],
11499,https://github.com/OozoraCielo/Extending-a-32-bit-CPU-Instruction-Set.git,2023-04-12 01:27:03+00:00,A University of the Philippines Diliman Projects that focuses on learning system verilog,0,OozoraCielo/Extending-a-32-bit-CPU-Instruction-Set,626693325,SystemVerilog,Extending-a-32-bit-CPU-Instruction-Set,2145,0,2023-04-12 02:03:15+00:00,[],
11500,https://github.com/Mopplikus/LAP_hls_benchmarks.git,2023-04-05 09:40:20+00:00,,0,Mopplikus/LAP_hls_benchmarks,623882330,SystemVerilog,LAP_hls_benchmarks,8181502,0,2023-04-26 23:47:51+00:00,[],
11501,https://github.com/tuna5309/Verification-of-d-flip-flop-with-uvm.git,2023-04-05 10:10:16+00:00,Verification-of-d-flip-flop-with-uvm,0,tuna5309/Verification-of-d-flip-flop-with-uvm,623894068,SystemVerilog,Verification-of-d-flip-flop-with-uvm,4,0,2023-04-05 10:16:09+00:00,[],
11502,https://github.com/BrendanJamesLynskey/RTL_dividers.git,2023-04-05 08:57:27+00:00,"Conventional RTL dividers, with TBs  ",0,BrendanJamesLynskey/RTL_dividers,623866270,SystemVerilog,RTL_dividers,12,0,2023-04-05 08:58:43+00:00,[],
11503,https://github.com/2AA4-W23/Island_Generator.git,2023-04-05 01:24:30+00:00,a4-urbanism-hamzahrawasia created by GitHub Classroom,1,2AA4-W23/Island_Generator,623736594,SystemVerilog,Island_Generator,360,0,2023-09-22 02:04:55+00:00,[],https://api.github.com/licenses/lgpl-2.1
11504,https://github.com/kankshikomre/32_ALU_Preprocessor-with-Verification.git,2023-04-02 10:02:26+00:00,"32 ALU Preprocessor (2 stage pipelined) with verification using Driver, Generator, Scoreboard and Monitor",0,kankshikomre/32_ALU_Preprocessor-with-Verification,622501705,SystemVerilog,32_ALU_Preprocessor-with-Verification,27,0,2023-04-02 10:16:46+00:00,[],
11505,https://github.com/MarkHoreni/SOC-Class-Project.git,2023-03-16 16:32:35+00:00,,0,MarkHoreni/SOC-Class-Project,614949049,SystemVerilog,SOC-Class-Project,50221,0,2023-05-14 16:51:05+00:00,[],
11506,https://github.com/lleones/OAC-LOAC.git,2023-03-21 20:25:41+00:00,Respositório contendo minhas anotações utilizadas nas disciplinas Organização e arquitetura dos computadores(OAC) e Laboratório de organização e arquitetura dos computadores(LOAC).,0,lleones/OAC-LOAC,617163398,SystemVerilog,OAC-LOAC,1732,0,2023-04-19 14:13:06+00:00,[],
11507,https://github.com/malikshanaah1999/WIFI_Malik.git,2023-03-17 18:58:29+00:00,,0,malikshanaah1999/WIFI_Malik,615464851,SystemVerilog,WIFI_Malik,11,0,2023-03-17 19:00:39+00:00,[],
11508,https://github.com/milanlazic97/UART-communication-protocol.git,2023-03-20 03:19:42+00:00,verification of UART ,0,milanlazic97/UART-communication-protocol,616267121,SystemVerilog,UART-communication-protocol,5,0,2023-03-20 03:20:43+00:00,[],
11509,https://github.com/MahmoudHanno/FIFO-verification.git,2023-03-23 09:32:51+00:00,,0,MahmoudHanno/FIFO-verification,617869589,SystemVerilog,FIFO-verification,2,0,2023-03-23 09:33:17+00:00,[],
11510,https://github.com/robotmir/UVM-apb-completer.git,2023-03-23 17:17:38+00:00,,0,robotmir/UVM-apb-completer,618064544,SystemVerilog,UVM-apb-completer,8744,0,2023-04-13 05:01:09+00:00,[],
11511,https://github.com/jc123488/icc_2021.git,2023-03-25 04:38:44+00:00,,1,jc123488/icc_2021,618697090,SystemVerilog,icc_2021,90,0,2023-03-25 04:41:43+00:00,[],
11512,https://github.com/balajikollapdx/SV_prj_10.git,2023-03-25 05:41:12+00:00,Project_10 System Verilog,0,balajikollapdx/SV_prj_10,618709386,SystemVerilog,SV_prj_10,653,0,2023-03-25 05:52:42+00:00,[],
11513,https://github.com/GaryChen886/2023icc.git,2023-03-29 05:55:54+00:00,,0,GaryChen886/2023icc,620659720,SystemVerilog,2023icc,6,0,2023-03-29 05:56:32+00:00,[],
11514,https://github.com/Kenta11/micro-alpha.git,2023-03-18 08:46:42+00:00,A tiny microprogram-controlled CISC processor,0,Kenta11/micro-alpha,615642774,SystemVerilog,micro-alpha,44,0,2023-04-01 18:07:07+00:00,[],https://api.github.com/licenses/mit
11515,https://github.com/Vinupriya-2502/UVM_Project_1.git,2023-03-18 10:00:27+00:00,,0,Vinupriya-2502/UVM_Project_1,615661236,SystemVerilog,UVM_Project_1,37,0,2023-03-18 10:04:04+00:00,[],
11516,https://github.com/Perumaltuty/UVM_PROJECT_1.git,2023-03-18 07:01:54+00:00,,0,Perumaltuty/UVM_PROJECT_1,615618731,SystemVerilog,UVM_PROJECT_1,30,0,2023-03-18 07:10:23+00:00,[],
11517,https://github.com/edziem2/slc3.git,2023-02-26 21:01:54+00:00,,0,edziem2/slc3,606887366,SystemVerilog,slc3,9212,0,2023-02-26 21:09:14+00:00,[],
11518,https://github.com/ibrahimhamada/Pipelined-ARM-Processor-using-System-Verilog.git,2023-02-20 21:09:35+00:00,The project aims to Implement the pipelined ARM processor using system Verilog with a Hazard Unit.,1,ibrahimhamada/Pipelined-ARM-Processor-using-System-Verilog,604338860,SystemVerilog,Pipelined-ARM-Processor-using-System-Verilog,2306,0,2023-05-14 19:16:26+00:00,[],
11519,https://github.com/baristanunal/CS223_MicroProcessor.git,2023-03-03 07:05:08+00:00,The project of CS223 Digital Design course. A basic microprocessor implementation with SystemVerilog.,0,baristanunal/CS223_MicroProcessor,609004172,SystemVerilog,CS223_MicroProcessor,28,0,2023-03-03 07:13:04+00:00,[],
11520,https://github.com/zxc6562138/UVM-EXAMPLE.git,2023-03-03 13:21:42+00:00,,0,zxc6562138/UVM-EXAMPLE,609144192,SystemVerilog,UVM-EXAMPLE,17,0,2023-03-03 13:30:15+00:00,[],
11521,https://github.com/GAlexakis/IC-TicTacToe.git,2023-03-14 08:35:13+00:00,Tic tac toe game for an FPGA using VGA controller,0,GAlexakis/IC-TicTacToe,613770143,SystemVerilog,IC-TicTacToe,5,0,2023-03-14 08:45:34+00:00,[],
11522,https://github.com/Monirul305/Design-and-Verification-of-a-RISC--V-Multicycle-Processor-and-a-Memory-Controller-with-Wishbone-Inte.git,2023-03-15 10:55:19+00:00,,0,Monirul305/Design-and-Verification-of-a-RISC--V-Multicycle-Processor-and-a-Memory-Controller-with-Wishbone-Inte,614319810,SystemVerilog,Design-and-Verification-of-a-RISC--V-Multicycle-Processor-and-a-Memory-Controller-with-Wishbone-Inte,510,0,2023-03-15 10:56:39+00:00,[],
11523,https://github.com/Perumaltuty/System_Verilog.git,2023-02-20 16:51:58+00:00,,0,Perumaltuty/System_Verilog,604252040,SystemVerilog,System_Verilog,185,0,2023-02-20 16:52:55+00:00,[],
11524,https://github.com/VictorAmb112/TSC.git,2023-02-20 17:50:12+00:00,,0,VictorAmb112/TSC,604274039,SystemVerilog,TSC,8213,0,2023-03-27 12:07:03+00:00,[],
11525,https://github.com/SimonDar/TFE4171-Design_of_Digital_Systems_2.git,2023-02-20 14:41:22+00:00,,0,SimonDar/TFE4171-Design_of_Digital_Systems_2,604197376,SystemVerilog,TFE4171-Design_of_Digital_Systems_2,6644,0,2023-02-20 14:54:41+00:00,[],https://api.github.com/licenses/mit
11526,https://github.com/wprobst1/Lab1.git,2023-02-17 21:07:04+00:00,,0,wprobst1/Lab1,603206929,SystemVerilog,Lab1,51,0,2023-02-17 21:15:36+00:00,[],
11527,https://github.com/MihaiComanoiu/TSC.git,2023-02-20 06:46:03+00:00,,0,MihaiComanoiu/TSC,604017789,SystemVerilog,TSC,8015,0,2023-03-06 07:38:40+00:00,[],
11528,https://github.com/thanavignesh/System_verilog.git,2023-02-22 16:27:52+00:00,,0,thanavignesh/System_verilog,605189075,SystemVerilog,System_verilog,67,0,2023-02-22 16:34:45+00:00,[],
11529,https://github.com/RaduTns/TSC_2022-2023.git,2023-02-21 10:13:20+00:00,Laborator TSC,0,RaduTns/TSC_2022-2023,604559348,SystemVerilog,TSC_2022-2023,8021,0,2023-03-12 22:47:38+00:00,[],
11530,https://github.com/abhijeet8prem/ece-571-final-project.git,2023-02-27 20:39:18+00:00,project to model a system that can detect and correct errors using 16 bit CRC in System Verilog,0,abhijeet8prem/ece-571-final-project,607360665,SystemVerilog,ece-571-final-project,102,0,2023-03-25 03:55:57+00:00,[],
11531,https://github.com/dg2300/PULSEDETEC_OVMTB.git,2023-02-24 07:13:00+00:00,Simple Pulse detector RTL  and OVM_TB ,0,dg2300/PULSEDETEC_OVMTB,605915863,SystemVerilog,PULSEDETEC_OVMTB,6,0,2023-08-02 18:09:23+00:00,[],
11532,https://github.com/Yashovardhan15/full_adder_rtl_design.git,2023-02-25 09:58:58+00:00,"Implementing a Full adder using System verilog to add 2 operands, returning the sum and carry.",0,Yashovardhan15/full_adder_rtl_design,606377426,SystemVerilog,full_adder_rtl_design,905,0,2023-02-25 14:00:42+00:00,[],https://api.github.com/licenses/lgpl-2.1
11533,https://github.com/kankshikomre/Scripting-and-Automation.git,2023-02-25 12:39:14+00:00,"An Automatic Library Evaluation Framework that automates the synthesis flow of the Xilinx Vivado Tool. The script takes Verilog Files as Input and Synthesizes all of them. The area, power, and delay report is generated for all the designs and combined in the form of a CSV file.",0,kankshikomre/Scripting-and-Automation,606417983,SystemVerilog,Scripting-and-Automation,36,0,2023-02-27 17:34:36+00:00,[],
11534,https://github.com/oga-engineering/codma_fyp.git,2023-02-28 12:28:06+00:00,"The CODMA is my final year masters' project, started in 2023. I like to add to this project when I have an opportunity and have learnt new skills that are of use to the project.. This is the initial un-pipelined version of the design.",0,oga-engineering/codma_fyp,607659036,SystemVerilog,codma_fyp,4225,0,2023-10-31 10:22:21+00:00,[],
11535,https://github.com/vaibhavturaga/ECE270.git,2023-03-11 15:23:21+00:00,,0,vaibhavturaga/ECE270,612650050,SystemVerilog,ECE270,11,0,2023-03-11 15:24:14+00:00,[],
11536,https://github.com/sajjadahmed677/riscv-soc.git,2023-03-07 12:01:23+00:00,,0,sajjadahmed677/riscv-soc,610747589,SystemVerilog,riscv-soc,228,0,2023-03-07 12:59:57+00:00,[],https://api.github.com/licenses/apache-2.0
11537,https://github.com/Reammaer/uvm_config_db.git,2023-03-06 21:41:50+00:00,Different ways to configurate database in uvm,0,Reammaer/uvm_config_db,610485448,SystemVerilog,uvm_config_db,12,0,2023-03-08 19:42:20+00:00,[],
11538,https://github.com/gullahmed1/CV32E40P-Wrapper.git,2023-03-09 07:37:03+00:00,,0,gullahmed1/CV32E40P-Wrapper,611617930,SystemVerilog,CV32E40P-Wrapper,4,0,2023-03-09 07:37:30+00:00,[],
11539,https://github.com/gorkemnisanci96/G100DaysOfRTL.git,2023-02-16 21:58:08+00:00,,1,gorkemnisanci96/G100DaysOfRTL,602757324,SystemVerilog,G100DaysOfRTL,2464,0,2023-02-16 22:00:47+00:00,[],
11540,https://github.com/RaviduHM99/RoXXon-RISCV-Processor.git,2023-03-07 05:07:20+00:00,,0,RaviduHM99/RoXXon-RISCV-Processor,610600564,SystemVerilog,RoXXon-RISCV-Processor,3799,0,2023-12-09 14:39:22+00:00,[],
11541,https://github.com/tiliosys/Vermicel-CPU-SystemVerilog.git,2023-04-15 15:11:18+00:00,A small CPU core based on the RISC-V specification,1,tiliosys/Vermicel-CPU-SystemVerilog,628315920,SystemVerilog,Vermicel-CPU-SystemVerilog,299,0,2023-04-15 15:28:25+00:00,[],https://api.github.com/licenses/cern-ohl-w-2.0
11542,https://github.com/Jlparedes2211/Ibex_led_example.git,2023-03-20 16:16:30+00:00,USFQ Ibex,0,Jlparedes2211/Ibex_led_example,616560842,SystemVerilog,Ibex_led_example,388,0,2023-03-20 16:20:38+00:00,[],
11543,https://github.com/guzhirong/Axi_Can_Lite.git,2023-03-09 01:53:56+00:00,IP CORE--Axi_Can_Lite,0,guzhirong/Axi_Can_Lite,611523407,SystemVerilog,Axi_Can_Lite,1920,0,2023-03-09 02:01:16+00:00,[],
11544,https://github.com/2023-Spring-ECE4278/lab2.git,2023-03-08 01:49:06+00:00,,0,2023-Spring-ECE4278/lab2,611046553,SystemVerilog,lab2,3,0,2023-03-08 08:34:32+00:00,[],
11545,https://github.com/Krishnachaitanya-422/Router-1x3-uvm-Verification.git,2023-03-16 01:39:26+00:00,This project verifies the 1x3 router design with uvm based Methodology,0,Krishnachaitanya-422/Router-1x3-uvm-Verification,614631046,SystemVerilog,Router-1x3-uvm-Verification,79,0,2023-04-02 05:31:27+00:00,[],https://api.github.com/licenses/mit
11546,https://github.com/MuhammadMajiid/LFSR.git,2023-03-21 23:08:15+00:00,"Decryption Using LFSR, Modelled using System Verilog HDL",0,MuhammadMajiid/LFSR,617211236,SystemVerilog,LFSR,89,0,2023-09-29 14:10:41+00:00,[],
11547,https://github.com/1999xyf/axi_stream_insert_header.git,2023-04-15 06:06:25+00:00,,0,1999xyf/axi_stream_insert_header,628174843,SystemVerilog,axi_stream_insert_header,4,0,2023-04-15 06:21:08+00:00,[],
11548,https://github.com/PonakLiu/my_cva6.git,2023-04-14 06:59:23+00:00,cva6_testing,0,PonakLiu/my_cva6,627770832,SystemVerilog,my_cva6,6039,0,2023-04-14 07:26:15+00:00,[],
11549,https://github.com/nguyen-noah-uet/HeThongVxlProjs.git,2023-04-16 10:23:58+00:00,,0,nguyen-noah-uet/HeThongVxlProjs,628557075,SystemVerilog,HeThongVxlProjs,8,0,2023-04-16 10:39:14+00:00,[],
11550,https://github.com/Krishnachaitanya-422/AHB-APB-Bridge-UVM-Verification-project.git,2023-04-12 02:36:59+00:00,This project verifies the Bridge between connection of AHB and APB protocols,0,Krishnachaitanya-422/AHB-APB-Bridge-UVM-Verification-project,626712488,SystemVerilog,AHB-APB-Bridge-UVM-Verification-project,14,0,2023-04-12 02:38:14+00:00,[],https://api.github.com/licenses/mit
11551,https://github.com/Krupski37/Prosta-jednostka-ALU-z-wykorzystaniem-VERILOG.git,2023-04-01 14:31:55+00:00,,0,Krupski37/Prosta-jednostka-ALU-z-wykorzystaniem-VERILOG,622239574,SystemVerilog,Prosta-jednostka-ALU-z-wykorzystaniem-VERILOG,5864,0,2023-04-08 06:49:40+00:00,[],
11552,https://github.com/u310720/2022-Spring-NCU-VLSI-Testing.git,2023-04-09 13:03:17+00:00,,0,u310720/2022-Spring-NCU-VLSI-Testing,625546958,SystemVerilog,2022-Spring-NCU-VLSI-Testing,2501,0,2023-04-09 13:16:54+00:00,[],
11553,https://github.com/GiorgosPelekidis/comp-arch-2023.git,2023-03-12 13:30:11+00:00,,0,GiorgosPelekidis/comp-arch-2023,612952421,SystemVerilog,comp-arch-2023,377,0,2023-03-16 20:17:31+00:00,[],
11554,https://github.com/Suriya2882002/UVM_PROJECT1.git,2023-03-18 11:52:01+00:00,,0,Suriya2882002/UVM_PROJECT1,615690170,SystemVerilog,UVM_PROJECT1,24,0,2023-09-13 12:45:55+00:00,[],
11555,https://github.com/Carlos12001/bin_converter.git,2023-03-17 16:52:01+00:00,,0,Carlos12001/bin_converter,615422268,SystemVerilog,bin_converter,2,0,2023-03-17 16:52:09+00:00,[],
11556,https://github.com/Jorge-Padilla/DM_Padilla_Gutierrez_RISC_V.git,2023-03-17 20:41:50+00:00,Implementation of a RISC-V for the Microprocessors Design Class,0,Jorge-Padilla/DM_Padilla_Gutierrez_RISC_V,615495212,SystemVerilog,DM_Padilla_Gutierrez_RISC_V,357098,0,2023-03-17 21:02:45+00:00,[],
11557,https://github.com/idane2309/CSE-469.git,2023-03-18 22:52:42+00:00,Computer Architecture,0,idane2309/CSE-469,615868346,SystemVerilog,CSE-469,785,0,2023-03-18 23:20:20+00:00,[],
11558,https://github.com/ewertonsantos/alu_m.git,2023-03-17 14:13:59+00:00,a simple aritimetic and logic unit in system verilog,0,ewertonsantos/alu_m,615359460,SystemVerilog,alu_m,2,0,2023-03-17 14:15:08+00:00,[],
11559,https://github.com/luna09666/risc_v-system_verilog.git,2023-03-28 06:01:06+00:00,,0,luna09666/risc_v-system_verilog,620149593,SystemVerilog,risc_v-system_verilog,10,0,2023-03-28 06:08:17+00:00,[],
11560,https://github.com/samdeutrom/i2c.git,2023-04-05 09:26:22+00:00,System Verilog Module for i2c Master,0,samdeutrom/i2c,623877139,SystemVerilog,i2c,40,0,2023-04-05 09:26:28+00:00,[],https://api.github.com/licenses/gpl-3.0
11561,https://github.com/YuriDants/IdentificadorDeSequencia.git,2023-04-03 01:29:27+00:00,,0,YuriDants/IdentificadorDeSequencia,622748465,SystemVerilog,IdentificadorDeSequencia,2,0,2023-04-03 01:41:02+00:00,[],
11562,https://github.com/EdisonLam-USYD/Multi-Precision-CNN.git,2023-04-03 06:35:10+00:00,2023 Thesis,0,EdisonLam-USYD/Multi-Precision-CNN,622828223,SystemVerilog,Multi-Precision-CNN,254,0,2023-04-12 01:20:17+00:00,[],https://api.github.com/licenses/mit
11563,https://github.com/kutaytire/CS-223-Assignments.git,2023-03-08 19:34:49+00:00,Assignments of Bilkent University CS223 course.,0,kutaytire/CS-223-Assignments,611417076,SystemVerilog,CS-223-Assignments,1003,0,2023-03-09 12:58:08+00:00,[],
11564,https://github.com/anconet/verilogExample.git,2023-03-10 17:07:31+00:00,An example project using System Verilog for the Test Bench and Verilog for RTL.,0,anconet/verilogExample,612316629,SystemVerilog,verilogExample,14,0,2023-03-11 20:44:38+00:00,[],
11565,https://github.com/Gadamsettisivasaisrinivasrao/SVFINALPROJECT.git,2023-03-13 05:30:55+00:00,,1,Gadamsettisivasaisrinivasrao/SVFINALPROJECT,613203873,SystemVerilog,SVFINALPROJECT,2,0,2023-03-13 05:31:57+00:00,[],
11566,https://github.com/karthdjd/PRACTICE-SV.git,2023-03-11 04:34:48+00:00,,0,karthdjd/PRACTICE-SV,612484627,SystemVerilog,PRACTICE-SV,2,0,2023-03-11 04:58:39+00:00,[],
11567,https://github.com/jayagollavilli/system-verilog.git,2023-03-11 08:02:39+00:00,,0,jayagollavilli/system-verilog,612529065,SystemVerilog,system-verilog,911,0,2023-03-11 08:24:43+00:00,[],
11568,https://github.com/bhagi-kiran/uvm-casestudies.git,2023-03-06 06:48:25+00:00,"These are some codes that I practiced at CDAC, Noida.",0,bhagi-kiran/uvm-casestudies,610133672,SystemVerilog,uvm-casestudies,6349,0,2023-03-17 07:23:57+00:00,[],
11569,https://github.com/abarajithan11/TritonRTL.git,2023-04-12 19:57:14+00:00,Selective TMR Framework for High-Reliability DNN Implementations in SystemVerilog,0,abarajithan11/TritonRTL,627108801,SystemVerilog,TritonRTL,761,0,2023-05-20 03:27:16+00:00,[],
11570,https://github.com/DeepSweeter/Implementation-of-AM2940.git,2023-04-16 17:52:20+00:00,,0,DeepSweeter/Implementation-of-AM2940,628684166,SystemVerilog,Implementation-of-AM2940,11,0,2023-07-01 05:33:29+00:00,[],
11571,https://github.com/padung99/Prac_ITMO_2023.git,2023-02-09 16:36:45+00:00,,0,padung99/Prac_ITMO_2023,599674632,SystemVerilog,Prac_ITMO_2023,35526,0,2023-02-09 16:52:53+00:00,[],
11572,https://github.com/nbathula16/SV-Project.git,2023-02-22 00:51:36+00:00,32-bit Single Precision Floating point Multiplication,0,nbathula16/SV-Project,604872623,SystemVerilog,SV-Project,6279,0,2023-03-24 19:47:06+00:00,"['conditional-compilation', 'constraint', 'coverage', 'floating-point', 'multiplier', 'normalization', 'randomization', 'testbench', 'directed-testing']",
11573,https://github.com/SDP-2023/Proyecto1.git,2023-02-21 07:18:14+00:00,Contador coche fantástico,0,SDP-2023/Proyecto1,604496085,SystemVerilog,Proyecto1,7778,0,2023-05-23 07:31:21+00:00,[],
11574,https://github.com/Eliott-Henry/Controleur-video-FPGA.git,2023-02-22 15:49:25+00:00,,0,Eliott-Henry/Controleur-video-FPGA,605173502,SystemVerilog,Controleur-video-FPGA,11956,0,2023-02-22 15:51:19+00:00,[],
11575,https://github.com/AbhayPatil/DigitalDesign.git,2023-02-25 00:34:12+00:00,,0,AbhayPatil/DigitalDesign,606254702,SystemVerilog,DigitalDesign,6,0,2023-02-25 00:34:56+00:00,[],
11576,https://github.com/SonNeyugn/uvm_practice.git,2023-02-24 21:03:57+00:00,SystemVerilog and UVM practice,0,SonNeyugn/uvm_practice,606206747,SystemVerilog,uvm_practice,11672,0,2023-02-24 21:33:19+00:00,[],
11577,https://github.com/rpjayaraman/vlt-uvm.git,2023-02-25 12:31:40+00:00,Verilator with UVM,0,rpjayaraman/vlt-uvm,606416070,SystemVerilog,vlt-uvm,4,0,2023-02-25 12:38:28+00:00,[],
11578,https://github.com/roccomao/share.git,2023-03-02 15:20:46+00:00,Q&A & Notes & Coding Everyday,0,roccomao/share,608708520,SystemVerilog,share,11,0,2023-09-01 01:57:42+00:00,[],
11579,https://github.com/kana-lab/cpu_2nd.git,2023-02-13 20:52:46+00:00,,0,kana-lab/cpu_2nd,601329225,SystemVerilog,cpu_2nd,171,0,2023-02-23 09:49:10+00:00,[],
11580,https://github.com/xiyu-lightmatter/experimental.git,2023-02-15 17:42:31+00:00,,0,xiyu-lightmatter/experimental,602195558,SystemVerilog,experimental,8,0,2023-08-01 04:34:23+00:00,[],
11581,https://github.com/Josfemova/ngonzales_jmorales_smoya_digital_design_lab_2023.git,2023-02-25 20:33:25+00:00,,0,Josfemova/ngonzales_jmorales_smoya_digital_design_lab_2023,606550064,SystemVerilog,ngonzales_jmorales_smoya_digital_design_lab_2023,669,0,2023-03-08 02:56:13+00:00,[],https://api.github.com/licenses/mit
11582,https://github.com/OrsuVenkataKrishnaiah1235/System-Verilog.git,2023-02-28 10:07:49+00:00,"""Mastering SystemVerilog: From Fundamentals to Advanced Programming Techniques""",2,OrsuVenkataKrishnaiah1235/System-Verilog,607605050,SystemVerilog,System-Verilog,11,0,2023-03-02 11:00:54+00:00,"['asic', 'soc', 'sv', 'systemverilog', 'verification', 'verilog', 'vlsi-design', 'systemverilog-examples', 'systemverilog-problems']",
11583,https://github.com/perit-dincer/8-bit-calculator.git,2023-02-28 18:15:38+00:00,8-bit calculator designed using SystemVerilog with Xilinx Vivado,0,perit-dincer/8-bit-calculator,607811661,SystemVerilog,8-bit-calculator,97,0,2023-02-28 18:22:22+00:00,[],
11584,https://github.com/xinyew/CMU_courses_18240_lab3.git,2023-02-28 23:54:35+00:00,,0,xinyew/CMU_courses_18240_lab3,607917730,SystemVerilog,CMU_courses_18240_lab3,1723,0,2023-03-29 23:47:14+00:00,[],
11585,https://github.com/ashleyjr/ICE40HX8K-B-EVN_23K640.git,2023-03-18 21:48:09+00:00,23K640 SPI SRAM Expansion PCB for ICE40HX8K-B-EVN FPGA Dev Board,0,ashleyjr/ICE40HX8K-B-EVN_23K640,615855793,SystemVerilog,ICE40HX8K-B-EVN_23K640,958,0,2023-05-01 21:59:01+00:00,[],
11586,https://github.com/NP95/qs.git,2023-03-06 15:21:59+00:00,A hardware implementation of the Quicksort algorithm.,0,NP95/qs,610340550,,qs,457,0,2022-10-20 15:22:21+00:00,[],
11587,https://github.com/tuna5309/Verification-of-Adder-with-uvm.git,2023-04-05 10:09:37+00:00,Verification-of-Adder-with-uvm,1,tuna5309/Verification-of-Adder-with-uvm,623893794,SystemVerilog,Verification-of-Adder-with-uvm,4,0,2023-04-05 10:15:35+00:00,[],
11588,https://github.com/tuna5309/Verficiation-of-dual-port-ram-with-uvm.git,2023-04-05 10:11:14+00:00,Verficiation-of-dual-port-ram-with-uvm,0,tuna5309/Verficiation-of-dual-port-ram-with-uvm,623894498,SystemVerilog,Verficiation-of-dual-port-ram-with-uvm,4,0,2023-04-05 10:15:04+00:00,[],
11589,https://github.com/donavan12345/FPGA-UART-ARTY-A7.git,2023-04-14 00:50:38+00:00,Custom UART Module for Arty A7 100 Board,0,donavan12345/FPGA-UART-ARTY-A7,627673745,SystemVerilog,FPGA-UART-ARTY-A7,387,0,2023-04-15 02:32:50+00:00,[],https://api.github.com/licenses/gpl-3.0
11590,https://github.com/duydinh1201/computer-architecture.git,2023-04-12 13:59:01+00:00,,0,duydinh1201/computer-architecture,626960362,,computer-architecture,30622,0,2023-04-07 15:59:10+00:00,[],
11591,https://github.com/elipcs/loac-ufcg.git,2023-03-28 14:37:08+00:00,Repositório dos roteiros da disciplina Laboratório de Organização e Arquitetura de Computadores 2022.2,0,elipcs/loac-ufcg,620365133,SystemVerilog,loac-ufcg,8,0,2023-04-12 02:17:14+00:00,[],
11592,https://github.com/varshanj/SPI-Controller-Core-Verification.git,2023-03-25 05:36:25+00:00,,0,varshanj/SPI-Controller-Core-Verification,618708389,SystemVerilog,SPI-Controller-Core-Verification,23,0,2023-03-25 07:21:19+00:00,[],
11593,https://github.com/kleiner-fisch/systemverilog-cache.git,2023-03-30 20:21:00+00:00,Testbench for a simple cache ,0,kleiner-fisch/systemverilog-cache,621513985,SystemVerilog,systemverilog-cache,5,0,2023-03-30 20:45:47+00:00,[],
11594,https://github.com/semiDESIgner/System_Verilog.git,2023-04-01 16:42:53+00:00,,0,semiDESIgner/System_Verilog,622281389,SystemVerilog,System_Verilog,15,0,2023-04-02 08:11:57+00:00,[],
11595,https://github.com/jhenriqueax/LOAC.git,2023-03-25 12:35:20+00:00,,0,jhenriqueax/LOAC,618813661,SystemVerilog,LOAC,3068,0,2023-10-23 11:28:25+00:00,[],
11596,https://github.com/asmwriter/cmu-18-624-tiny-tapeout-ucpu.git,2023-04-03 16:29:37+00:00,Repository for 18-624's tapeout project - May 2023,0,asmwriter/cmu-18-624-tiny-tapeout-ucpu,623071965,SystemVerilog,cmu-18-624-tiny-tapeout-ucpu,30,0,2023-04-03 16:32:48+00:00,[],
11597,https://github.com/soukalin96/rra_uvm_tb.git,2023-04-10 16:19:31+00:00,,0,soukalin96/rra_uvm_tb,626021406,SystemVerilog,rra_uvm_tb,8,0,2023-04-11 09:43:49+00:00,[],
11598,https://github.com/ThayaneBarros/LOAC.git,2023-04-10 19:14:40+00:00,,0,ThayaneBarros/LOAC,626087436,SystemVerilog,LOAC,48677,0,2023-04-10 19:17:33+00:00,[],https://api.github.com/licenses/mit
11599,https://github.com/EslamMahmoud1/winner_loser_counter.git,2023-04-08 09:29:11+00:00,,0,EslamMahmoud1/winner_loser_counter,625171147,SystemVerilog,winner_loser_counter,1,0,2023-04-10 06:33:16+00:00,[],
11600,https://github.com/AnhLe1501/BTL_RISC-V_32I.git,2023-03-09 18:23:49+00:00,,0,AnhLe1501/BTL_RISC-V_32I,611880297,SystemVerilog,BTL_RISC-V_32I,10,0,2023-03-09 18:29:05+00:00,[],
11601,https://github.com/jpy794/ShoortsonCPU.git,2023-03-08 12:38:05+00:00,A LoongArch32r softcore processor for NSCSCC2022.,0,jpy794/ShoortsonCPU,611247086,SystemVerilog,ShoortsonCPU,11888,0,2023-03-08 12:39:03+00:00,[],
11602,https://github.com/cse140l-wi23/lab3_starter.git,2023-02-16 01:32:01+00:00,Starter code for Lab 3,3,cse140l-wi23/lab3_starter,602332959,SystemVerilog,lab3_starter,614,0,2023-02-16 01:32:39+00:00,[],
11603,https://github.com/Splasher1804/TSC.git,2023-02-20 08:26:57+00:00,,0,Splasher1804/TSC,604051113,SystemVerilog,TSC,8065,0,2023-03-06 09:21:53+00:00,[],
11604,https://github.com/joecha5/TDD_Lab1.git,2023-02-16 21:53:29+00:00,Proyecto 1 Taller Diseño Digital,0,joecha5/TDD_Lab1,602755987,SystemVerilog,TDD_Lab1,11,0,2023-03-02 21:31:44+00:00,[],https://api.github.com/licenses/mit
11605,https://github.com/nueroscience/labonchip2.git,2023-02-17 16:00:43+00:00,,0,nueroscience/labonchip2,603097489,SystemVerilog,labonchip2,733811,0,2023-02-17 16:08:17+00:00,[],https://api.github.com/licenses/apache-2.0
11606,https://github.com/irinamorel/TSC-laborator.git,2023-02-21 10:30:35+00:00,,0,irinamorel/TSC-laborator,604565785,SystemVerilog,TSC-laborator,30572,0,2023-03-07 11:57:17+00:00,[],
11607,https://github.com/Chuning99/Robertson-s-Multiplication.git,2023-02-21 00:03:34+00:00,,0,Chuning99/Robertson-s-Multiplication,604381576,SystemVerilog,Robertson-s-Multiplication,511,0,2023-02-21 00:06:03+00:00,[],
11608,https://github.com/ranadewa/Verilog-for-ASIC-FPGA-Design-Simulation.git,2023-02-22 19:21:35+00:00,,0,ranadewa/Verilog-for-ASIC-FPGA-Design-Simulation,605254425,SystemVerilog,Verilog-for-ASIC-FPGA-Design-Simulation,18621,0,2023-02-27 21:10:02+00:00,[],
11609,https://github.com/harshluffy1996/GNN-Accelerator.git,2023-02-21 18:20:47+00:00,,0,harshluffy1996/GNN-Accelerator,604758927,SystemVerilog,GNN-Accelerator,1717,0,2023-03-03 05:22:12+00:00,[],
11610,https://github.com/SharmaPrateek18/FIFO.git,2023-02-26 19:30:26+00:00,The provided code is of System Verilog. The FIFO is of 32x16 size. teh code is parameterized and the size can be varied according to users need.,0,SharmaPrateek18/FIFO,606863053,SystemVerilog,FIFO,13,0,2023-02-26 19:34:25+00:00,[],
11611,https://github.com/gyaanantia/fm_radio.git,2023-03-06 21:19:25+00:00,,0,gyaanantia/fm_radio,610478821,SystemVerilog,fm_radio,6930,0,2023-03-08 07:39:45+00:00,[],
11612,https://github.com/kirollos9/verification_course.git,2023-03-10 00:28:34+00:00,,0,kirollos9/verification_course,611985817,SystemVerilog,verification_course,19,0,2023-03-10 00:29:58+00:00,[],
11613,https://github.com/lathifsharieff/AXILite.git,2023-03-08 22:22:50+00:00,,0,lathifsharieff/AXILite,611470101,SystemVerilog,AXILite,212,0,2023-03-08 22:24:12+00:00,[],
11614,https://github.com/imhcyx/axi.vh.git,2023-03-22 04:38:35+00:00,Verilog header for easier AXI interface declaration & connection,0,imhcyx/axi.vh,617292356,SystemVerilog,axi.vh,6,0,2023-03-22 05:20:18+00:00,"['axi', 'hardware', 'verilog']",https://api.github.com/licenses/mit
11615,https://github.com/Rufaida-Kassem/Async-FIFO.git,2023-03-19 20:36:37+00:00,An Asynchronous FIFO Design that contains synchronizers to avoid metastability that may occur due to full and empty flags,0,Rufaida-Kassem/Async-FIFO,616178579,SystemVerilog,Async-FIFO,8,0,2023-03-25 00:29:15+00:00,[],https://api.github.com/licenses/mit
11616,https://github.com/thanavignesh/uvm_project_2.git,2023-03-20 11:37:46+00:00,,0,thanavignesh/uvm_project_2,616434224,SystemVerilog,uvm_project_2,7,0,2023-03-20 11:38:45+00:00,[],
11617,https://github.com/karthdjd/UVM_PROJECT_2.git,2023-03-20 09:45:44+00:00,,0,karthdjd/UVM_PROJECT_2,616388398,SystemVerilog,UVM_PROJECT_2,22,0,2023-03-20 09:48:17+00:00,[],
11618,https://github.com/ChrISBae21/OtterPong.git,2023-03-17 20:49:01+00:00,,0,ChrISBae21/OtterPong,615497299,SystemVerilog,OtterPong,164,0,2023-03-18 00:24:35+00:00,[],
11619,https://github.com/ahmedatef935/Hardware-Wrapper-Verification.git,2023-03-18 13:42:08+00:00,,0,ahmedatef935/Hardware-Wrapper-Verification,615721092,SystemVerilog,Hardware-Wrapper-Verification,36,0,2023-03-18 13:44:16+00:00,[],
11620,https://github.com/MikeFo5629/SoCET_Half_Precision_FPU.git,2023-03-20 00:24:51+00:00,SystemVerilog implementation of half precision floating point unit,0,MikeFo5629/SoCET_Half_Precision_FPU,616226161,SystemVerilog,SoCET_Half_Precision_FPU,763,0,2023-03-20 00:56:15+00:00,[],
11621,https://github.com/LurenAA/ddr3_mig_v1_4.git,2023-02-27 08:01:22+00:00,,0,LurenAA/ddr3_mig_v1_4,607053217,SystemVerilog,ddr3_mig_v1_4,129,0,2023-09-23 04:28:52+00:00,[],
11622,https://github.com/kamble7/SV_23_group8.git,2023-02-28 18:41:36+00:00,,0,kamble7/SV_23_group8,607821365,SystemVerilog,SV_23_group8,1699,0,2023-03-13 09:06:06+00:00,[],
11623,https://github.com/leonku0114/Guitar-Hero.git,2023-03-05 12:53:05+00:00,Create a game similar to guitar hero on a FPGA board using System Verilog ,0,leonku0114/Guitar-Hero,609854485,SystemVerilog,Guitar-Hero,32,0,2023-03-05 13:09:37+00:00,[],
11624,https://github.com/fabianchs/taller_digital_LAB2.git,2023-03-04 19:41:51+00:00,Laboratorio 2 del taller de diseño digital en el Instituto Tecnológico de Costa Rica para la carrera de Ingeniería en Electrónica ,0,fabianchs/taller_digital_LAB2,609640809,SystemVerilog,taller_digital_LAB2,365,0,2023-03-25 20:56:48+00:00,[],
11625,https://github.com/ShashankC27/hw3.git,2023-03-27 03:07:33+00:00,,0,ShashankC27/hw3,619383963,SystemVerilog,hw3,26,0,2023-03-27 03:09:14+00:00,[],
11626,https://github.com/Shivaprasadm02/system-verilog-practice.git,2023-02-25 06:43:20+00:00,,0,Shivaprasadm02/system-verilog-practice,606330389,SystemVerilog,system-verilog-practice,60,0,2023-02-25 06:58:07+00:00,[],
11627,https://github.com/thanavignesh/UVM_PROJECT_1.git,2023-03-18 10:45:06+00:00,,0,thanavignesh/UVM_PROJECT_1,615672868,SystemVerilog,UVM_PROJECT_1,7,0,2023-03-18 10:46:17+00:00,[],
11628,https://github.com/GaneshSai720/Three-stage-pipelined-convolution-hardware.git,2023-03-11 20:49:38+00:00,,0,GaneshSai720/Three-stage-pipelined-convolution-hardware,612741063,SystemVerilog,Three-stage-pipelined-convolution-hardware,9563,0,2023-03-11 20:52:57+00:00,[],
11629,https://github.com/bartokon/hdl.git,2023-03-13 20:10:14+00:00,This repo have contains HDL modules.,0,bartokon/hdl,613559789,SystemVerilog,hdl,47,0,2023-03-13 20:10:59+00:00,[],https://api.github.com/licenses/mit
11630,https://github.com/YuriDants/Huffman.git,2023-04-03 02:02:55+00:00,,0,YuriDants/Huffman,622756314,SystemVerilog,Huffman,2,0,2023-04-03 02:06:15+00:00,[],
11631,https://github.com/cstzo/RISC-V-Single-Cycle-Processor.git,2023-03-29 14:11:06+00:00,,0,cstzo/RISC-V-Single-Cycle-Processor,620860609,SystemVerilog,RISC-V-Single-Cycle-Processor,16,0,2023-03-31 19:59:52+00:00,[],
11632,https://github.com/BhuvanYadav1/SV_PRO_TEST.git,2023-03-22 11:52:33+00:00,,0,BhuvanYadav1/SV_PRO_TEST,617438100,SystemVerilog,SV_PRO_TEST,2,0,2023-03-22 11:56:43+00:00,[],
11633,https://github.com/sumiravishan/RGB-to-Grayscale-conversion-Methods.git,2023-04-16 05:53:17+00:00,Conver colour image to gray scale image,0,sumiravishan/RGB-to-Grayscale-conversion-Methods,628496414,SystemVerilog,RGB-to-Grayscale-conversion-Methods,77,0,2023-05-25 02:57:12+00:00,[],https://api.github.com/licenses/gpl-3.0
11634,https://github.com/zhangliang1997/gpgpu.git,2023-04-05 03:28:00+00:00,,0,zhangliang1997/gpgpu,623766067,SystemVerilog,gpgpu,686,0,2023-04-05 04:52:52+00:00,[],
11635,https://github.com/Jetoson/Timer-using-Verilog.git,2023-04-05 19:35:02+00:00,Hardware Programming Projects (Verilog),0,Jetoson/Timer-using-Verilog,624119400,SystemVerilog,Timer-using-Verilog,13,0,2023-04-05 19:43:24+00:00,[],
11636,https://github.com/sanjanachawla/SystemVerilog.git,2023-03-11 03:35:59+00:00,Projects and assignments done while learning SystemVerilog,0,sanjanachawla/SystemVerilog,612473599,SystemVerilog,SystemVerilog,3202,0,2023-03-11 03:43:21+00:00,[],
11637,https://github.com/varunven/riscv-processor-pipelined.git,2023-03-09 00:06:35+00:00,Pipelined version of risc-v processor,0,varunven/riscv-processor-pipelined,611496546,SystemVerilog,riscv-processor-pipelined,20,0,2023-03-09 00:07:52+00:00,[],
11638,https://github.com/nkpavan1/common_hardware_blocks.git,2023-03-11 09:58:35+00:00,Repo consists of simple and most commonly used hardware blocks described using both verilog and system verilog,0,nkpavan1/common_hardware_blocks,612557031,SystemVerilog,common_hardware_blocks,9,0,2023-07-01 06:37:12+00:00,[],
11639,https://github.com/2023-Spring-ECE4278/lab6.git,2023-04-10 02:25:02+00:00,,0,2023-Spring-ECE4278/lab6,625744773,SystemVerilog,lab6,11,0,2023-04-10 04:23:29+00:00,[],
11640,https://github.com/jefferyxu1/RPSC_FPGA.git,2023-02-15 00:33:11+00:00,,0,jefferyxu1/RPSC_FPGA,601849954,SystemVerilog,RPSC_FPGA,229,0,2023-05-17 20:37:01+00:00,[],
11641,https://github.com/DilukshaRukmal/RISCV-32I-Processor.git,2023-02-12 14:09:04+00:00,Riscv processor implemented using verilog ,0,DilukshaRukmal/RISCV-32I-Processor,600757263,SystemVerilog,RISCV-32I-Processor,3404,0,2023-02-12 14:10:13+00:00,[],
11642,https://github.com/k-31413/check1.git,2023-02-15 13:33:05+00:00,basic practice,0,k-31413/check1,602091428,SystemVerilog,check1,399,0,2023-02-15 13:36:33+00:00,[],
11643,https://github.com/hosseins17/Booth-multiplier.git,2023-02-19 13:23:15+00:00,5 bit Booth multiplier in system verilog,0,hosseins17/Booth-multiplier,603750200,SystemVerilog,Booth-multiplier,278,0,2023-02-19 13:24:55+00:00,[],
11644,https://github.com/Antonia2000/TSC.git,2023-02-20 06:42:44+00:00,,0,Antonia2000/TSC,604016839,SystemVerilog,TSC,8110,0,2023-04-04 18:23:15+00:00,[],
11645,https://github.com/gyaanantia/udp_parser.git,2023-02-20 06:47:07+00:00,,0,gyaanantia/udp_parser,604018108,SystemVerilog,udp_parser,430,0,2023-02-20 06:49:12+00:00,[],
11646,https://github.com/masonJamesWheeler/Verilog-SystemVerilog.git,2023-02-22 21:43:25+00:00,Implementations of different Verilog and SystemVerilog programs that I have written! Most of the programs are classwork from my Digital Design class at the University of Washington,0,masonJamesWheeler/Verilog-SystemVerilog,605300050,SystemVerilog,Verilog-SystemVerilog,28,0,2023-02-22 22:05:43+00:00,"['hardware', 'systemverilog', 'verilog']",
11647,https://github.com/pnarahar/multiplier.git,2023-02-23 17:23:07+00:00,,0,pnarahar/multiplier,605685289,SystemVerilog,multiplier,1,0,2023-02-23 17:41:48+00:00,[],
11648,https://github.com/Chengjing-314/cse141_compiler.git,2023-02-19 17:56:06+00:00,,0,Chengjing-314/cse141_compiler,603835665,SystemVerilog,cse141_compiler,1188,0,2023-03-15 04:21:30+00:00,[],
11649,https://github.com/Yashovardhan15/100-Days-of-RTL.git,2023-02-24 12:32:34+00:00,,0,Yashovardhan15/100-Days-of-RTL,606024489,SystemVerilog,100-Days-of-RTL,244,0,2023-02-26 05:44:56+00:00,[],
11650,https://github.com/avinash91231/avinash_cpu.git,2023-02-16 05:25:07+00:00,,0,avinash91231/avinash_cpu,602391914,SystemVerilog,avinash_cpu,17,0,2023-02-16 05:47:03+00:00,[],
11651,https://github.com/Ash2982/UVM.git,2023-03-01 05:52:34+00:00,UVM testbench,0,Ash2982/UVM,608007537,SystemVerilog,UVM,31,0,2023-03-01 06:35:37+00:00,[],
11652,https://github.com/soudaminia06/16-bit-CPU-code.git,2023-02-09 05:50:43+00:00,,0,soudaminia06/16-bit-CPU-code,599432965,SystemVerilog,16-bit-CPU-code,21,0,2023-02-09 06:05:13+00:00,[],
11653,https://github.com/ECE581-2023-WINTER/final_project_5.git,2023-03-03 17:48:21+00:00,,0,ECE581-2023-WINTER/final_project_5,609255442,SystemVerilog,final_project_5,227665,0,2023-03-23 03:34:11+00:00,[],
11654,https://github.com/Future-2100/alu.git,2023-02-27 03:23:51+00:00,,0,Future-2100/alu,606974185,SystemVerilog,alu,9,0,2023-02-27 04:43:35+00:00,[],
11655,https://github.com/abclop99/cse-141l-project.git,2023-02-26 21:49:04+00:00,Design an ISA and processor for a CSE 141L,0,abclop99/cse-141l-project,606898756,SystemVerilog,cse-141l-project,47248,0,2023-08-11 02:37:19+00:00,[],
11656,https://github.com/alex2kameboss/TSC.git,2023-02-21 10:29:09+00:00,TSC labs sources,0,alex2kameboss/TSC,604565228,SystemVerilog,TSC,8010,0,2023-03-07 11:34:45+00:00,[],
11657,https://github.com/JaishreeJ/System-Verilog.git,2023-02-21 07:34:52+00:00,,0,JaishreeJ/System-Verilog,604501535,SystemVerilog,System-Verilog,238,0,2023-02-21 07:36:32+00:00,[],
11658,https://github.com/InsideFra/RISCV-Lite.git,2023-02-17 13:28:49+00:00,A first implementation of a RISC V Processor,0,InsideFra/RISCV-Lite,603030983,SystemVerilog,RISCV-Lite,41,0,2023-06-19 16:28:59+00:00,[],https://api.github.com/licenses/gpl-3.0
11659,https://github.com/tartunian/digital-design-verification.git,2023-02-22 07:18:03+00:00,This project included verification testbenches for some simple DUTs.,0,tartunian/digital-design-verification,604977286,SystemVerilog,digital-design-verification,28,0,2023-02-27 20:08:54+00:00,[],
11660,https://github.com/openhwgroup/cva5-accelerators.git,2023-02-13 01:00:55+00:00,,3,openhwgroup/cva5-accelerators,600920604,SystemVerilog,cva5-accelerators,4341,0,2023-12-03 17:51:55+00:00,[],
11661,https://github.com/Codrad/TSC.git,2023-02-20 08:19:25+00:00,,0,Codrad/TSC,604048309,SystemVerilog,TSC,8021,0,2023-03-06 09:34:22+00:00,[],
11662,https://github.com/RobertZ2011/mariscal.git,2023-02-17 01:58:38+00:00,A reference implementation of the BiBe32 ISA,0,RobertZ2011/mariscal,602816462,SystemVerilog,mariscal,448,0,2023-02-17 02:19:38+00:00,[],https://api.github.com/licenses/bsd-3-clause
11663,https://github.com/Nawras-Ahamed/100DaysOfRTL.git,2023-04-03 16:33:49+00:00,A Personal hobby project to learn digital design and Verilog ,0,Nawras-Ahamed/100DaysOfRTL,623073703,SystemVerilog,100DaysOfRTL,1224,0,2024-03-04 15:25:30+00:00,[],
11664,https://github.com/abhigna97/Last-Level-Cache-design-using-System-Verilog.git,2023-03-31 19:36:43+00:00,,0,abhigna97/Last-Level-Cache-design-using-System-Verilog,621968385,SystemVerilog,Last-Level-Cache-design-using-System-Verilog,205,0,2024-03-15 03:38:42+00:00,[],
11665,https://github.com/nil1g18/Digital-Signal-Repeater-Phase-locked-Loop.git,2023-04-09 11:45:23+00:00,SystemVerilog Digital Signal Repeater,0,nil1g18/Digital-Signal-Repeater-Phase-locked-Loop,625526326,SystemVerilog,Digital-Signal-Repeater-Phase-locked-Loop,26,0,2023-04-16 11:04:52+00:00,[],https://api.github.com/licenses/apache-2.0
11666,https://github.com/JohanelSteve/Introduccion-en-HDL.git,2023-04-05 03:09:50+00:00,Este proyecto forma parte del aprendizaje para introduccirse en el lenguaje de descripcion de hardware.,0,JohanelSteve/Introduccion-en-HDL,623761775,SystemVerilog,Introduccion-en-HDL,108,0,2023-05-04 11:59:55+00:00,[],
11667,https://github.com/Nagarjun444/constraints.git,2023-02-12 05:41:34+00:00,interview questions on constraints ,0,Nagarjun444/constraints,600643155,SystemVerilog,constraints,13,0,2023-07-29 14:46:33+00:00,[],
11668,https://github.com/mmx-cmu/632_trng.git,2023-02-22 01:01:17+00:00,trng,0,mmx-cmu/632_trng,604874982,SystemVerilog,632_trng,76,0,2023-02-22 01:02:48+00:00,[],
11669,https://github.com/shubhamsavita98/DV_HW2.git,2023-02-28 08:20:11+00:00,,0,shubhamsavita98/DV_HW2,607563978,SystemVerilog,DV_HW2,2,0,2023-07-13 21:54:27+00:00,[],
11670,https://github.com/akashdevuni/PIPELINED_FIR_FILTER.git,2023-02-15 16:03:21+00:00,,0,akashdevuni/PIPELINED_FIR_FILTER,602156355,SystemVerilog,PIPELINED_FIR_FILTER,135,0,2023-02-15 16:03:57+00:00,[],
11671,https://github.com/NathanHirata/BLACKJACK-FPGA.git,2023-02-14 07:35:51+00:00,,0,NathanHirata/BLACKJACK-FPGA,601498356,SystemVerilog,BLACKJACK-FPGA,45,0,2023-02-14 07:37:00+00:00,[],
11672,https://github.com/enaronvie/Homework-1.git,2023-02-19 00:02:58+00:00,,0,enaronvie/Homework-1,603581437,SystemVerilog,Homework-1,12,0,2023-02-19 08:57:44+00:00,[],
11673,https://github.com/Teodor57/TSC.git,2023-02-20 06:30:15+00:00,Laborator TSC,0,Teodor57/TSC,604013061,SystemVerilog,TSC,8179,0,2023-03-19 20:12:38+00:00,[],
11674,https://github.com/Atti19/TSC.git,2023-02-20 08:20:35+00:00,,0,Atti19/TSC,604048723,SystemVerilog,TSC,8052,0,2023-03-06 09:25:03+00:00,[],
11675,https://github.com/eftikoro/CompArchCourseDUTH.git,2023-03-15 16:11:50+00:00,,0,eftikoro/CompArchCourseDUTH,614457699,SystemVerilog,CompArchCourseDUTH,24,0,2023-03-16 18:50:24+00:00,[],
11676,https://github.com/MameMame777/Iverilog.git,2023-03-19 06:12:51+00:00,,0,MameMame777/Iverilog,615943504,SystemVerilog,Iverilog,4,0,2023-03-19 06:12:59+00:00,[],
11677,https://github.com/dougr33d/vroom.git,2023-03-18 16:17:36+00:00,RISC-V core,0,dougr33d/vroom,615768940,SystemVerilog,vroom,128,0,2023-05-12 14:37:06+00:00,[],
11678,https://github.com/SE-O22-ITESO/p2-single-cycle-jorge_padilla.git,2023-03-30 22:22:35+00:00,p2-single-cycle-jorge_padilla created by GitHub Classroom,0,SE-O22-ITESO/p2-single-cycle-jorge_padilla,621549120,SystemVerilog,p2-single-cycle-jorge_padilla,387647,0,2023-03-30 22:50:30+00:00,[],
11679,https://github.com/nick71sayers/Elec-241-CW.git,2023-03-29 19:15:15+00:00,,0,nick71sayers/Elec-241-CW,620989980,SystemVerilog,Elec-241-CW,5,0,2023-03-29 21:39:32+00:00,[],
11680,https://github.com/Parretto/fald.git,2023-03-02 08:43:32+00:00,Full array local dimming,0,Parretto/fald,608547133,SystemVerilog,fald,17,0,2023-03-02 09:12:50+00:00,[],
11681,https://github.com/jadhavsiid/3-bit-Full-Subtracter--EDA_Code.git,2023-03-28 15:23:25+00:00,Code for 3 bit Full Subtracter of EDA Playground for Mini Project 2B (Sem-6),0,jadhavsiid/3-bit-Full-Subtracter--EDA_Code,620387023,SystemVerilog,3-bit-Full-Subtracter--EDA_Code,2,0,2023-03-28 15:24:10+00:00,[],
11682,https://github.com/ae-lopez16/18224.git,2023-04-04 02:14:50+00:00,,0,ae-lopez16/18224,623253666,SystemVerilog,18224,7,0,2023-04-04 02:18:27+00:00,[],
11683,https://github.com/lsjbh45/processor-design.git,2023-03-09 08:36:21+00:00,"Designing simple 5-stage pipelined RISC-V processor (Lab assignment of ""Computer Architecture"" class)",0,lsjbh45/processor-design,611638659,SystemVerilog,processor-design,200,0,2023-03-10 13:57:45+00:00,"['computer-architecture', 'pipeline-processor', 'processor-design', 'systemverilog']",
11684,https://github.com/daisukex/sc-sim-pkg.git,2023-03-09 04:33:33+00:00,Simulation Package,0,daisukex/sc-sim-pkg,611565109,SystemVerilog,sc-sim-pkg,4,0,2023-03-09 05:02:54+00:00,[],
11685,https://github.com/SimonFV/sfallas_digital_design_lab_2023.git,2023-02-22 19:30:33+00:00,Repositorio para los laboratorios del curso Taller de Diseño Digital.,0,SimonFV/sfallas_digital_design_lab_2023,605257639,SystemVerilog,sfallas_digital_design_lab_2023,89617,0,2023-05-09 00:59:32+00:00,[],
11686,https://github.com/Adhi-cyber/System_Verilog.git,2023-02-23 05:58:47+00:00,,0,Adhi-cyber/System_Verilog,605426321,SystemVerilog,System_Verilog,629,0,2023-02-23 06:09:27+00:00,[],
11687,https://github.com/cse140l-wi23/lab4_starter.git,2023-03-01 17:37:06+00:00,,2,cse140l-wi23/lab4_starter,608281491,SystemVerilog,lab4_starter,8,0,2023-03-01 17:41:23+00:00,[],
11688,https://github.com/panther03/ECE-554-ClassProject.git,2023-03-03 21:26:50+00:00,Spring 2023 ECE 554 Class Project - Wisconsin-Instruments WI-23 Graphing Calculator.,0,panther03/ECE-554-ClassProject,609321837,SystemVerilog,ECE-554-ClassProject,22659,0,2023-05-09 14:34:35+00:00,[],
11689,https://github.com/otterice/JAYprocessor.git,2023-03-13 02:58:49+00:00,,0,otterice/JAYprocessor,613167211,SystemVerilog,JAYprocessor,844,0,2023-03-13 03:03:36+00:00,[],
11690,https://github.com/SadPenguin1/Thi-t-k-m-ph-ng-b-x-l-RISC-V-32I-b-ng-ng-n-ng-l-p-tr-nh-ph-n-c-ng-Verilo.git,2023-03-10 13:18:55+00:00,,0,SadPenguin1/Thi-t-k-m-ph-ng-b-x-l-RISC-V-32I-b-ng-ng-n-ng-l-p-tr-nh-ph-n-c-ng-Verilo,612223926,SystemVerilog,Thi-t-k-m-ph-ng-b-x-l-RISC-V-32I-b-ng-ng-n-ng-l-p-tr-nh-ph-n-c-ng-Verilo,1570,0,2023-03-10 13:24:06+00:00,[],
11691,https://github.com/Palavelli-Naidu/Braun_multiplier.git,2023-03-11 05:13:16+00:00,"It is a 4 bit multiplier, which I verified the function coverage using UVM",0,Palavelli-Naidu/Braun_multiplier,612491781,SystemVerilog,Braun_multiplier,157,0,2023-03-11 05:24:36+00:00,[],
11692,https://github.com/rvsv39/module-practice.git,2023-03-10 07:04:20+00:00,"Small rtl modules, for practice and interview preparations.",0,rvsv39/module-practice,612087113,SystemVerilog,module-practice,7,0,2023-03-14 11:27:27+00:00,[],
11693,https://github.com/OscarAraya18/oaraya_computer_architecture_1_2023.git,2023-03-14 03:06:36+00:00,,0,OscarAraya18/oaraya_computer_architecture_1_2023,613670431,SystemVerilog,oaraya_computer_architecture_1_2023,27024,0,2023-04-12 11:39:28+00:00,[],
11694,https://github.com/DanUCSD/lab5-starter.git,2023-03-11 21:43:23+00:00,,0,DanUCSD/lab5-starter,612752819,SystemVerilog,lab5-starter,12,0,2023-03-11 21:44:28+00:00,[],
11695,https://github.com/tsepanx/nand2tetris-solutions.git,2023-03-14 20:05:46+00:00,,0,tsepanx/nand2tetris-solutions,614058778,SystemVerilog,nand2tetris-solutions,52,0,2023-12-18 19:43:09+00:00,[],
11696,https://github.com/allainerain/MIPS-scp-extension.git,2023-04-03 07:22:07+00:00,👩‍💻 Extending the instruction set of MIPS single cycle processor using System Verilog,0,allainerain/MIPS-scp-extension,622845227,SystemVerilog,MIPS-scp-extension,22,0,2024-03-27 08:33:52+00:00,[],
11697,https://github.com/jayanthsk23/Project.git,2023-03-02 18:17:18+00:00,,0,jayanthsk23/Project,608782802,SystemVerilog,Project,13,0,2023-03-04 06:25:41+00:00,[],
11698,https://github.com/milanlazic97/-SPI.git,2023-03-02 15:42:29+00:00, Verification of Serial Peripheral Interface (SPI),0,milanlazic97/-SPI,608718078,SystemVerilog,-SPI,4,0,2023-03-02 15:43:16+00:00,[],
11699,https://github.com/OCT-FPGA/P4Framework.git,2023-03-13 19:00:24+00:00,A framework for integrating P4 with opennic-shell,0,OCT-FPGA/P4Framework,613534340,SystemVerilog,P4Framework,13524,0,2023-03-13 20:56:09+00:00,[],
11700,https://github.com/weak-kid/verilog-cache.git,2023-03-16 21:20:08+00:00,,0,weak-kid/verilog-cache,615052503,SystemVerilog,verilog-cache,2286,0,2023-03-16 21:22:08+00:00,[],
11701,https://github.com/milanlazic97/systemverilog.git,2023-02-26 16:20:39+00:00,verification of D flip-flop,0,milanlazic97/systemverilog,606808058,SystemVerilog,systemverilog,5,0,2023-02-26 16:29:05+00:00,[],
11702,https://github.com/DanUCSD/lab4-starter.git,2023-03-04 20:54:04+00:00,,0,DanUCSD/lab4-starter,609657493,SystemVerilog,lab4-starter,32,0,2023-03-04 20:55:32+00:00,[],
11703,https://github.com/simon27gr/LAB.git,2023-04-05 22:00:28+00:00,,0,simon27gr/LAB,624162578,SystemVerilog,LAB,5372,0,2023-04-05 22:08:26+00:00,[],
11704,https://github.com/shenalekanayaka/chipdev_questions.git,2023-04-08 16:55:25+00:00,Collection of System Verilog designs for Chipdev.io questions,0,shenalekanayaka/chipdev_questions,625292083,SystemVerilog,chipdev_questions,1,0,2023-04-08 17:05:15+00:00,[],
11705,https://github.com/samdeutrom/uart_rx.git,2023-04-09 09:08:57+00:00,SystemVerilog modules for receiving a word over UART,0,samdeutrom/uart_rx,625488237,SystemVerilog,uart_rx,16,0,2023-04-09 09:09:03+00:00,[],https://api.github.com/licenses/gpl-3.0
11706,https://github.com/shubhamsavita98/DV_HW6.git,2023-04-09 07:19:39+00:00,,0,shubhamsavita98/DV_HW6,625462971,SystemVerilog,DV_HW6,3,0,2023-07-13 21:52:48+00:00,[],
11707,https://github.com/AzofeifaJ/Diseno_Logico-Proyecto_2.git,2023-04-02 23:51:35+00:00, desarrollo de un sistema en FPGA para explorar el uso de periféricos de la Nexys4/Basys3 como el display de siete segmentos y los switches. Es mandatorio leer los respectivos apartados del manual de la tarjeta de desarrollo. Para que el usuario por medio de teclas ingrese un numero en binario y este el FPGA realice una transformación de base ,0,AzofeifaJ/Diseno_Logico-Proyecto_2,622728027,SystemVerilog,Diseno_Logico-Proyecto_2,330,0,2023-05-04 04:54:14+00:00,[],https://api.github.com/licenses/mit
11708,https://github.com/aileneiioana/TSC.git,2023-02-20 06:35:43+00:00,,0,aileneiioana/TSC,604014689,SystemVerilog,TSC,8151,0,2023-05-11 16:05:05+00:00,"['alu', 'checker', 'coverage', 'systemverilog', 'verification']",
11709,https://github.com/planetofwar/SecureBoot.git,2023-02-19 18:59:18+00:00,,0,planetofwar/SecureBoot,603854209,SystemVerilog,SecureBoot,99498,0,2023-06-26 17:06:40+00:00,[],https://api.github.com/licenses/apache-2.0
11710,https://github.com/ibrahimhamada/Stopwatch-System-using-HDL.git,2023-02-20 15:53:13+00:00,"The project aims to design, implement, and verify the functionality of a stopwatch system using HDL (SystemVerilog IEEE 1800-2017), the De0-Nano FPGA development platform, and the necessary supporting hardware.",0,ibrahimhamada/Stopwatch-System-using-HDL,604228061,SystemVerilog,Stopwatch-System-using-HDL,15607,0,2023-02-20 16:12:40+00:00,[],
11711,https://github.com/madhams/ELEC422.git,2023-02-21 20:25:49+00:00,,0,madhams/ELEC422,604802239,SystemVerilog,ELEC422,9344,0,2023-04-14 19:43:02+00:00,[],
11712,https://github.com/truebogdan/TSC.git,2023-02-21 10:33:40+00:00,laboratoare TSC,0,truebogdan/TSC,604566896,SystemVerilog,TSC,8194,0,2023-03-07 11:38:02+00:00,[],
11713,https://github.com/robertcosminn/TSC.git,2023-02-21 10:42:12+00:00,,0,robertcosminn/TSC,604570076,SystemVerilog,TSC,9416,0,2023-03-07 12:02:30+00:00,[],
11714,https://github.com/Vinupriya-2502/system-verilog.git,2023-02-21 06:26:03+00:00,,0,Vinupriya-2502/system-verilog,604478741,SystemVerilog,system-verilog,245,0,2023-02-21 06:32:33+00:00,[],
11715,https://github.com/eeweather/593DesignRev0.7.git,2023-02-23 23:24:36+00:00,Multicore ALU593 Project Rev0.7,0,eeweather/593DesignRev0.7,605798673,SystemVerilog,593DesignRev0.7,1475,0,2023-02-25 00:17:00+00:00,[],
11716,https://github.com/mmerioles/ECE111_Final_Project.git,2023-03-22 22:48:26+00:00,,0,mmerioles/ECE111_Final_Project,617689648,SystemVerilog,ECE111_Final_Project,32,0,2023-03-24 21:30:46+00:00,[],
11717,https://github.com/gsmark36/very-simple-riscv-core.git,2023-03-23 10:56:32+00:00,Very simple RISC-V processor core that supports RV32I. Extended with in-order superscalar.,0,gsmark36/very-simple-riscv-core,617902022,SystemVerilog,very-simple-riscv-core,1301,0,2023-07-24 19:32:41+00:00,"['risc-v', 'undergraduate-project', 'educational-project']",https://api.github.com/licenses/mit
11718,https://github.com/gTipSchool/ELEC4907_Hardware.git,2023-03-06 17:40:03+00:00,Hardware files (SV RTL and interfacing Python scripts) for the Neuromorphic Hardware 4th year project at Carleton University,1,gTipSchool/ELEC4907_Hardware,610399767,SystemVerilog,ELEC4907_Hardware,12325,0,2023-03-06 18:04:57+00:00,[],
11719,https://github.com/vsdmitri/processor-cache-memory-emulator.git,2023-03-19 17:03:50+00:00,,0,vsdmitri/processor-cache-memory-emulator,616119491,SystemVerilog,processor-cache-memory-emulator,7053,0,2023-03-19 17:05:37+00:00,[],
11720,https://github.com/Moh3000/CCLU_DV-project.git,2023-03-10 12:34:56+00:00,,0,Moh3000/CCLU_DV-project,612206661,SystemVerilog,CCLU_DV-project,581,0,2023-03-10 13:13:22+00:00,[],
11721,https://github.com/Tuareau/cordic.git,2023-03-30 11:56:05+00:00,Realization of CORDIC algorithm for FPGA,0,Tuareau/cordic,621305026,SystemVerilog,cordic,4,0,2023-08-01 20:36:00+00:00,[],
11722,https://github.com/perriestudios/RISC-V32I-Processor.git,2023-02-17 00:30:08+00:00,A 32 bit RISC-V Integer Type Processor design using SystemVerilog,0,perriestudios/RISC-V32I-Processor,602794535,SystemVerilog,RISC-V32I-Processor,7,0,2023-02-17 00:39:23+00:00,[],
11723,https://github.com/JaishreeJ/UVM_project_1.git,2023-03-18 12:19:15+00:00,,0,JaishreeJ/UVM_project_1,615697611,SystemVerilog,UVM_project_1,13,0,2023-03-18 12:34:34+00:00,[],
11724,https://github.com/HassanKhaled11/Multi_Mode_Counter.git,2023-03-19 21:09:05+00:00,,0,HassanKhaled11/Multi_Mode_Counter,616186426,SystemVerilog,Multi_Mode_Counter,1351,0,2023-03-19 21:19:15+00:00,[],
11725,https://github.com/djhugroo/PongGame.git,2023-02-09 09:36:51+00:00,,0,djhugroo/PongGame,599508427,SystemVerilog,PongGame,181,0,2023-02-09 09:38:23+00:00,[],
11726,https://github.com/djhugroo/HighRiscSystem.git,2023-02-09 09:33:58+00:00,,0,djhugroo/HighRiscSystem,599507381,SystemVerilog,HighRiscSystem,2,0,2023-02-09 09:35:39+00:00,[],
11727,https://github.com/rajathpi/assignment.git,2023-02-09 12:56:49+00:00,This repo is used to store files for assignments,0,rajathpi/assignment,599582219,SystemVerilog,assignment,164287,0,2023-02-09 15:42:52+00:00,[],
11728,https://github.com/visnjicm/verilog-traffic-light.git,2023-03-22 22:28:26+00:00,Verilog implementation of a traffic light Finite State Machine (FSM).,0,visnjicm/verilog-traffic-light,617684589,SystemVerilog,verilog-traffic-light,12,0,2024-01-30 18:48:25+00:00,"['fsm', 'hdl', 'verilog']",
11729,https://github.com/vishwajeet-sinh/Daul-Port-RAM-Verification.git,2023-02-18 13:43:06+00:00,Daul port ram,0,vishwajeet-sinh/Daul-Port-RAM-Verification,603430000,SystemVerilog,Daul-Port-RAM-Verification,95,0,2024-02-21 09:04:32+00:00,[],
11730,https://github.com/Eduard2609/TSC.git,2023-02-21 10:41:09+00:00,Repository pentru laboratorul de TSC,0,Eduard2609/TSC,604569681,SystemVerilog,TSC,8077,0,2023-03-07 11:40:06+00:00,[],
11731,https://github.com/q1e123/TSC-Lab.git,2023-02-21 10:33:47+00:00,,0,q1e123/TSC-Lab,604566935,SystemVerilog,TSC-Lab,8052,0,2023-05-03 15:29:33+00:00,[],https://api.github.com/licenses/agpl-3.0
11732,https://github.com/Chico0212/Systemverilog_PSD.git,2023-02-24 12:21:35+00:00,Repositório da disciplina de PSD,0,Chico0212/Systemverilog_PSD,606020672,SystemVerilog,Systemverilog_PSD,6,0,2023-03-04 01:06:04+00:00,[],
11734,https://github.com/acoskuner500/CSCE714_Team6.git,2023-02-10 03:39:26+00:00,Version control for CSCE 714 (Team 6) labs,0,acoskuner500/CSCE714_Team6,599868392,SystemVerilog,CSCE714_Team6,9354,0,2023-02-19 00:43:23+00:00,[],
11735,https://github.com/Yr-Nemsis/cse141l_wdnmd.git,2023-02-10 05:26:08+00:00,,0,Yr-Nemsis/cse141l_wdnmd,599892946,SystemVerilog,cse141l_wdnmd,1017,0,2023-03-13 19:25:10+00:00,[],
11736,https://github.com/varunven/riscv-processor.git,2023-02-18 07:24:35+00:00,risc-v-processor 32 bits written in SystemVerilog,0,varunven/riscv-processor,603333294,SystemVerilog,riscv-processor,17,0,2023-02-18 07:25:33+00:00,[],
11737,https://github.com/FpgaPublish/Simulate.git,2023-02-17 15:07:46+00:00,用于仿真的学习,0,FpgaPublish/Simulate,603074304,SystemVerilog,Simulate,68,0,2023-07-29 18:41:42+00:00,[],
11738,https://github.com/davidcursaru/TSC.git,2023-02-27 06:13:58+00:00,,0,davidcursaru/TSC,607017894,SystemVerilog,TSC,8248,0,2023-03-06 07:35:29+00:00,[],
11739,https://github.com/ASHIWINIPATHAK/Aes_encryption.git,2023-04-15 13:37:16+00:00,,0,ASHIWINIPATHAK/Aes_encryption,628287949,SystemVerilog,Aes_encryption,3434,0,2023-04-15 13:41:14+00:00,[],
11740,https://github.com/nandgyf/ELEC527_Vending_Machine.git,2023-04-16 06:06:50+00:00,,0,nandgyf/ELEC527_Vending_Machine,628499176,SystemVerilog,ELEC527_Vending_Machine,16087,0,2023-04-16 06:31:19+00:00,[],
11741,https://github.com/al719/ATM.git,2023-04-02 19:33:59+00:00,implement ATM bank core with Verilog HDL,0,al719/ATM,622670495,SystemVerilog,ATM,867,0,2023-04-02 19:50:16+00:00,[],
11742,https://github.com/2023-Spring-ECE4278/lab5.git,2023-04-03 00:42:53+00:00,,0,2023-Spring-ECE4278/lab5,622738205,SystemVerilog,lab5,11,0,2023-04-03 00:44:29+00:00,[],
11743,https://github.com/bluewww/verilator-exploration.git,2023-04-01 22:55:02+00:00,Explore various verilator 5 features.,0,bluewww/verilator-exploration,622371442,SystemVerilog,verilator-exploration,2,0,2023-04-01 22:56:41+00:00,[],https://api.github.com/licenses/mit
11744,https://github.com/TEAmofey/spbsu-comp-arch22-lab2-TEAmofey.git,2023-04-02 19:28:58+00:00,,0,TEAmofey/spbsu-comp-arch22-lab2-TEAmofey,622669242,SystemVerilog,spbsu-comp-arch22-lab2-TEAmofey,727,0,2023-04-02 19:30:39+00:00,[],
11745,https://github.com/SamShankle/FinalProject.git,2023-04-05 04:24:39+00:00,,0,SamShankle/FinalProject,623779710,SystemVerilog,FinalProject,5326,0,2023-04-05 04:24:46+00:00,[],
11746,https://github.com/sumiravishan/Multiple-Memory-Designs-and-UVM-coverage-based-Verification.git,2023-04-13 05:38:46+00:00,Multiple Memory Simulataneous Testing with uvm + functional coverage + constrained randomization - For Reference purposes,0,sumiravishan/Multiple-Memory-Designs-and-UVM-coverage-based-Verification,627263672,SystemVerilog,Multiple-Memory-Designs-and-UVM-coverage-based-Verification,60,0,2023-04-13 06:20:49+00:00,[],https://api.github.com/licenses/gpl-3.0
11747,https://github.com/Goku2699/Verification_comb_adder.git,2023-04-11 14:38:08+00:00,,0,Goku2699/Verification_comb_adder,626474048,SystemVerilog,Verification_comb_adder,3,0,2023-04-11 14:54:09+00:00,[],
11748,https://github.com/yosapkota/1-MHz-Sine-Wave.git,2023-04-13 19:21:00+00:00,Variable high frequency three phase sine wave generator using VHDL and Vivado for GaN inverters,0,yosapkota/1-MHz-Sine-Wave,627586521,SystemVerilog,1-MHz-Sine-Wave,31058,0,2023-04-13 19:24:24+00:00,[],
11749,https://github.com/michaelblakeferguson/Verilog.git,2023-03-06 09:38:54+00:00,,0,michaelblakeferguson/Verilog,610196780,SystemVerilog,Verilog,3,0,2023-03-06 09:39:19+00:00,[],
11750,https://github.com/Carlos12001/sumador_sv.git,2023-03-13 21:17:44+00:00,,0,Carlos12001/sumador_sv,613581507,SystemVerilog,sumador_sv,3,0,2023-03-13 21:17:55+00:00,[],
11751,https://github.com/LayzRay/Architecture-of-microprocessor-systems-and-tools.git,2023-03-10 10:17:02+00:00,,0,LayzRay/Architecture-of-microprocessor-systems-and-tools,612156252,SystemVerilog,Architecture-of-microprocessor-systems-and-tools,472,0,2023-09-19 21:16:17+00:00,[],
11752,https://github.com/calebturner603/Lab3.git,2023-03-20 18:58:58+00:00,,0,calebturner603/Lab3,616627099,SystemVerilog,Lab3,6,0,2023-03-20 19:00:11+00:00,[],
11753,https://github.com/Shaheer-Ilyas2/RISC-V.git,2023-04-03 08:18:05+00:00,This repository contains files for 3-stage RISC-V processor. The processor is designed using the System-Verilog and has been synthesized and tested on Questa Sim and Xilinx FPGA.,1,Shaheer-Ilyas2/RISC-V,622867083,SystemVerilog,RISC-V,11,0,2023-04-03 08:21:36+00:00,[],
11754,https://github.com/chenlonglong/lab_VD.git,2023-04-06 05:44:30+00:00,the is ATP modulized lecture lab2 Viterbi decoding for Pair-HMM,0,chenlonglong/lab_VD,624275150,SystemVerilog,lab_VD,58,0,2023-04-06 07:39:15+00:00,[],
11755,https://github.com/AndyWuu1/HW6.git,2023-04-04 23:19:59+00:00,,0,AndyWuu1/HW6,623708817,SystemVerilog,HW6,6,0,2023-04-05 00:29:54+00:00,[],
11756,https://github.com/GrGabriela/AM2940.git,2023-04-04 19:53:03+00:00,DMA Address Generator that generates sequential memory addresses for use in the sequential transfer of data to or from a memory,0,GrGabriela/AM2940,623649974,SystemVerilog,AM2940,15,0,2023-04-04 19:55:02+00:00,[],
11757,https://github.com/Hadi-loo/Computer-Architecture-Course.git,2023-02-08 09:43:26+00:00,,0,Hadi-loo/Computer-Architecture-Course,599023900,SystemVerilog,Computer-Architecture-Course,4019,0,2023-02-08 09:52:44+00:00,[],https://api.github.com/licenses/mit
11758,https://github.com/ryanleontini/OTTER.git,2023-02-10 21:41:42+00:00,A 32-Bit RISC-V Microcontroller,0,ryanleontini/OTTER,600225382,SystemVerilog,OTTER,684,0,2023-02-22 19:19:38+00:00,[],
11759,https://github.com/mddanish05/System-Verilog.git,2023-02-12 12:07:17+00:00,,0,mddanish05/System-Verilog,600725550,SystemVerilog,System-Verilog,240,0,2023-02-12 12:09:51+00:00,[],
11760,https://github.com/AbdoWise-z/AES-FSM-128-192-256-.git,2023-03-01 13:12:43+00:00,and FSM to encrypt / decrypt in AES format,1,AbdoWise-z/AES-FSM-128-192-256-,608167559,SystemVerilog,AES-FSM-128-192-256-,27,0,2023-03-01 13:13:55+00:00,[],
11761,https://github.com/jesus154b/lAB4.git,2023-03-08 22:04:17+00:00,,0,jesus154b/lAB4,611464921,SystemVerilog,lAB4,21,0,2023-03-09 00:10:15+00:00,[],
11762,https://github.com/Mell0r/Simple-CPU-cache-memory-model.git,2023-03-18 09:19:07+00:00,"Study project on ""Computer architecture"" course",0,Mell0r/Simple-CPU-cache-memory-model,615650851,SystemVerilog,Simple-CPU-cache-memory-model,2134,0,2023-03-18 09:31:51+00:00,[],
11763,https://github.com/ArlanCode/Projeto-de-Sistemas-Digitais.git,2023-03-16 13:25:25+00:00,Projetos na linguagem de Hardware SystemVerilog.,0,ArlanCode/Projeto-de-Sistemas-Digitais,614862681,SystemVerilog,Projeto-de-Sistemas-Digitais,6,0,2023-03-16 13:29:08+00:00,[],
11764,https://github.com/Vk1708/Independent-Component-Analysis.git,2023-03-15 16:36:31+00:00,,0,Vk1708/Independent-Component-Analysis,614468096,SystemVerilog,Independent-Component-Analysis,9,0,2023-03-15 16:40:27+00:00,[],
11765,https://github.com/amiteshkr63/tgit.git,2023-02-11 16:33:14+00:00,Sushant mere ko git sikha rha h,0,amiteshkr63/tgit,600484520,SystemVerilog,tgit,1,0,2023-02-11 16:50:55+00:00,[],
11766,https://github.com/Agfra167/sv_scope.git,2023-02-17 05:02:22+00:00,,0,Agfra167/sv_scope,602861995,SystemVerilog,sv_scope,2,0,2023-02-17 05:04:42+00:00,[],
11767,https://github.com/Drakon-top/ComputerArchitecture.git,2023-02-17 11:37:39+00:00,,0,Drakon-top/ComputerArchitecture,602990966,SystemVerilog,ComputerArchitecture,1963,0,2023-02-18 08:22:29+00:00,[],
11768,https://github.com/jesus154b/lab3.git,2023-02-15 20:28:51+00:00,,0,jesus154b/lab3,602255212,SystemVerilog,lab3,29,0,2023-02-16 05:27:07+00:00,[],
11769,https://github.com/S-E-N-S-O-H-A-M/APB-Protocol.git,2023-04-14 11:44:41+00:00,,0,S-E-N-S-O-H-A-M/APB-Protocol,627873234,SystemVerilog,APB-Protocol,175,0,2023-07-04 04:24:50+00:00,[],https://api.github.com/licenses/apache-2.0
11770,https://github.com/Neptunya/ee-271.git,2023-04-14 08:20:00+00:00,,0,Neptunya/ee-271,627799559,SystemVerilog,ee-271,39680,0,2023-10-10 02:57:01+00:00,[],
11771,https://github.com/xinzhuo20/ECE385-SP23.git,2023-04-15 02:33:23+00:00,,0,xinzhuo20/ECE385-SP23,628135296,SystemVerilog,ECE385-SP23,214572,0,2023-05-03 18:43:05+00:00,[],
11772,https://github.com/Ambika14-3/AHB-Protocol-SystemVerilog.git,2023-04-15 10:51:09+00:00,,0,Ambika14-3/AHB-Protocol-SystemVerilog,628244342,SystemVerilog,AHB-Protocol-SystemVerilog,2027,0,2023-04-15 15:44:53+00:00,[],
11773,https://github.com/Krupski37/SPI-Verilog.git,2023-04-01 14:36:15+00:00,,0,Krupski37/SPI-Verilog,622240956,SystemVerilog,SPI-Verilog,1963,0,2023-04-08 06:43:45+00:00,[],
11774,https://github.com/ncrouch1/EE-CSE-469.git,2023-03-31 23:05:51+00:00,Repo for collaborative design projects for Computer Architecture 1,0,ncrouch1/EE-CSE-469,622022625,SystemVerilog,EE-CSE-469,19307,0,2023-05-01 18:27:36+00:00,[],
11775,https://github.com/Amirhosseinbayat/ComputerArchitecture-Course.git,2023-04-07 13:51:18+00:00,Computer Architecture course - winter/spring 2023,1,Amirhosseinbayat/ComputerArchitecture-Course,624883224,SystemVerilog,ComputerArchitecture-Course,76103,0,2023-06-27 10:12:26+00:00,[],
11776,https://github.com/2023-Spring-ECE4278/project1.git,2023-04-08 10:07:49+00:00,,0,2023-Spring-ECE4278/project1,625181327,SystemVerilog,project1,13,0,2023-04-17 04:18:52+00:00,[],
11777,https://github.com/andreeahaldan/TSC.git,2023-02-20 07:12:55+00:00,,0,andreeahaldan/TSC,604026092,SystemVerilog,TSC,16112,0,2023-03-06 09:24:12+00:00,[],
11778,https://github.com/MarcEftimie/FPGA-camera-interface.git,2023-03-02 18:17:48+00:00,,0,MarcEftimie/FPGA-camera-interface,608782988,SystemVerilog,FPGA-camera-interface,1995,0,2023-04-16 23:42:01+00:00,[],
11779,https://github.com/BrianMere/CPE233FinalProject.git,2023-03-13 21:53:01+00:00,Hi,0,BrianMere/CPE233FinalProject,613591466,SystemVerilog,CPE233FinalProject,722,0,2023-03-20 00:27:32+00:00,[],
11780,https://github.com/HDS0211/Project_1-One-Dimensional-Convolution-using-SystemVerilog.git,2023-03-11 21:41:16+00:00,,0,HDS0211/Project_1-One-Dimensional-Convolution-using-SystemVerilog,612752398,SystemVerilog,Project_1-One-Dimensional-Convolution-using-SystemVerilog,3396,0,2023-03-11 22:28:46+00:00,[],
11781,https://github.com/Chuning99/Encryption.git,2023-02-21 00:34:09+00:00,,0,Chuning99/Encryption,604388496,SystemVerilog,Encryption,4,0,2023-02-21 00:35:34+00:00,[],
11782,https://github.com/Chuning99/Lab5-Decryption.git,2023-02-21 00:36:27+00:00,,0,Chuning99/Lab5-Decryption,604388966,SystemVerilog,Lab5-Decryption,3,0,2023-02-21 00:37:40+00:00,[],
11783,https://github.com/EngineersBox/Warp-Scheduler.git,2023-02-22 12:30:50+00:00,Verilog implementation of a GPU warp scheduler with warp compaction,0,EngineersBox/Warp-Scheduler,605091574,SystemVerilog,Warp-Scheduler,1,0,2023-02-23 10:45:17+00:00,[],
11784,https://github.com/karthdjd/SYSTEM-VERILOG.git,2023-02-22 06:56:51+00:00,,0,karthdjd/SYSTEM-VERILOG,604970742,SystemVerilog,SYSTEM-VERILOG,236,0,2023-02-23 10:18:04+00:00,[],
11785,https://github.com/Kaigard/B8.git,2023-03-15 12:27:22+00:00,双发射处理器,0,Kaigard/B8,614356033,SystemVerilog,B8,98,0,2023-03-22 07:41:04+00:00,[],
11786,https://github.com/lathifsharieff/AXIlite_VDMA.git,2023-03-15 08:44:34+00:00,,0,lathifsharieff/AXIlite_VDMA,614268531,SystemVerilog,AXIlite_VDMA,7,0,2023-03-15 08:45:18+00:00,[],
11787,https://github.com/mmmmarryyy/processor_cache_memory_simulator.git,2023-03-19 08:17:18+00:00,,0,mmmmarryyy/processor_cache_memory_simulator,615969687,SystemVerilog,processor_cache_memory_simulator,2581,0,2023-03-19 08:17:51+00:00,[],
11788,https://github.com/MarleyLobao/UVM_Traffic_RAL.git,2023-03-21 14:16:08+00:00,This repository organizes the ChipVerify website code so that it is executable in a verification environment that uses the Register Abstraction Layer (RAL) in frontdoor mode.,0,MarleyLobao/UVM_Traffic_RAL,617006657,SystemVerilog,UVM_Traffic_RAL,146,0,2023-05-25 00:40:14+00:00,[],
11789,https://github.com/ethannhang/csce611-projects.git,2023-03-22 00:55:38+00:00,,0,ethannhang/csce611-projects,617237167,SystemVerilog,csce611-projects,630,0,2023-04-02 00:58:12+00:00,[],
11790,https://github.com/keterbasary1/AHB-RAM-32b.git,2023-03-24 09:30:22+00:00,,0,keterbasary1/AHB-RAM-32b,618351117,SystemVerilog,AHB-RAM-32b,51,0,2023-03-27 06:41:44+00:00,[],
11791,https://github.com/felipegangorra/loac.git,2023-03-26 11:29:06+00:00,"Repositório da disciplina Laboratório de Organização e Arquitetura de Computadores, UFCG.",0,felipegangorra/loac,619135192,SystemVerilog,loac,4987,0,2023-07-10 21:55:21+00:00,"['logic-circuit', 'systemverilog']",
11792,https://github.com/Sososy/UVM.git,2023-04-04 01:43:53+00:00,,0,Sososy/UVM,623245399,SystemVerilog,UVM,515,0,2023-05-19 06:45:15+00:00,[],
11793,https://github.com/Saliya-99/SV-Course.git,2023-03-28 14:46:35+00:00,,0,Saliya-99/SV-Course,620369791,SystemVerilog,SV-Course,10,0,2023-12-11 10:23:20+00:00,[],https://api.github.com/licenses/mit
11794,https://github.com/ioanstag1/Computer-Architecture-Pipelined-Processor.git,2023-03-15 20:04:06+00:00,,0,ioanstag1/Computer-Architecture-Pipelined-Processor,614545096,SystemVerilog,Computer-Architecture-Pipelined-Processor,300,0,2024-02-01 19:31:02+00:00,[],
11795,https://github.com/sebsadface/sv.git,2023-03-29 20:09:30+00:00,SystemVerilog Projects,0,sebsadface/sv,621009279,SystemVerilog,sv,9523,0,2024-03-29 03:07:13+00:00,[],https://api.github.com/licenses/mit
11796,https://github.com/VictorAldica/TSC.git,2023-02-21 10:35:18+00:00,Repository laborator TSC,0,VictorAldica/TSC,604567503,SystemVerilog,TSC,8827,0,2023-03-07 11:42:48+00:00,[],
11797,https://github.com/Tibi0821/TSC2023.git,2023-02-21 10:36:30+00:00,,0,Tibi0821/TSC2023,604567967,SystemVerilog,TSC2023,8047,0,2023-03-07 12:42:27+00:00,[],
11798,https://github.com/george12388/tsc_lab.git,2023-02-21 10:44:07+00:00,,0,george12388/tsc_lab,604570824,SystemVerilog,tsc_lab,8097,0,2023-03-06 09:35:24+00:00,[],
11799,https://github.com/Domandrenog/Digital-Systems-Modeling-and-Verification.git,2023-02-20 12:30:40+00:00,,0,Domandrenog/Digital-Systems-Modeling-and-Verification,604143333,SystemVerilog,Digital-Systems-Modeling-and-Verification,35,0,2023-02-20 12:34:14+00:00,[],
11800,https://github.com/kbogumil01/verilog.git,2023-02-12 14:22:40+00:00,,0,kbogumil01/verilog,600761447,SystemVerilog,verilog,7544,0,2023-02-12 14:24:38+00:00,[],
11801,https://github.com/Pernapati-Akhil/APB-protocol.git,2023-02-08 07:05:50+00:00,,0,Pernapati-Akhil/APB-protocol,598967565,SystemVerilog,APB-protocol,368,0,2023-02-08 07:06:58+00:00,[],
11802,https://github.com/nikaemami/RTL-Components-Iterative-Logic-Synthesis.git,2023-02-10 07:33:13+00:00,Design of a circuit that calculates the number of 1’s on its data inputs,0,nikaemami/RTL-Components-Iterative-Logic-Synthesis,599928947,SystemVerilog,RTL-Components-Iterative-Logic-Synthesis,5,0,2023-02-10 07:39:55+00:00,[],
11803,https://github.com/mddanish05/UVM.git,2023-02-11 20:06:38+00:00,,0,mddanish05/UVM,600540853,SystemVerilog,UVM,66,0,2023-02-11 20:09:52+00:00,[],
11804,https://github.com/chaekwan/chisel-template.git,2023-02-13 12:18:54+00:00,,0,chaekwan/chisel-template,601122349,SystemVerilog,chisel-template,22,0,2023-06-19 01:31:53+00:00,[],https://api.github.com/licenses/unlicense
11805,https://github.com/padre6/assertion_RTL.git,2023-02-13 13:26:04+00:00,,0,padre6/assertion_RTL,601149638,SystemVerilog,assertion_RTL,36,0,2023-02-13 13:28:50+00:00,[],
11806,https://github.com/nil1g18/Simple-Single-Cycled-MIPS-processor.git,2023-04-12 11:46:11+00:00,Implementation of a simple MIPS processor without pipelining on SystemVerilog,0,nil1g18/Simple-Single-Cycled-MIPS-processor,626902877,SystemVerilog,Simple-Single-Cycled-MIPS-processor,9,0,2023-04-14 16:32:38+00:00,[],https://api.github.com/licenses/apache-2.0
11807,https://github.com/AGomezGutierrez/Taller_Digitales-LAB_3.git,2023-04-15 18:36:07+00:00,Interfaces con periféricos,0,AGomezGutierrez/Taller_Digitales-LAB_3,628372463,SystemVerilog,Taller_Digitales-LAB_3,536,0,2023-05-20 18:21:58+00:00,[],
11808,https://github.com/Habiter/FPGA_prj_SV.git,2023-04-03 10:40:30+00:00,,0,Habiter/FPGA_prj_SV,622922858,SystemVerilog,FPGA_prj_SV,8,0,2023-04-03 10:42:49+00:00,[],
11809,https://github.com/Carlos12001/register.git,2023-04-02 02:25:35+00:00,,0,Carlos12001/register,622406122,SystemVerilog,register,3,0,2023-04-02 02:25:45+00:00,[],
11810,https://github.com/tiger9z/verification-0.git,2023-04-06 06:24:47+00:00,,0,tiger9z/verification-0,624287624,SystemVerilog,verification-0,47,0,2023-04-06 06:25:44+00:00,[],
11811,https://github.com/sild3nafil/Inter.sv.git,2023-04-10 17:08:58+00:00,Verilog FSM Fundamental Structure,0,sild3nafil/Inter.sv,626040349,SystemVerilog,Inter.sv,641,0,2023-04-10 17:09:25+00:00,[],
11812,https://github.com/Su-Jena/RISC-V_FPGA.git,2023-03-24 20:24:44+00:00,,0,Su-Jena/RISC-V_FPGA,618595898,SystemVerilog,RISC-V_FPGA,13,0,2023-03-24 20:47:04+00:00,[],
11813,https://github.com/aeshes/hamming_ecc_fpga.git,2023-03-28 19:02:33+00:00,,0,aeshes/hamming_ecc_fpga,620478237,SystemVerilog,hamming_ecc_fpga,2,0,2023-03-28 19:09:41+00:00,[],
11814,https://github.com/wanderhank/Laboratorio-02-LOAC-.git,2023-04-12 21:12:38+00:00,Primeiro laboratório da disciplina de Laboratório de Organização e Arquitetura de Computadores ,0,wanderhank/Laboratorio-02-LOAC-,627132270,SystemVerilog,Laboratorio-02-LOAC-,5,0,2023-04-12 21:14:02+00:00,[],
11815,https://github.com/tkileypdx/smalluvm.git,2023-04-12 23:34:24+00:00,testcase template to create testcases for UVM failures,0,tkileypdx/smalluvm,627169938,SystemVerilog,smalluvm,1,0,2023-04-12 23:36:10+00:00,[],
11816,https://github.com/SukanyaMore11/UNIVERSAL_VERIFICATION_METHOD.git,2023-04-15 03:50:38+00:00,,0,SukanyaMore11/UNIVERSAL_VERIFICATION_METHOD,628149097,SystemVerilog,UNIVERSAL_VERIFICATION_METHOD,13045,0,2023-04-15 03:51:47+00:00,[],
11817,https://github.com/Kholoud-Ebrahim/ALU_design_Verification_UVM.git,2023-04-15 01:01:47+00:00,implementation and test bench using UVM,1,Kholoud-Ebrahim/ALU_design_Verification_UVM,628119370,SystemVerilog,ALU_design_Verification_UVM,182,0,2023-04-15 01:21:07+00:00,[],
11818,https://github.com/Yashovardhan15/mux_rtl_design.git,2023-02-25 15:34:32+00:00,,0,Yashovardhan15/mux_rtl_design,606468987,SystemVerilog,mux_rtl_design,39,0,2023-02-25 15:40:35+00:00,[],
11819,https://github.com/1847123212/st7789_abdulov_static.git,2023-03-04 07:31:59+00:00,Add driver for drawing Abdulov's avatar on display ST7789 with FPGA resources only. ,0,1847123212/st7789_abdulov_static,609445751,,st7789_abdulov_static,29,0,2023-09-03 00:27:20+00:00,[],https://api.github.com/licenses/mit
11820,https://github.com/bwilhelm0/i8008.git,2023-03-03 18:14:56+00:00,Recreation of intel 8008 for tiny tapeout,0,bwilhelm0/i8008,609265126,SystemVerilog,i8008,41429,0,2023-04-28 03:40:50+00:00,[],
11821,https://github.com/EmoryZoellner/DLD-Lab2.git,2023-03-06 18:54:31+00:00,,0,EmoryZoellner/DLD-Lab2,610428317,SystemVerilog,DLD-Lab2,1354,0,2023-03-24 22:42:23+00:00,[],
11822,https://github.com/camiloarteaga1/Digi2.git,2023-03-06 01:41:15+00:00,Labs of Digi 2,0,camiloarteaga1/Digi2,610054538,SystemVerilog,Digi2,35634,0,2023-03-08 12:55:07+00:00,[],
11823,https://github.com/AryamannTomar/Posit_in_Verilog.git,2023-03-08 02:59:00+00:00,,0,AryamannTomar/Posit_in_Verilog,611065296,SystemVerilog,Posit_in_Verilog,4,0,2023-03-08 03:07:00+00:00,[],
11824,https://github.com/DavidRich09/drichmond_digital_design_lab_2023.git,2023-02-25 03:18:30+00:00,"Repositorio para los laboratorios 2,3 y 4 del curso taller de diseño digital año 2023 I Semestre",0,DavidRich09/drichmond_digital_design_lab_2023,606286479,SystemVerilog,drichmond_digital_design_lab_2023,166308,0,2023-03-23 09:07:04+00:00,[],
11825,https://github.com/Reammaer/uvm_alu_test.git,2023-02-22 20:05:20+00:00,my first uvm test project with two small alu: the first one is created in SV and the second one (connected via dpi interface) is written in c,0,Reammaer/uvm_alu_test,605269204,SystemVerilog,uvm_alu_test,679,0,2023-03-07 16:02:14+00:00,[],
11826,https://github.com/Carlos12001/nand3_systemverilog.git,2023-03-13 16:31:22+00:00,,0,Carlos12001/nand3_systemverilog,613474851,SystemVerilog,nand3_systemverilog,3,0,2023-03-13 16:31:32+00:00,[],
11827,https://github.com/Sharmi-Rajakumaran/System-Verilog-Assertions.git,2023-03-15 15:43:29+00:00,,0,Sharmi-Rajakumaran/System-Verilog-Assertions,614444999,SystemVerilog,System-Verilog-Assertions,0,0,2023-03-15 15:49:53+00:00,[],
11828,https://github.com/IlorDash/verilog-practice-course-project.git,2023-02-14 14:54:22+00:00,Hardware accelerator for Kuznyechik cipher,0,IlorDash/verilog-practice-course-project,601663608,SystemVerilog,verilog-practice-course-project,109,0,2023-05-27 09:30:11+00:00,[],https://api.github.com/licenses/mit
11829,https://github.com/zcb2110/lab1.git,2023-02-16 22:13:48+00:00,,0,zcb2110/lab1,602761648,SystemVerilog,lab1,2,0,2023-02-16 22:14:28+00:00,[],
11830,https://github.com/humayunsiraj123/RTL_Training.git,2023-02-17 06:09:50+00:00,,0,humayunsiraj123/RTL_Training,602879599,SystemVerilog,RTL_Training,3918,0,2023-03-28 06:56:05+00:00,[],
11831,https://github.com/westonmcevoy/Verilog.git,2023-03-18 22:57:56+00:00,Various verilog implementations,0,westonmcevoy/Verilog,615869280,SystemVerilog,Verilog,17,0,2023-03-18 23:02:50+00:00,[],
11832,https://github.com/rdje/sv.git,2023-03-18 23:23:15+00:00,,0,rdje/sv,615873698,SystemVerilog,sv,19,0,2023-04-17 14:22:46+00:00,[],https://api.github.com/licenses/gpl-3.0
11833,https://github.com/shariethernet/approximate-dadda-multipliers.git,2023-03-16 20:42:07+00:00,,0,shariethernet/approximate-dadda-multipliers,615041184,SystemVerilog,approximate-dadda-multipliers,928,0,2023-04-17 21:42:24+00:00,[],
11834,https://github.com/ZhijingY/Multicore-Processor.git,2023-04-06 07:45:31+00:00,"Source code and test bench designs for ECE437 lab, worked by Zhijing and Calvin",0,ZhijingY/Multicore-Processor,624315609,,Multicore-Processor,4312,0,2024-02-13 00:42:25+00:00,[],
11835,https://github.com/nkapuscinska/vivado2023.git,2023-03-15 20:51:08+00:00,Repozytorium n potrzeby Zajęć z Elektroniki cyfrowej na basys3 w języku SyetemVerilog,0,nkapuscinska/vivado2023,614559531,SystemVerilog,vivado2023,16530,0,2024-02-12 02:07:14+00:00,[],
11836,https://github.com/Shivaprasadm02/uvm_lab10.git,2023-03-16 06:50:17+00:00,,0,Shivaprasadm02/uvm_lab10,614712127,SystemVerilog,uvm_lab10,49,0,2024-03-04 07:44:45+00:00,[],
11837,https://github.com/mzpmazeping/uvm_easy_mam.git,2023-04-10 08:05:31+00:00,A memory allocation Manager  based uvm_mem_mam，with good usability.,2,mzpmazeping/uvm_easy_mam,625839667,,uvm_easy_mam,3,0,2023-01-19 03:00:58+00:00,[],https://api.github.com/licenses/mit
11838,https://github.com/zhfffy/memory_MC.git,2023-03-14 10:22:39+00:00,,0,zhfffy/memory_MC,613813792,SystemVerilog,memory_MC,2389,0,2024-03-11 05:21:43+00:00,[],
11839,https://github.com/drandyhaas/LL10G_Cyclone10GX_1.git,2023-03-01 20:35:14+00:00,,1,drandyhaas/LL10G_Cyclone10GX_1,608345547,SystemVerilog,LL10G_Cyclone10GX_1,446655,0,2023-03-01 20:41:53+00:00,[],
11840,https://github.com/cse140l-wi23/lab5_starter.git,2023-03-08 19:45:08+00:00,,1,cse140l-wi23/lab5_starter,611420855,SystemVerilog,lab5_starter,7,0,2023-03-17 19:59:12+00:00,[],
11841,https://github.com/vickybou19/CompArchCourseDUTH.git,2023-03-12 11:45:14+00:00,,0,vickybou19/CompArchCourseDUTH,612922115,SystemVerilog,CompArchCourseDUTH,48,0,2023-03-16 11:03:18+00:00,[],
11842,https://github.com/kevindkim723/E85_Bonus.git,2023-02-08 16:45:08+00:00,FPGA labs and HDL for E85 enrichment sessions,0,kevindkim723/E85_Bonus,599195741,SystemVerilog,E85_Bonus,1,0,2023-02-08 16:53:24+00:00,[],
11843,https://github.com/SURA-SAI-SWAROOP/Adders_Using_Verilog.git,2023-03-24 06:34:57+00:00,,0,SURA-SAI-SWAROOP/Adders_Using_Verilog,618289694,SystemVerilog,Adders_Using_Verilog,388,0,2023-03-24 09:12:30+00:00,[],
11844,https://github.com/karthdjd/UVM-PROJECT-1.git,2023-03-18 17:45:00+00:00,,0,karthdjd/UVM-PROJECT-1,615795301,SystemVerilog,UVM-PROJECT-1,19,0,2023-03-20 10:17:18+00:00,[],
11845,https://github.com/Adhi-cyber/uvm.git,2023-03-18 11:55:49+00:00,,0,Adhi-cyber/uvm,615691140,SystemVerilog,uvm,1242,0,2023-03-18 12:00:48+00:00,[],
11846,https://github.com/alkaseltz/OTTER-CPU.git,2023-03-25 06:54:34+00:00,SystemVerilog source code for a fully programmable RISC-V CPU.,0,alkaseltz/OTTER-CPU,618725821,SystemVerilog,OTTER-CPU,14,0,2023-03-25 07:00:14+00:00,[],
11847,https://github.com/ben-j-c/fpga-dnn-accelerator.git,2023-02-23 02:38:10+00:00,,0,ben-j-c/fpga-dnn-accelerator,605374329,SystemVerilog,fpga-dnn-accelerator,37760,0,2023-05-08 15:52:36+00:00,[],
11848,https://github.com/hubuke/EE469_Lab1_attemp2.git,2023-02-23 01:53:22+00:00,,0,hubuke/EE469_Lab1_attemp2,605362448,SystemVerilog,EE469_Lab1_attemp2,82,0,2023-02-23 01:55:07+00:00,[],
11849,https://github.com/gary600/eaterchip.git,2023-02-25 04:56:57+00:00,,0,gary600/eaterchip,606306508,SystemVerilog,eaterchip,3,0,2023-02-25 04:57:47+00:00,[],
11850,https://github.com/sorybarry223/SE204.git,2023-03-03 23:08:24+00:00,,0,sorybarry223/SE204,609345302,SystemVerilog,SE204,9,0,2023-03-03 23:09:23+00:00,[],
11851,https://github.com/Nagarjun444/system-verilog-constraint-.git,2023-03-07 07:13:34+00:00,constraint interview questions and answers ,0,Nagarjun444/system-verilog-constraint-,610637951,SystemVerilog,system-verilog-constraint-,5,0,2023-03-07 07:14:11+00:00,[],
11852,https://github.com/gencturkmert/Pipelined-Processor.git,2023-03-10 17:56:39+00:00,Pipelined-Processor Simulation using SystemVerilog,0,gencturkmert/Pipelined-Processor,612333874,SystemVerilog,Pipelined-Processor,8,0,2023-03-10 18:15:00+00:00,[],
11853,https://github.com/Ahmed0100/multi_clock_digital_system_uart_alu_reg_file.git,2023-03-05 09:38:41+00:00,multi_clock_digital_system_uart_alu_reg_file,0,Ahmed0100/multi_clock_digital_system_uart_alu_reg_file,609803945,SystemVerilog,multi_clock_digital_system_uart_alu_reg_file,15,0,2023-03-05 09:39:21+00:00,[],
11854,https://github.com/jacobkearin/CPU_8b.git,2023-03-10 15:23:31+00:00,8-bit CPU from scratch designed for academic purposes,0,jacobkearin/CPU_8b,612275879,SystemVerilog,CPU_8b,41492,0,2023-05-12 22:42:42+00:00,[],
11855,https://github.com/dgupta2611/SV_Project_Winter_2023.git,2023-03-16 04:00:13+00:00,,0,dgupta2611/SV_Project_Winter_2023,614666693,SystemVerilog,SV_Project_Winter_2023,5431,0,2023-03-16 04:07:55+00:00,[],
11856,https://github.com/ajm2327/Integrating-Microprocessor-with-FPGA.git,2023-03-21 18:13:21+00:00,This is a class project which contains my code files which work together to implement a microprocessor using the Intel DE0-CV FPGA board,0,ajm2327/Integrating-Microprocessor-with-FPGA,617112283,SystemVerilog,Integrating-Microprocessor-with-FPGA,56,0,2023-03-21 21:07:56+00:00,[],https://api.github.com/licenses/gpl-3.0
11857,https://github.com/ewertonsantos/counter_m.git,2023-03-17 14:05:32+00:00,A simple counter in system verilog,0,ewertonsantos/counter_m,615355825,SystemVerilog,counter_m,1,0,2023-03-17 14:07:17+00:00,[],
11858,https://github.com/fmrt2019/graduation_design.git,2023-04-14 03:16:33+00:00,,1,fmrt2019/graduation_design,627711366,SystemVerilog,graduation_design,111,0,2023-04-20 09:50:17+00:00,[],
11859,https://github.com/johnrscott/riscv_proc.git,2023-04-04 19:00:13+00:00,FPGA-based RISC-V processor,0,johnrscott/riscv_proc,623630957,SystemVerilog,riscv_proc,162,0,2023-07-05 12:23:05+00:00,[],https://api.github.com/licenses/gpl-3.0
11860,https://github.com/cevero/cevero_dvfs.git,2023-04-13 17:10:49+00:00,Error-rate-aware DVFS for the Cevero SoC.,0,cevero/cevero_dvfs,627537157,SystemVerilog,cevero_dvfs,5,0,2023-04-13 17:13:16+00:00,[],
11861,https://github.com/iasmimtx/loac-ufcg.git,2023-04-11 19:02:40+00:00,,0,iasmimtx/loac-ufcg,626584625,SystemVerilog,loac-ufcg,10100,0,2023-07-01 23:54:25+00:00,[],
11862,https://github.com/AbalusAwudu/RhythmRush.git,2023-04-11 00:05:42+00:00,ECE 385 final project by Abalus Awudu and Xander Kick,0,AbalusAwudu/RhythmRush,626169710,SystemVerilog,RhythmRush,36,0,2023-04-14 21:43:45+00:00,[],
11863,https://github.com/studeo14/Zip-CPU-Verilog-Tutorial.git,2023-04-11 01:16:43+00:00,,0,studeo14/Zip-CPU-Verilog-Tutorial,626187273,SystemVerilog,Zip-CPU-Verilog-Tutorial,46,0,2023-04-11 01:17:14+00:00,[],
11864,https://github.com/TomasLAbreu/AXI4-VIP-env.git,2023-02-18 14:06:04+00:00,Environment to easily use Xilinx AXI4-VIP on your DUTs,0,TomasLAbreu/AXI4-VIP-env,603436506,SystemVerilog,AXI4-VIP-env,231,0,2023-02-18 23:55:33+00:00,[],https://api.github.com/licenses/gpl-3.0
11865,https://github.com/LudmilaGomes/Metronomo.git,2023-02-17 20:11:12+00:00,Código de um metrônomo para o projeto final da disciplina de Circuitos Lógicos 2.,0,LudmilaGomes/Metronomo,603191076,SystemVerilog,Metronomo,18,0,2023-02-17 20:15:22+00:00,[],
11866,https://github.com/abhigna97/Alpha-21264-Microprocessor-Tournament-Branch-Predictor-using-System-Verilog.git,2023-02-17 20:23:48+00:00,System Verilog Project,0,abhigna97/Alpha-21264-Microprocessor-Tournament-Branch-Predictor-using-System-Verilog,603194692,SystemVerilog,Alpha-21264-Microprocessor-Tournament-Branch-Predictor-using-System-Verilog,299,0,2023-03-31 19:46:12+00:00,[],
11867,https://github.com/Chuning99/Alarm-Clock.git,2023-02-21 00:13:52+00:00,,0,Chuning99/Alarm-Clock,604383932,SystemVerilog,Alarm-Clock,883,0,2023-02-21 00:16:39+00:00,[],
11868,https://github.com/RodrigoAceves/PrimeNumberGenerator.git,2023-02-21 04:24:21+00:00,,0,RodrigoAceves/PrimeNumberGenerator,604445897,SystemVerilog,PrimeNumberGenerator,4,0,2023-02-21 05:50:28+00:00,[],
11869,https://github.com/Momoi2309/TSC.git,2023-02-21 10:42:17+00:00,,0,Momoi2309/TSC,604570112,SystemVerilog,TSC,16467,0,2023-03-07 12:05:30+00:00,[],
11870,https://github.com/Tohaneanu/TSC.git,2023-02-21 10:38:41+00:00,,0,Tohaneanu/TSC,604568758,SystemVerilog,TSC,8007,0,2023-03-07 11:40:48+00:00,[],
11871,https://github.com/ZerunYin/uvm_template.git,2023-02-22 17:05:11+00:00,,0,ZerunYin/uvm_template,605204404,SystemVerilog,uvm_template,8,0,2023-02-23 13:10:44+00:00,[],
11872,https://github.com/JinxingYin/Hardware-Generation-Tool-of-Convolution-Module.git,2023-02-13 03:16:46+00:00,,0,JinxingYin/Hardware-Generation-Tool-of-Convolution-Module,600951039,SystemVerilog,Hardware-Generation-Tool-of-Convolution-Module,891,0,2023-02-13 03:34:49+00:00,[],
11873,https://github.com/AndreeaEch657/TSC.git,2023-02-20 08:25:23+00:00,,0,AndreeaEch657/TSC,604050511,SystemVerilog,TSC,8218,0,2023-03-20 07:21:19+00:00,[],
11874,https://github.com/LeeRaeIk/onthespot_portfolio.git,2023-02-24 06:19:05+00:00,,0,LeeRaeIk/onthespot_portfolio,605899854,SystemVerilog,onthespot_portfolio,156549,0,2023-02-24 06:25:49+00:00,[],
11875,https://github.com/lauranton/TSC.git,2023-02-20 06:33:08+00:00,,0,lauranton/TSC,604013913,SystemVerilog,TSC,8479,0,2023-03-06 07:34:12+00:00,[],
11876,https://github.com/19ana-maria/TSC.git,2023-02-21 10:35:43+00:00,,0,19ana-maria/TSC,604567692,SystemVerilog,TSC,8199,0,2023-03-06 08:07:24+00:00,[],
11877,https://github.com/gaochangw/SystemVerilog_Practice.git,2023-02-19 15:10:06+00:00,,0,gaochangw/SystemVerilog_Practice,603783644,SystemVerilog,SystemVerilog_Practice,8,0,2023-02-19 15:36:34+00:00,[],https://api.github.com/licenses/mit
11878,https://github.com/RuthTau/CPEN_211.git,2023-02-18 05:11:30+00:00,Arm assembly & System Verilog,0,RuthTau/CPEN_211,603305859,SystemVerilog,CPEN_211,630,0,2023-02-18 05:12:33+00:00,[],
11879,https://github.com/LaPriseDeRISC/test_ras.git,2023-02-20 10:37:18+00:00,RAS implementation verilated with python bindings,0,LaPriseDeRISC/test_ras,604100893,SystemVerilog,test_ras,85,0,2023-06-28 14:40:20+00:00,[],
11880,https://github.com/MATHYBALA-02/SYSTEM-VERILOG.git,2023-02-21 18:42:36+00:00,"Operator, Data types",0,MATHYBALA-02/SYSTEM-VERILOG,604766847,SystemVerilog,SYSTEM-VERILOG,12385,0,2023-02-21 18:45:01+00:00,[],
11881,https://github.com/yanaginx/uvm-module-access.git,2023-02-22 02:32:45+00:00,An example testbench created for demonstrating the way to access top's module from test's components,0,yanaginx/uvm-module-access,604898973,SystemVerilog,uvm-module-access,29,0,2023-02-22 02:46:09+00:00,[],
11883,https://github.com/RawanAbdelkhalek/VLSA-Variable-Latency-Speculative-Addition.git,2023-02-15 16:22:56+00:00,Variable Latency Speculative Addition (VLSA) is an approximate adder with error check and error recovery units. Design and implemented by Verilog,0,RawanAbdelkhalek/VLSA-Variable-Latency-Speculative-Addition,602164350,SystemVerilog,VLSA-Variable-Latency-Speculative-Addition,130,0,2023-02-15 16:27:03+00:00,[],
11884,https://github.com/xianwen123/APB-MCDF.git,2023-02-15 08:22:52+00:00,,0,xianwen123/APB-MCDF,601974322,SystemVerilog,APB-MCDF,459,0,2023-02-15 08:29:17+00:00,[],
11885,https://github.com/ic-lab-duth/CompArchCourseDUTH.git,2023-02-23 09:13:18+00:00,"Material related to the Computer Architecture course at ECE, DUTH",1,ic-lab-duth/CompArchCourseDUTH,605490455,SystemVerilog,CompArchCourseDUTH,15,0,2023-03-04 19:03:30+00:00,[],
11886,https://github.com/RageFu2004/ecs122.git,2023-04-11 05:11:13+00:00,ecs122 23win,0,RageFu2004/ecs122,626251081,SystemVerilog,ecs122,2987,0,2023-11-16 02:01:36+00:00,[],
11888,https://github.com/Lilferrit/riscvstuff.git,2023-02-13 04:16:54+00:00,,0,Lilferrit/riscvstuff,600964699,SystemVerilog,riscvstuff,5,0,2023-02-13 04:21:03+00:00,[],
11889,https://github.com/dassiddharth07/Kyber_test.git,2023-02-27 19:45:16+00:00,,0,dassiddharth07/Kyber_test,607340603,SystemVerilog,Kyber_test,4,0,2023-02-27 19:58:50+00:00,[],
11890,https://github.com/SharmaPrateek18/32x32_Register_2R1W.git,2023-02-26 20:11:36+00:00,A 32x32 Register using System Verilog.  This can be used in RISC-V Processors.,0,SharmaPrateek18/32x32_Register_2R1W,606874136,SystemVerilog,32x32_Register_2R1W,6,0,2023-02-26 20:12:52+00:00,[],
11891,https://github.com/joachimcao/lab0.git,2023-02-26 19:02:23+00:00,Lab 0 SystemVerilog,0,joachimcao/lab0,606855235,SystemVerilog,lab0,4345,0,2023-02-26 19:07:35+00:00,[],https://api.github.com/licenses/apache-2.0
11892,https://github.com/danmihai240/P3_GAME_OF_LIFE.git,2023-03-05 21:30:13+00:00,GAME OF LIFE in Verilog 8x8,0,danmihai240/P3_GAME_OF_LIFE,610003886,SystemVerilog,P3_GAME_OF_LIFE,4,0,2023-03-05 21:32:35+00:00,[],
11893,https://github.com/TangRongshun/axi_stream_insert_header_V2.git,2023-03-06 12:06:04+00:00,,0,TangRongshun/axi_stream_insert_header_V2,610253891,SystemVerilog,axi_stream_insert_header_V2,366,0,2023-03-06 12:08:46+00:00,[],
11894,https://github.com/abhinav9629/Voting-Machine-Verilog.git,2023-04-15 12:41:24+00:00,A voting machine for 3 candidates using state machine in Verilog,0,abhinav9629/Voting-Machine-Verilog,628272376,SystemVerilog,Voting-Machine-Verilog,216,0,2023-04-15 12:43:08+00:00,[],
11895,https://github.com/sag104/CSE148_project.git,2023-04-12 16:05:44+00:00,,0,sag104/CSE148_project,627018691,SystemVerilog,CSE148_project,9623,0,2023-06-13 21:09:53+00:00,[],
11896,https://github.com/jcrodrig-cmd/0xFA4_CPU.git,2023-04-02 00:29:05+00:00,A 4 bit microprocessor inspired by the Intel 4004,0,jcrodrig-cmd/0xFA4_CPU,622387405,SystemVerilog,0xFA4_CPU,1777,0,2023-04-04 03:55:32+00:00,[],
11897,https://github.com/shubhamsavita98/DV_HW5.git,2023-04-07 18:45:20+00:00,,0,shubhamsavita98/DV_HW5,624980676,SystemVerilog,DV_HW5,2,0,2023-07-13 21:53:22+00:00,[],
11898,https://github.com/vmeirelle/projetos-fpga.git,2023-03-06 14:37:05+00:00,Projetos de circuitos em FPGA,0,vmeirelle/projetos-fpga,610319809,SystemVerilog,projetos-fpga,11,0,2023-03-06 14:38:51+00:00,[],
11899,https://github.com/DaniJ2032/Projects-in-SystemVerilog.git,2023-03-08 21:34:10+00:00,Proyectos de System Verilog,0,DaniJ2032/Projects-in-SystemVerilog,611456325,SystemVerilog,Projects-in-SystemVerilog,298,0,2023-03-08 21:35:27+00:00,[],
11900,https://github.com/alpha-karthik/AHB-APB-Bridge.git,2023-03-15 12:40:13+00:00,Implementation of RTL Code for the AHB-APB-Bridge module in Verilog HDL. Verification of RTL module is carried out using System Verilog,0,alpha-karthik/AHB-APB-Bridge,614361332,SystemVerilog,AHB-APB-Bridge,2338,0,2023-08-22 14:55:43+00:00,[],https://api.github.com/licenses/gpl-3.0
11901,https://github.com/Reammaer/test_assertions.git,2023-03-13 19:40:18+00:00,,0,Reammaer/test_assertions,613548954,SystemVerilog,test_assertions,16,0,2023-06-13 19:23:43+00:00,[],
11902,https://github.com/Sandyman/cpu_project.git,2023-03-13 12:23:04+00:00,,0,Sandyman/cpu_project,613358728,SystemVerilog,cpu_project,54,0,2023-03-24 14:31:28+00:00,[],
11903,https://github.com/Reammaer/uvm_sequence_control.git,2023-03-19 20:36:41+00:00,,0,Reammaer/uvm_sequence_control,616178595,SystemVerilog,uvm_sequence_control,12,0,2023-06-13 19:23:21+00:00,[],
11904,https://github.com/samdeutrom/uart.git,2023-04-01 06:29:56+00:00,SystemVerilog modules for transmitting and recieving a word over UART,0,samdeutrom/uart,622110110,SystemVerilog,uart,198,0,2023-04-12 11:56:08+00:00,[],https://api.github.com/licenses/gpl-3.0
11905,https://github.com/Meghana-ch/lab_7.git,2023-04-01 18:47:28+00:00,,0,Meghana-ch/lab_7,622317368,SystemVerilog,lab_7,1071,0,2023-04-01 20:46:15+00:00,[],
11906,https://github.com/37Thomas/EEL6935_Reconfig2_Shared.git,2023-03-28 18:49:18+00:00,,0,37Thomas/EEL6935_Reconfig2_Shared,620473043,SystemVerilog,EEL6935_Reconfig2_Shared,5233,0,2023-03-28 18:50:21+00:00,[],
11907,https://github.com/wanderhank/Laboratorio-01-LOAC.git,2023-03-31 12:21:30+00:00,Primeiro laboratório da disciplina de Laboratório de Organização e Arquitetura de Computadores,0,wanderhank/Laboratorio-01-LOAC,621802593,SystemVerilog,Laboratorio-01-LOAC,5,0,2023-04-01 20:17:43+00:00,[],
11908,https://github.com/Zclaussen/SystemVerilog_Testbenches.git,2023-03-31 21:44:59+00:00,Reconfigurable Computing 2 Lab 3,0,Zclaussen/SystemVerilog_Testbenches,622004905,SystemVerilog,SystemVerilog_Testbenches,21,0,2023-09-13 13:23:08+00:00,[],
11909,https://github.com/fabianchs/taller_digital_LAB3.git,2023-04-14 01:20:02+00:00,,0,fabianchs/taller_digital_LAB3,627680722,SystemVerilog,taller_digital_LAB3,300,0,2023-05-08 19:36:09+00:00,[],
11910,https://github.com/arandomdev/adi_testbenches.git,2023-04-09 15:39:16+00:00,,0,arandomdev/adi_testbenches,625593479,SystemVerilog,adi_testbenches,534,0,2023-05-04 01:18:01+00:00,[],https://api.github.com/licenses/gpl-2.0
11911,https://github.com/AhMmedMahmoud/Multi-mode-counter.git,2023-04-10 23:45:19+00:00,,0,AhMmedMahmoud/Multi-mode-counter,626164613,SystemVerilog,Multi-mode-counter,64,0,2023-05-13 09:35:58+00:00,[],
11912,https://github.com/shriram616/Project_AXI4.git,2023-03-12 05:49:42+00:00,This project is aimed to develop an complete VIP for AXI4. ,0,shriram616/Project_AXI4,612837986,SystemVerilog,Project_AXI4,16,0,2023-03-12 11:34:26+00:00,[],https://api.github.com/licenses/apache-2.0
11913,https://github.com/pranavk-lab/hd44780-rtl-driver.git,2023-03-12 19:02:37+00:00,HD44780 RTL driver with AHB-lite interface for programmability.,0,pranavk-lab/hd44780-rtl-driver,613058035,SystemVerilog,hd44780-rtl-driver,8,0,2023-03-13 00:54:49+00:00,[],https://api.github.com/licenses/mit
11914,https://github.com/rbshi/partial_template.git,2023-03-24 21:07:44+00:00,Partial bit project template,0,rbshi/partial_template,618607421,SystemVerilog,partial_template,11,0,2023-03-24 21:17:23+00:00,[],
11915,https://github.com/KyrilllosPhelopos/Digital-Verification.git,2023-03-14 15:55:29+00:00,,0,KyrilllosPhelopos/Digital-Verification,613958777,SystemVerilog,Digital-Verification,1,0,2023-03-14 15:58:15+00:00,[],
11916,https://github.com/harshk-99/uart-core.git,2023-03-15 22:31:05+00:00,Simple configurable UART core,0,harshk-99/uart-core,614586336,SystemVerilog,uart-core,786,0,2023-03-16 18:53:00+00:00,[],https://api.github.com/licenses/mit
11917,https://github.com/kassymart/WHACK_A_MOLE.git,2023-03-23 01:06:57+00:00,,0,kassymart/WHACK_A_MOLE,617722403,SystemVerilog,WHACK_A_MOLE,15,0,2023-03-23 01:17:02+00:00,[],
11918,https://github.com/Lavanyamurugan2001/UVM_PROJECT_1.git,2023-03-17 12:04:46+00:00,,0,Lavanyamurugan2001/UVM_PROJECT_1,615307895,SystemVerilog,UVM_PROJECT_1,41,0,2023-03-17 15:45:09+00:00,[],
11919,https://github.com/aeshes/cyclic_code_fpga.git,2023-03-29 20:36:12+00:00,,0,aeshes/cyclic_code_fpga,621017910,SystemVerilog,cyclic_code_fpga,45,0,2023-03-30 10:11:07+00:00,[],
11920,https://github.com/Carlos12001/alu.git,2023-03-29 23:43:06+00:00,This is a ALU in SytemVerilog,0,Carlos12001/alu,621068962,SystemVerilog,alu,13,0,2023-05-16 05:34:08+00:00,[],
11921,https://github.com/denSmashh/RV32.git,2023-03-26 18:25:07+00:00,,0,denSmashh/RV32,619261877,SystemVerilog,RV32,17,0,2023-04-21 09:01:32+00:00,[],
11922,https://github.com/sachith-accelr/UDP_parser.git,2023-02-23 16:57:25+00:00,A UDP packet processor which calculaes the sum and max of the UDP packet's DATA,0,sachith-accelr/UDP_parser,605674914,SystemVerilog,UDP_parser,22,0,2024-02-24 19:23:07+00:00,[],
11923,https://github.com/a-gafiyatullin/digital-design.git,2023-04-16 18:37:59+00:00,🖥️ Digital Design and Computer Architecture,0,a-gafiyatullin/digital-design,628696874,SystemVerilog,digital-design,909,0,2024-03-02 09:00:58+00:00,"['computer-architecture', 'digital-design', 'digital-design-and-computer-organization', 'system-verilog', 'verilog']",https://api.github.com/licenses/mit
11924,https://github.com/daxzio/axi_mem2p.git,2023-02-08 14:51:43+00:00,,0,daxzio/axi_mem2p,599146631,SystemVerilog,axi_mem2p,76,0,2024-03-20 08:38:44+00:00,[],
11925,https://github.com/ariclia/TSC.git,2023-02-27 06:36:55+00:00,,0,ariclia/TSC,607025192,SystemVerilog,TSC,8058,0,2023-03-06 07:37:15+00:00,[],
11926,https://github.com/razvantrombitas/Simple-RISC-Processor.git,2023-02-25 04:11:23+00:00,,0,razvantrombitas/Simple-RISC-Processor,606296882,SystemVerilog,Simple-RISC-Processor,51,0,2023-02-25 04:13:03+00:00,[],
11927,https://github.com/anaong/DDR-for-FPGA.git,2023-03-02 23:28:35+00:00,,0,anaong/DDR-for-FPGA,608881960,SystemVerilog,DDR-for-FPGA,897,0,2023-03-20 22:50:02+00:00,[],https://api.github.com/licenses/mit
11928,https://github.com/PincerBeetle/fir.git,2023-03-13 11:18:05+00:00,,0,PincerBeetle/fir,613332594,SystemVerilog,fir,14,0,2023-03-14 11:46:33+00:00,[],https://api.github.com/licenses/mit
11929,https://github.com/isomoye/eegr_417.git,2023-03-05 15:38:04+00:00,eegr 417 projects,0,isomoye/eegr_417,609905643,SystemVerilog,eegr_417,23,0,2023-03-06 06:28:00+00:00,[],
11930,https://github.com/canhduc01/fsk_modulation.git,2023-02-09 03:20:12+00:00,"điều chế fsk, System Verilog, code và kiểm thử",0,canhduc01/fsk_modulation,599394452,SystemVerilog,fsk_modulation,538,0,2023-02-09 03:22:56+00:00,[],
11931,https://github.com/gogen235/computer-architecture-ITMO.git,2023-02-10 15:59:45+00:00,,0,gogen235/computer-architecture-ITMO,600111851,SystemVerilog,computer-architecture-ITMO,2624,0,2023-02-10 16:11:44+00:00,[],
11932,https://github.com/Chuning99/Traffic-light-controller.git,2023-02-21 00:17:27+00:00,,0,Chuning99/Traffic-light-controller,604384737,SystemVerilog,Traffic-light-controller,5,0,2023-02-21 00:19:30+00:00,[],
11933,https://github.com/andreeapietricica/cryptography_accelerator.git,2023-02-21 22:00:52+00:00,,0,andreeapietricica/cryptography_accelerator,604829958,SystemVerilog,cryptography_accelerator,3365,0,2023-06-21 15:28:37+00:00,[],
11934,https://github.com/xianwen123/GPIO.git,2023-02-14 06:40:20+00:00,,0,xianwen123/GPIO,601480614,SystemVerilog,GPIO,34,0,2023-02-15 08:19:23+00:00,[],
11935,https://github.com/chesskiss/SysVerilog_game_DonkeyKong.git,2023-04-16 09:49:28+00:00,"Here you'll find the game ""Donkey Kong"" written 100% in SysVerilog. You'll need an FPGA card, a screen, a keyboard, and audio devices for the full functionality.",0,chesskiss/SysVerilog_game_DonkeyKong,628548740,SystemVerilog,SysVerilog_game_DonkeyKong,42877,0,2023-04-18 14:05:34+00:00,"['fpga-programming', 'systemverilog']",
11936,https://github.com/ashleyjr/23K640_multiple.git,2023-04-01 22:14:39+00:00,,0,ashleyjr/23K640_multiple,622363781,SystemVerilog,23K640_multiple,10,0,2023-04-01 22:27:01+00:00,[],
11937,https://github.com/humayunsiraj123/Systemverilog_OOP.git,2023-04-07 06:26:48+00:00,Dedicated to codes related to Systemverilog object oriented programming,0,humayunsiraj123/Systemverilog_OOP,624738910,SystemVerilog,Systemverilog_OOP,42,0,2023-05-02 21:59:45+00:00,[],
11938,https://github.com/gyxxc/tiny8051.git,2023-04-10 09:57:27+00:00,8051 soft core,0,gyxxc/tiny8051,625877996,SystemVerilog,tiny8051,31,0,2023-04-10 11:13:29+00:00,[],
11939,https://github.com/Nathan4Andrade/roteiros-loac.git,2023-04-12 12:50:20+00:00,,0,Nathan4Andrade/roteiros-loac,626929550,SystemVerilog,roteiros-loac,5,0,2023-04-12 12:51:04+00:00,[],
11940,https://github.com/sagarpattar05/practice.git,2023-04-12 07:21:07+00:00,,0,sagarpattar05/practice,626797780,SystemVerilog,practice,32335,0,2023-04-12 07:28:19+00:00,[],
11941,https://github.com/Anunalla/MatrixMultiplication.git,2023-04-12 19:17:34+00:00,A matrix multiplication module for multiplying two complex valued square matrices,0,Anunalla/MatrixMultiplication,627094976,SystemVerilog,MatrixMultiplication,354,0,2023-04-12 23:12:28+00:00,[],
11942,https://github.com/MeghaEsturi/ECE-385-Final-Project.git,2023-04-12 21:26:03+00:00,,0,MeghaEsturi/ECE-385-Final-Project,627136158,SystemVerilog,ECE-385-Final-Project,41,0,2023-08-09 22:09:57+00:00,[],
11943,https://github.com/uw-acme/HLS4ML_customML.git,2023-02-28 20:08:44+00:00,Grabbed from Anatoliy's GitLab repo. Transferred here: ACME research lab effort to compare the resource utilization and speed between HLS generated and custom RTL NNs,0,uw-acme/HLS4ML_customML,607853343,SystemVerilog,HLS4ML_customML,4121,0,2023-02-28 20:10:55+00:00,[],
11944,https://github.com/rey1027/rpereira_digital_design_lab_2023.git,2023-02-28 15:57:24+00:00,Repositorio para el laboratorio 2 ,0,rey1027/rpereira_digital_design_lab_2023,607753159,SystemVerilog,rpereira_digital_design_lab_2023,716603,0,2023-03-23 07:11:41+00:00,[],
11945,https://github.com/GAlexakis/CA-Proccessor.git,2023-03-05 08:55:15+00:00,Risc-V Proccessor,0,GAlexakis/CA-Proccessor,609793373,SystemVerilog,CA-Proccessor,58155,0,2023-03-05 14:44:16+00:00,[],
11946,https://github.com/yana23georgieva/SimpleCPU.git,2023-04-02 14:21:51+00:00,,0,yana23georgieva/SimpleCPU,622576346,SystemVerilog,SimpleCPU,4,0,2023-04-02 14:27:37+00:00,[],
11947,https://github.com/KISALJITH/Traffic-Light-Control-using-verilog.git,2023-04-02 07:24:49+00:00,,0,KISALJITH/Traffic-Light-Control-using-verilog,622463263,SystemVerilog,Traffic-Light-Control-using-verilog,127,0,2023-04-02 07:40:08+00:00,[],
11948,https://github.com/arkeks/UART_fpga.git,2023-04-03 13:29:45+00:00,My realisation of UART protocol on SystemVerilog.,0,arkeks/UART_fpga,622991814,SystemVerilog,UART_fpga,10,0,2023-04-03 13:58:52+00:00,[],
11949,https://github.com/PincerBeetle/Costas.git,2023-03-29 09:11:38+00:00,,0,PincerBeetle/Costas,620734025,SystemVerilog,Costas,212,0,2023-03-29 09:13:59+00:00,[],https://api.github.com/licenses/mit
11950,https://github.com/yz-ac/Plotter_FPGA_Public.git,2023-03-25 16:07:12+00:00,Public Mirror of FPGA Plotter.,0,yz-ac/Plotter_FPGA_Public,618879384,SystemVerilog,Plotter_FPGA_Public,996,0,2023-03-25 16:08:03+00:00,[],
11951,https://github.com/mohammedabdulhaq/ahb-lite-to-apb-bridge.git,2023-04-04 11:27:40+00:00,,0,mohammedabdulhaq/ahb-lite-to-apb-bridge,623439528,SystemVerilog,ahb-lite-to-apb-bridge,20,0,2023-04-05 04:03:54+00:00,[],
11952,https://github.com/deslusionary/cache_333.git,2023-03-10 07:51:09+00:00,,0,deslusionary/cache_333,612102978,SystemVerilog,cache_333,17,0,2023-03-10 07:52:49+00:00,[],
11953,https://github.com/sumanthbs17/sumanth.git,2023-03-09 10:25:46+00:00,learngit,0,sumanthbs17/sumanth,611681315,SystemVerilog,sumanth,8,0,2023-09-05 04:42:25+00:00,[],
11954,https://github.com/Mahmoud1172/FIFO-Memory-Verification-as-a-blackbox-using-SystemVerilog.git,2023-03-11 12:24:05+00:00,,0,Mahmoud1172/FIFO-Memory-Verification-as-a-blackbox-using-SystemVerilog,612595964,SystemVerilog,FIFO-Memory-Verification-as-a-blackbox-using-SystemVerilog,4728,0,2023-03-11 12:29:20+00:00,[],
11955,https://github.com/666Good666/ECE385_UIUC23sp.git,2023-03-08 13:20:31+00:00,"Ziyuan Chen, ECE385 @ UIUC 23SP",0,666Good666/ECE385_UIUC23sp,611264091,,ECE385_UIUC23sp,18881,0,2023-02-03 06:00:11+00:00,[],https://api.github.com/licenses/gpl-3.0
11956,https://github.com/RaviKumarKorada217/Counters.git,2023-03-16 07:11:21+00:00,,0,RaviKumarKorada217/Counters,614718914,SystemVerilog,Counters,280,0,2023-03-16 10:30:22+00:00,[],
11957,https://github.com/ewertonsantos/mux_m.git,2023-03-17 13:42:07+00:00,logic multiplexer block in system verilog,0,ewertonsantos/mux_m,615345967,SystemVerilog,mux_m,1,0,2023-03-17 13:44:40+00:00,[],
11958,https://github.com/DimitrisT1804/LAB1-ECE-333.git,2023-04-03 20:21:19+00:00,Lab1 of digital lab ECE-333,0,DimitrisT1804/LAB1-ECE-333,623160308,SystemVerilog,LAB1-ECE-333,22832,0,2024-03-09 20:37:28+00:00,[],
11959,https://github.com/DanUCSD/lab3-starter.git,2023-02-18 17:21:25+00:00,,0,DanUCSD/lab3-starter,603493105,SystemVerilog,lab3-starter,1074,0,2023-02-18 17:23:58+00:00,[],
11960,https://github.com/BuiKhoa140/Synchronous_FIFO.git,2023-02-21 16:55:04+00:00,,0,BuiKhoa140/Synchronous_FIFO,604724568,SystemVerilog,Synchronous_FIFO,6,0,2023-04-06 03:13:22+00:00,[],
11961,https://github.com/echow2001/ece385_cpu-mp.git,2023-02-22 18:24:46+00:00,,0,echow2001/ece385_cpu-mp,605234465,SystemVerilog,ece385_cpu-mp,126668,0,2023-03-30 01:19:39+00:00,[],
11962,https://github.com/RaviMugidi/Priority_Encoder.git,2023-02-13 16:19:11+00:00,,0,RaviMugidi/Priority_Encoder,601226310,SystemVerilog,Priority_Encoder,11,0,2023-02-13 16:28:21+00:00,[],
11963,https://github.com/Jorge-Padilla/RISC-V_Jorge-Padilla.git,2023-02-17 17:05:12+00:00,This is the implementation of a RISC V Processor,0,Jorge-Padilla/RISC-V_Jorge-Padilla,603124434,SystemVerilog,RISC-V_Jorge-Padilla,576086,0,2023-02-21 16:42:55+00:00,[],
11964,https://github.com/babiribeiro/UFSCar-EnFi-micmic.git,2023-02-14 00:45:51+00:00,Repositório dos trabalhos de Microcontroladores e Microprocessadores da turma de Engenharia Física da UFSCar,0,babiribeiro/UFSCar-EnFi-micmic,601390489,SystemVerilog,UFSCar-EnFi-micmic,1735,0,2023-02-14 00:47:47+00:00,[],
11966,https://github.com/Reammaer/test_bench_pattern.git,2023-02-24 17:40:20+00:00,,0,Reammaer/test_bench_pattern,606142667,SystemVerilog,test_bench_pattern,1,0,2023-03-07 16:01:16+00:00,[],
11967,https://github.com/nblei/olfactory_asics.git,2023-02-15 15:04:07+00:00,Olfactory Computing ASICs,0,nblei/olfactory_asics,602131150,SystemVerilog,olfactory_asics,30,0,2023-02-16 18:02:09+00:00,[],
11968,https://github.com/MuhammadMajiid/SPI.git,2023-02-15 15:40:17+00:00,SPI Protocol Implementation using SystemVerilog HDL,0,MuhammadMajiid/SPI,602146731,SystemVerilog,SPI,3,0,2023-03-01 23:30:27+00:00,[],
11969,https://github.com/xianwen123/Watchdog.git,2023-02-14 06:52:09+00:00,,0,xianwen123/Watchdog,601484341,SystemVerilog,Watchdog,42,0,2023-02-15 08:22:25+00:00,[],
11970,https://github.com/Mansiss/Nikhilam-Vedic-Multiplier-Using-Verilog.git,2023-02-16 17:06:19+00:00,,0,Mansiss/Nikhilam-Vedic-Multiplier-Using-Verilog,602655683,SystemVerilog,Nikhilam-Vedic-Multiplier-Using-Verilog,4,0,2023-02-16 17:10:05+00:00,[],
11971,https://github.com/hern1102/141L.git,2023-02-16 18:33:23+00:00,,0,hern1102/141L,602689473,SystemVerilog,141L,88,0,2023-03-09 18:39:40+00:00,[],
11972,https://github.com/rohitkvs666/ece755_project.git,2023-02-24 02:48:40+00:00,ece755 GNN project,0,rohitkvs666/ece755_project,605847532,SystemVerilog,ece755_project,2,0,2023-02-24 02:52:13+00:00,[],
11973,https://github.com/LeeRaeIk/genesis_portfolio.git,2023-02-24 04:38:59+00:00,,0,LeeRaeIk/genesis_portfolio,605874140,SystemVerilog,genesis_portfolio,288880,0,2023-02-24 04:41:50+00:00,[],
11974,https://github.com/laithpengu/Coles_Code.git,2023-02-23 18:48:39+00:00,,0,laithpengu/Coles_Code,605716661,SystemVerilog,Coles_Code,3137,0,2023-03-01 21:23:59+00:00,[],
11975,https://github.com/Enanter/SimpleProcessor.git,2023-02-28 03:40:45+00:00,This is a 16-bit simple processor written in Systemverilog. Please check SimpleProject.docx to see each module's detail.,0,Enanter/SimpleProcessor,607481138,SystemVerilog,SimpleProcessor,7553,0,2023-03-17 10:49:38+00:00,"['systemverilog', 'simple-processor', '16-bit']",
11976,https://github.com/esarihs/SUB-FPGA_firmware.git,2023-03-06 13:56:57+00:00,,0,esarihs/SUB-FPGA_firmware,610301289,SystemVerilog,SUB-FPGA_firmware,9,0,2023-03-06 14:13:41+00:00,[],
11977,https://github.com/esarihs/MAIN-FPGA_firmware.git,2023-03-06 14:05:24+00:00,,0,esarihs/MAIN-FPGA_firmware,610305195,SystemVerilog,MAIN-FPGA_firmware,15,0,2023-03-06 14:11:35+00:00,[],
11978,https://github.com/dh73/Formal_Advanced_State.git,2023-03-06 20:27:48+00:00,An example of running formal from an advanced state with Yosys,1,dh73/Formal_Advanced_State,610462153,SystemVerilog,Formal_Advanced_State,3,0,2023-03-06 20:36:24+00:00,[],
11979,https://github.com/01sharanshetty/Verilog.git,2023-03-07 07:17:46+00:00,,0,01sharanshetty/Verilog,610639335,SystemVerilog,Verilog,245,0,2023-09-14 05:40:37+00:00,[],
11980,https://github.com/hunt3041/Comp.-Arch-Lab2.git,2023-03-07 16:27:42+00:00,,0,hunt3041/Comp.-Arch-Lab2,610864894,SystemVerilog,Comp.-Arch-Lab2,15,0,2023-03-15 18:53:29+00:00,[],
11981,https://github.com/Nalinaa/System_Verilog_Practice.git,2023-03-07 04:24:01+00:00,,0,Nalinaa/System_Verilog_Practice,610589667,SystemVerilog,System_Verilog_Practice,18,0,2023-03-07 04:53:04+00:00,[],
11982,https://github.com/ethanafischer/OTTER-MCU.git,2023-03-17 07:11:37+00:00,CPE 233 Final Project.  Designing a 32-bit RISC-V processor in Verilog,0,ethanafischer/OTTER-MCU,615203364,SystemVerilog,OTTER-MCU,750,0,2023-03-17 08:18:38+00:00,[],
11983,https://github.com/zceeawo/MPI.git,2023-03-17 13:29:18+00:00,,0,zceeawo/MPI,615340694,SystemVerilog,MPI,37,0,2023-03-17 13:30:08+00:00,[],
11984,https://github.com/paulhuggett/fpgasynth.git,2023-03-20 11:18:36+00:00,,0,paulhuggett/fpgasynth,616426670,SystemVerilog,fpgasynth,182,0,2023-03-20 11:19:11+00:00,[],
11985,https://github.com/Rufaida-Kassem/ALU-With-Class-Based-TB-SV.git,2023-03-29 22:20:46+00:00,A verification environment for an ALU using class-based testbench in `Systemverilog`,0,Rufaida-Kassem/ALU-With-Class-Based-TB-SV,621048646,SystemVerilog,ALU-With-Class-Based-TB-SV,30,0,2023-03-30 12:19:21+00:00,[],https://api.github.com/licenses/mit
11986,https://github.com/yasuhiko-nakashima/IMAX2-VMK180-step4000.git,2023-04-02 00:14:19+00:00,Free for academic use. Consultation required for commercial use.,0,yasuhiko-nakashima/IMAX2-VMK180-step4000,622384991,SystemVerilog,IMAX2-VMK180-step4000,62100,0,2023-04-02 00:23:43+00:00,"['cgra', 'gen3']",
11987,https://github.com/2023-Spring-ECE4278/lab3.git,2023-03-26 02:22:50+00:00,,1,2023-Spring-ECE4278/lab3,619016692,SystemVerilog,lab3,10,0,2023-03-27 01:22:32+00:00,[],
11988,https://github.com/2023-Spring-ECE4278/lab4.git,2023-03-26 02:23:10+00:00,,0,2023-Spring-ECE4278/lab4,619016767,SystemVerilog,lab4,10,0,2023-03-27 01:43:21+00:00,[],
11989,https://github.com/Hamza-h96343/Pacman-on-the-ice40-FPGA.git,2023-03-14 21:22:48+00:00,This repo contains all the code for a prototype version of the original Pacman game and necessary guidelines to get the software to run it.,0,Hamza-h96343/Pacman-on-the-ice40-FPGA,614083465,SystemVerilog,Pacman-on-the-ice40-FPGA,1070,0,2023-03-14 21:38:30+00:00,[],
11990,https://github.com/dinithprimal/FPGA_VotingMachine.git,2023-03-08 09:33:52+00:00,,0,dinithprimal/FPGA_VotingMachine,611179206,SystemVerilog,FPGA_VotingMachine,47,0,2023-03-08 09:34:29+00:00,[],
11991,https://github.com/Arhum-Ahmed/FYP.git,2023-03-09 17:46:06+00:00,,0,Arhum-Ahmed/FYP,611865182,SystemVerilog,FYP,81,0,2023-03-09 18:22:10+00:00,[],
11992,https://github.com/ioanrall/Tutorial.git,2023-03-11 08:35:54+00:00,,0,ioanrall/Tutorial,612536769,SystemVerilog,Tutorial,9743,0,2023-04-13 16:47:00+00:00,[],
11993,https://github.com/Ukudes/ErgAsk1.git,2023-03-11 09:10:50+00:00,Computer Architecture,0,Ukudes/ErgAsk1,612545147,SystemVerilog,ErgAsk1,1804,0,2023-03-12 12:17:39+00:00,[],
11994,https://github.com/jr-cs/ecse281.git,2023-03-22 20:04:29+00:00,,0,jr-cs/ecse281,617641482,SystemVerilog,ecse281,10,0,2023-03-22 20:06:53+00:00,[],https://api.github.com/licenses/mit
11995,https://github.com/shenalekanayaka/fulladder.git,2023-03-22 11:20:02+00:00,System Verilog code for full adder,0,shenalekanayaka/fulladder,617426057,SystemVerilog,fulladder,5,0,2023-03-22 11:23:32+00:00,[],
11996,https://github.com/Miyaatsumo/APB_Protocol.git,2023-03-23 04:50:56+00:00,,0,Miyaatsumo/APB_Protocol,617778810,SystemVerilog,APB_Protocol,15,0,2023-04-18 11:28:44+00:00,[],https://api.github.com/licenses/epl-2.0
11997,https://github.com/kirolossedra/Multi-Mode-Counter-Winner-Loser-Game-SystemVerilog-Design-and-Verification.git,2023-03-23 03:54:53+00:00,,0,kirolossedra/Multi-Mode-Counter-Winner-Loser-Game-SystemVerilog-Design-and-Verification,617765268,SystemVerilog,Multi-Mode-Counter-Winner-Loser-Game-SystemVerilog-Design-and-Verification,25,0,2023-03-23 03:58:33+00:00,[],
11998,https://github.com/mohammedabdulhaq/Inter-Integrated-Circuit-.git,2023-04-04 10:44:46+00:00,,0,mohammedabdulhaq/Inter-Integrated-Circuit-,623422775,SystemVerilog,Inter-Integrated-Circuit-,12,0,2023-04-04 10:46:15+00:00,[],
11999,https://github.com/juliapolak01/Jednostka-ALU-Verilog.git,2023-04-05 13:51:56+00:00,"Jednostka wykonawcza, wykonującej operacje arytmetyczne, logiczne i inne na danych zapisanych w kodzie U2. ",0,juliapolak01/Jednostka-ALU-Verilog,623982577,SystemVerilog,Jednostka-ALU-Verilog,1718,0,2023-04-05 13:56:49+00:00,[],
12000,https://github.com/Pradeep-Ps/Comp_arch_and_Verification_Projects.git,2023-04-06 03:50:16+00:00,This directory contains projects from Computer Architecture and Pre-Silicon Verification,0,Pradeep-Ps/Comp_arch_and_Verification_Projects,624246787,SystemVerilog,Comp_arch_and_Verification_Projects,942,0,2023-04-06 04:23:35+00:00,[],
12001,https://github.com/dop-amin/opentitan.git,2023-04-11 11:24:02+00:00,,0,dop-amin/opentitan,626389423,SystemVerilog,opentitan,106111,0,2023-12-15 17:45:45+00:00,[],https://api.github.com/licenses/apache-2.0
12002,https://github.com/srg320/TMS34020.git,2023-04-11 11:21:21+00:00,,0,srg320/TMS34020,626388393,SystemVerilog,TMS34020,24868,0,2024-04-08 08:32:33+00:00,[],
12003,https://github.com/Emrys025/ece-111.git,2023-03-14 21:18:55+00:00,,0,Emrys025/ece-111,614082264,SystemVerilog,ece-111,10,0,2023-11-13 18:47:09+00:00,[],
12004,https://github.com/CenkerAkan/SystemVerilog-Simple-MIPS.git,2023-02-09 08:35:26+00:00,,0,CenkerAkan/SystemVerilog-Simple-MIPS,599485606,SystemVerilog,SystemVerilog-Simple-MIPS,7,0,2023-02-09 10:36:52+00:00,[],
12005,https://github.com/MarcEftimie/FPGA-falling-sand-game.git,2023-02-14 04:06:35+00:00,FPGA implementation of a Falling Sand Game.,0,MarcEftimie/FPGA-falling-sand-game,601439989,SystemVerilog,FPGA-falling-sand-game,8641,0,2023-04-16 23:41:45+00:00,[],
12006,https://github.com/reeeeverb/Soft-Core.git,2023-02-16 01:26:39+00:00,Making a mini von neumann computer purely in verilog. ,0,reeeeverb/Soft-Core,602331662,SystemVerilog,Soft-Core,35,0,2023-04-25 14:12:48+00:00,[],
12007,https://github.com/faiq-i/riscv.git,2023-02-10 09:14:13+00:00,"A SystemVerilog implementation of a simple processor working for the RISC-V ISA. Currently, only the base instruction set is implemented fully and a UART peripheral is fitted in as well. Later extensions are ongoing and will be updated in this repository.",0,faiq-i/riscv,599962449,SystemVerilog,riscv,23,0,2023-02-10 09:27:01+00:00,[],https://api.github.com/licenses/mit
12009,https://github.com/shubhamsavita98/Verilog-Review.git,2023-02-10 22:59:24+00:00,,0,shubhamsavita98/Verilog-Review,600243748,SystemVerilog,Verilog-Review,4,0,2023-07-13 21:56:41+00:00,[],
12010,https://github.com/FlornelNFC/TSC.git,2023-02-21 10:38:26+00:00,,0,FlornelNFC/TSC,604568678,SystemVerilog,TSC,8017,0,2023-03-07 11:37:47+00:00,[],
12011,https://github.com/ahmedatef2023/multi_mode-counter.git,2023-04-14 04:12:18+00:00,,0,ahmedatef2023/multi_mode-counter,627724669,SystemVerilog,multi_mode-counter,3,0,2023-06-28 21:45:00+00:00,[],
12012,https://github.com/mbrown202/clk_agent.git,2023-03-14 20:13:32+00:00,,0,mbrown202/clk_agent,614061393,SystemVerilog,clk_agent,7,0,2023-03-15 17:31:22+00:00,[],
12013,https://github.com/lauisabelle/ee552_finalproject.git,2023-03-17 03:21:22+00:00,EE 552 Final Project - Spring 2023,0,lauisabelle/ee552_finalproject,615142849,SystemVerilog,ee552_finalproject,153,0,2023-04-18 19:21:09+00:00,[],
12014,https://github.com/ewertonsantos/register_m.git,2023-03-17 13:48:09+00:00,logic block of a simple register in system verilog with test bench,0,ewertonsantos/register_m,615348556,SystemVerilog,register_m,2,0,2023-03-17 14:22:02+00:00,[],
12015,https://github.com/ccontemplator/Vitis-mixed-c-rtl-kernel.git,2023-03-12 15:50:01+00:00,,0,ccontemplator/Vitis-mixed-c-rtl-kernel,612998213,SystemVerilog,Vitis-mixed-c-rtl-kernel,5000,0,2023-03-13 09:40:28+00:00,[],
12016,https://github.com/r33s3n6/riscv_pipeline.git,2023-02-19 13:32:18+00:00,"a riscv pipeline processor design with M,S,U-mode, interrupt and exception, instruction&data cache and virtual memory support. ucore (an operation system for education) can run on this.",0,r33s3n6/riscv_pipeline,603752894,SystemVerilog,riscv_pipeline,517,0,2023-02-19 13:35:54+00:00,[],
12017,https://github.com/chtbaldwin2/EEE381-Minimal-RISCV.git,2023-02-22 11:32:37+00:00,A minimal RISC-V Design for EEE381,0,chtbaldwin2/EEE381-Minimal-RISCV,605069976,SystemVerilog,EEE381-Minimal-RISCV,31,0,2023-04-26 14:05:12+00:00,[],
12018,https://github.com/klolefir/riscv-cpu.git,2023-02-24 15:10:04+00:00,simply riscv cpu with interrupt support,0,klolefir/riscv-cpu,606086266,SystemVerilog,riscv-cpu,151,0,2023-02-24 15:11:52+00:00,[],
12019,https://github.com/imjp2020/UVM_PISO_TB.git,2023-03-23 10:10:41+00:00,PISO UVM testbench : This is UVM based PISO Testbench with cadence BUILD and RUN Command options ,0,imjp2020/UVM_PISO_TB,617884611,SystemVerilog,UVM_PISO_TB,30,0,2023-05-11 14:32:45+00:00,[],https://api.github.com/licenses/apache-2.0
12020,https://github.com/alexandrecorlet/LOAC.git,2023-03-28 19:52:12+00:00,A repo with all the exercises and projects that I have done in Digital Design and Computer Architecture class,0,alexandrecorlet/LOAC,620496448,SystemVerilog,LOAC,287,0,2023-03-29 03:58:57+00:00,[],https://api.github.com/licenses/mit
12021,https://github.com/Soham-coder/DNN_ARRYTHMIA.git,2023-03-25 14:54:56+00:00,RTL,0,Soham-coder/DNN_ARRYTHMIA,618856165,SystemVerilog,DNN_ARRYTHMIA,3220,0,2023-03-30 08:07:28+00:00,[],
12022,https://github.com/luna09666/FPGA-.git,2023-03-28 06:17:46+00:00,,0,luna09666/FPGA-,620155281,SystemVerilog,FPGA-,4,0,2023-03-28 06:18:46+00:00,[],
12023,https://github.com/dhap0/libhdl.git,2023-03-02 22:13:12+00:00,,0,dhap0/libhdl,608860331,SystemVerilog,libhdl,6,0,2023-03-02 22:17:58+00:00,[],
12024,https://github.com/nancydimri23/Verilog-.git,2023-03-06 14:30:23+00:00,,0,nancydimri23/Verilog-,610316711,SystemVerilog,Verilog-,30,0,2023-03-06 16:59:18+00:00,[],
12025,https://github.com/Mounika-Vakulabharanam/csce714-lab2.git,2023-03-05 22:28:18+00:00,,0,Mounika-Vakulabharanam/csce714-lab2,610016338,SystemVerilog,csce714-lab2,215,0,2023-03-05 22:33:33+00:00,[],
12026,https://github.com/carolinejjohnson/encoder.git,2023-03-10 19:03:20+00:00,,0,carolinejjohnson/encoder,612356515,SystemVerilog,encoder,15624,0,2023-03-10 19:07:32+00:00,[],
12027,https://github.com/wjld/basic-fpga-calc.git,2023-03-08 17:31:34+00:00,"SystemVerilog code of a calculator that performs addition, subtraction and multiplication on single digit integers, to be simulated on a Cyclone II DE2 FPGA. Final project of the Logical Circuits UnB course.",0,wjld/basic-fpga-calc,611371656,SystemVerilog,basic-fpga-calc,6,0,2023-06-09 22:58:54+00:00,[],
12028,https://github.com/M3m3M4n/RV-Processor.git,2023-03-08 07:36:53+00:00,,0,M3m3M4n/RV-Processor,611137862,SystemVerilog,RV-Processor,349,0,2023-03-08 09:55:48+00:00,[],https://api.github.com/licenses/gpl-3.0
12029,https://github.com/quangdong01/Pipeline_RISC_V_KTMT.git,2023-03-10 13:34:38+00:00,,0,quangdong01/Pipeline_RISC_V_KTMT,612230475,SystemVerilog,Pipeline_RISC_V_KTMT,605,0,2023-03-17 05:20:15+00:00,[],
12030,https://github.com/zveand/arch.git,2023-03-11 08:35:58+00:00,,0,zveand/arch,612536788,SystemVerilog,arch,1806,0,2023-04-05 19:03:59+00:00,[],
12031,https://github.com/EddieSherban/WIRECUTTER.git,2023-03-11 21:22:26+00:00,martino,0,EddieSherban/WIRECUTTER,612748354,SystemVerilog,WIRECUTTER,2,0,2023-03-11 22:29:33+00:00,[],
12032,https://github.com/Penguronik/fpga-snake.git,2023-03-30 21:25:50+00:00,A 2 player snake game made in System Verilog to be synthesized for FPGAs,0,Penguronik/fpga-snake,621533971,SystemVerilog,fpga-snake,53,0,2023-04-27 01:25:17+00:00,[],https://api.github.com/licenses/mit
12033,https://github.com/code-tangent/brainteasers.git,2023-04-03 00:11:20+00:00,,0,code-tangent/brainteasers,622731783,SystemVerilog,brainteasers,6,0,2023-04-03 00:12:37+00:00,[],
12034,https://github.com/YuriDants/Log2.git,2023-04-03 01:54:54+00:00,,0,YuriDants/Log2,622754480,SystemVerilog,Log2,7,0,2023-04-03 01:59:47+00:00,[],
12035,https://github.com/IlyaChichkov/Verilog_Labs_2023.git,2023-03-22 09:27:31+00:00,Verilog & C Language practice,0,IlyaChichkov/Verilog_Labs_2023,617384259,SystemVerilog,Verilog_Labs_2023,48592,0,2023-06-02 14:58:05+00:00,"['drivers', 'fpga', 'hardware', 'low-level', 'verilog']",
12036,https://github.com/yousefkhaled1750/wide_alu_ip.git,2023-03-22 09:50:22+00:00,,0,yousefkhaled1750/wide_alu_ip,617392842,SystemVerilog,wide_alu_ip,11,0,2023-03-22 09:50:31+00:00,[],
12037,https://github.com/gyaanantia/cordic.git,2023-03-01 07:48:18+00:00,,1,gyaanantia/cordic,608044656,SystemVerilog,cordic,219,0,2023-03-02 07:59:16+00:00,[],
12038,https://github.com/JoeRock1298/TFM.git,2023-04-04 10:58:28+00:00,OpenCL HLS Implementation of an CNN in FPGA DE10-NANO,0,JoeRock1298/TFM,623428002,SystemVerilog,TFM,338364,0,2023-06-07 15:11:10+00:00,[],
12039,https://github.com/CaseyHackerMan/EE469-Lab.git,2023-04-03 18:01:28+00:00,,0,CaseyHackerMan/EE469-Lab,623109204,SystemVerilog,EE469-Lab,10639,0,2023-05-05 00:23:17+00:00,[],
12040,https://github.com/tematpuGPT/system_verilog_axi.git,2023-04-01 14:18:09+00:00,,0,tematpuGPT/system_verilog_axi,622235124,SystemVerilog,system_verilog_axi,10,0,2023-04-01 14:19:15+00:00,[],
12041,https://github.com/nil1g18/Booth-s-multiplier.git,2023-04-07 16:06:25+00:00,Basic SystemVerilog Booth's multiplier,0,nil1g18/Booth-s-multiplier,624930761,SystemVerilog,Booth-s-multiplier,22,0,2023-04-07 16:13:01+00:00,[],https://api.github.com/licenses/apache-2.0
12042,https://github.com/vpamidi9/lab1-venkatesh530.git,2023-04-12 06:10:43+00:00,,0,vpamidi9/lab1-venkatesh530,626772288,SystemVerilog,lab1-venkatesh530,17841,0,2023-04-12 06:12:37+00:00,[],
12043,https://github.com/bienkuba/projekt_SDUP.git,2023-04-13 16:16:36+00:00,simple turbo endoder/decoder erilog implementation ,0,bienkuba/projekt_SDUP,627515107,SystemVerilog,projekt_SDUP,27645,0,2023-06-21 18:30:42+00:00,[],
12044,https://github.com/Taimoorhasanmalik/Single-Cycle-Risc-V-Processor.git,2023-04-15 11:29:53+00:00,A single cycle RISC V processor with Load Store Unit incorporated. ,0,Taimoorhasanmalik/Single-Cycle-Risc-V-Processor,628253962,SystemVerilog,Single-Cycle-Risc-V-Processor,7,0,2023-04-15 11:31:00+00:00,[],
12045,https://github.com/Binh-Diep/huffman-encoder.git,2023-04-03 15:07:31+00:00,,0,Binh-Diep/huffman-encoder,623037324,SystemVerilog,huffman-encoder,777,0,2023-04-26 14:34:00+00:00,[],
12046,https://github.com/du6293/pipeline_processor_systemverilog.git,2023-04-10 10:41:40+00:00,RISC-V pipeline processor with system verilog,0,du6293/pipeline_processor_systemverilog,625892786,SystemVerilog,pipeline_processor_systemverilog,32,0,2023-11-23 17:35:30+00:00,[],
12047,https://github.com/Ammar-10xe/RISCV32I-5-Stage-Pipelined-Processor.git,2023-02-21 15:11:56+00:00,This is the implementation of RISCV 32I 5 staged complined processor ,0,Ammar-10xe/RISCV32I-5-Stage-Pipelined-Processor,604680114,SystemVerilog,RISCV32I-5-Stage-Pipelined-Processor,3118,0,2023-12-27 09:20:23+00:00,[],
12048,https://github.com/ararian/canis_lupus_hattai.git,2023-04-02 04:54:59+00:00,riscv processor,0,ararian/canis_lupus_hattai,622432797,SystemVerilog,canis_lupus_hattai,268,0,2024-02-05 03:43:31+00:00,[],https://api.github.com/licenses/mit
12049,https://github.com/mfaizan-10xe/UART_Systemverilog.git,2023-03-03 06:49:15+00:00,,0,mfaizan-10xe/UART_Systemverilog,608999136,SystemVerilog,UART_Systemverilog,9,0,2023-03-03 06:51:55+00:00,[],
12050,https://github.com/cesarmunuera/AIC.git,2023-02-15 17:44:53+00:00,"Repositorio de la asignatura Arquitectura e Ingeniería de Computadores, del grado GIC.",0,cesarmunuera/AIC,602196523,SystemVerilog,AIC,100648,0,2023-06-15 09:32:19+00:00,[],
12051,https://github.com/Shubha289/UVM-snippets.git,2023-02-20 07:30:36+00:00,,0,Shubha289/UVM-snippets,604031936,SystemVerilog,UVM-snippets,1,0,2023-02-20 07:34:57+00:00,[],
12052,https://github.com/Nalinaa/system_verilog.git,2023-02-21 04:39:58+00:00,,0,Nalinaa/system_verilog,604449549,SystemVerilog,system_verilog,98,0,2023-02-21 04:40:45+00:00,[],
12053,https://github.com/Jellyyz/ECE385_beginner_tutorial.git,2023-02-18 22:29:46+00:00,,0,Jellyyz/ECE385_beginner_tutorial,603566186,SystemVerilog,ECE385_beginner_tutorial,3,0,2023-02-18 22:31:27+00:00,[],
12054,https://github.com/claudiu024/TSC.git,2023-02-20 06:46:25+00:00,,0,claudiu024/TSC,604017891,SystemVerilog,TSC,8943,0,2023-03-12 18:06:59+00:00,[],
12055,https://github.com/akashdevuni/VGA.git,2023-02-15 15:52:46+00:00,,0,akashdevuni/VGA,602151977,SystemVerilog,VGA,5,0,2023-02-15 15:55:47+00:00,[],
12056,https://github.com/anpaz/verilog.lab.git,2023-02-11 23:30:00+00:00,Verilog examples,0,anpaz/verilog.lab,600581514,SystemVerilog,verilog.lab,17,0,2023-02-11 23:34:20+00:00,[],
12057,https://github.com/TPots/sv_blocks.git,2023-03-06 05:02:32+00:00,A bunch of system verilog modules.,0,TPots/sv_blocks,610102818,SystemVerilog,sv_blocks,170,0,2023-03-06 05:08:37+00:00,[],https://api.github.com/licenses/mpl-2.0
12058,https://github.com/malikshanaah1999/usb_verification_malik.git,2023-03-09 14:12:53+00:00,,0,malikshanaah1999/usb_verification_malik,611772368,SystemVerilog,usb_verification_malik,3,0,2023-03-09 14:30:52+00:00,[],
12059,https://github.com/yongbeenK/UVM-Testbench.git,2023-03-10 16:02:04+00:00,,0,yongbeenK/UVM-Testbench,612291467,SystemVerilog,UVM-Testbench,2,0,2023-03-10 16:04:13+00:00,[],
12060,https://github.com/bryance-oyang/fpga_hash_512.git,2023-03-07 08:18:09+00:00,Hardware FPGA implementation of PBKDF2-HMAC-SHA512 for restricted inputs/outputs,0,bryance-oyang/fpga_hash_512,610660756,SystemVerilog,fpga_hash_512,32,0,2023-03-07 08:18:52+00:00,[],
12061,https://github.com/1Guardian/FPGA-Skeletonization.git,2023-04-09 00:36:56+00:00,,0,1Guardian/FPGA-Skeletonization,625389088,SystemVerilog,FPGA-Skeletonization,7243,0,2023-05-04 20:29:41+00:00,[],
12062,https://github.com/malikshanaah1999/toMahdee.git,2023-04-16 13:17:45+00:00,,1,malikshanaah1999/toMahdee,628602049,SystemVerilog,toMahdee,5,0,2023-04-16 13:21:49+00:00,[],
12063,https://github.com/nicholass58949/FPGA-and-Verilog.git,2023-04-13 10:20:00+00:00,FPGA code and scripts,0,nicholass58949/FPGA-and-Verilog,627368724,SystemVerilog,FPGA-and-Verilog,2,0,2023-10-24 06:16:31+00:00,[],
12064,https://github.com/1mina1/ATM-System-Design-and-verification.git,2023-04-12 17:01:20+00:00,"this an ATM system designed and implemented in verilog and verified using systemverilog verifaction enviroment, assertions and covered and a reference model using c++ and systemc library",0,1mina1/ATM-System-Design-and-verification,627041903,SystemVerilog,ATM-System-Design-and-verification,1523,0,2023-04-28 20:55:41+00:00,[],
12065,https://github.com/ShashankC27/hw6.git,2023-04-10 20:13:26+00:00,,0,ShashankC27/hw6,626107215,SystemVerilog,hw6,57,0,2023-04-10 20:16:25+00:00,[],
12066,https://github.com/nil1g18/Frequency-measurer.git,2023-04-08 16:20:48+00:00,Basic SystemVerilog Frequency measurer,0,nil1g18/Frequency-measurer,625282532,SystemVerilog,Frequency-measurer,9,0,2023-04-08 16:21:41+00:00,[],https://api.github.com/licenses/apache-2.0
12067,https://github.com/davidluo1216/System-Verilog.git,2023-04-09 23:25:56+00:00,Contains all projects using System Verilog language on FPGA integrated circuit.,0,davidluo1216/System-Verilog,625706312,SystemVerilog,System-Verilog,12,0,2023-04-09 23:35:22+00:00,[],
12068,https://github.com/surajK90/SV_workspace.git,2023-04-09 22:29:48+00:00,System Verilog projects,0,surajK90/SV_workspace,625696140,SystemVerilog,SV_workspace,3,0,2023-04-09 22:43:34+00:00,[],
12069,https://github.com/JaishreeJ/UVM_PROJECT_2.git,2023-03-22 04:53:24+00:00,,0,JaishreeJ/UVM_PROJECT_2,617295801,SystemVerilog,UVM_PROJECT_2,7,0,2023-03-22 04:59:45+00:00,[],
12070,https://github.com/Lavanyamurugan2001/UVM_PROJECT_2.git,2023-03-22 03:43:00+00:00,,0,Lavanyamurugan2001/UVM_PROJECT_2,617279432,SystemVerilog,UVM_PROJECT_2,943,0,2023-03-22 03:56:51+00:00,[],
12071,https://github.com/shenalekanayaka/counter.git,2023-03-23 04:11:15+00:00,System Verilog counter with increment and reset inputs,0,shenalekanayaka/counter,617769398,SystemVerilog,counter,1,0,2023-03-23 16:16:07+00:00,[],
12072,https://github.com/Michelangelo98/cva6-others.git,2023-03-22 20:22:49+00:00,,0,Michelangelo98/cva6-others,617647646,SystemVerilog,cva6-others,20,0,2023-03-22 20:24:31+00:00,[],
12073,https://github.com/geitanksha/digital-systems-lab.git,2023-03-24 19:19:00+00:00,"ECE 385: Digital Systems Laboratory: Coded in SystemVerilog to emplpy functionalities and gian experience with FPGAs. Skills Employed: SystemVerilog, working with FPGAs, NIOS-II integrated SOC, USB Protocol",0,geitanksha/digital-systems-lab,618575898,SystemVerilog,digital-systems-lab,24902,0,2023-03-24 19:21:44+00:00,[],
12074,https://github.com/MiSTer-devel/Arcade-BattleZone_MiSTer.git,2023-03-24 21:57:53+00:00,Battlezone for MiSTer,2,MiSTer-devel/Arcade-BattleZone_MiSTer,618619823,SystemVerilog,Arcade-BattleZone_MiSTer,7171,0,2023-03-24 21:59:17+00:00,[],
12075,https://github.com/haolam05/RISCV-CORE.git,2023-03-30 03:23:25+00:00,,0,haolam05/RISCV-CORE,621125709,SystemVerilog,RISCV-CORE,38519,0,2023-03-30 04:39:12+00:00,[],
12076,https://github.com/Santhush95/System-Verilog.git,2023-03-30 07:03:59+00:00,Digital circuit design playground,0,Santhush95/System-Verilog,621190542,SystemVerilog,System-Verilog,219,0,2023-04-03 04:57:14+00:00,[],
12077,https://github.com/franklinthony/integrated-circuits-systemverilog.git,2023-04-01 16:33:48+00:00,"Exercícios desenvolvidos durante a disciplina Concepção Estruturada de Circuitos Integrados, relacionando os mais diversos assuntos da mesma.",0,franklinthony/integrated-circuits-systemverilog,622278703,SystemVerilog,integrated-circuits-systemverilog,7,0,2023-04-06 16:03:42+00:00,"['integrated-circuits', 'system-verilog', 'systemverilog', 'cadence', 'cadence-xcelium']",
12078,https://github.com/aidanKnight/dldspring2023.git,2023-02-28 15:22:01+00:00,,0,aidanKnight/dldspring2023,607737212,SystemVerilog,dldspring2023,63,0,2023-02-28 15:26:12+00:00,[],
12079,https://github.com/gabyfeier/TCS.git,2023-02-28 10:20:13+00:00,,0,gabyfeier/TCS,607609794,SystemVerilog,TCS,22359,0,2023-04-04 12:29:32+00:00,[],
12080,https://github.com/WeMWish/CSE141L.git,2023-02-22 01:34:27+00:00,,0,WeMWish/CSE141L,604883054,SystemVerilog,CSE141L,13,0,2023-02-22 01:35:16+00:00,[],
12081,https://github.com/kroppel/svt-assignment.git,2023-02-22 13:51:11+00:00,System Verification and Testing Assigment,0,kroppel/svt-assignment,605122830,SystemVerilog,svt-assignment,71,0,2023-02-22 14:45:08+00:00,[],
12082,https://github.com/UpendraSaiCH/SystemVerilog.git,2023-02-23 13:17:04+00:00,Implementation of layered test bench using SystemVerilog/Verilog,0,UpendraSaiCH/SystemVerilog,605582171,SystemVerilog,SystemVerilog,223,0,2023-02-23 13:46:56+00:00,[],
12083,https://github.com/Lavanyamurugan2001/SYSTEM-VERILOG.git,2023-02-24 03:58:54+00:00,,0,Lavanyamurugan2001/SYSTEM-VERILOG,605864810,SystemVerilog,SYSTEM-VERILOG,608,0,2023-02-24 04:53:23+00:00,[],
12084,https://github.com/arkeks/APS_Course.git,2023-02-23 20:47:53+00:00,"Completed labs from ""Architectures of Processor Systems"" course of MIET University.",0,arkeks/APS_Course,605756659,SystemVerilog,APS_Course,24,0,2023-02-23 20:55:30+00:00,[],
12085,https://github.com/rimjhim14/uvm_testbench.git,2023-03-16 05:54:11+00:00,,0,rimjhim14/uvm_testbench,614695334,SystemVerilog,uvm_testbench,17,0,2023-03-16 06:01:22+00:00,[],
12086,https://github.com/nadiaroschina/cpu-cache-memory-model.git,2023-03-17 06:46:55+00:00,,0,nadiaroschina/cpu-cache-memory-model,615195762,SystemVerilog,cpu-cache-memory-model,2770,0,2023-03-17 06:49:17+00:00,[],
12087,https://github.com/solderneer/ELEC0010.git,2023-03-14 17:05:43+00:00,,0,solderneer/ELEC0010,613989337,SystemVerilog,ELEC0010,7,0,2023-03-14 17:06:31+00:00,[],
12088,https://github.com/ewertonsantos/memory_m.git,2023-03-17 15:48:40+00:00,a simple 8 bit memory with variable length in system verilog,0,ewertonsantos/memory_m,615398585,SystemVerilog,memory_m,3,0,2023-03-17 15:50:08+00:00,[],
12089,https://github.com/1847123212/st7789_abdulov_animated.git,2023-03-04 07:34:58+00:00,"project for drawing picture with some layers, one of this is animated on Sitronix ST7789 LCD display 240x240 pixels using only internal FPGA resources. ",0,1847123212/st7789_abdulov_animated,609446432,,st7789_abdulov_animated,132,0,2023-09-03 00:27:20+00:00,[],https://api.github.com/licenses/mit
12090,https://github.com/PabloRamosMGit/Proyecto_1_Diseno.git,2023-03-07 02:50:10+00:00,,0,PabloRamosMGit/Proyecto_1_Diseno,610565352,SystemVerilog,Proyecto_1_Diseno,1,0,2023-03-07 03:13:43+00:00,[],
12091,https://github.com/ShrutiC-git/ibex-uffizzi-ci.git,2023-03-27 13:45:53+00:00,,0,ShrutiC-git/ibex-uffizzi-ci,619819111,SystemVerilog,ibex-uffizzi-ci,2892,0,2023-03-27 13:49:01+00:00,[],https://api.github.com/licenses/apache-2.0
12092,https://github.com/infinitymdm/hscaproject.git,2023-03-26 21:52:32+00:00,Private fork of stineje/HSCAProjectS23,0,infinitymdm/hscaproject,619316679,SystemVerilog,hscaproject,4831,0,2023-08-02 17:59:52+00:00,[],https://api.github.com/licenses/mit
12093,https://github.com/Abhyuday0409/Calculator-_-verilogNcpp.git,2023-04-03 07:55:08+00:00,,0,Abhyuday0409/Calculator-_-verilogNcpp,622858026,SystemVerilog,Calculator-_-verilogNcpp,3,0,2023-04-03 08:00:05+00:00,[],
12094,https://github.com/yasuhiko-nakashima/IMAX2-VPK180-step4000.git,2023-04-02 00:47:41+00:00,Free for academic use. Consultation required for commercial use.,0,yasuhiko-nakashima/IMAX2-VPK180-step4000,622390212,SystemVerilog,IMAX2-VPK180-step4000,127921,0,2023-04-02 01:02:35+00:00,"['cgra', 'gen3']",
12095,https://github.com/GAlexakis/VL-Sorter.git,2023-04-02 19:15:48+00:00,sorter in systemVerilog,0,GAlexakis/VL-Sorter,622665791,SystemVerilog,VL-Sorter,4,0,2023-04-02 19:30:02+00:00,[],
12096,https://github.com/vishwajeet-sinh/project.git,2023-03-07 23:25:44+00:00,Logic verification with UVM,0,vishwajeet-sinh/project,611010993,SystemVerilog,project,93,0,2024-02-21 09:00:28+00:00,[],
12097,https://github.com/fabianchs/taller_digital_LAB1.git,2023-02-10 19:17:56+00:00,Laboratorio 1 del taller de diseño digital en el Instituto Tecnológico de Costa Rica para la carrera de Ingeniería en Electrónica,0,fabianchs/taller_digital_LAB1,600183537,SystemVerilog,taller_digital_LAB1,254970,0,2023-02-21 02:45:05+00:00,[],
12100,https://github.com/nikaemami/State-Machine-Coding.git,2023-02-11 11:13:25+00:00,Design and implement a Moore and Mealy 10010 detector in SystemVerilog,0,nikaemami/State-Machine-Coding,600396502,SystemVerilog,State-Machine-Coding,117,0,2023-02-11 11:23:11+00:00,[],
12101,https://github.com/Shubhi143/2X1_mux-.git,2023-02-11 10:48:46+00:00,designing of a 2x1 multiplexer using verilog code,0,Shubhi143/2X1_mux-,600390510,SystemVerilog,2X1_mux-,2,0,2023-02-11 10:49:52+00:00,[],
12102,https://github.com/LOUISNOYEZ/FIOS_DSP_MM.git,2023-02-12 22:30:43+00:00,,1,LOUISNOYEZ/FIOS_DSP_MM,600893106,SystemVerilog,FIOS_DSP_MM,30045,0,2023-08-29 20:18:23+00:00,[],
12103,https://github.com/jstalex/cipher.git,2023-02-15 16:41:19+00:00,Kuznechik cipher,0,jstalex/cipher,602171688,SystemVerilog,cipher,41,0,2023-02-15 16:41:26+00:00,[],
12104,https://github.com/YuriDants/Ordenadores.git,2023-04-03 01:42:25+00:00,,0,YuriDants/Ordenadores,622751441,SystemVerilog,Ordenadores,4,0,2023-04-03 01:54:23+00:00,[],
12105,https://github.com/RusanovskiyBV/FEC.git,2023-04-13 13:38:08+00:00,,0,RusanovskiyBV/FEC,627446408,SystemVerilog,FEC,1137,0,2023-04-13 13:38:40+00:00,[],https://api.github.com/licenses/mit
12106,https://github.com/calebturner603/DLD_Final.git,2023-04-11 21:45:54+00:00,,0,calebturner603/DLD_Final,626637898,SystemVerilog,DLD_Final,215,0,2023-04-11 21:51:02+00:00,[],
12107,https://github.com/ourspalois/Fraise.git,2023-04-11 13:08:00+00:00,the control hardware for the bayesian machine accelerator to be integrated in Pinaipple,0,ourspalois/Fraise,626431860,SystemVerilog,Fraise,106,0,2023-07-10 07:44:38+00:00,[],
12108,https://github.com/vmeirelle/contador-FPGA.git,2023-04-13 08:17:31+00:00,contador como divisor de clock,0,vmeirelle/contador-FPGA,627321099,SystemVerilog,contador-FPGA,6505,0,2023-04-13 08:19:50+00:00,[],
12109,https://github.com/DhamuDynamic/System_Verilog.git,2023-03-09 15:42:31+00:00,,0,DhamuDynamic/System_Verilog,611812284,SystemVerilog,System_Verilog,11,0,2023-03-09 15:43:39+00:00,[],
12110,https://github.com/nikhilreddi/SVFINAL.git,2023-03-23 19:27:40+00:00,Floating point multiplier,0,nikhilreddi/SVFINAL,618113185,SystemVerilog,SVFINAL,1242,0,2023-03-23 21:20:15+00:00,[],
12111,https://github.com/Akisha11/Dise-o-digital-en-HDL-.git,2023-04-10 04:14:43+00:00,,0,Akisha11/Dise-o-digital-en-HDL-,625772581,SystemVerilog,Dise-o-digital-en-HDL-,50,0,2023-04-30 05:25:55+00:00,[],
12112,https://github.com/mehtas30/FPGA-Image-Decompressor.git,2023-04-03 20:19:26+00:00,,0,mehtas30/FPGA-Image-Decompressor,623159612,SystemVerilog,FPGA-Image-Decompressor,4941,0,2023-04-03 20:22:24+00:00,[],
12113,https://github.com/yasmiins/fpgadm.git,2023-04-06 02:42:06+00:00,,0,yasmiins/fpgadm,624228939,SystemVerilog,fpgadm,357,0,2023-06-05 04:47:52+00:00,[],
12114,https://github.com/chaim96/Space_Adventure.git,2023-04-06 07:28:18+00:00,FPGA & System Verilog Game Project,0,chaim96/Space_Adventure,624309532,SystemVerilog,Space_Adventure,2099,0,2023-04-06 07:31:53+00:00,[],
12115,https://github.com/mgaletakis/ibex.git,2023-03-20 16:19:09+00:00,,0,mgaletakis/ibex,616561959,SystemVerilog,ibex,39406,0,2023-03-23 17:09:34+00:00,[],https://api.github.com/licenses/apache-2.0
12116,https://github.com/joachimcao/sec02.git,2023-03-26 07:03:31+00:00,,0,joachimcao/sec02,619069707,SystemVerilog,sec02,13,0,2023-03-26 07:12:37+00:00,[],
12117,https://github.com/gary600/bfchip.git,2023-03-19 23:48:32+00:00,Brainf*** CPU,0,gary600/bfchip,616219028,SystemVerilog,bfchip,328,0,2023-05-03 20:40:43+00:00,[],https://api.github.com/licenses/apache-2.0
12118,https://github.com/lizboyer/385finalproject.git,2023-03-22 02:30:08+00:00,,0,lizboyer/385finalproject,617260894,SystemVerilog,385finalproject,76,0,2023-04-07 18:25:27+00:00,[],
12119,https://github.com/shrekliao/EEE525_VLSIdesign.git,2023-03-22 09:02:36+00:00,,0,shrekliao/EEE525_VLSIdesign,617374828,SystemVerilog,EEE525_VLSIdesign,9,0,2023-03-22 09:09:32+00:00,[],
12120,https://github.com/Ekate-Sa/moore-fsm.git,2023-03-23 01:17:15+00:00,comprehensive approach for a simple study task,0,Ekate-Sa/moore-fsm,617724933,SystemVerilog,moore-fsm,9,0,2023-03-23 01:35:29+00:00,[],
12121,https://github.com/MadalinaDedu/TSC.git,2023-02-20 06:34:09+00:00,,0,MadalinaDedu/TSC,604014202,SystemVerilog,TSC,8055,0,2023-03-06 07:33:29+00:00,[],
12122,https://github.com/LeeRaeIk/main_portfolio.git,2023-02-22 07:16:17+00:00,,0,LeeRaeIk/main_portfolio,604976726,SystemVerilog,main_portfolio,14448,0,2023-02-22 07:18:04+00:00,[],
12123,https://github.com/alejandrofern5/DAV-Lab4.git,2023-03-15 02:22:48+00:00,,0,alejandrofern5/DAV-Lab4,614157850,SystemVerilog,DAV-Lab4,5221,0,2023-03-15 02:26:24+00:00,[],
12124,https://github.com/woodrowb96/systemverilog-alu-and-testbench.git,2023-03-15 09:11:33+00:00,,0,woodrowb96/systemverilog-alu-and-testbench,614278991,SystemVerilog,systemverilog-alu-and-testbench,38,0,2023-03-15 09:12:21+00:00,[],
12125,https://github.com/lakuo/cse141l.git,2023-03-15 21:40:27+00:00,,1,lakuo/cse141l,614573523,SystemVerilog,cse141l,126,0,2023-03-15 21:47:59+00:00,[],
12126,https://github.com/nguyendaithien/Pipeline_RISC_V_Verilog.git,2023-03-05 02:07:49+00:00,,1,nguyendaithien/Pipeline_RISC_V_Verilog,609713403,SystemVerilog,Pipeline_RISC_V_Verilog,7519,0,2023-03-05 02:46:05+00:00,[],
12127,https://github.com/bhagi-kiran/sv-casestudies.git,2023-03-05 09:48:59+00:00,"These are some codes that I practiced at CDAC, Noida",0,bhagi-kiran/sv-casestudies,609806437,SystemVerilog,sv-casestudies,666,0,2023-03-16 23:33:44+00:00,[],
12128,https://github.com/RaviKumarKorada217/Sequential-Logic-Circuits.git,2023-03-16 13:53:26+00:00,,0,RaviKumarKorada217/Sequential-Logic-Circuits,614876041,SystemVerilog,Sequential-Logic-Circuits,46,0,2023-03-16 13:55:07+00:00,[],
12129,https://github.com/Reammaer/uvm_type_override.git,2023-03-16 19:58:01+00:00,,0,Reammaer/uvm_type_override,615026776,SystemVerilog,uvm_type_override,9,0,2023-06-13 19:22:37+00:00,[],
12130,https://github.com/ArtyomPeshkov/Processor_cache_simulation.git,2023-03-18 10:15:56+00:00,,0,ArtyomPeshkov/Processor_cache_simulation,615665392,SystemVerilog,Processor_cache_simulation,2315,0,2023-03-18 10:16:39+00:00,[],
12131,https://github.com/mauer4/CubeDriver.git,2023-03-14 08:41:21+00:00,,0,mauer4/CubeDriver,613772499,SystemVerilog,CubeDriver,40,0,2023-03-14 08:46:59+00:00,[],
12132,https://github.com/SharmaPrateek18/Pipelined_5_Stage_3_Channel_Convolution_HW_Sobel_Edge_Detection.git,2023-02-26 18:09:51+00:00,This is the System Verilog code of Pipelined 5-Stage 3-Channel Convolution Hardware. This performs Sobel Edge Detection usinf Laplacian Kernel. the code mentioned is parameterized and thus the output image's pixels can be changed.,0,SharmaPrateek18/Pipelined_5_Stage_3_Channel_Convolution_HW_Sobel_Edge_Detection,606840323,SystemVerilog,Pipelined_5_Stage_3_Channel_Convolution_HW_Sobel_Edge_Detection,12,0,2023-02-26 18:11:45+00:00,[],
12133,https://github.com/Taller-Diseno-Digital/vdg_digital_design_lab_2023.git,2023-02-27 04:37:42+00:00,,0,Taller-Diseno-Digital/vdg_digital_design_lab_2023,606992128,SystemVerilog,vdg_digital_design_lab_2023,1265665,0,2023-05-09 08:14:38+00:00,[],
12134,https://github.com/evanreidsmith7/HDLClass.git,2023-03-31 00:53:18+00:00,Place to keep my SystemVerilog code from my HDL class at TXST,0,evanreidsmith7/HDLClass,621584206,SystemVerilog,HDLClass,3306,0,2023-09-13 13:02:05+00:00,[],
12135,https://github.com/Pri-2101/ahb_verification.git,2023-02-27 12:09:39+00:00,Verification of AMBA AHB 3 protocol using SystemVerilog and UVM,0,Pri-2101/ahb_verification,607145384,SystemVerilog,ahb_verification,1057,0,2023-09-11 11:48:15+00:00,[],
12136,https://github.com/czl0706/dcs-sp23.git,2023-03-06 13:21:48+00:00,Digital Circuits and Systems @NYCU EE Spring 2023,0,czl0706/dcs-sp23,610285284,SystemVerilog,dcs-sp23,12947,0,2024-03-16 07:39:15+00:00,[],
12137,https://github.com/KISALJITH/Voting-Machine-using-Verilog.git,2023-03-06 03:04:54+00:00,This include verilog code for voting machine and testbnech,0,KISALJITH/Voting-Machine-using-Verilog,610074591,SystemVerilog,Voting-Machine-using-Verilog,4,0,2024-04-03 18:38:00+00:00,[],
12138,https://github.com/srg320/TMS320C1X.git,2023-04-11 11:19:29+00:00,,0,srg320/TMS320C1X,626387655,SystemVerilog,TMS320C1X,2073,0,2024-04-08 08:32:36+00:00,[],
12139,https://github.com/Eloquencere/Adder-Designs.git,2023-02-08 13:20:40+00:00,Designs covering different types of digital adder topologies,2,Eloquencere/Adder-Designs,599106794,SystemVerilog,Adder-Designs,596,0,2023-10-08 09:39:42+00:00,[],
12140,https://github.com/pulp-platform/FlooNoC.git,2023-06-19 14:09:30+00:00,"A Fast, Low-Overhead On-chip Network",10,pulp-platform/FlooNoC,655746307,SystemVerilog,FlooNoC,3137,67,2024-04-09 04:46:48+00:00,[],https://api.github.com/licenses/apache-2.0
12141,https://github.com/agg23/fpga-gameandwatch.git,2023-05-06 22:56:06+00:00,Game and Watch for Analogue Pocket and MiSTer,2,agg23/fpga-gameandwatch,637230109,SystemVerilog,fpga-gameandwatch,100045,51,2024-02-25 14:17:28+00:00,[],https://api.github.com/licenses/mit
12142,https://github.com/gnodipac886/ViT-FPGA-TPU.git,2023-06-08 18:08:25+00:00,FPGA based Vision Transformer accelerator (Harvard CS205),4,gnodipac886/ViT-FPGA-TPU,651198133,SystemVerilog,ViT-FPGA-TPU,9860,41,2024-04-11 05:17:37+00:00,[],
12143,https://github.com/yuri-panchul/basics-graphics-music.git,2023-06-11 03:40:15+00:00,FPGA exercise for beginners,47,yuri-panchul/basics-graphics-music,652088432,SystemVerilog,basics-graphics-music,27563,37,2024-04-07 01:18:26+00:00,[],
12144,https://github.com/wdxm657/fpga_practice.git,2023-05-29 11:59:59+00:00,,6,wdxm657/fpga_practice,646814705,SystemVerilog,fpga_practice,17846,26,2024-04-02 18:28:00+00:00,[],
12145,https://github.com/accellera-official/uvm-core.git,2023-06-06 16:01:00+00:00,,6,accellera-official/uvm-core,650226393,SystemVerilog,uvm-core,1059,21,2024-04-13 10:26:46+00:00,[],https://api.github.com/licenses/apache-2.0
12146,https://github.com/AsFigo/pyslint.git,2023-05-05 04:03:44+00:00,SystemVerilog Linter based on pyslang,21,AsFigo/pyslint,636531832,SystemVerilog,pyslint,232,16,2024-04-12 05:28:42+00:00,[],https://api.github.com/licenses/mit
12147,https://github.com/skudlur/diablo.git,2023-05-03 16:01:40+00:00,diablo is an Out-Of-Order 64-bit RISC-V processor. ,3,skudlur/diablo,635863233,SystemVerilog,diablo,254,12,2024-02-10 18:58:26+00:00,[],https://api.github.com/licenses/mit
12148,https://github.com/AsFigo/MathLib.git,2023-06-06 04:26:59+00:00,MathLib DAC 2023 version,5,AsFigo/MathLib,649981485,SystemVerilog,MathLib,1770,10,2023-11-26 05:18:28+00:00,[],
12149,https://github.com/OFS/ofs-agx7-pcie-attach.git,2023-04-17 18:31:06+00:00,,4,OFS/ofs-agx7-pcie-attach,629155420,SystemVerilog,ofs-agx7-pcie-attach,12932,9,2024-03-05 14:19:14+00:00,[],https://api.github.com/licenses/mit
12150,https://github.com/vonbrank/HIT-CS32201-Assignments-Fall-2022.git,2023-05-09 04:27:47+00:00,哈工大《计算机组织与体系结构》实验 - 2022年秋 | HIT Computer Architecture Course Assignments - Fall 2022,0,vonbrank/HIT-CS32201-Assignments-Fall-2022,638095036,SystemVerilog,HIT-CS32201-Assignments-Fall-2022,63,7,2024-03-24 08:05:19+00:00,[],
12151,https://github.com/IskXCr/CS202-CS214-Computer-Organization-Project.git,2023-05-18 12:10:52+00:00,SUSTech CS202/CS214 Computer Organization Project. Streams Bad Apple.,0,IskXCr/CS202-CS214-Computer-Organization-Project,642367161,SystemVerilog,CS202-CS214-Computer-Organization-Project,16453,7,2024-03-29 06:32:51+00:00,"['bad-apple', 'mips', 'mips32', 'systemverilog', 'vga-driver', 'vga-text']",
12152,https://github.com/xiaochuang-lxc/AMBA-SVA.git,2023-05-03 01:53:30+00:00,"ARM AMBA 4 AXI4,AXI4-lite,AXI4-stream SVAs (BP063) MiscellaneousBP063",0,xiaochuang-lxc/AMBA-SVA,635575918,SystemVerilog,AMBA-SVA,637,6,2024-03-12 05:21:52+00:00,[],
12153,https://github.com/Sulekha231/100-days-of-rtl.git,2023-04-19 11:11:12+00:00,,0,Sulekha231/100-days-of-rtl,629952987,SystemVerilog,100-days-of-rtl,208,6,2023-11-25 06:40:45+00:00,[],
12154,https://github.com/ZiyangYE/Verilog_TCP.git,2023-06-22 02:26:20+00:00,Highly specialized TCP module. Simple and high-performance. No ARP support.,1,ZiyangYE/Verilog_TCP,656958418,SystemVerilog,Verilog_TCP,346,5,2024-03-08 01:21:50+00:00,[],https://api.github.com/licenses/apache-2.0
12155,https://github.com/Shreesh-Kulkarni/RISC-V-Core.git,2023-05-02 10:09:21+00:00,A repository consisting of all the project files and codes for RISC-V Processor design using Transaction Level Verilog.,0,Shreesh-Kulkarni/RISC-V-Core,635259798,SystemVerilog,RISC-V-Core,121,5,2023-07-19 20:38:07+00:00,"['computer-architecture', 'risc-v', 'rv32i', 'tl-verilog']",
12156,https://github.com/snbk001/LIN-protocol.git,2023-05-18 05:09:19+00:00,"LIN (Local Interconnect Network) bus protocol, a serial communication protocol for automotive applications.",0,snbk001/LIN-protocol,642224721,SystemVerilog,LIN-protocol,12,5,2024-01-27 13:36:16+00:00,"['fpga', 'lin', 'local-interconnect-network', 'protocol', 'serial-communication', 'systemverilog', 'verilog', 'design', 'micro-architecture', 'bus', 'test-bench']",https://api.github.com/licenses/mit
12157,https://github.com/cicero884/CRYSTALS.git,2023-04-18 05:08:17+00:00,Code about CRYSTALS-Dilithium/Kyber,0,cicero884/CRYSTALS,629327542,SystemVerilog,CRYSTALS,47178,4,2023-11-06 08:52:53+00:00,[],
12158,https://github.com/radiolok/distortionhdl.git,2023-06-21 17:24:29+00:00,,1,radiolok/distortionhdl,656808725,SystemVerilog,distortionhdl,1439,4,2023-11-27 22:01:56+00:00,[],https://api.github.com/licenses/mit
12159,https://github.com/pulp-platform/obi.git,2023-04-24 17:09:17+00:00,,0,pulp-platform/obi,632081730,SystemVerilog,obi,82,4,2024-03-10 03:46:12+00:00,[],
12160,https://github.com/UIUC-ChenLab/FSSD.git,2023-06-09 15:06:41+00:00,,0,UIUC-ChenLab/FSSD,651584069,SystemVerilog,FSSD,92,3,2024-03-11 03:01:39+00:00,[],https://api.github.com/licenses/apache-2.0
12161,https://github.com/githubofaliyev/SNN-DSE.git,2023-05-31 23:04:24+00:00,Hardware and software implementation of Sparsely-active SNNs,2,githubofaliyev/SNN-DSE,647964217,SystemVerilog,SNN-DSE,11206,3,2024-04-06 12:50:05+00:00,[],
12162,https://github.com/agg23/sdram-controller.git,2023-05-11 18:08:36+00:00,A HDL SDRAM controller designed for retro hardware and FPGAs,3,agg23/sdram-controller,639563169,SystemVerilog,sdram-controller,63,3,2023-10-25 17:14:55+00:00,"['analogue-pocket', 'fpga', 'misterfpga', 'sdram', 'sdram-controller']",https://api.github.com/licenses/mit
12163,https://github.com/Mihaelfug/apb.git,2023-06-02 19:25:32+00:00,,0,Mihaelfug/apb,648773765,SystemVerilog,apb,9,3,2023-10-05 05:29:43+00:00,[],
12164,https://github.com/Sulekha231/3x1-mux.git,2023-04-18 12:53:54+00:00,,0,Sulekha231/3x1-mux,629503622,SystemVerilog,3x1-mux,0,3,2023-06-29 07:19:05+00:00,[],
12165,https://github.com/angry-goose-initiative/letc.git,2023-06-01 02:07:32+00:00,The Little Engine That Could (Run Linux) :),0,angry-goose-initiative/letc,648003945,SystemVerilog,letc,449,3,2024-02-06 23:56:21+00:00,[],https://api.github.com/licenses/mit
12166,https://github.com/Ratwe/evm.git,2023-05-29 06:46:53+00:00,Архитектура ЭВМ - 4/5 семестр ИУ7 МГТУ,0,Ratwe/evm,646706607,SystemVerilog,evm,49371,3,2024-04-10 22:40:20+00:00,"['bmstu-iu7', 'bmstu']",
12167,https://github.com/va7deo/vimana.git,2023-05-21 00:39:08+00:00,Toaplan Vimana / Same! Same! Same! for MiSTer FPGA,1,va7deo/vimana,643375522,SystemVerilog,vimana,28101,3,2023-07-07 06:09:15+00:00,[],https://api.github.com/licenses/gpl-2.0
12168,https://github.com/gravelcai/weiminghu-noc.git,2023-04-25 08:30:48+00:00,,0,gravelcai/weiminghu-noc,632354289,SystemVerilog,weiminghu-noc,3040,3,2023-07-26 14:03:20+00:00,[],https://api.github.com/licenses/unlicense
12169,https://github.com/fpgadeveloper/camera-fmc-vitis-platforms.git,2023-06-02 10:45:10+00:00,Acceleration platforms for Opsero Camera FMCs,1,fpgadeveloper/camera-fmc-vitis-platforms,648596969,SystemVerilog,camera-fmc-vitis-platforms,1995,3,2024-02-21 16:58:30+00:00,[],https://api.github.com/licenses/mit
12170,https://github.com/Powerhouse28/Project.git,2023-05-10 00:29:44+00:00,ENGR 850,1,Powerhouse28/Project,638714879,SystemVerilog,Project,610,3,2023-09-23 08:17:39+00:00,[],
12171,https://github.com/realtime-tracking/graphbuilding.git,2023-06-16 05:23:36+00:00,Online Graph Building on FPGAs for Machine Learning Trigger Applications in Particle Physics,0,realtime-tracking/graphbuilding,654424550,SystemVerilog,graphbuilding,2648,3,2023-08-25 15:51:32+00:00,[],https://api.github.com/licenses/gpl-3.0
12172,https://github.com/ZiyangYE/verilog_UDP.git,2023-06-05 03:14:07+00:00,,1,ZiyangYE/verilog_UDP,649510252,SystemVerilog,verilog_UDP,23,3,2023-10-15 10:35:20+00:00,[],https://api.github.com/licenses/apache-2.0
12173,https://github.com/bitglitcher/QuantiumV.git,2023-06-07 19:25:30+00:00,RISCV SoC Collab work.,1,bitglitcher/QuantiumV,650774086,SystemVerilog,QuantiumV,5003,3,2023-10-28 07:40:11+00:00,[],https://api.github.com/licenses/mit
12174,https://github.com/BigPig-Bro/Anlogic.git,2023-05-27 17:14:20+00:00,【例程】国产安路 FPGA 开发板及其工程,0,BigPig-Bro/Anlogic,646221000,SystemVerilog,Anlogic,9612,3,2023-09-20 15:42:53+00:00,[],
12175,https://github.com/Ismail821/uvm_verification_ahb_apb_bridge.git,2023-05-14 11:21:46+00:00,UVM Verification enviroinment for AHB to APB bridge. Supports upto 8 APB slave Devices. ,1,Ismail821/uvm_verification_ahb_apb_bridge,640521044,SystemVerilog,uvm_verification_ahb_apb_bridge,18826,3,2024-03-12 13:15:37+00:00,[],
12176,https://github.com/OctCarp/SUSTech_CS202-Organization_2023s_Project-CPU.git,2023-05-12 11:43:10+00:00,"(Verilog+MIPS+FPGA MINISYS) (121/100): Single Cycle CPU: Our project of CS202 2023 Spring: Computer Organization, SUSTech. Taught by Prof. Jin ZHANG.",0,OctCarp/SUSTech_CS202-Organization_2023s_Project-CPU,639858881,SystemVerilog,SUSTech_CS202-Organization_2023s_Project-CPU,19588,3,2024-03-29 06:32:32+00:00,"['cs202', 'sustech-course-code', '2023spring', 'sustech']",https://api.github.com/licenses/mit
12177,https://github.com/ukmssu/Study-of-various-multipliers-using-verilog.git,2023-06-03 11:42:44+00:00,"Understanding logic behind each one Multipliers: Array Multiplier, Booth Multiplier, Baugh-Wooley Multiplier and Wallace Multiplier. Implementing each one multiplier using verilog",0,ukmssu/Study-of-various-multipliers-using-verilog,648976575,SystemVerilog,Study-of-various-multipliers-using-verilog,4050,2,2024-04-07 15:32:26+00:00,[],
12178,https://github.com/ttdragon0722/verilog.git,2023-05-12 10:26:48+00:00,ㄏㄏ,0,ttdragon0722/verilog,639833105,SystemVerilog,verilog,15097,2,2023-06-10 15:01:45+00:00,[],
12179,https://github.com/andreondra/vesp-alpha.git,2023-04-19 12:00:54+00:00,RISC-V based student processor for embedded applications.,0,andreondra/vesp-alpha,629971836,SystemVerilog,vesp-alpha,810,2,2024-03-11 15:42:59+00:00,[],https://api.github.com/licenses/gpl-3.0
12180,https://github.com/va7deo/rallybike.git,2023-05-11 04:54:59+00:00,Toaplan Rally Bike,1,va7deo/rallybike,639252370,SystemVerilog,rallybike,53490,2,2023-07-07 06:09:19+00:00,[],
12181,https://github.com/va7deo/demonswld.git,2023-05-09 22:31:28+00:00,Toaplan Demon's World,1,va7deo/demonswld,638690156,SystemVerilog,demonswld,56454,2,2023-07-07 06:09:12+00:00,[],https://api.github.com/licenses/gpl-2.0
12182,https://github.com/jaeyoon0531/URP2023.git,2023-05-15 07:05:24+00:00,,1,jaeyoon0531/URP2023,640806558,SystemVerilog,URP2023,128,2,2023-06-03 05:32:42+00:00,[],
12183,https://github.com/tom-urkin/SDRAM-controller.git,2023-06-04 10:29:48+00:00,SDRAM controller implemented in SystemVerilog for ISSI IS42S16320f-7 IC,1,tom-urkin/SDRAM-controller,649269289,SystemVerilog,SDRAM-controller,7503,2,2023-10-22 15:50:52+00:00,[],
12184,https://github.com/ncsys-lab/analog-verification.git,2023-05-18 21:46:30+00:00,,0,ncsys-lab/analog-verification,642569031,SystemVerilog,analog-verification,4359,2,2023-07-01 21:37:57+00:00,[],
12185,https://github.com/Amirarsalan-sn/RISCV-multi-cycle-processor.git,2023-06-05 09:45:47+00:00,A multi-cycle processor designed according to the instruction set(assembly language) of RISC-V using the System Verilog HDL,0,Amirarsalan-sn/RISCV-multi-cycle-processor,649629768,SystemVerilog,RISCV-multi-cycle-processor,11369,2,2024-04-07 12:25:14+00:00,"['cpu', 'hardware', 'hdl', 'modelsim', 'multi-cycle-processor', 'quartus', 'risc', 'risc-v', 'system-verilog']",
12186,https://github.com/TheShortDuck/synchronous_NoC_systemverilog.git,2023-05-08 12:12:01+00:00,This repository is the collected source code for a Synchronous 2d mesh NoC with diagonal routing.,0,TheShortDuck/synchronous_NoC_systemverilog,637788755,SystemVerilog,synchronous_NoC_systemverilog,36,2,2023-10-10 02:57:24+00:00,[],
12187,https://github.com/frankxaio/Sophomore-Seminar-Verilog-Pratice.git,2023-04-19 13:59:57+00:00,"Practices, projects, and acquired knowledge from the seminar.",0,frankxaio/Sophomore-Seminar-Verilog-Pratice,630021922,SystemVerilog,Sophomore-Seminar-Verilog-Pratice,154176,2,2024-03-26 08:29:22+00:00,[],
12188,https://github.com/BigPig-Bro/Modelsim.git,2023-05-02 06:04:11+00:00,【例程】用于Modelsim的图像、信号仿真类工程，纯代码逻辑仿真，无DRAM等工程实用模型。 仅用于仿真贴图，不一定适用于实物,0,BigPig-Bro/Modelsim,635175519,SystemVerilog,Modelsim,1830,2,2023-06-13 14:19:06+00:00,[],
12189,https://github.com/evancheng02/cva6-renaming.git,2023-05-01 07:46:55+00:00,,3,evancheng02/cva6-renaming,634791870,SystemVerilog,cva6-renaming,17155,2,2023-05-01 21:36:09+00:00,[],
12190,https://github.com/OmarBadr108/FIFO_testbench.git,2023-05-07 09:59:27+00:00,"black box verfication of a synchronus FIFO using dynamic verfication ( code coverage , function coverage and Assertions)",0,OmarBadr108/FIFO_testbench,637356205,SystemVerilog,FIFO_testbench,6,2,2023-09-25 18:34:55+00:00,[],
12191,https://github.com/Orderism/FIR_Bluetooth_ECE551.git,2023-05-14 23:19:50+00:00,"Synthesis & Post-synthesis is based on the SAED32_lib(cell libary). Include the connection part based on A2D, UART, SPI, and the filter weighted & control part. Connect your cell phone to radio with an FPGA board , you are the best DJ of tonight!!! Just try it!",1,Orderism/FIR_Bluetooth_ECE551,640695916,SystemVerilog,FIR_Bluetooth_ECE551,9807,2,2024-02-17 15:21:11+00:00,[],
12192,https://github.com/BMWTree/Virtualization.git,2023-04-17 11:05:17+00:00,,0,BMWTree/Virtualization,628970736,SystemVerilog,Virtualization,43096,2,2024-01-14 14:04:06+00:00,[],
12193,https://github.com/STARS-Design-Track-2023/synthestars.git,2023-06-20 12:17:28+00:00,Synthestars Team 13-Channel Synthesizer HDL Project,0,STARS-Design-Track-2023/synthestars,656181457,SystemVerilog,synthestars,122,2,2023-06-27 20:45:36+00:00,[],
12194,https://github.com/STARS-Design-Track-2023/outel-8227.git,2023-06-20 13:52:29+00:00,,0,STARS-Design-Track-2023/outel-8227,656221976,SystemVerilog,outel-8227,1653,2,2023-06-30 21:36:22+00:00,[],
12195,https://github.com/estufa-cin-ufpe/RISC-V-Pipeline.git,2023-06-15 16:28:43+00:00,32-bit 5-stage pipelined RISC-V processor in SystemVerilog,1,estufa-cin-ufpe/RISC-V-Pipeline,654219121,SystemVerilog,RISC-V-Pipeline,2752,2,2024-02-11 04:34:15+00:00,"['pipeline', 'processor', 'risc', 'risc-v', 'riscv', 'systemverilog']",https://api.github.com/licenses/mit
12196,https://github.com/amsheth/2048_vivado.git,2023-05-13 00:02:27+00:00,This is a System Verilog implementation of 2048 in Vivado and Artx A7,0,amsheth/2048_vivado,640080596,SystemVerilog,2048_vivado,1039,2,2024-03-02 01:34:25+00:00,[],
12197,https://github.com/ika-musume/IKA32010.git,2023-06-02 15:53:59+00:00,A BSD-licensed Verilog core for TI's TMS32010 DSP,0,ika-musume/IKA32010,648708246,SystemVerilog,IKA32010,18,2,2024-01-20 15:39:21+00:00,[],https://api.github.com/licenses/bsd-2-clause
12198,https://github.com/m9in1/alarm-with-sound.git,2023-06-09 23:09:17+00:00,,0,m9in1/alarm-with-sound,651723945,SystemVerilog,alarm-with-sound,4715,1,2023-06-14 21:08:37+00:00,[],
12199,https://github.com/sathviks/UVM_FUNDAMENTALS.git,2023-06-17 14:37:19+00:00,"UVM Fundamentals code challenge WELCOME TO MY 100 DAYS OF RTL  My Name is Sathvik S, I mostly use Xilinx ISE 14.7 Design Suite and sometimes Modelsim  and Eda playground software for the simulation of RTL Codes. And The Synthesis is performed by using Intel Quartus Prime Software.",0,sathviks/UVM_FUNDAMENTALS,654988604,SystemVerilog,UVM_FUNDAMENTALS,1306,1,2023-06-20 05:43:06+00:00,[],
12200,https://github.com/NikosLefakis/hy220-maze.git,2023-04-19 13:28:34+00:00,The game maze  Mario with systemverilog  in lesson HY220 in CSD-UoC.,0,NikosLefakis/hy220-maze,630008283,SystemVerilog,hy220-maze,21,1,2023-11-09 20:48:41+00:00,[],
12201,https://github.com/PRAGATI-0102/Gray-Converter-using-SV-Day-055-.git,2023-06-03 16:11:45+00:00,A Gray code is a binary numeral system in which adjacent values differ by only one bit. The converter takes an i-bit binary number as input and generates the corresponding i-bit Gray code.,0,PRAGATI-0102/Gray-Converter-using-SV-Day-055-,649052415,SystemVerilog,Gray-Converter-using-SV-Day-055-,86,1,2023-06-04 12:06:26+00:00,[],
12202,https://github.com/Ismail821/sv_verification_ahb_apb_bridge.git,2023-05-23 17:03:59+00:00,"Verification of AHB to APB Bridge, using System verilog",0,Ismail821/sv_verification_ahb_apb_bridge,644509911,SystemVerilog,sv_verification_ahb_apb_bridge,24,1,2023-05-23 17:32:33+00:00,[],
12203,https://github.com/ItisCaleb/Verilog-Homework.git,2023-04-27 08:49:42+00:00,digital design verilog homework,0,ItisCaleb/Verilog-Homework,633321850,SystemVerilog,Verilog-Homework,3603,1,2023-10-10 16:50:11+00:00,[],
12204,https://github.com/mukesh891/PCIE_SV.git,2023-06-21 15:23:49+00:00,Generating TLPs using PCIE protocol,0,mukesh891/PCIE_SV,656760515,SystemVerilog,PCIE_SV,12,1,2024-02-21 11:21:20+00:00,[],
12205,https://github.com/lizocf/ECE251.git,2023-04-25 15:24:21+00:00,,0,lizocf/ECE251,632522437,SystemVerilog,ECE251,205,1,2023-04-26 00:16:54+00:00,[],
12206,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-besties.git,2023-05-09 22:07:25+00:00,ece-251-spring-2023-final-project-besties created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-besties,638684570,SystemVerilog,ece-251-spring-2023-final-project-besties,122,1,2023-05-10 00:48:40+00:00,[],
12207,https://github.com/chesskiss/VLSI_AI_crypto_tools.git,2023-05-09 15:16:13+00:00,"AI on chip, to decode crypto.",0,chesskiss/VLSI_AI_crypto_tools,638542535,SystemVerilog,VLSI_AI_crypto_tools,56176,1,2024-01-09 15:41:17+00:00,[],
12209,https://github.com/denSmashh/Verilog.git,2023-06-01 13:35:22+00:00,,0,denSmashh/Verilog,648225354,SystemVerilog,Verilog,28,1,2023-11-13 13:23:04+00:00,[],
12210,https://github.com/angelus9/CORE_I_DG.git,2023-06-09 13:24:33+00:00,CORE I Latest Experimental Code,1,angelus9/CORE_I_DG,651543298,SystemVerilog,CORE_I_DG,24,1,2023-07-22 21:52:04+00:00,[],
12211,https://github.com/vyom-elan/System-Verilog.git,2023-06-11 09:12:20+00:00,SystemVerilog files,0,vyom-elan/System-Verilog,652156836,SystemVerilog,System-Verilog,62,1,2023-07-08 03:48:31+00:00,[],
12212,https://github.com/bbnoir/dcs.git,2023-06-08 09:11:24+00:00,,0,bbnoir/dcs,650998751,SystemVerilog,dcs,235466,1,2024-03-04 06:15:41+00:00,[],
12213,https://github.com/Sanket-Makkar/SystemVerilog.git,2023-05-22 16:04:42+00:00,This contains all ModelSim projects from my Digital Logic Design class.,0,Sanket-Makkar/SystemVerilog,644010045,SystemVerilog,SystemVerilog,19,1,2023-05-22 18:51:27+00:00,[],
12214,https://github.com/Ariel424/Communication-Protocol-Verification-of-UART.git,2023-06-02 05:45:38+00:00,"Verification of Universal Asynchronous Receiver Transmitter (URAT). The code contains the SPI structure itself, and Classe's for comprehensive testing: Transaction, Generator, Driver, Monitor, Scoreboard and also T…",0,Ariel424/Communication-Protocol-Verification-of-UART,648498838,SystemVerilog,Communication-Protocol-Verification-of-UART,36,1,2023-09-26 09:07:24+00:00,[],
12215,https://github.com/pulp-platform/irq_router.git,2023-05-02 14:02:05+00:00,,0,pulp-platform/irq_router,635350066,SystemVerilog,irq_router,13,1,2023-05-12 15:08:19+00:00,[],https://api.github.com/licenses/apache-2.0
12216,https://github.com/JakeA42/mini-crypto-accelerator.git,2023-05-30 20:56:52+00:00,,0,JakeA42/mini-crypto-accelerator,647464422,SystemVerilog,mini-crypto-accelerator,33,1,2023-06-10 22:35:26+00:00,[],
12217,https://github.com/evgenysns/PMSM_frga.git,2023-06-15 10:10:29+00:00,simple pmsm controller,0,evgenysns/PMSM_frga,654065955,SystemVerilog,PMSM_frga,951,1,2023-11-16 06:16:18+00:00,[],
12218,https://github.com/RPTU-EIS/Security-Conscious-Hardware.git,2023-05-31 07:50:16+00:00,Collection of experiments on data-oblivious hardware designs that dynamically adjust their latency,0,RPTU-EIS/Security-Conscious-Hardware,647635630,SystemVerilog,Security-Conscious-Hardware,126,1,2024-01-30 10:41:38+00:00,[],
12219,https://github.com/dgarci23/snn_soc.git,2023-04-20 13:52:59+00:00,,0,dgarci23/snn_soc,630492426,SystemVerilog,snn_soc,165,1,2024-02-26 02:59:43+00:00,[],
12220,https://github.com/JohnBagshaw/UVM.git,2023-05-07 04:03:57+00:00,Design Verification Tasks,0,JohnBagshaw/UVM,637279895,SystemVerilog,UVM,12,1,2024-03-21 16:42:25+00:00,[],
12221,https://github.com/AndLiuTiw/ProjFin.git,2023-05-31 21:25:38+00:00,,0,AndLiuTiw/ProjFin,647941180,SystemVerilog,ProjFin,65,1,2023-11-12 05:44:16+00:00,[],
12222,https://github.com/IteratorandIterator/7-stage-sequential-four-issue-superscalar-MIPS-processor-design.git,2023-05-31 12:42:02+00:00,7-stage sequential four-issue superscalar MIPS processor design,0,IteratorandIterator/7-stage-sequential-four-issue-superscalar-MIPS-processor-design,647746811,SystemVerilog,7-stage-sequential-four-issue-superscalar-MIPS-processor-design,202,1,2023-06-17 14:10:08+00:00,[],https://api.github.com/licenses/mit
12223,https://github.com/EmanFatima-ef/Computer-Architecture.git,2023-05-31 21:47:34+00:00,,0,EmanFatima-ef/Computer-Architecture,647946655,SystemVerilog,Computer-Architecture,33,1,2023-05-31 22:46:43+00:00,[],
12224,https://github.com/abdelazeem201/ovl.git,2023-05-11 17:43:00+00:00,Accellera Standard OVL V2,0,abdelazeem201/ovl,639554187,SystemVerilog,ovl,1404,1,2023-05-30 17:09:37+00:00,[],https://api.github.com/licenses/mit
12225,https://github.com/look4raghav/SV.git,2023-06-11 07:10:50+00:00,System_Verilog,0,look4raghav/SV,652127472,SystemVerilog,SV,107,1,2023-06-18 18:44:26+00:00,[],https://api.github.com/licenses/mit
12226,https://github.com/Ridwan-Hussain/Computer-Architecture.git,2023-04-30 20:55:21+00:00,Created a MIPs CPU in Verilog for ECE251.,0,Ridwan-Hussain/Computer-Architecture,634661445,SystemVerilog,Computer-Architecture,130,1,2023-12-31 15:51:51+00:00,[],
12227,https://github.com/Papayaved/cnc3_fpga.git,2023-05-10 07:50:58+00:00,Wire-cut CNC machine (EDM and stone). 10M16SCE144 FPGA project for Quartus,0,Papayaved/cnc3_fpga,638833172,SystemVerilog,cnc3_fpga,685,1,2023-12-19 20:24:37+00:00,"['fpga', 'systemverilog', 'verilog']",https://api.github.com/licenses/gpl-3.0
12228,https://github.com/hiremathpriyag/DMA_reg_verifier.git,2023-04-20 10:52:10+00:00,,0,hiremathpriyag/DMA_reg_verifier,630422882,SystemVerilog,DMA_reg_verifier,9,1,2023-05-23 04:10:59+00:00,[],
12229,https://github.com/hylnpy2021/mcdf.git,2023-04-18 12:37:10+00:00,shiyan,0,hylnpy2021/mcdf,629496235,SystemVerilog,mcdf,34,1,2023-06-13 13:48:42+00:00,[],
12230,https://github.com/ziyueg3/ECE385-Final-Project-Pico-Park.git,2023-05-10 15:24:14+00:00,This is the final project of ECE385 courses. We use the FGPA board to make a game Pico Park.,0,ziyueg3/ECE385-Final-Project-Pico-Park,639017655,SystemVerilog,ECE385-Final-Project-Pico-Park,1496,1,2023-05-11 01:47:20+00:00,[],
12231,https://github.com/zhang-stephen/hdlbits-sv-solutions.git,2023-05-21 17:08:17+00:00,SystemVerilog Solutions to exercise from HDLBits,0,zhang-stephen/hdlbits-sv-solutions,643598345,SystemVerilog,hdlbits-sv-solutions,12,1,2023-05-30 03:27:13+00:00,"['hdl', 'systemverilog', 'fpga-programming', 'hdlbits', 'hdlbitssolution']",https://api.github.com/licenses/mit
12232,https://github.com/veznitom/VTM.git,2023-05-29 13:11:32+00:00,Expansion and continuation of the bachelor thesis RISC-V Superscalar Processor. (https://gitlab.fit.cvut.cz/veznitom/bakalarsky-projekt),0,veznitom/VTM,646841621,SystemVerilog,VTM,2339,1,2023-10-02 14:19:32+00:00,[],https://api.github.com/licenses/mit
12233,https://github.com/tommy73594/SNN.git,2023-06-17 05:18:18+00:00,Asynchronous Spiking Neural Network Accelerator. Project from EE552-Asynchronous VLSI Design. ,0,tommy73594/SNN,654839720,SystemVerilog,SNN,21,1,2024-02-26 02:52:59+00:00,[],
12234,https://github.com/sean-galloway/RTLDesignSherpa.git,2023-06-15 21:56:48+00:00,This site is hopefully a springboard for others to learn about coding in System Verilog and experimenting with FPGAs.,0,sean-galloway/RTLDesignSherpa,654322426,SystemVerilog,RTLDesignSherpa,26277,1,2024-01-12 06:29:46+00:00,"['rtl', 'system-verilog', 'uvm-verification']",https://api.github.com/licenses/bsd-3-clause
12235,https://github.com/Nancy-Makar/SPI_Master_Driver.git,2023-05-02 20:30:56+00:00,SPI Master Driver - Mode 1 ,0,Nancy-Makar/SPI_Master_Driver,635497662,SystemVerilog,SPI_Master_Driver,19,1,2023-05-03 10:41:13+00:00,[],https://api.github.com/licenses/mit
12236,https://github.com/nutc-csiejar/Logical-design-final.git,2023-06-11 02:30:27+00:00,數位邏輯期末考,0,nutc-csiejar/Logical-design-final,652076881,SystemVerilog,Logical-design-final,7,1,2023-06-15 07:46:23+00:00,[],
12237,https://github.com/tom-urkin/PRNG.git,2023-04-30 12:20:41+00:00,Cellular automaton based pseudo random number generator,0,tom-urkin/PRNG,634526272,SystemVerilog,PRNG,880,1,2023-05-01 06:15:33+00:00,[],
12238,https://github.com/jpenolio75/tron_on_vga.git,2023-05-10 00:06:57+00:00,An implementation of the popular Tron arcade game on the Altera DE2-115 board for UNLV CpE 302 Synthesis and Verification Using Programmable Devices final.,0,jpenolio75/tron_on_vga,638710061,SystemVerilog,tron_on_vga,19,1,2023-11-05 02:46:52+00:00,"['nintendo-entertainment-system', 'systemverilog', 'tron-game', 'vga', 'altera-quartus', 'de2-115']",https://api.github.com/licenses/mit
12239,https://github.com/zhb9103/LightUart_MultiPort_Example.git,2023-05-01 04:21:48+00:00,Example for integrating LightUart_MultiPort,0,zhb9103/LightUart_MultiPort_Example,634744322,SystemVerilog,LightUart_MultiPort_Example,3932,1,2024-01-29 14:04:56+00:00,[],
12240,https://github.com/davidmallasen/F-HEEP.git,2023-04-21 07:54:13+00:00,System integrating fpu_ss into X-HEEP via the eXtension interface.,0,davidmallasen/F-HEEP,630811361,SystemVerilog,F-HEEP,19041,1,2023-04-26 09:38:08+00:00,[],
12241,https://github.com/negative-seven/fpga_hdmi.git,2023-05-04 11:19:36+00:00,"HDMI output device written in SystemVerilog, to be run on a ZedBoard.",0,negative-seven/fpga_hdmi,636220410,SystemVerilog,fpga_hdmi,50801,1,2023-07-10 21:41:29+00:00,[],
12242,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-bawsss.git,2023-05-09 22:05:42+00:00,ece-251-spring-2023-final-project-bawsss created by GitHub Classroom,1,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-bawsss,638684127,SystemVerilog,ece-251-spring-2023-final-project-bawsss,669,1,2023-10-03 04:11:07+00:00,[],
12243,https://github.com/chetha123/coverage_systemverilog.git,2023-05-03 16:04:55+00:00,function covergae information/code,0,chetha123/coverage_systemverilog,635864424,SystemVerilog,coverage_systemverilog,5,1,2023-05-03 16:59:19+00:00,[],
12244,https://github.com/Jerry93-7/98154-tapeout.git,2023-05-03 17:41:57+00:00,"Chip Tapeout for 98154, Open-source FPGA and ASIC Chip Design",0,Jerry93-7/98154-tapeout,635900694,SystemVerilog,98154-tapeout,6004,1,2023-08-07 08:53:51+00:00,[],https://api.github.com/licenses/apache-2.0
12245,https://github.com/UDogg/CMPEN270verilog.git,2023-04-17 16:12:46+00:00,,0,UDogg/CMPEN270verilog,629102493,SystemVerilog,CMPEN270verilog,4,1,2023-07-07 19:30:09+00:00,[],
12246,https://github.com/Spriteson/Correction-Decoder.git,2023-05-14 12:23:00+00:00,,0,Spriteson/Correction-Decoder,640535587,SystemVerilog,Correction-Decoder,114,1,2023-12-31 00:17:27+00:00,[],
12247,https://github.com/NYU-Processor-Design/PurdNyUart.git,2023-05-31 19:39:47+00:00,,0,NYU-Processor-Design/PurdNyUart,647909782,SystemVerilog,PurdNyUart,109,1,2024-03-08 07:34:20+00:00,[],https://api.github.com/licenses/cc0-1.0
12248,https://github.com/Bardisk/coreals-rv32.git,2023-06-09 09:46:22+00:00,An RTL implementation of a 5-level pipeline riscv32 core.,0,Bardisk/coreals-rv32,651465725,SystemVerilog,coreals-rv32,15,1,2024-03-21 00:42:15+00:00,[],
12249,https://github.com/mrincognito01/Synchronous_FIFO.git,2023-04-22 05:29:20+00:00,,0,mrincognito01/Synchronous_FIFO,631155600,SystemVerilog,Synchronous_FIFO,1,1,2023-07-23 14:05:33+00:00,[],
12250,https://github.com/cepeters-ucsd/cse141L-project.git,2023-05-09 22:27:59+00:00,,0,cepeters-ucsd/cse141L-project,638689408,SystemVerilog,cse141L-project,78,1,2023-10-08 22:02:55+00:00,[],
12251,https://github.com/Nagarjun444/SRAM_UVM.git,2023-04-22 15:44:42+00:00,Sram design and verification using UVM,0,Nagarjun444/SRAM_UVM,631305067,SystemVerilog,SRAM_UVM,10,1,2023-07-06 13:24:08+00:00,[],
12252,https://github.com/gopalvamsi09/32_bit_adder_uvm_code.git,2023-05-19 08:34:24+00:00,,0,gopalvamsi09/32_bit_adder_uvm_code,642738625,SystemVerilog,32_bit_adder_uvm_code,84,1,2023-05-19 09:46:44+00:00,[],
12253,https://github.com/Akhil-Barad-04/100_design_modules.git,2023-05-03 06:35:40+00:00,,0,Akhil-Barad-04/100_design_modules,635646214,SystemVerilog,100_design_modules,635,1,2023-05-03 06:43:11+00:00,[],
12254,https://github.com/samirti/sv.git,2023-05-31 18:53:47+00:00,,0,samirti/sv,647894417,SystemVerilog,sv,9879,1,2023-06-01 07:35:12+00:00,[],
12255,https://github.com/MuhammadHuzaifa-stu/RISCV-Pipelined-CSR-s.git,2023-05-06 12:54:29+00:00,,0,MuhammadHuzaifa-stu/RISCV-Pipelined-CSR-s,637080467,SystemVerilog,RISCV-Pipelined-CSR-s,2470,1,2024-01-24 08:38:33+00:00,[],
12256,https://github.com/chetha123/APB_Protocol.git,2023-05-14 06:32:08+00:00,Design and UVM testbench code for APB Protocol,0,chetha123/APB_Protocol,640456163,SystemVerilog,APB_Protocol,7320,1,2023-05-23 16:25:25+00:00,[],
12257,https://github.com/mrincognito01/Asynchronous_FIFO.git,2023-04-17 09:27:46+00:00,,1,mrincognito01/Asynchronous_FIFO,628933590,SystemVerilog,Asynchronous_FIFO,7,1,2023-07-23 14:05:30+00:00,[],
12258,https://github.com/tom-urkin/VGA-SRAM.git,2023-05-18 08:02:40+00:00,Generation and visualization of cellular automaton based patterns stored on SRAM chip via VGA protocol in SystemVerilog,0,tom-urkin/VGA-SRAM,642278989,SystemVerilog,VGA-SRAM,32808,1,2023-05-19 10:24:47+00:00,[],
12259,https://github.com/LasithaJananjaya/EN2111-UART-Transceiver.git,2023-06-01 04:00:25+00:00,,0,LasithaJananjaya/EN2111-UART-Transceiver,648030869,SystemVerilog,EN2111-UART-Transceiver,6360,1,2023-08-22 08:42:38+00:00,[],
12260,https://github.com/CristianMascia/ibex-ri5cy-soc.git,2023-05-18 17:21:33+00:00,Simulation and Synthesis on FPGA of SoC with IBEX or CV32E40P,0,CristianMascia/ibex-ri5cy-soc,642488249,SystemVerilog,ibex-ri5cy-soc,4714,1,2023-08-26 04:42:32+00:00,[],
12261,https://github.com/jahidul10/32-bit-RISC-V-core-and-APB-design..git,2023-04-17 17:50:36+00:00,VLSI lab final project using Cadence.,0,jahidul10/32-bit-RISC-V-core-and-APB-design.,629140481,SystemVerilog,32-bit-RISC-V-core-and-APB-design.,3405,1,2023-09-21 03:20:36+00:00,[],
12262,https://github.com/ribrdb/fpgahawk.git,2023-04-18 04:37:43+00:00,,0,ribrdb/fpgahawk,629319537,SystemVerilog,fpgahawk,127,1,2023-04-21 20:55:09+00:00,[],https://api.github.com/licenses/mit
12263,https://github.com/ivanMilin/UVM-for-ALU.git,2023-06-08 00:12:37+00:00,"Uvod u UVM verifikaciju, prepravljena hijerarhija i prekucani kodovi sa youtube snimka, osnovne akademske studije",0,ivanMilin/UVM-for-ALU,650847906,SystemVerilog,UVM-for-ALU,21,1,2024-02-04 03:18:13+00:00,"['uvm-verification', 'systemverilog']",
12264,https://github.com/SagarSorathiya2002/APB_UVM.git,2023-06-16 11:00:16+00:00,APB_VERIFICATION_UVM,0,SagarSorathiya2002/APB_UVM,654542482,SystemVerilog,APB_UVM,277,1,2024-02-19 02:42:03+00:00,[],
12265,https://github.com/alencar-felipe/mea-craft.git,2023-04-27 20:20:11+00:00,,0,alencar-felipe/mea-craft,633577649,SystemVerilog,mea-craft,1535,1,2023-06-12 21:36:02+00:00,[],
12266,https://github.com/OFS/ofs-f2000x-pl.git,2023-04-17 18:32:06+00:00,,0,OFS/ofs-f2000x-pl,629155755,SystemVerilog,ofs-f2000x-pl,4567,1,2023-08-11 09:10:13+00:00,[],https://api.github.com/licenses/mit
12267,https://github.com/AzofeifaJ/Proyecto_3_Diseno_Logico.git,2023-05-18 05:43:55+00:00,Multiplicador secuencial,0,AzofeifaJ/Proyecto_3_Diseno_Logico,642233953,SystemVerilog,Proyecto_3_Diseno_Logico,210,1,2023-06-14 16:40:59+00:00,[],https://api.github.com/licenses/mit
12268,https://github.com/weelieguo/computer-architecture-lab.git,2023-05-14 23:40:42+00:00,,0,weelieguo/computer-architecture-lab,640699782,SystemVerilog,computer-architecture-lab,6626,1,2023-09-06 23:45:55+00:00,[],
12269,https://github.com/JasonBrave/MicroSoC.git,2023-04-24 00:29:19+00:00,RISC-V SoC,0,JasonBrave/MicroSoC,631741388,SystemVerilog,MicroSoC,38,1,2024-02-11 04:04:54+00:00,"['microcontroller', 'risc-v', 'riscv', 'soc', 'system-on-chip', 'systemverilog', 'uart', 'verilog']",
12270,https://github.com/DilipKrishnappa/APB.git,2023-05-12 09:04:24+00:00,,0,DilipKrishnappa/APB,639803259,SystemVerilog,APB,6250,1,2024-03-18 01:34:50+00:00,[],
12271,https://github.com/wmiskowicz/Saper_game.git,2023-06-20 12:34:29+00:00,Project of popular game Saper designed for FPGA Basys-3. AGH 2023.,0,wmiskowicz/Saper_game,656188399,SystemVerilog,Saper_game,6096,1,2024-03-22 21:43:12+00:00,[],
12272,https://github.com/srkhan01/picoMIPS.git,2023-04-23 10:48:05+00:00,A custom picoMIPS implementation for ELEC6234 Embedded Processors,0,srkhan01/picoMIPS,631539701,SystemVerilog,picoMIPS,893,1,2024-04-08 14:49:53+00:00,[],
12273,https://github.com/EhabMostafaa/ATM-System.git,2023-05-17 08:04:48+00:00,ATM System design and its UVM environment verification,0,EhabMostafaa/ATM-System,641810475,SystemVerilog,ATM-System,25,1,2023-05-24 03:35:28+00:00,[],
12274,https://github.com/sathviks/SytemVerilog.git,2023-05-27 14:46:31+00:00,"As a graduate in Electronics and Communication, I have experience in digital circuit design, Verilog, SystemVerilog, and simulation tools like QuestaSim and ModelSim. Passionate about innovation and committed to delivering high-quality results on time",0,sathviks/SytemVerilog,646180790,SystemVerilog,SytemVerilog,48,1,2023-06-08 17:04:22+00:00,[],
12275,https://github.com/AKhaled47/Dual_Port_Ram.git,2023-04-20 23:57:45+00:00,Ram with dual ports each with different clock rates,0,AKhaled47/Dual_Port_Ram,630690262,SystemVerilog,Dual_Port_Ram,2,1,2023-04-27 16:18:42+00:00,[],
12276,https://github.com/chetha123/AXI_Protocol.git,2023-05-14 06:33:15+00:00,Design and UVM testbench code for AXI Protocol,0,chetha123/AXI_Protocol,640456340,SystemVerilog,AXI_Protocol,11,1,2023-05-23 16:25:29+00:00,[],
12277,https://github.com/NickSica/ECEC575.git,2023-04-26 13:56:47+00:00,,0,NickSica/ECEC575,632969381,SystemVerilog,ECEC575,8149,1,2024-01-29 15:07:04+00:00,[],
12278,https://github.com/ismahc/Lab-digitales.git,2023-05-25 02:21:28+00:00,,0,ismahc/Lab-digitales,645137542,SystemVerilog,Lab-digitales,13,1,2024-04-11 23:26:25+00:00,[],
12279,https://github.com/JohnGierlach/Cache_Project.git,2023-04-24 07:41:21+00:00,,0,JohnGierlach/Cache_Project,631851628,SystemVerilog,Cache_Project,8563,1,2023-04-25 17:53:35+00:00,[],
12280,https://github.com/OmarBadr108/black_box_verfication.git,2023-05-07 11:01:47+00:00,a bank of 8 registers each one of them has a bug and i have to test it and know the bug in each register,0,OmarBadr108/black_box_verfication,637371229,SystemVerilog,black_box_verfication,1470,1,2023-08-23 20:18:43+00:00,[],
12281,https://github.com/FlorentFlament/atari-csync.git,2023-04-27 22:01:10+00:00,Generating a clean Atari ST RGB C-Sync signal ,0,FlorentFlament/atari-csync,633605141,SystemVerilog,atari-csync,97,1,2023-04-30 12:34:35+00:00,[],
12282,https://github.com/ChipDev/MorseVerilog.git,2023-06-09 09:01:48+00:00,,0,ChipDev/MorseVerilog,651448929,SystemVerilog,MorseVerilog,255,1,2023-06-11 05:52:51+00:00,[],
12283,https://github.com/R-Rjn/System_Verilog.git,2023-06-14 12:38:01+00:00,The way i am learning systemverilog.,0,R-Rjn/System_Verilog,653636996,SystemVerilog,System_Verilog,43,1,2023-08-03 11:52:29+00:00,[],https://api.github.com/licenses/mit
12284,https://github.com/mukesh891/Ethernet_packet_gen.git,2023-06-01 10:23:14+00:00,"This repo is coded in UVM, with command line control to generate Ethernet packets",0,mukesh891/Ethernet_packet_gen,648153152,SystemVerilog,Ethernet_packet_gen,11049,1,2023-11-25 09:00:35+00:00,[],
12285,https://github.com/MuhammadHuzaifa-stu/RISCV-Pipelined-Architecture.git,2023-04-23 08:07:59+00:00,Implementing 3 stage pipelined architecture,0,MuhammadHuzaifa-stu/RISCV-Pipelined-Architecture,631501805,SystemVerilog,RISCV-Pipelined-Architecture,15,1,2023-05-06 12:53:25+00:00,[],
12286,https://github.com/kirollos9/fifo_verification.git,2023-05-09 14:14:11+00:00,this project to test  encrypted fifo with function coverage and assertions coverage ,0,kirollos9/fifo_verification,638514485,SystemVerilog,fifo_verification,1078,1,2023-12-17 12:06:04+00:00,[],
12287,https://github.com/IteratorandIterator/4.-4-way-set-associative-cache-with-tree-based-pseudo-LRU-design.git,2023-06-14 13:09:54+00:00,"此缓存总容量为32KB，Write Back, 替换策略为tree-based pseudo LRU，缓存内部两级流水。地址解码和选择将会被替换的缓存行由第一级流水线实现，访存操作在第二级流水线实现（多周期访存）。在FPGA上工作频率能接近170MHz。",0,IteratorandIterator/4.-4-way-set-associative-cache-with-tree-based-pseudo-LRU-design,653651044,SystemVerilog,4.-4-way-set-associative-cache-with-tree-based-pseudo-LRU-design,167,1,2023-06-19 10:05:34+00:00,[],https://api.github.com/licenses/mit
12288,https://github.com/OMiD-Borzoei/RISC-V-MultiCycle.git,2023-06-06 12:49:02+00:00,Final Project of Computer Architecture using SystemVerilog,0,OMiD-Borzoei/RISC-V-MultiCycle,650147405,SystemVerilog,RISC-V-MultiCycle,4915,1,2023-06-06 12:57:20+00:00,[],
12289,https://github.com/Fahad-Habib/RISC-V-Pipelined-Processor-with-CSR.git,2023-05-04 17:19:37+00:00,3-stage RISC-V Pipelined Processor with interrupt CSR support,0,Fahad-Habib/RISC-V-Pipelined-Processor-with-CSR,636361714,SystemVerilog,RISC-V-Pipelined-Processor-with-CSR,9,1,2023-12-12 22:12:40+00:00,"['risc-v', 'risc-v-architecture', 'risc-v-assembly', 'digital-system-design', 'systemverilog']",
12290,https://github.com/alineebrit/LOAC.git,2023-04-29 20:47:20+00:00,Laboratório de Organização e Arquitetura de Computadores usando SystemVerilog ,0,alineebrit/LOAC,634350603,SystemVerilog,LOAC,378,1,2024-02-14 00:26:18+00:00,[],
12291,https://github.com/gokeshenzhen/SVA-Local-Variables-Practical-Examples.git,2023-05-07 13:58:54+00:00,,0,gokeshenzhen/SVA-Local-Variables-Practical-Examples,637419475,SystemVerilog,SVA-Local-Variables-Practical-Examples,3,0,2023-05-07 13:59:48+00:00,[],https://api.github.com/licenses/mit
12292,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-verilogician.git,2023-05-09 22:21:39+00:00,ece-251-spring-2023-final-project-verilogician created by GitHub Classroom,1,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-verilogician,638687929,SystemVerilog,ece-251-spring-2023-final-project-verilogician,347,0,2023-05-09 22:21:47+00:00,[],https://api.github.com/licenses/mit
12293,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-zanax.git,2023-05-09 22:16:38+00:00,ece-251-spring-2023-final-project-zanax created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-zanax,638686698,SystemVerilog,ece-251-spring-2023-final-project-zanax,4124,0,2023-05-09 22:16:44+00:00,[],https://api.github.com/licenses/mit
12294,https://github.com/abby96/SV-project.git,2023-05-09 09:09:16+00:00,,0,abby96/SV-project,638188146,SystemVerilog,SV-project,6,0,2023-05-09 09:34:07+00:00,[],
12295,https://github.com/echow2001/ece385_finalproject.git,2023-05-04 22:58:18+00:00,final project for ece 385 at UIUC. using altera max10 fpga emulate parallel eeprom ,0,echow2001/ece385_finalproject,636464237,SystemVerilog,ece385_finalproject,6911,0,2023-05-05 15:28:01+00:00,[],
12296,https://github.com/abhismitta/sv_new.git,2023-05-09 10:02:51+00:00,,0,abhismitta/sv_new,638209156,SystemVerilog,sv_new,1,0,2023-05-09 10:10:44+00:00,[],
12297,https://github.com/adithyakashyap95/Comp_arch.git,2023-05-15 23:53:50+00:00,for compyter arch subject,0,adithyakashyap95/Comp_arch,641171827,SystemVerilog,Comp_arch,172,0,2023-05-26 22:40:35+00:00,[],
12298,https://github.com/efablessmarmik/chipignite_2304_cdac_riscv.git,2023-04-29 05:09:07+00:00,Make in India RISC-V Initiative,0,efablessmarmik/chipignite_2304_cdac_riscv,634115343,SystemVerilog,chipignite_2304_cdac_riscv,733848,0,2023-04-29 05:15:58+00:00,[],https://api.github.com/licenses/apache-2.0
12299,https://github.com/RunpengJ/ucsd-cse140l-lab2.git,2023-04-29 18:39:00+00:00,,0,RunpengJ/ucsd-cse140l-lab2,634320697,SystemVerilog,ucsd-cse140l-lab2,924,0,2023-05-15 01:09:36+00:00,[],
12300,https://github.com/jyothiswaroopa03/lab7-project-repo.git,2023-05-01 01:11:20+00:00,,0,jyothiswaroopa03/lab7-project-repo,634707984,SystemVerilog,lab7-project-repo,3607,0,2023-05-01 01:22:07+00:00,[],
12301,https://github.com/karthik-0710/Verification-of-a-cominational-adder-using-UVM.git,2023-05-01 04:10:22+00:00,,1,karthik-0710/Verification-of-a-cominational-adder-using-UVM,634742029,SystemVerilog,Verification-of-a-cominational-adder-using-UVM,3,0,2023-05-01 04:12:22+00:00,[],
12302,https://github.com/bwilhelm0/18224-tapeout-template.git,2023-05-01 18:51:53+00:00,"Tapeout project, my Intel 8008-like chip. It supports the instruction set of the original 8008, and has the same accumulator architecture.",0,bwilhelm0/18224-tapeout-template,635006240,SystemVerilog,18224-tapeout-template,43661,0,2023-05-10 04:45:02+00:00,[],https://api.github.com/licenses/apache-2.0
12303,https://github.com/Nrusinga/-Developed-verification-components-for-a-4-port-switch-design.git,2023-06-03 03:21:54+00:00,We will be developing verification components for 4-port switch design,0,Nrusinga/-Developed-verification-components-for-a-4-port-switch-design,648866200,SystemVerilog,-Developed-verification-components-for-a-4-port-switch-design,6,0,2023-06-03 03:55:44+00:00,[],
12304,https://github.com/Masooma82/Combinational_Circuit_Design_using_K-maps.git,2023-05-30 04:16:09+00:00,Lab4a: Create a module containing two 2-bits inputs a and b such that we observe the following output on the tri-color LED. Lab4b: build a circuit to display different characters (0 to F) on one of the eight seven-segment displays,0,Masooma82/Combinational_Circuit_Design_using_K-maps,647102239,SystemVerilog,Combinational_Circuit_Design_using_K-maps,617,0,2023-05-30 04:22:12+00:00,[],
12305,https://github.com/Sagarbc05/I2C_SV.git,2023-06-05 00:21:47+00:00,I2C protocol verifcation environment,0,Sagarbc05/I2C_SV,649475309,SystemVerilog,I2C_SV,7,0,2023-08-31 12:52:58+00:00,[],
12306,https://github.com/danielyu925/3_Way_Superscalar_Out_of_Order_Processor_in_R10K_Architecture.git,2023-06-10 01:14:15+00:00,,1,danielyu925/3_Way_Superscalar_Out_of_Order_Processor_in_R10K_Architecture,651744471,SystemVerilog,3_Way_Superscalar_Out_of_Order_Processor_in_R10K_Architecture,436,0,2023-07-05 03:35:35+00:00,[],
12307,https://github.com/SidK123/EigenBot-Artificial-Neuron.git,2023-05-30 17:23:43+00:00,,0,SidK123/EigenBot-Artificial-Neuron,647392824,SystemVerilog,EigenBot-Artificial-Neuron,18,0,2023-08-31 04:05:29+00:00,[],
12308,https://github.com/SiyamAcet/Register_File.git,2023-06-02 08:26:57+00:00,,0,SiyamAcet/Register_File,648550666,SystemVerilog,Register_File,546,0,2023-06-12 12:26:01+00:00,[],
12309,https://github.com/cjbarimbao/advanced-digital-design.git,2023-05-31 08:15:08+00:00,CoE 111 course,0,cjbarimbao/advanced-digital-design,647644750,SystemVerilog,advanced-digital-design,5,0,2023-05-31 08:16:26+00:00,[],
12310,https://github.com/srsapireddy/Systemverilog-Test-Bench-Environment-Half-Adder.git,2023-06-22 19:23:14+00:00,,0,srsapireddy/Systemverilog-Test-Bench-Environment-Half-Adder,657308195,SystemVerilog,Systemverilog-Test-Bench-Environment-Half-Adder,17,0,2023-10-20 07:19:23+00:00,[],
12311,https://github.com/mijanik/TaylorCos.git,2023-06-22 17:15:45+00:00,Approximation of Cosinus function with Taylor series in Verilog,0,mijanik/TaylorCos,657264373,SystemVerilog,TaylorCos,1195,0,2023-06-22 22:12:20+00:00,[],
12312,https://github.com/rkasal/systemVerilog.git,2023-06-19 13:31:38+00:00,basic application of sv,0,rkasal/systemVerilog,655729080,SystemVerilog,systemVerilog,0,0,2023-06-21 09:12:23+00:00,[],
12313,https://github.com/shinchankosen/lab_verilog.git,2023-06-18 00:20:29+00:00,,0,shinchankosen/lab_verilog,655118405,SystemVerilog,lab_verilog,170,0,2023-06-18 00:21:20+00:00,[],
12314,https://github.com/RaviduHM99/UVM-Switch.git,2023-06-21 09:00:50+00:00,,0,RaviduHM99/UVM-Switch,656596445,SystemVerilog,UVM-Switch,7479,0,2023-06-21 14:50:14+00:00,[],
12315,https://github.com/MoraOss/Tarea-5-Sistemas-Digitales.git,2023-06-19 03:13:26+00:00,,0,MoraOss/Tarea-5-Sistemas-Digitales,655501153,SystemVerilog,Tarea-5-Sistemas-Digitales,6,0,2023-06-19 03:16:58+00:00,[],
12316,https://github.com/Nathan33t/Final_Project.git,2023-04-26 22:01:08+00:00,,0,Nathan33t/Final_Project,633144880,SystemVerilog,Final_Project,5845,0,2023-05-05 19:58:30+00:00,[],
12317,https://github.com/Bouer/shifter_SystemVerilog.git,2023-04-28 14:54:54+00:00,,0,Bouer/shifter_SystemVerilog,633906726,SystemVerilog,shifter_SystemVerilog,8766,0,2023-04-28 17:34:16+00:00,[],https://api.github.com/licenses/gpl-3.0
12318,https://github.com/efoerst/color_crasher.git,2023-04-29 01:23:41+00:00,Color Crasher - A game of wits and rainbows,0,efoerst/color_crasher,634075931,SystemVerilog,color_crasher,182,0,2023-06-12 20:24:11+00:00,[],
12319,https://github.com/pedrodeoliamarante/DE1-SoC-Celular-Automation.git,2023-05-22 23:51:19+00:00,,0,pedrodeoliamarante/DE1-SoC-Celular-Automation,644152781,SystemVerilog,DE1-SoC-Celular-Automation,286,0,2023-11-14 18:18:06+00:00,[],
12320,https://github.com/RohanKumar15/VLSI-Verse.git,2023-06-14 07:30:35+00:00,,0,RohanKumar15/VLSI-Verse,653505785,SystemVerilog,VLSI-Verse,38,0,2023-06-23 06:45:14+00:00,[],
12321,https://github.com/Mrinal99kumar/System_Verilog.git,2023-06-14 12:50:08+00:00,,0,Mrinal99kumar/System_Verilog,653642096,SystemVerilog,System_Verilog,13,0,2023-06-14 14:08:27+00:00,[],https://api.github.com/licenses/mit
12322,https://github.com/ikbalarg/GTU_Digital_Logic_Design_LAB.git,2023-06-06 12:19:19+00:00,,0,ikbalarg/GTU_Digital_Logic_Design_LAB,650136384,SystemVerilog,GTU_Digital_Logic_Design_LAB,2385,0,2023-06-06 12:45:26+00:00,[],
12323,https://github.com/YuanziX/dld_lab_sem2.git,2023-05-07 10:46:48+00:00,Verilog code for assignments from my DLD lab,0,YuanziX/dld_lab_sem2,637367596,SystemVerilog,dld_lab_sem2,81,0,2023-05-07 10:59:34+00:00,[],
12324,https://github.com/mohamedelshafie/cocotb-projects.git,2023-05-21 18:01:10+00:00,,0,mohamedelshafie/cocotb-projects,643612482,SystemVerilog,cocotb-projects,38,0,2023-05-21 18:02:42+00:00,[],
12325,https://github.com/agh-riscv/mtm_ppcu_vlsi_riscv.git,2023-05-24 16:01:06+00:00,Project for PPCU_VLSI,0,agh-riscv/mtm_ppcu_vlsi_riscv,644960927,SystemVerilog,mtm_ppcu_vlsi_riscv,161,0,2023-05-24 16:06:14+00:00,[],
12326,https://github.com/d0p1er/safe.git,2023-05-20 00:39:12+00:00,,0,d0p1er/safe,643046867,SystemVerilog,safe,3,0,2023-05-20 00:53:27+00:00,[],
12327,https://github.com/Sequner/sTPU.git,2023-05-20 04:57:01+00:00,Simplified Google TPU RTL with systolic array and memory controller for convolution,0,Sequner/sTPU,643094982,SystemVerilog,sTPU,8,0,2023-05-20 04:58:39+00:00,[],
12328,https://github.com/DilipKrishnappa/multiplier.git,2023-05-18 04:41:01+00:00,verification of 4-bit multiplier,0,DilipKrishnappa/multiplier,642217696,SystemVerilog,multiplier,5997,0,2023-05-18 07:29:10+00:00,[],
12329,https://github.com/mohamd-khaled/mips.git,2023-05-24 21:02:44+00:00,,0,mohamd-khaled/mips,645064331,SystemVerilog,mips,4,0,2023-05-24 21:03:18+00:00,[],
12330,https://github.com/Cra2yPierr0t/KotoamatsuV.git,2023-05-25 03:40:15+00:00,⛩,0,Cra2yPierr0t/KotoamatsuV,645156624,SystemVerilog,KotoamatsuV,26,0,2023-05-25 03:41:49+00:00,[],
12331,https://github.com/Nutmeg43/10-Instruction-Processor.git,2023-05-25 01:28:56+00:00,"A simple 10 instruction processor in Verilog RTL, with UVM testbench",0,Nutmeg43/10-Instruction-Processor,645124431,SystemVerilog,10-Instruction-Processor,21,0,2023-05-30 04:23:24+00:00,[],https://api.github.com/licenses/mit
12332,https://github.com/KalineMzs/factorial-functional-verif.git,2023-05-25 00:41:17+00:00,Repository for developing a verification environment according to the UVM methodology to verify a block that performs the factorial operation,0,KalineMzs/factorial-functional-verif,645113693,SystemVerilog,factorial-functional-verif,293,0,2023-07-08 20:13:13+00:00,[],
12333,https://github.com/ArgyroP/FCFI-landing-pad.git,2023-06-12 16:30:53+00:00,,0,ArgyroP/FCFI-landing-pad,652712838,SystemVerilog,FCFI-landing-pad,370,0,2023-12-06 17:19:07+00:00,[],
12334,https://github.com/gvillanovanm/svlog-aes.git,2023-05-26 01:18:44+00:00,,0,gvillanovanm/svlog-aes,645579190,SystemVerilog,svlog-aes,2634,0,2023-05-26 01:31:24+00:00,[],
12335,https://github.com/rr1verif/100days_of_verif.git,2023-04-20 08:34:32+00:00,This repo will have verification setup for various rtl codes.,0,rr1verif/100days_of_verif,630370464,SystemVerilog,100days_of_verif,91,0,2023-08-04 08:15:27+00:00,[],
12336,https://github.com/shengjie-chen/MeshSim.git,2023-04-28 01:53:41+00:00,,0,shengjie-chen/MeshSim,633656354,SystemVerilog,MeshSim,1849,0,2024-04-03 02:29:35+00:00,[],
12337,https://github.com/nekrasov-d/tremolo-fpga.git,2023-06-18 08:28:34+00:00,,0,nekrasov-d/tremolo-fpga,655213628,SystemVerilog,tremolo-fpga,61,0,2023-07-02 14:34:50+00:00,[],https://api.github.com/licenses/mit
12338,https://github.com/Ariel424/SystemVerilog---Verification-of-D-FF.git,2023-05-21 12:38:42+00:00,,0,Ariel424/SystemVerilog---Verification-of-D-FF,643521649,SystemVerilog,SystemVerilog---Verification-of-D-FF,10,0,2024-04-12 04:44:56+00:00,[],
12339,https://github.com/Zclaussen/SystemVerilog_Timing_Optimization.git,2023-04-19 17:03:07+00:00,Reconfigurable Computing 2 lab 4,1,Zclaussen/SystemVerilog_Timing_Optimization,630099347,SystemVerilog,SystemVerilog_Timing_Optimization,5,0,2023-04-19 17:06:58+00:00,[],
12340,https://github.com/AKouyoumjian/RISC-V-Processor.git,2023-04-19 14:02:42+00:00,"Files from a project making a functioning processor in SystemVerilog and Assembly. Programed full adder, ALU, data memory, and logic functions. Synthesized and simulated results using Xilinx Vivado mixed language simulator.",0,AKouyoumjian/RISC-V-Processor,630023228,SystemVerilog,RISC-V-Processor,5,0,2023-04-19 14:04:03+00:00,[],
12342,https://github.com/Ephtiny/Digital-Circuit.git,2023-04-18 09:38:50+00:00,数字电路的学习笔记,1,Ephtiny/Digital-Circuit,629426192,SystemVerilog,Digital-Circuit,39045,0,2023-07-21 10:22:18+00:00,[],
12343,https://github.com/yavuzselimilik/Simple_8-Bit_ProcessorDesign.git,2023-04-23 12:30:15+00:00,,0,yavuzselimilik/Simple_8-Bit_ProcessorDesign,631564618,SystemVerilog,Simple_8-Bit_ProcessorDesign,1398,0,2023-04-23 14:15:45+00:00,[],
12344,https://github.com/WeiXXXXVVVV/35.git,2023-06-08 09:08:41+00:00,3d,0,WeiXXXXVVVV/35,650997763,SystemVerilog,35,73,0,2023-06-08 09:10:50+00:00,[],
12345,https://github.com/LeloJNM/PomodoroSV.git,2023-06-07 01:10:13+00:00,,0,LeloJNM/PomodoroSV,650388847,SystemVerilog,PomodoroSV,4,0,2023-06-07 01:11:30+00:00,[],
12346,https://github.com/grampol/riscv_processor_sim.git,2023-05-14 20:43:04+00:00,,0,grampol/riscv_processor_sim,640667124,SystemVerilog,riscv_processor_sim,199,0,2023-05-15 05:51:27+00:00,[],
12347,https://github.com/Powerhouse28/Project_3.0.git,2023-05-16 23:52:54+00:00,,0,Powerhouse28/Project_3.0,641673667,SystemVerilog,Project_3.0,413,0,2023-05-16 23:59:07+00:00,[],
12348,https://github.com/vishweswar/ADC.git,2023-05-10 19:06:07+00:00,,0,vishweswar/ADC,639102212,SystemVerilog,ADC,7845,0,2023-07-24 01:29:52+00:00,[],
12349,https://github.com/KashyapKurella3000/FIR_EE287.git,2023-05-08 22:15:21+00:00,,0,KashyapKurella3000/FIR_EE287,638007355,SystemVerilog,FIR_EE287,1074,0,2023-05-08 22:20:36+00:00,[],
12350,https://github.com/florentin05/CVA6.git,2023-06-02 11:48:55+00:00,This is a fork from OpenHWGroup CVA6 repo with support for Xilinx KCU116 board,0,florentin05/CVA6,648617772,SystemVerilog,CVA6,36004,0,2023-07-08 13:07:59+00:00,[],
12351,https://github.com/apkrier/CPEFinal.git,2023-06-05 22:55:21+00:00,,0,apkrier/CPEFinal,649908335,SystemVerilog,CPEFinal,127,0,2023-06-05 22:59:42+00:00,[],
12352,https://github.com/DineshVenkatG/Packed-SIMD-Extension-for-DL-Float-and-B-Float-Datatypes.git,2023-06-06 05:56:42+00:00,,0,DineshVenkatG/Packed-SIMD-Extension-for-DL-Float-and-B-Float-Datatypes,650002774,SystemVerilog,Packed-SIMD-Extension-for-DL-Float-and-B-Float-Datatypes,131,0,2023-06-06 06:01:07+00:00,[],
12353,https://github.com/retar-kamuy/apb.git,2023-06-04 12:09:40+00:00,,0,retar-kamuy/apb,649294655,SystemVerilog,apb,97,0,2023-06-04 13:30:44+00:00,[],
12354,https://github.com/2023-Spring-ECE4278/project2.git,2023-05-21 08:03:12+00:00,,0,2023-Spring-ECE4278/project2,643454921,SystemVerilog,project2,11,0,2023-05-21 08:04:33+00:00,[],
12355,https://github.com/Liuzihan1226/axi_lzh_re.git,2023-05-30 03:35:05+00:00,,0,Liuzihan1226/axi_lzh_re,647092357,SystemVerilog,axi_lzh_re,266,0,2023-05-31 06:06:40+00:00,[],
12356,https://github.com/AlPrime2k1/SystemVerilog.git,2023-05-22 19:34:50+00:00,This repository consists of the files that i developed while learning SystemVerilog,0,AlPrime2k1/SystemVerilog,644086168,SystemVerilog,SystemVerilog,407,0,2023-05-23 18:32:35+00:00,[],
12357,https://github.com/Riyazudd8n/practice.git,2023-05-17 07:29:22+00:00,,0,Riyazudd8n/practice,641797201,SystemVerilog,practice,5,0,2023-06-08 11:05:12+00:00,[],
12358,https://github.com/PrachiGoutam/100days-of-RTL.git,2023-05-05 17:53:57+00:00,RTL Code with Basic to Advance,0,PrachiGoutam/100days-of-RTL,636813668,SystemVerilog,100days-of-RTL,23,0,2023-05-09 16:13:56+00:00,[],
12359,https://github.com/MrDoomsday/Multiplexer-Avalon-ST.git,2023-05-05 14:22:33+00:00,Multiplexer for two streams Avalon-ST,1,MrDoomsday/Multiplexer-Avalon-ST,636736991,SystemVerilog,Multiplexer-Avalon-ST,31,0,2023-05-06 14:08:04+00:00,[],https://api.github.com/licenses/gpl-3.0
12360,https://github.com/alinparcalab/priority_picker.git,2023-05-02 10:10:03+00:00,,0,alinparcalab/priority_picker,635260061,SystemVerilog,priority_picker,1,0,2023-05-02 10:20:10+00:00,[],
12361,https://github.com/Carlos12001/game2048.git,2023-05-01 15:50:00+00:00,This is a SystemVerilog implementation of the game 2048.,0,Carlos12001/game2048,634941950,SystemVerilog,game2048,2499,0,2023-05-16 05:33:37+00:00,[],
12362,https://github.com/abhisheknair1729/direct-mapped-cache.git,2023-05-02 03:52:26+00:00,,0,abhisheknair1729/direct-mapped-cache,635140857,SystemVerilog,direct-mapped-cache,12,0,2023-05-02 03:53:15+00:00,[],
12363,https://github.com/arjundineshk/Dual-Issue-Cell-SPU-pipelined-multimedia-processor.git,2023-04-29 18:52:13+00:00,SystemVerilog implementation of IBM Sony Cell SPU multimedia processor that was used in PlayStation 3.,1,arjundineshk/Dual-Issue-Cell-SPU-pipelined-multimedia-processor,634323863,,Dual-Issue-Cell-SPU-pipelined-multimedia-processor,121,0,2023-04-29 18:52:13+00:00,[],
12365,https://github.com/faizan8349/100-days-RTL.git,2023-04-23 19:38:18+00:00,,0,faizan8349/100-days-RTL,631683759,SystemVerilog,100-days-RTL,90,0,2023-04-29 10:04:51+00:00,[],
12366,https://github.com/LispEngineer/fpga-spi-peripherals.git,2023-05-08 00:31:11+00:00,FPGA SystemVerilog SPI implementation with controllers for several common or interesting peripherals,0,LispEngineer/fpga-spi-peripherals,637573837,SystemVerilog,fpga-spi-peripherals,23229,0,2023-05-08 00:31:46+00:00,[],
12367,https://github.com/NicholasArner/senior_project.git,2023-06-17 05:50:12+00:00,HDL source files for the FPGA image processing project,0,NicholasArner/senior_project,654846700,SystemVerilog,senior_project,26,0,2023-06-17 05:54:14+00:00,[],
12368,https://github.com/TomKessous/Error-Correction-Encoder-Decoder.git,2023-06-17 13:28:45+00:00,,0,TomKessous/Error-Correction-Encoder-Decoder,654966766,SystemVerilog,Error-Correction-Encoder-Decoder,27202,0,2023-06-17 13:30:52+00:00,[],
12369,https://github.com/dsandall/RiscVOtter-i2c.git,2023-06-23 00:10:28+00:00,,0,dsandall/RiscVOtter-i2c,657381527,SystemVerilog,RiscVOtter-i2c,264,0,2023-06-23 06:47:22+00:00,[],
12370,https://github.com/balaji-vbr/AHB-Lite-Protocol-Verification.git,2023-06-19 02:50:17+00:00,,0,balaji-vbr/AHB-Lite-Protocol-Verification,655494758,SystemVerilog,AHB-Lite-Protocol-Verification,366,0,2023-06-19 02:51:17+00:00,[],
12371,https://github.com/jaycordaro/half-band-filter.git,2023-06-19 02:17:50+00:00,"An implementation of an FIR half-band filter, from MATLAB floating point to SystemVerilog fixed point",0,jaycordaro/half-band-filter,655486232,SystemVerilog,half-band-filter,664,0,2023-06-27 17:33:40+00:00,"['dsp', 'filter', 'fir', 'systemverilog-hdl']",https://api.github.com/licenses/bsd-2-clause
12372,https://github.com/mvgprasanth/VLSI-design.git,2023-06-22 21:04:21+00:00,,0,mvgprasanth/VLSI-design,657338315,SystemVerilog,VLSI-design,77,0,2024-02-05 00:58:55+00:00,[],
12373,https://github.com/FHDO-ICLAB/TMRG_Config_Generator.git,2023-04-25 08:14:01+00:00,,0,FHDO-ICLAB/TMRG_Config_Generator,632347792,SystemVerilog,TMRG_Config_Generator,2205,0,2024-02-20 23:01:19+00:00,[],
12374,https://github.com/supleed2/cordic.git,2023-05-28 15:01:35+00:00,SystemVerilog CORDIC block that converts from an input phase (sawtooth wave) to a sine wave,0,supleed2/cordic,646487800,SystemVerilog,cordic,14,0,2024-01-19 04:43:27+00:00,"['cordic', 'module', 'sine-wave', 'systemverilog', 'waveform-generator']",https://api.github.com/licenses/apache-2.0
12375,https://github.com/Vitya198/dds_wg.git,2023-05-14 19:34:28+00:00,,0,Vitya198/dds_wg,640651679,SystemVerilog,dds_wg,2486,0,2023-05-31 10:57:31+00:00,[],
12376,https://github.com/Jimmy-Chu-127/FPGA-SHA-256-Bitcoin-Hashing-Algorithm.git,2023-05-28 01:50:08+00:00,,0,Jimmy-Chu-127/FPGA-SHA-256-Bitcoin-Hashing-Algorithm,646316287,SystemVerilog,FPGA-SHA-256-Bitcoin-Hashing-Algorithm,3563,0,2024-04-06 18:55:11+00:00,[],
12377,https://github.com/ZhengYuhe/NonVonNeumann-4bit-Processor.git,2023-04-28 00:55:01+00:00,A 4-bit processor that uses an array of processing elements to execute program,0,ZhengYuhe/NonVonNeumann-4bit-Processor,633642818,SystemVerilog,NonVonNeumann-4bit-Processor,630,0,2023-04-28 02:47:13+00:00,[],
12378,https://github.com/birdybro/chatGPT4_sv.git,2023-04-28 19:40:11+00:00,"some goofy ai built systemverilog modules, none of these probably work properly, just for fun",0,birdybro/chatGPT4_sv,634004649,SystemVerilog,chatGPT4_sv,9,0,2023-05-01 16:30:06+00:00,[],https://api.github.com/licenses/mit
12379,https://github.com/bushbecky/verilog2vhdl.git,2023-05-08 20:03:04+00:00,,0,bushbecky/verilog2vhdl,637971542,SystemVerilog,verilog2vhdl,17296,0,2023-05-08 20:04:47+00:00,[],https://api.github.com/licenses/mit
12380,https://github.com/SummerDay231/TinyTPU.git,2023-05-08 14:12:56+00:00,,0,SummerDay231/TinyTPU,637838346,SystemVerilog,TinyTPU,6,0,2023-05-08 14:13:57+00:00,[],
12381,https://github.com/abdelrahman99999/Mult_Mode_Counter.git,2023-05-09 15:36:55+00:00,Assignment for Digital System Verification Cource ,0,abdelrahman99999/Mult_Mode_Counter,638551813,SystemVerilog,Mult_Mode_Counter,2,0,2023-05-09 15:37:35+00:00,[],
12382,https://github.com/shubhamsavita98/DV_HW7.git,2023-05-08 07:51:20+00:00,,0,shubhamsavita98/DV_HW7,637689241,SystemVerilog,DV_HW7,2,0,2023-07-13 21:52:02+00:00,[],
12383,https://github.com/SriVemulapalli22/Temp.git,2023-04-30 21:41:45+00:00,,0,SriVemulapalli22/Temp,634670957,SystemVerilog,Temp,33,0,2023-04-30 21:45:19+00:00,[],https://api.github.com/licenses/apache-2.0
12384,https://github.com/karthik-0710/Verification-of-a-multiplier-using-UVM.git,2023-05-01 04:15:36+00:00,,0,karthik-0710/Verification-of-a-multiplier-using-UVM,634743049,SystemVerilog,Verification-of-a-multiplier-using-UVM,3,0,2023-05-01 04:16:01+00:00,[],
12385,https://github.com/CakemasterFTW/18224-ttt-tapeout.git,2023-05-01 22:13:36+00:00,,0,CakemasterFTW/18224-ttt-tapeout,635063718,SystemVerilog,18224-ttt-tapeout,36,0,2023-05-02 20:59:21+00:00,[],https://api.github.com/licenses/apache-2.0
12386,https://github.com/Fahad-Habib/RISC-V-Single-Cycle-Processor.git,2023-04-20 17:58:27+00:00,Single Cycle Processor written in SystemVerilog for executing machine code of RISC-V ISA,0,Fahad-Habib/RISC-V-Single-Cycle-Processor,630591572,SystemVerilog,RISC-V-Single-Cycle-Processor,7,0,2023-10-13 13:53:44+00:00,"['digital-system-design', 'risc-v', 'single-cycle-processor', 'systemverilog', 'verilog', 'risc-v-architecture']",
12387,https://github.com/BROsandr/vga.git,2023-05-10 13:37:29+00:00,,1,BROsandr/vga,638969773,SystemVerilog,vga,152,0,2023-05-24 13:57:51+00:00,[],
12388,https://github.com/CreeKee/RISCV_Starfish.git,2023-05-17 00:13:26+00:00,,0,CreeKee/RISCV_Starfish,641678202,SystemVerilog,RISCV_Starfish,20,0,2023-05-17 00:14:02+00:00,[],
12389,https://github.com/sid-anand98/Verification-of-AMBA---APB-in-UVM.git,2023-06-15 13:07:13+00:00,,0,sid-anand98/Verification-of-AMBA---APB-in-UVM,654134368,SystemVerilog,Verification-of-AMBA---APB-in-UVM,24,0,2023-06-18 11:32:54+00:00,[],
12390,https://github.com/Rohithgarde/factorial_function_SV.git,2023-06-15 05:14:24+00:00,,0,Rohithgarde/factorial_function_SV,653954170,SystemVerilog,factorial_function_SV,2,0,2023-06-15 05:15:54+00:00,[],
12391,https://github.com/haydenbeames/FastMultiplication.git,2023-06-14 16:30:58+00:00,Fast Multiplication algorithm in SystemVerilog by using 4 to 2 compressors,1,haydenbeames/FastMultiplication,653743801,SystemVerilog,FastMultiplication,2522,0,2023-06-16 00:53:28+00:00,[],
12392,https://github.com/cyprienh/H2BP.git,2023-06-11 14:37:56+00:00,A custom architecture for a custom processor.,0,cyprienh/H2BP,652242152,SystemVerilog,H2BP,60,0,2023-06-11 14:38:22+00:00,[],
12393,https://github.com/gjtromp/blink_hps.git,2023-06-12 04:50:35+00:00,,0,gjtromp/blink_hps,652440383,SystemVerilog,blink_hps,0,0,2023-06-12 05:01:23+00:00,[],
12394,https://github.com/beneldokow/VGA-Road-Fighter-Project.git,2023-06-13 14:43:50+00:00,,0,beneldokow/VGA-Road-Fighter-Project,653177190,SystemVerilog,VGA-Road-Fighter-Project,2331,0,2023-06-13 14:52:44+00:00,[],
12395,https://github.com/GlennVodra/OOP-System-Verilog.git,2023-06-15 18:30:34+00:00,Some simple examples of Object-Oriented Programming (OOP) concepts in System Verilog,0,GlennVodra/OOP-System-Verilog,654263325,SystemVerilog,OOP-System-Verilog,8,0,2023-06-15 18:31:17+00:00,[],
12396,https://github.com/GeekyDev2002DG/RAM_and_ROM_using_verilog.git,2023-06-19 19:04:07+00:00,"Here we create Single port RAM, dual port RAM, and ROM using Verilog",0,GeekyDev2002DG/RAM_and_ROM_using_verilog,655861969,SystemVerilog,RAM_and_ROM_using_verilog,9,0,2023-06-20 07:03:51+00:00,[],https://api.github.com/licenses/mit
12397,https://github.com/HBX-hbx/A-simple-CPU.git,2023-06-18 13:50:39+00:00,Projects for Principles of Computer Composition. ,0,HBX-hbx/A-simple-CPU,655301759,SystemVerilog,A-simple-CPU,450,0,2023-06-18 13:54:13+00:00,[],
12398,https://github.com/MrDarkhawk/System-Verilog-Full-Adder.git,2023-06-21 05:53:05+00:00,,0,MrDarkhawk/System-Verilog-Full-Adder,656522154,SystemVerilog,System-Verilog-Full-Adder,2,0,2023-06-21 06:00:02+00:00,[],
12399,https://github.com/YKengo1224/tremor_extraction_system_interface.git,2023-06-07 06:56:18+00:00,,0,YKengo1224/tremor_extraction_system_interface,650481160,SystemVerilog,tremor_extraction_system_interface,94,0,2023-06-08 05:59:58+00:00,[],
12400,https://github.com/sharathk227/Router-1X3.git,2023-06-05 18:17:45+00:00,RTL desgin and verification of  Router having 1 source and 3 destination ,0,sharathk227/Router-1X3,649827901,SystemVerilog,Router-1X3,122,0,2023-06-06 12:25:31+00:00,[],
12401,https://github.com/GiantDwarfRen/CSE140_lab5.git,2023-06-05 20:50:46+00:00,,0,GiantDwarfRen/CSE140_lab5,649877478,SystemVerilog,CSE140_lab5,10,0,2023-06-05 20:52:55+00:00,[],
12402,https://github.com/monty6400/NumEx1.git,2023-05-23 07:54:48+00:00,BA FOREVER!,0,monty6400/NumEx1,644286170,SystemVerilog,NumEx1,5563,0,2023-05-28 17:44:49+00:00,[],
12403,https://github.com/Jaco-bB-rown/Final-Project-ECE-111.git,2023-05-31 02:09:27+00:00,Bitcoin Miner,0,Jaco-bB-rown/Final-Project-ECE-111,647538481,SystemVerilog,Final-Project-ECE-111,4595,0,2023-05-31 02:13:38+00:00,[],
12404,https://github.com/cheepakeepa/ECE_111_Bitcoin_Miner.git,2023-05-31 02:08:27+00:00,,0,cheepakeepa/ECE_111_Bitcoin_Miner,647538173,SystemVerilog,ECE_111_Bitcoin_Miner,71588,0,2023-05-31 02:10:10+00:00,[],
12405,https://github.com/STARS-Design-Track-2023/Teenage-Mixing-Ninja-Turtles.git,2023-06-20 01:34:59+00:00,Final Design Synth,1,STARS-Design-Track-2023/Teenage-Mixing-Ninja-Turtles,655958440,SystemVerilog,Teenage-Mixing-Ninja-Turtles,3014,0,2023-06-22 20:26:13+00:00,[],
12406,https://github.com/Fazail333/Dsd-lab-.git,2023-05-30 05:08:56+00:00,,0,Fazail333/Dsd-lab-,647115138,SystemVerilog,Dsd-lab-,3,0,2023-05-30 05:19:57+00:00,[],
12407,https://github.com/MoonLoone/alu_verilog.git,2023-05-29 12:45:06+00:00,,0,MoonLoone/alu_verilog,646831191,SystemVerilog,alu_verilog,7819,0,2023-05-29 14:37:28+00:00,[],
12408,https://github.com/CLA10LAW10/SSD_Keypad_FPGA.git,2023-05-11 16:35:59+00:00,,0,CLA10LAW10/SSD_Keypad_FPGA,639529826,SystemVerilog,SSD_Keypad_FPGA,21,0,2023-05-11 16:36:41+00:00,[],
12409,https://github.com/geoneill12/CPE521_Branch_Predictor.git,2023-05-25 05:56:20+00:00,,0,geoneill12/CPE521_Branch_Predictor,645191495,SystemVerilog,CPE521_Branch_Predictor,31,0,2023-06-01 19:47:22+00:00,[],
12410,https://github.com/lenguyen8888/verilog_examples.git,2023-05-27 01:56:31+00:00,,0,lenguyen8888/verilog_examples,646005655,SystemVerilog,verilog_examples,37,0,2023-05-27 01:57:37+00:00,[],
12411,https://github.com/AlphaLyrae0/UVM_RAL_DPI_C_Example.git,2023-05-28 03:55:46+00:00,,0,AlphaLyrae0/UVM_RAL_DPI_C_Example,646335434,SystemVerilog,UVM_RAL_DPI_C_Example,39,0,2023-06-07 15:05:35+00:00,[],
12412,https://github.com/troykerim/ECE-524-Lab-4-Intro-to-VGA-PMOD.git,2023-05-28 22:18:10+00:00,,0,troykerim/ECE-524-Lab-4-Intro-to-VGA-PMOD,646595862,SystemVerilog,ECE-524-Lab-4-Intro-to-VGA-PMOD,5949,0,2023-06-02 23:18:26+00:00,[],
12413,https://github.com/PRAGATI-0102/Half-Adder-using-SV-Day-050-.git,2023-05-29 17:23:34+00:00,"The Half Adder is a combinational logic circuit that performs the binary addition of two 1-bit binary digits (a_i, b_i). The sum of this additon is output to the sum_o signal and the carry is output on the cout_o signal.",0,PRAGATI-0102/Half-Adder-using-SV-Day-050-,646936132,SystemVerilog,Half-Adder-using-SV-Day-050-,53,0,2023-05-29 17:24:30+00:00,[],
12414,https://github.com/philiprbrenan/zero.git,2023-05-08 01:19:48+00:00,Compile and execute the B-Tree algorithm using the Zero assembler programming language.,1,philiprbrenan/zero,637583348,SystemVerilog,zero,7214,0,2023-11-18 03:11:28+00:00,[],
12415,https://github.com/csnewman/juna.git,2023-06-11 13:32:44+00:00,Toy processor in SystemVerilog,0,csnewman/juna,652222287,SystemVerilog,juna,58,0,2023-06-11 13:44:50+00:00,[],https://api.github.com/licenses/mit
12416,https://github.com/testguruai/riscv-cva6.git,2023-05-20 08:51:57+00:00,,0,testguruai/riscv-cva6,643149663,SystemVerilog,riscv-cva6,327,0,2023-05-20 09:17:01+00:00,[],
12417,https://github.com/dewostator/verilog_clock.git,2023-06-16 14:14:09+00:00,,0,dewostator/verilog_clock,654613832,SystemVerilog,verilog_clock,2,0,2023-12-30 21:16:58+00:00,[],
12418,https://github.com/cleverever/nand_cpu.git,2023-06-20 15:02:16+00:00,,0,cleverever/nand_cpu,656252825,SystemVerilog,nand_cpu,547,0,2023-06-24 08:32:21+00:00,[],
12419,https://github.com/bittervivek/UVM.git,2023-04-21 09:06:34+00:00,Here I am going to write simplified code for UVM,0,bittervivek/UVM,630837241,SystemVerilog,UVM,19,0,2023-04-21 09:08:05+00:00,[],
12421,https://github.com/tommy73594/MCDF_Verification.git,2023-06-17 05:45:26+00:00,MCDF verification with UVM,0,tommy73594/MCDF_Verification,654845621,SystemVerilog,MCDF_Verification,43,0,2023-06-17 05:47:31+00:00,[],
12422,https://github.com/princemahi2001/system-verilog.git,2023-06-20 04:00:03+00:00,,0,princemahi2001/system-verilog,655996382,SystemVerilog,system-verilog,115,0,2023-08-09 10:23:39+00:00,[],
12423,https://github.com/rbride/SystemVerilog_Practice_Problems.git,2023-06-19 00:51:33+00:00,,0,rbride/SystemVerilog_Practice_Problems,655465630,SystemVerilog,SystemVerilog_Practice_Problems,412,0,2023-08-05 16:51:23+00:00,[],
12424,https://github.com/Temix707/ROI.git,2023-06-21 08:51:03+00:00,Project to work,0,Temix707/ROI,656592074,SystemVerilog,ROI,33465,0,2023-07-15 12:01:26+00:00,[],
12425,https://github.com/ArmanGhafarnia/RISC-V-multi-cycle-processor.git,2023-06-13 07:55:14+00:00,Multi cycle processor using Systemverilog,0,ArmanGhafarnia/RISC-V-multi-cycle-processor,652995292,SystemVerilog,RISC-V-multi-cycle-processor,1141,0,2023-06-13 07:56:13+00:00,[],
12426,https://github.com/pp-cyril/Verification-of-AXI-Memory.git,2023-06-13 10:20:57+00:00,AMBA AXI Bus Protocol Verification,0,pp-cyril/Verification-of-AXI-Memory,653056604,SystemVerilog,Verification-of-AXI-Memory,10,0,2023-06-13 10:21:41+00:00,[],
12427,https://github.com/Bhoomi-sravanthi/D15_UP-DOWN-COUNTER.git,2023-05-13 11:05:03+00:00,,0,Bhoomi-sravanthi/D15_UP-DOWN-COUNTER,640214814,SystemVerilog,D15_UP-DOWN-COUNTER,2,0,2023-05-13 11:05:59+00:00,[],
12428,https://github.com/hyungmin2/FlexKA.git,2023-05-10 07:29:38+00:00,,0,hyungmin2/FlexKA,638825601,SystemVerilog,FlexKA,20,0,2023-05-10 07:47:57+00:00,[],
12429,https://github.com/qyley/limber-generic.git,2023-05-10 08:46:21+00:00,,0,qyley/limber-generic,638854144,SystemVerilog,limber-generic,171,0,2023-05-10 08:46:50+00:00,[],https://api.github.com/licenses/apache-2.0
12430,https://github.com/AliMaher15/tinyalu.git,2023-05-17 12:22:13+00:00,functional verification with UVM for the tinyalu example in uvmprimer,0,AliMaher15/tinyalu,641909567,SystemVerilog,tinyalu,2229,0,2023-05-17 12:24:56+00:00,[],
12431,https://github.com/stefana17/AM2940.git,2023-05-14 13:25:50+00:00,,0,stefana17/AM2940,640552028,SystemVerilog,AM2940,679,0,2023-05-14 13:31:28+00:00,[],
12432,https://github.com/flaviens/cva6_yosys_issue.git,2023-05-20 17:48:45+00:00,A repository to reproduce the Yosys issue with CVA6,0,flaviens/cva6_yosys_issue,643294245,SystemVerilog,cva6_yosys_issue,469,0,2023-05-20 17:52:52+00:00,[],
12433,https://github.com/Asrithamanju12/SV_Project_Spring_2023.git,2023-06-09 00:00:41+00:00,,0,Asrithamanju12/SV_Project_Spring_2023,651293802,,SV_Project_Spring_2023,29,0,2023-06-09 00:00:41+00:00,[],
12434,https://github.com/anmandaisuki/HDL_Source_Storage.git,2023-06-15 11:12:00+00:00,Storage for HDL sources,0,anmandaisuki/HDL_Source_Storage,654088785,SystemVerilog,HDL_Source_Storage,101,0,2023-11-07 04:33:33+00:00,[],
12435,https://github.com/Vassardog77/SHA256_optimizations.git,2023-05-04 00:02:42+00:00,,0,Vassardog77/SHA256_optimizations,636009518,SystemVerilog,SHA256_optimizations,2355,0,2023-05-04 00:27:23+00:00,[],
12436,https://github.com/lelewel4/Fibonacci-search-algorithm.git,2023-05-07 11:34:08+00:00,Fibonacci search technique - Gornisiewicz - Kapala,0,lelewel4/Fibonacci-search-algorithm,637379428,SystemVerilog,Fibonacci-search-algorithm,591,0,2023-10-08 17:22:27+00:00,[],
12437,https://github.com/sxwkl2/friendly-enigma.git,2023-04-28 08:51:33+00:00,,0,sxwkl2/friendly-enigma,633776208,SystemVerilog,friendly-enigma,327,0,2023-04-28 08:57:46+00:00,[],
12438,https://github.com/karthik-0710/Design-and-verification-of-D-Flip-Flop-using-UVM.git,2023-05-01 04:08:51+00:00,Design and verification of a D Flip Flop using UVM. UVM verification testbench for the  D-Flip flop has 3 seq item's a) for random d and rst values b)for random d values with rst disabled c) rst enabled and driving random d values,0,karthik-0710/Design-and-verification-of-D-Flip-Flop-using-UVM,634741725,SystemVerilog,Design-and-verification-of-D-Flip-Flop-using-UVM,6,0,2023-05-01 04:09:37+00:00,[],
12439,https://github.com/2011eric/DCLAB-Final.git,2023-04-28 15:39:13+00:00,2023NTUEE-DCLAB Final Project,1,2011eric/DCLAB-Final,633924030,SystemVerilog,DCLAB-Final,1835,0,2023-06-13 03:14:35+00:00,[],
12440,https://github.com/thinhngo11/hdlGPT.git,2023-05-03 02:45:05+00:00,,0,thinhngo11/hdlGPT,635588370,SystemVerilog,hdlGPT,285,0,2023-05-04 02:55:54+00:00,[],
12441,https://github.com/sarakane6090/lpddr2_nios.git,2023-05-09 13:12:51+00:00,,0,sarakane6090/lpddr2_nios,638485490,SystemVerilog,lpddr2_nios,13,0,2023-05-09 13:16:33+00:00,[],
12442,https://github.com/Bhoomi-sravanthi/D02_Full-Subtractor.git,2023-05-08 05:41:43+00:00,,0,Bhoomi-sravanthi/D02_Full-Subtractor,637645833,SystemVerilog,D02_Full-Subtractor,2,0,2023-08-30 17:28:36+00:00,[],
12443,https://github.com/ZVasilii/VerilogRISCV_Pipeline.git,2023-05-12 03:26:24+00:00,TBD,0,ZVasilii/VerilogRISCV_Pipeline,639703818,SystemVerilog,VerilogRISCV_Pipeline,133,0,2023-08-15 21:25:26+00:00,[],https://api.github.com/licenses/mit
12444,https://github.com/juanprrr/jpena_cornputer_architecture_1_2023.git,2023-05-17 06:35:12+00:00,,0,juanprrr/jpena_cornputer_architecture_1_2023,641776934,SystemVerilog,jpena_cornputer_architecture_1_2023,202,0,2023-05-17 06:41:17+00:00,[],
12445,https://github.com/cjstange/perceptron_tiny_tapeout.git,2023-04-30 03:15:24+00:00,,0,cjstange/perceptron_tiny_tapeout,634413768,SystemVerilog,perceptron_tiny_tapeout,1118,0,2023-04-30 03:35:23+00:00,[],https://api.github.com/licenses/apache-2.0
12446,https://github.com/njayawar/ModifiedTetrisV2.git,2023-04-27 22:28:36+00:00,,0,njayawar/ModifiedTetrisV2,633611549,SystemVerilog,ModifiedTetrisV2,1899,0,2023-05-05 16:12:41+00:00,[],https://api.github.com/licenses/apache-2.0
12447,https://github.com/robmarano/cpu_hdl_catalog.git,2023-04-25 03:52:24+00:00,Catalog of Verilog Components to Design and Simulate a MIPS-based RISC Computer,0,robmarano/cpu_hdl_catalog,632264294,SystemVerilog,cpu_hdl_catalog,36,0,2023-05-03 01:01:55+00:00,[],
12448,https://github.com/TeoThatsMe/2940.git,2023-04-25 11:12:44+00:00,,0,TeoThatsMe/2940,632416398,SystemVerilog,2940,8,0,2023-04-25 11:13:43+00:00,[],
12449,https://github.com/Totoro742/jos_project.git,2023-04-28 07:47:11+00:00,,0,Totoro742/jos_project,633753092,SystemVerilog,jos_project,1057,0,2023-07-12 17:02:55+00:00,[],
12450,https://github.com/mukesh891/google_riscv_dv.git,2023-04-28 07:04:51+00:00,,1,mukesh891/google_riscv_dv,633738137,SystemVerilog,google_riscv_dv,0,0,2023-04-28 07:05:48+00:00,[],
12451,https://github.com/0TulipRose0/ADC.git,2023-05-02 14:30:12+00:00,Analog to Digital Converter ,0,0TulipRose0/ADC,635362332,SystemVerilog,ADC,446,0,2023-05-02 15:20:20+00:00,[],
12452,https://github.com/STARS-Design-Track-2023/silly-synthesizer.git,2023-06-21 13:06:41+00:00,Purdue STARS Design 2023 Silly Synthesizer Project,0,STARS-Design-Track-2023/silly-synthesizer,656699919,SystemVerilog,silly-synthesizer,87,0,2023-06-28 13:34:50+00:00,[],
12453,https://github.com/6Kotnk/async_main.git,2023-05-04 09:26:09+00:00,Asynchrous circuit source files,0,6Kotnk/async_main,636176005,SystemVerilog,async_main,81,0,2023-06-23 14:17:27+00:00,[],
12454,https://github.com/GProCPU/Lexington.git,2023-05-17 06:56:23+00:00,The GPro 1 (Lexington) is the first generation of RISC-V processors designed by Gerber Prototyping,2,GProCPU/Lexington,641784635,SystemVerilog,Lexington,1183,0,2023-10-06 05:17:29+00:00,[],https://api.github.com/licenses/gpl-3.0
12455,https://github.com/nikhilj6644/MAC_8x8.git,2023-04-17 23:14:00+00:00,,0,nikhilj6644/MAC_8x8,629239120,SystemVerilog,MAC_8x8,4685,0,2023-04-18 02:00:28+00:00,[],https://api.github.com/licenses/apache-2.0
12456,https://github.com/xiaotianbc/dht11_verilog.git,2023-04-18 15:48:05+00:00,a simple dht11_verilog module,0,xiaotianbc/dht11_verilog,629583111,SystemVerilog,dht11_verilog,72,0,2023-04-18 15:54:51+00:00,[],
12457,https://github.com/pabmars2/riscV_pipelined.git,2023-04-19 16:33:13+00:00,,1,pabmars2/riscV_pipelined,630087361,SystemVerilog,riscV_pipelined,8733,0,2023-04-19 16:41:58+00:00,[],
12458,https://github.com/akiki19950827/gen_hdl_top.git,2023-04-21 08:52:38+00:00,,0,akiki19950827/gen_hdl_top,630832178,SystemVerilog,gen_hdl_top,285,0,2023-04-21 09:07:49+00:00,[],
12459,https://github.com/bushbecky/Kotsu2Risc.git,2023-05-08 21:00:32+00:00,,0,bushbecky/Kotsu2Risc,637988404,SystemVerilog,Kotsu2Risc,6,0,2023-05-08 21:00:46+00:00,[],
12460,https://github.com/tamirsh123/BSc_EE.git,2023-05-13 16:40:33+00:00,Here are my Projects and Academic files related to my BSc in EE,0,tamirsh123/BSc_EE,640305384,SystemVerilog,BSc_EE,16329,0,2023-08-10 13:51:56+00:00,[],
12461,https://github.com/gajendra17/prep_.git,2023-05-09 08:03:58+00:00,,0,gajendra17/prep_,638162386,SystemVerilog,prep_,12,0,2023-05-09 09:21:20+00:00,[],
12462,https://github.com/ayanjdeka/SLC-3.2.git,2023-05-18 07:43:10+00:00,Designed a microprocessor using SystemVerilog,0,ayanjdeka/SLC-3.2,642272550,SystemVerilog,SLC-3.2,7701,0,2023-05-18 07:44:55+00:00,[],
12463,https://github.com/AydoganArslantash/fbu-riscv.git,2023-05-24 10:04:57+00:00,This is for Computer Architecture Project,0,AydoganArslantash/fbu-riscv,644813807,SystemVerilog,fbu-riscv,1537,0,2023-05-24 10:07:19+00:00,[],
12464,https://github.com/motasem-rafati/sha256.git,2023-05-28 18:59:06+00:00,sha256 pipeline,0,motasem-rafati/sha256,646552443,SystemVerilog,sha256,625,0,2023-05-28 19:07:11+00:00,[],
12465,https://github.com/CLA10LAW10/FSM_Digital_Lock_FPGA.git,2023-05-11 16:37:36+00:00,,0,CLA10LAW10/FSM_Digital_Lock_FPGA,639530426,SystemVerilog,FSM_Digital_Lock_FPGA,10,0,2023-05-11 16:38:54+00:00,[],
12466,https://github.com/transistasis/nexys4ddr-mig-demo.git,2023-05-11 13:00:12+00:00,This design demonstrates how to interact directly with the on-board DDR2 memory of the Nexys 4 DDR board  from fabric by using the MIG IP,0,transistasis/nexys4ddr-mig-demo,639425771,SystemVerilog,nexys4ddr-mig-demo,214,0,2023-05-13 20:48:09+00:00,[],
12467,https://github.com/aniruddhavaidya21/SegwayProject.git,2023-05-09 04:51:20+00:00,FPGA based self balancing Segway.,0,aniruddhavaidya21/SegwayProject,638100805,SystemVerilog,SegwayProject,35,0,2023-05-09 05:08:46+00:00,[],
12468,https://github.com/cam-br0wn/vliw.git,2023-05-12 19:30:13+00:00,,0,cam-br0wn/vliw,640020978,SystemVerilog,vliw,130,0,2023-06-08 10:33:50+00:00,[],
12469,https://github.com/ChungKee/Learning_uvm.git,2023-05-20 04:45:30+00:00,,0,ChungKee/Learning_uvm,643092590,SystemVerilog,Learning_uvm,12,0,2023-05-20 07:04:28+00:00,[],
12470,https://github.com/suchuankai/PE.git,2023-04-30 15:15:44+00:00,,0,suchuankai/PE,634572792,SystemVerilog,PE,14,0,2023-05-07 16:27:44+00:00,[],
12471,https://github.com/PRAGATI-0102/BCD-to-7-Segment-using-SV-Day-072-.git,2023-06-20 16:59:54+00:00," This particular circuit is of the combinational type, taking a 4-bit binary coded decimal (BCD) input and producing the corresponding output for a 7-segment display.",0,PRAGATI-0102/BCD-to-7-Segment-using-SV-Day-072-,656299871,SystemVerilog,BCD-to-7-Segment-using-SV-Day-072-,82,0,2023-06-20 17:02:57+00:00,[],
12472,https://github.com/UjvalMadhu/System-Verilog-Projects.git,2023-06-20 23:44:51+00:00,"This repo contains various projects that I am doing to learn System Verilog, I will try to provide as much documentation that any user will be able to get an understanding of the code and learn from it.",0,UjvalMadhu/System-Verilog-Projects,656422189,SystemVerilog,System-Verilog-Projects,1,0,2023-06-20 23:52:47+00:00,[],
12473,https://github.com/Tahsin2020/LED-Dance-Cube.git,2023-06-23 02:30:55+00:00,An App that can record your movements and project you onto a LED cube as long as you have appropriate hardware.  ,0,Tahsin2020/LED-Dance-Cube,657413761,SystemVerilog,LED-Dance-Cube,92534,0,2023-06-23 02:36:21+00:00,[],
12474,https://github.com/twinter145/NoStallsMP3.git,2023-06-06 18:40:32+00:00,ECE 411 MP3 LC3 CPU Implementation,0,twinter145/NoStallsMP3,650286162,SystemVerilog,NoStallsMP3,77,0,2023-06-06 18:40:57+00:00,[],
12475,https://github.com/tsnlab/2023-nipa-opensource-hw.git,2023-06-07 01:57:46+00:00,,0,tsnlab/2023-nipa-opensource-hw,650400116,SystemVerilog,2023-nipa-opensource-hw,130,0,2023-09-08 04:29:04+00:00,[],
12476,https://github.com/AmirEfi/MultiCycle-Processor-of-RISC-V-in-SystemVerilog.git,2023-06-07 11:03:03+00:00,Final Project of Computer Architecture course - Spring 2022,0,AmirEfi/MultiCycle-Processor-of-RISC-V-in-SystemVerilog,650574225,SystemVerilog,MultiCycle-Processor-of-RISC-V-in-SystemVerilog,9,0,2023-06-07 11:06:37+00:00,[],
12477,https://github.com/nightlanding/dsc_verilog.git,2023-06-19 11:15:07+00:00,Deepwise Separable Convolution by Verilog,0,nightlanding/dsc_verilog,655673373,SystemVerilog,dsc_verilog,11,0,2023-06-19 11:36:02+00:00,[],
12478,https://github.com/zhengxuan-luan/ebi.git,2023-04-20 11:32:02+00:00,,0,zhengxuan-luan/ebi,630437276,SystemVerilog,ebi,14,0,2023-04-20 11:36:31+00:00,[],
12479,https://github.com/rafaelcollege123/lab4.git,2023-04-20 22:43:30+00:00,,0,rafaelcollege123/lab4,630675337,SystemVerilog,lab4,6,0,2023-04-20 22:45:50+00:00,[],
12480,https://github.com/0TulipRose0/APS.git,2023-05-02 12:57:02+00:00,,0,0TulipRose0/APS,635322420,SystemVerilog,APS,241,0,2023-05-02 13:52:01+00:00,[],
12481,https://github.com/aribrin/140L_lab1.git,2023-05-01 20:55:22+00:00,,0,aribrin/140L_lab1,635043413,SystemVerilog,140L_lab1,16,0,2023-05-01 21:02:16+00:00,[],
12482,https://github.com/VictorClements/Branch_Predictor_CPE404Project2.git,2023-04-29 06:27:53+00:00,,0,VictorClements/Branch_Predictor_CPE404Project2,634131671,SystemVerilog,Branch_Predictor_CPE404Project2,143,0,2023-08-09 01:42:27+00:00,[],
12483,https://github.com/Pranav1723/ALU.git,2023-05-05 13:08:04+00:00,Implementation of an ALU,0,Pranav1723/ALU,636706818,SystemVerilog,ALU,1,0,2023-05-05 13:09:20+00:00,[],
12484,https://github.com/sid-anand98/Synchronous-FIFO-in-SystemVerilog.git,2023-06-15 07:23:50+00:00,Synchronous BUFFER/FIRST IN FIRST OUT in SystemVerilog,0,sid-anand98/Synchronous-FIFO-in-SystemVerilog,653998690,SystemVerilog,Synchronous-FIFO-in-SystemVerilog,24,0,2023-06-18 14:41:53+00:00,[],
12485,https://github.com/CharAznable97/cheriot_zcu102.git,2023-06-13 10:40:59+00:00,,0,CharAznable97/cheriot_zcu102,653064724,SystemVerilog,cheriot_zcu102,2149,0,2023-06-13 10:45:00+00:00,[],
12486,https://github.com/TDIE/BCD_UVM_Testbench.git,2023-05-30 22:25:46+00:00,,0,TDIE/BCD_UVM_Testbench,647487684,SystemVerilog,BCD_UVM_Testbench,1923,0,2023-07-24 23:55:51+00:00,[],
12487,https://github.com/ying-project/fpga-dsp.git,2023-05-31 15:00:34+00:00,,0,ying-project/fpga-dsp,647807548,SystemVerilog,fpga-dsp,390,0,2023-06-30 14:51:20+00:00,[],
12488,https://github.com/hazemMondy/decoder.git,2023-06-16 20:21:50+00:00,,0,hazemMondy/decoder,654734614,SystemVerilog,decoder,1,0,2023-06-16 20:23:37+00:00,[],
12489,https://github.com/EfrenML/MipsPipelineV2.git,2023-06-15 19:21:52+00:00,,0,EfrenML/MipsPipelineV2,654279901,SystemVerilog,MipsPipelineV2,16,0,2023-06-15 19:25:10+00:00,[],
12490,https://github.com/Parsifal22/Systolic-Array-Output-Stationary.git,2023-06-15 12:32:31+00:00,This is a Systolic Array project for Vivado Xilinx written in the SystemVerilog language. Systolic array has Output Stationary dataflow. You can use my project for further development of DNN accelerator.,0,Parsifal22/Systolic-Array-Output-Stationary,654120278,SystemVerilog,Systolic-Array-Output-Stationary,129,0,2023-06-15 12:51:23+00:00,[],
12491,https://github.com/HACK-EVENT/hackatdac19.git,2023-06-12 19:00:01+00:00,Hack@DAC 2019,0,HACK-EVENT/hackatdac19,652769279,SystemVerilog,hackatdac19,10966,0,2023-06-21 08:59:36+00:00,[],
12492,https://github.com/dylanzflores/Resume-Projects.git,2023-05-27 04:16:39+00:00,MIPS Assembly Instruction,0,dylanzflores/Resume-Projects,646029609,SystemVerilog,Resume-Projects,7773,0,2023-06-15 03:42:51+00:00,[],
12493,https://github.com/mrowaha/mips-pipelined-processor.git,2023-06-03 18:08:13+00:00,,0,mrowaha/mips-pipelined-processor,649082871,SystemVerilog,mips-pipelined-processor,531,0,2023-12-23 06:10:43+00:00,[],
12494,https://github.com/NP95/p.git,2023-05-01 01:04:27+00:00,,0,NP95/p,634706718,,p,2,0,2024-01-01 18:04:25+00:00,[],
12495,https://github.com/dsa-shua/FPGA-Based-Arcade-Game.git,2023-06-17 13:51:46+00:00,FPGA Based Penguin Runner Game,0,dsa-shua/FPGA-Based-Arcade-Game,654974265,SystemVerilog,FPGA-Based-Arcade-Game,1261,0,2024-01-05 07:40:21+00:00,[],
12496,https://github.com/CSCE689-SP23/project.git,2023-05-02 06:44:21+00:00,,0,CSCE689-SP23/project,635187695,SystemVerilog,project,164,0,2024-01-08 15:57:07+00:00,[],
12497,https://github.com/abbmir/alu.proj.git,2023-05-15 01:49:36+00:00,,0,abbmir/alu.proj,640724996,SystemVerilog,alu.proj,114,0,2023-10-08 05:31:41+00:00,[],
12498,https://github.com/guilherme-ls/Dual-Slope-Analog-to-Digital-Converter.git,2023-06-19 11:33:29+00:00,"This repository contains the project for a Dual Slope Analog to Digital Converter, built for the Digital Systems class.",0,guilherme-ls/Dual-Slope-Analog-to-Digital-Converter,655680601,SystemVerilog,Dual-Slope-Analog-to-Digital-Converter,2923,0,2023-07-05 12:58:36+00:00,[],https://api.github.com/licenses/mit
12499,https://github.com/KobiDekel/FPGA_Examples.git,2023-05-25 09:20:13+00:00,,0,KobiDekel/FPGA_Examples,645265197,SystemVerilog,FPGA_Examples,2016,0,2023-05-25 09:22:27+00:00,[],
12500,https://github.com/OYounis/sc-mips.git,2023-05-25 14:38:01+00:00,Single-cycle single-core MIPS processor ,0,OYounis/sc-mips,645388749,SystemVerilog,sc-mips,143,0,2023-05-25 14:39:47+00:00,"['computer-architecture', 'mips32', 'systemverilog']",https://api.github.com/licenses/apache-2.0
12501,https://github.com/Nadav-Abramovich/RoadFighterVL.git,2023-05-25 11:10:24+00:00,,0,Nadav-Abramovich/RoadFighterVL,645305364,SystemVerilog,RoadFighterVL,307592,0,2023-05-25 11:11:21+00:00,[],
12502,https://github.com/rbrinson2/UVM_v1.git,2023-06-06 12:45:44+00:00,Not Functional,0,rbrinson2/UVM_v1,650146122,SystemVerilog,UVM_v1,5,0,2023-06-06 12:47:00+00:00,[],
12503,https://github.com/AidanDougherty/ECE111_FinalProj.git,2023-06-02 20:22:14+00:00,,0,AidanDougherty/ECE111_FinalProj,648789387,SystemVerilog,ECE111_FinalProj,131,0,2023-06-02 20:47:40+00:00,[],
12504,https://github.com/vadimfastos/VGA-APB.git,2023-06-03 14:11:44+00:00,VGA controller with APB bus written on SystemVerilog,0,vadimfastos/VGA-APB,649017556,SystemVerilog,VGA-APB,7,0,2023-06-03 14:29:09+00:00,[],https://api.github.com/licenses/mit
12505,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-gigahurt.git,2023-05-09 22:05:28+00:00,ece-251-spring-2023-final-project-gigahurt created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-gigahurt,638684070,SystemVerilog,ece-251-spring-2023-final-project-gigahurt,9,0,2023-05-09 22:05:36+00:00,[],https://api.github.com/licenses/mit
12506,https://github.com/Lauritabrenes/Proyecto_III_Multiplicador_secuencial.git,2023-05-16 03:47:49+00:00,,0,Lauritabrenes/Proyecto_III_Multiplicador_secuencial,641231438,SystemVerilog,Proyecto_III_Multiplicador_secuencial,40,0,2023-05-25 04:56:14+00:00,[],https://api.github.com/licenses/mit
12507,https://github.com/EngMostafaKhaled/ATM---based-bank-system-Design-verification.git,2023-04-28 14:50:50+00:00,,0,EngMostafaKhaled/ATM---based-bank-system-Design-verification,633905148,SystemVerilog,ATM---based-bank-system-Design-verification,2259,0,2023-05-12 08:07:34+00:00,[],
12508,https://github.com/kibersport3000/repo.git,2023-05-12 13:52:55+00:00,,0,kibersport3000/repo,639907445,SystemVerilog,repo,17811,0,2023-05-12 13:54:29+00:00,[],
12509,https://github.com/zahrahojati19/Comparators.git,2023-05-19 11:55:44+00:00,"different type of comparators (bit-wise, hex, ...) in SystemVerilog HDL",0,zahrahojati19/Comparators,642811146,SystemVerilog,Comparators,10,0,2023-05-19 11:57:56+00:00,[],
12510,https://github.com/shubhamsavita98/DV_HW8.git,2023-05-21 00:26:21+00:00,Verification of Memory Module using SV,0,shubhamsavita98/DV_HW8,643373788,SystemVerilog,DV_HW8,4,0,2023-05-29 13:21:15+00:00,[],
12511,https://github.com/sara-totah/SystemVerilog.git,2023-05-21 11:14:51+00:00,,0,sara-totah/SystemVerilog,643500580,SystemVerilog,SystemVerilog,7,0,2023-09-03 20:52:01+00:00,[],
12512,https://github.com/edenninary/CSMA_Project.git,2023-05-23 11:43:02+00:00,,0,edenninary/CSMA_Project,644375433,SystemVerilog,CSMA_Project,191,0,2023-05-23 12:04:57+00:00,[],
12513,https://github.com/FiercestT/vga.sv.git,2023-05-09 06:29:43+00:00,A  VGA Controller IP in SystemVerilog,0,FiercestT/vga.sv,638128478,SystemVerilog,vga.sv,5033,0,2023-05-09 22:04:09+00:00,[],
12514,https://github.com/hongkaiqin/UVM_ADD.git,2023-05-09 15:57:02+00:00,just for test,0,hongkaiqin/UVM_ADD,638560177,SystemVerilog,UVM_ADD,79,0,2023-05-15 14:52:15+00:00,[],
12515,https://github.com/benjas909/Arqui-T3.git,2023-05-29 05:59:38+00:00,,0,benjas909/Arqui-T3,646692230,SystemVerilog,Arqui-T3,17,0,2023-06-04 06:16:39+00:00,[],
12516,https://github.com/function47/Shuhai.git,2023-05-29 02:01:44+00:00,Forked Shuhai,0,function47/Shuhai,646636595,SystemVerilog,Shuhai,168,0,2023-05-29 02:02:23+00:00,[],
12517,https://github.com/DevrathIyer/cva6-formal.git,2023-05-27 16:12:09+00:00,,0,DevrathIyer/cva6-formal,646204432,SystemVerilog,cva6-formal,592,0,2023-05-27 16:12:38+00:00,[],
12518,https://github.com/STARS-Design-Track-2023/rtl-blocks-shift-register.git,2023-05-31 17:30:01+00:00,,0,STARS-Design-Track-2023/rtl-blocks-shift-register,647865183,SystemVerilog,rtl-blocks-shift-register,526,0,2023-06-12 12:41:44+00:00,[],
12519,https://github.com/tonetooo/Archivos-_Lab_ELO212.git,2023-05-10 19:16:39+00:00,"repositorio del lab de digitales, SEXOOOOOOO",1,tonetooo/Archivos-_Lab_ELO212,639105587,SystemVerilog,Archivos-_Lab_ELO212,7,0,2023-05-17 03:00:51+00:00,[],
12520,https://github.com/YongCastle/ICE2005_42.git,2023-05-15 15:26:30+00:00,Sobel_FPGA_Accelerator..... KING,0,YongCastle/ICE2005_42,641008617,SystemVerilog,ICE2005_42,34577,0,2023-05-22 12:42:17+00:00,[],
12521,https://github.com/J-Hutchinson-C/cpe521-FinalProject.git,2023-05-12 02:13:00+00:00,,0,J-Hutchinson-C/cpe521-FinalProject,639686031,SystemVerilog,cpe521-FinalProject,10317,0,2023-05-12 02:23:26+00:00,[],
12522,https://github.com/Mujahid135/exp7.git,2023-06-14 08:29:58+00:00,,0,Mujahid135/exp7,653531893,SystemVerilog,exp7,3,0,2023-06-14 08:32:42+00:00,[],
12523,https://github.com/RAMVAITHI/system-verilog-.git,2023-05-06 04:53:05+00:00,,0,RAMVAITHI/system-verilog-,636960118,SystemVerilog,system-verilog-,206,0,2023-05-19 05:12:17+00:00,[],
12524,https://github.com/jessief25/tapeout-traffic-light.git,2023-05-05 21:53:28+00:00,,0,jessief25/tapeout-traffic-light,636881256,SystemVerilog,tapeout-traffic-light,586,0,2023-05-05 22:50:42+00:00,[],https://api.github.com/licenses/apache-2.0
12525,https://github.com/nikhil123123/Verification-of-serial-peripheral-interface.git,2023-04-19 11:03:56+00:00,,0,nikhil123123/Verification-of-serial-peripheral-interface,629950208,SystemVerilog,Verification-of-serial-peripheral-interface,3,0,2023-04-19 11:07:05+00:00,[],
12526,https://github.com/Kush193/csce_714.git,2023-04-28 03:05:14+00:00,,0,Kush193/csce_714,633674057,SystemVerilog,csce_714,132,0,2023-04-28 03:16:04+00:00,[],
12527,https://github.com/HassanKhaled11/SPI_RAM_FIFO_Verification.git,2023-04-27 22:52:09+00:00,,3,HassanKhaled11/SPI_RAM_FIFO_Verification,633616560,SystemVerilog,SPI_RAM_FIFO_Verification,3014,0,2023-05-02 16:03:38+00:00,[],
12528,https://github.com/nikhil123123/Verification-of-D-flip-flop.git,2023-04-19 11:00:47+00:00,,0,nikhil123123/Verification-of-D-flip-flop,629948950,SystemVerilog,Verification-of-D-flip-flop,2,0,2023-04-19 11:06:01+00:00,[],
12529,https://github.com/LispEngineer/fpga-i2c.git,2023-04-30 03:45:20+00:00,FPGA integration of the Pimoroni Scroll Hat Mini,0,LispEngineer/fpga-i2c,634418455,SystemVerilog,fpga-i2c,13328,0,2023-05-20 03:09:01+00:00,[],
12530,https://github.com/masonJamesWheeler/Risc-V-Pipeline-Processor.git,2023-06-19 04:12:30+00:00,"Welcome to my RISC-V Pipeline Processor project. Showcasing proficiency in embedded systems engineering and computer architecture, this project implements the open-source RISC-V ISA, employing a pipelined design for enhanced performance.  The repository offers a practical demonstration of key concepts in hardware-software design.",0,masonJamesWheeler/Risc-V-Pipeline-Processor,655516475,SystemVerilog,Risc-V-Pipeline-Processor,14,0,2023-06-19 04:25:51+00:00,[],
12531,https://github.com/abdullahbiniftikhar/RTL_lib.git,2023-06-18 12:57:51+00:00,,0,abdullahbiniftikhar/RTL_lib,655285460,SystemVerilog,RTL_lib,6,0,2023-06-18 12:58:43+00:00,[],
12532,https://github.com/MohammadShaded/Digital2-Verilog-HW2.git,2023-06-18 18:40:08+00:00,Verilog code to implement a digital system that counts the number of bit transitions.,0,MohammadShaded/Digital2-Verilog-HW2,655389467,SystemVerilog,Digital2-Verilog-HW2,137,0,2023-06-18 18:43:17+00:00,[],
12533,https://github.com/NabilYasser/ATM_Controller.git,2023-06-21 14:39:08+00:00,An ATM cotroller (High level + RTL+ SVA + Cover groups),0,NabilYasser/ATM_Controller,656740466,SystemVerilog,ATM_Controller,926,0,2023-06-21 14:39:20+00:00,[],
12534,https://github.com/Danna112002/exe_unit-sVerilog.git,2023-06-21 16:15:21+00:00,,0,Danna112002/exe_unit-sVerilog,656781939,SystemVerilog,exe_unit-sVerilog,439,0,2023-06-21 16:17:47+00:00,[],
12535,https://github.com/seanfan34/UMICH_EECS.git,2023-05-04 19:51:22+00:00,,0,seanfan34/UMICH_EECS,636414730,SystemVerilog,UMICH_EECS,23850,0,2023-05-06 17:03:28+00:00,[],
12536,https://github.com/2019ee25unioni/Compressed_extention_for_risc_v.git,2023-06-08 05:32:15+00:00,,0,2019ee25unioni/Compressed_extention_for_risc_v,650923701,SystemVerilog,Compressed_extention_for_risc_v,500,0,2023-12-26 08:34:04+00:00,[],
12537,https://github.com/NP95/v.git,2023-05-01 01:05:23+00:00,A solution to a sorting challenge.,0,NP95/v,634706954,SystemVerilog,v,316,0,2023-10-22 00:20:18+00:00,[],
12538,https://github.com/PoChuan994/Johnson_Counter.git,2023-05-19 16:46:06+00:00,,0,PoChuan994/Johnson_Counter,642920684,SystemVerilog,Johnson_Counter,6,0,2023-05-19 16:47:16+00:00,[],
12539,https://github.com/Yuxin-Yu/verilator_experiment.git,2023-05-29 14:41:37+00:00,verilator练习,0,Yuxin-Yu/verilator_experiment,646877702,SystemVerilog,verilator_experiment,329,0,2023-06-04 12:58:52+00:00,[],
12540,https://github.com/craigc40/playground.git,2023-04-19 01:17:34+00:00,,0,craigc40/playground,629760876,SystemVerilog,playground,24,0,2023-04-19 01:19:17+00:00,[],https://api.github.com/licenses/gpl-3.0
12542,https://github.com/NChitty/HDL-Processor-X.git,2023-04-20 03:13:49+00:00,"This is a project to develop a simple processor in a chosen HDL, in this case SystemVerilog.",0,NChitty/HDL-Processor-X,630274195,SystemVerilog,HDL-Processor-X,226,0,2023-04-20 03:14:47+00:00,[],
12543,https://github.com/QuietRainto4/TinyTapeout_FPGA.git,2023-05-05 21:54:58+00:00,,0,QuietRainto4/TinyTapeout_FPGA,636881585,SystemVerilog,TinyTapeout_FPGA,219,0,2023-05-06 00:25:44+00:00,[],https://api.github.com/licenses/apache-2.0
12544,https://github.com/isaxito/unidad_p.git,2023-05-09 18:10:43+00:00,Ejercicio 4 de TD2 sobre describir una unidad procesadora con arquitectura Harvard,0,isaxito/unidad_p,638612012,SystemVerilog,unidad_p,2,0,2023-05-09 18:12:39+00:00,[],
12545,https://github.com/davemap/Custom-Accelerator-Project.git,2023-05-05 10:52:54+00:00,,0,davemap/Custom-Accelerator-Project,636658623,SystemVerilog,Custom-Accelerator-Project,7458,0,2023-05-05 10:54:19+00:00,[],
12546,https://github.com/KnowAashish/chipdev.io.git,2023-05-06 07:46:18+00:00,This repository consists of all chipdev.io practice questions,0,KnowAashish/chipdev.io,637001018,SystemVerilog,chipdev.io,166,0,2023-10-11 20:56:05+00:00,[],
12547,https://github.com/fpgaudio/fpgaudio-main.git,2023-05-08 20:19:34+00:00,The main repository for the FPGAudio project,0,fpgaudio/fpgaudio-main,637976651,SystemVerilog,fpgaudio-main,6,0,2023-05-08 20:19:50+00:00,[],
12548,https://github.com/bushbecky/System-Verilog-bootcamp.git,2023-05-08 20:56:01+00:00,,0,bushbecky/System-Verilog-bootcamp,637987132,SystemVerilog,System-Verilog-bootcamp,77,0,2023-05-08 20:56:27+00:00,[],https://api.github.com/licenses/gpl-3.0
12549,https://github.com/bushbecky/SystemVerilog.git,2023-05-08 21:00:53+00:00,,0,bushbecky/SystemVerilog,637988523,SystemVerilog,SystemVerilog,27964,0,2023-05-08 21:01:32+00:00,[],https://api.github.com/licenses/gpl-3.0
12550,https://github.com/asmwriter/cmu_18624_ucpu_tiny_tapeout_submission.git,2023-04-28 03:03:32+00:00,Tiny-Tapeout Github Repository for CMU 18-624: Micro-programmed CPU on ,0,asmwriter/cmu_18624_ucpu_tiny_tapeout_submission,633673651,SystemVerilog,cmu_18624_ucpu_tiny_tapeout_submission,21,0,2023-05-05 13:33:40+00:00,[],https://api.github.com/licenses/apache-2.0
12551,https://github.com/jaeyoon0531/CONNECT.git,2023-05-04 07:12:55+00:00,,0,jaeyoon0531/CONNECT,636123311,SystemVerilog,CONNECT,24,0,2023-05-04 07:25:16+00:00,[],
12552,https://github.com/Woods182/VISL_project.git,2023-05-05 07:22:30+00:00,,0,Woods182/VISL_project,636584565,SystemVerilog,VISL_project,18355,0,2023-05-18 07:10:39+00:00,[],
12553,https://github.com/foolfoolaa/rtl_test.git,2023-04-25 13:44:10+00:00,,0,foolfoolaa/rtl_test,632478348,SystemVerilog,rtl_test,1,0,2023-04-25 13:45:15+00:00,[],
12554,https://github.com/Cnh1116/Simple-Processor-.git,2023-04-25 23:23:21+00:00,,0,Cnh1116/Simple-Processor-,632684557,SystemVerilog,Simple-Processor-,265,0,2023-04-25 23:23:50+00:00,[],
12555,https://github.com/TravisDvis/SHA256BitcoinHash.git,2023-04-21 02:59:34+00:00,,0,TravisDvis/SHA256BitcoinHash,630731505,SystemVerilog,SHA256BitcoinHash,4062,0,2023-04-21 03:06:38+00:00,[],
12556,https://github.com/alinparcalab/FreeList.git,2023-05-02 10:30:15+00:00,,0,alinparcalab/FreeList,635267116,SystemVerilog,FreeList,9,0,2023-05-02 10:30:36+00:00,[],https://api.github.com/licenses/apache-2.0
12557,https://github.com/jhladik/chu_systemverilog_exercises.git,2023-05-20 19:47:10+00:00,Completed exercises for book FPGA Prototyping by SystemVerilog Examples,0,jhladik/chu_systemverilog_exercises,643322959,SystemVerilog,chu_systemverilog_exercises,5,0,2023-05-20 19:48:35+00:00,[],
12558,https://github.com/fpgaudio/fpgaudio.git,2023-05-17 03:35:05+00:00,The main FPGAUDIO Demo,0,fpgaudio/fpgaudio,641727029,SystemVerilog,fpgaudio,77,0,2023-05-31 19:54:15+00:00,[],
12559,https://github.com/caio-a18/Logic-Design-and-Computer-Organization.git,2023-05-15 07:23:35+00:00,Case Western Reserve University: CSDS 281 - Logic Design and Computer Organization,0,caio-a18/Logic-Design-and-Computer-Organization,640813481,SystemVerilog,Logic-Design-and-Computer-Organization,119,0,2023-05-17 05:35:28+00:00,[],
12560,https://github.com/mohamedmostaf21/Multi-mode-counter.git,2023-05-15 18:06:32+00:00,Design a Multi-Mode-counter count up down by 1 and by 2 in system verilog HDL,0,mohamedmostaf21/Multi-mode-counter,641071235,SystemVerilog,Multi-mode-counter,3,0,2023-05-15 18:11:28+00:00,[],
12561,https://github.com/whoiskaiii/memory_control.git,2023-05-20 04:38:21+00:00,,0,whoiskaiii/memory_control,643091126,SystemVerilog,memory_control,1477,0,2023-06-08 08:28:15+00:00,[],
12562,https://github.com/SiyamAcet/Simple_Data_Path.git,2023-06-09 13:04:47+00:00,,0,SiyamAcet/Simple_Data_Path,651535558,SystemVerilog,Simple_Data_Path,132,0,2023-06-16 10:44:30+00:00,[],
12563,https://github.com/ivanmgribeiro/ibex.git,2023-06-09 14:07:13+00:00,"Ibex is a small 32 bit RISC-V CPU core, previously known as zero-riscy. Forked from https://github.com/ivanmgribeiro-google/ibex",1,ivanmgribeiro/ibex,651560065,SystemVerilog,ibex,11605,0,2023-06-09 14:13:49+00:00,[],https://api.github.com/licenses/apache-2.0
12564,https://github.com/MuhammadHammad01/UART-Transmitter.git,2023-06-04 11:30:38+00:00," This GitHub repository contains a UART transmitter implementation in SystemVerilog. It includes the data path and controller modules, offering a reliable serial communication solution for digital systems.",0,MuhammadHammad01/UART-Transmitter,649284602,SystemVerilog,UART-Transmitter,4,0,2023-06-04 11:31:51+00:00,[],
12565,https://github.com/kanade-k-1228/RK8.git,2023-06-15 07:05:33+00:00,,0,kanade-k-1228/RK8,653991271,SystemVerilog,RK8,18,0,2023-06-17 02:00:50+00:00,[],
12566,https://github.com/evgenysns/unique_decoder.git,2023-06-15 09:37:29+00:00,sv test case,0,evgenysns/unique_decoder,654052563,SystemVerilog,unique_decoder,8,0,2023-06-15 09:58:47+00:00,[],
12567,https://github.com/Liam-lyr/Multicycle-MIPS-Processor.git,2023-06-22 08:36:46+00:00,A multicycle MIPS processor with a brunch of basic MIPS instructions supported.,0,Liam-lyr/Multicycle-MIPS-Processor,657064650,SystemVerilog,Multicycle-MIPS-Processor,8645,0,2023-07-01 21:05:58+00:00,[],https://api.github.com/licenses/mit
12568,https://github.com/MrDarkhawk/System-Verilog-FIFO.git,2023-06-21 05:50:35+00:00,,0,MrDarkhawk/System-Verilog-FIFO,656521349,SystemVerilog,System-Verilog-FIFO,5,0,2023-06-21 05:52:06+00:00,[],
12569,https://github.com/MoonLoone/calculator.git,2023-06-06 17:44:19+00:00,,0,MoonLoone/calculator,650265700,SystemVerilog,calculator,9023,0,2023-06-06 17:45:43+00:00,[],
12570,https://github.com/mingfeii/RTL_modules.git,2023-06-01 16:11:53+00:00,my rtl design or simulation module collections ,0,mingfeii/RTL_modules,648288079,SystemVerilog,RTL_modules,2257,0,2023-06-01 16:14:24+00:00,[],
12571,https://github.com/tom01h/riscv.git,2023-05-28 09:53:42+00:00,多分わかりやすいと思う3段パイプのRV32I (代わりにいろいろ機能足りない),0,tom01h/riscv,646406979,SystemVerilog,riscv,66,0,2023-06-08 13:44:01+00:00,[],
12572,https://github.com/Beng1997/Road_Fighter_NES.git,2023-06-20 15:49:06+00:00,"As part of the first ECE lab, the final project was to build a video game based on the 80's NES game: Road Fighter.",0,Beng1997/Road_Fighter_NES,656272065,SystemVerilog,Road_Fighter_NES,477,0,2023-06-20 15:56:33+00:00,[],
12573,https://github.com/Nikola2444/Coding_Test.git,2023-06-05 14:27:18+00:00,,0,Nikola2444/Coding_Test,649739924,SystemVerilog,Coding_Test,13,0,2023-06-08 20:51:05+00:00,[],
12574,https://github.com/cjmats04/CPE-133-Final-Project.git,2023-06-05 23:00:09+00:00,,0,cjmats04/CPE-133-Final-Project,649909303,SystemVerilog,CPE-133-Final-Project,15075,0,2023-06-08 05:44:53+00:00,[],
12575,https://github.com/v-kumar1123/CL_0000_MESIC.git,2023-04-30 22:40:10+00:00,,0,v-kumar1123/CL_0000_MESIC,634681754,SystemVerilog,CL_0000_MESIC,299,0,2023-05-05 20:04:22+00:00,[],https://api.github.com/licenses/apache-2.0
12576,https://github.com/k-31413/ass_ex.git,2023-04-30 14:27:50+00:00,,0,k-31413/ass_ex,634559227,SystemVerilog,ass_ex,1,0,2023-04-30 14:32:45+00:00,[],
12577,https://github.com/2023-Spring-ECE4278/lab7.git,2023-04-30 11:51:38+00:00,,0,2023-Spring-ECE4278/lab7,634519107,SystemVerilog,lab7,15,0,2023-05-01 00:08:10+00:00,[],
12578,https://github.com/liu-xueyang/AXI_stream_width_converter.git,2023-05-23 22:47:19+00:00,"System verilog AXI_stream_width_converter, include upsizer and downsizer. Compile and run test with icarus verilog",0,liu-xueyang/AXI_stream_width_converter,644618043,SystemVerilog,AXI_stream_width_converter,19,0,2023-05-24 00:03:31+00:00,[],
12579,https://github.com/WalidAkash/DESIGN_VERIFICATION.git,2023-05-22 10:58:44+00:00,,0,WalidAkash/DESIGN_VERIFICATION,643881735,SystemVerilog,DESIGN_VERIFICATION,271,0,2023-08-14 04:50:13+00:00,[],
12580,https://github.com/Aydogan-Goktug/fbu-riscv.git,2023-05-24 09:58:58+00:00,This is for Computer Architecture project.,1,Aydogan-Goktug/fbu-riscv,644811444,SystemVerilog,fbu-riscv,1537,0,2023-05-24 10:08:42+00:00,[],
12581,https://github.com/ruthvikkota/System-Verilog.git,2023-06-15 06:16:42+00:00,,0,ruthvikkota/System-Verilog,653973399,SystemVerilog,System-Verilog,133,0,2023-06-20 06:03:42+00:00,[],
12582,https://github.com/Shwetakr08/sv_program.git,2023-06-05 14:30:35+00:00,,0,Shwetakr08/sv_program,649741262,SystemVerilog,sv_program,11,0,2023-12-19 09:47:47+00:00,[],
12583,https://github.com/serhaturtis/DD-LTC2311-16.git,2023-06-12 18:57:57+00:00,IP Module For LTC2311 ADC,1,serhaturtis/DD-LTC2311-16,652768539,SystemVerilog,DD-LTC2311-16,424,0,2024-01-23 18:08:37+00:00,"['adc', 'digitaldesign', 'fpga', 'systemverilog', 'ltc2311']",https://api.github.com/licenses/mit
12584,https://github.com/trswany/rfkit.git,2023-05-16 05:39:36+00:00,Verilog HDL modules for use in RF projects,0,trswany/rfkit,641261020,SystemVerilog,rfkit,133,0,2023-05-16 16:08:25+00:00,[],https://api.github.com/licenses/mit
12585,https://github.com/sumiravishan/RISCV32_LINUX_UVM.git,2023-05-24 17:40:38+00:00,Embeded Linux Boot in RISCV32IMA,0,sumiravishan/RISCV32_LINUX_UVM,644997651,SystemVerilog,RISCV32_LINUX_UVM,19425,0,2023-05-24 17:43:48+00:00,[],https://api.github.com/licenses/gpl-3.0
12586,https://github.com/MarleyLobao/UVM_Traffic_Backdoor_RAL.git,2023-05-25 00:40:46+00:00,This repository organizes the ChipVerify website code so that it is executable in a verification environment that uses the Register Abstraction Layer (RAL) in backdoor mode.,0,MarleyLobao/UVM_Traffic_Backdoor_RAL,645113594,SystemVerilog,UVM_Traffic_Backdoor_RAL,11,0,2023-05-25 02:08:38+00:00,[],
12587,https://github.com/mohamedmorsi22/SBqM.git,2023-05-25 11:10:41+00:00,The design is implemented to monitor the client queue in front of the tellers. ,0,mohamedmorsi22/SBqM,645305466,SystemVerilog,SBqM,3,0,2023-05-25 11:12:09+00:00,[],
12588,https://github.com/YouEnWang/Hamming-code_Error-correction.git,2023-04-26 11:39:46+00:00,,0,YouEnWang/Hamming-code_Error-correction,632911816,SystemVerilog,Hamming-code_Error-correction,659,0,2023-07-12 15:08:39+00:00,[],
12589,https://github.com/Fahad-Habib/UART-Tx.git,2023-04-23 05:24:08+00:00,UART Tx implemented in SystemVerilog from scratch.,0,Fahad-Habib/UART-Tx,631465519,SystemVerilog,UART-Tx,5,0,2023-04-23 05:34:06+00:00,"['digital-system-design', 'uart', 'uart-verilog']",
12590,https://github.com/anoushkasaraswat/100DaysOfRTL.git,2023-04-20 17:02:58+00:00,,0,anoushkasaraswat/100DaysOfRTL,630571351,SystemVerilog,100DaysOfRTL,142,0,2023-05-13 17:16:03+00:00,[],
12591,https://github.com/DJosueMM/FPGA_HDL_Projects.git,2023-04-21 05:57:39+00:00,Some of the modules and projects that I designed,0,DJosueMM/FPGA_HDL_Projects,630772963,SystemVerilog,FPGA_HDL_Projects,3040,0,2023-04-21 06:05:01+00:00,[],
12592,https://github.com/bryceberger/ecp5-bootstrap.git,2023-04-21 01:15:38+00:00,,0,bryceberger/ecp5-bootstrap,630706984,SystemVerilog,ecp5-bootstrap,42,0,2023-04-21 01:16:10+00:00,[],
12593,https://github.com/Nagaraj3181/universal_verification_methodology.git,2023-06-04 11:42:53+00:00,,0,Nagaraj3181/universal_verification_methodology,649287533,SystemVerilog,universal_verification_methodology,3747,0,2023-06-05 13:03:13+00:00,[],
12594,https://github.com/xuhuan98/Asynchronous-FIFO.git,2023-05-31 13:45:24+00:00,,0,xuhuan98/Asynchronous-FIFO,647773754,SystemVerilog,Asynchronous-FIFO,16698,0,2023-07-19 01:15:42+00:00,[],https://api.github.com/licenses/apache-2.0
12595,https://github.com/XintingLi/ahb_manager_uvm.git,2023-04-29 00:54:58+00:00,Make build&run error free. The ahb_if has implementation problem need to be fix.,0,XintingLi/ahb_manager_uvm,634071535,SystemVerilog,ahb_manager_uvm,7945,0,2023-04-29 00:56:26+00:00,[],
12596,https://github.com/khei4/myveri.git,2023-04-29 01:55:12+00:00,verilog coding template,0,khei4/myveri,634080959,SystemVerilog,myveri,39,0,2023-04-29 01:55:29+00:00,[],
12597,https://github.com/alinparcalab/vr_skid_decoupler.git,2023-05-02 10:00:23+00:00,Simple Valid Ready Decoupler with Skid buffer,0,alinparcalab/vr_skid_decoupler,635256492,SystemVerilog,vr_skid_decoupler,9,0,2023-05-02 10:04:43+00:00,[],https://api.github.com/licenses/apache-2.0
12598,https://github.com/toms99/computer_architecture_vectorial_asip.git,2023-05-06 17:18:35+00:00,,0,toms99/computer_architecture_vectorial_asip,637155603,SystemVerilog,computer_architecture_vectorial_asip,155,0,2023-05-24 22:55:16+00:00,[],
12599,https://github.com/fpgaudio/midi_module.git,2023-05-07 06:24:42+00:00,,0,fpgaudio/midi_module,637306574,SystemVerilog,midi_module,10405,0,2023-05-07 06:25:15+00:00,[],
12600,https://github.com/Heutlett/2023_ARQUI2_PROYECTO2.git,2023-05-06 00:19:53+00:00,,0,Heutlett/2023_ARQUI2_PROYECTO2,636907955,SystemVerilog,2023_ARQUI2_PROYECTO2,18428,0,2023-05-24 23:37:26+00:00,[],
12601,https://github.com/soukalin96/uvm_practice.git,2023-05-09 07:13:40+00:00,,0,soukalin96/uvm_practice,638144043,SystemVerilog,uvm_practice,1,0,2023-05-09 07:15:08+00:00,[],
12602,https://github.com/varshach26/Bitcoin-Hashing.git,2023-06-23 06:29:59+00:00,Serial and Parallel Implementation of Bitcoin Hashing using SystemVerilog,0,varshach26/Bitcoin-Hashing,657475565,SystemVerilog,Bitcoin-Hashing,13,0,2023-06-23 06:33:32+00:00,[],
12603,https://github.com/afterCherry/Digital-Integrated-Circuit.git,2023-06-23 17:29:50+00:00,,0,afterCherry/Digital-Integrated-Circuit,657720946,SystemVerilog,Digital-Integrated-Circuit,6115,0,2023-06-27 13:03:08+00:00,[],
12604,https://github.com/s0man3/8bitcpu.git,2023-06-20 17:23:43+00:00,8bit cpu,0,s0man3/8bitcpu,656309173,SystemVerilog,8bitcpu,1,0,2023-06-20 18:21:19+00:00,[],
12605,https://github.com/HWL00/umiche-eecs470-group3f22.git,2023-06-21 12:54:44+00:00,,0,HWL00/umiche-eecs470-group3f22,656694471,SystemVerilog,umiche-eecs470-group3f22,4353,0,2023-06-21 14:25:21+00:00,[],
12606,https://github.com/jashwantrajg/FPGA-projects.git,2023-06-13 00:36:41+00:00,,0,jashwantrajg/FPGA-projects,652865897,SystemVerilog,FPGA-projects,7823,0,2023-06-13 01:20:30+00:00,[],
12607,https://github.com/galaxybomb23/STARS-6502cpu.git,2023-06-14 14:59:52+00:00,Purdue STARS program code for 6502 CPU in verilog,0,galaxybomb23/STARS-6502cpu,653705051,SystemVerilog,STARS-6502cpu,6020,0,2023-06-14 15:43:24+00:00,[],
12608,https://github.com/mjalbert99/CSE141L.git,2023-05-12 16:46:48+00:00,Holds all the code for our RISC processor,0,mjalbert99/CSE141L,639970449,SystemVerilog,CSE141L,659,0,2023-05-13 23:50:10+00:00,[],
12609,https://github.com/Adelsamir01/Dadda-Multiplier-Design.git,2023-05-13 13:54:19+00:00,,0,Adelsamir01/Dadda-Multiplier-Design,640258499,SystemVerilog,Dadda-Multiplier-Design,1832,0,2023-05-13 13:56:35+00:00,[],
12610,https://github.com/learnsvuvm/adder4bit.git,2023-05-03 06:35:44+00:00,,0,learnsvuvm/adder4bit,635646244,SystemVerilog,adder4bit,7,0,2023-05-03 06:36:45+00:00,[],
12611,https://github.com/PappasFlow/System_Verilog.git,2023-04-25 15:24:00+00:00,descripciones de hardware en System Verilog utilizando software Cuartus  ,1,PappasFlow/System_Verilog,632522272,SystemVerilog,System_Verilog,11796,0,2023-04-25 15:25:56+00:00,[],
12612,https://github.com/omarv10/RiscV.git,2023-05-04 04:34:59+00:00,,0,omarv10/RiscV,636075221,SystemVerilog,RiscV,356,0,2023-06-01 19:39:08+00:00,[],
12613,https://github.com/haider-06418/RISCV-Pipelined-Processor.git,2023-05-10 20:25:47+00:00,A 5-stage pipelined processor capable of executing any one array sorting algorithm,0,haider-06418/RISCV-Pipelined-Processor,639128495,SystemVerilog,RISCV-Pipelined-Processor,2284,0,2023-05-15 17:40:02+00:00,[],
12614,https://github.com/yvantor/reqrsp_interface.git,2023-05-08 15:15:40+00:00,,0,yvantor/reqrsp_interface,637865190,SystemVerilog,reqrsp_interface,31,0,2023-05-08 15:17:29+00:00,[],
12615,https://github.com/bushbecky/vhdl2verilog.git,2023-05-08 19:56:38+00:00,,0,bushbecky/vhdl2verilog,637969503,SystemVerilog,vhdl2verilog,14834,0,2023-05-08 19:58:08+00:00,[],https://api.github.com/licenses/mit
12616,https://github.com/balaji-vbr/MIPS-Lite-5-Stage-Pipeline-Simualtor.git,2023-06-18 02:58:30+00:00,,0,balaji-vbr/MIPS-Lite-5-Stage-Pipeline-Simualtor,655142850,SystemVerilog,MIPS-Lite-5-Stage-Pipeline-Simualtor,500,0,2023-06-19 02:45:10+00:00,[],
12617,https://github.com/RomanMakingCode/NoFish.git,2023-05-04 04:58:28+00:00,Cryptographic Accelerator ,0,RomanMakingCode/NoFish,636080892,SystemVerilog,NoFish,53,0,2024-02-18 04:25:35+00:00,[],https://api.github.com/licenses/apache-2.0
12618,https://github.com/singh-rozer/sv_constraints.git,2023-06-04 21:55:43+00:00,constraints,0,singh-rozer/sv_constraints,649451203,SystemVerilog,sv_constraints,49,0,2024-02-07 19:01:02+00:00,[],
12619,https://github.com/PacoReinaCampo/MPSoC-DSA.git,2023-06-01 11:53:18+00:00,Digital Signature Algorithm for MPSoC,0,PacoReinaCampo/MPSoC-DSA,648185486,SystemVerilog,MPSoC-DSA,73851,0,2023-10-08 07:34:57+00:00,"['cryptography', 'ecdsa', 'kcdsa']",https://api.github.com/licenses/mit
12620,https://github.com/SolarDebris/writeups.git,2023-06-21 21:54:06+00:00,A collection of writeups for challenges that I've done that I thought were interesting,0,SolarDebris/writeups,656897277,SystemVerilog,writeups,40813,0,2024-04-01 23:42:37+00:00,[],https://api.github.com/licenses/gpl-3.0
12621,https://github.com/rudrajyotiroy/SysArray.git,2023-06-10 11:06:39+00:00,,0,rudrajyotiroy/SysArray,651875183,SystemVerilog,SysArray,4,0,2023-06-10 16:20:19+00:00,[],
12622,https://github.com/abarajithan11/uvm_decrypter.git,2023-06-13 04:46:01+00:00,,0,abarajithan11/uvm_decrypter,652931850,SystemVerilog,uvm_decrypter,84,0,2023-06-13 04:46:54+00:00,[],
12623,https://github.com/AlbertZick/MyUvmExample.git,2023-04-17 04:08:49+00:00,,0,AlbertZick/MyUvmExample,628827247,SystemVerilog,MyUvmExample,4,0,2023-04-17 11:17:40+00:00,[],
12624,https://github.com/matheusinoc/loac.git,2023-05-19 13:07:37+00:00,Roteiros de LOAC,0,matheusinoc/loac,642837662,SystemVerilog,loac,8571,0,2023-05-19 13:14:57+00:00,[],
12625,https://github.com/tallenintegsys/glitchGenerator.git,2023-05-19 14:52:32+00:00,Really a fancy pulse generator specialized to generating glitch pulses,0,tallenintegsys/glitchGenerator,642880133,SystemVerilog,glitchGenerator,173,0,2023-05-29 21:18:17+00:00,[],
12626,https://github.com/linzack/fsic.git,2023-05-16 23:39:35+00:00,,0,linzack/fsic,641670778,SystemVerilog,fsic,1399,0,2023-05-17 00:11:55+00:00,[],
12627,https://github.com/gopalvamsi09/leaf_sequence.git,2023-05-18 07:21:49+00:00,,0,gopalvamsi09/leaf_sequence,642265569,SystemVerilog,leaf_sequence,3,0,2023-05-18 07:31:46+00:00,[],
12628,https://github.com/LuisZumbado99/Multiplicador_secuencial.git,2023-05-16 23:55:44+00:00,Implementación del algoritmo de Booth por medio de máquinas de estados complejas.,0,LuisZumbado99/Multiplicador_secuencial,641674235,SystemVerilog,Multiplicador_secuencial,160,0,2023-05-26 22:24:51+00:00,[],
12629,https://github.com/symbolfu/BASIC_IC_DESIGN.git,2023-05-23 13:45:21+00:00,"somtime, code ic common module",0,symbolfu/BASIC_IC_DESIGN,644425860,SystemVerilog,BASIC_IC_DESIGN,14,0,2023-05-23 13:48:49+00:00,[],
12630,https://github.com/TonyKorol1/lab4prelab.git,2023-05-23 20:25:02+00:00,,0,TonyKorol1/lab4prelab,644580621,SystemVerilog,lab4prelab,0,0,2023-05-23 20:56:32+00:00,[],
12631,https://github.com/jnestor/otieno_research.git,2023-05-24 17:26:12+00:00,Summer Design Projects with Maurice Otieno,0,jnestor/otieno_research,644992408,SystemVerilog,otieno_research,249,0,2023-05-25 16:34:45+00:00,[],
12632,https://github.com/adityaB02/100daysofRTL.git,2023-05-24 05:29:17+00:00,RTL (Register Transfer Level) design/digital logic design in system verilog(.sv) and use of verification methodologies.,0,adityaB02/100daysofRTL,644714123,SystemVerilog,100daysofRTL,465,0,2023-05-24 09:35:46+00:00,[],
12633,https://github.com/onurozdemr/pipelined-singlecycle-processor.git,2023-05-18 19:07:41+00:00,,0,onurozdemr/pipelined-singlecycle-processor,642524200,SystemVerilog,pipelined-singlecycle-processor,1848,0,2023-05-18 19:17:36+00:00,[],
12634,https://github.com/SamehM20/UART.git,2023-05-20 14:22:04+00:00,Configurable UART Implementation,0,SamehM20/UART,643235833,SystemVerilog,UART,18,0,2023-05-20 14:22:50+00:00,[],https://api.github.com/licenses/apache-2.0
12635,https://github.com/AniketShukla14/AXI_Protocol.git,2023-05-12 06:50:52+00:00,,0,AniketShukla14/AXI_Protocol,639757107,SystemVerilog,AXI_Protocol,19,0,2023-05-12 06:55:33+00:00,[],
12636,https://github.com/KyleHolub-tamu/ECEN_685.git,2023-05-31 22:35:02+00:00,,0,KyleHolub-tamu/ECEN_685,647957825,SystemVerilog,ECEN_685,74,0,2023-06-01 17:20:55+00:00,[],
12637,https://github.com/pdn002/ECE111-Final-Project.git,2023-06-02 18:11:52+00:00,,0,pdn002/ECE111-Final-Project,648752713,SystemVerilog,ECE111-Final-Project,199,0,2023-06-02 18:13:33+00:00,[],
12638,https://github.com/AthibanNatarajan/half_adder_Sv.git,2023-06-23 10:05:09+00:00,,0,AthibanNatarajan/half_adder_Sv,657551022,SystemVerilog,half_adder_Sv,13,0,2023-06-23 10:06:47+00:00,[],
12639,https://github.com/mayyxeng/cva6-synth-sim.git,2023-06-23 14:52:07+00:00,"A fork of cva6 with a ""synthesizable"" testbench for verilator",0,mayyxeng/cva6-synth-sim,657662864,SystemVerilog,cva6-synth-sim,36516,0,2023-06-23 14:56:33+00:00,[],
12640,https://github.com/prashant-pvip/AHB_lite_to_AXI4.git,2023-06-23 12:44:47+00:00,Aim to provide UVM Testbench component for AHB-lite to AXI4,0,prashant-pvip/AHB_lite_to_AXI4,657610703,SystemVerilog,AHB_lite_to_AXI4,6,0,2023-06-23 12:47:04+00:00,[],
12641,https://github.com/aknahin/ReversibleGates-SystemVerilog.git,2023-06-14 19:34:38+00:00,,0,aknahin/ReversibleGates-SystemVerilog,653809719,SystemVerilog,ReversibleGates-SystemVerilog,27,0,2023-06-14 19:49:48+00:00,[],https://api.github.com/licenses/mit
12642,https://github.com/ibourff/rtk-blocks-counter-ibourff-main.git,2023-06-13 18:35:02+00:00,,0,ibourff/rtk-blocks-counter-ibourff-main,653277121,SystemVerilog,rtk-blocks-counter-ibourff-main,258,0,2023-06-13 18:35:10+00:00,[],
12643,https://github.com/jhlee25/EE-469.git,2023-05-04 05:17:03+00:00,Computer Architecture,0,jhlee25/EE-469,636085747,SystemVerilog,EE-469,1767,0,2023-09-27 04:37:26+00:00,[],
12644,https://github.com/sudohdl/basic_coverage.git,2023-05-01 15:43:18+00:00,,0,sudohdl/basic_coverage,634939451,SystemVerilog,basic_coverage,2,0,2023-05-02 08:37:19+00:00,[],https://api.github.com/licenses/mit
12645,https://github.com/tharinduSamare/UVM_switch_test.git,2023-05-01 19:56:33+00:00,"This is a UVM test bench for a simple combinational switch, designed for learning purposes.",1,tharinduSamare/UVM_switch_test,635026598,SystemVerilog,UVM_switch_test,444,0,2023-05-10 17:14:02+00:00,[],
12646,https://github.com/Carl625/18224-platformer-tapeout.git,2023-04-27 23:27:06+00:00,A platformer tapeout project for 18224 (Intro to Open-Source FPGA & ASIC Chip Design) at CMU,0,Carl625/18224-platformer-tapeout,633624285,SystemVerilog,18224-platformer-tapeout,21,0,2023-04-27 23:33:37+00:00,[],https://api.github.com/licenses/apache-2.0
12647,https://github.com/abhigna97/Verification-of-Circular-buffer-using-SystemVerilog-Class-based-TestBench.git,2023-04-28 22:31:03+00:00,,0,abhigna97/Verification-of-Circular-buffer-using-SystemVerilog-Class-based-TestBench,634045912,SystemVerilog,Verification-of-Circular-buffer-using-SystemVerilog-Class-based-TestBench,214,0,2023-06-11 18:50:58+00:00,[],
12648,https://github.com/bushbecky/RiSC-16.git,2023-05-08 21:00:20+00:00,,0,bushbecky/RiSC-16,637988335,SystemVerilog,RiSC-16,776,0,2023-05-08 21:00:46+00:00,[],https://api.github.com/licenses/mit
12649,https://github.com/drawnator/LOACUFCG.git,2023-05-09 13:22:11+00:00,meus códigos em organização e arquitetura de computadores,0,drawnator/LOACUFCG,638490045,SystemVerilog,LOACUFCG,1567,0,2023-05-09 14:11:47+00:00,[],https://api.github.com/licenses/cc0-1.0
12650,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-bit-busters.git,2023-05-09 22:06:28+00:00,ece-251-spring-2023-final-project-bit-busters created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-bit-busters,638684306,SystemVerilog,ece-251-spring-2023-final-project-bit-busters,213,0,2023-05-16 12:46:02+00:00,[],https://api.github.com/licenses/mit
12651,https://github.com/beyzoskaya/ComputerArchitecture.git,2023-04-23 00:33:18+00:00,,0,beyzoskaya/ComputerArchitecture,631415923,SystemVerilog,ComputerArchitecture,5055,0,2023-04-23 00:39:48+00:00,[],
12652,https://github.com/acoskuner500/ecen676-project-testbench.git,2023-04-23 05:43:25+00:00,,0,acoskuner500/ecen676-project-testbench,631469342,SystemVerilog,ecen676-project-testbench,23,0,2023-04-23 05:44:53+00:00,[],
12653,https://github.com/mennovf/FPGAHackathon2023.git,2023-04-25 17:50:51+00:00,(Partial) solutions to Nokia's 2023 FPGA Hackathon  (online),0,mennovf/FPGAHackathon2023,632581072,SystemVerilog,FPGAHackathon2023,144,0,2023-04-25 17:57:33+00:00,[],
12654,https://github.com/HantianLin/CSE140L-Lab1.git,2023-04-30 04:20:27+00:00,,0,HantianLin/CSE140L-Lab1,634424270,SystemVerilog,CSE140L-Lab1,38,0,2023-04-30 04:21:07+00:00,[],
12655,https://github.com/DouglasWWolf/vectorpath_scratch_files.git,2023-05-06 03:30:28+00:00,Neccessary files for creating VectorPath projects from scratch,0,DouglasWWolf/vectorpath_scratch_files,636944384,SystemVerilog,vectorpath_scratch_files,28,0,2023-05-06 03:32:21+00:00,[],
12656,https://github.com/jyuwaaw/IC_Verification.git,2023-04-23 07:23:37+00:00,"集成电路验证技术 For HUST IC major by Benji, Class of 2019",0,jyuwaaw/IC_Verification,631491693,SystemVerilog,IC_Verification,25265,0,2024-01-11 19:23:35+00:00,[],
12657,https://github.com/MrDoomsday/sc_lifo.git,2023-06-16 17:04:23+00:00,LIFO,0,MrDoomsday/sc_lifo,654676152,SystemVerilog,sc_lifo,4,0,2024-01-28 18:14:00+00:00,[],
12658,https://github.com/Rakesh5173/4-port-switch-systemverilog-verification.git,2023-06-03 21:06:38+00:00,Verification Component Development for Four-Port Switch ,0,Rakesh5173/4-port-switch-systemverilog-verification,649121304,SystemVerilog,4-port-switch-systemverilog-verification,22,0,2024-02-15 18:52:01+00:00,[],
12659,https://github.com/VishnuMadupoju/SytemVerilog_testbech_scrs.git,2023-05-20 08:59:55+00:00,,0,VishnuMadupoju/SytemVerilog_testbech_scrs,643151666,SystemVerilog,SytemVerilog_testbech_scrs,13,0,2023-05-20 09:04:14+00:00,[],
12660,https://github.com/peter-july/verilogLearnRecord.git,2023-06-18 06:26:32+00:00,,0,peter-july/verilogLearnRecord,655183542,SystemVerilog,verilogLearnRecord,10,0,2024-04-04 09:32:14+00:00,[],
12661,https://github.com/erhangk/Digital-Circuit-Design.git,2023-04-21 15:37:57+00:00,Intel Quartus Projects,0,erhangk/Digital-Circuit-Design,630972890,SystemVerilog,Digital-Circuit-Design,40285,0,2024-02-25 13:26:12+00:00,[],
12662,https://github.com/dakshinatharindu/uvm-switch-test.git,2023-04-21 09:06:42+00:00,An UVM based test for a simple switch,0,dakshinatharindu/uvm-switch-test,630837292,SystemVerilog,uvm-switch-test,758,0,2023-04-21 09:21:47+00:00,[],
12663,https://github.com/zaazad/VCS.git,2023-04-25 16:26:29+00:00,,0,zaazad/VCS,632548433,SystemVerilog,VCS,2,0,2023-04-25 16:48:19+00:00,[],
12664,https://github.com/Ivy-End/SPI-Slave.git,2023-04-24 13:47:35+00:00,SPI Slave Module Verificated by UVM,0,Ivy-End/SPI-Slave,631995112,SystemVerilog,SPI-Slave,71267,0,2023-04-24 15:27:22+00:00,[],https://api.github.com/licenses/gpl-3.0
12665,https://github.com/ZhengYuhe/18224-tapeout-template-copy.git,2023-04-28 00:43:58+00:00,Copy of the build template provided as part of CMU 18224 tapeout project,0,ZhengYuhe/18224-tapeout-template-copy,633640210,SystemVerilog,18224-tapeout-template-copy,688,0,2023-05-06 02:02:18+00:00,[],https://api.github.com/licenses/apache-2.0
12666,https://github.com/Suanronglajiaojiang/FPGA-VGA-display-with-11x8-dot-matrix-font.git,2023-04-28 16:18:02+00:00,A verilog project to drive a 480p VGA displayer,0,Suanronglajiaojiang/FPGA-VGA-display-with-11x8-dot-matrix-font,633938788,SystemVerilog,FPGA-VGA-display-with-11x8-dot-matrix-font,81,0,2023-04-28 16:22:02+00:00,[],
12667,https://github.com/johnstef99/docker-questa.git,2023-05-13 16:02:55+00:00,This is a template project for compiling and simulating modules written in System Verilog using the Questa Intel,0,johnstef99/docker-questa,640295222,SystemVerilog,docker-questa,5,0,2023-05-13 16:03:44+00:00,[],
12668,https://github.com/hypnotic2402/cv32e40p_verification.git,2023-05-12 10:37:49+00:00,,1,hypnotic2402/cv32e40p_verification,639836709,SystemVerilog,cv32e40p_verification,3306,0,2023-05-12 10:46:29+00:00,[],
12669,https://github.com/Jetoson/Automated_Juice_Seller.git,2023-04-20 05:15:49+00:00,,0,Jetoson/Automated_Juice_Seller,630304307,SystemVerilog,Automated_Juice_Seller,6,0,2023-04-20 05:20:11+00:00,[],
12670,https://github.com/GaalElbaz/deNovoAccelerator.git,2023-05-18 17:07:29+00:00,A design of a hardware accelerator of the 1st part of de-novo assembly workflow.,0,GaalElbaz/deNovoAccelerator,642483325,SystemVerilog,deNovoAccelerator,17092,0,2023-05-19 16:14:36+00:00,[],
12671,https://github.com/mariastt/ADC_7928.git,2023-05-18 16:53:40+00:00,Модуль для проверки АЦП на контрольно-поверочной аппаратуре,0,mariastt/ADC_7928,642478515,SystemVerilog,ADC_7928,4,0,2023-05-18 16:57:43+00:00,[],
12672,https://github.com/jfarr00/System-on-a-Chip-with-Processing-Unit.git,2023-05-23 05:21:34+00:00,A system designed to perform matrix and integer calculations and then storing the data across multiple modules. ,0,jfarr00/System-on-a-Chip-with-Processing-Unit,644233872,SystemVerilog,System-on-a-Chip-with-Processing-Unit,316,0,2023-05-23 05:23:00+00:00,[],
12673,https://github.com/0TulipRose0/DAC.git,2023-05-03 20:38:01+00:00,Digital to analog converter,0,0TulipRose0/DAC,635960540,SystemVerilog,DAC,481,0,2023-05-03 20:51:29+00:00,[],
12674,https://github.com/Divzzzzz23/sample.git,2023-04-30 10:06:08+00:00,test,0,Divzzzzz23/sample,634494684,SystemVerilog,sample,1,0,2023-04-30 10:27:24+00:00,[],
12675,https://github.com/JuanMMonteros/SystemVerilog.git,2023-04-29 21:14:03+00:00,,0,JuanMMonteros/SystemVerilog,634356248,SystemVerilog,SystemVerilog,63,0,2023-05-01 01:07:21+00:00,[],
12676,https://github.com/Bhoomi-sravanthi/D01_Half-Subtractor.git,2023-05-08 05:25:08+00:00,,0,Bhoomi-sravanthi/D01_Half-Subtractor,637641527,SystemVerilog,D01_Half-Subtractor,3,0,2023-08-29 17:14:11+00:00,[],
12677,https://github.com/ShashankC27/termproject.git,2023-05-16 06:52:55+00:00,,0,ShashankC27/termproject,641285368,SystemVerilog,termproject,112,0,2023-05-16 06:53:24+00:00,[],
12678,https://github.com/franciscodantas/LOAC.git,2023-05-16 13:36:13+00:00,,0,franciscodantas/LOAC,641445202,SystemVerilog,LOAC,363,0,2023-05-16 13:43:30+00:00,[],
12679,https://github.com/kele14x/kv32.git,2023-05-28 14:32:13+00:00,A toy RISC-V processer core,0,kele14x/kv32,646479086,SystemVerilog,kv32,74,0,2023-05-28 14:35:28+00:00,[],
12680,https://github.com/akshay7895/System_verilog.git,2023-05-28 13:36:41+00:00,,0,akshay7895/System_verilog,646463331,SystemVerilog,System_verilog,56,0,2023-05-28 13:40:48+00:00,[],
12681,https://github.com/GomyX/pipline-processor-.git,2023-05-24 13:51:14+00:00,pipeline processor using system Verilog on model sim,0,GomyX/pipline-processor-,644905044,SystemVerilog,pipline-processor-,2119,0,2023-05-24 13:55:19+00:00,[],
12682,https://github.com/sumandeb003/Ariane_Trojans_for_Pyverilog.git,2023-05-26 12:50:51+00:00,,0,sumandeb003/Ariane_Trojans_for_Pyverilog,645791762,SystemVerilog,Ariane_Trojans_for_Pyverilog,979,0,2023-08-19 08:45:54+00:00,[],
12683,https://github.com/MoonLoone/ladder_counter.git,2023-05-30 07:35:36+00:00,,0,MoonLoone/ladder_counter,647162192,SystemVerilog,ladder_counter,827,0,2023-05-30 07:37:03+00:00,[],
12684,https://github.com/saballl/ALU.git,2023-06-17 17:48:51+00:00,Simple ALU design in Verilog,0,saballl/ALU,655043388,SystemVerilog,ALU,3,0,2023-06-17 18:50:19+00:00,[],
12685,https://github.com/zkabyken/Basic-SystemVerilog-Processor.git,2023-06-17 20:17:38+00:00,,0,zkabyken/Basic-SystemVerilog-Processor,655077795,SystemVerilog,Basic-SystemVerilog-Processor,28,0,2023-06-17 20:19:02+00:00,[],
12686,https://github.com/abraaovalentim/LOAC.git,2023-05-31 20:43:57+00:00,,0,abraaovalentim/LOAC,647929612,SystemVerilog,LOAC,1,0,2023-05-31 20:46:07+00:00,[],
12687,https://github.com/GiantDwarfRen/CSE140L_lab4.git,2023-06-05 16:35:37+00:00,,0,GiantDwarfRen/CSE140L_lab4,649791181,SystemVerilog,CSE140L_lab4,6,0,2023-06-05 16:36:58+00:00,[],
12688,https://github.com/AmirEfi/Decoder3x8-in-SystemVerilog.git,2023-06-07 10:13:47+00:00,Decoder3x8 Structurally in SystemVerilog,0,AmirEfi/Decoder3x8-in-SystemVerilog,650555825,SystemVerilog,Decoder3x8-in-SystemVerilog,3,0,2023-06-07 10:17:56+00:00,[],
12689,https://github.com/divastor/swerv-workspace.git,2023-06-12 02:04:17+00:00,,0,divastor/swerv-workspace,652400904,SystemVerilog,swerv-workspace,30,0,2023-06-12 02:06:22+00:00,[],
12690,https://github.com/STARS-Design-Track-2023/Absentees.git,2023-06-20 21:04:21+00:00,stopwatch & timer,1,STARS-Design-Track-2023/Absentees,656384599,SystemVerilog,Absentees,70,0,2023-06-30 00:38:51+00:00,[],
12691,https://github.com/vicg42/pyuvm-test.git,2023-06-23 13:23:02+00:00,,0,vicg42/pyuvm-test,657626214,SystemVerilog,pyuvm-test,55,0,2023-06-23 17:28:36+00:00,[],
12692,https://github.com/aglucier/soc.git,2023-06-04 14:14:39+00:00,,0,aglucier/soc,649329983,SystemVerilog,soc,76,0,2023-06-04 14:17:18+00:00,[],
12693,https://github.com/pp-cyril/Verification-of-Synchronous-FIFO-Buffer.git,2023-06-04 09:33:55+00:00,Simple verification of a FIFO Buffer  ,0,pp-cyril/Verification-of-Synchronous-FIFO-Buffer,649255595,SystemVerilog,Verification-of-Synchronous-FIFO-Buffer,6,0,2023-06-04 09:49:40+00:00,[],
12694,https://github.com/Aman-Pani/SYSTEM-VERILOG.git,2023-05-30 06:59:05+00:00,,0,Aman-Pani/SYSTEM-VERILOG,647149105,SystemVerilog,SYSTEM-VERILOG,99,0,2023-08-03 05:31:42+00:00,[],
12695,https://github.com/jayfurz/ece-526-final-fft-project.git,2023-05-18 04:42:21+00:00,Radix-2 Implementation of FFT (8-Point),0,jayfurz/ece-526-final-fft-project,642218015,SystemVerilog,ece-526-final-fft-project,105,0,2023-05-18 04:43:45+00:00,[],
12696,https://github.com/ykc2428233/EE165.git,2023-05-29 16:24:48+00:00,,0,ykc2428233/EE165,646915750,SystemVerilog,EE165,368567,0,2023-05-29 16:28:48+00:00,[],
12697,https://github.com/akshx-at/ECE-385-Final-Project---Battle-City.git,2023-05-31 06:56:58+00:00,This project was created as a final project for my Digital Systems class at UIUC. Me and partner built a multiplayer game on a FPGA called Battle City   The game drew inspiration from the original game of Battle tank 1990.,0,akshx-at/ECE-385-Final-Project---Battle-City,647616283,SystemVerilog,ECE-385-Final-Project---Battle-City,1983,0,2023-05-31 08:12:22+00:00,[],
12698,https://github.com/Bouer/Unidad_Procesadora_SV_QuartusII.git,2023-06-05 12:45:37+00:00,,0,Bouer/Unidad_Procesadora_SV_QuartusII,649696721,SystemVerilog,Unidad_Procesadora_SV_QuartusII,8867,0,2023-06-05 12:49:54+00:00,[],https://api.github.com/licenses/gpl-3.0
12699,https://github.com/jchanDev/ECE152aLab4.git,2023-06-01 03:37:22+00:00,,0,jchanDev/ECE152aLab4,648025368,SystemVerilog,ECE152aLab4,15,0,2023-06-01 03:38:31+00:00,[],
12700,https://github.com/MrDoomsday/scfifo.git,2023-06-12 17:59:54+00:00,,0,MrDoomsday/scfifo,652747135,SystemVerilog,scfifo,5,0,2023-06-12 19:36:12+00:00,[],
12701,https://github.com/nmang2002/Flappy-Bird-DE1SoC.git,2023-06-11 07:12:11+00:00,,0,nmang2002/Flappy-Bird-DE1SoC,652127732,SystemVerilog,Flappy-Bird-DE1SoC,52,0,2023-06-11 07:18:05+00:00,[],
12702,https://github.com/ItteRevanth/System_Verilog_Verification_Models.git,2023-06-17 13:01:40+00:00,,0,ItteRevanth/System_Verilog_Verification_Models,654958956,SystemVerilog,System_Verilog_Verification_Models,13,0,2023-06-17 13:07:12+00:00,[],
12703,https://github.com/ChiragAumraj/System-Verilog-Dual-port-ram.git,2023-06-21 05:27:05+00:00,,0,ChiragAumraj/System-Verilog-Dual-port-ram,656514341,SystemVerilog,System-Verilog-Dual-port-ram,4,0,2023-06-21 05:29:21+00:00,[],
12704,https://github.com/Heaton15/udemy-uvm.git,2023-06-23 14:14:51+00:00,SystemVerilog UVM Training,0,Heaton15/udemy-uvm,657647446,SystemVerilog,udemy-uvm,647,0,2023-06-29 13:29:42+00:00,[],
12705,https://github.com/Jetoson/Verilog_Case_Explainer.git,2023-04-20 04:57:37+00:00,Explains the case statment in Verilog,0,Jetoson/Verilog_Case_Explainer,630299535,SystemVerilog,Verilog_Case_Explainer,3,0,2023-04-20 04:59:51+00:00,[],
12706,https://github.com/18016336995/final-project---full-version.git,2023-04-23 05:59:04+00:00,,0,18016336995/final-project---full-version,631472520,SystemVerilog,final-project---full-version,124,0,2023-04-30 22:02:18+00:00,[],
12707,https://github.com/GalGranot/BilliardGameLab1A.git,2023-05-06 05:46:34+00:00,,0,GalGranot/BilliardGameLab1A,636971074,SystemVerilog,BilliardGameLab1A,53543,0,2023-05-06 20:39:18+00:00,[],
12708,https://github.com/Domandrenog/Digital_Taltech_Code_with_Assertions.git,2023-05-05 10:57:48+00:00,,0,Domandrenog/Digital_Taltech_Code_with_Assertions,636660216,SystemVerilog,Digital_Taltech_Code_with_Assertions,20,0,2023-05-05 11:00:25+00:00,[],
12709,https://github.com/ekassos/cs141-project.git,2023-04-24 01:37:41+00:00,,0,ekassos/cs141-project,631755507,SystemVerilog,cs141-project,5319,0,2023-04-24 01:38:41+00:00,[],
12710,https://github.com/danielcarrascoza/CSE140L.git,2023-04-27 02:43:29+00:00,,0,danielcarrascoza/CSE140L,633211764,SystemVerilog,CSE140L,20,0,2023-05-01 01:48:08+00:00,[],
12711,https://github.com/nisssal/uvml.git,2023-05-11 18:06:04+00:00,SystemVerilog Test Framework ,1,nisssal/uvml,639562314,SystemVerilog,uvml,76,0,2023-05-11 18:15:08+00:00,[],
12712,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-ridwan-fan-club.git,2023-05-09 22:20:18+00:00,ece-251-spring-2023-final-project-ridwan-fan-club created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-ridwan-fan-club,638687598,SystemVerilog,ece-251-spring-2023-final-project-ridwan-fan-club,42,0,2023-05-15 22:00:03+00:00,[],https://api.github.com/licenses/mit
12713,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-mr-chips.git,2023-05-09 22:19:08+00:00,ece-251-spring-2023-final-project-mr-chips created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-mr-chips,638687331,SystemVerilog,ece-251-spring-2023-final-project-mr-chips,1672,0,2023-05-09 22:19:17+00:00,[],https://api.github.com/licenses/mit
12714,https://github.com/cu-cai-2001/RISC-V_Verilog.git,2023-05-12 16:05:11+00:00,code verilog for risc_v,1,cu-cai-2001/RISC-V_Verilog,639956913,SystemVerilog,RISC-V_Verilog,4073,0,2023-05-12 16:13:20+00:00,[],
12715,https://github.com/Miyaatsumo/Synthesisable_Asynchronous_FIFO.git,2023-04-17 09:11:42+00:00,,1,Miyaatsumo/Synthesisable_Asynchronous_FIFO,628927034,SystemVerilog,Synthesisable_Asynchronous_FIFO,1,0,2023-04-17 09:12:39+00:00,[],
12716,https://github.com/AlexanderKick/Rhythm-Audio-FPGA-Project.git,2023-05-20 16:54:25+00:00,Developed a rhythm project with the MAX10 FPGA device using System Verilog and C in Intel’s Quartus Prime and ModelSim,0,AlexanderKick/Rhythm-Audio-FPGA-Project,643279773,SystemVerilog,Rhythm-Audio-FPGA-Project,404,0,2023-10-31 23:24:23+00:00,[],
12717,https://github.com/maktheus/black_jack_varilog.git,2023-05-25 02:27:36+00:00,AGR VAIIIIII,0,maktheus/black_jack_varilog,645139099,SystemVerilog,black_jack_varilog,4,0,2023-05-25 02:27:56+00:00,[],
12718,https://github.com/zahrahojati19/Latches-and-FlipFlops.git,2023-05-26 11:39:34+00:00,,0,zahrahojati19/Latches-and-FlipFlops,645765461,SystemVerilog,Latches-and-FlipFlops,13,0,2023-05-26 11:40:46+00:00,[],
12719,https://github.com/devanshi-jain/heading_robosub.git,2023-06-03 23:40:38+00:00,,0,devanshi-jain/heading_robosub,649146290,SystemVerilog,heading_robosub,8,0,2023-06-04 01:04:11+00:00,[],
12720,https://github.com/Nagarjun444/leap-yearconstraint.git,2023-06-04 09:32:01+00:00,leap year printing using constraints in system verilog,0,Nagarjun444/leap-yearconstraint,649255101,SystemVerilog,leap-yearconstraint,1,0,2023-06-04 09:32:48+00:00,[],
12721,https://github.com/varshach26/SHA256-Algorithm.git,2023-06-23 06:02:13+00:00,Implementation of SHA256 Algorithm using System Verilog,0,varshach26/SHA256-Algorithm,657466512,SystemVerilog,SHA256-Algorithm,54,0,2023-06-23 06:03:48+00:00,[],
12722,https://github.com/sarinasabouri1/prosthetics_hdc.git,2023-06-19 20:28:51+00:00,,0,sarinasabouri1/prosthetics_hdc,655888903,SystemVerilog,prosthetics_hdc,52,0,2023-06-19 20:59:01+00:00,[],
12723,https://github.com/SamehM20/SBqM.git,2023-05-19 12:08:02+00:00,Safe Bank Queue Manager,0,SamehM20/SBqM,642815347,SystemVerilog,SBqM,10,0,2023-05-19 12:16:39+00:00,[],https://api.github.com/licenses/apache-2.0
12724,https://github.com/Alden0012/OptimisedOnlineModules.git,2023-06-19 22:52:01+00:00,,0,Alden0012/OptimisedOnlineModules,655922925,SystemVerilog,OptimisedOnlineModules,246,0,2023-06-20 14:05:21+00:00,[],
12725,https://github.com/Giorgi-Solo/MasterThesis.git,2023-06-19 16:58:24+00:00,,0,Giorgi-Solo/MasterThesis,655817933,SystemVerilog,MasterThesis,14070,0,2023-06-22 10:25:31+00:00,[],
12726,https://github.com/Lathika-Wathsara/FPGA_Training.git,2023-06-06 18:16:51+00:00,,0,Lathika-Wathsara/FPGA_Training,650277685,SystemVerilog,FPGA_Training,49377,0,2023-06-29 18:29:50+00:00,[],
12727,https://github.com/nbannur2/MIPS.git,2023-06-07 01:55:38+00:00,,0,nbannur2/MIPS,650399594,SystemVerilog,MIPS,1188,0,2024-02-26 00:39:54+00:00,[],
12729,https://github.com/Eloquencere/Custom-Keyboard.git,2023-06-15 06:21:31+00:00,,0,Eloquencere/Custom-Keyboard,653975098,SystemVerilog,Custom-Keyboard,332,0,2023-10-25 16:06:36+00:00,[],
12730,https://github.com/AzimSofi/Verilog_16bitCLA.git,2023-06-15 16:16:45+00:00,,0,AzimSofi/Verilog_16bitCLA,654214450,SystemVerilog,Verilog_16bitCLA,15,0,2023-06-15 16:19:08+00:00,[],
12731,https://github.com/aryanindarapu/ece385_summer23.git,2023-06-20 02:38:59+00:00,,0,aryanindarapu/ece385_summer23,655974899,SystemVerilog,ece385_summer23,28170,0,2023-06-20 03:24:38+00:00,[],
12732,https://github.com/Jacario777/Big-2_ASIC.git,2023-05-18 00:34:30+00:00,An ASIC that can play the popular card game Big-2. ,0,Jacario777/Big-2_ASIC,642158639,SystemVerilog,Big-2_ASIC,15276,0,2023-05-18 00:48:18+00:00,[],
12733,https://github.com/Jetoson/32-bit_Ripple_CarryAdder.git,2023-05-28 21:20:03+00:00,,0,Jetoson/32-bit_Ripple_CarryAdder,646584905,SystemVerilog,32-bit_Ripple_CarryAdder,5,0,2023-05-29 08:42:09+00:00,[],
12734,https://github.com/skshamshi/I2C_design_and_verification.git,2023-05-23 04:57:44+00:00,,0,skshamshi/I2C_design_and_verification,644227493,SystemVerilog,I2C_design_and_verification,1014,0,2023-05-30 22:57:29+00:00,[],
12735,https://github.com/dannym49/Calpoly-CPE233.git,2023-05-25 19:29:57+00:00,OTTER MCU,0,dannym49/Calpoly-CPE233,645494254,SystemVerilog,Calpoly-CPE233,28,0,2023-05-25 19:33:25+00:00,[],
12736,https://github.com/Fazail333/CEP_lab.git,2023-05-31 09:25:11+00:00,,0,Fazail333/CEP_lab,647671841,SystemVerilog,CEP_lab,3,0,2023-05-31 09:26:21+00:00,[],
12737,https://github.com/nmang2002/Pipelined-Processor.git,2023-06-11 07:50:37+00:00,,0,nmang2002/Pipelined-Processor,652136321,SystemVerilog,Pipelined-Processor,18,0,2023-06-11 07:51:18+00:00,[],
12738,https://github.com/Shajol9/timer_design.git,2023-05-20 08:01:42+00:00,"counter and frequency dividers are basic building block for timers. Design of a positive edge triggered flipflop can be found in this repository. Design of a 17 bit ripple counter, 4 bit ripple counter and 4 bit gray counter and there testbench is also written in system verilog.   ",0,Shajol9/timer_design,643137300,SystemVerilog,timer_design,3728,0,2023-05-24 11:11:36+00:00,[],
12739,https://github.com/ayush2350/Synchronous-FIFO-Verification-using-SystemVerilog.git,2023-06-02 04:24:56+00:00,,0,ayush2350/Synchronous-FIFO-Verification-using-SystemVerilog,648479938,SystemVerilog,Synchronous-FIFO-Verification-using-SystemVerilog,19,0,2023-06-02 04:25:42+00:00,[],https://api.github.com/licenses/gpl-3.0
12740,https://github.com/gary600/bfchip-tapeout.git,2023-04-28 22:41:59+00:00,,0,gary600/bfchip-tapeout,634048111,SystemVerilog,bfchip-tapeout,34,0,2023-05-26 18:55:56+00:00,[],https://api.github.com/licenses/apache-2.0
12741,https://github.com/rafiqul-rafi/-Design-and-Simulation-of-a-32-bit-RISC-V-Core-and-APB.git,2023-05-06 04:31:13+00:00,,0,rafiqul-rafi/-Design-and-Simulation-of-a-32-bit-RISC-V-Core-and-APB,636956057,SystemVerilog,-Design-and-Simulation-of-a-32-bit-RISC-V-Core-and-APB,3398,0,2023-05-06 04:31:25+00:00,[],
12742,https://github.com/PrashantPanchal20/Adder_TB_UVM.git,2023-05-09 07:14:27+00:00,,0,PrashantPanchal20/Adder_TB_UVM,638144307,SystemVerilog,Adder_TB_UVM,16,0,2023-06-04 18:28:28+00:00,[],
12743,https://github.com/xinyew/CMU_courses_18341_labs_F22.git,2023-04-20 03:40:41+00:00,,0,xinyew/CMU_courses_18341_labs_F22,630280824,SystemVerilog,CMU_courses_18341_labs_F22,1457,0,2023-04-20 03:41:27+00:00,[],
12745,https://github.com/ryan-gits/fpga-axil.git,2023-04-28 18:09:58+00:00,AXI Lite interface,0,ryan-gits/fpga-axil,633977349,SystemVerilog,fpga-axil,15,0,2023-05-01 19:00:17+00:00,[],https://api.github.com/licenses/gpl-3.0
12746,https://github.com/Reammaer/books.git,2023-05-06 17:42:19+00:00,,0,Reammaer/books,637161992,SystemVerilog,books,521813,0,2023-06-13 19:21:09+00:00,[],
12747,https://github.com/bushbecky/AES-Processor.git,2023-05-08 20:59:32+00:00,,0,bushbecky/AES-Processor,637988128,SystemVerilog,AES-Processor,19214,0,2023-05-08 21:00:06+00:00,[],https://api.github.com/licenses/mit
12748,https://github.com/rbride/System-Verilog-Modules.git,2023-05-21 21:42:43+00:00,A collection of various hardware designs and test benches from various projects. ,0,rbride/System-Verilog-Modules,643664901,SystemVerilog,System-Verilog-Modules,63,0,2023-08-05 16:51:24+00:00,[],
12749,https://github.com/GhanayemMuh/Fusball-Game-on-FPGA.git,2023-05-01 16:53:06+00:00,,0,GhanayemMuh/Fusball-Game-on-FPGA,634964708,SystemVerilog,Fusball-Game-on-FPGA,1009,0,2024-02-20 14:16:23+00:00,[],
12750,https://github.com/tngPhVN/MiniMA-computer-architecture.git,2023-05-01 03:09:52+00:00,,0,tngPhVN/MiniMA-computer-architecture,634730226,SystemVerilog,MiniMA-computer-architecture,2778,0,2023-10-05 16:53:40+00:00,[],
12751,https://github.com/tms4517/Yosys_to_aid_with_RTL_design.git,2023-05-29 10:08:56+00:00,,1,tms4517/Yosys_to_aid_with_RTL_design,646775515,SystemVerilog,Yosys_to_aid_with_RTL_design,29,0,2023-07-08 12:13:23+00:00,[],
12752,https://github.com/varunven/CSE271.git,2023-05-09 19:30:55+00:00,Digital Circuits Intro to Verilog Projects,0,varunven/CSE271,638640082,SystemVerilog,CSE271,20,0,2023-05-09 19:36:45+00:00,[],
12753,https://github.com/apatnana/uvm_practice.git,2023-05-09 07:17:20+00:00,,0,apatnana/uvm_practice,638145413,SystemVerilog,uvm_practice,1,0,2023-05-09 07:23:18+00:00,[],
12754,https://github.com/bushbecky/Digital-Design.git,2023-05-08 21:01:47+00:00,,0,bushbecky/Digital-Design,637988809,SystemVerilog,Digital-Design,42,0,2023-05-08 21:02:10+00:00,[],
12755,https://github.com/calebabutler/verilog-pi-calculator.git,2023-05-08 14:59:18+00:00,A Verilog pi calculator capable of calculating a million digits.,0,calebabutler/verilog-pi-calculator,637858286,SystemVerilog,verilog-pi-calculator,1051,0,2023-05-08 15:15:19+00:00,[],https://api.github.com/licenses/mit
12756,https://github.com/ShadyCookies/Cache-Controllers.git,2023-05-10 15:08:57+00:00,Implementation of various cache controller architectures. ,0,ShadyCookies/Cache-Controllers,639011163,SystemVerilog,Cache-Controllers,22,0,2023-05-18 07:06:54+00:00,[],https://api.github.com/licenses/mit
12757,https://github.com/SagarSorathiya2002/UART_DESIGN.git,2023-06-17 19:54:41+00:00,RTL Design of UART using Verilog HDL and Verification using System Verilog,0,SagarSorathiya2002/UART_DESIGN,655073022,SystemVerilog,UART_DESIGN,174,0,2023-06-17 19:56:36+00:00,[],
12758,https://github.com/vbnqwe/Poorly-made-Processor.git,2023-05-25 22:33:34+00:00,"An attempt at making a pipelined, superscalar Risc V processor. An attempt at out of order instruction execution as well.",0,vbnqwe/Poorly-made-Processor,645543105,SystemVerilog,Poorly-made-Processor,22161,0,2023-07-19 10:15:19+00:00,[],https://api.github.com/licenses/mit
12759,https://github.com/yashwant4756/System_Verilog.git,2023-06-14 13:06:27+00:00,,0,yashwant4756/System_Verilog,653649379,SystemVerilog,System_Verilog,56,0,2023-06-14 16:23:28+00:00,[],https://api.github.com/licenses/mit
12760,https://github.com/grakseasy/UVM_projects.git,2023-06-08 07:56:14+00:00,,0,grakseasy/UVM_projects,650971052,SystemVerilog,UVM_projects,272,0,2023-06-08 10:17:21+00:00,[],
12761,https://github.com/pp-cyril/Verification-of-AHB-Memory.git,2023-06-14 10:54:48+00:00,AMBA AHB bus protocol verification,0,pp-cyril/Verification-of-AHB-Memory,653593857,SystemVerilog,Verification-of-AHB-Memory,8,0,2023-06-14 10:55:22+00:00,[],
12762,https://github.com/Paradicat/demo.git,2023-06-15 12:59:51+00:00,this is demo,0,Paradicat/demo,654131289,SystemVerilog,demo,3,0,2023-07-27 07:34:10+00:00,[],
12763,https://github.com/alonso59/uvm_project.git,2023-06-21 17:33:14+00:00,,0,alonso59/uvm_project,656811992,SystemVerilog,uvm_project,10793,0,2023-06-22 18:03:03+00:00,[],
12764,https://github.com/HAMZA-AFZAL404/ahb3lite_memory.git,2023-06-21 06:36:09+00:00,The Roa Logic AHB-Lite Memory IP,0,HAMZA-AFZAL404/ahb3lite_memory,656536883,SystemVerilog,ahb3lite_memory,1206,0,2023-06-21 06:39:02+00:00,[],
12765,https://github.com/Temix707/Interfaces.git,2023-06-17 20:14:05+00:00,RTL interface design,0,Temix707/Interfaces,655077023,SystemVerilog,Interfaces,7854,0,2023-11-09 17:34:22+00:00,[],
12766,https://github.com/subramaniantr/SPI.git,2023-06-18 02:47:00+00:00,,0,subramaniantr/SPI,655140764,SystemVerilog,SPI,4,0,2023-06-24 13:29:44+00:00,[],
12767,https://github.com/riscvfsoc/chipignite_2304_soc.git,2023-04-29 04:44:02+00:00,RISC-V Based Quad Core GPIO Station,0,riscvfsoc/chipignite_2304_soc,634110512,SystemVerilog,chipignite_2304_soc,733845,0,2023-04-29 04:51:27+00:00,[],https://api.github.com/licenses/apache-2.0
12768,https://github.com/Thomas-J-Kidd/CompArchExtraCredit.git,2023-05-02 00:10:23+00:00,,0,Thomas-J-Kidd/CompArchExtraCredit,635089144,SystemVerilog,CompArchExtraCredit,2266,0,2023-05-02 00:12:48+00:00,[],
12769,https://github.com/abejgonzalez/vitis-help.git,2023-05-02 18:38:32+00:00,,0,abejgonzalez/vitis-help,635460338,SystemVerilog,vitis-help,75225,0,2023-05-02 20:22:14+00:00,[],
12770,https://github.com/SiyamAcet/Design_Alu.git,2023-05-13 07:46:29+00:00,,0,SiyamAcet/Design_Alu,640166994,SystemVerilog,Design_Alu,463,0,2023-05-13 08:01:02+00:00,[],
12771,https://github.com/KobiDekel/FPGA_Projects.git,2023-05-24 14:34:17+00:00,,0,KobiDekel/FPGA_Projects,644924270,SystemVerilog,FPGA_Projects,2016,0,2023-05-25 09:25:38+00:00,[],
12772,https://github.com/Guillen00/lguillen2_computer-architecture_1_2023.git,2023-04-17 02:04:23+00:00,,0,Guillen00/lguillen2_computer-architecture_1_2023,628795882,SystemVerilog,lguillen2_computer-architecture_1_2023,539173,0,2023-10-13 03:34:19+00:00,[],
12773,https://github.com/CreeKee/RISCV_Otter.git,2023-04-21 05:10:26+00:00,Microcontroller unit implementing the Risc-V ISA,0,CreeKee/RISCV_Otter,630761099,SystemVerilog,RISCV_Otter,28,0,2023-04-21 05:11:12+00:00,[],
12774,https://github.com/lj06872/Pipelined-Processor.git,2023-04-25 15:54:50+00:00,,2,lj06872/Pipelined-Processor,632535125,SystemVerilog,Pipelined-Processor,50,0,2023-05-20 16:11:21+00:00,[],
12775,https://github.com/sxwkl2/shiny-engine.git,2023-04-28 08:44:35+00:00,,0,sxwkl2/shiny-engine,633773717,SystemVerilog,shiny-engine,327,0,2023-04-28 08:45:50+00:00,[],
12776,https://github.com/AniketShukla14/UVM_Architecture.git,2023-05-30 03:58:49+00:00,,0,AniketShukla14/UVM_Architecture,647098031,SystemVerilog,UVM_Architecture,6,0,2023-05-30 04:45:35+00:00,[],
12777,https://github.com/lenguyen8888/Engr85.git,2023-05-27 19:47:09+00:00,,0,lenguyen8888/Engr85,646257851,SystemVerilog,Engr85,40433,0,2023-05-27 19:53:58+00:00,[],
12778,https://github.com/Salma-Yassin/Implementation_of_ARM_Single_Cycle_Processor_Control_Unit.git,2023-05-25 18:27:46+00:00,,0,Salma-Yassin/Implementation_of_ARM_Single_Cycle_Processor_Control_Unit,645473815,SystemVerilog,Implementation_of_ARM_Single_Cycle_Processor_Control_Unit,5,0,2023-05-25 18:29:53+00:00,[],
12779,https://github.com/PRAGATI-0102/Mux_2to1-using-SV-Day-054-.git,2023-06-02 15:07:10+00:00,A multiplexer is a digital circuit that selects one of two input signals based on a select signal and routes it to the output.,0,PRAGATI-0102/Mux_2to1-using-SV-Day-054-,648691923,SystemVerilog,Mux_2to1-using-SV-Day-054-,86,0,2023-06-02 15:09:46+00:00,[],
12780,https://github.com/Raymond0429/risc-v5sp.git,2023-06-12 08:32:30+00:00,Project of the risc-v course of Xidian University,0,Raymond0429/risc-v5sp,652518861,SystemVerilog,risc-v5sp,1052,0,2023-06-12 13:57:48+00:00,[],
12781,https://github.com/eceboy/uvm_projects.git,2023-06-13 02:19:28+00:00,Just me being a funny little learning boy,0,eceboy/uvm_projects,652891748,SystemVerilog,uvm_projects,10,0,2023-06-13 02:20:34+00:00,[],
12782,https://github.com/MayaBrito/codesSystemVerilog.git,2023-05-09 14:16:36+00:00,,0,MayaBrito/codesSystemVerilog,638515619,SystemVerilog,codesSystemVerilog,728,0,2024-01-06 14:39:00+00:00,[],
12783,https://github.com/CSCE689-SP23/lab3.git,2023-04-19 00:16:05+00:00,,0,CSCE689-SP23/lab3,629746187,SystemVerilog,lab3,166,0,2024-01-08 15:52:08+00:00,[],
12784,https://github.com/RPTU-EIS/fault-attack-monitors.git,2023-05-24 09:31:47+00:00,,0,RPTU-EIS/fault-attack-monitors,644800629,SystemVerilog,fault-attack-monitors,5,0,2023-05-24 12:29:38+00:00,[],
12785,https://github.com/abbmir/alu_usecoemu.proj.git,2023-05-15 04:16:31+00:00,,0,abbmir/alu_usecoemu.proj,640758526,SystemVerilog,alu_usecoemu.proj,72,0,2023-10-08 05:58:03+00:00,[],
12786,https://github.com/shahpankti2302/ProjectFinal.git,2023-05-16 23:52:38+00:00,,0,shahpankti2302/ProjectFinal,641673607,SystemVerilog,ProjectFinal,10,0,2023-05-16 23:54:36+00:00,[],
12787,https://github.com/pogoreli/HealthMonitorFinal.git,2023-05-16 20:12:10+00:00,,0,pogoreli/HealthMonitorFinal,641599113,SystemVerilog,HealthMonitorFinal,69,0,2023-05-16 20:57:19+00:00,[],https://api.github.com/licenses/mit
12788,https://github.com/ShayanNadeem08/UART-Transmitter-with-Controller.git,2023-06-02 19:06:59+00:00,A repository containing Verilog implementations of a UVART Transmitter module and a Controller module for serial data transmission using a UART protocol.,0,ShayanNadeem08/UART-Transmitter-with-Controller,648768721,SystemVerilog,UART-Transmitter-with-Controller,9,0,2023-06-02 19:34:42+00:00,[],
12789,https://github.com/jiaowenlong/RRArbiter.git,2023-04-22 14:02:59+00:00,循环优先级仲裁器,0,jiaowenlong/RRArbiter,631275962,SystemVerilog,RRArbiter,1,0,2023-04-22 14:03:51+00:00,[],
12790,https://github.com/zts92929/ECE_3058.git,2023-04-24 01:56:20+00:00,"Code written for ECE 3058, Lab 1 and 2 are in Assembly, Lab 3 and 4 are in C",0,zts92929/ECE_3058,631759904,SystemVerilog,ECE_3058,3940,0,2023-04-24 01:57:36+00:00,[],
12791,https://github.com/STARS-Design-Track-2023/SaSS.git,2023-06-21 12:16:25+00:00,Silicon Allowing Sound Synthesis,1,STARS-Design-Track-2023/SaSS,656677526,SystemVerilog,SaSS,2653,0,2023-06-23 17:54:46+00:00,[],
12792,https://github.com/ManosMorf97/QueuePrioritization_Verilog.git,2023-06-21 06:50:24+00:00,,0,ManosMorf97/QueuePrioritization_Verilog,656542479,SystemVerilog,QueuePrioritization_Verilog,8,0,2023-07-19 18:59:00+00:00,[],
12793,https://github.com/MrDarkhawk/System-Verilog-Dual-Port-Ram.git,2023-06-21 05:44:19+00:00,Here you get beginner level examples for system verilog,0,MrDarkhawk/System-Verilog-Dual-Port-Ram,656519310,SystemVerilog,System-Verilog-Dual-Port-Ram,3,0,2023-06-21 05:48:59+00:00,[],
12794,https://github.com/cmordi/TugofWar.git,2023-04-29 20:07:00+00:00,2 player tug of war game using an FPGA,0,cmordi/TugofWar,634341590,SystemVerilog,TugofWar,11,0,2023-04-29 20:07:46+00:00,[],
12795,https://github.com/karthik-0710/Verification-of-a-Sequential-adder-using-UVM.git,2023-05-01 04:14:35+00:00,Sequrntial adder UVM testbench environment,0,karthik-0710/Verification-of-a-Sequential-adder-using-UVM,634742843,SystemVerilog,Verification-of-a-Sequential-adder-using-UVM,4,0,2023-05-01 04:15:05+00:00,[],
12796,https://github.com/jhlee25/EE-271.git,2023-05-07 01:26:01+00:00,Digital Circuits And Systems,0,jhlee25/EE-271,637253715,SystemVerilog,EE-271,29849,0,2023-09-27 04:42:15+00:00,[],
12797,https://github.com/advancedengineering/EECS627_tapeout.git,2023-04-30 00:57:29+00:00,,0,advancedengineering/EECS627_tapeout,634392810,SystemVerilog,EECS627_tapeout,83,0,2023-04-30 01:05:35+00:00,[],
12798,https://github.com/gabizon103/riscv-filament.git,2023-04-29 17:11:46+00:00,,0,gabizon103/riscv-filament,634297374,SystemVerilog,riscv-filament,13,0,2023-05-03 06:05:04+00:00,[],
12799,https://github.com/CreeKee/CPE333_lab1.git,2023-04-20 05:57:11+00:00,,0,CreeKee/CPE333_lab1,630315465,SystemVerilog,CPE333_lab1,15,0,2023-04-20 05:58:03+00:00,[],
12800,https://github.com/MohanSardar01/Complete-Testbench-8-bit-AND-Gate.git,2023-05-17 10:33:27+00:00,Repository for System Verilog code,0,MohanSardar01/Complete-Testbench-8-bit-AND-Gate,641868636,SystemVerilog,Complete-Testbench-8-bit-AND-Gate,13,0,2023-05-17 15:50:40+00:00,[],
12801,https://github.com/Cindysu123/ECE385.git,2023-05-16 19:15:32+00:00,,0,Cindysu123/ECE385,641580254,SystemVerilog,ECE385,4079,0,2023-05-16 19:20:45+00:00,[],
12802,https://github.com/mrBitman/int2fp.git,2023-05-22 13:39:28+00:00,"Parametrizable (single/half precision) converter signed int to fp(32/16); Parametrizable (single/half precision) converter fp(32/16) to signed integer, that issues smaller or biggest converted value",0,mrBitman/int2fp,643947206,SystemVerilog,int2fp,360,0,2023-05-22 13:41:45+00:00,[],
12803,https://github.com/axyrai/adderSV.git,2023-06-14 06:52:06+00:00,,0,axyrai/adderSV,653491312,SystemVerilog,adderSV,76,0,2023-06-14 06:55:40+00:00,[],
12804,https://github.com/Anuki16/uart-fpga.git,2023-06-12 17:14:18+00:00,UART Transmitter and Receiver implementation for FPGA,0,Anuki16/uart-fpga,652729675,SystemVerilog,uart-fpga,375,0,2023-08-27 05:31:57+00:00,[],
12805,https://github.com/raymond-chii/ECE251.git,2023-06-14 03:14:24+00:00,This repository is my ECE251 project: It contains assembly and system verilog ,0,raymond-chii/ECE251,653426592,SystemVerilog,ECE251,2509,0,2023-06-14 03:21:42+00:00,[],
12806,https://github.com/HalaAbduljalil/Verification-fifthLab.git,2023-06-17 13:29:48+00:00,,0,HalaAbduljalil/Verification-fifthLab,654967061,SystemVerilog,Verification-fifthLab,366,0,2023-06-17 14:05:46+00:00,[],
12807,https://github.com/thinhgvo/sp23-cse141-project.git,2023-06-17 21:52:30+00:00,,0,thinhgvo/sp23-cse141-project,655095395,SystemVerilog,sp23-cse141-project,116,0,2023-06-18 04:32:54+00:00,[],
12808,https://github.com/Ravenwater/sabana-examples-fpga.git,2023-06-15 23:43:51+00:00,"Welcome to the Sabana Examples repository. This repo contains code examples used in the documentation. For more information, head to: https://docs.sabana.io",0,Ravenwater/sabana-examples-fpga,654345078,,sabana-examples-fpga,830,0,2023-06-15 23:43:51+00:00,[],https://api.github.com/licenses/apache-2.0
12809,https://github.com/ajinkyaj238/RISC-V_Processor-.git,2023-06-07 15:14:16+00:00,Built using SystemVerilog on Vivado. Tested on Vivado through testbenches and o0n hardware via the Xilinx PYNQ FPGA,0,ajinkyaj238/RISC-V_Processor-,650678465,SystemVerilog,RISC-V_Processor-,10,0,2023-06-08 00:34:08+00:00,[],
12810,https://github.com/droodhub/ECE551.git,2023-06-08 17:00:21+00:00,ECE551 Files from Fall 2022.,0,droodhub/ECE551,651174782,SystemVerilog,ECE551,5519,0,2023-06-08 22:38:33+00:00,[],
12811,https://github.com/AmirEfi/SingleCycle-Processor-of-RISC-V-in-SystemVerilog.git,2023-06-07 10:50:50+00:00,Update the Single Cycle Processor of RISC-V to support 'auipc' and 'xor' instructions,1,AmirEfi/SingleCycle-Processor-of-RISC-V-in-SystemVerilog,650569758,SystemVerilog,SingleCycle-Processor-of-RISC-V-in-SystemVerilog,9,0,2023-06-07 11:08:29+00:00,[],
12812,https://github.com/akashsaraswatt/Projects.git,2023-06-12 12:35:57+00:00,,0,akashsaraswatt/Projects,652611763,SystemVerilog,Projects,75,0,2023-07-09 17:54:20+00:00,[],
12813,https://github.com/stevenknyazher/Vending-Machine-FPGA.git,2023-06-08 11:22:09+00:00,"Utilized the Zybo Z7-20 and 28BYJ-48 stepper motors to meticulously design and develop a sophisticated miniature snack vending machine. Developed the top module for stepper motor control in SystemVerilog, and debounce and single pulse detector to accurately detect button presses and prevent false triggers in VHDL.",0,stevenknyazher/Vending-Machine-FPGA,651045775,SystemVerilog,Vending-Machine-FPGA,5,0,2023-06-08 11:24:25+00:00,[],
12814,https://github.com/shaharfri/COURSES.git,2023-04-17 15:03:03+00:00,,0,shaharfri/COURSES,629073200,SystemVerilog,COURSES,11880,0,2023-04-17 15:51:00+00:00,[],
12815,https://github.com/pradyumna-d/verilog-codes.git,2023-05-12 14:00:19+00:00,some mini projects implementing digital system design concepts in verilog code ,0,pradyumna-d/verilog-codes,639910390,SystemVerilog,verilog-codes,16,0,2023-05-12 14:03:26+00:00,[],
12816,https://github.com/kek-sick/PRIS_2022.git,2023-05-12 11:00:31+00:00,,0,kek-sick/PRIS_2022,639844270,SystemVerilog,PRIS_2022,378254,0,2023-05-12 11:21:00+00:00,[],
12817,https://github.com/cooper-union-ece-251-marano/ece-251-spring-2023-final-project-nachi.git,2023-05-09 22:19:03+00:00,ece-251-spring-2023-final-project-nachi created by GitHub Classroom,0,cooper-union-ece-251-marano/ece-251-spring-2023-final-project-nachi,638687305,SystemVerilog,ece-251-spring-2023-final-project-nachi,2202,0,2023-05-09 22:19:10+00:00,[],https://api.github.com/licenses/mit
12818,https://github.com/ArgyroP/CFI-landing-pad-shadow-stack.git,2023-06-12 16:43:39+00:00,,0,ArgyroP/CFI-landing-pad-shadow-stack,652717930,SystemVerilog,CFI-landing-pad-shadow-stack,593,0,2024-01-14 16:36:32+00:00,[],
12819,https://github.com/Collin-Lambert/HBM_HEATING.git,2023-05-31 17:36:07+00:00,A hardware design purpose built for heating up an HBM chip,0,Collin-Lambert/HBM_HEATING,647867331,SystemVerilog,HBM_HEATING,35364,0,2023-08-07 20:49:13+00:00,[],
12820,https://github.com/sampathnaveen/System-Verilog.git,2023-04-17 15:41:10+00:00,,0,sampathnaveen/System-Verilog,629089672,SystemVerilog,System-Verilog,9,0,2023-04-17 15:42:46+00:00,[],
12822,https://github.com/TianfengChen/SystemVerilog_notecode.git,2023-05-12 23:36:36+00:00,,0,TianfengChen/SystemVerilog_notecode,640076449,SystemVerilog,SystemVerilog_notecode,125377,0,2023-05-22 15:47:30+00:00,[],
12823,https://github.com/GiantDwarfRen/CSE140_Lab2.git,2023-05-08 16:41:23+00:00,,0,GiantDwarfRen/CSE140_Lab2,637899352,SystemVerilog,CSE140_Lab2,393,0,2023-05-08 16:46:12+00:00,[],
12824,https://github.com/bushbecky/AI-Robotics.git,2023-05-08 21:01:28+00:00,,0,bushbecky/AI-Robotics,637988710,SystemVerilog,AI-Robotics,41,0,2023-05-08 21:01:47+00:00,[],
12825,https://github.com/bushbecky/Verilog-SystemVerilog-Guide.git,2023-05-08 20:57:49+00:00,,0,bushbecky/Verilog-SystemVerilog-Guide,637987667,SystemVerilog,Verilog-SystemVerilog-Guide,7,0,2023-05-08 20:58:03+00:00,[],
12826,https://github.com/MIET-SoCDesignChallenge/verification_hacks.git,2023-04-21 10:15:20+00:00,,0,MIET-SoCDesignChallenge/verification_hacks,630861104,SystemVerilog,verification_hacks,5,0,2023-04-21 10:15:47+00:00,[],
12827,https://github.com/adinavale/ee_287_final_project.git,2023-04-28 17:13:36+00:00,FIR filter final project,0,adinavale/ee_287_final_project,633958384,SystemVerilog,ee_287_final_project,558,0,2023-05-05 07:37:16+00:00,[],
12828,https://github.com/georgec7/Microarchitecture-SPU-Lite-Processor.git,2023-05-04 03:36:37+00:00,,0,georgec7/Microarchitecture-SPU-Lite-Processor,636061233,SystemVerilog,Microarchitecture-SPU-Lite-Processor,3811,0,2023-05-04 03:39:17+00:00,[],
12829,https://github.com/SriVemulapalli22/18624_Project_16-bit-FPU.git,2023-05-05 15:04:18+00:00,,0,SriVemulapalli22/18624_Project_16-bit-FPU,636753782,SystemVerilog,18624_Project_16-bit-FPU,874,0,2023-05-06 03:19:58+00:00,[],https://api.github.com/licenses/apache-2.0
12830,https://github.com/davidlacayo12/Pitfall.git,2023-05-06 00:41:24+00:00,,0,davidlacayo12/Pitfall,636911631,SystemVerilog,Pitfall,2797,0,2023-05-07 01:51:33+00:00,[],https://api.github.com/licenses/mit
12831,https://github.com/gabriela4321/aluralivros.git,2023-05-18 12:48:00+00:00,,0,gabriela4321/aluralivros,642381203,SystemVerilog,aluralivros,787,0,2023-05-24 17:17:15+00:00,[],
12832,https://github.com/dakshinatharindu/rv32i-single-cycle-uvm.git,2023-04-27 18:03:56+00:00,An UVM test for RISC-V RV32I single-cycle core usign UVM.,0,dakshinatharindu/rv32i-single-cycle-uvm,633536118,SystemVerilog,rv32i-single-cycle-uvm,20,0,2023-04-27 19:34:24+00:00,[],
12833,https://github.com/yttnn/sv_book.git,2023-04-27 08:38:38+00:00,,0,yttnn/sv_book,633317572,SystemVerilog,sv_book,14,0,2023-05-05 09:29:46+00:00,[],
12834,https://github.com/adinderosier/DE1-SOC-SDES.git,2023-04-21 23:28:21+00:00,,0,adinderosier/DE1-SOC-SDES,631096166,SystemVerilog,DE1-SOC-SDES,46,0,2023-04-22 00:17:22+00:00,[],https://api.github.com/licenses/mit
12835,https://github.com/cevero/ftm.git,2023-05-15 03:14:08+00:00,Cevero's Fault Tolerance Module,0,cevero/ftm,640744423,SystemVerilog,ftm,6,0,2023-05-15 04:46:36+00:00,[],
12836,https://github.com/mohamedmorsi22/MIPS.git,2023-05-25 13:49:26+00:00,systemVerilog implementation of MIPS single cycle processor,0,mohamedmorsi22/MIPS,645367849,SystemVerilog,MIPS,7,0,2023-05-25 13:54:47+00:00,[],
12837,https://github.com/yiyanghe0/p6-microprocessor.git,2023-06-15 01:33:06+00:00,,0,yiyanghe0/p6-microprocessor,653896508,SystemVerilog,p6-microprocessor,254,0,2023-06-15 01:44:16+00:00,[],
12838,https://github.com/axyrai/ALU_sv.git,2023-06-15 05:55:52+00:00,,0,axyrai/ALU_sv,653966464,SystemVerilog,ALU_sv,56,0,2023-06-15 05:58:03+00:00,[],
12839,https://github.com/raymond-chii/nachi.git,2023-06-14 02:45:35+00:00,Me and Arav Sharma's ECE-251 final project: An 8 bit computer,0,raymond-chii/nachi,653418428,SystemVerilog,nachi,2186,0,2023-06-14 02:50:43+00:00,[],https://api.github.com/licenses/mit
12840,https://github.com/z4chh/FPGA_Slot_Machine.git,2023-06-09 03:15:40+00:00,"A slot machine created in System Verilog. It was built, simulated, synthesized, and implemented in Vivado, for use on the Xilinx Basys 3 board.",0,z4chh/FPGA_Slot_Machine,651340990,SystemVerilog,FPGA_Slot_Machine,13,0,2023-06-09 03:29:39+00:00,"['digitaldesign', 'fpga-board', 'fpga-programming', 'systemverilog', 'systemverilog-hdl', 'vivado']",
12841,https://github.com/Usman8511/State_Machine.git,2023-06-13 15:58:16+00:00,"State Machine Verilog code for Operating Elevator, have two floors : 1. Ground (S0 or S1) 2. First (S0 or S1) the elevator cannot open when moving, it will only open if it is on some floor.  ",0,Usman8511/State_Machine,653211910,SystemVerilog,State_Machine,3,0,2023-06-13 16:10:25+00:00,[],
12842,https://github.com/bbnoir/2D-convolution.git,2023-06-18 10:22:37+00:00,hardware 2D convolution,0,bbnoir/2D-convolution,655243972,SystemVerilog,2D-convolution,15,0,2023-06-22 01:28:33+00:00,[],
12843,https://github.com/Masooma82/Full_adder.git,2023-06-17 13:04:46+00:00,It contains design code and test bench (in system verilog) of a full adder,0,Masooma82/Full_adder,654959779,SystemVerilog,Full_adder,0,0,2023-06-17 13:05:39+00:00,[],
12844,https://github.com/Carlos12001/ARM_SingleCycle_SoC.git,2023-06-12 00:43:54+00:00,,0,Carlos12001/ARM_SingleCycle_SoC,652383530,SystemVerilog,ARM_SingleCycle_SoC,7,0,2023-06-12 00:44:03+00:00,[],
12845,https://github.com/Jetoson/pipline_adder.git,2023-05-29 12:00:48+00:00,,0,Jetoson/pipline_adder,646814987,SystemVerilog,pipline_adder,12,0,2023-05-29 12:01:31+00:00,[],
12846,https://github.com/zymason/austin-ooo.git,2023-05-28 03:27:49+00:00,,0,zymason/austin-ooo,646331118,SystemVerilog,austin-ooo,124,0,2023-05-28 03:31:16+00:00,[],
12847,https://github.com/icuic/UnarySim.git,2023-06-06 14:00:23+00:00,,0,icuic/UnarySim,650176114,SystemVerilog,UnarySim,190,0,2023-06-06 14:05:26+00:00,[],https://api.github.com/licenses/mit
12848,https://github.com/AreebHabib/verilog-code.git,2023-05-31 08:51:10+00:00,,0,AreebHabib/verilog-code,647658585,SystemVerilog,verilog-code,12,0,2023-06-04 06:36:58+00:00,[],
12849,https://github.com/DancauRares-Andrei/ImplementareSimulatorRISC-V.git,2023-06-18 15:51:21+00:00,O simplă implementare a unui procesor RISC-V.,0,DancauRares-Andrei/ImplementareSimulatorRISC-V,655340563,SystemVerilog,ImplementareSimulatorRISC-V,52,0,2023-06-20 19:32:05+00:00,[],
12850,https://github.com/Shan-yi-shuai/pipeline-cpu.git,2023-06-23 06:16:42+00:00,,0,Shan-yi-shuai/pipeline-cpu,657471427,SystemVerilog,pipeline-cpu,37,0,2024-03-19 03:21:07+00:00,[],
12851,https://github.com/PRAGATI-0102/Full-Adder-using-SV-Day-053-.git,2023-06-01 14:17:17+00:00,"Using the power and flexibility of SystemVerilog, I designed a module called ""full_adder"" that takes three input bits (A, B, and Cin) and generates the sum (Sum) and carry (Cout) outputs. The full adder combines the individual bits and considers the carry input to accurately compute the sum.",0,PRAGATI-0102/Full-Adder-using-SV-Day-053-,648242933,SystemVerilog,Full-Adder-using-SV-Day-053-,50,0,2023-06-01 14:18:15+00:00,[],
12852,https://github.com/VigneshB19/spi_protocol.git,2023-06-05 14:44:07+00:00,,0,VigneshB19/spi_protocol,649747049,SystemVerilog,spi_protocol,5,0,2023-06-05 14:44:55+00:00,[],
12853,https://github.com/VarunCypherV/VarunCypherV.git,2023-06-11 03:45:31+00:00,,0,VarunCypherV/VarunCypherV,652089288,SystemVerilog,VarunCypherV,84,0,2023-06-11 04:25:31+00:00,[],
12854,https://github.com/MohitKumarS/System-Verilog.git,2023-06-02 15:42:12+00:00,,0,MohitKumarS/System-Verilog,648704135,SystemVerilog,System-Verilog,167,0,2023-06-02 15:49:16+00:00,[],
12855,https://github.com/harsha-challagulla/Win_23_I2C.git,2023-05-31 22:09:51+00:00,A Simple I2C based Project.,0,harsha-challagulla/Win_23_I2C,647952055,SystemVerilog,Win_23_I2C,27,0,2023-05-31 23:05:36+00:00,[],
12856,https://github.com/rabiut/Hardware-Implementation-of-Image-Decompression.git,2023-05-09 15:10:31+00:00,"In this project, a custom digital circuit was designed for image decompression using the McMaster Image Compression revision 16 (.mic16) specification on an Altera DE2 FPGA development board.",0,rabiut/Hardware-Implementation-of-Image-Decompression,638540105,SystemVerilog,Hardware-Implementation-of-Image-Decompression,1827,0,2023-05-09 15:19:24+00:00,[],
12857,https://github.com/MrDoomsday/Timer.git,2023-05-14 19:03:21+00:00,This timer was used to count time intervals in conjunction with the PicoRV32 processor in one of my works.,0,MrDoomsday/Timer,640644148,SystemVerilog,Timer,5,0,2023-05-21 15:36:33+00:00,[],
12858,https://github.com/roshanprusty/GRE.git,2023-05-14 10:16:49+00:00,,0,roshanprusty/GRE,640505802,SystemVerilog,GRE,468781,0,2023-06-25 14:02:22+00:00,[],
12859,https://github.com/SeboThaGawd/SPI_SystemVerilog.git,2023-05-16 07:02:29+00:00,"SystemVerilog implementation of the SPI protocol, done to learn both concepts.",0,SeboThaGawd/SPI_SystemVerilog,641288775,SystemVerilog,SPI_SystemVerilog,4,0,2023-06-30 23:22:29+00:00,[],
12860,https://github.com/deepblue597/hw_1_uart.git,2023-05-10 18:09:15+00:00,Implementation of Sender-Receiver System in Verilog using UART Protocol and Display on Four 7-Segment LED Display,0,deepblue597/hw_1_uart,639081527,SystemVerilog,hw_1_uart,2426,0,2023-05-10 18:12:07+00:00,[],
12861,https://github.com/dnmanalo/carrd-vector-coprocessor-dimple.git,2023-05-24 03:45:50+00:00,A copy of the codes I wrote for CARRD Vector Coprocessor Thesis Project. ,0,dnmanalo/carrd-vector-coprocessor-dimple,644688391,SystemVerilog,carrd-vector-coprocessor-dimple,14,0,2023-05-24 03:48:50+00:00,[],
12862,https://github.com/bushbecky/InferenceInFPGA.git,2023-05-08 21:01:03+00:00,,0,bushbecky/InferenceInFPGA,637988586,SystemVerilog,InferenceInFPGA,893,0,2023-05-08 21:01:20+00:00,[],
12863,https://github.com/MohammadFarrahi/DLD-projects.git,2023-05-08 11:21:27+00:00,"This repository, contains computer assignments of Digital Logic Design Course- Fall 2020 - UT",0,MohammadFarrahi/DLD-projects,637769107,SystemVerilog,DLD-projects,2289,0,2023-05-08 11:23:48+00:00,[],
12864,https://github.com/TakeoutSpace18/SimpleProcessor.git,2023-05-05 14:59:24+00:00,"Final project on ""Digital design"" discipline, made in 2 semester at NSU FIT.",0,TakeoutSpace18/SimpleProcessor,636751831,SystemVerilog,SimpleProcessor,11,0,2023-06-06 16:58:40+00:00,[],
12865,https://github.com/yadavashi/ashish_practice.git,2023-05-09 07:38:42+00:00,,0,yadavashi/ashish_practice,638153232,SystemVerilog,ashish_practice,2,0,2023-05-09 07:43:40+00:00,[],
12866,https://github.com/pranjal-mittal0/UVM.git,2023-05-05 06:45:33+00:00,,0,pranjal-mittal0/UVM,636572182,SystemVerilog,UVM,665,0,2023-05-12 05:36:45+00:00,[],
12867,https://github.com/keterbasary1/APB-watchdog.git,2023-05-10 06:56:26+00:00,,0,keterbasary1/APB-watchdog,638813673,SystemVerilog,APB-watchdog,29,0,2023-05-11 09:18:47+00:00,[],
12868,https://github.com/varunven/ee371.git,2023-05-09 18:37:40+00:00,Homework and projects for EE/CSE 371 at UW- Digital Circuits,0,varunven/ee371,638621857,SystemVerilog,ee371,58086,0,2023-05-09 19:04:10+00:00,[],
12869,https://github.com/j1ah0ng/turtle.git,2023-05-24 23:06:22+00:00,,0,j1ah0ng/turtle,645094033,SystemVerilog,turtle,162,0,2023-06-01 02:21:04+00:00,[],
12870,https://github.com/sid-anand98/32x8-Dual-Port-RAM-in-SystemVerilog.git,2023-06-15 07:11:58+00:00,,0,sid-anand98/32x8-Dual-Port-RAM-in-SystemVerilog,653993793,SystemVerilog,32x8-Dual-Port-RAM-in-SystemVerilog,22,0,2023-06-18 10:31:34+00:00,[],
12871,https://github.com/omarv10/UART-verification-circuit.git,2023-06-17 03:29:00+00:00,,0,omarv10/UART-verification-circuit,654816745,SystemVerilog,UART-verification-circuit,8,0,2023-06-17 03:36:01+00:00,[],
12872,https://github.com/Anushka1809/Vending_Machine.git,2023-06-03 18:48:47+00:00,"Build a vending machine which accepts only two coins, 5 rupee and 10 rupee. Whenever total of coins equal to 15 rupee, then a can of coke will be given. It will not return any residual coin, if total of rupees exceeds 15. ",0,Anushka1809/Vending_Machine,649092319,SystemVerilog,Vending_Machine,79,0,2023-06-03 18:51:45+00:00,[],
12873,https://github.com/RitwikRishabh/Spiking-Neural-Network-Accelerator.git,2023-04-18 02:20:04+00:00,,0,RitwikRishabh/Spiking-Neural-Network-Accelerator,629284504,SystemVerilog,Spiking-Neural-Network-Accelerator,2834,0,2023-04-18 02:23:24+00:00,[],
12874,https://github.com/Felastian/Lab_Sistemas_Digitales_2023.git,2023-04-27 01:32:57+00:00,Codigos Vivado,0,Felastian/Lab_Sistemas_Digitales_2023,633193387,SystemVerilog,Lab_Sistemas_Digitales_2023,8,0,2023-04-27 01:34:48+00:00,[],
12875,https://github.com/CyanoKobalamyne/msdsl-examples.git,2023-04-21 22:33:14+00:00,,0,CyanoKobalamyne/msdsl-examples,631086509,SystemVerilog,msdsl-examples,72,0,2023-04-21 22:34:02+00:00,[],
12876,https://github.com/Yonell/AGH-Techniki-Cyfrowe-2023.git,2023-04-22 17:13:09+00:00,,0,Yonell/AGH-Techniki-Cyfrowe-2023,631328930,SystemVerilog,AGH-Techniki-Cyfrowe-2023,4910,0,2023-06-08 14:14:27+00:00,[],
12877,https://github.com/stavya3/cayde-2.git,2023-04-29 06:54:34+00:00,,0,stavya3/cayde-2,634137579,SystemVerilog,cayde-2,896,0,2023-04-29 07:12:14+00:00,[],
12878,https://github.com/mvsharikrishna/System-Verilog-Basics.git,2023-06-23 09:43:01+00:00,,0,mvsharikrishna/System-Verilog-Basics,657542738,SystemVerilog,System-Verilog-Basics,22,0,2023-07-05 06:33:42+00:00,[],
12879,https://github.com/LouisTheLuis/6.2050-FA2022.git,2023-06-14 13:58:13+00:00,,0,LouisTheLuis/6.2050-FA2022,653673962,SystemVerilog,6.2050-FA2022,1171,0,2023-06-14 14:00:24+00:00,[],
12880,https://github.com/Shivaprasadm02/uvm_extra.git,2023-04-26 07:06:39+00:00,uvm practice codes,0,Shivaprasadm02/uvm_extra,632806257,SystemVerilog,uvm_extra,26,0,2023-04-26 07:15:25+00:00,[],
12881,https://github.com/dragos-pascu/ahb-arbiter.git,2023-05-14 15:41:02+00:00,,0,dragos-pascu/ahb-arbiter,640590452,SystemVerilog,ahb-arbiter,17375,0,2024-02-08 11:57:09+00:00,[],
12882,https://github.com/jeygen/verilog.git,2023-05-03 02:35:02+00:00,A place to practice verilog,0,jeygen/verilog,635585989,SystemVerilog,verilog,1726,0,2023-07-03 16:07:41+00:00,[],
12883,https://github.com/Xilinx/RecoNIC.git,2023-08-09 13:26:42+00:00,RecoNIC is a software/hardware shell used to enable network-attached processing within an RDMA-featured SmartNIC for scale-out computing.,9,Xilinx/RecoNIC,676557566,SystemVerilog,RecoNIC,1344,61,2024-04-03 15:58:33+00:00,[],https://api.github.com/licenses/mit
12884,https://github.com/rprimas/ascon-verilog.git,2023-08-29 17:01:10+00:00,Verilog Hardware Design of Ascon v1.2,4,rprimas/ascon-verilog,684695406,SystemVerilog,ascon-verilog,278,17,2024-03-13 14:48:55+00:00,"['authenticated-encryption', 'hardware-designs', 'lightweight-cryptography', 'symmetric-key-cryptography']",https://api.github.com/licenses/cc0-1.0
12885,https://github.com/LainChip/complex_loong_cpu.git,2023-08-10 15:02:23+00:00,"complex version of Lain Core, loongarch32r cpu core. THIS IS POWER!!",1,LainChip/complex_loong_cpu,677025126,SystemVerilog,complex_loong_cpu,38616,15,2024-03-31 08:54:40+00:00,[],https://api.github.com/licenses/gpl-3.0
12886,https://github.com/nathaliafab/Projeto_IH_RISC-V.git,2023-07-06 17:49:18+00:00,Arquivos base para o projeto da disciplina Infraestrutura de Hardware (IF674) no CIn-UFPE.,25,nathaliafab/Projeto_IH_RISC-V,663167309,SystemVerilog,Projeto_IH_RISC-V,24202,13,2023-11-01 17:08:49+00:00,"['processor', 'risc-v', 'systemverilog', 'ufpe']",https://api.github.com/licenses/mit
12887,https://github.com/AliLRS/RISC-V_Microprogrammed.git,2023-06-24 15:36:53+00:00,,1,AliLRS/RISC-V_Microprogrammed,658044322,SystemVerilog,RISC-V_Microprogrammed,481,13,2024-03-29 12:37:18+00:00,"['computer-architecture', 'microarchitecture', 'microprogrammed', 'microprogrammed-control-unit', 'risc-v', 'riscv']",
12888,https://github.com/Artityagi123456789/-100dasofSystemVerilog.git,2023-08-27 10:08:16+00:00,System Verilog using Functional Verification,0,Artityagi123456789/-100dasofSystemVerilog,683665368,SystemVerilog,-100dasofSystemVerilog,7161,9,2024-02-04 00:09:36+00:00,"['arrays-and-strings', 'associative-array', 'constraints', 'mailbox', 'oop-concepts', 'randomization', 'systemverilog', 'systemverilog-test-bench']",
12889,https://github.com/pezy-computing/pztb-core.git,2023-07-31 07:07:13+00:00,,0,pezy-computing/pztb-core,672788828,SystemVerilog,pztb-core,219,7,2024-03-05 15:36:10+00:00,[],https://api.github.com/licenses/apache-2.0
12890,https://github.com/LainChip/simple_loong_cpu.git,2023-08-17 05:32:33+00:00,"simple version of Lain Core, loongarch32r cpu core",0,LainChip/simple_loong_cpu,679555589,SystemVerilog,simple_loong_cpu,121413,7,2023-11-17 04:34:01+00:00,[],https://api.github.com/licenses/gpl-3.0
12891,https://github.com/Ghonimo/Pre_Silicon-AHB-to_APB-Verification.git,2023-08-03 20:07:32+00:00,"Comprehensive verification suite for the AHB2APB Bridge design, featuring SystemVerilog and UVM-based methodologies. 🌉🚀",2,Ghonimo/Pre_Silicon-AHB-to_APB-Verification,674381490,SystemVerilog,Pre_Silicon-AHB-to_APB-Verification,14108,7,2024-03-24 00:22:06+00:00,"['digital-design', 'questasim', 'semiconductor', 'simulation', 'systemverilog', 'testbench', 'uvm', 'uvm-verification', 'verification', 'verification-methodologies', 'vip', 'ahb2apb']",https://api.github.com/licenses/mit
12892,https://github.com/microsoft/cheriot-safe.git,2023-07-07 17:29:26+00:00,Repo for CHERI development system,4,microsoft/cheriot-safe,663606079,SystemVerilog,cheriot-safe,834,6,2024-04-01 09:26:31+00:00,[],https://api.github.com/licenses/apache-2.0
12893,https://github.com/asimkhan8107/UVM-30DAYS.git,2023-07-04 05:05:36+00:00,30 days of UVM to cover all-most all concept of UVM ,1,asimkhan8107/UVM-30DAYS,661973616,SystemVerilog,UVM-30DAYS,13606,6,2024-03-24 15:53:40+00:00,[],
12894,https://github.com/renfei147/nscscc2023.git,2023-07-13 15:39:02+00:00,,1,renfei147/nscscc2023,666051607,SystemVerilog,nscscc2023,7846,5,2024-03-21 13:33:03+00:00,[],
12895,https://github.com/hewertonfl/ARM-SingleCycle-Instructions-Implementation.git,2023-07-09 14:39:28+00:00,,0,hewertonfl/ARM-SingleCycle-Instructions-Implementation,664297240,SystemVerilog,ARM-SingleCycle-Instructions-Implementation,2837,5,2024-03-27 13:22:24+00:00,[],
12896,https://github.com/janomach/the-hardisc.git,2023-08-26 11:14:43+00:00,Hardened RISC-V core,1,janomach/the-hardisc,683374608,SystemVerilog,the-hardisc,830,5,2024-02-04 19:00:12+00:00,"['automotive', 'core', 'cpu', 'error-correcting-codes', 'fpga', 'hardware', 'microcontroller', 'reliability', 'risc-v', 'safety', 'space', 'verilog']",https://api.github.com/licenses/apache-2.0
12897,https://github.com/Youssefmdany/Design-and-UVM-TB-of-RISC-V-Microprocessor.git,2023-08-24 23:09:36+00:00,Design and UVM-TB of RISC -V Microprocessor,0,Youssefmdany/Design-and-UVM-TB-of-RISC-V-Microprocessor,682782103,SystemVerilog,Design-and-UVM-TB-of-RISC-V-Microprocessor,29,5,2023-12-23 14:51:20+00:00,[],
12898,https://github.com/asimkhan8107/SystemVerilog_30DAYS.git,2023-07-04 03:10:41+00:00,30 days of System Verilog to finish complete System verilog,1,asimkhan8107/SystemVerilog_30DAYS,661945448,SystemVerilog,SystemVerilog_30DAYS,1793,5,2024-03-24 15:53:43+00:00,[],
12899,https://github.com/hamza-akhtar-dev/pak-rv-core.git,2023-08-09 16:38:54+00:00,,1,hamza-akhtar-dev/pak-rv-core,676633234,SystemVerilog,pak-rv-core,1179,5,2023-12-28 11:51:36+00:00,[],
12900,https://github.com/tom-urkin/AMBA.git,2023-07-20 08:15:23+00:00,"AHB-lite, AHB-APB bridge and extended APB side architecture in SystemVerilog",0,tom-urkin/AMBA,668616639,SystemVerilog,AMBA,7426,5,2024-01-12 12:03:09+00:00,[],
12901,https://github.com/scalable-arch/AIDCLite.git,2023-07-05 02:45:47+00:00,,1,scalable-arch/AIDCLite,662382178,SystemVerilog,AIDCLite,5803,3,2023-07-27 08:26:08+00:00,[],https://api.github.com/licenses/cern-ohl-p-2.0
12902,https://github.com/jpdoane/nesfpga.git,2023-08-16 02:00:42+00:00,Mario on an FPGA,2,jpdoane/nesfpga,679051393,SystemVerilog,nesfpga,18438,3,2024-02-27 03:57:48+00:00,[],
12903,https://github.com/PRADEEPCHANGAL/APB-Protocol-Verification-using-UVM.git,2023-08-02 16:31:07+00:00,APB verification using UVM ,3,PRADEEPCHANGAL/APB-Protocol-Verification-using-UVM,673882913,SystemVerilog,APB-Protocol-Verification-using-UVM,286,3,2024-02-11 04:39:36+00:00,"['apb', 'systemverilog', 'systemverilog-test-bench', 'verification', 'apb-systemverilog', 'apb-verification', 'apb-verification-using-uvm']",
12904,https://github.com/jpdoane/2c02.git,2023-07-04 23:38:37+00:00,HDL clone of NES picutre processing unit (PPU),1,jpdoane/2c02,662342615,SystemVerilog,2c02,126,3,2024-02-27 03:58:26+00:00,[],
12905,https://github.com/ghz-ws/fpga_sv.git,2023-07-17 00:20:18+00:00,SystemVerilog Sample codes,0,ghz-ws/fpga_sv,667194347,SystemVerilog,fpga_sv,13,3,2024-02-13 01:49:52+00:00,[],https://api.github.com/licenses/mit
12906,https://github.com/mfkiwl/Open-HiPU200.git,2023-08-17 16:50:05+00:00,"HiPU200 open-source version is a DNN accelerator, using RISC-V instruction set and customized vector/matrix extension.",2,mfkiwl/Open-HiPU200,679803202,,Open-HiPU200,179,3,2024-04-11 07:53:23+00:00,[],
12907,https://github.com/planvtech/ace.git,2023-06-28 12:47:38+00:00,,3,planvtech/ace,659731865,SystemVerilog,ace,103,3,2024-03-26 11:28:51+00:00,[],
12908,https://github.com/oscc-ip/vga.git,2023-08-08 02:22:49+00:00,An AXI4-based VGA Controller,0,oscc-ip/vga,675905891,SystemVerilog,vga,381,3,2023-12-25 13:20:49+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
12909,https://github.com/Youssefmdany/Design-and-UVM-Verification-of-an-ALU.git,2023-07-06 20:38:16+00:00,Design and UVM Verification of an ALU,0,Youssefmdany/Design-and-UVM-Verification-of-an-ALU,663223071,SystemVerilog,Design-and-UVM-Verification-of-an-ALU,2954,3,2024-03-09 19:48:32+00:00,[],
12910,https://github.com/thesourcerer8/nand_controller.git,2023-08-01 17:17:37+00:00,"NAND Controller, targeting ONFI and non-compliant flash",0,thesourcerer8/nand_controller,673461788,SystemVerilog,nand_controller,506,3,2024-01-08 21:21:27+00:00,[],https://api.github.com/licenses/lgpl-2.1
12911,https://github.com/shapoco/accelbrot.git,2023-07-24 10:55:29+00:00,"A high-speed, high-precision Mandelbrot set accelerator for FPGAs",0,shapoco/accelbrot,670125792,SystemVerilog,accelbrot,1221,3,2024-01-07 06:05:37+00:00,[],
12912,https://github.com/kalai-rajan/Design-Verification-APB-RAM.git,2023-08-15 07:15:31+00:00,,0,kalai-rajan/Design-Verification-APB-RAM,678706779,SystemVerilog,Design-Verification-APB-RAM,9,3,2024-01-30 16:20:21+00:00,[],
12913,https://github.com/Kholoud-Ebrahim/Synchronous_FIFO.git,2023-08-14 00:53:32+00:00,"A simple synch FIFO designed in Verilog and verified in UVM methodology including scoreboards, coverage collector, also code coverage and functional coverage reports etc.",1,Kholoud-Ebrahim/Synchronous_FIFO,678187113,SystemVerilog,Synchronous_FIFO,7463,3,2024-01-26 02:07:55+00:00,[],
12914,https://github.com/taichi-ishitani/rice.git,2023-07-03 13:09:24+00:00,,2,taichi-ishitani/rice,661703799,SystemVerilog,rice,280,3,2024-01-08 01:54:29+00:00,"['risc-v', 'riscv', 'systemverilog', 'uvm']",https://api.github.com/licenses/apache-2.0
12915,https://github.com/Karthikeyan564/uEyeriss.git,2023-08-07 02:33:54+00:00,,0,Karthikeyan564/uEyeriss,675474781,SystemVerilog,uEyeriss,1989,2,2024-02-23 03:50:53+00:00,[],
12916,https://github.com/MuhammadAmmarMalik/CSR-Implemented_5StagPipelinedProcessor.git,2023-08-15 15:08:58+00:00,,0,MuhammadAmmarMalik/CSR-Implemented_5StagPipelinedProcessor,678866953,SystemVerilog,CSR-Implemented_5StagPipelinedProcessor,22,2,2023-09-06 17:26:30+00:00,[],
12917,https://github.com/pulp-platform/axi_rt.git,2023-07-07 12:22:35+00:00,,4,pulp-platform/axi_rt,663493155,SystemVerilog,axi_rt,115,2,2024-03-18 02:35:36+00:00,[],
12918,https://github.com/uiuc-sigarch/sigarch-rtl-project-template.git,2023-07-22 06:54:52+00:00,SIGARCH RTL Project Template,4,uiuc-sigarch/sigarch-rtl-project-template,669403106,SystemVerilog,sigarch-rtl-project-template,15,2,2023-10-06 06:19:03+00:00,[],
12919,https://github.com/MayaLasheen/SVA-ALU-Verification.git,2023-08-20 19:35:04+00:00,,0,MayaLasheen/SVA-ALU-Verification,680907707,SystemVerilog,SVA-ALU-Verification,29,2,2024-01-15 12:58:23+00:00,[],https://api.github.com/licenses/mit
12920,https://github.com/pulp-platform/neureka.git,2023-08-11 13:37:43+00:00,,1,pulp-platform/neureka,677402368,SystemVerilog,neureka,177,2,2024-03-11 19:19:00+00:00,[],
12921,https://github.com/meeeeet/UART-DesignAndVerification.git,2023-07-12 15:40:22+00:00,,0,meeeeet/UART-DesignAndVerification,665615886,SystemVerilog,UART-DesignAndVerification,81,2,2024-03-05 03:59:46+00:00,"['rtl-design-and-verification', 'serial-communication', 'systemverilog', 'uart', 'uart-verilog']",https://api.github.com/licenses/gpl-3.0
12922,https://github.com/mahdimoeini8102/DigitalSystems_IEEE754-2019.git,2023-08-15 17:16:28+00:00,"This is the last (6th) project of the Digital System course at the university. In this project, I have implemented a complete multiplier base on IEEE 754-2019 using SystemVerilog HDL(Hardware Description Language) and then I have synthesized them. ",0,mahdimoeini8102/DigitalSystems_IEEE754-2019,678914642,SystemVerilog,DigitalSystems_IEEE754-2019,21609,2,2023-11-08 04:54:25+00:00,[],
12923,https://github.com/DhalavaiN/slow-and-fast-division-algorithm.git,2023-06-28 15:20:04+00:00,,0,DhalavaiN/slow-and-fast-division-algorithm,659796488,SystemVerilog,slow-and-fast-division-algorithm,12777,2,2024-01-23 05:49:49+00:00,[],
12924,https://github.com/UCLA-SEAL/HFuzz.git,2023-08-25 16:27:43+00:00,FSE 2023 Leveraging Hardware Probes and Optimizations for Accelerating Fuzz Testing of Heterogeneous Applications,0,UCLA-SEAL/HFuzz,683115090,SystemVerilog,HFuzz,39797,2,2024-03-28 08:19:14+00:00,[],https://api.github.com/licenses/bsd-3-clause
12925,https://github.com/zouaghista/Asynchronous_Fifo_Testbench.git,2023-07-29 15:33:12+00:00,A test bench for asynchronous fifos,0,zouaghista/Asynchronous_Fifo_Testbench,672296469,SystemVerilog,Asynchronous_Fifo_Testbench,9,2,2024-01-18 07:27:27+00:00,"['integrated-circuits', 'verification', 'verilog-project']",
12926,https://github.com/snevindsouza/8-Bit-Even-up-Counter-SystemVerilog.git,2023-08-08 12:38:04+00:00,"Counter that counts even numbers is created using a chain of eight D flip-flops. An OOP-based test bench and a package is developed to verify the counter's functionality as a black box and compare its output against the expected even number sequence. The design was implemented in two approaches i.e, asynchronous and synchronous structures.",0,snevindsouza/8-Bit-Even-up-Counter-SystemVerilog,676100787,SystemVerilog,8-Bit-Even-up-Counter-SystemVerilog,18,2,2023-10-21 11:24:17+00:00,"['fpga', 'systemverilog', 'verilog', 'vhdl']",https://api.github.com/licenses/mit
12927,https://github.com/Youssefmdany/Design-and-UVM-Verification-of-The-SPI-Master_Controller-.git,2023-08-06 01:11:04+00:00,Design and UVM Verification of The SPI Master Controller ,0,Youssefmdany/Design-and-UVM-Verification-of-The-SPI-Master_Controller-,675155117,SystemVerilog,Design-and-UVM-Verification-of-The-SPI-Master_Controller-,15191,2,2023-12-08 12:14:25+00:00,[],
12928,https://github.com/ateeb02/RISC-V-C-Extension-Module.git,2023-07-03 19:52:34+00:00,,0,ateeb02/RISC-V-C-Extension-Module,661849579,SystemVerilog,RISC-V-C-Extension-Module,8,2,2023-07-11 10:40:19+00:00,[],
12929,https://github.com/Daniyal-Tahsildar/FIFO_TB_UVM.git,2023-08-12 14:23:09+00:00,Implementation of a Synchronous FIFO along with a Testbench developed using UVM,0,Daniyal-Tahsildar/FIFO_TB_UVM,677753113,SystemVerilog,FIFO_TB_UVM,242,2,2023-12-05 08:32:30+00:00,[],
12930,https://github.com/AhmedOsama2000/AES_128.git,2023-08-30 16:31:23+00:00,Advanced Encryption Standard (AES-128bits),0,AhmedOsama2000/AES_128,685158914,SystemVerilog,AES_128,321,2,2024-03-23 06:13:52+00:00,[],
12931,https://github.com/jaketobrien/Sigma-Delta-Modulator.git,2023-08-01 00:24:18+00:00,Sigma-Delta Modulator designed using Verilog,0,jaketobrien/Sigma-Delta-Modulator,673131615,SystemVerilog,Sigma-Delta-Modulator,4,1,2023-08-01 00:34:35+00:00,[],https://api.github.com/licenses/mit
12932,https://github.com/sivaram-07/Async-FIFO.git,2023-08-29 15:32:38+00:00,,0,sivaram-07/Async-FIFO,684657231,SystemVerilog,Async-FIFO,26,1,2023-09-12 06:46:43+00:00,[],
12933,https://github.com/Swapnil-Jain1121/System_Verilog.git,2023-08-17 12:42:34+00:00,,0,Swapnil-Jain1121/System_Verilog,679706191,SystemVerilog,System_Verilog,1820,1,2023-11-09 06:07:16+00:00,[],
12934,https://github.com/VLSIProjects/Async_fifo.git,2023-07-12 13:56:34+00:00,,0,VLSIProjects/Async_fifo,665572627,SystemVerilog,Async_fifo,24,1,2023-07-15 12:39:01+00:00,[],
12935,https://github.com/yanateja/axis_maxpool.git,2023-07-04 11:42:55+00:00,packaged maxpool design,0,yanateja/axis_maxpool,662115302,SystemVerilog,axis_maxpool,27,1,2023-12-02 06:55:33+00:00,[],
12936,https://github.com/oga-engineering/codma_uvm.git,2023-08-14 12:57:36+00:00,"UVM style testbench for the CODMA project, used to strengthen my knowledge and skills in UVM. This project is a work in progress.",0,oga-engineering/codma_uvm,678393078,SystemVerilog,codma_uvm,29,1,2023-12-03 09:40:22+00:00,[],
12937,https://github.com/gouthampalem2/32-bit-Single-Precision-Floating-Point-Multiplier.git,2023-07-09 17:39:52+00:00,"System Verilog Project with Design and Verification Using Assertions, Coverage and Randomization",0,gouthampalem2/32-bit-Single-Precision-Floating-Point-Multiplier,664347386,SystemVerilog,32-bit-Single-Precision-Floating-Point-Multiplier,3476,1,2024-02-14 14:29:18+00:00,[],
12938,https://github.com/richardyilin/Superscalar-Processor-with-Tomasulo-Algorithm.git,2023-06-30 03:32:54+00:00,,0,richardyilin/Superscalar-Processor-with-Tomasulo-Algorithm,660452151,SystemVerilog,Superscalar-Processor-with-Tomasulo-Algorithm,43,1,2024-03-21 23:48:50+00:00,[],
12939,https://github.com/yurinvv/cross_bar.git,2023-07-28 14:30:32+00:00,,0,yurinvv/cross_bar,671954000,SystemVerilog,cross_bar,846,1,2023-10-17 13:28:23+00:00,[],
12940,https://github.com/MuhammadAmmarMalik/RV32I-5-Stage-Single-Cycle-Processor.git,2023-08-06 14:50:42+00:00,RV32I Single cycle 5 Stage processor that support Six types of instruction excluding CSR's,0,MuhammadAmmarMalik/RV32I-5-Stage-Single-Cycle-Processor,675324815,SystemVerilog,RV32I-5-Stage-Single-Cycle-Processor,12,1,2023-09-06 17:26:49+00:00,[],
12941,https://github.com/victor-welter/EC6-PVLSI-SystemVerilog.git,2023-08-14 23:37:23+00:00,"Algoritmos de descrição de hardware feitos em SystemVerilog durante as aulas de PROJETO VLSI, do 6° semestre do curso de Engenharia de Computação - SETREM.",0,victor-welter/EC6-PVLSI-SystemVerilog,678596900,SystemVerilog,EC6-PVLSI-SystemVerilog,15362,1,2023-10-13 14:40:29+00:00,"['hdl', 'systemverilog']",
12942,https://github.com/kalai-rajan/Design-and-Verification-of-UART-Protocol.git,2023-06-24 17:07:38+00:00,,0,kalai-rajan/Design-and-Verification-of-UART-Protocol,658069654,SystemVerilog,Design-and-Verification-of-UART-Protocol,39,1,2023-07-07 09:45:38+00:00,[],
12943,https://github.com/vyom-elan/UVM.git,2023-07-04 14:34:20+00:00,,0,vyom-elan/UVM,662184383,SystemVerilog,UVM,49,1,2023-07-09 04:54:04+00:00,[],https://api.github.com/licenses/mit
12944,https://github.com/PRAGATI-0102/Edge-Detector-using-SV-Day-077-.git,2023-06-25 18:43:53+00:00,The purpose of this circuit is to identify and generate single-cycle pulses when the incoming input signal experiences a rising or falling edge.,0,PRAGATI-0102/Edge-Detector-using-SV-Day-077-,658440499,SystemVerilog,Edge-Detector-using-SV-Day-077-,28,1,2023-06-29 07:18:27+00:00,[],
12945,https://github.com/subhamball/Verilog_systemVerilog.git,2023-08-18 17:47:17+00:00,,0,subhamball/Verilog_systemVerilog,680245451,SystemVerilog,Verilog_systemVerilog,33,1,2023-11-21 14:25:02+00:00,[],
12946,https://github.com/OpenXiangShan/Penglai-SagittaVerificationPlatform.git,2023-08-17 07:24:40+00:00,Sagitta_verification_platform from Penglai,3,OpenXiangShan/Penglai-SagittaVerificationPlatform,679592906,SystemVerilog,Penglai-SagittaVerificationPlatform,6195,1,2023-08-25 09:47:00+00:00,[],
12947,https://github.com/2Martina/AES-128.git,2023-08-19 17:39:52+00:00,"Advanced encryption standard:  Controlled by 2 finite state machines, it consists of 10 rounds. Modules: key expansion, add round key, sub bytes, shift rows, mix columns",0,2Martina/AES-128,680577429,SystemVerilog,AES-128,647,1,2023-08-20 00:15:37+00:00,[],
12948,https://github.com/cuixuyang615/RNN_HW.git,2023-07-03 17:41:59+00:00,hardware design of rnn network,0,cuixuyang615/RNN_HW,661808738,SystemVerilog,RNN_HW,5638,1,2024-02-29 03:23:05+00:00,[],
12949,https://github.com/PRAGATI-0102/Up-Counter-using-SV-Day-080-.git,2023-06-28 18:22:06+00:00,An up counter is a digital circuit that counts upwards from an initial value to a specified maximum value.,0,PRAGATI-0102/Up-Counter-using-SV-Day-080-,659864377,SystemVerilog,Up-Counter-using-SV-Day-080-,61,1,2023-06-29 07:18:23+00:00,[],
12950,https://github.com/HusniMahdi/APB2SPI.git,2023-07-03 19:36:01+00:00,Verification of a Basic APB2SPI module. ,0,HusniMahdi/APB2SPI,661844859,SystemVerilog,APB2SPI,7376,1,2023-08-09 08:22:07+00:00,[],
12951,https://github.com/ayush-agarwal-0502/Scan-Chain-DFT-System-Verilog.git,2023-07-09 13:23:44+00:00,System Verilog implementation of scan flop for usage in Scan Chain for DFT (Design for testability) ,0,ayush-agarwal-0502/Scan-Chain-DFT-System-Verilog,664276317,SystemVerilog,Scan-Chain-DFT-System-Verilog,2,1,2023-07-09 13:24:49+00:00,[],
12952,https://github.com/MuhammadHammad001/UART-Transmitter-using-SV.git,2023-08-28 09:32:02+00:00,Data path and Controller design in SystemVerilog for UART Transmitter,0,MuhammadHammad001/UART-Transmitter-using-SV,684020661,SystemVerilog,UART-Transmitter-using-SV,3,1,2023-09-08 04:53:06+00:00,[],
12953,https://github.com/KeenanRileyFaulkner/bfasster.git,2023-07-25 18:03:44+00:00,,0,KeenanRileyFaulkner/bfasster,670736117,SystemVerilog,bfasster,85,1,2023-08-07 22:26:55+00:00,[],
12954,https://github.com/look4raghav/DPI-SV.git,2023-06-24 16:51:51+00:00,DPI SystemVerilog,0,look4raghav/DPI-SV,658065283,SystemVerilog,DPI-SV,13,1,2023-11-27 07:32:03+00:00,[],https://api.github.com/licenses/mit
12955,https://github.com/Mayank27Vaghela/APB-Protocol.git,2023-08-07 08:22:25+00:00,APB VIP,0,Mayank27Vaghela/APB-Protocol,675570644,SystemVerilog,APB-Protocol,535,1,2023-10-04 02:46:01+00:00,[],
12956,https://github.com/MuhammadAmmarMalik/sequence-detector-11.git,2023-08-06 16:12:50+00:00,Sequence Detector using Mealy Finite State Machine,0,MuhammadAmmarMalik/sequence-detector-11,675348064,SystemVerilog,sequence-detector-11,4,1,2023-09-06 17:26:10+00:00,[],
12957,https://github.com/MuhammadAmmarMalik/RV32I-Pipeline-Processor.git,2023-08-06 15:13:30+00:00,RV32I Pipelined 5 Stage processor that support Six types of instruction excluding CSR's,0,MuhammadAmmarMalik/RV32I-Pipeline-Processor,675331114,SystemVerilog,RV32I-Pipeline-Processor,37,1,2023-09-06 17:26:39+00:00,[],
12958,https://github.com/tvsVLSI/MOD_12_COUNTER_SystemVerilog.git,2023-08-21 05:53:24+00:00,Verification Plan for Mod-12 Up/down Loadable Counter,0,tvsVLSI/MOD_12_COUNTER_SystemVerilog,681032314,SystemVerilog,MOD_12_COUNTER_SystemVerilog,12,1,2024-01-26 07:34:15+00:00,[],
12959,https://github.com/ayush-agarwal-0502/CDC-Synchronizer-System-Verilog.git,2023-06-25 16:28:15+00:00,Implementation of Synchronizer design for Clock Domain Crossing applications in VLSI using System Verilog ,0,ayush-agarwal-0502/CDC-Synchronizer-System-Verilog,658402230,SystemVerilog,CDC-Synchronizer-System-Verilog,8,1,2023-06-25 16:47:20+00:00,[],
12960,https://github.com/MihaiRazvanIonut/BinaryCalculator_Verilog.git,2023-07-04 18:54:57+00:00,,0,MihaiRazvanIonut/BinaryCalculator_Verilog,662276509,SystemVerilog,BinaryCalculator_Verilog,3,1,2023-11-08 06:00:19+00:00,[],
12961,https://github.com/ayush-agarwal-0502/Duplex-UART-System-Verilog.git,2023-07-09 12:59:59+00:00,System Verilog implementation of duplex Universal Asynchronous Receiver Transmitter (UART) for 7 bit data packet,0,ayush-agarwal-0502/Duplex-UART-System-Verilog,664269813,SystemVerilog,Duplex-UART-System-Verilog,6,1,2023-07-09 13:04:36+00:00,[],
12962,https://github.com/Youssefmdany/Design-and-UVM-Verification-of-The-I2C-Master_Controller.git,2023-07-18 23:01:01+00:00,Design and UVM Verification of The I2C Master Controller,0,Youssefmdany/Design-and-UVM-Verification-of-The-I2C-Master_Controller,668050432,SystemVerilog,Design-and-UVM-Verification-of-The-I2C-Master_Controller,22196,1,2023-08-02 01:46:06+00:00,[],
12963,https://github.com/axyrai/singlePortRAM.git,2023-07-31 09:57:11+00:00,,1,axyrai/singlePortRAM,672848681,SystemVerilog,singlePortRAM,1209,1,2023-08-03 04:28:12+00:00,[],
12964,https://github.com/ZixiBenZhang/ml4dv.git,2023-08-01 12:59:52+00:00,LLM4DV,1,ZixiBenZhang/ml4dv,673359219,SystemVerilog,ml4dv,77226,1,2024-01-15 08:38:10+00:00,[],https://api.github.com/licenses/apache-2.0
12965,https://github.com/varunram2001/VerliogCodes.git,2023-07-29 04:55:49+00:00,This repository contains all the Verilog codes and their testbenches that I have compiled as a part of my academic journey in Electronics and Communication Engineering. ,0,varunram2001/VerliogCodes,672150074,SystemVerilog,VerliogCodes,1324,1,2024-03-22 21:20:30+00:00,"['verilog', 'verilog-hdl']",
12966,https://github.com/PRAGATI-0102/Binary-to-Gray-using-SV-Day-079-.git,2023-06-27 17:28:25+00:00,The binary to gray converter is a digital circuit that takes a binary input and produces the corresponding gray code output.,0,PRAGATI-0102/Binary-to-Gray-using-SV-Day-079-,659371061,SystemVerilog,Binary-to-Gray-using-SV-Day-079-,85,1,2023-06-29 07:18:24+00:00,[],
12967,https://github.com/FAMAF-resources/3ro_2C-Arquitectura_de_Computadoras-FAMAF.git,2023-07-17 03:02:29+00:00,3ro 2C - Arquitectura de Computadoras - FAMAF,0,FAMAF-resources/3ro_2C-Arquitectura_de_Computadoras-FAMAF,667225482,SystemVerilog,3ro_2C-Arquitectura_de_Computadoras-FAMAF,68444,1,2023-08-08 17:51:57+00:00,"['famaf', 'arqc', 'arqcomp', 'resources']",https://api.github.com/licenses/mit
12968,https://github.com/scalable-arch/100kSV.git,2023-08-24 13:24:08+00:00,,9,scalable-arch/100kSV,682577799,SystemVerilog,100kSV,929,1,2023-09-15 06:21:15+00:00,[],
12969,https://github.com/aaronghosh/Hamming-Code-in-System-Verilog-for-Error-Detection-and-Correction.git,2023-08-12 16:50:48+00:00,This project aims to illustrate the practical implementation of Hamming Code encoding and decoding using the SystemVerilog hardware description language.,1,aaronghosh/Hamming-Code-in-System-Verilog-for-Error-Detection-and-Correction,677794779,SystemVerilog,Hamming-Code-in-System-Verilog-for-Error-Detection-and-Correction,31,1,2023-09-06 03:15:14+00:00,[],
12970,https://github.com/kirollos9/mux_uvm.git,2023-08-15 13:00:06+00:00,it uvm verification for mux,0,kirollos9/mux_uvm,678817570,SystemVerilog,mux_uvm,2,1,2023-12-17 12:05:57+00:00,[],
12971,https://github.com/alex-maiorov/Riscv-core-with-verification.git,2023-07-11 02:55:51+00:00,Ideally will at some point be a 5 stage pipeline in-order RISCV-32IAMZicsr core. Possibly with other extensions later,0,alex-maiorov/Riscv-core-with-verification,664908300,SystemVerilog,Riscv-core-with-verification,932,1,2023-09-20 03:44:28+00:00,[],https://api.github.com/licenses/lgpl-2.1
12972,https://github.com/kalai-rajan/-Design-and-Verification-of-SPI-Serial-Peripheral-Interface-Protocol.git,2023-07-20 03:24:34+00:00,,0,kalai-rajan/-Design-and-Verification-of-SPI-Serial-Peripheral-Interface-Protocol,668533221,SystemVerilog,-Design-and-Verification-of-SPI-Serial-Peripheral-Interface-Protocol,16,1,2023-08-23 06:28:49+00:00,[],
12973,https://github.com/humna2531/basic_verilog_codes.git,2023-08-10 19:59:58+00:00,,0,humna2531/basic_verilog_codes,677126181,SystemVerilog,basic_verilog_codes,14,1,2023-09-11 10:31:30+00:00,[],
12974,https://github.com/mjcarranza/mcarranza-digital-design-lab-2023.git,2023-08-22 01:08:45+00:00,Taller número 2 del curso Taller de Diseño Digital.,0,mjcarranza/mcarranza-digital-design-lab-2023,681414677,SystemVerilog,mcarranza-digital-design-lab-2023,58836,1,2024-02-20 21:47:54+00:00,[],
12975,https://github.com/MuhammadHammad001/Multiplier-using-Russian-Peasent-algorithm.git,2023-08-28 06:34:55+00:00,Data path and Controller design in SystemVerilog for a multiplier using Russian Peasant algorithm,0,MuhammadHammad001/Multiplier-using-Russian-Peasent-algorithm,683958493,SystemVerilog,Multiplier-using-Russian-Peasent-algorithm,402,1,2023-09-08 04:53:05+00:00,[],
12976,https://github.com/PRAGATI-0102/Odd-Counter-using-SV-Day-078-.git,2023-06-26 18:31:27+00:00,The purpose of the odd counter is to count the number of odd values encountered within a specified range.,0,PRAGATI-0102/Odd-Counter-using-SV-Day-078-,658906511,SystemVerilog,Odd-Counter-using-SV-Day-078-,27,1,2023-06-29 07:18:26+00:00,[],
12977,https://github.com/HACK-EVENT/hackatdac18.git,2023-08-08 00:19:40+00:00,,0,HACK-EVENT/hackatdac18,675878693,SystemVerilog,hackatdac18,22193,1,2023-11-09 04:49:33+00:00,[],
12978,https://github.com/Daniyal-Tahsildar/AHB_UVC_DEVELOPMENT.git,2023-08-14 05:18:44+00:00,Development of AHB5 master and Slave UVC,0,Daniyal-Tahsildar/AHB_UVC_DEVELOPMENT,678244713,SystemVerilog,AHB_UVC_DEVELOPMENT,587,1,2023-08-24 17:44:06+00:00,[],
12979,https://github.com/psvishnu1/verilog_vishnups.git,2023-07-14 03:50:54+00:00,Verilog/SystemVerilog programs,0,psvishnu1/verilog_vishnups,666245230,SystemVerilog,verilog_vishnups,21,1,2023-12-21 04:54:51+00:00,[],
12980,https://github.com/soc-hub-fi/AnTiQ.git,2023-07-07 12:50:49+00:00,A hardware priority queue with constant response time written in SystemVerilog.,1,soc-hub-fi/AnTiQ,663502781,SystemVerilog,AnTiQ,66,1,2023-07-10 19:22:42+00:00,[],https://api.github.com/licenses/apache-2.0
12981,https://github.com/PRAGATI-0102/Priority-Arbiter-using-SV-Day-083-.git,2023-07-01 17:01:26+00:00,A priority arbiter is a digital circuit that arbitrates between multiple input requests based on their priority and grants access to a shared resource or service.,1,PRAGATI-0102/Priority-Arbiter-using-SV-Day-083-,661060442,SystemVerilog,Priority-Arbiter-using-SV-Day-083-,47,1,2023-07-02 19:54:33+00:00,[],
12982,https://github.com/yayaelbasha/AES-128.git,2023-08-08 09:53:32+00:00,"AES-128 consists of 10 rounds, each round, a number of operations is done on the Plaintext using a round subkey. after the 10th round, the Ciphertext is ready.  This design prioritizes the cost and area, only one instance of each module is used to compute the rounds. I achieved this using an FSM Controller. The Ciphertext is ready after 12 cycles.",0,yayaelbasha/AES-128,676042652,SystemVerilog,AES-128,11,1,2023-11-07 06:57:13+00:00,[],
12983,https://github.com/realrusssobti/CPE133-Final-Project.git,2023-07-04 21:51:32+00:00,"The world's worst GPU/Powerpoint player , on a Basys 3 board + Image pre-processor in Python",0,realrusssobti/CPE133-Final-Project,662321943,SystemVerilog,CPE133-Final-Project,22039,1,2023-07-05 08:28:36+00:00,[],
12984,https://github.com/accelr-net/alveo-memory-tester.git,2023-07-25 06:28:32+00:00,Memory read write tester for Xilinx Alveo cards,1,accelr-net/alveo-memory-tester,670477278,SystemVerilog,alveo-memory-tester,2580,1,2023-08-08 06:03:20+00:00,[],
12985,https://github.com/ivansantiago-b/DSD.git,2023-08-26 19:41:25+00:00,DSD Vivado projects,0,ivansantiago-b/DSD,683507938,SystemVerilog,DSD,172,1,2023-12-10 00:49:19+00:00,[],
12986,https://github.com/Matthew-Otto/Drop-In-JTAG.git,2023-08-26 17:44:09+00:00,Open Source Silicon Development Testing Unit - Senior Design Project,0,Matthew-Otto/Drop-In-JTAG,683478145,SystemVerilog,Drop-In-JTAG,128,1,2023-11-18 17:16:49+00:00,[],
12987,https://github.com/Ashwin-Rajesh/fpga_functiongen.git,2023-07-18 11:17:05+00:00,"A simple function generator for square, sine (using CORDIC) and sawtooth waveforms on the basys3 board (with PMOD DAC)",0,Ashwin-Rajesh/fpga_functiongen,667817181,SystemVerilog,fpga_functiongen,4433,1,2024-02-22 14:57:06+00:00,[],
12988,https://github.com/wasid-malik/real-time-audio-processing.git,2023-07-18 19:27:00+00:00,This repository contains the project files for a real-time audio processing system implemented on an FPGA using digital filters. The project focuses on the design and implementation of digital filters for audio signal processing. The main goal of the project is to showcase the efficient and real-time processing of audio signals using FPGA hardware.,0,wasid-malik/real-time-audio-processing,667998109,SystemVerilog,real-time-audio-processing,10,1,2024-03-02 07:13:34+00:00,[],
12989,https://github.com/opencomputeproject/HWMgmt-Module-DCSCM-LTPI.git,2023-08-21 14:26:27+00:00,DC-SCM LTPI Reference Implementation,1,opencomputeproject/HWMgmt-Module-DCSCM-LTPI,681218572,SystemVerilog,HWMgmt-Module-DCSCM-LTPI,1175,1,2024-03-20 18:18:29+00:00,[],https://api.github.com/licenses/mit
12990,https://github.com/iianmelo/PipelineProject.git,2023-08-11 15:21:08+00:00,Projeto da disciplina Infraestrutura de Hardware do período 2023.1 no qual consiste na implementação de 21 funções em um processador RISC-V com pipeline simulado em SystemVerilog.,0,iianmelo/PipelineProject,677440141,SystemVerilog,PipelineProject,204,1,2024-03-25 20:27:13+00:00,[],
12991,https://github.com/vyom-elan/Synchronous-FIFO.git,2023-07-02 14:20:09+00:00,,0,vyom-elan/Synchronous-FIFO,661334280,SystemVerilog,Synchronous-FIFO,46,1,2023-07-23 17:41:10+00:00,[],
12992,https://github.com/bakermarcos/laoc.git,2023-06-28 00:34:15+00:00,,1,bakermarcos/laoc,659489029,SystemVerilog,laoc,139,1,2023-06-30 14:46:56+00:00,[],
12993,https://github.com/Chandu4522/Ethernet_MAC_Verification.git,2023-08-27 07:27:48+00:00,A project for the IP level verification of the Ethernet MAC module structured based on MAC 802.3 Communication standard using SystemVerilog and Universal Verification Methodology.,0,Chandu4522/Ethernet_MAC_Verification,683629274,SystemVerilog,Ethernet_MAC_Verification,16,1,2023-09-08 07:56:38+00:00,[],
12994,https://github.com/tranjas/Audio-Visualizer.git,2023-08-02 21:39:09+00:00,,0,tranjas/Audio-Visualizer,673979843,SystemVerilog,Audio-Visualizer,501,1,2023-08-02 21:46:06+00:00,[],
12995,https://github.com/acard6/ECE-385-final-project.git,2023-08-17 22:26:59+00:00,,0,acard6/ECE-385-final-project,679905792,SystemVerilog,ECE-385-final-project,2557,1,2023-08-17 22:35:33+00:00,[],
12996,https://github.com/Itaysht/Digital_Systems.git,2023-08-18 14:48:54+00:00,,0,Itaysht/Digital_Systems,680185905,SystemVerilog,Digital_Systems,17,1,2023-08-18 14:56:04+00:00,[],
12997,https://github.com/Daniyal-Tahsildar/AHB_IC_VERIFICATION.git,2023-08-12 08:19:33+00:00,,0,Daniyal-Tahsildar/AHB_IC_VERIFICATION,677666993,SystemVerilog,AHB_IC_VERIFICATION,607,1,2023-08-24 21:31:39+00:00,[],
12998,https://github.com/Vishwa533/FIFO.git,2023-08-13 11:31:52+00:00,"Verified FIFO functionality using System Verilog by creating a generator , driver , monitor , scoreboard ,  environment class and top module. Developed test scenarios to validate various aspects of FIFO functionality.  • Language : System Verilog",0,Vishwa533/FIFO,678005272,SystemVerilog,FIFO,18,1,2024-01-12 15:46:36+00:00,[],
12999,https://github.com/AlexBolotnikov/hints_systemveriog.git,2023-08-09 20:59:08+00:00,To avoid massive reliance upon memory retention I have decided to create a repository with some hints and tips to use and rely on   ,0,AlexBolotnikov/hints_systemveriog,676715987,SystemVerilog,hints_systemveriog,547,1,2023-12-05 14:08:11+00:00,[],https://api.github.com/licenses/unlicense
13000,https://github.com/pmendozap/DL_II_23_ejemplos.git,2023-08-22 17:14:15+00:00,,0,pmendozap/DL_II_23_ejemplos,681748975,SystemVerilog,DL_II_23_ejemplos,10,1,2023-08-29 11:21:11+00:00,[],
13001,https://github.com/rayo17/drayodigital_design-_lab-_2023.git,2023-08-18 19:16:48+00:00,,0,rayo17/drayodigital_design-_lab-_2023,680274171,SystemVerilog,drayodigital_design-_lab-_2023,319547,1,2023-09-13 16:06:14+00:00,[],
13002,https://github.com/PeterHsu25425108/DCS.git,2023-06-30 13:01:08+00:00,Archive for DCS 2023,0,PeterHsu25425108/DCS,660632319,SystemVerilog,DCS,16358,1,2024-03-07 16:03:10+00:00,[],
13003,https://github.com/okenna10/FPGA_exponential_function.git,2023-08-28 17:33:15+00:00,,0,okenna10/FPGA_exponential_function,684217854,SystemVerilog,FPGA_exponential_function,24,1,2024-04-08 14:26:17+00:00,[],
13004,https://github.com/SuchithraM008/100DaysofRTL.git,2023-07-24 16:17:10+00:00,,0,SuchithraM008/100DaysofRTL,670252987,SystemVerilog,100DaysofRTL,2023,1,2023-08-13 12:04:41+00:00,[],
13005,https://github.com/d-lec/d-lev-hdl.git,2023-07-23 22:52:28+00:00,Source mirror of SystemVerilog source code for D-Lev processor.,1,d-lec/d-lev-hdl,669934972,SystemVerilog,d-lev-hdl,242,1,2024-02-01 03:22:04+00:00,[],https://api.github.com/licenses/mit
13006,https://github.com/Apostolgs/Multiplier_HW_II.git,2023-06-29 09:12:00+00:00,IEEE 754 Single Precision 32-bit Float Multiplier,0,Apostolgs/Multiplier_HW_II,660110984,SystemVerilog,Multiplier_HW_II,73530,1,2023-07-09 19:35:00+00:00,[],
13007,https://github.com/JuanSync7/SystemVerilog.git,2023-06-29 09:07:57+00:00,Place to put simple SystemVerilog examples for reference ,0,JuanSync7/SystemVerilog,660109648,SystemVerilog,SystemVerilog,16,1,2023-07-03 12:51:27+00:00,[],https://api.github.com/licenses/gpl-3.0
13008,https://github.com/1fahadaloufi/Data-Cache.git,2023-07-25 21:48:08+00:00,,0,1fahadaloufi/Data-Cache,670801358,SystemVerilog,Data-Cache,36,1,2023-08-23 17:20:34+00:00,[],
13009,https://github.com/ayush-agarwal-0502/Digital-Schmitt-Trigger-Controller-System-Verilog.git,2023-06-25 16:37:27+00:00,"Implementation of Digital version of Schmitt Trigger invented by me for utilization in Bang Bang Controller , made using System Verilog ",0,ayush-agarwal-0502/Digital-Schmitt-Trigger-Controller-System-Verilog,658404840,SystemVerilog,Digital-Schmitt-Trigger-Controller-System-Verilog,4,1,2023-06-26 13:27:49+00:00,[],
13010,https://github.com/oscc-ip/common.git,2023-08-21 10:58:53+00:00,A SystemVerilog Components Library,0,oscc-ip/common,681139180,SystemVerilog,common,200,1,2023-09-03 14:27:52+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
13011,https://github.com/Stelios1908/fifo_verification_SystemVerilog.git,2023-07-23 10:45:11+00:00,fifo verificastion with system verilog,0,Stelios1908/fifo_verification_SystemVerilog,669760660,SystemVerilog,fifo_verification_SystemVerilog,175,1,2024-03-05 08:01:48+00:00,[],
13012,https://github.com/lyxxng/FPGA-Controllable-Sprite.git,2023-08-04 23:50:50+00:00,,0,lyxxng/FPGA-Controllable-Sprite,674841876,SystemVerilog,FPGA-Controllable-Sprite,15276,1,2023-08-06 04:42:26+00:00,[],
13013,https://github.com/ayush-agarwal-0502/CLB-FPGA-in-System-Verilog.git,2023-06-25 16:33:56+00:00,"Configurable Logic Block (CLB) design using Look Up Table (LUT) for utilization in Field Programmable Gate Array (FPGA) , made using System Verilog (SV)",0,ayush-agarwal-0502/CLB-FPGA-in-System-Verilog,658403775,SystemVerilog,CLB-FPGA-in-System-Verilog,6,1,2023-06-25 16:47:21+00:00,[],
13014,https://github.com/sohilnagpal04/Task5.1_SIT329.git,2023-08-19 06:34:35+00:00,,0,sohilnagpal04/Task5.1_SIT329,680409268,SystemVerilog,Task5.1_SIT329,1,1,2023-09-02 03:45:08+00:00,[],
13015,https://github.com/MarshallKnowles/RISC-V-CPU-BASE.git,2023-08-30 17:49:04+00:00,Student project creating a processor implementing the RV32-I instruction set.,0,MarshallKnowles/RISC-V-CPU-BASE,685191692,SystemVerilog,RISC-V-CPU-BASE,430,1,2023-10-13 00:54:29+00:00,[],
13016,https://github.com/Nrusinga/Verification-Sequencer.git,2023-07-17 05:46:54+00:00,,0,Nrusinga/Verification-Sequencer,667262949,SystemVerilog,Verification-Sequencer,7,1,2023-07-17 07:30:51+00:00,[],
13017,https://github.com/Barak-Katzir/SHA256_AI-Accelerator.git,2023-07-01 13:18:10+00:00,"AI Hardware Accelerator for the Cryptography algorithm SHA256 on a RISC-V CPU, using a DE-10 Lite FPGA. ",0,Barak-Katzir/SHA256_AI-Accelerator,660998453,SystemVerilog,SHA256_AI-Accelerator,7,1,2023-11-09 11:24:39+00:00,[],
13018,https://github.com/ayush-agarwal-0502/Sort-in-O-N.git,2023-06-27 13:24:30+00:00,"""When you can't optimize the software further, optimize the hardware ..."" . Introducing a hardware design for sorting numbers in O(N) ",0,ayush-agarwal-0502/Sort-in-O-N,659268022,SystemVerilog,Sort-in-O-N,3,1,2023-06-30 13:11:47+00:00,[],
13019,https://github.com/MuhammadAmmarMalik/UART-Transmitter.git,2023-08-06 15:29:03+00:00,UART Transmitter using Data Path and Control Logic,0,MuhammadAmmarMalik/UART-Transmitter,675335488,SystemVerilog,UART-Transmitter,6,1,2023-09-06 17:26:44+00:00,[],
13020,https://github.com/SSJ2085/Router-1x3_UVM_Verification.git,2023-08-29 07:24:26+00:00,,0,SSJ2085/Router-1x3_UVM_Verification,684466706,SystemVerilog,Router-1x3_UVM_Verification,26,1,2023-08-29 07:38:25+00:00,[],https://api.github.com/licenses/mit
13021,https://github.com/NicolaLino/Pipelined-Processor.git,2023-08-27 11:18:41+00:00,,0,NicolaLino/Pipelined-Processor,683682176,SystemVerilog,Pipelined-Processor,52,1,2024-01-29 11:04:25+00:00,[],https://api.github.com/licenses/mit
13022,https://github.com/Rithik739/Router-1-3.git,2023-08-13 07:22:08+00:00,verification of router 1-3 using uvm system verilog,0,Rithik739/Router-1-3,677950049,SystemVerilog,Router-1-3,33,1,2024-01-14 12:15:13+00:00,[],
13023,https://github.com/erquintana/veriRISC_CPU_SV.git,2023-08-17 02:54:49+00:00,This project was developed based on the labs from a SV Cadence certification. This is the integration lab for different modules to build a RISC CPU,0,erquintana/veriRISC_CPU_SV,679515572,SystemVerilog,veriRISC_CPU_SV,71,1,2023-12-12 16:23:15+00:00,[],https://api.github.com/licenses/gpl-3.0
13024,https://github.com/SOMPALLY/apb_uart.git,2023-07-20 05:33:13+00:00,verifying the apb uart by developing uvm tb ,0,SOMPALLY/apb_uart,668563497,SystemVerilog,apb_uart,1,1,2023-07-22 06:05:48+00:00,[],
13025,https://github.com/woodrowb96/systemverilog-fifo-and-uvm-testbench.git,2023-06-28 23:22:55+00:00,,0,woodrowb96/systemverilog-fifo-and-uvm-testbench,659949178,SystemVerilog,systemverilog-fifo-and-uvm-testbench,36,1,2023-09-27 21:45:11+00:00,[],
13026,https://github.com/PRAGATI-0102/D-FF-using-SV-Day-076-.git,2023-06-24 18:15:52+00:00,"The DFF module I created provides variations for three conditions: no reset, synchronous reset, and asynchronous reset.",0,PRAGATI-0102/D-FF-using-SV-Day-076-,658087362,SystemVerilog,D-FF-using-SV-Day-076-,29,1,2023-06-29 07:18:29+00:00,[],
13027,https://github.com/kalai-rajan/Design-and-Verification-of-Synchronous-FIFO.git,2023-06-24 16:59:58+00:00,,0,kalai-rajan/Design-and-Verification-of-Synchronous-FIFO,658067523,SystemVerilog,Design-and-Verification-of-Synchronous-FIFO,9,1,2023-08-23 06:30:07+00:00,[],
13028,https://github.com/jiacpt/consim.git,2023-08-17 20:47:56+00:00,,0,jiacpt/consim,679883199,SystemVerilog,consim,152,1,2023-08-19 15:39:48+00:00,[],
13029,https://github.com/Nabih-Saleh/transformers.git,2023-07-14 08:57:13+00:00,,0,Nabih-Saleh/transformers,666333818,SystemVerilog,transformers,5,1,2024-01-31 17:27:55+00:00,[],
13030,https://github.com/ASOKAN07/UART.git,2023-08-14 17:18:06+00:00,UART Design and Verification - System Verilog ,0,ASOKAN07/UART,678493130,SystemVerilog,UART,87,1,2024-03-05 08:10:28+00:00,[],
13031,https://github.com/ItteRevanth/Verification_of_Synchronous_FIFO.git,2023-06-24 09:14:04+00:00,,0,ItteRevanth/Verification_of_Synchronous_FIFO,657939069,SystemVerilog,Verification_of_Synchronous_FIFO,13,0,2023-06-24 09:31:57+00:00,[],
13032,https://github.com/amisaraaah/mySystemVerilog.git,2023-06-28 05:04:30+00:00,quick silicon,0,amisaraaah/mySystemVerilog,659556790,SystemVerilog,mySystemVerilog,15,0,2023-06-28 05:05:26+00:00,[],
13033,https://github.com/VaishnaviKulkarni007/FFVDD.git,2023-07-31 17:51:35+00:00,,0,VaishnaviKulkarni007/FFVDD,673029429,SystemVerilog,FFVDD,196,0,2023-07-31 17:55:52+00:00,[],
13034,https://github.com/HassanKhaled11/UVM_CASE_STUDY.git,2023-07-31 18:46:53+00:00,,0,HassanKhaled11/UVM_CASE_STUDY,673048371,SystemVerilog,UVM_CASE_STUDY,5,0,2023-07-31 18:50:12+00:00,[],
13035,https://github.com/philiprbrenan/posEdgeNegEdge.git,2023-07-18 13:48:35+00:00,Clocking on positive and negative edges,0,philiprbrenan/posEdgeNegEdge,667873625,SystemVerilog,posEdgeNegEdge,3,0,2023-07-18 13:53:18+00:00,[],
13036,https://github.com/HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-no-delay-SRAM_V1.git,2023-08-01 20:46:17+00:00,RISC-V Pipelined CPU (with no delay SRAM),1,HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-no-delay-SRAM_V1,673527528,SystemVerilog,RV32I-RISC-V-Pipelined-CPU-with-no-delay-SRAM_V1,9061,0,2023-08-03 23:18:39+00:00,[],
13037,https://github.com/nnguyendinh/FFT-Butterfly-Unit.git,2023-08-01 05:00:21+00:00,,0,nnguyendinh/FFT-Butterfly-Unit,673195508,SystemVerilog,FFT-Butterfly-Unit,2,0,2023-08-13 23:43:17+00:00,[],
13038,https://github.com/maxsofar/044252---sim3.git,2023-06-28 19:21:02+00:00,,0,maxsofar/044252---sim3,659884644,SystemVerilog,044252---sim3,7,0,2023-08-08 20:52:48+00:00,[],
13039,https://github.com/sshubhra170/EDA.git,2023-06-29 05:29:08+00:00,,0,sshubhra170/EDA,660036534,SystemVerilog,EDA,27,0,2023-06-29 05:54:01+00:00,[],
13040,https://github.com/lemwill/riscv-cpu.git,2023-07-02 19:42:30+00:00,,0,lemwill/riscv-cpu,661421760,SystemVerilog,riscv-cpu,22,0,2023-07-03 22:24:25+00:00,[],
13041,https://github.com/ana-pgodoy/Verification_Team4.git,2023-06-26 15:27:23+00:00,,0,ana-pgodoy/Verification_Team4,658834341,SystemVerilog,Verification_Team4,472,0,2023-07-02 22:03:21+00:00,[],
13042,https://github.com/siliconbootcamp/setup.git,2023-06-26 22:14:42+00:00,,0,siliconbootcamp/setup,658971812,SystemVerilog,setup,18,0,2023-06-27 02:46:18+00:00,[],https://api.github.com/licenses/gpl-3.0
13043,https://github.com/David-41/RISC-V.git,2023-06-26 16:17:46+00:00,RISC-V (RV32I) for control applications,0,David-41/RISC-V,658855409,SystemVerilog,RISC-V,13646,0,2023-06-27 09:14:21+00:00,[],https://api.github.com/licenses/mit
13044,https://github.com/DogOleg/additive_scrambler.git,2023-07-16 13:48:15+00:00,,0,DogOleg/additive_scrambler,667054939,SystemVerilog,additive_scrambler,0,0,2023-07-16 13:52:07+00:00,[],
13045,https://github.com/PeterBaggetta/AES-Encryption-Coprocessor-in-CBC-Mode.git,2023-07-24 23:32:36+00:00,Implemented an AWS coprocessor on a DE1-SoC development board which uses an Altera SoC with dual-core Cortex A-9 embedded cores,0,PeterBaggetta/AES-Encryption-Coprocessor-in-CBC-Mode,670377919,SystemVerilog,AES-Encryption-Coprocessor-in-CBC-Mode,160170,0,2023-07-24 23:45:15+00:00,[],
13046,https://github.com/MiraculousTreasure/praveen.git,2023-08-26 08:10:08+00:00,,0,MiraculousTreasure/praveen,683330866,SystemVerilog,praveen,2,0,2023-08-26 08:12:07+00:00,[],
13047,https://github.com/mariosplen/SystemVerilog-UNI-LAB.git,2023-08-24 11:11:44+00:00,This repository contains the exercises assigned during the Advanced Digital Design course,0,mariosplen/SystemVerilog-UNI-LAB,682526402,SystemVerilog,SystemVerilog-UNI-LAB,1154,0,2023-08-24 11:24:13+00:00,[],
13048,https://github.com/2023-Fall-ECE4278/lab1.git,2023-08-29 13:15:13+00:00,,0,2023-Fall-ECE4278/lab1,684597082,SystemVerilog,lab1,2,0,2023-08-31 18:07:25+00:00,[],
13049,https://github.com/alok2802/APB-Bus-Protocol-verification.git,2023-08-17 18:49:46+00:00,,0,alok2802/APB-Bus-Protocol-verification,679847058,SystemVerilog,APB-Bus-Protocol-verification,3,0,2023-08-17 18:54:02+00:00,[],
13050,https://github.com/humayunsiraj123/UART.git,2023-08-19 16:16:46+00:00,uart communication protocaol implementaion using system verilog,0,humayunsiraj123/UART,680555448,SystemVerilog,UART,8,0,2023-08-20 22:41:10+00:00,[],
13051,https://github.com/royb998/044157-project.git,2023-08-21 09:24:01+00:00,,0,royb998/044157-project,681106305,SystemVerilog,044157-project,16278,0,2023-08-25 13:49:01+00:00,[],
13052,https://github.com/oplikos/Encryption-and-Decryption-processes.git,2023-08-18 22:08:44+00:00,,0,oplikos/Encryption-and-Decryption-processes,680315128,SystemVerilog,Encryption-and-Decryption-processes,449,0,2023-08-18 22:11:24+00:00,[],
13053,https://github.com/thinhngo11/Transaction-Level-Assertions.git,2023-08-20 20:05:29+00:00,,0,thinhngo11/Transaction-Level-Assertions,680914331,SystemVerilog,Transaction-Level-Assertions,19,0,2023-08-20 20:08:34+00:00,[],
13054,https://github.com/NJohnsonCR/njohnson_jmarschatz_gconejo_digital_design_lab_2023.git,2023-08-20 21:11:07+00:00,,0,NJohnsonCR/njohnson_jmarschatz_gconejo_digital_design_lab_2023,680927601,SystemVerilog,njohnson_jmarschatz_gconejo_digital_design_lab_2023,487306,0,2023-10-01 00:10:18+00:00,[],
13055,https://github.com/arvalid/uvm-source.git,2023-08-22 06:13:33+00:00,"Mirror of https://www.accellera.org/downloads/standards/uvm, starting from uvm-1.2.",0,arvalid/uvm-source,681489817,SystemVerilog,uvm-source,2792,0,2023-08-23 01:07:49+00:00,['uvm'],https://api.github.com/licenses/apache-2.0
13056,https://github.com/Tassany/concepcao_ufpb.git,2023-08-22 12:05:25+00:00,,0,Tassany/concepcao_ufpb,681621576,SystemVerilog,concepcao_ufpb,4,0,2023-08-22 12:09:18+00:00,[],https://api.github.com/licenses/mit
13057,https://github.com/RehanQasim-dev/Single-Cycle-RISCV-32I-Processor.git,2023-08-07 21:14:55+00:00,Sytem verilog code for single cycle RISCV-32I processor.It supports all the base level instructions.,0,RehanQasim-dev/Single-Cycle-RISCV-32I-Processor,675839720,SystemVerilog,Single-Cycle-RISCV-32I-Processor,653,0,2023-08-07 21:16:39+00:00,[],
13058,https://github.com/HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V2.git,2023-08-06 19:17:49+00:00,"RISC-V Pipelined CPU(with one cycle delay output SRAM, improved by v1)",0,HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V2,675396461,SystemVerilog,RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V2,4511,0,2023-08-06 19:42:12+00:00,[],
13059,https://github.com/darpanchoudhary/AXI_Project.git,2023-08-13 22:09:23+00:00,,0,darpanchoudhary/AXI_Project,678161369,SystemVerilog,AXI_Project,3,0,2023-08-13 22:14:47+00:00,[],
13060,https://github.com/AbdulrahmanNourEldeen/Computational-Storage.git,2023-08-12 13:52:25+00:00,Designing a Computational Storage and using UVM to verify the functionality.,0,AbdulrahmanNourEldeen/Computational-Storage,677745050,SystemVerilog,Computational-Storage,1386,0,2023-08-12 14:14:23+00:00,[],
13061,https://github.com/TonyHo722/axilite-slave.git,2023-07-10 02:52:55+00:00,,0,TonyHo722/axilite-slave,664457734,SystemVerilog,axilite-slave,34,0,2023-07-10 02:57:30+00:00,[],
13062,https://github.com/LiZhao1998/adder_sv_verifivation.git,2023-07-12 08:25:11+00:00,,0,LiZhao1998/adder_sv_verifivation,665450007,SystemVerilog,adder_sv_verifivation,4,0,2023-07-13 02:01:15+00:00,[],
13063,https://github.com/celaltrk/Traffic-Lights-FSM.git,2023-07-06 07:26:11+00:00,A finite state machine implementation using SystemVerilog to simulate traffic light signals.,0,celaltrk/Traffic-Lights-FSM,662926336,SystemVerilog,Traffic-Lights-FSM,2,0,2023-07-06 07:27:05+00:00,[],
13064,https://github.com/flyingbrids/Fixed-point-matrix-inversion.git,2023-07-31 19:39:42+00:00,matrix inversion using system verilog,0,flyingbrids/Fixed-point-matrix-inversion,673064617,SystemVerilog,Fixed-point-matrix-inversion,66,0,2023-07-31 19:51:09+00:00,[],
13065,https://github.com/yashwant4756/Verification_of_Synchronous_FIFO.git,2023-07-02 05:09:08+00:00,,0,yashwant4756/Verification_of_Synchronous_FIFO,661197423,SystemVerilog,Verification_of_Synchronous_FIFO,9,0,2023-07-02 05:10:09+00:00,[],
13066,https://github.com/Abdullah-Shaaban/RISC-V-M-Extension-Coprocessor-for-PicoRV32-Core.git,2023-08-30 16:48:51+00:00,RISC-V M-Extension Coprocessor for PicoRV32 Core,0,Abdullah-Shaaban/RISC-V-M-Extension-Coprocessor-for-PicoRV32-Core,685166795,SystemVerilog,RISC-V-M-Extension-Coprocessor-for-PicoRV32-Core,100,0,2023-08-30 16:51:36+00:00,[],https://api.github.com/licenses/apache-2.0
13067,https://github.com/Taeho-Cho/FPGA.git,2023-08-12 07:09:04+00:00,Vivado and Vitis,0,Taeho-Cho/FPGA,677651529,SystemVerilog,FPGA,27,0,2023-08-12 07:54:11+00:00,[],
13068,https://github.com/MayaLasheen/ALU-Verification.git,2023-07-29 10:33:52+00:00,,0,MayaLasheen/ALU-Verification,672222259,SystemVerilog,ALU-Verification,65,0,2023-08-03 17:48:08+00:00,[],
13069,https://github.com/brnm9801/xournal.git,2023-08-01 16:36:14+00:00,xournal of courses,0,brnm9801/xournal,673447198,SystemVerilog,xournal,37713,0,2024-04-09 16:23:02+00:00,[],
13070,https://github.com/gorkemnisanci96/SystemVerilogForVerificationPart1.git,2023-06-30 20:18:42+00:00,,0,gorkemnisanci96/SystemVerilogForVerificationPart1,660775738,SystemVerilog,SystemVerilogForVerificationPart1,21,0,2023-06-30 20:21:17+00:00,[],
13071,https://github.com/GreyZenki/cse_systemverilog.git,2023-07-01 23:11:53+00:00,various labs that delt with implementing onto an fpga  ,0,GreyZenki/cse_systemverilog,661140576,SystemVerilog,cse_systemverilog,57,0,2023-07-03 19:19:00+00:00,[],
13072,https://github.com/look4raghav/VERIFICATION-Synchronous-FIFO.git,2023-07-02 08:16:50+00:00,Design and Verification project of synchronous fifo...,0,look4raghav/VERIFICATION-Synchronous-FIFO,661239252,SystemVerilog,VERIFICATION-Synchronous-FIFO,16,0,2023-07-03 15:50:47+00:00,[],https://api.github.com/licenses/mit
13073,https://github.com/PRAGATI-0102/Binary-to-One-Hot-converter-Day-085-.git,2023-07-03 16:47:14+00:00,"A Binary to One-Hot Converter is a digital circuit that takes a binary input and produces a one-hot output, where only one bit of the output is high (1) corresponding to the binary value.",0,PRAGATI-0102/Binary-to-One-Hot-converter-Day-085-,661789897,SystemVerilog,Binary-to-One-Hot-converter-Day-085-,68,0,2023-07-03 16:48:14+00:00,[],
13074,https://github.com/SemiFront/SystemVerilog_SF.git,2023-07-06 05:10:35+00:00,System Verilog Topic with example codes. ,0,SemiFront/SystemVerilog_SF,662882945,SystemVerilog,SystemVerilog_SF,18,0,2023-07-06 05:22:14+00:00,[],
13075,https://github.com/erquintana/cadence_sv_certif_course.git,2023-07-13 22:12:35+00:00,,0,erquintana/cadence_sv_certif_course,666172449,SystemVerilog,cadence_sv_certif_course,25472,0,2023-07-13 22:15:15+00:00,[],
13076,https://github.com/Purdue-SoCET/vito-uart.git,2023-07-13 17:10:52+00:00,,1,Purdue-SoCET/vito-uart,666084041,SystemVerilog,vito-uart,50,0,2023-07-24 10:40:07+00:00,[],https://api.github.com/licenses/apache-2.0
13078,https://github.com/ItteRevanth/Design_and_Verification_of_UART_module.git,2023-06-27 16:17:14+00:00,,0,ItteRevanth/Design_and_Verification_of_UART_module,659343650,SystemVerilog,Design_and_Verification_of_UART_module,16,0,2023-06-27 16:29:29+00:00,[],
13079,https://github.com/prernamittal/VerilogAlarmClock.git,2023-06-26 03:34:59+00:00,This project implements a digital clock with alarm functionality in Verilog and SystemVerilog. ,0,prernamittal/VerilogAlarmClock,658557398,SystemVerilog,VerilogAlarmClock,42,0,2023-06-26 04:05:34+00:00,"['systemverilog', 'verilog', 'xcelium']",
13080,https://github.com/Aaargsv/Image-Processing-Using-FPGA.git,2023-06-29 13:16:57+00:00,,0,Aaargsv/Image-Processing-Using-FPGA,660199138,SystemVerilog,Image-Processing-Using-FPGA,11866,0,2023-06-29 13:19:18+00:00,[],
13081,https://github.com/dsmv/2023-lalambda-fpga-labs.git,2023-07-03 05:17:11+00:00,,0,dsmv/2023-lalambda-fpga-labs,661536481,SystemVerilog,2023-lalambda-fpga-labs,13674,0,2023-11-06 23:19:35+00:00,[],
13082,https://github.com/erquintana/hardware_engineer_space.git,2023-07-18 16:07:44+00:00,"This repo is intended to practice and develop different skill for the semiconductor industry, specifically for hardware engineering :)",0,erquintana/hardware_engineer_space,667929370,SystemVerilog,hardware_engineer_space,25844,0,2023-08-17 06:44:14+00:00,[],https://api.github.com/licenses/gpl-3.0
13083,https://github.com/nurullahayv/AXI4-Lite_Verification_UVM.git,2023-07-16 11:18:14+00:00,(not completed) AXI4-Lite_Verification_UVM,0,nurullahayv/AXI4-Lite_Verification_UVM,667018047,SystemVerilog,AXI4-Lite_Verification_UVM,7,0,2023-07-16 11:27:27+00:00,[],https://api.github.com/licenses/mit
13084,https://github.com/username9896/Task-3.1P-SIT329.git,2023-08-02 16:53:47+00:00,,0,username9896/Task-3.1P-SIT329,673891394,SystemVerilog,Task-3.1P-SIT329,3,0,2023-08-02 16:54:21+00:00,[],
13085,https://github.com/R-Rjn/Uvm_learning.git,2023-08-03 11:54:38+00:00,Trying to learn and implement Uvm Methods in verification ,0,R-Rjn/Uvm_learning,674212475,SystemVerilog,Uvm_learning,22,0,2023-08-03 11:57:08+00:00,[],https://api.github.com/licenses/gpl-2.0
13086,https://github.com/AlejoGazagne/ArquitecturaDeComputadorasI.git,2023-08-01 23:33:20+00:00,"Material practica de la materia arquitectura de computadoras I (SystemVerilog, Assembler, y proyecto de la Placa De Desarrollo Cyclone De0nano Deonano Fpga Altera)",0,AlejoGazagne/ArquitecturaDeComputadorasI,673564294,SystemVerilog,ArquitecturaDeComputadorasI,10760,0,2023-08-01 23:41:04+00:00,[],
13087,https://github.com/XiaBin520/TileLink-to-CHI.git,2023-08-10 03:58:08+00:00,,0,XiaBin520/TileLink-to-CHI,676804353,SystemVerilog,TileLink-to-CHI,5,0,2023-08-10 04:06:46+00:00,[],
13088,https://github.com/P-Shreyas-Shetty/d4c.git,2023-08-11 04:03:42+00:00,Command line and config file parser for SystemVerilog,0,P-Shreyas-Shetty/d4c,677230340,SystemVerilog,d4c,35,0,2023-08-11 08:41:34+00:00,[],
13089,https://github.com/sudeepangadi/SV_Projects.git,2023-08-07 08:18:29+00:00,Verification Projects Using Verilog and System Verilog Test bench,0,sudeepangadi/SV_Projects,675569289,SystemVerilog,SV_Projects,11,0,2023-08-07 08:23:24+00:00,[],
13090,https://github.com/Aadi3333/4.1SIT329.git,2023-08-12 05:24:35+00:00,,0,Aadi3333/4.1SIT329,677629901,SystemVerilog,4.1SIT329,2,0,2023-08-12 05:25:17+00:00,[],
13091,https://github.com/nananapo/whitespace_cpu.git,2023-08-12 11:46:40+00:00,,0,nananapo/whitespace_cpu,677714348,SystemVerilog,whitespace_cpu,3,0,2023-08-12 11:47:24+00:00,[],
13092,https://github.com/ZhengYuhe/DRAM-Cache-System-for-Matrix-Calculation.git,2023-08-15 21:07:18+00:00,,0,ZhengYuhe/DRAM-Cache-System-for-Matrix-Calculation,678985170,SystemVerilog,DRAM-Cache-System-for-Matrix-Calculation,14,0,2023-08-15 21:16:58+00:00,[],
13093,https://github.com/maj77/DCFD.git,2023-07-30 11:52:36+00:00,Implementation of digital constant fraction discriminator on FPGA,0,maj77/DCFD,672528928,SystemVerilog,DCFD,140,0,2023-07-30 12:05:34+00:00,[],
13094,https://github.com/Revenant01/ALU_Verification_Environment_SV.git,2023-08-08 07:56:10+00:00,,0,Revenant01/ALU_Verification_Environment_SV,676000777,SystemVerilog,ALU_Verification_Environment_SV,5,0,2023-08-08 07:59:13+00:00,[],
13095,https://github.com/AnthonyHMR/amontero_digital_design_lab_2023.git,2023-08-18 19:24:15+00:00,,0,AnthonyHMR/amontero_digital_design_lab_2023,680276254,SystemVerilog,amontero_digital_design_lab_2023,12112,0,2023-10-20 22:35:25+00:00,[],
13096,https://github.com/kumaraman1408/MIPS_32.git,2023-08-22 06:02:09+00:00,,0,kumaraman1408/MIPS_32,681486556,SystemVerilog,MIPS_32,244,0,2023-08-22 06:06:48+00:00,[],
13097,https://github.com/bishalmondal001/FIFO_Buffer.git,2023-08-25 08:25:08+00:00,,0,bishalmondal001/FIFO_Buffer,682945335,SystemVerilog,FIFO_Buffer,14,0,2023-08-25 10:34:49+00:00,[],
13098,https://github.com/nehagour-lab/Sequential_Circuit_DFF_RTL_VERIFICATION.git,2023-08-25 19:15:59+00:00,,0,nehagour-lab/Sequential_Circuit_DFF_RTL_VERIFICATION,683174095,SystemVerilog,Sequential_Circuit_DFF_RTL_VERIFICATION,9,0,2023-08-25 19:16:43+00:00,[],
13099,https://github.com/wesleyhuhuhu/Microprocessor.git,2023-08-26 04:03:34+00:00,,0,wesleyhuhuhu/Microprocessor,683277416,SystemVerilog,Microprocessor,8337,0,2023-08-28 02:54:08+00:00,[],
13100,https://github.com/stkrknds/SPI-master-SV.git,2023-08-24 22:43:00+00:00,,0,stkrknds/SPI-master-SV,682775412,SystemVerilog,SPI-master-SV,2,0,2023-08-24 22:46:55+00:00,[],
13101,https://github.com/Rohithgarde/sv_task.git,2023-08-21 07:22:20+00:00,,0,Rohithgarde/sv_task,681063548,SystemVerilog,sv_task,2,0,2023-08-21 07:22:53+00:00,[],
13102,https://github.com/HummockHamek/I2C_Protocol_Designing_and_Verification.git,2023-08-22 10:53:44+00:00,,0,HummockHamek/I2C_Protocol_Designing_and_Verification,681594823,SystemVerilog,I2C_Protocol_Designing_and_Verification,72,0,2023-08-22 10:54:36+00:00,[],https://api.github.com/licenses/mit
13103,https://github.com/mdrazuahamed/RTL_Design_and_Verification.git,2023-08-02 05:44:33+00:00,RTL design and verification,0,mdrazuahamed/RTL_Design_and_Verification,673649880,SystemVerilog,RTL_Design_and_Verification,30681,0,2023-08-24 04:28:02+00:00,[],
13104,https://github.com/salunke4/RISC-Microprocessor.git,2023-08-18 01:09:37+00:00," Designed the memory, CPU, and I/O interface of the LC-3 microcontroller using SystemVerilog and implemented it on an FPGA board",0,salunke4/RISC-Microprocessor,679938220,SystemVerilog,RISC-Microprocessor,60,0,2024-02-05 20:32:48+00:00,[],
13105,https://github.com/nkulkarni78/SystemVerilog.git,2023-07-13 13:22:53+00:00,,0,nkulkarni78/SystemVerilog,665998544,SystemVerilog,SystemVerilog,217,0,2023-07-20 16:58:07+00:00,[],
13106,https://github.com/Anusha1617/UVM_basics.git,2023-07-07 10:01:09+00:00,,1,Anusha1617/UVM_basics,663445924,,UVM_basics,602,0,2023-07-07 10:01:09+00:00,[],
13107,https://github.com/codebjjung/UVM.git,2023-08-07 02:36:09+00:00,,0,codebjjung/UVM,675475337,SystemVerilog,UVM,33,0,2023-08-10 07:24:31+00:00,[],
13108,https://github.com/vyom-elan/AMBA-APB-protocol.git,2023-08-03 16:17:03+00:00,,0,vyom-elan/AMBA-APB-protocol,674309481,SystemVerilog,AMBA-APB-protocol,41,0,2023-08-05 17:48:45+00:00,[],
13109,https://github.com/MrDoomsday/SHA.git,2023-06-26 18:46:33+00:00,SHA algorithms in SystemVerilog language for AXI-Stream,0,MrDoomsday/SHA,658911774,SystemVerilog,SHA,15,0,2023-07-01 20:05:57+00:00,[],
13110,https://github.com/YusukeSuzuki160/Verimaker.git,2023-07-03 02:17:49+00:00,code runner for verilog,0,YusukeSuzuki160/Verimaker,661495098,SystemVerilog,Verimaker,499,0,2023-07-17 06:41:45+00:00,[],
13111,https://github.com/Arashziyaei/DSD_PROJECT_SPRING2023.git,2023-07-02 16:45:32+00:00,,0,Arashziyaei/DSD_PROJECT_SPRING2023,661376458,SystemVerilog,DSD_PROJECT_SPRING2023,12123,0,2023-07-02 16:49:55+00:00,[],
13112,https://github.com/Yazan-Habash114/UART.git,2023-07-01 07:23:18+00:00,"UART Verilog module, implementing Transmitter and Receiver using ASM.",0,Yazan-Habash114/UART,660908231,SystemVerilog,UART,16,0,2023-07-01 07:26:23+00:00,[],
13113,https://github.com/rdrehmel/prism-sp.git,2023-07-03 10:20:21+00:00,,0,rdrehmel/prism-sp,661641819,SystemVerilog,prism-sp,168,0,2023-07-03 10:22:00+00:00,[],https://api.github.com/licenses/apache-2.0
13114,https://github.com/Ulyzses/cs21_scp.git,2023-06-26 10:41:01+00:00,,0,Ulyzses/cs21_scp,658711916,SystemVerilog,cs21_scp,345,0,2023-06-26 10:41:27+00:00,[],
13115,https://github.com/Nikhilaraghuram/SystemVerilog_Test.git,2023-07-01 11:15:23+00:00,,0,Nikhilaraghuram/SystemVerilog_Test,660966969,SystemVerilog,SystemVerilog_Test,0,0,2023-07-01 11:22:45+00:00,[],
13116,https://github.com/yashwant4756/Universal-Verification-Methodology-UVM-.git,2023-07-06 09:41:02+00:00,,0,yashwant4756/Universal-Verification-Methodology-UVM-,662978296,SystemVerilog,Universal-Verification-Methodology-UVM-,17,0,2023-07-06 10:02:13+00:00,[],
13117,https://github.com/aswinsub/Code-Converters-using-Verilog.git,2023-07-22 07:38:22+00:00,,0,aswinsub/Code-Converters-using-Verilog,669413416,SystemVerilog,Code-Converters-using-Verilog,331,0,2023-07-22 07:41:40+00:00,[],
13118,https://github.com/Shivaprasadm02/router-1x3.git,2023-07-23 13:44:28+00:00,router 1x3 verification using UVM TB,0,Shivaprasadm02/router-1x3,669806246,SystemVerilog,router-1x3,29,0,2023-07-23 13:50:44+00:00,[],
13119,https://github.com/moechaker/DAC_SPI_Test_Bench.git,2023-07-24 00:26:48+00:00,This repository contains a SystemVerilog test bench and related files to verify the functionality of a DAC (Digital-to-Analog Converter) interfaced via SPI (Serial Peripheral Interface).,0,moechaker/DAC_SPI_Test_Bench,669949801,SystemVerilog,DAC_SPI_Test_Bench,290,0,2023-07-25 05:37:58+00:00,[],
13120,https://github.com/HassanKhaled11/Phase_Mixer_CDR.git,2023-07-27 11:12:00+00:00,,0,HassanKhaled11/Phase_Mixer_CDR,671458519,SystemVerilog,Phase_Mixer_CDR,6,0,2023-08-01 00:22:39+00:00,[],
13121,https://github.com/rohith2h2/100_days_of_rtl_design.git,2023-07-30 21:53:26+00:00,RTL modelling using systemverilog,0,rohith2h2/100_days_of_rtl_design,672673816,SystemVerilog,100_days_of_rtl_design,49,0,2023-07-31 01:45:24+00:00,[],
13122,https://github.com/3820bilal/SystemVerilog.git,2023-08-06 04:33:27+00:00,SystemVerilog,0,3820bilal/SystemVerilog,675187585,SystemVerilog,SystemVerilog,3,0,2023-08-06 04:40:20+00:00,[],
13123,https://github.com/vishalvp123/Constraints.git,2023-08-08 10:44:33+00:00,,0,vishalvp123/Constraints,676059870,SystemVerilog,Constraints,5,0,2023-08-09 10:22:18+00:00,[],
13124,https://github.com/stevenli518/CuBoulder_ECEN3002_FPGADesign.git,2023-08-09 23:47:12+00:00,,0,stevenli518/CuBoulder_ECEN3002_FPGADesign,676751659,SystemVerilog,CuBoulder_ECEN3002_FPGADesign,11185,0,2023-08-10 16:25:53+00:00,[],
13125,https://github.com/rawnies2/ECE-385-Final-Project.git,2023-08-10 18:56:58+00:00,Update Later,0,rawnies2/ECE-385-Final-Project,677108304,SystemVerilog,ECE-385-Final-Project,41,0,2023-08-10 18:58:48+00:00,[],
13126,https://github.com/eu820120/Asynchronous-FIFO-Verification.git,2023-07-29 04:08:44+00:00,Asynchronous FIFO Verification,0,eu820120/Asynchronous-FIFO-Verification,672142052,SystemVerilog,Asynchronous-FIFO-Verification,9,0,2023-07-29 04:10:29+00:00,[],
13127,https://github.com/SAG0RA/sgomez_digital_design_lab_2023.git,2023-08-20 20:43:06+00:00,Taller de Diseño Digital  CE 3201 | ITCR,1,SAG0RA/sgomez_digital_design_lab_2023,680922037,SystemVerilog,sgomez_digital_design_lab_2023,296418,0,2023-09-13 05:12:35+00:00,[],
13128,https://github.com/alok2802/D-ff-verification.git,2023-08-17 20:26:47+00:00,,0,alok2802/D-ff-verification,679877659,SystemVerilog,D-ff-verification,1,0,2023-08-17 20:27:37+00:00,[],
13129,https://github.com/nehagour-lab/FIFO_RTL_Verification.git,2023-08-24 21:31:17+00:00,,0,nehagour-lab/FIFO_RTL_Verification,682757672,SystemVerilog,FIFO_RTL_Verification,37,0,2023-08-24 21:54:58+00:00,[],
13130,https://github.com/elizabethkooiman/Kooiman_SoC.git,2023-08-25 15:34:54+00:00,,0,elizabethkooiman/Kooiman_SoC,683096708,SystemVerilog,Kooiman_SoC,300611,0,2023-10-20 14:24:14+00:00,[],
13131,https://github.com/mahdimoeini8102/DigitalSystems_Intro.git,2023-08-15 15:31:09+00:00,This is the first project of the Digital System course at the university and it provides an introduction with SystemVerilog HDL(Hardware Description Language).,0,mahdimoeini8102/DigitalSystems_Intro,678875141,SystemVerilog,DigitalSystems_Intro,708,0,2023-08-15 15:33:44+00:00,[],
13132,https://github.com/moechaker/AXI_Memory_Test_Bench.git,2023-08-16 07:50:25+00:00,This repository contains a comprehensive SystemVerilog test bench and related files designed to rigorously verify the functionality and data integrity of an AXI Memory.,0,moechaker/AXI_Memory_Test_Bench,679149379,SystemVerilog,AXI_Memory_Test_Bench,197,0,2023-08-16 08:01:45+00:00,[],
13133,https://github.com/riteish06/FIFO-design-and-verification-using-Verilog-SV.git,2023-08-28 15:28:46+00:00,,0,riteish06/FIFO-design-and-verification-using-Verilog-SV,684163780,SystemVerilog,FIFO-design-and-verification-using-Verilog-SV,23,0,2023-09-02 13:49:47+00:00,[],
13134,https://github.com/harshreddyP/dram_PHY.git,2023-08-27 12:18:25+00:00,,0,harshreddyP/dram_PHY,683696738,SystemVerilog,dram_PHY,8908,0,2023-08-27 12:18:39+00:00,[],
13135,https://github.com/franknguen/RTL_RISV_exam.git,2023-08-28 13:37:37+00:00,,0,franknguen/RTL_RISV_exam,684113832,SystemVerilog,RTL_RISV_exam,34999,0,2023-08-28 14:09:00+00:00,[],
13136,https://github.com/thinhngo11/Transaction-Level-Constraint.git,2023-08-04 00:52:20+00:00,,0,thinhngo11/Transaction-Level-Constraint,674440429,SystemVerilog,Transaction-Level-Constraint,91,0,2023-08-04 00:54:59+00:00,[],
13137,https://github.com/marigmsc/projeto-IH-RISCV.git,2023-08-04 21:19:36+00:00,Projeto da cadeira de InfraEstrutura de Hardware com implementações de instruções do Processador RISC-V em SystemVerilog,1,marigmsc/projeto-IH-RISCV,674815173,SystemVerilog,projeto-IH-RISCV,2707,0,2023-08-30 02:29:08+00:00,[],https://api.github.com/licenses/mit
13138,https://github.com/kakash221996/MIPS.git,2023-08-22 15:06:22+00:00,,0,kakash221996/MIPS,681699578,SystemVerilog,MIPS,9,0,2023-08-22 15:14:19+00:00,[],
13139,https://github.com/amarendrapradhan/AXI4-Lite.git,2023-08-22 17:03:56+00:00,,0,amarendrapradhan/AXI4-Lite,681745253,SystemVerilog,AXI4-Lite,8322,0,2023-09-21 00:18:47+00:00,[],
13140,https://github.com/kavanachidananda/UVM.git,2023-08-23 15:15:15+00:00,,0,kavanachidananda/UVM,682161875,SystemVerilog,UVM,2,0,2023-08-23 15:19:02+00:00,[],
13141,https://github.com/shriram616/UVM_learning_series.git,2023-08-18 14:22:56+00:00,All you need to know about UVM ,0,shriram616/UVM_learning_series,680176265,SystemVerilog,UVM_learning_series,16,0,2023-08-19 16:57:39+00:00,[],https://api.github.com/licenses/apache-2.0
13142,https://github.com/FernandoWelzel/SV-Template.git,2023-08-18 20:32:35+00:00,Template repository for SystemVerilog based projects.,0,FernandoWelzel/SV-Template,680293674,SystemVerilog,SV-Template,3,0,2023-08-18 21:20:16+00:00,[],
13143,https://github.com/ThreeBridge/AXI_LITE.git,2023-08-19 13:18:16+00:00,,0,ThreeBridge/AXI_LITE,680506361,SystemVerilog,AXI_LITE,5,0,2023-08-19 13:31:12+00:00,[],
13144,https://github.com/Ammar-10xe/AMBA-AHB3-Lite-Slave-Protocol-Verification-.git,2023-06-30 18:58:48+00:00,This repo contains the verification of AMBA AHB3 lite slave protcol verification using system verilog ,0,Ammar-10xe/AMBA-AHB3-Lite-Slave-Protocol-Verification-,660754060,SystemVerilog,AMBA-AHB3-Lite-Slave-Protocol-Verification-,1114,0,2023-06-30 19:03:51+00:00,[],
13145,https://github.com/CapSylar/yarc.git,2023-08-13 14:30:46+00:00,Yet Another RiscV Core,0,CapSylar/yarc,678052857,SystemVerilog,yarc,406,0,2023-08-15 17:51:49+00:00,[],https://api.github.com/licenses/mit
13146,https://github.com/Toporas-Tudor-Andrei/MIPS.git,2023-06-26 21:06:24+00:00,,0,Toporas-Tudor-Andrei/MIPS,658954108,SystemVerilog,MIPS,1209,0,2023-07-27 16:23:46+00:00,[],
13147,https://github.com/warrebe/Arbiter-SV-Design.git,2023-06-27 19:15:18+00:00,Design for a general use arbiter (controller),0,warrebe/Arbiter-SV-Design,659408706,SystemVerilog,Arbiter-SV-Design,73,0,2023-06-27 19:16:16+00:00,[],
13148,https://github.com/namiwijeuom/UART-Implementation-Using-FPGA.git,2023-07-03 07:23:04+00:00,"This is a group assignment done under the module EN2111 Electronic Circuit Design, Semester 4, Department of Electronic & Telecommunication Engineering, University of Moratuwa, Sri Lanka.",0,namiwijeuom/UART-Implementation-Using-FPGA,661574992,SystemVerilog,UART-Implementation-Using-FPGA,2391,0,2023-08-02 18:45:09+00:00,[],
13149,https://github.com/anshb24/SV-Examples.git,2023-07-08 04:01:04+00:00,,0,anshb24/SV-Examples,663766496,SystemVerilog,SV-Examples,681,0,2023-07-08 04:11:21+00:00,[],
13150,https://github.com/adrianmc15/SA-CERN-FPGA-Design.git,2023-07-16 22:08:32+00:00,,0,adrianmc15/SA-CERN-FPGA-Design,667174443,SystemVerilog,SA-CERN-FPGA-Design,16,0,2023-07-16 22:09:48+00:00,[],
13151,https://github.com/Sufiyan-Ahmed-khan/intelunnati_Ace.git,2023-07-14 16:19:00+00:00,,0,Sufiyan-Ahmed-khan/intelunnati_Ace,666481333,SystemVerilog,intelunnati_Ace,2816,0,2023-07-19 16:06:58+00:00,[],
13152,https://github.com/pallavikayla59/APB_ram.git,2023-07-18 15:31:55+00:00,,0,pallavikayla59/APB_ram,667915834,SystemVerilog,APB_ram,23,0,2023-07-18 15:56:46+00:00,[],
13153,https://github.com/AnubhavSinghPawar/Automatic-Washing-Machine.git,2023-08-25 17:19:13+00:00,,0,AnubhavSinghPawar/Automatic-Washing-Machine,683133238,SystemVerilog,Automatic-Washing-Machine,6,0,2023-08-25 17:20:10+00:00,[],
13154,https://github.com/mdanilow/fpga_utils.git,2023-08-27 00:41:14+00:00,,0,mdanilow/fpga_utils,683557892,SystemVerilog,fpga_utils,296,0,2023-08-29 14:22:34+00:00,[],
13155,https://github.com/A7med3id10/I2C_Bus.git,2023-08-21 21:23:49+00:00,I2C_Bus Design and Verification,1,A7med3id10/I2C_Bus,681365774,SystemVerilog,I2C_Bus,134,0,2023-08-21 21:45:07+00:00,[],
13156,https://github.com/Amith-Joy/Pipelined_CORDIC.git,2023-08-20 19:29:31+00:00,Designed a pipelined architecture of the CORDIC algorithm to find the sine and cosine of angles and implemented it using Verilog,0,Amith-Joy/Pipelined_CORDIC,680906453,SystemVerilog,Pipelined_CORDIC,152,0,2023-08-20 20:08:14+00:00,[],
13157,https://github.com/tejaskalburgi/MIPS-32-Bit-Pipelined-Processor-Implementation-in-Verilog.git,2023-08-20 18:25:05+00:00,,0,tejaskalburgi/MIPS-32-Bit-Pipelined-Processor-Implementation-in-Verilog,680889425,SystemVerilog,MIPS-32-Bit-Pipelined-Processor-Implementation-in-Verilog,2,0,2023-08-24 15:49:48+00:00,[],
13158,https://github.com/psjsptcoder/Design_and_Simulation_of_32-bit_MIPS_Processor.git,2023-08-25 12:34:55+00:00,"Implemented 32-bit MIPS processor in Verilog,integrating gate-level,dataflow & behavioral modeling techniques – Orchestrated a 5-stage pipeline architecture encompassing stages like Instruction Fetch, Decode, Execute, Memory Access, and Writeback, effectively optimizing processor performance.",0,psjsptcoder/Design_and_Simulation_of_32-bit_MIPS_Processor,683029908,SystemVerilog,Design_and_Simulation_of_32-bit_MIPS_Processor,8,0,2023-08-25 12:37:36+00:00,[],
13159,https://github.com/jagadeeshtummala/UVM_Testbench_Parallel_Load_Counter.git,2023-07-24 00:51:34+00:00,,0,jagadeeshtummala/UVM_Testbench_Parallel_Load_Counter,669953858,SystemVerilog,UVM_Testbench_Parallel_Load_Counter,7,0,2023-07-24 01:02:18+00:00,[],
13160,https://github.com/Daniyal-Tahsildar/FSM_SECURITY_VERIFICAATION.git,2023-08-15 15:47:04+00:00,"Security Verification of an FSM is a project, part of Introduction to Hardware Security course at UF",0,Daniyal-Tahsildar/FSM_SECURITY_VERIFICAATION,678881127,SystemVerilog,FSM_SECURITY_VERIFICAATION,381,0,2023-08-15 15:47:11+00:00,[],
13161,https://github.com/NicBrito/ProjetoIH.git,2023-08-18 12:36:53+00:00,Projeto de Infraestrutura de Hardware,0,NicBrito/ProjetoIH,680137786,SystemVerilog,ProjetoIH,546,0,2023-08-18 12:39:14+00:00,[],
13162,https://github.com/Sondhig/Hardware-Decompressor-.git,2023-08-18 16:57:09+00:00,System Verilog,0,Sondhig/Hardware-Decompressor-,680229488,SystemVerilog,Hardware-Decompressor-,1870,0,2023-08-18 17:02:45+00:00,[],
13163,https://github.com/Bojorge/vsm_digital-design-lab-2023.git,2023-08-18 19:23:29+00:00,,0,Bojorge/vsm_digital-design-lab-2023,680276053,SystemVerilog,vsm_digital-design-lab-2023,695142,0,2023-09-20 19:40:43+00:00,[],
13164,https://github.com/Indifference061/MIPS-PipeLine.git,2023-06-25 02:56:28+00:00,MIPS流水线设计,0,Indifference061/MIPS-PipeLine,658181457,SystemVerilog,MIPS-PipeLine,4383,0,2023-07-10 02:45:53+00:00,[],https://api.github.com/licenses/mit
13165,https://github.com/umanggarg96/axiom-vip.git,2023-06-29 19:41:17+00:00,,0,umanggarg96/axiom-vip,660340800,SystemVerilog,axiom-vip,6,0,2023-06-29 20:48:24+00:00,[],
13166,https://github.com/SayakaNabatame/Accelerator.git,2023-07-01 22:47:03+00:00,RTL Accelerator,0,SayakaNabatame/Accelerator,661136256,SystemVerilog,Accelerator,3590,0,2023-07-01 23:06:15+00:00,[],https://api.github.com/licenses/mit
13167,https://github.com/MoistReindeer/HDL-Lab.git,2023-07-02 10:30:25+00:00,,0,MoistReindeer/HDL-Lab,661272507,SystemVerilog,HDL-Lab,99,0,2023-07-02 12:50:29+00:00,[],
13168,https://github.com/RakshithaRShettigar/Single_Port_RAM.git,2023-08-01 14:22:22+00:00,Design and verification of single port RAM,0,RakshithaRShettigar/Single_Port_RAM,673394237,SystemVerilog,Single_Port_RAM,9,0,2023-08-01 14:24:27+00:00,[],
13169,https://github.com/PrathammGupta/Task3.1.verilog.git,2023-08-02 16:41:24+00:00,,0,PrathammGupta/Task3.1.verilog,673886610,SystemVerilog,Task3.1.verilog,2,0,2023-08-02 16:42:18+00:00,[],
13170,https://github.com/Nagarjun444/ALU_UVM.git,2023-08-01 09:06:31+00:00,ALU_UVM verification,0,Nagarjun444/ALU_UVM,673274142,SystemVerilog,ALU_UVM,31,0,2023-08-01 09:07:27+00:00,[],
13171,https://github.com/lenguyen8888/VerilogExamples.git,2023-08-08 13:43:39+00:00,,0,lenguyen8888/VerilogExamples,676126294,SystemVerilog,VerilogExamples,33,0,2023-08-08 13:55:08+00:00,[],
13172,https://github.com/galich1/Elastic_buffer.git,2023-08-08 14:50:13+00:00,Elastic buffer for Eridan Pre - screening Test,0,galich1/Elastic_buffer,676154164,SystemVerilog,Elastic_buffer,122,0,2023-08-08 15:16:20+00:00,[],
13173,https://github.com/LucasDamo22/uart-32-bit.git,2023-08-09 14:28:21+00:00,,0,LucasDamo22/uart-32-bit,676582596,SystemVerilog,uart-32-bit,12,0,2023-08-09 14:28:57+00:00,[],
13174,https://github.com/hassanilyas000-10xe/AMBA-AHB-3-LITE-VERIFICATION.git,2023-07-03 12:38:43+00:00,,0,hassanilyas000-10xe/AMBA-AHB-3-LITE-VERIFICATION,661691696,SystemVerilog,AMBA-AHB-3-LITE-VERIFICATION,440,0,2023-07-03 12:44:02+00:00,[],
13175,https://github.com/jpaoad31/9-Bit_CPU.git,2023-08-18 17:13:34+00:00,Design a custom ISA and CPU implementing it using SystemVerilog,0,jpaoad31/9-Bit_CPU,680234887,SystemVerilog,9-Bit_CPU,9396,0,2023-12-18 06:39:31+00:00,[],
13176,https://github.com/ThreadJava800/MetrotekLabs.git,2023-07-14 17:59:11+00:00,My FPGA-configuration internship in Metrotek,0,ThreadJava800/MetrotekLabs,666512465,SystemVerilog,MetrotekLabs,7845,0,2023-07-14 18:02:13+00:00,[],
13177,https://github.com/kcaisley/fastroic.git,2023-07-14 11:51:42+00:00,FastROIC: Procedural design generation of readout integrated circuits for ultrafast imaging  📸,0,kcaisley/fastroic,666390134,SystemVerilog,fastroic,60343,0,2023-11-15 22:40:28+00:00,[],
13178,https://github.com/meghraj1766/me.git,2023-07-08 05:58:33+00:00,,0,meghraj1766/me,663797960,SystemVerilog,me,10,0,2024-03-16 07:39:42+00:00,[],
13179,https://github.com/NikiSP/DSD_PROJECT.git,2023-07-02 18:42:49+00:00,,0,NikiSP/DSD_PROJECT,661407867,SystemVerilog,DSD_PROJECT,37344,0,2023-07-02 18:48:41+00:00,[],
13181,https://github.com/tarsojabbes/loac.git,2023-07-10 02:51:00+00:00,Roteiros desenvolvidos na disciplina de Laboratório de Organização e Arquitetura de Computadores no período 2022.2,0,tarsojabbes/loac,664457238,SystemVerilog,loac,14970,0,2023-07-14 00:43:11+00:00,"['assembly', 'fpga', 'hardware', 'hdl', 'risc-v', 'systemverilog']",
13182,https://github.com/S-E-N-S-O-H-A-M/Design-and-Verification-of-FIFO.git,2023-07-13 02:07:06+00:00,,0,S-E-N-S-O-H-A-M/Design-and-Verification-of-FIFO,665783100,SystemVerilog,Design-and-Verification-of-FIFO,122,0,2023-07-16 02:55:27+00:00,[],https://api.github.com/licenses/apache-2.0
13183,https://github.com/philiprbrenan/zeroLowLevel.git,2023-07-08 22:03:56+00:00,Low level version of zero with heap memory as a separate module ,0,philiprbrenan/zeroLowLevel,664088342,SystemVerilog,zeroLowLevel,4299,0,2023-07-08 22:10:03+00:00,[],
13184,https://github.com/dcg3-illinois/ECE-385.git,2023-07-19 05:32:08+00:00,Code written in SystemVerilog and C for ECE385: Digital Systems Laboratory at UIUC,0,dcg3-illinois/ECE-385,668134152,SystemVerilog,ECE-385,142287,0,2023-07-19 05:38:45+00:00,[],
13185,https://github.com/kangjian888/common_ips.git,2023-07-20 02:34:16+00:00,This is some common ips used in digital circuit design,0,kangjian888/common_ips,668521563,SystemVerilog,common_ips,19,0,2023-07-20 02:52:43+00:00,[],
13186,https://github.com/CgKaminski/toy-processors.git,2023-08-01 20:58:37+00:00,"Implements a 5 state pipelined processor, using risc-v architecture.",0,CgKaminski/toy-processors,673530924,SystemVerilog,toy-processors,586,0,2023-08-28 16:10:44+00:00,[],
13187,https://github.com/talhabinazmat21/verif_repo.git,2023-08-02 06:29:06+00:00,UVM veification projects,0,talhabinazmat21/verif_repo,673663001,SystemVerilog,verif_repo,251,0,2023-08-02 06:52:21+00:00,[],https://api.github.com/licenses/gpl-3.0
13188,https://github.com/tusharshenoy/4-BIT-Johnson-Counter.git,2023-08-05 10:50:31+00:00,,0,tusharshenoy/4-BIT-Johnson-Counter,674972291,SystemVerilog,4-BIT-Johnson-Counter,29,0,2023-08-05 10:53:56+00:00,[],
13189,https://github.com/thathcmus/IPsec_Core.git,2023-08-06 12:04:46+00:00,,0,thathcmus/IPsec_Core,675282200,SystemVerilog,IPsec_Core,186033,0,2023-08-06 12:14:25+00:00,[],
13190,https://github.com/chanum/uvm-1.2-src.git,2023-07-22 02:27:19+00:00,,0,chanum/uvm-1.2-src,669349895,SystemVerilog,uvm-1.2-src,2049,0,2023-07-22 02:29:33+00:00,[],https://api.github.com/licenses/apache-2.0
13191,https://github.com/MikolajSlupski/Projekt_UEC.git,2023-07-21 18:49:01+00:00,,0,MikolajSlupski/Projekt_UEC,669262570,SystemVerilog,Projekt_UEC,20449,0,2023-08-28 20:38:17+00:00,[],
13192,https://github.com/ZeHolyQofPower/verilog_rv32i.git,2023-08-05 19:29:26+00:00,A Verilog implementation of a RISC-V Processor,0,ZeHolyQofPower/verilog_rv32i,675101807,SystemVerilog,verilog_rv32i,1007,0,2023-08-07 18:24:23+00:00,[],https://api.github.com/licenses/gpl-3.0
13193,https://github.com/pulp-platform/dyn_spm.git,2023-08-11 13:18:29+00:00,,0,pulp-platform/dyn_spm,677395794,SystemVerilog,dyn_spm,381,0,2023-08-14 09:35:05+00:00,[],
13194,https://github.com/jnjnliwenjie0022/uvm_practice.git,2023-07-16 11:15:55+00:00,,0,jnjnliwenjie0022/uvm_practice,667017533,SystemVerilog,uvm_practice,463,0,2023-09-27 06:37:55+00:00,[],
13195,https://github.com/ManosMorf97/Alarm_System_Verilog.git,2023-07-19 20:26:49+00:00,,0,ManosMorf97/Alarm_System_Verilog,668443741,SystemVerilog,Alarm_System_Verilog,3,0,2023-07-19 20:27:18+00:00,[],
13196,https://github.com/wesleywu20/BasedAcc_HE.git,2023-07-27 04:55:47+00:00,,0,wesleywu20/BasedAcc_HE,671334149,SystemVerilog,BasedAcc_HE,5609,0,2023-07-27 04:56:14+00:00,[],
13197,https://github.com/moechaker/I2C_Memory_Test_Bench.git,2023-07-25 05:22:52+00:00,This repository contains a SystemVerilog test bench and related files to verify the functionality of an I2C memory device.,0,moechaker/I2C_Memory_Test_Bench,670457824,SystemVerilog,I2C_Memory_Test_Bench,232,0,2023-07-25 05:38:51+00:00,[],
13198,https://github.com/erquintana/universal-register-SV.git,2023-08-17 02:28:24+00:00,"Design and implement a Universal Register File (URF) module that supports both read and write operations. The URF should have a generic width and depth, making it flexible to use in different designs. It should support read and write operations on multiple clock cycles",0,erquintana/universal-register-SV,679509194,SystemVerilog,universal-register-SV,19,0,2023-08-17 07:34:07+00:00,[],https://api.github.com/licenses/gpl-3.0
13199,https://github.com/RedTiger111/Sobel-filter-implementation-in-Verilog.git,2023-08-20 06:10:14+00:00,"This project is a Sobel filter implementation in Verilog, targeting the Vivado 2020.2 development environment. The implementation has been verified on libertron's FPGA Starter Kit Ⅲ.",0,RedTiger111/Sobel-filter-implementation-in-Verilog,680706811,SystemVerilog,Sobel-filter-implementation-in-Verilog,4380,0,2023-08-20 06:13:27+00:00,[],
13200,https://github.com/Amith-Joy/8-Point_FFT.git,2023-08-20 18:51:20+00:00,Designed the architecture for an 8-point radix 2 decimation in time fast Fourier transform. The project also shows how the same architecture used for FFT can be used to compute the IFFT. The FFT/IFFT architecture is then pipelined to get reduce the critical time. The FFT/IFFT and its pipelined version are implemented in Verilog.,0,Amith-Joy/8-Point_FFT,680897482,SystemVerilog,8-Point_FFT,451,0,2023-08-20 19:12:25+00:00,[],
13201,https://github.com/FernandoReneMoran/MIPS_Pipeline.git,2023-08-10 23:17:15+00:00,,0,FernandoReneMoran/MIPS_Pipeline,677170684,SystemVerilog,MIPS_Pipeline,8,0,2023-08-10 23:22:57+00:00,[],
13202,https://github.com/MuhammadAmmarMalik/GCD-Calculator.git,2023-08-06 15:39:17+00:00,GCD Calculator Using Data Path & Control Logic,0,MuhammadAmmarMalik/GCD-Calculator,675338258,SystemVerilog,GCD-Calculator,6,0,2023-08-06 15:39:50+00:00,[],
13203,https://github.com/baymax06in19/ibex_core.git,2023-08-21 09:09:26+00:00,,0,baymax06in19/ibex_core,681100913,SystemVerilog,ibex_core,36,0,2023-08-21 09:10:01+00:00,[],
13204,https://github.com/baymax06in19/ibex-core-changed.git,2023-08-21 08:32:56+00:00,ibex core modifications dvcon,0,baymax06in19/ibex-core-changed,681087811,SystemVerilog,ibex-core-changed,38,0,2023-08-21 09:08:57+00:00,[],
13205,https://github.com/Veda1809/Layered_tb_for_DFF.git,2023-08-24 04:17:59+00:00,,0,Veda1809/Layered_tb_for_DFF,682388146,SystemVerilog,Layered_tb_for_DFF,18,0,2023-08-24 04:19:42+00:00,[],https://api.github.com/licenses/mit
13206,https://github.com/surendrayerragorla/UART.git,2023-08-24 06:51:32+00:00,,0,surendrayerragorla/UART,682434168,SystemVerilog,UART,47,0,2023-08-24 06:52:28+00:00,[],https://api.github.com/licenses/mit
13207,https://github.com/DeepGb/SP.git,2023-08-25 09:47:08+00:00,Implementation of MIPS-32 RISC Processor,0,DeepGb/SP,682973790,SystemVerilog,SP,9,0,2023-08-25 10:07:22+00:00,[],
13208,https://github.com/ararian/simple_uart.git,2023-06-26 14:09:02+00:00,簡単なuart通信を行うモジュール,0,ararian/simple_uart,658799205,SystemVerilog,simple_uart,89,0,2023-11-21 13:21:35+00:00,[],https://api.github.com/licenses/mit
13209,https://github.com/hdlguy/i2c_simple.git,2023-07-26 14:33:50+00:00,An attempt to write a very simple IIC interface for use in fpga designs.,0,hdlguy/i2c_simple,671099019,SystemVerilog,i2c_simple,66,0,2023-07-26 15:50:45+00:00,[],https://api.github.com/licenses/mit
13210,https://github.com/irmrz/arquitectura-de-computadoras.git,2023-08-29 22:51:41+00:00,AdC,0,irmrz/arquitectura-de-computadoras,684811833,SystemVerilog,arquitectura-de-computadoras,17880,0,2023-08-29 23:07:54+00:00,[],
13211,https://github.com/Daniyal-Tahsildar/RTL_DESIGN.git,2023-08-15 15:35:46+00:00,Some Design Examples and testbenches,0,Daniyal-Tahsildar/RTL_DESIGN,678876849,SystemVerilog,RTL_DESIGN,4,0,2023-08-15 15:35:53+00:00,[],
13212,https://github.com/ssathish26/SherwinProjects.git,2023-08-01 21:29:27+00:00,,0,ssathish26/SherwinProjects,673538572,SystemVerilog,SherwinProjects,118,0,2024-01-25 06:16:52+00:00,[],
13213,https://github.com/fan19-hub/Microprocessor-lc3.git,2023-08-02 17:29:13+00:00,,0,fan19-hub/Microprocessor-lc3,673903913,SystemVerilog,Microprocessor-lc3,1627,0,2024-01-11 20:02:18+00:00,[],
13214,https://github.com/leduchongan/RISC-V.git,2023-07-24 11:08:13+00:00,,0,leduchongan/RISC-V,670130343,SystemVerilog,RISC-V,6,0,2024-01-14 18:52:50+00:00,[],
13215,https://github.com/emirtuglu/Single-Cycle-Processor.git,2023-06-26 08:42:22+00:00,12-bit Single-cycle processor developed for Basys3 FPGA board.,0,emirtuglu/Single-Cycle-Processor,658661529,SystemVerilog,Single-Cycle-Processor,643,0,2023-06-26 08:51:07+00:00,[],
13216,https://github.com/Basti3700/BCD-converter.git,2023-07-01 13:27:52+00:00,,0,Basti3700/BCD-converter,661001141,SystemVerilog,BCD-converter,3,0,2023-07-01 13:45:36+00:00,[],
13217,https://github.com/valmyr/-SystemVerilog-para-treinamento-de-design-e-verifica-o.git,2023-07-03 20:04:43+00:00,,0,valmyr/-SystemVerilog-para-treinamento-de-design-e-verifica-o,661852945,SystemVerilog,-SystemVerilog-para-treinamento-de-design-e-verifica-o,10,0,2023-07-03 22:28:34+00:00,[],
13218,https://github.com/erquintana/system-Verilog-practice.git,2023-07-04 13:11:52+00:00,"The purpose of the ""system Verilog practice"" repo is to contain some system Verilog sources to practice and that can be executed in https://www.edaplayground.com/ simulator. ",0,erquintana/system-Verilog-practice,662149842,SystemVerilog,system-Verilog-practice,31,0,2023-07-04 15:59:52+00:00,[],https://api.github.com/licenses/gpl-3.0
13219,https://github.com/esattok/single-cycle-processor.git,2023-07-09 12:02:25+00:00,Single cycle processor that is implemented with System Verilog and tested on Vivado Basys3 FPGA ,0,esattok/single-cycle-processor,664255304,SystemVerilog,single-cycle-processor,1891,0,2023-07-27 11:32:01+00:00,[],
13220,https://github.com/JonathanPDB/PepinosDigitais.git,2023-08-01 01:49:43+00:00,,0,JonathanPDB/PepinosDigitais,673150589,SystemVerilog,PepinosDigitais,113886,0,2023-08-14 03:59:31+00:00,[],
13221,https://github.com/Ukuma012/Gameboy_on_fpga.git,2023-07-31 04:55:53+00:00,gameboy on fpga,0,Ukuma012/Gameboy_on_fpga,672752309,SystemVerilog,Gameboy_on_fpga,1,0,2023-08-02 12:22:00+00:00,[],
13222,https://github.com/iEDA-Open-Source-Core-Project/cva6.git,2023-07-31 01:59:32+00:00,,0,iEDA-Open-Source-Core-Project/cva6,672713954,SystemVerilog,cva6,38066,0,2023-07-31 02:07:39+00:00,[],
13223,https://github.com/EzzAddinKukhun/CRC.git,2023-08-21 18:21:20+00:00,,0,EzzAddinKukhun/CRC,681308387,SystemVerilog,CRC,1,0,2023-08-21 18:22:56+00:00,[],
13224,https://github.com/KushagraYADAV/SPI-Communication-System-Verification-using-System-Verilog.git,2023-08-23 16:16:13+00:00,,0,KushagraYADAV/SPI-Communication-System-Verification-using-System-Verilog,682185753,SystemVerilog,SPI-Communication-System-Verification-using-System-Verilog,4,0,2023-08-23 16:21:22+00:00,[],
13225,https://github.com/ishiaraen/SingleCycleProcessor.git,2023-08-30 12:12:29+00:00,,0,ishiaraen/SingleCycleProcessor,685050865,SystemVerilog,SingleCycleProcessor,153,0,2023-09-07 22:49:56+00:00,[],
13226,https://github.com/kosmokot45/roi-python-verilog.git,2023-07-11 14:27:53+00:00,Creating region of interest using FPGA. Preparing images to and from FPGA using Python.,0,kosmokot45/roi-python-verilog,665143949,SystemVerilog,roi-python-verilog,417,0,2023-07-11 14:50:03+00:00,[],
13227,https://github.com/DancauRares-Andrei/ImplementareMIPS.git,2023-07-03 19:55:09+00:00,Implementare simplă a unui procesor MIPS cu o instrucțiune într-o perioadă de clock. ,0,DancauRares-Andrei/ImplementareMIPS,661850289,SystemVerilog,ImplementareMIPS,31,0,2023-07-10 10:22:39+00:00,[],
13228,https://github.com/josejad42/Infra-de-Hardware.git,2023-07-15 16:00:23+00:00,Repositório criado para a resolução de tarefas/projetos relacionados à disciplina de infraestrutura de hardware 2023.1.,1,josejad42/Infra-de-Hardware,666798662,SystemVerilog,Infra-de-Hardware,448,0,2023-08-10 19:26:15+00:00,[],
13229,https://github.com/wxg-ntu/IC_DV_WARM_UP.git,2023-08-17 03:14:53+00:00,Just a simple and easy lab for IC_Verif practice.,0,wxg-ntu/IC_DV_WARM_UP,679520085,SystemVerilog,IC_DV_WARM_UP,195,0,2023-08-28 02:28:01+00:00,[],
13230,https://github.com/mahdimoeini8102/DigitalSystems_Combinational.git,2023-08-15 17:00:29+00:00,This is the fourth project of the Digital System course at the university and it's about combinational circuit desgin such as latches and flip flops using SystemVerilog HDL(Hardware Description Language).,0,mahdimoeini8102/DigitalSystems_Combinational,678909229,SystemVerilog,DigitalSystems_Combinational,513,0,2023-08-15 17:02:32+00:00,[],
13231,https://github.com/FernandoWelzel/Odyssey.git,2023-08-17 20:32:35+00:00,A RISC-V fault-tollerant processor core.,0,FernandoWelzel/Odyssey,679879175,SystemVerilog,Odyssey,702,0,2023-08-17 20:56:01+00:00,[],
13232,https://github.com/IAMJAI1510/Bubble-Trouble-FPGA.git,2023-08-27 17:00:18+00:00,,0,IAMJAI1510/Bubble-Trouble-FPGA,683776738,SystemVerilog,Bubble-Trouble-FPGA,413,0,2023-08-27 17:03:21+00:00,[],
13233,https://github.com/alexmangushev/RV32IM_CORE.git,2023-08-27 21:54:22+00:00,Open RISC-V core with support RV32IM command set,0,alexmangushev/RV32IM_CORE,683844385,SystemVerilog,RV32IM_CORE,10140,0,2023-08-30 20:06:11+00:00,[],
13234,https://github.com/JahnaviB08/fft.git,2023-08-26 10:58:47+00:00,,0,JahnaviB08/fft,683371044,SystemVerilog,fft,7,0,2023-08-26 10:59:44+00:00,[],
13235,https://github.com/Diya-Veerbhan/Verification_Concepts.git,2023-08-07 03:57:05+00:00,Verification concepts,0,Diya-Veerbhan/Verification_Concepts,675493253,SystemVerilog,Verification_Concepts,33020,0,2023-08-20 06:15:52+00:00,[],
13236,https://github.com/rajan003/RRArbiter1.git,2023-08-07 14:24:34+00:00,ROund RObin Arbiter,0,rajan003/RRArbiter1,675702350,SystemVerilog,RRArbiter1,13,0,2023-08-07 14:25:04+00:00,[],
13237,https://github.com/hassanbaroudy/Digital_IC.git,2023-08-11 11:19:30+00:00,,0,hassanbaroudy/Digital_IC,677356892,SystemVerilog,Digital_IC,54,0,2023-08-11 11:50:40+00:00,[],
13238,https://github.com/MiseryBiscuits/Examples.git,2023-07-26 18:49:34+00:00,Examples,0,MiseryBiscuits/Examples,671191946,SystemVerilog,Examples,304,0,2023-07-27 09:10:29+00:00,[],
13239,https://github.com/fedefruttero/UVM_Verification_TB.git,2023-07-17 15:15:11+00:00,,0,fedefruttero/UVM_Verification_TB,667469567,SystemVerilog,UVM_Verification_TB,58710,0,2023-10-03 16:20:37+00:00,[],
13240,https://github.com/HidetaroTanaka/HAJIME_Core.git,2023-07-11 07:52:49+00:00,Small RISC-V Processor,0,HidetaroTanaka/HAJIME_Core,664994031,SystemVerilog,HAJIME_Core,1669,0,2023-12-04 09:08:17+00:00,['risc-v'],https://api.github.com/licenses/unlicense
13241,https://github.com/fliibs/EnvSetup.git,2023-08-03 13:15:46+00:00,这个repo记录了一些环境设置方法。,1,fliibs/EnvSetup,674241747,SystemVerilog,EnvSetup,2420,0,2023-08-18 08:31:41+00:00,[],https://api.github.com/licenses/mit
13242,https://github.com/K-Rakesh200206/Parity_generator_and_checker_using_verilog.git,2023-07-18 04:51:10+00:00,,0,K-Rakesh200206/Parity_generator_and_checker_using_verilog,667686290,SystemVerilog,Parity_generator_and_checker_using_verilog,53,0,2023-07-18 04:53:54+00:00,[],
13243,https://github.com/axyrai/fullAdder_systemVerilog.git,2023-07-18 06:01:45+00:00,,0,axyrai/fullAdder_systemVerilog,667705057,SystemVerilog,fullAdder_systemVerilog,0,0,2023-07-18 06:05:07+00:00,[],
13244,https://github.com/Elondo11/vga_project_road_fighter.git,2023-07-12 18:23:04+00:00,An arcade game designed in system verilog.,0,Elondo11/vga_project_road_fighter,665672790,SystemVerilog,vga_project_road_fighter,44847,0,2023-07-13 17:59:45+00:00,[],
13245,https://github.com/Mrinal99kumar/SYNCHRONOUS_FIFO.git,2023-07-04 07:27:55+00:00,project of design and verification in system verilog,0,Mrinal99kumar/SYNCHRONOUS_FIFO,662019996,SystemVerilog,SYNCHRONOUS_FIFO,4,0,2023-07-04 07:30:11+00:00,[],https://api.github.com/licenses/mit
13246,https://github.com/jakaransingh/CLOCK-Modules.git,2023-07-05 19:14:32+00:00,,0,jakaransingh/CLOCK-Modules,662734850,SystemVerilog,CLOCK-Modules,1,0,2023-07-05 19:17:19+00:00,[],
13247,https://github.com/Foad3107/ProjectA.git,2023-07-13 10:58:08+00:00,Investigating and enhacement of dummy instruction insertion security feature in RISC-V ibex core.,0,Foad3107/ProjectA,665945862,SystemVerilog,ProjectA,4813,0,2023-07-13 11:38:30+00:00,[],https://api.github.com/licenses/apache-2.0
13248,https://github.com/erquintana/ALU_Verification_with_UVM.git,2023-07-01 02:52:51+00:00,"Simple UVM Testbench, from Spec to Testbench (ALU Verification with UVM) based on https://www.youtube.com/watch?v=2026Ei1wGTU&list=PLuYB6t6povcLRRoGxsDFai4TRWQMXCx5h",0,erquintana/ALU_Verification_with_UVM,660849980,SystemVerilog,ALU_Verification_with_UVM,224,0,2023-07-03 13:17:26+00:00,[],https://api.github.com/licenses/gpl-3.0
13249,https://github.com/look4raghav/UVM-SV.git,2023-07-04 16:10:17+00:00,Practice of UVM-SV,0,look4raghav/UVM-SV,662221742,SystemVerilog,UVM-SV,77,0,2023-07-04 17:37:07+00:00,[],https://api.github.com/licenses/mit
13250,https://github.com/warrebe/Functional-Coverage-SV-Design.git,2023-06-27 19:32:53+00:00,Project to collect functional coverage information in System Verilog. UUT is a gcd module that used Euclid's algorithm,0,warrebe/Functional-Coverage-SV-Design,659414480,SystemVerilog,Functional-Coverage-SV-Design,17,0,2023-06-27 19:33:55+00:00,[],
13251,https://github.com/C-YongHeng/apb_rtc.git,2023-07-11 12:01:59+00:00,A RTC(Real Time Clock) with APB Interface,0,C-YongHeng/apb_rtc,665085926,SystemVerilog,apb_rtc,5,0,2023-07-11 12:11:50+00:00,[],
13252,https://github.com/hirensolankiwork/RAM_SV_TB.git,2023-07-26 05:21:50+00:00,RAM testbech environment in systemverilog,0,hirensolankiwork/RAM_SV_TB,670903123,SystemVerilog,RAM_SV_TB,4,0,2023-10-09 08:52:27+00:00,[],
13253,https://github.com/Ukuma012/4_bit_cpu.git,2023-07-26 12:18:43+00:00,4 bit cpu for learn,0,Ukuma012/4_bit_cpu,671045213,SystemVerilog,4_bit_cpu,10,0,2023-07-31 04:48:20+00:00,[],
13254,https://github.com/Levent001/UVM_example.git,2023-08-06 15:14:30+00:00,《UVM实战》书本源代码,0,Levent001/UVM_example,675331416,SystemVerilog,UVM_example,3483,0,2023-08-06 15:27:21+00:00,[],
13255,https://github.com/Deepti-int/verification.git,2023-08-08 07:14:29+00:00,,0,Deepti-int/verification,675986240,SystemVerilog,verification,2,0,2023-08-08 07:57:44+00:00,[],
13256,https://github.com/RohithNagesh/Layered_testbench_for_D-Flipflop.git,2023-08-05 13:38:50+00:00,Objective is to write a layered testbench for D Flip-Flop Asynchronous Reset Low (DFF_ASRL) and to verify the functionality of the DFF_ASRL by generating different types of input stimulus,0,RohithNagesh/Layered_testbench_for_D-Flipflop,675012528,SystemVerilog,Layered_testbench_for_D-Flipflop,20,0,2023-08-05 13:53:07+00:00,[],https://api.github.com/licenses/mit
13257,https://github.com/R-Rjn/My_synchronous_fifo.git,2023-08-01 11:03:51+00:00,I am designing and verifying the synchronous fifo so that i can learn so much from it .,0,R-Rjn/My_synchronous_fifo,673316607,SystemVerilog,My_synchronous_fifo,11,0,2023-08-01 16:50:00+00:00,[],https://api.github.com/licenses/unlicense
13258,https://github.com/Abeilles14/UVM_testbench.git,2023-08-02 22:02:10+00:00,UVM testbench for an ALU DUT,0,Abeilles14/UVM_testbench,673984996,SystemVerilog,UVM_testbench,2,0,2023-08-07 05:02:49+00:00,[],
13259,https://github.com/SteveYaoLin/catchexceladressbit.git,2023-07-25 04:33:26+00:00,,0,SteveYaoLin/catchexceladressbit,670445562,SystemVerilog,catchexceladressbit,48,0,2023-11-23 14:48:37+00:00,[],
13260,https://github.com/angeelorenaoc/ED2.git,2023-08-14 03:22:08+00:00,Este repositorio contendrá todos los trabajos relacionados con la materia de Electrónica Digital 2,0,angeelorenaoc/ED2,678217139,SystemVerilog,ED2,59313,0,2023-11-17 20:49:49+00:00,[],
13261,https://github.com/Daniyal-Tahsildar/AHB_UVC_LITE_UVM.git,2023-08-14 01:59:28+00:00,AHB Lite is a simpler version of AHB consisting of only one master,0,Daniyal-Tahsildar/AHB_UVC_LITE_UVM,678199546,SystemVerilog,AHB_UVC_LITE_UVM,13,0,2023-12-06 23:07:04+00:00,[],https://api.github.com/licenses/mit
13262,https://github.com/Ryusujong/sujongryu.git,2023-07-21 06:47:29+00:00,sujong,0,Ryusujong/sujongryu,669020778,SystemVerilog,sujongryu,13,0,2023-07-22 09:24:40+00:00,[],
13263,https://github.com/carolcordeiro/loac.git,2023-08-14 11:44:25+00:00,Atividades desenvolvidas na disciplina de Laboratório de Organização e Arquitetura de Computadores.,0,carolcordeiro/loac,678366925,SystemVerilog,loac,3655,0,2023-10-28 13:07:44+00:00,[],
13264,https://github.com/RakshithaRShettigar/FIFO_code_with_CRC.git,2023-08-16 05:57:13+00:00,,0,RakshithaRShettigar/FIFO_code_with_CRC,679111682,SystemVerilog,FIFO_code_with_CRC,6,0,2023-08-17 13:44:43+00:00,[],
13265,https://github.com/asburlan01/riscv-cpu.git,2023-08-16 18:39:14+00:00,RISC-V CPU Design,0,asburlan01/riscv-cpu,679397253,SystemVerilog,riscv-cpu,30,0,2023-09-17 22:17:07+00:00,[],
13266,https://github.com/kavanachidananda/fifo.git,2023-08-17 16:54:50+00:00,,0,kavanachidananda/fifo,679804988,SystemVerilog,fifo,9,0,2023-08-17 16:59:29+00:00,[],
13267,https://github.com/wormyrocks/systemverilog-yosys-test.git,2023-08-24 01:00:39+00:00,Minimal example for a SystemVerilog project compiled with Antmicro's yosys plugin. Adapted from https://github.com/wuxx/Colorlight-FPGA-Projects,0,wormyrocks/systemverilog-yosys-test,682340760,SystemVerilog,systemverilog-yosys-test,6,0,2023-08-24 01:02:04+00:00,[],
13268,https://github.com/angusjhwu/RV32I-Pipelined-Processor.git,2023-08-24 02:23:04+00:00,,0,angusjhwu/RV32I-Pipelined-Processor,682360816,SystemVerilog,RV32I-Pipelined-Processor,15,0,2023-09-05 04:25:27+00:00,[],
13269,https://github.com/sharatkirla/UART.git,2023-08-23 17:57:18+00:00,,0,sharatkirla/UART,682223434,SystemVerilog,UART,83,0,2023-08-23 18:01:01+00:00,[],
13270,https://github.com/mralavi20/Digital-Logic-Design-Projects.git,2023-08-24 07:21:46+00:00,,0,mralavi20/Digital-Logic-Design-Projects,682444756,SystemVerilog,Digital-Logic-Design-Projects,170,0,2023-08-24 07:26:08+00:00,[],
13271,https://github.com/basictechlab/uvm-1.2.git,2023-08-26 18:21:08+00:00,,0,basictechlab/uvm-1.2,683487876,SystemVerilog,uvm-1.2,9014,0,2023-08-26 18:27:17+00:00,[],https://api.github.com/licenses/apache-2.0
13272,https://github.com/jnjnliwenjie0022/design_pattern.git,2023-08-16 18:17:34+00:00,,0,jnjnliwenjie0022/design_pattern,679389991,SystemVerilog,design_pattern,14,0,2023-08-17 00:55:11+00:00,[],
13273,https://github.com/Avi-Gulati/cpu-datapath.git,2023-08-27 00:06:15+00:00,"I designed, tested, and synthesized a MIPS multicycle processor",0,Avi-Gulati/cpu-datapath,683553205,SystemVerilog,cpu-datapath,4026,0,2023-08-27 00:07:59+00:00,[],
13274,https://github.com/ajanthan-k/Reduced-RISC-V-CPU.git,2023-06-28 10:06:05+00:00,Lab 4 groupwork for ELEC50010 - Autumn IAC,0,ajanthan-k/Reduced-RISC-V-CPU,659670870,SystemVerilog,Reduced-RISC-V-CPU,244,0,2023-06-28 10:09:22+00:00,[],
13275,https://github.com/DPhongUIT2021/Verify_FIFO.git,2023-07-03 12:49:04+00:00,Verify_FIFO,0,DPhongUIT2021/Verify_FIFO,661695702,SystemVerilog,Verify_FIFO,420,0,2023-07-03 12:57:03+00:00,[],
13276,https://github.com/keganpremuda/SystemVerilogMicroprocessor.git,2023-06-28 22:15:32+00:00,,0,keganpremuda/SystemVerilogMicroprocessor,659933081,SystemVerilog,SystemVerilogMicroprocessor,241,0,2023-06-28 22:16:32+00:00,[],
13279,https://github.com/an1k3sh/Basic-Multipliers.git,2023-06-24 18:32:33+00:00,,0,an1k3sh/Basic-Multipliers,658091481,SystemVerilog,Basic-Multipliers,5,0,2023-06-24 18:35:22+00:00,[],
13280,https://github.com/VLSIProjects/AXI.git,2023-07-20 11:54:30+00:00,,0,VLSIProjects/AXI,668698299,SystemVerilog,AXI,7,0,2023-07-20 11:57:45+00:00,[],
13281,https://github.com/Temix707/Secondary_projects.git,2023-07-18 15:55:20+00:00,Repository for secondary projects,0,Temix707/Secondary_projects,667924808,SystemVerilog,Secondary_projects,3,0,2023-07-18 16:09:51+00:00,[],
13282,https://github.com/Manimohan05/System-verilog-Max-pool.git,2023-07-16 11:21:39+00:00,Best coding practices Max pooling is an operation used in neural networks (AI) to reduce the size of an image,0,Manimohan05/System-verilog-Max-pool,667018830,SystemVerilog,System-verilog-Max-pool,18672,0,2023-07-16 11:39:40+00:00,[],
13283,https://github.com/hjs99/dma.git,2023-07-22 07:20:01+00:00,,0,hjs99/dma,669409054,SystemVerilog,dma,3,0,2023-07-24 08:43:33+00:00,[],
13284,https://github.com/akibIf/Cell-Design-For-Digital-Integrated-Circuits-CD2IC-.git,2023-07-22 18:17:58+00:00,,0,akibIf/Cell-Design-For-Digital-Integrated-Circuits-CD2IC-,669576870,SystemVerilog,Cell-Design-For-Digital-Integrated-Circuits-CD2IC-,22496,0,2023-07-22 18:19:06+00:00,[],
13285,https://github.com/quintesc/Audio_Equalizer.git,2023-07-11 15:32:28+00:00,Audio Equalizer project from my digital circuit course,0,quintesc/Audio_Equalizer,665169590,SystemVerilog,Audio_Equalizer,377,0,2023-07-11 15:36:57+00:00,[],
13286,https://github.com/Apoorvakaradi/VERILOG.git,2023-07-11 02:50:32+00:00,,0,Apoorvakaradi/VERILOG,664907003,SystemVerilog,VERILOG,0,0,2023-07-11 02:52:14+00:00,[],
13287,https://github.com/elenaledo/cocot-practices.git,2023-08-03 08:09:59+00:00,,0,elenaledo/cocot-practices,674134066,SystemVerilog,cocot-practices,24,0,2023-08-03 08:30:43+00:00,[],
13288,https://github.com/Leo-Cheung-CUHK/AHB_Lite_3.git,2023-06-29 08:35:49+00:00,,0,Leo-Cheung-CUHK/AHB_Lite_3,660097998,SystemVerilog,AHB_Lite_3,235,0,2023-07-26 07:13:23+00:00,[],
13289,https://github.com/lukeag3/Frogger.git,2023-07-13 05:31:30+00:00,,0,lukeag3/Frogger,665832502,SystemVerilog,Frogger,92,0,2023-07-13 06:46:46+00:00,[],https://api.github.com/licenses/mit
13290,https://github.com/jundijiujieke/UVM_example_code.git,2023-07-14 01:04:20+00:00,,0,jundijiujieke/UVM_example_code,666206196,SystemVerilog,UVM_example_code,391,0,2023-07-14 01:46:21+00:00,[],
13291,https://github.com/Sameekshapu/hii.git,2023-08-03 04:04:08+00:00,,0,Sameekshapu/hii,674062767,SystemVerilog,hii,223,0,2023-08-03 04:26:35+00:00,[],
13292,https://github.com/amityad33/Vending-Machine-With-Change-System.git,2023-08-08 06:10:50+00:00,"A vending machine is an automated machine that provides items to consumers after cash, or other form of payment is made.",0,amityad33/Vending-Machine-With-Change-System,675965218,SystemVerilog,Vending-Machine-With-Change-System,9,0,2023-08-08 06:16:49+00:00,[],
13293,https://github.com/IgorJoaquimn/2022-LFSR-Fibonacci.git,2023-08-07 00:21:30+00:00,,0,IgorJoaquimn/2022-LFSR-Fibonacci,675449581,SystemVerilog,2022-LFSR-Fibonacci,5629,0,2023-08-07 00:23:07+00:00,[],
13294,https://github.com/CyrilleLeGuerrier/UVM_DV_P1.git,2023-07-26 22:43:43+00:00,UVM for Verification Part 1 : Fundamentals UDEMY Course by Kumar Khandangle,0,CyrilleLeGuerrier/UVM_DV_P1,671252955,SystemVerilog,UVM_DV_P1,18,0,2023-07-26 22:50:27+00:00,[],
13295,https://github.com/Youssefmdany/Verification-of-UART-core-using-UVM.git,2023-07-25 16:01:10+00:00,Verification of UART core using UVM,1,Youssefmdany/Verification-of-UART-core-using-UVM,670691793,SystemVerilog,Verification-of-UART-core-using-UVM,14,0,2023-07-25 16:12:00+00:00,[],
13296,https://github.com/ChuanlaiZang/UVM_Verification.git,2023-07-26 08:01:48+00:00,UVM Verification example,0,ChuanlaiZang/UVM_Verification,670954934,SystemVerilog,UVM_Verification,154,0,2023-12-14 11:29:24+00:00,[],https://api.github.com/licenses/apache-2.0
13297,https://github.com/wpi-ece574-f23/ex-arithmetic.git,2023-08-29 17:41:46+00:00,,0,wpi-ece574-f23/ex-arithmetic,684711979,SystemVerilog,ex-arithmetic,108,0,2023-08-29 17:45:07+00:00,[],
13298,https://github.com/RohithNagesh/RISC-V_for_R.git,2023-08-05 12:28:58+00:00,System Verilog code for RISC-V 32bit processor which can execute only R-type instruction,0,RohithNagesh/RISC-V_for_R,674995423,SystemVerilog,RISC-V_for_R,6,0,2023-08-05 13:11:04+00:00,[],https://api.github.com/licenses/mit
13299,https://github.com/nabadir/Digital-Design.git,2023-08-09 18:00:50+00:00,,0,nabadir/Digital-Design,676662003,SystemVerilog,Digital-Design,113,0,2023-08-09 18:01:17+00:00,[],
13300,https://github.com/Rahulprakash77/Designing-FIFO-using-Verilog-and-system-Verilog.git,2023-08-23 10:24:49+00:00,,0,Rahulprakash77/Designing-FIFO-using-Verilog-and-system-Verilog,682048373,SystemVerilog,Designing-FIFO-using-Verilog-and-system-Verilog,13,0,2023-08-23 10:43:06+00:00,[],
13301,https://github.com/kernekarina/Verification_ULA_UVM_methodology.git,2023-08-21 13:44:32+00:00,Verification of an Arithmetic Logic Unit (ULA/ALU) capable of performing 7 operations,0,kernekarina/Verification_ULA_UVM_methodology,681200775,SystemVerilog,Verification_ULA_UVM_methodology,7361,0,2023-09-13 15:23:03+00:00,[],
13302,https://github.com/maharnabnath/Pipelined-MIPS32-Processor-Implementation-in-Verilog.git,2023-08-25 12:24:21+00:00,,0,maharnabnath/Pipelined-MIPS32-Processor-Implementation-in-Verilog,683026221,SystemVerilog,Pipelined-MIPS32-Processor-Implementation-in-Verilog,3,0,2023-08-25 12:33:42+00:00,[],
13303,https://github.com/ethanmpeterson/rtl-project.git,2023-08-13 04:27:56+00:00,This repository is an SystemVerilog project template that provides an example VUnit test bench and GitHub Actions job.,0,ethanmpeterson/rtl-project,677916661,SystemVerilog,rtl-project,6,0,2023-08-13 06:37:33+00:00,[],https://api.github.com/licenses/mit
13304,https://github.com/Daniyal-Tahsildar/TLM_2.0_SAMPLE_UVM.git,2023-08-12 23:48:11+00:00,A simple implementation of UVM TLM 2.0  ,0,Daniyal-Tahsildar/TLM_2.0_SAMPLE_UVM,677874176,SystemVerilog,TLM_2.0_SAMPLE_UVM,278,0,2023-08-12 23:48:17+00:00,[],
13305,https://github.com/AlejoZapata/Practica0.git,2023-08-17 15:41:27+00:00,,0,AlejoZapata/Practica0,679778369,SystemVerilog,Practica0,5,0,2023-08-17 15:44:26+00:00,[],
13306,https://github.com/CarmelitaBraga/loac-ufcg.git,2023-08-16 23:35:17+00:00,,0,CarmelitaBraga/loac-ufcg,679471857,SystemVerilog,loac-ufcg,1586,0,2023-08-20 01:08:48+00:00,[],
13307,https://github.com/febz012/Verilog-HDL-Projects.git,2023-08-14 17:35:57+00:00,A series of Verilog projects,0,febz012/Verilog-HDL-Projects,678499337,SystemVerilog,Verilog-HDL-Projects,27,0,2023-08-14 18:31:39+00:00,[],
13308,https://github.com/pulp-platform/unbent.git,2023-08-15 16:26:13+00:00,,0,pulp-platform/unbent,678896663,SystemVerilog,unbent,50,0,2023-08-15 16:26:50+00:00,[],
13309,https://github.com/wilitp/arqui.git,2023-08-30 19:58:41+00:00,,0,wilitp/arqui,685239077,SystemVerilog,arqui,5971,0,2023-08-30 19:58:51+00:00,[],
13310,https://github.com/namiwijeuom/32-Bit-Non-Pipelined-Single-Cycle-Processor.git,2023-08-25 16:12:20+00:00,"This is a project currently doing under the module EN3021 Digital System Design, Semester 5, Department of Electronic & Telecommunication Engineering, University of Moratuwa, Sri Lanka.",0,namiwijeuom/32-Bit-Non-Pipelined-Single-Cycle-Processor,683109646,SystemVerilog,32-Bit-Non-Pipelined-Single-Cycle-Processor,37462,0,2023-12-03 14:49:54+00:00,"['processor', 'processor-design', 'single-cycle', 'singlecycle-processor']",
13311,https://github.com/sourabhshenoy04/synch_mod12_counter.git,2023-08-05 05:32:09+00:00, Date of Respository Creation: 05/08/2023. This project was undertaken as a part of 4th semester System Verilog Project.,0,sourabhshenoy04/synch_mod12_counter,674901411,SystemVerilog,synch_mod12_counter,20658,0,2023-08-31 14:51:36+00:00,"['digitalsystemdesign', 'systemverilog']",
13315,https://github.com/stefana17/AMD_PRACTICA.git,2023-06-27 09:40:42+00:00,,0,stefana17/AMD_PRACTICA,659178933,SystemVerilog,AMD_PRACTICA,7358,0,2023-06-27 20:31:23+00:00,[],
13316,https://github.com/lakki0704/Verilog_Project.git,2023-06-27 04:51:51+00:00,Verilog Projects : 1) Vending Machine 2)Traffic Light Controller,0,lakki0704/Verilog_Project,659070973,SystemVerilog,Verilog_Project,266,0,2023-06-30 17:33:10+00:00,['verilog-project'],
13317,https://github.com/vijayakannamaneni/Verilog-Assignments.git,2023-07-27 04:10:57+00:00,,0,vijayakannamaneni/Verilog-Assignments,671323269,SystemVerilog,Verilog-Assignments,782,0,2023-08-24 02:01:16+00:00,[],
13318,https://github.com/HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V1.git,2023-08-03 23:24:45+00:00,RISC-V Pipelined CPU(with one cycle delay output SRAM),0,HUAIJIE0314/RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V1,674424324,SystemVerilog,RV32I-RISC-V-Pipelined-CPU-with-one-cycle-delay-SRAM_V1,7874,0,2023-08-03 23:29:10+00:00,[],
13319,https://github.com/celaltrk/MIPS-Processor.git,2023-07-06 07:22:56+00:00,A simple MIPS processor with limited functionalities implemented using SystemVerilog and Vivado.,0,celaltrk/MIPS-Processor,662925176,SystemVerilog,MIPS-Processor,8,0,2023-07-06 07:23:40+00:00,[],
13320,https://github.com/padmatejamarathu/AHB---lite.git,2023-07-06 21:46:35+00:00,,0,padmatejamarathu/AHB---lite,663240782,SystemVerilog,AHB---lite,17,0,2023-07-06 21:49:10+00:00,[],
13321,https://github.com/gouthampalem2/Design-and-Verification-of-a-I2C-based-memory-subsystem.git,2023-07-09 17:47:42+00:00,System Verilog Project with Design and Verification,0,gouthampalem2/Design-and-Verification-of-a-I2C-based-memory-subsystem,664349306,SystemVerilog,Design-and-Verification-of-a-I2C-based-memory-subsystem,1342,0,2023-07-09 17:48:26+00:00,[],
13322,https://github.com/JuniorBrice/JR-COLLEGE-SingleCycleRISC.git,2023-07-06 17:02:20+00:00,"Basic digital system that implements a single cycle datapath of a modern computer with a RISC architecture. 4 possible operations: lw, sw, add and sub.",0,JuniorBrice/JR-COLLEGE-SingleCycleRISC,663150751,SystemVerilog,JR-COLLEGE-SingleCycleRISC,14,0,2023-07-06 17:24:51+00:00,[],
13323,https://github.com/lucaslimasilvafoligem/Loac-Assembly-System_verilog_Circuitverse.git,2023-06-30 21:05:16+00:00,Loac-Assembly-System_verilog_Circuitverse,0,lucaslimasilvafoligem/Loac-Assembly-System_verilog_Circuitverse,660786571,SystemVerilog,Loac-Assembly-System_verilog_Circuitverse,25032,0,2023-06-30 21:21:13+00:00,[],
13324,https://github.com/noamgalili694/verification_enviroment.git,2023-07-05 07:16:49+00:00,,0,noamgalili694/verification_enviroment,662456376,SystemVerilog,verification_enviroment,9,0,2023-07-05 11:12:08+00:00,[],
13325,https://github.com/mgslobodian/scr1_pipe_ialu_test.git,2023-07-25 19:43:29+00:00,Testbench for addition and subtraction operations of ialu,0,mgslobodian/scr1_pipe_ialu_test,670767832,SystemVerilog,scr1_pipe_ialu_test,13,0,2023-07-25 20:33:35+00:00,[],
13326,https://github.com/jorgenkraghjakobsen/control.git,2023-07-20 12:53:23+00:00,Simple register bank with i2c interface ,0,jorgenkraghjakobsen/control,668721171,SystemVerilog,control,2223,0,2023-07-20 12:55:12+00:00,[],
13327,https://github.com/Temix707/PULPino.git,2023-07-15 12:02:53+00:00,Practical course with APB bus,0,Temix707/PULPino,666735849,SystemVerilog,PULPino,57319,0,2023-07-15 12:07:50+00:00,[],
13328,https://github.com/Ukuma012/4-bit-cpu.git,2023-07-18 13:19:09+00:00,4 bit cpu for learn,0,Ukuma012/4-bit-cpu,667861999,SystemVerilog,4-bit-cpu,12,0,2023-07-24 07:04:26+00:00,[],
13329,https://github.com/kevinHA0623/-.git,2023-07-22 09:49:34+00:00,,0,kevinHA0623/-,669444270,SystemVerilog,-,14,0,2023-07-22 09:58:32+00:00,[],
13330,https://github.com/amityad33/16-bit-Carry-Lookahead-CLA-Adder.git,2023-08-08 06:29:35+00:00,16-bit Carry Look-ahead Adder circuits designed by cascading the 4-bit adder circuit with carry logic.,0,amityad33/16-bit-Carry-Lookahead-CLA-Adder,675971268,SystemVerilog,16-bit-Carry-Lookahead-CLA-Adder,2,0,2023-08-08 06:30:55+00:00,[],
13331,https://github.com/gabrielchin96/utp-hft.git,2023-08-10 13:58:16+00:00,RTL and Testbench for FIX parser ,0,gabrielchin96/utp-hft,676999815,SystemVerilog,utp-hft,11,0,2023-08-10 14:02:24+00:00,[],https://api.github.com/licenses/mit
13332,https://github.com/gdl1245105585/test.git,2023-08-10 13:34:22+00:00,,0,gdl1245105585/test,676990445,SystemVerilog,test,35521,0,2023-08-11 03:12:42+00:00,[],
13333,https://github.com/jayant31j/SIT329-4.1P.git,2023-08-11 05:44:14+00:00,VERILOG PART II,0,jayant31j/SIT329-4.1P,677254453,SystemVerilog,SIT329-4.1P,6,0,2023-08-11 05:49:01+00:00,[],
13334,https://github.com/sachinym-git/AXI123.git,2023-08-13 07:08:31+00:00,,0,sachinym-git/AXI123,677947206,SystemVerilog,AXI123,68,0,2023-08-13 07:08:48+00:00,[],https://api.github.com/licenses/mit
13335,https://github.com/sebasqr22/squesada_ylopez_mgarro_digital_design_lab_2023.git,2023-08-23 01:40:40+00:00,,0,sebasqr22/squesada_ylopez_mgarro_digital_design_lab_2023,681890167,SystemVerilog,squesada_ylopez_mgarro_digital_design_lab_2023,68628,0,2023-09-27 05:02:18+00:00,[],
13336,https://github.com/RuzannaAleksanyan/digital_design_training.git,2023-08-17 21:37:28+00:00,,0,RuzannaAleksanyan/digital_design_training,679894983,SystemVerilog,digital_design_training,20,0,2023-08-17 21:45:29+00:00,[],
13337,https://github.com/dvsprouts/dvs_clk_rst_vip.git,2023-08-27 17:20:14+00:00,,1,dvsprouts/dvs_clk_rst_vip,683782576,SystemVerilog,dvs_clk_rst_vip,34,0,2023-09-27 15:24:23+00:00,[],
13338,https://github.com/smyy1001/bilkent_cs223.git,2023-07-27 14:15:08+00:00,Bilkent CS223 Spring 2023,0,smyy1001/bilkent_cs223,671525964,SystemVerilog,bilkent_cs223,3140,0,2023-08-10 12:57:10+00:00,[],
13339,https://github.com/Tse3792/UVM_Learning.git,2023-07-27 14:07:17+00:00,Only for learning,0,Tse3792/UVM_Learning,671522845,SystemVerilog,UVM_Learning,581,0,2023-07-27 14:29:00+00:00,[],https://api.github.com/licenses/gpl-3.0
13340,https://github.com/anudeepnrao/complex8smul.git,2023-08-03 09:34:05+00:00,Complex Multiplier with 8bit unsigned operand inputs,0,anudeepnrao/complex8smul,674163643,SystemVerilog,complex8smul,5,0,2023-08-26 05:48:19+00:00,[],https://api.github.com/licenses/mit
13341,https://github.com/Maani02/fifo_implementation.git,2023-08-18 09:59:09+00:00,,0,Maani02/fifo_implementation,680085894,SystemVerilog,fifo_implementation,48,0,2023-09-19 04:36:48+00:00,[],
13342,https://github.com/tonyalfred/APB-Master-Agent-UVM-VIP.git,2023-08-18 18:53:18+00:00,,0,tonyalfred/APB-Master-Agent-UVM-VIP,680266577,SystemVerilog,APB-Master-Agent-UVM-VIP,14,0,2023-08-18 18:56:06+00:00,[],
13343,https://github.com/thinhngo11/DUT-aware-Scoreboards.git,2023-08-20 20:16:03+00:00,,0,thinhngo11/DUT-aware-Scoreboards,680916525,SystemVerilog,DUT-aware-Scoreboards,18,0,2023-08-20 20:19:48+00:00,[],
13344,https://github.com/KushagraYADAV/Pipelined-MIPS32-Processor-Implementation-in-Verilog.git,2023-08-21 11:33:17+00:00,,0,KushagraYADAV/Pipelined-MIPS32-Processor-Implementation-in-Verilog,681151004,SystemVerilog,Pipelined-MIPS32-Processor-Implementation-in-Verilog,4,0,2023-08-23 12:21:19+00:00,[],
13345,https://github.com/vakshit/cse-bubble.git,2023-08-21 14:04:50+00:00,A basic processor written in MIPS Assembly to support basic operations like arithmatic operations and conditional branching.,0,vakshit/cse-bubble,681209518,SystemVerilog,cse-bubble,275,0,2023-08-21 14:31:10+00:00,[],https://api.github.com/licenses/mit
13346,https://github.com/wpi-ece574-f23/ex-expressions.git,2023-08-24 18:31:05+00:00,,0,wpi-ece574-f23/ex-expressions,682701062,SystemVerilog,ex-expressions,30,0,2023-08-24 18:32:40+00:00,[],
13347,https://github.com/raccog/PumpkinComputer.git,2023-08-26 20:34:26+00:00,,0,raccog/PumpkinComputer,683518797,SystemVerilog,PumpkinComputer,82,0,2023-09-12 13:33:52+00:00,[],
13348,https://github.com/yashdabke/Digital-Design-Programs-using-System-Verilog.git,2023-08-20 18:20:26+00:00,System Verilog coding exercises for CADD.,0,yashdabke/Digital-Design-Programs-using-System-Verilog,680887996,SystemVerilog,Digital-Design-Programs-using-System-Verilog,14,0,2023-12-30 13:27:03+00:00,[],
13349,https://github.com/amidthestars/DAV-Outreach-Module-Solutions.git,2023-07-10 01:40:47+00:00,,0,amidthestars/DAV-Outreach-Module-Solutions,664441850,SystemVerilog,DAV-Outreach-Module-Solutions,55,0,2024-01-03 06:30:23+00:00,[],
13350,https://github.com/ShashankOV/noc.git,2023-08-24 02:58:39+00:00,Simple Intel FPGA Optimized NoC,0,ShashankOV/noc,682369577,SystemVerilog,noc,300,0,2023-11-28 17:56:57+00:00,[],https://api.github.com/licenses/mit
13351,https://github.com/Sirius1232/ComputerArchitecture-CMU.git,2023-08-17 08:08:14+00:00,Labs of Computer Architecture Course (CMU 18-447),0,Sirius1232/ComputerArchitecture-CMU,679607759,SystemVerilog,ComputerArchitecture-CMU,1188,0,2023-08-19 09:46:22+00:00,[],
13352,https://github.com/mohamedelshafie/Verifying-ALU-using-UVM.git,2023-07-02 22:24:08+00:00,,0,mohamedelshafie/Verifying-ALU-using-UVM,661453530,SystemVerilog,Verifying-ALU-using-UVM,42,0,2023-07-02 23:09:21+00:00,[],
13353,https://github.com/dsellerbrock/SystemVerilog_Prisoners.git,2023-07-02 19:02:35+00:00,,0,dsellerbrock/SystemVerilog_Prisoners,661412736,SystemVerilog,SystemVerilog_Prisoners,4,0,2023-07-02 19:02:41+00:00,[],
13354,https://github.com/maxsofar/044252---sim2.git,2023-06-29 06:17:03+00:00,,0,maxsofar/044252---sim2,660049682,SystemVerilog,044252---sim2,8,0,2023-08-08 20:53:30+00:00,[],
13355,https://github.com/LiZhao1998/UVM_Test.git,2023-07-13 15:44:14+00:00,,0,LiZhao1998/UVM_Test,666053528,SystemVerilog,UVM_Test,6,0,2023-07-13 16:21:43+00:00,[],
13356,https://github.com/yangzeyu1026/CACHE_VICTIM_PREFETECH.git,2023-08-28 01:36:31+00:00,This is the code that implement a write-back directly-mapped cache with victim buffer and hardware prefetch.,0,yangzeyu1026/CACHE_VICTIM_PREFETECH,683883744,SystemVerilog,CACHE_VICTIM_PREFETECH,59,0,2023-08-28 01:39:22+00:00,[],
13357,https://github.com/brunomoraislopes1/alura.site.git,2023-08-07 18:06:01+00:00,,0,brunomoraislopes1/alura.site,675785573,SystemVerilog,alura.site,1204,0,2023-08-07 18:36:44+00:00,[],https://api.github.com/licenses/mit
13358,https://github.com/anj501/CS120A.git,2023-08-27 00:32:58+00:00,School Projects for Logic Design,0,anj501/CS120A,683556793,SystemVerilog,CS120A,11,0,2023-08-27 00:34:59+00:00,[],
13359,https://github.com/farbodfld/Computer-Architecture.git,2023-08-14 11:07:10+00:00,You can find my all projects for Computer-Architecture course at Shahid-Beheshti-University (SBU),0,farbodfld/Computer-Architecture,678354438,SystemVerilog,Computer-Architecture,77961,0,2023-08-14 12:42:51+00:00,[],
13360,https://github.com/kirollos9/multi_mode_counter.git,2023-07-27 13:35:30+00:00,,0,kirollos9/multi_mode_counter,671510365,SystemVerilog,multi_mode_counter,2,0,2023-07-27 13:36:57+00:00,[],
13361,https://github.com/GURUNAM97/uvm-core.git,2023-08-03 16:39:12+00:00,,0,GURUNAM97/uvm-core,674316858,SystemVerilog,uvm-core,764,0,2023-08-03 16:39:30+00:00,[],https://api.github.com/licenses/apache-2.0
13362,https://github.com/Ishaananish/AHB_Bus_Protocol.git,2023-08-25 05:55:56+00:00,,0,Ishaananish/AHB_Bus_Protocol,682894695,SystemVerilog,AHB_Bus_Protocol,14,0,2023-08-25 05:57:45+00:00,[],https://api.github.com/licenses/mit
13363,https://github.com/jayant31j/SIT329-5.1P.git,2023-08-18 08:42:12+00:00,VERILOG PART III,0,jayant31j/SIT329-5.1P,680059001,SystemVerilog,SIT329-5.1P,4,0,2023-08-18 08:48:19+00:00,[],
13364,https://github.com/akashsaraswatt/Latest_code.git,2023-08-22 10:50:41+00:00,,0,akashsaraswatt/Latest_code,681593767,SystemVerilog,Latest_code,13,0,2023-08-22 11:19:09+00:00,[],
13365,https://github.com/zhuding924/uvm-s02-master.git,2023-08-22 11:36:37+00:00,,0,zhuding924/uvm-s02-master,681610274,SystemVerilog,uvm-s02-master,12,0,2023-08-23 14:01:56+00:00,[],
13366,https://github.com/maharnabnath/Pipelined-3-Level-Unsigned-Multiplier-using-Verilog.git,2023-08-25 12:34:45+00:00,,0,maharnabnath/Pipelined-3-Level-Unsigned-Multiplier-using-Verilog,683029852,SystemVerilog,Pipelined-3-Level-Unsigned-Multiplier-using-Verilog,3,0,2023-08-25 12:42:09+00:00,[],
13367,https://github.com/balaji-vbr/Design-and-Verification-of-a-FIFO-with-Circular-Buffer.git,2023-07-31 18:23:24+00:00,,0,balaji-vbr/Design-and-Verification-of-a-FIFO-with-Circular-Buffer,673040365,SystemVerilog,Design-and-Verification-of-a-FIFO-with-Circular-Buffer,154,0,2023-07-31 18:25:31+00:00,[],
13368,https://github.com/KimSeongGyul/lab1.git,2023-07-25 04:07:54+00:00,prj about commento lab1,0,KimSeongGyul/lab1,670439436,SystemVerilog,lab1,285,0,2023-07-25 04:14:42+00:00,[],
13369,https://github.com/EzzAddinKukhun/UART_TX_SV.git,2023-08-19 21:27:00+00:00,,0,EzzAddinKukhun/UART_TX_SV,680627840,SystemVerilog,UART_TX_SV,2,0,2023-08-19 21:29:37+00:00,[],
13370,https://github.com/cepdnaclk/e19-co227-Developing-image-capturing-and-analysing-system-using-FPGA.git,2023-08-23 07:07:58+00:00,Developing a simple FPGA image processing application to high speed image  capturing and analysis. ,2,cepdnaclk/e19-co227-Developing-image-capturing-and-analysing-system-using-FPGA,681978543,SystemVerilog,e19-co227-Developing-image-capturing-and-analysing-system-using-FPGA,11583,0,2023-09-21 00:38:10+00:00,[],
13371,https://github.com/vicg42/ialu_test.git,2023-06-24 16:23:47+00:00,testing work with UVM (Universal Verification Methodology),0,vicg42/ialu_test,658057624,SystemVerilog,ialu_test,723,0,2023-06-26 09:28:33+00:00,[],
13372,https://github.com/yurinvv/test_task_1.git,2023-07-07 19:38:08+00:00,,0,yurinvv/test_task_1,663648151,SystemVerilog,test_task_1,61942,0,2023-10-15 18:57:34+00:00,[],
13373,https://github.com/akmsw/adc-tp3.git,2023-07-05 16:04:06+00:00,,0,akmsw/adc-tp3,662665081,SystemVerilog,adc-tp3,28390,0,2023-09-24 00:45:11+00:00,[],
13374,https://github.com/Bipasha02/HighSpeed-CarryLookAhead-Adder.git,2023-07-07 07:10:43+00:00,,0,Bipasha02/HighSpeed-CarryLookAhead-Adder,663384044,SystemVerilog,HighSpeed-CarryLookAhead-Adder,2,0,2023-10-23 07:31:13+00:00,[],
13375,https://github.com/teja-91/OpenPyDV.git,2023-07-09 08:01:52+00:00,A repository of experiments with Open source DV workflows,0,teja-91/OpenPyDV,664198902,SystemVerilog,OpenPyDV,218,0,2023-09-21 15:07:18+00:00,[],https://api.github.com/licenses/apache-2.0
13376,https://github.com/humayunsiraj123/RISC_V.git,2023-07-03 21:13:26+00:00,,0,humayunsiraj123/RISC_V,661870684,SystemVerilog,RISC_V,436,0,2023-07-03 21:17:53+00:00,[],
13377,https://github.com/vmartirosyan/cpu_in_verilog.git,2023-07-03 10:32:16+00:00,An 8-bit CPU design in Verilog.,0,vmartirosyan/cpu_in_verilog,661645948,SystemVerilog,cpu_in_verilog,12,0,2023-07-03 10:48:09+00:00,[],
13378,https://github.com/shri1407/uvm_codes.git,2023-06-29 08:51:58+00:00,,0,shri1407/uvm_codes,660103784,SystemVerilog,uvm_codes,20,0,2023-06-29 19:51:45+00:00,[],
13379,https://github.com/ronniegertman/32x32bit-multiplier.git,2023-07-01 15:11:13+00:00,,0,ronniegertman/32x32bit-multiplier,661030121,SystemVerilog,32x32bit-multiplier,34,0,2023-07-01 15:15:50+00:00,[],
13380,https://github.com/axyrai/makefileTest.git,2023-07-18 04:41:12+00:00,,0,axyrai/makefileTest,667683701,SystemVerilog,makefileTest,0,0,2023-07-18 04:43:52+00:00,[],
13381,https://github.com/moechaker/FIFO_Test_Bench.git,2023-07-18 06:08:48+00:00,This repository contains a test bench implemented in SystemVerilog to verify the functionality of a FIFO (First-In-First-Out) design. ,0,moechaker/FIFO_Test_Bench,667707284,SystemVerilog,FIFO_Test_Bench,137,0,2023-07-25 05:38:23+00:00,[],
13382,https://github.com/barawn/firmware-pueo-turf.git,2023-07-18 18:28:47+00:00,Firmware for the PUEO TURF,0,barawn/firmware-pueo-turf,667979597,SystemVerilog,firmware-pueo-turf,235,0,2023-07-18 18:29:17+00:00,[],
13383,https://github.com/MhamedAhmad/Pinball-VGA.git,2023-07-23 05:20:34+00:00,,0,MhamedAhmad/Pinball-VGA,669687021,SystemVerilog,Pinball-VGA,1096,0,2023-07-23 05:30:50+00:00,[],
13385,https://github.com/AbhinayOja/ECE-564-Piplined-CNN-.git,2023-07-19 02:42:22+00:00,,0,AbhinayOja/ECE-564-Piplined-CNN-,668094531,SystemVerilog,ECE-564-Piplined-CNN-,872,0,2023-07-20 16:13:20+00:00,[],
13386,https://github.com/Hao-Che-Tsai/VLSI-System-Design.git,2023-07-19 22:21:32+00:00,,0,Hao-Che-Tsai/VLSI-System-Design,668470603,SystemVerilog,VLSI-System-Design,60,0,2023-07-19 23:21:31+00:00,[],
13387,https://github.com/AlPrime2k1/UVM.git,2023-07-28 20:23:19+00:00,Repository containing various UVM based programs.,0,AlPrime2k1/UVM,672061748,SystemVerilog,UVM,431,0,2023-07-28 20:28:59+00:00,[],
13388,https://github.com/Talin-Estiban/chip-design-course.git,2023-08-21 15:27:40+00:00,,0,Talin-Estiban/chip-design-course,681243990,SystemVerilog,chip-design-course,958,0,2023-10-13 14:33:39+00:00,[],
13389,https://github.com/mghgm/DSD-project.git,2023-07-02 18:52:40+00:00,,0,mghgm/DSD-project,661410419,SystemVerilog,DSD-project,496,0,2023-07-03 06:31:55+00:00,[],
13390,https://github.com/CSCE-616-FA23/code.git,2023-08-30 14:56:23+00:00,,1,CSCE-616-FA23/code,685118974,SystemVerilog,code,1097,0,2023-08-30 18:11:10+00:00,[],
13391,https://github.com/MrDoomsday/UART.git,2023-07-24 12:53:24+00:00,AXI-Lite (or Avalon-MM) UART IP-core,0,MrDoomsday/UART,670169873,SystemVerilog,UART,746,0,2024-01-28 18:18:53+00:00,[],
13392,https://github.com/Purdue-SoCET/intro-socet.git,2023-08-10 17:44:58+00:00,,0,Purdue-SoCET/intro-socet,677085487,SystemVerilog,intro-socet,160,0,2023-08-30 01:16:41+00:00,[],
13393,https://github.com/ethanmpeterson/peripherals.git,2023-08-13 23:06:32+00:00,FPGA IO Peripherals with AXI Stream Wrapping,0,ethanmpeterson/peripherals,678170308,SystemVerilog,peripherals,2674,0,2023-12-18 02:47:26+00:00,[],https://api.github.com/licenses/mit
13394,https://github.com/Ishaananish/UART.git,2023-08-23 09:53:14+00:00,,0,Ishaananish/UART,682037056,SystemVerilog,UART,85,0,2023-08-23 09:54:05+00:00,[],https://api.github.com/licenses/mit
13395,https://github.com/B1mendez/FEGprocessorx.git,2023-08-24 05:55:49+00:00,CSE 141L microprocessor project,0,B1mendez/FEGprocessorx,682413563,SystemVerilog,FEGprocessorx,741,0,2023-09-11 04:31:51+00:00,[],
13396,https://github.com/rookieovo1103/cache.git,2023-08-23 12:34:34+00:00,这是一个本科毕业设计,0,rookieovo1103/cache,682095484,SystemVerilog,cache,20,0,2023-08-23 12:38:24+00:00,[],
13397,https://github.com/surendrayerragorla/Synchronous_FIFO.git,2023-08-22 16:40:16+00:00,,0,surendrayerragorla/Synchronous_FIFO,681736519,SystemVerilog,Synchronous_FIFO,10,0,2023-08-22 16:41:30+00:00,[],https://api.github.com/licenses/mit
13398,https://github.com/kakash221996/Synchronous-FIFO.git,2023-08-22 15:15:47+00:00,,0,kakash221996/Synchronous-FIFO,681703502,SystemVerilog,Synchronous-FIFO,7,0,2023-08-22 15:28:39+00:00,[],
13399,https://github.com/surendrayerragorla/MIPS_32_Processor.git,2023-08-22 11:07:01+00:00,,0,surendrayerragorla/MIPS_32_Processor,681599412,SystemVerilog,MIPS_32_Processor,11,0,2023-08-22 11:12:01+00:00,[],https://api.github.com/licenses/mit
13400,https://github.com/Jeremy185/VeriQuiz1.git,2023-08-17 22:00:46+00:00,,0,Jeremy185/VeriQuiz1,679900030,SystemVerilog,VeriQuiz1,360,0,2023-08-17 23:28:13+00:00,[],
13401,https://github.com/woodaaron2001/Custom-8-Bit-Computer-FPGA.git,2023-08-24 16:40:00+00:00,,0,woodaaron2001/Custom-8-Bit-Computer-FPGA,682659134,SystemVerilog,Custom-8-Bit-Computer-FPGA,284272,0,2023-08-24 16:44:11+00:00,[],
13402,https://github.com/kavir999/Daniel_J_DV.git,2023-08-25 17:36:28+00:00,,0,kavir999/Daniel_J_DV,683139075,SystemVerilog,Daniel_J_DV,12,0,2023-08-25 17:38:07+00:00,[],https://api.github.com/licenses/apache-2.0
13403,https://github.com/tmarmay/AquitecturaComputador.git,2023-08-30 00:02:20+00:00,,0,tmarmay/AquitecturaComputador,684828652,SystemVerilog,AquitecturaComputador,10082,0,2023-09-05 23:50:27+00:00,[],
13404,https://github.com/irfanmao/irfan_hw.git,2023-07-17 19:18:56+00:00,,0,irfanmao/irfan_hw,667554427,SystemVerilog,irfan_hw,88,0,2023-07-17 19:31:11+00:00,[],
13405,https://github.com/bjybs123/fMAC.git,2023-08-09 08:52:36+00:00,fMAC implementation based on the paper 'FAST: DNN Training Under Variable Precision Block Floating Point with Stochastic Rounding.',0,bjybs123/fMAC,676461404,SystemVerilog,fMAC,12,0,2023-08-09 08:53:52+00:00,[],
13406,https://github.com/dbrettcom/threebit_adder.git,2023-08-06 08:08:16+00:00,,1,dbrettcom/threebit_adder,675229237,SystemVerilog,threebit_adder,1,0,2023-08-06 08:09:39+00:00,[],
13407,https://github.com/Rohithgarde/SinglePort_RAM.git,2023-08-06 14:05:26+00:00,,0,Rohithgarde/SinglePort_RAM,675312599,SystemVerilog,SinglePort_RAM,1053,0,2023-08-06 14:07:04+00:00,[],
13409,https://github.com/ghz-ws/eclypse_z7_adc_dac.git,2023-07-04 13:03:56+00:00,Eclypse Z7 ADC&DAC config.,0,ghz-ws/eclypse_z7_adc_dac,662146668,SystemVerilog,eclypse_z7_adc_dac,14,0,2023-07-04 13:04:32+00:00,[],https://api.github.com/licenses/mit
13410,https://github.com/mohamedelshafie/verifying-ALU-using-pyuvm.git,2023-07-02 23:12:31+00:00,,0,mohamedelshafie/verifying-ALU-using-pyuvm,661461534,SystemVerilog,verifying-ALU-using-pyuvm,27,0,2023-07-02 23:13:00+00:00,[],
13411,https://github.com/PRAGATI-0102/RCA-using-SV-Day-084-.git,2023-07-02 18:05:09+00:00,A Ripple Carry Adder is a digital circuit that performs binary addition of two n-bit numbers by cascading full adders.,0,PRAGATI-0102/RCA-using-SV-Day-084-,661398104,SystemVerilog,RCA-using-SV-Day-084-,145,0,2023-07-02 18:06:21+00:00,[],
13412,https://github.com/bkrishna2005/UVM.git,2023-07-06 17:14:19+00:00,,0,bkrishna2005/UVM,663154704,SystemVerilog,UVM,3,0,2023-07-16 20:22:51+00:00,[],
13413,https://github.com/anshb24/SystemVerilog-Fundamentals.git,2023-08-01 06:25:36+00:00,,0,anshb24/SystemVerilog-Fundamentals,673218974,SystemVerilog,SystemVerilog-Fundamentals,28,0,2023-08-01 06:31:49+00:00,[],
13414,https://github.com/yuri-panchul/2023-georgia-armenia-exam.git,2023-07-20 07:05:18+00:00,A repository created based on valid-ready-etc and basics-graphics-music,0,yuri-panchul/2023-georgia-armenia-exam,668592406,SystemVerilog,2023-georgia-armenia-exam,1143,0,2023-07-20 08:37:19+00:00,[],
13415,https://github.com/henrw/verilog-2-stage-ex.git,2023-06-27 13:55:41+00:00,,0,henrw/verilog-2-stage-ex,659281712,SystemVerilog,verilog-2-stage-ex,11,0,2023-06-27 13:57:39+00:00,[],
13416,https://github.com/RCTd/AMD_SummerPractice.git,2023-06-26 19:24:43+00:00,,0,RCTd/AMD_SummerPractice,658924252,SystemVerilog,AMD_SummerPractice,3753,0,2023-07-12 21:18:58+00:00,[],
13417,https://github.com/jaycordaro/audio_gain.git,2023-06-27 07:47:06+00:00,SystemVerilog Audio gain block.  Capable of adjusting PCM audio gain from -22dB to +22dB.  SPI register interface,0,jaycordaro/audio_gain,659131406,SystemVerilog,audio_gain,5,0,2023-06-27 07:59:59+00:00,"['audio', 'pcm']",
13418,https://github.com/Mohd-Adib-Khan/Finite-State-Machine-Design-for-Vending-Machine-Behavior.git,2023-08-13 06:11:19+00:00,,0,Mohd-Adib-Khan/Finite-State-Machine-Design-for-Vending-Machine-Behavior,677935489,SystemVerilog,Finite-State-Machine-Design-for-Vending-Machine-Behavior,5,0,2023-08-13 06:22:52+00:00,[],
13420,https://github.com/KID-2k-internship/Async_apb_verifiction-.git,2023-06-25 08:51:35+00:00,,0,KID-2k-internship/Async_apb_verifiction-,658263222,SystemVerilog,Async_apb_verifiction-,267,0,2023-06-25 10:17:39+00:00,[],
13421,https://github.com/MarleyLobao/histogram_sv.git,2023-07-13 03:38:32+00:00,"A simple example of how to instantiate more than once the same covergroup, either using embedded covergroups (inside a class) or in another file, like a package.",0,MarleyLobao/histogram_sv,665805264,SystemVerilog,histogram_sv,2,0,2023-07-13 03:46:00+00:00,[],
13422,https://github.com/ItteRevanth/Design_and_Verification_of_APB_RAM_SV.git,2023-07-07 06:59:10+00:00,,0,ItteRevanth/Design_and_Verification_of_APB_RAM_SV,663379941,SystemVerilog,Design_and_Verification_of_APB_RAM_SV,718,0,2023-07-07 07:04:27+00:00,[],
13423,https://github.com/mkmkk798987/adder_sv.git,2023-07-12 19:29:40+00:00,verification of adder,0,mkmkk798987/adder_sv,665694234,SystemVerilog,adder_sv,357,0,2023-07-12 19:33:34+00:00,[],
13424,https://github.com/tamangill/Sneaky-Flappy-Bird.git,2023-07-13 19:08:25+00:00,,0,tamangill/Sneaky-Flappy-Bird,666122575,SystemVerilog,Sneaky-Flappy-Bird,30,0,2023-07-13 19:10:00+00:00,[],
13425,https://github.com/hwangsab/ARM-Pipelined-CPU.git,2023-07-14 04:51:16+00:00,,0,hwangsab/ARM-Pipelined-CPU,666258833,SystemVerilog,ARM-Pipelined-CPU,1219,0,2023-07-14 20:35:03+00:00,[],
13426,https://github.com/Surtr0607/picoMIPS.git,2023-07-09 11:54:32+00:00,,0,Surtr0607/picoMIPS,664253354,SystemVerilog,picoMIPS,18,0,2023-07-09 11:56:02+00:00,[],
13427,https://github.com/NayraSousa/ProjetosSystemVerilog.git,2023-07-07 22:57:37+00:00,,0,NayraSousa/ProjetosSystemVerilog,663701284,SystemVerilog,ProjetosSystemVerilog,18,0,2023-07-07 22:59:15+00:00,[],
13428,https://github.com/Meyvnverif/SPI_verif.git,2023-07-14 18:27:30+00:00,,0,Meyvnverif/SPI_verif,666520838,SystemVerilog,SPI_verif,106,0,2023-07-14 19:10:15+00:00,[],
13429,https://github.com/boga-vidhath/SequentialMultiplier.git,2023-07-16 00:33:54+00:00,,0,boga-vidhath/SequentialMultiplier,666896717,SystemVerilog,SequentialMultiplier,2,0,2023-07-16 00:37:45+00:00,[],
13430,https://github.com/juanpablogt/Arquitectura_de_computadoras.git,2023-08-20 05:33:12+00:00,,0,juanpablogt/Arquitectura_de_computadoras,680699809,SystemVerilog,Arquitectura_de_computadoras,1467,0,2023-08-31 20:44:36+00:00,[],https://api.github.com/licenses/mit
13431,https://github.com/RadhaKuruva/SV-Practice.git,2023-07-03 23:57:22+00:00,,0,RadhaKuruva/SV-Practice,661903047,SystemVerilog,SV-Practice,4,0,2023-07-04 00:02:07+00:00,[],
13432,https://github.com/RISCY-Lib/uart_agent.git,2023-07-04 00:29:26+00:00,A UART UVM Agent,0,RISCY-Lib/uart_agent,661909303,SystemVerilog,uart_agent,20,0,2023-07-05 23:32:00+00:00,[],https://api.github.com/licenses/lgpl-2.1
13433,https://github.com/shapoco/t120-framebuff.git,2023-07-02 12:41:23+00:00,HDMI output and framebuffer sample for T120F576C-DK,0,shapoco/t120-framebuff,661305665,SystemVerilog,t120-framebuff,2115,0,2023-07-02 12:50:09+00:00,[],
13434,https://github.com/alirezasm0/dsd-proj.git,2023-07-02 19:56:00+00:00,,0,alirezasm0/dsd-proj,661425001,SystemVerilog,dsd-proj,35574,0,2023-07-02 20:11:30+00:00,[],
13435,https://github.com/jakaransingh/CDC-Modules.git,2023-07-04 20:27:08+00:00,,0,jakaransingh/CDC-Modules,662302111,SystemVerilog,CDC-Modules,14,0,2023-07-04 20:54:38+00:00,[],
13436,https://github.com/DmitryZlobec/basics-graphics-music.git,2023-07-04 17:52:05+00:00,,0,DmitryZlobec/basics-graphics-music,662256524,SystemVerilog,basics-graphics-music,1276,0,2023-07-04 17:54:04+00:00,[],
13437,https://github.com/ronniegertman/alu64bit.git,2023-06-30 14:40:23+00:00,my first uni project- creating a 64 bit alu using systemverilog,0,ronniegertman/alu64bit,660668997,SystemVerilog,alu64bit,3,0,2023-06-30 15:06:10+00:00,[],
13438,https://github.com/rcardenes/LF-Building-a-RISC-V-CPU-Core.git,2023-06-27 08:29:15+00:00,CPU-building task for the Linux Foundation RISC-V course,0,rcardenes/LF-Building-a-RISC-V-CPU-Core,659148317,SystemVerilog,LF-Building-a-RISC-V-CPU-Core,33,0,2023-07-04 16:42:54+00:00,[],
13439,https://github.com/Kakapio/RISC-V-Computer.git,2023-07-06 07:03:03+00:00,,0,Kakapio/RISC-V-Computer,662917822,SystemVerilog,RISC-V-Computer,3,0,2023-07-06 07:03:31+00:00,[],
13440,https://github.com/ronniegertman/multicycle.git,2023-07-04 15:36:02+00:00,,0,ronniegertman/multicycle,662209184,SystemVerilog,multicycle,64,0,2023-07-04 15:42:50+00:00,[],
13441,https://github.com/lowRISC/ml4dv.git,2023-07-12 11:09:02+00:00,Staging area for ml4dv collateral,0,lowRISC/ml4dv,665509367,SystemVerilog,ml4dv,318,0,2023-11-09 23:36:43+00:00,[],https://api.github.com/licenses/apache-2.0
13442,https://github.com/ShevtsovNikita/multipliers.git,2023-07-06 18:32:14+00:00,Сравнение встроенного DSP блока кристалла xilinx и умножителя с деревом Уоллеса ,0,ShevtsovNikita/multipliers,663183008,SystemVerilog,multipliers,111,0,2023-07-15 20:02:40+00:00,[],
13443,https://github.com/dcg3-illinois/Super-ECE-Bros.git,2023-07-19 04:12:24+00:00,Super Mario Bros clone written in SystemVerilog for Terasic DE10-Lite FPGA Development Board. Developed by Cain Gonzalez and Leo Gonzalez,0,dcg3-illinois/Super-ECE-Bros,668114989,SystemVerilog,Super-ECE-Bros,13741,0,2023-07-19 04:49:22+00:00,[],
13444,https://github.com/aguptad/SLC-3.git,2023-07-31 03:27:32+00:00,,0,aguptad/SLC-3,672732548,SystemVerilog,SLC-3,74,0,2023-08-08 01:53:37+00:00,[],
13445,https://github.com/Preetbatavia/System-Verilog.git,2023-08-02 17:09:10+00:00,,0,Preetbatavia/System-Verilog,673896740,SystemVerilog,System-Verilog,52,0,2023-08-03 05:25:31+00:00,[],
13446,https://github.com/kei-seu/APB_watchdog.git,2023-08-02 12:35:31+00:00,UVM verification platform for cmsdk_apb_watchdog IP core,0,kei-seu/APB_watchdog,673790974,SystemVerilog,APB_watchdog,56,0,2023-08-02 12:51:55+00:00,[],
13447,https://github.com/ChiragAumraj/FIRST-IN-FIRST-OUT--ENV.git,2023-07-18 07:07:05+00:00,,0,ChiragAumraj/FIRST-IN-FIRST-OUT--ENV,667727072,SystemVerilog,FIRST-IN-FIRST-OUT--ENV,5,0,2023-07-18 07:13:27+00:00,[],
13448,https://github.com/Wlfc912/First_UVM.git,2023-07-24 23:26:31+00:00,,0,Wlfc912/First_UVM,670376768,SystemVerilog,First_UVM,5,0,2023-08-13 22:04:33+00:00,[],
13449,https://github.com/MarleyLobao/Switch_SV_Testbench.git,2023-07-25 02:15:22+00:00,This repository organizes the ChipVerify website code so that it is executable in a verification environment that uses only the Systemverilog language resources to verify some design as an example.,0,MarleyLobao/Switch_SV_Testbench,670412661,SystemVerilog,Switch_SV_Testbench,6,0,2023-07-25 02:18:52+00:00,[],
13450,https://github.com/alpha-karthik/Verification-Codes.git,2023-07-23 18:03:08+00:00,This repository contains the System Verilog constructs use cases and examples,0,alpha-karthik/Verification-Codes,669876164,SystemVerilog,Verification-Codes,17,0,2023-07-25 05:48:02+00:00,[],https://api.github.com/licenses/gpl-3.0
13451,https://github.com/jo0012/8-Bit-CPU-in-SystemVerilog.git,2023-07-23 16:03:24+00:00,,0,jo0012/8-Bit-CPU-in-SystemVerilog,669844880,SystemVerilog,8-Bit-CPU-in-SystemVerilog,600,0,2023-07-23 16:05:25+00:00,[],
13452,https://github.com/SV-Engineer/Hardware-Description-Languages.git,2023-07-27 22:05:13+00:00,,0,SV-Engineer/Hardware-Description-Languages,671676873,SystemVerilog,Hardware-Description-Languages,1252,0,2023-07-28 21:22:58+00:00,[],https://api.github.com/licenses/gpl-3.0
13453,https://github.com/MaverickST/Digital_II.git,2023-08-23 21:29:27+00:00,,0,MaverickST/Digital_II,682292842,SystemVerilog,Digital_II,198529,0,2023-08-24 14:12:41+00:00,[],https://api.github.com/licenses/mit
13454,https://github.com/psjsptcoder/Automatic_Washing_Machine.git,2023-08-25 12:44:51+00:00,Developed finite state machine (FSM) logic to control washing cycles. Utilized Verilog’s hardware description capabilities to design the washing machine’s logic,0,psjsptcoder/Automatic_Washing_Machine,683033271,SystemVerilog,Automatic_Washing_Machine,5,0,2023-08-25 12:46:18+00:00,[],
13455,https://github.com/GiantDwarfRen/CSE-141L-Project.git,2023-08-28 19:01:31+00:00,,0,GiantDwarfRen/CSE-141L-Project,684252485,SystemVerilog,CSE-141L-Project,17759,0,2023-08-28 19:02:35+00:00,[],
13456,https://github.com/Diya-Veerbhan/COA.git,2023-08-05 08:46:32+00:00,Computer Organization and Architecture,0,Diya-Veerbhan/COA,674943142,SystemVerilog,COA,27,0,2023-08-05 08:49:23+00:00,[],
13457,https://github.com/ravitripathi02/notinline.git,2023-08-10 09:37:46+00:00,,0,ravitripathi02/notinline,676909097,SystemVerilog,notinline,3029,0,2023-08-10 09:40:15+00:00,[],
13458,https://github.com/joriolemos/arm_simgle_final.git,2023-08-12 11:40:09+00:00,Ultima versão para apresentação do trabalho,0,joriolemos/arm_simgle_final,677712859,SystemVerilog,arm_simgle_final,31,0,2023-08-12 11:55:03+00:00,[],
13459,https://github.com/thinhngo11/Coverage-First-Verification.git,2023-08-13 17:12:37+00:00,Coverage First Verification,0,thinhngo11/Coverage-First-Verification,678098832,SystemVerilog,Coverage-First-Verification,48,0,2023-08-13 17:15:07+00:00,[],
13460,https://github.com/KiuQuy/WB2APB.git,2023-08-11 15:00:55+00:00,,0,KiuQuy/WB2APB,677432942,SystemVerilog,WB2APB,27,0,2023-08-11 15:11:15+00:00,[],
13461,https://github.com/bjybs123/fp-adder.git,2023-08-14 01:29:44+00:00,32-bit floating point adder,0,bjybs123/fp-adder,678193980,SystemVerilog,fp-adder,20,0,2023-08-14 01:31:02+00:00,[],
13462,https://github.com/imanand816/Design-and-Verification-of-UART-Communication-Protocol-using-System-Verilog.git,2023-08-22 12:47:37+00:00,,0,imanand816/Design-and-Verification-of-UART-Communication-Protocol-using-System-Verilog,681638173,SystemVerilog,Design-and-Verification-of-UART-Communication-Protocol-using-System-Verilog,82,0,2023-08-25 16:22:07+00:00,[],
13463,https://github.com/sharatkirla/MPIS32.git,2023-08-23 17:36:49+00:00,,0,sharatkirla/MPIS32,682215743,SystemVerilog,MPIS32,10,0,2023-08-23 17:54:33+00:00,[],
13464,https://github.com/apriya-ram/uvm_and_gate.git,2023-08-23 06:32:55+00:00,,0,apriya-ram/uvm_and_gate,681964845,SystemVerilog,uvm_and_gate,6,0,2023-08-23 06:34:31+00:00,[],
13465,https://github.com/walker99999/pango_pcie_dma_alloc.git,2023-08-27 08:00:05+00:00,pango pcie (official design),0,walker99999/pango_pcie_dma_alloc,683636306,SystemVerilog,pango_pcie_dma_alloc,12640,0,2023-08-27 08:03:58+00:00,[],
13466,https://github.com/Sean-Fuhrman/CSE-141L.git,2023-08-27 18:42:55+00:00,,0,Sean-Fuhrman/CSE-141L,683803637,SystemVerilog,CSE-141L,108,0,2023-09-07 02:03:37+00:00,[],
13467,https://github.com/beingstrongerer/remote-repo.git,2023-08-29 13:19:28+00:00,first remote-repo,0,beingstrongerer/remote-repo,684598766,SystemVerilog,remote-repo,9,0,2023-09-07 07:16:06+00:00,[],
13468,https://github.com/Denicsr09/verificacion_IIs_2023.git,2023-08-21 01:19:35+00:00,,0,Denicsr09/verificacion_IIs_2023,680969829,SystemVerilog,verificacion_IIs_2023,34691,0,2023-11-23 07:51:02+00:00,[],
13469,https://github.com/tms4517/VGA_DDCA.git,2023-07-22 18:54:11+00:00,Driving a VGA monitor from an FPGA.,1,tms4517/VGA_DDCA,669585120,SystemVerilog,VGA_DDCA,1,0,2023-07-23 17:17:18+00:00,[],
13470,https://github.com/deepanshuv22/Projects.git,2023-08-19 23:14:21+00:00,VLSI Projects,0,deepanshuv22/Projects,680644168,SystemVerilog,Projects,990,0,2023-08-25 07:06:04+00:00,[],
13471,https://github.com/alok2802/FIFO-VERIFICATION.git,2023-08-17 19:51:41+00:00,,0,alok2802/FIFO-VERIFICATION,679867437,SystemVerilog,FIFO-VERIFICATION,2,0,2023-08-17 19:59:41+00:00,[],
13472,https://github.com/vishalvp123/FIFO-Verification.git,2023-08-04 08:03:56+00:00,Verification of FIFO with UVM,0,vishalvp123/FIFO-Verification,674549604,SystemVerilog,FIFO-Verification,63,0,2023-08-04 08:19:09+00:00,[],
13473,https://github.com/navidraeiszadeh/SBU_ComputerArchitecture_Course.git,2023-07-04 06:12:19+00:00,,0,navidraeiszadeh/SBU_ComputerArchitecture_Course,661993141,SystemVerilog,SBU_ComputerArchitecture_Course,37119,0,2023-07-11 05:03:42+00:00,[],
13474,https://github.com/liu-xueyang/zhw_silicon_compiler.git,2023-07-14 23:27:32+00:00,ZHW verilog repo to check area/power/frequency,0,liu-xueyang/zhw_silicon_compiler,666588745,SystemVerilog,zhw_silicon_compiler,10,0,2023-07-18 22:54:40+00:00,[],
13475,https://github.com/gouthampalem2/Last-Level-Cache.git,2023-07-09 17:33:12+00:00,Microprocessor  System Design Project,0,gouthampalem2/Last-Level-Cache,664345664,SystemVerilog,Last-Level-Cache,264,0,2023-07-09 17:36:57+00:00,[],
13476,https://github.com/ateeb02/3-Stage_RISC-V_Processor_with_CSR_ISR_C-Ext.git,2023-06-26 16:58:01+00:00,"This is a 3-Stage RISC-V based Pipelined Processor with Interrupt Control, Control and Status Registers and RVC Compressed Extension.",0,ateeb02/3-Stage_RISC-V_Processor_with_CSR_ISR_C-Ext,658871447,SystemVerilog,3-Stage_RISC-V_Processor_with_CSR_ISR_C-Ext,23,0,2023-06-28 18:52:05+00:00,[],
13477,https://github.com/malheir0s/circuitos-digitais-II.git,2023-07-12 19:25:53+00:00,,0,malheir0s/circuitos-digitais-II,665693057,SystemVerilog,circuitos-digitais-II,111,0,2023-07-12 19:28:27+00:00,[],
13478,https://github.com/claudioleandro14/arm_single_extended.git,2023-06-30 00:02:23+00:00,,0,claudioleandro14/arm_single_extended,660404689,SystemVerilog,arm_single_extended,4,0,2023-06-30 00:39:27+00:00,[],
13479,https://github.com/HueyVoz/VIP_I2C_SLAVE_with_SVUnittest.git,2023-06-28 03:07:13+00:00,Basic VIP I2C SLAVE using SVUnit test componet,0,HueyVoz/VIP_I2C_SLAVE_with_SVUnittest,659527004,SystemVerilog,VIP_I2C_SLAVE_with_SVUnittest,24,0,2023-06-30 06:50:02+00:00,[],
13480,https://github.com/VlsiDesignVerif/100daysofRTL.git,2023-07-01 18:27:29+00:00,,0,VlsiDesignVerif/100daysofRTL,661083281,SystemVerilog,100daysofRTL,187,0,2023-07-02 07:57:43+00:00,[],
13481,https://github.com/YazanHussnain/AHB_Slave_Verification.git,2023-07-03 09:39:41+00:00,,0,YazanHussnain/AHB_Slave_Verification,661626363,SystemVerilog,AHB_Slave_Verification,1056,0,2023-07-03 09:45:54+00:00,[],
13482,https://github.com/Nutmeg43/AHB_Interconnect.git,2023-07-16 19:36:32+00:00,AHB design based on ARM AMBA protocol ,0,Nutmeg43/AHB_Interconnect,667145390,SystemVerilog,AHB_Interconnect,8,0,2023-07-16 19:37:42+00:00,[],https://api.github.com/licenses/mit
13483,https://github.com/tms4517/SPI.git,2023-07-25 13:40:55+00:00,A SPI controller and peripheral is implemented in System Verilog.,1,tms4517/SPI,670634024,SystemVerilog,SPI,2,0,2023-07-25 16:08:17+00:00,[],
13484,https://github.com/jinmanss/fpga.git,2023-07-21 06:39:14+00:00,fpgagood,0,jinmanss/fpga,669017879,SystemVerilog,fpga,178,0,2023-07-22 08:36:29+00:00,[],
13485,https://github.com/sthd/RISC-V-accelerator.git,2023-07-19 16:29:30+00:00,An accelerator for RISC-V running on an FPGA,1,sthd/RISC-V-accelerator,668367789,SystemVerilog,RISC-V-accelerator,1564,0,2023-07-19 17:06:01+00:00,[],
13486,https://github.com/boga-vidhath/Adders.git,2023-07-16 00:39:15+00:00,,0,boga-vidhath/Adders,666897452,SystemVerilog,Adders,5,0,2023-07-16 00:41:50+00:00,[],
13487,https://github.com/RISCY-Lib/uvm_utils.git,2023-07-06 22:56:16+00:00,A collection of utility classes and headers for use in a UVM testbench,0,RISCY-Lib/uvm_utils,663256249,SystemVerilog,uvm_utils,12,0,2023-07-06 23:09:34+00:00,[],https://api.github.com/licenses/lgpl-2.1
13488,https://github.com/JasonDhand/FPGA_Geometry_Dash.git,2023-07-07 02:38:49+00:00,Created Geometry dash on an FPGA using System Verilog code. Integrated w a USB keyboard,0,JasonDhand/FPGA_Geometry_Dash,663306468,SystemVerilog,FPGA_Geometry_Dash,17,0,2023-07-08 14:57:55+00:00,[],
13489,https://github.com/odenj/100-days-of-RTL.git,2023-08-01 05:29:24+00:00,,0,odenj/100-days-of-RTL,673202858,SystemVerilog,100-days-of-RTL,16,0,2023-08-05 16:39:01+00:00,[],
13490,https://github.com/HirunaVishwamith/UART_with_FPGA.git,2023-08-06 03:04:58+00:00,,0,HirunaVishwamith/UART_with_FPGA,675171937,SystemVerilog,UART_with_FPGA,5,0,2023-08-06 03:05:46+00:00,[],
13491,https://github.com/Leeo1912/FFT_single_module_test.git,2023-08-07 07:11:29+00:00,,0,Leeo1912/FFT_single_module_test,675546692,SystemVerilog,FFT_single_module_test,16036,0,2023-08-07 08:32:39+00:00,[],https://api.github.com/licenses/mit
13492,https://github.com/LYWalker/RTL-Exercises-Public.git,2023-08-21 13:43:37+00:00,,0,LYWalker/RTL-Exercises-Public,681200417,SystemVerilog,RTL-Exercises-Public,102,0,2023-08-22 07:29:03+00:00,[],
13493,https://github.com/Shivaprasadm02/bridge-topology.git,2023-08-21 09:32:56+00:00,,0,Shivaprasadm02/bridge-topology,681109566,SystemVerilog,bridge-topology,11,0,2023-08-21 09:36:06+00:00,[],
13494,https://github.com/pgurve22/Synchronous-FIFO.git,2023-08-22 16:16:43+00:00,,0,pgurve22/Synchronous-FIFO,681727540,SystemVerilog,Synchronous-FIFO,5,0,2023-08-22 16:18:18+00:00,[],
13495,https://github.com/lucaslimacodes/RISC-V-PROJECT.git,2023-08-11 21:06:52+00:00,Projeto RISC-V da disciplina de IH,0,lucaslimacodes/RISC-V-PROJECT,677540972,SystemVerilog,RISC-V-PROJECT,725,0,2023-08-11 21:23:05+00:00,[],https://api.github.com/licenses/mit
13496,https://github.com/zmij/bldc-fpga.git,2023-08-01 11:01:30+00:00,,0,zmij/bldc-fpga,673315773,SystemVerilog,bldc-fpga,201,0,2023-08-11 20:02:08+00:00,[],https://api.github.com/licenses/mit
13497,https://github.com/laxmankumar3283/Single-Port-Ram-desgin.git,2023-08-03 12:26:33+00:00,,0,laxmankumar3283/Single-Port-Ram-desgin,674223709,SystemVerilog,Single-Port-Ram-desgin,5,0,2023-08-05 05:19:37+00:00,[],
13498,https://github.com/noorelabyad/ALU-Verification.git,2023-08-06 13:41:55+00:00,,0,noorelabyad/ALU-Verification,675306195,SystemVerilog,ALU-Verification,17,0,2023-08-06 14:09:25+00:00,[],https://api.github.com/licenses/mit
13499,https://github.com/VipulNeharwal/MIPS32BIT.git,2023-08-25 17:07:47+00:00,,0,VipulNeharwal/MIPS32BIT,683129261,SystemVerilog,MIPS32BIT,7,0,2023-08-25 17:08:34+00:00,[],
13500,https://github.com/amitind6325/MIPS_Project.git,2023-08-25 06:27:25+00:00,Implemented the 5 stages of a Pipeline,0,amitind6325/MIPS_Project,682905390,SystemVerilog,MIPS_Project,9,0,2023-08-25 06:58:41+00:00,[],
13501,https://github.com/mahamdeh0/Verilog_Repeated_Addition_Method.git,2023-08-22 16:56:54+00:00,,0,mahamdeh0/Verilog_Repeated_Addition_Method,681742729,SystemVerilog,Verilog_Repeated_Addition_Method,80,0,2023-08-22 18:11:51+00:00,[],
13502,https://github.com/dungnguyen2610/gcd.git,2023-08-22 10:08:41+00:00,,0,dungnguyen2610/gcd,681578743,SystemVerilog,gcd,92,0,2023-08-22 10:19:40+00:00,[],
13503,https://github.com/cheran96/code.git,2023-08-21 16:20:57+00:00,,0,cheran96/code,681264398,SystemVerilog,code,73,0,2023-08-21 16:23:12+00:00,[],
13504,https://github.com/Ishaananish/MIPS.git,2023-08-23 09:55:12+00:00,,0,Ishaananish/MIPS,682037767,SystemVerilog,MIPS,14,0,2023-08-23 09:56:33+00:00,[],https://api.github.com/licenses/mit
13505,https://github.com/Anand2919/VERILOGCODE.git,2023-08-27 18:11:41+00:00,,0,Anand2919/VERILOGCODE,683795854,SystemVerilog,VERILOGCODE,26,0,2023-08-27 18:27:19+00:00,[],
13506,https://github.com/hiimkimchi/Verilog-HDL-Lectures.git,2023-08-30 03:05:31+00:00,Practicing the SystemVerilog Language,0,hiimkimchi/Verilog-HDL-Lectures,684874434,SystemVerilog,Verilog-HDL-Lectures,1892,0,2023-09-04 07:34:10+00:00,[],
13507,https://github.com/Kholoud-Ebrahim/Bitwise.git,2023-08-28 23:22:42+00:00,"UVM based Verification of Bitwise Operations Design. The UVM env includes Configuration Object for each agent and also the env, also it includes Virtual Sequences and Virtual Sequencer. The simulation results contain functional and code coverage reports.",0,Kholoud-Ebrahim/Bitwise,684329955,SystemVerilog,Bitwise,172,0,2023-08-28 23:24:17+00:00,[],
13508,https://github.com/osamaalshu/HighRISC.git,2023-08-16 03:19:18+00:00,9 bit Assembly Language along with its Assembler,0,osamaalshu/HighRISC,679069950,SystemVerilog,HighRISC,1030,0,2023-08-16 03:26:07+00:00,[],
13509,https://github.com/humayunsiraj123/SPI_core.git,2023-08-21 19:43:53+00:00,implementation of serial peripheral interface using system verilog,0,humayunsiraj123/SPI_core,681337655,SystemVerilog,SPI_core,3,0,2023-12-17 19:58:12+00:00,[],
13510,https://github.com/0TulipRose0/DSP_Gold_codes.git,2023-07-22 16:15:02+00:00,"""Gold"" code generation",0,0TulipRose0/DSP_Gold_codes,669544815,SystemVerilog,DSP_Gold_codes,90,0,2023-07-31 21:59:53+00:00,[],
13511,https://github.com/trong420/some-documents.git,2023-08-17 15:05:41+00:00,"Document in VLSI, LINUX and more.",0,trong420/some-documents,679764496,SystemVerilog,some-documents,1990266,0,2023-08-26 04:07:21+00:00,[],
13512,https://github.com/michellavezzo/clock_verilog.git,2023-08-22 13:04:36+00:00,First and Last Project for  STRUCTURED DESIGN OF INTEGRATED CIRCUITS discipline at UFPB. 24h clock with system verilog + Functional verification.,0,michellavezzo/clock_verilog,681645328,SystemVerilog,clock_verilog,62,0,2023-11-09 12:52:34+00:00,"['functional-verification', 'system-verilog', 'systemverilog', 'testbench', 'verilog', '24h-clock']",https://api.github.com/licenses/mit
13513,https://github.com/hoangann23/Computer_architecture_project.git,2023-07-22 12:36:53+00:00,,0,hoangann23/Computer_architecture_project,669485039,SystemVerilog,Computer_architecture_project,1357,0,2023-07-22 12:41:10+00:00,[],
13514,https://github.com/mohamedelshafie/verifying-counter-using-UVM.git,2023-08-04 12:28:50+00:00,,0,mohamedelshafie/verifying-counter-using-UVM,674635263,SystemVerilog,verifying-counter-using-UVM,205,0,2023-08-11 20:47:36+00:00,[],
13515,https://github.com/sharathk227/SPI.git,2023-08-07 18:29:13+00:00,Verification of SPI Master-core ,0,sharathk227/SPI,675793137,SystemVerilog,SPI,9896,0,2023-08-21 11:40:36+00:00,[],
13516,https://github.com/IgorJoaquimn/2022-Logical-Minimization.git,2023-08-07 00:19:17+00:00,"use the express minimizer to simplify a 6-bit multiplier system, and implement a 4-bit multiplier in the Verilog hardware description language.",0,IgorJoaquimn/2022-Logical-Minimization,675449213,SystemVerilog,2022-Logical-Minimization,191,0,2023-08-07 00:20:27+00:00,[],
13517,https://github.com/apriya-ram/FIFO_SV_CODE.git,2023-08-10 04:16:08+00:00,,0,apriya-ram/FIFO_SV_CODE,676809348,SystemVerilog,FIFO_SV_CODE,11,0,2023-08-10 04:25:29+00:00,[],
13518,https://github.com/tms4517/Cummings_FIFO.git,2023-07-08 11:00:42+00:00,Simulation and Synthesis Techniques for Asynchronous FIFO Design,1,tms4517/Cummings_FIFO,663886269,SystemVerilog,Cummings_FIFO,52,0,2023-07-08 20:32:49+00:00,[],
13519,https://github.com/warrebe/Coverage-SV-Design.git,2023-06-27 19:22:06+00:00,"Project to test coverage on a design in system verilog, UUT is a gcd computer using Euclidian's algorithm",0,warrebe/Coverage-SV-Design,659410949,SystemVerilog,Coverage-SV-Design,14,0,2023-06-27 19:24:48+00:00,[],
13520,https://github.com/prankurverma/apb_uvm.git,2023-07-12 19:36:10+00:00,apb protocol implementation with uvm,0,prankurverma/apb_uvm,665696156,SystemVerilog,apb_uvm,68,0,2023-07-23 15:30:05+00:00,[],
13521,https://github.com/SamuelCripps/traffic_light_control.git,2023-07-11 09:25:19+00:00,,0,SamuelCripps/traffic_light_control,665028391,SystemVerilog,traffic_light_control,2,0,2023-07-11 09:30:09+00:00,[],
13522,https://github.com/benjamintaitapa/booth_mult.git,2023-07-16 03:01:24+00:00,,0,benjamintaitapa/booth_mult,666917149,SystemVerilog,booth_mult,5,0,2023-07-16 03:05:06+00:00,[],
13523,https://github.com/HUAIJIE0314/RV32I-RISC-V-Single-Cycle-CPU-with-no-delay-SRAM_V1.git,2023-07-19 15:30:48+00:00,RISC-V Single Cycle CPU (with no delay SRAM),0,HUAIJIE0314/RV32I-RISC-V-Single-Cycle-CPU-with-no-delay-SRAM_V1,668346616,SystemVerilog,RV32I-RISC-V-Single-Cycle-CPU-with-no-delay-SRAM_V1,105,0,2023-08-03 23:18:23+00:00,[],
13524,https://github.com/Vishwesh11/Basic_RISC_CPU.git,2023-07-17 16:42:07+00:00,,0,Vishwesh11/Basic_RISC_CPU,667501692,SystemVerilog,Basic_RISC_CPU,26,0,2023-08-01 02:59:49+00:00,[],
13525,https://github.com/mary-k99/debouncer.git,2023-07-26 11:40:45+00:00,lab1 task5,0,mary-k99/debouncer,671032082,SystemVerilog,debouncer,2,0,2023-07-26 15:50:16+00:00,[],
13526,https://github.com/xwhic/xjy.git,2023-07-25 05:39:39+00:00,,0,xwhic/xjy,670462240,SystemVerilog,xjy,43150,0,2023-07-25 06:08:00+00:00,[],
13527,https://github.com/CyrilleLeGuerrier/DV_Analyst_Diploma_by_S.HOSNY.git,2023-07-26 23:15:54+00:00,,0,CyrilleLeGuerrier/DV_Analyst_Diploma_by_S.HOSNY,671259275,SystemVerilog,DV_Analyst_Diploma_by_S.HOSNY,37,0,2023-07-26 23:20:42+00:00,[],
13528,https://github.com/venkata-p2498/test.git,2023-06-28 08:20:02+00:00,GitHub Actions with your C++,0,venkata-p2498/test,659626917,SystemVerilog,test,279,0,2023-08-03 09:43:04+00:00,[],https://api.github.com/licenses/mit
13529,https://github.com/UWAros/easy_rte_IEC61499.git,2023-06-27 23:58:27+00:00,,0,UWAros/easy_rte_IEC61499,659481815,SystemVerilog,easy_rte_IEC61499,12027,0,2023-06-28 00:01:06+00:00,[],
13530,https://github.com/irisalmeida/loac.git,2023-07-04 11:18:27+00:00,,0,irisalmeida/loac,662106666,SystemVerilog,loac,4416,0,2023-07-28 00:09:54+00:00,[],
13531,https://github.com/Aperture-Electronic/MorphologyFilterIP.git,2023-07-02 10:03:50+00:00,"A single channel morphology filter IP for ECG signals, etc.",1,Aperture-Electronic/MorphologyFilterIP,661265802,SystemVerilog,MorphologyFilterIP,5,0,2023-07-02 10:07:20+00:00,[],
13532,https://github.com/AtomicAnindya/pipelinedprocessor.git,2023-07-07 20:02:51+00:00,,0,AtomicAnindya/pipelinedprocessor,663656002,SystemVerilog,pipelinedprocessor,19,0,2023-07-07 20:08:21+00:00,[],
13533,https://github.com/Love-Tolstoy/verilator_test.git,2023-07-17 08:57:57+00:00,,0,Love-Tolstoy/verilator_test,667327586,SystemVerilog,verilator_test,415,0,2023-07-17 09:00:31+00:00,[],https://api.github.com/licenses/mit
13534,https://github.com/NardenSobhy/ALU_design.git,2023-07-22 16:15:33+00:00,Developing ALU that can perform 8-bit arithmetic operations.,0,NardenSobhy/ALU_design,669544966,SystemVerilog,ALU_design,9,0,2023-08-01 15:14:49+00:00,[],
13535,https://github.com/aqweszxcd/HammingCode_SystemVerilog.git,2023-08-15 09:59:38+00:00,,0,aqweszxcd/HammingCode_SystemVerilog,678758264,SystemVerilog,HammingCode_SystemVerilog,4,0,2023-08-15 10:00:03+00:00,[],https://api.github.com/licenses/unlicense
13536,https://github.com/vasantharaju1124/vasantharaju1124.git,2023-06-27 03:02:41+00:00,Config files for my GitHub profile.,0,vasantharaju1124/vasantharaju1124,659040686,SystemVerilog,vasantharaju1124,1,0,2023-06-27 03:05:25+00:00,"['config', 'github-config']",
13537,https://github.com/CristianGorceac/Practica_AMD.git,2023-06-26 17:48:43+00:00,,0,CristianGorceac/Practica_AMD,658891228,SystemVerilog,Practica_AMD,1983,0,2023-06-28 10:56:51+00:00,[],
13538,https://github.com/PRAGATI-0102/LFSR-using-SV-Day-081-.git,2023-06-29 18:16:14+00:00,An LFSR is a digital circuit that generates a pseudo-random sequence of bits based on shifting and feeding back certain bits within the register.,0,PRAGATI-0102/LFSR-using-SV-Day-081-,660312699,SystemVerilog,LFSR-using-SV-Day-081-,95,0,2023-06-29 18:16:53+00:00,[],
13539,https://github.com/ironmanna/xohw23-Hardware-and-Software-Optimization-for-regular-expression.git,2023-06-29 15:58:43+00:00,Hardware and Software Optimization for regular expressions execution exploiting compilation techniques.,0,ironmanna/xohw23-Hardware-and-Software-Optimization-for-regular-expression,660266083,SystemVerilog,xohw23-Hardware-and-Software-Optimization-for-regular-expression,11518,0,2023-06-30 21:28:28+00:00,[],https://api.github.com/licenses/mit
13540,https://github.com/scalable-arch/interfaces.git,2023-08-17 09:04:25+00:00,,0,scalable-arch/interfaces,679627804,SystemVerilog,interfaces,87662,0,2023-08-17 10:21:43+00:00,[],
13541,https://github.com/alok2802/Axi-Bus-Protocol-Verification.git,2023-08-17 18:57:16+00:00,,0,alok2802/Axi-Bus-Protocol-Verification,679849750,SystemVerilog,Axi-Bus-Protocol-Verification,8,0,2023-08-17 19:13:09+00:00,[],
13542,https://github.com/alok2802/UART-Communication-protocol-verification.git,2023-08-17 19:26:14+00:00,,0,alok2802/UART-Communication-protocol-verification,679859873,SystemVerilog,UART-Communication-protocol-verification,3,0,2023-08-17 19:28:43+00:00,[],
13543,https://github.com/dree02/8-bit_processor.git,2023-08-10 15:05:28+00:00,Embedded Systems Course Project,0,dree02/8-bit_processor,677026343,SystemVerilog,8-bit_processor,7,0,2023-08-10 15:05:55+00:00,[],
13544,https://github.com/nvchuyen/Verification_of_UART.git,2023-08-16 03:08:56+00:00,,0,nvchuyen/Verification_of_UART,679067672,SystemVerilog,Verification_of_UART,26,0,2023-08-17 03:17:55+00:00,[],
13545,https://github.com/ErickCR12/ebarrantes_digital_design_lab_2023.git,2023-08-17 15:44:18+00:00,Digital Design Repo for System Verilog and FPGA labs.,0,ErickCR12/ebarrantes_digital_design_lab_2023,679779423,SystemVerilog,ebarrantes_digital_design_lab_2023,528900,0,2023-09-25 05:33:57+00:00,[],
13546,https://github.com/Oscar-FZ/Verificacion.git,2023-08-22 00:58:56+00:00,Git de verificacion,1,Oscar-FZ/Verificacion,681412459,SystemVerilog,Verificacion,56,0,2023-08-22 01:02:25+00:00,[],
13547,https://github.com/onkarsm22/Automatic-Washing-Machine.git,2023-08-25 12:10:06+00:00,,0,onkarsm22/Automatic-Washing-Machine,683021244,SystemVerilog,Automatic-Washing-Machine,5,0,2023-08-25 12:11:37+00:00,[],
13548,https://github.com/EzzAddinKukhun/SPI.git,2023-08-21 17:50:52+00:00,,0,EzzAddinKukhun/SPI,681297505,SystemVerilog,SPI,3,0,2023-08-21 17:52:12+00:00,[],
13549,https://github.com/Nikoleta918/Verilog_Projects.git,2023-08-25 14:45:19+00:00,Various Verilog projects from when I studied in DUTH University,0,Nikoleta918/Verilog_Projects,683078442,SystemVerilog,Verilog_Projects,6,0,2023-08-25 14:48:27+00:00,[],
13550,https://github.com/KaetaXpog/tinvrv2.git,2023-08-22 12:03:38+00:00,,0,KaetaXpog/tinvrv2,681620902,SystemVerilog,tinvrv2,24446,0,2023-08-22 12:07:49+00:00,[],https://api.github.com/licenses/gpl-3.0
13551,https://github.com/kosmalex/AHB_implemetation.git,2023-08-22 14:06:01+00:00,,0,kosmalex/AHB_implemetation,681673016,SystemVerilog,AHB_implemetation,11,0,2023-08-25 18:16:41+00:00,[],https://api.github.com/licenses/apache-2.0
13552,https://github.com/thinhngo11/Beyond-SystemVerilog-Classes.git,2023-08-22 20:02:21+00:00,,0,thinhngo11/Beyond-SystemVerilog-Classes,681810464,SystemVerilog,Beyond-SystemVerilog-Classes,1,0,2023-08-22 20:06:44+00:00,[],
13553,https://github.com/Jorge-Padilla/RISC-V_Arqui.git,2023-08-25 23:13:35+00:00,This is the implementation of a OOO Superscalar RISC V processor,0,Jorge-Padilla/RISC-V_Arqui,683228124,SystemVerilog,RISC-V_Arqui,576621,0,2023-08-26 00:03:02+00:00,[],
13554,https://github.com/edsonpjr/IH.git,2023-08-29 22:41:28+00:00,,0,edsonpjr/IH,684809256,SystemVerilog,IH,7161,0,2023-08-29 22:41:46+00:00,[],https://api.github.com/licenses/mit
13555,https://github.com/minhcuong1994/100dayrtl.git,2023-08-11 07:19:00+00:00,,0,minhcuong1994/100dayrtl,677281552,SystemVerilog,100dayrtl,1823,0,2023-08-11 07:51:56+00:00,[],
13556,https://github.com/helcsnewsxd/Arquitectura-del-Computador.git,2023-08-17 11:53:24+00:00,Arquitectura de Computadoras 2023 correspondiente a 3er año - 2do semestre de Computación en FAMAF (UNC),0,helcsnewsxd/Arquitectura-del-Computador,679688376,SystemVerilog,Arquitectura-del-Computador,7157,0,2023-12-21 15:33:26+00:00,[],https://api.github.com/licenses/mit
13557,https://github.com/teodor961/async_fifo.git,2023-08-27 14:28:33+00:00,,0,teodor961/async_fifo,683732162,SystemVerilog,async_fifo,24,0,2024-02-04 12:28:30+00:00,[],
13558,https://github.com/ADolbyB/vlsi-spice-pcbs.git,2023-08-25 16:35:50+00:00,"A collection of Schematics, PCBs and VLSI work on various platforms",0,ADolbyB/vlsi-spice-pcbs,683117981,SystemVerilog,vlsi-spice-pcbs,2422,0,2024-03-09 19:07:16+00:00,"['kicad', 'ltspice', 'orcad', 'pspice', 'schematics', 'vlsi', 'vlsi-design', 'cadence', 'eda', 'eda-tools']",
13559,https://github.com/AleksandarLilic/AES-256_UVM.git,2023-08-06 17:19:50+00:00,UVM testbench for AES-256 VHDL design,0,AleksandarLilic/AES-256_UVM,675367342,SystemVerilog,AES-256_UVM,938,0,2023-08-08 07:54:24+00:00,"['aes-256', 'uvm']",https://api.github.com/licenses/gpl-3.0
13560,https://github.com/LuisPeMoraRod/lmorales_computer_architecture_1_2023_s2.git,2023-08-17 01:24:40+00:00,,0,LuisPeMoraRod/lmorales_computer_architecture_1_2023_s2,679494258,SystemVerilog,lmorales_computer_architecture_1_2023_s2,40893,0,2024-04-05 03:59:39+00:00,[],
13561,https://github.com/youcan-jpn/RV32I-single-cycle.git,2023-07-24 10:47:47+00:00,,0,youcan-jpn/RV32I-single-cycle,670123073,SystemVerilog,RV32I-single-cycle,379,0,2023-07-30 12:13:59+00:00,[],
13562,https://github.com/rakshitharnayak/plans.git,2023-07-31 09:16:30+00:00,,0,rakshitharnayak/plans,672833786,SystemVerilog,plans,1138,0,2023-08-14 11:31:25+00:00,[],
13563,https://github.com/Brianhhhhhh/Ping-Pong-Game.git,2023-07-06 09:10:41+00:00,This is a ping-pong game created using FPGA programming,0,Brianhhhhhh/Ping-Pong-Game,662965992,SystemVerilog,Ping-Pong-Game,16,0,2023-07-06 09:43:38+00:00,[],
13564,https://github.com/BharamuSK/Data_Shared_Rep.git,2023-07-07 09:20:29+00:00,,0,BharamuSK/Data_Shared_Rep,663431115,SystemVerilog,Data_Shared_Rep,171111,0,2023-07-07 09:31:01+00:00,[],
13565,https://github.com/Mohd-Adib-Khan/8-Bit-Barrel-Shifter.git,2023-07-28 10:06:44+00:00,8 Bit Barrel Shifter Verilog Code,0,Mohd-Adib-Khan/8-Bit-Barrel-Shifter,671862442,SystemVerilog,8-Bit-Barrel-Shifter,3,0,2023-07-28 10:07:23+00:00,[],
13566,https://github.com/SabrinaBruni28/Caminho_de_Dados.git,2023-07-25 20:30:28+00:00,,0,SabrinaBruni28/Caminho_de_Dados,670781432,SystemVerilog,Caminho_de_Dados,5593,0,2023-07-25 20:34:52+00:00,[],
13567,https://github.com/Rajviii-1107/APB-Verification.git,2023-07-26 06:08:16+00:00,,0,Rajviii-1107/APB-Verification,670916445,SystemVerilog,APB-Verification,824,0,2023-07-26 20:05:28+00:00,[],
13568,https://github.com/maxhenderson42/sv_module_lib.git,2023-07-26 07:55:58+00:00,library of generic system verliog modules I have created,0,maxhenderson42/sv_module_lib,670952922,SystemVerilog,sv_module_lib,3,0,2023-07-26 07:59:37+00:00,[],
13569,https://github.com/emilyyeh123/ALU_Comparator_FPGA.git,2023-07-26 00:34:10+00:00,,0,emilyyeh123/ALU_Comparator_FPGA,670835004,SystemVerilog,ALU_Comparator_FPGA,4019,0,2023-07-26 00:54:57+00:00,[],
13570,https://github.com/MahikaGodbole/I2Cprotocol.git,2023-08-05 02:36:31+00:00,Design and verification of the I2C protocol,0,MahikaGodbole/I2Cprotocol,674867536,SystemVerilog,I2Cprotocol,1460,0,2023-08-05 02:37:45+00:00,[],https://api.github.com/licenses/unlicense
13571,https://github.com/AlejandroAnguiano/Verilog.git,2023-08-02 20:14:31+00:00,Trabajos que he hecho con verilog y system verilog,0,AlejandroAnguiano/Verilog,673958296,SystemVerilog,Verilog,9,0,2023-08-02 20:16:02+00:00,[],
13572,https://github.com/chaihanlin/SV.git,2023-07-17 02:16:56+00:00,SV exercise ,0,chaihanlin/SV,667215523,SystemVerilog,SV,1,0,2023-07-17 02:18:40+00:00,[],
13573,https://github.com/amanShuklaEC012/IntelATMController.git,2023-07-14 13:14:35+00:00,,0,amanShuklaEC012/IntelATMController,666416998,SystemVerilog,IntelATMController,584,0,2023-09-25 10:28:44+00:00,[],
13574,https://github.com/leonfdo/Carry_Ripple_Adder.git,2023-07-15 00:59:58+00:00,,0,leonfdo/Carry_Ripple_Adder,666602257,SystemVerilog,Carry_Ripple_Adder,2710,0,2023-08-31 17:03:24+00:00,[],
13575,https://github.com/ryan-gits/fpga-lenet5.git,2023-07-13 17:15:58+00:00,FPGA implementation of Lenet-5 CNN,0,ryan-gits/fpga-lenet5,666085864,SystemVerilog,fpga-lenet5,2,0,2023-07-13 17:39:13+00:00,[],
13576,https://github.com/prerna-sarkar/RTL_Design.git,2023-06-30 15:10:51+00:00,,0,prerna-sarkar/RTL_Design,660680591,SystemVerilog,RTL_Design,12,0,2023-06-30 18:39:11+00:00,[],
13577,https://github.com/moliverth/arm_single_extended.git,2023-06-30 00:02:18+00:00,,0,moliverth/arm_single_extended,660404674,SystemVerilog,arm_single_extended,93,0,2023-06-30 00:33:30+00:00,[],
13578,https://github.com/bsc-pm-ompss-at-fpga/ompss-manager-src.git,2023-06-28 16:42:37+00:00,Sources and IP generation scripts of the Picos OmpSs Manager (POM),0,bsc-pm-ompss-at-fpga/ompss-manager-src,659828923,SystemVerilog,ompss-manager-src,508,0,2023-08-03 14:20:56+00:00,[],https://api.github.com/licenses/gpl-3.0
13579,https://github.com/alfonso-chacon-rodriguez/curso_sv_ucu.git,2023-06-27 20:38:53+00:00,"Repositorio para laboratorios del curso de SV en la UCU, 2023",0,alfonso-chacon-rodriguez/curso_sv_ucu,659434359,SystemVerilog,curso_sv_ucu,68,0,2023-06-27 21:08:43+00:00,[],
13580,https://github.com/alok2802/SPI-Communication-protocol-Verification.git,2023-08-17 19:41:23+00:00,,0,alok2802/SPI-Communication-protocol-Verification,679864388,SystemVerilog,SPI-Communication-protocol-Verification,2,0,2023-08-17 19:42:33+00:00,[],
13581,https://github.com/OlegPM/alu_uvm.git,2023-08-30 13:28:26+00:00,UVM testbench for 8-bit ALU,0,OlegPM/alu_uvm,685080632,SystemVerilog,alu_uvm,68,0,2023-08-30 13:33:12+00:00,[],
13582,https://github.com/moechaker/APB_RAM_Test_Bench.git,2023-08-12 22:43:47+00:00,"This repository contains a comprehensive SystemVerilog test bench along with relevant files, aimed at verifying the proper operation and data integrity of an Address Bus Protocol (ABP) RAM device.",0,moechaker/APB_RAM_Test_Bench,677865258,SystemVerilog,APB_RAM_Test_Bench,128,0,2023-08-16 08:02:07+00:00,[],
13583,https://github.com/humayunsiraj123/RISC_V_pipeline.git,2023-08-12 20:38:55+00:00,RISC_V pipelined base implementation using systemverilog,0,humayunsiraj123/RISC_V_pipeline,677844997,SystemVerilog,RISC_V_pipeline,237,0,2023-08-15 19:56:06+00:00,[],
13584,https://github.com/edanuff/tn9k_hdmi_demo.git,2023-08-13 20:09:13+00:00,,0,edanuff/tn9k_hdmi_demo,678139339,SystemVerilog,tn9k_hdmi_demo,29,0,2023-08-13 20:09:19+00:00,[],
13585,https://github.com/n43ee7/i386-SDRAM.git,2023-08-17 07:17:02+00:00,SDRAM interface IP/design with for Intel i386 DX CPU and MT48LC8M8A2 Memory Device,0,n43ee7/i386-SDRAM,679590103,SystemVerilog,i386-SDRAM,24628,0,2023-08-17 07:44:09+00:00,[],https://api.github.com/licenses/mit
13586,https://github.com/Pradeep-81/8-bit-ALU-using-Logisim-and-Verilog.git,2023-08-21 04:10:00+00:00,,0,Pradeep-81/8-bit-ALU-using-Logisim-and-Verilog,681007257,SystemVerilog,8-bit-ALU-using-Logisim-and-Verilog,68,0,2023-08-21 05:15:27+00:00,[],
13587,https://github.com/haran399/4bitmultiplierverification.git,2023-08-23 05:56:19+00:00,UVM based testbench to verify a 4bit multiplier design,0,haran399/4bitmultiplierverification,681952134,SystemVerilog,4bitmultiplierverification,3,0,2023-08-23 06:08:38+00:00,[],
13588,https://github.com/ly0koS/RV_Single.git,2023-08-25 13:22:32+00:00,,0,ly0koS/RV_Single,683047387,SystemVerilog,RV_Single,2195,0,2023-08-25 13:23:09+00:00,[],https://api.github.com/licenses/cc0-1.0
13589,https://github.com/riteish06/AMBA-APB-Protocol-Design-and-Verification-using-SV.git,2023-08-28 15:27:55+00:00,,0,riteish06/AMBA-APB-Protocol-Design-and-Verification-using-SV,684163401,SystemVerilog,AMBA-APB-Protocol-Design-and-Verification-using-SV,21,0,2023-09-11 07:54:02+00:00,[],
13590,https://github.com/mary-k99/serializer.git,2023-08-28 19:04:28+00:00,lab1 task1,0,mary-k99/serializer,684253471,SystemVerilog,serializer,3,0,2023-08-28 19:11:00+00:00,[],
13591,https://github.com/ARUNKUMARKKONDAJJI/priority_encoder_verification_sv.git,2023-08-28 09:32:26+00:00,verification of 4:2 priority encoder using System verilog language.,0,ARUNKUMARKKONDAJJI/priority_encoder_verification_sv,684020796,SystemVerilog,priority_encoder_verification_sv,2,0,2023-08-28 09:40:27+00:00,[],
13592,https://github.com/VipulNeharwal/Automatic-Washing-Machine.git,2023-08-25 17:00:21+00:00,,0,VipulNeharwal/Automatic-Washing-Machine,683126817,SystemVerilog,Automatic-Washing-Machine,5,0,2023-08-25 17:00:58+00:00,[],
13593,https://github.com/tusharshenoy/3-BIT-Gray-Code-Counter.git,2023-08-20 05:55:24+00:00,,0,tusharshenoy/3-BIT-Gray-Code-Counter,680703972,SystemVerilog,3-BIT-Gray-Code-Counter,14,0,2023-08-20 06:22:18+00:00,[],
13594,https://github.com/codebjjung/RTL_DESIGN.git,2023-08-07 02:40:33+00:00,,0,codebjjung/RTL_DESIGN,675476227,SystemVerilog,RTL_DESIGN,18,0,2023-08-10 07:25:38+00:00,[],
13596,https://github.com/cleverever/signal_processing.git,2023-07-19 15:45:52+00:00,,0,cleverever/signal_processing,668352291,SystemVerilog,signal_processing,2,0,2023-07-20 14:26:31+00:00,[],
13597,https://github.com/DevGunu03/DigitalDesign-ENGR85A.git,2023-07-19 13:32:17+00:00,Codes for Course Project ENGR85A - Digital Design,0,DevGunu03/DigitalDesign-ENGR85A,668299002,SystemVerilog,DigitalDesign-ENGR85A,2791,0,2023-07-20 13:24:34+00:00,[],
13598,https://github.com/sprsr/common_sv.git,2023-07-24 01:18:02+00:00,Common System Verilog Modules,0,sprsr/common_sv,669958594,SystemVerilog,common_sv,8,0,2023-07-24 01:19:29+00:00,[],
13599,https://github.com/jthayil84/sv.git,2023-07-05 06:41:42+00:00,,0,jthayil84/sv,662443498,SystemVerilog,sv,12,0,2023-07-05 06:41:48+00:00,[],
13601,https://github.com/Zajcu14/oscilloscope.git,2023-07-04 09:12:04+00:00,Oscilloscope project for UEC2 classes,0,Zajcu14/oscilloscope,662059263,SystemVerilog,oscilloscope,10226,0,2023-09-12 20:40:27+00:00,[],
13602,https://github.com/mira-sweis/MIPS-Single-Cycle-CPU.git,2023-06-30 01:11:04+00:00,,0,mira-sweis/MIPS-Single-Cycle-CPU,660418940,SystemVerilog,MIPS-Single-Cycle-CPU,3,0,2023-06-30 01:12:29+00:00,[],
13603,https://github.com/dbachurski/PONG-FPGA.git,2023-07-12 21:32:45+00:00,,1,dbachurski/PONG-FPGA,665727558,SystemVerilog,PONG-FPGA,711,0,2023-07-30 21:15:29+00:00,[],
13604,https://github.com/bjybs123/BFP-converter.git,2023-08-09 08:50:21+00:00,Floating point to Block floating point converter implementation based on the paper 'FAST: DNN Training Under Variable Precision Block Floating Point with Stochastic Rounding.',0,bjybs123/BFP-converter,676460563,SystemVerilog,BFP-converter,5,0,2023-08-09 08:52:00+00:00,[],
13605,https://github.com/varshanj/AHB-APB-Bridge-Verification.git,2023-08-07 17:43:03+00:00,,0,varshanj/AHB-APB-Bridge-Verification,675778003,SystemVerilog,AHB-APB-Bridge-Verification,29,0,2023-08-07 17:46:01+00:00,[],
13606,https://github.com/moechaker/UART_Test_Bench.git,2023-08-10 04:28:40+00:00,This repository contains a SystemVerilog test bench and related files to verify the functionality of a UART (Universal Asynchronous Receiver-Transmitter).,0,moechaker/UART_Test_Bench,676812787,SystemVerilog,UART_Test_Bench,228,0,2023-08-16 08:01:22+00:00,[],
13607,https://github.com/DaniilIgnatev/FPGA.git,2023-08-10 21:58:53+00:00,My FPGA playground,0,DaniilIgnatev/FPGA,677154320,SystemVerilog,FPGA,50820,0,2023-08-10 21:59:38+00:00,[],https://api.github.com/licenses/gpl-3.0
13608,https://github.com/Arkade2807/Audio-Equalizer.git,2023-06-27 23:08:41+00:00,This was a project me and our group did for our ece 551 final project,0,Arkade2807/Audio-Equalizer,659471644,SystemVerilog,Audio-Equalizer,1858,0,2023-06-27 23:19:08+00:00,[],
13609,https://github.com/CojocaruRares/AMD-Summer-Practice.git,2023-06-27 09:30:34+00:00,,0,CojocaruRares/AMD-Summer-Practice,659174761,SystemVerilog,AMD-Summer-Practice,19,0,2023-07-24 11:37:31+00:00,[],
13610,https://github.com/Maheswarsau230/PCIV_SV.git,2023-06-27 11:17:56+00:00,,0,Maheswarsau230/PCIV_SV,659217545,SystemVerilog,PCIV_SV,0,0,2023-06-27 11:18:55+00:00,[],
13611,https://github.com/warrebe/Formal-Property-Verification-SV-Design.git,2023-06-27 19:38:36+00:00,"Formal Property Verification of UUT (gcd module using Euclid's algorithm). Note, setup.csh must be ran before testbench is usable, must be ran in C'Shell.",0,warrebe/Formal-Property-Verification-SV-Design,659416407,SystemVerilog,Formal-Property-Verification-SV-Design,5,0,2023-06-27 19:39:35+00:00,[],
13612,https://github.com/Pconst167/i2c.git,2023-07-26 11:45:56+00:00,,0,Pconst167/i2c,671033818,SystemVerilog,i2c,176,0,2023-07-26 11:48:00+00:00,[],
13613,https://github.com/moechaker/DFF_Test_Bench.git,2023-07-30 20:47:38+00:00,This repository contains a SystemVerilog test bench and related files to verify the functionality of a D flip-flop.,0,moechaker/DFF_Test_Bench,672661847,SystemVerilog,DFF_Test_Bench,106,0,2023-07-30 21:02:05+00:00,[],
13614,https://github.com/SyamSundar-projects/mlir_tensor_dialects.git,2023-07-30 18:15:01+00:00,,0,SyamSundar-projects/mlir_tensor_dialects,672628972,SystemVerilog,mlir_tensor_dialects,9,0,2023-07-30 18:34:40+00:00,[],
13615,https://github.com/sunanda-kommi/Random_Access_Memory.git,2023-08-01 07:02:17+00:00,Verification of Single Port RAM using System Verilog Testbench,0,sunanda-kommi/Random_Access_Memory,673231372,SystemVerilog,Random_Access_Memory,8,0,2023-08-01 12:38:00+00:00,[],
13616,https://github.com/MouVen/SystemVerilog.git,2023-08-12 15:22:51+00:00,,0,MouVen/SystemVerilog,677769141,SystemVerilog,SystemVerilog,11,0,2023-08-13 00:00:00+00:00,[],
13617,https://github.com/GhanayemMuh/EXP-94.git,2023-07-21 13:31:49+00:00,,0,GhanayemMuh/EXP-94,669156223,SystemVerilog,EXP-94,2601,0,2023-07-21 13:34:47+00:00,[],
13618,https://github.com/parveenduhan/RTLs.git,2023-07-26 06:48:03+00:00,This repo contains RTL desings for various commonly used algorithms,0,parveenduhan/RTLs,670929535,SystemVerilog,RTLs,803,0,2023-07-26 06:49:29+00:00,[],
13619,https://github.com/hirensolankiwork/AXI_VIP.git,2023-07-26 04:59:52+00:00,,0,hirensolankiwork/AXI_VIP,670897427,SystemVerilog,AXI_VIP,4165,0,2023-07-27 05:45:52+00:00,[],
13620,https://github.com/HummockHamek/Efficient_Pipelined_MIPS32_Processor.git,2023-08-22 10:49:02+00:00,,0,HummockHamek/Efficient_Pipelined_MIPS32_Processor,681593195,SystemVerilog,Efficient_Pipelined_MIPS32_Processor,9,0,2023-08-22 10:51:31+00:00,[],https://api.github.com/licenses/mit
13621,https://github.com/juliaabre/circuitos-digitais.git,2023-08-18 00:32:18+00:00,,0,juliaabre/circuitos-digitais,679930810,SystemVerilog,circuitos-digitais,1,0,2023-08-18 00:41:28+00:00,[],
13622,https://github.com/Kholoud-Ebrahim/Add_Sub.git,2023-08-25 18:28:31+00:00,"Functional Verification of Add_Sub Design using UVM methodology with Various Versions such as a Basic UVM Tb, adding a Configuration Object to the Tb, Using the Virtual Sequence and Virtual Sequencer Concept, etc.",0,Kholoud-Ebrahim/Add_Sub,683157751,SystemVerilog,Add_Sub,310,0,2023-08-26 17:27:16+00:00,[],
13623,https://github.com/armica-quejado/vending-machine-FSM.git,2023-08-25 17:31:55+00:00,vending machine FSM,0,armica-quejado/vending-machine-FSM,683137437,SystemVerilog,vending-machine-FSM,27,0,2023-08-25 18:13:58+00:00,[],
13624,https://github.com/AbdulSami-07/challenge.git,2023-08-25 06:13:36+00:00,,0,AbdulSami-07/challenge,682899996,SystemVerilog,challenge,1,0,2023-08-25 06:20:33+00:00,[],
13625,https://github.com/rajan003/RightMost_LeftMost_Bit_calculater-.git,2023-08-08 12:39:20+00:00,Calculating a RightMost and Leftmost Set bit in a pattern,0,rajan003/RightMost_LeftMost_Bit_calculater-,676101212,SystemVerilog,RightMost_LeftMost_Bit_calculater-,5,0,2023-08-08 12:46:45+00:00,[],
13626,https://github.com/vagrant313/ascii2bin_task.git,2023-08-11 16:55:25+00:00,,0,vagrant313/ascii2bin_task,677473443,SystemVerilog,ascii2bin_task,582,0,2023-08-11 17:04:48+00:00,[],
13627,https://github.com/FernandoReneMoran/ClockSystemVerilog.git,2023-08-11 18:40:51+00:00,,0,FernandoReneMoran/ClockSystemVerilog,677505040,SystemVerilog,ClockSystemVerilog,5,0,2023-08-11 18:52:06+00:00,[],
13628,https://github.com/malaaeldinaly/FPGA-Traffic-Light-Controller.git,2023-08-04 20:11:42+00:00,"Verilog modules for a traffic light controller, implemented in several variations. Each variation adds more features and complexity to the basic traffic light controller.",0,malaaeldinaly/FPGA-Traffic-Light-Controller,674799593,SystemVerilog,FPGA-Traffic-Light-Controller,1857,0,2023-08-04 20:34:53+00:00,"['fpga', 'verilog', 'finite-state-machine']",
13629,https://github.com/LuanThiers/ProjetoPipeline.git,2023-08-06 21:29:14+00:00,Implementação de instruções em pipeline de processador RISC-V,2,LuanThiers/ProjetoPipeline,675422824,SystemVerilog,ProjetoPipeline,674,0,2023-08-06 21:31:13+00:00,[],
13630,https://github.com/andreza-vilar/LOAC.git,2023-08-16 13:33:43+00:00,,0,andreza-vilar/LOAC,679276556,SystemVerilog,LOAC,36,0,2023-08-16 13:35:18+00:00,[],
13631,https://github.com/Ukuma012/verilog_examples.git,2023-07-11 12:59:53+00:00,verilog for fun,0,Ukuma012/verilog_examples,665107786,SystemVerilog,verilog_examples,23,0,2023-07-12 00:29:52+00:00,[],
13632,https://github.com/flowlikee/rw_function.git,2023-07-14 12:13:27+00:00,write/read a array to/from file.txt ,0,flowlikee/rw_function,666397048,SystemVerilog,rw_function,10,0,2023-10-24 11:37:41+00:00,[],
13633,https://github.com/nathom/cse141l_project.git,2023-08-16 01:42:42+00:00,,0,nathom/cse141l_project,679047172,SystemVerilog,cse141l_project,1200,0,2024-02-14 02:53:28+00:00,[],
13634,https://github.com/Mario1159/RVSCC.git,2023-08-28 04:10:34+00:00,,0,Mario1159/RVSCC,683918090,SystemVerilog,RVSCC,199,0,2023-08-28 04:10:59+00:00,[],https://api.github.com/licenses/lgpl-3.0
13635,https://github.com/MPSU/APS.git,2023-09-07 14:07:12+00:00,Методические материалы по разработке процессора архитектуры RISC-V,26,MPSU/APS,688517841,SystemVerilog,APS,94452,84,2024-04-08 02:19:47+00:00,"['fpga', 'riscv', 'systemverilog']",https://api.github.com/licenses/cc-by-sa-4.0
13636,https://github.com/harbaum/MiSTeryNano.git,2023-09-25 17:13:21+00:00,Atari STE MiSTery core for the Tang Nano 20k FPGA,10,harbaum/MiSTeryNano,696403831,SystemVerilog,MiSTeryNano,9776,68,2024-04-10 07:47:07+00:00,"['atari-st', 'fpga', 'mist', 'tang-nano']",
13637,https://github.com/yuri-panchul/systemverilog-homework.git,2023-09-25 15:42:56+00:00,SystemVerilog language-oriented exercises,37,yuri-panchul/systemverilog-homework,696364655,SystemVerilog,systemverilog-homework,5074,20,2024-03-24 16:10:12+00:00,[],https://api.github.com/licenses/mit
13638,https://github.com/Reservoir-In-Processor/rip-cpu.git,2023-09-20 09:19:11+00:00,"""Reservoir in Processor"" implemented in SystemVerilog based on RISC-V ISA",0,Reservoir-In-Processor/rip-cpu,694071512,SystemVerilog,rip-cpu,252,7,2024-02-25 07:42:37+00:00,[],https://api.github.com/licenses/apache-2.0
13639,https://github.com/accelr-net/udma_uart_vip.git,2023-09-06 03:59:02+00:00,VIP and simulation scripts for PULP's UDMA UART module,1,accelr-net/udma_uart_vip,687812540,SystemVerilog,udma_uart_vip,8704,6,2024-01-27 18:21:00+00:00,[],https://api.github.com/licenses/apache-2.0
13640,https://github.com/TRILLER599/cnn_base_fpga.git,2023-09-19 11:25:42+00:00,,1,TRILLER599/cnn_base_fpga,693613610,SystemVerilog,cnn_base_fpga,11292,6,2024-02-15 06:46:25+00:00,[],https://api.github.com/licenses/mit
13641,https://github.com/JoyenBenitto/Quark-V.git,2023-09-28 03:31:55+00:00,Quark is a single cycle RISC-V [RV32I] processor synthesised using SystemVerilog.,1,JoyenBenitto/Quark-V,697583403,SystemVerilog,Quark-V,199,4,2023-10-04 14:13:57+00:00,"['risc-v', 'riscv32', 'single-cycle-processor', 'systemverilog']",https://api.github.com/licenses/bsd-3-clause
13642,https://github.com/Kholoud-Ebrahim/UART_Protocol.git,2023-09-03 12:48:15+00:00,Functional Verification of UART Protocol using UVM methodology. A Serial Inter System Communication Peripheral Protocol.,0,Kholoud-Ebrahim/UART_Protocol,686632372,SystemVerilog,UART_Protocol,513,4,2023-12-26 01:19:27+00:00,[],
13643,https://github.com/JakodYuan/SVK-AMBA-VIP.git,2023-09-03 07:46:31+00:00,"Simple AMBA VIP, Include axi/ahb/apb",0,JakodYuan/SVK-AMBA-VIP,686560928,SystemVerilog,SVK-AMBA-VIP,14344,4,2024-01-25 07:12:08+00:00,[],https://api.github.com/licenses/mit
13644,https://github.com/wakuto/our_first_cpu.git,2023-09-03 14:53:04+00:00,みんなでわいわいディジタル回路設計とコンピュータアーキテクチャのCPUを自作するリポジトリ,0,wakuto/our_first_cpu,686665530,SystemVerilog,our_first_cpu,156,3,2023-11-28 02:29:51+00:00,[],
13645,https://github.com/bhavinpt/vending-machine-verification.git,2023-09-17 23:25:01+00:00,"n this project, I developed a UVM test bench to verify a vending machine design. The testbench includes standard components such as Test, Environment, Agent, Driver, and Monitor, along with Virtual Sequencer, Virtual Sequence, Top, and Virtual Interfaces.",0,bhavinpt/vending-machine-verification,692902565,SystemVerilog,vending-machine-verification,855,3,2024-03-09 14:59:09+00:00,[],
13646,https://github.com/meeeeet/UVM-based-FPU-VIP.git,2023-08-31 15:49:55+00:00,,0,meeeeet/UVM-based-FPU-VIP,685605197,SystemVerilog,UVM-based-FPU-VIP,6023,2,2024-03-05 16:53:45+00:00,"['systemverilog', 'uvm', 'vip']",https://api.github.com/licenses/apache-2.0
13647,https://github.com/fluctlight001/NEU-IoT-CPUDesign.git,2023-09-23 11:53:02+00:00,A CPU lab for NEU IoT.,1,fluctlight001/NEU-IoT-CPUDesign,695505503,SystemVerilog,NEU-IoT-CPUDesign,31447,2,2023-09-24 13:52:58+00:00,[],
13648,https://github.com/thiago0003/BUILD-RISC-V.git,2023-10-01 12:45:38+00:00,Desenvolvimento de um processador RISC-V que possa rodar Game of Life. Ao longo desse projetos alguns questionamentos são levantados e possivelmente analisados.,0,thiago0003/BUILD-RISC-V,698936275,SystemVerilog,BUILD-RISC-V,160836,2,2023-11-20 18:07:17+00:00,[],
13649,https://github.com/BlazKorz/riscv_axil_dma.git,2023-09-22 11:15:05+00:00,,0,BlazKorz/riscv_axil_dma,695104803,SystemVerilog,riscv_axil_dma,51,2,2024-01-30 06:59:54+00:00,[],
13650,https://github.com/Razor735/System_Verilog_Projects.git,2023-09-10 02:27:25+00:00,Collection of basic gates and circuits made using Xilinx Vivado software,1,Razor735/System_Verilog_Projects,689502329,SystemVerilog,System_Verilog_Projects,13,2,2024-04-11 15:40:30+00:00,[],https://api.github.com/licenses/mit
13651,https://github.com/esa-tu-darmstadt/TaPaFuzz.git,2023-09-22 08:19:21+00:00,,0,esa-tu-darmstadt/TaPaFuzz,695041272,SystemVerilog,TaPaFuzz,351,2,2024-03-07 02:49:40+00:00,[],https://api.github.com/licenses/mit
13652,https://github.com/akisnapp/Pipelined-Processor.git,2023-09-06 01:49:23+00:00,5-stage Pipelined Processor implemented in Verilog for use with RISC-V assembly language.,0,akisnapp/Pipelined-Processor,687779797,SystemVerilog,Pipelined-Processor,20,2,2023-09-07 15:21:52+00:00,[],
13653,https://github.com/minecraftdixit/Digital-ASIC-LAB.git,2023-09-14 14:33:53+00:00,Verilog Codes for various Design  ,2,minecraftdixit/Digital-ASIC-LAB,691615313,SystemVerilog,Digital-ASIC-LAB,1447,2,2024-04-03 11:25:00+00:00,"['adder', 'fifo', 'max-pooling', 'pipeline', 'sequence-detector', 'system-verilog', 'uvm', 'verilog', 'one-detector', 'reconfigurable-matrix-adder', 'multiplication', 'verilog-hdl']",
13654,https://github.com/2uger/petalinux_notes.git,2023-09-26 12:00:07+00:00,,0,2uger/petalinux_notes,696768698,SystemVerilog,petalinux_notes,11,2,2024-02-03 07:57:35+00:00,"['linux', 'petalinux', 'soc', 'vivado', 'xilinx', 'zynq-7000', 'axi-stream', 'dma', 'systemverilog']",
13656,https://github.com/vaibhavirastogi/APB-Slave-BFM-UVM-Testbench.git,2023-09-05 18:11:55+00:00,Testbench and design code to verify APB Protocol,0,vaibhavirastogi/APB-Slave-BFM-UVM-Testbench,687653870,SystemVerilog,APB-Slave-BFM-UVM-Testbench,14,2,2024-02-21 07:36:34+00:00,[],
13657,https://github.com/omerorkn/fixed_point_sqrt.git,2023-09-13 20:14:59+00:00,Square Root Calculator w/Fixed Point Feature ,0,omerorkn/fixed_point_sqrt,691259068,SystemVerilog,fixed_point_sqrt,202,1,2023-09-28 22:00:00+00:00,[],https://api.github.com/licenses/mit
13658,https://github.com/hemanth-VP/Single-Port-RAM-.git,2023-09-13 13:10:35+00:00,,0,hemanth-VP/Single-Port-RAM-,691079941,SystemVerilog,Single-Port-RAM-,61,1,2023-09-14 14:10:45+00:00,[],
13659,https://github.com/YakirPeretz/Projects.git,2023-09-26 16:46:43+00:00,My own projects :),0,YakirPeretz/Projects,696903671,SystemVerilog,Projects,5330,1,2023-10-25 09:05:23+00:00,[],
13660,https://github.com/verification-explorer/callback_iterator.git,2023-09-20 13:17:20+00:00,Spicing up your UVM driver: noise injection made easy with callback iterators,0,verification-explorer/callback_iterator,694170329,SystemVerilog,callback_iterator,33,1,2023-09-24 20:31:41+00:00,[],
13661,https://github.com/JasonRomps/RC5-Accelerator.git,2023-09-05 20:30:35+00:00,For fabrication on 65nm process size,0,JasonRomps/RC5-Accelerator,687700847,SystemVerilog,RC5-Accelerator,2947,1,2023-09-24 00:36:51+00:00,[],https://api.github.com/licenses/mit
13662,https://github.com/Enanter/SimplePipelineCore.git,2023-10-02 18:41:14+00:00,Developing an microarchitecture implementing addtional path for branching & jump operation. This digital design is going to be developed and simulated with systemverilog. It is going to be emulated on a PYNQ Z2 and Genesys 2 FPGA board.,0,Enanter/SimplePipelineCore,699494767,SystemVerilog,SimplePipelineCore,827,1,2023-12-25 23:14:14+00:00,[],https://api.github.com/licenses/gpl-2.0
13663,https://github.com/hahaha-sudo/simpleCPU.git,2023-09-03 15:29:32+00:00,Simple version of CPU developed by SystemVerilog. Most codes are for verification. ,0,hahaha-sudo/simpleCPU,686675826,SystemVerilog,simpleCPU,113,1,2023-09-17 07:32:01+00:00,[],
13664,https://github.com/EunTilofy/PiplineCPU.git,2023-09-24 08:15:50+00:00,5 level Pipline CPU based on RISCV.,0,EunTilofy/PiplineCPU,695787793,SystemVerilog,PiplineCPU,411,1,2023-09-24 11:35:44+00:00,[],
13665,https://github.com/Offliners/NYCU_DCS_writeup.git,2023-10-01 15:20:29+00:00,,0,Offliners/NYCU_DCS_writeup,698982263,SystemVerilog,NYCU_DCS_writeup,9425,1,2023-10-10 00:23:06+00:00,[],
13666,https://github.com/adit0131/APB_VIP.git,2023-09-25 11:11:54+00:00,,0,adit0131/APB_VIP,696235805,SystemVerilog,APB_VIP,192,1,2024-03-18 07:17:32+00:00,[],
13667,https://github.com/isurudeshapriya/32-bit_Single_Cycle_3_buses_RICS-V_processor.git,2023-09-28 08:54:44+00:00,,0,isurudeshapriya/32-bit_Single_Cycle_3_buses_RICS-V_processor,697680404,SystemVerilog,32-bit_Single_Cycle_3_buses_RICS-V_processor,17,1,2023-09-29 13:54:29+00:00,[],
13668,https://github.com/PaunchiciAndrei/UVM_Project_Final.git,2023-09-27 13:41:01+00:00,Final_Project_Capgemini_Paunchici_Andrei,0,PaunchiciAndrei/UVM_Project_Final,697318343,SystemVerilog,UVM_Project_Final,488,1,2023-09-27 19:12:01+00:00,[],
13669,https://github.com/agboland/CSCE-611.git,2023-09-14 22:24:54+00:00,CSCE-611 UofSC,0,agboland/CSCE-611,691787186,SystemVerilog,CSCE-611,109,1,2023-10-12 22:46:27+00:00,[],
13670,https://github.com/yasirueranda/RV32I-Based-Single-Cycle-Processor.git,2023-09-26 12:31:08+00:00,,0,yasirueranda/RV32I-Based-Single-Cycle-Processor,696782277,SystemVerilog,RV32I-Based-Single-Cycle-Processor,38,1,2024-01-01 03:06:55+00:00,[],
13671,https://github.com/oscc-ip/ps2.git,2023-09-24 12:08:50+00:00,An APB4-based PS/2 Keyboard and Mouse Controller,0,oscc-ip/ps2,695845456,SystemVerilog,ps2,40,1,2023-09-25 12:18:19+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
13672,https://github.com/maiomar88/3X3_MatrixInver.git,2023-10-02 13:23:56+00:00,,0,maiomar88/3X3_MatrixInver,699354966,SystemVerilog,3X3_MatrixInver,54,1,2023-10-02 13:33:11+00:00,[],
13673,https://github.com/oscc-ip/timer.git,2023-09-03 14:20:53+00:00,An APB4-based Timer Controller,0,oscc-ip/timer,686656761,SystemVerilog,timer,52,1,2023-09-25 12:21:48+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
13674,https://github.com/adarmaori/RISC-V-verilog.git,2023-09-13 16:34:26+00:00,,0,adarmaori/RISC-V-verilog,691171885,SystemVerilog,RISC-V-verilog,11,1,2023-09-13 16:43:50+00:00,[],
13675,https://github.com/oscc-ip/archinfo.git,2023-09-13 02:37:30+00:00,An APB4-based SoC Architecture Info,0,oscc-ip/archinfo,690852924,SystemVerilog,archinfo,66,1,2023-09-13 08:43:20+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
13676,https://github.com/Saad22386/Saad22386.git,2023-09-20 06:42:06+00:00,Config files for my GitHub profile.,0,Saad22386/Saad22386,694009711,SystemVerilog,Saad22386,25,1,2023-11-28 11:26:06+00:00,"['config', 'github-config']",
13677,https://github.com/oscc-ip/gpio.git,2023-09-11 11:55:32+00:00,An APB4-based GPIO Controller,0,oscc-ip/gpio,690029025,SystemVerilog,gpio,61,1,2023-09-25 12:22:03+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
13678,https://github.com/mohammedabdulhaq/Verification_of_I2C_Protocol_IP.git,2023-09-17 12:32:45+00:00,,1,mohammedabdulhaq/Verification_of_I2C_Protocol_IP,692735885,SystemVerilog,Verification_of_I2C_Protocol_IP,5192,1,2024-02-07 11:46:00+00:00,[],
13679,https://github.com/MaZirui2001/Computer-Architecture-H.git,2023-09-17 09:13:33+00:00,存放2023春季学期《计算机体系结构(H》课程部分资源,0,MaZirui2001/Computer-Architecture-H,692687618,SystemVerilog,Computer-Architecture-H,12776,1,2024-03-29 03:37:59+00:00,[],
13680,https://github.com/vaibhavirastogi/Ethernet_TB_SV.git,2023-09-20 00:13:50+00:00,SV-based testbench for an Ethernet Switch,0,vaibhavirastogi/Ethernet_TB_SV,693901543,SystemVerilog,Ethernet_TB_SV,16,1,2023-10-19 21:47:15+00:00,[],
13681,https://github.com/ayandeephazra/SimpleMulticoreProcessor.git,2023-09-14 20:13:55+00:00,A 2-core processor connected via a Unified Memory unit. Incorporates Cache Coherence by utilizing a snooping based mechanism. Contains a matrix multiplication task to evaluate enhanced parallel performance when compared to equiv. uniprocessor.,0,ayandeephazra/SimpleMulticoreProcessor,691751852,SystemVerilog,SimpleMulticoreProcessor,12330,1,2023-10-22 01:42:05+00:00,"['cache', 'caches', 'coherence', 'memory', 'multiprocessor', 'snooping', 'unified']",https://api.github.com/licenses/mit
13682,https://github.com/shinnosukeono/cpuex2023-group8.git,2023-10-03 04:49:07+00:00,,0,shinnosukeono/cpuex2023-group8,699661965,SystemVerilog,cpuex2023-group8,246707,1,2024-02-18 08:41:41+00:00,[],
13683,https://github.com/marix88/alu_apb.git,2023-09-27 15:01:14+00:00,Arithmethic logic unit (ALU) controlled through APB.,0,marix88/alu_apb,697355390,SystemVerilog,alu_apb,57,1,2023-10-02 09:09:29+00:00,[],https://api.github.com/licenses/mit
13684,https://github.com/hemanth-VP/Synchronous-fifo.git,2023-09-14 11:27:07+00:00,,0,hemanth-VP/Synchronous-fifo,691533858,SystemVerilog,Synchronous-fifo,145,1,2023-09-14 14:10:58+00:00,[],
13685,https://github.com/Satjpatel/NeuralNetworkOnFPGA.git,2023-09-25 04:11:12+00:00,An initial proof of concept for neural network on FPGA,0,Satjpatel/NeuralNetworkOnFPGA,696091226,SystemVerilog,NeuralNetworkOnFPGA,86,1,2023-10-06 19:51:40+00:00,[],
13686,https://github.com/lhartmann/sed_bakery.git,2023-09-04 19:42:21+00:00,,0,lhartmann/sed_bakery,687174105,SystemVerilog,sed_bakery,2160,1,2023-09-07 09:46:57+00:00,[],
13687,https://github.com/Rahma-Aly/Synchronous-FIFO.git,2023-09-20 00:22:18+00:00,A synchronous FIFO implementation using Verilog that's verified using Assertion Based Verification.,0,Rahma-Aly/Synchronous-FIFO,693903611,SystemVerilog,Synchronous-FIFO,3,1,2024-02-15 07:50:59+00:00,[],
13688,https://github.com/dodlido/lstm_acc.git,2023-09-29 14:46:51+00:00,LSTM Hardware Accelerator Design in SystemVerilog,0,dodlido/lstm_acc,698275282,SystemVerilog,lstm_acc,2604,1,2024-02-28 04:30:44+00:00,[],
13689,https://github.com/JakodYuan/SVK-JTAG-VIP.git,2023-09-18 06:52:15+00:00,,0,JakodYuan/SVK-JTAG-VIP,693006538,SystemVerilog,SVK-JTAG-VIP,12,1,2023-09-19 08:52:11+00:00,[],https://api.github.com/licenses/mit
13690,https://github.com/nguyencanhtrung/sv-practice.git,2023-09-01 04:15:38+00:00,Labs to pratice digital design with System Verilog,0,nguyencanhtrung/sv-practice,685811886,SystemVerilog,sv-practice,11249,1,2024-02-04 15:06:54+00:00,['systemverilog'],
13691,https://github.com/ShubP/ECE385.git,2023-09-29 20:43:06+00:00,ECE 385 Fall 2023 UIUC,0,ShubP/ECE385,698401558,SystemVerilog,ECE385,308,1,2024-01-24 07:31:45+00:00,[],
13692,https://github.com/Shuregg/riscv-simple-cpu.git,2023-09-13 15:08:19+00:00,Creating a risc-v processor,0,Shuregg/riscv-simple-cpu,691134438,SystemVerilog,riscv-simple-cpu,4799,1,2024-04-08 20:41:25+00:00,"['cpu', 'risc-v', 'riscv', 'riscv32', 'rtl', 'verification', 'verilog', 'verilog-hdl', 'systemverilog']",
13693,https://github.com/Vincy1230/EC-class.git,2023-09-19 01:33:16+00:00,北京工商大学 人工智能学院 边缘计算 (2023-2024-1 | 余乐) 课程作业,0,Vincy1230/EC-class,693411801,SystemVerilog,EC-class,2025,1,2023-09-20 18:18:51+00:00,['edge-computing'],https://api.github.com/licenses/mit
13694,https://github.com/oscc-ip/rtc.git,2023-09-14 11:33:56+00:00,An APB4-based RTC Controller,0,oscc-ip/rtc,691536590,SystemVerilog,rtc,43,1,2023-10-04 05:35:44+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
13695,https://github.com/bhavinpt/uart-to-i2c-bridge-verification.git,2023-09-17 22:45:52+00:00,Testbench for UART to I2C interface bridge (SC18IM704) in UVM.  The goal was to build a UVM testbench from scratch with all the below standard components to detect bugs from an encrypted design.,0,bhavinpt/uart-to-i2c-bridge-verification,692895710,SystemVerilog,uart-to-i2c-bridge-verification,52,1,2023-12-01 05:54:41+00:00,[],
13696,https://github.com/alfadelta10010/alpha-processor.git,2023-10-02 10:50:39+00:00,Basic Single Stage RISC-V 32-bit processor,0,alfadelta10010/alpha-processor,699294048,SystemVerilog,alpha-processor,1,1,2023-10-07 12:42:44+00:00,[],
13697,https://github.com/anupamhassapurty/My_Work.git,2023-09-07 01:53:14+00:00,Design Verification using System-Verilog/UVM,0,anupamhassapurty/My_Work,688263536,SystemVerilog,My_Work,52,1,2024-03-29 06:55:39+00:00,[],
13698,https://github.com/jakujobi/Digital-Logic-CSC244.git,2023-09-13 21:12:26+00:00,,0,jakujobi/Digital-Logic-CSC244,691276014,SystemVerilog,Digital-Logic-CSC244,120151,1,2023-12-15 17:56:25+00:00,[],https://api.github.com/licenses/gpl-3.0
13700,https://github.com/salehhesham244/Car_Parking.git,2023-09-14 01:11:27+00:00,,0,salehhesham244/Car_Parking,691333576,SystemVerilog,Car_Parking,137,1,2023-09-20 01:16:02+00:00,[],
13701,https://github.com/Anuki16/single-cycle-riscv-processor.git,2023-09-16 10:18:54+00:00,32 bit non-pipelined RISC-V processor design and implementation for an FPGA.,0,Anuki16/single-cycle-riscv-processor,692385126,SystemVerilog,single-cycle-riscv-processor,10637,1,2023-12-28 04:53:08+00:00,[],
13702,https://github.com/Artityagi123456789/SysSystemVerilog_Practice_Code.git,2023-09-16 00:50:02+00:00,System Verilog For Functional Verification,0,Artityagi123456789/SysSystemVerilog_Practice_Code,692266343,SystemVerilog,SysSystemVerilog_Practice_Code,2490,1,2024-04-09 09:27:26+00:00,[],
13703,https://github.com/vaibhavirastogi/UVM_Memory_model_TB.git,2023-09-20 00:26:29+00:00,"A TB for a simple memory model, designed to exhaustively test UVM concepts",0,vaibhavirastogi/UVM_Memory_model_TB,693904622,SystemVerilog,UVM_Memory_model_TB,552,1,2023-10-19 21:49:10+00:00,[],
13704,https://github.com/Undec1ded/practicDiplomaMIREA.git,2023-09-12 09:25:30+00:00,,0,Undec1ded/practicDiplomaMIREA,690480973,SystemVerilog,practicDiplomaMIREA,65,1,2023-12-01 16:19:47+00:00,[],
13705,https://github.com/AlyElruby/Matrix_inv.git,2023-09-04 19:49:37+00:00,3x3 Matrix inversion,0,AlyElruby/Matrix_inv,687176419,SystemVerilog,Matrix_inv,415,1,2024-01-28 03:48:52+00:00,[],
13706,https://github.com/CasperDev/tangnano-hdmi.git,2023-09-21 19:51:11+00:00,Demo Implementation of HDMI with Audio for Gowin TangNano 9k FPGA board,0,CasperDev/tangnano-hdmi,694837441,SystemVerilog,tangnano-hdmi,37,1,2024-02-22 09:39:12+00:00,[],https://api.github.com/licenses/mit
13707,https://github.com/youssefamr20/Single-Cycle-RISC_V.git,2023-09-05 22:29:25+00:00,Implementaion of single cycle RISC-V processor in verilog and verification using systemverilog and UVM,0,youssefamr20/Single-Cycle-RISC_V,687732493,SystemVerilog,Single-Cycle-RISC_V,565,1,2023-12-11 06:40:51+00:00,[],
13708,https://github.com/Assiyvril/wqVerilogCode.git,2023-09-07 15:41:04+00:00,,0,Assiyvril/wqVerilogCode,688557942,SystemVerilog,wqVerilogCode,4,1,2024-01-13 06:48:12+00:00,[],
13709,https://github.com/amitrupu/TinyComputerArchitecture.git,2023-08-31 18:35:34+00:00,Tiny computer architecture having CPU and memory written in Verilog,1,amitrupu/TinyComputerArchitecture,685669932,SystemVerilog,TinyComputerArchitecture,15,1,2023-10-10 19:14:06+00:00,[],
13710,https://github.com/bprocknow/iceFpgaDev.git,2023-09-21 23:43:16+00:00,,0,bprocknow/iceFpgaDev,694901573,SystemVerilog,iceFpgaDev,7023,0,2023-10-07 21:17:38+00:00,[],https://api.github.com/licenses/gpl-3.0
13711,https://github.com/dt0211/dt021103.git,2023-09-04 15:14:23+00:00,,0,dt0211/dt021103,687083683,SystemVerilog,dt021103,10,0,2023-09-04 15:20:33+00:00,[],
13712,https://github.com/verification-explorer/solve_before.git,2023-09-05 13:19:27+00:00,An example of systemverilog solve before constraint,0,verification-explorer/solve_before,687493168,SystemVerilog,solve_before,2,0,2023-09-05 13:24:35+00:00,[],
13713,https://github.com/Satankoteika/RuProc.git,2023-09-03 14:39:52+00:00,,0,Satankoteika/RuProc,686661961,SystemVerilog,RuProc,13,0,2023-09-03 14:44:29+00:00,[],https://api.github.com/licenses/mit
13714,https://github.com/Maturihacks/SystemVerilog_Lab_8.git,2023-09-06 03:15:11+00:00,,0,Maturihacks/SystemVerilog_Lab_8,687801675,SystemVerilog,SystemVerilog_Lab_8,4,0,2023-09-06 03:19:21+00:00,[],
13715,https://github.com/MBIC1996/System-Verilog-Code.git,2023-09-08 18:24:23+00:00,,0,MBIC1996/System-Verilog-Code,689072613,SystemVerilog,System-Verilog-Code,54,0,2023-09-20 13:33:20+00:00,[],
13716,https://github.com/dg2300/UVM-TB-PRACTICE.git,2023-09-09 07:36:56+00:00,Code Dump of Complete End to End Test Benches I practiced from references on Udemy and others.,0,dg2300/UVM-TB-PRACTICE,689241710,SystemVerilog,UVM-TB-PRACTICE,1385,0,2023-09-09 14:29:54+00:00,[],
13717,https://github.com/bumjoooon/testbench_mult.git,2023-09-26 06:32:33+00:00,,0,bumjoooon/testbench_mult,696636326,SystemVerilog,testbench_mult,26,0,2023-09-26 06:41:53+00:00,[],
13718,https://github.com/2023-Fall-ECE4278/lab4.git,2023-09-26 10:37:00+00:00,,0,2023-Fall-ECE4278/lab4,696735137,SystemVerilog,lab4,10,0,2023-09-26 10:49:29+00:00,[],
13719,https://github.com/Jeremy185/ConexioServerVeri.git,2023-09-28 16:28:34+00:00,,0,Jeremy185/ConexioServerVeri,697868816,SystemVerilog,ConexioServerVeri,15,0,2023-09-28 16:29:48+00:00,[],
13720,https://github.com/Nguyen-Nhat-Tuan-Minh/SystemVerilog-Module.git,2023-09-28 16:32:24+00:00,,0,Nguyen-Nhat-Tuan-Minh/SystemVerilog-Module,697870352,SystemVerilog,SystemVerilog-Module,16,0,2023-09-28 17:04:41+00:00,[],
13721,https://github.com/Zubayer5/VLSI.git,2023-09-01 03:09:36+00:00,,0,Zubayer5/VLSI,685797557,SystemVerilog,VLSI,13861,0,2023-09-11 15:34:42+00:00,[],
13722,https://github.com/javierespinoza09/Proyectos_Verificacion.git,2023-09-13 17:21:03+00:00,,0,javierespinoza09/Proyectos_Verificacion,691193160,SystemVerilog,Proyectos_Verificacion,11628,0,2023-09-19 05:50:20+00:00,[],
13723,https://github.com/dvargasch/Verification.git,2023-09-06 00:30:22+00:00,,0,dvargasch/Verification,687760855,SystemVerilog,Verification,1688,0,2023-10-17 06:16:20+00:00,[],
13724,https://github.com/Kule-Racing-Spill/kule-fpga.git,2023-09-26 08:16:46+00:00,,0,Kule-Racing-Spill/kule-fpga,696676552,SystemVerilog,kule-fpga,239,0,2023-11-22 12:49:42+00:00,[],
13725,https://github.com/wonjongbot/WJBOT-RISCV.git,2023-09-02 00:47:20+00:00,,0,wonjongbot/WJBOT-RISCV,686183150,SystemVerilog,WJBOT-RISCV,57,0,2023-09-02 00:48:02+00:00,[],https://api.github.com/licenses/mit
13726,https://github.com/mjalbert99/sha-256.git,2023-09-13 17:39:27+00:00,,0,mjalbert99/sha-256,691201083,SystemVerilog,sha-256,26136,0,2023-09-13 17:39:46+00:00,[],
13727,https://github.com/korra1020/TKR2_TNS_08.git,2023-09-19 06:20:15+00:00,,0,korra1020/TKR2_TNS_08,693492475,SystemVerilog,TKR2_TNS_08,0,0,2023-09-19 06:23:33+00:00,[],
13728,https://github.com/mohamedwaleed-cu/Full-UVM-Enviroment-for-A-Memory.git,2023-09-18 11:23:54+00:00,Full UVM Enviroment for Memory from scratch including all UVM components with subscriber & scoreboard,0,mohamedwaleed-cu/Full-UVM-Enviroment-for-A-Memory,693111476,SystemVerilog,Full-UVM-Enviroment-for-A-Memory,7,0,2023-09-18 11:46:33+00:00,[],
13729,https://github.com/hnorth99/ArmPipelinedCpu.git,2023-09-20 06:31:46+00:00,64 bit Pipelined Cpu for Arm Instruction Set,0,hnorth99/ArmPipelinedCpu,694005853,SystemVerilog,ArmPipelinedCpu,42,0,2023-09-20 06:57:28+00:00,[],
13730,https://github.com/poojarynikitha/final_fifo.git,2023-09-19 13:48:37+00:00,,0,poojarynikitha/final_fifo,693677380,SystemVerilog,final_fifo,27,0,2023-09-19 13:51:53+00:00,[],
13731,https://github.com/vaibhavirastogi/TLM_UVM_TB.git,2023-09-20 00:23:44+00:00,A TB designed to test Transaction Level Modelling concepts in UVM,0,vaibhavirastogi/TLM_UVM_TB,693903966,SystemVerilog,TLM_UVM_TB,5685,0,2023-09-20 00:24:41+00:00,[],
13732,https://github.com/poojarynikitha/FIFO_1.git,2023-09-20 13:10:34+00:00,,0,poojarynikitha/FIFO_1,694167170,SystemVerilog,FIFO_1,17,0,2023-09-20 13:11:59+00:00,[],
13733,https://github.com/mnigm2001/Image-Decompressor.git,2023-09-13 00:59:56+00:00,,0,mnigm2001/Image-Decompressor,690828283,SystemVerilog,Image-Decompressor,1861,0,2023-09-13 01:04:00+00:00,[],
13734,https://github.com/TryNotToFail/CPEN211_lab5.git,2023-09-12 07:30:27+00:00,,0,TryNotToFail/CPEN211_lab5,690434075,SystemVerilog,CPEN211_lab5,4,0,2023-09-12 07:31:05+00:00,[],
13735,https://github.com/kkurenkov/kvt_clk_rst_vip.git,2023-09-16 08:12:19+00:00,Easy clock and reset UVM agent,0,kkurenkov/kvt_clk_rst_vip,692353705,SystemVerilog,kvt_clk_rst_vip,7,0,2023-09-16 10:40:26+00:00,[],
13736,https://github.com/cxliu0422/ECE295.git,2023-09-20 23:02:25+00:00,,0,cxliu0422/ECE295,694391323,SystemVerilog,ECE295,404,0,2023-09-20 23:05:19+00:00,[],
13737,https://github.com/abdullah8a0/onechan.git,2023-09-22 18:20:34+00:00,On-chip Neural Network Chess Analyzer. A Chess Engine and TPU implemented on an FPGA,0,abdullah8a0/onechan,695269083,SystemVerilog,onechan,142252,0,2023-09-22 18:23:57+00:00,[],
13738,https://github.com/Sukhithaaithal/fifo_coding.git,2023-09-14 11:03:04+00:00,,0,Sukhithaaithal/fifo_coding,691524616,SystemVerilog,fifo_coding,6695,0,2023-09-14 11:03:53+00:00,[],
13739,https://github.com/aamodbk/FPGA_Image_Processing.git,2023-09-21 15:32:50+00:00,The objective of this work is to accelerate image processing functionalities on FPGA through the use of systolic array architecture with approximate floating point units.,0,aamodbk/FPGA_Image_Processing,694737033,SystemVerilog,FPGA_Image_Processing,749,0,2023-11-09 20:28:25+00:00,[],
13740,https://github.com/teja-91/OpenPyDVT.git,2023-09-21 15:08:41+00:00,,0,teja-91/OpenPyDVT,694725656,SystemVerilog,OpenPyDVT,209,0,2023-09-21 15:09:28+00:00,[],https://api.github.com/licenses/apache-2.0
13741,https://github.com/FraancooP/arquitectura.git,2023-09-10 21:36:54+00:00,,0,FraancooP/arquitectura,689778644,SystemVerilog,arquitectura,3121,0,2023-09-10 22:16:33+00:00,[],
13742,https://github.com/cp024s/AHB-APB-bridge.git,2023-09-03 09:12:10+00:00,,0,cp024s/AHB-APB-bridge,686579489,SystemVerilog,AHB-APB-bridge,20,0,2023-12-01 13:04:00+00:00,[],https://api.github.com/licenses/mit
13743,https://github.com/kaggar11/cnn_verilog.git,2023-09-02 05:35:51+00:00,An FFT-OVA based CNN hardware accelerator,1,kaggar11/cnn_verilog,686233011,SystemVerilog,cnn_verilog,51878,0,2023-10-20 19:42:28+00:00,[],https://api.github.com/licenses/mit
13744,https://github.com/Jrvvv/simple-risc-v-cpu.git,2023-09-12 12:49:08+00:00,Developing RISC-V CPU,0,Jrvvv/simple-risc-v-cpu,690566412,SystemVerilog,simple-risc-v-cpu,544,0,2024-01-26 18:43:21+00:00,"['32i', 'computer-architecture', 'cpu', 'risc-v', 'rtl', 'systemverilog', 'vivado']",
13746,https://github.com/wlister/HDLBits.git,2023-09-30 07:41:31+00:00,,0,wlister/HDLBits,698534050,SystemVerilog,HDLBits,519,0,2024-02-22 00:46:19+00:00,[],
13747,https://github.com/CroosJJSE/pattern_detector.git,2023-09-09 12:08:04+00:00,"a task was given to solved, i solved it with testbench, see more......",0,CroosJJSE/pattern_detector,689309993,SystemVerilog,pattern_detector,4,0,2024-03-11 16:30:02+00:00,[],
13748,https://github.com/Kareem-Yahia/UVM_TB_For_Simple_Memory.git,2023-09-12 19:41:05+00:00,Here you can find Full UVM Environment for simple memory  ,0,Kareem-Yahia/UVM_TB_For_Simple_Memory,690746053,SystemVerilog,UVM_TB_For_Simple_Memory,39,0,2024-04-09 14:59:18+00:00,[],
13749,https://github.com/alikera/Digital-Logic-Design.git,2023-09-26 13:07:19+00:00,This GitHub repository serves as my primary resource for the University of Tehran's Digital Logic Design course.,0,alikera/Digital-Logic-Design,696800205,SystemVerilog,Digital-Logic-Design,5073,0,2023-09-26 13:10:58+00:00,[],
13750,https://github.com/mdkane14/Class-Report-1.git,2023-09-06 03:30:47+00:00,,0,mdkane14/Class-Report-1,687805620,SystemVerilog,Class-Report-1,10,0,2023-09-12 19:48:19+00:00,[],
13751,https://github.com/dmitrodem/hdl_notebook.git,2023-09-07 11:46:00+00:00,Random pieces of HDL code,0,dmitrodem/hdl_notebook,688457095,SystemVerilog,hdl_notebook,35,0,2023-09-07 14:04:35+00:00,[],https://api.github.com/licenses/gpl-3.0
13752,https://github.com/SuganVen/SystemVerilog-Testbench-with-Driver-Monitor-for-FIFO-mem.git,2023-09-19 04:34:36+00:00,,0,SuganVen/SystemVerilog-Testbench-with-Driver-Monitor-for-FIFO-mem,693458944,SystemVerilog,SystemVerilog-Testbench-with-Driver-Monitor-for-FIFO-mem,3,0,2023-09-19 04:42:34+00:00,[],
13753,https://github.com/verification-explorer/layering_policy_classes.git,2023-09-18 12:27:56+00:00,Layering via Reusable Randomization Policy Classes and application in power management system,0,verification-explorer/layering_policy_classes,693136895,SystemVerilog,layering_policy_classes,12,0,2023-09-18 12:35:45+00:00,[],
13754,https://github.com/Rakesh2916728272727/fifo.git,2023-09-20 10:23:57+00:00,,0,Rakesh2916728272727/fifo,694097629,SystemVerilog,fifo,7,0,2023-09-20 10:28:54+00:00,[],
13755,https://github.com/Kenichih48/Arqui2Proyectos.git,2023-09-07 23:06:59+00:00,,0,Kenichih48/Arqui2Proyectos,688697118,SystemVerilog,Arqui2Proyectos,18262,0,2023-11-22 07:55:06+00:00,[],
13756,https://github.com/Myron2812/FIFO_UVM_TB.git,2023-09-14 11:08:54+00:00,,0,Myron2812/FIFO_UVM_TB,691526839,SystemVerilog,FIFO_UVM_TB,8033,0,2023-09-14 11:10:08+00:00,[],https://api.github.com/licenses/gpl-3.0
13757,https://github.com/Prasthuthi/FIFO_UVM_CODE.git,2023-09-14 13:44:38+00:00,,0,Prasthuthi/FIFO_UVM_CODE,691592299,SystemVerilog,FIFO_UVM_CODE,46,0,2023-09-14 13:47:18+00:00,[],
13758,https://github.com/MeghanRN/CompArchCPU-.git,2023-09-12 23:41:38+00:00,,0,MeghanRN/CompArchCPU-,690810194,SystemVerilog,CompArchCPU-,1672,0,2023-09-12 23:46:26+00:00,[],https://api.github.com/licenses/mit
13759,https://github.com/hank09901/112Spring_DClab.git,2023-09-16 13:35:59+00:00,,1,hank09901/112Spring_DClab,692439326,SystemVerilog,112Spring_DClab,12626,0,2023-09-16 13:41:14+00:00,[],
13760,https://github.com/laxmankumar3283/8-bit-alu-operation.git,2023-09-08 10:40:09+00:00,,0,laxmankumar3283/8-bit-alu-operation,688898974,SystemVerilog,8-bit-alu-operation,352,0,2023-09-08 10:40:59+00:00,[],
13761,https://github.com/aravChamp/32-Bit-Computer.git,2023-09-07 05:31:10+00:00,,0,aravChamp/32-Bit-Computer,688318771,SystemVerilog,32-Bit-Computer,3879,0,2023-10-12 11:06:12+00:00,[],
13762,https://github.com/moechaker/AHB_RAM_Test_Bench.git,2023-09-08 05:49:46+00:00,,0,moechaker/AHB_RAM_Test_Bench,688792405,SystemVerilog,AHB_RAM_Test_Bench,177,0,2023-09-08 05:52:40+00:00,[],
13763,https://github.com/sharathat45/block_diagram_generator.git,2023-09-18 02:19:24+00:00,Generate drawio blocks for system verilog modules,0,sharathat45/block_diagram_generator,692936799,SystemVerilog,block_diagram_generator,227,0,2023-09-20 06:17:50+00:00,[],
13764,https://github.com/kikifana/Integrated-Circuits.git,2023-09-29 10:31:41+00:00,,0,kikifana/Integrated-Circuits,698177738,SystemVerilog,Integrated-Circuits,4,0,2023-09-29 10:32:15+00:00,[],
13765,https://github.com/My-laniaKeA/computer-organization.git,2023-10-02 09:07:46+00:00,Implementation of a FPGA supported RISC-V CPU with  5-stage pipeline in SystemVerilog,0,My-laniaKeA/computer-organization,699255874,SystemVerilog,computer-organization,304,0,2023-10-02 09:31:24+00:00,[],
13766,https://github.com/kaku-panda/i2c.git,2023-10-03 15:57:14+00:00,,0,kaku-panda/i2c,699927241,SystemVerilog,i2c,1,0,2023-10-03 15:58:05+00:00,[],
13767,https://github.com/swapnilanand123/FIFO.git,2023-09-29 14:07:31+00:00,"The ""FIFO Basic Operation"" test case is designed to verify the fundamental functionality of a FIFO (First-In-First-Out) memory. The test steps cover initialization, data writing, verification of data writing order, data reading, verification of data reading order, and testing boundary conditions such as overflow and underflow scenarios.",0,swapnilanand123/FIFO,698258234,SystemVerilog,FIFO,24,0,2023-09-29 15:23:48+00:00,[],
13768,https://github.com/baymax06in19/ibex_v2_2.git,2023-09-02 07:32:37+00:00,,0,baymax06in19/ibex_v2_2,686258536,SystemVerilog,ibex_v2_2,149,0,2023-09-02 07:33:44+00:00,[],
13769,https://github.com/mlokesh004/VLSI_Basics.git,2023-09-01 15:08:48+00:00,Here I've provided the basic knowledge required to enter into VLSI industry.,0,mlokesh004/VLSI_Basics,686028910,SystemVerilog,VLSI_Basics,32,0,2023-10-07 17:41:18+00:00,[],
13770,https://github.com/Srivathsa2304/FIFO_UVM.git,2023-09-11 09:58:36+00:00,,0,Srivathsa2304/FIFO_UVM,689982160,SystemVerilog,FIFO_UVM,101,0,2023-09-11 10:00:17+00:00,[],
13771,https://github.com/Shivaprasadm02/ahb-apb.git,2023-09-15 10:33:39+00:00,,0,Shivaprasadm02/ahb-apb,691996751,SystemVerilog,ahb-apb,35,0,2024-02-04 12:02:27+00:00,[],
13772,https://github.com/PeterHung26/Computer-Architecture.git,2023-10-03 04:11:53+00:00,Fall 2023 ECE43700 Computer Design and Prototype Lab code,0,PeterHung26/Computer-Architecture,699652319,SystemVerilog,Computer-Architecture,239,0,2023-12-24 10:02:33+00:00,[],
13773,https://github.com/deadfffool/HUST-Risc-V-Teamwork.git,2023-09-18 01:31:14+00:00,,0,deadfffool/HUST-Risc-V-Teamwork,692925673,SystemVerilog,HUST-Risc-V-Teamwork,95707,0,2023-11-06 06:43:56+00:00,[],
13774,https://github.com/Vscnk2/main.git,2023-09-14 05:02:46+00:00,,0,Vscnk2/main,691392901,SystemVerilog,main,7,0,2023-09-14 05:03:57+00:00,[],
13775,https://github.com/NievasAgustin/Microelectronics_QuartusII_altera.git,2023-09-02 22:44:54+00:00,,0,NievasAgustin/Microelectronics_QuartusII_altera,686470586,SystemVerilog,Microelectronics_QuartusII_altera,493,0,2023-09-02 22:46:37+00:00,[],https://api.github.com/licenses/cc0-1.0
13776,https://github.com/shrutsiv/out-of-order.git,2023-09-04 21:01:01+00:00,,0,shrutsiv/out-of-order,687195430,SystemVerilog,out-of-order,29,0,2023-09-04 21:03:45+00:00,[],https://api.github.com/licenses/mit
13777,https://github.com/princemahi2001/UVM.git,2023-09-16 09:55:56+00:00,,0,princemahi2001/UVM,692379310,SystemVerilog,UVM,8,0,2023-09-16 09:56:40+00:00,[],https://api.github.com/licenses/epl-2.0
13778,https://github.com/mohamedwaleed-cu/Simple-UVM-Environment-For-A-small-computation-storage-with-PDF-results-.git,2023-09-18 11:57:38+00:00,"We send one commend with address 1 to read OPERAND 1, address 2 to read OPERAND 2, operation (add/sub/..etc), then write address to store results. using Questa tool We preload the Memory in the project using readmemh and generate the preloading file using a TCL script Finally, we compare final memory contains with preloaded file using a TCL script",0,mohamedwaleed-cu/Simple-UVM-Environment-For-A-small-computation-storage-with-PDF-results-,693124644,SystemVerilog,Simple-UVM-Environment-For-A-small-computation-storage-with-PDF-results-,2711,0,2023-09-18 11:59:33+00:00,[],
13779,https://github.com/0ZoZ0/Verification_Component_4-Port_Switch_Design.git,2023-09-22 18:55:00+00:00,,0,0ZoZ0/Verification_Component_4-Port_Switch_Design,695280141,SystemVerilog,Verification_Component_4-Port_Switch_Design,8,0,2023-09-22 19:04:25+00:00,[],
13780,https://github.com/kiana-msz/MIPS-Processor.git,2023-09-23 14:28:01+00:00,,0,kiana-msz/MIPS-Processor,695550315,SystemVerilog,MIPS-Processor,998,0,2023-09-23 14:50:21+00:00,[],
13781,https://github.com/STORMBREAKER369/100Rtl_days_challenge.git,2023-09-24 07:15:05+00:00,,0,STORMBREAKER369/100Rtl_days_challenge,695773426,SystemVerilog,100Rtl_days_challenge,137,0,2023-09-27 17:24:52+00:00,[],https://api.github.com/licenses/gpl-3.0
13782,https://github.com/feipenghhq/AXI4-Lite-IP.git,2023-09-26 02:51:52+00:00,AXI4 Lite IPs,0,feipenghhq/AXI4-Lite-IP,696574892,SystemVerilog,AXI4-Lite-IP,1194,0,2023-09-29 05:44:49+00:00,[],https://api.github.com/licenses/mit
13783,https://github.com/world-champion/YAPP.git,2023-10-01 08:54:36+00:00,I implement yapp router,0,world-champion/YAPP,698878358,SystemVerilog,YAPP,103,0,2023-10-01 08:57:59+00:00,[],
13784,https://github.com/RCTd/AMD_AutumnPractice.git,2023-09-28 14:21:25+00:00,,0,RCTd/AMD_AutumnPractice,697811046,SystemVerilog,AMD_AutumnPractice,4601,0,2023-09-28 20:07:23+00:00,[],
13785,https://github.com/CroosJJSE/FIR_Filter.git,2023-09-11 16:33:21+00:00,"parameterized fir filter,",0,CroosJJSE/FIR_Filter,690157214,SystemVerilog,FIR_Filter,10,0,2023-09-11 16:34:16+00:00,[],
13786,https://github.com/meekhel113/data_unpack.git,2023-09-02 04:11:57+00:00,,0,meekhel113/data_unpack,686217442,SystemVerilog,data_unpack,17852,0,2023-09-02 04:27:23+00:00,[],
13787,https://github.com/bjybs123/fMAC-ws.git,2023-09-02 06:15:17+00:00,block floating point MAC unit supporting both forward pass and backward pass,0,bjybs123/fMAC-ws,686240973,SystemVerilog,fMAC-ws,4,0,2023-09-02 06:16:53+00:00,[],
13788,https://github.com/aconsiglio03/alarmclock.git,2023-09-08 20:01:05+00:00,Alarm clock built using verilog,0,aconsiglio03/alarmclock,689101388,SystemVerilog,alarmclock,2570,0,2023-10-10 16:49:04+00:00,[],
13789,https://github.com/Srivathsa2304/UVM_FIFO_UPDATED.git,2023-09-15 04:19:24+00:00,,0,Srivathsa2304/UVM_FIFO_UPDATED,691870054,SystemVerilog,UVM_FIFO_UPDATED,26,0,2023-09-15 04:19:48+00:00,[],
13790,https://github.com/baymax06in19/ibex_V2.git,2023-09-02 07:20:48+00:00,,0,baymax06in19/ibex_V2,686255679,SystemVerilog,ibex_V2,150,0,2023-09-02 07:24:25+00:00,[],
13791,https://github.com/TPots/sv_umul.git,2023-09-19 02:59:09+00:00,Unsigned integer multiplication module in systemverilog,0,TPots/sv_umul,693434399,SystemVerilog,sv_umul,45,0,2023-09-19 02:59:52+00:00,[],
13792,https://github.com/LucasdeAl/Hamming_code_SystemVerilog.git,2023-09-19 15:42:23+00:00,this repository contains a Design and test with SystemVerilog of a hamming code module error corrector,0,LucasdeAl/Hamming_code_SystemVerilog,693730496,SystemVerilog,Hamming_code_SystemVerilog,2,0,2023-09-19 15:44:42+00:00,[],
13793,https://github.com/belcogo/digital-systems-architecture.git,2023-08-31 01:37:37+00:00,,0,belcogo/digital-systems-architecture,685324653,SystemVerilog,digital-systems-architecture,87,0,2023-08-31 01:59:39+00:00,[],
13794,https://github.com/nabeehdaouk/Clock-Domain-Crossing-for-Multi-Core-Processor.git,2023-09-12 14:13:29+00:00,Clock Domain Crossing for Multi-Core Processor,0,nabeehdaouk/Clock-Domain-Crossing-for-Multi-Core-Processor,690606847,SystemVerilog,Clock-Domain-Crossing-for-Multi-Core-Processor,187,0,2023-12-05 03:06:30+00:00,[],
13795,https://github.com/codebjjung/Testbench.git,2023-09-19 01:51:52+00:00,,0,codebjjung/Testbench,693416869,SystemVerilog,Testbench,41,0,2023-09-19 02:11:43+00:00,[],
13796,https://github.com/Ujan7/Arquitectura-de-Computadoras.git,2023-09-19 03:05:09+00:00,"Resumen, Practicos y Laboratorios de ADC2023.",0,Ujan7/Arquitectura-de-Computadoras,693435878,SystemVerilog,Arquitectura-de-Computadoras,11981,0,2023-09-21 14:14:41+00:00,[],
13797,https://github.com/ryan2298/CR1.git,2023-09-07 19:10:53+00:00,,0,ryan2298/CR1,688635005,SystemVerilog,CR1,23481,0,2023-11-14 19:16:55+00:00,[],
13798,https://github.com/d4nny815/RISCV-Multicycle-InteGraphics.git,2023-09-06 18:27:00+00:00,,0,d4nny815/RISCV-Multicycle-InteGraphics,688140370,SystemVerilog,RISCV-Multicycle-InteGraphics,1862,0,2024-02-17 21:20:33+00:00,[],
13799,https://github.com/Nanthakumar2k3/HDL_Bits.git,2023-09-12 13:59:45+00:00,,0,Nanthakumar2k3/HDL_Bits,690600062,SystemVerilog,HDL_Bits,14,0,2023-09-14 08:52:40+00:00,[],
13800,https://github.com/camilocona/digitales2.git,2023-09-18 20:34:21+00:00,,0,camilocona/digitales2,693337299,SystemVerilog,digitales2,3871,0,2024-03-01 18:35:02+00:00,[],
13801,https://github.com/jayantsakhare/apbslave.git,2023-09-18 02:24:18+00:00,,0,jayantsakhare/apbslave,692937927,SystemVerilog,apbslave,1,0,2023-09-18 02:25:36+00:00,[],
13802,https://github.com/wayneouow/ICC2020_SME.git,2023-09-28 20:06:41+00:00,2020 University/College IC Design Contest 大學部標準元件數位電路設計 String Matching Engine,0,wayneouow/ICC2020_SME,697948702,SystemVerilog,ICC2020_SME,473,0,2023-09-28 20:08:37+00:00,[],
13803,https://github.com/guibord2/LC-3_Microprocessor.git,2023-09-28 22:47:50+00:00,,0,guibord2/LC-3_Microprocessor,697991608,SystemVerilog,LC-3_Microprocessor,8698,0,2023-09-28 22:52:07+00:00,[],
13804,https://github.com/Fall-2023-Classes/lab_3_early_debouncer.git,2023-09-17 20:27:18+00:00,,0,Fall-2023-Classes/lab_3_early_debouncer,692868120,SystemVerilog,lab_3_early_debouncer,14,0,2023-09-23 02:35:19+00:00,[],
13805,https://github.com/theashix/8-bit_multiplier.git,2023-09-23 22:05:43+00:00,8-bit multiplier module implemented on SystemVerilog meant for the xc7s50csga324-1 Spartan 7 FPGA,0,theashix/8-bit_multiplier,695682045,SystemVerilog,8-bit_multiplier,21,0,2023-09-23 22:40:52+00:00,"['fpga', 'spartan-7', 'systemverilog', 'vivado', 'xilinx']",
13806,https://github.com/rishisin999/SystemVerilog_Revision.git,2023-09-24 16:08:16+00:00,,0,rishisin999/SystemVerilog_Revision,695917518,SystemVerilog,SystemVerilog_Revision,10,0,2023-09-24 16:09:39+00:00,[],https://api.github.com/licenses/mit
13807,https://github.com/janah-2/Single-Cycle-RISCV-Processor.git,2023-09-18 04:26:32+00:00,Single Cycle RISCV Processor,0,janah-2/Single-Cycle-RISCV-Processor,692965759,SystemVerilog,Single-Cycle-RISCV-Processor,10,0,2023-09-18 04:42:20+00:00,[],
13808,https://github.com/reed-foster/halfband_polyphase_test.git,2023-09-18 15:45:30+00:00,Synthesizable verilog for 4GS/s decimating halfband FIR filter,0,reed-foster/halfband_polyphase_test,693226728,SystemVerilog,halfband_polyphase_test,15,0,2023-09-18 15:46:03+00:00,[],https://api.github.com/licenses/gpl-3.0
13809,https://github.com/PavanHegde15/SV_Constraints.git,2023-09-22 12:43:08+00:00,Solved Few constraint Questions.,1,PavanHegde15/SV_Constraints,695137584,SystemVerilog,SV_Constraints,31,0,2023-09-25 08:52:26+00:00,[],
13810,https://github.com/Yuhua-Y/icc2020.git,2023-09-08 09:48:37+00:00,,0,Yuhua-Y/icc2020,688879828,SystemVerilog,icc2020,4,0,2023-09-08 09:49:03+00:00,[],
13811,https://github.com/ravippanchal/BasysBoardCPU.git,2023-09-16 23:13:04+00:00,,0,ravippanchal/BasysBoardCPU,692578621,SystemVerilog,BasysBoardCPU,31728,0,2023-09-17 00:47:01+00:00,[],
13812,https://github.com/Oscar-FZ/Proyecto1_Verificacion.git,2023-10-02 23:20:42+00:00,,0,Oscar-FZ/Proyecto1_Verificacion,699584687,SystemVerilog,Proyecto1_Verificacion,58,0,2023-10-02 23:22:48+00:00,[],
13813,https://github.com/amansasidharan/sv-files.git,2023-09-05 06:12:06+00:00,,0,amansasidharan/sv-files,687327064,SystemVerilog,sv-files,10,0,2023-09-05 06:21:31+00:00,[],
13814,https://github.com/Tech-mohankrishna/verification_concepts.git,2023-09-06 08:30:28+00:00,,0,Tech-mohankrishna/verification_concepts,687898382,SystemVerilog,verification_concepts,1,0,2023-09-06 08:37:17+00:00,[],
13815,https://github.com/frannyJO/ClassReport1.git,2023-09-05 21:58:54+00:00,,0,frannyJO/ClassReport1,687725441,SystemVerilog,ClassReport1,17,0,2023-09-08 00:27:34+00:00,[],
13816,https://github.com/JY251/LeetCode_Hardware.git,2023-09-09 09:15:20+00:00,,0,JY251/LeetCode_Hardware,689265518,SystemVerilog,LeetCode_Hardware,2,0,2023-09-09 13:28:53+00:00,[],
13817,https://github.com/LBranco27/verilog_practice.git,2023-09-04 01:56:26+00:00,Practice. Verilog simple CPU.,0,LBranco27/verilog_practice,686813771,SystemVerilog,verilog_practice,1,0,2023-09-04 02:32:52+00:00,[],
13818,https://github.com/FilzaShahid/AHB3_Lite_Interface_Verification.git,2023-09-21 08:39:27+00:00,To create a layered testbench architecture design in System Verilog for AHB-Lite Slave Protocol,0,FilzaShahid/AHB3_Lite_Interface_Verification,694559838,SystemVerilog,AHB3_Lite_Interface_Verification,155,0,2023-12-19 06:01:35+00:00,[],
13819,https://github.com/michealsafwat/ALU-verification-using-COCOTB.git,2023-09-21 14:11:12+00:00,,0,michealsafwat/ALU-verification-using-COCOTB,694698278,SystemVerilog,ALU-verification-using-COCOTB,924,0,2023-09-21 14:28:08+00:00,[],
13820,https://github.com/Gueguettee/digital-circuits-design-workspace.git,2023-09-28 09:30:59+00:00,,0,Gueguettee/digital-circuits-design-workspace,697695953,SystemVerilog,digital-circuits-design-workspace,4125,0,2023-12-15 15:18:12+00:00,[],
13821,https://github.com/rakshitharnayak/Synchronous_FIFO.git,2023-09-07 04:45:02+00:00,"A synchronous FIFO refers to a FIFO design where data values are written sequentially into a memory array using a clock signal, and the data values are sequentially read out from the memory array using the same clock signal",0,rakshitharnayak/Synchronous_FIFO,688306574,SystemVerilog,Synchronous_FIFO,119,0,2024-03-17 07:09:34+00:00,[],
13822,https://github.com/scorbetta/grogu.git,2023-09-05 10:02:23+00:00,CSR block automation for RTL design,0,scorbetta/grogu,687413350,SystemVerilog,grogu,61,0,2023-09-20 09:19:51+00:00,[],https://api.github.com/licenses/cern-ohl-w-2.0
13823,https://github.com/lakpahana/hdl_verilog_practice.git,2023-09-03 16:04:15+00:00,,0,lakpahana/hdl_verilog_practice,686685233,SystemVerilog,hdl_verilog_practice,7,0,2023-09-04 20:05:21+00:00,[],
13824,https://github.com/poojarynikitha/FIFO.git,2023-09-11 10:31:15+00:00,,0,poojarynikitha/FIFO,689994925,SystemVerilog,FIFO,43,0,2023-09-12 05:12:34+00:00,[],
13825,https://github.com/Dhruv0Upadhyay/UVM-Debug.git,2023-09-02 06:34:11+00:00,,0,Dhruv0Upadhyay/UVM-Debug,686245071,SystemVerilog,UVM-Debug,16,0,2023-09-02 06:36:23+00:00,[],
13826,https://github.com/mithraapoorva/FIFO_UVM.git,2023-09-07 06:16:00+00:00,whole code,0,mithraapoorva/FIFO_UVM,688332317,SystemVerilog,FIFO_UVM,3203,0,2023-09-11 09:32:24+00:00,[],
13827,https://github.com/baymax06in19/dvcon_final_rtl.git,2023-09-05 17:36:51+00:00,,0,baymax06in19/dvcon_final_rtl,687640763,SystemVerilog,dvcon_final_rtl,150,0,2023-09-05 17:38:56+00:00,[],
13828,https://github.com/ashlesh795/pes_fast_counter.git,2023-09-03 05:54:02+00:00,,0,ashlesh795/pes_fast_counter,686537613,SystemVerilog,pes_fast_counter,3,0,2023-09-03 05:55:26+00:00,[],
13829,https://github.com/ronniegertman/pacman.git,2023-09-08 16:49:30+00:00,pacman using systemVerilog,0,ronniegertman/pacman,689040824,SystemVerilog,pacman,570,0,2023-09-10 13:17:26+00:00,[],
13830,https://github.com/yallecarvalho/LOAC.git,2023-09-18 11:43:28+00:00,Roteiros desenvolvidos na disciplina de LOAC (Laboratório de Organização de Arquitetura de Computadores),0,yallecarvalho/LOAC,693118950,SystemVerilog,LOAC,1406,0,2023-09-18 11:44:35+00:00,[],
13831,https://github.com/sumanthbs17/fifo_new.git,2023-09-19 06:48:16+00:00,,0,sumanthbs17/fifo_new,693502224,SystemVerilog,fifo_new,6,0,2023-09-19 06:49:00+00:00,[],
13832,https://github.com/birdybro/cegen_sv.git,2023-09-19 04:30:13+00:00,"Simple synchronous 50% duty cycle clock generator with external division factor parameter, written in SystemVerilog",0,birdybro/cegen_sv,693457718,SystemVerilog,cegen_sv,3,0,2023-10-17 14:23:45+00:00,[],https://api.github.com/licenses/mit
13833,https://github.com/feipenghhq/UART_Controller.git,2023-09-19 04:31:54+00:00,,0,feipenghhq/UART_Controller,693458172,SystemVerilog,UART_Controller,1419,0,2023-10-19 04:47:02+00:00,[],https://api.github.com/licenses/mit
13834,https://github.com/Breian/sub_table_decryption.git,2023-09-25 09:07:43+00:00,"An implementation on Verilog of a substitution table for decryption, with STA and logic synthesis",0,Breian/sub_table_decryption,696187374,SystemVerilog,sub_table_decryption,1519,0,2023-09-25 09:10:22+00:00,[],
13835,https://github.com/srikanthvvs1/common_ip.git,2023-09-15 19:18:03+00:00,,0,srikanthvvs1/common_ip,692193207,SystemVerilog,common_ip,1,0,2023-09-15 19:18:11+00:00,[],
13836,https://github.com/melt-umn/tree-sharing-demo.git,2023-09-13 17:38:36+00:00,"Example language for our SLE paper ""Sharing Trees and Contextual Information: Re-imagining Forwarding in Attribute Grammars""",0,melt-umn/tree-sharing-demo,691200791,SystemVerilog,tree-sharing-demo,24,0,2023-09-13 17:39:06+00:00,[],https://api.github.com/licenses/lgpl-3.0
13837,https://github.com/MaddieVorhies/ELC5396_ClassReport2.git,2023-09-15 03:41:28+00:00,,0,MaddieVorhies/ELC5396_ClassReport2,691861166,SystemVerilog,ELC5396_ClassReport2,5,0,2023-09-15 03:43:01+00:00,[],
13838,https://github.com/Shreyast27/FIFO_QUESTA.git,2023-09-14 10:34:13+00:00,,0,Shreyast27/FIFO_QUESTA,691514339,SystemVerilog,FIFO_QUESTA,5,0,2023-09-14 10:34:55+00:00,[],
13839,https://github.com/abbmir/block_b_uvmf.proj.git,2023-09-27 02:23:06+00:00,,0,abbmir/block_b_uvmf.proj,697077192,SystemVerilog,block_b_uvmf.proj,77,0,2023-09-27 02:23:14+00:00,[],
13840,https://github.com/nguyendaithien/PULPISSIMO.git,2023-10-01 16:44:09+00:00,,0,nguyendaithien/PULPISSIMO,699007563,SystemVerilog,PULPISSIMO,7157,0,2023-10-12 00:33:09+00:00,[],
13841,https://github.com/SMejia115/RISCV-ARCHITECTURE.git,2023-09-27 21:22:33+00:00,,0,SMejia115/RISCV-ARCHITECTURE,697499517,SystemVerilog,RISCV-ARCHITECTURE,1243,0,2023-11-20 22:01:35+00:00,[],
13842,https://github.com/hhh2639168682/picoMIPS.git,2023-09-06 19:18:47+00:00,,0,hhh2639168682/picoMIPS,688160097,SystemVerilog,picoMIPS,916,0,2024-02-01 01:41:06+00:00,[],
13843,https://github.com/EpsLeonid/Student-2023.git,2023-09-04 18:26:46+00:00,,0,EpsLeonid/Student-2023,687150811,SystemVerilog,Student-2023,13618,0,2023-09-04 18:40:13+00:00,[],
13844,https://github.com/OmkarShelar4242/System-Verilog.git,2023-09-08 14:55:33+00:00,,0,OmkarShelar4242/System-Verilog,688998518,SystemVerilog,System-Verilog,155,0,2023-09-08 15:03:56+00:00,[],
13845,https://github.com/gaph-pucrs/Hermes.git,2023-10-02 17:00:49+00:00,Wormhole packet-switching Network-on-Chip with XY routing,0,gaph-pucrs/Hermes,699453127,SystemVerilog,Hermes,49,0,2023-10-04 20:19:23+00:00,[],
13846,https://github.com/HenryJuan325/IC_CONTEST_2022_Job-Assingment-Machine.git,2023-10-02 08:54:47+00:00,Job Assigment Machine,0,HenryJuan325/IC_CONTEST_2022_Job-Assingment-Machine,699251072,SystemVerilog,IC_CONTEST_2022_Job-Assingment-Machine,648,0,2023-10-02 09:18:00+00:00,[],
13847,https://github.com/Akshit358/traffic_task.git,2023-09-30 14:32:03+00:00,advanced embedded system task 6.1 activity 2 ,0,Akshit358/traffic_task,698644455,SystemVerilog,traffic_task,3,0,2023-09-30 14:33:18+00:00,[],
13848,https://github.com/BROsandr/design_school.git,2023-09-22 12:13:51+00:00,,0,BROsandr/design_school,695126556,SystemVerilog,design_school,40028,0,2023-09-22 12:21:18+00:00,[],
13849,https://github.com/chen96013/VLSI-AI-Accelerator.git,2023-09-28 12:42:56+00:00,final proect in NCKU VLSI system design,0,chen96013/VLSI-AI-Accelerator,697768004,SystemVerilog,VLSI-AI-Accelerator,16,0,2023-10-02 12:04:17+00:00,[],
13850,https://github.com/dungagucoo1/RTL.git,2023-09-29 14:07:42+00:00,,0,dungagucoo1/RTL,698258315,SystemVerilog,RTL,4,0,2023-09-29 14:11:19+00:00,[],
13851,https://github.com/hsien1005/MCU-DESIGN.git,2023-09-21 01:48:49+00:00,,0,hsien1005/MCU-DESIGN,694433519,SystemVerilog,MCU-DESIGN,16,0,2023-09-21 01:50:48+00:00,[],
13852,https://github.com/anushapadma/FIFO1.git,2023-09-21 07:01:24+00:00,,0,anushapadma/FIFO1,694521747,SystemVerilog,FIFO1,20,0,2023-09-21 07:02:25+00:00,[],
13853,https://github.com/DolAi17/classassignment.git,2023-09-25 03:50:07+00:00,,0,DolAi17/classassignment,696086311,SystemVerilog,classassignment,6,0,2023-09-25 04:00:11+00:00,[],
13854,https://github.com/bumjoooon/conextt_class.git,2023-09-25 03:48:31+00:00,,0,bumjoooon/conextt_class,696085932,SystemVerilog,conextt_class,10,0,2023-09-25 04:42:59+00:00,[],
13855,https://github.com/etngo2001/EE271.git,2023-09-25 20:35:34+00:00,Digital Circuits and Systems,0,etngo2001/EE271,696480192,SystemVerilog,EE271,334112,0,2023-09-26 00:50:04+00:00,[],
13856,https://github.com/YoussefMekawy/UVM_Verifivation_To_Memory.git,2023-09-30 21:20:40+00:00,"Develoved a UVM verification environment from scratch and used it to verify the functionality of a memory where I used random testing , constrained random testing and directed testing to check the corner cases of the design and also checked the coverage of the design and ensured that I got 100 functional and code coverage",0,YoussefMekawy/UVM_Verifivation_To_Memory,698752819,SystemVerilog,UVM_Verifivation_To_Memory,11,0,2023-09-30 21:26:04+00:00,[],
13857,https://github.com/dihernandez/SystemVerilogProjects.git,2023-10-03 21:08:55+00:00,Me practicing with different System Verilog concepts,0,dihernandez/SystemVerilogProjects,700052146,SystemVerilog,SystemVerilogProjects,12,0,2023-10-03 21:13:50+00:00,[],
13858,https://github.com/Ai-TaSAi/rca-7-segment-display.git,2023-10-03 08:30:07+00:00,Ripple carry adder connected to a multiplexer and 7 segment display interpreter to perform basic addition. Implemented in Vivado.,0,Ai-TaSAi/rca-7-segment-display,699735534,SystemVerilog,rca-7-segment-display,657,0,2023-10-03 08:36:27+00:00,[],
13860,https://github.com/ShichenQiao/HDLBits_Solutions.git,2023-09-04 23:00:58+00:00,Shichen Qiao's solutions to all Verilog problems on https://hdlbits.01xz.net/,0,ShichenQiao/HDLBits_Solutions,687221210,SystemVerilog,HDLBits_Solutions,49,0,2023-09-05 05:51:54+00:00,[],
13861,https://github.com/BrunoHoffmann15/arquitetura-sistemas-digitais-praticas.git,2023-09-05 01:26:18+00:00,,0,BrunoHoffmann15/arquitetura-sistemas-digitais-praticas,687253706,SystemVerilog,arquitetura-sistemas-digitais-praticas,2,0,2023-09-05 02:41:01+00:00,[],
13862,https://github.com/Srivathsa2304/FIFO-UVM-Using-one-agent.git,2023-09-17 08:58:39+00:00,,0,Srivathsa2304/FIFO-UVM-Using-one-agent,692683603,SystemVerilog,FIFO-UVM-Using-one-agent,45,0,2023-09-19 10:27:01+00:00,[],
13863,https://github.com/Engineer-Ayesha-Shafique/4-input-OR-gate-using-system-verilog.git,2023-09-13 04:00:30+00:00,,0,Engineer-Ayesha-Shafique/4-input-OR-gate-using-system-verilog,690873681,SystemVerilog,4-input-OR-gate-using-system-verilog,3,0,2023-12-15 06:53:55+00:00,[],
13864,https://github.com/PrathammGupta/5.1p-SIT329.git,2023-09-18 03:56:56+00:00,,0,PrathammGupta/5.1p-SIT329,692959276,SystemVerilog,5.1p-SIT329,1,0,2023-09-18 03:57:30+00:00,[],
13865,https://github.com/wolfenstein11x/NBA_shot_clock.git,2023-09-09 15:54:46+00:00,,0,wolfenstein11x/NBA_shot_clock,689375265,SystemVerilog,NBA_shot_clock,1,0,2023-09-09 15:55:19+00:00,[],
13866,https://github.com/Shreyast27/fifo_uvm_1.git,2023-09-19 04:42:32+00:00,,0,Shreyast27/fifo_uvm_1,693461395,SystemVerilog,fifo_uvm_1,7,0,2023-09-19 04:43:16+00:00,[],
13867,https://github.com/bhanusahithya/mypractice.git,2023-09-22 01:13:03+00:00,,0,bhanusahithya/mypractice,694922010,SystemVerilog,mypractice,88721,0,2023-10-27 20:34:01+00:00,[],
13868,https://github.com/jnjnliwenjie0022/uvm_parameter.git,2023-09-18 09:41:40+00:00,,0,jnjnliwenjie0022/uvm_parameter,693072957,SystemVerilog,uvm_parameter,3,0,2023-09-18 09:43:46+00:00,[],
13869,https://github.com/SuganVen/Clock-Divider.git,2023-09-01 17:55:52+00:00,,0,SuganVen/Clock-Divider,686086917,SystemVerilog,Clock-Divider,6,0,2023-09-05 03:29:41+00:00,[],
13870,https://github.com/TriptiChanda/UVM-Verification-FIFO.git,2023-09-02 19:16:08+00:00,A UVM verification model for asynchronous FIFO,0,TriptiChanda/UVM-Verification-FIFO,686431920,SystemVerilog,UVM-Verification-FIFO,29,0,2023-09-02 19:20:36+00:00,[],
13871,https://github.com/dtzSiFive/chipyard-hoist-comparison.git,2023-09-12 20:40:11+00:00,Chipyard before/after comparison for passthrough hoisting,0,dtzSiFive/chipyard-hoist-comparison,690765085,SystemVerilog,chipyard-hoist-comparison,6515,0,2023-09-12 20:40:44+00:00,[],
13872,https://github.com/CroosJJSE/sequence_detector.git,2023-09-09 10:01:36+00:00,"i made a overlapping sequence detector, here it detects ""1011""",0,CroosJJSE/sequence_detector,689277535,SystemVerilog,sequence_detector,3,0,2023-09-09 10:10:19+00:00,[],
13873,https://github.com/adachi6k/MultiportRam.git,2023-09-08 18:47:43+00:00,,0,adachi6k/MultiportRam,689080007,SystemVerilog,MultiportRam,3,0,2023-09-08 19:13:27+00:00,[],
13874,https://github.com/mahmedadawy2013/Cocotb_Project.git,2023-09-05 12:19:13+00:00,,0,mahmedadawy2013/Cocotb_Project,687467416,SystemVerilog,Cocotb_Project,1040,0,2023-09-05 12:45:51+00:00,[],
13875,https://github.com/MiaoE/Digital-and-Computer-Systems-Labs.git,2023-09-11 02:25:42+00:00,,0,MiaoE/Digital-and-Computer-Systems-Labs,689837075,SystemVerilog,Digital-and-Computer-Systems-Labs,53,0,2023-09-11 02:43:55+00:00,[],
13876,https://github.com/sweet12prof/Protocols.git,2023-09-24 06:05:04+00:00,,0,sweet12prof/Protocols,695758802,SystemVerilog,Protocols,42049,0,2024-04-03 11:32:18+00:00,[],
13877,https://github.com/RISCY-Lib/i2c_agent.git,2023-10-02 18:47:24+00:00,,0,RISCY-Lib/i2c_agent,699497291,SystemVerilog,i2c_agent,25,0,2023-10-03 18:30:18+00:00,[],https://api.github.com/licenses/lgpl-2.1
13878,https://github.com/yyyyyml/BoYa-CPU.git,2023-09-04 10:51:08+00:00,,0,yyyyyml/BoYa-CPU,686976528,SystemVerilog,BoYa-CPU,8709,0,2023-09-05 05:56:19+00:00,[],
13879,https://github.com/shishir03/hamming-9bit-processor.git,2023-09-06 05:13:09+00:00,,0,shishir03/hamming-9bit-processor,687830697,SystemVerilog,hamming-9bit-processor,8429,0,2023-09-06 05:31:47+00:00,[],
13880,https://github.com/TClyj/Frogger.git,2023-09-07 01:49:18+00:00,"It is a project which writing Systemverilog code in Quartus and building needed hardware to achieve the classic arcade game ""Frogger"".",0,TClyj/Frogger,688262571,SystemVerilog,Frogger,8,0,2023-09-07 03:14:47+00:00,[],
13881,https://github.com/jaysunl/fifo.git,2023-09-02 22:37:09+00:00,,0,jaysunl/fifo,686469536,SystemVerilog,fifo,7,0,2023-09-03 07:09:33+00:00,[],
13882,https://github.com/Nikhilaraghuram/FIFO_uvm_TB.git,2023-09-07 04:36:47+00:00,,0,Nikhilaraghuram/FIFO_uvm_TB,688304557,SystemVerilog,FIFO_uvm_TB,51,0,2023-09-07 04:47:19+00:00,[],
13883,https://github.com/nguyencanhtrung/sv-common.git,2023-09-14 12:14:28+00:00,SystemVerilog Packages for RTL design and verification,0,nguyencanhtrung/sv-common,691552387,SystemVerilog,sv-common,2,0,2023-11-05 09:43:57+00:00,['systemverilog'],https://api.github.com/licenses/mit
13884,https://github.com/stevenli518/UCSD_ECE260A_VLSI-DigitSysAlgorithms-Arch.git,2023-09-30 16:35:18+00:00,,0,stevenli518/UCSD_ECE260A_VLSI-DigitSysAlgorithms-Arch,698682567,SystemVerilog,UCSD_ECE260A_VLSI-DigitSysAlgorithms-Arch,38487,0,2023-12-19 20:04:17+00:00,[],
13885,https://github.com/jomonkjoy/riscv_software_build.git,2023-09-02 16:29:41+00:00,Compiling C code for the RISC-V RV32I architecture using a linker script ,0,jomonkjoy/riscv_software_build,686392222,SystemVerilog,riscv_software_build,14964,0,2023-09-03 13:23:12+00:00,[],https://api.github.com/licenses/gpl-3.0
13886,https://github.com/IlyaChichkov/AXI_Counter.git,2023-08-31 13:15:19+00:00,Реализация AXI интерфейса на SystemVerilog,0,IlyaChichkov/AXI_Counter,685541951,SystemVerilog,AXI_Counter,61,0,2024-03-06 14:03:40+00:00,"['axi', 'fpga', 'interfaces', 'systemverilog']",
13887,https://github.com/PaunchiciAndrei/Request_Acknowledge.git,2023-09-27 19:57:21+00:00,,0,PaunchiciAndrei/Request_Acknowledge,697473486,SystemVerilog,Request_Acknowledge,7,0,2023-09-27 19:59:15+00:00,[],
13888,https://github.com/RAOUMERTC73/Quartus_prime_FILE.git,2023-09-16 09:55:00+00:00,,0,RAOUMERTC73/Quartus_prime_FILE,692379063,SystemVerilog,Quartus_prime_FILE,102857,0,2023-09-16 10:26:38+00:00,[],
13889,https://github.com/alfredxus/Bitcoin-Hash.git,2023-09-29 00:05:48+00:00,Two-stage secure Bitcoin hashing project.,0,alfredxus/Bitcoin-Hash,698008109,SystemVerilog,Bitcoin-Hash,15,0,2023-09-29 00:09:16+00:00,[],
13890,https://github.com/scapekambing/dsm-dac-v0.git,2023-10-01 19:40:02+00:00,,0,scapekambing/dsm-dac-v0,699057653,SystemVerilog,dsm-dac-v0,23,0,2023-10-01 19:40:50+00:00,[],
13891,https://github.com/Sameekshapu/new_fifo.git,2023-09-27 07:02:09+00:00,,0,Sameekshapu/new_fifo,697155128,SystemVerilog,new_fifo,12,0,2023-09-27 07:03:07+00:00,[],
13892,https://github.com/florescuv/APB-Verification-Project.git,2023-09-26 14:08:31+00:00,,0,florescuv/APB-Verification-Project,696830698,SystemVerilog,APB-Verification-Project,39,0,2023-09-26 14:09:48+00:00,[],
13893,https://github.com/chihuahuadog/chasingLEDFPGA.git,2023-10-03 16:42:28+00:00,,0,chihuahuadog/chasingLEDFPGA,699947405,SystemVerilog,chasingLEDFPGA,21,0,2023-10-03 22:23:06+00:00,[],
13894,https://github.com/anbirn/counter_pwm.git,2023-10-03 13:53:48+00:00,SV implementation of a counter. Digital frontend and backend for Cadence.,0,anbirn/counter_pwm,699867325,SystemVerilog,counter_pwm,6,0,2023-10-03 13:58:24+00:00,[],
13895,https://github.com/mohamd-khaled/FIFO.git,2023-09-23 23:45:41+00:00,,0,mohamd-khaled/FIFO,695697643,SystemVerilog,FIFO,1,0,2023-09-23 23:46:53+00:00,[],
13896,https://github.com/yuxxinchen/ECE295.git,2023-09-20 21:29:09+00:00,,0,yuxxinchen/ECE295,694368491,SystemVerilog,ECE295,380,0,2023-09-22 03:19:58+00:00,[],
13897,https://github.com/CroosJJSE/Matrix_Vector_Multiplier.git,2023-09-27 04:07:46+00:00,parameterized matrix multiplier ,0,CroosJJSE/Matrix_Vector_Multiplier,697103024,SystemVerilog,Matrix_Vector_Multiplier,8,0,2023-10-03 09:09:32+00:00,[],
13898,https://github.com/chetha123/SV_Constraints.git,2023-09-22 13:35:51+00:00,Solved Few constraint Questions.,0,chetha123/SV_Constraints,695158551,,SV_Constraints,31,0,2023-09-22 13:35:51+00:00,[],
13899,https://github.com/AlanMarin20/ArquitecturaComputadoresI.git,2023-09-15 19:25:28+00:00,,0,AlanMarin20/ArquitecturaComputadoresI,692195375,SystemVerilog,ArquitecturaComputadoresI,29,0,2023-09-15 19:53:57+00:00,[],
13900,https://github.com/PrabashwaraBBWijesekara/Single_Cycle_RISCV_32I_Processor.git,2023-09-21 06:46:40+00:00,System Verilog Based Implementation of RISC-V 32I Processor,0,PrabashwaraBBWijesekara/Single_Cycle_RISCV_32I_Processor,694516286,SystemVerilog,Single_Cycle_RISCV_32I_Processor,35,0,2023-09-28 16:21:54+00:00,[],
13901,https://github.com/Soujanyasalonkar/FIFO.git,2023-09-19 06:50:42+00:00,,0,Soujanyasalonkar/FIFO,693503077,SystemVerilog,FIFO,34,0,2023-09-19 06:52:58+00:00,[],https://api.github.com/licenses/apache-2.0
13902,https://github.com/yogiVLSI04/30DaysofBasicCodesforVLSI.git,2023-09-18 09:23:51+00:00,"Basic Verilog codes like Gates, adders, subractors, mux, demux, flipflops etc...,",0,yogiVLSI04/30DaysofBasicCodesforVLSI,693065994,SystemVerilog,30DaysofBasicCodesforVLSI,334,0,2023-10-06 14:15:19+00:00,[],
13903,https://github.com/isidorjkaplan/ece496.git,2023-09-20 14:00:22+00:00,,0,isidorjkaplan/ece496,694190352,SystemVerilog,ece496,7730,0,2023-11-21 14:10:58+00:00,[],
13904,https://github.com/Shuregg/miet-interfaces.git,2023-09-26 18:44:24+00:00,Interfaces of computing systems,0,Shuregg/miet-interfaces,696951851,SystemVerilog,miet-interfaces,4968,0,2023-10-23 20:48:51+00:00,"['interfaces', 'protocols', 'verilog', 'verilog-hdl']",
13905,https://github.com/Yoavyu/Alarm-Clock.git,2023-09-26 16:18:14+00:00,"Verilog project. In this project I build a 6-digit clock which also has an alarm mode. It contains 2 alarms, a 'reset' button, and 'turn alarm off' button.",0,Yoavyu/Alarm-Clock,696891311,SystemVerilog,Alarm-Clock,151,0,2023-09-26 16:56:05+00:00,[],
13906,https://github.com/apinise/505_RISC_V.git,2023-09-12 23:14:45+00:00,Single Cycle and Pipelined Multi Cycle RISC-V Processor Written In SystemVerilog,0,apinise/505_RISC_V,690804390,SystemVerilog,505_RISC_V,2564,0,2023-12-06 18:08:29+00:00,[],
13907,https://github.com/npraja-mic/REGISTER-4BIT-2023.git,2023-09-02 09:08:22+00:00,,0,npraja-mic/REGISTER-4BIT-2023,686279868,SystemVerilog,REGISTER-4BIT-2023,1,0,2023-09-02 09:10:28+00:00,[],
13908,https://github.com/Jvlachos/FPGA-VGA-Maze.git,2023-10-03 11:53:44+00:00,Maze game in system Verilog  ,0,Jvlachos/FPGA-VGA-Maze,699814263,SystemVerilog,FPGA-VGA-Maze,6021,0,2023-10-03 11:55:34+00:00,[],
13909,https://github.com/ax0080/JTAG.git,2023-09-19 01:34:15+00:00,,0,ax0080/JTAG,693412064,SystemVerilog,JTAG,2511,0,2023-10-04 01:56:16+00:00,"['dft', 'jtag', 'jtag-boundary-scan']",
13910,https://github.com/BrunoHoffmann15/trab-ga-arquitetura-sistemas-digitais.git,2023-09-19 00:53:19+00:00,,0,BrunoHoffmann15/trab-ga-arquitetura-sistemas-digitais,693401808,SystemVerilog,trab-ga-arquitetura-sistemas-digitais,95,0,2023-09-19 01:40:25+00:00,[],
13911,https://github.com/projectDV/APB_TB.git,2023-09-19 16:28:05+00:00,This contains all necessary TB files for APB,0,projectDV/APB_TB,693750216,SystemVerilog,APB_TB,20,0,2023-10-17 17:41:20+00:00,[],
13912,https://github.com/KeefeAA/SIT329-Advanced-Embedded-Systems.git,2023-09-30 02:46:26+00:00,Advance Embedded Systems,0,KeefeAA/SIT329-Advanced-Embedded-Systems,698469358,SystemVerilog,SIT329-Advanced-Embedded-Systems,21115,0,2023-10-01 21:52:39+00:00,[],
13913,https://github.com/LukeAbers/nand-to-tetris.git,2023-10-01 21:26:23+00:00,,0,LukeAbers/nand-to-tetris,699082566,SystemVerilog,nand-to-tetris,5,0,2023-10-01 21:31:23+00:00,[],
13914,https://github.com/Pinigelbard/Fifo.git,2023-09-10 13:03:32+00:00,,0,Pinigelbard/Fifo,689640179,SystemVerilog,Fifo,0,0,2023-09-10 13:04:25+00:00,[],
13915,https://github.com/Karthik16701/UVM_FIFO.git,2023-09-15 04:58:42+00:00,,0,Karthik16701/UVM_FIFO,691880021,SystemVerilog,UVM_FIFO,236,0,2023-09-15 08:55:30+00:00,[],
13917,https://github.com/OlegPM/NET_SIM.git,2023-09-21 17:28:45+00:00,,0,OlegPM/NET_SIM,694785260,SystemVerilog,NET_SIM,19,0,2023-09-21 17:33:25+00:00,[],
13918,https://github.com/jsagoe1/FPGA-projects.git,2023-09-23 21:48:01+00:00,A collection of personal FPGA projects,0,jsagoe1/FPGA-projects,695678954,SystemVerilog,FPGA-projects,241,0,2023-09-23 22:31:35+00:00,[],https://api.github.com/licenses/mit
13919,https://github.com/HartnettMatt/PersonalProjects.git,2023-09-10 21:03:05+00:00,A home for Matt's random projects.,0,HartnettMatt/PersonalProjects,689771665,SystemVerilog,PersonalProjects,3054,0,2024-02-06 15:38:47+00:00,[],https://api.github.com/licenses/mit
13920,https://github.com/AstroPix/astep-fw.git,2023-09-28 16:28:36+00:00,ASTEp Firmware and software repository,0,AstroPix/astep-fw,697868831,SystemVerilog,astep-fw,2994,0,2023-09-28 16:31:03+00:00,[],
13921,https://github.com/01sharanshetty/FIFO_UVM_SINGLE_FINAL.git,2023-09-18 05:23:10+00:00,,0,01sharanshetty/FIFO_UVM_SINGLE_FINAL,692978995,SystemVerilog,FIFO_UVM_SINGLE_FINAL,7,0,2023-09-18 05:23:42+00:00,[],
13922,https://github.com/Prasthuthi/UVM_FIFO.git,2023-09-19 06:34:23+00:00,,0,Prasthuthi/UVM_FIFO,693497188,SystemVerilog,UVM_FIFO,30,0,2023-09-19 06:35:11+00:00,[],
13923,https://github.com/SunBenqian/cordic_sin_cos.git,2023-09-18 07:51:01+00:00,cordic_sin_cos based on system verilog,0,SunBenqian/cordic_sin_cos,693029299,SystemVerilog,cordic_sin_cos,145,0,2023-09-18 08:12:00+00:00,[],
13924,https://github.com/Mandax78/uvm3.git,2023-09-18 08:15:56+00:00,,0,Mandax78/uvm3,693038703,SystemVerilog,uvm3,112,0,2023-09-18 08:29:14+00:00,[],
13925,https://github.com/wendersoncandido/Arquitetura_de_Computadores.git,2023-09-24 00:57:06+00:00,Arquivos Arquitetura_de_Computadores,0,wendersoncandido/Arquitetura_de_Computadores,695707704,SystemVerilog,Arquitetura_de_Computadores,392,0,2023-09-24 01:22:59+00:00,[],
13926,https://github.com/ashisharyan675/VGA.git,2023-09-20 19:25:44+00:00,,0,ashisharyan675/VGA,694329077,SystemVerilog,VGA,96,0,2023-09-20 19:33:21+00:00,[],
13927,https://github.com/marwan-ramzi/uvm_seq_det.git,2023-10-03 12:52:12+00:00,,0,marwan-ramzi/uvm_seq_det,699838835,SystemVerilog,uvm_seq_det,7,0,2023-10-03 13:13:10+00:00,[],
13928,https://github.com/vvkcode/Systemverilog_sync_fifo_tb.git,2023-09-26 04:20:31+00:00,,0,vvkcode/Systemverilog_sync_fifo_tb,696597404,SystemVerilog,Systemverilog_sync_fifo_tb,9,0,2023-09-26 04:26:56+00:00,[],
13929,https://github.com/dhanasekarp03/UVM-FIFO.git,2023-09-14 10:54:10+00:00,,0,dhanasekarp03/UVM-FIFO,691521401,SystemVerilog,UVM-FIFO,5,0,2023-09-14 10:55:27+00:00,[],
13930,https://github.com/SergioRiosC/Tarea-2-Taller.git,2023-10-01 19:16:20+00:00,Tarea 2 Taller de diseño lógico,0,SergioRiosC/Tarea-2-Taller,699051429,SystemVerilog,Tarea-2-Taller,85787,0,2023-10-06 19:07:26+00:00,[],
13931,https://github.com/world-champion/apb.git,2023-10-01 08:46:38+00:00,,0,world-champion/apb,698876471,SystemVerilog,apb,101,0,2023-10-01 08:46:51+00:00,[],
13932,https://github.com/kaivalyaeAnilP/APB-Master-UVM-Testbench.git,2023-10-03 16:20:38+00:00,,0,kaivalyaeAnilP/APB-Master-UVM-Testbench,699937852,SystemVerilog,APB-Master-UVM-Testbench,9,0,2023-11-30 10:18:45+00:00,[],
13933,https://github.com/DavidWei2022/CMPE140-Lab3-LabDaddies.git,2023-09-18 19:18:22+00:00,Lab Daddies do Lab stuffs,0,DavidWei2022/CMPE140-Lab3-LabDaddies,693311482,SystemVerilog,CMPE140-Lab3-LabDaddies,164,0,2023-10-16 20:42:30+00:00,[],
13934,https://github.com/tliam1/SSP.git,2023-09-01 03:57:21+00:00,Simulation of a single-cycle processor in SystemVerilog,0,tliam1/SSP,685807833,SystemVerilog,SSP,4,0,2023-09-01 03:58:19+00:00,[],
13935,https://github.com/retar-kamuy/axi.git,2023-09-10 04:20:42+00:00,,0,retar-kamuy/axi,689520425,SystemVerilog,axi,1,0,2023-09-10 08:04:58+00:00,[],
13936,https://github.com/anbvcan/Vehicle_Control.git,2023-09-11 02:57:33+00:00,,0,anbvcan/Vehicle_Control,689844860,SystemVerilog,Vehicle_Control,12,0,2023-09-11 02:58:30+00:00,[],
13937,https://github.com/nguyencanhtrung/sv-axis.git,2023-09-12 02:06:33+00:00,AXI4-Stream basic building blocks in SystemVerilog,0,nguyencanhtrung/sv-axis,690335481,SystemVerilog,sv-axis,260391,0,2023-11-07 02:51:10+00:00,['systemverilog'],https://api.github.com/licenses/mit
13938,https://github.com/leobilha/arquitetura-e-organizacao-de-computadores-II-unisinos.git,2023-09-01 17:11:10+00:00,Trabalhos e exercícios da cardeira de Arquitetura e Organização de Computadores na Unisinos,0,leobilha/arquitetura-e-organizacao-de-computadores-II-unisinos,686071999,SystemVerilog,arquitetura-e-organizacao-de-computadores-II-unisinos,202,0,2023-09-12 17:44:27+00:00,[],
13939,https://github.com/RAHUL-1881/VLSI_Grind.git,2023-09-06 15:49:11+00:00,,0,RAHUL-1881/VLSI_Grind,688077526,SystemVerilog,VLSI_Grind,500,0,2023-10-15 06:41:23+00:00,[],https://api.github.com/licenses/bsd-2-clause
13940,https://github.com/marciahernandez1/SoC.git,2023-09-19 22:12:49+00:00,,0,marciahernandez1/SoC,693872716,SystemVerilog,SoC,1411,0,2023-10-13 04:06:14+00:00,[],
13941,https://github.com/curoles/mig-cpu.git,2023-09-25 01:54:22+00:00,,0,curoles/mig-cpu,696058854,SystemVerilog,mig-cpu,111,0,2023-09-25 15:40:00+00:00,[],
13942,https://github.com/singh-rozer/reg_file.git,2023-09-30 17:33:40+00:00,,0,singh-rozer/reg_file,698699488,SystemVerilog,reg_file,16,0,2024-01-26 17:36:28+00:00,[],
13943,https://github.com/Purdue-SoCET/FPU.git,2023-09-25 01:08:21+00:00,Floating-point unit for RISC-V core,0,Purdue-SoCET/FPU,696048127,SystemVerilog,FPU,31160,0,2023-10-05 02:32:45+00:00,[],
13944,https://github.com/RahimullahShaik/isha_NOC.git,2023-09-10 22:55:49+00:00,Network on Chip,0,RahimullahShaik/isha_NOC,689792913,SystemVerilog,isha_NOC,381,0,2024-02-11 22:48:48+00:00,[],
13945,https://github.com/JarlMS/Dual-RISCV-core-for-glitch-protection.git,2023-09-06 12:39:30+00:00,Project thesis based on researching the use of two RISC-V cores for glitch protection to avoid using other costly security measures.,0,JarlMS/Dual-RISCV-core-for-glitch-protection,687995191,SystemVerilog,Dual-RISCV-core-for-glitch-protection,7496,0,2023-12-15 11:37:28+00:00,[],
13946,https://github.com/gyurco/MiST-SiDi-templates.git,2023-09-23 10:31:52+00:00,,0,gyurco/MiST-SiDi-templates,695485473,SystemVerilog,MiST-SiDi-templates,9,0,2023-09-23 10:32:57+00:00,[],
13947,https://github.com/juanserrano-sg/systemverilog_projects.git,2023-09-09 05:50:37+00:00,,0,juanserrano-sg/systemverilog_projects,689217009,SystemVerilog,systemverilog_projects,30493,0,2023-10-30 06:29:29+00:00,[],
13948,https://github.com/Mayank410/6.1p.git,2023-09-05 01:48:07+00:00,,0,Mayank410/6.1p,687259102,SystemVerilog,6.1p,3,0,2023-09-05 01:51:44+00:00,[],
13949,https://github.com/Nikhilaraghuram/SV_basic.git,2023-09-05 05:42:53+00:00,,0,Nikhilaraghuram/SV_basic,687318339,SystemVerilog,SV_basic,10,0,2023-09-05 05:52:16+00:00,[],
13950,https://github.com/EbnerLautaro/SingleCycleProcessor.git,2023-09-06 18:07:27+00:00,Practicos del Arquitectura de Computadoras,0,EbnerLautaro/SingleCycleProcessor,688132587,SystemVerilog,SingleCycleProcessor,44,0,2023-09-06 18:26:07+00:00,[],
13951,https://github.com/wolfenstein11x/FPGA_random_num_gen.git,2023-09-05 18:28:07+00:00,Push button on FPGA to generate pseudo-random 10 but number,0,wolfenstein11x/FPGA_random_num_gen,687660016,SystemVerilog,FPGA_random_num_gen,9547,0,2023-09-05 18:28:46+00:00,[],
13952,https://github.com/TriptiChanda/Bitcoin-Hashing-SHA256.git,2023-09-02 19:28:27+00:00,Bitcoin hashing algorithm using SHA256,0,TriptiChanda/Bitcoin-Hashing-SHA256,686434528,SystemVerilog,Bitcoin-Hashing-SHA256,178,0,2023-09-02 19:30:22+00:00,[],
13953,https://github.com/baymax06in19/ibex_pulpissimo.git,2023-08-31 11:03:43+00:00,,0,baymax06in19/ibex_pulpissimo,685492656,SystemVerilog,ibex_pulpissimo,149,0,2023-08-31 11:09:15+00:00,[],
13954,https://github.com/mitri-afk/multicycle-processor.git,2023-08-31 19:02:53+00:00,A multicycle RISC-V microprocessor written in SystemVerilog,0,mitri-afk/multicycle-processor,685679043,SystemVerilog,multicycle-processor,8,0,2023-09-01 23:35:32+00:00,[],
13955,https://github.com/Fall-2023-Classes/lab-2-square-wave-generator.git,2023-09-13 19:42:20+00:00,,1,Fall-2023-Classes/lab-2-square-wave-generator,691247619,SystemVerilog,lab-2-square-wave-generator,12,0,2023-09-13 20:08:43+00:00,[],
13956,https://github.com/JessilBijou/Security_Ceckmate.git,2023-09-15 15:08:59+00:00,FSM Design using RTL and Security Verification,0,JessilBijou/Security_Ceckmate,692104381,SystemVerilog,Security_Ceckmate,8,0,2023-09-15 15:10:33+00:00,[],https://api.github.com/licenses/mit
13957,https://github.com/USTC-System-Courses/CECS-pipeline-BRAM.git,2023-09-06 05:39:15+00:00,,0,USTC-System-Courses/CECS-pipeline-BRAM,687837654,SystemVerilog,CECS-pipeline-BRAM,13,0,2023-09-06 06:10:32+00:00,[],
13958,https://github.com/stkrknds/UART-SV.git,2023-09-19 22:50:25+00:00,,0,stkrknds/UART-SV,693882161,SystemVerilog,UART-SV,4,0,2023-09-19 22:55:55+00:00,[],
13959,https://github.com/RathodLP/Constraints.git,2023-09-22 13:14:00+00:00,Get it into the System Verilog Constraints,0,RathodLP/Constraints,695149699,SystemVerilog,Constraints,1,0,2023-09-22 13:22:51+00:00,[],
13960,https://github.com/lisaelsi/DAIS.git,2023-10-02 05:20:49+00:00,,0,lisaelsi/DAIS,699180503,SystemVerilog,DAIS,9418,0,2023-10-04 18:05:11+00:00,[],
13961,https://github.com/poojarynikitha/fifo_uvm.git,2023-09-14 15:05:01+00:00,,0,poojarynikitha/fifo_uvm,691630867,SystemVerilog,fifo_uvm,42,0,2023-09-14 15:07:18+00:00,[],
13962,https://github.com/suhan0123/SYN_fifo.git,2023-09-14 11:06:02+00:00,,0,suhan0123/SYN_fifo,691525744,SystemVerilog,SYN_fifo,21,0,2023-09-14 11:07:27+00:00,[],
13963,https://github.com/01sharanshetty/FINAL_UVM_FIFO.git,2023-09-18 08:59:54+00:00,,0,01sharanshetty/FINAL_UVM_FIFO,693056259,SystemVerilog,FINAL_UVM_FIFO,14,0,2023-09-18 09:01:49+00:00,[],
13964,https://github.com/Mandax78/uvm_trianing.git,2023-09-18 07:30:05+00:00,,0,Mandax78/uvm_trianing,693021354,SystemVerilog,uvm_trianing,93,0,2023-09-18 07:45:47+00:00,[],https://api.github.com/licenses/mit
13965,https://github.com/gaph-pucrs/BrLite.git,2023-09-21 21:04:25+00:00,"A lightweight broadcast NoC, derived from BrNoC without backtracking",0,gaph-pucrs/BrLite,694859774,SystemVerilog,BrLite,49,0,2023-09-21 21:08:10+00:00,[],
13966,https://github.com/BrendanBov/Digital-Logic-Design.git,2023-09-18 05:09:44+00:00,Digital Logic Design Spring 2022,0,BrendanBov/Digital-Logic-Design,692975622,SystemVerilog,Digital-Logic-Design,147359,0,2023-09-18 05:40:28+00:00,[],
13967,https://github.com/Jeremy185/Verificacion_bus_de_datos.git,2023-09-23 20:50:35+00:00,En este repositorio se hara seguimiento del desarrollo de un ambiente de verificacion para un bus de datos,0,Jeremy185/Verificacion_bus_de_datos,695660504,SystemVerilog,Verificacion_bus_de_datos,412,0,2023-09-23 23:24:21+00:00,[],
13968,https://github.com/Sloechka/UVM4DV.git,2023-09-24 18:56:18+00:00,Universal Verification Methodology for Design Verification ,1,Sloechka/UVM4DV,695970469,SystemVerilog,UVM4DV,8433,0,2023-12-23 15:25:27+00:00,[],https://api.github.com/licenses/cc-by-sa-4.0
13969,https://github.com/Shreesh-Kulkarni/rv32F-tlv-sv.git,2023-10-03 19:44:23+00:00,A repository consisting of code files for designing the Single Precision Floating Point extension for RV32I.,0,Shreesh-Kulkarni/rv32F-tlv-sv,700021632,SystemVerilog,rv32F-tlv-sv,7,0,2023-12-24 10:57:22+00:00,[],
13970,https://github.com/amlan-acharya/Bus-Protocols.git,2023-09-04 16:13:11+00:00,,0,amlan-acharya/Bus-Protocols,687105533,SystemVerilog,Bus-Protocols,20,0,2024-01-09 09:21:28+00:00,[],https://api.github.com/licenses/mit
13972,https://github.com/PachonIsaac/Procesador-Monociclo.git,2023-10-02 22:40:20+00:00,,0,PachonIsaac/Procesador-Monociclo,699572847,SystemVerilog,Procesador-Monociclo,76,0,2023-11-19 15:05:54+00:00,[],
13973,https://github.com/annascao/FPGA-mini-games.git,2023-09-21 19:18:56+00:00,,0,annascao/FPGA-mini-games,694826637,SystemVerilog,FPGA-mini-games,15716,0,2023-11-27 09:48:13+00:00,[],
13974,https://github.com/tomhaber/rvcpu.git,2023-09-22 12:03:46+00:00,,0,tomhaber/rvcpu,695122518,SystemVerilog,rvcpu,193,0,2023-09-22 20:12:01+00:00,[],
13975,https://github.com/elizabethkooiman/Kooiman_SoC_Project.git,2023-09-28 20:50:34+00:00,,0,elizabethkooiman/Kooiman_SoC_Project,697961737,SystemVerilog,Kooiman_SoC_Project,157482,0,2023-12-05 05:39:16+00:00,[],
13976,https://github.com/vkaralewich/ee322-labs.git,2023-09-25 13:41:46+00:00,,0,vkaralewich/ee322-labs,696302989,SystemVerilog,ee322-labs,369799,0,2023-09-25 13:55:40+00:00,[],
13977,https://github.com/Bhoomi-sravanthi/Fullsub_using_halfsub.git,2023-09-04 01:14:20+00:00,Design and verifying Full subtractor using the Half Subtractor ,0,Bhoomi-sravanthi/Fullsub_using_halfsub,686804892,SystemVerilog,Fullsub_using_halfsub,3,0,2023-09-04 17:13:28+00:00,[],
13978,https://github.com/Buzz-coding-217/ML-in-FPGA.git,2023-09-04 12:52:39+00:00,,0,Buzz-coding-217/ML-in-FPGA,687026580,SystemVerilog,ML-in-FPGA,10,0,2023-09-17 09:29:43+00:00,[],
13979,https://github.com/Tech-mohankrishna/Layered-Testbench-arbiter.git,2023-09-03 05:55:29+00:00,,0,Tech-mohankrishna/Layered-Testbench-arbiter,686537920,SystemVerilog,Layered-Testbench-arbiter,13,0,2023-09-03 05:56:14+00:00,[],
13980,https://github.com/npraja-mic/JK-FF-2023.git,2023-09-02 09:06:05+00:00,,0,npraja-mic/JK-FF-2023,686279265,SystemVerilog,JK-FF-2023,0,0,2023-09-02 09:06:11+00:00,[],
13981,https://github.com/Hansa2000/processor_design.git,2023-09-06 07:41:18+00:00,single cycle processor which implements risc-v base instruction set.,0,Hansa2000/processor_design,687879420,SystemVerilog,processor_design,4268,0,2023-10-16 19:41:09+00:00,[],
13982,https://github.com/axyrai/suhan_fifo.git,2023-09-19 07:34:18+00:00,,0,axyrai/suhan_fifo,693520112,SystemVerilog,suhan_fifo,7,0,2023-09-19 07:35:29+00:00,[],
13983,https://github.com/Rohithgarde/SYN_FIFO.git,2023-09-19 10:22:44+00:00,,0,Rohithgarde/SYN_FIFO,693588915,SystemVerilog,SYN_FIFO,20,0,2023-09-19 10:25:59+00:00,[],
13984,https://github.com/AlexRock000/test.git,2023-09-20 12:40:28+00:00,,0,AlexRock000/test,694153750,SystemVerilog,test,12,0,2023-09-20 12:41:18+00:00,[],
13985,https://github.com/janah-2/Pipelined-Processor.git,2023-09-18 04:27:11+00:00,Pipelined Processor,0,janah-2/Pipelined-Processor,692965910,SystemVerilog,Pipelined-Processor,20,0,2023-09-18 04:42:37+00:00,[],
13986,https://github.com/dhanasekarp03/fifo-uvm.git,2023-09-20 05:36:00+00:00,,0,dhanasekarp03/fifo-uvm,693987764,SystemVerilog,fifo-uvm,9,0,2023-09-20 05:38:58+00:00,[],
13987,https://github.com/aconsiglio03/trafficlight.git,2023-09-08 20:04:44+00:00,,0,aconsiglio03/trafficlight,689102400,SystemVerilog,trafficlight,85,0,2023-10-10 16:50:22+00:00,[],
13988,https://github.com/Roki523/Traffic-light-controller.git,2023-09-08 22:55:48+00:00,,0,Roki523/Traffic-light-controller,689140349,SystemVerilog,Traffic-light-controller,38,0,2023-09-09 11:20:20+00:00,[],
13989,https://github.com/Prabhat1308/PUF_implementation.git,2023-09-02 10:04:27+00:00,,0,Prabhat1308/PUF_implementation,686292442,SystemVerilog,PUF_implementation,536,0,2023-11-21 18:06:59+00:00,[],
13990,https://github.com/BalintPaulAndrei/APB-for-Verification-IP.git,2023-09-27 13:13:21+00:00,"The module implements an arithmetic unit which supports addition and multiplication operations, being controlled through an APB interface. The module's purpose is to show the correct flow of testing.",0,BalintPaulAndrei/APB-for-Verification-IP,697305911,SystemVerilog,APB-for-Verification-IP,38,0,2023-09-27 13:16:55+00:00,[],
13991,https://github.com/romnram67/Fall-2023-Classes-lab-4-ROM-based-temp-sensor.git,2023-10-01 22:12:45+00:00,,0,romnram67/Fall-2023-Classes-lab-4-ROM-based-temp-sensor,699091779,SystemVerilog,Fall-2023-Classes-lab-4-ROM-based-temp-sensor,2,0,2023-10-01 22:43:42+00:00,[],
13993,https://github.com/Sameekshapu/EX_UVM.git,2023-09-21 04:35:12+00:00,,0,Sameekshapu/EX_UVM,694476773,SystemVerilog,EX_UVM,15,0,2023-09-21 04:38:06+00:00,[],
13994,https://github.com/uroojbaig/gis-sample-files.git,2023-09-21 07:49:58+00:00,,0,uroojbaig/gis-sample-files,694540891,SystemVerilog,gis-sample-files,6982,0,2023-09-21 07:58:21+00:00,[],
13995,https://github.com/moein-maleki/bsc-thesis.git,2023-09-23 01:27:32+00:00,,0,moein-maleki/bsc-thesis,695370206,SystemVerilog,bsc-thesis,8118,0,2023-09-23 01:32:39+00:00,[],
13996,https://github.com/amansasidharan/UVM_FIFO.git,2023-09-12 08:50:20+00:00,,0,amansasidharan/UVM_FIFO,690466451,SystemVerilog,UVM_FIFO,38,0,2023-09-14 09:16:01+00:00,[],
13997,https://github.com/01sharanshetty/UVM-ENV-FIFO.git,2023-09-07 05:57:20+00:00,,0,01sharanshetty/UVM-ENV-FIFO,688326356,SystemVerilog,UVM-ENV-FIFO,51,0,2023-09-07 05:59:51+00:00,[],
13998,https://github.com/apinise/SC_RV32IM.git,2023-09-20 20:19:21+00:00,Single Cycle RV32IM Processor Written In System Verilog,0,apinise/SC_RV32IM,694347557,SystemVerilog,SC_RV32IM,1423,0,2023-12-06 16:52:04+00:00,[],
13999,https://github.com/AidenWang0511/ECE253.git,2023-10-02 19:16:43+00:00,,0,AidenWang0511/ECE253,699508501,SystemVerilog,ECE253,3176,0,2023-11-21 07:28:31+00:00,[],
14000,https://github.com/Granp4sso/cv32e41s_SoC_env.git,2023-09-15 09:11:46+00:00,A simulation platform made in verilator for cv32e41s. ,0,Granp4sso/cv32e41s_SoC_env,691966421,SystemVerilog,cv32e41s_SoC_env,326023,0,2023-09-27 13:48:50+00:00,[],
14001,https://github.com/SumaiyaTariqueLabiba/SystemVerilog-Basics.git,2023-09-26 06:41:12+00:00,"FIFO, FSM, UART, RAM, ALU, etc.",0,SumaiyaTariqueLabiba/SystemVerilog-Basics,696639365,SystemVerilog,SystemVerilog-Basics,83,0,2024-03-08 11:33:55+00:00,"['systemverilog', 'testbench']",
14002,https://github.com/RobertGTR/UVM-AFIVP.git,2023-09-19 09:49:39+00:00,UVM Verification of AFVIP,0,RobertGTR/UVM-AFIVP,693575649,SystemVerilog,UVM-AFIVP,98,0,2023-09-19 09:50:56+00:00,[],
14003,https://github.com/Matthew-Otto/RTL-IP.git,2023-09-14 01:40:37+00:00,Various RTL blocks I use in my FPGA based projects,0,Matthew-Otto/RTL-IP,691340731,SystemVerilog,RTL-IP,433,0,2024-03-26 16:14:33+00:00,[],
14004,https://github.com/TejasSudarshan/Parallel-Digital-Vlsi-Architecture-for-Combined-SVM-Training-and-Classification.git,2023-09-26 05:42:14+00:00,,0,TejasSudarshan/Parallel-Digital-Vlsi-Architecture-for-Combined-SVM-Training-and-Classification,696619520,SystemVerilog,Parallel-Digital-Vlsi-Architecture-for-Combined-SVM-Training-and-Classification,13,0,2023-09-26 05:44:22+00:00,[],
14005,https://github.com/dhadhireddy-gnaneshwar/verilog-proj.git,2023-09-21 14:34:05+00:00,basic verilog projects ,0,dhadhireddy-gnaneshwar/verilog-proj,694709510,SystemVerilog,verilog-proj,11,0,2023-09-26 11:20:04+00:00,[],
14006,https://github.com/TryNotToFail/CPEN211_lab6.git,2023-09-12 07:31:27+00:00,,0,TryNotToFail/CPEN211_lab6,690434436,SystemVerilog,CPEN211_lab6,54,0,2023-09-12 07:34:13+00:00,[],
14007,https://github.com/MehanathanS/packet-router.git,2023-09-24 15:38:23+00:00,Packet Router Based on Destination PortID,0,MehanathanS/packet-router,695907781,SystemVerilog,packet-router,46,0,2023-09-25 11:45:39+00:00,[],
14008,https://github.com/Srivathsa2304/Design-fifo.git,2023-09-20 04:18:15+00:00,,0,Srivathsa2304/Design-fifo,693967771,SystemVerilog,Design-fifo,1,0,2023-09-20 04:21:07+00:00,[],
14009,https://github.com/wayneouow/ICC2021_GEOFENCE.git,2023-09-28 20:01:27+00:00,20 21 University/College IC Design Contest 大學部 標準元件數位電路設計 Geofence,0,wayneouow/ICC2021_GEOFENCE,697947090,SystemVerilog,ICC2021_GEOFENCE,641,0,2023-09-28 20:04:34+00:00,[],
14010,https://github.com/AlexNeagu03/APB-project.git,2023-09-28 19:57:25+00:00,I have made this project during Infineon Romania Summer School 2023. It mainly focuses on understanding and learning the basics of designing digital circuits and also how an APB protocol works.,0,AlexNeagu03/APB-project,697945843,SystemVerilog,APB-project,22,0,2023-09-28 20:08:13+00:00,[],
14011,https://github.com/OscarWuu/College-life.git,2023-10-02 02:22:25+00:00,,0,OscarWuu/College-life,699141112,SystemVerilog,College-life,36894,0,2023-10-02 02:49:35+00:00,[],
14012,https://github.com/baymax06in19/pupissimo_v1.git,2023-08-31 11:27:53+00:00,,0,baymax06in19/pupissimo_v1,685501335,SystemVerilog,pupissimo_v1,149,0,2023-08-31 11:29:31+00:00,[],
14013,https://github.com/EmanuelAraya30/Verificacion.git,2023-09-06 06:16:18+00:00,,0,EmanuelAraya30/Verificacion,687848718,SystemVerilog,Verificacion,176,0,2023-09-06 06:28:36+00:00,[],
14014,https://github.com/obiloahs/AHBRAM.git,2023-09-04 15:37:45+00:00,参考代码,0,obiloahs/AHBRAM,687092491,SystemVerilog,AHBRAM,30,0,2023-09-04 16:52:28+00:00,[],
14015,https://github.com/baymax06in19/Pulp_Test_Core.git,2023-09-01 16:58:23+00:00,,0,baymax06in19/Pulp_Test_Core,686067755,SystemVerilog,Pulp_Test_Core,150,0,2023-09-01 17:00:32+00:00,[],
14016,https://github.com/bcaregnani/SE204.git,2023-09-21 05:12:58+00:00,Reconfigurable architectures and HDL language project in SystemVerylog language within the framework of the course SE204 at Telecom Paris.,0,bcaregnani/SE204,694486585,SystemVerilog,SE204,1075,0,2023-09-21 21:29:06+00:00,[],
14017,https://github.com/JhnWstbrk/ELC4396_ClassReport2.git,2023-09-11 18:32:23+00:00,,0,JhnWstbrk/ELC4396_ClassReport2,690205745,SystemVerilog,ELC4396_ClassReport2,13024,0,2023-09-15 03:07:26+00:00,[],
14018,https://github.com/yseojun/verilog_study.git,2023-10-01 10:48:32+00:00,,0,yseojun/verilog_study,698906390,SystemVerilog,verilog_study,13,0,2023-10-03 12:28:23+00:00,[],
14019,https://github.com/B1mendez/Bitcoin-Hashing.git,2023-09-11 04:38:21+00:00,,0,B1mendez/Bitcoin-Hashing,689868346,SystemVerilog,Bitcoin-Hashing,813,0,2023-09-11 04:38:48+00:00,[],
14020,https://github.com/Devi-charan-29/Dual-port-RAM-verification.git,2023-09-09 11:30:31+00:00,Using System Verilog,0,Devi-charan-29/Dual-port-RAM-verification,689299240,SystemVerilog,Dual-port-RAM-verification,4096,0,2023-09-09 11:42:40+00:00,[],
14021,https://github.com/CroosJJSE/SparkLink_SV.git,2023-09-11 10:00:41+00:00,SV implementation of Sparklink task.,0,CroosJJSE/SparkLink_SV,689982942,SystemVerilog,SparkLink_SV,5,0,2023-09-11 11:36:10+00:00,[],
14022,https://github.com/scapekambing/arty-blinker.git,2023-09-15 20:06:44+00:00,,0,scapekambing/arty-blinker,692207560,SystemVerilog,arty-blinker,9,0,2023-09-20 20:46:47+00:00,[],
14023,https://github.com/Lauti00/ArquitecturaComputadoras.git,2023-09-17 18:03:30+00:00,,0,Lauti00/ArquitecturaComputadoras,692831711,SystemVerilog,ArquitecturaComputadoras,108,0,2023-09-17 18:09:56+00:00,[],
14024,https://github.com/TerryYan26/sha256-bitcoinhash.git,2023-09-14 22:34:14+00:00,,0,TerryYan26/sha256-bitcoinhash,691789270,SystemVerilog,sha256-bitcoinhash,188689,0,2023-09-17 06:42:26+00:00,[],
14025,https://github.com/mohamedwaleed-cu/Simple-System-Verilog-codes.git,2023-09-18 12:03:42+00:00,,0,mohamedwaleed-cu/Simple-System-Verilog-codes,693126990,SystemVerilog,Simple-System-Verilog-codes,3,0,2023-09-18 12:05:45+00:00,[],
14026,https://github.com/amabraha/my_tiny_tapeout_reflex_game.git,2023-10-02 23:39:24+00:00,Reflex game for tiny tapeout 5,0,amabraha/my_tiny_tapeout_reflex_game,699588914,SystemVerilog,my_tiny_tapeout_reflex_game,39,0,2023-10-31 17:11:29+00:00,[],https://api.github.com/licenses/apache-2.0
14027,https://github.com/lailzy/ECE385.git,2023-09-22 20:27:37+00:00,,0,lailzy/ECE385,695307621,SystemVerilog,ECE385,61,0,2023-09-25 00:59:03+00:00,[],
14028,https://github.com/abbmir/block_a_uvmf.proj.git,2023-09-27 02:07:55+00:00,,0,abbmir/block_a_uvmf.proj,697073363,SystemVerilog,block_a_uvmf.proj,73,0,2023-09-27 02:08:03+00:00,[],
14029,https://github.com/mutyalasaivenkatakrishna/System_Verilog.git,2023-09-25 16:45:13+00:00,,0,mutyalasaivenkatakrishna/System_Verilog,696391774,SystemVerilog,System_Verilog,2,0,2023-09-25 17:05:24+00:00,[],
14030,https://github.com/DHimeka/FPGA_Tries.git,2023-09-07 09:19:24+00:00,Simple attempts while learning,0,DHimeka/FPGA_Tries,688401974,SystemVerilog,FPGA_Tries,777475,0,2023-10-15 22:08:26+00:00,[],
14031,https://github.com/rakshitharnayak/basic_coding_questions.git,2023-09-04 04:38:20+00:00,System verilog basic coding,0,rakshitharnayak/basic_coding_questions,686849837,SystemVerilog,basic_coding_questions,46,0,2023-09-05 04:18:27+00:00,[],
14032,https://github.com/marc0620/2023DCLAB.git,2023-09-19 07:23:27+00:00,,0,marc0620/2023DCLAB,693515853,SystemVerilog,2023DCLAB,13046,0,2024-03-27 03:34:01+00:00,[],
14033,https://github.com/MaouAmir/FPGA-Telegraph-Protocol.git,2023-09-28 09:56:41+00:00,,0,MaouAmir/FPGA-Telegraph-Protocol,697705484,SystemVerilog,FPGA-Telegraph-Protocol,488,0,2023-09-28 09:58:25+00:00,[],
14034,https://github.com/BasitSajjad/I2C.git,2023-10-01 10:25:54+00:00,,0,BasitSajjad/I2C,698900855,SystemVerilog,I2C,14,0,2023-10-01 10:26:07+00:00,[],
14035,https://github.com/rjmorgan11/tt05-rjmorgan11.git,2023-10-02 23:33:32+00:00,,0,rjmorgan11/tt05-rjmorgan11,699587653,SystemVerilog,tt05-rjmorgan11,52,0,2023-10-31 00:24:23+00:00,[],https://api.github.com/licenses/apache-2.0
14036,https://github.com/0xFFFA/Project1.git,2023-10-03 10:13:34+00:00,This repository contains the practical tasks for the course of Digital Synthesys ,0,0xFFFA/Project1,699776242,SystemVerilog,Project1,30,0,2023-10-04 15:18:40+00:00,[],
14037,https://github.com/Sameekshapu/fifo_uvm.git,2023-09-22 10:45:58+00:00,,0,Sameekshapu/fifo_uvm,695095062,SystemVerilog,fifo_uvm,16,0,2023-09-22 10:46:57+00:00,[],
14038,https://github.com/LukeDischiave/tbird.git,2023-09-26 22:18:48+00:00,ford thunderbird tail light sequence programmed using verilog,0,LukeDischiave/tbird,697019279,SystemVerilog,tbird,4,0,2023-09-26 22:19:14+00:00,[],
14039,https://github.com/AnthonyHMR/CE3201_Tarea2_FSM.git,2023-09-27 19:53:30+00:00,,0,AnthonyHMR/CE3201_Tarea2_FSM,697472185,SystemVerilog,CE3201_Tarea2_FSM,7,0,2023-09-28 09:22:19+00:00,[],
14040,https://github.com/abbmir/chip_top_uvmf.proj.git,2023-09-27 02:26:35+00:00,,0,abbmir/chip_top_uvmf.proj,697078053,SystemVerilog,chip_top_uvmf.proj,95,0,2023-09-27 02:26:44+00:00,[],
14041,https://github.com/verification-explorer/visitor-pattern.git,2023-09-28 07:49:07+00:00,Elevate Your UVM Register Block Setup with the Visitor Pattern,0,verification-explorer/visitor-pattern,697655173,SystemVerilog,visitor-pattern,6,0,2023-09-28 07:49:36+00:00,[],
14042,https://github.com/amalnr96/crc_slicing.git,2023-09-06 14:04:59+00:00,,0,amalnr96/crc_slicing,688032355,SystemVerilog,crc_slicing,31,0,2023-09-06 14:08:06+00:00,[],
14043,https://github.com/bergkvist/fpga-uart.git,2023-09-05 03:45:27+00:00,Communication over UART in SystemVerilog 2012,0,bergkvist/fpga-uart,687288388,SystemVerilog,fpga-uart,21,0,2023-09-13 18:12:19+00:00,[],https://api.github.com/licenses/mit
14044,https://github.com/TonyHo722/systemverilog_study.git,2023-09-07 04:07:52+00:00,,0,TonyHo722/systemverilog_study,688297437,SystemVerilog,systemverilog_study,4,0,2023-09-07 04:11:02+00:00,[],
14045,https://github.com/mili4302/MTRX3700_ASSIGNMENT_1.git,2023-09-07 03:06:04+00:00,VERILOG,0,mili4302/MTRX3700_ASSIGNMENT_1,688282430,SystemVerilog,MTRX3700_ASSIGNMENT_1,16,0,2023-09-07 03:59:50+00:00,[],
14046,https://github.com/sohilnagpal04/Week4A-B.git,2023-09-11 11:33:53+00:00,,0,sohilnagpal04/Week4A-B,690019854,SystemVerilog,Week4A-B,1,0,2023-09-11 11:34:17+00:00,[],
14047,https://github.com/senyangjiang/amplifier-dv.git,2023-09-07 19:21:07+00:00,,0,senyangjiang/amplifier-dv,688638189,SystemVerilog,amplifier-dv,27,0,2023-09-07 19:33:19+00:00,[],
14048,https://github.com/Brandonstin/SegwaySV.git,2023-09-08 04:48:33+00:00,,0,Brandonstin/SegwaySV,688775726,SystemVerilog,SegwaySV,32,0,2023-09-08 04:49:58+00:00,[],
14049,https://github.com/laxmankumar3283/Traffic-light-contoller.git,2023-09-08 05:47:08+00:00,,0,laxmankumar3283/Traffic-light-contoller,688791595,SystemVerilog,Traffic-light-contoller,5,0,2023-09-08 05:57:18+00:00,[],
14050,https://github.com/yasirueranda/UART-Protocol-on-FPGA.git,2023-09-14 20:00:57+00:00,UART rx and tx implementation on Altera DE2-115 Board ,0,yasirueranda/UART-Protocol-on-FPGA,691747597,SystemVerilog,UART-Protocol-on-FPGA,5,0,2023-09-30 10:45:11+00:00,[],
14052,https://github.com/Dcastroe10/Tarea_FSM_Taller.git,2023-09-25 20:42:29+00:00,,0,Dcastroe10/Tarea_FSM_Taller,696482390,SystemVerilog,Tarea_FSM_Taller,148755,0,2023-09-26 00:25:23+00:00,[],
14053,https://github.com/Filza01/AHB3_Lite_Interface_Verification.git,2023-09-21 08:48:57+00:00,Create a layered testbench architecture design in System Verilog for AHB-Lite Slave Protocol,0,Filza01/AHB3_Lite_Interface_Verification,694563464,SystemVerilog,AHB3_Lite_Interface_Verification,20423,0,2023-12-24 15:34:52+00:00,[],
14054,https://github.com/JJTomson123/dc_lab_team09.git,2023-10-03 05:29:00+00:00,,0,JJTomson123/dc_lab_team09,699672625,SystemVerilog,dc_lab_team09,37508,0,2024-01-02 15:25:08+00:00,[],
14055,https://github.com/BowenKwan/RPN.git,2023-09-12 22:51:13+00:00,,0,BowenKwan/RPN,690798882,SystemVerilog,RPN,452,0,2024-01-26 16:56:43+00:00,[],
14056,https://github.com/kylechong36/Instrument-Simulation.git,2023-09-03 06:03:36+00:00,FPGA Cyclone 2 final project coding,0,kylechong36/Instrument-Simulation,686539475,SystemVerilog,Instrument-Simulation,4,0,2023-10-11 09:18:09+00:00,[],
14057,https://github.com/CroosJJSE/N_bit_counter.git,2023-09-08 14:17:12+00:00,it is a simulation counter,0,CroosJJSE/N_bit_counter,688982405,SystemVerilog,N_bit_counter,3,0,2023-09-08 14:25:42+00:00,[],
14058,https://github.com/Rohithgarde/sv_basic_questions.git,2023-09-06 03:54:38+00:00,include basic practice questions ,0,Rohithgarde/sv_basic_questions,687811441,SystemVerilog,sv_basic_questions,60,0,2023-09-06 04:04:45+00:00,[],
14059,https://github.com/charkster/programmable_delay.git,2023-09-09 22:27:20+00:00,FPGA design to allow for programmable delay on a single signal. Implemented and tested on CMOD_A7,0,charkster/programmable_delay,689464904,SystemVerilog,programmable_delay,331,0,2023-09-14 01:35:29+00:00,"['cmod-a7', 'signal-delay']",https://api.github.com/licenses/mit
14060,https://github.com/coderkalyan/risky.sv.git,2023-09-19 21:29:57+00:00,,0,coderkalyan/risky.sv,693860957,SystemVerilog,risky.sv,25,0,2023-09-19 21:30:23+00:00,[],
14061,https://github.com/nadavzhr/EE-Lab-Project.git,2023-09-20 09:04:48+00:00,Bomberman Game -- VGA -- DE10 Board,0,nadavzhr/EE-Lab-Project,694065435,SystemVerilog,EE-Lab-Project,138,0,2023-09-20 09:10:49+00:00,[],
14062,https://github.com/IsaacShoong/Image_Compression.git,2023-09-14 22:11:42+00:00,,0,IsaacShoong/Image_Compression,691784071,SystemVerilog,Image_Compression,2961,0,2023-09-14 22:12:50+00:00,[],
14063,https://github.com/PrathammGupta/4.1-VerilogII.git,2023-09-19 20:07:22+00:00,,0,PrathammGupta/4.1-VerilogII,693835079,SystemVerilog,4.1-VerilogII,2,0,2023-09-19 20:08:08+00:00,[],
14064,https://github.com/momostafa18/Verification-of-Single-PORT-RAM-using-UVM.git,2023-09-21 21:32:28+00:00,This project aims to verify the design of a single port RAM using UVM ,0,momostafa18/Verification-of-Single-PORT-RAM-using-UVM,694867747,SystemVerilog,Verification-of-Single-PORT-RAM-using-UVM,15,0,2023-09-21 21:40:54+00:00,[],
14065,https://github.com/adityabhaskar89/vending-machine-verilog.git,2023-09-01 19:38:44+00:00,,0,adityabhaskar89/vending-machine-verilog,686117483,SystemVerilog,vending-machine-verilog,12,0,2023-09-01 19:39:27+00:00,[],
14066,https://github.com/jaysunl/fpu.git,2023-09-04 05:00:54+00:00,,0,jaysunl/fpu,686855247,SystemVerilog,fpu,11,0,2023-09-04 07:10:19+00:00,[],
14067,https://github.com/bsalha1/Verilog-FPGA-Projects.git,2023-09-04 04:09:21+00:00,Some projects I've done to learn SystemVerilog for FPGAs. ,0,bsalha1/Verilog-FPGA-Projects,686843327,SystemVerilog,Verilog-FPGA-Projects,7,0,2023-09-04 04:12:13+00:00,[],
14068,https://github.com/ryan-gits/fpga-fifo.git,2023-09-05 01:27:02+00:00,,0,ryan-gits/fpga-fifo,687253883,SystemVerilog,fpga-fifo,3,0,2023-09-05 01:28:54+00:00,[],
14069,https://github.com/DeepSweeter/Autumn-Practice-2023.git,2023-09-04 13:07:10+00:00,,0,DeepSweeter/Autumn-Practice-2023,687032056,SystemVerilog,Autumn-Practice-2023,1901,0,2023-09-04 17:02:48+00:00,[],
14070,https://github.com/hoanghungcb1/SystemC_ALU_Verification.git,2023-09-11 09:00:52+00:00,DESIGN AND SIMULATION OF AN ARITHMETIC LOGIC UNIT (ALU) USING SYSTEM C AND SYSTEM VERILOG,0,hoanghungcb1/SystemC_ALU_Verification,689958090,SystemVerilog,SystemC_ALU_Verification,13625,0,2023-09-11 09:04:48+00:00,[],
14071,https://github.com/mohamd-khaled/UART.git,2023-09-15 23:24:49+00:00,,0,mohamd-khaled/UART,692251888,SystemVerilog,UART,15,0,2023-09-15 23:26:36+00:00,[],
14072,https://github.com/ChiaraGhinami/AES_TjIn.git,2023-09-15 12:15:09+00:00,AES algorithm with Trojan,0,ChiaraGhinami/AES_TjIn,692031948,SystemVerilog,AES_TjIn,13,0,2023-09-15 12:17:31+00:00,[],
14073,https://github.com/MrtnR/fetch_queue.git,2023-09-23 18:50:39+00:00,Repo for all the componentes for a fetch stage ,0,MrtnR/fetch_queue,695631733,SystemVerilog,fetch_queue,24,0,2023-09-27 01:08:41+00:00,[],
14074,https://github.com/sumanthbs17/fifo_uvm.git,2023-09-14 10:34:30+00:00,,0,sumanthbs17/fifo_uvm,691514435,SystemVerilog,fifo_uvm,23,0,2023-09-14 10:37:43+00:00,[],
14075,https://github.com/Rohithgarde/synchronous_fifo.git,2023-09-14 10:17:32+00:00,,0,Rohithgarde/synchronous_fifo,691508063,SystemVerilog,synchronous_fifo,19,0,2023-09-14 10:28:21+00:00,[],
14076,https://github.com/jomonkjoy/gmm_processor_1_0.git,2023-09-10 07:37:57+00:00,An Efficient FPGA Implementation of Gaussian Mixture Models-Based Classifier,0,jomonkjoy/gmm_processor_1_0,689559415,SystemVerilog,gmm_processor_1_0,86,0,2023-10-02 09:05:27+00:00,[],https://api.github.com/licenses/gpl-3.0
14077,https://github.com/Kowrisaan11/CPU-Design.git,2023-09-30 18:11:31+00:00,,0,Kowrisaan11/CPU-Design,698709730,SystemVerilog,CPU-Design,6,0,2023-10-13 19:51:26+00:00,[],
14078,https://github.com/alfredxus/NanoMIPS.git,2023-09-28 23:48:09+00:00,9-Bit Processor for Forward Error Correction and Pattern Matching.,0,alfredxus/NanoMIPS,698004658,SystemVerilog,NanoMIPS,13,0,2023-09-29 00:09:04+00:00,[],
14079,https://github.com/bergkvist/fpga-sha256.git,2023-09-28 17:43:54+00:00,SHA256 Hashing algorithm implemented in SystemVerilog,0,bergkvist/fpga-sha256,697898329,SystemVerilog,fpga-sha256,8,0,2023-09-28 17:52:58+00:00,[],https://api.github.com/licenses/mit
14080,https://github.com/hassanilyas000-10xe/DV_ENV_for_PLIC.git,2023-09-13 12:54:23+00:00,,0,hassanilyas000-10xe/DV_ENV_for_PLIC,691072200,SystemVerilog,DV_ENV_for_PLIC,3770,0,2023-09-13 12:56:50+00:00,[],
14081,https://github.com/ADS-ENTC/system-bus.git,2023-09-23 08:02:23+00:00,A serial system bus design with 2 Masters and 3 Slaves,1,ADS-ENTC/system-bus,695448610,SystemVerilog,system-bus,15029,0,2023-12-11 20:52:24+00:00,[],https://api.github.com/licenses/unlicense
14082,https://github.com/andrewjamesrosenthal/ece212_Rosenthal_Hayes.git,2023-09-27 18:41:09+00:00,,0,andrewjamesrosenthal/ece212_Rosenthal_Hayes,697446086,SystemVerilog,ece212_Rosenthal_Hayes,9150,0,2023-12-15 16:30:13+00:00,[],
14083,https://github.com/iranmedina04/Iran_Medina-Portfolio.git,2023-09-29 04:22:15+00:00,,0,iranmedina04/Iran_Medina-Portfolio,698060708,SystemVerilog,Iran_Medina-Portfolio,3410,0,2024-01-12 05:29:15+00:00,[],
14084,https://github.com/denizzzka/HDL.git,2023-09-21 18:48:53+00:00,Small footprint RISC-V CPU,0,denizzzka/HDL,694815586,SystemVerilog,HDL,243,0,2024-02-25 17:42:32+00:00,[],
14085,https://github.com/gunavant-s/SystemVerilog.git,2023-09-28 06:04:01+00:00,"Fundamentals, OOPS, Randomization. Tool used is EDA Playground -> Aldec Riviera Pro 2022.04.",0,gunavant-s/SystemVerilog,697620217,SystemVerilog,SystemVerilog,1055,0,2024-04-07 06:31:38+00:00,[],
14086,https://github.com/srikala-reddi/uvm_fifo.git,2023-09-15 09:48:05+00:00,,0,srikala-reddi/uvm_fifo,691979989,SystemVerilog,uvm_fifo,15,0,2023-09-20 05:59:46+00:00,[],
14087,https://github.com/Ashutosh-Routray/Ternary-XOR-problem.git,2023-09-21 09:27:16+00:00,,0,Ashutosh-Routray/Ternary-XOR-problem,694579132,SystemVerilog,Ternary-XOR-problem,4,0,2023-09-21 09:33:22+00:00,[],
14088,https://github.com/Fall-2023-Classes/Lab4_ROM_temperature_convrt.git,2023-09-25 19:53:52+00:00,,0,Fall-2023-Classes/Lab4_ROM_temperature_convrt,696466365,SystemVerilog,Lab4_ROM_temperature_convrt,17,0,2023-09-25 20:21:43+00:00,[],
14089,https://github.com/2023-Fall-ECE4278/lab3.git,2023-09-18 04:10:46+00:00,,0,2023-Fall-ECE4278/lab3,692962316,SystemVerilog,lab3,748,0,2023-09-18 04:21:45+00:00,[],
14090,https://github.com/MarlonHenq/RiscV-Processor-QuartusProject.git,2023-08-31 22:25:27+00:00,,0,MarlonHenq/RiscV-Processor-QuartusProject,685735541,SystemVerilog,RiscV-Processor-QuartusProject,41,0,2023-08-31 22:29:50+00:00,[],
14092,https://github.com/npraja-mic/D-ff-sep_2023.git,2023-09-02 06:22:24+00:00,,0,npraja-mic/D-ff-sep_2023,686242533,SystemVerilog,D-ff-sep_2023,1,0,2023-09-02 06:29:06+00:00,[],
14093,https://github.com/YangXu-0/Digital-and-Computer-Systems.git,2023-09-02 18:17:52+00:00,SystemVerilog and RISC-V assembly projects,0,YangXu-0/Digital-and-Computer-Systems,686418976,SystemVerilog,Digital-and-Computer-Systems,6,0,2023-09-03 18:18:06+00:00,[],
14094,https://github.com/Omar-farhan1084/fifo_uvm.git,2023-09-20 06:55:52+00:00,,0,Omar-farhan1084/fifo_uvm,694014726,SystemVerilog,fifo_uvm,3757,0,2023-09-20 07:08:27+00:00,[],
14095,https://github.com/TJ178/ece116c_risc-v.git,2023-09-18 23:27:39+00:00,Limited instruction set RISC-V processor written in SystemVerilog for ECE116C,0,TJ178/ece116c_risc-v,693382118,SystemVerilog,ece116c_risc-v,1328,0,2023-09-18 23:30:21+00:00,[],
14096,https://github.com/RonaldoBaker/CPU-Microarchitecture-Simulation.git,2023-10-03 11:59:50+00:00,,0,RonaldoBaker/CPU-Microarchitecture-Simulation,699816764,SystemVerilog,CPU-Microarchitecture-Simulation,275,0,2023-10-03 12:09:12+00:00,[],
14097,https://github.com/kavanachidananda/Synchronous_FIFO.git,2023-09-07 06:00:38+00:00,,0,kavanachidananda/Synchronous_FIFO,688327315,SystemVerilog,Synchronous_FIFO,133,0,2023-09-07 06:06:47+00:00,[],
14098,https://github.com/USTC-System-Courses/CECS-pipeline-AXI.git,2023-09-07 06:48:35+00:00,,0,USTC-System-Courses/CECS-pipeline-AXI,688343943,SystemVerilog,CECS-pipeline-AXI,25,0,2023-09-07 06:50:02+00:00,[],
14099,https://github.com/tuz358/rv32i_cpu.git,2023-09-03 11:20:18+00:00,simple systemverilog implementation of rv32i cpu to learn RISC-V architecture,0,tuz358/rv32i_cpu,686608351,SystemVerilog,rv32i_cpu,35,0,2023-09-03 12:07:35+00:00,"['fpga', 'risc-v', 'verilog']",https://api.github.com/licenses/gpl-3.0
14100,https://github.com/sgahern2/simple_sv.git,2023-09-03 00:11:37+00:00,Simple systemverilog exercises,0,sgahern2/simple_sv,686484416,SystemVerilog,simple_sv,3,0,2023-09-03 00:18:33+00:00,[],
14101,https://github.com/H0sseinR0stami/Automatic_ABV.git,2023-09-08 12:43:38+00:00,,0,H0sseinR0stami/Automatic_ABV,688944907,SystemVerilog,Automatic_ABV,6688,0,2023-09-08 12:48:57+00:00,[],
14102,https://github.com/sakshamssy/Verification-of-Common-Peripherals-Memories-and-Bus-Protocol.git,2023-09-09 07:04:41+00:00,"Verification of Memories viz. FIFO Verification of Bus Protocols viz. APB, AHB, AXI, Whishbone Verification of Interface Communication Protocols viz. SPI, UART, I2C Verification of Simple Compinational Block viz. Adder Verification of Simple Sequential Block viz. Data Flipflop",0,sakshamssy/Verification-of-Common-Peripherals-Memories-and-Bus-Protocol,689233825,SystemVerilog,Verification-of-Common-Peripherals-Memories-and-Bus-Protocol,374,0,2023-10-22 07:22:09+00:00,[],
14103,https://github.com/RakshithaRShettigar/FIFO_code.git,2023-09-11 09:51:23+00:00,,0,RakshithaRShettigar/FIFO_code,689979299,SystemVerilog,FIFO_code,51,0,2023-09-11 09:56:06+00:00,[],
14104,https://github.com/2023-Fall-ECE4278/lab2.git,2023-09-11 03:39:44+00:00,,0,2023-Fall-ECE4278/lab2,689854679,SystemVerilog,lab2,3,0,2023-09-11 03:41:12+00:00,[],
14105,https://github.com/naghma242/SIT329-Bike-Health-Pro.git,2023-09-12 06:37:54+00:00,,0,naghma242/SIT329-Bike-Health-Pro,690412955,SystemVerilog,SIT329-Bike-Health-Pro,34921,0,2023-10-02 16:37:54+00:00,[],
14106,https://github.com/CroosJJSE/AXI_Stream_Parallel_to_Serial_Converter.git,2023-09-12 14:25:59+00:00,parameterized parallel to serial converter which is used in many modern devices.,0,CroosJJSE/AXI_Stream_Parallel_to_Serial_Converter,690613098,SystemVerilog,AXI_Stream_Parallel_to_Serial_Converter,14,0,2023-10-05 10:14:25+00:00,[],
14107,https://github.com/Prasthuthi/FIFO_uvm.git,2023-09-12 05:53:24+00:00,,0,Prasthuthi/FIFO_uvm,690397239,SystemVerilog,FIFO_uvm,43,0,2023-09-12 05:57:07+00:00,[],
14108,https://github.com/squared-studio/RISC-V-CORE.git,2023-09-14 11:06:44+00:00,,0,squared-studio/RISC-V-CORE,691526037,SystemVerilog,RISC-V-CORE,114,0,2023-09-16 15:28:19+00:00,[],https://api.github.com/licenses/apache-2.0
14109,https://github.com/AMAV26/Proyecto1_verificacion.git,2023-09-14 21:50:42+00:00,,0,AMAV26/Proyecto1_verificacion,691778982,SystemVerilog,Proyecto1_verificacion,3119,0,2023-10-07 05:17:34+00:00,[],
14110,https://github.com/Jathu03/RISCV-processor.git,2023-09-29 11:03:09+00:00,,0,Jathu03/RISCV-processor,698188328,SystemVerilog,RISCV-processor,18,0,2023-10-22 15:10:18+00:00,[],
14111,https://github.com/ssunda03/cpe333-architecture.git,2023-09-25 02:24:21+00:00,,0,ssunda03/cpe333-architecture,696065891,SystemVerilog,cpe333-architecture,94958,0,2023-09-27 21:03:26+00:00,[],
14112,https://github.com/NisalaYapa/Single_Cycle_Non_Pipelined_3_Bus_RiscV_Processor_Design.git,2023-09-02 09:52:57+00:00,,0,NisalaYapa/Single_Cycle_Non_Pipelined_3_Bus_RiscV_Processor_Design,686289795,SystemVerilog,Single_Cycle_Non_Pipelined_3_Bus_RiscV_Processor_Design,25,0,2023-12-06 06:38:42+00:00,[],
14113,https://github.com/rossnoah/ece212_Sorak_Ross.git,2023-08-31 17:20:17+00:00,,0,rossnoah/ece212_Sorak_Ross,685642158,SystemVerilog,ece212_Sorak_Ross,1765,0,2024-03-03 01:48:31+00:00,[],
14114,https://github.com/Lianghaifeng1/ut_ddr3.git,2023-09-11 12:02:57+00:00,ut_ddr3,0,Lianghaifeng1/ut_ddr3,690032392,,ut_ddr3,25141,0,2023-09-11 12:02:57+00:00,[],
14115,https://github.com/otienomaurice1/ece212_alex_maurice.git,2023-09-05 18:41:03+00:00,this is the repository that is maintained by Maurice Otieno and Hayes,0,otienomaurice1/ece212_alex_maurice,687664616,SystemVerilog,ece212_alex_maurice,6972,0,2023-11-30 18:27:36+00:00,[],
14116,https://github.com/HashikaChathubhashaka/Non-pipelined-Single-Stage--Cycle--CPU-Design.git,2023-09-19 20:16:24+00:00,Making 3 bus single cycle CPU using System Verilog,0,HashikaChathubhashaka/Non-pipelined-Single-Stage--Cycle--CPU-Design,693838107,SystemVerilog,Non-pipelined-Single-Stage--Cycle--CPU-Design,770,0,2024-01-17 18:40:47+00:00,[],
14117,https://github.com/genieoon/FPGA-Design-Projects.git,2023-10-02 03:41:03+00:00,,0,genieoon/FPGA-Design-Projects,699158138,SystemVerilog,FPGA-Design-Projects,5006,0,2024-04-04 05:51:19+00:00,[],
14118,https://github.com/mishashekhovtsov/UVM_SV.git,2023-09-03 14:00:55+00:00,Projects for learning,0,mishashekhovtsov/UVM_SV,686651346,SystemVerilog,UVM_SV,50,0,2023-09-03 20:37:54+00:00,[],
14119,https://github.com/mahmedadawy2013/PyUVM_Project.git,2023-09-05 12:56:10+00:00,,0,mahmedadawy2013/PyUVM_Project,687483317,SystemVerilog,PyUVM_Project,25,0,2023-09-05 12:57:26+00:00,[],
14120,https://github.com/axyrai/FIFO_UVM_TB.git,2023-09-05 06:11:06+00:00,,0,axyrai/FIFO_UVM_TB,687326747,SystemVerilog,FIFO_UVM_TB,25,0,2023-09-06 05:46:01+00:00,[],
14121,https://github.com/Shivaprasadm02/SPI.git,2023-09-11 05:56:30+00:00,,0,Shivaprasadm02/SPI,689889368,SystemVerilog,SPI,34,0,2023-10-14 06:32:39+00:00,[],
14122,https://github.com/TryNotToFail/CPEN211_lab7.git,2023-09-12 07:34:48+00:00,,0,TryNotToFail/CPEN211_lab7,690435688,SystemVerilog,CPEN211_lab7,164,0,2023-09-12 07:35:46+00:00,[],
14123,https://github.com/ateeb02/UETRV-PCore-6-Stage.git,2023-09-10 21:50:34+00:00,,0,ateeb02/UETRV-PCore-6-Stage,689781231,SystemVerilog,UETRV-PCore-6-Stage,134,0,2023-09-10 21:58:03+00:00,[],
14124,https://github.com/qpalzm60409/String-Matching-Engine.git,2023-09-11 09:19:58+00:00,,0,qpalzm60409/String-Matching-Engine,689966024,SystemVerilog,String-Matching-Engine,91,0,2023-09-11 12:27:51+00:00,[],
14125,https://github.com/cbovens/BovenschenC-FALL-2023.git,2023-09-09 23:27:39+00:00,,0,cbovens/BovenschenC-FALL-2023,689473931,SystemVerilog,BovenschenC-FALL-2023,92840,0,2023-09-15 21:35:13+00:00,[],
14126,https://github.com/Nikhilaraghuram/work1.git,2023-09-16 04:43:57+00:00,,0,Nikhilaraghuram/work1,692307438,SystemVerilog,work1,25,0,2023-09-17 03:25:37+00:00,[],
14127,https://github.com/ChiaraGhinami/full_adder.git,2023-09-13 13:20:09+00:00,Full adder RTL project,0,ChiaraGhinami/full_adder,691084158,SystemVerilog,full_adder,17,0,2023-09-14 18:00:52+00:00,[],
14128,https://github.com/suryal30103/Parameter-Registry.git,2023-09-14 14:59:02+00:00,,0,suryal30103/Parameter-Registry,691627879,SystemVerilog,Parameter-Registry,643,0,2023-11-07 03:03:57+00:00,[],
14129,https://github.com/TPots/sv_buffer.git,2023-09-19 08:16:52+00:00,FIFO/FILO Buffer in SV,0,TPots/sv_buffer,693537216,SystemVerilog,sv_buffer,18,0,2023-09-19 08:17:56+00:00,[],
14130,https://github.com/RakshithaRShettigar/FIFO_codefiles.git,2023-09-19 10:24:38+00:00,,0,RakshithaRShettigar/FIFO_codefiles,693589575,SystemVerilog,FIFO_codefiles,9,0,2023-09-19 10:27:52+00:00,[],
14131,https://github.com/KnowAashish/SystemVerilog-Design_Verification_of_Synchronous_FIFO.git,2023-09-29 16:50:52+00:00,This repository contains detailed RTL design and TB verification of a Synchronous FIFO,0,KnowAashish/SystemVerilog-Design_Verification_of_Synchronous_FIFO,698324145,SystemVerilog,SystemVerilog-Design_Verification_of_Synchronous_FIFO,17,0,2023-10-11 22:19:01+00:00,[],
14132,https://github.com/thomas-koon/verilog-processor.git,2023-10-01 18:07:28+00:00,Processor with 9 bit instruction set,0,thomas-koon/verilog-processor,699032082,SystemVerilog,verilog-processor,5,0,2023-10-01 18:23:44+00:00,[],
14133,https://github.com/mdkane14/code.git,2023-10-03 03:48:13+00:00,,0,mdkane14/code,699646834,SystemVerilog,code,48,0,2023-10-03 03:49:57+00:00,[],
14134,https://github.com/baraktelem/pacman_final_project.git,2023-09-20 09:00:53+00:00,Electric Engineering Lab 1- final project,0,baraktelem/pacman_final_project,694063824,SystemVerilog,pacman_final_project,11245,0,2023-09-20 10:03:31+00:00,[],
14135,https://github.com/davidsiaw/tangnano9k-vga.git,2023-09-23 15:27:59+00:00,,0,davidsiaw/tangnano9k-vga,695574240,SystemVerilog,tangnano9k-vga,27,0,2023-09-25 18:22:52+00:00,[],
14136,https://github.com/laxmankumar3283/vending-machine.git,2023-09-08 07:28:44+00:00,,0,laxmankumar3283/vending-machine,688826468,SystemVerilog,vending-machine,352,0,2023-09-08 07:30:04+00:00,[],
14137,https://github.com/KKiranR/system_verilog_labs.git,2023-09-09 04:53:07+00:00,,0,KKiranR/system_verilog_labs,689205016,SystemVerilog,system_verilog_labs,23,0,2023-10-27 03:03:07+00:00,[],
14138,https://github.com/gcarom114/projects.git,2023-10-01 16:34:16+00:00,Personal and School Projects,0,gcarom114/projects,699004684,SystemVerilog,projects,46,0,2023-10-09 01:52:54+00:00,[],
14139,https://github.com/samuelhussey96/Soc_fall2023_project.git,2023-10-03 15:34:18+00:00,,0,samuelhussey96/Soc_fall2023_project,699916613,SystemVerilog,Soc_fall2023_project,146,0,2023-12-08 23:50:40+00:00,[],
14140,https://github.com/ali-pakdel/Digital-Logic-Design.git,2023-09-26 13:09:55+00:00,,0,ali-pakdel/Digital-Logic-Design,696801572,SystemVerilog,Digital-Logic-Design,3783,0,2023-09-26 13:11:49+00:00,[],
14141,https://github.com/etngo2001/EE469.git,2023-09-26 02:24:31+00:00,Computer Architecture 1,0,etngo2001/EE469,696567857,SystemVerilog,EE469,29438,0,2023-09-26 02:25:57+00:00,[],
14142,https://github.com/Mayank410/LRD-SENSOR.git,2023-09-22 01:55:40+00:00,,0,Mayank410/LRD-SENSOR,694932258,SystemVerilog,LRD-SENSOR,5,0,2023-10-05 05:30:31+00:00,[],
14143,https://github.com/sumanthbs17/fifo_updated.git,2023-09-25 08:44:41+00:00,,0,sumanthbs17/fifo_updated,696178351,SystemVerilog,fifo_updated,6,0,2023-09-25 08:45:30+00:00,[],
14144,https://github.com/HirbodBehnam/MIPS-Verilog.git,2023-09-25 11:17:24+00:00,MIPS CPU with IEEE 754 FPU implemented in Verilog. Project for computer architecture course - Spring 2022 Lectured by Dr. Hamid Sarbazi Azad,0,HirbodBehnam/MIPS-Verilog,696238148,SystemVerilog,MIPS-Verilog,1924,0,2023-09-25 11:18:51+00:00,[],
14145,https://github.com/matheus3301/TI0154-IntroducaoAosCircuitosIntegrados-UFC-2023.2.git,2023-09-04 19:11:01+00:00,,0,matheus3301/TI0154-IntroducaoAosCircuitosIntegrados-UFC-2023.2,687164501,SystemVerilog,TI0154-IntroducaoAosCircuitosIntegrados-UFC-2023.2,1410,0,2024-03-25 16:08:30+00:00,[],https://api.github.com/licenses/mit
14146,https://github.com/DLehenbauer/econopet.git,2023-09-25 14:03:00+00:00,,0,DLehenbauer/econopet,696313681,SystemVerilog,econopet,9879,0,2023-11-23 02:58:35+00:00,[],https://api.github.com/licenses/cc0-1.0
14147,https://github.com/michealsafwat/ALU-verification-using-UVM.git,2023-09-21 14:10:41+00:00,,0,michealsafwat/ALU-verification-using-UVM,694698015,SystemVerilog,ALU-verification-using-UVM,50,0,2024-01-06 08:57:01+00:00,[],
14148,https://github.com/michaelg29/mat-conv-fpga.git,2023-09-25 13:31:47+00:00,,0,michaelg29/mat-conv-fpga,696297880,SystemVerilog,mat-conv-fpga,19327,0,2024-04-12 18:17:34+00:00,[],
14149,https://github.com/bsc-loca/sargantana.git,2023-11-06 19:16:59+00:00,,3,bsc-loca/sargantana,715253635,SystemVerilog,sargantana,4473,60,2024-04-08 08:38:42+00:00,[],
14150,https://github.com/MiSTer-devel/Saturn_MiSTer.git,2023-10-10 08:36:21+00:00,Sega Saturn for MiSTer,12,MiSTer-devel/Saturn_MiSTer,702908935,SystemVerilog,Saturn_MiSTer,7983,45,2024-04-08 11:21:04+00:00,[],
14151,https://github.com/bsc-loca/core_tile.git,2023-11-06 22:39:37+00:00,,1,bsc-loca/core_tile,715317758,SystemVerilog,core_tile,522,8,2024-04-02 19:13:58+00:00,[],
14152,https://github.com/AndreyyTs/GDD_MCU.git,2023-10-10 20:36:23+00:00,,0,AndreyyTs/GDD_MCU,703222100,SystemVerilog,GDD_MCU,2000,7,2024-02-08 16:39:19+00:00,"['gdd', 'gdd-methodology', 'g-code']",
14153,https://github.com/MikeCovrado/GettingVerilatorStartedWithUVM.git,2023-11-02 19:31:24+00:00,Simple UVM environment for experimenting with Verilator.,1,MikeCovrado/GettingVerilatorStartedWithUVM,713567135,SystemVerilog,GettingVerilatorStartedWithUVM,31,6,2024-04-09 04:43:42+00:00,[],https://api.github.com/licenses/apache-2.0
14154,https://github.com/sifferman/calculator.git,2023-10-23 02:39:30+00:00,This project serves as a recreation of the chip-on-board found in most basic 8-digit calculators.,1,sifferman/calculator,708611983,SystemVerilog,calculator,76,4,2023-11-30 06:40:59+00:00,[],
14155,https://github.com/zayamtariq/OOO-Processor-in-SystemVerilog.git,2023-10-30 16:48:13+00:00,"A simple, single-cycle RISC-V (RV32IM) processor taken to the limits...",1,zayamtariq/OOO-Processor-in-SystemVerilog,712030532,SystemVerilog,OOO-Processor-in-SystemVerilog,54827,4,2023-12-21 23:21:17+00:00,[],
14156,https://github.com/robotman2412/boa-risc-v.git,2023-11-05 10:31:34+00:00,My second attempt at a RISC-V CPU with learnings form my previous attempt.,0,robotman2412/boa-risc-v,714592969,SystemVerilog,boa-risc-v,584,4,2024-04-09 04:47:57+00:00,"['cpu', 'open-source-hardware', 'risc-v', 'systemverilog']",
14157,https://github.com/oscc-ip/sram.git,2023-10-28 10:56:00+00:00,An AXI4-based SRAM Controller,0,oscc-ip/sram,711144363,SystemVerilog,sram,95,4,2024-03-08 07:35:55+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14158,https://github.com/yasirueranda/RV32I-Based-5Stage-Pipelined-Processor.git,2023-10-19 12:14:52+00:00,,0,yasirueranda/RV32I-Based-5Stage-Pipelined-Processor,707197072,SystemVerilog,RV32I-Based-5Stage-Pipelined-Processor,10942,3,2024-01-01 03:06:49+00:00,[],
14159,https://github.com/Miical/uvm-cache.git,2023-10-18 12:23:19+00:00,UVM based NutShell Cache authentication platform,0,Miical/uvm-cache,706679188,SystemVerilog,uvm-cache,173,3,2024-04-02 09:49:59+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14160,https://github.com/SahilPrabhu/SV_Practice.git,2023-10-10 16:05:02+00:00,,0,SahilPrabhu/SV_Practice,703112395,SystemVerilog,SV_Practice,2,3,2023-11-25 14:37:04+00:00,[],
14161,https://github.com/huangxc6/SPI_MS.git,2023-11-03 03:18:56+00:00,"Final Project - Fa23 (a “SPI_MS Chip” that allows full-duplex, synchronous, serial communication between the Chip and peripherals.)",0,huangxc6/SPI_MS,713689715,SystemVerilog,SPI_MS,31243,3,2024-02-26 02:36:16+00:00,[],https://api.github.com/licenses/mit
14162,https://github.com/mohamedElbouazzati/CV32E41P-Diwall-FPGA.git,2023-11-02 16:19:48+00:00,FPGA cost implementation for the CV32E41P with Diwall,0,mohamedElbouazzati/CV32E41P-Diwall-FPGA,713492245,SystemVerilog,CV32E41P-Diwall-FPGA,22,3,2023-12-23 14:25:44+00:00,[],
14163,https://github.com/anh60/AES-HWPE.git,2023-10-23 15:39:44+00:00,,0,anh60/AES-HWPE,708892742,SystemVerilog,AES-HWPE,15092,2,2023-12-04 20:57:24+00:00,[],
14164,https://github.com/oscc-ip/spi.git,2023-11-01 07:51:23+00:00,An APB4-based SPI Controller,0,oscc-ip/spi,712792429,SystemVerilog,spi,104,2,2024-01-30 12:38:31+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14165,https://github.com/JakodYuan/SVK-CRG-TEST.git,2023-10-09 10:36:49+00:00,,0,JakodYuan/SVK-CRG-TEST,702447949,SystemVerilog,SVK-CRG-TEST,54,2,2024-04-02 15:06:12+00:00,[],https://api.github.com/licenses/mit
14166,https://github.com/oscc-ip/uart.git,2023-10-28 05:55:11+00:00,An APB4-based UART Controller,0,oscc-ip/uart,711069628,SystemVerilog,uart,55,2,2024-02-20 15:33:30+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14167,https://github.com/w8ste/Single-Cycle-Processor.git,2023-10-10 11:01:30+00:00,"A single cycle processor, written in System Verilog",0,w8ste/Single-Cycle-Processor,702971830,SystemVerilog,Single-Cycle-Processor,13487,2,2023-10-27 15:55:09+00:00,[],
14168,https://github.com/dolphingarlic/feline-programmable-gate-array.git,2023-10-27 01:05:05+00:00,6.2050 Fall 2023 Final Project,1,dolphingarlic/feline-programmable-gate-array,710566633,SystemVerilog,feline-programmable-gate-array,10506,2,2023-12-06 05:42:52+00:00,[],
14169,https://github.com/SEU-MSLab/MP.git,2023-11-04 13:22:44+00:00,The software and hardware implementation of Memory Polynomial algorithm,0,SEU-MSLab/MP,714287831,SystemVerilog,MP,334,2,2024-02-28 05:10:03+00:00,[],
14170,https://github.com/ucb-bar/caliptra-aes-acc.git,2023-11-02 18:27:55+00:00,,0,ucb-bar/caliptra-aes-acc,713544063,SystemVerilog,caliptra-aes-acc,123,2,2024-02-28 04:31:40+00:00,[],https://api.github.com/licenses/bsd-3-clause
14171,https://github.com/hamza-akhtar-dev/processor-design-lab.git,2023-10-07 11:08:14+00:00,,0,hamza-akhtar-dev/processor-design-lab,701717779,SystemVerilog,processor-design-lab,18,2,2023-12-14 07:01:00+00:00,[],
14172,https://github.com/guttatus/uvm_multiplier.git,2023-10-24 09:43:04+00:00,N位移位累加乘法器及其UVM验证环境,0,guttatus/uvm_multiplier,709230302,SystemVerilog,uvm_multiplier,12,2,2024-01-05 06:24:19+00:00,[],
14173,https://github.com/serge0699/vfa.git,2023-10-19 20:38:30+00:00,Репозиторий канала Verification For All,0,serge0699/vfa,707405399,SystemVerilog,vfa,301,2,2024-02-02 17:10:56+00:00,[],https://api.github.com/licenses/cc-by-sa-4.0
14174,https://github.com/DenizzzGuzell/SPI_VIP.git,2023-10-24 08:23:01+00:00,Verification IP of fully parameterized 4 modes SPI,0,DenizzzGuzell/SPI_VIP,709200138,SystemVerilog,SPI_VIP,43,2,2024-02-22 07:38:19+00:00,[],https://api.github.com/licenses/mit
14175,https://github.com/shihlings/cpen211-labs.git,2023-10-16 02:26:18+00:00,CPEN 211 - Computer Systems I Labs,0,shihlings/cpen211-labs,705441828,SystemVerilog,cpen211-labs,76987,2,2023-12-20 19:51:47+00:00,[],
14176,https://github.com/oscc-ip/crc.git,2023-10-24 11:05:46+00:00,An APB4-based CRC Controller,0,oscc-ip/crc,709260176,SystemVerilog,crc,44,1,2023-12-12 13:20:38+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14177,https://github.com/GyanepsaaS/TT_synth_GyanepsaaS.git,2023-10-31 22:51:09+00:00,,0,GyanepsaaS/TT_synth_GyanepsaaS,712652550,SystemVerilog,TT_synth_GyanepsaaS,61,1,2023-11-03 13:03:17+00:00,[],https://api.github.com/licenses/apache-2.0
14178,https://github.com/ohmsha/SystemVerilogNyumon.git,2023-10-10 02:00:59+00:00,,0,ohmsha/SystemVerilogNyumon,702776989,SystemVerilog,SystemVerilogNyumon,169,1,2023-11-23 22:09:41+00:00,[],
14179,https://github.com/KaseyHDL/sap-computer.git,2023-10-26 21:39:57+00:00,"The goal of this project is to model the SAP (Simple As Possible) Computer in ""Digital Computer Electronics"" (Malvino, Brown) in gate-level SystemVerilog.",0,KaseyHDL/sap-computer,710520691,SystemVerilog,sap-computer,1255,1,2023-10-27 13:03:35+00:00,[],https://api.github.com/licenses/mit
14180,https://github.com/Engineer-Ayesha-Shafique/Generalized-Elevator-Control-System-Using-System-Verilog.git,2023-10-21 06:48:04+00:00,Design a System Verilog FSM for an elevator control system. The system should control the movement of an elevator in a multi-story  building.,0,Engineer-Ayesha-Shafique/Generalized-Elevator-Control-System-Using-System-Verilog,707981075,SystemVerilog,Generalized-Elevator-Control-System-Using-System-Verilog,3232,1,2023-10-21 10:16:47+00:00,"['elevator', 'elevator-control-system']",
14181,https://github.com/maximilianheer/coyote_dev.git,2023-11-02 12:24:19+00:00,,0,maximilianheer/coyote_dev,713388154,SystemVerilog,coyote_dev,17141,1,2023-11-09 12:43:21+00:00,[],https://api.github.com/licenses/mit
14182,https://github.com/salunkead/Constraint-Problems.git,2023-11-07 10:28:25+00:00,"In this repository,i have solved constraint problems",0,salunkead/Constraint-Problems,715529970,SystemVerilog,Constraint-Problems,70,1,2023-12-27 05:31:09+00:00,[],
14183,https://github.com/Matthew-Lund/FPGA-SAT-Solver-MQP.git,2023-10-27 15:15:09+00:00,,0,Matthew-Lund/FPGA-SAT-Solver-MQP,710852656,SystemVerilog,FPGA-SAT-Solver-MQP,7056,1,2024-03-11 07:33:28+00:00,[],
14184,https://github.com/matthewcaren/aurras.git,2023-10-31 23:51:22+00:00,Active environmental noise cancellation using an FPGA,0,matthewcaren/aurras,712665625,SystemVerilog,aurras,2961,1,2024-04-05 21:28:25+00:00,"['fpga', 'noise-cancellation', 'active-noise-control']",https://api.github.com/licenses/mit
14185,https://github.com/mohamedtareq24/DSP_Custom_AXI_IPs.git,2023-10-08 16:29:41+00:00,Work under progress.,0,mohamedtareq24/DSP_Custom_AXI_IPs,702148342,SystemVerilog,DSP_Custom_AXI_IPs,2018,1,2024-03-27 01:39:20+00:00,[],
14186,https://github.com/markshinyounglee/ECE189ProcessorProject.git,2023-11-02 21:56:24+00:00,"In EC ENGR 189 at UCLA, we implement two-issue out-of-order processor",0,markshinyounglee/ECE189ProcessorProject,713610747,SystemVerilog,ECE189ProcessorProject,47,1,2024-01-11 20:17:06+00:00,[],https://api.github.com/licenses/apache-2.0
14187,https://github.com/GavinAndrews/konamicustoms.git,2023-11-07 20:21:29+00:00,Konami Customs for Arcade Games,0,GavinAndrews/konamicustoms,715780148,SystemVerilog,konamicustoms,84568,1,2023-11-28 11:23:11+00:00,[],https://api.github.com/licenses/mit
14188,https://github.com/farship/SystemVerilog.git,2023-10-31 14:39:07+00:00,EE20021,0,farship/SystemVerilog,712473811,SystemVerilog,SystemVerilog,57284,1,2023-12-08 15:12:33+00:00,[],
14189,https://github.com/Valen1402/Systolic-Array-for-Matrix-Multiplication.git,2023-10-13 23:44:02+00:00,An accelerator with systolic MAC array to compute matrix multiplication,0,Valen1402/Systolic-Array-for-Matrix-Multiplication,704731096,SystemVerilog,Systolic-Array-for-Matrix-Multiplication,38,1,2024-03-11 15:40:35+00:00,[],
14190,https://github.com/rohitupari4321/SystemVerilog-Codes.git,2023-10-15 18:11:17+00:00,Verified some of the RTL Designs in SystemVerilog,0,rohitupari4321/SystemVerilog-Codes,705332191,SystemVerilog,SystemVerilog-Codes,1323,1,2023-12-06 17:08:20+00:00,[],
14191,https://github.com/EngAhmed21/SPI-using-UVM.git,2023-11-02 01:11:53+00:00,Implementation of Serial Peripheral Interface (SPI) communication protocol using SystemVerilog and the verification is done using Universal Verification Methodology (UVM),0,EngAhmed21/SPI-using-UVM,713165740,SystemVerilog,SPI-using-UVM,31,1,2024-01-30 08:31:22+00:00,[],
14192,https://github.com/salunkead/Functional-Coverage-Practice.git,2023-11-07 06:17:27+00:00,"In this Repository, I have covered all the concepts of functional coverage with code.",0,salunkead/Functional-Coverage-Practice,715436527,SystemVerilog,Functional-Coverage-Practice,93,1,2023-12-26 11:40:42+00:00,[],
14193,https://github.com/Dvir1992/qpsk-integrated-with-fifo.git,2023-11-06 02:04:31+00:00,"A module that receives an input stream of QPSK Symbols, de-map them and deliver an output stream of Bytes through fifo representing ASCII characters composing a readable text message.",0,Dvir1992/qpsk-integrated-with-fifo,714864497,SystemVerilog,qpsk-integrated-with-fifo,426,1,2023-11-08 07:37:37+00:00,[],
14194,https://github.com/jakujobi/BitBlaster_10bit_Processor.git,2023-11-01 20:47:12+00:00,"Welcome to the BitBlaster_10bit_Processor! Our custom-designed 10-bit processor, crafted meticulously as part of a project for a Digital Logic Design course at South Dakota State University.",0,jakujobi/BitBlaster_10bit_Processor,713098816,SystemVerilog,BitBlaster_10bit_Processor,189376,1,2023-11-27 04:54:13+00:00,"['de10-lite', 'digital-design', 'fpga', 'processor', 'processor-design', 'processors', 'quartus', 'quartus-prime', 'systemverilog', 'jakujobi']",https://api.github.com/licenses/gpl-3.0
14195,https://github.com/PINKISHIVA/functional_cov.git,2023-10-28 14:04:18+00:00,,0,PINKISHIVA/functional_cov,711198345,SystemVerilog,functional_cov,4,1,2023-10-28 16:20:47+00:00,[],
14196,https://github.com/CroosJJSE/UART-Implementation-Using-FPGA.git,2023-10-06 11:22:59+00:00,"This is a group assignment done under the module EN2111 Electronic Circuit Design, Semester 4, Department of Electronic & Telecommunication Engineering, University of Moratuwa, Sri Lanka.",0,CroosJJSE/UART-Implementation-Using-FPGA,701309737,SystemVerilog,UART-Implementation-Using-FPGA,7,1,2023-10-06 11:50:37+00:00,[],
14197,https://github.com/Eyrehu/UVM_ISP.git,2023-10-11 14:54:52+00:00,,0,Eyrehu/UVM_ISP,703605511,SystemVerilog,UVM_ISP,1187,1,2023-12-22 04:05:33+00:00,[],
14199,https://github.com/randika-perera/32-Bit-Non-Pipelined-Single-Cycle-Processor-based-on-RISC-V-ISA.git,2023-10-29 10:25:30+00:00,,0,randika-perera/32-Bit-Non-Pipelined-Single-Cycle-Processor-based-on-RISC-V-ISA,711456778,SystemVerilog,32-Bit-Non-Pipelined-Single-Cycle-Processor-based-on-RISC-V-ISA,137323,1,2023-12-08 07:38:30+00:00,[],
14200,https://github.com/salunkead/Basic-Digital-Circuit-Assertions.git,2023-11-06 10:50:59+00:00,"In this repository,I have covered assertion based verification of basic digital circuits.",0,salunkead/Basic-Digital-Circuit-Assertions,715033226,SystemVerilog,Basic-Digital-Circuit-Assertions,62,1,2023-12-26 11:40:44+00:00,[],
14201,https://github.com/Samee030/Router.git,2023-10-08 07:34:23+00:00,Router 1x3,0,Samee030/Router,701997309,SystemVerilog,Router,38,1,2024-02-01 07:32:59+00:00,[],
14202,https://github.com/Magista08/EECS-470-Final-Project.git,2023-10-08 18:55:10+00:00,This is the final project to build P6 processor with the group members,1,Magista08/EECS-470-Final-Project,702191697,SystemVerilog,EECS-470-Final-Project,325,1,2024-03-06 05:35:55+00:00,[],
14203,https://github.com/alexwonseokcho/ece253_lab.git,2023-10-16 04:36:20+00:00,Lab material for ECE253 Digital and Computer Systems utilizing System Verilog,0,alexwonseokcho/ece253_lab,705473021,SystemVerilog,ece253_lab,3453,1,2023-12-21 05:38:04+00:00,[],
14204,https://github.com/oscc-ip/i2c.git,2023-10-21 10:18:07+00:00,An APB4-based I2C Controller,0,oscc-ip/i2c,708033026,SystemVerilog,i2c,76,1,2023-10-24 12:33:51+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14205,https://github.com/jakujobi/PR1_Vending_Machine.git,2023-10-09 03:26:09+00:00,Tomato Vending Machine Simulator for Digital Logic Project FA 2023,2,jakujobi/PR1_Vending_Machine,702297531,SystemVerilog,PR1_Vending_Machine,34648,1,2023-10-09 05:41:43+00:00,[],https://api.github.com/licenses/gpl-3.0
14206,https://github.com/slmnemo/e155snakevga.git,2023-10-31 10:08:14+00:00,Snake on the E155 uPs dev board v4 at Harvey Mudd College,1,slmnemo/e155snakevga,712358519,SystemVerilog,e155snakevga,19508,1,2023-12-08 21:22:06+00:00,[],https://api.github.com/licenses/gpl-3.0
14207,https://github.com/cooljoseph1/bitnet.git,2023-10-09 01:53:16+00:00,Single bit neural networks,0,cooljoseph1/bitnet,702276543,SystemVerilog,bitnet,26297,1,2023-12-15 19:53:24+00:00,[],
14208,https://github.com/vaibhavirastogi/GPIO_UVC.git,2023-10-19 21:28:40+00:00,General Purpose IO -based Universal Verification Component Code ,0,vaibhavirastogi/GPIO_UVC,707419909,SystemVerilog,GPIO_UVC,564,1,2023-10-19 21:48:26+00:00,[],
14209,https://github.com/kerrycliu/cpu_in_verilog.git,2023-10-18 19:40:56+00:00,CPU in Verilog,0,kerrycliu/cpu_in_verilog,706876917,SystemVerilog,cpu_in_verilog,284,1,2023-11-13 01:03:42+00:00,[],
14210,https://github.com/yassinelkashef/Design-and-UVM-Verification-of-an-ALU.git,2023-11-01 16:19:35+00:00,Design-and-UVM-Verification-of-an-ALU,0,yassinelkashef/Design-and-UVM-Verification-of-an-ALU,712996276,SystemVerilog,Design-and-UVM-Verification-of-an-ALU,10,1,2023-11-14 06:22:41+00:00,[],
14211,https://github.com/L-add7/UVM_add.git,2023-10-24 08:57:52+00:00,uvm_learn,0,L-add7/UVM_add,709213494,SystemVerilog,UVM_add,16092,1,2023-10-29 08:01:52+00:00,[],
14212,https://github.com/SasiniWanigathunga/Single_Cycle_RISCV_Processor.git,2023-10-11 22:48:26+00:00,,0,SasiniWanigathunga/Single_Cycle_RISCV_Processor,703779445,SystemVerilog,Single_Cycle_RISCV_Processor,2279,1,2023-12-08 18:29:15+00:00,[],
14213,https://github.com/Iris-WQP/TT_SV1.git,2023-10-26 03:56:59+00:00,,0,Iris-WQP/TT_SV1,710118551,SystemVerilog,TT_SV1,124,1,2023-12-19 05:35:18+00:00,[],
14214,https://github.com/oscc-ip/rng.git,2023-10-22 07:00:17+00:00,An APB4-based Random Number Generator,0,oscc-ip/rng,708310728,SystemVerilog,rng,29,1,2023-10-24 12:33:42+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14215,https://github.com/cncherisher/crazyfpga.git,2023-10-13 12:46:37+00:00,《基于MATLAB与FPGA的图像处理教程》学习代码,0,cncherisher/crazyfpga,704522971,SystemVerilog,crazyfpga,1414,1,2023-12-29 04:20:39+00:00,[],https://api.github.com/licenses/gpl-3.0
14216,https://github.com/oscc-ip/wdg.git,2023-10-15 08:14:46+00:00,An APB4-based WatchDog Controller,0,oscc-ip/wdg,705164782,SystemVerilog,wdg,38,1,2023-10-24 12:33:53+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14217,https://github.com/hglee/AlchitryAuFpgaExample.git,2023-11-04 05:12:17+00:00,Alchitry Au FPGA Board Example Project,1,hglee/AlchitryAuFpgaExample,714166271,SystemVerilog,AlchitryAuFpgaExample,5039,1,2024-03-13 11:49:12+00:00,"['alchitry', 'alchitry-au', 'artix-7', 'ddr', 'example-project', 'fifo', 'fpga', 'ft600', 'microblaze-mcs', 'systemverilog', 'uart']",https://api.github.com/licenses/bsd-3-clause
14218,https://github.com/oscc-ip/clint.git,2023-10-05 12:17:14+00:00,An APB4-based or AXI4-lite Clint,0,oscc-ip/clint,700847085,SystemVerilog,clint,37,1,2023-10-07 11:30:59+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14219,https://github.com/JerryFishY/zkp_accelarator.git,2023-10-18 05:24:01+00:00,,0,JerryFishY/zkp_accelarator,706513940,SystemVerilog,zkp_accelarator,1101,1,2023-10-24 16:18:41+00:00,[],
14220,https://github.com/bsc-loca/instruction_cache.git,2023-11-06 19:15:01+00:00,,0,bsc-loca/instruction_cache,715252901,SystemVerilog,instruction_cache,29,1,2024-01-02 02:00:03+00:00,[],
14221,https://github.com/oscc-ip/rcu.git,2023-10-08 10:59:06+00:00,A Reset and Clock Unit,0,oscc-ip/rcu,702050961,SystemVerilog,rcu,28,1,2023-10-25 13:21:05+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14222,https://github.com/manxoh/AXIS_skid_buffer.git,2023-11-02 09:48:31+00:00,AXI Stream Skid Buffer,0,manxoh/AXIS_skid_buffer,713326787,SystemVerilog,AXIS_skid_buffer,9,1,2024-02-10 13:08:44+00:00,[],
14223,https://github.com/OmerBibi/Road-Fighter-FPGA.git,2023-11-01 22:21:23+00:00,"Road Fighter game, written in SystemVerilog and designed using Intel Quartus. The games runs on FPGA with VGA monitor and keyboard (only numpad is required). Created as a final project in 'Lab for Electrical Engineering 1' at The Technion.",0,OmerBibi/Road-Fighter-FPGA,713125513,SystemVerilog,Road-Fighter-FPGA,1081,1,2024-03-13 05:40:42+00:00,[],
14224,https://github.com/will-arden/skylark-v.git,2023-10-18 17:49:44+00:00,A 4-stage RISC-V CPU which features a hardware acceleration unit for Binarized Neural Network (BNN) inference operations.,0,will-arden/skylark-v,706833025,SystemVerilog,skylark-v,40666,1,2024-03-30 16:36:51+00:00,[],
14225,https://github.com/rjoshi2002/JTAG_socet.git,2023-10-26 22:36:17+00:00,JTAG senior design team SOCET,0,rjoshi2002/JTAG_socet,710534155,SystemVerilog,JTAG_socet,10487,1,2023-11-02 21:17:30+00:00,[],
14226,https://github.com/EdisonLam-USYD/Parameterised-Multiprecision-CNN.git,2023-10-13 01:53:13+00:00,Final version of the multiprecision convolutional neural network thesis project. ,0,EdisonLam-USYD/Parameterised-Multiprecision-CNN,704310489,SystemVerilog,Parameterised-Multiprecision-CNN,57860,1,2023-10-13 02:08:20+00:00,[],
14227,https://github.com/ivanMilin/Formalna-verifikacija.git,2023-10-30 23:52:37+00:00,Predmet sa master studija,0,ivanMilin/Formalna-verifikacija,712170500,SystemVerilog,Formalna-verifikacija,24,1,2024-02-04 03:17:47+00:00,['systemverilog'],
14228,https://github.com/oscc-ip/plic.git,2023-10-08 02:42:02+00:00,An APB4-based PLIC,0,oscc-ip/plic,701939286,SystemVerilog,plic,72,1,2023-10-24 12:34:29+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14229,https://github.com/oscc-ip/pwm.git,2023-10-05 10:38:28+00:00,An APB4-based PWM Controller,0,oscc-ip/pwm,700809044,SystemVerilog,pwm,40,1,2023-10-24 12:33:34+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
14230,https://github.com/Engineer-Ayesha-Shafique/RISC-V-Single-Cycle-Processor.git,2023-10-18 03:29:50+00:00,"This is a Single Cycle processor running the RV32I implementation, hence a 32-bit CPU, written in SystemVerilog.",0,Engineer-Ayesha-Shafique/RISC-V-Single-Cycle-Processor,706483246,SystemVerilog,RISC-V-Single-Cycle-Processor,8950,1,2024-01-07 12:57:34+00:00,"['risc-v', 'rv32i', 'single-cycle-processor', 'risc-v-single-cycle-processor']",
14231,https://github.com/petarstamenkovic/FormalVerification.git,2023-11-02 10:39:28+00:00,Master Year - Formal Verification - JasperGold used,0,petarstamenkovic/FormalVerification,713347159,SystemVerilog,FormalVerification,14,1,2023-12-26 18:42:23+00:00,[],
14232,https://github.com/cscrosati98/SystemVerilog-ALU.git,2023-10-11 20:26:14+00:00,ALU created for Advanced Digital Design,0,cscrosati98/SystemVerilog-ALU,703742106,SystemVerilog,SystemVerilog-ALU,287,1,2023-10-11 20:28:40+00:00,[],
14233,https://github.com/Kholoud-Ebrahim/APB_Register_File.git,2023-11-01 15:06:40+00:00,UVM based Verification of APB Register File. The UVM Env includes RAL Model. The simulation results contain functional and code coverage reports.,0,Kholoud-Ebrahim/APB_Register_File,712963847,SystemVerilog,APB_Register_File,349,1,2023-12-19 01:27:28+00:00,[],
14234,https://github.com/nachmay/prossesor-.git,2023-10-31 09:05:37+00:00,,0,nachmay/prossesor-,712333369,SystemVerilog,prossesor-,25,0,2023-10-31 10:58:10+00:00,[],
14235,https://github.com/RupamSen/Smart-Traffic-Light-Controller.git,2023-10-09 16:08:03+00:00,,0,RupamSen/Smart-Traffic-Light-Controller,702598711,SystemVerilog,Smart-Traffic-Light-Controller,35,0,2023-10-09 16:11:42+00:00,[],
14236,https://github.com/dmfv/SecretProject.git,2023-10-23 16:50:00+00:00,,0,dmfv/SecretProject,708922963,SystemVerilog,SecretProject,3,0,2023-10-30 10:50:29+00:00,[],
14237,https://github.com/aravChamp/lab4.git,2023-10-26 12:44:56+00:00,,0,aravChamp/lab4,710308113,SystemVerilog,lab4,8,0,2023-10-26 12:45:32+00:00,[],
14238,https://github.com/ChimingyangHuang/LFSR-encryption-and-decryption.git,2023-10-24 16:55:57+00:00,,0,ChimingyangHuang/LFSR-encryption-and-decryption,709409604,SystemVerilog,LFSR-encryption-and-decryption,29,0,2023-10-24 17:01:43+00:00,[],
14239,https://github.com/AymenEEE/FPGA-Projects.git,2023-10-27 21:43:10+00:00,,0,AymenEEE/FPGA-Projects,710977359,SystemVerilog,FPGA-Projects,161,0,2023-10-28 21:33:12+00:00,[],
14240,https://github.com/PedroABeneveli/Calculadora-Digital.git,2023-10-11 00:21:28+00:00,Calculadora Digital feita para a placa FPGA Cyclone II,2,PedroABeneveli/Calculadora-Digital,703279100,SystemVerilog,Calculadora-Digital,5853,0,2023-10-11 00:30:18+00:00,[],
14241,https://github.com/abbmir/verif.git,2023-10-08 14:05:24+00:00,,0,abbmir/verif,702104190,SystemVerilog,verif,34,0,2023-10-08 14:05:33+00:00,[],
14242,https://github.com/Masihbr/mips-machine.git,2023-10-11 11:23:07+00:00,Mips Machine project for Computer Architecture Course.,0,Masihbr/mips-machine,703506874,SystemVerilog,mips-machine,1584,0,2023-10-11 11:25:36+00:00,[],
14243,https://github.com/Mpenizzotto/Volt-metro-en-FPGA-vhdl-.git,2023-10-04 03:32:41+00:00,"Implementación de un voltímetro en FPGA, con el lenguaje VHDL.",0,Mpenizzotto/Volt-metro-en-FPGA-vhdl-,700150229,SystemVerilog,Volt-metro-en-FPGA-vhdl-,2393,0,2023-10-04 03:39:38+00:00,[],
14244,https://github.com/bumjoooon/testbench_apb.git,2023-10-04 07:00:56+00:00,,0,bumjoooon/testbench_apb,700213100,SystemVerilog,testbench_apb,1,0,2023-10-04 07:08:38+00:00,[],
14245,https://github.com/2023-Fall-ECE4278/lab6.git,2023-10-04 02:52:06+00:00,Synthesis,0,2023-Fall-ECE4278/lab6,700140423,SystemVerilog,lab6,12,0,2023-10-16 03:15:18+00:00,[],
14246,https://github.com/caob16/Image-decompressor.git,2023-11-07 05:19:50+00:00,,0,caob16/Image-decompressor,715419665,SystemVerilog,Image-decompressor,1698,0,2023-11-07 05:20:57+00:00,[],
14247,https://github.com/seanfu56/NTUEE_DCLAB.git,2023-11-03 09:28:12+00:00,,0,seanfu56/NTUEE_DCLAB,713809116,SystemVerilog,NTUEE_DCLAB,37,0,2023-11-03 09:33:24+00:00,[],
14248,https://github.com/migies12/CPEN211_LAB5.git,2023-11-01 17:08:55+00:00,Building blocks for arm processor,0,migies12/CPEN211_LAB5,713017855,SystemVerilog,CPEN211_LAB5,220,0,2023-11-01 17:15:27+00:00,[],
14249,https://github.com/mattngaw/98154-tt05-fp8adder.git,2023-11-04 17:54:03+00:00,,0,mattngaw/98154-tt05-fp8adder,714370826,SystemVerilog,98154-tt05-fp8adder,28,0,2023-11-04 18:46:00+00:00,[],https://api.github.com/licenses/apache-2.0
14250,https://github.com/samarr-parmaar/lab5_new.git,2023-11-07 22:37:59+00:00,,0,samarr-parmaar/lab5_new,715820796,SystemVerilog,lab5_new,27,0,2023-11-07 22:40:25+00:00,[],
14251,https://github.com/SindhuCP/FFVDD.git,2023-10-19 16:15:57+00:00,,0,SindhuCP/FFVDD,707306262,SystemVerilog,FFVDD,26,0,2023-11-23 14:57:04+00:00,[],
14252,https://github.com/Samarth-SD/ffvdd_assignment1.git,2023-10-25 12:48:58+00:00,,0,Samarth-SD/ffvdd_assignment1,709808686,SystemVerilog,ffvdd_assignment1,23,0,2023-10-25 13:00:45+00:00,[],
14253,https://github.com/Anuzzzzzzz/ffvdd_JohnsonCounter.git,2023-10-26 09:50:09+00:00,,0,Anuzzzzzzz/ffvdd_JohnsonCounter,710238872,SystemVerilog,ffvdd_JohnsonCounter,23,0,2023-11-21 13:40:28+00:00,[],
14254,https://github.com/aishwaryaavarwad/MSD_Final_Project.git,2023-11-07 00:38:06+00:00,MSD Memory Controller DDR5,0,aishwaryaavarwad/MSD_Final_Project,715346006,SystemVerilog,MSD_Final_Project,572,0,2023-11-10 04:59:50+00:00,[],
14255,https://github.com/barbara-gigerl/aes-secondorder-guards.git,2023-10-12 09:30:47+00:00,,0,barbara-gigerl/aes-secondorder-guards,703974130,SystemVerilog,aes-secondorder-guards,23,0,2023-11-29 11:52:22+00:00,[],https://api.github.com/licenses/apache-2.0
14256,https://github.com/k4i70/AHW_352.git,2023-11-06 21:03:24+00:00,,0,k4i70/AHW_352,715290288,SystemVerilog,AHW_352,34,0,2023-11-06 21:08:11+00:00,[],
14257,https://github.com/YoussefNasser11/Inferred-Single-Port-Memory-Class-Based-Verification.git,2023-10-24 05:25:58+00:00,Classical SV memory testbench for robust validation of memory modules with read and write operations.,0,YoussefNasser11/Inferred-Single-Port-Memory-Class-Based-Verification,709142470,SystemVerilog,Inferred-Single-Port-Memory-Class-Based-Verification,29,0,2023-12-09 00:51:02+00:00,[],
14258,https://github.com/oukoedwin/6205project.git,2023-10-29 23:26:42+00:00,,0,oukoedwin/6205project,711661180,SystemVerilog,6205project,616,0,2023-11-23 04:02:25+00:00,[],
14259,https://github.com/happymeex/fpga-royale.git,2023-11-05 17:44:36+00:00,Implementation of Clash Royale on an FPGA.,0,happymeex/fpga-royale,714728605,SystemVerilog,fpga-royale,793,0,2023-11-25 19:01:00+00:00,[],
14260,https://github.com/RASoton/GDP33.git,2023-10-07 11:09:25+00:00,posits for RISC-V,0,RASoton/GDP33,701718084,SystemVerilog,GDP33,180774,0,2024-01-22 13:17:10+00:00,[],
14261,https://github.com/AntoBadami/Proyecto-Arqui1.git,2023-10-29 19:17:30+00:00,,0,AntoBadami/Proyecto-Arqui1,711606819,SystemVerilog,Proyecto-Arqui1,13963,0,2023-10-29 19:17:37+00:00,[],
14262,https://github.com/MohammadMahdi-Abdolhosseini/Computer-Architecture-Lab.git,2023-11-06 08:51:21+00:00,Computer Architecture Lab - Assignments - Fall 2023,0,MohammadMahdi-Abdolhosseini/Computer-Architecture-Lab,714984214,SystemVerilog,Computer-Architecture-Lab,4043,0,2024-02-01 17:06:47+00:00,"['systemverilog', 'verilog', 'vhdl', 'arm-processor', 'fpga', 'modelsim', 'quartus2']",
14263,https://github.com/qing-dai/atmt_2023.git,2023-11-04 16:56:21+00:00,,0,qing-dai/atmt_2023,714354266,SystemVerilog,atmt_2023,106264,0,2024-02-16 18:05:08+00:00,[],https://api.github.com/licenses/mit
14264,https://github.com/Vuzhos/mpsis_labs.git,2023-10-16 12:50:56+00:00,,0,Vuzhos/mpsis_labs,705656818,SystemVerilog,mpsis_labs,319,0,2023-11-11 10:15:35+00:00,[],
14265,https://github.com/Filza01/Ibex-Core-Verification-with-UVM.git,2023-10-25 05:31:42+00:00,Creating a UVM based verification environment for the verification of the Ibex core.,1,Filza01/Ibex-Core-Verification-with-UVM,709643386,SystemVerilog,Ibex-Core-Verification-with-UVM,137425,0,2023-12-24 15:36:37+00:00,[],
14266,https://github.com/kiran-vuksanaj/glow-trails.git,2023-11-07 20:12:05+00:00,6.205 final project: kiranv + giniya,0,kiran-vuksanaj/glow-trails,715777146,SystemVerilog,glow-trails,107,0,2023-11-19 21:08:51+00:00,[],
14267,https://github.com/Rochan06/UVM-AXI.git,2023-10-06 02:56:21+00:00,,0,Rochan06/UVM-AXI,701146891,SystemVerilog,UVM-AXI,20,0,2024-01-06 17:25:03+00:00,[],
14268,https://github.com/alfadelta10010/RISCV-Processor.git,2023-10-12 08:31:56+00:00,Single Stage RISC-V 32-bit Processor made in RISC-V Lab UE21EC352A - RISC-V Architecture,0,alfadelta10010/RISCV-Processor,703948923,SystemVerilog,RISCV-Processor,8897,0,2023-11-25 06:40:50+00:00,[],https://api.github.com/licenses/mit
14269,https://github.com/chms7/ddr_controller.git,2023-10-27 03:15:02+00:00,,1,chms7/ddr_controller,710598083,SystemVerilog,ddr_controller,291,0,2024-03-16 07:50:15+00:00,[],
14270,https://github.com/WeiCheng14159/bfloat16_design.git,2023-10-05 20:26:52+00:00,A customly designed bfloat16 unit ,0,WeiCheng14159/bfloat16_design,701056708,SystemVerilog,bfloat16_design,136,0,2024-04-10 17:43:50+00:00,[],
14271,https://github.com/mohamedelfeki2482000/-ATM-based-bank-system-design-and-verification.git,2023-10-09 21:49:07+00:00,,0,mohamedelfeki2482000/-ATM-based-bank-system-design-and-verification,702719583,SystemVerilog,-ATM-based-bank-system-design-and-verification,534,0,2023-10-09 21:52:50+00:00,[],
14272,https://github.com/victorcj18/Square-root.git,2023-10-23 20:43:26+00:00,,0,victorcj18/Square-root,709010159,SystemVerilog,Square-root,1,0,2023-10-23 20:43:48+00:00,[],
14273,https://github.com/Fatim-Sohail/RISC-V-Pipelining.git,2023-10-20 08:24:15+00:00,,0,Fatim-Sohail/RISC-V-Pipelining,707588049,SystemVerilog,RISC-V-Pipelining,130,0,2023-10-20 08:28:26+00:00,[],
14274,https://github.com/akshatmathur16/AES128.git,2023-10-21 18:13:04+00:00,AES Encryption and Decryption Hardware Implementation ,0,akshatmathur16/AES128,708167325,SystemVerilog,AES128,36,0,2023-11-02 07:49:28+00:00,[],
14275,https://github.com/imraghvv/QuickSilicon.git,2023-10-21 06:45:21+00:00,QuickSilicon Technical Solutions in system verilog HDL,0,imraghvv/QuickSilicon,707980272,SystemVerilog,QuickSilicon,8,0,2023-10-21 19:33:11+00:00,[],
14276,https://github.com/SmrithiGanesh-git/UVM-Template.git,2023-10-27 08:52:40+00:00,UVM Template which is applicable to any design under test,0,SmrithiGanesh-git/UVM-Template,710700490,SystemVerilog,UVM-Template,55,0,2023-10-27 08:54:00+00:00,[],
14277,https://github.com/donny0101/RISC_CSE141L.git,2023-10-27 05:25:15+00:00,,0,donny0101/RISC_CSE141L,710629989,SystemVerilog,RISC_CSE141L,26,0,2023-10-27 05:29:43+00:00,[],
14278,https://github.com/monistode/de10nano_template.git,2023-10-26 06:01:13+00:00,A template from de10nano projects,0,monistode/de10nano_template,710151374,SystemVerilog,de10nano_template,23312,0,2023-11-26 10:01:58+00:00,[],
14279,https://github.com/RaviduHM99/Serial_Bus_Design.git,2023-10-08 16:07:18+00:00,EN4020 - Advanced Digital Systems,0,RaviduHM99/Serial_Bus_Design,702141599,SystemVerilog,Serial_Bus_Design,33,0,2023-12-04 10:36:42+00:00,[],
14280,https://github.com/bsc-loca/csr.git,2023-11-06 19:13:30+00:00,,0,bsc-loca/csr,715252284,SystemVerilog,csr,17,0,2023-11-06 23:47:32+00:00,[],
14281,https://github.com/rishabh4749/FourBitRippleCarryAdder.git,2023-11-04 08:45:24+00:00,Ripple Carry Adder Implementation in Verilog,0,rishabh4749/FourBitRippleCarryAdder,714214393,SystemVerilog,FourBitRippleCarryAdder,4,0,2023-11-04 08:46:50+00:00,[],
14282,https://github.com/manmohanverma1234/wallace_tree_multiplier.git,2023-11-03 10:05:15+00:00,,0,manmohanverma1234/wallace_tree_multiplier,713823645,SystemVerilog,wallace_tree_multiplier,3,0,2023-11-03 10:10:08+00:00,[],
14283,https://github.com/sifferman/eval-example.git,2023-10-09 20:07:38+00:00,Using eval to test Yosys and Synlig SystemVerilog support,0,sifferman/eval-example,702691117,SystemVerilog,eval-example,6,0,2023-10-10 03:22:46+00:00,[],
14284,https://github.com/verification-explorer/frames.git,2023-10-15 14:26:14+00:00,"Create grid that must not intersect queue of [x,y] coordinates",0,verification-explorer/frames,705263510,SystemVerilog,frames,5,0,2023-10-15 14:27:14+00:00,[],
14285,https://github.com/kishokkumar200306X/EN3021-stage_1.git,2023-10-16 17:11:28+00:00,,0,kishokkumar200306X/EN3021-stage_1,705778690,SystemVerilog,EN3021-stage_1,10,0,2023-10-16 17:14:01+00:00,[],
14286,https://github.com/talundy/CPE333_OTTER_MCU.git,2023-10-17 22:39:12+00:00,A RISC-V MCU,0,talundy/CPE333_OTTER_MCU,706411753,SystemVerilog,CPE333_OTTER_MCU,2146,0,2023-11-02 17:46:54+00:00,[],
14288,https://github.com/Gflex39/6.111_fin_proj.git,2023-11-04 18:07:09+00:00,FPGA Minigolf,1,Gflex39/6.111_fin_proj,714374444,SystemVerilog,6.111_fin_proj,5522,0,2023-12-14 21:50:26+00:00,[],
14289,https://github.com/BROsandr/apb_mig.git,2023-10-24 18:50:21+00:00,,0,BROsandr/apb_mig,709454456,SystemVerilog,apb_mig,36,0,2023-10-28 22:48:25+00:00,[],https://api.github.com/licenses/gpl-3.0
14290,https://github.com/ear0/385lab7_2.git,2023-11-03 04:01:52+00:00,,0,ear0/385lab7_2,713700164,SystemVerilog,385lab7_2,36,0,2024-01-30 03:35:24+00:00,[],
14292,https://github.com/ttqureshi/5-stage-pipelined-32-bit-Processor-RISC-V-ISA-.git,2023-10-13 13:17:15+00:00,Implementing a 32-bit processor using RISC-V architecture.,0,ttqureshi/5-stage-pipelined-32-bit-Processor-RISC-V-ISA-,704535062,SystemVerilog,5-stage-pipelined-32-bit-Processor-RISC-V-ISA-,916,0,2023-12-31 06:04:22+00:00,"['hdl', 'processor', 'riscv32', 'processor-design']",https://api.github.com/licenses/cc0-1.0
14293,https://github.com/mwin02/CSE141L_Processor.git,2023-11-04 00:08:58+00:00,,0,mwin02/CSE141L_Processor,714109442,SystemVerilog,CSE141L_Processor,378,0,2024-02-28 08:37:02+00:00,[],
14294,https://github.com/Amderry/digital_curcuits.git,2023-10-13 10:20:22+00:00,,0,Amderry/digital_curcuits,704469307,SystemVerilog,digital_curcuits,1344,0,2023-10-13 10:55:15+00:00,[],https://api.github.com/licenses/mit
14295,https://github.com/DucAnhGl/8_bit_cpu.git,2023-10-19 12:27:12+00:00,,0,DucAnhGl/8_bit_cpu,707202047,SystemVerilog,8_bit_cpu,9,0,2024-03-04 08:05:24+00:00,[],
14296,https://github.com/bumjoooon/class_game.git,2023-10-05 00:59:41+00:00,,0,bumjoooon/class_game,700626681,SystemVerilog,class_game,89,0,2023-10-05 01:00:45+00:00,[],
14297,https://github.com/ravikothiyx/SPI_SVT.git,2023-10-04 06:27:05+00:00,,0,ravikothiyx/SPI_SVT,700200995,SystemVerilog,SPI_SVT,1548,0,2023-10-05 10:06:10+00:00,[],
14298,https://github.com/jgkaya/8-Bit_Processor.git,2023-10-05 13:16:05+00:00,,0,jgkaya/8-Bit_Processor,700873864,SystemVerilog,8-Bit_Processor,97,0,2023-10-05 13:17:33+00:00,[],
14299,https://github.com/deepshika99/System-Verilog.git,2023-10-08 06:45:29+00:00,Programs with system verilog,0,deepshika99/System-Verilog,701985561,SystemVerilog,System-Verilog,18,0,2023-10-08 06:51:37+00:00,[],https://api.github.com/licenses/apache-2.0
14300,https://github.com/CaptainStark7/Vending-Machine.git,2023-10-07 06:21:17+00:00,,0,CaptainStark7/Vending-Machine,701641823,SystemVerilog,Vending-Machine,1,0,2023-10-07 06:21:49+00:00,[],
14301,https://github.com/MandarKM/sysVer-ALU.git,2023-10-08 03:59:04+00:00,,0,MandarKM/sysVer-ALU,701953228,SystemVerilog,sysVer-ALU,5,0,2023-10-08 04:05:25+00:00,[],
14302,https://github.com/huy7715/ce_201.git,2023-10-15 15:07:39+00:00,sv_verification for module ALU and FA,0,huy7715/ce_201,705276455,SystemVerilog,ce_201,1,0,2023-10-15 18:58:17+00:00,[],
14303,https://github.com/iamshaheer12/RISC_V_Single_Cycle_Processor.git,2023-10-16 18:40:05+00:00,,0,iamshaheer12/RISC_V_Single_Cycle_Processor,705816312,SystemVerilog,RISC_V_Single_Cycle_Processor,4,0,2023-10-16 18:40:56+00:00,[],
14304,https://github.com/AnkSri28/UART-TX-and-RX.git,2023-10-17 10:18:10+00:00,UART TX and RX with a clock generator.,0,AnkSri28/UART-TX-and-RX,706109540,SystemVerilog,UART-TX-and-RX,5683,0,2023-10-17 10:22:21+00:00,[],
14305,https://github.com/J-Hutchinson-C/5_Stage_Pipeline.git,2023-10-19 01:40:57+00:00,"Simple 5_Stage_Pipeline, will be adding to it occasionally.",0,J-Hutchinson-C/5_Stage_Pipeline,706980916,SystemVerilog,5_Stage_Pipeline,22,0,2023-10-19 01:45:19+00:00,[],
14306,https://github.com/puzihao2018/NM6008_exam.git,2023-10-13 07:16:37+00:00,,0,puzihao2018/NM6008_exam,704399763,SystemVerilog,NM6008_exam,2,0,2023-10-13 07:53:32+00:00,[],
14307,https://github.com/sadegh-majidi/MIPS-Processor.git,2023-10-09 10:37:38+00:00,A simplified MIPS-based processor implemented in verilog as part of the Computer Architecture (CE323) course,0,sadegh-majidi/MIPS-Processor,702448273,SystemVerilog,MIPS-Processor,1036,0,2023-10-09 10:38:19+00:00,[],
14308,https://github.com/smrdh3/tr_git.git,2023-10-10 05:18:51+00:00,trying everthing in git from youtube!,0,smrdh3/tr_git,702829162,SystemVerilog,tr_git,5,0,2023-10-10 05:26:39+00:00,[],
14309,https://github.com/frannyJO/ProjSelection.git,2023-10-04 00:53:14+00:00,,0,frannyJO/ProjSelection,700109870,SystemVerilog,ProjSelection,23,0,2023-10-04 01:15:59+00:00,[],
14310,https://github.com/JSLucena/SystemVerilog-Project.git,2023-10-04 11:10:33+00:00,"idk yet, will update as i go",0,JSLucena/SystemVerilog-Project,700314360,SystemVerilog,SystemVerilog-Project,4,0,2023-11-04 17:43:07+00:00,[],https://api.github.com/licenses/mit
14311,https://github.com/devinatkin/tt05-stopwatch.git,2023-10-11 13:18:05+00:00,A Stop Watch Project based on the code provided to students in ENEL 453. ,0,devinatkin/tt05-stopwatch,703557876,SystemVerilog,tt05-stopwatch,238,0,2023-10-11 13:40:48+00:00,[],https://api.github.com/licenses/apache-2.0
14312,https://github.com/eandre04/Lab-5.git,2023-11-05 21:31:53+00:00,,0,eandre04/Lab-5,714807861,SystemVerilog,Lab-5,4,0,2023-11-05 21:35:30+00:00,[],
14313,https://github.com/AddriftZTUCore/SIMENV.git,2023-10-28 09:06:56+00:00,,0,AddriftZTUCore/SIMENV,711116280,SystemVerilog,SIMENV,4,0,2023-10-28 09:07:29+00:00,[],
14314,https://github.com/victorcj18/Rotabit.git,2023-10-23 20:41:14+00:00,,0,victorcj18/Rotabit,709009443,SystemVerilog,Rotabit,0,0,2023-10-23 20:41:46+00:00,[],
14315,https://github.com/MinotiKarkhanis/DMA-Controller-Assertion-Based-Verification.git,2023-10-25 01:11:08+00:00,Assertion Based Verification of 8237-A DMA Controller,0,MinotiKarkhanis/DMA-Controller-Assertion-Based-Verification,709580064,SystemVerilog,DMA-Controller-Assertion-Based-Verification,6991,0,2023-10-25 01:19:25+00:00,[],
14316,https://github.com/EduardoFriesen/Arqui-Proyect.git,2023-10-31 18:04:19+00:00,,0,EduardoFriesen/Arqui-Proyect,712563429,SystemVerilog,Arqui-Proyect,2974,0,2023-10-31 18:06:55+00:00,[],
14317,https://github.com/OglodkovVadim/MPSU.git,2023-10-30 21:43:09+00:00,,0,OglodkovVadim/MPSU,712138362,SystemVerilog,MPSU,5,0,2023-10-30 21:44:45+00:00,[],
14318,https://github.com/ienseong/Clarke_test.git,2023-11-03 02:07:08+00:00,,0,ienseong/Clarke_test,713671634,SystemVerilog,Clarke_test,2,0,2023-11-03 18:56:37+00:00,[],https://api.github.com/licenses/mit
14319,https://github.com/EngAhmed21/SPI-using-SV.git,2023-11-02 01:03:25+00:00,Implementation and verification of Serial Peripheral Interface (SPI) communication protocol using SystemVerilog,0,EngAhmed21/SPI-using-SV,713163812,SystemVerilog,SPI-using-SV,19,0,2023-11-02 01:05:37+00:00,[],
14320,https://github.com/Uttungauttunga/N-bit-multiplier.git,2023-10-18 12:11:53+00:00,FFVDD ASSIGNMENT-01,0,Uttungauttunga/N-bit-multiplier,706674070,SystemVerilog,N-bit-multiplier,18,0,2023-11-24 12:14:18+00:00,[],
14321,https://github.com/2023-Fall-ECE4278/project2.git,2023-10-04 05:29:41+00:00,,0,2023-Fall-ECE4278/project2,700182384,SystemVerilog,project2,12,0,2023-11-27 04:32:35+00:00,[],
14322,https://github.com/MFYalcin/Verilog-VHDL-SystemVerilog.git,2023-10-26 02:33:20+00:00,The main focus here is writing layers of code on either Verilog/VHDL or SystemVerilog as practice.,0,MFYalcin/Verilog-VHDL-SystemVerilog,710096735,SystemVerilog,Verilog-VHDL-SystemVerilog,12,0,2023-12-02 00:46:34+00:00,[],
14323,https://github.com/AidanBlumLevine/6111-Final-Project.git,2023-10-17 18:49:26+00:00,RAHHHHH,0,AidanBlumLevine/6111-Final-Project,706338631,SystemVerilog,6111-Final-Project,6429,0,2023-12-13 19:01:07+00:00,[],
14324,https://github.com/Arongil/FPGA-GPU.git,2023-11-02 14:14:35+00:00,,0,Arongil/FPGA-GPU,713435806,SystemVerilog,FPGA-GPU,994,0,2023-11-07 01:59:18+00:00,[],https://api.github.com/licenses/mit
14325,https://github.com/TristonBabers/Floating-Point-Convertor.git,2023-10-05 06:10:15+00:00,Converts binary to floating point numbers using a state machine in System Verilog.,0,TristonBabers/Floating-Point-Convertor,700704540,SystemVerilog,Floating-Point-Convertor,72,0,2023-11-13 01:07:26+00:00,[],https://api.github.com/licenses/mit
14326,https://github.com/singh-rozer/systemverilog.git,2023-10-08 17:30:24+00:00,,0,singh-rozer/systemverilog,702166827,SystemVerilog,systemverilog,4,0,2023-10-08 17:36:44+00:00,[],
14327,https://github.com/fuad1502/rvsv.git,2023-11-07 07:15:59+00:00,RVSV is a SystemVerilog implementation of a 5-stage pipelined RISC-V CPU.,0,fuad1502/rvsv,715455389,SystemVerilog,rvsv,59,0,2024-03-05 11:10:08+00:00,"['cpu', 'risc-v', 'systemverilog']",
14328,https://github.com/AryanRathee1/ALU-verification.git,2023-10-05 14:21:05+00:00,,0,AryanRathee1/ALU-verification,700905545,SystemVerilog,ALU-verification,24,0,2023-10-21 17:16:00+00:00,[],
14329,https://github.com/PrabhatChowdhary/UVM.git,2023-10-15 07:20:34+00:00,,0,PrabhatChowdhary/UVM,705152521,SystemVerilog,UVM,70,0,2023-10-15 07:22:15+00:00,[],
14330,https://github.com/gaph-pucrs/Phivers.git,2023-11-03 17:26:53+00:00,Processor Hive for RS5,0,gaph-pucrs/Phivers,713997481,SystemVerilog,Phivers,63,0,2023-11-07 20:17:00+00:00,[],
14331,https://github.com/frahergeorge/10-Bit-Processor.git,2023-10-30 20:27:30+00:00,"A ten bit processor with intermediate instructions, designed for the DE-10 lite board and programmed exclusively with System Verilog, programmed by Nathan O'Brien and George Fraher.",0,frahergeorge/10-Bit-Processor,712116254,SystemVerilog,10-Bit-Processor,22,0,2023-11-02 19:24:23+00:00,[],
14332,https://github.com/AlexeyKirpin/APSMIET.git,2023-10-11 20:42:59+00:00,APS MIET,0,AlexeyKirpin/APSMIET,703747329,SystemVerilog,APSMIET,156,0,2023-10-11 20:45:05+00:00,[],
14333,https://github.com/Vincenzo0709/Progetto_ES_DICE.git,2023-10-18 14:17:04+00:00,,0,Vincenzo0709/Progetto_ES_DICE,706736147,SystemVerilog,Progetto_ES_DICE,10346,0,2023-10-18 14:17:19+00:00,[],
14334,https://github.com/rad68/vga.git,2023-10-18 17:00:52+00:00,simple vga interface,0,rad68/vga,706812423,SystemVerilog,vga,3,0,2023-10-18 17:18:55+00:00,[],
14335,https://github.com/A1exanderA/TDC.git,2023-10-22 19:01:22+00:00,,0,A1exanderA/TDC,708507902,SystemVerilog,TDC,3,0,2023-10-22 19:02:04+00:00,[],
14336,https://github.com/cascade-artifacts-designs/cascade-cva6-c1.git,2023-10-10 13:08:22+00:00,,0,cascade-artifacts-designs/cascade-cva6-c1,703027263,SystemVerilog,cascade-cva6-c1,10505,0,2023-10-10 13:19:00+00:00,[],
14337,https://github.com/cascade-artifacts-designs/cascade-cva6.git,2023-10-10 13:02:14+00:00,,0,cascade-artifacts-designs/cascade-cva6,703024491,SystemVerilog,cascade-cva6,10499,0,2023-10-10 13:02:24+00:00,[],
14338,https://github.com/victorcj18/MIPS-Project.git,2023-10-23 20:53:42+00:00,,0,victorcj18/MIPS-Project,709013268,SystemVerilog,MIPS-Project,5,0,2023-10-23 20:56:42+00:00,[],
14339,https://github.com/lotanda17/AIHW.git,2023-11-01 07:02:22+00:00,,0,lotanda17/AIHW,712776460,SystemVerilog,AIHW,121,0,2023-11-01 08:07:26+00:00,[],
14340,https://github.com/DenizzzGuzell/UART_VIP.git,2023-10-24 08:48:38+00:00,Verification IP of fully parameterized two agents UART,0,DenizzzGuzell/UART_VIP,709209983,SystemVerilog,UART_VIP,3768,0,2023-10-24 09:16:18+00:00,[],https://api.github.com/licenses/mit
14341,https://github.com/swapnilanand123/DFF.git,2023-10-04 05:59:04+00:00,"A test case for a D flip-flop called ""D Flip-Flop Basic Operation"" has been outlined. This test case verifies the fundamental functionality of the D flip-flop, ensuring that it correctly captures and outputs the D input on the rising edge of the clock signal. Show RTL TO GDSII",0,swapnilanand123/DFF,700191455,SystemVerilog,DFF,7,0,2023-10-04 11:42:30+00:00,[],
14342,https://github.com/KatCe/yosys_issue_3773.git,2023-10-05 13:23:52+00:00,Minimized example to reproduce yosys issue 3773,0,KatCe/yosys_issue_3773,700877387,SystemVerilog,yosys_issue_3773,8,0,2023-10-05 13:39:09+00:00,[],
14343,https://github.com/senna221/git_repo_iota.git,2023-10-09 21:20:29+00:00,Test repo,0,senna221/git_repo_iota,702712245,SystemVerilog,git_repo_iota,5,0,2023-11-01 12:36:02+00:00,[],
14344,https://github.com/swapnilanand123/1010-Overlapping-Mealy-Sequence-Detector.git,2023-11-05 06:35:13+00:00,,0,swapnilanand123/1010-Overlapping-Mealy-Sequence-Detector,714540362,SystemVerilog,1010-Overlapping-Mealy-Sequence-Detector,13,0,2023-11-05 06:41:48+00:00,[],
14345,https://github.com/Kader-Khafif/Digital-System-Design.git,2023-10-27 17:05:44+00:00,TCES 330,0,Kader-Khafif/Digital-System-Design,710894640,SystemVerilog,Digital-System-Design,317,0,2023-10-27 17:06:40+00:00,[],
14346,https://github.com/bisaacma-iteso/basic_xcelium.git,2023-10-27 02:26:59+00:00,Basic XCELIUM example,0,bisaacma-iteso/basic_xcelium,710586444,SystemVerilog,basic_xcelium,1,0,2023-10-27 02:27:33+00:00,[],
14347,https://github.com/venkatraghavv/ffvdd_a1.git,2023-10-21 07:51:57+00:00,ffvdd assignment 1,0,venkatraghavv/ffvdd_a1,707997586,SystemVerilog,ffvdd_a1,24,0,2023-11-17 11:16:56+00:00,[],
14348,https://github.com/DeshpandeAnanya/FFVDD_fifo.git,2023-10-25 09:51:38+00:00,,0,DeshpandeAnanya/FFVDD_fifo,709738362,SystemVerilog,FFVDD_fifo,235,0,2023-11-23 07:40:27+00:00,[],
14349,https://github.com/Nagabhushand/32-8-Register-File.git,2023-10-26 12:15:33+00:00,,0,Nagabhushand/32-8-Register-File,710296118,SystemVerilog,32-8-Register-File,17,0,2023-11-24 11:05:38+00:00,[],
14350,https://github.com/caitlin-dc/EE-271.git,2023-10-20 18:18:16+00:00,"Overview of digital computer systems. Covers logic, Boolean algebra, combinational and sequential circuits and logic design; programmable logic devices; and the design and operation of digital computers, including ALU, memory, and I/O. ",0,caitlin-dc/EE-271,707817665,SystemVerilog,EE-271,538,0,2023-10-20 18:44:35+00:00,[],
14351,https://github.com/ryanleontini/Pipeline.git,2023-10-21 17:42:57+00:00,,0,ryanleontini/Pipeline,708159029,SystemVerilog,Pipeline,2587,0,2023-11-09 16:35:07+00:00,[],
14352,https://github.com/AlanCui4080/ThermN1.git,2023-10-28 07:40:36+00:00,,0,AlanCui4080/ThermN1,711094397,SystemVerilog,ThermN1,2,0,2023-12-20 15:25:02+00:00,[],
14353,https://github.com/supertgo/verilog-remaining-of-seven.git,2023-11-02 18:22:54+00:00,,0,supertgo/verilog-remaining-of-seven,713542184,SystemVerilog,verilog-remaining-of-seven,0,0,2023-12-23 21:50:09+00:00,[],
14354,https://github.com/MAhmadZafar/3-Stage-Pipiline-Processor.git,2023-10-21 16:41:31+00:00,,0,MAhmadZafar/3-Stage-Pipiline-Processor,708141556,SystemVerilog,3-Stage-Pipiline-Processor,1982,0,2024-01-10 16:43:20+00:00,[],
14355,https://github.com/JiteshNayak2004/RVXcellerate.git,2023-10-09 15:17:10+00:00,single cycle risc-v core implementation,0,JiteshNayak2004/RVXcellerate,702575361,SystemVerilog,RVXcellerate,13,0,2024-02-08 18:16:41+00:00,[],
14356,https://github.com/littleguac/cpen211labs.git,2023-11-05 02:52:20+00:00,,0,littleguac/cpen211labs,714498530,SystemVerilog,cpen211labs,2,0,2023-11-06 21:58:19+00:00,[],
14357,https://github.com/JasomRocha/Circuitos_logicos_II.git,2023-10-05 18:55:50+00:00,Códigos de circuitos lógicos II - Testbenches de circuitos combinacionais,0,JasomRocha/Circuitos_logicos_II,701024964,SystemVerilog,Circuitos_logicos_II,2,0,2023-10-05 19:00:56+00:00,[],
14358,https://github.com/akshatva7/Traffic_cont_FSMD.git,2023-10-22 16:52:00+00:00,,0,akshatva7/Traffic_cont_FSMD,708469629,SystemVerilog,Traffic_cont_FSMD,18,0,2023-11-21 14:38:06+00:00,[],
14359,https://github.com/Enn3625/FFVDD.git,2023-10-18 14:19:08+00:00,,0,Enn3625/FFVDD,706737195,SystemVerilog,FFVDD,125,0,2023-10-25 12:25:01+00:00,[],
14360,https://github.com/mfrisch3/ALU_Design.git,2023-10-22 22:00:45+00:00,,0,mfrisch3/ALU_Design,708551414,SystemVerilog,ALU_Design,3,0,2023-10-22 22:33:26+00:00,[],
14361,https://github.com/ManFromPABB/CPE233.git,2023-10-22 06:13:35+00:00,,0,ManFromPABB/CPE233,708301204,SystemVerilog,CPE233,23920,0,2023-10-22 20:55:07+00:00,[],
14362,https://github.com/Oscar-FZ/Proyecto2_Verificacion.git,2023-10-22 01:20:21+00:00,Segundo proyecto del curso de verificacion funcional de circuitos integrados,0,Oscar-FZ/Proyecto2_Verificacion,708249674,SystemVerilog,Proyecto2_Verificacion,144,0,2023-10-22 01:23:09+00:00,[],
14363,https://github.com/neildhw/RISCEV.git,2023-10-11 05:09:48+00:00,RISCEV is a RV32I Softcore created for a Electric Car,0,neildhw/RISCEV,703357096,,RISCEV,0,0,2023-10-11 05:09:48+00:00,[],
14364,https://github.com/Abn5658/Portfolio.git,2023-10-18 07:06:34+00:00,A list of my past projects and coursework,0,Abn5658/Portfolio,706549626,SystemVerilog,Portfolio,1445,0,2023-10-18 07:38:32+00:00,[],
14365,https://github.com/swapnilanand123/SPI-Protocol.git,2023-10-09 06:05:44+00:00,,0,swapnilanand123/SPI-Protocol,702337718,SystemVerilog,SPI-Protocol,11,0,2023-10-09 06:42:42+00:00,[],
14366,https://github.com/Rahma-Aly/ALU.git,2023-10-12 21:55:51+00:00,an ALU with a complete class-based testbench,0,Rahma-Aly/ALU,704256122,SystemVerilog,ALU,4,0,2023-10-12 21:58:20+00:00,[],
14367,https://github.com/annayun072/CPEN311_Lab3.git,2023-10-26 02:43:04+00:00,,0,annayun072/CPEN311_Lab3,710099059,SystemVerilog,CPEN311_Lab3,539,0,2023-10-26 02:44:51+00:00,[],
14368,https://github.com/guanwei-wu/Altera-DE2-115-FPGA.git,2023-10-30 14:11:32+00:00,NTUEE Electrical Engineering Lab (Digital Circuit),0,guanwei-wu/Altera-DE2-115-FPGA,711957735,SystemVerilog,Altera-DE2-115-FPGA,74,0,2023-10-30 14:19:18+00:00,[],
14369,https://github.com/VALO64/ADC_BIPOLAR.git,2023-11-06 18:11:48+00:00,,0,VALO64/ADC_BIPOLAR,715228398,SystemVerilog,ADC_BIPOLAR,1508,0,2023-11-06 18:13:17+00:00,[],
14370,https://github.com/LasithaJananjaya/Processor-Design-and-Implementation-on-a-FPGA.git,2023-10-13 17:34:47+00:00,,0,LasithaJananjaya/Processor-Design-and-Implementation-on-a-FPGA,704634763,SystemVerilog,Processor-Design-and-Implementation-on-a-FPGA,1081,0,2023-10-13 17:37:20+00:00,[],
14371,https://github.com/Dofingert/axis_to_i2s.git,2023-10-29 08:35:12+00:00,An opensource implementation of i2s transmitter.,0,Dofingert/axis_to_i2s,711428091,SystemVerilog,axis_to_i2s,35,0,2023-10-29 09:19:25+00:00,[],
14372,https://github.com/brycepollack/cse140l-lab1.git,2023-10-15 23:35:04+00:00,,0,brycepollack/cse140l-lab1,705407223,SystemVerilog,cse140l-lab1,111,0,2023-12-18 06:21:12+00:00,[],
14373,https://github.com/MikeT24/UART_SIMPLE.git,2023-10-25 03:36:37+00:00,,0,MikeT24/UART_SIMPLE,709615139,SystemVerilog,UART_SIMPLE,16,0,2023-10-25 03:38:06+00:00,[],
14374,https://github.com/SumaiyaTariqueLabiba/UVM_ALU.git,2023-10-11 09:47:17+00:00,UVM methodology implemented testbench structure,0,SumaiyaTariqueLabiba/UVM_ALU,703465992,SystemVerilog,UVM_ALU,11,0,2024-02-17 08:32:23+00:00,[],
14375,https://github.com/David-Zaragoza/arm_cpu_architecture.git,2023-10-19 19:21:43+00:00,Simple single-cycle architecture modeled on ARM IP written in SystemVerilog.,0,David-Zaragoza/arm_cpu_architecture,707380668,SystemVerilog,arm_cpu_architecture,32,0,2023-10-19 19:24:50+00:00,[],
14376,https://github.com/swapnilanand123/FSM_1010.git,2023-11-06 07:24:41+00:00,,0,swapnilanand123/FSM_1010,714951667,SystemVerilog,FSM_1010,9,0,2023-11-06 07:34:14+00:00,[],
14377,https://github.com/kdpatino/tt05-sobel_gcd_unal.git,2023-11-04 09:20:40+00:00,,1,kdpatino/tt05-sobel_gcd_unal,714223286,SystemVerilog,tt05-sobel_gcd_unal,3512,0,2023-11-04 17:53:13+00:00,[],https://api.github.com/licenses/apache-2.0
14378,https://github.com/rishabh4749/VendingMachine.git,2023-11-04 08:28:45+00:00,Ideal Vending Machine Implementation in Verilog.,0,rishabh4749/VendingMachine,714210528,SystemVerilog,VendingMachine,5,0,2023-11-04 08:31:45+00:00,[],
14379,https://github.com/fxtimakhxn/lab_5.git,2023-11-03 20:42:08+00:00,,0,fxtimakhxn/lab_5,714061833,SystemVerilog,lab_5,486,0,2023-11-05 02:24:05+00:00,[],
14380,https://github.com/bsc-loca/mmu.git,2023-11-06 19:13:55+00:00,,0,bsc-loca/mmu,715252450,SystemVerilog,mmu,73,0,2023-11-06 23:47:14+00:00,[],
14381,https://github.com/bsc-loca/hpm.git,2023-11-06 19:14:38+00:00,,0,bsc-loca/hpm,715252735,SystemVerilog,hpm,6,0,2023-11-06 23:47:24+00:00,[],
14384,https://github.com/cascade-artifacts-designs/cascade-cva6-y1.git,2023-10-10 13:02:35+00:00,,0,cascade-artifacts-designs/cascade-cva6-y1,703024667,SystemVerilog,cascade-cva6-y1,10499,0,2023-10-10 13:18:43+00:00,[],
14385,https://github.com/akshatmathur16/Cordic_algo.git,2023-10-18 06:19:23+00:00,COrdic algorithm,0,akshatmathur16/Cordic_algo,706531707,SystemVerilog,Cordic_algo,35,0,2023-10-20 16:57:41+00:00,[],
14386,https://github.com/KevinSu520/Pipelined-Processor.git,2023-10-13 06:53:42+00:00,Pipelined Processor,0,KevinSu520/Pipelined-Processor,704391470,SystemVerilog,Pipelined-Processor,176,0,2023-10-13 06:54:37+00:00,[],
14387,https://github.com/KevinSu520/SingleCycleProcessor.git,2023-10-13 06:50:37+00:00,Single Cycle processor RISC-V in Verilog,0,KevinSu520/SingleCycleProcessor,704390390,SystemVerilog,SingleCycleProcessor,28,0,2023-10-13 06:51:23+00:00,[],
14388,https://github.com/ArthurMdrs/FFT-Module-Verification.git,2023-10-06 12:44:18+00:00,This is a UVM testbench for the functional verification of a FFT module.,0,ArthurMdrs/FFT-Module-Verification,701341157,SystemVerilog,FFT-Module-Verification,17210,0,2023-11-21 16:33:36+00:00,[],
14389,https://github.com/2023-Fall-ECE4278/lab9.git,2023-11-04 16:56:53+00:00,Register Automation,0,2023-Fall-ECE4278/lab9,714354433,SystemVerilog,lab9,15,0,2023-11-20 07:03:23+00:00,[],
14390,https://github.com/BROsandr/async_fifo.git,2023-10-29 20:44:09+00:00,,0,BROsandr/async_fifo,711628188,SystemVerilog,async_fifo,26,0,2023-10-29 21:37:32+00:00,[],https://api.github.com/licenses/gpl-3.0
14391,https://github.com/sidharthsudhir-03/CPEN-211-Labs.git,2023-10-21 03:05:46+00:00,,0,sidharthsudhir-03/CPEN-211-Labs,707936440,SystemVerilog,CPEN-211-Labs,662,0,2024-01-25 05:17:06+00:00,[],
14392,https://github.com/rbride/FMC424-I2C-Controller.git,2023-10-08 22:20:00+00:00,"I2C controller to perform required functions to integrate, monitor and utilize FMC424 Dual QSFP+ Vita 57.1 Compliant Mezzanine Board",0,rbride/FMC424-I2C-Controller,702238201,SystemVerilog,FMC424-I2C-Controller,196,0,2023-10-08 22:31:12+00:00,[],
14393,https://github.com/benhuangpf/riscv.git,2023-11-02 16:36:29+00:00,,0,benhuangpf/riscv,713499756,SystemVerilog,riscv,8086,0,2024-02-09 09:19:14+00:00,[],
14394,https://github.com/BaoAh/Formal_Verification_project2.git,2023-11-07 08:26:17+00:00,Formal Verification for AI chip,0,BaoAh/Formal_Verification_project2,715480859,SystemVerilog,Formal_Verification_project2,6605,0,2024-03-13 08:34:02+00:00,[],
14395,https://github.com/JanFelixG/Verilog_essentials.git,2023-10-19 15:23:38+00:00,,0,JanFelixG/Verilog_essentials,707283331,SystemVerilog,Verilog_essentials,2419,0,2023-10-24 13:19:31+00:00,[],
14396,https://github.com/Shubh3009/Design-and-verification-of-Single-Port-RAM.git,2023-10-24 16:23:51+00:00,,0,Shubh3009/Design-and-verification-of-Single-Port-RAM,709396659,SystemVerilog,Design-and-verification-of-Single-Port-RAM,6,0,2023-10-24 16:25:33+00:00,[],
14397,https://github.com/DenizzzGuzell/AXI-VIP.git,2023-10-24 09:29:27+00:00,Verification IP of fully parameterized AXI4-Lite,0,DenizzzGuzell/AXI-VIP,709225240,SystemVerilog,AXI-VIP,21,0,2023-10-24 09:30:36+00:00,[],https://api.github.com/licenses/mit
14398,https://github.com/2023-Fall-ECE4278/project1.git,2023-10-04 03:05:04+00:00,,0,2023-Fall-ECE4278/project1,700143632,SystemVerilog,project1,14,0,2023-10-28 08:22:27+00:00,[],
14399,https://github.com/Sanjievsharma/FSM-for-vending-machine-behaviour.git,2023-10-06 04:46:20+00:00," The initiative titled ""Finite State Machine Design for Vending Machine Behavior"" encompasses the instantiation of a digital vending machine controller through the application of a Finite State Machine (FSM) paradigm.``",0,Sanjievsharma/FSM-for-vending-machine-behaviour,701172034,SystemVerilog,FSM-for-vending-machine-behaviour,6,0,2023-10-06 11:50:07+00:00,[],
14400,https://github.com/richardoppiyo/gcd16_bits.git,2023-10-08 01:15:57+00:00,System Verilog code for 16 bit GCD,0,richardoppiyo/gcd16_bits,701924303,SystemVerilog,gcd16_bits,9,0,2023-10-08 01:16:38+00:00,[],
14401,https://github.com/ma3332/sha256test.git,2023-10-10 17:41:04+00:00,,0,ma3332/sha256test,703155002,SystemVerilog,sha256test,4,0,2023-10-10 17:41:48+00:00,[],
14402,https://github.com/kianomoomi/RISC-V-Processor-Implementation.git,2023-10-08 17:18:32+00:00,"This repository contains the implementation of a RISC-V processor. For a detailed overview of the different phases of the project, please refer to the README file.",0,kianomoomi/RISC-V-Processor-Implementation,702163243,SystemVerilog,RISC-V-Processor-Implementation,817,0,2023-10-08 17:35:15+00:00,[],
14403,https://github.com/Lelezinski/uvm-sandbox.git,2023-11-02 18:05:46+00:00,,0,Lelezinski/uvm-sandbox,713535630,SystemVerilog,uvm-sandbox,3,0,2023-11-02 18:05:54+00:00,[],
14404,https://github.com/charverr/score4.git,2023-11-02 10:14:27+00:00,score4 project for the university course vlsi,0,charverr/score4,713337173,SystemVerilog,score4,4,0,2023-11-02 10:15:40+00:00,[],
14405,https://github.com/AggelosKv/fsm_formal_verification.git,2023-10-26 18:00:28+00:00,,0,AggelosKv/fsm_formal_verification,710448933,SystemVerilog,fsm_formal_verification,10,0,2023-10-31 17:09:56+00:00,[],
14406,https://github.com/Soleiman-Manteghi/SDF-Nios2.git,2023-10-16 01:08:44+00:00,,0,Soleiman-Manteghi/SDF-Nios2,705424209,SystemVerilog,SDF-Nios2,11054,0,2023-10-16 01:12:20+00:00,[],
14407,https://github.com/OYounis/sparceMem.git,2023-10-27 12:31:11+00:00,,0,OYounis/sparceMem,710781620,SystemVerilog,sparceMem,5,0,2023-10-27 12:32:00+00:00,[],
14408,https://github.com/rishabh4749/TrafficSignal.git,2023-11-04 08:41:10+00:00,Traffic Signal Implementation in Verilog,0,rishabh4749/TrafficSignal,714213432,SystemVerilog,TrafficSignal,3,0,2023-11-04 08:42:37+00:00,[],
14409,https://github.com/USKhan101/security_verification_FSM.git,2023-11-04 13:09:24+00:00,,0,USKhan101/security_verification_FSM,714283618,SystemVerilog,security_verification_FSM,6,0,2023-11-04 13:22:54+00:00,[],https://api.github.com/licenses/mit
14410,https://github.com/SiddantY/SimplifiedLC3.git,2023-11-01 04:30:52+00:00,System Verilog Implementation of a simiplified version of LC3 (16 bit architecture),0,SiddantY/SimplifiedLC3,712734716,SystemVerilog,SimplifiedLC3,19,0,2023-11-01 04:54:14+00:00,[],
14411,https://github.com/biafranco/verilogStructural.git,2023-11-06 17:02:29+00:00,,0,biafranco/verilogStructural,715199569,SystemVerilog,verilogStructural,9,0,2023-11-06 17:13:16+00:00,[],
14412,https://github.com/shabarshov/MPSIS.git,2023-10-30 21:52:08+00:00,,0,shabarshov/MPSIS,712140889,SystemVerilog,MPSIS,19,0,2023-10-30 21:54:14+00:00,[],
14413,https://github.com/sepehrfazeli/FPGA-programming.git,2023-10-06 11:00:48+00:00,,0,sepehrfazeli/FPGA-programming,701301155,SystemVerilog,FPGA-programming,91274,0,2023-12-11 07:30:20+00:00,[],
14414,https://github.com/nicolasZhao1908/MIRI-PA.git,2023-10-10 09:09:26+00:00,,0,nicolasZhao1908/MIRI-PA,702923553,SystemVerilog,MIRI-PA,1872,0,2024-01-24 15:54:37+00:00,[],https://api.github.com/licenses/mit
14415,https://github.com/gaph-pucrs/TaskInjector.git,2023-11-01 20:46:13+00:00,A many-core peripheral to deploy applications into the system,0,gaph-pucrs/TaskInjector,713098523,SystemVerilog,TaskInjector,24,0,2023-11-02 22:35:39+00:00,[],
14416,https://github.com/MaddieVorhies/ELC5396_ClassReport3.git,2023-10-13 03:41:31+00:00,,0,MaddieVorhies/ELC5396_ClassReport3,704336208,SystemVerilog,ELC5396_ClassReport3,81,0,2023-10-13 03:53:36+00:00,[],
14417,https://github.com/pauloohaha/jtagTest.git,2023-10-13 23:11:35+00:00,,1,pauloohaha/jtagTest,704725201,SystemVerilog,jtagTest,128,0,2023-10-16 18:46:28+00:00,[],
14418,https://github.com/2023-Fall-ECE4278/lab7.git,2023-10-04 03:00:16+00:00,FIFO Synthesis,0,2023-Fall-ECE4278/lab7,700142518,SystemVerilog,lab7,15,0,2023-11-06 07:48:45+00:00,[],
14419,https://github.com/Buraddo23/pcie_interface_verification.git,2023-10-05 09:42:24+00:00,Verification project for a PCIe interface,0,Buraddo23/pcie_interface_verification,700786635,SystemVerilog,pcie_interface_verification,2,0,2023-10-05 11:19:14+00:00,[],
14420,https://github.com/Mateusz-alicante/lab03.git,2023-10-15 01:41:20+00:00,,1,Mateusz-alicante/lab03,705090434,SystemVerilog,lab03,2,0,2023-10-15 01:41:40+00:00,[],
14421,https://github.com/hrirhea/Verification-of-Sunchronous-FIFO.git,2023-10-15 11:16:12+00:00,Designing and Verification of Synchronous FIFO,1,hrirhea/Verification-of-Sunchronous-FIFO,705209408,SystemVerilog,Verification-of-Sunchronous-FIFO,37,0,2023-10-15 11:25:25+00:00,[],
14424,https://github.com/Ghostdash/ELEC402.git,2023-10-04 01:12:37+00:00,,0,Ghostdash/ELEC402,700115053,SystemVerilog,ELEC402,22746,0,2023-10-04 01:28:37+00:00,[],
14425,https://github.com/rpeters54/Enigma-tic.git,2023-10-23 06:39:58+00:00,Digital Implementation of an Enigma Text Encryption Machine,0,rpeters54/Enigma-tic,708671896,SystemVerilog,Enigma-tic,19,0,2023-10-23 06:52:02+00:00,[],
14426,https://github.com/averi-u/Lab-1-Verilog-starter-code.git,2023-10-22 19:58:19+00:00,,0,averi-u/Lab-1-Verilog-starter-code,708522816,SystemVerilog,Lab-1-Verilog-starter-code,8,0,2023-10-22 19:58:31+00:00,[],
14427,https://github.com/muhammadvip123/ATM---based-bank-system.git,2023-10-22 08:06:41+00:00,"Design Part: System Architecture/Design, Write High Level Model of the System, Write the Verilog Code. Verification Part: create Testbench, define design properties or assertion using SVA, create coverage model.",0,muhammadvip123/ATM---based-bank-system,708324859,SystemVerilog,ATM---based-bank-system,1589,0,2023-10-22 08:13:13+00:00,[],
14428,https://github.com/Ahmed162817/FIFO.git,2023-10-10 21:46:14+00:00,,0,Ahmed162817/FIFO,703242122,SystemVerilog,FIFO,13,0,2023-10-10 21:57:53+00:00,[],
14429,https://github.com/brayner1398/SystemVerilogTest.git,2023-10-05 01:36:09+00:00,,0,brayner1398/SystemVerilogTest,700635448,SystemVerilog,SystemVerilogTest,0,0,2023-10-05 01:41:57+00:00,[],
14430,https://github.com/abhaykn99/SV_UVM_verification_projects.git,2023-10-09 10:18:18+00:00,,0,abhaykn99/SV_UVM_verification_projects,702440146,SystemVerilog,SV_UVM_verification_projects,9653,0,2023-10-26 13:59:44+00:00,[],
14431,https://github.com/zainmusafir/tinyALU_design-UVM.git,2023-10-08 13:51:44+00:00,"design of 3 operand TinyALU mod inVHDL , with UVM.",0,zainmusafir/tinyALU_design-UVM,702100035,SystemVerilog,tinyALU_design-UVM,10572,0,2023-10-08 14:00:01+00:00,[],
14432,https://github.com/NandeeshaSwamy/ffvdd_ahp1_igc.git,2023-10-25 09:30:13+00:00,,0,NandeeshaSwamy/ffvdd_ahp1_igc,709729954,SystemVerilog,ffvdd_ahp1_igc,21,0,2023-11-24 02:54:42+00:00,[],
14433,https://github.com/CMasterM/CSE140L-labs.git,2023-10-17 01:21:06+00:00,Labs for our CSE140L group,0,CMasterM/CSE140L-labs,705928942,SystemVerilog,CSE140L-labs,5076,0,2023-10-17 01:22:04+00:00,[],
14434,https://github.com/Li357/voxos.git,2023-10-25 20:48:01+00:00,6.205 Final Project: a vocoder on FPGA,0,Li357/voxos,710015386,SystemVerilog,voxos,14942,0,2023-11-05 19:44:44+00:00,[],https://api.github.com/licenses/mit
14435,https://github.com/rishabh4749/ParityDetector.git,2023-11-04 08:34:06+00:00,Serial Parity Detector Implementation in Verilog,0,rishabh4749/ParityDetector,714211742,SystemVerilog,ParityDetector,4,0,2023-11-04 08:35:46+00:00,[],
14436,https://github.com/tarun-prakash/nanocmos2.git,2023-10-10 00:57:08+00:00,,0,tarun-prakash/nanocmos2,702761448,SystemVerilog,nanocmos2,27,0,2023-10-10 01:09:38+00:00,[],
14437,https://github.com/changh28/svpwm.git,2023-11-07 03:27:10+00:00,,0,changh28/svpwm,715390453,SystemVerilog,svpwm,6,0,2023-11-07 03:28:19+00:00,[],
14438,https://github.com/SHAHIDMEHMOODS/vs_code_push.git,2023-10-21 15:21:16+00:00,,0,SHAHIDMEHMOODS/vs_code_push,708117186,SystemVerilog,vs_code_push,1,0,2023-10-21 16:07:42+00:00,[],
14439,https://github.com/jake19976/lab-3-l1e-jake19976.git,2023-10-27 04:42:40+00:00,Jake Hwang-Lab3,0,jake19976/lab-3-l1e-jake19976,710619417,SystemVerilog,lab-3-l1e-jake19976,451,0,2023-10-27 05:03:32+00:00,[],
14440,https://github.com/iranmedina04/project_2_veri.git,2023-10-19 19:53:56+00:00,Esa picha proyecto de veri,0,iranmedina04/project_2_veri,707391335,SystemVerilog,project_2_veri,1357,0,2023-10-23 00:38:37+00:00,[],
14441,https://github.com/mysorenan/RTLs.git,2023-10-24 06:38:32+00:00,1. Contains Generic RTLs frequently Used,0,mysorenan/RTLs,709163067,SystemVerilog,RTLs,0,0,2023-10-24 07:02:43+00:00,[],
14442,https://github.com/i2xbekbergen/Vending-Machine.git,2023-10-26 07:46:20+00:00,The goal of this project is to imitate the working process of the Vending Machine,0,i2xbekbergen/Vending-Machine,710189644,SystemVerilog,Vending-Machine,1093,0,2023-10-26 08:09:32+00:00,[],
14443,https://github.com/GiorgosPelekidis/dipl-proc.git,2023-10-09 09:11:31+00:00,,0,GiorgosPelekidis/dipl-proc,702411023,SystemVerilog,dipl-proc,296,0,2023-10-09 09:16:18+00:00,[],
14445,https://github.com/nhattan121/modifier_cpu.git,2023-10-11 01:47:36+00:00,risc-v isa extension for GF,0,nhattan121/modifier_cpu,703300460,SystemVerilog,modifier_cpu,1,0,2023-10-11 01:51:22+00:00,[],
14446,https://github.com/Mhd-Shah/Verification-of-I2C-communication-protocol.git,2023-10-30 02:16:59+00:00,Verification i2c communication protocol,0,Mhd-Shah/Verification-of-I2C-communication-protocol,711706199,SystemVerilog,Verification-of-I2C-communication-protocol,462,0,2023-11-16 07:20:45+00:00,"['i2c-communication', 'i2c-controller', 'i2c-memory', 'i2c-protocol', 'systemverilog', 'systemverilog-test-bench', 'verilog']",
14447,https://github.com/lukeras03/Project2CompOrg.git,2023-10-07 16:05:46+00:00,Repository for Second Project,0,lukeras03/Project2CompOrg,701807644,SystemVerilog,Project2CompOrg,5,0,2023-10-07 16:08:23+00:00,[],
14448,https://github.com/waderylan/Computer-Hardware-Design.git,2023-10-06 17:05:56+00:00,,0,waderylan/Computer-Hardware-Design,701454593,SystemVerilog,Computer-Hardware-Design,3198,0,2023-10-06 17:19:28+00:00,[],
14449,https://github.com/fawang3y/mytest.git,2023-10-08 07:22:50+00:00,first git use test for wfan,0,fawang3y/mytest,701994467,SystemVerilog,mytest,13,0,2023-10-08 07:26:41+00:00,[],
14450,https://github.com/KnowAashish/SystemVerilog-Design_Verification_of_Serial_Peripheral_Interface.git,2023-10-23 05:29:08+00:00,This repository contains detailed RTL design and TB verification of a Serial Peripheral Interface (SPI).,0,KnowAashish/SystemVerilog-Design_Verification_of_Serial_Peripheral_Interface,708651919,SystemVerilog,SystemVerilog-Design_Verification_of_Serial_Peripheral_Interface,10,0,2024-01-28 00:49:25+00:00,[],
14451,https://github.com/zaazad/tapeout_IM_core.git,2023-11-05 23:21:15+00:00,,0,zaazad/tapeout_IM_core,714830257,SystemVerilog,tapeout_IM_core,28,0,2023-11-05 23:28:24+00:00,[],
14452,https://github.com/valmyr/UVM.git,2023-10-15 19:16:02+00:00,,0,valmyr/UVM,705353304,SystemVerilog,UVM,4,0,2023-10-15 19:19:58+00:00,[],
14453,https://github.com/YYWBE/temp.git,2023-10-22 17:30:52+00:00,,0,YYWBE/temp,708481732,SystemVerilog,temp,58,0,2023-10-26 19:11:20+00:00,[],
14454,https://github.com/piscoiandrei/LSIC.git,2023-10-30 14:58:15+00:00,,0,piscoiandrei/LSIC,711980113,SystemVerilog,LSIC,1,0,2023-10-30 16:07:27+00:00,[],
14455,https://github.com/bumjoooon/testbench_ex1.git,2023-10-30 01:02:39+00:00,,0,bumjoooon/testbench_ex1,711683138,SystemVerilog,testbench_ex1,1,0,2023-10-30 04:42:11+00:00,[],
14456,https://github.com/Kfir-Barzilay/bomberman_SV.git,2023-10-17 12:22:33+00:00,A game that was written in system verilog,0,Kfir-Barzilay/bomberman_SV,706161009,SystemVerilog,bomberman_SV,1775,0,2023-10-17 12:31:35+00:00,[],
14457,https://github.com/Little-W/RISC-V-SOC.git,2023-10-23 04:53:26+00:00,,0,Little-W/RISC-V-SOC,708643396,SystemVerilog,RISC-V-SOC,14,0,2023-11-06 09:40:45+00:00,[],
14458,https://github.com/Amruthab12/demo.git,2023-10-11 06:39:41+00:00,,0,Amruthab12/demo,703387872,SystemVerilog,demo,1,0,2023-10-11 06:40:31+00:00,[],
14459,https://github.com/RuchchaSD/RV32I_Processor_Design_SystemVerilog.git,2023-10-12 07:32:45+00:00,,0,RuchchaSD/RV32I_Processor_Design_SystemVerilog,703924977,SystemVerilog,RV32I_Processor_Design_SystemVerilog,7282,0,2023-10-18 10:19:40+00:00,[],
14460,https://github.com/semlee/RISC-V.git,2023-10-30 18:49:24+00:00,Basic RISC-V machine on Verilog,0,semlee/RISC-V,712080703,SystemVerilog,RISC-V,27,0,2023-10-30 20:07:48+00:00,[],
14461,https://github.com/vajo123/UVM.git,2023-11-03 09:28:39+00:00,,0,vajo123/UVM,713809277,SystemVerilog,UVM,17,0,2023-11-03 09:32:10+00:00,[],
14463,https://github.com/kaveeshwaragayanath/RISCV_Single_Cycle_Processor.git,2023-10-04 13:52:05+00:00,,0,kaveeshwaragayanath/RISCV_Single_Cycle_Processor,700384506,SystemVerilog,RISCV_Single_Cycle_Processor,15856,0,2023-10-05 14:37:35+00:00,[],
14464,https://github.com/nabeel-at-intel/cookbook.git,2023-10-06 04:15:19+00:00,,0,nabeel-at-intel/cookbook,701164362,SystemVerilog,cookbook,61,0,2023-10-06 04:51:38+00:00,[],
14465,https://github.com/al719/UART_RX_UVM.git,2023-10-06 03:44:55+00:00,,0,al719/UART_RX_UVM,701157279,SystemVerilog,UART_RX_UVM,387,0,2023-10-06 04:45:22+00:00,[],
14466,https://github.com/yrraadi-io/time-traveler.git,2023-10-07 17:04:06+00:00,FPGA based stop watch,0,yrraadi-io/time-traveler,701824606,SystemVerilog,time-traveler,1577,0,2023-10-07 17:07:54+00:00,[],
14468,https://github.com/Purdue-SoCET/Phase-Locked-Loop.git,2023-11-07 15:24:43+00:00,,0,Purdue-SoCET/Phase-Locked-Loop,715659869,SystemVerilog,Phase-Locked-Loop,9,0,2023-12-06 18:07:50+00:00,[],
14469,https://github.com/JhnWstbrk/ELC4396_Project.git,2023-10-04 17:28:32+00:00,,0,JhnWstbrk/ELC4396_Project,700487168,SystemVerilog,ELC4396_Project,71358,0,2023-12-10 21:49:53+00:00,[],
14470,https://github.com/NRJaggers/Introduction-to-Hardware-Security.git,2023-10-18 13:30:15+00:00,Repository to store the labs and assignments from Cal Poly SLO EE 426 - Introduction to Hardware Security,0,NRJaggers/Introduction-to-Hardware-Security,706713355,SystemVerilog,Introduction-to-Hardware-Security,23649,0,2023-10-24 07:05:20+00:00,[],
14471,https://github.com/m-haris-n/risc-v-single-cycle-processor.git,2023-10-08 14:57:05+00:00,,0,m-haris-n/risc-v-single-cycle-processor,702120510,SystemVerilog,risc-v-single-cycle-processor,37,0,2023-10-08 14:58:09+00:00,[],
14472,https://github.com/ani171/Single_cycled_RISC-Vprocessor.git,2023-10-09 12:18:33+00:00,,0,ani171/Single_cycled_RISC-Vprocessor,702489765,SystemVerilog,Single_cycled_RISC-Vprocessor,4120,0,2023-12-29 10:29:17+00:00,[],
14473,https://github.com/akashravibhat/Bitonic_sorter.git,2023-10-26 12:28:33+00:00,,1,akashravibhat/Bitonic_sorter,710301478,SystemVerilog,Bitonic_sorter,75,0,2024-03-20 17:38:59+00:00,[],
14474,https://github.com/Zhuang-Alfie/RISC-V-32I.git,2023-11-04 15:11:50+00:00,,0,Zhuang-Alfie/RISC-V-32I,714321856,SystemVerilog,RISC-V-32I,22150,0,2024-04-08 20:49:27+00:00,[],
14475,https://github.com/AdilHydari/Pipelined_RiscV.git,2023-10-31 17:56:26+00:00,,0,AdilHydari/Pipelined_RiscV,712560375,SystemVerilog,Pipelined_RiscV,1259,0,2024-01-23 19:11:32+00:00,[],
14476,https://github.com/Dalekamistoso/mrdofix-sidi-drwh0.git,2023-10-21 15:55:33+00:00,Mister Do Core for Sidi,0,Dalekamistoso/mrdofix-sidi-drwh0,708127726,SystemVerilog,mrdofix-sidi-drwh0,180,0,2023-10-29 14:42:10+00:00,[],
14477,https://github.com/SHAHIDMEHMOODS/git_bash.git,2023-10-21 11:41:48+00:00,,0,SHAHIDMEHMOODS/git_bash,708054628,SystemVerilog,git_bash,4,0,2023-10-21 12:26:29+00:00,[],
14478,https://github.com/Shahiraosama/Verification_Dual_port_RAM.git,2023-10-10 20:24:19+00:00,,0,Shahiraosama/Verification_Dual_port_RAM,703218179,SystemVerilog,Verification_Dual_port_RAM,20,0,2023-10-10 20:26:12+00:00,[],
14479,https://github.com/NoelSengel/Blinking-LED-Core.git,2023-10-07 15:51:05+00:00,Chu's Example 11.9.4 Blinking-LED Core,0,NoelSengel/Blinking-LED-Core,701803404,SystemVerilog,Blinking-LED-Core,18929,0,2023-10-12 02:14:33+00:00,[],
14480,https://github.com/aravChamp/Testbeds.git,2023-10-12 15:11:38+00:00,,0,aravChamp/Testbeds,704116917,SystemVerilog,Testbeds,1042,0,2023-10-12 15:12:59+00:00,[],
14481,https://github.com/Mikey597/VDIC.git,2023-10-14 16:57:14+00:00,,0,Mikey597/VDIC,704971370,SystemVerilog,VDIC,567,0,2023-10-15 21:05:39+00:00,[],
14482,https://github.com/Aleksandra564/VDIC.git,2023-10-14 17:01:14+00:00,VDIC,0,Aleksandra564/VDIC,704972589,SystemVerilog,VDIC,70895,0,2023-10-14 17:16:37+00:00,[],
14483,https://github.com/mohamedelshafie/verifying-uart-using-uvm.git,2023-10-23 22:55:59+00:00,,0,mohamedelshafie/verifying-uart-using-uvm,709049185,SystemVerilog,verifying-uart-using-uvm,42,0,2023-10-26 21:12:03+00:00,[],
14485,https://github.com/Rochan06/ALU-Verification.git,2023-10-06 02:10:36+00:00,,0,Rochan06/ALU-Verification,701136400,SystemVerilog,ALU-Verification,9,0,2024-01-06 20:39:15+00:00,[],
14486,https://github.com/zhouyangye1076/sv_demo.git,2023-11-07 05:39:21+00:00,the demo for sv,0,zhouyangye1076/sv_demo,715424986,SystemVerilog,sv_demo,2,0,2023-11-07 06:02:54+00:00,[],
14487,https://github.com/jbcgames/proyecto-6..git,2023-10-31 02:55:37+00:00,,0,jbcgames/proyecto-6.,712215514,SystemVerilog,proyecto-6.,235660,0,2023-10-31 03:00:33+00:00,[],
14488,https://github.com/gzyIDE/ZYNQ_PL_SDRAM_test.git,2023-11-05 13:26:18+00:00,SDRAM Access test from PL logic,0,gzyIDE/ZYNQ_PL_SDRAM_test,714640615,SystemVerilog,ZYNQ_PL_SDRAM_test,22,0,2023-11-05 13:48:09+00:00,[],
14489,https://github.com/Knightmare-0/System-Verilog.git,2023-10-25 07:35:17+00:00,,1,Knightmare-0/System-Verilog,709685075,SystemVerilog,System-Verilog,665,0,2023-11-06 08:27:10+00:00,[],
14490,https://github.com/AlanChavez150/rtl_prac.git,2023-10-26 02:30:01+00:00,"Random RTL stuff for ""fun""",0,AlanChavez150/rtl_prac,710095910,SystemVerilog,rtl_prac,13,0,2023-10-26 02:31:01+00:00,[],
14491,https://github.com/nikhilreddi/circular_buffer.git,2023-10-28 19:07:11+00:00,,0,nikhilreddi/circular_buffer,711284520,SystemVerilog,circular_buffer,77,0,2023-10-28 19:10:21+00:00,[],
14492,https://github.com/mingkaic1/tt05-stack-machine.git,2023-10-30 23:13:34+00:00,,0,mingkaic1/tt05-stack-machine,712161284,SystemVerilog,tt05-stack-machine,52,0,2023-10-31 06:47:06+00:00,[],https://api.github.com/licenses/apache-2.0
14493,https://github.com/flaviens/verilator-b1.git,2023-11-03 09:41:58+00:00,Reproduce a segmentation fault in the newest Verilator,0,flaviens/verilator-b1,713814666,SystemVerilog,verilator-b1,68,0,2023-11-03 09:42:20+00:00,[],
14494,https://github.com/asinghani/tinyscanchain.git,2023-11-04 05:42:00+00:00,Generating scan chains using <100 lines of Python,0,asinghani/tinyscanchain,714172410,SystemVerilog,tinyscanchain,7,0,2023-11-06 02:55:46+00:00,[],
14495,https://github.com/asinghani/uwuifier-tt05.git,2023-11-04 06:48:49+00:00,,0,asinghani/uwuifier-tt05,714187118,SystemVerilog,uwuifier-tt05,16,0,2023-11-04 06:57:12+00:00,[],https://api.github.com/licenses/apache-2.0
14496,https://github.com/Jachm11/CE4302-Project-II.git,2023-10-12 00:44:23+00:00,Vector Processor,0,Jachm11/CE4302-Project-II,703805358,SystemVerilog,CE4302-Project-II,687352,0,2023-11-22 09:20:57+00:00,[],
14497,https://github.com/joyMidoZ/apb-axi4lite_bridge.git,2023-10-31 12:46:37+00:00,,0,joyMidoZ/apb-axi4lite_bridge,712421164,SystemVerilog,apb-axi4lite_bridge,510,0,2023-11-07 11:17:10+00:00,[],
14498,https://github.com/Ammara-Noor/risc-v-single-cycle-processor.git,2023-10-09 10:28:28+00:00,,0,Ammara-Noor/risc-v-single-cycle-processor,702444509,SystemVerilog,risc-v-single-cycle-processor,13,0,2023-10-13 05:18:04+00:00,[],
14499,https://github.com/Lucario2319/FoosballStars.git,2023-11-01 05:10:31+00:00,This repository contains code for our dld project on a football game made using basys-3 fpga board and vivado,1,Lucario2319/FoosballStars,712744540,SystemVerilog,FoosballStars,205,0,2023-11-30 01:01:07+00:00,[],
14500,https://github.com/GabbedT/ZenithSoC.git,2023-10-31 10:30:57+00:00,General purpose FPGA based System On Chip built around a powerful RISC-V 32 bit CPU.,0,GabbedT/ZenithSoC,712367590,SystemVerilog,ZenithSoC,527,0,2023-10-31 10:33:17+00:00,[],
14501,https://github.com/Mhd-Shah/Verification-of-SPI-communication-protocol.git,2023-10-27 01:38:50+00:00,Verification of spi protocol,0,Mhd-Shah/Verification-of-SPI-communication-protocol,710574385,SystemVerilog,Verification-of-SPI-communication-protocol,161,0,2023-11-16 07:20:55+00:00,"['spi', 'spi-communication', 'spi-master', 'spi-protocol', 'spi-slave', 'systemverilog', 'systemverilog-test-bench', 'verilog', 'verilog-project']",
14502,https://github.com/MinotiKarkhanis/5-Stage-pipeline-MIPS-Lite-Architecture.git,2023-10-25 01:38:46+00:00,Design and Simulation of 5 stage pipeline MIPS LITE Architecture,0,MinotiKarkhanis/5-Stage-pipeline-MIPS-Lite-Architecture,709586670,SystemVerilog,5-Stage-pipeline-MIPS-Lite-Architecture,179,0,2023-10-25 01:50:45+00:00,[],
14503,https://github.com/MahmouodMagdi/Modular-Multiplier.git,2023-10-24 21:17:39+00:00,A System Verilog Design of the Shift-sub Modular Multiplier Algorithm ,0,MahmouodMagdi/Modular-Multiplier,709523884,SystemVerilog,Modular-Multiplier,55,0,2023-10-24 21:25:48+00:00,[],
14504,https://github.com/kele14x/bfp.git,2023-10-28 03:42:08+00:00,BFP compression for O-RAN,0,kele14x/bfp,711043371,SystemVerilog,bfp,52,0,2023-10-28 03:55:13+00:00,[],https://api.github.com/licenses/gpl-3.0
14505,https://github.com/jleugeri/tnt-sparse.git,2023-11-03 05:49:14+00:00,SParse ARray SErializer,0,jleugeri/tnt-sparse,713727425,SystemVerilog,tnt-sparse,36,0,2023-11-04 15:19:16+00:00,[],https://api.github.com/licenses/apache-2.0
14506,https://github.com/agusclap/Arquitectura1.git,2023-10-27 22:16:00+00:00,,0,agusclap/Arquitectura1,710984448,SystemVerilog,Arquitectura1,521,0,2023-10-27 22:17:25+00:00,[],
14507,https://github.com/Saad-emb/Design-and-UVM-Verification-of-ALU.git,2023-10-21 17:43:22+00:00,Design and UVM Verification of ALU,0,Saad-emb/Design-and-UVM-Verification-of-ALU,708159153,SystemVerilog,Design-and-UVM-Verification-of-ALU,1182,0,2023-10-21 17:44:17+00:00,[],
14508,https://github.com/stornado/UVM-Reference-Implementation.git,2023-10-18 15:00:26+00:00,UVM Reference Implementation dowload from https://accellera.org/downloads/standards/uvm,0,stornado/UVM-Reference-Implementation,706757708,SystemVerilog,UVM-Reference-Implementation,5502,0,2023-11-18 15:16:27+00:00,[],https://api.github.com/licenses/apache-2.0
14509,https://github.com/snevindsouza/Counter_with_Parallel_load_SystemVerilog.git,2023-10-06 13:43:58+00:00,An 8-bit counter that counts from 0 to 255 when it is enabled and parallelly loaded. Structural approach is used here and treated as a black box and is verified using OOP based testbench.,0,snevindsouza/Counter_with_Parallel_load_SystemVerilog,701366534,SystemVerilog,Counter_with_Parallel_load_SystemVerilog,17,0,2023-10-21 11:28:30+00:00,"['systemverilog', 'verilog', 'vhdl']",https://api.github.com/licenses/mit
14510,https://github.com/Divya-i/PROJECTS.git,2023-10-14 15:59:08+00:00,,0,Divya-i/PROJECTS,704953985,SystemVerilog,PROJECTS,193,0,2023-10-15 09:27:28+00:00,[],
14511,https://github.com/onionT-312/Quatus_SystemVHDL.git,2023-10-17 11:37:40+00:00,,0,onionT-312/Quatus_SystemVHDL,706141853,SystemVerilog,Quatus_SystemVHDL,4,0,2023-10-17 11:40:42+00:00,[],
14512,https://github.com/Kaweees/OTTER-Reference.git,2023-10-17 00:06:57+00:00,OTTER MCU Reference created by Dr. Joseph Callenes-Sloan,0,Kaweees/OTTER-Reference,705911615,SystemVerilog,OTTER-Reference,29,0,2023-10-24 16:47:26+00:00,[],
14513,https://github.com/mdkane14/ClassReport3.git,2023-10-12 18:38:26+00:00,,0,mdkane14/ClassReport3,704197774,SystemVerilog,ClassReport3,38,0,2023-10-12 18:39:49+00:00,[],
14514,https://github.com/imraghvv/systemVerilog.git,2023-10-18 07:38:03+00:00,,0,imraghvv/systemVerilog,706561944,SystemVerilog,systemVerilog,13,0,2023-10-18 07:44:27+00:00,[],
14515,https://github.com/Shahiraosama/UVM-environment-for-RAM.git,2023-10-22 21:22:29+00:00,,0,Shahiraosama/UVM-environment-for-RAM,708543272,SystemVerilog,UVM-environment-for-RAM,27,0,2023-10-22 21:23:58+00:00,[],
14516,https://github.com/cascade-artifacts-designs/cascade-kronos.git,2023-10-10 13:08:26+00:00,,0,cascade-artifacts-designs/cascade-kronos,703027282,SystemVerilog,cascade-kronos,281,0,2023-10-10 13:18:58+00:00,[],https://api.github.com/licenses/apache-2.0
14517,https://github.com/OutOFServise/pcie_ctl.git,2023-10-16 07:08:00+00:00,Open source code for papers ,0,OutOFServise/pcie_ctl,705518509,SystemVerilog,pcie_ctl,63347,0,2023-10-16 07:24:31+00:00,[],
14518,https://github.com/OSmOlga/systemverilog-homework.git,2023-10-14 19:28:34+00:00,,0,OSmOlga/systemverilog-homework,705012461,SystemVerilog,systemverilog-homework,134,0,2023-10-20 18:04:46+00:00,[],
14519,https://github.com/SungChul-CHA/DigitalClock_Verilog.git,2023-11-07 09:44:02+00:00,,0,SungChul-CHA/DigitalClock_Verilog,715511721,SystemVerilog,DigitalClock_Verilog,49986,0,2023-11-20 03:53:53+00:00,[],
14520,https://github.com/Nitinyk/VendingMachine.git,2023-10-21 08:40:19+00:00,,0,Nitinyk/VendingMachine,708008828,SystemVerilog,VendingMachine,476,0,2023-11-24 12:01:17+00:00,[],
14521,https://github.com/Mateusz-alicante/ECE253.git,2023-10-16 14:25:44+00:00,,0,Mateusz-alicante/ECE253,705701721,SystemVerilog,ECE253,424,0,2023-10-16 14:28:57+00:00,[],
14522,https://github.com/Nanda200/JTAG-UVC-.git,2023-10-30 17:07:15+00:00,JTAG UVC using UVM methodology,0,Nanda200/JTAG-UVC-,712038800,SystemVerilog,JTAG-UVC-,29,0,2023-10-30 17:50:22+00:00,[],
14523,https://github.com/AdanW7/4363-Labs.git,2023-10-12 17:13:48+00:00,,0,AdanW7/4363-Labs,704166488,SystemVerilog,4363-Labs,725,0,2023-12-11 19:58:57+00:00,[],
14524,https://github.com/gaurab1/6205-FencePGA.git,2023-10-30 02:54:25+00:00,This is the final project for 6.205 contributed by Gaurab and Muhender.,0,gaurab1/6205-FencePGA,711715522,SystemVerilog,6205-FencePGA,1146,0,2023-12-14 17:20:39+00:00,[],
14525,https://github.com/Drakonof/hdl.git,2023-10-17 11:00:34+00:00,,0,Drakonof/hdl,706126396,SystemVerilog,hdl,96,0,2023-10-17 11:09:44+00:00,[],
14526,https://github.com/zacky1972/sample_adder.git,2023-10-14 21:15:52+00:00,Sample Adder,0,zacky1972/sample_adder,705038100,SystemVerilog,sample_adder,18,0,2023-10-14 21:40:06+00:00,[],https://api.github.com/licenses/apache-2.0
14527,https://github.com/bumjoooon/chipverify.git,2023-11-02 05:13:29+00:00,testcodes for chipverify,0,bumjoooon/chipverify,713231885,SystemVerilog,chipverify,7,0,2023-11-06 04:04:42+00:00,[],
14528,https://github.com/suryal30103/Digital-Design-of-AlarmClock.git,2023-11-07 03:05:54+00:00,,0,suryal30103/Digital-Design-of-AlarmClock,715384823,SystemVerilog,Digital-Design-of-AlarmClock,448,0,2023-11-07 03:07:02+00:00,[],
14529,https://github.com/Petros-Emmanouilidis/tt05-Petros-Emmanouilidis-tiny-game-of-life.git,2023-10-28 05:28:34+00:00,TT05 Submission,0,Petros-Emmanouilidis/tt05-Petros-Emmanouilidis-tiny-game-of-life,711064055,SystemVerilog,tt05-Petros-Emmanouilidis-tiny-game-of-life,63,0,2023-10-28 05:39:05+00:00,[],https://api.github.com/licenses/apache-2.0
14530,https://github.com/andrewanyu/git_test.git,2023-10-25 02:40:53+00:00,,0,andrewanyu/git_test,709601770,SystemVerilog,git_test,8,0,2023-10-25 02:49:20+00:00,[],
14531,https://github.com/michellavezzo/sap-sv.git,2023-10-24 19:10:13+00:00,"SAP 1 Microprocessor, System Verilog project for STRUCTURED DESIGN OF INTEGRATED CIRCUITS discipline",0,michellavezzo/sap-sv,709461872,SystemVerilog,sap-sv,163,0,2023-10-24 19:11:31+00:00,[],
14532,https://github.com/rishabh4749/SequenceDetector.git,2023-11-04 08:38:28+00:00,Sequence Detector Implementation in Verilog.,0,rishabh4749/SequenceDetector,714212781,SystemVerilog,SequenceDetector,4,0,2023-11-04 08:39:36+00:00,[],
14533,https://github.com/penadavid/SystemVerilog.git,2023-10-16 09:17:45+00:00,,0,penadavid/SystemVerilog,705570338,SystemVerilog,SystemVerilog,2,0,2023-10-16 09:26:22+00:00,[],
14534,https://github.com/EduardoFriesen/proyectoPrueba.git,2023-11-03 14:00:24+00:00,,0,EduardoFriesen/proyectoPrueba,713913411,SystemVerilog,proyectoPrueba,17142,0,2023-11-03 14:02:24+00:00,[],
14535,https://github.com/oga-engineering/codma_fyp_v2.git,2023-10-31 10:21:33+00:00,Pipelined Version of the CODMA FYP,0,oga-engineering/codma_fyp_v2,712363894,SystemVerilog,codma_fyp_v2,697,0,2023-10-31 10:21:47+00:00,[],
14536,https://github.com/bumjoooon/connection_test.git,2023-11-06 09:28:36+00:00,repository for connection test code,0,bumjoooon/connection_test,714999560,SystemVerilog,connection_test,6,0,2023-11-07 03:50:31+00:00,[],
14537,https://github.com/suryal30103/FFVDD-PROJECT.git,2023-10-23 12:42:50+00:00,,0,suryal30103/FFVDD-PROJECT,708808990,SystemVerilog,FFVDD-PROJECT,42,0,2023-10-27 05:04:37+00:00,[],
14538,https://github.com/agcoda/HDL.git,2023-10-21 21:50:55+00:00,Demo of HDL use in SytemVerilog and VHDL,0,agcoda/HDL,708216295,SystemVerilog,HDL,1356,0,2023-11-27 00:06:19+00:00,[],
14539,https://github.com/sauye2/ece385.git,2023-10-07 11:19:57+00:00,ECE 385 - Digital Systems Laboratory,0,sauye2/ece385,701720962,SystemVerilog,ece385,34,0,2023-10-07 11:22:48+00:00,[],
14540,https://github.com/cascade-artifacts-designs/cascade-kronos-k2.git,2023-10-10 13:02:26+00:00,,0,cascade-artifacts-designs/cascade-kronos-k2,703024583,SystemVerilog,cascade-kronos-k2,281,0,2023-10-10 13:02:33+00:00,[],https://api.github.com/licenses/apache-2.0
14541,https://github.com/avaneeshreddy20/axi_uvm.git,2023-10-09 21:05:11+00:00,,0,avaneeshreddy20/axi_uvm,702708102,SystemVerilog,axi_uvm,18,0,2023-10-09 21:07:22+00:00,[],
14542,https://github.com/jigyasasingh14/System-Verilog-by-Jigyasa.git,2023-10-13 14:05:46+00:00,,0,jigyasasingh14/System-Verilog-by-Jigyasa,704555352,SystemVerilog,System-Verilog-by-Jigyasa,31,0,2023-10-13 14:10:02+00:00,[],
14543,https://github.com/Aschwiesow/Project-1.git,2023-10-15 18:26:28+00:00,,0,Aschwiesow/Project-1,705336748,SystemVerilog,Project-1,4,0,2023-10-15 23:59:11+00:00,[],
14544,https://github.com/isharadilshanra/RiscV-singlecycle-cpu.git,2023-10-16 05:53:40+00:00,"a 32-bit non-pipelined RISC-V processor using an FPGA  platform. used Quartus for simulation and design. develop a fully operational RISC-V processor that handle  instruction types such as R, I, S, and SB.  Also included the integration of custom  instructions, MEMCOPY and MUL, designed to augment the processor's functionality",0,isharadilshanra/RiscV-singlecycle-cpu,705493195,SystemVerilog,RiscV-singlecycle-cpu,666,0,2023-10-16 05:54:48+00:00,[],
14545,https://github.com/Vincenzo0709/Progetto_ES.git,2023-10-18 12:32:30+00:00,,0,Vincenzo0709/Progetto_ES,706683759,SystemVerilog,Progetto_ES,10355,0,2023-10-18 13:55:30+00:00,[],
14546,https://github.com/Shripriya-DK/Systemverilog_codes.git,2023-10-19 09:29:34+00:00,,0,Shripriya-DK/Systemverilog_codes,707129863,SystemVerilog,Systemverilog_codes,10,0,2023-10-19 09:36:07+00:00,[],
14547,https://github.com/SamirFrancoHerrera/ProcesadorMonociclo.git,2023-10-20 15:24:16+00:00,,0,SamirFrancoHerrera/ProcesadorMonociclo,707753791,SystemVerilog,ProcesadorMonociclo,82,0,2023-10-20 17:38:00+00:00,[],
14548,https://github.com/miggleliu/SV_Verification.git,2023-10-22 18:24:35+00:00,verification for a couple of DUTs,0,miggleliu/SV_Verification,708497643,SystemVerilog,SV_Verification,35,0,2023-10-22 18:26:55+00:00,[],
14549,https://github.com/snevindsouza/Adder_SystemVerilog.git,2023-10-05 01:05:02+00:00,A single SystemVerilog package with both classes of half as well as full adder is created and tested using the testbench ,0,snevindsouza/Adder_SystemVerilog,700627941,SystemVerilog,Adder_SystemVerilog,6,0,2023-10-21 11:25:00+00:00,"['fpga', 'systemverilog', 'verilog', 'vhdl']",
14550,https://github.com/K1rC0ff/Stream_arbiter_QoS.git,2023-10-08 18:43:36+00:00,,0,K1rC0ff/Stream_arbiter_QoS,702188387,SystemVerilog,Stream_arbiter_QoS,405,0,2023-10-08 19:07:23+00:00,[],
14551,https://github.com/CroosJJSE/UART_Serial_Bus.git,2023-10-09 07:48:42+00:00,,0,CroosJJSE/UART_Serial_Bus,702375210,SystemVerilog,UART_Serial_Bus,3,0,2023-10-09 08:46:48+00:00,[],
14552,https://github.com/humayunsiraj123/altera_univeristy_program.git,2023-10-21 19:38:20+00:00,,0,humayunsiraj123/altera_univeristy_program,708188538,SystemVerilog,altera_univeristy_program,10,0,2023-10-21 19:46:59+00:00,[],
14553,https://github.com/theloni-monk/Bespoke.git,2023-11-05 20:00:08+00:00,Generating bespoke FPGAs for ONNX models,0,theloni-monk/Bespoke,714786458,SystemVerilog,Bespoke,23653,0,2023-12-14 02:42:36+00:00,[],
14554,https://github.com/Harsha642/Four-Port-Switch-Verification.git,2023-11-06 02:35:05+00:00,,0,Harsha642/Four-Port-Switch-Verification,714872629,SystemVerilog,Four-Port-Switch-Verification,3765,0,2023-11-07 00:18:04+00:00,[],
14555,https://github.com/skudlur/bfloat-accel-tt.git,2023-10-07 13:45:29+00:00,BFloat16 IP for Open-MPW Tapeouts,0,skudlur/bfloat-accel-tt,701765121,SystemVerilog,bfloat-accel-tt,227,0,2023-12-19 14:06:50+00:00,[],https://api.github.com/licenses/mit
14556,https://github.com/helcsnewsxd/Laboratorio-ARMv8-en-SystemVerilog---Arquitectura-del-Computador.git,2023-10-14 18:35:12+00:00,,0,helcsnewsxd/Laboratorio-ARMv8-en-SystemVerilog---Arquitectura-del-Computador,704999289,SystemVerilog,Laboratorio-ARMv8-en-SystemVerilog---Arquitectura-del-Computador,2678,0,2023-12-21 15:33:19+00:00,[],https://api.github.com/licenses/mit
14557,https://github.com/tyedwards37/Frequency-Divider.git,2023-10-15 05:29:33+00:00,"The circuit divides the clock frequency by half then in fourths. Meanwhile, the code demonstrates this functionality.",0,tyedwards37/Frequency-Divider,705129341,SystemVerilog,Frequency-Divider,2431,0,2023-12-22 09:33:19+00:00,[],
14558,https://github.com/suriyasaiyan/verilog_dump.git,2023-10-09 23:44:30+00:00,"random verilog modules, just to improve my verification and design skills",0,suriyasaiyan/verilog_dump,702745306,SystemVerilog,verilog_dump,29,0,2024-03-02 15:06:52+00:00,[],
14559,https://github.com/MiIIIa-coder/FPGA-yadro.git,2023-11-05 10:23:51+00:00,,0,MiIIIa-coder/FPGA-yadro,714591101,SystemVerilog,FPGA-yadro,625,0,2023-11-10 23:35:02+00:00,[],
14561,https://github.com/NguyenHaiMinh-UIT/Router.git,2023-10-27 12:29:16+00:00,Router 2x2 ,0,NguyenHaiMinh-UIT/Router,710780888,SystemVerilog,Router,56823,0,2023-10-27 12:33:57+00:00,[],
14562,https://github.com/ismartsid/Systolic_Arrays.git,2023-10-23 17:36:45+00:00,,0,ismartsid/Systolic_Arrays,708942200,SystemVerilog,Systolic_Arrays,57,0,2023-10-23 18:08:53+00:00,[],https://api.github.com/licenses/cern-ohl-w-2.0
14563,https://github.com/gitkiller1024/uvm-1.2.git,2023-10-27 15:17:46+00:00,,0,gitkiller1024/uvm-1.2,710853754,SystemVerilog,uvm-1.2,1026,0,2023-10-27 15:23:28+00:00,[],
14564,https://github.com/Khaled-taher/AES_Project.git,2023-10-07 21:34:07+00:00,,0,Khaled-taher/AES_Project,701889227,SystemVerilog,AES_Project,657,0,2023-10-07 21:37:10+00:00,[],
14565,https://github.com/stphnVi/vsm_digital_design_lab_2023.git,2023-10-27 19:20:53+00:00,,0,stphnVi/vsm_digital_design_lab_2023,710940517,SystemVerilog,vsm_digital_design_lab_2023,1147,0,2023-11-11 05:17:33+00:00,[],
14566,https://github.com/apmaso/560_assignment2.git,2023-10-20 07:40:14+00:00,,0,apmaso/560_assignment2,707572201,SystemVerilog,560_assignment2,1374,0,2023-10-20 07:46:43+00:00,[],
14567,https://github.com/victorcj18/Traffic-Light.git,2023-10-23 20:52:26+00:00,,0,victorcj18/Traffic-Light,709012896,SystemVerilog,Traffic-Light,0,0,2023-10-23 20:52:46+00:00,[],
14568,https://github.com/suseokk/testbench.git,2023-11-03 06:44:17+00:00,,0,suseokk/testbench,713746449,SystemVerilog,testbench,87,0,2023-11-03 08:12:23+00:00,[],
14569,https://github.com/Randallv07/Verificacion.git,2023-10-30 18:46:18+00:00,Proyectos del curso de verificacion,0,Randallv07/Verificacion,712079433,SystemVerilog,Verificacion,2193,0,2023-10-30 18:54:10+00:00,[],
14570,https://github.com/Soleiman-Manteghi/SDF_HLS_Component.git,2023-10-15 08:51:02+00:00,,0,Soleiman-Manteghi/SDF_HLS_Component,705173091,SystemVerilog,SDF_HLS_Component,29652,0,2023-10-15 09:27:50+00:00,[],
14571,https://github.com/imedina04/portfolio.git,2023-10-17 00:09:09+00:00,El repositorio corresponde al portafolio de mi trabajo,0,imedina04/portfolio,705912053,SystemVerilog,portfolio,6684,0,2023-10-24 07:23:13+00:00,[],
14572,https://github.com/althaafsn/Shared-.git,2023-11-04 19:22:38+00:00,,0,althaafsn/Shared-,714394036,SystemVerilog,Shared-,38647,0,2023-11-04 19:25:38+00:00,[],
14573,https://github.com/Henrik07/Temalabor.git,2023-10-13 10:27:30+00:00,,0,Henrik07/Temalabor,704471967,SystemVerilog,Temalabor,117,0,2023-10-25 09:32:47+00:00,[],
14574,https://github.com/MaddieVorhies/ELC5396_FinalProject.git,2023-10-04 01:44:42+00:00,,0,MaddieVorhies/ELC5396_FinalProject,700123091,SystemVerilog,ELC5396_FinalProject,41,0,2023-12-07 00:30:43+00:00,[],
14575,https://github.com/fractal161/frito.git,2023-11-02 00:33:22+00:00,chips,0,fractal161/frito,713157056,SystemVerilog,frito,232,0,2023-11-08 06:41:03+00:00,[],
14576,https://github.com/Jierark/EncryptED.git,2023-10-18 16:51:51+00:00,MIT 6.2050 Final Project,0,Jierark/EncryptED,706808495,SystemVerilog,EncryptED,128,0,2023-11-14 20:38:57+00:00,[],https://api.github.com/licenses/mit
14577,https://github.com/AshwinKTyagi/TinyChip.git,2023-11-05 23:46:14+00:00,141L project,0,AshwinKTyagi/TinyChip,714834836,SystemVerilog,TinyChip,43,0,2023-12-30 04:53:56+00:00,[],
14579,https://github.com/Abdul-muheet-ghani/VGA-controller.git,2023-10-08 08:02:48+00:00,,0,Abdul-muheet-ghani/VGA-controller,702004041,SystemVerilog,VGA-controller,12,0,2023-10-08 08:06:57+00:00,[],
14580,https://github.com/JunzeLi1/simon-says-game.git,2023-10-05 23:35:47+00:00,,0,JunzeLi1/simon-says-game,701103937,SystemVerilog,simon-says-game,73,0,2024-03-08 06:27:04+00:00,[],
14581,https://github.com/madhujithu/system_verilog.git,2023-10-12 15:09:27+00:00,,0,madhujithu/system_verilog,704115941,SystemVerilog,system_verilog,3,0,2023-10-12 15:12:38+00:00,[],
14582,https://github.com/Amruthab12/demo1.git,2023-10-11 18:45:55+00:00,,0,Amruthab12/demo1,703707150,SystemVerilog,demo1,1,0,2023-10-11 18:47:07+00:00,[],
14583,https://github.com/SoHam-56/CPUriscV.git,2023-10-19 14:23:15+00:00,,0,SoHam-56/CPUriscV,707254850,SystemVerilog,CPUriscV,3,0,2023-10-19 14:28:04+00:00,[],
14584,https://github.com/MinotiKarkhanis/Digital-Design-and-Verif-using-System-Verilog.git,2023-10-25 01:01:55+00:00,"Constraints,Coverage and Assertions",0,MinotiKarkhanis/Digital-Design-and-Verif-using-System-Verilog,709577872,SystemVerilog,Digital-Design-and-Verif-using-System-Verilog,21,0,2023-10-25 23:16:44+00:00,[],
14585,https://github.com/janinduleelananda/Pulpissimo-Processor-Design.git,2023-10-04 14:51:26+00:00,This repository contains proposed design changes to pulpissimo processor design and it's implementation on Verilog.,0,janinduleelananda/Pulpissimo-Processor-Design,700413652,SystemVerilog,Pulpissimo-Processor-Design,123,0,2023-10-04 15:05:09+00:00,[],
14586,https://github.com/Xinyan2020/ELEC402.git,2023-10-05 00:17:21+00:00,,0,Xinyan2020/ELEC402,700616841,SystemVerilog,ELEC402,1,0,2023-10-05 00:19:34+00:00,[],
14587,https://github.com/manjeet-singh-048/Switch_design_verification_using_System-Verilog.git,2023-10-10 05:40:30+00:00,"Verification of a Switch Design using System VerilogHere I am creating various components and finally a testcase to verify a SWITCH Design from scratch. This exercise is helpful in learning all the SV concepts needed for making a testbench . Later on, I will add the implementation of the same using UVM",0,manjeet-singh-048/Switch_design_verification_using_System-Verilog,702836078,SystemVerilog,Switch_design_verification_using_System-Verilog,13,0,2023-10-10 05:43:24+00:00,[],
14588,https://github.com/cascade-artifacts-designs/cascade-kronos-k1.git,2023-10-10 13:08:29+00:00,,0,cascade-artifacts-designs/cascade-kronos-k1,703027314,SystemVerilog,cascade-kronos-k1,282,0,2023-10-10 13:19:01+00:00,[],https://api.github.com/licenses/apache-2.0
14589,https://github.com/bienkuba/VDIC.git,2023-10-17 16:43:52+00:00,,0,bienkuba/VDIC,706287529,SystemVerilog,VDIC,4896,0,2023-10-23 10:35:04+00:00,[],
14590,https://github.com/swapnilanand123/UART-Protocol.git,2023-10-27 04:34:03+00:00,,0,swapnilanand123/UART-Protocol,710617304,SystemVerilog,UART-Protocol,12,0,2023-10-27 05:19:32+00:00,[],
14591,https://github.com/EduardoFriesen/ProyectoArqui.git,2023-11-02 21:03:19+00:00,,0,EduardoFriesen/ProyectoArqui,713596302,SystemVerilog,ProyectoArqui,11291,0,2023-11-02 21:07:32+00:00,[],
14592,https://github.com/Bm1997-dev/github_demo.git,2023-10-26 09:37:45+00:00,A simple Demo Repository for Training Purpose,0,Bm1997-dev/github_demo,710233852,SystemVerilog,github_demo,2,0,2023-10-26 10:03:29+00:00,[],
14593,https://github.com/nguyendaithien/PULPISSIMO_EDABK.git,2023-11-01 03:01:43+00:00,,0,nguyendaithien/PULPISSIMO_EDABK,712710075,SystemVerilog,PULPISSIMO_EDABK,3065,0,2023-11-01 04:11:50+00:00,[],
14594,https://github.com/HarveyBridge/uvm_sv_learning.git,2023-11-04 15:16:34+00:00,This is my repository for learning UVM and SV.,0,HarveyBridge/uvm_sv_learning,714323373,SystemVerilog,uvm_sv_learning,1,0,2023-11-04 19:25:46+00:00,[],
14595,https://github.com/audreygao/Barrel-Shifter.git,2023-11-06 15:19:48+00:00,,0,audreygao/Barrel-Shifter,715150277,SystemVerilog,Barrel-Shifter,7,0,2023-11-06 15:25:19+00:00,[],
14596,https://github.com/ramonwirsch/flopoco-operators.git,2023-11-06 12:59:30+00:00,,0,ramonwirsch/flopoco-operators,715085239,SystemVerilog,flopoco-operators,9,0,2023-11-06 12:59:57+00:00,[],
14597,https://github.com/asinghani/tinyscanchain-tt05.git,2023-11-04 05:43:32+00:00,Test project for tinyscanchain on TT05,0,asinghani/tinyscanchain-tt05,714172715,SystemVerilog,tinyscanchain-tt05,14,0,2023-11-06 02:56:00+00:00,[],https://api.github.com/licenses/apache-2.0
14598,https://github.com/subhamball/CORDIC-With-16-Stage-Pipeline.git,2023-10-17 20:24:34+00:00,Designed the architecture of CORDIC with a straightforward implementation that uses a pipeline of 16 stages and fixed-point arithmetic and implemented the digital circuit in Verilog. And developed a test bench to verify the functionality through waveform,0,subhamball/CORDIC-With-16-Stage-Pipeline,706373783,SystemVerilog,CORDIC-With-16-Stage-Pipeline,471,0,2023-11-22 06:31:45+00:00,[],
14599,https://github.com/adharsh10/Elevator_FSM.git,2023-10-19 09:43:59+00:00,Verilog design code and testbench for an elevator design controlled thorugh FSM mechanism. Reports of the coverage adn waveforms are also provided along with the code. ,0,adharsh10/Elevator_FSM,707135352,SystemVerilog,Elevator_FSM,22,0,2023-11-23 13:25:48+00:00,[],
14600,https://github.com/ahmadrmirzaei/Courses.git,2023-10-04 13:30:26+00:00,Courses that I lectured in University of Tehran.,0,ahmadrmirzaei/Courses,700374152,SystemVerilog,Courses,841,0,2023-11-25 09:34:32+00:00,[],
14601,https://github.com/nguyendaithien/ASIC_DOCUMENT.git,2023-10-29 15:20:15+00:00,,0,nguyendaithien/ASIC_DOCUMENT,711538455,SystemVerilog,ASIC_DOCUMENT,65320,0,2023-11-07 10:05:07+00:00,[],
14602,https://github.com/nfrieden25/fpgifa.git,2023-11-06 22:30:02+00:00,,0,nfrieden25/fpgifa,715315229,SystemVerilog,fpgifa,444,0,2023-12-08 04:30:44+00:00,[],
14603,https://github.com/etherblade-net/VIDEO_downscaler_2x2.git,2023-10-28 23:25:10+00:00,VIDEO downscaler 2x2 core (AXI-stream),0,etherblade-net/VIDEO_downscaler_2x2,711333615,SystemVerilog,VIDEO_downscaler_2x2,102,0,2023-10-29 01:04:47+00:00,[],https://api.github.com/licenses/mit
14604,https://github.com/andersontruong/riscv-verilog.git,2023-11-02 21:12:55+00:00,RISC-V super-scalar out-of-order pipelined,0,andersontruong/riscv-verilog,713598995,SystemVerilog,riscv-verilog,65,0,2023-12-17 21:57:42+00:00,[],https://api.github.com/licenses/mit
14605,https://github.com/brieonbread/anglerfish.git,2023-11-03 14:55:34+00:00,Mission: To advance the sport through technology ,0,brieonbread/anglerfish,713937123,SystemVerilog,anglerfish,5770,0,2023-12-01 03:35:52+00:00,[],
14606,https://github.com/sx4n18/bin_ratio_ensemble_SNN_updated.git,2023-11-03 12:15:11+00:00,This is the updated version of the bin ratio ensemble spiking neural network with modified analogue input layer so that the throughput could be increased and save power.,0,sx4n18/bin_ratio_ensemble_SNN_updated,713871580,SystemVerilog,bin_ratio_ensemble_SNN_updated,922,0,2023-11-09 17:18:48+00:00,[],
14607,https://github.com/Chaoyang2007/afifo_uvm.git,2023-11-03 13:05:57+00:00,uvm study,0,Chaoyang2007/afifo_uvm,713890363,SystemVerilog,afifo_uvm,16,0,2024-04-02 08:03:36+00:00,[],
14608,https://github.com/Zozozaza/FFVDD--project.git,2023-10-19 08:55:32+00:00,,0,Zozozaza/FFVDD--project,707116065,SystemVerilog,FFVDD--project,13250,0,2023-11-20 17:28:15+00:00,[],
14609,https://github.com/MatanShemesh10/Cryptographic-Accelerator---SHA-256-Encryption.git,2023-10-13 17:39:46+00:00,,0,MatanShemesh10/Cryptographic-Accelerator---SHA-256-Encryption,704636558,SystemVerilog,Cryptographic-Accelerator---SHA-256-Encryption,13,0,2023-10-13 17:42:56+00:00,[],
14610,https://github.com/MichaelRyan23/10-bit-Processor.git,2023-11-01 19:31:22+00:00,,0,MichaelRyan23/10-bit-Processor,713073150,SystemVerilog,10-bit-Processor,51,0,2023-11-30 01:53:37+00:00,[],
14611,https://github.com/Josechaves19/Quiz-UVM.git,2023-10-19 16:44:22+00:00,,0,Josechaves19/Quiz-UVM,707318531,SystemVerilog,Quiz-UVM,4,0,2023-10-19 16:56:57+00:00,[],
14612,https://github.com/victorcj18/FIR-Filter.git,2023-10-23 20:49:38+00:00,,0,victorcj18/FIR-Filter,709012018,SystemVerilog,FIR-Filter,1,0,2023-10-23 20:51:05+00:00,[],
14613,https://github.com/projectDV/AHB_TB.git,2023-10-25 05:26:47+00:00,This contains all necessary TB files for AHB,0,projectDV/AHB_TB,709642096,SystemVerilog,AHB_TB,14,0,2023-10-25 06:19:05+00:00,[],
14614,https://github.com/luigirinaldi/FlipPong.git,2023-10-25 17:12:43+00:00,,0,luigirinaldi/FlipPong,709928861,SystemVerilog,FlipPong,19696,0,2023-10-31 20:33:42+00:00,[],
14616,https://github.com/ViktorGlogovac/CPUverilog.git,2023-11-01 02:23:28+00:00,,0,ViktorGlogovac/CPUverilog,712701310,SystemVerilog,CPUverilog,575,0,2023-11-01 02:26:12+00:00,[],
14617,https://github.com/gunavant-s/SV-InterProcess-Communication.git,2023-10-09 02:55:53+00:00,Tool used is EDA Playground :: Aldec Riviera Pro 2022.04,0,gunavant-s/SV-InterProcess-Communication,702290654,SystemVerilog,SV-InterProcess-Communication,584,0,2024-01-25 09:06:47+00:00,"['ipc', 'systemverilog', 'mailbox']",
14618,https://github.com/tayyabshaikh/Single-Cycle-Processor.git,2023-11-07 14:13:43+00:00,,0,tayyabshaikh/Single-Cycle-Processor,715625759,SystemVerilog,Single-Cycle-Processor,10805,0,2024-02-28 19:11:57+00:00,[],
14619,https://github.com/zzyyds/Data_Flow_Transition_SCNN_Accelerator.git,2023-10-19 14:01:39+00:00,,0,zzyyds/Data_Flow_Transition_SCNN_Accelerator,707244190,SystemVerilog,Data_Flow_Transition_SCNN_Accelerator,138,0,2023-11-29 16:39:30+00:00,[],
14620,https://github.com/gaph-pucrs/DMNI.git,2023-10-28 20:33:34+00:00,A specialized network interface for NoC-based many-cores,0,gaph-pucrs/DMNI,711304010,SystemVerilog,DMNI,41,0,2023-10-30 19:41:39+00:00,[],
14621,https://github.com/pedrohfmacedo/hardware_project.git,2023-10-07 19:32:38+00:00,,0,pedrohfmacedo/hardware_project,701863886,SystemVerilog,hardware_project,3165,0,2023-10-07 19:40:27+00:00,[],
14622,https://github.com/sneavem/lrpt_decoder.git,2023-10-29 21:24:06+00:00,,0,sneavem/lrpt_decoder,711636979,SystemVerilog,lrpt_decoder,135,0,2024-04-11 17:10:58+00:00,[],
14623,https://github.com/dineshannayya/openframe_riscduino_dcore.git,2023-10-14 17:16:56+00:00,,0,dineshannayya/openframe_riscduino_dcore,704977232,SystemVerilog,openframe_riscduino_dcore,478668,0,2023-11-02 03:06:28+00:00,[],https://api.github.com/licenses/apache-2.0
14624,https://github.com/chmunozpardo/ALMA-NEW-MUX.git,2023-10-08 15:58:21+00:00,,0,chmunozpardo/ALMA-NEW-MUX,702138976,SystemVerilog,ALMA-NEW-MUX,61,0,2023-10-08 16:02:18+00:00,[],
14625,https://github.com/dhanvi6/ffvdd.git,2023-10-26 04:58:11+00:00,,0,dhanvi6/ffvdd,710133986,SystemVerilog,ffvdd,16,0,2023-11-24 13:44:10+00:00,[],
14627,https://github.com/2023-Fall-ECE4278/lab5.git,2023-10-04 02:48:01+00:00,Coverage,0,2023-Fall-ECE4278/lab5,700139282,SystemVerilog,lab5,12,0,2023-10-05 06:33:06+00:00,[],
14628,https://github.com/RehanEjaz/Vector-Register-FIle.git,2023-10-15 10:23:48+00:00,,0,RehanEjaz/Vector-Register-FIle,705196029,SystemVerilog,Vector-Register-FIle,197,0,2023-11-27 12:43:11+00:00,[],
14629,https://github.com/AwaisDar1/RISC_V_Single_Cycle_Processor.git,2023-10-26 17:57:04+00:00,,0,AwaisDar1/RISC_V_Single_Cycle_Processor,710447589,SystemVerilog,RISC_V_Single_Cycle_Processor,312,0,2023-10-26 17:58:52+00:00,[],
14631,https://github.com/frahergeorge/FSM_Vending.git,2023-10-05 18:49:08+00:00,A FSM that takes in one of 4 values and changes states based off the input and the previous states,0,frahergeorge/FSM_Vending,701022474,SystemVerilog,FSM_Vending,21,0,2023-10-05 20:27:05+00:00,[],
14632,https://github.com/sandeepa0105/Single_Cycle_RISC-V_Processor.git,2023-10-13 06:16:09+00:00,,0,sandeepa0105/Single_Cycle_RISC-V_Processor,704378486,SystemVerilog,Single_Cycle_RISC-V_Processor,876,0,2023-10-13 06:21:29+00:00,[],
14633,https://github.com/SuperTails/tt-tetris.git,2023-10-23 23:05:36+00:00,Tetris implemented entirely in hardware,0,SuperTails/tt-tetris,709051423,SystemVerilog,tt-tetris,57,0,2023-10-23 23:22:48+00:00,[],https://api.github.com/licenses/apache-2.0
14634,https://github.com/jreydman/tpks-labs.git,2023-10-25 15:03:35+00:00,Технологии проектирования компьютерных систем,0,jreydman/tpks-labs,709872222,SystemVerilog,tpks-labs,443,0,2023-10-25 15:31:01+00:00,[],
14635,https://github.com/kupradzeg/picoMIPS.git,2023-11-01 13:01:36+00:00,,0,kupradzeg/picoMIPS,712907721,SystemVerilog,picoMIPS,489,0,2023-11-01 13:08:51+00:00,[],
14636,https://github.com/nikita69312/SystemVerilog.git,2023-10-17 10:54:05+00:00,,0,nikita69312/SystemVerilog,706123852,SystemVerilog,SystemVerilog,11354,0,2023-10-22 21:58:08+00:00,[],
14637,https://github.com/YMCK0528/IC-Design-Contest.git,2023-10-17 13:36:07+00:00,2020,0,YMCK0528/IC-Design-Contest,706194748,SystemVerilog,IC-Design-Contest,7,0,2023-10-17 13:37:33+00:00,[],
14638,https://github.com/Owlina/intern_task_syntacore.git,2023-10-17 17:06:11+00:00,Тестовое задание на стажировку.,1,Owlina/intern_task_syntacore,706297002,SystemVerilog,intern_task_syntacore,164,0,2023-10-17 17:06:20+00:00,[],
14639,https://github.com/KnowAashish/SystemVerilog-Design_Verification_of_DFF.git,2023-10-11 19:26:23+00:00,This repository contains detailed RTL design and TB verification of a D Flip-Flop.,0,KnowAashish/SystemVerilog-Design_Verification_of_DFF,703721953,SystemVerilog,SystemVerilog-Design_Verification_of_DFF,24,0,2023-10-11 20:39:25+00:00,[],
14640,https://github.com/prospersu/elec.git,2023-10-09 14:23:01+00:00,,0,prospersu/elec,702548542,SystemVerilog,elec,2275,0,2023-10-09 14:35:51+00:00,[],
14641,https://github.com/gaph-pucrs/RingBuffer.git,2023-10-09 17:07:05+00:00,,0,gaph-pucrs/RingBuffer,702624388,SystemVerilog,RingBuffer,1,0,2023-10-09 17:07:59+00:00,[],
14642,https://github.com/mahendraVamshi/Gojo.git,2023-10-05 17:32:10+00:00,Single cycle RISC-V processor supporting IMF extension,0,mahendraVamshi/Gojo,700992851,SystemVerilog,Gojo,15,0,2023-11-08 13:51:38+00:00,[],
14643,https://github.com/ozanyrtsever/JenkinsRTLExample.git,2023-11-05 09:52:31+00:00,,0,ozanyrtsever/JenkinsRTLExample,714583846,SystemVerilog,JenkinsRTLExample,0,0,2023-11-05 13:12:07+00:00,[],
14644,https://github.com/Drakonof/ip_repo.git,2023-10-27 08:01:33+00:00,,0,Drakonof/ip_repo,710681626,SystemVerilog,ip_repo,115,0,2023-11-20 12:04:34+00:00,[],
14645,https://github.com/RaviduHM99/RoXXon-SIMD-Processor.git,2023-10-18 14:24:20+00:00,,0,RaviduHM99/RoXXon-SIMD-Processor,706739838,SystemVerilog,RoXXon-SIMD-Processor,143,0,2023-12-29 05:07:37+00:00,[],
14646,https://github.com/tms4517/2D-Systolic-Array-Multiplier.git,2023-10-28 09:54:39+00:00,2D Systolic Array Multiplier,0,tms4517/2D-Systolic-Array-Multiplier,711128833,SystemVerilog,2D-Systolic-Array-Multiplier,251,0,2023-11-28 09:20:12+00:00,"['array', 'matrix-multiplication', 'systolic', 'tpu']",https://api.github.com/licenses/mit
14647,https://github.com/Mujtabadar537/UVM-verification.git,2023-10-16 12:08:49+00:00,,0,Mujtabadar537/UVM-verification,705638404,SystemVerilog,UVM-verification,752,0,2023-10-16 12:20:02+00:00,[],
14648,https://github.com/AaranP/ARC-4-Decryption.git,2023-10-12 20:12:36+00:00,,0,AaranP/ARC-4-Decryption,704228569,SystemVerilog,ARC-4-Decryption,1244,0,2024-02-19 22:43:07+00:00,[],
14649,https://github.com/vasanza/SystemVerilog.git,2023-10-19 21:30:38+00:00,,0,vasanza/SystemVerilog,707420401,SystemVerilog,SystemVerilog,1107,0,2023-10-24 02:41:39+00:00,[],
14650,https://github.com/xyuanx0223/Hardware_Design.git,2023-11-06 14:24:03+00:00,,0,xyuanx0223/Hardware_Design,715123979,SystemVerilog,Hardware_Design,241,0,2024-04-12 04:52:00+00:00,[],
14651,https://github.com/AsFigo/apb_uvc_verilator.git,2023-11-19 16:20:14+00:00,APB UVC ported to Verilator,3,AsFigo/apb_uvc_verilator,720795855,SystemVerilog,apb_uvc_verilator,36,11,2024-01-24 02:12:03+00:00,[],https://api.github.com/licenses/gpl-3.0
14652,https://github.com/iammituraj/pequeno_riscv.git,2023-12-08 22:22:43+00:00,Pequeno aka pqr5 is a 5-stage pipelined in-order RISC-V CPU Core compliant with RV32I,1,iammituraj/pequeno_riscv,729319584,SystemVerilog,pequeno_riscv,24,11,2024-04-06 06:59:08+00:00,"['cpu', 'risc-v', 'rtl', 'system-verilog']",https://api.github.com/licenses/mit
14653,https://github.com/The-OpenROAD-Project/megaboom.git,2023-12-13 21:04:40+00:00,,3,The-OpenROAD-Project/megaboom,731332420,SystemVerilog,megaboom,5263,10,2024-04-10 07:24:32+00:00,[],https://api.github.com/licenses/bsd-3-clause
14654,https://github.com/RndMnkIII/PocketAlphaMission.git,2023-11-12 19:53:58+00:00,SNK ASO/Alpha Mission gateware IP Core,0,RndMnkIII/PocketAlphaMission,717853037,SystemVerilog,PocketAlphaMission,10799,8,2023-11-17 20:37:45+00:00,[],https://api.github.com/licenses/gpl-3.0
14655,https://github.com/SahilPrabhu/RippleCarryAdder.git,2023-11-25 13:22:36+00:00,Project For Computer Aided Digital Design Course - UE22EC252A,0,SahilPrabhu/RippleCarryAdder,723375312,SystemVerilog,RippleCarryAdder,1244,6,2023-11-26 05:39:20+00:00,[],
14656,https://github.com/BigPig-Bro/Encoder_JPEG.git,2023-12-08 09:20:04+00:00,在FPGA端实现JPEG编码（开发中……,0,BigPig-Bro/Encoder_JPEG,729041824,SystemVerilog,Encoder_JPEG,7853,6,2024-03-15 11:52:50+00:00,[],
14657,https://github.com/nivag8899/HUST-Interface-Technology.git,2023-11-12 07:48:28+00:00,华中科技大学2021级计算机学院接口技术,0,nivag8899/HUST-Interface-Technology,717675026,SystemVerilog,HUST-Interface-Technology,35334,4,2024-03-15 12:27:45+00:00,[],
14658,https://github.com/yigitbektasgursoy/2x2-Filter-Convolution-in-SystemVerilog.git,2023-11-22 15:39:50+00:00,Kernel Image Convolution using SystemVerilog,0,yigitbektasgursoy/2x2-Filter-Convolution-in-SystemVerilog,722174857,SystemVerilog,2x2-Filter-Convolution-in-SystemVerilog,21,3,2024-02-23 18:22:39+00:00,[],
14659,https://github.com/pulp-platform/pulp-ethernet.git,2023-11-30 11:38:47+00:00,,0,pulp-platform/pulp-ethernet,725552140,SystemVerilog,pulp-ethernet,32180,3,2024-02-26 17:38:06+00:00,[],
14660,https://github.com/Kholoud-Ebrahim/I2C_Master.git,2023-12-07 03:12:48+00:00,Implementation and Functional Verification of I2C Master using UVM methodology. ,1,Kholoud-Ebrahim/I2C_Master,728483231,SystemVerilog,I2C_Master,442,3,2023-12-28 08:45:28+00:00,[],
14661,https://github.com/FabulousMatin/CAD.git,2023-11-15 17:01:08+00:00,"Hardware design of simple neural networks such as maxnet and CNN, and re-designing a NN with Actel FPGA architecture",0,FabulousMatin/CAD,719199037,SystemVerilog,CAD,24274,3,2024-02-16 07:32:29+00:00,[],
14662,https://github.com/tonmoy18/aoc-verilog.git,2023-12-02 21:12:47+00:00,,0,tonmoy18/aoc-verilog,726605303,SystemVerilog,aoc-verilog,66,3,2024-04-01 05:49:26+00:00,[],https://api.github.com/licenses/mit
14663,https://github.com/Kholoud-Ebrahim/SPI_Protocol.git,2023-12-09 00:31:51+00:00,UVM based Verification of SPI_Protocol. A Serial intra System Communication Peripheral Protocol.,0,Kholoud-Ebrahim/SPI_Protocol,729344526,SystemVerilog,SPI_Protocol,454,3,2023-12-28 08:45:29+00:00,[],
14664,https://github.com/wele0612/Kaiserlake.git,2023-11-30 05:25:21+00:00,"A pipelined, superscalar processor with UBC CPEN211 Simple-Risc-Machine ISA  |  使用UBC CPEN211 Simple-Risc-Machine指令集的超标量流水线CPU",0,wele0612/Kaiserlake,725422400,SystemVerilog,Kaiserlake,80,3,2024-02-25 23:28:46+00:00,[],
14665,https://github.com/Aquaticfuller/OpenExSys_NoC.git,2023-11-26 14:04:44+00:00,OpenExSys_NoC a mesh-based network on chip IP.,0,Aquaticfuller/OpenExSys_NoC,723701155,SystemVerilog,OpenExSys_NoC,291,3,2024-03-13 17:36:48+00:00,[],https://api.github.com/licenses/bsd-3-clause
14666,https://github.com/sirampy/Team22.git,2023-11-17 10:11:21+00:00,A systemverilog implementation of a RiskV CPU,0,sirampy/Team22,719979129,SystemVerilog,Team22,9442,2,2024-04-08 14:58:16+00:00,[],
14667,https://github.com/Fraunhofer-AISEC/otbn-pq.git,2023-12-11 09:32:29+00:00,,1,Fraunhofer-AISEC/otbn-pq,730136010,SystemVerilog,otbn-pq,649,2,2024-02-13 16:56:25+00:00,[],https://api.github.com/licenses/apache-2.0
14668,https://github.com/sparshgup/ComputerArchitecture.git,2023-11-14 07:13:11+00:00,Impletations of Computer Architecture components and RISC-V CPU (SystemVerilog),0,sparshgup/ComputerArchitecture,718485195,SystemVerilog,ComputerArchitecture,4118,2,2023-12-03 22:39:55+00:00,"['computer-architecture', 'systemverilog', 'risc-v']",https://api.github.com/licenses/mit
14669,https://github.com/manopers47/riscvCpu.git,2023-11-13 16:23:19+00:00,A keep it simple (and stupid) version of RISC-V implementation in RTL and simulation using Verilator,0,manopers47/riscvCpu,718219573,SystemVerilog,riscvCpu,37,2,2023-11-21 09:18:41+00:00,[],https://api.github.com/licenses/gpl-3.0
14670,https://github.com/kitune-san/KFPCJr.git,2023-11-13 14:44:09+00:00,[WIP] PoC,0,kitune-san/KFPCJr,718177460,SystemVerilog,KFPCJr,36,2,2024-01-17 08:06:07+00:00,"['pcjr', 'verilog', 'fpga']",https://api.github.com/licenses/mit
14671,https://github.com/andreemedeiros/Huffman-UVM.git,2023-12-15 17:50:47+00:00,Projeto de verificação UVM para um RTL de Decodificador de Huffman.,0,andreemedeiros/Huffman-UVM,732124947,SystemVerilog,Huffman-UVM,83,2,2024-01-25 00:42:21+00:00,"['huffman-algorithm', 'systemverilog', 'uvm']",https://api.github.com/licenses/mit
14672,https://github.com/gopidontagani/Systemverilog_constraints.git,2023-11-12 02:01:24+00:00,,0,gopidontagani/Systemverilog_constraints,717612537,SystemVerilog,Systemverilog_constraints,221,2,2023-11-26 13:16:32+00:00,[],
14673,https://github.com/calewoodward/ro-spa-attack.git,2023-12-02 03:10:08+00:00,"Simple Power Analysis attack targeting RSA cryptomodule using ring oscillator programmed on Arria10 FPGA. Implementation of the paper ""FPGA-Based Remote Power Side-Channel Attacks"" by M. Zhao and G. Suh. ",0,calewoodward/ro-spa-attack,726317829,SystemVerilog,ro-spa-attack,286993,2,2024-04-11 17:57:52+00:00,[],https://api.github.com/licenses/gpl-3.0
14674,https://github.com/Carl7yan/ahb-gpio.git,2023-11-25 08:36:48+00:00,,0,Carl7yan/ahb-gpio,723304928,SystemVerilog,ahb-gpio,1050,2,2024-04-02 12:39:25+00:00,[],
14675,https://github.com/davenardella/Arduino-FPGA.git,2023-11-20 17:05:50+00:00,Communication driver to exchange data between Arduino and an FPGA using SPI,0,davenardella/Arduino-FPGA,721252498,SystemVerilog,Arduino-FPGA,2344,2,2023-12-17 11:06:10+00:00,[],https://api.github.com/licenses/mit
14676,https://github.com/Undec1ded/FPGA-create-unravel-music-with-pmod-da2.git,2023-11-24 11:56:57+00:00,,0,Undec1ded/FPGA-create-unravel-music-with-pmod-da2,722981138,SystemVerilog,FPGA-create-unravel-music-with-pmod-da2,151,2,2023-12-01 16:18:37+00:00,[],
14677,https://github.com/ahmedsherif99/picoMIPS-Implementation-for-an-Affine-Transformation-Algorithm.git,2023-11-21 09:40:52+00:00,,0,ahmedsherif99/picoMIPS-Implementation-for-an-Affine-Transformation-Algorithm,721548188,SystemVerilog,picoMIPS-Implementation-for-an-Affine-Transformation-Algorithm,8968,2,2024-03-26 17:16:21+00:00,[],
14678,https://github.com/Mhd-Shah/Verification-of-D--flipflop-using-UVM.git,2023-11-19 00:55:37+00:00,Verification of D-FF using UVM on EDA playground,0,Mhd-Shah/Verification-of-D--flipflop-using-UVM,720597039,SystemVerilog,Verification-of-D--flipflop-using-UVM,93,2,2024-03-09 19:19:33+00:00,"['dflipflop', 'rtl-design', 'systemverilog', 'uvm-verification', 'verilog', 'verilog-hdl']",
14679,https://github.com/verification-explorer/sample_and_hold.git,2023-11-14 10:42:51+00:00,Fully differential sample and hold circuit,0,verification-explorer/sample_and_hold,718561951,SystemVerilog,sample_and_hold,8,2,2023-11-21 09:19:14+00:00,[],
14680,https://github.com/NikhilMukraj/spiking-neural-networks-hardware.git,2023-11-27 21:15:20+00:00,An FPGA design for simulating biological neurons,0,NikhilMukraj/spiking-neural-networks-hardware,724325411,SystemVerilog,spiking-neural-networks-hardware,408,2,2024-04-07 06:17:58+00:00,"['biological-neurons', 'fpga-accelerator', 'izhikevich-neurons', 'neural-network', 'systemverilog-hdl', 'verilog-project', 'computational-biology']",
14681,https://github.com/Aquaticfuller/OpenExSys_CoherentCache.git,2023-11-26 23:40:30+00:00,OpenExSys_CoherentCache a directory-based MESI protocol coherent cache IP.,0,Aquaticfuller/OpenExSys_CoherentCache,723868785,SystemVerilog,OpenExSys_CoherentCache,1716,2,2024-03-13 17:36:16+00:00,[],https://api.github.com/licenses/bsd-3-clause
14682,https://github.com/asimkhan8107/Counter-FC.git,2023-12-04 14:00:32+00:00,,0,asimkhan8107/Counter-FC,727257331,SystemVerilog,Counter-FC,3,2,2024-03-24 15:53:32+00:00,[],
14683,https://github.com/kreon/zybo_vga_out.git,2023-11-19 07:49:51+00:00,Digilent Zybo (version B.4) VGA OUT dynamic (moving point) frame generation Xilinx Vivado 2023.2,0,kreon/zybo_vga_out,720669643,SystemVerilog,zybo_vga_out,1772,1,2023-11-20 06:22:29+00:00,[],https://api.github.com/licenses/gpl-3.0
14684,https://github.com/mgwang37/fp32_multi.git,2023-11-16 15:00:09+00:00,符合IEEE-754标准的fp32浮点乘法器(四级流水),0,mgwang37/fp32_multi,719623353,SystemVerilog,fp32_multi,21,1,2023-11-24 14:35:44+00:00,[],https://api.github.com/licenses/gpl-3.0
14685,https://github.com/Carl7yan/synopsys_uvm_lab.git,2023-11-25 07:27:47+00:00,,0,Carl7yan/synopsys_uvm_lab,723289357,SystemVerilog,synopsys_uvm_lab,235,1,2023-11-25 08:18:51+00:00,[],
14686,https://github.com/Arc-Cloud/Team04-RISCV-Proj.git,2023-11-23 09:19:42+00:00,Repo for IAC autumn RISCV project,1,Arc-Cloud/Team04-RISCV-Proj,722495409,SystemVerilog,Team04-RISCV-Proj,7337,1,2024-01-31 14:38:33+00:00,[],
14687,https://github.com/ashwinkumar-sivakumar/msd_project_group_6_fall23.git,2023-11-09 23:39:26+00:00,Simulation of the scheduler portion of a memory controller capable serving a 12-core 4.8 GHz processor employing a single 16GB PC5- 38400 DIMM,1,ashwinkumar-sivakumar/msd_project_group_6_fall23,716813913,SystemVerilog,msd_project_group_6_fall23,1937,1,2024-03-21 23:54:45+00:00,[],
14688,https://github.com/ahmedsherif99/Bus-Arbiter-Systemverilog-module-with-Formal-Verification-SVA-on-OneSpin.git,2023-12-12 12:32:54+00:00,,0,ahmedsherif99/Bus-Arbiter-Systemverilog-module-with-Formal-Verification-SVA-on-OneSpin,730672135,SystemVerilog,Bus-Arbiter-Systemverilog-module-with-Formal-Verification-SVA-on-OneSpin,87,1,2024-03-29 02:41:57+00:00,[],
14689,https://github.com/vlsi-land/simpledsp.git,2023-11-10 12:38:06+00:00,Simple Arithmetic Logic Pipleline Unit,0,vlsi-land/simpledsp,717045068,SystemVerilog,simpledsp,151,1,2023-11-24 05:27:57+00:00,[],
14690,https://github.com/Carl7yan/apb-wdg.git,2023-11-25 08:41:18+00:00,,0,Carl7yan/apb-wdg,723305897,SystemVerilog,apb-wdg,1141,1,2023-11-25 08:44:31+00:00,[],
14691,https://github.com/jakujobi/BitBlaster_10bit_with_RAM.git,2023-12-02 22:50:14+00:00,,0,jakujobi/BitBlaster_10bit_with_RAM,726631176,SystemVerilog,BitBlaster_10bit_with_RAM,40692,1,2024-02-14 18:35:00+00:00,[],https://api.github.com/licenses/gpl-3.0
14692,https://github.com/chms7/k423.git,2023-11-08 12:33:57+00:00,A RISC-V core,0,chms7/k423,716090163,SystemVerilog,k423,2373,1,2024-03-18 08:41:52+00:00,[],
14693,https://github.com/salunkead/SystemVerilog-Basics.git,2023-11-08 09:12:46+00:00,"In this repository, I have covered the basics of SytemVerilog.",0,salunkead/SystemVerilog-Basics,715999216,SystemVerilog,SystemVerilog-Basics,139,1,2023-12-26 11:40:40+00:00,[],
14694,https://github.com/Nonobari/ascon128.git,2023-11-22 08:36:51+00:00,SystemVerilog development of ASCON128 cryptograpic function,0,Nonobari/ascon128,722006107,SystemVerilog,ascon128,1033,1,2024-03-27 07:57:15+00:00,[],
14695,https://github.com/lightcharm/RISC-V-CPU.git,2023-12-09 18:42:55+00:00,processor with RISC-V architecture,0,lightcharm/RISC-V-CPU,729602244,SystemVerilog,RISC-V-CPU,180,1,2024-04-04 00:14:47+00:00,[],https://api.github.com/licenses/gpl-3.0
14696,https://github.com/mohamedhazem511/verification_of_alu_using_SV.git,2023-12-12 00:10:05+00:00,verification of alu using system verilog,0,mohamedhazem511/verification_of_alu_using_SV,730445603,SystemVerilog,verification_of_alu_using_SV,372,1,2023-12-12 00:19:42+00:00,[],
14697,https://github.com/HocJ2me/LED-Blink-Verilog-PYNQ-Z2.git,2023-12-05 15:16:56+00:00,Blink Leds and simple pulse wave modulation on Pynq-Z2 board,0,HocJ2me/LED-Blink-Verilog-PYNQ-Z2,727787105,SystemVerilog,LED-Blink-Verilog-PYNQ-Z2,680,1,2023-12-20 07:42:33+00:00,[],
14698,https://github.com/bLeadDev/systemVerilog.git,2023-11-10 09:25:55+00:00,,0,bLeadDev/systemVerilog,716976828,SystemVerilog,systemVerilog,51571,1,2024-01-11 18:14:48+00:00,[],
14700,https://github.com/salunkead/UVM-Basics-Example.git,2023-12-07 11:53:08+00:00,,0,salunkead/UVM-Basics-Example,728649690,SystemVerilog,UVM-Basics-Example,210,1,2023-12-26 11:40:35+00:00,[],
14701,https://github.com/MihaiRazvanIonut/Single_Cycle_MIPS.git,2023-11-08 07:31:02+00:00,Project made for AMD Autumn Practice 2023,0,MihaiRazvanIonut/Single_Cycle_MIPS,715962324,SystemVerilog,Single_Cycle_MIPS,5,1,2023-11-08 07:38:07+00:00,[],
14702,https://github.com/mrincognito01/Counters.git,2023-12-16 10:36:43+00:00,,0,mrincognito01/Counters,732335162,SystemVerilog,Counters,1,1,2023-12-16 10:52:11+00:00,[],
14703,https://github.com/bhuiyah/lc3sv.git,2023-12-14 18:43:17+00:00,Simulation of LC3 CPU in SystemVerilog,0,bhuiyah/lc3sv,731732160,SystemVerilog,lc3sv,583,1,2024-01-06 18:59:50+00:00,[],
14704,https://github.com/Bennybenassius/RV32I-Team15.git,2023-11-28 14:57:06+00:00,,0,Bennybenassius/RV32I-Team15,724670762,SystemVerilog,RV32I-Team15,18483,1,2024-02-19 13:53:15+00:00,[],
14706,https://github.com/gfwozniak/nes.git,2023-11-25 00:31:48+00:00,,0,gfwozniak/nes,723212184,SystemVerilog,nes,30288,1,2023-12-24 21:19:19+00:00,[],
14707,https://github.com/monistode/ISA_stack.git,2023-11-26 10:03:35+00:00,An implementation of the RISC stack ISA spec from ISA-docs,0,monistode/ISA_stack,723638049,SystemVerilog,ISA_stack,20631,1,2023-11-29 08:14:43+00:00,"['cpu', 'fpga-soc', 'systemverilog']",
14708,https://github.com/mohamedtarek54/SPI_UVM.git,2023-12-07 15:41:42+00:00,UVM-Based verification environment to verify SPI module,0,mohamedtarek54/SPI_UVM,728742766,SystemVerilog,SPI_UVM,24,1,2023-12-17 12:09:45+00:00,[],
14709,https://github.com/shalikadulaj/Design-and-Implementation-of-a-Processor-Core.git,2023-11-19 03:23:54+00:00,test1,0,shalikadulaj/Design-and-Implementation-of-a-Processor-Core,720620581,SystemVerilog,Design-and-Implementation-of-a-Processor-Core,238,1,2024-01-15 00:28:11+00:00,[],
14711,https://github.com/AhsanAliUet/pak-dsp.git,2023-11-09 16:36:32+00:00,Application class Digital Signal Processor that can be used in Signal Conditioning and Image Processing applications.,0,AhsanAliUet/pak-dsp,716680226,SystemVerilog,pak-dsp,74599,1,2023-12-16 10:51:54+00:00,[],
14712,https://github.com/Kholoud-Ebrahim/ALU.git,2023-11-29 15:03:07+00:00,"Verification of ALU using System Verilog, The 1st project for ITI 3 Months Digital Verification Track.",0,Kholoud-Ebrahim/ALU,725159726,SystemVerilog,ALU,108,1,2023-12-26 01:19:44+00:00,[],
14713,https://github.com/MaxWei250/aes_fpga.git,2023-12-12 13:17:14+00:00,,0,MaxWei250/aes_fpga,730689964,SystemVerilog,aes_fpga,39,1,2024-02-22 13:31:39+00:00,[],
14714,https://github.com/ManishPillai7/50-days-of-RTL.git,2023-11-09 06:03:42+00:00,Started from 9th of November 2023,0,ManishPillai7/50-days-of-RTL,716434557,SystemVerilog,50-days-of-RTL,150,1,2024-03-11 14:16:15+00:00,[],
14715,https://github.com/SSJ2085/SPI-VIP.git,2023-11-21 06:45:03+00:00,,0,SSJ2085/SPI-VIP,721483785,SystemVerilog,SPI-VIP,340,1,2023-11-21 07:45:57+00:00,[],
14716,https://github.com/1Abdulbasith/Abduls-front-end-project.git,2023-12-04 22:01:45+00:00,,0,1Abdulbasith/Abduls-front-end-project,727447080,SystemVerilog,Abduls-front-end-project,4151,1,2023-12-04 23:03:39+00:00,[],
14717,https://github.com/Robertwilcox/540_final_project.git,2023-11-22 19:24:03+00:00,,1,Robertwilcox/540_final_project,722267921,SystemVerilog,540_final_project,309661,1,2023-12-08 07:15:49+00:00,[],
14718,https://github.com/Engineer-Ayesha-Shafique/RISC-V-Pipelined-Processor-with-CSR.git,2023-12-06 16:17:02+00:00,,0,Engineer-Ayesha-Shafique/RISC-V-Pipelined-Processor-with-CSR,728289282,SystemVerilog,RISC-V-Pipelined-Processor-with-CSR,13390,1,2024-01-07 12:57:58+00:00,[],
14719,https://github.com/Devil-SX/Transformer_Accelerator.git,2023-11-08 07:56:02+00:00,,0,Devil-SX/Transformer_Accelerator,715971264,SystemVerilog,Transformer_Accelerator,57,1,2024-01-31 17:27:56+00:00,[],
14720,https://github.com/Ammar-Bin-Amir/SystemVerilog_Practice.git,2023-12-12 14:33:29+00:00,Practice Codes of SystemVerilog Language,0,Ammar-Bin-Amir/SystemVerilog_Practice,730723172,SystemVerilog,SystemVerilog_Practice,46,1,2024-03-02 06:26:41+00:00,"['systemverilog', 'vivado-simulator', 'vscode']",
14721,https://github.com/oskarwires/uart2.git,2023-12-16 19:15:03+00:00,SystemVerilog UART transciever,0,oskarwires/uart2,732467790,SystemVerilog,uart2,93,1,2024-02-04 17:12:40+00:00,"['systemverilog', 'uart-receiver', 'uart-transmitter', 'fpga']",https://api.github.com/licenses/gpl-3.0
14722,https://github.com/fpgarevolution/FlyingCubes3D.git,2023-12-14 14:50:48+00:00,,1,fpgarevolution/FlyingCubes3D,731647251,SystemVerilog,FlyingCubes3D,35,1,2024-03-15 06:06:13+00:00,[],https://api.github.com/licenses/mit
14723,https://github.com/daniel-sudz/comparch.git,2023-12-11 03:32:03+00:00,,0,daniel-sudz/comparch,730028903,SystemVerilog,comparch,519,1,2023-12-14 21:29:58+00:00,[],
14724,https://github.com/ahmedsherif99/High-Level-Synthesis-on-a-FFT-Butterfly-Algorithm.git,2023-11-21 08:40:42+00:00,,0,ahmedsherif99/High-Level-Synthesis-on-a-FFT-Butterfly-Algorithm,721524571,SystemVerilog,High-Level-Synthesis-on-a-FFT-Butterfly-Algorithm,11374,1,2024-03-11 21:43:17+00:00,[],
14725,https://github.com/404allen404/Crossbar.git,2023-11-28 14:50:01+00:00,,0,404allen404/Crossbar,724667452,SystemVerilog,Crossbar,33,1,2024-03-07 03:57:21+00:00,[],
14726,https://github.com/zrporz/ComputerOrganizationPipeLine.git,2023-12-14 15:02:51+00:00,CPU of Computer Organization 2023 Fall THUCST,0,zrporz/ComputerOrganizationPipeLine,731652125,SystemVerilog,ComputerOrganizationPipeLine,6001,1,2024-02-03 17:10:08+00:00,[],
14727,https://github.com/kitune-san/KF76489.git,2023-11-19 08:47:07+00:00,KF76489 - 76489-like Digital Complex Sound generator written in SystemVerilog,0,kitune-san/KF76489,720680890,SystemVerilog,KF76489,62,1,2024-03-08 09:23:12+00:00,"['fpga', 'sn76489', 'systemverilog', 'verilog']",https://api.github.com/licenses/mit
14728,https://github.com/mgwang37/fp32_adder.git,2023-11-24 14:34:41+00:00,符合IEEE-754标准fp32浮点加法器(五级流水),0,mgwang37/fp32_adder,723040078,SystemVerilog,fp32_adder,19,1,2023-11-24 16:32:17+00:00,[],https://api.github.com/licenses/gpl-3.0
14729,https://github.com/ad0bre/FloatingPOINTless.git,2023-11-21 10:38:59+00:00,General purpose CPU with a floating point co-processor,0,ad0bre/FloatingPOINTless,721571372,SystemVerilog,FloatingPOINTless,42,1,2023-12-17 20:52:30+00:00,[],
14730,https://github.com/lightcharm/Kuznyechik_cipher.git,2023-12-09 19:23:14+00:00,Kuznyechik cipher on the verilog ,0,lightcharm/Kuznyechik_cipher,729611753,SystemVerilog,Kuznyechik_cipher,141,1,2023-12-11 20:37:14+00:00,[],https://api.github.com/licenses/mit
14731,https://github.com/MasterPlayer/Analog-Device-AXI-Reconfiguration.git,2023-12-08 11:10:04+00:00,"FPGA Based reconfiguration interface from AXI to SPI Analog Device, holds readed data and sends data from AXI to AD over SPI/SDIO interface",0,MasterPlayer/Analog-Device-AXI-Reconfiguration,729079527,SystemVerilog,Analog-Device-AXI-Reconfiguration,10,1,2023-12-18 17:15:02+00:00,[],https://api.github.com/licenses/mit
14732,https://github.com/andreemedeiros/SystemVerilog.git,2023-12-15 18:17:07+00:00,Soluções do curso: Introduction to System Verilog - Siemens.,0,andreemedeiros/SystemVerilog,732133055,SystemVerilog,SystemVerilog,285,1,2024-01-25 00:42:14+00:00,[],https://api.github.com/licenses/mit
14733,https://github.com/achellasamy/zk-SNARK.git,2023-11-15 21:19:22+00:00,Hardware acceleration of zk-SNARK,0,achellasamy/zk-SNARK,719289912,SystemVerilog,zk-SNARK,113,1,2024-03-07 01:12:06+00:00,[],
14734,https://github.com/andreemedeiros/CIC-Filter.git,2023-12-14 18:12:35+00:00,Cic Filter Analysis.,0,andreemedeiros/CIC-Filter,731722259,SystemVerilog,CIC-Filter,215,1,2024-03-24 04:42:31+00:00,[],
14735,https://github.com/haihaunguyen/RISCV_SIDA-TEST_STUPID.git,2023-11-24 17:42:16+00:00,,0,haihaunguyen/RISCV_SIDA-TEST_STUPID,723105394,SystemVerilog,RISCV_SIDA-TEST_STUPID,39,1,2023-12-07 16:40:40+00:00,[],
14736,https://github.com/Mark-S2004/ASIC-ATM-based-bank-system.git,2023-11-25 21:08:52+00:00,Electronic design automation (CSE312) final project. The project aims at practicing the complete ASIC flow by implementing the core of the bank ATM design as well as verification environment.,1,Mark-S2004/ASIC-ATM-based-bank-system,723495669,SystemVerilog,ASIC-ATM-based-bank-system,366,1,2023-12-22 17:43:24+00:00,[],
14737,https://github.com/chms7/chms_fpu.git,2023-12-03 06:22:39+00:00,,0,chms7/chms_fpu,726708650,SystemVerilog,chms_fpu,890,1,2024-03-18 08:34:23+00:00,[],
14738,https://github.com/theta-machines/t0-core.git,2023-11-15 01:18:09+00:00,Implementation of the T0 ISA,0,theta-machines/t0-core,718879550,SystemVerilog,t0-core,14,1,2023-11-17 06:37:06+00:00,[],https://api.github.com/licenses/cern-ohl-w-2.0
14739,https://github.com/robfinch/Qupls.git,2023-11-21 03:29:44+00:00,Qupls 64-bit processor core,0,robfinch/Qupls,721430812,SystemVerilog,Qupls,42531,1,2024-02-22 08:53:22+00:00,[],
14740,https://github.com/hamza-akhtar-dev/riscv-processor-3-stage-pipelined.git,2023-12-09 19:26:50+00:00,,0,hamza-akhtar-dev/riscv-processor-3-stage-pipelined,729612586,SystemVerilog,riscv-processor-3-stage-pipelined,13,1,2023-12-30 13:50:24+00:00,[],
14741,https://github.com/Carl7yan/h2p.git,2023-11-25 08:28:26+00:00,,0,Carl7yan/h2p,723303071,SystemVerilog,h2p,2373,1,2023-11-25 08:30:07+00:00,[],
14742,https://github.com/MaximilianHq/Canway-s-Game-Of-Life.git,2023-11-16 14:26:11+00:00,,0,MaximilianHq/Canway-s-Game-Of-Life,719608168,SystemVerilog,Canway-s-Game-Of-Life,34,1,2024-01-04 11:47:27+00:00,[],
14743,https://github.com/dsheffie/rv32core.git,2023-11-14 02:21:10+00:00,,0,dsheffie/rv32core,718406883,SystemVerilog,rv32core,9008,1,2023-11-20 17:20:32+00:00,[],
14744,https://github.com/Ali-Mokhtar02/ALSU-Verilog-Code-and-UVM-testbench.git,2023-11-14 15:27:44+00:00,,0,Ali-Mokhtar02/ALSU-Verilog-Code-and-UVM-testbench,718680569,SystemVerilog,ALSU-Verilog-Code-and-UVM-testbench,352,1,2024-02-28 01:50:23+00:00,[],
14745,https://github.com/Shoaken/ELEC6234-picoMIPS.git,2023-11-09 11:35:37+00:00,,0,Shoaken/ELEC6234-picoMIPS,716554809,SystemVerilog,ELEC6234-picoMIPS,2596,1,2024-04-08 14:49:55+00:00,[],
14746,https://github.com/RoaLogic/ahb3lite_sdram_ctrl.git,2023-11-08 23:32:04+00:00,AHB3 Lite SDRAM Controller,0,RoaLogic/ahb3lite_sdram_ctrl,716337358,SystemVerilog,ahb3lite_sdram_ctrl,1190,1,2024-01-25 07:22:39+00:00,[],
14748,https://github.com/qchen4/EE271Lab4.git,2023-11-18 07:15:34+00:00,,0,qchen4/EE271Lab4,720342083,SystemVerilog,EE271Lab4,4,0,2023-11-18 07:16:27+00:00,[],
14749,https://github.com/ChUrl/quartus-8-bit-cpu.git,2023-11-09 23:26:47+00:00,,0,ChUrl/quartus-8-bit-cpu,716810998,SystemVerilog,quartus-8-bit-cpu,23,0,2023-11-09 23:27:10+00:00,[],
14751,https://github.com/kellylove1987/cpu.git,2023-11-23 07:32:07+00:00,,0,kellylove1987/cpu,722456653,SystemVerilog,cpu,4383,0,2023-11-23 07:32:29+00:00,[],https://api.github.com/licenses/apache-2.0
14753,https://github.com/ShutterSpeedLabs/SystemVerilogPartOne.git,2023-11-21 05:10:49+00:00,,0,ShutterSpeedLabs/SystemVerilogPartOne,721456116,SystemVerilog,SystemVerilogPartOne,396,0,2023-11-21 06:32:36+00:00,[],
14754,https://github.com/Kamalesh377/single-cycle-processor.git,2023-11-18 05:42:14+00:00,,1,Kamalesh377/single-cycle-processor,720321406,SystemVerilog,single-cycle-processor,38,0,2023-11-18 05:45:43+00:00,[],
14755,https://github.com/rykent/SHA256_core.git,2023-11-28 06:33:22+00:00,SHA256 Core FPGA Implemenation,0,rykent/SHA256_core,724474041,SystemVerilog,SHA256_core,9,0,2023-11-28 06:34:31+00:00,[],
14756,https://github.com/tornupnegatives/fletchers-checksum.git,2023-11-25 20:29:38+00:00,Parameterized SystemVerilog Implementation of Fletcher's Checksum,0,tornupnegatives/fletchers-checksum,723487389,SystemVerilog,fletchers-checksum,2,0,2023-12-01 06:02:44+00:00,[],
14757,https://github.com/manmohanverma1234/register_file.git,2023-12-03 06:31:53+00:00,,0,manmohanverma1234/register_file,726710535,SystemVerilog,register_file,280,0,2023-12-03 06:53:49+00:00,[],
14758,https://github.com/mithraapoorva/axi_scoreboard.git,2023-12-05 09:00:00+00:00,,0,mithraapoorva/axi_scoreboard,727631839,SystemVerilog,axi_scoreboard,18,0,2023-12-05 09:08:34+00:00,[],
14759,https://github.com/mik0lam/comporgfinal.git,2023-12-08 19:58:56+00:00,,0,mik0lam/comporgfinal,729283077,SystemVerilog,comporgfinal,8,0,2023-12-08 21:12:19+00:00,[],https://api.github.com/licenses/mit
14760,https://github.com/dineshannayya/riscduino_dcore_gf180.git,2023-11-17 10:51:31+00:00,Riscduino Dual core target to GF180nm,2,dineshannayya/riscduino_dcore_gf180,719994055,SystemVerilog,riscduino_dcore_gf180,7975,0,2023-12-03 15:30:36+00:00,[],https://api.github.com/licenses/apache-2.0
14761,https://github.com/dungxnef/RISCV32i_edu.git,2023-12-09 20:43:26+00:00,,0,dungxnef/RISCV32i_edu,729629241,SystemVerilog,RISCV32i_edu,3999,0,2023-12-09 20:49:22+00:00,[],
14762,https://github.com/kavanachidananda/axi_scoreboard1.git,2023-12-04 10:45:00+00:00,,0,kavanachidananda/axi_scoreboard1,727177621,SystemVerilog,axi_scoreboard1,28,0,2023-12-04 10:45:26+00:00,[],
14763,https://github.com/JosephPopo/Chisel_Formal.git,2023-12-11 19:36:11+00:00,,0,JosephPopo/Chisel_Formal,730374740,SystemVerilog,Chisel_Formal,3340,0,2023-12-12 00:42:11+00:00,[],
14764,https://github.com/JustCryen/wannabe-CPU.git,2023-12-11 10:17:45+00:00,"An early version of a CPU, it's likely a hybrid between CISC and RISC architectures.",0,JustCryen/wannabe-CPU,730154360,SystemVerilog,wannabe-CPU,298,0,2024-02-19 23:27:51+00:00,[],
14765,https://github.com/PratMaha/bsg_manycore_ISA.git,2023-12-07 18:48:44+00:00,This repository contains folders consisting of files required for each of the ISAs supported by bsg_manycore,0,PratMaha/bsg_manycore_ISA,728813691,SystemVerilog,bsg_manycore_ISA,33,0,2024-01-17 18:27:38+00:00,[],
14766,https://github.com/minghungumich/TestSetup-Intel16OpenTitanSoC.git,2023-11-18 03:50:32+00:00,,0,minghungumich/TestSetup-Intel16OpenTitanSoC,720299161,SystemVerilog,TestSetup-Intel16OpenTitanSoC,44149,0,2023-11-20 04:49:36+00:00,[],https://api.github.com/licenses/apache-2.0
14767,https://github.com/joeya20/ece6463-proj.git,2023-12-15 21:10:35+00:00,,0,joeya20/ece6463-proj,732179816,SystemVerilog,ece6463-proj,7554,0,2023-12-15 21:11:28+00:00,[],
14769,https://github.com/RuchchaSD/RISCV32I_pipelined_processor.git,2023-12-07 05:05:16+00:00,This repository contains a system verilog implementation of risc v pipelined processor with MEMCOPY and MUL additional instructions,0,RuchchaSD/RISCV32I_pipelined_processor,728510906,SystemVerilog,RISCV32I_pipelined_processor,596,0,2023-12-07 05:05:22+00:00,[],
14770,https://github.com/sifferman/structs.git,2023-11-18 22:21:14+00:00,Examples of how to use structures in IEEE 1800 SystemVerilog.,0,sifferman/structs,720572296,SystemVerilog,structs,17,0,2024-01-07 16:45:10+00:00,[],https://api.github.com/licenses/mit
14771,https://github.com/KoraSHughes/LLMCodeGen.git,2023-11-17 21:17:58+00:00,,0,KoraSHughes/LLMCodeGen,720221369,SystemVerilog,LLMCodeGen,264531,0,2024-04-09 13:31:55+00:00,[],
14772,https://github.com/Kur02/Uni_Notes-Homework.git,2023-12-05 12:35:43+00:00,Contains modules of FriedrichSchillerUniversity Jena,0,Kur02/Uni_Notes-Homework,727716241,SystemVerilog,Uni_Notes-Homework,916154,0,2024-02-01 19:36:05+00:00,[],
14773,https://github.com/nguyendaithien/IP_WIDE-ALU.git,2023-11-11 01:06:18+00:00,new IP ,0,nguyendaithien/IP_WIDE-ALU,717272704,SystemVerilog,IP_WIDE-ALU,20,0,2023-11-11 01:56:19+00:00,[],
14774,https://github.com/AVprog/UVM_helloworld.git,2023-11-21 10:43:51+00:00,,0,AVprog/UVM_helloworld,721573418,SystemVerilog,UVM_helloworld,5,0,2023-11-21 10:43:59+00:00,[],
14775,https://github.com/mill-lab/kcu1500_routex.git,2023-11-28 06:07:04+00:00,,0,mill-lab/kcu1500_routex,724465846,SystemVerilog,kcu1500_routex,11,0,2023-11-28 06:08:18+00:00,[],
14776,https://github.com/K-Kielak/tlv-exercises.git,2023-11-13 19:51:59+00:00,Repository to learn Verilog and TL-Verilog. Leads to RISC-V CPU hardware implementation,0,K-Kielak/tlv-exercises,718298899,SystemVerilog,tlv-exercises,75,0,2023-11-23 10:25:45+00:00,[],
14777,https://github.com/romanirofaeil/ALU_Testbench.git,2023-11-08 08:41:24+00:00,,0,romanirofaeil/ALU_Testbench,715987136,SystemVerilog,ALU_Testbench,6,0,2023-11-08 09:15:31+00:00,[],
14778,https://github.com/bkimk/LC3-ISA.git,2023-11-08 20:10:30+00:00,"Microprocessor on Vivado, AMD Spartan-7 FPGA",0,bkimk/LC3-ISA,716282179,SystemVerilog,LC3-ISA,29,0,2023-11-09 17:42:39+00:00,[],
14779,https://github.com/ienseong/foc_clarke.git,2023-11-09 22:03:15+00:00,,0,ienseong/foc_clarke,716790476,SystemVerilog,foc_clarke,420,0,2023-11-09 22:04:54+00:00,[],
14780,https://github.com/AVprog/UVM-example.git,2023-11-16 10:29:14+00:00,,0,AVprog/UVM-example,719513439,SystemVerilog,UVM-example,6,0,2023-11-16 10:31:17+00:00,[],
14781,https://github.com/michealsafwat/ALU-Verification-using-Systemverilog.git,2023-12-07 21:01:46+00:00,ITI Digital IC Verification Graduation Project,0,michealsafwat/ALU-Verification-using-Systemverilog,728855333,SystemVerilog,ALU-Verification-using-Systemverilog,52,0,2023-12-07 21:07:31+00:00,[],
14782,https://github.com/suhan0123/axi4_testbech.git,2023-12-11 03:54:57+00:00,Test_bench,0,suhan0123/axi4_testbech,730033978,SystemVerilog,axi4_testbech,120,0,2023-12-11 04:08:26+00:00,[],
14783,https://github.com/hghe/Lab-Project-DLD---Carsten-and-Gabe.git,2023-11-10 22:49:03+00:00,,0,hghe/Lab-Project-DLD---Carsten-and-Gabe,717246773,SystemVerilog,Lab-Project-DLD---Carsten-and-Gabe,73139,0,2023-11-10 23:01:20+00:00,[],
14784,https://github.com/Antonia2000/Request_Acknowledge_UVM.git,2023-12-11 11:49:08+00:00,,0,Antonia2000/Request_Acknowledge_UVM,730189090,SystemVerilog,Request_Acknowledge_UVM,8,0,2023-12-11 11:51:25+00:00,[],
14785,https://github.com/fedejone/test_pattern_generator.git,2023-12-01 23:53:48+00:00,,0,fedejone/test_pattern_generator,726281989,SystemVerilog,test_pattern_generator,807,0,2023-12-01 23:54:34+00:00,[],
14786,https://github.com/sssabry/systemverilog.git,2023-12-15 23:02:19+00:00,practice HDL modules - prep work for FPGA dev project,0,sssabry/systemverilog,732203079,SystemVerilog,systemverilog,4,0,2023-12-15 23:21:47+00:00,[],
14787,https://github.com/muzafferkal/jtag-axi-bridge.git,2023-11-20 18:21:33+00:00,"jtag to axi (lite) bridge, starting with pulp risc-v debug components",0,muzafferkal/jtag-axi-bridge,721280979,SystemVerilog,jtag-axi-bridge,70,0,2023-11-20 18:34:59+00:00,[],https://api.github.com/licenses/apache-2.0
14788,https://github.com/pmonserrat/RISCV.ISDIGI.2324.git,2023-11-28 17:49:44+00:00,RISCV 2023-2024,0,pmonserrat/RISCV.ISDIGI.2324,724743040,,RISCV.ISDIGI.2324,3,0,2024-01-30 18:31:57+00:00,[],
14789,https://github.com/Lentscode/SystemVerilog.git,2023-12-01 08:59:53+00:00,,0,Lentscode/SystemVerilog,725970976,SystemVerilog,SystemVerilog,32,0,2024-02-01 10:08:05+00:00,[],
14790,https://github.com/Chandlerxlnx/vivado_example.git,2023-11-13 05:20:46+00:00,,0,Chandlerxlnx/vivado_example,717979939,SystemVerilog,vivado_example,530,0,2023-11-22 09:57:49+00:00,[],https://api.github.com/licenses/apache-2.0
14791,https://github.com/AnushaShakkara/memory_controller.git,2023-11-10 17:39:43+00:00,Scheduler portion of memory controller,0,AnushaShakkara/memory_controller,717160089,SystemVerilog,memory_controller,120,0,2023-12-31 06:53:21+00:00,[],
14792,https://github.com/MrDoomsday/Ethernet.git,2023-12-09 19:37:01+00:00,"IP-cores for Ethernet. 1G MAC, Coder/Decoder 64b/66b, UDP",0,MrDoomsday/Ethernet,729614884,SystemVerilog,Ethernet,24,0,2023-12-20 12:36:29+00:00,[],
14793,https://github.com/jbdavid-inno/analog-uvm-tb.git,2023-11-13 22:27:12+00:00,auto tb generation for AMS designs . Quickly Build a UVM bench for an arbitrary analog design with external register controls,0,jbdavid-inno/analog-uvm-tb,718346401,SystemVerilog,analog-uvm-tb,43,0,2024-01-02 22:33:03+00:00,[],
14794,https://github.com/deekshithtirumala/verilog.git,2023-11-10 13:00:10+00:00,,0,deekshithtirumala/verilog,717053383,SystemVerilog,verilog,5,0,2023-11-10 13:05:17+00:00,[],
14795,https://github.com/aGhandhii/pipelined-arm64-processor.git,2023-11-11 19:18:57+00:00,A 5-stage pipelined 64-bit ARM processor; implemented in SystemVerilog,0,aGhandhii/pipelined-arm64-processor,717539375,SystemVerilog,pipelined-arm64-processor,1485,0,2023-11-12 23:01:52+00:00,"['arm64', 'computer-architecture', 'legv8-arm', 'pipelined-processor', 'systemverilog']",
14796,https://github.com/MasterPlayer/axi_memory_writer_pkt_intr.git,2023-11-21 16:15:45+00:00,Component for writing data from axi-stream to axi-full with support interrupt signal for each packet. packet size cannot greater MAX_BURST words count. Simple component,0,MasterPlayer/axi_memory_writer_pkt_intr,721714784,SystemVerilog,axi_memory_writer_pkt_intr,34,0,2023-11-21 16:15:54+00:00,[],https://api.github.com/licenses/mit
14797,https://github.com/NavyaVernekar/System-Verilog-Projects.git,2023-11-23 04:50:44+00:00,,0,NavyaVernekar/System-Verilog-Projects,722409862,SystemVerilog,System-Verilog-Projects,8,0,2023-11-23 04:55:52+00:00,[],
14798,https://github.com/nebhrajani-a/ieee-fpga-workshop.git,2023-11-09 04:45:53+00:00,,1,nebhrajani-a/ieee-fpga-workshop,716414045,SystemVerilog,ieee-fpga-workshop,12,0,2023-11-09 06:58:40+00:00,[],
14799,https://github.com/IcaroMendes00/Verifica-o-Funcional-de-Sistemas-Digitais.git,2023-11-08 00:54:15+00:00,Repositório destinado à disciplina de Verificação Funcional de Sistemas Digitais,0,IcaroMendes00/Verifica-o-Funcional-de-Sistemas-Digitais,715853847,SystemVerilog,Verifica-o-Funcional-de-Sistemas-Digitais,4,0,2023-11-08 01:02:20+00:00,[],
14800,https://github.com/prydin/dds.git,2023-11-16 23:00:33+00:00,DDS,0,prydin/dds,719793398,SystemVerilog,dds,109,0,2023-11-16 23:03:30+00:00,[],
14801,https://github.com/sergiupopescu22/Microprocessor_Verilog.git,2023-11-17 18:40:27+00:00,"This repo contains the digital design implementation in System Verilog for a simple microprocessor, ROM and SRAM. ",0,sergiupopescu22/Microprocessor_Verilog,720175507,SystemVerilog,Microprocessor_Verilog,494,0,2023-11-17 19:03:25+00:00,[],
14802,https://github.com/bumjoooon/ohshitgit.git,2023-11-24 01:07:08+00:00,this repository made for oh shit git test code,0,bumjoooon/ohshitgit,722793763,SystemVerilog,ohshitgit,2,0,2023-11-24 01:46:02+00:00,[],
14803,https://github.com/Allie09/DLD-Project.git,2023-11-26 16:27:17+00:00,Football game using verilog,0,Allie09/DLD-Project,723743975,SystemVerilog,DLD-Project,85,0,2023-11-26 16:34:56+00:00,[],
14804,https://github.com/teshnizi2/Computer-Architecture-Project.git,2023-11-29 18:07:33+00:00,"Streamlined Computer Architecture Project featuring fundamental design and implementation aspects, tailored for educational purposes.",0,teshnizi2/Computer-Architecture-Project,725235228,SystemVerilog,Computer-Architecture-Project,878,0,2023-11-29 21:32:11+00:00,[],
14805,https://github.com/vishalvp123/Interview-Question.git,2023-11-29 14:06:17+00:00,"Write a code for 3 processes running in parallel. If any 2 process are completed, the third process has to be disabled. (using fork_join_none/fork_join_any)",0,vishalvp123/Interview-Question,725133959,SystemVerilog,Interview-Question,1,0,2023-11-29 14:07:42+00:00,[],
14806,https://github.com/dsheffie/hw-rasterizer.git,2023-11-26 17:22:15+00:00,,0,dsheffie/hw-rasterizer,723760494,SystemVerilog,hw-rasterizer,127,0,2023-11-26 17:22:47+00:00,[],
14807,https://github.com/wilburfrrrrrr/risc_v_segmentado.git,2023-12-01 03:22:16+00:00,,0,wilburfrrrrrr/risc_v_segmentado,725870171,SystemVerilog,risc_v_segmentado,11228,0,2023-12-01 03:44:18+00:00,[],
14808,https://github.com/manmohanverma1234/project_sv.git,2023-12-03 19:18:13+00:00,,0,manmohanverma1234/project_sv,726916320,SystemVerilog,project_sv,1,0,2023-12-03 19:19:08+00:00,[],
14809,https://github.com/bwa55221/verilog_sandbox.git,2023-12-09 23:47:37+00:00,,0,bwa55221/verilog_sandbox,729661851,SystemVerilog,verilog_sandbox,28,0,2023-12-10 00:38:24+00:00,[],
14810,https://github.com/ShaheerSajid/pakfpu.git,2023-11-25 14:30:41+00:00,"Fully paramterizable, IEEE-754 compliant FPU",0,ShaheerSajid/pakfpu,723394689,SystemVerilog,pakfpu,3626,0,2023-11-25 15:19:01+00:00,[],
14811,https://github.com/everGreenGH/riscv-processor.git,2023-12-11 14:11:39+00:00,Single cycle & pipeline CPU,0,everGreenGH/riscv-processor,730246968,SystemVerilog,riscv-processor,9,0,2023-12-11 14:13:58+00:00,[],
14812,https://github.com/ishwo0/FPGA-Digital-Canvas.git,2023-12-07 07:48:56+00:00,Pixel Poet,0,ishwo0/FPGA-Digital-Canvas,728559969,SystemVerilog,FPGA-Digital-Canvas,106,0,2023-12-07 07:51:52+00:00,[],
14813,https://github.com/crismz/AdC.git,2023-12-11 19:53:00+00:00,Arquitectura de Computadoras,0,crismz/AdC,730380078,SystemVerilog,AdC,3057,0,2023-12-12 00:20:29+00:00,[],
14814,https://github.com/fzaman500/PictoChatGPA.git,2023-11-26 20:54:47+00:00,,0,fzaman500/PictoChatGPA,723817572,SystemVerilog,PictoChatGPA,7261,0,2023-12-05 15:40:28+00:00,[],
14815,https://github.com/GhostOf0days/Computer-Organization-Final-Project-f23.git,2023-11-15 08:09:08+00:00,This is a repo containing the final class project for the Intro to Computer Systems class for RPI CS. It's called Computer Organization at RPI. This class project is for the fall 2023 iteration of the class.,0,GhostOf0days/Computer-Organization-Final-Project-f23,718992268,SystemVerilog,Computer-Organization-Final-Project-f23,425,0,2023-12-16 08:34:39+00:00,[],
14816,https://github.com/MSaqi/Verilog_code.git,2023-11-23 06:03:43+00:00,Useless codes,0,MSaqi/Verilog_code,722429052,SystemVerilog,Verilog_code,17,0,2023-11-23 06:04:51+00:00,[],https://api.github.com/licenses/gpl-3.0
14817,https://github.com/souza-marcos/One-Time-Pad-Cypher.git,2023-12-04 12:35:28+00:00,,0,souza-marcos/One-Time-Pad-Cypher,727219964,SystemVerilog,One-Time-Pad-Cypher,803,0,2023-12-13 23:17:16+00:00,[],
14818,https://github.com/valmyr/UVM_testbench_of_a_classified_dut.git,2023-12-14 02:14:42+00:00,,0,valmyr/UVM_testbench_of_a_classified_dut,731402073,SystemVerilog,UVM_testbench_of_a_classified_dut,1168,0,2023-12-14 02:32:49+00:00,[],
14819,https://github.com/LayzRay/SoC.git,2023-12-07 08:15:00+00:00,"Выполненные лабораторные работы по дисциплине 3-го курса ""Практикум по программируемым логическим интегральным схемам на основе Verilog""",0,LayzRay/SoC,728568962,SystemVerilog,SoC,5159,0,2023-12-07 08:16:54+00:00,[],
14820,https://github.com/RephlexZero/Digital-Systems-Design-FPGA.git,2023-12-04 21:00:04+00:00,,1,RephlexZero/Digital-Systems-Design-FPGA,727429005,SystemVerilog,Digital-Systems-Design-FPGA,53413,0,2023-12-04 21:00:12+00:00,[],
14821,https://github.com/pedrohfmacedo/UVM.git,2023-11-23 17:52:01+00:00,,0,pedrohfmacedo/UVM,722689943,SystemVerilog,UVM,11192,0,2023-12-19 18:02:59+00:00,[],
14822,https://github.com/saijulukose/UVM_PRACTICE.git,2023-11-20 16:04:25+00:00,My UVM Practice codes,0,saijulukose/UVM_PRACTICE,721226837,SystemVerilog,UVM_PRACTICE,28,0,2023-12-21 09:54:42+00:00,[],https://api.github.com/licenses/mit
14823,https://github.com/ekansh21044/CA.git,2023-12-01 16:12:09+00:00,,0,ekansh21044/CA,726142271,SystemVerilog,CA,6,0,2023-12-25 05:52:02+00:00,[],
14824,https://github.com/gvesic96/fv.git,2023-12-05 21:10:46+00:00,,0,gvesic96/fv,727920414,SystemVerilog,fv,19,0,2023-12-08 14:28:40+00:00,[],
14825,https://github.com/MyWurger/5.2.-APB-Traffic-light-control.git,2023-11-22 18:06:37+00:00,,0,MyWurger/5.2.-APB-Traffic-light-control,722232199,SystemVerilog,5.2.-APB-Traffic-light-control,12,0,2024-01-26 10:30:54+00:00,[],
14827,https://github.com/AshwinKTyagi/ECE-111-Final-Project.git,2023-11-22 23:37:26+00:00,,0,AshwinKTyagi/ECE-111-Final-Project,722337527,SystemVerilog,ECE-111-Final-Project,3016,0,2024-03-09 01:13:37+00:00,[],
14828,https://github.com/ArthurMdrs/SystemVerilog_Playground.git,2023-11-21 16:30:36+00:00,This is where I put the SystemVerilog codes I made that I find the most interesting. ,0,ArthurMdrs/SystemVerilog_Playground,721721098,SystemVerilog,SystemVerilog_Playground,3004,0,2023-11-21 16:34:15+00:00,[],
14829,https://github.com/davidpoul2/verilog.git,2023-11-11 05:44:29+00:00,,0,davidpoul2/verilog,717324377,SystemVerilog,verilog,2,0,2023-11-11 05:45:52+00:00,[],
14830,https://github.com/SANJEEV306/FIFO_asyn_VERILOG-TB.git,2023-11-12 13:45:46+00:00,Asynhronous FIFO design using verilog HDL,0,SANJEEV306/FIFO_asyn_VERILOG-TB,717754858,SystemVerilog,FIFO_asyn_VERILOG-TB,64,0,2023-11-12 14:22:41+00:00,[],
14831,https://github.com/soheilnazari2001/MIPS_CPU.git,2023-11-13 12:56:35+00:00,,0,soheilnazari2001/MIPS_CPU,718131335,SystemVerilog,MIPS_CPU,1924,0,2023-11-13 12:57:03+00:00,[],
14832,https://github.com/JunsangYooUSC/loop_pipeline_vitis2intel.git,2023-11-10 04:47:02+00:00,,0,JunsangYooUSC/loop_pipeline_vitis2intel,716889083,SystemVerilog,loop_pipeline_vitis2intel,1627,0,2023-11-10 05:09:38+00:00,[],
14833,https://github.com/JoaoPi314/pga_verification.git,2023-11-13 20:51:57+00:00,,0,JoaoPi314/pga_verification,718319373,SystemVerilog,pga_verification,22,0,2023-11-16 14:55:11+00:00,[],
14834,https://github.com/zelo-415/FPGA-Music-Player.git,2023-11-26 03:52:05+00:00,,0,zelo-415/FPGA-Music-Player,723562435,SystemVerilog,FPGA-Music-Player,1439,0,2023-11-26 09:03:03+00:00,[],
14835,https://github.com/kitune-san/KFPS2IRKB.git,2023-11-20 15:05:57+00:00,PS/2 keyboard converter for PCjr written in SystemVerilog,0,kitune-san/KFPS2IRKB,721201934,SystemVerilog,KFPS2IRKB,8,0,2023-11-23 14:10:33+00:00,[],https://api.github.com/licenses/mit
14836,https://github.com/Hatemxiv/Arm-pipelined-processor.git,2023-11-30 17:14:21+00:00,an Arm pipelined processor written in system verilog,0,Hatemxiv/Arm-pipelined-processor,725692574,SystemVerilog,Arm-pipelined-processor,11,0,2023-11-30 17:18:40+00:00,[],
14837,https://github.com/arkeks/axis_async_fifo.git,2023-11-27 11:13:31+00:00,Asynchronous fifo on SystemVerilog with AXIS interface.,0,arkeks/axis_async_fifo,724083962,SystemVerilog,axis_async_fifo,6,0,2023-11-29 23:53:12+00:00,[],
14838,https://github.com/arunachalamrangarj/uvm_example.git,2023-11-30 05:56:42+00:00,,0,arunachalamrangarj/uvm_example,725431006,SystemVerilog,uvm_example,6928,0,2023-11-30 06:07:33+00:00,[],
14839,https://github.com/asmara30/Chipyard-Generated-Files.git,2023-11-30 03:17:01+00:00,,0,asmara30/Chipyard-Generated-Files,725389905,SystemVerilog,Chipyard-Generated-Files,1565,0,2023-11-30 03:25:48+00:00,[],
14840,https://github.com/mattrfrancis/cocosorter.git,2023-11-29 00:47:32+00:00,Cocotb testing and sorting algorithm in HDL,0,mattrfrancis/cocosorter,724872135,SystemVerilog,cocosorter,14,0,2023-11-30 01:03:26+00:00,[],
14841,https://github.com/rodrigoruz/ee271_project.git,2023-11-08 00:44:36+00:00,,0,rodrigoruz/ee271_project,715851409,SystemVerilog,ee271_project,45888,0,2023-11-09 19:13:49+00:00,[],
14842,https://github.com/ojeengammah/CSE141L.git,2023-12-10 16:22:36+00:00,,0,ojeengammah/CSE141L,729877194,SystemVerilog,CSE141L,1921,0,2023-12-10 16:23:18+00:00,[],
14843,https://github.com/Daxting/Digital-System-Design.git,2023-12-09 23:36:55+00:00,Projects in Digitial system design and implementation class ,0,Daxting/Digital-System-Design,729660295,SystemVerilog,Digital-System-Design,2136,0,2023-12-10 23:31:33+00:00,[],
14844,https://github.com/AmirHamzah00/4thYearProject.git,2023-12-12 05:39:20+00:00,,0,AmirHamzah00/4thYearProject,730524554,SystemVerilog,4thYearProject,40,0,2023-12-12 12:12:36+00:00,[],
14845,https://github.com/saltyee1/riscV_single_cycle_CPU.git,2023-12-12 08:54:18+00:00,,0,saltyee1/riscV_single_cycle_CPU,730588643,SystemVerilog,riscV_single_cycle_CPU,14,0,2023-12-12 10:19:01+00:00,[],
14846,https://github.com/ahmedsherif99/Multiplier-Systemverilog-module-with-Formal-Verification-SVA-on-OneSpin.git,2023-12-12 11:43:40+00:00,,0,ahmedsherif99/Multiplier-Systemverilog-module-with-Formal-Verification-SVA-on-OneSpin,730653568,SystemVerilog,Multiplier-Systemverilog-module-with-Formal-Verification-SVA-on-OneSpin,732,0,2023-12-12 12:24:14+00:00,[],
14847,https://github.com/vasavbnair/FPGA_Drum_Machine.git,2023-12-12 00:53:50+00:00,FPGA Drum Machine I made for my ECE 385 final project. ,0,vasavbnair/FPGA_Drum_Machine,730454732,SystemVerilog,FPGA_Drum_Machine,32,0,2023-12-12 00:59:20+00:00,[],
14848,https://github.com/asierbf80/ISDIGI.git,2023-12-13 12:32:35+00:00,Repositorio de los proyectos de la asignatura de tercero ISDIGI,0,asierbf80/ISDIGI,731133559,SystemVerilog,ISDIGI,58691,0,2023-12-13 13:30:27+00:00,[],
14849,https://github.com/Micchi19/Accelerator_VRSMwithDMA.git,2023-11-23 19:31:22+00:00,"The accelerator which data are transfered from both of ""Memory"" and ""Vector Processor""",1,Micchi19/Accelerator_VRSMwithDMA,722720160,SystemVerilog,Accelerator_VRSMwithDMA,7,0,2023-11-23 20:23:12+00:00,[],
14850,https://github.com/YulunWu1102/Pipelined-RISCV-32i.git,2023-12-14 18:19:34+00:00,,0,YulunWu1102/Pipelined-RISCV-32i,731724582,SystemVerilog,Pipelined-RISCV-32i,4699,0,2023-12-14 18:21:17+00:00,[],
14851,https://github.com/Jonathan-L-Davis/459D-final.git,2023-11-14 23:54:47+00:00,,0,Jonathan-L-Davis/459D-final,718859783,SystemVerilog,459D-final,929,0,2023-11-15 14:12:37+00:00,[],
14852,https://github.com/brycepollack/cse140l-lab4.git,2023-11-22 18:09:23+00:00,,0,brycepollack/cse140l-lab4,722233153,SystemVerilog,cse140l-lab4,11,0,2023-12-18 06:21:44+00:00,[],
14853,https://github.com/semlee/CNN_FPGA.git,2023-11-11 22:54:24+00:00,,0,semlee/CNN_FPGA,717583142,SystemVerilog,CNN_FPGA,1777,0,2023-12-20 21:24:47+00:00,[],
14854,https://github.com/Rutherther/verilog-riscv-semestral-project.git,2023-11-18 13:37:46+00:00,Semestral project for B4M35PAP (advanced computer architectures) at CTU in Prague.,0,Rutherther/verilog-riscv-semestral-project,720436454,SystemVerilog,verilog-riscv-semestral-project,97,0,2023-11-18 13:39:07+00:00,[],
14855,https://github.com/sjb565/fpga-video-enhancement.git,2023-12-16 06:10:27+00:00,Realtime video upsampling by four times using bicubic interpolation purely on FPGA,0,sjb565/fpga-video-enhancement,732276753,SystemVerilog,fpga-video-enhancement,8545,0,2023-12-16 06:23:00+00:00,[],
14856,https://github.com/Yehia404/EDA_ATM.git,2023-12-13 19:39:58+00:00,,0,Yehia404/EDA_ATM,731307549,SystemVerilog,EDA_ATM,30,0,2023-12-30 18:41:57+00:00,[],
14857,https://github.com/Ashwin4514/Designing-Systolic-Array.git,2023-12-09 21:50:18+00:00,The following repository houses a detailed implementation of the systolic array using Verilog and System Verilog,0,Ashwin4514/Designing-Systolic-Array,729642114,SystemVerilog,Designing-Systolic-Array,547,0,2023-12-09 22:42:50+00:00,[],
14858,https://github.com/m3aldabb/rtl.git,2023-12-02 07:32:35+00:00,,0,m3aldabb/rtl,726372138,SystemVerilog,rtl,181,0,2023-12-02 07:39:29+00:00,[],
14859,https://github.com/jgaztelu/arriskv.git,2023-11-08 19:36:48+00:00,,0,jgaztelu/arriskv,716270523,SystemVerilog,arriskv,46,0,2024-01-15 22:47:05+00:00,[],
14860,https://github.com/VARZero/VZ16_SuperScalar.git,2023-12-09 10:30:58+00:00,SuperScalar CPU With VZ32 Instruction Set Architecture (방학 (12/16~2/5) 동안 슈퍼스칼라 CPU 만들어보기),0,VARZero/VZ16_SuperScalar,729469129,SystemVerilog,VZ16_SuperScalar,22,0,2024-02-09 15:16:40+00:00,[],
14861,https://github.com/shinolab/autd3-firmware.git,2023-12-08 05:34:47+00:00,,0,shinolab/autd3-firmware,728973651,SystemVerilog,autd3-firmware,407,0,2023-12-11 06:10:38+00:00,"['autd3', 'c', 'systemverilog']",https://api.github.com/licenses/mit
14862,https://github.com/SREE1949/SV.git,2023-11-23 17:21:37+00:00,,0,SREE1949/SV,722680243,SystemVerilog,SV,12,0,2023-12-07 07:35:50+00:00,[],
14863,https://github.com/Shreyast27/git_tutorials.git,2023-11-14 09:15:27+00:00,,0,Shreyast27/git_tutorials,718528496,SystemVerilog,git_tutorials,2,0,2023-11-14 09:16:14+00:00,[],
14864,https://github.com/Shruti-Tajne/HardwareGenerationTool.git,2023-11-10 03:36:57+00:00,A piece of software that flexibly generates hardware,0,Shruti-Tajne/HardwareGenerationTool,716871074,SystemVerilog,HardwareGenerationTool,441,0,2023-11-10 07:49:06+00:00,[],
14865,https://github.com/xingyuwu821/UCSD_ECE111.git,2023-11-09 04:53:36+00:00,,0,xingyuwu821/UCSD_ECE111,716415960,SystemVerilog,UCSD_ECE111,36905,0,2023-11-09 04:57:08+00:00,[],
14866,https://github.com/nijie001/tryout_design.git,2023-11-17 09:20:16+00:00,First time use github,0,nijie001/tryout_design,719960652,SystemVerilog,tryout_design,2,0,2023-11-17 09:25:43+00:00,[],
14867,https://github.com/Locvo1/prelab-4.git,2023-11-17 13:56:52+00:00,,0,Locvo1/prelab-4,720063138,SystemVerilog,prelab-4,24,0,2023-11-17 15:27:49+00:00,[],
14868,https://github.com/kjstanford/ee271_a2.git,2023-11-18 01:57:07+00:00,,0,kjstanford/ee271_a2,720278123,SystemVerilog,ee271_a2,4,0,2023-11-18 02:00:58+00:00,[],
14869,https://github.com/Keio-CSG/cpu-experiment-2023.git,2023-11-20 06:32:07+00:00,,0,Keio-CSG/cpu-experiment-2023,720999602,SystemVerilog,cpu-experiment-2023,10184,0,2023-11-22 01:15:18+00:00,[],https://api.github.com/licenses/mit
14870,https://github.com/jayasuriya1998/Serial_to_Parelle_Converter.git,2023-11-21 18:32:10+00:00,System Verilog Base Serial to Parell Converter,0,jayasuriya1998/Serial_to_Parelle_Converter,721770121,SystemVerilog,Serial_to_Parelle_Converter,6,0,2023-11-21 18:34:04+00:00,[],
14871,https://github.com/jayasuriya1998/Full_Adder.git,2023-11-21 18:24:36+00:00,This Simple Full Adder Design by System Verilog Using Vivado,0,jayasuriya1998/Full_Adder,721767355,SystemVerilog,Full_Adder,3,0,2023-11-21 18:28:03+00:00,[],
14872,https://github.com/0K-Chinmay/risc_processor.git,2023-11-22 12:42:17+00:00,,0,0K-Chinmay/risc_processor,722100276,SystemVerilog,risc_processor,7,0,2023-11-22 12:46:43+00:00,[],
14873,https://github.com/makac1896/lab6.git,2023-11-19 06:52:35+00:00,shared codebase for lab6,0,makac1896/lab6,720658188,SystemVerilog,lab6,19224,0,2023-11-19 06:59:00+00:00,[],
14874,https://github.com/akashsaraswatt/New-files.git,2023-11-25 11:48:15+00:00,,0,akashsaraswatt/New-files,723351121,SystemVerilog,New-files,2,0,2023-11-25 11:50:56+00:00,[],
14875,https://github.com/Qurqi/BOIIii.git,2023-11-28 00:45:09+00:00,,0,Qurqi/BOIIii,724381147,SystemVerilog,BOIIii,516,0,2023-11-28 01:16:35+00:00,[],
14876,https://github.com/ronnielsajol/hdl-hands-on.git,2023-11-28 15:51:15+00:00,,0,ronnielsajol/hdl-hands-on,724694505,SystemVerilog,hdl-hands-on,7,0,2023-11-28 16:32:19+00:00,[],
14877,https://github.com/floAfentaki/floAfentaki-MICRO20.git,2023-12-08 18:59:48+00:00, This is a repocitory that by selecting a dataset a printed MLP classifier is produced. The designs follow the same architecture as its described in MICRO20 ,0,floAfentaki/floAfentaki-MICRO20,729266014,SystemVerilog,floAfentaki-MICRO20,401,0,2023-12-08 19:05:06+00:00,[],
14878,https://github.com/kele14x/prach_long.git,2023-11-27 12:15:18+00:00,,0,kele14x/prach_long,724108170,SystemVerilog,prach_long,1682,0,2023-12-08 02:27:16+00:00,[],
14879,https://github.com/MyWurger/5.1.-APB-master-and-slave-for-writing-and-reading.git,2023-11-09 16:16:11+00:00,Git Lab1 for automated design systems,0,MyWurger/5.1.-APB-master-and-slave-for-writing-and-reading,716671961,SystemVerilog,5.1.-APB-master-and-slave-for-writing-and-reading,11,0,2024-01-26 10:30:38+00:00,[],
14880,https://github.com/dhanasekarp03/axi_team_task.git,2023-11-30 11:09:18+00:00,,0,dhanasekarp03/axi_team_task,725541584,SystemVerilog,axi_team_task,66,0,2024-01-29 07:12:36+00:00,[],
14881,https://github.com/MahmouodMagdi/Memory-System-Verilog-Class-based-Testing-Environment.git,2023-11-09 23:52:09+00:00,A SystemVerilog Class-Based Testing Environment to test 32*32 Memory Design ,0,MahmouodMagdi/Memory-System-Verilog-Class-based-Testing-Environment,716816745,SystemVerilog,Memory-System-Verilog-Class-based-Testing-Environment,38,0,2024-02-03 12:01:53+00:00,[],
14882,https://github.com/SREE1949/FV.git,2023-11-21 15:00:07+00:00,,0,SREE1949/FV,721682068,SystemVerilog,FV,594,0,2023-12-20 18:16:41+00:00,[],
14883,https://github.com/khktseng/HE-acceleration.git,2023-11-21 05:46:49+00:00,,0,khktseng/HE-acceleration,721465861,SystemVerilog,HE-acceleration,32,0,2024-02-19 18:59:15+00:00,[],
14884,https://github.com/Tonr01/Arithmetic-Expression-Calculator.git,2023-11-11 11:07:31+00:00,,0,Tonr01/Arithmetic-Expression-Calculator,717394976,SystemVerilog,Arithmetic-Expression-Calculator,1369,0,2023-11-11 11:08:37+00:00,[],
14885,https://github.com/SeamusXie03/Simple_iPod.git,2023-11-12 07:28:08+00:00,,0,SeamusXie03/Simple_iPod,717671150,SystemVerilog,Simple_iPod,49919,0,2023-11-12 07:48:35+00:00,[],
14886,https://github.com/Srivathsa2304/git.git,2023-11-16 07:18:37+00:00,,0,Srivathsa2304/git,719444973,SystemVerilog,git,0,0,2023-11-16 07:20:33+00:00,[],
14887,https://github.com/jastikai/Digital-Techniques-2.git,2023-11-16 13:33:08+00:00,"Complete lab work files and course project CPU design in SystemVerilog from Digital Techniques 2 course of University of Oulu, fall semester 2023.",0,jastikai/Digital-Techniques-2,719584417,SystemVerilog,Digital-Techniques-2,58,0,2023-11-16 13:38:24+00:00,[],
14888,https://github.com/BrunoGaribaldi/Arquitectura-de-computadoras-1.git,2023-11-17 13:38:44+00:00,,0,BrunoGaribaldi/Arquitectura-de-computadoras-1,720055376,SystemVerilog,Arquitectura-de-computadoras-1,9,0,2023-11-17 13:42:47+00:00,[],
14889,https://github.com/Amr-Ahmed-Elmasry/Pipleine-Processor.git,2023-11-18 14:31:21+00:00,,0,Amr-Ahmed-Elmasry/Pipleine-Processor,720452177,SystemVerilog,Pipleine-Processor,3295,0,2023-11-18 14:40:18+00:00,[],
14890,https://github.com/Lauti00/Arquitectura-1.git,2023-11-19 16:59:04+00:00,,0,Lauti00/Arquitectura-1,720807303,SystemVerilog,Arquitectura-1,11497,0,2023-11-19 17:01:46+00:00,[],
14891,https://github.com/verificationcodewithpriya/Single-port-RAM-testbench.git,2023-11-20 17:59:53+00:00,verification code of Single port RAM in system Verilog  with scoreboard checker and functional coverage. ,0,verificationcodewithpriya/Single-port-RAM-testbench,721272925,SystemVerilog,Single-port-RAM-testbench,8,0,2023-11-20 18:00:41+00:00,[],
14892,https://github.com/Noah-DuVal/ECE-385---Digital-Systems-Laboratory.git,2023-11-21 01:01:02+00:00,,0,Noah-DuVal/ECE-385---Digital-Systems-Laboratory,721392244,SystemVerilog,ECE-385---Digital-Systems-Laboratory,26249,0,2023-11-21 01:11:44+00:00,[],
14893,https://github.com/eduard-gp/ahb2wb_bridge.git,2023-11-24 12:01:03+00:00,,0,eduard-gp/ahb2wb_bridge,722982495,SystemVerilog,ahb2wb_bridge,15,0,2023-11-24 12:01:25+00:00,[],
14894,https://github.com/Nramand/RISCV_RV32I.git,2023-12-15 13:25:48+00:00,RISCV 32 bit processor ,0,Nramand/RISCV_RV32I,732033190,SystemVerilog,RISCV_RV32I,18,0,2023-12-15 15:53:46+00:00,[],https://api.github.com/licenses/gpl-3.0
14895,https://github.com/chaoqun-liang/eth-idma.git,2023-11-30 21:53:46+00:00,,0,chaoqun-liang/eth-idma,725787974,SystemVerilog,eth-idma,83,0,2023-12-24 00:25:50+00:00,[],https://api.github.com/licenses/mit
14896,https://github.com/YoussefNasser11/UVM-for-Inferred_Single_Port_Memory.git,2023-12-09 01:52:31+00:00,,0,YoussefNasser11/UVM-for-Inferred_Single_Port_Memory,729359101,SystemVerilog,UVM-for-Inferred_Single_Port_Memory,10,0,2023-12-09 01:52:50+00:00,[],
14897,https://github.com/monistode/ISA_accum.git,2023-12-03 07:45:12+00:00,,0,monistode/ISA_accum,726726094,SystemVerilog,ISA_accum,34773,0,2023-12-03 07:45:40+00:00,[],
14898,https://github.com/vakeesank99/Matrix_multiplication_ip.git,2023-12-16 11:55:40+00:00,This is matrix multiplication ip for vivado 2018.3 design flow using zybo board. you can find both verilog and SDK files here,0,vakeesank99/Matrix_multiplication_ip,732353782,SystemVerilog,Matrix_multiplication_ip,251,0,2023-12-16 12:05:36+00:00,[],
14899,https://github.com/Fatim-Sohail/RISC-V-CSR.git,2023-12-03 19:27:19+00:00,,0,Fatim-Sohail/RISC-V-CSR,726918734,SystemVerilog,RISC-V-CSR,145,0,2023-12-03 19:28:50+00:00,[],
14900,https://github.com/gautamkhatik/ALU.git,2023-12-11 06:46:19+00:00,,0,gautamkhatik/ALU,730078210,SystemVerilog,ALU,31,0,2023-12-11 07:32:13+00:00,[],
14901,https://github.com/James-Jagielski/cyclic-codes.git,2023-12-07 15:53:55+00:00,,0,James-Jagielski/cyclic-codes,728747811,SystemVerilog,cyclic-codes,2,0,2023-12-07 15:55:55+00:00,[],
14902,https://github.com/davidepanzino/LAB3A_DeepLearning.git,2023-12-05 12:32:54+00:00,,1,davidepanzino/LAB3A_DeepLearning,727715106,SystemVerilog,LAB3A_DeepLearning,30132,0,2023-12-05 12:38:08+00:00,[],
14903,https://github.com/DemetrioGurgel/ULA_project.git,2023-12-13 20:41:28+00:00,Este repositório abriga o design e a descrição em SystemVerilog para uma Unidade Lógica Aritmética (ULA) de 8 bits. ,0,DemetrioGurgel/ULA_project,731326094,SystemVerilog,ULA_project,2,0,2023-12-13 20:45:04+00:00,[],
14904,https://github.com/abhaytiwari10/assignment.git,2023-12-13 18:25:33+00:00,assignment,0,abhaytiwari10/assignment,731282781,SystemVerilog,assignment,5,0,2023-12-13 18:26:37+00:00,[],
14905,https://github.com/anlit75/SV-TBLab.git,2023-11-08 05:38:04+00:00,SystemVerilog Testbench Workshop Lab,0,anlit75/SV-TBLab,715927157,SystemVerilog,SV-TBLab,28519,0,2023-12-14 14:46:25+00:00,[],
14906,https://github.com/devadutt-github/ANN-in-FPGA.git,2023-12-09 04:50:26+00:00,,0,devadutt-github/ANN-in-FPGA,729391720,SystemVerilog,ANN-in-FPGA,104,0,2023-12-09 04:54:05+00:00,[],
14907,https://github.com/kitune-san/KF6845.git,2023-11-26 14:22:01+00:00,[WIP] 6845-like CRT Controller written in SystemVerilog,0,kitune-san/KF6845,723706464,SystemVerilog,KF6845,44,0,2023-11-26 14:25:47+00:00,[],https://api.github.com/licenses/mit
14908,https://github.com/javi-18/USM-ARQUI.git,2023-12-08 20:59:52+00:00,Repositorio del ramo Arquitectura y Organización de Computadores,0,javi-18/USM-ARQUI,729299895,SystemVerilog,USM-ARQUI,565,0,2024-01-24 20:35:22+00:00,[],
14909,https://github.com/Maani02/AXI_Testbench.git,2023-12-15 06:27:29+00:00,,1,Maani02/AXI_Testbench,731899647,SystemVerilog,AXI_Testbench,9343,0,2023-12-15 11:03:07+00:00,[],
14911,https://github.com/CsehPeter/Sylox.git,2023-11-16 17:24:26+00:00,,0,CsehPeter/Sylox,719682336,SystemVerilog,Sylox,327,0,2024-02-10 23:24:55+00:00,[],
14912,https://github.com/ika-musume/IKA87AD.git,2023-12-12 18:20:28+00:00,"A BSD-licensed NEC uCOM87AD Verilog core, especially for the uPD78C11 in the Taito C-Chip",0,ika-musume/IKA87AD,730813624,SystemVerilog,IKA87AD,1053,0,2024-04-08 08:36:09+00:00,[],
14913,https://github.com/BlacksmithsHammer/some_good_tasks.git,2023-12-11 02:05:34+00:00,,0,BlacksmithsHammer/some_good_tasks,730009764,SystemVerilog,some_good_tasks,81,0,2024-02-20 11:17:09+00:00,[],
14914,https://github.com/MrDoomsday/Avalon.git,2023-11-17 12:56:03+00:00,,0,MrDoomsday/Avalon,720038597,SystemVerilog,Avalon,10,0,2023-11-17 13:00:09+00:00,[],
14915,https://github.com/PathNaresh/SV_UVM_TestBench_-ALU.git,2023-11-16 17:51:44+00:00,Basic level to understand the SV_UVM Test-Bench,0,PathNaresh/SV_UVM_TestBench_-ALU,719693936,SystemVerilog,SV_UVM_TestBench_-ALU,28,0,2023-11-16 18:08:33+00:00,[],
14916,https://github.com/VacheBarkhanajyan/combinational_adder.git,2023-11-28 16:12:27+00:00,,0,VacheBarkhanajyan/combinational_adder,724703387,SystemVerilog,combinational_adder,5,0,2023-11-28 16:34:23+00:00,[],
14917,https://github.com/vishalvp123/Asynchronous-FIFO-Verification.git,2023-11-29 14:16:49+00:00,Verification of Asynchronous FIFO with UVM,0,vishalvp123/Asynchronous-FIFO-Verification,725138640,SystemVerilog,Asynchronous-FIFO-Verification,20,0,2023-11-29 14:18:14+00:00,[],
14918,https://github.com/joe82512/SystemVerilog.git,2023-11-26 14:36:29+00:00,SystemVerilog Practice,0,joe82512/SystemVerilog,723710710,SystemVerilog,SystemVerilog,137,0,2023-11-26 14:49:00+00:00,[],
14919,https://github.com/JakobFinci/VerilogGoodies.git,2023-11-14 04:05:44+00:00,"Goodies to Showcase the SystemsVerilog Skills of Myself and My Amazing Friend and Lab Partner, Albert.",0,JakobFinci/VerilogGoodies,718433860,SystemVerilog,VerilogGoodies,86,0,2023-11-14 04:34:14+00:00,[],https://api.github.com/licenses/agpl-3.0
14920,https://github.com/alanlicz/EE271.git,2023-12-01 10:04:15+00:00,,0,alanlicz/EE271,725994952,SystemVerilog,EE271,62492,0,2023-12-01 10:04:31+00:00,[],
14921,https://github.com/codevenktures/myCPU.git,2023-12-05 06:29:03+00:00,,0,codevenktures/myCPU,727578706,SystemVerilog,myCPU,6,0,2023-12-05 06:31:02+00:00,[],
14922,https://github.com/EthChil/SV_AOC_23.git,2023-12-01 05:31:52+00:00,Attempt at a fully synthesizeable advent of code for 2023,0,EthChil/SV_AOC_23,725902633,SystemVerilog,SV_AOC_23,1043,0,2023-12-02 03:17:31+00:00,[],
14923,https://github.com/June611/Systemverilog.git,2023-11-18 12:28:50+00:00,,0,June611/Systemverilog,720417519,SystemVerilog,Systemverilog,38395,0,2023-11-22 01:50:33+00:00,[],
14924,https://github.com/KaiRoy/ece571-riscv-sv-conversion.git,2023-11-17 02:32:39+00:00,Project attempting to convert  yanyan2060's risc-v implementation from verilog to systemverilog,2,KaiRoy/ece571-riscv-sv-conversion,719843198,SystemVerilog,ece571-riscv-sv-conversion,186,0,2023-11-19 20:03:12+00:00,[],
14925,https://github.com/ani171/Adder_layered_tb.git,2023-12-09 13:17:20+00:00,,0,ani171/Adder_layered_tb,729511942,SystemVerilog,Adder_layered_tb,2778,0,2023-12-09 13:17:42+00:00,[],
14926,https://github.com/SirSdyro/ProjetoFinal-LCL.git,2023-12-02 18:03:05+00:00,,0,SirSdyro/ProjetoFinal-LCL,726553653,SystemVerilog,ProjetoFinal-LCL,47,0,2023-12-11 01:59:51+00:00,[],
14927,https://github.com/varunghat/atmt-assignment-5.git,2023-12-11 18:17:51+00:00,,0,varunghat/atmt-assignment-5,730348362,SystemVerilog,atmt-assignment-5,30033,0,2023-12-12 08:14:45+00:00,[],https://api.github.com/licenses/mit
14928,https://github.com/dachariy/Vend2.git,2023-12-12 21:01:26+00:00,,0,dachariy/Vend2,730865236,SystemVerilog,Vend2,367,0,2023-12-12 21:02:43+00:00,[],
14929,https://github.com/yassinelkashef/Systolic-Matrix-Multiplier-3x3.git,2023-11-16 18:41:50+00:00,Systolic Matrix Multiplier 3x3,0,yassinelkashef/Systolic-Matrix-Multiplier-3x3,719714154,SystemVerilog,Systolic-Matrix-Multiplier-3x3,8,0,2023-11-16 18:45:38+00:00,[],
14930,https://github.com/Samcooper01/551PROJECT.git,2023-12-06 16:01:31+00:00,551 final project,1,Samcooper01/551PROJECT,728282695,SystemVerilog,551PROJECT,291,0,2023-12-06 16:15:24+00:00,[],
14931,https://github.com/AnuragMalwee/spmm_gh.git,2023-11-30 22:13:25+00:00,,0,AnuragMalwee/spmm_gh,725793335,SystemVerilog,spmm_gh,256,0,2023-12-13 21:08:07+00:00,[],
14932,https://github.com/rgantonio/snitch_cluster_rebase.git,2023-12-13 09:09:43+00:00,,0,rgantonio/snitch_cluster_rebase,731057128,SystemVerilog,snitch_cluster_rebase,2822,0,2023-12-13 09:11:07+00:00,[],https://api.github.com/licenses/apache-2.0
14933,https://github.com/shrutigarg914/SIFTPGA.git,2023-11-08 23:50:54+00:00,SIFT implementation for an FPGA,0,shrutigarg914/SIFTPGA,716341727,SystemVerilog,SIFTPGA,49552,0,2023-11-09 00:04:58+00:00,[],https://api.github.com/licenses/mit
14934,https://github.com/dubeyvin12070089/tutorial_git_github.git,2023-12-12 18:52:53+00:00,Learning how to link git repo to github,0,dubeyvin12070089/tutorial_git_github,730824908,SystemVerilog,tutorial_git_github,7,0,2023-12-12 19:07:26+00:00,[],
14935,https://github.com/AyanaAlemayehu/FPGA-QRCode-Reader.git,2023-11-15 01:52:08+00:00,FPGA based QR code scanning,0,AyanaAlemayehu/FPGA-QRCode-Reader,718888265,SystemVerilog,FPGA-QRCode-Reader,3019,0,2023-12-09 22:03:41+00:00,[],https://api.github.com/licenses/mit
14936,https://github.com/jgr1024/240D_softmax.git,2023-12-16 02:49:54+00:00,,0,jgr1024/240D_softmax,732239984,SystemVerilog,240D_softmax,150,0,2023-12-16 03:44:36+00:00,[],
14937,https://github.com/ChungKee/Ayschronous_FIFO_Assertion_UVM.git,2023-12-05 04:39:19+00:00,,0,ChungKee/Ayschronous_FIFO_Assertion_UVM,727547486,SystemVerilog,Ayschronous_FIFO_Assertion_UVM,25,0,2023-12-17 13:32:19+00:00,[],
14938,https://github.com/YKengo1224/rab4-submit.git,2023-11-24 06:35:30+00:00,,0,YKengo1224/rab4-submit,722870348,SystemVerilog,rab4-submit,19,0,2023-11-24 06:42:02+00:00,[],
14939,https://github.com/AnastasiaKurakina/laboratory-works-computer-aided-design-systems.git,2023-11-10 15:21:18+00:00,"лабораторные работы по учебной дисциплине ""автоматизация проектирования"" студентки уч. гр. М3О-309Б-21 Куракиной А.С.",0,AnastasiaKurakina/laboratory-works-computer-aided-design-systems,717109289,SystemVerilog,laboratory-works-computer-aided-design-systems,17,0,2023-12-11 10:44:34+00:00,[],
14940,https://github.com/TheGreatGitsby/rtl_blocks.git,2023-12-16 15:52:15+00:00,Common reuse structures,0,TheGreatGitsby/rtl_blocks,732416264,SystemVerilog,rtl_blocks,10,0,2023-12-28 02:22:42+00:00,[],https://api.github.com/licenses/apache-2.0
14941,https://github.com/AtharvaPan265/DSD_LAB4.git,2023-11-15 06:12:54+00:00,,0,AtharvaPan265/DSD_LAB4,718955711,SystemVerilog,DSD_LAB4,144,0,2023-11-15 06:13:41+00:00,[],
14942,https://github.com/basilm4r0/haraka-s-hdl.git,2023-12-14 15:34:54+00:00,An implementation of the Haraka S hash function in Verilog.,0,basilm4r0/haraka-s-hdl,731665087,SystemVerilog,haraka-s-hdl,18,0,2023-12-16 14:39:37+00:00,[],
14943,https://github.com/Juan-Gg/cva6_labs_1.git,2023-12-05 11:52:46+00:00,Repository to work on sifferman/labs-with-cva6,0,Juan-Gg/cva6_labs_1,727699498,SystemVerilog,cva6_labs_1,308,0,2024-02-16 10:16:15+00:00,[],https://api.github.com/licenses/bsd-3-clause
14944,https://github.com/AzazHassankhan/VerilogUtilitySuite.git,2023-12-14 19:51:12+00:00,"VerilogUtilitySuite 🚀 Welcome to our SystemVerilog playground! 🤖 Dive into the world of hardware description language (HDL) with our repository, where RTL designs meet creativity.",0,AzazHassankhan/VerilogUtilitySuite,731753144,SystemVerilog,VerilogUtilitySuite,31,0,2024-02-04 17:36:40+00:00,"['circuit', 'component-architecture', 'systemverilog', 'verilog']",
14945,https://github.com/astrakhov-design/FRRD.git,2023-12-02 19:50:55+00:00,Functional Verification Referece Documentation,0,astrakhov-design/FRRD,726586763,SystemVerilog,FRRD,4,0,2024-02-22 22:36:29+00:00,[],
14946,https://github.com/cristiancristea00/fv-project.git,2023-11-16 19:35:55+00:00,Functional Verification Project,0,cristiancristea00/fv-project,719732772,SystemVerilog,fv-project,13843,0,2024-02-28 07:48:39+00:00,[],
14947,https://github.com/Katanehh/ece385.git,2023-11-12 10:39:18+00:00,Fall 2023 ECE 385 Projects,0,Katanehh/ece385,717709436,SystemVerilog,ece385,1393,0,2024-03-21 21:04:22+00:00,[],
14948,https://github.com/Konf/audio_synth_practice.git,2023-11-08 11:28:15+00:00,,3,Konf/audio_synth_practice,716055448,SystemVerilog,audio_synth_practice,580,0,2023-11-09 11:01:20+00:00,[],
14949,https://github.com/Ali-Mokhtar02/Parameterized-UART-Verilog.git,2023-11-12 13:18:12+00:00,Parameterized UART TX & RX with BAUD Generator Verilog Codes,0,Ali-Mokhtar02/Parameterized-UART-Verilog,717747577,SystemVerilog,Parameterized-UART-Verilog,7,0,2023-11-12 13:25:56+00:00,[],
14950,https://github.com/Ankit7595/APB-Memory-Verification.git,2023-11-13 14:10:01+00:00,APB Memory Verification Through UVM,0,Ankit7595/APB-Memory-Verification,718161872,SystemVerilog,APB-Memory-Verification,410,0,2023-11-13 14:11:47+00:00,[],
14951,https://github.com/PrabhatChowdhary/SystemVerilog.git,2023-11-14 08:37:08+00:00,,0,PrabhatChowdhary/SystemVerilog,718514170,SystemVerilog,SystemVerilog,9,0,2023-11-14 08:39:58+00:00,[],
14952,https://github.com/C1ndyJS/ArqCompu_IS614_UTP.git,2023-11-19 03:17:26+00:00,,0,C1ndyJS/ArqCompu_IS614_UTP,720619501,SystemVerilog,ArqCompu_IS614_UTP,99,0,2023-11-19 03:19:57+00:00,[],
14953,https://github.com/CalgaryISH/DAC_2024.git,2023-11-16 03:30:20+00:00,,0,CalgaryISH/DAC_2024,719383322,SystemVerilog,DAC_2024,214,0,2023-11-16 17:55:36+00:00,[],
14954,https://github.com/PrabhatChowdhary/SystemVerilog-verification.git,2023-11-18 16:09:31+00:00,,0,PrabhatChowdhary/SystemVerilog-verification,720480978,SystemVerilog,SystemVerilog-verification,2,0,2023-11-18 16:10:01+00:00,[],
14955,https://github.com/sid-anand98/Verification-of-UART-in-UVM.git,2023-11-22 22:14:23+00:00,,0,sid-anand98/Verification-of-UART-in-UVM,722319085,SystemVerilog,Verification-of-UART-in-UVM,12,0,2023-11-22 22:34:29+00:00,[],
14956,https://github.com/Taranehhhhhhhh/Lab-6-.git,2023-11-18 20:22:26+00:00,,0,Taranehhhhhhhh/Lab-6-,720548455,SystemVerilog,Lab-6-,32,0,2023-11-18 20:29:25+00:00,[],
14957,https://github.com/verificationcodewithpriya/UVM-TB-for-DUAL-Port-RAM.git,2023-11-27 14:08:18+00:00,verification code of DUAL Port RAM in UVM with scoreboard checker and functional coverage. ,0,verificationcodewithpriya/UVM-TB-for-DUAL-Port-RAM,724156523,SystemVerilog,UVM-TB-for-DUAL-Port-RAM,13,0,2023-11-27 14:09:48+00:00,[],
14958,https://github.com/01sharanshetty/FIFO_UVM_FINAL_WITH_SUBSCRIBER_EDA-QUESTA.git,2023-12-02 13:50:14+00:00,,1,01sharanshetty/FIFO_UVM_FINAL_WITH_SUBSCRIBER_EDA-QUESTA,726469634,SystemVerilog,FIFO_UVM_FINAL_WITH_SUBSCRIBER_EDA-QUESTA,10635,0,2023-12-02 15:00:41+00:00,[],
14959,https://github.com/SinsIsHere/gcm.git,2023-11-21 15:44:38+00:00,,1,SinsIsHere/gcm,721701513,SystemVerilog,gcm,19,0,2023-11-21 15:46:01+00:00,[],
14960,https://github.com/AfifSiddiqi/RV32I-Pipelined.git,2023-12-04 18:05:40+00:00,,0,AfifSiddiqi/RV32I-Pipelined,727364095,SystemVerilog,RV32I-Pipelined,1052,0,2023-12-09 17:42:02+00:00,[],
14961,https://github.com/YoussefNasser11/Systolic-Array.git,2023-12-09 00:48:13+00:00,,0,YoussefNasser11/Systolic-Array,729347350,SystemVerilog,Systolic-Array,8,0,2023-12-09 00:49:30+00:00,[],
14962,https://github.com/alokvishwa10/Design-and-Verification-of-SPI-protocol.git,2023-12-06 01:49:35+00:00,Design and Verification of SPI protocol,0,alokvishwa10/Design-and-Verification-of-SPI-protocol,727988719,SystemVerilog,Design-and-Verification-of-SPI-protocol,4,0,2023-12-06 01:51:50+00:00,[],
14963,https://github.com/AnastasiaKurakina/LR2_SAPR.git,2023-12-10 12:27:55+00:00,"лабораторная работа №2 по предмету ""Автоматизация проектирования""  студентки уч. гр. М3О-309Б-21 Куракиной А. С.",0,AnastasiaKurakina/LR2_SAPR,729807686,SystemVerilog,LR2_SAPR,7,0,2023-12-10 12:40:17+00:00,[],
14964,https://github.com/yiniwa/atmt_2023_assignment5.git,2023-12-12 12:52:59+00:00,,0,yiniwa/atmt_2023_assignment5,730680290,SystemVerilog,atmt_2023_assignment5,30255,0,2023-12-12 13:06:15+00:00,[],
14965,https://github.com/ibrahim11235/UVM-PROJECT.git,2023-12-13 03:08:51+00:00,,0,ibrahim11235/UVM-PROJECT,730950808,SystemVerilog,UVM-PROJECT,13,0,2023-12-13 03:13:56+00:00,[],
14966,https://github.com/3bdumhrous/ITI-Graduation-Project.git,2023-12-13 12:31:02+00:00,Multi-Mode ALU with Interrupt Support (Verification) full abstract calss-based environment UVM mapping ,0,3bdumhrous/ITI-Graduation-Project,731133028,SystemVerilog,ITI-Graduation-Project,2268,0,2023-12-13 12:40:11+00:00,[],
14968,https://github.com/SV-UVM-Enthusiast/UVM_Projects.git,2023-11-15 11:07:54+00:00,,0,SV-UVM-Enthusiast/UVM_Projects,719057895,SystemVerilog,UVM_Projects,68,0,2023-11-15 11:43:18+00:00,[],
14969,https://github.com/I-am-MIN/verilog-2023.git,2023-11-12 14:09:34+00:00,,0,I-am-MIN/verilog-2023,717761201,SystemVerilog,verilog-2023,6,0,2023-11-13 01:46:59+00:00,[],
14970,https://github.com/MicRaj/DSDCoursework.git,2023-11-27 15:15:59+00:00,Digital Systems Design Coursework,0,MicRaj/DSDCoursework,724187966,SystemVerilog,DSDCoursework,41546,0,2023-12-22 17:21:56+00:00,[],
14971,https://github.com/RaviduHM99/RoXXon-MVM.git,2023-12-12 15:03:42+00:00,,0,RaviduHM99/RoXXon-MVM,730736022,SystemVerilog,RoXXon-MVM,10,0,2023-12-26 03:07:01+00:00,[],
14972,https://github.com/flowlikee/smallcode.git,2023-11-29 05:55:23+00:00,包含了各种代码片段,0,flowlikee/smallcode,724951051,SystemVerilog,smallcode,11,0,2023-12-22 08:41:01+00:00,[],
14973,https://github.com/HanaYuki399/Bf_16_accelerator.git,2023-12-06 12:05:33+00:00,,0,HanaYuki399/Bf_16_accelerator,728182932,SystemVerilog,Bf_16_accelerator,227,0,2024-01-19 07:16:20+00:00,[],
14974,https://github.com/MobinaMhr/Computer-Aided-Design-F2024.git,2023-11-29 16:02:52+00:00,CAD course projects in the Fall semester of the University of Tehran under the supervision of Dr.Modarresi. ,0,MobinaMhr/Computer-Aided-Design-F2024,725185643,SystemVerilog,Computer-Aided-Design-F2024,48353,0,2024-02-06 17:50:46+00:00,[],https://api.github.com/licenses/mit
14975,https://github.com/The-Chairman/MESTPro.git,2023-11-14 14:53:13+00:00,,1,The-Chairman/MESTPro,718665043,SystemVerilog,MESTPro,101,0,2023-12-26 16:16:55+00:00,[],
14976,https://github.com/Shuregg/spi-master-example.git,2023-12-02 08:16:08+00:00,SPI-Master Controller example + peripheral devices simulation,0,Shuregg/spi-master-example,726382394,SystemVerilog,spi-master-example,4336,0,2024-03-30 19:50:29+00:00,"['interface', 'rtl', 'spi', 'spi-master']",
14977,https://github.com/HipEx15/Verilog_FIFO_LIFO.git,2023-11-13 11:04:38+00:00,,0,HipEx15/Verilog_FIFO_LIFO,718090010,SystemVerilog,Verilog_FIFO_LIFO,5,0,2023-11-13 11:04:57+00:00,[],
14978,https://github.com/rodrigo-breia-lopes/rv32i.git,2023-11-15 23:03:47+00:00,,0,rodrigo-breia-lopes/rv32i,719317626,SystemVerilog,rv32i,11,0,2023-11-15 23:04:48+00:00,[],
14979,https://github.com/tiziberto/proyectoarqui.git,2023-11-16 22:19:37+00:00,Proyecto Integrador Arquitectura En Computadoras 1,0,tiziberto/proyectoarqui,719782005,SystemVerilog,proyectoarqui,25,0,2023-11-16 22:19:53+00:00,[],
14980,https://github.com/verificationcodewithpriya/SYNCHRONOUS-FIFO-testbench.git,2023-11-20 17:46:42+00:00,verification code of Synchronous fifo in system Verilog  with scoreboard checker and functional coverage. ,0,verificationcodewithpriya/SYNCHRONOUS-FIFO-testbench,721268120,SystemVerilog,SYNCHRONOUS-FIFO-testbench,9,0,2023-11-20 17:47:43+00:00,[],
14981,https://github.com/PurvinTalati/RP2040-Verilog-Design.git,2023-11-17 02:58:29+00:00,,1,PurvinTalati/RP2040-Verilog-Design,719849663,SystemVerilog,RP2040-Verilog-Design,19,0,2023-11-17 03:34:16+00:00,[],
14982,https://github.com/huynguyendinhhcmut/ex5-Lab2-Intro-to-Computing.git,2023-11-25 05:52:13+00:00,,0,huynguyendinhhcmut/ex5-Lab2-Intro-to-Computing,723268368,SystemVerilog,ex5-Lab2-Intro-to-Computing,391,0,2023-11-25 06:16:04+00:00,[],
14983,https://github.com/huynguyendinhhcmut/ex4-Lab2-Intro-to-Computing.git,2023-11-25 05:49:12+00:00,,0,huynguyendinhhcmut/ex4-Lab2-Intro-to-Computing,723267742,SystemVerilog,ex4-Lab2-Intro-to-Computing,396,0,2023-11-25 06:15:31+00:00,[],
14984,https://github.com/aravChamp/bkupNachi2.git,2023-11-28 15:49:09+00:00,,0,aravChamp/bkupNachi2,724693604,SystemVerilog,bkupNachi2,1042,0,2023-11-28 15:50:05+00:00,[],
14985,https://github.com/shoaibahmed1085/CRCU.git,2023-11-29 05:40:23+00:00,Clock and Reset Control Unit (CRCU) repo for RTL code ,0,shoaibahmed1085/CRCU,724946985,SystemVerilog,CRCU,946,0,2023-11-29 05:41:55+00:00,[],
14986,https://github.com/alokvishwa10/Design-and-Verification-of-UART-protocol.git,2023-12-06 01:57:03+00:00,,0,alokvishwa10/Design-and-Verification-of-UART-protocol,727990583,SystemVerilog,Design-and-Verification-of-UART-protocol,11,0,2023-12-06 01:58:50+00:00,[],
14987,https://github.com/peacewang017/RISC-V_CPU-VGA.git,2023-11-09 14:12:17+00:00,,0,peacewang017/RISC-V_CPU-VGA,716618114,SystemVerilog,RISC-V_CPU-VGA,47572,0,2023-11-15 05:27:24+00:00,[],
14989,https://github.com/mansithakare123/GaussianSampler.git,2023-11-28 21:48:48+00:00,,0,mansithakare123/GaussianSampler,724826468,SystemVerilog,GaussianSampler,5,0,2023-11-28 21:51:11+00:00,[],
14990,https://github.com/KING-VA/Bringup-EE194.git,2023-12-11 00:38:47+00:00,Files for Bringup -- Still super messy (will clean up later),0,KING-VA/Bringup-EE194,729992841,SystemVerilog,Bringup-EE194,248944,0,2023-12-11 00:47:39+00:00,[],
14991,https://github.com/TipsterTrickster/ECE275PongProject.git,2023-11-20 19:57:09+00:00,,0,TipsterTrickster/ECE275PongProject,721313988,SystemVerilog,ECE275PongProject,38,0,2023-11-20 21:51:39+00:00,[],
14992,https://github.com/lightcharm/SPI_master.git,2023-12-09 19:18:23+00:00,Code of the SPI interface on the verilog,0,lightcharm/SPI_master,729610594,SystemVerilog,SPI_master,32,0,2023-12-09 19:19:02+00:00,[],https://api.github.com/licenses/mit
14993,https://github.com/nic-day/Final-Project.git,2023-11-15 21:34:17+00:00,Repository for the Final Project,0,nic-day/Final-Project,719294132,SystemVerilog,Final-Project,6542,0,2023-12-07 20:29:03+00:00,[],
14994,https://github.com/ayesha-akhter/SystemVerilog.git,2023-12-11 17:40:18+00:00,,0,ayesha-akhter/SystemVerilog,730334043,SystemVerilog,SystemVerilog,10347,0,2023-12-11 17:54:34+00:00,[],https://api.github.com/licenses/isc
14995,https://github.com/jayanta1996/axis_fifo.git,2023-12-01 18:22:19+00:00,FIFO with AXI stream interface,0,jayanta1996/axis_fifo,726191279,SystemVerilog,axis_fifo,9,0,2023-12-01 18:24:46+00:00,[],
14996,https://github.com/vishalvp123/Interview-Question-on-duty-cycle.git,2023-12-05 05:22:37+00:00,"Write a code to generate clock with random duty cycle between 10% and 80% for each clock cycle, the clock period should be same for each cycle and the clock period should parameterized.",0,vishalvp123/Interview-Question-on-duty-cycle,727559059,SystemVerilog,Interview-Question-on-duty-cycle,112,0,2023-12-05 05:37:47+00:00,[],
14997,https://github.com/Kevin-Caldwell/SimpleProcessor.git,2023-11-14 23:58:07+00:00,,0,Kevin-Caldwell/SimpleProcessor,718860543,SystemVerilog,SimpleProcessor,618,0,2023-11-14 23:58:48+00:00,[],
14998,https://github.com/sjb565/Fpgesture-controlled-video-enhancement.git,2023-12-15 01:43:54+00:00,,0,sjb565/Fpgesture-controlled-video-enhancement,731832867,SystemVerilog,Fpgesture-controlled-video-enhancement,17304,0,2023-12-16 03:23:04+00:00,[],
14999,https://github.com/WittenYeh/RUC-Core.git,2023-12-03 12:24:24+00:00,,0,WittenYeh/RUC-Core,726793019,SystemVerilog,RUC-Core,60,0,2023-12-04 14:34:36+00:00,[],
15000,https://github.com/flipnoteman/6502_FPGA.git,2023-12-04 22:20:20+00:00,ZedBoard,0,flipnoteman/6502_FPGA,727452369,SystemVerilog,6502_FPGA,7103,0,2023-12-15 02:08:56+00:00,[],
15001,https://github.com/OYounis/RiVET.git,2023-11-11 20:17:30+00:00,,0,OYounis/RiVET,717552495,SystemVerilog,RiVET,24,0,2024-01-07 00:11:37+00:00,[],
15002,https://github.com/jesseVernallis/simplified_sha256.git,2023-11-22 21:56:40+00:00,,0,jesseVernallis/simplified_sha256,722314760,SystemVerilog,simplified_sha256,130,0,2024-01-11 02:00:52+00:00,[],
15003,https://github.com/mladenilic23/FV.git,2023-11-23 12:19:29+00:00,,0,mladenilic23/FV,722563032,SystemVerilog,FV,24,0,2024-01-03 13:28:43+00:00,[],
15004,https://github.com/ncppd/snitch-u280.git,2023-11-27 14:34:56+00:00,,0,ncppd/snitch-u280,724168955,SystemVerilog,snitch-u280,11564,0,2023-11-27 14:44:47+00:00,[],https://api.github.com/licenses/apache-2.0
15005,https://github.com/mingo99/CU33.git,2023-11-16 08:02:21+00:00,,0,mingo99/CU33,719459412,SystemVerilog,CU33,58,0,2023-11-16 08:24:41+00:00,[],
15006,https://github.com/MahdiNoori2003/Computer-Aided-Design-Course.git,2023-12-14 08:33:47+00:00,Implementation of MaxNet and CNN in a hardware manner using Verilog and SystemVerilog.,0,MahdiNoori2003/Computer-Aided-Design-Course,731506683,SystemVerilog,Computer-Aided-Design-Course,27160,0,2024-02-05 18:44:40+00:00,[],https://api.github.com/licenses/mit
15007,https://github.com/guanning03/ComputerOrganizationLab.git,2023-11-14 03:18:22+00:00,Computer Organization 2023Fall,0,guanning03/ComputerOrganizationLab,718421976,SystemVerilog,ComputerOrganizationLab,8359,0,2024-02-10 04:23:23+00:00,[],https://api.github.com/licenses/unlicense
15008,https://github.com/JulietaStorino/Computer-Architecture-FaMAF.git,2023-12-04 18:32:40+00:00,,0,JulietaStorino/Computer-Architecture-FaMAF,727374577,SystemVerilog,Computer-Architecture-FaMAF,158,0,2024-03-15 13:47:07+00:00,[],
15009,https://github.com/blavin3/verilator-testing.git,2023-12-09 12:51:59+00:00,Testing Verilator,0,blavin3/verilator-testing,729504993,SystemVerilog,verilator-testing,9,0,2023-12-10 17:30:29+00:00,[],
15010,https://github.com/victoriousll/APB.git,2023-11-15 10:26:44+00:00,,0,victoriousll/APB,719042400,SystemVerilog,APB,10,0,2023-12-06 17:41:49+00:00,[],
15011,https://github.com/SanjaySivalingam/Matrix-Multiplication-with-a-Systolic-Array-Design.git,2023-12-13 22:55:17+00:00,"This is a simple implementation of the matrix multiplication kernel, the heart of parallel processing units like GPUs and TPUs.",0,SanjaySivalingam/Matrix-Multiplication-with-a-Systolic-Array-Design,731359893,SystemVerilog,Matrix-Multiplication-with-a-Systolic-Array-Design,395,0,2023-12-27 16:13:27+00:00,[],
15012,https://github.com/AustinY2430/FPGA-Based-TPU.git,2023-11-20 22:06:52+00:00,Configurable TPU for matrix multiplication,0,AustinY2430/FPGA-Based-TPU,721352084,SystemVerilog,FPGA-Based-TPU,75406,0,2023-11-20 22:16:51+00:00,[],
15014,https://github.com/mmohiudd-m/8_bit_adder_sv.git,2023-11-16 03:41:04+00:00,8_bit_adder_sv ,0,mmohiudd-m/8_bit_adder_sv,719385920,SystemVerilog,8_bit_adder_sv,3,0,2023-11-16 03:46:06+00:00,[],
15015,https://github.com/sihun-chae/uvm-adder.git,2023-11-19 06:33:39+00:00,,0,sihun-chae/uvm-adder,720654434,SystemVerilog,uvm-adder,1,0,2023-11-19 06:34:44+00:00,[],
15016,https://github.com/joonjae/UVM-SystemVerilog.git,2023-11-14 13:15:07+00:00,SystemVerilog & UVM,0,joonjae/UVM-SystemVerilog,718619927,SystemVerilog,UVM-SystemVerilog,32630,0,2023-11-14 13:37:22+00:00,[],
15017,https://github.com/jayasuriya1998/N_bit-_Counter.git,2023-11-21 18:37:39+00:00,,0,jayasuriya1998/N_bit-_Counter,721772232,SystemVerilog,N_bit-_Counter,3,0,2023-11-21 18:42:07+00:00,[],
15018,https://github.com/mohamedtarek54/Memory_UVM.git,2023-11-22 09:07:26+00:00,Full UVM environment to verify a simple memory unit,0,mohamedtarek54/Memory_UVM,722017861,SystemVerilog,Memory_UVM,13,0,2023-11-22 09:08:17+00:00,[],
15019,https://github.com/sid-anand98/Verification-of-UART-Protocol-in-UVM.git,2023-11-22 23:00:14+00:00,,0,sid-anand98/Verification-of-UART-Protocol-in-UVM,722329680,SystemVerilog,Verification-of-UART-Protocol-in-UVM,8,0,2023-11-22 23:02:10+00:00,[],
15020,https://github.com/chandankumar1320/VotingMachine_project.git,2023-11-23 11:31:45+00:00,"The project aims to provide a flexible and modular implementation of a digital voting machine, making it adaptable for different scenarios and requirements.",0,chandankumar1320/VotingMachine_project,722545031,SystemVerilog,VotingMachine_project,339,0,2023-11-23 11:38:52+00:00,[],
15021,https://github.com/flaviens/verilator-b6.git,2023-11-29 14:53:18+00:00,,0,flaviens/verilator-b6,725155272,SystemVerilog,verilator-b6,16,0,2023-11-29 16:27:49+00:00,[],
15022,https://github.com/joacomelli/Practicas-Sistemas-Digitales.git,2023-11-30 18:19:23+00:00,Joaquin Mellibovsky - 103815 - 2C 2023,0,joacomelli/Practicas-Sistemas-Digitales,725717939,SystemVerilog,Practicas-Sistemas-Digitales,4041,0,2023-11-30 18:51:03+00:00,[],
15023,https://github.com/Michael-Henson/Project.git,2023-11-08 21:20:25+00:00,,0,Michael-Henson/Project,716303788,SystemVerilog,Project,189924,0,2023-11-08 22:42:58+00:00,[],https://api.github.com/licenses/mit
15024,https://github.com/smabbas1/MSD_project13.git,2023-11-09 18:34:04+00:00,,0,smabbas1/MSD_project13,716725184,SystemVerilog,MSD_project13,589,0,2023-11-10 18:43:19+00:00,[],
15025,https://github.com/hemanth-VP/axi_master.git,2023-12-05 04:32:34+00:00,,0,hemanth-VP/axi_master,727545747,SystemVerilog,axi_master,5,0,2023-12-05 04:33:13+00:00,[],
15026,https://github.com/Dedorou/DA_filter.git,2023-11-27 19:49:44+00:00,,1,Dedorou/DA_filter,724297143,SystemVerilog,DA_filter,12,0,2023-11-27 20:27:26+00:00,[],
15027,https://github.com/chrli0609/IL2230-Lab3A.git,2023-12-04 14:46:34+00:00,,0,chrli0609/IL2230-Lab3A,727278422,SystemVerilog,IL2230-Lab3A,35,0,2023-12-05 12:59:08+00:00,[],
15028,https://github.com/txxnrd/COSE22205-Computer-Architecture.git,2023-12-11 02:58:20+00:00,,0,txxnrd/COSE22205-Computer-Architecture,730021549,SystemVerilog,COSE22205-Computer-Architecture,3,0,2023-12-11 03:00:32+00:00,[],
15029,https://github.com/yassinelkashef/Design-and-UVM-verification-for-Memory.git,2023-12-12 15:03:40+00:00,Design and UVM verification for Memory,0,yassinelkashef/Design-and-UVM-verification-for-Memory,730736005,SystemVerilog,Design-and-UVM-verification-for-Memory,8,0,2023-12-12 15:32:28+00:00,[],
15030,https://github.com/AtharvaPan265/DSD-lab5.git,2023-12-12 09:52:30+00:00,,0,AtharvaPan265/DSD-lab5,730611083,SystemVerilog,DSD-lab5,8445,0,2023-12-13 09:55:13+00:00,[],
15031,https://github.com/Nalyd1019/DesignOfAISystems.git,2023-12-14 17:05:12+00:00,,0,Nalyd1019/DesignOfAISystems,731699270,SystemVerilog,DesignOfAISystems,9411,0,2023-12-14 17:16:11+00:00,[],
15032,https://github.com/JacobLevinson/189_OoO.git,2023-11-12 23:26:10+00:00,Out of Order RISC-V cpu in SystemVerilog,0,JacobLevinson/189_OoO,717900262,SystemVerilog,189_OoO,272,0,2023-11-13 00:10:17+00:00,[],
15033,https://github.com/PythonLinks/PucCPU.git,2023-12-12 10:12:50+00:00,A register machine CPU being built for the PUC class project.,0,PythonLinks/PucCPU,730619324,SystemVerilog,PucCPU,486,0,2023-12-12 10:28:07+00:00,[],
15034,https://github.com/Srivathsa2304/FIFO_1.git,2023-12-05 09:34:39+00:00,,1,Srivathsa2304/FIFO_1,727645149,SystemVerilog,FIFO_1,19,0,2023-12-05 09:37:19+00:00,[],
15035,https://github.com/theisth/System-Verilog-Lab.git,2023-11-11 15:45:27+00:00,,0,theisth/System-Verilog-Lab,717478999,SystemVerilog,System-Verilog-Lab,481,0,2023-11-11 15:51:45+00:00,[],
15036,https://github.com/2023-Fall-ECE4278/lab8.git,2023-11-13 06:29:24+00:00,,0,2023-Fall-ECE4278/lab8,717996768,SystemVerilog,lab8,22,0,2023-11-13 06:40:19+00:00,[],
15037,https://github.com/artemka332/laba_2.git,2023-11-22 13:57:16+00:00,,0,artemka332/laba_2,722131054,SystemVerilog,laba_2,7,0,2023-11-22 14:03:08+00:00,[],
15039,https://github.com/HAMZA-AFZAL404/RISCV-32IM-5-STAGED-PIPE-LINED-PROCESSOR.git,2023-11-28 10:39:16+00:00,,0,HAMZA-AFZAL404/RISCV-32IM-5-STAGED-PIPE-LINED-PROCESSOR,724563623,SystemVerilog,RISCV-32IM-5-STAGED-PIPE-LINED-PROCESSOR,13,0,2023-11-28 10:44:18+00:00,[],
15040,https://github.com/chenlion520/PIC.git,2023-12-02 09:31:18+00:00,,0,chenlion520/PIC,726400643,SystemVerilog,PIC,9,0,2023-12-02 09:39:01+00:00,[],
15041,https://github.com/davidepanzino/cpu_hdl.git,2023-12-01 00:24:53+00:00,,0,davidepanzino/cpu_hdl,725826777,SystemVerilog,cpu_hdl,419,0,2023-12-01 00:25:58+00:00,[],
15042,https://github.com/01sharanshetty/AXI_SCOREBOARD.git,2023-12-04 09:49:10+00:00,,0,01sharanshetty/AXI_SCOREBOARD,727155114,SystemVerilog,AXI_SCOREBOARD,8,0,2023-12-04 10:16:56+00:00,[],
15043,https://github.com/pulp-platform/transaction-tagger.git,2023-12-04 18:10:17+00:00,Tag bus transactions by target address,0,pulp-platform/transaction-tagger,727365839,SystemVerilog,transaction-tagger,58,0,2023-12-04 18:24:29+00:00,[],
15044,https://github.com/akhileshkumarp/svcodes.git,2023-12-03 09:59:23+00:00,Has high level design codes written in .v or .sv,0,akhileshkumarp/svcodes,726755867,SystemVerilog,svcodes,5,0,2023-12-03 10:20:45+00:00,[],
15045,https://github.com/sikderAmit/piso-uvm-verification.git,2023-11-14 17:27:06+00:00,This repository contain all the necessary files to verify PISO Universal Register,0,sikderAmit/piso-uvm-verification,718731488,SystemVerilog,piso-uvm-verification,203,0,2023-11-14 20:05:47+00:00,"['systemverilog', 'uvm', 'piso', 'design-verification', 'rtl-verification', 'universal-register']",
15046,https://github.com/JuanchyDiaz/lab1-ADC.git,2023-11-10 23:16:21+00:00,,0,JuanchyDiaz/lab1-ADC,717252471,SystemVerilog,lab1-ADC,9,0,2023-11-11 00:07:59+00:00,[],
15047,https://github.com/ZhengmingHu/Bus_Handshake.git,2023-11-15 03:45:17+00:00,,0,ZhengmingHu/Bus_Handshake,718917837,SystemVerilog,Bus_Handshake,14,0,2023-11-15 03:59:43+00:00,[],
15048,https://github.com/Mohammed-Mohra/APB-UVC1.git,2023-12-07 12:38:56+00:00,,0,Mohammed-Mohra/APB-UVC1,728666893,SystemVerilog,APB-UVC1,37,0,2023-12-07 15:22:39+00:00,[],
15049,https://github.com/YoussefNasser11/Multi-Mode-ALU-with-Interrupt-Support.git,2023-12-09 00:25:54+00:00,,0,YoussefNasser11/Multi-Mode-ALU-with-Interrupt-Support,729343385,SystemVerilog,Multi-Mode-ALU-with-Interrupt-Support,12,0,2023-12-09 00:38:50+00:00,[],
15050,https://github.com/Karakatka46/WORKtestRTLverification.git,2023-11-27 08:01:44+00:00,,0,Karakatka46/WORKtestRTLverification,724010512,SystemVerilog,WORKtestRTLverification,9,0,2023-12-01 08:11:42+00:00,[],
15051,https://github.com/Vissho/Multi-cycle-processor.git,2023-12-07 17:13:22+00:00,Multi-cycle processor in the SystemVerilog programming language,0,Vissho/Multi-cycle-processor,728778752,SystemVerilog,Multi-cycle-processor,8649,0,2023-12-10 07:09:39+00:00,[],
15052,https://github.com/Eeercol/SAPR-LAB.git,2023-11-12 23:03:17+00:00,,0,Eeercol/SAPR-LAB,717895939,SystemVerilog,SAPR-LAB,20,0,2023-12-13 23:24:53+00:00,[],
15053,https://github.com/Karsa-orlong/wavegen_sv.git,2023-11-19 01:31:27+00:00,SV files and the kernel files for the wavegenSOC,0,Karsa-orlong/wavegen_sv,720602244,SystemVerilog,wavegen_sv,73,0,2024-03-15 21:41:35+00:00,[],https://api.github.com/licenses/gpl-3.0
15054,https://github.com/fliibs/libhwmath.git,2023-12-02 10:01:25+00:00,,1,fliibs/libhwmath,726407982,SystemVerilog,libhwmath,1745,0,2024-03-25 10:30:39+00:00,[],
15055,https://github.com/davidpoul1/verilog-.git,2023-11-11 05:49:41+00:00,,0,davidpoul1/verilog-,717325660,SystemVerilog,verilog-,9,0,2023-11-11 05:50:21+00:00,[],
15057,https://github.com/sumanthumesh/RISCV_core.git,2023-11-16 18:53:53+00:00,RTL for an N-way superscalar RISC-V core,0,sumanthumesh/RISCV_core,719718497,SystemVerilog,RISCV_core,1774,0,2023-11-16 18:59:52+00:00,[],
15058,https://github.com/RegallaMahidhar/MSD_PROJECT.git,2023-11-18 06:30:11+00:00,checkpoint2,0,RegallaMahidhar/MSD_PROJECT,720331813,SystemVerilog,MSD_PROJECT,9,0,2023-11-18 06:34:14+00:00,[],
15059,https://github.com/ggs2ggs/ibex.git,2023-11-21 01:03:18+00:00,,0,ggs2ggs/ibex,721392766,SystemVerilog,ibex,36479,0,2023-11-21 01:10:09+00:00,[],https://api.github.com/licenses/apache-2.0
15060,https://github.com/matthewdh7/noc_refactor.git,2023-11-13 03:22:42+00:00,,0,matthewdh7/noc_refactor,717953304,SystemVerilog,noc_refactor,19,0,2023-11-13 03:23:48+00:00,[],
15061,https://github.com/mahmud624683/Verification_Methods_Simulation.git,2023-12-01 04:29:04+00:00,,0,mahmud624683/Verification_Methods_Simulation,725886624,SystemVerilog,Verification_Methods_Simulation,797,0,2023-12-01 04:45:17+00:00,[],
15062,https://github.com/nguyendaithien/wide_alu_ip.git,2023-11-24 14:06:16+00:00,,0,nguyendaithien/wide_alu_ip,723028943,SystemVerilog,wide_alu_ip,1427,0,2023-11-24 14:07:16+00:00,[],
15063,https://github.com/mill-lab/kcu1500.git,2023-12-05 06:25:08+00:00,,0,mill-lab/kcu1500,727577458,SystemVerilog,kcu1500,24,0,2023-12-05 07:16:28+00:00,[],
15064,https://github.com/wzian8786/arashi.git,2023-11-25 01:12:33+00:00,,0,wzian8786/arashi,723218839,SystemVerilog,arashi,34,0,2023-11-25 02:33:57+00:00,[],https://api.github.com/licenses/mit
15065,https://github.com/ishwo0/Fall2023-Adv-Verilog.git,2023-12-06 21:58:22+00:00,,0,ishwo0/Fall2023-Adv-Verilog,728407747,SystemVerilog,Fall2023-Adv-Verilog,159,0,2023-12-07 22:41:00+00:00,[],
15066,https://github.com/Hanyx2021/COD.git,2023-11-23 05:41:14+00:00,,0,Hanyx2021/COD,722422803,SystemVerilog,COD,3117,0,2023-12-07 13:00:57+00:00,[],
15067,https://github.com/shehab2020556/SPI-design-and-verification-using-UVM.git,2023-12-13 15:00:03+00:00,,0,shehab2020556/SPI-design-and-verification-using-UVM,731200085,SystemVerilog,SPI-design-and-verification-using-UVM,9,0,2023-12-13 15:01:11+00:00,[],
15068,https://github.com/yuegeini/APS.git,2023-11-22 21:43:01+00:00,,0,yuegeini/APS,722311372,SystemVerilog,APS,12297,0,2023-12-11 20:18:59+00:00,[],
15069,https://github.com/jonasjackman23/Final_Project.git,2023-12-09 06:53:31+00:00,,0,jonasjackman23/Final_Project,729418206,SystemVerilog,Final_Project,78400,0,2023-12-09 06:56:44+00:00,[],
15070,https://github.com/Criztmk/APB_Slave_UVM.git,2023-12-09 04:38:01+00:00,Design testbench for verification of APB slave memory with Write and Reads using UVM Testbech,0,Criztmk/APB_Slave_UVM,729389274,SystemVerilog,APB_Slave_UVM,45,0,2023-12-09 04:44:11+00:00,[],
15071,https://github.com/eichc/compOrgFinalProject.git,2023-11-30 21:49:01+00:00,,0,eichc/compOrgFinalProject,725786693,SystemVerilog,compOrgFinalProject,33,0,2023-12-05 03:09:57+00:00,[],
15072,https://github.com/Vissho/Single-stroke-processor.git,2023-12-07 17:12:31+00:00,Single-stroke processor in the SystemVerilog programming language,0,Vissho/Single-stroke-processor,728778435,SystemVerilog,Single-stroke-processor,2891,0,2023-12-10 07:05:00+00:00,[],
15073,https://github.com/codebjjung/PRACTICE.git,2023-11-13 00:44:47+00:00,,0,codebjjung/PRACTICE,717914761,SystemVerilog,PRACTICE,5,0,2023-11-13 00:50:53+00:00,[],
15074,https://github.com/dishak14/Layered-Testbench-for-ALU.git,2023-12-13 05:06:10+00:00,,0,dishak14/Layered-Testbench-for-ALU,730979059,SystemVerilog,Layered-Testbench-for-ALU,12,0,2023-12-13 05:10:01+00:00,[],https://api.github.com/licenses/mit
15075,https://github.com/asifmahmudishan/System-Verilog-Prac.git,2023-11-22 13:04:47+00:00,,0,asifmahmudishan/System-Verilog-Prac,722109106,SystemVerilog,System-Verilog-Prac,11,0,2023-12-13 20:52:03+00:00,[],
15076,https://github.com/farug/RISCV_Class.git,2023-12-09 11:28:43+00:00,,0,farug/RISCV_Class,729483517,SystemVerilog,RISCV_Class,45,0,2023-12-11 07:17:04+00:00,[],
15077,https://github.com/ed766/RISC-V.git,2023-11-16 08:28:22+00:00,RISC-V model built in Systemverilog,0,ed766/RISC-V,719468854,SystemVerilog,RISC-V,35,0,2023-11-16 19:06:04+00:00,[],
15078,https://github.com/geotrieu/mvm_perf_test.git,2023-12-06 17:17:07+00:00,"Matrix Vector Multiplication Performance Comparison, Verilator vs ModelSim",0,geotrieu/mvm_perf_test,728314146,SystemVerilog,mvm_perf_test,1145,0,2023-12-06 17:43:09+00:00,[],
15079,https://github.com/Luis9705/risc_v_core.git,2023-12-14 05:30:30+00:00,RISC V core written in SystemVerilog and verified with UVM,0,Luis9705/risc_v_core,731449346,SystemVerilog,risc_v_core,64,0,2023-12-15 17:01:42+00:00,[],https://api.github.com/licenses/mit
15080,https://github.com/pjaggi/Projects.git,2023-12-16 03:19:15+00:00,,0,pjaggi/Projects,732244842,SystemVerilog,Projects,5446,0,2023-12-16 04:25:55+00:00,[],
15081,https://github.com/ax0080/UVM.git,2023-11-10 08:39:38+00:00,,0,ax0080/UVM,716960415,SystemVerilog,UVM,5825,0,2023-11-20 06:03:43+00:00,[],
15082,https://github.com/manish03/mangleLDPCo.git,2023-11-27 02:41:53+00:00,Obfuscated LDPC for a sample LDPC .alist matrix file,0,manish03/mangleLDPCo,723913539,SystemVerilog,mangleLDPCo,26428,0,2024-01-04 22:35:30+00:00,[],
15083,https://github.com/jebraun3/ECE551MazeRunner.git,2023-12-06 16:17:37+00:00,,0,jebraun3/ECE551MazeRunner,728289520,SystemVerilog,ECE551MazeRunner,17284,0,2024-04-04 02:45:46+00:00,[],
15084,https://github.com/JyresaMae/FPGA.git,2023-11-12 03:09:16+00:00,,1,JyresaMae/FPGA,717623730,SystemVerilog,FPGA,7429,0,2023-11-12 03:33:24+00:00,[],
15085,https://github.com/HipEx15/SystemVerilog_Verif_Projects.git,2023-11-13 11:13:17+00:00,,0,HipEx15/SystemVerilog_Verif_Projects,718093221,SystemVerilog,SystemVerilog_Verif_Projects,26,0,2023-11-13 11:15:42+00:00,[],
15086,https://github.com/gbeatty3/Serializer_Project.git,2023-11-16 07:41:06+00:00,,0,gbeatty3/Serializer_Project,719452333,SystemVerilog,Serializer_Project,6559,0,2023-11-16 07:43:35+00:00,[],
15087,https://github.com/matahho/computerArchitecture.git,2023-11-18 14:46:16+00:00,This repo is for the RISC-V project of computer architecture at university of Tehran ,0,matahho/computerArchitecture,720456559,SystemVerilog,computerArchitecture,1859,0,2023-11-18 14:50:37+00:00,[],
15088,https://github.com/verification-explorer/delta-sigma-modulator.git,2023-11-21 14:38:40+00:00,Modeling Delta Sigma Modulators for Flash Memory Cell,0,verification-explorer/delta-sigma-modulator,721672267,SystemVerilog,delta-sigma-modulator,8,0,2023-11-21 14:41:44+00:00,[],
15089,https://github.com/liuwenbo0/hust-interface_lab.git,2023-11-15 16:06:49+00:00,接口技术实验,0,liuwenbo0/hust-interface_lab,719177520,SystemVerilog,hust-interface_lab,1074318,0,2023-11-22 04:18:32+00:00,[],
15090,https://github.com/J0han0stling/Design-of-AI-systems.git,2023-11-21 20:27:36+00:00,"The course aims to explain how various well-known AI systems work, provide insight into how to build such systems, and practice in developing AI systems oneself. The course takes a broad perspective and also includes adjacent areas such as data science, algorithms, and optimization when appropriate.",0,J0han0stling/Design-of-AI-systems,721813003,SystemVerilog,Design-of-AI-systems,3954,0,2023-11-22 09:33:57+00:00,[],
15091,https://github.com/adharsh10/ffvdd.git,2023-11-23 13:01:07+00:00,layered testbench verification of a lift controller FSM,0,adharsh10/ffvdd,722579480,SystemVerilog,ffvdd,147,0,2023-11-23 13:02:56+00:00,[],
15092,https://github.com/JMneverlose/htechcon_systolicarray.git,2023-11-26 05:33:54+00:00,,0,JMneverlose/htechcon_systolicarray,723580546,SystemVerilog,htechcon_systolicarray,2455,0,2023-11-29 07:00:42+00:00,[],
15093,https://github.com/romnram67/lab12.git,2023-11-29 13:54:15+00:00,square generator on a vga. changes number of pixels in a square using switches. and the color with in the square. ,0,romnram67/lab12,725128489,SystemVerilog,lab12,7,0,2023-11-29 13:55:17+00:00,[],
15094,https://github.com/hopwoodc/advent-of-code-2023.git,2023-12-02 17:45:47+00:00,"Advent of code 2023, in verilog",0,hopwoodc/advent-of-code-2023,726547666,SystemVerilog,advent-of-code-2023,17,0,2023-12-03 21:21:39+00:00,[],
15095,https://github.com/kaleabmarkos/10-bit-Computer-Processor.git,2023-12-08 17:08:14+00:00,System Verilog,0,kaleabmarkos/10-bit-Computer-Processor,729227280,SystemVerilog,10-bit-Computer-Processor,12,0,2023-12-08 17:24:45+00:00,[],
15096,https://github.com/c-jimmy1/CompArchitectureDesign.git,2023-12-07 22:59:49+00:00,,0,c-jimmy1/CompArchitectureDesign,728885246,SystemVerilog,CompArchitectureDesign,4412,0,2023-12-07 23:03:15+00:00,[],
15097,https://github.com/Criztmk/AHB-APB-Memory-verification.git,2023-12-09 04:47:56+00:00,,0,Criztmk/AHB-APB-Memory-verification,729391183,SystemVerilog,AHB-APB-Memory-verification,55,0,2023-12-09 04:53:11+00:00,[],
15098,https://github.com/huy7715/Report_CE201.git,2023-11-25 07:12:51+00:00,Verification ALU using SV,1,huy7715/Report_CE201,723285851,SystemVerilog,Report_CE201,166,0,2023-11-25 07:18:56+00:00,[],
15099,https://github.com/808Nori808/Microprocesador-Isdigi.git,2023-11-17 08:28:47+00:00,Procesador RISC V descrito en SystemVerilog.,0,808Nori808/Microprocesador-Isdigi,719941728,SystemVerilog,Microprocesador-Isdigi,83574,0,2023-11-19 19:01:05+00:00,[],https://api.github.com/licenses/agpl-3.0
15100,https://github.com/Dhruv6730/8-point-FFT-using-Verilog.git,2023-12-15 15:38:47+00:00,,0,Dhruv6730/8-point-FFT-using-Verilog,732080142,SystemVerilog,8-point-FFT-using-Verilog,439,0,2023-12-15 15:53:13+00:00,[],
15101,https://github.com/pritchardhenry/ECE111-final-project.git,2023-11-26 00:46:26+00:00,Shayaun Bashar and Henry Pritchard,0,pritchardhenry/ECE111-final-project,723532907,SystemVerilog,ECE111-final-project,2876,0,2023-11-26 00:53:07+00:00,[],
15102,https://github.com/langye11/LAB3.git,2023-12-16 10:04:18+00:00,,0,langye11/LAB3,732327744,SystemVerilog,LAB3,2,0,2023-12-16 10:05:36+00:00,[],
15103,https://github.com/ear0/385FP23.git,2023-12-06 07:18:32+00:00,,0,ear0/385FP23,728077537,SystemVerilog,385FP23,5858,0,2023-12-06 07:27:39+00:00,[],
15104,https://github.com/soohar218/FPGA-Pokemon.git,2023-12-15 05:12:33+00:00,Pokemon Game Simulator on FPGA,0,soohar218/FPGA-Pokemon,731880609,SystemVerilog,FPGA-Pokemon,645,0,2023-12-15 05:16:23+00:00,[],
15105,https://github.com/KhoaHuynh02/WTF-repo.git,2023-11-17 21:36:50+00:00,,0,KhoaHuynh02/WTF-repo,720226160,SystemVerilog,WTF-repo,465,0,2023-12-17 06:43:34+00:00,[],
15106,https://github.com/khaledbd00/Design_Verification.git,2023-12-02 10:40:23+00:00,Design verification of an encrypted up_down counter by its specification.,0,khaledbd00/Design_Verification,726417824,SystemVerilog,Design_Verification,109,0,2023-12-19 17:32:20+00:00,"['systemverilog', 'verilog']",
15107,https://github.com/monistode/ISA_cisc.git,2023-11-26 08:22:54+00:00,An implementation of the CISC ISA spec from ISA-docs,0,monistode/ISA_cisc,723615146,SystemVerilog,ISA_cisc,34837,0,2023-11-26 08:23:25+00:00,[],
15108,https://github.com/lmyykxy/jsc_project.git,2023-12-14 07:01:37+00:00,,0,lmyykxy/jsc_project,731475616,SystemVerilog,jsc_project,6818,0,2023-12-14 07:05:24+00:00,[],
15109,https://github.com/migies12/Basic-5-Step-RISC-Machine-.git,2023-11-22 20:18:35+00:00,,0,migies12/Basic-5-Step-RISC-Machine-,722284367,SystemVerilog,Basic-5-Step-RISC-Machine-,331,0,2024-02-21 19:35:22+00:00,[],
15110,https://github.com/fsaltunyuva/CMPE361-LAB4.git,2023-12-16 14:39:17+00:00,SystemVerilog Lab for the CMPE361 (Computer Organization) Course.,0,fsaltunyuva/CMPE361-LAB4,732396341,SystemVerilog,CMPE361-LAB4,10,0,2024-03-24 10:57:54+00:00,[],
15111,https://github.com/ddiwu/cpu.git,2023-12-08 08:12:42+00:00,,0,ddiwu/cpu,729019571,SystemVerilog,cpu,236,0,2024-01-25 07:53:05+00:00,[],
15112,https://github.com/artemka332/laba_1.git,2023-11-10 12:30:22+00:00,Лаба_1_Системы автоматизированного проектирования,0,artemka332/laba_1,717042333,SystemVerilog,laba_1,10,0,2023-11-10 13:34:25+00:00,[],
15113,https://github.com/Oscar-FZ/Proyecto3_Verificacion.git,2023-11-15 01:51:45+00:00,Proyecto 3 del curso verificacion de circuitos integrados,0,Oscar-FZ/Proyecto3_Verificacion,718888177,SystemVerilog,Proyecto3_Verificacion,18,0,2023-11-15 01:53:44+00:00,[],
15114,https://github.com/projectDV/AXI_TB_UVM.git,2023-11-14 14:36:57+00:00,,0,projectDV/AXI_TB_UVM,718657362,SystemVerilog,AXI_TB_UVM,7,0,2023-11-14 18:16:05+00:00,[],
15115,https://github.com/BROsandr/apb_vgachargen.git,2023-11-15 20:53:23+00:00,,0,BROsandr/apb_vgachargen,719281799,SystemVerilog,apb_vgachargen,200,0,2023-11-20 12:38:42+00:00,[],https://api.github.com/licenses/gpl-3.0
15116,https://github.com/manmohanverma1234/ALU.git,2023-12-01 16:03:04+00:00,,0,manmohanverma1234/ALU,726138570,SystemVerilog,ALU,68,0,2023-12-01 16:05:20+00:00,[],
15117,https://github.com/abhaytiwari10/AXI_PROTOCOL.git,2023-12-03 11:06:16+00:00,,0,abhaytiwari10/AXI_PROTOCOL,726772254,SystemVerilog,AXI_PROTOCOL,2,0,2023-12-03 11:07:56+00:00,[],
15118,https://github.com/KTHYEONG/---hw.git,2023-11-20 07:35:41+00:00,,0,KTHYEONG/---hw,721019652,SystemVerilog,---hw,1862,0,2023-11-20 07:35:56+00:00,[],
15119,https://github.com/gccosi/VHDL.git,2023-12-04 13:37:53+00:00,test VHDL,0,gccosi/VHDL,727247078,SystemVerilog,VHDL,16,0,2023-12-04 13:53:27+00:00,[],https://api.github.com/licenses/gpl-3.0
15120,https://github.com/Rakesh2916728272727/FIFO_UVM1.git,2023-12-05 01:40:45+00:00,,0,Rakesh2916728272727/FIFO_UVM1,727500393,SystemVerilog,FIFO_UVM1,7,0,2023-12-05 01:44:23+00:00,[],
15121,https://github.com/MasterPlayer/axi_memory_reader_pkt.git,2023-12-08 10:54:53+00:00,Компонент для выполнения команд чтения из памяти и отправки значений на шину AXI-Stream. Система прерываний не поддерживается,0,MasterPlayer/axi_memory_reader_pkt,729074486,SystemVerilog,axi_memory_reader_pkt,20,0,2023-12-08 10:57:04+00:00,[],https://api.github.com/licenses/mit
15122,https://github.com/McHerman/ATA_vivado.git,2023-12-08 19:41:11+00:00,,0,McHerman/ATA_vivado,729277943,SystemVerilog,ATA_vivado,17136,0,2023-12-08 19:42:13+00:00,[],
15123,https://github.com/4vm0/ECE585-Group11.git,2023-11-10 02:43:59+00:00,DDR5 Memory Controller for PSU ECE 585.,0,4vm0/ECE585-Group11,716858015,SystemVerilog,ECE585-Group11,1339,0,2023-12-05 13:51:23+00:00,[],
15124,https://github.com/mingo99/CU11.git,2023-12-07 09:16:54+00:00,,0,mingo99/CU11,728591684,SystemVerilog,CU11,19,0,2023-12-07 09:47:37+00:00,[],
15125,https://github.com/GayatriVemuri/ECE586_Final_project_MIPS_LITE_simulator.git,2023-12-12 00:05:05+00:00,,0,GayatriVemuri/ECE586_Final_project_MIPS_LITE_simulator,730444461,SystemVerilog,ECE586_Final_project_MIPS_LITE_simulator,8,0,2023-12-12 00:06:08+00:00,[],
15126,https://github.com/mj1069/testbench-system-verilog.git,2023-12-12 15:21:49+00:00,SystemVerilog verification of I2C interface,0,mj1069/testbench-system-verilog,730743725,SystemVerilog,testbench-system-verilog,8,0,2023-12-12 15:49:49+00:00,"['i2c', 'systemverilog', 'verilog', 'vlsi-design']",
15127,https://github.com/hdlguy/pg_prng.git,2023-11-14 19:50:35+00:00,A very light weight fpga pseudorandom number generator.,0,hdlguy/pg_prng,718785751,SystemVerilog,pg_prng,44,0,2023-11-14 20:32:43+00:00,[],https://api.github.com/licenses/mit
15128,https://github.com/vishruthmurthy/Verification.git,2023-12-06 17:37:59+00:00,,0,vishruthmurthy/Verification,728323005,SystemVerilog,Verification,59,0,2024-01-20 15:18:22+00:00,[],
15129,https://github.com/chengsx21/cod23-grp25.git,2023-12-14 13:42:17+00:00,Thinpad Top - 2023 THU Computer Organization and Design,0,chengsx21/cod23-grp25,731619402,SystemVerilog,cod23-grp25,396,0,2023-12-14 13:44:03+00:00,[],
15130,https://github.com/johnrscott/rv0.git,2023-12-13 17:46:45+00:00,Simple RISC-V RV32IMD Core,0,johnrscott/rv0,731269022,SystemVerilog,rv0,203,0,2023-12-22 12:34:00+00:00,[],https://api.github.com/licenses/gpl-3.0
15131,https://github.com/mzvic/CARGAS.git,2023-11-25 02:43:46+00:00,,0,mzvic/CARGAS,723233746,SystemVerilog,CARGAS,58282,0,2023-12-09 02:53:27+00:00,[],
15132,https://github.com/CI60/CI60_Practice.git,2023-12-14 02:33:24+00:00,Practice Pull Request,6,CI60/CI60_Practice,731406724,SystemVerilog,CI60_Practice,10,0,2024-01-09 05:47:11+00:00,[],
15133,https://github.com/hasanalshaikh/ibex_demo_system_hardware_and_software.git,2023-11-11 00:12:28+00:00,"Contains ibex demo system hardware files as well as necessary software (makefiles, crt etc.) to test privilege",0,hasanalshaikh/ibex_demo_system_hardware_and_software,717263053,SystemVerilog,ibex_demo_system_hardware_and_software,2669,0,2023-11-11 00:16:21+00:00,[],
15134,https://github.com/soleil-nocturne123/LFSR.git,2023-11-13 20:58:26+00:00,,0,soleil-nocturne123/LFSR,718321377,SystemVerilog,LFSR,13,0,2023-11-16 10:47:04+00:00,[],
15135,https://github.com/eliannesacher/MIPS.git,2023-11-16 02:17:44+00:00,,0,eliannesacher/MIPS,719363480,SystemVerilog,MIPS,7642,0,2023-11-16 02:21:00+00:00,[],
15136,https://github.com/ChUrl/quartus-7-segment-counter.git,2023-11-09 23:27:17+00:00,,0,ChUrl/quartus-7-segment-counter,716811105,SystemVerilog,quartus-7-segment-counter,7,0,2023-11-09 23:27:39+00:00,[],
15137,https://github.com/IWASAKI-Tetsuro/4bitCPU.git,2023-11-19 13:03:18+00:00,,0,IWASAKI-Tetsuro/4bitCPU,720739152,SystemVerilog,4bitCPU,3165,0,2023-11-19 13:07:10+00:00,[],
15138,https://github.com/Johnathan219/Lab3_Logic_Design.git,2023-11-24 14:06:42+00:00,,0,Johnathan219/Lab3_Logic_Design,723029123,SystemVerilog,Lab3_Logic_Design,110777,0,2023-11-24 15:39:49+00:00,[],
15139,https://github.com/Anunalla/HDLBits.git,2023-11-21 04:47:14+00:00,,0,Anunalla/HDLBits,721450170,SystemVerilog,HDLBits,12,0,2023-11-21 05:01:15+00:00,[],
15140,https://github.com/BqFang/FPGA_CodeLib.git,2023-11-26 15:34:49+00:00,,0,BqFang/FPGA_CodeLib,723728299,SystemVerilog,FPGA_CodeLib,6510,0,2023-11-26 15:36:33+00:00,[],https://api.github.com/licenses/gpl-3.0
15141,https://github.com/littleguac/lab6.git,2023-11-14 22:26:50+00:00,,0,littleguac/lab6,718837763,SystemVerilog,lab6,34,0,2023-11-14 22:30:47+00:00,[],
15142,https://github.com/Diogenescz/Tps_SisDig_106413.git,2023-11-30 18:23:03+00:00,Entregas 2C 2023 - Diógenes Cornejo,0,Diogenescz/Tps_SisDig_106413,725719292,SystemVerilog,Tps_SisDig_106413,4050,0,2023-11-30 19:12:19+00:00,[],
15143,https://github.com/Mohammah94/IL1332-.git,2023-12-02 22:16:46+00:00,Digital Systems Design using Hardware Description Languages // KTH,0,Mohammah94/IL1332-,726620635,SystemVerilog,IL1332-,19,0,2023-12-02 23:18:15+00:00,[],
15144,https://github.com/RialonV/cocotb_practice.git,2023-12-04 02:31:31+00:00,Using cocotb for verification,0,RialonV/cocotb_practice,727019801,SystemVerilog,cocotb_practice,20,0,2023-12-04 02:43:44+00:00,[],https://api.github.com/licenses/mit
15145,https://github.com/FARTASH-421/Verilog_Code.git,2023-12-04 07:00:27+00:00,,0,FARTASH-421/Verilog_Code,727092293,SystemVerilog,Verilog_Code,59710,0,2023-12-04 07:06:33+00:00,[],
15146,https://github.com/Criztmk/APB_Slave.git,2023-12-06 09:10:03+00:00,Design testbench for verification of APB slave memory with Write and Reads,0,Criztmk/APB_Slave,728117265,SystemVerilog,APB_Slave,32,0,2023-12-06 09:11:57+00:00,[],
15147,https://github.com/ThreeBridge/interface.git,2023-12-07 07:03:57+00:00,,0,ThreeBridge/interface,728545124,SystemVerilog,interface,3,0,2023-12-07 07:08:14+00:00,[],
15148,https://github.com/lucasSeabraGomes/trab_Circuitos.git,2023-11-17 01:36:07+00:00,,0,lucasSeabraGomes/trab_Circuitos,719829528,SystemVerilog,trab_Circuitos,135,0,2023-11-30 13:54:44+00:00,[],
15149,https://github.com/MikeT24/RISC-V.git,2023-11-10 01:23:21+00:00,RISC-V INTEGER Unit for my master's ,0,MikeT24/RISC-V,716837798,SystemVerilog,RISC-V,44022,0,2023-11-10 03:45:38+00:00,[],
15150,https://github.com/PrabakarVellingiri/USB_Verif.git,2023-12-11 07:15:19+00:00,,2,PrabakarVellingiri/USB_Verif,730087528,SystemVerilog,USB_Verif,145,0,2024-01-22 08:24:38+00:00,[],
15151,https://github.com/19829984/6.111_Final_Project.git,2023-11-16 21:39:55+00:00,,0,19829984/6.111_Final_Project,719771260,SystemVerilog,6.111_Final_Project,167,0,2023-12-15 01:18:53+00:00,[],https://api.github.com/licenses/mit
15153,https://github.com/HenryRobb/CSCI2500Final.git,2023-12-01 23:52:59+00:00,,1,HenryRobb/CSCI2500Final,726281825,SystemVerilog,CSCI2500Final,1046,0,2023-12-02 17:16:43+00:00,[],
15154,https://github.com/53n0name/design-automation.git,2023-11-12 17:43:07+00:00,,0,53n0name/design-automation,717819271,SystemVerilog,design-automation,27574,0,2023-12-10 17:03:49+00:00,[],
15155,https://github.com/lightcharm/coder_NRZI.git,2023-12-09 19:11:43+00:00,Implementation of the NRZI coder,0,lightcharm/coder_NRZI,729609039,SystemVerilog,coder_NRZI,29,0,2023-12-09 19:12:47+00:00,[],https://api.github.com/licenses/mit
15156,https://github.com/eddieh310/processor.git,2023-12-11 14:55:22+00:00,System Verilog Code for the Single Cycle Processor,0,eddieh310/processor,730266222,SystemVerilog,processor,124,0,2023-12-11 15:01:07+00:00,[],
15157,https://github.com/ahmedsherif99/Asynchronous-Transfer-Mode-SystemVerilog-Module-with-Formal-Verification-SVA-on-OneSpin.git,2023-12-12 12:27:20+00:00,,0,ahmedsherif99/Asynchronous-Transfer-Mode-SystemVerilog-Module-with-Formal-Verification-SVA-on-OneSpin,730669908,SystemVerilog,Asynchronous-Transfer-Mode-SystemVerilog-Module-with-Formal-Verification-SVA-on-OneSpin,72,0,2023-12-12 12:31:28+00:00,[],
15158,https://github.com/GAlexakis/SV-Execution-simd-units.git,2023-12-12 19:39:01+00:00,,0,GAlexakis/SV-Execution-simd-units,730839744,SystemVerilog,SV-Execution-simd-units,145,0,2023-12-12 19:39:40+00:00,[],
15159,https://github.com/AmaanRehman77/Simplified_LC3-FPGA.git,2023-12-12 18:26:21+00:00,System Verilog implementation of a simiplified version of LC-3 (16-Bit Architecture),0,AmaanRehman77/Simplified_LC3-FPGA,730815754,SystemVerilog,Simplified_LC3-FPGA,10267,0,2023-12-12 18:28:59+00:00,[],
15160,https://github.com/AtharvaPan265/DSD-lab6.git,2023-12-13 11:10:39+00:00,,0,AtharvaPan265/DSD-lab6,731102773,SystemVerilog,DSD-lab6,194,0,2023-12-13 11:10:58+00:00,[],
15161,https://github.com/kosinw/orca.git,2023-11-08 02:27:10+00:00,RISC-V microcomputer for 6.111 research project.,0,kosinw/orca,715878102,SystemVerilog,orca,27397,0,2023-11-12 06:46:03+00:00,[],
15162,https://github.com/OmarAmer01/DCSK.git,2023-11-24 21:16:19+00:00,Digital Design and FPGA Implementation of Differential Chaos Shift-Keying Modem,0,OmarAmer01/DCSK,723167416,SystemVerilog,DCSK,154319,0,2023-12-06 22:08:15+00:00,[],
15163,https://github.com/DylanKennyBoland/SystemVerilog_for_Design_and_Verification.git,2023-12-10 16:09:25+00:00,,0,DylanKennyBoland/SystemVerilog_for_Design_and_Verification,729873136,SystemVerilog,SystemVerilog_for_Design_and_Verification,4,0,2023-12-11 16:59:47+00:00,[],
15164,https://github.com/SavageXDDDD/Cordic.git,2023-12-13 20:48:25+00:00,,0,SavageXDDDD/Cordic,731328099,SystemVerilog,Cordic,5,0,2023-12-13 20:50:16+00:00,[],
15165,https://github.com/Dedorou/cordic.git,2023-12-15 19:24:16+00:00,,0,Dedorou/cordic,732153006,SystemVerilog,cordic,4,0,2023-12-17 20:06:32+00:00,[],
15166,https://github.com/apinise/RTL_Library.git,2023-12-09 07:03:59+00:00,,0,apinise/RTL_Library,729420554,SystemVerilog,RTL_Library,16,0,2023-12-09 07:05:40+00:00,[],
15167,https://github.com/EricEricEricJin/ECE551-Group-Project.git,2023-12-06 15:57:15+00:00,An FPGA Maze Runner program that navigates the wheel bot through the maze and finds the magnet,0,EricEricEricJin/ECE551-Group-Project,728280900,SystemVerilog,ECE551-Group-Project,322,0,2024-03-24 12:12:17+00:00,[],
15168,https://github.com/VALO64/SIGNAL_PROCESOR_CORAZ7_VERILOG.git,2023-11-11 02:46:06+00:00,,0,VALO64/SIGNAL_PROCESOR_CORAZ7_VERILOG,717290170,SystemVerilog,SIGNAL_PROCESOR_CORAZ7_VERILOG,1058,0,2023-11-11 02:49:06+00:00,[],
15169,https://github.com/Ali-Mokhtar02/FIFO-Verilog-Design-and-UVM-TestBench.git,2023-11-12 12:05:18+00:00,,0,Ali-Mokhtar02/FIFO-Verilog-Design-and-UVM-TestBench,717728995,SystemVerilog,FIFO-Verilog-Design-and-UVM-TestBench,302,0,2023-11-12 12:19:29+00:00,[],
15170,https://github.com/Ali-Mokhtar02/SPI-Slave-Connected-to-RAM-UVM-TestBench-.git,2023-11-12 13:42:31+00:00,,0,Ali-Mokhtar02/SPI-Slave-Connected-to-RAM-UVM-TestBench-,717753994,SystemVerilog,SPI-Slave-Connected-to-RAM-UVM-TestBench-,28,0,2023-11-12 13:52:19+00:00,[],
15171,https://github.com/skaza2125/Simplifed-LC3.git,2023-11-14 22:07:56+00:00,A implementation of the LC3 System Architecture in System Verilog,0,skaza2125/Simplifed-LC3,718831055,SystemVerilog,Simplifed-LC3,14,0,2023-11-14 22:10:25+00:00,[],
15172,https://github.com/MagdyMGZ/Digital-Verification-Using-SV-UVM.git,2023-11-14 15:25:02+00:00,,0,MagdyMGZ/Digital-Verification-Using-SV-UVM,718679405,SystemVerilog,Digital-Verification-Using-SV-UVM,35351,0,2023-11-14 15:31:05+00:00,[],
15173,https://github.com/Khan1832/SystemVerilog.git,2023-11-16 17:26:36+00:00,,0,Khan1832/SystemVerilog,719683192,SystemVerilog,SystemVerilog,8,0,2023-11-16 17:29:43+00:00,[],
15174,https://github.com/Manancdac/System-verilog.git,2023-11-16 13:09:08+00:00,This repository contains all the SV files.,1,Manancdac/System-verilog,719573905,SystemVerilog,System-verilog,9,0,2023-11-16 13:10:01+00:00,[],
15175,https://github.com/Filter-Capacitor/VGA-ColorStripe.git,2023-11-19 07:55:11+00:00,建立于Xilinx Basys3开发板上的VGA输出实验，支持7种常见分辨率,0,Filter-Capacitor/VGA-ColorStripe,720670682,SystemVerilog,VGA-ColorStripe,96,0,2023-11-19 08:06:47+00:00,[],
15176,https://github.com/kushurox/cad_project.git,2023-11-14 18:17:56+00:00,inefficient 4-bit processor,0,kushurox/cad_project,718751679,SystemVerilog,cad_project,8,0,2023-11-18 16:43:03+00:00,[],
15177,https://github.com/Josechaves19/Proyecto-3-Verificacion.git,2023-11-16 04:09:34+00:00,Repositorio para el tercer proyecto de verificacion funcional de circuitos integrados,0,Josechaves19/Proyecto-3-Verificacion,719393146,SystemVerilog,Proyecto-3-Verificacion,112,0,2023-11-16 04:34:01+00:00,[],
15178,https://github.com/cordeiroewerton/UVM_testbench.git,2023-11-23 22:35:41+00:00,,0,cordeiroewerton/UVM_testbench,722764785,SystemVerilog,UVM_testbench,5,0,2023-11-23 22:40:53+00:00,[],
15179,https://github.com/ntan213/mileston3.git,2023-12-04 05:08:19+00:00,,0,ntan213/mileston3,727058818,SystemVerilog,mileston3,23,0,2023-12-04 05:10:54+00:00,[],
15180,https://github.com/EthanL929/8bits-divider-using-bitslice.git,2023-11-27 13:53:19+00:00,,0,EthanL929/8bits-divider-using-bitslice,724149393,SystemVerilog,8bits-divider-using-bitslice,93,0,2023-11-27 13:58:29+00:00,[],
15181,https://github.com/fjiong/git_test.git,2023-12-06 02:13:21+00:00,this is a test repository.,0,fjiong/git_test,727994565,SystemVerilog,git_test,4,0,2023-12-06 02:45:17+00:00,[],
15182,https://github.com/gccosi/Verilog.git,2023-12-05 12:34:06+00:00,test Verilog coding with method RK4 ,0,gccosi/Verilog,727715615,SystemVerilog,Verilog,450,0,2023-12-05 12:41:00+00:00,[],https://api.github.com/licenses/gpl-3.0
15183,https://github.com/9nugunu/comento_fpga.git,2023-11-10 14:21:40+00:00,,0,9nugunu/comento_fpga,717084523,SystemVerilog,comento_fpga,53,0,2023-11-15 18:34:18+00:00,[],
15184,https://github.com/emthy0/hwsyn-final.git,2023-12-07 15:29:28+00:00,,0,emthy0/hwsyn-final,728737813,SystemVerilog,hwsyn-final,30704,0,2023-12-07 15:30:35+00:00,[],
15185,https://github.com/ShkalikovDenis4m0/AP_Lr_2.git,2023-12-13 20:03:06+00:00,Шкаликов Д.А. М3О-309Б-21,0,ShkalikovDenis4m0/AP_Lr_2,731314933,SystemVerilog,AP_Lr_2,8,0,2023-12-13 20:07:47+00:00,[],
15186,https://github.com/MiskaMoska/MTASim.git,2023-11-30 12:56:10+00:00,Memristor Tile Array Simulator,1,MiskaMoska/MTASim,725581542,SystemVerilog,MTASim,742,0,2023-11-30 13:05:05+00:00,[],
15187,https://github.com/LucasDamo22/word_break-join.git,2023-12-14 15:07:04+00:00,,0,LucasDamo22/word_break-join,731653811,SystemVerilog,word_break-join,42,0,2023-12-14 15:08:09+00:00,[],
15188,https://github.com/maxshii/sha256_sv.git,2023-12-06 01:52:44+00:00,,0,maxshii/sha256_sv,727989537,SystemVerilog,sha256_sv,1713,0,2023-12-06 02:29:37+00:00,[],
15189,https://github.com/hahacharlie/EL-6463-RV32I.git,2023-11-20 20:38:08+00:00,,1,hahacharlie/EL-6463-RV32I,721326935,SystemVerilog,EL-6463-RV32I,49,0,2023-12-07 19:18:22+00:00,[],
15190,https://github.com/bkaether/ee274_image_codec.git,2023-12-05 04:31:07+00:00,Final Project for EE274 - A simple image codec implemented in systemverilog,0,bkaether/ee274_image_codec,727545399,SystemVerilog,ee274_image_codec,3358,0,2023-12-08 03:28:50+00:00,[],
15191,https://github.com/gabrielemercolino/system-verilog.git,2023-11-21 08:03:35+00:00,,0,gabrielemercolino/system-verilog,721510902,SystemVerilog,system-verilog,1,0,2023-11-21 08:10:48+00:00,[],
15192,https://github.com/csianturi/PokemonSoC.git,2023-12-16 22:03:48+00:00,Pokemon Battle on SoC,0,csianturi/PokemonSoC,732501243,SystemVerilog,PokemonSoC,967,0,2023-12-16 22:20:19+00:00,[],
15193,https://github.com/Zakki0925224/tang-primer-20k-nand2tetris.git,2023-11-16 14:01:34+00:00,,0,Zakki0925224/tang-primer-20k-nand2tetris,719596998,SystemVerilog,tang-primer-20k-nand2tetris,407,0,2023-12-02 16:08:23+00:00,[],
15194,https://github.com/patep62/Image-Decompressor.git,2023-12-13 04:23:38+00:00,"Compressed data for a 320 x 240 pixel image will be delivered to the Altera DE2-115 board via UART from a PC and stored in the external SRAM. The image decoding circuitry will read the compressed data, recover the image using a custom digital circuit and store it back to the SRAM, from where the VGA controller will output the image.",0,patep62/Image-Decompressor,730968727,SystemVerilog,Image-Decompressor,1387,0,2023-12-20 21:30:11+00:00,[],
15195,https://github.com/mehmetfatiherdem/seven-segment-counter.git,2023-11-09 15:32:33+00:00,,0,mehmetfatiherdem/seven-segment-counter,716653429,SystemVerilog,seven-segment-counter,3000,0,2023-11-27 23:03:31+00:00,[],
15196,https://github.com/flaviens/verilator-b5.git,2023-11-20 16:44:43+00:00,,0,flaviens/verilator-b5,721243580,SystemVerilog,verilator-b5,7,0,2024-01-15 17:42:50+00:00,[],
15197,https://github.com/jayshah1x/HyST-4-V2.git,2023-11-30 09:28:52+00:00,Vector-2 Systolic Array for a 4x4 Matrix Multiplication,0,jayshah1x/HyST-4-V2,725503209,SystemVerilog,HyST-4-V2,1384,0,2023-12-19 14:01:14+00:00,[],
15198,https://github.com/fsaltunyuva/CMPE361-LAB3.git,2023-12-01 12:23:58+00:00,SystemVerilog Lab for the CMPE361 (Computer Organization) Course.,0,fsaltunyuva/CMPE361-LAB3,726046433,SystemVerilog,CMPE361-LAB3,3,0,2024-03-24 10:58:13+00:00,[],
15199,https://github.com/apinise/RV32IM.git,2023-12-06 16:58:20+00:00,,0,apinise/RV32IM,728306672,SystemVerilog,RV32IM,366,0,2023-12-07 04:55:16+00:00,[],
15200,https://github.com/NP95/DV_Prep.git,2023-11-18 08:10:00+00:00,,0,NP95/DV_Prep,720354415,SystemVerilog,DV_Prep,12645,0,2024-03-11 02:21:58+00:00,[],
15201,https://github.com/ShishkinGleb/Automat-on-SystemVerilog.git,2023-11-26 13:40:23+00:00,"Сложение чисел с фиксированной запятой, представленных в  модифицированном дополнительном двоично-десятичном коде с  естественным порядком весов (8421), с переводом результата из  дополнительного кода в прямой.",0,ShishkinGleb/Automat-on-SystemVerilog,723694012,SystemVerilog,Automat-on-SystemVerilog,4,0,2024-04-08 06:16:26+00:00,[],
15202,https://github.com/memreduman/Computer-Architecture.git,2023-11-24 13:10:19+00:00,"This repository contains embedded CPU implementation, and verification.",0,memreduman/Computer-Architecture,723008090,SystemVerilog,Computer-Architecture,99,0,2024-04-06 00:08:37+00:00,[],
15203,https://github.com/Artityagi123456789/15DaysofUVM.git,2024-01-19 18:03:30+00:00,,1,Artityagi123456789/15DaysofUVM,745614718,SystemVerilog,15DaysofUVM,26479,10,2024-02-27 09:40:21+00:00,"['uvm', 'uvm-template', 'uvm-verification', 'uvmapping', 'config', 'db', 'phase', 'tlm-models']",
15204,https://github.com/NoBizz/Iverilog-Motor-control-simulation.git,2024-01-19 14:24:12+00:00,,0,NoBizz/Iverilog-Motor-control-simulation,745525208,SystemVerilog,Iverilog-Motor-control-simulation,4433,4,2024-01-20 00:59:30+00:00,[],
15205,https://github.com/ZiyangYE/LicheeTang25k_SDRAM.git,2023-12-30 04:45:10+00:00,SDRAM controller for LicheeTang25k,2,ZiyangYE/LicheeTang25k_SDRAM,737178291,SystemVerilog,LicheeTang25k_SDRAM,24,3,2024-01-15 18:17:25+00:00,[],https://api.github.com/licenses/apache-2.0
15206,https://github.com/arjunabinash/UART_UVM.git,2023-12-27 06:17:14+00:00," UART- Universal Asynchronous Receiver and transmitter is a hardware device which facilitates serial transmission and reception of data. In this work presented here, the UART has been designed with the use of the industry standard Verilog HDL code and the verification of the protocol has been done using system Verilog code in UVM.",0,arjunabinash/UART_UVM,736156621,SystemVerilog,UART_UVM,8,3,2024-03-29 06:51:39+00:00,[],
15207,https://github.com/scalable-arch/DRAMController_2024.git,2024-01-16 12:13:53+00:00,,0,scalable-arch/DRAMController_2024,743990323,SystemVerilog,DRAMController_2024,4355,3,2024-02-10 18:49:01+00:00,[],https://api.github.com/licenses/apache-2.0
15208,https://github.com/tmssngr/z8verilog.git,2024-01-23 16:21:36+00:00,Zilog Z8 softcore in verilog,0,tmssngr/z8verilog,747283490,SystemVerilog,z8verilog,744,3,2024-04-12 17:44:42+00:00,"['fpga', 'tang-nano-9k', 'verilog', 'sipeed-tang-nano-9k']",https://api.github.com/licenses/gpl-3.0
15209,https://github.com/mbits-mirafra/pulpino__i2c_master__ip_verification.git,2024-01-18 12:18:12+00:00,IP Veriification of I2C master using the I3C VIP,1,mbits-mirafra/pulpino__i2c_master__ip_verification,744988382,SystemVerilog,pulpino__i2c_master__ip_verification,8738,3,2024-02-17 02:09:23+00:00,[],
15210,https://github.com/nkusikevin/System-Verilog.git,2024-01-03 21:55:26+00:00,,0,nkusikevin/System-Verilog,738714850,SystemVerilog,System-Verilog,91,2,2024-01-04 09:36:42+00:00,[],
15211,https://github.com/huy7715/Newyear_Report.git,2023-12-31 20:14:05+00:00,Verification RAM_APB PROTOCOL using systemverilog,0,huy7715/Newyear_Report,737627443,SystemVerilog,Newyear_Report,316,2,2024-01-30 16:22:16+00:00,[],
15212,https://github.com/huy7715/Noel_report.git,2023-12-23 17:57:19+00:00,Verfication Synchronous FIFO using SV without UVM,0,huy7715/Noel_report,735113606,SystemVerilog,Noel_report,49,2,2024-02-21 02:33:04+00:00,[],
15213,https://github.com/Vor-Art/DCD_MultiBankMemory.git,2023-12-18 08:47:56+00:00,"SystemVerilog implementation of a multi-bank memory as part of ""[F23] Digital Circuit Design"" course",0,Vor-Art/DCD_MultiBankMemory,732958280,SystemVerilog,DCD_MultiBankMemory,4581,2,2023-12-18 19:13:12+00:00,"['soc-design', 'systemverilog', 'throughput', 'multibank-memory', 'innopolis-university', 'fpga']",https://api.github.com/licenses/mit
15214,https://github.com/arjunabinash/HALFADDER_UVM.git,2023-12-27 06:46:21+00:00,A combinational circuit that adds two single-bit binary numbers and produces the sum and carry as output. ,0,arjunabinash/HALFADDER_UVM,736164673,SystemVerilog,HALFADDER_UVM,6,2,2024-02-05 17:54:12+00:00,[],
15215,https://github.com/StartForKiller/WivCPU.git,2023-12-23 01:41:43+00:00,,0,StartForKiller/WivCPU,734908709,SystemVerilog,WivCPU,109,2,2024-02-05 22:36:06+00:00,[],
15216,https://github.com/maxli1997/EECS470.git,2024-01-09 23:57:12+00:00,,0,maxli1997/EECS470,741217862,SystemVerilog,EECS470,24909,1,2024-02-12 02:38:56+00:00,[],
15217,https://github.com/BigPig-Bro/Encoder_BMP.git,2024-01-23 06:35:16+00:00,在FPGA端实现BMP编码,0,BigPig-Bro/Encoder_BMP,747044408,SystemVerilog,Encoder_BMP,92,1,2024-02-04 06:10:47+00:00,[],
15218,https://github.com/mostafa-kermaninia/Basic-Switch-and-Gate-Structures.git,2024-01-06 23:35:16+00:00,Its one of my Uni projects,0,mostafa-kermaninia/Basic-Switch-and-Gate-Structures,739915536,SystemVerilog,Basic-Switch-and-Gate-Structures,99,1,2024-01-06 23:37:21+00:00,[],
15219,https://github.com/Dragon-Git/flexible-indirect-registers-with-uvm.git,2024-01-06 13:45:05+00:00,,0,Dragon-Git/flexible-indirect-registers-with-uvm,739769175,SystemVerilog,flexible-indirect-registers-with-uvm,733,1,2024-01-13 14:11:44+00:00,[],
15220,https://github.com/vietchau0509/-Eight-Bit-Four-Functions-Calculator.git,2024-01-04 19:59:46+00:00,8-Bit Four-Function Calculator,0,vietchau0509/-Eight-Bit-Four-Functions-Calculator,739113796,SystemVerilog,-Eight-Bit-Four-Functions-Calculator,285,1,2024-01-20 00:14:47+00:00,[],
15221,https://github.com/VyshnaviChilukamukku/ROUTER-Verification-UVM-.git,2024-01-20 14:05:05+00:00,The Router is a device that forwards data packets between computer networks( drives data to output channel based on the address field contained in the packet header).,0,VyshnaviChilukamukku/ROUTER-Verification-UVM-,745905607,SystemVerilog,ROUTER-Verification-UVM-,334,1,2024-01-21 13:43:46+00:00,[],
15222,https://github.com/liuguangxi/vlib_arith_unit.git,2023-12-18 06:07:31+00:00,Verilog Library of Arithmetic Units,0,liuguangxi/vlib_arith_unit,732905996,SystemVerilog,vlib_arith_unit,562,1,2024-01-12 04:53:09+00:00,[],https://api.github.com/licenses/mit
15223,https://github.com/Jety16/Arquitectura_Del_computador_Famaf.git,2024-01-11 15:23:14+00:00,,0,Jety16/Arquitectura_Del_computador_Famaf,742011734,SystemVerilog,Arquitectura_Del_computador_Famaf,550,1,2024-02-10 01:31:23+00:00,[],
15224,https://github.com/tompacino/oled_rgb.git,2023-12-29 09:36:25+00:00,System Verilog modules for controlling the Digilent PMOD Oled RGB Daughter Board.,0,tompacino/oled_rgb,736929845,SystemVerilog,oled_rgb,154,1,2024-02-28 08:54:41+00:00,[],https://api.github.com/licenses/gpl-3.0
15225,https://github.com/teddywhy/uvm_apb.git,2024-01-02 16:02:57+00:00,UVM APB VIP,0,teddywhy/uvm_apb,738178774,SystemVerilog,uvm_apb,22308,1,2024-02-19 02:38:57+00:00,[],
15226,https://github.com/hdlguy/litefury_pcie.git,2024-01-08 19:51:27+00:00,A little project to provide the fpga design for a PCIe board being done in KiCad.,0,hdlguy/litefury_pcie,740658340,SystemVerilog,litefury_pcie,781,1,2024-03-26 14:08:40+00:00,[],https://api.github.com/licenses/mit
15227,https://github.com/wickerwaka/nec_core.git,2024-01-17 05:50:15+00:00,,0,wickerwaka/nec_core,744352167,SystemVerilog,nec_core,12115,1,2024-01-23 06:14:32+00:00,[],
15229,https://github.com/iJustLeyxo/Sprout.git,2024-01-15 14:15:44+00:00,,0,iJustLeyxo/Sprout,743570189,SystemVerilog,Sprout,31,1,2024-01-15 14:34:04+00:00,[],https://api.github.com/licenses/gpl-3.0
15230,https://github.com/BillyScreezo/DSP-tools.git,2024-01-11 13:26:02+00:00,Various modules for developing DSP systems,0,BillyScreezo/DSP-tools,741961803,SystemVerilog,DSP-tools,26,1,2024-01-21 10:11:10+00:00,[],https://api.github.com/licenses/gpl-3.0
15231,https://github.com/04amrita/100codesOfsystemVerilog.git,2023-12-20 14:21:16+00:00,Writing 100 different codes on System Verilog and documenting those here.,0,04amrita/100codesOfsystemVerilog,733957610,SystemVerilog,100codesOfsystemVerilog,2,1,2024-02-15 15:08:18+00:00,[],
15232,https://github.com/BillyScreezo/Peripherals.git,2024-01-11 14:57:15+00:00,Various peripheral modules for embedded systems,0,BillyScreezo/Peripherals,742000698,SystemVerilog,Peripherals,33,1,2024-02-24 18:37:31+00:00,[],https://api.github.com/licenses/gpl-3.0
15233,https://github.com/OmniaMohamed12/FIFO-Verification-using-SystemVerilog.git,2024-01-22 17:39:41+00:00,Verification of Synchronous_FIFO using system verilog,0,OmniaMohamed12/FIFO-Verification-using-SystemVerilog,746798676,SystemVerilog,FIFO-Verification-using-SystemVerilog,162,1,2024-03-05 08:04:28+00:00,[],
15234,https://github.com/wptaylor/RV32I_piped.git,2024-01-04 04:09:50+00:00,WIP pipelined implementation of the RISC-V RV32I instruction set architecture.,0,wptaylor/RV32I_piped,738795378,SystemVerilog,RV32I_piped,9450,1,2024-01-21 08:14:22+00:00,[],
15235,https://github.com/HPC-SDC/PEA.git,2023-12-26 02:50:44+00:00,,0,HPC-SDC/PEA,735766610,SystemVerilog,PEA,34,1,2024-02-02 07:00:37+00:00,[],
15236,https://github.com/TnnsBeast/HSM.git,2023-12-17 05:51:49+00:00,FPGA Implementation of an HSM,0,TnnsBeast/HSM,732573052,SystemVerilog,HSM,15,1,2023-12-19 06:43:43+00:00,[],
15237,https://github.com/argrabowski/fpga-light-sensor.git,2023-12-30 10:36:46+00:00,,0,argrabowski/fpga-light-sensor,737247642,SystemVerilog,fpga-light-sensor,1881,1,2023-12-30 10:51:10+00:00,[],
15238,https://github.com/meeeeet/VIP-AHBLite-APB-Bridge.git,2024-01-05 17:07:55+00:00,,0,meeeeet/VIP-AHBLite-APB-Bridge,739481121,SystemVerilog,VIP-AHBLite-APB-Bridge,14,1,2024-03-05 03:58:48+00:00,[],
15239,https://github.com/manmohanverma1234/project.git,2023-12-21 22:53:44+00:00,,0,manmohanverma1234/project,734523462,SystemVerilog,project,7,1,2024-01-10 22:09:28+00:00,[],
15240,https://github.com/mahmedadawy2013/UVM_UART.git,2024-01-09 10:41:26+00:00,,0,mahmedadawy2013/UVM_UART,740919401,SystemVerilog,UVM_UART,466,1,2024-02-05 04:02:57+00:00,[],
15241,https://github.com/mahmedadawy2013/UVM_Counter.git,2024-01-06 00:33:04+00:00,,0,mahmedadawy2013/UVM_Counter,739594823,SystemVerilog,UVM_Counter,333,1,2024-02-05 09:51:50+00:00,[],
15242,https://github.com/Dragon-Git/uvm_syoscb.git,2024-01-07 09:43:52+00:00,,0,Dragon-Git/uvm_syoscb,740025582,SystemVerilog,uvm_syoscb,10929,1,2024-03-11 14:11:06+00:00,"['scoreboard', 'uvm', 'verification']",https://api.github.com/licenses/apache-2.0
15243,https://github.com/oskarwires/sdram_controller.git,2024-01-03 18:40:06+00:00,High-Speed SystemVerilog SDRAM Controller,0,oskarwires/sdram_controller,738661015,SystemVerilog,sdram_controller,155,1,2024-02-04 17:12:50+00:00,"['sdram', 'sdram-controller', 'fpga']",https://api.github.com/licenses/agpl-3.0
15244,https://github.com/tclin0122/GNSS_Layer_1-2.git,2024-01-01 23:46:09+00:00,,0,tclin0122/GNSS_Layer_1-2,737911061,SystemVerilog,GNSS_Layer_1-2,3,1,2024-01-01 23:54:36+00:00,[],
15245,https://github.com/MarcoMassetti/radix-8-modified-booth-encoding-multiplier.git,2024-01-05 09:45:16+00:00,,0,MarcoMassetti/radix-8-modified-booth-encoding-multiplier,739324411,SystemVerilog,radix-8-modified-booth-encoding-multiplier,1841,1,2024-01-05 10:42:32+00:00,[],https://api.github.com/licenses/gpl-3.0
15247,https://github.com/sharathat45/nuwanda.git,2024-01-24 21:36:51+00:00,for learning and revising,0,sharathat45/nuwanda,747902432,SystemVerilog,nuwanda,24,1,2024-01-30 16:30:46+00:00,[],
15248,https://github.com/Pietro4F/RISC-V-lite.git,2024-01-05 10:31:47+00:00,RISC-V lite,0,Pietro4F/RISC-V-lite,739340752,SystemVerilog,RISC-V-lite,1440,1,2024-01-05 10:34:53+00:00,[],https://api.github.com/licenses/gpl-3.0
15249,https://github.com/Dragon-Git/cdns_interface_registry.git,2024-01-06 13:32:16+00:00,,0,Dragon-Git/cdns_interface_registry,739765454,SystemVerilog,cdns_interface_registry,642,1,2024-01-13 14:11:30+00:00,[],
15250,https://github.com/tom-urkin/Round-Robin.git,2024-01-16 09:09:03+00:00,This repository contains a SystemVerilog implementation of a parametrized Round Robin arbiter with three instantiation options,0,tom-urkin/Round-Robin,743917781,SystemVerilog,Round-Robin,3541,1,2024-04-10 02:44:32+00:00,[],
15251,https://github.com/MrWonder323/Digital-Design-Exercises.git,2023-12-29 14:11:19+00:00,Exercises done from the book : Vaibbhav Taraate - Digital Design Techniques and Exercises_ A Practice Book for Digital Logic Design-Springer (2021),0,MrWonder323/Digital-Design-Exercises,737004351,SystemVerilog,Digital-Design-Exercises,4,1,2024-01-08 11:38:19+00:00,[],
15252,https://github.com/RakshithaRShettigar/AXI_verification.git,2024-01-16 07:24:34+00:00,,4,RakshithaRShettigar/AXI_verification,743879912,SystemVerilog,AXI_verification,26359,1,2024-01-22 04:23:18+00:00,[],
15253,https://github.com/MyWurger/4.1.-OCP-PIO-timer.git,2024-01-25 21:21:34+00:00,,0,MyWurger/4.1.-OCP-PIO-timer,748384558,SystemVerilog,4.1.-OCP-PIO-timer,9,1,2024-01-26 10:29:48+00:00,[],
15254,https://github.com/mostafa-kermaninia/Serial-transmitter-circuit-with-sequence-detector.git,2024-01-11 12:20:04+00:00,I build it with verilog description and quartus simulation,0,mostafa-kermaninia/Serial-transmitter-circuit-with-sequence-detector,741935490,SystemVerilog,Serial-transmitter-circuit-with-sequence-detector,11653,1,2024-01-11 12:30:59+00:00,[],
15255,https://github.com/Bubi2001/rtl_utils.git,2023-12-28 23:34:57+00:00,Common RTL utils,0,Bubi2001/rtl_utils,736804400,SystemVerilog,rtl_utils,105,1,2024-02-05 10:33:04+00:00,[],https://api.github.com/licenses/mit
15256,https://github.com/MeanPaper/Pipeline-RV32i-Processor.git,2023-12-17 19:14:35+00:00,A Pipelined Implementation of the RV32I Processor,0,MeanPaper/Pipeline-RV32i-Processor,732770502,SystemVerilog,Pipeline-RV32i-Processor,5279,1,2024-02-11 04:07:37+00:00,"['systemverilog', 'riscv']",https://api.github.com/licenses/gpl-3.0
15257,https://github.com/yizhou82/ARM32CPU.git,2023-12-31 02:22:58+00:00,,1,yizhou82/ARM32CPU,737431937,SystemVerilog,ARM32CPU,1499,1,2024-01-13 22:45:47+00:00,[],
15258,https://github.com/dolce-project/gelato.git,2023-12-25 17:28:28+00:00,Gelato: General-purpose Lightweight GPU supporting RISC-V ISA with SIMT extension,0,dolce-project/gelato,735651527,SystemVerilog,gelato,130,1,2024-04-02 02:59:28+00:00,[],https://api.github.com/licenses/mit
15259,https://github.com/kapi36/Verification-of-RAM-using-System-Verilog-.git,2024-01-20 04:43:14+00:00,,0,kapi36/Verification-of-RAM-using-System-Verilog-,745768156,SystemVerilog,Verification-of-RAM-using-System-Verilog-,10,1,2024-02-24 14:27:11+00:00,[],
15260,https://github.com/SumaiyaTariqueLabiba/VeriRISC-CPU.git,2024-01-03 14:05:13+00:00,This project was developed based on the labs for Cadence certification on SystemVerilog for Design and Verification V21.10,0,SumaiyaTariqueLabiba/VeriRISC-CPU,738559684,SystemVerilog,VeriRISC-CPU,12,1,2024-03-16 07:33:25+00:00,"['cadence', 'cpu', 'systemverilog', 'veririsc']",
15261,https://github.com/holyuming/vitis-rtl-kernel.git,2024-01-24 11:58:04+00:00,,1,holyuming/vitis-rtl-kernel,747666069,SystemVerilog,vitis-rtl-kernel,27883,1,2024-01-25 07:13:59+00:00,[],
15262,https://github.com/ODraa/Elaborato_Architettura.git,2023-12-21 17:23:53+00:00,Laboratorio di Architettura degli Elaboratori (SIS - Verilog Project) A.A. 2023/2024,0,ODraa/Elaborato_Architettura,734439619,SystemVerilog,Elaborato_Architettura,67,1,2023-12-30 16:49:34+00:00,[],
15263,https://github.com/BillyScreezo/RISC-V.git,2024-01-12 14:19:36+00:00,RISC-V RV32IM SoC my own design,0,BillyScreezo/RISC-V,742456485,SystemVerilog,RISC-V,167,1,2024-01-21 10:11:11+00:00,[],https://api.github.com/licenses/gpl-3.0
15264,https://github.com/soc-hub-fi/rt-ibex.git,2024-01-16 10:23:35+00:00,Real-time optimized version of Ibex,0,soc-hub-fi/rt-ibex,743947670,SystemVerilog,rt-ibex,39959,1,2024-03-17 18:37:29+00:00,[],https://api.github.com/licenses/apache-2.0
15265,https://github.com/Pochepayka/SistemVerilogLaba2.git,2023-12-26 21:24:51+00:00,,0,Pochepayka/SistemVerilogLaba2,736054719,SystemVerilog,SistemVerilogLaba2,19,1,2023-12-26 22:53:05+00:00,[],
15266,https://github.com/Pochepayka/SistemVerilogLaba1.git,2023-12-26 18:31:24+00:00,,0,Pochepayka/SistemVerilogLaba1,736015380,SystemVerilog,SistemVerilogLaba1,29,1,2023-12-26 22:53:04+00:00,[],
15267,https://github.com/argrabowski/fpga-vga-display.git,2023-12-30 10:22:36+00:00,,0,argrabowski/fpga-vga-display,737244791,SystemVerilog,fpga-vga-display,1066,1,2023-12-30 10:51:13+00:00,[],
15268,https://github.com/OYounis/GAP.git,2024-01-05 22:03:47+00:00,A generic agent pattern that can be reused with multiple interfaces/protocols,2,OYounis/GAP,739565697,SystemVerilog,GAP,6,1,2024-01-08 12:54:05+00:00,[],
15269,https://github.com/mostafa-kermaninia/Flip-Flop-generate-and-development.git,2024-01-11 12:09:58+00:00,I started with SR-latch and developed it.,0,mostafa-kermaninia/Flip-Flop-generate-and-development,741931543,SystemVerilog,Flip-Flop-generate-and-development,2977,1,2024-01-11 12:31:02+00:00,[],
15270,https://github.com/mostafa-kermaninia/ALU.git,2024-01-11 12:03:33+00:00,"Design, simulation and synthesis an ALU with verilog and Yosys",0,mostafa-kermaninia/ALU,741929042,SystemVerilog,ALU,9232,1,2024-01-11 12:31:00+00:00,[],
15271,https://github.com/berkayouzhan/8-Bit-Alu.git,2024-01-10 17:26:37+00:00,"Add, Substract, And, Or Opeartions",0,berkayouzhan/8-Bit-Alu,741578901,SystemVerilog,8-Bit-Alu,532,1,2024-01-15 19:18:07+00:00,[],
15272,https://github.com/deepthipsu/Asynch_FIFO_ECE593.git,2024-01-20 01:01:20+00:00,Asynchronous FIFO project with design and unit testing in SV and verification using UVM,0,deepthipsu/Asynch_FIFO_ECE593,745727568,SystemVerilog,Asynch_FIFO_ECE593,16067,1,2024-02-19 23:02:57+00:00,[],
15273,https://github.com/v-deep/verification-environment.git,2024-01-23 16:14:46+00:00,,0,v-deep/verification-environment,747280375,SystemVerilog,verification-environment,4,0,2024-01-23 16:43:35+00:00,[],
15274,https://github.com/v-deep/memory_model.git,2024-01-23 16:44:53+00:00,,0,v-deep/memory_model,747294601,SystemVerilog,memory_model,3,0,2024-01-23 16:46:27+00:00,[],
15275,https://github.com/Vishnutpgit/VLSI---ROUTER-1X3--Design-and-Verification.git,2024-01-10 14:55:22+00:00,"   The router accepts data packets on a single 8-bit  port and routes them to one of the three output channels, channel0, channel1 and channel2.",0,Vishnutpgit/VLSI---ROUTER-1X3--Design-and-Verification,741513927,SystemVerilog,VLSI---ROUTER-1X3--Design-and-Verification,77,0,2024-01-26 07:10:58+00:00,[],
15276,https://github.com/Smruti-2001/Design-and-verify-the-protocol-SPI-Master-and-Slave-using-Systemverilog.git,2024-01-25 11:14:08+00:00,,0,Smruti-2001/Design-and-verify-the-protocol-SPI-Master-and-Slave-using-Systemverilog,748143153,SystemVerilog,Design-and-verify-the-protocol-SPI-Master-and-Slave-using-Systemverilog,9,0,2024-01-25 11:15:39+00:00,[],
15277,https://github.com/Max-Y-Ma/MNIST-Accelerator.git,2024-01-20 19:00:35+00:00,Neural Network Hardware Accelerator for Recognization of MNIST Characters,0,Max-Y-Ma/MNIST-Accelerator,745991707,SystemVerilog,MNIST-Accelerator,16926,0,2024-01-21 22:01:44+00:00,[],https://api.github.com/licenses/gpl-3.0
15278,https://github.com/houdonghui1/open-source-secure-IP-library.git,2023-12-29 09:06:18+00:00,This is an open-source hardware secure IP library.,1,houdonghui1/open-source-secure-IP-library,736921350,SystemVerilog,open-source-secure-IP-library,279,0,2023-12-29 09:32:13+00:00,[],
15279,https://github.com/flyingbrids/ImageKernelFilter.git,2023-12-26 05:09:38+00:00,"Explore different 2D kernel and their implementation (direct , transposed, DA..). Explore resource utilization of each filter on Cyclone V FPGA",0,flyingbrids/ImageKernelFilter,735792201,SystemVerilog,ImageKernelFilter,2393,0,2023-12-27 22:02:44+00:00,[],
15280,https://github.com/sathyanarayanat/verification-projects.git,2023-12-27 19:43:13+00:00,This repository contains System Verilog projects,0,sathyanarayanat/verification-projects,736397410,SystemVerilog,verification-projects,412,0,2023-12-27 20:07:01+00:00,[],
15281,https://github.com/rohangowdamr/FIFO_MEMORY.git,2024-01-06 14:41:08+00:00,,1,rohangowdamr/FIFO_MEMORY,739786161,SystemVerilog,FIFO_MEMORY,183,0,2024-01-06 14:42:44+00:00,[],
15282,https://github.com/attar8/Single-port-Ram.git,2023-12-17 09:31:31+00:00,,0,attar8/Single-port-Ram,732616918,SystemVerilog,Single-port-Ram,16,0,2023-12-17 09:34:51+00:00,[],
15283,https://github.com/sigasi/veresta-doc.git,2023-12-19 13:31:19+00:00,Generate Sigasi project documentation in CI,0,sigasi/veresta-doc,733505037,SystemVerilog,veresta-doc,22,0,2023-12-20 13:23:14+00:00,[],
15284,https://github.com/Evap1/Numerical-systems-and-the-structure-of-the-computer.git,2023-12-21 13:34:17+00:00,course GPA - 91,0,Evap1/Numerical-systems-and-the-structure-of-the-computer,734356879,SystemVerilog,Numerical-systems-and-the-structure-of-the-computer,3618,0,2023-12-21 13:35:53+00:00,[],
15285,https://github.com/yarakhalaf/Design_and_UVM_Verification_for_Memory.git,2023-12-22 11:41:22+00:00,,0,yarakhalaf/Design_and_UVM_Verification_for_Memory,734705326,SystemVerilog,Design_and_UVM_Verification_for_Memory,7,0,2023-12-22 11:42:12+00:00,[],
15286,https://github.com/chaoqun-liang/eth-axis.git,2023-12-24 16:44:50+00:00,,0,chaoqun-liang/eth-axis,735365631,SystemVerilog,eth-axis,23028,0,2023-12-24 16:46:23+00:00,[],https://api.github.com/licenses/mit
15287,https://github.com/Sloechka/apb_spi.git,2023-12-23 19:43:16+00:00,,0,Sloechka/apb_spi,735135859,SystemVerilog,apb_spi,228,0,2023-12-23 19:43:21+00:00,[],
15288,https://github.com/By41k/Sapr2.git,2023-12-28 08:53:11+00:00,,0,By41k/Sapr2,736566543,SystemVerilog,Sapr2,4,0,2023-12-28 08:54:00+00:00,[],
15289,https://github.com/ashiaotw/RISC-V.git,2023-12-21 03:02:32+00:00,,0,ashiaotw/RISC-V,734165247,SystemVerilog,RISC-V,7,0,2023-12-28 20:47:04+00:00,[],
15290,https://github.com/Isaiah1810/RSSB-CPU-Implementation.git,2023-12-23 22:00:59+00:00,A Systemverilog implementation of the One Instruction ISA using Reverse Subtract Swap if Borrow,0,Isaiah1810/RSSB-CPU-Implementation,735160060,SystemVerilog,RSSB-CPU-Implementation,23,0,2023-12-23 22:01:57+00:00,[],
15291,https://github.com/okenna10/Simon32-64-Encryption.git,2023-12-30 16:15:40+00:00,A fully pipelined encryption module for lightweight applications. Target architecture is an 7nm ASIC,0,okenna10/Simon32-64-Encryption,737324999,SystemVerilog,Simon32-64-Encryption,34,0,2023-12-30 16:17:18+00:00,[],
15292,https://github.com/Anunalla/AHB-MUX-Verif.git,2024-01-06 17:24:09+00:00,UVM verification of manager selection multiplexor of AHB-Lite protocol,0,Anunalla/AHB-MUX-Verif,739833066,SystemVerilog,AHB-MUX-Verif,12,0,2024-01-06 17:25:04+00:00,[],
15293,https://github.com/mahmedadawy2013/CoCotb_AES128_Encryption.git,2024-01-09 10:37:51+00:00,,0,mahmedadawy2013/CoCotb_AES128_Encryption,740918023,SystemVerilog,CoCotb_AES128_Encryption,1495,0,2024-01-09 10:40:59+00:00,[],
15294,https://github.com/ngkhatu/LC3_Verification.git,2024-01-11 20:45:56+00:00,NCSU ASIC Verification Project- Verification of LC3 using System Verilog,0,ngkhatu/LC3_Verification,742136442,SystemVerilog,LC3_Verification,2785,0,2024-01-11 20:47:11+00:00,[],
15295,https://github.com/startiantian/verification_tb.git,2023-12-28 02:41:51+00:00,uvm testbench,0,startiantian/verification_tb,736476888,,verification_tb,177119,0,2023-12-28 02:41:51+00:00,[],
15296,https://github.com/BlueDagger05/Sv_Complete_TB.git,2024-01-12 12:30:17+00:00,,0,BlueDagger05/Sv_Complete_TB,742414829,SystemVerilog,Sv_Complete_TB,23,0,2024-01-12 18:02:28+00:00,[],
15297,https://github.com/Arvind-Kumar-Dv/apb_3_uvm_tb.git,2024-01-17 11:44:44+00:00,apb3 protocol,0,Arvind-Kumar-Dv/apb_3_uvm_tb,744481650,SystemVerilog,apb_3_uvm_tb,6,0,2024-01-17 11:48:06+00:00,[],
15298,https://github.com/Arvind-Kumar-Dv/dff_tb_uvm.git,2024-01-17 11:16:00+00:00,flip flop uvm,0,Arvind-Kumar-Dv/dff_tb_uvm,744470887,SystemVerilog,dff_tb_uvm,4,0,2024-01-17 11:28:31+00:00,[],
15299,https://github.com/NagaSubrahmanyam/git_sample.git,2024-01-18 09:43:24+00:00,,0,NagaSubrahmanyam/git_sample,744928728,SystemVerilog,git_sample,2983,0,2024-01-18 10:41:29+00:00,[],
15300,https://github.com/nikul09/APB_Protocol.git,2024-01-19 11:47:43+00:00,,0,nikul09/APB_Protocol,745464474,SystemVerilog,APB_Protocol,14,0,2024-01-19 11:56:29+00:00,[],
15301,https://github.com/Mew463/ECE-111.git,2024-01-12 17:19:00+00:00,,0,Mew463/ECE-111,742527240,SystemVerilog,ECE-111,12007,0,2024-03-12 00:10:47+00:00,[],
15302,https://github.com/jokerwyt/SpMM.git,2024-01-19 08:32:32+00:00,A hand-made sparse matrix multiplication accelerator in Scala,0,jokerwyt/SpMM,745391570,SystemVerilog,SpMM,52087,0,2024-03-20 02:40:17+00:00,[],
15303,https://github.com/tarush-s/Computer-Architecture.git,2024-01-22 23:33:20+00:00,,0,tarush-s/Computer-Architecture,746930838,SystemVerilog,Computer-Architecture,4077,0,2024-02-16 04:13:08+00:00,[],https://api.github.com/licenses/mit
15304,https://github.com/Fliegende-Rehe/fpga_tetris.git,2023-12-19 00:00:56+00:00,,0,Fliegende-Rehe/fpga_tetris,733265708,SystemVerilog,fpga_tetris,33,0,2023-12-19 00:01:16+00:00,[],
15305,https://github.com/roa-jaser/Advance_Digital.git,2024-01-25 17:36:56+00:00,solution for Course Assignment,0,roa-jaser/Advance_Digital,748302445,SystemVerilog,Advance_Digital,3,0,2024-01-25 17:37:37+00:00,[],
15306,https://github.com/ninghaomiao2002/Verilog-Exercises.git,2023-12-25 15:48:07+00:00,This Repository is used for basic Verilog Exercises.,0,ninghaomiao2002/Verilog-Exercises,735627874,SystemVerilog,Verilog-Exercises,2,0,2024-01-25 20:15:44+00:00,[],
15307,https://github.com/MyWurger/4.2.-RAM-Design-and-Simulation.git,2024-01-25 21:28:28+00:00,,0,MyWurger/4.2.-RAM-Design-and-Simulation,748386916,SystemVerilog,4.2.-RAM-Design-and-Simulation,7,0,2024-01-26 10:30:09+00:00,[],
15308,https://github.com/Tan-YiFan/rvcpu.git,2024-01-25 08:14:51+00:00,,0,Tan-YiFan/rvcpu,748075614,SystemVerilog,rvcpu,3241,0,2024-01-25 11:21:52+00:00,[],
15309,https://github.com/jona250210/tt05_systemc.git,2024-01-25 21:45:35+00:00,,0,jona250210/tt05_systemc,748392312,SystemVerilog,tt05_systemc,21,0,2024-01-26 15:52:49+00:00,[],https://api.github.com/licenses/apache-2.0
15310,https://github.com/PacktPublishing/Mastering-FPGA.git,2024-01-19 08:55:08+00:00,,0,PacktPublishing/Mastering-FPGA,745399504,SystemVerilog,Mastering-FPGA,177,0,2024-02-03 06:35:58+00:00,[],https://api.github.com/licenses/mit
15311,https://github.com/Spirithead/Stream-Arbiter.git,2024-01-11 17:38:47+00:00,,0,Spirithead/Stream-Arbiter,742067366,SystemVerilog,Stream-Arbiter,52,0,2024-01-12 05:15:04+00:00,[],
15312,https://github.com/flaviens/icarus-b2.git,2024-01-16 18:18:55+00:00,,0,flaviens/icarus-b2,744154534,SystemVerilog,icarus-b2,2,0,2024-01-16 18:19:16+00:00,[],
15313,https://github.com/Arvind-Kumar-Dv/all_gate_uvm_tb.git,2024-01-17 11:10:04+00:00,uvm_tb_gate,0,Arvind-Kumar-Dv/all_gate_uvm_tb,744468634,SystemVerilog,all_gate_uvm_tb,4,0,2024-01-17 11:14:00+00:00,[],
15314,https://github.com/bryanjangeesingh/Environmental-Noise-Cancellation.git,2024-01-19 07:15:48+00:00,Environmental Noise Cancellation on an FPGA. ,0,bryanjangeesingh/Environmental-Noise-Cancellation,745365916,SystemVerilog,Environmental-Noise-Cancellation,2992,0,2024-01-19 07:20:02+00:00,[],
15315,https://github.com/Shalu2613/AHB2APB-Bridge-IP-Core-Verification.git,2024-01-13 15:42:05+00:00,The AHB to APB bridge is an AHB slave which works as an interface between the high speed AHB and the low performance APB buses.,0,Shalu2613/AHB2APB-Bridge-IP-Core-Verification,742862902,SystemVerilog,AHB2APB-Bridge-IP-Core-Verification,18,0,2024-01-13 15:49:17+00:00,[],
15316,https://github.com/fedejone/3.1.-2.-Quolity-of-Service-QoS-.git,2023-12-19 19:55:16+00:00,,0,fedejone/3.1.-2.-Quolity-of-Service-QoS-,733645840,SystemVerilog,3.1.-2.-Quolity-of-Service-QoS-,401,0,2023-12-19 19:57:54+00:00,[],
15317,https://github.com/theashix/worldshardestgame.git,2024-01-19 22:08:45+00:00,,0,theashix/worldshardestgame,745691487,SystemVerilog,worldshardestgame,26,0,2024-01-19 22:18:42+00:00,[],
15318,https://github.com/Skrollek/Logika-Cyfrowa.git,2024-01-19 15:28:49+00:00,,0,Skrollek/Logika-Cyfrowa,745551837,SystemVerilog,Logika-Cyfrowa,580,0,2024-01-19 15:35:05+00:00,[],
15319,https://github.com/timotheeCloup/ascon128.git,2024-01-17 14:20:40+00:00,Réalisation d'un projet visant à mettre en œuvre une version simplifiée de l'algorithme de chiffrement symétrique ASCON128.,0,timotheeCloup/ascon128,744546368,SystemVerilog,ascon128,1264,0,2024-01-20 17:42:25+00:00,[],
15320,https://github.com/flaviens/cxxrtl-b2.git,2024-01-20 17:31:24+00:00,,0,flaviens/cxxrtl-b2,745967358,SystemVerilog,cxxrtl-b2,2,0,2024-01-20 17:32:46+00:00,[],
15321,https://github.com/AmaanSingh/SHA-256-Bitcoin.git,2023-12-23 11:07:25+00:00,SHA 256 and Bitcoin implementation in System Verilog,0,AmaanSingh/SHA-256-Bitcoin,735014843,SystemVerilog,SHA-256-Bitcoin,6278,0,2023-12-23 11:24:17+00:00,[],
15322,https://github.com/husrev/SHA3-core-UVM.git,2023-12-28 21:12:23+00:00,UVM verification of SHA3 (Keccak) core by Homer Hsing,0,husrev/SHA3-core-UVM,736778272,SystemVerilog,SHA3-core-UVM,11,0,2023-12-28 21:16:03+00:00,[],
15323,https://github.com/Hira-Firdous/3-Stage-Pipeline-Project.git,2023-12-30 13:59:13+00:00,,0,Hira-Firdous/3-Stage-Pipeline-Project,737291898,SystemVerilog,3-Stage-Pipeline-Project,827,0,2023-12-30 14:02:08+00:00,[],
15324,https://github.com/Kader-Khafif/Programmable-Processor.git,2023-12-30 22:54:23+00:00,Implementing six-instruction programmable processor using SystemVerilog.,0,Kader-Khafif/Programmable-Processor,737404397,SystemVerilog,Programmable-Processor,1598,0,2023-12-30 23:10:10+00:00,[],
15325,https://github.com/hicodev-rw/Simulation-sv.git,2024-01-03 16:35:50+00:00,,0,hicodev-rw/Simulation-sv,738617516,SystemVerilog,Simulation-sv,123,0,2024-01-03 16:45:52+00:00,[],https://api.github.com/licenses/mit
15326,https://github.com/leonardhamana/altera.git,2024-01-03 18:19:45+00:00,,0,leonardhamana/altera,738654247,SystemVerilog,altera,8,0,2024-01-03 18:27:07+00:00,[],
15327,https://github.com/78dfjl/sv_string.git,2024-01-09 15:45:16+00:00,,0,78dfjl/sv_string,741050686,SystemVerilog,sv_string,6,0,2024-01-09 16:29:24+00:00,[],
15328,https://github.com/StavPinhas/Projects.git,2023-12-30 08:39:12+00:00,,0,StavPinhas/Projects,737223272,SystemVerilog,Projects,22333,0,2024-02-08 14:10:37+00:00,[],
15329,https://github.com/kodeyang284/uvm_practice.git,2024-01-22 08:47:01+00:00,,0,kodeyang284/uvm_practice,746556468,SystemVerilog,uvm_practice,119,0,2024-01-22 09:25:50+00:00,[],
15330,https://github.com/Hamzaweb49/sequentialmultiplier.git,2023-12-28 14:10:37+00:00,16x16 Sequential Multiplier in System Verilog,0,Hamzaweb49/sequentialmultiplier,736661337,SystemVerilog,sequentialmultiplier,1441,0,2024-01-21 10:08:22+00:00,[],
15331,https://github.com/BAJANTRISIVA/-30daysofsystemverilog.git,2023-12-28 07:04:27+00:00,,0,BAJANTRISIVA/-30daysofsystemverilog,736535926,SystemVerilog,-30daysofsystemverilog,55,0,2023-12-28 07:22:15+00:00,[],
15332,https://github.com/juinchuen/Chip-Design-2024.git,2024-01-19 03:12:49+00:00,,0,juinchuen/Chip-Design-2024,745299827,SystemVerilog,Chip-Design-2024,5269,0,2024-02-07 06:17:28+00:00,[],
15333,https://github.com/nvchuyen/Verification_of_I2C_Memory.git,2023-12-18 09:22:03+00:00,,0,nvchuyen/Verification_of_I2C_Memory,732970972,SystemVerilog,Verification_of_I2C_Memory,5380,0,2023-12-18 09:24:35+00:00,[],
15334,https://github.com/ZhengYuhe/NoC_characterization.git,2023-12-18 11:15:05+00:00,,0,ZhengYuhe/NoC_characterization,733012570,SystemVerilog,NoC_characterization,6,0,2023-12-18 12:02:14+00:00,[],
15335,https://github.com/TnnsBeast/AES-128-FPGA-Accelerator.git,2023-12-19 19:38:09+00:00,FPGA hardware accelerator to perform AES-128 encryption ,0,TnnsBeast/AES-128-FPGA-Accelerator,733640551,SystemVerilog,AES-128-FPGA-Accelerator,2565,0,2023-12-19 19:42:27+00:00,[],
15336,https://github.com/jfu4/CPEN-211-Labs.git,2023-12-27 23:51:45+00:00,,0,jfu4/CPEN-211-Labs,736446543,SystemVerilog,CPEN-211-Labs,7,0,2023-12-27 23:58:45+00:00,[],
15337,https://github.com/By41k/Sapr1.git,2023-12-27 19:31:53+00:00,,0,By41k/Sapr1,736394667,SystemVerilog,Sapr1,5,0,2023-12-27 23:33:24+00:00,[],
15338,https://github.com/kp-deepak/projects.git,2023-12-18 15:26:00+00:00,all the projects under this umbrella,0,kp-deepak/projects,733108772,SystemVerilog,projects,5,0,2023-12-18 15:35:32+00:00,[],
15339,https://github.com/Ammara-Noor/three-stage-pipelined-proc-riscv.git,2023-12-30 13:39:15+00:00,,0,Ammara-Noor/three-stage-pipelined-proc-riscv,737287264,SystemVerilog,three-stage-pipelined-proc-riscv,188,0,2023-12-30 13:42:18+00:00,[],
15340,https://github.com/aamirbutt011/CA_Semstr-7.git,2023-12-30 18:02:32+00:00,,0,aamirbutt011/CA_Semstr-7,737350834,SystemVerilog,CA_Semstr-7,301,0,2023-12-30 18:05:59+00:00,[],
15341,https://github.com/AneezaSabirButt/CA_3StagePipelining_2020CE42-Final-Project-.git,2023-12-30 16:08:45+00:00,,0,AneezaSabirButt/CA_3StagePipelining_2020CE42-Final-Project-,737323234,SystemVerilog,CA_3StagePipelining_2020CE42-Final-Project-,501,0,2023-12-30 16:21:40+00:00,[],
15342,https://github.com/TnnsBeast/FPGA-8bit-CPU.git,2023-12-31 02:07:03+00:00,SystemVerilog Implementation of Ben Eater's 8-Bit CPU,0,TnnsBeast/FPGA-8bit-CPU,737429677,SystemVerilog,FPGA-8bit-CPU,2,0,2023-12-31 02:07:08+00:00,[],
15343,https://github.com/kchandrasek4/Audio_Equalizer.git,2024-01-03 23:13:33+00:00,"Design and Synthesis for Bluetooth Audio Equalizer utilizing UART, I2S, SPI, A2D, PDM, low pass filters, DSP FIR Filters, class D amps. Optimization complete.",0,kchandrasek4/Audio_Equalizer,738732036,SystemVerilog,Audio_Equalizer,935,0,2024-01-03 23:15:08+00:00,[],
15344,https://github.com/jesseVernallis/legv8CPU.git,2023-12-21 19:20:04+00:00,,0,jesseVernallis/legv8CPU,734474254,SystemVerilog,legv8CPU,197,0,2023-12-26 19:26:09+00:00,[],
15345,https://github.com/rishabh4749/D_latch.git,2023-12-29 06:25:19+00:00,,0,rishabh4749/D_latch,736879887,SystemVerilog,D_latch,4,0,2024-01-13 14:42:14+00:00,[],
15346,https://github.com/wa-kakalala/des_systemverilog.git,2023-12-29 13:22:34+00:00,implement des with systemverilog,0,wa-kakalala/des_systemverilog,736990277,SystemVerilog,des_systemverilog,1220,0,2023-12-29 14:24:09+00:00,[],
15347,https://github.com/qil008/9bit-Mips-processor.git,2024-01-15 02:18:49+00:00,,0,qil008/9bit-Mips-processor,743338043,SystemVerilog,9bit-Mips-processor,4742,0,2024-01-15 02:18:57+00:00,[],
15348,https://github.com/SrikantDV/counter.git,2024-01-16 09:11:21+00:00,"This is simple 2 bit counter, which counts from 00 to 11. When it will reach 11 again it will start from 00. The reset value of the count value is 00. ",0,SrikantDV/counter,743918665,SystemVerilog,counter,7,0,2024-01-17 05:02:59+00:00,[],
15349,https://github.com/shrujanus/Pipelined-Multimedia-SIMD-Unit.git,2024-01-18 14:07:56+00:00,,0,shrujanus/Pipelined-Multimedia-SIMD-Unit,745033286,SystemVerilog,Pipelined-Multimedia-SIMD-Unit,10394,0,2024-01-18 14:20:16+00:00,[],
15350,https://github.com/Slamy/fpga-color-pong.git,2024-01-14 19:06:50+00:00,A game of pong in color,0,Slamy/fpga-color-pong,743247262,SystemVerilog,fpga-color-pong,99,0,2024-01-15 17:04:04+00:00,[],https://api.github.com/licenses/mit
15351,https://github.com/DimanYLT/UIRS_TPU.git,2024-01-19 14:01:50+00:00,,0,DimanYLT/UIRS_TPU,745515805,SystemVerilog,UIRS_TPU,12,0,2024-01-19 14:10:19+00:00,[],
15352,https://github.com/Vietngo2748/UART-IN-FPGA-DE-10-LITE.git,2024-01-03 02:49:15+00:00,Interface between UART and computer to send and receive data,0,Vietngo2748/UART-IN-FPGA-DE-10-LITE,738348230,SystemVerilog,UART-IN-FPGA-DE-10-LITE,10885,0,2024-01-03 03:08:14+00:00,[],
15353,https://github.com/XeniaPhe/Space-Sim-With-VGA-and-PS2.git,2024-01-18 23:04:26+00:00,A basic screen with a movable spaceship with cyclone IV EP4CE22F17 a VGA monitor and a PS2 keyboard,0,XeniaPhe/Space-Sim-With-VGA-and-PS2,745240463,SystemVerilog,Space-Sim-With-VGA-and-PS2,150852,0,2024-01-18 23:09:11+00:00,[],
15354,https://github.com/MKrekker/SystemVerilog.git,2024-01-10 21:19:30+00:00,,0,MKrekker/SystemVerilog,741663524,SystemVerilog,SystemVerilog,22,0,2024-01-22 21:37:19+00:00,[],
15355,https://github.com/michaelgranberryii/fpga-guessing-game.git,2024-01-05 23:07:24+00:00,,0,michaelgranberryii/fpga-guessing-game,739579525,SystemVerilog,fpga-guessing-game,15,0,2024-01-05 23:08:13+00:00,[],
15356,https://github.com/SZ425/eecs470-project1.git,2024-01-22 21:29:46+00:00,,0,SZ425/eecs470-project1,746884548,SystemVerilog,eecs470-project1,4,0,2024-01-22 22:18:19+00:00,[],
15357,https://github.com/hsirrk/CPU-Design-with-FSM-Control.git,2024-01-23 03:25:58+00:00,,0,hsirrk/CPU-Design-with-FSM-Control,746992075,SystemVerilog,CPU-Design-with-FSM-Control,33,0,2024-01-23 03:38:46+00:00,[],
15358,https://github.com/Gnel77/FullAdder.git,2024-01-23 19:49:55+00:00,"This is my first ""work"" I do in Github. Hope you will find it useful. I tried to find solutions of FullAdder in Verilog program, but not all program pass the TestBench.",0,Gnel77/FullAdder,747371475,SystemVerilog,FullAdder,7,0,2024-01-23 19:55:30+00:00,[],
15359,https://github.com/sidharthsudhir-03/RISC-V-Implementation.git,2024-01-22 21:41:10+00:00,,0,sidharthsudhir-03/RISC-V-Implementation,746888195,SystemVerilog,RISC-V-Implementation,261,0,2024-01-22 22:38:07+00:00,[],
15360,https://github.com/Didi7777777/EE387.git,2024-01-17 19:31:32+00:00,,0,Didi7777777/EE387,744676026,SystemVerilog,EE387,43,0,2024-02-06 15:42:55+00:00,[],
15361,https://github.com/Sourishs500/DAV2023.git,2024-01-18 07:46:21+00:00,,0,Sourishs500/DAV2023,744883518,SystemVerilog,DAV2023,7645,0,2024-02-09 20:26:15+00:00,[],
15362,https://github.com/naithanianshul/Single-Core-5-stage-MIPS-pipeline-RTL.git,2023-12-20 16:06:17+00:00,RTL design of a single core 5-stage MIPS pipeline CPU implementation in Verilog,0,naithanianshul/Single-Core-5-stage-MIPS-pipeline-RTL,733997541,SystemVerilog,Single-Core-5-stage-MIPS-pipeline-RTL,32,0,2023-12-22 02:16:09+00:00,[],
15363,https://github.com/Hitesh-K18/XOR-Verification-with-UVM.git,2024-01-15 19:29:56+00:00,,0,Hitesh-K18/XOR-Verification-with-UVM,743693169,SystemVerilog,XOR-Verification-with-UVM,7,0,2024-02-01 16:42:55+00:00,[],
15364,https://github.com/Kyrithdagon/EE-CS120A.git,2024-01-20 21:32:32+00:00,,0,Kyrithdagon/EE-CS120A,746030235,SystemVerilog,EE-CS120A,2315,0,2024-02-03 00:23:31+00:00,"['labs', 'systemverilog', 'verilog', 'eda-playground', 'icarus-verilog']",
15365,https://github.com/mitha-rao/J-K-flip-flop-Layered-testbench-system-verilog.git,2024-01-08 13:32:47+00:00,,0,mitha-rao/J-K-flip-flop-Layered-testbench-system-verilog,740503196,SystemVerilog,J-K-flip-flop-Layered-testbench-system-verilog,14,0,2024-03-10 07:03:23+00:00,[],
15366,https://github.com/t1msi/fpga_lab_1.git,2024-01-05 12:29:00+00:00,,0,t1msi/fpga_lab_1,739380018,SystemVerilog,fpga_lab_1,989,0,2024-01-08 10:07:38+00:00,[],
15367,https://github.com/D-girl-11t/UVM-based-verification-of-a-Simple-Calculator-.git,2023-12-20 18:06:03+00:00,,0,D-girl-11t/UVM-based-verification-of-a-Simple-Calculator-,734040663,SystemVerilog,UVM-based-verification-of-a-Simple-Calculator-,54,0,2023-12-20 18:08:00+00:00,[],
15368,https://github.com/natelannan-osu/dldFinalProject_Spring24.git,2024-01-16 05:14:32+00:00,Final Project for Digital Logic Design Spring 24,0,natelannan-osu/dldFinalProject_Spring24,743839509,SystemVerilog,dldFinalProject_Spring24,7282,0,2024-04-01 05:51:55+00:00,[],
15369,https://github.com/Jiawey1227/SV_Project.git,2024-01-25 01:31:30+00:00,some SystemVerilog projects,0,Jiawey1227/SV_Project,747962559,SystemVerilog,SV_Project,49,0,2024-01-26 22:50:57+00:00,[],
15370,https://github.com/tdloveless/iu-vlsi.git,2024-01-06 13:40:37+00:00,IUB ENGR-E-399/599 VLSI Course Material,1,tdloveless/iu-vlsi,739767893,SystemVerilog,iu-vlsi,35840,0,2024-02-15 18:12:39+00:00,[],https://api.github.com/licenses/apache-2.0
15371,https://github.com/fyflxl/try.git,2023-12-19 09:50:52+00:00,,0,fyflxl/try,733424599,SystemVerilog,try,34,0,2023-12-19 09:53:30+00:00,[],
15372,https://github.com/Raghubabu7993/Systemverilog.git,2023-12-21 07:13:12+00:00,,0,Raghubabu7993/Systemverilog,734228861,SystemVerilog,Systemverilog,2,0,2023-12-21 09:23:38+00:00,[],
15373,https://github.com/punzik/lfsr-coundown.git,2023-12-27 13:08:48+00:00,Down counter based on LFSR,0,punzik/lfsr-coundown,736275265,SystemVerilog,lfsr-coundown,9,0,2023-12-27 13:09:49+00:00,[],
15374,https://github.com/AYYAZmayo/SystemVerilog_Functional_Coverage.git,2023-12-28 11:43:26+00:00,,0,AYYAZmayo/SystemVerilog_Functional_Coverage,736616125,SystemVerilog,SystemVerilog_Functional_Coverage,473,0,2023-12-28 13:12:35+00:00,[],
15375,https://github.com/shanmukhsai2k2/Cocotb-SDIO.git,2023-12-27 11:28:45+00:00,,0,shanmukhsai2k2/Cocotb-SDIO,736245641,SystemVerilog,Cocotb-SDIO,33,0,2023-12-28 14:21:13+00:00,[],
15377,https://github.com/kaleabmarkos/Vending-Machine-PR.git,2024-01-02 03:16:07+00:00,,0,kaleabmarkos/Vending-Machine-PR,737946282,SystemVerilog,Vending-Machine-PR,6,0,2024-01-02 03:18:14+00:00,[],
15378,https://github.com/Jonty16117/verilog-practice.git,2023-12-25 20:42:24+00:00,,0,Jonty16117/verilog-practice,735688974,SystemVerilog,verilog-practice,20,0,2023-12-27 15:41:34+00:00,[],
15379,https://github.com/0rdhiman0/100rtl.git,2024-01-06 10:50:20+00:00,,0,0rdhiman0/100rtl,739722775,SystemVerilog,100rtl,2,0,2024-01-06 11:04:34+00:00,[],
15380,https://github.com/Anunalla/SimpleAsPossibleProcessor.git,2023-12-27 20:08:47+00:00,,0,Anunalla/SimpleAsPossibleProcessor,736403514,SystemVerilog,SimpleAsPossibleProcessor,5,0,2023-12-27 20:08:53+00:00,[],
15381,https://github.com/pveligeti2/RISC-V-Functional-Verification.git,2024-01-10 10:29:01+00:00,,0,pveligeti2/RISC-V-Functional-Verification,741406491,SystemVerilog,RISC-V-Functional-Verification,75,0,2024-01-10 10:43:31+00:00,[],
15382,https://github.com/imanand816/Design-and-Verification-of-Synchronous-FIFO-using-System-Verilog.git,2024-01-14 06:55:35+00:00,,0,imanand816/Design-and-Verification-of-Synchronous-FIFO-using-System-Verilog,743050739,SystemVerilog,Design-and-Verification-of-Synchronous-FIFO-using-System-Verilog,136,0,2024-01-14 07:09:10+00:00,[],
15383,https://github.com/ananya343B/BCD-7seg_layered_tb.git,2024-01-16 16:35:23+00:00,,0,ananya343B/BCD-7seg_layered_tb,744109970,SystemVerilog,BCD-7seg_layered_tb,10,0,2024-01-16 16:36:38+00:00,[],
15384,https://github.com/stefg2002/DE10-Lite-Code-Cracker.git,2024-01-18 18:27:43+00:00,,0,stefg2002/DE10-Lite-Code-Cracker,745147743,SystemVerilog,DE10-Lite-Code-Cracker,4799,0,2024-01-18 18:40:24+00:00,[],
15385,https://github.com/Leon-Shao/CSI_loopback.git,2024-01-06 21:32:02+00:00,,0,Leon-Shao/CSI_loopback,739893139,SystemVerilog,CSI_loopback,707,0,2024-01-20 22:35:49+00:00,[],
15386,https://github.com/shrey3000/Arithematic_Logic_Unit.git,2024-01-21 17:54:23+00:00,,0,shrey3000/Arithematic_Logic_Unit,746317477,SystemVerilog,Arithematic_Logic_Unit,27,0,2024-01-21 18:06:35+00:00,[],
15387,https://github.com/Lols2002/Ascon128_Cipher.git,2024-01-18 11:24:39+00:00,,0,Lols2002/Ascon128_Cipher,744968274,SystemVerilog,Ascon128_Cipher,280,0,2024-01-23 08:49:57+00:00,[],
15388,https://github.com/flaviens/cxxrtl-b6.git,2024-01-24 14:54:05+00:00,,0,flaviens/cxxrtl-b6,747741955,SystemVerilog,cxxrtl-b6,7,0,2024-01-24 15:00:53+00:00,[],
15389,https://github.com/feipenghhq/NRC.git,2023-12-22 19:20:40+00:00,,0,feipenghhq/NRC,734840751,SystemVerilog,NRC,442,0,2024-01-21 03:42:00+00:00,[],https://api.github.com/licenses/apache-2.0
15390,https://github.com/tanitime/ee469.git,2024-01-25 22:53:31+00:00,Lab work in EE 469 Computer Architecture at the University of Washington,0,tanitime/ee469,748410956,SystemVerilog,ee469,171,0,2024-01-25 22:56:10+00:00,[],
15391,https://github.com/Gorruy/priority_encoder.git,2024-01-11 06:42:43+00:00,,0,Gorruy/priority_encoder,741809297,SystemVerilog,priority_encoder,141,0,2024-01-26 08:33:13+00:00,[],
15392,https://github.com/AlexWalburg/digital_audio_mixer.git,2023-12-26 21:02:35+00:00,Digital audio mixer in system verilog. Formally verified using symbiyosys,0,AlexWalburg/digital_audio_mixer,736050368,SystemVerilog,digital_audio_mixer,21,0,2023-12-26 21:05:54+00:00,[],
15393,https://github.com/LucasDamo22/uart-module-for-32-bit-words.git,2023-12-18 19:17:43+00:00,,0,LucasDamo22/uart-module-for-32-bit-words,733193611,SystemVerilog,uart-module-for-32-bit-words,46,0,2023-12-18 19:18:24+00:00,[],
15394,https://github.com/shariethernet/custom_zynq_1.git,2024-01-21 15:55:57+00:00,AXI4 Lite Slave - Zynq based Design,0,shariethernet/custom_zynq_1,746280339,SystemVerilog,custom_zynq_1,442,0,2024-02-06 20:32:49+00:00,[],https://api.github.com/licenses/mit
15395,https://github.com/Mi5sssss/ECSE-6700-Advanced-Computer-Architecture.git,2024-01-19 01:27:36+00:00,Code for ECSE 6700 Advanced Computer Architecture,0,Mi5sssss/ECSE-6700-Advanced-Computer-Architecture,745274142,SystemVerilog,ECSE-6700-Advanced-Computer-Architecture,580,0,2024-02-18 21:09:50+00:00,[],
15396,https://github.com/NilsDunlop/DIT728-Assignments.git,2024-01-16 09:02:50+00:00,,0,NilsDunlop/DIT728-Assignments,743915429,SystemVerilog,DIT728-Assignments,4053,0,2024-02-13 09:57:53+00:00,[],
15397,https://github.com/adam2305/ASCON128-crypto.git,2023-12-29 18:37:28+00:00,,0,adam2305/ASCON128-crypto,737076799,SystemVerilog,ASCON128-crypto,1535,0,2024-03-08 19:10:40+00:00,[],
15398,https://github.com/Fazail333/Booths_Multiplier.git,2023-12-25 10:21:50+00:00,,0,Fazail333/Booths_Multiplier,735550976,SystemVerilog,Booths_Multiplier,3198,0,2023-12-25 10:51:59+00:00,[],
15399,https://github.com/netchipguy/opencos.git,2024-01-22 08:24:28+00:00,OpenCOS -- the Open Chip Operating System,0,netchipguy/opencos,746548000,SystemVerilog,opencos,2413,0,2024-02-11 00:10:09+00:00,[],https://api.github.com/licenses/mpl-2.0
15400,https://github.com/PankajNair/Single-Cycle-RISC-V-Processor.git,2024-01-03 18:36:25+00:00,My implementation of the single-cycle RISC-V processor.,0,PankajNair/Single-Cycle-RISC-V-Processor,738659828,SystemVerilog,Single-Cycle-RISC-V-Processor,173,0,2024-03-30 19:27:00+00:00,[],
15401,https://github.com/jacquesc03/MazeRunner.git,2024-01-20 14:21:52+00:00,,0,jacquesc03/MazeRunner,745910522,SystemVerilog,MazeRunner,134,0,2024-01-20 14:29:05+00:00,[],
15402,https://github.com/UrosSrbulj/formalna.git,2024-01-18 00:03:08+00:00,,0,UrosSrbulj/formalna,744755384,SystemVerilog,formalna,12,0,2024-01-18 00:06:29+00:00,[],
15403,https://github.com/DanilTensa/isDD.git,2024-01-24 03:25:32+00:00,dajkey,0,DanilTensa/isDD,747496589,SystemVerilog,isDD,47,0,2024-01-24 03:25:50+00:00,[],
15404,https://github.com/xuzy8888/9bit-processor.git,2024-01-10 09:21:23+00:00,A 9 bit processor implemented with System Verilog that can perform simple arithmetic operations,0,xuzy8888/9bit-processor,741379431,SystemVerilog,9bit-processor,12,0,2024-01-23 21:25:33+00:00,[],
15405,https://github.com/patrickzha/MLP_Accelerator-project.git,2024-01-21 11:27:29+00:00,,0,patrickzha/MLP_Accelerator-project,746201136,SystemVerilog,MLP_Accelerator-project,367,0,2024-01-21 11:43:48+00:00,[],
15406,https://github.com/OmniaMohamed12/ALU-Verification-using-SystemVerilog.git,2024-01-22 17:56:57+00:00,Graduation project of ITI Digital IC Verification Internship,0,OmniaMohamed12/ALU-Verification-using-SystemVerilog,746805748,SystemVerilog,ALU-Verification-using-SystemVerilog,2318,0,2024-01-23 14:47:37+00:00,[],
15407,https://github.com/mgleeim1/EE303.git,2024-01-25 19:49:23+00:00,This is a System Verilog code for a EE303(B) project to make a Digital watch. ,0,mgleeim1/EE303,748353613,SystemVerilog,EE303,1185,0,2024-01-25 19:50:55+00:00,[],
15408,https://github.com/jimbro1000/fpga6847rgb.git,2024-01-20 16:31:01+00:00,Synthetic replacement for the Motorola 6847 Video Generator with PAL or NTSC RGB output,0,jimbro1000/fpga6847rgb,745949423,SystemVerilog,fpga6847rgb,15121,0,2024-01-20 17:42:19+00:00,[],https://api.github.com/licenses/mit
15409,https://github.com/mfallon90/mac.git,2024-01-14 20:36:06+00:00,,0,mfallon90/mac,743269367,SystemVerilog,mac,22,0,2024-01-15 23:52:06+00:00,[],
15410,https://github.com/UmerShahidengr/MatMul_Accelerator.git,2024-01-16 17:53:41+00:00,,0,UmerShahidengr/MatMul_Accelerator,744144026,SystemVerilog,MatMul_Accelerator,6793,0,2024-01-30 14:29:31+00:00,[],
15411,https://github.com/lkim07/Baccarat.git,2023-12-23 22:42:05+00:00,,0,lkim07/Baccarat,735166235,SystemVerilog,Baccarat,7,0,2023-12-23 22:44:34+00:00,[],
15412,https://github.com/ABID-U/https-3-Stage-Pipelined-Processor-with-CSR-support.git,2023-12-27 20:22:27+00:00,,0,ABID-U/https-3-Stage-Pipelined-Processor-with-CSR-support,736406693,SystemVerilog,https-3-Stage-Pipelined-Processor-with-CSR-support,296,0,2023-12-27 20:25:45+00:00,[],
15413,https://github.com/galaxybabyy/LABA_SAP_2.git,2023-12-26 18:24:09+00:00,,0,galaxybabyy/LABA_SAP_2,736013502,SystemVerilog,LABA_SAP_2,4,0,2023-12-26 18:57:55+00:00,[],
15414,https://github.com/abhiverma13/RISC-Machine.git,2023-12-18 03:40:55+00:00,,0,abhiverma13/RISC-Machine,732871503,SystemVerilog,RISC-Machine,501,0,2023-12-29 20:22:26+00:00,[],
15415,https://github.com/SreenivasanJJ/carry_save_adder.git,2023-12-31 15:17:26+00:00,,0,SreenivasanJJ/carry_save_adder,737572338,SystemVerilog,carry_save_adder,10,0,2023-12-31 15:19:09+00:00,[],
15416,https://github.com/hamid-chipstack/testing.git,2023-12-29 22:11:01+00:00,All the benchmarks for different projects,0,hamid-chipstack/testing,737120833,SystemVerilog,testing,4,0,2023-12-29 22:44:02+00:00,[],
15417,https://github.com/nvchuyen/Understanding_Virtual_Sequencer.git,2023-12-26 08:37:38+00:00,,0,nvchuyen/Understanding_Virtual_Sequencer,735844885,SystemVerilog,Understanding_Virtual_Sequencer,5430,0,2023-12-27 08:53:20+00:00,[],
15418,https://github.com/thunnie920/COSE221.git,2024-01-02 12:52:03+00:00,Digital Logic Design,0,thunnie920/COSE221,738109337,SystemVerilog,COSE221,2677,0,2024-01-02 13:04:12+00:00,[],
15419,https://github.com/thunnie920/COSE222.git,2024-01-02 13:10:09+00:00,Computer Architecture,0,thunnie920/COSE222,738115443,SystemVerilog,COSE222,18842,0,2024-01-02 13:12:22+00:00,[],
15420,https://github.com/cimonik/CPU_singlecycle.git,2024-01-03 11:07:04+00:00,single cycle risc V Cpu,0,cimonik/CPU_singlecycle,738495744,SystemVerilog,CPU_singlecycle,6,0,2024-01-03 11:08:46+00:00,[],
15421,https://github.com/Sanjay4477/12-hour-clock-using-Verilog.git,2024-01-07 14:46:25+00:00,,0,Sanjay4477/12-hour-clock-using-Verilog,740105777,SystemVerilog,12-hour-clock-using-Verilog,0,0,2024-01-07 15:10:40+00:00,[],
15422,https://github.com/rishabh4749/Left_Right_Rotator.git,2024-01-01 17:37:42+00:00,,0,rishabh4749/Left_Right_Rotator,737841748,SystemVerilog,Left_Right_Rotator,4,0,2024-01-13 14:53:37+00:00,[],
15423,https://github.com/dsa-shua/FPGA-SystolicArray.git,2024-01-08 14:32:07+00:00,"Working 8x8 systolic array hardware implemented in Xilinx Vivado, operated and controlled in software using Xilinx Vitis",0,dsa-shua/FPGA-SystolicArray,740529937,SystemVerilog,FPGA-SystolicArray,1662,0,2024-02-16 12:25:15+00:00,"['accelerator', 'fpga', 'hardware', 'hardware-acceleration', 'hardware-designs', 'hdl', 'matrix', 'matrix-multiplication', 'project', 'pynq-z2', 'sdk', 'systemverilog', 'systolic-arrays', 'verilog', 'vitis', 'vivado', 'xilinx', 'zynq-7000']",
15424,https://github.com/kashorafof/Riscv32I_SV_implementation.git,2024-01-12 17:12:55+00:00,Implementation of the Riscv32i ISA using systemverilog,0,kashorafof/Riscv32I_SV_implementation,742524857,SystemVerilog,Riscv32I_SV_implementation,1531,0,2024-02-20 09:54:48+00:00,[],
15425,https://github.com/Benjamin-Anderson-II/ECE_272-Lab6.git,2023-12-23 00:52:22+00:00,VGA color switcher (no ROM),0,Benjamin-Anderson-II/ECE_272-Lab6,734901787,SystemVerilog,ECE_272-Lab6,1,0,2023-12-23 00:52:44+00:00,[],
15426,https://github.com/nick-pilgrim/Microprocessor.git,2023-12-26 21:14:57+00:00,This file contains the programming for a microprocessor,0,nick-pilgrim/Microprocessor,736052803,SystemVerilog,Microprocessor,5,0,2023-12-26 21:15:10+00:00,[],
15427,https://github.com/rykent/OTTER-MCU_LCD_Demo.git,2023-12-27 06:40:32+00:00,,0,rykent/OTTER-MCU_LCD_Demo,736163047,SystemVerilog,OTTER-MCU_LCD_Demo,706,0,2023-12-27 07:01:07+00:00,[],
15428,https://github.com/kysya11/Sapr1.git,2023-12-20 23:06:53+00:00,,0,kysya11/Sapr1,734118139,SystemVerilog,Sapr1,13,0,2023-12-20 23:47:43+00:00,[],
15429,https://github.com/WajahatRiaz/AHB-Lite-Smoke.git,2023-12-27 09:59:28+00:00,,0,WajahatRiaz/AHB-Lite-Smoke,736219442,SystemVerilog,AHB-Lite-Smoke,1266,0,2023-12-27 10:04:08+00:00,[],https://api.github.com/licenses/gpl-3.0
15430,https://github.com/talha6663/three-stage-pipelined-processor.git,2023-12-30 17:25:17+00:00,,0,talha6663/three-stage-pipelined-processor,737342301,SystemVerilog,three-stage-pipelined-processor,383,0,2023-12-30 17:28:18+00:00,[],
15432,https://github.com/Umer282Irshad/RISCV_3Stage.git,2023-12-30 18:00:28+00:00,,0,Umer282Irshad/RISCV_3Stage,737350426,SystemVerilog,RISCV_3Stage,167,0,2023-12-30 18:07:43+00:00,[],
15433,https://github.com/Hirasoh/Risc_V_Termproject.git,2023-12-30 15:27:53+00:00,,0,Hirasoh/Risc_V_Termproject,737313399,SystemVerilog,Risc_V_Termproject,377,0,2023-12-30 15:34:40+00:00,[],
15434,https://github.com/vaixbhav/risc-machine.git,2024-01-04 00:11:18+00:00,Designed RISC Machine using Verilog HDL to follow extensive instruction set. Processor pipelined for efficient instruction execution and maximal performance.,0,vaixbhav/risc-machine,738743329,SystemVerilog,risc-machine,31,0,2024-01-04 02:46:44+00:00,[],
15435,https://github.com/JianmingTONG/ZPRIZE_AWS.git,2024-01-05 06:12:53+00:00,,0,JianmingTONG/ZPRIZE_AWS,739257264,SystemVerilog,ZPRIZE_AWS,124,0,2024-01-05 06:56:36+00:00,[],
15436,https://github.com/raiyan-2002/RISC.git,2024-01-06 06:41:53+00:00,,0,raiyan-2002/RISC,739664260,SystemVerilog,RISC,684,0,2024-01-06 06:42:00+00:00,[],
15437,https://github.com/OmarAzula/lab_project.git,2023-12-30 18:53:06+00:00,,0,OmarAzula/lab_project,737361901,SystemVerilog,lab_project,157,0,2024-01-07 17:18:02+00:00,[],
15438,https://github.com/prateek-0328/Memory-Subsystem-with-Approximate-Data-Transfer.git,2023-12-18 11:23:46+00:00,"Implemented a memory subsystem consisting of an L1D cache and a main memory. Whenever there is a miss in L1D cache, an error tolerance information is sent along with the data request that aims to reduce power consumption. This project is implemented using the HDL language - SystemVerilog.",0,prateek-0328/Memory-Subsystem-with-Approximate-Data-Transfer,733015737,SystemVerilog,Memory-Subsystem-with-Approximate-Data-Transfer,8,0,2023-12-18 11:26:27+00:00,[],
15439,https://github.com/mahmedadawy2013/SV_TB_Register_Memory.git,2023-12-20 07:12:54+00:00,,0,mahmedadawy2013/SV_TB_Register_Memory,733809289,SystemVerilog,SV_TB_Register_Memory,322,0,2023-12-20 07:13:47+00:00,[],
15440,https://github.com/HummockHamek/Design-and-Verification-of-Synchronous-FIFO-using-SystemVerilog.git,2024-01-14 18:28:58+00:00,,0,HummockHamek/Design-and-Verification-of-Synchronous-FIFO-using-SystemVerilog,743236773,SystemVerilog,Design-and-Verification-of-Synchronous-FIFO-using-SystemVerilog,12,0,2024-01-14 18:33:06+00:00,[],
15441,https://github.com/rishabh4749/DFF_Reset_Value.git,2023-12-28 19:17:50+00:00,,0,rishabh4749/DFF_Reset_Value,736752426,SystemVerilog,DFF_Reset_Value,4,0,2024-01-13 14:39:05+00:00,[],
15442,https://github.com/ValdiviaM/algoritmo_de_booth.git,2024-01-11 15:35:57+00:00,,0,ValdiviaM/algoritmo_de_booth,742017064,SystemVerilog,algoritmo_de_booth,327,0,2024-01-11 15:48:53+00:00,[],
15443,https://github.com/AlanVanDang/Comp541-Final-Project-Wild-West-Showdown.git,2024-01-22 21:48:33+00:00,Western Showdown game for Comp541 Final Project.,0,AlanVanDang/Comp541-Final-Project-Wild-West-Showdown,746890344,SystemVerilog,Comp541-Final-Project-Wild-West-Showdown,6929,0,2024-01-22 22:57:38+00:00,[],
15444,https://github.com/achen200/hamming_parity.git,2024-01-24 00:10:13+00:00,,0,achen200/hamming_parity,747447616,SystemVerilog,hamming_parity,83,0,2024-01-24 00:11:31+00:00,[],
15445,https://github.com/MaxSailor/EITF35.git,2024-01-25 14:35:40+00:00,The LTH EITF35 course,0,MaxSailor/EITF35,748223888,SystemVerilog,EITF35,5,0,2024-01-25 14:45:47+00:00,[],
15446,https://github.com/varun-rajesh/SPI.git,2024-01-25 18:59:34+00:00,,0,varun-rajesh/SPI,748334213,SystemVerilog,SPI,90,0,2024-01-25 22:42:33+00:00,[],
15447,https://github.com/CovJus01/Image-Decompressor-Project.git,2024-01-18 00:30:33+00:00,Group Project Code for the Image decompression project,0,CovJus01/Image-Decompressor-Project,744762207,SystemVerilog,Image-Decompressor-Project,2593,0,2024-01-18 00:32:08+00:00,[],
15448,https://github.com/kapi36/Verification-of-16-bit-counter-using-Systemverilog.git,2024-01-17 13:51:38+00:00,In this project i am doing verification of 8 bit Counter using systemVerilog. The project is very basic and at this moment i am learning System verilog so this project is my first project in System verilog. ,0,kapi36/Verification-of-16-bit-counter-using-Systemverilog,744533407,SystemVerilog,Verification-of-16-bit-counter-using-Systemverilog,4,0,2024-01-19 13:44:56+00:00,[],
15449,https://github.com/jafetsoto/RVfpga-Cache-Implementation.git,2024-01-18 01:28:34+00:00,"Taking as a base the RVfpga system, designed for the Nexys 4DDR board, we will incorporate a cache memory into the system.",0,jafetsoto/RVfpga-Cache-Implementation,744777101,SystemVerilog,RVfpga-Cache-Implementation,6692,0,2024-02-02 02:57:54+00:00,[],
15450,https://github.com/KOTHAVANI/APB_PROTOCOL.git,2024-01-25 19:47:52+00:00,,1,KOTHAVANI/APB_PROTOCOL,748353011,SystemVerilog,APB_PROTOCOL,51,0,2024-02-05 10:29:38+00:00,[],
15451,https://github.com/pat0kamba/Vending-Machine.git,2024-01-18 23:25:07+00:00,,0,pat0kamba/Vending-Machine,745245400,SystemVerilog,Vending-Machine,7,0,2024-02-06 15:44:07+00:00,[],
15452,https://github.com/ZAINABFATIMA0/3-Stage-pipeline-Risc_V-architecture.git,2023-12-30 17:33:08+00:00,,0,ZAINABFATIMA0/3-Stage-pipeline-Risc_V-architecture,737344172,SystemVerilog,3-Stage-pipeline-Risc_V-architecture,60,0,2024-02-25 15:24:45+00:00,[],
15453,https://github.com/skshamshi/ECE593-W24-Project.git,2024-01-23 04:30:10+00:00,Design and Verification of Async FIFO,0,skshamshi/ECE593-W24-Project,747008330,SystemVerilog,ECE593-W24-Project,874,0,2024-01-25 20:03:44+00:00,[],
15454,https://github.com/abfouts/ece_593_asynchronous_fifo.git,2024-01-25 04:05:27+00:00,Final project for Portland States ECE 593 Pre Silicon Validation,1,abfouts/ece_593_asynchronous_fifo,748001525,SystemVerilog,ece_593_asynchronous_fifo,2379,0,2024-01-26 01:42:45+00:00,[],
15455,https://github.com/arruk/MIPS_monocycle.git,2024-01-09 20:10:37+00:00,,0,arruk/MIPS_monocycle,741155092,SystemVerilog,MIPS_monocycle,5,0,2024-01-09 21:43:41+00:00,[],
15456,https://github.com/Omar123511/Digital_Verification.git,2023-12-18 04:22:21+00:00,,0,Omar123511/Digital_Verification,732880625,SystemVerilog,Digital_Verification,50,0,2024-03-24 20:24:03+00:00,[],
15458,https://github.com/mira-sweis/MIPS-Multi-Cycle-CPU.git,2023-12-18 05:32:22+00:00,,0,mira-sweis/MIPS-Multi-Cycle-CPU,732896735,SystemVerilog,MIPS-Multi-Cycle-CPU,4,0,2023-12-18 05:33:33+00:00,[],
15459,https://github.com/DOKurilova/labaAPB.git,2023-12-18 14:27:41+00:00,,0,DOKurilova/labaAPB,733085026,SystemVerilog,labaAPB,12,0,2023-12-18 15:39:32+00:00,[],
15460,https://github.com/pauliedrico/MBE-RAD4-MULTIPLIER.git,2023-12-18 20:06:31+00:00,A MBE (Modified Booth Encoding) RAD4 (Radix-4) Multiplier implementation in System Verilog,0,pauliedrico/MBE-RAD4-MULTIPLIER,733208445,SystemVerilog,MBE-RAD4-MULTIPLIER,3311,0,2023-12-18 20:09:18+00:00,[],https://api.github.com/licenses/mit
15461,https://github.com/Yoavyu/FIFO-Associative-Cache.git,2023-12-21 09:58:48+00:00,,0,Yoavyu/FIFO-Associative-Cache,734284408,SystemVerilog,FIFO-Associative-Cache,16,0,2023-12-24 13:50:42+00:00,[],
15462,https://github.com/Benjamin-Anderson-II/ECE_271-Final.git,2023-12-23 00:54:26+00:00,RNGenerator that prints to 7seg,0,Benjamin-Anderson-II/ECE_271-Final,734902041,SystemVerilog,ECE_271-Final,1054,0,2023-12-23 00:55:03+00:00,[],
15463,https://github.com/mathewwu11/ARC4-Decryption-Circuit.git,2023-12-24 00:59:39+00:00,,0,mathewwu11/ARC4-Decryption-Circuit,735184452,SystemVerilog,ARC4-Decryption-Circuit,8,0,2023-12-24 01:04:48+00:00,"['systemverilog', 'verilog']",
15464,https://github.com/zhuravlik-top/VERILOG.git,2023-12-21 09:13:19+00:00,,0,zhuravlik-top/VERILOG,734268399,SystemVerilog,VERILOG,10,0,2023-12-27 21:11:35+00:00,[],
15465,https://github.com/m1chellelinn/Reduced-Instruction-Set-Computer-Implementation.git,2023-12-26 08:33:47+00:00,,0,m1chellelinn/Reduced-Instruction-Set-Computer-Implementation,735843863,SystemVerilog,Reduced-Instruction-Set-Computer-Implementation,17,0,2023-12-26 08:33:53+00:00,[],
15467,https://github.com/ksx2/verilogTask2.git,2023-12-28 06:36:48+00:00,,0,ksx2/verilogTask2,736528513,SystemVerilog,verilogTask2,3,0,2023-12-28 06:38:46+00:00,[],
15468,https://github.com/shahzaib663/CA_FINAL_PROJECT.git,2023-12-30 18:06:52+00:00,new repo,0,shahzaib663/CA_FINAL_PROJECT,737351824,SystemVerilog,CA_FINAL_PROJECT,302,0,2023-12-30 18:25:42+00:00,[],
15469,https://github.com/mikearl774/DES-Spr22.git,2023-12-30 18:08:30+00:00,,0,mikearl774/DES-Spr22,737352191,SystemVerilog,DES-Spr22,39351,0,2023-12-30 18:11:08+00:00,[],
15470,https://github.com/dav3floyd/FEC-Processor.git,2023-12-31 07:17:07+00:00,Custom processor that supports specific Forward Error Correction (FEC) tasks.,0,dav3floyd/FEC-Processor,737477810,SystemVerilog,FEC-Processor,87,0,2023-12-31 07:38:15+00:00,[],
15471,https://github.com/mohamedvdn/COCOTB-SDIO_PROTOCOL.git,2023-12-29 13:35:45+00:00,,1,mohamedvdn/COCOTB-SDIO_PROTOCOL,736993978,SystemVerilog,COCOTB-SDIO_PROTOCOL,35,0,2023-12-31 01:10:33+00:00,[],
15472,https://github.com/IvanGrafsky/gray_vs_mtstb.git,2023-12-31 21:04:31+00:00,,0,IvanGrafsky/gray_vs_mtstb,737634411,SystemVerilog,gray_vs_mtstb,2,0,2023-12-31 21:12:30+00:00,[],
15473,https://github.com/ManojMaruvapalli/Layered-TestBench.git,2024-01-04 14:22:15+00:00,A Layered Testbench for a Half Adder Design,0,ManojMaruvapalli/Layered-TestBench,738992335,SystemVerilog,Layered-TestBench,2,0,2024-01-04 14:22:20+00:00,[],
15474,https://github.com/qnigma/qnigma-rtl.git,2024-01-04 20:42:28+00:00,,0,qnigma/qnigma-rtl,739125621,SystemVerilog,qnigma-rtl,191,0,2024-01-04 20:51:11+00:00,[],https://api.github.com/licenses/gpl-3.0
15475,https://github.com/JellyCo9064/RISC-V-CPU_CSE470.git,2024-01-05 01:30:11+00:00,RISC-V CPU developed for the Xilinx Arty-100T FPGA. Senior project for UW Computer Architecture II.,0,JellyCo9064/RISC-V-CPU_CSE470,739190682,SystemVerilog,RISC-V-CPU_CSE470,720,0,2024-01-05 01:39:06+00:00,[],
15476,https://github.com/AravindK25/AHB-to-APB_Bridge-Verification.git,2024-01-08 13:45:15+00:00,The AHB to APB bridge is an AHB slave which works as an interface between the high speed AHB and the low performance APB buses.,0,AravindK25/AHB-to-APB_Bridge-Verification,740508713,SystemVerilog,AHB-to-APB_Bridge-Verification,926,0,2024-01-08 13:47:52+00:00,[],
15477,https://github.com/Shalu2613/Router-1x3--RTL-Design-and-Verification.git,2024-01-13 15:28:37+00:00,"The router accepts data packets on a single 8- bit port and routes them to one of the three output channels, channel0, channel1 and channel2",0,Shalu2613/Router-1x3--RTL-Design-and-Verification,742858811,SystemVerilog,Router-1x3--RTL-Design-and-Verification,23,0,2024-01-13 15:38:57+00:00,[],
15478,https://github.com/Arvind-Kumar-Dv/constraint.git,2024-01-17 12:21:27+00:00,constraint type coding,0,Arvind-Kumar-Dv/constraint,744495823,SystemVerilog,constraint,154,0,2024-01-17 12:26:55+00:00,[],
15479,https://github.com/CinnamonSandwich/Single_Cycle_RISCV_Core.git,2024-01-04 13:27:36+00:00,A single cycle 5-stage RISCV core ,0,CinnamonSandwich/Single_Cycle_RISCV_Core,738971327,SystemVerilog,Single_Cycle_RISCV_Core,37,0,2024-01-04 13:47:11+00:00,[],
15480,https://github.com/shyeonn/Single_cycle_processor.git,2024-01-19 06:15:15+00:00,Week1,0,shyeonn/Single_cycle_processor,745346662,SystemVerilog,Single_cycle_processor,30,0,2024-01-21 20:40:47+00:00,[],
15481,https://github.com/Umer282Irshad/RISCV_5Stage.git,2024-01-15 18:23:29+00:00,,0,Umer282Irshad/RISCV_5Stage,743669557,SystemVerilog,RISCV_5Stage,30,0,2024-01-15 18:26:47+00:00,[],
15482,https://github.com/ChuckGarcian/verilog.git,2024-01-20 22:05:35+00:00,,0,ChuckGarcian/verilog,746039371,SystemVerilog,verilog,50,0,2024-01-28 19:04:14+00:00,[],
15483,https://github.com/ColinWu427/LZW_FPGA_Occelerator.git,2024-01-23 17:10:37+00:00,"Implementation of LZW algorithm in verilog for FPGA implementation for Senior Capstone, ECE 4872.",0,ColinWu427/LZW_FPGA_Occelerator,747306151,SystemVerilog,LZW_FPGA_Occelerator,19076,0,2024-02-07 00:56:26+00:00,[],
15484,https://github.com/AdamGetBackToWork/Arithmetic_Logic_Unit_indiv_proj.git,2023-12-20 21:24:31+00:00,,0,AdamGetBackToWork/Arithmetic_Logic_Unit_indiv_proj,734095859,SystemVerilog,Arithmetic_Logic_Unit_indiv_proj,406,0,2024-03-09 20:40:59+00:00,[],
15485,https://github.com/fsaltunyuva/CMPE361-LAB5.git,2023-12-26 10:05:50+00:00,SystemVerilog Lab for the CMPE361 (Computer Organization) Course.,0,fsaltunyuva/CMPE361-LAB5,735869457,SystemVerilog,CMPE361-LAB5,15,0,2024-03-24 10:57:44+00:00,[],
15486,https://github.com/sakhan-1111/IEEE754-Encoder.git,2023-12-19 23:40:32+00:00,System Verilog code for single precision IEEE754 encoder.,0,sakhan-1111/IEEE754-Encoder,733701766,SystemVerilog,IEEE754-Encoder,13,0,2023-12-19 23:41:13+00:00,[],https://api.github.com/licenses/gpl-3.0
15487,https://github.com/jack1ew/RISC-V_CPU.git,2023-12-20 19:11:37+00:00,RISC-V CPU that computes the square root of a number up to a certain accuracy.,0,jack1ew/RISC-V_CPU,734060411,SystemVerilog,RISC-V_CPU,368,0,2023-12-20 19:14:53+00:00,[],
15488,https://github.com/Mariam-Sherif/Design-and-UVM-verification-for-Memory.git,2023-12-22 18:48:35+00:00,,0,Mariam-Sherif/Design-and-UVM-verification-for-Memory,734832859,SystemVerilog,Design-and-UVM-verification-for-Memory,7,0,2023-12-22 18:57:59+00:00,[],
15489,https://github.com/Michael200344/FPGA-Risk-World-Domination.git,2023-12-23 20:39:41+00:00,,0,Michael200344/FPGA-Risk-World-Domination,735146417,SystemVerilog,FPGA-Risk-World-Domination,41,0,2023-12-23 20:42:55+00:00,[],
15490,https://github.com/ceaj91/RISC-V_SV.git,2023-12-26 10:40:00+00:00,Implementation of basic RISCVI instrcution set in systemVerilog,0,ceaj91/RISC-V_SV,735878665,SystemVerilog,RISC-V_SV,8,0,2023-12-26 10:50:22+00:00,[],
15491,https://github.com/esdmr/mano-machine.git,2023-12-22 17:03:57+00:00,Mano Machine implementation in SystemVerilog,0,esdmr/mano-machine,734804317,SystemVerilog,mano-machine,122,0,2023-12-24 19:04:20+00:00,"['basic-computer', 'computer-architecture', 'mano-machine', 'systemverilog']",https://api.github.com/licenses/mit
15492,https://github.com/benjicruz/ECE-M116C-Honors-Project.git,2023-12-25 00:12:56+00:00,,0,benjicruz/ECE-M116C-Honors-Project,735440651,SystemVerilog,ECE-M116C-Honors-Project,23,0,2023-12-25 00:14:47+00:00,[],
15493,https://github.com/meentallyy/LR1_AP.git,2023-12-26 16:46:02+00:00,,0,meentallyy/LR1_AP,735985574,SystemVerilog,LR1_AP,6,0,2023-12-26 18:40:59+00:00,[],
15494,https://github.com/PopovArtS/cntrl_bram_AXI.git,2023-12-26 18:41:35+00:00,,0,PopovArtS/cntrl_bram_AXI,736017967,SystemVerilog,cntrl_bram_AXI,23,0,2023-12-26 18:43:24+00:00,[],
15495,https://github.com/shtzw965/puvm.git,2023-12-27 22:30:42+00:00,for bash and vcs; set VCS_HOME and UVM_HOME in env; add the dir of vcs to PATH; export WORK_HOME=`pwd`; export SIM_TOOL=VCS; PATH=$WORK_HOME/bin:$PATH;,0,shtzw965/puvm,736432892,SystemVerilog,puvm,118,0,2023-12-28 11:18:38+00:00,[],
15496,https://github.com/ttqureshi/3-stage-pipelined-32-bit-Processor-RISC-V-ISA-.git,2023-12-17 10:09:14+00:00,Implementation of 3 stage pipelined processor based on RISC-V Instruction Set Architecture,0,ttqureshi/3-stage-pipelined-32-bit-Processor-RISC-V-ISA-,732625501,SystemVerilog,3-stage-pipelined-32-bit-Processor-RISC-V-ISA-,2044,0,2023-12-31 05:30:22+00:00,"['hdl', 'processor-design', 'processor', 'riscv']",https://api.github.com/licenses/cc0-1.0
15497,https://github.com/Anya620/RISCV-Processor.git,2023-12-24 13:18:26+00:00,Computer Architecture Project (7th semester),0,Anya620/RISCV-Processor,735316117,SystemVerilog,RISCV-Processor,63,0,2023-12-30 19:15:15+00:00,[],
15498,https://github.com/Justin-Meme-Sometimes/UART-RX-TX.git,2023-12-31 09:28:46+00:00,UART RX and TX,0,Justin-Meme-Sometimes/UART-RX-TX,737501459,SystemVerilog,UART-RX-TX,887,0,2023-12-31 09:31:04+00:00,[],
15499,https://github.com/Nepranal/musicdecoder.git,2023-12-26 07:15:59+00:00,A project to be deployed on the FPGA,0,Nepranal/musicdecoder,735823312,SystemVerilog,musicdecoder,22231,0,2023-12-31 09:37:01+00:00,[],
15500,https://github.com/CEGB03/Copia-Proyecto-Arquitectura-I.git,2024-01-01 19:48:33+00:00,,0,CEGB03/Copia-Proyecto-Arquitectura-I,737870827,SystemVerilog,Copia-Proyecto-Arquitectura-I,2365,0,2024-01-01 19:51:46+00:00,[],
15501,https://github.com/MrVineetSharma/uvmproject.git,2024-01-02 06:49:12+00:00,,0,MrVineetSharma/uvmproject,737993972,SystemVerilog,uvmproject,27,0,2024-01-02 07:18:33+00:00,[],
15502,https://github.com/Rahma-Aly/DPRAM.git,2024-01-06 04:06:14+00:00,design and verification of a synchronous dual port ram,0,Rahma-Aly/DPRAM,739631721,SystemVerilog,DPRAM,19,0,2024-01-06 04:11:54+00:00,[],
15503,https://github.com/Ashwin4514/SysVerilog_Cadence.git,2024-01-05 20:35:39+00:00,This code repository contains the code used for the SystemVerilog Certification Labs,0,Ashwin4514/SysVerilog_Cadence,739544857,SystemVerilog,SysVerilog_Cadence,74,0,2024-01-05 21:40:45+00:00,[],
15504,https://github.com/mahmedadawy2013/UVM_Register_Memory.git,2024-01-06 00:24:51+00:00,,0,mahmedadawy2013/UVM_Register_Memory,739593397,SystemVerilog,UVM_Register_Memory,9,0,2024-01-06 00:26:01+00:00,[],
15505,https://github.com/myuan678/systolic_array.git,2023-12-22 03:20:53+00:00,,0,myuan678/systolic_array,734573760,SystemVerilog,systolic_array,14,0,2023-12-22 14:19:52+00:00,[],
15506,https://github.com/AdwayPau1/CPUtiny.git,2023-12-31 04:22:06+00:00,My first attempt to build a CPU using Verilog and verified using Icarus Verilog.,0,AdwayPau1/CPUtiny,737449152,SystemVerilog,CPUtiny,18,0,2024-01-10 02:18:39+00:00,[],
15507,https://github.com/MAHANTHADEEKSHA-SB/apb_uvc.git,2024-01-11 19:40:21+00:00,,0,MAHANTHADEEKSHA-SB/apb_uvc,742113815,SystemVerilog,apb_uvc,21,0,2024-01-11 20:01:10+00:00,[],https://api.github.com/licenses/apache-2.0
15508,https://github.com/vaibhavambastha/risc-machine-processor.git,2024-01-11 10:26:15+00:00,Designed RISC Machine using Verilog HDL to follow extensive instruction set. Processor pipelined for efficient instruction execution and maximal performance.,0,vaibhavambastha/risc-machine-processor,741891863,SystemVerilog,risc-machine-processor,13,0,2024-01-11 11:05:30+00:00,[],
15509,https://github.com/GST-HUANG/finalproject.git,2024-01-12 13:39:50+00:00,玩家需要解出問題後將值轉成二進位後，用指撥開 關來輸入，若值正確則8X8會亮英文T，且7段顯會 停止計時，蜂鳴器會發出聲音，若再規定時間內沒 有猜出的話則8X8會亮英文F...,0,GST-HUANG/finalproject,742441061,SystemVerilog,finalproject,2,0,2024-01-12 13:40:36+00:00,[],
15510,https://github.com/rishabh4749/Rule_90.git,2024-01-13 11:51:05+00:00,,0,rishabh4749/Rule_90,742795800,SystemVerilog,Rule_90,4,0,2024-01-13 15:08:30+00:00,[],
15511,https://github.com/Arvind-Kumar-Dv/uvm_mem_tb.git,2024-01-17 11:30:09+00:00,mem_tb_sbd,0,Arvind-Kumar-Dv/uvm_mem_tb,744476306,SystemVerilog,uvm_mem_tb,5,0,2024-01-17 11:42:10+00:00,[],
15512,https://github.com/BillyScreezo/KuznInSoC.git,2024-01-20 16:16:55+00:00,,0,BillyScreezo/KuznInSoC,745945092,SystemVerilog,KuznInSoC,25,0,2024-01-21 10:10:57+00:00,[],https://api.github.com/licenses/gpl-3.0
15513,https://github.com/laperex/Tiny16.git,2023-12-17 11:48:55+00:00,,0,laperex/Tiny16,732648820,SystemVerilog,Tiny16,202,0,2024-01-21 12:59:34+00:00,[],
15514,https://github.com/MohamedRuby/UVM-for-a-custom-ALU.git,2024-01-05 06:17:07+00:00,UVM environment for an ALU project during the ITI diploma,0,MohamedRuby/UVM-for-a-custom-ALU,739258497,SystemVerilog,UVM-for-a-custom-ALU,302,0,2024-01-05 11:50:16+00:00,[],
15515,https://github.com/Gorruy/debouncer.git,2024-01-20 18:58:31+00:00,,0,Gorruy/debouncer,745991215,SystemVerilog,debouncer,6,0,2024-01-20 18:58:37+00:00,[],
15516,https://github.com/tebina/Simple-UART-SystemVerilog.git,2024-01-24 16:25:00+00:00,,0,tebina/Simple-UART-SystemVerilog,747783435,SystemVerilog,Simple-UART-SystemVerilog,8,0,2024-01-24 16:53:18+00:00,[],https://api.github.com/licenses/mit
15517,https://github.com/barrya0/Computer-Hardware-Design.git,2023-12-29 01:45:22+00:00,,0,barrya0/Computer-Hardware-Design,736823616,SystemVerilog,Computer-Hardware-Design,25,0,2023-12-30 03:10:37+00:00,[],
15518,https://github.com/tracymiao111/Pipelined-CPU-Design.git,2023-12-25 21:51:36+00:00,,0,tracymiao111/Pipelined-CPU-Design,735699925,SystemVerilog,Pipelined-CPU-Design,5233,0,2024-01-29 23:11:25+00:00,[],
15519,https://github.com/twliu1/sync_fifo.git,2024-01-13 20:16:24+00:00,A simple sync fifo module in SystemVerilog,0,twliu1/sync_fifo,742938509,SystemVerilog,sync_fifo,1,0,2024-01-13 20:35:03+00:00,[],
15520,https://github.com/ThomasRen2077/Bus_Protocol_Imp.git,2024-01-01 04:47:58+00:00,,0,ThomasRen2077/Bus_Protocol_Imp,737687336,SystemVerilog,Bus_Protocol_Imp,24,0,2024-01-02 01:55:19+00:00,[],
15521,https://github.com/JashwanthAdama/HTAX_Verification.git,2023-12-29 06:46:59+00:00,Verification of HTAX protocol,0,JashwanthAdama/HTAX_Verification,736885256,SystemVerilog,HTAX_Verification,1849,0,2024-03-19 06:22:11+00:00,[],
15522,https://github.com/wwchin/GreedySnake.git,2024-01-07 16:06:10+00:00,This is a verilog Snake game implemented on DE2-115. The final project of NTUEE 2023 fall dclab.,0,wwchin/GreedySnake,740129858,SystemVerilog,GreedySnake,37,0,2024-01-07 16:29:39+00:00,[],
15523,https://github.com/AlaaTaha32/ARM-Pipelined-Processor.git,2023-12-17 02:51:33+00:00,32-bits ARM pipelined processor is implemented using System-Verilog,0,AlaaTaha32/ARM-Pipelined-Processor,732543423,SystemVerilog,ARM-Pipelined-Processor,25,0,2023-12-17 03:04:36+00:00,[],
15524,https://github.com/rrzhang139/fromthetransistor.git,2023-12-18 10:10:48+00:00,,0,rrzhang139/fromthetransistor,732989140,SystemVerilog,fromthetransistor,1144,0,2023-12-18 14:59:07+00:00,[],
15525,https://github.com/nick-pilgrim/Alarm-Clock.git,2023-12-23 17:39:42+00:00,This file contains programming for an FPGA alarm clock,0,nick-pilgrim/Alarm-Clock,735109411,SystemVerilog,Alarm-Clock,3,0,2023-12-23 17:39:56+00:00,[],
15526,https://github.com/JahahShin/ECE-253-verilog-and-assembly.git,2023-12-25 19:41:28+00:00,"LABs for verilog and assembly course which is ECE 293 in University of Toronto, Engineering Science 2nd year.",0,JahahShin/ECE-253-verilog-and-assembly,735678317,SystemVerilog,ECE-253-verilog-and-assembly,5,0,2023-12-25 19:42:23+00:00,[],
15527,https://github.com/Rahma-Aly/ArrayMultiplier_4x5.git,2023-12-26 16:50:23+00:00,implementation of a 4x5 Array Multiplier using verilog. The design is verified by creating the whole environment using SystemVerilog and then using UVM.,0,Rahma-Aly/ArrayMultiplier_4x5,735986872,SystemVerilog,ArrayMultiplier_4x5,11,0,2023-12-26 16:55:17+00:00,[],
15528,https://github.com/ShkalikovDenis4m0/AP_lr.git,2023-12-28 07:05:14+00:00,,0,ShkalikovDenis4m0/AP_lr,736536166,SystemVerilog,AP_lr,8,0,2023-12-28 07:24:07+00:00,[],
15529,https://github.com/apoorvaaaa5/riscv_processor.git,2024-01-02 06:44:45+00:00,,0,apoorvaaaa5/riscv_processor,737992664,SystemVerilog,riscv_processor,18,0,2024-01-02 06:47:59+00:00,[],
15530,https://github.com/AliMaher15/AXI-uvm.git,2023-12-31 22:27:41+00:00,UVM environment using SV for the famous protocol AXI,0,AliMaher15/AXI-uvm,737644871,SystemVerilog,AXI-uvm,836,0,2023-12-31 22:33:55+00:00,[],
15531,https://github.com/mira-sweis/CAM-Lookup.git,2024-01-05 03:15:16+00:00,,0,mira-sweis/CAM-Lookup,739214005,SystemVerilog,CAM-Lookup,1,0,2024-01-05 03:15:43+00:00,[],
15532,https://github.com/jdakrofi/FPGA_OrderBook.git,2024-01-01 15:24:00+00:00,,0,jdakrofi/FPGA_OrderBook,737808330,SystemVerilog,FPGA_OrderBook,17,0,2024-01-03 13:20:47+00:00,[],
15533,https://github.com/maachaa/SystemVerilog.git,2024-01-08 14:02:35+00:00,Verification using systemVerilog,0,maachaa/SystemVerilog,740516789,SystemVerilog,SystemVerilog,23,0,2024-01-08 14:25:54+00:00,[],
15534,https://github.com/falconlive09/8-Bit-ALU.git,2024-01-09 15:58:48+00:00,"Implemented a versatile 8-bit Arithmetic Logic Unit. Supporting operations such as addition, subtraction, multiplication, division, logical shifts, rotations, bit-wise logical AND/OR/XOR/NOR/NAND/XNOR, and comparison operations. ",0,falconlive09/8-Bit-ALU,741056356,SystemVerilog,8-Bit-ALU,31,0,2024-01-09 15:59:38+00:00,[],
15535,https://github.com/miguelJalube/VSE_Lab3.git,2023-12-18 12:30:19+00:00,,0,miguelJalube/VSE_Lab3,733039202,SystemVerilog,VSE_Lab3,1030,0,2023-12-18 12:34:04+00:00,[],
15536,https://github.com/jacobz333/gameboy-emulator.git,2024-01-09 04:39:22+00:00,,0,jacobz333/gameboy-emulator,740794683,SystemVerilog,gameboy-emulator,1801,0,2024-01-09 22:35:14+00:00,[],https://api.github.com/licenses/gpl-3.0
15537,https://github.com/LoctStrider/dd-tetris.git,2023-12-31 16:16:15+00:00,,0,LoctStrider/dd-tetris,737584712,SystemVerilog,dd-tetris,1310,0,2024-01-10 03:49:32+00:00,[],
15538,https://github.com/Ghanshyam1409/Protocol-design-and-verification-of-SOC-application-using-AMBA-APB-protocol.git,2024-01-11 06:31:07+00:00,,0,Ghanshyam1409/Protocol-design-and-verification-of-SOC-application-using-AMBA-APB-protocol,741805746,SystemVerilog,Protocol-design-and-verification-of-SOC-application-using-AMBA-APB-protocol,14,0,2024-01-11 06:33:33+00:00,[],
15539,https://github.com/Ayesha-Ilyas/System-Verilog-i.git,2024-01-14 17:58:55+00:00,,0,Ayesha-Ilyas/System-Verilog-i,743228195,SystemVerilog,System-Verilog-i,4,0,2024-01-14 17:59:43+00:00,[],
15540,https://github.com/chibits42/lobotomy-8.git,2024-01-17 14:55:16+00:00,,0,chibits42/lobotomy-8,744562133,SystemVerilog,lobotomy-8,4,0,2024-01-19 20:14:56+00:00,[],
15541,https://github.com/flaviens/cxxrtl-b3.git,2024-01-20 17:32:06+00:00,,0,flaviens/cxxrtl-b3,745967559,SystemVerilog,cxxrtl-b3,1,0,2024-01-20 17:33:03+00:00,[],
15542,https://github.com/Ramagond15/MEMORY.git,2024-01-25 07:09:18+00:00,Verification of memory module,0,Ramagond15/MEMORY,748052999,SystemVerilog,MEMORY,99,0,2024-01-25 07:15:27+00:00,[],
15543,https://github.com/JiteshNayak2004/HDL_PRACTICE.git,2024-01-19 17:22:06+00:00,contains simple basic block implementation in various hdl's,0,JiteshNayak2004/HDL_PRACTICE,745598197,SystemVerilog,HDL_PRACTICE,3,0,2024-01-21 06:52:41+00:00,[],
15544,https://github.com/axyrai/axi4_testbench.git,2024-01-25 05:14:08+00:00,,4,axyrai/axi4_testbench,748019211,SystemVerilog,axi4_testbench,36630,0,2024-02-07 06:01:13+00:00,[],
15545,https://github.com/SK-bod/soc-performance-analyzer.git,2024-01-12 22:42:35+00:00,PL:,0,SK-bod/soc-performance-analyzer,742626841,SystemVerilog,soc-performance-analyzer,16436,0,2024-02-11 17:26:24+00:00,[],
15546,https://github.com/edgarherrera03/ASCON128.git,2024-01-21 12:54:50+00:00,Simplified version of the Ascon-128 encryption algorithm coded in SystemVerilog,0,edgarherrera03/ASCON128,746224945,SystemVerilog,ASCON128,172,0,2024-04-05 13:54:39+00:00,[],
15547,https://github.com/neildeo05/nnoc.git,2024-01-11 18:02:53+00:00,Experimental tile-based accelerator and subgraph partitioner,1,neildeo05/nnoc,742076913,SystemVerilog,nnoc,165,0,2024-02-06 16:01:41+00:00,[],
15548,https://github.com/Pasha-2033/monolit.git,2024-01-02 14:45:44+00:00,,0,Pasha-2033/monolit,738150037,SystemVerilog,monolit,11900,0,2024-01-02 14:52:48+00:00,[],
15549,https://github.com/meentallyy/LR2_AP.git,2023-12-28 01:37:01+00:00,,0,meentallyy/LR2_AP,736464432,SystemVerilog,LR2_AP,3,0,2023-12-28 01:38:55+00:00,[],
15550,https://github.com/ManalHasan/COLOR-HUNT.git,2023-12-18 09:00:49+00:00,DLD Project on verilog using basys3 FPGA,0,ManalHasan/COLOR-HUNT,732963010,SystemVerilog,COLOR-HUNT,628,0,2023-12-18 10:41:30+00:00,[],
15551,https://github.com/mahmedadawy2013/SV_Counter.git,2024-01-06 00:30:56+00:00,,0,mahmedadawy2013/SV_Counter,739594476,SystemVerilog,SV_Counter,324,0,2024-01-06 00:31:59+00:00,[],
15552,https://github.com/AlphaAnas/Foosball-basys-3-game.git,2023-12-21 04:50:16+00:00,"this is a game made using basys 3 board FPGA, using vivvado. This game uses keyboard as an input and dynamics like of foosball",0,AlphaAnas/Foosball-basys-3-game,734188809,SystemVerilog,Foosball-basys-3-game,6865,0,2023-12-21 04:53:15+00:00,[],
15553,https://github.com/GaalElbaz/twoBitSynchronousCounter.git,2024-01-11 13:49:37+00:00,"A two-bit synchronous counter is a digital circuit that counts in binary from 00 to 11 using two flip-flops. It operates in sync with a clock signal, advancing its count on each clock edge. This type of counter is synchronous, meaning that the flip-flops change states simultaneously, ensuring proper timing and avoiding glitches.",0,GaalElbaz/twoBitSynchronousCounter,741971611,SystemVerilog,twoBitSynchronousCounter,97,0,2024-01-14 08:04:34+00:00,[],
15554,https://github.com/Weiss-F/MIPS.git,2024-01-01 12:38:25+00:00,Verilog MIPS Processor,0,Weiss-F/MIPS,737769501,SystemVerilog,MIPS,7,0,2024-01-12 11:35:18+00:00,[],
15555,https://github.com/rishabh4749/Shift_Register.git,2024-01-13 05:31:26+00:00,,0,rishabh4749/Shift_Register,742703113,SystemVerilog,Shift_Register,4,0,2024-01-13 14:59:34+00:00,[],
15556,https://github.com/hieupt12062001/h266_affine_hieu_nhat.git,2024-01-16 07:43:55+00:00,Do an tot nghiep,0,hieupt12062001/h266_affine_hieu_nhat,743886500,SystemVerilog,h266_affine_hieu_nhat,2897,0,2024-01-17 10:43:36+00:00,[],
15557,https://github.com/flaviens/icarus-b1.git,2024-01-16 16:48:26+00:00,Runtime bug in Icarus Verilog,0,flaviens/icarus-b1,744115845,SystemVerilog,icarus-b1,2,0,2024-01-16 16:49:03+00:00,[],
15558,https://github.com/yoon123seul/CAST_DMA.git,2024-01-12 05:33:48+00:00,,0,yoon123seul/CAST_DMA,742272534,SystemVerilog,CAST_DMA,421,0,2024-01-12 05:38:15+00:00,[],
15559,https://github.com/ilyakupriyan/arch_risc-16.git,2024-01-24 18:37:27+00:00,,0,ilyakupriyan/arch_risc-16,747839408,SystemVerilog,arch_risc-16,808,0,2024-01-24 20:15:41+00:00,[],
15560,https://github.com/ZakiyaAbuMurra/Single-level-Cache.git,2024-01-16 11:46:59+00:00,,0,ZakiyaAbuMurra/Single-level-Cache,743979928,SystemVerilog,Single-level-Cache,6,0,2024-01-26 22:23:20+00:00,[],
15561,https://github.com/Rubayet13/SPI-systemverilog.git,2024-01-22 06:29:51+00:00,,0,Rubayet13/SPI-systemverilog,746510128,SystemVerilog,SPI-systemverilog,284,0,2024-02-03 17:32:08+00:00,[],
15562,https://github.com/AndreaCastronovo/APB_BUS_SYSTEM.git,2023-12-18 10:07:41+00:00,"Exercises from ""Lab of Digital Electronics""",0,AndreaCastronovo/APB_BUS_SYSTEM,732987918,SystemVerilog,APB_BUS_SYSTEM,562,0,2023-12-18 10:11:52+00:00,[],https://api.github.com/licenses/gpl-3.0
15563,https://github.com/attar8/Fifo-module-using-UVM.git,2023-12-18 07:39:57+00:00,,0,attar8/Fifo-module-using-UVM,732935201,SystemVerilog,Fifo-module-using-UVM,372,0,2023-12-18 07:41:05+00:00,[],
15564,https://github.com/andycha1234/Verilog.git,2024-01-12 11:00:49+00:00,,0,andycha1234/Verilog,742384361,SystemVerilog,Verilog,248883,0,2024-03-26 02:30:37+00:00,[],
15565,https://github.com/Gorruy/serialaizer.git,2023-12-27 19:45:19+00:00,,0,Gorruy/serialaizer,736397919,SystemVerilog,serialaizer,12807,0,2023-12-29 15:22:25+00:00,[],
15566,https://github.com/ruchit-422/pipelined_convolution.git,2024-01-18 05:31:15+00:00,,0,ruchit-422/pipelined_convolution,744839389,SystemVerilog,pipelined_convolution,1727,0,2024-01-18 05:34:46+00:00,[],
15567,https://github.com/RavinderReddy741/FIFO_SVA_PROJECT.git,2024-01-18 17:09:15+00:00,,0,RavinderReddy741/FIFO_SVA_PROJECT,745114688,SystemVerilog,FIFO_SVA_PROJECT,281,0,2024-01-18 18:50:26+00:00,[],
15568,https://github.com/mbcruz96/Cache-Simulator.git,2024-01-16 21:20:28+00:00,Multi-level cache software and hardware implementations,0,mbcruz96/Cache-Simulator,744220551,SystemVerilog,Cache-Simulator,16811,0,2024-01-16 21:34:08+00:00,[],
15569,https://github.com/rishabh4749/Single_Edge_Detector.git,2024-01-11 13:07:58+00:00,,0,rishabh4749/Single_Edge_Detector,741954495,SystemVerilog,Single_Edge_Detector,5,0,2024-01-13 14:57:45+00:00,[],
15570,https://github.com/GaalElbaz/Get-Started-with-Basys-3-Board.git,2024-01-23 09:58:49+00:00,"This tutorial provides a step-by-step guide to creating a simple FPGA project on the Basys 3 board using Vivado Xilinx. The project involves implementing an AND gate in SystemVerilog, connecting it to two switches, and controlling the state of an LED based on the switch inputs.",0,GaalElbaz/Get-Started-with-Basys-3-Board,747119872,SystemVerilog,Get-Started-with-Basys-3-Board,38,0,2024-01-23 10:35:27+00:00,[],
15571,https://github.com/featherweight-vip/fwvip-wb.git,2024-01-22 15:06:54+00:00,VIP for Wishbone bus protocol,0,featherweight-vip/fwvip-wb,746731042,SystemVerilog,fwvip-wb,818,0,2024-01-23 15:37:58+00:00,[],https://api.github.com/licenses/apache-2.0
15572,https://github.com/pat0kamba/10-bit-Processor-With-Immediate-Instructions.git,2024-01-18 23:38:49+00:00,,0,pat0kamba/10-bit-Processor-With-Immediate-Instructions,745248457,SystemVerilog,10-bit-Processor-With-Immediate-Instructions,14,0,2024-02-06 15:44:30+00:00,[],
15573,https://github.com/Mertozkaya21/UART-protocol.git,2024-01-15 16:45:05+00:00,"UART is a widely used serial communication protocol that allows for bidirectional data transfer between devices. This implementation provides functionality to transmit and receive data serially between a microcontroller and another device, such as a computer.",0,Mertozkaya21/UART-protocol,743632367,SystemVerilog,UART-protocol,243,0,2024-02-09 20:37:10+00:00,[],
15574,https://github.com/johnrscott/hdl_lib.git,2024-01-15 20:08:36+00:00,Library of Verilog Modules for FPGA Designs,0,johnrscott/hdl_lib,743706385,SystemVerilog,hdl_lib,205,0,2024-01-20 14:30:47+00:00,[],https://api.github.com/licenses/gpl-3.0
15575,https://github.com/galaxybabyy/LABA_SAP_1.git,2023-12-20 17:39:46+00:00,,0,galaxybabyy/LABA_SAP_1,734031917,SystemVerilog,LABA_SAP_1,6,0,2023-12-20 18:23:11+00:00,[],
15576,https://github.com/kennethcollins138/Pipeline-Processor.git,2023-12-22 05:31:20+00:00,"For this project, I was tasked to create a Pipeline Processor in the Risc-V. This project was given by Dr.Sat Garcia and was inspired by David and Sarah Harris.",0,kennethcollins138/Pipeline-Processor,734600679,SystemVerilog,Pipeline-Processor,13,0,2023-12-22 05:32:49+00:00,[],
15577,https://github.com/SupunDK/matrix-multiplier-and-accumulator.git,2023-12-24 13:58:55+00:00,Matrix multiplier and accumulator unit that can multiply two matrices of any size,0,SupunDK/matrix-multiplier-and-accumulator,735325977,SystemVerilog,matrix-multiplier-and-accumulator,3,0,2023-12-24 14:00:31+00:00,[],https://api.github.com/licenses/mit
15578,https://github.com/ldiatrvy/sapr.git,2023-12-27 23:54:50+00:00,,0,ldiatrvy/sapr,736447040,SystemVerilog,sapr,11,0,2023-12-28 00:24:20+00:00,[],
15579,https://github.com/Katerinalex001/laba_1-_SAP.git,2023-12-28 05:00:35+00:00,,0,Katerinalex001/laba_1-_SAP,736504668,SystemVerilog,laba_1-_SAP,21,0,2023-12-28 05:08:21+00:00,[],
15580,https://github.com/gbsurendar/VLSI_Project.git,2023-12-27 11:30:52+00:00,,0,gbsurendar/VLSI_Project,736246207,SystemVerilog,VLSI_Project,2,0,2023-12-27 11:37:05+00:00,[],
15581,https://github.com/iamshaheer12/Three_Stage_Pipeline.git,2023-12-30 17:49:11+00:00,,0,iamshaheer12/Three_Stage_Pipeline,737347949,SystemVerilog,Three_Stage_Pipeline,614,0,2023-12-30 17:50:26+00:00,[],
15582,https://github.com/IqraMuzaffar/RiscV-3-stage.git,2023-12-30 16:27:45+00:00,,0,IqraMuzaffar/RiscV-3-stage,737327987,SystemVerilog,RiscV-3-stage,80,0,2023-12-30 17:01:10+00:00,[],
15583,https://github.com/Sheikh-Khansa/3-Staged-Pipelined-RISC-V-Processor.git,2023-12-24 10:36:36+00:00,"This repository features a 3-stage pipelined RISC-V processor, designed for efficient instruction execution. Based on the RISC-V ISA, it balances performance and simplicity with Instruction Fetch (IF), Instruction Decode (ID) and Execute (EX), and Memory(MEM) and Write Back(WB) stages. ",0,Sheikh-Khansa/3-Staged-Pipelined-RISC-V-Processor,735280363,SystemVerilog,3-Staged-Pipelined-RISC-V-Processor,657,0,2023-12-30 19:49:28+00:00,[],
15584,https://github.com/Fatim-Sohail/RSC-V-Three-Stage-Pipelined-Processor.git,2023-12-17 17:55:56+00:00,,0,Fatim-Sohail/RSC-V-Three-Stage-Pipelined-Processor,732750740,SystemVerilog,RSC-V-Three-Stage-Pipelined-Processor,151,0,2023-12-31 09:53:32+00:00,[],
15585,https://github.com/Mbonyimfura/single_cycle_PS_processor.git,2024-01-03 19:01:43+00:00,,0,Mbonyimfura/single_cycle_PS_processor,738667506,SystemVerilog,single_cycle_PS_processor,18,0,2024-01-03 19:04:25+00:00,[],
15586,https://github.com/ashutosh9991/systemverilog.git,2024-01-06 02:48:57+00:00,,0,ashutosh9991/systemverilog,739617321,SystemVerilog,systemverilog,1,0,2024-01-06 02:51:11+00:00,[],
15587,https://github.com/SKrishnaPrasad-10/Design-of-32-bit-Low-Power-Pipelined-RISC-Processor.git,2024-01-06 21:24:22+00:00,"Implementation a power-efficient, high-speed 32-bit RISC based processor with a 5-stage pipeline utilizing the MIPS Instruction Set Architecture, tailored for low-power applications.",0,SKrishnaPrasad-10/Design-of-32-bit-Low-Power-Pipelined-RISC-Processor,739891611,SystemVerilog,Design-of-32-bit-Low-Power-Pipelined-RISC-Processor,19,0,2024-01-06 21:26:46+00:00,[],
15588,https://github.com/Rossetas/RVfpga.git,2023-12-20 03:18:11+00:00,,0,Rossetas/RVfpga,733748838,SystemVerilog,RVfpga,24544,0,2023-12-29 03:48:33+00:00,[],
15589,https://github.com/ruwayd99/Reduced-Instruction-Set-Computer.git,2024-01-03 02:35:06+00:00,,0,ruwayd99/Reduced-Instruction-Set-Computer,738344718,SystemVerilog,Reduced-Instruction-Set-Computer,481,0,2024-01-03 02:36:40+00:00,[],
15590,https://github.com/GaalElbaz/halfAdder.git,2024-01-09 18:12:34+00:00,A half adder is a binary addition circuit with two inputs (A and B). It produces a sum (S) by XORing A and B and a carry (C) by ANDing them. It handles basic addition of two bits without considering any carry from previous stages.,0,GaalElbaz/halfAdder,741113463,SystemVerilog,halfAdder,136,0,2024-01-09 18:14:52+00:00,[],
15591,https://github.com/arruk/MIPS_pipeline.git,2024-01-09 20:46:18+00:00,,0,arruk/MIPS_pipeline,741166147,SystemVerilog,MIPS_pipeline,9,0,2024-01-09 21:46:01+00:00,[],
15592,https://github.com/clancy-mitchell/uvm-uart-tx.git,2024-01-10 06:42:34+00:00,Verification of a UART TX module using UVM and Cadence Xcelium,0,clancy-mitchell/uvm-uart-tx,741322722,SystemVerilog,uvm-uart-tx,22,0,2024-01-10 06:49:48+00:00,[],
15593,https://github.com/0xoleg/chidesignschool_tasks.git,2024-01-09 16:06:57+00:00,,0,0xoleg/chidesignschool_tasks,741059724,SystemVerilog,chidesignschool_tasks,25,0,2024-01-09 21:43:14+00:00,[],
15594,https://github.com/MahantaTalakal/Prefix-Adder_32bit.git,2024-01-15 03:15:53+00:00,,0,MahantaTalakal/Prefix-Adder_32bit,743351093,SystemVerilog,Prefix-Adder_32bit,3,0,2024-01-15 03:17:15+00:00,[],
15595,https://github.com/GaalElbaz/bcdCounter.git,2024-01-14 12:47:40+00:00,"A BCD (Binary-Coded Decimal) counter is a type of electronic counter circuit used in digital electronics. In BCD counting, each decimal digit is represented by its 4-bit binary equivalent. This means that in a BCD counter, the count is represented in binary form, where each digit of the count is encoded using four binary bits.",0,GaalElbaz/bcdCounter,743134563,SystemVerilog,bcdCounter,47,0,2024-01-15 11:03:09+00:00,[],
15596,https://github.com/pogoreli/TPU.git,2023-12-22 22:36:47+00:00,,0,pogoreli/TPU,734881401,SystemVerilog,TPU,69,0,2023-12-22 22:48:13+00:00,[],https://api.github.com/licenses/gpl-3.0
15597,https://github.com/TJ178/ece113dw_project.git,2024-01-21 06:03:17+00:00,,0,TJ178/ece113dw_project,746126458,SystemVerilog,ece113dw_project,14256,0,2024-02-23 05:58:01+00:00,[],
15598,https://github.com/Mohsannaeem/apb_uvc.git,2023-12-18 14:04:13+00:00,,0,Mohsannaeem/apb_uvc,733075553,SystemVerilog,apb_uvc,40,0,2023-12-18 14:18:00+00:00,[],https://api.github.com/licenses/apache-2.0
15599,https://github.com/Sushma-Soni/system_verilog_practice.git,2024-01-15 10:36:43+00:00,,0,Sushma-Soni/system_verilog_practice,743483483,SystemVerilog,system_verilog_practice,11,0,2024-02-21 13:30:20+00:00,[],https://api.github.com/licenses/apache-2.0
15600,https://github.com/Gorruy/deserializer.git,2024-01-05 06:31:33+00:00,,0,Gorruy/deserializer,739262862,SystemVerilog,deserializer,7954,0,2024-01-20 18:57:26+00:00,[],
15601,https://github.com/gvillanovanm/svlog-adder-amba.git,2024-01-19 13:55:16+00:00,,0,gvillanovanm/svlog-adder-amba,745513199,SystemVerilog,svlog-adder-amba,1165,0,2024-01-19 16:52:44+00:00,[],
15602,https://github.com/Gorruy/bit_population_counter.git,2024-01-15 15:37:40+00:00,,0,Gorruy/bit_population_counter,743605424,SystemVerilog,bit_population_counter,26,0,2024-01-18 18:56:58+00:00,[],
15603,https://github.com/BLANK-1908/ECE593_Pre_Silicon.git,2024-01-25 03:45:57+00:00,,0,BLANK-1908/ECE593_Pre_Silicon,747996744,SystemVerilog,ECE593_Pre_Silicon,362,0,2024-02-03 18:26:40+00:00,[],
15604,https://github.com/ashiaotw/100DaysOfRTL.git,2024-01-07 21:03:15+00:00,,0,ashiaotw/100DaysOfRTL,740213802,SystemVerilog,100DaysOfRTL,30,0,2024-01-07 21:05:43+00:00,[],
15605,https://github.com/GaalElbaz/PulseEveryThirdClock.git,2024-01-09 09:22:30+00:00,Describing the behavior of producing a pulse every third clock edge.,0,GaalElbaz/PulseEveryThirdClock,740888331,SystemVerilog,PulseEveryThirdClock,33,0,2024-01-09 09:25:31+00:00,[],
15606,https://github.com/RakshithaRShettigar/AXI_Testbench.git,2024-01-09 04:38:29+00:00,,0,RakshithaRShettigar/AXI_Testbench,740794466,SystemVerilog,AXI_Testbench,2,0,2024-01-10 08:31:10+00:00,[],
15607,https://github.com/oceanchad/HDLBits_Luca.git,2024-01-03 15:54:08+00:00,Practice for HDLBits,0,oceanchad/HDLBits_Luca,738601601,SystemVerilog,HDLBits_Luca,8,0,2024-01-10 11:31:49+00:00,[],https://api.github.com/licenses/apache-2.0
15608,https://github.com/SammyK12345/Viterbi-Decoder.git,2024-01-03 03:59:08+00:00,Created a Viterbi decoder to decode messages with potential errors in them. I wrote a testbench and encoder to create intentional errors in the encoding to test the decoders accuracy.,0,SammyK12345/Viterbi-Decoder,738364301,SystemVerilog,Viterbi-Decoder,190,0,2024-01-03 04:00:12+00:00,[],
15609,https://github.com/bzkarim250/A-single-cycle-MIPS-processor-in-system-Verilog.git,2024-01-03 16:19:52+00:00,,0,bzkarim250/A-single-cycle-MIPS-processor-in-system-Verilog,738610876,SystemVerilog,A-single-cycle-MIPS-processor-in-system-Verilog,104,0,2024-01-03 16:34:53+00:00,[],
15610,https://github.com/bonane123/verilog.git,2024-01-03 19:16:42+00:00,,0,bonane123/verilog,738672080,SystemVerilog,verilog,3,0,2024-01-03 19:21:21+00:00,[],
15611,https://github.com/Lucalini/CPE233FinalProject.git,2024-01-04 01:13:36+00:00,"This project was the culmination of my work in CPE 233. This Verilog code fully models the RISCV MCU architecture as shown in the attatched diagram. Additionally, this project includes an assembly lanuage program I wrote which multiplexes the display on our FPGA board using interrupts and scrolls a message using the center button. ",0,Lucalini/CPE233FinalProject,738756226,SystemVerilog,CPE233FinalProject,202,0,2024-01-04 01:28:00+00:00,[],
15612,https://github.com/kmatelski3/pipelineCPU.git,2024-01-04 04:15:14+00:00,,0,kmatelski3/pipelineCPU,738796675,SystemVerilog,pipelineCPU,71,0,2024-01-04 04:16:50+00:00,[],
15613,https://github.com/sebastianhorvath/qick_atomic.git,2023-12-21 20:51:24+00:00,,0,sebastianhorvath/qick_atomic,734497540,SystemVerilog,qick_atomic,7597,0,2024-01-04 16:22:04+00:00,[],
15614,https://github.com/JellyCo9064/Intro-to-Digital-Design_CSE369.git,2024-01-05 01:43:57+00:00,Class project files for UW 369 - Intro to Digital Design. Targeted for the Altera DE1-SoC.,0,JellyCo9064/Intro-to-Digital-Design_CSE369,739193694,SystemVerilog,Intro-to-Digital-Design_CSE369,68861,0,2024-01-05 01:46:14+00:00,[],
15615,https://github.com/MahmoudMohamed9988/Microchip_SPI_Master.git,2024-01-13 16:02:45+00:00,Implement a complete UVM testbench and design for SPI_Master,0,MahmoudMohamed9988/Microchip_SPI_Master,742868999,SystemVerilog,Microchip_SPI_Master,318,0,2024-01-13 16:22:07+00:00,[],
15616,https://github.com/rishabh4749/DFF_Asynchronous_Reset.git,2023-12-29 04:50:26+00:00,,0,rishabh4749/DFF_Asynchronous_Reset,736858404,SystemVerilog,DFF_Asynchronous_Reset,4,0,2024-01-13 14:40:04+00:00,[],
15617,https://github.com/Platun0v/game_of_life_fpga.git,2023-12-18 06:09:48+00:00,,0,Platun0v/game_of_life_fpga,732906682,SystemVerilog,game_of_life_fpga,28,0,2023-12-18 06:14:30+00:00,[],
15618,https://github.com/ani171/ALU.git,2023-12-29 14:20:13+00:00,,0,ani171/ALU,737006990,SystemVerilog,ALU,22,0,2023-12-29 14:24:00+00:00,[],
15619,https://github.com/Naderatef10/UVM_of_Memory.git,2024-01-01 13:09:54+00:00,UVM TB for a simple memory module as a practice,0,Naderatef10/UVM_of_Memory,737776392,SystemVerilog,UVM_of_Memory,8,0,2024-01-01 13:15:31+00:00,[],
15620,https://github.com/NoorUlEmaan/RISCV-3Stage-Pipelining.git,2023-12-30 18:24:38+00:00,,0,NoorUlEmaan/RISCV-3Stage-Pipelining,737355812,SystemVerilog,RISCV-3Stage-Pipelining,60,0,2023-12-30 18:54:52+00:00,[],
15621,https://github.com/aamirbutt011/CA_PROJECT.git,2023-12-30 18:44:09+00:00,new project,0,aamirbutt011/CA_PROJECT,737359954,SystemVerilog,CA_PROJECT,302,0,2023-12-30 18:46:35+00:00,[],
15623,https://github.com/suma-dv/And_gate.git,2024-01-17 09:30:45+00:00,,0,suma-dv/And_gate,744428877,SystemVerilog,And_gate,3,0,2024-01-17 09:37:21+00:00,[],
15624,https://github.com/zierenclark/TrafficLight_Simulated.git,2024-01-09 00:38:34+00:00,Goal: Design Logic Circuit that could be used for a traffic light and simulate circuit within Logism and Verilog code and then build,0,zierenclark/TrafficLight_Simulated,740735665,SystemVerilog,TrafficLight_Simulated,21,0,2024-01-12 21:57:15+00:00,[],
15625,https://github.com/echacont/vnsynth-dev.git,2024-01-05 19:03:11+00:00,Development of sound synthesizer and sampler based on veervolf and nexys A7,0,echacont/vnsynth-dev,739519129,SystemVerilog,vnsynth-dev,3672,0,2024-01-20 03:25:36+00:00,[],
15626,https://github.com/jmsf3/IF674-RISCV.git,2024-01-20 00:13:04+00:00,Projeto da cadeira de Infraestrutura de Hardware do CIn-UFPE para implementação do conjunto de instruções (ISA) de um processador RISC-V usando SystemVerilog.,2,jmsf3/IF674-RISCV,745718253,SystemVerilog,IF674-RISCV,145,0,2024-02-28 12:07:09+00:00,[],
15627,https://github.com/MorZao/luzao.git,2024-01-10 05:09:53+00:00,,0,MorZao/luzao,741294999,SystemVerilog,luzao,15567,0,2024-01-10 05:24:14+00:00,[],
15628,https://github.com/lucahhot/CE387-Assignments.git,2024-01-04 19:03:41+00:00,,0,lucahhot/CE387-Assignments,739096386,SystemVerilog,CE387-Assignments,148720,0,2024-03-01 04:24:57+00:00,[],
15629,https://github.com/RaghavaBathula/Asynchronous-FIFO_PreSi.git,2024-01-25 23:22:18+00:00,,0,RaghavaBathula/Asynchronous-FIFO_PreSi,748417948,SystemVerilog,Asynchronous-FIFO_PreSi,5565,0,2024-02-02 21:12:27+00:00,[],
15630,https://github.com/CSCE-689-SP24/lab-4.git,2023-12-29 19:38:38+00:00,,3,CSCE-689-SP24/lab-4,737090623,SystemVerilog,lab-4,165,0,2024-04-01 16:23:53+00:00,[],
15632,https://github.com/vishalvp123/Clock-time-period-checker.git,2023-12-19 06:51:51+00:00,Checker to verify the clock time period,0,vishalvp123/Clock-time-period-checker,733363966,SystemVerilog,Clock-time-period-checker,2,0,2023-12-19 06:55:44+00:00,[],
15633,https://github.com/SammyK12345/Microprocessor.git,2023-12-19 20:15:02+00:00,,0,SammyK12345/Microprocessor,733651636,SystemVerilog,Microprocessor,30,0,2023-12-19 20:25:48+00:00,[],
15634,https://github.com/FraserJordan1/Invaders-of-Space.git,2023-12-19 22:02:42+00:00,"(FPGA - Verilog)  Incorporation of a classic video game called, Space Invaders",0,FraserJordan1/Invaders-of-Space,733679518,SystemVerilog,Invaders-of-Space,1664,0,2023-12-19 22:18:05+00:00,[],
15635,https://github.com/deboradls/circuitos.sv.git,2023-12-24 18:42:49+00:00,,0,deboradls/circuitos.sv,735391018,SystemVerilog,circuitos.sv,7,0,2023-12-24 19:03:23+00:00,[],
15636,https://github.com/verdant-crocodile/sapr.git,2023-12-21 05:22:44+00:00,,0,verdant-crocodile/sapr,734196891,SystemVerilog,sapr,15,0,2023-12-27 18:50:07+00:00,[],
15637,https://github.com/KsuPtash/-.git,2023-12-27 18:49:57+00:00,,0,KsuPtash/-,736384186,SystemVerilog,-,11,0,2023-12-28 10:38:34+00:00,[],
15638,https://github.com/m-haris-n/3-Stage-Pipelined-RISC-V-Processor.git,2023-12-30 12:38:48+00:00,,0,m-haris-n/3-Stage-Pipelined-RISC-V-Processor,737273508,SystemVerilog,3-Stage-Pipelined-RISC-V-Processor,93,0,2023-12-30 12:40:34+00:00,[],
15639,https://github.com/OkraGrey/5-Staged-Pipelined-Processor.git,2023-12-30 16:28:50+00:00,,0,OkraGrey/5-Staged-Pipelined-Processor,737328259,SystemVerilog,5-Staged-Pipelined-Processor,115,0,2023-12-30 17:16:49+00:00,[],
15640,https://github.com/abhaytiwari10/ps2-protocol.git,2023-12-21 19:14:33+00:00,,0,abhaytiwari10/ps2-protocol,734472770,SystemVerilog,ps2-protocol,2,0,2023-12-21 19:15:32+00:00,[],
15641,https://github.com/DOKurilova/laba2SAPR.git,2023-12-20 20:33:01+00:00,,0,DOKurilova/laba2SAPR,734083022,SystemVerilog,laba2SAPR,7,0,2023-12-20 20:34:15+00:00,[],
15642,https://github.com/kanuar/FFVDD_SEM5.git,2023-12-20 06:19:32+00:00,,0,kanuar/FFVDD_SEM5,733792850,SystemVerilog,FFVDD_SEM5,84,0,2023-12-20 10:49:37+00:00,[],https://api.github.com/licenses/agpl-3.0
15643,https://github.com/despotovis/Project-Image-Rotation.git,2023-12-22 07:58:31+00:00,,0,despotovis/Project-Image-Rotation,734639697,SystemVerilog,Project-Image-Rotation,2508,0,2023-12-22 08:42:23+00:00,[],
15644,https://github.com/crispy245/spi.git,2024-01-02 14:23:58+00:00,,0,crispy245/spi,738142043,SystemVerilog,spi,4,0,2024-01-02 14:24:03+00:00,[],
15645,https://github.com/HITESHKAHIR/Simple-Adder-verification-using-System-Verilog-and-UVM.git,2024-01-04 08:13:48+00:00,,0,HITESHKAHIR/Simple-Adder-verification-using-System-Verilog-and-UVM,738863939,SystemVerilog,Simple-Adder-verification-using-System-Verilog-and-UVM,6,0,2024-01-04 08:20:39+00:00,[],
15646,https://github.com/EmeraldMerchant/fpga_final.git,2024-01-03 10:07:56+00:00,,0,EmeraldMerchant/fpga_final,738475377,SystemVerilog,fpga_final,5102,0,2024-01-03 10:17:03+00:00,[],
15647,https://github.com/AravindK25/Router_1x3-RTL_Design_Verification.git,2024-01-08 11:20:20+00:00,"The router accepts data packets on a single 8-bit port and routes them to one of the three output channels, channel0, channel1 and channel2.",0,AravindK25/Router_1x3-RTL_Design_Verification,740449515,SystemVerilog,Router_1x3-RTL_Design_Verification,28,0,2024-01-08 11:33:55+00:00,[],
15648,https://github.com/quratulaincodes/RISC-V-3-Stage-Pipelined-Processor.git,2023-12-30 14:16:08+00:00,,0,quratulaincodes/RISC-V-3-Stage-Pipelined-Processor,737295978,SystemVerilog,RISC-V-3-Stage-Pipelined-Processor,36,0,2023-12-30 14:25:41+00:00,[],
15649,https://github.com/nehawaghmore/Layered-Testbench-For-JK-Flipflop.git,2024-01-10 15:26:07+00:00,,0,nehawaghmore/Layered-Testbench-For-JK-Flipflop,741527355,SystemVerilog,Layered-Testbench-For-JK-Flipflop,12,0,2024-01-10 15:28:59+00:00,[],
15650,https://github.com/rishii2098/-Verification-of-I2C-Inter-Integrated-Circuit-Communication-protocol-using-SystemVerilog.git,2024-01-10 23:32:22+00:00,,0,rishii2098/-Verification-of-I2C-Inter-Integrated-Circuit-Communication-protocol-using-SystemVerilog,741698078,SystemVerilog,-Verification-of-I2C-Inter-Integrated-Circuit-Communication-protocol-using-SystemVerilog,7,0,2024-01-10 23:36:00+00:00,[],
15651,https://github.com/JJcompE/Six_Instruction_Programmable_Processor_Design.git,2024-01-07 02:34:17+00:00,DE2 FPGA,0,JJcompE/Six_Instruction_Programmable_Processor_Design,739942387,SystemVerilog,Six_Instruction_Programmable_Processor_Design,23,0,2024-02-10 04:15:41+00:00,[],
15652,https://github.com/natelannan-osu/dldLab2_Spring24.git,2024-01-16 05:12:51+00:00,Lab 2 for Digital Logic Design Spring 24,2,natelannan-osu/dldLab2_Spring24,743839087,SystemVerilog,dldLab2_Spring24,21444,0,2024-02-04 03:46:35+00:00,[],https://api.github.com/licenses/mit
15653,https://github.com/shaolab1/Distributed-Coincidence-Processors.git,2024-01-05 18:36:54+00:00,This folder contains the codes and documents of DCP,0,shaolab1/Distributed-Coincidence-Processors,739511476,SystemVerilog,Distributed-Coincidence-Processors,33107,0,2024-02-20 19:10:59+00:00,[],
15654,https://github.com/bwnace/bwnace-verilog.git,2024-01-16 00:50:36+00:00,,0,bwnace/bwnace-verilog,743775678,SystemVerilog,bwnace-verilog,10,0,2024-01-17 01:36:33+00:00,[],
15655,https://github.com/HJARDINE625/https-github.com-byu-ecen323-winter2024-323-labs-HJARDINE625.git,2024-01-17 03:30:55+00:00,,0,HJARDINE625/https-github.com-byu-ecen323-winter2024-323-labs-HJARDINE625,744316148,SystemVerilog,https-github.com-byu-ecen323-winter2024-323-labs-HJARDINE625,3807,0,2024-01-19 03:54:56+00:00,[],
15656,https://github.com/nikul09/Byte-addressable-single-port-RAM.git,2024-01-19 11:57:22+00:00,,0,nikul09/Byte-addressable-single-port-RAM,745468002,SystemVerilog,Byte-addressable-single-port-RAM,24,0,2024-01-19 12:00:40+00:00,[],
15657,https://github.com/FaisalShahkar/32bit_Counter.git,2024-01-22 08:56:53+00:00,,0,FaisalShahkar/32bit_Counter,746560497,SystemVerilog,32bit_Counter,2,0,2024-01-22 08:58:03+00:00,[],
15658,https://github.com/GaalElbaz/tFlopTwoBitCounter.git,2024-01-14 09:07:43+00:00," A 2-bit counter using T Flip-Flops is a digital circuit that counts in binary from 00 to 11. Each T Flip-Flop represents one bit of the counter, and the toggling behavior of the T Flip-Flop allows the counter to progress through its binary states",0,GaalElbaz/tFlopTwoBitCounter,743080175,SystemVerilog,tFlopTwoBitCounter,41,0,2024-01-14 09:38:43+00:00,[],
15659,https://github.com/badudum/RISC-cpu.git,2023-12-24 07:11:47+00:00,,0,badudum/RISC-cpu,735239685,SystemVerilog,RISC-cpu,60,0,2023-12-24 07:22:56+00:00,[],
15660,https://github.com/AYYAZmayo/SystemVerilog_Verification_Projects.git,2023-12-28 12:01:31+00:00,,0,AYYAZmayo/SystemVerilog_Verification_Projects,736621319,SystemVerilog,SystemVerilog_Verification_Projects,1778,0,2023-12-29 17:20:12+00:00,[],
15661,https://github.com/sieuvippro123/uvm_base_lab.git,2024-01-25 03:01:28+00:00,,0,sieuvippro123/uvm_base_lab,747985725,SystemVerilog,uvm_base_lab,164,0,2024-01-25 07:25:11+00:00,[],
15662,https://github.com/hyun-woo-oh/DL-Sort-Generator.git,2024-01-20 12:02:05+00:00,Chisel-based generator of the dual-layer hardware sorter (DL-Sort).,0,hyun-woo-oh/DL-Sort-Generator,745872109,SystemVerilog,DL-Sort-Generator,75,0,2024-01-20 12:18:06+00:00,[],https://api.github.com/licenses/gpl-3.0
15664,https://github.com/LiamSnow/ECE3829-Lab2.git,2024-01-25 18:00:47+00:00,,0,LiamSnow/ECE3829-Lab2,748311455,SystemVerilog,ECE3829-Lab2,6145,0,2024-03-27 21:07:34+00:00,[],
15665,https://github.com/Vietngo2748/RICS-V-simple-core.git,2024-01-15 07:16:05+00:00,5 stage pipeline RISC-V ,0,Vietngo2748/RICS-V-simple-core,743410482,SystemVerilog,RICS-V-simple-core,13306,0,2024-01-15 07:21:21+00:00,[],
15666,https://github.com/r06942072/study_sv.git,2024-01-12 02:28:37+00:00,,0,r06942072/study_sv,742226787,SystemVerilog,study_sv,40528,0,2024-01-12 02:35:01+00:00,[],
15667,https://github.com/timingwalker/sophon.git,2023-12-27 06:37:57+00:00,Sophon is a time-repeatable and low-latency architecture based on RISC-V,0,timingwalker/sophon,736162315,SystemVerilog,sophon,2223,0,2023-12-27 08:20:11+00:00,[],https://api.github.com/licenses/apache-2.0
15668,https://github.com/sakhan-1111/IEEE754-Adder.git,2023-12-19 23:42:12+00:00,System Verilog code for IEEE754 added.,0,sakhan-1111/IEEE754-Adder,733702023,SystemVerilog,IEEE754-Adder,13,0,2023-12-19 23:42:47+00:00,[],https://api.github.com/licenses/gpl-3.0
15669,https://github.com/ksx2/verilogTask1.git,2023-12-21 08:36:53+00:00,,0,ksx2/verilogTask1,734255867,SystemVerilog,verilogTask1,11201,0,2023-12-21 09:16:27+00:00,[],
15670,https://github.com/Raghubabu7993/constraints.git,2023-12-21 06:55:05+00:00,,0,Raghubabu7993/constraints,734223033,SystemVerilog,constraints,7,0,2023-12-21 06:56:54+00:00,[],
15671,https://github.com/balaji-vbr/Verification-of-AXI4-Lite-Bus-Protocol-using-System-Verilog-Assertions.git,2023-12-21 00:00:32+00:00,,0,balaji-vbr/Verification-of-AXI4-Lite-Bus-Protocol-using-System-Verilog-Assertions,734127901,SystemVerilog,Verification-of-AXI4-Lite-Bus-Protocol-using-System-Verilog-Assertions,1123,0,2023-12-21 00:10:10+00:00,[],
15672,https://github.com/panavio/Verilog-and-RISC-V-Assembly.git,2024-01-14 06:39:22+00:00,For ECE253: Computer and digital systems (not organised!!),0,panavio/Verilog-and-RISC-V-Assembly,743047447,SystemVerilog,Verilog-and-RISC-V-Assembly,162,0,2024-01-14 06:39:50+00:00,[],
15673,https://github.com/VirusCollector/Mips-Pipeline50.git,2024-01-16 15:33:35+00:00,计算机系统实现I实验存档,0,VirusCollector/Mips-Pipeline50,744082081,SystemVerilog,Mips-Pipeline50,340,0,2024-01-16 15:36:52+00:00,[],
15674,https://github.com/anil-yesil/UART.git,2024-01-11 11:37:15+00:00,"UART Hardware Communication Protocol on Basys3 boards. Full-duplex, 8-bit data, 2-stop bits. Implements stages for transmitter, receiver, memory, and automatic transfer. Connect two boards for bidirectional communication. Project report includes detailed design and schematics.",0,anil-yesil/UART,741919267,SystemVerilog,UART,10,0,2024-01-11 11:43:55+00:00,[],
15675,https://github.com/GaalElbaz/countToThree.git,2024-01-10 12:45:14+00:00,"Implementing a count to 3 with 2 JK flip-flops involves using sequential logic to toggle states. The first flip-flop divides the input frequency by 2, and the second one divides it further, creating a 2-bit counter with states 00, 01, 10, and 11.",0,GaalElbaz/countToThree,741458162,SystemVerilog,countToThree,60,0,2024-01-10 12:50:29+00:00,[],
15676,https://github.com/nehawaghmore/Layered-Testbench-for-Full-Adder.git,2024-01-10 14:19:16+00:00,,0,nehawaghmore/Layered-Testbench-for-Full-Adder,741498214,SystemVerilog,Layered-Testbench-for-Full-Adder,12,0,2024-01-10 14:49:19+00:00,[],
15677,https://github.com/rishabh4749/DFF_Asynchronous_Reset_2.git,2023-12-29 07:26:41+00:00,,0,rishabh4749/DFF_Asynchronous_Reset_2,736895668,SystemVerilog,DFF_Asynchronous_Reset_2,4,0,2024-01-13 14:42:59+00:00,[],
15678,https://github.com/WilliamLi97/hw.git,2024-01-09 18:10:15+00:00,Collection of my own RTL implementations of various hardware structures,0,WilliamLi97/hw,741112551,SystemVerilog,hw,67,0,2024-01-11 22:30:29+00:00,[],
15679,https://github.com/RohiniNatarajan/git_sample2.git,2024-01-18 12:40:33+00:00,,0,RohiniNatarajan/git_sample2,744997159,SystemVerilog,git_sample2,2,0,2024-01-18 12:53:53+00:00,[],
15680,https://github.com/atfox272/SPI_peripheral.git,2024-01-04 10:47:45+00:00,Implement SPI peripheral by HDL (Verilog),0,atfox272/SPI_peripheral,738916061,SystemVerilog,SPI_peripheral,265,0,2024-01-04 10:49:45+00:00,[],
15681,https://github.com/ckf104/rvv-core.git,2024-01-07 12:35:37+00:00,,0,ckf104/rvv-core,740067485,SystemVerilog,rvv-core,127,0,2024-01-07 13:22:15+00:00,[],
15682,https://github.com/nick-pilgrim/Finite-State-Machine.git,2023-12-22 20:34:12+00:00,"//This File contains the physical validation module, the module that creates the FSM, and the testbench for the FSM, and the debouncer",0,nick-pilgrim/Finite-State-Machine,734857527,SystemVerilog,Finite-State-Machine,2,0,2023-12-22 20:35:40+00:00,[],
15683,https://github.com/yourealfun/apb_demux_v2.git,2023-12-25 19:15:43+00:00,,0,yourealfun/apb_demux_v2,735673586,SystemVerilog,apb_demux_v2,486,0,2023-12-25 19:17:16+00:00,[],
15684,https://github.com/kmjstr35/bullsAndCows.git,2023-12-26 06:33:04+00:00,,0,kmjstr35/bullsAndCows,735811850,SystemVerilog,bullsAndCows,43,0,2023-12-26 06:34:47+00:00,[],
15685,https://github.com/Rahma-Aly/ALU-UVM.git,2023-12-17 03:59:41+00:00,UVM based verification of a simple ALU design,0,Rahma-Aly/ALU-UVM,732554068,SystemVerilog,ALU-UVM,8,0,2023-12-17 04:02:07+00:00,[],
15686,https://github.com/monistode/ISA_register.git,2023-12-23 13:42:21+00:00,,0,monistode/ISA_register,735050468,SystemVerilog,ISA_register,1862,0,2023-12-23 13:42:54+00:00,[],
15687,https://github.com/zheleznovkiril/DZ_verilog.git,2023-12-27 16:16:52+00:00,,0,zheleznovkiril/DZ_verilog,736335210,SystemVerilog,DZ_verilog,1618,0,2023-12-27 16:30:32+00:00,[],
15688,https://github.com/jfu4/CPEN-211-Reduced-Instruction-Set-Computer-.git,2023-12-27 23:49:41+00:00,,0,jfu4/CPEN-211-Reduced-Instruction-Set-Computer-,736446168,SystemVerilog,CPEN-211-Reduced-Instruction-Set-Computer-,19,0,2023-12-27 23:51:20+00:00,[],
15689,https://github.com/kburp/comparc-2023.git,2024-01-03 07:32:05+00:00,,0,kburp/comparc-2023,738421632,SystemVerilog,comparc-2023,144,0,2024-01-03 07:36:05+00:00,[],
15690,https://github.com/vakeesank99/axis_sum_on_7_segment.git,2023-12-30 17:12:20+00:00,,0,vakeesank99/axis_sum_on_7_segment,737339158,SystemVerilog,axis_sum_on_7_segment,5,0,2023-12-30 17:25:59+00:00,[],
15691,https://github.com/MoritMorit/jikken_yon-.git,2023-12-25 10:17:21+00:00,helpme,0,MoritMorit/jikken_yon-,735549924,SystemVerilog,jikken_yon-,65,0,2023-12-25 10:53:11+00:00,[],
15692,https://github.com/SKrishnaPrasad-10/Design-of-Round-Robin-Arbiter-in-System-Verilog.git,2024-01-08 08:56:15+00:00,,0,SKrishnaPrasad-10/Design-of-Round-Robin-Arbiter-in-System-Verilog,740392882,SystemVerilog,Design-of-Round-Robin-Arbiter-in-System-Verilog,2,0,2024-01-08 08:56:43+00:00,[],
15693,https://github.com/GaalElbaz/mux2-1.git,2024-01-09 18:30:49+00:00,"A 2-to-1 multiplexer (mux) selects one of two inputs (A or B) based on a control signal (SEL). The output is the selected input: if SEL is true, output is B; otherwise, it's A. Used for data routing in digital systems.",0,GaalElbaz/mux2-1,741120456,SystemVerilog,mux2-1,25,0,2024-01-09 18:35:02+00:00,[],
15694,https://github.com/ArcaneWizard/CSE_371_Labs.git,2024-01-23 01:52:18+00:00,Verilog Hell,0,ArcaneWizard/CSE_371_Labs,746967330,SystemVerilog,CSE_371_Labs,48479,0,2024-01-23 02:08:28+00:00,[],
15695,https://github.com/Smruti-2001/Design-and-verify-UART-Protocol-using-Verilog-and-System-Verilog-respectively.git,2024-01-25 12:31:59+00:00,,0,Smruti-2001/Design-and-verify-UART-Protocol-using-Verilog-and-System-Verilog-respectively,748172811,SystemVerilog,Design-and-verify-UART-Protocol-using-Verilog-and-System-Verilog-respectively,4,0,2024-01-25 12:34:29+00:00,[],
15696,https://github.com/orszoooo/RISCVcpu.git,2024-01-25 19:20:41+00:00,,0,orszoooo/RISCVcpu,748343260,SystemVerilog,RISCVcpu,7,0,2024-01-25 19:20:49+00:00,[],
15697,https://github.com/kxtieb/Lab0.git,2024-01-24 22:22:53+00:00,,0,kxtieb/Lab0,747916212,SystemVerilog,Lab0,21142,0,2024-01-29 19:42:23+00:00,[],https://api.github.com/licenses/mit
15698,https://github.com/epfl-vlsc/parendi-paperspace-demo.git,2024-01-18 17:32:56+00:00,Parendi's demo on Paperspace IPUs,0,epfl-vlsc/parendi-paperspace-demo,745125078,SystemVerilog,parendi-paperspace-demo,34880,0,2024-01-18 17:33:29+00:00,[],
15699,https://github.com/ImtiyazAli1997/system_verilog.git,2023-12-26 02:00:25+00:00,,0,ImtiyazAli1997/system_verilog,735747996,SystemVerilog,system_verilog,88,0,2023-12-26 02:01:56+00:00,[],
15700,https://github.com/oscc-ip/i2s.git,2023-12-31 02:03:46+00:00,An APB4-based I2S Controller,0,oscc-ip/i2s,737429262,SystemVerilog,i2s,47,0,2024-01-25 14:00:23+00:00,[],https://api.github.com/licenses/mulanpsl-2.0
15701,https://github.com/cimonik/CPU.git,2024-01-03 11:10:42+00:00,,0,cimonik/CPU,738496985,SystemVerilog,CPU,44,0,2024-01-03 11:12:24+00:00,[],
15702,https://github.com/AliMaher15/UART-UVM.git,2023-12-18 13:12:37+00:00,UVM environment using SV for the famous protocol UART,0,AliMaher15/UART-UVM,733054693,SystemVerilog,UART-UVM,3096,0,2023-12-22 22:11:07+00:00,[],
15703,https://github.com/BrinaDancer/MIPS2023PACE.git,2024-01-03 18:35:50+00:00,Design and Implementation 5-Stage Pipeline 32-bit MIPS Processor   PACE University Spring 2023 ,0,BrinaDancer/MIPS2023PACE,738659631,SystemVerilog,MIPS2023PACE,718,0,2024-01-03 18:40:15+00:00,[],
15704,https://github.com/cengizakr/convolution-module.git,2023-12-25 21:06:32+00:00,SystemVerilog module that takes convolution,0,cengizakr/convolution-module,735692936,SystemVerilog,convolution-module,411,0,2023-12-25 21:10:33+00:00,[],
15705,https://github.com/flaviens/yosys-b1.git,2024-01-23 09:43:28+00:00,,0,flaviens/yosys-b1,747113484,SystemVerilog,yosys-b1,1,0,2024-01-23 09:43:51+00:00,[],
15706,https://github.com/simervir/UVM.git,2024-01-24 21:09:39+00:00,,0,simervir/UVM,747893922,SystemVerilog,UVM,11,0,2024-01-24 21:28:52+00:00,[],
15707,https://github.com/Ferdziu10/UEC-Stopwatch.git,2024-01-25 16:59:37+00:00,,0,Ferdziu10/UEC-Stopwatch,748287133,SystemVerilog,UEC-Stopwatch,61,0,2024-01-25 17:08:11+00:00,[],
15708,https://github.com/PeterDessev/ECEN-2350-Final-Project-SystemVerilog-CPU.git,2023-12-18 01:50:04+00:00,BP-1 8 bit Microprocessor written for ECEN 2350,0,PeterDessev/ECEN-2350-Final-Project-SystemVerilog-CPU,732847201,SystemVerilog,ECEN-2350-Final-Project-SystemVerilog-CPU,1435,0,2024-01-30 04:14:15+00:00,"['mips', 'processor', 'systemveri']",
15709,https://github.com/saher-i/MY_SV_Codes.git,2023-12-28 02:28:07+00:00,,0,saher-i/MY_SV_Codes,736474346,SystemVerilog,MY_SV_Codes,616,0,2023-12-28 02:57:41+00:00,[],
15710,https://github.com/padhu125/Dual-channel-sinusoidal-triangular-sawtooth-square-and-dc-waveform-generator.git,2023-12-30 02:17:55+00:00,"The goal of this project is to implement a dual-channel waveform generator, capable of being controlled and configured from the processor subsystem over an AXI4-lite interface.",0,padhu125/Dual-channel-sinusoidal-triangular-sawtooth-square-and-dc-waveform-generator,737155882,SystemVerilog,Dual-channel-sinusoidal-triangular-sawtooth-square-and-dc-waveform-generator,2771,0,2023-12-30 02:22:47+00:00,[],https://api.github.com/licenses/mit
15711,https://github.com/hh2150597/CA_Project_7th.git,2023-12-30 16:54:33+00:00,,0,hh2150597/CA_Project_7th,737334706,SystemVerilog,CA_Project_7th,325,0,2023-12-30 16:56:49+00:00,[],
15712,https://github.com/HareemArsh/CA-Term-Project.git,2023-12-30 15:01:04+00:00,3-Stage Pipelined Processor with CSR Support,0,HareemArsh/CA-Term-Project,737306779,SystemVerilog,CA-Term-Project,184,0,2023-12-30 15:17:31+00:00,"['3-stage-pipelined-riscv', 'csr', 'pipeline']",
15713,https://github.com/Shaff234/3-Stage-Pipeline-Architecture.git,2023-12-30 18:21:00+00:00,"A compact 3-stage pipelined processor implemented in System Verilog. Features modular design, RISC-V instruction support, and easy simulation with Verilog simulators. Explore the code in the src directory.",0,Shaff234/3-Stage-Pipeline-Architecture,737355028,SystemVerilog,3-Stage-Pipeline-Architecture,114,0,2023-12-30 18:25:13+00:00,[],
15714,https://github.com/Vietngo2748/RAM-in-3-data-type.git,2024-01-03 03:09:24+00:00,"My Ram can select between byte, word or doubleword type ",0,Vietngo2748/RAM-in-3-data-type,738352884,SystemVerilog,RAM-in-3-data-type,10940,0,2024-01-03 03:13:04+00:00,[],
15715,https://github.com/ChrisAtUW/FPGA_minigame.git,2024-01-04 00:36:22+00:00,Final Project for Digital Circuits and Systems class at UW,0,ChrisAtUW/FPGA_minigame,738748247,SystemVerilog,FPGA_minigame,20,0,2024-01-04 03:07:47+00:00,[],
15716,https://github.com/Ayesha-WEB-DEV/3-stage_pipelining.git,2023-12-30 16:28:38+00:00,,0,Ayesha-WEB-DEV/3-stage_pipelining,737328201,SystemVerilog,3-stage_pipelining,739,0,2024-01-04 03:28:33+00:00,[],
15717,https://github.com/GaalElbaz/FullAdder.git,2024-01-09 19:08:25+00:00,"A full adder is a binary circuit with 3 inputs (A, B, Cin) and 2 outputs (Sum, Cout). It includes a carry input, handling carry from prior stages. The truth table shows its inclusive operation. Logic equations for Sum (S) and carry-out (Cout) involve XOR and AND gates. Crucial for multi-bit addition, it's a key component in digital systems.",0,GaalElbaz/FullAdder,741133928,SystemVerilog,FullAdder,32,0,2024-01-09 19:10:36+00:00,[],
15718,https://github.com/arruk/MIPS_multicycle.git,2023-12-24 14:53:16+00:00,,0,arruk/MIPS_multicycle,735339451,SystemVerilog,MIPS_multicycle,6,0,2024-01-09 21:45:33+00:00,[],
15719,https://github.com/bilibidum/svdarkeden.git,2024-01-08 18:22:28+00:00,"O svDarkeden é um gerenciador de serviços para o gameserver do jogo Darkeden. Este projeto permite aos ADM visualizar o status, iniciar o servidor e parar o servidor do jogo de maneira rápida e segura.",0,bilibidum/svdarkeden,740626748,SystemVerilog,svdarkeden,112,0,2024-01-11 00:52:08+00:00,[],https://api.github.com/licenses/gpl-3.0
15720,https://github.com/simran9293/32-bit-MIPS-Processor.git,2024-01-11 15:41:11+00:00,Design and Simulation of 32-bit MIPS Processor,0,simran9293/32-bit-MIPS-Processor,742019354,SystemVerilog,32-bit-MIPS-Processor,7,0,2024-01-11 15:43:34+00:00,[],
15721,https://github.com/Ianmurph91/distributed_ram.git,2024-01-12 14:42:31+00:00,Dual-port distributed RAM in VHDL,0,Ianmurph91/distributed_ram,742465718,SystemVerilog,distributed_ram,3,0,2024-01-12 14:46:33+00:00,"['fpga', 'vhdl']",
15722,https://github.com/JackSabine/xentry-cache.git,2023-12-29 04:21:01+00:00,,0,JackSabine/xentry-cache,736852792,SystemVerilog,xentry-cache,75,0,2023-12-29 04:21:59+00:00,[],
15723,https://github.com/rishabh4749/D_flip_flop.git,2023-12-28 17:45:43+00:00,,0,rishabh4749/D_flip_flop,736727847,SystemVerilog,D_flip_flop,4,0,2024-01-13 14:35:25+00:00,[],
15724,https://github.com/rishabh4749/Mux_Two_DFFs.git,2024-01-13 06:37:02+00:00,,0,rishabh4749/Mux_Two_DFFs,742717443,SystemVerilog,Mux_Two_DFFs,4,0,2024-01-13 15:04:53+00:00,[],
15725,https://github.com/xayin212/riscv_processor.git,2024-01-05 04:08:34+00:00,SystemVerilog code to simulate the hardware of a single-cycle processor and a pipelined five-stage processor,0,xayin212/riscv_processor,739225738,SystemVerilog,riscv_processor,55,0,2024-01-13 02:20:19+00:00,[],
15726,https://github.com/AashiSrivastava/UART16550_TX-RX_LOGIC.git,2024-01-14 10:13:15+00:00,"The Universal Asynchronous Receiver-Transmitter (UART) 16550 is a widely used serial communication interface known for its simplicity and versatility. This report provides an overview of the UART 16550's TX and RX logic, highlighting key features, including 16-bit oversampling and the Line Control Register (LCR).",0,AashiSrivastava/UART16550_TX-RX_LOGIC,743095524,SystemVerilog,UART16550_TX-RX_LOGIC,175,0,2024-01-14 10:16:15+00:00,[],
15727,https://github.com/AliMaher15/spi-uvm.git,2024-01-02 18:50:39+00:00,UVM environment using SV for the famous protocol SPI,0,AliMaher15/spi-uvm,738236193,SystemVerilog,spi-uvm,980,0,2024-01-02 18:51:53+00:00,[],
15728,https://github.com/tom21487/reg_ctrl.git,2023-12-22 21:56:31+00:00,SystemVerilog testbench. Constraint random verification. Self checking testbench. Based on: https://chipverify.com/systemverilog/systemverilog-testbench-example-1,0,tom21487/reg_ctrl,734874112,SystemVerilog,reg_ctrl,160,0,2023-12-25 07:35:10+00:00,[],
15729,https://github.com/MahantaTalakal/Carry-Look-Ahead-Adder_32bit.git,2024-01-15 03:13:54+00:00,,0,MahantaTalakal/Carry-Look-Ahead-Adder_32bit,743350620,SystemVerilog,Carry-Look-Ahead-Adder_32bit,2,0,2024-01-15 03:15:17+00:00,[],
15730,https://github.com/attar8/Fifo-module-using-System-verilog.git,2023-12-18 07:37:30+00:00,,0,attar8/Fifo-module-using-System-verilog,732934432,SystemVerilog,Fifo-module-using-System-verilog,17,0,2023-12-18 07:39:10+00:00,[],
15731,https://github.com/Ammara-Noor/five-stage-pipelined-proc-riscv.git,2023-12-22 06:43:25+00:00,,0,Ammara-Noor/five-stage-pipelined-proc-riscv,734619040,SystemVerilog,five-stage-pipelined-proc-riscv,102,0,2023-12-22 06:49:10+00:00,[],
15732,https://github.com/mathewwu11/Baccarat-Engine.git,2023-12-22 04:27:19+00:00,Baccarat Engine,0,mathewwu11/Baccarat-Engine,734587116,SystemVerilog,Baccarat-Engine,8,0,2023-12-22 09:33:10+00:00,['systemverilog'],
15733,https://github.com/chaoqun-liang/idma_axis.git,2023-12-25 23:50:58+00:00,,0,chaoqun-liang/idma_axis,735716350,SystemVerilog,idma_axis,5141,0,2023-12-25 23:52:05+00:00,[],
15734,https://github.com/Gayan0303/oddevenfinder.git,2024-01-18 11:59:14+00:00,,0,Gayan0303/oddevenfinder,744980887,SystemVerilog,oddevenfinder,2,0,2024-01-18 11:59:49+00:00,[],
15735,https://github.com/rishabh4749/Dual_Edge_Detector.git,2024-01-19 10:38:51+00:00,,0,rishabh4749/Dual_Edge_Detector,745439595,SystemVerilog,Dual_Edge_Detector,1,0,2024-01-19 10:40:07+00:00,[],
15736,https://github.com/dounsnight/CTRL_GATE.git,2024-01-18 12:09:40+00:00,,0,dounsnight/CTRL_GATE,744985099,SystemVerilog,CTRL_GATE,6,0,2024-01-18 12:33:12+00:00,[],
15737,https://github.com/Hamzaweb49/seqmultiplier.git,2023-12-25 10:13:59+00:00,16x16 Sequential Multiplier,0,Hamzaweb49/seqmultiplier,735549186,SystemVerilog,seqmultiplier,35,0,2023-12-25 10:24:26+00:00,[],
15738,https://github.com/casager/HSCA.git,2024-01-23 18:57:18+00:00,,0,casager/HSCA,747351349,SystemVerilog,HSCA,7630,0,2024-01-23 19:13:22+00:00,[],
15739,https://github.com/benjicruz/IEEE-at-UCLA-DAV.git,2024-01-19 00:23:59+00:00,,0,benjicruz/IEEE-at-UCLA-DAV,745259598,SystemVerilog,IEEE-at-UCLA-DAV,21788,0,2024-01-24 03:54:39+00:00,[],
15740,https://github.com/attar8/Five-Stage-Mips-Processor-Verification.git,2023-12-17 09:38:04+00:00,,0,attar8/Five-Stage-Mips-Processor-Verification,732618327,SystemVerilog,Five-Stage-Mips-Processor-Verification,3786,0,2023-12-17 09:42:20+00:00,[],
15742,https://github.com/dreampursuitLX/GWAS-FPGA.git,2023-12-20 05:52:22+00:00,,0,dreampursuitLX/GWAS-FPGA,733785087,SystemVerilog,GWAS-FPGA,1223,0,2023-12-20 06:14:08+00:00,[],
15743,https://github.com/esynr3z/verilator-uvm-perf.git,2023-12-22 11:30:26+00:00,,0,esynr3z/verilator-uvm-perf,734702339,SystemVerilog,verilator-uvm-perf,10,0,2023-12-22 11:53:04+00:00,[],
15744,https://github.com/cuongcuong1220/SystemVerilog.git,2023-12-24 05:34:41+00:00,Coverage_Mux4-1,0,cuongcuong1220/SystemVerilog,735222583,SystemVerilog,SystemVerilog,5794,0,2023-12-24 05:36:10+00:00,[],
15745,https://github.com/Katerinalex001/laba_2_final.git,2023-12-28 05:20:50+00:00,,0,Katerinalex001/laba_2_final,736508999,SystemVerilog,laba_2_final,6,0,2023-12-28 05:26:42+00:00,[],
15746,https://github.com/AwaisDar1/Three-Staged-Pipeline-Processor-RISC-V.git,2023-12-23 20:06:07+00:00,RISCV,0,AwaisDar1/Three-Staged-Pipeline-Processor-RISC-V,735140210,SystemVerilog,Three-Staged-Pipeline-Processor-RISC-V,672,0,2024-01-01 07:44:13+00:00,[],
15747,https://github.com/gaganng/rtl_blocks.git,2024-01-01 20:56:31+00:00,,0,gaganng/rtl_blocks,737883779,SystemVerilog,rtl_blocks,1,0,2024-01-01 21:06:22+00:00,[],
15748,https://github.com/Abdullah7861/Three-Stage-Pipelined-Processor.git,2023-12-30 14:59:55+00:00,This repository contains System Verilog code for Risc-V based three staged 32 bit pipelined processor with csr Implemetation.,0,Abdullah7861/Three-Stage-Pipelined-Processor,737306504,SystemVerilog,Three-Stage-Pipelined-Processor,141,0,2024-01-03 22:39:29+00:00,[],
15749,https://github.com/Sanjay4477/32-bit-Vedic-Multiplier-using-Carry-Save-Adder.git,2024-01-07 14:24:46+00:00,,0,Sanjay4477/32-bit-Vedic-Multiplier-using-Carry-Save-Adder,740099185,SystemVerilog,32-bit-Vedic-Multiplier-using-Carry-Save-Adder,1,0,2024-01-07 14:32:11+00:00,[],
15750,https://github.com/mahmedadawy2013/UVM_LFSR.git,2024-01-06 00:49:39+00:00,,0,mahmedadawy2013/UVM_LFSR,739597466,SystemVerilog,UVM_LFSR,30,0,2024-01-06 00:50:43+00:00,[],
15751,https://github.com/SKrishnaPrasad-10/UVM_Verification_of_APB_Protocol.git,2024-01-06 23:55:11+00:00,,0,SKrishnaPrasad-10/UVM_Verification_of_APB_Protocol,739918575,SystemVerilog,UVM_Verification_of_APB_Protocol,16,0,2024-01-06 23:56:17+00:00,[],
15752,https://github.com/tiagosr/gw2_hdmi_base.git,2024-01-08 23:49:35+00:00,,0,tiagosr/gw2_hdmi_base,740725056,SystemVerilog,gw2_hdmi_base,27,0,2024-01-08 23:49:41+00:00,[],
15753,https://github.com/shohschulz/64-Bit-Pipelined-ARM-CPU.git,2024-01-09 00:31:50+00:00,,0,shohschulz/64-Bit-Pipelined-ARM-CPU,740734231,SystemVerilog,64-Bit-Pipelined-ARM-CPU,31,0,2024-01-09 00:38:01+00:00,[],
15754,https://github.com/MaxCharlington/wasm-future.git,2024-01-11 09:45:19+00:00,,0,MaxCharlington/wasm-future,741875650,SystemVerilog,wasm-future,38,0,2024-01-11 09:45:47+00:00,[],
15755,https://github.com/BillyScreezo/Gold-transmitter.git,2024-01-11 11:15:57+00:00,Customizable gold code transmitter,0,BillyScreezo/Gold-transmitter,741911115,SystemVerilog,Gold-transmitter,18,0,2024-01-11 11:16:03+00:00,[],https://api.github.com/licenses/gpl-3.0
15756,https://github.com/MAHANTHADEEKSHA-SB/AHB-UVC.git,2024-01-11 17:48:31+00:00,,0,MAHANTHADEEKSHA-SB/AHB-UVC,742071197,SystemVerilog,AHB-UVC,28,0,2024-01-11 18:15:49+00:00,[],https://api.github.com/licenses/apache-2.0
15757,https://github.com/rishabh4749/Multiple_DFFs.git,2023-12-28 18:34:56+00:00,,0,rishabh4749/Multiple_DFFs,736741157,SystemVerilog,Multiple_DFFs,4,0,2024-01-13 14:37:05+00:00,[],
15758,https://github.com/rishabh4749/DFF_Synchronous_Reset.git,2023-12-28 18:53:59+00:00,,0,rishabh4749/DFF_Synchronous_Reset,736746189,SystemVerilog,DFF_Synchronous_Reset,4,0,2024-01-13 14:38:11+00:00,[],
15759,https://github.com/rishabh4749/DFF_Byte_Enable.git,2023-12-29 05:17:17+00:00,,0,rishabh4749/DFF_Byte_Enable,736864063,SystemVerilog,DFF_Byte_Enable,4,0,2024-01-13 14:41:04+00:00,[],
15760,https://github.com/MahmoudMohamed9988/UVM_of_ALU.git,2024-01-13 16:52:37+00:00,Implement a complete UVM testbench and design for ALU,0,MahmoudMohamed9988/UVM_of_ALU,742883776,SystemVerilog,UVM_of_ALU,88,0,2024-01-13 17:22:16+00:00,[],
15761,https://github.com/ananya343B/D_flipflop_layeredtb.git,2024-01-16 16:54:14+00:00,,0,ananya343B/D_flipflop_layeredtb,744118498,SystemVerilog,D_flipflop_layeredtb,10,0,2024-01-16 17:01:49+00:00,[],
15762,https://github.com/kietuan/DATKLL.git,2024-01-10 14:42:28+00:00,,0,kietuan/DATKLL,741508454,SystemVerilog,DATKLL,166225,0,2024-01-10 15:46:33+00:00,[],https://api.github.com/licenses/mit
15763,https://github.com/Jashanjyot/Hardware-Image_Decompressor.git,2024-01-19 15:16:07+00:00,,0,Jashanjyot/Hardware-Image_Decompressor,745546599,SystemVerilog,Hardware-Image_Decompressor,1492,0,2024-01-19 15:20:25+00:00,[],
15764,https://github.com/ruwayd99/FormalVerification_for_Counter.git,2023-12-24 23:01:32+00:00,,0,ruwayd99/FormalVerification_for_Counter,735432219,SystemVerilog,FormalVerification_for_Counter,6,0,2023-12-24 23:13:19+00:00,[],
15765,https://github.com/MahmoudMohamed9988/FIFO_SV_TB.git,2024-01-13 17:41:10+00:00,Implement a complete SystemVerilog testbench and design for FIFO,0,MahmoudMohamed9988/FIFO_SV_TB,742897763,SystemVerilog,FIFO_SV_TB,13,0,2024-01-13 17:43:09+00:00,[],
15766,https://github.com/cdhmanning/FLD119x-src.git,2024-01-22 07:02:32+00:00,SwerVolf changes for LFD119x,0,cdhmanning/FLD119x-src,746520111,SystemVerilog,FLD119x-src,2632,0,2024-01-22 07:05:20+00:00,[],
15767,https://github.com/flaviens/cxxrtl-b4.git,2024-01-21 12:56:22+00:00,,0,flaviens/cxxrtl-b4,746225374,SystemVerilog,cxxrtl-b4,1,0,2024-01-21 12:59:05+00:00,[],
15768,https://github.com/Rubayet13/Fifo_systemverilog.git,2024-01-08 12:30:23+00:00,,0,Rubayet13/Fifo_systemverilog,740477010,SystemVerilog,Fifo_systemverilog,104,0,2024-02-03 17:17:53+00:00,[],
15769,https://github.com/daisukex/sc-spilite.git,2024-01-08 02:22:56+00:00,Space Cubics SPI-Lite Core is a master core for the Serial Peripheral Interface (SPI),0,daisukex/sc-spilite,740277750,SystemVerilog,sc-spilite,45,0,2024-01-08 02:26:19+00:00,[],https://api.github.com/licenses/apache-2.0
15770,https://github.com/dav3floyd/Traffic-Light-Controller.git,2024-01-24 18:27:30+00:00,,0,dav3floyd/Traffic-Light-Controller,747835448,SystemVerilog,Traffic-Light-Controller,7,0,2024-01-24 18:34:56+00:00,[],
15771,https://github.com/CepbluKot/fpga_labs.git,2024-01-25 22:20:22+00:00,,0,CepbluKot/fpga_labs,748402220,SystemVerilog,fpga_labs,7,0,2024-01-26 09:56:06+00:00,[],
15772,https://github.com/cn9826/RV32I.git,2024-01-14 18:50:41+00:00,,0,cn9826/RV32I,743242949,SystemVerilog,RV32I,28,0,2024-01-14 19:04:26+00:00,[],
15773,https://github.com/BrunaMatias/SistemasDigitais.git,2023-12-17 10:28:54+00:00,,0,BrunaMatias/SistemasDigitais,732630039,SystemVerilog,SistemasDigitais,18,0,2024-02-13 00:41:46+00:00,[],
15774,https://github.com/Karthikdhondi/SystemVerilog.git,2023-12-24 09:39:36+00:00,"Developed a Complete System Verilog Test Bench with transactions, generator, driver, interfaces, monitor and scoreboard for the given GCD RTL.",0,Karthikdhondi/SystemVerilog,735268460,SystemVerilog,SystemVerilog,27,0,2024-02-19 11:03:55+00:00,[],
15775,https://github.com/carlabferreira/ISL-UFMG.git,2023-12-29 22:20:10+00:00,,0,carlabferreira/ISL-UFMG,737122340,SystemVerilog,ISL-UFMG,2574,0,2024-03-17 00:18:19+00:00,[],
15776,https://github.com/dingandrew/hdc_sw.git,2024-01-15 19:17:13+00:00,,0,dingandrew/hdc_sw,743688735,SystemVerilog,hdc_sw,3225,0,2024-02-04 05:28:55+00:00,[],
15777,https://github.com/henrybliu/bitcoin-hash-miner.git,2024-01-17 03:07:33+00:00,,0,henrybliu/bitcoin-hash-miner,744310326,SystemVerilog,bitcoin-hash-miner,7669,0,2024-03-07 05:22:08+00:00,[],
15778,https://github.com/aGhandhii/floating_point_unit.git,2024-01-11 04:18:48+00:00,A simple Floating-Point arithmetic unit - implemented in SystemVerilog,0,aGhandhii/floating_point_unit,741767570,SystemVerilog,floating_point_unit,311,0,2024-01-11 04:41:44+00:00,"['digital-design', 'fpu', 'systemverilog']",
15779,https://github.com/Teimir/UART_OKBE.git,2024-01-18 19:36:11+00:00,,0,Teimir/UART_OKBE,745174594,SystemVerilog,UART_OKBE,148,0,2024-01-18 20:51:08+00:00,[],
15780,https://github.com/vikrantIIITD2024/Elevator-Controller-using-Verilog.git,2024-01-24 06:44:16+00:00,,0,vikrantIIITD2024/Elevator-Controller-using-Verilog,747550346,SystemVerilog,Elevator-Controller-using-Verilog,7,0,2024-01-24 06:45:17+00:00,[],
15781,https://github.com/meiniKi/FazyRV.git,2024-02-19 20:09:47+00:00,"A minimal-area RISC-V core with a scalable data path to 1, 2, 4, or 8 bits and manifold variants.",1,meiniKi/FazyRV,760114130,SystemVerilog,FazyRV,771,55,2024-04-11 09:20:07+00:00,"['computer-architecture', 'digital-design', 'embedded-systems', 'fpga', 'risc-v', 'system-on-chip', 'vlsi-design']",
15782,https://github.com/Advanced-Microelectronics-Group/OpenC910_Modified.git,2024-02-15 15:33:19+00:00,commit rtl and build cosim env,8,Advanced-Microelectronics-Group/OpenC910_Modified,758080826,SystemVerilog,OpenC910_Modified,28007,35,2024-03-31 17:10:11+00:00,[],
15783,https://github.com/MPSU/FPGA_pract.git,2024-02-19 11:55:33+00:00,"Методические материалы курса ""Практикум по ПЛИС""",4,MPSU/FPGA_pract,759820069,SystemVerilog,FPGA_pract,2302,8,2024-04-10 13:34:31+00:00,[],
15784,https://github.com/karimmahmoud22/SystemVerilog.git,2024-02-05 18:01:51+00:00,,1,karimmahmoud22/SystemVerilog,753227913,SystemVerilog,SystemVerilog,104,7,2024-03-24 03:29:18+00:00,[],https://api.github.com/licenses/mit
15785,https://github.com/pulp-platform/soc_model_rt_analysis.git,2024-01-26 10:52:34+00:00,,1,pulp-platform/soc_model_rt_analysis,748601292,SystemVerilog,soc_model_rt_analysis,138,6,2024-02-18 21:15:04+00:00,[],
15786,https://github.com/perlindgren/hippomenes.git,2024-02-20 07:50:35+00:00,In love with Atalanta,3,perlindgren/hippomenes,760322894,SystemVerilog,hippomenes,1037,4,2024-04-05 14:26:16+00:00,[],
15787,https://github.com/rolandking/openFPGA-jailbreak.git,2024-02-24 13:20:18+00:00,Analogue Pocket port of jailbreak,1,rolandking/openFPGA-jailbreak,762707315,SystemVerilog,openFPGA-jailbreak,219,4,2024-02-27 17:36:22+00:00,[],
15788,https://github.com/bsc-loca/sauria.git,2024-02-09 08:03:47+00:00,SAURIA (Systolic-Array tensor Unit for aRtificial Intelligence Acceleration) is an open-source Convolutional Neural Network accelerator based on a GeMM systolic array engine.,2,bsc-loca/sauria,754999164,SystemVerilog,sauria,249,4,2024-04-01 06:58:13+00:00,[],
15789,https://github.com/RiscV-FPGA/Quinta.git,2024-02-29 09:42:25+00:00,RiscV for FPGA,0,RiscV-FPGA/Quinta,765105068,SystemVerilog,Quinta,1983,3,2024-03-27 14:02:31+00:00,[],https://api.github.com/licenses/gpl-3.0
15790,https://github.com/ismartsid/VeriRISC-Single_cycle_RISC-V_Processor.git,2024-01-29 16:50:46+00:00,This is a single cycle RISCV processor RTL implementation,0,ismartsid/VeriRISC-Single_cycle_RISC-V_Processor,749918955,SystemVerilog,VeriRISC-Single_cycle_RISC-V_Processor,156,3,2024-02-27 16:46:06+00:00,[],https://api.github.com/licenses/cern-ohl-w-2.0
15791,https://github.com/vlsi-lab/len5.git,2024-03-03 14:48:23+00:00,"LEN5 is a coonfigurable, speculative, out-of-order, 64-bit RISC-V microprocessor targetting etherogeneus systems on chip.",1,vlsi-lab/len5,766539168,SystemVerilog,len5,4231,2,2024-03-12 11:06:39+00:00,"['risc-v', 'cpu']",
15792,https://github.com/JiteshNayak2004/UART.git,2024-02-06 04:37:14+00:00,uart protocol implementation in systemverilog,0,JiteshNayak2004/UART,753419033,SystemVerilog,UART,11,2,2024-03-22 16:57:21+00:00,[],
15793,https://github.com/RISC-V-on-FPGA/riscv.git,2024-02-29 09:30:47+00:00,32-bit 5-Stage RISC-V Processor for FPGA,0,RISC-V-on-FPGA/riscv,765099954,SystemVerilog,riscv,3787,2,2024-03-29 14:06:32+00:00,[],https://api.github.com/licenses/gpl-3.0
15794,https://github.com/The8BitEnthusiast/apple-1-breadboard.git,2024-02-03 15:45:31+00:00,An implementation of the Apple 1 computer on breadboard with the help of FPGA,0,The8BitEnthusiast/apple-1-breadboard,752305874,SystemVerilog,apple-1-breadboard,19266,2,2024-03-13 16:54:37+00:00,[],
15795,https://github.com/joaocarvalho00/Basilisk.git,2024-02-08 21:38:24+00:00,,0,joaocarvalho00/Basilisk,754842680,SystemVerilog,Basilisk,22,2,2024-03-07 18:28:51+00:00,[],
15796,https://github.com/pesadaum/cademics-verification.git,2024-03-04 20:51:01+00:00,Repository with SystemVerilog modules developed in the CADEMICS SV for design and verification course by SBMicro and Cadence Design Systems,0,pesadaum/cademics-verification,767177373,SystemVerilog,cademics-verification,47,2,2024-03-30 17:00:09+00:00,"['systemverilog', 'verification', 'digital-ic-design']",
15797,https://github.com/ranzbak/fpga-toccata.git,2024-01-27 21:35:56+00:00,Minimig compatible Toccata 16-bit sound card,2,ranzbak/fpga-toccata,749201965,SystemVerilog,fpga-toccata,21,2,2024-02-16 01:33:42+00:00,[],
15798,https://github.com/NMeghaShree/Design-and-Verification-of-FIFO.git,2024-01-30 16:55:32+00:00,,0,NMeghaShree/Design-and-Verification-of-FIFO,750445204,SystemVerilog,Design-and-Verification-of-FIFO,18,1,2024-01-30 16:57:22+00:00,[],
15799,https://github.com/setreset-chips/accelerant.git,2024-02-24 14:25:01+00:00,Accelerator that can be reconfigured on the level of subgraphs,0,setreset-chips/accelerant,762727275,SystemVerilog,accelerant,389,1,2024-03-14 16:52:06+00:00,[],
15800,https://github.com/asimkhan8107/SPI.git,2024-02-27 09:29:44+00:00,RTL Design of Serial Peripheral Interface (SPI),0,asimkhan8107/SPI,763990063,SystemVerilog,SPI,1,1,2024-03-24 15:53:27+00:00,[],
15801,https://github.com/552-Artificially-Intelligent/Project.git,2024-02-28 19:18:23+00:00,ECE 552 Project Work,0,552-Artificially-Intelligent/Project,764821937,SystemVerilog,Project,6617,1,2024-04-05 20:02:15+00:00,[],
15802,https://github.com/kholoud0/ASIC-Implementauion-of-CV32E40S-RISC-V-core-.git,2024-03-01 17:45:47+00:00,"This repository contains my BSc graduation project at the Faculty of Engineering, Ain Shams University. The project focuses on implementing the RISC-V core, specifically the CV32E40 ,with a focus on achieving high performance and maximizing frequency through synthesis, place and route (PNR).",0,kholoud0/ASIC-Implementauion-of-CV32E40S-RISC-V-core-,765829891,SystemVerilog,ASIC-Implementauion-of-CV32E40S-RISC-V-core-,88613,1,2024-03-30 00:08:34+00:00,"['asic', 'implementation', 'pnr', 'synopsys', 'synopsys-dc', 'synopsys-iccii', 'synthesis']",
15803,https://github.com/qarlosalberto/quartusCodespaces.git,2024-02-02 18:11:55+00:00,,0,qarlosalberto/quartusCodespaces,751968027,SystemVerilog,quartusCodespaces,13123,1,2024-02-03 23:30:00+00:00,[],
15804,https://github.com/GaalElbaz/Verification-Environment-for-4-Bit-Adder.git,2024-02-13 17:26:46+00:00,Designed to verify the fundamental functionality of a adder with 2 inputs of 4 bit.,0,GaalElbaz/Verification-Environment-for-4-Bit-Adder,756985529,SystemVerilog,Verification-Environment-for-4-Bit-Adder,72,1,2024-02-15 15:11:14+00:00,[],
15805,https://github.com/veryl-lang/std.git,2024-03-04 10:02:21+00:00,Standard Library of Veryl Hardware Description Language,1,veryl-lang/std,766883423,SystemVerilog,std,1250,1,2024-03-10 13:45:16+00:00,[],https://api.github.com/licenses/apache-2.0
15806,https://github.com/Nachiket497/uvm_tb_gen_python.git,2024-02-12 19:57:52+00:00,,0,Nachiket497/uvm_tb_gen_python,756513482,SystemVerilog,uvm_tb_gen_python,8,1,2024-04-05 11:27:03+00:00,[],
15807,https://github.com/mattiadane/Rock-Paper-Scissors-Circuit.git,2024-02-19 17:09:09+00:00,University project about the game rock-paper-scissors,0,mattiadane/Rock-Paper-Scissors-Circuit,760040399,SystemVerilog,Rock-Paper-Scissors-Circuit,16,1,2024-02-19 17:46:30+00:00,"['sis', 'systemverilog', 'verilog', 'blif', 'datapath', 'datapath-design', 'fsm-designer', 'circuit']",
15808,https://github.com/Boo-G/Traffic-Light.git,2024-03-02 15:31:20+00:00,"Full Logic of a four way traffic light, using Quartus.",0,Boo-G/Traffic-Light,766190859,SystemVerilog,Traffic-Light,4,1,2024-03-02 15:34:27+00:00,[],
15809,https://github.com/GeorgeLin200100/ddr_bram_interface.git,2024-02-08 15:57:51+00:00,,0,GeorgeLin200100/ddr_bram_interface,754703250,SystemVerilog,ddr_bram_interface,175,1,2024-03-16 07:29:18+00:00,[],
15810,https://github.com/106210049/Front-End-VLSI-design-Verilog.git,2024-02-04 14:00:34+00:00,Digital Design with Verilog/System Verilog,0,106210049/Front-End-VLSI-design-Verilog,752677109,SystemVerilog,Front-End-VLSI-design-Verilog,4583,1,2024-03-12 15:37:03+00:00,[],
15811,https://github.com/Aishwaryaodela/UVM.git,2024-02-04 12:24:29+00:00,,0,Aishwaryaodela/UVM,752647861,SystemVerilog,UVM,5299,1,2024-02-04 14:17:32+00:00,[],
15812,https://github.com/GaalElbaz/UART-Receiver.git,2024-02-05 14:55:12+00:00,A UART Receiver that receives a byte from the computer and displays it on the 7-Segment Displays of a Go - Board.,0,GaalElbaz/UART-Receiver,753143105,SystemVerilog,UART-Receiver,156,1,2024-02-07 12:34:08+00:00,[],
15813,https://github.com/GaalElbaz/UART---Transmitter.git,2024-02-06 15:08:26+00:00,A UART Transmitter so that the computer can receive data from the Go Board.,0,GaalElbaz/UART---Transmitter,753664114,SystemVerilog,UART---Transmitter,124,1,2024-02-07 12:34:05+00:00,[],
15814,https://github.com/tonytLin/gameOfLife-fpga.git,2024-02-02 05:15:00+00:00,,0,tonytLin/gameOfLife-fpga,751684681,SystemVerilog,gameOfLife-fpga,22,1,2024-02-02 06:36:33+00:00,[],https://api.github.com/licenses/mit
15815,https://github.com/zzssspppp/Formal-Verification.git,2024-02-21 22:50:26+00:00,,0,zzssspppp/Formal-Verification,761478731,SystemVerilog,Formal-Verification,784,1,2024-02-22 23:04:05+00:00,[],
15816,https://github.com/Nipun-9420/uvm_enviroments.git,2024-02-27 17:00:06+00:00,testing of enviroment congiguration,0,Nipun-9420/uvm_enviroments,764203683,SystemVerilog,uvm_enviroments,13,1,2024-03-25 09:07:46+00:00,[],
15817,https://github.com/hankhsu1996/vscode-better-systemverilog-syntax.git,2024-01-28 06:30:47+00:00,Better SystemVerilog Syntax for VS Code,0,hankhsu1996/vscode-better-systemverilog-syntax,749296879,SystemVerilog,vscode-better-systemverilog-syntax,351,1,2024-03-27 08:11:40+00:00,[],https://api.github.com/licenses/mit
15818,https://github.com/GaalElbaz/Debouncing-Pushbutton.git,2024-01-31 09:46:40+00:00,The debouncing circuit only generates a single pulse with a period of the slow clock without bouncing as we expected. ,0,GaalElbaz/Debouncing-Pushbutton,750775103,SystemVerilog,Debouncing-Pushbutton,47,1,2024-02-07 12:36:11+00:00,[],
15819,https://github.com/Rubayet13/APB_UVM.git,2024-02-03 15:36:57+00:00,,0,Rubayet13/APB_UVM,752300030,SystemVerilog,APB_UVM,4316,1,2024-02-21 07:31:15+00:00,[],
15820,https://github.com/shaniDayan/sim1.git,2024-02-29 16:25:16+00:00,sim1,0,shaniDayan/sim1,765287282,SystemVerilog,sim1,39,1,2024-02-29 17:06:50+00:00,[],
15821,https://github.com/a2fpga/a2fpga_core.git,2024-02-25 18:51:09+00:00,Apple II FPGA Co-Processor,1,a2fpga/a2fpga_core,763177082,SystemVerilog,a2fpga_core,6567,1,2024-03-11 16:54:09+00:00,[],
15822,https://github.com/pjclet/FIR-Filter-Design.git,2024-02-22 00:39:23+00:00,,0,pjclet/FIR-Filter-Design,761507653,SystemVerilog,FIR-Filter-Design,1380,1,2024-03-16 18:28:10+00:00,[],
15823,https://github.com/Ghonimo/Formal-Verification-of-an-AHB2APB-Bridge.git,2024-03-03 00:55:15+00:00,"Assertion-Based Formal Verification of an AHB2APB bridge, featuring SystemVerilog assertions, RTL designs, and detailed documentation including a final report and project progression presentation.",0,Ghonimo/Formal-Verification-of-an-AHB2APB-Bridge,766333387,SystemVerilog,Formal-Verification-of-an-AHB2APB-Bridge,14884,1,2024-03-24 00:22:12+00:00,"['abp', 'ahb', 'amba', 'computer-ar', 'formal-verification', 'harward', 'uvm', 'verification', 'ahb2', 'assertion-based-verification']",https://api.github.com/licenses/gpl-3.0
15824,https://github.com/Fudanyrd/COMP130191.git,2024-03-02 10:22:27+00:00,,0,Fudanyrd/COMP130191,766094692,SystemVerilog,COMP130191,360,1,2024-03-12 09:57:17+00:00,[],
15825,https://github.com/Artityagi123456789/System_Verilog-Constraint_Solution.git,2024-02-01 23:30:37+00:00,,0,Artityagi123456789/System_Verilog-Constraint_Solution,751600130,SystemVerilog,System_Verilog-Constraint_Solution,12,1,2024-02-04 00:07:05+00:00,"['constraints', 'system', 'systemverilog', 'systemverilog-test-bench']",
15826,https://github.com/GaalElbaz/Home-Alarm-System.git,2024-01-31 15:13:10+00:00,Four sensor home alarm system Implementation on Basys 3 FPGA Board,0,GaalElbaz/Home-Alarm-System,750912481,SystemVerilog,Home-Alarm-System,3,1,2024-02-07 12:36:09+00:00,[],
15827,https://github.com/arjunabinash/D_FILPFLOP.git,2024-02-16 08:12:07+00:00,,0,arjunabinash/D_FILPFLOP,758391787,SystemVerilog,D_FILPFLOP,395,1,2024-02-16 08:22:30+00:00,[],
15828,https://github.com/AnthonyAS15/Intro-a-HDLs-y-herramientas-EDA.git,2024-02-10 02:52:35+00:00,Primer laboratorio del Taller de Diseño Digital.,0,AnthonyAS15/Intro-a-HDLs-y-herramientas-EDA,755380722,SystemVerilog,Intro-a-HDLs-y-herramientas-EDA,1331,1,2024-02-18 04:21:53+00:00,[],https://api.github.com/licenses/mit
15829,https://github.com/PriscillaCamposZamora/L-gica-Secuencial.git,2024-02-29 16:36:42+00:00,Segundo laboratorio del Taller de Diseño Digital.,0,PriscillaCamposZamora/L-gica-Secuencial,765292994,SystemVerilog,L-gica-Secuencial,1623,1,2024-03-18 02:57:31+00:00,[],https://api.github.com/licenses/mit
15830,https://github.com/MahmouodMagdi/Design-and-Verification-of-a-PCIe-Packet-Detector.git,2024-02-03 12:06:30+00:00,Digital Design of a PICe packet detector FSM that detects whether the packet is a good or pad. ,0,MahmouodMagdi/Design-and-Verification-of-a-PCIe-Packet-Detector,752225957,SystemVerilog,Design-and-Verification-of-a-PCIe-Packet-Detector,27,1,2024-03-02 21:07:16+00:00,[],
15831,https://github.com/GeorgeLin200100/DDR4-Naive-WR-RD.git,2024-01-26 08:41:48+00:00,,0,GeorgeLin200100/DDR4-Naive-WR-RD,748555982,SystemVerilog,DDR4-Naive-WR-RD,159,1,2024-03-16 07:29:19+00:00,[],
15832,https://github.com/PureWhitee/HW_base.git,2024-02-21 04:32:00+00:00,,0,PureWhitee/HW_base,761015007,SystemVerilog,HW_base,3943,1,2024-03-29 23:26:51+00:00,[],https://api.github.com/licenses/mit
15833,https://github.com/vvzqcx/-.git,2024-01-29 13:04:56+00:00,Controller,0,vvzqcx/-,749815471,SystemVerilog,-,128,1,2024-03-28 00:47:23+00:00,[],
15834,https://github.com/dtzSiFive/firrtl-verif-example.git,2024-02-06 16:58:06+00:00,FIRRTL assert/assume/cover example gathering,0,dtzSiFive/firrtl-verif-example,753716224,SystemVerilog,firrtl-verif-example,28,1,2024-02-06 20:10:29+00:00,[],
15835,https://github.com/alikhawja/lab-2.git,2024-02-04 17:43:45+00:00,my assignment#2,0,alikhawja/lab-2,752749037,SystemVerilog,lab-2,371,1,2024-02-16 18:26:09+00:00,[],
15836,https://github.com/justinscottlee/Pearl-Geyser-RV32E.git,2024-02-12 03:32:30+00:00,,0,justinscottlee/Pearl-Geyser-RV32E,756144042,SystemVerilog,Pearl-Geyser-RV32E,92,1,2024-02-16 04:28:59+00:00,[],https://api.github.com/licenses/gpl-3.0
15837,https://github.com/foez-ahmed-dsi/CRG_20240212.git,2024-02-11 15:53:29+00:00,Clock Reset Generator Project,0,foez-ahmed-dsi/CRG_20240212,755965674,SystemVerilog,CRG_20240212,1076,1,2024-04-02 15:04:15+00:00,[],https://api.github.com/licenses/apache-2.0
15838,https://github.com/GaalElbaz/Digital-clockFPGA.git,2024-02-03 18:08:26+00:00,"The 4 seven-segment displays on the FPGA board display time in HH:MM format, whereas the 8 Leds display seconds.",0,GaalElbaz/Digital-clockFPGA,752365490,SystemVerilog,Digital-clockFPGA,5,1,2024-02-04 07:30:51+00:00,[],
15839,https://github.com/salzhang/cis5710-hw-notes.git,2024-02-20 20:48:01+00:00,,0,salzhang/cis5710-hw-notes,760878078,SystemVerilog,cis5710-hw-notes,56,1,2024-02-23 18:47:14+00:00,[],
15840,https://github.com/phsauter/yug-presentation.git,2024-02-01 15:14:36+00:00,Yosys User Group #5 - Examples & Presentation,0,phsauter/yug-presentation,751416430,SystemVerilog,yug-presentation,4913,1,2024-02-01 17:31:02+00:00,[],
15841,https://github.com/Dinesh-9999/AHB-to-APB-Bridge.git,2024-02-13 18:42:31+00:00,,0,Dinesh-9999/AHB-to-APB-Bridge,757025446,SystemVerilog,AHB-to-APB-Bridge,33,1,2024-03-13 04:29:41+00:00,[],
15842,https://github.com/MateoCuenca09/UART.git,2024-02-26 15:04:31+00:00,Un sistema UART hecho en System Verilog,0,MateoCuenca09/UART,763581021,SystemVerilog,UART,4337,1,2024-02-26 17:33:41+00:00,[],
15844,https://github.com/NMeghaShree/Design-and-Verification-of-SPI-Protocol.git,2024-02-03 16:35:19+00:00,,0,NMeghaShree/Design-and-Verification-of-SPI-Protocol,752326832,SystemVerilog,Design-and-Verification-of-SPI-Protocol,13,1,2024-02-03 17:29:00+00:00,[],
15845,https://github.com/GaalElbaz/Whack-a-Mole-Game.git,2024-02-05 09:42:22+00:00,A whack-a-mole game implemented on to an FPGA Board.,0,GaalElbaz/Whack-a-Mole-Game,753009586,SystemVerilog,Whack-a-Mole-Game,35,1,2024-02-07 12:34:10+00:00,[],
15846,https://github.com/GaalElbaz/3-bit-Gray-Code-Counter.git,2024-01-31 17:16:21+00:00,"Creating a 3-bit Gray Code Counter and Implementing it on Basys 3 Board, LEDs will display the counts.",0,GaalElbaz/3-bit-Gray-Code-Counter,750967766,SystemVerilog,3-bit-Gray-Code-Counter,3,1,2024-02-07 12:36:10+00:00,[],
15847,https://github.com/bamirbay/cis5710.git,2024-01-27 18:01:09+00:00,,0,bamirbay/cis5710,749145883,SystemVerilog,cis5710,4337,1,2024-04-08 02:24:38+00:00,[],https://api.github.com/licenses/mit
15848,https://github.com/GaalElbaz/SPI-Protocol.git,2024-02-08 09:57:54+00:00,"This project aims to develop SPI protocol support for all four modes, along with an accompanying simulation file.",0,GaalElbaz/SPI-Protocol,754554147,SystemVerilog,SPI-Protocol,71,1,2024-02-12 16:36:16+00:00,[],
15849,https://github.com/mpatil/sv-json-schema.git,2024-01-28 16:48:19+00:00,This is a SystemVerilog configuration class (with json transducers) generation utility from  JSON schema.,0,mpatil/sv-json-schema,749460721,SystemVerilog,sv-json-schema,16,1,2024-01-29 15:22:15+00:00,[],https://api.github.com/licenses/mit
15850,https://github.com/GeorgeLin200100/FM_ADD.git,2024-02-12 16:28:59+00:00,,0,GeorgeLin200100/FM_ADD,756423568,SystemVerilog,FM_ADD,193,1,2024-03-16 07:29:00+00:00,[],
15851,https://github.com/asimkhan8107/simple-tlm.git,2024-02-01 17:12:55+00:00,This is simple example of Transaction Level Modelling Producer Consumer based communication.,0,asimkhan8107/simple-tlm,751469851,SystemVerilog,simple-tlm,0,1,2024-03-24 15:53:28+00:00,[],
15852,https://github.com/hy0000/proj1.git,2024-02-19 16:18:01+00:00,fsm,0,hy0000/proj1,759941946,SystemVerilog,proj1,16,1,2024-02-21 18:55:49+00:00,[],
15853,https://github.com/106210049/16-bit-Computer.git,2024-02-04 14:53:57+00:00,Design 16 bit computer with System Verilog,0,106210049/16-bit-Computer,752694149,SystemVerilog,16-bit-Computer,496,1,2024-02-07 09:32:21+00:00,[],
15854,https://github.com/GaalElbaz/Verification-environment-for-FIFO.git,2024-02-15 13:22:05+00:00,Designed to verify the fundamental functionality of a FIFO (First-In-First-Out) memory.,0,GaalElbaz/Verification-environment-for-FIFO,758021733,SystemVerilog,Verification-environment-for-FIFO,101,1,2024-02-15 15:11:13+00:00,[],
15855,https://github.com/GaalElbaz/Binary-BCD-Conversion-Basys-3-FPGA-Board.git,2024-01-31 13:35:21+00:00,This GitHub project showcases an implementation of Binary to Binary-Coded Decimal (BCD) conversion on the Basys 3 FPGA board. ,0,GaalElbaz/Binary-BCD-Conversion-Basys-3-FPGA-Board,750866964,SystemVerilog,Binary-BCD-Conversion-Basys-3-FPGA-Board,101,1,2024-02-04 09:56:27+00:00,[],
15856,https://github.com/GaalElbaz/Random-Number-Generator.git,2024-02-04 07:31:31+00:00,Generating an 8-bit random number using LFSR utilizing tapping technique to avoid repetition. The design is implemented onto an Basys 3 FPGA board,0,GaalElbaz/Random-Number-Generator,752557745,SystemVerilog,Random-Number-Generator,22,1,2024-02-04 09:54:57+00:00,[],
15857,https://github.com/Mlcarvalho1/Projeto_IH_RISC_V_PIPELINE.git,2024-01-30 13:11:26+00:00,,0,Mlcarvalho1/Projeto_IH_RISC_V_PIPELINE,750340134,SystemVerilog,Projeto_IH_RISC_V_PIPELINE,24437,1,2024-02-16 16:33:33+00:00,[],https://api.github.com/licenses/mit
15858,https://github.com/Daniyal-Tahsildar/System_Verilog_Basics.git,2024-02-15 23:06:34+00:00,This repository hosts examples and documentation for System Verilog used for Testbench Development ,0,Daniyal-Tahsildar/System_Verilog_Basics,758249125,SystemVerilog,System_Verilog_Basics,1164,1,2024-04-05 12:27:19+00:00,"['systemverilog', 'verification-methodologies', 'verilog']",https://api.github.com/licenses/gpl-3.0
15859,https://github.com/efabless/tt-fpga-hdl-demo.git,2024-01-26 01:38:11+00:00,,2,efabless/tt-fpga-hdl-demo,748448547,SystemVerilog,tt-fpga-hdl-demo,72,1,2024-02-04 20:58:46+00:00,[],https://api.github.com/licenses/apache-2.0
15860,https://github.com/GaalElbaz/Verification-environment-for-D-FF.git,2024-02-11 11:15:15+00:00,Verifies the fundamental functionality of the D flip-flop.,0,GaalElbaz/Verification-environment-for-D-FF,755879645,SystemVerilog,Verification-environment-for-D-FF,79,1,2024-02-13 18:35:12+00:00,[],
15861,https://github.com/njkrichardson/SurvivorCore.git,2024-02-24 17:06:05+00:00,Simple Arm and RISC-V processor implementations for use in the Apocalypse stack. ,0,njkrichardson/SurvivorCore,762778987,SystemVerilog,SurvivorCore,42,1,2024-02-24 17:55:47+00:00,[],https://api.github.com/licenses/gpl-3.0
15862,https://github.com/FreitasFPGASolutions/aurora.git,2024-03-05 04:26:29+00:00,,0,FreitasFPGASolutions/aurora,767317765,SystemVerilog,aurora,16,1,2024-03-06 20:06:00+00:00,[],
15863,https://github.com/Mekky7/SPI_UVM.git,2024-02-28 02:57:38+00:00,UVM ENVIROMENT FOR SPI COMMUNICATION PROTOCOL,0,Mekky7/SPI_UVM,764413474,SystemVerilog,SPI_UVM,1982,1,2024-03-13 01:32:30+00:00,[],
15864,https://github.com/ItsRichard7/TallerDigitales.git,2024-02-12 19:40:51+00:00,"El presente repositorio consta de un portafolio para el curso de Taller de Diseño Digital. Se almacenará los laboratorios, proyectos y tareas que se desarrollen durante el transcurso del primer semestre del año 2024. Para ello se empleara el Hardware Description Lenguage System Verilog y de hardware base una placa FPGA DE1-S0C. ",0,ItsRichard7/TallerDigitales,756507073,SystemVerilog,TallerDigitales,39,1,2024-03-09 00:43:58+00:00,[],
15865,https://github.com/Neaeko/FM_radio.git,2024-02-26 01:35:18+00:00,,0,Neaeko/FM_radio,763279522,SystemVerilog,FM_radio,36025,1,2024-04-09 14:22:56+00:00,[],
15866,https://github.com/johnabaldwin/Pong.git,2024-02-06 22:34:06+00:00,,0,johnabaldwin/Pong,753846070,SystemVerilog,Pong,428,1,2024-02-07 20:19:23+00:00,[],
15867,https://github.com/mohamedtareq24/ASIC_implementation_of_PULPino_SoC.git,2024-02-23 15:24:28+00:00,My Graduation Project for BSc of Engineering Ain Shams Uni which is ASIC implementation of PULPino SoC based on the cv32e40p (RISCY) core sponserd by ICpedia using Synopsys tools,0,mohamedtareq24/ASIC_implementation_of_PULPino_SoC,762342202,SystemVerilog,ASIC_implementation_of_PULPino_SoC,22631,1,2024-02-24 17:00:32+00:00,"['asic', 'pnr', 'risc-v', 'synopsys-dc', 'synopsys-iccii']",
15869,https://github.com/jonahromero/BranchPredictor.git,2024-01-30 04:13:51+00:00,,0,jonahromero/BranchPredictor,750145017,SystemVerilog,BranchPredictor,106,0,2024-01-30 04:18:39+00:00,[],
15870,https://github.com/AxelMTJ/UVM_of_ALU.git,2024-02-05 20:53:55+00:00,,0,AxelMTJ/UVM_of_ALU,753294632,SystemVerilog,UVM_of_ALU,10,0,2024-02-06 03:45:20+00:00,[],
15871,https://github.com/lucyhu798/ProcessOptimizer-.git,2024-02-06 05:26:41+00:00,,0,lucyhu798/ProcessOptimizer-,753432526,SystemVerilog,ProcessOptimizer-,931,0,2024-02-06 05:44:09+00:00,[],
15872,https://github.com/GopichandTripuraneni/Team16_ECE593W24.git,2024-02-04 01:26:33+00:00,,0,GopichandTripuraneni/Team16_ECE593W24,752487319,SystemVerilog,Team16_ECE593W24,3,0,2024-02-06 06:32:18+00:00,[],
15873,https://github.com/davidz1234567890/lab2v.git,2024-02-07 00:00:39+00:00,,0,davidz1234567890/lab2v,753869484,SystemVerilog,lab2v,2,0,2024-02-07 00:00:54+00:00,[],
15874,https://github.com/dylan-dang/verilog-barrelshifter.git,2024-02-07 00:28:49+00:00,,0,dylan-dang/verilog-barrelshifter,753877140,SystemVerilog,verilog-barrelshifter,3,0,2024-02-07 00:28:53+00:00,[],
15875,https://github.com/whujtz67/pulp_axi_master.git,2024-02-10 14:51:12+00:00,,0,whujtz67/pulp_axi_master,755547869,SystemVerilog,pulp_axi_master,358,0,2024-02-11 05:05:30+00:00,[],
15876,https://github.com/ZenoRobotics/AXIS_SystemVerilog.git,2024-02-09 16:51:09+00:00,,0,ZenoRobotics/AXIS_SystemVerilog,755210341,SystemVerilog,AXIS_SystemVerilog,590,0,2024-02-09 16:55:07+00:00,[],
15877,https://github.com/charliechin424/NTUEE-Digital-Circuit-Lab.git,2024-01-29 05:12:18+00:00,,0,charliechin424/NTUEE-Digital-Circuit-Lab,749642926,SystemVerilog,NTUEE-Digital-Circuit-Lab,29936,0,2024-02-12 15:13:38+00:00,[],
15878,https://github.com/NAQI-UL-HASSAN/Lab_2.git,2024-02-06 06:27:53+00:00,,0,NAQI-UL-HASSAN/Lab_2,753451144,SystemVerilog,Lab_2,58,0,2024-02-06 17:21:15+00:00,[],
15879,https://github.com/hamzabinabid/lab_2.git,2024-02-16 14:17:46+00:00,,0,hamzabinabid/lab_2,758529402,SystemVerilog,lab_2,489,0,2024-02-16 14:31:18+00:00,[],
15880,https://github.com/uqasha524m/dsd.git,2024-02-15 18:08:50+00:00,,0,uqasha524m/dsd,758150072,SystemVerilog,dsd,317,0,2024-02-15 18:54:23+00:00,[],
15881,https://github.com/Srujana9550/axi_2_i2c_conversion.git,2024-02-15 17:41:35+00:00,,0,Srujana9550/axi_2_i2c_conversion,758138560,SystemVerilog,axi_2_i2c_conversion,8,0,2024-02-17 12:24:40+00:00,[],
15882,https://github.com/ArthurMdrs/Simplified_Risc-V_Processor.git,2024-02-18 00:09:53+00:00,,0,ArthurMdrs/Simplified_Risc-V_Processor,759209096,SystemVerilog,Simplified_Risc-V_Processor,1793,0,2024-02-18 00:10:03+00:00,[],
15883,https://github.com/Aqib-Wazir101/mylab3.git,2024-02-19 15:17:53+00:00,,0,Aqib-Wazir101/mylab3,759912261,SystemVerilog,mylab3,174,0,2024-02-19 15:37:02+00:00,[],
15884,https://github.com/Mayank27Vaghela/AHB_UVC-B2B.git,2024-02-12 14:18:23+00:00,,0,Mayank27Vaghela/AHB_UVC-B2B,756362257,SystemVerilog,AHB_UVC-B2B,353,0,2024-02-12 14:21:28+00:00,[],
15885,https://github.com/salunkead/Basics-of-Assertions.git,2024-02-07 04:22:05+00:00,,0,salunkead/Basics-of-Assertions,753937757,SystemVerilog,Basics-of-Assertions,171,0,2024-02-07 05:56:53+00:00,[],
15886,https://github.com/David-Zaragoza/mod100_counter.git,2024-02-20 21:42:44+00:00,,0,David-Zaragoza/mod100_counter,760901365,SystemVerilog,mod100_counter,1,0,2024-02-20 21:48:16+00:00,[],
15887,https://github.com/ParaeagleRyanC/PipelinedForwardingRiscVProcessor.git,2024-02-24 04:41:47+00:00,,0,ParaeagleRyanC/PipelinedForwardingRiscVProcessor,762570655,SystemVerilog,PipelinedForwardingRiscVProcessor,60,0,2024-02-24 04:49:57+00:00,[],
15888,https://github.com/Rubayet13/memory.git,2024-02-26 07:15:15+00:00,Simple memory project implementation using SystemVerilog,0,Rubayet13/memory,763376496,SystemVerilog,memory,59,0,2024-02-26 07:16:54+00:00,[],
15889,https://github.com/nithinshyam13/Simple-LTE-Hardware-IDS.git,2024-02-25 21:47:56+00:00,An intrusion detection system for 4G/LTE networks written in verilog.,0,nithinshyam13/Simple-LTE-Hardware-IDS,763227671,SystemVerilog,Simple-LTE-Hardware-IDS,7,0,2024-02-25 21:50:41+00:00,[],
15890,https://github.com/Daniil-Melnik/Studyinh_Verilog.git,2024-02-20 07:11:30+00:00,Spring practice 2024,0,Daniil-Melnik/Studyinh_Verilog,760308651,SystemVerilog,Studyinh_Verilog,31,0,2024-02-20 07:12:38+00:00,[],
15891,https://github.com/tayyabshaikh/Pipeline-Processor.git,2024-02-28 18:48:45+00:00,Pipeline Processor Code of All Modules,0,tayyabshaikh/Pipeline-Processor,764809758,SystemVerilog,Pipeline-Processor,9,0,2024-02-28 18:50:55+00:00,[],
15892,https://github.com/NAQI-UL-HASSAN/lab_5.git,2024-03-04 16:26:52+00:00,,0,NAQI-UL-HASSAN/lab_5,767061021,SystemVerilog,lab_5,1220,0,2024-03-04 16:28:47+00:00,[],
15893,https://github.com/TayybaShafiq/Lab2.git,2024-03-05 05:14:58+00:00,,0,TayybaShafiq/Lab2,767331818,SystemVerilog,Lab2,36,0,2024-03-05 05:15:39+00:00,[],
15894,https://github.com/Arunvaishnav7435/Enum-Counting.git,2024-03-04 17:03:34+00:00,,0,Arunvaishnav7435/Enum-Counting,767079012,SystemVerilog,Enum-Counting,2,0,2024-03-04 17:06:34+00:00,[],
15895,https://github.com/rabbitrace/UART_IIC.git,2024-03-05 09:57:56+00:00,,0,rabbitrace/UART_IIC,767443968,SystemVerilog,UART_IIC,7,0,2024-03-05 10:00:29+00:00,[],
15896,https://github.com/rajat-rks/APB2-to-SPI-Project.git,2024-02-16 07:18:39+00:00,,0,rajat-rks/APB2-to-SPI-Project,758374869,SystemVerilog,APB2-to-SPI-Project,9,0,2024-02-17 14:58:48+00:00,[],
15897,https://github.com/ManishPillai7/QDR-SRAM.git,2024-02-15 09:00:02+00:00,,0,ManishPillai7/QDR-SRAM,757918602,SystemVerilog,QDR-SRAM,8,0,2024-02-15 09:10:58+00:00,[],
15898,https://github.com/guava1124/Lab2.git,2024-02-26 21:38:07+00:00,,0,guava1124/Lab2,763758282,SystemVerilog,Lab2,77,0,2024-03-04 15:45:18+00:00,[],
15899,https://github.com/razas32/dq_project.git,2024-02-26 19:29:09+00:00,Hardware-based Image Decompressor,0,razas32/dq_project,763709495,SystemVerilog,dq_project,2073,0,2024-02-27 20:08:51+00:00,[],
15900,https://github.com/Susheelaaa/Systemverilog_oops.git,2024-03-05 12:09:01+00:00,,0,Susheelaaa/Systemverilog_oops,767501639,SystemVerilog,Systemverilog_oops,12,0,2024-03-05 15:34:53+00:00,[],
15901,https://github.com/kiaraaguilera/ECE-366-Project-B.git,2024-03-02 00:09:55+00:00,,0,kiaraaguilera/ECE-366-Project-B,765950764,SystemVerilog,ECE-366-Project-B,21,0,2024-03-02 00:15:11+00:00,[],
15902,https://github.com/brucexi999/RTL_interview.git,2024-02-03 05:43:54+00:00,,0,brucexi999/RTL_interview,752132441,SystemVerilog,RTL_interview,2600,0,2024-03-28 21:56:05+00:00,[],
15903,https://github.com/Chirag-RTLWORLD/100-days-of-RTL.git,2024-02-23 06:51:53+00:00,,0,Chirag-RTLWORLD/100-days-of-RTL,762138203,SystemVerilog,100-days-of-RTL,279,0,2024-03-26 17:26:20+00:00,[],
15904,https://github.com/joe82512/Verilog-HDL.git,2024-02-03 17:42:56+00:00,Verilog Practice,0,joe82512/Verilog-HDL,752357884,SystemVerilog,Verilog-HDL,37,0,2024-02-03 17:52:53+00:00,[],
15905,https://github.com/marcoandrade3/polyphase_test.git,2024-02-13 02:09:59+00:00,Polyphase Test Bench,0,marcoandrade3/polyphase_test,756638195,SystemVerilog,polyphase_test,2315,0,2024-02-25 18:18:47+00:00,[],
15906,https://github.com/GrigorescuStefan/TSC.git,2024-02-19 06:17:01+00:00,Laboratory work for TSC,0,GrigorescuStefan/TSC,759684884,SystemVerilog,TSC,14,0,2024-03-04 07:59:53+00:00,[],
15907,https://github.com/Shiofi/Lab.-2-Logica-Secuencial.git,2024-03-01 03:49:17+00:00,Profundizar en los conceptos asociados al dise˜no digital secuencial,1,Shiofi/Lab.-2-Logica-Secuencial,765508668,SystemVerilog,Lab.-2-Logica-Secuencial,1483,0,2024-03-12 20:01:23+00:00,[],
15908,https://github.com/blmonk/fpga-fft-convolution.git,2024-03-02 22:05:26+00:00,,0,blmonk/fpga-fft-convolution,766302438,SystemVerilog,fpga-fft-convolution,303,0,2024-03-13 05:15:40+00:00,[],
15909,https://github.com/d4ma/ELEX7660-Snake_Game.git,2024-03-05 21:41:45+00:00,Snake game for the ELEX 7660 class,0,d4ma/ELEX7660-Snake_Game,767770071,SystemVerilog,ELEX7660-Snake_Game,108508,0,2024-03-05 21:53:54+00:00,[],
15910,https://github.com/alecsandrova/TSC.git,2024-02-21 06:29:11+00:00,,0,alecsandrova/TSC,761051253,SystemVerilog,TSC,8861,0,2024-02-28 07:34:43+00:00,[],
15913,https://github.com/Vishnutpgit/VLSI-AHB2APB-VERIFICATION.git,2024-01-26 05:59:22+00:00,,0,Vishnutpgit/VLSI-AHB2APB-VERIFICATION,748508291,SystemVerilog,VLSI-AHB2APB-VERIFICATION,33,0,2024-01-26 06:02:34+00:00,[],
15916,https://github.com/iwaniwaniwan012/NATIVE_PHY_A10_SIM.git,2024-01-28 16:25:38+00:00,,0,iwaniwaniwan012/NATIVE_PHY_A10_SIM,749453637,SystemVerilog,NATIVE_PHY_A10_SIM,23183,0,2024-01-28 16:28:45+00:00,[],
15917,https://github.com/FenixVu442/469-16bit-Hierarchical-CLA-ModelSim.git,2024-01-29 00:44:18+00:00,,0,FenixVu442/469-16bit-Hierarchical-CLA-ModelSim,749579885,SystemVerilog,469-16bit-Hierarchical-CLA-ModelSim,5,0,2024-01-29 00:45:44+00:00,[],
15918,https://github.com/sushanTamu/lab-5-sushanTamu.git,2024-02-01 01:20:02+00:00,,0,sushanTamu/lab-5-sushanTamu,751125635,SystemVerilog,lab-5-sushanTamu,5462,0,2024-02-01 01:20:22+00:00,[],
15919,https://github.com/Prasthuthi/AXI_Verification.git,2024-02-01 05:01:28+00:00,,0,Prasthuthi/AXI_Verification,751183037,SystemVerilog,AXI_Verification,109,0,2024-02-01 05:21:50+00:00,[],
15920,https://github.com/lucyhu798/hamming-encoder-decoder.git,2024-02-06 03:36:51+00:00,,0,lucyhu798/hamming-encoder-decoder,753403471,SystemVerilog,hamming-encoder-decoder,12,0,2024-02-06 03:43:28+00:00,[],
15921,https://github.com/Ssingh5535/EEL5934.git,2024-01-28 20:31:12+00:00,EEL5934 - System on Chips ,0,Ssingh5535/EEL5934,749526161,SystemVerilog,EEL5934,70,0,2024-01-29 16:16:19+00:00,[],
15922,https://github.com/kyucchoi/comment.git,2024-02-02 15:50:23+00:00,,0,kyucchoi/comment,751913441,SystemVerilog,comment,9,0,2024-02-02 15:57:20+00:00,[],
15923,https://github.com/ThoutamNagaraju/perforce.git,2024-02-14 04:20:54+00:00,,0,ThoutamNagaraju/perforce,757235556,SystemVerilog,perforce,1,0,2024-02-14 04:55:25+00:00,[],
15924,https://github.com/Prasthuthi/coverage.git,2024-02-14 06:09:41+00:00,,0,Prasthuthi/coverage,757265588,SystemVerilog,coverage,22,0,2024-02-14 06:12:02+00:00,[],
15925,https://github.com/MeghanaRBhat/DRAM.git,2024-02-15 05:08:43+00:00,,0,MeghanaRBhat/DRAM,757842286,SystemVerilog,DRAM,8552,0,2024-02-15 05:09:26+00:00,[],
15926,https://github.com/kush-manchanda/i2c_slave.git,2024-02-16 05:34:52+00:00,slave device for i2c bus,0,kush-manchanda/i2c_slave,758344532,SystemVerilog,i2c_slave,16,0,2024-02-16 06:08:28+00:00,[],https://api.github.com/licenses/gpl-3.0
15927,https://github.com/haseeb-hassan/LAB_2.git,2024-02-16 16:30:22+00:00,my dsd lab 2,0,haseeb-hassan/LAB_2,758586288,SystemVerilog,LAB_2,1061,0,2024-02-16 16:35:15+00:00,[],
15928,https://github.com/aaayann/lab3practice.git,2024-02-19 20:14:28+00:00,,0,aaayann/lab3practice,760115989,SystemVerilog,lab3practice,473,0,2024-02-19 20:27:43+00:00,[],
15929,https://github.com/Ans-Qasim123/mylab3.git,2024-02-19 15:58:02+00:00,,0,Ans-Qasim123/mylab3,759930368,SystemVerilog,mylab3,422,0,2024-02-19 16:14:32+00:00,[],
15930,https://github.com/lampn0/apb_uart.git,2024-02-20 08:27:28+00:00,APB UART,0,lampn0/apb_uart,760337116,SystemVerilog,apb_uart,2599,0,2024-02-20 09:34:34+00:00,[],https://api.github.com/licenses/gpl-3.0
15931,https://github.com/Soretawa/riscv_processor.git,2024-02-21 16:47:33+00:00,Новый репозиторий с TCL скриптом,0,Soretawa/riscv_processor,761321365,SystemVerilog,riscv_processor,41,0,2024-02-21 16:48:36+00:00,[],
15932,https://github.com/BHKGITT/SPI.git,2024-02-05 16:24:16+00:00,UVM TB to verify the SPI protocol,0,BHKGITT/SPI,753184449,SystemVerilog,SPI,36,0,2024-02-17 13:25:06+00:00,[],
15933,https://github.com/chrisg0106/Sistemas-digital.git,2024-02-27 05:13:13+00:00,,0,chrisg0106/Sistemas-digital,763890302,SystemVerilog,Sistemas-digital,2,0,2024-02-27 05:15:05+00:00,[],
15934,https://github.com/phucducnguyen/uvm_message.git,2024-02-27 17:44:22+00:00,,0,phucducnguyen/uvm_message,764224405,SystemVerilog,uvm_message,3,0,2024-02-27 17:44:28+00:00,[],
15935,https://github.com/phucducnguyen/uvm_rand.git,2024-02-27 18:03:39+00:00,,0,phucducnguyen/uvm_rand,764233157,SystemVerilog,uvm_rand,21,0,2024-02-27 18:03:46+00:00,[],
15936,https://github.com/gskip17/chipcraft-tt-demo.git,2024-02-26 20:58:05+00:00,,0,gskip17/chipcraft-tt-demo,763744211,SystemVerilog,chipcraft-tt-demo,42,0,2024-02-28 19:38:45+00:00,[],https://api.github.com/licenses/apache-2.0
15937,https://github.com/gskip17/chipcraft-tt-hdl-demo.git,2024-02-28 19:44:16+00:00,,0,gskip17/chipcraft-tt-hdl-demo,764832824,SystemVerilog,chipcraft-tt-hdl-demo,45,0,2024-02-28 20:26:59+00:00,[],https://api.github.com/licenses/apache-2.0
15938,https://github.com/Keerthidubba/Keerthi-AXI4-Stream-Protocol.git,2024-02-16 08:44:51+00:00,UVM Based AXI4-STREAM VIP Master and Slave Protocol ,0,Keerthidubba/Keerthi-AXI4-Stream-Protocol,758403122,SystemVerilog,Keerthi-AXI4-Stream-Protocol,28,0,2024-02-29 06:20:27+00:00,[],
15939,https://github.com/MurakamiShun/rv32i_singlecycle.git,2024-02-17 11:32:21+00:00,,0,MurakamiShun/rv32i_singlecycle,758889567,SystemVerilog,rv32i_singlecycle,31,0,2024-02-17 11:34:39+00:00,[],
15940,https://github.com/ziadmali59/Data_coding.git,2024-03-01 15:20:06+00:00,turbo_Rate_Match,0,ziadmali59/Data_coding,765766942,SystemVerilog,Data_coding,15,0,2024-03-01 15:50:55+00:00,[],
15941,https://github.com/hamza-2274/DSD-Lab.git,2024-02-12 10:40:02+00:00,,0,hamza-2274/DSD-Lab,756273892,SystemVerilog,DSD-Lab,4790,0,2024-02-12 11:02:57+00:00,[],
15942,https://github.com/leshao-o/apb.git,2024-03-04 12:47:22+00:00,,0,leshao-o/apb,766953103,SystemVerilog,apb,4,0,2024-03-04 13:31:24+00:00,[],
15943,https://github.com/sduaz/dsdlab5.git,2024-03-04 16:22:51+00:00,combinational circuit using k maps(7segments),0,sduaz/dsdlab5,767058787,SystemVerilog,dsdlab5,133,0,2024-03-04 16:32:18+00:00,[],
15944,https://github.com/Gorruy/lifo.git,2024-02-29 15:26:51+00:00,,0,Gorruy/lifo,765260143,SystemVerilog,lifo,23,0,2024-03-03 21:48:23+00:00,[],
15945,https://github.com/andresuriza/auriza_digital_design_lab_2023.git,2024-02-10 17:32:40+00:00,,0,andresuriza/auriza_digital_design_lab_2023,755595805,SystemVerilog,auriza_digital_design_lab_2023,203655,0,2024-02-26 18:14:12+00:00,[],
15946,https://github.com/muhammedTarek001/retry_environment.git,2024-03-01 20:13:27+00:00,uvm environment for testing retry block in CXL data link layer ,0,muhammedTarek001/retry_environment,765884828,SystemVerilog,retry_environment,157,0,2024-03-01 20:15:13+00:00,[],https://api.github.com/licenses/agpl-3.0
15947,https://github.com/nicval2/nvalverdea_digital_design_lab_2024.git,2024-02-14 15:49:35+00:00,,0,nicval2/nvalverdea_digital_design_lab_2024,757489780,SystemVerilog,nvalverdea_digital_design_lab_2024,678106,0,2024-03-13 01:59:40+00:00,[],
15948,https://github.com/cecilianomeibel/mceciliano_digital_design_lab_2024.git,2024-02-10 22:08:14+00:00,Repositorio en el cual se trabajaran los laboratorios correspondientes al curso de Taller de Diseño Digital del Instituto Tecnologico de Costa Rica,0,cecilianomeibel/mceciliano_digital_design_lab_2024,755721663,SystemVerilog,mceciliano_digital_design_lab_2024,97456,0,2024-03-03 08:14:14+00:00,[],
15949,https://github.com/embedded-explorer/UVM_Learning.git,2024-02-23 18:17:48+00:00,Documenting Journey of Exploring UVM,0,embedded-explorer/UVM_Learning,762412557,SystemVerilog,UVM_Learning,29,0,2024-02-23 18:52:21+00:00,[],
15950,https://github.com/CucuAntonia/TSC.git,2024-02-19 06:16:52+00:00,Laboratoare TSC,0,CucuAntonia/TSC,759684835,SystemVerilog,TSC,8439,0,2024-03-04 07:51:31+00:00,[],
15951,https://github.com/DavBudau/TSC.git,2024-02-21 06:29:33+00:00,,0,DavBudau/TSC,761051422,SystemVerilog,TSC,8217,0,2024-03-04 08:00:01+00:00,[],
15952,https://github.com/phuvg/ahblite.git,2024-02-08 04:51:00+00:00,,0,phuvg/ahblite,754456145,SystemVerilog,ahblite,9303,0,2024-02-23 03:28:21+00:00,[],
15953,https://github.com/ZelGusev/asyncFifo.git,2024-01-26 16:44:50+00:00,,0,ZelGusev/asyncFifo,748734458,SystemVerilog,asyncFifo,27,0,2024-01-26 16:57:42+00:00,[],
15954,https://github.com/nathanheck255/PongLab.git,2024-01-29 23:58:31+00:00,This is the repo for Lab 1 of SoC design class. We will be implementing the Pong game.,0,nathanheck255/PongLab,750077158,SystemVerilog,PongLab,14,0,2024-01-30 19:53:34+00:00,[],
15955,https://github.com/Kavi91/16-bit_Processor_Core.git,2024-01-31 13:06:00+00:00,The primary objective of this project revolves around the development of a 16-bit instruction set processor. ,0,Kavi91/16-bit_Processor_Core,750854227,SystemVerilog,16-bit_Processor_Core,2788,0,2024-01-31 13:14:32+00:00,[],https://api.github.com/licenses/mit
15956,https://github.com/satwikkamath/SPI_Master_Verification.git,2024-02-02 17:30:44+00:00,"This repository contains a SystemVerilog verification testbench for an SPI (Serial Peripheral Interface) Master module. The testbench is designed to verify the functionality of the SPI Master by generating stimuli, driving transactions, monitoring the bus, and comparing results using a scoreboard.",0,satwikkamath/SPI_Master_Verification,751952967,SystemVerilog,SPI_Master_Verification,15,0,2024-02-02 17:49:48+00:00,[],
15957,https://github.com/RahmatNaeem/DSD-2022ee135.git,2024-02-05 15:36:49+00:00,,0,RahmatNaeem/DSD-2022ee135,753162546,SystemVerilog,DSD-2022ee135,223,0,2024-02-05 16:22:34+00:00,[],
15958,https://github.com/leduchuybk/up_down_counter.git,2024-02-05 14:16:41+00:00,,0,leduchuybk/up_down_counter,753124540,SystemVerilog,up_down_counter,54,0,2024-02-05 14:19:14+00:00,[],
15959,https://github.com/yoon123seul/CastLab_project.git,2024-02-01 01:50:47+00:00,,0,yoon123seul/CastLab_project,751133418,SystemVerilog,CastLab_project,6897,0,2024-02-01 01:53:26+00:00,[],
15960,https://github.com/Aledpl5/Rock-Paper-Scissors-Circuit.git,2024-02-07 09:15:44+00:00,Uni project about the game rock-paper-scissors,0,Aledpl5/Rock-Paper-Scissors-Circuit,754033867,SystemVerilog,Rock-Paper-Scissors-Circuit,14,0,2024-02-07 09:35:36+00:00,"['blif', 'circuit', 'sis', 'systemverilog', 'verilog', 'datapath', 'datapath-design']",
15961,https://github.com/darsh612/LC3_Chip_Verification.git,2024-02-09 17:47:25+00:00,,0,darsh612/LC3_Chip_Verification,755232915,SystemVerilog,LC3_Chip_Verification,21656,0,2024-02-09 17:49:41+00:00,[],
15962,https://github.com/Abdullah-61/UET_RV_PCORE.git,2024-02-11 11:02:26+00:00,,0,Abdullah-61/UET_RV_PCORE,755876400,SystemVerilog,UET_RV_PCORE,99,0,2024-02-11 11:55:14+00:00,[],
15963,https://github.com/Omar-farhan1084/coverage.git,2024-02-15 08:38:00+00:00,,0,Omar-farhan1084/coverage,757910095,SystemVerilog,coverage,8,0,2024-02-15 08:38:57+00:00,[],
15964,https://github.com/SamiIonesi/Memory_UVM.git,2024-02-16 19:45:15+00:00,,0,SamiIonesi/Memory_UVM,758660822,SystemVerilog,Memory_UVM,5,0,2024-02-16 19:54:19+00:00,[],
15965,https://github.com/michaelskyf/fpga.git,2024-02-18 19:59:14+00:00,Random fpga stuff,0,michaelskyf/fpga,759517614,SystemVerilog,fpga,189,0,2024-02-18 19:59:46+00:00,[],
15966,https://github.com/sduaz/DSDLAB3.git,2024-02-19 19:27:46+00:00,,0,sduaz/DSDLAB3,760097817,SystemVerilog,DSDLAB3,50,0,2024-02-19 19:30:11+00:00,[],
15967,https://github.com/QamarRaja/lab-3.git,2024-02-19 15:20:44+00:00,my assingment# 3,0,QamarRaja/lab-3,759913453,SystemVerilog,lab-3,112,0,2024-02-19 15:26:56+00:00,[],
15968,https://github.com/Johkson23/startercode_lab1.git,2024-02-19 23:44:17+00:00,,0,Johkson23/startercode_lab1,760180080,SystemVerilog,startercode_lab1,15,0,2024-02-19 23:44:48+00:00,[],
15969,https://github.com/eldanielh31/dbrenes_digital_design_lab_2024.git,2024-02-09 21:59:55+00:00,,0,eldanielh31/dbrenes_digital_design_lab_2024,755318731,SystemVerilog,dbrenes_digital_design_lab_2024,502,0,2024-02-21 21:39:29+00:00,[],
15970,https://github.com/a-dailey/333_Otter.git,2024-02-05 01:53:19+00:00,,0,a-dailey/333_Otter,752868340,SystemVerilog,333_Otter,8346,0,2024-02-13 19:19:27+00:00,[],
15971,https://github.com/axyrai/sudokuSolver.git,2024-02-24 13:53:04+00:00,A sudoku solver written in systemVerilog using constraints.,0,axyrai/sudokuSolver,762717224,SystemVerilog,sudokuSolver,57,0,2024-02-24 13:57:58+00:00,[],
15972,https://github.com/nbannur2/LLC-.git,2024-02-26 00:11:08+00:00,LLC Design and Verification using SV,0,nbannur2/LLC-,763260594,SystemVerilog,LLC-,25,0,2024-02-26 00:21:14+00:00,[],
15973,https://github.com/mohit-verma-mv/UVM_RAL.git,2024-02-27 02:00:06+00:00,Register Layer Abstraction Code of UVM from Basic ,0,mohit-verma-mv/UVM_RAL,763833271,SystemVerilog,UVM_RAL,33,0,2024-02-27 02:18:54+00:00,[],
15974,https://github.com/zpxy/spi_exmple.git,2024-02-27 01:34:00+00:00,,0,zpxy/spi_exmple,763826057,SystemVerilog,spi_exmple,4,0,2024-02-27 01:59:07+00:00,[],
15975,https://github.com/isaacdbowser/tt-fpga-hdl-demo.git,2024-02-27 02:39:51+00:00,,0,isaacdbowser/tt-fpga-hdl-demo,763845363,SystemVerilog,tt-fpga-hdl-demo,23,0,2024-02-27 02:39:57+00:00,[],https://api.github.com/licenses/apache-2.0
15976,https://github.com/jmbert/vliw.git,2024-02-27 18:52:49+00:00,A vliw-based cpu described in SystemVerilog,0,jmbert/vliw,764254648,SystemVerilog,vliw,28,0,2024-02-27 18:53:08+00:00,[],
15977,https://github.com/Stork1323/Convolution.git,2024-02-27 09:11:50+00:00,,0,Stork1323/Convolution,763982002,SystemVerilog,Convolution,7,0,2024-03-03 08:12:22+00:00,[],
15978,https://github.com/Susheelaaa/Inter_process_communication.git,2024-03-05 16:47:39+00:00,,0,Susheelaaa/Inter_process_communication,767639469,SystemVerilog,Inter_process_communication,5,0,2024-03-05 17:28:02+00:00,[],
15979,https://github.com/anikate-kaw/jelly_bean_basic.git,2024-03-05 20:43:28+00:00,,0,anikate-kaw/jelly_bean_basic,767749713,SystemVerilog,jelly_bean_basic,13,0,2024-03-05 20:44:26+00:00,[],
15980,https://github.com/MKamranManzoor/PROJECT4.1.git,2024-03-05 05:37:11+00:00,,0,MKamranManzoor/PROJECT4.1,767338965,SystemVerilog,PROJECT4.1,630,0,2024-03-05 05:39:19+00:00,[],
15981,https://github.com/MKamranManzoor/PROJECT5.1.git,2024-03-05 05:39:52+00:00,,0,MKamranManzoor/PROJECT5.1,767339756,SystemVerilog,PROJECT5.1,1117,0,2024-03-05 05:41:58+00:00,[],
15982,https://github.com/AHassan001/DIGITAL-VERIFICATION-USING-SYSTEMVERILOG-AND-UVM.git,2024-02-08 11:08:49+00:00,,0,AHassan001/DIGITAL-VERIFICATION-USING-SYSTEMVERILOG-AND-UVM,754581921,SystemVerilog,DIGITAL-VERIFICATION-USING-SYSTEMVERILOG-AND-UVM,593,0,2024-03-07 20:28:43+00:00,[],
15983,https://github.com/ccolten3/496stuff.git,2024-02-26 05:20:01+00:00,,0,ccolten3/496stuff,763338022,SystemVerilog,496stuff,135,0,2024-02-26 05:25:32+00:00,[],
15984,https://github.com/AndreyKoposov/MPSIS_RISC_V_KOPO.git,2024-02-13 14:53:22+00:00,,0,AndreyKoposov/MPSIS_RISC_V_KOPO,756912619,SystemVerilog,MPSIS_RISC_V_KOPO,12241,0,2024-02-13 14:53:34+00:00,[],
15985,https://github.com/minhbui27/ECE_152B.git,2024-02-02 21:51:31+00:00,,0,minhbui27/ECE_152B,752038162,SystemVerilog,ECE_152B,7,0,2024-02-02 21:53:03+00:00,[],
15986,https://github.com/JoelxCode/Lab2_DLD_Joel_Albert.git,2024-02-23 18:45:35+00:00,This is the repository of LAB2,0,JoelxCode/Lab2_DLD_Joel_Albert,762422791,SystemVerilog,Lab2_DLD_Joel_Albert,34043,0,2024-02-28 17:57:58+00:00,[],https://api.github.com/licenses/mit
15987,https://github.com/Itzdanie/Lab-2.git,2024-02-28 21:35:37+00:00,,0,Itzdanie/Lab-2,764873244,SystemVerilog,Lab-2,21317,0,2024-03-06 23:33:36+00:00,[],https://api.github.com/licenses/mit
15988,https://github.com/pkrwisig/assignment.git,2024-02-28 06:54:18+00:00,,0,pkrwisig/assignment,764487002,SystemVerilog,assignment,28,0,2024-03-20 12:08:15+00:00,[],
15989,https://github.com/ksgovardhan/training.git,2024-02-04 15:54:43+00:00,training,1,ksgovardhan/training,752714051,SystemVerilog,training,28110,0,2024-02-15 05:23:48+00:00,[],
15990,https://github.com/krishnaachyuth/Interface-Memory-to-8088.git,2024-03-04 21:21:10+00:00,,0,krishnaachyuth/Interface-Memory-to-8088,767188383,SystemVerilog,Interface-Memory-to-8088,5787,0,2024-03-06 20:33:30+00:00,[],
15991,https://github.com/KKDManohar/System-Verilog-Project-Team8.git,2024-03-05 09:36:56+00:00,,0,KKDManohar/System-Verilog-Project-Team8,767434319,SystemVerilog,System-Verilog-Project-Team8,1626,0,2024-03-05 09:44:09+00:00,[],
15992,https://github.com/kensung-lab/survindel2_paper_experiments.git,2024-02-28 12:23:14+00:00,,0,kensung-lab/survindel2_paper_experiments,764624696,SystemVerilog,survindel2_paper_experiments,2013962,0,2024-03-05 08:14:19+00:00,[],
15993,https://github.com/LiamSnow/ECE3829-Lab3.git,2024-02-14 03:44:44+00:00,,0,LiamSnow/ECE3829-Lab3,757226484,SystemVerilog,ECE3829-Lab3,3887,0,2024-02-20 02:49:18+00:00,[],
15994,https://github.com/robotman2412/sv-float.git,2024-01-28 11:11:45+00:00,Modular SystemVerilog floating-point library,0,robotman2412/sv-float,749362210,SystemVerilog,sv-float,42,0,2024-01-28 15:52:42+00:00,[],https://api.github.com/licenses/cern-ohl-p-2.0
15995,https://github.com/ethansepa/ArmPipelinedCPU.git,2024-01-29 19:33:08+00:00,64 bit Pipelined CPU for ARM Instruction Set,0,ethansepa/ArmPipelinedCPU,749991905,SystemVerilog,ArmPipelinedCPU,46,0,2024-03-29 23:28:32+00:00,[],
15996,https://github.com/IulianGabrielGavrila/TSC.git,2024-02-19 06:16:16+00:00,,0,IulianGabrielGavrila/TSC,759684613,SystemVerilog,TSC,8004,0,2024-03-04 07:56:57+00:00,[],
15997,https://github.com/BrumaDaniel/TSC_brumaDaniel.git,2024-02-19 06:25:58+00:00,,0,BrumaDaniel/TSC_brumaDaniel,759687843,SystemVerilog,TSC_brumaDaniel,18626,0,2024-03-04 09:06:57+00:00,[],
15999,https://github.com/yttnn/our_cpu.git,2024-02-18 09:03:36+00:00,,0,yttnn/our_cpu,759320806,SystemVerilog,our_cpu,107,0,2024-03-21 01:58:17+00:00,[],
16000,https://github.com/adithyapuvvada/Verilog.git,2024-02-15 18:52:37+00:00,,0,adithyapuvvada/Verilog,758166955,SystemVerilog,Verilog,106,0,2024-02-19 17:57:48+00:00,[],
16001,https://github.com/IMFeeferz/HDL_Labs.git,2024-02-29 19:53:12+00:00,ECE 469 labs,0,IMFeeferz/HDL_Labs,765375523,SystemVerilog,HDL_Labs,13316,0,2024-03-06 17:43:13+00:00,[],
16002,https://github.com/Chiper27/TSC.git,2024-02-21 06:30:10+00:00,,0,Chiper27/TSC,761051638,SystemVerilog,TSC,8078,0,2024-04-10 16:56:57+00:00,[],
16003,https://github.com/jblol17/pipelined-riscv-cpu.git,2024-03-01 00:07:59+00:00,,0,jblol17/pipelined-riscv-cpu,765451343,SystemVerilog,pipelined-riscv-cpu,13,0,2024-03-01 00:18:27+00:00,[],
16005,https://github.com/Yuboeee/DSP_series.git,2024-02-03 03:37:21+00:00,,0,Yuboeee/DSP_series,752107161,SystemVerilog,DSP_series,5,0,2024-02-03 03:39:56+00:00,[],
16006,https://github.com/Danna112002/Sync_arith_unit.git,2024-01-31 18:48:56+00:00,,0,Danna112002/Sync_arith_unit,751006948,SystemVerilog,Sync_arith_unit,1339,0,2024-01-31 19:15:47+00:00,[],
16007,https://github.com/vladimirkuzia/RISC-V-processor.git,2024-01-31 17:30:40+00:00,,0,vladimirkuzia/RISC-V-processor,750974125,SystemVerilog,RISC-V-processor,11515,0,2024-02-01 01:51:55+00:00,[],
16008,https://github.com/grishechkin/verilog-cache-simulation.git,2024-02-04 16:27:21+00:00,LRU cache simulation,0,grishechkin/verilog-cache-simulation,752724706,SystemVerilog,verilog-cache-simulation,5440,0,2024-02-04 16:30:13+00:00,[],
16009,https://github.com/MahmoudMohamed9988/UART_transmitter_and_receiver.git,2024-02-02 14:01:33+00:00,,0,MahmoudMohamed9988/UART_transmitter_and_receiver,751868074,SystemVerilog,UART_transmitter_and_receiver,62,0,2024-02-02 14:12:47+00:00,[],
16010,https://github.com/ab2514/uart.git,2024-02-09 05:43:18+00:00,,0,ab2514/uart,754960622,SystemVerilog,uart,78,0,2024-02-09 05:43:31+00:00,[],https://api.github.com/licenses/gpl-3.0
16011,https://github.com/hafizmuhammadahmad01/dsdlab_2.git,2024-02-12 19:00:21+00:00,,0,hafizmuhammadahmad01/dsdlab_2,756487564,SystemVerilog,dsdlab_2,280,0,2024-02-12 19:02:59+00:00,[],
16012,https://github.com/Artemmida/TM1638.git,2024-02-10 18:37:45+00:00,,0,Artemmida/TM1638,755616407,SystemVerilog,TM1638,70,0,2024-02-10 18:41:59+00:00,[],
16013,https://github.com/Asadd1503/DSD2022-EE-169.git,2024-02-12 16:23:09+00:00,My second lab of digital system design.,0,Asadd1503/DSD2022-EE-169,756420527,SystemVerilog,DSD2022-EE-169,849,0,2024-02-12 16:26:40+00:00,[],
16014,https://github.com/Ammar-Bin-Amir/RV32I_5-Stage_Pipelined_CPU.git,2024-02-09 09:13:55+00:00,Processor Design of RV32I 5-Stage Pipelined CPU,0,Ammar-Bin-Amir/RV32I_5-Stage_Pipelined_CPU,755021245,SystemVerilog,RV32I_5-Stage_Pipelined_CPU,163,0,2024-02-15 10:37:31+00:00,"['digital-circuit-design', 'risc-v', 'rtl-design', 'rv32i', 'single-cycle-processor', '5-stage-pipelined-processor']",
16015,https://github.com/sumanthbs17/s_r_latch.git,2024-02-14 06:21:52+00:00,,0,sumanthbs17/s_r_latch,757269402,SystemVerilog,s_r_latch,7,0,2024-02-14 06:24:07+00:00,[],
16016,https://github.com/footbooller/aps_new.git,2024-02-14 18:09:19+00:00,,0,footbooller/aps_new,757549826,SystemVerilog,aps_new,21098,0,2024-02-14 18:14:00+00:00,[],
16017,https://github.com/GaalElbaz/Verification-environment-for-Half-Adder.git,2024-02-16 18:24:25+00:00,Testing and validating the functionality of a Half Adder hardware design.,0,GaalElbaz/Verification-environment-for-Half-Adder,758631849,SystemVerilog,Verification-environment-for-Half-Adder,64,0,2024-02-18 12:53:51+00:00,[],
16018,https://github.com/ethan4984/caput.git,2024-02-15 08:30:27+00:00,,0,ethan4984/caput,757907447,SystemVerilog,caput,66,0,2024-02-15 08:31:58+00:00,[],https://api.github.com/licenses/bsd-2-clause
16019,https://github.com/max2win/apb_uvc_example.git,2024-02-25 21:28:52+00:00,,0,max2win/apb_uvc_example,763222940,SystemVerilog,apb_uvc_example,40,0,2024-02-25 22:01:27+00:00,[],https://api.github.com/licenses/apache-2.0
16020,https://github.com/FlamingSaint/Ethernet_Nic.git,2024-02-27 08:33:48+00:00,,0,FlamingSaint/Ethernet_Nic,763964922,SystemVerilog,Ethernet_Nic,32208,0,2024-02-27 08:38:23+00:00,[],
16021,https://github.com/TayybaShafiq/Lab_3.git,2024-02-27 08:16:16+00:00,,0,TayybaShafiq/Lab_3,763957543,SystemVerilog,Lab_3,60,0,2024-02-27 08:17:24+00:00,[],
16022,https://github.com/Ajay1995iitr/FIFO-design-and-verification-using-Verilog-SV.git,2024-02-27 10:25:50+00:00,,0,Ajay1995iitr/FIFO-design-and-verification-using-Verilog-SV,764014841,SystemVerilog,FIFO-design-and-verification-using-Verilog-SV,14,0,2024-02-27 10:33:45+00:00,[],
16023,https://github.com/deardansouza/PipelineRiscV-InfraHardware.git,2024-02-27 00:17:16+00:00,,0,deardansouza/PipelineRiscV-InfraHardware,763804650,SystemVerilog,PipelineRiscV-InfraHardware,319,0,2024-02-27 02:03:08+00:00,[],
16024,https://github.com/haseeb-hassan/lab-4.git,2024-03-05 05:11:54+00:00,rgb leds,0,haseeb-hassan/lab-4,767330874,SystemVerilog,lab-4,1995,0,2024-03-05 05:15:32+00:00,[],
16025,https://github.com/pulp-platform/cluster_icache.git,2024-02-16 13:23:38+00:00,,0,pulp-platform/cluster_icache,758506587,SystemVerilog,cluster_icache,103,0,2024-02-16 13:24:16+00:00,[],
16026,https://github.com/kencycheng/Systemverilog.git,2024-02-02 08:51:18+00:00,,0,kencycheng/Systemverilog,751752247,SystemVerilog,Systemverilog,37,0,2024-02-06 06:47:49+00:00,[],https://api.github.com/licenses/apache-2.0
16027,https://github.com/jwang2863123/DAV.git,2024-02-25 01:53:22+00:00,,0,jwang2863123/DAV,762898149,SystemVerilog,DAV,10181,0,2024-02-25 02:03:49+00:00,[],
16028,https://github.com/ritwikgoel/Prj3.git,2024-02-29 02:12:09+00:00,,0,ritwikgoel/Prj3,764951293,SystemVerilog,Prj3,26,0,2024-02-29 19:23:36+00:00,[],
16029,https://github.com/TomasNsantos/IH-Project.git,2024-03-02 13:07:31+00:00,Projeto de IH,0,TomasNsantos/IH-Project,766142795,SystemVerilog,IH-Project,380,0,2024-03-02 13:18:20+00:00,[],
16030,https://github.com/bakadachi/myiplibrary.git,2024-03-04 20:11:51+00:00,SystemVerilog IP library,0,bakadachi/myiplibrary,767161830,SystemVerilog,myiplibrary,8,0,2024-03-07 10:44:03+00:00,[],
16031,https://github.com/alexngys/Sysverlog.git,2024-02-23 10:04:24+00:00,,0,alexngys/Sysverlog,762212269,SystemVerilog,Sysverlog,3366,0,2024-02-25 11:57:38+00:00,[],
16032,https://github.com/Deepak-1159/SV_PROJECT_TEAM-14.git,2024-02-23 19:25:24+00:00,,0,Deepak-1159/SV_PROJECT_TEAM-14,762436925,SystemVerilog,SV_PROJECT_TEAM-14,10810,0,2024-02-23 20:13:43+00:00,[],
16033,https://github.com/harshvardhan189/System-Verilog.git,2024-01-30 13:39:21+00:00,,0,harshvardhan189/System-Verilog,750352314,SystemVerilog,System-Verilog,25,0,2024-01-30 17:04:55+00:00,[],
16034,https://github.com/jeras/synthesis-optimizations.git,2024-02-13 23:08:55+00:00,Observing and optimizing synthesis of common bit manipulation operations for FPGA and ASIC,0,jeras/synthesis-optimizations,757159345,SystemVerilog,synthesis-optimizations,206,0,2024-03-02 13:57:15+00:00,[],
16035,https://github.com/andreeapascociu/TSC.git,2024-02-21 06:29:22+00:00,,0,andreeapascociu/TSC,761051331,SystemVerilog,TSC,8032,0,2024-02-28 07:42:45+00:00,[],
16036,https://github.com/andrei-eduard-s/TSC.git,2024-02-21 06:30:46+00:00,,0,andrei-eduard-s/TSC,761051832,SystemVerilog,TSC,8030,0,2024-02-28 07:43:00+00:00,[],
16037,https://github.com/AnaMPopa23/TSC.git,2024-02-21 06:34:22+00:00,,0,AnaMPopa23/TSC,761053081,SystemVerilog,TSC,8405,0,2024-02-28 07:42:43+00:00,[],
16039,https://github.com/Emkot87/Fifo_and_Counter_DesignVerification.git,2024-01-26 17:32:39+00:00,Design and Verification of a Counter and a FIFO in Verilog and SystemVerilog,0,Emkot87/Fifo_and_Counter_DesignVerification,748753577,SystemVerilog,Fifo_and_Counter_DesignVerification,467,0,2024-01-26 17:35:15+00:00,[],
16040,https://github.com/Powerage1978/pulsesync_fpga.git,2024-01-28 18:44:27+00:00,,0,Powerage1978/pulsesync_fpga,749496842,SystemVerilog,pulsesync_fpga,1924,0,2024-01-28 18:45:17+00:00,[],
16041,https://github.com/harshvardhan189/MOD-12-Counter-Verify-Using-SV.git,2024-01-30 13:52:31+00:00,,0,harshvardhan189/MOD-12-Counter-Verify-Using-SV,750358268,SystemVerilog,MOD-12-Counter-Verify-Using-SV,7,0,2024-01-30 14:49:50+00:00,[],
16042,https://github.com/tthanhnick/Thanh_Work_Electronics_RMIT.git,2024-02-01 15:10:30+00:00,,0,tthanhnick/Thanh_Work_Electronics_RMIT,751414561,SystemVerilog,Thanh_Work_Electronics_RMIT,20,0,2024-02-01 15:13:59+00:00,[],https://api.github.com/licenses/agpl-3.0
16043,https://github.com/lblQubic/gateware.git,2024-02-06 05:35:03+00:00,,0,lblQubic/gateware,753434865,SystemVerilog,gateware,69056,0,2024-02-06 05:45:05+00:00,[],
16044,https://github.com/DanielaPavlenco/UART-Communication-Protocol-Verification.git,2024-02-06 20:56:57+00:00,,0,DanielaPavlenco/UART-Communication-Protocol-Verification,753815363,SystemVerilog,UART-Communication-Protocol-Verification,22,0,2024-02-06 20:59:19+00:00,[],
16045,https://github.com/satyaprakashakula/Synchronous-FIFO.git,2024-02-11 04:08:36+00:00,,0,satyaprakashakula/Synchronous-FIFO,755791014,SystemVerilog,Synchronous-FIFO,6,0,2024-02-11 04:11:47+00:00,[],
16046,https://github.com/anupkumarreddy/generic_metric_analyzer.git,2024-02-10 06:38:15+00:00,,0,anupkumarreddy/generic_metric_analyzer,755423753,SystemVerilog,generic_metric_analyzer,8,0,2024-02-10 06:39:17+00:00,[],
16047,https://github.com/Dinesh-9999/ROUTER-1X3-VERIFICATION-PROJECT.git,2024-02-13 14:50:54+00:00,,0,Dinesh-9999/ROUTER-1X3-VERIFICATION-PROJECT,756911377,SystemVerilog,ROUTER-1X3-VERIFICATION-PROJECT,19,0,2024-02-13 14:57:58+00:00,[],
16048,https://github.com/ninju08/Universal_Shift_Reg.git,2024-02-12 19:24:36+00:00,Design and Verification of Universal Shift Register using Verilog for Design and System Verilog for Verification. This project is simulated on Questa-sim and VCS,0,ninju08/Universal_Shift_Reg,756497601,SystemVerilog,Universal_Shift_Reg,21,0,2024-02-12 20:12:13+00:00,[],
16049,https://github.com/MAHANTHADEEKSHA-SB/address_filter_tb_combined.git,2024-02-16 08:15:45+00:00,,0,MAHANTHADEEKSHA-SB/address_filter_tb_combined,758393061,SystemVerilog,address_filter_tb_combined,44,0,2024-02-16 09:22:09+00:00,[],https://api.github.com/licenses/apache-2.0
16050,https://github.com/sivabararthi/TBlint.git,2024-02-14 10:10:18+00:00,,0,sivabararthi/TBlint,757349372,SystemVerilog,TBlint,41,0,2024-02-14 10:15:31+00:00,[],
16051,https://github.com/perlindgren/can-clic.git,2024-02-13 01:05:24+00:00,SW implementation of priority arbitration,0,perlindgren/can-clic,756623253,SystemVerilog,can-clic,662,0,2024-02-16 12:47:02+00:00,[],
16052,https://github.com/RyanHunter-DV/ResetGen.git,2024-02-21 15:10:01+00:00,,0,RyanHunter-DV/ResetGen,761275243,SystemVerilog,ResetGen,24,0,2024-02-21 15:11:04+00:00,[],
16053,https://github.com/Zelmoghazy/APB-GPIO.git,2024-02-27 17:42:38+00:00,,1,Zelmoghazy/APB-GPIO,764223630,SystemVerilog,APB-GPIO,1549,0,2024-03-08 13:01:57+00:00,[],
16054,https://github.com/hafizmuhammadahmad01/dsdlab5.git,2024-03-04 18:13:14+00:00,,0,hafizmuhammadahmad01/dsdlab5,767111622,SystemVerilog,dsdlab5,454,0,2024-03-04 18:15:01+00:00,[],
16055,https://github.com/steins-ut/UARTMachine.git,2024-03-04 19:58:11+00:00,A full duplex UART Machine implemented on the Basys3 FPGA board.,0,steins-ut/UARTMachine,767156294,SystemVerilog,UARTMachine,14,0,2024-03-07 12:32:52+00:00,[],
16056,https://github.com/BatyaPng/RISCV_CPU.git,2024-02-03 19:28:40+00:00,,0,BatyaPng/RISCV_CPU,752387463,SystemVerilog,RISCV_CPU,40,0,2024-02-22 08:56:59+00:00,[],
16057,https://github.com/SidK123/I2C_SRAM.git,2024-02-11 05:48:57+00:00,Memory Controller with I2C Memory Interface. Taped out using Tiny Tapeout.,0,SidK123/I2C_SRAM,755808424,SystemVerilog,I2C_SRAM,5,0,2024-02-23 03:59:49+00:00,[],
16058,https://github.com/lukemorrison1341/SerDes.git,2024-02-02 19:49:30+00:00,,0,lukemorrison1341/SerDes,752002135,SystemVerilog,SerDes,1,0,2024-02-27 09:50:09+00:00,[],
16059,https://github.com/KarthikReddy1911/Technical-Papers.git,2024-02-26 18:19:22+00:00,,1,KarthikReddy1911/Technical-Papers,763679911,SystemVerilog,Technical-Papers,5,0,2024-02-27 11:52:25+00:00,[],
16060,https://github.com/ahmedashrafalaaser/ALU-Verification-plan.git,2024-03-04 09:12:10+00:00,ITI graduation project ( design ALU with Interrupt  support) write the Design req then verification req followed by arch  then imp then results ,0,ahmedashrafalaaser/ALU-Verification-plan,766861695,SystemVerilog,ALU-Verification-plan,4222,0,2024-03-04 09:33:06+00:00,[],
16061,https://github.com/allenlyj/SequenceParser.git,2024-02-22 22:59:58+00:00,,0,allenlyj/SequenceParser,762012688,SystemVerilog,SequenceParser,30,0,2024-02-23 23:02:48+00:00,[],
16062,https://github.com/M0rp/Lab2.git,2024-02-23 17:49:25+00:00,,0,M0rp/Lab2,762401905,SystemVerilog,Lab2,20339,0,2024-02-23 18:07:12+00:00,[],https://api.github.com/licenses/mit
16063,https://github.com/ayaahmed20018414/CND-training-verification-course-assignments.git,2024-02-07 17:24:11+00:00,,0,ayaahmed20018414/CND-training-verification-course-assignments,754246943,SystemVerilog,CND-training-verification-course-assignments,295,0,2024-02-09 15:05:11+00:00,[],
16064,https://github.com/9z9z9z9z/APS.git,2024-02-29 18:42:57+00:00,,0,9z9z9z9z/APS,765348108,SystemVerilog,APS,80,0,2024-03-21 11:39:48+00:00,[],
16065,https://github.com/suriyasaiyan/70_day_Design-Verification.git,2024-03-02 15:07:53+00:00,,0,suriyasaiyan/70_day_Design-Verification,766182707,SystemVerilog,70_day_Design-Verification,5,0,2024-03-09 21:11:03+00:00,[],
16066,https://github.com/Sandeepan26/Verifcation_SV_UVM.git,2024-02-17 14:46:29+00:00,Contains Designs and their Verification environment via System Verilog or Universal Verification Methodology,0,Sandeepan26/Verifcation_SV_UVM,758947193,SystemVerilog,Verifcation_SV_UVM,35,0,2024-03-16 22:01:14+00:00,[],
16067,https://github.com/DeflateAwning/eaglesong-verilog.git,2024-01-26 21:15:26+00:00,A Verilog implementation of the Eaglesong hash algorithm,0,DeflateAwning/eaglesong-verilog,748839911,SystemVerilog,eaglesong-verilog,220,0,2024-03-10 22:59:26+00:00,[],https://api.github.com/licenses/cern-ohl-p-2.0
16068,https://github.com/weichung1008/simple-UVM-environment-for-synchronizing-FIFO.git,2024-02-17 04:07:27+00:00,,0,weichung1008/simple-UVM-environment-for-synchronizing-FIFO,758780931,SystemVerilog,simple-UVM-environment-for-synchronizing-FIFO,109,0,2024-02-17 09:14:31+00:00,[],
16069,https://github.com/jasonhsu93/CPU-Classic-RISC-Pipeline-Machine.git,2024-01-30 05:53:56+00:00,"Made a fully functional CPU model capable of performing essential computing tasks, such as executing instructions from memory, handling data with load and store operations. ",0,jasonhsu93/CPU-Classic-RISC-Pipeline-Machine,750172999,SystemVerilog,CPU-Classic-RISC-Pipeline-Machine,44,0,2024-03-25 04:30:17+00:00,"['armv7', 'cpu', 'datapath', 'de1-soc', 'risc']",
16070,https://github.com/MCR748/100line-processor.git,2024-02-11 11:36:24+00:00,A RV32I processor written to support a choosen set of instructions. Inprogress. ,0,MCR748/100line-processor,755885277,SystemVerilog,100line-processor,109,0,2024-02-12 16:42:14+00:00,[],
16071,https://github.com/gvGabi/TSC.git,2024-02-21 06:31:39+00:00,,0,gvGabi/TSC,761052111,SystemVerilog,TSC,8375,0,2024-03-04 07:55:02+00:00,[],
16072,https://github.com/Lcgunn/552-Project.git,2024-02-24 21:24:15+00:00,Creating a MIPS style CPU,0,Lcgunn/552-Project,762849091,SystemVerilog,552-Project,514,0,2024-02-24 21:46:44+00:00,[],
16073,https://github.com/saifalomari99/FPGA_Projects_SaifAlomari.git,2024-02-22 03:40:21+00:00,This Repository is to showcase Saif Alomari's FPGA projects,0,saifalomari99/FPGA_Projects_SaifAlomari,761555994,SystemVerilog,FPGA_Projects_SaifAlomari,60329,0,2024-03-19 16:30:36+00:00,"['fpga', 'systemverilog', 'verilog']",
16074,https://github.com/IlyaFonichev/Verilog_labs.git,2024-02-27 18:21:39+00:00,,0,IlyaFonichev/Verilog_labs,764241037,SystemVerilog,Verilog_labs,14115,0,2024-03-02 17:09:51+00:00,[],
16075,https://github.com/saibhargav5/Asynchronous_FIFO_ECE593_Group4.git,2024-01-27 04:30:09+00:00,,0,saibhargav5/Asynchronous_FIFO_ECE593_Group4,748932006,SystemVerilog,Asynchronous_FIFO_ECE593_Group4,69,0,2024-01-28 23:34:48+00:00,[],
16076,https://github.com/LordR31/TSC.git,2024-02-24 09:15:32+00:00,Repo for TSC Labs,0,LordR31/TSC,762638969,SystemVerilog,TSC,9045,0,2024-02-28 07:23:07+00:00,[],
16077,https://github.com/bgelb/gpsrx.git,2024-02-02 01:33:03+00:00,,0,bgelb/gpsrx,751629460,SystemVerilog,gpsrx,2137,0,2024-02-29 07:39:39+00:00,[],
16078,https://github.com/Allicai/EECE-LabWork.git,2024-02-15 15:52:51+00:00,Partner work for EECE2323,0,Allicai/EECE-LabWork,758089511,SystemVerilog,EECE-LabWork,93,0,2024-02-15 15:54:11+00:00,[],
16079,https://github.com/jameswbaker/cis5710-hw2.git,2024-02-01 20:19:45+00:00,,0,jameswbaker/cis5710-hw2,751543904,SystemVerilog,cis5710-hw2,4222,0,2024-03-15 22:02:25+00:00,[],https://api.github.com/licenses/mit
16080,https://github.com/pchar4/tetris-chip-project.git,2024-02-26 02:43:41+00:00,,0,pchar4/tetris-chip-project,763296714,SystemVerilog,tetris-chip-project,25290,0,2024-03-19 21:04:49+00:00,[],
16083,https://github.com/oleg1322/Verilog-SPI-interface.git,2024-01-29 11:00:53+00:00,,0,oleg1322/Verilog-SPI-interface,749766841,SystemVerilog,Verilog-SPI-interface,74,0,2024-01-29 11:02:33+00:00,[],
16084,https://github.com/CoraYi/Coding_Challenge.git,2024-01-30 23:13:58+00:00,Coding Challenge: 4-bit up/down counter,0,CoraYi/Coding_Challenge,750586330,SystemVerilog,Coding_Challenge,109,0,2024-01-31 00:27:32+00:00,[],
16085,https://github.com/KaS1999/Universal-Verification-Methodology.git,2024-01-31 17:31:08+00:00,This contains the UVM files for adder and sequential multiplier,0,KaS1999/Universal-Verification-Methodology,750974334,SystemVerilog,Universal-Verification-Methodology,8,0,2024-01-31 17:35:38+00:00,[],
16086,https://github.com/sushanTamu/lab-9-sushanTamu.git,2024-02-01 01:23:02+00:00,,0,sushanTamu/lab-9-sushanTamu,751126436,SystemVerilog,lab-9-sushanTamu,7815,0,2024-02-01 01:23:24+00:00,[],
16087,https://github.com/mingo99/RU.git,2024-01-30 10:55:37+00:00,Acc,0,mingo99/RU,750286084,SystemVerilog,RU,22,0,2024-01-30 10:56:25+00:00,[],
16088,https://github.com/idsyr/exp_mips.git,2024-02-01 17:36:44+00:00,,0,idsyr/exp_mips,751480382,SystemVerilog,exp_mips,2,0,2024-02-01 17:38:51+00:00,[],
16090,https://github.com/awise03/EECE2323.git,2024-02-02 19:27:46+00:00,,0,awise03/EECE2323,751994416,SystemVerilog,EECE2323,3,0,2024-02-02 19:30:58+00:00,[],
16091,https://github.com/AndrewRatkov/curcuit_stack.git,2024-02-09 13:12:12+00:00,,0,AndrewRatkov/curcuit_stack,755105794,SystemVerilog,curcuit_stack,964,0,2024-02-09 13:12:20+00:00,[],
16092,https://github.com/marnovandermaas/ibex-scorecard.git,2024-02-07 12:29:04+00:00,Test repo to add OpenSSF scorecard to Ibex,0,marnovandermaas/ibex-scorecard,754112162,SystemVerilog,ibex-scorecard,38859,0,2024-02-07 12:30:06+00:00,[],https://api.github.com/licenses/apache-2.0
16093,https://github.com/omerbdemir/packet_parser.git,2024-01-28 10:59:28+00:00,,0,omerbdemir/packet_parser,749359203,SystemVerilog,packet_parser,14454,0,2024-02-11 13:29:11+00:00,[],
16094,https://github.com/dhanasekarp03/dpram.git,2024-02-15 07:15:57+00:00,,0,dhanasekarp03/dpram,757881133,SystemVerilog,dpram,7,0,2024-02-15 07:17:22+00:00,[],
16095,https://github.com/PeterDing372/digital.git,2024-02-09 19:01:06+00:00,,0,PeterDing372/digital,755260615,SystemVerilog,digital,6,0,2024-02-09 19:06:56+00:00,[],
16096,https://github.com/Sameekshapu/sr_latch.git,2024-02-14 10:03:10+00:00,,0,Sameekshapu/sr_latch,757346575,SystemVerilog,sr_latch,21,0,2024-02-14 10:14:40+00:00,[],
16097,https://github.com/tms4517/logicLocking.git,2024-02-22 11:28:14+00:00,The aim of this project is to try out the logic locking Yosys plugin.,0,tms4517/logicLocking,761727336,SystemVerilog,logicLocking,154,0,2024-02-22 14:56:10+00:00,[],
16098,https://github.com/valmyr/SystemVerilog_Embedded.git,2024-02-14 06:59:15+00:00,,0,valmyr/SystemVerilog_Embedded,757281082,SystemVerilog,SystemVerilog_Embedded,1847,0,2024-02-21 19:39:54+00:00,[],
16099,https://github.com/Shreyast27/DPRAM.git,2024-02-15 15:49:34+00:00,,0,Shreyast27/DPRAM,758088097,SystemVerilog,DPRAM,8,0,2024-02-15 15:50:47+00:00,[],
16100,https://github.com/Jagatheshgiri/Adder.git,2024-02-16 06:44:26+00:00,,0,Jagatheshgiri/Adder,758364295,SystemVerilog,Adder,6,0,2024-02-16 06:45:39+00:00,[],
16101,https://github.com/rabbitrace/NOC.git,2024-02-20 03:19:04+00:00,NOC_design,0,rabbitrace/NOC,760236593,SystemVerilog,NOC,57158,0,2024-02-20 03:21:46+00:00,[],
16102,https://github.com/alikhawja/lab-3.git,2024-02-04 18:08:50+00:00,my assignment#3,0,alikhawja/lab-3,752756816,SystemVerilog,lab-3,1158,0,2024-02-19 17:47:45+00:00,[],
16103,https://github.com/Mahjabeen632/Lab_3.git,2024-02-19 19:21:32+00:00,,0,Mahjabeen632/Lab_3,760095345,SystemVerilog,Lab_3,41,0,2024-02-19 19:30:00+00:00,[],
16104,https://github.com/Smruti-2001/Design-and-verify-APB-RAM-using-sv-and-uvm.git,2024-02-24 07:26:31+00:00,,0,Smruti-2001/Design-and-verify-APB-RAM-using-sv-and-uvm,762611008,SystemVerilog,Design-and-verify-APB-RAM-using-sv-and-uvm,6,0,2024-02-24 07:27:54+00:00,[],
16105,https://github.com/Siris-Limx/3d_diffusion_soc.git,2024-03-03 18:21:13+00:00,,0,Siris-Limx/3d_diffusion_soc,766609022,SystemVerilog,3d_diffusion_soc,13515,0,2024-03-03 18:27:55+00:00,[],
16106,https://github.com/Ibrahim-Hussain1/Single-cycle-MIPS-processor-.git,2024-03-04 08:45:14+00:00,,0,Ibrahim-Hussain1/Single-cycle-MIPS-processor-,766850150,SystemVerilog,Single-cycle-MIPS-processor-,10,0,2024-03-04 09:01:56+00:00,[],
16107,https://github.com/parvathy10/universal-shift-register.git,2024-02-13 03:10:49+00:00,,0,parvathy10/universal-shift-register,756652572,SystemVerilog,universal-shift-register,1,0,2024-02-13 03:11:36+00:00,[],
16108,https://github.com/Ans-Qasim123/lab4.git,2024-03-04 17:27:54+00:00,,0,Ans-Qasim123/lab4,767090662,SystemVerilog,lab4,781,0,2024-03-04 17:34:16+00:00,[],
16109,https://github.com/umamah2004/lab5.git,2024-03-04 17:45:44+00:00,,0,umamah2004/lab5,767098910,SystemVerilog,lab5,156,0,2024-03-04 17:47:58+00:00,[],
16110,https://github.com/AdanShahid119/Digital-System-Lab.git,2024-02-05 13:16:34+00:00,This includes all my Lab experiments for Digital Systems Course.,0,AdanShahid119/Digital-System-Lab,753096848,SystemVerilog,Digital-System-Lab,4873,0,2024-02-05 13:25:58+00:00,[],
16111,https://github.com/haseeb-hassan/lab-5.git,2024-03-05 05:16:36+00:00,7 segment displays,0,haseeb-hassan/lab-5,767332302,SystemVerilog,lab-5,295,0,2024-03-05 05:24:55+00:00,[],
16112,https://github.com/justinsim02/UVM-Examples.git,2024-03-05 06:30:40+00:00,SystemVerilog for Verification Spear 2016,0,justinsim02/UVM-Examples,767356625,SystemVerilog,UVM-Examples,10,0,2024-03-05 06:32:23+00:00,[],
16114,https://github.com/Ammar-10xe/RISCV-Virtual-Memory-Address-Translation.git,2024-03-01 09:34:53+00:00,"This repo contains the address translation schemes of  RISCV Virtual Memory Sv39, Sv39*4, Sv48, Sv48*4,Sv57, Sv57*4",0,Ammar-10xe/RISCV-Virtual-Memory-Address-Translation,765620734,SystemVerilog,RISCV-Virtual-Memory-Address-Translation,35,0,2024-03-01 09:36:12+00:00,[],
16115,https://github.com/Naderatef10/System-verilog-practice.git,2024-03-05 23:47:36+00:00,Solving a group of assignments and projects to improve my SV verification skills,0,Naderatef10/System-verilog-practice,767809647,SystemVerilog,System-verilog-practice,8,0,2024-03-05 23:48:13+00:00,[],
16116,https://github.com/suriyasaiyan/128-x-256-b-SRAM-Memory-Array.git,2024-02-24 23:31:21+00:00,,0,suriyasaiyan/128-x-256-b-SRAM-Memory-Array,762874640,SystemVerilog,128-x-256-b-SRAM-Memory-Array,1,0,2024-03-09 21:12:11+00:00,[],
16117,https://github.com/davidz1234567890/lab3.git,2024-02-27 16:47:15+00:00,,0,davidz1234567890/lab3,764197642,SystemVerilog,lab3,13,0,2024-02-27 16:47:42+00:00,[],
16118,https://github.com/thomaspoike/ooo-design.git,2024-03-02 10:27:52+00:00,,0,thomaspoike/ooo-design,766096385,SystemVerilog,ooo-design,8,0,2024-03-17 18:16:57+00:00,[],
16119,https://github.com/brundamarpadaga/SV-project.git,2024-03-04 00:33:41+00:00,,0,brundamarpadaga/SV-project,766702645,SystemVerilog,SV-project,740,0,2024-03-04 00:58:03+00:00,[],
16120,https://github.com/vpandhare1/ECE571-Project.git,2024-02-25 22:28:59+00:00,,0,vpandhare1/ECE571-Project,763238340,SystemVerilog,ECE571-Project,11550,0,2024-03-20 01:44:05+00:00,[],
16121,https://github.com/kass-andra-go/proc_riscv_kass_andra_go.git,2024-02-16 12:05:37+00:00,My implementation of RISC-V processor,0,kass-andra-go/proc_riscv_kass_andra_go,758476530,SystemVerilog,proc_riscv_kass_andra_go,169,0,2024-04-01 09:20:45+00:00,[],
16122,https://github.com/Rohan2198/cis5710.git,2024-01-29 17:49:32+00:00,,0,Rohan2198/cis5710,749947852,SystemVerilog,cis5710,3876,0,2024-03-16 20:29:27+00:00,[],https://api.github.com/licenses/mit
16123,https://github.com/fraktal-luk/SV-CPU.git,2024-03-04 21:20:01+00:00,,0,fraktal-luk/SV-CPU,767187971,SystemVerilog,SV-CPU,133,0,2024-03-05 16:15:58+00:00,[],
16124,https://github.com/FloriCristea0/Laborator_TSC.git,2024-02-24 15:30:30+00:00,,0,FloriCristea0/Laborator_TSC,762748635,SystemVerilog,Laborator_TSC,8348,0,2024-03-04 08:03:28+00:00,[],
16125,https://github.com/JarcauCristian/TSC.git,2024-02-21 04:32:13+00:00,,0,JarcauCristian/TSC,761015064,SystemVerilog,TSC,8441,0,2024-02-28 07:42:45+00:00,[],
16126,https://github.com/MaracineanuConstantin/TSC.git,2024-02-21 06:30:05+00:00,,0,MaracineanuConstantin/TSC,761051603,SystemVerilog,TSC,6825,0,2024-02-28 07:42:56+00:00,[],
16127,https://github.com/JA1TYE/tt06-TYE-tiny-cpu.git,2024-01-30 15:31:23+00:00,Tiny 8-bit CPU for Tiny Tapeout 06,0,JA1TYE/tt06-TYE-tiny-cpu,750405570,SystemVerilog,tt06-TYE-tiny-cpu,89,0,2024-04-06 11:42:52+00:00,[],https://api.github.com/licenses/apache-2.0
16128,https://github.com/Dragon-Git/win-handler.git,2024-01-28 07:22:04+00:00,Addressing Timing Challenges in Transaction Level Checks,0,Dragon-Git/win-handler,749307872,SystemVerilog,win-handler,8,0,2024-01-28 07:35:53+00:00,"['check', 'handler', 'timing', 'verification', 'window']",
16129,https://github.com/EuJin-1234/8-bit-multiplier_SystemVerilog.git,2024-01-26 14:10:25+00:00,An 8-bit multiplier written in System Verilog and implemented on a DE1-SoC FPGA board.,0,EuJin-1234/8-bit-multiplier_SystemVerilog,748671916,SystemVerilog,8-bit-multiplier_SystemVerilog,6,0,2024-01-26 14:17:38+00:00,[],
16130,https://github.com/panostom/embedded_systems_pico_blaze.git,2024-01-29 12:09:55+00:00,,0,panostom/embedded_systems_pico_blaze,749792613,SystemVerilog,embedded_systems_pico_blaze,9,0,2024-01-29 12:15:04+00:00,[],
16131,https://github.com/Vishal2020Raja/LFAdder.git,2024-01-30 11:56:02+00:00,,0,Vishal2020Raja/LFAdder,750309412,SystemVerilog,LFAdder,59,0,2024-01-31 20:33:41+00:00,[],
16132,https://github.com/joaopmarinho/Risc-v-Pipeline.git,2024-02-02 19:46:28+00:00,,2,joaopmarinho/Risc-v-Pipeline,752000987,SystemVerilog,Risc-v-Pipeline,236,0,2024-02-02 19:56:30+00:00,[],
16133,https://github.com/jeffdi/mest-hdl-test.git,2024-02-04 01:51:30+00:00,,0,jeffdi/mest-hdl-test,752491661,SystemVerilog,mest-hdl-test,46,0,2024-02-04 01:51:35+00:00,[],https://api.github.com/licenses/apache-2.0
16134,https://github.com/berfinduman/riscv_superscalar.git,2024-02-07 12:18:56+00:00,final project of  RISC-V Architecture &Processor,0,berfinduman/riscv_superscalar,754107804,SystemVerilog,riscv_superscalar,16966,0,2024-02-07 12:24:17+00:00,[],
16135,https://github.com/GlennWilliam/TugOfWar.git,2024-02-17 22:00:26+00:00,,0,GlennWilliam/TugOfWar,759185100,SystemVerilog,TugOfWar,9,0,2024-02-17 22:02:50+00:00,[],
16136,https://github.com/celcius-plus-273/riscv-cpu.git,2024-02-03 16:44:26+00:00,,0,celcius-plus-273/riscv-cpu,752329531,SystemVerilog,riscv-cpu,47,0,2024-02-09 23:54:12+00:00,[],
16137,https://github.com/rakshitharnayak/sr_latch_verification.git,2024-02-14 05:28:30+00:00,,0,rakshitharnayak/sr_latch_verification,757253510,SystemVerilog,sr_latch_verification,22,0,2024-02-14 05:29:09+00:00,[],
16138,https://github.com/Maani02/sr_ff_uvm_verification.git,2024-02-14 05:45:51+00:00,,0,Maani02/sr_ff_uvm_verification,757258463,SystemVerilog,sr_ff_uvm_verification,6439,0,2024-02-14 05:47:42+00:00,[],
16139,https://github.com/Srivathsa2304/SR_COVERAGE.git,2024-02-14 05:33:13+00:00,,0,Srivathsa2304/SR_COVERAGE,757254818,SystemVerilog,SR_COVERAGE,450,0,2024-02-14 05:33:48+00:00,[],
16140,https://github.com/Rakesh2916728272727/UVM_SR_LATCH.git,2024-02-14 07:26:16+00:00,,0,Rakesh2916728272727/UVM_SR_LATCH,757290001,SystemVerilog,UVM_SR_LATCH,50,0,2024-02-14 07:27:09+00:00,[],
16141,https://github.com/weilincao/verilog_playground.git,2024-02-13 16:29:43+00:00,,0,weilincao/verilog_playground,756958653,SystemVerilog,verilog_playground,0,0,2024-02-13 16:31:39+00:00,[],
16142,https://github.com/mohdUsman-6508/verilog-systemverilog.git,2024-02-13 16:39:08+00:00,,0,mohdUsman-6508/verilog-systemverilog,756963164,SystemVerilog,verilog-systemverilog,0,0,2024-02-13 17:20:20+00:00,[],
16143,https://github.com/manchii/ejemplos-systemverilog.git,2024-02-13 14:39:20+00:00,,0,manchii/ejemplos-systemverilog,756905659,SystemVerilog,ejemplos-systemverilog,9,0,2024-02-13 14:41:26+00:00,[],
16144,https://github.com/haseeb-hassan/lab-3.git,2024-02-19 15:54:02+00:00,this lab is done by xilinx vivado,0,haseeb-hassan/lab-3,759928535,SystemVerilog,lab-3,199,0,2024-02-19 15:57:24+00:00,[],
16145,https://github.com/saira-ijaz/lab_3.git,2024-02-19 16:09:40+00:00,,0,saira-ijaz/lab_3,759935847,SystemVerilog,lab_3,72,0,2024-02-19 16:10:50+00:00,[],
16146,https://github.com/AlexEduardo-zip/TP2_ISL_Multiplicador_verilog.git,2024-02-20 03:13:55+00:00,,0,AlexEduardo-zip/TP2_ISL_Multiplicador_verilog,760235188,SystemVerilog,TP2_ISL_Multiplicador_verilog,82,0,2024-02-20 03:14:01+00:00,[],
16147,https://github.com/umamah2004/Lab3.git,2024-02-19 16:47:25+00:00,,0,umamah2004/Lab3,760011108,SystemVerilog,Lab3,28,0,2024-02-19 17:03:23+00:00,[],
16148,https://github.com/nafeesanawar/Baccarat-Game.git,2024-02-22 03:03:33+00:00,This folder contains a replica of a Baccarat game made using System Verilog (a hardware description and hardware verification language). ,0,nafeesanawar/Baccarat-Game,761545944,SystemVerilog,Baccarat-Game,12,0,2024-02-22 03:07:36+00:00,[],
16149,https://github.com/sreemanvitha/Team-8-Asynchronous-FIFO.git,2024-02-03 05:18:13+00:00,,0,sreemanvitha/Team-8-Asynchronous-FIFO,752127056,SystemVerilog,Team-8-Asynchronous-FIFO,46,0,2024-02-04 03:59:20+00:00,[],
16150,https://github.com/rasannakumar/amp.git,2024-02-27 00:03:57+00:00,,0,rasannakumar/amp,763801261,SystemVerilog,amp,5,0,2024-02-27 00:08:20+00:00,[],
16151,https://github.com/albchi/TrafficGenAi.git,2024-02-27 01:54:21+00:00,,0,albchi/TrafficGenAi,763831632,SystemVerilog,TrafficGenAi,2,0,2024-02-27 01:56:46+00:00,[],
16152,https://github.com/cuongdp2k2/AXI_VIP.git,2024-03-04 07:55:05+00:00,,0,cuongdp2k2/AXI_VIP,766830379,SystemVerilog,AXI_VIP,14798,0,2024-03-04 07:59:32+00:00,[],
16153,https://github.com/gk2000/CSCE-714-Lab2.git,2024-03-04 02:40:20+00:00,,1,gk2000/CSCE-714-Lab2,766732969,SystemVerilog,CSCE-714-Lab2,374,0,2024-03-04 02:42:38+00:00,[],
16154,https://github.com/AhmedibnaNaveed/task4.git,2024-03-05 06:11:06+00:00,,0,AhmedibnaNaveed/task4,767349892,SystemVerilog,task4,95,0,2024-03-05 06:20:02+00:00,[],
16155,https://github.com/belenosb/Memory-Controller-Verification.git,2024-03-05 05:53:35+00:00,"Developed and implemented a shared memory module controller in SystemVerilog, followed by the creation of a comprehensive test plan",0,belenosb/Memory-Controller-Verification,767344058,SystemVerilog,Memory-Controller-Verification,55,0,2024-03-05 05:54:07+00:00,[],
16156,https://github.com/parvathy10/System-Verilog.git,2024-02-09 13:03:23+00:00,,0,parvathy10/System-Verilog,755102359,SystemVerilog,System-Verilog,1,0,2024-03-06 12:01:40+00:00,[],
16157,https://github.com/ninjasnigel/AI-Design.git,2024-01-30 09:02:39+00:00,,0,ninjasnigel/AI-Design,750239872,SystemVerilog,AI-Design,5646,0,2024-02-12 20:34:59+00:00,[],
16158,https://github.com/aHarry01/ECSE6680-Adv-VLSI-Design.git,2024-02-19 18:15:48+00:00,,0,aHarry01/ECSE6680-Adv-VLSI-Design,760068919,SystemVerilog,ECSE6680-Adv-VLSI-Design,470,0,2024-03-04 14:50:23+00:00,[],
16159,https://github.com/rakshita-20/SystemVerilog_Final_Project.git,2024-02-21 09:00:27+00:00,"The project involves system-level design and integration, creation and use of SystemVerilog interfaces, $readmemh, bus-functional models, FSM modeling, & using protected SystemVerilog IP.",1,rakshita-20/SystemVerilog_Final_Project,761109720,SystemVerilog,SystemVerilog_Final_Project,7362,0,2024-03-05 09:49:59+00:00,[],
16160,https://github.com/tomrsae/pico-mips-processor.git,2024-02-26 11:38:52+00:00,,0,tomrsae/pico-mips-processor,763484856,SystemVerilog,pico-mips-processor,17,0,2024-02-26 14:40:19+00:00,[],
16161,https://github.com/Maaaaark001/my_FPAG_lib.git,2024-02-21 05:35:46+00:00,my_FPAG_lib,0,Maaaaark001/my_FPAG_lib,761033393,SystemVerilog,my_FPAG_lib,1747,0,2024-02-21 06:09:01+00:00,[],
16162,https://github.com/AugustoRGomez/sv-for-sim-and-synth.git,2024-02-27 00:03:07+00:00,"This repository contains a collection of System Verilog exercises I've worked on while studying the book ""RTL Modeling with SystemVerilog for Simulation and Synthesis"" by Stuart Sutherland.",0,AugustoRGomez/sv-for-sim-and-synth,763801047,SystemVerilog,sv-for-sim-and-synth,8,0,2024-03-03 20:51:20+00:00,[],https://api.github.com/licenses/mit
16163,https://github.com/2022ee134/Digital-system-lab.git,2024-02-05 20:51:46+00:00,,0,2022ee134/Digital-system-lab,753293858,SystemVerilog,Digital-system-lab,3501,0,2024-02-05 21:28:12+00:00,[],
16164,https://github.com/drandyhaas/qts_qsfp_sdi.git,2024-02-04 20:19:40+00:00,,0,drandyhaas/qts_qsfp_sdi,752794306,SystemVerilog,qts_qsfp_sdi,503974,0,2024-02-04 22:23:33+00:00,[],https://api.github.com/licenses/mit
16165,https://github.com/singh-rozer/UVM.git,2024-02-03 06:50:57+00:00,,0,singh-rozer/UVM,752147477,SystemVerilog,UVM,934,0,2024-02-03 07:21:27+00:00,[],
16166,https://github.com/achellasamy/Matrix_Multiplier_Accelerator-.git,2024-02-27 02:20:39+00:00,Hardware acceleration of matrix multiplication,0,achellasamy/Matrix_Multiplier_Accelerator-,763839578,SystemVerilog,Matrix_Multiplier_Accelerator-,5,0,2024-02-27 02:21:22+00:00,[],
16167,https://github.com/DenizBianca09/TSC.git,2024-02-25 13:48:40+00:00,,0,DenizBianca09/TSC,763074127,SystemVerilog,TSC,9381,0,2024-03-04 08:07:58+00:00,[],
16168,https://github.com/aghasukerim/ELEC_422_Minesweeper.git,2024-02-26 20:11:31+00:00,Chip implementation of simplified minesweeper game.,0,aghasukerim/ELEC_422_Minesweeper,763726807,SystemVerilog,ELEC_422_Minesweeper,17444,0,2024-02-28 04:07:33+00:00,[],
16169,https://github.com/qqwert0/swRDMA.git,2024-03-01 05:54:28+00:00,,1,qqwert0/swRDMA,765541659,SystemVerilog,swRDMA,4187,0,2024-03-01 05:57:26+00:00,[],
16170,https://github.com/isa-gr9/verification.git,2024-03-05 20:57:07+00:00,,0,isa-gr9/verification,767754590,SystemVerilog,verification,1773,0,2024-03-05 20:58:11+00:00,[],
16171,https://github.com/karlami/CE4302-P1.git,2024-02-28 03:53:40+00:00,,1,karlami/CE4302-P1,764429301,SystemVerilog,CE4302-P1,198,0,2024-04-10 18:31:14+00:00,[],
16172,https://github.com/manmohanverma1234/100_days_of_RTl_design.git,2024-02-22 11:06:20+00:00,,0,manmohanverma1234/100_days_of_RTl_design,761718448,SystemVerilog,100_days_of_RTl_design,1042,0,2024-02-22 16:48:24+00:00,[],
16173,https://github.com/flaviens/yosys-b2.git,2024-01-26 12:59:09+00:00,,0,flaviens/yosys-b2,748644681,SystemVerilog,yosys-b2,1,0,2024-01-26 13:04:08+00:00,[],
16174,https://github.com/RAKESHKVS09/UVM-Universal-Verification-Methodology-.git,2024-01-30 08:00:28+00:00,,0,RAKESHKVS09/UVM-Universal-Verification-Methodology-,750216128,SystemVerilog,UVM-Universal-Verification-Methodology-,146,0,2024-01-30 08:04:34+00:00,[],
16175,https://github.com/harnoor381/CPEN211-labs.git,2024-01-27 05:27:43+00:00,,0,harnoor381/CPEN211-labs,748943185,SystemVerilog,CPEN211-labs,773,0,2024-01-27 05:32:47+00:00,[],
16176,https://github.com/NavaneethNarK/Router-Design-Verification.git,2024-01-31 14:31:51+00:00,this is a project that contains the design and verification of a 1x3 router with a certain protocol(user drfined),0,NavaneethNarK/Router-Design-Verification,750892796,SystemVerilog,Router-Design-Verification,18,0,2024-01-31 15:08:01+00:00,[],
16177,https://github.com/SalmanAslam07/lab2.git,2024-02-03 10:27:43+00:00,,0,SalmanAslam07/lab2,752200101,SystemVerilog,lab2,2,0,2024-02-03 10:29:39+00:00,[],
16178,https://github.com/saira-ijaz/lab_2.git,2024-02-07 11:07:26+00:00,,0,saira-ijaz/lab_2,754079333,SystemVerilog,lab_2,3,0,2024-02-07 11:07:54+00:00,[],
16179,https://github.com/UrfanoEllris/Verilog-Projects.git,2024-02-03 21:49:58+00:00,,0,UrfanoEllris/Verilog-Projects,752449545,SystemVerilog,Verilog-Projects,7,0,2024-02-04 02:38:03+00:00,[],
16180,https://github.com/atsanak/counter.git,2024-02-07 01:01:22+00:00,SystemVerilog module for a 4-bit synchronous up/down counter,0,atsanak/counter,753885097,SystemVerilog,counter,2,0,2024-02-07 19:50:12+00:00,[],
16181,https://github.com/perlindgren/verilog_test.git,2024-02-14 10:06:03+00:00,,0,perlindgren/verilog_test,757347708,SystemVerilog,verilog_test,8,0,2024-02-14 10:40:05+00:00,[],
16182,https://github.com/Omar-farhan1084/covg_sr.git,2024-02-14 06:49:38+00:00,,0,Omar-farhan1084/covg_sr,757277956,SystemVerilog,covg_sr,7,0,2024-02-14 06:50:31+00:00,[],
16183,https://github.com/KnowAashish/SystemVerilog-Design_Verification_of_UART.git,2024-02-02 01:16:45+00:00,This repository contains detailed RTL design and TB verification of a UART.,0,KnowAashish/SystemVerilog-Design_Verification_of_UART,751625446,SystemVerilog,SystemVerilog-Design_Verification_of_UART,23,0,2024-02-13 02:40:44+00:00,[],
16184,https://github.com/uqasha524m/Digital-System-Design.git,2024-02-15 18:49:00+00:00,,0,uqasha524m/Digital-System-Design,758165556,SystemVerilog,Digital-System-Design,317,0,2024-02-15 18:58:47+00:00,[],
16185,https://github.com/wasey299/Team9_ECE593W24_Project.git,2024-01-31 01:10:17+00:00,,0,wasey299/Team9_ECE593W24_Project,750615038,SystemVerilog,Team9_ECE593W24_Project,3026,0,2024-02-04 05:26:01+00:00,[],
16186,https://github.com/jagan191/process-and-process-control.git,2024-02-19 15:33:23+00:00,,0,jagan191/process-and-process-control,759919147,SystemVerilog,process-and-process-control,2,0,2024-02-19 15:36:10+00:00,[],
16187,https://github.com/Hammad1341/Lab_3.git,2024-02-19 15:44:40+00:00,,0,Hammad1341/Lab_3,759924263,SystemVerilog,Lab_3,119,0,2024-02-19 15:55:44+00:00,[],
16188,https://github.com/parvathy10/interface.git,2024-02-19 18:16:28+00:00,,0,parvathy10/interface,760069230,SystemVerilog,interface,1,0,2024-02-19 18:18:30+00:00,[],
16189,https://github.com/vignathajasti/practice_1.git,2024-02-21 12:09:48+00:00,,0,vignathajasti/practice_1,761189305,SystemVerilog,practice_1,1,0,2024-02-21 12:13:59+00:00,[],
16190,https://github.com/kronk99/Lgonzalez_digital_design_lab_2023.git,2024-02-11 00:43:16+00:00,,0,kronk99/Lgonzalez_digital_design_lab_2023,755760544,SystemVerilog,Lgonzalez_digital_design_lab_2023,164749,0,2024-02-21 18:57:23+00:00,[],
16191,https://github.com/AraRox/PUMED.git,2024-02-20 07:35:22+00:00,"Pipelined Universal Multiplexer, Demultiplexer, Encoder and Decoder | System Verilog • Implemented pipelining by incorporating modularity among various universal functionalities using OOPS, with the ability to be used simultaneously in a variety of applications.",0,AraRox/PUMED,760317183,SystemVerilog,PUMED,12,0,2024-02-20 07:40:17+00:00,[],
16192,https://github.com/jmbert/risci.git,2024-02-19 21:44:55+00:00,,0,jmbert/risci,760147111,SystemVerilog,risci,17,0,2024-02-19 21:45:07+00:00,[],
16193,https://github.com/malthus4619/Shubham-Axi4-stream-protocol.git,2024-02-16 08:41:32+00:00,UVM Based AXI4-STREAM VIP Master and Slave Protocol ,0,malthus4619/Shubham-Axi4-stream-protocol,758402039,SystemVerilog,Shubham-Axi4-stream-protocol,27,0,2024-02-29 06:19:43+00:00,[],
16194,https://github.com/anirudhl0/-afs-asu.edu-users-a-l-a-alaksh26-eee598sdm-old_homework01-.git-.git,2024-02-29 04:57:03+00:00,Old homework,0,anirudhl0/-afs-asu.edu-users-a-l-a-alaksh26-eee598sdm-old_homework01-.git-,764997823,SystemVerilog,-afs-asu.edu-users-a-l-a-alaksh26-eee598sdm-old_homework01-.git-,4,0,2024-02-29 05:06:23+00:00,[],
16195,https://github.com/aleighwood/system_verilog_design.git,2024-02-25 14:03:32+00:00,,0,aleighwood/system_verilog_design,763079203,SystemVerilog,system_verilog_design,51,0,2024-02-26 17:17:31+00:00,[],
16196,https://github.com/pedrohfmacedo/old_machine.git,2024-02-29 19:27:27+00:00,,0,pedrohfmacedo/old_machine,765365804,SystemVerilog,old_machine,13760,0,2024-02-29 19:29:48+00:00,[],
16197,https://github.com/look4raghav/major_project.git,2024-02-22 12:03:05+00:00,major project of college final sem,0,look4raghav/major_project,761741446,SystemVerilog,major_project,16,0,2024-02-22 12:03:37+00:00,[],
16198,https://github.com/jmbert/vlsiw.git,2024-03-03 12:05:58+00:00,,0,jmbert/vlsiw,766487283,SystemVerilog,vlsiw,4,0,2024-03-03 12:06:44+00:00,[],
16199,https://github.com/Arunvaishnav7435/string_type.git,2024-03-01 17:30:13+00:00,,0,Arunvaishnav7435/string_type,765823565,SystemVerilog,string_type,4,0,2024-03-01 17:31:56+00:00,[],
16200,https://github.com/ChokaThenappan/NOCtoAXImaster.git,2024-03-04 20:21:15+00:00,,1,ChokaThenappan/NOCtoAXImaster,767165629,SystemVerilog,NOCtoAXImaster,11,0,2024-03-04 20:24:02+00:00,[],
16201,https://github.com/majdabdo2/EE-lab-a---project.git,2024-03-04 14:39:31+00:00, developed a Pacman game on an FPGA using SystemVerilog with VGA display.,0,majdabdo2/EE-lab-a---project,767007818,SystemVerilog,EE-lab-a---project,54972,0,2024-03-05 14:33:00+00:00,[],https://api.github.com/licenses/apache-2.0
16202,https://github.com/Pratyush-Mallick/ese5710_hw.git,2024-02-07 01:19:47+00:00,homework_submission for ese5710 fall,0,Pratyush-Mallick/ese5710_hw,753889775,SystemVerilog,ese5710_hw,999,0,2024-03-05 20:21:45+00:00,[],https://api.github.com/licenses/mit
16203,https://github.com/saira-ijaz/lab_4.git,2024-03-04 15:37:17+00:00,,0,saira-ijaz/lab_4,767036962,SystemVerilog,lab_4,87,0,2024-03-04 15:40:16+00:00,[],
16204,https://github.com/AhmedibnaNaveed/task5.git,2024-03-05 06:23:27+00:00,,0,AhmedibnaNaveed/task5,767354104,SystemVerilog,task5,275,0,2024-03-05 06:26:12+00:00,[],
16205,https://github.com/tpeterso8/tt-fpga-hdl-demo.git,2024-03-04 19:08:54+00:00,,0,tpeterso8/tt-fpga-hdl-demo,767135757,SystemVerilog,tt-fpga-hdl-demo,95,0,2024-03-04 19:09:00+00:00,[],https://api.github.com/licenses/apache-2.0
16206,https://github.com/davidz1234567890/hw5.git,2024-03-01 06:07:51+00:00,,0,davidz1234567890/hw5,765545651,SystemVerilog,hw5,14,0,2024-03-01 06:08:25+00:00,[],
16207,https://github.com/KM4500/full_adder_sv.git,2024-03-04 15:28:29+00:00,,0,KM4500/full_adder_sv,767032723,SystemVerilog,full_adder_sv,10,0,2024-03-09 11:19:42+00:00,[],
16208,https://github.com/MrDoomsday/Switch.git,2024-02-01 19:04:56+00:00,AXI Stream (packet mode) switch,0,MrDoomsday/Switch,751516970,SystemVerilog,Switch,18,0,2024-02-28 19:00:29+00:00,[],
16209,https://github.com/foez-ahmed-dsi/OPCTRL.git,2024-03-01 09:19:01+00:00,Operand Controller,0,foez-ahmed-dsi/OPCTRL,765614434,SystemVerilog,OPCTRL,3653,0,2024-03-01 09:37:39+00:00,[],https://api.github.com/licenses/apache-2.0
16210,https://github.com/iliasslasri/riscv-implementation.git,2024-02-19 13:36:51+00:00,,0,iliasslasri/riscv-implementation,759864205,SystemVerilog,riscv-implementation,33,0,2024-02-22 12:38:06+00:00,[],
16211,https://github.com/Nikhilesh2612/SV-Team-10.git,2024-03-03 03:57:38+00:00,,0,Nikhilesh2612/SV-Team-10,766365871,SystemVerilog,SV-Team-10,25,0,2024-03-21 03:20:35+00:00,[],
16212,https://github.com/JX518/Lab_4_SV_HDL.git,2024-03-02 04:36:11+00:00,,0,JX518/Lab_4_SV_HDL,766004549,SystemVerilog,Lab_4_SV_HDL,19107,0,2024-03-14 16:30:16+00:00,[],
16213,https://github.com/krishna12890/-100daysOfRTL.git,2024-03-04 07:13:20+00:00,RTL Coding Practice ,0,krishna12890/-100daysOfRTL,766814480,SystemVerilog,-100daysOfRTL,51,0,2024-03-06 06:19:01+00:00,[],
16214,https://github.com/vpaHduGroup/AVS3-RDOQ.git,2024-02-26 08:09:32+00:00,,0,vpaHduGroup/AVS3-RDOQ,763397213,SystemVerilog,AVS3-RDOQ,85,0,2024-03-19 08:26:51+00:00,[],
16215,https://github.com/ImtiyazAli1997/UVM.git,2024-02-12 22:27:37+00:00,,0,ImtiyazAli1997/UVM,756585663,SystemVerilog,UVM,3414,0,2024-02-12 22:27:42+00:00,[],
16216,https://github.com/Mujtabadar537/RISCV_Pipelined_Core.git,2024-02-19 06:59:54+00:00,RISCV Core supporting RV32I ISA and classical 5 stage pipeline . This core also has a forwarding unit for efficiently handling data hazards . ,0,Mujtabadar537/RISCV_Pipelined_Core,759699343,SystemVerilog,RISCV_Pipelined_Core,714,0,2024-02-27 17:09:24+00:00,[],
16217,https://github.com/someone13574/risc-v-cpu.git,2024-02-08 03:55:34+00:00,,0,someone13574/risc-v-cpu,754442489,SystemVerilog,risc-v-cpu,126,0,2024-04-05 18:52:10+00:00,[],
16219,https://github.com/GaalElbaz/blankingLed.git,2024-01-29 11:41:26+00:00," A clock with a frequency of 1Hz is generated, causing the LED on the Basys 3 board to blink every second.",0,GaalElbaz/blankingLed,749781975,SystemVerilog,blankingLed,2,0,2024-01-29 11:50:47+00:00,[],
16220,https://github.com/AsemDiab/Digital.git,2024-01-30 13:46:18+00:00,,0,AsemDiab/Digital,750355314,SystemVerilog,Digital,18158,0,2024-01-30 13:51:37+00:00,[],
16221,https://github.com/gagana21sindhu/LC3-Chip-Level-Functional-Verification-using-UVM.git,2024-01-31 21:40:23+00:00,"To create a hierarchical UVM test bench that included environment components, agents, drivers, monitors, Bus Functional Models, and a scoreboard for evaluating the Decode block within the LC3 microcontroller.",0,gagana21sindhu/LC3-Chip-Level-Functional-Verification-using-UVM,751069574,SystemVerilog,LC3-Chip-Level-Functional-Verification-using-UVM,2834,0,2024-01-31 21:42:44+00:00,[],
16222,https://github.com/vladimirkuzia/I2c_interface.git,2024-02-01 02:23:16+00:00,,0,vladimirkuzia/I2c_interface,751142360,SystemVerilog,I2c_interface,2259,0,2024-02-01 02:28:48+00:00,[],
16223,https://github.com/dpedro-1/4305_advanced_verilog.git,2024-01-31 06:25:57+00:00,,0,dpedro-1/4305_advanced_verilog,750701264,SystemVerilog,4305_advanced_verilog,2,0,2024-01-31 07:09:58+00:00,[],
16224,https://github.com/its-perfect-for-tests/Adder_test.git,2024-02-04 16:49:13+00:00,,0,its-perfect-for-tests/Adder_test,752731886,SystemVerilog,Adder_test,22,0,2024-02-04 17:33:25+00:00,[],
16225,https://github.com/YusufGuldadov/-Hotel-door-lock-and-traffic-light-controller-on-FPGA.git,2024-02-04 14:19:53+00:00,"Designed and implemented a hotel door lock and traffic light controller on FPGA, utilizing a virtual logic analyser (Signal Tap) for effective debugging.",0,YusufGuldadov/-Hotel-door-lock-and-traffic-light-controller-on-FPGA,752683148,SystemVerilog,-Hotel-door-lock-and-traffic-light-controller-on-FPGA,2493,0,2024-02-04 14:24:34+00:00,[],
16226,https://github.com/mohammadmonjil/UVM_Cadence-course.git,2024-01-29 22:59:22+00:00,,0,mohammadmonjil/UVM_Cadence-course,750062542,SystemVerilog,UVM_Cadence-course,89,0,2024-01-30 04:28:14+00:00,[],
16228,https://github.com/AashiSrivastava/AD5628-Utilizing-System-Verilog-for-SPI-Communication.git,2024-02-09 05:00:00+00:00,I spearheaded the successful development of the AD5628 digital-to-analog converter (DAC) employing System Verilog for SPI communication.,0,AashiSrivastava/AD5628-Utilizing-System-Verilog-for-SPI-Communication,754949540,SystemVerilog,AD5628-Utilizing-System-Verilog-for-SPI-Communication,30,0,2024-02-09 05:00:29+00:00,[],
16229,https://github.com/SimplyArsh/lab_4.git,2024-02-03 07:02:32+00:00,,0,SimplyArsh/lab_4,752150162,SystemVerilog,lab_4,31,0,2024-02-03 07:03:45+00:00,[],
16230,https://github.com/XainSaeed/Digital-System---Lab-2.git,2024-02-12 18:26:27+00:00," In Lab 2, we designed and simulated a digital circuit using Verilog/SystemVerilog. Tasks included constructing a truth table, correcting errors in provided Verilog code, and developing a testbench for verification. Simulation using QuestaSim validated the correctness of the design.",0,XainSaeed/Digital-System---Lab-2,756474218,SystemVerilog,Digital-System---Lab-2,687,0,2024-02-13 05:23:41+00:00,[],
16231,https://github.com/ninju08/Mod_12_counter.git,2024-02-13 08:22:56+00:00,Design and Verification of Mod_12_counter using Verilog for Design and System Verilog for Verification. This project is simulated on Questa-sim and VCS,0,ninju08/Mod_12_counter,756745750,SystemVerilog,Mod_12_counter,12,0,2024-02-13 08:27:04+00:00,[],
16232,https://github.com/AhmedibnaNaveed/dsd_lab2.git,2024-02-13 05:32:42+00:00,,0,AhmedibnaNaveed/dsd_lab2,756689149,SystemVerilog,dsd_lab2,5,0,2024-02-13 05:33:54+00:00,[],
16233,https://github.com/Soujanyasalonkar/coverage.git,2024-02-14 07:04:56+00:00,,0,Soujanyasalonkar/coverage,757282895,SystemVerilog,coverage,68,0,2024-02-14 07:10:59+00:00,[],
16234,https://github.com/sumanthbs17/dram.git,2024-02-15 06:41:04+00:00,,0,sumanthbs17/dram,757869645,SystemVerilog,dram,8,0,2024-02-15 06:42:23+00:00,[],
16235,https://github.com/dr-skyler/tt-fpga-hdl-demo.git,2024-02-07 16:42:47+00:00,,0,dr-skyler/tt-fpga-hdl-demo,754228662,SystemVerilog,tt-fpga-hdl-demo,27,0,2024-02-07 16:42:54+00:00,[],https://api.github.com/licenses/apache-2.0
16236,https://github.com/M0rp/DLD.git,2024-02-02 18:55:03+00:00,,0,M0rp/DLD,751983560,SystemVerilog,DLD,17909,0,2024-02-16 18:36:35+00:00,[],https://api.github.com/licenses/mit
16237,https://github.com/sudeepn97/AHB2APB-Bridge-Verification.git,2024-02-19 08:06:44+00:00,,0,sudeepn97/AHB2APB-Bridge-Verification,759723985,SystemVerilog,AHB2APB-Bridge-Verification,12,0,2024-02-19 08:10:47+00:00,[],
16238,https://github.com/ammar-saqib/DSD.git,2024-02-13 08:43:29+00:00,DSD LAB 2024,0,ammar-saqib/DSD,756753201,SystemVerilog,DSD,3,0,2024-02-13 08:49:36+00:00,[],
16239,https://github.com/parajk1/256-to-8-Priority-Encoder-Circuit-Design.git,2024-02-22 04:40:39+00:00,,0,parajk1/256-to-8-Priority-Encoder-Circuit-Design,761572589,SystemVerilog,256-to-8-Priority-Encoder-Circuit-Design,203,0,2024-02-22 04:41:00+00:00,[],
16240,https://github.com/PhilipRWalleck/https-github.com-efabless-tt-fpga-demo.git,2024-02-26 21:07:39+00:00,tt-fpga-demo,0,PhilipRWalleck/https-github.com-efabless-tt-fpga-demo,763747585,SystemVerilog,https-github.com-efabless-tt-fpga-demo,13,0,2024-02-26 21:09:31+00:00,[],https://api.github.com/licenses/apache-2.0
16241,https://github.com/MeronZerihun/learning-generators.git,2024-02-26 21:30:34+00:00,,0,MeronZerihun/learning-generators,763755933,SystemVerilog,learning-generators,2,0,2024-02-26 22:11:56+00:00,[],
16242,https://github.com/AhmedAshour42/FIFO.git,2024-03-03 22:02:59+00:00,,0,AhmedAshour42/FIFO,766669580,SystemVerilog,FIFO,14,0,2024-03-03 23:13:59+00:00,[],
16243,https://github.com/MKamranManzoor/project4.git,2024-03-04 19:32:45+00:00,,0,MKamranManzoor/project4,767145585,SystemVerilog,project4,1897,0,2024-03-04 19:34:40+00:00,[],
16244,https://github.com/Vinaygowda1912/Verilog.git,2024-02-11 14:45:10+00:00,,0,Vinaygowda1912/Verilog,755944311,SystemVerilog,Verilog,114,0,2024-02-11 14:52:36+00:00,[],
16245,https://github.com/Asadd1503/DSD_Lab5.git,2024-03-04 18:37:51+00:00,my submission files of lab 5 of digital system design course. ,0,Asadd1503/DSD_Lab5,767122443,SystemVerilog,DSD_Lab5,1696,0,2024-03-04 18:42:07+00:00,[],
16246,https://github.com/anguyen1252/tt-fpga-hdl-demo.git,2024-02-28 18:43:51+00:00,,0,anguyen1252/tt-fpga-hdl-demo,764807689,SystemVerilog,tt-fpga-hdl-demo,108,0,2024-02-28 18:43:58+00:00,[],https://api.github.com/licenses/apache-2.0
16247,https://github.com/Gavino117/ECEN4243-Lab2.git,2024-02-23 23:43:57+00:00,Labaoratotrtor,0,Gavino117/ECEN4243-Lab2,762511634,SystemVerilog,ECEN4243-Lab2,594,0,2024-02-28 00:01:18+00:00,[],
16248,https://github.com/mnasirEE/single_cycle_processor_design_RISC-V_EE-UET_Lahore_CA.git,2024-03-02 10:38:23+00:00,,0,mnasirEE/single_cycle_processor_design_RISC-V_EE-UET_Lahore_CA,766099424,SystemVerilog,single_cycle_processor_design_RISC-V_EE-UET_Lahore_CA,669,0,2024-03-02 21:42:34+00:00,[],
16249,https://github.com/ayaahmed20018414/Verification-Course-using-system-Verilog-.git,2024-02-13 00:46:39+00:00,,0,ayaahmed20018414/Verification-Course-using-system-Verilog-,756618972,SystemVerilog,Verification-Course-using-system-Verilog-,887,0,2024-03-27 21:33:19+00:00,[],
16250,https://github.com/m-usama123/DSD2022-EE-116.git,2024-02-05 09:30:27+00:00,,0,m-usama123/DSD2022-EE-116,753004541,SystemVerilog,DSD2022-EE-116,7458,0,2024-02-05 13:14:40+00:00,[],
16251,https://github.com/DanielS01ss/TSC.git,2024-02-21 06:37:27+00:00,,0,DanielS01ss/TSC,761054153,SystemVerilog,TSC,191,0,2024-02-28 07:41:39+00:00,[],
16252,https://github.com/danbaws/TSC.git,2024-02-21 06:30:12+00:00,,0,danbaws/TSC,761051652,SystemVerilog,TSC,8229,0,2024-02-28 07:42:38+00:00,[],
16253,https://github.com/MihaiSuciu11/TSC.git,2024-02-28 07:25:20+00:00,,0,MihaiSuciu11/TSC,764498650,SystemVerilog,TSC,8248,0,2024-02-28 07:50:16+00:00,[],
16254,https://github.com/santiagov01/Lab_Digital_2.git,2024-02-14 21:53:10+00:00,,0,santiagov01/Lab_Digital_2,757739106,SystemVerilog,Lab_Digital_2,74,0,2024-02-14 23:31:57+00:00,[],
16255,https://github.com/Skiiippp/OtterCache.git,2024-03-03 01:46:33+00:00,CPE333 Lab 2,0,Skiiippp/OtterCache,766342150,SystemVerilog,OtterCache,99,0,2024-03-03 02:04:24+00:00,[],
16256,https://github.com/FPGASystemsLab/src.rbus.git,2024-02-13 19:17:17+00:00,,0,FPGASystemsLab/src.rbus,757060945,SystemVerilog,src.rbus,475,0,2024-02-13 19:18:40+00:00,[],https://api.github.com/licenses/mit
16257,https://github.com/riscva/pipelined_riscv.git,2024-01-29 09:58:54+00:00,,0,riscva/pipelined_riscv,749741895,SystemVerilog,pipelined_riscv,16,0,2024-01-29 09:59:01+00:00,[],
16258,https://github.com/zhaiyunfan/FMRadioFPGA.git,2024-03-02 18:01:23+00:00,,0,zhaiyunfan/FMRadioFPGA,766239111,SystemVerilog,FMRadioFPGA,7749,0,2024-03-19 21:59:35+00:00,[],
16259,https://github.com/Emirhan-Kilic/systemVerilogBasys3TrafficLightDesign.git,2024-02-26 12:33:24+00:00,System Verilog implementation of simple Traffic Light System for Basys3,0,Emirhan-Kilic/systemVerilogBasys3TrafficLightDesign,763507509,SystemVerilog,systemVerilogBasys3TrafficLightDesign,1,0,2024-02-26 12:34:21+00:00,[],
16260,https://github.com/axyrai/constraintsSystemVerilog.git,2024-02-25 10:11:01+00:00,,0,axyrai/constraintsSystemVerilog,763008927,SystemVerilog,constraintsSystemVerilog,1,0,2024-02-25 10:28:45+00:00,[],
16261,https://github.com/PhilipRWalleck/https-github.com-efabless-tt-fpga-hdl-demo.git,2024-02-26 21:10:40+00:00,tt-fpga-hdl-demo,0,PhilipRWalleck/https-github.com-efabless-tt-fpga-hdl-demo,763748711,SystemVerilog,https-github.com-efabless-tt-fpga-hdl-demo,11,0,2024-02-26 21:10:46+00:00,[],https://api.github.com/licenses/apache-2.0
16262,https://github.com/eachan10/asyncfifo.git,2024-02-15 19:26:23+00:00,,0,eachan10/asyncfifo,758179578,SystemVerilog,asyncfifo,24,0,2024-02-15 19:35:35+00:00,[],
16263,https://github.com/Divyakutala03/UVM.git,2024-02-19 10:13:13+00:00,,0,Divyakutala03/UVM,759777999,SystemVerilog,UVM,30,0,2024-02-20 10:28:22+00:00,[],
16264,https://github.com/Arunvaishnav7435/SV_int_type.git,2024-02-28 16:05:15+00:00,,0,Arunvaishnav7435/SV_int_type,764733727,SystemVerilog,SV_int_type,3,0,2024-02-28 16:28:35+00:00,[],
16265,https://github.com/Gorruy/sort.git,2024-02-09 01:18:29+00:00,,0,Gorruy/sort,754900590,SystemVerilog,sort,13107,0,2024-02-09 07:01:20+00:00,[],
16266,https://github.com/PedroLucas00/projeto_IH_RISCV.git,2024-02-15 17:25:45+00:00,,0,PedroLucas00/projeto_IH_RISCV,758132077,SystemVerilog,projeto_IH_RISCV,24358,0,2024-03-02 02:24:24+00:00,[],https://api.github.com/licenses/apache-2.0
16267,https://github.com/Ans-Qasim123/lab-5.git,2024-03-04 17:35:15+00:00,,0,Ans-Qasim123/lab-5,767094030,SystemVerilog,lab-5,484,0,2024-03-04 17:40:41+00:00,[],
16268,https://github.com/umamah2004/lab-4.git,2024-03-04 17:43:59+00:00,,0,umamah2004/lab-4,767098019,SystemVerilog,lab-4,172,0,2024-03-04 17:45:07+00:00,[],
16269,https://github.com/TayybaShafiq/Lab5.git,2024-03-04 17:20:42+00:00,,0,TayybaShafiq/Lab5,767087345,SystemVerilog,Lab5,41,0,2024-03-04 17:21:51+00:00,[],
16270,https://github.com/Hammad1341/DSD-Lab-4.git,2024-03-04 17:27:40+00:00,,0,Hammad1341/DSD-Lab-4,767090551,SystemVerilog,DSD-Lab-4,588,0,2024-03-04 17:34:15+00:00,[],
16271,https://github.com/QamarRaja/lab-5.git,2024-03-04 19:37:31+00:00,my assingment#5,0,QamarRaja/lab-5,767147639,SystemVerilog,lab-5,1597,0,2024-03-04 19:46:18+00:00,[],
16272,https://github.com/BMMADHUMITHA/fibonacci.git,2024-03-03 21:50:06+00:00,,0,BMMADHUMITHA/fibonacci,766666496,SystemVerilog,fibonacci,7,0,2024-03-03 21:57:21+00:00,[],
16273,https://github.com/BMMADHUMITHA/Asynchronous_FIFO.git,2024-03-03 20:50:57+00:00,,0,BMMADHUMITHA/Asynchronous_FIFO,766651580,SystemVerilog,Asynchronous_FIFO,15,0,2024-03-03 21:08:02+00:00,[],
16274,https://github.com/Daniil-Horobets/Catch_the_Apple.git,2024-03-01 17:11:30+00:00,VGA Controller using FPGA / VHDL + game,0,Daniil-Horobets/Catch_the_Apple,765815677,SystemVerilog,Catch_the_Apple,33873,0,2024-03-06 08:31:28+00:00,"['fpga', 'game', 'vga', 'vhdl']",https://api.github.com/licenses/mit
16275,https://github.com/HoesenG/fm_radio.git,2024-03-05 00:16:45+00:00,,0,HoesenG/fm_radio,767244652,SystemVerilog,fm_radio,27946,0,2024-03-05 00:51:07+00:00,[],
16276,https://github.com/vlaciclazar/3TB4-Labs.git,2024-01-28 03:58:10+00:00,,0,vlaciclazar/3TB4-Labs,749269048,SystemVerilog,3TB4-Labs,98250,0,2024-04-01 19:15:47+00:00,[],
16277,https://github.com/Smruti-2001/I2C-MASTER-AND-SLAVE-DESIGN-USING_SYSTEMVERILOG.git,2024-01-26 09:37:51+00:00,"DESIGNA AND VERIFY I2C MASTER AND SLAVE USING THE SV MODULES, ALSO CHECK HOW THE DATA TRANSFORMS IN TESTBENCH ENVIRONMENT ",0,Smruti-2001/I2C-MASTER-AND-SLAVE-DESIGN-USING_SYSTEMVERILOG,748575123,SystemVerilog,I2C-MASTER-AND-SLAVE-DESIGN-USING_SYSTEMVERILOG,8,0,2024-01-26 09:38:47+00:00,[],
16278,https://github.com/Smruti-2001/DESIGN-AND-VERIFY-APB-RAM-USING-SYSTEMVERILOG-.git,2024-01-26 15:22:43+00:00,USING SYSTEM VERILOG DESIGN AND VERIFY THE AMBA APB RAM,0,Smruti-2001/DESIGN-AND-VERIFY-APB-RAM-USING-SYSTEMVERILOG-,748701955,SystemVerilog,DESIGN-AND-VERIFY-APB-RAM-USING-SYSTEMVERILOG-,7,0,2024-01-26 15:27:35+00:00,[],
16279,https://github.com/panostom/embedded_systems.git,2024-01-29 11:47:22+00:00,project of multiprocessing systems in integrated circuits course,0,panostom/embedded_systems,749784144,SystemVerilog,embedded_systems,556,0,2024-01-29 12:03:44+00:00,[],
16280,https://github.com/Karl-Han/up_down_counter.git,2024-01-29 04:06:53+00:00,Up/Down Counter Implementation with CBV,0,Karl-Han/up_down_counter,749625966,SystemVerilog,up_down_counter,3467,0,2024-01-29 04:07:39+00:00,[],
16281,https://github.com/harshvardhan189/Router-1x3.git,2024-01-30 11:38:03+00:00,Router 1x3 Verification through UVM,0,harshvardhan189/Router-1x3,750302580,SystemVerilog,Router-1x3,579,0,2024-01-30 13:26:41+00:00,[],
16282,https://github.com/ubaidfayyaz/dsd_lab.git,2024-01-31 10:06:25+00:00,My assignments for DSD Lab.,0,ubaidfayyaz/dsd_lab,750783165,SystemVerilog,dsd_lab,1,0,2024-01-31 10:29:02+00:00,[],
16283,https://github.com/fsaev/TinyMCU.git,2024-02-03 23:32:19+00:00,"A tiny custom made 8-bit processor with MMIO peripherals, made for Xilinx FPGA",0,fsaev/TinyMCU,752468713,SystemVerilog,TinyMCU,35,0,2024-02-03 23:45:47+00:00,[],https://api.github.com/licenses/mit
16284,https://github.com/tjuntiff/efabless-tt-fpga-hdl-demo.git,2024-02-07 16:35:04+00:00,,0,tjuntiff/efabless-tt-fpga-hdl-demo,754225049,SystemVerilog,efabless-tt-fpga-hdl-demo,11,0,2024-02-07 16:35:13+00:00,[],https://api.github.com/licenses/apache-2.0
16285,https://github.com/SiddharthRajaraman/ECE385.git,2024-02-07 16:52:02+00:00,,0,SiddharthRajaraman/ECE385,754232873,SystemVerilog,ECE385,1162,0,2024-02-07 22:40:06+00:00,[],
16286,https://github.com/EmanuelAraya30/TFG_tec.git,2024-02-11 02:43:07+00:00,,0,EmanuelAraya30/TFG_tec,755778058,SystemVerilog,TFG_tec,0,0,2024-02-11 03:06:11+00:00,[],
16287,https://github.com/Hassan-muavia62/lab_2_dsd.git,2024-02-12 18:42:26+00:00,,0,Hassan-muavia62/lab_2_dsd,756480806,SystemVerilog,lab_2_dsd,17,0,2024-02-12 18:43:09+00:00,[],
16288,https://github.com/Shreyas-s-r/NoC-Router-Asynchronous-.git,2024-02-12 14:30:20+00:00,Simulation of Network on Chip Router ,0,Shreyas-s-r/NoC-Router-Asynchronous-,756367590,SystemVerilog,NoC-Router-Asynchronous-,148,0,2024-02-12 15:37:15+00:00,[],
16289,https://github.com/chaoqun-liang/idma-eth.git,2024-02-13 22:59:22+00:00,,0,chaoqun-liang/idma-eth,757156880,SystemVerilog,idma-eth,5077,0,2024-02-13 23:06:28+00:00,[],
16290,https://github.com/romychs/SprinterJoy.git,2024-01-29 18:59:20+00:00,ISA-8 board for two sega joysticks (pads),0,romychs/SprinterJoy,749978512,SystemVerilog,SprinterJoy,842,0,2024-01-30 08:12:02+00:00,[],https://api.github.com/licenses/bsd-3-clause
16291,https://github.com/Sukhithaaithal/DPRAM.git,2024-02-15 06:48:56+00:00,,0,Sukhithaaithal/DPRAM,757872281,SystemVerilog,DPRAM,24,0,2024-02-15 07:38:05+00:00,[],
16292,https://github.com/SamiIonesi/Binary_Calculator.git,2024-02-16 13:49:00+00:00,,0,SamiIonesi/Binary_Calculator,758516759,SystemVerilog,Binary_Calculator,12212,0,2024-02-16 15:30:15+00:00,[],
16293,https://github.com/rabbitrace/MIPS.git,2024-02-20 03:59:18+00:00,,0,rabbitrace/MIPS,760247913,SystemVerilog,MIPS,5,0,2024-02-20 04:00:15+00:00,[],
16294,https://github.com/rabbitrace/bfloat_16_adder.git,2024-02-20 03:57:10+00:00,,0,rabbitrace/bfloat_16_adder,760247343,SystemVerilog,bfloat_16_adder,845,0,2024-02-20 03:58:01+00:00,[],
16295,https://github.com/mathehertogh/uart.git,2024-02-20 06:21:21+00:00,,0,mathehertogh/uart,760290806,SystemVerilog,uart,64,0,2024-02-20 06:22:39+00:00,[],
16296,https://github.com/Vishwanath155/Sample-Codes.git,2024-02-18 06:58:24+00:00,,0,Vishwanath155/Sample-Codes,759288813,SystemVerilog,Sample-Codes,2,0,2024-02-18 06:59:19+00:00,[],
16297,https://github.com/alphasoyboi/PROJ300.git,2024-02-14 12:47:45+00:00,,0,alphasoyboi/PROJ300,757410712,SystemVerilog,PROJ300,14864,0,2024-02-15 16:28:46+00:00,[],
16298,https://github.com/PSSTools/pss-uvm-util.git,2024-02-05 15:52:31+00:00,Utility classes for using PSS in a UVM environment,0,PSSTools/pss-uvm-util,753169737,SystemVerilog,pss-uvm-util,9,0,2024-02-06 03:13:06+00:00,[],https://api.github.com/licenses/apache-2.0
16299,https://github.com/mnasirEE/combinational-circuits-design_Computer-Architecture.git,2024-02-20 09:27:34+00:00,,0,mnasirEE/combinational-circuits-design_Computer-Architecture,760362864,SystemVerilog,combinational-circuits-design_Computer-Architecture,46,0,2024-02-21 18:23:39+00:00,[],
16300,https://github.com/zhangyj-ops/axi_insert.git,2024-01-31 05:41:09+00:00,,0,zhangyj-ops/axi_insert,750687282,SystemVerilog,axi_insert,2761,0,2024-02-06 05:47:55+00:00,[],
16301,https://github.com/SkyM27/TSC.git,2024-02-28 07:37:44+00:00,,0,SkyM27/TSC,764503132,SystemVerilog,TSC,8431,0,2024-03-05 15:59:29+00:00,[],
16302,https://github.com/VairavanArun/hdl_practice.git,2024-01-26 16:39:58+00:00,Contains the work done to practice HDL and FPGA implementations,0,VairavanArun/hdl_practice,748732583,SystemVerilog,hdl_practice,4499,0,2024-01-26 18:11:59+00:00,[],
16303,https://github.com/AnaFallas/Digitales.git,2024-03-05 22:23:28+00:00,,0,AnaFallas/Digitales,767783560,SystemVerilog,Digitales,70,0,2024-03-26 20:36:35+00:00,[],
16304,https://github.com/gabogh123/Arqui2_Proyecto1.git,2024-03-05 23:21:39+00:00,Primer Proyecto del curso de Arquitectura de Computadores ,0,gabogh123/Arqui2_Proyecto1,767801878,SystemVerilog,Arqui2_Proyecto1,9577,0,2024-04-10 18:50:43+00:00,[],
16305,https://github.com/AashiSrivastava/Traffic-Light-Controller.git,2024-01-28 13:46:57+00:00,Develop a traffic light controller using SystemVerilog according to the provided specifications.A traffic light controller is a device or system that manages the operation of traffic lights at intersections or road junctions.,0,AashiSrivastava/Traffic-Light-Controller,749404534,SystemVerilog,Traffic-Light-Controller,191,0,2024-01-28 13:47:25+00:00,[],
16306,https://github.com/Chandranikhita-1/Router-1x3-Verification.git,2024-01-31 08:57:23+00:00,,0,Chandranikhita-1/Router-1x3-Verification,750755274,SystemVerilog,Router-1x3-Verification,19,0,2024-01-31 09:08:17+00:00,[],
16307,https://github.com/salehhesham244/UVM-SPI.git,2024-01-30 18:42:45+00:00,"·        Developed a class-based SystemVerilog testbench for a FIFO, and for a SPI-Slave connected to Dual-port RAM ·        Developed a complete top-level UVM environment for SPI-Slave connected to Dual-port RAM",0,salehhesham244/UVM-SPI,750492420,SystemVerilog,UVM-SPI,567,0,2024-01-30 18:49:15+00:00,[],
16308,https://github.com/SaintAnger589/ddr_practice.git,2024-02-02 18:09:59+00:00,,0,SaintAnger589/ddr_practice,751967355,SystemVerilog,ddr_practice,2,0,2024-02-02 18:13:23+00:00,[],
16309,https://github.com/kashamallikarjun/Team16_ECE593W24.git,2024-02-04 01:37:15+00:00,Asynchronous FIFO,1,kashamallikarjun/Team16_ECE593W24,752489081,SystemVerilog,Team16_ECE593W24,2,0,2024-02-04 01:38:42+00:00,[],
16310,https://github.com/aazam-gh/systemverilog.git,2024-02-05 15:10:47+00:00,,0,aazam-gh/systemverilog,753150585,SystemVerilog,systemverilog,122,0,2024-02-05 15:28:44+00:00,[],
16311,https://github.com/dan-the-meme-man/ling_4466_hw1.git,2024-01-28 03:44:37+00:00,,0,dan-the-meme-man/ling_4466_hw1,749266673,SystemVerilog,ling_4466_hw1,36733,0,2024-01-28 03:45:47+00:00,[],
16312,https://github.com/kanade-k-1228/LogicIC.git,2024-02-07 04:21:13+00:00,System Verilog module of standard logic ic,0,kanade-k-1228/LogicIC,753937518,SystemVerilog,LogicIC,1,0,2024-02-07 06:28:55+00:00,[],
16313,https://github.com/r-butl/HighPerformanceComputing.git,2024-02-06 23:42:28+00:00,Project Files for High performance computing,0,r-butl/HighPerformanceComputing,753864887,SystemVerilog,HighPerformanceComputing,11464,0,2024-02-07 20:53:44+00:00,[],
16314,https://github.com/devin-macy/tt-fpga-demo.git,2024-02-07 16:34:26+00:00,TinyTapeout FPGA Demo Fork,0,devin-macy/tt-fpga-demo,754224756,SystemVerilog,tt-fpga-demo,16,0,2024-02-08 21:28:51+00:00,[],https://api.github.com/licenses/apache-2.0
16315,https://github.com/ahmed-nader-ahmed/coursera_Getting_Strated_with_Git_and_GitHub.git,2024-02-09 12:31:15+00:00,learn Git and GitHub from coursera platform,0,ahmed-nader-ahmed/coursera_Getting_Strated_with_Git_and_GitHub,755090749,SystemVerilog,coursera_Getting_Strated_with_Git_and_GitHub,5,0,2024-02-09 12:40:45+00:00,[],
16316,https://github.com/umamah2004/Lab_2.git,2024-02-12 16:57:31+00:00,,0,umamah2004/Lab_2,756436098,SystemVerilog,Lab_2,2,0,2024-02-12 17:05:34+00:00,[],
16317,https://github.com/ahmedatAED/APB_interrupt_cntrl.git,2024-02-14 16:19:46+00:00,,0,ahmedatAED/APB_interrupt_cntrl,757502918,SystemVerilog,APB_interrupt_cntrl,37,0,2024-02-14 16:20:01+00:00,[],
16318,https://github.com/yamamahashayer/Digital2-Verilog-HW2.git,2024-02-13 13:01:38+00:00,Verilog code to implement a digital system that counts the number of bit transitions.,0,yamamahashayer/Digital2-Verilog-HW2,756860161,SystemVerilog,Digital2-Verilog-HW2,137,0,2024-02-13 13:03:10+00:00,[],
16319,https://github.com/Aqib-Wazir101/mylab2.git,2024-02-12 18:41:34+00:00,,0,Aqib-Wazir101/mylab2,756480460,SystemVerilog,mylab2,79,0,2024-02-12 18:44:43+00:00,[],
16320,https://github.com/Mahjabeen632/lab_2.git,2024-02-12 17:02:02+00:00,,0,Mahjabeen632/lab_2,756438093,SystemVerilog,lab_2,2,0,2024-02-12 18:58:10+00:00,[],
16321,https://github.com/alikhawja/Labn_2.git,2024-02-12 17:32:35+00:00,,0,alikhawja/Labn_2,756451379,SystemVerilog,Labn_2,179,0,2024-02-12 18:01:07+00:00,[],
16322,https://github.com/Srivathsa2304/DRAM_COVERAGE.git,2024-02-15 06:35:44+00:00,,0,Srivathsa2304/DRAM_COVERAGE,757867866,SystemVerilog,DRAM_COVERAGE,441,0,2024-02-15 06:37:14+00:00,[],
16323,https://github.com/QamarRaja/lab-2.git,2024-02-16 09:18:28+00:00,my assigment# 2,0,QamarRaja/lab-2,758415359,SystemVerilog,lab-2,414,0,2024-02-16 09:22:31+00:00,[],
16324,https://github.com/Alexbostroem/A5.git,2024-02-16 08:26:06+00:00,,0,Alexbostroem/A5,758396747,SystemVerilog,A5,2229,0,2024-02-16 08:26:14+00:00,[],
16325,https://github.com/aaayann/lab_no_2.git,2024-02-18 18:50:41+00:00,my experiment # 2,0,aaayann/lab_no_2,759498275,SystemVerilog,lab_no_2,195,0,2024-02-18 18:58:02+00:00,[],
16326,https://github.com/fazaleqadir/LAB-2.git,2024-02-03 10:16:00+00:00,,0,fazaleqadir/LAB-2,752197084,SystemVerilog,LAB-2,91,0,2024-02-04 16:08:32+00:00,[],
16327,https://github.com/MKamranManzoor/LAB_3.git,2024-02-19 18:11:57+00:00,,0,MKamranManzoor/LAB_3,760067299,SystemVerilog,LAB_3,318,0,2024-02-19 18:51:56+00:00,[],
16328,https://github.com/Adham-Mohamed-Ahmed-Abd-Elrahim/AES_128.git,2024-02-20 08:13:32+00:00,,0,Adham-Mohamed-Ahmed-Abd-Elrahim/AES_128,760331659,SystemVerilog,AES_128,1469,0,2024-02-20 08:19:48+00:00,[],
16329,https://github.com/sajjadAtlas/SPI-Slave-UVC.git,2024-02-21 21:24:53+00:00,"In order to get some practice with UVM and SystemVerilog I tried to write SPI master and slave components, while using UVM to verify the slave. This is my first attempt at using UVM and SystemVerilog for design/verification",0,sajjadAtlas/SPI-Slave-UVC,761432815,SystemVerilog,SPI-Slave-UVC,15,0,2024-02-21 21:29:45+00:00,[],https://api.github.com/licenses/mit
16330,https://github.com/parajk1/High-Performance-Image-Binarization-Circuit-with-256-to-8-Priority-Encoder.git,2024-02-22 19:49:39+00:00,,0,parajk1/High-Performance-Image-Binarization-Circuit-with-256-to-8-Priority-Encoder,761951764,SystemVerilog,High-Performance-Image-Binarization-Circuit-with-256-to-8-Priority-Encoder,1903,0,2024-02-22 19:50:22+00:00,[],
16331,https://github.com/TomKeddie/tinytapeout-2024-tt06a.git,2024-02-19 04:21:29+00:00,,0,TomKeddie/tinytapeout-2024-tt06a,759651583,SystemVerilog,tinytapeout-2024-tt06a,174,0,2024-02-23 04:38:55+00:00,[],https://api.github.com/licenses/apache-2.0
16332,https://github.com/Mujtabadar537/RISCV_Single_Cycle_Core.git,2024-02-10 05:41:28+00:00,,0,Mujtabadar537/RISCV_Single_Cycle_Core,755411783,SystemVerilog,RISCV_Single_Cycle_Core,23,0,2024-02-10 05:47:30+00:00,[],
16333,https://github.com/Antonio-Kim/verilog_libraries.git,2024-02-15 18:50:44+00:00,,0,Antonio-Kim/verilog_libraries,758166212,SystemVerilog,verilog_libraries,4727,0,2024-02-16 01:03:33+00:00,[],https://api.github.com/licenses/mit
16334,https://github.com/ThaysonScript/simple_mips_processor.git,2024-02-26 00:09:07+00:00,,0,ThaysonScript/simple_mips_processor,763260139,SystemVerilog,simple_mips_processor,10,0,2024-02-26 00:10:02+00:00,[],https://api.github.com/licenses/mit
16335,https://github.com/EnginDemirbas/access_control_wrapper.git,2024-02-25 18:58:43+00:00,Access Control Management Wrapper,2,EnginDemirbas/access_control_wrapper,763179431,SystemVerilog,access_control_wrapper,212,0,2024-02-25 19:49:28+00:00,[],
16336,https://github.com/infini8-13/21DaysOfRTL.git,2024-02-23 06:30:05+00:00,,0,infini8-13/21DaysOfRTL,762130761,SystemVerilog,21DaysOfRTL,7,0,2024-02-27 17:41:27+00:00,[],
16337,https://github.com/mohit-verma-mv/UVM.git,2024-02-27 01:59:05+00:00,Examples of UVM testbench environment from scratch,0,mohit-verma-mv/UVM,763832982,SystemVerilog,UVM,17,0,2024-02-27 02:03:30+00:00,[],
16338,https://github.com/isabellavittori/projeto_IH.git,2024-02-24 20:48:42+00:00,ainda em fase de testes,0,isabellavittori/projeto_IH,762840900,SystemVerilog,projeto_IH,88,0,2024-02-24 20:50:42+00:00,[],
16339,https://github.com/ani-penguino/RICS-V_pipelined_5stage_processor.git,2024-03-01 15:09:35+00:00,Hazard and forwarding logic all implemented,0,ani-penguino/RICS-V_pipelined_5stage_processor,765762030,SystemVerilog,RICS-V_pipelined_5stage_processor,30,0,2024-03-01 15:46:42+00:00,[],
16340,https://github.com/ani-penguino/Collatz_Conjecture.git,2024-02-08 04:06:30+00:00,A Collatz Conjecture calculator using FPGA,0,ani-penguino/Collatz_Conjecture,754445090,SystemVerilog,Collatz_Conjecture,8,0,2024-03-01 15:02:20+00:00,[],
16341,https://github.com/mnasirEE/sequential-circuits-design_computer-architecture.git,2024-02-26 13:06:27+00:00,,0,mnasirEE/sequential-circuits-design_computer-architecture,763522655,SystemVerilog,sequential-circuits-design_computer-architecture,2,0,2024-02-26 14:59:11+00:00,[],
16342,https://github.com/Arunvaishnav7435/logic_data_type.git,2024-02-29 17:07:31+00:00,,0,Arunvaishnav7435/logic_data_type,765307153,SystemVerilog,logic_data_type,2,0,2024-02-29 17:19:46+00:00,[],
16343,https://github.com/MahmouodMagdi/RTL-Design-of-ARM-based-AHB-to-APB-Bridge.git,2024-02-25 16:59:08+00:00,Bridges are standard bus-to-bus interfaces that allow IPs connected to different buses to communicate with each other in a standardized way,0,MahmouodMagdi/RTL-Design-of-ARM-based-AHB-to-APB-Bridge,763139396,SystemVerilog,RTL-Design-of-ARM-based-AHB-to-APB-Bridge,44,0,2024-03-04 11:48:44+00:00,[],
16344,https://github.com/pgenard/PRESENT.git,2024-03-04 08:46:47+00:00,PRESENT Avalon Crypto-Accelerator,0,pgenard/PRESENT,766850833,SystemVerilog,PRESENT,222,0,2024-03-05 23:45:24+00:00,"['crypto', 'dma', 'systemverilog', 'verilog']",
16345,https://github.com/nathangross1/tt-fpga-hdl-demo.git,2024-02-26 21:04:02+00:00,,0,nathangross1/tt-fpga-hdl-demo,763746337,SystemVerilog,tt-fpga-hdl-demo,154,0,2024-03-07 17:35:07+00:00,[],https://api.github.com/licenses/apache-2.0
16346,https://github.com/pemdas8/DLDLAB2.git,2024-02-21 21:28:10+00:00,,0,pemdas8/DLDLAB2,761444720,SystemVerilog,DLDLAB2,21483,0,2024-02-21 21:28:18+00:00,[],https://api.github.com/licenses/mit
16347,https://github.com/BNiVeDiTa29/SV_Project11.git,2024-03-05 19:20:31+00:00,,0,BNiVeDiTa29/SV_Project11,767717994,SystemVerilog,SV_Project11,2670,0,2024-03-11 06:01:11+00:00,[],
16348,https://github.com/charkster/pwm_fpga.git,2024-02-27 04:27:02+00:00,Simple PWM peripheral implemented in SystemVerilog with an i2c interface.,0,charkster/pwm_fpga,763876562,SystemVerilog,pwm_fpga,122,0,2024-02-27 04:29:10+00:00,[],https://api.github.com/licenses/mit
16349,https://github.com/charkster/i2c_slave_fpga.git,2024-02-19 01:16:53+00:00,Systemverilog implementation of an I2C slave with a simple register map. Multi-byte reads and writes supported with address auto-increment. ,0,charkster/i2c_slave_fpga,759605331,SystemVerilog,i2c_slave_fpga,83,0,2024-02-19 21:58:32+00:00,"['fpga', 'i2c-slave', 'systemverilog']",https://api.github.com/licenses/mit
16350,https://github.com/VajaiacMarius/TSC.git,2024-03-04 07:48:01+00:00,,0,VajaiacMarius/TSC,766827562,SystemVerilog,TSC,8327,0,2024-03-04 07:59:13+00:00,[],
16351,https://github.com/bsc-loca/redma.git,2024-02-09 09:24:10+00:00,ReDMA - Direct Memory Access engine with data Realignment,0,bsc-loca/redma,755024702,SystemVerilog,redma,10557,0,2024-02-09 09:26:19+00:00,[],
16352,https://github.com/alex2kameboss/Matrix-multiplier.git,2024-03-05 15:07:00+00:00,,0,alex2kameboss/Matrix-multiplier,767588108,SystemVerilog,Matrix-multiplier,55,0,2024-03-05 15:41:49+00:00,[],https://api.github.com/licenses/gpl-3.0
16353,https://github.com/DBT999/addressing_module.git,2024-03-01 20:58:38+00:00,,0,DBT999/addressing_module,765899902,SystemVerilog,addressing_module,9,0,2024-04-09 18:45:17+00:00,[],
16354,https://github.com/bhavyareddygandeti/MtE-Design.git,2024-03-05 01:16:37+00:00,,0,bhavyareddygandeti/MtE-Design,767262213,SystemVerilog,MtE-Design,169,0,2024-04-10 06:32:27+00:00,[],
16355,https://github.com/rolandking/openFPGA-pocket-base.git,2024-02-24 14:29:04+00:00,Base code for Analogue pocket projects,0,rolandking/openFPGA-pocket-base,762728577,SystemVerilog,openFPGA-pocket-base,223,0,2024-02-24 14:39:50+00:00,[],
16356,https://github.com/SujalAgarwal/System_Verilog.git,2024-02-20 20:43:55+00:00,,0,SujalAgarwal/System_Verilog,760871941,SystemVerilog,System_Verilog,14,0,2024-02-20 20:45:15+00:00,[],
16357,https://github.com/MatNepo/LabsVerilog.git,2024-02-27 13:48:11+00:00,labs on the Verilog course,0,MatNepo/LabsVerilog,764106829,SystemVerilog,LabsVerilog,306354,0,2024-03-27 16:45:18+00:00,[],
16358,https://github.com/ConsVin/hw_conv2d.git,2024-01-28 19:52:58+00:00,2D Convolution code,0,ConsVin/hw_conv2d,749516148,SystemVerilog,hw_conv2d,1188,0,2024-01-28 19:56:38+00:00,[],
16359,https://github.com/Lane0218/mips-5-pipeline.git,2024-01-30 02:01:20+00:00,使用SystemVerilog语言，完成一个五级流水线MIPS处理器设计,0,Lane0218/mips-5-pipeline,750108919,SystemVerilog,mips-5-pipeline,319,0,2024-01-30 02:02:34+00:00,[],
16360,https://github.com/reachtoananda/DFF-SystemVerilog.git,2024-01-31 18:52:19+00:00,,0,reachtoananda/DFF-SystemVerilog,751008276,SystemVerilog,DFF-SystemVerilog,21,0,2024-01-31 18:53:43+00:00,[],
16361,https://github.com/sushanTamu/lab-2-sushanTamu.git,2024-02-01 01:16:24+00:00,,0,sushanTamu/lab-2-sushanTamu,751124796,SystemVerilog,lab-2-sushanTamu,1039,0,2024-02-01 01:16:55+00:00,[],
16362,https://github.com/sushanTamu/lab-3-sushanTamu.git,2024-02-01 01:18:27+00:00,,0,sushanTamu/lab-3-sushanTamu,751125286,SystemVerilog,lab-3-sushanTamu,5438,0,2024-02-01 01:18:51+00:00,[],
16363,https://github.com/sushanTamu/lab-7-sushanTamu.git,2024-02-01 01:20:46+00:00,,0,sushanTamu/lab-7-sushanTamu,751125838,SystemVerilog,lab-7-sushanTamu,7247,0,2024-02-01 01:21:11+00:00,[],
16364,https://github.com/sushanTamu/lab-1-sushanTamu.git,2024-02-01 01:11:22+00:00,,0,sushanTamu/lab-1-sushanTamu,751123636,SystemVerilog,lab-1-sushanTamu,121,0,2024-02-01 01:13:11+00:00,[],
16365,https://github.com/sushanTamu/lab0-sushanTamu.git,2024-02-01 01:21:33+00:00,,0,sushanTamu/lab0-sushanTamu,751126037,SystemVerilog,lab0-sushanTamu,336,0,2024-02-01 01:21:54+00:00,[],
16366,https://github.com/FRubinoC/Simplified-RC4-Encryption-Module.git,2024-02-02 08:01:15+00:00,This project consists on the implementation of a Simplified RC4 Encryption module using the Modelsim and Quartus tools. You can find all the details on the report_RC4_encryptor file in the doc folder.,0,FRubinoC/Simplified-RC4-Encryption-Module,751735351,SystemVerilog,Simplified-RC4-Encryption-Module,2244,0,2024-02-02 08:06:19+00:00,[],
16367,https://github.com/Jagatheshgiri/BFM-for-SPI.git,2024-02-06 06:15:06+00:00,,0,Jagatheshgiri/BFM-for-SPI,753447052,SystemVerilog,BFM-for-SPI,6,0,2024-02-06 06:27:35+00:00,[],
16368,https://github.com/artmedia1/Keep-Talking-and-Nobody-Explodes.git,2024-02-08 18:23:37+00:00,,0,artmedia1/Keep-Talking-and-Nobody-Explodes,754768255,SystemVerilog,Keep-Talking-and-Nobody-Explodes,45930,0,2024-02-08 18:23:44+00:00,[],
16369,https://github.com/c3reuter-499/fpga-calculator.git,2024-02-09 14:18:46+00:00,,0,c3reuter-499/fpga-calculator,755146996,SystemVerilog,fpga-calculator,16,0,2024-02-09 14:18:53+00:00,[],https://api.github.com/licenses/apache-2.0
16370,https://github.com/nrbenn14/ecen-323.git,2024-02-09 22:15:43+00:00,,0,nrbenn14/ecen-323,755323431,SystemVerilog,ecen-323,6384,0,2024-02-09 22:16:50+00:00,[],
16371,https://github.com/Hammad1341/Lab_2.git,2024-02-11 20:01:12+00:00,,0,Hammad1341/Lab_2,756040233,SystemVerilog,Lab_2,110,0,2024-02-12 18:48:38+00:00,[],
16372,https://github.com/rohithgopakumar/LAYERED_TESTBENCH_D-FLIP-FLOP.git,2024-02-13 15:31:21+00:00,,0,rohithgopakumar/LAYERED_TESTBENCH_D-FLIP-FLOP,756931017,SystemVerilog,LAYERED_TESTBENCH_D-FLIP-FLOP,24,0,2024-02-13 15:41:00+00:00,[],
16373,https://github.com/srikala-reddi/sr_latch_uvm_tb_.git,2024-02-14 05:29:51+00:00,,0,srikala-reddi/sr_latch_uvm_tb_,757253875,SystemVerilog,sr_latch_uvm_tb_,293,0,2024-02-14 05:32:24+00:00,[],
16374,https://github.com/amansasidharan/sr_latch_uvmtb.git,2024-02-14 06:25:58+00:00,,0,amansasidharan/sr_latch_uvmtb,757270676,SystemVerilog,sr_latch_uvmtb,21,0,2024-02-14 06:40:57+00:00,[],
16375,https://github.com/MAHANTHADEEKSHA-SB/address_filter_tb.git,2024-02-13 07:51:25+00:00,,0,MAHANTHADEEKSHA-SB/address_filter_tb,756734705,SystemVerilog,address_filter_tb,58,0,2024-02-14 13:48:47+00:00,[],https://api.github.com/licenses/apache-2.0
16376,https://github.com/SamiIonesi/SerialTransceiver_UVM.git,2024-02-16 20:11:07+00:00,,0,SamiIonesi/SerialTransceiver_UVM,758669557,SystemVerilog,SerialTransceiver_UVM,7,0,2024-02-16 20:12:54+00:00,[],
16378,https://github.com/Kboateng1982/DSP-Algo.git,2024-02-19 18:24:06+00:00,DSP Algorithms developed in SystemVerilog,0,Kboateng1982/DSP-Algo,760072419,SystemVerilog,DSP-Algo,42464,0,2024-02-19 19:42:19+00:00,[],
16379,https://github.com/WittenYeh/SpoonfulLake.git,2024-02-08 23:15:52+00:00,Inspired by the spoonful pool(lake) in Renmin University of China,0,WittenYeh/SpoonfulLake,754871657,SystemVerilog,SpoonfulLake,709,0,2024-02-20 02:17:34+00:00,[],
16380,https://github.com/emvipi03/systemverilog_microprocessor.git,2024-02-21 15:38:41+00:00,,0,emvipi03/systemverilog_microprocessor,761289394,SystemVerilog,systemverilog_microprocessor,4,0,2024-02-21 15:41:27+00:00,[],
16381,https://github.com/vignathajasti/git_practice.git,2024-02-21 10:27:10+00:00,,0,vignathajasti/git_practice,761147163,SystemVerilog,git_practice,1,0,2024-02-21 10:57:08+00:00,[],
16382,https://github.com/XHCFS/UNI-StopWatchHDL.git,2024-02-21 16:10:00+00:00,,0,XHCFS/UNI-StopWatchHDL,761304045,SystemVerilog,UNI-StopWatchHDL,27,0,2024-02-21 16:30:43+00:00,[],
16383,https://github.com/nafeesanawar/16-bit-CPU.git,2024-02-22 19:13:33+00:00,This folder contains a 16 bit CPU project completed using System Verilog ,0,nafeesanawar/16-bit-CPU,761938463,SystemVerilog,16-bit-CPU,11,0,2024-02-22 19:14:51+00:00,[],
16384,https://github.com/kalluri-bhavana/system_verilog.git,2024-02-23 06:34:08+00:00,,0,kalluri-bhavana/system_verilog,762132014,SystemVerilog,system_verilog,3,0,2024-02-23 06:35:15+00:00,[],
16385,https://github.com/Audrey-Li-CPEN/RISC-Machine-Simple.git,2024-02-23 23:31:03+00:00,,0,Audrey-Li-CPEN/RISC-Machine-Simple,762509089,SystemVerilog,RISC-Machine-Simple,27,0,2024-02-23 23:59:54+00:00,[],
16386,https://github.com/0xoleg/sv-lib.git,2024-02-27 16:19:35+00:00,,0,0xoleg/sv-lib,764183853,SystemVerilog,sv-lib,103,0,2024-02-27 16:20:02+00:00,[],
16387,https://github.com/Zymral/tt-fpga-hdl-demo.git,2024-02-26 21:12:59+00:00,,0,Zymral/tt-fpga-hdl-demo,763749501,SystemVerilog,tt-fpga-hdl-demo,28,0,2024-02-26 21:13:06+00:00,[],https://api.github.com/licenses/apache-2.0
16388,https://github.com/Mosiah-Beal/ECE_485.git,2024-01-31 00:51:58+00:00,,0,Mosiah-Beal/ECE_485,750610376,SystemVerilog,ECE_485,1627,0,2024-01-31 00:52:49+00:00,[],
16389,https://github.com/lucyhu798/Hamming_decoder_UVM.git,2024-02-06 06:20:22+00:00,,0,lucyhu798/Hamming_decoder_UVM,753448696,SystemVerilog,Hamming_decoder_UVM,861,0,2024-02-06 06:28:42+00:00,[],
16390,https://github.com/ElectroInsights/system_verilog.git,2024-03-04 08:15:03+00:00,This repository contains code for system verilog along with testbench,0,ElectroInsights/system_verilog,766837927,SystemVerilog,system_verilog,41,0,2024-03-04 08:22:36+00:00,[],
16391,https://github.com/daisukex/sc-scbc.git,2024-01-31 17:55:48+00:00,Space Communication Bus Controller,0,daisukex/sc-scbc,750985010,SystemVerilog,sc-scbc,40,0,2024-03-08 05:32:39+00:00,[],
16392,https://github.com/ConnerCrowl/DLD_Lab2.git,2024-02-26 17:27:40+00:00,,0,ConnerCrowl/DLD_Lab2,763653671,SystemVerilog,DLD_Lab2,22077,0,2024-02-26 17:27:47+00:00,[],https://api.github.com/licenses/mit
16393,https://github.com/nehakr6/booleanSolverz.git,2024-01-28 02:43:42+00:00,,0,nehakr6/booleanSolverz,749256351,SystemVerilog,booleanSolverz,25,0,2024-03-01 21:11:04+00:00,[],
16394,https://github.com/jv-n/Projeto-RISC-V.git,2024-02-23 00:23:48+00:00,,1,jv-n/Projeto-RISC-V,762033001,SystemVerilog,Projeto-RISC-V,1507,0,2024-02-23 00:23:55+00:00,[],https://api.github.com/licenses/mit
16395,https://github.com/Hamzaweb49/singlecycleprocessor.git,2024-02-25 08:55:57+00:00,"Single Cycle Processor which performs R, I, S, B, U, and J type instructions operations",0,Hamzaweb49/singlecycleprocessor,762988101,SystemVerilog,singlecycleprocessor,251,0,2024-02-25 09:45:56+00:00,[],
16396,https://github.com/Hassan-muavia62/lab_4.git,2024-03-04 17:32:33+00:00,,0,Hassan-muavia62/lab_4,767092811,SystemVerilog,lab_4,780,0,2024-03-04 17:43:37+00:00,[],
16397,https://github.com/Hammad1341/DSD-Lab-5.git,2024-03-04 17:35:42+00:00,,0,Hammad1341/DSD-Lab-5,767094250,SystemVerilog,DSD-Lab-5,653,0,2024-03-04 17:41:26+00:00,[],
16398,https://github.com/saira-ijaz/lab_5.git,2024-03-04 15:42:44+00:00,,0,saira-ijaz/lab_5,767039515,SystemVerilog,lab_5,488,0,2024-03-04 15:43:45+00:00,[],
16399,https://github.com/Hassan-muavia62/lab_5.git,2024-03-04 17:56:06+00:00,,0,Hassan-muavia62/lab_5,767103839,SystemVerilog,lab_5,484,0,2024-03-04 17:59:49+00:00,[],
16400,https://github.com/SamehM20/RISC-V.git,2024-03-05 14:56:36+00:00,,0,SamehM20/RISC-V,767582945,SystemVerilog,RISC-V,11,0,2024-03-05 15:20:08+00:00,[],
16401,https://github.com/malikshanaah1999/AXI_Project.git,2024-03-05 21:24:23+00:00,,0,malikshanaah1999/AXI_Project,767764187,SystemVerilog,AXI_Project,12,0,2024-03-05 21:25:04+00:00,[],
16402,https://github.com/aaayann/lab4.git,2024-03-05 07:09:21+00:00,combinational circuits using K-maps,0,aaayann/lab4,767370815,SystemVerilog,lab4,287,0,2024-03-05 07:16:35+00:00,[],
16403,https://github.com/axmalakar/lab2.git,2024-02-19 17:45:51+00:00,,0,axmalakar/lab2,760056436,SystemVerilog,lab2,26242,0,2024-02-19 17:45:58+00:00,[],https://api.github.com/licenses/mit
16404,https://github.com/A1020A/NOC-Radix-Experiment.git,2024-02-19 02:52:30+00:00,,0,A1020A/NOC-Radix-Experiment,759628393,SystemVerilog,NOC-Radix-Experiment,8,0,2024-03-05 15:12:57+00:00,[],
16405,https://github.com/Zoubr99/Basic_Embedded_SoC.git,2024-02-04 19:01:43+00:00,This Repo contains a code for a very basic uC that has (4 Custom IP Core + Basic Bus + Basic MMIO controller),0,Zoubr99/Basic_Embedded_SoC,752772340,SystemVerilog,Basic_Embedded_SoC,56,0,2024-02-07 09:51:05+00:00,[],
16406,https://github.com/conwater/tt-fpga-hdl-demo.git,2024-02-26 21:01:54+00:00,,0,conwater/tt-fpga-hdl-demo,763745517,SystemVerilog,tt-fpga-hdl-demo,98,0,2024-03-07 19:31:37+00:00,[],https://api.github.com/licenses/apache-2.0
16407,https://github.com/mitha-rao/RISCV-single-cycle-processor.git,2024-02-06 07:57:53+00:00, Implementation of RISCV single cycle processor using system verilog ,0,mitha-rao/RISCV-single-cycle-processor,753481692,SystemVerilog,RISCV-single-cycle-processor,31,0,2024-03-10 05:38:57+00:00,[],
16409,https://github.com/g74253/gochoa_digital_design_lab_2024.git,2024-02-16 14:33:12+00:00,,0,g74253/gochoa_digital_design_lab_2024,758536391,SystemVerilog,gochoa_digital_design_lab_2024,111946,0,2024-03-06 12:41:20+00:00,[],
16410,https://github.com/SAI1607/System_Verilog_Project.git,2024-02-23 05:45:08+00:00,,0,SAI1607/System_Verilog_Project,762116751,SystemVerilog,System_Verilog_Project,5709,0,2024-02-23 06:32:04+00:00,[],
16411,https://github.com/SidK123/8Bit_CommonBusCPU.git,2024-02-23 04:07:28+00:00,,0,SidK123/8Bit_CommonBusCPU,762090421,SystemVerilog,8Bit_CommonBusCPU,7,0,2024-02-29 00:59:32+00:00,[],
16412,https://github.com/MarwanEid1/UVM_SPRAM.git,2024-02-08 00:21:44+00:00,UVM-Based Functional Verification of Single-Port Random Access Memory,0,MarwanEid1/UVM_SPRAM,754392386,SystemVerilog,UVM_SPRAM,195,0,2024-02-08 00:40:34+00:00,[],https://api.github.com/licenses/mit
16413,https://github.com/Ionita-Cezar/TSC.git,2024-02-19 06:19:26+00:00,,0,Ionita-Cezar/TSC,759685710,SystemVerilog,TSC,8190,0,2024-04-01 05:33:54+00:00,[],
16414,https://github.com/Henrik07/onlabor.git,2024-03-01 21:00:23+00:00,,0,Henrik07/onlabor,765900481,SystemVerilog,onlabor,871,0,2024-04-07 16:41:04+00:00,[],
16415,https://github.com/OscarM2023/Digitales_Ronny2024.git,2024-03-05 22:30:00+00:00,Implementación de subset de instrucciones de RISCV32i en microarquitectura monociclo.,0,OscarM2023/Digitales_Ronny2024,767785570,SystemVerilog,Digitales_Ronny2024,181,0,2024-04-10 23:24:44+00:00,[],
16416,https://github.com/jdcasanasr/axi_lite.git,2024-02-06 23:34:50+00:00,,0,jdcasanasr/axi_lite,753862822,SystemVerilog,axi_lite,62,0,2024-02-06 23:39:08+00:00,[],
16417,https://github.com/khalil-osu/tt-fpga-hdl-demo.git,2024-02-07 16:50:07+00:00,,0,khalil-osu/tt-fpga-hdl-demo,754232000,SystemVerilog,tt-fpga-hdl-demo,11,0,2024-02-07 16:50:13+00:00,[],https://api.github.com/licenses/apache-2.0
16418,https://github.com/dishak14/Layered-TB-for-SPC.git,2024-02-03 04:45:03+00:00,Layered testbench for a serial parity checker,0,dishak14/Layered-TB-for-SPC,752120337,SystemVerilog,Layered-TB-for-SPC,17,0,2024-02-03 04:58:24+00:00,[],https://api.github.com/licenses/mit
16419,https://github.com/Mertozkaya21/Light-Control-System.git,2024-02-09 20:24:07+00:00,"In this project, I have done traffic control system in basys3.  For representing red, green and yellow lights; I have used 3 LED's in Basys3.",0,Mertozkaya21/Light-Control-System,755290107,SystemVerilog,Light-Control-System,2,0,2024-02-09 20:24:33+00:00,[],
16420,https://github.com/timothywu817/USB-1.1.git,2024-02-10 15:42:57+00:00,USB 1.1 design and verification,0,timothywu817/USB-1.1,755563403,SystemVerilog,USB-1.1,28,0,2024-02-10 15:46:11+00:00,[],
16421,https://github.com/HeiZad1/RISCV_cpu.git,2024-02-04 19:36:30+00:00,,0,HeiZad1/RISCV_cpu,752782132,SystemVerilog,RISCV_cpu,123,0,2024-02-04 19:42:14+00:00,[],
16422,https://github.com/Jagatheshgiri/UART.UVM.git,2024-02-06 05:48:40+00:00,,0,Jagatheshgiri/UART.UVM,753438805,SystemVerilog,UART.UVM,13,0,2024-02-06 05:51:35+00:00,[],
16423,https://github.com/lucyhu798/Custom-ISA.git,2024-02-06 04:19:15+00:00,,0,lucyhu798/Custom-ISA,753414373,SystemVerilog,Custom-ISA,1231,0,2024-02-06 04:20:11+00:00,[],
16424,https://github.com/aaayann/lab_2.git,2024-02-12 17:32:34+00:00,,0,aaayann/lab_2,756451370,SystemVerilog,lab_2,197,0,2024-02-12 18:01:45+00:00,[],
16425,https://github.com/Mvk122/Verilog-Practice.git,2024-02-12 19:00:24+00:00,Verilog practice questions that I have done. (Ignore the fact that it says optiver in the folder name),0,Mvk122/Verilog-Practice,756487581,SystemVerilog,Verilog-Practice,67,0,2024-02-12 19:00:45+00:00,[],
16426,https://github.com/Mayank27Vaghela/AHB-UVC.git,2024-02-08 14:49:33+00:00,,0,Mayank27Vaghela/AHB-UVC,754672580,SystemVerilog,AHB-UVC,286,0,2024-02-08 15:01:47+00:00,[],
16427,https://github.com/AlexandreGagne10/VHDL.git,2024-02-12 07:43:58+00:00,LEARNING VHDL,0,AlexandreGagne10/VHDL,756210027,SystemVerilog,VHDL,4183,0,2024-02-12 07:45:42+00:00,[],
16428,https://github.com/hemanth-VP/srlatch.git,2024-02-14 06:31:15+00:00,,0,hemanth-VP/srlatch,757272303,SystemVerilog,srlatch,7,0,2024-02-14 06:33:32+00:00,[],
16429,https://github.com/Shreyast27/sr_uvm.git,2024-02-14 06:41:41+00:00,,0,Shreyast27/sr_uvm,757275541,SystemVerilog,sr_uvm,7,0,2024-02-14 06:43:10+00:00,[],
16430,https://github.com/MeghanaRBhat/SR_LATCH_TB.git,2024-02-14 05:29:15+00:00,,0,MeghanaRBhat/SR_LATCH_TB,757253714,SystemVerilog,SR_LATCH_TB,10959,0,2024-02-14 05:30:51+00:00,[],
16431,https://github.com/shariethernet/cim_test_harness.git,2024-02-13 22:25:41+00:00,,0,shariethernet/cim_test_harness,757147580,SystemVerilog,cim_test_harness,1,0,2024-02-13 22:26:31+00:00,[],
16432,https://github.com/AlexEduardo-zip/TP1_ISL_Verilog.git,2024-02-20 02:26:03+00:00,,0,AlexEduardo-zip/TP1_ISL_Verilog,760222042,SystemVerilog,TP1_ISL_Verilog,81,0,2024-02-20 02:27:23+00:00,[],
16433,https://github.com/Hassan-muavia62/my_lab3.git,2024-02-19 15:59:37+00:00,,0,Hassan-muavia62/my_lab3,759931069,SystemVerilog,my_lab3,142,0,2024-02-19 16:20:59+00:00,[],
16434,https://github.com/MKamranManzoor/lab_2.git,2024-02-12 16:50:27+00:00,,0,MKamranManzoor/lab_2,756432999,SystemVerilog,lab_2,1120,0,2024-02-12 17:01:08+00:00,[],
16435,https://github.com/rohitupari/SystemVerilog-Codes.git,2024-01-27 11:45:53+00:00,,0,rohitupari/SystemVerilog-Codes,749033529,SystemVerilog,SystemVerilog-Codes,1246,0,2024-01-27 11:50:15+00:00,[],
16436,https://github.com/iwaniwaniwan012/NATIVE_PHY_CV_SIM.git,2024-01-27 08:43:00+00:00,Project for simulation NATIVE PHY IP Core with dynamic reconfiguration speed change,0,iwaniwaniwan012/NATIVE_PHY_CV_SIM,748986925,SystemVerilog,NATIVE_PHY_CV_SIM,3958,0,2024-01-27 08:47:53+00:00,[],
16438,https://github.com/sushanTamu/lab-8-sushanTamu.git,2024-02-01 01:23:42+00:00,,0,sushanTamu/lab-8-sushanTamu,751126594,SystemVerilog,lab-8-sushanTamu,6941,0,2024-02-01 01:24:04+00:00,[],
16439,https://github.com/nikul09/AXI3-Back-to-Back-VIP-Development.git,2024-02-24 21:33:38+00:00,,0,nikul09/AXI3-Back-to-Back-VIP-Development,762851170,SystemVerilog,AXI3-Back-to-Back-VIP-Development,88,0,2024-02-24 21:38:59+00:00,[],
16440,https://github.com/AndrejGobor/SysVerilogUVM.git,2024-02-20 23:12:03+00:00,,0,AndrejGobor/SysVerilogUVM,760928055,SystemVerilog,SysVerilogUVM,16,0,2024-02-20 23:13:35+00:00,[],
16441,https://github.com/pnguyen174/cpe333.git,2024-02-01 23:04:18+00:00,,0,pnguyen174/cpe333,751593367,SystemVerilog,cpe333,10474,0,2024-02-01 23:06:56+00:00,[],
16442,https://github.com/rokarn12/Advanced-VLSI-Design.git,2024-02-26 23:31:41+00:00,Projects for ECSE-6680: Advanced VLSI Design with Professor Tong Zhang at Rensselaer Polytechnic Institute,0,rokarn12/Advanced-VLSI-Design,763792545,SystemVerilog,Advanced-VLSI-Design,516,0,2024-03-14 22:42:27+00:00,[],https://api.github.com/licenses/mit
16443,https://github.com/Abdullah-Shaaban/cv32e20v.git,2024-02-12 15:47:28+00:00,Repository for adding RISC-V vector extension (Zve32x) support to the CVE2 RISC-V scalar core from the OpenHW group. The vector unit called Spatz is used from the PULP platform.,0,Abdullah-Shaaban/cv32e20v,756403133,SystemVerilog,cv32e20v,13,0,2024-03-17 18:27:05+00:00,[],
16444,https://github.com/maxdoublee/Advanced-Computer-Hardware.git,2024-01-26 04:10:54+00:00,"Projects from my Advanced Computer Hardware course- ECSE 6700. Taught by Professor Liu, course was taken my first semester of my co-term graduate year. ",0,maxdoublee/Advanced-Computer-Hardware,748484073,SystemVerilog,Advanced-Computer-Hardware,67,0,2024-03-05 01:58:24+00:00,[],
16445,https://github.com/Mekky7/spi_verf_with-SV.git,2024-02-28 16:11:45+00:00,,0,Mekky7/spi_verf_with-SV,764736845,SystemVerilog,spi_verf_with-SV,7262,0,2024-02-28 17:14:09+00:00,[],
16446,https://github.com/ahpinder/NeuralEngine.git,2024-02-01 21:02:49+00:00,Neural network inference engine targeting high-efficiency int operations,0,ahpinder/NeuralEngine,751558395,SystemVerilog,NeuralEngine,6,0,2024-02-02 16:38:20+00:00,[],https://api.github.com/licenses/mit
16447,https://github.com/sduaz/dsdlab4.git,2024-03-04 16:13:34+00:00,combinational circuit using k maps(leds),0,sduaz/dsdlab4,767054480,SystemVerilog,dsdlab4,165,0,2024-03-04 16:18:23+00:00,[],
16448,https://github.com/SuchithraM008/System-Verilog-Labs.git,2024-02-02 01:49:18+00:00,,0,SuchithraM008/System-Verilog-Labs,751633388,SystemVerilog,System-Verilog-Labs,52,0,2024-02-02 01:51:37+00:00,[],https://api.github.com/licenses/apache-2.0
16449,https://github.com/RafHL/tb_example_2024-03-05.git,2024-03-05 23:24:32+00:00,Example for my UF team to see a basic SV test bench with file IO and a driver task,0,RafHL/tb_example_2024-03-05,767802699,SystemVerilog,tb_example_2024-03-05,1,0,2024-03-05 23:26:59+00:00,[],
16450,https://github.com/Susheelaaa/Systemverilog_basics.git,2024-03-05 10:32:36+00:00,,0,Susheelaaa/Systemverilog_basics,767459434,SystemVerilog,Systemverilog_basics,11,0,2024-03-05 12:07:13+00:00,[],
16451,https://github.com/icanc0/tinyish-fpga.git,2024-03-03 02:51:17+00:00,tinyfpga bx but sus,0,icanc0/tinyish-fpga,766353709,SystemVerilog,tinyish-fpga,9374,0,2024-03-09 21:45:15+00:00,[],
16452,https://github.com/DeadImage/SystemVerilogMisc.git,2024-03-05 16:36:07+00:00,A bunch of different Verilog and SystemVerilog modules that I made along the way.,0,DeadImage/SystemVerilogMisc,767632222,SystemVerilog,SystemVerilogMisc,869,0,2024-03-13 08:21:56+00:00,[],https://api.github.com/licenses/apache-2.0
16454,https://github.com/Dedorou/bash-hash.git,2024-03-05 18:36:23+00:00,,0,Dedorou/bash-hash,767699036,SystemVerilog,bash-hash,7,0,2024-03-05 18:39:07+00:00,[],
16455,https://github.com/YosysHQ-Docs/AppNote-123.git,2024-02-09 08:14:05+00:00,Advanced SBY Use by Example,0,YosysHQ-Docs/AppNote-123,755002237,SystemVerilog,AppNote-123,121,0,2024-03-15 15:50:53+00:00,[],
16458,https://github.com/tsengs0/Generic_SRAM_APB.git,2024-01-26 09:53:11+00:00,RTL design of a generic SRAM module with APB I/F.,0,tsengs0/Generic_SRAM_APB,748580642,SystemVerilog,Generic_SRAM_APB,20,0,2024-01-26 10:09:49+00:00,[],https://api.github.com/licenses/mit
16459,https://github.com/ZelGusev/rs15_9.git,2024-01-26 06:34:09+00:00,,0,ZelGusev/rs15_9,748517582,SystemVerilog,rs15_9,48,0,2024-01-26 16:42:42+00:00,[],
16460,https://github.com/ertanhll/Simple-CPU-Verilog.git,2024-02-07 23:39:57+00:00,,0,ertanhll/Simple-CPU-Verilog,754381010,SystemVerilog,Simple-CPU-Verilog,833,0,2024-02-08 11:02:39+00:00,[],
16461,https://github.com/kocatepedogu/cellular-automaton-processor.git,2024-02-06 20:03:57+00:00,A simple processor with a grid of cores that can only interact with their immediate neighbors,0,kocatepedogu/cellular-automaton-processor,753795051,SystemVerilog,cellular-automaton-processor,216,0,2024-02-09 08:26:55+00:00,"['cellular-automata', 'cellular-automaton', 'game-of-life', 'gpu-acceleration', 'heat-equation', 'linear-algebra', 'partial-differential-equations', 'wave-equation', 'fpga-programming']",
16462,https://github.com/robfinch/FT833.git,2024-02-10 09:29:21+00:00,FT833 CPU and SOC,0,robfinch/FT833,755461700,SystemVerilog,FT833,852,0,2024-02-10 09:29:27+00:00,[],
16463,https://github.com/satyaprakashakula/Matrix-SparseVector-multiplier.git,2024-02-11 04:39:29+00:00,,0,satyaprakashakula/Matrix-SparseVector-multiplier,755796198,SystemVerilog,Matrix-SparseVector-multiplier,13,0,2024-02-11 05:16:32+00:00,[],
16464,https://github.com/lijiajun2/Spadix.git,2024-01-31 10:06:42+00:00,,0,lijiajun2/Spadix,750783290,SystemVerilog,Spadix,213,0,2024-01-31 10:14:40+00:00,[],
16465,https://github.com/PankajNair/Image-Processing-using-FPGA.git,2024-02-14 08:02:02+00:00,The design for an Image Processing IP which can be used in FPGAs,0,PankajNair/Image-Processing-using-FPGA,757301199,SystemVerilog,Image-Processing-using-FPGA,313,0,2024-02-14 08:44:23+00:00,[],
16466,https://github.com/MatveyVisotsky/mips_core.git,2024-02-08 12:26:45+00:00,,0,MatveyVisotsky/mips_core,754611400,SystemVerilog,mips_core,1206,0,2024-02-08 12:29:49+00:00,[],
16467,https://github.com/pdineshk01/HTAX_verification.git,2024-02-02 06:44:19+00:00,,0,pdineshk01/HTAX_verification,751710777,SystemVerilog,HTAX_verification,9745,0,2024-02-02 06:44:59+00:00,[],
16468,https://github.com/aitesam961/bi-tribble.git,2024-01-30 13:37:09+00:00,Experimental implementation of multi-clock synchronous digital logic,0,aitesam961/bi-tribble,750351353,SystemVerilog,bi-tribble,1365,0,2024-02-02 15:14:51+00:00,[],
16469,https://github.com/BrianMere/MyComputerArchitectureProjects.git,2024-02-05 20:46:34+00:00,Developments of my RISCV32I Otter CPU from my assembly class into certain computer architecture ascpects. Focusing on ,0,BrianMere/MyComputerArchitectureProjects,753292103,SystemVerilog,MyComputerArchitectureProjects,33826,0,2024-02-05 21:11:28+00:00,[],
16470,https://github.com/teeng/tags-SysVer-Projects.git,2024-01-30 02:40:45+00:00,Collection of SystemVerilog/Verilog Projects,0,teeng/tags-SysVer-Projects,750120658,SystemVerilog,tags-SysVer-Projects,15217,0,2024-02-16 22:35:42+00:00,[],
16471,https://github.com/BHKGITT/Router1x3.git,2024-02-05 01:47:42+00:00,UVM TB to verify the different packets transfer in Router1x3 design,0,BHKGITT/Router1x3,752866998,SystemVerilog,Router1x3,61,0,2024-02-17 13:28:11+00:00,[],
16472,https://github.com/gabrielcalubayan72/CS21-MIPS-Extension.git,2024-02-18 12:40:10+00:00,"I modified the MIPS single cycle processor in Vivado to extend its instruction set. Implemented xori, lui, srlv, bgtz, and li instructions",0,gabrielcalubayan72/CS21-MIPS-Extension,759379475,SystemVerilog,CS21-MIPS-Extension,1348,0,2024-02-18 12:41:03+00:00,[],
16473,https://github.com/GaalElbaz/Verification-Environment-for-SPI.git,2024-02-18 20:51:20+00:00,Designed to verify the fundamental functionality of a SPI (serial peripheral interface).,0,GaalElbaz/Verification-Environment-for-SPI,759531100,SystemVerilog,Verification-Environment-for-SPI,128,0,2024-02-18 20:54:14+00:00,[],
16474,https://github.com/NAQI-UL-HASSAN/Lab_3.git,2024-02-19 15:58:29+00:00,,0,NAQI-UL-HASSAN/Lab_3,759930580,SystemVerilog,Lab_3,704,0,2024-02-19 15:59:05+00:00,[],
16475,https://github.com/XainSaeed/DigitalSystem_-Lab3.git,2024-02-20 06:08:33+00:00,,0,XainSaeed/DigitalSystem_-Lab3,760286237,SystemVerilog,DigitalSystem_-Lab3,447,0,2024-02-20 07:43:12+00:00,[],
16476,https://github.com/VeresDenisa/3FoundersServer.git,2024-02-07 12:37:22+00:00,,0,VeresDenisa/3FoundersServer,754115786,SystemVerilog,3FoundersServer,69566,0,2024-02-07 12:45:17+00:00,[],
16477,https://github.com/princepavanm/expo_svg_spi.git,2024-02-15 07:46:39+00:00,,0,princepavanm/expo_svg_spi,757891776,SystemVerilog,expo_svg_spi,1515,0,2024-02-16 04:28:39+00:00,[],
16478,https://github.com/ThomasRen2077/Dijkstra_on_Xilinx_FPGA.git,2024-02-25 07:10:40+00:00,,0,ThomasRen2077/Dijkstra_on_Xilinx_FPGA,762961017,SystemVerilog,Dijkstra_on_Xilinx_FPGA,20,0,2024-02-25 07:18:30+00:00,[],
16479,https://github.com/alexmangushev/EduSoCRV.git,2024-02-07 09:27:40+00:00,Educational project for the development of a SoC based on a processor with RISC-V architecture,0,alexmangushev/EduSoCRV,754038983,SystemVerilog,EduSoCRV,109,0,2024-02-18 19:26:09+00:00,[],https://api.github.com/licenses/gpl-3.0
16480,https://github.com/Emirhan-Kilic/Basys3Uart.git,2024-02-26 12:21:41+00:00,FPGA Basys3 UART Communication,0,Emirhan-Kilic/Basys3Uart,763502494,SystemVerilog,Basys3Uart,979,0,2024-02-26 12:31:40+00:00,[],
16481,https://github.com/GustavoMXitamul/Sistemas-Digitales.git,2024-02-27 05:57:43+00:00,,0,GustavoMXitamul/Sistemas-Digitales,763905281,SystemVerilog,Sistemas-Digitales,53,0,2024-02-27 22:36:20+00:00,[],
16482,https://github.com/MuhammadUsman3506/Verilog_Basic_RTL_Module_Trainning.git,2024-02-28 21:01:40+00:00,basic verilog module training,0,MuhammadUsman3506/Verilog_Basic_RTL_Module_Trainning,764861632,SystemVerilog,Verilog_Basic_RTL_Module_Trainning,215,0,2024-02-28 21:19:24+00:00,[],
16483,https://github.com/OrbitNTNU/electronics-FPGA-libs.git,2024-03-01 15:35:20+00:00,Common libraries and modules for FPGA,0,OrbitNTNU/electronics-FPGA-libs,765773836,SystemVerilog,electronics-FPGA-libs,6,0,2024-03-01 16:37:20+00:00,[],
16484,https://github.com/sifferman/flip_flop_example.git,2024-02-25 17:42:53+00:00,,0,sifferman/flip_flop_example,763154163,SystemVerilog,flip_flop_example,1,0,2024-03-03 04:36:51+00:00,[],https://api.github.com/licenses/mit
16485,https://github.com/Arunvaishnav7435/static_array_sorting.git,2024-03-05 05:58:37+00:00,,0,Arunvaishnav7435/static_array_sorting,767345681,SystemVerilog,static_array_sorting,2,0,2024-03-05 06:24:42+00:00,[],
16486,https://github.com/huriyyahasif/DSD-2022ee103.git,2024-02-05 17:53:56+00:00,,0,huriyyahasif/DSD-2022ee103,753224629,SystemVerilog,DSD-2022ee103,404,0,2024-02-05 17:59:33+00:00,[],
16487,https://github.com/NAQI-UL-HASSAN/lab_4.git,2024-03-04 16:22:57+00:00,,0,NAQI-UL-HASSAN/lab_4,767058836,SystemVerilog,lab_4,1688,0,2024-03-04 16:25:09+00:00,[],
16488,https://github.com/Aqib-Wazir101/mylab4.git,2024-03-04 17:47:30+00:00,,0,Aqib-Wazir101/mylab4,767099815,SystemVerilog,mylab4,1754,0,2024-03-04 17:51:17+00:00,[],
16489,https://github.com/Tylerd1208022/387Final.git,2024-02-28 18:42:10+00:00,,0,Tylerd1208022/387Final,764806981,SystemVerilog,387Final,10412,0,2024-03-06 17:59:58+00:00,[],
16490,https://github.com/SamuelJoly23/3311.git,2024-02-09 21:24:32+00:00,tp2,0,SamuelJoly23/3311,755309097,SystemVerilog,3311,20465,0,2024-02-15 18:50:30+00:00,[],
16491,https://github.com/shivaprasadbalne/PRE_SI.git,2024-01-30 17:55:06+00:00,,0,shivaprasadbalne/PRE_SI,750471817,SystemVerilog,PRE_SI,2227,0,2024-01-30 17:56:57+00:00,[],
16492,https://github.com/VeresDenisa/cluster-5-switch-sv-uvm-tb.git,2024-02-22 15:43:58+00:00,,0,VeresDenisa/cluster-5-switch-sv-uvm-tb,761845479,SystemVerilog,cluster-5-switch-sv-uvm-tb,10320,0,2024-02-23 14:14:32+00:00,[],
16493,https://github.com/DudesVult/SHA3.git,2024-02-21 19:03:49+00:00,SHA3 диплом,0,DudesVult/SHA3,761381040,SystemVerilog,SHA3,116,0,2024-03-11 14:53:05+00:00,[],
16494,https://github.com/SergiuWat/TSC.git,2024-02-19 06:17:38+00:00,,0,SergiuWat/TSC,759685095,SystemVerilog,TSC,7999,0,2024-03-04 07:45:28+00:00,[],
16495,https://github.com/yoon123seul/CAST_LAB2.git,2024-01-26 03:48:29+00:00,,0,yoon123seul/CAST_LAB2,748479047,SystemVerilog,CAST_LAB2,31,0,2024-01-26 03:51:05+00:00,[],
16496,https://github.com/Venkata2001/intern1.git,2024-01-28 17:31:01+00:00,,0,Venkata2001/intern1,749474179,SystemVerilog,intern1,8,0,2024-01-28 17:33:12+00:00,[],
16497,https://github.com/Aditishah-729/ECE-551-MazeRunner.git,2024-01-29 02:47:04+00:00,,0,Aditishah-729/ECE-551-MazeRunner,749607201,SystemVerilog,ECE-551-MazeRunner,143,0,2024-01-29 02:49:24+00:00,[],
16499,https://github.com/oleg1322/SystemVerilog-processor.git,2024-01-29 10:19:37+00:00,,0,oleg1322/SystemVerilog-processor,749750301,SystemVerilog,SystemVerilog-processor,2944,0,2024-01-29 10:52:44+00:00,[],
16500,https://github.com/hec-esweek/Cores-VeeR-EH1.git,2024-02-01 12:45:27+00:00,,0,hec-esweek/Cores-VeeR-EH1,751350986,SystemVerilog,Cores-VeeR-EH1,17261,0,2024-02-01 12:45:56+00:00,[],https://api.github.com/licenses/apache-2.0
16501,https://github.com/vladb9715/afvip.git,2024-02-01 11:47:46+00:00,,0,vladb9715/afvip,751328910,SystemVerilog,afvip,61,0,2024-02-01 11:49:29+00:00,[],
16502,https://github.com/iworkfree/freeworld.git,2024-01-29 22:20:40+00:00,,0,iworkfree/freeworld,750051284,SystemVerilog,freeworld,23,0,2024-02-05 00:57:28+00:00,[],
16503,https://github.com/homerovz/coding-challenge-cvw-risc-v-mentroship.git,2024-02-06 20:23:11+00:00,This repo contains the files for the CORE-V Wally RISC-V Mentorship Application,0,homerovz/coding-challenge-cvw-risc-v-mentroship,753802310,SystemVerilog,coding-challenge-cvw-risc-v-mentroship,154,0,2024-02-06 20:25:35+00:00,[],
16504,https://github.com/MYarosLove/fpga_timer.git,2024-02-07 15:50:45+00:00,,0,MYarosLove/fpga_timer,754204434,SystemVerilog,fpga_timer,6140,0,2024-02-07 16:50:24+00:00,[],
16505,https://github.com/Justsomebody1234/Uart-Protocol-RTL.git,2024-02-08 15:02:38+00:00,8bit - UART protocol ,0,Justsomebody1234/Uart-Protocol-RTL,754678539,SystemVerilog,Uart-Protocol-RTL,3,0,2024-02-08 21:08:54+00:00,[],
16506,https://github.com/HarishGoupale/bb_ibex_project.git,2024-02-06 06:27:48+00:00,Ibex riscv,0,HarishGoupale/bb_ibex_project,753451117,,bb_ibex_project,1227,0,2024-02-09 13:19:06+00:00,[],
16507,https://github.com/Ans-Qasim123/Lab_DSD_2.git,2024-02-12 18:10:58+00:00,,0,Ans-Qasim123/Lab_DSD_2,756467636,SystemVerilog,Lab_DSD_2,54,0,2024-02-12 18:39:55+00:00,[],
16508,https://github.com/Shreyas-s-r/NoC-Router-Synchronous.git,2024-02-12 15:38:09+00:00,,0,Shreyas-s-r/NoC-Router-Synchronous,756398847,SystemVerilog,NoC-Router-Synchronous,47,0,2024-02-12 15:38:54+00:00,[],
16509,https://github.com/Matteo019/Progetto.SIS.git,2024-01-26 07:50:04+00:00,Matteo_Sadeep,0,Matteo019/Progetto.SIS,748539419,SystemVerilog,Progetto.SIS,3,0,2024-02-13 17:20:36+00:00,[],
16510,https://github.com/rubenvalenzuelay/cs141lab2new.git,2024-02-14 05:11:46+00:00,,0,rubenvalenzuelay/cs141lab2new,757248892,SystemVerilog,cs141lab2new,9,0,2024-02-14 05:22:04+00:00,[],
16511,https://github.com/dhanasekarp03/SR_latch.git,2024-02-14 06:50:27+00:00,,0,dhanasekarp03/SR_latch,757278218,SystemVerilog,SR_latch,9,0,2024-02-14 06:53:49+00:00,[],
16512,https://github.com/bhargav1236/uvm_reg_handson.git,2024-01-27 13:06:30+00:00,,0,bhargav1236/uvm_reg_handson,749054767,SystemVerilog,uvm_reg_handson,9,0,2024-02-01 14:45:12+00:00,[],
16513,https://github.com/abdullahrasheed126/dsd-lab.git,2024-02-12 17:56:05+00:00,,0,abdullahrasheed126/dsd-lab,756461272,SystemVerilog,dsd-lab,83,0,2024-02-12 20:31:57+00:00,[],
16514,https://github.com/aaayann/lab3.git,2024-02-19 19:35:10+00:00,,0,aaayann/lab3,760100810,SystemVerilog,lab3,494,0,2024-02-19 20:08:29+00:00,[],
16515,https://github.com/waleedkharal/DSD-labs.git,2024-02-01 11:04:11+00:00,for submitting my virlog projects to my teacher,0,waleedkharal/DSD-labs,751312356,SystemVerilog,DSD-labs,112,0,2024-02-04 17:51:22+00:00,[],
16516,https://github.com/AhmedibnaNaveed/Lab3.git,2024-02-20 07:52:45+00:00,,0,AhmedibnaNaveed/Lab3,760323774,SystemVerilog,Lab3,205,0,2024-02-20 07:58:14+00:00,[],
16517,https://github.com/griffinross2/Verilog-CPU-Testing.git,2024-02-17 04:54:04+00:00,Messing around making simple CPU in verilog,0,griffinross2/Verilog-CPU-Testing,758790600,SystemVerilog,Verilog-CPU-Testing,1192,0,2024-02-17 04:57:33+00:00,[],
16518,https://github.com/ejchao/ECE748.git,2024-02-19 04:49:50+00:00,Advanced Functional Verification with UVM,0,ejchao/ECE748,759659119,SystemVerilog,ECE748,25329,0,2024-02-19 04:56:47+00:00,[],
16519,https://github.com/Asadd1503/DSD_lab_3.git,2024-02-19 16:29:29+00:00,,0,Asadd1503/DSD_lab_3,759953986,SystemVerilog,DSD_lab_3,296,0,2024-02-19 16:44:28+00:00,[],
16520,https://github.com/DenizzG/RISC-V-CPU.git,2024-02-19 13:49:52+00:00,,0,DenizzG/RISC-V-CPU,759870328,SystemVerilog,RISC-V-CPU,18076,0,2024-02-19 13:57:38+00:00,[],
16521,https://github.com/SorrentinoPablo/FPGA_ADC_Project.git,2024-02-23 17:41:56+00:00,,0,SorrentinoPablo/FPGA_ADC_Project,762399008,SystemVerilog,FPGA_ADC_Project,146,0,2024-02-23 17:49:25+00:00,[],
16522,https://github.com/mahamdeh0/ALU_Verification.git,2024-02-23 19:04:15+00:00,,0,mahamdeh0/ALU_Verification,762429663,SystemVerilog,ALU_Verification,8,0,2024-02-23 19:05:32+00:00,[],
16523,https://github.com/parvathy10/systemverilog-interface.git,2024-02-19 18:03:40+00:00,,0,parvathy10/systemverilog-interface,760063928,SystemVerilog,systemverilog-interface,4,0,2024-02-22 10:30:46+00:00,[],
16524,https://github.com/mmizumoto1213/cse140-Components-and-Design-Techniques-for-Digital-Systems.git,2024-02-29 00:11:23+00:00,,0,mmizumoto1213/cse140-Components-and-Design-Techniques-for-Digital-Systems,764918664,SystemVerilog,cse140-Components-and-Design-Techniques-for-Digital-Systems,993,0,2024-02-29 00:14:23+00:00,[],
16525,https://github.com/Mekky7/fifo-verfication.git,2024-02-28 16:31:30+00:00,,0,Mekky7/fifo-verfication,764747977,SystemVerilog,fifo-verfication,889,0,2024-02-28 16:33:00+00:00,[],
16526,https://github.com/hess105/Verilog-Depot.git,2024-02-14 23:09:51+00:00,Collection of Verilog Code,0,hess105/Verilog-Depot,757759618,SystemVerilog,Verilog-Depot,162,0,2024-02-15 05:40:33+00:00,"['ice40hx8k', 'verilog']",
16527,https://github.com/Adarshthakur01/AXI4-stream-protocol.git,2024-02-16 08:44:07+00:00,UVM based - AXI4 stream Master and slave protocol,0,Adarshthakur01/AXI4-stream-protocol,758402881,SystemVerilog,AXI4-stream-protocol,25,0,2024-02-29 06:19:17+00:00,[],
16528,https://github.com/Susheelaaa/Verilog_codes.git,2024-03-05 17:32:02+00:00,,0,Susheelaaa/Verilog_codes,767665580,SystemVerilog,Verilog_codes,1,0,2024-03-05 17:50:48+00:00,[],
16529,https://github.com/sumanthmortha/module-3.git,2024-02-26 10:33:35+00:00,,0,sumanthmortha/module-3,763457978,SystemVerilog,module-3,9,0,2024-03-01 07:16:15+00:00,[],
16530,https://github.com/robotman2412/sapphire-gpu.git,2024-01-27 16:32:08+00:00,"Sapphire, an experimental GPU",0,robotman2412/sapphire-gpu,749119852,SystemVerilog,sapphire-gpu,101,0,2024-01-27 22:46:02+00:00,[],https://api.github.com/licenses/cern-ohl-p-2.0
16531,https://github.com/AdamGetBackToWork/Computer_Systems_Project.git,2024-03-02 11:14:45+00:00,,0,AdamGetBackToWork/Computer_Systems_Project,766109667,SystemVerilog,Computer_Systems_Project,1064,0,2024-03-02 11:16:09+00:00,[],
16532,https://github.com/venkatesh-mukkapati/Floating-Point-Multiplication-and-Verification-Using-SV-testbench.git,2024-02-29 21:37:56+00:00,,0,venkatesh-mukkapati/Floating-Point-Multiplication-and-Verification-Using-SV-testbench,765411309,SystemVerilog,Floating-Point-Multiplication-and-Verification-Using-SV-testbench,10,0,2024-02-29 21:44:45+00:00,[],https://api.github.com/licenses/apache-2.0
16533,https://github.com/QamarRaja/lab-4.git,2024-03-04 19:29:18+00:00,my assingment#4,0,QamarRaja/lab-4,767144241,SystemVerilog,lab-4,417,0,2024-03-04 19:37:02+00:00,[],
16534,https://github.com/TayybaShafiq/Lab4.git,2024-03-04 17:14:18+00:00,,0,TayybaShafiq/Lab4,767084149,SystemVerilog,Lab4,56,0,2024-03-04 17:18:33+00:00,[],
16535,https://github.com/Aqib-Wazir101/mylab5.git,2024-03-04 17:53:52+00:00,,0,Aqib-Wazir101/mylab5,767102741,SystemVerilog,mylab5,1284,0,2024-03-04 17:56:40+00:00,[],
16536,https://github.com/HeracrossTheGreek/eek_gost_Marios_Karagiannis_02976.git,2024-02-28 09:07:11+00:00,"This is the repository of my implementation of the GOST 28147-89 block cipher, in System Verilog language, for the purposes of the ECE425 - Testing and Verification of Digital Circuits ",0,HeracrossTheGreek/eek_gost_Marios_Karagiannis_02976,764539484,SystemVerilog,eek_gost_Marios_Karagiannis_02976,4874,0,2024-03-03 13:21:02+00:00,[],
16537,https://github.com/HiagoMacedo/projeto-ULA.git,2024-03-04 20:27:42+00:00,,0,HiagoMacedo/projeto-ULA,767168208,SystemVerilog,projeto-ULA,11,0,2024-03-04 21:08:34+00:00,[],
16538,https://github.com/mkravch/fpga_lessons.git,2024-01-27 06:48:13+00:00,,0,mkravch/fpga_lessons,748960375,SystemVerilog,fpga_lessons,5,0,2024-01-27 06:48:43+00:00,[],
16539,https://github.com/j0106223/rv32i.git,2024-02-28 07:34:24+00:00,rv32i single cycle and 5-stage pipeline,0,j0106223/rv32i,764501917,SystemVerilog,rv32i,57,0,2024-03-17 17:52:58+00:00,[],
16540,https://github.com/HanaYuki399/Optimized_BF16.git,2024-01-30 12:11:04+00:00,,0,HanaYuki399/Optimized_BF16,750315347,SystemVerilog,Optimized_BF16,94,0,2024-02-07 11:24:42+00:00,[],
16541,https://github.com/suriyasaiyan/Multi-level-Cache-Design.git,2024-02-14 18:10:50+00:00,,0,suriyasaiyan/Multi-level-Cache-Design,757550400,SystemVerilog,Multi-level-Cache-Design,24,0,2024-03-09 21:12:14+00:00,[],
16542,https://github.com/scapekambing/mash-1-1-dac.git,2024-02-12 09:10:49+00:00,,0,scapekambing/mash-1-1-dac,756240294,SystemVerilog,mash-1-1-dac,79,0,2024-02-12 09:13:38+00:00,[],https://api.github.com/licenses/mit
16543,https://github.com/shyeonn/Pipeline_CPU.git,2024-02-29 10:05:36+00:00,week3,0,shyeonn/Pipeline_CPU,765115250,SystemVerilog,Pipeline_CPU,53,0,2024-02-29 10:06:00+00:00,[],
16544,https://github.com/secureshellprotocol/ece251.git,2024-02-05 20:18:00+00:00,ECE251 Computer Architecture @ Cooper Union. Prof. Rob Marano,0,secureshellprotocol/ece251,753282291,SystemVerilog,ece251,42,0,2024-03-08 13:27:57+00:00,[],https://api.github.com/licenses/gpl-3.0
16545,https://github.com/Shuregg/ialu-verification.git,2024-02-01 18:28:10+00:00,integer ALU verification example,0,Shuregg/ialu-verification,751502271,SystemVerilog,ialu-verification,44106,0,2024-03-30 19:49:13+00:00,"['alu', 'cpu', 'riscv', 'rtl', 'systemverilog', 'verification']",
16546,https://github.com/CarlosHuu/Digital_Circuits_and_Systems.git,2024-03-01 16:47:41+00:00,112 spring,0,CarlosHuu/Digital_Circuits_and_Systems,765806026,SystemVerilog,Digital_Circuits_and_Systems,9643,0,2024-03-26 06:04:29+00:00,[],
16547,https://github.com/bhavyareddygandeti/I2C-Based-Memory-Substem.git,2024-03-05 02:23:14+00:00,,0,bhavyareddygandeti/I2C-Based-Memory-Substem,767282400,SystemVerilog,I2C-Based-Memory-Substem,7,0,2024-04-10 06:31:57+00:00,[],
16548,https://github.com/bhavyareddygandeti/ASYNCHRONOUS-FIFO.git,2024-03-05 01:07:17+00:00,,0,bhavyareddygandeti/ASYNCHRONOUS-FIFO,767259452,SystemVerilog,ASYNCHRONOUS-FIFO,14,0,2024-04-10 06:31:23+00:00,[],
16549,https://github.com/jusanchez6/Digitales_2.git,2024-02-15 22:32:42+00:00,,1,jusanchez6/Digitales_2,758240316,SystemVerilog,Digitales_2,872,0,2024-02-15 22:36:42+00:00,[],
16550,https://github.com/nickorlow/yayacemu.git,2024-01-31 01:55:06+00:00,Yet another yet another Chip-8 emulator - An interpreter for Chip-8 bytecode writen in SystemVerilog,0,nickorlow/yayacemu,750626559,SystemVerilog,yayacemu,202822,0,2024-02-01 03:05:05+00:00,[],
16551,https://github.com/mole99/tt06-tiny-shader.git,2024-02-17 17:49:52+00:00,,0,mole99/tt06-tiny-shader,759004998,SystemVerilog,tt06-tiny-shader,155,0,2024-04-13 14:53:07+00:00,[],https://api.github.com/licenses/apache-2.0
16552,https://github.com/Vishal2020Raja/KSAdder.git,2024-01-30 11:58:04+00:00,,0,Vishal2020Raja/KSAdder,750310175,SystemVerilog,KSAdder,47,0,2024-01-31 20:43:13+00:00,[],
16553,https://github.com/ogoldste/OpenTitan.git,2024-02-04 10:28:54+00:00,,0,ogoldste/OpenTitan,752601381,SystemVerilog,OpenTitan,82872,0,2024-02-04 13:15:36+00:00,[],https://api.github.com/licenses/apache-2.0
16554,https://github.com/rgantonio/vsim-template.git,2024-02-06 07:50:40+00:00,This is a template for questa sim users. It contains a very simple organization of files.,0,rgantonio/vsim-template,753479170,SystemVerilog,vsim-template,5,0,2024-02-06 08:33:38+00:00,[],https://api.github.com/licenses/unlicense
16555,https://github.com/kanade-k-1228/vmods.git,2024-02-07 04:32:02+00:00,Verilog Modules,0,kanade-k-1228/vmods,753940419,SystemVerilog,vmods,3,0,2024-02-07 06:27:41+00:00,[],
16556,https://github.com/mkkassem/tt-fpga-hdl-demo.git,2024-02-07 16:43:21+00:00,,0,mkkassem/tt-fpga-hdl-demo,754228894,SystemVerilog,tt-fpga-hdl-demo,10,0,2024-02-07 16:43:27+00:00,[],https://api.github.com/licenses/apache-2.0
16557,https://github.com/sudohdl/uvm_1.2.git,2024-01-28 10:53:30+00:00,,0,sudohdl/uvm_1.2,749357724,SystemVerilog,uvm_1.2,8230,0,2024-01-28 11:03:15+00:00,[],https://api.github.com/licenses/apache-2.0
16558,https://github.com/Venkata2001/master.git,2024-01-30 15:42:33+00:00,,0,Venkata2001/master,750410703,SystemVerilog,master,7,0,2024-01-30 15:44:58+00:00,[],
16560,https://github.com/sushanTamu/lab-10-sushanTamu.git,2024-02-01 01:22:12+00:00,,0,sushanTamu/lab-10-sushanTamu,751126211,SystemVerilog,lab-10-sushanTamu,14958,0,2024-02-01 01:22:41+00:00,[],
16561,https://github.com/sushanTamu/lab-6-sushanTamu.git,2024-02-01 01:24:22+00:00,,0,sushanTamu/lab-6-sushanTamu,751126744,SystemVerilog,lab-6-sushanTamu,7867,0,2024-02-01 01:24:44+00:00,[],
16562,https://github.com/Nisitha529/UVM_AXI_Verification_Project.git,2024-02-01 07:00:27+00:00,,0,Nisitha529/UVM_AXI_Verification_Project,751219783,SystemVerilog,UVM_AXI_Verification_Project,8,0,2024-02-01 07:09:07+00:00,[],
16563,https://github.com/srikala-reddi/d_ram.git,2024-02-15 05:12:55+00:00,,0,srikala-reddi/d_ram,757843313,SystemVerilog,d_ram,21,0,2024-02-15 05:14:59+00:00,[],
16564,https://github.com/ajay-walia/32-bit-RISC-V-Processor-Verilog.git,2024-02-15 11:05:50+00:00,32-bit RISC-V Processor Verilog,0,ajay-walia/32-bit-RISC-V-Processor-Verilog,757967811,SystemVerilog,32-bit-RISC-V-Processor-Verilog,27,0,2024-02-15 11:15:02+00:00,[],
16565,https://github.com/hemanth-VP/DRAM_uvm.git,2024-02-15 10:05:35+00:00,,0,hemanth-VP/DRAM_uvm,757944403,SystemVerilog,DRAM_uvm,7,0,2024-02-15 10:07:05+00:00,[],
16566,https://github.com/KrystalDelusion/sby-bigexample.git,2024-02-12 16:08:53+00:00,,1,KrystalDelusion/sby-bigexample,756413486,SystemVerilog,sby-bigexample,23,0,2024-02-12 16:10:12+00:00,[],
16567,https://github.com/Sproropo/Simplified-RC4-SV.git,2024-02-16 15:00:54+00:00,"This project implements a hardware module for a simplified version of the RC4 stream cipher, designed for encrypting plaintext.",0,Sproropo/Simplified-RC4-SV,758548353,SystemVerilog,Simplified-RC4-SV,6,0,2024-02-16 15:02:09+00:00,[],
16568,https://github.com/akshay7895/Assertions.git,2024-02-19 16:49:40+00:00,,0,akshay7895/Assertions,760024432,SystemVerilog,Assertions,1,0,2024-02-19 16:55:47+00:00,[],
16569,https://github.com/segevbr/EEELab1A_Project.git,2024-02-20 18:16:18+00:00,,0,segevbr/EEELab1A_Project,760673895,SystemVerilog,EEELab1A_Project,22326,0,2024-02-20 18:44:07+00:00,[],
16570,https://github.com/BASAVA868/DESIGN.git,2024-02-23 12:33:40+00:00,,0,BASAVA868/DESIGN,762269231,SystemVerilog,DESIGN,0,0,2024-02-23 13:33:51+00:00,[],
16571,https://github.com/2022-EE-183/DSD_L.git,2024-02-19 18:58:24+00:00,,0,2022-EE-183/DSD_L,760086274,SystemVerilog,DSD_L,1032,0,2024-02-19 19:07:36+00:00,[],
16572,https://github.com/Nikolai489/tests.git,2024-02-27 03:23:38+00:00,,0,Nikolai489/tests,763858059,SystemVerilog,tests,75512,0,2024-03-08 07:13:48+00:00,[],
16573,https://github.com/newfrogg/lstm_accel.git,2024-02-21 08:10:59+00:00,,0,newfrogg/lstm_accel,761089242,SystemVerilog,lstm_accel,65236,0,2024-03-05 08:58:32+00:00,[],
16574,https://github.com/liamherlihy/rtl.git,2024-02-02 10:51:16+00:00,rtl-source-code,0,liamherlihy/rtl,751796332,SystemVerilog,rtl,25,0,2024-02-02 10:53:55+00:00,[],
16575,https://github.com/SoftGoat/Digital-systems.git,2024-02-28 19:38:35+00:00,,0,SoftGoat/Digital-systems,764830254,SystemVerilog,Digital-systems,255,0,2024-02-28 19:38:56+00:00,[],
16576,https://github.com/yoonbenjamin/CIS-4710.git,2024-01-29 15:46:44+00:00,,0,yoonbenjamin/CIS-4710,749889466,SystemVerilog,CIS-4710,3973,0,2024-03-19 02:32:48+00:00,[],https://api.github.com/licenses/mit
16577,https://github.com/javierespinoza09/RAL_Test.git,2024-02-24 19:21:27+00:00,,0,javierespinoza09/RAL_Test,762818596,SystemVerilog,RAL_Test,70,0,2024-02-25 00:14:17+00:00,[],
16578,https://github.com/aditya-charan/practice.git,2024-02-26 09:55:18+00:00,,0,aditya-charan/practice,763441658,SystemVerilog,practice,1,0,2024-02-26 10:56:07+00:00,[],
16579,https://github.com/KarthikReddy1911/Assignment.git,2024-02-26 11:23:53+00:00,,1,KarthikReddy1911/Assignment,763478759,SystemVerilog,Assignment,34,0,2024-02-26 17:41:40+00:00,[],
16580,https://github.com/KaiRoy/risc-v-sv-project.git,2024-01-27 21:00:29+00:00,,0,KaiRoy/risc-v-sv-project,749194257,SystemVerilog,risc-v-sv-project,177,0,2024-02-27 23:50:42+00:00,[],
16581,https://github.com/Shiofi/TALLER-DIGITALES-2024.git,2024-02-08 19:37:02+00:00,,0,Shiofi/TALLER-DIGITALES-2024,754798876,SystemVerilog,TALLER-DIGITALES-2024,333,0,2024-02-17 03:13:57+00:00,[],
16582,https://github.com/hafizmuhammadahmad01/dsdlab4.git,2024-03-04 17:58:44+00:00,,0,hafizmuhammadahmad01/dsdlab4,767105046,SystemVerilog,dsdlab4,641,0,2024-03-04 18:01:30+00:00,[],
16583,https://github.com/enieman/tt06-verilog-template.git,2024-02-07 16:38:43+00:00,,0,enieman/tt06-verilog-template,754226794,SystemVerilog,tt06-verilog-template,111,0,2024-02-20 20:36:40+00:00,[],https://api.github.com/licenses/apache-2.0
16584,https://github.com/gabejessil/tt-fpga-hdl-demo.git,2024-03-04 19:41:33+00:00,,0,gabejessil/tt-fpga-hdl-demo,767149350,SystemVerilog,tt-fpga-hdl-demo,382,0,2024-03-04 19:41:40+00:00,[],https://api.github.com/licenses/apache-2.0
16585,https://github.com/CHEN-Xinsheng/cod23-grp19.git,2024-03-04 14:16:54+00:00,"A 32-bit 7-stage RISC-V pipeline CPU with traps, virtual memory, S privilege mode, cache, branch prediction and TLB. Supports VGA, flash and uCore (a simple OS). Course project of ""Computer Organization and Design"" (2023), Tsinghua University.",0,CHEN-Xinsheng/cod23-grp19,766996403,SystemVerilog,cod23-grp19,9082,0,2024-03-10 08:29:38+00:00,[],
16586,https://github.com/CarsonKring/Lab2.git,2024-02-26 02:48:30+00:00,,0,CarsonKring/Lab2,763297977,SystemVerilog,Lab2,24330,0,2024-02-26 02:48:38+00:00,[],https://api.github.com/licenses/mit
16587,https://github.com/xver/icecream_sv.git,2024-02-24 13:47:14+00:00,IceCream for SystemVerilog:  Never use $display and `uvm_info to debug SystemVerilog again.,0,xver/icecream_sv,762715377,SystemVerilog,icecream_sv,198,0,2024-03-10 22:28:40+00:00,"['debug', 'debugging-tools', 'icecream', 'systemverilog', 'systemverilog-simulation', 'systemverilog-test-bench', 'debugging', 'systemverilog-developer', 'systemverilog-hdl', 'verilog-hdl']",
16588,https://github.com/DashLHall/Dashiell-Hall-Professional.git,2024-01-26 22:20:21+00:00,,0,DashLHall/Dashiell-Hall-Professional,748858094,SystemVerilog,Dashiell-Hall-Professional,45,0,2024-04-02 20:42:34+00:00,[],
16589,https://github.com/Mihaidono/TSC.git,2024-02-19 06:16:56+00:00,,0,Mihaidono/TSC,759684854,SystemVerilog,TSC,17,0,2024-03-04 07:57:15+00:00,[],
16590,https://github.com/hant225/UVM.git,2024-01-29 09:01:17+00:00,,0,hant225/UVM,749718871,SystemVerilog,UVM,19498,0,2024-02-28 15:40:04+00:00,[],
16591,https://github.com/10nutz/TSC.git,2024-02-21 06:29:11+00:00,,0,10nutz/TSC,761051254,SystemVerilog,TSC,8127,0,2024-02-28 07:48:07+00:00,[],
16592,https://github.com/marius021/TSC.git,2024-02-21 06:35:56+00:00,,0,marius021/TSC,761053645,SystemVerilog,TSC,8364,0,2024-02-28 07:49:34+00:00,[],
16593,https://github.com/zeroasiccorp/ebrick-demo.git,2024-03-19 06:37:20+00:00,Demo: how to create a custom EBRICK,0,zeroasiccorp/ebrick-demo,774216308,SystemVerilog,ebrick-demo,5095,10,2024-04-01 17:37:55+00:00,[],https://api.github.com/licenses/apache-2.0
16594,https://github.com/cmu-snap/BBQ.git,2024-04-03 06:39:32+00:00,"Artifacts for the ""BBQ: A Fast and Scalable Integer Priority Queue for Hardware Packet Scheduling"" paper that appears in NSDI '24.",1,cmu-snap/BBQ,781315728,SystemVerilog,BBQ,81,7,2024-04-11 20:13:34+00:00,[],https://api.github.com/licenses/bsd-3-clause-clear
16595,https://github.com/junjie-meng/MCU-Design.git,2024-03-12 00:39:36+00:00,,0,junjie-meng/MCU-Design,770675098,SystemVerilog,MCU-Design,1128,5,2024-04-06 12:38:45+00:00,[],
16596,https://github.com/pulp-platform/dram_rtl_sim.git,2024-03-19 14:05:31+00:00,,1,pulp-platform/dram_rtl_sim,774413327,SystemVerilog,dram_rtl_sim,34,5,2024-04-07 09:51:13+00:00,[],
16597,https://github.com/cp024s/APB-UVM.git,2024-03-21 14:02:39+00:00,APB verification based on Universal verification Method,0,cp024s/APB-UVM,775499561,SystemVerilog,APB-UVM,17,2,2024-03-30 17:02:47+00:00,"['apb', 'protocol', 'uvm-verification']",https://api.github.com/licenses/mit
16598,https://github.com/dsheffie/wasmcore.git,2024-03-29 16:52:24+00:00,,0,dsheffie/wasmcore,779360558,SystemVerilog,wasmcore,5739,2,2024-04-02 19:47:24+00:00,[],
16599,https://github.com/RndMnkIII/Analogizer-Pocket-Alpha-Mission.git,2024-03-12 18:25:15+00:00,Added support for Analogizer adapter,0,RndMnkIII/Analogizer-Pocket-Alpha-Mission,771126922,SystemVerilog,Analogizer-Pocket-Alpha-Mission,14358,2,2024-03-13 22:59:18+00:00,[],https://api.github.com/licenses/gpl-3.0
16600,https://github.com/DatNguyen97-VN/cellrv32.git,2024-03-07 01:24:40+00:00,":milky_way: A tiny, customizable and extensible MCU-class 32-bit RISC-V soft-core CPU and microcontroller-like SoC written in SystemVerilog. Stage 1, the purpose is to learn how to design a risc-v processor with basic peripherals and the RISC-V instruction set architecture for amatuer.",0,DatNguyen97-VN/cellrv32,768383632,SystemVerilog,cellrv32,8114,2,2024-03-23 14:09:58+00:00,"['microcontroller', 'risc-v', 'soc', 'system-on-chip', 'systemverilog']",
16601,https://github.com/eman465/labs_sv.git,2024-03-11 17:45:22+00:00,,0,eman465/labs_sv,770525198,SystemVerilog,labs_sv,11,2,2024-03-18 17:07:57+00:00,[],
16602,https://github.com/nananapo/bluecore.git,2024-04-09 06:45:36+00:00,,0,nananapo/bluecore,784084441,SystemVerilog,bluecore,88,2,2024-04-13 00:13:40+00:00,[],
16603,https://github.com/henry27030/141L-Mips-Project.git,2024-03-17 04:07:34+00:00,,0,henry27030/141L-Mips-Project,773221689,SystemVerilog,141L-Mips-Project,19,1,2024-03-17 17:49:25+00:00,[],
16604,https://github.com/Shankeydev/AMBA_AXI_DV.git,2024-04-04 08:29:35+00:00,Hardware design and verification projects by me,0,Shankeydev/AMBA_AXI_DV,781888532,SystemVerilog,AMBA_AXI_DV,12,1,2024-04-04 10:08:15+00:00,[],
16605,https://github.com/intelligent-logics/hardware.git,2024-03-21 16:16:21+00:00,,0,intelligent-logics/hardware,775566005,SystemVerilog,hardware,211898,1,2024-04-09 23:29:18+00:00,[],
16606,https://github.com/adamwalker/fpga-hashmap.git,2024-03-29 09:37:51+00:00,An on-chip RAM based FPGA hashmap,0,adamwalker/fpga-hashmap,779208748,SystemVerilog,fpga-hashmap,41,1,2024-03-29 11:30:55+00:00,[],https://api.github.com/licenses/agpl-3.0
16607,https://github.com/gmlarumbe/tree-sitter-systemverilog.git,2024-03-26 18:16:55+00:00,Rewrite of tree-sitter-verilog,0,gmlarumbe/tree-sitter-systemverilog,777907813,SystemVerilog,tree-sitter-systemverilog,18814,1,2024-04-01 03:24:33+00:00,[],
16608,https://github.com/robfinch/nPower.git,2024-03-13 19:04:54+00:00,Core similar to PowerPC 32,0,robfinch/nPower,771688838,SystemVerilog,nPower,887,1,2024-03-18 19:29:54+00:00,[],
16609,https://github.com/xiachunqiudong/Xia.git,2024-03-15 12:36:42+00:00,Xia is a out of order CPU.,0,xiachunqiudong/Xia,772558146,SystemVerilog,Xia,5,1,2024-03-19 10:17:40+00:00,[],
16610,https://github.com/kzz1031/Architect2024.git,2024-03-10 13:40:51+00:00,,0,kzz1031/Architect2024,769938272,SystemVerilog,Architect2024,36,1,2024-03-10 13:50:51+00:00,[],
16611,https://github.com/kons-9/collision_avoidance_hdl.git,2024-03-11 09:01:54+00:00,,0,kons-9/collision_avoidance_hdl,770269836,SystemVerilog,collision_avoidance_hdl,7,1,2024-03-21 05:48:11+00:00,[],
16612,https://github.com/Outfox001/APB.git,2024-03-08 08:58:31+00:00,Functional TB for APB Protocol,0,Outfox001/APB,769057842,SystemVerilog,APB,42,1,2024-03-08 09:10:07+00:00,[],
16613,https://github.com/lalitprasadperi/AXI_NOC.git,2024-03-23 02:12:48+00:00,Senior Project for [ECE5545]: AXI NOC with Embedded ECC and HARQ,0,lalitprasadperi/AXI_NOC,776253478,SystemVerilog,AXI_NOC,55,1,2024-03-31 03:20:10+00:00,[],
16614,https://github.com/Basavakirana/AHB2APB-Bridge-Verification.git,2024-03-10 13:42:12+00:00,Verification of AHB to APB Bridge using UVM,0,Basavakirana/AHB2APB-Bridge-Verification,769938680,SystemVerilog,AHB2APB-Bridge-Verification,2450,1,2024-03-12 13:17:46+00:00,[],
16615,https://github.com/quantiumv/core.git,2024-03-29 17:45:45+00:00,Core for QuantiumV - A RISC-V SoC collab work.,0,quantiumv/core,779379200,SystemVerilog,core,69,1,2024-03-29 17:50:12+00:00,[],https://api.github.com/licenses/mit
16616,https://github.com/Kareem-Yahia/SPI_Full_UVM_With_2_Envs-Assertion_Based.git,2024-04-09 13:27:57+00:00,,0,Kareem-Yahia/SPI_Full_UVM_With_2_Envs-Assertion_Based,784246278,SystemVerilog,SPI_Full_UVM_With_2_Envs-Assertion_Based,6239,1,2024-04-09 18:35:08+00:00,[],
16617,https://github.com/Kareem-Yahia/UART_Tx-RTL-TB.git,2024-04-09 12:48:32+00:00,,0,Kareem-Yahia/UART_Tx-RTL-TB,784228756,SystemVerilog,UART_Tx-RTL-TB,778,1,2024-04-09 15:00:34+00:00,[],
16618,https://github.com/des-cei/cgra_gen.git,2024-03-13 09:31:20+00:00,Elastic Coarse-Grained Reconfigurable Architecture Generator,0,des-cei/cgra_gen,771428644,SystemVerilog,cgra_gen,22,1,2024-04-11 09:49:03+00:00,['reconfigurable-computing'],
16619,https://github.com/pjclet/Superscalar-Out-of-Order-RISC-V-Execution.git,2024-03-21 22:46:06+00:00,,0,pjclet/Superscalar-Out-of-Order-RISC-V-Execution,775713978,SystemVerilog,Superscalar-Out-of-Order-RISC-V-Execution,1822,1,2024-03-21 23:00:49+00:00,[],
16620,https://github.com/ayaahmed20018414/System-Verilog-verification-Environment-for-ALU-Project.git,2024-03-19 19:32:58+00:00,,0,ayaahmed20018414/System-Verilog-verification-Environment-for-ALU-Project,774572036,SystemVerilog,System-Verilog-verification-Environment-for-ALU-Project,1191,1,2024-03-19 21:12:50+00:00,[],https://api.github.com/licenses/mit
16621,https://github.com/Bluju/DigitalCombinationLock.git,2024-03-21 17:37:26+00:00,Digital Combination Lock for ECE 27001 Digital Systems Final Project.,0,Bluju/DigitalCombinationLock,775603652,SystemVerilog,DigitalCombinationLock,2,1,2024-03-21 21:56:21+00:00,[],
16622,https://github.com/Tony27stark022002/All_Verilog_projects.git,2024-03-08 13:06:35+00:00,You can find all the verilog related designs and code here.,0,Tony27stark022002/All_Verilog_projects,769154787,SystemVerilog,All_Verilog_projects,7,1,2024-03-10 06:08:57+00:00,[],https://api.github.com/licenses/unlicense
16623,https://github.com/Jvlachos/SFIFO.git,2024-04-07 22:55:17+00:00,SFIFO in System Verilog ,0,Jvlachos/SFIFO,783451454,SystemVerilog,SFIFO,3,1,2024-04-11 08:13:01+00:00,[],
16624,https://github.com/out-of-order55/DCache.git,2024-04-11 05:55:36+00:00,,0,out-of-order55/DCache,785064600,SystemVerilog,DCache,4687,1,2024-04-11 05:57:12+00:00,[],
16625,https://github.com/sifferman/ternary_matmul.git,2024-04-11 20:24:21+00:00,,0,sifferman/ternary_matmul,785402227,SystemVerilog,ternary_matmul,6,1,2024-04-12 04:41:16+00:00,[],
16626,https://github.com/robfinch/rf80386.git,2024-03-18 03:53:28+00:00,8088 / 80386 similar cores,0,robfinch/rf80386,773603398,SystemVerilog,rf80386,91,1,2024-03-18 19:32:36+00:00,[],
16627,https://github.com/yuliou/IDC.git,2024-04-04 07:48:17+00:00,,0,yuliou/IDC,781872406,SystemVerilog,IDC,12,1,2024-04-04 08:34:41+00:00,[],
16628,https://github.com/hkzlab/supercar_larson_scanner.git,2024-03-20 07:48:53+00:00,A simple SMD Larson Scanner board made out of 74' logic,0,hkzlab/supercar_larson_scanner,774796583,SystemVerilog,supercar_larson_scanner,5041,1,2024-03-26 16:06:46+00:00,"['blinkenlights', 'kicad', 'kitt', 'knightrider', 'larsonscanner', 'pcb']",
16629,https://github.com/boboloiono/Digital-System-Design-Synthesis.git,2024-03-10 07:45:34+00:00,A ECE course where I've taken in UW-Madison. Introduction to the use of HDL and automated synthesis in design. Advanced design principles. Verilog and VHDL description languages. Synthesis from hardware description languages. Timing-oriented synthesis. Relation of integrated circuit layout to timing-oriented design. Design for reuse.,0,boboloiono/Digital-System-Design-Synthesis,769837745,SystemVerilog,Digital-System-Design-Synthesis,572592,1,2024-03-12 09:09:28+00:00,[],
16630,https://github.com/lcsaszar01/UAV_risc_V.git,2024-03-20 14:37:29+00:00,,0,lcsaszar01/UAV_risc_V,774973833,SystemVerilog,UAV_risc_V,27,1,2024-03-31 03:43:45+00:00,[],https://api.github.com/licenses/unlicense
16632,https://github.com/Kareem-Yahia/FIFO_RTL_SV-TB_Class-based-Low-level-Assertions.git,2024-04-09 12:14:46+00:00,,0,Kareem-Yahia/FIFO_RTL_SV-TB_Class-based-Low-level-Assertions,784214296,SystemVerilog,FIFO_RTL_SV-TB_Class-based-Low-level-Assertions,241,1,2024-04-09 14:59:56+00:00,[],
16633,https://github.com/ayaahmed20018414/UVM-Environment-for-ALU-Design-1.git,2024-03-18 22:40:19+00:00,,0,ayaahmed20018414/UVM-Environment-for-ALU-Design-1,774075338,SystemVerilog,UVM-Environment-for-ALU-Design-1,21,1,2024-03-19 04:20:28+00:00,[],
16634,https://github.com/RomanVernin/streebog.git,2024-03-29 07:25:25+00:00,streebog hash GOST 34.11-2012,0,RomanVernin/streebog,779165003,SystemVerilog,streebog,42,1,2024-04-02 15:31:59+00:00,[],
16637,https://github.com/danbaws/lab3.git,2024-03-06 07:57:49+00:00,,0,danbaws/lab3,767957326,SystemVerilog,lab3,4,0,2024-03-06 07:58:04+00:00,[],
16638,https://github.com/rohith2h2/Asynchronous-FIFO-design.git,2024-03-10 19:50:44+00:00,,0,rohith2h2/Asynchronous-FIFO-design,770056620,SystemVerilog,Asynchronous-FIFO-design,9,0,2024-03-10 19:51:30+00:00,[],
16639,https://github.com/Sukhithaaithal/uvm_example.git,2024-03-12 16:46:22+00:00,,0,Sukhithaaithal/uvm_example,771079834,SystemVerilog,uvm_example,5,0,2024-03-12 16:49:31+00:00,[],
16641,https://github.com/sorukohi/uart-interface.git,2024-03-14 14:24:14+00:00,,0,sorukohi/uart-interface,772094346,SystemVerilog,uart-interface,7,0,2024-03-14 14:30:04+00:00,[],
16642,https://github.com/Akhilesh2709/Edge_Detector.git,2024-03-18 16:42:25+00:00,Edge Detector Design in verilog with complete system verilog tb architecture,0,Akhilesh2709/Edge_Detector,773931239,SystemVerilog,Edge_Detector,19,0,2024-03-18 16:46:19+00:00,[],
16643,https://github.com/saira-ijaz/lab_6.git,2024-03-19 04:08:08+00:00,,0,saira-ijaz/lab_6,774168916,SystemVerilog,lab_6,15746,0,2024-03-19 04:11:39+00:00,[],
16644,https://github.com/robfinch/rf6809.git,2024-03-20 01:56:25+00:00,6809 similar core 8/12 bits,0,robfinch/rf6809,774690093,SystemVerilog,rf6809,8425,0,2024-03-20 01:56:38+00:00,[],
16645,https://github.com/jays-01/FIR.git,2024-03-23 09:48:34+00:00,,0,jays-01/FIR,776363497,SystemVerilog,FIR,228,0,2024-03-23 10:07:09+00:00,[],
16646,https://github.com/DevPro13/RISC-V-Complete-Multicycle-Processor-Design.git,2024-03-15 14:13:44+00:00,,0,DevPro13/RISC-V-Complete-Multicycle-Processor-Design,772601004,SystemVerilog,RISC-V-Complete-Multicycle-Processor-Design,14491,0,2024-03-24 08:00:35+00:00,[],
16647,https://github.com/Arunvaishnav7435/mailbox.git,2024-03-25 05:47:31+00:00,,0,Arunvaishnav7435/mailbox,777062016,SystemVerilog,mailbox,3,0,2024-03-25 05:48:25+00:00,[],
16648,https://github.com/tamu-seth-lab-soc/llm_assertions.git,2024-03-22 03:43:02+00:00,,0,tamu-seth-lab-soc/llm_assertions,775793135,SystemVerilog,llm_assertions,11,0,2024-03-22 19:16:50+00:00,[],
16649,https://github.com/gunnchOS3k/eg3573_lab2_6443.git,2024-03-26 16:19:38+00:00,,0,gunnchOS3k/eg3573_lab2_6443,777855711,SystemVerilog,eg3573_lab2_6443,6494,0,2024-03-26 16:19:45+00:00,[],
16650,https://github.com/Rakesh5173/Finite-State-Machine.git,2024-03-31 04:09:28+00:00,,0,Rakesh5173/Finite-State-Machine,779889854,SystemVerilog,Finite-State-Machine,2,0,2024-03-31 04:12:20+00:00,[],
16651,https://github.com/marcelofaleiro/uvm_example.git,2024-04-07 13:00:47+00:00,,0,marcelofaleiro/uvm_example,783280127,SystemVerilog,uvm_example,0,0,2024-04-07 13:06:39+00:00,[],
16653,https://github.com/PENGLAI-ZGC-TEE/TLROT.git,2024-03-07 01:49:03+00:00,,0,PENGLAI-ZGC-TEE/TLROT,768390213,SystemVerilog,TLROT,1123,0,2024-03-07 02:37:57+00:00,[],
16654,https://github.com/huynguyendinhhcmut/lab1_ex4.git,2024-03-23 13:19:47+00:00,,0,huynguyendinhhcmut/lab1_ex4,776423392,SystemVerilog,lab1_ex4,6,0,2024-03-23 13:20:36+00:00,[],
16655,https://github.com/fqw1727252209/sha-256.git,2024-04-07 02:01:04+00:00,ucsd ece111 project3,0,fqw1727252209/sha-256,783121181,SystemVerilog,sha-256,42,0,2024-04-09 13:07:23+00:00,[],
16656,https://github.com/nikosbrozos/computer_arch.git,2024-04-10 17:42:21+00:00,Computer architecture lab for uni,0,nikosbrozos/computer_arch,784858851,SystemVerilog,computer_arch,19,0,2024-04-10 18:07:55+00:00,[],
16657,https://github.com/mogahed22/examples_using_systemVerilog.git,2024-04-11 11:31:32+00:00,,0,mogahed22/examples_using_systemVerilog,785188443,SystemVerilog,examples_using_systemVerilog,4,0,2024-04-11 11:32:10+00:00,[],
16658,https://github.com/arhamhashmi01/rv32i-sv.git,2024-04-10 05:54:06+00:00,This repository contain the implementation of RV32I 5-Stage-Pipeline-Processor based on RISC-V ISA and designed on System Verilog,0,arhamhashmi01/rv32i-sv,784575429,SystemVerilog,rv32i-sv,5,0,2024-04-10 06:01:52+00:00,"['5-stage-pipeline', '5-stage-pipelined-processor', 'hardware-designs', 'microprocessor', 'systemverilog', 'systemverilog-hdl']",
16659,https://github.com/sumanthbs17/UVM_RAL_PROJECT_TEAM_3.git,2024-04-10 11:42:54+00:00,,0,sumanthbs17/UVM_RAL_PROJECT_TEAM_3,784703387,SystemVerilog,UVM_RAL_PROJECT_TEAM_3,12,0,2024-04-10 11:46:07+00:00,[],
16660,https://github.com/BGull00/dvs-camera-ravens-interface.git,2024-03-27 15:55:10+00:00,This repository is dedicated to the hardware design of an interface between iniVation AER DVS (event based) cameras and the RAVENS neuromorphic processor.,0,BGull00/dvs-camera-ravens-interface,778376700,SystemVerilog,dvs-camera-ravens-interface,11,0,2024-04-05 21:03:03+00:00,[],
16661,https://github.com/alkaev/Circuit_stack.git,2024-04-12 19:21:50+00:00,,0,alkaev/Circuit_stack,785858266,SystemVerilog,Circuit_stack,1357,0,2024-04-12 19:30:05+00:00,[],
16662,https://github.com/awongng/PE.git,2024-04-05 08:19:55+00:00,,0,awongng/PE,782400520,SystemVerilog,PE,179,0,2024-04-05 14:11:14+00:00,[],
16663,https://github.com/MasterPlayer/axi_memory_writer_intr.git,2024-04-06 13:44:46+00:00,Component for writing to DDR memory over AXI interface from AXI-Stream to AXI full with support interrupts,0,MasterPlayer/axi_memory_writer_intr,782943116,SystemVerilog,axi_memory_writer_intr,47,0,2024-04-07 16:12:07+00:00,[],https://api.github.com/licenses/mit
16664,https://github.com/Gavino117/Lab3.git,2024-04-05 19:04:48+00:00,lab 3,0,Gavino117/Lab3,782666522,SystemVerilog,Lab3,23,0,2024-04-05 19:07:25+00:00,[],
16665,https://github.com/minhdok20/MITO-CNN-Accelerator.git,2024-03-07 13:57:13+00:00,,0,minhdok20/MITO-CNN-Accelerator,768660907,SystemVerilog,MITO-CNN-Accelerator,358,0,2024-03-07 15:02:57+00:00,[],
16666,https://github.com/parvathy10/oops-sv.git,2024-03-06 12:04:27+00:00,,0,parvathy10/oops-sv,768064599,SystemVerilog,oops-sv,2,0,2024-03-06 12:05:54+00:00,[],
16667,https://github.com/Navneet-Singh20/MUX_2x1_SV.git,2024-03-10 14:20:28+00:00,I have designed 2x1 Mux and verified with SV also added coverage and assertions. ,0,Navneet-Singh20/MUX_2x1_SV,769951359,SystemVerilog,MUX_2x1_SV,165,0,2024-03-10 14:27:11+00:00,[],
16668,https://github.com/Arunvaishnav7435/associative_array_methods.git,2024-03-09 17:35:56+00:00,,0,Arunvaishnav7435/associative_array_methods,769658224,SystemVerilog,associative_array_methods,3,0,2024-03-09 17:37:40+00:00,[],
16669,https://github.com/Josse-classroom-test/combinatorial.git,2024-03-06 13:02:42+00:00,,0,Josse-classroom-test/combinatorial,768090840,SystemVerilog,combinatorial,389,0,2024-03-11 13:47:28+00:00,[],
16670,https://github.com/Hammad1341/DSD-Lab-6.git,2024-03-18 18:50:54+00:00,,0,Hammad1341/DSD-Lab-6,773991612,SystemVerilog,DSD-Lab-6,319,0,2024-03-18 18:52:49+00:00,[],
16671,https://github.com/cvsr2002/8088-bus-functional-model.git,2024-03-10 03:55:58+00:00,"Synthesizable bus functional model of 8088 using FSM modeling, interfaces and System Verilog IP",2,cvsr2002/8088-bus-functional-model,769788137,SystemVerilog,8088-bus-functional-model,35,0,2024-03-10 08:20:44+00:00,[],
16672,https://github.com/tobiasrxfx/single-cycle-riscv.git,2024-03-21 14:02:24+00:00,This repository contains the project of a single cycle risc-v processor. The RTL design is done using SystemVerilog.,0,tobiasrxfx/single-cycle-riscv,775499452,SystemVerilog,single-cycle-riscv,8125,0,2024-03-21 14:47:48+00:00,[],
16673,https://github.com/GanniAkash/riscv-core.git,2024-03-17 19:55:51+00:00,,0,GanniAkash/riscv-core,773490816,SystemVerilog,riscv-core,22,0,2024-03-17 20:12:13+00:00,[],
16674,https://github.com/DatNguyen97-VN/github-beginer.git,2024-03-06 08:32:07+00:00,,0,DatNguyen97-VN/github-beginer,767971287,SystemVerilog,github-beginer,3976,0,2024-03-06 14:43:41+00:00,[],
16675,https://github.com/Alerodcas/Tarea2_TallerDigital.git,2024-03-21 18:13:11+00:00,,0,Alerodcas/Tarea2_TallerDigital,775618676,SystemVerilog,Tarea2_TallerDigital,59523,0,2024-03-22 19:59:30+00:00,[],
16676,https://github.com/JPflat/vga_controller.git,2024-03-25 14:48:40+00:00,,0,JPflat/vga_controller,777277529,SystemVerilog,vga_controller,12,0,2024-03-25 14:51:50+00:00,[],
16677,https://github.com/JiangShitong/axi_master.git,2024-03-27 18:07:52+00:00,,0,JiangShitong/axi_master,778435684,SystemVerilog,axi_master,16,0,2024-03-27 18:08:34+00:00,[],
16678,https://github.com/manxoh/uvm_book_examples.git,2024-03-13 21:40:50+00:00,A Practical Guide to Adopting the Universal Verification Methodology (UVM) Second Edition Book examples,0,manxoh/uvm_book_examples,771743172,SystemVerilog,uvm_book_examples,192,0,2024-03-13 21:45:17+00:00,[],
16679,https://github.com/huynguyendinhhcmut/lab2_ex1.git,2024-03-29 06:30:50+00:00,,0,huynguyendinhhcmut/lab2_ex1,779148187,SystemVerilog,lab2_ex1,4,0,2024-03-29 06:31:20+00:00,[],
16680,https://github.com/Hunder21/source.git,2024-03-28 16:45:10+00:00,,0,Hunder21/source,778910555,SystemVerilog,source,2,0,2024-03-29 07:09:06+00:00,[],
16681,https://github.com/eugenecc1/FPGA-SystemVerilog.git,2024-03-30 21:48:29+00:00,,0,eugenecc1/FPGA-SystemVerilog,779821540,SystemVerilog,FPGA-SystemVerilog,114,0,2024-03-30 21:51:16+00:00,[],
16682,https://github.com/MaZirui2001/cache-sim.git,2024-04-02 02:34:27+00:00,A simulation for cache design,0,MaZirui2001/cache-sim,780710992,SystemVerilog,cache-sim,4,0,2024-04-02 06:26:13+00:00,[],
16683,https://github.com/MrHeatcliff/Bound-Flasher.git,2024-03-14 23:37:46+00:00,This repo is a Bound Flasher module in VLSI laboratory course in HCMUT,0,MrHeatcliff/Bound-Flasher,772304968,SystemVerilog,Bound-Flasher,18,0,2024-03-17 06:42:32+00:00,[],
16684,https://github.com/TayybaShafiq/Lab8.git,2024-04-01 19:18:22+00:00,,0,TayybaShafiq/Lab8,780582143,SystemVerilog,Lab8,320,0,2024-04-01 19:19:33+00:00,[],
16685,https://github.com/hausdinge/raym-fpga.git,2024-03-29 18:27:05+00:00,,0,hausdinge/raym-fpga,779393822,SystemVerilog,raym-fpga,127,0,2024-03-29 18:49:04+00:00,[],
16686,https://github.com/TUBTUB34/DIGIProject.git,2024-04-02 15:19:19+00:00,LED matrix with FPGA,0,TUBTUB34/DIGIProject,781006996,SystemVerilog,DIGIProject,21790,0,2024-04-02 15:24:04+00:00,[],
16687,https://github.com/David-Zaragoza/Simplified_Microprocessor.git,2024-03-30 01:27:18+00:00,,0,David-Zaragoza/Simplified_Microprocessor,779497762,SystemVerilog,Simplified_Microprocessor,13,0,2024-04-04 23:49:24+00:00,[],
16688,https://github.com/a-zinoch/eth_mac_10-100-1GB.git,2024-04-04 22:35:34+00:00,,0,a-zinoch/eth_mac_10-100-1GB,782235799,SystemVerilog,eth_mac_10-100-1GB,103,0,2024-04-04 22:38:51+00:00,[],
16689,https://github.com/Dvir1992/100daysofRTL.git,2024-03-21 18:26:18+00:00,highly practical RTL design project which helps developing a strong understanding of RTL design concepts and techniques ,0,Dvir1992/100daysofRTL,775624289,SystemVerilog,100daysofRTL,182,0,2024-03-21 18:34:18+00:00,[],
16690,https://github.com/SkywallkerYL/UvmVeriTemplate.git,2024-04-07 12:04:35+00:00,不知道从哪找来的模板，改了一下，先放这里了,0,SkywallkerYL/UvmVeriTemplate,783264208,SystemVerilog,UvmVeriTemplate,20,0,2024-04-07 12:12:04+00:00,[],
16691,https://github.com/atfox272/BoundFlasher.git,2024-03-31 16:42:15+00:00,Implement a 16-bits LEDs system,0,atfox272/BoundFlasher,780080347,SystemVerilog,BoundFlasher,1120,0,2024-04-01 08:06:45+00:00,[],
16692,https://github.com/2024-Spring-SoC/lab1.git,2024-03-15 06:39:51+00:00,Lab1. Environment Setup,0,2024-Spring-SoC/lab1,772418880,SystemVerilog,lab1,2,0,2024-04-09 04:25:50+00:00,[],
16693,https://github.com/tanishshah07/system-Verilog-basics.git,2024-03-29 06:50:33+00:00,,0,tanishshah07/system-Verilog-basics,779154171,SystemVerilog,system-Verilog-basics,669,0,2024-03-29 06:55:42+00:00,[],
16694,https://github.com/Mark-Chen0220/DCS.git,2024-03-09 09:19:43+00:00,For DCS Labs & HWs,0,Mark-Chen0220/DCS,769507096,SystemVerilog,DCS,18,0,2024-03-09 09:22:05+00:00,[],
16695,https://github.com/anniexiang01/FinalDAV.git,2024-04-03 23:23:47+00:00,,0,anniexiang01/FinalDAV,781726712,SystemVerilog,FinalDAV,14,0,2024-04-03 23:27:50+00:00,[],
16696,https://github.com/4teven/VLSI-design.git,2024-04-10 18:09:43+00:00,,0,4teven/VLSI-design,784869617,SystemVerilog,VLSI-design,834,0,2024-04-10 18:12:01+00:00,[],
16697,https://github.com/itsubaidrehman/D_FF.git,2024-04-11 13:17:00+00:00,Design & Verification of D flip flop,0,itsubaidrehman/D_FF,785230376,SystemVerilog,D_FF,3,0,2024-04-11 13:22:02+00:00,[],
16698,https://github.com/kiaraaguilera/ECE366-Project-C.git,2024-04-10 00:41:02+00:00,,0,kiaraaguilera/ECE366-Project-C,784494383,SystemVerilog,ECE366-Project-C,20,0,2024-04-10 00:51:32+00:00,[],
16699,https://github.com/Ramsensei/RISKVunicycle.git,2024-03-30 00:39:51+00:00,,0,Ramsensei/RISKVunicycle,779489183,SystemVerilog,RISKVunicycle,365,0,2024-04-04 22:56:46+00:00,[],
16700,https://github.com/MohitRawat123/100-_days_of_rtl.git,2024-03-14 17:21:27+00:00,,0,MohitRawat123/100-_days_of_rtl,772177742,SystemVerilog,100-_days_of_rtl,53,0,2024-03-14 17:24:24+00:00,[],
16701,https://github.com/rowannaguib/UVM_ALU.git,2024-04-05 21:23:14+00:00,,0,rowannaguib/UVM_ALU,782710218,SystemVerilog,UVM_ALU,525,0,2024-04-05 21:29:05+00:00,[],
16706,https://github.com/sanskar0708/git_with_utkarsh.git,2024-03-08 17:06:19+00:00,utkarsh loda merko git sikhayega,0,sanskar0708/git_with_utkarsh,769257762,SystemVerilog,git_with_utkarsh,9,0,2024-03-08 18:12:41+00:00,[],
16707,https://github.com/fergus-xu/Drum-Machine.git,2024-03-08 02:12:57+00:00,System Verilog Code for a Drum Machine using the DE1_SoC,0,fergus-xu/Drum-Machine,768935298,SystemVerilog,Drum-Machine,2140,0,2024-03-08 02:23:38+00:00,[],https://api.github.com/licenses/mit
16708,https://github.com/KevinLi0506/Digital-Cirtuit-and-Systems.git,2024-03-07 10:11:58+00:00,,0,KevinLi0506/Digital-Cirtuit-and-Systems,768563200,SystemVerilog,Digital-Cirtuit-and-Systems,550,0,2024-03-08 01:14:58+00:00,[],
16709,https://github.com/rakshitharnayak/SOLVESUDOKU.git,2024-03-17 05:51:30+00:00,SOLVE SUDOKU IN SYSTEM VERILOG,0,rakshitharnayak/SOLVESUDOKU,773242474,SystemVerilog,SOLVESUDOKU,3,0,2024-03-17 06:02:01+00:00,[],
16710,https://github.com/Chelsea97198/Digital-Circuits-and-Systems.git,2024-03-18 09:14:35+00:00,Course assignment and project of Digital Circuits and Systems,0,Chelsea97198/Digital-Circuits-and-Systems,773715142,SystemVerilog,Digital-Circuits-and-Systems,29,0,2024-03-18 09:25:01+00:00,[],
16711,https://github.com/cpt-harlock/axi_stream_packet_testbench.git,2024-03-20 09:42:31+00:00,Testbench to test a DUT with an AXI Stream interface taking as input packets from a PCAP trace,0,cpt-harlock/axi_stream_packet_testbench,774842107,SystemVerilog,axi_stream_packet_testbench,23,0,2024-03-20 09:46:22+00:00,[],https://api.github.com/licenses/gpl-3.0
16712,https://github.com/saitejagali/SV_project.git,2024-03-12 07:21:07+00:00,,0,saitejagali/SV_project,770799120,SystemVerilog,SV_project,2360,0,2024-03-12 07:47:06+00:00,[],
16714,https://github.com/crusader2000/PCIE-Transaction-Layer-Verification.git,2024-03-26 13:15:37+00:00,PCIe System Verilog Verification Environment developed for PCIe course,0,crusader2000/PCIE-Transaction-Layer-Verification,777763032,SystemVerilog,PCIE-Transaction-Layer-Verification,40,0,2024-03-26 13:24:19+00:00,[],
16715,https://github.com/Lovekumar2/FIFO-MEMORY-BY-USING-System-Verilog.git,2024-03-27 06:57:04+00:00,,0,Lovekumar2/FIFO-MEMORY-BY-USING-System-Verilog,778145677,SystemVerilog,FIFO-MEMORY-BY-USING-System-Verilog,32,0,2024-03-27 07:03:04+00:00,[],
16716,https://github.com/JuniorBrice/4MULT-VERIFICATION.git,2024-03-23 15:49:02+00:00,,0,JuniorBrice/4MULT-VERIFICATION,776470779,SystemVerilog,4MULT-VERIFICATION,9,0,2024-03-29 06:21:29+00:00,[],
16717,https://github.com/adamwalker/systemverilog-utils.git,2024-03-25 23:55:29+00:00,A collection of reusable SystemVerilog utilities,0,adamwalker/systemverilog-utils,777485572,SystemVerilog,systemverilog-utils,12,0,2024-03-25 23:56:18+00:00,[],https://api.github.com/licenses/bsd-3-clause
16718,https://github.com/ming1157/ysyx.git,2024-03-29 19:31:59+00:00,ysyx practice,0,ming1157/ysyx,779413671,SystemVerilog,ysyx,472,0,2024-04-01 02:55:52+00:00,[],
16719,https://github.com/lmadem/1X1-Router-.git,2024-04-06 06:39:00+00:00,Verification of 1X1 router in System Verilog Verification Environment with test cases,0,lmadem/1X1-Router-,782829728,SystemVerilog,1X1-Router-,64,0,2024-04-06 19:45:31+00:00,[],https://api.github.com/licenses/apache-2.0
16720,https://github.com/MohabAmged/ALU_verification__environment_using_UVM.git,2024-03-28 12:26:36+00:00,,0,MohabAmged/ALU_verification__environment_using_UVM,778796665,SystemVerilog,ALU_verification__environment_using_UVM,23,0,2024-04-09 02:32:03+00:00,[],
16721,https://github.com/Abuf0/CA.git,2024-04-07 02:09:31+00:00,,0,Abuf0/CA,783122725,SystemVerilog,CA,76,0,2024-04-09 02:02:09+00:00,[],
16722,https://github.com/aradshapira/Advacned_Logic_Design.git,2024-04-09 06:57:55+00:00,This repository includes Advanced Logic Design course (@ HUJI) Labs,0,aradshapira/Advacned_Logic_Design,784088867,SystemVerilog,Advacned_Logic_Design,3118,0,2024-04-09 07:08:31+00:00,[],
16723,https://github.com/aklamba01/verichip_verification.git,2024-04-09 21:57:03+00:00,,0,aklamba01/verichip_verification,784449326,SystemVerilog,verichip_verification,7,0,2024-04-09 22:00:59+00:00,[],
16724,https://github.com/meiniKi/tt06-FazyRV-ExoTiny.git,2024-03-27 16:22:34+00:00,,0,meiniKi/tt06-FazyRV-ExoTiny,778390259,SystemVerilog,tt06-FazyRV-ExoTiny,2644,0,2024-04-10 13:26:43+00:00,[],https://api.github.com/licenses/apache-2.0
16725,https://github.com/MVS-Abhiram/Mod--12-Counter-Verification.git,2024-04-11 03:45:53+00:00,This project deals with the verification of MOD 12 Counter,0,MVS-Abhiram/Mod--12-Counter-Verification,785032257,SystemVerilog,Mod--12-Counter-Verification,5,0,2024-04-11 03:46:43+00:00,[],
16726,https://github.com/theodouk1/COMP_ARCH.git,2024-04-10 18:45:51+00:00,,0,theodouk1/COMP_ARCH,784883625,SystemVerilog,COMP_ARCH,17,0,2024-04-12 17:46:59+00:00,[],
16727,https://github.com/VyshnaviChilukamukku/AHB-to-APB-Bridge-Verification.git,2024-04-12 09:38:45+00:00,Verification of bridge between high speed AMBA AHB(Advanced High Performance bus) and low-power AMBA APB (Advanced Peripheral Bus) in UVM.,0,VyshnaviChilukamukku/AHB-to-APB-Bridge-Verification,785633380,SystemVerilog,AHB-to-APB-Bridge-Verification,126,0,2024-04-13 06:57:08+00:00,[],
16729,https://github.com/YKengo1224/jpeg-encoder-RTL.git,2024-03-07 04:27:31+00:00,,0,YKengo1224/jpeg-encoder-RTL,768433780,SystemVerilog,jpeg-encoder-RTL,96,0,2024-03-07 04:27:48+00:00,[],
16730,https://github.com/Navneet-Singh20/Constraint_Practice.git,2024-03-08 07:30:45+00:00,I have solved 50+ Constraints. EDAPlayground Link : https://www.edaplayground.com/x/PmFM,0,Navneet-Singh20/Constraint_Practice,769025792,SystemVerilog,Constraint_Practice,819,0,2024-03-08 07:33:11+00:00,[],
16731,https://github.com/Basavakirana/mod15_counter-Verification.git,2024-03-10 16:04:50+00:00,Verification of Mod15 counter using SV,0,Basavakirana/mod15_counter-Verification,769987229,SystemVerilog,mod15_counter-Verification,21,0,2024-03-10 16:19:15+00:00,[],
16732,https://github.com/dcmid/d_flip_flop.git,2024-03-12 08:16:06+00:00,,0,dcmid/d_flip_flop,770821268,SystemVerilog,d_flip_flop,1,0,2024-03-12 08:16:35+00:00,[],
16733,https://github.com/emmanuel2882/ALU.git,2024-03-12 21:58:53+00:00,,0,emmanuel2882/ALU,771204761,SystemVerilog,ALU,1,0,2024-03-12 21:59:21+00:00,[],
16734,https://github.com/limccart7/CPE333-lab3.git,2024-03-12 16:11:54+00:00,Pipeline lab,0,limccart7/CPE333-lab3,771062488,SystemVerilog,CPE333-lab3,10,0,2024-03-13 21:05:49+00:00,[],
16735,https://github.com/Shiba0228/4-bit-ALU.git,2024-03-15 06:39:01+00:00,,0,Shiba0228/4-bit-ALU,772418520,SystemVerilog,4-bit-ALU,5,0,2024-03-15 06:42:11+00:00,[],
16736,https://github.com/hanamcvicker/CSE469.git,2024-03-16 00:24:15+00:00,CSE469 - Computer Architecture,0,hanamcvicker/CSE469,772809555,SystemVerilog,CSE469,32,0,2024-03-16 00:38:52+00:00,[],
16737,https://github.com/Dvir1992/mv-peakd.git,2024-03-16 14:47:07+00:00,A design which get a noisy signal and output a clean signal and its peak data. ,0,Dvir1992/mv-peakd,773028319,SystemVerilog,mv-peakd,518,0,2024-03-17 15:07:05+00:00,[],
16738,https://github.com/phuvg/jtag.git,2024-03-08 06:18:15+00:00,,0,phuvg/jtag,769001480,SystemVerilog,jtag,6900,0,2024-03-08 13:05:53+00:00,[],
16739,https://github.com/gnedi-m/ECE571_Final_Project.git,2024-03-19 14:14:07+00:00,,0,gnedi-m/ECE571_Final_Project,774417696,SystemVerilog,ECE571_Final_Project,514,0,2024-03-19 23:50:10+00:00,[],
16740,https://github.com/Gorruy/demux.git,2024-03-14 14:17:59+00:00,,0,Gorruy/demux,772091399,SystemVerilog,demux,27,0,2024-03-15 21:18:31+00:00,[],
16741,https://github.com/DivyasriAyluri/Team13_SVProject.git,2024-03-21 06:31:27+00:00,,0,DivyasriAyluri/Team13_SVProject,775310992,SystemVerilog,Team13_SVProject,4721,0,2024-03-21 06:35:18+00:00,[],
16742,https://github.com/dhylan01/ECE111_proj.git,2024-03-11 17:57:04+00:00,Project for ECE 111 in Verilog,0,dhylan01/ECE111_proj,770531085,SystemVerilog,ECE111_proj,25707,0,2024-03-12 00:10:06+00:00,[],
16743,https://github.com/Arunvaishnav7435/Disable-fork.git,2024-03-23 18:20:07+00:00,,0,Arunvaishnav7435/Disable-fork,776518183,SystemVerilog,Disable-fork,3,0,2024-03-23 18:20:51+00:00,[],
16744,https://github.com/Arunvaishnav7435/wait-fork.git,2024-03-24 09:31:56+00:00,,0,Arunvaishnav7435/wait-fork,776715406,SystemVerilog,wait-fork,4,0,2024-03-24 09:32:32+00:00,[],
16745,https://github.com/Massering/primitive-stack.git,2024-03-28 19:30:57+00:00,"Стек на логических элементах, описание на Verilog и схема в программе Logisim Circuit",0,Massering/primitive-stack,778975162,SystemVerilog,primitive-stack,2103,0,2024-03-28 19:33:35+00:00,[],
16746,https://github.com/PhamTuann/Test.git,2024-03-29 07:15:15+00:00,,0,PhamTuann/Test,779161845,SystemVerilog,Test,2,0,2024-03-29 07:16:03+00:00,[],
16747,https://github.com/NAQI-UL-HASSAN/Lab8.git,2024-03-31 13:03:12+00:00,,0,NAQI-UL-HASSAN/Lab8,780014201,SystemVerilog,Lab8,5135,0,2024-03-31 13:04:42+00:00,[],
16748,https://github.com/krishnaachyuth/L1-Spilt-Cache.git,2024-03-31 03:19:14+00:00,L1 Spilt Cache,0,krishnaachyuth/L1-Spilt-Cache,779880350,SystemVerilog,L1-Spilt-Cache,10,0,2024-03-31 03:49:57+00:00,[],
16749,https://github.com/Balaji-Pabbathi/AHBtoAPB-bridge.git,2024-04-05 04:03:48+00:00,,0,Balaji-Pabbathi/AHBtoAPB-bridge,782317033,SystemVerilog,AHBtoAPB-bridge,10,0,2024-04-05 04:11:41+00:00,[],
16750,https://github.com/HRida/SystemVerilog.git,2024-03-10 18:43:03+00:00,Example code about verilog patterns and uvm,0,HRida/SystemVerilog,770037929,SystemVerilog,SystemVerilog,9234,0,2024-04-03 10:49:41+00:00,[],
16751,https://github.com/ghz-ws/fpga_dsm.git,2024-04-06 09:01:44+00:00,Delta-Sigma ADC&DAC by FPGA,0,ghz-ws/fpga_dsm,782865146,SystemVerilog,fpga_dsm,92,0,2024-04-06 09:05:37+00:00,[],https://api.github.com/licenses/mit
16752,https://github.com/nithin2911/APB_Bridge.git,2024-04-09 05:54:14+00:00,UVM and PD of APB Bridge,0,nithin2911/APB_Bridge,784066567,SystemVerilog,APB_Bridge,7680,0,2024-04-09 05:56:36+00:00,[],https://api.github.com/licenses/mit
16753,https://github.com/At0mat0/Final_lab.git,2024-04-03 20:33:10+00:00,,0,At0mat0/Final_lab,781673616,SystemVerilog,Final_lab,7332,0,2024-04-03 20:33:16+00:00,[],
16754,https://github.com/Ariel424/4-bit-Multiplier.git,2024-04-10 13:59:18+00:00,Design and Verification of Combinational Circuit: 4-bit Multiplier,0,Ariel424/4-bit-Multiplier,784760675,SystemVerilog,4-bit-Multiplier,257,0,2024-04-10 14:37:43+00:00,[],
16755,https://github.com/Ichatzos/erg_comp_arch.git,2024-04-11 08:28:35+00:00,,0,Ichatzos/erg_comp_arch,785118710,SystemVerilog,erg_comp_arch,14,0,2024-04-11 09:18:57+00:00,[],
16756,https://github.com/george-toka/Uni---CompArch.git,2024-04-06 09:15:28+00:00,,0,george-toka/Uni---CompArch,782868863,SystemVerilog,Uni---CompArch,21,0,2024-04-06 09:23:14+00:00,[],
16757,https://github.com/jfarresg/allau.git,2024-04-10 03:56:57+00:00,,0,jfarresg/allau,784544229,SystemVerilog,allau,10,0,2024-04-10 22:29:12+00:00,[],https://api.github.com/licenses/mit
16758,https://github.com/bilonio/HardwareLabProject2.git,2024-04-11 21:22:12+00:00,Lab exercises for HW2 course of ECE AUTH,0,bilonio/HardwareLabProject2,785421313,SystemVerilog,HardwareLabProject2,2,0,2024-04-12 09:28:18+00:00,[],
16759,https://github.com/nhchung11/Verification-for-I2C-APB-interface.git,2024-04-13 09:29:32+00:00,,0,nhchung11/Verification-for-I2C-APB-interface,786052900,SystemVerilog,Verification-for-I2C-APB-interface,20,0,2024-04-13 09:31:31+00:00,[],
16760,https://github.com/expologtechno/WB_SPI_master.git,2024-03-09 07:39:36+00:00,SPI master RTL with Wishbone interface to configure registers,0,expologtechno/WB_SPI_master,769481323,SystemVerilog,WB_SPI_master,795,0,2024-03-09 08:35:11+00:00,[],
16761,https://github.com/SuperCompUCSD/sdsc-fpga-project.git,2024-03-08 18:16:51+00:00,,0,SuperCompUCSD/sdsc-fpga-project,769284941,SystemVerilog,sdsc-fpga-project,13,0,2024-03-08 18:38:25+00:00,[],
16762,https://github.com/GaalElbaz/JKflop2Dflop.git,2024-03-06 17:02:08+00:00,Explore JK to D Flip-Flop conversion in SystemVerilog. Understand sequential logic design efficiently.,0,GaalElbaz/JKflop2Dflop,768207937,SystemVerilog,JKflop2Dflop,2,0,2024-03-06 17:13:51+00:00,[],
16763,https://github.com/bogimaneeshkumar/ALU_Verification_using_UVM.git,2024-03-12 13:24:15+00:00,,0,bogimaneeshkumar/ALU_Verification_using_UVM,770975782,SystemVerilog,ALU_Verification_using_UVM,11,0,2024-03-12 13:26:12+00:00,[],
16764,https://github.com/G-gagnon3/Advanced-VLSI-Design.git,2024-03-13 15:02:37+00:00,,0,G-gagnon3/Advanced-VLSI-Design,771581131,SystemVerilog,Advanced-VLSI-Design,944,0,2024-03-15 01:29:51+00:00,[],
16765,https://github.com/SumaiyaTariqueLabiba/SV-Verification.git,2024-03-08 11:04:39+00:00,"Coverage, Assertions, Randomizations, Mailbox, Semaphores, DPI and OOP: Inheritance, Polymorphism, Virtual methods ",0,SumaiyaTariqueLabiba/SV-Verification,769106671,SystemVerilog,SV-Verification,82,0,2024-03-16 07:16:30+00:00,"['systemverilog', 'verification-code']",
16766,https://github.com/davidz1234567890/hw6.git,2024-03-13 14:46:19+00:00,,0,davidz1234567890/hw6,771572765,SystemVerilog,hw6,27,0,2024-03-13 14:49:13+00:00,[],
16767,https://github.com/Kunjanvyas/L1-Split-cache.git,2024-03-14 17:23:27+00:00,The design and simulation of a split L1 cache for a new 32- bit processor which can be used with up to three other processors in a shared memory configuration. The system employs a MESI protocol to ensure cache coherence.,0,Kunjanvyas/L1-Split-cache,772178583,SystemVerilog,L1-Split-cache,14,0,2024-03-14 18:01:52+00:00,[],
16768,https://github.com/Sukhithaaithal/examples.git,2024-03-18 10:46:01+00:00,,0,Sukhithaaithal/examples,773756047,SystemVerilog,examples,3,0,2024-03-18 10:50:21+00:00,[],
16769,https://github.com/NikitaAgeev/AlfonsoHW.git,2024-03-21 08:33:41+00:00,for alfonso HW,0,NikitaAgeev/AlfonsoHW,775355745,SystemVerilog,AlfonsoHW,13,0,2024-03-21 08:35:40+00:00,[],
16770,https://github.com/twdrane/ascon-test-spi.git,2024-03-19 18:38:56+00:00,,0,twdrane/ascon-test-spi,774550331,SystemVerilog,ascon-test-spi,343,0,2024-03-19 19:21:59+00:00,[],https://api.github.com/licenses/cc0-1.0
16771,https://github.com/Rakesh5173/APB_UVM.git,2024-03-06 19:46:47+00:00,UVM testbench for APB protocol,0,Rakesh5173/APB_UVM,768279020,SystemVerilog,APB_UVM,29,0,2024-03-06 19:49:31+00:00,[],
16772,https://github.com/andrei-ioan-epure/AM2940.git,2024-03-22 19:42:46+00:00,Implementation of AM2940 in Verilog,0,andrei-ioan-epure/AM2940,776154427,SystemVerilog,AM2940,3,0,2024-03-22 19:45:32+00:00,[],
16773,https://github.com/mohit-verma-mv/default-sequence.git,2024-03-19 11:54:12+00:00,,0,mohit-verma-mv/default-sequence,774350207,SystemVerilog,default-sequence,5,0,2024-03-19 12:04:16+00:00,[],
16774,https://github.com/gk2000/CSCE-714-Lab3.git,2024-03-16 20:03:55+00:00,,0,gk2000/CSCE-714-Lab3,773121158,SystemVerilog,CSCE-714-Lab3,206,0,2024-03-16 20:07:23+00:00,[],
16775,https://github.com/wfhcv/UVM-sequential-adder.git,2024-03-20 06:28:53+00:00,UVM for sequential adder,0,wfhcv/UVM-sequential-adder,774767318,SystemVerilog,UVM-sequential-adder,4,0,2024-03-20 06:29:48+00:00,[],
16776,https://github.com/cam-br0wn/fpga-projects.git,2024-03-20 04:02:23+00:00,Source for FPGA projects. Mostly Basys 3. Using Vivado.,0,cam-br0wn/fpga-projects,774723919,SystemVerilog,fpga-projects,0,0,2024-03-20 04:03:08+00:00,[],
16777,https://github.com/Aqib-Wazir101/mylab6.git,2024-03-18 20:15:45+00:00,,0,Aqib-Wazir101/mylab6,774026493,SystemVerilog,mylab6,997,0,2024-03-18 20:17:08+00:00,[],
16778,https://github.com/mkovac/Emulator.git,2024-03-19 08:10:31+00:00,,2,mkovac/Emulator,774252806,SystemVerilog,Emulator,222,0,2024-03-19 08:30:26+00:00,[],
16779,https://github.com/tyxiumud/Xidian_lusang_calssn_otes.git,2024-03-20 12:40:40+00:00,,0,tyxiumud/Xidian_lusang_calssn_otes,774917148,SystemVerilog,Xidian_lusang_calssn_otes,10923,0,2024-03-20 12:44:46+00:00,[],
16780,https://github.com/KINGFIOX/SystemVerilog.git,2024-03-24 09:00:28+00:00,,0,KINGFIOX/SystemVerilog,776707293,SystemVerilog,SystemVerilog,129,0,2024-03-24 09:00:34+00:00,[],
16781,https://github.com/lmadem/DPRAM.git,2024-03-23 05:17:36+00:00,Design and Verification of Dual-Port RAM in System Verilog environment,0,lmadem/DPRAM,776292924,SystemVerilog,DPRAM,45,0,2024-03-23 22:58:44+00:00,[],
16782,https://github.com/Dashauto/Computer-Hardware-Design.git,2024-03-29 18:10:23+00:00,,0,Dashauto/Computer-Hardware-Design,779388288,SystemVerilog,Computer-Hardware-Design,69345,0,2024-03-29 18:15:19+00:00,[],
16783,https://github.com/YayueHou/ECSE6680-VLSI-Spring2024.git,2024-04-01 15:37:06+00:00,This is a repo for RPI ECSE 6680 course projects,0,YayueHou/ECSE6680-VLSI-Spring2024,780489984,SystemVerilog,ECSE6680-VLSI-Spring2024,516,0,2024-04-01 23:39:16+00:00,[],
16784,https://github.com/hnagiset/verilog3-mode.git,2024-04-04 05:35:26+00:00,Emacs major mode for SystemVerilog,0,hnagiset/verilog3-mode,781825191,SystemVerilog,verilog3-mode,173,0,2024-04-04 12:30:16+00:00,[],https://api.github.com/licenses/gpl-3.0
16785,https://github.com/Dileon44/Actuator-Control-Electronics.git,2024-03-16 19:10:53+00:00,,0,Dileon44/Actuator-Control-Electronics,773107799,SystemVerilog,Actuator-Control-Electronics,114,0,2024-03-29 13:54:24+00:00,[],
16786,https://github.com/cherij2/COMPENG-3DQ5-JPEG-Image-Decompressor-Project.git,2024-04-06 23:01:16+00:00,,0,cherij2/COMPENG-3DQ5-JPEG-Image-Decompressor-Project,783089667,SystemVerilog,COMPENG-3DQ5-JPEG-Image-Decompressor-Project,2146,0,2024-04-06 23:02:25+00:00,[],
16787,https://github.com/poojaudupa25/System-Verilog.git,2024-04-08 17:14:02+00:00,,0,poojaudupa25/System-Verilog,783840138,SystemVerilog,System-Verilog,6,0,2024-04-08 17:16:48+00:00,[],
16788,https://github.com/JSLucena/Dally-Router.git,2024-03-11 13:52:56+00:00,Project for 02204 - Design of Asynchronous Circuits,0,JSLucena/Dally-Router,770405686,SystemVerilog,Dally-Router,4,0,2024-04-07 21:56:15+00:00,[],
16789,https://github.com/Monthlyaway/Mips-Single-Cycle-Processor.git,2024-03-27 02:49:48+00:00,Implement mips single cycle processor in SystemVerilog. Based on Digital Design and Computer Architecture (2nd Ed),0,Monthlyaway/Mips-Single-Cycle-Processor,778073831,SystemVerilog,Mips-Single-Cycle-Processor,82,0,2024-03-27 02:53:26+00:00,[],https://api.github.com/licenses/mit
16790,https://github.com/amlynczak/Jezyk-Opisu-Sprzetu.git,2024-03-20 21:47:14+00:00,lab ,0,amlynczak/Jezyk-Opisu-Sprzetu,775161409,SystemVerilog,Jezyk-Opisu-Sprzetu,5977,0,2024-03-20 21:47:20+00:00,[],
16791,https://github.com/huynguyendinhhcmut/lab2_ex4_anhThinh.git,2024-04-10 17:32:43+00:00,,0,huynguyendinhhcmut/lab2_ex4_anhThinh,784855015,SystemVerilog,lab2_ex4_anhThinh,2,0,2024-04-10 17:33:36+00:00,[],
16792,https://github.com/parvathy10/interprocess-communication.git,2024-04-04 02:35:30+00:00,,0,parvathy10/interprocess-communication,781777030,SystemVerilog,interprocess-communication,3,0,2024-04-04 02:36:39+00:00,[],
16795,https://github.com/MehmetAliOner22/SimpleALUDesign.git,2024-03-06 08:37:25+00:00,"An ALU design with 32 bits. A simple ALU with 4 operations (AND, OR, ADD, SUBTRACT), 4 flags (Overflow, Carry, Negative, Zero)",0,MehmetAliOner22/SimpleALUDesign,767973539,SystemVerilog,SimpleALUDesign,26,0,2024-03-06 08:40:30+00:00,[],
16796,https://github.com/SouKangC-school/ECE111_final_project.git,2024-03-07 23:42:56+00:00,,0,SouKangC-school/ECE111_final_project,768895837,SystemVerilog,ECE111_final_project,34,0,2024-03-07 23:45:29+00:00,[],
16798,https://github.com/mahmoudhalim/axi4-lite.git,2024-03-07 16:45:38+00:00,A subset of AXI that has a simpler interface than the full AXI4 interface,0,mahmoudhalim/axi4-lite,768742711,SystemVerilog,axi4-lite,4,0,2024-03-09 14:47:35+00:00,[],
16799,https://github.com/geet2392/gp_proj_1.git,2024-03-09 18:32:51+00:00,,0,geet2392/gp_proj_1,769675269,SystemVerilog,gp_proj_1,3,0,2024-03-09 18:56:58+00:00,[],
16800,https://github.com/dpks2003/UART_IP.git,2024-03-10 18:09:39+00:00,High Speed UART IP with maximum speed capability upto 1.8 MBps ,0,dpks2003/UART_IP,770027808,SystemVerilog,UART_IP,10,0,2024-03-10 18:12:55+00:00,[],
16801,https://github.com/soohyuncha/rtl_modules.git,2024-03-11 03:40:41+00:00,,0,soohyuncha/rtl_modules,770164538,SystemVerilog,rtl_modules,4,0,2024-03-11 03:42:34+00:00,[],
16802,https://github.com/MicroTransactionsMatterToo/FPGA_CCD.git,2024-03-12 04:30:08+00:00,,0,MicroTransactionsMatterToo/FPGA_CCD,770741040,SystemVerilog,FPGA_CCD,51,0,2024-03-12 04:33:28+00:00,[],
16803,https://github.com/cuongdp2k2/AXI_BUS_VIP.git,2024-03-12 09:49:20+00:00,,0,cuongdp2k2/AXI_BUS_VIP,770864450,SystemVerilog,AXI_BUS_VIP,113,0,2024-03-12 09:51:39+00:00,[],
16804,https://github.com/Gorruy/converter.git,2024-03-06 17:05:40+00:00,,0,Gorruy/converter,768209636,SystemVerilog,converter,39,0,2024-03-10 21:48:13+00:00,[],
16805,https://github.com/kelbor-khal/MIPS_Harris.git,2024-03-19 15:41:08+00:00,The repository contains 3 variants of the MIPS architecture processor,0,kelbor-khal/MIPS_Harris,774464232,SystemVerilog,MIPS_Harris,5728,0,2024-03-19 16:18:36+00:00,[],
16806,https://github.com/Mahjabeen632/lab_6.git,2024-03-18 19:14:06+00:00,,0,Mahjabeen632/lab_6,774001452,SystemVerilog,lab_6,116,0,2024-03-19 01:42:34+00:00,[],
16807,https://github.com/Arunvaishnav7435/fork-join.git,2024-03-19 08:09:55+00:00,,0,Arunvaishnav7435/fork-join,774252539,SystemVerilog,fork-join,3,0,2024-03-19 08:10:28+00:00,[],
16808,https://github.com/DanielMontoyaR/Tareas.git,2024-03-15 02:06:12+00:00,,0,DanielMontoyaR/Tareas,772340833,SystemVerilog,Tareas,18176,0,2024-03-15 02:07:03+00:00,[],
16809,https://github.com/Bugian/Verilog.git,2024-03-22 20:56:48+00:00,Different Component and Processor,0,Bugian/Verilog,776178544,SystemVerilog,Verilog,312,0,2024-03-25 15:44:46+00:00,[],
16810,https://github.com/kelvinshi04/RISC-V-OTTER_wHazardProtect.git,2024-03-07 01:39:07+00:00,,0,kelvinshi04/RISC-V-OTTER_wHazardProtect,768387428,SystemVerilog,RISC-V-OTTER_wHazardProtect,60,0,2024-03-07 01:58:01+00:00,[],
16811,https://github.com/kelvinshi04/otterMCUpipInstrCache.git,2024-03-26 22:43:34+00:00,,0,kelvinshi04/otterMCUpipInstrCache,778004835,SystemVerilog,otterMCUpipInstrCache,43,0,2024-03-26 22:44:26+00:00,[],
16812,https://github.com/AlaaTaha32/Memory-RTL-Design-and-Verification.git,2024-03-31 12:49:52+00:00,RTL of a RAM block is designed using Verilog. Testing it by developing two verification environments: class-based and UVM-based in SystemVerilog.,0,AlaaTaha32/Memory-RTL-Design-and-Verification,780010559,SystemVerilog,Memory-RTL-Design-and-Verification,38,0,2024-03-31 13:04:26+00:00,[],
16813,https://github.com/Stork1323/Risc-V-CA.git,2024-03-07 07:09:07+00:00,,0,Stork1323/Risc-V-CA,768486570,SystemVerilog,Risc-V-CA,68163,0,2024-04-01 02:09:06+00:00,[],
16814,https://github.com/weiber2002/DClab_2024.git,2024-04-02 15:06:43+00:00,,0,weiber2002/DClab_2024,781000981,SystemVerilog,DClab_2024,7,0,2024-04-02 15:19:17+00:00,[],
16815,https://github.com/huynguyendinhhcmut/prelab3_FloatingPoint.git,2024-04-03 15:59:15+00:00,,0,huynguyendinhhcmut/prelab3_FloatingPoint,781558627,SystemVerilog,prelab3_FloatingPoint,19,0,2024-04-03 16:00:04+00:00,[],
16816,https://github.com/samed12pqr/bitirme24.git,2024-04-04 11:58:21+00:00,Salih Yıldız 200207014 Bitirme Tezi Projesi,0,samed12pqr/bitirme24,781975369,SystemVerilog,bitirme24,136,0,2024-04-07 12:44:05+00:00,[],
16817,https://github.com/nekrasov-d/digital-filters.git,2024-03-31 14:28:54+00:00,RTL (Verilog) digital filter library based on Python scipy library output,0,nekrasov-d/digital-filters,780039638,SystemVerilog,digital-filters,52,0,2024-04-07 17:09:07+00:00,[],https://api.github.com/licenses/mit
16818,https://github.com/victorhug97/nes_xcellium_quartus.git,2024-04-12 11:02:30+00:00,,0,victorhug97/nes_xcellium_quartus,785662933,SystemVerilog,nes_xcellium_quartus,153384,0,2024-04-12 11:04:33+00:00,[],
16819,https://github.com/Abinash200200/System-Verilog.git,2024-04-13 04:25:57+00:00,,0,Abinash200200/System-Verilog,785981474,SystemVerilog,System-Verilog,3,0,2024-04-13 04:38:14+00:00,[],
16820,https://github.com/AlexCrownshaw/madgwick_rvfpga.git,2024-04-13 13:25:31+00:00,The aim of this project is to develop a digital implementation of the Madgwick filter that could be used on a modern inertial measurement IC providing DMP functionality.,0,AlexCrownshaw/madgwick_rvfpga,786113872,SystemVerilog,madgwick_rvfpga,3339,0,2024-04-13 13:30:47+00:00,[],
16823,https://github.com/Blinerator/SystemVerilog-ECE324.git,2024-03-06 00:40:16+00:00,,0,Blinerator/SystemVerilog-ECE324,767824299,SystemVerilog,SystemVerilog-ECE324,11,0,2024-03-06 00:48:22+00:00,[],
16824,https://github.com/sumanthbs17/AXI_FIFO_BFM_S.git,2024-03-07 08:56:17+00:00,,0,sumanthbs17/AXI_FIFO_BFM_S,768529674,SystemVerilog,AXI_FIFO_BFM_S,26881,0,2024-03-07 10:22:17+00:00,[],
16825,https://github.com/chenpeijun256/riscv-5s.git,2024-03-08 03:01:30+00:00,RISC-V core with 5 stage pipeline,0,chenpeijun256/riscv-5s,768948030,SystemVerilog,riscv-5s,200,0,2024-03-08 03:15:36+00:00,[],https://api.github.com/licenses/gpl-2.0
16826,https://github.com/Navneet-Singh20/UART_SV.git,2024-03-08 05:21:08+00:00,I have designed and Verified UART Protocol by using SV Environment,0,Navneet-Singh20/UART_SV,768984540,SystemVerilog,UART_SV,145,0,2024-03-08 06:01:00+00:00,[],
16827,https://github.com/vanngo411/MultiCycle_CPU_RISCV.git,2024-03-13 01:34:44+00:00,,0,vanngo411/MultiCycle_CPU_RISCV,771268038,SystemVerilog,MultiCycle_CPU_RISCV,247,0,2024-03-13 01:40:22+00:00,[],
16828,https://github.com/Mohsannaeem/ahb_uvc.git,2024-03-15 21:26:05+00:00,,0,Mohsannaeem/ahb_uvc,772768228,SystemVerilog,ahb_uvc,323,0,2024-03-15 21:29:50+00:00,[],
16829,https://github.com/Arunvaishnav7435/Blocking-assignment.git,2024-03-16 06:11:24+00:00,,0,Arunvaishnav7435/Blocking-assignment,772881984,SystemVerilog,Blocking-assignment,3,0,2024-03-16 06:12:56+00:00,[],
16830,https://github.com/InternalCakeEngine/fpga_textmode.git,2024-03-16 17:38:01+00:00,SystemVerilog implementation of a simple 80x30 text mode.,0,InternalCakeEngine/fpga_textmode,773081668,SystemVerilog,fpga_textmode,10,0,2024-03-16 17:57:47+00:00,[],
16831,https://github.com/MrinalKDN1/ALU_Final.git,2024-03-14 16:21:30+00:00,,0,MrinalKDN1/ALU_Final,772150401,SystemVerilog,ALU_Final,5,0,2024-03-14 16:24:06+00:00,[],
16832,https://github.com/wfhcv/uvm-uart-clock-generator.git,2024-03-20 04:07:56+00:00,Clock Generator of Uart,0,wfhcv/uvm-uart-clock-generator,774725426,SystemVerilog,uvm-uart-clock-generator,6,0,2024-03-20 04:08:58+00:00,[],
16833,https://github.com/Euchupi/Mossbauer.git,2024-03-06 23:42:10+00:00,,0,Euchupi/Mossbauer,768355749,SystemVerilog,Mossbauer,8,0,2024-03-21 18:29:22+00:00,[],
16834,https://github.com/JPflat/de10lite.git,2024-03-25 15:14:43+00:00,,0,JPflat/de10lite,777290282,SystemVerilog,de10lite,39,0,2024-03-25 15:25:37+00:00,[],
16835,https://github.com/gunnchOS3k/ece6443-asap-simv-cmds.git,2024-03-26 16:22:48+00:00,,0,gunnchOS3k/ece6443-asap-simv-cmds,777857103,SystemVerilog,ece6443-asap-simv-cmds,0,0,2024-03-26 16:22:53+00:00,[],
16836,https://github.com/Deepak-1159/DFF_VERIFICATION.git,2024-03-27 01:47:30+00:00,,0,Deepak-1159/DFF_VERIFICATION,778056167,SystemVerilog,DFF_VERIFICATION,6,0,2024-03-27 01:51:54+00:00,[],
16837,https://github.com/solderneer/ELEC0028.git,2024-04-01 06:03:25+00:00,,0,solderneer/ELEC0028,780278522,SystemVerilog,ELEC0028,8,0,2024-04-01 06:17:51+00:00,[],
16838,https://github.com/robmarano/computer_design_template.git,2024-04-02 19:27:51+00:00,Template Repo for ECE 251 Final project,0,robmarano/computer_design_template,781117548,SystemVerilog,computer_design_template,187,0,2024-04-02 19:36:13+00:00,[],https://api.github.com/licenses/mit
16839,https://github.com/ConnerCrowl/DLD_FinalProject.git,2024-04-01 16:58:36+00:00,,0,ConnerCrowl/DLD_FinalProject,780524681,SystemVerilog,DLD_FinalProject,7230,0,2024-04-01 16:58:44+00:00,[],
16840,https://github.com/Shankeydev/SPI_MEMORY_DV.git,2024-04-04 09:38:12+00:00,,0,Shankeydev/SPI_MEMORY_DV,781916861,SystemVerilog,SPI_MEMORY_DV,7,0,2024-04-04 09:43:17+00:00,[],
16841,https://github.com/AjinkyaMore07/System_Verilog.git,2024-04-04 09:21:30+00:00,,0,AjinkyaMore07/System_Verilog,781910000,SystemVerilog,System_Verilog,4,0,2024-04-04 09:31:50+00:00,[],
16842,https://github.com/amrkhalid-star902/zypo-ethernet-core.git,2024-03-21 18:20:04+00:00,An implementation of UDP-IP based ethernet stack on zypo z7 board,0,amrkhalid-star902/zypo-ethernet-core,775621709,SystemVerilog,zypo-ethernet-core,60,0,2024-03-21 18:29:37+00:00,[],
16843,https://github.com/All0Mi/ALU-in-U2---SystemVerilog.git,2024-04-07 21:14:53+00:00,Implemented Arithmetic Logic Unit (ALU) performing on integers encoded in U2 code. The implementation includes logical synthesis and tesbenches to each modules. Project documentation only in Polish.,0,All0Mi/ALU-in-U2---SystemVerilog,783429109,SystemVerilog,ALU-in-U2---SystemVerilog,899,0,2024-04-07 21:26:53+00:00,[],
16844,https://github.com/lmadem/4X4-Router.git,2024-04-06 06:41:12+00:00,Verification of 4X4 router in System Verilog Verification Environment with test cases,0,lmadem/4X4-Router,782830244,SystemVerilog,4X4-Router,68,0,2024-04-06 20:01:12+00:00,[],https://api.github.com/licenses/apache-2.0
16845,https://github.com/Astarojth/ECE385_UIUC.git,2024-04-03 08:36:44+00:00,,0,Astarojth/ECE385_UIUC,781363168,SystemVerilog,ECE385_UIUC,17789,0,2024-04-07 15:22:20+00:00,[],https://api.github.com/licenses/gpl-3.0
16846,https://github.com/kxtieb/Final-Lab.git,2024-04-01 16:43:27+00:00,,0,kxtieb/Final-Lab,780517947,SystemVerilog,Final-Lab,7233,0,2024-04-01 16:43:34+00:00,[],
16847,https://github.com/yash-patne/ALU_verification_with_UVM.git,2024-04-10 17:47:29+00:00,This repo contains UVM testbench for simple ALU,0,yash-patne/ALU_verification_with_UVM,784860781,SystemVerilog,ALU_verification_with_UVM,23,0,2024-04-10 17:52:22+00:00,[],
16849,https://github.com/jchen147/140Group.git,2024-03-28 15:12:34+00:00,,0,jchen147/140Group,778869153,SystemVerilog,140Group,11,0,2024-03-28 17:00:03+00:00,[],
16850,https://github.com/vladislavaSS/new_one.git,2024-04-08 04:17:47+00:00,,0,vladislavaSS/new_one,783525769,SystemVerilog,new_one,8,0,2024-04-10 06:06:47+00:00,[],
16851,https://github.com/Shapirogilad/100DaysOfRTL.git,2024-04-10 07:53:30+00:00,The final product is amazing - a small and simple RISC-V processor that I implemented myself.  The assignments are gradual and each stage makes use of the tools I have acquired so far.,0,Shapirogilad/100DaysOfRTL,784616704,SystemVerilog,100DaysOfRTL,12,0,2024-04-12 13:10:10+00:00,"['hardware-designs', 'systemverilog']",
16852,https://github.com/Tbthanh/Digital_Equalization.git,2024-04-03 08:25:54+00:00,8th band Digital Equalization using SystemVerilog and tested with Python,1,Tbthanh/Digital_Equalization,781358531,SystemVerilog,Digital_Equalization,54238,0,2024-04-12 20:44:02+00:00,[],https://api.github.com/licenses/mit
16853,https://github.com/Mohan-KGM/ALU_Design.git,2024-04-13 05:53:13+00:00,"""Verilog implementation of a versatile Arithmetic Logic Unit (ALU) capable of performing various arithmetic and logic operations. Includes a comprehensive testbench for verification.""",0,Mohan-KGM/ALU_Design,785999647,SystemVerilog,ALU_Design,269,0,2024-04-13 05:54:20+00:00,[],
16854,https://github.com/Arunvaishnav7435/max_value_in_dynamic_array.git,2024-03-06 05:59:32+00:00,,0,Arunvaishnav7435/max_value_in_dynamic_array,767914346,SystemVerilog,max_value_in_dynamic_array,3,0,2024-03-06 06:00:30+00:00,[],
16856,https://github.com/Arunvaishnav7435/reversing-unpacked-array.git,2024-03-08 05:58:00+00:00,,0,Arunvaishnav7435/reversing-unpacked-array,768995149,SystemVerilog,reversing-unpacked-array,3,0,2024-03-08 05:58:47+00:00,[],
16857,https://github.com/sorukohi/simple-riscv-cpu.git,2024-03-14 11:49:11+00:00,,0,sorukohi/simple-riscv-cpu,772024665,SystemVerilog,simple-riscv-cpu,223,0,2024-03-14 13:06:38+00:00,[],
16858,https://github.com/Arunvaishnav7435/sv-event.git,2024-03-15 18:07:26+00:00,,0,Arunvaishnav7435/sv-event,772703439,SystemVerilog,sv-event,3,0,2024-03-15 18:10:02+00:00,[],
16859,https://github.com/max-kudinov/sv_practice.git,2024-03-15 21:06:49+00:00,My small SystemVerilog exercises,0,max-kudinov/sv_practice,772763115,SystemVerilog,sv_practice,9,0,2024-03-15 21:09:14+00:00,[],
16860,https://github.com/CanvCan/SystemVerilog.git,2024-03-18 16:38:58+00:00,,0,CanvCan/SystemVerilog,773929607,SystemVerilog,SystemVerilog,7,0,2024-03-18 16:53:47+00:00,[],
16861,https://github.com/felloryz/add_sub_ialu_testbench.git,2024-03-24 14:59:42+00:00,,0,felloryz/add_sub_ialu_testbench,776826365,SystemVerilog,add_sub_ialu_testbench,2097,0,2024-03-24 15:10:08+00:00,[],
16862,https://github.com/Henrywwg/video.git,2024-03-22 14:58:36+00:00,some vga fpga stuffs,0,Henrywwg/video,776039439,SystemVerilog,video,1,0,2024-03-22 19:21:12+00:00,[],
16863,https://github.com/alex39998/FPGA-2-Player-Tetris.git,2024-03-22 16:53:29+00:00,,0,alex39998/FPGA-2-Player-Tetris,776088300,SystemVerilog,FPGA-2-Player-Tetris,249,0,2024-03-22 17:32:31+00:00,[],
16864,https://github.com/SaiAnurag18/Finalproject1asic.git,2024-03-22 22:07:10+00:00,Asic 1 final project,0,SaiAnurag18/Finalproject1asic,776198993,SystemVerilog,Finalproject1asic,17628,0,2024-03-22 22:28:09+00:00,[],
16865,https://github.com/ShahidShann/RAL_APB.git,2024-03-23 06:41:42+00:00,,0,ShahidShann/RAL_APB,776313283,SystemVerilog,RAL_APB,6513,0,2024-03-23 06:46:31+00:00,[],
16866,https://github.com/ayumiohno/cpuex_core_public.git,2024-03-26 05:05:39+00:00,CPU実験2023 6班コア,0,ayumiohno/cpuex_core_public,777568022,SystemVerilog,cpuex_core_public,29,0,2024-03-26 05:27:19+00:00,[],
16867,https://github.com/RohithRajesh/memory.git,2024-03-25 19:18:44+00:00,"Basic single port memory along with simple testbench, simulated using verilator",0,RohithRajesh/memory,777396215,SystemVerilog,memory,4,0,2024-03-25 19:25:52+00:00,[],
16868,https://github.com/asinghani/ulx3s-vga-example.git,2024-03-24 04:10:37+00:00,Example project for using ULX3S with VGA PMOD,0,asinghani/ulx3s-vga-example,776643097,SystemVerilog,ulx3s-vga-example,4641,0,2024-03-24 05:00:55+00:00,[],https://api.github.com/licenses/mit
16869,https://github.com/ErmolaevDmitrii/prob_tasks.git,2024-03-19 12:52:56+00:00,,0,ErmolaevDmitrii/prob_tasks,774376925,SystemVerilog,prob_tasks,46,0,2024-03-25 16:41:52+00:00,[],
16870,https://github.com/sohilaakram/ALU_SV_Verification.git,2024-03-09 21:33:52+00:00,Design and Verification of ALU with SystemVerilog Environment ,0,sohilaakram/ALU_SV_Verification,769720498,SystemVerilog,ALU_SV_Verification,19,0,2024-03-10 10:03:13+00:00,[],
16871,https://github.com/YanbingXiao/YanbingXiao.git,2024-03-15 04:48:37+00:00,Config files for my GitHub profile.,0,YanbingXiao/YanbingXiao,772384698,SystemVerilog,YanbingXiao,1322,0,2024-03-15 06:10:22+00:00,"['config', 'github-config']",
16872,https://github.com/ZayaV/DE1-SoC.git,2024-03-29 14:33:00+00:00,,0,ZayaV/DE1-SoC,779309403,SystemVerilog,DE1-SoC,20,0,2024-03-29 14:34:06+00:00,[],
16873,https://github.com/a-zinoch/CRC.git,2024-04-02 17:05:52+00:00,,0,a-zinoch/CRC,781056873,SystemVerilog,CRC,4,0,2024-04-02 17:07:36+00:00,[],
16874,https://github.com/Yacann/verilog-logisim-stack.git,2024-04-03 18:39:47+00:00,,0,Yacann/verilog-logisim-stack,781629798,SystemVerilog,verilog-logisim-stack,55,0,2024-04-03 19:15:03+00:00,[],
16875,https://github.com/manojlopekovic/generic_flash_bus_VIP.git,2024-03-18 14:25:14+00:00,,0,manojlopekovic/generic_flash_bus_VIP,773860485,SystemVerilog,generic_flash_bus_VIP,383,0,2024-03-18 14:56:42+00:00,[],
16876,https://github.com/memory-of-star/avmm_memory_sim_module.git,2024-04-01 12:15:56+00:00,"a simple simulator for memory with avmm interface, in system verilog",0,memory-of-star/avmm_memory_sim_module,780406276,SystemVerilog,avmm_memory_sim_module,4,0,2024-04-01 13:17:33+00:00,[],
16877,https://github.com/HassanKhaled11/SFR_UVM_RAL.git,2024-04-06 06:04:19+00:00,Special function register full UVM environement with practicing Register Abstraction Level ,0,HassanKhaled11/SFR_UVM_RAL,782821247,SystemVerilog,SFR_UVM_RAL,643,0,2024-04-06 06:05:54+00:00,[],
16878,https://github.com/Zelmoghazy/SystemVerilog.git,2024-03-22 01:30:18+00:00,,0,Zelmoghazy/SystemVerilog,775756054,SystemVerilog,SystemVerilog,44,0,2024-03-25 14:39:02+00:00,[],
16879,https://github.com/mcquerol/direct-digital-frequency-synthesis-systemverilog.git,2024-03-16 18:33:53+00:00,,0,mcquerol/direct-digital-frequency-synthesis-systemverilog,773097952,SystemVerilog,direct-digital-frequency-synthesis-systemverilog,619,0,2024-03-16 19:00:53+00:00,[],
16880,https://github.com/Ken0221/DCS.git,2024-03-14 11:34:59+00:00,"⚡Digital Circuit and System , 🎓 NYCU ECE [2023 fall]",0,Ken0221/DCS,772019150,SystemVerilog,DCS,11746,0,2024-03-29 06:02:35+00:00,[],
16881,https://github.com/zidhartha/Quartus.git,2024-03-29 10:48:45+00:00,,1,zidhartha/Quartus,779232799,SystemVerilog,Quartus,24,0,2024-03-29 11:09:28+00:00,[],
16882,https://github.com/Nalla118827/Mod_12_counter.git,2024-04-09 06:31:10+00:00,"The MOD 12 Loadable UP/DOWN Counter is a vital component in digital electronics, particularly in applications requiring precise counting and timing functionalities. ",0,Nalla118827/Mod_12_counter,784079076,SystemVerilog,Mod_12_counter,1021,0,2024-04-10 06:56:48+00:00,[],https://api.github.com/licenses/mit
16883,https://github.com/grahampfeifer1/Project-pt.-2.git,2024-04-11 18:01:57+00:00,,0,grahampfeifer1/Project-pt.-2,785351173,SystemVerilog,Project-pt.-2,1,0,2024-04-11 18:11:12+00:00,[],
16884,https://github.com/drgarbi/async_fifo.git,2024-03-27 23:56:45+00:00,Asynchronous FIFO implementation in Verilog,0,drgarbi/async_fifo,778554697,SystemVerilog,async_fifo,30,0,2024-04-11 21:30:57+00:00,[],https://api.github.com/licenses/gpl-3.0
16885,https://github.com/KhoaPham12092002/SYSTEMVERILOG.git,2024-04-09 16:06:52+00:00,,0,KhoaPham12092002/SYSTEMVERILOG,784319863,SystemVerilog,SYSTEMVERILOG,7,0,2024-04-09 16:12:30+00:00,[],
16886,https://github.com/nithin2911/DDR4MemoryController.git,2024-04-09 04:53:55+00:00,,0,nithin2911/DDR4MemoryController,784049792,SystemVerilog,DDR4MemoryController,2356,0,2024-04-09 05:34:51+00:00,[],https://api.github.com/licenses/mit
16887,https://github.com/florianhirner/dsd_ku_example.git,2024-03-13 16:46:06+00:00,,0,florianhirner/dsd_ku_example,771628808,SystemVerilog,dsd_ku_example,534,0,2024-03-13 16:53:42+00:00,[],
16888,https://github.com/tornupnegatives/alu4.git,2024-03-28 17:34:12+00:00,Logical Design & Layout of 4-Bit ALU,0,tornupnegatives/alu4,778931806,SystemVerilog,alu4,3590,0,2024-04-12 17:28:09+00:00,[],
16889,https://github.com/geanjrii/Contador_esteira.git,2024-04-13 03:13:04+00:00,,0,geanjrii/Contador_esteira,785966762,SystemVerilog,Contador_esteira,8071,0,2024-04-13 03:20:56+00:00,[],
16890,https://github.com/Pennylandia12/FInal-Project.git,2024-04-12 16:46:19+00:00,,0,Pennylandia12/FInal-Project,785800361,SystemVerilog,FInal-Project,7230,0,2024-04-12 16:46:25+00:00,[],
16891,https://github.com/Rerecich/CPEN211-CPU.git,2024-03-08 00:54:42+00:00,Central processing unit (CPU) design in Verilog,0,Rerecich/CPEN211-CPU,768914289,SystemVerilog,CPEN211-CPU,18,0,2024-03-08 01:12:52+00:00,[],
16892,https://github.com/Navneet-Singh20/APB_Protocol_UVM.git,2024-03-07 05:55:53+00:00,I have verified APB Protocol by using UVM Methodology,0,Navneet-Singh20/APB_Protocol_UVM,768460620,SystemVerilog,APB_Protocol_UVM,3695,0,2024-03-07 06:29:31+00:00,[],
16893,https://github.com/Navneet-Singh20/Assertions_Practice.git,2024-03-08 07:37:46+00:00,I have solved 30+ Assertions. EDAPlayground Link : https://www.edaplayground.com/x/PmGQ ,0,Navneet-Singh20/Assertions_Practice,769028104,SystemVerilog,Assertions_Practice,34,0,2024-03-08 07:39:16+00:00,[],
16894,https://github.com/rohith2h2/Syncrhonous_FIFO.git,2024-03-07 00:09:01+00:00,,0,rohith2h2/Syncrhonous_FIFO,768363426,SystemVerilog,Syncrhonous_FIFO,4,0,2024-03-07 00:18:09+00:00,[],
16895,https://github.com/tsengs0/UART_RTL_UVM.git,2024-03-11 02:10:46+00:00,This is a simple exercise of UART transceiver's RTL design along with UVM-based verification,0,tsengs0/UART_RTL_UVM,770142330,SystemVerilog,UART_RTL_UVM,13,0,2024-03-11 02:29:30+00:00,[],
16896,https://github.com/Priyanjana95/Neuromorphic.git,2024-03-12 12:01:29+00:00,,0,Priyanjana95/Neuromorphic,770926118,SystemVerilog,Neuromorphic,29133,0,2024-03-12 12:06:54+00:00,[],
16897,https://github.com/GaalElbaz/3-bitcounter.git,2024-03-14 13:33:25+00:00,"This repository contains SystemVerilog implementations of 3-bit counters. The counters are designed using both asynchronous and synchronous methodologies, utilizing D flip-flops and T flip-flops.",0,GaalElbaz/3-bitcounter,772070273,SystemVerilog,3-bitcounter,78,0,2024-03-14 13:38:39+00:00,[],
16898,https://github.com/gekapakos/Kapakos_Georgios_03165_XTEA.git,2024-03-12 20:13:55+00:00,"XTEA(eXteanded TEA), using systemverilog",0,gekapakos/Kapakos_Georgios_03165_XTEA,771169627,SystemVerilog,Kapakos_Georgios_03165_XTEA,5494,0,2024-03-12 20:23:18+00:00,[],
16899,https://github.com/Arunvaishnav7435/sv-forever.git,2024-03-14 04:52:37+00:00,,0,Arunvaishnav7435/sv-forever,771862288,SystemVerilog,sv-forever,3,0,2024-03-14 04:54:57+00:00,[],
16900,https://github.com/NoNounknow/ddr3_native_connect.git,2024-03-17 08:30:11+00:00,,0,NoNounknow/ddr3_native_connect,773280891,SystemVerilog,ddr3_native_connect,79,0,2024-03-17 10:52:40+00:00,[],
16901,https://github.com/sajieleza/router_verification.git,2024-03-17 12:00:43+00:00,,0,sajieleza/router_verification,773338886,SystemVerilog,router_verification,134,0,2024-03-17 12:03:51+00:00,[],
16902,https://github.com/Pranaybhavsar/VENDSENIOR.git,2024-03-23 06:20:12+00:00,,0,Pranaybhavsar/VENDSENIOR,776308038,SystemVerilog,VENDSENIOR,106,0,2024-03-23 06:31:52+00:00,[],
16903,https://github.com/smitp221/8088-Bus.git,2024-03-10 00:05:13+00:00,Creating and simulating BUS protocol for 8088 memory ,1,smitp221/8088-Bus,769748913,SystemVerilog,8088-Bus,43,0,2024-03-20 21:37:28+00:00,[],
16904,https://github.com/DHUSHYANTHDHARMAVARAPU/SV-PROJECT.git,2024-03-11 04:59:58+00:00,System verilog project ,0,DHUSHYANTHDHARMAVARAPU/SV-PROJECT,770184343,SystemVerilog,SV-PROJECT,16090,0,2024-03-21 07:11:41+00:00,[],
16905,https://github.com/mnasirEE/3_stage_pipelined_processor_RISC-V.git,2024-03-22 18:29:31+00:00,,0,mnasirEE/3_stage_pipelined_processor_RISC-V,776128105,SystemVerilog,3_stage_pipelined_processor_RISC-V,11,0,2024-03-22 18:36:19+00:00,[],
16906,https://github.com/huynguyendinhhcmut/lab2_ex2.git,2024-03-27 12:35:09+00:00,,0,huynguyendinhhcmut/lab2_ex2,778282105,SystemVerilog,lab2_ex2,3,0,2024-03-27 12:47:26+00:00,[],
16907,https://github.com/abhigna97/Design-and-Formal-Verification-of-a-Sequence-Detector-FSM-for-Enhanced-Security-Applications.git,2024-03-28 18:23:16+00:00,,0,abhigna97/Design-and-Formal-Verification-of-a-Sequence-Detector-FSM-for-Enhanced-Security-Applications,778950764,SystemVerilog,Design-and-Formal-Verification-of-a-Sequence-Detector-FSM-for-Enhanced-Security-Applications,18,0,2024-03-28 18:24:33+00:00,[],
16908,https://github.com/Dukeelian/Universal-Shift-Register.git,2024-03-30 15:45:25+00:00,,0,Dukeelian/Universal-Shift-Register,779722534,SystemVerilog,Universal-Shift-Register,1,0,2024-03-30 15:50:34+00:00,[],
16909,https://github.com/OYounis/RI5CY.git,2024-04-01 19:58:05+00:00,,0,OYounis/RI5CY,780596647,SystemVerilog,RI5CY,5575,0,2024-04-01 20:00:03+00:00,[],
16910,https://github.com/joaquinlemusm/Implementation-of-a-mux-8-to-1-with-any-output.git,2024-04-05 20:26:35+00:00,,0,joaquinlemusm/Implementation-of-a-mux-8-to-1-with-any-output,782693908,SystemVerilog,Implementation-of-a-mux-8-to-1-with-any-output,5,0,2024-04-05 20:28:53+00:00,[],https://api.github.com/licenses/mit
16911,https://github.com/cp024s/Counter-Verification-SV.git,2024-04-04 10:48:46+00:00,Mod 12 Counter Verification in SV testbench,0,cp024s/Counter-Verification-SV,781947013,SystemVerilog,Counter-Verification-SV,19,0,2024-04-04 10:57:05+00:00,[],
16912,https://github.com/Arunvaishnav7435/polymorphism.git,2024-04-04 05:38:19+00:00,,0,Arunvaishnav7435/polymorphism,781826086,SystemVerilog,polymorphism,4,0,2024-04-04 05:38:45+00:00,[],
16913,https://github.com/Harshitwin/System_verilog_snip.git,2024-04-03 18:27:45+00:00,,0,Harshitwin/System_verilog_snip,781624533,SystemVerilog,System_verilog_snip,8,0,2024-04-03 18:28:28+00:00,[],https://api.github.com/licenses/mit
16914,https://github.com/All0Mi/ALU-communication-via-APB-bus---SystemVerilog.git,2024-04-07 21:37:20+00:00,"The connection of ALU modules via APB bus - team project, documentation only in Polish.",0,All0Mi/ALU-communication-via-APB-bus---SystemVerilog,783434676,SystemVerilog,ALU-communication-via-APB-bus---SystemVerilog,1728,0,2024-04-07 21:44:01+00:00,[],
16915,https://github.com/oluseye-akomolede/fp_multiplier_module_main.git,2024-04-08 09:17:45+00:00,main repository for the floating point multiplier and associated testbench,0,oluseye-akomolede/fp_multiplier_module_main,783633628,SystemVerilog,fp_multiplier_module_main,6,0,2024-04-08 09:17:50+00:00,[],
16916,https://github.com/hcxxxxxx/Arch-2024Spring.git,2024-04-10 01:06:52+00:00,,0,hcxxxxxx/Arch-2024Spring,784500857,SystemVerilog,Arch-2024Spring,1386,0,2024-04-10 01:11:39+00:00,[],
16917,https://github.com/sorykkk/ALU-structural.git,2024-04-11 11:53:40+00:00,,0,sorykkk/ALU-structural,785196548,SystemVerilog,ALU-structural,7,0,2024-04-11 12:05:21+00:00,[],
16918,https://github.com/Pallaviguptha/I2C-UVM.git,2024-04-02 13:38:02+00:00,,0,Pallaviguptha/I2C-UVM,780958068,SystemVerilog,I2C-UVM,12,0,2024-04-02 13:55:12+00:00,[],
16919,https://github.com/sarimaleem/fpga-neural-net.git,2024-03-25 16:16:57+00:00,,0,sarimaleem/fpga-neural-net,777319291,SystemVerilog,fpga-neural-net,902,0,2024-03-25 17:54:17+00:00,[],
16920,https://github.com/Lin-Yu-Ming/Canny-Edge-Detection-CED.git,2024-04-11 12:48:57+00:00,,0,Lin-Yu-Ming/Canny-Edge-Detection-CED,785218573,SystemVerilog,Canny-Edge-Detection-CED,23,0,2024-04-11 13:10:10+00:00,[],
16921,https://github.com/gaozheng2001/three_digit_decimal_counter.git,2024-04-12 08:50:55+00:00,,0,gaozheng2001/three_digit_decimal_counter,785615483,SystemVerilog,three_digit_decimal_counter,3663,0,2024-04-12 08:51:08+00:00,[],
16922,https://github.com/Mohan-KGM/parking_lot.git,2024-04-13 05:38:20+00:00,"Design a Verilog-based parking lot system with gates, sensors, and spot management FSMs, then verify its functionality through extensive test benching covering normal and failure scenarios.",0,Mohan-KGM/parking_lot,785996350,SystemVerilog,parking_lot,6,0,2024-04-13 05:44:01+00:00,[],
16923,https://github.com/geanjrii/Semaforo.git,2024-04-13 03:13:51+00:00,,0,geanjrii/Semaforo,785966929,SystemVerilog,Semaforo,8005,0,2024-04-13 03:21:54+00:00,[],
16924,https://github.com/calonso88/tt06-rsa.git,2024-03-20 19:06:42+00:00,,0,calonso88/tt06-rsa,775102807,SystemVerilog,tt06-rsa,381,0,2024-04-03 20:22:37+00:00,[],https://api.github.com/licenses/apache-2.0
16925,https://github.com/KushalKumarJujare/PacoReinaCampo-SoC-DV.git,2024-03-14 16:15:14+00:00,,0,KushalKumarJujare/PacoReinaCampo-SoC-DV,772147701,SystemVerilog,PacoReinaCampo-SoC-DV,24173,0,2024-03-14 16:16:28+00:00,[],https://api.github.com/licenses/mit
16926,https://github.com/Shiba0228/PLL-circuit-implementation.git,2024-03-15 06:58:27+00:00,simple PLL circuit,0,Shiba0228/PLL-circuit-implementation,772425423,SystemVerilog,PLL-circuit-implementation,1,0,2024-03-15 06:59:52+00:00,[],
16927,https://github.com/atfox272/nios_test.git,2024-03-14 18:55:41+00:00,,0,atfox272/nios_test,772216746,SystemVerilog,nios_test,566,0,2024-03-14 18:58:43+00:00,[],
16928,https://github.com/alimahani/Crypto_cores.git,2024-03-14 14:52:54+00:00,,0,alimahani/Crypto_cores,772108573,SystemVerilog,Crypto_cores,16,0,2024-03-14 19:10:51+00:00,[],
16929,https://github.com/ariz207/Verilog-Alarm-Clock.git,2024-03-16 19:50:04+00:00,,0,ariz207/Verilog-Alarm-Clock,773117679,SystemVerilog,Verilog-Alarm-Clock,683,0,2024-03-16 19:55:26+00:00,[],
16930,https://github.com/floAfentaki/Fault-Analysis-of-Digital-Printed-MLPs.git,2024-03-11 14:42:49+00:00,"Fault Sensitivity Analysis of Printed Bespoke Multilayer Perceptron Classifiers Pal, P.; Afentaki, F.; Zhao, H.; Saglam, G.; Hefenbrock, M.; Zervakis, G.; Beigl, M.; Tahoori, M. B. 2024 IEEE European Test Symposium (ETS), IEEE, 2024",0,floAfentaki/Fault-Analysis-of-Digital-Printed-MLPs,770432438,SystemVerilog,Fault-Analysis-of-Digital-Printed-MLPs,23741,0,2024-03-11 20:59:09+00:00,[],
16931,https://github.com/sumanthmortha/module-4.git,2024-03-18 09:55:36+00:00,,0,sumanthmortha/module-4,773733795,SystemVerilog,module-4,8,0,2024-03-18 09:58:39+00:00,[],
16933,https://github.com/Skiiippp/OtterPipeline.git,2024-03-13 21:19:58+00:00,swaos,0,Skiiippp/OtterPipeline,771736813,SystemVerilog,OtterPipeline,54,0,2024-03-14 17:34:41+00:00,[],
16934,https://github.com/HakeemOS/VerificationDemo.git,2024-03-07 14:26:14+00:00,,0,HakeemOS/VerificationDemo,768675495,SystemVerilog,VerificationDemo,6566,0,2024-03-07 14:33:33+00:00,[],
16935,https://github.com/GlennWilliam/FroggerFPGA.git,2024-03-21 08:53:42+00:00,,0,GlennWilliam/FroggerFPGA,775364085,SystemVerilog,FroggerFPGA,1606,0,2024-03-21 08:55:35+00:00,[],
16936,https://github.com/jays-01/FIR_Pipelined.git,2024-03-23 10:13:20+00:00,,0,jays-01/FIR_Pipelined,776370238,SystemVerilog,FIR_Pipelined,402,0,2024-03-23 10:16:24+00:00,[],
16937,https://github.com/MameMame777/SVIP.git,2024-03-17 09:28:29+00:00,,0,MameMame777/SVIP,773296024,SystemVerilog,SVIP,10,0,2024-03-17 09:29:00+00:00,[],
16938,https://github.com/sarpyvz/FPGA.git,2024-03-07 18:25:31+00:00,Using Verilog to design circuits and programme FPGA ,0,sarpyvz/FPGA,768788601,SystemVerilog,FPGA,8,0,2024-03-07 18:27:04+00:00,[],
16939,https://github.com/wyatt-tack/CPE233.git,2024-03-12 07:01:13+00:00,Final Project for CPE-233 at Cal Poly. Uses Risc-V ISA on a 32 bit MCU designed for Basys-3 Artix-7 FPGA breakout. MCU specifically used for I2C read/write and stepper motor control,0,wyatt-tack/CPE233,770791579,SystemVerilog,CPE233,125709,0,2024-03-24 00:45:41+00:00,[],
16940,https://github.com/mohit-verma-mv/VirtualSequence_VirtualSequencer.git,2024-03-19 11:59:32+00:00,,0,mohit-verma-mv/VirtualSequence_VirtualSequencer,774352475,SystemVerilog,VirtualSequence_VirtualSequencer,11,0,2024-03-19 12:07:08+00:00,[],
16941,https://github.com/touhid314/Digital-Electronics-Verilog.git,2024-03-25 18:35:34+00:00,Verilog and SystemVerilog codes done as part of EEE303 Digital Electronics course,0,touhid314/Digital-Electronics-Verilog,777379218,SystemVerilog,Digital-Electronics-Verilog,374,0,2024-03-25 19:08:31+00:00,[],
16942,https://github.com/saba-ja/systemverilog-for-verification-examples.git,2024-03-26 18:51:12+00:00,,0,saba-ja/systemverilog-for-verification-examples,777922128,SystemVerilog,systemverilog-for-verification-examples,68,0,2024-03-26 18:51:32+00:00,[],
16943,https://github.com/adarmaori/verilog-mersene.git,2024-03-25 21:11:55+00:00,An FPGA circuit to expedite the primality checking of mersene prime candidates,0,adarmaori/verilog-mersene,777438103,SystemVerilog,verilog-mersene,16,0,2024-03-25 21:22:40+00:00,[],
16944,https://github.com/PankajNair/5-Stage-Pipelined-RISC-V-Processor.git,2024-03-30 11:31:18+00:00,My implementation of a pipelined RISC-V processor,0,PankajNair/5-Stage-Pipelined-RISC-V-Processor,779637935,SystemVerilog,5-Stage-Pipelined-RISC-V-Processor,428,0,2024-03-30 19:26:21+00:00,[],
16945,https://github.com/Sukhithaaithal/RAL_registers.git,2024-04-01 04:46:31+00:00,,0,Sukhithaaithal/RAL_registers,780257436,SystemVerilog,RAL_registers,148,0,2024-04-01 04:47:36+00:00,[],
16946,https://github.com/ic35hao/AHB-RAM.git,2024-04-01 13:27:18+00:00,,0,ic35hao/AHB-RAM,780433914,SystemVerilog,AHB-RAM,51,0,2024-04-01 13:30:56+00:00,[],
16947,https://github.com/stargazer77077/ViterbiDecoder.git,2024-04-01 18:23:28+00:00,,0,stargazer77077/ViterbiDecoder,780560927,SystemVerilog,ViterbiDecoder,5,0,2024-04-01 18:34:30+00:00,[],
16948,https://github.com/saira-ijaz/lab_8.git,2024-04-01 18:25:59+00:00,,0,saira-ijaz/lab_8,780561899,SystemVerilog,lab_8,1263,0,2024-04-01 18:29:28+00:00,[],
16949,https://github.com/turri21/LED_Test-neptuno.git,2024-03-21 18:24:43+00:00,,0,turri21/LED_Test-neptuno,775623618,SystemVerilog,LED_Test-neptuno,135,0,2024-03-31 23:47:44+00:00,[],
16950,https://github.com/AstroPix/compair-fw.git,2024-03-14 19:02:53+00:00,ComPair Firmware Repository,0,AstroPix/compair-fw,772219420,SystemVerilog,compair-fw,179,0,2024-04-03 14:00:17+00:00,[],https://api.github.com/licenses/gpl-3.0
16951,https://github.com/Shankeydev/UART_DV.git,2024-04-04 10:08:58+00:00,,0,Shankeydev/UART_DV,781930116,SystemVerilog,UART_DV,11,0,2024-04-04 10:19:14+00:00,[],
16952,https://github.com/MasterPlayer/mp_irq_retryer.git,2024-04-07 15:40:47+00:00,interrupt retry engine for regenerate interrupts signal,0,MasterPlayer/mp_irq_retryer,783331111,SystemVerilog,mp_irq_retryer,1,0,2024-04-07 16:11:24+00:00,[],https://api.github.com/licenses/mit
16953,https://github.com/Stork1323/Single_Cycle_Processor_RISC_V_32I.git,2024-03-26 15:51:16+00:00,,0,Stork1323/Single_Cycle_Processor_RISC_V_32I,777842688,SystemVerilog,Single_Cycle_Processor_RISC_V_32I,3973,0,2024-03-26 17:05:25+00:00,[],
16954,https://github.com/karthik5102001/System_Verilog_Verification.git,2024-03-30 21:55:00+00:00,,0,karthik5102001/System_Verilog_Verification,779822785,SystemVerilog,System_Verilog_Verification,647,0,2024-03-30 22:42:41+00:00,[],
16955,https://github.com/ATME-VLSI-Incubation/Test_Repo_No_BackUp.git,2024-04-10 14:47:05+00:00,,0,ATME-VLSI-Incubation/Test_Repo_No_BackUp,784782343,SystemVerilog,Test_Repo_No_BackUp,0,0,2024-04-10 16:08:35+00:00,[],
16956,https://github.com/Sharos21/computer-architecture.git,2024-04-09 22:39:56+00:00,educational purpose ,0,Sharos21/computer-architecture,784462207,SystemVerilog,computer-architecture,21,0,2024-04-10 21:07:56+00:00,[],
16957,https://github.com/arhamhashmi01/sv-practice.git,2024-03-28 10:28:55+00:00,"This repository contains an extensive learning journey of SystemVerilog, exercises and projects to enhance the understanding and proficiency in the hardware description language",0,arhamhashmi01/sv-practice,778750810,SystemVerilog,sv-practice,7,0,2024-04-06 19:07:43+00:00,"['gtkwave', 'hardware-designs', 'rtl', 'systemverilog', 'vivado']",
16958,https://github.com/parvathy10/verification-environment-for-adder.git,2024-04-11 05:07:48+00:00,,0,parvathy10/verification-environment-for-adder,785051806,SystemVerilog,verification-environment-for-adder,1,0,2024-04-11 05:08:41+00:00,[],
16960,https://github.com/MarizSabry/FIFO-SystemVerilog.git,2024-04-11 19:35:02+00:00,,0,MarizSabry/FIFO-SystemVerilog,785385485,SystemVerilog,FIFO-SystemVerilog,3,0,2024-04-11 19:39:09+00:00,[],
16961,https://github.com/ghotrs4/Hardware-Implementation-of-Image-Decompressor.git,2024-04-11 22:12:13+00:00,,0,ghotrs4/Hardware-Implementation-of-Image-Decompressor,785439780,SystemVerilog,Hardware-Implementation-of-Image-Decompressor,2002,0,2024-04-11 22:17:23+00:00,[],
16962,https://github.com/lanSall/finalReport.git,2024-04-01 16:34:33+00:00,,0,lanSall/finalReport,780514195,SystemVerilog,finalReport,8643,0,2024-04-01 16:34:39+00:00,[],
16963,https://github.com/DianaNatali/tt06_grayscale_sobel.git,2024-04-06 23:38:11+00:00,,0,DianaNatali/tt06_grayscale_sobel,783095922,SystemVerilog,tt06_grayscale_sobel,76,0,2024-04-06 23:46:15+00:00,[],https://api.github.com/licenses/apache-2.0
16964,https://github.com/geanjrii/Display-7-segmentos.git,2024-04-13 03:23:56+00:00,,0,geanjrii/Display-7-segmentos,785969049,SystemVerilog,Display-7-segmentos,8184,0,2024-04-13 03:24:05+00:00,[],
16966,https://github.com/Midos3d/Aes.git,2024-04-13 11:07:37+00:00,,0,Midos3d/Aes,786078211,SystemVerilog,Aes,6,0,2024-04-13 11:08:29+00:00,[],
16967,https://github.com/riktaco/Simple-RISC-Machine.git,2024-03-06 16:48:49+00:00,,0,riktaco/Simple-RISC-Machine,768201467,SystemVerilog,Simple-RISC-Machine,18,0,2024-03-06 16:57:08+00:00,[],
16968,https://github.com/Navneet-Singh20/AHBLite_to_APB_Bridge.git,2024-03-07 06:54:36+00:00,I have verified AHBLite to APB birdge. In which AHBLite will act as a Slave and APB act as Master,0,Navneet-Singh20/AHBLite_to_APB_Bridge,768481121,SystemVerilog,AHBLite_to_APB_Bridge,5059,0,2024-03-07 07:13:18+00:00,[],
16969,https://github.com/Basavakirana/Router-1-3-Verification.git,2024-03-10 14:39:18+00:00,Verification of Router1*3 using UVM,0,Basavakirana/Router-1-3-Verification,769957926,SystemVerilog,Router-1-3-Verification,42,0,2024-03-10 15:07:12+00:00,[],
16970,https://github.com/NataliaBoncea/FPGA-Mouse-communication.git,2024-03-10 17:43:41+00:00,,0,NataliaBoncea/FPGA-Mouse-communication,770019683,SystemVerilog,FPGA-Mouse-communication,7326,0,2024-03-10 17:52:30+00:00,[],
16971,https://github.com/rohith2h2/Odd-frequency-divider.git,2024-03-10 20:10:17+00:00,Odd frequency Divider with and without 50% duty cycle,0,rohith2h2/Odd-frequency-divider,770062109,SystemVerilog,Odd-frequency-divider,2,0,2024-03-10 20:13:00+00:00,[],
16972,https://github.com/jayasinghedr/Single-Cycle-RISC-V-Processor.git,2024-03-09 18:09:53+00:00,A single cycle processor based on RISC-V 32 bit architecture,0,jayasinghedr/Single-Cycle-RISC-V-Processor,769668409,SystemVerilog,Single-Cycle-RISC-V-Processor,1133,0,2024-03-09 18:47:11+00:00,[],
16973,https://github.com/pic88/VLSI-RISC-V--PIC16F1826.git,2024-03-13 09:39:43+00:00,verilog design RISC-V mcu ,0,pic88/VLSI-RISC-V--PIC16F1826,771432530,SystemVerilog,VLSI-RISC-V--PIC16F1826,3,0,2024-03-13 09:47:58+00:00,[],
16974,https://github.com/joselcuevam/gituvm.git,2024-03-12 09:21:35+00:00,test git commands with miscellaneous and uvm files ,0,joselcuevam/gituvm,770851327,SystemVerilog,gituvm,3,0,2024-03-12 09:59:58+00:00,[],
16975,https://github.com/Chasee/CPE233_FINAL_HW.git,2024-03-13 16:51:39+00:00,,0,Chasee/CPE233_FINAL_HW,771631622,SystemVerilog,CPE233_FINAL_HW,7,0,2024-03-13 16:56:45+00:00,[],
16976,https://github.com/Arunvaishnav7435/SV-NBA.git,2024-03-17 17:06:56+00:00,,0,Arunvaishnav7435/SV-NBA,773440453,SystemVerilog,SV-NBA,3,0,2024-03-17 17:08:17+00:00,[],
16977,https://github.com/dcmid/async_fifo.git,2024-03-12 08:15:17+00:00,,0,dcmid/async_fifo,770820908,SystemVerilog,async_fifo,3,0,2024-03-12 08:15:40+00:00,[],
16978,https://github.com/GaalElbaz/four_buttons_riddle.git,2024-03-20 11:23:29+00:00," The ""Four Buttons Riddle"" is a logic puzzle where you aim to toggle four buttons around a central light to achieve a uniform state (all on or all off). Each button press rotates the table, complicating the task. Strategize your moves to solve the puzzle efficiently.",0,GaalElbaz/four_buttons_riddle,774884631,SystemVerilog,four_buttons_riddle,124,0,2024-03-20 11:27:26+00:00,[],
16979,https://github.com/salunkead/SVCodingExcercises.git,2024-03-11 05:19:00+00:00,,0,salunkead/SVCodingExcercises,770189705,SystemVerilog,SVCodingExcercises,114,0,2024-03-11 05:27:57+00:00,[],
16981,https://github.com/chenpeijun256/riscv-1s.git,2024-03-25 00:14:09+00:00,RISC-V core with no pipeline,0,chenpeijun256/riscv-1s,776978983,SystemVerilog,riscv-1s,24,0,2024-03-25 01:48:25+00:00,[],https://api.github.com/licenses/gpl-2.0
16982,https://github.com/2024-Spring-SoC/lab2.git,2024-03-25 09:03:58+00:00,Lab2. APB Configuration ,0,2024-Spring-SoC/lab2,777130426,SystemVerilog,lab2,6,0,2024-03-25 09:07:05+00:00,[],
16983,https://github.com/NAQI-UL-HASSAN/LAB_7.git,2024-03-25 21:46:53+00:00,,0,NAQI-UL-HASSAN/LAB_7,777449207,SystemVerilog,LAB_7,4854,0,2024-03-25 21:49:05+00:00,[],
16984,https://github.com/satyaprakashakula/Cell-SPU-Lite-Multimedia-Processor.git,2024-03-26 23:04:52+00:00,,0,satyaprakashakula/Cell-SPU-Lite-Multimedia-Processor,778011343,SystemVerilog,Cell-SPU-Lite-Multimedia-Processor,20,0,2024-03-26 23:07:14+00:00,[],
16985,https://github.com/Alexis505/riscv_segmentado.git,2024-03-25 18:06:09+00:00,This repo contains a segmented processor able to run some riscv instructions. Look at readme file for more details,0,Alexis505/riscv_segmentado,777366706,SystemVerilog,riscv_segmentado,28,0,2024-03-27 18:07:43+00:00,[],https://api.github.com/licenses/gpl-3.0
16986,https://github.com/jethtxiao/cmac_100g.git,2024-03-29 07:13:39+00:00,cmac 100g eth on xcvu3p-ffvc1517-2-i,0,jethtxiao/cmac_100g,779161366,SystemVerilog,cmac_100g,11137,0,2024-03-29 07:20:43+00:00,[],
16987,https://github.com/DianaNatali/grayscale_sobel_cac.git,2024-04-01 02:20:53+00:00,,0,DianaNatali/grayscale_sobel_cac,780221171,SystemVerilog,grayscale_sobel_cac,49,0,2024-04-01 03:07:34+00:00,[],
16988,https://github.com/BHKGITT/SV_TB.git,2024-04-02 04:40:32+00:00,,0,BHKGITT/SV_TB,780745390,SystemVerilog,SV_TB,3,0,2024-04-02 04:42:02+00:00,[],
16989,https://github.com/perlindgren/muldiv.git,2024-04-02 21:08:18+00:00,Muldiv experiments on ARTY,0,perlindgren/muldiv,781154983,SystemVerilog,muldiv,3,0,2024-04-02 21:18:11+00:00,[],
16990,https://github.com/Emkot87/AnnSV.git,2024-04-02 08:51:19+00:00,,0,Emkot87/AnnSV,780835893,SystemVerilog,AnnSV,7,0,2024-04-02 08:53:21+00:00,[],
16991,https://github.com/expologtechno/AHB_memory_001.git,2024-03-09 12:31:26+00:00,AHB slave RTL with memory ,0,expologtechno/AHB_memory_001,769561119,SystemVerilog,AHB_memory_001,402,0,2024-03-09 12:55:46+00:00,[],
16992,https://github.com/MiniVoitz/AES128_SV.git,2024-03-22 08:32:19+00:00,,0,MiniVoitz/AES128_SV,775883286,SystemVerilog,AES128_SV,211,0,2024-03-22 08:36:12+00:00,[],
16993,https://github.com/VeresDenisa/unit-addr-decoder-4-sw-sv-sva.git,2024-03-08 09:56:21+00:00,,0,VeresDenisa/unit-addr-decoder-4-sw-sv-sva,769080370,SystemVerilog,unit-addr-decoder-4-sw-sv-sva,1239,0,2024-03-22 12:34:26+00:00,[],
16996,https://github.com/T4gg12/DLD-Final_Project.git,2024-04-10 21:20:10+00:00,,0,T4gg12/DLD-Final_Project,784934203,SystemVerilog,DLD-Final_Project,7230,0,2024-04-10 21:20:17+00:00,[],
16997,https://github.com/sarenap/GitHub-Pages-.git,2024-04-03 06:24:49+00:00,cse110,0,sarenap/GitHub-Pages-,781310499,SystemVerilog,GitHub-Pages-,3496,0,2024-04-13 05:19:37+00:00,[],
16998,https://github.com/sali-n/RISCV-Processor.git,2024-03-26 04:41:41+00:00,RISCV processor done in both single cycle and pipeline (with CSR support) form.,0,sali-n/RISCV-Processor,777561569,SystemVerilog,RISCV-Processor,17,0,2024-03-28 04:37:42+00:00,[],
16999,https://github.com/rowannaguib/ALU.git,2024-03-12 17:31:00+00:00,"built a Verification Environment for ALU, in2cluding verification plan ",0,rowannaguib/ALU,771101255,SystemVerilog,ALU,177,0,2024-03-15 16:44:39+00:00,[],
17000,https://github.com/Mahjabeen632/lab_4.git,2024-03-18 15:27:26+00:00,,0,Mahjabeen632/lab_4,773892828,SystemVerilog,lab_4,22,0,2024-03-18 15:28:39+00:00,[],
17001,https://github.com/PrintedElectronics/Fault_Sensitivity_Analysis.git,2024-03-12 13:12:29+00:00,,0,PrintedElectronics/Fault_Sensitivity_Analysis,770970099,SystemVerilog,Fault_Sensitivity_Analysis,26792,0,2024-03-12 13:13:33+00:00,[],
17002,https://github.com/asimahsan1990/Cadence-Exersice.git,2024-03-13 14:06:51+00:00,,0,asimahsan1990/Cadence-Exersice,771552619,SystemVerilog,Cadence-Exersice,10,0,2024-03-13 14:33:28+00:00,[],
17003,https://github.com/VijayKotagiri08/Fifo_mem.git,2024-03-12 21:03:26+00:00,Design and Verification of Asynchronous FIFO using SV and UVM environment,0,VijayKotagiri08/Fifo_mem,771187134,SystemVerilog,Fifo_mem,13554,0,2024-03-12 21:08:11+00:00,[],
17007,https://github.com/mohit-verma-mv/Configurable-Testbench-Topology-UVM.git,2024-03-09 09:58:13+00:00,,0,mohit-verma-mv/Configurable-Testbench-Topology-UVM,769517454,SystemVerilog,Configurable-Testbench-Topology-UVM,7,0,2024-03-09 10:00:45+00:00,[],
17008,https://github.com/Arunvaishnav7435/fifo_queue.git,2024-03-10 18:06:45+00:00,,0,Arunvaishnav7435/fifo_queue,770026950,SystemVerilog,fifo_queue,3,0,2024-03-10 18:07:31+00:00,[],
17009,https://github.com/MameMame777/verilator_test.git,2024-03-09 13:54:07+00:00,,0,MameMame777/verilator_test,769586383,SystemVerilog,verilator_test,21,0,2024-03-10 02:02:25+00:00,[],
17010,https://github.com/Vinod971/My-UVM.git,2024-03-25 20:18:54+00:00,,0,Vinod971/My-UVM,777418936,SystemVerilog,My-UVM,26,0,2024-03-25 20:21:47+00:00,[],
17011,https://github.com/VishnuMadupoju/Ooops_Based_Dual_Tb.git,2024-03-25 16:20:58+00:00,,0,VishnuMadupoju/Ooops_Based_Dual_Tb,777321174,SystemVerilog,Ooops_Based_Dual_Tb,5,0,2024-03-25 16:26:37+00:00,[],
17012,https://github.com/gunnchOS3k/eg3573_lab3_6443.git,2024-03-26 16:23:13+00:00,,0,gunnchOS3k/eg3573_lab3_6443,777857301,SystemVerilog,eg3573_lab3_6443,3,0,2024-03-26 16:23:18+00:00,[],
17013,https://github.com/LakshmiRajkumarM/Half-Adder-Verification.git,2024-03-31 05:15:43+00:00,,0,LakshmiRajkumarM/Half-Adder-Verification,779902608,SystemVerilog,Half-Adder-Verification,3,0,2024-03-31 05:19:05+00:00,[],
17014,https://github.com/MurchanaSaikia/APB.git,2024-03-30 18:25:52+00:00,,0,MurchanaSaikia/APB,779769099,SystemVerilog,APB,310,0,2024-03-30 18:29:30+00:00,[],
17015,https://github.com/mikhailkhokhlov/elastic-buffers.git,2024-04-01 17:18:38+00:00,,0,mikhailkhokhlov/elastic-buffers,780533657,SystemVerilog,elastic-buffers,2,0,2024-04-01 18:59:32+00:00,[],
17016,https://github.com/nandish-jha/xswitch-verification.git,2024-04-02 04:30:38+00:00,,0,nandish-jha/xswitch-verification,780742739,SystemVerilog,xswitch-verification,14,0,2024-04-02 04:31:19+00:00,[],
17017,https://github.com/cooper-union-ece-251-marano/final-project-ece-251-spring-2024-computer_design_template.git,2024-04-02 19:36:33+00:00,final-project-ece-251-spring-2024-computer_design_template created by GitHub Classroom,6,cooper-union-ece-251-marano/final-project-ece-251-spring-2024-computer_design_template,781120595,SystemVerilog,final-project-ece-251-spring-2024-computer_design_template,22,0,2024-04-02 19:36:40+00:00,[],https://api.github.com/licenses/mit
17018,https://github.com/foziD123/Scalable-Hardware-Accelerator-for-Personalized-Stress-Detection.git,2024-04-03 13:36:30+00:00,"VLSI accelerator for personalized stress detection developed at Technion University's VLSI Lab. Utilizes innovative techniques in hardware acceleration, including SVM and KNN cores, clock synchronization, and regfile management.",0,foziD123/Scalable-Hardware-Accelerator-for-Personalized-Stress-Detection,781490323,SystemVerilog,Scalable-Hardware-Accelerator-for-Personalized-Stress-Detection,4594,0,2024-04-03 13:42:32+00:00,[],
17019,https://github.com/andey-robins/dcu-verification.git,2024-03-21 17:14:07+00:00,UVM Based verification of an open-source dual compute unit manufactured for Tiny Tapeout Shuttle 5.,0,andey-robins/dcu-verification,775593228,SystemVerilog,dcu-verification,30,0,2024-04-04 16:19:58+00:00,[],https://api.github.com/licenses/mit
17020,https://github.com/MatveyVisotsky/MIPS-1-core.git,2024-04-03 18:41:31+00:00,,0,MatveyVisotsky/MIPS-1-core,781630468,SystemVerilog,MIPS-1-core,2,0,2024-04-04 22:16:49+00:00,[],
17021,https://github.com/begumfilizoz/UARTDesign.git,2024-04-06 12:01:46+00:00,This is an UART designed in SystemVerilog.,0,begumfilizoz/UARTDesign,782913687,SystemVerilog,UARTDesign,90,0,2024-04-06 12:04:12+00:00,[],
17022,https://github.com/saran-r21/VLSI.git,2024-04-09 21:37:30+00:00,VLSI Design and Automation Projects,0,saran-r21/VLSI,784443881,SystemVerilog,VLSI,226,0,2024-04-09 22:21:27+00:00,[],
17023,https://github.com/romanirofaeil/ALU_UVM.git,2024-04-06 05:04:02+00:00,,0,romanirofaeil/ALU_UVM,782808084,SystemVerilog,ALU_UVM,31,0,2024-04-06 05:34:48+00:00,[],
17024,https://github.com/2024-Spring-SoC/lab4.git,2024-03-29 08:01:54+00:00,Lab4. Bursty DMA,0,2024-Spring-SoC/lab4,779176162,SystemVerilog,lab4,10,0,2024-04-09 04:30:18+00:00,[],
17025,https://github.com/jelenar-vtool/CRC_engin_env.git,2024-04-04 07:57:19+00:00,,0,jelenar-vtool/CRC_engin_env,781875819,SystemVerilog,CRC_engin_env,15768,0,2024-04-04 08:02:06+00:00,[],
17026,https://github.com/mcalmidi/CSE469.git,2024-03-27 02:06:37+00:00,,0,mcalmidi/CSE469,778061741,SystemVerilog,CSE469,463,0,2024-04-05 03:40:44+00:00,[],
17027,https://github.com/Danpythonman/fpga-super-mario.git,2024-03-17 21:56:32+00:00,,0,Danpythonman/fpga-super-mario,773521399,SystemVerilog,fpga-super-mario,175,0,2024-03-18 01:48:22+00:00,[],
17028,https://github.com/volsax/async_fifo_uvm.git,2024-04-10 05:18:55+00:00,,0,volsax/async_fifo_uvm,784565425,SystemVerilog,async_fifo_uvm,55,0,2024-04-10 05:23:20+00:00,[],
17029,https://github.com/rdroid-27/System-Verilog.git,2024-04-03 01:37:53+00:00,,0,rdroid-27/System-Verilog,781228976,SystemVerilog,System-Verilog,86,0,2024-04-03 02:28:46+00:00,[],
17030,https://github.com/SalamatinVV/Vivado.git,2024-04-07 16:14:09+00:00,vivado project,0,SalamatinVV/Vivado,783341073,SystemVerilog,Vivado,31,0,2024-04-07 16:47:20+00:00,[],
17031,https://github.com/JiteshNayak2004/JFPU.git,2024-03-22 16:58:19+00:00,floating point unit following the IEEE 754 standard,0,JiteshNayak2004/JFPU,776090262,SystemVerilog,JFPU,127,0,2024-04-10 18:07:17+00:00,[],
17032,https://github.com/Ariel424/UVM-Verification-of-D-FF.git,2024-04-12 10:46:05+00:00,Dealy Flip-Flop Test Code,0,Ariel424/UVM-Verification-of-D-FF,785657126,SystemVerilog,UVM-Verification-of-D-FF,1,0,2024-04-12 10:57:45+00:00,[],
17033,https://github.com/geanjrii/Cafeteira.git,2024-04-13 03:11:21+00:00,,0,geanjrii/Cafeteira,785966406,SystemVerilog,Cafeteira,8438,0,2024-04-13 03:20:00+00:00,[],
17035,https://github.com/Lenin8880/AHB2APB.git,2024-04-13 06:35:37+00:00,"The AHB-APB Bridge Verification Project serves as an exhaustive verification suite, ensuring the bridge design's functionality and performance align with industry standards and best practices.",0,Lenin8880/AHB2APB,786009826,SystemVerilog,AHB2APB,169,0,2024-04-13 06:42:05+00:00,[],https://api.github.com/licenses/cc0-1.0
17036,https://github.com/sorukohi/i2c-interface.git,2024-03-14 13:58:29+00:00,,0,sorukohi/i2c-interface,772082159,SystemVerilog,i2c-interface,3,0,2024-03-14 14:23:55+00:00,[],
17037,https://github.com/dhanush-kumar-invo/SingleCycle_riscV.git,2024-03-17 14:22:21+00:00,,0,dhanush-kumar-invo/SingleCycle_riscV,773385093,SystemVerilog,SingleCycle_riscV,18,0,2024-03-17 14:38:41+00:00,[],
17038,https://github.com/NAQI-UL-HASSAN/Lab6.git,2024-03-18 18:42:29+00:00,,0,NAQI-UL-HASSAN/Lab6,773988227,SystemVerilog,Lab6,3219,0,2024-03-18 18:44:48+00:00,[],
17039,https://github.com/dmitrodem/axi_udp.git,2024-03-15 14:13:55+00:00,,0,dmitrodem/axi_udp,772601088,SystemVerilog,axi_udp,21,0,2024-03-15 14:29:45+00:00,[],
17040,https://github.com/Stork1323/Vending-Machine.git,2024-03-13 07:27:11+00:00,,0,Stork1323/Vending-Machine,771376168,SystemVerilog,Vending-Machine,73,0,2024-03-13 07:29:13+00:00,[],
17041,https://github.com/Arunvaishnav7435/fork_joinany.git,2024-03-21 05:56:46+00:00,,0,Arunvaishnav7435/fork_joinany,775299150,SystemVerilog,fork_joinany,3,0,2024-03-21 05:57:21+00:00,[],
17042,https://github.com/kelbor-khal/100days_RTL_challenge.git,2024-03-19 11:43:21+00:00,This is my attempt to complete the 100 days RTL challenge from @Ummidichandrika,0,kelbor-khal/100days_RTL_challenge,774345503,SystemVerilog,100days_RTL_challenge,59,0,2024-03-20 16:56:34+00:00,[],
17043,https://github.com/Shiba0228/Frequency-Divider.git,2024-03-25 06:54:00+00:00,,0,Shiba0228/Frequency-Divider,777082566,SystemVerilog,Frequency-Divider,1,0,2024-03-25 06:56:42+00:00,[],
17046,https://github.com/gskip17/uart-sha-tinytapeout.git,2024-03-07 13:09:11+00:00,Tiny Tapeout submission repo.,1,gskip17/uart-sha-tinytapeout,768638608,SystemVerilog,uart-sha-tinytapeout,161,0,2024-03-07 15:23:44+00:00,[],https://api.github.com/licenses/apache-2.0
17047,https://github.com/Ludini1/max-finder-system-verilog.git,2024-03-07 08:39:38+00:00,A System Verilog module for finding the largest value from a set of inputs. It is completely combinational and parameterizable to your needs.,0,Ludini1/max-finder-system-verilog,768522531,SystemVerilog,max-finder-system-verilog,7,0,2024-03-07 08:40:45+00:00,[],
17048,https://github.com/Arunvaishnav7435/Packed_Array.git,2024-03-07 06:06:10+00:00,,0,Arunvaishnav7435/Packed_Array,768463903,SystemVerilog,Packed_Array,2,0,2024-03-07 06:08:05+00:00,[],
17049,https://github.com/Navneet-Singh20/APB_Protocol_SV.git,2024-03-07 06:33:05+00:00,,0,Navneet-Singh20/APB_Protocol_SV,768473237,SystemVerilog,APB_Protocol_SV,131,0,2024-03-07 06:47:35+00:00,[],
17050,https://github.com/Pal-A-Patel/-VerificationOfDUT.git,2024-03-12 04:22:05+00:00,,0,Pal-A-Patel/-VerificationOfDUT,770738749,SystemVerilog,-VerificationOfDUT,65,0,2024-03-12 04:26:01+00:00,[],
17051,https://github.com/dcmid/pulse_cdc.git,2024-03-12 10:58:26+00:00,,0,dcmid/pulse_cdc,770896702,SystemVerilog,pulse_cdc,1,0,2024-03-12 10:58:59+00:00,[],
17052,https://github.com/tlianidis/EEK23_Present_Cipher_Encryption_Core_Lianidis.git,2024-03-10 17:12:59+00:00,This repository is created for the project in Testing and Verification of Digital Circuits course.,0,tlianidis/EEK23_Present_Cipher_Encryption_Core_Lianidis,770009822,SystemVerilog,EEK23_Present_Cipher_Encryption_Core_Lianidis,1081,0,2024-03-10 17:28:51+00:00,[],
17054,https://github.com/Srivathsa2304/4KB_BOUNDARY_AXI.git,2024-03-28 03:52:34+00:00,,0,Srivathsa2304/4KB_BOUNDARY_AXI,778615472,SystemVerilog,4KB_BOUNDARY_AXI,5,0,2024-03-28 03:53:09+00:00,[],
17055,https://github.com/huynguyendinhhcmut/lab2_ex3.git,2024-03-28 09:13:06+00:00,,0,huynguyendinhhcmut/lab2_ex3,778720002,SystemVerilog,lab2_ex3,3,0,2024-03-28 09:13:33+00:00,[],
17056,https://github.com/huynguyendinhhcmut/lab1_ex1.git,2024-03-23 13:15:17+00:00,,0,huynguyendinhhcmut/lab1_ex1,776421991,SystemVerilog,lab1_ex1,8,0,2024-03-23 13:17:07+00:00,[],
17058,https://github.com/mohamedhossam184/TX.git,2024-03-31 17:31:20+00:00,,0,mohamedhossam184/TX,780099477,SystemVerilog,TX,139,0,2024-03-31 17:33:07+00:00,[],
17059,https://github.com/FordMiki/hardware-artificial-neuron.git,2024-03-30 14:40:22+00:00,UNIVERISTY PROJECT: Implemented artificial neuron for deepl learning hardware accelerator.,0,FordMiki/hardware-artificial-neuron,779692579,SystemVerilog,hardware-artificial-neuron,443,0,2024-04-01 11:19:08+00:00,[],
17060,https://github.com/argval/Car-Headlight-Simulator.git,2024-04-04 11:37:16+00:00,,0,argval/Car-Headlight-Simulator,781966619,SystemVerilog,Car-Headlight-Simulator,7,0,2024-04-04 15:01:12+00:00,[],https://api.github.com/licenses/apache-2.0
17061,https://github.com/Rahma-Aly/APB.git,2024-04-04 19:25:06+00:00,"A simple implementation of the APB behavior , that's verified using a simple UVM environment ",0,Rahma-Aly/APB,782173483,SystemVerilog,APB,7,0,2024-04-04 19:56:48+00:00,[],
17062,https://github.com/KULeuven-MICAS/mem_def.git,2024-03-13 12:54:05+00:00,,0,KULeuven-MICAS/mem_def,771517849,SystemVerilog,mem_def,10,0,2024-04-05 17:07:40+00:00,[],
17063,https://github.com/huynguyendinhhcmut/lab3-Structural.git,2024-04-10 17:16:28+00:00,,0,huynguyendinhhcmut/lab3-Structural,784848688,SystemVerilog,lab3-Structural,8,0,2024-04-10 17:18:27+00:00,[],
17064,https://github.com/cleverever/sequential-adder.git,2024-04-06 02:07:16+00:00,A simple sequential adder to practice UVM,0,cleverever/sequential-adder,782772997,SystemVerilog,sequential-adder,5,0,2024-04-10 04:14:33+00:00,[],
17065,https://github.com/slmnemo/verilator_hierarchical_testing.git,2024-04-10 23:26:15+00:00,Test Repository to show that Verilator hierarchical referencing with parameters seems to be very buggy.,0,slmnemo/verilator_hierarchical_testing,784968005,SystemVerilog,verilator_hierarchical_testing,1,0,2024-04-10 23:26:40+00:00,[],
17066,https://github.com/24x7fpga/MIPsSingleCycle.git,2024-04-08 15:08:39+00:00,Repository containing verilog code implementing of MIPS single cycle architecture.,0,24x7fpga/MIPsSingleCycle,783785582,SystemVerilog,MIPsSingleCycle,14,0,2024-04-08 15:27:04+00:00,[],
17067,https://github.com/ismartsid/Design_and_Verification.git,2024-04-07 04:31:58+00:00,This repositary contain different designs and their testbenches,0,ismartsid/Design_and_Verification,783151429,SystemVerilog,Design_and_Verification,13,0,2024-04-08 17:41:41+00:00,[],
17068,https://github.com/ndstung/273_project.git,2024-04-09 18:22:38+00:00,,0,ndstung/273_project,784379039,SystemVerilog,273_project,14,0,2024-04-09 23:13:46+00:00,[],
17069,https://github.com/andytu101/Viterbi-Algorithm.git,2024-04-11 03:44:20+00:00,,0,andytu101/Viterbi-Algorithm,785031866,SystemVerilog,Viterbi-Algorithm,2869,0,2024-04-11 03:51:46+00:00,[],
17070,https://github.com/elisavetpaltidou/test.git,2024-04-10 17:50:14+00:00,,0,elisavetpaltidou/test,784861769,SystemVerilog,test,18,0,2024-04-10 19:45:19+00:00,[],
17071,https://github.com/deb366/SVbasics.git,2024-04-10 14:50:05+00:00,,0,deb366/SVbasics,784783736,SystemVerilog,SVbasics,38,0,2024-04-10 14:55:08+00:00,[],
17072,https://github.com/expologtechno/APB_timer.git,2024-03-18 07:04:13+00:00,,0,expologtechno/APB_timer,773662139,SystemVerilog,APB_timer,1493,0,2024-03-21 11:05:17+00:00,[],
17073,https://github.com/mleiwe/TransposonDetection.git,2024-03-22 08:06:53+00:00,Test Repository for detecting transposons from FastQ files,0,mleiwe/TransposonDetection,775873672,SystemVerilog,TransposonDetection,17404,0,2024-04-12 09:11:49+00:00,[],
17074,https://github.com/aGhandhii/EE-470.git,2024-04-11 17:47:50+00:00,Comp Arch II Project,0,aGhandhii/EE-470,785345777,SystemVerilog,EE-470,26,0,2024-04-11 17:50:22+00:00,[],
17075,https://github.com/karthik5102001/SPI_Protocol--SV.git,2024-04-09 11:11:05+00:00,System_Verilog based Design and Verification Environment,0,karthik5102001/SPI_Protocol--SV,784188613,SystemVerilog,SPI_Protocol--SV,331,0,2024-04-09 11:16:05+00:00,[],
17076,https://github.com/yangmichaely/VerilogPractice.git,2024-04-05 23:42:45+00:00,,0,yangmichaely/VerilogPractice,782744811,SystemVerilog,VerilogPractice,81,0,2024-04-05 23:44:19+00:00,[],
17077,https://github.com/karnatiraviteja/comb_ckt_mul.git,2024-04-13 11:48:34+00:00,Combinational Circuit - 4 bit multiplier,0,karnatiraviteja/comb_ckt_mul,786088601,SystemVerilog,comb_ckt_mul,15,0,2024-04-13 12:12:36+00:00,[],
17079,https://github.com/AW5178/riscv-implementations.git,2024-03-06 01:32:14+00:00,A repository where I explore various implementations of the RISC-V ISA  in SystemVerilog.,0,AW5178/riscv-implementations,767838574,SystemVerilog,riscv-implementations,5,0,2024-03-06 03:53:38+00:00,[],
17080,https://github.com/andreywhccc/ENV.git,2024-03-10 15:59:46+00:00,,0,andreywhccc/ENV,769985599,SystemVerilog,ENV,1,0,2024-03-10 16:01:16+00:00,[],
17081,https://github.com/madepalliSriVenkataKrishnaPraveen/Router1x3-Test-bench.git,2024-03-14 22:13:10+00:00,It is the test bench for the router1x3 code,0,madepalliSriVenkataKrishnaPraveen/Router1x3-Test-bench,772282395,SystemVerilog,Router1x3-Test-bench,37,0,2024-03-14 22:19:40+00:00,[],
17082,https://github.com/Benjayson1218/CPEN-211.git,2024-03-15 03:01:36+00:00,Labs for the creation of a simple RISC machine,0,Benjayson1218/CPEN-211,772356016,SystemVerilog,CPEN-211,793,0,2024-03-15 03:08:46+00:00,[],
17083,https://github.com/TayybaShafiq/Lab6.git,2024-03-18 19:46:32+00:00,,0,TayybaShafiq/Lab6,774014416,SystemVerilog,Lab6,37,0,2024-03-18 19:47:59+00:00,[],
17084,https://github.com/wfhcv/uvm-adder-without-scoreboard.git,2024-03-20 04:04:06+00:00,simple-uvm-testbench,0,wfhcv/uvm-adder-without-scoreboard,774724346,SystemVerilog,uvm-adder-without-scoreboard,4,0,2024-03-20 04:05:38+00:00,[],
17085,https://github.com/PNatarajan123/SLC3_Computer.git,2024-03-19 22:03:25+00:00,SLC3 Computer Built using System Verilog,0,PNatarajan123/SLC3_Computer,774626186,SystemVerilog,SLC3_Computer,195,0,2024-03-19 22:08:02+00:00,[],
17086,https://github.com/FenixVu442/MIPS-Single-Cycle-CPU-SystemVerilog.git,2024-03-20 20:32:33+00:00,"In this project, I built a simplified MIPS single-cycle processor using SystemVerilog. I will then load a test program and confirm that the system works ",0,FenixVu442/MIPS-Single-Cycle-CPU-SystemVerilog,775135836,SystemVerilog,MIPS-Single-Cycle-CPU-SystemVerilog,4391,0,2024-03-20 20:38:36+00:00,[],
17087,https://github.com/Arunvaishnav7435/Clock-division.git,2024-03-20 12:58:14+00:00,,0,Arunvaishnav7435/Clock-division,774924866,SystemVerilog,Clock-division,3,0,2024-03-20 17:43:31+00:00,[],
17088,https://github.com/sooyounga/usb.git,2024-03-21 22:37:15+00:00,based on 18-341 cmu course lab,0,sooyounga/usb,775711447,SystemVerilog,usb,764,0,2024-03-21 22:37:21+00:00,[],
17089,https://github.com/Arunvaishnav7435/fork_joinnone.git,2024-03-22 17:52:19+00:00,,0,Arunvaishnav7435/fork_joinnone,776112721,SystemVerilog,fork_joinnone,3,0,2024-03-22 17:54:33+00:00,[],
17090,https://github.com/xieyudi/sv-4-verif.git,2024-03-22 22:39:04+00:00,This repo includes code snippets during my study of SystemVerilog For Verification,0,xieyudi/sv-4-verif,776207517,SystemVerilog,sv-4-verif,7,0,2024-03-22 22:39:48+00:00,[],
17091,https://github.com/karaca-i/UART_Communication_Hardware.git,2024-03-22 20:38:49+00:00,,0,karaca-i/UART_Communication_Hardware,776173264,SystemVerilog,UART_Communication_Hardware,274,0,2024-03-22 20:52:39+00:00,[],
17092,https://github.com/JPflat/ps2_keyboard_controller.git,2024-03-23 07:25:59+00:00,,0,JPflat/ps2_keyboard_controller,776324333,SystemVerilog,ps2_keyboard_controller,14,0,2024-03-23 08:25:12+00:00,[],
17093,https://github.com/BNiVeDiTa29/Formal-Verification-Project.git,2024-03-11 21:52:10+00:00,Design and Formal Verification of a Sequence Detector FSM for Enhanced Security Applications,0,BNiVeDiTa29/Formal-Verification-Project,770627967,SystemVerilog,Formal-Verification-Project,19,0,2024-03-27 03:57:06+00:00,[],
17094,https://github.com/gunnchOS3k/lab1_eg3573_ece_6443.git,2024-03-27 21:58:03+00:00,,0,gunnchOS3k/lab1_eg3573_ece_6443,778523272,SystemVerilog,lab1_eg3573_ece_6443,2397,0,2024-03-27 21:58:09+00:00,[],
17095,https://github.com/vincentzhang6130/My-First-UVM-Verification.git,2024-03-28 16:06:46+00:00,,0,vincentzhang6130/My-First-UVM-Verification,778894067,SystemVerilog,My-First-UVM-Verification,6,0,2024-03-28 16:07:28+00:00,[],
17096,https://github.com/damar-marin/fpga-expendedora.git,2024-03-29 03:31:22+00:00,Este proyecto utiliza una Finite State Machine (FSM) dentro de Verilog para diseñar una máquina expendedora hipotética con productos de 30 pesos. Solamente acepta monedas de 10 pesos y billetes de 20.,0,damar-marin/fpga-expendedora,779102472,SystemVerilog,fpga-expendedora,158,0,2024-03-29 03:35:27+00:00,[],
17097,https://github.com/JuniorBrice/PARAMETERIZED-ASYNC-FIFO.git,2024-03-28 18:01:28+00:00,"A fully parameterized Asynchronous FIFO with a corresponding testbench, written in Verilog.",0,JuniorBrice/PARAMETERIZED-ASYNC-FIFO,778942541,SystemVerilog,PARAMETERIZED-ASYNC-FIFO,33,0,2024-03-28 18:06:00+00:00,[],
17098,https://github.com/Shakil06/EEE458_VLSICircuitsDesignIILab_Project.git,2024-03-30 22:40:28+00:00,,0,Shakil06/EEE458_VLSICircuitsDesignIILab_Project,779831463,SystemVerilog,EEE458_VLSICircuitsDesignIILab_Project,1393,0,2024-03-30 23:25:34+00:00,[],
17099,https://github.com/sriram1106/edxpython.git,2024-04-01 16:48:18+00:00,,0,sriram1106/edxpython,780519968,SystemVerilog,edxpython,1154,0,2024-04-01 17:13:33+00:00,[],
17100,https://github.com/krasnoteh/Floyds-algoritm-on-verilog.git,2024-04-02 21:09:23+00:00,,0,krasnoteh/Floyds-algoritm-on-verilog,781155372,SystemVerilog,Floyds-algoritm-on-verilog,3,0,2024-04-02 21:11:57+00:00,[],
17101,https://github.com/ChinmayBhide154/FPGA-Motor-Controller.git,2024-03-27 22:48:57+00:00,,0,ChinmayBhide154/FPGA-Motor-Controller,778537682,SystemVerilog,FPGA-Motor-Controller,106,0,2024-03-31 23:55:27+00:00,[],
17102,https://github.com/turri21/KEY_Test-neptuno.git,2024-04-01 00:06:36+00:00,,0,turri21/KEY_Test-neptuno,780191150,SystemVerilog,KEY_Test-neptuno,241,0,2024-04-01 00:15:08+00:00,[],
17103,https://github.com/noahelec/RISC-Machine-CPU-Project.git,2024-04-06 04:24:46+00:00,CPEN 211: Introduction to Microcomputers 2023W1 with Prof. Aamodt,0,noahelec/RISC-Machine-CPU-Project,782800136,SystemVerilog,RISC-Machine-CPU-Project,40,0,2024-04-06 04:27:48+00:00,[],
17104,https://github.com/EvgenyCeed/gf_muls.git,2024-03-23 10:06:03+00:00,,0,EvgenyCeed/gf_muls,776368229,SystemVerilog,gf_muls,7,0,2024-03-23 10:25:20+00:00,[],
17105,https://github.com/2024-Spring-SoC/lab3.git,2024-03-29 07:51:50+00:00,Lab3. DMA,0,2024-Spring-SoC/lab3,779173035,SystemVerilog,lab3,9,0,2024-04-09 04:29:50+00:00,[],
17106,https://github.com/leave753951963/master_project1.git,2024-03-28 19:52:36+00:00,systolic array,0,leave753951963/master_project1,778982305,SystemVerilog,master_project1,35,0,2024-03-28 19:54:14+00:00,[],
17107,https://github.com/fpga2fun/hdl_mod.git,2024-04-09 09:04:30+00:00,,0,fpga2fun/hdl_mod,784138707,SystemVerilog,hdl_mod,214267,0,2024-04-09 09:22:24+00:00,[],
17108,https://github.com/Matthew-Bowlby/ECE551-Proj.git,2024-04-09 19:40:52+00:00,,0,Matthew-Bowlby/ECE551-Proj,784407452,SystemVerilog,ECE551-Proj,1,0,2024-04-09 23:33:21+00:00,[],
17109,https://github.com/Yashaswini-19/Synchronous_FIFO_.git,2024-03-26 17:09:03+00:00,"This repo has complete testbench architecture for Synchronous FIFO(First in First Out ) basically a queue, tested using EDA playground",0,Yashaswini-19/Synchronous_FIFO_,777878090,SystemVerilog,Synchronous_FIFO_,15,0,2024-03-30 15:26:47+00:00,[],
17110,https://github.com/MrMunoz/aes_ofdm_baseband.git,2024-04-01 18:22:16+00:00,,0,MrMunoz/aes_ofdm_baseband,780560508,SystemVerilog,aes_ofdm_baseband,45,0,2024-04-01 18:27:49+00:00,[],
17111,https://github.com/ananya343B/b_float_mac.git,2024-04-05 10:09:06+00:00,,0,ananya343B/b_float_mac,782444191,SystemVerilog,b_float_mac,5,0,2024-04-11 09:54:57+00:00,[],
17112,https://github.com/geanjrii/Contador.git,2024-04-13 03:12:35+00:00,,0,geanjrii/Contador,785966662,SystemVerilog,Contador,7928,0,2024-04-13 03:20:25+00:00,[],
17114,https://github.com/parvathy10/verification-of-4-bit-multiplier.git,2024-03-09 00:20:26+00:00,,0,parvathy10/verification-of-4-bit-multiplier,769389372,SystemVerilog,verification-of-4-bit-multiplier,1,0,2024-03-09 00:32:44+00:00,[],
17115,https://github.com/MahmouodMagdi/64-bit-Single-Cycle-RISC-V-Core.git,2024-03-10 23:31:34+00:00,Digital Design and ASIC Implementation of a 64-bit Single Cycle RISC-V Core that supports RV32I ISA,0,MahmouodMagdi/64-bit-Single-Cycle-RISC-V-Core,770108805,SystemVerilog,64-bit-Single-Cycle-RISC-V-Core,21,0,2024-03-10 23:37:10+00:00,[],https://api.github.com/licenses/mit
17116,https://github.com/Arunvaishnav7435/while_loop.git,2024-03-11 06:03:59+00:00,,0,Arunvaishnav7435/while_loop,770203079,SystemVerilog,while_loop,3,0,2024-03-11 06:04:20+00:00,[],
17117,https://github.com/dvdsosa/DPUCZDX8G-IP.git,2024-03-18 15:45:06+00:00,,0,dvdsosa/DPUCZDX8G-IP,773902248,SystemVerilog,DPUCZDX8G-IP,80694,0,2024-03-18 15:47:39+00:00,[],
17118,https://github.com/mohit-verma-mv/starting_test_by_start_method.git,2024-03-19 12:10:47+00:00,,0,mohit-verma-mv/starting_test_by_start_method,774357606,SystemVerilog,starting_test_by_start_method,5,0,2024-03-19 12:20:18+00:00,[],
17119,https://github.com/hafizmuhammadahmad01/lab_6.git,2024-03-19 07:24:39+00:00,,0,hafizmuhammadahmad01/lab_6,774234389,SystemVerilog,lab_6,1,0,2024-03-19 07:28:01+00:00,[],
17120,https://github.com/gjconwell/ECSE_6680.git,2024-03-13 02:50:16+00:00,Projects for ECSE 6680 - Advanced VSLI Design,0,gjconwell/ECSE_6680,771290064,SystemVerilog,ECSE_6680,17,0,2024-03-17 05:23:20+00:00,[],
17121,https://github.com/Rahma-Aly/Elevator-Controller.git,2024-03-18 18:04:40+00:00,Design of a controller for a system that consists of 2 elevators ,0,Rahma-Aly/Elevator-Controller,773970848,SystemVerilog,Elevator-Controller,16,0,2024-03-18 18:07:00+00:00,[],
17122,https://github.com/plexlad/digital-circuits-verilog-3.git,2024-03-20 19:40:42+00:00,,0,plexlad/digital-circuits-verilog-3,775116092,SystemVerilog,digital-circuits-verilog-3,10,0,2024-03-23 00:37:47+00:00,[],
17123,https://github.com/saira-ijaz/lab_7.git,2024-03-25 16:42:57+00:00,,0,saira-ijaz/lab_7,777330704,SystemVerilog,lab_7,2175,0,2024-03-25 16:44:05+00:00,[],
17124,https://github.com/eve-wils/lab3.git,2024-03-25 15:47:42+00:00,Computer Architecture Lab 3 Code,0,eve-wils/lab3,777305681,SystemVerilog,lab3,6,0,2024-03-25 21:29:10+00:00,[],
17125,https://github.com/huynguyendinhhcmut/lab1_ex2.git,2024-03-23 13:17:44+00:00,,0,huynguyendinhhcmut/lab1_ex2,776422770,SystemVerilog,lab1_ex2,4,0,2024-03-23 13:18:21+00:00,[],
17126,https://github.com/SeanMarotta/DPUCZDX8G_VAI_v3.0.git,2024-03-28 06:45:29+00:00,,0,SeanMarotta/DPUCZDX8G_VAI_v3.0,778665400,SystemVerilog,DPUCZDX8G_VAI_v3.0,80695,0,2024-03-28 06:48:29+00:00,[],
17127,https://github.com/parvathy10/adder-verification.git,2024-03-27 11:43:38+00:00,,0,parvathy10/adder-verification,778260443,SystemVerilog,adder-verification,4,0,2024-03-27 11:44:27+00:00,[],
17128,https://github.com/Spencillian/PianoTilesChip18224.git,2024-04-02 01:34:45+00:00,,0,Spencillian/PianoTilesChip18224,780694753,SystemVerilog,PianoTilesChip18224,6,0,2024-04-04 02:29:37+00:00,[],
17129,https://github.com/DmitryZlobec/hdmi.git,2024-04-04 17:01:37+00:00,,0,DmitryZlobec/hdmi,782114477,SystemVerilog,hdmi,109,0,2024-04-04 17:04:26+00:00,[],
17130,https://github.com/estebandenombre/RISC-V.git,2024-04-04 12:42:58+00:00,Design and programming of a RISC microcontroller on FPGA using VHDL,0,estebandenombre/RISC-V,781994859,SystemVerilog,RISC-V,154,0,2024-04-04 13:38:32+00:00,[],
17131,https://github.com/Vadoseg/TESTING.git,2024-04-06 17:47:46+00:00,Test for VIVADO,0,Vadoseg/TESTING,783015825,SystemVerilog,TESTING,2,0,2024-04-06 17:52:55+00:00,[],
17132,https://github.com/orzohar1409/sim3.git,2024-04-04 07:54:03+00:00,,0,orzohar1409/sim3,781874662,SystemVerilog,sim3,366,0,2024-04-04 07:57:32+00:00,[],
17133,https://github.com/notkuroneko/decade_clock_verilog.git,2024-03-25 14:44:44+00:00,,1,notkuroneko/decade_clock_verilog,777275681,SystemVerilog,decade_clock_verilog,115,0,2024-03-26 03:35:10+00:00,[],
17134,https://github.com/OlegPM/i2c_uart.git,2024-03-28 19:23:26+00:00,,0,OlegPM/i2c_uart,778972622,SystemVerilog,i2c_uart,16,0,2024-03-28 19:24:46+00:00,[],
17135,https://github.com/chenpeijun256/multi_core_riscv.git,2024-03-28 06:12:21+00:00,"RISC-V core , simulator, verilog, rust, c",0,chenpeijun256/multi_core_riscv,778654450,SystemVerilog,multi_core_riscv,66,0,2024-03-28 06:27:37+00:00,[],https://api.github.com/licenses/mit
17136,https://github.com/huynguyendinhhcmut/lab1_ex3.git,2024-03-23 13:18:49+00:00,,0,huynguyendinhhcmut/lab1_ex3,776423118,SystemVerilog,lab1_ex3,8,0,2024-03-23 13:19:27+00:00,[],
17137,https://github.com/hexmaster111/TinyMcu_TestingAround.git,2024-03-31 17:28:20+00:00,,0,hexmaster111/TinyMcu_TestingAround,780098632,SystemVerilog,TinyMcu_TestingAround,3,0,2024-03-31 17:28:26+00:00,[],
17138,https://github.com/FordMiki/hardware-multi-layer-perceptron.git,2024-03-30 14:32:23+00:00,UNIVERISTY PROJECT: Used artificial neuron structure to implement a deep learning model on hardware.,0,FordMiki/hardware-multi-layer-perceptron,779690099,SystemVerilog,hardware-multi-layer-perceptron,369,0,2024-04-01 11:18:30+00:00,[],
17139,https://github.com/MasterPlayer/mp_irq_generator.git,2024-04-07 15:39:53+00:00,IRQ generator with configurable duration,0,MasterPlayer/mp_irq_generator,783330833,SystemVerilog,mp_irq_generator,1,0,2024-04-07 16:11:04+00:00,[],https://api.github.com/licenses/mit
17140,https://github.com/expologtechno/AHB_memory_002.git,2024-03-11 06:46:12+00:00,,0,expologtechno/AHB_memory_002,770217195,SystemVerilog,AHB_memory_002,759,0,2024-03-12 10:15:08+00:00,[],
17141,https://github.com/aakash-n-gupta/SynthCraft.git,2024-04-07 07:12:54+00:00," Simple modules in systemverilog along with testbenches, built using makefiles.",0,aakash-n-gupta/SynthCraft,783187529,SystemVerilog,SynthCraft,19,0,2024-04-07 07:15:09+00:00,[],
17142,https://github.com/SparshJohri/DAV_Capstone.git,2024-04-02 21:13:11+00:00,"""Mix of DAV and DDAV. PvZ-type of game""",0,SparshJohri/DAV_Capstone,781156828,SystemVerilog,DAV_Capstone,185,0,2024-04-02 21:13:31+00:00,[],
17145,https://github.com/qingjie1908/Verilog_Learning.git,2024-03-22 09:02:31+00:00,Verilog Learning,0,qingjie1908/Verilog_Learning,775895015,SystemVerilog,Verilog_Learning,142,0,2024-04-07 10:02:32+00:00,[],
17146,https://github.com/RehanQasim-dev/FYP.git,2024-03-06 08:19:32+00:00,,0,RehanQasim-dev/FYP,767965975,SystemVerilog,FYP,8781,0,2024-03-06 08:24:20+00:00,[],
17147,https://github.com/Alirezabln/Galaga.git,2024-04-06 21:44:42+00:00,Making a Galaga clone for my final FPGA project,0,Alirezabln/Galaga,783074202,SystemVerilog,Galaga,394,0,2024-04-06 21:44:51+00:00,[],https://api.github.com/licenses/mit
17148,https://github.com/ayandeephazra/QCScheduler.git,2024-03-20 13:14:36+00:00,,0,ayandeephazra/QCScheduler,774932353,SystemVerilog,QCScheduler,47,0,2024-03-20 13:17:02+00:00,[],https://api.github.com/licenses/mit
17149,https://github.com/NaveenktThummala/SV_Project.git,2024-03-12 19:15:15+00:00,Study,0,NaveenktThummala/SV_Project,771147302,SystemVerilog,SV_Project,1820,0,2024-03-21 04:58:43+00:00,[],
17150,https://github.com/Mahjabeen632/lab_5.git,2024-03-18 15:29:31+00:00,,0,Mahjabeen632/lab_5,773893910,SystemVerilog,lab_5,2,0,2024-03-18 15:30:25+00:00,[],
17151,https://github.com/parvathy10/uart-verification.git,2024-03-20 13:35:48+00:00,,0,parvathy10/uart-verification,774942391,SystemVerilog,uart-verification,2,0,2024-03-20 13:36:31+00:00,[],
17152,https://github.com/andreemedeiros/Adder-UVM.git,2024-03-24 05:20:39+00:00,Adder UVM Verification.,0,andreemedeiros/Adder-UVM,776656815,SystemVerilog,Adder-UVM,86,0,2024-03-24 05:41:50+00:00,[],https://api.github.com/licenses/mit
17153,https://github.com/Arunvaishnav7435/deep_shallow_copy.git,2024-03-26 13:30:10+00:00,,0,Arunvaishnav7435/deep_shallow_copy,777769849,SystemVerilog,deep_shallow_copy,5,0,2024-03-26 13:31:00+00:00,[],
17154,https://github.com/TayybaShafiq/Lab7.git,2024-03-26 16:47:36+00:00,,0,TayybaShafiq/Lab7,777868600,SystemVerilog,Lab7,45,0,2024-03-26 16:49:48+00:00,[],
17155,https://github.com/leave753951963/master_project.git,2024-03-28 19:40:09+00:00,systolic array,0,leave753951963/master_project,778978182,SystemVerilog,master_project,7,0,2024-03-28 19:42:36+00:00,[],
17156,https://github.com/grahampfeifer1/EE-3954-Project-1.git,2024-03-25 02:01:59+00:00,,0,grahampfeifer1/EE-3954-Project-1,777003600,SystemVerilog,EE-3954-Project-1,2,0,2024-03-26 17:13:03+00:00,[],
17157,https://github.com/egeipekci/CS223.git,2024-03-28 22:58:14+00:00,Digital Design Labs,0,egeipekci/CS223,779037302,SystemVerilog,CS223,2512,0,2024-03-28 23:14:37+00:00,[],
17158,https://github.com/davidz1234567890/lab44.git,2024-03-24 17:58:07+00:00,,0,davidz1234567890/lab44,776884755,SystemVerilog,lab44,97,0,2024-03-24 17:58:22+00:00,[],
17159,https://github.com/curtis-mccormick/FinalProject.git,2024-04-01 17:24:45+00:00,,0,curtis-mccormick/FinalProject,780536398,SystemVerilog,FinalProject,7230,0,2024-04-01 17:24:53+00:00,[],
17160,https://github.com/LakshmiRajkumarM/Decoder-3_8-Verification.git,2024-03-31 05:29:25+00:00,,0,LakshmiRajkumarM/Decoder-3_8-Verification,779905290,SystemVerilog,Decoder-3_8-Verification,7,0,2024-04-01 04:50:53+00:00,[],
17161,https://github.com/theo-wolff/pcsn.git,2024-04-01 12:40:35+00:00,,0,theo-wolff/pcsn,780415767,SystemVerilog,pcsn,170,0,2024-04-01 12:59:23+00:00,[],
17162,https://github.com/CitronSeason/hdmi_tx_test.git,2024-03-29 16:36:10+00:00,,0,CitronSeason/hdmi_tx_test,779354982,SystemVerilog,hdmi_tx_test,11,0,2024-03-29 16:36:18+00:00,[],
17163,https://github.com/aaroncpascua/464_Project.git,2024-04-02 02:23:47+00:00,ECE 564 Final Project - Quantum Computer,0,aaroncpascua/464_Project,780707971,SystemVerilog,464_Project,751,0,2024-04-02 02:23:52+00:00,[],
17164,https://github.com/Abdullah-61/Pipeline.git,2024-04-02 07:05:22+00:00,,0,Abdullah-61/Pipeline,780793028,SystemVerilog,Pipeline,37,0,2024-04-02 07:07:11+00:00,[],
17165,https://github.com/dcmid/fifo.git,2024-03-12 08:14:13+00:00,,0,dcmid/fifo,770820415,SystemVerilog,fifo,1,0,2024-03-12 08:14:48+00:00,[],
17166,https://github.com/daedeleus/4-Bit-shift-register.git,2024-03-11 14:51:16+00:00,4 Bit shift register created using Quartus prime,0,daedeleus/4-Bit-shift-register,770436977,SystemVerilog,4-Bit-shift-register,9082,0,2024-03-11 14:57:19+00:00,[],
17167,https://github.com/BaronLuisYoung/ECE194BB_Final_Project.git,2024-03-11 22:49:55+00:00,Simple Processor that crosses clock domains. ,0,BaronLuisYoung/ECE194BB_Final_Project,770645394,SystemVerilog,ECE194BB_Final_Project,225,0,2024-03-11 23:00:11+00:00,[],
17168,https://github.com/Navneet-Singh20/Ethernet_SV.git,2024-03-07 17:48:00+00:00,I have verified Ethernet Switch Architecture with SV Environment,0,Navneet-Singh20/Ethernet_SV,768771962,SystemVerilog,Ethernet_SV,589,0,2024-03-07 18:00:27+00:00,[],
17169,https://github.com/Navneet-Singh20/Sync_FIFO_DT.git,2024-03-08 07:18:22+00:00,I have designed Sync FIFO and Verified it by Direct testing EDAPlaygound Link : https://edaplayground.com/x/dPAx,0,Navneet-Singh20/Sync_FIFO_DT,769021521,SystemVerilog,Sync_FIFO_DT,448,0,2024-03-08 07:21:21+00:00,[],
17170,https://github.com/david4270/concepts-verilog.git,2024-03-09 19:48:09+00:00,,0,david4270/concepts-verilog,769695393,SystemVerilog,concepts-verilog,736,0,2024-03-09 19:50:27+00:00,[],
17171,https://github.com/rohith2h2/slow-clock-to-fast-clock-Synchronizer.git,2024-03-10 20:03:43+00:00,,0,rohith2h2/slow-clock-to-fast-clock-Synchronizer,770060310,SystemVerilog,slow-clock-to-fast-clock-Synchronizer,3,0,2024-03-10 20:04:47+00:00,[],
17172,https://github.com/spencercheese/uxn-multi.git,2024-03-06 05:10:01+00:00,,0,spencercheese/uxn-multi,767898961,SystemVerilog,uxn-multi,9,0,2024-03-06 05:11:56+00:00,[],
17173,https://github.com/Rachana-Kaparthi/reconfigurable_PE.git,2024-04-05 04:08:46+00:00,,0,Rachana-Kaparthi/reconfigurable_PE,782318329,SystemVerilog,reconfigurable_PE,8,0,2024-04-05 04:36:05+00:00,[],
17174,https://github.com/oluseye-akomolede/fp_adder_testbench_main.git,2024-04-04 20:38:56+00:00,A floating point adder and accompanying testbench,0,oluseye-akomolede/fp_adder_testbench_main,782199947,SystemVerilog,fp_adder_testbench_main,7,0,2024-04-04 20:39:02+00:00,[],
17175,https://github.com/OOPSLA24-Verilock/verilock.git,2024-04-03 13:21:46+00:00,A verification tool that can detect deadlocks in asynchronous circuits specified in SystemVerilog.,0,OOPSLA24-Verilock/verilock,781483415,SystemVerilog,verilock,7160,0,2024-04-06 11:52:13+00:00,[],
17176,https://github.com/trdenton/ece1718_project_p2.git,2024-04-07 18:49:53+00:00,,0,trdenton/ece1718_project_p2,783388461,SystemVerilog,ece1718_project_p2,3,0,2024-04-07 18:50:12+00:00,[],
17177,https://github.com/ariclia/TSC2024NEW.git,2024-03-11 08:09:08+00:00,,0,ariclia/TSC2024NEW,770248360,SystemVerilog,TSC2024NEW,8320,0,2024-03-11 08:27:11+00:00,[],
17178,https://github.com/esthw/cva6_cordic.git,2024-04-08 06:59:29+00:00,,0,esthw/cva6_cordic,783576637,SystemVerilog,cva6_cordic,1012,0,2024-04-08 07:17:34+00:00,[],
17179,https://github.com/wandwan/141l.git,2024-04-08 23:37:06+00:00,,0,wandwan/141l,783967318,SystemVerilog,141l,2,0,2024-04-08 23:38:13+00:00,[],
17180,https://github.com/ubc-subbots/Sound-Localization-Firmware.git,2024-03-17 22:32:57+00:00,,0,ubc-subbots/Sound-Localization-Firmware,773529413,SystemVerilog,Sound-Localization-Firmware,17354,0,2024-03-29 22:29:51+00:00,[],
17181,https://github.com/oluseye-akomolede/PCI-E-Architecture.git,2024-04-09 07:07:46+00:00,This repository will contain a full PCI-E architecture when complete,0,oluseye-akomolede/PCI-E-Architecture,784092537,SystemVerilog,PCI-E-Architecture,8,0,2024-04-09 07:07:51+00:00,[],
17182,https://github.com/Daniel4bit/RISC-V_HDP.git,2024-03-06 10:48:38+00:00,Training Files,1,Daniel4bit/RISC-V_HDP,768032389,SystemVerilog,RISC-V_HDP,832,0,2024-03-13 16:24:22+00:00,[],
17183,https://github.com/Matthew-Otto/Goldschmidt-div-sqrt.git,2024-04-01 21:40:30+00:00,,0,Matthew-Otto/Goldschmidt-div-sqrt,780630467,SystemVerilog,Goldschmidt-div-sqrt,2059,0,2024-04-01 22:00:13+00:00,[],
17184,https://github.com/aGhandhii/gb-apu.git,2024-04-09 04:48:28+00:00,GameBoy Audio Processing Unit,0,aGhandhii/gb-apu,784048448,SystemVerilog,gb-apu,26,0,2024-04-09 04:56:28+00:00,"['audio-processing', 'computer-architecture', 'emulation', 'gameboy-emulator', 'hdl', 'systemverilog']",
17185,https://github.com/rntvilela/sprv32.git,2024-04-09 18:47:33+00:00,RISC-V (RV32I) - Single-cycle processor,0,rntvilela/sprv32,784388600,SystemVerilog,sprv32,3,0,2024-04-09 20:33:08+00:00,[],
17186,https://github.com/kiwanowski/defmon-mister-sync.git,2024-04-09 19:23:40+00:00,Defmon sync adapter for mister,0,kiwanowski/defmon-mister-sync,784401591,SystemVerilog,defmon-mister-sync,2367,0,2024-04-12 09:02:36+00:00,[],
17187,https://github.com/KINGFIOX/digital.git,2024-04-12 03:15:30+00:00,,0,KINGFIOX/digital,785515171,SystemVerilog,digital,10,0,2024-04-12 07:16:46+00:00,[],
17188,https://github.com/geanjrii/Fechadura.git,2024-04-13 03:13:25+00:00,,0,geanjrii/Fechadura,785966845,SystemVerilog,Fechadura,7910,0,2024-04-13 03:21:24+00:00,[],
